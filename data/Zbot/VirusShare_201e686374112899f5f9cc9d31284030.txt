push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
cmpsl
inc
xor
mov
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
jmp
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
push
pop
test
je
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
or
add
bound
add
out
add
adc
add
mov
add
dec
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
jl
add
xor
add
pushf
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
and
add
add
and
add
and
add
add
hlt
and
add
add
loop
add
add
add
add
add
cmp
add
add
sub
add
add
add
add
pusha
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jo
add
movsb
and
add
and
add
add
out
add
adc
add
mov
add
dec
and
add
and
add
and
add
and
add
add
push
and
add
and
add
add
jl
add
xor
add
pushf
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
and
add
add
and
add
and
add
add
hlt
and
add
add
loop
add
add
add
add
add
cmp
add
add
sub
add
add
add
add
pusha
and
add
add
add
add
je
jne
jb
outsb
je
jb
arpl
jae
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
outsl
jbe
inc
imul
jns
add
roll
dec
gs
jo
jb
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
popa
je
inc
imul
jns
add
dec
add
popa
insb
inc
insb
popa
addr16
add
push
jb
jbe
je
push
jb
imul
inc
add
add
je
imul
bound
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
add
outsb
fs
insb
outsl
jae
add
push
gs
imul
test
inc
jb
popa
je
inc
jbe
outsb
je
add
repnz
imul
jb
je
arpl
add
push
push
je
imul
inc
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
xchg
add
je
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
push
dec
inc
dec
xor
cs
insb
add
pop
or
jae
dec
gs
popa
addr16
add
sbb
ja
jo
imul
or
je
outsl
arpl
add
jnp
inc
gs
imul
outsb
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
jae
push
gs
jne
jae
jb
outsl
jae
add
pop
dec
outsl
popa
fs
jne
jae
jb
add
pop
dec
jae
outsl
outsl
insl
gs
xchg
inc
gs
imul
js
push
add
xchg
push
push
gs
jae
addr16
add
rolb
jae
imul
push
push
inc
push
xor
cs
insb
add
add
inc
popa
outsb
arpl
add
add
dec
inc
imul
arpl
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
jb
outsl
jb
add
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
in
enter
movsb
xchg
xchg
data16
cmc
sub
inc
std
repnz
push
pop
push
cmp
add
sub
or
cmp
push
adc
inc
pop
adc
sbb
loop
mov
ficompl
fldcw
fnstsw
out
mov
stos
iret
or
pop
mov
out
and
push
sbb
cwtl
sub
or
lret
iret
adc
shrb
rcrl
xchg
mov
xchg
inc
mov
push
mov
stos
imul
cld
jno
movsb
fsubr
inc
stos
or
cmpl
xchg
dec
xchg
loope
mov
mov
insl
pop
inc
jge
arpl
pop
imul
in
cmc
sbb
clc
loopne
or
xchg
sti
jne
fmul
dec
in
arpl
dec
push
push
insb
or
lret
std
les
and
repnz
loope
rolb
pushf
adc
xor
jmp
loopne
inc
ja
xor
push
lret
jge
paddq
and
sub
push
add
movsb
sub
push
lea
out
outsb
mov
fincstp
and
mov
insb
mov
fwait
mov
mov
movsb
xchg
inc
loope
add
out
jbe
in
jmp
daa
stos
fidivl
sti
imul
aad
sub
adc
cmp
cmp
fildll
mov
jle
cwtl
pop
daa
push
push
in
push
mov
pop
jge,pt
adc
jmp
xor
push
popa
xchg
cli
jmp
shl
adc
ds
sub
bound
pop
jle
sub
inc
mov
push
sbb
rol
fsubrs
repz
popa
and
sti
xchg
inc
pop
mov
shlb
ja
push
lds
xchg
call
push
inc
hlt
arpl
add
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
sub
add
movsl
movsl
pop
scas
lods
lods
xor
mov
mov
mov
mov
mov
mov
lods
scas
scas
test
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jl
add
xchg
add
mov
inc
mov
ret
ret
stos
lret
lret
into
rcl
in
rcl
shl
ror
shl
int
lret
hlt
leave
leave
leave
repz
leave
lret
mov
mov
mov
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
rcl
sar
aad
xlat
std
xlat
xlat
xlat
fsin
aam
dec
into
sar
iret
into
into
aam
sar
iret
rcl
inc
ret
sar
mov
mov
lods
lods
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
scas
lods
lods
add
scas
sbb
mov
jnp
mov
ret
vpaddd
int3
lret
call
iret
sar
aam
aad
xlat
fcomp
fcom
fcos
aad
dec
iret
int
into
int3
int3
call
rcl
dec
int
inc
rol
mov
mov
scas
std
cmpsl
cmpsl
movsl
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
or
sbb
add
add
add
add
or
or
add
add
mov
mov
add
mov
inc
mov
mov
mov
mov
sar
mov
into
int3
into
call
rcl
call
xlat
xlat
call
call
aad
dec
into
int
int3
int3
lret
into
into
inc
mov
sarb
ljmp
cmpsl
cmpsl
jmp
cwtl
cwtl
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
xor
push
pop
pop
pop
fs
inc
aas
inc
sbb
sbb
push
push
or
sbb
aaa
xor
sub
and
adc
push
pop
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarb
leave
enter
into
call
aad
call
aad
call
iret
iret
dec
leave
leave
inc
ret
mov
mov
ljmp
movsl
movsl
pushf
fwait
popf
cltd
xchg
cwtl
lcall
addl
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
insl
xor
lcall
jb
arpl
push
push
push
xchg
cmp
cmp
mov
insl
insl
outsb
nop
arpl
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
int3
lret
enter
ret
mov
mov
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cltd
lcall
ds
ds
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
jo
pop
pop
pop
or
jns
xchg
mov
incb
jl
jnp
jnp
jo
outsb
out
gs
data16
ret
jg
ja
jns
arpl
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
jmp
pushf
pushf
call
test
decl
xchg
xchg
mov
mov
cwtl
mov
ja
jns
das
sub
add
add
add
add
add
add
add
add
add
mov
pop
push
cmpl
popf
cltd
lcall
mov
decb
lea
clc
jle
jle
jno
jno
jne
jne
jge
jle
addb
xchg
gs
cmp
and
jle
cmp
mov
stos
test
sti
stos
lods
lods
lods
stos
stos
test
mov
fwait
xchg
xchg
xchg
decl
addb
jl
jl
mov
cwtl
movsl
movsl
movsl
scas
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
pop
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
lods
call
addl
lea
xchg
std
cwtl
cwtl
cltd
stc
xchg
xchg
xchg
in
mov
or
addl
mov
push
push
push
or
or
dec
insb
insb
imul
test
fwait
fwait
lcall
cltd
cltd
stc
nop
xchg
std
mov
xchg
xchg
mov
nop
xchg
lcall
movsl
cmpsl
ljmp
mov
mov
mov
mov
std
mov
mov
movsl
mov
jl
lods
cmpsl
test
pop
pop
pop
adc
test
mov
pushf
xchg
xchg
incl
xchg
decb
xchg
xchg
sahf
popf
sahf
std
movsb
mov
mov
in
nop
xchg
in
test
jne
femms
dec
add
or
es
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
std
nop
mov
call
pushf
sahf
jmp
stos
pushl
test
mov
std
rorb
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
lds
cltd
decl
mov
nop
nop
nop
call
xchg
xchg
popf
sahf
pushf
movsl
cmpsb
movsl
test
test
notl
jl
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
fs
jb
mov
jg
addl
lea
xchg
notl
mov
lcall
lea
pushl
jae
mov
pop
dec
mov
xor
mov
test
mov
stos
stos
mov
movsl
movsb
add
mov
add
pop
adc
mov
ljmp
lcall
nop
nop
call
xchg
xchg
call
cltd
cwtl
lcall
mov
movsb
movsl
std
mov
lcall
nop
xchg
les
fwait
in
xchg
cltd
out
nop
xchg
cmc
nop
mov
cld
xchg
jg
std
xchg
jae
lcall
jmp
dec
inc
pushl
cmp
ljmp
sub
ljmp
or
mov
mov
lods
pushf
movsl
movsb
movsl
and
add
add
pop
pop
adc
mov
ljmp
fwait
call
xchg
xchg
lcall
fwait
pushf
lcall
sahf
sahf
lcall
xchg
xchg
call
cwtl
xchg
call
pushf
cld
pushf
lcall
sahf
xchg
xchg
cld
pushf
xchg
xchg
insb
insb
xchg
pop
pop
cwtl
push
dec
cltd
inc
cmp
fwait
xor
sahf
sub
mov
and
adc
stos
and
adc
lods
and
pushl
daa
adc
mov
adc
mov
push
mov
lahf
cltd
mov
scas
scas
scas
movsl
movsl
cmpsb
sub
movsb
movsl
movsl
add
pop
pop
adc
mov
ljmp
lcall
sahf
popf
lcall
mov
mov
call
mov
decl
jg
xchg
ja
cwtl
jo
cwtl
arpl
push
dec
call
xor
decl
adc
call
push
add
cwtl
or
add
test
sub
ljmp
xor
mov
xor
mov
xor
inc
inc
fwait
xchg
mov
lods
lods
mov
mov
movsl
movsb
add
pop
pop
adc
lods
lods
ljmp
lcall
movsb
movsb
jmp
test
ljmp
test
lcall
cmp
pop
pop
decl
inc
cmp
mov
sub
mov
adc
incl
or
decl
or
call
or
lcall
adc
jmp
xor
mov
cmp
mov
ds
les
sub
lds
dec
inc
sub
dec
push
inc
inc
xchg
mov
sarb
lret
movsl
dec
mov
mov
add
add
add
lods
movsb
mov
adc
test
mov
sahf
pushf
lcall
test
stos
ljmp
scas
pushl
lahf
mov
incl
adc
or
test
pop
incl
add
addl
add
mov
add
mov
add
nop
or
call
push
add
mov
adc
ljmp
ds
rorb
dec
ss
dec
aaa
dec
dec
cmp
int
cmp
rclb
call
push
cmp
rclb
call
pop
dec
dec
xchg
mov
lds
mov
cmpsb
movsl
cmpsb
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
mov
lcall
movsl
movsl
ljmp
mov
pushl
mov
pushl
stos
stos
lcall
sub
decl
sbb
decl
adc
incl
or
incl
or
call
or
add
mov
adc
ljmp
sbb
dec
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
call
pop
dec
fldenv
fistpl
fsubs
rcll
mov
fsubl
mov
mov
add
add
add
dec
dec
adc
jnp
movsb
sahf
popf
jmp
mov
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
cmp
decl
and
decl
push
adc
decl
push
add
or
call
add
mov
adc
ljmp
sbb
inc
cmp
dec
pop
dec
call
fs
fsubs
fldcw
fldt
fildll
jmp
outsl
pop
jmp
insl
pop
jmp
jno
fcoms
mov
cmpsl
cmpsl
jne
mov
lahf
add
inc
inc
adc
je
sahf
lcall
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
dec
inc
call
sub
and
xchg
sub
call
push
or
xchg
or
add
lcall
jmp
adc
pushl
and
dec
inc
xor
push
fdivl
fidivs
fbstp
jmp
js
jmp
js
jmp
jp
jmp
jl
jmp
jp
ficoms
mov
in
test
cmpsl
mov
lahf
lahf
add
inc
inc
adc
jb
cltd
xchg
xchg
call
sahf
fwait
popf
pushl
mov
pushl
mov
mov
mov
lahf
mov
call
aaa
das
lcall
xor
call
adc
add
fwait
push
add
mov
adc
ljmp
adc
mov
sub
call
pop
inc
fidivrs
jmp
subb
xorl
test
out
jae
in
xchg
jmp
jbe
in
mov
out
mov
in
xchg
xchg
mov
sarl
mov
lcall
lahf
add
jge
cmp
insl
outsb
js
xchg
out
cltd
xchg
lcall
mov
mov
mov
mov
mov
sar
mov
test
call
inc
cmp
lahf
inc
cmp
sahf
cmp
lcall
adc
call
adc
jmp
add
mov
add
mov
sbb
dec
xor
fsubs
jmp
xchg
jmp
jle
jmp
cmp
lock
cmp
repnz
test
repz
xchg
hlt
xchg
cmp
cwtl
mov
aam
mov
ret
imulb
sahf
pushf
daa
sahf
lahf
sahf
add
add
add
pop
add
xor
pop
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
ret
ret
pushl
jo
lcall
dec
inc
jmp
lcall
add
fwait
push
add
movsb
adc
ljmp
adc
pushl
pop
add
ret
push
add
sarl
and
jmp
lcall
out
popf
mov
repz
xchg
push
mov
xchg
push
mov
out
popf
mov
fnstcw
ret
lods
lods
mov
sahf
pushf
xor
popf
fwait
add
add
add
inc
add
ss
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
ret
inc
ret
mov
ljmp
dec
inc
jmp
push
dec
jmp
sbb
lcall
adc
jmp
adc
pushl
pop
add
rcrb
dec
and
fmuls
out
jp
out
mov
lcall
test
fwait
push
lods
pushf
stc
scas
pushf
sti
scas
popf
std
mov
cld
stos
lcall
mov
cli
mov
mov
sahf
popf
sahf
aas
mov
cltd
add
add
add
aaa
add
ds
push
dec
dec
jecxz
bound
xchg
xchg
nop
mov
mov
mov
mov
sar
ret
inc
enter
rol
lods
mov
ljmp
pop
dec
jmp
or
pushf
jmp
add
mov
add
mov
sbb
inc
sbb
call
sub
jmp
pop
inc
out
popf
push
scas
mov
clc
mov
clc
mov
stc
mov
cli
mov
cld
mov
test
sti
mov
lahf
jmp
shlb
mov
mov
sahf
popf
sahf
dec
xchg
xchg
xchg
add
cltd
lcall
xor
sub
or
inc
bound
xlat
je
jb
mov
rol
rol
inc
rol
rol
inc
inc
mov
inc
xchg
xchg
jmp
push
pushl
es
pushf
adc
jmp
adc
pushl
push
add
les
add
int3
sbb
add
loopne
adc
in
jno
push
scas
lahf
sti
mov
scas
sti
mov
mov
cld
ret
mov
inc
mov
cld
lds
cld
mov
sti
les
jmp
les
mov
mov
mov
xchg
xchg
or
add
add
push
add
dec
dec
outsl
outsl
outsl
mov
vpsubusb
xlat
jmp
aam
test
int3
iret
dec
lret
int3
dec
lret
lret
int3
leave
inc
leave
mov
lahf
jmp
pop
push
ljmp
sbb
jmp
adc
pushl
add
sbb
dec
sbb
call
sbb
add
ljmp
sti
mov
mov
cld
enter
leave
mov
cld
int3
mov
std
iret
mov
std
sarb
jmp
lds
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
enter
in
pop
in
jmp
test
jecxz
leave
fcmovnu
fdiv
xlat
fcmovu
cli
aam
xlat
std
into
iret
sar
mov
insl
push
lods
push
dec
ljmp
adc
jmp
adc
mov
sbb
dec
sbb
call
sbb
add
in
add
lock
xor
negl
sti
int3
ret
std
int
cld
rol
cld
rol
cld
rol
aad
cld
xlat
leave
fmul
cld
xlat
leave
cli
int
in
mov
fmul
int
mov
mov
xchg
adc
add
add
incl
std
std
std
add
std
cld
add
repz
or
out
out
pop
jmp
out
sub
in
in
dec
ljmp
xchg
in
ljmp
fcmovnu
jmp
mov
jb
test
and
jmp
adc
pushl
sbb
inc
sbb
dec
sbb
call
push
add
loopne
add
call
bound
sti
scas
lahf
ror
cld
lret
aad
call
int3
fxch
std
fcmove
std
fcmovne
std
fmul
std
cld
std
aad
out
leave
mov
inc
movsl
cmpsl
movsl
mov
xchg
add
add
add
std
std
add
std
std
add
stc
cli
add
repz
icebp
repnz
out
icebp
repnz
out
icebp
icebp
cmp
lock
pop
jecxz
mov
jb
sahf
xor
jmp
adc
mov
sbb
dec
sbb
call
sbb
add
jecxz
add
jmp
ud0
jne
std
shlb
cld
std
fcmovbe
std
loope
std
loopne
cld
jecxz
std
in
std
in
cld
push
iret
ret
fcom
dec
lret
lret
rep
stos
stos
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
std
std
add
sti
cld
add
cld
sti
add
div
or
aad
xor
mov
je
fwait
daa
sbb
lahf
or
add
scas
adc
mov
sbb
dec
sbb
call
sbb
add
out
add
lock
jne
std
rol
std
std
loop
cld
loope
std
loop
jmp
std
in
std
out
cld
in
cld
in
call
fdivrp
push
rol
jmp
dec
rcl
clc
lods
lods
scas
lods
xchg
xchg
xchg
outsb
outsl
insl
add
add
add
add
mov
cmpb
sub
lcall
adc
pushl
push
add
ret
sbb
dec
sbb
add
loopne
add
jmp
dec
sub
stc
mov
sar
cld
jecxz
cld
loop
loop
cld
jecxz
loop
sti
loop
cld
cli
fcmovnbe
stc
fmul
cli
fcmove
clc
rol
in
mov
out
sar
aam
sti
mov
mov
cltd
fwait
lcall
fwait
pushf
add
rcl
add
mov
mov
sahf
xor
lcall
adc
pushl
sbb
inc
sbb
dec
sbb
fcomps
add
loop
add
jmp
add
repz
xor
sti
ror
cld
aad
cli
rol
clc
int
push
lret
mov
push
lret
mov
in
enter
enter
lret
call
into
cli
out
imul
cmc
loopne
mov
mov
xchg
add
add
add
int
mov
mov
xchg
loopne
inc
xor
ljmp
adc
mov
sbb
int
pop
call
sub
fldt
adc
loopne
sbb
out
inc
ljmp
jmp
mov
mov
loopne
mov
fcmovnb
mov
faddp
mov
ljmp
lret
rcl
shl
fcmovnu
out
fbstp
lock
out
popf
out
jmp
push
lods
scas
scas
adc
cmpsb
test
add
ret
mov
rol
mov
popf
aam
push
dec
pushf
daa
sbb
cmpsl
sub
scas
aaa
es
mov
das
std
mov
push
inc
sti
les
leave
jae
test
xchg
mov
shrb
mov
rol
mov
lret
ret
rcl
mov
ror
mov
aam
fcmovu
fnstenv
fstp
gs
in
out
out
ljmp
sub
idiv
and
icebp
lock
fcmovnu
or
mov
int
xchg
add
mov
mov
roll
scas
les
jo
lock
jbe
mov
and
mov
xchg
sarb
stos
test
cmpsl
lret
pushf
lret
mov
leave
lret
into
int
iret
rcl
push
rcl
aam
rcl
aad
aad
fnstenv
aad
fisubl
fcomp
fstpl
ficoms
fsub
in
loopne
out
call
lock
add
cld
sti
add
incb
std
incb
incl
mov
mov
ret
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
ret
les
lret
int3
int
lret
rcl
and
aam
sbb
aad
adc
aam
or
fcom
push
aad
fildl
fcmovu
add
fucom
add
in
add
jmp
xlat
add
incl
mov
mov
add
ret
ret
or
rol
sub
mov
mov
push
ret
mov
push
enter
int3
int
lret
rcl
add
aam
add
fadds
aam
add
xlat
xlat
add
loope
fcmovbe
fiaddl
fstp
loopne
loopne
in
in
out
icebp
icebp
add
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
xor
cltd
xor
pusha
pop
sbb
mov
cmpsl
mov
repz
cmp
cli
lahf
cmp
xor
das
leave
adc
add
cmpl
insl
ss
repnz
and
mov
push
mov
addr16
dec
xchg
cmp
cmp
cmp
es
push
repnz
cmp
bnd
add
push
pusha
xchg
mov
lret
lret
sti
sub
xchg
bound
shrl
jl
ljmp
push
sbb
ss
dec
xchg
lock
pushf
je
push
push
push
cmp
mov
sbb
xor
xchg
mov
cmp
jge
repz
lods
push
inc
cmp
ret
sub
dec
daa
ljmp
cmp
dec
imul
lock
xchg
imul
shlb
sbb
adc
aas
pop
pop
fistps
jo
jmp
xchg
xchg
ficomps
imul
out
push
dec
add
cmp
jb
pusha
lcall
mov
push
scas
lea
arpl
mov
adc
mov
pop
sbb
mov
iret
and
cmp
inc
scas
arpl
in
std
pusha
add
lret
inc
cld
cld
mov
xor
xlat
ds
test
sbb
add
movl
in
pusha
pushf
les
adc
test
roll
loopne
dec
test
mov
push
mov
jno
mov
push
jp
stc
pop
push
test
sbbl
fs
adc
stc
mov
outsl
icebp
or
pushf
in
test
aaa
inc
push
orl
push
dec
lcall
cld
mov
mov
cmp
pusha
in
mov
mov
pop
pop
bswap
ficoms
sub
out
loopne
sbb
add
scas
add
inc
or
jl
mov
jne
dec
rclb
popa
shlb
fiadds
xor
push
push
push
inc
sbb
jecxz,pn
lahf
test
iret
mov
mov
xchg
xchg
fnstcw
loopne
aam
cltd
or
mov
add
lods
jp
lds
test
sbb
add
pop
ljmp
xor
sub
dec
pop
ret
ss
mov
xchg
mov
setg
push
and
hlt
pusha
ret
jno
fdivrs
lods
inc
add
sbb
push
and
pop
mov
lods
test
push
fbstp
stos
mov
mov
addr16
and
or
xor
outsl
inc
test
aam
jge
dec
roll
fs
or
inc
subl
std
pop
lods
xor
pop
mov
movsb
imul
rcrb
enter
cmc
cli
insl
int3
mov
ljmp
xor
scas
incb
or
pop
mov
fnstsw
scas
sbb
mov
mov
and
push
fistps
sub
mov
lock
and
jl
mov
movsb
jne
mov
cmc
xchg
cmp
outsb
insl
fcomp
int
mov
xchg
stos
outsl
jmp
enter
mov
in
inc
shrb
and
test
jp
xor
rolb
fldcw
jge
mov
xor
test
dec
outsb
jle
cwtl
or
std
notl
enter
push
fistl
out
sahf
clc
or
rorb
fwait
inc
loopne
sbb
stc
and
ss
mov
ficomps
ret
xlat
dec
mov
mov
dec
loopne
mov
ss
mov
sbb
lock
lret
mov
fsub
jae
dec
fidivrs
jbe
mov
and
inc
cli
pop
inc
rcll
nop
data16
mov
inc
or
sbb
testl
and
roll
xchg
mov
je
sbb
jb
sti
mov
ficomps
loop
xchg
icebp
loope
enter
inc
out
jns
insl
iret
repz
sti
cmp
or
inc
daa
mov
cltd
dec
push
out
jnp
out
mov
loope
movsl
aas
call
jp
mov
jae
and
mov
mov
pop
scas
in
imul
popf
icebp
and
repnz
add
popa
sub
out
jl
es
gs
loopne
imul
pushl
adc
flds
popa
out
xor
jne
jmp
testb
iret
add
ja
and
orl
push
adc
fwait
add
dec
das
in
or
ss
inc
ret
xor
imul
and
cmp
xchg
insl
push
sti
add
xchg
clc
cmp
sahf
fwait
scas
int3
push
xchg
mov
jecxz
arpl
int
mov
xor
aaa
movsl
xor
sbb
mov
outsb
inc
arpl
lds
imul
sbb
sbb
push
aad
mov
sub
rorl
pop
jp
xchg
cs
mov
xchg
test
imul
push
jae
bound
sub
hlt
ja
jl
add
clc
mov
subb
shll
pop
sub
cmp
out
pop
and
jne
mov
xor
scas
inc
mov
xor
sbb
movb
fs
push
outsb
add
jne
pop
sahf
cmpsl
int3
dec
addr16
lret
mov
sbb
popa
mov
cltd
imul
adc
iret
pop
repnz
sbb
mov
dec
loopne
mov
es
xchg
das
or
push
mov
mov
aad
movsl
xchg
arpl
add
leave
jnp
push
data16
bound
rolb
xchg
lea
xlat
out
outsl
push
cmp
mov
ret
cmp
push
or
and
sbb
xchg
mov
inc
sub
rclb
push
ljmp
test
inc
div
test
mov
test
add
lret
lock
mov
mov
orl
sub
rcrl
xor
lock
inc
ja
js
xchg
sub
lcall
jp
mov
pop
pushf
into
gs
inc
shrl
out
in
and
pop
test
out
mov
lods
aam
int3
out
sbb
pop
lret
cmp
es
or
push
jns
xchg
ja
sub
and
test
xchg
jmp
cltd
cmp
lods
jl
or
xor
lea
push
ljmp
jno
jle
xor
add
push
out
rep
inc
and
inc
lret
bound
mov
stc
cltd
jmp
inc
dec
in
pop
sahf
sbb
ds
jle
nop
inc
fcmovb
adc
popf
inc
loop
clc
adc
mov
mov
ljmp
clc
cmp
mov
push
nop
sub
popf
xor
xor
mov
mov
lods
add
fidivrl
dec
lret
or
lret
mov
fidivl
stos
in
push
in
lods
ljmp
pushf
cli
push
or
stc
jl
sub
dec
cltd
std
out
lods
ljmp
pushf
cli
cmpsb
mov
or
imul
pop
insb
sub
pop
push
cmp
repz
dec
ds
insl
sub
lea
movsb
shrl
pusha
jl
in
xor
add
aad
cmpsb
push
and
les
cmpsl
cmpsl
jns
loop
enter
lret
imul
dec
push
mov
push
outsb
add
mov
les
adc
inc
pop
jecxz
dec
fs
hlt
xchg
push
cwtl
fwait
mov
adc
mov
lcall
pop
mov
repz
scas
insl
loope
jp
in
cmc
mov
adc
mov
aad
xchg
shr
lcall
push
pop
out
call
or
cmp
icebp
mov
pop
call
out
jo
imul
add
test
xor
push
sbb
aas
and
ret
add
call
mov
dec
push
jns
xchg
hlt
aam
out
push
out
insl
pop
jae
jns
stos
inc
inc
lcall
sbb
std
xchg
mov
rcrl
mov
or
ret
ret
sub
cwtl
in
sub
ds
repz
clc
adc
divb
or
jnp
push
in
or
xor
in
mov
mov
ret
daa
mov
cltd
aad
movsb
cmp
rcrl
push
jmp
cli
adc
es
mov
lahf
push
call
lret
xor
jne
outsl
lock
cmp
gs
ja
enter
dec
jmp
mov
test
fimuls
mov
cmpsl
mov
mov
jnp
xchg
sub
adc
and
add
lret
ret
fdivl
in
mov
push
int
xor
lock
mov
pop
cmpl
subl
gs
cmp
iret
data16
pop
mov
lret
mov
fsubl
mov
mov
or
test
stc
nop
jb
sbb
add
cltd
xor
mov
mov
sub
lcall
pop
addr16
push
sub
xor
stos
inc
sub
pop
icebp
test
fdivr
pop
repnz
stos
pop
repz
adc
inc
mov
xchg
rclb
addl
hlt
xchg
sub
cli
loop
and
lcall
pushf
fwait
xor
test
inc
xlat
mov
roll
mov
lret
shl
jns
dec
cmp
nop
out
rcl
cmp
pop
pop
clc
xor
jmp
or
mov
fcomps
pop
repz
xor
jmp
mov
sub
sbb
lods
inc
leave
mov
shr
sti
xchg
faddl
jp
out
push
fidivs
adc
or
mov
inc
fisubl
insb
add
lret
mov
fmull
mov
mov
jns
push
jnp
dec
loope
adc
popf
inc
xchg
iret
data16
dec
fistps
es
cwtl
mov
fldl2t
mov
xor
loope
mov
fld
pop
out
push
push
xchg
xor
pop
bound
sbb
mov
add
leave
pusha
loopne
xchg
mov
pop
aad
mov
or
hlt
in
out
sbb
jns
and
add
push
movsl
fisubrl
insb
add
dec
shrb
shll
pop
inc
out
ljmp
jmp
add
jge
outsl
push
mov
mov
pushf
mov
sub
cmp
inc
xlat
mov
inc
fcompl
repz
mov
outsb
out
jmp
push
call
out
popa
jecxz
cwtl
rolb
mov
cwtl
das
jno
fnstenv
sbb
out
cmp
mov
fnstenv
lret
xchg
arpl
in
adc
cmpsb
decb
out
dec
push
out
jno
mov
sbbb
mov
adc
aaa
aaa
into
test
pop
cmc
in
out
mov
fcompl
scas
out
scas
inc
loope
sub
je
xchg
sub
bound
and
pop
sub
sbb
lret
cltd
xor
dec
lods
inc
inc
cltd
cmpsl
ds
bound
push
fs
adc
jmp
cwtl
xchg
shlb
inc
fmuls
lods
push
jmp
cs
nop
daa
mov
inc
xlat
and
jo
cmp
xlat
cwtl
dec
ffreep
clc
mov
stc
lea
dec
in
and
pop
popf
pop
repz
hlt
into
gs
sub
mov
sub
insb
push
jmp
xor
push
popf
fcomps
and
testl
dec
loop
popf
adcb
lea
cmp
imul
inc
mov
lcall
lock
out
jmp
jle
or
outsl
push
out
mov
iret
data16
out
adc
pusha
negl
xor
mov
leave
pusha
mov
fldt
movsl
imul
and
call
xchg
aad
xchg
mov
add
hlt
mov
xor
jns
mov
pop
sub
mov
data16
pop
cmc
dec
int3
stc
nop
sbb
sbb
sub
in
test
testb
icebp
mov
repnz
or
lods
negl
pop
into
stc
mov
loopne
mov
mov
inc
fsub
pop
cmp
jns
push
jmp
pop
hlt
mov
xchg
sbb
jns
sub
cmpsl
out
mov
or
aas
outsl
sbb
push
and
out
xchg
in
and
stos
inc
add
push
call
jmp
fwait
mov
dec
xor
repz
push
mov
cltd
pop
data16
sbb
scas
inc
insb
lods
push
movsl
fimull
xchg
sub
xor
mov
and
inc
shlb
loopne
icebp
sub
jge
popa
popa
fdivrl
add
fildl
xchg
icebp
push
mov
in
test
adc
lods
leave
pop
cmc
sbb
lcall
loope
cmpsl
rolb
jno
jne
in
dec
loopne
push
dec
jecxz
sti
sbbl
cltd
stc
nop
or
mov
std
sub
sbbb
mov
xchg
mov
push
mov
push
push
sbb
test
imul
sbb
and
lds
mov
outsb
and
insl
ss
mov
iret
push
aaa
into
dec
jge
shll
aam
xchg
jl
xor
pop
aaa
into
add
cmp
sbb
mov
adc
arpl
pop
test
inc
fdivrl
pop
push
lods
sbbb
dec
xor
arpl
jbe
pop
out
mov
rep
cmp
out
ds
xchg
push
jmp
pop
sbbl
test
lret
mov
fcompl
int
dec
out
out
lcall
add
pusha
jae
mov
mov
js
xor
imul
insl
sub
stc
sub
ds
imul
ss
je
mov
vxorps
xchg
aad
sbb
jbe
cmp
inc
inc
cs
pop
popa
enter
and
sbb
sti
dec
ljmp
outsl
xchg
std
sub
aad
cmpl
lods
movsb
mov
repnz
shrb
adc
mov
xor
in
add
es
fcompl
cmp
add
adc
cmp
imul
mov
rcrl
sub
adc
cs
or
mov
fisubrl
mov
jns
push
ljmp
cmp
mov
out
pop
hlt
fists
and
xchg
add
cmpsb
push
mov
add
ss
je
push
and
mov
je
and
xchg
mov
ljmp
jno
mov
repnz
xchg
jae
jb
mov
into
mov
les
rcrb
add
jbe
dec
and
push
push
cmp
les
enter
cltd
xchg
sub
dec
int3
arpl
pop
lock
jne
ljmp
sub
sub
pop
sahf
sbb
mov
in
insb
adc
mov
add
lods
cmp
add
xor
push
add
mov
ljmp
adc
nop
lahf
pusha
neg
mov
ja
add
popf
sub
push
or
cs
pusha
mov
jno
dec
rcrl
pushf
cmp
in
mov
roll
aad
mov
ljmp
sub
jae
dec
pop
repz
add
push
mov
push
xchg
push
pop
jbe
out
jg
jnp
push
insl
and
jo
mov
fnstenv
sbb
dec
mov
push
insl
push
sub
jle
adc
mov
or
mov
cmpsl
in
push
lods
lcall
add
test
mov
add
jno
mov
cmpb
iret
lods
mov
xchg
mov
xchg
mov
sbb
cmpsl
jno
sub
iret
jne
and
int3
push
cmp
or
rcrb
gs
ret
movsl
je
or
xchg
inc
lret
movsb
adcl
jmp
test
add
fidivl
insb
mov
cli
inc
cmp
movsl
jl
out
dec
jns
in
push
xor
repz
je
xchg
cmp
xchg
data16
pushf
or
test
mov
or
push
int
repz
adc
mov
rcrl
std
jg
fcomi
rorb
mov
mov
fidivl
mov
iret
sbb
mov
mov
insb
push
enter
lret
dec
out
leave
sub
sub
popa
clc
stc
dec
or
cmpsl
cmpb
enter
clc
fnstsw
into
mov
jecxz
push
xchg
adc
xchg
sub
lcall
scas
add
bound
out
orl
pop
orb
js
lods
push
xchg
sub
xlat
outsb
mov
ret
lds
cmp
mov
fsubrs
ficomps
mov
mov
mov
sbbl
xor
mov
mov
mov
fnstcw
ret
mov
mov
pop
dec
out
xchg
in
orl
or
push
call
push
push
cmp
push
mov
sbb
mov
xor
pushl
xlat
sub
inc
and
loop
stc
dec
add
into
jnp
and
icebp
popa
pop
repz
mov
les
out
icebp
push
imul
mov
mov
fwait
roll
in
mov
test
inc
pop
or
mov
les
cmc
mov
mov
push
push
test
cmpl
aaa
into
je
stos
inc
sub
jno
add
je
inc
xlat
insb
jne
insb
data16
rcrl
fs
pushf
push
inc
faddl
push
pop
repnz
xchg
mov
or
push
sbb
gs
push
js
mov
int3
arpl
dec
push
in
inc
and
shrb
mov
pop
mov
fucompp
xorb
int3
arpl
push
jp
push
pop
int
lcall
jp
pop
fnstenv
xchg
shrl
add
mov
iret
cli
addr16
ljmp
in
add
sahf
xor
les
lods
inc
mov
jb
jnp
pop
bnd
data16
lods
inc
cld
fldcw
lds
push
enter
in
aad
dec
fildll
outsb
add
mov
and
or
scas
inc
fsub
enter
cwtl
das
movsb
sub
aam
lds
fcompl
fbstp
std
or
daa
out
insl
add
dec
loopne
jp
call
ror
fs
fcoms
xlat
imul
out
and
cmp
bnd
mov
jno
jae
mov
lret
call
ss
inc
fnstsw
and
inc
test
mov
sub
fnsave
push
fs
xor
cmp
popf
clc
sub
adc
or
sbb
xor
jge
fsubrs
hlt
jecxz
es
int3
jmp
jne
scas
cmp
in
or
mov
mov
decl
test
sub
xchg
or
jge
sahf
xor
dec
adc
mov
lret
jae
and
andl
int
aas
ret
cwtl
sbb
js
out
pop
sbb
cmc
xchg
imul
out
out
test
decb
enter
mov
fldcw
cmpb
ret
imul
fwait
shrb
fcmovnu
jo
sbb
sub
int3
int
lock
into
sub
pushf
xor
mov
push
pop
mov
pop
jae
mov
mov
inc
loope
mov
inc
popf
aad
push
fidivrs
fidivs
adc
pop
xchg
jmp
mov
repnz
jbe
adc
insb
cmpsl
sub
xor
mov
fistpl
aad
iret
in
xchg
sub
lock
mov
fisubl
pop
jle
fidivs
lahf
cmpsl
ds
cld
xchg
mov
shll
in
in
fnstenv
push
repz
lret
adc
jae
gs
lahf
xchg
cltd
xor
rcrl
repnz
lret
bound
pop
notb
mov
aam
jo
push
jmp
xchg
mov
das
push
int
fs
push
ljmp
or
mov
cmp
xor
arpl
jmp
and
jae
repz
insb
add
lods
inc
mov
lret
int3
jne
fldl
xchg
cs
test
je
out
pop
into
or
and
mov
push
fadd
pop
jmp
lret
bound
test
ds
jmp
push
dec
jae
insl
imul
mov
or
or
enter
adc
lds
cld
push
out
jle
jns
ljmp
and
aas
in
pop
out
mov
fisubs
mov
xor
sbb
xchg
cmp
mov
fildll
shl
js
popa
add
shll
es
test
insb
add
add
mov
push
jecxz
jns
ja
movb
xor
arpl
sarb
push
stc
nop
test
lret
loopne
cmp
incb
les
pop
sub
pushf
lret
mov
fidivrs
ret
pop
lcall
push
sbb
aas
stos
inc
mov
call
inc
mov
fdivrl
xor
jno
jnp
insl
imul
and
sub
in
xchg
adc
add
mov
xchg
sub
das
lahf
ss
jae
aaa
arpl
in
orl
dec
in
sub
movsb
cmp
paddw
mov
inc
jecxz
adcl
sbb
pop
dec
cli
xchg
mov
stos
adcb
imul
popf
sysret
sahf
inc
lret
cld
xchg
jge
enter
sbb
lahf
mov
sarl
lods
inc
push
pop
cwtl
dec
inc
sub
int3
pop
xchg
je
cwtl
cmpsl
mov
jnp
and
addr16
montmul
cmpsb
inc
mov
jmp
or
cmp
cmp
and
add
dec
fdivl
mov
aad
mov
movsl
cmp
scas
add
ret
fimull
in
in
xlat
fidivrl
ror
cmp
shrb
inc
ret
pop
xor
out
aas
cmpsb
test
incl
pop
or
cltd
sbb
movsl
mov
sbb
pop
shrb
mov
inc
mov
filds
cwtl
ret
das
jcxz
in
or
pop
hlt
scas
add
fs
mov
and
mov
shlb
sub
adc
mov
pusha
xor
insl
ja
mov
jno
mov
nop
pop
fsubrs
cmp
sub
mov
nop
in
test
sub
and
jge
cmp
mov
pop
lock
icebp
fidivs
shll
lret
jg
add
mov
pop
enter
jns
push
stos
sbb
mov
inc
xor
mov
out
cltd
xchg
sub
or
push
jnp
pop
scas
dec
mov
pop
scas
mov
dec
and
orl
jecxz
sub
pop
adc
fstps
add
lahf
int
std
dec
dec
loop
aam
das
aas
cmp
aas
ljmp
and
adcb
pushf
stos
jl
pushf
loope
into
xor
push
aam
adc
sub
sbb
test
xchg
or
pop
sbb
mov
clc
aad
inc
lahf
cmp
xor
loop
push
scas
stc
lret
int
sbbl
and
loop
push
das
mov
sbb
stos
dec
sub
dec
mov
outsb
mov
ss
inc
mov
int3
dec
insb
cmp
sbb
mov
push
outsb
roll
in
stc
loop
jge
xor
cmp
mov
testl
jge
mov
mov
push
sbb
dec
daa
cmc
sbb
stc
imul
cli
mov
mov
xchg
dec
fadds
adc
stos
pop
repz
lock
pop
jae
clc
inc
pushf
in
sbb
mov
sub
pop
jp
mov
loop
in
loop
pop
orb
sbb
mov
xchg
pop
outsb
int
cmp
bound
jbe
int3
pop
sahf
test
rcrl
in
jo,pt
jnp
clc
popl
cs
sarb
dec
lds
sub
or
out
add
insl
adc
insb
jae
int
push
cmp
jne
das
mov
ss
out
clc
dec
int
loope
aaa
int
pop
loopne
in
cmp
add
gs
enter
mov
lock
scas
je
loopne
mov
enter
xchg
jl
adc
clc
ss
subb
ficoml
ja
cmp
add
jno
outsb
adc
je
ret
lret
pop
sbb
js
ja
jb
mov
mov
clc
sub
fidivs
dec
push
in
lods
sub
in
jl
es
inc
ss
xchg
inc
in
lret
xchg
das
loope
push
ljmp
es
sub
or
xor
push
xchg
xor
xchg
add
push
adc
pushf
dec
shll
jl
sub
inc
pop
pop
int3
arpl
xor
cmp
sub
cltd
cmp
jns
or
and
push
mov
add
jno
jg
xchg
cmp
outsb
in
fnstcw
jmp
xor
mov
jmp
dec
loopne
or
in
hlt
daa
fmul
mov
inc
mov
add
inc
lret
pop
jge
xor
push
lahf
fbstp
cmp
dec
dec
fnsave
test
lahf
fnsave
add
mov
jno
push
stos
xchg
and
fisttps
arpl
push
push
dec
test
jae
push
test
push
dec
add
dec
xchg
inc
rorl
lods
pop
xchg
pop
scas
outsb
push
sbb
and
xchg
in
sahf
mov
xchg
dec
lret
stc
cld
insl
ds
test
cbtw
f2xm1
clc
sub
xlat
jle
in
insl
cmp
dec
rcl
outsl
mov
aas
es
fnstenv
dec
cld
push
ds
fsubrs
sbbl
nop
xor
cs
std
xchg
imul
pop
mov
adc
int3
scas
xor
ja
or
in
cmp
lods
sar
out
mov
out
dec
jecxz
test
imulb
dec
pop
push
pushf
xor
ljmp
shlb
mov
fisubs
arpl
stos
mov
out
and
push
xor
sub
pop
or
cwtl
pop
inc
jge
mov
lock
fisubl
adcb
testb
mov
jae
push
jbe
adc
add
int
rcrl
push
mov
ret
mov
cmpsb
or
insb
cmp
popf
inc
push
pop
movsl
lds
pop
mov
test
mov
popa
inc
out
cltd
insl
rolb
movsl
push
pushf
aam
push
lods
xor
push
or
das
js
cli
icebp
sarl
fucom
push
fldt
or
icebp
xor
sbb
ds
xchg
insl
add
or
sub
push
aam
popf
mov
fistl
mov
stos
jno
test
sub
inc
sbb
subl
xchg
jge
popf
push
sbb
inc
iret
pop
iret
mov
sub
mov
int3
inc
and
mov
mov
cs
cmp
repz
std
subl
ja
and
jo
jbe
jecxz
fstpl
and
lret
bound
insb
push
and
sub
mov
adc
cwtl
lcall
shl
xor
fisubl
out
loop
add
and
rcll
xchg
rorl
or
lods
roll
repnz
out
and
mov
loope
push
sbb
xchg
hlt
sub
push
pop
cmc
cld
hlt
in
es
jge
pop
ja
jge
xchg
gs
arpl
inc
push
or
fdivs
sti
xchg
sub
sub
movsl
pop
xor
je
clc
stc
iret
insl
adc
ja
shlb
shlb
pop
sub
dec
mov
and
push
outsl
xor
xchg
jo
sbb
jle
outsb
into
mov
outsb
xchg
push
pop
mov
mov
addr16
mov
ja
fwait
add
dec
addb
in
pop
shrl
jecxz
add
pop
push
mov
in
mov
popa
enter
mov
les
sar
mov
sub
divl
arpl
fwait
out
adc
mov
xor
repnz
sbb
idivb
es
lea
lcall
push
xchg
sub
fdivs
fwait
ret
xorl
leave
dec
xchg
sub
insb
pop
mov
sbb
sbb
inc
int3
mov
cmc
xchg
outsb
test
repnz
mov
xchg
inc
xchg
shrb
cld
aaa
dec
aam
stos
shrl
in
cmp
pop
adc
hlt
pop
jg
or
cs
add
ja
xor
fcomps
in
in
and
dec
pop
lods
ror
xchg
cmp
test
jae
hlt
movsb
sbb
mov
jg
les
inc
jecxz
sti
sbbl
icebp
cmc
mov
inc
fiaddl
inc
adc
adc
jb
stc
mul
mov
insl
data16
mov
popf
popa
gs
or
push
push
and
out
mov
lcall
push
repz
fidivrs
inc
push
mov
scas
imulb
xor
nop
sbb
jno
mov
ret
cmp
clc
xchg
stc
mov
pop
mulb
cmp
mov
andl
or
movsb
pop
jmp
lcall
mov
jg
inc
mov
lock
mov
mov
dec
jecxz
sub
cmp
inc
inc
adcb
test
dec
rcll
das
dec
sub
push
movsb
outsb
movsl
aaa
mov
lods
inc
stc
pop
clc
imul
fiadds
movsl
inc
sub
mov
sub
add
aaa
les
cmp
cmpl
loop
sbbb
add
mov
adc
xchg
push
push
add
fiadds
xchg
rorb
ret
xor
sub
jge
movsb
xor
into
dec
shlb
daa
jg
dec
jl
outsb
add
push
dec
add
dec
aaa
cmp
xchg
pop
and
dec
shlb
stos
repz
mulb
xor
or
lahf
push
push
sbb
fimuls
aaa
aaa
dec
inc
fnstsw
add
shrl
push
scas
jbe
xchg
or
stc
jns
mov
bound
xchg
xchg
sub
loop
pop
je
cmp
in
cmpb
fs
fisttps
adc
mov
lcall
outsl
flds
jmp
sub
jne
inc
cld
mov
xchg
jmp
push
mov
pop
call
pusha
mov
hlt
shll
das
stos
jne
aam
testb
xchg
es
mov
adc
dec
enter
jo
and
mov
rorb
xchg
xor
cltd
xor
fisubs
imul
cmp
jno
movsb
mov
fidivs
pop
pop
sbb
fnsave
sahf
mov
inc
dec
dec
and
lods
mov
dec
hlt
movsb
loop
xor
jmp
imul
test
adc
stc
enter
cmp
xchg
mov
stc
divl
dec
ss
cmp
fldl
stc
dec
jg
xlat
mov
fdivrl
mov
in
dec
cmp
dec
push
xor
scas
fwait
push
dec
push
and
mov
insb
data16
popf
out
mov
scas
adc
jge
push
sub
sbb
int
xor
sbbl
cmpsl
data16
les
push
mov
xchg
rcrl
dec
scas
mov
push
out
or
aad
push
icebp
mov
xchg
lcall
xchg
xor
aas
push
clc
or
popf
out
repz
ret
shlb
fsubs
lea
inc
pop
cmp
mov
push
test
popa
lods
lcall
adc
dec
xor
call
dec
inc
xchg
mov
test
pusha
pop
popa
sub
test
loopne
jp
add
xchg
fninit
sti
js
lds
mov
and
insl
in
mov
int3
test
pop
scas
bts
insb
stc
nop
sahf
hlt
xor
and
cltd
testb
pop
mov
mov
pop
add
sub
mov
das
xor
fs
aaa
xchg
fistpll
out
aaa
add
dec
dec
repnz
fwait
mov
dec
sub
jo
adc
xor
das
xchg
or
inc
in
jl
sub
fldenv
imul
jle
dec
dec
fwait
xor
data16
cmp
or
repz
daa
jmp
clc
ss
lea
outsb
mov
outsb
lods
xor
adc
nop
je
into
clc
mov
xor
push
clc
aam
pop
jmp
mov
dec
in
lret
jbe
sbb
jnp
mov
mov
fisttps
xlat
push
sub
add
or
jae
sbb
sarb
inc
mov
test
outsl
comiss
imul
and
into
sbb
add
in
mov
mov
addl
inc
mov
lcall
mov
dec
outsb
dec
adc
xchg
sbb
xor
push
lods
inc
push
inc
fistl
pusha
idivl
bound
nop
lcall
xor
stos
inc
in
adc
adc
xor
and
dec
and
mov
out
shlb
or
pop
loopne
clc
fnstenv
add
adc
movb
mov
pop
sbb
xor
out
pop
ds
push
mov
or
push
das
pop
stc
dec
nop
leave
push
ficoml
flds
aad
cmpsl
enter
xor
push
inc
ljmp
push
orb
imul
inc
cmp
and
push
cs
push
sub
or
call
pop
repz
fdivrs
cltd
iret
lretw
add
std
fmull
clc
imul
loopne
call
fisttps
or
loope
push
jae
pop
roll
stc
mov
cmp
lcall
sub
cmp
mov
or
mov
push
jecxz
xor
notl
ja
and
stos
pop
pcmpeqd
sub
loop
push
dec
xor
push
push
loope
pusha
cmp
push
testl
sub
and
cltd
lea
xor
aas
ret
pop
cmc
pusha
xchg
dec
mov
jecxz
fcomip
pop
and
hlt
pop
push
xor
sbbl
rcl
xor
mov
test
stos
jb
mov
fiaddl
mov
sub
into
subl
lock
lcall
test
cmp
mov
test
int
adc
lods
pop
jns
fbstp
push
repz
les
loope
xor
pushf
xor
sub
test
leave
shll
mov
mov
mov
cmpsl
jmp
mov
pop
lock
addr16
sub
push
insl
mov
cmp
loop
sbb
adc
int
jne
iret
out
dec
cli
stmxcsr
pop
in
das
add
xchg
iret
sub
pop
inc
out
pushf
xchg
pop
aad
sar
pop
xor
mov
inc
mov
iret
mov
gs
mov
into
test
les
scas
push
repnz
fbstp
mov
pop
aad
nop
popf
cmc
ss
mov
shlb
outsb
call
dec
pop
jne
and
and
push
iret
data16
jo
xchg
adc
push
mov
sbb
and
in
dec
jp
pop
jle
jecxz
push
sub
daa
dec
in
mov
lret
ss
test
sbb
lock
push
in
push
cld
xor
fdivrs
test
mov
xor
mov
jl
test
ffree
inc
xlat
fisttpl
cmp
je
out
or
cltd
cltd
dec
sub
cs
es
mov
and
fmuls
push
xchg
adc
push
or
shlb
iret
shr
je
mov
inc
in
inc
fxam
or
in
sbbl
stos
mov
mov
cltd
aas
addb
xchg
pop
cmp
jle
outsb
lds
sbb
das
das
mov
out
pop
fmull
pop
adc
test
push
imul
insl
mov
sbb
pop
bound
inc
popa
aam
jno
xchg
fs
lods
cmc
push
xchg
dec
lret
xor
and
mov
xor
dec
or
or
cmp
psubsw
push
cmp
pop
or
cmp
jo
add
sub
jecxz
jl
cmovbe
mov
mov
xlat
ljmp
btc
xchg
ret
pop
into
popf
aad
outsb
inc
outsb
sbb
rcl
push
and
das
outsb
out
stos
es
and
not
or
jge
fcomps
inc
adc
add
jb
jmp
aas
xor
dec
dec
jecxz
sbb
cmp
iret
cwtl
pop
fidivrl
fbld
cmp
popf
xor
daa
sub
push
mov
push
inc
stos
sar
aaa
sub
stc
in
adc
fisttpl
xchg
push
lods
insb
xchg
adc
rcrl
stos
lds
inc
fisubrl
loopne
adc
fwait
or
push
inc
jmp
sahf
xchg
test
scas
fnstcw
js
fimuls
nop
daa
sbb
sbb
mov
aam
js
insl
or
dec
lahf
addr16
xchg
fstpl
xchg
push
shrl
mov
bnd
lret
imul
stc
sbbl
jno
jae
hlt
scas
mov
mov
sarb
int
test
mov
adc
inc
cmp
call
ds
cmp
cmp
xor
push
mov
and
imul
mov
xchg
cmc
mov
sahf
scas
fisubl
addr16
mov
mov
ret
fsubrl
add
xchg
enter
sub
jp
sub
stos
inc
pop
dec
adc
dec
jae
mov
xchg
inc
cltd
addr16
hlt
mov
pop
mov
lea
jl
sbb
test
xchg
stos
int
adc
pop
mov
xor
jb
fldcw
xchg
jp
into
int
push
lea
jp
jnp
ret
mov
adc
stc
mov
dec
push
inc
jecxz
dec
inc
adc
mov
mov
mov
popa
stos
pop
add
xchg
jno
andb
pop
push
and
pop
ja
xor
pop
sub
sbb
movsl
iret
add
pop
sbb
int3
rcll
cmp
push
ret
loope
jmp
and
push
scas
cld
and
lret
enter
lds
adc
inc
out
pushf
mov
flds
mov
fimuls
test
add
mov
sub
or
dec
push
push
adc
adc
in
mov
cmp
jmp
popfw
lahf
push
xor
add
inc
pop
and
add
jg
or
ds
pop
adc
iret
mov
jp
in
mov
fbld
loopnew
ljmp
movsb
or
repnz
rcrl
inc
aam
mov
shrb
jno
shlb
fwait
sahf
adc
push
jp
cmp
mov
sbb
mov
divl
jl
cli
ret
inc
insl
xchg
mov
or
mov
pop
xchg
jb
cmpb
mov
mov
push
mov
movsb
jmp
out
divl
xchg
cltd
sub
fisttpll
lret
add
jnp
es
push
mov
xor
inc
nop
dec
jae
sbb
daa
mov
jecxz
and
repnz
aas
scas
mov
pusha
cltd
jae
dec
lret
sti
or
cmpsb
test
js
sbb
pusha
sti
cmp
mov
mov
js
in
and
mov
jae
sti
lods
stos
test
add
rcrl
push
inc
cmpsb
cmp
or
sbb
sahf
inc
mov
out
mov
gs
sub
mov
in
lahf
popf
sub
jp
xchg
stc
nop
scas
push
sbb
shll
cmpsl
sahf
xchg
adc
mov
leave
push
push
aam
out
mov
repnz
out
sbb
fsub
fnstsw
repnz
mov
fiaddl
mov
mov
or
pop
mov
or
dec
inc
jo
out
mov
jne
xor
pop
data16
daa
and
stc
and
or
mov
push
add
mov
lds
ret
imul
cmp
clc
mov
or
xchg
cs
js
ds
lods
xor
and
sbb
jmp
enter
out
fs
cmp
movsb
pop
pop
ficoml
mov
inc
inc
aad
sti
dec
lret
les
int
aam
pop
mov
loopne
push
ss
ja
cmpsb
xchg
sub
or
push
sbb
mov
pop
sahf
shll
subb
cld
gs
imul
and
insb
mov
ja
movsb
jl
cmc
xor
insb
mov
movswl
mov
inc
movsl
jge
jg
sbbl
out
xlat
cmp
dec
aaa
test
shll
pop
jl
shlb
mov
lret
sub
in
mov
pop
repnz
pop
arpl
inc
pop
push
rcll
aaa
imul
xor
sub
sbb
cmp
and
pop
lret
or
or
imul
in
stos
hlt
pop
adc
mov
push
jmp
push
cmpsb
pop
hlt
push
je
movsl
movsl
adcb
dec
in
xor
test
pop
test
sti
cmc
adcb
pop
pause
adc
mov
mov
sti
jg
sub
xlat
push
and
jo
xor
aaa
xor
xchg
cld
and
pop
shrl
sbb
shrb
cli
mov
out
fmuls
lds
popa
cmc
mov
mov
stos
in
push
iret
push
xor
aaa
lock
and
out
inc
cmpsb
cmp
fstl
mov
xor
loop
sbb
stos
inc
test
mov
out
push
mov
or
cmc
xchg
push
adc
out
ret
sub
arpl
xor
pop
adc
sub
pop
jg,pn
inc
inc
jne
ljmp
std
xchg
push
sbb
lock
jno
jno
in
mov
pop
add
jae
mov
movsb
adc
das
imul
add
cmc
pushf
inc
pop
call
mov
push
repnz
stos
mov
bound
cltd
xchg
in
repz
rcll
ret
cli
jp
movsl
loop
xlat
cmp
or
push
arpl
ds
sub
or
stos
add
das
jle
stos
addr16
cltd
lret
jecxz
stos
outsb
xchg
jge
push
imulb
mov
jo
iret
shrb
clc
faddl
gs
add
adc
and
mov
xchg
sarl
cmp
adc
inc
and
pop
push
mov
mov
push
das
jg,pt
cmp
fnstsw
movsl
pusha
and
dec
inc
jecxz
insb
aas
clc
sbb
ror
ss
imul
push
pop
xor
add
sbb
push
dec
adc
jnp
xchg
imul
sbb
and
mov
imul
mov
and
aaa
push
sub
ss
cmp
jae
lret
jns
push
jb
bndstx
loop
loopne
in
push
cmc
sti
mov
leave
dec
fsubrp
add
mov
xor
fcompl
push
push
stc
inc
mov
jp
loopne
ret
push
mov
push
movsl
das
mov
sbb
lods
jmp
scas
and
dec
aam
xor
iret
and
cmpxchg
std
mov
inc
pop
hlt
sti
scas
rcrb
in
cld
les
sahf
pop
in
cmp
pop
jnp
lods
pop
unpckhps
scas
test
imul
push
shr
push
jg
cs
pop
dec
mov
mov
or
repnz
fldcw
das
mov
dec
mov
adc
sbb
dec
leave
inc
fldl2t
or
aas
lret
scas
jl,pt
adc
outsb
mov
and
test
fistl
xlat
aam
lock
icebp
and
and
loope
sbb
jecxz
jnp
es
mov
adc
pop
imul
mov
xor
inc
jge
pop
mov
sahf
int
dec
mov
push
negb
pop
outsb
dec
fnstsw
popf
test
mov
pop
repz
fiaddl
movsl
dec
fisubs
jmp
mov
jo
xchg
pop
ss
xchg
dec
pop
mov
leave
pop
out
pop
out
movups
jge
sub
mov
add
pop
cmc
movsb
mov
repz
lock
mov
stc
jns
push
popf
inc
dec
orb
push
or
mov
int3
jle
fldt
cmp
in
bound
into
push
out
mov
or
in
or
gs
mov
mov
inc
bound
fidivrs
xchg
sub
sbb
sbb
mov
sti
jmp
out
inc
data16
add
sbb
xor
mov
sbb
popf
aas
or
pusha
and
cmc
sbb
mov
ret
insb
add
sub
push
into
fwait
inc
push
int
movsl
jl
xchg
into
push
test
add
or
jb
aaa
sbb
clc
dec
cwtl
lret
js
addr16
and
sub
jne
popa
sub
lcall
or
xchg
sub
push
popf
lods
xor
in
enter
out
sub
fistpll
add
jae
sbb
mov
or
sub
push
es
jne
xchg
andl
movsl
adc
cmp
or
test
rcll
jg
jle
popf
cmc
push
mov
sbb
push
mov
dec
cmc
mov
insb
xor
cmpsl
and
loope
xor
xchg
add
int3
cmp
push
call
pop
dec
bound
mov
xchg
inc
lock
ret
dec
pop
jo
rcrb
sub
inc
pop
not
mov
popf
xchg
push
jmp
sbbl
fxam
inc
mov
or
std
cltd
xchg
dec
setbe
add
pop
loope
mov
dec
in
cmp
xchg
pop
lss
ss
data16
xchg
cltd
mov
mov
fwait
xor
and
mov
out
das
imul
cwtl
jmp
and
adc
lret
sub
jecxz
jmp
xor
jg
inc
mov
xchg
pop
hlt
ret
aam
addb
and
imul
mov
pop
repz
add
cmp
test
inc
mov
rclb
cmp
shl
repnz
and
xor
jb
push
aaa
push
orb
scas
movsb
and
jb
je
sub
loop
imul
adc
xchg
push
lret
sub
sahf
mov
push
cmp
adc
xor
pop
std
push
dec
int3
mov
pop
push
inc
mov
ljmp
cmp
sbb
sbb
lds
jl
pop
ds
outsl
out
xchg
jg
rcrb
sbb
and
and
shrl
sbbb
popl
mov
popa
popf
insl
aam
push
add
lahf
shll
lods
xor
or
imul
out
mov
rorb
bnd
or
fcomi
lahf
mov
ds
leave
xlat
repz
sbb
adcl
repnz
xor
cmp
push
rcrb
mov
popa
ret
and
pop
xchg
inc
lret
mov
xor
data16
mov
or
sbb
test
dec
inc
gs
imul
popf
xor
push
or
shll
shlb
mov
dec
mov
jle
aad
sahf
sbb
xchg
lret
mov
pop
stc
aam
int
pop
fbld
rcrb
int3
imul
enter
add
cmp
pop
push
push
xor
jae
or
test
mov
inc
out
ret
je
outsb
hlt
xor
sbb
gs
clc
pusha
fldcw
subl
jns,pn
sbb
mov
aaa
add
cmpsl
jl
xlat
fisttps
fs
movsb
andb
cmp
dec
hlt
mov
adc
repnz
aam
lcall
scas
adc
inc
mov
cli
jge
xchg
out
mov
fwait
pop
and
in
fadds
or
cmp
pop
outsb
cmpsb
movsl
mov
lcall
aad
cmp
pop
imulb
mull
jge
ret
imul
cmp
imul
andb
adc
mov
subb
push
int
iret
clc
repnz
adc
adc
xchg
sub
jo
call
dec
sarb
dec
in
dec
dec
ja
or
cmp
push
outsl
mov
and
and
testb
cmp
inc
pop
clc
jecxz
sub
popa
lods
fimuls
jg
jnp
divb
rolb
sbb
push
jge
xor
lret
scas
pop
lret
mov
jp
pop
fsubrl
adc
xor
cmp
xor
adc
push
xlat
fwait
jb
ret
rcrb
lea
out
and
cld
rolb
mov
jle
add
or
lret
mov
mov
cwtl
xchg
dec
les
push
adcl
add
sbb
cmc
movsl
mov
mov
dec
into
lods
xor
jecxz
push
jae
cltd
cs
dec
iret
mov
xchg
cmpsl
jecxz
sbb
and
jbe
iret
cwtl
mov
ljmp
movsl
or
push
mov
iret
data16
roll
popf
in
std
xchg
fiaddl
pushf
mov
cli
sbb
or
add
inc
ja
add
push
insb
rolb
aam
mov
pop
sub
ficompl
add
add
xchg
cmp
sub
pushf
and
shlb
xchg
sub
les
dec
mov
adc
fldl
or
xchg
repz
nop
daa
mov
cli
push
dec
clc
adc
mov
jecxz
ljmp
or
out
ret
repz
test
cmp
fidivs
in
inc
testl
lods
push
pop
pusha
mov
xor
pusha
and
xor
cwtl
pop
ret
jecxz
mov
out
xchg
cld
and
jns
push
or
scas
add
dec
lret
ljmp
xlat
fidivs
dec
in
test
aad
jmp
mov
mov
hlt
icebp
lods
outsb
adc
popf
hlt
outsb
mov
pop
insb
xchg
pop
or
jno
fcoml
inc
fstps
pushf
mov
call
pop
loopne
mov
sbb
shl
or
sar
mov
xchg
xor
push
stc
shr
cld
push
rclb
add
xchg
or
and
cmp
ljmp
stos
sub
mov
xor
cmp
mov
lret
mov
sbb
adc
cli
sbbl
sbb
xchg
jo
sbbl
mov
mov
test
fadd
test
stos
push
sahf
push
mov
fwait
lock
and
lahf
ss
in
call
mov
cwtl
sub
jmp
or
mov
push
xchg
cmp
fbstp
sbb
mov
std
push
loopne
jne
jl
fcoms
adcb
dec
mov
rcll
stos
mov
mov
enter
push
sarl
sbb
pop
lds
mov
jecxz
inc
jg
xor
icebp
mov
and
dec
addr16
xlat
testb
jle
fucomp
icebp
clc
mov
les
mov
rcrb
inc
mov
jge
dec
icebp
jb
xor
sti
pusha
xlat
push
cs
orl
imul
lock
push
mov
dec
xchg
sbbb
jo
lods
mov
leave
fldenv
in
pop
repnz
mov
or
aam
lahf
add
scas
or
loope
sbb
ret
jecxz
or
jecxz
movsb
in
int3
mov
aad
hlt
add
je
test
dec
lods
push
fistpll
mov
movsl
add
ljmp
push
mov
js
aad
int
xchg
cs
lock
lea
rorb
es
adc
iret
mov
test
xor
cmp
jge
xor
mov
cmp
sub
sbbl
or
fidivrs
mov
pop
xchg
push
enter
mov
inc
stos
adc
push
jnp
popf
lods
jae
jno
into
jle
add
outsl
inc
loope
das
cmp
push
sahf
push
pop
mov
cltd
out
lcall
jmp
les
sbb
cmp
jmp
sbb
in
imul
pop
sub
lret
das
les
fwait
push
inc
mov
ljmp
mov
aad
aas
lret
lods
mov
incl
dec
xor
dec
in
xor
add
repz
jns
mov
push
pop
mov
jle
sub
or
add
xor
jne
mov
mull
outsl
sbbl
sub
ss
lods
xchg
pop
jo
jnp
xor
adc
in
xor
xor
fsubr
mov
cmp
mov
or
scas
cld
arpl
inc
mov
and
loopne
cld
xchg
push
and
dec
pop
xchg
mov
pop
jg
lea
adc
daa
popf
ss
jb
outsb
es
mul
xchg
push
sub
addr16
insb
add
mov
mov
push
pop
push
inc
fldenv
inc
lods
cmpsb
jbe
push
movsb
aam
sbb
pop
int
mov
or
push
in
loop
cli
pop
pop
cmc
add
add
stos
jl
ficomps
lods
addr16
pop
lret
cld
repz
adc
pop
xlat
push
sub
pop
jae
shll
shll
movsl
mov
testl
clc
jge
lcall
and
fsincos
fwait
ret
jbe
pop
ja
arpl
xchg
js
cwtl
daa
lcall
or
mov
rcr
cmpsl
mov
inc
cmpsl
inc
jne
decb
jl
adc
int
bound
dec
aam
jnp
out
inc
jmp
ja
insl
sub
nop
mov
pop
int3
sub
jl
cmp
ds
out
push
out
mov
and
sarl
stos
jle
or
jmp
flds
jb
cwtl
xchg
cld
loopne
outsb
cmp
jns
mov
out
jnp
jnp
mov
inc
pushf
push
nop
xchg
imul
xlat
cmp
cmp
pop
in
nop
or
dec
fldt
or
mov
ljmp
insb
hlt
jae
iret
push
es
call
mov
sahf
out
in
fyl2x
ds
mov
lahf
movsb
pop
sbb
mov
add
jg
cli
int
addb
mov
mov
mov
mov
loopne
jae
push
and
nop
mov
pusha
jo
insl
out
lahf
scas
dec
mov
call
push
incl
sub
fs
es
lret
shrl
out
pusha
test
mov
cld
in
sbb
aam
faddl
inc
pop
movsb
jmp
sub
jns
adc
jns
cltd
mov
pop
mov
jge
in
icebp
mov
jnp
push
xchg
sbbb
cmp
pop
insb
sub
shl
push
mov
xor
jnp
imul
xchg
shlb
inc
mov
or
out
int3
movsl
inc
jns
dec
fildll
jno
or
cmp
js
fsubl
cwtl
jge
dec
aad
pop
adc
pop
pop
jecxz
shlb
push
cmp
nop
push
cmc
mov
test
in
or
xchg
and
mov
data16
loop
mov
leave
pusha
sub
cmp
cmp
sub
call
icebp
pop
hlt
xchg
jp
dec
adc
jo
into
ficoml
sti
add
rol
sbb
test
fbstp
jecxz
lcall
sahf
clc
add
mov
into
and
out
adcb
lss
mov
in
adc
gs
inc
jle
sub
aaa
into
push
cmp
mov
jmp
mov
lcall
cli
xchg
lcall
dec
add
ljmp
jno
imul
bound
inc
rclb
movsl
xchg
clc
push
arpl
xor
or
pop
or
fsubrl
inc
lahf
std
xorb
cmp
mov
xchg
xor
xchg
cmpl
sub
sub
das
push
mov
int3
jo
addl
add
mov
int3
xchg
mov
sbb
push
cmp
or
pop
xor
inc
lahf
ss
inc
rcrl
jmp
dec
mov
xor
cmpsb
inc
sti
ret
addr16
dec
scas
mov
xor
dec
movups
mov
out
cmpsl
push
fmull
cld
stos
stos
xor
push
mov
push
jbe
pop
lret
ret
aas
sahf
data16
imul
hlt
outsl
xchg
push
call
push
cs
dec
xor
cld
jle
mov
rclb
add
call
lods
fmull
out
xor
or
mov
dec
aam
dec
insb
in
dec
dec
mov
ret
jl
repnz
dec
pop
call
xor
pop
mov
out
loope
and
insb
add
leave
gs
ret
ljmp
sbb
hlt
or
dec
inc
xchg
add
cmpsb
push
cmp
push
xor
cltd
pop
sbbl
bnd
ja
scas
push
sub
and
or
popa
clc
or
jg
jg
jmp
pop
pop
loope
pop
dec
mov
in
xor
or
push
jl,pt
jno
aad
push
xchg
lcall
in
dec
pop
sbb
repnz
add
mov
cmp
pop
incl
fcom
dec
pop
add
xchg
sub
mov
stos
int
ret
jp
xlat
stos
fs
dec
pop
dec
push
cmp
jecxz
sub
dec
add
rcrb
xchg
aas
dec
sbb
pop
cwtl
pop
pusha
jmp
int
push
fs
popf
cmp
cmp
rcl
repnz
inc
mov
dec
cld
jb
xchg
sub
std
push
rorl
cld
xchg
dec
push
mov
inc
fmuls
mov
mov
xlat
lea
add
rclb
jb
imul
adc
mov
data16
repz
cmc
imul
pop
push
sbb
mov
dec
or
cmc
out
ret
nop
cmpxchg
xchg
stc
shlb
lret
loopne
or
xchg
xchg
dec
aaa
cmp
mov
pop
push
fcomi
add
pop
inc
mov
arpl
andb
iret
fldt
insl
popf
sti
jbe
test
lret
cld
mov
inc
adc
lock
sub
fmull
xchg
xchg
leave
aaa
into
cli
mov
inc
lock
inc
jmp
pusha
pop
popf
repz
xchg
sub
jmp
or
push
dec
movsb
pop
lock
lea
push
push
js
inc
jno
andl
int3
insb
xor
mov
lret
add
xchg
pushf
cmp
mov
pop
dec
out
sub
out
hlt
pop
mov
clc
and
into
fucomip
inc
std
mov
bound
inc
scas
inc
jae
adc
popf
int
push
cld
push
jne
inc
stc
or
sti
jbe
sbb
push
or
push
pop
cwtl
sub
fxtract
cld
mov
sahf
push
rol
mov
or
cmp
dec
cmp
int3
mov
mov
pushf
pop
pop
dec
lods
xor
pop
and
adc
adc
mov
xchg
dec
pop
hlt
jle
icebp
push
cmovnp
jge
sub
stc
jp
mov
sbb
into
aam
xchg
xchg
out
iret
mov
fdivl
jbe
std
jo
movsb
inc
add
lds
add
lods
cmp
and
push
mov
push
in
pop
sar
repz
push
nop
mov
mov
inc
sti
sbb
add
fldl
enter
xchg
dec
xor
out
or
aam
lock
xor
dec
and
ds
cli
sub
and
cltd
imul
notl
adc
sub
popf
fucomip
mov
les
les
ffreep
push
dec
aaa
nop
clc
rol
pop
shrl
in
js
inc
cwtl
add
cltd
ljmp
setb
in
in
mov
jb
add
jp
jg
pop
jo
push
fs
int
mov
xor
out
stc
mov
xor
jge
pop
xor
fistpl
or
cld
outsl
push
cmp
daa
xchg
lea
add
test
or
fnstsw
cmp
addr16
or
jno
mov
loopne
inc
push
push
jmp
xchg
sbb
jno
ljmp
sub
callw
int
imul
je
leave
movsl
cmp
xor
xchg
mov
push
inc
and
jb
addr16
ficomps
add
xor
icebp
and
mov
pop
fistl
xor
shll
out
sbb
jae
loop
pop
in
inc
notl
inc
movsl
cmp
xlat
sti
inc
lss
push
loope
into
inc
add
js
cmc
xor
cld
insb
and
mov
testb
lret
mov
ljmp
out
pusha
jns
leave
ret
ficoml
cmpb
xor
inc
das
gs
int3
sahf
call
push
mov
outsl
sbb
dec
and
adc
cmp
cld
pop
cmp
pop
pop
popf
aaa
popa
cmpsl
test
mov
daa
adc
fadds
xlat
xor
in
iret
pop
lahf
cmp
push
inc
jmp
jnp
cmp
insb
mov
and
test
sub
hlt
adc
xchg
mov
xlat
fiaddl
mov
add
aad
fsqrt
jne
sbb
push
push
clc
iret
xchg
jno
lds
outsl
aad
mov
xchg
add
mov
das
arpl
xchg
fcomip
int3
std
xchg
div
mov
ret
cmpsb
inc
fistl
push
lods
mov
dec
xor
and
dec
sbb
out
dec
test
sbb
push
movsl
mov
bound
pop
lods
sbb
in
das
inc
mov
vorps
scas
push
test
inc
popf
rorb
adc
outsb
sbb
test
addb
hlt
adc
addr16
jp
insb
ljmp
mov
movsb
gs
lods
fidivrs
test
add
or
subl
dec
cmpsl
lods
into
outsb
leave
sbb
mov
stc
cwtl
pop
jl
adc
or
mov
sbb
ds
mov
mov
sub
fisubs
inc
cld
fs
add
mov
push
loope
and
cli
and
jne
outsb
xor
jnp
add
adc
icebp
mov
sub
cmpsb
sti
es
jecxz
xchg
rorb
aad
cld
lods
leave
cmpsb
mov
xlat
jmp
xchg
mov
shrb
mov
push
pop
cwtl
ljmp
adc
daa
lcall
popa
pop
cmp
lea
lods
and
lds
mov
scas
adc
mov
push
and
and
push
popa
mov
inc
lods
cld
das
repz
aam
jg
push
lods
stc
adc
jbe
lods
mov
pop
out
jmp
test
add
call
ret
xchg
mov
dec
enter
addl
and
and
mov
arpl
mov
and
in
lds
sbb
sub
sbb
jbe
out
xchg
push
dec
cmp
inc
data16
jbe
mov
xor
out
mov
out
insb
leave
push
dec
lods
jp
xlat
and
in
cmp
nop
mov
test
js
les
ja
test
es
jmp
push
add
enter
rolb
mov
in
mov
int
and
mov
sub
pop
sbb
push
sub
pushf
inc
and
mov
stos
jns
fstpl
push
sbb
rdpmc
aam
dec
and
mov
and
fidivs
je
jnp
mov
push
or
inc
scas
inc
ja
bndstx
sub
pop
sub
repnz
cmp
inc
scas
scas
cmp
bound
cmp
xor
adc
xor
mov
cmp
or
add
pop
fbld
push
decb
dec
rorl
popl
in
or
jmp
xchg
cltd
adc
mov
push
mov
out
mov
jo
fidivl
add
clc
jae
das
mov
aam
sbb
sub
insb
pop
xor
hlt
pop
dec
aad
xchg
cmp
vcvttpd2dqy
stos
testb
mov
cmp
inc
ret
cmp
in
repnz
inc
js
cmc
rcrl
inc
daa
or
pop
cmp
mov
es
ror
jbe
movsl
pop
pop
cltd
aaa
xor
dec
push
or
mov
stos
popl
pop
out
fldl
adc
ja
lock
js
push
test
lret
jo
mov
js
scas
or
sbb
addr16
andb
stos
es
xchg
sub
test
inc
ret
sub
jne
push
testb
ret
imul
shlb
mov
push
jno
shlb
inc
and
js
insl
ret
jnp
loope
in
in
cld
sbb
stos
out
cmpsb
ret
shll
sar
pusha
cmp
and
push
dec
fisttpll
je
sbb
cmp
es
data16
xchg
jge
mov
mov
sbb
popf
adc
jae
test
cmp
shl
jp
pop
push
mov
and
cmp
mov
sub
sub
dec
insb
xchg
daa
inc
ljmp
fidivs
pop
movsb
in
cmp
or
push
out
int3
pusha
std
pop
push
mov
cmp
jmp
sbb
or
mov
dec
add
cmpb
outsl
es
xor
dec
scas
inc
jge
clc
test
outsl
jnp
mov
jmp
dec
scas
test
pop
bound
cmpsb
std
sbbl
and
ss
fdivrs
jne
popf
scas
xor
js
adc
xor
xor
das
hlt
xchg
inc
out
lds
insb
out
and
arpl
stos
adc
lcall
cwtl
xor
stos
into
inc
aam
ret
cmpsb
dec
fists
pusha
and
mov
lods
jo
sub
lcall
adc
aam
add
aaa
xchg
xchg
imul
shlb
jne
jecxz
adc
inc
sbbl
mov
sub
imul
push
or
xor
dec
add
fldt
mov
in
lcall
xchg
or
add
sub
jae
movsl
cmp
add
cmp
sub
pushf
pop
aam
jno
dec
jecxz
subl
das
sbb
cmp
push
add
cmp
mov
insl
bound
loope
and
and
pop
mov
sahf
ds
aad
loope
push
jmp
scas
xor
lret
into
scas
into
push
push
sti
and
push
xor
daa
mov
dec
inc
or
mov
hlt
adc
ret
mov
leave
xchg
sbb
jecxz
sarl
mov
test
adc
cmc
xor
scas
jl
js
lret
fwait
pop
adc
pop
xor
add
jne
dec
cmp
mov
xchg
xchg
aas
lcall
pop
mov
sti
aaa
or
sahf
fwait
test
cltd
sbb
test
orl
stos
jbe
testl
cmp
jg
lret
pop
xchg
fwait
mov
adc
and
cmc
sar
xchg
add
popf
cmc
pop
pop
std
push
jne
and
arpl
dec
jbe
imul
shrb
sarb
mov
test
jecxz
mov
ret
dec
dec
insl
sub
dec
in
inc
call
lcall
and
repnz
xchg
and
sbb
xchg
dec
pop
inc
push
pusha
ja
arpl
cmp
int3
ret
lods
push
nop
shrl
icebp
enter
xchg
mov
cld
adc
push
mov
lods
mov
cs
inc
repz
ljmp
jbe
iret
mov
nop
push
data16
nop
orb
and
adc
inc
lcall
jb
and
adc
cld
and
push
sub
sti
inc
push
stos
mov
ficomps
xchg
inc
push
andl
in
inc
shll
jae
mov
push
test
inc
mov
pop
scas
mov
loope
add
enter
cmp
insl
sub
mov
ja
fildll
sub
pop
dec
hlt
aad
add
in
sarb
push
and
jmp
cltd
adc
xor
jmp
and
lock
fdivrl
sub
sti
xor
inc
mov
stos
fistl
out
push
insb
sbb
lcall
push
sub
enter
pop
xchg
dec
dec
dec
mov
cmp
loopne
test
push
test
dec
stc
addr16
ljmp
pushf
icebp
pop
scas
test
adc
outsb
or
sahf
int
cmpsl
rcrb
jb
cs
dec
lea
mov
sarl
dec
pop
cmp
add
das
and
or
paddd
or
mov
push
and
fistpl
add
loope
pop
lcall
adc
into
data16
popf
sahf
fadds
lcall
hlt
adc
out
jg
inc
mov
push
sub
or
mov
push
or
cld
cmp
xor
rclb
out
andb
mov
inc
out
sub
or
jns
imul
and
jecxz
lea
mov
lfs
mov
test
jae
repz
adc
jg
stos
outsb
pop
negb
ljmp
es
das
dec
popf
notl
bswap
iret
cld
mov
xchg
sub
aas
aaa
mov
push
leave
push
in
cli
mov
or
jl
ret
outsl
xor
lcall
cwtl
mov
jnp
inc
xor
cli
push
push
enter
cmpsb
fsubrp
ljmp
push
push
mov
inc
cld
mov
mov
mov
inc
pop
and
xchg
rcrb
mov
and
or
test
and
push
pop
mov
cltd
cmpps
sbb
pop
repz
xchg
mov
rorb
inc
push
and
ret
xor
movsl
es
inc
pusha
pop
fs
pop
mov
paddsb
into
mov
cld
or
pop
scas
pop
cmp
lcall
and
push
sahf
stc
and
outsl
inc
aad
in
in
call
rorb
push
dec
fcoml
push
mov
mov
and
inc
mov
adc
jp
mov
sub
ljmp
js
imul
rcl
push
lds
mov
scas
inc
lret
int
sbb
add
sbb
add
test
lods
inc
fbstp
fisttpl
jecxz
inc
push
rorl
pop
pop
cltd
aad
es
mov
jg
xor
xchg
mov
pop
repz
cmpsb
lahf
daa
scas
xor
gs
pop
add
push
inc
pop
insl
inc
inc
jp
mov
xlat
add
push
xor
and
cmp
adcb
lahf
lea
sub
clc
cmpsl
sub
loop
xchg
pop
pop
add
add
sahf
in
adc
sub
xchg
xchg
int3
pushf
xchg
sub
repz
dec
aam
test
lahf
sbb
adc
cmp
or
xor
xor
jmp
mov
push
aas
dec
push
shlb
shr
sbb
fldenv
cwtl
andb
repnz
push
and
mov
xchg
jle
in
dec
ljmp
push
push
dec
mov
jg
enter
ret
cli
and
sbb
sbb
cmc
pop
or
cmp
push
dec
dec
jbe
mull
fistps
jnp
test
jle
outsb
inc
dec
dec
cwtl
mov
or
mov
lea
das
push
sub
aaa
icebp
jl
lods
out
and
push
inc
inc
xchg
addr16
push
out
in
xchg
addr16
lcall
push
call
aad
mov
arpl
xchg
mov
insb
add
sub
jmp
aam
movsb
mov
dec
pop
inc
in
add
push
cmc
cli
shrb
mov
xlat
cmpsb
cmc
sbb
adc
popf
xchg
mov
dec
mov
inc
xchg
aas
pop
dec
scas
inc
xor
fxch
xor
mov
pop
scas
aas
mov
test
stos
adc
jae
dec
call
jae
addr16
stc
les
adcb
outsl
inc
repnz
sbb
mov
cs
cwtl
shll
jg
fisubs
shl
mov
es
jne
dec
adc
rcrl
imul
jo
inc
out
shlb
test
out
mov
or
in
lcall
fcoml
push
std
clc
inc
das
push
or
pushl
in
push
cmpsb
jge
lea
outsb
fadds
mov
mov
ss
adc
jbe
cmp
fists
sbb
pop
mov
push
lds
fcomp
stos
add
mov
inc
dec
jmp
and
mov
mov
pop
repz
jg
es
push
jns
cmpsb
stos
xor
sbb
jo
xor
lcall
notl
fs
aam
ret
add
cmpsl
pop
xchg
sti
scas
stos
cld
jmp
cs
cmpb
mov
bound
imul
imul
push
lds
repnz
or
lahf
rolb
enter
gs
mov
fimull
daa
adc
push
je
pop
cmpsb
jno
mov
loope
sub
aas
jno
jno
ror
or
mov
push
sbb
je
scas
adc
pop
cltd
mov
vpsadbw
cmp
mov
add
rcl
or
or
jge
lock
cwtl
mov
jl
and
addb
mov
leave
daa
loop
xchg
push
negl
jno
stos
or
pop
leave
mov
jl
sub
leave
dec
add
jg
push
je
fs
xchg
sub
sbbb
push
lods
mov
inc
sbb
fdivs
out
pop
bound
pop
sub
adcb
adc
out
int
mov
bound
xchg
cmpsl
push
movsl
adc
fsubl
add
cltd
sbb
aas
adcl
orb
inc
mov
incb
mov
push
out
ja
mov
adc
jl
pop
inc
push
test
dec
aam
pop
mov
inc
shrb
mov
int
pop
bound
decb
jno
insl
add
jo
cmp
hlt
xchg
mov
ror
lret
push
cmp
push
mov
nop
pusha
addb
rcrb
test
pushf
cltd
fists
test
movsb
repnz
jns
add
mov
fmuls
pop
shlb
adcb
mov
jno
lret
scas
mov
loope
jb
outsb
mov
add
mov
out
ljmp
and
add
cwtl
mov
fbstp
sbbl
mov
jns
cld
sbb
sbb
mov
aas
icebp
mov
adc
adc
mov
jbe
adc
data16
sti
lret
sbb
push
and
mov
fsubl
push
lret
lods
cmp
sbb
mov
ds
cmpsl
inc
lods
pop
jbe
outsb
jp
xchg
outsb
aas
mov
mov
loope
dec
cwtl
xchg
cmp
loopw
out
dec
sbb
add
push
mov
jl
js
ds
ror
in
js
ficompl
xlat
pop
push
int3
jb,pn
out
cld
pop
shrb
push
sbbl
jbe
push
cltd
xchg
cmp
xlat
stc
push
int
jle
pop
mov
popa
adc
xchg
adc
inc
pop
pop
or
out
gs
push
jbe
arpl
dec
dec
dec
negl
jbe
out
lcall
aam
pop
xchg
lahf
pop
xchg
roll
sub
cmp
in
ficoml
mov
push
hlt
mov
mov
test
ss
mov
das
push
mov
repz
push
inc
mov
lret
pop
jno
stos
dec
call
jle
mov
pop
cli
jnp
outsl
add
es
pop
pop
ja
lea
ljmp
xor
pop
push
sub
pushf
data16
mov
cmpsb
cmp
dec
insb
pop
mov
cmp
inc
out
lahf
sbb
mov
psubb
cmpsb
mov
xor
pop
inc
cld
icebp
mov
addr16
jno
bt
cltd
sub
inc
and
mov
xchg
pusha
test
sbb
dec
icebp
mov
fistpll
stos
sub
xchg
jmp
dec
mov
xchg
xor
mov
call
push
push
stc
dec
in
fs
dec
jnp
push
mov
andb
addr16
jbe
loope
in
xchg
lret
shrb
sbb
addr16
xchg
fcoms
pop
sbb
xor
out
pop
jg
or
and
icebp
jnp
inc
cmpsl
ds
and
pop
sbb
pop
enter
push
sahf
and
aas
out
or
jmp
cmp
mov
push
push
mov
mov
rcll
cld
stos
pop
cli
insb
add
popf
or
sbb
insl
aad
push
or
jns
mov
stos
ljmp
sub
sbb
popf
aas
pop
loop
dec
push
xor
cmpsb
rclb
aam
fwait
and
lahf
aaa
adc
jne
xorb
out
clc
jns
sbb
repz
std
add
xor
rorb
stc
push
je
xchg
mov
xchg
daa
mov
mov
jae
push
stos
cmp
add
fstpt
icebp
pop
int3
arpl
pop
cmp
pop
out
xchg
add
es
dec
mov
xchg
mov
and
cwtl
and
cmp
inc
inc
jns
cmpsl
push
jne
imul
push
mov
out
xchg
sbb
dec
mov
jbe
fistps
repz
cmp
mov
test
mov
std
fwait
ja
int3
fisubrl
cmpsl
xchg
repz
test
repz
cmp
out
mov
aam
xchg
dec
addr16
das
fs
cli
and
mov
push
lahf
add
mov
sbb
lret
mov
mov
fisttpl
lods
jecxz
jb
sbb
mov
sub
sbb
ret
xchg
aaa
lock
inc
cmp
jg
jae
nop
inc
xchg
jnp
lods
pop
addr16
rcrb
das
xchg
das
add
sub
inc
jns
fbld
cmp
in
lcall
fcoms
xchg
inc
dec
inc
sbb
jge
fnstcw
push
std
add
xor
lcall
pushf
xor
rcl
fistpl
xchg
sub
imul
and
mov
divb
lret
sahf
shll
lcall
adc
pop
sbb
mov
out
stos
inc
push
sub
mov
adc
test
dec
jle
icebp
push
andb
mov
jl
sbb
push
cld
jbe
gs
insl
sub
mov
inc
ja
cwtl
jae
js
lods
cmp
jecxz
in
icebp
mov
xchg
sub
mov
mov
or
stos
bound
xor
or
in
cmp
pushf
xor
pop
scas
mov
lret
pop
mov
sti
out
xchg
ss
cmp
cs
push
adc
cmp
mov
xor
ljmp
ljmp
add
sarl
aam
adc
lahf
ret
int
mov
or
mov
push
adc
jg
pop
pop
jp
fcompl
sahf
int3
std
inc
fisubrs
out
addr16
in
sarb
pusha
sbb
out
fldl
jae
xchg
jns
push
xchg
das
loopne
add
notl
pop
jg
pop
stos
mov
sahf
clc
and
add
mov
adc
stos
mov
outsl
sub
lds
mov
out
fiadds
lea
mov
loope
das
stos
ret
cmpsl
push
adc
and
push
mov
lret
stc
cmp
in
mov
xchg
lahf
pop
ret
mov
or
sbb
push
lcall
sub
mov
mov
xchg
mov
pop
lods
mov
lods
jo
repnz
sarb
inc
push
stos
fwait
popa
outsb
fldcw
les
cmc
cmc
dec
pop
mov
out
cmp
adc
mov
stos
pop
xor
and
xor
xchg
ss
gs
pop
xchg
pop
arpl
push
hlt
and
and
sahf
push
out
int
ljmp
pusha
mov
call
in
shlb
fisubl
jae
fmulp
jb
jmp
out
sbb
daa
stc
mov
std
inc
call
iret
adc
not
jge
jne
cld
xor
pop
into
scas
adc
mov
pop
mov
push
xchg
cld
cmp
cltd
adcl
xchg
mov
aad
das
loope
daa
pushl
scas
neg
mov
js
fisubs
xchg
xor
in
or
movsb
cs
das
inc
mov
and
adc
xchg
inc
lcall
pop
stc
cmp
gs
pop
paddsb
mov
sbb
mov
sub
stos
jbe
xchg
jg
inc
xchg
add
clc
lcall
pop
orl
and
sti
stos
js
pop
jns
sub
cmp
mov
outsb
and
push
push
inc
lret
cli
xor
or
mov
sahf
sub
scas
imul
inc
mov
sub
add
or
data16
jb
xor
cwtl
insl
push
and
movsl
je
inc
xor
mov
repnz
lret
sub
js
jno
add
mov
inc
push
aad
and
adc
ja
std
test
in
inc
movsl
loop
sub
or
inc
or
enter
add
push
es
lods
inc
jnp
push
mov
inc
jnp
lcall
stc
adc
js
jo
sti
jae
sub
sub
nop
inc
idivl
push
push
out
fwait
jle
int
in
mov
test
pop
fsubrp
mov
aas
inc
jg
repnz
int
mov
add
enter
cmp
mov
insl
sarl
mov
hlt
imul
ss
push
cld
push
push
mov
shr
add
scas
into
pusha
push
fs
mov
mov
dec
lret
es
rol
push
cmp
in
outsb
jl
js
sbb
cmpsl
test
add
and
jno
aad
jno
aam
push
cmpsb
and
add
lret
int
shrl
push
sbb
add
add
lds
xor
jge
or
rolb
pop
movsb
out
imul
mov
cs
sub
push
aam
test
xchg
sub
dec
icebp
mov
mov
insb
pop
adcl
or
rol
mov
int3
and
repz
cmp
dec
mov
jmp
sahf
push
mov
xor
les
xchg
popf
pand
mov
adc
xchg
xchg
mov
es
je
sbb
cmc
popl
daa
jl
xchg
xchg
and
popf
cmpsl
fwait
out
dec
jns
sub
es
pushf
push
pop
sahf
add
push
lods
sub
cwtl
insb
adc
into
xchg
mov
int3
and
ljmp
imul
sub
loopne
mov
jmp
lods
mov
sub
loopne
das
adc
int3
jo
data16
nop
pop
push
sti
sarb
daa
push
cwtl
mov
jl
jno
pop
xchg
add
sub
clc
jae
testb
out
mov
ret
out
mov
sti
pop
jnp
cmp
scas
dec
fsubs
pop
mov
fcomi
xor
or
cs
sub
sbb
adc
int
pop
cld
je
push
pushf
inc
negl
add
mov
adc
jbe
shrb
push
xchg
mov
shrb
mov
lret
add
sbb
insl
ds
add
adc
xor
or
in
dec
sub
repz
out
jo
mov
test
fldl
dec
or
push
mov
inc
clc
sahf
jb
mov
dec
cmc
fcmovnbe
cwtl
je
loope
mov
xchg
insl
scas
sbbb
pop
mov
and
cli
push
mov
push
push
mov
push
mov
pushf
popa
or
adcb
add
mov
mov
add
jno
movsb
rorb
mov
adc
addl
fistpll
scas
rcrb
aad
and
pop
jb
mov
adc
loope
lret
mov
insl
clc
cmpsl
aad
mov
aam
cmp
roll
fcmovnu
movsl
mov
add
inc
enter
aas
push
and
jb
mov
sub
cmpsl
movsl
test
and
ss
hlt
jecxz
inc
mov
das
pop
arpl
es
aas
or
push
mov
shrl
movsb
mov
xchg
movb
push
cmp
xor
es
scas
push
das
inc
cmp
fwait
je
mov
push
push
jmp
mov
jo
pop
mulb
inc
sub
nop
adc
aad
out
sar
jg
dec
mov
shrb
push
jae
jbe
cmpb
clc
popf
pop
popf
sub
jne
dec
jle
jle
mov
and
xor
cmc
mov
cmp
pop
outsb
and
xchg
les
push
icebp
jbe
or
decb
or
jl
pop
sub
aad
xor
push
cmc
sbb
dec
push
into
loop
pop
test
jae
sub
jne
push
mov
push
dec
shll
mov
insl
push
mov
hlt
inc
test
or
out
shrd
xchg
inc
sahf
mov
mov
cmpsl
pop
and
mov
inc
sarl
adc
rclb
push
pop
out
sub
cmp
sub
mov
mov
orl
shlb
mov
xchg
hlt
insb
in
hlt
push
sub
add
mov
add
push
dec
clc
xchg
xor
loopne
loopne
sub
xchg
enter
or
outsl
and
or
lret
shl
out
inc
mov
leave
mov
mov
insl
in
pop
pop
dec
pop
pop
mov
cmc
jb
mov
faddp
inc
pushf
dec
push
aaa
push
xor
sahf
lods
pusha
add
arpl
lea
mov
mov
push
inc
fsub
mov
xchg
jmp
lea
int
adc
mov
imul
gs
cmp
xor
push
sti
mov
mov
popl
int
push
insb
lea
mov
cmp
jnp
popa
dec
xor
clc
out
cmc
aas
xchg
pop
addr16
cmp
test
lret
ja
mov
add
sub
and
repz
inc
sub
repz
call
jl
jnp
bound
mov
and
mov
movsb
dec
adc
adc
enter
xchg
xchg
js
dec
fisttpl
add
dec
movsb
in
fcoms
aam
mov
fmull
xchg
inc
imulb
testl
clc
das
inc
pop
popa
sbb
adc
lods
xor
shll
sub
ds
or
aaa
sbb
push
sahf
movsl
jns
fstp
push
in
mov
cs
pop
push
jl
subb
aaa
adc
dec
and
xchg
mov
imul
ljmp
aam
or
aad
fldl
sub
out
add
sub
push
arpl
sbb
xchg
iret
fcmovnb
sbb
lret
mov
lret
sarl
pop
or
sti
mov
testl
lret
ds
jmp
insb
jb
arpl
pushf
mov
pop
sub
add
mov
loopne
cmp
xor
jle
mov
add
cli
add
scas
lods
sti
addr16
js
mov
pop
mov
push
loop
incb
jbe
call
add
xor
push
mov
pushf
jno
lcall
mov
pop
cwtl
sub
loope
cld
pop
mov
mov
dec
subl
mov
lret
pop
ret
icebp
jmp
loop
adc
adc
rol
out
inc
jae
ds
aad
mov
mov
ljmp
stos
xor
pop
leave
cs
imulb
adc
xchg
mov
and
mov
scas
jno
push
mov
xchg
sbb
jnp
add
in
arpl
roll
ja
fisubrl
inc
cs
hlt
mov
jle
pop
xchg
ss
mov
scas
test
pop
xchg
aaa
mov
pop
sti
jle
mov
sarl
push
inc
sbb
cltd
les
xor
fbstp
add
cmpsb
hlt
hlt
stc
xlat
mov
fsubrs
rcrl
js
inc
jecxz
inc
ret
xchg
pop
add
pop
out
mov
inc
in
mov
mulb
xchg
push
sub
jne
mov
xchg
dec
jo
inc
mov
leave
out
and
xchg
add
in
loope
mov
add
lods
adc
enter
popa
test
dec
pop
mov
xorb
mov
or
dec
test
mov
fisubrs
lcall
xor
jmp
xchg
rol
mov
mov
in
jae
in
aam
movsb
mov
mov
add
ja
fcoms
sbb
xchg
sub
mov
mov
or
and
int3
lret
cmp
sub
clc
adc
pop
lds
inc
mov
pushf
hlt
cmp
cmp
cmp
cld
xchg
pushf
scas
xchg
cwtl
pop
mov
pop
dec
fwait
ret
out
push
xchg
cmp
ret
fnstsw
cmpsb
das
xor
mov
dec
jno
adc
jae
xchg
jg
call
subl
flds
jno
or
cmp
sub
outsl
mov
test
aaa
mov
je
pop
ja
orb
jge
xchg
xor
cmp
xchg
jp
cmp
push
bound
fisubl
mov
cwtl
lock
lods
and
jno,pt
push
jp
xchg
add
push
dec
insb
push
shlb
push
mov
lds
add
push
out
movsb
cli
test
cmp
pop
cltd
xor
push
mov
pop
mov
dec
push
in
adcb
in
ljmp
ljmp
mov
push
sub
mov
dec
lahf
mov
push
xlat
xchg
jecxz
mov
adc
xor
cmpsb
lock
push
adc
jl
inc
scas
in
hlt
and
aad
rcrb
bound
push
xchg
push
mov
xchg
cmpsb
iret
icebp
mov
xchg
lret
add
xchg
xor
icebp
mov
icebp
adc
es
and
inc
or
cmp
xchg
pop
lock
or
rcrb
push
jle
pop
pop
sbb
adc
ja
std
in
xchg
push
pop
cs
mov
cmp
ja
ret
out
mov
js
cmp
hlt
jecxz
imul
cmpsl
sub
add
incl
add
mov
inc
bound
fisttpl
pop
movsb
filds
lahf
mov
add
dec
test
out
enter
cmp
fbstp
pop
push
scas
les
push
aam
hlt
xchg
jb
mov
pushf
stc
daa
xchg
add
stc
lea
outsb
stos
xchg
sti
mov
jne
sub
xchg
add
lds
lea
pop
and
out
out
inc
fs
push
sub
push
je
bnd
push
sbb
addr16
stc
rorb
and
push
ljmp
or
ficomps
push
dec
in
sub
or
movl
rcrl
fmull
cmc
mov
js
stos
dec
jno
icebp
leave
je
cmpsb
nop
sub
dec
jecxz
into
mov
iret
mov
or
enter
pop
lds
mov
arpl
insl
outsl
sbb
pop
mov
jne
sub
popf
mov
insb
mov
fimuls
jne
cmp
gs
xchg
scas
and
call
mov
repz
jle
sbb
add
jbe
pop
or
aad
aas
mov
push
push
ljmp
xor
fmul
jle
shrl
sahf
xchg
lcall
bnd
test
inc
mov
add
adc
and
sub
jb
outsb
outsb
mov
inc
sub
fbstp
push
adc
iret
ud0
shll
mov
inc
pushf
inc
push
call
and
jle
inc
adc
add
cmp
sbb
mov
clc
push
jo
stos
pusha
repz
in
dec
xorl
inc
push
jge
or
push
xor
mov
pop
mov
sbb
into
movsl
inc
pop
daa
adc
into
stc
sbb
jmp
mov
sub
mov
push
ds
dec
push
xor
add
add
pushf
push
and
popa
outsl
dec
stc
clc
imul
sbb
push
cpuid
mov
mov
xchg
xchg
jb
insl
movsb
fstpl
lcall
stc
je
xchg
and
xchg
mov
sub
mov
fnstenv
test
and
ljmp
push
or
sti
mov
push
mov
mov
xchg
mov
movsl
push
stc
ret
in
ret
and
iret
cmpb
mov
dec
lahf
cmp
sbb
lods
outsl
add
test
mov
jbe
sbb
in
mov
js
stos
mov
out
outsl
mov
inc
cmpsl
rcr
imul
and
jmp
and
imul
int3
mov
dec
add
cmc
mov
inc
adcl
push
adc
sbb
in
mov
lcall
adc
jae
dec
mov
jg
out
cli
test
cmpb
movsb
or
jle
in
pop
lahf
out
xchg
xchg
jmp
xchg
and
jbe
mov
jmp
ja
cli
fadds
jns
sbb
add
xor
inc
or
jecxz
dec
add
shlb
out
stc
fs
and
popf
adc
shrb
gs
outsb
jno
push
add
cmpsb
mov
mov
enter
cmpsb
or
dec
mov
xchg
push
push
adc
lods
add
push
mov
pop
adc
data16
add
xchg
call
pop
mov
xchg
out
adc
data16
stc
mov
sbb
cmp
iret
loope
aam
jo
xor
aad
mov
inc
fiadds
mov
cmpsl
ret
xchg
leave
xchg
js
xor
daa
inc
scas
add
jmp
mov
cmp
adc
inc
je
pop
push
data16
cltd
addr16
cmp
xlat
cmc
xor
inc
sub
mov
out
aas
imul
clc
sub
shrl
push
dec
push
xchg
xor
popw
pop
in
push
xchg
mov
outsl
add
mov
les
mov
pop
fstl
outsb
nop
sub
rorl
pop
dec
add
pusha
jne
mov
jg
sub
rclb
ret
roll
lds
je
int
std
ret
mov
jp
mov
call
push
cwtl
pop
mov
jne
jbe
add
std
dec
cmc
repz
rorl
hlt
pop
xor
movl
xchg
aad
popf
js
mov
imul
adc
cwtl
add
sahf
xor
movsl
push
xchg
repnz
ret
mov
or
insb
notb
test
cltd
ror
pushl
ss
cmpsb
ret
and
jecxz
jmp
inc
fsubl
arpl
mov
jmp
pop
add
movsl
cwtl
xchg
or
fsincos
outsb
insl
decl
daa
pop
repnz
sbb
not
mov
adc
sbb
negl
jge
xlat
sbb
jno
xchg
mov
scas
inc
inc
sarl
adc
stos
and
mov
ret
mov
push
in
mov
inc
or
enter
sub
or
cmpsb
lds
inc
bound
or
shll
fnsave
int3
arpl
pop
outsb
fsubp
movsb
add
ja
cld
xchg
xchg
je
cmpl
pop
or
cli
sub
or
int3
sub
jb
and
jmp
mov
gs
xchg
mov
fucomip
mov
pop
outsb
mov
lret
aaa
lcall
loope
ret
push
adc
out
sub
dec
mov
popf
inc
repnz
jne
sub
or
and
or
int
pop
mov
pop
mov
out
rcrb
adc
pop
push
adc
imul
mov
xchg
pushf
scas
int3
push
push
xchg
push
jae
pop
in
dec
add
inc
repnz
js
mov
add
aas
or
cmp
jl
daa
cmp
mov
jmp
pop
push
add
aaa
test
cli
jns
mov
fmul
jl
cli
mov
fdivl
push
lcall
lods
pop
ja
and
mov
mov
and
cld
xchg
addr16
aam
xor
adc
inc
cwtl
test
scas
push
ret
pop
icebp
clc
mov
mov
cwtl
repz
cmp
xchg
push
inc
in
cli
stos
sub
and
outsb
add
shrl
pop
and
and
add
int
or
das
outsl
das
add
insl
shl
pop
lods
rcrb
adc
push
dec
and
mov
mov
dec
mov
mov
int
and
arpl
lock
cltd
mov
sub
cmp
imul
push
add
cmp
gs
push
leave
pusha
push
mov
lea
pop
test
jae
mov
jns
dec
test
push
mov
or
xor
mov
outsl
scas
cmc
rorb
mov
cmp
or
dec
xchg
inc
mov
xlat
inc
movsl
mov
aam
or
inc
or
gs
sub
repz
in
call
pop
jecxz
dec
das
adc
imul
popf
and
addr16
adc
mov
arpl
mov
pop
test
je
lods
gs
out
divb
arpl
fdivl
and
int3
lea
pop
ds
scas
rcll
mov
repnz
pop
pop
in
pop
insl
sbb
scas
in
test
or
adc
or
into
sbb
out
push
sub
adc
xor
pop
and
ss
xchg
hlt
and
mov
inc
mov
inc
pop
mov
mull
push
mov
fdivrs
movsl
mov
aaa
stos
aas
sub
jp
popf
call
push
mov
jmp
mov
sahf
dec
mov
sbbb
out
push
pop
or
adc
or
pop
imul
rol
pop
jae
pop
aad
pusha
test
cmp
or
add
mov
loop
cli
adc
mov
mov
or
and
and
adc
test
cs
test
adc
jecxz
inc
shlb
flds
dec
pop
bound
pop
xor
dec
add
movsl
fisubl
xor
mov
flds
xor
shrb
or
and
int
cmp
xor
idiv
lods
cmp
out
lods
popl
fisubs
stc
and
xchg
dec
arpl
jns
shrl
jb
shl
insb
pop
sbb
inc
cmpsl
mov
int
lds
jns
mov
shrl
inc
inc
lods
inc
addr16
addr16
pop
movsb
xchg
mov
pop
add
rcrl
cmpsb
lock
mov
mov
and
push
data16
push
fisubl
cmp
push
fcmovu
dec
arpl
jmp
jg
cmp
inc
push
and
and
rclb
mov
dec
movsl
xor
ret
sub
mov
jno
lods
mov
ret
hlt
sbb
pop
push
fisttpl
push
or
imul
dec
mov
rclb
fsubl
ret
dec
shrl
clc
xor
aas
pop
out
pusha
jg
inc
jmp
jbe
dec
dec
adc
xlat
loop
jmp
mov
mov
dec
mov
jmp
cmp
es
int
mov
or
inc
adc
fmulp
mov
fimull
adc
inc
sub
push
add
pop
adc
cltd
sub
stos
imul
mov
pop
and
xor
fadds
or
movsb
push
inc
adc
pop
scas
outsb
mov
scas
fildl
repnz
push
test
sub
push
pop
cltd
inc
sbb
jle
lret
int3
xor
addr16
jo
pop
inc
lods
jnp
adcb
adc
dec
rolb
shl
mov
mov
or
mov
lret
ret
dec
mov
inc
xchg
test
fsubr
xor
pop
rolb
push
in
mov
xchg
and
sbb
aaa
inc
jg
test
insl
xchg
mov
sbb
xchg
popa
xchg
ds
add
aaa
iret
pop
dec
notb
out
pop
mov
mov
jmp
lret
scas
dec
bound
movsl
iret
dec
mov
mov
jp
outsb
push
movsb
or
mov
pop
jge
jle
daa
sbb
mov
stc
cmp
push
ret
pop
mov
inc
in
int
cwtl
inc
sub
push
cltd
cmc
inc
data16
sti
lret
lcall
cmp
fidivrl
push
pop
cmp
scas
shrl
lcall
popa
jle
and
add
scas
lret
loope
into
push
scas
or
loopne
xchg
scas
pop
sub
jno
pop
add
cmpb
lods
movsb
jge
sbb
xor
jbe
mov
fwait
push
inc
std
pop
pop
lock
js
js
shll
pop
pop
arpl
int
sbbl
shrl
lret
ss
mov
cmp
cmp
pop
pop
mov
add
into
xor
andl
mov
and
aad
ljmp
loopne
outsl
test
mov
faddp
dec
test
cmp
or
test
movsl
fs
out
sarb
nop
mov
cs
out
es
pop
inc
or
pop
pop
push
mov
add
mov
pop
sbb
jmp
xlat
cmp
sbb
dec
add
repnz
shlb
int
incl
fwait
lock
movsw
in
push
push
int
push
or
std
xor
cmp
stc
rorl
cmc
insl
scas
xor
jno
add
lret
dec
pop
movsb
dec
gs
mov
add
dec
sub
enter
jae
inc
sub
testb
add
inc
daa
decl
into
jl
push
data16
xchg
sub
in
loopne
in
mov
sub
mov
sbb
je
pop
movsl
cmp
mov
jb
pop
dec
pop
mov
divl
adc
imul
or
ret
jp
aad
ret
rcrb
in
loope
or
shlb
pop
fisubl
sahf
push
outsl
jo
jb
imul
clc
inc
mov
aad
out
lcall
ficomps
cmp
inc
mov
pop
pop
lret
xor
into
mov
push
fsub
js
lret
mov
jge
aaa
dec
cwtl
out
and
push
dec
and
pop
jnp
mov
aam
push
out
xor
insb
sbb
imul
jns
lret
test
jae
push
and
dec
std
or
repnz
dec
fs
mov
fdivp
pop
jle
in
insl
popa
lahf
jecxz
push
lahf
fucomi
cmp
fnsave
in
dec
mov
sbb
rclb
out
je
cld
push
icebp
movsl
leave
divl
pop
push
pop
cmp
xlat
push
xchg
lea
daa
mov
gs
out
into
das
push
or
inc
cwtl
mov
push
inc
jno,pt
scas
and
pop
popa
lock
imul
xor
xchg
adc
mov
mov
movsl
and
add
push
sbb
nop
in
xor
pusha
pop
cmp
xchg
cmpsb
mov
sbb
outsb
xor
inc
sub
jns
cmp
jecxz
or
call
mov
mov
cs
leave
repnz
cmp
dec
sbb
dec
iret
call
dec
mov
mov
mov
ficoml
mov
pop
popf
mov
ja
xchg
data16
repnz
int3
lcall
push
jle
sub
fwait
push
dec
pop
push
aam
pop
jo
cmc
push
mov
int
pop
dec
jl,pt
sbb
or
fistpl
adc
dec
cld
fidivl
push
loopne
in
cmp
fs
pop
or
arpl
sub
cmp
test
add
lods
cli
adc
lar
jnp
adc
add
sub
imul
cs
lret
out
in
push
jns
cmpsb
mov
dec
in
out
jno
mov
mov
int3
into
pop
addb
push
or
les
sarb
and
mov
cwtl
sub
adcl
test
out
jno
inc
push
lods
add
mov
lret
xor
wbinvd
cld
pop
sbb
inc
add
pop
dec
sub
aaa
into
cs
test
xchg
or
push
rcrl
pop
jmp
adc
cs
daa
mov
lret
jo
rcrb
in
mov
push
fiaddl
sub
popa
and
addr16
add
jmp
stc
adc
movsb
cmp
pushf
aaa
int
out
dec
pushf
xchg
and
cmp
pop
outsl
mov
xchg
lahf
mov
sub
jno
lcall
jne
dec
fmull
adc
imul
mov
mov
ss
leave
in
dec
or
fwait
in
mov
outsl
rcrb
scas
jle
push
js
int
mov
shll
jmp
and
aas
pop
jno
iret
sbb
mov
pushf
lahf
fneni(8087
pop
and
addl
bound
jae
jge
aam
decl
pop
cmp
push
addr16
mov
sbb
mov
push
fadds
popl
xchg
popa
sub
mov
xor
and
sub
push
dec
outsb
dec
mov
testb
call
pop
mov
nop
rol
jecxz
mov
orl
mov
sub
cld
dec
ljmp
fidivrs
add
jl
gs
pop
mov
jns
std
push
fxch
fwait
mov
cmpsb
fistpl
daa
inc
cmpsl
dec
mov
addr16
xchg
inc
lock
dec
rcl
and
int
andl
repz
imull
int
sub
imul
lret
sub
inc
mov
xchg
in
xchg
jbe
mov
and
adc
adc
test
lahf
xchg
loop
adc
push
daa
jb
cmp
dec
mov
cmp
or
aaa
pop
cmp
mov
push
push
or
loope
lea
sbb
dec
test
inc
cmp
stos
leave
call
lret
jno
shll
dec
or
pusha
les
jmp
jmp
out
cmp
pop
test
mov
add
push
in
cltd
adc
dec
and
push
loope
mov
xchg
hlt
ljmp
mov
jp
and
adc
add
xor
pop
punpckldq
sub
or
xlat
imul
lods
or
arpl
out
lret
adc
sbb
shrb
mov
clc
or
mov
gs
jg
mov
add
cs
xchg
sbb
push
cmp
sbb
insb
pop
aad
aad
inc
inc
mov
ret
incb
sbb
dec
ss
and
xor
rclb
in
shr
bound
adc
cmc
cmp
add
lret
shl
and
or
insl
adc
aaa
mov
daa
in
sub
fnsave
jo
jne
mov
mov
in
dec
data16
add
xor
jns
push
adc
add
fldcw
lds
mov
adc
inc
mov
or
xchg
pop
mov
in
dec
mov
mov
outsb
or
popf
add
lahf
xor
pop
lret
es
pop
lret
imul
pop
sub
imul
enter
pop
or
or
fildl
mov
iret
data16
pop
shll
sub
jecxz
lods
pop
shrl
stos
enter
add
stos
fsubrl
mov
mov
loop
imul
lock
pusha
cltd
mov
loope
pop
adc
jno
mov
and
sbb
mov
push
or
cmp
mov
cmpsl
sti
push
in
lcall
or
mov
push
test
frstor
out
add
push
mov
push
jl
jns
outsl
nop
ret
jp
sub
sub
add
mov
ja
mov
or
jl
shlb
lret
movsl
stos
add
shlb
or
js
xor
xlat
sub
cmp
xlat
dec
add
inc
mov
mov
mov
or
int3
test
pop
mov
stc
pop
add
fsubrs
pop
inc
loopne
sbb
cs
outsb
sbb
adcb
push
pop
sub
div
push
push
sbb
dec
lea
dec
mov
movsl
adc
rolb
imull
mov
data16
xchg
imul
lods
pop
and
dec
mov
dec
ret
sub
clc
out
sub
inc
scas
mov
cmc
add
mov
mov
hlt
andl
cltd
hlt
sbb
mov
adc
push
cmp
mov
add
mov
mov
aaa
arpl
push
dec
sbb
sti
cmpsl
lods
mov
jo
ss
int
jb
inc
lea
out
popl
int
mov
mov
xor
xchg
mov
mov
push
push
sbb
addr16
cwtl
sub
test
dec
sbb
xor
pop
shr
mov
stos
push
cmp
hlt
xchg
sbb
mov
jge
push
xchg
mov
gs
mov
mov
push
mov
pcmpgtd
fists
sarl
fwait
pop
jbe
and
and
roll
or
ss
rcrb
mov
jmp
repz
in
mov
dec
push
stos
scas
sub
push
pop
lods
sbb
add
xor
and
xchg
jmp
pop
sbb
push
jmp
push
shlb
stos
test
pusha
pop
in
dec
push
pop
test
popa
clc
sahf
into
cmp
loope
mov
movsl
cld
test
push
add
xor
xlat
lahf
in
adc
mov
sahf
and
mov
int3
insl
in
jmp
inc
mov
dec
mov
lret
push
iret
cmpsb
pop
inc
push
daa
movsl
das
pop
push
fmull
into
jecxz
xor
sub
xor
stc
xchg
in
mov
imul
insl
lods
jns
adc
repz
xchg
scas
rcr
inc
gs
lret
xchg
xor
movsl
push
xchg
orl
popf
mov
in
shl
rcll
jbe
aaa
dec
cmp
xchg
push
sbb
xchg
aam
test
test
lock
jno
rcr
scas
xor
mov
pop
unpckhps
inc
test
add
push
psraw
and
jo
push
mov
int
sbb
enter
mov
or
btr
lods
pusha
aaa
pop
sbb
ret
sub
pusha
lcall
and
sarb
lcall
jge
das
mov
mov
or
or
push
mov
and
inc
or
pop
pop
rcrb
subb
sub
fildll
loopne
cli
xchg
cs
insb
es
sbb
sub
adc
jo
sub
pop
cs
lods
pop
jp
jg
cmpsb
ficoml
sbb
bnd
subl
jnp
popf
repnz
sub
mov
lds
cmp
adc
daa
aas
fnsave
sub
fists
dec
imul
iret
ret
inc
mov
jne
out
push
sbb
sahf
fidivs
shlb
mov
clc
outsb
dec
fcmovu
sahf
adc
iret
imul
dec
pushf
mov
dec
pop
ffreep
dec
dec
outsb
mov
cmp
pop
inc
adcb
mov
cltd
lcall
ljmp
aam
fcompl
xchg
fildl
sbb
aaa
push
mov
jg
imul
push
popf
xabort
movsb
mov
js
loop
lahf
add
and
mov
cmp
lds
push
movsb
or
imul
jns
sub
cmpsb
mov
test
jbe
insl
rcrb
jp
and
fidivs
inc
xor
jecxz
insb
sub
rcr
jo
pop
repz
test
mov
ret
jmp
insl
out
jns
jns
scas
pop
mov
loop
xor
and
push
push
lcall
test
leave
das
je
sub
cmp
call
dec
xor
mov
popa
fldpi
fnstcw
fldt
mov
sbb
mov
mov
cmc
shrl
jno
inc
gs
xchg
cld
xchg
cwtl
add
mov
hlt
xorl
int
cmp
ret
jp
mov
ret
lock
ret
push
mov
push
mov
int3
lahf
push
mov
rclb
and
sub
mov
in
cs
xchg
int3
pop
dec
mov
dec
sub
sahf
jp
lods
xor
bound
xor
jecxz
push
xor
jns
mov
pop
loop
aad
push
mov
out
inc
push
sub
sar
int
sub
shrl
adc
dec
cmp
rcrl
mov
inc
sbb
ja
inc
lods
inc
aaa
popf
insb
lea
add
push
scas
xchg
xor
scas
movsl
xlat
sub
sub
shrl
popa
stc
rol
push
movaps
das
dec
in
xchg
mov
iret
mov
pushl
fisubs
inc
lods
fstps
push
stos
addr16
sub
jnp
cwtl
mov
js
cmp
repnz
lret
testb
scas
dec
in
int3
outsl
ret
int3
lret
dec
dec
cli
mov
dec
xlat
movsb
jecxz
mov
les
mov
ret
jmp
cmc
cltd
fstpt
int3
cmovno
inc
das
in
cmp
fmul
push
pop
pop
repnz
mov
xchg
cli
jo
jno
cwtl
inc
popa
cli
pusha
aam
lock
adc
pop
stc
inc
or
xor
dec
nopl
add
cmc
repz
jmp
mov
popa
dec
nop
cmovs
cmp
jp
out
push
ljmp
out
popf
out
nop
daa
jns
mov
sub
sub
dec
into
add
aas
mov
divl
push
fdivs
inc
inc
mov
shl
cltd
adc
test
mov
rcrb
cs
lods
in
rcrl
add
rorl
sbb
stc
or
lret
out
es
pop
ljmp
lcall
and
and
stc
xchg
sahf
aas
push
shl
fsubrs
jbe
fldenv
inc
jbe
push
adc
inc
lret
cld
popa
or
ss
mov
inc
or
jle
iret
repnz
mov
dec
adc
jb
sbb
lods
xchg
daa
pop
ss
in
jl
inc
scas
push
aas
push
dec
dec
int3
sub
pop
out
xchg
jne
mov
ja
je
push
adc
mov
push
ds
cltd
dec
xchg
and
imul
pushf
pop
pop
pushf
movsb
push
lahf
add
lret
cld
push
cmpb
xor
fistl
inc
ljmp
cld
pcmpgtd
add
and
adc
es
pushf
xor
fdivrs
sub
push
push
imul
xor
sub
pop
xorb
loop
sub
pop
or
push
mov
push
divl
or
js
mov
iret
adc
xchg
mov
xchg
arpl
cli
dec
add
jnp
popl
xor
ja
push
jb
jnp
pop
xchg
in
mov
add
cli
pop
dec
loope
pushl
loope
push
pop
roll
test
sub
pop
mov
push
repnz
dec
sub
xchg
jle
les
int
mov
js
mov
fcoml
sub
inc
lret
outsb
hlt
jmp
mov
push
jno
or
lds
cmp
out
or
call
clc
jb
xchg
int
enter
cmp
dec
aam
js
dec
out
sbb
add
push
and
inc
loopne
pop
adc
ss
adc
test
fldpi
icebp
mov
in
inc
cmp
test
push
out
enter
sub
xor
sahf
jbe
js
push
mov
inc
repz
out
cwtl
xchg
iret
mov
xor
mov
xor
mov
sub
mov
mov
sub
xchg
cmpsl
ds
lds
and
add
add
cmp
xchg
repz
push
scas
adc
dec
iret
fistps
add
popa
cld
int3
sbb
and
push
lcall
xor
daa
mov
lahf
notl
sub
push
sbb
pop
stos
cmpl
or
ja
mov
xor
out
inc
gs
mov
in
setno
lods
dec
divb
xor
pop
mov
data16
ja
cli
sub
scas
lods
mov
jbe
sbbl
sbb
and
out
push
jecxz
pop
dec
fs
or
fwait
scas
sub
push
stos
iret
js
repz
xor
stos
lds
mov
out
fdiv
pop
int3
and
add
or
xchg
negb
mov
jge
inc
sbb
jnp
in
popa
aaa
into
xchg
dec
jo
cmp
lahf
push
orb
sbb
push
inc
mov
out
sub
sub
push
inc
test
mov
xor
aas
loope
push
lea
mov
mov
sub
or
repnz
movsb
jmp
inc
into
arpl
cmp
jl
loop
test
add
mov
or
cmc
or
clc
push
push
xor
fiadds
push
mov
out
dec
fstl
xchg
pushl
push
call
jb
and
add
imul
out
andl
in
popa
xor
orb
out
xchg
sub
shrl
imul
nop
leave
mov
mov
mov
out
add
int3
cmp
std
clc
jae
sbb
sarl
mov
adc
adc
jno
ret
out
shrl
or
fnsave
pop
mov
inc
dec
pushf
stc
test
out
xor
adcb
and
mov
cmp
bound
icebp
movsl
jmp
jno
xor
fimull
test
in
lods
lock
imul
mov
repz
jmp
mov
and
xchg
cs
or
pop
mov
insl
jle
std
adc
cs
mov
outsb
inc
insb
adc
test
test
test
aaa
mov
repz
xchg
push
mov
stc
and
add
bound
and
test
xor
add
xlat
scas
scas
and
mov
sub
out
jno
or
cs
sbb
sub
not
mov
pop
fidivrs
and
aad
push
repz
inc
clc
and
inc
inc
sbb
into
out
jmp
push
stos
jo
addl
xchg
xor
ret
sahf
scas
add
inc
leave
lahf
fnsave
mov
stos
int
stos
jmp
push
les
mulb
push
in
mov
pop
mov
mov
in
xchg
pop
cwtl
clc
add
cld
lcall
ja
mov
adc
lds
pop
lock
insl
shrl
cmpsl
jae
xor
cmp
jmp
insb
dec
rep
cmp
mov
ljmp
pop
bound
mov
jmp
mov
inc
sub
inc
and
sbbl
arpl
mov
add
sti
out
mov
int
pop
mov
mov
or
dec
inc
fisubs
aaa
dec
mov
data16
ds
lahf
dec
jp,pt
pushf
xor
dec
or
push
mov
mov
or
adc
les
mov
movsl
xor
mov
test
pop
push
test
or
lret
jp
popa
ljmp
sbb
sbb
out
xchg
jl
or
cmpsb
nop
pop
fbstp
sub
inc
lret
xor
add
jo
jp
aad
or
fnstsw
out
sub
leave
pushf
mul
jp
push
aas
imul
lahf
sub
lahf
and
nop
js
lahf
cmp
xlat
push
negb
ja
jp
cmp
or
or
or
sahf
cltd
push
sbb
sahf
pusha
sub
mov
mov
mov
ret
jl
aas
sub
mov
cmp
fstpl
add
sub
stc
adc
sub
andl
pop
inc
in
or
ret
push
sub
andb
in
cld
push
or
stos
test
fdivs
pop
adc
inc
imul
jo
lods
sub
fisubl
int
test
mov
cld
adc
add
filds
pop
imul
rcr
repnz
xchg
dec
dec
dec
mov
push
fwait
pop
loopne
lahf
test
ja
scas
pop
push
jbe
or
popa
mov
push
xchg
xchg
mov
aas
fsubp
movsl
punpcklwd
xchg
jbe
cld
push
xchg
lahf
dec
fadds
das
cmp
ss
xchg
sti
push
jo
xor
mov
jecxz
mov
push
inc
inc
xlat
jno
rclb
xchg
cmp
xchg
ljmp
push
pop
lret
cmp
aad
cltd
popl
add
movsl
xor
adc
out
jnp
and
adc
stos
hlt
and
aad
mov
and
stc
inc
cli
daa
inc
or
lock
mulb
repz
or
cmp
pop
xchg
sarl
daa
xor
fs
lds
icebp
loope
and
mov
ret
push
mov
sbb
stc
insl
pop
sahf
add
jl
in
add
lea
ja
sub
rcll
scas
sub
std
or
push
xlat
call
movsb
pop
pushf
insl
inc
xchg
icebp
cmpsb
mov
mov
fcmovne
inc
sti
mov
or
inc
loope
ljmp
repnz
mov
cltd
mov
lret
inc
ficomps
shlb
mov
lret
in
les
arpl
sbbl
or
stos
iret
data16
mov
and
adc
ds
mov
push
sbb
cmpsb
lds
push
rclb
jp
leave
in
xor
push
out
mov
xor
sub
jne
das
repnz
inc
cmpsl
jp
insl
pop
cmp
in
sti
mov
pop
jecxz
jne
push
sub
in
loopne
dec
cmp
mov
mov
xchg
repz
push
imull
push
inc
mov
je
outsl
cmp
jmp
cwtl
push
out
mov
mov
mov
xor
jl
pusha
scas
ficoml
add
and
test
mov
fmul
aad
lahf
lds
cwtl
or
cwtl
mov
xchg
jnp
cmp
insl
sbbb
dec
mov
push
sub
sub
nop
push
mov
subl
sub
push
push
test
and
adc
sbb
adc
clc
jno
fwait
sti
in
ja
repz
xor
jle
enter
dec
popa
ret
mov
dec
cmc
icebp
xor
dec
or
icebp
or
leave
jb
xor
inc
test
cmp
outsl
leave
les
mov
push
and
cmpsb
aaa
int
mov
shl
aam
sbb
or
mov
push
mov
pop
fld
gs
cmp
cmpl
mov
push
jmp
sub
sub
and
vpsrlw
adcb
push
and
xchg
cmc
sbb
gs
into
adc
cmp
into
sti
fcomip
rolb
push
repnz
inc
push
lcall
push
inc
cmp
aaa
push
inc
fstp
xor
lret
sahf
xor
daa
pop
cmp
adc
in
cmpl
pop
lods
js
mov
sbb
sti
push
mov
mov
test
aas
sbb
loopne
xor
cmpsl
lods
inc
sub
pop
cmp
jne
rorb
mov
xor
inc
bound
adcb
push
inc
pop
idivl
cmp
add
fiaddl
cmpb
xor
movsb
ja
inc
popa
mov
and
fnstenv
sti
or
js
out
outsl
push
adcb
sbb
test
stos
inc
cmp
pop
sbb
xchg
cmp
imul
xchg
test
xorl
fldcw
jae
sbb
mov
push
out
sarb
call
sbb
mov
ja
push
in
push
pop
out
add
aaa
mov
hlt
or
sti
dec
out
mov
dec
pop
icebp
jo
mov
imulb
ret
imul
std
xchg
pop
pop
mov
dec
cmp
sbb
cmp
jecxz
adc
mov
in
and
xchg
loopne
cmp
call
xchg
icebp
adcl
push
push
mov
mov
push
movsl
mov
iret
sub
pop
pop
decb
jo
arpl
inc
mov
inc
push
fbld
jecxz
test
sahf
enter
mov
xchg
pop
lcall
sub
pushf
ds
loopne
subb
repz
jecxz
xchg
bound
cmc
cltd
or
scas
mov
jle
outsb
mov
fucomip
or
cmc
push
add
stos
xchg
popf
xor
dec
dec
pop
mov
mov
icebp
jnp
inc
xchg
mov
jbe
mov
xchg
xor
dec
xchg
aas
outsl
and
icebp
scas
xchg
adc
mov
fsubs
repz
and
repnz
in
mov
dec
jnp
jl
je
ljmp
sub
cs
jle
popa
xchg
ljmp
push
jg
and
and
inc
pusha
mov
mov
test
shll
push
fcoms
ds
repnz
mov
mov
data16
pavgb
mov
jbe
cmp
mov
adc
lea
cmp
fcoml
nop
dec
add
jns
push
mov
test
jno
jae
and
xor
ljmp
fiaddl
test
mov
mov
loope
mov
stos
rclb
ret
fldt
or
cmp
add
push
into
pusha
adc
push
iret
inc
fsubrs
xchg
jb
ret
cmp
sbb
dec
loope
cmp
xchg
aas
ret
nop
dec
leave
rcrl
scas
xchg
xchg
decb
stos
mov
push
out
push
sbb
xchg
mov
jecxz
mov
lock
add
inc
mov
xlat
sbb
jle
sub
mov
dec
mov
cmp
or
xchg
in
ret
lcall
data16
scas
mov
popa
sbb
jno
sub
je
outsb
repnz
ds
push
lcall
xchg
add
jo
add
dec
loope
jle
insb
test
xchg
inc
fadd
sub
dec
push
negb
jge
ljmp
mov
lret
push
cld
inc
rcrl
push
push
dec
lret
bound
inc
push
lret
add
lahf
mov
xchg
jbe
mov
fldl2t
lds
and
mov
mov
js
jmp
andb
xchg
sub
in
mov
push
xor
mov
stos
dec
test
dec
xchg
push
jmp
adc
fmul
lret
jno
push
ljmp
mov
dec
xor
jae
aam
popa
xchg
test
push
mov
xor
cmc
scas
add
jmp
lea
rclb
mov
inc
fmull
jle
xlat
outsl
arpl
mov
fmull
sub
cmp
xchg
pop
test
add
movsbl
xchg
pop
mov
sbb
out
movsl
sub
outsl
pop
dec
add
and
cwtl
test
int3
mov
dec
jae
popf
jg
push
mov
mov
jp
jo
fsubs
movsb
pop
fldt
stos
mov
stos
mov
aaa
mov
int
push
push
mov
jle
les
test
leave
lods
stos
push
outsl
push
stc
mov
lds
mov
fists
push
ds
mov
add
in
jbe
or
fdivl
loopne
jo
pop
cmc
popf
jne
and
jl
iret
xchg
in
cmp
mov
push
pushf
or
and
adc
xor
adc
jo
mov
inc
movsb
cmp
xor
rcll
lock
loope
xor
hlt
cmp
cmpsl
push
pop
dec
dec
mov
inc
in
pop
vpsubusb
xchg
xor
mov
jle
or
xchg
nop
inc
jmp
test
inc
mov
rol
les
aas
lcall
pop
jg
iret
sahf
addl
or
mov
insb
add
stos
cli
mov
ret
push
xor
or
fisubl
inc
fadd
add
lods
nop
fcmovu
daa
outsl
jmp
imul
fcmovbe
adc
jmp
cs
or
mul
mov
xchg
or
pop
push
jmp
sub
mov
pop
mov
sub
adc
mov
mov
ljmp
mov
paddusw
cmpsl
mov
fcmovnb
pop
sbb
pop
and
mov
js
imul
rolb
push
mov
negb
cs
addr16
call
xor
cmpsl
fidivrl
or
test
dec
dec
ret
in
je
pop
xor
xchg
sub
dec
stos
test
aaa
lock
cmp
pusha
jg
inc
popa
push
cltd
pop
xor
mov
xchg
pop
cmp
in
or
and
dec
push
jb
je
sti
leave
int
mov
add
je
push
push
adcb
cmp
je
pusha
rolb
fimuls
xchg
mov
les
cmp
adc
cltd
lods
xchg
cmp
clc
je
aas
in
mov
jnp
outsl
es
stos
inc
sets
jl
iret
lret
xchg
test
xchg
clc
adc
inc
es
add
jo
movsl
rorl
jns
pop
mov
es
cld
data16
in
stc
nop
push
add
bound
mov
inc
lcall
cs
pop
orl
hlt
icebp
or
lcallw
cmp
adc
and
cli
xchg
add
xor
push
call
sbb
outsl
push
pop
stos
rcrl
sub
outsl
outsb
xchg
ss
dec
shlb
call
out
adc
dec
cmp
push
cwtl
das
xchg
adc
dec
jecxz
rorl
sub
stos
sbb
rorb
mov
mov
pop
pop
xorb
xor
das
subl
rorb
fs
push
inc
add
add
sbb
push
outsb
cltd
sub
cmp
movsb
sahf
mov
jae
lret
push
cmpl
push
sub
xchg
pop
jp
dec
lods
dec
fwait
push
fs
shr
jno
cltd
xor
sbb
insl
rcrl
sbb
bswap
mov
pop
jbe
xchg
shrb
cltd
mov
mov
mov
popa
dec
bound
ret
pop
scas
int3
jnp
fs
push
ds
xchg
in
mov
or
div
mov
add
ret
jmp
cwtl
mov
sub
pop
cltd
cmpsb
jns
mov
in
mov
mov
xor
jmp
in
pop
cmp
push
mov
fcomip
shrl
in
cmp
lret
mov
rolb
mov
jbe
mov
out
mov
inc
scas
pusha
shr
testb
inc
arpl
pushf
mov
in
push
push
sbb
hlt
mov
aad
jecxz
dec
cmp
pop
xchg
mov
jmp
testb
xlat
outsb
addr16
adc
daa
lods
test
xor
jecxz
loop
in
jo
lds
inc
sahf
stc
and
sub
sub
add
repz
fnstsw
adc
push
mov
inc
imul
pop
movsb
mov
inc
ret
add
fcoms
push
cmc
sarb
ss
imul
leave
or
leave
and
jecxz
stc
sbb
in
std
fildll
je
sbb
cmpsl
adc
xchg
mov
ss
add
mov
xchg
jl
xor
xchg
daa
mov
imul
pusha
movl
shrl
scas
decb
xor
mov
sti
dec
dec
loopne
shrl
cmp
test
call
mov
inc
lret
lods
xchg
lock
andl
sbb
testb
and
loopne
in
xchg
jp
and
loop
das
loope
lods
or
lea
mov
ljmp
dec
push
ljmp
out
gs
pushf
addr16
ljmp
icebp
pop
inc
inc
mov
sbbl
push
sbb
or
and
cltd
fnsave
jmp
adc
push
lahf
pop
jle
jl
mov
adc
popa
push
xor
or
popf
push
leave
lahf
ss
mov
or
test
cs
enter
mov
adcl
fidivl
lods
out
sub
pop
jb
jp
int3
pop
push
outsl
ds
addl
pop
out
xor
sbb
cmp
fnstcw
shr
xor
mov
iret
out
adc
outsl
pop
notb
mov
in
add
mov
ret
test
pusha
inc
push
pop
mov
jns
inc
inc
pop
jl
add
scas
cmpsb
mov
negl
into
enter
push
mov
pop
rcl
inc
call
lcall
in
xchg
rcrb
sbb
adc
dec
testb
mov
or
enter
mov
ds
ficoms
inc
loop
dec
push
mov
into
fs
fdivl
mov
inc
fsubr
test
gs
cltd
sub
and
xchg
dec
dec
xor
and
xchg
adc
test
iret
mov
roll
mov
mov
mov
xchg
shrl
pop
fwait
mov
inc
testl
xchg
sahf
mov
sarb
inc
jecxz
jns
pusha
xchg
mov
addl
lret
pop
xor
jae
adc
jnp
or
loopne
dec
add
cld
push
jo
fsubrs
push
rol
add
in
xchg
dec
and
mov
jnp
rorl
cltd
bnd
bound
or
fdivl
std
out
cmp
push
outsb
sub
pop
mov
mov
vpmulhuw
pop
cmp
mov
lea
clc
inc
mov
js
push
push
fwait
sbb
push
dec
pop
jnp
cmc
loop
rcl
push
repz
pop
dec
mov
sub
ret
cwtl
xlat
lret
mov
jae
out
pop
sub
add
mov
jns
mov
test
fists
in
inc
jp
stc
scas
xchg
fmull
dec
pop
lret
dec
fisttps
stos
gs
shlb
stos
mov
sti
jle
inc
data16
jnp
sbb
int3
sahf
xor
xchg
inc
dec
pop
xchg
inc
inc
sbb
xlat
mov
in
inc
mov
incb
or
mov
lcall
or
in
push
out
add
ljmp
addr16
xor
mov
repz
push
inc
test
outsl
jmp
mov
sbb
call
fmuls
out
mov
push
aas
dec
shlb
push
adc
stos
and
dec
fucomi
jl
cmpsl
and
jns
lret
push
mov
sarb
xchg
sbb
rcr
cmc
mov
dec
jo
jg
mov
sub
js
test
rolb
dec
je
mov
ja
xor
or
notb
or
test
repz
popf
stos
mov
stos
sti
repz
cmp
mov
mov
inc
cmp
je
xchg
sbb
insl
mov
pop
std
shrl
add
xor
mov
mov
mov
inc
scas
imul
sahf
inc
lock
mov
or
sub
dec
pusha
cltd
jecxz
movsb
mov
adc
mov
pushf
mov
jae
outsl
sub
out
ja
out
jns
sbb
sub
jnp
dec
and
hlt
cmp
or
xor
xchg
or
orb
negb
or
mov
gs
dec
cwtl
push
icebp
inc
imul
push
rolb
sub
lods
inc
jnp
fsubrl
adc
lcall
sbb
pop
cmc
stos
mov
inc
xor
out
push
or
adc
jge
out
test
pop
mov
imul
adc
push
out
jle
cmc
and
push
pop
sub
dec
jb
jg
jno
xor
xor
lret
notl
ss
adc
in
or
mov
mov
lret
lods
addl
sub
cwtl
insb
jb
mov
add
mov
add
outsb
into
gs
enter
mov
xlat
xchg
cli
cmc
repnz
pop
push
sbbb
mov
nop
and
addr16
clc
insb
jle
imul
adc
adc
nop
pop
dec
cmp
lods
or
jl
and
or
or
mov
fidivs
arpl
bound
sbb
in
in
in
push
fdivrp
fdivp
sub
adc
mov
xchg
ja
enter
and
or
mov
nop
sbb
shl
negb
inc
shll
xorps
dec
loope
fsubr
ja
mov
mov
or
or
int3
mov
sub
dec
jae
stos
pop
xor
jo
scas
inc
push
xchg
daa
int3
fsubs
sub
test
arpl
xchg
int
cmp
ss
jecxz
xchg
xor
pop
push
sub
stos
fisubl
popa
cmp
mov
pop
mov
jle
hlt
imul
xor
inc
scas
xchg
ror
test
xchg
or
stos
mov
ret
pop
scas
outsb
aad
mov
xchg
sub
dec
adc
jns
jmp
sbb
push
xchg
jo
pop
jle
pop
adc
inc
sub
repz
in
popf
out
lret
jecxz
outsb
dec
in
iret
data16
lods
dec
mov
int
arpl
pop
mov
xchg
pop
sbbb
or
cli
addl
mov
scas
aas
mov
andl
hlt
xchg
dec
aam
sbb
pushl
outsb
fwait
or
xchg
cmpsb
adc
xor
sub
repz
xor
inc
movsl
mov
addr16
int
fsubr
jge
and
sti
mov
hlt
xchg
jg
push
sub
imul
in
sub
decl
and
sbb
jle
pop
cmp
mov
pop
pop
testl
jo
outsb
movsl
repnz
call
push
imul
cmpsb
xchg
adc
shld
sub
std
xor
jle
pop
add
movl
jns
cli
sub
sbb
stc
add
or
dec
scas
subb
pop
cmc
jns
insb
scas
scas
mov
jl
pop
daa
ljmp
jne
xchg
leave
mov
and
push
push
popa
xor
inc
stos
lret
pop
adc
cmp
data16
dec
push
mov
out
sub
cmp
dec
pop
popf
sub
ret
jb
dec
pop
pop
sbb
mov
mov
sub
das
lcall
sbb
out
xchg
add
bnd
push
in
mov
mov
pushf
punpckhbw
adc
push
inc
xchg
sbb
inc
pop
mov
mov
xor
lock
inc
inc
xchg
icebp
cmp
xor
data16
jns
dec
int
jb
or
pushf
push
mov
out
add
js
arpl
push
das
sbb
adc
and
idivb
stos
test
dec
or
mov
test
push
adc
cmp
or
xchg
xchg
shrl
ret
test
push
xor
xchg
loope
dec
pop
sub
es
incl
hlt
jmp
add
stc
testl
sbb
sahf
lcall
stos
jbe
divb
pop
push
test
jb
adcb
xor
sbb
push
iret
fst
lods
mov
sbb
jecxz
mov
mov
insb
ret
sub
xlat
xlat
or
mov
jg
adc
bound
mov
pop
clc
xor
nop
and
dec
scas
int
popa
sbb
add
or
xor
adc
movsb
testl
jmp
add
sbb
cltd
inc
cltd
pop
hlt
sbb
mov
out
mov
outsl
sbb
xchg
hlt
mov
or
out
insl
jmp
cmp
dec
sub
lods
pop
adc
gs
xchg
mov
sub
imul
xchg
cmp
pop
inc
cmp
xchg
test
cli
xchg
insb
iret
jbe
aam
js
scas
clc
out
mov
xor
push
pop
xor
adc
dec
mov
and
xor
repnz
clc
movsb
test
out
inc
mov
add
xlat
addr16
cmc
ret
dec
lahf
test
jne
mov
daa
loop
addr16
je
jnp
shrb
int3
gs
mov
fiadds
ljmp
movsb
xchg
dec
mov
and
cmp
nop
mov
jb
xchg
dec
std
insl
sbb
mov
mov
js
es
ljmp
ja
xor
lcall
aas
push
dec
and
jge
test
lods
inc
push
ljmp
jne
int
aaa
stos
sbbl
jmp
fucomip
mov
mov
dec
orl
loopne
out
shrl
adc
fidivl
std
movsb
repnz
push
jns
outsl
cli
push
sbb
out
push
leave
icebp
sarb
xchg
jb
lcall
xlat
int3
cmpsb
add
sub
dec
arpl
arpl
rcrb
pop
cmp
dec
cmp
jns
sub
lcall
cmp
repnz
dec
xor
repz
ds
loope
inc
add
xchg
cmp
les
outsl
lret
inc
popf
xchg
adc
rcll
shl
cwtl
btcl
and
add
push
sub
adc
insb
popf
test
aad
orl
push
cmp
add
cltd
xor
ja
iret
int
cmpsl
cmp
sbb
add
mov
and
mov
cli
icebp
push
pop
imul
iret
mov
mov
pop
and
xchg
fsubl
mov
mov
xor
das
mov
imull
insl
cmp
insb
ret
gs
xchg
scas
dec
pop
xor
mov
dec
jbe
mov
push
or
minps
pusha
enter
cltd
std
lret
and
jno
sbb
lret
imul
jle
xchg
or
mov
dec
in
repnz
ret
test
out
icebp
inc
repnz
into
into
sub
pop
inc
sbb
addr16
push
dec
mov
insl
jge
jecxz
sub
sbb
sbb
inc
out
xchg
cltd
in
cs
stos
pop
xchg
aad
lret
shl
adc
dec
pop
push
cmp
xor
das
mov
cmp
cmp
jp
mov
cmc
pop
addr16
pop
xchg
mov
aas
xchg
fadds
popa
dec
incl
push
cmpsl
dec
and
int
xor
jno
not
push
fnstcw
rcl
mov
inc
fstp
aad
ret
fucomp
in
add
pop
ljmp
rorb
sub
lds
scas
arpl
fbstp
repz
xor
xchg
lea
int3
shlb
dec
xor
fbld
cs
and
frstor
inc
pop
lods
ja
movl
mov
and
dec
gs
je
add
inc
rolb
scas
mov
inc
mov
jl
jmp
xchg
sbb
ljmp
lcall
push
adc
xchg
frstor
fcomps
pushf
sub
and
cwtl
sub
mov
xor
pop
incl
ret
xchg
pop
outsl
mov
fdivp
inc
test
sbb
loope
pop
test
pop
inc
pusha
inc
rclb
das
hlt
xchg
in
std
sbb
cmp
push
inc
inc
or
adc
pop
cmpsl
js
sub
addr16
jno
sub
jge
int
popa
roll
adc
dec
ljmp
xchg
mov
and
out
xchg
sub
outsl
ret
jb
adc
and
rcll
and
addr16
lcall
stc
add
sarl
add
setp
mov
loop
mov
call
mov
push
inc
cmpsl
stos
ljmp
dec
jb
inc
add
rcrb
adc
sub
in
in
jp
mov
scas
sbb
out
push
mov
push
icebp
insb
mov
lcall
cli
in
leave
pusha
lret
mov
ss
inc
sbb
mov
push
ds
xchg
repz
addr16
fsubrp
xor
out
push
test
push
sub
mov
and
ret
mov
clc
xor
cli
cmp
mov
cltd
jp
sti
nop
jp
mov
test
div
mov
stos
mov
sbb
outsb
stc
aad
out
sbbl
outsl
out
cwtl
xchg
and
xor
outsb
xor
shlb
sbb
push
cli
je
push
cmp
mov
or
dec
or
pop
adc
xor
movsl
sbb
and
test
mov
stos
mov
xor
sbb
rorl
test
jb
pop
push
jae
mov
push
push
ljmp
mov
mov
dec
cmp
pop
push
aas
fsts
call
fmul
inc
sbb
inc
push
xor
in
xchg
and
lods
jge
mov
bnd
aam
out
add
cmpsb
jne
fmul
in
aas
push
sbb
pusha
mov
cmp
test
js
rol
mov
dec
adc
fidivrs
hlt
xchg
inc
pop
notb
icebp
dec
pushf
out
adc
loope
lods
cmp
imul
push
call
sahf
in
inc
ja
jo
lock
in
push
imul
into
or
mov
or
insb
out
test
xor
fst
or
sub
adc
dec
dec
pop
jp
stos
xchg
cld
int3
arpl
ret
js
adc
lcall
jge
pop
mov
iret
mov
lret
movsl
clc
adc
dec
or
mov
push
test
xor
inc
or
das
ret
add
lea
shrl
push
fistps
push
cmpsb
cmp
dec
lock
data16
xor
cs
jo
xchg
inc
repnz
mov
cmp
mov
sbb
or
aaa
aad
lea
pop
cs
jne
cmp
add
orl
loop
xchg
mov
mov
sub
mov
hlt
mov
fidivrs
push
sub
ss
xor
push
adc
js
mov
sbb
mov
mov
dec
mov
lds
pop
pusha
dec
cmpsb
cmpsb
xchg
xchg
mov
pop
cmp
or
mov
lret
flds
jns
enter
add
adc
pop
imulb
jo
shlb
add
add
shrb
pop
jns
xchg
cltd
mov
mov
pop
cmpsb
mov
outsl
mov
pop
lret
adc
adc
clc
jb
xchg
int3
sub
bound
sbb
add
ljmp
jmp
and
mov
jmp
pop
lods
test
pop
aam
arpl
dec
push
int3
or
shr
and
mov
ret
mov
aas
adc
cmp
hlt
imull
inc
fisubs
jno
inc
sbbb
jnp
pop
mov
ja
adcb
sub
iret
inc
add
js
push
leave
cmc
test
sub
sub
xlat
mov
stos
rolb
dec
hlt
insb
mov
sbb
outsb
rcrb
dec
inc
cmc
mov
mov
cltd
call
mov
mov
push
mov
xchg
adc
jbe,pn
pop
xchg
push
mov
adc
cs
ss
jb
mov
fwait
jecxz
mov
les
ret
push
leave
imul
repnz
imul
sub
jmp
sub
mov
mov
sub
insl
sub
pop
ret
adc
loopne
popf
xchg
testb
aam
push
jbe
cwtl
loopne
in
adc
sub
shrl
daa
inc
cmp
clc
data16
stos
in
cmpsb
decl
xor
inc
rorl
add
jbe
xor
sahf
pusha
cmpb
sbb
pop
dec
dec
gs
sahf
inc
fstpt
push
ljmp
jno
sub
fdivs
jae
ds
sub
xchg
loop
cmpsb
cmp
sbb
std
dec
cli
push
and
mov
jno
xchg
adc
ret
inc
repnz
inc
dec
cli
in
pop
mov
inc
enter
sbb
sahf
outsl
adc
add
push
ss
xchg
sarl
dec
std
fdivl
dec
mov
lea
adc
mov
mov
in
jmp
lds
cld
pushf
mov
std
movsb
pop
dec
push
outsl
in
out
pop
ss
test
jne
adc
std
lods
das
call
iret
js
cmp
jge
adc
lret
xor
lret
popa
sub
push
loop
orl
cmp
jecxz
mov
in
mov
cmc
pop
ret
push
stos
push
mov
xor
int3
popf
test
jne
adc
sbb
push
iret
cmp
test
add
xchg
mov
stos
inc
inc
std
inc
inc
iret
mov
sbb
sbbb
cld
or
fwait
ja
test
sub
lds
loopne
add
or
les
scas
sbb
jle
dec
sbbb
cmp
inc
lret
ret
sahf
sub
inc
push
aad
mov
gs
sbb
out
xchg
jle
mov
lahf
or
call
xor
sub
loope
mov
mov
pop
lock
out
push
mov
mov
dec
cmp
cmp
mov
dec
jge
mov
iret
and
sub
dec
xor
leave
xor
mov
xor
inc
add
mov
addr16
out
or
push
pop
fistpll
into
cmp
or
pusha
jp
xchg
and
ret
push
ret
stos
inc
pop
movsl
xor
fldl
jecxz
fisubrs
inc
jnp
dec
or
outsl
daa
stos
imul
mov
imul
loope
movsl
mov
mov
xchg
repz
jge
jbe
bound
roll
pushf
out
dec
ja
aas
mov
es
ffreep
pop
out
push
int3
cmp
and
inc
xor
shr
jb
xchg
push
lock
mov
jae
push
lock
out
xchg
shlb
jge
xchg
mov
mov
pop
pop
nop
sbb
icebp
lds
out
push
xor
cmpsb
lock
jbe
addr16
fcmovne
cwtl
fdivrl
das
out
sub
jmp
das
cmp
movsl
sub
repnz
mov
xor
push
mov
dec
lods
dec
xchg
outsb
andl
lea
gs
pusha
int3
mov
or
dec
mov
cli
xchg
mov
pop
stos
mov
iret
adc
pop
xchg
in
test
mov
fucom
or
cmpsb
idivb
sti
ds
mov
add
mov
call
ret
cmc
outsb
sub
push
inc
jecxz
jecxz
lret
or
cmp
jo
jl
or
dec
sbb
outsb
cmp
shr
test
jmp
adc
int3
jne
push
arpl
fwait
push
or
push
outsl
in
xchg
or
call
mov
add
inc
xor
sbb
imul
adc
sub
pop
jg
pop
dec
add
rcll
movsl
cmpsb
sub
pop
mov
and
jmp
ret
xchg
in
sbb
cmp
popa
outsb
mov
stos
xor
leave
pop
ror
fnstenv
sub
mov
testl
cmp
insl
leave
mov
sbbb
fmuls
leave
ds
fdiv
or
dec
jle
nop
sbbl
dec
fsubrs
cmp
and
mov
test
cli
hlt
jnp
adc
xchg
je
pop
cmc
leave
pusha
jmp
out
xchg
push
xchg
nop
xchg
sub
adc
dec
rorb
inc
fisttps
out
jo
ss
movsl
or
in
std
inc
pop
call
aad
in
andl
mov
fstpl
push
iret
jns
cmp
insl
mov
iret
sbb
add
push
cmp
pop
push
jecxz
les
mov
into
and
outsb
dec
mov
sub
in
call
andl
mov
inc
xor
dec
mov
xchg
push
dec
repnz
and
ret
dec
aad
lea
lock
movsl
cltd
and
mov
outsl
scas
and
add
mov
stc
xchg
xor
inc
fcmovnbe
sbb
sbb
sub
out
adc
jno
lret
add
add
sti
xchg
xor
add
scas
mov
ss
mov
aad
fs
xor
repz
mov
lahf
add
roll
cmp
dec
sarb
dec
cmp
sbb
mov
cmp
mov
icebp
jo
lods
scas
iret
xor
fs
aas
outsb
notl
fcomip
fsubs
rcrb
mulb
cmp
mov
dec
movsl
add
or
nop
dec
fcomip
out
data16
cmp
mov
adc
push
inc
cmc
adc
and
lret
sti
inc
scas
xchg
mov
and
test
dec
call
dec
push
or
mov
cld
loop
or
add
aam
inc
div
jno
in
jne
daa
mov
loopne
mov
testl
aas
cmp
sahf
xor
dec
movsl
in
adc
xchg
mov
scas
pushf
sub
iret
int
jecxz
xor
in
inc
xchg
mov
data16
sbb
rorb
jle
jns
into
cmp
jmp
test
sub
into
leave
int
xorb
sbb
mov
jbe
push
fisttpll
jle
pop
inc
scas
dec
or
out
dec
loop
pop
push
fwait
ds
imul
fmuls
outsb
add
dec
mov
scas
enter
aad
and
shr
cmp
push
ret
sbb
and
imul
jp
daa
pop
lock
outsb
in
sbb
xchg
sub
stos
mov
xchg
push
cmpsl
pop
mov
cmp
or
fldpi
jnp
pop
out
inc
xorb
aas
or
hlt
mov
adc
pop
je
adc
pop
shll
sbb
inc
and
lea
lahf
ret
out
repz
pop
ud2
mov
cmpsl
sti
mov
add
repz
ret
popa
and
inc
pop
xor
xchg
cmp
xor
std
test
hlt
xchg
icebp
pop
rol
in
xchg
xchg
pop
mov
or
sub
adc
inc
scas
pop
inc
push
testl
ret
into
nop
adc
imul
bound
iret
pop
sub
mov
adc
xchg
inc
int
and
rcrl
aam
push
aam
sbb
out
push
mov
push
or
bound
mov
and
arpl
cmp
mov
dec
inc
mov
push
in
sbb
inc
mov
push
pushf
or
jp
lret
push
or
loopne
mov
incl
adc
xchg
scas
lahf
jb
mov
push
push
xchg
frstor
push
cwtl
iret
ja
stc
adc
data16
pop
jns
in
mov
out
sti
xchg
sbb
out
mov
cmp
pop
std
inc
xchg
xor
into
movsl
inc
sbb
cmp
jecxz
int3
cmpsb
xor
add
std
fnstcw
mov
jp
pop
test
leave
xor
das
inc
cmp
inc
stos
sub
push
shll
inc
mov
jbe
mov
cli
xchg
jmp
mov
in
pushf
and
adc
test
fnsave
sbb
push
outsb
or
sbb
or
add
xchg
xor
add
roll
adc
lea
in
push
fsubp
pop
sub
out
pop
hlt
xchg
mov
inc
xlat
push
xor
outsb
out
sti
mov
cmp
xor
and
mov
xchg
cmp
shrl
int
fdivs
out
stc
fadds
insb
mov
imul
test
inc
inc
mov
inc
fsubrp
rolb
daa
mov
pop
fyl2xp1
inc
push
sub
in
jg
pushl
add
stos
scas
inc
rorb
outsb
adc
pop
ja
icebp
sbb
inc
dec
mov
movb
jl
subl
lret
daa
push
cmpsl
pop
into
xchg
pop
aaa
jle
xchg
ja
lahf
mov
xor
pop
popf
cwtl
inc
rcll
in
out
test
push
inc
sub
loop
dec
enter
xchg
gs
out
xor
sbb
mov
cmpb
outsb
shrl
add
jle
mov
add
jmp
test
pop
loopne
xchg
or
bound
sbbb
cmp
cmpsb
mul
mov
adc
pop
stos
popa
imull
pop
js
jl
inc
push
mov
cmpsl
mov
mov
inc
push
ljmp
and
push
dec
dec
jle
cmp
push
pushf
inc
test
aaa
pop
cmp
xchg
leave
push
insb
mov
sbb
and
dec
or
cmp
add
xchg
aam
popf
sub
div
dec
add
fildll
arpl
sub
leave
cmpsl
push
mov
dec
enter
ljmp
cmp
mov
iret
pop
inc
and
sahf
negb
cltd
cld
adc
pop
nop
daa
dec
std
sarb
addr16
push
das
call
jmp
inc
in
pop
xor
cli
stos
jb
loopne
xor
add
adc
sbb
inc
sub
out
lds
lret
loop
rcrl
out
inc
aad
and
xor
fcompl
fisubrl
and
inc
test
rclb
or
adc
stos
pop
in
mov
or
inc
or
jo
and
push
lcall
jns
jnp
jmp
hlt
cmp
ss
push
adc
inc
gs
lret
xlat
cmpsl
call
and
mov
push
pop
cltd
mov
punpckldq
add
repnz
push
ljmp
outsb
push
lahf
sbb
or
cmc
ja
ret
mov
lret
dec
cmpsl
lds
addr16
dec
pop
int
pop
shrl
and
les
subb
inc
mov
test
and
add
adc
sbb
gs
pop
dec
mov
outsl
add
pop
jmp
push
ret
fisttps
jg
push
mov
lahf
push
inc
jp
sub
nop
pop
add
or
mov
outsb
jle
mov
jne
inc
xchg
add
mov
adc
ja
sbb
adc
cltd
je
repz
mov
imull
and
jns
testl
les
or
dec
add
push
mov
arpl
jns
xor
dec
test
lahf
and
fs
fstp
jae
push
and
xchg
stc
je
bound
outsb
adc
in
pop
pop
stc
aad
or
sbb
sub
leave
faddl
roll
push
shl
stos
mov
cs
cmpb
pop
inc
imul
cwtl
pop
lcall
lea
lods
mov
mov
lahf
imul
jnp
sub
sub
jp
adc
aad
mov
int
mov
je
mov
jp
sub
into
enter
mov
je
insl
sahf
ja
shll
loop
loope
out
incl
aaa
push
repz
push
push
pop
add
xlat
nop
or
leave
push
cli
stc
sahf
mov
call
rolb
shlb
lcall
xor
add
pop
jmp
jae
and
fldt
test
cmp
and
and
dec
popl
jo
stos
popa
pushf
fnstsw
data16
push
pop
sub
sub
pop
lcall
mov
imul
pop
cmp
pop
mov
pop
push
in
bound
push
xchg
addr16
movsl
jns
adc
jg
mov
shlb
mov
pop
hlt
or
cmp
and
xchg
sahf
fs
loop
pop
cmp
jo
mov
push
push
jmp
std
adc
add
aas
xchg
outsb
arpl
xchg
out
xchg
adc
and
push
cltd
sbb
jg
mov
push
aad
mov
sti
inc
out
outsb
sub
mov
call
xchg
repz
cmp
jo
mov
dec
movsl
in
inc
leave
sbb
les
sbb
aas
mov
sub
sahf
cmp
pop
jo
pop
gs
aam
jecxz
push
xlat
and
jnp
scas
mov
lret
xchg
xorb
subl
movsl
cmp
lahf
insl
and
ficompl
jb
mov
ror
pop
xlat
xor
pop
adc
lret
jo
adc
adc
mov
aad
imul
sahf
in
dec
push
add
inc
xor
mov
aaa
scas
lret
sub
mov
stos
dec
cwtl
dec
imul
lods
mov
mov
stos
push
lock
mov
fistl
fs
je
or
dec
xor
xor
and
adc
and
ja
push
in
mov
pop
xchg
cmp
shlb
mov
xchg
dec
push
andb
fldl
imul
mov
sbb
test
mov
das
inc
mov
or
xchg
jg
jecxz
xchg
pop
sbb
ljmp
test
and
jmp
sahf
dec
loop
stc
es
das
sub
addr16
cmpsl
inc
dec
inc
out
in
aad
ds
jmp
icebp
cmp
lahf
jp
mulb
shrl
cmc
loope
jp
adc
ds
pop
cpuid
jg
repnz
push
popa
cmp
shll
mov
jno
mov
add
arpl
cmpsb
out
ficoms
inc
pop
je
xlat
xchg
rcrl
sbb
cmp
in
sub
xchg
inc
inc
cmp
jp
and
cmpl
ret
sub
pop
xchg
inc
cmp
adc
jg
push
push
jns
das
lds
jl
jne
and
jne
testl
test
scas
xchg
mov
or
sarb
cmpl
pusha
adc
xchg
outsl
sub
flds
in
adc
sahf
inc
jl
xor
cmp
mov
xchg
mov
lds
inc
cmpsb
mov
aad
dec
aaa
stos
or
dec
dec
sub
data16
cltd
mov
add
xorl
shr
in
or
xchg
mov
dec
clc
enter
pop
leave
pop
jle
and
cmp
pop
add
push
aas
int
jle
cmp
test
sbb
or
push
sub
idivl
jo
int3
adc
jmp
repz
mov
xor
shl
aas
lods
push
jno
arpl
js
mov
cwtl
dec
ds
adc
xchg
jns
bound
pop
js
jp
js
stos
clc
mov
dec
pop
sbb
and
pop
pop
push
in
cmp
fildll
mov
cmp
clc
insl
es
push
dec
out
lea
sub
push
iret
pop
mov
and
fst
in
int
jbe
dec
mov
in
jp
adc
aad
push
mov
pop
fstl
cli
pushf
mov
imul
mov
or
inc
aas
add
test
mov
shlb
mov
and
mov
jns
mov
mov
sahf
ljmp
cli
add
ljmp
mov
xchg
jecxz
push
addl
sbb
pusha
dec
cltd
push
stc
jo
mov
mov
loop
scas
xchg
sbb
lock
scas
add
xor
test
jl
adc
in
mov
push
mov
pop
popa
divl
pusha
jle
xchg
loope
loope
call
ss
xchg
cmpsl
arpl
incb
xor
push
dec
jecxz
pop
xchg
enter
loopne
in
sub
mov
pushf
xor
pop
ret
jl
fstl
dec
pop
into
stos
pop
jg
push
sbb
bound
push
std
sti
out
inc
movsb
inc
arpl
xor
xchg
inc
fld
scas
gs
sbb
xchg
mov
mov
fsts
sub
lret
pop
les
adc
loope
and
imul
fadd
sbb
sahf
das
jo
add
ljmp
out
xchg
pop
jbe
adc
pop
cmp
adc
inc
insl
add
mov
fcmovnb
fdivrl
xlat
and
pop
icebp
push
pop
fcmovbe
jnp
js
xlat
sub
pop
add
sbb
inc
mov
add
gs
lret
lret
jae
pop
push
test
mov
stc
stos
lods
adc
cmp
stos
fcoms
out
psrad
adc
xchg
clc
mov
fidivrs
loop
adc
jnp
stos
pushf
movsl
or
cltd
pop
test
pusha
sub
lahf
rcrl
jge
clc
push
jo
imul
pop
icebp
fistpll
loop
push
aam
scas
inc
dec
daa
inc
arpl
out
pushf
xchg
inc
mov
mov
leave
insb
stc
mov
sbb
jno
mov
jp
or
xlat
scas
xchg
or
fidivrl
lods
mov
sbb
mov
xor
js
mov
enter
xchg
sahf
push
sbb
lret
sub
jp
mov
xchg
push
fdivs
adc
mov
inc
shll
sbb
xchg
push
push
in
cmp
lret
insb
pop
sbb
outsb
jl
test
push
xchg
sti
or
mov
add
xor
movsl
test
rorb
xchg
mov
push
fdivs
scas
cmpl
add
mov
jg
iret
mov
cmpsl
pop
mov
aad
and
mov
sti
ret
cmp
loopne
das
dec
mov
fs
and
pop
sahf
cmp
jo
jp
pushf
shlb
inc
push
add
xchg
ja
dec
pop
sub
sbb
xor
cmpsb
dec
mov
ret
xchg
cmpsl
sbb
cmp
arpl
pop
mov
stc
xchg
cmpsl
shll
jmp
fcompl
aam
les
mov
inc
mov
mov
loopne
mov
cvtdq2ps
adc
out
jle
mov
insb
aas
jb
and
adc
repnz
pop
test
push
cltd
adc
sbb
inc
nop
js
mov
aad
sub
push
and
inc
dec
hlt
imul
outsl
cmc
dec
sub
cmp
jmp
and
mov
push
les
or
nop
xchg
xor
pop
xchg
into
gs
imul
std
mov
mov
je
lds
fcoms
push
subl
cmp
test
pop
xchg
add
rcrl
jle
enter
pop
add
ljmp
push
add
and
or
mov
int
sub
pop
jmp
fs
js
mov
rcr
jg
insb
sub
mov
xor
mov
rcrb
ds
pop
call
pop
cmp
push
cmp
pop
int
lds
jbe
fiadds
adc
and
enter
lods
push
sub
out
rol
fnsave
nop
orb
xor
add
fisubs
out
inc
in
shrl
xor
lock
out
push
das
ret
xor
dec
int3
jns
cwtl
sbb
push
mov
jno
pop
aaa
or
pop
out
repz
enter
mov
jg
mov
imul
adc
addr16
xchg
push
test
in
pop
adc
lds
jae
or
cmp
shll
pop
repz
sahf
add
mov
ds
adc
xchg
int3
gs
xor
xchg
daa
ss
test
repz
aaa
sbb
mov
sti
lret
inc
xor
jmp
cld
dec
xlat
sbb
lret
repnz
ljmp
pusha
push
xchg
out
lds
cmpsl
cmp
aaa
repnz
cmp
dec
xor
push
or
ja
xchg
cmpsl
mov
fsubrs
aam
jns
add
scas
jmp
arpl
mov
filds
inc
or
inc
sti
pushf
jecxz
sbb
adc
sbb
in
dec
mov
inc
in
pop
lcall
lcall
and
mov
pusha
jg
insl
xchg
scas
and
add
cli
loope
pushf
and
scas
inc
xor
xor
xchg
xchg
dec
add
cmp
out
rorl
and
dec
jge
nop
ss
ret
lret
test
add
push
dec
movsl
mov
ljmp
dec
inc
pushf
hlt
cmp
sbb
mov
in
mov
shll
loopne
push
popf
jmp
negl
int3
fs
scas
pushf
sub
ss
pop
aad
add
push
in
dec
fwait
mov
pop
sub
mov
dec
fs
cmp
and
stos
addb
aaa
mov
pop
jb
adc
pop
test
fdivs
das
jle
and
adc
fsubl
sub
stos
xlat
xor
in
fwait
push
pop
divb
jmp
mov
add
fisttpl
cmc
push
mov
and
fists
adc
jle
cmp
dec
jnp
dec
xchg
sub
adc
mov
int3
pusha
inc
ds
cmc
cltd
and
pop
xor
inc
lret
and
addr16
push
or
out
stos
adc
xor
jns
or
inc
nop
pop
out
imulb
xchg
hlt
cmp
sub
mov
pop
xchg
add
mov
push
sahf
jbe
lods
rcl
and
dec
jl
ds
je
mov
or
incl
idivb
subl
dec
cmp
test
inc
cmp
mov
jb
and
aad
add
les
fwait
jns
and
sbb
test
push
orl
aas
lret
js
mov
push
jae
jg
addr16
and
loopne
lret
addr16
cmpsb
sub
and
xor
and
push
es
and
jmp
xor
pop
das
jecxz
nop
das
pop
dec
clc
inc
push
sub
shrb
sbb
mov
lods
xor
mov
call
mov
out
xor
ds
mov
stos
cmp
fidivs
inc
dec
leave
mov
sbb
jb
data16
or
into
ljmp
cwtl
cmc
mov
xchg
jne
push
and
xchg
xor
icebp
and
inc
lods
push
sarb
and
loopne
or
aas
add
lods
ss
xor
add
xchg
sbb
fadds
test
jae
inc
or
fs
xor
rcr
cmc
pusha
and
dec
xor
cmpsl
push
push
pop
inc
popf
mov
cwtl
jecxz
mov
and
clc
lods
cmp
xor
sahf
mov
cwtl
dec
mov
xchg
jae
testb
jnp
movsl
out
out
or
jae
js
dec
es
cmp
ret
cltd
testb
or
inc
jae
dec
jbe
push
fs
stc
pusha
or
mov
add
and
in
sub
pop
inc
adc
scas
out
push
lock
dec
cmc
mov
test
pop
mov
push
push
sti
adc
xor
jne
mov
std
mulps
mov
adc
push
gs
mov
mov
adc
scas
jae
push
mov
pop
cs
mov
xlat
inc
cltd
out
sub
incb
test
xchg
jle
and
mov
aad
popf
mov
les
cli
inc
imul
xchg
insl
sub
subl
inc
out
cltd
mov
sbb
ja
mov
jmp
ss
mov
pop
idivl
xor
dec
loope
lcall
dec
or
idiv
popf
cmp
repnz
lods
test
cmp
sbb
cmp
xlat
pusha
fcmovnbe
add
push
push
ljmp
jno
stos
xor
outsl
push
daa
lds
mov
xchg
jmp
sbbl
jbe
aad
jmp
and
out
cmp
jecxz
jae
arpl
arpl
mov
fincstp
mov
jle
hlt
or
adc
xchg
xor
insb
mov
pushf
push
mov
adc
inc
inc
mov
and
loope
popf
cmp
pop
mov
leave
cmpsb
sti
jbe
fs
insb
sti
das
inc
ljmp
lds
push
xlat
inc
and
jg
dec
loope
test
inc
data16
insb
loopne
dec
xchg
push
and
ja
pop
mov
mov
mov
repz
enter
mov
loopne
mov
adc
lea
xor
cmp
push
enter
mull
push
lret
sbb
pop
jne
mov
inc
stc
leave
dec
pop
sti
sbb
outsb
das
mov
je
cs
mov
push
and
pop
inc
ret
jle
push
adc
enter
mov
add
vunpcklps
fldenv
inc
fs
incl
loop
cmp
dec
inc
clc
cmpsb
popf
sbb
cltd
jae
dec
mov
inc
loope
fdiv
out
mov
jb
out
pushf
addl
jecxz
cmp
mov
dec
cmc
scas
imulb
jp
imul
imul
sahf
mov
push
and
mov
push
std
push
out
in
xchg
out
out
dec
lahf
nopl
loop
je
xchg
mov
clc
rcl
jecxz
mov
fisttpll
out
xchg
xchg
out
mov
arpl
pop
sbb
arpl
ret
sub
xor
cwtl
js
pop
push
mov
test
mov
add
sub
xlat
inc
xor
xchg
push
fimuls
adc
cld
dec
mov
inc
aad
jno
dec
cltd
sbb
das
hlt
push
popa
icebp
nop
out
mov
stc
lds
jne
fnsave
imulb
jge
push
mov
test
stc
pop
das
mov
aam
jl
in
movsl
sbb
test
or
fsubr
pop
daa
cltd
test
push
rcrb
ds
and
mov
and
test
jns
adc
imul
inc
or
imul
mov
icebp
mov
jno
popf
imul
add
xchg
xor
add
jae
roll
fdivr
lods
cmp
jbe
lret
dec
out
in
into
xchg
imull
fidivl
xor
jae
xor
adc
inc
clc
fistpll
dec
inc
sub
test
lods
lret
mov
mov
cld
dec
out
aaa
xchg
inc
movsl
push
insl
xchg
push
int3
fiadds
int3
aam
int3
call
push
shll
ret
push
jae
leave
sub
sub
mov
lret
xchg
es
outsl
pop
cmc
gs
jne
adc
in
mov
xchg
mov
mov
cmp
jbe
and
lock
lods
dec
add
out
jmp
out
cld
popl
repnz
in
cwtl
mov
jmp
xor
mov
outsl
ret
inc
sub
sub
jne
notb
cmp
outsl
mov
adc
nop
out
inc
test
push
cmpsl
cmp
adc
mov
or
mov
mov
stc
mov
dec
flds
imul
in
mov
call
lods
test
push
rclb
loop
add
pushf
push
in
add
lahf
jo
jp
and
pop
sti
mov
leave
insl
add
mov
cmc
xchg
cmpsl
loop
notl
pop
repz
divl
cli
add
ss
dec
xchg
pop
xchg
add
clc
push
cmp
imul
out
icebp
repnz
fistps
mov
aad
or
push
lods
and
mov
push
add
mov
fsubr
int
inc
mov
decb
adcl
rcrl
xchg
enter
enter
jb
imull
push
mov
pop
pop
sub
js
loop
ds
push
or
aam
daa
pop
cmc
mov
in
enter
aaa
or
mov
adc
jl
add
jg
jle
jmp
jns
iret
lds
movlhps
sbb
shlb
lea
xchg
das
aaa
push
lea
push
sbb
add
mov
dec
fsubs
aas
lods
sahf
xchg
pop
adc
aaa
pusha
out
repnz
lea
pop
lahf
pushf
dec
or
pop
out
mov
in
mov
xor
loopne
mov
popa
adc
pop
sbb
daa
mov
shll
std
inc
and
dec
or
pushf
sub
cmp
data16
pop
fs
insl
add
xchg
mov
mov
gs
xchg
cmp
dec
cs
fisubl
lret
fimuls
pop
mov
pop
popf
cmp
rolb
jg
or
clc
adc
or
adc
in
scas
push
xchg
leave
fdivrs
dec
inc
lret
out
divl
pmulhw
jne
int3
aad
gs
outsl
xchg
cld
into
int3
inc
lcall
xor
sub
mov
and
mov
lods
mov
cld
and
cs
aad
xchg
add
in
rcrb
lds
xchg
and
jne
adc
pop
jo
push
mov
ret
test
jmp
leave
pop
and
dec
cs
mov
jp
fldt
filds
movsb
lea
cld
and
sahf
xchg
fwait
inc
mov
push
aaa
mov
inc
movsl
cmp
push
add
ds
in
scas
out
xchg
xor
data16
mov
xchg
or
dec
dec
jecxz
stos
repz
and
sbb
and
fcompl
mov
pusha
cs
pop
mov
clc
jb
sub
dec
inc
sbb
cli
fistpl
rcrl
ljmp
bound
push
fidivs
lcall
xor
scas
jle
rcrl
jns
pushl
loope
call
jbe
cmp
and
lret
int
pop
inc
sbb
addb
mov
push
push
pop
adc
push
or
mov
pop
adc
add
inc
pop
xor
cmpsl
xor
sbb
stc
pop
ret
scas
stos
jbe
push
mov
testl
mov
jnp
push
sub
mov
mov
and
cmpsl
inc
in
xor
mov
inc
divl
pop
and
jae
outsb
cmp
xor
int
xchg
aaa
xchg
jo
call
mov
dec
cmpsl
and
mov
inc
faddl
sbb
mov
nop
scas
add
mov
stos
pop
push
shll
jbe
pop
in
nop
inc
ljmp
xor
push
push
or
cmp
loopne
lret
out
insb
les
stos
cmc
mov
cmpsl
add
pop
arpl
lods
pop
and
jnp
int
cmpsb
pop
mov
add
sub
outsl
xchg
cltd
scas
fistpll
jno
ret
xchg
mov
jg
jne
inc
mov
stos
push
mov
mov
push
pushf
lods
js
popa
incl
je
movsl
sub
repnz
and
mov
das
add
stos
inc
loope
lret
or
mov
cmp
pop
add
mov
mov
mov
inc
xor
jne
mov
xchg
sbb
dec
jb
xlat
cmp
or
aam
push
sbb
and
bswap
xchg
test
pop
mov
aas
jp
pusha
scas
inc
push
cwtl
cltd
or
inc
into
enter
inc
pop
dec
rcll
lret
je
mov
repz
in
call
cltd
icebp
add
push
and
out
adc
out
int3
push
mov
shll
imul
inc
lea
or
inc
inc
cmp
ret
xor
push
fimull
sarw
sub
repnz
fadds
xlat
popaw
fs
add
xlat
ss
push
sub
mov
pop
pop
mov
mov
addl
pop
sti
pushf
sub
repz
in
add
cmpl
imull
and
in
adc
hlt
popa
mov
mov
push
and
mov
pop
ficoml
xchg
testl
push
mov
dec
mov
pop
mov
std
aam
icebp
jl
xchg
cmp
out
or
pop
inc
fistpl
mov
xchg
push
cwtl
xor
lods
mov
dec
iret
enter
mov
fisubs
fwait
or
and
adc
ljmp
add
pop
jno
loopne
mov
mov
loope
mov
scas
xor
mov
gs
adc
or
lods
mov
or
aam
mov
inc
mov
shrl
nop
ror
lret
dec
js,pt
stos
mov
pop
cli
push
iret
loop
xchg
int3
repz
ret
jl
andb
pop
notb
adcb
push
or
xchg
sbb
nop
adc
mov
mov
jmp
repz
inc
aam
std
pop
loope
xor
fcoml
lods
fcomi
jge
sbb
or
push
cmp
xlat
out
or
mov
sbbl
pushf
sub
in
imul
incl
jmp
cld
lods
and
test
lods
and
dec
cmp
int3
rol
sub
fistl
sub
mov
mov
arpl
jge
mov
and
sti
jb
mov
push
mov
xchg
imul
jmp
mov
stc
and
mov
xor
jbe
push
mov
repnz
mov
ltr
adc
jge
xchg
sub
jecxz
or
mov
push
cmpsl
cmp
sub
sub
insb
sti
jecxz
insl
lahf
data16
pop
insl
adc
lods
and
dec
xlat
cmp
enter
mov
insl
stc
mov
mov
jle
inc
mov
sub
out
test
push
sbb
es
push
fsubrs
dec
pop
orb
mov
sub
addr16
call
dec
sbb
sub
insl
push
popf
sub
ljmp
clc
jne
add
sub
pop
fidivrl
sbb
imul
icebp
bound
jb
xchg
pop
outsb
or
push
repnz
fnstenv
pushf
xor
inc
sahf
or
inc
fdivrs
neg
jp
xor
ds
ljmp
push
repnz
cli
jecxz
arpl
daa
push
cwtl
cmp
sbb
out
test
outsb
xor
test
push
dec
pusha
and
pop
push
sub
xor
jecxz
aad
iret
dec
decb
or
rcrl
daa
mov
testl
jge
into
jne
pop
jno
sbbl
adc
pop
das
push
sahf
fwait
lods
xchg
push
sbb
sbb
jecxz
jns,pn
sbb
push
push
or
mov
mov
adc
int
lods
jns
mov
data16
call
loopne
scas
daa
cmc
gs
xchg
pusha
ss
jne
sahf
mov
shrb
xlat
cmp
jmp
add
sbb
xchg
inc
idivl
mov
rcrl
jnp
mov
or
jb
mov
sub
pop
pop
imul
je
aad
cld
push
cltd
sbb
aam
clc
sahf
mov
iret
jno
xlat
xchg
push
mov
fs
push
push
xchg
adc
js
cmpsl
pop
and
push
fnsave
aas
insl
test
pop
cmpsl
mov
aam
sbb
repz
push
sbb
cmp
imul
stc
push
subl
xlat
mov
aam
sti
out
cmp
mov
add
imul
add
ljmp
movsl
xchg
sarb
mov
xor
cwtl
mov
sub
or
push
dec
xchg
in
dec
loopne
pop
jge,pt
scas
pop
loope
mov
pusha
fstpt
andb
je
sbb
shrb
pop
ljmp
sahf
stos
mov
xchg
pop
bound
push
push
inc
jmp
and
je
push
jg
dec
jae
pop
in
dec
shr
sbbb
test
add
jae
pop
jp
and
icebp
or
cmc
pushf
inc
lds
fstpl
push
push
insb
sti
stos
mov
or
ja
pop
pop
mov
or
cmp
inc
in
in
sbb
push
outsb
mov
pushf
dec
pop
sub
sub
xor
fstpt
ret
into
mov
mov
bound
xchg
test
jbe
dec
std
or
cmpsb
fmul
divl
jne
sbb
dec
xchg
jg
dec
je
mov
pop
shll
pop
outsb
mov
loopne
xchg
mov
or
pop
inc
cmp
add
addr16
loope
das
pusha
xchg
pop
addr16
pop
scas
ljmp
inc
aaa
cmpsl
hlt
mov
and
mov
in
mov
nop
jmp
add
test
mov
sahf
flds
xor
mov
mov
insb
push
in
test
ss
enter
jmp
cmp
hlt
pop
test
xchg
mov
pushf
aaa
jae
mov
stos
mov
mov
push
loope
inc
clc
mov
add
or
stos
test
xor
test
rolb
out
icebp
fwait
arpl
mov
aam
ret
lea
test
mov
inc
aaa
adc
dec
mov
cmp
pop
fisttps
out
fnstenv
xchg
fnstcw
inc
add
lods
sti
dec
call
mov
add
in
dec
jbe
call
cmp
mov
dec
pop
ljmp
and
out
jp
cmpsb
inc
xlat
outsb
js
or
ret
popf
xor
push
push
popf
subl
xchg
cmp
mov
bound
adc
push
mov
xor
mov
ja
push
insb
mov
pushf
add
cmp
pop
jecxz
sarb
xor
aas
xchg
in
clc
mov
adc
inc
fsubr
fcoml
es
rcrb
ret
hlt
fsubrs
jle
les
shlb
aad
nop
add
inc
xor
test
mov
push
add
mov
cs
sub
test
ficomps
mov
inc
add
pop
les
mov
pop
sbb
sub
loop
dec
mov
arpl
xchg
pop
push
outsl
xor
jge
mov
sti
cmpsl
xchg
movsb
lret
call
ret
sub
outsl
and
or
test
mov
rcrb
and
inc
test
mov
cld
daa
pop
and
clc
nop
jo
xchg
sub
sub
mov
pop
mov
lock
cmpsb
arpl
sarl
repnz
insb
repz
call
cmp
fs
stos
cmpsl
xor
popa
mov
loop
adc
cmp
popa
divb
scas
out
and
call
movl
jl
cli
jbe
pop
fistpl
fmull
xchg
push
sub
push
out
cli
pop
subl
je
xor
sbbb
xchg
mov
into
leave
sbb
cmp
je
mov
movsb
sub
dec
cmp
jg
shrb
ljmp
xor
jnp
das
in
sbb
jb
push
mull
sbb
ja
add
insb
sub
cwtl
je
outsb
mov
pop
cmp
roll
or
lods
outsl
push
hlt
loopne
sub
fldt
jle
dec
and
pop
pop
jecxz
push
adc
mov
adc
jb
pop
inc
fstps
dec
mov
int3
mov
mov
adc
or
scas
and
cmp
insb
sub
cld
sarl
pop
cmc
sbbb
mov
xchg
add
bound
cmpsl
jb
fadd
cs
std
mov
sub
or
arpl
mov
jbe
in
push
adc
aas
xchg
daa
mov
xor
inc
cmp
roll
mov
jo
xor
jne
cmp
and
xchg
push
push
popl
dec
aad
bound
push
adcl
in
mov
mov
jg
adc
xor
inc
fxam
push
incb
call
test
movsl
push
push
sub
sub
lahf
or
mov
add
xor
adc
jno
jae
out
test
push
pop
in
nop
in
mov
push
mov
or
bound
js
aam
and
adc
repnz
sbb
mov
jb
aam
outsl
aad
aaa
xor
bound
jns
jle
testb
scas
mov
sub
das
out
inc
jae
shll
enter
push
fcomps
pop
testb
inc
lods
insb
jge
mov
jmp
psubusb
repnz
stos
xchg
dec
adc
jne
cmp
jae
cmpsl
cmp
in
mov
mov
jl
daa
mov
dec
mov
test
mov
hlt
mov
push
mov
jge
xor
or
sahf
lods
jecxz
pop
inc
sub
stos
jns
mov
mov
dec
add
and
pushf
scas
fsubrs
mov
mov
adc
and
sbb
icebp
xor
mov
mov
insl
popa
push
pop
cmc
andl
fwait
ljmp
popa
mov
mov
mov
xchg
dec
adc
movsb
fs
jno
xchg
push
or
push
decl
fistl
ss
jcxz
enter
dec
xor
cltd
insb
addl
mov
stc
popf
jb
adc
orl
xchg
daa
in
push
sbb
mov
xlat
or
in
inc
out
mov
pop
or
mov
iret
add
pop
lods
mov
lahf
rcrb
fwait
xor
mov
push
sub
outsl
cs
inc
pushl
lods
fs
lahf
dec
shlb
jg
mov
xchg
mov
aas
addr16
ljmp
leave
xchg
sbb
sbb
mov
xor
rcr
out
adc
into
jnp
mov
fisubl
sbb
inc
sti
pop
inc
shrl
arpl
inc
neg
arpl
ljmp
push
int3
arpl
mov
nop
stos
fwait
cltd
jge
dec
mov
push
out
add
xchg
mov
outsb
mov
repz
or
jg
inc
jns
hlt
pop
mull
adc
cwtl
and
addr16
mov
sub
repnz
mov
js
and
imul
loopne
jne
jo
das
lods
ja
lret
addr16
movsl
sbb
into
arpl
push
out
nop
inc
ljmp
pushf
stos
or
mov
xchg
cmp
jb
adc
rclb
mov
pop
je
pushf
xor
insl
add
sti
stos
xlat
in
and
daa
popa
or
cmc
xor
dec
adc
pop
inc
jo
test
int3
pusha
aaa
xor
lock
pop
pop
stos
pop
mov
sub
jbe
xchg
or
cmpsb
into
push
popa
ret
into
mov
mov
inc
mov
lods
jo
add
xchg
jle
into
aad
lahf
sbb
sbb
xlat
xor
int
cmc
inc
rolb
lret
outsb
or
ret
sbbb
adc
scas
cs
cld
repnz
insl
cwtl
lods
inc
lret
inc
cmpsb
popa
loopne
sbb
test
dec
out
or
sub
cmpsb
ret
xchg
jo
rcrb
mov
popf
fiadds
push
mov
jns
bound
lods
mov
es
aad
hlt
push
int
sbb
aaa
inc
inc
movsl
pop
mov
ja
cmp
mov
jae
or
xchg
push
push
adc
out
cmp
and
mov
hlt
scas
adc
addr16
bound
pop
cmp
xchg
imul
mov
jmp
push
out
ret
out
push
cmpsl
out
into
pop
sub
dec
xchg
lods
mov
and
add
iret
inc
lods
push
fisubrl
jae
sti
fstpt
push
or
cmpsl
pop
sbb
leave
jmp
add
mov
pusha
shrl
sbbl
sahf
clc
test
das
cmp
add
mov
xor
lret
bound
inc
pop
clc
fs
outsb
sub
std
adc
pop
outsl
or
dec
mov
lahf
bound
xchg
add
scas
vrcpps
or
into
mov
adc
ret
mov
shrb
fidivl
out
dec
mov
divl
stc
cmpsb
arpl
dec
dec
add
adc
xor
lods
das
mov
mov
adc
sbb
jecxz
movsl
pop
int3
dec
push
pusha
pushf
cs
insb
jp
aad
sub
xor
or
jp
test
ss
sub
int
sub
inc
mov
jecxz
mov
mov
rcrl
gs
mov
mov
fsubr
add
inc
xor
out
in
pop
dec
fistl
dec
push
sarb
sbb
cmp
xor
rol
neg
xor
add
mov
imul
inc
jecxz
call
xor
out
push
sub
xor
into
movsl
scas
pop
jae
adc
pop
mov
sub
movsb
cmp
shll
imul
aas
adc
test
add
arpl
pop
mov
lahf
add
mov
imul
sbb
dec
repz
in
mov
cmp
ror
fcomip
pop
cmc
jp
stos
ret
outsb
push
push
shr
ret
xor
jge
inc
pop
insl
inc
and
sbb
sbb
jb
push
cwtl
push
scas
push
and
dec
int
jg
js
scas
stos
aad
loope
add
popf
dec
or
push
push
out
inc
stos
out
jns
dec
sahf
xor
mov
add
imul
lods
push
pop
stc
out
sti
jg
shrl
jp
fsubs
sub
jne
mov
pop
lock
add
xor
cmp
xor
stos
dec
pop
fstps
sub
cmpsl
and
mov
loope
popa
push
sub
pop
cli
ds
sub
lahf
xor
lahf
jmp
cmp
jae
xorb
mov
int
push
push
into
addr16
cwtl
and
mov
mov
push
inc
notl
push
js
fisubrs
sbb
pusha
aad
or
data16
sbb
in
push
popw
adc
push
jmp
pusha
idiv
cmp
test
sub
xor
cmp
inc
fstps
cs
push
pop
dec
pop
in
inc
pop
scas
jno
mov
xchg
fisubs
adc
jp
outsl
aad
mov
lret
loope
pop
or
cli
xchg
in
cmp
fs
pop
inc
pop
or
les
sbb
in
out
mov
jmp
add
out
data16
shlb
lds
inc
out
pop
mov
push
pop
jg
lock
mov
pop
lds
cli
shlb
jp
mov
sahf
inc
imull
jae
das
sbbb
icebp
cmp
cmp
push
test
push
add
jp
rcrb
cwtl
ss
out
insb
jo
rcrb
es
out
fbstp
push
mov
dec
in
enter
shl
leave
mov
mov
jmp
mov
mov
popf
stos
jns
fidivs
movsb
inc
loop
les
pop
fldenv
imul
js
aas
out
sahf
push
lods
mov
add
shl
add
fdiv
lock
cmp
mov
xchg
adc
xchg
jns
into
lcall
popa
pushf
lcall
add
lods
jbe
ficomps
fstps
fwait
dec
stc
loope
xor
lret
and
push
mov
adc
xorb
cmp
mov
in
sbb
nop
nop
imul
out
shlb
lcall
xchg
repz
cmp
fisubrl
dec
in
out
and
pop
ret
inc
mov
lret
das
out
mov
popf
adc
add
enter
jne
pop
xor
push
in
inc
movsb
xchg
ja
mov
popf
dec
dec
inc
popf
sti
add
mov
out
xor
jmp
push
iret
pop
lahf
js
mov
and
hlt
int3
pop
scas
jb
sbb
fnstcw
push
int3
mov
scas
ret
mov
lds
push
jbe
sar
cmpsl
repz
aad
das
push
ss
in
test
mov
xchg
jmp
inc
lcall
xlat
mov
lea
lods
outsb
hlt
inc
fisubrl
into
jl
ja
fnstenv
in
daa
outsl
push
cli
idivl
mov
pop
insl
or
notl
fcoms
mov
les
outsl
mov
sub
xor
or
ret
mov
aam
cld
xchg
icebp
ja
push
add
repnz
stos
xorb
js
add
pop
jo
mov
clc
adc
stc
add
cmp
hlt
ficompl
jge
stos
loop
and
orl
cmp
test
inc
xchg
in
mov
or
mov
test
aaa
jno
cld
sub
imul
dec
movsb
out
loopne
mov
xchg
cmp
je,pn
xchg
jbe
scas
add
adc
test
mov
les
xor
icebp
dec
add
adc
jae
mov
out
mov
je
es
adc
push
adc
sbb
dec
push
mov
in
or
mov
xchg
add
sub
xchg
stos
lret
cli
jl
lret
sbb
cld
and
dec
rorl
lcall
aad
aaa
mov
clc
gs
mov
icebp
sbb
in
jno
or
mov
jns
jns
insl
es
sub
pop
jmp
or
ljmp
pop
xchg
mov
jge
mov
ja
sbb
js
jg
add
push
lods
push
xor
pop
fistpl
cmovnp
lea
pop
xchg
push
sbb
out
icebp
xor
cs
in
jecxz
or
dec
lods
xchg
mov
mov
and
bound
push
ds
xchg
jns
andl
xchg
repz
cmc
mov
adc
adc
pop
inc
aaa
repnz
and
pop
mov
loop
add
lahf
sbb
mov
and
mov
movsb
insb
adc
popf
mov
imul
and
adc
daa
xchg
mov
sbb
andb
mov
popa
cli
xor
pop
in
dec
bound
mov
cs
mov
cli
mov
sbbl
xlat
nop
fisttps
adc
js
fistps
push
mov
mov
adc
pop
and
fwait
jg
or
pop
and
adc
fsubs
js
adc
sbb
ss
cmc
pop
movsl
sbb
imul
in
jnp
sahf
fnstenv
ds
sbb
mov
movsl
jnp
add
outsb
xchg
call
cltd
cltd
and
movsb
xchg
lahf
vandnps
dec
movsb
pop
outsl
push
cmc
push
movsb
pop
sti
xchg
mov
ret
mov
lods
pop
inc
loopne
test
je
mov
icebp
adc
dec
pop
fmull
jl
sbb
push
jge
mov
movsl
sbb
mov
into
daa
mov
jae
sub
or
arpl
out
negl
adc
xchg
sbb
orl
jl
or
and
jge
mov
xchg
iret
mov
lods
pop
xchg
faddl
adc
jne
push
repz
data16
ret
xor
sbb
lock
test
cmpsl
mov
out
fimull
add
nop
xchg
jl
shl
xor
mov
sbb
cmp
aad
push
jae
int3
fmul
sbb
aas
or
lahf
mov
out
aaa
lods
add
pop
pop
ret
push
add
xor
jo
cmp
mov
push
mov
rol
xchg
hlt
into
sub
in
mov
inc
call
popf
pop
fs
ret
jl
andb
jnp
mov
xor
ss
jb
push
imul
inc
adc
out
lock
int
js
dec
cli
test
inc
hlt
mov
pop
lcall
sub
hlt
push
jg
mov
fidivs
dec
sarb
icebp
mov
push
cmp
aas
rcll
mov
arpl
push
lahf
sbb
pop
stos
sub
int3
loop
jae
jo
test
loope
add
fsub
test
push
mov
add
insb
xor
insb
iret
mov
sub
mov
iret
stos
sarl
sbbl
in
fwait
jp
loopne
adc
jbe
jbe
jle
lret
xor
loopne
jmp
sbb
aas
pop
andl
ror
in
repz
jmp
inc
mov
cmpsl
mov
xchg
inc
je
xchg
jmp
cmc
enter
imulb
sub
xchg
insl
jge
add
inc
notl
mov
add
out
xchg
sub
cwtl
jae
lret
xor
xchg
ja
push
and
xor
lret
mov
inc
stos
xor
cmp
jb
mov
ficomps
inc
fwait
dec
sub
pop
cmp
sbb
xor
sub
dec
lret
jbe
mov
inc
fldl
mov
lods
in
fcmovne
lahf
inc
movsb
test
fwait
pop
sub
inc
xchg
push
xor
cmpsl
xchg
aad
psrlq
dec
movsl
test
in
mov
pushf
and
lcall
sbb
or
cmp
fisubrl
popa
cmp
movsb
fwait
pop
sub
mov
idivl
in
outsl
rorb
pushf
or
mov
mov
mov
and
cli
xchg
and
jbe
sbb
std
xchg
je
call
add
push
sahf
mov
adc
scas
and
clc
in
mov
xor
fisubrl
je
push
inc
out
mov
cmp
idivb
popf
jmp
jnp
fdivrp
and
jle
cmp
mov
cmp
test
mov
add
jl
xor
sub
imul
call
sbb
shlb
pop
xor
loopne
ljmp
enter
xchg
jns
dec
fwait
cmpsl
and
fsubrl
mov
daa
jo
add
fs
and
addb
sbb
jnp
pop
lods
jbe
outsb
clc
movsb
sti
and
popf
sub
sub
pushf
cmp
sbb
adc
pop
and
inc
push
mov
dec
cmp
in
mov
ret
lds
push
xchg
ljmp
adc
mov
and
adcb
mov
pop
addr16
push
cs
clc
pop
xor
push
ss
mov
popf
cmc
jmp
stos
sbb
adc
add
lret
stos
pushl
into
inc
sbb
adc
push
jae
loop
mov
lcall
nop
icebp
popa
sub
mov
fisttpl
and
out
daa
dec
aad
mov
xor
sar
mov
int
xchg
adc
ds
inc
mov
fwait
and
or
pop
jp
insb
xchg
aad
inc
push
mov
lret
int3
fistl
out
jns
icebp
adc
mov
xor
not
mov
jp
sbb
xchg
insl
or
xor
pop
lahf
mov
mov
xorl
push
jge
sub
insl
pop
bound
jbe
sub
sbb
fstpt
jo
lret
jb
mov
adc
loop
leave
int
ds
insb
push
int
adcb
jg
add
sbb
mov
aas
and
or
jecxz
mov
push
jne
push
fldcw
stc
xchg
xor
loop
pop
sbb
fdivl
or
or
or
lods
inc
mov
imul
stos
mov
fst
ret
fdecstp
and
shll
pop
arpl
pop
enter
outsb
insb
mov
test
jmp
mov
dec
mov
push
mov
shl
xchg
es
arpl
pusha
iret
cs
inc
fdivrl
test
pop
jle
pop
mov
in
sub
mov
xchg
arpl
sbb
jecxz
sbb
mov
sub
push
cmp
sbb
xchg
and
jp
xchg
pop
xchg
aas
leave
pushf
pop
xlat
jmp
orl
hlt
or
pop
mov
loope
dec
mov
cmp
scas
cmc
popa
inc
jnp
mov
push
neg
add
xor
or
icebp
xor
or
pop
aaa
push
popa
jnp
cmp
aas
les
push
stc
data16
shrb
cmp
or
adc
xchg
aam
dec
arpl
stos
add
jmp
xchg
mov
push
cmpsb
lock
jmp
das
xor
mov
mov
clc
xchg
pop
mov
daa
push
sub
add
xchg
adc
inc
repnz
sbb
jns
jne
push
jmp
pop
lret
dec
mov
xchg
andl
lret
and
push
push
cmpsl
lcall
movsb
push
jae
sub
inc
jns
sub
pop
push
lods
stos
mov
inc
jl,pn
dec
push
iret
mov
xchg
data16
add
pop
and
mov
mov
jecxz
cmp
sahf
xchg
sbb
mov
scas
cmp
popa
cmp
rclb
enter
and
inc
sbb
fildll
lret
push
push
push
mov
mov
cmpsl
scas
jno
in
inc
into
sub
pop
ds
imul
xchg
into
mov
cli
outsb
jmp
adc
sub
fnstenv
dec
sbb
andb
jne
and
test
js
aas
adc
xor
jg
dec
jae
cmp
test
clc
repnz
pop
bound
in
inc
mov
rcrl
jb
aas
je
add
es
xor
jne
aad
sbb
fbstp
lock
dec
mov
lahf
jle
pop
jns
lahf
es
roll
imul
popf
jmp
pop
lahf
sbb
cli
xchg
shl
or
jne
cs
popf
dec
or
cli
insb
lods
lods
jmp
xor
inc
mov
hlt
xchg
ss
cmp
popa
adc
stos
inc
adc
les
stc
adc
or
pop
out
xor
adc
xchg
enter
push
ljmp
fwait
sub
loopne
das
push
outsl
in
pop
jg
stos
nop
jo
mov
daa
lret
aaa
decb
outsl
inc
fisubrs
or
xchg
adc
lahf
or
hlt
push
or
in
mov
push
lods
std
out
test
mov
ljmpw
and
jnp
sub
rcrb
shl
repz
sarl
fwait
dec
data16
push
lea
cmp
lret
push
fnsave
mov
adc
xchg
aad
enter
jb
push
dec
push
and
mov
jns
scas
push
test
inc
jno
mov
add
inc
mov
inc
push
lods
hlt
or
cmp
and
adc
mov
bound
cmpsl
stos
testl
mov
mov
insb
sub
icebp
xor
divl
mov
push
aas
mov
mov
addr16
pusha
insl
lcall
testl
call
pop
xchg
fcomps
inc
jg
cmpsb
mov
push
add
iret
iretw
dec
and
dec
or
repnz
xchg
fcmovnbe
cmp
lret
jae
jnp
cld
pop
and
mov
ljmp
or
cltd
inc
adc
addb
cmp
inc
pop
pop
mov
iret
mov
cmpsl
hlt
jl
rorb
and
xchg
dec
pop
ja
mov
fcomp
cmpsb
nop
mov
in
in
push
mov
xor
andl
mov
je
iret
pop
jae
jbe
cmpsl
imul
faddl
mov
je
pop
adc
int
adc
mov
push
push
push
addb
loopne
xchg
icebp
fdivs
xor
xlat
cmpsl
mov
scas
add
sbb
lret
cmp
push
cltd
xor
cmp
fidivrs
ret
ds
mov
fldt
lret
dec
fcmovne
pop
bound
es
js
mov
sub
pop
call
or
in
sub
sbb
movl
mov
pop
stc
xchg
sub
fbstp
inc
push
imul
and
add
es
sub
movsb
lods
stos
test
and
sti
inc
lock
shrl
lcall
insb
and
cmp
sbb
ficompl
pop
inc
mov
xchg
or
in
test
xor
jmp
xor
jle
popa
mov
ret
dec
push
push
es
jge
adc
aad
je
inc
or
push
into
or
push
fucomp
test
mov
xor
bound
cli
cmp
jns
inc
sub
mov
pop
jmp
sub
mov
jo
mov
ret
iret
mov
imul
call
xchg
shrb
iret
pop
or
ja
mov
lock
incb
enter
and
lods
dec
pop
cmp
jb
cmp
aas
cmp
dec
lahf
ret
rol
pop
aam
cmp
fsubr
sub
lock
dec
loop
inc
sti
dec
pop
sub
mov
ss
repnz
out
out
cmp
xor
loope
xor
cmp
sub
mov
pop
dec
mov
mov
adc
pop
cmpsl
xchg
xchg
fsubrp
roll
out
popa
and
out
vmovups
enter
jo
mov
and
mov
das
divl
dec
out
nop
adc
adc
inc
cli
mov
xchg
mov
cmc
in
fsubrl
std
jl
cmpsl
jns
addr16
pop
repz
push
jae
add
imul
or
inc
ss
out
push
and
repz
cmp
ror
adc
jbe
rol
in
dec
pop
cmp
cmp
xor
add
or
push
out
push
dec
xor
repz
imul
mov
das
je
subl
shlb
lret
sti
jae
pop
cmp
push
fimuls
ficoml
mov
lods
es
cmpsl
aad
sbb
dec
fsubr
pop
mov
inc
aaa
push
push
lea
dec
iret
in
push
push
pop
fisttpll
push
or
xor
mov
out
and
push
or
mov
add
xchg
leave
int
sub
mov
add
js
daa
xor
test
test
and
mov
add
mov
sub
xchg
mov
test
dec
pusha
pop
inc
sbb
jnp
rcr
in
loopne
inc
arpl
in
cwtl
arpl
xlat
into
enter
popf
add
mov
sti
xchg
je
cmp
push
xchg
lock
sbb
ds
sub
fdivl
int
sub
fsubrl
lods
push
mov
xchg
adc
push
dec
cmp
and
iret
daa
sub
sarl
or
adc
or
mov
lds
push
xchg
aaa
and
jb
add
imul
rcrl
lea
scas
add
fnstenv
dec
cmp
andb
mov
sub
inc
sub
pop
mov
dec
dec
mov
rep
sub
in
int
cmc
test
or
mov
pop
dec
jp
push
and
das
cld
aas
inc
fnstenv
call
xchg
mov
andb
push
int
aaa
call
jae
repnz
sbb
scas
mov
cmp
enter
es
ja
aas
cmpb
daa
mov
sub
or
dec
imul
test
fwait
sub
shr
out
cld
ljmp
mov
cld
jno
test
bound
inc
sbb
dec
popf
sub
mov
mov
aaa
movsl
adc
push
js
or
cmp
in
mov
fadd
jne
push
push
sti
sbb
sbb
pop
cmp
scas
mov
loope
cld
sub
data16
das
add
insb
mov
push
xor
push
lcall
inc
fldcw
hlt
mov
adc
inc
jge
inc
fwait
mov
adc
loopne
mov
xor
jge
mov
mov
mov
adc
dec
mov
sbb
mov
call
or
dec
push
insb
aas
push
xor
mov
pop
inc
iret
iret
mov
cmc
jl
jb
and
adc
aad
xchg
add
mull
xchg
adc
push
mov
xchg
add
pop
test
test
dec
pop
rcrb
test
mov
sbb
add
jg
pop
insl
mov
lret
fnstenv
imul
xor
incb
mov
cmp
xor
dec
ds
lods
inc
sti
aaa
dec
adc
outsl
scas
cmp
nop
stos
xchg
imull
aad
cmp
cmpsb
sub
fdivs
mov
in
dec
and
mov
pop
push
push
mov
sbb
jmp
das
push
mov
and
lret
jb
adc
out
in
iret
mov
push
shll
inc
repz
lock
inc
adc
xchg
sbb
aas
pmaxub
xchg
pop
js
sub
call
cmp
push
adc
mov
fisttps
fwait
sbb
inc
xchg
mov
mov
imul
xchg
in
inc
mov
sbb
sub
jbe
fistl
ja
mov
call
jp
cld
in
xor
adc
push
xchg
jns
dec
adc
xchg
fdivs
mov
je
imul
scas
adc
pop
negl
out
xor
data16
outsb
std
movsb
in
addb
fstps
sti
adc
cmp
or
or
faddl
push
out
xor
push
cmp
jg
fwait
rcll
cmp
pop
iret
sbb
adc
add
aam
bound
sbb
or
and
mov
jnp
shll
setae
enter
lret
sbb
inc
ds
test
iret
stos
bnd
or
mov
push
ja
cmp
loopne
mov
repnz
outsb
add
mov
inc
cmpb
movsb
ja
adc
leave
rcr
repnz
test
pushf
clc
jae
xor
cmpsl
test
push
sub
pop
cmp
das
shrl
insb
imul
cmp
je
jnp
fidivl
adc
jnp
and
or
loope
jle
lods
mov
rcr
call
sub
jge
lahf
xor
and
call
mov
dec
lret
es
and
inc
mov
xor
lds
xchg
mov
jmp
push
imul
mov
dec
mov
and
xor
lods
push
or
sub
or
lds
jbe
dec
loop
push
les
mov
aaa
arpl
mov
sbbl
fdivl
sub
ja
pop
mov
xor
adc
push
imul
jno
jle
mov
dec
adc
jno
stos
call
inc
xchg
mov
xor
push
pop
pop
push
scas
adc
loop
push
lock
jae
jle
fnstenv
into
pop
and
mov
int
pusha
or
gs
lods
out
mov
fsubrl
mov
js
mov
ljmp
xor
cli
mov
mov
stos
dec
hlt
sbb
std
decb
fcmovbe
xchg
inc
scas
jb
mov
sbb
mov
push
in
repz
and
fbld
cmp
xchg
stc
xor
cli
cmp
sub
jecxz
in
aad
lods
cmpl
ja
repnz
adc
mov
movsl
jno
mov
aas
jbe
pop
test
mov
aas
sahf
dec
out
pop
push
notb
in
aam
ljmp
arpl
adc
mov
ficoms
lcall
add
jbe
inc
test
inc
push
loopne
xchg
jle
cmpsb
push
mov
mov
cmp
mov
daa
cmp
lods
mov
mov
jp
icebp
add
add
inc
lahf
cs
enter
mov
outsb
dec
inc
shr
repz
mov
stos
aad
popa
jns
mov
sbb
cmp
add
mov
ljmp
and
out
push
testl
nop
insb
into
mov
sbb
shll
mov
xchg
scas
push
xor
gs
shll
and
inc
xchg
scas
push
lcall
or
scas
out
mov
outsl
mov
icebp
aam
int3
insl
das
pop
leave
add
out
push
sarb
imul
xchg
sub
sub
cmp
std
pop
repnz
out
dec
andl
adc
andl
lret
add
enter
jl
cld
xchg
fs
mov
rol
mov
sbbl
inc
pop
or
mov
dec
out
test
pushf
fs
xchg
mov
mov
or
push
pop
xchg
mov
js
fcomps
or
aad
or
repz
sub
xchg
sub
je
dec
mov
and
jb
out
rcrl
add
sti
sbb
cs
sbb
mov
imul
add
mov
jne
out
imul
xor
out
or
cmc
mov
xor
inc
push
test
inc
inc
adc
lea
jno
xorl
fcoml
xor
bound
pop
xor
outsb
mov
dec
insb
shl
or
pushf
mov
lcall
sbb
mov
popf
or
xor
mov
gs
or
rcl
sub
mov
lds
mov
dec
ret
pop
and
xchg
stos
and
sbb
and
ret
repz
in
das
ret
sahf
push
shrb
shll
bound
jo
dec
out
inc
fs
rcl
adc
scas
inc
pop
jo
mov
lods
and
scas
fstps
pop
fadds
sbbb
out
fcmove
ljmp
and
push
sahf
mov
xor
scas
aam
pop
sbb
pop
mov
push
daa
mov
icebp
mov
ret
orl
or
cwtl
jl
adc
pop
out
mov
dec
pop
lds
out
cltd
or
add
dec
pop
pop
sahf
clc
push
and
jl
adc
add
ds
lods
outsb
push
push
cmp
xchg
mov
pop
sbb
aam
pusha
adc
test
jl
adc
xor
xor
loopne
fwait
adc
cmovno
test
mov
test
inc
in
dec
push
cmpsb
cwtl
addl
and
mov
jle
in
cmpsb
fnstenv
addr16
pop
cwtl
insl
pop
xor
push
or
mov
mov
sti
movsb
outsb
inc
mov
in
push
push
mov
jecxz
icebp
cmp
cmp
in
fimuls
mov
in
and
lret
xor
stos
cmp
jmp
int3
xchg
mov
dec
dec
pop
xorb
and
jmp
cmp
cmp
movsb
mov
push
adc
pop
lock
in
jg
push
add
mov
lods
outsl
imull
fs
ret
inc
pushl
xchg
incl
xchg
xchg
xchg
and
push
cld
push
int3
push
pop
gs
pop
lock
jne
rorl
adc
int
popf
daa
outsl
loopne
pop
cmc
jno
mov
and
xchg
mov
xchg
sub
xchg
xchg
outsl
cmp
pop
cli
loope
xchg
jns
mov
push
int
jp
fldcw
inc
or
push
lods
dec
inc
push
cwtl
jb
sub
aam
xor
push
mov
inc
inc
mov
in
cmp
xor
adc
movsb
rcrb
pushl
out
cmp
lcall
jecxz
mov
leave
fistl
xchg
lea
lret
push
adc
arpl
mov
ljmp
repnz
aam
xorb
add
cwtl
cld
sub
adcl
fmuls
adc
cmpsb
cmp
int3
arpl
mov
mov
cltd
xchg
sub
pop
enter
pop
dec
push
mov
ja
dec
fstpl
lahf
jp
cmp
xchg
fwait
mov
test
xor
xchg
std
les
dec
mov
insb
adc
arpl
cltd
xor
ret
inc
stos
pusha
shr
leave
andb
divb
inc
stos
fmul
int
inc
enter
and
stc
stc
stos
jle
jmp
jns
inc
or
sub
sbb
in
mov
cmp
mov
cmp
repz
bnd
cmpsl
aaa
jns
out
leave
sub
stos
cli
sub
fsubrs
pop
insl
out
push
roll
negb
loop
sbb
cmp
clc
sarb
outsl
xlat
stc
roll
sbbb
or
cs
loope
dec
pop
fwait
dec
aad
cmp
jb
inc
cmpsl
mov
loopne
or
popf
negl
call
out
cld
xchg
adc
ss
cmp
imul
into
arpl
lcall
fidivs
cmp
jp
mov
pop
inc
loope
hlt
push
in
xchg
push
cmpl
pop
rolb
jmp
arpl
popf
jo
sbb
cmpsb
sbb
sbb
mov
adc
adc
add
inc
add
aas
outsb
pop
sbbb
xor
pop
pop
imul
xor
and
xchg
inc
shl
jae
xor
nop
test
mov
jp
mov
das
je
out
mov
pop
cltd
jecxz
lret
mov
hlt
mov
pushf
jg
dec
rcll
imul
mov
jg
push
ljmp
clc
data16
insl
sub
pop
xor
pushf
hlt
mov
mov
rol
mov
pop
jmp
outsb
dec
rol
cltd
or
nop
push
xor
out
enter
mov
repz
cmc
sub
mov
pushf
repz
enter
cmp
push
dec
leave
movsb
add
push
nop
cld
jo
jno
fidivs
adc
imul
or
adc
mov
mov
add
cmp
insb
dec
mov
in
popa
enter
add
mov
int3
dec
dec
push
movsl
sub
push
je,pt
das
out
xor
or
mov
mov
les
jle
inc
cmp
aam
test
mov
mov
dec
cmpsb
xlat
inc
cmc
pop
into
jge
mov
adc
inc
sub
divl
inc
mov
div
mov
fnstcw
cmp
push
sbb
sti
inc
inc
test
and
or
cmp
shr
cli
jl
mov
dec
xchg
jge
fiadds
addr16
out
mov
popa
mov
mov
and
mov
daa
ror
repz
add
sbb
fstpl
fildll
in
push
xor
repz
push
jp
faddl
hlt
jge
jbe
xchg
xchg
inc
js
fnstsw
jle
aas
roll
push
imul
in
push
inc
xor
icebp
jmp
cli
inc
das
clc
sahf
add
imul
add
push
push
movsb
ficomps
add
clc
xchg
lret
push
sbb
inc
cmpsl
add
push
shlb
shrb
cmp
out
test
mov
sti
popa
aam
aad
ljmp
sarl
std
cltd
cli
test
adc
out
jg
stos
scas
mov
xchg
xor
out
repnz
mov
sarl
shlb
xchg
scas
sbb
mov
test
inc
inc
xor
xchg
test
scas
mov
lea
int
ss
mov
cld
and
fmull
ss
test
xor
or
bound
movsl
in
push
or
js,pt
mov
pop
sarl
xchg
mov
fnstenv
mov
push
inc
les
push
xchg
insb
mov
cmpsb
out
orl
loop
adc
pop
push
lods
sbb
add
mov
xchg
pop
jns
les
rcr
jp
jne
stos
sti
mov
les
decl
ja
lods
add
movsl
dec
nop
adc
mov
sub
ret
xor
mov
std
jbe
push
andl
stc
fdivrs
inc
movsb
pop
xchg
jo
and
je
xchg
clc
mov
movsb
sti
push
bound
iret
outsl
and
pop
imul
sbb
sbb
mov
int3
in
loope
mov
test
jo
inc
fcmovnbe
xchg
jns
out
fbld
mov
cmc
sub
cmp
pop
aas
insl
pop
xor
imul
fcomp
into
int3
stos
xchg
inc
sub
ficomps
xchg
dec
mov
xchg
test
mov
mov
push
cmp
sar
movsl
xchg
add
stc
cmp
leave
xlat
push
fwait
jb
rcll
aam
jecxz
lods
dec
cs
aad
fists
nop
stos
lea
aaa
xchg
mov
aad
inc
xchg
ljmp
adcl
outsl
push
push
sub
nop
aaa
mov
outsl
pop
scas
cmpb
insl
add
sahf
jae
push
in
mov
mov
mov
add
sbb
fsubrl
subl
push
mov
in
repz
outsl
cs
mov
push
add
arpl
test
fnstsw
aam
jmp
mov
iret
test
rolb
mov
push
mov
loop
inc
pop
out
in
es
icebp
movsl
cli
je
or
pop
cmp
mov
fdivrl
dec
xor
movsb
jecxz
jo
ret
mov
or
mov
clc
stos
adc
push
sub
fstpl
out
ret
into
jg
pop
addr16
mov
rclb
xor
and
test
sahf
shrl
push
jne
insb
sub
mov
or
cmp
mov
jne
xchg
adc
daa
jae
jae
sbb
lods
imul
rol
pop
and
cmp
in
mov
jne
and
xor
and
dec
mov
inc
idivb
adcb
push
push
mov
xchg
addl
mov
int3
xchg
and
xor
int
add
loop
and
jp
stos
jmp
pop
out
pop
test
les
mov
out
imul
cli
sbb
mov
mov
addb
mov
xchg
or
sbb
sbb
jl
pop
insl
ret
rolb
out
jo
adcl
test
movsb
mov
divb
inc
fisttpl
stc
pop
pop
aam
sub
andb
stos
inc
push
dec
shl
das
leave
pusha
popa
mov
sarb
jle
cltd
icebp
or
sub
sbb
push
push
clc
cmp
lret
inc
imul
sti
and
cmc
push
sbb
sahf
inc
xchg
inc
push
lcall
lock
or
and
insb
add
push
jae
sti
mov
or
sbb
nop
dec
call
or
or
inc
std
aam
and
adcl
leave
push
icebp
fsubs
cli
push
cmp
push
and
js
dec
dec
add
sub
rcrb
call
dec
outsw
dec
je
lcall
mov
hlt
pusha
mov
mov
xor
cld
stos
jmp
out
icebp
mov
inc
popa
enter
aaa
stc
sbb
pop
and
mov
mov
pop
cwtl
das
mov
jno
daa
mov
pop
push
add
ja
and
xchg
mov
xor
sahf
cs
repz
outsb
cltd
leave
loope
sti
mov
inc
ficompl
mov
int
push
call
sbb
repz
test
xchg
jbe
xchg
int3
xor
push
mov
les
push
or
ljmp
mov
xchg
ljmp
add
lret
jnp
pushf
mov
cmpsb
in
aad
ss
jae
add
mov
xchg
aam
movb
pushw
push
or
test
lods
inc
dec
lods
cmp
mov
mov
jns
scas
mov
mov
add
jbe
outsl
test
sbbl
or
cmp
mov
xor
and
dec
push
imul
sbb
scas
jae
lret
outsl
mov
pop
and
mov
cmp
xchg
mov
hlt
dec
mov
jecxz
shrl
icebp
or
or
inc
in
call
int
push
ljmp
testl
pop
in
push
add
mov
cltd
mov
jnp
pop
aas
adc
orb
push
pop
lds
jb
daa
inc
cmpsl
xchg
xor
jmp
or
xor
cmp
xchg
dec
loop
add
in
pop
imul
inc
push
add
movsb
out
push
push
and
sbb
clc
inc
dec
test
test
push
pusha
aas
mov
cmp
and
push
sbb
jmp
xor
dec
xchg
adc
inc
out
add
arpl
pusha
cmc
add
jle
cmp
int
mov
stos
lret
mov
xchg
inc
inc
add
dec
iret
mov
loopne
pushf
jae
jo
or
shlb
pop
arpl
std
notl
lcall
arpl
enter
in
add
xchg
dec
shrl
push
xor
shll
lods
outsb
jp
cmpsl
jl
pop
inc
ljmp
jl
pop
rcrb
inc
and
icebp
in
and
test
add
stos
inc
cmp
enter
stc
je
es
pop
mov
aad
idivb
mov
fstl
sbb
xchg
jg
les
jle
sbb
insb
fs
cltd
inc
out
inc
arpl
dec
mov
pop
icebp
adc
mov
xchg
hlt
push
ss
std
xchg
inc
jae
test
loop
mov
inc
adc
or
xchg
gs
mov
push
sub
notb
cmc
scas
mov
imul
sarb
rcrl
cmpsl
pop
mov
xor
ja
les
sti
jbe
push
jmp
sbb
cmp
sahf
stos
es
loop
daa
std
and
inc
imul
sbb
mov
fimull
outsl
xchg
xor
imul
mov
mov
push
in
cmp
divl
leave
daa
arpl
jne
mov
into
cwtl
aaa
adc
movsl
xor
xchg
lret
into
pop
xchg
jmp
mov
push
mov
aad
jnp
push
or
xlat
test
test
inc
imul
sub
outsb
ds
adcl
jbe
mov
scas
cmc
xchg
out
mov
mov
xchg
cmpb
adc
adc
jne
xchg
sbb
mov
arpl
push
in
mov
in
xchg
pop
movsl
ja
xchg
call
lret
fnstsw
cmp
mov
rcrb
push
in
pop
pop
mov
aaa
test
loope
push
dec
push
cltd
dec
and
fwait
test
mov
sub
test
xchg
xor
sub
lret
sarl
fsubrp
sbbl
jl
xor
idivl
pop
jle
dec
fldt
cmp
imul
orb
mov
nop
push
lds
inc
mov
int3
in
das
lea
mov
fmuls
jbe
mov
mov
mov
jnp
imul
or
arpl
sbb
mov
pop
pop
scas
adc
loop
cmc
or
je
rcll
dec
in
inc
push
in
movsl
insb
adc
dec
dec
add
sbb
jno
jl
ja
in
call
test
lcall
lcall
popa
and
add
pop
mov
cmpsb
xor
ss
mov
fisttps
adc
imul
out
popa
pop
cltd
or
xchg
xchg
mov
clc
jecxz
push
sbb
mov
xchg
fsubr
fcompl
mov
cmc
bound
mov
add
or
imull
testb
aam
mov
jnp
insl
clc
outsb
xor
and
in
adcl
inc
xor
mov
into
das
testb
pop
not
xor
xor
push
orl
ss
out
out
sahf
push
sti
mov
aaa
into
sbb
xor
cmp
push
nop
adc
in
xchg
adc
roll
in
dec
push
cltd
jbe
out
scas
or
lret
lock
adcl
dec
mov
mov
fidivrl
out
sti
push
loope
push
insb
dec
xchg
sbb
nop
sub
pusha
ror
cmpsb
incl
and
or
mov
mov
cwtl
insb
jg
dec
mov
adc
pop
fbld
push
jbe
xchg
push
fcomps
out
in
cwtl
mov
in
or
adc
jno
sub
xchg
jmp
mov
sub
inc
repz
stc
push
sar
lea
jne
mov
xchg
test
sub
inc
dec
pop
inc
in
dec
push
push
xor
dec
or
mov
sub
pop
mov
dec
ja
mov
rcrb
scas
insb
sbb
xor
add
dec
ss
loopne
push
lods
pop
adc
dec
cmp
xchg
push
aaa
or
addl
dec
or
cmp
icebp
sbb
loopne
out
cltd
mov
sub
sub
iret
cmp
push
jb
cmpl
cwtl
pop
xor
movsl
stos
xchg
pop
jecxz
loopne
mov
fistpll
sub
icebp
jge
push
rorb
mov
push
pop
ficomps
insb
push
mov
sahf
mov
outsb
and
adc
mov
lods
push
in
mov
jecxz
rol
decb
adcl
pop
and
cmpsl
adc
mov
std
inc
xor
gs
cmp
dec
push
mov
fcmovbe
mov
imul
xor
dec
out
mov
add
test
pop
mov
push
and
mov
out
out
cmpl
or
std
lock
sub
sbb
movsl
lds
pop
cmpl
sub
pop
mov
jge
jns
stos
and
iret
adc
repz
test
mov
mov
je
adcl
test
fdivrl
ret
dec
fbstp
loope
sti
jno
jo
mov
and
fmull
sbb
jl
fcomps
pop
jp
ret
sub
xor
dec
loopne
push
jb
and
rcll
lds
lea
imul
insl
lahf
les
jb
jne
adc
push
fcmove
cmpsb
sbb
cmp
mov
loopne
or
cmpsb
add
cmpsl
mov
adc
dec
and
rol
je
adc
popf
and
and
pop
xor
lea
arpl
xchg
cmpsl
xorl
push
loop
xchg
jbe
ret
daa
mov
sbb
outsb
std
sti
push
mov
push
mov
out
mov
outsl
jmp
jg
dec
mov
sub
pop
insl
add
mov
jp
pusha
fstps
shrb
and
push
or
lret
iret
lcall
lods
fbstp
ss
jmp
xor
add
test
imul
loopne
push
popf
dec
adc
jbe
sub
sub
sub
pop
pop
inc
and
stc
loopne
leave
adc
in
cmp
xor
cmc
es
fstl
dec
filds
xor
cltd
lock
or
adc
inc
dec
xchg
xor
mov
dec
mov
scas
pop
insb
push
mov
add
std
iret
sbb
mov
and
mov
push
jmp
sar
adc
repnz
mov
sarl
mov
mov
inc
jmp
cld
or
sbb
addl
ds
pusha
mov
popl
arpl
mov
mov
add
xorb
mov
xchg
inc
dec
lods
mov
pusha
fcmovnb
imul
jmp
jno
jae
faddl
ds
push
mov
mov
pop
cmp
outsl
sarb
dec
dec
clc
sahf
lahf
in
or
mov
rclb
xor
ss
xchg
pop
push
or
push
push
jbe
std
xchg
stos
sub
jne
dec
sbb
lea
test
sub
inc
push
clc
mov
sub
and
mov
pop
test
pushf
mov
std
sbbb
inc
pop
fstl
ds
xchg
fistps
cwtl
das
push
jne
or
sub
adc
in
shll
ds
lods
pop
leave
jne
ret
in
addb
je
arpl
in
inc
addr16
adc
scas
scas
mov
lret
ss
sub
roll
std
loop
xchg
jle
xchg
lock
cwtl
bound
dec
pop
or
ret
icebp
xchg
add
or
push
mov
sub
and
add
mov
loop
ret
arpl
pop
mov
aas
sub
std
xchg
push
repz
jb
std
sbb
clc
dec
xor
js
inc
mov
test
inc
fcmove
daa
ret
push
inc
adc
cld
and
sti
std
push
add
sbb
leave
stos
jnp
add
dec
and
inc
loopne
mov
out
xor
inc
jle
shrb
jmp
ret
in
loopne
mov
insl
mov
push
pusha
mov
and
dec
push
stos
jle
popf
daa
jecxz
ss
push
insl
push
repnz
xchg
and
negl
xchg
lock
sub
mov
fsts
pop
mov
mov
mov
pop
mov
lods
inc
sahf
mov
ss
stos
jl
push
adcl
int3
ljmp
dec
and
mov
sub
not
dec
fucomip
daa
and
orb
jo
pop
das
sbb
arpl
lret
std
sbb
ljmp
lea
mov
sub
sub
jb
sbbl
bnd
sbb
iret
int
mov
fcomp
jns
jmp
mov
cmp
xorb
xor
push
jmp
dec
aad
add
adc
xchg
inc
or
fsubrs
sub
jns
outsl
or
mov
mov
cmp
ds
sub
cmp
cli
add
pop
mov
push
movsl
mov
stos
inc
inc
fcoms
fcoms
mov
setg
pop
aad
push
or
jns
dec
mov
in
insb
jg
iret
push
stc
jl
dec
push
jmp
fisttpll
out
out
jle
ret
add
cmp
push
mov
rcrl
aaa
movsb
push
jmp
out
inc
jmp
push
fs
sub
les
add
clc
or
jne
out
pop
inc
mov
or
xchg
lds
sbb
or
mov
push
jmp
lahf
fs
dec
mov
aam
lea
outsb
push
stos
push
cmp
stc
pop
and
movsb
popl
pop
sbb
xor
pop
negl
add
jne
sub
xchg
sbb
sub
pop
mov
insb
outsb
hlt
lcall
jns
mov
xorb
push
notl
mov
sbb
push
cmpsb
mov
mov
xchg
cs
push
test
les
sub
in
lret
adc
std
push
dec
loop
movsl
mov
in
mov
outsl
test
sti
dec
adc
and
mov
aas
int
jo
pusha
cmp
inc
stc
bound
add
xchg
ds
mov
push
or
xchg
mov
jne
andl
and
push
xchg
pop
stos
dec
jecxz
dec
scas
mov
jbe
xchg
xchg
lds
mov
mov
push
mov
xor
jnp
or
sub
mov
xchg
sub
jne
fnstenv
arpl
jnp
leave
dec
and
and
cmp
test
xlat
popf
push
fucomip
mov
arpl
fstpt
cwtl
cltd
mov
sbb
or
out
call
or
sbb
or
test
imul
dec
mov
pop
ss
lods
sti
rol
out
push
loop
mov
mov
dec
loopne
popa
daa
pop
cld
push
cmp
test
lcall
inc
inc
sbb
add
push
out
es
sub
lock
sbb
xchg
add
mov
data16
mov
dec
in
dec
mov
pop
mov
mov
mov
bound
insb
rorb
pushf
lret
adc
add
test
test
out
sbb
adc
dec
and
mov
lods
clc
adc
xchg
cmp
negb
scas
fs
ret
mov
jnp
jmp
and
jle
shr
test
cmpsl
mov
into
jb
movsb
mov
in
bound
test
add
sub
std
xchg
jecxz
jb
sub
daa
ret
dec
adc
lds
jl
inc
roll
add
mov
add
popa
repz
fnstsw
fcmovnu
into
xorl
es
mov
dec
lea
pop
pop
mov
outsl
inc
ds
jge
push
daa
ljmp
sub
mov
fidivrs
std
dec
test
and
rcl
jne
and
inc
cmpb
push
cltd
aam
cli
add
je
test
fldl
insb
mov
mov
push
pcmpeqb
xchg
jns
adc
popf
pusha
inc
scas
outsb
jecxz
sub
fnsave
enter
push
push
push
pop
lds
test
inc
rcrb
test
and
out
push
push
hlt
inc
push
jmp
push
pop
repz
ljmp
pop
push
jno
lock
stos
xor
dec
xchg
test
or
aaa
jns
cltd
sub
mov
mov
cmpsb
imul
in
clc
xor
out
inc
sets
and
int
mov
pop
mov
push
push
mov
movsl
jge
filds
mov
leave
xchg
mov
in
incb
ret
inc
cmpsb
rclb
sbb
lret
dec
jecxz
ds
mov
shlb
dec
dec
dec
out
push
push
sub
aas
lds
testl
mov
popa
jmp
pop
out
inc
imul
mov
cmp
ds
roll
cltd
mov
or
dec
subl
pop
das
mov
push
mov
cmp
pop
fs
cmp
stc
aas
mov
arpl
mov
lret
addr16
xchg
lds
mov
mov
arpl
mov
pop
shl
je
inc
pusha
sbb
pusha
jmp
adc
lock
pop
add
add
cmp
mov
xchg
icebp
into
dec
cmp
push
jmp
jnp
jne
stc
fdiv
dec
xchg
je
mov
lds
popf
rcl
lods
xchg
outsb
popf
or
shll
sub
ret
cmc
push
mov
adc
jbe
or
jno
fistl
xor
out
andl
push
or
mov
mov
ror
mov
in
cmp
inc
sahf
out
mov
jecxz
call
add
mov
jne
fs
es
xor
out
inc
sbb
push
aas
lcall
xlat
xor
negb
adc
dec
shll
mov
bound
xchg
push
sbb
sti
loop
fisttpl
addr16
push
stos
jmp
xchg
inc
cld
add
sbb
outsl
push
aaa
shlb
ja
test
adc
nop
jnp
mov
aad
notl
cmp
mov
test
add
jecxz
lcall
insl
test
fisubrs
pop
xor
mov
mov
adc
lock
push
lcall
out
cwtl
pop
lret
cli
inc
push
cwtl
fwait
imul
push
rorb
cmc
repz
mov
add
stos
insb
andl
iret
lahf
mov
push
push
push
lahf
add
stos
cmp
add
inc
dec
and
arpl
xchg
out
mov
sub
addr16
mov
pop
in
xor
or
or
cmp
int3
fcoml
aad
cmp
das
std
call
pop
lcall
add
stc
gs
or
sub
aas
sbb
or
pop
xor
mov
movsl
das
les
cmp
xchg
mov
nop
mov
mov
into
mov
push
repz
aaa
mov
dec
push
aam
jp
mov
xchg
fsubrs
scas
xchg
js
xor
mov
dec
inc
aas
lret
into
popl
arpl
xor
or
shr
xchg
out
dec
sub
fs
xchg
adc
addb
jbe
jns
std
xchg
inc
loope
cli
fs
sarl
lds
jne
imul
aas
mov
mov
out
xlat
decb
lods
in
js
mov
sub
arpl
lahf
fs
push
ss
jo
notl
pop
mulb
adc
mov
jp
gs
insb
xor
ljmp
push
cmc
inc
call
or
xchg
es
or
jne
ja
sahf
test
ja
mov
daa
lcall
or
sub
and
bswap
mov
fcoms
test
add
xor
pop
repnz
adc
inc
or
dec
out
in
push
mov
arpl
in
xchg
xchg
cld
inc
xor
cwtl
sub
movsl
cmp
test
dec
out
test
xchg
xor
pop
inc
fimull
stc
cmp
adc
mov
std
xrelease
dec
iret
data16
jle
call
mov
xor
lods
in
and
test
xor
test
inc
mov
sbb
sub
xor
sbb
cmpl
cwtl
addb
movsl
test
mov
sti
push
mov
adc
xchg
jle
in
insb
push
dec
lcall
aad
add
dec
mov
sub
add
aas
ljmp
std
inc
sub
jae
pop
mov
int3
jecxz
sub
rcrl
cmp
int
mov
in
and
scas
push
pop
adc
loope
jle
ret
test
mov
inc
cmp
aas
fnstenv
push
mov
inc
sahf
repz
je
out
lods
ret
hlt
int
cmp
fs
xlat
scas
xor
jae
pop
in
cmp
daa
push
stc
je
int
insl
pop
xor
sbb
xor
jne
cmpsl
ds
cwtl
cmpsl
lds
mov
sahf
mov
mov
repz
roll
fucomi
xchg
ss
sub
cmpsl
pop
das
dec
in
cmp
pop
dec
gs
push
out
sti
xchg
sbb
insb
xorb
pop
jno
imul
mov
inc
pushf
pusha
and
xor
mov
fistpll
sub
ljmp
pusha
out
xor
or
jb
add
pop
xchg
pop
movsb
mov
stos
jb
and
jle
xor
outsb
jl
xor
mov
push
into
mov
ja
adc
out
rolb
arpl
pop
jmp
stos
imul
int
xchg
push
jb
mov
jns
lds
movsl
fnstsw
mov
mov
lret
mov
jmp
rcrl
mov
icebp
push
adcb
mov
mov
stos
adc
cmp
jecxz
cmpsb
add
in
sub
lea
cltd
xor
xchg
dec
mov
mov
sub
aas
dec
or
movsl
sbb
sub
sbb
adc
cs
jg
sbb
xor
pop
push
or
xlat
scas
cmp
or
testb
add
sbb
insl
stc
shl
cs
add
inc
shl
mov
call
aad
lcall
stos
cmc
mov
dec
imul
sbb
mov
sbb
jnp
sar
out
mov
mov
and
imul
fdiv
jno
popf
ret
pusha
lods
jo
out
push
hlt
or
push
and
mov
out
imul
and
popf
inc
adc
out
dec
mov
mov
scas
popa
rorl
in
aad
hlt
and
das
add
ja
repz
inc
and
std
push
test
ret
out
mov
aaa
rolb
rcl
pop
addr16
stc
push
push
add
lds
fcmovne
filds
es
inc
adc
mov
adc
push
sbb
sub
jo
sahf
mov
push
push
out
inc
int3
stc
nop
mov
mov
loop
sub
or
scas
push
mov
imul
test
add
mov
add
aas
mov
pop
aaa
iret
pushf
outsb
add
mov
mov
dec
popa
sbbl
sbb
out
cwtl
enter
mov
adc
ja
xchg
cmp
icebp
jno
jo
iret
pop
pop
enter
cmp
fbld
mov
rorl
ljmp
pop
scas
decb
adc
cs
xor
aaa
call
ss
push
mov
fisubs
or
mov
jl
arpl
loope
jne
das
test
inc
sbb
pop
std
cli
push
rorl
mul
shlb
add
int3
cmpsl
nop
jecxz
inc
js
test
inc
inc
mov
fnstenv
xchg
sbb
pop
sub
imul
shlb
pop
cmpsl
add
pop
fucomi
xor
in
pusha
fldenv
ljmp
cltd
sbb
js
jg
out
mov
out
test
push
je
xchg
shrb
aad
pop
push
pop
xlat
pop
xchg
push
pop
cwtl
mov
enter
dec
push
mov
hlt
mov
xchg
inc
fcmovb
cs
inc
mov
aaa
push
sub
xchg
in
pop
jnp
cmp
hlt
aas
and
pop
mov
negb
cmp
sbb
add
mov
mov
push
push
push
repnz
and
mov
sbb
popa
add
jbe
or
adc
jbe
push
pop
jmp
fwait
cli
test
enter
lret
cmp
mov
mov
cltd
stos
insb
loope
loopne
jne
jp
or
cld
cmp
pop
fwait
lods
sbb
js
arpl
push
xlat
push
aad
dec
out
roll
push
loope
pusha
out
rcrb
sbb
hlt
loop
and
jno
shlb
popa
mov
vmovaps
sti
fwait
mov
cwtl
out
add
mov
mov
gs
fldenv
mov
or
mov
lret
in
pop
mov
js
test
jno
out
push
pop
pop
fldt
mov
icebp
cmpsl
stc
and
pop
movsl
inc
test
jecxz
std
clc
push
xchg
jg
std
mov
mov
sahf
int3
stc
adc
adc
lcall
jne
sub
mov
push
fs
and
and
cmc
push
cltd
pop
jg
movsb
aas
xor
and
clc
jecxz
loope
xchg
out
push
inc
sbb
dec
popa
mov
adcb
sti
mov
sbbb
jns
dec
outsb
test
pop
decb
mov
std
movsl
ds
push
xchg
dec
inc
popa
jnp
jnp
addr16
stos
rolb
cli
mov
pusha
gs
rcrb
adc
pop
dec
fsubrs
in
scas
scas
adc
jne
xchg
dec
jge
jbe
popf
ss
cmpsl
cmpsl
lds
lret
rep
test
call
aam
xor
jae
out
ret
adc
lods
jge
sti
fwait
ljmp
pop
inc
jns
sub
fiaddl
bound
xchg
imul
adc
mov
and
hlt
jle
sub
inc
test
ja
popf
rep
push
adc
divb
outsl
pushf
insl
and
fisubrl
les
push
cli
in
mov
sbb
popa
leave
mov
cmpsl
mov
mov
fdivrl
imul
adc
in
pop
sbb
notb
jbe
push
xor
adc
cmp
add
repz
aaa
pcmpgtw
aad
xchg
icebp
mov
push
fiadds
jb
lret
mov
mov
mov
and
cs
mov
scas
xor
sbb
mov
lds
fsin
aam
scas
push
in
xchg
jno
call
addr16
outsl
mov
into
rcr
hlt
mov
xchg
test
jl
out
jg
xchg
pop
push
pop
orb
pop
push
xchg
xchg
mov
stc
shrl
inc
pop
popl
leave
and
cmpsl
call
mov
dec
sbbb
loop
daa
jo
pop
adc
and
pushf
jmp
mov
mov
das
and
sbb
stos
in
cs
subb
pop
dec
out
lods
adc
jno
mov
add
ret
hlt
ret
inc
add
jl
mov
fistps
push
push
pop
sti
jns
gs
lcall
ss
xchg
mov
enter
pop
insl
cmp
add
pop
pop
xchg
or
dec
mov
sub
ret
pop
inc
std
dec
mov
addr16
ljmp
in
push
or
push
in
push
mov
movsb
mov
bound
ficoml
shrl
cmpb
and
pop
dec
add
xchg
ljmp
mov
sbb
out
or
mov
insl
xor
push
add
stos
cmpsl
inc
sub
testb
test
rcrl
add
xor
or
negb
xlat
xrelease
sub
pcmpgtd
inc
lods
sbb
push
mov
add
jb
push
rorl
test
mov
inc
xchg
addr16
pushf
mov
sahf
stc
test
les
xchg
cmc
movsl
xchg
jo
fwait
add
inc
fmuls
dec
jp
stc
inc
aad
xchg
pop
sbb
cmpl
fnstenv
lret
test
mov
push
cwtl
popa
js
inc
pop
repnz
enter
mov
mov
hlt
lret
test
mov
xchg
jmp
pop
jg
rorb
repnz
push
sbbb
lea
sub
mov
jg
cmp
cltd
in
inc
dec
scas
sub
push
jmp
add
loope
push
cmp
mov
or
push
dec
loop
cld
loop
sub
outsb
xor
cmp
jecxz
inc
push
add
push
not
imul
jno
test
mov
rolb
addb
jno
lock
inc
add
pop
movsb
incl
jg
int
push
jmp
fxch
jmp
jbe
pop
dec
dec
mov
repnz
push
iret
sbb
stos
inc
ret
fisttpl
andb
inc
pop
cmp
stc
gs
imul
loopne
nop
movsl
decb
stos
adcl
fisttpll
sub
dec
aad
enter
add
add
xchg
xor
iret
cmpb
sbb
or
negl
loop
inc
clc
jle
movsl
xor
and
cmp
push
in
movsb
clc
adc
aam
sbb
int
add
inc
mov
sub
dec
sbb
jecxz
lahf
mov
mov
shrb
or
ss
pusha
movl
lods
dec
in
jo
subl
pop
cmpsl
pop
data16
nop
bound
mov
sub
and
push
cs
in
push
cmp
mov
into
or
dec
jne
aaa
test
js
frstor
or
or
push
mov
shlb
fstps
ljmp
cmpb
bound
jbe
cmp
mov
mov
ss
push
popf
jecxz
xchg
cmp
imul
mov
popa
daa
or
pop
loop
push
push
push
cmp
imul
pop
mov
lcall
ljmp
cmp
dec
jecxz
dec
shrl
ljmp
add
jl
jnp
sbb
dec
cmp
push
or
sub
mov
dec
add
dec
xchg
scas
pop
xor
push
fbstp
adc
mov
repz
test
jb
daa
jns
cmp
stc
in
pop
xor
or
pop
out
push
pushf
adc
mov
jecxz
add
imul
sahf
mov
push
cli
xor
sbb
lret
decb
int
in
or
mov
out
sbb
dec
vmwrite
push
inc
xchg
ja
notb
mov
xchg
ja
push
movsl
sbb
mov
addb
in
scas
cmc
adc
or
pop
lods
xchg
sub
and
mov
stos
mov
mov
cld
in
pop
into
fidivl
into
jno
fiadds
fsub
lods
cmp
adc
jge
pushf
or
jp
mov
aam
add
in
jbe
or
imul
mov
inc
or
test
pop
popf
leave
jp
jbe
fbstp
aas
cmp
jo
std
fwait
pop
pop
push
fbstp
mov
or
in
push
pop
aad
mov
and
in
xor
mov
stos
mov
andb
sahf
std
xor
call
mov
or
mov
xor
lock
lret
addr16
test
add
xchg
subl
jle
jp
dec
pop
dec
ss
inc
jo
in
int3
and
or
faddp
rolb
les
jecxz
call
dec
and
rorb
jecxz
jo
js
aam
lds
aas
push
pop
and
das
pop
xchg
idiv
sub
dec
add
and
lcall
sub
out
repnz
bound
inc
xchg
lods
out
and
mov
xor
lea
cltd
lea
jmp
imul
iret
sub
xor
dec
pusha
inc
fcomi
adc
push
sbb
mov
pushf
call
testl
popf
lds
repnz
test
loope
icebp
aaa
jp
inc
arpl
test
push
ficoml
inc
pop
sahf
xor
repz
jns
cmp
mov
pop
lret
arpl
mov
jnp
and
lods
out
adc
xchg
ja
lods
cmp
fsubr
xchg
pusha
std
cltd
int
cmc
cmovge
push
dec
rcl
rolb
addr16
mov
inc
icebp
fs
dec
mov
push
add
mov
addb
rcrl
pop
jmp
xchg
pop
push
call
mov
call
and
test
dec
jmp
pop
mov
jnp
je
inc
mov
or
inc
in
dec
sub
pushf
mulb
stc
xchg
pop
insb
xchg
sub
mov
dec
rclb
daa
fsub
aam
jmp
ljmp
sub
jp
mov
push
lahf
decl
inc
int3
cmp
jp
jmp
rol
dec
jge
nop
out
les
xor
push
mov
test
add
xchg
fidivl
and
mov
jns
and
call
mov
jns
leave
ds
mov
scas
jge
das
xor
mov
pop
and
arpl
sub
jo
stc
ljmp
jo
cld
push
sbbl
cmp
mov
mov
and
add
sbb
out
loope
jnp
icebp
mov
mov
popa
lock
mov
jbe
inc
repz
dec
es
mov
shll
push
gs
scas
jns
inc
cwtl
aad
leave
in
cli
sti
pop
dec
mov
mov
mov
dec
fwait
mov
adc
xor
add
pushf
je
lock
mov
xchg
je
mov
icebp
fwait
jmp
push
push
push
dec
stos
cmp
pop
xor
jle
cmp
mov
dec
outsl
daa
jecxz
pop
int
sub
jo
lods
clc
mov
frstor
rolb
jne
pop
adc
sbb
jbe
or
insl
xchg
jns
push
or
sbb
mov
sbb
mov
add
adc
fwait
fwait
push
jo
loopne
mov
sbb
pusha
scas
push
in
filds
inc
xor
inc
ljmp
jmp
outsb
movsb
mov
sbb
lock
cmpb
push
movsb
bnd
pushl
adcl
cmp
mov
or
cmp
or
loope
ja
ficoms
cld
or
adc
nop
xlat
jmp
in
sahf
lods
dec
loope
test
nop
inc
dec
mov
int3
fidivrs
mov
mov
cs
adc
sub
insb
mov
sbb
inc
insb
fldt
dec
mov
mov
iret
push
jp
jle
push
cmp
xor
in
into
xor
inc
sbbb
fdivrp
sub
mov
js
sub
addr16
cmpsb
mov
icebp
mov
and
in
sbb
mov
inc
scas
call
ljmp
mov
dec
cmp
rclb
xor
test
ret
out
xor
jb
pop
movsb
or
dec
repnz
xchg
mov
inc
out
popa
cli
lock
mov
jl
and
cmp
hlt
xorb
xchg
call
add
andl
aad
divl
scas
ljmp
mov
inc
scas
inc
test
sbb
js
jp
and
notb
scas
add
mov
push
pop
sub
add
dec
test
mov
mov
push
mov
ljmp
jmp
mov
imul
aad
jg
clc
sub
std
dec
sarl
and
outsb
adcb
push
popa
jns
pop
scas
inc
sbb
mov
adc
movsl
dec
xchg
stos
adc
jge
adc
xchg
lock
jmp
push
add
add
daa
ljmp
inc
and
mov
test
jp
ret
xchg
insb
insb
jo
push
cmpsb
cmp
fisubs
insl
sub
out
mov
add
push
or
and
mov
xchg
iret
insl
and
mov
xor
xchg
or
cmc
mov
fdivp
dec
icebp
cmp
jo
cld
fmull
int
xor
fcompl
adc
aaa
push
push
movhps
je
or
aaa
rclb
decl
cmp
fwait
and
mov
xlat
jecxz
jb
mov
and
xor
sbb
mov
cmp
and
push
adc
mov
jne
movsl
sbb
sbb
xchg
outsb
mov
push
je
icebp
mov
cwtl
shl
popa
adcl
movl
fs
add
push
inc
test
fisubrs
outsl
stos
cmp
jae
mov
jmp
fidivs
shlb
sarb
jge
sbb
mov
lock
lds
mov
mov
and
out
xor
cs
xchg
push
ss
ret
insb
dec
popf
push
sub
mov
jae
inc
fnsave
sub
das
sti
cmp
pop
inc
lods
leave
jp
push
pop
inc
lods
jmp
sub
test
sub
mov
pop
repz
jecxz
subb
aaa
push
dec
and
push
out
mov
lea
mov
je
xchg
sbb
outsl
mov
sbb
push
js
add
mov
sbb
incl
ljmp
adc
dec
loop
jmp
imul
adc
adc
add
popa
stos
and
adc
aas
push
jmp
cmp
nop
cmpsl
ret
clc
cli
fdivl
enter
loopne
ffreep
sti
inc
lea
cs
inc
daa
mov
pop
lock
in
test
gs
adc
mov
sbb
add
jge
xchg
jl
cli
sti
es
movsb
pop
js
mov
jp
ljmp
jb
adc
mov
push
icebp
push
pop
mov
jle
jns
cmpl
add
mov
cltd
loop
into
cmc
mov
jns
scas
xor
adc
mov
fdivs
mov
mov
ss
jno
jbe
insl
sbb
cwtl
add
xchg
mov
int
hlt
es
xchg
mov
mov
stc
popf
dec
add
push
mov
stos
xchg
fs
push
iret
dec
push
inc
popa
fsub
xor
inc
mov
xlat
jmp
pop
sub
xorl
dec
sarl
push
pop
dec
shll
testb
iret
inc
sbb
test
iret
xor
add
pop
cmpsl
scas
ret
orb
jae
stos
mov
mov
ljmp
ss
push
push
movsb
or
shrl
enter
insb
dec
push
cli
out
rcrl
in
in
jbe
stos
jns
inc
insb
outsb
ss
outsl
xorb
jp
push
call
pop
cmp
sub
test
lock
imul
pop
push
repnz
les
test
daa
jnp
ret
ds
pop
insb
ja
sbb
ds
imul
shl
sub
hlt
data16
in
or
fisubs
sahf
cwtl
sbb
scas
cs
out
out
mov
cs
mov
sbb
in
notl
push
push
enter
mov
pop
mov
add
pop
pop
lods
dec
sti
pop
add
cs
popa
fisttps
dec
movsb
mov
cmc
cmp
xchg
cmp
das
dec
call
in
movsl
pop
add
lock
pusha
adc
jge
xchg
mov
adc
mov
call
push
or
cmp
and
aas
push
negl
lock
je
sub
push
pop
popf
adc
xlat
sbb
mov
mov
outsb
jl
stos
push
xor
rcrl
inc
iret
xor
push
in
lods
icebp
lahf
xor
add
cld
jnp
pushf
mov
and
jecxz
xor
mov
aas
adc
enter
fwait
ss
shrb
pop
jns
in
test
mov
jle
or
int
aaa
stos
cld
ror
push
xchg
pushl
mov
out
in
aaa
adc
xor
cmpsb
mov
mov
lret
into
and
and
adc
aaa
gs
cli
cmp
lods
adc
and
push
mov
or
dec
loope
push
inc
fsubl
or
cmp
shll
loope
jg
mov
push
in
mov
inc
sti
pop
icebp
les
sbbl
jecxz
jp
mov
adc
lock
repnz
adc
insl
clc
idivl
bound
pop
cwtl
addl
jle
cmp
loope
iret
mov
xor
sub
jl
pop
scas
pop
mov
dec
stos
lret
cmpl
mov
iret
loope
mov
test
loopne
stos
push
xor
lea
adc
mov
imul
notb
cmpsl
in
jae
movsl
jl
xchg
loop
fsubs
es
stc
testb
in
pop
int
aam
movsb
outsl
lret
add
lods
jbe
adc
out
push
inc
sahf
ret
jno
or
stc
dec
cltd
mov
mov
mov
add
lock
addl
sbb
push
pop
pop
imul
loop
shlb
push
xchg
scas
int
out
push
push
jbe
test
scas
xchg
ret
repnz
out
loopne
jbe
cmpsl
cmpsl
movsl
pushl
add
rcll
test
into
addr16
add
adc
mov
mov
decb
pop
adc
dec
or
ja
xor
add
addb
add
scas
inc
jecxz
mov
repz
dec
mov
fcmovbe
outsb
test
mov
add
insb
add
and
jbe
adc
mov
jno
and
daa
adc
insb
pop
fcoms
adc
sti
mov
cmc
enter
mov
push
fdivrs
gs
push
in
adcl
pushf
sbb
or
cmova
xchg
mov
stos
lods
cld
out
push
loope
subl
push
xor
jp
jl
icebp
pusha
ret
outsb
lret
push
or
imulb
inc
in
mov
ret
xor
je
sbb
enter
xchg
fincstp
sbb
testl
mov
xchg
add
or
cmp
push
testl
mov
mov
add
push
adc
push
pop
push
inc
insl
iret
inc
jne
cmp
and
mov
imul
dec
nop
push
call
int
test
sub
inc
repnz
and
adc
icebp
adc
jge
cs
jg
nop
test
lods
or
je
xchg
lods
inc
or
cmpsl
es
popf
dec
cs
pop
pop
inc
push
lahf
movsl
fwait
xchg
sub
push
incb
dec
mov
clc
mov
jl
sub
xchg
cli
and
fldl
cmp
fsubrs
mov
and
push
shl
arpl
jno
das
mov
mov
aas
adc
mov
push
mov
fisttpl
loope
dec
shlb
test
or
jg
loopne
xchg
xchg
jg
push
fstl
pop
push
mov
xchg
int3
cmp
xor
addr16
loope
xchg
mov
or
push
scas
inc
jmp
icebp
lcall
and
mov
test
mov
shlb
jb
cmp
outsb
inc
sahf
jl
pop
mov
or
sub
scas
lock
and
stos
repz
fisttpl
jb
and
pop
fxch
lret
push
push
call
lret
jge
push
adcl
jl
es
call
fnstcw
loop
add
lods
mov
jne
rorb
stos
pop
rclb
test
adc
push
cmpsl
and
mov
test
push
decl
adc
not
adc
xchg
dec
js
xor
adc
and
add
inc
daa
leave
jmp
push
pop
xor
dec
leave
test
push
sbb
and
bound
into
in
hlt
lcall
inc
clc
cwtl
jl
and
sarb
add
inc
pop
mov
adc
pop
ja
pop
jne
cltd
loopne
dec
dec
or
xorl
cmp
cmp
push
stos
sbb
inc
sbb
in
test
inc
xchg
fnsave
outsb
push
sub
movsl
div
push
lret
pop
jne
jae
in
test
mov
dec
scas
repnz
or
and
add
lock
xor
mov
in
lock
xchg
repz
pop
xor
sbbb
popa
hlt
aas
dec
subl
les
movsl
mov
addr16
lds
adc
inc
clc
addr16
bound
sahf
dec
in
jge
lock
cmp
jg
outsb
cmp
jecxz
fstl
cs
pop
push
sbb
mov
scas
adc
subb
xchg
sub
pop
add
and
out
inc
fildl
divb
int
push
mov
jbe
ss
mov
jno
ljmp
cmp
dec
add
bound
test
repz
fists
in
cmp
aad
mul
js
cmp
ret
or
mov
pop
inc
inc
stc
shl
lahf
pop
sub
cmp
xchg
shrl
mov
dec
lods
cs
xchg
dec
jecxz
mov
jle
lds
testb
mov
xor
cmc
mov
and
sub
mov
adc
lods
lds
mov
daa
jle
inc
and
xor
cltd
push
push
popl
sbb
cmp
fs
lcall
pop
addr16
add
inc
xlat
push
cld
jecxz
lret
inc
lret
jp
inc
insb
add
imul
mov
iret
add
dec
aaa
repz
sbb
mov
fcompl
adc
xchg
out
andb
out
inc
sbb
pop
or
xchg
add
inc
clc
insb
xchg
adc
arpl
mov
fwait
std
or
out
lcall
jle
in
ret
adc
mov
insb
out
jge
mov
sbb
dec
push
movsl
mov
pop
add
pusha
shll
test
push
mov
pop
adc
mov
popf
mov
or
jge
and
fwait
push
sbb
shrb
test
ljmp
das
imul
or
xchg
jnp
xor
insl
jl
sub
adc
cmp
insb
push
das
jle
mov
push
pop
out
fstpt
mov
pop
std
cwtl
inc
icebp
fnsave
mov
fstpt
data16
lds
fwait
imul
test
leave
mov
inc
cwtl
jge
negb
dec
mov
je
push
rcl
movsl
jle
enter
cwtl
sub
pop
out
pop
jb
lds
insb
cli
pusha
insb
or
cmp
insl
cld
xchg
fcomps
xchg
mov
movsl
test
mov
pop
xor
out
inc
test
ret
pop
call
test
pop
cmc
sbb
in
lahf
ret
sub
xor
cmp
out
shll
test
in
sarl
cmpsl
adc
jmp
push
mov
mov
xor
adc
push
fsubr
data16
fstl
aam
aas
in
pushf
jo
in
ljmp
in
aaa
dec
stos
mov
jl
add
lock
mov
xor
sbb
sti
cmp
push
sbb
fs
in
push
and
push
cmpsb
fdivrs
repnz
sub
mov
cmp
push
jno
int3
dec
in
loope
pop
mov
sbb
dec
das
or
rcll
mov
gs
outsl
loop
inc
mov
stos
sbb
or
or
pop
cmc
xchg
jbe,pt
call
cmp
test
inc
stos
pop
jbe
andl
leave
cli
test
push
mov
pop
push
jo
pop
pusha
ljmp
pusha
test
xchg
repnz
insl
add
push
sbb
out
ja
lret
and
xchg
sub
lahf
aaa
jp
mov
push
adcl
hlt
es
das
sub
and
mov
lds
fnsave
pop
adc
sahf
fadds
pop
cwtl
aas
xchg
dec
or
adc
jmp
mov
dec
adc
test
pop
sub
sub
mov
test
xchg
es
dec
mov
jl
and
dec
rorb
lock
or
adc
sub
pop
insb
cmp
fimuls
enter
mov
cmp
add
dec
sbb
aas
push
imul
hlt
xor
push
inc
cmc
call
cmp
add
aam
fisttpll
mov
fs
adc
sti
outsl
mov
mov
cmp
lods
pop
and
movsl
jp
sub
jno
xor
sbb
mov
daa
loopne
mov
or
leave
decl
inc
pop
cmpsl
add
xchg
add
inc
or
ja
jecxz
cmp
fstp
xchg
nop
data16
scas
xchg
aaa
in
lock
mov
clc
into
push
add
rolb
iret
mov
les
jle
inc
mov
pop
push
test
popa
jbe
mov
rcrl
fcoms
sub
insb
or
add
ds
cs
in
push
jbe
mov
inc
lock
add
xor
js
push
cmp
pop
jbe
mov
aas
mov
cli
imul
pop
pop
popf
add
cmpsl
lds
cmp
dec
fadd
jle
mov
leave
xor
xchg
andl
inc
arpl
ljmp
jb
xchg
lea
daa
add
mov
fs
push
in
imul
xchg
mov
sarb
sub
aas
dec
ljmp
psllw
inc
adc
scas
jge
cmpl
subl
ud1
in
push
cmc
jecxz
add
inc
jle
cmpsb
mov
adc
pop
jae
adc
imul
pop
das
jg
fidivrs
adc
mov
dec
repnz
or
test
jmp
mov
std
or
repz
faddl
mov
fwait
sub
jmp
sub
mov
fisubrs
mov
rcrb
mov
xor
push
mov
faddl
mov
sbb
adc
fld
insl
in
mov
rcl
mov
rcrb
pop
mov
popl
leave
mov
daa
inc
or
cmp
add
pop
add
popl
and
pusha
into
call
sub
andb
mov
test
cmp
sub
push
sub
aad
popf
push
out
xchg
iret
outsl
loop
popa
sti
adc
sub
sbbl
dec
aas
call
mov
loope
pop
cmp
xchg
inc
fadd
rorl
push
fdivp
add
nop
outsl
fs
xchg
cmc
jo
xor
cmpsl
das
xchg
sbbb
cmp
and
cmc
mov
fistpl
loope
das
mov
dec
push
fdivp
jecxz
lcall
gs
or
dec
loope
jae,pn
mov
nop
shlb
out
repz
cmp
jecxz
push
in
cmc
mov
out
mov
cmp
out
mov
stos
add
pop
adc
mov
sbb
addr16
arpl
inc
sbb
stos
out
addl
jns
xor
sbbb
mov
scas
cs
mov
xchg
stc
adc
subb
mov
jmp
ficomps
lods
jg
jb
shll
xor
lods
sub
mov
sbb
cmp
mov
pop
mov
sarb
mov
aam
push
mov
repnz
loope
push
or
mov
psllw
arpl
pop
jbe
mov
mov
rcrl
mov
hlt
dec
mov
clc
sub
sbb
lods
popf
cmpsl
ljmp
and
sub
inc
daa
bound
incb
and
push
add
xorl
pop
fsubrl
add
and
add
outsl
clc
sbb
insl
xchg
dec
push
les
sbb
mov
xor
xchg
mov
in
hlt
mov
push
jmp
mov
mov
mov
pop
cmpsl
jp
cwtl
int3
pop
inc
jl
and
cmp
pop
scas
xchg
jnp
pushf
mov
or
pop
loopne
add
mov
cmp
mov
xor
jecxz
pop
outsb
jg
es
sbb
adc
ret
adc
test
or
dec
fs
addr16
addr16
xrelease
push
cmpsl
push
lds
adc
pushf
ss
xor
and
mov
push
scas
add
mov
jle
xchg
mov
sbb
out
sbb
dec
pop
inc
test
cmp
push
cmp
sbb
dec
movsl
aam
jno
xor
or
dec
in
sarl
and
int
lret
and
pop
inc
lcall
js
fistpll
sarb
sbb
pop
mov
mov
cs
fwait
insl
pushf
scas
jno
or
cmpsl
aas
xchg
dec
inc
mov
hlt
mov
xchg
and
inc
mov
mov
in
sbb
fwait
mov
adc
fninit
insl
icebp
cmc
mov
push
loope
loop
pop
add
insl
sbb
add
mov
pushf
sub
pop
jl
into
das
sub
out
decb
sub
dec
push
cltd
imul
pop
ficompl
sub
mov
cmp
in
test
or
jg
push
or
or
jmp
mov
push
mov
push
insb
jne
je
pushf
fldenv
fsubl
movsl
mov
mov
leave
mov
jg,pn
and
popf
and
or
jne
out
outsl
aaa
mov
mov
add
push
clc
push
rorl
cld
inc
idivl
movsb
add
jecxz
push
inc
outsl
js
jbe
cmp
fwait
and
inc
jg
je
jns
out
nop
out
test
lea
dec
out
scas
mov
pop
inc
insb
mov
xor
ss
in
sbb
jle
and
popf
dec
or
pop
adc
mov
out
sbb
pinsrw
add
mov
inc
pop
pop
sahf
dec
insl
mov
or
daa
mov
xor
inc
push
movsl
cmp
mov
ljmp
idivb
aas
adc
sarl
xchg
mov
or
xchg
into
mov
lods
push
adc
lret
mov
repnz
push
jae
push
cmp
mov
fiaddl
mov
mov
into
es
iret
xchg
mov
and
sbb
outsb
arpl
adc
es
pop
les
sbb
in
imul
sub
jo
mov
pop
sbbb
jae
and
mov
fwait
sti
fwait
xchg
mov
mov
add
test
lods
dec
pusha
ret
sub
or
push
push
lods
lods
sub
jp
xchg
mull
mov
push
fsubrs
or
xor
sti
xchg
xor
and
fldl2t
cmp
fisttps
imulb
scas
sub
pop
hlt
jnp
out
xchg
rclb
imul
xchg
lahf
outsl
ret
inc
mov
ja
out
dec
cmp
fnstenv
mov
sub
adcb
xor
xor
cmpsl
ljmp
jg
or
xchg
loope
mov
lea
cmpsl
jle
sub
dec
cmpsb
adc
pushf
dec
cmp
pop
rolb
cmp
dec
imul
aas
bound
pop
mov
or
pop
dec
mov
jecxz
repz
and
xchg
rcll
jmp
sahf
sbb
jg
mov
iret
jne
or
mov
dec
mov
adc
xchg
push
int3
stc
out
push
sub
ss
in
sbb
dec
sub
inc
add
jno
pop
pop
jne
mov
xchg
adc
sub
mov
pusha
addb
notl
pop
in
out
lds
xor
sarb
inc
and
pop
sbb
xchg
int
scas
iret
add
fs
pop
out
xchg
gs
sbb
insb
adc
xchg
push
lret
sbb
or
xor
pop
pusha
notl
std
mov
pop
jg
mov
test
lret
xchg
ret
and
popf
or
orl
sbb
or
xchg
lds
test
lock
xchg
xor
sbb
pop
ja
mov
and
jecxz
jl
mov
sub
aas
lcall
in
dec
mov
dec
mov
scas
in
ljmp
fwait
cmp
adcb
bound
xchg
and
pop
pop
call
cmp
movb
dec
loop
pop
enter
cmp
jb
cmc
sub
imul
mov
daa
push
int3
loopne
inc
ljmp
sbb
dec
stos
jmp
pop
mov
lods
inc
std
aam
dec
shll
or
xchg
add
cs
loope
push
dec
stos
jb
pop
icebp
jne
ljmp
cmp
imul
pop
test
xor
xchg
or
push
jmp
orl
aas
jb
pushf
push
cmp
fsubr
push
mov
fnstenv
pusha
fiaddl
nop
pop
stos
es
inc
jno
xor
add
scas
repnz
add
jo
fistps
dec
ja
stc
mov
push
pop
mov
mov
add
mov
in
clc
cmp
mov
push
ds
mov
shll
rcll
xlat
insl
mov
adc
add
ret
ss
jne
repz
add
sub
mov
fwait
aaa
mov
cmc
push
xchg
repnz
add
out
mov
jl
xor
mov
push
pop
xor
pop
xor
fcoml
fidivl
push
ja
les
mov
inc
js
imul
or
adc
je
ljmp
mov
filds
leave
bound
js
inc
stos
adc
sub
sbb
xchg
jns
dec
out
xlat
cmp
push
pushf
sbb
leave
cmp
lahf
ss
add
adc
inc
rcll
dec
bound
inc
bound
inc
sub
cmpl
dec
mov
cmpsb
mov
lds
nop
int
dec
mov
jp
insl
inc
push
out
add
xor
shl
mov
stos
sub
push
repnz
adc
enter
lods
lock
cmc
pop
adc
dec
lcall
pop
xlat
xor
in
lahf
mov
orb
jo
rolw
lahf
mov
xlat
es
outsb
dec
mov
pop
rol
push
sbb
insl
jp
insb
xor
mov
je
loopne
test
addr16
leave
dec
fadds
insl
inc
inc
test
add
dec
and
mov
mov
or
pop
pop
out
cmp
hlt
push
xor
aas
dec
xchg
cld
bound
stos
mov
mov
ret
out
jmp
fmuls
lcall
enter
sbb
jmp
clc
inc
call
add
out
lret
xchg
sub
aas
pop
js
pop
sar
mov
adc
in
xchg
pop
adc
cmp
push
push
lds
gs
push
cltd
daa
pop
je
pop
push
movsb
pop
jge
push
lods
mov
push
add
test
mov
jg
fstps
mov
and
mov
jg
jmp
cwtl
inc
sbb
loopne
inc
pop
es
arpl
pushf
or
adcl
mov
arpl
pusha
sbb
ret
test
inc
xlat
cmp
xorl
mov
jmp
cwtl
inc
outsl
mov
ljmp
sbb
out
ret
fwait
ss
sbb
xor
mov
lcall
or
or
sub
mov
mov
jge
out
add
add
sti
dec
adc
mov
xchg
mov
fcoml
push
mov
push
xor
outsl
sti
inc
fstl
insl
insb
scas
sahf
xor
adcb
mov
jp
cs
mov
out
mov
xor
es
lcall
stos
std
mov
cmpsb
cmp
pop
hlt
insl
jae
cmpsl
das
jnp
pop
lcall
inc
sub
aam
mov
add
lret
negb
or
sub
aam
nop
in
mov
sbb
mov
fisubrl
std
jecxz
shll
cmp
jbe
jl
mov
add
aaa
cmpsl
in
subl
shl
sbb
sub
ja
ret
or
mov
mov
mov
pop
xor
push
outsb
jl
sub
push
pop
mov
pop
dec
mov
not
outsl
mov
cmp
test
lret
ret
push
sbb
xchg
das
add
add
inc
sub
pop
jb
inc
incb
lahf
popa
mov
bound
mov
cmp
ficompl
scas
xor
pusha
test
push
lods
jne
out
sarl
add
call
pop
std
lcall
in
out
shrl
jecxz
and
outsb
cmp
mov
repnz
shlb
add
aam
int
lcall
rclb
test
addps
fsts
sub
jp
jno
popf
jns
stos
jb
inc
test
std
mov
out
inc
fdivr
cmpsl
cmc
or
jl
sub
orb
cmp
into
jo
push
cmp
testl
or
jbe
mov
cmpsl
mov
leave
mulb
mov
cmp
push
inc
adc
and
es
imul
lods
add
jl
movsb
stos
jecxz
push
xchg
pop
xchg
cltd
xor
cmc
adc
push
jmp
mov
les
iret
stc
in
lret
in
imul
pop
xor
addr16
out
adcl
cmp
cld
xchg
or
sub
test
mov
rorb
daa
mov
sbbl
xlat
cmc
adc
out
fnstcw
or
lahf
rcl
int3
xor
xchg
or
imul
jg
add
and
lods
sti
cmp
mov
sbb
int3
inc
outsb
jp
pop
fs
aad
pop
sub
int
pop
mov
in
adc
mov
flds
adc
xchg
push
cli
jle
or
gs
sub
jecxz
scas
imulb
cmpsl
mov
or
pop
add
mov
lahf
jecxz
inc
fnstcw
or
mov
icebp
mov
sub
insl
cli
add
pop
mov
into
mov
pop
dec
pop
jno
cmpsl
pop
jl
lea
pop
in
sbb
mov
bound
xor
aas
jns
data16
cltd
stos
dec
out
lock
xchg
jle
xchg
jns
mov
test
into
sbb
jb
in
inc
sbb
inc
ja
popa
cltd
xor
or
loope
fs
stos
push
push
sub
fdivl
popf
xor
cwtl
cmp
jg
pop
cmp
inc
mov
pop
pusha
lret
adc
jbe
ret
mov
xlat
mov
fisubrl
cmp
jg
pop
mov
test
sub
sbb
repz
popf
ja
mov
sub
lea
cltd
mov
mov
shr
pop
jecxz
push
and
jns
mov
int3
inc
lds
iret
lds
cwtl
jecxz
cwtl
adc
lods
ret
jl
insl
fidivrl
fmul
out
sti
mov
pop
cmp
xchg
loope
and
push
cmpsb
les
sub
jbe
or
adc
insl
push
out
fimuls
aam
outsl
in
popa
cld
xlat
add
inc
insl
jnp
dec
mov
aad
icebp
rol
sbb
push
or
and
stc
xchg
inc
sbb
and
outsl
enter
jle
ret
sbb
add
inc
pusha
aad
push
and
jg
adc
inc
negb
add
and
test
inc
psllq
in
xchg
dec
sbb
icebp
pop
out
cmpsl
inc
cmpsb
jbe
pop
jb
cmpsb
xchg
dec
ss
pop
loope
sub
pusha
clc
adc
pop
movsl
adc
mov
jl
test
add
xchg
mov
xor
add
pop
xorl
out
loope
jo
cld
push
mov
and
fstl
scas
int3
jo
jp
scas
rclb
sub
mov
mov
cltd
pop
fisttpl
mov
cmp
sbb
fwait
rorb
cmpsl
adc
mov
mov
sarl
mov
adc
inc
loopne
cmpsb
mov
shl
aam
jmp
ret
cwtl
pop
jns
or
xor
sub
test
popa
idivl
hlt
mov
jle
popa
shlb
mov
test
mov
clc
test
insl
and
pop
out
sbb
iret
mov
into
jmp
mov
jo
xlat
ret
push
outsl
arpl
jbe
movb
in
or
jbe
movb
mov
inc
pop
mov
scas
mov
mov
shlb
repz
inc
popa
inc
pop
xchg
dec
aad
dec
mov
mov
xlat
cmp
idiv
sub
cmp
cltd
xor
testl
int3
or
push
mov
mov
sti
sahf
push
icebp
enter
cltd
clc
sub
rolb
notb
rolb
mov
xchg
ret
dec
push
in
adc
xor
mov
pop
xor
mov
cmp
jp
adc
push
mov
xchg
xchg
push
xor
sahf
xor
dec
int
test
push
dec
pushf
adc
or
out
and
int
lods
cmc
cmc
das
inc
int
sub
jmp
push
stos
inc
idivl
imul
lds
adc
notb
inc
pushf
fwait
push
cli
out
mov
push
xchg
add
and
jo
dec
fldl
push
or
sbb
add
pop
cmp
sub
xor
in
inc
test
pushf
vmwrite
or
mov
jge
xchg
pop
aad
std
jl
lret
pop
adc
cmpb
push
and
xor
negl
or
out
add
mov
adc
dec
in
mov
push
mov
icebp
mov
into
dec
dec
arpl
jnp
sbb
xchg
nop
jmp
pop
mov
add
cmp
push
pop
repz
lock
loope
pop
mov
lcall
cmp
loopne
test
sti
xchg
in
pusha
pushf
sub
add
push
cmpsb
lock
mov
dec
popl
and
cltd
pop
shll
pop
mov
dec
aaa
in
push
test
add
es
dec
xchg
pop
pusha
mov
dec
movsb
aas
cli
pusha
lea
cmp
pop
fbstp
mov
ja
cmp
call
adc
data16
jo
cmpsb
imul
adc
ret
outsl
pop
fiaddl
push
and
into
adc
xor
xor
xlat
rcr
sbb
push
push
push
out
jg
ss
ds
enter
rcll
std
mov
dec
cmp
lea
xor
addr16
sbb
call
mov
ret
imul
repnz
mov
jge
ds
add
out
movb
dec
popa
aaa
fisubs
push
jge
testl
rcr
jne
sahf
mov
call
jmp
ficoms
fsubs
jmp
mov
jbe
stos
dec
pop
and
fldenv
push
and
pop
out
cmp
sub
repz
push
and
jno
add
andl
sub
mov
les
xchg
fmuls
adc
cmp
pop
insl
mov
mov
push
aaa
pop
xor
inc
enter
xchg
je
mov
roll
add
and
addr16
xchg
decl
sbb
sahf
sbb
jnp
movsl
cmp
cwtl
iret
outsb
jl
in
dec
mov
lret
mov
arpl
jne
mov
jge
test
xchg
sub
orl
xor
inc
ljmp
cmp
insl
pushl
sahf
xor
push
scas
in
test
loopne
push
push
sub
aas
pop
rep
sbb
out
int
dec
aaa
out
xor
inc
pop
inc
in
outsl
jg
mov
cmc
fnstcw
in
xchg
repnz
mov
int3
xor
std
inc
jae
inc
push
xchg
cs
push
in
mov
dec
pusha
mov
xor
mov
fsubrs
xor
arpl
sbb
jnp
jno
loopne
cmp
rcrb
push
jnp
adc
xor
fildll
ljmp
mov
dec
bound
jae
mov
movsb
inc
mov
mov
jp
or
dec
jg
xchg
sub
test
ljmp
das
push
mov
pop
adc
movsl
gs
xor
pop
into
mov
movsl
pop
stos
cmp
outsb
shrl
push
xor
dec
dec
movsl
adc
mov
mov
sahf
push
sbb
arpl
jo
aam
roll
or
xchg
sbb
test
nop
adc
pushf
rol
mov
shlb
push
ss
imul
rcll
dec
push
inc
in
push
fildl
lahf
adc
es
lock
je
addr16
mov
inc
dec
sub
mov
aam
subl
or
dec
mov
jo
or
jbe
jmp
sub
mov
cmovp
jl
push
ss
clc
je
rcrb
xchg
push
add
dec
dec
subl
lcall
mov
or
adc
mov
inc
jg
inc
xchg
in
inc
xor
inc
xchg
sub
movsl
inc
add
sbb
jle
je
sbb
out
gs
pop
add
pop
xchg
add
mov
push
push
aas
cmpsb
mov
dec
aad
xor
xor
xchg
mov
fisttpll
hlt
fnsave
mov
xchg
mov
mov
arpl
jmp
mov
sbb
mov
sbb
push
sbb
mov
adc
leave
xor
push
xchg
add
push
xlat
xchg
pop
and
mov
cmpsl
lea
push
pusha
xlat
pop
nop
sub
sub
jbe
jmp
lods
or
lds
push
pusha
lock
loop
add
fsub
movsb
mov
stos
in
mov
cwtl
in
test
mov
fwait
outsb
rep
inc
cmp
adc
add
mov
cmpl
pop
aad
jae
imul
mov
mov
fists
test
xor
pop
jno
out
mov
enter
and
cwtl
arpl
out
xor
out
into
pop
ret
jmp
or
sti
clc
ss
lcall
mov
cmc
fs
fimull
fs
ds
lahf
test
sbb
cltd
mov
dec
clc
pop
into
movsb
test
push
inc
test
mov
xchg
xchg
popf
mov
nop
inc
leave
mov
lods
je
sub
mov
xchg
mov
pop
or
add
les
adc
cwtl
xor
sbb
lock
roll
mov
ds
adc
cmp
shr
add
xchg
cmpsl
sti
xchg
mov
adc
or
cwtl
dec
icebp
adc
dec
jle
cltd
ret
lret
xchg
inc
xor
loope
enter
mov
ret
int3
insl
push
je
mov
enter
jno
aam
out
movsb
jno
mov
insl
mov
sbb
stos
pop
sbb
or
mov
inc
pop
sbb
shll
mov
and
pop
lock
ljmp
or
xchg
and
xor
and
xchg
sarb
sahf
adc
adc
adc
je
out
insb
idiv
adc
cmp
push
cld
cmc
movsl
scas
std
cmp
daa
cmp
sub
mov
jb
or
movsl
dec
cltd
mov
shrb
cmc
loope
sub
push
ss
insb
mov
mov
in
or
andl
cmpsl
push
pop
add
inc
lods
mov
cwtl
sub
xor
pop
sub
jbe
mov
cli
dec
aad
mov
andb
ja
xorb
pop
out
adc
sub
lods
and
xor
test
cmpsl
js
fnstsw
jo
icebp
div
push
push
cli
inc
fs
mov
mov
push
repnz
bound
xchg
mov
addr16
shlb
into
icebp
add
inc
and
cmp
mov
repz
pop
je
pop
jns
rcl
out
sbb
ret
aaa
xor
stos
fisubl
out
cld
mov
pop
jne
cwtl
pop
nop
jb
dec
movsb
xchg
testw
mov
add
jge
lods
mov
fstl
pop
sahf
inc
push
fcomps
and
or
hlt
or
inc
and
fisubl
jb
push
dec
stos
or
cli
inc
cmp
out
clc
out
dec
out
mulb
push
cmp
inc
stos
es
mov
negb
inc
out
cld
shll
loop
xchg
pop
fs
loop
xor
pop
adc
jge
orl
sub
inc
jecxz
or
push
aas
js
cmpsb
popf
xchg
pusha
ss
sti
out
ret
mov
xor
mov
push
stos
pop
stos
mov
push
ret
fdivl
jb
adc
iret
mov
leave
aad
mov
push
push
shrl
gs
dec
and
push
jecxz
notl
adc
popf
orb
pushf
clc
lock
inc
iret
sbb
jae
scas
jle
mov
or
insl
dec
push
sub
push
fimuls
pop
movhlps
push
push
fstps
mov
test
push
stc
and
ret
adc
repnz
sub
loop
ss
sbb
add
inc
mov
lds
scas
out
sub
in
jmp
jne
adc
or
mov
and
push
repz
sahf
jns
cltd
aad
ret
sub
sub
pop
das
push
jae
test
sbb
jp
mov
pop
push
cmp
jecxz
cmp
add
sub
mov
xchg
je
xor
call
movsb
or
dec
sbb
in
dec
aaa
testl
clc
fld
dec
cmp
int
xchg
aad
cmp
mov
xor
incb
pop
shld
sub
sbb
or
aam
sbb
sahf
or
jge
xchg
push
mov
xor
call
mov
jg
pop
es
adc
push
push
add
lods
insl
or
jb
sarb
in
jbe
lock
xlat
ret
push
jp
dec
xor
cwtl
aaa
mov
push
mov
mov
cwtl
sbb
out
out
aaa
lea
movsb
xchg
cmp
lods
jns
mov
jae
enter
push
dec
inc
out
cmc
je
adc
mov
je
in
dec
pop
divl
ljmp
cmc
test
out
stos
pushf
cmpl
jp
lods
nop
shll
out
cli
push
xchg
dec
lret
aas
in
stc
pushf
lret
and
stos
inc
mov
fxch
pusha
push
fnsave
test
mov
or
add
and
popf
stos
flds
jmp
push
push
ja
jns
jge
push
lds
movl
fsts
mov
dec
push
sbb
stos
addr16
xor
inc
pushf
inc
loopne
out
stos
sbb
sbbl
rep
jb
mov
and
and
inc
cmp
mov
pop
dec
or
or
cs
mov
adc
lahf
outsl
das
add
aad
out
adcl
pop
push
pop
test
mov
pop
add
add
and
push
push
sbb
xchg
mov
adc
sbb
aaa
mov
rclb
fcmove
sub
lret
scas
lret
push
mov
fistl
add
jecxz
fwait
xchg
xor
jmp
sub
arpl
test
mov
cld
jp
ss
ret
shrb
outsl
fadd
mov
adc
mov
popa
dec
repz
pop
ficomps
mov
push
add
xor
xchg
sbb
sbb
outsl
imul
lret
mov
dec
and
push
mov
cmp
pop
lea
mov
push
add
popf
push
in
aad
aaa
js
stos
mov
xchg
xchg
psadbw
add
jns
add
pop
cmpsl
mov
add
std
loope
fisubl
add
and
push
mov
adc
adc
fbld
sti
sub
adc
ret
pop
jmp
add
notl
mov
cmpsl
fldenv
jg
mov
test
cmp
mov
sub
xorl
adc
cld
mov
xor
or
nop
jae
jl
daa
daa
out
xchg
inc
pusha
mov
push
jbe
mov
mov
dec
or
pop
mov
loopne
dec
cltd
pop
xlat
out
pop
sti
jle
xor
and
pop
repnz
or
inc
fsubrs
leave
mov
pop
push
mov
sti
xchg
mov
out
insb
mov
mov
cli
add
cmp
enter
cmp
inc
sub
dec
into
movsl
cld
ljmp
adc
outsb
std
jecxz
xchg
shl
imul
pop
clc
rolb
mov
outsb
test
addr16
pop
jle
cld
jle
jb
xchg
adc
scas
jno
cmpb
sbb
popf
popf
mov
jae
lret
jmp
std
fildll
sub
jmp
ja
mov
lcall
lahf
or
mov
mov
sti
js
loope
lcall
pop
std
in
ret
adc
loope
sahf
and
dec
push
out
mov
or
xchg
xor
mov
sub
add
shll
jae
jmp
jno
cld
mov
mov
adc
stos
int
es
aam
aas
cwtl
push
jne
and
std
mov
xchg
out
ret
pop
push
in
dec
xor
pop
das
mov
xchg
mov
test
pop
cmp
and
insl
adc
xchg
leave
push
shl
xor
push
sbb
fdivp
mov
jmp
leave
pop
cltd
push
lock
xor
test
and
repz
cmc
cmp
shll
imul
fs
loop
stc
mov
aad
into
mov
in
pop
or
mov
jb
into
jmp
sbb
sarb
jg
xchg
and
sub
sub
loopne
pop
sbb
xchg
and
ficompl
push
gs
out
iret
popf
repz
mov
inc
roll
push
and
sbb
pop
out
xchg
gs
pop
xchg
pop
fnstsw
dec
mov
xchg
jp
push
jae
inc
sbb
add
push
jmp
lds
clc
cld
outsl
hlt
cmpsl
ret
push
add
mov
push
jl
xchg
rclb
in
ja
stos
xlat
xchg
or
jne
cmp
jp
in
jne
lods
into
adc
mov
or
scas
daa
xor
push
sbb
pop
outsl
mov
divl
xor
or
sbb
push
dec
pop
movsb
mov
jb
aas
loop
or
popa
mov
dec
mov
xchg
pusha
lret
popa
cmpsb
sarl
mov
fwait
xchg
ds
call
jge
movsl
jo
adc
repnz
ljmp
mov
test
pop
xor
lods
xchg
jae
mov
fsubs
cs
aam
cmp
hlt
or
xchg
jmp
movl
pop
mov
inc
xchg
dec
movsl
vpmacsdqh
mov
cli
mov
outsl
sub
popf
pop
push
iret
scas
fidivrs
xchg
push
cld
sbb
jb
push
add
dec
les
mov
popf
stc
call
adc
xchg
xor
in
popa
push
outsl
pop
mov
hlt
xor
inc
ja
andl
or
inc
jmp
mov
mov
cld
inc
inc
fistpl
ja
sub
or
cmp
xor
mov
pop
jge
data16
mul
adc
inc
adc
shll
sub
cmp
cmp
imul
push
xchg
fwait
mov
xchg
mov
mov
insb
jl
sbbb
lahf
xchg
or
add
mov
data16
fwait
push
roll
jae
push
cli
xor
vpaddsb
clc
cmp
add
inc
add
xor
pop
scas
adc
and
inc
fcoms
sub
mov
jbe
mov
test
ret
xor
jecxz
xchg
fsts
mov
lock
cmpb
mov
sahf
xchg
imul
aam
icebp
nop
sbb
dec
cmp
data16
cmp
sbb
jl
mov
pop
adc
pop
mov
nop
pop
cmp
push
push
or
sub
inc
stos
cmp
xchg
out
push
loopne
mov
jb
aas
mov
or
mov
jp
push
test
sub
test
xor
pop
int3
notb
jmp
jge
inc
pop
cmp
xchg
ljmp
cltd
or
ljmp
pop
addr16
xchg
dec
jecxz
add
rcrb
inc
add
mov
xor
jb
pop
add
ja
cmp
cwtl
lret
rcll
loopne
xchg
mov
push
lods
dec
out
lds
push
out
add
pop
scas
in
loop
xchg
or
addr16
fwait
xchg
hlt
inc
sbbl
inc
dec
decl
adc
shlb
push
jae
sbb
push
pop
es
mov
popa
mov
shll
je
pop
ja
mov
mov
push
jo
xchg
gs
fwait
mov
push
jecxz
fnstenv
adc
sbbb
sti
shll
lret
jl
push
mov
dec
sarl
mov
push
mov
pop
xchg
push
out
sub
mov
push
push
inc
shrb
mov
lods
mov
adc
out
stc
ret
mov
lods
xchg
inc
push
fwait
jp
sahf
clc
data16
in
std
jo
popl
ret
mov
scas
inc
sbb
push
int3
in
ret
int
repnz
jmp
out
jno
cmp
loopne
push
sub
inc
sti
xchg
push
mov
cwtl
inc
mov
push
lods
lret
cmp
in
clc
mov
adcb
iret
or
push
hlt
stc
sbb
cmp
outsb
fwait
push
ja
jne
cld
es
fiadds
ss
icebp
mov
aas
cmp
sti
push
cmp
sub
popf
jl
hlt
and
pop
xor
mov
loope,pt
add
stos
les
lcall
aas
jne
pop
out
or
in
pushf
sahf
rcr
jo
lret
sub
add
movl
and
pop
lahf
pop
rclb
sub
stos
xchg
into
gs
int3
scas
mov
and
int3
mov
bnd
and
adc
aaa
bound
jl
push
inc
notl
fcmovb
cwtl
sbb
jo
bound
addr16
jae
stc
push
inc
leave
mov
mov
scas
pushf
inc
stos
sub
gs
xor
addr16
std
mov
cmp
xorb
fstl
dec
rolb
jnp
push
jle
pop
repnz
popf
hlt
push
dec
leave
loope
jge
lea
pop
lods
mov
fs
fists
add
mov
adc
scas
inc
scas
xor
cmp
aam
pop
push
adc
sti
cli
mov
hlt
cmpsb
lahf
sbb
aaa
jle
dec
pusha
mov
rcrb
psrlw
cmp
mov
and
pop
nop
imul
mov
hlt
sub
mov
or
adc
inc
dec
sub
shl
ljmp
stos
ss
xchg
mov
sbb
daa
pop
add
jno
cwtl
sub
test
pop
sti
lret
aam
popa
xchg
mov
popa
lods
mov
xchg
sub
std
int3
das
mov
stos
xchg
sub
cmp
out
mov
ds
or
out
sti
cli
sahf
sbb
inc
jecxz
mov
mov
mov
mov
mov
in
push
push
mov
sbb
ds
inc
imul
nop
daa
xchg
jg
cwtl
xor
scas
clc
inc
push
and
xlat
fnstcw
push
rorl
mov
leave
sub
hlt
in
bound
and
mov
mov
add
xchg
pop
dec
pop
mov
mov
ljmp
or
cmpsl
mov
subb
dec
sub
movsb
mov
mov
leave
imul
and
out
into
mov
xchg
mov
std
mov
jae
add
push
scas
push
cwtl
repz
add
mov
rcr
and
add
pop
cmp
movsb
mov
or
mov
fwait
jns
or
push
loope
test
clc
mov
lret
sub
add
shlb
sub
cwtl
mov
inc
inc
out
jp
jmp
and
add
pop
repnz
mov
sbb
out
cli
push
in
pop
mov
mov
in
rol
lcall
add
xor
test
shrb
add
shl
popa
xor
jp
in
adc
ds
xlat
test
or
jge
scas
out
popf
fwait
jmp
dec
inc
hlt
mov
sbb
jge
and
pop
jo
or
leave
inc
jae
sub
notb
sbb
mov
lahf
lods
out
ja,pn
or
movsb
or
mov
adc
movsl
insb
xchg
sub
nop
lods
pop
ds
outsb
jge
loopne
ficompl
xor
or
testl
testb
aam
scas
sub
cs
icebp
sbb
int
idivl
mov
add
aaa
xchg
push
das
xchg
cmp
cmc
dec
mov
sub
scas
xchg
shrb
mov
dec
insb
xor
gs
notl
popa
lock
subl
or
std
xchg
ffree
push
int3
fldt
mov
negl
inc
iret
scas
ljmp
aad
pop
popa
dec
cli
std
sahf
xchg
rcrb
xor
icebp
jle
mov
das
icebp
sbb
sub
pop
jnp
into
daa
lock
xor
xchg
pop
jecxz
add
std
add
jecxz
push
mov
push
mov
aaa
arpl
push
rol
enter
ljmp
and
inc
cmp
lret
xchg
sbb
sub
pusha
orl
or
out
sti
and
lret
decb
repz
lea
flds
or
xchg
cltd
loop
ret
or
sbb
mov
jecxz
and
xchg
and
add
cmc
lcall
inc
inc
sbb
aam
and
adc
dec
arpl
cmp
mulb
push
push
sbb
fwait
adc
add
ror
xchg
pop
add
lods
cli
int
mov
jae
mov
adc
sbb
sbb
push
jne
pushl
in
cmp
lea
stc
cmc
fiadds
mov
mov
fstp
loopne
push
inc
fdivrl
sub
xorl
insl
sub
pushf
scas
scas
das
loopne
lahf
push
pop
cmp
imul
insl
add
aas
inc
popa
push
xchg
mov
xchg
mov
out
test
sbb
aad
leave
sub
mov
jo
pop
push
pusha
pop
notrack
mov
cld
inc
xor
cmp
xchg
aad
xchg
add
push
cmc
ret
adc
jp
mov
xor
addr16
ja
and
jg
mov
mov
cli
cmp
int3
std
scas
subl
sub
adc
push
loop
leave
imul
pushf
xchg
fidivrs
adc
mov
inc
sbb
aam
mov
mov
mov
cld
outsl
dec
sbb
xchg
or
add
sub
lods
sub
mov
pop
and
xor
fldenv
std
push
pop
stos
add
aad
and
scas
mov
mov
dec
aad
les
insl
cli
jg
mov
scas
mov
dec
mov
cwtl
insb
scas
pop
jmp
lea
adcb
or
xor
jnp
xchg
js
int
loope
and
sub
mov
push
aam
sbb
mov
or
in
imul
fmull
sarb
sbb
mov
push
gs
mov
jg
xchg
pop
orl
popf
stos
xchg
fstpt
and
lods
rcrb
push
cli
xorb
insb
imul
inc
repz
fistpll
aam
mov
ja
lock
adc
jle
xchg
xor
xchg
dec
aaa
fisubl
test
jle
or
push
lock
jae
adc
adc
xor
lret
jnp
adc
add
ficomps
jge
inc
inc
fcmovnb
mov
sbb
in
add
inc
mov
ret
in
mov
popa
or
ja
ss
ret
loope
xor
xchg
mov
push
dec
movsl
adc
jnp
lahf
insb
imul
and
pop
orl
sub
mov
lret
packuswb
dec
sbbl
movsb
shr
mov
int3
inc
lock
mov
adc
mov
jecxz
push
pop
scas
or
or
std
js
lock
dec
mov
jle
loope
adc
repnz
mov
in
cld
stos
sub
cli
pushf
inc
outsb
xchg
cmpsb
lahf
fdivs
pop
in
out
push
push
sar
cmp
loopne
mov
sti
int
cld
mov
xor
das
outsl
sti
pop
mov
mov
jnp
jmp
push
xchg
iret
data16
xchg
and
in
push
and
gs
clc
add
int3
outsl
xchg
jb
test
lea
out
inc
pusha
jbe
es
or
add
or
lret
in
sbb
dec
add
icebp
pushf
or
std
mov
jmp
cmp
or
lock
ja
imul
mov
mov
add
stos
lret
add
std
pop
repnz
pop
add
cld
jnp
and
push
xchg
cmp
inc
outsl
sahf
xchg
inc
and
push
sar
and
adc
adc
clc
out
std
out
sti
imull
mov
xchg
jle
push
xor
in
lods
sub
xchg
arpl
fs
xchg
fwait
mov
shrb
outsb
xchg
loop
sbb
jns
ficomps
out
movsl
mov
xor
aam
add
push
adc
sub
lcall
movsb
pop
lds
rol
sbb
movsl
les
mov
das
roll
test
xchg
outsl
movsl
add
cmpsb
mov
xor
cmp
pop
sti
jbe
ret
jle
call
mov
lahf
adc
jb
jae
sub
inc
lock
adcb
lock
ja
test
iret
in
add
aad
xchg
pop
sbb
xchg
scas
jns
or
es
sbb
mov
into
divb
cwtl
rcll
ret
inc
cmp
leave
hlt
mov
pop
mov
mov
das
adc
in
fwait
jne
cli
xchg
adcl
popa
outsb
shll
xor
cli
pushf
fbld
ds
inc
pop
cmc
je
dec
loopne
lods
jl
xchg
ljmp
xchg
fs
imul
arpl
fs
and
ljmp
sbb
and
xchg
sub
fbstp
movsb
pushf
cmpb
icebp
mov
mov
fdivr
xchg
fidivrs
jns
loop
sbb
movsl
sti
pop
sub
jb
lea
jne
mov
les
in
imul
lock
pop
sub
cwtl
out
test
ljmp
jg
jp
hlt
stos
stc
push
nop
cmp
gs
sbb
push
sub
sahf
loopne
out
sbb
mov
iret
adc
cmc
and
jne
lds
lret
lcall
subl
mov
xchg
sub
scas
ljmp
mov
shrl
test
stos
or
mov
xchg
shrl
cvtpi2ps
pop
fldcw
mov
sub
and
sbb
das
into
mov
adc
rcrb
xchg
pop
xor
mov
add
movsl
mov
cmp
fcmovnbe
sub
sub
pusha
fildl
sub
cltd
rcr
call
call
icebp
inc
ja
jg
movsl
cmp
hlt
sbb
mov
aaa
ss
xor
out
add
xorl
mov
mov
mov
cmpb
out
imul
inc
fdivl
xchg
out
xor
push
push
add
lods
sahf
mov
push
loop
movsl
jl
mov
icebp
xor
outsl
test
dec
mov
dec
sub
stos
sbb
fcoms
aam
outsb
test
jle
adc
pop
scas
mov
in
adc
sbb
lods
cmp
out
fs
stc
je
jbe
mov
jecxz
xor
jp
subb
mov
sar
or
xchg
and
ret
sbbl
js
add
shlb
std
js
cli
sahf
and
push
pushl
or
mov
mov
push
imul
ljmp
inc
es
add
pushf
repnz
mov
repnz
jge
adc
jle
pop
rcr
mov
movsb
jecxz
xor
mov
clc
notl
lods
xchg
jle
push
divl
push
lods
xor
mov
not
pop
jp
pop
shrb
push
sbb
int
jbe
repz
inc
xchg
scas
cld
insl
loopne
inc
push
clc
mov
fdivrs
and
stos
add
repnz
jle
add
mov
movsl
inc
cwtl
fistl
inc
je
nop
andb
fwait
pop
push
xor
or
std
xchg
mov
dec
sbb
inc
and
mov
out
adc
arpl
test
in
jnp
hlt
nop
dec
xor
imul
sub
loope
mov
mov
xor
insl
sbb
in
and
mov
sbb
addl
sub
xor
jne
dec
pop
pop
xchg
mov
inc
mov
call
mov
repz
movq
mov
fsts
add
mov
mov
xorl
lahf
imul
push
cli
mov
cs
sbb
inc
cmpsb
test
pop
push
adc
std
es
ljmp
jecxz
clc
mull
jo
out
cmp
hlt
mov
sahf
incb
fwait
inc
push
rcrl
cs
outsl
jnp
sub
sub
xor
add
ds
shll
data16
xor
inc
xchg
cmpsl
shl
nop
push
pop
out
dec
dec
add
mov
scas
and
xlat
insb
or
xlat
cmp
mov
adc
xor
fidivs
cmc
inc
mov
xchg
insl
sub
dec
stc
cmp
shrb
jl
movsl
inc
sahf
and
inc
insl
push
rcrl
test
mov
xlat
push
in
xchg
sbb
cltd
jno
lcall
dec
fs
cmp
repnz
inc
xchg
and
push
add
xor
fbstp
js
jb
psubq
cmpl
pop
pop
sbb
xchg
outsl
sub
sbb
aaa
arpl
adc
jo
and
jge
popa
test
popa
outsb
sub
pop
dec
in
in
repz
lret
test
in
mov
aad
fsts
adc
int3
fdiv
add
xor
data16
and
push
add
cmp
push
push
in
inc
jbe
shll
mov
inc
xor
push
mov
cli
clc
jns
or
aad
lret
mov
lea
stos
cltd
sbb
popf
mov
and
mov
imulb
ja
test
test
add
jno
repz
push
pushf
xor
inc
ja
popf
mov
inc
push
xor
bound
in
insl
inc
mov
sbb
mov
nop
pusha
andb
aad
or
es
out
js
cli
pop
cmp
lock
aad
and
fldl
aaa
nop
sbb
push
inc
sub
adc
xchg
inc
lods
cli
cld
icebp
arpl
push
bound
cmp
xor
sub
fistl
jp
lahf
ret
outsl
repz
rcrl
xlat
arpl
add
ret
jle
mov
je
xorl
xchg
lock
mov
inc
lret
push
mov
add
sub
lret
xor
inc
in
aaa
into
mov
addr16
rcl
cli
push
call
in
sub
sub
lea
lea
mov
adc
shlb
cmp
xchg
dec
pop
mov
pop
out
add
in
addr16
imul
mov
movsl
pop
repnz
pop
aaa
out
enter
mov
subb
adc
adc
jbe
ja
int
jae
add
mov
lret
mov
sub
popf
push
inc
test
mov
test
rcrl
test
xor
loop
xchg
mov
cmpsl
imul
ret
mov
sub
dec
in
cmp
cmpsb
sbb
mov
mov
rcl
or
or
xor
push
ja
leave
ljmp
xlat
mov
sbb
ret
push
test
imul
fsub
outsb
and
lods
cmc
imull
fisttpll
mov
add
popa
clc
push
or
sbb
inc
jg
mov
and
add
sbb
mov
fcoms
add
mov
and
push
subb
cmp
push
adc
lods
xchg
popa
stc
lds
cmp
shr
and
int3
pop
mov
scas
cmc
loope
imul
jns
jne
and
push
xchg
testl
fwait
dec
andb
addr16
push
dec
cmpsb
or
shrb
call
sbb
jbe
incl
sub
int3
ss
rorb
ret
fiaddl
sahf
or
and
movsb
add
stos
xchg
jg
test
cmp
outsb
rorb
jae
ja
pushf
mov
xchg
fs
int
test
pop
popa
jmp
iret
add
jmp
sub
popf
push
mov
pop
testl
stc
cmc
push
cli
sar
les
lods
in
rorb
aaa
movsb
dec
movsb
mov
pop
rorl
in
mov
inc
mov
jns
cli
sub
mov
test
lret
jae
mov
fdivrl
jg
mov
lock
push
mov
inc
stos
hlt
call
and
out
lidtl
push
movsb
inc
sbb
mov
sbb
js
fisttpl
and
outsl
loop
inc
arpl
xor
jno
cmpsl
inc
in
jns
jp
je
sbb
test
incl
dec
push
aam
hlt
mov
js
add
lea
lcall
inc
or
into
xor
repz
in
mov
jge
xor
popf
xor
push
mov
test
lods
je
das
cmp
jl
cmpl
loopne
cmc
xorb
or
sub
pushf
jmp
and
mov
repz
or
cltd
ds
lret
dec
mov
xchg
outsl
adc
mov
add
pop
fists
pop
mov
sub
mov
int3
xchg
adc
outsb
in
push
sbb
test
jne
cltd
gs
int
fisubl
inc
mov
sbb
lahf
ficomps
mov
loopne
inc
and
sub
and
mov
inc
jg
xor
jl
mov
stc
lods
pop
out
lret
jmp
js
leave
jae
dec
out
test
fiaddl
cmpsb
lea
mov
iret
cmpsb
xchg
mov
imul
sbbb
mov
bound
imul
mov
arpl
adc
out
cmp
idiv
xchg
adc
mov
out
aas
adc
adc
jle
jae
fmull
push
adc
pop
cmp
xchg
mov
mov
sarb
push
dec
insl
hlt
ja
cmp
mov
inc
fidivrl
cwtl
data16
lcall
jno
and
sub
pusha
xor
jle
outsb
into
loopne
lahf
xor
ret
fistpll
pop
cmp
filds
popf
xor
mov
lods
jg
leave
repz
dec
dec
in
insl
mov
jmp
outsb
add
daa
test
scas
add
and
dec
test
dec
mov
or
insl
ds
or
mov
mov
dec
add
outsl
dec
pop
jmp
shlb
jmp
sub
dec
pop
fs
int
dec
lods
sbb
inc
sbb
xchg
add
jmp
mov
jo
jb
imul
inc
mov
out
lock
lcall
outsl
push
mov
mov
pop
loopne
xchg
push
cwtl
cwtl
imulb
orb
mov
mov
add
fldt
out
xchg
daa
loope
fidivs
add
int
int3
sub
mov
jo
ds
pop
dec
lcall
enter
shrb
aaa
add
lret
xchg
aas
and
jg
es
fsubl
sbb
shrl
fsubl
mov
cmc
stc
pop
mov
inc
pop
std
xchg
mov
rcrl
icebp
mov
cmp
cmp
pushf
mov
sbb
rcrl
icebp
and
and
int
imul
lret
mov
out
cmpl
lock
or
mov
iret
push
jle
arpl
push
ljmp
es
jl
repz
mov
loop
push
dec
fcmovnu
frstor
sti
mov
pop
sbb
lock
test
scas
dec
inc
add
xchg
pop
push
repz
sbbb
int3
sbb
lea
xor
jp
movsl
out
stc
push
loope
stos
aas
mov
ret
hlt
pop
pop
dec
mov
sbb
jne
in
xor
pop
loope
filds
mov
and
jl
lods
outsb
mov
mov
pop
stos
push
aad
sub
jge
int
pop
fs
stos
jno
pop
rorb
dec
inc
popa
jl
imul
mov
loopne
mov
fdivrp
shlb
jmp
lods
mov
mov
xchg
movsl
cmpsl
xchg
sub
cmpsl
cmp
add
sbb
xor
adc
push
push
xlat
insl
adc
jns
cmpsb
adc
jns
lret
repz
adc
xchg
repz
mov
popf
xchg
cmc
add
aas
mov
push
scas
ljmp
pop
lock
filds
xchg
ja
sti
orl
cwtl
call
jp
gs
mov
dec
jl
filds
adc
popf
sbb
xchg
nop
sahf
popa
add
cmp
adc
cmpsb
push
adc
shll
imul
pop
movsb
ljmp
sbb
sti
out
cld
sub
in
cmp
dec
ss
sbb
arpl
adc
jno
mov
fsubrs
icebp
arpl
bound
cmpsl
out
mov
adc
pop
in
dec
mov
sti
cmp
fdiv
cmp
incl
push
push
jnp
mov
js
pop
fdivp
out
cmp
jl
sub
add
sbb
and
dec
lds
scas
mov
xorl
cmp
xchg
cmpsl
out
imul
mov
mov
cmp
jp
mov
mov
ss
aam
ret
cmp
pop
sbb
push
int
leave
iret
xor
sbb
and
adc
movsb
inc
imul
adc
jb
xor
sub
xor
ja
pop
movsl
add
mov
dec
mov
jb
aaa
mov
xor
add
test
push
add
lods
mov
or
pop
cs
dec
and
fnstenv
sub
repz
out
scas
adc
mov
rcl
mov
mov
add
and
sti
xchg
xor
push
lret
in
and
cli
inc
mov
rolb
xchg
mulb
mov
mov
cmp
jbe
repnz
popf
pop
sbb
arpl
push
push
iret
or
mov
xchg
cmp
jb
addr16
movsl
adc
sub
dec
mov
adcb
pop
xchg
pop
adc
call
imul
test
fucomi
inc
or
test
lcall
cli
js
ds
movsb
ds
pop
sbb
aas
mov
div
mov
outsb
mov
int3
mov
loopne
pushl
mul
out
push
pop
ret
add
clc
mov
stc
out
mov
lock
call
lcall
hlt
mov
inc
cmpsb
push
dec
push
mov
cmp
add
sbb
sahf
push
loope
stc
out
dec
iret
scas
orl
xor
xor
and
rcrl
inc
mov
pop
xor
mov
cmp
push
cmpsb
or
scas
inc
inc
aam
imul
mov
stos
clc
cmp
adc
or
daa
pushf
stos
mov
js
add
mov
lods
inc
mov
dec
push
mov
add
sbb
jge
in
insl
add
inc
test
lret
popa
out
les
je
push
movsb
cs
stos
dec
fadd
mov
mov
andb
or
adc
cmpsb
les
test
mov
pextrw
add
rcll
sbb
dec
mov
jp
popf
inc
cmpsb
shr
xlat
es
dec
push
fistpll
xchg
xchg
add
loopne
fdivrl
mov
and
jne
js
lret
stc
mov
mov
push
jge
xchg
sbb
enter
and
cmc
repz
shl
outsl
fcomps
pop
stos
push
lret
movsb
xor
xlat
sbb
push
aaa
and
push
sbb
clc
push
sbb
arpl
outsl
and
bound
mov
std
test
jbe
add
xchg
sub
and
inc
fisttps
push
jne
fiaddl
data16
xchg
mov
je
pop
stos
es
push
scas
lahf
jbe
subl
notb
pop
mov
mov
pop
push
pop
push
mov
xor
inc
mov
mov
lods
xor
ret
push
bound
push
mov
cltd
push
xor
arpl
fxch
ljmp
dec
sahf
mov
mov
mov
cmp
outsb
add
xor
jle
push
adc
jmp
out
mov
cwtl
jno
sbb
mov
mov
fwait
jae
push
pop
or
add
sbb
icebp
enter
icebp
imul
jae
enter
xor
adc
loopne
pop
repz
cmp
gs
add
jle
dec
xchg
js
mov
lods
sub
bound
push
stos
icebp
pop
rolb
jb
cmpsl
or
pop
or
aad
jle
xor
sbb
lds
js
popa
pop
ds
addb
mov
inc
or
cmpsl
dec
cs
or
movsl
icebp
imul
stc
sub
jmp
je
jg
jns
pushf
xlat
outsb
push
leave
call
mov
popf
jb
lcall
ljmp
ds
cmp
sahf
mov
in
sahf
cld
and
idiv
fdivrs
mov
lock
sub
sbb
cld
movsb
or
adc
addr16
jae
fdivrl
pop
scas
fisttpll
adc
daa
stc
repnz
xor
fsts
test
std
dec
out
add
pop
jbe
insl
sub
arpl
rcrl
pop
jae
push
xchg
sbb
push
pop
fucom
aas
and
in
dec
dec
and
adc
jbe
cmp
imul
xchg
ret
hlt
movsl
outsb
inc
push
adc
xor
inc
jns
clc
jge
pop
adc
xchg
add
pusha
jne
mov
inc
push
inc
cmp
mov
cmpsb
fldl
mov
rol
jne
or
mov
mov
or
out
dec
lods
loope
fbld
dec
jge
hlt
sbb
xor
mov
xorl
in
add
add
out
jge
je
jge
jns
lea
xchg
sub
push
jg
cs
shl
add
cmp
cwtl
mov
loopne
dec
cmp
mov
cmp
sub
inc
fidivrs
gs
dec
jge
xchg
cmp
icebp
jmp
outsb
adc
clc
and
lret
cmp
or
pop
push
ljmp
cmp
in
adc
lret
jae
int3
jne
mov
mov
xchg
mov
icebp
mov
cmpsl
arpl
sub
int
pop
test
mov
fcmovnbe
jno
xchg
add
jecxz
orl
stc
pop
fnsave
fdivp
mov
int
mov
mov
gs
add
mov
fisubrs
into
cmp
pop
cmpsl
rcrb
mov
sbb
addb
psubw
push
aaa
lret
cld
push
lea
popf
lods
sbb
sub
popl
sahf
adc
and
sti
test
or
loope
dec
pop
decl
loope
cmp
push
pushf
scas
popa
loopne
into
mov
jb
push
aam
or
cmp
sub
lock
dec
sub
outsb
push
jnp
xchg
cli
mov
jnp
repnz
push
jle
or
clc
fadds
mov
gs
pop
std
repz
icebp
in
push
cmpsl
dec
add
fmul
decl
cli
mov
or
out
cltd
lods
mov
and
aam
push
jmp
jmp
arpl
lea
pop
push
repz
sahf
cmc
mov
xchg
test
mov
dec
mov
pop
cltd
pop
cmp
jl
orl
push
xor
daa
push
loop
jb
cmp
stc
adc
test
jl
bswap
mov
les
shll
pop
pop
in
testl
arpl
pop
fbstp
sub
mov
ljmp
pushf
jecxz
mov
inc
mov
or
or
add
sub
int3
pusha
cli
or
mov
dec
and
sti
push
cltd
ret
pop
push
test
jecxz
jg
cltd
movsb
insl
out
stos
mov
dec
pop
inc
std
dec
dec
jb
in
outsb
push
mov
pushf
mov
cli
aas
push
aaa
inc
push
add
sbb
pop
adc
pushl
andl
sbb
lods
insb
add
mov
or
std
jno
addr16
scas
push
mov
or
xor
mov
jno
pushf
xchg
push
aad
xchg
mov
mov
or
lret
cmp
out
enter
cmpsl
mov
iret
cmpsb
cli
jge
xor
push
rcl
fmul
dec
jnp
and
xchg
xchg
xor
ss
test
xchg
xor
idivl
pop
repnz
cmp
stos
push
flds
mov
into
aas
imul
mov
lds
lock
lcall
push
sub
push
push
ss
sbb
test
inc
jecxz
inc
xor
ljmp
cmp
into
jmp
arpl
mov
fsubl
mov
push
mov
fbld
xchg
or
test
jb
push
popf
push
andb
imul
pop
dec
dec
sub
dec
sti
aaa
es
arpl
fisubrs
shrl
dec
mov
movsl
fbstp
push
clc
push
dec
rorb
les
fistl
fldcw
cmp
sarl
scas
dec
adc
xchg
dec
jl
or
movsb
ds
std
imul
mov
sub
mov
cmpsb
dec
jg
xor
les
leave
and
loop
ds
fmuls
cli
icebp
mov
sub
mov
mov
push
cmc
jg
jge
pusha
mov
ret
pop
ja
push
and
sub
sbb
sbb
addr16
in
jne
sbb
icebp
xlat
pop
cmp
dec
loopne
stos
inc
lods
sub
ret
subl
xor
stos
push
xchg
scas
jmp
jmp
loope
int
cmpsb
nop
push
ret
lds
or
ljmp
es
addr16
mov
mov
adc
fs
or
xchg
xor
fs
mov
xchg
dec
aas
mov
cmp
mov
cmp
aad
mov
dec
loop
ljmp
fsubl
adcb
adc
cwtl
pop
repnz
inc
xor
xor
mov
inc
adc
push
adc
adc
xchg
push
sub
xor
out
sbb
es
push
flds
mov
sbb
xorl
xor
xchg
in
repz
push
lcall
cmp
leave
dec
jge
je
sub
xchg
ret
mov
pop
or
xor
int3
dec
fmuls
outsb
mov
jno
dec
mov
xchg
iret
cmp
cltd
push
cmp
shld
leave
and
dec
aad
jg
xchg
sbb
loope
mov
loopne
cmc
or
out
pop
sbbb
into
adc
je
cli
pushf
or
test
leave
adc
cmp
loopne
sub
pop
inc
pusha
lock
popa
pushf
xor
fcoms
jg
dec
mov
insb
or
fisttpl
pop
addr16
xor
ljmp
movsb
stos
mov
fcompl
aam
lods
cmpsl
ds
out
out
ret
add
movsl
pop
repnz
out
and
hlt
mov
or
aaa
pusha
sbb
sbb
jno
das
cmp
jbe
and
add
inc
dec
ss
jg
push
fstl
cmpsb
test
inc
ljmp
arpl
pop
mov
stos
popl
pushf
jp
push
aam
sbb
pop
jae
clc
jge
mov
dec
aas
adc
jecxz
sub
rolb
stos
lret
xchg
scas
mov
adc
mov
xchg
arpl
adc
in
insl
pop
cmp
mov
arpl
xchg
xchg
dec
data16
pop
call
mov
mov
push
hlt
inc
adc
fadds
sub
lods
sbb
pusha
pop
stc
popa
mov
sub
andb
push
mov
mov
inc
cmp
lret
mov
in
mov
pop
in
mov
sub
jne
and
pop
stos
and
loopne
lret
inc
jecxz
aaa
and
gs
mov
and
pusha
call
dec
push
cmp
push
repnz
pop
xlat
outsl
inc
out
jmp
sahf
dec
jo
negb
xor
out
jbe
or
pop
and
out
mov
loope
mov
and
mov
pop
jl
dec
add
lock
and
inc
xchg
sbb
jo
mov
icebp
cmp
xor
fs
pusha
je
dec
lock
cmpb
inc
fldenv
mov
div
inc
mov
daa
loope
ja
inc
nop
fcmovne
fucompp
mov
mov
sarl
lea
pop
sbb
lcall
test
mov
insl
hlt
jo
push
sahf
aad
mov
cwtl
push
icebp
nop
push
push
inc
pop
xor
pushf
cli
insl
out
ds
clc
nop
xchg
or
pop
scas
jns
mov
stos
lods
ficoms
cmp
pushf
jp
sbbl
ficoml
js
clc
fdivrs
push
outsl
adc
mov
xchg
push
mov
pop
add
aad
sub
rcll
jbe
cmp
insb
cs
lods
test
cwtl
andl
mov
mov
inc
gs
mov
sbb
fidivl
dec
lods
dec
mov
scas
mov
jp
adc
lds
rcrl
add
fimuls
faddl
mov
int3
and
out
test
cmpsb
jbe
daa
repz
sub
rcll
add
push
imul
adc
dec
pop
sub
repz
sbb
pop
jns
xor
mov
in
cmc
mov
icebp
mov
push
das
insl
iret
cs
js
mov
fucomip
or
push
xor
xchg
mov
inc
in
rclb
add
enter
fildl
cmc
cmpsb
sbb
dec
call
add
out
jmp
fwait
daa
cli
dec
cmp
loope
sub
rcrl
aam
ret
pop
xor
cmp
inc
cmp
sbb
iret
dec
out
test
push
mov
nop
clc
addl
lods
shl
add
jecxz
lret
aam
dec
js
stos
inc
mov
and
ret
dec
xchg
pop
pushf
out
sub
dec
add
cs
dec
pushf
pop
decb
in
out
xor
fcomps
and
xchg
dec
in
inc
sahf
xor
call
fwait
insb
push
push
inc
cmp
and
xchg
rcrl
adc
fnstenv
test
and
pusha
mov
jmp
jmp
ljmp
insl
xchg
mov
mov
xor
ja
lds
push
pop
push
stos
ffree
les
mov
faddl
sarl
in
xchg
and
arpl
mov
fisttps
std
mov
enter
cld
inc
pop
or
or
fxch
insb
fisttps
lods
loop
fimuls
add
jb
xchg
dec
xor
cwtl
cmp
mov
rcrl
cmpsl
ds
fbstp
push
xchg
fbstp
mov
push
pop
sub
shrl
into
add
arpl
cmpsl
aaa
stc
in
cltd
stos
and
and
push
mov
or
push
stos
fwait
inc
sarl
push
dec
cmpsb
push
add
inc
adc
and
xor
mov
cwtl
mov
out
std
les
mov
mov
test
mov
shrb
inc
ss
outsl
daa
leave
dec
mov
sub
pop
pop
cmp
sbb
fnsave
aad
lods
loopne
xchg
adc
xlat
mov
mov
sbb
lea
adc
xor
sbb
and
xor
cltd
mov
shll
sbb
inc
cmp
mov
add
sbb
cmpsb
hlt
xor
dec
bound
fcomps
cwtl
adc
xchg
inc
test
cmp
mov
mov
cwtl
icebp
jns
push
imul
cmp
or
xchg
int3
jge
sbb
dec
inc
icebp
mov
and
mov
stos
stos
mov
mov
and
push
jae
mov
and
shl
test
pop
ljmp
orb
in
test
inc
mov
and
int
loop
or
xchg
jno
sbb
xchg
or
dec
xor
and
je
mov
inc
mov
dec
pop
mov
add
lds
rorl
rcrl
cwtl
pop
jmp
pop
jb
fadds
lock
add
mov
insl
mov
ljmp
lea
out
inc
sti
pop
cmp
int
and
jge
fcoms
outsb
mov
xlat
xlat
int3
fcmovne
add
bound
ja
push
lcall
popa
fcompl
shrb
cmc
pop
out
mov
mov
popf
iret
push
sub
ja
jae
cltd
xchg
mov
sti
sub
adc
adc
adc
cmovns
mov
notb
or
push
xchg
imul
popa
inc
lahf
push
inc
or
cmc
push
jbe
push
js
pusha
sti
pop
rcrl
stos
mov
lods
mov
test
add
aas
add
sarl
push
mov
pusha
clc
fists
repz
xlat
loope
ret
sbb
sbb
jl
pop
scas
out
or
cmp
dec
push
push
jl
or
jns
xlat
xchg
add
es
cmp
mov
mov
pop
adc
push
test
or
pop
imull
fistps
scas
dec
cmp
pop
mov
fdivrs
les
add
mov
push
in
ficomps
mov
jmp
or
jg
popa
push
lods
imul
mov
test
repz
rcl
dec
xchg
jge
mov
push
xchg
add
ret
xor
dec
pop
mov
xor
into
stos
adc
sbb
jmp
push
mov
jno
jecxz
mov
les
and
xor
testl
mov
and
lret
in
repz
mov
inc
adc
stos
les
adc
push
mov
jb
fcomi
mov
lret
adcb
hlt
mov
mov
inc
push
repnz
movsb
inc
nop
je
or
adc
lahf
or
xchg
imul
cmc
add
cmp
stc
insl
pop
xchg
dec
xchg
jl
lds
lcall
insb
mov
sbb
fwait
mov
test
icebp
lahf
outsb
incb
pop
ja
add
sbb
testl
xchg
jno
je
adc
dec
cwtl
mov
mulb
add
jg
inc
mov
ljmp
jnp
mov
jl
xor
dec
mov
mov
mov
out
test
sahf
xor
lds
jl
ljmp
pop
cs
enter
fidivl
xor
add
and
push
ret
dec
cmp
jne
cmp
enter
pop
cmp
add
out
mov
xor
shll
ret
bound
sbb
pop
mov
cmp
sub
pushf
es
pusha
idivl
push
mov
addr16
adc
ror
mov
mov
pop
and
add
flds
ja
out
mov
out
test
inc
pusha
outsb
add
cmc
cli
inc
fldcw
int3
pusha
idivl
data16
inc
pop
pop
mov
fists
imul
repnz
mov
lea
cmp
adc
mov
and
sub
fdivrs
out
in
mov
add
mov
in
into
hlt
push
inc
xchg
je
stos
arpl
popa
movsl
mov
cmp
test
negl
iret
into
mov
icebp
and
mov
cmp
pushf
je
xor
push
sbb
fnstenv
int
cmp
xlat
cmp
cmp
in
inc
rcr
sbb
mov
xchg
test
cmp
cmp
cmp
xor
inc
push
xchg
ljmp
stos
adc
and
shlb
mov
mov
js
ljmp
pop
jnp
pop
lods
cmp
insl
or
lods
adc
rcrl
ss
mov
sub
icebp
dec
and
les
testb
jmp
inc
imul
sub
push
lods
imul
push
jge
aas
jmp
mov
movsl
mov
aad
insb
aas
jmp
rcl
jbe
cmpsl
xchg
testl
dec
mov
mov
stos
sub
add
jmp
dec
stos
push
and
xchg
jle
fdivrl
jns
aaa
jbe
fldt
push
inc
xchg
and
stc
cmp
sbb
add
adc
je
inc
mov
adc
adcb
or
mov
test
add
push
push
mov
sub
and
xor
in
data16
int
push
dec
lock
rcr
and
adc
sbb
xchg
xchg
and
or
dec
cmp
cmp
mov
enterw
mov
mov
notl
or
mov
stc
out
sub
add
loopne
adc
out
fdivl
divb
lods
fsub
in
jmp
fidivl
add
jne
sub
push
jo
mov
pop
mov
mov
sub
fnstenv
icebp
push
fidivrs
mov
stc
dec
int
jb
negl
mov
ja
push
movsl
out
xchg
dec
or
cmp
jge
cmpsl
outsb
adc
mov
fnstcw
mov
lds
cmp
out
mov
push
jg
xor
push
pop
dec
call
mulb
cmc
nop
daa
es
gs
adc
sub
adc
push
hlt
add
add
inc
xor
jbe
lahf
adc
leave
pop
movsl
jmp
bound
xor
ss
ljmp
aaa
jns
test
stc
jbe
sub
adc
loop
or
adc
push
inc
fiadds
movsb
gs
loope
push
push
out
js
pop
cs
xlat
sub
outsl
cmp
adc
imul
xor
lods
ljmp
movsl
cld
lock
stos
xchg
jg
int3
sbb
push
xchg
mov
mov
int3
adc
push
test
xor
popa
movsl
ror
sub
decl
jge
xchg
sbb
push
stc
pop
push
out
stc
ss
mov
inc
gs
scas
push
or
scas
roll
mov
into
inc
and
out
sbb
push
mov
shlb
jecxz
cmpsl
cmp
adc
shrb
jbe
sbb
add
mov
mov
cmp
out
sbb
loop
movsb
cmp
adc
loop
hlt
mov
push
popf
sub
loopne
or
xor
addr16
gs
mov
inc
adc
xchg
rcrl
dec
push
les
inc
cld
cltd
popf
push
sbb
arpl
cmpsl
repnz
jecxz
cs
lret
inc
test
push
dec
lock
push
xchg
mov
out
in
cmp
xchg
push
pop
loope
dec
das
inc
cld
xchg
in
adc
popf
outsl
push
daa
ss
push
insl
arpl
stos
xchg
cs
enter
cmp
insl
and
leave
hlt
xchg
dec
pop
ret
and
sub
inc
xchg
jp
pop
adc
xor
stc
je
fisubrs
lds
push
mov
rorb
dec
xlat
fisubrl
out
in
mov
xor
into
repz
dec
imul
mov
xor
ror
arpl
fsubrp
add
cltd
and
dec
xchg
xor
inc
sub
pop
push
mov
and
std
mov
fistpll
in
jnp
loope
add
data16
inc
cmp
test
sub
jmp
call
cli
ret
sbb
pop
sbb
ss
pop
popf
dec
cmp
cmp
xor
faddl
xchg
sbb
mov
rcl
mov
fmull
ja
lea
xchg
push
inc
mov
aaa
pop
jecxz
sub
enter
xchg
add
add
xchg
cmc
cmpsb
loopne
adc
sarb
push
mov
mov
ljmp
je
cwtl
mov
dec
push
pop
xchg
sub
jnp
push
insl
xlat
int
aad
pop
in
mov
pop
push
scas
jnp
sub
sahf
sti
jg
ss
jo
cli
push
xchg
lret
iret
xor
pop
in
or
jg
and
rcll
jnp
xor
adc
add
and
es
mov
arpl
pop
push
xor
cs
mov
dec
scas
nop
cmp
ret
sub
mov
sub
cwtl
xchg
dec
in
es
mov
sbbl
jp
push
arpl
into
add
push
out
dec
push
cmpsl
and
lods
arpl
rcl
das
cmp
aad
mov
dec
in
js
xor
addr16
add
aam
pop
pop
popf
mov
sbb
sbb
sbb
xor
frstor
ljmp
jne
dec
fwait
inc
iret
sbb
sub
cmp
scas
loop
in
push
xchg
lea
imul
inc
testl
mov
ja
inc
cmpsb
xor
mov
sub
jno
addr16
cmp
push
call
test
jo
cmp
rcrl
adc
mov
or
cmp
rcl
les
aas
push
inc
scas
xchg
mov
lock
jg
inc
cmp
out
sub
cmp
fs
clc
xchg
repnz
adc
cmp
arpl
dec
bound
aas
push
cmp
mov
mov
es
jns
mov
jae
adc
aam
xor
enter
xlat
push
push
sub
xor
rcrb
int
icebp
shll
push
mov
xor
push
xchg
out
lock
enter
in
decb
push
cli
push
cmp
call
mov
loopne
and
push
shrb
sbb
sahf
or
outsb
andb
mov
xor
scas
jg
das
push
imul
and
lcall
cltd
int
ret
nop
sti
xchg
push
mov
pop
cmp
leave
jg
out
push
or
mov
pop
loopne
mov
pusha
out
inc
bound
or
mov
or
mov
jecxz
lods
dec
aaa
ss
inc
das
cmp
cmc
sub
inc
fidivs
fidivs
adc
scas
mov
sbb
inc
popf
push
push
mov
roll
jle
js
jne
test
ret
cld
mov
sub
in
jp
mov
xor
fisubs
in
sub
cmc
and
rol
jbe
outsl
push
and
mov
mov
dec
out
das
sub
sar
mov
dec
and
shrb
aad
dec
pop
sub
pop
fadd
leave
test
aam
daa
and
pusha
jae
jbe
mov
test
bound
sbb
adc
popa
add
imul
pop
mov
outsb
push
add
dec
lea
test
pop
sub
ss
mov
pusha
sub
cwtl
iret
adc
add
mov
sub
jns
hlt
xor
mov
popa
cmp
jecxz
adc
sbb
adc
or
add
sbb
adc
sbb
xor
lock
adc
je
xor
jne
cli
adc
xchg
sbb
dec
outsl
hlt
jg
mov
repnz
adc
pop
push
cmp
or
call
jb
outsl
shll
lds
and
arpl
and
sbb
lods
outsl
iret
mov
jmp
daa
aaa
test
jmp
and
test
lock
sbb
out
lds
inc
movsl
xchg
cmp
mov
xchg
lea
sarb
fcomp
sbb
clc
push
mov
fcom
sbb
repnz
out
std
sahf
adc
imul
sub
lahf
cmpxchg
mov
ljmp
jmp
pop
xchg
mov
add
xor
xchg
cmp
idiv
out
xchg
insb
add
jle
cs
jo
adc
mov
test
push
lds
mov
jnp
xchg
mov
pop
fwait
mov
push
cmp
into
enter
jae
or
fmull
xor
stos
fnstcw
fs
bound
push
or
mov
cli
loop
xchg
pop
lcall
push
mov
mov
cwtl
fisubs
loope
add
into
inc
lods
jmp
lret
loope
jge
dec
shl
in
mov
inc
fs
arpl
std
jo
test
daa
or
sub
xchg
mov
test
inc
cltd
cmc
cmp
mov
xchg
pop
and
adc
push
fwait
test
aam
jbe
inc
negb
and
mov
inc
stos
and
xor
inc
mov
popf
sarb
and
jle
dec
lds
aad
jle
add
or
push
in
inc
leave
es
inc
popf
lods
sti
adc
insb
dec
and
jg
fldenv
es
out
movsl
lcall
jnp
pop
push
nop
cmpsb
mov
js
push
and
mov
mov
in
stos
sub
xchg
loop
jns
xor
and
sbb
ret
roll
sub
or
aad
hlt
lahf
not
add
cmp
or
jl
jnp
pop
sub
cs
jl
pop
cmp
jne
subl
bound
shlb
bound
icebp
aad
roll
cli
fwait
sti
pop
mov
es
add
mov
push
mov
into
pop
mov
int
fisubrs
push
inc
popf
rcrl
in
outsl
inc
fstpt
lahf
xor
mov
jmp
pop
shl
ss
mov
inc
ficoms
cltd
mov
mov
and
es
arpl
pop
xor
ror
cmp
imul
loope
test
or
dec
jno
inc
push
cs
or
cld
loopne
clc
pop
cs
push
sub
aad
sub
lods
ljmp
mov
js
pop
add
sbbl
inc
or
aam
mov
jb
adc
push
mov
jl
jo
mov
push
shll
mov
or
or
or
lahf
das
movsl
cld
jmp
push
jmp
mov
sbb
xchg
sub
pop
xor
gs
dec
out
cmp
rolb
dec
outsl
loop
stos
stos
jbe
sarl
or
add
inc
sub
jl
popf
out
and
fstpt
or
mov
ret
rclb
pop
scas
inc
jae
sub
pushf
xor
dec
jl
mov
call
or
jg
cmc
dec
in
push
xchg
sub
dec
cmp
in
aam
mov
popa
xchg
cmp
addl
sahf
sbb
in
xchg
xchg
lock
in
cmp
cmpsb
mov
loop
push
nop
sub
aas
xorb
fdivp
pop
repz
push
add
push
push
push
push
inc
cwtl
in
mov
bound
mov
lret
mov
pop
or
ss
xor
std
pop
jo
inc
xchg
xchg
shr
lods
sbb
mov
sbb
ret
inc
sbb
adc
xchg
jnp
fwait
inc
push
pop
movsl
dec
cli
push
xchg
jge
or
add
bound
mov
push
adc
pop
xchg
into
adc
jl
outsb
and
cmpsl
xchg
push
mov
cmp
fnstsw
dec
add
xchg
scas
jno
sbb
jae
sub
pop
out
mov
mov
enter
xor
inc
xchg
out
pushl
ret
push
lods
fisttpl
pminub
test
cmp
dec
xor
bound
std
jl
xor
pushf
dec
or
out
add
imul
and
dec
loope
rolb
xchg
push
mov
int
xor
sbb
lret
outsb
sbb
sub
ss
mov
sbb
cmp
push
pusha
test
sbb
push
out
xchg
test
out
fwait
cltd
pop
div
dec
and
into
mov
adc
lcall
and
and
mov
jle
fidivl
movl
push
pop
in
lods
lds
adc
loopne
in
jl
repz
bsf
les
ret
lods
mov
test
fnstsw
in
cld
xchg
mov
xchg
call
and
test
jp
das
or
stos
inc
push
ret
dec
bound
fwait
fs
adc
pop
fs
outsl
push
fcoml
xchg
sub
and
sub
jbe
cs
sub
mov
fisttpl
jge
cmpsb
scas
pop
movsl
nop
jle
sub
sbb
dec
mov
jmp
scas
ljmp
jnp
out
add
in
cmp
fisubs
push
push
sub
rcrl
xchg
movsl
mov
jne
insl
lods
jmp
fucomi
popf
stc
mov
pop
sbb
sbb
push
stos
inc
lds
popf
insb
outsl
cmp
push
icebp
nop
mov
cli
movsl
scas
sub
decl
pop
ljmp
cmp
cltd
add
pmaxub
xchg
add
cmp
or
fwait
sbb
sbb
sub
popa
std
js
sbbl
sbb
in
push
xor
repnz
test
push
or
test
enter
mov
outsb
sbb
test
mov
ja
mov
or
ret
mov
dec
sbb
mov
stos
jne
push
scas
out
pop
add
inc
idivl
imul
xchg
sbb
inc
dec
fsubl
fbstp
cwtl
xchg
dec
fildl
in
pop
sahf
mov
mov
mov
mov
dec
jmp
outsb
jns
mov
push
popa
mov
push
or
aas
andb
imul
cmp
mov
pop
flds
push
in
fstpl
push
inc
pop
mov
cmp
mov
js
xchg
mov
adc
vcvtss2si
in
repz
xchg
notl
iret
sbb
decl
or
fwait
pop
add
popa
cmpsl
test
sub
xor
xchg
sbb
arpl
shl
dec
enter
mov
clc
mov
divl
lods
jecxz
adc
mov
pop
push
add
leave
adcb
rcrl
dec
sub
addr16
xchg
jno
xor
mov
mov
jmp
dec
dec
jo
inc
pusha
dec
mov
rcrb
ds
in
addr16
rclb
cmc
push
icebp
sbb
xchg
int
ljmp
cmp
cmp
imul
xchg
cmp
test
test
les
clc
dec
pop
and
hlt
push
jle
cli
mov
dec
mov
push
and
mov
fcmove
sub
insl
clc
imul
cmc
dec
pusha
mov
aad
mov
mov
jg
into
mov
fstpl
lcall
outsl
sub
pop
nop
int3
arpl
callw
arpl
sahf
aad
sub
shlb
adc
orl
mov
push
or
inc
push
stos
nop
movsl
push
push
add
scas
xor
repz
xor
dec
or
cmpsb
inc
cmp
ss
jge
and
iret
lods
xchg
mov
sub
add
std
cmp
enter
jmp
or
cld
dec
or
or
inc
in
mov
arpl
enter
mov
inc
dec
std
mov
addb
push
repz
pop
scas
mov
aam
dec
push
push
lcall
xor
shll
jo
jo
cwtl
ud0
aaa
ja
out
adc
lret
mov
cmp
fsubs
inc
lahf
enter
jg
and
je
adc
out
dec
inc
and
repz
or
adc
sub
rol
bound
icebp
xchg
lret
scas
add
mov
sbb
ds
sub
mov
jnp
fdivl
xchg
inc
sbb
xchg
pop
out
hlt
xchg
into
cmp
dec
out
push
mov
jbe
dec
stos
pop
mov
shlb
adc
scas
dec
loopne
push
leave
and
repz
mov
cli
lahf
lret
push
dec
sbb
mov
cs
cmpsb
repz
dec
in
out
testl
shl
pop
fidivs
cld
lods
jmp
pop
jmp
mov
out
jp
test
mov
rep
andb
sub
mov
xor
mov
mov
adc
in
mov
out
movsl
jns
pop
je
aaa
xor
sub
push
pop
lahf
scas
adc
xlat
cmp
push
movsl
std
sub
loope
subl
lock
into
shrl
stos
dec
pop
in
fimull
mov
mov
dec
out
ja
mov
mov
push
mov
xor
mov
xchg
clc
out
mov
cli
imul
mov
in
sub
mov
js
add
xchg
enter
das
adc
push
idivb
mov
lahf
mov
pop
mov
repz
mov
sbb
inc
bound
pop
adc
inc
movsb
mov
xchg
jg
test
sbb
jmp
mov
cmpsb
leave
pop
sub
iret
and
dec
out
clc
xor
adcl
mov
decl
popl
cmpb
xor
out
stos
adc
fdivrl
cmp
and
stos
lret
call
scas
stc
push
sub
sarl
inc
add
xchg
push
lcall
test
pusha
stos
adc
shl
jle
sub
ds
inc
push
mov
cmpsl
dec
fists
cmp
adc
push
or
jl
cwtl
dec
out
push
dec
mov
and
push
scas
or
mov
int3
mov
mov
push
mov
popa
mov
rcrb
cmpsb
std
xchg
push
sub
les
push
std
pusha
xchg
pop
or
push
xchg
pop
jmp
dec
mov
sahf
out
xor
sbb
int3
jae
outsl
pop
sahf
sbb
add
mov
and
pop
scas
data16
jae
mov
rorb
adcb
or
pusha
shlb
mov
sarl
inc
and
dec
inc
int
scas
sbb
mov
cs
and
ja
sbb
fs
jno
adc
push
dec
cltd
or
fs
cmp
out
pop
sub
add
mov
and
cli
and
hlt
pop
sbb
mov
call
std
out
or
lods
pop
sub
xchg
lret
in
test
adc
pop
lret
ss
sbb
repnz
ret
adc
or
xchg
push
and
push
shl
out
sbbl
repz
gs
pusha
out
mov
rorl
js
test
stc
sub
je
mov
pop
push
addr16
stos
inc
or
mov
in
inc
pop
lock
pop
test
add
inc
dec
adc
mov
sarb
add
fwait
mov
and
push
add
add
xchg
gs
mov
shlb
inc
mov
sbbl
cmpsl
sbb
test
fmul
test
lret
mov
cmc
in
arpl
xchg
lret
int3
shrl
in
in
jmp
pop
xor
je
in
int3
repnz
xchg
adc
push
pusha
shld
push
fcmovbe
mov
mov
and
adc
push
sub
lret
add
in
jg
push
fdivrs
pop
sbb
rorb
repnz
xor
push
cwtl
insb
pop
jnp
repz
cmp
xchg
or
sub
xor
cs
mov
adc
jb
or
dec
ret
sub
cmp
xchg
sub
sahf
stos
das
iret
or
insl
adc
in
cmpl
mov
add
int3
arpl
jp
add
lock
fcmovne
mov
inc
xchg
rcr
lret
cltd
xor
jo
inc
xchg
int3
arpl
in
jne
cli
jle
scas
sbb
jo
xlat
mov
dec
rclb
xchg
stc
in
sub
add
dec
inc
fs
in
insl
cmp
sti
sbb
push
mov
mov
pusha
adc
cmp
and
ds
ret
hlt
xor
cli
daa
cmp
outsl
push
call
mov
and
mov
icebp
dec
sbbb
sbb
mov
movsb
mov
mov
leave
pop
or
jae
pop
ja
out
inc
int
or
int
lods
inc
jp
xor
lods
aam
das
mov
outsl
pop
inc
xchg
and
fs
inc
xlat
adc
jno
push
rcll
mov
jnp
sub
pop
sub
icebp
sbb
push
xchg
cltd
pusha
mov
imul
stos
xor
insb
jnp
inc
cmpsb
lea
ss
ret
int3
push
mov
cmpsl
out
test
or
pusha
repnz
fs
or
cmp
sub
fnstcw
dec
or
es
in
xchg
cmpsl
xchg
mov
or
sbb
decb
daa
repnz
push
jne
ret
and
lods
xchg
test
push
test
xorl
ficomps
mov
leave
mov
xlat
mov
pop
jne
bound
xchg
bnd
or
in
jb
out
jmp
call
pushf
movsl
scas
and
jecxz
ret
push
mov
aad
aas
in
jo
push
inc
ficoml
inc
fucomp
iret
insb
pusha
subb
arpl
mov
loopne
jno
and
jmp
inc
push
mov
fidivs
int
jo
cmpsl
std
xchg
fcomps
cmpsl
add
mov
sbbl
pop
lcall
das
inc
out
cmp
xlat
mov
lcall
or
mov
dec
cmp
andb
jne
add
cmp
add
xchg
add
ljmp
push
jae
adc
mov
jnp
jge
stc
test
jl
mov
push
sbb
into
and
add
cmp
scas
mov
pop
aaa
push
cmp
or
inc
pop
inc
outsl
lret
outsl
dec
jnp
xorl
dec
jno
xchg
daa
xchg
aad
jmp
or
fsubp
test
sub
mov
ret
iret
mov
out
lock
push
and
xchg
jmp
cmp
mov
xchg
clc
rcrb
sub
cmp
xchg
and
dec
out
cmpsb
inc
icebp
pop
pop
insl
jb
jp
cmpsl
test
mov
inc
mov
aam
loop
inc
cmp
insl
enter
imul
inc
xor
inc
sub
mov
ret
mov
sbb
mov
xchg
fisttpll
imul
sub
xor
pop
jmp
mov
pop
bound
pop
pop
adc
clc
mov
repnz
pop
popa
dec
jnp
cld
shl
add
es
or
pop
inc
xor
hlt
inc
jle
ja
je
xor
jae
lock
mulb
ds
dec
mov
push
call
in
cmp
scas
jmp
jg
hlt
mov
pushf
push
pop
jmp
dec
cmp
adc
inc
lods
inc
and
shlb
les
pop
out
dec
stc
iret
jge
fsubs
out
pop
mov
scas
das
sbb
aaa
push
ja
in
lea
aas
daa
add
loop
mov
int
movsb
dec
loop
fldenv
jmp
repnz
pop
add
push
jecxz
cmpsb
xlat
and
fwait
imul
out
in
mov
and
jo
add
jae
mov
cli
das
shl
push
out
xorl
enter
cli
cmp
lret
jns
mov
pop
xchg
sbb
sti
jae
and
scas
test
xor
sbb
add
mov
push
test
pop
add
or
imul
inc
nop
cs
in
inc
rclb
pop
test
ret
sahf
sbb
shl
dec
fists
mov
cmp
add
sub
pop
adc
out
jnp
jle,pn
xchg
push
push
orb
sbb
adc
pop
out
mov
xchg
sarb
repz
in
adcb
into
mov
mov
push
fwait
push
add
aam
mov
lea
add
or
arpl
pop
xchg
enter
mov
cmp
cld
dec
popa
and
ljmp
iret
cld
lahf
mov
cmc
and
outsl
jbe
nop
test
dec
out
dec
push
or
lret
cmp
cld
sbb
push
rcll
or
xor
adc
mov
mov
aas
push
outsb
enter
lock
mov
push
in
xor
stos
cmp
push
je
fdivrp
push
dec
in
sub
fsubrp
imul
jl
push
sub
mov
mov
lahf
sub
jmp
popf
xor
sbb
test
mov
cmp
incl
cli
cmp
rcrl
adc
mov
loope
dec
int
mov
jae
icebp
pop
lret
out
shl
xlat
ja
dec
shr
jecxz
inc
sub
or
mov
pop
clc
dec
aaa
mov
sbb
dec
sbb
sub
or
negb
inc
sbb
int
push
push
sbb
lret
test
xchg
mov
mov
mov
test
sbb
adc
cmc
mov
mull
ds
xor
inc
inc
std
add
push
push
push
jge
mov
dec
xor
fwait
inc
arpl
mov
mov
pop
outsb
pop
adc
push
mov
inc
mov
inc
fsubrl
dec
or
hlt
and
cld
sahf
dec
in
cmp
int
jmp
xrelease
imul
fs
leave
mov
sub
loop
pop
loop
push
inc
push
inc
scas
test
nop
imul
stc
ret
movsl
adc
stos
cmp
shrd
xor
stos
lds
adc
leave
inc
mov
xor
xchg
xor
inc
fdivrl
lcall
fs
cs
inc
mov
cmc
pop
add
cmpsb
lahf
test
shl
cmpsb
or
testb
ss
out
or
cmp
sahf
lods
outsb
cmp
mov
enter
fldl
adc
mov
sbb
and
cltd
sub
push
sbb
add
cmp
test
rorb
push
ret
cmpsb
jge
jo
fdivl
xchg
fucomp
leave
xor
arpl
gs
inc
ljmp
or
push
shr
insl
add
jo
cwtl
xchg
mov
xor
xchg
inc
mov
sbb
push
je
punpcklbw
inc
or
cmp
inc
xor
inc
outsl
push
xchg
adc
sbb
push
mov
cmpsb
ds
jge
repnz
lds
lds
aaa
mov
jle
cmp
fsubrs
ret
mov
mov
daa
orb
lret
xchg
negl
call
push
mov
int
or
sbb
in
push
or
ret
xchg
mov
sub
leave
subl
push
jae
add
cmp
lcall
cld
test
cmovg
jno
cmp
aas
sti
jge
rcll
test
test
bound
outsl
jge
dec
test
jb
mov
push
pop
or
pop
cmp
pushf
pop
sbb
pusha
mov
arpl
mul
jmp
sbb
inc
ficoms
repz
insl
adc
and
xchg
ss
mov
sbb
arpl
sub
cmp
div
mov
bound
jno
sub
adcb
into
and
jb
sub
and
mov
stos
xchg
repnz
and
jbe
inc
xchg
rcrl
adc
pop
jo
inc
loope
mov
icebp
or
test
sbb
lahf
cmp
lods
imul
enter
inc
aaa
mov
ja
inc
pop
jl
in
imul
leave
mov
stc
inc
push
cmp
mulb
push
lret
xor
jbe
push
push
movsl
lahf
and
pop
fnstenv
jg
ss
fcmovb
pop
repnz
shll
mov
xor
js
sub
pop
lock
rolb
cli
sti
sub
add
mov
aad
push
icebp
push
negb
xor
inc
mov
fidivl
rclb
or
inc
loope
inc
dec
dec
out
jg
sbb
into
cmp
mov
dec
dec
add
int3
arpl
cmc
jb
push
mov
dec
mov
sarl
rolb
cld
mov
fnstenv
fcoms
or
mov
std
addr16
mov
into
pop
inc
add
adc
outsl
in
push
cltd
orl
loope
pop
dec
sti
xchg
jp
stos
mov
stc
fildl
mov
cmp
fwait
dec
movsl
cmp
mov
ret
xlat
sahf
in
push
dec
cmpl
jle
int
test
les
fstp
icebp
add
inc
push
inc
sbb
gs
cmp
push
popa
mov
popa
pop
repz
mov
bound
xchg
mov
mov
sbb
test
mul
add
scas
push
and
movsl
push
jo
pop
inc
into
gs
fs
rcr
mov
jae
or
inc
aas
clc
mov
loope
dec
icebp
pushf
or
outsl
fstpt
int3
mov
stc
nop
cs
fs
es
daa
pop
jmp
nop
dec
aas
push
in
test
sub
das
inc
daa
dec
ret
pop
or
pop
or
sahf
in
std
test
and
push
lea
push
pop
sub
xchg
mov
xorb
fldl
fs
fidivrs
adc
insl
jle
inc
mov
mov
rclb
pop
repz
popa
mov
scas
sbb
fwait
mov
fdivl
enter
stos
addr16
dec
loop
mov
rcll
and
sbb
pushf
lcall
popa
int
dec
cmpsb
push
or
aad
cmp
or
rcrl
xchg
test
test
stc
push
sbb
rcrl
mov
mov
or
xchg
mov
sub
pop
jl
mov
pop
push
lahf
sbbl
mov
jae
pop
imul
xor
pushl
cwtl
or
and
test
jle
lret
push
shll
ret
fbld
jecxz
sbb
mov
cmc
mov
std
mov
mov
loopne
shl
xchg
inc
jbe
xchg
sarl
dec
jb
je
or
sbb
dec
sbb
jmp
pop
jle
cmp
inc
cli
ds
imul
inc
or
es
xchg
sub
dec
outsl
xchg
test
es
and
rorl
popa
add
and
iret
sub
add
or
inc
push
jmp
testl
cmp
adc
fiadds
mov
xchg
mov
push
inc
cld
aas
mov
cwtl
sub
imul
mov
fsubrs
add
imul
cmp
gs
xchg
hlt
xchg
push
push
stos
loope
jnp
lret
cmp
dec
mov
and
sbb
mov
dec
popa
mov
mov
loope
lcall
mov
xchg
adc
xchg
imul
mov
nop
mov
push
jb
shlb
js
and
lret
imulb
inc
xor
leave
sbb
fwait
mov
push
push
mov
cli
cmpl
fadds
in
ret
xchg
pop
jl
int
push
jge
cmc
ja
imul
lahf
cli
imull
xlat
or
shll
lcall
cmpsb
cmp
and
les
rolb
mov
mov
cmp
inc
jnp
jmp
loope
or
mov
repnz
test
int3
lods
jl
stc
inc
mov
lcall
lea
or
test
popa
out
mov
fdivrl
pop
sarb
lods
dec
pop
push
sbb
aaa
jp
das
sub
cmp
hlt
mov
divb
sbb
dec
dec
fidivrs
or
nop
and
scas
test
js
stc
popf
push
lods
call
mov
mov
cli
adc
fstps
jns
push
adcl
push
inc
imull
daa
sub
push
push
sub
add
push
sub
cli
fisubrs
sbbb
nop
rcl
dec
int
push
lds
outsb
dec
pop
pop
jmp
lods
or
cmpsb
add
ret
imul
xor
stc
mov
adc
cmp
enter
dec
cmp
jne
add
jne
mov
xchg
sub
into
mov
psubsb
inc
lahf
es
insb
fdivl
mov
mov
mov
data16
push
or
add
xchg
push
xor
sub
mov
lds
add
jl
inc
aad
stc
and
fdivrs
inc
jg
xchg
mov
pop
ret
les
loope
adc
pop
lahf
in
xchg
sbb
mov
in
pop
add
adc
xor
lods
and
ret
push
in
insl
orb
push
inc
push
scas
mov
dec
fnstenv
cmpl
jno
and
jnp
test
clc
icebp
or
out
ljmp
cmp
ret
mov
pop
adc
cld
and
and
push
inc
test
xor
in
out
xor
dec
mov
push
and
dec
sub
loop
clc
movsl
fistps
jg
cmpsl
mov
push
fwait
pop
mov
scas
jecxz
mov
test
and
xchg
mov
aam
std
jmp
stos
ret
pop
pop
mov
or
ret
insl
cwtl
xchg
mov
cmp
dec
pop
adc
jle
fnstsw
sub
js
popl
pop
das
pushf
xchg
lds
addr16
fsubr
movsl
sbb
add
mov
ficoml
cwtl
roll
inc
insl
add
mov
sbb
and
ss
adc
xor
jle
pop
das
lods
push
mov
inc
filds
jg
mov
pusha
xchg
pop
pushf
ja
leave
test
ja
es
in
mov
shrb
pop
push
mov
andb
pop
push
andl
adc
ds
daa
jmp
loope
out
sbbl
pop
cwtl
lahf
ss
sub
lods
int
mov
daa
pop
sub
pop
in
inc
mov
out
bound
mov
jle
jno
xchg
daa
and
std
adc
je
icebp
xchg
out
ss
push
and
adc
cmp
jne
add
adc
js
add
jp
scas
je
add
add
shll
dec
mov
cmp
xchg
pop
mov
jecxz
movsl
xlat
in
mov
mov
jmp
popa
movsb
or
pop
das
in
aad
push
add
mov
sub
pop
cli
pop
jmp
adc
mov
push
mov
out
daa
sub
adc
int3
add
hlt
push
sub
shlb
adc
sarb
dec
cmp
xchg
out
xor
aas
pop
pushf
lods
jmp
std
leave
popf
outsl
adc
xchg
jmp
jge
ja
xchg
xor
test
and
xchg
jp
sarl
inc
and
hlt
xchg
loope
push
je
out
sub
outsb
pop
daa
test
das
adc
popa
ljmp
add
iret
or
xchg
mov
push
or
cs
cmpsl
data16
xlat
xor
adc
jns
jo
dec
mov
negb
lret
bound
mov
sarl
popf
mulb
inc
and
cmp
loope
out
out
into
sub
testb
sub
pop
pop
enter
jns
adc
aam
mov
shl
out
inc
sti
pop
dec
fs
cld
in
test
jle
fmull
and
hlt
push
pop
in
jp
dec
rcl
mov
mov
movsl
das
mov
push
je
cmp
push
or
push
inc
dec
or
jge
movsl
jo
mov
in
stc
pop
mov
ret
mov
cmp
xchg
pusha
jae
xchg
xor
pop
in
pushf
insb
fucomi
sti
out
sbb
sub
sub
inc
pop
dec
jle
in
mov
or
dec
xchg
or
cmp
outsl
jne
pop
mov
add
jle
xchg
jbe
leave
pop
stos
fscale
arpl
mov
cmp
adc
pusha
nop
xor
out
cmpl
xchg
jo
cmp
cmc
dec
pop
rolb
push
cltd
test
dec
xor
mov
dec
leave
pop
and
or
ss
push
clc
dec
sub
push
push
cltd
dec
aad
jecxz
ret
loope
inc
jns
cmp
cltd
mov
xchg
mov
xor
push
ret
xchg
lcall
pushf
in
adc
cmpsl
mov
adc
cmc
or
into
pop
clc
mov
mov
pushf
out
jge
or
inc
lds
sub
jl
pop
cld
xchg
mov
inc
int3
add
push
fnsave
push
arpl
jge
mov
pop
and
xchg
jnp
push
adc
mov
lea
push
xchg
push
xor
xchg
xchg
scas
aad
mov
jecxz
mov
cmp
jne
insb
ja
mov
adc
dec
xchg
jle
fisubrs
fsubr
xchg
dec
pop
idivb
in
inc
pop
jge
inc
fsubr
das
incb
sbb
in
mov
dec
xor
xchg
lock
daa
stos
pop
dec
inc
pushf
repnz
stc
in
inc
dec
lret
cwtl
mov
mov
jge
xchg
cmpsb
and
loopne
xor
mov
and
jae
icebp
cs
je
repnz
or
andl
mov
sbb
out
pop
andl
push
lods
adc
and
push
adc
pop
inc
sub
sub
lds
daa
daa
xor
cld
test
sbb
add
iret
int3
xchg
push
xor
add
pop
push
push
mov
cmp
push
sub
sub
arpl
outsb
outsl
loop
jp
testb
js
imul
jae
shl
js
mov
imul
subb
sbb
daa
sarb
stos
mov
std
jnp
fdivl
fisubrs
and
inc
push
xchg
or
inc
lea
or
pop
pop
faddl
pop
ret
out
movsl
arpl
mov
mov
jns
jl
icebp
sarl
pop
xor
and
jb
in
mov
test
repz
lahf
or
outsl
andl
clc
xchg
in
pushf
push
mov
int3
mov
push
mov
dec
mov
sahf
pop
sub
fs
das
xchg
pop
jae,pt
shrb
scas
push
in
orb
xchg
imul
in
add
clc
call
add
addb
push
loopne
fs
mov
push
loop
push
out
ret
out
imul
ljmp
cmp
mov
hlt
cmp
jp
xchg
xchg
jg
jg
movsl
xor
test
sahf
pop
xchg
xchg
hlt
icebp
add
push
movsl
and
rdmsr
cmp
push
push
adc
sbb
ds
adc
bound
xchg
xchg
or
push
out
sub
and
push
bound
inc
imul
fldl
ss
jmp
pop
ret
pop
mov
lds
hlt
call
add
pop
fsubrs
js
leave
sub
mov
pop
lods
inc
sbb
ss
dec
or
mov
ljmp
xorl
je
sub
xchg
int
cmpsl
notl
sub
mov
pop
jge
ret
pop
sub
lahf
jp
negb
lods
aas
mov
sub
pop
push
mov
test
stos
es
call
adc
in
out
fnsave
push
arpl
stos
and
icebp
inc
movsl
push
aas
xchg
popa
adc
xchg
mov
lret
lret
dec
clc
push
cmpsl
and
into
loop
inc
lds
pop
aad
dec
xlat
lods
push
xchg
and
adc
mov
jbe
push
in
fisttpll
mov
mov
push
mov
mov
in
jmp
scas
mov
loope
or
test
das
mov
mov
cmp
movsl
jnp
pop
adc
hlt
sbb
sub
das
scas
scas
push
inc
int
xor
sub
xor
pop
jne
push
insb
add
in
cmpps
movsb
jno
add
sbb
xor
stos
rorb
mov
sbb
mov
mov
add
test
xor
fsubrl
or
cld
and
dec
testb
xor
repz
dec
cmp
pop
and
mov
bound
imul
mov
lods
int3
in
loopne
sub
push
push
mov
sub
lock
movsl
iret
into
data16
push
add
inc
push
fsubr
mov
pop
lret
aam
cmpsb
outsl
fnstenv
or
lock
sbb
inc
aas
imull
and
cmc
xchg
bound
xor
xchg
push
add
mov
icebp
cltd
push
out
cmp
and
mov
jp
fcomps
xchg
push
movsb
jno
fstpl
test
adc
push
lods
xchg
loop
pop
fwait
mov
push
and
and
lods
add
jle
mov
les
popa
mov
push
or
into
fs
scas
xchg
out
sbb
xchg
nop
cmc
movsb
inc
movsb
jg
push
insb
xor
dec
push
push
cmp
shll
cmc
cli
xchg
daa
lods
ja
add
xchg
lea
cwtl
or
adc
or
mov
ljmp
push
sub
xchg
mov
ljmp
rcll
sbb
xor
push
push
rcr
cmp
fsub
sbb
aad
rolb
idivb
lret
daa
sbb
cmpsl
sub
aad
fnsave
in
and
and
and
xchg
lods
jnp
leave
shrl
mov
mov
dec
jp
rclb
icebp
fsubr
pop
fbstp
jg
xchg
call
xor
dec
jg
enter
mov
push
cld
frstor
ret
pop
mov
loopne
and
mov
push
addr16
jnp
or
lahf
xor
imul
shrb
mov
loope
cmc
cmpsl
cmovb
mov
mov
or
aam
imul
xchg
mov
rorl
dec
pop
mov
rcrl
xchg
mov
lock
ret
call
pop
sbb
inc
data16
rcl
pop
fdivrs
in
test
sti
std
fnstsw
cld
aaa
into
sub
leave
dec
mov
adc
lods
jb
adc
lods
mov
and
adc
sbb
xchg
stos
in
and
mov
mov
inc
push
icebp
inc
xchg
stos
aam
cmc
outsb
fwait
sbb
xchg
mov
adc
shr
pop
mov
pop
lahf
rolb
dec
dec
shll
xorb
cmpsl
lock
pmulhuw
xchg
out
out
xor
xchg
dec
and
push
add
jmp
or
lahf
loop
xchg
or
pop
jns
call
push
aad
mov
ljmp
icebp
and
imul
add
sub
es
pop
inc
cmp
xor
sub
xchg
push
mov
sub
dec
add
ret
mov
ret
cmc
mov
ljmp
mov
or
pop
fisubl
jb
push
mov
mov
pop
sahf
push
scas
daa
jo
cmc
sbb
out
push
jo
push
push
inc
fistl
inc
push
mov
jle
sahf
push
fidivs
out
test
xor
subb
outsl
jmp
subl
cld
cmp
popa
push
jno
movsb
leave
mov
cwtl
sub
push
les
inc
mov
mov
adc
js
ret
push
xor
sbb
push
lret
and
cld
fiaddl
mov
adc
pop
int
sti
arpl
das
inc
aas
ja
xor
loopne
in
sbb
jbe
xchg
mov
mulb
cmp
mov
xchg
dec
or
in
and
mov
adc
imul
jle
jmp
cmp
fmull
mov
shlb
sbb
push
dec
in
pop
and
out
jmp
jl
sub
jb
dec
test
leave
cwtl
or
addr16
mov
jb
sbb
fnstenv
pusha
add
in
and
jmp
loopne
xlat
mov
popa
fmul
cmpb
jbe
cmpsb
and
scas
mov
dec
xor
dec
mov
mov
inc
fdivl
mov
in
in
push
maxps
idivb
mov
shll
inc
jns
test
or
stc
out
xchg
sbb
sub
xchg
add
or
xchg
and
lcall
push
leave
mov
pop
aam
pushf
add
inc
scas
mov
outsl
sub
lahf
rcrl
and
lds
mov
lcall
mov
pop
lock
arpl
jbe
mov
or
inc
fnstsw
fistps
xchg
xchg
xor
fnstcw
or
cld
xchg
mov
negb
lods
push
aaa
push
xlat
fstpl
adc
push
scas
jb
cltd
fwait
push
dec
js
sub
inc
icebp
fidivrs
mov
popf
and
adc
cmpsl
bswap
xchg
jns
mov
or
cmp
sub
dec
pop
fwait
fwait
call
and
mov
rolb
sbb
pop
inc
mov
shrb
aad
xchg
dec
sbb
cmp
leave
dec
bound
push
mov
in
test
push
repz
in
ret
test
xor
push
push
aad
loop
inc
or
ljmp
sbb
cmpsb
adc
popf
mov
add
sbb
and
shrb
lret
jne
pop
into
es
push
or
jmp
jno
shlb
push
popa
xor
aad
bswap
test
in
test
dec
or
pushf
fldl
push
adc
sub
xlat
xor
orl
or
insb
subl
mov
aad
insb
xchg
fidivs
adc
push
push
out
scas
inc
push
mov
fwait
ds
data16
sub
dec
test
jmp
push
flds
lahf
cmc
xor
nop
mov
scas
out
push
jbe
mov
add
sub
xchg
js
push
push
enter
push
aaa
mov
sbb
rcr
je
shll
cli
sub
sbbb
and
mov
jmp
sbb
push
inc
ljmp
jge
jecxz
lahf
into
xor
loop
imul
cmp
xchg
loope
cmp
mov
jne
pop
jmp
ss
jns
and
out
dec
sub
rcl
inc
xlat
or
cmp
jp
test
hlt
xor
orl
mov
xor
pushf
mov
inc
stc
cld
jmp
xor
inc
adc
sub
lahf
cmp
lcall
ret
sbb
out
iret
loope
nop
push
jae
push
test
mov
test
pop
push
test
add
cmc
arpl
push
enter
sub
ret
pusha
aaa
insl
jo
push
push
dec
dec
jmp
popl
repnz
mov
ret
shlb
adc
mov
xchg
or
arpl
pop
cs
jl
mov
jecxz
fistps
jge
push
loope
ljmp
mov
sub
loopne
nop
loopne
sub
out
sarb
mov
or
pop
aad
pop
push
mov
cmpsb
cmp
fdivl
pop
sub
sbb
push
jp
cmp
les
mov
negb
lahf
ss
push
lock
rol
cmp
rcrb
das
push
cmc
sub
fstpl
jp
jl
fisubrs
cld
rorl
inc
cmp
add
jne
adc
cmp
or
xlat
pushf
fcmovbe
mov
mov
jecxz
dec
xchg
add
adc
ss
lods
inc
sbb
pop
dec
fs
int
pop
repnz
mov
xor
in
lock
mov
jbe
mov
fwait
idiv
and
iret
insl
nop
sahf
push
incb
int3
aaa
jmp
xchg
mov
push
dec
ss
movb
gs
lods
xor
push
xor
popa
sub
push
dec
int3
jg
or
orb
cmp
and
pop
cmp
mov
lcall
inc
je
xor
pushf
les
push
rclb
or
xorl
outsl
push
aam
data16
int
pop
aaa
je
popf
sahf
add
inc
mov
pop
sub
out
icebp
inc
xor
fs
pop
mov
ficompl
scas
mov
aas
push
lret
cltd
pop
push
test
cmp
adc
or
pop
cmp
arpl
add
dec
cs
and
test
xchg
jmp
fiadds
mov
jecxz
insb
jle
sub
fwait
bound
mov
inc
addr16
in
xchg
out
mov
ja
xor
test
sahf
xor
xor
test
clc
leave
adc
sti
sbb
xorb
dec
je
pop
fidivs
or
lods
cmp
xchg
shll
rorb
cmc
loope
push
xchg
in
pop
cmpsl
fstps
movsb
cmp
cmp
roll
faddp
fstl
mov
mov
push
add
mov
scas
ret
es
jg
sbb
clc
mov
sub
popf
sub
xchg
mov
leave
mov
adc
dec
hlt
push
jge
push
sahf
xor
daa
insb
push
and
ffree
dec
xor
jge
adcb
pop
push
ljmp
jno
pop
xorl
mov
cmp
mov
sub
test
into
and
push
or
dec
sub
and
xchg
xchg
push
mov
sbb
xor
cmp
and
pop
sbb
jge
daa
xor
gs
sbbb
std
inc
stos
movsl
scas
or
pop
xlat
push
leave
xchg
add
xor
aad
cmp
mov
and
pushf
push
dec
into
inc
xchg
scas
mov
addr16
test
xchg
or
jmp
lods
xor
ret
pop
mov
mov
test
loopne
movb
push
rcrl
push
imul
sbb
ds
sub
mov
ficoms
aad
and
imull
mov
adc
es
les
sbbb
out
xchg
sbb
and
mov
and
and
inc
test
iret
aam
sahf
push
adc
scas
sbb
fidivrs
int
int3
arpl
arpl
pusha
lods
cmp
jbe
push
in
pop
or
jae
in
into
mov
dec
inc
inc
add
loopne
pop
shl
xor
addr16
cli
dec
or
xor
cmpsb
js
fdivs
adc
mov
jbe
sub
dec
outsb
notl
arpl
xor
mov
into
arpl
mov
int
sbb
out
enter
pop
or
dec
dec
jne
sub
ret
inc
cmc
out
xor
gs
sub
imul
cmpsb
mov
inc
stc
into
enter
adc
repz
adcb
mov
leave
xchg
inc
fsubrs
ret
sbb
xor
fs
sbb
xchg
and
aad
mov
iret
arpl
jbe
mov
inc
adc
fdivl
mov
cmp
sarl
and
dec
sbb
js
mov
push
add
dec
push
cmp
sub
pop
jno
push
add
adc
mov
dec
in
inc
or
push
in
ret
adc
fmull
mov
stos
push
loopne
xor
sub
mov
xchg
inc
fnsave
inc
arpl
mov
push
jns
rcr
mov
jb
inc
sahf
mov
sahf
clc
fcmovu
cmp
mov
aam
vaddsd
les
sub
mov
push
out
popl
cmp
jae
mov
nop
lds
adc
xor
sbb
pop
lret
lods
adcb
test
push
ljmp
repz
aad
xchg
ljmp
lock
add
and
adc
aaa
lcall
outsl
xchg
mov
int
rcr
push
mov
fmuls
sbb
pushf
das
xor
push
aas
loope
or
lods
andb
sbb
lods
adc
xor
mov
pop
cmp
add
icebp
jp
mov
aas
jg
sahf
and
mov
xchg
jecxz
scas
out
pop
xor
mov
or
inc
cltd
mov
scas
inc
fneni(8087
push
or
arpl
aad
mov
movsb
push
or
daa
inc
pop
lock
jge
out
lock
jno
push
jno
mov
insb
ficomps
sbb
cmpsb
icebp
inc
les
sti
push
mov
adcl
int3
sbb
jo
mov
adc
pop
push
jecxz
push
aas
adc
std
cmc
das
addr16
aas
mov
loope
mov
daa
jne
xor
les
stc
push
push
lods
adc
sar
sbb
lret
popa
mov
xorb
fdivrs
mov
aaa
fldcw
or
xchg
in
rclb
cmp
sbb
pop
out
ret
out
add
dec
call
xchg
pop
cld
pop
lahf
pop
push
imul
mov
add
enter
xchg
add
or
lahf
xor
mov
aaa
cmpsl
out
fstps
repnz
push
fldcw
xor
push
xchg
fpatan
mov
cmp
xor
into
mov
dec
dec
pop
pop
lods
ljmp
xchg
cmp
loope
jp
jns
lds
scas
xor
aas
mov
push
fsubrs
out
int
ja
adc
loopne
pop
out
mov
loop
movsw
test
xlat
xchg
mov
and
sub
push
sti
scas
and
mov
test
mov
imul
pushf
sbbb
cmp
into
push
mov
or
shll
mov
add
lods
xchg
hlt
inc
movsb
cltd
popa
bound
mov
cmp
fsubr
mov
lods
int3
push
mov
lret
xchg
mulb
pop
movsl
fwait
mov
add
sbb
pop
out
lods
movsl
jnp
test
cmpsb
dec
pop
imul
fsub
add
or
test
push
jb
insl
aam
xchg
mov
les
cmpsb
xor
xor
pop
icebp
ja
xor
in
popa
adc
call
movsb
in
sbb
stc
xor
fisubl
pop
push
and
fdiv
gs
or
mov
push
imul
icebp
insb
inc
in
cmpsb
cmp
pop
leave
mov
int
inc
add
test
lret
cld
pop
lock
sub
pop
push
pop
mov
mov
cmp
add
icebp
enter
lock
dec
test
xor
pushf
pop
gs
xchg
fisttps
cmpsb
mov
add
sub
xchg
test
jb
iret
leave
sbb
stos
sub
inc
dec
inc
popf
pop
cltd
test
pop
ret
and
hlt
jg
stos
pop
push
aas
aad
sahf
cmpsb
or
jne
jns
int
sbb
aad
jb
jb
sub
mov
cmp
mov
js
shrb
jge
jne
xchg
out
dec
loop
adc
xor
xor
fildll
test
mov
mov
pop
cmp
and
movsl
js
aaa
mov
push
fwait
out
lret
dec
adcl
push
mov
push
fisttps
inc
pop
mov
das
jno
add
sbb
dec
out
out
ret
and
mov
popa
and
mov
jge
jg
repz
ret
cmp
add
sbb
shlb
pop
xchg
daa
repnz
add
pop
popl
ret
ret
pop
movsb
or
mov
sti
ret
out
lahf
lea
xor
pop
and
ja
scas
mov
fstpl
push
push
inc
lahf
xor
or
scas
push
orb
lods
outsl
stc
and
jae
xchg
lock
mov
mov
add
xchg
inc
push
repz
sbb
sub
adc
in
shlb
push
out
jle
loope
enter
stos
sub
push
ret
fnstsw
das
sub
and
inc
xlat
int
xor
push
je
cmp
int
inc
icebp
scas
out
jb
inc
mov
sbb
popf
dec
int3
lret
jmp
sarb
or
out
xchg
outsb
js
pop
cmp
int
repnz
xor
dec
inc
and
dec
and
xor
pop
adc
mov
pop
dec
xchg
aam
imul
test
mov
repz
cmp
cmc
daa
pop
leave
lods
ljmp
out
inc
je
call
inc
mov
lea
push
push
test
pusha
cmpsl
mov
repz
mov
fldt
cmpsl
icebp
adc
jne
mov
aam
movsb
push
dec
divl
pop
mov
add
iret
sbb
test
call
mov
lcall
cmp
xor
dec
push
xchg
out
cmpsl
popf
into
cltd
insb
sbb
mov
or
xchg
pavgb
cmpsl
out
cmp
push
test
ret
es
ret
mov
adc
pop
call
or
iret
mov
popa
mov
pusha
inc
outsb
sbb
push
fisubs
add
in
lods
inc
pop
push
push
add
add
pop
jmp
and
mov
shlb
lock
fwait
xlat
call
dec
lahf
inc
rcr
xor
lods
es
out
dec
mov
mov
adcb
adc
cmp
je
loopne
mov
lods
mov
xor
jbe
jb
xchg
push
xchg
insl
js
dec
mov
cmp
lcall
aam
sbb
xchg
sti
mov
sbb
in
adc
mov
into
xor
out
cltd
ja
scas
pushf
cmp
push
nop
xor
test
inc
xchg
outsb
mov
add
cmc
dec
push
mov
mov
cs
ja
mov
xchg
ret
adc
lahf
je
sbb
cmp
push
jl
push
cmpsl
ret
sub
xor
add
lea
mov
gs
jbe
out
dec
bound
mov
sbb
ljmp
cmpsb
mov
push
mov
xchg
insl
lcall
dec
push
inc
mov
sahf
aam
jl
pmulhuw
into
mov
repnz
adc
pushf
movsl
adc
push
jg
clc
jge
push
cmpsl
inc
sti
jg
add
add
cld
mov
fnsave
or
add
cmp
mov
pop
in
lock
jecxz
cmp
adc
xchg
andb
sub
fisubs
jp
out
call
mov
ret
sbb
or
scas
sbb
mov
mov
test
mov
cld
and
movsb
sub
ljmp
or
test
mov
inc
mov
and
ficoms
mov
stc
lds
xorl
pop
mov
out
loopne
jmp
rcrb
xor
xchg
inc
lods
mov
xrelease
fsts
enter
es
stos
cmp
lcall
and
xor
fs
add
inc
push
xchg
fidivs
loop
sbb
test
mov
jmp
mov
jb
xchg
js
xor
push
mov
cmpsl
icebp
sub
or
adc
sbb
pop
mov
outsl
icebp
nop
loop
icebp
cmp
mov
cmp
daa
cld
sbb
sbbl
jbe
iret
jno
xor
jns
cmpsl
mov
mov
add
imul
pop
das
add
mov
jno
add
xor
testl
jae
mov
les
inc
adc
xchg
mov
pusha
push
scas
gs
mov
and
imul
mov
push
imul
adc
fs
js
push
das
cli
push
jge
es
gs
add
cmpsb
std
xchg
loopne
fsubrl
xchg
mov
xor
adc
pop
cmp
test
sbb
subb
out
pusha
movsb
xor
mov
pop
rorl
testl
sbb
jb
mov
lea
add
adc
loopne
push
push
cmpsl
sarb
gs
or
shlb
sbb
mov
dec
or
mov
std
es
dec
sbb
icebp
imul
and
rcrl
or
push
dec
mov
stc
sbb
dec
sbb
and
fsubrp
inc
add
xchg
lahf
add
pop
cs
sbb
xchg
std
shl
mov
imull
xor
rolb
fs
inc
pop
mov
repnz
cli
adc
shrl
lock
dec
in
adc
lret
push
mov
mov
ret
jl
jp
push
repnz
cmpsl
mov
das
call
xchg
cmp
mov
mov
push
cli
or
mov
data16
push
jmp
dec
ret
push
jmp
sbb
mov
dec
and
nop
xor
call
xchg
scas
pop
cltd
fucomip
out
lcall
xchg
imul
and
iret
lods
es
dec
mov
js
adc
dec
push
sbb
add
cmp
mov
xchg
and
or
hlt
inc
inc
leave
mov
lods
cmp
gs
inc
scas
inc
js
dec
cmp
aam
jbe
inc
mov
rclb
fldcw
loop
es
push
fdivrs
pop
aaa
dec
adc
sbb
xor
insl
sub
or
push
call
add
cld
adc
pop
rcrl
les
jp
out
js
mov
xchg
cli
xchg
aas
lds
push
mov
mov
dec
fs
sarb
jg
ror
pop
sub
testb
aad
cmp
dec
divb
push
out
jnp
dec
in
pop
outsb
cltd
mov
and
jg
andb
icebp
jnp
adc
cmp
lcall
arpl
filds
pop
je
data16
lahf
mov
roll
test
fcoml
sub
jnp
out
add
outsl
pushf
stos
and
sbb
pop
lahf
or
sbb
fs
push
out
dec
movsbl
jno
hlt
mov
xchg
pusha
cmp
jl
xor
sbbb
xor
mov
sbb
adc
adc
xor
jl
push
xor
ss
fsubrs
dec
dec
rcrb
dec
push
adc
cmp
stos
mov
ficoml
out
ficomps
adc
je
push
js
rolb
test
jle
push
scas
mov
filds
mov
out
and
testb
mov
mov
lea
lods
inc
jno
sub
xchg
lret
cwtl
fnstenv
xchg
insb
iret
out
xorb
dec
popa
fsubl
xor
incl
shrl
and
aad
loopne
iret
int
push
pop
mov
into
loop
cld
scas
insl
add
sbb
pusha
mov
mov
jnp
inc
js
lods
test
sbb
pop
outsb
and
shll
outsl
push
imul
ss
aaa
or
addl
mov
lcall
mov
in
pop
incl
cmpsl
jge
fldl
or
inc
jno
std
cmp
inc
fisubrl
das
sub
jae
mov
sbbl
enter
call
mov
xor
lret
or
cld
mov
add
pop
xchg
and
ficompl
xor
es
or
dec
frstor
movlps
pop
scas
inc
fbld
mov
lea
mov
hlt
jge
or
insl
or
clc
ds
std
int3
int3
or
test
lret
jp
call
add
icebp
or
loopne
pop
not
push
jno
hlt
repnz
cs
bts
mov
jne
dec
and
xlat
fcmovu
xor
pop
mov
jmp
sbb
or
mov
and
pop
jne
test
and
mov
rolb
lods
dec
mov
shlb
xchg
push
addr16
cltd
add
and
enter
out
aaa
repnz
inc
mov
int
movsb
movsl
push
les
and
pop
repz
jge
icebp
mov
jae
lods
lods
mov
in
mov
aaa
out
scas
cmp
out
fs
jp
mov
and
cmp
sbb
loopne
mov
ret
pop
xorb
inc
lock
ljmp
ljmp
or
mov
jge
adc
xchg
dec
fmull
test
inc
std
jnp
test
pop
subb
cmpsb
repz
dec
pop
out
cmp
pusha
ret
xchg
loopne
mov
xchg
add
push
loope
addl
dec
repnz
mov
repz
push
int3
mov
pop
addr16
out
jp
xchg
or
xor
rcll
add
xor
mov
enter
pop
push
out
mov
arpl
js
ret
dec
out
lret
fidivl
into
inc
cmp
inc
data16
out
jbe
pop
mov
js
xchg
dec
mov
int3
call
ds
mov
lahf
cmp
sbb
mov
jmp
push
stos
shrb
push
push
xor
fwait
jbe
hlt
fwait
sti
fisubs
adcl
clc
nop
scas
mov
cmp
rclb
insb
sbb
cmp
pop
jmp
push
add
dec
xor
pushf
aad
fnsave
mov
aam
iret
sbb
mov
jle
add
mov
xchg
cmp
imul
adcl
cmp
push
leave
sub
stc
xor
sar
in
sar
jno
test
dec
add
ss
add
mov
dec
inc
outsl
out
cmp
ss
fxch
xor
pop
iret
es
or
jae
mov
add
mov
adc
loopne
pop
notb
mov
les
push
adc
repz
std
cld
lret
pop
cmc
cld
imul
stc
add
notl
sahf
dec
popf
dec
or
clc
add
xor
popf
or
jae
and
lahf
ss
inc
adc
cwtl
fs
xchg
or
xchg
push
rcll
jge
iret
mov
scas
dec
in
aas
adc
into
loopne
xor
mov
bound
loope
cld
iret
or
cs
add
xchg
mov
push
pop
rorb
outsl
push
fidivrl
and
fucomp
xor
pop
inc
fcompl
xor
inc
sub
andl
dec
pop
shrb
push
dec
addb
sub
and
pop
pop
add
cmpsb
test
sbb
call
mov
jb
push
leave
ret
insb
movsl
mov
aad
int
adc
cmc
cmp
btc
fwait
ds
int3
bound
xchg
out
mov
or
or
stos
mov
xchg
mov
fsubr
mov
test
mov
jge
and
lahf
push
iret
loopne
les
inc
push
push
dec
pop
jb
lahf
mov
ja
dec
xchg
std
push
xor
fists
xor
negb
lods
call
movsb
pop
inc
or
les
loop
xor
mov
mov
ret
mov
lds
hlt
out
sbb
lds
adc
and
bound
or
ret
icebp
or
popa
mov
clc
lock
int3
ds
push
daa
mov
out
sbb
push
or
aad
dec
inc
loop
mov
lock
repnz
xchg
je
xchg
xchg
sbb
enter
xor
mov
cmp
cli
sbbl
inc
ficomps
jne
push
in
push
movsb
mov
pusha
sub
lock
mov
lahf
push
lea
testw
in
pop
dec
jmp
dec
sbb
je
out
pop
and
in
inc
push
jae
sbb
dec
mov
mov
and
add
sbb
movsl
pop
pusha
adc
pop
pop
popf
mov
and
adc
inc
dec
xchg
std
inc
rorl
or
xor
mov
sub
and
ja
jbe
stos
jno,pn
shlb
mov
jbe
push
add
pop
dec
mov
and
jecxz
mov
xor
jne
das
jno
loopne
sti
lret
fildll
dec
mov
xor
mov
dec
dec
imul
test
stos
sub
cs
out
push
push
cli
pop
mov
mov
rcll
xchg
cli
pushf
les
mov
jo
push
sahf
flds
lods
stos
lods
xor
push
lret
jae
jno
mov
sbb
sub
movsb
insl
inc
sub
mov
movsb
dec
leave
es
sub
add
and
pop
fsubrs
loop
cmp
jnp
xchg
cwtl
jae
or
ficoms
or
movsl
mov
pop
repnz
xor
test
jbe
cmp
dec
adc
inc
imull
sarl
and
jb
sbb
ss
inc
lock
neg
mov
push
aad
inc
stc
sbb
dec
in
adc
imul
imul
mov
daa
push
or
shll
dec
add
outsb
lcall
jp
shrb
xchg
jne
cwtl
cs
idiv
test
dec
jno
dec
mov
inc
iret
push
jne
js
rcrl
outsl
bound
in
stos
movsl
icebp
mov
js
ds
stos
cltd
int3
pop
mov
fsub
inc
or
fwait
bnd
negb
or
or
fnstenv
popf
or
bound
mov
aaa
cmp
xor
adc
adc
sbbl
ret
dec
jo
imull
adc
cli
push
fwait
test
mov
adc
sbb
nop
jg
divb
jmp
aad
adc
stos
cmc
jbe
pusha
arpl
orl
out
cmpsb
test
incb
js
inc
fidivrl
mov
or
and
pushf
cwtl
repz
push
insb
add
subb
dec
xlat
jp
imul
or
pop
ret
pop
mov
jo
std
out
pop
push
push
pop
imul
cmpsb
add
sbb
pop
out
xlat
mov
jns
mov
mov
lock
and
popa
test
pop
addr16
out
mov
add
sub
dec
dec
notl
pop
outsb
push
cmpsb
sti
cmp
aam
xchg
icebp
add
or
ds
jae
ss
fcomps
push
add
test
repnz
hlt
leave
jecxz
jge
aad
push
lcall
cmp
xchg
pop
xchg
or
pop
and
bound
sti
nopl
jl
mov
jae
mov
roll
xchg
out
fnstsw
dec
sbb
jle
or
insb
xchg
lock
mov
dec
jle
push
cltd
sub
out
xchg
adc
add
addr16
ret
aas
jbe
pop
das
push
or
scas
js
int
pop
xor
lods
jo
test
sar
sti
call
sar
sbb
and
mov
fwait
mov
rcrb
pop
out
popf
call
mov
or
cmp
push
jo
jno
cmpsw
fnsave
sbb
filds
push
mov
mov
xlat
call
mov
xchg
xlat
jmp
add
xchg
sub
cmp
cwtl
xor
push
mov
lret
hlt
stos
lock
and
movsl
sbb
lret
inc
clc
call
test
sarb
rcll
ror
outsl
dec
fbld
cmpl
bnd
push
out
push
nop
push
movb
sub
pop
push
les
cmc
or
stos
scas
es
and
test
subb
mov
dec
js
cmp
push
push
enter
rcll
mov
push
mov
nop
jae
inc
pop
mov
push
adc
aas
sbb
lock
xor
inc
dec
mov
jecxz
ret
sti
lahf
mov
jg
xor
push
divl
lea
stc
cmp
arpl
push
xchg
rcrl
inc
aam
adc
add
mov
jl
sbb
mov
in
loop
fs
jmp
adc
mov
sbb
mov
jns
sbb
xchg
adc
in
rcll
jne
xchg
or
add
imul
mov
sti
or
mov
or
jne
fwait
or
lret
fs
loop
shlb
jnp
inc
mov
fcmovb
and
mov
mov
insb
stc
inc
fwait
mov
cmpb
add
add
mov
test
or
daa
data16
push
leave
loopne
frstor
stc
call
ret
inc
inc
insb
movsl
mov
stc
push
inc
cmp
ljmp
shl
xchg
sbb
fwait
xor
sbb
add
aas
cmpsl
cvtps2pi
inc
or
mov
push
pop
jle
xor
and
pop
xor
clc
jae
fcmovne
mov
lcall
cli
pop
sub
outsl
xor
cmp
orl
xchg
jns
add
mov
push
aam
sub
push
dec
cmp
mov
lods
and
stos
sub
push
sub
xor
cmp
xor
movsb
cmp
jl
fs
mov
push
cmp
nop
icebp
mov
dec
inc
shll
or
mov
int3
cmp
scas
and
es
cli
mov
bnd
out
in
sub
js
int3
dec
add
outsb
inc
push
fidivrl
mov
mov
fucomi
stc
sbb
sbb
int
sbb
out
hlt
push
adc
sbb
mov
xchg
sub
sub
sbb
daa
fbld
fsubrp
ret
pop
xchg
jmp
and
pop
mov
sbb
decl
fdivs
shll
add
mov
in
addr16
push
add
mov
mov
jne
cwtl
adc
lahf
sbb
dec
add
in
pop
fmull
xchg
fsubrs
out
mov
sub
scas
cmp
roll
jae
lods
add
es
loope
pop
test
call
imul
pop
add
xor
fadd
lcall
sbb
mull
or
jb
arpl
add
into
dec
test
cltd
aaa
insb
adc
cmpsb
shrb
inc
loope
mov
mov
sbb
pop
xchg
aam
cmp
pop
jmp
popa
mov
jecxz
mov
mov
jmp
jp
push
xor
fdiv
cli
xor
push
xchg
mov
in
add
xor
fildll
cmp
aad
adc
and
adc
dec
fucomip
sbb
testl
sti
mov
adc
pop
and
pop
repz
popa
je
push
cltd
sahf
xchg
int3
push
sbb
stc
adc
imul
adc
mov
ret
imul
inc
aas
data16
mov
fldt
in
test
inc
ds
test
nop
sbb
mov
in
adc
loope
dec
mov
rcl
xchg
ss
push
adc
sub
mov
shlb
das
sbb
bound
nop
push
pop
pusha
adc
leave
pusha
sub
psubsb
inc
out
jno
mov
xchg
mov
iret
dec
fsts
rcl
push
pushf
and
mov
xor
lods
and
mov
je
mov
fidivs
aas
mov
inc
push
mov
enter
jp
loop
mov
mov
roll
add
movsl
lods
in
mov
popf
pop
mov
cmp
ja
inc
clc
lods
sbb
adc
rcrl
pop
add
aad
add
dec
inc
test
xor
push
loope
dec
sub
outsb
or
sub
push
mov
mov
lods
add
xchg
and
insb
add
sub
and
add
je
xor
mov
mov
add
jns
sarl
les
popa
mov
fs
jp
cmp
addr16
cwtl
das
data16
out
lret
aam
jmp
sub
out
fs
mov
out
repnz
add
and
push
cmp
popa
inc
and
jnp
es
xchg
mov
mov
sbbl
mov
mov
cli
adc
lods
mov
push
pop
jno
mov
mov
xchg
jo
inc
jb
pusha
andl
dec
popa
jne
xchg
cmpsb
sub
mov
jne
daa
fiaddl
loope
sahf
pop
lret
adc
aam
call
xor
sahf
adc
imul
pop
cmp
push
xchg
xchg
ljmp
cmp
fidivl
pop
imul
cmp
dec
test
mov
dec
mov
pop
repz
insl
int
loopne
bound
push
outsb
fs
jp
lcall
loopne
pushf
xor
ret
adc
inc
arpl
push
xor
leave
ds
or
or
jge
negl
jae
push
test
dec
out
mov
lahf
mov
insl
dec
sbb
aas
lods
sub
test
pop
dec
rep
jmp
push
pop
hlt
mov
std
test
rcll
add
push
lret
pop
cmp
addr16
inc
inc
pop
outsl
cld
lcall
cmpsb
hlt
aam
inc
or
inc
sub
bound
jg
dec
adc
loope
xchg
and
add
mov
push
cmp
adc
fisubl
mov
addr16
push
mov
rolb
add
inc
mov
or
stos
dec
out
rorl
fimull
mov
aaa
in
cmp
ret
inc
ljmp
into
mov
jne
fdivl
pop
mov
nop
and
ljmp
es
loopne
push
inc
sbb
vpcomub
xchg
lea
cld
sbb
pop
mov
ror
mov
loopne
mov
mov
jno
mov
cmp
and
mov
decb
adc
decl
sbb
jnp
pop
lock
lods
sub
lods
js
push
jl
cwtl
fsubr
leave
rolb
sbb
push
mov
push
lea
mov
mov
leave
pop
cmp
pop
cmc
fcmovnu
xlat
sub
xchg
sub
inc
sahf
jne
or
sti
xchg
mov
jnp
test
cwtl
xchg
xchg
out
fdivrp
jb
sbb
popa
jg
jl
ds
mov
mov
jns
call
cmc
jo
jmp
je
outsl
shll
pop
push
movsl
cld
les
cld
cmp
adc
pop
popf
dec
pop
lcall
push
jne
push
leave
sbb
sbb
loopne
mov
sub
jmp
or
ja
scas
arpl
call
or
push
in
xchg
xchg
nop
push
shll
lea
mov
xchg
insl
adc
inc
inc
inc
jecxz
out
xchg
xchg
cwtl
icebp
mov
stos
movups
jg
idivb
rol
inc
push
out
cmp
xor
jns
add
loopne
inc
push
mov
pop
sub
pop
rcrb
mov
cwtl
rorb
sbb
pop
fimull
lds
aaa
push
test
cmp
push
jmp
inc
mov
mov
lods
ss
daa
push
mov
fdivr
sub
push
ret
enter
and
mov
sti
daa
addr16
pop
sbb
lahf
dec
xor
pop
in
ret
sbb
add
insl
mov
shlb
inc
and
adcb
cmpl
outsb
sub
xor
test
cmp
lahf
sbb
adc
fcompl
shlb
push
jne
inc
std
popa
inc
cmp
xchg
jge
cmp
xchg
jbe
add
pop
sahf
popf
cli
lcall
pop
cli
pop
gs
mov
cmp
dec
xlat
sti
dec
cmp
imul
into
imul
inc
stos
lds
test
xlat
out
adc
push
push
repnz
xchg
enter
out
or
bound
mov
inc
in
adc
inc
jg
sub
ss
in
xchg
jno
pxor
sbb
and
pushf
mov
outsb
mov
lock
sahf
lock
ja
mov
and
mov
or
pop
loopne
jle
jbe
xor
vcomiss
aad
mov
cmp
lahf
aas
push
frstor
fldenv
dec
sbb
stos
scas
push
pushf
out
pop
adc
les
jle
dec
out
or
cmp
cmpsb
sub
mov
cmc
cli
push
inc
ds
push
push
int3
fs
cmp
mov
ret
or
mov
pop
sub
sbb
bound
sub
jb
out
inc
dec
jge
jecxz
aaa
or
or
sub
xchg
pop
icebp
cmc
into
enter
aas
push
jb
xchg
imul
cltd
lock
add
cmp
mov
aas
into
inc
push
testb
cmp
test
cmp
addb
cmc
cmp
sarl
iret
les
cld
nop
push
das
aam
dec
cli
pushf
in
ret
dec
jecxz
ljmp
sbb
cs
jg
mov
sbb
add
int
leave
sbb
dec
and
out
cmp
out
push
frndint
cmpsb
pop
popl
fistps
push
or
mull
push
stos
scas
mov
push
and
rclb
xchg
sbb
pop
sbb
inc
xor
pop
mov
sbbl
aad
push
mov
and
out
add
mov
sarb
xchg
nop
shrl
rolb
push
call
adc
ss
fstl
cmpsb
lock
test
insb
insb
neg
stc
loop
rdseed
or
popf
adc
xchg
int
mov
test
mov
jmp
adc
push
adc
jo
in
sbb
xorps
mov
cli
loope
jle
ss
loop
or
lock
push
out
pop
imul
xor
cwtl
cmp
lcall
pop
sub
shr
or
sub
and
add
mov
fisubrl
lock
dec
lods
sub
inc
mov
into
movsl
cmp
and
fbstp
mov
and
adc
stos
mov
lcall
imul
and
mov
leave
mov
cmp
imul
jo
pop
iret
or
xchg
push
mov
pop
sbb
or
adc
xchg
pop
pop
addb
cmpsb
xor
inc
rcr
ret
lods
mov
je
repnz
enter
add
xlat
mov
imul
dec
push
pop
mov
mov
pop
sub
into
data16
clc
cmpsb
jbe
dec
or
icebp
add
xchg
bound
jp
cmp
ret
pop
pop
dec
fnsave
loope
mov
mov
std
pop
imul
jecxz
dec
pop
test
imul
dec
aas
dec
xchg
adc
out
sbb
and
fldl
pmaddwd
popa
mov
mov
push
movsl
aaa
jae
jp
inc
outsl
shlb
push
or
dec
dec
out
addr16
jnp
pop
lcall
cmpsb
push
xchg
inc
imul
lahf
mov
stos
push
xlat
inc
adc
xchg
mov
jle
popf
cltd
xor
or
inc
in
les
div
in
std
push
sahf
jg
sub
mov
cmc
shrl
and
lock
insb
mov
jne
or
push
cmp
pop
repnz
in
daa
lret
add
add
fcmovu
push
pop
cmp
push
ret
xor
adc
mov
pop
dec
ss
mov
xchg
mov
cmp
mov
cmp
sub
push
mov
pop
mov
cmp
aam
xchg
icebp
pop
xchg
mov
mulb
scas
xorb
stos
and
inc
int3
sarb
mov
mov
out
cld
mov
pop
pop
add
lahf
lock
push
ret
in
bound
mov
or
push
loope
dec
xchg
out
fstps
cmpsl
into
rcrb
sbb
push
fisttpll
mov
or
insb
popf
mov
iret
mov
mov
xlat
ja
pop
scas
and
pusha
enter
lds
pop
lret
cmp
jecxz
mov
mov
je
push
and
adc
sub
repz
push
je
pop
add
push
out
cmp
cmp
arpl
pop
pushf
pop
cmp
aas
cmp
mov
popa
mov
jns
jbe
mov
add
stc
nop
add
sub
lds
pop
repnz
lret
mov
mov
dec
jne
sub
shrl
add
adc
pushf
push
stos
or
fdivrl
xchg
dec
test
or
inc
arpl
lds
hlt
mov
sbb
leave
jne
fisttpl
add
and
fs
int
mov
mov
xchg
leave
test
fcoml
jnp
loope
or
imul
or
stos
inc
add
insb
mov
and
xchg
outsb
fdivs
testb
lds
aad
les
test
push
fwait
call
adc
inc
std
lock
push
jne
cmp
scas
mov
test
pop
xor
outsb
int3
jg
icebp
sbb
cwtl
jo
inc
lret
xor
mov
pusha
clc
sbb
xchg
divb
movsl
aaa
add
xchg
inc
jno
notb
rclb
imul
repz
lahf
test
fiaddl
or
mov
leave
mov
cwtl
cmp
rorb
aam
fistpl
leave
sbb
stos
outsb
sub
movzwl
call
and
cs
iret
nop
sub
add
xor
lock
movsb
push
add
outsl
or
adc
movsb
lahf
in
icebp
mov
test
test
movsl
add
faddp
or
add
outsb
add
push
jle
ret
add
cwtl
lods
xor
and
mov
stc
xor
xchg
mov
enter
in
nop
sbb
jae
lret
mov
push
addr16
push
inc
pop
push
push
stos
jp
inc
rorl
mov
mov
push
aam
adc
push
std
shl
lret
sbb
lods
movsb
xchg
pop
push
sub
dec
dec
mov
and
lret
gs
pop
nop
bound
xchg
mov
sub
cmc
and
aas
shl
xchg
rorl
xor
sahf
clc
inc
iret
mov
sbb
xor
mov
push
ljmp
dec
push
frstor
adc
and
sub
sbb
test
and
das
lret
push
ss
adc
xorb
mov
and
sub
inc
sbb
cwtl
imul
pop
and
inc
xchg
fwait
test
enter
lahf
mov
mov
mov
repz
scas
push
xchg
leave
out
shlb
mov
add
push
push
jne
jp
and
xchg
jb
sbb
aad
jle
jb
test
jb
stc
scas
andl
out
into
and
cmc
inc
add
shlb
arpl
push
hlt
push
mov
jg
push
mov
xchg
movsl
xchg
xlat
mov
dec
jp
push
sub
xor
inc
cld
xchg
and
cmp
inc
inc
sbb
das
in
push
jmp
push
add
dec
shlb
fwait
add
repz
pop
in
sub
dec
out
ljmp
xchg
lea
xchg
lcall
jnp
mov
lea
lcall
enter
xchg
icebp
adc
loopne
arpl
daa
inc
dec
addl
sbb
arpl
jmp
xor
cmp
mov
pop
fisubl
sbb
test
out
mov
mov
mov
out
aad
lock
mov
sahf
fstl
sti
pop
aaa
adc
xchg
pushfw
and
out
jnp
add
mov
pop
fldl
sbb
mov
mov
sub
push
cmp
mov
cwtl
cmp
mov
ret
stos
jp
pop
int3
push
in
ljmp
xor
lret
cld
stos
adc
ret
mov
pop
dec
sub
and
cli
mov
adc
sub
sub
jae
pcmpgtd
insb
sbb
push
xchg
jmp
sbb
out
add
sbb
pop
outsb
jns
xchg
or
scas
jo
mov
or
leave
and
sub
jo
loopne
test
cwtl
mov
mov
ret
sarl
add
sub
dec
cmpb
xchg
cwtl
ret
sahf
xchg
test
stos
or
xchg
mov
fwait
lods
stc
or
mov
bound
mov
test
add
xor
mov
cmp
add
push
jno
jecxz
sub
jl
cmpsl
pushf
mov
orl
jg
vandpd
sub
cld
les
xchg
call
jbe
mov
fcomp
jne
inc
jle
jp
rorl
dec
cmp
imul
inc
sbb
ret
mov
jns
add
or
repnz
stos
ds
jl
jne
and
xchg
add
adc
dec
jecxz
xor
push
test
push
mov
jne
xchg
ret
cmpsb
shl
iret
dec
push
sub
cld
orl
ljmp
cs
and
sub
dec
or
into
out
sbb
inc
dec
xor
pusha
cwtl
test
bound
sbb
add
mov
adc
mov
test
sub
mov
mov
iret
xchg
cmp
adc
xchg
add
mov
xor
push
mov
inc
outsb
lods
xchg
and
dec
push
add
rcrl
adc
pusha
and
jb
lret
dec
pop
adc
dec
in
aad
sarl
add
sub
shrl
or
cltd
je
jae
out
jns
xlat
and
sbb
sahf
lea
push
stos
stc
and
adc
dec
popf
add
mov
or
imul
pop
mov
popf
lods
adc
xor
mov
rclb
clc
enter
pushf
xor
sbb
arpl
adc
dec
rclb
dec
imull
adc
movsb
pop
xchg
pushf
adc
movb
add
popa
std
adc
fadds
cmpb
lret
daa
xor
faddp
push
mov
inc
mov
lods
fnstsw
aaa
pusha
hlt
jno
xchg
sub
and
and
xchg
jns
inc
push
out
call
mov
push
fnstsw
fisubl
mov
adc
loopne
cmpsl
loop
cwtl
mov
insl
call
dec
xchg
es
dec
pop
mov
lret
hlt
icebp
push
aas
movsb
int3
lret
hlt
inc
outsl
cmp
imul
popf
aas
cmc
push
jge
nop
fs
pushf
pop
loop
into
out
cmp
push
sbb
aas
push
mov
jbe
inc
int3
int3
xchg
xor
push
js
cmp
cmp
imul
dec
les
lahf
or
pop
add
lock
pusha
cmp
roll
sub
stos
sub
in
pop
sti
mov
lea
xor
mov
inc
lahf
leave
fsts
xlat
and
stc
repnz
fistpll
ljmp
pop
or
sub
mov
xor
ljmp
out
adc
or
jl
sti
sub
push
sbb
enter
lret
or
mov
sbb
pop
aaa
in
mov
fldl
test
fs
or
inc
movl
mov
push
or
cmc
rclb
jbe
rcl
repz
and
push
enter
bound
stc
sbb
xchg
push
inc
sbbl
jmp
lret
cmc
icebp
adc
cmc
cmp
es
bound
test
xchg
daa
push
push
ljmp
test
sahf
xor
mov
mov
mul
enter
lea
mov
or
in
adcl
xchg
addr16
or
jae
imul
lods
mov
pop
jle
fistl
mov
gs
fsub
cmp
mov
xchg
test
mov
adc
mov
and
adc
sub
in
xchg
popa
mov
xchg
push
jmp
or
mov
shl
int3
loopne
sarb
sub
in
ror
push
cmp
out
lcall
inc
cltd
push
nop
aaa
xchg
mov
pop
push
mov
mov
scas
push
cmp
mov
push
mov
jb
hlt
and
add
xor
adc
in
or
daa
mov
rclb
test
les
mov
or
lahf
test
push
dec
stos
lcall
cld
jle
imul
stos
xor
lock
hlt
jle
mov
imul
loopne
rcll
and
sub
or
inc
popa
icebp
pushf
and
cmp
pop
out
test
test
inc
pop
stos
inc
scas
int3
inc
cmpsl
dec
leave
dec
in
dec
mov
push
daa
mov
call
into
add
xor
push
jo
and
push
xchg
pop
and
cmpsb
dec
jb
js
jg
icebp
mov
add
loope
roll
mov
mov
neg
test
adc
enter
mov
int
dec
ja
adc
ds
adc
lret
test
ja
cmc
add
mov
loope
cs
push
adc
mov
ljmp
nop
or
enter
ficompl
or
fidivs
mov
mov
or
inc
add
out
stc
pop
movsb
inc
gs
testl
mov
push
fcomps
out
fiaddl
cs
add
aas
or
mov
aad
roll
sbb
bound
add
mov
pop
xlat
hlt
aam
test
xchg
repz
sub
xor
sbb
lods
or
enter
sbb
fdiv
or
dec
sub
pusha
push
imulb
adc
mov
pop
insl
fs
xchg
cmp
pop
fwait
cmp
or
inc
loopne
inc
fwait
repnz
mov
jge
push
lods
inc
xchg
lret
sbb
dec
pop
and
or
pop
stc
add
leave
push
pop
adc
popf
mov
clc
jnp
out
and
inc
jns
sbb
mov
sbb
pop
mov
aad
rclb
stos
sbb
mov
xor
mov
sbb
lcall
fucomip
xchg
iret
cmova
cltd
test
mov
pop
sub
and
add
ljmp
ljmp
and
out
pop
andl
xlat
sbb
sahf
or
jecxz
loopne
mov
push
push
mov
push
inc
scas
mov
mov
aas
xor
sub
loopne
pop
push
stos
cwtl
mov
jg
add
movsl
add
scas
rcrl
xchg
adc
xchg
ja
jle
and
mov
xchg
sub
mov
xchg
stos
in
popa
adc
cs
push
fwait
lods
subl
fwait
cmp
lcall
push
jl
insl
xor
movsb
cmp
rol
ja
es
es
ret
and
jg
jno
cmc
or
negl
out
push
stc
test
xor
rcll
adcb
push
sub
aas
push
add
sbb
repnz
pop
add
cmpsb
std
fsubl
cmp
mov
loopne
aad
xchg
jns
cmp
out
outsl
push
mov
shl
bound
cltd
and
push
push
out
inc
cmp
jle
repnz
pop
movw
pusha
jno
push
je
pusha
cmp
mov
jmp
cmpsl
add
pop
gs
data16
mov
mov
adc
decb
mov
pop
loope
xor
mov
out
inc
mov
push
inc
movsb
sbb
xchg
ret
roll
mov
cmc
inc
pop
adc
cltd
dec
hlt
xchg
test
add
push
inc
int3
mov
ret
jl
mov
sbb
test
sbb
lcall
adc
xchg
xchg
scas
push
cmpsb
mov
lcall
pop
lea
outsb
call
sub
jge
mov
sbb
xor
dec
push
jns
mov
or
div
jl
or
pop
pop
pusha
or
mov
mov
mov
mov
loopne
push
in
lea
loop
dec
leave
test
jo
mov
ret
mov
cli
repnz
insb
adc
mov
fisubrs
notb
xchg
cld
mov
add
cs
into
gs
mov
mov
ret
ror
pop
push
sbb
loope
mov
aad
insb
icebp
cmp
in
mov
lds
lret
xchg
popw
cmp
push
sub
mov
push
sbb
cmpsb
jns
fidivrs
cmp
pop
push
mov
adc
push
test
lahf
je
xchg
jae
cli
jae
fisubl
cmp
std
fisubrl
dec
gs
fcoms
push
pusha
in
adc
push
inc
sbb
dec
lods
ss
fisubrs
sub
cmp
mov
mov
dec
hlt
cmpsb
ljmp
cli
test
rcr
sbb
ds
mov
mov
pusha
sub
xchg
mov
aaa
xchg
sbb
pop
mov
xchg
sub
sti
rcr
and
mov
adc
outsl
xor
push
sbb
sbb
das
cld
xor
push
sbb
out
fsubrs
loop
mov
pop
rorl
rcl
imul
insb
ja
xor
or
cld
xchg
or
cld
repz
mov
aas
in
sbb
cmpsb
xchg
stos
mov
cmc
repnz
sbb
inc
scas
repz
ret
mov
push
iret
es
test
jmp
cmp
push
sub
aad
mov
lret
orb
jp
fadds
popa
pop
mov
mov
jmp
mov
push
mov
ja
shlb
mov
xchg
add
inc
mov
push
fidivs
fimull
xor
addr16
gs
clc
dec
aaa
movsl
cmpsb
cwtl
lods
mov
fs
shll
and
lcall
adc
or
arpl
add
insb
mov
jle
push
cmovg
int3
clc
cld
cmp
pop
call
aad
cwtl
in
jo
sahf
sbb
or
xor
leave
dec
enter
xor
mov
movsbl
lea
in
sub
adc
jecxz
cmpsb
adc
cs
dec
sarb
imul
cli
mov
push
popf
movsl
sbb
xchg
aas
jnp
jae
mov
sti
cmpsl
mov
sub
movsb
lret
int
pop
jge
or
cmp
xchg
sub
inc
je
xchg
sti
arpl
xchg
sbb
lahf
adc
das
sub
xchg
icebp
cmp
div
das
out
cmpsl
jbe
mov
ss
dec
int3
fnstcw
flds
adc
pop
and
cltd
fldt
mov
mov
imul
andb
addr16
sub
and
jne
stos
mov
stos
clc
jbe
xor
cs
inc
add
lea
fildll
into
aad
stos
test
repnz
add
shll
cmp
ss
jg
lcall
sahf
mov
cmp
push
ret
outsb
xor
and
adc
cltd
cli
pushf
cli
mov
adc
in
xor
nop
and
insb
mov
dec
ljmp
and
sbb
cmp
xchg
cmc
lret
adc
stc
push
fwait
xor
mov
arpl
push
xchg
ret
hlt
mov
mov
stc
andb
and
cmpb
add
dec
cmpsl
ljmp
inc
nop
mov
loopne
bound
out
jb
and
leave
call
stos
aaa
insb
test
sbb
cwtl
lods
inc
and
jns
test
mov
hlt
or
lret
mov
adc
jg
lock
ret
mov
loope
ja
adc
das
and
or
lea
imul
les
jae
push
shrl
adc
mov
xchg
dec
xor
aas
push
imul
and
and
xchg
loopne
lahf
add
ret
pushf
pop
mov
adc
push
test
jne
lret
jns
fsubrl
push
pop
cmp
jge
test
rorl
xchg
repz
xor
and
iret
out
push
add
scas
sbb
jmp
jl
inc
in
sbbb
jecxz
push
mov
or
mov
or
shrl
mov
mov
js
xor
lret
addr16
cmp
outsb
rorb
and
xlat
outsb
push
repz
mov
popf
push
xor
fisubrl
xor
out
add
sbb
jb
xchg
jge
cmpsl
jg
xlat
cmp
sub
jg
ret
mov
repz
repz
fildl
push
or
aaa
out
xchg
cli
push
imul
scas
movsb
or
call
pop
mov
fstpl
add
lods
pop
mov
adc
inc
inc
pop
add
ljmp
mov
dec
gs
xor
mov
mov
jbe
xor
imul
icebp
dec
out
stos
xor
movsb
xor
jmp
push
out
test
daa
jno
push
aad
push
imul
cmpsl
mov
lock
dec
arpl
xchg
xchg
lods
sbb
js
call
sbbb
enter
lock
cs
pop
xlat
mov
and
imul
sbb
gs
add
mov
lret
push
insb
and
popa
jmp
mov
outsb
int
rcrb
stc
sbb
scas
lahf
stos
fbld
std
aas
jmp
mov
hlt
jle
cmp
adc
pop
jecxz
fsts
lret
outsb
ss
inc
mov
xchg
push
out
stc
popa
ret
pop
cmp
fbstp
xchg
sbb
jmp
xchg
lcall
mov
and
xchg
in
mov
nop
fmuls
sti
cmpsl
pop
jg
or
or
popa
xchg
pop
int
outsb
adc
stc
jg
cld
xchg
fldt
pop
add
leave
cmc
and
and
and
pop
sahf
leave
test
mov
loop
arpl
test
cmp
shrl
andl
pop
into
hlt
mov
loopne
in
xor
or
das
mov
cmpsl
decb
cmp
daa
push
mov
mov
xor
jmp
lret
push
sub
fstpt
mov
insl
pop
mov
push
pop
inc
push
loop
mov
push
aas
xor
cld
ja
out
mov
ret
sub
inc
les
pop
pop
fiadds
test
icebp
mov
jns
adc
les
lret
lods
repnz
aaa
lret
es
pop
xchg
sbb
cmp
mov
rorb
or
negl
popl
push
ds
dec
das
idivb
push
xchg
shrb
add
mov
daa
sbb
cmpsl
lahf
dec
cmpsl
mov
in
mov
lret
test
fdivl
ja
ret
scas
out
test
xchg
fs
xchg
sub
inc
out
mov
fwait
pop
mov
mov
cmp
popf
or
stc
xor
and
cmp
es
test
hlt
mov
and
jnp
arpl
repnz
adc
add
xor
sbb
cs
xchg
insb
mov
and
fsubr
loop
int3
inc
sahf
and
stos
pop
in
jle
int3
movsl
push
sbbb
in
stos
jmp
jns
stc
gs
jle
enter
jne
jb
inc
in
stc
nop
stos
add
mov
mov
js
xor
sahf
enter
cwtl
fimuls
sete
dec
cmp
xor
loopne
in
xchg
or
js
cmp
mov
in
jecxz
pop
repnz
and
test
andl
out
mov
add
es
fs
aad
mov
jmp
mov
sbb
stos
jmp
pop
sbb
adc
mov
test
sub
stos
lods
add
jge
xchg
cmp
push
sub
or
idiv
outsb
ret
inc
pusha
and
cmpsl
mov
fwait
shr
lock
frstor
adc
aam
and
fisttps
sbb
ljmp
pop
jno
loop
mov
sub
pusha
stos
out
fs
cmc
xor
sub
das
fcomps
or
push
das
dec
dec
add
mov
cmp
pop
sti
mov
xor
int
pop
mov
pop
clc
in
stos
cmp
mov
or
pusha
push
jno
xchg
add
lahf
pushw
jbe
loop
jp
mov
mov
push
xor
pop
xchg
adc
insl
push
aas
out
cltd
xor
and
mov
lods
fbld
fimull
ss
jno
lea
add
nop
pop
sub
cmpsb
cmp
rcr
shrb
jmp
fbstp
pop
mov
xor
mov
sahf
push
pop
icebp
jo
mov
dec
xchg
and
jne
xlat
sub
push
jp
fcmovne
sti
sbb
ljmp
outsb
enter
push
int
cmp
jbe
fwait
xchg
into
xor
lods
jl
mov
call
pop
and
fsubrl
push
in
mov
mov
les
lea
outsl
dec
out
mov
push
aad
aaa
inc
jl
fstp
mov
add
xlat
jb
or
mov
fisttps
mov
mov
out
pop
stos
ret
xor
sahf
mov
andb
fcomi
mov
inc
mov
sarb
ja
add
inc
inc
in
out
cmpsb
in
sub
stc
add
sbb
incb
pop
inc
jecxz
cli
sub
mov
lahf
mov
addr16
mov
cmp
shlb
sbb
movsl
dec
cmpsb
loope
push
aam
nop
xchg
insb
dec
mov
mov
shlb
or
popa
cmp
mov
into
inc
aam
adc
test
dec
repnz
inc
jno
aam
insl
pop
sbb
clc
pusha
and
mov
daa
inc
dec
adc
xchg
inc
fiaddl
add
lods
mov
mov
inc
push
push
icebp
lods
pop
test
popf
mov
sti
stos
inc
ljmp
andl
adc
pop
stos
adc
and
push
sub
push
sub
aam
lret
fwait
in
adc
xchg
mov
jge
cltd
mov
mov
lock
sbb
and
dec
ljmp
mov
jbe
mov
lea
les
out
addr16
mov
xlat
push
cmp
mov
fldt
notl
xor
shlb
push
mov
or
xor
sub
adc
insb
sti
fnstsw
xchg
lods
subl
inc
ja
ret
aam
jle
movb
jns
and
les
lds
pop
ds
out
jnp
popa
xorl
jecxz
sbb
sarl
mov
mov
aad
movb
fbstp
int
pop
js
and
adc
or
sahf
fldenv
enter
pop
scas
xor
sub
or
cli
mov
jl
aam
push
and
dec
or
ret
leave
shl
mov
mov
stos
nop
xlat
lret
or
mov
jno
jl
cltd
sub
mov
sbb
out
adc
inc
xchg
jle
xchg
cwtl
xor
xchg
scas
fidivs
adc
sub
xor
mov
in
shlb
mov
insb
add
faddl
cmp
jecxz
je
stc
sub
jl
les
push
incb
arpl
add
pop
jle
jmp
mov
xor
lret
jecxz
push
pushf
mov
xor
rorb
push
sbb
data16
push
ds
push
repz
loope
cwtl
mov
sbb
inc
ret
call
mov
shl
ja
fwait
mov
mov
jmp
dec
pop
mov
pop
mov
jp
push
imul
repnz
ljmp
cmp
movsb
mov
popa
jle
fwait
movsl
loop
xlat
mov
test
stc
cmp
notb
add
mov
je
test
inc
push
sbb
leave
es
call
dec
je
mov
stc
inc
jbe
or
push
push
jo
push
cmc
pop
fisubl
scas
mov
insb
xchg
fisttpl
xlat
sbb
mov
loope
aam
add
sbbl
push
inc
cltd
jno
mov
inc
hlt
push
fwait
dec
jmp
push
jo
ss
jo
cld
ret
push
fldt
adc
loope
push
xchg
dec
dec
out
push
jle
pop
mov
mov
lds
cmpsl
add
sbb
adcb
dec
jg
lret
mov
xchg
mov
lock
ret
cli
xchg
cmc
test
movsl
cltd
xchg
and
pop
in
mov
inc
fnsave
mov
pop
in
fucomp
shl
ljmp
mov
inc
int3
test
outsl
push
inc
stc
sbbl
lea
sbb
and
pusha
cmp
aad
and
les
cmp
lds
call
outsb
and
pop
gs
cmc
push
push
lds
insb
pop
mov
arpl
test
pop
or
gs
mov
repz
jae
iret
inc
sub
repz
test
push
lcall
dec
mov
xchg
inc
popf
push
out
mov
push
mov
sbb
ljmp
test
out
ss
xor
dec
xchg
adc
movsb
outsl
imul
jnp
mov
jmp
lret
popa
lahf
pop
out
cmp
xor
mov
inc
or
mov
mov
pop
jecxz
fdivp
cmp
fs
cmpsb
stos
dec
mov
nop
jbe
xor
scas
scas
push
xor
mov
lret
cmp
pop
ret
push
popf
scas
psrlw
rclb
pop
push
mov
jne
jg
setg
in
je
inc
xor
inc
mov
cli
in
inc
fnstcw
push
pop
cmp
jb
or
sbb
xchg
pusha
dec
push
add
add
xor
lods
or
xor
in
js
sbb
dec
mov
loop
sbb
xor
sub
test
sub
mov
jnp
je
bound
mov
scas
mov
and
pop
dec
sbb
popf
cmp
cmp
fldz
andl
lds
dec
push
inc
enter
sbb
xor
popl
pop
mov
in
aaa
daa
sbb
adc
jl
lds
pop
jne
cmpsb
lahf
stos
xlat
xchg
lcall
les
cmpsl
rol
mov
insl
sbb
add
jo
addr16
cmp
cmpsb
addr16
push
rcr
call
jns
sbbl
mov
cmc
mov
loopne
fwait
mov
jle
jg
icebp
mov
xchg
cmp
imul
sbb
addr16
sbb
fucomip
jge
mov
inc
cmp
push
repnz
mov
push
lods
add
test
and
shrb
xor
or
mov
enter
cmc
mov
adc
sarb
incb
lret
lret
arpl
dec
in
pushf
pop
in
cmp
cltd
aas
pusha
dec
fnstsw
js
sub
cmp
sahf
xchg
pop
int3
xchg
xor
fucomi
sbbl
cwtl
filds
push
mov
loopne
jns
xcrypt-cbc
cmpsl
push
and
fisttpl
xchg
arpl
ds
xor
push
jo
xchg
or
mov
rorb
add
test
add
pushf
jnp
inc
fdivp
lock
loop
inc
movsl
mov
sbb
pop
and
movsb
repnz
outsb
inc
pop
xor
sti
rcrb
or
jp
adc
lods
pop
jp
pop
loop
dec
ret
mov
add
shlb
je
xor
nop
dec
inc
add
outsl
push
out
xor
jle
or
pushf
cli
dec
adc
enter
mov
mov
or
mov
and
mov
mov
mov
sub
cmc
mov
outsl
or
mov
mov
imulb
cwtl
arpl
sbb
add
test
ficoml
push
ds
stos
outsl
cwtl
popf
addb
lcall
repz
test
push
inc
fstl
stos
sahf
loop
push
or
dec
testl
xchg
aam
insb
mov
out
sbb
dec
mov
insb
cmp
daa
inc
lret
xor
pusha
adc
enter
nop
mov
dec
iret
loope
xor
test
add
xor
or
pop
lret
lret
mov
test
gs
jecxz
repnz
xor
jno
xor
jo
mov
mov
push
mov
mov
fcmovne
mov
jp
sbb
lcall
call
add
ficoml
jnp
push
cmp
sti
iret
mov
iret
stos
jbe
pop
dec
xlat
imul
outsb
and
mov
je
jl
xchg
dec
jg
dec
mov
ficoms
mov
subb
pop
mov
idivb
mov
dec
pop
dec
lock
call
mov
std
xchg
scas
es
jo
cli
xlat
shlb
loop
das
jae
add
xchg
mov
mov
out
leave
add
sub
scas
ljmp
mov
adc
out
sbb
xor
sbb
inc
stos
pusha
or
fidivrs
ljmp
mov
mov
and
nop
add
cs
cmp
fsts
push
pop
cld
mov
jns
sbb
jns
mov
fimull
dec
stos
adc
addl
and
fildl
mov
or
mov
shlb
push
out
push
push
psrad
jb
clc
inc
imul
xor
or
add
pop
mov
shlb
outsl
andl
insl
decb
xor
dec
jge
jmp
jno
dec
in
ret
mov
lods
xor
xor
sti
cmp
lea
das
inc
sbb
fdivrs
gs
lock
push
ds
vhaddps
popf
icebp
mov
sub
scas
mov
mov
xchg
adc
xchg
sub
cmp
or
repnz
ss
pop
push
iret
nop
decb
jmp
jbe
rcrl
or
push
in
mov
test
sub
push
mov
mov
daa
adc
mov
cwtl
jo
in
push
int
lret
iret
frstor
mov
and
data16
stos
andb
pop
mov
iret
mov
stc
jp
pop
scas
dec
mov
mov
out
xchg
stos
sub
fadds
lds
ret
xchg
lods
loope
loopne
jg
gs
pop
outsl
ds
lahf
xor
cmp
lea
je
es
fisubrl
icebp
mov
sahf
sbbl
push
xor
lcall
ljmp
clc
jg
push
push
lods
cli
inc
pop
xchg
andb
cmc
into
enter
mov
cld
movsl
inc
and
mov
push
pop
mov
divl
push
and
and
test
cmpsl
out
jns
aas
mov
cltd
inc
call
call
add
ret
pop
movsb
jecxz
push
loop
mov
mov
pop
in
addr16
mov
out
cld
int3
cmpsb
cld
pop
jge
fwait
pop
lods
cmp
xchg
rcrb
sbb
popf
cmc
sub
pop
fcomi
mov
mov
mov
pop
add
xor
jae
into
pop
mov
adcb
cmp
adc
cwtl
push
cmc
sbb
inc
cld
sbb
aas
mov
jge
mov
jg
cmp
inc
outsb
mov
pop
jl
dec
sbbb
outsb
dec
mov
scas
icebp
jmp
xor
inc
gs
inc
rolb
push
loope,pt
test
dec
fnstcw
or
mov
fsubrl
and
ljmp
popf
xorb
shrl
icebp
push
mov
add
scas
cmp
fsubrp
add
rcrl
aaa
fiaddl
decb
arpl
or
aaa
lcall
in
or
push
nop
sbbl
mov
mov
push
adcl
iret
das
adc
ja
or
jb
test
ljmp
mov
push
insl
jmp
adc
add
test
inc
mull
push
in
and
inc
jo
jne
inc
lods
inc
xchg
xchg
scas
icebp
mov
int3
jae
cmp
cmpsl
loope
jg
aas
mov
push
in
jecxz
lahf
adc
in
xchg
mov
mov
cmp
fistpl
pop
mov
cmp
cmp
andl
inc
fcomi
sbb
arpl
adc
push
jge
outsl
sub
sarb
pop
lock
lods
xchg
cli
or
mov
sbb
mov
or
ret
pop
dec
and
sahf
test
bound
scas
pop
movsb
pop
cmpsb
sub
cs
pop
loopne
or
arpl
push
mov
imull
mov
and
frstor
sarl
call
and
sbbl
or
fadds
mov
fwait
ret
cmp
loopne
jmp
mull
das
subl
dec
out
fsubl
bound
popf
insl
add
mov
loop
xor
adc
lea
push
dec
sbb
gs
imul
movl
push
inc
decb
mov
fdivrs
imul
movups
dec
inc
xor
jno
mov
jmp
popf
push
aam
mov
xchg
jo
mov
mov
repz
mov
push
dec
cmp
movsb
jg
lea
jo
outsb
sbb
jl
test
sahf
mov
sub
stc
ljmp
loopne
fwait
adc
shlb
mov
arpl
adc
sub
mov
mov
testb
aas
jbe
and
cmc
xchg
dec
mov
in
pop
adc
or
lods
sub
in
cmpb
std
nop
cmp
cmp
movsl
jp
pop
out
jecxz
sub
dec
add
mov
insl
mov
cvttps2pi
adcl
add
mov
lret
mov
inc
rolb
jmp
mov
cmp
pop
test
out
jno
xchg
outsb
or
pop
jo
or
or
jl
insl
scas
pop
in
add
stos
jmp
loopne
or
mov
nop
daa
xlat
adc
mov
xchg
sub
dec
pop
jecxz
aaa
pop
out
xor
inc
setp
shr
cld
stc
pop
outsb
mov
ljmp
jge
mov
xchg
fnstsw
push
sub
test
arpl
les
cs
outsl
iret
xor
repnz
js
popf
mov
and
xchg
pop
pushl
sahf
jae
in
stos
incb
fidivs
and
sub
in
jge
xchg
xor
scas
jp
test
inc
and
popa
int
xchg
push
pop
inc
mov
rcrl
dec
pop
sti
addr16
ja
out
test
pop
mov
test
ds
nop
or
dec
pop
lds
or
push
xor
pop
push
cltd
insl
push
mov
les
push
in
jae
xor
fidivl
xor
fcmovu
and
pop
pop
cmpsb
enter
xchg
mov
ljmp
pop
iret
sbb
out
aaa
sub
xorl
inc
lock
imul
mov
sub
and
xchg
xchg
scas
inc
das
call
push
popf
std
pop
sarl
push
mov
push
aas
xchg
dec
fwait
in
lret
inc
scas
out
xchg
jns
and
lods
in
sbbl
xor
bound
adc
xor
fs
xlat
pop
leave
orl
stc
xchg
fwait
and
mov
mov
leave
jo
insb
fidivrs
mul
fisttpll
push
cmp
fcomi
sub
push
test
cmpsb
hlt
add
imul
jmp
mov
out
jbe
movl
outsb
add
into
js
or
xchg
dec
outsl
outsb
roll
dec
lahf
adc
es
lret
mov
imul
aam
mov
jg
sti
fwait
pop
xchg
push
imul
and
popf
jns
dec
pop
mov
dec
scas
inc
in
xchg
pop
pop
sub
icebp
xor
mov
push
js
out
dec
push
sbb
test
addr16
jge
sub
repnz
mov
inc
test
jp
bound
push
fiaddl
loopne
int3
cwtl
test
cwtl
push
jae
iret
xor
mov
mov
dec
cwtl
mov
insl
lods
mov
adc
mov
jo
push
repz
subl
adc
push
adc
into
xor
xor
fildll
nop
stc
and
or
or
outsb
pop
adcl
scas
pushf
mov
subl
cmc
loope
daa
lea
out
icebp
cmp
in
das
xchg
int
rcll
jo
mov
cmp
cmpxchg
xor
lea
jbe
enter
out
xchg
and
push
dec
and
hlt
push
xchg
clc
cmp
xchg
or
mov
mov
std
sub
inc
dec
cmp
mov
fisubrl
jmp
je
xor
and
mov
pop
pushf
adc
dec
loopne
push
gs
addl
and
jg
add
pop
loope
mov
or
sub
jne
leave
jnp
jae
cld
xchg
cmpsb
mov
sbb
in
sbb
push
or
add
je
and
mov
repnz
lret
data16
and
insl
inc
pop
inc
test
popa
mov
negb
andl
cs
jl
push
aas
push
xchg
inc
jg
jne
mov
sub
int
dec
arpl
data16
lcall
adc
rcll
or
and
and
jmp
fs
stc
cmp
fsub
sbb
nop
pop
std
cltd
pop
pop
jle
sarb
in
orl
mov
fstps
push
out
push
repz
fistl
or
pop
fidivrl
mov
loopne
fstps
js
pop
jl
out
popa
out
xor
ret
cltd
xor
mov
xor
pop
adc
xchg
jle
inc
daa
rclb
xchg
sar
mov
imul
and
and
rorb
jp,pn
push
nop
mov
orb
jecxz
push
shl
loop
sub
inc
pusha
ja
mov
stos
addb
das
cltd
lret
movb
adc
lea
mov
add
inc
xor
push
push
aam
ret
shrl
insl
sarb
out
js
push
das
sbb
dec
lods
ja
jmp
enter
jmp
int
popa
loopne
mov
repz
push
in
adc
mov
int
lock
pop
inc
lret
mov
push
and
out
mov
jge
cli
insl
and
arpl
stos
adc
scas
es
fadd
fnsave
adc
adc
imulb
sbb
adc
jmp
or
scas
mov
out
xlat
clc
hlt
jl
cmp
push
mov
cmovs
jnp
lea
inc
scas
ss
ret
sub
jnp
mov
jmp
hlt
in
xchg
rorb
mov
orl
mov
push
orb
xor
pop
rorl
mov
scas
hlt
icebp
roll
adc
daa
sbbl
or
ds
mov
test
push
mov
icebp
mov
ret
hlt
sarl
fsts
jae
int3
loop
int
aad
ret
mov
enter
jbe
jns
xchg
xor
in
aaa
scas
es
lea
xchg
mov
ret
sti
flds
sub
mov
pop
and
cld
sub
inc
jp
mov
jb
jbe
mov
dec
pusha
lret
test
cmpsb
cmp
addb
dec
jns
bound
and
cmp
mov
mov
sub
jl
shll
ret
daa
test
pop
cmpsl
idiv
cmp
cltd
mov
iret
xchg
stc
idivl
inc
pop
xor
sbb
aam
mov
jp
sarl
test
or
pop
mov
ja
ret
rcr
addl
test
andl
outsb
decb
pushf
insl
pop
leave
mov
pop
mov
fisubl
fcomps
iret
sub
dec
or
push
xor
movsb
cmp
es
fimull
pop
scas
daa
aam
insl
icebp
or
mov
fidivrs
push
in
stos
xchg
inc
ds
mov
gs
std
lcall
push
orb
lock
rcrl
jg
repz
dec
adc
push
xor
sarb
jbe
jo
sbb
cmp
sub
xchg
jbe
je
lcall
dec
cmpsl
xchg
jg
sti
hlt
adc
and
jo
std
cs
mov
ret
int3
test
mov
xor
in
push
inc
aaa
mov
pop
xchg
xchg
mov
jb,pt
dec
pop
mov
cli
cmp
pop
lods
pushf
adc
cmc
jo
lods
cmp
in
pop
mov
popa
push
add
fisubrs
or
mov
push
stc
mov
xor
push
test
xchg
sbb
pushf
fsubrp
imul
test
fistpl
aas
enter
push
imul
jg
lahf
push
outsb
test
lret
jg
fisttpll
mov
ror
dec
push
sub
iret
aad
xor
arpl
sub
shlb
add
arpl
mov
jge
sub
push
clc
add
add
cli
shll
sbb
scas
scas
xchg
icebp
shrl
orb
sub
test
mov
or
adc
inc
into
and
pop
adc
fwait
rclb
sti
addb
inc
xor
addr16
xchg
pop
cmp
mov
out
js
ret
int3
jbe
pop
cmpsb
jns
das
data16
push
inc
jnp
inc
jmp
lock
pop
negl
jnp
ja
sub
inc
leave
cmp
sub
test
jg
adc
jl
sbb
push
es
popf
inc
data16
or
cmp
mov
addr16
pushf
orb
out
add
jnp
sbb
inc
pushf
gs
fwait
lret
inc
and
outsb
imul
imul
pop
lea
cmp
addl
fsubrl
iret
jb
push
lahf
idivb
jne
lahf
push
test
adc
iret
lret
mov
lret
fnstenv
sub
jne
mov
mov
aad
into
aam
cmpsl
push
movsb
cmp
mov
icebp
sahf
inc
decb
lcall
sub
movsb
cmc
inc
sbbl
cs
push
gs
xchg
jae
pushf
loopne
xorb
add
inc
cmp
adc
dec
inc
adc
enter
mov
lods
out
in
mov
cmp
jb
loopne
push
jmp
cmp
mov
jae
iret
xchg
dec
icebp
div
pop
inc
fwait
cmp
mov
mov
das
inc
scas
cmp
jle
inc
lret
mov
or
mov
repnz
fsubrs
iret
pop
adc
pop
jecxz
mov
mov
fcomps
insb
add
insl
imul
mov
sarl
mov
fnstcw
ds
sub
fstps
cmp
scas
add
insl
mov
fdivp
cmp
dec
jne
lcall
jle
mov
dec
cmc
iret
add
dec
lds
xlat
icebp
lahf
push
sub
fdivrl
stos
aad
push
nop
jne
cmpl
ret
add
xchg
aad
divb
aad
das
adc
mov
xor
jno
pop
adc
insb
ret
push
scas
stc
adc
mov
movsl
movsb
sbb
js
push
xchg
mov
pop
es
fisubs
mov
pop
icebp
shl
loop
cmpsb
add
xchg
shll
repz
adc
lods
xchg
sti
and
inc
shll
jne
mov
push
ret
mov
cwtl
js
hlt
mov
cltd
xchg
mov
ja
inc
and
jae
cs
aad
and
jg
shll
es
icebp
js
and
hlt
popl
push
pushf
pop
jmp
jnp
dec
sahf
sti
sub
pop
sbb
in
jp
xchg
ret
outsl
jno
adc
mov
movsl
loop
mov
loope
sub
ds
fildl
sbb
xor
xchg
aaa
movsb
jae
fdivl
mov
hlt
mov
or
test
js
push
dec
xchg
and
jbe
ss
shlb
push
mov
cmp
inc
cwtl
and
es
aad
mov
mov
push
mov
mov
in
outsb
mov
call
int
mov
cltd
mov
mov
xor
adc
adc
test
push
jo
cmp
mov
dec
subl
xchg
inc
subb
jecxz
mov
sbb
mov
mov
adc
ficoms
adc
stos
imul
mov
cmp
insl
jnp
call
xchg
dec
js
cmpsl
sub
sti
leave
cmc
fists
sbb
aaa
jae
sti
and
insl
aad
mov
aam
adc
iret
xor
ss
xchg
popa
in
pusha
pop
cmp
pop
out
scas
add
stos
mov
cmp
dec
xchg
and
nop
adc
mov
lock
push
cmc
mov
adc
inc
push
and
insb
xor
inc
inc
and
xchg
sub
sub
xor
sub
inc
test
add
jns
lods
daa
lcall
sub
adc
add
push
sbb
xor
xor
call
pushl
mov
sti
aad
shlb
add
jecxz
sti
inc
ret
adc
loopne
mov
lods
and
imul
inc
dec
sbb
jne
mov
cld
xchg
push
pop
jne
jae
popa
negl
mov
jb
mov
push
pusha
add
js
int3
jb
push
fs
xlat
xchg
js
push
das
cmpsl
lcall
pop
shl
xlat
inc
mov
jg
sub
out
cli
dec
out
iret
and
cmp
je
and
inc
sub
dec
push
and
adc
xchg
pop
mov
pop
pop
cmc
pop
xor
cmpsl
cmc
jl
loop
out
cmp
aad
inc
fistl
xchg
mov
or
notb
aam
jae
jge
cmpsb
push
and
and
jne
jmp
adc
test
mov
das
inc
clc
mov
in
test
cwtl
clc
jb
dec
lcall
cwtl
mov
push
adc
sub
push
sub
nop
pop
icebp
inc
and
inc
scas
bound
xchg
xor
lea
mov
leave
mov
iret
js
sar
testl
mov
pop
fmuls
mov
add
xor
mov
and
and
inc
clc
inc
pop
push
enter
mov
cmpsb
scas
sarb
mov
imul
cs
in
movsb
ja
imul
cmpsl
fisubrl
fnstsw
push
icebp
jp
fucomip
xchg
jge
cmp
fbld
mov
pop
dec
cli
mov
aas
imul
loop
mov
pop
jns
push
leave
movsl
adc
nop
xchg
dec
pop
mov
das
or
mov
and
ds
sbb
lcall
xchg
cmp
or
iret
push
lret
aam
or
fs
ja
cmpsb
or
xchg
xchg
iret
add
aaa
lcall
push
jg
lea
sub
movsb
repz
pop
mov
es
cmp
or
ds
mov
fs
popf
lret
adc
jmp
fadds
or
int
mov
push
mov
dec
cmpsb
sbbl
outsb
sahf
and
stc
sub
es
mov
ret
test
sahf
daa
add
lret
jbe
inc
test
dec
lret
popa
cmp
pop
call
mov
jl
mov
mov
test
inc
adc
jne
xor
enter
mov
mov
test
aaa
inc
fidivrs
test
mov
pop
fcmovb
test
shl
dec
add
scas
mov
add
mov
or
int3
cmp
push
xchg
push
out
cmp
mov
lcall
mov
push
sti
adc
and
insl
mov
jg
inc
inc
cli
roll
dec
test
imul
jge
inc
cltd
jl
in
jae
cmp
inc
std
dec
pop
jo
xchg
int
sarb
test
xor
testb
inc
lea
sbb
lds
mov
inc
mov
jl
ret
rcrb
jle
popf
mov
sbb
sbb
ss
nop
adc
or
mov
out
fsubl
sti
inc
push
add
leave
push
xor
and
push
out
ret
push
inc
jp
jle
mov
inc
pop
mov
or
les
sbb
lods
cmc
or
sbb
mov
cmc
mov
repz
lahf
push
inc
xchg
jno
push
pusha
mov
push
imul
pop
fbld
lret
jmp
mov
popf
in
aad
dec
and
lods
cli
xchg
shr
mov
mov
je
xchg
add
push
add
scas
int
stos
loope
cmp
movsb
ja
sbbb
xchg
or
sbb
ds
and
pop
movl
test
inc
pop
out
sub
mov
or
and
sbb
sub
cmp
shlb
aas
push
inc
cmpsl
cmp
mov
and
cmpb
lock
dec
les
mov
jmp
pop
sbb
mov
push
es
xchg
inc
int3
shrb
xchg
pop
nop
imul
adcl
jb
data16
lea
dec
cmp
stos
int3
rclb
and
push
xchg
adc
lret
pushf
sbb
loope
adc
pop
dec
das
mov
pop
adc
inc
fstpt
pop
shrl
jns
push
jbe
cmpsl
loope
fsts
out
outsb
imul
jmp
stos
cmpl
and
cmp
cltd
push
into
shrb
lret
data16
pop
inc
mov
sub
dec
test
cld
jbe
xlat
cltd
pop
push
cwtl
clc
mov
divl
pop
data16
pop
and
and
push
test
dec
sbb
push
or
and
pop
push
iret
pop
repnz
pop
adc
mov
sub
add
sub
in
sbb
in
push
push
popf
mov
inc
adc
pop
and
stos
scas
pop
ljmp
push
hlt
stos
push
lods
dec
adc
icebp
ret
repz
daa
mov
jle
push
imul
pop
dec
dec
dec
xor
and
std
pusha
inc
fs
push
push
or
into
in
sbb
lods
jmp
rolb
add
pushf
and
cmp
lret
pop
dec
push
call
out
insl
incb
inc
inc
cs
test
push
mov
mov
jnp
add
push
addl
mov
jno
in
cwtl
and
int
pop
mov
mov
sbb
aad
roll
inc
int3
dec
jmp
inc
out
push
aaa
lcall
out
sub
push
jne
test
sbbb
call
push
mov
pop
mov
jecxz
rcll
dec
cmp
andl
jae
xchg
sub
xchg
imul
and
push
sub
dec
fsubs
xor
scas
shl
adc
push
daa
inc
cmp
sbb
cmp
imul
fdivs
jecxz
scas
sub
and
sub
sub
adc
data16
clc
or
jne
ret
sub
sti
jnp
lock
sub
dec
movsb
inc
pop
xchg
pop
cmp
xchg
mov
xchg
adcl
test
xchg
and
mov
adc
insl
sbb
push
or
lds
mov
mov
add
xlat
in
dec
push
or
pop
out
sub
xor
pop
inc
xchg
iret
nop
fnstenv
dec
or
add
xchg
sbb
pop
data16
push
insb
mov
outsb
jp
rcrl
sub
insl
ret
gs
jne
out
sub
push
mov
cwtl
and
push
inc
test
or
mov
mov
inc
add
in
shr
mov
dec
mov
push
imul
divl
mov
push
test
dec
loop
in
jge
sbb
imul
sbb
sbb
xchg
mov
outsb
inc
out
xchg
ret
repz
pop
std
fwait
jb
or
mov
shrb
shrl
and
andl
add
adc
dec
inc
pop
nop
dec
mov
div
cmp
ljmp
push
mov
push
xor
push
sbb
adc
mov
xchg
ret
jo
outsl
rorb
stc
icebp
mulb
mov
arpl
test
sub
or
call
or
inc
sub
psraw
aad
imul
icebp
test
push
rcl
inc
iret
mov
push
lods
fistpll
mov
pcmpeqb
scas
push
lods
js
lahf
adc
das
roll
lcall
and
dec
push
aas
clc
push
mov
push
xchg
lret
sub
shll
push
test
imul
xor
in
inc
and
mov
subl
inc
popa
jnp
inc
inc
push
cwtl
subl
repnz
scas
gs
fcompl
ret
repz
lcall
mov
sbb
jle
fldcw
pop
addr16
out
lds
imul
daa
and
pop
push
push
scas
or
dec
adc
xchg
enter
loop
push
dec
out
pop
in
inc
or
insl
sahf
dec
jmp
cmp
in
icebp
cltd
je
xor
jecxz,pn
xlat
insb
and
repz
sbbb
into
push
mov
es
mov
mov
xchg
add
jb
adc
aam
call
push
fwait
movsb
mov
adc
lds
daa
or
in
mov
add
inc
push
lods
jae
dec
pop
dec
sbb
pop
pop
call
shlb
add
and
jp
add
jl
lea
push
xchg
test
movsb
or
movsb
xchg
pop
daa
repz
pop
fisttpl
call
bswap
mov
and
lahf
outsl
xchg
movsb
jnp
inc
cmp
jge
sbb
insl
mov
arpl
sahf
mov
imul
in
and
insb
scas
mov
lahf
sub
rolb
add
int3
push
clc
pop
movsl
imul
addr16
mov
out
subb
int3
pop
lcall
mov
mov
and
cmp
sub
aad
cmpsb
mov
stos
push
inc
insl
cmp
cwtl
pop
hlt
addr16
mov
leave
test
lret
ficomps
sub
jno
and
add
pop
les
sbb
xchg
mov
sub
mov
data16
pop
xor
cmp
shl
aad
and
add
mov
pop
cltd
mov
cmpsb
cmp
rcll
lds
mov
inc
sub
cld
fdivrs
mov
add
pop
jnp
lods
sti
mov
add
pop
lods
and
xchg
leave
add
and
add
inc
fabs
xchg
push
cmp
jle
lods
cmp
sub
mov
mov
in
pop
pushf
xor
repz
stos
xor
mov
pop
fsts
out
fwait
mov
dec
fucomi
jns
ds
mov
ret
adc
std
cmp
rcl
insb
cmpsl
mov
nop
arpl
stos
into
and
sub
inc
push
icebp
ffree
pop
jg
push
sub
xor
loop
ret
sbb
pop
or
add
sub
movsb
loopne
push
jb
pop
pop
lock
enter
xor
arpl
test
aam
jecxz
ss
cltd
cltd
jns
pop
out
cmp
insl
or
mov
fs
mov
pop
xor
aad
xchg
adc
pop
out
xchg
sar
sbb
mov
lds
push
rorb
das
in
mov
and
add
out
outsb
sub
shrl
dec
les
out
aaa
dec
lock
inc
and
cmp
inc
pop
je
mov
push
or
sub
inc
arpl
and
in
jl
jecxz
pop
int
in
lods
xchg
mov
repz
adc
ds
add
xchg
adc
adc
jbe
push
inc
lret
testl
dec
xchg
jns
mov
test
xor
fdivp
xlat
loop
mov
mov
inc
loopne
push
jne
mov
test
and
imul
jge
push
jne
cwtl
pop
lock
arpl
or
imul
dec
pusha
pop
mov
add
enter
stos
push
mov
pop
hlt
mov
jnp
pop
loop
mov
outsb
push
stc
insl
orl
pop
addr16
aas
gs
sahf
push
mov
outsl
mov
cmc
and
jnp
jb
jl
push
cmp
pop
pop
push
inc
out
sarl
call
sub
xor
add
mov
add
mov
or
aad
sbb
push
and
cmp
mov
xchg
add
dec
es
mov
dec
cmp
shll
loopne
loope
dec
xlat
mov
mov
mov
lock
lds
mov
test
push
into
push
cmpsl
out
pop
cmp
and
xchg
mov
or
cmp
mov
dec
test
mull
xchg
add
sub
mov
pop
pop
jno
fmulp
add
fisubl
xchg
inc
cmp
adc
fdivp
or
fidivrs
inc
xor
leave
mov
lcall
popa
xor
addr16
push
cmc
fs
push
mov
enter
or
in
inc
sbb
inc
jmp
inc
mov
bound
mov
icebp
lcall
pop
xchg
and
xorb
cmp
sarl
push
add
or
sbb
jns
jge
into
divl
into
movsl
in
mov
mov
jle
sub
sub
cltd
insb
pop
or
mov
mov
cmpl
test
jle
sbb
cmp
or
fildll
and
mov
xchg
fidivs
ja
jg
jns
jno
imul
out
add
push
ret
xor
jb
inc
mov
iret
shlb
pusha
pop
cli
int
hlt
pop
push
ss
pop
out
add
jno
mov
mov
stos
jmp
mov
daa
aad
push
int3
push
jmp
shrl
insb
sbb
fwait
mov
pop
sarb
jp
decl
xor
movsl
sbbl
inc
repnz
imul
jmp
and
cld
mov
cli
dec
adc
addl
insl
sbb
stos
cmpsl
stc
mov
xor
scas
mov
addl
mov
int3
sub
dec
jmp
mov
inc
add
repnz
mov
das
push
test
pop
push
add
inc
push
lds
ljmp
insl
cmc
fists
ret
lahf
push
les
cmc
jg
arpl
adc
ret
mov
fwait
xchg
inc
lea
cmc
test
mov
add
fimuls
mov
mov
out
ret
jmp
pop
sub
lock
fs
imul
push
scas
pushf
inc
mov
sahf
jo
jmp
andb
cmp
arpl
sbbl
cmp
xor
jno
scas
dec
inc
popf
stc
ficomps
dec
int
cld
out
loop
leave
sub
cltd
test
daa
mov
stos
add
into
lahf
xor
mov
int3
xlat
rolb
hlt
push
jno
inc
outsl
xor
mull
std
cltd
push
repz
cmp
cmp
les
loop
fiadds
xor
sub
out
sbb
cmp
js
adc
add
cltd
inc
sbb
out
out
movsl
cmp
aad
fidivl
fldenv
sub
sub
out
jp
je
pop
sbb
fbstp
movsb
js
dec
ss
cmp
nopl
leave
xchg
fisttpll
cmp
cmpsl
xchg
mov
jno
into
pushf
xor
inc
lahf
loop
lds
jns
cwtl
pop
cmpb
xor
int
mov
xor
adc
inc
fsubr
fnsave
testl
jp
xlat
ret
loop
mov
cmp
popf
hlt
andb
push
sbb
pusha
stos
push
inc
out
lea
inc
adc
and
lret
gs
pop
xlat
or
lds
imul
adc
aas
jns
mov
dec
pusha
mov
xlat
push
xchg
insl
jg
lock
loopne
xor
jb
sub
ss
or
clc
mov
ljmp
lods
jae
sbb
inc
pushf
cmp
addr16
inc
adc
cli
idiv
insb
pop
dec
out
jae
inc
sub
push
divb
test
inc
bound
mov
hlt
sbb
mov
mov
mov
push
push
cwtl
rclb
mov
sub
cmp
jecxz
lock
or
jp
outsl
jnp
dec
test
les
shrl
mov
leave
insb
imul
cmp
cmpsb
std
bound
push
mov
lock
mov
testl
push
jg
or
pop
mov
push
mov
fucomip
stos
xor
scas
inc
fisttps
jge
mov
rep
jae
jmp
cli
mov
sahf
cwtl
jl
into
icebp
icebp
mov
insl
and
jp
push
push
or
mov
inc
fwait
in
xor
mov
inc
rcll
std
aaa
jl
and
push
outsl
cli
lds
stos
mov
pop
test
and
xor
sub
out
push
lret
and
cmpsl
inc
fmuls
nop
imul
add
push
jb
inc
cwtl
aam
fdivs
inc
int
dec
jnp
clc
fstl
and
ret
test
xchg
dec
andb
pop
into
in
fisttpll
jne
xchg
scas
pop
pop
insl
rcrl
inc
arpl
sbb
dec
fcoml
push
cwtl
sub
std
mov
insb
test
adc
mov
pop
test
pop
mov
cmp
mov
ret
pop
sub
dec
cmp
pop
xchg
subb
push
movsb
inc
mov
jnp
cmp
pop
fstl
call
jl
inc
add
fdivl
mov
pop
int
mov
push
fyl2xp1
sbb
scas
lcall
arpl
scas
or
xor
hlt
fucomi
sub
cmpsl
adc
xor
sbb
xlat
in
adc
xorb
xorl
icebp
xor
mov
ret
pop
aam
add
jne
fucomp
lds
jmp
add
jb
or
sarb
inc
add
enter
cmp
fimuls
es
and
mov
out
out
stc
rcrb
inc
test
jmp
mov
mov
icebp
pop
inc
adc
mov
jecxz
test
cmpsl
inc
xchg
or
push
mov
pop
mov
fbstp
das
in
in
dec
inc
xor
pop
stc
cmpsl
call
sbb
pusha
repz
test
fildl
fsubrl
xchg
lret
mov
fs
mov
or
stc
mov
aam
out
push
arpl
cltd
lret
jg
add
jmp
mov
xor
cmp
std
pop
xchg
jno
pop
mov
fsub
orb
adc
sbb
loop
notb
addr16
mov
mov
jo
aas
push
jbe
xor
mov
jg
adc
add
pop
jle
adc
stos
and
stos
sbb
and
lahf
xlat
aad
sbb
xchg
dec
sub
fstps
jg
jge
jp
loope
or
sbbl
sub
out
repnz
mov
xorl
shl
aad
lret
sbb
lea
push
pop
jbe
in
jle
sbb
push
xchg
dec
lock
lods
rcrl
xorb
cmpsb
lcall
fs
mulb
sub
mov
iret
sub
mov
mov
test
push
dec
add
add
cwtl
std
or
mov
push
push
repnz
das
cmp
dec
inc
pusha
cltd
sub
jbe
xchg
xor
sarb
mov
int3
mov
in
sub
aas
pop
bnd
sbb
shrl
cli
lea
dec
dec
outsb
push
mov
mov
dec
xchg
pop
clc
inc
and
or
ret
je
inc
int3
cs
push
mov
jnp
lret
shll
ret
pop
sub
pushf
or
xor
and
es
jp
inc
sub
pop
pusha
or
and
insl
add
jle
mov
lock
jb
cmp
stc
xchg
mov
fists
out
sti
sub
jne
xlat
xchg
pop
stos
xor
inc
pop
pusha
dec
push
mov
mov
inc
pushf
neg
sarb
out
mov
stc
inc
fwait
int
ror
outsl
add
mov
sub
mov
inc
scas
and
das
shlb
fsubrs
lods
nop
mov
ror
call
pop
jae
sbb
inc
insb
out
or
aam
popf
das
push
lcall
mov
lcall
push
jae
jg
stos
pop
stos
add
fnstsw
xor
popf
pop
int3
shl
dec
and
cmp
mov
lock
outsl
push
mov
clc
lock
jno
test
clc
xchg
push
mov
je
mov
cmpsb
cmp
and
in
mov
add
enter
jg
in
fstpt
stos
pusha
add
bound
mov
gs
mul
cmp
mov
pushf
sbb
dec
xlat
push
test
push
dec
inc
pop
in
test
das
jle
call
jl
mov
inc
lds
insl
mov
movsl
pop
cmpsb
outsl
mov
sub
mov
cmp
and
add
and
arpl
out
data16
adc
or
mov
add
pop
subb
pop
sub
lods
imul
inc
mov
mov
sbb
cwtl
jae
adc
push
pushf
inc
stos
aad
or
mov
ret
jle
dec
cld
lcall
jae
pusha
in
push
ret
rcll
add
xor
or
push
sahf
push
jnp
mov
imul
mov
jno
sub
xlat
pop
or
lret
xchg
add
push
loopne
fistpl
call
sbb
xor
jmp
insb
adc
sahf
xchg
mov
mov
inc
mov
cwtl
or
adc
xchg
jp
add
and
stos
push
mov
mov
pop
mov
imul
mov
inc
push
mov
jmp
lds
push
daa
mov
lahf
fnstenv
cmp
cld
jo
or
call
jno
icebp
xor
push
mov
jne
push
xorl
pop
movsl
inc
pop
mov
in
fldl
outsl
push
xchg
outsl
daa
pop
push
mov
cmpb
popf
sub
xchg
pop
int
dec
test
xchg
imul
lods
mov
pop
daa
movsl
sahf
inc
mov
nop
out
call
and
pop
lods
mov
push
or
iret
jno
stos
inc
sbb
adc
add
icebp
cmp
mov
aam
pop
xor
push
sub
fsts
pop
repz
dec
mov
xchg
les
std
mov
std
inc
fldenv
mov
lock
ljmp
xor
jge
pop
fstpt
rorl
pop
sub
shrd
jno
mov
nop
leave
aam
push
add
jecxz
ja
push
fs
jbe
or
in
ljmp
and
dec
sbb
mov
data16
enter
xchg
cli
aam
jbe
xor
test
pop
inc
cs
clc
rcrl
pusha
sub
or
xor
rolb
xor
mov
xor
nop
ja
scas
fdivl
mov
cmp
inc
and
pop
xor
jmp
icebp
sbb
dec
xchg
aam
mov
movsl
xchg
das
add
aad
insb
add
jecxz
out
loop
cmpsb
adc
pop
sub
cmp
stc
outsb
dec
xor
int
repz
notl
fcompl
cmp
dec
sbb
push
sub
sub
push
roll
movsl
sbb
dec
fbld
andl
scas
mov
xchg
stos
jb
iret
stos
ja
sarl
insb
leave
leave
out
xor
rcrl
je
adc
jo
repnz
push
es
add
sub
stc
scas
cmpb
xchg
cmpsl
aaa
inc
sbb
movsl
aas
xchg
dec
mov
loopne
sub
and
pop
imul
scas
ret
push
sbb
xchg
jmp
movsb
cs
xchg
pop
loop
or
out
das
push
fldl
out
xchg
sub
xor
daa
outsl
in
push
fiaddl
xor
or
push
or
jecxz
jns
pop
ret
sub
pop
out
subb
pop
rorl
mov
push
je
jae
mov
inc
outsl
insb
jl
imul
fcmovnb
movsl
subl
lods
dec
mov
jecxz
outsb
sub
lahf
mov
push
adc
pop
jg
nop
shrl
jns
das
fadd
pop
adc
rcr
std
lcall
test
mov
dec
das
pop
repz
mov
decl
sbb
dec
in
cmpl
outsl
mov
push
add
or
cmp
dec
push
mov
inc
or
es
sti
push
dec
loopne
fdivl
or
repnz
jl
mov
lahf
or
xchg
sub
addr16
lret
rcrb
int
cld
cmp
pop
jae
mov
cmpb
out
movsb
pop
pop
xchg
adc
jmp
call
inc
cmpb
xchg
iret
xor
mov
xorl
pusha
and
inc
mov
lcall
pop
clc
pop
mov
pop
jbe
add
and
cmp
sahf
dec
aaa
sbb
lock
lcall
popl
subb
repz
adcb
mul
test
fidivrs
or
cmp
xchg
popf
push
shlb
dec
mov
test
xor
loopne
mov
cltd
xchg
add
mov
jle
adc
cltd
dec
mov
outsl
push
pop
andl
mov
rclb
std
push
cmpsl
rcl
lahf
mov
adc
scas
popf
mov
push
push
outsb
mov
xlat
aaa
sub
xor
scas
jmp
mov
popa
mov
jge
scas
test
repnz
push
movsb
pop
in
jno
lret
nop
push
push
push
push
popf
fs
push
mov
inc
or
mov
or
and
pop
dec
ret
pop
in
jo
in
xor
dec
lahf
pop
sub
and
mov
shrb
outsb
add
loop
lea
ret
xchg
int3
sbb
sub
sahf
fldenv
pop
imulb
movsb
repnz
inc
push
mov
lds
das
mov
ljmp
sbb
push
call
jmp
loopne
fucomip
push
shl
in
sub
dec
adc
pop
inc
adc
lret
stos
mov
sub
push
mov
xor
mov
jl
cmpb
nop
daa
jbe
mov
addr16
jl
mov
adc
inc
cld
mov
push
insb
shll
in
imul
aad
call
into
fcmovb
jl
lods
inc
push
repnz
clc
jle
add
adc
cmpsl
push
xchg
lds
lock
lret
pop
pushf
jle
mov
sarl
dec
dec
gs
mov
mov
sub
mov
inc
lahf
jmp
mov
mov
lahf
stos
in
popf
outsb
add
xor
pop
mov
dec
mov
push
push
add
cmpsl
xor
mov
mov
call
sarb
push
stos
jne
pop
sub
cmp
push
addr16
mov
xchg
mov
xchg
jp
fdivr
stos
push
add
addr16
jmp
push
adc
jbe
pop
mov
shlb
mov
push
dec
loopne
jg
dec
outsb
sub
loopne
mov
push
in
push
and
adc
jne
fstl
scas
lcall
sub
pusha
lock
push
dec
xor
repnz
pop
test
push
sub
aaa
shr
or
cmp
loopne
sbb
xor
cltd
cmp
cwtl
lahf
sub
pop
bnd
popa
jno
xlat
rcrb
call
dec
cmc
mov
pop
cmpsl
xchg
lcall
je
jp
cwtl
jne
dec
iret
ror
imul
and
adc
and
xchg
hlt
add
addb
in
call
pusha
movl
ss
xor
js
repz
lock
mov
add
rclb
mov
movsb
or
lcall
imul
adc
mov
popf
xor
popl
iret
into
mov
ljmp
js
mov
jecxz
cmpsb
dec
mov
pop
mov
dec
stos
push
jecxz
fdivrs
dec
or
jge
push
daa
adc
mov
loope
pop
repz
pop
out
inc
inc
jno
jecxz
mov
jge
js
rcr
mov
mov
push
out
call
leave
es
cmpsb
mov
fmull
out
mov
aas
sbb
dec
stos
ret
rol
mov
mov
mov
dec
add
fsts
mov
cmp
aas
stos
add
and
jb
cltd
addr16
push
mov
aas
or
sub
and
inc
inc
cli
mov
outsl
daa
push
daa
adc
add
xchg
stos
xchg
cmp
inc
inc
je
jmp
shrb
scas
ds
and
iret
fldcw
lds
scas
int
push
push
loop
pop
addr16
fistps
sub
psadbw
js
aam
push
mov
inc
leave
mov
dec
cli
das
cmp
add
sub
ja
jge
popf
push
sbb
repnz
lret
mov
call
pop
popf
mov
imulb
cmpsb
cmp
push
cwtl
test
popa
negl
mov
bound
push
fnsetpm(287
test
mov
pop
outsb
mov
rcrl
shll
std
pop
pop
mov
and
decb
sub
hlt
cmp
cs
pusha
jbe
mov
fucomi
test
sbbb
jb
imul
and
mov
stc
fdivrs
outsb
mov
int3
mov
pushf
dec
xchg
repnz
iret
test
push
fimull
std
sub
xor
pop
xlat
mov
push
pusha
ret
inc
mov
add
mov
or
mov
push
sbb
sbb
push
inc
pushf
cmp
cli
mov
in
lods
sub
mov
into
imul
inc
ds
push
sbb
test
push
mov
out
ja
xor
jl
lret
pushf
xchg
pop
add
sub
adc
repz
or
push
test
dec
scas
cld
cld
cmp
and
std
xchg
loopne
shrl
xchg
sbb
mov
mov
addr16
decb
in
xor
inc
iret
fstpl
jb
push
sahf
or
inc
cmpsb
jns
imul
inc
sub
stc
mov
cmpsb
cli
pop
mov
out
pop
fsubrp
mov
push
mov
or
cmp
pusha
clc
outsb
jae
xchg
sub
addr16
popf
sub
mov
jno
outsl
lods
mov
xchg
mov
mov
fsubrs
mov
push
test
in
xchg
push
ljmp
jno
mov
loope
mov
jg
das
push
push
shlb
lods
movl
cmp
aas
mov
fstl
push
out
xor
xchg
pop
dec
int
or
hlt
insb
xor
arpl
xor
cltd
lahf
adc
enter
push
out
pop
cmp
mov
cmp
stc
rorl
je
push
and
xor
xor
sub
stos
push
rcrl
mov
push
cwtl
fs
lret
sbb
push
pop
mov
fwait
repz
mov
and
xchg
js
adc
mov
in
sbb
movsb
and
aad
mov
push
in
test
test
cltd
lock
xor
jge
push
mov
jmp
out
test
dec
lods
and
mov
in
xor
pop
add
inc
cmp
cmpsb
cld
adc
push
repz
lea
inc
in
cmpl
push
sbb
ja
fwait
out
stc
mov
in
sahf
xchg
loope
adc
sbb
add
xor
loopne
sub
mov
xchg
inc
mov
mov
fisubrs
data16
push
pop
lock
sbb
aam
leave
ljmp
sub
lods
inc
pop
callw
push
sub
inc
imul
inc
pop
adc
ja
es
mov
fs
fisttpl
pushf
xor
add
dec
into
movsl
sti
inc
lods
sti
cld
adc
fwait
test
sbb
lahf
pop
lahf
test
arpl
js
scas
mov
jb
add
or
xchg
cmpsb
gs
pop
in
sbb
or
jg
jae
xor
mov
js
sahf
and
inc
shlb
adc
int3
faddl
jns
addr16
loop
sbb
cs
sub
mov
ss
pop
rcrb
das
pop
ds
cmp
mov
iret
push
add
mov
pop
int3
arpl
inc
fimull
lods
popa
lock
repnz
scas
jbe
sbb
mov
aaa
pop
xchg
sbb
loop
push
xor
or
add
mov
mov
inc
and
or
lea
sub
pop
push
inc
dec
loop
je
mov
aam
test
iret
cmp
sbb
xchg
mov
cmp
outsl
jmp
insb
sbb
pop
pop
ss
mov
mov
shll
sarb
outsb
mov
cmpsl
cmp
fisubrl
mov
ss
cli
mov
pop
xchg
adc
test
mov
gs
rcl
cmp
jecxz
jae
adc
fstl
test
rcrl
sub
lods
ljmp
ljmp
push
xor
sbb
pop
push
jl
gs
fisttpl
loope
add
lock
push
fdivl
xlat
popl
cmpsl
jge
mov
push
jmp
fadds
jl
pop
xchg
sub
ljmp
sub
in
push
jo
or
leave
xchg
and
jbe
jae
call
fidivrl
scas
mov
enter
jns
mov
mov
lods
mov
lds
imul
cmpsl
xchg
lods
enter
or
dec
inc
out
jb
pop
inc
sbb
or
mov
cmp
adc
sbb
arpl
jmp
sub
adc
outsl
daa
mov
test
aaa
nop
push
mov
mov
xor
push
pusha
push
pop
notb
pop
cmp
mull
add
out
fistps
incl
pop
cmpsb
dec
cmp
mov
pop
push
cltd
mov
jnp
and
push
jmp
jmp
sti
jbe
sbb
insl
lock
pop
subl
dec
xchg
or
popf
into
lahf
push
test
imul
sbb
loopne
dec
add
jno
mov
popa
dec
or
das
mov
mov
add
dec
and
mov
xchg
push
sti
imul
mov
sarl
jle
or
mov
rclb
inc
repz
lods
stos
cmp
sub
push
or
adc
lret
jnp
outsl
stos
push
xor
push
enter
loopne
mov
sub
cld
cmp
fwait
sub
leave
aaa
loopne
sub
in
mov
mov
push
lcall
int3
push
movsl
mov
loope
push
popf
rolb
mov
mov
call
or
pmuludq
xchg
out
out
inc
xlat
dec
inc
aaa
int
sub
lods
enter
repz
dec
pop
lcall
mov
shrb
sbb
repz
fsubrl
outsb
aad
jp
stos
aaa
pop
ds
mov
xor
repnz
pop
mov
aad
mov
or
push
les
xor
jne
dec
addr16
cmp
lret
push
or
lds
and
and
and
inc
ds
int
sub
stos
inc
lods
dec
lret
jle
rcl
pop
adc
jle
cmpsl
cmp
sub
lods
xchg
jge
xor
inc
ss
gs
sub
mov
lock
xchg
push
repnz
fs
jnp
jmp
lahf
push
jns
testb
sbb
push
ja
ss
pop
cwtl
out
ret
and
dec
jl
push
and
push
jbe
xor
xchg
mov
mov
mov
xchg
push
dec
arpl
inc
stc
movsl
ret
pop
scas
sub
sub
cmp
push
fsubrl
movsb
cmp
lahf
mov
or
xor
push
repz
cs
sbb
and
sub
pop
in
jns
into
adc
or
inc
test
or
arpl
mov
bound
mov
pusha
mov
cmp
and
add
xchg
jle
sub
cltd
sub
mov
data16
mov
pop
test
inc
jge
xlat
and
cmp
or
cmpsl
test
pop
ja
xor
call
cmc
mov
sub
aas
add
mov
pop
sbb
addr16
jmp
dec
mov
in
push
loop
leave
push
inc
sar
lods
add
fdivl
and
sti
in
lcall
add
out
loop
jp
sub
mov
push
mov
cli
das
cmp
test
and
push
push
test
andl
lods
fwait
xor
je
mov
xlat
sbb
push
jbe
push
mov
in
in
popa
rorl
or
clc
lds
or
or
popl
or
scas
jl
mov
sbb
fadd
cmc
imul
sbbl
push
icebp
movsl
cmp
jp
jnp
pop
jne
movsl
mov
das
lret
dec
loop
mov
push
jne
ficomps
xchg
mov
rcll
sbb
cmc
int3
pop
mov
cmp
test
push
lds
pop
push
mov
das
mov
push
mov
daa
xchg
jns
test
inc
pop
pop
loop
jmp
loop
mull
push
ror
sub
imul
xchg
orl
in
sub
mov
push
lret
fnsave
jl
push
in
xor
mov
mov
loop
popf
loopne
into
movsb
cmp
adc
mov
add
loope
lea
and
xor
adc
ds
repz
daa
push
lahf
into
mov
imul
aaa
and
mov
pop
and
inc
inc
scas
mov
movsb
inc
hlt
or
into
gs
int
push
mov
fisttpl
mov
test
aam
loope
mov
divb
ja
je
sbb
add
xchg
xor
jecxz
add
xchg
mov
test
dec
mov
adc
xor
or
pop
cmp
jg
cmp
or
add
jge
aam
pop
sub
jg
pop
popf
xor
ret
out
xchg
or
cs
lods
addl
ret
fidivrl
lahf
sbb
iret
adc
push
mov
adc
jnp
ret
cld
rcrb
dec
push
ret
cwtl
pop
mov
pop
xor
push
shll
les
mov
or
cmp
cmpsl
and
mov
inc
mov
sub
fs
sbb
cmp
cmp
push
jmp
mov
inc
test
arpl
lock
xlat
outsb
hlt
fisubrl
cmc
mov
outsl
in
mov
adc
xchg
adc
add
sub
je
or
enter
sarl
pop
xchg
dec
lods
pop
fs
mov
jnp
scas
xor
ss
mov
dec
push
sub
rolb
pop
call
std
or
aad
pop
sti
xor
mov
pop
mov
dec
data16
ja
sbb
inc
shrl
xchg
lock
adc
jne
sub
xchg
das
out
call
fdivl
mov
jo
mov
out
adc
mov
dec
jl
mov
aam
inc
jno
mov
push
push
cwtl
cmp
xchg
pop
fwait
mov
add
ds
std
mov
adc
mov
or
jmp
mov
jne
das
inc
push
mov
outsb
daa
mov
scas
or
push
xlat
pop
decb
shrb
in
repnz
fwait
cmp
pop
lcall
xor
adc
push
xor
xchg
fsubs
cltd
test
stc
push
mov
pop
or
mov
jecxz
call
cmp
out
repnz
adc
dec
mov
sbb
inc
sbb
loop
cltd
jae
add
sub
arpl
mov
cld
or
lock
sub
inc
fisttpll
int3
ljmp
fwait
mov
inc
and
push
push
stos
mov
and
add
mov
push
push
xchg
xchg
sbb
cmpsb
sub
inc
xorb
jle
ret
mov
mov
iret
jp
mov
dec
inc
inc
xlat
js
stos
lods
aaa
mov
cs
sarl
pop
mov
mov
jmp
movsb
mov
jp
jb
mov
push
jmp
dec
decl
mov
fmull
or
insb
shl
push
cmpsb
dec
loope
mov
adc
flds
lahf
popa
push
arpl
jg
push
mov
mov
or
dec
sbbl
inc
jmp
mov
mov
stos
fisubrl
inc
fimull
out
inc
xchg
nop
xchg
mov
mov
cmp
fisttps
cmp
mov
sarl
push
lahf
inc
mov
je
adc
pop
test
xor
ret
jnp
pop
mov
or
stos
idivl
sub
mov
and
mov
sbb
pop
ljmp
lock
rclb
pusha
cmpb
shll
iret
adc
cltd
out
fnsave
dec
mov
or
mov
jle
insl
scas
or
add
stos
inc
jle
jo
adc
fcmovbe
mov
imul
mov
or
add
sub
xchg
xor
fsubrp
inc
in
xchg
loop
lcall
out
jecxz
nop
aas
push
out
jo
mov
push
jbe
daa
in
call
push
pushl
dec
or
fisubrs
push
jbe
add
cli
and
sub
loop
add
xor
filds
adc
outsl
movsl
ret
xor
in
cwtl
push
rorl
cli
andb
fildl
out
ficoml
jo
jbe
and
and
add
rcll
int3
movsb
push
faddl
push
jmp
pop
pop
ss
mov
dec
jg
push
xchg
pop
in
pop
inc
cmp
add
push
or
adc
or
jne
xlat
lods
pop
lds
cld
test
in
xor
adc
shll
cmpsl
mov
test
push
inc
cmpsl
mov
fadd
mov
cmp
ss
fsubr
add
mov
nop
ljmp
testb
pop
hlt
xor
jnp
xor
dec
mov
out
inc
push
cmp
mov
mov
push
jle
call
mov
cld
xor
push
or
les
in
in
cmp
arpl
popf
inc
dec
xchg
scas
jb
push
rol
and
push
pusha
push
inc
mov
xchg
and
adc
dec
insb
div
jo
mov
sbb
jbe
add
mov
nop
out
ds
repnz
cld
fadds
sbb
sti
rcrl
xlat
add
mov
push
or
push
fwait
mov
pop
insl
stos
fwait
ss
mov
aas
loop
add
mov
test
adc
sbb
inc
cltd
mov
mov
mov
loopne
adc
mul
fsubrs
sub
loope
xlat
lea
fistl
jb
jmp
mov
frstpm(287
sbb
aas
cld
dec
movsb
inc
sub
negb
mov
lock
push
test
and
xor
xor
sub
sar
xor
sbbb
icebp
mov
sbb
push
add
rorb
xor
pop
mov
xchg
add
lahf
mov
test
or
lods
daa
dec
pop
xor
dec
xor
inc
jecxz
pop
addr16
lahf
or
rclb
movsl
push
inc
pusha
call
dec
cmp
ds
aad
sti
pop
jmp
jmp
icebp
cld
cmp
jae
or
xchg
stc
cwtl
add
cmp
je
mov
cli
inc
push
adc
dec
fistps
and
test
pushf
fldl
and
sub
inc
ret
loop
dec
add
enter
cwtl
or
cs
into
in
push
add
data16
lret
xchg
add
and
add
push
ret
mov
sbb
insb
push
mov
sbb
or
lods
cmp
jb
xor
into
inc
pop
outsb
jne
pop
call
cmp
testl
lods
adcl
cmc
mov
rolb
addr16
test
cmp
cmp
negl
push
jmp
xor
loopne
stos
sbb
jae
cmp
add
xchg
dec
addl
jl
ds
popf
cmc
adc
nop
imul
arpl
sub
cwtl
pop
inc
dec
lods
mov
imul
scas
sub
int
mov
fwait
add
lods
movsb
jnp
repz
adc
add
xor
xchg
outsl
subl
inc
repnz
sbb
fucomi
dec
jno
test
das
cmp
int3
dec
dec
into
xor
cmc
jmp
ret
xor
hlt
mov
cmpsb
pop
inc
add
sbb
lods
jge
std
mov
mov
push
rcrb
fadd
jb
arpl
push
loopne
mov
in
pop
lods
decb
mov
in
mov
mov
out
nop
mov
out
mov
clc
popf
and
jg
movsl
sub
in
nop
adc
push
out
test
jb
lahf
jo
bnd
fisubl
cmp
insl
mov
inc
pop
mov
mov
imul
xor
aas
or
adc
int3
xchg
inc
xor
cmp
enter
sbb
scas
pop
movsb
fadds
xor
scas
arpl
ret
and
test
rcrb
shll
sbb
jmp
lea
and
or
cmpsb
in
fwait
mov
xchg
ljmp
stos
gs
mov
push
cmp
lea
xor
popf
cld
or
popf
jg
xlat
cmpsl
in
iret
call
cwtl
cmpsb
nop
mov
aas
lret
sbb
push
cmp
or
pop
and
jb
mov
jne
lods
inc
xor
int3
mov
fimuls
imul
mov
mov
dec
filds
cwtl
popf
stc
lret
cmp
jmp
sub
sti
fwait
mov
out
push
out
and
iret
xchg
orl
xor
movsb
popf
scas
addb
mov
xchg
sub
enter
inc
lret
mov
data16
and
aaa
outsb
cmpsb
cmc
pop
ret
xchg
cmp
js
div
pop
push
je
pop
and
pop
push
jb
insb
add
push
fdivl
fs
cmp
fldl
jecxz
ja,pt
push
test
xchg
mov
mov
nop
mov
mov
xchg
inc
daa
cmpsb
shlb
sbb
push
mov
shlb
push
jg
jmp
sbb
jnp
mov
mov
inc
pop
xor
cli
aam
add
jb
popa
fcompl
std
xorb
js
ficompl
xchg
lret
inc
popa
jle
jp
lods
mov
mov
jmp
jmp
and
sti
xchg
jp
lcall
jo
lods
bound
sbb
xor
out
mov
push
dec
loop
mov
xchg
stos
lahf
in
mov
adc
xor
mov
outsb
sbb
jae
push
or
xchg
mov
dec
push
pop
adc
ret
cmp
repz
es
fmull
xor
jmp
call
push
mov
pop
mov
insb
sbb
aam
lock
adcb
cs
test
xchg
loop
or
dec
ljmp
jg
sahf
out
pop
mov
cmc
push
add
idivl
cmp
cmp
ljmp
lock
jbe
shl
pop
cwtl
mov
inc
and
cwtl
or
sub
outsb
cmp
lret
aad
mov
test
ret
cmpsl
out
pop
jg
mov
jl
test
or
aam
iret
sbb
ret
faddl
dec
repnz
mov
push
lds
xor
mov
arpl
sbb
bound
mov
rol
add
loop
lock
js
mov
xor
mov
mov
lret
addb
xlat
jmp
pop
lahf
cmp
jne
sbb
sub
push
adcb
inc
dec
mov
andb
lods
ss
out
int
pop
jmp
outsl
push
lcall
add
sar
jl
jg
or
push
and
out
xlat
cmp
adc
xor
scas
cmp
xlat
xchg
mov
sbbl
nopl
dec
hlt
lret
add
cld
mov
xor
arpl
imul
es
nop
dec
mov
imulb
cmp
fidivl
dec
mov
aam
xorb
sbbl
jnp
xchg
inc
xchg
dec
out
bound
or
adc
loope
mov
pop
inc
fwait
pop
jb
das
lret
daa
lcall
push
mov
out
add
push
aad
out
pop
iret
lea
push
mov
or
lods
mov
jge
inc
sub
sti
leave
fsubl
lahf
mov
call
jno
lcall
dec
mov
or
cwtl
out
lret
cmp
push
aam
dec
xchg
ja
dec
dec
and
cwtl
adc
int3
lret
inc
push
xchg
pop
arpl
ljmp
call
les
mov
ret
pop
sbb
imul
jmp
loop
push
imul
add
call
scas
mov
in
nop
imul
push
lcall
inc
out
dec
cmpsl
xchg
jle
dec
dec
ds
mov
ds
shrl
lret
push
fst
add
lea
fs
iret
pop
sbb
popf
cmp
stc
or
into
fcompl
pop
pop
sub
mov
adc
enter
popf
jno
adc
pop
add
push
xchg
mov
pusha
inc
out
dec
dec
sbb
inc
sti
add
clc
push
ss
jne
xchg
and
xchg
push
dec
push
push
test
cmp
in
cmp
fwait
or
or
shrl
jmp
in
out
mov
xchg
fidivl
lcall
out
and
sub
push
jbe
pop
cwtl
pop
aam
dec
ss
pop
push
rorl
and
aaa
xchg
jae
xor
lahf
xchg
jg
rorb
adc
lahf
fsubrl
es
pusha
call
rdtsc
lcall
lea
ret
jmp
mov
ret
or
fnstcw
enter
jne
repz
pop
jne
adc
and
repz
inc
sub
sahf
mov
in
js
test
js
mov
or
lret
sbb
and
sbb
fucom
in
push
jl
ss
loopne
xchg
cmp
movsb
ljmp
mov
data16
and
pushf
mov
aad
les
add
lds
test
pop
dec
mov
lods
dec
loop
and
daa
aaa
je
ljmp
xchg
xor
fdivrl
mov
mov
push
test
lea
dec
dec
mov
in
jg
or
pop
popf
ss
push
jg
and
xchg
repnz
mov
mov
mov
nop
pushl
icebp
mov
fs
add
iret
add
cltd
xor
push
sub
xchg
outsl
adc
cmove
repnz
popf
or
push
mov
stc
mov
adc
das
mov
ss
sbb
sahf
xchg
adc
cmpsl
jl
int3
push
out
pop
add
adc
cmc
rcr
xor
rcrb
push
pusha
shlb
ss
icebp
loopne
mov
fwait
sbb
movb
data16
rcll
pop
and
aaa
notrack
jo
or
arpl
xlat
daa
xor
je
fnstenv
jg
mov
sbb
sbb
mov
sub
in
xchg
ds
lcall
ja
inc
jns
xchg
lock
pop
call
arpl
jg
addr16
popa
into
mov
sbb
aam
pop
fwait
stc
loop
test
lea
inc
or
scas
cmp
sbb
cli
ds
iret
cmpb
xchg
int3
sub
jo
cmp
push
or
dec
or
bound
lret
mov
std
pop
loopne
ds
push
mov
add
xor
pop
add
and
imul
ret
and
adc
xor
pop
adc
jns
or
jbe
ljmp
call
mov
scas
sbbl
out
gs
lcall
loop
cmp
aaa
dec
add
push
daa
mov
pop
test
shld
jno
mov
filds
sub
lcall
out
jnp
out
or
fidivs
loopne
cli
lds
clc
mov
in
mov
push
je
test
inc
test
jmp
stos
xchg
fnstcw
lds
sahf
xor
push
xor
std
adc
jbe
and
xor
shll
sub
outsl
cli
sub
arpl
dec
fnsave
adc
addr16
jnp
cltd
mov
and
pop
ljmp
iret
dec
dec
in
inc
rcll
pop
sbb
dec
mov
test
sarl
mov
mov
aad
repz
pushf
loope
push
ljmp
enter
jmp
scas
mov
jecxz
dec
pop
xlat
cmc
sbb
pop
stos
es
xchg
inc
xchg
add
je
lods
int
inc
jmp
lret
stos
or
out
pop
out
jle
out
mov
outsb
enterw
xchg
xor
fildll
int3
pop
bound
pop
push
xchg
data16
adc
iret
jb
lds
mov
push
mov
shlb
xchg
shr
jge
subl
dec
test
mov
xchg
imul
sbb
cmp
mov
rcrl
aam
mov
pop
push
jb
or
enter
loop
inc
xchg
mov
aam
out
jne
jp
mov
add
mov
pusha
bts
int
cmpsb
out
test
icebp
lods
imul
jno
mov
jmp
push
clc
mov
xorb
repnz
mov
pop
pushl
loop
and
pop
cs
sahf
flds
out
jns
inc
movsl
fiadds
call
ss
cmp
jo
cli
jno
iret
jmp
mov
in
adc
sub
push
cmpsl
mov
stos
adc
push
and
ljmp
mov
jecxz
aas
xchg
sub
push
xchg
push
inc
adc
iret
jno
cmp
lods
rcl
scas
les
lods
xor
xchg
test
or
xchg
mov
cs
fdivrl
out
addl
inc
daa
outsl
icebp
enter
xlat
insl
add
pushl
mov
cmp
add
imul
imul
aam
ss
addl
jmp
leave
out
inc
outsl
loop
stos
outsb
mov
mov
inc
sbb
imul
ret
aam
or
mov
or
mov
dec
rclb
and
dec
cwtl
or
fdivp
pop
push
or
hlt
cmp
stos
imull
inc
sbb
mov
mov
sub
imul
or
iret
or
xchg
xor
ljmp
movsl
jl
dec
sti
push
pop
push
lock
cmp
ds
dec
rcrb
lret
push
jp
sbb
imulb
or
jg
xchg
jno
sbb
int3
push
inc
lods
or
dec
sbb
cmp
sub
pushl
ret
repz
out
adc
out
inc
lret
shr
addr16
mov
jns
mov
cmpsl
push
sarl
lods
daa
or
negb
sbb
add
adcl
js
cltd
adc
out
gs
adc
xlat
outsb
pop
mov
cmc
mov
fwait
cmp
pop
dec
add
cmpsb
rcll
insl
out
mov
shr
add
push
push
push
repnz
and
adc
bound
test
loop
mov
lods
and
dec
test
jmp
mov
xchg
mov
jb
push
cmp
cld
pop
sbb
and
mov
xchg
jbe
mov
xchg
outsb
jl
dec
sbb
test
aam
test
mov
xor
outsb
sar
and
imul
mov
xchg
xor
mov
icebp
shlb
fwait
je
int
and
push
out
xchg
dec
aam
ficoms
jae
xor
pcmpgtd
adc
js
mov
gs
fwait
subl
mov
ss
dec
and
stc
insl
hlt
mov
orl
xor
mov
sbb
mov
popa
hlt
js
add
jb
inc
mov
sbb
fidivrs
jp
or
mov
cmpsl
lods
push
jle
mov
adcb
fisubs
shlb
cli
xor
out
in
push
dec
and
dec
or
mov
ja
adc
pushf
mov
xor
out
insb
nop
mull
pop
loop
sub
or
push
push
xchg
lcall
pop
xor
push
or
lret
jae
jp
inc
cmpsb
sub
insb
cli
repnz
sbb
stos
cmp
in
cmpsb
fnstcw
mov
mov
fdivrp
shlb
dec
lahf
fimuls
pop
daa
xor
decl
in
xorb
jmp
outsb
push
int3
mov
or
jp
andl
pop
mov
pop
test
inc
pop
adc
into
jns
xor
mov
fcmovbe
pop
xchg
pusha
jge
push
xor
insb
add
jb
lcall
cmpsb
dec
xchg
mov
jbe
xor
sbb
jne
or
push
xchg
repnz
cwtl
mov
out
pop
les
jecxz
push
mov
sub
iret
icebp
lcall
or
pop
addr16
sbb
out
cwtl
push
add
fsubrs
adc
push
inc
movsb
out
mov
adc
andl
jae
jl
data16
fadds
push
ds
or
scas
repnz
or
cmp
add
scas
xchg
adc
xchg
icebp
and
pop
dec
pop
jl
pop
push
fstpt
cmp
xlat
ret
shlb
daa
lahf
pop
inc
dec
cmovg
mov
mov
scas
pop
fimuls
mov
lret
pop
adc
push
and
push
push
mov
sub
dec
out
loopne
ret
mov
jge
push
inc
and
mov
or
scas
fnstenv
mov
popa
cmp
pop
fwait
dec
in
into
fistpl
mov
cltd
ss
inc
inc
jecxz
cld
sbbb
mov
dec
testb
fcoms
or
gs
pop
xor
gs
push
int
sub
in
arpl
xor
icebp
push
addr16
ss
fldl2t
pop
xor
pop
jns
stos
fistl
stc
sub
shr
ds
adcl
ret
pop
lcall
daa
lcall
pusha
pop
pusha
sti
outsl
cld
out
lds
mov
sbb
repnz
mov
push
adc
test
scas
pop
std
mov
or
into
idivl
or
mov
pop
or
adc
jo
xor
mov
push
jbe
rcll
stos
mov
adc
adc
fnstsw
cmp
repnz
lret
nop
sub
sub
adc
pop
push
ja
mov
pop
imulb
scas
fsubr
fildl
xor
push
jno
shll
into
xchg
stc
mov
dec
aaa
fsub
std
jo
jno
pop
jmp
fists
ljmp
mov
mov
sub
push
pop
ljmp
iret
call
adc
lret
dec
ljmp
inc
loope
sub
mov
roll
int3
jl
ja
fwait
push
sbb
pop
sub
fnstenv
mov
mov
pusha
mov
sbb
dec
lahf
cs
cmp
inc
sbb
into
mov
cmc
cs
jnp
jmp
movb
jecxz
int3
arpl
movsb
lahf
and
out
test
iret
daa
xor
out
sbb
jb
test
subb
fnstcw
mov
movsb
sub
dec
cltd
insb
notb
mov
rorb
shrb
jmp
xchg
mov
pop
ret
loop
nop
imul
cmpsl
xchg
aad
enter
or
sub
xchg
rcl
lds
repnz
test
lret
jp
gs
das
fs
mov
cmp
popf
push
leave
ljmp
jp
cmp
or
inc
test
xor
push
pop
sub
jno
ret
cmpsb
cmp
lea
adc
int
push
cmp
xchg
std
sbb
popaw
push
or
je
scas
xor
xchg
jb
nop
cmpsb
adc
out
xor
dec
cltd
out
cmc
insl
ret
push
hlt
dec
mov
aas
push
lods
add
xchg
mov
fstpt
lods
xor
enter
daa
mov
ficoms
ret
movsl
mov
pusha
cmp
jmp
and
mov
and
leave
lods
xorl
adc
mov
push
fidivrs
ljmp
mov
pop
daa
dec
sbb
ljmp
dec
and
scas
cwtl
daa
loop
sbb
add
push
mov
test
xchg
mov
loopne
mov
fisubl
cmp
inc
cmp
push
push
or
sbb
pop
mov
stos
mov
push
fisttpl
add
add
cld
push
dec
lahf
std
jo
dec
add
aam
int3
jge
scas
xchg
xor
out
or
mov
sub
sub
rcll
dec
and
les
aam
clc
sbb
imul
inc
jbe
test
xor
xor
dec
dec
mov
in
inc
xor
jbe
xchg
fdivrl
test
ffreep
xor
lret
out
js
stos
popa
dec
addr16
push
sahf
inc
arpl
xchg
loop
adc
xor
aaa
fildl
jo
pop
shr
test
sbb
pusha
inc
sbb
aad
inc
mov
mov
mov
enter
in
jmp
push
and
xor
jbe
pop
push
lret
mov
insl
mov
scas
adc
hlt
mov
jne
push
lret
lock
sbbl
jmp
outsl
inc
gs
test
rcrb
pop
inc
std
cltd
mov
mov
jae
outsb
ds
scas
jp
ljmp
idiv
and
inc
lods
adc
xchg
inc
dec
loope
xor
push
push
cmp
sub
movsb
dec
ret
arpl
mov
pop
sbbb
or
push
add
or
rcll
pop
cwtl
das
mov
pushl
push
cs
adc
mov
or
jns
mov
scas
cmp
xchg
adc
shl
mov
cld
cmpsb
pop
jecxz
jle
jo
dec
push
ret
movsl
pop
sub
dec
mov
aam
jae
stos
xchg
sub
stos
das
stos
xchg
mov
mov
xorb
xchg
ficoms
push
bnd
cmp
cmpsl
mov
test
jno
mov
je
int3
ss
xchg
out
dec
movsb
inc
fcmovnbe
mov
jne
stos
ret
fildll
int
lods
ret
hlt
int
je
sbb
adc
cmc
in
in
sti
fcmovu
mov
movsl
ret
mov
ss
pop
xchg
add
xchg
lahf
stos
cwtl
adcb
mov
sbb
xchg
pop
aas
movsl
push
mov
fsts
bound
test
mov
jp
int
cmp
mov
dec
pop
jo
movsl
cmp
mov
ret
fnstcw
xlat
movsb
cmp
jne
xchg
dec
push
or
jl
xorl
or
inc
inc
dec
andl
add
mov
or
pop
fidivrs
add
xor
xchg
stc
mov
popa
xchg
cmc
mov
daa
mov
sbbl
je
and
fwait
sub
shll
xchg
loop
pusha
jo
cmpsl
ret
xchg
xchg
out
sub
add
out
lahf
test
cmp
mov
pop
lea
sub
fidivs
push
cmpsl
mov
popa
mov
pop
cmp
xchg
ds
mov
push
mov
int3
aaa
iret
cmp
gs
push
pop
inc
pop
mov
xlat
mov
andb
sbb
test
or
cmp
push
cld
mov
notb
lret
mov
test
push
mov
lahf
sbb
push
enter
mov
imul
cmpsb
cmp
mov
les
cltd
sbb
add
jp
mov
add
adc
in
stos
sbb
add
jecxz
pop
mov
add
idivl
in
fdivs
dec
dec
mov
jp
push
xchg
inc
fwait
shrb
in
xchg
pop
out
add
out
fwait
adc
out
pusha
punpcklbw
aas
test
mov
jle
push
jge
push
xchg
adc
in
in
popf
rcrb
mov
pop
cmp
stos
ja
lock
mov
mov
push
bound
sub
movsb
mov
pop
loop
lods
adc
xor
fstpt
push
push
js
or
sti
shll
dec
jmp
push
ljmp
jb
adc
rcrl
fucomp
jmp
inc
fisubrs
hlt
adc
sub
pop
sbb
xor
sub
inc
es
shr
cmc
xchg
jmp
sbb
pop
xor
in
mov
pop
int3
cs
push
dec
push
dec
pusha
mov
outsb
das
cmp
and
adc
call
jnp
les
cs
cmp
sbb
jne
and
jns
scas
imul
inc
push
gs
xchg
js
cmpsl
push
jmp
mov
jne
mov
shr
push
inc
pop
loop
add
es
mov
stc
inc
in
jmp
popf
xor
mov
push
push
negl
and
cld
sahf
bound
pop
adc
and
idivl
lcall
sarl
jbe
shll
enter
dec
jle
or
pop
xor
movl
into
cmpsb
andl
xor
popf
test
icebp
inc
inc
pusha
inc
enter
ljmp
mov
lds
leave
xor
mov
jecxz
imul
sub
pop
add
scas
xor
rorb
adc
fldt
cld
stos
inc
mov
mov
mov
rcll
andb
nop
push
and
in
cmp
lods
xchg
add
stos
mov
andl
clc
cltd
aam
addr16
adc
mov
push
jg
test
fiaddl
cmp
fwait
push
call
mov
xor
jmp
in
xor
loope
and
push
mov
imull
mov
pop
std
jl
subb
xchg
lock
mov
push
call
mov
jae
pop
test
push
jnp
pop
xchg
sub
xor
jns
daa
jo
out
push
pop
imul
loope
add
shrb
push
xor
jo
fwait
test
dec
fists
test
scas
or
add
pop
xor
jge
push
mov
mov
lahf
shlb
push
aam
mov
xor
not
je
add
push
movsl
aam
ja
cmpsb
divb
jecxz
inc
pop
push
inc
dec
vmread
negb
std
nop
not
daa
adc
or
jb
push
or
es
test
or
pop
addr16
mov
mov
pop
call
cmpsb
add
sub
pop
pusha
mov
das
addr16
cld
inc
rcll
stos
fdivrl
ss
mov
or
add
repnz
jns
fnstenv
fcoml
xlat
popa
and
or
cmp
or
add
dec
scas
adc
jecxz
mov
mov
push
mov
push
or
mov
idiv
adc
cmp
cmc
sub
mov
lret
adc
mov
pop
sub
cltd
mov
add
decl
lea
cmp
cs
ret
sub
xchg
push
sbb
test
or
pop
out
jecxz
inc
lcall
xor
jmp
out
xor
jmp
adc
cmp
int
repz
ds
imul
decl
sbb
mov
test
shlb
repnz
sbb
incl
call
shlb
mov
xchg
popa
clc
add
dec
in
jl
sbb
movsb
cltd
orl
sbb
xchg
iret
std
push
je
lock
lods
xlat
lods
pop
repnz
ja
push
and
push
stos
pop
lret
hlt
lret
inc
loop
fstl
add
inc
adc
in
cmc
clc
enter
xchg
pop
notb
cli
test
scas
adc
shll
in
imulb
mov
mov
add
ret
jle
adc
dec
call
cmp
lods
jle
mov
pop
jne
cmp
aam
rcrb
push
push
mov
ds
pop
push
enter
iret
inc
ret
mov
xor
inc
mov
enter
in
subl
inc
stc
push
pop
imul
pop
and
sti
sub
push
lret
in
sub
mov
cltd
js
sarl
enter
jle
sbb
loop
pop
data16
jns
mov
test
cmp
sub
aad
lods
mov
fisubrs
dec
dec
je
ss
insb
movsl
dec
jecxz
or
dec
mov
push
cmp
adc
sbb
mov
dec
xchg
add
sub
push
call
ficoms
jo
pop
cmc
push
inc
loop
popa
dec
adc
fwait
bound
loope
outsl
test
inc
nop
push
inc
inc
bound
push
in
mov
aas
rorl
mov
and
bound
dec
addr16
dec
cmp
and
pop
lds
push
push
dec
inc
mov
lahf
sti
adc
mov
cmp
ret
bound
dec
pop
out
mov
dec
mov
stos
mov
cmp
sbb
jge
test
add
jae
lock
push
xchg
jo
fwait
outsl
das
pusha
stos
mov
lcall
stc
test
mov
add
sbb
into
test
mov
sti
loope
dec
loope
or
sti
sbb
dec
xchg
pop
hlt
in
daa
adc
and
popa
int
sti
lds
lret
cltd
mov
clc
and
and
shrl
addr16
sub
ds
out
stc
add
icebp
popl
insb
cmp
addr16
adc
ljmp
add
sahf
fwait
icebp
loope
in
iret
jae
push
inc
lock
movsl
imul
out
insb
lahf
and
or
jmp
jmp
or
or
mov
xor
in
cmc
adc
jns
push
test
js
add
jno
jae
mov
sbb
xchg
mov
jo
fiadds
mov
jmp
mov
and
sub
insl
loopne
sub
push
mov
ja
bound
mov
aas
adc
push
hlt
test
mov
pop
push
in
pop
std
xchg
push
mov
out
sti
in
adc
sbb
pop
inc
gs
xchg
sbb
dec
xor
push
pop
push
loopne
or
cmpsl
les
dec
jb
mov
cmc
fsubrl
dec
cmp
imul
ret
fadds
fisubrl
xchg
and
int
fldcw
rorb
gs
aaa
or
pop
hlt
pop
les
jnp
mov
aad
or
fwait
push
aad
inc
ljmp
cmp
add
cmp
scas
in
out
decb
mov
or
out
jg
mov
hlt
ljmp
stos
icebp
imul
xor
jb
and
aad
lahf
adc
roll
jne
sbb
sbb
cmpb
cld
sub
add
sbb
leave
movsb
lock
xor
cmp
lcall
lock
mov
hlt
ja
bound
stc
sbb
lret
dec
or
cmc
lahf
in
stc
push
stc
fidivrs
ja
xchg
cli
dec
cwtl
cltd
push
and
adc
testl
shrl
jle
lret
mov
sbb
and
inc
push
mov
fldpi
les
lret
inc
push
jno
mov
daa
out
push
dec
iret
or
push
mov
shll
scas
stos
insl
inc
jmp
mov
push
iret
xchg
jl
mov
in
into
mov
xchg
mov
loope
mov
ret
add
mov
xor
xlat
and
movl
jns
adc
xor
adcb
xor
cmp
push
and
fwait
jne
xchg
shlb
fbstp
lds
mov
mov
dec
cmp
push
ljmp
call
cli
orl
enter
jl
sarl
aam
gs
and
pop
repz
mov
mov
fwait
pop
ds
in
ret
inc
stc
sub
dec
inc
adc
xor
mov
jp
inc
sbb
cmpsb
movsl
aas
pop
enter
mov
xchg
ret
cli
add
hlt
pop
outsb
sbb
dec
mov
repz
xchg
mov
or
inc
lcall
and
aaa
and
in
ja
sub
enter
das
popa
inc
sbbb
and
push
in
aas
ret
pop
cmp
sahf
mov
nop
iret
dec
sbb
ja
jbe
mov
mov
ret
sbb
outsb
and
je
mov
sbb
out
dec
cmp
cmp
add
loop
dec
jecxz
lds
lods
adc
and
inc
fimuls
shll
xchg
test
sahf
loope
rclb
adc
inc
xlat
sbbb
inc
scas
mov
aaa
xor
inc
ljmp
cli
xor
sub
add
es
dec
add
and
dec
inc
add
out
mov
or
ror
xor
jnp
jne
dec
inc
jo
lret
xor
fdivrs
push
in
sub
push
dec
cmp
xor
ja
ss
cmpsb
js
cli
rcll
sbbl
pop
cli
lahf
add
movsl
stos
lods
mov
in
leave
pusha
aad
xor
fcoml
fdivp
call
or
pop
push
loope
xchg
adc
xchg
add
outsb
fstl
xor
or
adc
int
int3
or
sbb
dec
jecxz
jmp
imul
xor
in
aad
mov
add
mov
or
xor
or
cli
and
icebp
xor
addr16
ljmp
test
insl
idivb
add
pop
mov
mov
mov
cmc
lea
or
xchg
lret
mov
dec
xor
clc
inc
insb
inc
repnz
mov
xchg
sub
shrl
loopne
jo
mov
dec
xchg
inc
stc
lods
insl
adc
lahf
into
push
stc
add
daa
add
cmp
and
ror
xlat
push
aaa
sbbl
mov
pop
in
adcl
fs
aaa
mov
and
shll
dec
add
jle
sub
jnp
and
sub
lahf
scas
ljmp
notb
sbb
xchg
mov
pusha
and
push
iret
push
outsl
ret
insl
dec
enter
and
aad
xor
pop
mov
jnp
cmpsb
adc
inc
add
std
push
outsl
fdivrl
mov
movsl
xchg
adc
jo
inc
xor
hlt
shl
or
pop
jne
dec
xor
jg
dec
push
xor
pushf
push
inc
mov
adc
stc
jbe
push
in
pop
out
and
ss
js
cmp
xchg
data16
insb
out
xchg
lahf
mov
das
in
cmpb
push
mov
jl
jns
cmp
inc
lea
add
mov
into
mov
jl
das
test
rclb
stos
xor
fldt
mov
pop
mov
push
cltd
or
inc
fistpll
cwtl
icebp
mov
push
xchg
mov
lret
fbld
jne
push
jg
je
out
push
sbb
popf
decl
add
imul
cld
push
push
pop
out
adc
test
xor
add
mov
cmp
and
sbb
addr16
jecxz
bound
push
sub
mov
popa
std
in
cmpsl
sti
jno
mov
mov
xchg
pop
rorl
pop
enter
inc
rolb
dec
out
inc
cs
leave
lahf
scas
fstl
mov
out
mov
pop
out
dec
sub
stos
and
push
inc
loopne
mov
loop
int
push
js
cmp
test
aaa
inc
cli
xchg
jecxz
push
hlt
sti
add
xchg
push
cmpsb
sub
cwtl
test
or
out
outsl
push
cltd
push
aam
pop
testb
gs
cld
aad
jo
mov
ret
xlat
addl
pop
xchg
push
adc
and
mov
lahf
outsb
pop
sub
add
cmp
mov
sub
mov
enter
addr16
fcmovne
inc
push
xchg
and
cmp
sbb
andb
push
insb
cmp
cli
addr16
fldl
xor
jnp
inc
push
xchg
xor
test
fwait
insb
das
and
jno
test
pop
sub
insl
sbb
sbbb
lcall
cmpsl
xchg
testb
rcrb
mov
insl
jge
cmp
leave
sahf
es
sti
push
or
call
mov
mov
sar
pop
sbb
jl
dec
fisubrl
cmpsl
inc
gs
lret
mov
fiaddl
sarl
pop
mov
lods
cs
cli
test
out
fsubs
popa
pop
xor
xor
les
fstps
and
mov
mov
mov
inc
xchg
jp
sbb
fldenv
or
or
xor
dec
loopne
mov
adc
out
push
xchg
mov
mov
insb
xchg
xchg
inc
test
outsb
mov
mov
loopew
pop
arpl
pusha
div
pop
mov
movsb
mov
jns
mov
xor
rcll
cmc
add
out
cwtl
loope
mov
mov
mov
cmp
inc
rcrb
movsl
mov
mov
repz
fwait
inc
adc
cmp
lds
push
or
gs
mov
int3
sbb
mov
jecxz
push
mov
mov
lods
mov
out
mov
push
ds
stos
push
lods
stos
in
xlat
faddl
push
shrl
and
hlt
scas
ficoms
cmpsl
push
int3
mov
jmp
stos
push
mov
dec
inc
loop
inc
xor
shr
cmc
and
fwait
xchg
xor
adc
push
cltd
jns
mov
repnz
cmp
iret
shr
lds
cmp
js
sahf
push
pop
fistps
rcll
insl
movsl
mov
or
jle
addr16
adc
ret
jl
test
sbb
cmpsb
lret
push
mov
jecxz
stc
cwtl
fsubrl
xchg
mov
fstps
fisttpll
aas
imul
and
and
jg
inc
pop
repnz
sbb
mov
jp
leave
das
in
popf
arpl
mov
jns
xor
push
push
daa
mov
test
adc
shrb
rorb
test
cmp
outsl
sub
xchg
pop
xor
jecxz
dec
cs
dec
shrb
or
loope
push
mov
mov
adc
aad
add
inc
lds
dec
pusha
aam
mov
dec
dec
mov
stc
jp
stos
mov
leave
loope
cmp
imul
jne
dec
mov
pop
in
je
mov
or
dec
test
push
sbb
cmp
sub
mov
inc
sbbl
push
loopne
inc
pop
cli
pop
inc
push
in
lcall
mov
clc
mov
push
lea
int
les
mov
xor
mov
cmc
push
pushf
or
inc
or
push
cld
sub
aam
jecxz
xchg
or
push
lea
and
adc
fistpll
adc
xor
call
jle
insl
bound
mov
subb
nop
dec
in
jns
jmp
push
pop
sahf
stos
orl
mov
test
shrb
add
iret
fistl
call
and
sbb
aas
push
mov
mov
into
call
test
adc
xor
rolb
fisttpl
ficoml
sub
push
stos
adc
jbe
pushf
shrb
cli
repz
movsl
sub
call
sbb
movsb
pop
push
int
icebp
mov
mov
iret
cli
or
push
xor
fsubs
fildl
les
dec
fisttpl
sub
mov
pop
cltd
inc
cmpsl
inc
sub
inc
inc
push
rcrl
mov
ds
imul
mov
sbb
daa
inc
loop
xchg
adc
popa
add
inc
mov
cltd
mov
inc
sbb
lret
pop
sbb
adc
push
insb
imul
adc
xchg
inc
pop
push
aas
lea
and
pop
call
push
in
jl
mov
jp
loope
aas
pushf
rclb
jg
sbb
into
mov
shlb
lock
arpl
lds
sub
jo
aad
dec
pop
in
mov
sti
out
fwait
pop
call
enter
ljmp
xchg
cmp
and
repnz
cmp
addr16
dec
fnstenv
push
add
inc
sbb
lcall
popa
xorb
dec
add
enter
mov
sub
js
lock
pusha
aaa
sub
int
push
pusha
and
and
sahf
sub
xchg
and
jns
std
and
ljmp
aad
aas
cmp
dec
in
jp
pusha
xchg
pop
or
cltd
fimuls
push
cmp
adc
mov
popf
les
pop
ret
adc
push
inc
test
mov
fidivrs
mov
outsl
xchg
mov
cmpsb
mov
js
cli
mov
push
push
inc
cwtl
stos
xchg
add
mov
test
fsts
mov
rcll
lock
cmpsb
les
push
xchg
or
mov
push
stos
inc
push
ds
push
xor
nop
jle
inc
push
and
mov
xor
xchg
aad
pusha
jp
jg
mov
fsub
stc
rclb
testb
out
out
add
in
test
sbb
fmulp
sbb
sub
mov
pusha
ja
in
hlt
pop
lock
push
or
push
mov
imul
fimull
adc
and
sbb
or
jecxz
mov
jg
xor
jmp
cld
sbb
add
mov
sub
add
adc
mov
loope
jnp
xor
pop
jbe
test
rcl
cli
cltd
test
pop
stos
fcomip
xchg
idivl
scas
or
xorb
sub
and
mov
aas
mov
pop
sarb
sbb
cltd
negl
sub
jp
push
pop
data16
cwtl
iret
inc
out
mov
lahf
icebp
mov
ja
mov
xchg
mov
test
pop
and
cmp
jmp
dec
lods
mov
ficompl
inc
cltd
xor
popl
fxch
mov
jmp
enter
test
xchg
icebp
xchg
fildll
mov
mov
mov
mov
xchg
inc
inc
loopne
sbb
inc
aaa
push
cmp
sbb
push
call
loope
outsl
adc
mov
fldcw
or
push
icebp
sbb
xor
xor
or
xor
jae
mov
test
pop
or
mov
nop
add
mov
mov
loop
add
sahf
mov
or
ja
sub
push
jno
adc
mov
aas
mov
fcmove
pop
add
pusha
fildl
movsb
dec
pop
add
in
add
mov
in
xchg
ljmp
pop
lea
stos
push
push
mov
daa
scas
sub
mov
das
xor
sub
dec
xchg
sub
ljmp
es
xor
dec
dec
dec
imul
add
xchg
imul
or
pop
daa
icebp
add
xor
sbb
test
scas
sarl
subb
inc
in
int
or
data16
orl
push
out
or
mov
out
pushf
stos
pop
dec
adc
icebp
imul
jb
sahf
lret
das
dec
fstpl
lret
cmc
lds
sbb
jg
or
fwait
sbbl
in
push
aam
add
outsl
xor
inc
dec
loopne
fsubr
test
jbe
and
xchg
fs
pop
jb
in
movsl
and
sahf
lds
mov
jno
cmp
jle
cmp
and
sahf
les
jo
daa
int
pop
adc
jae
jp
xchg
pop
ja
push
ja
dec
and
sti
cmp
leave
sub
std
pop
mov
movsb
lods
xor
jmp
add
cli
mov
mov
repz
test
mov
mov
lret
daa
das
sbb
popa
dec
pop
dec
lea
pusha
fs
iret
xorb
daa
mov
and
jecxz
jo
fsubl
xor
pop
push
rorb
popf
pop
or
inc
xor
in
pop
outsb
lahf
push
xchg
push
fadd
subb
fdivrs
add
cltd
mov
pop
popf
js
je
dec
push
sbb
or
cmp
push
repz
adc
stos
repnz
jnp
bound
das
inc
cmp
dec
loope
push
inc
lock
or
les
push
xlat
repz
iret
push
or
into
xchg
call
pushf
xchg
and
inc
shr
dec
int3
sub
mov
scas
lret
jb
mov
pop
xor
cs
push
sbb
jmp
mov
out
cmp
gs
lahf
xchg
mov
push
jecxz
sbb
jns
and
dec
mov
sti
xchg
je
in
lock
adc
pop
cs
aas
xchg
mov
leave
imul
sbb
adcl
out
popf
sub
xor
pop
testb
and
loope
cmpsl
pop
cltd
sbb
inc
mov
fstpl
out
xchg
mov
out
sub
pop
sub
mov
cmp
movd
cmp
das
pop
mov
dec
pop
sub
push
cs
dec
popf
or
out
cmpsl
leave
lods
inc
xlat
fbstp
lds
fcmovu
mov
aam
leave
adc
mov
in
pop
bound
test
lahf
xor
xlat
inc
fnsave
push
fs
xchg
call
mov
mov
add
cmc
push
into
pushf
xchg
je
test
add
fiaddl
push
mov
loopne
push
jae
stc
sbb
dec
scas
es
jmp
inc
xlat
jno
jo
dec
lock
ljmp
dec
daa
dec
loop
jle
lds
negb
lret
call
add
adc
xchg
pusha
cmp
out
xor
dec
and
fsubr
adc
cmp
das
inc
jns
jg
int
xchg
daa
mov
jnp
xchg
stc
dec
dec
add
pop
sub
aam
xor
mov
shrl
mov
mov
clc
add
into
lahf
cwtl
cld
jg
dec
mov
jns
sub
fsubrs
fcmovnb
jl
cld
xor
jp
sbb
mov
clc
xor
lds
sbb
test
lret
inc
loopne
outsb
dec
jb
scas
fnsave
jno
roll
mov
mov
push
mov
xor
pop
ljmp
rcr
jno
mov
imul
push
pushf
out
outsb
rcll
mov
test
dec
push
pop
inc
inc
dec
pop
cmp
mov
jno
adc
insb
xchg
xchg
jmp
mov
mov
js
shrb
fucom
jl
inc
sub
ja
push
mov
sahf
adc
jle
jg
ficomps
pop
cmpsl
scas
and
mov
or
lret
ret
aad
ret
push
imul
leave
lds
leave
outsl
push
lahf
call
cmp
lret
int
pop
xor
xor
lds
jecxz
insl
stc
hlt
jae
scas
sbb
test
lret
out
mov
in
lods
sbbl
push
out
ja
xchg
movsl
and
loopne
scas
lret
jnp
aam
and
push
push
int3
out
add
nopl
sub
outsb
xchg
cli
test
and
or
cmc
xchg
add
test
lret
xlat
test
jg
cmp
jns
jl
movaps
fistl
push
push
cmpsb
hlt
add
xor
dec
sub
test
jo
xchg
orb
nop
mov
icebp
imul
and
out
jae
dec
shll
jo
cltd
cmp
push
addb
adc
pop
push
add
pop
push
and
and
mov
push
jge
sub
push
jle
fwait
sti
out
sub
cmpsb
inc
stc
adc
cmp
jb
popf
adc
lea
notb
call
or
pushf
mov
iret
arpl
pop
cltd
cmp
mov
stc
cmpsl
cmp
dec
dec
inc
jecxz
dec
gs
dec
push
rorb
fisttps
rorl
add
shrl
jecxz
inc
mov
addl
mov
fs
insl
test
cmpl
test
clc
adcl
cltd
outsb
inc
pop
lcall
dec
std
fisubs
cmpsb
dec
pop
insb
repnz
mov
push
push
mov
mov
mov
dec
iret
xchg
pop
in
push
test
clc
bound
stc
mov
jg
mov
mov
pushf
jbe
mov
lods
out
addr16
pop
repz
jne
lds
sub
int
dec
inc
andl
into
aas
call
inc
mov
lock
jno
pop
mov
mov
cmp
cmpsl
hlt
mov
test
ja
pop
mov
iret
jp
xor
xchg
mov
out
cli
movsb
repnz
xchg
xor
rol
cmp
movsb
inc
and
pop
ja
fimuls
inc
fmuls
xchg
dec
call
lcall
hlt
xchg
inc
pushf
popa
cltd
loope
and
ds
movsl
out
push
bound
das
sbb
sub
dec
out
cmp
push
cmpsl
sti
or
dec
jle
sub
add
add
movsb
xchg
fdivl
lcall
dec
mov
das
js
cltd
dec
add
addb
sub
sbb
add
iret
or
mov
dec
loope
rol
ds
in
inc
and
jg
mov
fisttps
in
mov
jecxz
repz
mov
adc
fdivrs
push
sbb
lret
mov
add
cs
or
nop
sbb
jns
cmp
dec
xchg
sbb
dec
inc
clc
mov
nop
popf
dec
inc
push
loop
mov
hlt
mov
cmp
mul
add
xlat
jl
mov
push
push
pop
enter
mov
sub
les
sbb
movsl
fildll
lahf
lods
pop
add
inc
orb
pushf
jnp
mov
xchg
sbb
cwtl
scas
sub
flds
in
xor
inc
push
xor
icebp
jge
sub
add
aas
sti
adc
popa
mov
stc
jns
das
mov
int3
aad
addr16
cltd
daa
loopne
and
clc
jo
jae
cltd
xchg
mov
fmul
jge
sub
inc
sahf
xchg
rcr
lret
jb
mul
adcb
inc
mov
add
cwtl
mulps
jg
mov
dec
sub
rol
mov
mov
gs
lret
aaa
popf
jo
test
mov
inc
sbb
mov
jnp
push
ret
roll
js
lods
mov
imul
or
jae
insl
test
dec
lds
stc
push
and
dec
mov
lock
and
ja
add
cmpsb
mov
cltd
cli
inc
inc
aas
xchg
cmpsl
aaa
adc
ss
scas
leave
push
pushf
mov
mov
nop
xor
lret
cmp
je
push
inc
loop
jno
jo
inc
mov
nop
xor
gs
outsb
lds
fiadds
sub
data16
push
adc
test
mov
fwait
jno
hlt
mov
mov
pop
jle
mov
dec
mov
sbb
in
sarl
adc
gs
mov
add
out
xchg
int3
and
loopne
insl
das
pop
popa
or
popa
inc
xchg
mov
inc
mov
scas
insl
cmp
mov
movsl
jo
jns
adc
sbb
repz
fldcw
jb
enter
dec
scas
pop
jge
jns
loop
or
mov
gs
iret
and
and
cmpsb
data16
adc
jp
aaa
outsb
aas
imul
add
test
popf
xor
sub
lods
popf
cmpl
dec
adc
mov
lcall
ret
add
pusha
call
dec
out
stos
daa
jmp
dec
and
or
aam
dec
stos
jmp
xchg
jns
in
sbb
pop
aad
xchg
movsb
adcb
xor
test
mov
mov
sub
mov
pop
dec
push
mov
sahf
add
lods
inc
in
inc
xchg
push
loope
mov
inc
cmpsl
inc
jne
push
sbb
mov
rcrl
add
fs
rcl
fs
dec
iret
loop
push
mov
mov
fstp
cli
stos
mov
jo
ds
fsub
loope
pop
popf
aam
jo
inc
cmc
and
movsl
daa
mov
and
ret
inc
sub
xor
adc
inc
cmp
fs
fiaddl
ficoml
push
add
enter
add
add
ds
xor
stc
fwait
das
getsec
push
in
data16
dec
in
mov
in
das
clc
test
cmpsl
in
loopne
rcll
cli
mov
xor
sti
imul
mov
mov
sub
sbb
inc
xchg
sahf
inc
and
jg
test
ja
adc
jbe
sbb
in
fadd
test
pop
std
scas
push
xrelease
add
sti
shlb
push
imul
and
sub
push
repnz
sbb
jnp
sub
shrl
adc
jno
lret
mov
mull
xor
pop
nop
lods
mov
dec
jmp
cli
xorb
xchg
stos
hlt
xchg
add
dec
push
orb
shll
jno
js
aaa
sbb
inc
jbe
jmp
icebp
lcall
inc
jne
aaa
addr16
shlb
mov
mov
stc
and
jb
dec
stos
outsb
jle
ret
jg
ret
insl
cs
iret
sbb
jns
mov
mov
pushf
decb
jno
inc
dec
test
inc
dec
test
jmp
out
test
lods
cmp
jo
mov
mov
mov
iret
sub
mov
je
dec
es
testl
inc
aad
sahf
sbb
add
xor
inc
jns
inc
mov
pop
sub
call
pop
mov
mov
shlb
sub
testb
jae
fchs
inc
adcl
push
mov
inc
outsb
lret
adc
test
sbb
mov
jle
mov
jo
jno
sarb
push
mov
push
sbb
movsb
daa
cltd
insb
faddp
divl
shlb
sub
mov
clc
push
push
iret
inc
add
add
scas
add
dec
add
call
dec
das
pop
icebp
movsl
sbb
push
push
or
popf
jo
lea
jl
jno
addr16
mov
jbe
mov
std
cltd
jmp
mov
jae
out
dec
ljmp
call
xchg
and
jne
inc
jno
xrelease
test
movsl
xchg
sbb
sbb
mov
inc
and
xchg
cmpsl
ljmp
fsubp
mov
imul
mov
mov
addr16
jecxz
pop
leave
out
push
cmc
cli
ficomps
out
mov
jo
sbb
sbb
inc
mov
lds
push
mov
or
lods
stos
pop
out
nop
hlt
gs
push
push
sub
inc
es
aas
cmpsb
nop
das
adc
push
mov
sub
adc
xchg
mov
jo
inc
cwtl
and
or
push
sbbl
adc
hlt
adc
stos
cmp
adc
xchg
inc
int3
inc
lcall
pop
cmpsb
xchg
es
rcl
insl
sub
ret
roll
or
sub
lret
mov
mov
jnp
add
hlt
mov
xor
pop
jo
inc
mov
dec
loopne
adc
inc
and
and
inc
push
rclb
inc
clc
enter
stc
xchg
inc
jmp
jmp
testb
aas
jb
mov
sarl
cmp
add
imul
or
cmp
das
inc
mov
shrb
in
xlat
outsb
and
into
cmc
mov
jl
mov
pop
mov
mov
in
jns
xor
add
xchg
cwtl
pushf
push
adc
sub
cmpsl
sbb
les
ret
mov
add
xchg
aam
jno
stos
scas
cmp
or
inc
repnz
insl
lods
xchg
leave
ss
push
in
addl
repnz
xor
mov
push
pop
push
in
push
mov
cmp
fucom
mov
dec
adc
adcb
or
repz
cmp
sub
fstps
push
sub
cltd
lock
adc
outsl
into
das
mov
push
sbbl
sub
mov
jbe
packsswb
insb
cli
pop
test
ficompl
test
stos
jnp
loop
jns
or
imul
repz
pop
hlt
jl
pop
jb
pop
push
movsb
mov
fwait
sub
mov
xor
mov
sub
inc
loope
cmpsb
sbb
icebp
pusha
pop
sbb
sub
push
in
xchg
and
jg
cmpsl
and
push
mov
fucomp
cmpsl
setbe
jbe
outsb
fsubrs
mov
push
push
icebp
psubb
cmp
xor
push
arpl
mov
clc
jae
mov
pop
and
pop
stos
cmp
add
data16
aas
mov
out
pop
ret
fsubrl
loop
push
sub
cmp
in
and
aas
xchg
insb
jmp
test
and
sub
mov
sbb
sbb
adc
cwtl
das
jno
ss
xchg
sahf
dec
icebp
or
ret
jge
pop
repz
mov
faddl
mov
std
movsb
cmp
adcl
scas
out
sbb
stos
push
imull
inc
ljmp
push
adc
lods
and
shlb
out
imul
testb
hlt
mov
push
xchg
xchg
dec
mov
cmp
faddl
lret
adc
sbb
ss
imul
iret
arpl
pop
nop
imul
xor
rclb
mov
push
inc
and
pop
mov
mov
push
cmp
lret
add
sahf
inc
mov
push
mov
je
loop
in
jo
pop
lret
jp
jg
xlat
sub
mov
es
shrb
xchg
push
loopne
lock
out
cmp
push
pop
leave
pusha
dec
fcmovb
pop
lret
mov
inc
add
xor
sti
pop
out
ljmp
mov
lea
daa
mov
nop
pop
push
out
xorl
mov
xchg
pop
or
mov
scas
inc
push
daa
xchg
lea
cld
xchg
cvtps2pi
and
bound
in
test
and
jns
notl
cmpsl
out
fsubrs
xor
mov
ja
add
mov
scas
daa
xor
movsb
hlt
lock
jno
or
mov
sbb
xchg
xchg
imul
pop
cmc
fistpll
inc
fldcw
jne
clc
push
mov
andb
lret
jmp
les
inc
mov
ss
add
push
loope
mov
fldt
jge
in
mov
sub
push
sti
insl
add
add
js
aas
push
call
push
jp
imul
inc
fdivl
sub
imul
and
jge
cld
sbb
fnstsw
int
clc
jg
cltd
mov
and
andb
cmp
sbb
insl
xor
imul
shrb
pop
dec
aad
out
out
pop
lods
gs
fwait
and
jge
add
fldt
or
ret
ja
adc
sub
lea
imul
pushf
ja
inc
and
jmp
sub
mov
fstpt
sub
or
arpl
cmpsb
sub
sub
mov
adc
jp
push
dec
pusha
test
rcrl
rcr
and
and
adc
ret
je
jmp
mov
mov
pop
pop
xchg
cltd
imul
sub
cmp
and
cmp
inc
std
push
fdivrl
pop
mov
ljmp
jge
aas
mov
lret
shr
divb
lcall
mov
mov
push
mov
pop
push
jb
push
sub
mov
sbb
int3
jle
in
shll
imul
imul
xor
pop
aam
arpl
nop
jnp
outsb
sub
jb
lcall
mov
rclb
mov
outsl
xchg
lret
inc
add
mov
inc
lcall
add
outsb
dec
iret
int3
incb
jge
adc
cmc
or
adc
xchg
push
jge
cmp
pop
out
test
xchg
montmul
cmpsb
add
lea
outsb
ret
mov
stc
les
lods
mov
pop
repnz
push
adc
sub
fisubrs
or
mov
xor
data16
xchg
jbe
sbb
iret
mov
mov
popf
fsubrl
push
xor
test
xchg
icebp
xor
in
adc
mov
cmp
jmp
std
xchg
cli
or
jecxz
sbb
js
pop
push
arpl
xchg
jmp
pop
popf
lods
jle
jl
loope
out
jae
mov
stc
sbb
cmpb
es
arpl
movsl
leave
pmaxub
jmp
mov
lcall
add
jge
out
lcall
mov
outsl
mov
mov
push
and
mov
outsl
mov
out
mov
sub
es
xchg
mov
mov
mov
mov
cmp
test
adc
iret
sub
dec
jae
or
sbbl
popf
push
stos
nop
shrl
dec
pushf
pusha
repnz
icebp
mov
lcall
testl
into
loope
js
mov
test
mov
lods
ret
dec
mull
scas
jno
mov
incl
cs
lock
mov
mov
mov
xlat
cmpsl
imul
stos
cmp
mov
cltd
or
test
arpl
adc
jecxz
outsb
cli
push
ret
and
bound
out
sbb
cwtl
in
mov
push
jo
mov
ret
sub
cmpsb
inc
sub
push
pop
gs
add
lods
pop
lock
fwait
cmpsl
in
or
insl
clc
sahf
ret
enter
and
loopne
dec
repz
mov
imul
lods
sub
adc
push
aaa
adc
inc
cwtl
mov
out
notl
jle
movsl
lock
xor
scas
adc
or
in
sbb
mov
dec
add
mov
lods
xchg
sbb
or
pop
movsl
sarb
xchg
stc
aam
bound
and
inc
add
je
lahf
mov
js
stc
jbe
push
push
jp
inc
movsb
mov
jne
jl
int
sbb
out
pop
push
fnsave
adc
jnp
mov
fiadds
mov
lods
aad
xor
dec
scas
nop
xchg
xor
cmp
rol
xchg
sbbb
popa
lods
sbb
les
les
arpl
into
mov
sbb
adc
imul
test
leave
pushf
sub
xchg
cmpsl
xchg
lea
mov
shrb
add
cltd
imul
mov
in
sbb
pop
out
xor
mov
cld
inc
mov
hlt
cltd
xor
mov
out
scas
int3
xor
insl
aas
push
les
mov
push
push
fwait
and
es
ds
jo
push
add
sbb
mov
pop
cld
int3
push
mov
je,pn
hlt
mov
dec
pop
imul
dec
scas
lock
hlt
lret
cld
and
loopne
push
inc
dec
push
cmpsb
dec
lret
pop
fs
mov
in
sbb
cmp
push
cmp
ja
test
jg
xor
data16
cwtl
mul
std
ret
popa
leave
xlat
mov
negb
jle
insb
pop
outsb
lahf
mov
leave
push
xor
pop
fcomps
arpl
xor
daa
int
push
adc
dec
xor
jne
pop
js
shl
adc
sysenter
cmpl
mov
inc
fsubrs
inc
pop
divb
iret
add
cs
jmp
sbb
cmp
dec
and
push
sbb
pushf
push
inc
iret
or
js
cld
dec
aaa
mov
mov
das
ljmp
push
outsl
test
js
aam
mov
lahf
les
icebp
pusha
fwait
and
lcall
inc
push
pop
subb
adc
adc
xchg
pop
pop
xor
pop
in
inc
neg
idivb
and
push
push
jno
leave
in
loopne
jmp
adc
cmp
add
inc
inc
in
std
jb
test
in
inc
add
jnp
repz
fidivl
das
call
mov
push
jle
imul
and
mov
out
or
fcmove
push
mov
es
unpcklps
int
adc
repnz
popf
out
xchg
das
mov
filds
insb
jle
mov
aas
int3
adc
mov
mov
mov
out
outsb
add
cs
mov
cmp
jbe
push
jge
mov
and
stc
cmpsb
into
arpl
xlat
jno
loop
std
int
aas
leave
movsb
push
push
jmp
jne
mov
push
dec
pop
pop
lret
jno
push
aaa
jb
jae
popa
push
jae
adc
push
rcll
clc
popa
and
sti
lock
jno
rsqrtps
or
ja
sub
out
adc
push
lds
test
jecxz
shrb
adc
out
into
lds
mov
xchg
adc
add
sahf
sbb
fistps
push
roll
jmp
cs
jns
cmp
das
inc
stos
insb
pop
nop
dec
pop
mov
cwtl
xchg
ret
idivb
or
lcall
mov
bound
pushl
testl
out
in
push
lods
xchg
xor
and
xchg
jnp
mov
pop
ljmp
push
xchg
mov
pop
cmp
loope
jb
xlat
add
data16
xor
inc
ljmp
test
push
cmpsl
adc
stc
or
pop
adc
mov
cli
addl
sub
add
fisubs
insb
push
mov
popf
pop
repz
mov
call
fisubs
inc
fsts
ret
xor
std
pop
repz
cmpsb
lods
outsb
les
dec
in
jp
insl
mov
dec
add
jecxz
sbb
and
xor
add
jno
mov
mov
xlat
mov
add
cmp
fldl
fisubs
sub
sti
cmpsl
sbb
add
fs
divb
inc
popa
dec
lock
out
mov
hlt
int3
add
mov
and
xchg
push
call
mov
les
or
popa
xchg
andb
pop
sub
mov
adc
icebp
lods
stos
xchg
sub
stos
sbb
mov
ljmp
pop
test
dec
add
ret
xor
into
xchg
lret
cltd
pop
loop
mov
jo
out
insl
sar
sbbb
and
aas
inc
add
cmp
loopne
lock
dec
imul
lock
je
or
ret
push
out
in
stc
shll
xchg
xchg
pop
xor
and
mov
cmp
mov
icebp
orb
jge
lret
repnz
mov
adc
pop
jge
enter
jno
inc
dec
ficoml
clc
inc
subl
adc
xchg
ss
push
mov
aaa
lret
imul
jp
and
mov
dec
lea
pop
jl
loope
push
mov
sub
cmp
bound
call
jmp
pop
xor
lret
xchg
insb
stos
outsb
pop
lcall
jp
dec
xchg
mov
add
xchg
and
popa
call
mov
jge
lret
hlt
pop
sbb
dec
fsubl
push
ljmp
pop
imul
out
fst
js
sbb
and
sub
inc
adc
xchg
mov
or
add
daa
je
pop
xchg
ljmp
cld
mov
or
sub
mov
fs
jmp
lods
or
pop
pusha
stos
push
notb
or
cmpsb
inc
xchg
imull
std
push
call
lcall
mov
incb
test
mov
jp
icebp
mov
mov
adc
pop
mov
lea
add
sbb
push
gs
push
popf
xor
ds
arpl
mov
push
scas
int
stos
rcr
or
inc
test
inc
or
push
adc
lahf
jnp
mov
push
scas
dec
inc
add
xchg
pusha
subl
fwait
mov
js
repnz
rdtsc
repnz
pop
mov
xchg
mov
stos
xlat
xchg
out
pop
data16
and
mov
xchg
cltd
xor
inc
mov
cmc
mov
sbb
add
outsl
in
hlt
xchg
jmp
aaa
into
ret
sahf
xor
mov
insl
cli
or
mov
adc
xor
dec
movsb
mov
aas
push
adc
outsl
pop
mov
push
data16
mov
xchg
idivl
fisubl
pop
mov
fs
js
pop
aam
jnp
cld
dec
in
fiaddl
add
or
leave
xor
test
xor
sub
push
sti
xchg
inc
pusha
testl
imul
pop
sbb
je
mov
xor
mov
xor
sub
add
rorb
push
adc
and
push
loop
leave
mov
repz
or
adc
insl
xor
xor
lcall
jnp
jmp
inc
into
cmp
sub
lods
and
adc
inc
jne
pop
adc
movsb
pop
adc
shrl
or
dec
cwtl
mov
in
inc
jmp
leave
sub
mov
xchg
andl
mov
dec
jle
je
xor
fs
mov
xor
fcoml
mov
mov
lds
outsl
out
test
xchg
push
xchg
push
inc
push
fwait
ja
pcmpeqw
mov
add
jns
sbb
mov
xchg
in
ljmp
scas
js
mov
out
sahf
adc
pop
hlt
cmp
rolb
sbb
xchg
inc
sbb
sbb
bound
popf
jnp
jp
xchg
std
popf
aad
and
insl
leave
xchg
cmc
out
movsb
mov
jbe
pop
stc
insl
das
sub
push
cmpsb
xor
lret
add
sub
sub
jns
dec
popa
jno
mov
inc
in
jle
in
mov
mov
movsb
cmp
ret
jne
lret
in
push
in
movsb
inc
lock
jle
pop
mov
push
push
outsb
xor
pop
rdmsr
adc
ror
in
dec
pcmpgtd
aam
test
mov
inc
jge
mov
push
xor
xor
leave
xor
jo
ljmp
jl
aaa
mov
sub
pop
pop
push
push
jmp
lcall
push
scas
jns
int
test
or
mov
sbb
mov
pushf
mov
lds
loopne
sahf
lret
loope
lret
jne
sub
jbe
cmp
loope
repz
xchg
add
ficomps
test
faddl
shll
mov
in
sbb
stos
lcall
ja
sbb
loope
adc
ds
adc
in
jo
lea
dec
fs
shrb
adc
lods
fs
je
lret
movsl
dec
insl
les
es
dec
aam
xor
fprem1
rcrl
in
xchg
andb
int3
loope
js
in
js
inc
test
xchg
sbb
add
jo
leave
test
pop
mov
scas
lret
pop
or
mov
push
scas
addl
cmp
pop
imul
out
cmp
mov
or
enter
fsubrs
mov
or
sub
jge
mul
and
sbb
xlat
cmp
cmp
and
rorl
push
jnp
int3
mov
xchg
int3
push
mov
arpl
inc
and
stos
ljmp
addr16
dec
push
test
adc
push
testb
test
cmc
adc
add
or
adc
and
mov
into
mov
lret
xchg
pop
pushf
add
sub
cmp
in
mov
pop
jp
dec
ljmp
pop
jl
repz
mov
jp
pop
out
out
hlt
lahf
out
inc
mov
push
int
mov
mull
mov
imul
dec
inc
dec
xchg
std
std
sti
notl
sub
xchg
pop
mov
push
and
lods
idivl
cmp
movsl
sub
adc
jle
jno
jge
out
mov
mov
mov
add
test
xchg
pop
hlt
fiadds
cli
je
sub
push
addr16
rcrb
push
stos
cmp
rcrl
loope
inc
xchg
mov
in
icebp
or
mov
push
pop
xchg
mov
mov
inc
push
cmp
les
mov
out
in
xlat
xor
cmp
lea
jno
add
jbe
popf
pop
pop
jne
xlat
pop
inc
pop
cmp
inc
xor
pop
cmp
pop
sub
shr
les
mov
sbb
pop
repnz
dec
and
loope
out
popf
mov
adc
cltd
and
insl
add
jae
pop
cmp
or
gs
sbb
xor
xchg
adc
adc
inc
pop
push
fnstsw
je
sbb
jp
fisubs
inc
cmpsl
std
test
je
or
sti
dec
cmc
xor
dec
fdiv
les
mov
inc
jbe
add
cmp
subb
adc
popa
mov
xchg
sbb
shl
ja
das
int
aam
incb
push
mov
mov
aaa
xchg
aad
cwtl
nop
push
and
scas
test
mov
or
inc
add
push
aas
int
xchg
jmp
xchg
enter
packuswb
inc
adc
sbb
jecxz
adc
mov
cltd
mov
sti
shlb
rorl
stos
and
rcl
lret
jl
mulb
sub
mov
jle
std
scas
fmull
std
cld
les
pop
loop
dec
sahf
loop
enter
call
mov
or
and
pop
loopne
and
dec
push
sub
push
pop
das
adc
hlt
mov
loop
cld
rcl
push
and
sub
js
mov
dec
inc
jmp
or
mov
or
shr
fwait
adc
and
mov
std
lods
push
nop
sbb
adc
jae
int
ja
and
in
scas
sbb
fstpl
addl
push
push
cltd
sahf
xor
inc
xor
gs
rorl
fldl
fldl
hlt
psadbw
xor
mov
test
fidivrl
int3
fadds
lea
and
ror
adc
fwait
and
jb
mov
int3
and
jb
in
xchg
in
sbb
cmp
mov
xchg
push
shrb
jge
sub
cmp
jmp
cmp
insl
enter
ret
ja
aad
mov
test
jge
and
mov
outsb
outsb
mov
dec
mov
xchg
cmpb
cmc
imull
test
aaa
pop
dec
stc
xchg
and
ja
mov
pop
add
sbb
mov
mov
adc
insl
jg
icebp
lcall
gs
xor
cmp
icebp
mov
add
daa
push
sub
outsl
inc
ljmp
in
pop
adc
mov
xchg
mov
xor
mov
cmp
ret
in
dec
or
andb
jb
mov
xor
sti
lock
stc
out
popf
stos
mov
mov
fwait
push
push
pop
outsl
orl
into
fisubl
pop
mov
and
out
daa
mov
movsl
loopne
jl
cmp
sub
xor
mov
loope
sub
mov
mov
lods
xchg
lock
mov
pop
dec
loope
sub
loope
aad
adc
scas
dec
jecxz
outsb
mov
mov
cmp
lods
or
andl
icebp
mov
jle
shlb
jl
mov
ret
lods
int3
cs
inc
sbb
xchg
insb
sbb
outsb
pop
fcoml
pop
adc
movsb
insl
fdivl
push
pop
das
dec
movsb
out
sub
mov
and
cmp
test
jns
or
xor
pop
call
xor
jae
inc
mov
pop
shrl
mov
mov
push
adc
fidivrs
push
pop
ret
dec
push
js
or
mov
sub
ficompl
cmpsl
sbb
cltd
lock
cmc
adc
pop
addl
test
mov
pop
rcrb
dec
cmp
mov
rclb
bound
and
loop
std
push
out
push
cmp
jp
sbb
dec
push
outsl
dec
or
xchg
aam
js
cmc
adc
add
pop
sahf
popa
movsb
add
cmp
inc
lods
out
mov
out
xor
pop
std
in
fnstsw
nop
dec
int3
test
imul
das
loop
lret
adc
inc
adc
inc
fnstcw
xchg
sbb
imul
int3
fcomps
iret
fidivs
arpl
sbb
lock
adcb
push
fisttpl
int
subb
pop
mov
cmpl
add
mov
int
inc
pop
jae
dec
jno
jl
stos
adc
jmp
inc
cwtl
fidivrs
cld
xchg
test
movsl
mov
subl
adc
stos
frstor
pop
lret
inc
faddp
mov
or
sbbl
out
lahf
cmp
adc
out
insl
cmp
cltd
dec
mov
ret
xchg
imul
dec
das
jg
xrelease
mov
out
sbbl
cld
in
add
mov
push
sbb
mov
ret
repz
lods
adc
clc
sbb
xor
shrb
out
sub
mov
xchg
aas
out
jo
js
pop
mov
push
inc
lods
adc
or
inc
xor
fistpl
jae
pusha
lcall
inc
outsl
shr
inc
popa
jmp
add
fnstenv
mov
add
or
sub
or
jns
std
in
jns
test
mov
adcb
sti
xor
bnd
or
jge
test
mov
bound
mov
sub
cmp
outsl
movsl
jb
sahf
movsl
loop
sub
sahf
sti
cltd
pushf
jne
dec
mov
nop
xor
sub
out
fyl2xp1
adc
lret
icebp
inc
mov
in
and
std
jg
cmpsb
sbb
push
loopne
dec
clc
pop
cmp
jp
jae
lods
xchg
push
mov
sbb
push
add
sti
fdiv
into
mov
pop
in
loop
rol
int3
test
js
push
and
xor
addr16
mov
lret
pop
cmpsl
pop
cmp
xchg
dec
dec
fdivl
push
js
inc
adc
subl
jo
adc
and
aam
fsub
jle
mov
in
pushf
repz
xchg
mov
lret
xor
pop
or
into
xchg
jge
mov
add
sarl
xor
mov
stos
dec
idivl
shlb
mov
xchg
cmp
sbb
mov
push
or
sarb
addr16
dec
pop
js
cmp
cmp
jnp
cmp
jmp
and
pop
outsb
cmc
adc
mov
gs
imul
loopne,pt
ja
dec
add
out
aad
stc
jae
jmp
mov
flds
cwtl
stos
aad
stc
ret
ret
push
test
lock
lods
add
ret
mov
in
ret
lret
lock
inc
sbb
dec
xor
push
and
notb
cmpsl
dec
call
and
aas
pop
icebp
cwtl
test
fwait
fwait
push
ficomps
xchg
mov
mov
loope
fmuls
pop
pop
jmp
xlat
lcall
fmull
and
xchg
out
sbb
test
and
pop
imul
sub
lret
loop
bound
loope
stc
cmpsl
fisubl
xchg
jno
dec
in
cmp
mov
pop
sub
inc
fmull
pop
jecxz
into
test
jle
mov
mov
ror
add
jecxz
or
cmp
xchg
mov
inc
add
mov
sbb
mov
mov
inc
and
push
punpckhbw
inc
sti
popa
icebp
stc
subb
add
out
into
roll
xchg
xchg
cmp
mov
mov
jb
imul
inc
cmp
pushf
scas
out
sub
fdivs
inc
jnp
jg
in
or
je
mov
lods
adc
das
out
orl
mov
inc
mov
mov
mov
pop
push
xchg
fdivr
and
jle
cmp
sub
xchg
add
dec
dec
pop
cltd
fildl
call
aaa
push
jmp
adc
dec
loope
push
mov
pop
inc
jmp
push
out
icebp
mov
jecxz
rcrb
clc
mov
inc
es
cmp
cli
cwtl
shrb
sbb
pusha
mov
push
mov
adc
lds
fwait
loop
push
jmp
testb
addl
sahf
fiadds
bound
dec
pop
jecxz
pop
jne
mov
inc
shrl
sti
adc
push
int3
jp
sub
sub
clc
push
cld
xchg
xchg
sub
popf
das
mov
xchg
mov
loop
mov
push
pop
jmp
push
sti
add
popa
leave
loopne
mov
mov
lret
lret
sti
in
popf
push
cltd
mov
mov
mov
leave
cmp
negb
idivb
xor
repz
mov
sbb
subl
xor
shr
xchg
mov
cltd
sub
ficompl
movsb
dec
int
adc
popf
stc
xlat
es
mov
xchg
mov
aad
std
add
rcrb
push
ss
imul
rclb
loopne
aam
fimuls
dec
shr
out
cmp
jns
pop
in
cmpsl
inc
mov
cmp
adc
fidivl
sub
xchg
xchg
pusha
dec
aad
ljmp
jno
clc
fmulp
dec
icebp
in
push
fnstenv
pusha
xor
bound
test
adc
lods
shl
jmp
add
filds
or
lea
push
xchg
jl
jmp
cmp
ds
dec
outsb
clc
push
mov
aam
iret
icebp
mov
add
les
xor
and
pop
std
insb
lea
ficompl
stc
je
inc
mov
ds
loopne
lret
cmpsb
mov
cmp
dec
lock
xchg
xchg
cmp
dec
sub
cmp
or
cmp
push
arpl
xchg
je
es
mov
push
mov
int
aas
insb
inc
mov
in
stos
mov
inc
ds
loop
enter
pop
shrb
cmp
adcl
mov
mov
repnz
ds
scas
fadds
or
mov
or
rcrl
sub
scas
mov
data16
inc
int
fildll
cmp
imul
jp
xchg
pop
bound
jecxz
xchg
mov
ds
ret
das
test
jno
cld
sub
push
stos
into
and
jmp
test
xchg
and
pop
jg
xchg
xchg
mov
push
mov
outsl
repz
or
aad
lods
adc
mov
inc
movsl
add
xor
lret
movsb
out
push
lock
push
shl
repnz
or
idivb
jle
sti
outsl
add
loop
adcl
addl
into
jno
clc
popf
push
pop
repnz
sbb
aad
cli
lds
hlt
push
xor
lods
push
jl
and
lds
add
dec
testb
in
pop
scas
das
outsb
adc
mov
add
and
int3
cmp
sbbb
sub
and
or
mov
or
jbe
xchg
loopne
stos
push
add
jb
and
adc
clc
dec
mov
insl
in
mov
dec
ljmp
lods
mov
and
pusha
xor
jg
push
xchg
fwait
outsb
push
xor
push
jp
out
ds
fucomi
jl
fmull
sub
fcoms
pop
pushf
add
xor
sub
add
pop
out
dec
sub
call
sbb
js
lods
imul
scas
xchg
adc
not
pop
loopne
adc
mov
mov
stc
xchg
aaa
add
pop
insl
fdivs
cltd
test
sub
fistpll
inc
in
push
jae
add
mov
les
imul
mov
push
out
mov
xor
and
xchg
adc
loop
enter
pop
movsl
iret
gs
call
sti
hlt
in
andl
sub
adc
les
xor
gs
add
out
jnp
lods
push
adc
fildl
iret
xor
arpl
push
das
adc
jmp
inc
dec
lahf
jbe
pushf
or
or
cmp
jb
loopne
and
addr16
mov
int3
icebp
cmp
hlt
icebp
aaa
ret
xor
inc
mov
add
ret
mov
sub
fistpl
loope
add
jo
sub
jb
inc
pop
xchg
scas
movsl
lods
and
mov
out
pop
push
sahf
mov
mov
mov
dec
mov
addr16
xlat
push
leave
std
xor
and
or
add
js
add
xchg
cmpsw
jle
sub
pop
mov
add
mov
push
es
int3
xchg
cmp
loop
xor
mov
loope
and
sti
jmp
stos
lret
adc
push
xchg
and
jb
bound
bound
andl
das
inc
outsl
stc
push
xchg
cmpsl
fisubrl
adc
pop
adc
lods
push
add
sub
cmpsl
out
imul
xor
mov
jb
mov
sub
es
mov
leave
xor
es
in
jae
cmp
test
stos
jbe
js
push
xlat
jo
jne
lahf
push
fisubrl
dec
mov
imulb
mov
fstp
notb
fimuls
dec
mov
jb
mov
xchg
cmc
stc
push
fs
jns
popa
xchg
ss
lock
mov
xor
adc
mov
call
inc
jl
mov
sub
stos
xchg
popf
sahf
hlt
test
jnp
fstpt
mov
sbb
in
mov
fists
dec
lcall
fdivrl
movsb
dec
stc
dec
jp
cmp
mulb
mov
cmpsb
stos
fcmovbe
mov
adc
subl
sbb
push
fstl
sbb
aaa
mov
rcrl
pop
ja
xor
cmp
pop
lcall
push
jbe
test
or
ret
sub
xorl
jge
fiaddl
sub
repz
arpl
push
jle
push
xchg
sub
aas
mov
pop
fiadds
pop
adc
lods
jo
mov
mov
xchg
add
mov
inc
push
pop
pop
mov
lods
into
fsubrl
cs
scas
cltd
mov
fdivrl
cmpsb
test
rcll
sub
inc
fisubrl
jmp
mov
pop
and
ja
xor
mov
lret
andl
push
add
cmp
test
js
dec
loop
push
xor
pop
lock
xchg
xor
mov
fadd
dec
push
sahf
ret
cltd
dec
jle
imul
sub
mov
cmp
cmpsl
popa
bound
rcrb
mov
cli
cmp
fxch
or
and
popa
adc
mov
popa
filds
test
mov
add
sbb
pushl
cmpsb
mov
dec
jmp
aam
xlat
and
jp
clc
std
xchg
jp
mov
adc
sub
jno
mov
jmp
ret
loope
adc
sub
pop
fisubrs
sarl
fmulp
jae
icebp
inc
sub
movsl
pusha
mov
test
movsl
jb
ds
pop
fbstp
push
idiv
dec
test
pusha
pop
jmp
adc
lret
nop
and
or
sub
fs
or
inc
movsl
or
mov
lahf
sbb
mov
loopne
ss
cltd
shrl
sub
sahf
insl
mov
mov
adc
imul
cmp
jnp
or
mov
out
arpl
xor
js
mov
add
inc
cmc
dec
movsb
ljmp
cmp
shll
pop
rol
adc
xor
and
xchg
fidivl
mov
movsb
jns
loopne
mov
stos
in
rclb
add
bound
mov
loope
aas
mov
cmp
push
in
adc
negl
es
out
ror
loopne
stc
mov
mov
les
push
ja
sahf
xor
leave
call
daa
mov
rcl
inc
fildl
fcomip
stos
inc
ss
lret
add
push
xor
add
dec
sahf
and
out
and
mov
inc
add
fdivrs
push
js
mov
sub
pop
sbb
mov
nop
add
sub
call
out
inc
pushf
jg
adc
adc
push
cmpsb
ljmp
sbb
and
mov
sbb
sbb
or
cltd
je
lret
aas
andb
ljmp
adc
imul
mov
mov
in
jnp
insl
jne
scas
test
shl
add
fdivs
aam
xor
dec
mov
call
sub
push
pop
jbe
jmp
or
add
cmpsl
popa
jmp
or
or
jmp
dec
jecxz
mov
push
fs
adc
jns
inc
iret
dec
fbstp
aam
jb
mov
gs
mov
arpl
sub
cmp
repz
fidivrs
aas
fcmovnbe
testb
mov
mov
jge
xchg
movsb
daa
leave
cli
repnz
sar
mov
out
inc
bound
mov
and
sbb
pop
adc
sbb
sbb
jmp
or
sub
push
push
addr16
push
and
mov
dec
lret
pop
lds
addr16
mov
mov
xchg
and
xlat
sbb
or
rclb
lcall
add
imul
push
lea
cmp
fwait
testl
notb
xchg
inc
ret
scas
cmpsl
mov
inc
sarl
std
out
or
jno
or
sahf
adc
push
sti
aam
test
cmpsl
xorl
cli
clc
nop
clc
sarb
xchg
pusha
aaa
imul
roll
out
test
into
mov
loope
fsubl
push
aas
mov
push
inc
stc
add
push
je
and
mov
inc
lock
shlb
push
shrb
rorb
inc
arpl
xor
xchg
xchg
dec
in
mov
dec
pop
mov
loopne
jae
xor
sbb
jo
xchg
jp
jnp
insl
mov
mov
out
mov
mov
test
inc
lret
inc
and
push
pop
dec
jno
nop
cltd
xchg
vpmaxub
jle
movsl
mov
insb
pushf
pop
jp
lea
sbb
xchg
and
not
pusha
cld
lock
mov
mov
inc
test
push
inc
adc
mov
loop
mov
lds
or
ds
cmp
test
outsb
add
sbb
aaa
adc
xor
jmp
out
jg
sub
mov
push
pushf
dec
mov
lds
lods
dec
pop
test
adc
in
mov
cmp
or
out
jmp
loope
fcomi
mov
dec
nop
lfs
add
sti
into
cmp
enter
add
lcall
pop
cmp
gs
ffree
repz
mov
les
pop
inc
repnz
shll
sub
mov
rorl
sub
addb
cwtl
inc
dec
jo
scas
je
js
or
mov
ficompl
shl
jae
arpl
out
in
inc
jae
lahf
push
enter
pop
mov
pusha
aad
test
add
test
call
mov
popa
jo
data16
sbb
mov
push
sahf
pop
sti
xchg
add
lahf
imul
iret
or
in
fxch
pop
ret
hlt
js
out
outsb
lcall
pop
add
aaa
hlt
mov
push
push
ret
dec
and
dec
rcl
lods
mov
xchg
mov
rorb
stos
inc
loop
lret
mov
shll
xchg
mov
fs
loopne,pt
add
jo
pop
outsb
push
inc
ret
xchg
pop
fists
and
adc
sahf
lcall
pop
dec
jl
jmp
jge
mov
hlt
fwait
lods
sub
outsl
jno
push
jecxz
or
idivb
xor
pop
sub
mov
inc
add
rorl
and
mov
adc
data16
mov
sbb
mov
push
scas
mov
jb
push
stos
sarl
mov
xchg
jle
and
stc
repnz
cs
push
je
or
mov
imul
sahf
sbb
mov
sbb
popf
cmpsl
inc
es
adc
push
or
aas
incb
mov
daa
jno
into
mov
mov
jno
push
enter
imul
inc
adcl
in
pop
lock
mov
sub
std
je
fwait
sbb
inc
pop
mov
ret
in
jne
nop
cmpsl
fdiv
call
lods
add
inc
or
mov
out
push
cld
lds
es
fisttps
lret
aaa
or
mov
stc
jmp
sub
inc
push
xchg
movsb
pop
push
push
in
or
xchg
add
scas
mov
test
xchg
and
popa
push
add
fistpll
hlt
jmp
or
lcall
int
enter
lock
pop
or
push
pop
pop
cmp
and
and
pop
mov
out
test
outsb
jle
leave
jbe
cmp
out
je
sti
aaa
dec
push
adc
stc
nop
sbb
js,pn
sub
sbb
mov
add
mov
push
and
sbbl
xchg
push
push
jge
rcrb
je
jp
mov
test
mov
addb
mov
adc
aad
jmp
push
jo
mov
xchg
lret
and
pop
pop
out
cli
add
leave
insb
ja
sahf
ljmp
push
ss
inc
push
mov
test
fadd
nop
stos
and
xchg
dec
cmc
mov
dec
push
xchg
sub
test
jo
pop
pop
sti
xchg
pop
ret
sbb
xor
lea
jecxz
or
mov
cli
adc
xchg
iret
mov
ja
adc
stos
and
or
scas
stc
mov
xchg
iret
adc
inc
cmp
dec
outsb
loopne
into
mov
popf
and
outsl
push
jp
xchg
inc
dec
cmp
pop
testl
pop
xor
cwtl
adc
int3
jg
shrl
cmp
sub
mov
fisttpll
aas
sub
aam
cmp
cmc
xchg
cs
cmp
mov
aad
fidivl
insb
or
jo
xor
jmp
or
sub
movsl
add
call
mov
imul
jle
inc
dec
mov
dec
ret
mov
xor
dec
arpl
push
cmp
jp
aas
sbb
aam
jnp
mov
xor
mov
mov
sarl
and
pop
fld
iret
cmc
cli
jmp
pop
loop
lock
sub
jmp
popa
ljmp
or
xchg
out
xchg
in
mov
mov
and
inc
mov
inc
jmp
fidivs
sbb
xchg
mov
cld
or
ret
repz
adc
fcompl
test
pop
dec
fxch
shlb
outsl
push
cmp
mov
sub
sarl
and
cmpsb
in
rol
jns
xchg
pop
dec
mov
arpl
js
adc
xor
cltd
xchg
lret
divl
enter
dec
inc
mov
out
addr16
adc
hlt
xchg
pop
sahf
and
xchg
repnz
int
fs
mov
mov
adc
sub
xchg
xor
sahf
arpl
xor
mov
in
shl
dec
add
inc
data16
adc
aas
adc
or
fcmovne
fidivrl
and
int
andb
push
mov
or
cs
repnz
pop
pop
mov
jg
andb
cmp
sahf
jne
dec
iret
bound
into
cmp
fimuls
xlat
into
xlat
pop
mov
xchg
pop
cmc
cld
or
iret
xor
ret
mov
mov
xor
jbe
sarb
inc
jb
dec
negb
sub
outsb
lret
jp
ja
jne
fcmovne
mov
mov
test
fxch
pusha
add
sbb
add
lret
mov
test
into
lods
xchg
pusha
mov
lret
nop
ljmp
inc
frstor
pop
sarl
xchg
repnz
sbb
les
hlt
imul
and
rcrl
lea
adc
stc
test
shrb
mov
or
jle
jno
lock
mov
sbb
rcrb
push
mov
mov
xchg
mov
int
sbb
lahf
cmp
or
inc
mov
lods
mov
inc
sub
fsubl
add
cmp
jecxz
ljmp
pushf
out
adc
jns
push
ds
jge
mov
sahf
adc
mov
daa
jnp
sbbl
jl
pop
push
and
pop
mov
and
in
jmp
cld
xchg
jo
cmp
out
scas
jb
fcomps
dec
std
and
ds
in
xor
popa
icebp
add
mov
pop
sti
shr
ljmp
cmpsb
jl
mov
gs
push
or
jmp
es
scas
imul
call
cmp
cmc
repnz
int
dec
int
sbb
cltd
outsl
inc
lret
push
xor
stos
lds
mov
cltd
xor
inc
pop
stos
dec
mov
jg
sbbl
lahf
sub
je
insb
mov
sub
sahf
incb
outsl
jnp
setns
mov
jecxz
das
pop
test
mov
mov
repnz
cmpsb
mov
jno
cltd
mov
test
sahf
cmpb
mov
xor
add
push
imul
xchg
mov
testb
mov
pop
jmp
mov
xchg
or
mov
pop
lret
imul
jne
aas
mov
ss
mov
imul
sbb
or
rolb
push
fnstsw
lds
dec
mov
ja
jmp
shlb
jae
pop
mov
mov
mov
cmp
add
cmp
test
dec
mov
and
or
cs
sbb
fnstenv
push
sahf
xor
out
inc
adc
notl
fmul
xchg
inc
insl
xchg
push
mov
repz
push
adc
test
repz
mov
adc
mov
into
in
add
jp
add
xchg
stos
and
jae
mov
movsb
popa
dec
das
cmp
pop
and
daa
mov
pusha
and
xchg
sub
out
adcb
cmpsl
xchg
xor
arpl
xchg
outsl
lods
mov
shlb
mov
shrl
xchg
sbb
rorl
jg
jge
or
jle
xor
push
fiaddl
xchg
jl
jno
test
sbb
add
test
test
scas
xchg
test
inc
test
cmp
fs
pop
fcompp
popa
xor
adc
push
or
loopne
imul
leave
out
mov
mov
fsubrs
scas
cmp
push
rolb
rol
mov
aam
cwtl
imul
orl
and
xor
call
ja
icebp
fstl
inc
pop
test
data16
xchg
bound
and
mov
xchg
pop
out
stos
pop
push
xor
jp
das
mov
loope
xchg
jne
mov
mov
xor
es
mov
in
inc
stos
cmp
pop
aas
out
ss
bound
repz
lds
sub
dec
pop
pop
sar
subl
dec
and
or
jo
sub
shlb
out
std
inc
out
mov
fcomps
mov
xchg
mov
add
jb
shll
enter
fucomp
mov
inc
ret
cltd
jae
lcall
or
xorb
nop
mov
xchg
xor
mov
and
inc
cwtl
xor
sub
xchg
test
mov
jle
sub
add
adc
xchg
int3
pop
stos
das
adc
cmp
enter
mov
dec
mov
lcall
sub
inc
sbb
or
push
mov
stos
sub
in
fwait
pop
or
jb
adc
adc
pop
cmpsb
in
shll
xor
pop
bnd
shlb
or
inc
sbb
dec
jno
jg
cmp
cmp
test
aad
fsubs
rcrl
jno
shrb
fadd
out
loopne
inc
out
cs
push
pop
mov
insb
sub
or
movq
inc
push
pop
jp
sub
mov
jae
pop
dec
call
cli
mov
ret
jle
and
mov
ljmp
sub
test
inc
data16
stos
movsl
push
das
mov
jg
lods
and
out
or
cwtl
push
aam
cmp
push
icebp
test
fimuls
into
xchg
cmpsl
ljmp
mov
sbb
ljmp
mov
mov
add
adc
outsb
jl
addb
insl
dec
push
sbb
pop
jp
push
stos
inc
test
in
pop
and
fldenv
stc
mov
fstl
outsl
fildll
and
cmp
mov
jbe
repnz
sti
aad
roll
xchg
and
lds
in
xor
ds
popa
push
dec
cmp
movsw
icebp
leave
dec
dec
push
lcall
adc
dec
test
pop
push
pop
and
repnz
jle
arpl
xchg
adcb
xchg
fucomip
dec
pop
inc
inc
cmp
adc
or
ds
xor
cmp
std
or
idivl
pop
or
test
xchg
leave
mov
xorb
mov
mov
lcall
sub
and
push
jae
mov
push
int3
in
sti
xchg
repz
sbb
aad
out
adc
cli
out
sbb
dec
jl
cmpb
nop
mov
cwtl
data16
inc
movsb
pop
sbb
insl
addb
mov
xor
and
and
js
sub
xchg
cld
xchg
xor
sarl
and
mov
test
lods
adc
jns
and
lret
int3
rorb
cmp
cmc
aad
inc
repz
scas
adc
call
adc
sub
add
xchg
loopne
stc
sbb
and
leave
jne
bound
sti
xchg
into
mov
dec
filds
cltd
ficoml
and
jns
jg
scas
jle
inc
es
mov
pusha
fcomip
mov
addr16
dec
push
js
and
mov
mov
sbb
dec
aam
jge
sbb
stc
mov
leave
mov
mov
mov
daa
incb
cltd
cli
mov
push
jecxz
jmp
pop
fnstsw
xor
aaa
std
cmp
xchg
test
ret
popa
cmp
dec
imul
sbb
fsubs
adc
js
test
call
jg
push
add
in
sub
mov
lret
js
notb
adc
in
ja
xlat
adc
gs
mov
mov
pop
sbb
insl
lcall
aad
mov
fsubr
sbbb
inc
fbstp
mov
add
rcl
dec
pushf
test
aas
mov
pop
jns
sbb
adc
jl
pop
sbb
adc
or
mov
mov
ss
fidivrl
push
and
adc
in
pop
sub
fs
mov
adc
lods
nop
push
rcll
cmp
jae
adc
xchg
xchg
pop
xchg
mov
lods
out
push
fnstcw
arpl
std
lds
jp
test
sub
push
xor
xchg
ljmp
out
dec
add
adc
add
aad
orl
scas
cmp
test
add
data16
push
je
dec
or
orb
adc
sbb
iret
and
popa
jecxz
cmc
aam
push
outsb
sarl
add
cli
or
addr16
mov
push
pop
sahf
imul
mov
call
adc
mov
int
inc
leave
add
lret
gs
adc
adc
xchg
and
iret
and
add
test
and
mov
jae
inc
sub
mov
scas
mov
add
cli
test
xor
js
movsb
dec
test
cs
aad
sbb
xchg
add
xor
push
xorb
fwait
fwait
sbb
cmc
jae
dec
mov
popf
mov
jnp
xor
sbb
xchg
dec
sub
bswap
cmp
dec
xor
aad
push
fs
fs
fistl
mov
push
mov
aas
and
aaa
ret
jb
cwtl
popf
inc
adc
out
lret
out
test
loopne
pusha
xchg
bound
test
cmp
mov
stos
movsl
sub
inc
repnz
xor
cs
enter
shl
dec
dec
scas
popf
icebp
sub
sub
push
sub
lahf
cmpsb
mov
pop
enter
das
push
fildl
sbb
mov
push
sub
test
jg
fldl
imul
arpl
ja
jle
arpl
sub
jno
ret
add
imul
add
int
fisubs
sub
dec
mov
mov
mov
mov
adc
inc
iret
push
testl
pop
dec
lods
ret
lret
and
leave
insl
add
cltd
call
pop
mov
push
in
push
fsubs
sub
out
pop
into
push
or
jl
push
imul
sbb
adc
jne
sub
mov
xchg
xchg
pop
add
lret
xor
sub
repnz
dec
or
jle
test
or
xchg
inc
mov
ret
dec
or
mov
fistps
pop
in
cli
xor
je
add
lret
push
jns
test
and
dec
add
dec
xor
pop
addr16
rcrl
sub
lds
xchg
daa
bnd
push
mov
push
out
stc
adcb
xor
and
in
and
lcall
mov
fisubs
int3
ficomps
andl
add
sub
sub
arpl
out
outsl
add
inc
sub
lods
movntq
jg
mov
sub
lea
or
add
adc
out
xchg
push
fwait
sub
mov
outsl
jp
push
scas
add
inc
xlat
push
mov
lds
ffreep
fisubl
shrl
fstpl
push
js
pop
and
sti
popa
into
fstl
dec
mov
push
subl
repz
xchg
sub
pop
rcll
ret
dec
add
sbb
stos
enter
movsb
addr16
and
aaa
push
lods
negb
dec
icebp
or
dec
test
sub
ljmp
jnp
add
popf
adcb
mov
sbb
faddp
mov
dec
sbb
andl
clc
xor
push
std
in
jp
clc
mov
mov
aam
shll
ljmp
xor
jmp
leave
in
testb
out
mov
sub
cs
add
test
add
int
pusha
js
cmp
mov
sub
scas
and
test
pop
enter
mov
adc
in
shrb
pop
fists
int
pop
cltd
fdivl
dec
jecxz
cmp
or
add
sub
sub
mov
cs
popa
pop
or
adc
repz
pushf
outsl
movsb
adc
jle
lock
inc
ficoms
hlt
push
cmp
pushf
in
shrl
pop
or
aad
data16
es
into
xchg
inc
fcmovnb
out
pop
dec
jnp
bound
xchg
pushf
aad
push
cmc
inc
fcoml
mov
or
cld
mov
lods
jno
xchg
in
add
iret
ss
xor
shrl
mov
lahf
and
enter
jle
xorb
mov
mov
sbb
dec
lret
fsub
add
mov
jg
mov
jns
enter
ret
pop
inc
cs
les
iret
addl
lods
sub
sarl
cli
push
or
adc
bnd
mov
jmp
mov
push
add
ds
out
mov
fs
xor
push
jno
ja
jns
adc
in
push
lock
fistpl
out
insl
aad
pop
roll
xorl
dec
push
in
push
jne
xor
cltd
test
sahf
xchg
out
pop
mov
sti
inc
jb
pop
cmc
lods
xchg
scas
xchg
sar
xchg
jno
inc
movsl
in
fs
fwait
xchg
cmp
push
jmp
mov
fdivl
mov
jnp
fldt
cmc
or
adcl
and
ljmp
iret
out
test
or
cmp
fmul
lock
pop
push
lds
push
loop
or
push
and
mov
movsb
mov
leave
cmc
push
mov
pop
stos
cmpsl
ljmp
cmp
fadds
fisubrs
mov
and
bnd
cmpsl
pop
fcmovnu
outsl
or
test
pop
mov
sti
fwait
xchg
xchg
daa
leave
lods
push
jne
int
adc
sbb
mov
cli
push
pop
ds
mov
loopne
push
movsl
das
movb
dec
in
int3
push
fcomps
test
mov
loop
stc
ja
test
inc
inc
xor
xchg
sub
negl
mov
outsb
push
imul
mov
sbbl
je
arpl
popf
fcoms
into
mov
pop
ret
or
mov
cmp
sbb
out
cld
mov
test
ds
mov
mov
jbe
mov
repnz
int3
js
sub
pop
jo
dec
shr
inc
lret
es
adc
mov
adc
cmp
je
out
cmp
sub
sub
enter
mov
stc
mov
lea
repz
jge
mov
xorb
dec
xor
hlt
xor
xor
jmp
jmp
les
xor
lret
lahf
pushl
insl
push
adc
call
popf
push
fxch
subb
jg
adc
jecxz
ds
dec
dec
inc
mov
in
shr
stos
pop
fnsave
push
outsl
xchg
or
arpl
sub
and
lods
pushf
repnz
sbb
jp
dec
and
pop
dec
push
pushf
mov
outsb
fwait
xchg
scas
ret
loope
int
xchg
in
adc
in
push
push
das
jg
and
xchg
addr16
mov
xchg
sbb
mov
repz
and
adc
and
add
sub
mov
xchg
inc
mov
add
sbb
pop
xchg
or
mov
shrl
mov
lods
mov
and
inc
dec
push
mov
lcall
inc
and
into
pop
sbb
movsl
push
loope
shrl
xchg
push
dec
aam
inc
add
loop
xchg
ljmp
test
mov
test
pop
mov
aas
clc
out
cmpsb
push
loop
jge
call
sub
lock
loope
movl
int3
jo
mov
sub
je
pop
push
sub
xor
repz
aam
cld
or
adc
inc
test
push
cmpsb
mov
fnstenv
jno
inc
mov
sub
ficompl
pop
cmp
lcall
clc
mov
push
aad
insb
test
fiaddl
test
test
jg
adc
std
je
outsb
push
int3
or
insb
jle
ja
les
cmpsb
das
push
sbb
out
lea
ficoml
xchg
ds
mov
vmwrite
pop
dec
rorl
imul
out
mov
sbb
orb
xor
pop
xchg
mov
jnp
decl
jp
cmpb
lcall
repz
lahf
lret
lret
xchg
xlat
and
mov
add
push
add
pop
sbb
mov
add
mov
mov
test
insl
inc
sub
jo
sbb
jne
xchg
mov
push
daa
inc
and
cmp
mov
fimuls
adc
adc
jbe
xor
hlt
push
leave
ljmp
in
mov
pop
sti
bound
xchg
insb
loopne
sahf
mov
outsl
rcr
jno
mov
xor
jge
mov
out
xlat
dec
mov
mov
shl
les
sbb
xchg
icebp
push
sbb
jmp
jbe
sbb
notl
sbb
jo
adc
push
adc
push
push
dec
jge
nop
mov
outsb
sub
add
add
nop
imul
xchg
in
sbb
mov
rolb
push
loope
sbb
pusha
adc
add
popa
pop
insl
cmp
cmpsl
bound
lret
data16
mov
cmc
lea
mov
pop
enter
fidivs
pcmpgtd
inc
mov
xchg
mov
or
pop
loope
cmp
mov
sbb
pop
ret
loope
mov
imul
mov
rol
scas
loopne
andl
mov
pusha
add
xor
dec
sbb
jecxz
hlt
jb
movsbl
xchg
div
enter
mov
std
arpl
push
or
mov
jg
add
loope
cmpsl
sub
cltd
inc
xchg
cmp
or
ds
jg
imul
and
mov
arpl
nop
push
fwait
add
imul
lds
and
arpl
test
dec
sub
cmc
pop
imul
cli
mov
inc
movd
js
shrb
mov
test
mov
fidivl
add
scas
inc
outsl
dec
fwait
xor
push
stos
arpl
adc
jmp
popf
xor
or
ss
or
repz
and
inc
popf
fisubl
bound
ja
xor
mov
xchg
push
xlat
insl
outsb
in
and
or
lods
adc
lds
loopne
out
sbb
xor
mov
and
inc
mov
roll
push
jo
js
inc
mov
lods
imul
push
sub
cmp
xchg
mov
aam
cltd
and
or
mov
cld
xchg
movsl
sbb
rcrl
jp
andb
xchg
mov
int3
movsl
sbb
popf
mov
pop
jbe
fwait
cmpsl
lahf
and
jmp
fdivrl
sub
ss
insl
les
sbb
imul
dec
jno
inc
mov
push
aam
sub
pop
pop
lds
jne
ret
out
cmp
mov
jno
xchg
inc
loopne
loop
and
cmpsb
add
test
inc
lea
sbb
lcall
rcr
out
sbb
add
pushf
sub
cmp
outsl
rorb
mov
fsubrl
pop
push
icebp
sbb
or
push
mov
pop
inc
repnz
les
lock
pop
push
pop
fcmovb
push
test
or
int3
arpl
jmp
jae
inc
ja
mov
test
or
sahf
pop
jno
imul
mov
pop
xor
mov
call
shlb
xchg
je
inc
inc
inc
sbb
imul
pop
ja
jl
mov
add
or
push
popf
lock
sbb
push
ss
js
fmulp
sbb
adc
inc
cltd
cmp
loope
pushf
inc
stos
or
jge
adc
pop
jae
enter
popf
or
cmp
mov
pop
ja
and
mov
cmp
dec
push
out
sub
adcl
sub
jecxz
iret
sbb
mov
scas
dec
cmp
sbb
aaa
dec
call
pmuludq
add
das
ret
stc
jnp
imul
cwtl
dec
fnstenv
cmp
and
frndint
or
add
pop
inc
cmp
insb
popa
xchg
insb
shll
xlat
lret
notb
inc
scas
jno
push
xor
cmp
xlat
mov
pop
push
js
aaa
loopne
xor
jne
mov
jbe
repz
lea
mov
icebp
xchg
insl
mov
cwtl
subl
xchg
cwtl
mov
sbbb
pop
dec
pop
pop
jnp
shlb
push
mov
movsl
clc
sahf
and
jle
leave
aad
jae
cmpsl
inc
scas
adc
inc
cmpsl
pop
jp
ljmp
test
push
in
mov
mov
push
push
aaa
fisubrl
das
gs
jb
mov
mov
adc
cmp
jb
xchg
jge
fisubrs
icebp
pop
jae
dec
dec
sbbl
insb
out
repz
test
in
jle
lret
fistpll
pusha
sti
push
mov
dec
shrb
in
xor
jge
mov
fwait
fs
inc
xchg
pop
inc
sarb
jae
mov
xchg
sbb
add
aas
mov
les
imul
adc
out
imul
mov
pop
adc
sub
popa
or
or
or
jnp
pop
jnp
or
push
and
test
lret
sub
test
loope
xor
or
push
push
xchg
fistl
mov
adc
bndstx
les
stc
cmp
xor
fstl
lret
shrb
pop
mov
inc
xchg
insb
add
add
ret
xchg
jno
mov
push
push
or
std
js
mov
dec
mov
cmpsl
aad
mov
ds
jmp
ret
and
xchg
loope
mov
lret
addb
jne
mov
jns
or
xchg
in
adcl
sarl
fbstp
push
stc
push
add
jb
inc
inc
ljmp
stos
ret
and
orl
lods
stos
in
adc
or
sub
xchg
shrb
cltd
cmp
loop
or
push
mov
xor
mov
xor
popa
xchg
cs
cmp
or
pop
in
imul
dec
xor
movsl
pusha
loope
sarb
cltd
xor
adc
mov
or
sti
fildl
sub
push
and
pop
rcll
adc
sub
in
cmp
popf
jo
in
dec
pop
cmp
shlb
pop
rcrb
stc
mov
jmp
ja
sbb
add
cltd
aam
xchg
and
hlt
js
xchg
dec
filds
fucomip
jbe
jecxz
and
addl
mov
in
ret
xlat
mov
inc
mov
inc
mov
adc
mov
test
lret
xchg
enter
xchg
sbb
std
pop
mov
or
je
ss
jb
xchg
inc
ja
pop
jg
pop
outsb
mov
fprem1
cmp
xchg
sbb
mov
dec
mov
enter
push
shl
iret
mov
ror
rol
aam
adc
scas
mov
jnp
mov
gs
or
pop
pop
sub
sbb
mov
popf
mov
ficompl
xchg
ss
mov
mov
fimuls
out
shr
inc
dec
cmp
in
dec
pop
inc
or
loop
std
lock
sar
mov
stos
jmp
loopne
pop
loope
repnz
imul
mov
mov
xor
shll
adc
cmp
imul
sbb
shl
add
cmc
xchg
pop
lock
daa
inc
gs
adc
add
je
jb
jl
jns
loope
pushf
out
inc
add
mov
or
clc
xchg
xchg
add
lock
mov
mov
movb
add
repz
pop
scas
adc
sbb
sbb
add
adc
in
push
mov
xor
jl
mov
jb
push
and
push
inc
nop
sub
scas
cmp
push
jecxz
daa
arpl
xchg
mov
lea
aaa
mov
mov
int
ss
xchg
mov
and
xchg
mov
push
in
lock
push
ret
addb
add
mov
mov
xor
mov
add
adc
push
nopl
pop
repnz
xlat
sub
adc
dec
int3
pop
mov
add
clc
push
jne
fcoms
ss
pop
rclb
cmp
movsb
jns
out
xor
lea
mov
pop
adc
xor
mov
add
leave
xlat
push
dec
dec
loopne
je
mov
cmp
dec
inc
in
jge
jp
sahf
jp
seto
shlb
out
loope
into
out
xor
test
xchg
sarb
push
cmp
mov
addb
inc
sub
inc
outsb
loop
fsts
in
jle
sarl
jo
push
cmp
call
in
sbb
test
ss
leave
xchg
out
xor
cmp
out
int
les
mov
add
shl
inc
sbb
add
adc
sbbl
rorb
xchg
sbb
je
cltd
add
inc
adc
inc
sbb
mov
add
lahf
dec
scas
mov
jne
mov
cwtl
mov
mov
and
push
cltd
xor
mov
mov
xchg
movsb
es
mov
jl
or
shlb
adc
cmp
je
push
pushf
outsb
aas
aas
mov
dec
inc
jno
test
mov
fistpll
mov
xchg
das
adc
psllq
xchg
xor
dec
add
mov
out
repz
pop
xor
jg
sbb
mov
pop
rcrl
enter
adc
adcl
lock
notb
scas
bound
rolb
adc
jns
ret
dec
mov
out
or
test
popf
hlt
xchg
sbb
lock
sbb
iret
cmp
xchg
xor
lods
cmpsb
push
cmp
adc
pusha
ss
sbb
push
push
lret
sub
cmp
ds
dec
testl
jg
std
and
xchg
mov
sbb
cmp
cmp
dec
mov
pop
negl
sbb
jne
fnstenv
rcll
push
filds
inc
or
mov
cli
inc
lret
popf
std
enter
mov
insl
mov
mov
or
pop
addr16
orb
add
mov
dec
fdivs
mov
sbb
mov
xor
pop
push
pop
push
sub
out
xor
jmp
jecxz
ret
xchg
cs
add
mov
lahf
push
nop
xchg
and
fwait
xor
push
std
leave
or
mov
xlat
scas
jne
jmp
cltd
inc
lods
out
lock
pushw
mov
and
jmp
mov
mov
sub
sbb
add
es
hlt
inc
mov
pop
lods
mov
ss
imul
addr16
inc
xchg
loopne
inc
pop
jecxz
imul
push
fs
push
add
jae
and
aaa
or
pop
fs
xorb
xor
or
outsb
jl
lock
sahf
sbb
cmpsl
imul
ja
add
das
pop
movsl
fs
xor
fstpt
add
jle
fwait
shrl
movsl
loop
pop
jg
sub
jge
sub
test
clc
xchg
add
repnz
cld
outsl
loop
and
cli
fisttpl
rcl
pop
adc
jge
jecxz
lods
lret
or
pop
jb
cmpl
mov
in
and
mov
push
js
subb
leave
or
imul
pop
xchg
int
sub
pop
stc
xor
jno
sbb
lods
add
aaa
pop
cmc
push
mov
jne
mov
pushf
dec
inc
stos
dec
lock
mov
and
add
xchg
scas
pop
aam
push
push
jge
int
movsl
mov
sub
into
and
mov
mov
imul
push
repnz
sbb
jg
push
and
xor
imul
push
sbb
push
dec
repz
ret
jp
outsb
aam
mov
push
enter
jl
xor
sbb
pop
pop
lea
je
pushf
xchg
push
mov
and
xor
jmp
sbb
lcall
xchg
and
pop
rcl
jmp
addl
psubb
imul
mov
cltd
das
fldcw
jbe
fdivrs
mov
dec
aaa
mov
movsb
mov
into
insl
nop
xor
jp
add
or
push
into
push
pop
pop
push
sub
sbb
or
pop
add
xchg
call
add
in
repnz
divb
cmp
dec
bnd
pushf
jg
aam
scas
mov
loop
loope
xchg
shl
add
dec
in
inc
ss
fidivs
inc
adc
adcb
xchg
mov
stos
popf
sbb
mov
and
repnz
and
dec
mov
sub
test
sbb
andl
into
outsb
jno
insb
sub
mov
pushf
movl
data16
xchg
adc
add
dec
adcl
xor
sub
add
ret
das
out
pop
out
lret
adc
loop
lods
in
loopne
test
orb
push
daa
adc
xor
mov
or
insb
cs
popf
mov
xor
hlt
and
sub
or
jb
mov
adc
fstl
aam
xor
fildl
inc
ds
mov
mov
cli
mov
test
mov
xor
mov
cmp
in
lcall
stc
test
add
sti
rorb
inc
push
inc
iret
fldt
adc
rcrb
push
loopne
xor
mov
or
fimuls
cld
mov
stos
pop
pop
jbe
into
push
mov
pushf
es
rorb
sahf
clc
rolb
ds
xchg
add
mov
ret
roll
shrb
lret
mov
add
jbe
push
gs
aam
rcl
inc
jp
jecxz
int
call
jp
mov
adc
sahf
xchg
pop
push
popf
lret
iret
jnp
pop
mov
or
call
sub
sub
cmc
addr16
outsl
mov
mov
scas
xor
je
mov
mov
adc
adc
icebp
cs
mov
pop
fsub
int
jno
push
imul
daa
in
test
dec
cwtl
inc
ror
scas
xchg
sahf
jb
jb
fsts
and
add
mov
pop
insb
in
jmp
mov
shlb
mov
mov
xor
rorl
jge
pop
sbb
adc
ja
inc
or
xchg
mov
pusha
and
cmp
clc
sahf
mov
dec
call
sbb
enter
adc
jmp
and
jnp
xor
ret
ss
push
pop
out
clc
rcrb
leave
mov
mov
iret
rcrl
ret
and
adc
push
inc
enter
vdpps
clc
sahf
jecxz
pop
lahf
lcall
inc
jae
add
sbb
sub
movsb
repnz
jge
ret
imul
sbb
imul
inc
inc
mov
imul
andb
mov
push
push
test
pop
mov
std
ss
fsqrt
and
cld
jmp
adc
andl
add
jmp
into
xchg
cwtl
call
test
mov
cmp
jnp
add
mov
fsub
jl
imul
fimuls
sub
cld
mov
fiaddl
es
repz
divl
sub
popf
mov
inc
sbb
mov
pusha
cld
pop
rclb
je
cld
and
push
inc
sbb
mov
xor
cmpsb
sti
dec
push
fstl
sub
jbe
xor
mov
fucomp
jns
and
xchg
mov
enter
sbb
cmpsl
jle
les
out
shr
jne
mov
scas
dec
pop
fnsave
pop
push
cmc
xor
adc
test
fwait
xchg
mov
and
leave
stc
adc
inc
ljmp
mov
xor
mov
mov
sbb
add
loopne
insl
shrb
nop
sbbb
aad
mov
addr16
fwait
scas
xor
and
imul
mov
out
add
imul
dec
sahf
mov
adc
out
and
out
or
cltd
mov
inc
shrb
js
fs
in
sub
xchg
adc
das
push
jb
sarb
xchg
mov
mov
sti
ret
dec
dec
arpl
push
cmc
cltd
push
push
sbb
ja
sahf
les
push
ss
dec
mov
hlt
add
pop
es
lods
add
jbe
gs
pop
mov
stos
loop
mov
js
jge
in
lahf
cli
or
cmp
mov
sub
inc
int
or
orb
dec
inc
cmp
clc
into
sub
mov
mov
adc
data16
mov
adc
leave
and
pop
push
push
out
adc
lds
outsl
sbb
mov
hlt
mov
cmp
fldcw
lcall
ret
pop
test
test
addl
xchg
sub
mov
into
push
sub
js
jecxz
or
mov
insb
jmp
sahf
add
xor
lcall
push
push
push
adc
pop
scas
push
pop
in
sti
mov
xchg
ret
add
xchg
mov
std
xor
cmp
or
into
mov
movsl
xchg
mov
and
inc
add
sahf
std
xchg
or
imul
fnsave
clc
jb
aam
add
sarb
shrl
jg
popf
ja
jg
xchg
xor
and
sarb
data16
xchg
dec
lods
cmpsl
sbb
idivb
mov
hlt
xchg
dec
cltd
stos
inc
adc
mov
push
mov
stos
jl
push
pop
ds
cmp
cmp
jecxz
cwtl
iret
sahf
js
ret
mov
movsb
shlb
stc
in
loop
mov
add
pop
mov
mov
mov
call
adc
cmp
leave
inc
sbb
cld
push
pushf
ja
sub
popa
push
and
cmpsb
daa
mov
inc
imul
in
arpl
sbb
push
push
and
nop
mov
sub
pop
cmp
cmp
mov
jp
sub
rcrl
int
mov
insb
mov
adc
add
sub
icebp
add
sub
adc
pop
mov
xor
xchg
jg
jae
es
mov
adc
jge
xchg
sbb
stos
jge
sub
notb
leave
pop
stc
adc
push
out
bound
arpl
push
lcall
push
fsubrl
add
fstpl
outsl
in
movsb
out
push
into
lods
or
inc
fwait
lret
daa
pop
and
clc
inc
std
or
out
js
fldl
aad
inc
mov
xchg
pop
jb
leave
push
add
fdivs
repz
mov
push
inc
mov
outsb
sbb
jnp
aad
ds
mov
in
in
mov
jb
sub
jge
imul
dec
aaa
in
addb
xchg
add
out
push
jge
mov
bnd
xor
test
cmp
es
lahf
add
pop
out
jecxz
and
fstpt
pop
bound
cli
cmp
std
xchg
inc
inc
push
push
xor
mov
scas
fnsave
fs
in
push
out
cltd
add
scas
jns
xor
mov
cmpsl
mov
fisubrs
sbb
xor
fs
lods
pop
xchg
imul
scas
and
jne
cmpsl
ds
xchg
ja
into
mov
push
out
mov
jns
andl
je
sbb
and
sub
dec
arpl
jo
pop
add
xorl
or
push
mov
pop
mov
sbb
sti
adc
add
lcall
or
in
xchg
pop
out
and
addr16
cwtl
mov
loop
repnz
mov
mov
cmp
jge
into
dec
dec
aas
mov
cmp
cmp
cmp
test
lret
cmp
movsb
push
jbe
xor
adc
pusha
push
push
loopne
out
cmpsl
ret
inc
add
in
sub
mov
ret
shr
cs
or
push
repz
inc
mov
out
lret
out
test
imul
lret
inc
push
mull
push
cwtl
hlt
lods
jmp
test
sahf
add
in
sub
inc
in
and
jb
mov
repnz
mov
push
rorb
add
test
inc
push
xor
xor
repnz
lds
sub
add
sbb
mov
jmp
rol
ret
lahf
stos
dec
ret
jmp
or
std
inc
ficomps
in
cmp
cmp
outsb
pop
dec
ficoml
idivb
add
mov
dec
push
lahf
cmc
idivb
scas
sbb
pop
or
into
jle
mov
mov
cmp
fmuls
test
pop
fwait
icebp
sub
ja
dec
push
stc
ss
sbb
lahf
jne
lds
aad
add
clc
sub
add
iret
jbe
inc
loop
dec
xchg
adc
add
adc
dec
pop
fimull
adc
inc
pop
outsb
je
jae
leave
lods
mov
rcr
jmp
xchg
pop
jge
imul
in
subb
dec
fisttpll
shlb
add
lea
pop
movsb
insb
in
sbb
xlat
dec
out
ret
pop
sbb
shll
jbe
jl
fidivs
je
jne
cwtl
data16
sbb
add
out
cltd
les
mov
fidivl
jle
mov
or
movsb
jmp
cltd
shll
sbb
decb
js
or
xor
je
ret
sub
vpcmov
popa
pop
push
add
pshufw
lret
sbb
lcall
addr16
dec
dec
in
jp
jno
cmp
cmc
lcall
push
jge
loop
pop
pop
jg
fstpt
adc
cli
mov
aaa
sub
pop
rolb
push
out
repz
pop
xchg
popf
lahf
jne
xchg
xor
mov
fisubrs
sub
jae
or
pop
jo
push
lret
popl
insb
lods
xor
lahf
push
pop
mov
cmp
mov
faddl
jns
xlat
out
popf
mov
cwtl
mov
iret
xchg
and
or
sub
pusha
pop
mov
scas
inc
icebp
je
dec
sub
jle
std
pop
out
into
pop
sbb
inc
cmp
mov
add
xor
repz
adc
jne
jp
aad
loope
loopne
pop
adc
in
mov
shll
jo
mov
mov
lahf
popa
dec
push
das
ss
or
jmp
jp
out
xchg
test
subl
or
dec
js
pop
sbb
repz
std
add
aaa
jg
mov
nop
fnsave
mov
testb
call
xchg
lcall
mov
cmp
push
mov
pop
add
out
cmpsb
push
rorl
fidivl
push
mulb
cmpsl
pop
inc
adc
insb
js
lds
test
add
inc
dec
mov
in
pop
and
shl
loope
mov
sub
pop
sub
ret
add
fwait
mov
push
clc
push
lds
stos
daa
mov
or
mov
pop
add
cmp
push
int3
ret
or
and
mov
xchg
xor
enter
mov
or
add
jne
in
ja
and
or
cld
test
into
dec
mov
or
adc
cltd
push
ds
js
sbb
push
pop
iret
ja
xchg
mov
add
inc
or
mov
jp
lods
sbb
pop
push
xchg
pop
enter
enter
roll
loope
sbb
mov
cli
test
jecxz
out
cwtl
cmp
inc
lods
pop
fnstenv
mov
mov
data16
imul
xor
lock
pop
cli
mov
in
xor
icebp
pusha
mov
sbb
aaa
add
and
mov
mov
addr16
lods
aas
sbb
outsb
ret
sub
repz
adc
inc
pop
insl
outsb
add
imul
inc
jb
movsb
arpl
stc
nop
push
out
loop
shll
mov
repnz
popa
das
inc
xchg
sub
outsl
push
mov
cmp
test
or
lock
mov
outsb
mov
inc
push
lcall
in
add
mov
mov
adc
subb
loope
in
adc
mov
mov
aam
pop
xchg
int
shlb
sub
dec
leave
fwait
sub
xchg
pusha
shl
clc
in
sbb
mov
popa
aad
cmpsb
push
or
enter
and
jne
mov
sbb
clc
or
mov
add
mov
xchg
les
js
cmpsb
test
ja
xchg
test
std
mov
stc
je
mov
decl
daa
iret
push
pop
leave
lock
cmpsl
push
sbbb
ror
fsubr
sbb
pop
or
pop
repnz
and
test
mov
inc
es
loop
adc
xchg
inc
shll
or
movsl
cmp
mov
cmp
fisttpl
cmp
lcall
jns
or
insl
jge
xchg
push
push
aas
ret
mov
or
lcall
jmp
in
int3
xor
and
in
push
rcrl
test
push
push
pop
cmpsl
mov
sbb
int3
xor
jns
mov
roll
mov
cmp
or
mov
sbb
stos
jae
adc
test
mov
je
in
xchg
cmp
cs
xchg
pushl
dec
mov
int3
lret
stos
inc
int3
push
fucomi
lea
mov
add
out
pusha
pop
pop
xchg
iret
push
in
push
cs
jb
std
mov
out
mov
out
or
out
push
sub
push
test
sarl
popf
adc
stc
inc
inc
mull
adc
mov
mov
cmp
sub
rcrl
push
in
notl
mov
daa
imul
cmpsl
les
mov
lret
std
ljmp
jecxz
cmp
mov
sbb
lret
add
mov
outsl
ds
dec
jmp
xchg
mov
divl
and
js
or
sahf
and
hlt
mov
mov
push
push
sub
pop
and
popa
xor
sti
je
aaa
cmpsl
mov
test
push
test
fnsave
dec
mov
dec
adc
shrb
inc
stos
jmp
negl
cmpsb
roll
inc
fwait
cld
mov
stc
int
fmuls
xchg
call
lret
and
bound
mov
imul
cmp
inc
adc
and
adc
cmp
or
inc
out
test
repnz
notb
and
dec
dec
or
stc
and
lods
cmp
sbb
scas
push
incb
hlt
std
addr16
fmul
jge
aam
jnp
and
iret
jbe
les
ja
stc
mov
dec
out
test
sbb
inc
ret
mov
cli
mov
cmp
lea
jecxz
test
xor
imul
insl
test
add
mov
lret
aas
cmc
xor
hlt
jle
cmp
xor
push
fsubp
cmp
xor
dec
push
lods
push
ljmp
ljmp
movsl
into
mov
push
sahf
loope
adc
test
or
mov
fsubrs
jge
mov
in
xor
mov
jmp
fsts
sub
rcrb
test
imul
call
push
jne
and
lret
xor
insl
xor
insl
xor
mov
push
push
add
and
pusha
and
icebp
mov
adc
in
iret
push
aas
orl
lcall
pop
mov
add
push
mov
xlat
movsl
aas
pop
push
repz
mov
loopne
repz
jmp
and
je
clc
addl
roll
dec
mov
addb
xchg
mov
dec
pop
out
mov
into
lahf
into
mov
and
loop
sti
xchg
dec
fisttpll
pop
mov
or
mov
mov
jo
or
add
sahf
push
pushf
mov
inc
rcrb
das
fs
adc
lret
lahf
xchg
push
sbb
mov
dec
inc
xchg
jnp
inc
xor
or
mov
lret
adc
mov
jmp
in
pop
xor
arpl
mov
add
fsubrp
xchg
xchg
dec
mov
movsl
push
add
xchg
aas
jmp
stos
cltd
inc
fs
pop
test
clc
adc
std
add
out
jle
xor
mov
shr
xchg
and
loope
mov
xor
xchg
mov
add
inc
fldl
clc
popf
arpl
orl
aad
daa
lret
test
inc
std
sar
testb
push
add
sarl
or
aad
test
inc
xchg
dec
push
outsl
fbstp
add
pop
add
or
push
in
xchg
mov
aam
mov
and
scas
movsl
push
xchg
test
into
ret
cmpsb
movsl
lds
cwtl
mov
mov
push
sub
js
les
rolb
inc
subl
lret
mov
pop
movsl
xor
push
gs
clc
cmpsl
repnz
push
aas
mov
sub
fnstsw
pop
ja
shlb
jae
and
dec
test
into
pop
icebp
mov
mov
fsubp
jmp
jecxz
mov
js
test
sub
mov
out
adc
hlt
shlb
test
les
mov
shll
push
ret
mov
pop
jae
push
pop
outsb
mov
inc
cmp
pop
imul
mov
xchg
cmpl
imul
scas
out
cmpsl
or
jae
movsl
pop
loopne
adc
jne
push
iret
pop
push
pop
pop
dec
int
mov
sbb
sahf
cmp
iret
sub
push
jno
push
int3
jl
inc
sbb
rorb
das
mov
dec
les
negl
jp
sarl
sbb
xorl
outsl
cmpl
cmp
sbb
bound
cmp
cmp
test
int
pop
fs
mov
push
outsb
daa
cmp
mov
rcrl
inc
or
nop
dec
mov
sbb
ret
decb
imul
push
jae
iret
sbb
sub
shlb
sub
xchg
pop
outsl
out
test
mov
scas
cli
mov
fs
cmp
jnp
push
push
pop
mov
mov
and
jge
push
xlat
mov
or
lea
jbe
fwait
xor
xchg
ljmp
dec
aam
mov
sbb
in
xchg
mov
test
cld
xchg
into
in
cwtl
outsl
dec
inc
mov
lds
mov
iret
adc
xlat
jbe
xor
stc
out
or
mov
mov
js
stos
mov
add
mov
inc
frstor
insl
add
or
sub
aaa
pop
cmc
push
movsb
jl
stos
pop
rcrb
jae
or
jns
shrb
vpminsw
js
push
test
sub
in
xchg
scas
pop
inc
mov
and
add
shrb
ret
mov
enter
insl
add
mov
imul
rcrl
test
movsl
fsts
jp
jb
cmp
sub
aad
push
cmpsl
add
and
dec
inc
popa
pop
shlb
rolb
xchg
inc
lret
nop
shlb
pop
loope
ljmp
inc
sbb
mov
add
and
mov
mov
sbb
fidivrl
jnp
cmp
jns
in
fadds
sub
loop
mov
lcall
cwtl
and
add
jbe
fucomip
mov
or
rclb
fcoml
or
ficoms
ja
test
insb
xchg
push
rcl
mov
pop
dec
dec
or
xor
pop
dec
in
jl
cltd
cltd
imul
imul
jl
test
fcomp
jo
dec
mov
inc
push
mov
mov
xor
fimuls
and
sbb
arpl
outsb
add
outsl
pushf
in
sub
and
mov
pop
jle
fstps
cli
fxch
fnstenv
test
push
cwtl
mov
aaa
push
les
mov
adc
enter
lahf
push
bound
dec
xor
sub
pop
adc
sti
idiv
inc
loopne
pop
inc
cs
fistps
xacquire
movsl
xchg
and
adc
add
ret
rolb
fcmovbe
outsl
ss
lods
add
xor
jge
fcoml
stos
cwtl
in
hlt
adc
pop
jge
add
nop
push
push
repz
movsb
notl
je
inc
xor
xchg
adc
mov
ret
outsl
jno
mov
lret
or
mov
lods
lods
daa
pop
addr16
dec
push
cmpsb
mov
je
dec
lret
imul
cmc
lahf
mov
jge
sarb
push
stos
and
dec
cmp
mov
iret
fmul
xchg
push
insb
push
inc
pop
inc
notl
orb
dec
popf
int
mov
and
push
fldl
lret
inc
sub
inc
lods
outsl
sti
dec
test
out
popf
adc
jg
aam
mov
lods
jl
fsubr
repnz
mov
xchg
jl
jnp
jae
inc
sub
inc
pushw
inc
sub
shlb
cmpsb
and
mov
shlb
fbstp
popf
inc
shll
add
imul
pop
jae
fcoms
xchg
addr16
fdivs
push
scas
ret
mov
call
mov
jg
arpl
in
cmpb
or
xchg
mov
js
dec
nop
mov
lahf
mov
fidivrl
pop
sub
leave
loope
gs
dec
dec
pop
push
shrb
jge
hlt
in
fsubr
inc
test
xchg
mov
sti
and
ljmp
icebp
outsl
rcl
mov
loop
jge
mov
mov
inc
inc
mov
enter
jmp
lahf
outsl
cmp
loope
xor
out
push
sbbl
outsb
fcom
jb
or
lock
push
mov
call
or
scas
push
daa
cmp
stc
lock
dec
pop
sbb
pop
jb
pop
cltd
dec
xchg
lahf
lods
das
xchg
jmp
mov
scas
stc
lea
mov
cmpsb
cmpsb
in
rorl
sahf
std
pop
aam
cmpl
bound
pop
and
dec
adc
mov
lret
xchg
fs
lahf
push
sbb
loopne
cltd
sti
push
inc
mov
or
ja
jmp
movsl
scas
ret
shl
mov
dec
dec
jbe
push
pop
les
pop
dec
movsl
add
inc
lods
sbb
xchg
ljmp
mov
lock
jb
dec
in
adc
leave
mov
dec
pop
lahf
mov
mov
out
in
stc
push
enter
jmp
cmpl
scas
jb
push
test
fs
std
pop
call
pop
dec
pop
dec
mov
icebp
movsl
cmp
xlat
movsl
push
scas
les
sahf
outsl
stos
rclb
movsl
mov
arpl
imul
mov
add
lock
data16
dec
push
loopne
pop
cmp
xchg
jge
add
loopne
fs
int
ljmp
lds
outsl
fisubrs
stos
lods
inc
popa
test
stos
cmpsb
or
insl
mov
push
out
ret
push
sub
xor
inc
and
mov
xlat
enter
mov
pop
push
lret
and
cli
pushf
sbb
mov
mov
dec
arpl
orl
iret
dec
and
dec
mov
pop
xor
cmp
pop
dec
mov
movsl
mov
xor
add
dec
and
mov
dec
sub
add
pop
dec
sub
jge
in
sub
pop
test
jae
or
sbbl
call
cmp
sub
aaa
pop
mov
fcomps
mov
adc
push
ss
out
test
mov
xor
inc
pop
fisubrs
cld
rcr
sti
and
jg
add
fsubl
push
fisttpl
loope
lods
pop
mov
fisttps
ss
push
test
fisubs
xchg
fcomi
push
push
jns
vshufps
mov
in
mov
leave
das
adc
add
aas
mov
dec
inc
jnp
push
and
shlb
mov
xorb
sbb
xchg
sbb
adc
fsubr
add
lret
popa
inc
push
sub
aaa
cmp
encls
mov
and
pop
dec
leave
inc
and
insl
cmp
inc
and
cmp
mov
and
shl
dec
and
mull
adc
bnd
loop
add
cmpsl
fsubl
sbb
rolb
mov
imul
lcall
push
xor
cwtl
fstps
xor
and
sahf
sub
ret
inc
into
pop
in
jb
daa
push
int
sahf
push
mov
pusha
inc
and
push
mov
jmp
xchg
pushl
xor
push
mov
nop
cmc
mov
xchg
sub
jbe
icebp
jns
push
and
pop
xchg
aaa
lret
xor
loope
rcll
dec
pop
loop
mov
xor
xchg
pop
inc
mov
and
or
ljmp
jp
in
push
inc
insb
xor
push
leave
dec
pop
std
aaa
gs
jl
push
or
mov
cmp
cmp
mov
icebp
dec
in
mov
push
lods
dec
push
mov
push
stos
repz
adc
sbb
jbe
mov
mov
rcrl
adc
ljmp
lods
pop
cmp
in
add
xor
or
icebp
xchg
sub
cli
push
add
and
xor
push
lock
lods
adc
inc
push
fsubl
not
inc
xor
or
xchg
sub
dec
nop
dec
cmp
pmulhw
mov
mov
push
ja
setnp
out
test
dec
inc
sub
inc
cmp
add
sub
and
jg
mov
loopne
std
cmp
dec
pop
or
ja
fistpl
mov
lods
pop
mov
or
in
notb
cltd
add
stos
pushl
in
inc
int
sub
icebp
imul
outsb
rclb
into
sbb
lcall
enter
fistl
lahf
pusha
push
andb
fs
jno
cmp
mov
enter
mov
jp
arpl
popa
adc
cmpsb
mov
into
jno
and
add
orl
push
repnz
xor
xlat
lcall
ret
jmp
std
dec
loopne
jae
jp
sub
lret
dec
add
mull
out
mov
outsb
jle
mov
mov
cmp
xor
inc
sbb
pop
sti
shll
xchg
jb
cmp
iret
xchg
sub
jae
pop
daa
cmc
lods
sbb
fwait
sub
push
fsubr
shlb
inc
cmpsl
in
shll
push
inc
mov
mov
xchg
mov
nop
jae
pop
sarl
sti
lds
pushl
xchg
pusha
mov
sub
clc
adc
lods
jmp
push
fstpl
lock
mov
sub
repz
aad
lods
add
pop
mov
mov
jb
jge
call
sbb
lahf
stos
inc
ds
pusha
jo
lods
cwtl
rclb
mov
nop
sbb
ret
ret
pop
jo
arpl
je
sbb
nop
daa
or
insl
outsl
sub
mov
or
out
sub
push
outsl
jae
add
pop
orl
imul
lahf
inc
iret
jne
mov
out
in
pop
lcall
dec
sbb
xchg
adc
nop
das
pop
outsb
cmc
cmp
and
push
mov
and
mov
pop
scas
push
jns
or
and
fwait
xor
sbb
pop
pop
mov
cmpsb
xor
ja
push
ja
cmp
lods
in
xchg
mov
fsubrl
and
xchg
push
lods
loopne
sti
rcl
add
sub
js
repz
test
xchg
lods
inc
outsl
sub
inc
repnz
fiadds
aaa
push
mov
cmp
cli
pushf
sti
inc
xchg
fmuls
imul
mov
add
adc
into
pop
cmp
jecxz
stc
sbb
cs
xor
push
push
jmp
inc
xor
lds
jb
lcall
pushf
jl
sbb
lods
jmp
adc
popf
inc
fstpt
push
insb
sti
sahf
mov
xchg
aad
out
pop
jg
cmp
pusha
repnz
sar
in
push
xor
mov
pop
push
dec
sbb
xchg
adc
aaa
add
insb
in
mov
push
mov
stos
xor
rol
xor
shl
xlat
push
jecxz
inc
pusha
lds
dec
mov
jae
out
lret
sbb
xorl
cs
mov
sub
jecxz
mov
popa
add
add
sub
xor
cltd
mov
and
fcmovne
push
jmp
push
addr16
movsb
lock
stos
cs
jno
dec
data16
popf
push
pop
cmp
pop
insl
xor
imul
fwait
es
xchg
pop
mov
outsb
push
push
jns
mov
jmp
sub
lods
mov
icebp
sbb
sti
cmpsl
xor
cmp
ss
mov
xor
xchg
sbb
mov
inc
popf
add
pop
mov
mov
iret
mov
adc
lods
ja
aas
push
jmp
add
pushf
mov
fsubl
mov
cmp
in
loop
inc
loopne
mov
inc
scas
push
icebp
leave
cmp
das
fstps
lea
xor
lock
pop
das
push
outsl
sub
adc
loope
rol
es
repnz
sbb
mov
inc
cli
cmpsl
xchg
popa
mov
inc
sbb
into
fwait
sahf
cmpsl
notl
jecxz
jns
rcll
sti
fbstp
and
fcoml
cld
xchg
loope
sbb
rol
lahf
pop
jle
testb
sarw
cwtl
lds
inc
inc
mov
leave
pusha
xchg
cld
jae
call
test
pop
sub
mov
push
xchg
iret
adc
pop
ljmp
ja
insl
mov
insl
push
daa
mov
mov
cmp
enter
or
pop
hlt
sbb
push
pop
sub
inc
scas
inc
add
push
push
and
insb
mov
push
out
add
lods
push
movsl
sahf
mov
sub
arpl
push
daa
inc
pop
mov
loope
jb
into
and
inc
push
in
cmp
cld
enter
add
and
mov
or
dec
cmp
dec
clc
xchg
sub
mov
jbe
lods
cmp
outsb
mov
push
inc
dec
rclb
bound
cwtl
push
and
addl
inc
gs
scas
push
lahf
cmp
dec
mov
pop
cmc
aas
fcoms
lea
jge
movsb
iret
fcmovnbe
cmp
in
and
push
mov
mov
popf
addr16
push
adc
jmp
pushf
jnp
loope
and
std
rcrl
jns
jnp
xor
fdiv
push
pop
fsub
dec
push
lret
sbb
and
xchg
aam
pop
xor
cmpsl
daa
pop
lahf
push
pop
push
push
lea
das
jbe
push
jp
cmpsl
or
push
ds
repz
dec
movsl
cmp
pushf
sti
in
in
incl
mov
add
xchg
gs
xchg
icebp
nop
sbb
addr16
ja
pop
xor
insl
push
jae
jne
pop
out
adc
das
jl
daa
stos
lcall
add
push
pop
dec
clc
in
mov
addb
add
and
add
leave
pusha
push
pop
test
hlt
sbb
push
roll
adc
scas
cmc
mov
cmp
lcall
jecxz
push
push
pushf
adc
cld
add
shll
mov
push
dec
stc
mov
cwtl
adc
dec
inc
pop
mov
inc
test
push
push
test
add
jmp
test
into
push
lods
pop
nop
or
aas
outsb
push
bound
sbb
jb
rcr
xchg
cmp
les
sub
sub
gs
loope,pt
cmp
jl
sbb
jns
idivl
fwait
push
lods
adc
cmpsb
test
mov
das
out
pop
negb
push
xchg
mov
mov
or
push
xor
fsubrp
push
fadds
jmp
or
dec
mov
fcompl
std
test
shrl
add
inc
aam
mov
cwtl
ljmp
lret
jne
into
add
jmp
mov
push
and
std
or
les
dec
fidivrs
xchg
hlt
cwtl
jl
fdivs
fwait
mov
scas
xor
gs
sub
cmp
inc
idivb
xor
iret
and
and
xchg
cmovl
mov
negl
jmp
out
aam
mov
stos
dec
adc
inc
jecxz
adc
repnz
cmpsl
and
xchg
scas
stos
repz
mov
pop
loope
loop
movsb
mov
in
mov
popa
arpl
rorb
sub
or
dec
mov
mov
ja
add
sub
xor
sub
xchg
pop
imul
jnp
iret
es
imul
lods
mov
mov
icebp
mov
ffree
in
cmpsb
jmp
scas
cmp
clc
hlt
fs
xchg
push
add
test
mov
mov
bound
ret
loope
pop
inc
outsl
mov
inc
pop
addr16
sbb
das
cmp
fwait
lods
ret
sub
ljmp
add
xor
orb
mov
jne
mov
jg
jne
addr16
inc
lret
test
adc
or
fsubrp
cmpsl
push
dec
mov
out
mov
or
adc
in
cmp
add
jmp
and
andl
gs
adc
out
and
adc
xlat
test
jg
dec
jge
dec
push
adc
inc
lret
or
pop
daa
push
in
stos
arpl
pop
addr16
fdivrl
mov
int3
lahf
outsl
insb
push
mov
bnd
push
inc
cwtl
test
push
cmpsl
ljmp
fwait
sti
mov
xor
xchg
call
ret
gs
push
pop
pop
aaa
roll
cld
xchg
xor
loopne
loop
add
mov
clc
sahf
clc
cmp
stos
fsubr
cli
mov
mov
push
shll
ljmp
sahf
mov
test
jns
xchg
jns
test
scas
cltd
mov
mov
push
push
mov
and
jg
cmpsl
mov
cmp
xchg
imul
mov
push
xchg
stc
jbe
mov
mov
xor
imul
dec
and
push
push
pop
movsl
ja
into
push
push
mov
pop
mov
loop
ret
ds
xor
mov
int
mov
gs
and
pop
ds
je
testl
es
scas
call
imul
testl
push
jb
lods
loope
test
cmc
sbb
add
add
or
mov
outsl
out
inc
push
out
jmp
inc
inc
push
jmp
cmc
gs
xor
jb
outsl
in
fldcw
and
mov
cli
out
adc
lea
stc
popf
into
icebp
inc
stos
movsb
xchg
add
sahf
xchg
mov
stos
test
add
fsubl
push
imul
arpl
push
inc
or
inc
loopne
inc
push
sbb
testl
cmp
in
insb
sbb
adc
mov
jg
mov
divb
insl
and
aas
dec
rorb
sbb
ja
xor
or
lock
mov
mov
dec
lods
test
jg
pusha
mov
push
inc
mov
dec
add
jmp
ret
inc
push
dec
dec
jg
arpl
dec
shll
jp
mov
xor
inc
mov
cmpsb
jg
jo
cmp
in
push
mov
jle
int
inc
add
push
mov
movsl
mov
lods
add
imul
shlb
xchg
nop
inc
iret
fdivl
imul
testb
pop
negb
test
mov
add
jae
movl
mov
fstps
stos
dec
sahf
xchg
pop
sbb
mov
jmp
xchg
imulb
sbb
mov
push
xlat
mov
test
xchg
xchg
lock
repz
addl
dec
jecxz
roll
jns
test
ds
inc
ret
bound
aad
loopne
mov
subl
xor
xchg
push
outsl
cli
and
lret
pop
leave
adc
in
cs
and
mov
push
or
cmpl
out
and
rolb
mov
mov
fists
adc
jne
out
out
cmp
xor
scas
cmp
and
imul
xchg
mov
gs
or
das
jp
sarb
push
mov
push
nop
cld
mov
out
icebp
add
and
pop
lods
inc
inc
sub
es
pushf
sub
popf
movsb
inc
das
lods
daa
rorl
xchg
sub
es
mov
add
pusha
in
addb
pop
push
adc
sub
decb
lea
cmp
ljmp
mov
jg
inc
rol
out
xchg
dec
inc
dec
rol
pop
clc
lods
cmpsb
cmp
or
adc
and
cli
lea
sbbb
cmp
ja
fs
adc
psubusw
outsl
fnstsw
inc
mov
int
xchg
pop
addr16
aad
mov
jmp
dec
ljmp
xorl
das
mov
cmp
xor
sub
aas
push
cltd
pop
ljmp
ljmp
jge
or
out
pop
push
repz
fsubs
loop
sub
dec
add
shr
je
adc
cmp
test
and
push
lea
mov
fucom
sub
sbb
imul
xchg
mov
xor
cmp
mov
xlat
outsb
cmp
cmc
mov
jmp
sbb
inc
jecxz
and
mov
adc
scas
sahf
lock
andb
int3
adc
push
ljmp
xchg
xlat
xchg
sub
inc
pop
jmp
add
mov
shlb
jne
rcll
push
loope
xorl
xor
dec
cmovg
shl
lock
loope
add
rcr
outsb
jg
lods
mov
add
repz
loop
out
push
xlat
daa
xor
int
jne
mov
out
sub
idiv
sbb
pop
js
jg
ret
dec
and
pop
xchg
rorb
or
and
push
lods
mov
xor
pop
repnz
push
pop
test
jle,pt
pusha
outsl
aam
mov
push
xor
out
out
fimuls
mov
dec
outsb
and
adc
mov
idivb
test
push
nop
imul
repnz
mov
je
cmp
push
nop
dec
mov
mov
push
xor
mov
jg
out
aaa
cs
in
add
lcall
mov
enter
cld
xor
xor
and
iret
xchg
add
mov
cmp
fcompl
mov
pop
in
fidivs
push
in
cmp
jge
xor
in
pop
mov
dec
in
pop
mov
push
stos
push
je
pusha
icebp
sbb
or
mov
jecxz
sub
hlt
out
inc
loope
sbb
lods
inc
pop
scas
xchg
in
mov
mov
cmc
mov
inc
or
push
push
adc
mov
rorb
int
shlb
sbb
fwait
pop
lods
movd
mov
mov
outsb
mov
add
mov
out
dec
pop
xor
inc
nop
mov
pop
xchg
mov
fstpt
xchg
dec
dec
fsubrs
cmpsl
sub
jmp
push
lock
xorl
push
loope
sub
mov
lea
jbe
mov
mov
cmc
popf
lods
clc
inc
loope
repnz
stos
mov
mov
lret
pop
jl
pop
popa
sbbb
data16
daa
cmp
sbb
jmp
xchg
ja
notl
pop
mov
inc
jno
xchg
mov
neg
xor
call
mov
stos
xchg
pop
and
jae
jbe
jp
popa
inc
mov
and
dec
lcall
les
push
mulb
sbbl
mov
addr16
adc
jbe
xchg
mov
mov
inc
in
lret
xlat
sub
push
jbe
clc
sbb
sbb
ret
inc
test
inc
lcall
popf
adc
mov
imul
and
sahf
pushf
pop
mov
pop
xchg
js
fwait
inc
aas
push
xchg
jg
or
out
faddl
inc
mov
out
fisubrs
out
gs
aas
mov
adc
inc
push
enter
sub
mov
cmpsb
ja
dec
push
int3
fdiv
bound
js
cmp
and
xor
je
retw
enter
popa
lods
xor
sahf
sub
and
dec
loop
ja
divl
nop
dec
adc
stc
xorb
xchg
pop
sbb
xor
cmp
and
or
mov
xor
scas
pop
mov
add
mov
dec
mov
data16
ret
push
leave
pop
insb
add
ret
dec
mov
or
data16
and
aaa
in
push
outsb
test
leave
sahf
lods
push
fwait
cmp
xlat
push
xor
movsl
jecxz
sahf
and
in
xchg
ss
sub
aaa
xchg
in
add
incl
sarb
sbb
ret
add
push
push
adc
outsb
mov
lcall
mov
adc
xor
lcall
sub
adc
aas
xchg
sub
jns
adc
add
adc
dec
pop
sub
lahf
insl
aad
addr16
jge
adc
cld
push
insb
lods
ret
enter
fld
cmp
jmp
dec
pop
cmp
jecxz
mov
ds
push
imul
cs
dec
mull
jno
xchg
lret
sbb
fwait
xchg
dec
mov
xor
xor
shl
bnd
cmp
sbb
pmaxsw
fdiv
sbb
lahf
pop
lret
ja
sub
inc
pop
mov
mov
ja
lods
fldt
js
push
xor
pusha
cmc
inc
xor
pop
add
and
sbb
rol
cli
test
in
in
shlb
mov
adc
aam
jl
xor
test
movsb
dec
sub
fsubl
mov
das
mov
out
or
add
outsl
aas
xchg
jl
push
mov
jo
mov
mov
rolb
jo
roll
shl
jae
rorl
mov
cmpsb
mov
dec
xor
inc
das
addr16
jbe
leave
mov
mov
popa
sbb
leave
int
and
dec
cmp
imul
hlt
lock
cmp
loopne
sbb
leave
push
in
add
cmpsl
push
push
into
fdivl
mov
adc
mov
push
js
inc
sub
dec
das
fistpll
incl
das
push
mov
push
push
cld
inc
std
dec
pusha
cmp
dec
inc
testb
lds
es
rcrb
cmpsl
stc
mov
std
or
enter
adc
cli
arpl
adc
ficompl
push
test
cmpb
add
sahf
adc
mov
sbb
or
stos
ljmp
test
adc
iret
aaa
addr16
add
test
inc
mov
fidivl
fwait
int3
xchg
xor
cmp
movsl
out
aam
adc
mov
aas
push
int3
out
les
lea
jb
add
clc
jno
shrb
pop
clc
xchg
fnsave
ds
add
adc
movsl
adc
ss
js,pn
jp
test
pushf
movsl
push
popa
pusha
dec
andl
jbe
fwait
xchg
pushf
rclb
adc
sub
cmp
lret
cmp
call
dec
je
aaa
outsl
push
test
pusha
push
cmp
aaa
mov
ret
lds
cmpsl
cli
in
adc
xor
and
lock
sbb
xor
mov
mov
sbb
imul
push
lock
and
scas
jmp
jmp
popa
out
call
add
leave
fninit
inc
adc
push
das
add
mov
incl
flds
jmp
cwtl
loope
lret
xlat
xor
xor
imul
iret
div
mov
adcb
inc
add
sbb
xor
dec
pop
js
mov
pop
pop
fs
sti
into
jmp
repnz
jl
lret
ja
das
sub
out
testl
fadds
and
or
inc
popa
jmp
or
add
or
xor
ret
mov
mov
mov
pop
cmp
or
adcb
popf
dec
shrb
inc
jmp
xchg
in
add
or
cmc
cmp
mov
adc
add
pop
pop
scas
xchg
jle
jo
sti
dec
pop
cli
scas
in
ffreep
sbb
pand
jnp
ret
dec
fs
push
mov
inc
popa
cld
andb
imul
pop
sarb
jecxz
cmc
fdivrl
xlat
push
xchg
xor
ds
lahf
dec
fdivrl
xchg
out
add
scas
pop
pop
movb
add
mov
out
vphaddubd
fwait
and
fucomip
lods
test
xchg
add
push
lods
cmp
mov
adc
cmp
lea
push
out
stos
daa
flds
xor
xchg
jns
enter
cwtl
and
lret
sbb
adc
jnp
movsb
adc
cli
jnp
cmpsb
mov
adc
rclb
repnz
jae
pop
mov
daa
adc
jb
sarl
mov
sti
bsr
and
adc
jbe
test
movsb
xor
add
push
adc
add
or
push
stos
sub
sbb
push
in
insb
rcll
mov
mov
sub
pop
pop
aad
push
fwait
nop
test
dec
sbb
push
je
outsl
jnp
lods
das
pop
dec
hlt
push
xor
mov
std
push
ljmp
jb
rolb
in
dec
in
jnp
pop
das
out
sahf
mov
dec
mov
test
insb
mov
xchg
ficomps
cmpsb
xor
add
or
mov
push
out
cmp
mov
loopne
inc
popf
shlb
inc
cmp
lock
lock
adc
inc
clc
push
jecxz
push
lock
popa
aaa
outsb
xchg
adc
sub
jecxz
add
push
add
sahf
rcrb
jg
movsb
in
inc
aas
dec
in
and
pop
xchg
and
push
dec
sub
pop
mov
or
in
nop
je
ja
arpl
mov
xchg
cmpl
leave
pusha
jne
mov
ret
int
outsb
leave
xor
cmp
mov
ret
dec
fcoml
sbb
js
arpl
add
xchg
cvtps2pd
gs
popf
sbb
les
mov
mov
jecxz
inc
xlat
outsb
jb
insb
sub
and
xchg
sub
push
mov
dec
or
cmp
pop
call
or
xchg
test
jl
mov
dec
pop
sahf
or
cmp
fs
cmpsl
mov
adc
sub
mov
idivb
sub
add
jae
mov
les
mov
lret
inc
xchg
pop
xor
pushf
or
jae
jmp
movaps
std
roll
lock
cltd
cmp
test
outsl
push
daa
fnsave
pop
add
pop
jne
fdiv
mov
fcmovbe
push
cmpsb
jne
sbb
mov
outsl
insb
add
add
or
stos
lcall
les
jmp
insb
and
add
stos
mov
insb
clc
cli
xor
dec
cmp
or
mov
push
out
scas
jb
fnsave
fsubrs
pop
push
xor
ror
cmpsl
clc
cwtl
das
ljmp
loop
and
mov
je
divl
cmp
inc
inc
push
mov
cmpsb
dec
pop
fsubr
and
ficompl
out
add
pusha
and
xchg
xor
stc
xor
lods
int3
cmp
pop
ljmp
mov
imul
mov
or
fsubrp
movl
lds
int3
dec
mov
sbb
insl
int3
fidivs
xchg
idivl
jl
icebp
arpl
decb
iret
fs
test
test
out
sbb
inc
scas
jno,pt
add
out
ja
mov
jmp
fidivrs
out
push
adc
and
bound
or
xor
sub
push
inc
pop
adc
fcomps
lods
push
test
cwtl
movsl
fnstenv
scas
cli
xchg
lock
jg
adc
xchg
ljmp
adc
inc
repnz
push
mov
rcr
repz
jg
loop
out
popf
cmp
lret
insl
mov
out
pop
sbb
push
cmpsl
icebp
shlb
inc
das
push
xchg
test
lret
movsb
xor
lahf
mov
inc
fwait
xor
dec
mov
adc
ss
jae
and
mov
shrb
adc
out
repz
push
jae
dec
pusha
jbe
sub
lock
add
dec
pushf
mov
sahf
cltd
test
movsl
test
inc
inc
cmp
push
jecxz
enter
push
xlat
test
and
lds
je
aaa
push
jl
std
xchg
push
ret
pushl
sbb
sarb
push
fcmove
jl
shr
aam
insb
rolb
jb
sub
js
mov
cmp
sbb
push
popa
imul
popf
daa
jb
add
call
add
pop
rolb
lods
mov
mov
jle
dec
jl
xchg
pop
jno
and
sahf
sbb
jnp
insl
mov
dec
shlb
add
xchg
xchg
add
mov
xchg
jno
sbbl
insl
mov
das
movsb
aas
test
inc
add
mov
lcall
movl
inc
jle
sbb
lods
dec
push
dec
int3
mov
dec
loope
sbb
imul
add
mov
push
jle
mov
aaa
stos
jg
cld
inc
leave
insb
insb
decl
mov
test
icebp
sbb
test
and
push
pushf
popa
or
cwtl
insl
xchg
aam
pop
mov
pushf
mov
jmp
clc
push
jae
lock
out
stc
das
sub
loope
pop
xor
mov
or
cmp
es
sbb
xchg
outsl
xchg
fisttpll
mov
nop
fwait
sub
pop
mov
rorl
imul
sbb
out
pop
mov
scas
inc
mov
and
outsb
fnsave
je
aam
pop
cli
push
or
lds
test
xor
sub
aad
xchg
roll
das
scas
mov
sub
mov
subl
and
mov
sbb
sbb
movsb
test
push
imul
pop
cmpsb
lods
sub
outsl
xor
cwtl
mull
or
push
sbb
mov
es
sarb
aad
mov
lahf
mov
sub
jle
cmp
ficomps
push
fwait
xor
jecxz
leave
xchg
push
or
cmpsl
daa
out
enter
out
imul
cli
or
jae
push
fildl
les
incl
ficompl
test
in
jbe
mov
push
xchg
fisubrl
cmp
add
loope
or
into
push
movsb
mov
sbb
dec
add
dec
shll
ror
sbb
shll
mov
sbbb
jne
and
cmp
lret
inc
jae
mov
shlb
fs
push
outsb
lret
jns
mov
int3
adc
bound
fs
xchg
ss
cs
fisttps
mov
cs
and
mov
outsb
insb
and
lret
push
jbe
mov
int3
push
fsubp
pop
sub
adc
data16
adc
add
adc
xor
or
mov
aas
daa
inc
test
xchg
cltd
xchg
repz
mov
insl
dec
test
push
int
hlt
cmp
gs
nop
das
xor
inc
ljmp
add
loop
and
ret
adc
in
shld
sbb
add
mov
mov
stos
sbb
mov
pop
adc
int
push
push
popa
out
pop
insl
popa
jae
outsb
dec
cs
mov
push
xlat
sbb
mov
fwait
outsl
lods
mov
test
jb
int
pop
mov
pushl
lret
dec
popf
jne
sbb
push
sbb
push
out
popa
subl
pop
repz
sbb
stc
xchg
scas
sub
sbb
andl
sar
and
xchg
pop
push
xor
inc
sbb
mov
or
dec
sahf
stos
jge
mov
inc
sbb
pop
data16
push
insl
mov
mov
mov
mov
jecxz
stos
mov
scas
sub
test
sub
out
and
std
fdiv
cmp
mov
insl
jno
push
sub
jecxz
or
adc
hlt
aad
add
incb
push
mov
adc
inc
lcall
movsl
insb
das
jns
aad
pop
mov
jno
mov
je
int3
rcr
cmp
loop
xchg
inc
adcl
fdivp
sbb
sbbl
fstpt
xchg
push
test
inc
ljmp
and
negb
fstp
jecxz
xchg
popa
xor
stos
xor
push
das
add
out
push
sub
mov
xor
ret
pop
mov
clc
loope
out
es
adc
mov
in
loop
stc
mov
mov
cmp
daa
mov
sub
inc
jle
inc
sbb
jbe
add
adc
pop
jl
mov
mov
data16
or
movsl
icebp
push
out
mov
pop
loope
movsb
js
lods
sbb
stos
jg
stc
nop
test
es
xor
sbb
cmp
mov
jae
or
shlb
test
and
xor
outsl
pop
push
mov
mov
push
or
cmc
fmuls
test
mov
bound
mov
mov
cmpsl
aad
jno
out
ja
and
mov
push
sub
sub
xchg
dec
pop
imul
xor
jne
inc
adc
sbb
xor
sbb
adc
mov
mov
clc
cs
mov
push
mov
dec
popf
xor
movsb
aam
rclb
cmp
ss
mov
mov
subb
cli
das
pavgb
sbb
push
dec
cmp
pop
loopne
xlat
insl
dec
cld
int
inc
mov
add
sub
lods
xchg
xchg
mov
lahf
outsb
dec
push
jno
outsb
add
xchg
mov
fwait
loope
and
or
mov
ljmp
dec
mov
lret
inc
push
outsb
cld
insb
call
dec
push
sti
push
xor
jmp
mov
dec
bound
fnsave
push
push
pop
repnz
sub
jno
repnz
fldenv
cli
xchg
test
push
fstl
popf
adc
inc
sub
xchg
jbe
lahf
gs
or
frstor
clc
xchg
jns
bound
mov
add
cltd
out
pop
stc
mov
sub
test
inc
mov
lock
movsl
cmp
je
mov
out
dec
sbb
les
or
mov
jnp
lcall
ljmp
mov
or
into
std
pop
in
leave
adc
mov
push
or
cmp
out
test
or
inc
iret
jbe
pop
xor
cmp
mov
and
push
es
or
push
adc
out
add
jbe
cmpsl
movsb
xchg
mov
test
into
cld
cmp
int3
and
sub
in
pop
mov
and
jl
sbb
or
sub
xor
subl
mov
pop
pop
add
add
xor
push
gs
in
and
pop
sub
insb
idiv
dec
cwtl
cmp
mov
icebp
adc
mov
shrb
fwait
mov
aaa
sbb
mov
cmp
xchg
scas
push
lods
insb
and
xor
hlt
lret
lea
ds
sbbb
clc
sbbl
test
mov
pop
mov
loopne
xchg
loop
mov
push
setnp
xor
out
mov
fidivs
out
aas
out
ljmp
xor
add
movsl
push
mov
push
std
xchg
add
divb
lahf
and
dec
popa
jle
scas
dec
jecxz
into
push
call
ss
inc
cwtl
ficoms
lods
xlat
jb
fstpt
lods
xor
sbb
xchg
adc
mov
jg
add
cmp
das
push
in
stos
sub
outsb
inc
add
mov
or
clc
pop
fisttps
stos
rclw
std
fldt
clc
lods
ss
xor
inc
adc
addr16
das
cltd
inc
dec
push
popa
add
cmc
add
mov
aam
mov
mov
jne
xchg
lds
and
scas
lcall
cmovp
int3
pop
adc
addr16
cmp
testb
push
leave
shrb
push
es
xchg
sti
cld
repz
arpl
dec
ja
loope
gs
cwtl
das
out
bound
int3
sub
mov
repnz
inc
loope
or
loopne
pop
push
cmc
cmp
mov
inc
sub
ds
es
bound
inc
xor
je
xsha1
cmpsb
iret
sub
pop
sbb
jp
or
or
and
loope
inc
pushf
ret
into
xchg
adc
dec
xchg
sub
cmp
std
imul
xchg
lahf
testb
or
fimuls
inc
xor
pop
sub
sarb
and
imul
push
mov
push
xchg
push
fadds
cld
sbb
fidivl
pop
testl
scas
jecxz
flds
or
push
stc
call
push
dec
jns
jp
push
jle
and
jle
add
pop
pop
loopne
push
dec
pushf
jns
les
stos
sahf
sub
or
mov
iret
rcrb
or
mov
add
mov
sub
pop
push
mov
add
add
xchg
jno
stos
mov
add
movsl
mov
pusha
sti
mov
xchg
mov
roll
adc
lock
es
dec
and
rcll
mov
shl
cwtl
push
pushf
lea
shl
pop
jbe
ljmp
sbb
adc
pop
cli
fadds
mov
mov
sti
mov
jns
sub
pushf
cmc
push
dec
or
push
into
loopew
push
inc
fsubrl
mov
enter
push
movsb
loope
repz
shll
and
push
data16
rcrb
arpl
and
lea
mov
push
test
push
sbb
inc
aaa
sbb
adc
pusha
push
cltd
mov
sub
scas
lds
stos
mov
aam
addl
mov
push
fldcw
ficomps
mov
sub
jne
sbbl
pop
imul
je
push
cmpsb
rorb
ret
cltd
cmp
scas
inc
mov
pushl
sahf
xchg
push
sbb
pop
xor
mov
imulb
add
inc
pushf
xor
dec
cmc
push
hlt
mov
aad
in
ja
cmp
sub
sbbl
xor
cli
mov
and
jno
inc
and
inc
jle
jae
andl
int3
mov
ficoml
lret
add
inc
xor
pop
jp
shlb
adc
gs
xchg
jl
icebp
xchg
or
bound
dec
shll
xchg
pop
dec
movsb
or
xor
mov
cmp
cmp
mov
xchg
shll
fisttps
mov
aaa
pushf
xor
inc
leave
fdivs
int
ja
mov
popa
inc
int3
xchg
dec
dec
fwait
sub
xor
pop
out
popa
imul
fmuls
call
rolb
int3
fimull
movsl
aad
fnstenv
cs
cmp
cld
push
dec
pop
mov
ja
and
jno
inc
clc
push
call
mov
orb
lahf
mov
addr16
rcrb
les
or
lret
mov
mov
bound
pop
xchg
xchg
sub
imul
cmpsb
fsts
sbbl
rcrl
das
push
fcoms
loop
sub
rclb
or
mov
ficomps
adc
shll
lock
test
sub
fcoms
pushf
iret
jb
inc
ss
cs
sbb
leave
dec
fiaddl
call
xor
push
or
cwtl
scas
aaa
pop
test
xlat
jp
inc
lods
clc
mov
jecxz
mov
cmp
adc
jae
mov
sbb
push
popf
ret
loope
imul
je
push
xor
ja
repz
arpl
repz
cmp
insl
fwait
adc
icebp
sub
dec
push
sub
jecxz
dec
xor
inc
fsts
shlb
mov
adc
push
add
in
rclb
scas
and
lahf
mov
and
data16
jns
xor
cmp
xlat
push
les
movsb
jecxz
cmp
outsb
insb
mov
ss
outsb
jle
call
cmpsl
ds
pop
push
out
dec
vpaddw
pop
scas
push
test
icebp
aaa
into
and
mov
arpl
or
imul
mov
add
dec
mov
cwtl
aas
repz
loop
cmp
push
int
lock
daa
inc
es
pop
sub
mov
mov
stos
xor
int
mov
adc
clc
notl
psllw
adc
repnz
mov
pop
pusha
in
adcl
in
test
or
adcl
out
push
xchg
cmp
outsb
fmul
insl
xchg
xchg
sub
outsb
xchg
scas
movsb
sub
repnz
into
mov
out
imul
cwtl
and
andb
daa
stc
popl
inc
aad
arpl
ljmp
icebp
ss
cmp
in
adcl
lods
pop
pop
mov
push
pushf
xor
mov
xchg
and
lods
or
xor
andl
cmp
ja
loop
arpl
addr16
dec
imul
aam
xlat
outsb
int
mov
cmp
jecxz
mov
dec
xchg
push
cmc
aam
mov
pop
fidivl
xchg
xchg
push
push
cltd
sbb
jno
test
repz
lods
jmp
and
mov
inc
pop
out
fisttps
outsl
mov
out
jl
xchg
add
adc
test
xchg
pop
cwtl
adc
out
jp
sbb
shl
adc
xor
fs
jl
or
and
mov
and
cld
or
aaa
or
inc
xchg
pop
aam
shlb
pop
icebp
arpl
jle
add
xor
adc
mov
les
jl
xor
stos
loop
or
or
xor
ss
lds
scas
push
jne
jae
shll
jecxz
adcl
xorb
call
inc
mov
mov
test
clc
jmp
mov
fucomp
jae
pop
push
lea
addr16
jnp
mov
aas
int3
aas
dec
pusha
adc
adc
xor
arpl
lcall
pop
repz
sub
in
and
fisttps
out
jge
pop
mov
lds
arpl
adc
adc
test
fwait
out
add
jg
test
shrl
push
adc
rcll
push
das
in
xor
loope
sbb
rclb
nop
mov
lcall
ljmp
aad
adc
sbb
repz
lods
lahf
testl
mov
arpl
insb
cmc
jg
test
mov
cmp
mov
stos
add
jno
jae
and
leave
and
fcompl
lahf
mov
mull
xor
out
and
jnp
inc
insb
in
inc
sbb
fnsave
inc
dec
xchg
sbbl
dec
fcoms
and
clc
pop
mov
ss
icebp
pop
hlt
sub
xor
push
jecxz
in
scas
mov
fcoml
aas
adc
xlat
shrb
lods
ss
in
inc
loop
fsub
mov
add
ficompl
enter
adcl
ret
or
mov
inc
lods
jg
pop
outsw
sbbl
cvtdq2ps
and
dec
and
ret
in
mov
clc
cmp
or
jecxz
fld1
mov
adc
jne
add
fsubrl
fwait
xor
fs
cld
nop
daa
cs
adc
dec
cmpsb
cmp
cmp
inc
fisttpl
jb
mov
xlat
je
lea
insb
pop
and
fiadds
in
mov
cmc
clc
fsubrl
xor
hlt
cmpsl
mull
push
jmp
dec
cmp
push
jae
addr16
insl
and
sbb
pop
push
push
out
xchg
jl
pop
daa
jne
gs
sub
outsl
ret
lea
mov
in
mov
ret
sub
stos
inc
and
pop
mov
sub
fldt
dec
sub
rcrl
in
push
mov
jae
mov
xlat
arpl
xor
sub
inc
fnsave
mov
fs
adc
and
xor
dec
ljmp
sbb
mov
movsb
cmpb
pop
sub
and
or
xlat
push
dec
xor
and
dec
or
subb
popf
or
sti
fdivrl
and
addr16
lods
mov
jp
into
add
js
stos
sbb
adc
in
mov
jbe
dec
int
dec
adc
cmc
cmp
pop
xchg
fldenv
pop
dec
popf
or
pop
cli
jne
fcoms
movsb
push
mov
pop
cli
fmuls
lock
js,pn
js
pavgw
sar
js
add
sbb
cmc
mov
lods
xlat
testl
jle
push
mov
fldt
jl
cmp
sbb
xchg
inc
clc
adc
add
aad
xchg
repz
xchg
sbb
cs
xchg
insb
loopne
test
mov
jge
adcb
sub
aad
or
lahf
xchg
push
mov
or
es
cmp
add
push
repnz
cmp
jmp
pop
outsb
add
sub
arpl
call
ljmp
fnstenv
test
sub
dec
addr16
fwait
lret
inc
adcb
cs
inc
ljmp
xchg
pop
add
jp
iret
outsb
mov
adc
jb
frstor
cmp
ret
insl
jnp
or
jecxz
es
and
cli
xor
movsbl
or
dec
mov
and
mov
add
pop
sbb
dec
mov
cld
xchg
xchg
arpl
xchg
mov
imul
shll
fnstenv
sub
testl
pop
ljmp
mov
stos
inc
stc
or
mov
push
int
lret
push
add
sbb
mov
add
pop
dec
bnd
or
pop
mov
push
sub
jno
iret
cmp
cmp
sub
test
inc
test
out
xchg
add
addb
es
jecxz
sbb
test
cmp
scas
inc
push
push
dec
fs
or
and
inc
jle
push
xchg
repz
clc
xchg
xlat
push
test
icebp
les
in
add
fwait
mov
gs
sub
inc
add
pop
jo
pushf
or
sub
or
ficompl
fidivl
movsl
repz
jnp,pt
sub
jns
mov
mov
mov
imul
and
cmpsb
push
push
fisubl
add
mov
jb
inc
in
xchg
sahf
sbbb
adc
mov
push
dec
mov
nop
dec
lods
pop
or
shl
cmp
jle
or
scas
push
int3
and
or
push
add
push
inc
std
cmp
and
arpl
push
jle
jl
int3
lret
push
fs
dec
and
pop
dec
xchg
fsub
sub
cli
push
dec
out
jp
inc
mov
fwait
add
icebp
mov
clc
add
std
sbb
push
pop
mov
test
out
in
and
sub
insb
rclb
sub
sub
dec
pop
scas
cli
mov
rorl
and
leave
push
std
jo
jno
fiadds
movsb
les
push
cltd
inc
sub
sub
dec
mov
mov
push
in
cmp
cmp
clc
popf
sub
shrb
cmp
std
cmp
cmc
loope
divl
cmp
push
jle
fstps
adc
mov
pop
add
xlat
clc
sub
jno
sbb
or
lret
fsts
sbb
iret
and
ja
das
cmp
negl
in
icebp
aaa
push
or
cmp
and
iret
fisttpl
loop
out
sbb
inc
xlat
cwtl
das
or
sub
cmp
arpl
ja
mov
jle
pop
stc
push
xchg
push
mov
test
xlat
sbb
or
mov
mov
inc
mov
add
pop
add
fwait
std
stos
xchg
adc
cmp
cmpsl
dec
ret
pop
sbb
shlb
lret
ficomps
js
cltd
jle
xlat
sub
dec
fsubrs
sbb
fcmovnu
daa
scas
mov
maxps
sub
dec
inc
fildll
in
sahf
popf
dec
push
inc
gs
or
loope
push
cmpsl
add
jecxz
push
decb
ds
mov
pop
lret
adc
mov
call
insb
in
sahf
jecxz
xchg
cwtl
fisttpl
pop
or
xlat
addr16
jae
divb
mov
push
cmc
adc
push
ljmp
dec
xchg
add
mov
out
sbb
shll
sbb
cs
pop
pop
mov
mov
mov
mov
pop
or
out
and
cmp
and
add
pushf
cld
ss
adc
adc
mov
sub
out
leave
mov
add
sbb
test
cmc
jge
cs
push
es
shlb
push
pop
xlat
inc
loop
leave
subb
mov
shrb
push
lret
fnstcw
or
repz
scas
add
lahf
mov
cmc
adc
cltd
sub
popfw
jg
cmp
stos
inc
inc
test
adc
out
enter
pop
in
ds
cmc
int3
movsl
pop
sti
dec
rol
xlat
repnz
testb
loop
dec
popf
shlb
stos
ret
xchg
in
dec
in
pusha
jecxz
iret
iret
push
sub
sar
mov
pop
or
movsl
mov
test
xchg
sub
hlt
leave
popf
or
mov
jge
ret
mov
sub
push
mov
mov
gs
cmpsb
inc
pop
cmc
daa
lret
pop
push
popf
fldt
aas
mov
negb
inc
outsl
inc
ljmp
icebp
mov
and
jne
movlps
ret
add
movsl
js
gs
xchg
xchg
mov
cmpsl
dec
pop
mov
out
lds
cmp
xchg
outsl
cli
int
out
mov
cld
cmp
fwait
pop
movsl
inc
dec
aaa
jno
lock
sbb
cs
adc
sbb
gs
push
fs
mov
jnp
jbe
sbb
js
imulb
xchg
fsubrs
mov
add
nop
add
push
lahf
lods
add
fldl
jno
test
popa
clc
inc
mov
xor
adc
js
mov
cmp
sbb
repnz
std
leave
add
leave
sbb
or
jp
pop
movsl
sbb
add
adc
call
mov
aaa
mov
mov
dec
adc
int
inc
cmp
je
data16
lret
xor
loop
pop
pop
aaa
ds
mov
adc
dec
adc
in
jle
xor
leave
out
insl
add
aaa
jns
mov
pop
xor
inc
enter
cmpsb
cmp
into
cltd
repz
cltd
xlat
xor
cwtl
pop
xor
inc
push
pushf
ds
sti
stc
int
adc
pop
xor
aad
jae
mov
mov
xlat
test
mov
push
or
movsl
call
pop
repnz
lahf
into
push
rorl
sub
mov
mov
xor
aaa
push
inc
cmp
rclb
inc
mov
xorl
es
ljmp
cmpsl
xor
lods
or
aaa
addr16
adc
pop
mov
ss
addr16
sub
mov
push
aaa
repz
clc
adc
pop
or
push
mov
dec
aaa
into
loope
inc
sub
mov
fwait
or
pop
std
lret
aad
xor
add
insw
mov
mov
ljmp
fildll
or
sarb
lock
sub
outsl
add
movsl
mov
sub
sbb
mov
cmp
fsubp
push
cmp
xor
pusha
stc
dec
and
mov
psraw
pop
outsb
cmp
jmp
in
pop
clc
loope
pop
jnp
sahf
and
jbe
shr
jbe
std
ror
xchg
in
leave
lods
sbb
lcall
hlt
xchg
scas
jmp
dec
popf
clc
push
mov
mov
push
stos
push
mov
icebp
pushf
mov
sbb
mov
jb
rcrb
ja
int
loop
je
xor
inc
xchg
sub
or
rorb
mov
or
add
cli
adc
testl
pop
xlat
inc
scas
xchg
xchg
mov
pusha
mov
dec
pop
adc
cli
push
push
or
shll
pop
pop
dec
push
fdivrs
pop
mov
pop
fldcw
pushf
stc
adc
insb
inc
repz
mov
jns
inc
sub
neg
or
mov
aaa
dec
pop
aam
popl
cmp
negb
dec
shlb
push
xchg
inc
out
or
jecxz
dec
cmpsb
xor
add
jge
test
call
daa
out
lret
xchg
leave
shll
cmp
and
jg
test
mov
mov
cmpsl
cmpsb
imul
je
xor
outsb
adc
mov
sar
inc
cli
xchg
cmp
mov
sahf
lods
cld
shr
inc
lea
in
or
scas
xor
std
mov
repnz
push
lods
test
arpl
fbstp
imul
xchg
jo
dec
filds
ljmp
sub
xchg
cmp
xor
ss
cs
or
repz
nop
dec
xchg
push
out
lcall
mov
mov
inc
jp
test
popa
mov
icebp
fsubs
enter
les
jo
out
out
cmpsl
jecxz
leave
les
add
jmp
sub
mov
dec
pop
xchg
scas
cmp
leave
icebp
push
stos
inc
nop
push
test
adc
repz
nop
or
iret
cmp
inc
and
jle
mov
lret
inc
mov
xchg
in
aas
ljmp
xor
loop
push
shll
cwtl
test
ret
shll
stos
jge
ret
pop
out
push
mov
dec
sarl
inc
iret
add
jle
sbbb
mov
fldcw
and
pop
sbb
xchg
call
stc
xchg
jbe
and
scas
subb
sahf
lods
pop
lock
insl
lods
inc
inc
jne
xchg
xchg
push
push
loop
in
dec
sub
mov
mov
sub
xlat
mov
je
icebp
dec
loope
test
jmp
sub
add
inc
lahf
cs
xor
dec
mov
les
lcall
lcall
inc
je
cmc
push
and
je
xor
push
mov
push
push
push
pop
pop
cmp
rorl
fnsave
aaa
pop
loopne
push
aad
out
add
jne
add
sarl
inc
cwtl
test
lret
lret
hlt
mov
cld
gs
inc
lahf
adc
and
or
or
xchg
cmp
aam
pop
push
sbb
or
out
adc
pop
outsl
out
jmp
repnz
adc
sub
jnp
inc
stos
jnp
sti
and
stos
insb
loop
xchg
popf
test
pop
mov
sbb
push
aad
movsb
jle
or
das
ret
or
sbb
push
pop
mov
xchg
loope
into
pop
jbe
sbb
cmp
arpl
pop
cmpsl
imul
add
sarl
or
mov
pop
rorb
dec
fsubl
stos
inc
xchg
push
jmp
lea
mov
ficomps
ja
push
cltd
dec
shl
scas
xorb
std
imul
out
cli
shlb
rclb
add
jecxz
sub
add
dec
jnp
pop
movsb
xor
lret
push
sub
mov
insb
sti
xchg
ds
clc
loop
mov
cmp
leave
xchg
jmp
sti
mov
aad
packsswb
adc
std
mov
repz
push
push
movsb
inc
push
dec
or
pop
adc
pop
cmp
addr16
lcall
loope
cmp
jbe
cmp
rcrb
add
dec
sahf
xchg
lea
loope
mov
jmp
inc
cmp
xor
inc
pop
shlb
jmp
fldl
mov
jge
pop
jae
inc
pushf
shll
out
shll
mov
push
inc
dec
insl
jge
and
jno
push
mov
and
sbb
das
and
and
lcall
cwtl
ja
fwait
xchg
cmp
push
jo
arpl
inc
sub
clc
or
mov
inc
leave
mov
js
mov
inc
in
pop
adc
cli
xchg
jns
call
in
bound
lods
cmp
shlb
mov
sbb
dec
and
xchg
inc
mov
hlt
mov
es
cmp
dec
mov
enter
test
jge
clc
popl
cli
mov
and
ljmp
ret
mov
jecxz
fwait
adc
add
jp
out
inc
pop
push
pop
inc
dec
mov
sbb
aaa
lahf
repz
inc
xlat
jb
adc
pop
js
sub
gs
xlat
bsf
pushf
dec
mov
push
aas
iret
jnp
movsl
leave
cmp
adc
sbb
in
and
push
jbe
bound
mov
imul
sbb
xor
sahf
xor
mov
fistpl
enter
fbld
cmp
mov
test
add
xor
and
fisubrl
mov
sbb
and
xor
dec
add
adc
in
mov
and
mov
arpl
test
xor
call
pusha
jb
push
loop
loope
fadds
out
cld
lods
jmp
inc
div
lea
pop
xchg
imul
add
add
jnp
xchg
push
and
adcb
sub
cmpsl
daa
cmp
mov
sub
loope
jae
dec
aas
push
out
jecxz
dec
rcll
cli
jo
mov
xlat
stos
cmp
test
in
sub
pop
adc
lahf
fidivl
xlat
pop
cmc
mov
xor
jns
subl
jg
out
xchg
inc
inc
fsub
jno
inc
sarb
jnp
or
adc
xchg
jne
xchg
mov
mov
pop
icebp
push
in
jo
pop
mov
pop
rcl
shlb
adc
imul
cmp
push
xor
and
pop
dec
dec
adc
cmpsb
inc
call
push
insl
movb
fldl
xchg
into
popf
xor
mov
loope
movsl
ret
js
ljmp
pop
cli
dec
jb
pop
lods
dec
push
dec
pop
xchg
or
or
jge
movsb
jo
pop
call
inc
fmull
sti
jp
jmp
jp
hlt
lea
sub
adc
jmp
call
fistps
loope
jne
sub
icebp
mov
bound
xlat
paddb
pop
enter
addb
cs
mov
cmp
fwait
dec
pop
iret
add
pusha
cmc
pop
xchg
sub
das
lods
inc
sbb
fnsave
mov
pop
imul
movsl
jg
xor
clc
xchg
or
sub
sti
clc
xchg
xchg
pop
mov
xor
sti
add
mov
push
mov
mov
jnp
mov
adc
sbb
push
push
lock
stos
push
fnstsw
loop
push
sbb
int3
sub
fstpt
out
lret
bound
add
jo
shll
jae
pop
mul
xchg
jns
mov
inc
mov
fdiv
mov
dec
ds
cmpsl
sub
out
push
std
imul
push
mov
notb
mov
pop
dec
mov
inc
sbb
mov
mov
add
dec
sbb
cmc
sbb
sub
jnp
mov
aam
inc
push
int3
add
adc
jecxz
xchg
movsb
or
insl
add
out
push
sbb
mov
jl
cmp
decb
orl
fs
in
cmp
jae
jmp
je
cmp
push
sub
lcall
add
lahf
xor
cmpsb
ret
xor
jo
sub
pop
cmp
push
ss
sub
adc
xchg
cld
addl
xchg
ja
pop
fsts
fdivs
data16
shrb
shrl
mov
pusha
cli
lea
cmp
inc
mov
mov
outsb
ret
push
adc
cmp
xchg
xor
iret
shrb
insb
lds
insl
frstor
pushf
jecxz
add
mov
inc
jmp
jae
in
push
adc
cmp
sbb
out
or
addr16
lret
xor
das
push
push
jp
shlb
jg
xchg
xchg
xor
dec
test
shll
pop
hlt
xchg
loop
movsb
mov
jmp
int3
dec
inc
fidivrs
mov
ja
call
cltd
or
sub
mov
cmp
in
bound
push
sti
xchg
xchg
jns
inc
cmpsl
sbb
and
mov
lods
je
xor
adcl
es
sbb
call
out
xchg
cmp
enter
sub
push
push
jne
icebp
cwtl
or
xchg
fmull
idiv
sub
and
xor
popf
xlat
cmp
stc
and
out
scas
in
dec
imul
fprem1
lea
cmpsb
lret
roll
call
xchg
stos
inc
xor
jb
xlat
aad
fisttpl
lahf
fsubl
sti
push
dec
insb
dec
mov
data16
cs
jle
mov
mov
out
repz
fstpt
cmpsb
test
int
and
fdivrl
repnz
cmp
outsl
fadd
pop
shlb
or
mov
pop
in
sub
add
sbb
sub
cmp
mov
adc
jnp
mov
inc
frstor
push
jmp
pop
mov
ss
lods
inc
les
pop
incb
js
rcrb
in
mov
loopne
xor
les
test
cmpsl
push
jge
sub
into
fsubl
data16
ljmp
jno
fadd
jp
in
or
ret
mov
fcmovbe
cmc
or
xor
fisubs
cs
mov
dec
inc
fimull
scas
popa
lods
mov
mov
pop
arpl
push
scas
cmp
call
pop
in
mov
inc
push
int3
cld
xchg
ja
xor
pop
inc
jne
daa
cmpsl
push
dec
mov
hlt
das
imul
push
nop
pop
mov
mov
cli
push
mov
inc
sub
xor
inc
jmp
int
repz
data16
je
cmpsb
stc
loopne
sub
cmp
test
cltd
cmp
ret
mov
dec
sbb
adc
cmpsb
shrl
dec
push
int3
ret
adc
repnz
xchg
mov
mov
mov
sbb
jae
mov
adc
fdivrl
xchg
jge
pop
bound
lods
and
cld
push
mov
out
pop
lea
movb
cmp
mov
xchg
sub
push
or
xor
outsl
jge
lcall
jmp
mov
jle
adc
pop
inc
fwait
icebp
mov
xchg
aaa
pop
push
jno
push
daa
xor
add
hlt
scas
push
fcomps
push
ds
xor
sti
pop
in
mov
mov
inc
fs
mov
xchg
sub
cmpsb
mov
sbb
xchg
or
repz
xchg
addr16
iret
arpl
dec
inc
sahf
icebp
and
xchg
cwtl
sti
add
jnp
push
popa
sbb
out
pop
call
pop
push
enter
and
dec
shlb
cmpsb
aaa
jbe
pop
repnz
inc
es
in
lods
xchg
push
stos
dec
xor
fnsave
les
sub
leave
jmp
mov
add
testb
or
xchg
decb
jecxz
lea
cli
stos
sbb
popf
in
insb
and
add
scas
cmp
ja
pop
xor
cltd
sub
sbb
pop
cs
push
or
in
jg
add
rcr
sbb
cmp
mov
mov
test
lret
test
pop
mov
repnz
mov
jecxz
mov
jno
jb
imulb
popa
pop
cmp
arpl
xor
dec
es
inc
fwait
imul
cmp
sbb
aas
xchg
add
dec
lock
cmp
mov
adc
add
and
pop
jge
int
sub
pop
pop
in
movsb
push
jnp
cmp
ss
rolb
dec
pop
popf
fidivl
inc
xor
pop
push
lahf
push
inc
cld
cmpsb
xchg
mov
aad
ret
outsb
enter
in
pop
ja
add
lahf
xchg
pop
mov
cmpsb
adc
pop
ficoms
mov
or
sub
sahf
push
mov
in
mov
data16
inc
sbb
sub
mov
pop
dec
dec
sarb
cmpsl
stos
movsb
insl
mov
mov
divb
pop
fdivrs
iret
mov
ret
pop
push
imul
in
sahf
fwait
inc
sbb
sub
pop
cmpsb
les
cmp
daa
xchg
sbb
js
xchg
daa
cmp
scas
mov
inc
jb
pop
int
jno
jp
or
or
in
dec
mov
ja
sub
cwtl
shrl
pop
inc
fsts
xor
jno
sbb
sub
adc
adc
aaa
popa
js
push
push
ljmp
ret
in
pusha
lods
repnz
stc
cwtl
das
mov
mov
inc
sbb
nop
mov
pop
mov
popa
sbb
dec
sbbl
dec
sub
pop
sbb
call
mov
ja
inc
xlat
jo
cmp
movb
inc
jbe
je
outsb
movlps
lea
loopne
lods
add
jno
imul
push
dec
in
sti
dec
loope
add
sbb
sub
pop
push
enter
popa
clc
sub
mov
jp
or
ja
jns
insb
clc
and
and
lcall
nop
into
xor
sbb
fdivl
add
lds
xchg
sub
cld
gs
lock
es
jp
lahf
push
and
lea
adc
xor
inc
and
sub
or
adc
ja
inc
jl
insl
inc
sbb
mov
mov
push
cld
lea
rorb
pop
ja
mov
push
sub
adc
or
and
fs
shll
jns
sub
jb
insb
popa
test
lds
out
mov
dec
aam
enter
in
jecxz
ret
cltd
sahf
sub
sbb
fstl
mov
or
jnp
push
mov
push
sub
cmp
js
mov
in
xchg
aas
mov
int
mov
fcoms
cli
dec
pop
mov
shll
xchg
add
adc
aas
mov
packsswb
aad
mov
int3
outsl
mov
out
out
xchg
in
daa
cmp
cld
lods
cld
push
xor
mov
xchg
add
lods
push
js
mov
jae
aam
jp
fnsave
mov
jb
xlat
iret
inc
lcall
sbb
test
outsb
sti
gs
pop
cmp
notl
iret
cwtl
push
push
add
xor
les
xchg
fisttpl
or
push
and
call
mov
xchg
pop
add
ds
ljmp
shrl
xor
bound
dec
add
insb
pop
int3
xor
scas
cs
adc
rcll
inc
sbb
push
sub
push
out
or
es
mov
ret
sub
mov
aam
jmp
inc
or
jg
aad
pusha
ss
idivb
daa
mov
cmp
and
in
adcb
mov
inc
inc
fwait
push
adc
push
and
xor
mov
imul
call
loop
adcl
and
lds
mov
pop
std
mov
out
bound
mov
or
outsl
mov
ficoms
scas
push
roll
or
dec
aas
cmp
fldenv
bound
sub
add
enter
xor
sub
add
insb
clc
push
hlt
or
repz
xor
pop
and
mov
dec
fiaddl
add
lcall
adc
outsl
push
sar
mov
and
inc
out
cld
cmpl
ret
inc
into
inc
add
jl
rcrb
pop
or
movsl
sarb
push
cld
je
xchg
repz
inc
or
popf
mov
cmp
scas
repnz
mov
movsl
scas
insb
ljmp
adc
out
or
inc
pop
xor
decb
sub
icebp
mov
cs
out
inc
nop
sub
daa
inc
cld
pop
fimuls
ja
sbb
lea
push
lods
sub
lock
lods
in
call
call
pop
mov
outsb
dec
and
mov
leave
addl
in
ja
sti
jne
sub
cltd
pop
popl
insb
stos
repz
lea
fbld
orl
xor
inc
fstpl
dec
mov
sbb
sbb
mov
js
lock
pusha
xor
call
sbb
fwait
icebp
addr16
push
imul
shll
dec
pop
mov
les
dec
pop
mov
push
mov
cmp
sub
cli
mov
xchg
mov
lods
ret
in
pushf
or
lret
shr
aas
xor
adc
jecxz
cmc
and
ja
ret
lods
add
out
xchg
push
pop
je
outsl
mov
shrb
int3
sarb
and
xor
adc
stc
pop
roll
push
movsl
rcr
mov
adc
out
xchg
mov
sarl
call
pop
lock
sahf
push
sub
in
lret
jo
xor
jecxz
lods
inc
cmp
jp,pt
lret
fistps
shlb
push
xchg
add
test
fwait
test
test
das
mov
and
mov
sbb
inc
xchg
mov
out
pop
scas
lahf
jo
add
xor
xor
jmp
sub
mov
cmp
cmpb
rcrb
xor
pop
xchg
loop
add
and
int
jno
dec
dec
pop
sbb
inc
idiv
xchg
sub
cltd
adc
jae
xchg
cwtl
cmpsl
cmp
xchg
sub
or
sbb
iret
push
das
xor
loopne
nop
dec
xchg
dec
insb
addr16
cwtl
xor
sbb
in
jmp
fstl
lret
popf
push
cltd
pop
inc
push
in
jbe
fnstsw
fisubl
pop
ss
aad
jb
xchg
clc
push
popa
hlt
mov
sbb
int
cld
adc
mov
addr16
les
add
dec
pop
inc
and
xor
out
xor
icebp
mov
add
add
cmp
push
dec
pop
testl
insb
sub
sub
rol
int
jmp
test
iret
sbb
jae
inc
icebp
sbb
jl
pop
adc
in
dec
cmp
lea
xor
adc
mov
imul
movsb
dec
add
std
mov
mov
insb
cmovg
inc
and
add
mov
jge
ljmp
sub
push
mov
sub
xchg
insb
mov
nop
and
cmp
inc
pop
scas
jae
cltd
and
sbb
ror
mov
inc
in
mov
push
scas
dec
bound
aaa
jo
ss
xchg
loop
loope
add
repnz
or
inc
cmpsl
and
pop
push
push
cmp
mov
addl
dec
adc
lock
dec
xchg
and
mov
movsb
dec
pop
and
addr16
andl
sarb
pop
mov
xchg
mov
outsl
fldt
iret
popa
add
pop
std
insb
cmp
ret
jecxz
rcrb
subl
test
ljmp
rclb
adc
adc
add
dec
test
adcb
mov
and
das
out
cld
pusha
and
fwait
es
imul
inc
pop
ret
pop
stc
inc
popa
push
or
out
outsl
push
and
xchg
jno
jmp
mov
adc
mov
jecxz
jb
scas
cmp
testb
in
lea
xor
sbb
sub
inc
push
jbe
inc
sbb
aam
std
ficoml
add
cwtl
inc
decl
call
addl
pusha
std
cltd
int
lods
fidivl
pop
pop
push
pop
fs
and
fldt
insb
adc
or
jae
pusha
stos
testl
dec
or
inc
push
dec
aas
movsl
lock
jg
jnp
pop
leave
jmp
mov
in
cmp
xchg
movsb
jmp
mov
or
adc
dec
jns
outsb
jl
adc
xor
push
nop
sub
testb
movsb
mov
mov
or
andb
bnd
call
mov
cwtl
mov
pop
pop
jp
pop
scas
mov
or
orl
fcoms
cmp
add
cmc
outsb
lds
movsb
cltd
arpl
aam
fwait
inc
lret
jbe
push
adc
dec
dec
xchg
test
jle
popf
inc
mov
or
repnz
outsl
loop
xor
outsl
cs
xchg
xor
adc
fwait
mov
gs
add
mov
jnp
cmp
xchg
insb
mov
dec
hlt
add
mov
rorl
pop
adc
movaps
mov
or
xchg
stc
mov
stc
jmp
mov
rorl
fnop
imul
les
mov
les
repnz
mov
in
imul
push
sub
mov
xchg
pop
je
das
fucomp
cltd
loope
fistpl
inc
mov
jecxz
movsl
fiadds
sbb
addb
add
stos
cmp
not
out
inc
mov
jne
xchg
das
jmp
insl
sub
sbb
flds
fbstp
hlt
aam
jp
test
lcall
arpl
int
pop
stc
iret
pop
pop
jbe
jecxz
push
mov
sarb
fwait
mov
outsl
mov
repz
dec
push
rcl
push
pop
repnz
jne
leave
pusha
test
fucomip
roll
push
mov
push
sahf
movb
pop
pushf
mov
sub
add
or
lret
fwait
cmpsl
addr16
loop
add
mov
scas
push
iret
mov
cmp
fisubs
js
test
lcall
ss
xor
sub
push
cmp
mov
mov
jo
jbe
mov
scas
mull
push
dec
mov
jge
mov
movsb
sahf
rorb
in
daa
in
sbb
dec
andb
pop
mov
sbb
pop
cmpsb
xorl
push
sahf
out
mov
popf
popa
xchg
xor
lret
les
jns
push
pop
mov
imul
fbstp
aam
inc
mov
lods
mov
add
xchg
sub
hlt
imul
rorb
pop
dec
sub
mov
dec
push
mov
imul
das
sub
inc
shrb
push
decb
aam
cmp
sub
adc
or
enter
cmp
fidivrs
testl
andl
mov
lods
stos
sub
sub
or
fs
movsb
mov
in
lret
out
test
aaa
ret
out
outsb
jmp
popf
sbb
fsubrp
sub
sbb
mov
fdivl
or
push
mov
xor
daa
inc
push
popa
iret
fnstsw
adc
and
std
mov
jns
xchg
aam
iret
inc
and
bound
inc
fnstsw
jno
push
adc
inc
je
xchg
sub
inc
data16
ja
mov
mov
and
stc
inc
call
lea
ljmp
push
daa
fs
cmp
pop
cmp
gs
clc
push
jno
lea
stos
int3
mov
sbb
push
mov
jecxz
repnz
xchg
lcall
cmp
jne
les
xchg
xchg
setge
xchg
jno
mov
xchg
sub
mov
lods
out
add
sub
pop
leave
lea
cmp
pop
movsl
iret
cmpsw
test
inc
jl
in
adc
xchg
lods
inc
push
pop
aam
mov
mov
das
mov
pushf
sbb
mov
fisttpll
and
shlb
add
sub
in
or
dec
loope
mov
call
mov
cmpsb
out
mov
cmp
cmp
sbb
or
cs
sbb
xor
sahf
lods
xchg
cmc
pop
hlt
cmpsl
cwtl
mov
push
sbb
sub
adc
push
xor
mov
fnsave
aas
je
aaa
mov
es
adc
aam
cmp
mov
xor
inc
cmp
daa
jnp
ljmp
fucompp
mov
jle
lods
mov
rcrb
pop
sahf
lods
xchg
xchg
and
mov
or
mov
repz
sarl
bswap
bound
sarl
pop
xor
repz
push
xchg
push
and
movsb
add
inc
movsl
test
movsl
fadd
ret
mov
mov
xor
je
add
pop
adc
xchg
das
lds
adcl
mov
fnstsw
push
jg
add
outsb
rorb
and
mov
call
inc
or
stos
out
jg
bound
pop
adc
pop
push
cmp
xorl
xchg
cltd
loope
rcll
repz
clc
iret
fnsave
xor
pop
scas
fdiv
push
hlt
xchg
lods
and
repnz
fnsave
adc
lret
in
ja
cmp
push
fadd
lret
sub
jb
pop
jle
sbb
inc
outsb
jl
lock
nop
sub
mov
add
test
fsubp
jns
add
mov
add
or
dec
cmc
mov
mov
cmp
xor
or
inc
cmp
test
fiadds
je
sar
loop
push
pop
dec
mov
test
data16
and
or
into
in
lahf
mov
ret
and
dec
iret
imul
rcrb
and
jg
lods
inc
loop
add
sub
popa
pop
in
bound
sub
push
popf
mov
xchg
add
xchg
out
les
ret
mov
js
inc
in
test
lahf
mov
adc
mov
push
jle
cltd
test
lret
mov
in
jnp
inc
in
addl
or
mov
cmp
ljmp
aas
dec
mov
mov
dec
xchg
in
dec
jecxz
dec
filds
push
rcrl
sbb
cmc
push
in
xchg
pop
cmp
mov
or
xchg
jo
xchg
and
int
xor
fsub
decl
mov
xchg
cmc
fucomp
adc
ss
outsb
mov
push
push
lods
pusha
or
sub
xchg
rorl
or
sub
mov
adc
jno
xor
test
ror
in
inc
lcall
and
mov
ss
inc
mov
lock
mov
ret
push
shll
adc
push
xacquire
cwtl
frstor
cmp
dec
loope
mov
and
jae
and
add
in
add
adcb
notl
inc
adc
xchg
pusha
sub
ja
xchg
les
shld
loope
ret
addr16
jmp
push
cmpsb
xchg
pop
sahf
xchg
jmp
mov
xchg
jecxz
xor
inc
xchg
cs
gs
aad
rorb
js
lods
test
dec
scas
out
cld
jecxz
xorl
mov
and
or
loopne
sbb
sub
and
cmpsl
test
lock
insl
mov
dec
xchg
iret
jmp
dec
das
cwtl
xchg
sbb
aad
jg
pop
adc
inc
push
sub
jae
sbb
shr
mov
rorl
cli
cld
xchg
push
rcr
divl
sbb
push
push
xor
ja
sbb
xlat
sbb
iret
inc
dec
mov
shrb
or
jne
sbb
sub
shl
stos
shll
ror
pop
dec
inc
in
imul
push
je
ret
lds
xchg
or
sub
test
in
fisubrs
inc
sti
sbbl
repnz
pop
std
inc
daa
mov
jmp
or
jmp
dec
inc
fisttpl
bound
cmp
out
cs
testb
adc
sti
nop
rclb
mov
cwtl
xchg
fbstp
inc
and
fnstenv
sbb
inc
mov
sbb
mov
jae
hlt
les
xor
scas
lods
dec
pop
mov
loopne
add
insl
aam
add
push
dec
repz
sti
mov
xchg
xor
loopne
xchg
cld
inc
or
ficoms
scas
roll
lods
push
fwait
adc
out
xor
or
sahf
loope
push
pusha
out
es
out
nop
jo
dec
adc
lret
aas
lret
jg
mov
pop
sahf
fwait
sbb
sub
xchg
pop
loop
cmp
add
and
frstpm(287
jl
pop
test
mov
cmpb
mov
adc
pop
xor
test
out
push
mov
xchg
jns
ret
lcall
xor
sub
xchg
insb
test
or
pop
scas
inc
dec
xor
pop
out
jo
xchg
mov
xor
mov
push
pop
cmp
nop
aaa
cmp
mov
ficomps
vmwrite
xor
mull
aam
push
leave
in
adc
je
in
and
push
lret
or
or
into
jecxz
add
sbb
fdivr
push
or
xchg
and
aas
in
mov
mov
fsubrl
push
sbb
std
cmp
test
inc
nop
sbb
or
adc
rcr
cmc
cmp
xchg
mov
jns
popa
mov
stc
xchg
adc
lret
inc
pushf
mov
out
sub
shll
ds
out
insl
lea
mov
cltd
pop
xlat
cmp
mov
pop
and
into
pop
jecxz
cmpl
inc
push
jl
mov
add
outsl
push
and
or
sahf
dec
lea
test
aaa
push
sbb
ret
cmp
enter
cwtl
cmp
mov
movsb
push
lret
mov
shrl
bound
fwait
and
fs
mov
mov
ds
aam
xchg
lds
rcrb
push
and
mov
inc
popf
mov
test
call
fs
push
aaa
sbb
pop
jnp
or
testb
call
repnz
cmp
jge
push
int
or
addr16
mov
mov
jbe
push
xlat
outsl
push
in
out
xchg
pusha
xchg
cmpsl
in
cmp
push
rep
cmpsl
ds
imul
insl
inc
xchg
jnp
mov
cld
jg
push
ljmp
adc
jg
mov
repnz
add
in
fadds
lods
xchg
jbe
jle
mov
jmp
xor
jp
repz
ja
ss
sahf
push
rolb
in
nop
imul
dec
lcall
fmull
hlt
jle
jne
sbb
push
xchg
popa
or
and
movsl
lods
push
repnz
sbb
mov
fldl
xchg
mov
fdivrl
sub
enter
fs
xor
mov
mov
mov
sahf
adc
add
inc
ss
xlat
mov
mov
pusha
popf
xchg
sar
mov
xchg
aad
mov
mov
out
mov
mov
dec
push
jp
psubsb
push
pop
jno
dec
sbb
push
in
cmp
adc
ficomps
icebp
mov
jg
xchg
fcompl
jno
mov
pop
stos
inc
mov
xchg
cmp
ss
push
arpl
sbb
fsubl
lret
rcr
mov
push
jmp
inc
loope
mov
xchg
cs
sbb
movl
add
sub
mov
icebp
dec
pop
loopne
lret
in
mov
inc
mov
out
stos
lods
arpl
xchg
outsb
lcall
cmp
out
xchg
nop
cmp
and
hlt
lcall
cmp
lea
leave
int
gs
xchg
adc
pop
popa
fcompp
jo
pop
je
ret
lock
mov
jae
jge
add
gs
dec
pop
mov
pop
lods
rolb
nop
mov
les
ja
pop
sbb
or
loop
mov
xor
inc
idiv
pop
cmp
imull
mov
bound
out
add
lods
enter
push
mov
fdivrs
mov
mov
xlat
pop
sub
fbld
int
sub
adc
jo
xchg
sub
fcomip
inc
adc
movsb
pop
bound
mov
push
ret
jbe
dec
std
xor
in
daa
js
and
cmp
mov
mov
xlat
or
or
out
xchg
and
lods
aas
mov
pop
ret
jnp
sub
sbb
mov
pop
out
aaa
and
cwtl
test
fisubrs
fistpl
nop
mov
hlt
mov
mov
movsl
pop
stc
or
movsb
jno
mov
mov
repnz
xchg
mov
mov
into
dec
jbe
mul
sbb
ret
mov
fsubrs
int3
arpl
addb
mov
push
mov
dec
jle
or
leave
pusha
in
cmp
mov
mov
adc
sbb
xor
push
lods
mov
icebp
cli
mov
ror
adc
cli
pop
iret
add
push
sbb
and
xchg
pusha
lcall
aad
xor
nop
inc
imul
mov
and
xlat
sub
jp
bnd
lods
scas
add
jno
lods
ja
sbb
sbb
mov
jae
cmp
dec
cmp
mov
daa
cmp
mov
inc
loope
lret
clc
push
icebp
movsl
lret
pushf
xchg
sub
js
out
sbb
adc
or
pushf
xor
dec
adc
fidivrs
fwait
popl
movsl
mov
insl
notb
lahf
jmp
sbb
aam
xor
rorl
lgs
sub
pop
fistpll
imul
jae
les
xchg
or
in
sahf
pop
mov
and
mov
ret
iret
and
cli
iret
lock
mov
cmpsl
push
scas
push
inc
ret
repz
fnstenv
jl
dec
dec
sub
int
add
out
xor
jmp
xchg
mov
and
xchg
mov
sub
gs
push
sub
dec
xrelease
outsl
shrl
mov
test
insl
fldt
fcomps
or
cmp
xchg
lret
pushf
mov
sbb
aad
sub
insl
data16
push
mov
nop
or
pop
xor
push
inc
xlat
xchg
fdivrs
pop
mov
mov
inc
imul
pusha
mov
daa
mov
mov
inc
gs
xor
jle
xchg
sub
push
jmp
mov
and
push
xor
mov
dec
pop
jg
mov
jb
fiaddl
and
pop
lods
sub
push
data16
push
ja
out
push
mov
loopne
imul
xchg
insb
add
inc
or
xchg
pop
ss
out
hlt
cmp
mov
rcrb
aad
cmpsb
cmp
out
cmp
sbb
sbb
mov
cmc
in
or
mov
sub
gs
ds
jmp
subl
andl
aam
clc
or
andb
adc
mov
ficomps
mov
cmp
sahf
sahf
outsl
and
testl
push
cmp
ret
mov
jo
lods
rorl
lret
inc
mov
stos
iret
fisttpll
inc
cmpsb
push
dec
fcmovnbe
mov
jno
ret
pop
scas
cli
add
cmpsl
sbb
mov
arpl
scas
inc
xor
daa
mov
sarl
sbb
sbb
xor
cmpsl
xchg
les
and
cmp
mov
pop
dec
and
js
adc
lock
orl
sbb
xor
movsb
sub
inc
sbb
dec
sub
data16
mov
xchg
not
imul
or
xchg
stos
inc
add
sub
pop
jp
or
in
mov
lea
xchg
nop
dec
xchg
fwait
mov
mov
inc
xchg
sbb
xchg
jnp
mov
add
dec
pop
aad
out
cmpsb
in
arpl
sarb
and
js
fsub
repz
stos
cs
cld
sbb
scas
cld
inc
push
dec
cmp
repnz
shrl
add
mov
jae
shrl
std
fstpl
cmpsb
inc
outsb
cmpsl
adc
pop
into
cmc
mov
imul
ret
add
adc
mov
or
xchg
testb
outsb
add
shr
cmp
sbb
aam
arpl
cmp
add
pop
lcall
aas
pushf
xor
insb
and
mov
fcmovu
xchg
fld
rorb
pop
addr16
aam
popf
nop
add
test
subl
imulb
inc
jge
xorl
jecxz
jmp
test
add
repz
push
scas
xchg
aam
mov
lods
add
mov
iret
mov
pusha
xchg
leave
inc
push
push
pushf
and
fsubr
pop
subb
pusha
pushl
add
rorb
or
das
into
jno
leave
xchg
mov
ljmp
mov
sub
call
rol
push
and
mov
pop
cmpb
jmp
or
ja
xor
popf
aaa
mov
ret
push
mov
xchg
das
jp
mov
ja
cmp
fldenv
or
adc
shll
test
lcall
and
andb
addr16
int
int3
mov
testb
mov
push
pop
gs
cld
xor
push
jle
out
jge
jge
out
lods
jge
test
cmp
mov
flds
cmp
mov
and
addb
push
or
sub
ds
scas
xlat
test
rorb
inc
data16
rcrb
icebp
jmp
stos
xor
shr
push
cltd
mov
lret
inc
mov
or
mov
out
jle
jl
icebp
adc
lret
adc
add
fsubr
sub
insb
cld
repnz
sub
subb
cmpxchg
loop
adc
dec
insb
xchg
jge
cwtl
clc
or
xlat
lret
push
andl
xchg
movsb
lahf
es
mov
xchg
mull
dec
add
jnp
stc
cmp
sbb
stos
inc
aas
mov
dec
movsl
jne
dec
dec
lahf
clc
mov
imul
lds
cmc
dec
fcompl
push
test
mov
call
jp
outsl
push
test
sbb
xchg
rol
jle
bnd
push
and
pushf
scas
int3
inc
pop
cli
stc
pop
out
xor
pop
mov
out
das
xchg
pusha
jp
mov
cmp
mov
aad
mov
mull
stos
aam
in
stos
inc
push
mov
cmc
lret
jns
mov
mov
icebp
in
pop
cmp
mov
incl
sbb
adc
dec
cwtl
mov
cmp
xor
and
xchg
sub
movsl
stos
jmp
xchg
loope
shll
mov
adc
mov
cmp
ret
add
out
xlat
add
push
push
inc
lret
add
fwait
cmpsl
bound
imulb
subl
popa
jo
bound
jno
repz
push
outsb
xchg
int
add
push
pusha
aaa
mov
cli
mov
xchg
jge
cmpsl
ds
scas
lock
xchg
pop
stos
dec
outsb
inc
mov
into
sub
lods
out
jle
rcll
roll
xchg
les
movsl
mov
sbbb
mov
xor
mov
mov
adc
aad
mov
sub
sub
stos
pmaddwd
fisubrs
pop
repnz
or
cli
inc
cld
sub
pop
xchg
adc
loope
cli
mov
stos
dec
fstps
repnz
movsl
das
xor
xor
add
pop
icebp
bound
bound
daa
add
inc
mov
jle
addr16
iret
bound
or
enter
test
jae
jo
dec
mov
mov
cmp
cmpsb
stos
aas
xchg
sbb
push
js
cld
inc
in
arpl
xchg
or
push
lock
lahf
pusha
aam
sbb
xorb
addl
shlb
pop
sub
mov
shl
ja
pop
testb
xchg
sahf
gs
arpl
fstpt
push
lret
rcr
or
xor
pop
mov
ret
mov
arpl
aam
add
push
imul
jl
clc
stc
nop
pop
dec
cli
cwtl
jl
sbb
adc
xor
mov
btr
xchg
stc
cmpsb
cmp
loop
cmp
fldenv
data16
aas
bound
push
frstor
pop
fadd
repz
xchg
xchg
fisubs
out
cmp
push
cmp
cwtl
shl
cmp
jecxz
in
push
jge
fsubl
data16
arpl
push
push
mov
or
hlt
es
xchg
xchg
frstor
out
cmp
outsl
push
mov
fs
mov
decb
lea
test
and
nop
sub
mov
imul
aas
mov
cld
adc
or
mov
dec
inc
xchg
push
and
sahf
or
mov
clc
scas
repz
out
sub
loope
xchg
cmp
mov
push
jae
stos
in
in
cmp
in
shl
push
jae
push
cltd
push
mov
fs
sti
mov
cmp
insl
dec
and
push
enter
mov
xchg
popa
leave
hlt
insl
leave
fnstcw
shl
xor
ss
inc
jne
cs
xchg
pusha
jno
jecxz
pop
cmc
mov
in
es
pop
mov
shr
cs
jo
push
lcall
jge
mov
dec
pop
lcall
in
div
dec
pop
push
mov
popf
lods
shr
in
fs
icebp
dec
add
out
test
fxch
inc
orl
popa
ds
dec
sarl
xchg
xchg
dec
pop
test
sqrtps
lret
jb
cs
mov
arpl
cmp
insb
cwtl
mov
jecxz
ljmp
cmpsb
cmpsb
nop
adc
xchg
sub
jp
das
loopne
stos
mov
add
mov
addr16
add
mov
push
rcrl
mov
cld
or
jae
int
dec
fs
arpl
cmpl
and
fadds
jbe
cmp
mov
inc
js
inc
inc
mov
icebp
xor
subb
mov
out
movsl
scas
mov
pop
push
inc
sbb
push
in
jp
stos
mov
sub
jo
call
movb
iret
cmp
lea
popf
cmp
inc
xlat
rol
lret
adc
adc
rcll
cmpb
mov
and
pusha
data16
mov
dec
sub
mov
jg
mov
in
mov
cmc
loop
cli
adc
into
xor
test
add
popf
jbe
jle
imul
jne
inc
pusha
inc
jmp
mov
mov
xchg
or
and
movsl
sbb
in
ss
add
push
jmp
pop
jmp
or
test
xor
std
sbb
cs
insl
adcb
andl
insl
das
call
sbb
mov
addr16
xchg
xor
mov
mov
push
mov
sbb
xchg
mov
lcall
js
sbb
cmpsl
test
mov
jns
jbe
cwtl
shlb
push
and
test
ja
pop
push
scas
or
je
dec
add
push
fucomip
and
imul
cmp
andl
cmpsl
std
mov
xchg
dec
cmp
mov
cltd
pop
lret
inc
ds
insb
jmp
sbb
pop
xchg
or
repnz
jmp
pop
mov
push
test
mov
mov
test
jge
and
pop
mov
test
mov
jns
fidivs
sbb
sbb
orl
lock
movsb
cltd
xchg
sub
cmp
mov
pop
into
popf
or
shr
sar
inc
jmp
lods
shrb
mov
icebp
adc
clc
lea
scas
push
rcll
push
lock
add
fidivs
fsubs
mov
inc
and
mov
inc
push
divl
fadds
outsb
or
andb
xchg
jp
add
dec
xor
push
cmp
in
lea
adcl
mov
daa
cmpsb
clc
pop
dec
adc
mov
imul
movsl
mov
adc
add
cwtl
lahf
addb
push
mov
cmp
pusha
lock
in
or
jle
lock
stos
mov
jl
push
jl
mov
add
movsl
xchg
add
outsl
mov
jg
pushf
cltd
xor
rcrl
sbb
cmp
push
mov
cmp
and
stos
jae
xchg
loop
mov
jno
int
int
clc
ret
ljmp
push
jo
push
push
pop
cmp
cmp
lods
data16
mov
jp
add
xor
bound
popa
divb
das
test
lahf
ja
inc
and
mov
mov
rclb
adc
mov
hlt
sub
gs
jl
test
aam
hlt
mov
mov
cmp
nop
outsl
lahf
fisubs
das
push
imul
fcomps
enter
and
adc
cmp
ss
cmp
push
cwtl
mov
pop
and
mov
sahf
lods
inc
rorb
xchg
stos
add
mov
sub
and
jmp
and
jno
mov
cmp
lock
mov
inc
and
push
jae
repz
lret
push
divb
jecxz
mov
fisttpll
rcrl
enter
push
mov
pop
mov
mov
mov
jae
ja
out
int
fs
jno
into
jecxz
aam
stc
add
icebp
orl
sahf
popa
jmp
rol
cmp
sbb
jp
aam
or
js
push
outsl
jns
lcall
cmp
dec
es
in
inc
jmp
call
in
lods
sub
jl
jno
xor
rclb
or
fsubrl
out
sbb
sbb
cmpsl
pop
mov
push
mov
mov
lea
notb
nop
xchg
mov
pop
xlat
outsl
mov
mov
jne
das
mov
push
mov
mov
bound
rcl
arpl
pop
fsts
mov
stos
cmp
mov
push
push
fdivs
ss
mov
shrb
push
mov
pop
mov
into
mov
js
xchg
out
xchg
scas
movsl
xchg
mov
iret
push
movsl
push
cmp
push
imul
mov
lcall
inc
adc
pop
fs
xchg
cmp
scas
and
fadd
loop
pop
push
rcrl
adc
xlat
sbb
pusha
push
push
mov
fs
fcoms
inc
in
std
dec
sub
outsl
cmp
mov
fnsave
flds
shlb
push
dec
mov
xchg
clc
push
lea
or
test
je
das
stos
lcall
sti
call
test
dec
cmp
dec
and
ret
call
pop
xchg
and
jb
inc
mov
xor
mov
gs
orb
cmp
pusha
xor
sbb
dec
jg
sub
lahf
xchg
sub
addr16
xchg
out
ss
jno
sub
scas
ljmp
repz
out
es
daa
pop
or
insl
add
and
xchg
fucom
mov
pop
push
lahf
testl
jo
jge
push
pop
inc
arpl
sub
iret
dec
adc
fwait
lods
sbbl
rcrl
jnp
xchg
ds
les
popa
lock
rcll
adc
push
jecxz
jno
outsl
hlt
imul
in
js
fsubrp
sbb
dec
jbe
int
ret
ret
inc
mov
lret
iret
orb
fistl
pop
or
and
cmpl
js
cltd
or
dec
je
lods
push
pusha
loop
sti
mov
call
pop
scas
jg
mov
clc
mov
jl
lea
lahf
int3
cmp
inc
dec
inc
jno
fistpll
mov
xor
aaa
and
push
aad
xchg
mov
mov
push
dec
in
sbb
xchg
dec
push
flds
push
xor
mov
test
or
jbe
mov
ja
loopne
jne
mov
push
push
ljmp
lock
sbb
dec
stc
mov
lds
call
push
call
dec
sub
hlt
inc
push
add
insl
enter
jecxz
jns
cmp
out
pop
adc
arpl
or
pop
xorl
cld
aam
sbb
push
mov
push
pop
add
mov
dec
fwait
jl
sbb
pop
popf
cltd
inc
ss
inc
lcall
insl
in
aad
add
xchg
mov
push
and
mov
popf
js
dec
and
jb
jo
enter
or
fmull
cmpsl
pop
push
insl
insb
aas
and
cltd
pop
loop
push
popa
dec
fimuls
lcall
lret
ljmp
cmp
sbbb
dec
jge
mov
jnp
xor
bound
clc
xchg
jmp
push
or
fbstp
or
adc
xlat
xchg
addr16
adc
lock
arpl
lods
sub
sti
add
dec
xor
imul
push
lods
jo
inc
into
lock
enter
push
sub
sbb
jecxz
mov
lret
test
xchg
mov
rcrb
pop
leave
cmc
dec
out
in
out
push
sbb
dec
jne
xchg
pop
lods
mov
mov
rorl
adc
push
movsl
mov
sbb
ja
jl
jns
stc
cmp
jle
cmpsb
and
sahf
out
mov
fs
in
test
pop
sub
call
test
scas
xchg
sub
add
push
loop
fs
aad
lds
cmp
add
ja
and
negb
and
rcl
adc
pop
cmp
adc
add
cmpsl
or
int3
sub
aam
imul
stc
push
imul
mov
std
sub
dec
ret
shr
ss
loopne
gs
inc
adc
jle
repnz
sbb
xchg
insb
inc
mov
and
jle
mov
lahf
inc
popf
add
or
dec
push
pop
negb
hlt
jecxz
inc
push
popf
xor
sbbb
push
aaa
push
or
icebp
dec
and
inc
leave
fisubs
popa
jg
sub
cmp
xlat
enter
shl
xchg
cmpsl
aad
pop
bound
pop
pop
push
push
mov
adcb
decl
in
in
gs
repz
xchg
adc
inc
mov
push
jns
or
add
sub
xlat
outsb
pusha
and
add
in
xlat
lret
iret
movsb
xchg
pop
mov
mov
jno
outsl
cld
fchs
mov
and
test
in
or
jp
mov
sbb
fs
stos
out
loope
sbb
mov
cmp
push
test
test
sub
adc
rcll
or
or
adc
rcrl
xor
pop
repnz
inc
stos
out
das
lds
shl
or
inc
and
sbb
icebp
xchg
mov
aad
lock
xchg
add
test
jne
push
cmpsb
adc
mov
add
call
jno
pop
dec
daa
insb
pop
sahf
fadd
lret
sbb
jg
je
aad
xchg
cmp
jecxz
inc
dec
or
xchg
negl
push
xor
jbe
push
nop
mov
leave
xor
xchg
negb
jb
dec
dec
outsl
sbb
inc
xor
push
ss
dec
cmpsl
jns
lods
movsb
cmp
insb
sbb
inc
mulb
dec
mov
dec
jo
add
push
setbe
iret
jecxz
cmc
mov
daa
popf
lods
jne
xchg
popa
cmp
dec
and
add
xchg
pop
and
imul
sahf
ss
or
aas
xor
pusha
das
adc
mov
mov
test
aas
fisubrl
in
outsb
sbb
test
add
std
mov
lcall
sub
jg
fisubrs
stos
pop
jbe
or
jp
scas
xchg
xor
filds
fiadds
add
sub
je
lret
jno
jno
pop
mov
in
aad
je
in
sahf
push
pop
shll
sub
push
fcmovu
jns
dec
mov
jbe
fisubs
add
and
test
out
add
lods
iret
pop
test
push
mov
sahf
cli
inc
xor
mov
push
xor
mov
lahf
test
ss
fdivl
pop
inc
mov
jmp
mov
pusha
cli
movsl
lock
pop
mov
iret
jle
je
adc
xor
inc
lods
add
fstpt
pop
pop
out
mov
xor
sub
jno
adc
pop
loopne
scas
out
and
lahf
stos
lret
sbb
fnstsw
push
popa
mov
sbb
std
cltd
cltd
adc
movsl
sbb
sub
mov
pop
iret
lcall
frstor
sub
sub
cmpsl
in
dec
mov
jl
xchg
mov
movsb
xor
xchg
popa
enter
push
inc
icebp
mov
push
jne
pushf
insl
jg
pop
jmp
fcompl
mov
and
xchg
push
xor
popl
xor
subl
es
xor
mov
cmc
adc
fxch
loop
cmp
jne
push
jno
and
push
or
xor
fdivs
lahf
popa
jnp
das
mov
cltd
jb
dec
mov
mov
adc
cmpsb
xchg
pop
clc
test
pop
adcl
mov
or
idivl
xor
pop
addl
clc
orl
nop
adc
mov
xor
mov
dec
pop
jge
int3
out
arpl
xchg
loope
xchg
mov
xchg
mov
hlt
insl
insl
mov
shrb
aam
cmp
mov
inc
in
xchg
aaa
dec
out
mov
cmp
sbb
fisubs
cli
xchg
aad
cmpsb
push
mov
cmpl
pop
adc
lock
sub
pop
adc
pop
adc
xchg
push
or
mov
mov
rclb
jle
and
cltd
out
ljmp
mov
shlb
cmp
mov
and
pusha
mov
xor
ljmp
enter
mov
enter
fiaddl
jno
fwait
push
and
test
fstp
cmp
mov
push
out
xor
jp
push
shl
jg
decl
sbb
lods
jnp
mov
jg
sbb
ljmp
and
js
add
inc
aas
lea
incb
out
enter
sahf
sub
loop
inc
into
out
dec
sub
pop
outsb
je
mov
cmp
ror
rcrb
int
in
out
push
iret
loope
dec
xchg
aas
aam
test
movsl
xor
mov
jo
subl
getsec
jae
mov
xchg
sub
jno
gs
iret
and
lret
lods
scas
push
sub
decb
push
in
jle
add
xchg
cmp
mov
jb
dec
sub
test
jnp
into
pop
ja
dec
pop
int
jne
dec
addr16
out
jecxz
dec
std
pusha
ss
sti
fnstsw
push
inc
push
inc
adc
orb
cltd
adc
push
push
adc
iret
inc
inc
out
dec
cmp
scas
nop
inc
jns
addl
xchg
pop
mov
imul
fs
leave
sahf
cmc
jge
inc
fwait
das
mov
out
mov
icebp
xchg
cli
or
and
cltd
cmp
inc
cli
cmc
call
inc
out
cmpsl
into
mov
mov
inc
popf
inc
xor
aaa
add
pop
inc
jo
fcmovb
leave
mov
aad
test
fcmovu
loope
aas
push
mov
dec
das
addr16
js
mov
fwait
lahf
stos
cwtl
xchg
cmp
dec
test
stos
jne
push
push
aaa
inc
pop
in
sti
dec
int
dec
hlt
faddl
push
sub
inc
loopne
popa
orl
mov
scas
xor
aas
adc
dec
or
cmp
in
cmp
addr16
add
dec
in
jmp
push
lahf
add
xchg
ss
iret
xor
loopne
bnd
cld
push
cmpsl
out
lods
dec
dec
test
scas
mov
orb
cmp
aam
jmp
into
jne
and
pop
mov
fidivs
adc
incb
bound
inc
pop
ds
jno
out
mov
fistpl
or
xor
sarl
adcb
pop
mov
dec
xchg
mov
mov
icebp
movsb
cli
push
sub
pusha
sbb
push
pop
mov
adc
scas
repnz
js
in
xchg
leave
int
inc
xchg
popa
adcb
jns
outsl
push
mov
pop
cmp
push
xorb
int3
arpl
lods
add
sub
outsl
cli
fcmovnb
push
mov
mov
lock
stos
lock
jp
jp
test
cwtl
add
out
pop
icebp
jl
cmp
rclb
in
sbb
mov
pop
and
cld
pop
dec
and
ret
or
les
jle
mov
das
or
or
shrl
mov
xchg
insb
test
xchg
pop
or
inc
daa
movsb
push
imul
js
cltd
scas
inc
xchg
pop
repnz
hlt
mov
cmp
mov
xchg
push
ljmp
pop
pusha
pop
cmp
insl
fs
in
pop
imul
lds
pusha
cmp
or
dec
xlat
les
shrb
sahf
xor
mov
in
lods
stc
pushf
adc
stos
outsl
pop
jle
lds
jl
test
mov
xor
dec
cmpsb
push
xor
das
pop
cs
fwait
stos
cmp
mov
adc
mov
xor
pop
cli
jge
lods
pushf
mov
or
lods
fcmovne
push
notl
jae
mov
outsb
sbb
push
mov
sbb
or
adc
adcl
sti
push
jp
mov
xor
or
xbegin
cmp
push
sarb
pushf
mov
fldenv
cli
fs
push
ljmp
dec
push
js
or
sbb
inc
mov
rcr
xchg
xor
daa
inc
cmc
push
push
insb
xchg
repnz
xor
insb
xchg
mov
inc
into
faddl
sub
pop
sbb
scas
mov
ret
xor
call
mov
jo
lcall
sub
pop
cltd
xor
mov
sbb
mov
jmp
movb
repz
adc
mov
mov
lods
leave
and
xchg
dec
cltd
dec
jb
push
in
lahf
sbb
ss
nop
cmp
mov
cltd
sbb
stc
and
or
std
adc
inc
lret
push
dec
cld
out
test
cmc
out
cld
rorl
or
mov
and
int3
jo
sub
dec
push
or
insb
subl
fldcw
sbb
ss
and
fisubs
aam
test
jae
fidivs
mov
clc
enter
dec
inc
testb
ret
test
push
in
dec
insl
and
daa
sbb
jns
add
jae
cmp
js
xor
sahf
cmp
cmp
cmpsl
ret
outsl
mov
inc
or
cmp
mov
mov
push
cmpsl
call
iret
call
jo
mov
xchg
aas
int3
xchg
mov
insb
out
mov
sbb
or
ja
int3
pop
pop
sbb
fildll
ret
add
push
and
add
sub
inc
jae
cmp
adc
sbb
pop
pop
pusha
cmp
insl
and
xor
mov
sti
xchg
and
andl
jb
cmp
out
fistl
aad
sahf
lods
cmp
in
test
xchg
aad
fcmovbe
mov
sub
fsubr
das
cmp
insl
dec
sub
andb
iret
rcll
mov
and
jns
or
jp
mov
inc
xchg
xchg
ljmp
lods
inc
cmp
scas
arpl
pop
sti
aad
icebp
mov
adc
xor
and
push
mul
push
add
gs
xchg
mov
adc
insb
imul
ja
cmp
pop
insl
pop
jmp
dec
pop
sub
xor
sti
sarb
inc
fsubrl
mov
decb
bound
jne
cmc
loope
add
int
jl
addr16
xchg
sbb
and
inc
iret
pushl
in
andl
cli
out
jmp
fistps
push
mov
dec
add
ds
fs
adc
lahf
lcall
xchg
inc
rolb
loope
sub
movb
mov
and
or
aam
popa
xchg
test
mov
pop
imul
popa
hlt
xor
sti
sti
cmp
call
test
pusha
mov
mov
and
xchg
ja
lcall
or
into
fmull
rcrb
cmp
pop
ja
adc
adc
or
lea
pop
imulb
add
loope
push
out
das
js
sub
sub
or
call
insb
movsl
mov
sub
mov
mov
lock
pop
dec
je
shrb
jo
cmp
mov
aad
aaa
rorl
cwtl
jecxz
mov
cmp
fiadds
cltd
lret
lds
add
ja
data16
pushf
mov
movsl
add
inc
fdivrl
int
negb
jg
fs
imul
cmc
xlat
sub
gs
nop
push
mov
mov
out
iret
lea
cli
arpl
cmpsl
getsec
outsb
mov
fs
mov
ret
cld
mov
movsl
dec
repz
sbb
mov
addw
jne
and
vpmacswd
mov
ret
mov
fdivrs
mov
fsubl
fstp
je
inc
testl
loope
mov
mov
fldl
inc
jecxz
cmc
fsubr
mov
pop
hlt
push
jae
cmpl
cmc
push
and
sub
pushf
out
sahf
stc
cmp
je
sub
xor
xor
dec
mov
adc
sbb
mov
into
jno
mov
pop
pop
aam
jnp
cmpb
or
cli
stos
ds
pop
arpl
jns
and
js
lea
stc
movl
imul
js
faddp
jmp
in
and
or
push
xor
sbb
cwtl
lods
mov
call
and
mov
and
shll
cli
shl
sahf
fisttps
dec
sub
dec
cmp
shlb
jno
jecxz
pop
push
push
xchg
cmc
int
sub
loop
test
cli
inc
xchg
sub
fdivrs
rclb
pop
mov
popf
aaa
sub
out
jg
imul
push
lds
push
std
inc
sub
jns
sbb
sub
jo
mov
or
fwait
orl
stc
dec
in
insl
inc
lcall
adc
rcl
negl
cwtl
jne
shlb
ja
mov
test
inc
fucom
sbb
rcl
dec
iret
into
sub
pop
xor
cmp
mov
dec
call
xchg
sub
mov
push
push
inc
test
xchg
mov
jo
lds
dec
xchg
mov
push
orb
scas
ss
mov
movsl
js
push
sbb
jecxz
jg
pop
push
fiaddl
nop
sbb
ret
pop
xchg
adc
test
lods
mov
stos
cli
mov
stos
movsb
fstpt
add
mov
daa
imul
jecxz
cmp
jb
popa
or
test
bound
fistl
data16
xchg
cltd
stc
mov
repz
adc
xor
popf
push
add
sub
out
jl
inc
xchg
mov
arpl
jns
dec
lock
cmc
add
xlat
les
xchg
xlat
rorb
testb
mov
cmc
pop
pop
cmp
jmp
xchg
cmpsb
cmp
xchg
bound
and
ret
into
push
add
ds
mov
mov
pop
sub
cli
add
cmp
inc
mov
rclb
arpl
int
inc
fimull
stos
out
fsubl
or
std
add
loop
les
xchg
mov
shl
mov
loop
sbb
xor
notl
and
mov
sbb
add
hlt
sub
and
mov
pop
mov
mov
inc
shrl
xchg
sub
cmp
scas
dec
mov
push
xchg
jl
mov
aaa
xchg
push
nop
pop
mov
daa
dec
pop
pop
jne
in
das
push
dec
xor
es
into
fidivs
fldl
xchg
mov
dec
inc
in
xchg
xor
leave
dec
in
ss
outsb
dec
push
jmp
int
movsb
pop
fcompl
loope
test
sub
loop
or
push
popa
cltd
and
jbe
add
dec
dec
fsubl
adc
pop
dec
add
push
les
imul
pop
decl
mov
sub
adc
ss
xor
ds
leave
pop
push
push
das
lret
adcb
jle
push
or
mov
push
dec
cli
xchg
jg
push
or
dec
in
adc
xchg
inc
lcall
into
call
loop
icebp
cld
mov
xor
ja
add
fidivs
mov
test
out
mov
mov
add
mov
pushf
shl
jle
ds
in
xchg
dec
mov
dec
and
cmpsb
cmp
hlt
add
shrl
sub
je
mov
fistl
lcall
mov
jne
cs
out
fnstenv
leave
push
rcrl
push
inc
inc
cltd
lds
cli
fsubrs
mov
cli
call
cmp
into
push
jge
xchg
repz
or
les
mov
enter
mov
cmp
nop
xchg
push
es
jle
leave
pusha
adc
outsl
push
fists
adcb
and
insl
add
sbb
jnp
and
xchg
ror
mov
sbb
cmpb
jne
addr16
std
hlt
mov
lock
test
icebp
sti
xchg
in
xor
mov
push
push
inc
loopne
shlb
and
or
or
cmp
jl
mov
jge
sbb
sub
jp
subb
jge
cwtl
scas
rorl
stos
xor
popa
add
jo
mov
pop
mov
outsb
ds
sbb
jne
cwtl
loopne
lret
xchg
lahf
jmp
xchg
sbb
sbb
pop
jge
scas
jp
shrl
ja
mov
arpl
jnp
mov
cltd
out
mov
lock
lahf
sahf
xor
cltd
repnz
jb
push
es
test
lret
push
push
jmp
or
flds
sub
and
notl
mov
jae
xchg
xorl
sbbb
sub
repnz
testb
sub
pop
gs
push
sahf
fwait
out
xchg
mov
or
call
gs
scas
inc
add
int
pop
fistpl
mov
insl
xlat
outsb
mov
shl
repz
cmpsb
cmp
inc
mov
sbbb
repz
cmp
insl
je
pop
notb
mov
adc
or
inc
or
lds
mov
es
jecxz
sti
inc
cmpsb
cmp
push
xorl
push
lds
mulb
lock
gs
inc
shrb
fcmove
or
insb
add
ljmp
cs
in
and
jl
ret
jb
repnz
adc
rcrl
mov
int
into
mov
mov
and
or
stc
sub
pop
and
ret
movsb
cmp
ret
xchg
sub
das
or
pop
enter
ret
repz
inc
pop
enter
ret
repz
pop
enter
ret
sub
icebp
and
xchg
sub
xor
jle
dec
lods
and
lods
push
iret
mov
std
jne
jmp
and
push
rcll
jne
lahf
mov
shrb
outsl
lds
jns
inc
mov
repz
jno
jecxz
je
nop
add
inc
xor
into
mov
aad
cmp
push
in
sbb
pop
jp
lods
inc
cmp
lret
dec
ds
adc
push
fcmovnbe
stos
inc
push
dec
call
filds
je
add
adcl
je
xchg
sahf
xor
pop
pop
dec
jecxz
adc
leave
dec
mov
jb
adc
push
jb
aad
cmp
lea
inc
fidivs
cmc
aaa
into
daa
scas
pop
repz
add
push
jp
iret
data16
in
test
xor
popa
add
xor
adc
pop
xor
push
out
xor
add
jo
xchg
sub
jecxz
movlps
aas
js
mov
cmp
mov
fwait
jp
call
adc
jmp
daa
sbb
push
mov
or
mov
sbb
dec
in
push
dec
in
mov
dec
fistps
rclb
and
in
ljmp
jo
add
fsubr
xchg
sub
orb
int3
fsub
jle
pop
test
nop
push
cld
xchg
inc
mov
adc
add
xchg
pop
cmp
aaa
mov
insb
xchg
mov
je
lahf
test
fidivs
jnp
fwait
test
jp
inc
stos
hlt
cld
xchg
sub
mov
movsb
cmp
add
xchg
shlb
test
push
cs
lcall
jae
loope
cmp
addb
gs
inc
sbb
push
outsb
add
int3
lock
movsl
and
test
cmc
dec
loope
mov
lds
loop
ja
push
xchg
fsub
mov
adc
add
push
mov
insl
mov
jne
sti
cmpsl
sbb
imul
lahf
cmc
xchg
adcb
cmp
imul
rcl
aam
jmp
pusha
testl
xchg
or
jecxz
push
mov
aaa
gs
gs
cli
dec
loop
cwtl
pushf
xor
push
popa
clc
test
push
popf
sbb
adc
push
adc
mov
je
xor
jmp
repnz
adc
lahf
mov
fcoms
aam
sbb
xchg
dec
push
cltd
xor
movsb
mov
fstps
shlb
add
mov
clc
xchg
and
lret
and
push
push
shrl
into
cld
xchg
lcall
xchg
push
push
popa
clc
xchg
aam
add
sbb
dec
dec
jns
adc
xchg
push
lahf
out
xchg
sbb
mov
push
sti
xchg
or
cmc
mov
ds
dec
pop
hlt
jp
es
ficoml
inc
faddl
lds
dec
loopne
stos
xlat
outsb
fistl
xor
inc
cld
cmc
mov
loopne
insl
adc
push
xchg
sub
add
imul
in
int3
arpl
adc
inc
cli
dec
fildll
fldl
hlt
cmp
sub
gs
dec
repnz
cmc
and
xchg
sub
cld
add
push
jmp
lock
push
adc
js
push
xor
test
inc
cmpsb
mov
call
sbb
cmpb
pushf
mov
pop
out
cmc
negl
and
jg
dec
dec
jns
jle
insl
add
popf
push
in
lret
ljmp
clc
popl
add
jb
and
xchg
xchg
xchg
sub
mov
and
sbb
scas
cmp
jo
popl
sbb
scas
into
gs
inc
pop
adc
sti
xchg
sub
push
in
popa
dec
cltd
xor
mov
rcl
ds
repz
fisubs
pop
lock
inc
ja
je
outsl
push
test
lret
add
push
out
adc
push
ljmp
gs
xchg
mov
fyl2xp1
nop
nopl
jle
jo
dec
mov
ret
int3
jecxz
xchg
test
push
adc
dec
sub
pop
imul
pop
ljmp
idivb
aaa
into
dec
pop
out
xchg
lods
mov
pop
in
jmp
mov
inc
dec
in
jg
insl
xchg
mov
add
mov
sti
jb
dec
loop
mov
push
xor
jmp
out
mov
daa
mov
fs
sbbb
adc
ljmp
cmp
sub
cmc
mov
ljmp
push
cld
aaa
inc
mov
pop
cs
dec
jl
nop
daa
nop
xor
cmp
or
push
and
xchg
sub
inc
cmp
pop
fidivrl
imul
flds
push
mov
idivb
dec
xchg
lock
pop
scas
ret
movsb
addr16
mov
js
int3
mov
xchg
jmp
sarb
inc
lods
aad
push
add
push
out
mov
cld
sub
add
mov
incb
adc
std
sbb
clc
and
dec
sbb
ds
fisttpl
jle
sbb
movsb
cmp
mov
jecxz
and
xor
daa
pmulhuw
mov
aaa
sbb
popf
rcrl
pop
arpl
push
cltd
aam
loopne
jl
ja
ljmp
aam
js
adc
daa
mov
cmp
push
xor
mov
dec
jl
mov
cmp
and
mov
pop
faddl
decl
rcrb
insb
mov
cmpsl
cmc
xor
rep
mov
push
mov
addl
and
call
pop
push
adc
pop
xor
int
loopne
fidivrl
xchg
add
inc
xchg
or
xchg
hlt
cltd
sti
xor
mov
out
gs
jno
outsl
orb
xor
xchg
mov
rcrl
insl
lods
insb
xchg
cli
and
test
jns
leave
je
push
ficomps
xchg
lea
mov
loopne
pop
test
in
push
cmc
push
push
daa
mov
stos
imul
push
in
pop
lcall
push
bound
shlb
stos
inc
rcl
push
jbe
mov
mov
test
mov
imul
sbb
sahf
aas
into
inc
jg
sub
mov
push
jnp
es
push
mov
mov
dec
push
mov
cli
sbb
stos
sub
pushf
jl
xchg
mov
bound
out
pushf
push
stos
sbb
adc
pop
repz
lcall
push
jle
out
jbe
add
insb
lahf
inc
inc
ficompl
mov
jle
sub
xchg
rorl
adc
jnp
rcll
subb
idivb
mov
sbb
ljmp
jo
divb
lret
mov
mov
cld
ret
cmpl
pop
xchg
mov
adc
sbb
outsb
clc
inc
xor
std
xchg
ficoml
inc
push
ret
pop
lret
mov
push
incl
lret
pusha
mov
fisttpl
dec
mov
and
adc
inc
adc
pusha
fwait
push
fiadds
mov
lods
pop
addr16
out
xor
and
loopne
and
or
test
cld
aas
inc
add
xor
or
pop
ret
out
mov
fldl
cmp
mov
in
sub
lds
or
jmp
roll
mov
out
dec
in
sub
sub
stos
cmp
insb
ror
adc
inc
icebp
frstor
mov
sbb
add
loopne
lock
in
mov
and
out
add
adc
add
test
add
xchg
mov
in
dec
mov
xlat
push
aas
outsl
scas
stos
pop
aas
shll
orb
mov
and
mov
in
adc
push
jne
inc
sub
push
jg
xor
push
cmp
aas
adcb
orb
push
jp
inc
mov
xor
jno
subl
jl
pop
out
scas
pop
mov
addr16
pop
add
fnstsw
xchg
mov
xchg
mov
in
sbb
cli
xchg
repnz
xor
in
inc
add
out
dec
and
call
mov
fxtract
loopne
mov
or
push
sub
xor
arpl
inc
push
dec
and
dec
jp
and
dec
mov
or
stos
popa
push
fimull
int
pushf
xchg
dec
leave
pop
lret
imul
cmpsl
xor
es
repnz
aaa
shrb
adc
insl
out
jl
inc
cmp
jne
mov
test
dec
mov
pop
push
jne
cmp
loop
outsb
mov
inc
cmp
pop
adc
js
add
in
inc
popl
dec
xor
push
clc
and
push
cmpsl
js
lret
inc
xchg
aaa
dec
out
push
lds
mov
push
sub
popf
mov
xorl
and
insl
leave
ficoms
js
gs
mov
push
daa
hlt
mov
sub
mov
jno
jle
and
mov
bound
pop
std
and
das
not
dec
mov
mov
inc
iret
inc
cmpsl
cmp
icebp
lods
outsl
mov
testb
mov
inc
or
loopne
roll
in
fdivs
das
mov
rorl
andb
jne
dec
jecxz
xchg
or
and
popa
std
and
fs
and
dec
cmpsb
jp
push
dec
shl
aam
jmp
inc
mov
lock
dec
ret
inc
cmp
outsb
mov
inc
int
iret
fmull
sbb
inc
les
in
out
enter
shr
adc
fidivs
in
hlt
sbb
jno
movsb
xchg
xor
imul
outsb
lods
cmpsl
pop
or
cmp
addb
repz
cli
sub
iret
pop
iret
push
jno
ljmp
pop
fcoml
xchg
lea
sbb
out
jecxz
sub
loop
aaa
adc
mov
in
data16
sub
inc
fmuls
shrb
jle
lret
clc
xor
xchg
cwtl
sbb
jp
dec
or
xchg
cmp
movsl
push
mov
loopne
hlt
mov
or
mov
jns
cltd
pop
rcrl
push
mov
pop
hlt
jne
dec
ror
jle
sub
push
mov
and
inc
push
push
push
sub
lea
iret
push
add
mov
fnstenv
fadds
xchg
adc
jno
mov
pushf
test
or
mov
dec
out
or
std
sub
mov
fcompl
in
test
cmpb
or
pop
stos
cltd
cmp
or
pop
mov
push
imul
leave
inc
jnp
movsl
aaa
loop
enter
ljmp
es
in
test
lods
imul
mov
inc
adc
mov
lahf
xchg
mov
iret
jg
nop
mov
or
mov
pop
jo
lea
aaa
xlat
dec
nop
xchg
mov
pop
lods
xchg
xchg
sub
or
daa
popf
movsb
fisttpl
adc
jae
push
jmp
cmp
mov
loope
jns
iret
push
or
fiadds
mov
addl
jle
pop
dec
lods
rcll
rolb
sub
or
sarl
sub
movsb
jbe
dec
jmp
into
scas
icebp
mov
adc
cld
jo
ret
mov
dec
mov
stc
push
jno
stos
mov
cmp
jmp
mov
push
lret
ret
push
dec
rorl
inc
test
dec
sub
adcb
cmc
movsl
adc
xchg
icebp
aas
and
push
int
inc
enter
sub
push
aaa
mov
or
mov
adc
mov
out
lar
inc
xchg
orl
inc
add
jns
cwtl
mov
shll
divl
fucomi
sbb
movsb
sarb
xlat
icebp
das
loop
mov
push
mov
mov
ljmp
pop
mov
cli
and
imulb
aas
pop
mov
aam
xorl
cmc
push
test
mov
jb
pop
xchg
mov
sbbb
mov
in
ljmp
subb
in
inc
mov
divl
mov
ljmp
fwait
adc
xchg
jo
or
dec
mov
nop
rclb
ret
ja
cmc
in
cmp
aad
loop
ja
push
or
cmp
jl
std
repnz
out
imul
xchg
icebp
ret
fldenv
dec
int3
popa
sub
inc
lret
in
push
add
pop
icebp
sbb
ljmp
outsl
lods
jg
mov
cwtl
xchg
pop
insl
pop
xchg
jp
hlt
aas
adc
movsl
je
out
in
xor
mov
mov
hlt
xor
ret
out
loope
fistpll
push
inc
ficompl
or
jecxz
stos
adc
dec
dec
addb
inc
insl
mov
mov
sti
iret
inc
leave
inc
aas
shrl
enter
and
jns
mov
repz
mov
sahf
adc
lods
adc
test
gs
int3
in
and
mov
adcl
jmp
mov
xchg
dec
jae
pop
pushf
outsb
pop
rorb
xor
pop
sub
push
mov
or
repnz
xor
add
jecxz
test
mov
enter
cs
dec
shlb
repnz
mov
leave
pusha
or
xchg
outsb
out
xchg
xchg
rolb
jge,pt
ja
sarb
shlb
repz
dec
stos
gs
int
int
dec
sahf
xchg
cmp
in
mov
lret
sbbb
or
sbb
out
negb
mov
out
xchg
sbb
out
cmp
mov
out
aad
and
sbb
xchg
adc
adc
xor
adc
addl
jle
out
cmp
mov
fidivrl
cmp
cmc
adc
inc
xlat
xchg
aam
mov
add
mov
inc
and
daa
mov
cli
cs
aad
mov
addl
pop
push
push
push
dec
aam
dec
add
xor
fcoml
adc
mov
xor
pop
sti
or
icebp
mov
push
call
out
mov
jae
fcomps
adc
fmul
push
cmpsl
ds
mov
sub
inc
inc
push
int
int
scas
outsl
aaa
loopne
pusha
shll
xchg
out
mov
xchg
js
loope
ja
add
fs
fidivs
imul
shll
pop
rcll
push
inc
fmull
pop
lods
ja
and
pop
cmp
test
dec
cld
or
scas
scas
cmp
sub
inc
ret
inc
pop
leave
xor
cli
sub
xor
pushf
adc
fisubs
cld
inc
xlat
fwait
lahf
sub
or
inc
dec
push
in
mov
cmpsl
cmp
rcl
sbb
lods
cmc
and
scas
hlt
xor
lahf
icebp
cmp
fnstsw
les
nop
fsts
in
sbb
pop
hlt
call
scas
sub
cmp
lret
sbb
int
rorb
sarl
mov
je
xchg
xchg
and
mov
mov
int3
outsl
xor
ds
dec
xor
aaa
adc
push
in
mov
or
je
fdivl
inc
and
xor
repnz
je
mov
ret
jecxz
in
mov
outsb
adc
nop
jl
xchg
xchg
neg
xchg
jle
sbb
popf
fmull
mov
in
adc
orb
stos
lods
sti
jnp
iret
pop
addr16
icebp
lock
mov
pop
sbb
mov
out
loop
sub
out
add
pop
jle
out
aaa
scas
je
adc
push
xchg
notl
test
movsl
outsb
ja
arpl
pop
bound
sbb
dec
sbb
mov
dec
sbb
outsb
cwtl
xor
bound
rcr
xor
aam
ficoms
mov
mov
pop
adc
andl
test
sbb
dec
mov
pop
shll
rcrb
test
jnp
dec
rcrl
aaa
das
fisttpll
das
repnz
mov
out
sub
pop
pushf
xor
jno
mov
xchg
ret
cltd
lea
xchg
insb
out
in
int3
aas
clc
sub
in
cld
sarl
mov
int3
push
lahf
out
pop
mov
or
jo
fwait
cwtl
xorb
nop
ja
fs
and
push
in
xor
addr16
xorb
inc
ds
jns
fcomps
jge
fmulp
push
fstpl
jb
lret
fisttpl
push
xchg
mov
pop
adcl
lcall
cmpsl
mov
out
dec
mov
imul
ljmp
sub
sbb
gs
sti
and
inc
subb
or
and
sub
sbbl
cmp
sub
cmp
jns
movsb
inc
icebp
popf
xor
fs
cltd
inc
lret
sti
and
lods
into
adc
shrl
adc
adcl
into
lahf
inc
jge
addr16
daa
mov
xchg
cmp
xchg
cwtl
pop
cs
cmp
in
add
fisubs
push
mov
and
out
jecxz
mov
sub
dec
and
push
cmp
test
jbe
add
mov
lock
sub
scas
sbb
repz
sub
xlat
dec
or
test
movsl
fs
mov
mov
dec
or
jo
popf
push
add
movsl
pop
ja
in
popa
cltd
mov
ficoml
fldenv
sbb
inc
fidivrs
aad
daa
cmp
or
dec
dec
in
cmpl
mov
jmp
dec
mov
loop
xchg
mov
or
cmpl
or
mov
push
int
scas
adc
das
fildl
fisubs
sbb
test
stos
add
ja
in
icebp
arpl
fcoms
out
ljmp
arpl
sbb
push
mov
je
jl
scas
xchg
cmp
or
push
mov
dec
push
and
fwait
mov
xchg
sub
sbb
add
repnz
mov
data16
stc
sbb
jns
bound
dec
or
iret
cmp
pop
int
and
jo
adc
loop
enter
cmp
inc
mov
mov
fcompp
dec
fsubrl
xchg
in
or
sbb
ss
jae
shrl
fdivrs
insl
lcall
jno
test
mov
cmp
rorb
out
dec
loop
mov
ljmp
mov
sbb
lods
mov
cs
orb
aas
lods
hlt
or
jp
pop
rcrl
cmp
xchg
inc
fists
mov
cmpsl
and
bound
cmp
jae
test
pop
daa
insb
xchg
je
mov
jle
out
xor
arpl
pop
leave
pop
rclb
sahf
mov
clc
jb
into
cmp
lock
xchg
sahf
inc
addr16
jl
fs
cwtl
xchg
jp
sub
dec
xchg
lea
sub
push
rorl
sbb
pop
in
sub
mov
gs
test
incb
stos
popa
movsb
scas
mov
jp
add
fisttpl
popl
mov
lock
addr16
sub
addb
push
mov
and
inc
ljmp
pop
jo
rclb
lock
xor
push
mov
push
add
inc
inc
jge
gs
repz
imul
fbld
insb
cmp
filds
push
push
daa
into
jge,pt
pop
or
lret
cmp
icebp
mov
aam
cwtl
mov
adc
mov
fiadds
es
cmpsb
int
add
xchg
xchg
ret
adc
or
shl
daa
mov
ljmp
mov
imul
and
mov
dec
out
mov
les
pop
sbb
push
sub
popa
dec
dec
mov
push
inc
mov
xor
sahf
dec
jle
hlt
dec
pop
xchg
popa
pop
jns
mov
cmc
fimull
jle
sub
jno
out
insb
cmpsl
pop
jno
mov
aam
mov
xor
pop
fwait
xchg
jne
mov
jl
push
ret
pop
inc
sbb
sub
or
and
fdivl
leave
xchg
es
push
rorl
fwait
insl
aad
pop
pop
push
data16
inc
sub
cmp
pop
mov
xchg
rolb
fsubrl
jmp
adc
int3
neg
repz
mov
mov
xlat
das
adc
push
dec
xchg
jno
push
clc
inc
outsb
cmp
and
mov
push
notb
add
hlt
jl
fs
mov
int
push
jae
add
std
xchg
cmpl
and
pusha
imul
es
mov
out
out
push
ljmp
pop
out
pushf
jmp
pop
aam
fnsave
xchg
imul
mov
pushf
mov
jle
fbstp
imul
adc
andb
les
lock
mov
jno
pop
test
in
mov
fbld
mov
sbb
xor
loop
lret
mov
mov
test
xor
xchg
out
sub
adc
jmp
fdivrs
mov
ljmp
cltd
in
aaa
or
push
aad
out
pop
dec
les
icebp
les
xchg
mov
leave
pusha
and
js
jno
incl
mov
jmp
jge
repz
mov
fs
or
mov
adc
and
enter
sbb
xchg
movsl
cmp
push
xchg
scas
mov
gs
xchg
xor
icebp
ljmp
out
and
les
ss
iret
sbb
and
and
cwtl
jne
xor
push
sbb
mov
int
mov
push
jmp
mov
lret
mov
push
mov
add
and
sub
testl
cmp
bound
filds
push
mov
lea
or
test
or
mov
into
and
xchg
mov
inc
jmp
or
xchg
xchg
jl
in
loopne
ret
lgdtl
adc
mov
clc
inc
ret
int3
arpl
sub
loopne
cld
xor
fidivrl
int
in
aad
xor
lahf
mov
adc
ret
sub
add
and
fstl
and
jnp
ja
ljmp
mov
add
push
mov
or
pop
imull
lods
jne
jmp
out
sbb
cmp
add
adc
test
out
and
add
sbbl
fwait
in
cmp
mov
jle
adc
leave
ds
xchg
pop
test
sub
call
or
pop
pushf
loop
jge
setno
mov
push
inc
scas
push
mov
in
arpl
and
xchg
jnp
js
add
lds
shlb
test
lret
push
mov
lock
mov
ret
mov
pop
push
mov
pop
cmp
movsl
push
dec
jmp
fbstp
jo
mov
lock
aaa
bound
cmpsb
mov
stc
xor
gs
fcoms
mov
push
mov
mov
cltd
aad
in
inc
movsl
rcrl
in
mov
in
jmp
insb
sarb
stc
sub
lds
push
mov
ror
sbb
and
test
mov
stc
imul
pop
dec
pop
add
add
fwait
shrb
mov
les
hlt
ficomps
inc
stos
test
mov
shll
fnstsw
inc
call
loopne
pop
fxtract
mov
iret
shlb
pop
loopne
pop
mov
repz
popa
xlat
inc
sbb
cmp
mov
ret
mov
inc
sbb
inc
in
das
ds
jl
pusha
scas
imul
cmp
adc
push
mov
cmpb
rcrl
lcall
adc
pop
inc
enter
xchg
fcomps
fld
stc
sbb
mov
in
add
add
loopne
inc
ret
ss
int
dec
test
mov
xor
fistl
sarb
outsb
add
in
clc
mov
pop
sti
insl
loop
movsb
std
cmp
cmpsl
imul
push
xor
fdivl
cmp
add
fs
cmp
push
outsl
mov
pop
lds
jp
sti
dec
rol
ficompl
lods
mov
mov
das
mov
sahf
xor
daa
mov
fs
pop
addb
mov
or
fistl
jnp
fbld
icebp
aaa
rclb
enter
ss
sub
sarb
sub
testb
std
pop
sahf
mov
cld
jge
mov
loopne
add
jbe
pop
test
mov
gs
fbstp
xchg
xchg
dec
fld
pop
or
mov
sub
jnp
ret
repz
cltd
mov
pop
lock
shll
mov
addr16
cltd
and
aad
mov
pop
repz
or
jp
stc
pusha
shrb
sbb
xchg
insl
mov
lahf
push
aaa
rcl
repnz
sub
mov
pop
in
fsts
ss
hlt
cmpsl
or
jl
fs
aaa
popf
jo
iret
pop
insb
add
lods
mov
push
orb
jno
ds
xchg
mov
repz
out
cld
xlat
rolb
out
aam
and
push
sahf
test
imul
lock
testl
inc
cmc
stc
arpl
inc
jns
jns
and
int
rcl
push
adc
jnp
sub
xlat
pushf
push
jmp
sub
jo
and
mov
aam
inc
fxch
cmc
lods
andl
pusha
notl
or
mov
ret
repz
ds
cmp
rcrl
nop
loop
scas
push
jne
or
enter
cmpsb
jo
fsubrs
mov
jmp
in
arpl
xor
std
sbb
cmp
popa
loop
loope
adc
xchg
push
flds
incl
push
into
in
std
dec
mov
fisubrs
lahf
jbe
mov
mov
xchg
cmp
jge
jg
mov
adc
mov
xchg
cli
or
pop
or
call
inc
pop
fldenv
imul
mov
lahf
movsl
adc
fs
jae
andb
pop
loope
cmpsl
jp
andl
xchg
scas
inc
fwait
inc
sub
popa
mov
xchg
mov
insb
cli
xor
mov
xchg
imul
mov
lds
dec
bswap
inc
notb
xchg
std
into
mov
loop
pop
int
cs
outsl
int3
mov
popf
into
inc
js
addl
push
ffreep
cmpsl
pusha
ja
xchg
fwait
jmp
test
shr
lahf
ss
repz
xor
and
fldl
decb
xchg
jb
jo
inc
jge
mov
rcll
inc
push
fs
and
or
jp
mov
fsubrs
addr16
mov
das
mov
test
jb
in
cltd
movsb
push
popl
frstor
adc
sub
mov
mov
jns
inc
call
std
inc
cmpsb
xor
cmc
jne
mov
add
data16
add
cld
and
fdivl
push
push
add
jbe
pop
jae
jmp
in
fwait
push
add
lods
arpl
jno
mov
pop
mov
clc
pop
rcr
in
mov
sub
or
inc
neg
push
adc
cmpsl
loopne
adc
outsb
insl
or
mov
jb
jmp
mov
push
les
xor
jns
mov
add
nop
in
insb
sbb
xlat
scas
rorl
dec
mov
hlt
xor
jo
fisttpl
inc
testb
stos
push
push
loopne
clc
sbb
pop
sbb
push
dec
mov
movsb
mov
rol
dec
and
pop
test
lods
push
mov
lods
lret
aaa
lret
mov
inc
and
lahf
ss
js
mov
ss
loope
lods
sti
xchg
pop
push
or
mul
jle
aam
das
push
jbe
subl
shlb
or
jb
sbb
insl
add
das
mov
mov
inc
outsb
add
sti
aad
ffreep
pushf
outsl
push
push
push
popa
clc
and
dec
fucomip
rcll
add
inc
mov
jecxz
shrl
ja
mov
mov
std
cmc
mov
clc
int3
arpl
mov
jb
mov
frstor
jl
mov
jp
push
insb
xor
jbe
xor
movsb
stc
or
div
dec
sub
jl
jg
cmp
sbb
bound
xchg
inc
cmpsl
xorb
lahf
shrb
icebp
add
mov
xor
push
add
test
or
sahf
fldz
push
fbstp
outsb
in
push
ss
sub
vxorps
dec
in
hlt
cmc
pop
cld
lcall
ja
outsl
in
aad
cmp
enter
dec
in
jp
fidivs
lcall
clc
sbb
leave
push
ja
mov
cmp
jno
inc
sub
xor
addl
shrb
fs
pop
add
stos
push
mov
mov
sti
popa
mov
or
xchg
lods
xor
xlat
or
in
cmpsl
xlat
jge
ljmp
movsb
pop
orb
cmpsl
sub
nop
sahf
and
push
roll
leave
jo
dec
adc
mov
mov
test
or
and
insb
orl
and
mov
fistps
daa
aam
insb
cmc
add
pop
mov
inc
movsl
dec
adc
pop
fstps
mov
or
adc
jnp
mov
fnstenv
and
xor
fcmovnu
cwtl
inc
ja
xchg
cmp
gs
cmc
or
adc
sti
pop
mov
pop
aaa
lods
dec
adc
pop
xlat
cwtl
inc
std
ljmp
jg
mov
stos
xor
add
test
gs
adcb
in
aad
jmp
push
jge
mov
lahf
pop
filds
or
push
stc
xchg
repz
lock
sbb
pop
xchg
scas
push
stc
push
ret
arpl
nop
xor
pusha
sarb
jae
jmp
aas
mov
inc
ret
int3
nop
jno
dec
adc
push
mov
mov
call
gs
pushf
sbb
dec
jg
popa
sahf
int3
xchg
inc
js
je
xchg
mov
inc
push
clc
jle,pn
icebp
jecxz
ret
mov
imull
lock
dec
adc
call
mov
xor
lea
mov
pop
pop
mov
xchg
sub
repnz
pop
outsl
out
rcll
jecxz
or
test
sarb
mov
mov
fcom
cmp
fsubrl
ds
xor
sub
xor
adc
arpl
aam
lds
in
inc
xchg
mov
data16
loope
jp
mov
stos
fs
xchg
mov
out
int3
push
lcall
or
pop
divl
jb
pusha
pop
sub
add
sub
sbb
jae
rolb
fistps
or
mov
movsb
and
lods
insb
lret
mov
or
pop
or
loopne
jbe
imul
ja
mov
fcomps
dec
out
or
pop
jbe
sbb
inc
fistpll
stos
ret
popl
fucomp
insl
or
jns
pop
call
adc
and
jne
aas
dec
pop
lea
mov
xchg
shl
gs
out
mov
jo
mov
mov
ljmp
mov
fwait
stos
aad
mov
fbld
fwait
jne
pop
imul
addr16
test
adc
and
or
rcll
gs
xchg
rcll
pop
mov
out
sbb
inc
and
push
imul
pop
arpl
xchg
pop
pop
stc
pop
inc
mov
sbb
inc
and
push
in
lds
xchg
xchg
aam
stc
pop
inc
or
outsl
and
or
jne
mov
jno
loopne
sub
pop
stc
pop
cmp
call
dec
test
mov
fdivrl
push
add
into
add
sub
mov
cmpsl
or
test
lahf
jno
mov
mov
push
jne
pop
fwait
xchg
sub
or
orl
adc
jecxz
adc
inc
mov
lahf
mov
aad
push
roll
or
insl
mov
push
jne
popf
sub
dec
or
aaa
nop
inc
add
pop
xor
push
xor
jmp
adc
stos
cmc
ljmp
push
mov
cmpsb
or
mov
and
js
imul
sub
insl
aam
xchg
inc
add
pop
xor
lea
call
out
mov
cltd
mov
test
pop
add
cmpsl
push
mov
in
dec
jo
push
std
ja
mov
sub
jno
lods
xor
push
cli
jno
lds
out
jbe
cmpsb
inc
or
and
cmpsb
cs
jnp
lret
mov
mov
mov
data16
cmp
popf
inc
pop
cs
push
in
pop
push
push
idivb
jnp
cmp
jmp
stc
pop
push
aaa
test
mov
add
std
data16
sub
in
inc
mov
stos
mov
push
call
sti
jge
js
mov
imul
mov
pop
push
xor
push
jo
sbb
push
fs
data16
test
cmpsb
mov
faddl
pop
push
mov
xchg
sbb
outsb
push
jl
sbb
popa
in
test
cmpsb
dec
sbb
sbb
mov
or
ret
push
sar
popa
pop
xchg
cld
dec
lods
das
inc
jmp
sarb
movsb
jb
pop
dec
orb
sarb
pop
jbe
adc
movsb
daa
int
mov
imul
push
sbb
cltd
inc
test
jb
cmpsb
dec
adc
mov
pop
leave
add
out
orb
sarl
and
mov
stos
out
cltd
leave
mov
inc
int
pop
push
xchg
jp
les
outsl
out
cmp
jg
imul
dec
jns
push
testl
cmp
sub
outsl
and
xor
mov
pusha
jne
test
jp
push
pop
js
jmp
sub
sbb
jmp
mov
fdivp
test
out
fcomi
call
stos
xchg
rclb
pop
jns
mov
fistpll
std
pop
dec
testl
lea
fsubrs
icebp
push
sub
repz
pushf
cmp
dec
cli
dec
push
xor
lea
adc
xchg
jb
dec
pop
aad
or
mov
fdivrl
pop
cwtl
cmp
je
push
out
or
mov
stos
test
gs
mov
mov
outsb
rcr
jp
jbe
nop
test
or
mov
call
cmc
cltd
ds
or
sub
cmp
inc
icebp
cwtl
cmp
push
sub
test
int
loopne
xchg
inc
scas
add
mov
fdivrs
pop
loope
pop
out
cltd
cmp
xor
leave
shrl
add
add
inc
adc
xchg
cmpsb
pushf
xor
mov
xor
dec
loop
xor
mov
mov
pop
addb
cwtl
aas
into
xchg
cmp
jne
in
jne
imul
xchg
lret
jns
and
inc
sarb
xchg
mov
cltd
mul
sahf
inc
add
inc
or
lret
or
push
jmp
xorl
dec
pushf
ret
xchg
adcb
mov
scas
sub
adcl
daa
enter
repz
shll
mov
jo
pusha
dec
clc
sarb
popf
jbe
add
fiadds
xchg
lret
xchg
push
aad
sbb
and
mov
add
mov
pop
adc
push
loop
push
std
stc
testb
loop
test
xor
add
xlat
mov
mov
mov
loopne
pop
add
stos
xor
xchg
repz
out
mov
cmc
mov
pop
psubusw
stos
gs
push
std
mov
sub
or
addb
xchg
pushf
mov
cmc
pop
add
push
pushf
aas
xor
into
fisubl
mov
cmpsl
jno
mov
fisttpll
out
and
cmp
cmpb
roll
xor
push
and
pusha
mov
jl
mov
xchg
cmp
mov
mov
xlat
cmp
mov
jo
pop
dec
or
imul
fsubrs
insl
add
popf
ds
cmp
call
fldl
dec
or
pushf
mov
dec
movsb
repnz
popa
ss
stos
cmpl
mov
and
pusha
mov
sub
jno
adc
test
dec
aam
fisubrs
mov
add
sbbb
int
fists
pop
jno
sbb
sbbl
ret
stos
adcl
mov
popa
jp
dec
loope
fucomi
jg
lods
xor
pop
clc
pop
xchg
xor
sub
rorb
xchg
mov
xlat
lea
out
jbe
mov
test
ret
loopne
sbb
mov
push
push
std
jle
inc
or
insl
jne
test
xchg
mov
jg
insl
mov
push
mov
lods
ss
pushf
pusha
fldl
repz
hlt
fs
cmp
stos
xchg
stc
pop
fcomp
push
push
fiaddl
push
dec
add
int
xchg
inc
adc
cld
xchg
loope
dec
cmp
sahf
cmp
and
cltd
push
ja
jl
lods
sub
or
xor
fdivrs
addr16
sub
fdivs
repz
pop
div
mov
orb
lret
sbb
test
xor
jno
cmpsl
je
xor
imul
mov
mov
aaa
pop
adcb
inc
adc
cmp
fwait
mov
pop
shl
shr
nop
inc
movsb
clc
sub
mov
cmpsb
mov
mov
cmpsl
iret
mov
mov
mov
xor
jg
iret
lret
mov
out
pop
push
icebp
mov
test
sti
ffree
mov
out
push
xchg
test
fiadds
in
jno
icebp
pop
dec
arpl
negb
icebp
pop
dec
push
cli
gs
inc
arpl
fbld
scas
out
fistl
test
pop
add
mov
pop
enter
mov
mov
xchg
jge
pop
cld
sub
ss
xchg
or
loopne
mov
in
popa
repnz
mulb
nop
inc
aad
pop
stc
sbb
mov
iret
inc
add
sbb
inc
lcall
cmpsl
mov
xor
movsb
outsb
enter
lds
xlat
in
jecxz
add
xchg
mov
leave
mov
cmpsb
das
scas
stos
pop
test
divl
mov
vphaddbd
and
stos
inc
jo
xchg
sub
xchg
jl
push
adc
lock
add
jl
dec
adc
jo
push
out
jge
mov
stc
push
into
xor
inc
adc
insb
aam
add
enter
mov
push
rorl
jl
xor
sub
inc
jo
sub
fnsave
jb
pop
cmp
mov
sub
ret
or
popl
dec
cmp
mov
adc
subl
and
push
out
inc
pextrw
mov
sbb
sbb
push
icebp
icebp
data16
mov
jo
push
mov
lods
sub
mov
out
push
outsl
popa
dec
loop
mov
xchg
cmp
test
jae
xor
lea
or
in
mov
pop
clc
mov
cmp
pop
mov
push
jge
jg
icebp
mov
in
cmpsb
sbb
mov
cltd
pop
mov
pop
and
push
add
rcll
rclb
mov
sub
sbb
dec
mov
mov
push
add
roll
outsl
fbld
push
jbe
push
stos
mov
mov
and
clc
sti
outsb
fnstcw
loop
pop
xorb
jmp
mov
movsb
outsl
ljmp
dec
or
leave
fidivs
mov
pop
sbb
inc
mov
fcmovnbe
pop
or
mov
mov
cmc
mov
scas
or
test
jecxz
sbb
sbb
out
imul
cmpsl
cmp
and
xor
loopne
movsb
mov
mov
mov
ficomps
cmc
xchg
ret
enter
add
scas
shrb
cmp
mov
clc
cs
scas
out
mov
mov
inc
pop
pop
stc
mov
arpl
aam
jbe
dec
inc
or
shrb
cmpb
dec
or
add
das
popa
filds
andb
shll
jno
add
mov
sarl
movsl
mov
or
mov
idiv
gs
test
mov
in
jno
sbb
enter
leave
pop
loopne
mov
mov
cltd
fcoml
scas
push
pop
cli
dec
jae
test
clc
jns
sbb
jecxz
mov
scas
inc
fidivrl
adc
pop
add
loopne
mov
sbb
pop
push
aam
mov
adc
js
iret
xchg
push
insl
cmp
add
pop
loopne
insl
in
push
cld
imul
sahf
aad
sbb
mov
adc
cmp
and
mov
loop
sub
xchg
add
arpl
dec
adc
jle
test
insl
jo
iret
add
push
add
stos
adc
data16
mov
dec
adc
cmp
cmp
sub
pop
inc
pop
add
movsb
daa
sbb
cwtl
inc
pusha
js
cmp
and
mov
pop
add
aas
enter
xchg
cmp
cmp
or
hlt
pop
fwait
pop
cltd
inc
dec
iret
adc
gs
les
push
xchg
cmp
adc
iret
cmp
push
add
and
mov
pop
std
das
aam
pop
gs
lea
jnp
repnz
cmpsl
xor
stos
pop
cli
ja
jne
das
cmp
test
jl
dec
int
clc
bound
jl
xchg
jns
push
and
insl
or
xor
jp
add
pop
aaa
cltd
ss
mov
and
add
fnstenv
call
and
sahf
inc
xchg
cwtl
inc
or
les
call
lea
jnp
fcoms
fsubrs
or
lds
pop
testl
xor
movsb
out
roll
aaa
in
rolb
lock
gs
add
aas
xchg
dec
pop
xchg
cs
pusha
push
mov
mov
js
ret
js
rorl
jmp
jbe
test
fmull
fldenv
ljmp
push
aas
lahf
xchg
cmp
and
fstl
push
lds
stc
adc
sar
push
add
out
popf
lahf
rolb
mov
lcall
and
loope
jb
mov
ret
xchg
fucompp
je
or
jl
adc
push
sub
dec
adc
cmc
ja
xlat
mov
mov
jmp
orl
inc
push
sbb
out
jo
pushf
mov
insl
loop
dec
ds
rcrb
dec
push
repz
inc
aam
stc
pop
add
pop
les
mov
ret
stos
lds
mov
adcl
jae
add
mov
pop
inc
adc
push
sbb
mov
push
add
mov
scas
adc
stos
int3
flds
xchg
mov
icebp
pop
fcompl
inc
adc
or
lds
mov
sub
pop
push
jge
pop
test
inc
xchg
ja
lahf
push
mov
mov
movsl
mov
jle
fdiv
popa
mov
call
stos
mov
fadds
sbb
sub
jb
xlat
ja
push
test
rcll
test
std
pop
cli
jp
inc
cld
jecxz
or
push
adc
addr16
clc
clc
xchg
inc
push
jb
scas
push
daa
fdivrs
mov
xchg
scas
mov
popa
icebp
add
push
lods
pop
dec
or
ss
cwtl
jnp
test
cli
inc
cmc
mov
adc
iret
in
push
inc
filds
push
movsl
sbb
dec
xchg
xlat
insb
testb
fiadds
xchg
jns
rorb
aam
push
pushf
inc
push
jle
add
shlb
rorl
aam
out
in
xor
sub
jb
lods
mov
mov
mov
inc
inc
fdivs
jbe
inc
bound
xor
xor
out
jb
mov
mov
dec
adc
movsl
pusha
sti
mov
dec
ja
sub
lods
std
popa
push
gs
jl
jno
fisubl
imul
jmp
int
cmc
xor
xchg
inc
inc
adc
mov
js
mov
lcall
and
cltd
mov
mov
mov
jno
mov
movsl
rcrb
mov
scas
cmp
push
and
mov
add
xor
cltd
aaa
hlt
pop
test
sbb
jecxz
js
cmp
sbb
lods
dec
sub
jo
jg
inc
adc
gs
and
fistpll
ds
inc
sub
xlat
rolb
loop
repz
sti
movsl
pop
add
stos
mov
push
mov
icebp
pop
enter
xchg
pop
insl
icebp
mov
orb
icebp
pop
push
lds
inc
xor
cs
std
mov
or
mov
mov
add
adc
cltd
aaa
sbb
sahf
cmp
dec
pop
and
inc
out
imul
sbb
push
and
std
pop
ds
cwtl
jb
push
jmp
aam
sbb
sub
mov
dec
ds
mov
add
xchg
cmp
in
pusha
cmp
push
mov
mov
inc
pop
je
filds
movsl
sub
adc
push
daa
inc
sub
or
pusha
faddl
inc
bound
push
xchg
sbb
testl
jmp
ret
cmp
xor
or
jnp
pop
xchg
ds
push
leave
adc
mov
daa
dec
outsl
repnz
xor
and
mov
repz
and
xor
mov
jle
test
in
shr
jb
inc
mov
fwait
hlt
sbb
daa
loop
pop
inc
xor
lock
xchg
sub
adc
ss
jl
mov
inc
xor
and
jno
xor
hlt
sub
lret
nop
loop
sub
ret
sub
xchg
sbbl
cltd
in
pushf
and
popf
pushf
stos
xor
int3
aad
sub
adc
lods
iret
mov
push
pushf
cmp
jne
sub
test
int3
mov
cli
pop
mov
test
mov
fxam
outsl
dec
add
sbb
mov
shl
add
pop
pop
lcall
test
jnp
je
jb
insl
jmp
fcoms
and
or
movsb
daa
or
cmp
ret
cmp
inc
add
xor
mov
subb
cmc
pop
adc
dec
mov
sbb
mov
fiaddl
mov
repnz
leave
dec
loop
daa
sbbb
or
cmp
das
lcall
inc
dec
or
jb
adc
xchg
pushf
dec
inc
fidivrl
movsl
cmp
fwait
dec
adc
popa
filds
pop
xorb
mov
aam
xlat
roll
scas
pop
fildll
in
sbb
stos
xor
jge
fidivrs
insl
faddl
mov
ret
mov
sbb
mov
mov
iret
nop
fisubrs
scas
pusha
jne
leave
mov
lods
mov
outsl
add
mov
dec
push
add
movsl
fwait
mov
mov
out
mov
push
enter
in
adc
inc
das
scas
inc
add
orl
xor
mov
arpl
insl
adc
push
std
push
inc
outsl
out
push
test
push
dec
push
add
and
push
std
fs
outsl
mov
xlat
ja
mov
push
std
push
scas
das
dec
xchg
dec
jae
push
add
gs
scas
cmp
es
or
lret
jne
xor
daa
cmp
sbb
cmpsl
add
roll
mov
test
fistpll
arpl
ret
hlt
sbb
dec
daa
lret
mov
mov
leave
xchg
mov
pop
repnz
mov
jns
adc
aam
or
ret
mov
pop
imul
out
out
je
add
icebp
sub
cmp
jbe
test
pusha
sub
les
jb
orl
mov
enter
push
push
jecxz
cmp
stos
nop
daa
jae
push
lret
lret
mov
popa
repnz
xchg
fdivrl
clc
movsb
ss
push
pop
mov
xchg
inc
mov
movzwl
mov
nop
lods
pop
mov
imul
push
lods
jg
xchg
mov
flds
or
and
sbb
mov
dec
in
outsl
and
xor
xchg
shrl
xchg
pop
in
mov
lea
repnz
add
pop
out
cmpsl
mov
push
sbb
data16
arpl
push
jne
ficomps
sbb
dec
loop
bound
popf
and
sarl
stos
das
sub
jle
clc
pop
lret
popl
and
cmp
pop
ret
scas
xor
lea
jge
jnp
faddl
jecxz
xlat
jnp
repnz
rorb
fists
iret
mov
inc
or
mov
int
mov
cmpsl
sub
adc
or
push
mov
negb
or
enter
xchg
icebp
fimull
pop
repz
aad
leave
out
cmp
lods
cmp
mov
daa
push
cwtl
aaa
push
inc
inc
adc
inc
jae
repnz
loope
mov
icebp
pop
pop
shlb
pop
xchg
fisttpl
mull
rolb
push
fcmovnu
jns
lea
jbe
or
div
cmp
dec
stos
bound
fisubl
add
pop
mov
imul
mov
js
inc
sbb
fnstsw
push
sti
fisttpl
lret
xchg
push
fisttps
rcr
xchg
js
imul
adc
test
sub
cmp
xchg
ficoms
push
add
pop
mull
loope
gs
sbb
shlb
fsubp
mov
hlt
mov
xchg
inc
xor
xchg
cs
fwait
pop
negb
fs
fsubrl
rcll
jp
xor
cwtl
das
add
loop
cs
or
mov
mov
push
mov
icebp
dec
out
push
jmp
outsl
hlt
xchg
negl
in
das
pop
lods
out
filds
mov
adc
addr16
cmp
dec
xor
in
arpl
inc
repnz
mov
loope
and
jno
mulb
xchg
aas
push
fdivrl
js
mov
xchg
inc
filds
sbb
leave
lea
mov
inc
inc
lcall
jge
or
xchg
sub
mov
mov
cs
cmpsl
ja
mov
mov
mov
or
dec
adc
movsb
mov
dec
jp
xchg
cmp
push
sub
and
lds
mov
in
jo
cmp
xor
popa
call
ljmp
mov
jle
push
add
lods
sub
push
and
pop
cwtl
sahf
cmp
out
mov
xor
mov
cmpsb
push
leave
adcb
test
addr16
mov
xor
out
daa
sub
or
call
lods
or
es
and
and
and
loope,pn
mov
addb
push
int
popf
lahf
inc
dec
insb
and
insl
mov
std
dec
adcb
enter
in
out
jo
repz
ss
iret
xor
mov
push
insl
out
jmp
cmc
loope
pop
pop
jne
das
xchg
mov
jp
cli
mov
repz
mov
les
push
push
js
arpl
mov
adc
xchg
inc
mov
ret
sbb
push
lods
repnz
flds
inc
sub
shlb
inc
lods
cmp
push
mov
push
sti
inc
movsb
popa
in
fstps
ret
mov
add
sbb
icebp
popa
adc
lds
xchg
xchg
sub
dec
cwtl
in
jno
leave
mov
add
ret
dec
movaps
ss
out
add
jp
and
xlat
js
orl
movsl
aad
lahf
lds
jnp
aad
push
add
ret
pop
mov
shr
lods
sub
sti
bound
insl
call
sub
push
imul
cmpsb
xor
cmpsb
gs
and
pushf
sarb
call
testl
cmc
jns
dec
insl
sbb
or
add
xchg
sub
jge
and
ss
stc
incb
sahf
push
dec
add
div
sarl
fadds
and
out
aaa
jge
pop
cmp
lea
stos
sub
addr16
add
inc
sbb
jmp
mov
cmp
cmpsl
movsl
cmp
inc
or
add
mov
addr16
into
inc
sbb
xchg
xchg
sub
push
push
cmpb
lret
adc
jno
arpl
jbe
iret
pop
cli
xchg
jecxz
cmc
mov
roll
inc
enter
aad
subb
jno
fucom
jbe
sbb
mov
roll
fisttpl
int3
xor
lcall
cs
arpl
pop
clc
sub
jo
sbb
lea
ja
fists
inc
adc
mov
movsb
cmp
sbb
mov
lahf
mov
jbe
sub
data16
jge
lahf
inc
dec
outsb
insl
repz
fwait
lret
xchg
xor
mov
pop
jmp
fiadds
sub
ret
mov
and
ficoms
int3
stos
sub
xchg
push
rorl
ret
push
sarb
in
rcll
cmp
imul
lea
data16
es
add
cmpsb
cmp
lds
pop
sti
lret
ja
pop
lds
jne
push
lret
adcb
sub
insl
cmp
cmp
fdivrs
in
push
shlb
outsb
jecxz
les
jb
xor
pop
sti
sub
mov
push
mov
mov
leave
or
sbb
cmp
call
inc
push
jmp
repz
or
stc
cmpl
dec
ret
std
popf
mov
paddq
pop
add
or
adc
psllq
adc
inc
inc
lret
fs
xchg
xchg
insb
negb
loope
cmp
mov
mov
ret
push
sti
test
rorb
and
cmpsb
test
sub
scas
das
scas
fistpll
mov
sbb
dec
mov
aad
mov
jb
lahf
pop
mov
repnz
cmp
ja
mov
jecxz
cmp
aas
sbb
pop
push
daa
add
and
dec
fidivrl
cwtl
cmp
leave
and
adc
push
add
mov
jge
cmp
ja
xor
andb
inc
aad
jne
xchg
dec
push
enter
lret
and
mov
push
push
mov
jbe
mov
nop
inc
out
out
ds
or
or
dec
pop
repnz
mov
and
insl
inc
faddl
das
ljmp
jno
fwait
xchg
pop
add
ljmp
test
sbb
mov
cmp
sub
into
mov
scas
in
jo
jo
add
mov
push
mov
dec
lret
add
mov
cs
imul
not
outsb
sub
mov
mov
mov
lods
or
add
push
negl
dec
pusha
cmpsb
incl
add
ja
adc
dec
push
dec
push
jge
and
xlat
sub
adc
sbb
lcall
out
and
sti
mov
pop
je
mov
push
xchg
or
sahf
xor
jmp
cmp
dec
cld
in
push
fwait
cli
bound
les
mov
sub
cmp
xlat
mov
mov
sub
pop
inc
popa
jo
dec
xchg
mov
test
pop
add
mov
sti
fs
cmp
mov
mov
popa
add
pop
jp
mov
cmpsl
mov
adc
cmc
inc
fisubl
mov
clc
gs
test
ss
push
jns
popf
test
dec
adc
pop
add
push
push
lcall
test
mov
pop
dec
lret
jmp
add
ja
sahf
inc
pop
popa
push
push
fnstenv
adc
movsb
enter
mov
cmp
push
or
mov
sbbl
or
pop
lret
xor
lods
bound
call
mov
inc
out
fs
pop
clc
mov
pop
clc
mov
std
xchg
fistpll
jg
push
mov
mov
ror
sar
jno
rorl
loope
sbb
ret
xchg
mov
mov
mov
xchg
sbb
es
inc
mov
arpl
loope
jmp
fdivrl
flds
roll
inc
adc
mov
or
insl
fbstp
jle
icebp
or
in
popa
hlt
out
cli
lcall
inc
test
gs
pop
fistpll
in
adc
or
dec
fidivrs
call
pop
shlb
addr16
jg
loop
lret
mov
mov
inc
fidivrl
dec
push
inc
iret
mov
shrb
lds
test
mov
mov
jns
inc
pop
mov
xor
cmpsb
mov
jno
shl
lea
ret
clc
cmc
and
and
filds
xchg
repnz
in
dec
xchg
cmp
jne
clc
push
sub
ss
xchg
xchg
idivl
sub
sbb
sbb
mov
dec
mov
sub
sub
inc
xchg
enter
mov
push
mov
mov
test
je
loop
sbb
lcall
cmp
push
and
mov
popa
jmp
mov
das
fs
xchg
dec
mov
enter
filds
xchg
xlat
xor
pop
pop
add
xchg
test
pop
pop
dec
push
mov
adc
jnp
mov
outsb
fadds
push
pop
icebp
pop
dec
mov
xchg
lret
xchg
push
adc
xor
cltd
and
mov
lret
ret
jle
lods
dec
adc
shrl
mov
out
je
out
popa
mov
mov
ficomps
jl
nop
leave
xchg
push
pop
add
les
out
mov
imul
fimuls
repz
ret
stc
hlt
leave
lods
inc
sti
adc
lret
bound
lahf
ss
push
in
ret
repz
fdivl
adc
mov
xchg
inc
fistl
mov
aaa
into
aaa
or
in
mov
ss
fdivl
xchg
sub
add
jae
push
scas
inc
adcb
mov
sbb
sub
ss
dec
or
sbbb
shr
inc
fcompl
cmc
nop
daa
daa
inc
arpl
jb
scas
inc
jp
sbbl
int
lahf
ss
ljmp
inc
or
mov
loopne
nop
adc
inc
fistpl
xor
scas
cmp
push
xor
pop
mov
fistps
or
mov
es
fidivl
shrl
or
push
lods
pop
js
subb
pop
sahf
cld
rclb
add
es
push
jo
ret
repz
adc
sbb
lret
bound
lahf
ss
outsb
jmp
push
in
roll
repnz
es
xchg
gs
fistl
mov
stc
call
or
in
mov
mov
mov
sub
add
jae
dec
scas
inc
adcl
fs
sbb
daa
cld
ss
dec
or
jg
daa
mov
shr
inc
fcompl
hlt
nop
daa
es
arpl
jno
scas
inc
jns
sbbl
int3
in
ss
out
ljmp
inc
or
mov
nop
adc
inc
fistl
xor
scas
cmp
imul
push
ljmp
jno
pop
xor
scas
test
jno
shrb
bound
push
lods
pop
ja
subb
pop
sahf
sti
iret
push
jmp
dec
and
push
outsl
inc
shll
lods
inc
stc
adc
bound
ss
insl
jmp
push
jmp
pop
sahf
icebp
or
jae
adc
mov
xchg
fs
fistl
mov
stc
out
aaa
into
xor
push
push
in
xchg
lea
mov
sub
dec
scas
inc
adcb
xchg
sbb
es
ss
dec
or
jle
daa
mov
shr
inc
fcompl
aas
arpl
jo
scas
inc
js
sbbl
lret
in
ss
in
ljmp
inc
or
mov
fdivrp
nop
adc
inc
fistl
xor
scas
arpl
stc
push
mov
ljmp
jno
pop
xor
scas
sbb
mov
lods
inc
add
clc
vphadddq
sub
lods
pop
jbe
subb
pop
sahf
cli
into
push
jmp
dec
and
push
insl
inc
fistpl
mov
lods
inc
clc
adc
arpl
lahf
ss
insb
ljmp
mov
fdivl
adc
mov
arpl
xchg
mov
scas
loope
arpl
out
aaa
into
xor
sbbb
push
push
in
test
aaa
mov
mov
sub
add
je
dec
scas
inc
jle
sti
xchg
xchg
sbb
and
aaa
into
sub
mov
jge
daa
mov
shr
inc
fcompl
repnz
sub
scas
inc
ja
sbbl
lret
ss
jmp
push
ss
mov
mov
fdivr
nop
push
in
fcoml
ss
xorb
mov
sbbl
add
daa
jno
pop
das
mov
lods
sbb
mov
lods
inc
call
stc
nop
pop
and
arpl
pop
scas
pop
je
andl
int3
push
ljmp
jb
push
imul
jno
daa
mov
les
sbb
int
dec
bound
sbbb
mov
cmp
sub
lea
fstl
mov
sti
in
cmp
xor
push
in
sbbl
mov
push
xchg
sub
fnsave
mov
jge
sti
xchg
test
sbb
and
aaa
into
sub
mov
jnp
sub
into
jmp
xchg
sub
cmp
sti
insl
inc
scas
inc
jne
sbbb
xchg
int
enter
adc
jmp
sbb
mov
mov
mov
xchg
or
das
sbb
xorl
sbb
ficompl
or
mov
daa
stos
sbb
mov
scas
inc
sar
nop
add
es
scas
push
jae
andb
or
sti
sbb
mov
dec
push
fstpl
mov
scas
inc
hlt
push
sbbl
adc
mov
sbbb
or
cmp
cld
xchg
mov
fstl
mov
sti
loop
cmp
xor
sbb
push
push
in
adcb
mov
mov
sub
fnsave
mov
jl
sti
xchg
sbbl
mov
lock
andl
aaa
into
sub
jne
push
in
jp
sub
int
inc
fstpl
out
xchg
sub
cmp
inc
scas
inc
je
sbbb
xchg
int
loopne
aaa
adc
jmp
sbb
push
data16
mov
mov
xchg
or
inc
fcoml
sbb
xorb
mov
sbbl
add
lahf
or
mov
daa
stos
jg
jb
lret
scas
inc
std
sar
nop
add
int
push
and
jmp
movsb
ja
int3
test
or
cli
pop
sub
dec
imul
mov
shrl
aas
adc
fs
pusha
mov
sbbb
or
cmp
mov
mov
fisttpll
mov
sti
loope
cmp
das
add
in
adcl
or
test
xchg
sub
std
fnsave
mov
jnp
sti
xchg
sbbb
aam
in
andl
aaa
into
daa
inc
or
jns
sub
int3
out
fstpl
out
xchg
sub
cmp
inc
scas
inc
jae
sbbb
xchg
int
fbld
sbbb
mov
mov
mov
fsqrt
xchg
or
inc
fcoml
sub
arpl
arpl
int
test
jmp
fcomps
or
mov
daa
test
lret
cld
sar
nop
add
int
push
and
scas
push
jno
andb
or
stc
push
sub
dec
push
nop
daa
lahf
mov
scas
inc
repnz
sbb
adc
fs
pop
mov
sbbb
or
aaa
or
mov
mov
fisttpll
scas
fs
loopne
cmp
add
in
adcb
xchg
mov
sub
cld
fnsave
mov
jp
sti
xchg
sbbl
in
andl
aaa
into
es
or
js
sub
lret
out
fstl
in
xchg
sub
cmp
inc
scas
inc
jb
sbbb
xchg
int
aaa
adc
jmp
sbb
mov
mov
mov
daa
mov
or
inc
fcoml
sub
scas
pop
xor
bound
int
addl
add
lahf
or
jb
push
sub
daa
test
leave
scas
inc
sti
sar
nop
add
pop
scas
push
jo
andb
or
clc
adc
jb
dec
addr16
fstpl
mov
scas
inc
icebp
or
fs
pop
mov
adcb
or
or
mov
mov
lea
fs
cmp
sub
dec
push
in
jg
mov
or
cmpsl
mov
sub
inc
mov
jns
sti
xchg
sbbb
mov
in
in
sbbl
aaa
into
and
inc
push
in
ja
sub
lret
fstl
in
xchg
sub
cmp
aas
scas
inc
jno
sbbb
xchg
int
frstor
sbbb
mov
mov
mov
daa
mov
or
inc
fmull
sub
scas
pop
xor
popa
jge
int
addb
add
lahf
or
jb
push
sub
daa
cmpsl
jl
jb
enter
iret
stc
nop
add
scas
push
outsl
jmp
mov
ret
repz
push
ljmp
jb
dec
inc
fstl
mov
scas
inc
lock
fs
pop
mov
adcb
or
xor
push
cld
xchg
mov
fisttpll
fs
fdivrp
cmp
sub
sbbl
dec
push
in
jle
mov
or
cmpsb
mov
sub
fnsave
mov
js
sti
xchg
jg
into
gs
mov
in
sbbl
aaa
into
and
or
jbe
sub
leave
in
fstl
aaa
fs
push
mov
fs
fsubl
adcb
mov
mov
mov
daa
mov
or
inc
fmull
sub
scas
pop
das
arpl
pusha
jl
int
addl
ss
and
push
daa
mov
sub
scas
inc
stc
int
nop
lcall
into
gs
and
scas
push
insl
in
sbbl
or
cmc
adc
rolb
or
inc
ficoms
mov
cld
out
scas
inc
out
or
inc
pop
mov
adcl
mov
xor
sub
cmp
xchg
fimuls
stos
gs
fdivr
cmp
sub
sbbl
dec
push
out
jge
mov
or
movsb
mov
sub
clc
fnsave
mov
ja
sti
xchg
jge
iret
lretw
mov
jmp
test
aas
or
je
sub
ret
or
jecxz
ficoms
xchg
sub
ss
addr16
inc
outsb
mov
fs
cmp
das
mov
mov
mov
daa
mov
pop
fildl
or
sbb
pop
jnp
into
lods
jg
sbb
rcrb
or
mov
sub
mov
clc
lret
stc
nop
std
sbb
dec
push
sbb
sahf
jo
int
mov
push
jmp
adc
roll
or
dec
fists
data16
out
scas
inc
in
pop
test
or
mov
adcl
or
xor
xchg
test
fimuls
test
cmp
sub
sbbl
dec
pop
out
jl
mov
or
aam
xchg
sub
neg
je
inc
mov
jbe
sti
xchg
jnp
shlb
pushf
sbb
sbb
aaa
into
and
or
outsl
inc
push
in
jb
sub
rcll
fists
out
sub
xor
scas
inc
insb
xchg
mov
loope
adcb
rclb
or
mov
daa
mov
push
flds
or
sbb
pop
jp
iret
stos
jge
sbb
rcrb
or
and
sub
mov
test
shlb
sbb
scas
dec
imul
popf
outsb
ss
mov
push
jmp
adc
ret
jae
inc
bound
xchg
gs
sub
mov
xchg
cmp
pop
in
adcl
or
xor
shlb
inc
fiadds
test
cld
fincstp
cmp
sub
sbbl
dec
pop
out
jnp
mov
or
shr
xchg
sub
cmc
fnsave
mov
jne
sti
xchg
jp
shlb
fwait
sbb
sbb
aaa
into
pop
cmp
push
in
jno
sub
rclb
fists
out
sub
xor
std
cmp
sbb
fldenv
adcb
rclb
or
mov
daa
mov
add
daa
sbb
pop
jns
iret
stos
jl
sbb
iret
lahf
add
jne
push
and
sub
les
nop
cli
pop
shlb
sbb
scas
dec
push
test
or
out
mov
sub
inc
adc
inc
popa
dec
loopne
fs
sub
mov
inc
jmp
or
gs
movsb
cmp
stos
ret
mov
mov
xor
sub
xor
xchg
adcl
xchg
cld
fdiv
cmp
daa
cli
sbbl
dec
pop
out
jp
mov
or
shr
xchg
sub
hlt
fnsave
mov
je
sti
xchg
jns
shlb
lcall
sbb
aaa
into
push
cmp
mov
jo
sub
mov
loopne
fists
in
sub
xor
cmp
sbb
fsubs
adcb
rclb
or
mov
daa
mov
add
inc
fmull
sbb
pop
js
iret
test
lret
sti
into
lahf
add
mov
sub
ret
mov
cmc
stc
nop
stc
push
shlb
sbb
scas
dec
imul
int
mov
push
jmp
push
sub
aas
adc
inc
pusha
dec
loopne
arpl
jecxz
scas
inc
call
or
cmp
cmp
stos
ret
scas
or
das
add
shlb
xchg
adcb
mov
gs
xlat
cmc
cmp
es
sbbl
dec
pop
out
jns
mov
or
shr
xchg
sub
repz
mov
jae
sti
xchg
js
shlb
cltd
sbb
sbb
aaa
into
sbb
ds
in
outsl
lea
sarl
dec
fists
in
sub
xor
arpl
scas
inc
imul
cmp
fsubrp
adcb
rclb
or
mov
daa
mov
add
inc
faddl
and
arpl
pop
ja
iret
test
sbbl
cli
int
lcall
jne
dec
and
sub
shll
clc
adc
addr16
sbb
mov
addr16
test
mov
push
in
out
or
ret
je
inc
pop
dec
loopne
bound
loope
mov
out
xchg
cmp
cmp
test
pop
fisubrl
loopne
sub
dec
xchg
adcb
test
data16
repz
and
test
sub
out
ja
mov
or
shr
xchg
sub
aas
mov
jno
cld
xchg
ja
shlb
cwtl
sbb
pop
jmp
iret
sbb
or
push
push
in
outsb
mov
sarl
fisttps
jecxz
sub
ss
push
mov
gs
fucomp
orl
rclb
or
scas
subb
mov
cld
xchg
add
inc
fldl
and
mov
daa
fs
pop
jne
iret
cmpsb
jns
sbb
int3
mov
or
pop
mov
sub
mov
sti
xchg
notl
shlb
sbb
mov
gs
test
mov
push
in
in
or
ret
jne
inc
pop
dec
loopne
popa
xchg
sub
mov
dec
out
xchg
cmp
cmp
cmpsb
ret
lods
or
fdivrp
loopne
sub
sub
xor
jle
dec
loopne
lahf
sbb
shlb
shll
testl
cmp
or
iret
jmp
fbstp
cmp
std
xchg
jbe
shlb
xchg
sbb
adc
aaa
or
push
mov
sarl
dec
fisttps
xchg
sub
data16
pop
xor
test
mov
iret
mov
cmp
daa
rclb
or
lods
subl
xchg
call
inc
fiadds
sbb
push
jae
shlb
push
out
test
cmp
pop
jbe
dec
sbb
xchg
sub
mov
out
ret
cld
xchg
cmc
adc
push
inc
arpl
xchg
mov
movsb
out
push
out
jmp
sub
cmp
or
mov
sub
mov
dec
in
xchg
cmp
cmp
movsb
ret
lods
or
ja
ljmp
ret
xchg
jge
dec
loopne
sahf
sbb
iret
mov
cmp
and
test
inc
pop
out
je
mov
or
into
call
fbstp
cmp
dec
outsb
inc
std
xchg
jne
shlb
xchg
sbb
adc
cmp
sbb
or
cmp
insb
mov
sarl
dec
fisttps
loope
sub
sub
mov
data16
sbb
shlb
test
or
stos
subb
mov
cld
xchg
rolb
add
sbb
push
jb
shlb
les
cmc
leave
mov
aam
lods
in
xor
inc
sbb
adc
xor
push
and
and
or
xor
out
xchg
sbb
es
sahf
fcomip
mov
mov
ja
out
mov
add
add
mov
xchg
or
mov
popf
in
lret
sub
or
pop
mov
sbb
jge
sub
push
sub
icebp
idivl
sbb
mov
pop
xchg
ret
sub
jb
xor
jle
push
enter
dec
das
andb
xor
sub
xor
loop
icebp
rorb
adc
sahf
stos
orb
inc
xor
adc
test
dec
cli
mov
addr16
cli
mov
aad
pop
xor
push
incl
and
xchg
imul
call
out
push
leave
mov
sub
stc
jmp
and
scas
sbb
loope
cld
pop
ret
dec
jne
xchg
inc
test
insb
mov
outsl
adc
fildll
mov
lret
xor
or
jg
lds
es
out
adc
in
xchg
pop
inc
fwait
mov
popa
in
add
inc
shll
jnp
cltd
adc
mov
movsl
adc
jbe
and
inc
push
inc
ja
or
sub
das
sub
jmp
and
adcl
lods
fisttpl
rcl
js
push
and
xor
or
jecxz
cmp
lods
add
jmp
jno
mov
adc
dec
cmp
add
xor
push
cltd
jno
ds
incb
mov
daa
push
xor
add
ror
lea
pop
or
gs
mov
sub
rol
or
mov
aam
add
add
add
xor
add
add
and
test
add
add
mov
push
sub
and
mov
cld
jb
cmp
out
mov
push
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
cmp
outsl
les
jle
loope
push
in
xchg
pushf
sahf
loopne
in
mov
or
pop
lret
mov
pop
dec
out
mov
mov
jnp
