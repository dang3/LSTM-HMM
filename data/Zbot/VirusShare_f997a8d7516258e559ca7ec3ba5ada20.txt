fistl
in
ret
xchg
addr16
mov
sub
lcall
stos
int
insb
xchg
xor
xlat
lcall
mov
adc
xchg
repz
andl
add
mov
sub
inc
fisubrs
insb
sub
stos
sub
daa
repz
add
adc
adc
aaa
push
mov
repz
dec
mov
xor
pop
dec
bnd
pop
cmpsl
imul
cli
lcall
push
decl
jb
mov
movsb
mov
je
inc
adc
popf
or
enter
mov
and
call
dec
mov
sub
aas
popf
xchg
push
lods
push
lds
inc
sbb
std
mov
call
stos
das
jb
fmulp
mov
add
adc
xchg
nop
pushf
cmc
enter
subb
in
test
pand
push
push
sub
fimull
add
jae
sahf
or
ljmp
or
aad
sbb
lcall
adc
in
or
mov
jg
stc
cltd
out
dec
adc
dec
enter
aam
pop
pusha
lcall
jmp
mov
sub
add
mov
sbbb
push
aad
idivl
je
mov
call
jg
pop
inc
cld
das
ljmp
pop
fcmovu
pop
dec
insb
hlt
jne
call
dec
ret
push
test
mov
jle
outsb
sahf
cmpsb
sbb
loopne
scas
pop
cmp
lcall
daa
pop
sbb
mov
xor
xor
and
aad
push
and
incl
in
loopne
in
xchg
xlat
imul
pop
inc
jne
nop
lock
sbb
or
mov
push
lret
ret
ds
push
jl
sbb
fnsave
sbb
test
stc
inc
leave
out
mov
sub
mov
cld
enter
push
into
inc
leave
jnp
insb
mov
test
shr
cmp
lcall
test
pop
leave
sbb
jne
scas
xor
mov
lahf
daa
bound
jmp
inc
xor
adc
mov
in
repnz
mov
decl
mov
das
jl
push
mov
jbe
pop
xchg
sbb
lcall
into
or
mov
ja
divl
jmp
stos
lods
ret
rclb
mov
lods
decl
stc
mov
roll
pop
js
daa
lods
and
mov
and
incl
lds
outsb
xchg
mov
or
ds
push
das
shlb
sti
sbb
decl
jo
fimull
ljmp
or
push
inc
and
mov
lcall
xor
loop
push
cli
push
stos
in
daa
fs
aad
movsl
dec
jbe
push
imul
lcall
ds
cmp
or
xor
rclb
or
mov
loope
in
out
xchg
jns
mov
fcmovnu
dec
mov
mov
jno
insl
jg
ret
insb
out
sub
in
adc
or
decl
jge
cwtl
fwait
ror
push
nop
loope
sub
stos
xchg
mov
mov
out
cmp
push
xchg
or
fcomp
mov
in
push
inc
mov
and
out
loope
scas
pop
inc
xchg
sar
jnp
dec
lahf
pushf
mov
or
dec
jbe
dec
push
popf
lret
and
push
or
shll
add
stos
xchg
sbb
pop
icebp
decl
pop
xchg
mov
add
call
adc
call
and
mov
outsb
int3
sbb
aas
ss
jno
add
inc
loop
in
sbb
call
or
add
push
neg
cmp
sub
das
inc
repnz
mov
push
sar
das
clc
rcr
cltd
adc
addb
ljmp
repz
sub
jle
mov
dec
pop
and
fistps
nop
repz
add
int3
mov
movsl
inc
mov
cmpsb
lcall
xchg
jnp
pop
jg
or
push
or
xchg
mov
cmp
mov
add
ret
imul
out
adcl
clc
call
xchg
xor
jmp
mov
xchg
mov
xchg
jp
mov
fistpll
jg
and
js
mov
sub
sub
pop
adc
jg
mov
push
xchg
js
mov
fstpl
in
in
out
call
sub
jg
ja
xor
call
stos
xlat
push
or
lds
push
insb
inc
inc
shr
clc
scas
aaa
lock
lcall
jne
lods
dec
xchg
jbe
mov
xor
out
lahf
push
dec
cmp
incl
ret
popa
pop
xchg
stos
xchg
test
jle
mov
movsb
aad
cld
mov
aam
dec
out
cli
pushl
add
or
sub
hlt
add
gs
fs
cli
jg
jmp
or
cmp
pop
add
cltd
jae
lcall
arpl
insl
cmpsb
enterw
jle
rcll
mov
popf
cli
clc
out
lds
sbb
das
mov
mov
in
push
jg
ljmp
subl
xchg
test
mov
push
inc
stos
fwait
and
std
lcall
mov
icebp
popf
cmp
push
sub
mov
lret
sbbl
jecxz
std
call
pop
shl
fisttpll
mov
ljmp
fadds
mov
jne
call
or
adc
andb
push
je
jecxz
jo
fldcw
xchg
adc
jmp
imul
andb
mov
xchg
xor
jb
pop
sub
or
jg
lock
decl
mov
gs
sub
adc
outsl
mov
and
sub
lcall
movsl
shl
inc
int
fninit
sub
push
sub
adc
es
adc
mov
ss
push
inc
mov
loop
mov
mov
jge
mov
jge
xchg
dec
pop
sti
adc
add
scas
add
aas
pop
mov
or
jp
jo
add
jge
add
call
mov
sub
xchg
data16
lcall
outsb
jg
and
cwtl
in
sub
into
add
dec
fsts
and
pushf
lock
popf
mov
ljmp
mov
fnsave
dec
or
out
repz
sbb
xor
stos
mov
inc
call
loopne
lret
imul
push
mov
push
and
xchg
and
fs
jecxz
push
nop
cmp
cmp
ret
repnz
shrl
pop
add
inc
aam
pop
out
popf
in
call
into
out
addr16
idiv
push
lret
sub
or
call
in
cs
fisubs
sbb
push
lcall
pushl
pop
mov
arpl
push
addl
push
clc
insl
mov
xor
lret
pop
add
inc
or
decl
testl
sbb
mov
jbe
fisttps
repz
push
add
fdiv
cmp
call
in
mov
xchg
pusha
and
lahf
loope
xlat
xchg
jb
popa
pusha
outsl
mov
dec
lcall
xor
xlat
jmp
arpl
adc
dec
test
cwtl
adc
clc
incl
jb
dec
mov
call
jb
test
inc
je
push
icebp
ljmp
out
sub
ja
addr16
adc
cli
lret
test
lcall
lret
in
cmpsb
push
or
xor
out
in
dec
out
les
test
sub
call
adcl
dec
cmpb
fdiv
push
test
daa
xchg
cmp
mov
movsb
mov
jnp
enter
out
mov
call
gs
mov
inc
rorl
inc
sbbb
cltd
pop
push
fiaddl
lahf
fimuls
dec
inc
mov
inc
aad
fcom
stos
dec
sbb
subb
out
xchg
sbb
iret
fldt
pop
idiv
call
sub
mov
lcall
scas
mov
sbb
mov
jno
fsubs
mov
mov
sub
mov
das
adc
ss
repz
sbb
sbb
call
aad
les
xchg
jo
xor
push
xchg
push
loopne
sbb
lahf
push
pop
xchg
pop
pop
lea
cwtl
cmpsl
pushl
scas
push
insb
mov
and
mov
mov
aad
xor
xchg
add
xchg
mov
and
or
pop
push
push
stc
cli
dec
pop
call
lcall
out
sub
popf
shrl
pusha
lods
lahf
ss
xor
jnp
or
add
or
cs
testb
dec
cld
sbb
insl
sbb
loop
or
push
mov
sti
xchg
lret
addr16
inc
call
push
test
idivb
ds
fistpl
out
test
pop
sbb
mov
out
jle
xor
sub
mov
mov
add
mov
mov
mov
add
sbb
add
mov
lods
xor
mov
es
and
imul
dec
sub
out
into
mov
xor
inc
mov
repz
xor
out
lret
push
daa
cli
shlb
mov
mov
unpckhps
mov
dec
sbb
scas
pop
cmp
sub
push
iret
ds
test
je
scas
push
scas
in
insb
addr16
xor
aas
xor
sbb
and
push
std
jge
push
mov
sub
dec
out
lock
pop
lret
or
cld
out
jo
mov
inc
loopne
ret
push
push
fistpll
mov
add
mov
fimuls
sahf
std
andb
jmp
sahf
rcl
jmp
popa
gs
sbb
push
adc
push
lock
pusha
push
fnstcw
into
dec
adcb
mov
add
inc
popl
cmp
outsl
rcll
add
push
mov
push
imul
xchg
out
or
out
rcr
cmp
jne
movq
inc
jmp
xchg
push
movsl
enter
xor
inc
adc
add
add
inc
int
nop
dec
add
xor
mov
std
and
adc
nop
push
add
add
xorl
pop
or
sbb
push
ja
mov
lcall
pop
and
jbe
daa
xchg
aas
rcl
bound
bound
daa
inc
cmp
push
pushl
push
inc
cmp
sub
cld
dec
push
idivb
ss
mov
jb
sbb
ljmp
push
out
cltd
orb
jae
jecxz
sbb
adc
int
and
test
or
cmp
xor
mov
fbld
and
test
push
add
cmp
jmp
sbb
hlt
filds
xchg
in
sub
mov
nop
jbe
andb
pop
fs
call
or
push
or
mov
push
jo
in
or
pushf
sarl
pushl
sub
adc
push
jle
aaa
fcompl
dec
inc
mov
and
dec
pop
add
mov
call
sbb
mov
lret
adc
sarb
inc
and
fs
rorb
mov
mov
and
lock
or
cmp
fbstp
es
and
imul
or
das
or
and
gs
cmp
fistpll
jb
jae
pop
xchg
out
lret
mov
imul
pop
xorb
xor
mov
mov
addl
mov
jmp
xor
sub
and
daa
in
jns
es
es
daa
mov
sub
jo
ret
inc
popa
adc
push
mov
adc
ja
cmp
mov
xchg
sub
cmp
stc
shrl
imul
lods
es
mov
mov
enter
or
movsb
pusha
sub
and
sbb
pop
nop
add
cmp
xor
dec
mov
rcll
sbb
sub
jae
jecxz
loopne
mov
mov
lds
loopne
pop
pop
test
dec
xlat
sbb
data16
sub
aaa
lods
lods
push
jo
mov
cmp
or
lods
and
notl
gs
das
iret
jl
sbbb
sub
sub
add
mov
mov
std
xchg
jmp
push
jmp
adc
cmpsl
push
jmp
cwtl
inc
xchg
xchg
push
fwait
aaa
fwait
sub
cmp
incl
inc
lds
imul
or
fcmovnbe
pop
mov
xchg
sbb
jns
pop
cli
sub
mov
shr
mov
adc
xchg
adc
arpl
mov
incl
add
mov
das
jns
mov
addr16
mov
shrb
sub
decl
xchg
and
pop
cltd
aam
sub
cwtl
adc
jle
cmc
insb
xor
test
or
incl
stc
adc
xor
adc
fs
cmpsl
inc
sub
mov
mov
aad
inc
aas
pop
pop
clc
sub
test
pop
mov
loope
js
enter
repnz
sbb
lcall
int
xchg
out
and
das
test
test
aas
mov
mov
lcall
cmpb
add
xchg
xor
fidivrl
ljmp
and
mov
cld
or
pop
dec
cmp
cld
jbe
mov
or
xchg
mov
push
imul
popa
xor
lea
sbb
aas
test
gs
mov
mov
inc
cmp
fistpll
add
lret
call
rcrl
jbe
jg
int
data16
popa
or
sbb
dec
sbb
clc
cmp
xor
mov
mov
sub
cli
out
push
ja
cmpsb
jp
loop
sbb
mov
ja
fcmovbe
pushl
inc
cs
shl
xor
test
adc
fstpl
mov
stc
adc
cmp
sahf
imulb
add
push
mov
lret
push
lret
push
or
inc
addr16
incl
mov
and
jge
testb
lahf
repnz
scas
aaa
sbb
mov
add
mov
or
or
adc
nop
inc
add
add
xchg
sub
stos
and
incl
xchg
test
andl
push
sbbl
add
loope
loop
cltd
mov
stos
call
repnz
jmp
xor
fs
nop
push
add
add
or
and
inc
rorl
inc
adc
add
add
add
subl
inc
add
fs
add
mov
push
inc
and
add
or
mov
add
add
push
add
adc
fsubs
andb
inc
ds
sti
shl
push
movsl
dec
inc
push
hlt
movsl
lcall
push
std
xchg
and
pushf
imul
mov
xchg
cmpl
mov
call
add
orl
loopne
rolb
sub
into
cmpsb
cltd
inc
lds
xchg
push
dec
loopne
push
outsl
jbe
sbb
addr16
test
lock
mov
ljmp
cmp
pop
fwait
mov
addr16
mov
adc
stc
enter
xlat
mov
ds
xor
mulb
enter
or
or
pop
scas
test
lds
adc
mov
jnp
ljmp
fsubrp
mov
inc
out
test
icebp
outsl
ret
jmp
jl
pop
xor
std
ficoms
ds
call
mov
out
or
add
negl
es
cli
fsubs
lods
lods
xchg
es
decl
and
iret
in
imul
insl
std
jnp
out
jne
add
pushf
out
sbb
call
push
je
mov
xlat
mov
les
insl
sub
out
cmp
inc
xchg
daa
pushl
or
mov
bound
inc
test
dec
sbb
das
fldenv
ret
push
xor
call
lret
loop
lods
insb
jb
xchg
xor
sub
fistpl
adc
push
lret
lcall
loopne
xchg
or
pusha
sti
xchg
push
test
adc
bound
lds
jmp
orl
out
imul
cmp
jmp
mov
or
cmpsb
leave
jns
and
add
nop
outsb
dec
sbb
jmp
bound
dec
popa
jmp
lds
add
jne
icebp
mov
mov
adc
push
or
cmp
call
jb
sub
outsb
push
push
xchg
movsb
add
fs
ss
stos
sub
sahf
mov
mov
int3
test
fwait
enter
shl
pop
sbb
adc
cli
out
inc
xchg
cmpsb
js
pop
std
icebp
mov
dec
loop
out
or
sub
aad
lret
xlat
sbb
mov
pop
lcall
jnp
dec
push
jbe
mov
xchg
pop
test
adc
push
loop
clc
dec
xor
push
dec
push
mov
movsb
loop
mov
dec
hlt
jmp
or
loop
testb
fimull
xlat
add
iret
sub
adc
enter
mov
add
fs
or
add
add
adc
push
pop
and
add
xor
jne
xchg
adc
lods
dec
jb
jg
lcall
inc
lock
push
les
and
loope
aam
cmp
and
lds
push
sbb
and
sti
call
les
push
inc
cmc
and
mov
add
scas
xor
or
pop
repnz
xchg
mov
rorl
bound
jbe
cli
cmp
movsb
add
xor
sbb
jmp
ss
push
add
xor
cmc
dec
and
xchg
dec
sti
stos
pop
inc
xchg
scas
pop
inc
xchg
pushl
xchg
cmpsb
inc
dec
mov
mov
inc
xchg
push
push
lcall
inc
xchg
xchg
popa
scas
mov
into
xor
xchg
dec
out
stos
inc
push
in
inc
mov
push
gs
fistps
push
mov
outsb
scas
lods
push
dec
leave
dec
in
pop
dec
mov
fildl
inc
push
mov
mov
cmpsl
sbb
mov
pop
inc
mov
inc
and
stos
inc
dec
scas
cmpsb
dec
mov
adcl
popa
pop
inc
icebp
sub
xor
dec
movsb
in
call
ss
mov
stos
addr16
mov
into
fistpl
cmc
xor
xchg
cld
or
mov
int
xchg
enter
mov
cs
cmpsb
push
dec
mov
jae
nop
xchg
iret
push
inc
inc
sar
addb
or
out
enter
inc
xchg
and
clc
out
lods
jge
cmp
mov
push
inc
les
add
les
dec
fildll
gs
xchg
mov
mov
mov
mov
ret
pop
and
dec
inc
fdivs
inc
shll
dec
stos
pop
push
lret
push
out
lods
jbe
mov
xchg
xchg
into
jno
inc
jg
mov
pop
mov
cmp
es
dec
lcall
incl
test
push
dec
icebp
cmpsb
pop
pop
stos
stos
pop
inc
mov
lods
gs
inc
jecxz
cmc
sar
cs
mov
clc
push
jmp
fcmovnu
das
js
test
mov
inc
mov
push
gs
inc
cld
mov
dec
inc
hlt
lods
pop
push
jo
cmp
sub
cmp
cmp
pop
pop
lea
daa
addl
lahf
jg
push
sub
inc
inc
fildl
js
aaa
xor
pop
and
stos
add
and
sti
andl
jge
mov
out
scas
out
insb
ret
das
pop
jo
sub
cmpsb
dec
xor
xchg
mov
push
mov
jmp
cmpsb
fcmovnbe
mov
std
lcall
ret
mov
stos
mov
sub
cmpsl
mov
mov
pop
dec
ljmp
movsl
scas
leave
xor
add
cli
and
cltd
push
cld
xor
ljmp
mov
xor
ljmp
pop
ds
mov
mov
cmp
add
add
fadd
mull
jmp
int3
xor
pop
mov
bound
mov
repnz
cmc
enter
inc
push
lock
out
ret
lea
lcall
test
data16
outsb
roll
lds
lret
lock
xchg
out
divb
divb
fdiv
or
pop
fcmovnb
cmp
lea
cmpsb
test
enter
ret
jg
ss
dec
or
jbe
mov
xchg
mov
and
jge
ret
mov
xchg
push
push
imul
fimuls
scas
je
mov
iret
and
and
mov
mov
outsl
fnclex
fwait
scas
and
lods
out
mov
scas
push
xchg
ret
rolb
add
xchg
popa
adc
jno
adc
mov
push
jae
inc
jecxz
add
in
mov
xchg
mov
scas
pop
rcrl
push
dec
dec
rclb
adc
dec
mov
xchg
lds
pop
aad
aaa
std
aas
inc
js
xchg
fadd
push
sbbb
or
mov
jge
mov
addl
dec
cmp
int
mov
arpl
mov
jmp
into
sub
lock
movsl
mov
adc
int3
in
sub
insb
mov
ds
cmp
push
sti
cmp
inc
daa
arpl
ficompl
jb
jno
cmpsb
mov
std
aaa
std
pushl
lea
sarl
addb
dec
popa
cmp
xchg
adcl
push
cmp
xchg
test
add
xchg
mov
dec
jns
in
add
sbb
stc
dec
mov
lods
stos
loop
sub
repnz
and
imul
and
pusha
stos
scas
mov
mov
lahf
into
out
scas
mov
sarb
push
mov
daa
pop
mov
and
aam
ficoms
add
decl
and
add
and
mov
dec
mov
movsl
cs
and
sahf
dec
je
aaa
in
pushl
xor
addb
iret
or
xor
pop
push
scas
repnz
sar
fwait
pop
jbe
lcall
fs
mov
test
dec
mov
inc
mov
cwtl
push
mov
mov
mov
lcall
sub
inc
pop
mov
into
push
cmpsb
out
jae
pop
and
xor
jnp
push
mov
les
popa
push
mov
pop
call
add
jg
pop
lock
push
xchg
addr16
dec
mov
test
fistl
mov
push
pop
cmp
testl
outsl
outsl
aaa
jl
push
jmp
jle
shll
test
xchg
pop
fs
ljmp
gs
xchg
cld
push
push
fs
sub
xchg
push
jmp
dec
mov
insb
cs
aam
mov
pushf
outsb
jg
add
out
xchg
lea
jecxz
jp
hlt
lret
popa
ds
and
cli
add
fiadds
cli
inc
add
push
mov
call
jg
push
inc
fwait
imul
aas
mov
xor
push
lcall
lcall
xor
mov
je
dec
jb
push
jo
push
insb
dec
dec
popa
js
push
ss
inc
call
inc
xor
push
push
jb
push
push
outsb
jp
xor
pop
dec
je
dec
js
inc
outsl
add
popa
xor
pop
aaa
xor
jae
pop
inc
outsb
cmp
fs
outsl
ljmp
pop
sub
popa
jne
dec
push
jne
dec
sbb
xor
std
jmp
xor
xor
cmp
inc
dec
dec
jne
xor
insb
inc
je
insl
push
aaa
pushl
add
push
push
inc
cs
push
dec
jo
dec
xor
jno
push
push
js
xor
fwait
call
imul
jae
arpl
push
jo
jno
inc
push
ja
pop
push
das
sar
insl
jns
push
dec
dec
jo
jns
dec
inc
insb
imul
pop
inc
in
incl
jae
mov
ja
inc
inc
inc
jne
fs
ss
clc
call
fs
dec
imul
inc
jo
inc
xchg
push
push
arpl
mov
dec
push
xor
jne
push
jp
push
outsb
xor
inc
xor
dec
push
dec
jp
jo
outsl
or
incl
dec
inc
addr16
xor
imul
gs
mov
sub
push
push
sub
ss
dec
inc
mov
push
dec
dec
dec
outsb
gs
push
inc
pop
je
dec
jne
push
dec
push
push
insl
jg
shll
pop
dec
imul
jns
pop
xor
arpl
incl
push
push
data16
inc
pop
cmp
pop
inc
dec
outsl
xor
lds
inc
xor
inc
inc
inc
and
dec
sti
mov
and
adc
or
fsubrp
out
popf
add
xchg
xchg
push
xor
xchg
xor
cmp
or
add
fwait
mov
mov
daa
shl
mov
push
out
push
fmul
test
sahf
in
ljmp
sub
adc
enter
jmp
dec
in
sahf
inc
jecxz
pop
enter
add
js
rcrb
pop
cmc
jge
incl
ja
and
ja
inc
sub
outsb
sbb
jbe
push
or
ss
int
push
mov
adc
adc
insb
lock
sub
or
in
frndint
sbb
sbb
jbe
dec
lahf
xor
in
jnp
adc
push
lods
aad
rorb
mov
cwtl
xor
loop
loopne
inc
sbbb
ret
xchg
dec
dec
mov
push
mov
jge
imul
xchg
push
xchg
adc
les
jmp
idivb
daa
out
dec
outsb
in
out
testb
inc
test
pop
jnp,pt
js
rolb
insb
nop
loopne
pop
sti
jbe
adc
or
mov
loopne
add
push
in
sarl
push
mov
fisttpll
inc
push
sbb
adc
xor
xchg
xor
cs
xchg
add
pop
jbe
loopne
add
xlat
inc
aas
inc
enter
mov
test
or
pop
jbe
pop
in
cmp
ret
push
cmp
or
and
inc
adc
es
xchg
jb
push
pop
xor
cmp
fstpt
sub
leave
mov
sub
mov
rcll
fadds
out
icebp
ror
data16
ds
mov
nop
mov
mov
jmp
pushl
jns
test
psubq
pop
sub
fwait
in
sti
fiaddl
das
jge
insb
les
out
jle
fists
call
out
into
loope
jbe
insl
push
jae
loop
pop
inc
icebp
dec
push
scas
fnstcw
lcall
jne
lds
in
cmpsl
ret
imul
jb
gs
xor
cs
pushl
pop
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
lods
jge
mov
popa
jbe
add
pop
jb
jg
in
pop
dec
outsb
and
imul
jne
mov
outsl
and
gs
outsl
arpl
or
mov
xor
push
xchg
mov
inc
outsl
jne
pop
push
jne
jns
push
outsw
jb
popa
outsb
neg
int3
fisubs
xor
push
adc
sbb
mov
jb
cmp
popa
fs
fs
xlat
or
out
push
mov
fs
push
lods
fldenv
adc
dec
add
pop
push
imul
dec
jne
mov
or
sub
sub
sub
mov
je
mov
pop
arpl
sbb
mov
dec
imul
inc
push
fidivs
and
popa
divb
popf
adc
and
cmp
fs
pop
ret
imulb
jae
dec
outsl
fs
gs
push
or
fsubr
shll
imul
mov
sub
es
inc
push
push
xchg
mov
insl
mov
pusha
icebp
imul
sbb
bound
jae
push
or
mov
xor
jnp
push
idiv
push
push
outsb
push
fnstcw
cmp
xor
out
dec
mov
ss
push
outsl
xchg
and
dec
data16
loopne
std
add
insb
xorb
cmp
or
xor
imul
fisubrl
pop
push
adc
or
push
jns
jns
inc
shl
xchg
xor
fildl
jno
adc
push
fisttpl
jns
pop
jb
jae
mov
outsb
addr16
fsubl
gs
outsl
fsubrp
sub
gs
push
inc
jbe
jo
sub
fmuls
add
jecxz
dec
movsb
outsb
mov
loopne
adc
add
popa
jne
jg
xchg
pop
cmp
jns
sbb
pop
pop
lds
fwait
cmp
sub
cmp
or
stos
imul
out
sub
mov
mov
push
lcall
push
insb
push
dec
bound
scas
shl
fs
push
ret
loop
jo
cmpsb
sub
sbb
dec
scas
sbb
push
cmp
lret
out
push
imul
neg
roll
adc
sub
and
xchg
movsl
add
mov
test
fnstsw
mov
adc
push
faddl
adc
insb
push
sbb
and
bound
xor
pop
jl
sahf
jae
mov
sub
rolb
xchg
in
jbe
test
imull
int
jo
daa
push
notl
inc
push
das
adc
frstor
ljmp
in
ret
xor
push
dec
inc
mov
mov
les
inc
jo
loop
push
sbb
xchg
or
add
inc
add
jecxz
cwtl
inc
xorl
rcrb
add
cmp
inc
xor
or
add
lock
sbb
sti
xor
dec
push
xor
inc
imul
or
mov
js
shll
add
fmull
xchg
popa
cmpsb
int3
idivl
pop
push
or
mov
jo
xorl
xchg
ret
adc
or
js
jo
imul
fbstp
or
inc
inc
cmpsl
push
shl
adc
adc
daa
andl
insl
dec
out
pushf
je
jo
in
cmpsl
incl
jne
push
or
push
or
push
popa
sbb
out
fsubrs
adc
sbb
fcomps
ss
popa
inc
add
adc
lret
xlat
mov
push
pop
fimuls
inc
mov
and
jo
fsubrs
cmp
data16
popa
jns
call
pusha
ss
jb
push
xor
adc
incb
or
and
adc
nop
inc
add
add
subl
add
push
and
test
pop
add
xorl
and
adc
ljmp
add
incl
mov
inc
add
adc
adc
nop
inc
add
add
subl
and
add
test
push
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
incl
inc
push
subl
push
add
adc
enter
nop
inc
add
add
push
add
and
inc
push
subl
inc
add
adc
mov
and
push
adc
stos
add
nop
adc
mov
mov
incl
and
test
push
add
subl
inc
add
sub
inc
call
push
and
test
pop
add
xorl
and
adc
pop
dec
adc
sub
adc
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
xchg
daa
sub
in
cmp
mov
mov
dec
sahf
negl
cmp
rcl
repz
jnp
iret
pop
or
sbb
ds
repz
pop
insb
jl
out
fcomi
xchg
movsb
mov
push
int3
push
in
repz
cld
adc
cmp
cmp
repz
adcb
repz
adc
out
sahf
cmpsl
and
inc
push
fs
out
sahf
jp
mov
int
jns
repnz
sub
cmp
repz
push
bound
iret
repz
sahf
scas
mov
cmp
ds
fiadds
cmp
iret
repz
jb
cwtl
mov
sahf
out
cmp
testb
sbb
jns
out
cmp
fs
out
sahf
out
mov
fdiv
iret
repz
or
xor
pusha
cmp
repz
mov
repz
cli
or
jns
out
dec
pusha
jo
sahf
out
sahf
pushf
lods
mov
iret
sarl
sbb
dec
pusha
repz
repz
movsb
mov
out
ds
loopne
add
sub
push
data16
mov
mov
cli
repz
repz
cmp
iret
repz
jo
cwtl
mov
fcomps
decb
pop
push
jns,pn
out
ds
pop
je
out
sahf
out
mov
shl
iret
repz
repnz
cs
pop
cmp
repz
jle
lods
mov
shl
repnz
push
cs
repz
push
push
xchg
stc
cmp
repz
pop
out
sahf
cmpsl
adc
cmp
sahf
out
sahf
jb
cwtl
scas
cmp
repz
add
sbb
dec
repz
repz
je
xchg
movsb
out
cmp
mov
add
out
sahf
adc
ds
data16
fsubp
jns
mov
pop
sahf
out
out
pop
push
es
jns
out
pop
insb
test
mov
pop
iret
repz
sub
push
bound
cmp
repz
mov
fdiv
iret
repz
push
and
dec
bound
repz
mov
iret
repz
out
or
sbb
jns
out
cmp
push
sahf
out
sahf
mov
cmp
sarl
push
cs
repz
repz
jbe
movsb
mov
sti
cmp
aam
hlt
arpl
cmp
repz
xor
pusha
jo
iret
repz
nop
cmpsb
mov
out
sahf
out
ds
and
dec
pop
jns
out
insb
jl
mov
out
loopne
push
gs
iret
repz
es
insb
jl
cmp
repz
mov
sahf
cmpsl
stc
or
xor
out
sahf
out
sbbb
sahf
shl
testb
push
cs
repz
push
fs
repz
repz
lods
mov
cmp
pushw
push
repz
repz
cmpsb
mov
out
ds
fsubr
add
sub
push
pusha
jo
xchg
jns
out
cmpsb
mov
fsubr
repz
out
adc
xor
repz
pop
push
sahf
out
cmp
out
add
sbb
jns
out
cmp
push
cwtl
out
sahf
out
mov
repz
or
dec
fs
iret
repz
movsb
mov
aam
lcall
sbb
out
sahf
out
pop
outsb
xchg
scas
fdiv
add
cmp
repz
cmp
jl
cmp
repz
jns
iret
lock
and
sahf
out
sahf
inc
push
data16
pushf
jo
out
mov
fsubr
iret
repz
mov
sbb
ds
fs
repz
mov
iret
repz
decb
jno
out
sahf
out
dec
pop
jb
sahf
out
sahf
lcall
iret
sarl
push
es
repz
repz
outsb
xchg
iret
fidivs
jb
push
sub
cmp
repz
pop
jo
xchg
iret
repz
cmpsb
mov
in
cld
sahf
out
ds
and
dec
pop
jns
out
jo
nop
mov
out
fsubr
clc
or
repz
sbb
inc
push
insb
jl
iret
repz
mov
sahf
out
cli
adc
cmp
jns
out
jle
sahf
scas
int
jns
mov
ja
cmp
repz
dec
pop
jb
repz
repz
mov
out
sahf
out
js
xor
sahf
out
sahf
push
out
out
aam
data16
push
xor
pop
jbe
sahf
scas
jl
out
fsubrp
decb
jp
cmp
shll
push
fs
repz
test
cmpsl
stc
cmp
add
adc
cmp
out
dec
pop
jb
sahf
lock
out
in
cld
jnp
repz
cmp
js
iret
repz
sahf
scas
mov
repz
add
xor
jns
out
jo
sahf
scas
int
jns
mov
jle
cmp
repz
inc
pop
push
repz
repz
cmpsb
mov
cmp
cmp
in
jle
jg
sub
push
repz
repz
xchg
stos
shlb
clc
or
sahf
cs
pop
insb
jl
jns
out
stos
mov
cmp
repz
iret
repz
outsb
test
out
cmp
decb
andb
sahf
out
dec
pop
push
xchg
out
sahf
out
mov
repz
cli
or
cmp
repz
adcb
repz
in
add
out
dec
pop
jb
sahf
out
sahf
lcall
iret
sarl
and
inc
pop
repz
repz
mov
fdiv
test
xchg
and
cmp
repz
jl
iret
sti
cmp
pushf
mov
loop
data16
push
sub
push
js
mov
out
cmp
testb
sbb
jns
out
inc
pop
jb
lcall
shl
cli
iret
repz
or
js
iret
repz
mov
lcall
push
ss
sahf
out
data16
mov
mov
mov
cmp
repz
dec
data16
repz
rep
mov
out
sahf
out
mov
sub
dec
sahf
out
sahf
pop
push
cwtl
scas
xor
out
out
push
lea
repz
repz
pop
insb
sbbb
lret
add
sbb
inc
pop
outsb
xchg
out
xchg
lods
repz
repz
iret
repz
push
data16
pushf
mov
out
repz
loopne
outsb
nop
push
iret
repz
sub
dec
pusha
js
cmp
repz
scas
aam
jns
cmpsl
stc
add
out
sahf
out
jb
cwtl
test
out
sahf
mov
adc
cmp
repz
cmp
push
pause
mov
jns
jmp
xchg
push
xchg
push
and
sahf
out
sahf
inc
pop
jb
sahf
mov
sahf
out
aam
hlt
add
repz
rcrl
inc
push
push
js
cwtl
test
aam
out
cmp
cli
adc
out
dec
pop
jo
cwtl
out
sahf
out
mov
repz
push
xchg
es
push
cmp
repz
mov
lcall
and
out
sahf
out
push
out
sahf
mov
fdivp
add
adc
iret
repz
xor
bound
cmp
repz
ds
push
cltd
push
ss
out
sahf
dec
data16
sahf
scas
jns
out
mov
cltd
lcall
cmp
fs
sahf
out
xchg
mov
cmp
out
or
repz
pusha
js
cwtl
test
sahf
out
cmp
in
add
jns
dec
pop
jb
out
sahf
out
stos
mov
ja
repnz
outsb
popf
push
xor
out
sahf
out
js
cmpsb
mov
aam
add
adc
xor
iret
repz
pusha
jo
cwtl
repz
repz
out
out
sahf
out
lahf
es
pop
sahf
out
sahf
insb
adcb
out
fdiv
fadds
adc
repz
sub
dec
pop
je
cmp
repz
stos
mov
out
ljmp
jns
out
fs
lcall
fsubr
add
sbb
iret
repz
inc
push
bound
cmp
repz
imul
mov
jns
dec
fs
stos
mov
lret
push
movsb
push
repz
repz
push
fs
repz
test
sahf
out
adc
jns
out
jo
pushf
lods
mov
int3
fdiv
or
and
repz
cmp
jb
mov
mov
cmpsl
jns
out
and
dec
pop
push
jle
sahf
mov
iret
sarl
cli
adc
iret
repz
push
nop
mov
mov
fdivp
or
sbb
dec
pop
outsb
sahf
out
sahf
xchg
dec
repz
or
sbb
inc
repz
repz
push
xchg
stos
cmpsl
stc
cmp
rcr
add
sahf
es
fs
jns
out
lods
aam
cld
repz
repz
and
inc
pop
iret
repz
je
xchg
stos
mov
cmp
testb
sbb
jns
out
dec
pop
jb
cwtl
out
sahf
out
cli
iret
repz
or
push
adcb
iret
repz
adc
sahf
out
pop
outsb
xchg
cmpsb
mov
into
mov
jns
ja
xor
bound
mov
dec
repz
add
cmp
repz
push
xchg
stos
mov
fidivl
es
repz
pop
insb
jl
repz
xchg
stos
mov
out
or
jns
out
insb
adcb
out
loopne
add
repz
repz
ss
outsb
andb
enter
iret
repz
inc
push
pop
push
je
nop
cmp
repz
movsb
mov
lret
iret
repz
clc
or
iret
repz
bound
repz
repz
ds
in
adc
jns
ss
pop
je
mov
mov
adc
rorb
or
add
test
push
add
subl
jg
outsl
and
stos
imul
out
xlat
sbb
jp
ret
rol
sub
sti
or
ljmp
mov
ret
or
xchg
out
xlat
and
andb
popa
inc
int3
fdivr
jmp
or
ss
xchg
dec
aad
fs
je
cmpsb
loopne
out
int3
test
push
lock
daa
insl
xchg
jmp
fwait
mull
repz
xchg
adc
cmp
jne
call
repz
das
lds
add
jmp
cmp
cmp
filds
mov
inc
lret
push
test
mov
inc
cmpsb
icebp
cmp
cmc
mov
jp
decl
scas
mov
cs
ja
add
orl
lds
rcll
mov
lcall
inc
push
fstpl
mov
adcb
jns
mov
xlat
inc
call
inc
divb
and
jo
mov
sub
test
sbb
sub
push
and
and
cld
nop
xchg
jmp
sub
hlt
push
lret
pop
shll
pop
dec
mov
mov
outsl
jp
inc
jge
mov
adc
add
or
mov
ljmp
adc
lret
je
lret
push
rcll
cltd
movsl
mov
adc
mov
inc
rol
pushl
inc
lret
in
les
jmp
das
mov
mov
int
push
out
dec
mov
stos
cmp
testb
lock
xchg
hlt
sub
push
imul
insl
test
mov
stc
adc
pop
lods
test
ljmp
out
stc
jmp
sbb
out
fwait
dec
cli
cmp
and
rolb
es
call
or
ljmp
dec
fldl
adc
loop
fldenv
push
jne
cmp
ret
cmp
push
aas
pop
cmp
imul
mov
mov
idiv
decl
mov
add
nop
stc
stos
dec
lds
mov
inc
dec
incl
mov
sbb
mov
fadds
mov
fsubp
mov
pop
out
fstpt
xchg
je
mov
and
jae
sub
mov
hlt
cmpsl
decl
xorb
lahf
in
outsb
inc
adc
pushf
push
lock
jp
out
popa
call
xchg
mov
repnz
add
sahf
loope
pop
in
in
jae
and
or
xchg
sahf
fwait
adc
dec
fcmovnbe
push
mov
lahf
out
mov
shll
insb
push
cmp
ljmp
ljmp
push
aas
mov
xchg
push
ret
pushl
cmp
or
sbb
cmp
stos
cmp
xchg
adc
ret
add
scas
lock
int3
aas
int3
inc
xchg
mov
xchg
insb
decl
lock
jae
popa
mov
imul
mul
sub
mov
mov
or
test
idiv
incl
insl
rcrb
andl
in
gs
xor
incl
xor
mov
or
jnp
xlat
pop
mov
or
rcrb
pushl
sarb
pop
mov
cmp
adc
xchg
imul
call
xor
cmpsb
fildl
sbb
je
dec
data16
out
sub
in
sarb
stc
insl
inc
cmpsb
or
mov
pusha
pop
sub
add
lods
xor
add
addr16
jmp
mov
dec
jge
push
enter
lahf
sub
pop
dec
push
fcompl
sub
loopne
jns
xchg
nop
xchg
movb
and
loop
cmpsl
movsl
clc
xchg
pop
mov
pop
push
leave
xlat
push
cli
inc
adc
ljmp
sbb
jnp
jns
mov
add
notb
mov
cld
add
xor
loopne
rcr
stc
dec
xor
pop
or
xchg
rorl
push
xchg
push
fldenv
lock
push
lret
sub
mov
lods
addl
lock
xchg
lods
sub
rolb
xchg
fucom
pop
dec
mov
cld
outsb
les
cmpsb
dec
push
loop
cltd
push
cli
fcomip
ljmp
mov
movsb
data16
popf
shrb
push
sbb
jg
js
gs
clc
and
cli
data16
repz
fistpll
incl
lock
repz
jmp
shl
adc
rolb
aaa
or
inc
jne
sub
fbld
js
mov
and
orb
icebp
push
into
push
cli
and
mov
lcall
rcrl
or
lahf
push
arpl
sbb
jl
fcompl
ret
imul
ret
ljmp
push
sub
add
sub
or
jle
xor
xchg
ret
inc
jl
pop
fisubs
xchg
cld
lcall
jb
mov
fs
repnz
ret
xor
mov
xor
mov
mov
push
sbb
or
mov
jmp
leave
imul
xchg
shr
std
cmp
loopne
lds
fdivp
cld
jbe
pop
mov
pusha
cs
ret
stc
add
das
fcomp
orl
icebp
rolb
pop
pop
shl
sub
outsb
fbstp
or
stc
movsl
call
scas
loop
lcall
das
jp
xor
inc
fcoml
orl
cmp
ljmp
xor
mov
mov
cmpsl
test
mov
decl
int3
or
sub
mov
clc
add
outsb
lret
sbb
push
in
dec
sar
lcall
jp
ja
sub
sbb
inc
push
enter
xchg
jmp
repnz
mov
jmp
int3
push
hlt
inc
sbb
dec
inc
imul
mov
lods
call
push
inc
icebp
js
insb
or
and
ljmp
pop
decl
fnsave
push
adc
mov
ret
in
mov
sbb
flds
enter
adc
mov
sbb
shl
xchg
mov
aaa
test
cmp
vsqrtps
std
adc
push
arpl
mov
addr16
imul
xor
xchg
adc
lcall
push
xchg
clc
lods
ds
dec
or
dec
cmp
sub
aam
cmpb
dec
scas
lea
lret
inc
and
push
xchg
mov
ss
jle
mov
dec
rorb
pop
lea
call
mov
mov
shll
out
mov
test
push
or
adc
adc
inc
cs
jae
imul
xlat
packuswb
add
fldt
pop
or
repz
aaa
inc
dec
test
add
sahf
inc
jo
aas
mov
pop
fs
cwtl
inc
mov
mov
fucom
call
mov
xchg
sub
xchg
imull
sbb
ret
sbb
fs
xchg
inc
popf
mov
decl
inc
fsubl
and
inc
popa
loopne
pop
fcmovb
pushf
call
sbb
sbb
sti
xlat
sti
es
in
in
sarb
lret
xchg
icebp
pop
mov
loopne
jecxz
ljmp
and
or
rcrl
sar
repnz
scas
nop
fprem
ljmp
lret
aaa
imul
push
inc
pop
xchg
adc
loope
rcr
pusha
in
jge
cs
jns
mov
pushf
sub
jo
and
ljmp
inc
loop
shrb
sub
and
and
insb
pop
pop
insl
int
nop
cmp
dec
gs
addl
dec
cs
mov
xchg
sbb
push
push
cmp
xor
mov
add
ds
inc
fcoms
push
jae
xor
aas
cmp
decl
sbb
or
stos
dec
ss
imul
popa
inc
cmp
lea
ljmp
lahf
sbb
adc
je
mov
clc
adc
shll
decl
push
adc
and
dec
loope
mov
cld
lcall
add
into
or
xor
cmp
or
and
add
xor
xlat
push
xchg
fnstenv
push
cld
fiadds
dec
adc
push
into
aas
cmpsl
mov
inc
pop
adc
push
jbe
xchg
das
mov
dec
xchg
cmp
movsl
jge
cmp
ljmp
das
das
jno
or
mov
cmpsb
xchg
mov
cmp
daa
ljmp
out
pushl
popf
dec
add
and
test
mov
in
cmp
cmpsb
out
push
shll
cmp
fdiv
ljmp
clc
cmp
fcmovnu
out
dec
cltd
movsb
scas
or
das
idivb
sahf
call
sub
xor
ret
sub
loopne
out
in
outsl
test
mov
ljmp
jg
xor
mov
dec
push
xchg
add
scas
lods
or
popa
in
cmp
and
decl
in
mov
insl
int3
push
cmc
xchg
rcrl
mov
cmp
pushf
or
imul
cmc
mov
stos
popf
push
int
stos
decl
jmp
idivb
jno
cltd
out
aad
xchg
sub
mov
iret
sbb
dec
frstor
subb
scas
dec
pushl
cmp
sbb
clc
sub
sar
mov
lret
add
les
lods
test
test
movb
inc
mov
xchg
inc
mov
mov
or
mov
aas
lahf
cmc
dec
call
sbb
mov
pop
decl
stos
lea
push
mov
mov
hlt
aaa
inc
mov
jmp
ss
mov
cltd
mov
lods
fadds
outsb
lods
push
or
sub
repz
scas
ss
movsb
jmp
or
je
pop
loop
sbbb
adc
inc
decl
lock
sarb
sbb
sub
lods
mov
pushl
cwtl
adc
push
adc
repz
lret
insb
xchg
inc
test
push
sub
mov
decl
cmpsl
mov
scas
in
adc
push
mov
xchg
cmc
xchg
repnz
fisubrl
pop
call
std
pop
cmc
and
add
dec
jmp
lods
lods
sub
rcrb
inc
cmp
mov
pop
test
outsb
nop
aas
cmpsb
cmp
stc
pop
gs
imul
aad
pop
hlt
jmp
fucomp
orb
out
add
cmp
jge
pushl
std
jne
adc
sbb
mov
sbb
sbb
into
insl
sbb
aaa
mov
in
repnz
pop
jmp
mov
jg
cmpsl
scas
pop
movsb
rorb
loope
cmpsb
std
and
aad
insb
fabs
sti
cmp
mov
ret
inc
ror
add
jecxz
xchg
bound
or
scas
lds
xor
data16
jbe
xor
fcomip
call
aas
mov
jno
xchg
push
mov
mov
sbb
mov
cmp
sbb
mov
or
lcall
ret
mov
jg
clc
lcall
icebp
daa
mov
out
xchg
stc
in
push
es
dec
xor
mov
pushl
inc
pusha
scas
mov
jae
hlt
push
sbb
jecxz
jmp
sar
jae
and
pushl
sbb
push
adc
popa
push
test
adc
ljmp
fisubs
cld
mov
fdivrs
dec
enter
mov
jbe
sbb
lret
jb
scas
cs
aam
dec
loopne
adc
int
lcall
mov
xor
mov
mov
mov
cmp
jo
call
out
xorb
data16
add
out
aam
lea
or
lret
mov
mov
xchg
imul
ds
push
dec
in
cmpsb
dec
test
fst
or
scas
xchg
jbe
mov
call
sub
push
gs
xchg
outsl
or
jnp
pop
jecxz
push
hlt
pop
mov
jmp
mov
fwait
pop
push
dec
add
dec
sub
ss
js
lcall
lcall
ret
add
out
aaa
xchg
loop
jne
cmpsb
xchg
jecxz
fstl
add
pop
mov
and
pop
sbb
jb
mov
lcall
outsl
mov
mov
sub
dec
jge
jmp
jne
pop
hlt
jmp
and
dec
arpl
xor
jo
aad
es
pop
clc
incl
mov
lds
mov
and
cwtl
add
mov
push
fstl
sub
cld
mov
push
mov
jne
cmc
cmpsb
add
data16
outsl
sbb
gs
scas
inc
xchg
jge
inc
aaa
sti
sbb
and
dec
jne
xor
xchg
xor
jge
and
adc
mov
std
xor
mov
decl
cmp
mov
xchg
mov
jae
mov
and
imul
popa
dec
lea
mov
pushl
mov
out
iret
pusha
test
pop
sbb
pop
fcompl
jno
cmp
ljmp
sbb
or
repnz
in
add
inc
cmpl
sbb
adc
je,pt
mov
mov
dec
sub
lods
fnstcw
mov
jl
ficoml
in
and
decl
xor
inc
lea
lock
lret
jne
test
das
ja
iret
dec
mov
pop
mov
cmp
dec
rclb
call
or
in
mov
call
loope
xchg
ja
loop
inc
xchg
mov
loop
or
mov
pop
out
inc
jmp
cld
in
jo
cli
or
gs
or
mov
je
data16
outsb
andb
shrb
sub
push
inc
sub
inc
sub
dec
or
xor
call
rcr
push
test
jnp
ja
adc
pop
inc
mov
xor
lcall
decl
stc
mov
mov
mov
mov
call
cli
test
decl
mov
subl
jns
sahf
xchg
xchg
and
int3
pop
pop
xor
stc
in
div
dec
xchg
sahf
pop
mov
out
inc
lea
in
cmp
imul
out
out
orb
xlat
xor
insl
jns
push
cmp
insl
xchg
clc
inc
xor
xchg
mov
fwait
adc
fcomip
decl
cmpsb
push
scas
mov
sub
leave
sbb
mov
dec
sub
fcoml
sti
std
sub
sbb
pop
xchg
enter
and
lcall
cmp
inc
mov
sub
adc
shrl
lock
dec
pushl
inc
rcll
pop
jbe
mov
rcll
in
inc
adc
jb
decl
lods
mov
mov
adcl
bound
xchg
mov
inc
leave
push
sbb
incl
dec
or
and
fxtract
mov
jno
rolb
insl
test
popa
xchg
out
dec
js
adc
in
cld
das
rclb
pushf
jnp
js
inc
aam
ds
popf
call
cld
lcall
xchg
sbbl
out
or
int3
lea
jno
ljmp
rcll
cwtl
push
jbe
addl
push
aas
xorl
cmp
cltd
ret
sti
dec
or
mov
gs
mov
fnsetpm(287
cmp
in
rcll
popa
cmpsb
sbb
ljmp
shlb
xchg
subl
pop
or
orb
mov
jb
ror
scas
cmc
mov
arpl
add
lcall
das
clc
sub
dec
xchg
daa
leave
dec
jns
in
push
sub
add
decl
jecxz
bound
sbb
xchg
xor
out
and
sahf
mov
pop
dec
int3
pop
dec
mov
nop
jno
jae
repz
add
orb
inc
pop
xor
cmpsl
mov
push
and
loopne
adc
sbb
lcall
adc
pop
jnp
xchg
data16
outsb
dec
mov
loope
pop
sub
incl
push
es
mov
xor
fsubl
mov
adc
pop
xchg
mov
call
mov
push
pop
pop
jle
mov
xchg
stos
call
aaa
pop
pop
into
stos
jecxz
sbb
call
cltd
decb
aaa
std
dec
adcl
pop
adc
rclb
cmp
outsl
dec
lds
decl
daa
cltd
nop
and
cmc
sub
xor
inc
pop
fisubl
popa
dec
cmpsl
lock
incl
data16
in
cmc
out
add
fprem
and
outsl
iret
sbb
aas
jg
or
lock
mov
sahf
gs
mov
xor
mov
pop
icebp
or
mov
mov
daa
sub
mov
jns
adc
pushf
scas
cli
mov
out
xor
test
xchg
xor
dec
or
adc
hlt
jp
ljmp
dec
movsb
jns
push
cmc
adc
cmp
mov
negl
push
in
sbb
arpl
mov
jo
push
loope
add
pop
pop
or
lahf
inc
dec
add
adc
pushl
shrl
stos
scas
jp
jle
into
hlt
lods
fimuls
sbb
aas
mov
mov
cmp
ret
jmp
sub
mov
das
ret
fdivr
incl
adc
aas
ss
sub
add
inc
mov
repz
pop
xor
mov
in
in
pop
pop
in
scas
xchg
mov
insl
mov
mov
call
cld
das
sar
xor
int
inc
mov
out
mov
or
fsts
addr16
lret
in
dec
insb
loope
ljmp
call
nop
ja
inc
scas
dec
or
test
iret
roll
or
mov
sbb
ja
mov
mov
pop
js
mov
jg
add
loopne
fcos
jmp
int3
test
in
je
scas
cltd
pop
into
in
imul
popa
out
scas
outsl
jne
lcall
decl
sbb
xchg
pop
mov
jne
pop
mov
ficoml
push
cmp
cmpb
mov
ja
mov
movl
shll
add
decl
icebp
cmpsb
insl
fistps
sub
sbb
lods
mov
mov
lock
ja
inc
mov
imul
mov
sub
cld
leave
dec
popf
cmp
inc
sti
stc
cmpsl
add
sbb
cmp
cmpsl
cmp
daa
sbb
js
insl
cwtl
and
push
mov
ljmp
aaa
stos
fistpl
cwtl
ror
sub
dec
sar
fwait
cmpsb
xchg
cmpsl
aas
test
lcall
mov
inc
lret
loopne
repnz
jg
cmpsl
push
add
rcrb
sbb
das
jge
test
mov
cmpsl
mov
ds
and
stos
pop
pusha
push
pop
arpl
pushl
fdivrs
add
mov
jae
push
std
adc
mov
stos
fnstcw
sbbb
cli
decl
cld
addb
fiadds
xor
ss
dec
stos
add
lcall
test
xor
mov
inc
mov
pop
shl
stc
les
sub
loope
mov
popf
pop
sub
out
ss
int3
jl
add
aaa
movsb
aas
xchg
popa
dec
sbb
scas
jbe
jnp
mov
pop
sbb
pushf
xchg
pop
cwtl
jle
xchg
add
push
andb
das
repnz
mov
in
stc
mov
adc
loopne
sbb
cmpsb
or
loope
push
inc
mov
xchg
or
dec
es
loopne
jb
sbb
repz
mov
out
pop
xchg
lcall
repz
mov
lods
xor
add
and
xor
cwtl
loop
jmp
dec
pop
dec
or
push
xchg
test
call
cmp
mov
loope
je
daa
ud0
ljmp
cli
pushl
call
daa
insb
or
and
lret
rcr
das
and
ljmp
push
in
xor
jmp
rolb
adc
cmpsb
mov
jp
pop
outsb
imul
pop
jge
mov
push
rcrl
std
popa
enter
pushl
cwtl
int3
adc
add
pop
movsb
jbe
insl
outsl
or
ds
mov
jo
ss
mov
mov
clc
ljmp
adc
mov
lret
decl
roll
or
lods
sbb
sbb
add
and
out
popf
int3
mov
add
aas
insl
incl
adc
fimull
lahf
inc
or
push
fcompl
les
mov
fucomp
push
incl
jno
clc
fsubr
pop
mov
jle
sbb
arpl
dec
add
lods
shl
mov
subl
aad
push
aas
mov
xchg
ficompl
or
sub
js
jg
push
aam
inc
in
cmpl
dec
mov
mov
jecxz
dec
cmp
call
rclb
dec
ror
inc
dec
add
pop
ja
imull
xlat
cmp
inc
inc
xchg
push
lcall
mov
ret
sahf
ljmp
lahf
cmp
mov
out
sbbl
mov
push
aam
inc
rcrl
add
or
adc
out
sbb
pop
call
std
ljmp
adc
jns
pop
shlb
mov
jmp
movsl
dec
adc
iret
cmpsb
lcall
xor
das
popf
xor
fisttpl
sub
xchg
adc
mov
push
mov
ljmp
pop
mov
ret
bound
and
cmp
repnz
inc
aaa
enter
xchg
lcall
pushl
add
mov
inc
cmp
inc
push
pusha
cmp
sub
jmp
leave
adc
or
pop
aas
and
gs
popf
sbb
js
sbb
lret
jg
decl
and
icebp
adc
dec
aad
icebp
pop
jge
std
out
jl
sbb
mov
dec
adc
mov
xchg
inc
or
cmp
imul
fistpll
mov
add
inc
test
incl
pop
lea
mov
pop
icebp
mov
xor
sub
cltd
pop
call
movsl
add
mov
cltd
inc
pusha
loop
repnz
fcoml
push
andl
lcall
scas
stos
xchg
addr16
js
jp
push
fdivrl
cmp
out
or
das
xor
inc
mov
cmp
lods
into
or
test
jl
incl
pop
ljmp
das
es
push
jmp
add
arpl
sub
push
jg
pushl
imull
int
pop
movsb
pop
push
inc
mov
rcrb
mov
mov
jae
imul
pop
push
and
pop
sti
repz
outsb
mov
jne
call
add
sub
out
pop
jae
pop
dec
rolb
ficoml
mov
leave
sub
call
loopne
cmc
lret
not
stc
adc
lret
mov
xor
or
call
xor
stos
arpl
cmp
dec
andb
int3
mov
inc
push
inc
cli
fisttps
mov
imul
xchg
icebp
cmpb
loope
int
bound
je
call
add
aam
add
mov
push
add
sub
lcall
dec
nop
shrl
inc
mov
jmp
and
fdiv
daa
dec
call
out
fdiv
cs
adc
clc
mov
or
push
ret
add
mov
imul
pop
out
aaa
cld
mov
cmp
sbb
xchg
pop
shrb
add
enter
xchg
cltd
pushf
out
ljmp
mov
daa
popf
mov
mov
pushf
inc
in
mov
or
pop
dec
inc
js
mov
push
outsl
iret
int
pop
mov
pop
in
mov
ljmp
jo
and
and
arpl
mov
push
ja
fcomip
mov
cwtl
pop
clc
xor
outsl
pushf
fstl
or
decl
cmc
test
mov
xchg
mov
loopne
rorl
or
fwait
cs
dec
mov
cs
popf
jo
add
repnz
stc
dec
cli
sub
dec
jg
leave
lcall
decl
jmp
fistpl
imul
push
cld
push
mov
fcomip
ret
rol
call
stc
mov
aam
cmc
scas
cmc
add
push
clc
imul
jae
pop
in
loopne
dec
and
mull
mov
je
mov
xor
jmp
dec
repnz
dec
gs
gs
jne,pt
sub
in
cli
int
outsl
and
lds
mov
mov
cmp
jns
adc
stc
mov
icebp
pop
mov
jnp
pop
or
hlt
call
loop
aam
xor
xor
aad
jg
cmc
ljmp
out
xchg
lcall
or
sbb
in
sbb
fnstcw
test
ss
mov
incl
lret
sbb
aas
cld
dec
loop
jo
dec
xor
ret
lods
push
pop
repnz
insb
test
pop
and
mov
out
inc
jbe
in
pop
pop
lock
lcall
xor
js
xor
incl
sub
xchg
or
jne
mov
inc
lods
adc
aam
mov
xorb
scas
push
jle
mov
fildll
ljmp
cli
scas
lods
jg
notb
jge
or
rcrb
dec
ljmp
inc
xchg
lcall
dec
addb
xor
test
pushl
test
mov
test
rolb
fldcw
jp
cmp
lret
jl
movsl
jbe
call
loopne
insl
lcall
fidivl
dec
iret
mov
dec
jmp
lds
je
cwtl
push
lcall
push
popf
pushf
push
mov
lds
dec
js
dec
jnp
enter
clc
jmp
insb
push
rol
jmp
daa
add
xor
push
dec
sub
xor
and
pop
call
pusha
call
jle
rclb
jecxz
and
lock
movsl
xor
pop
or
insb
or
mov
xor
push
loope
xchg
xor
rcrl
cmpsb
push
loop
jmp
jp
fdivl
fstps
xchg
cmpsb
push
aaa
push
into
push
jge
decb
repz
mov
mov
popf
xchg
push
push
mov
xchg
repnz
or
mov
sub
xor
bound
pop
push
cmp
std
testl
js
mov
shlb
mov
ljmp
lret
outsl
incl
sub
lods
rorl
jb
lret
stos
sbb
lahf
gs
cmp
call
incl
mov
fildll
pop
enter
xchg
arpl
and
decb
jecxz
push
call
incl
pop
inc
add
int
inc
mov
mov
out
clc
pop
mov
divb
stos
std
adc
and
pop
jne
sbb
jg
fildl
and
add
jne
das
add
call
pusha
rol
cli
mov
js
mov
pop
sbb
lods
iret
lcall
sub
cmp
std
fimuls
sub
mov
jp
aam
sub
addb
ljmp
dec
popf
outsb
jle
stos
mov
outsl
hlt
or
lahf
dec
pop
inc
addr16
adc
sub
cltd
fdivrp
call
loope
xor
sub
add
jp
dec
gs
xchg
cmp
add
call
iret
imul
fcompl
lock
faddl
push
or
adc
fldenv
sahf
lcall
lahf
test
out
push
je
mov
inc
es
ja
gs
lods
repnz
dec
cmp
jg
mov
xor
sahf
std
ss
xchg
roll
sub
add
inc
mov
repnz
aas
mov
sub
cmpsb
in
fldl
ficoms
push
sbb
cltd
call
clc
sbb
cld
sub
sbbl
call
jg
arpl
mov
sub
aad
jae
jmp
in
out
jae
cmp
or
cmp
sub
cmp
fimull
popf
inc
stos
mov
aaa
ror
rorb
ds
cmc
call
mov
fistpl
dec
fisubl
cmp
sub
mov
dec
adc
movsb
push
faddl
dec
mov
or
add
sbb
ja
and
jno
and
cmp
decl
pop
aas
dec
xchg
sub
xor
xchg
cltd
add
ss
test
daa
push
inc
jg
call
sub
lods
mov
ret
stos
and
out
and
je
jnp
jae
jns
sbb
rorb
aad
ljmp
xchg
aam
enter
pop
xchg
mov
fsubl
jns
mov
inc
xor
icebp
cmpsb
lods
jge
insb
sbb
or
orl
adcl
lcall
aam
lea
fs
iret
cs
mov
leave
repz
dec
clc
lahf
stos
insl
push
jns
test
cmpsl
add
adcb
loopne
gs
clc
ljmp
xchg
xlat
mov
push
insb
jp
jg
pop
dec
push
jg
pop
inc
cmp
bound
sahf
xchg
or
loopne
lcall
scas
leave
jp
decb
aaa
std
jmp
aas
je
xor
add
pop
sub
call
inc
dec
mov
lock
cwtl
cli
repnz
out
cs
mov
lret
lock
pushl
lods
into
das
sti
lret
or
cmp
jbe
inc
push
inc
xchg
and
int3
lcall
xor
dec
dec
rorb
and
pushf
mov
and
decb
xlat
sti
insl
cmp
jp
sub
xchg
inc
push
and
incl
outsb
fsubrs
repnz
cmp
adc
xchg
push
pop
dec
adc
call
repnz
jmp
jmp
jo
inc
xchg
scas
xchg
dec
ds
sbb
pop
add
test
mov
xchg
test
push
imul
ljmp
sub
bound
mov
imul
xchg
push
stc
mov
out
jl
mov
js
dec
push
aam
push
out
sbb
repnz
jg
jae
adc
pop
outsb
jo
ds
mov
lret
jno
or
movsl
or
pushl
imul
jb
scas
rcr
orl
dec
out
pop
repnz
jns
repz
std
add
inc
imul
test
dec
xor
push
iret
push
popf
xor
fisttpl
lea
bndstx
sar
incl
or
add
xor
lds
xchg
xor
dec
cmpsl
andl
ljmp
mov
inc
rcll
mov
outsl
sbb
clc
movsl
xor
jle
das
imul
fldcw
andl
cli
adc
lret
test
enter
adc
ja
push
stc
lods
xor
mov
jbe
testb
or
jns
jecxz
push
mov
xchg
enter
or
lcall
mov
enter
mov
das
mov
and
mov
xchg
rol
pushl
and
dec
add
popa
cmc
pop
out
iret
mov
pop
lds
sub
mov
imul
aad
in
es
jo
filds
inc
mov
lock
lret
cld
pushl
cld
incl
popa
xchg
pop
stc
and
push
std
ret
jbe
push
into
mov
push
jae
sbb
pop
sub
in
call
xchg
imul
idivl
sub
cli
mov
xchg
decl
and
cld
or
mov
inc
cmpsl
out
dec
push
pop
aaa
rcl
in
pop
inc
add
ljmp
inc
stos
cmp
xor
sub
xor
imul
fstl
call
xor
jno
dec
int
and
cld
lahf
xor
xor
incl
xchg
fucom
je
rep
adc
cmpsb
push
and
fs
movsb
ret
cwtl
xchg
lods
fisttps
adc
nop
adc
pop
pop
aas
ljmp
enter
mov
fisttps
jle
xchg
xor
sti
ja
mov
sarl
lods
sub
adc
jg
mov
loop
and
cmpsl
or
jne
jae
aas
in
stos
out
das
fstpt
mov
sti
imul
push
repnz
jg
push
mov
cli
dec
stos
push
stc
rcl
and
mov
and
arpl
mov
xor
je
adc
adc
add
push
cmp
mov
pop
cwtl
lock
mov
inc
push
int
dec
aas
outsl
mov
lcall
loopne
xchg
gs
cmp
fisubrl
sbb
daa
push
adc
push
in
inc
push
inc
mov
addr16
decl
xor
xor
incb
xor
cld
fwait
push
lods
xor
iret
jp
leave
push
pop
lcall
lock
into
push
repz
lcall
pop
ds
repz
dec
adc
ret
mov
sub
jns
fcmovnu
fsubs
pop
je
std
xor
ret
test
push
fsts
mov
jg
jo
popa
pop
jmp
lret
arpl
xlat
movsb
jmp
sbb
call
push
xor
or
aam
and
mov
outsl
cmp
push
pop
lcall
mov
sbb
push
lods
fsts
pop
jae
clc
lcall
ja
decl
mov
adc
sti
and
push
imul
sub
add
xchg
lcall
scas
jbe
into
out
out
loopne
sbb
or
mov
push
cmp
sbb
lcall
imul
jecxz
dec
mov
xchg
xchg
insb
aad
int3
jno
push
add
pop
test
xor
jp
cld
push
andb
mov
ljmp
incl
shl
jmp
pop
loopne
sti
sbb
pop
lahf
mov
dec
pushl
subb
push
xchg
test
jg
test
mov
adc
jecxz
pop
pop
test
mov
sbbl
mov
ljmp
cli
pop
pop
push
adc
lahf
xchg
daa
push
add
jge
jb
push
xchg
adc
pop
or
jmp
push
add
fsubr
dec
sbb
insb
xor
sbb
es
retw
push
mov
aaa
lcall
pushl
js
push
mov
mov
orb
arpl
sub
or
or
jle
lcall
lock
mov
imul
shl
lret
stos
fldl
out
fstpl
push
jg
imul
or
dec
xchg
int3
add
stc
jge
pop
and
repnz
ljmp
nop
sub
xor
mov
stos
and
sti
out
add
and
aad
sar
in
pop
push
cwtl
mov
or
add
clc
ja
inc
arpl
sub
xchg
jmp
jle
sub
push
mov
push
pop
aam
adc
loop
aad
push
jp
sub
dec
pop
dec
out
aas
sbb
lahf
pop
dec
xlat
arpl
flds
dec
pop
cld
push
jg
push
jl
dec
or
sbb
cli
lods
ljmp
jmp
das
sbb
xor
sbb
xchg
sarl
jb
movsl
cmp
cmc
ljmp
xor
sarl
pop
jae
rol
sub
ret
in
jne
test
ret
sub
pushl
xor
pop
loop
jo
or
jp
popf
lea
shlb
in
cwtl
lret
adc
lcall
push
jae
scas
adc
cs
leave
mov
dec
clc
jl
gs
mov
fsin
cmp
lret
pushl
or
cli
adc
sbb
inc
cmpsl
lret
sbb
sub
icebp
dec
mov
mov
repz
std
lcall
dec
test
scas
jo
mov
sahf
das
and
in
xor
lcall
inc
faddl
fistpll
aam
adc
data16
push
push
xchg
subb
enter
call
icebp
and
jl
aam
lock
sbb
movsb
push
xlat
movsl
pop
fwait
imul
nop
sar
lcall
cmp
add
ret
sti
mov
lahf
sub
adc
call
sub
out
xorb
dec
aaa
mov
mov
imul
or
push
cwtl
lods
or
and
call
pop
cltd
test
enter
dec
lahf
divb
lcall
push
loopne
cmpsl
xchg
push
jne
cmp
aam
cmp
out
jne
push
sbb
dec
mov
adc
roll
imul
jge
push
push
mov
cmp
mov
mov
and
inc
mov
pushl
icebp
xlat
lret
mov
dec
leave
jp
jae
hlt
movsl
adc
int3
mov
fucomi
les
ljmp
pop
and
add
xchg
mov
lcall
xlat
loop
jecxz
add
jmp
call
jmp
adc
shrb
inc
cli
mov
pop
mov
repnz
cmp
dec
sbbl
aam
mov
and
cmp
mov
adc
lcall
ljmp
mov
in
and
push
mov
pusha
loopne
add
fbstp
cmp
ljmp
sub
cld
sub
push
push
out
in
cld
out
std
xor
cld
out
xor
rorb
xchg
sbb
decl
lock
jmp
cmpsl
xchg
mov
cltd
subb
ljmp
imul
inc
or
jmp
or
adc
or
fwait
jb
sbb
xlat
ljmp
mov
iret
pop
and
ret
push
xor
cli
xor
arpl
mov
inc
xorb
cltd
jg
mov
daa
sbb
sub
mov
mov
mov
les
jns
xchg
mov
and
int
adc
inc
in
pop
stos
cmpsl
enter
pushl
repnz
test
mov
mov
enter
xor
ja
mov
pushl
xor
push
in
loopne
iret
adc
jno
sbb
out
js
fs
in
adc
xchg
lods
shr
xchg
repz
add
mov
mov
lahf
fsubrl
or
dec
pop
cmp
ffree
or
decl
jmp
lock
jae,pn
roll
enter
in
movsb
push
push
push
dec
adc
pusha
mov
push
cld
pushl
jno
insb
dec
daa
adc
movsb
or
adc
dec
lcall
bound
in
enter
or
or
add
stos
aad
jne
ja
pushl
mov
push
xchg
dec
fdivl
cmp
and
mov
mov
pop
out
cmc
and
sbb
push
ret
push
arpl
je
jnp
dec
fnsave
push
fs
loope
sti
add
in
outsl
into
ss
push
and
sbb
fidivrl
test
gs
mov
lods
adc
pushl
loope
shlb
push
int3
fadd
lea
iret
jecxz,pn
jns
aas
mov
dec
jecxz
into
inc
lock
fstpl
mov
xlat
xchg
sub
stc
lret
mov
pop
outsb
inc
add
lds
mov
inc
popf
cli
data16
adc
sbb
cli
fs
mov
lret
dec
or
ja
test
add
fisttps
add
fisubs
mov
incl
push
stc
cmp
sbb
pop
jp
std
or
std
adc
xor
in
mov
lret
imul
cmp
sub
mov
inc
sar
xchg
cmp
call
jle
mov
jmp
test
insb
xor
outsb
mov
icebp
ja
mov
mov
sbb
sahf
add
mov
fstpl
xchg
push
pop
shll
aam
testl
jnp
dec
jl
das
add
xor
jp
popf
fdivp
call
enter
push
jbe
outsl
adc
pop
cld
incl
mov
cli
mov
imul
in
or
jmp
int
incl
jno
int3
pushf
adc
sahf
dec
sub
adc
mov
call
adc
push
icebp
xchg
xchg
mov
xchg
xchg
ss
lret
mov
aad
and
push
test
inc
xor
rcrb
pusha
ljmp
fs
dec
pop
movsl
sbb
or
lcall
shlb
fnstenv
inc
movsb
mov
or
decl
mov
cmp
js
xor
lds
je
pop
mov
jp
cmp
xchg
inc
ficomps
pop
mov
push
fildll
inc
pop
mov
sbb
adc
enter
incl
outsl
nop
push
add
aam
add
rcrl
divb
push
pop
pop
sub
jg
fildl
outsl
push
mov
or
xchg
push
dec
xchg
xlat
push
mov
dec
ror
jae
adc
inc
pop
xor
adc
push
push
mov
jmp
enter
div
dec
sbb
sti
fndisi(8087
das
dec
or
dec
sbb
nop
les
cmp
push
icebp
mov
sahf
mov
adc
sarb
mov
sbb
push
inc
scas
pop
test
sub
xchg
jo
call
rcr
jl
fucom
dec
inc
adc
inc
out
lcall
mov
sbb
shlb
je
shr
shll
mov
sbb
repnz
rcrb
in
shl
cld
pushl
jmp
aas
mov
pusha
sarb
shll
dec
mov
mov
jb
out
les
add
cmpsl
adc
ljmp
add
pop
push
aad
enter
fdivrs
das
mov
es
fmuls
test
dec
scas
clc
dec
inc
bound
adc
xor
mov
dec
xlat
and
insb
repz
ljmp
js
call
sbb
xchg
xchg
push
jo
cwtl
cmp
push
push
mov
arpl
lcall
das
movsl
stc
mov
insb
in
aam
test
sub
adc
lock
cld
call
jns
sahf
call
push
add
leave
lods
test
adc
incb
jmp
ret
hlt
sbb
adc
test
sbb
xlat
stos
test
sbb
scas
out
dec
xchg
movsb
fcomip
lcall
fisttpll
or
lea
or
pop
fcomi
icebp
out
jmp
bound
repz
mov
fisubrs
sbb
sbb
dec
xchg
xor
cmc
leave
pop
repz
xor
mov
jb
jle
std
in
jmp
sar
lcall
and
push
sub
dec
cltd
adc
ljmp
icebp
xchg
sub
call
mov
cmc
sti
adc
stc
into
daa
test
fiadds
enter
ljmp
ljmp
push
std
mov
stos
lds
mov
mov
outsb
mov
jle,pn
jmp
mov
in
aas
fs
out
popa
jge
aaa
lret
pop
push
fisttpl
lds
int3
push
dec
mov
jl
lret
xor
stc
cmp
pop
stos
call
call
sub
lods
jnp
sbb
sub
sub
sub
lahf
in
adc
incl
jge
push
pop
lods
shlb
daa
clc
or
dec
dec
and
outsb
div
cmp
sar
push
iret
movb
repnz
push
fimull
fnsave
aam
xlat
pop
cwtl
out
adc
test
cmpsb
xchg
adc
fcos
call
and
inc
pusha
adc
bound
lcall
cmp
pop
push
xorl
sti
and
shll
andl
mov
call
add
leave
daa
inc
mov
and
push
xchg
and
fildl
decl
outsb
xchg
les
imul
repz
lret
repz
std
scas
pop
inc
shrl
ficompl
push
cld
xor
dec
mov
aaa
cmp
movsb
jg
stos
jecxz
je
lcall
cli
decl
jne
fimuls
mov
filds
xchg
inc
sub
fsubrl
push
mov
aam
and
out
ficoml
ds
sub
lret
sbb
sbbl
pop
outsl
insb
fldcw
jmp
mov
pop
incl
pop
lods
lock
aam
inc
jne
sbb
add
out
sbb
call
pop
mov
mov
decl
repnz
icebp
cwtl
rclb
pop
test
add
incl
xlat
lock
or
repnz
pop
cli
sbb
das
xor
or
lcall
mov
xor
rdtsc
add
cmp
ja
xchg
movsl
lock
push
jl
daa
add
push
inc
or
es
or
push
jnp
xchg
sarl
fildl
test
hlt
pop
jle
push
lret
lods
dec
jge
jne
xchg
and
lret
mov
push
cld
lcall
adcl
popf
into
jge
and
xor
rcrl
pushl
rclb
push
push
push
dec
xor
xor
xchg
stos
inc
inc
ja
mov
sbb
sbb
sub
decl
cmc
add
repz
aad
cmp
push
push
lahf
cmp
jmp
cmp
faddp
mov
hlt
lcall
daa
mov
pop
sub
xchg
fs
inc
lahf
arpl
filds
repnz
push
outsb
xchg
sti
xor
mov
xor
dec
outsb
gs
jnp
shrb
les
sbb
aaa
dec
das
ja
mov
xchg
pop
mov
mov
mov
ffreep
cs
call
in
xlat
push
aas
xchg
test
ret
repnz
int
pop
xchg
sbbb
push
cmp
jmp
push
std
call
sbb
adc
mov
pop
xchg
decl
xchg
js
mov
in
add
and
lcall
pushl
sub
jbe
iret
into
gs
add
sub
or
icebp
sub
notl
mov
movsl
shlb
add
test
sti
out
test
jge
mov
incl
cltd
push
sbb
and
fidivrs
cmp
adc
out
add
jmp
ja
inc
mov
call
xor
dec
fnstenv
xchg
xor
inc
nop
mov
fs
lods
pop
push
xchg
fs
loope
clc
sbb
and
pop
or
jmp
mov
stos
cs
cmp
es
mov
jg
xchg
push
sbb
bound
aam
adc
mov
je
aaa
enter
movsl
hlt
inc
inc
cmpsb
push
pop
mov
data16
call
mov
lahf
and
jp
fldln2
enter
lahf
mov
fidivl
pushl
mov
cltd
cmc
pcmpgtd
inc
mov
adc
mov
xor
je
fistpll
push
loopne
fisttpl
inc
jle
sbb
test
insl
pop
sub
gs
shl
add
or
mov
mov
addr16
sti
loop
mov
inc
xchg
fucomip
or
out
dec
mov
ror
and
call
loop
adc
dec
xor
int3
cmp
adc
jmp
or
call
cmp
sti
pusha
fsubrs
sbb
ds
mov
jmp
out
sub
push
pushl
pushf
js
sub
punpckhdq
lcall
xchg
or
mov
sub
xor
dec
push
std
call
sbb
adc
mov
sub
inc
in
outsb
jae
ljmp
xchg
mov
cmp
mov
outsl
lods
push
add
cmp
mov
push
mov
jecxz
push
pop
out
xor
loopne
repz
das
adc
shll
jo
xchg
sbb
or
ljmp
push
mov
orl
lret
les
sub
cld
fildl
decl
out
jns
rorl
test
out
insb
xor
and
lcall
insb
adc
xor
fwait
leave
mov
dec
enter
or
mov
sbb
decl
pop
mov
or
fwait
aad
push
mov
jb
in
incl
mov
add
push
dec
pop
push
mov
mov
dec
pusha
cmpsb
inc
and
stos
pop
and
jns
mov
pop
test
dec
mov
rcl
dec
popl
add
pop
xor
xor
sbb
add
inc
pop
popf
push
inc
dec
push
lcall
and
sub
hlt
mov
sbb
jg
repz
ss
test
jbe
sbb
out
cmp
sub
mov
pop
sahf
fdivl
fcmovnb
sub
pop
test
mov
mov
mov
loopne
cmpsl
nop
push
sub
incl
pop
nop
aaa
aad
aad
cmp
enter
cmc
adcl
jg
jge
jmp
mov
push
repnz
test
xchg
movsb
mov
inc
push
sbb
sub
call
loopne
out
push
adcb
sbb
leave
jno,pt
cmp
cmp
jmp
mov
pusha
out
or
std
popf
pop
in
je
pop
cmp
popa
sarb
xchg
lods
sti
dec
fwait
sbb
mov
out
mov
pop
enter
inc
xor
pusha
fsubl
jg
sahf
cmpsb
loope
and
insb
out
inc
ficoml
iret
jge
int
test
cmpsl
stc
push
in
loope
in
incl
scas
mov
sub
sub
loope
leave
popa
jbe
int
add
insb
loop
loope
mov
mov
adc
adc
sub
imul
lahf
mov
cmp
dec
cld
dec
stos
enter
push
mov
jnp
push
or
jge
mov
jge
repnz
jae
mov
call
or
sar
xor
fistl
xchg
loopne
mov
ljmp
shl
popa
in
outsb
mov
pop
push
lods
in
popa
subb
fimull
pop
ja
arpl
incl
dec
push
mov
lahf
lret
add
mov
push
out
jle
xor
lcall
sbb
sbb
bnd
mov
cmc
xor
mov
add
pop
or
call
and
stos
xchg
xor
icebp
push
jb
mov
mov
pushf
pop
add
push
jp
xchg
ds
in
sbb
movsb
mov
fldt
in
xor
pop
test
lahf
adcl
rol
xor
inc
insl
xchg
push
in
loope
and
fnstcw
movsb
mov
divl
add
js
out
xor
push
jp
pop
xor
cmp
adc
sub
push
inc
shr
mov
pushf
rcrb
nop
pop
xchg
das
rcrl
xchg
xchg
push
xor
js
pop
imul
push
insb
ljmp
out
cmp
pop
jge
mov
mov
out
mov
call
fcoml
and
mov
add
movsl
fdivrl
sti
adc
call
cmp
repnz
loopne
test
push
xor
scas
mov
jg
cmc
outsl
fimull
cmpsb
ljmp
sub
insl
mov
adc
push
inc
or
incl
jns
sbb
sarl
dec
mov
mov
or
jb
sub
sub
lcall
and
lret
ljmp
test
lcall
repnz
jg
jge
push
and
pop
or
test
xor
lcall
inc
xor
lods
dec
pop
add
outsl
scas
cwtl
sahf
dec
lods
ljmp
xor
and
jle
and
sti
push
outsb
iret
mov
xchg
mov
sbb
fst
rcl
call
or
add
jne
or
pop
aaa
sub
setae
stos
lock
mov
add
test
int3
sub
inc
cmc
or
dec
add
push
xor
cli
jecxz
jg
xchg
addr16
pop
push
xchg
pushw
inc
dec
jae
bound
lods
jns
sub
fcomps
fs
gs
fcomi
subl
sahf
xchg
cmpsl
xchg
pop
jbe
sub
lcall
push
shrb
push
xor
rclb
in
fidivs
int3
xor
decl
pop
mov
mov
jecxz
movsl
movsl
je
push
fisubs
pop
scas
inc
cmp
test
lcall
pop
sub
add
int
jle
xor
shrb
adc
mov
out
adc
subb
movsl
rclb
rcrb
xchg
pusha
xchg
bound
jnp
jle
cmpsl
adc
movsb
nop
sub
les
cmc
stos
test
jge
add
leave
push
ljmp
scas
out
vcvtps2ph
and
adc
stos
adc
jnp
lock
push
ja
push
fwait
call
push
andb
arpl
adc
icebp
push
aas
pop
dec
and
out
cli
pushl
scas
push
or
mov
iret
mov
mov
test
and
ljmp
lock
aaa
inc
mov
and
push
adcl
mov
cmp
push
mov
pop
jmp
adc
fdivl
push
cmpsb
mov
jle
fnstenv
movsl
pop
mov
mov
ret
fcomps
out
stos
and
jmp
jae
rcll
lret
popa
ja
push
push
pop
call
daa
cmp
clc
inc
adc
and
pushl
call
and
cmp
jmp
out
rolb
mov
xchg
adcb
decl
int
add
xchg
cwtl
dec
mov
cmp
incl
or
mov
call
jg
pop
add
mov
mov
outsl
adc
adc
pop
jno
pusha
stos
xchg
xor
addb
decl
adc
es
and
ror
mov
add
push
sub
jmp
scas
mov
xchg
jno
pop
neg
repz
mov
mov
ficompl
cmp
imul
in
mov
inc
xchg
orb
cli
add
sub
sub
dec
movsl
cmp
sub
mov
add
ret
gs
ret
push
cmp
lcall
dec
ficompl
js
mov
test
testl
loopne
lods
fstpt
insl
push
inc
mov
add
sub
iret
daa
mov
jecxz
add
fcmovb
pushl
popf
pusha
lods
xlat
loop
jo
lcall
jle
icebp
in
mov
and
jmp
push
xchg
inc
call
and
mov
cmp
pop
or
dec
fcomip
xor
pop
pusha
sub
push
or
int
pop
xor
call
outsb
sbbl
lahf
xorl
faddp
sbb
decl
ficoms
pop
aas
cmpl
mov
xchg
push
aaa
pop
test
mov
xchg
test
pop
je
into
sub
cmp
mov
cli
enter
pushl
jb
jbe
push
and
out
js
fwait
lahf
xor
shl
pop
test
mov
push
mov
sbb
sub
enter
push
inc
xchg
mov
mov
pop
lods
out
push
js
lea
sbb
xchg
or
incl
fwait
mov
and
sbb
leave
cld
dec
fdivs
scas
push
inc
jle
fistl
mov
clc
out
out
lds
lods
cwtl
lock
aam
ss
hlt
stos
hlt
fs
repnz
lods
and
decl
jo
push
and
inc
shrb
in
push
xor
adc
je
mov
lahf
rcrl
jmp
xor
dec
test
stos
dec
daa
xchg
aas
push
movsl
outsb
dec
into
lret
cmp
decl
pop
inc
lods
push
or
enter
and
xor
fimull
mov
sbb
pop
sub
call
stc
jae
repnz
cltd
inc
xor
nop
loope
jo
int3
clc
mov
cmp
lcall
rorb
movsl
add
xorl
xchg
lret
mov
sub
and
sbb
incl
pop
and
ds
xor
inc
push
lcall
hlt
inc
sub
mov
add
jnp
loopne
icebp
push
xchg
mov
shll
xor
in
inc
sub
mov
dec
ljmp
jae
sbb
les
add
jno
scas
cli
decl
sub
mov
cmp
mov
xor
hlt
mov
repz
jmp
lahf
pop
mov
sysret
sbb
cltd
hlt
int3
mov
jae
test
loope
das
lods
das
add
sar
outsl
loop
mov
fisttpl
fs
and
faddl
jmp
jmp
clc
sahf
arpl
cmpsl
xchg
mov
mov
mov
call
mov
mov
jae
push
mov
dec
push
addb
int
push
jns
fstpt
mov
inc
mov
imul
cmpsb
sbbb
inc
jle
push
cmp
sub
call
mov
push
popf
pushf
movsl
shll
test
push
sti
dec
cmp
xchg
cmp
arpl
rcr
ljmp
roll
ffree
lcall
movsl
lods
lock
sub
aad
lcall
popa
sar
jmp
push
mov
or
push
scas
xlat
rcr
sbb
mov
fnstenv
adc
xchg
mov
xorl
lret
xchg
sub
xchg
rolb
jg
ljmp
stos
mov
push
pop
sub
dec
adc
sub
or
js
inc
and
bound
lea
outsb
ficoms
or
roll
pop
sahf
mov
call
jae
iret
cmpsb
test
cmp
lea
sbb
imul
stos
enter
jmp
push
xor
push
ss
aam
dec
xlat
sub
leave
jle
movsb
dec
add
scas
lea
jns
lcall
mov
je
xchg
dec
lea
mov
mov
sub
or
dec
insb
push
test
imul
test
mov
mov
and
lahf
pop
insb
aad
lock
xor
lcall
push
movsl
mov
popa
out
lods
pusha
jns
movsl
inc
or
dec
sub
mov
xchg
cmpsl
outsb
xchg
fucomip
insl
inc
dec
cs
push
cmp
jmp
mov
adc
enter
jg
addr16
in
mov
sub
or
testl
ret
push
push
loop
dec
scas
pop
mov
das
add
insb
xchg
aaa
push
in
mov
xorb
rorl
pop
int
aaa
lock
stc
ss
gs
loop
lahf
mov
adc
loopne
pushl
out
pop
mov
mov
pop
pop
dec
enter
xchg
mov
rcll
push
cmpsb
push
pop
xor
jl
sub
icebp
cmpsb
test
mov
lret
sub
or
sub
call
hlt
dec
cwtl
rcll
jl
movsl
aad
aaa
add
pusha
or
popa
jne
xor
in
decl
pop
jae
mov
fwait
xor
add
mov
int
lods
inc
mov
flds
adc
sub
mov
and
inc
int3
cltd
out
aaa
incl
xchg
xorb
loope
pop
mov
jne
or
pop
cld
mov
nop
icebp
and
lcall
lods
adc
nop
jae
push
add
jns
mov
test
ljmp
hlt
fadds
push
inc
lret
lcall
sbb
adc
lods
int3
cmpb
mov
sar
fisttpl
mov
add
pop
cmp
pop
lock
xor
aas
dec
xchg
pop
dec
ret
inc
pop
aaa
std
decl
dec
mov
mov
iret
lret
pushf
lods
add
enter
or
xor
push
decl
push
int3
dec
or
test
lret
fwait
jne
pop
aas
jmp
out
mov
mov
push
dec
call
fnsave
ss
and
xor
sbb
mov
xor
jo
add
jle
mov
sub
dec
or
out
sub
dec
stos
mov
mov
testb
or
popf
cmpsb
fs
or
xchg
test
add
out
int
cmc
push
push
decl
fidivl
inc
ljmp
notl
fstl
rolb
imul
lcall
mov
or
inc
adc
or
inc
in
adc
mov
pop
out
xchg
jne
dec
and
call
cmpsl
pushf
mov
mov
xor
push
push
dec
mov
jecxz
adc
inc
fstp
fildl
call
sub
movsb
inc
mov
adc
int
insl
pop
jge
sahf
adc
jl
sub
repz
sbb
aas
jp
xchg
xchg
inc
xchg
movsb
dec
jl
inc
sahf
jns
ror
cmp
call
adc
pusha
std
sbb
pop
push
iret
pop
jo
xorl
aaa
gs
jae
ss
jp
push
loop
call
mov
xchg
xor
lds
mov
fs
mov
outsl
inc
and
fisttpl
jle
and
stc
sub
stc
call
std
pop
jmp
js
pop
pop
icebp
call
add
shl
sbb
pop
insl
sub
mov
push
sub
in
or
idivl
and
andl
inc
clc
std
js
fsubrs
call
push
div
movsl
popa
mov
jge
test
and
push
stos
int
pusha
hlt
inc
dec
movsl
cltd
push
cltd
stos
xchg
cmp
inc
push
je
cmp
jb
pop
sub
pop
cmp
adc
push
add
inc
cmp
leave
adc
sub
push
pop
ljmp
mov
mov
or
js
in
xor
pushl
in
sbb
iret
mov
mov
xchg
lock
dec
iret
test
aaa
cld
jg
or
shrb
dec
jmp
adc
mov
test
cmp
popf
sub
xchg
cld
xor
stc
ret
sbb
or
lret
je
call
ret
jecxz
lret
jg
mov
add
mov
mov
ljmp
xchg
bound
outsb
jp
shl
jbe
pop
sarb
out
xchg
imul
xchg
pop
repz
incl
jo
imul
incb
sahf
stos
mov
mov
or
dec
xchg
xchg
sbb
inc
mov
xchg
testb
bound
push
mov
push
dec
adc
pop
stos
xchg
call
pop
fwait
push
pop
arpl
cmp
adc
cli
int
or
xchg
and
cld
pop
push
jge
pop
aad
gs
out
adc
dec
lahf
xchg
add
jge
push
icebp
ret
jg
ljmp
add
xor
xor
rcr
stc
cltd
and
test
cmpsb
mov
cmp
jbe
call
fistpl
jae
ud1
push
iret
fadds
or
jae
out
call
cs
mov
sub
ljmp
push
pop
aam
ds
sbb
xorl
out
xor
jge
or
incl
mov
pop
push
ret
cmp
cmp
mov
ret
mov
shl
and
call
mov
mov
cli
ljmp
rcll
negl
decl
sbb
popf
loope
rclb
daa
pop
push
mov
fdiv
lret
decl
loopne
pop
aas
fdivrp
push
jl
jbe
leave
mov
ret
mov
ffree
daa
imul
ljmp
enter
push
sahf
insl
jmp
sbb
dec
push
cmp
dec
add
scas
jmp
sub
ljmp
mov
repnz
ds
lahf
push
faddl
inc
int
cmp
lret
jmp
pushf
jbe
fdivrl
sub
push
popa
mov
inc
stos
sub
xor
rcr
fcoml
mov
rdtsc
lds
enter
rorl
test
or
cmp
sub
pushf
push
addr16
call
cmc
loopne
jns
out
push
addb
cmpsl
movsl
xor
stos
test
fwait
mov
ljmp
cmp
inc
ja
jle
mov
arpl
sub
incl
incl
out
scas
cmp
sbb
push
call
lcall
out
mov
xchg
xlat
loopne
xchg
gs
nop
sub
aas
adc
outsl
incl
xchg
aam
mov
call
xchg
push
loope
decl
nop
mov
pop
mov
or
dec
jbe
or
and
bound
jg
cmp
add
fnstsw
aas
insl
outsb
movsb
in
call
sub
mov
xor
xchg
xchg
sub
repnz
int3
repz
mov
push
or
mull
out
adcb
jnp
pop
insb
cld
stc
jb
nop
ret
incl
push
adc
jmp
shrl
fcomi
test
sti
push
xchg
rcrb
inc
imulb
mov
push
hlt
shrl
ret
shll
sub
call
mov
mov
push
sub
cli
sbb
mov
je
scas
or
call
shlb
push
dec
arpl
out
fwait
adc
loopne
and
icebp
je
pop
cmp
xor
sub
lcall
negl
inc
scas
sbb
dec
stos
in
je
pop
ficompl
sub
lea
push
sahf
mov
ljmp
jo
in
lahf
mov
dec
cld
cmpsl
test
jb
add
in
mov
push
jmp
xor
mov
mov
negl
and
rcll
lret
jmp
ds
push
mov
or
ret
mov
popa
rol
leave
cmpsl
ud0
push
repnz
cli
mov
outsb
pop
sub
pusha
add
push
enter
notl
jmp
pop
movsl
xchg
pop
mov
pop
sub
mov
sti
cmp
flds
cmpsl
andl
or
aam
cwtl
stos
cmpsb
add
xchg
cmp
xchg
add
call
jmp
sub
jmp
sbb
filds
xchg
xchg
jl
test
clc
xchg
xor
dec
mov
pushl
popf
jb
or
mov
or
sarb
mov
fwait
es
pop
xor
sbb
add
jmp
mov
adc
repz
cwtl
adc
jl
jle
xchg
lods
cli
int3
pop
out
push
ss
in
incl
testb
push
add
lcall
mov
incl
out
pop
lods
mov
shl
mov
loope
sbb
pop
or
jne
int3
je
jns
decl
sub
xor
xor
pop
cmp
test
dec
repz
jmp
outsl
mov
cmp
xchg
jecxz
cmp
das
pushf
lahf
inc
push
push
mov
or
jl
jmp
clc
mov
cmpsb
int
outsb
push
jg
mov
in
jge
pop
ljmp
cmp
or
mov
fistps
fxch
mov
cmp
and
ljmp
icebp
push
inc
sub
xchg
repnz
inc
shr
and
jno
cmp
jl
ror
loope
dec
movsb
test
sub
push
mov
and
cmc
div
jae
fmulp
fsubrp
test
mov
enter
push
lea
jae
jp
push
cltd
cltd
popa
lahf
loope
mov
sub
pushl
cmp
sahf
add
cltd
jae
ljmp
push
aas
mov
scas
jmp
mov
enter
scas
call
fs
xlat
add
in
cmp
incl
clc
mov
jge
inc
daa
cwtl
adc
cmpb
aas
push
adc
push
jmp
les
scas
mov
outsl
ret
xor
mov
leave
sti
add
or
call
xorl
fimull
enter
jecxz
pop
fsubr
sbb
imul
pop
pop
cmp
cmpsl
add
mov
sbb
out
inc
mov
mov
mov
in
imul
lahf
imulb
decl
cmp
cmp
push
xlat
adc
mov
push
std
inc
stos
fwait
push
scas
add
ss
xor
call
jmp
cld
cltd
imul
ret
sahf
mov
sbb
sbb
pushf
leave
cmc
int3
push
lcall
bswap
movsb
dec
loop
mov
aam
pop
jne
mov
das
inc
mov
add
stos
jge
ds
sar
pushl
and
inc
and
subb
test
imul
fistpl
push
xlat
and
into
shlb
js
clc
stos
decl
mov
sub
or
scas
fcoml
cmp
ljmp
mov
sub
test
xor
push
js
jge
out
ds
push
pop
sub
cmp
ljmp
cli
mov
clc
shrb
fisubl
and
add
mov
orb
jmp
push
insl
xchg
das
xchg
mov
icebp
jmp
mov
mov
mov
inc
std
hlt
mov
mov
cld
ja
pop
hlt
cmpsb
shl
hlt
fsubl
inc
test
mov
fidivl
in
push
inc
sahf
fdivp
insl
jb
push
xor
pushl
push
imul
xchg
inc
jl
cmc
call
stos
gs
adc
hlt
je
fs
jmp
mov
cmp
inc
lea
fildll
aad
and
add
xchg
cmp
pop
mov
add
sub
push
sub
sar
jmp
test
add
xchg
jne
rolb
jp
jae
imul
cld
mov
lock
jno
fnstcw
lcall
jo
adc
xchg
mov
sub
inc
mov
call
addl
dec
jbe
inc
sub
mov
add
mov
das
test
lock
dec
decl
mov
fisubrs
fidivl
or
sub
test
loop
or
sti
or
stos
ficompl
in
pop
je
orb
push
je
dec
jle
xchg
incl
sti
das
mov
std
ja
lea
mov
js
adc
xlat
mov
push
and
jno
loop
jge
lret
mov
iret
jl
fistps
movsl
hlt
dec
sarl
jmp
enter
sub
cmp
and
and
popa
cmp
incl
lods
dec
cmpl
jg
jmp
xchg
mov
pop
fildl
ret
xchg
xor
call
js
unpcklps
data16
ret
js,pt
sbb
inc
inc
leave
pop
adc
mov
jno
das
sbb
in
notb
imul
xor
mov
dec
dec
loope
inc
enter
data16
call
loopne
aas
mov
mov
cmpsl
jnp
in
rol
sbb
add
jmp
jl
push
int
jns
loop
dec
test
pop
stos
or
pop
push
scas
fs
imul
pushl
scas
into
mov
scas
jnp
fisubrs
jne
cmp
pop
ljmp
or
lcall
lock
sahf
cli
jp
seto
fdivp
xchg
push
push
sahf
fldenv
ljmp
xchg
dec
push
fsubl
in
or
sub
inc
pushf
ds
or
out
cmpsl
jmp
lds
and
mov
pop
jo
fnsetpm(287
adc
jecxz
insb
addr16
imulb
cmp
pushl
aad
in
jg
xorl
enter
in
jne
shrb
jg
mov
mov
into
xlat
mov
mov
mov
inc
mov
ljmp
mov
sub
and
addb
mov
dec
cmp
dec
xor
jg
sbb
test
test
mov
stos
movsb
scas
inc
pop
add
dec
pop
sub
in
leave
mov
pop
jbe
dec
xor
fisubs
popf
sahf
sub
cmp
cmp
cli
dec
test
in
std
mov
jno
and
fcoms
pop
jne
lods
decl
dec
push
enter
popl
mov
cmc
pop
xor
push
and
in
jae
mov
ds
repz
cmp
jnp
sbb
sarl
jg
pop
jge
dec
jecxz
vorps
jp
adc
insl
adc
lea
cmp
test
mov
lcall
xor
rclb
xchg
mov
imul
xchg
nop
push
scas
xchg
jmp
fiaddl
mov
shrb
or
aam
shlb
pusha
cltd
sub
call
pop
pop
inc
ret
addb
inc
adc
jo
inc
add
call
notb
pop
and
pusha
jbe
mov
and
sub
stc
incl
mov
dec
sbb
add
rcll
mov
mov
decl
jno
outsl
adc
jae
push
daa
ds
mov
jnp
pop
adcb
js
lret
or
pop
xchg
push
imul
mov
inc
hlt
sub
mov
jecxz
ljmp
adcb
lcall
mov
adc
mov
clc
sti
adc
dec
xlat
pop
fsts
jae
out
cmc
xor
std
jmp
adc
pop
ja
pop
movsl
inc
dec
push
mov
mov
out
mov
mov
jb
jge
xor
add
pop
mov
lea
pop
jns
or
incl
ret
pop
sub
push
dec
out
adc
ljmp
fsub
adc
es
daa
aam
sarl
jo
nop
xchg
ficoml
repz
gs
call
mov
jle
or
shl
stos
push
mov
loop
daa
dec
sbb
das
es
cmc
in
cmc
incl
inc
push
cmpsb
andb
xor
rcl
and
sub
add
fsubrs
in
inc
and
rol
jnp
add
jae
sub
mov
dec
push
mov
jmp
fcomps
bound
pushf
rcl
cltd
mov
loope
add
xchg
icebp
push
pop
movsl
pusha
add
mov
scas
clc
jb
lods
rorl
fcmove
push
mov
dec
imul
lret
shlb
repnz
add
in
scas
jle
lea
inc
add
pusha
in
nop
addb
inc
repnz
inc
lahf
int
inc
and
inc
ljmp
stos
pop
in
in
bound
fxch
jecxz
mov
int3
insb
mov
add
pop
jae
sbb
cmp
insl
repz
es
adc
mov
mov
aad
xor
cmp
orb
mov
dec
xchg
xlat
dec
mov
or
mov
roll
mov
out
or
into
test
ja
add
loopne
ret
and
mov
jnp
cmp
adc
cs
add
arpl
leave
pop
shll
mov
inc
cmc
add
mov
outsb
fs
lcall
es
jb
daa
xchg
leave
lret
rcl
dec
push
adc
daa
mov
sub
xlat
imul
sub
into
sbb
fwait
stos
mov
and
adc
jb
fcoms
adc
jmp
sub
pop
test
dec
popf
imul
push
loope
pop
outsb
out
ret
push
fiadds
decl
faddl
cmc
mov
aas
je
and
mov
adc
mov
scas
fwait
pop
or
pop
push
sbbl
fcoms
cltd
xchg
ljmp
or
cmp
jno
lcall
push
xchg
cld
in
push
shll
in
adc
and
mov
test
pop
sbb
cmp
pusha
push
cmpsl
mov
loopne
dec
std
in
mov
movsbl
fmulp
pop
mov
push
aam
mov
pushl
enter
divb
inc
xor
nop
icebp
int
int
ret
mov
loope
test
mov
leave
and
mov
in
cmp
jns
cltd
push
jp
adc
and
aad
lcall
sbbl
dec
xchg
out
mov
push
cld
loop
mov
incl
repnz
cmc
adc
mov
mov
sar
enter
or
mov
jg
arpl
push
jmp
pop
sub
ljmp
add
cmp
pop
jns
jmp
xchg
or
loopne
inc
mov
cmp
out
xchg
mov
incl
movsb
sub
dec
mov
aad
sahf
das
lret
sub
mov
in
in
out
or
inc
xor
adc
in
sub
mov
pushl
or
sub
xor
jns
or
faddl
cmc
sbb
lods
aad
and
incl
cli
push
lea
clc
pusha
inc
nop
stc
scas
jecxz
mov
jg
inc
clc
popf
sub
dec
fsts
sti
fldenv
jbe
mov
inc
mov
les
jae
mov
stos
sub
stc
push
mov
ss
repnz
ss
jl
jg
sahf
rclb
decl
fmull
pop
mov
xchg
jge
in
mov
pop
or
clc
shrl
cmp
addr16
movl
fbld
lods
test
add
xchg
xchg
inc
inc
jp
popa
mov
call
clc
cmp
and
push
loope
push
adc
sbb
mov
out
ss
mov
js
stos
cmp
in
xchg
mov
sti
add
xchg
mov
xor
cmc
idivl
call
pop
out
int3
pushf
push
js
or
xchg
lahf
clc
ljmp
ret
jp
mov
sbb
out
mov
xor
ljmp
cmp
inc
inc
xchg
ret
xchg
inc
cmp
divl
or
pop
sub
mov
out
or
pop
into
lahf
pusha
rcrl
loop
push
std
adc
or
arpl
test
ds
int
jle
fs
out
cli
jmp
xor
xchg
adc
repnz
rcll
jne
pop
das
cmpsl
mov
decl
sbb
aas
adc
bound
cmp
mov
cwtl
push
xor
stos
aas
test
scas
and
mov
ja
add
out
mov
xchg
rorb
jb
xlat
movsl
pop
or
call
std
incl
jmp
sub
cwtl
arpl
push
sub
repz
aam
or
decl
or
out
dec
sbb
jmp
ljmp
xlat
ljmp
aaa
mov
adcb
jnp
test
gs
pushl
push
repnz
adc
push
sbb
outsl
inc
or
cmp
jb
push
inc
repz
push
lea
test
push
outsl
cwtl
mov
mov
pop
lcall
fldenv
xor
and
jbe
pop
loope
mov
pop
adc
mov
cld
sar
mov
push
jl
inc
pop
dec
sbb
xor
jne
adc
jmp
decl
decb
lcall
rcrb
or
mov
dec
mov
stos
dec
mov
mulb
int
dec
into
mov
int3
mov
push
jmp
andl
jmp
enter
or
insb
push
rcll
cltd
adcb
decl
sti
push
fsubl
inc
ret
mov
je
js
jmp
aam
adc
jns
cmp
into
inc
adc
mov
pop
xlat
inc
xchg
sub
cmp
inc
ret
adc
jp
mov
adc
js
ljmp
xchg
call
mov
xchg
test
data16
scas
loop
out
scas
adcl
xchg
mov
pushl
dec
jb
out
sti
xchg
adc
mov
aam
jns
popa
out
add
std
adc
arpl
decl
in
lds
loope
daa
out
dec
enter
adc
sub
enter
lods
dec
sbb
dec
sbb
xchg
cmpsl
or
mov
cli
and
pop
jmp
dec
jmp
or
out
and
decl
iret
push
arpl
dec
mov
addl
dec
mov
xchg
and
xor
inc
pop
add
cli
inc
inc
in
movsl
and
mov
pop
sbb
jecxz
mov
ljmp
js
ret
xchg
mov
mov
test
inc
mov
or
ret
jno
pop
pop
hlt
clc
mov
inc
xor
lods
cmpsb
pop
pop
pop
xchg
push
shl
ret
test
loope
ljmp
sub
push
stos
cmpb
sub
dec
mov
incl
dec
or
mov
movsl
jmp
or
inc
out
hlt
jo
sub
cli
incl
mov
dec
or
adc
adc
idiv
mov
icebp
clc
ljmp
out
mov
push
aad
lcall
pop
aas
sbb
incl
xlat
mov
popf
adc
ret
sbb
adc
aad
push
out
divb
lcall
ds
scas
add
fstps
xor
cmp
dec
adc
test
jecxz
lcall
mov
mov
push
mov
xchg
mov
stos
sbb
dec
orl
fidivrs
ret
test
imul
inc
mov
ret
fdivrs
xor
je
xlat
jae
fstl
scas
sub
popa
cmp
sub
mov
sub
dec
push
jmp
cmovbe
jae
arpl
adc
xor
sbb
in
sarb
les
lock
cmp
mov
lock
sub
jmp
or
addr16
clc
lahf
std
sbb
lret
rcll
mov
push
dec
add
mov
mov
jo
xor
cld
inc
mov
fcom
decl
jnp
add
movsb
sbb
cmp
jne
sbb
xchg
and
mov
les
jl
inc
mov
xchg
das
stos
or
aas
mov
inc
inc
cld
dec
dec
hlt
sub
push
movsb
out
add
in
mov
lock
mov
and
outsb
adc
iret
ret
data16
std
mov
jmp
testb
sub
pop
fwait
call
sub
push
push
cmp
lods
xchg
jne
in
out
loopne
adc
jo
sub
stc
push
cld
mov
stos
inc
into
cmc
imul
push
js
dec
stos
push
mov
add
shr
pop
out
xchg
lea
pop
rolb
xchg
rcl
jp
adc
jg
aad
push
stos
sbbb
nop
stos
movsb
mov
in
sub
xchg
insb
mov
add
fmul
lahf
sub
dec
xlat
scas
sbb
fdivrp
jg
jno
cmp
nop
fprem1
mov
mov
js
loope
roll
and
in
mov
jnp
add
cs
mov
fcompl
xchg
xchg
aaa
jae
sub
push
jmp
add
sub
movsl
jp
add
shrl
mov
aas
dec
mov
jae
cmpsl
inc
jmp
inc
mov
lret
scas
gs
jp
decl
in
cmp
pandn
push
push
cmp
add
mov
movsl
mov
dec
mov
inc
in
cmp
decl
shll
in
in
aas
sti
in
call
push
add
mov
lcall
mov
faddp
add
cmp
add
push
fwait
mov
decl
ret
hlt
add
loop
shll
lcall
imul
loop
add
dec
push
pop
int3
repnz
jae
push
mov
stc
cmp
stc
mov
inc
push
push
cmpsb
dec
pop
pop
mov
mov
adc
sub
xchg
dec
sarl
cwtl
test
test
hlt
call
jae
fucomi
push
mov
add
jo
out
push
xor
hlt
in
and
pop
pop
sti
mov
filds
mov
cmc
mov
rol
or
fwait
pop
lcall
clc
aaa
cld
lret
mov
mov
ficomps
and
xor
jo
in
sub
pushl
mov
and
test
cld
push
std
xchg
test
test
adc
push
scas
jg
jp
pushf
stos
dec
push
sbb
sbb
outsb
mov
jbe
pop
jmp
jl
das
jl
std
incl
jns
cmp
mov
andl
outsl
aas
push
xchg
incl
jmp
mov
pop
shrl
aaa
cld
cmp
add
sub
push
inc
pop
popa
adc
out
ret
pushl
mov
cmpsb
add
pop
loopne
out
jle
cmc
out
adc
cli
imulb
ljmp
pop
xchg
stos
ja
push
pushf
pop
jl
mov
jb
xchg
push
negb
pushf
or
decl
xchg
jo
jbe
sbb
mov
rolb
sbb
pushl
pop
int3
jno
inc
fwait
and
xchg
mov
inc
sbb
add
mov
into
push
aas
in
or
gs
test
adc
inc
adc
mov
decl
and
sbb
nop
and
stos
call
adc
add
push
cld
jmp
or
pop
pop
push
mov
out
xchg
mov
jb
pop
jmp
dec
aam
mov
mov
stos
adc
fsubrs
pop
mov
decl
lock
inc
or
gs
and
pop
rcl
fstpt
decl
mov
popa
pop
or
outsb
out
lret
fwait
xor
shrb
sbb
mov
nop
pop
jle
outsl
inc
scas
xchg
test
movsl
fldt
fadd
test
push
call
dec
clc
jge
mov
ljmp
out
and
sbb
fldenv
jmp
inc
hlt
adc
div
cwtl
push
sbb
jecxz
cmp
mov
lcall
pop
pop
insb
mov
pop
pop
sete
frndint
ret
mov
mov
insb
xor
pushl
fwait
sub
pop
mov
ja
in
call
ss
xchg
jno
mov
stos
xor
es
pusha
insl
aam
outsb
jmp
div
daa
in
jl
cmp
mov
mov
incl
jbe
mov
adc
out
sub
mov
sub
mov
decl
mov
ret
sbb
enter
stos
out
xchg
adc
sahf
adc
xchg
push
mov
fbld
mov
jne
stc
adc
outsl
mov
mov
add
imul
es
lock
or
inc
sub
mov
jmp
mov
adc
mov
bound
in
mov
rcll
aad
pop
pop
adc
push
mov
mov
cmp
dec
and
ja
sbb
mov
lahf
cmp
fidivl
out
jp
enter
sub
jbe
in
mov
xor
dec
mov
add
mov
lcall
sub
mov
and
fs
pop
adcl
scas
jmp
fs
inc
inc
lock
jp
stc
add
es
jecxz
push
addl
xchg
outsb
rorb
ljmp
inc
iret
lahf
mov
fiaddl
leave
inc
das
lahf
scas
adc
add
or
dec
ja
pop
loopne
or
sbb
mov
ljmp
and
inc
jmp
cmp
push
daa
mov
mov
push
jnp
cmpsl
mov
xchg
xchg
push
mov
loop
pushl
jnp
addr16
mov
pop
pop
rorl
les
xchg
addr16
mov
xchg
add
jg
ret
rolb
lock
cli
push
ljmp
or
int
ja
inc
inc
pop
ds
pop
sub
fildl
pop
xchg
mov
jge
mov
insl
push
outsb
fucomi
pop
movsl
ljmp
mov
mov
insb
pop
push
out
sti
jno
lcall
jbe
fwait
sbb
jp
inc
and
xor
push
fld
enter
leave
add
inc
jmp
jne
mov
adc
mov
in
test
aas
gs
stos
shlb
dec
sub
jns
mov
sub
cmp
aas
fimuls
enter
mov
daa
rep
and
mov
push
pushf
sub
clc
xchg
mov
fistpl
fcomip
jnp
pop
xchg
xchg
mov
dec
jl
fadds
mov
cmp
dec
jbe
fistpll
cmp
stos
ss
inc
xorl
inc
gs
mov
frstor
icebp
xchg
push
mov
ret
xchg
pop
aas
inc
sbb
add
jo
aam
cmpsl
dec
sbb
int3
sbb
push
jno
pop
insl
scas
je
mov
outsl
add
mov
jb
icebp
decl
add
mov
cltd
notl
add
sbb
push
insl
test
lret
xor
and
push
mov
jmp
mov
mov
leave
push
lods
cltd
push
mov
addr16
mov
pop
dec
hlt
push
mov
mov
pop
dec
rcrl
inc
cmp
ret
cmp
shrl
outsb
sar
pushl
lods
jns
adc
jl
push
cltd
sub
mov
loopne
stos
imul
xchg
leave
mov
lret
xlat
stos
rcrb
aaa
icebp
addr16
dec
fistpl
in
stos
sub
xor
ljmp
sahf
jge
js
cmp
sub
fistpll
and
nop
push
mov
es
call
push
push
pop
je
lds
loop
test
inc
scas
je
lods
dec
loop
add
mov
xchg
inc
jle
jnp
clc
cmp
push
ret
inc
add
imul
ljmp
dec
test
movsb
fidivrl
cli
fsts
or
addr16
or
rolb
call
mov
inc
mov
or
jnp
xor
push
add
inc
xchg
inc
jne
and
sbb
mov
lcall
and
sbb
imul
addr16
dec
xor
jmp
jp
popa
aas
xchg
mov
or
cmpsb
mov
push
decl
lock
mov
push
and
mov
mov
jae
fldcw
icebp
cltd
mov
call
and
jnp
lahf
pop
jbe,pt
inc
jns
movsb
pop
sbb
hlt
cmpsb
xchg
xorb
fwait
add
lcall
sti
icebp
sbb
jecxz
dec
xor
je
pop
jg
clc
dec
scas
xchg
shrl
cmpl
push
cmp
mov
push
pop
int3
pop
jne
out
out
popf
lret
mov
inc
pop
and
rol
cmp
enter
pushf
pop
loopne
jmp
aam
adc
daa
and
push
push
pop
pop
inc
imul
imul
call
and
std
jp
adc
fistps
sub
jecxz
out
cmp
mov
jle
sar
sub
testb
cmp
pushl
imul
in
and
test
dec
dec
test
mov
jbe
and
call
outsb
cmpsb
outsb
andb
sbb
jg
cs
push
pop
lret
incl
fnstsw
fldl
movsb
jno
lcall
mov
testl
add
daa
pushl
xor
sub
mov
xchg
cmp
push
xor
mov
and
fcoms
add
fsubrl
std
cld
loopne
test
in
mov
pop
jnp
adc
rorb
daa
scas
dec
bound
ljmp
sti
lods
inc
dec
clc
cmc
xchg
sti
sti
in
into
rolb
jp,pn
add
dec
and
incl
push
push
sub
push
mov
lcall
sahf
jns
ljmp
ficoms
jge
movsl
mov
inc
ret
inc
rcr
jl
shrb
pop
pop
xchg
adc
xchg
movq
ljmp
hlt
shlb
data16
outsb
xchg
dec
lods
xor
mov
jge
jnp
incl
and
sarl
scas
dec
mov
xor
cltd
jbe
nop
sub
jbe
adc
insb
push
add
lcall
int3
inc
enter
faddl
imul
addr16
ud0
decl
sbb
or
mov
pop
repnz
test
sub
lcall
fildll
cmp
pop
ja
cltd
cmpsb
push
fsub
je
sbb
adc
imul
cmp
jg
ja
push
xchg
fisubrl
ja
sub
xor
fbld
xchg
push
int3
dec
roll
inc
sbb
in
cld
mov
dec
cmpsb
xor
jo
decl
adc
jg
lret
fldt
jle
mov
inc
inc
out
push
movsl
addr16
push
sbb
add
add
pusha
or
cmp
adc
pushl
xchg
nop
sarb
shr
push
call
icebp
sub
fildll
mov
xor
xor
ror
pop
jbe
mov
pop
cmc
fwait
sub
push
dec
push
insb
cvtps2pi
mov
jb
lcall
mov
mov
add
insl
cmpsl
testb
test
sub
decl
jae
and
pop
pusha
mov
pop
xor
add
mov
jge
ljmp
mov
icebp
cmp
sub
mov
mov
xor
daa
in
or
mov
mov
jp
imul
mov
xchg
adc
stos
mov
in
into
jge
mov
fnstcw
adc
jecxz
test
push
data16
add
xchg
repnz
add
cmpsb
dec
imull
sub
sti
add
xchg
insl
dec
jecxz
mov
add
cmpl
cli
rcrb
test
sbb
or
rcrl
mov
adc
lcall
mov
push
testb
pushf
cmpsl
notl
call
inc
inc
mov
adc
dec
ja
or
hlt
add
mov
push
out
fldl
ret
call
hlt
mov
outsb
notl
daa
lds
jle
pushf
ljmp
jbe
xor
decl
cwtl
outsb
adc
dec
xor
fcmovne
cmp
ret
cmovno
pushf
lock
jmp
outsl
mov
dec
popa
popl
jp
xchg
add
lock
mov
enter
adc
sbb
subl
mov
xchg
lods
sbb
dec
and
insl
pushl
mov
xor
les
fwait
xchg
cmp
jb
iret
pusha
jp
fnsave
jmp
sarb
jnp
xchg
inc
popf
mov
mov
jg
adc
mov
or
sbb
mov
loopne
mov
mov
add
jno
xor
jo
leave
outsb
xchg
inc
or
pushf
test
jg
jecxz
or
out
xchg
add
cmp
fdivrs
fidivs
dec
dec
in
push
mov
dec
outsl
add
lahf
std
ret
lcall
loop
dec
imul
add
call
imul
push
inc
js
pop
jg
repz
mov
pop
dec
push
push
xchg
mov
xor
mov
push
push
mov
cld
mov
ffree
in
push
jnp
ljmp
aas
adc
mov
shrd
add
outsl
outsb
sub
test
rcrb
call
pop
jmp
aas
jae
mov
lcall
jnp
xor
mov
call
stos
push
ljmp
jle
out
call
out
aas
cltd
add
daa
lret
xchg
pop
xor
xchg
lcall
ficomps
dec
mov
addr16
sbb
je
test
adc
xchg
sti
xchg
mov
call
push
push
incb
scas
push
je
shll
fisttps
xchg
in
xor
popf
outsl
ficoml
or
notb
sub
neg
push
mov
inc
sti
and
push
dec
insb
imul
add
sahf
xchg
xchg
mov
lahf
pop
xchg
mov
decl
loope
or
sub
inc
cli
lret
mov
mov
sub
inc
cld
popf
fwait
jmp
pop
popa
inc
mov
jle
jmp
jno
xchg
sub
push
lret
icebp
decl
mov
and
and
outsb
aaa
repz
in
mov
xor
in
imul
insl
sti
pop
subl
incl
adc
aaa
ljmp
jns
lds
inc
mov
dec
cs
sbb
outsb
mov
sub
je
or
mov
es
push
push
pop
pop
jg
lcall
rolb
xchg
js
ljmp
fwait
lahf
js
push
and
lcall
out
and
xchg
iret
incb
fs
dec
stos
cltd
xchg
dec
clc
and
mov
adc
js
ficompl
adc
jg
rolb
leave
jnp
fs
jnp
out
aad
shll
mov
fildll
outsl
mov
push
push
mov
dec
fs
out
inc
out
mov
jl
jno
out
scas
pushf
jmp
or
push
cmp
lret
mov
insl
sub
incl
test
sbb
xchg
pop
cmp
jno
sbb
fsubr
sub
cmpsb
cmp
mov
mov
xlat
in
cmpsl
pop
int
je
cs
fildll
rclb
imul
push
push
jne
popf
les
xchg
jb
mul
inc
sbbb
lcall
dec
out
repnz
add
jp
mov
adc
jmp
mull
jb
push
push
adc
outsb
or
mov
ficoms
pop
lcall
inc
mov
out
test
aas
leave
pushl
repnz
push
push
lea
lds
mov
decl
outsl
adc
rcll
fs
fwait
cmovbe
sub
pop
jmp
jl
daa
jae
enter
fldl
stos
ror
and
test
out
fdivrs
jbe
jae
shlb
in
pushf
shl
lods
sub
in
mov
cmp
dec
sub
push
lahf
pushf
je
movsb
ss
push
je
stos
mov
ja
out
jecxz
incl
mov
xchg
shlb
pop
dec
and
out
mov
iret
test
pop
addl
scas
jmp
mov
cmpsb
popa
or
adc
xchg
add
add
adc
cmc
call
mov
add
mov
iret
out
add
ds
lcall
dec
fldt
call
out
lock
dec
mov
dec
inc
fdivl
xor
mov
call
in
push
xchg
cmpsb
js
std
lds
dec
pop
scas
xor
jmp
jge
iret
xor
add
js
movsl
ss
aad
add
nop
nop
push
sub
xor
lcall
xchg
mov
and
jmp
push
jle
mov
int
mov
fists
inc
or
aas
shrb
push
inc
aaa
or
mov
push
cld
cmp
out
outsl
mov
inc
rclb
inc
in
mov
xchg
lret
push
xor
pop
xchg
inc
ljmp
imul
mov
stos
mov
icebp
pop
and
subb
lcall
mov
push
pop
inc
jg
inc
cs
pop
cld
cld
jp
or
loopne
insb
cwtl
dec
ja
testb
aas
push
cmc
lret
add
call
inc
pushf
mov
fistpl
sbb
dec
inc
jl
xor
lahf
pop
lret
xor
sbbb
jg
ficoml
out
lcall
xchg
cmp
insb
inc
cmp
xchg
cmp
mov
popa
xchg
xor
sbb
jae
cli
ja
sbb
sub
push
mov
xchg
lret
jecxz
gs
jmp
sbb
push
xchg
leave
js
dec
fisubrl
or
js
pop
mov
or
inc
jecxz
decl
ds
jge
jno
inc
xor
into
push
loop
movsl
bound
dec
xor
inc
mov
xchg
imull
or
or
mov
adc
data16
xchg
pop
adc
lods
bound
mov
roll
xchg
lcall
ret
lods
icebp
or
lcall
or
fucom
stc
mov
pop
pop
test
outsb
push
mov
pop
pop
cmp
mov
call
out
adc
sbb
in
mov
xchg
pop
fs
xlat
push
pop
jmp
call
xchg
dec
sbb
movsl
arpl
sub
add
or
pop
push
jge
mov
inc
lcall
repz
pop
push
dec
pop
mov
dec
mov
and
ljmp
mov
pop
xor
roll
ja
jbe
lock
nop
ljmp
andl
adc
pusha
lret
xor
cwtl
std
lock
or
in
sarl
mov
shlb
mov
jns
addr16
cmpsb
push
push
xchg
dec
out
cmp
jecxz
call
mov
pop
mov
mov
sbb
cli
decl
sbb
pop
xchg
js
test
and
sub
inc
add
call
fldt
loope
decl
mov
jno
push
negl
fidivrs
add
mov
cmp
push
inc
jle
fwait
in
test
push
cltd
aas
cmp
out
dec
mov
js
cmp
fwait
or
mov
loope
rcr
adc
jbe
sbb
pop
aad
call
rclb
sub
loope
fimull
ret
imul
cmp
inc
jg
mov
or
aas
mov
bound
sbb
push
cmpsl
enter
dec
testb
pop
aaa
jmp
xchg
or
adc
repnz
cltd
xor
sbb
mov
incl
pop
cmpsl
xchg
xor
xchg
mov
out
aam
xchg
imul
decl
nop
stc
sbb
clc
sbb
movsl
sti
jbe
popf
fisubl
inc
divb
push
inc
mov
nop
pusha
sbb
lret
stc
leave
pushf
cmpsl
jb
pop
pusha
std
adc
notl
push
xchg
add
push
add
cmp
fsubrs
sub
fwait
adc
scas
loope
lcall
mov
mov
and
cmpsl
inc
aam
xchg
test
push
or
fisttps
fistl
inc
dec
shl
jo
xchg
iret
ret
orl
pop
cmp
pop
movsl
mov
mov
mov
sub
int3
push
sub
fmull
xor
in
rorl
push
and
out
mov
pop
sbb
xlat
in
pop
xor
repnz
lahf
jmp
fistps
pusha
jecxz
dec
and
sarl
loopne
jmp
cmpsb
scas
cli
add
cmp
loope
dec
icebp
sub
or
imul
fdivr
jmp
out
fxch
aam
jge
daa
add
popa
or
ret
dec
xchg
inc
sar
cld
aas
add
out
mov
call
jl
dec
ds
popw
roll
insl
or
loope
and
cmpl
ja
push
stc
jnp
xchg
xor
repz
rcll
push
jmp
cmc
arpl
in
add
or
and
sub
mov
push
icebp
mov
aam
push
lret
stos
sbb
ficoml
ljmp
enter
mov
xchg
mov
xchg
xchg
jecxz
xchg
sub
and
flds
and
ljmp
and
pop
xchg
sbb
repz
dec
inc
rorl
jg
mov
andb
push
das
inc
pop
mov
jns
cmp
or
call
gs
jo
inc
rcrb
nop
hlt
dec
jb
cmp
aam
or
ret
push
push
scas
out
in
dec
cmp
dec
jnp
test
es
and
movl
sub
cld
inc
adc
cwtl
pop
addl
outsb
push
jo
jmp
in
ror
add
mov
adc
lcall
jns
dec
dec
cs
decl
mov
pop
xchg
pusha
xchg
sbbb
cmpsl
cmp
and
cmp
jg
xlat
fcompl
adc
nop
sub
repz
jle
xor
call
std
pushl
int3
pop
inc
inc
push
sbb
inc
out
rcr
enter
sbb
mov
inc
out
sbb
test
and
push
ret
sub
shrl
cmp
es
xchg
imul
stos
jmp
add
aas
pop
leave
cmp
into
jmp
subb
add
loope
push
insl
ja
add
pushl
mov
inc
scas
jl
in
lea
lret
pop
push
or
ja
pop
fdivp
push
popa
dec
xor
push
ja
mov
out
mov
add
ret
mov
mov
movsb
aas
push
cmpsl
movsb
jno
or
incl
jmp
and
out
add
xor
add
jnp
pop
cmpsl
lods
pop
jo
cmp
popa
push
jge
adc
ret
outsb
pop
push
insb
xor
cmovg
cmp
xor
lods
mov
lods
mov
imul
fs
dec
xchg
sti
fdivl
cld
ljmp
clc
sub
cmpb
pop
add
lock
jmp
mulb
and
clc
gs
inc
add
mov
repz
scas
aad
jno
ljmp
jo
mov
push
adc
sub
js
fucom
jae
add
aam
pushl
addr16
std
add
daa
lock
adc
jge
or
pop
add
dec
pop
sub
jmp
inc
outsl
cmp
sub
mov
sbb
imul
push
and
pop
scas
jmp
sub
pop
mov
loope
popa
cmp
aaa
nop
sbb
or
push
mov
ja
push
nop
in
addr16
push
popa
push
jmp
or
jno
cltd
inc
inc
rolb
add
inc
jo
shl
fs
mov
outsb
dec
jp
arpl
ljmp
sar
jmp
mov
fildll
incb
pop
les
ljmp
call
push
aaa
xchg
add
aam
add
inc
mov
in
cli
sbb
rcl
lret
xchg
lock
incl
loopne
mov
dec
mov
lahf
sub
adc
sub
or
fbstp
jp
fstl
mov
jbe
pop
inc
xchg
pop
pop
ds
jmp
inc
or
pop
pushf
xchg
adc
xor
pushf
nop
mov
mov
mov
orb
jmp
mov
loop
cltd
push
int3
dec
adc
ds
cld
and
add
jmp
into
cmc
sbb
xchg
jg
pushf
scas
sub
dec
jle
push
xchg
inc
mov
mov
adc
incl
pop
add
add
hlt
arpl
xor
pusha
add
pop
push
xchg
push
std
ljmp
pop
jnp
shrb
in
das
lods
sti
mov
sbb
imul
test
mov
pusha
or
sub
mov
out
aas
loopne
icebp
mov
lahf
add
pusha
pop
popf
add
incl
div
scas
lods
cli
jns
int
cs
xor
test
mov
add
shll
push
pushf
xor
add
xchg
mov
aam
ljmp
pop
or
pushf
push
lea
or
mov
xchg
mov
pushl
push
xor
adc
repz
cld
and
dec
ljmp
enter
enter
add
xor
in
mov
jge
ds
mov
sbb
sbb
add
mov
les
gs
imul
mov
movsb
ja
cmp
call
jmp
loopne
fisttpl
test
iret
fcomp
cwtl
xchg
outsl
mov
dec
adc
cmp
jmp
mov
xchg
xchg
jns
mov
cli
xor
cli
cmpsb
mov
adc
ud0
decl
jmp
mov
ja
lods
mov
sbbb
js
fdivrl
jge
je
rorb
lcall
rcl
xor
pusha
xchg
aad
bound
data16
mov
or
test
mov
jmp
sub
sub
xlat
adc
and
lds
bound
aaa
and
je
jg
andb
or
je
fnsave
sahf
inc
add
dec
incl
and
fldenv
hlt
dec
cmpsb
sbb
add
mov
mov
pop
and
push
cld
lcall
scas
mov
rclb
aad
packuswb
jbe
add
in
stos
sar
das
cli
lcall
int3
xor
imul
fistps
xor
push
lcall
enter
sub
roll
mov
cmp
sbb
mov
pop
mov
js
sub
xchg
jmp
iret
cld
rcrl
fldl
aad
aas
pop
fidivrs
arpl
call
xchg
scas
or
jns
aad
jecxz
mov
sub
jne
mov
pop
or
aaa
ljmp
xchg
mov
cmp
sbb
or
or
cmp
das
fucomi
adc
out
rcll
pop
rcrb
daa
inc
das
movb
push
fwait
int
inc
hlt
xchg
cmpsb
adc
or
xchg
xchg
mov
xchg
es
add
das
dec
push
inc
in
in
addr16
sbb
xor
push
cld
ljmp
push
adcb
mov
xchg
jmp
xor
adc
pop
fimuls
mov
mov
lods
dec
inc
lea
xor
sti
sbb
mov
jne
adc
mov
scas
or
xor
add
loop
inc
decb
cli
dec
aas
mov
or
int
push
fcos
decl
int
lock
xchg
mov
cmp
pop
js
in
cli
pusha
dec
pop
fdivrs
sub
and
ds
push
xchg
rcrb
or
dec
add
jl
push
adc
adc
pushl
repnz
ljmp
nop
mov
fsts
jle
mov
push
cmc
pop
fbstp
xor
sub
xchg
cmp
clc
out
dec
xchg
lret
sbb
enter
jl
int
pop
mov
lret
ja
insl
xor
sbb
std
imul
rcl
test
negb
mov
or
mov
jnp
push
lcall
cmp
pxor
adc
ds
jne
xor
cmpsb
ficoms
rcr
popf
cwtl
pop
jge
pop
mov
inc
lahf
sub
or
xor
and
mov
inc
sub
sbb
movl
adc
or
pushf
out
mov
js
mov
roll
es
xchg
mov
sbb
ljmp
ljmp
sbb
lret
sti
jb
aad
jle
iret
mov
outsl
ficompl
ss
jg
mov
xsavec
pop
jp
sahf
in
or
push
jle
scas
hlt
pop
in
inc
sar
pushl
ja
imulb
xchg
lret
push
jmp
xchg
stos
mov
cmp
adc
jnp
push
pusha
fwait
mov
aad
fwait
cld
lcall
jge
inc
es
out
cli
test
adc
je
ds
jl
push
push
xchg
or
imul
xor
aas
das
inc
lea
mov
scas
or
or
gs
xchg
jl
xchg
in
mov
decl
adc
scas
xor
jg
daa
mov
lcall
sti
lds
decl
lcall
das
jb
pusha
add
gs
mov
push
sub
cmp
outsb
int
jecxz
push
add
push
jnp
loope
test
fwait
jmp
jmp
push
push
stos
stos
pop
push
out
jmp
xorl
decb
loopne
xchg
jl
lret
pop
push
iret
and
lock
and
mov
jb
mov
in
insl
push
in
sbb
das
in
outsl
jnp
stc
jge
test
sub
cmc
inc
out
rcr
mov
cwtl
jo
sarl
insb
push
std
fldl
cs
cld
adc
insb
out
mov
xchg
pop
xor
sbb
mov
add
pop
lock
cmp
fcomps
ret
jmp
das
xchg
adc
sbb
scas
adc
mov
pop
mov
fwait
xor
pop
jo
sahf
sbb
pushl
shlb
into
insl
paddsw
mov
sbb
repnz
out
jmp
xchg
lds
cmpsl
pop
leave
add
mov
icebp
test
aam
popf
mov
fwait
ds
decl
jg
popf
push
add
outsb
cmp
bound
mov
rcrb
push
ret
xor
add
xor
pop
cld
lahf
nop
lcall
inc
pop
cmp
xchg
iret
jb
add
outsl
leave
xor
rcll
ljmp
fsubrs
jl
lret
fdivrs
scas
leave
inc
xchg
adc
arpl
mov
cmc
call
mov
ret
jge
cmpsl
dec
dec
add
cli
dec
push
cmpsl
nop
cmp
xor
fistps
nop
in
jbe
cmpsb
arpl
mov
movb
ljmp
mov
cmp
test
xlat
pop
mov
addl
mov
lock
mov
mov
push
mov
sub
pushl
std
inc
dec
mov
push
addr16
outsl
movsl
shl
add
xlat
aam
fnstenv
sbb
mov
aad
or
movsl
sahf
enter
inc
pop
loopne
inc
mov
stos
push
push
pushl
push
xor
leave
ljmp
sbb
dec
mov
jmp
mov
push
inc
jle,pt
pop
cmc
movsl
push
pop
jbe
and
sub
mov
mov
insb
popa
and
mov
add
and
add
pusha
nop
lods
cmp
incl
lea
jge
js
pushf
push
add
cwtl
test
cmpsl
sub
cmp
ja
shl
fcomip
pushl
or
mov
cli
cli
js
mov
icebp
jo
add
imul
ljmp
xchg
xchg
inc
pop
add
cmp
sbb
pop
adc
mov
dec
jo
popa
mov
test
out
jge
xchg
jecxz
lcall
xchg
xchg
lods
aaa
inc
inc
jg
int
xchg
fistl
dec
outsb
roll
push
fldcw
xor
xorl
lcall
and
decb
push
lea
lods
ficoml
lea
xor
mov
or
add
movsb
orl
adc
stos
push
cmc
call
mov
adc
xchg
insl
hlt
adc
or
ficoml
mov
insb
test
clc
xchg
aad
test
pushf
jmp
lcall
or
addr16
mov
jl
jp
lret
rorl
jge
out
cltd
addr16
jmp
adc
rcll
mov
enter
dec
xchg
mov
xchg
shlb
mov
or
in
cmc
aas
test
scas
or
cmp
jmp
adc
add
xorps
jae
mov
mov
cmp
mov
rorb
outsl
clc
imul
or
test
lock
jo
fdivrs
repnz
push
push
xchg
cmpb
sti
repnz
xchg
push
mov
sub
in
ljmp
or
es
pop
sbb
ss
mov
incb
loope
cmp
stc
idivb
iret
cli
push
outsb
stc
xchg
jmp
pop
jns
stc
data16
and
ljmp
add
push
pop
push
loopne
adc
in
xor
test
sti
in
addl
in
into
pushl
inc
inc
and
icebp
inc
xchg
cmp
fs
imul
repz
ja
incl
cld
xor
sub
imul
xchg
sbb
incl
loop
xchg
mov
mov
ret
push
mov
inc
dec
test
or
jg
addr16
adc
xor
stos
dec
popf
outsl
sub
arpl
cwtl
ljmp
sti
jmp
iret
aas
mov
jbe
cvtpi2ps
dec
xchg
push
or
sub
jae
sub
jns
sub
lcall
push
or
sbb
fldenv
data16
push
leave
sti
loopne
jns
cmp
hlt
lahf
dec
push
cli
jo
jmp
add
mov
dec
fwait
xchg
mov
movsb
xor
sbb
mov
sar
call
pop
ja
stos
dec
xor
cmp
mov
jecxz
dec
andb
adc
sbb
decl
mov
mov
in
nop
mov
icebp
xor
jp
loope
scas
xorb
jmp
add
test
leave
push
dec
pop
data16
sub
fldl
popa
dec
lcall
imull
mov
lret
ss
push
add
cli
mov
int
pop
ret
xor
decl
mov
dec
cmpsl
jns
loopne
rcrl
mov
out
int3
or
aaa
std
lcall
dec
jbe
iret
push
xchg
filds
cmp
push
mov
inc
pop
fdivr
call
lds
loopne
sbb
shrb
adc
pop
inc
xchg
jp
inc
fnstsw
and
jmp
push
jmp
xchg
mov
mov
adcl
lcall
sahf
shlb
lret
cmp
fnstsw
mov
hlt
lcall
dec
inc
mov
mov
call
jnp
loopne
jmp
aam
and
rolb
test
enter
call
xor
and
push
test
dec
xchg
in
out
adc
fidivs
mov
pushl
mov
mov
inc
outsl
adc
jbe
jl
cmp
pop
aam
jp
fistpll
lcall
jmp
cmp
or
inc
cld
stos
std
fs
cs
inc
sub
cmp
and
int
lea
mov
sub
sbb
cli
pop
mov
pop
loopne
insl
mov
cmpb
outsb
inc
sub
push
fisubl
mov
lock
inc
pop
jbe
cmp
push
xchg
nop
das
jecxz
call
dec
jl
dec
cltd
out
clc
adcb
mov
sub
loope
adc
ljmp
sbb
or
xchg
rorb
xor
adc
sub
out
adc
sub
lock
cltd
pop
idiv
fisubl
cmp
decl
or
xchg
sub
push
xchg
into
mov
jle
sub
call
in
xor
pushf
push
lcall
push
inc
daa
add
pop
repz
in
ljmp
mov
jns
fwait
sbb
loop
mov
sbb
mov
lcall
ljmp
das
push
pop
mov
cs
jmp
mov
mov
mov
xor
icebp
out
clc
ja
inc
mov
push
ds
int3
jp
inc
dec
pop
mov
jmp
lds
out
sbb
into
shrl
test
xchg
popf
jmp
out
mov
dec
lods
adc
outsl
add
call
xchg
mov
jecxz
push
lcall
jg
cltd
fcoml
leave
push
jl
dec
imul
lods
out
shlb
lds
incl
stos
lock
lods
or
insl
cmp
inc
add
or
pop
fadd
fcmove
push
add
call
leave
rolb
stc
pop
dec
or
enter
mov
loop
jle
or
dec
adc
pop
mov
shll
mov
ja
subb
sbb
hlt
scas
inc
cmp
std
incl
mov
in
shll
mov
sub
in
hlt
jecxz
insb
mov
mov
popf
rcll
jb
and
jbe
loop
jmp
icebp
pop
cli
xor
mov
and
aas
dec
jl
cmpsb
xchg
fsts
jbe
pop
popa
mov
fwait
call
push
mov
not
and
push
lahf
sbb
pushf
std
lret
scas
push
jmp
and
cmp
mov
lcall
and
adc
xor
xor
dec
rcrl
and
imul
dec
ljmp
mov
jnp
pop
add
into
mov
lock
inc
jp
or
or
dec
dec
in
adc
fnstsw
and
insb
iret
aam
adc
push
out
inc
and
cs
addr16
idiv
scas
jp
test
mov
cmpl
cmp
fbld
cmp
mov
and
push
mov
addl
aaa
daa
dec
jno
sub
or
lcall
hlt
pop
and
sub
call
mov
jnp
or
adc
fisttpll
repz
incl
arpl
call
dec
dec
or
jns
add
shlb
popa
aad
lcall
pusha
mov
fsubrs
ljmp
add
jo
cmp
push
xchg
lahf
mov
jmp
outsb
sub
jno
js
clc
inc
in
in
push
mov
outsb
ljmp
lods
decl
imul
push
lods
in
pop
mov
pop
int3
xchg
add
adc
fnstcw
outsl
cli
call
pop
out
mov
or
cli
out
mov
mov
jbe
mov
imul
lret
lret
out
push
ret
addr16
mov
mov
popa
lock
adc
push
fdivl
fdivl
aaa
stos
pop
cmp
out
xchg
test
dec
push
je
mov
push
push
or
mov
rolb
mov
ds
push
xor
jbe
scas
sahf
cmp
jno
popa
gs
jmp
mov
add
test
push
rorl
pop
add
mov
mov
mov
fisttpl
call
call
push
in
jnp
lods
scas
cwtl
cs
nop
fisttpll
int3
rorl
rcll
mov
push
xor
fisttps
inc
push
push
cmp
out
daa
pushf
repnz
pushl
aad
cmp
xchg
jmp
test
fs
cmpsb
lret
and
sub
incl
imul
mov
ljmp
shl
call
jne
ror
mov
lds
sbb
and
stos
and
decl
cmp
mov
daa
jmp
int
fs
call
fimull
xchg
orb
sbb
push
popf
adc
cmp
ss
mov
icebp
mov
sahf
fdivl
aaa
mul
pop
call
inc
jae
xor
add
mov
xor
jb
xor
push
decl
inc
popf
dec
pop
jl
fisubrl
lahf
jne
mov
jl
faddl
in
sbb
lcall
mov
stos
fadds
arpl
push
popa
clc
jb
arpl
push
shr
cld
xor
incl
push
pop
mov
int
xor
mov
pop
sbb
sub
and
movsb
mov
lcall
mov
std
sbb
push
js
addl
mov
addr16
data16
cmp
sub
mov
call
loopne
cmpsl
mov
pop
cmpsb
mov
xor
mov
jg
mov
leave
pop
outsb
lods
mov
fisubrs
arpl
dec
mov
adc
push
cld
mov
test
inc
adc
push
inc
cwtl
sbb
or
ss
mov
push
fdiv
out
xor
xchg
pop
cltd
sub
adc
jl
addr16
decl
decb
pop
and
adc
loop
jnp
fs
repz
push
push
lcall
pushl
adc
pop
add
push
idiv
mov
or
ljmp
lds
andb
jbe
loop
pop
ss
and
and
lods
fimull
aad
loopne
mov
jmp
sarl
loop
xchg
imul
je
data16
fisttps
jo
jns
jmp
in
movsl
sbb
inc
push
add
ret
xor
mov
pusha
js
xchg
and
clc
dec
movsl
cmpsl
ja
inc
lds
rcrb
sahf
or
dec
and
call
popf
stos
push
fcomp
out
sbb
je
mov
push
and
push
data16
xchg
xchg
cmpsl
xor
incl
mov
inc
push
mov
rcrl
mov
shll
xlat
test
cmpsl
push
mov
push
pusha
inc
adc
sbb
jge
bound
pop
push
pop
pop
aaa
dec
push
fiadds
and
imul
cld
mov
pop
pop
and
sbb
jae
aas
and
cmp
push
scas
sub
or
bound
push
std
mov
jmp
mov
bound
cwtl
jl
xor
out
inc
fdivrp
jmp
mov
push
je
dec
add
inc
mov
pop
fwait
adc
dec
icebp
test
cmp
shlb
xchg
xor
add
push
cmp
loop
es
aam
mov
in
push
cmp
shrb
cmpsb
sub
pusha
testl
decl
out
push
xlat
cmpsl
push
or
outsl
test
andl
sub
cmp
adc
fbld
mov
popf
mov
mov
pushf
mov
cmpsl
xorb
cltd
lock
jecxz
lcall
or
stos
fnsave
stos
fadd
sbb
ljmp
xor
into
neg
push
inc
mov
daa
jge
stos
xor
pushl
or
sbb
insl
pushf
sahf
lea
leave
das
xor
inc
hlt
cs
jns
mov
adc
mov
incl
pop
pop
jecxz
cmp
inc
inc
xlat
xchg
test
js
xchg
out
jg
out
sub
addr16
jmp
cmpsb
xorb
pop
push
bound
lcall
and
lds
cs
decl
hlt
sbb
test
lock
pop
mov
arpl
std
cli
std
loopne
jmp
fldz
pop
jmp
je
xchg
std
int3
rorb
aas
mov
xor
incl
out
jnp
sub
push
jno
jbe
ret
lret
fs
in
xor
xor
jbe
xor
push
mov
lds
xor
es
inc
and
cld
call
lods
out
and
pop
fs
adc
xchg
aaa
sbb
push
sub
popf
lret
incl
inc
xchg
outsb
leave
leave
pusha
fwait
pop
lea
and
cmp
movsl
test
mov
inc
mov
vmovhps
in
lock
add
inc
test
shll
test
pusha
jno
push
push
incl
in
cmp
insl
mov
push
mov
ja
push
mov
dec
lds
aam
cmp
sub
fcoml
and
mov
fistl
sub
iret
mov
pusha
fadds
gs
inc
fsts
push
pop
lcall
jno
xchg
bound
mov
mov
xor
mov
adc
jns
mov
dec
jmp
push
mov
cmp
mov
fdivr
xchg
fldenv
sarl
outsl
xchg
cmp
pushl
xchg
rorl
xor
mov
outsl
sbb
iret
js
adc
cld
xor
call
test
push
aaa
sbb
cmpsb
aaa
jmp
imul
and
movsb
push
sub
mov
ss
sti
mov
hlt
fimull
adc
lods
mov
jp
cld
in
cpuid
xchg
sar
pushl
mulb
adc
loope
out
sar
xchg
xchg
adcl
xchg
call
adc
inc
shrl
adc
add
dec
movb
xchg
mov
scas
sbb
jmp
ja
sbb
cld
or
inc
data16
xor
sbb
cmp
push
fldt
cli
stos
outsl
movsb
add
xlat
push
test
out
outsl
ljmp
lret
ljmp
sbb
mov
imul
add
aaa
cmp
fistps
imul
ret
loope
adc
mov
in
cmp
inc
pop
jbe
std
js
insb
mov
lock
and
fildl
sub
cld
mov
jnp
pop
stos
nop
mov
mov
sbb
xchg
int3
rol
xlat
ja
adc
xchg
adc
jmp
dec
mov
cmpsl
cwtl
popf
bound
mov
dec
sbb
sub
arpl
push
or
cli
xchg
lahf
movsl
in
push
jo
fs
stc
and
inc
cltd
imul
outsb
out
pop
mov
popf
pop
cwtl
pop
inc
sarb
push
cmp
dec
in
into
in
add
lahf
mov
stos
sub
sub
fadd
xor
mov
call
xor
imul
dec
lahf
movsl
mov
xchg
scas
mov
fists
mov
das
cli
jmp
adc
or
movsl
mov
sbb
push
jbe
enter
mov
call
fsts
dec
fdivrl
sbb
lcall
fwait
int3
push
jbe
xor
loopne
push
mov
pop
cld
push
fistl
sbbb
popa
pop
mov
xor
sahf
mov
push
xor
outsl
clc
jmp
hlt
sub
mov
push
ja
insb
jge
arpl
imul
or
decl
movsl
or
daa
ds
into
jbe
sub
push
mov
clc
out
dec
lods
and
and
imul
jo
cld
call
cmp
stc
mov
scas
inc
fwait
pop
insb
or
in
mov
rcrl
in
incl
aam
pop
xchg
cltd
or
xorb
push
adc
xor
add
xchg
mov
pop
dec
push
add
pop
icebp
jg
xchg
or
dec
mov
cmp
pusha
push
mov
cs
mov
sbb
cmpsb
add
add
int3
xorb
lods
aad
pop
pop
jl
cltd
fildl
in
orl
cmp
in
inc
push
out
addr16
jmp
inc
cmpsb
and
xchg
orb
decl
das
pop
cli
sbb
xchg
pop
jle
dec
out
sbb
orb
pop
dec
imul
dec
in
aaa
mov
adc
dec
jmp
clc
lock
xchg
in
jns
cld
inc
incl
lahf
jmp
xchg
cmp
mov
ss
sub
sub
popf
std
loope
std
or
add
aas
pop
pushl
lock
or
inc
cmp
lock
or
inc
call
call
call
leave
mov
subl
pop
shr
filds
or
hlt
data16
jg
call
mov
movsl
sub
in
loopne
dec
jnp
pop
sub
mov
insb
stos
or
ljmp
ja
hlt
inc
mov
lods
sbb
jo
or
insb
add
leave
sub
xchg
lret
mov
lds
rorl
jbe
aam
fstpt
stos
sub
mov
mov
ffree
jmp
ljmp
into
and
push
inc
addb
pop
xchg
add
jg
cmp
call
test
jo
and
les
xchg
mov
sarl
inc
mov
pop
mov
test
cmp
pop
daa
aam
lds
adc
fisttpl
jecxz
fnsaves
and
cmp
stos
xchg
cld
inc
mov
ljmp
leave
test
sub
rcrb
ss
jg
jmp
aad
mov
jae
lret
fabs
xchg
sub
popa
and
lret
mov
pop
cmp
cld
lfs
rcll
lcall
stos
lock
ret
jmp
jns
insb
aas
xor
push
aas
imul
loopne
cmpsl
mov
lcall
fnstcw
lods
cmp
add
mov
pusha
es
je
es
push
add
push
scas
test
js
je
popa
sub
mov
mov
outsb
ds
sub
popf
incl
push
fisttps
daa
and
inc
lcall
jne
sbb
out
popf
loopne
sbb
jmp
mov
lea
adc
and
outsb
jne
mov
clc
insl
aas
push
test
push
push
or
dec
cli
repnz
push
fistps
sbb
nop
inc
cli
jae
fistl
aam
add
pop
xchg
repnz
pop
cld
jmp
pop
jle
mov
and
push
adc
lds
lcall
in
add
jbe
mov
xchg
and
xorl
inc
int3
mov
aad
ljmp
mov
hlt
lds
in
push
rorb
jle
ljmp
imul
pop
loopne
fidivl
sbb
jmp
push
clc
hlt
cwtl
and
rorl
xor
aaa
xor
decl
loopne
sti
push
cmc
je
mov
sub
cmp
xor
jge
scas
add
jae
in
pushf
mov
popa
mov
je
bnd
out
fs
ss
pop
in
inc
sbb
lods
jmp
sub
mov
lock
std
loop
int
mov
dec
ret
mov
sub
decl
mov
jp
mov
shlb
scas
imul
mov
dec
cmpsb
out
jmp
cmp
scas
cwtl
and
push
lahf
sub
sahf
inc
fwait
outsl
lds
decl
test
mov
lcall
sub
imul
loop
call
or
cmp
sub
sarb
ja
subl
int
cmp
jge
jg
adc
pop
in
ljmp
mov
fimull
sub
clc
push
jmp
xchg
xchg
inc
notl
dec
mov
subb
mov
dec
cli
mov
outsb
jmp
pop
cmp
fs
xor
add
fistl
imul
shld
jle
pop
sbb
sub
es
and
pushl
mov
negb
fdivl
test
mov
fldcw
push
pushl
movsl
fmull
dec
sti
in
fs
cmp
mov
mov
rorl
xor
test
repnz
jnp
adc
jns
pop
popa
sub
sahf
mov
cmp
fcmovbe
in
sar
decl
or
mov
push
mov
jg
sub
je
scas
xor
out
pushf
pushl
cmp
repnz
push
cmc
insb
cmp
cmp
das
into
loopne
outsb
xor
mov
mulb
incl
pop
or
mov
pop
push
adc
add
sar
ljmp
mov
aaa
add
sub
pop
xchg
fs
xchg
int3
or
cmp
add
xchg
mov
mov
dec
ja
adc
and
call
add
jp
mov
jo
ds
faddp
or
insb
mov
mov
pop
inc
std
add
jno
ds
icebp
adc
push
jns
pop
mov
iret
cmovnp
or
pushl
andl
int3
sbb
jecxz
divb
daa
imul
out
js
test
sbb
cmpsl
icebp
in
xchg
outsl
or
cmpsl
leave
fptan
fstl
mov
loopne
int3
jle
subb
xchg
ljmp
imul
dec
das
cs
add
push
xor
jbe
dec
cmpsb
xor
loop
arpl
dec
pop
mov
push
mov
mov
xchg
mov
movsl
mov
sbb
fwait
sbb
sbb
push
in
xchg
ja
outsl
pushl
mov
cmp
xlat
mov
dec
sbb
cltd
aam
rcrl
cmp
incl
xchg
aaa
or
sub
pop
ljmp
out
movsl
enter
call
push
cmp
adc
mov
popf
jge
sbb
pop
adcl
lea
es
sub
addb
xchg
cmpsb
loope
cmp
sub
sub
clc
and
push
call
out
add
xchg
cmc
push
or
out
and
sub
jg
add
xorl
dec
or
push
cld
mov
mov
and
mov
loopne
or
inc
in
shll
mov
push
and
lret
pop
mov
out
lcall
adc
cmp
xchg
adc
xchg
sub
pushw
xor
dec
movsl
inc
mov
std
shl
sbb
hlt
pushf
mov
daa
cli
lret
rorl
arpl
jno
push
sub
scas
mov
fdivl
fcoms
fmuls
lret
xchg
dec
add
icebp
flds
call
add
cltd
sub
scas
sub
sub
mov
push
addr16
ljmp
xor
add
jo
loop
dec
sbb
add
ds
push
cld
insl
xor
fldt
mov
jg
sarl
ja
mov
xor
gs
in
mov
xor
add
sbb
and
dec
aas
jge
push
sbb
jle
dec
call
adc
jmp
add
push
sbb
inc
jl
inc
jecxz
insl
mov
fwait
mov
imull
mov
decl
mov
ret
mov
pop
loop
ds
mov
dec
push
mov
pop
cmp
add
jg
popf
jmp
cwtl
aad
out
or
call
pushl
loope
inc
shl
sub
add
ljmp
call
sahf
out
xchg
mov
fnsave
push
sahf
ret
cs
adc
xchg
cmpsb
insl
pushl
mov
jl
stos
clc
fsubrl
popa
add
pusha
arpl
inc
mov
dec
jp
pushl
int3
pop
mov
and
lds
adc
adc
jnp
jne
xchg
dec
inc
push
mov
jg
jmp
lcall
test
sub
sbb
std
add
jae
jb
pop
arpl
xchg
das
lahf
jb
test
hlt
pop
repz
cwtl
mov
lahf
xchg
ds
inc
jmp
sti
divb
mov
ljmp
or
push
aam
ret
fstpl
adc
cld
popa
mov
jg
ljmp
les
in
pop
xchg
add
xor
setns
xchg
test
inc
decl
lret
jle
stos
je
mov
lcall
cmp
lock
cmp
lcall
mov
je
lcall
sub
mov
sub
sarb
subb
js
lods
hlt
cmp
mov
add
xor
dec
mov
aad
inc
clc
punpckhbw
dec
push
or
ljmp
fs
ljmp
mov
popa
dec
or
lock
std
mov
out
js
stos
mov
jns
cld
out
fdivl
stos
pop
fstl
xchg
rcrl
mov
jb
wrmsr
jg
ror
add
fiadds
ljmp
cmp
decl
push
jmp
push
mov
cmpsb
xchg
jg
cmp
das
movsl
lea
clc
jmp
xchg
cmpsl
insb
mov
mov
pop
inc
sbb
xchg
dec
pop
or
incl
xor
test
or
cmpsb
lods
filds
stc
movsb
out
idivb
pusha
hlt
jbe
cwtl
xor
sbb
test
decl
cmc
lock
hlt
jmp
adc
mov
hlt
xor
mov
lods
shl
lods
cs
pop
mov
stos
and
ljmp
cmp
popf
add
testb
out
int3
xlat
jb,pn
repz
add
stos
mov
lcall
sbb
mov
xchg
add
dec
mov
popf
lret
outsb
fcomip
ss
xchg
pop
fs
enter
xchg
mov
mov
sbb
push
aaa
push
fsubrs
ret
push
outsb
mul
xor
push
in
sti
mov
jge
or
std
pop
jno
inc
aad
jecxz
xor
xor
aam
stc
js
pushl
sub
scas
imul
ljmp
pop
shll
das
jecxz
leave
stc
push
js
decl
popa
sbb
test
cmp
call
sbb
ljmp
sub
mov
dec
aam
sbb
mov
clc
out
inc
repz
ljmp
ss
mov
xchg
test
test
jo
lods
pop
out
repz
jbe
mov
rcl
mov
cmp
pop
movsb
ret
add
and
xor
mov
incl
mov
inc
jne
adc
aam
sti
xor
adc
adc
mov
ljmp
fucom
inc
cwtl
push
movsb
inc
mov
or
mov
or
mov
popf
sbb
call
inc
pop
inc
scas
jge
ja
cs
add
or
mov
fs
push
ud0
call
scas
adc
fmuls
pop
add
pop
sub
lock
jp
adc
xchg
push
pushf
xor
mov
and
sub
ret
imul
mov
scas
hlt
xchg
mov
lcall
mov
mov
nop
push
out
ror
add
push
lcall
push
nop
cmp
xchg
mov
cs
lods
sbb
std
call
or
and
fldt
and
hlt
mov
std
mov
pop
negl
xchg
int3
icebp
or
xchg
aas
adc
insl
test
mov
fmull
jnp
in
push
mov
pushf
divl
pop
mov
aam
jl
outsl
jge
cwtl
mov
clc
std
inc
js
aas
mov
mov
push
cltd
xchg
jae
dec
cmp
jbe
arpl
pop
addr16
add
pop
jg
repz
scas
enter
jg
push
mov
push
icebp
sub
shll
mov
fadds
stos
cmp
mov
jmp
or
stos
rcr
iret
sbbl
jae
out
cli
push
jle
push
clc
movsb
std
ficomps
push
pop
dec
push
cs
insb
imul
call
mov
sub
out
insb
xor
jmp
incl
mov
sbb
mov
pop
mov
push
faddl
adc
fisttps
mov
mov
sahf
xchg
imul
pop
mov
enter
and
jns
push
je
ljmp
inc
aad
in
mov
ss
xchg
inc
movsl
dec
test
mov
xchg
insb
fdivr
pushl
dec
stc
pushf
insl
or
testb
cmpsb
pop
add
dec
or
les
pop
cs
in
cmp
cmpsb
jecxz
arpl
add
jg
pop
push
fadd
pop
xchg
in
ja
sub
in
mov
jecxz
xchg
jmp
repz
jns
mov
cmc
stos
cwtl
inc
jnp
test
insb
pusha
cwtl
pop
stos
adc
or
xlat
stos
in
cmp
cmp
jmp
or
sub
mov
xor
std
xor
dec
jns
sahf
push
jg
lcall
ds
mov
loopne
mov
mov
xor
jp
clc
push
cli
daa
js
rcrb
cmp
out
or
pop
hlt
out
sbb
or
jmp
jnp
cwtl
sbb
mov
cmp
inc
mov
xchg
movsl
dec
popf
mov
aad
repnz
jmp
dec
jo
inc
add
add
mov
les
add
push
or
pop
dec
sub
mov
es
pushl
jb
sarb
xchg
jo
jge
jle
or
fstpt
decl
int
jp
inc
lock
pop
cmp
jnp
loop
lods
jecxz
xchg
push
xchg
ljmp
inc
je
mov
mov
scas
movsl
fsub
jmp
dec
stc
movsl
jp
cmp
mov
aaa
add
iret
mov
decl
mov
imul
push
aaa
movsl
or
sub
adc
pop
dec
or
sbb
inc
sub
les
mov
cmp
or
xchg
mov
es
cmpb
push
loopne
cmpb
outsb
out
popa
dec
test
test
lcall
add
scas
cmp
or
mov
shlb
mov
sbb
mov
jmp
adc
or
pop
dec
pop
and
mov
outsl
outsb
sbb
cs
movl
jmp
sub
pop
lock
sub
std
in
ret
pushl
outsl
stos
jne
mov
jne
dec
and
xor
pushf
jo
test
lret
dec
scas
push
fwait
ljmp
inc
nop
add
cmpsl
or
cmp
mov
test
or
ret
xchg
lock
inc
scas
and
dec
addr16
jmp
aaa
add
xchg
jno
push
inc
bound
aad
es
push
xor
dec
das
xor
iret
mov
jecxz
pop
jmp
mov
aam
sbb
shl
shll
int
aam
cmpsb
xchg
fs
adc
jne
inc
fs
add
jl
push
mov
out
dec
xorl
mov
dec
fs
sbb
call
lds
sbb
cwtl
fisttpl
call
movsb
repnz
jno
rcrb
dec
push
cli
stos
inc
push
add
into
adc
mov
test
or
cmp
inc
cmp
mov
movsb
and
jnp
std
sti
dec
inc
mov
or
mov
decl
add
test
xchg
cmp
aaa
push
jecxz
loopne
jae
das
dec
add
je
jmp
jae
inc
adc
call
mov
or
jbe
inc
sbb
xor
sarl
lcall
stos
and
int
imul
dec
es
cli
inc
xchg
and
cmp
repnz
aaa
xlat
and
iret
mov
or
or
out
test
in
pushl
sub
push
sbb
inc
or
ret
pop
mov
in
lcall
aam
pop
out
in
ss
clc
xchg
pop
repnz
aaa
inc
out
into
dec
fst
leave
jle
mov
jno
imul
test
xor
int3
and
insb
inc
or
in
mov
jb
xchg
jg
jnp
incl
jno
pop
cmp
mov
add
lcall
ds
stc
ret
loope
xlat
insb
insl
xchg
cltd
fstpl
dec
mov
pushl
inc
mov
add
push
aam
les
xor
xchg
jmp
out
or
cmpsl
fiadds
out
jns
cltd
mov
sub
cwtl
adc
mov
incl
dec
into
lods
in
push
pop
mov
sbb
addb
jbe
cmova
jmp
std
leave
mov
push
push
sbb
in
or
decl
mov
es
mov
out
cli
ljmp
enter
lcall
mov
pop
cmpsl
mov
call
loope
jb
addr16
push
xchg
dec
jg
testl
icebp
pop
xchg
dec
out
scas
mov
and
aam
push
push
in
fwait
outsl
sti
fisubs
mov
and
cld
addb
call
sub
dec
test
into
mov
pop
lock
addr16
lcall
sarb
mov
xor
pop
pop
test
mov
lcall
jmp
jg
xchg
stos
mov
fcmovne
inc
fbstp
pushf
sbb
mov
and
cmp
loop
jmp
jle
sahf
and
inc
pop
cmp
cwtl
mov
scas
enter
lcall
loope
mov
dec
jo
bnd
test
loope
jb
xlat
xchg
je
lock
mov
ss
das
sar
out
sbb
mov
mov
stos
lds
sbb
mov
mov
pop
mov
arpl
in
in
xchg
rol
cmp
orl
out
roll
cmc
out
aam
lock
mov
jg
fcmovne
in
and
mov
mov
cwtl
daa
es
test
aas
jbe
add
cmp
or
ljmp
mov
sahf
xchg
mov
lds
out
leave
adc
call
dec
pop
imul
repnz
mov
push
les
xchg
lcall
xor
push
ss
or
stc
sarl
shrb
loop
dec
push
lcall
pop
pop
into
insl
and
mov
xor
fiaddl
lret
rcrb
push
jle
push
lret
mov
out
and
decl
mov
mov
sbb
xchg
pop
xor
push
in
jp
popa
add
js
call
sti
sub
movsl
test
repz
cmpsb
inc
insl
je
shl
add
dec
sti
push
je
jmp
aam
inc
sub
iret
pushf
cld
int
arpl
pop
inc
mov
ja
sahf
addr16
dec
jne
cmp
fs
mov
pop
or
push
dec
sbb
sti
insb
leave
test
call
loopne
mov
fsubrl
dec
sub
repnz
iret
push
stc
sbb
mov
mov
lahf
popf
push
rcll
pusha
push
sbb
cli
jecxz
divl
xorb
push
pop
xor
xor
mov
and
lret
fwait
in
data16
mov
out
call
ficompl
inc
aas
pop
out
xchg
adc
add
xchg
pop
mov
cmp
jp
cs
and
sub
add
pop
sub
xchg
movsb
lea
leave
push
cmp
ljmp
push
add
movl
rcrb
aaa
xor
push
mov
mov
xchg
and
push
inc
xchg
in
cs
vprotb
inc
and
push
dec
decl
sbb
fsubrs
jmp
arpl
jmp
xor
xchg
clc
pcmpeqb
push
jl
ljmp
xor
jnp
cwtl
xchg
sbb
ret
test
mov
pushl
out
sbb
sti
inc
and
cmc
jne
add
add
or
inc
out
ret
fcmovnu
or
inc
int3
iret
sub
push
shll
ficompl
xchg
ljmp
mov
jae
dec
xor
fsubl
and
adc
sbb
outsl
decl
xor
outsb
fcompl
les
in
jae
jno
lods
jb
xchg
fisubl
or
dec
cmp
push
fs
cmp
popf
iret
movsl
cmp
shr
xchg
into
nop
or
inc
cmp
incl
push
jae
les
jno
repnz
das
arpl
pushf
in
mov
jle
jl
mov
add
xchg
into
popf
pusha
sbb
clc
xorl
hlt
lcall
enter
push
fstl
mov
xor
iret
jmp
int3
mov
push
scas
sbb
fldenv
add
in
cwtl
es
loopne
adc
xor
mov
push
ljmp
sub
push
mov
repnz
or
sub
sar
call
push
lock
pushl
sahf
adcl
sbb
iret
xor
xor
sub
stos
lcall
mov
repnz
jg
mov
fs
push
ret
addr16
mov
jle
cmp
dec
xor
std
pop
cmp
jnp
in
fiaddl
jg
xchg
stos
aam
pop
stos
mov
sti
add
xchg
je
add
int3
cld
lods
arpl
dec
or
stos
subb
dec
aas
icebp
dec
cmp
add
fstpt
js
cmp
xor
nop
jae
pushl
push
inc
xor
and
xlat
pop
mov
aas
sahf
xchg
rclb
dec
xor
push
imul
mov
hlt
mov
inc
lds
jmp
jae
bnd
push
call
lock
fisubl
lock
stos
mov
or
scas
mov
cs
push
mov
cltd
pop
ja
in
push
xchg
mov
jne
movsb
adc
pushl
jmp
pop
arpl
mov
movsb
fidivl
bound
inc
sbb
clc
jp
inc
in
mov
add
xchg
bound
icebp
push
sar
movsb
xchg
scas
cmp
lcall
dec
cmp
pop
ds
popa
or
test
and
cld
popa
addr16
push
jg
jg
dec
hlt
ds
push
mov
popf
repnz
mov
loope
adc
sub
or
lret
dec
sbb
roll
js
ret
adc
mov
sub
pop
aad
or
pop
pslld
push
cmp
lahf
shll
fprem
pop
int3
mov
enter
push
lret
push
movsl
frstor
mov
test
popa
test
jg
jmp
cmp
mov
pop
mov
push
rcrl
or
mov
addb
push
jle
sub
dec
sub
jle
sti
scas
movsb
pop
jmp
in
ljmp
lcall
or
or
stos
lods
add
mov
pop
ret
adc
dec
sahf
loope
pushl
sbb
jl
faddl
xchg
cmc
and
adc
sbb
mov
shlb
dec
push
test
add
ljmp
cli
call
popa
je
adc
and
jbe
dec
mov
fistl
ljmp
inc
adc
mov
lret
mov
mov
call
aad
sbb
inc
rcr
and
out
outsl
jle
mov
cli
sti
xchg
cmp
push
xor
call
jae
mov
stos
icebp
pop
test
mov
icebp
pushl
and
jne
inc
paddd
inc
loopne
jmp
inc
test
repz
shlb
xor
fildll
bound
push
scas
xor
cmp
xor
sub
adc
decl
cmp
mov
cmp
sub
cmp
pop
xchg
inc
rcrb
sub
decl
loope
jg
cwtl
add
push
xchg
lret
jo
rep
inc
mov
jnp
daa
daa
and
or
jg
call
enter
jg
cwtl
mov
subb
popa
not
ljmp
scas
lcall
mov
mov
mov
push
out
push
push
popl
push
rorb
iret
xchg
or
mov
js
jb
arpl
push
scas
sbb
daa
xchg
cmpsl
je
hlt
mov
scas
xlat
clc
jne
mov
ja
and
rcl
test
in
add
pop
imul
call
mov
xchg
sahf
stc
pop
xor
sahf
bound
fstpl
sarl
movsb
jno
fs
inc
divb
cmp
and
popa
arpl
cmp
aaa
std
ljmp
sub
adc
je
jbe
insb
jecxz
repz
adc
push
call
mov
sbb
jle
repz
xor
or
loope
call
adc
mov
cli
dec
mov
mov
xchg
lret
cld
rol
popa
ljmp
out
lret
pop
pop
cld
ss
arpl
push
cmc
loopne
push
fsubl
cmp
sahf
stos
jae
or
sarl
sub
aas
push
movsl
adc
mov
incl
xchg
cmpl
shrb
xchg
dec
int
jns
xchg
cmc
pusha
ljmp
xor
test
xor
inc
jnp
push
add
sub
xchg
adc
int
imul
sti
xor
ljmp
test
or
or
add
pop
fwait
sub
pusha
stc
mov
or
test
decl
or
mov
adc
push
and
sbb
mov
xchg
adc
loope
gs
pushl
jl
push
pop
mov
bound
jmp
repz
scas
cmp
fnstcw
jg
jl
insb
mov
pop
xor
pop
aam
ja
enter
in
orl
fdivr
decl
lahf
lods
pop
push
repz
dec
cmp
sti
inc
cmp
incl
clc
push
mov
aam
stc
push
sbbl
cmp
mov
jmp
addb
inc
mov
inc
and
adc
iret
xchg
cmp
pop
dec
in
ud0
mov
and
scas
jge
sub
mov
dec
sbb
pushl
xchg
or
add
add
push
inc
fdivrp
pop
xchg
ljmp
xor
jno
stc
mov
insl
cmp
lock
fidivs
xlat
lock
adc
gs
push
fldl
jmp
pop
ja
push
call
sbb
xchg
shl
ljmp
ficoms
xchg
sub
push
mov
adc
scas
fiadds
dec
stc
das
clc
aas
idiv
jmp
test
insl
pop
mov
sub
adc
test
jmp
cmp
testb
hlt
int3
pop
cmp
das
mov
addr16
sub
popa
gs
inc
cmpsl
jnp
mov
inc
sub
pushl
rclb
mov
xchg
adc
inc
ja
pusha
mov
call
rcrl
dec
add
dec
addb
adc
jae
das
fidivs
or
lahf
cli
sub
or
test
fnstsw
ljmp
and
in
fistps
jge
loopne
mov
jb
out
rorl
xorb
pusha
inc
mov
jmp
popf
mov
ljmp
loopne
cwtl
leave
in
add
or
call
mov
jbe
push
sbb
add
sbb
in
sbb
or
cmp
mov
in
sahf
jmp
cmc
cs
fcoms
sti
inc
sbb
call
cs
or
bnd
rcr
mov
je
push
add
cli
mov
faddl
cwtl
add
test
ljmp
out
aas
push
in
scas
shrb
fnstenv
ret
ret
adc
fcoml
inc
dec
loopne
mov
jno
push
sbb
call
inc
sbb
int3
jmp
dec
outsl
pop
stos
mov
dec
push
jg
inc
mov
pop
ss
jmp
dec
xor
test
mov
cmc
ljmp
pushl
bound
int3
stc
pop
in
outsb
mov
into
adc
test
sub
sub
cmp
imul
cltd
cmpsl
stos
mov
or
pop
test
std
pushl
push
mov
daa
mov
and
push
xor
cmp
addb
dec
fidivrl
jno
std
out
int
das
and
jae
and
jl,pt
into
fldpi
js
retw
xchg
test
ljmp
test
xchg
xchg
dec
mov
mov
pop
dec
lret
outsb
xchg
testb
cmp
xchg
jne
hlt
aaa
decl
sub
push
orb
into
inc
shll
daa
call
int3
packuswb
repnz
in
pusha
jp
daa
fwait
int3
aaa
jle
addr16
cmp
xchg
ljmp
shrl
xchg
stos
pop
bound
clc
xlat
xchg
aaa
push
lret
or
incl
ljmp
adc
adc
scas
fisubrl
pop
jae
sbb
xor
cwtl
stc
mov
cmp
subl
push
xor
add
jg
push
aas
cltd
out
jecxz
mov
incl
adc
mov
mov
aam
lea
out
std
push
popf
movsb
mov
lods
dec
xchg
int3
push
in
push
adc
data16
sub
shll
fcomip
jmp
insb
ret
bt
cs
imul
mov
stos
scas
jmp
dec
nop
xchg
sub
clc
outsb
inc
add
cmp
ja
xor
scas
dec
push
js
mov
cld
mov
jmp
inc
inc
push
stc
sbbb
mov
lret
jecxz
mulb
cs
mov
push
mov
test
or
popa
aam
add
mov
jo
inc
movsl
leave
inc
loop
call
inc
cwtl
cmp
lea
ret
repnz
cltd
sbb
xor
xor
mov
fmull
mov
jge
divb
jne
fimuls
ret
pop
lcall
pop
or
or
mov
add
pusha
cmp
outsl
xchg
add
fwait
jecxz
in
push
jbe
pop
add
iret
adc
out
cmp
arpl
mov
dec
sub
pop
add
mov
call
js
sbbb
loope
fisttpll
int
add
sbb
add
pushl
lea
pushl
jo
cmpb
push
dec
ja
mov
mov
test
jg
scas
dec
xor
lods
lea
mov
sub
jmp
adc
pushl
sbb
ficompl
dec
dec
cld
insl
cmp
or
push
int
jecxz
call
ds
push
or
or
aaa
jbe
cmp
jmp
ljmp
jg
jb
pusha
push
adc
mov
sbb
repnz
inc
jmp
push
and
in
call
lcall
mov
divl
jl
jmp
jle
fisttpl
mov
dec
push
jmp
lcall
inc
sub
test
mov
sub
je
fsubrl
xor
pop
mov
adc
jns
mov
cwtl
andb
and
add
and
aas
pop
pop
outsl
or
mov
and
lret
aaa
and
stc
and
test
out
lcall
jo
mov
out
sar
lcall
fwait
movsl
cmc
imul
lahf
rol
inc
shr
sbb
lds
mov
hlt
cli
mov
mov
jmp
insl
pop
inc
test
cmp
and
jmp
daa
popf
inc
std
hlt
mov
addr16
decl
lock
push
xchg
xor
sub
push
es
xchg
jbe
ljmp
cli
test
sub
dec
jle
jl
pop
sbb
inc
adc
mov
test
outsl
mov
inc
pop
hlt
or
int3
out
mov
hlt
sbb
fucomip
psadbw
sub
cmp
mov
sub
out
icebp
xchg
lods
aas
lock
ror
jb
xchg
mov
clc
sub
popf
int
mov
fistl
fmul
pop
mov
call
int3
cmp
jmp
mov
and
sub
sub
or
xchg
fisttpll
loopne
rol
aaa
icebp
jbe
dec
xor
sarl
ja
incl
cmc
or
cmp
mov
sbb
mulb
js
mov
cmp
jnp
jbe
clc
inc
sub
jl
ret
aam
mov
pop
pop
loope
mov
dec
bound
dec
loop
cmp
jmp
xor
gs
xor
pop
test
xor
decl
inc
dec
fcoml
and
jle
cmp
pop
imul
cmpsb
jmp
dec
mov
out
pmaxsw
mov
loop
mov
call
mov
or
arpl
adc
jg
pop
bound
lret
daa
xor
sti
sbb
loopne
rclb
negl
lcall
pop
pop
jno
out
mov
push
xchg
sub
cmp
test
lcall
aas
xchg
leave
fistpll
filds
std
dec
stos
arpl
dec
and
jmp
mov
xor
scas
ds
cltd
fistpll
gs
sbb
xchg
pushl
jp
mov
and
fidivl
shll
mov
pushf
outsb
data16
outsl
cwtl
sub
std
xchg
leave
data16
jmp
movsl
add
sbbb
sbb
outsl
inc
jp
sbb
mov
sbbl
pop
dec
data16
cmp
or
fcomip
call
lods
mov
inc
inc
inc
scas
aad
jae
in
jl
push
sarl
ljmp
in
pusha
dec
lds
adc
add
jns
gs
incl
jnp
pop
sets
jmp
daa
jae
and
inc
popa
cwtl
or
fimull
dec
lret
adc
mov
pushl
call
movhps
je
inc
add
faddp
jae
pusha
mov
lcall
test
mov
roll
sbb
push
call
repz
lcall
mov
sbb
mov
das
cmp
adc
dec
decl
sbbl
xlat
out
dec
push
adc
pusha
fsubrl
pop
push
jae
out
jbe
sbb
in
nop
mov
icebp
jae
aaa
push
pop
ret
or
inc
xchg
das
fmul
daa
clc
inc
inc
and
or
lods
push
mov
loopne
xchg
insb
push
xchg
mov
ljmp
sub
mov
jmp
xlat
adc
lahf
inc
repnz
test
pop
mov
int
cs
cmc
mov
decl
xor
xlat
and
pushl
inc
jb
xchg
je
jb
push
out
and
int3
adc
ds
inc
lcall
sub
outsl
pop
enter
and
mov
pushf
dec
xchg
push
push
les
shlb
loope
lcall
cmp
ljmp
ret
mov
sbb
inc
and
pop
cmpsl
adc
sub
ret
or
xor
hlt
je
mov
mov
aam
jbe
add
in
call
js
add
lock
add
pop
repz
mov
stos
enter
lcall
insb
insl
adc
mov
dec
pop
mov
mov
call
pop
xchg
sbb
lcall
sub
mov
mov
xchg
sub
jnp
in
sbb
mov
stos
dec
pop
ret
enter
call
mov
hlt
iret
arpl
incb
dec
mov
testb
and
fdivr
incl
or
movsb
scas
int
xor
jl
pop
lret
sub
movsb
sbb
dec
jmp
call
mov
cwtl
mov
js
faddp
pushw
das
add
rolb
fnstenv
ret
ljmp
mov
sub
pop
in
out
inc
test
ret
and
std
and
mov
mov
lods
pop
ljmp
pop
int3
push
imul
add
ficomps
mov
or
dec
loope
and
outsl
sub
fsts
aaa
fadds
jo
call
and
incb
aaa
sub
pop
pushf
sub
cmpsb
sbb
xlat
scas
daa
dec
hlt
data16
jmp
dec
mov
pop
fld
add
mov
push
jge
jle
pop
push
test
or
cmp
incl
or
add
out
lcall
jnp
fists
fcomip
call
jns
fstpl
data16
sbb
dec
test
ljmp
lcall
ljmp
into
dec
loop
pop
sbb
pop
jg
adc
mov
jg
in
sbb
fildll
mov
cmp
push
jmp
int3
es
orl
sub
lcall
pop
adc
imul
xor
and
cs
mov
pop
push
mov
in
lahf
mov
es
ljmp
jne
mov
pop
outsl
mov
or
push
cmp
jle
das
ljmp
or
push
cmp
mov
decl
aad
cmp
aam
add
and
dec
jl
mov
mov
dec
cmp
xlat
sbb
push
icebp
outsl
mov
fwait
lret
push
dec
add
cmp
clc
rcrb
ss
out
mov
and
movsl
xchg
mov
lods
in
cld
mov
mov
xor
movsb
aaa
rcr
ret
and
call
lcall
stc
inc
or
es
sbb
call
pop
and
loopne
call
mov
adc
lock
xor
and
lea
xchg
inc
into
pop
decl
xor
and
iret
pop
loopne
xor
mov
jnp
cli
ud0
call
pop
ss
outsl
ficoml
clc
sti
cli
add
or
pop
jbe
orl
decl
mov
mov
test
mov
out
sahf
jae
dec
int3
shll
and
jle
dec
xchg
push
mov
jp
in
mov
push
jmp
jb
sahf
aad
test
mov
ficomps
movsb
xor
lock
stos
cmp
incl
rolb
cmp
jb
pushf
addr16
xchg
jle
or
aad
outsl
and
clc
lcall
or
xchg
std
mov
enter
push
in
movsb
or
pusha
push
lret
gs
fidivrl
ret
sbb
jge
xor
jae
lock
sbb
adc
push
leave
imul
mov
test
jle
test
sub
push
out
dec
adc
xchg
fmull
sub
jl
cmp
test
rorl
pop
fdivr
push
mov
mov
fstpt
xchg
jnp
pop
lock
push
and
push
mov
ljmp
addr16
mov
aam
jecxz
lods
test
insl
roll
nop
popl
xor
sub
call
stc
xor
stos
jb
dec
shlb
xchg
adc
sbb
jl
das
movswl
pop
rol
lcall
inc
addr16
adc
xchg
ret
loope
mov
rolb
rclb
inc
test
std
mov
push
or
cmp
add
push
and
inc
data16
cltd
sbb
pop
idiv
pushl
push
or
pushf
xchg
movsb
dec
rcrb
xlat
mul
pop
pop
sub
sub
dec
call
mov
repnz
sub
mov
out
jnp
sub
mov
mov
fldcw
jbe
es
jbe
into
bound
jmp
scas
adc
push
push
aad
aas
test
cvtps2pd
cmpsl
push
sub
arpl
fcmovbe
jle
xchg
adc
decl
mov
mov
sub
cmc
lret
in
cmp
aas
movl
outsl
mov
push
loop
les
adc
pop
test
push
lret
jp
pop
lret
adc
lods
in
jecxz
sub
dec
rcl
dec
dec
add
xchg
out
pushf
jg
adc
scas
push
popa
mov
vunpcklps
fadds
xchg
xor
ljmp
xor
gs
cmp
mov
pushf
loopne
sbb
popf
push
addr16
xchg
jmp
xchg
xor
shrb
cli
sub
into
movb
jns
roll
mov
gs
call
fcoms
pop
aaa
mov
push
es
das
es
sti
jno
gs
loope
pushl
insl
or
lods
movsl
xor
cmpsb
out
rcll
sbb
lods
cmpsl
jmp
das
cmp
lods
sub
negb
xor
scas
sbb
divb
pop
push
out
mov
xchg
ljmp
mov
adc
ljmp
mov
loope
lahf
cmpb
imul
push
fists
aas
pushf
leave
aaa
leave
fs
cmpsb
adc
add
or
pusha
xchg
mov
decl
cmpsb
sub
insb
push
leave
rol
test
xor
cmp
cmc
out
icebp
ljmp
retw
clc
fucomip
lods
xor
xor
jnp
movsb
jge
add
into
movsl
adc
sub
jbe
push
lods
fwait
cmc
inc
ljmp
cld
fisttpl
adc
push
call
test
mov
lock
mov
mov
incl
decb
pop
mov
loopne
sti
inc
js
pcmpeqd
sahf
cld
jnp
dec
lock
dec
and
out
fdivp
lcall
push
push
or
outsb
xchg
mov
mov
in
push
pop
mov
pop
cmpsb
inc
jns
push
dec
call
hlt
fisttps
mov
inc
lods
mov
enter
arpl
dec
xchg
push
sub
fldt
mov
or
es
ret
imul
pop
inc
cmp
and
xor
add
adc
imul
sub
xor
mov
adc
ljmp
push
or
outsb
gs
sub
cmp
mov
mov
decl
ljmp
mov
ljmp
cmp
popf
cmp
push
sub
popf
add
cmp
ss
xchg
add
xchg
fiaddl
movsl
ficoml
decl
push
ret
pop
cmp
addr16
jbe
push
ja
push
loopne
enter
jmp
fidivrs
es
or
cld
pop
aad
dec
mov
and
cmpsb
add
pushl
les
ljmp
loop
dec
movsl
lds
sbb
xchg
xchg
fdivrp
stc
and
xchg
lea
ljmp
daa
pop
jge
pop
push
movsb
inc
test
pop
cs
mov
xor
mov
mov
sub
and
add
inc
ljmp
cmp
loop
xchg
sbb
inc
je
dec
mov
inc
xchg
mov
data16
fs
je
pushl
pop
jp
cmp
out
fwait
inc
icebp
jg
clc
or
test
xchg
sbb
pushl
adc
jb
int3
xchg
mov
sarb
inc
in
push
imul
mov
call
jbe
adc
jnp
push
adc
cmp
pop
mov
out
cmp
push
xchg
mov
aas
adc
mov
and
data16
push
xor
push
scas
fisubrl
lcall
call
or
jae
or
nop
xchg
dec
mov
mov
add
jg
ljmp
xchg
addr16
addr16
push
inc
jne
jg
adc
dec
mov
sub
filds
das
test
xlat
loop
aad
jb
mov
add
jecxz
aaa
pop
call
ljmp
ljmp
out
jno
int3
repnz
push
mov
popf
push
fcomps
out
mov
and
fadds
adc
mov
dec
push
mov
out
jae
dec
int3
xchg
les
inc
and
cwtl
movntps
decl
cld
push
cmpsl
lods
jns
add
popf
adc
dec
mov
adc
xor
mov
sbb
lock
in
mov
lcall
push
adc
jmp
movsb
out
popa
inc
inc
call
jb
mov
add
lcall
rclb
loope
fisttpl
and
inc
pop
or
addr16
adc
fnsave
aaa
mov
push
sbb
xor
bound
das
inc
and
push
push
movsb
cld
or
inc
dec
shll
test
push
std
iret
push
adc
cmp
mov
jg
or
insb
popf
push
cld
sub
movsl
out
push
pop
pusha
xor
xor
xor
sub
mov
cmpsb
jg
inc
inc
loopne
sub
sahf
in
pop
sbb
insl
inc
mov
mov
lds
ljmp
and
cltd
cmp
lea
or
adc
fwait
pop
inc
adc
rcrl
imul
lock
xor
sbb
mov
push
sbb
sti
push
lcall
jp
mov
mov
mov
and
and
sbb
js
fsts
loop
data16
jmp
rcr
pop
lods
mov
imul
push
fmul
cmpl
faddl
push
or
stos
add
sahf
jle
rorb
test
sub
push
outsb
filds
cmpsb
mov
ljmp
shll
mov
fadds
out
mov
jmp
test
ljmp
or
or
jns
xor
lret
popfw
mov
xchg
mov
jle
push
lcall
sub
pushf
inc
xchg
cmpsb
inc
push
mov
lcall
and
fldt
cmc
test
mov
mov
hlt
sbb
jg
pop
fimuls
xor
fwait
dec
loope
xchg
imul
cmpsb
or
ror
cs
incl
dec
push
xor
das
ret
cmp
out
jg
imul
add
fidivrs
sar
xchg
mov
test
cmp
hlt
into
bnd
iret
push
mov
ret
je
mov
mov
jg
lret
inc
inc
and
xlat
test
cmp
jne
jns
arpl
sub
mov
mov
arpl
or
scas
push
sahf
mov
sub
pusha
jg
jo
pop
mov
popa
outsl
inc
cmp
or
mov
xchg
xor
sub
sbb
mov
xor
inc
or
sbb
sbb
xor
aad
pop
pop
dec
add
cli
cld
mov
sub
add
in
or
or
mov
xchg
pop
push
aaa
inc
shl
push
push
xor
outsb
cmp
sbb
js
xor
gs
mov
xchg
outsl
sub
jbe
push
mov
icebp
nop
lcall
stos
push
sti
andl
std
adc
jecxz
lcall
pop
scas
xchg
jmp
jle,pn
call
mov
and
adc
fldcw
adc
mov
mov
aad
das
cli
call
xchg
sbb
cmpsl
dec
xor
mov
ret
push
mov
ljmp
js
pop
sbb
cmp
jnp
out
lds
cmc
dec
cmp
in
lahf
out
aad
mov
dec
test
push
mov
dec
mov
fnstsw
cmp
adc
fcomps
dec
outsl
clc
incl
mov
and
cmpsl
sub
push
add
outsb
sahf
cmp
jle
inc
in
iret
xor
jb
ret
adc
negb
repnz
adc
cmp
inc
add
sub
sbb
aad
incl
sahf
mov
scas
push
jae
mov
arpl
push
or
or
sahf
mov
insl
xchg
sub
push
in
xchg
jl
mov
mul
out
ret
out
xor
lcall
xchg
mov
stos
negb
std
aad
add
inc
repz
pushl
ret
and
loope
lock
pusha
jmp
pop
lock
adc
or
aam
cwtl
mov
and
or
mov
add
mov
bnd
addr16
lcall
cmp
ljmp
mov
rorl
repnz
mov
xor
cwtl
sbb
sar
jmp
lods
test
xor
nop
cmc
push
inc
add
jge
pop
xchg
inc
movsb
mov
add
and
pushf
aaa
pop
mov
mov
mov
lcall
mov
lock
pop
idivb
fwait
add
call
jbe
mov
xchg
negb
sbb
rorl
in
pop
leave
or
je
fcompl
andb
xchg
lret
push
pushf
jg
push
lcall
mov
test
sti
sbb
adc
in
mov
mov
ljmp
adc
out
in
add
inc
out
sub
stos
addl
xor
pushl
jbe
fsubl
or
fcomi
in
scas
and
sub
pop
in
xchg
xor
mov
add
push
rorb
testl
sub
test
leave
jns
out
inc
push
push
sar
inc
cmp
aaa
ja
in
push
out
and
rorb
mov
xchg
test
incl
pop
mov
fldln2
repnz
push
mov
mov
pop
add
mov
gs
jb
repnz
push
hlt
xchg
dec
mov
sbb
xor
push
cld
fisubrs
cli
pushl
push
cmp
push
dec
or
iret
push
pop
sub
xorl
pop
scas
pop
jecxz
pusha
adc
movsl
xor
pushl
shrb
mov
jl
pop
mov
add
inc
jmp
repnz
in
ljmp
pop
xchg
mov
push
xor
adc
push
subb
mov
jg
sti
clc
push
in
test
ror
pusha
aas
insl
jge
ffreep
mov
aad
cmp
pop
push
xlat
clc
jo
sti
cmpsb
add
adc
test
mov
jg
jbe
mov
js
cwtl
add
xchg
lds
push
jno
and
enter
call
faddl
cmp
mulb
outsb
dec
pop
xor
and
daa
add
add
das
adc
lcall
push
ss
test
repnz
cmp
mov
pop
ja
xor
mov
fdivl
jmp
fucomi
cwtl
inc
dec
popf
sbb
xchg
mov
inc
ja
shrb
loope
fdivl
xor
imul
xchg
rorl
fiaddl
xchg
push
mov
or
xor
aam
call
xchg
jo
sub
fsubrp
sbb
or
jecxz
ljmp
push
mov
or
test
mov
ljmp
mov
sbb
lcall
aaa
mov
sbb
test
ljmp
xchg
js
cltd
popf
pushf
dec
js
mov
jns
mov
fcoml
jb
test
sbb
push
cmp
mov
push
clc
lret
fmul
cmpsl
ficompl
sub
and
push
or
mov
out
ljmp
ficoms
or
int
lret
xchg
sub
ljmp
into
addr16
lret
push
or
fsubrl
push
or
pop
or
incl
adc
les
repz
jb
sti
mov
mov
mov
stos
test
fildll
xchg
pop
mov
in
pop
jl
popf
xchg
aam
jg
push
scas
mov
xchg
sbb
test
jb
iret
cmp
mov
pop
sbb
mov
pop
loopne
mov
push
dec
imul
xchg
mov
subl
xchg
jge
xchg
in
es
popa
jp
repz
xchg
stos
push
lret
adc
xchg
fldt
sar
repz
leave
sbb
lea
ud0
out
popaw
push
add
sbb
pop
mov
adc
xor
mov
xchg
jo
scas
lods
in
xchg
jle
clc
incl
insl
fbld
int
popa
test
or
repz
jne
call
fucomip
pop
pop
mov
and
sub
jge
decb
xorb
xchg
jae
dec
mov
sub
nop
pop
scas
pop
xor
notb
inc
mov
jge
jnp
ljmp
jmp
pop
bound
out
andb
lea
rorl
fstps
into
mov
pop
sub
jns
pop
pusha
cmpb
fisttps
xor
mov
stc
lret
mov
in
into
push
push
xor
mov
bnd
cmp
imul
adc
jo
lods
test
test
fistpl
icebp
outsl
lret
mov
call
std
jecxz
movsb
push
in
push
data16
ljmp
iret
jl
cmpsb
xchg
add
lret
mov
pop
leave
ja
lcall
pop
mov
cmpsb
mov
shl
inc
fwait
inc
test
pop
icebp
push
movsl
sbb
jbe,pt
inc
jge
pop
in
imul
fadd
test
cmp
adc
mov
movsl
dec
add
movsb
xor
stos
inc
jmp
or
pop
movsl
push
pop
das
cli
decl
mov
push
pop
and
iret
shlb
jecxz
ret
mov
ja
call
call
push
decl
add
add
ljmp
xor
in
lods
add
repnz
adc
cld
sti
rcrl
adc
jg
in
stos
fstl
jb
fsubp
push
divl
or
jmp
dec
testb
std
daa
jno
pop
jp
les
jb
es
lock
mov
mov
aam
inc
insl
pop
push
cmpsl
lret
mov
push
and
add
decl
lock
out
and
loopne
rcpps
mov
sahf
not
es
xor
jmp
shrl
mov
pop
movsb
mov
pushl
lock
push
mov
jp
clc
push
sahf
jecxz
jmp
sub
ljmp
es
repnz
pusha
sbb
lcall
flds
ds
loop
cmp
jp
test
icebp
add
jnp
loop
les
stc
mov
or
fucomi
jnp
jl
cmp
push
jno
pushf
js
ljmp
xor
push
pop
xor
pop
scas
adc
xchg
pop
mov
rcr
ret
mov
mov
orl
push
adc
and
aam
lcall
inc
and
aas
popf
loop
add
cld
mov
lcall
jmp
in
mov
sbb
mov
mov
inc
pusha
mov
in
dec
mov
inc
and
clc
and
pop
mov
add
sbb
dec
pop
daa
xchg
sub
repz
call
fdivr
and
addb
int
imul
in
out
popf
fmull
sar
call
out
hlt
rcrb
lcall
adc
shlb
mov
stos
movsl
int3
mov
jns
mov
or
decl
adc
adc
xor
and
add
subl
sbb
mov
movl
repnz
adc
xchg
fwait
rol
push
in
cmpsl
jmp
push
adc
mov
call
daa
aam
daa
pop
test
int
mulb
mov
in
cli
dec
rol
xor
cmp
jp,pn
enter
xor
fsubrl
gs
ljmp
shlb
sti
pop
popf
popa
cmp
sahf
pop
or
fwait
addl
incl
xchg
dec
sarl
lock
lahf
jo
mov
bound
pop
in
mov
dec
jle
lods
leave
fsubl
mov
jae
movsb
loop
inc
and
mov
outsl
int
das
sar
push
sub
adc
mov
pop
dec
xchg
lcall
pop
les
fcmove
jno
cli
sub
inc
test
jge
cmp
jae
mov
ljmp
mov
std
and
repz
pop
add
ja
mov
les
sarl
call
mov
jns
or
jae
in
pop
addr16
rolb
ret
loope
xchg
jo
push
inc
data16
call
sti
pop
and
fcomp
fcmovne
lahf
test
cmp
stc
inc
mov
or
mov
cmp
addr16
in
inc
inc
push
inc
push
inc
sub
scas
jnp
loope
flds
sub
pushl
add
aad
xlat
call
js
or
loope
rolb
in
or
push
pop
pushl
dec
test
ljmp
je
ret
pop
in
push
hlt
leave
jecxz
incl
test
jl
cmpsl
mov
testl
cmp
cmp
xlat
dec
aad
xchg
decl
or
cmp
and
pop
and
xchg
movsb
rol
xor
popa
dec
cmp
ljmp
xorl
out
and
add
mov
popf
inc
lahf
scas
decl
fsubrs
hlt
pusha
arpl
jmp
sbb
in
inc
inc
push
decl
leave
or
shlb
cld
pop
and
mov
sbb
loope
int3
push
inc
push
shrb
in
or
ficomps
jb
mov
stos
idiv
ljmp
out
repnz
inc
in
scas
sub
sub
or
leave
cld
xor
dec
jmp
adc
fucomp
sarl
jb
ret
rclb
loop
sbb
outsb
pushl
and
pop
mov
ljmp
and
xor
xor
movsl
dec
inc
sbb
sub
lods
sbb
call
add
add
dec
in
ret
sub
mov
jmp
jbe
mov
aam
pop
push
shlb
adc
jno,pt
out
push
mov
loopne
xor
loop
dec
inc
fnstsw
jns
out
test
lret
or
push
jge
fldenv
cmpsb
jg
les
enter
jnp
nop
cmp
mov
mov
pushl
lcall
into
stos
dec
sub
lock
data16
adc
insl
or
mov
stos
movsl
xor
mov
aaa
xor
jae
and
or
scas
in
scas
and
scas
cli
shl
inc
scas
stc
xor
add
dec
lret
xchg
inc
add
sbb
sbb
frstor
incl
and
jle
loope
cmp
xor
cmp
out
sbb
mov
dec
mov
mov
xor
orl
lods
lock
call
or
scas
hlt
mov
xchg
xor
cltd
xor
cmp
and
xchg
call
std
xchg
dec
in
je
jae
decl
out
dec
mov
cmp
and
pop
sbb
fdiv
scas
outsl
scas
ljmp
and
dec
add
jmp
test
mov
inc
dec
les
jg
icebp
mov
pop
fwait
and
lea
mov
mov
mov
mov
lahf
push
mov
mov
fwait
mov
add
mov
ss
pop
jg
ret
jmp
ds
in
mov
aad
xchg
loope
inc
dec
in
mull
add
push
cld
xchg
push
adc
xor
and
and
inc
cld
daa
dec
mov
mov
mov
add
std
mov
mov
dec
pop
and
or
add
sbb
jl
outsl
push
lcall
mov
inc
imul
lds
sub
ss
jns
xchg
aad
ja
inc
cmp
inc
push
mov
sbb
jae
mov
fsubrp
push
cmpsl
pop
mov
loop
mov
incb
jle
imul
incl
stc
and
push
push
lock
push
mov
push
xor
decl
cmp
decl
xor
das
jg
loope
fisttps
mov
iret
mov
mov
adc
xor
icebp
and
repnz
push
and
adc
call
xchg
into
xchg
sbb
xchg
jle
adcb
fidivl
sar
popa
imul
iret
inc
fiaddl
repz
jae
push
mov
or
or
mov
pushf
push
ljmp
ja
add
imul
movl
ljmp
lds
adc
jb
mov
push
shlb
hlt
sbb
lcall
push
push
test
cmp
mov
dec
mov
sbb
jg
aas
ror
decl
nop
sbb
mov
test
lcall
push
push
decl
push
test
bound
inc
fnstenv
add
ljmp
stc
jp
int3
in
xchg
and
mov
adc
scas
add
mov
jg
scas
test
stc
or
or
mov
pop
roll
inc
ja
lods
inc
out
clc
decl
mov
add
loop
pop
pop
cmp
aad
inc
scas
mov
stos
mov
ficomps
jnp
push
mov
pop
fadds
loop
sub
or
call
jmp
inc
out
jns
movsb
sub
push
jmp
or
cs
gs
adc
out
mov
cli
popa
mov
in
mov
fildl
fbld
add
pop
mov
ljmp
inc
or
inc
lahf
jmp
cld
xor
dec
mov
int3
leave
jg
ljmp
fdivl
ret
sub
sbb
data16
mov
fsubr
call
ds
icebp
cltd
fimuls
xchg
sbb
les
fwait
adc
sub
rcrb
fs
pushl
mov
daa
call
push
lret
xor
in
inc
push
outsl
cli
idiv
jecxz
xor
sub
imul
movsb
and
or
insb
and
ljmp
xchg
and
mov
xor
lods
jl
cmp
cmp
or
icebp
rol
jmp
roll
dec
int
xchg
stos
add
cs
dec
push
fs
inc
popa
mov
xchg
in
adcl
call
bound
scas
push
mov
inc
inc
push
mov
cmpsb
out
push
loope
xor
sar
dec
arpl
or
adc
push
testl
jecxz
jb
sub
jge
decl
lahf
pop
sbb
jo
and
popf
or
imul
cmp
sub
jg
call
jle
int
int3
out
scas
sbb
dec
addr16
sarb
loop
mov
ljmp
outsb
imul
cli
add
cmp
pop
dec
mov
lcall
inc
adc
ljmp
mov
pop
jno
dec
pop
leave
mov
jb
mov
sub
lahf
mov
pushl
cmpsl
aas
cmp
cld
fwait
popa
jno
les
xorb
lret
testl
sbb
xor
pop
sarb
mov
push
xchg
push
out
getsec
leave
in
lahf
mov
daa
in
sbb
and
jnp
sub
iret
xor
pushl
gs
jle
jb
mov
scas
cmp
decb
ficoms
iret
and
or
pop
xchg
call
sarl
cmpsl
pushf
popa
shr
xchg
jg
mov
into
lods
arpl
jle
adcl
cmp
repnz
ljmp
pop
pop
and
mov
sub
repz
fwait
mov
sub
and
ljmp
clc
out
adc
push
dec
movsl
lods
cmp
int
test
pop
negl
jb
push
aas
lret
jecxz
mov
add
in
aas
inc
mov
mov
mov
pop
adcl
into
adc
decl
insl
or
negb
mov
pop
cmc
adc
imul
push
aam
xchg
popa
outsl
cwtl
mov
call
dec
pop
mov
stos
test
hlt
add
mov
int
or
sub
add
mov
mov
loopne
decl
cmp
mov
fcmovbe
mov
fsubrs
xchg
sbb
icebp
sbb
outsb
ja
incl
and
xor
push
out
xor
and
xor
inc
fcomip
dec
mov
scas
mov
nop
data16
imul
push
adc
loopne
lcall
push
pop
xchg
pop
jo
nop
push
loope
inc
in
lcall
mov
out
cmp
push
or
lea
je
push
and
adc
inc
rolb
call
fldt
sbb
jns
mov
push
jl
jne
test
adc
mov
jnp
vpsllw
dec
mov
lea
inc
or
dec
or
jmp
mov
cmp
pushf
and
mov
mov
adc
mov
sub
test
fisubrl
adc
xor
es
sub
fsub
xor
sub
cwtl
pop
push
lock
mov
or
xchg
dec
inc
out
sub
and
jp
lahf
push
movzwl
dec
adc
mov
xchg
mov
sbb
icebp
push
pop
ljmp
or
jns
decl
cmp
ficoms
adc
and
in
out
test
jg
cmp
jae
fcomps
jle
jns
popa
jp
inc
in
and
mov
cmpsb
icebp
xchg
adc
test
adc
lods
jg
push
in
push
lods
mov
lods
fnstenv
adc
lcall
mov
call
cmp
cmp
sub
fstl
fadd
sub
mov
popf
or
xchg
mov
ja
mov
ljmp
xchg
or
xor
mov
imul
loope
dec
inc
lret
pop
cmp
jmp
mov
mov
sti
ret
sub
xchg
leave
and
and
cmp
ss
sbb
and
pop
fmull
out
std
push
addr16
loop
mov
popf
adc
xchg
popf
jle
lret
mov
sub
rcrb
or
pushl
pusha
pushf
jbe
rorl
fisubrs
shll
push
and
mov
fnclex
mov
shl
xor
js
les
sbb
pop
repz
or
mov
xor
sub
les
mov
cmpsb
test
addr16
pop
outsb
call
int
int3
incl
add
arpl
out
int3
clc
out
xor
scas
sbb
les
mov
ljmp
dec
das
stc
notb
sarl
fcomip
or
int
jbe
subl
test
imulb
push
jge
std
shrl
int
push
fsubrl
add
js
cli
inc
test
or
push
out
movb
mov
ja
scas
stc
clc
int
add
jmp
mov
xchg
adc
sahf
or
sbb
pop
adc
ret
pop
lock
push
jp
mov
ds
shrb
icebp
outsl
cmp
jg
push
stos
push
ds
jne
xor
dec
les
push
jae
jmp
and
mov
nop
insb
jno
sbb
or
scas
sub
shlb
jl
cmp
out
add
mov
push
test
xchg
push
and
fld
jmp
push
lods
push
sbbb
sbb
stos
mov
push
psllq
mov
fldcw
cld
dec
ljmp
aas
imul
int3
mov
addr16
arpl
dec
jp
ss
mov
std
fmulp
and
inc
sbb
leave
pop
out
das
lret
mov
jmp
xor
fsub
sbbl
dec
push
insl
xor
or
inc
flds
decl
ja
cs
std
testb
fsubl
pushf
jp
icebp
fldenv
rolb
mov
cmpsl
mov
lock
and
lcall
jg
inc
pop
aaa
loopne
jnp
call
lods
xchg
scas
sbb
sub
aaa
std
lcall
movsl
pop
lahf
fstp
xor
pop
testl
roll
call
adc
mov
pop
mov
mov
or
ds
or
pusha
jg
jl
push
pop
dec
mov
ljmp
out
cld
loopne
xchg
inc
sbb
ret
pusha
inc
mov
mov
sbb
ljmp
fwait
inc
jle
cmp
add
push
in
dec
stos
add
push
int3
mov
aaa
std
jmp
das
mov
cmpsl
aaa
lahf
shlb
lahf
ret
sub
push
lock
and
std
mov
jmp
jnp
ds
adc
mov
pushf
mov
sbb
js
inc
iret
and
lcall
pop
add
or
insl
in
call
hlt
cli
pop
mov
mov
cmp
pop
into
out
or
pop
push
fdivl
inc
dec
pop
notb
mov
insl
filds
xor
lret
pop
add
and
mov
sub
ljmp
movsl
add
cs
fidivs
pop
ret
das
insl
mov
dec
roll
incl
mov
into
cwtl
pop
mov
push
pop
fimull
lds
mov
push
jmp
pop
mov
dec
mov
daa
mov
cmp
adc
rcl
mov
stos
sti
jle
cmp
pop
push
out
xchg
ljmp
test
call
pushf
pop
pop
lods
dec
test
mov
pop
push
cmpsl
dec
mov
mov
dec
fistl
pop
and
jmp
push
lcall
in
shll
fisubs
cmp
pushl
adc
xor
pop
pop
test
loop
das
es
inc
push
or
daa
negb
in
sar
incl
mov
sbb
test
cmpsb
cltd
jecxz
pop
sti
and
test
mov
mov
cli
call
xchg
fiadds
ss
ret
adc
inc
or
fstpt
pop
lcall
ljmp
push
or
push
jecxz
clc
addr16
fistpll
add
ljmp
cmp
fwait
adc
fists
out
push
lock
cld
loope
cmp
incl
cmp
bound
mov
aas
gs
cmp
in
sahf
cmpsl
pop
fidivrs
loopne
dec
pop
lock
pop
imul
sub
xchg
mov
cmp
dec
in
es
and
xor
int
lahf
jb
xchg
pushl
push
mov
xor
ret
dec
inc
cli
call
add
sub
mov
and
dec
repz
inc
lcall
push
sti
test
fidivrs
incl
jmp
or
jnp
insl
push
adc
in
jmp
push
call
lods
in
sub
mov
xchg
pminub
icebp
adc
mov
repnz
adc
incl
or
xor
xchg
jp
shlb
fcomip
pop
dec
jnp
les
hlt
ret
fs
aas
jne
mov
lods
jo
pushf
jo
into
mov
pop
dec
lcall
dec
lods
loop,pt
inc
push
cmpsl
mov
jns
mov
inc
movsb
mov
adc
pop
xchg
mov
push
push
pop
outsb
mov
fwait
jmp
test
jo
incl
pop
push
shrb
fs
mov
stc
pop
mov
xorb
xchg
jge
fnstcw
pop
mov
test
push
dec
ds
int
xor
or
fnstenv
cmpsl
hlt
jmp
cwtl
lock
shrb
repz
hlt
push
les
cmp
mov
lcall
sub
mov
mov
incb
cmp
pop
decl
and
and
mov
out
mov
rclb
decl
adc
ret
in
xchg
lret
mov
mov
mov
lds
jns
mov
xor
mov
dec
inc
mov
sbb
lcall
xor
add
adc
es
out
mov
and
pop
std
mov
pop
xor
xchg
adc
es
or
or
mov
xchg
repz
incl
jecxz
bound
push
sub
inc
cmpsl
fiaddl
loope
insl
in
or
dec
mov
call
mov
or
mov
gs
neg
testb
mov
daa
jge
dec
xor
aas
js
aad
sti
decl
or
push
ret
repz
scas
dec
mov
in
in
scas
sbb
pop
es
int3
ds
jg
hlt
insb
mov
aam
mov
xchg
pop
push
push
mov
push
fbstp
ss
mov
pushf
jle
xlat
shr
dec
inc
jmp
dec
add
sbb
clc
inc
mov
int3
pop
or
push
lds
into
pop
or
xchg
bound
call
rclb
and
fsts
xchg
incb
in
dec
mov
nop
cmp
call
loop
push
hlt
out
rol
add
out
leave
mov
inc
movsl
mov
add
dec
test
fwait
loopne
stc
add
and
movsl
inc
sbb
sbb
decl
adc
incl
lret
or
dec
inc
or
mov
gs
cmc
int
xor
push
jmp
push
add
and
hlt
aas
es
pushl
int
scas
cmp
pop
mov
out
jbe
fwait
dec
xchg
arpl
mov
pop
outsb
sti
subb
mov
fwait
cmp
cmp
out
dec
mov
adc
add
jp
incl
int
scas
jge
push
push
shl
idivl
cli
enter
sub
ret
imulb
fldcw
das
jnp
test
dec
push
ds
movsb
lock
cmpsl
dec
push
adc
ljmp
mov
lret
dec
shrl
das
cmp
enter
and
and
out
mov
add
mov
jle
pop
outsb
test
push
mov
xor
movl
lcall
jp
and
aaa
jnp
test
or
fcmovnbe
inc
mov
cmp
cld
hlt
cmp
pushl
xchg
jns
ljmp
das
outsl
in
cmpb
das
loopne
lcall
lcall
xchg
dec
dec
stos
adc
pushf
lcall
cli
sti
and
or
jecxz
aaa
lret
lret
cmc
pushl
sbb
mov
push
mov
xchg
ds
pop
cltd
repz
xor
in
mov
fsubrl
pop
adc
and
dec
scas
negl
and
jne
pop
int
inc
ret
mov
das
jecxz
mov
add
pop
lahf
jns
mov
sti
xchg
pushl
nop
rorl
pop
mov
jno
dec
or
jmp
rcr
push
xchg
cmc
mov
syscall
mov
arpl
cmpsb
cmp
mov
rclb
popa
out
pop
lock
fdivrp
adc
xlat
and
dec
ja
leave
push
xor
mov
ja
push
ja
lret
decl
jae
div
sub
test
lods
cmp
pop
movsl
jae
mov
scas
andb
les
out
pop
icebp
jmp
cmc
adc
clc
xchg
or
add
pop
pop
add
addr16
into
jmp
cmp
jmp
repnz
cld
leave
xlat
sbb
cmp
sti
fidivrl
std
dec
stos
dec
shl
nop
fs
out
lcall
idiv
into
jo
xchg
fdivl
sarb
adc
push
xchg
jne
insb
cmp
lcall
or
jbe
lret
fwait
jg
and
push
inc
pop
push
mov
add
sar
push
je
pop
ret
jge
xor
mov
mov
inc
mov
sub
sti
push
jl
lcall
jg
add
push
ljmp
call
adc
fidivrl
andb
lcall
ret
sti
sub
jns
mov
mov
lret
jecxz
push
adc
sbb
or
mov
ja
push
pushl
outsb
pop
frstor
jmp
incl
adc
mov
out
ss
imul
jg
add
mov
dec
mov
sbb
jg
jmp
mov
xchg
loopne
aad
loop
xchg
dec
jne
mov
iret
mov
call
lret
sti
lahf
cmp
mov
aas
aam
lret
fnstsw
leave
js
and
sub
out
arpl
std
call
aam
repz
daa
mov
cli
push
xlat
fisttps
outsl
xor
rcr
scas
mov
dec
jns
xor
shlb
sbb
pop
push
dec
out
out
loopne
cmp
cmp
std
ljmp
pusha
in
jl
sbb
xor
sti
pop
add
lea
mov
call
insl
or
idiv
jb
mov
push
test
lahf
fcoms
movsl
lea
inc
jae
pop
inc
ret
fisttps
cmp
cmp
enter
adc
mov
jno
aas
cmpsb
push
xor
fwait
call
mov
or
or
jns
sbb
fndisi(8087
loopne
xor
add
and
ljmp
pop
mov
cmp
push
imul
out
dec
test
repz
jmp
test
hlt
dec
int
jns
jno
sbb
and
xor
hlt
int
cwtl
xor
push
pop
adc
lcall
add
repz
and
hlt
push
gs
scas
inc
cmc
inc
popl
sar
lcall
ss
shlb
hlt
movsb
adc
loop
pushl
xchg
clc
push
loop
mov
in
imull
xor
xor
push
je
mov
add
xlat
jecxz
sahf
mov
mov
stos
mov
cli
push
inc
jbe
mov
incl
cld
adcl
ss
aam
sub
frstor
aaa
incl
xor
stc
imul
xchg
fdivl
jg
pop
jae
cmp
icebp
jmp
inc
dec
out
cltd
enter
cmpsb
shrb
popf
dec
ljmp
mov
sbb
lret
mov
mov
mov
add
lods
sbb
dec
ja
decl
movsl
mov
cli
scas
jmp
mov
fbstp
outsl
data16
sub
push
aad
inc
gs
lcall
stos
je
cltd
in
bound
xor
movb
mov
adc
mov
jg
sahf
add
push
adc
test
pop
pop
movl
je
jmp
ja
jmp
add
fcoms
cmp
cmp
hlt
adc
ret
js
ljmp
clc
out
dec
push
cwtl
add
daa
pop
sbb
gs
rcll
in
dec
pop
pop
out
incl
int3
add
stos
mov
or
ljmp
jecxz
ret
arpl
lods
push
dec
loope
inc
and
cld
call
imul
push
das
popf
call
jo
cld
clc
cmp
jmp
ret
dec
add
sarl
out
lahf
mov
pop
ret
dec
mov
cs
push
mov
and
ret
dec
in
pop
decl
out
mov
sbb
fcompp
push
push
cmpsb
add
and
push
cmp
add
imulb
adc
gs
ret
test
dec
out
aas
dec
aaa
adc
neg
dec
subb
pop
mov
pop
enter
ret
lock
jle
sub
lcall
in
daa
cmpsl
cld
xor
loop
jp
sbb
jne
add
add
mov
xor
pushl
inc
aam
push
push
pop
js
fs
in
or
xor
mov
rcll
inc
ret
adc
and
xchg
sarb
ficompl
mov
insl
fwait
inc
fwait
push
and
ljmp
mov
jle
xchg
enter
dec
inc
jg
xchg
aad
mov
call
cmp
decl
in
push
inc
ljmp
loope
addr16
sti
call
pop
aas
int
xor
jmp
test
arpl
dec
inc
push
movsl
adc
push
lea
pusha
cmpsl
xlat
add
cmp
call
cmp
pop
mov
shlb
lcall
inc
popa
mov
jmp
inc
mov
pop
adc
cli
aad
pop
in
fcomip
sub
pop
adc
pop
je
icebp
sub
std
out
clc
push
add
notb
mov
push
dec
sbb
push
push
lahf
pushl
adc
mov
pop
aas
jmp
decb
push
push
sub
cltd
cltd
mov
test
and
inc
pushf
push
and
add
fs
adc
mov
xor
enter
notb
stc
cmc
scas
cli
jmp
inc
mov
movsl
or
aad
das
xlat
loop
lods
adc
es
cmp
xorb
int
cmp
dec
lcall
rcrl
cmp
cmpsl
pop
dec
ljmp
jl
fstps
lock
mov
push
das
jmp
xor
cmp
jne
adc
and
push
pop
js
mull
dec
mov
lret
or
outsb
shll
clc
sbb
icebp
or
and
sahf
sbb
sbb
idiv
call
out
ret
fwait
cwtl
js
out
arpl
rcrl
mov
push
jp
sbb
cld
pushl
rorb
sub
scas
cltd
test
jg
sbb
cs
pushl
cmovno
jae
fidivrs
pop
push
test
mov
rcrb
fs
shll
fsubrl
ret
sbb
outsb
cmp
mov
pop
int
mov
cs
inc
int
les
pushl
fstpt
sbb
leave
sbb
jae
test
gs
and
mov
int3
and
fstpt
dec
in
ljmp
clc
ljmp
mov
lods
sub
or
or
push
fwait
and
pushl
out
pop
cld
add
add
aas
ja
xor
jmp
mov
les
inc
add
lock
jmp
popa
repz
das
inc
xchg
outsl
jbe
test
mov
mov
cmp
dec
adc
fbld
movsl
push
mov
mov
sub
call
pop
popa
add
lock
incl
lret
ljmp
inc
daa
ret
inc
sbb
sbb
xchg
gs
aaa
jns
incl
sbb
cmp
shlb
lock
out
jo
movsb
insb
mov
in
dec
addb
das
in
xchg
or
or
add
push
cmp
fmul
xchg
aad
in
mov
cld
cmp
sbb
or
adc
sub
aad
scas
nop
jg
es
notl
pop
xlat
idiv
lods
fs
icebp
xor
and
lcall
int3
jg,pt
add
or
pop
mov
push
daa
mov
xor
lret
sbb
and
call
adc
fists
xorb
mov
pushl
ret
pop
cltd
shr
outsl
mov
incl
neg
mov
mov
icebp
fisubs
decl
mov
mov
mov
add
mov
add
into
incl
scas
inc
inc
adc
xor
test
push
xchg
mov
into
icebp
add
dec
lret
cs
inc
rcr
or
mov
mov
push
cld
fbld
je
jge
aas
das
mov
dec
lret
lods
imul
jne
lahf
sub
incl
fwait
js
icebp
adc
cwtl
stos
dec
push
js
outsb
dec
pusha
or
mov
mov
pop
adc
pop
xchg
idivb
nop
and
test
rcll
inc
push
xchg
inc
faddl
or
inc
add
cmp
dec
fwait
bound
push
sbb
jae
scas
dec
adc
aaa
stos
pop
lcall
jmp
popf
xchg
and
fbld
or
mov
or
xchg
jmp
push
and
std
lds
or
lods
xor
jne
mov
mov
add
pushf
hlt
xchg
add
push
call
cltd
cli
add
sbb
cmp
jp
aaa
cmpsb
mov
cmpsb
fwait
stos
jno
jne
jle
mov
cmp
jmp
push
cmpl
inc
push
fisubrs
cmp
mov
scas
push
jle
fwait
inc
cmp
lock
in
imul
imul
in
pop
lcall
xor
das
cmp
incl
lea
sbb
shrb
in
xchg
stos
or
test
pop
inc
pushf
jbe
call
cltd
bound
fnsave
push
and
lock
lret
add
call
sub
or
movsb
fsubl
mov
xchg
fs
pop
aad
setg
sti
mov
les
cmpsl
insl
les
aam
ret
mov
sub
iret
in
jb
call
sbb
iret
pop
or
test
push
inc
jnp
or
ret
inc
pop
in
add
pop
mov
incl
leave
pop
fnstcw
iret
adc
imul
pop
push
pop
mov
push
out
lcall
je
pop
mov
dec
push
dec
cld
pushl
cmpsb
mov
push
fbstp
andb
loop
mov
loope
into
push
adc
sub
pushl
arpl
fs
cwtl
dec
pushl
mov
adc
dec
mov
arpl
mov
sub
xor
xor
sbb
mov
stc
push
incl
jge
out
xchg
pop
pop
pop
pop
sub
add
in
fisubl
nop
scas
mov
stos
pop
jmp
rcrb
loope
das
and
jmp
cmp
sub
jo
imul
add
fnstsw
loopne
xchg
push
cld
or
insl
ljmp
mov
es
push
mov
push
push
inc
pusha
aad
push
lods
push
push
cmp
ret
mov
stos
int3
mov
notb
mov
outsl
lods
mov
int
push
xor
mov
push
mov
pushf
pop
das
sub
mov
sbb
leave
cmp
xchg
ljmp
push
mov
or
xor
push
sbb
mov
inc
sti
mov
pop
or
mov
mov
jg
fistpl
cmp
in
cmp
pop
addr16
ljmp
hlt
addb
jmp
imul
push
push
sbb
lods
mov
test
fisubrl
imul
dec
orb
xchg
scas
mov
push
mov
mov
out
cld
sahf
jecxz
fsubrl
jne
or
decl
in
imul
hlt
or
fwait
lock
incl
cmp
lret
dec
cmpsl
xlat
mov
les
or
lret
lcall
decl
mov
inc
into
cmp
sbb
mov
shll
lds
call
aaa
fwait
mov
xor
jmp
movsb
jp
sbb
aaa
add
pop
mov
inc
and
push
jns
jb
outsb
loope
cli
mov
sbb
add
ds
cmc
pushl
mov
xchg
shrb
mov
adc
cli
div
inc
xchg
loop
sbb
fbld
mov
ss
stc
enter
mov
fchs
mov
lcall
sbb
add
shrl
pop
je
repz
push
out
cltd
xchg
or
pop
idivb
add
incl
outsl
iret
cmp
icebp
push
popa
std
and
daa
sbb
das
fdivrp
clc
imul
pop
jmp
mov
divb
mov
xor
fs
mov
mov
fst
fidivl
lea
adc
out
out
es
jmp
and
inc
cli
adc
jnp
fmull
movb
stos
xrelease
pushf
enter
cltd
negl
cld
or
and
ljmp
out
ret
enter
insb
lret
loop
shlb
adc
imul
outsb
jnp
faddl
lods
in
bound
or
mov
push
mov
sub
pop
loope
std
sub
lea
jbe
or
fcom
mov
push
cld
lcall
test
test
or
pop
lock
int
fnstsw
fadds
decl
jo
mov
sub
inc
mov
sbb
mov
cmp
decl
pop
add
add
xchg
pop
mov
dec
push
push
int3
addl
out
lret
push
std
cmp
shll
push
mov
pop
mov
stc
rorl
repz
mov
mov
imul
cmp
sbb
insl
inc
jns
pushl
decl
or
push
fs
testl
push
mov
fwait
jmp
repz
mov
enter
call
sbb
xor
and
mov
xor
lcall
fwait
js
filds
mov
int3
inc
dec
push
rclb
xlat
pop
xchg
dec
insl
test
call
xchg
push
inc
xchg
add
fnsave
xchg
xchg
add
shr
call
call
ret
leave
stos
lret
mov
filds
xchg
push
sbb
adcl
xchg
adcl
adcb
int3
push
jl
jo
arpl
adc
add
loop
mov
ljmp
inc
scas
push
dec
pop
in
cmp
xchg
leave
cmp
movsb
outsb
movsl
push
add
xor
xor
sbbb
in
js
fcoml
incl
loope
adc
mov
sbb
shl
out
adc
mov
dec
push
add
jmp
adcb
mov
es
ljmp
push
mov
adc
movb
decl
nopl
jne
mov
xchg
loopne
lods
call
or
lcall
xchg
push
lcall
rolb
adc
jmp
dec
inc
and
shrb
adc
fs
fldl
and
xchg
adc
inc
xor
dec
xchg
mov
movsb
push
fcomps
aad
ror
hlt
test
iret
mov
lods
sub
inc
sub
cmpsb
mov
movsb
insl
cmpsb
dec
es
mov
mov
shlb
sahf
mov
dec
aas
and
aam
inc
sub
movsb
mov
jecxz
call
push
mov
cmp
and
arpl
cmc
mov
inc
decl
mov
adc
or
imull
repnz
in
mov
js
and
icebp
cld
ficoml
iret
add
sbb
or
cmp
adc
in
mov
cld
jg
cmpsb
push
decb
inc
xchg
pushf
ss
and
sar
lcall
lcall
add
sahf
cltd
inc
and
mov
jle
jmp
rcl
movl
subl
stos
and
clc
mov
push
dec
sub
adc
and
xor
jmp
or
jae
repz
inc
sub
insl
push
mov
mov
aam
gs
ljmp
sbbb
incl
decl
test
mov
pop
mov
sub
pop
mov
or
and
ljmp
push
pop
test
xchg
clc
inc
jno
cmp
mov
mov
push
mov
outsb
mov
adc
lds
lods
stc
repnz
nop
imul
mov
decl
pop
cmp
iret
xchg
mov
cmpsl
js
shlb
mov
jg
pushl
les
loopne
not
mov
cmp
maxps
mov
cli
jmp
sahf
xor
fmulp
adc
lcall
pop
pop
sarb
or
js
imul
add
lret
mov
sbb
movsb
ljmp
lods
in
dec
repz
sub
pop
xchg
addr16
pop
bound
lock
adc
jle
jb
jp
fcomps
cmp
lcall
sti
je
xchg
call
ds
pop
imul
pop
add
ret
ficompl
call
lret
add
adc
push
xor
jmp
inc
lea
test
jns
push
push
cmp
jmp
and
jl
add
pusha
xor
loop
mov
icebp
loope
inc
sti
fwait
add
mov
jmp
mov
mov
inc
into
push
insl
mov
or
pushl
test
dec
dec
leave
push
fidivrl
pop
lods
testb
shll
cltd
fbstp
shll
rol
and
inc
aaa
cmpl
outsb
fidivs
fs
xchg
or
sbb
mov
mov
sub
ror
popf
pop
imul
cltd
sub
lcall
cltd
mov
andb
or
dec
inc
dec
push
popf
outsb
lahf
sub
mov
jmp
jno
fdivrs
mov
and
dec
mov
sar
or
out
adc
dec
in
call
sar
cmp
push
in
mov
into
leave
fcomps
sar
pop
jp
fcompl
fucomi
jmp
aaa
pop
cmp
add
inc
loope
test
cmpsl
jnp
xchg
pushl
sbb
hlt
push
pushf
lods
cli
sbb
lds
adc
mov
mov
sbb
ficompl
cltd
jecxz
add
lds
bound
xchg
call
and
sub
xchg
pop
mov
testl
in
loop
push
arpl
cltd
out
sarl
stos
jle
aas
addr16
mov
cmp
incl
push
xor
dec
roll
or
pusha
jp
aas
pop
lcall
stos
sub
xchg
add
inc
pop
scas
add
adc
lcall
les
sub
loope
lods
ljmp
cld
xchg
aad
incl
and
sbb
sub
sub
mov
add
mov
add
ja
mov
pop
pop
lds
stos
mov
call
xlat
pop
mov
in
add
push
push
out
in
pop
push
sbb
dec
xchg
adc
xchg
mov
call
xchg
sub
cs
or
push
das
or
and
in
add
or
cmp
loope
cmpsb
movsb
outsb
adc
aad
xchg
cmpb
pop
pusha
loope
push
shll
test
pushl
xor
push
ret
mov
xchg
ljmp
lods
mov
cmpsb
shlb
lret
in
mov
mov
xchg
inc
hlt
pusha
leave
mov
fwait
pop
es
cmp
xor
add
in
mov
push
std
xlat
pusha
mov
stos
mov
lcall
and
push
mov
xchg
cmp
lcall
dec
inc
notb
xchg
rcr
sub
mov
pushl
or
xchg
negl
test
jne
rcl
out
jmp
pushf
lods
icebp
jnp
test
adc
rcl
jb
mov
movsl
out
aas
iret
imul
mov
incl
fsubl
jg
cwtl
push
shll
dec
lock
push
dec
xchg
jnp
outsl
sbb
lcall
ljmp
imul
daa
fstpl
rcrb
jns
pushl
pop
bnd
push
xor
jg
ret
xchg
pop
push
mov
out
pop
jg
cmp
pop
int
mov
mov
into
cltd
adc
push
push
test
leave
cltd
jae
xchg
lcall
into
cmp
icebp
mov
mov
cmpsl
std
shrb
cmc
scas
test
out
clc
bound
outsl
adc
out
push
push
in
dec
jg
xchg
call
lcall
or
push
dec
push
jmp
in
jb
sub
cmpsb
clc
mov
andb
lock
mov
sub
jg
subb
shlb
push
mov
dec
mov
scas
mov
ss
loopne
sub
shr
xchg
xchg
repz
pop
pop
lock
int3
ss
pop
ret
pushl
xchg
shll
sbb
xchg
and
jae
je
mov
lea
mov
jmp
mov
rol
mov
les
sahf
mov
inc
into
mov
popa
shrb
filds
and
push
scas
clc
adc
push
icebp
mov
data16
incl
xor
shll
xor
mov
fs
adc
push
jge
or
adc
ljmp
push
or
pushf
pop
ret
fildll
leave
add
jmp
sbb
lret
cmp
and
cltd
lods
inc
mov
xor
jmp
sti
mov
xchg
xor
inc
push
lahf
popa
sahf
mov
jl
test
incl
hlt
xchg
mov
adc
sbbb
sbb
jo
xorl
das
adcl
pop
jp
lret
xor
adc
pop
mov
dec
xor
call
and
pop
aas
jb
mov
jne
lret
out
push
add
cmpb
mov
cmpsb
ss
jp
mov
test
mov
repnz
scas
test
cmp
adc
push
call
insl
push
int
iret
cmpsb
pop
movsb
hlt
ljmp
das
mov
push
inc
jae
xor
pushl
mov
in
test
aas
rolb
inc
xlat
mov
aad
lret
cmpsb
mov
gs
or
call
jmp
jle
xchg
mov
cmp
repz
dec
dec
fdivr
ljmp
xor
aad
mov
jo
pop
dec
outsb
cmpl
add
and
ljmp
jae
stc
int
sub
fnstsw
jno
lods
inc
push
in
xor
mov
arpl
loopne
mov
mov
add
mov
mov
lods
cmp
dec
cli
ss
or
dec
and
or
orb
iret
aam
sbb
xchg
or
in
jg
sub
inc
jns
mov
test
sbb
loope
aam
push
add
cmpsl
aaa
cmp
decl
dec
mov
adcl
mov
cld
inc
pop
mov
mov
jmp
adc
nop
jae
cmp
aam
pop
add
in
or
mov
adc
idiv
decl
fwait
ss
and
fildl
pop
pop
dec
and
loop
inc
adc
decl
stos
xchg
mov
aad
lcall
xor
das
pop
add
jmp
mov
cmpsb
and
lods
movsb
dec
fnclex
lods
cltd
js
sbbl
lahf
sahf
stos
jg
popa
sbb
mov
dec
sub
sub
out
sub
mov
call
add
cld
ljmp
mov
jne
inc
fdivl
std
test
xor
ljmp
mov
push
lcall
pop
fs
add
dec
imul
repnz
xor
add
pusha
dec
pop
mov
pushl
mov
aas
inc
mov
inc
jnp
je
push
mov
adc
xor
je
sti
jb
or
dec
ljmp
leave
jp
cmp
rcrb
leave
xor
lds
cmp
cld
jg
lcall
daa
aad
sub
imul
ret
adc
clc
cmp
rep
cli
jmp
sub
or
xchg
pop
ftst
xchg
mov
lods
mov
fwait
mov
xor
call
cmp
call
cld
add
or
jg
mov
mov
mov
dec
push
jmp
push
mov
out
push
inc
pop
out
nop
push
stc
inc
addl
jbe
push
jnp
xchg
test
jmp
gs
sub
xchg
sub
int3
les
fldl
mov
call
sub
arpl
movsl
testl
les
lea
bound
pop
add
ljmp
fwait
pop
adc
loopne
mov
xor
cmp
mov
incl
pushf
notl
leave
push
mov
mov
cmp
jge
xchg
xchg
pop
es
sub
pop
mov
cld
jmp
aas
imul
mov
inc
jecxz
in
jno
into
xchg
mov
sbb
sub
int
std
sub
or
loop
push
stc
jne
stc
ret
cmpsb
mov
cmp
pushl
pop
jae
mov
cs
sub
sub
out
xchg
cmp
lcall
sub
add
mov
xor
sub
dec
push
nop
jb
gs
int3
int
xchg
addr16
mov
mov
push
pop
ret
jmp
cmp
cmp
call
mov
sbb
or
popa
xchg
inc
mov
push
adc
movsl
aas
int
mov
ljmp
and
fstps
nop
dec
jns
sar
pusha
in
subl
jbe
inc
fsubrp
adc
push
call
out
out
js,pn
xchg
std
adc
imul
cmp
popa
aaa
jmp
decl
sub
mov
mov
addl
mov
mov
clc
movsl
xchg
lds
xor
ret
jmp
jbe
push
scas
mov
call
mov
addr16
jg
xchg
fstpl
push
or
jle
pop
insl
dec
jnp
xchg
push
lds
dec
xlat
lcall
jbe
fadd
jp
mov
jo
repnz
testl
mov
jmp
pushf
xchg
cli
fdivrl
cmp
mov
push
mov
push
adc
jno
sub
and
xlat
dec
pushl
daa
ret
mov
or
dec
mov
xor
pop
jg
cmp
sbb
jmp
cwtl
rclb
adc
shrl
mov
inc
cmc
xchg
nop
jg
sbb
clc
js
pop
loope
jg
pop
jne
push
or
imul
xchg
push
out
mov
jo
adc
stc
mov
cvtpi2ps
clc
xor
mov
cmpsb
call
push
sub
xchg
daa
ret
lds
mov
mov
negl
mov
mov
imul
sti
fsubs
mov
jg
mov
test
fsubp
les
lcall
leave
push
adc
pushf
repnz
int
mov
adc
hlt
inc
mov
jbe
faddl
call
xor
inc
jb
cli
arpl
repz
pop
mov
mov
lcall
inc
ss
mov
add
jb
ret
cwtl
jno,pt
in
lea
jo
mov
xlat
loopne
jg
pushf
into
outsb
lahf
sbb
add
jns
mov
xlat
mov
call
add
sub
loop
xor
push
inc
jl
fnstsw
push
mov
fnstenv
cmpsb
outsb
pop
xor
test
clc
mov
shrl
lret
call
jne
jne
sbb
pop
scas
loop
sar
decl
ja
cli
enter
push
mov
insb
inc
pop
jne
adc
pop
mov
andl
and
jle
js
jno
movsb
fsubrs
daa
pop
mov
ljmp
dec
ss
aad
mov
jecxz
and
ffreep
or
mov
in
mov
outsb
dec
subb
jg
jle
inc
rcr
cmc
mov
sahf
xchg
dec
add
xchg
popf
popa
xlat
decl
fmuls
aaa
pop
sub
push
in
dec
clc
mov
sti
mov
xor
xchg
dec
in
lcall
loope
loopne
dec
scas
test
jnp
dec
lret
cmp
in
data16
shll
cli
out
xlat
jb
jae
add
fcomip
ror
push
stos
inc
pushf
shll
test
xor
fistps
cmpsl
and
adc
ljmp
mov
std
mov
pusha
bound
iret
jo
movsb
mull
test
in
clc
ljmp
scas
mov
add
cmc
or
mov
and
push
mov
ljmp
imul
jg,pt
sbb
fwait
mov
movsb
xor
jg
insl
ds
inc
insb
popf
mov
mov
mov
dec
idivl
sbbb
pop
fistpll
mov
mov
repz
sahf
shll
push
ficoml
xchg
aam
decl
sbb
or
mov
aaa
ljmp
jns
stos
push
faddl
jp
push
push
push
mov
fwait
inc
loopne
mov
push
cld
ljmp
cwtl
in
call
mov
lods
inc
add
push
and
sbb
insl
pop
in
inc
jge
inc
mov
sub
call
fcoms
dec
jne
loopne
cmpsb
add
ja
data16
add
jp
sbb
mov
fwait
repnz
xor
or
sbb
decb
mov
mov
jp
stos
ja
inc
fstpt
adc
push
jae
or
incl
pop
mov
cmp
gs
pusha
pop
in
rol
pop
cmpb
call
in
add
jg
in
lret
shlb
cmpsl
test
sbb
stos
popf
pushl
inc
es
jl
lret
movsl
jne
sub
and
in
or
filds
ljmp
loopne
sbb
cmp
imul
adc
scas
xchg
or
push
shl
xor
call
push
mov
nop
or
xchg
lret
cmovnp
roll
adc
add
sbb
inc
fsubrs
cmpsb
mulb
lcall
adc
inc
sub
pushl
cld
jmp
insl
sub
jl
inc
scas
sub
xor
cwtl
stos
outsb
and
xor
lcall
push
ror
stos
sub
mov
dec
es
xor
lcall
mov
decl
loop
call
mov
insb
cld
lret
lret
adc
add
cmp
pop
std
outsl
mov
hlt
mov
testl
andl
icebp
lcall
sub
call
pop
jmp
test
ljmp
cli
lods
nop
iret
mov
push
lods
xchg
popf
das
mov
sbb
mov
jne
data16
adc
std
or
icebp
mov
movsb
dec
push
movsl
movsb
mov
mov
lcall
xor
xor
adc
lret
mov
iret
sbb
and
ss
rcrl
les
test
add
ljmp
add
shll
pop
push
mov
mov
bound
pop
dec
movsl
adcl
ret
or
pop
add
fcmovne
dec
into
push
sub
pop
or
leave
nop
dec
push
mov
cmpsl
pop
xor
sbb
mov
xor
or
les
add
adc
daa
mov
push
sub
xor
push
fisubrl
divb
cmp
call
sbb
addl
add
adc
enter
fbstp
incl
push
test
es
fcmovnb
std
push
and
sbb
test
in
inc
sub
mov
sbb
in
ljmp
inc
jbe
xor
clc
test
subb
std
or
xchg
lods
loop
cli
mov
jg
imul
into
push
mov
jmp
push
inc
arpl
sub
pop
test
call
cld
aaa
pusha
scas
cmp
cs
sub
test
adc
add
cmp
lods
and
push
mov
ljmp
mov
pop
inc
mov
fisttps
jae
adc
loope
pop
inc
in
mov
cmp
mov
mov
aam
dec
cmpsb
mov
imul
pop
mov
inc
cli
mov
ss
lcall
push
lds
xor
out
push
pop
out
jp
xorl
scas
jmp
dec
clc
repnz
jl
add
xchg
adc
pop
mov
fdivrp
xchg
xchg
or
out
imull
pop
lock
lcall
cmpsl
es
jmp
inc
cmpsb
jno
out
aas
out
js
shrb
pushl
adc
inc
sarl
out
mov
mov
sub
pushl
stc
ss
dec
mov
das
aam
shr
mov
add
in
adc
xchg
shrb
xchg
cmc
xchg
cli
mov
mov
insb
mov
dec
loope
cltd
jnp
movsb
shl
dec
dec
stos
adc
dec
pop
call
stos
xchg
into
test
cld
cmpsl
pop
int3
push
ret
mov
pushf
and
jp
sub
decl
inc
ss
jg
xchg
enter
popf
mov
push
mov
push
lret
pop
sbb
iret
cmp
add
xlat
stc
fisubs
hlt
mov
xchg
cs
cmp
push
dec
sbb
sti
ss
fistps
cmpsb
sbb
cltd
mov
cmp
cmovle
sbb
stos
lods
mov
dec
push
stos
out
iret
fistl
gs
adcl
mov
cmpsl
cmpl
mov
outsl
push
jns
in
scas
idivb
pusha
adc
ror
repz
jg
hlt
lcall
int
adc
aam
rcl
fmull
sub
push
ret
xor
pushl
faddl
xchg
scas
lea
ljmp
decb
gs
test
stc
xchg
lret
ljmp
jle
scas
lods
lea
mov
push
add
mov
pusha
loop
fcmovb
and
xor
sbb
and
inc
jns
neg
inc
cmp
insb
xchg
mov
jo
mov
test
pop
or
jmp
xchg
jle
decl
pop
lock
jb
mov
test
lods
aam
stos
cmp
dec
push
daa
jno
mov
add
out
xor
jne
nop
and
call
call
ret
dec
sbb
add
mov
popa
xchg
cltd
add
mov
jmp
or
jns
or
mov
jg
add
test
lods
movsl
rcrb
decl
outsb
ror
inc
ljmp
loop
inc
enter
dec
cmp
loop
insl
adc
ljmp
clc
mov
mov
push
push
js
pop
jle
mov
and
scas
cwtl
inc
mov
call
loop
lds
popa
push
repz
in
dec
sbb
xor
fcoms
and
sar
jmp
push
pop
xor
out
dec
adc
push
xchg
insb
jecxz
jbe
or
rclb
cli
jns
push
cltd
in
jmp
pop
push
fs
sub
xchg
ficomps
and
mov
jmp
lcall
push
sbb
xchg
int
jg
mov
push
fdivs
xor
xor
ljmp
cmp
aaa
push
xor
mov
fldenv
daa
push
fistl
push
cld
mov
mov
pusha
std
and
rcrb
inc
mov
andl
jg
fwait
int
push
mov
mov
sub
mov
call
leave
sub
add
arpl
and
mov
push
sahf
pushl
sub
and
icebp
mov
adc
push
inc
jae
ret
lcall
inc
fsubrs
hlt
aad
lods
loope
dec
dec
aad
rcrb
loope
lods
xor
xchg
ret
cmp
pushl
push
dec
nop
push
fsts
shll
ds
mov
sbb
sub
std
call
test
adcb
inc
mov
push
inc
fistps
sub
jb
xor
push
sbb
push
sub
inc
ds
mov
stc
or
mov
in
hlt
leave
clc
mov
in
pop
ljmp
test
xor
jae
xchg
inc
mov
icebp
pop
mov
or
dec
add
sub
incl
lock
dec
fisttpll
fistpll
or
decl
std
pushf
and
mov
aam
xchg
fcomip
decl
push
sarb
jle
daa
mov
fs
decl
jb
jle
aaa
insl
adc
mov
stos
enter
stos
vmread
fsubrs
mov
sbb
xchg
inc
xor
in
mov
push
xor
cmpsl
loope
loop
bound
test
mov
inc
aad
js
or
ljmp
mov
rorl
pop
leave
ds
and
fnsave
lcall
faddl
lcall
push
popf
aas
mov
dec
pop
add
push
cld
jecxz
repz
inc
out
dec
xor
mov
mov
xchg
fildll
xchg
fisttps
sbb
cmp
movsl
lcall
mov
dec
pop
mov
inc
movsl
jb
sub
dec
lcall
cmp
incl
jb
and
inc
sbb
or
nop
sbb
and
cli
pop
sbb
shll
pop
std
decl
push
push
pop
clc
push
inc
xchg
aam
stc
mov
sub
add
psubw
incl
cmp
in
movsl
outsl
push
jmp
orl
xchg
scas
fs
xchg
mov
cmp
out
decl
or
in
sahf
adc
add
xchg
scas
mov
out
dec
cmc
iret
je
ljmp
mov
es
mov
data16
mov
ljmp
xor
lret
std
incl
iret
sbb
fildll
jnp
hlt
add
jno
psubsw
clc
loope
cmp
dec
dec
repnz
add
dec
push
test
daa
push
dec
rorb
sub
cmc
adc
call
lea
jae
hlt
jp
shrl
xor
hlt
negl
mov
adc
pop
pop
cmpsl
cwtl
fdivrp
jmp
cmpsb
ja
push
pop
dec
and
orb
adc
mov
xchg
shrb
out
fisubrl
cwtl
mov
push
cmpsb
imul
fisubrs
in
bswap
xor
mov
incl
jns
mov
mov
xchg
xchg
scas
mov
arpl
das
hlt
jg
jmp
sarb
stc
lret
stc
repz
out
loop
stos
das
lcall
mov
scas
lock
leave
mov
push
es
testl
in
aaa
enter
fiaddl
test
cmp
mov
add
repnz
imulb
or
fldcw
les
add
mov
leave
into
dec
sbb
add
push
or
insl
push
and
push
das
orb
cmc
pop
sbbb
pop
cwtl
xchg
es
ljmp
xorl
mov
fdivl
xor
dec
out
stc
xor
jl
aaa
sbb
je
out
add
ljmp
push
enter
lret
inc
or
or
enter
addr16
or
sub
call
xchg
lods
and
daa
xor
mov
mov
scas
clc
cmp
daa
jge
pop
mov
cmp
test
fisttps
jno
lea
inc
mov
dec
pop
hlt
dec
ljmp
inc
test
sbb
xchg
lret
xor
mov
insl
pop
push
adc
ljmp
adc
cmpsl
cmc
xor
popf
sub
jb
movsb
test
cmp
adc
and
js
pop
loop
pop
bound
dec
xlat
in
stos
pop
jmp
and
inc
xor
sbb
jmp
xchg
xor
inc
jge
jnp
dec
scas
sti
ss
cwtl
dec
mov
int3
mov
mov
fcoms
jmp
sbb
inc
push
push
idivl
jle
adc
adc
dec
lcall
call
inc
addr16
adc
cmpsl
pop
mov
int3
int3
xchg
adc
jns
sub
adc
mov
dec
jmp
mov
aaa
test
adc
aad
dec
add
pop
fs
rclb
int
jmp
jo
js
in
or
fbstp
cmp
xor
pushl
dec
fisubs
mov
outsl
movzbl
sub
sbb
incl
gs
int3
sub
pop
mov
out
test
or
fnclex
insl
or
push
or
lcall
mov
dec
add
repz
xchg
pop
shll
lods
mov
cld
or
cli
mulb
enter
incl
cmp
pop
adc
subl
loop
inc
lahf
dec
xchg
cmp
jmp
cmc
cwtl
mov
jmp
loop
push
add
iret
xor
mov
shll
adc
popf
mov
popa
push
lcall
mov
and
pop
test
popa
mov
mov
or
leave
mov
dec
incl
jge
cmp
rcrl
inc
sar
and
arpl
inc
cmp
mov
push
add
int3
into
decl
jmp
jo
xchg
cmc
pop
call
dec
out
mov
push
movsl
sti
fidivrs
call
ficoml
inc
inc
jnp
xchg
mov
scas
int3
aas
mov
mov
fdivrs
fisubl
adc
ja
test
aam
addr16
pop
jmp
mov
pusha
adc
sub
sub
decl
mov
jae
into
ds
in
jp
rclb
xchg
stos
mov
scas
shlb
fbstp
mov
jo
mov
xlat
and
inc
shl
xchg
rcrl
ja
xchg
loopne
call
mov
sbb
stos
jle
inc
jo
sarl
pushf
adc
rcrl
fidivrl
jmp
push
scas
movsl
adc
aas
cli
cmp
movsb
dec
ljmp
rclb
xchg
xchg
ficoml
dec
ss
pop
jbe
mov
into
push
dec
movsb
jnp
ljmp
mov
mov
dec
xchg
out
fs
test
ja
into
fndisi(8087
mov
pushl
add
testl
mov
mov
inc
stos
addr16
sub
inc
popa
add
cmp
loopne
ja
cs
pop
insb
icebp
aaa
fcoms
data16
inc
insl
cli
js
sar
lcall
jns
sub
push
aaa
mov
push
adcb
sub
cs
xor
mov
jg
dec
mov
out
jp
ret
jnp
sbb
pop
mov
int3
pop
or
call
or
jle
lret
xchg
xchg
gs
nop
lea
aas
loopne
cmpsl
pop
jmp
ljmp
incl
pushl
cmpsb
movlps
sbb
ja
xchg
mov
adc
cli
gs
and
daa
lcall
test
xchg
leave
fcompl
or
jnp
mov
movsl
test
xchg
fs
jl
lods
cmp
cmp
lea
hlt
sub
incl
lahf
data16
sub
lcall
ja
inc
stc
xchg
mov
push
clc
sar
xor
ljmp
fdivrs
sahf
adc
jns
std
xchg
mov
xor
mov
int
pop
lcall
daa
sbb
imul
inc
and
xchg
out
jecxz
out
xor
mov
jl
push
mov
xchg
inc
aam
data16
or
lret
lret
add
dec
xchg
dec
xchg
inc
lea
push
icebp
jmp
jnp
and
sar
jae
or
mov
xchg
addr16
jge
dec
bound
push
xor
mov
pop
mov
push
mov
incl
cld
mov
pop
fsubrl
fdivrs
xchg
pop
sub
jmp
mov
pushf
mov
ljmp
add
push
and
into
mov
adc
pop
mov
mov
mov
rclb
stos
inc
xor
add
sti
mov
jmp
pusha
inc
clc
mov
sub
mov
outsl
enter
fnstsw
xor
dec
mov
ljmp
out
aam
loope
std
paddq
in
cmp
int3
mov
pusha
lahf
jle
mov
adc
incl
mov
mov
fcmovbe
add
jnp
repnz
xor
mov
fidivrl
or
jns
pushl
push
popa
cmp
std
cli
cli
pop
pop
add
cli
rcll
xlat
pop
ret
lahf
mov
out
inc
fisubs
loopne
jl
aad
jl
mov
pusha
loopne
cmpsb
inc
out
clc
fcomip
lea
jmp
adc
mov
push
divb
adc
decl
mov
pop
decl
rep
sub
bound
decl
fwait
mov
cltd
xchg
into
testl
push
incb
or
cmp
icebp
sbb
ret
jge
out
cmp
sti
stc
cmp
cmpsb
dec
sar
lcall
and
test
inc
das
cmp
ljmp
cwtl
loopne
lret
int
pop
daa
outsb
mov
lret
ljmp
pushf
mov
jmp
aam
xchg
dec
xchg
push
xchg
push
rol
sbb
call
push
movsl
dec
pushl
cld
stc
add
lret
jne
loope
mov
pop
xor
aaa
in
fdivrp
cld
mov
daa
cmp
lret
aas
sbb
and
sbb
inc
fdivrs
ret
ljmp
inc
aaa
and
les
sbb
pop
sub
sbb
ficoms
in
push
hlt
incl
adc
fists
les
fcmovnu
cmpsb
mov
add
adc
cld
ffreep
scas
jb
rorb
aam
and
dec
std
shl
mov
popa
jl
out
mov
push
mov
js
add
inc
cld
pop
jno
arpl
call
loopne
popa
scas
push
imul
and
sbb
push
inc
aad
js
push
rcrl
pushl
popf
aaa
cmpsl
xor
jae
fadd
mov
cmp
shll
gs
std
fwait
push
jle
add
sbbb
fnstsw
lcall
daa
aaa
pop
mov
dec
lock
pop
xor
shrl
cld
cmc
or
ret
dec
ljmp
scas
xor
inc
xor
push
xchg
aam
into
cmpsb
inc
mov
pushl
inc
cltd
inc
out
dec
mul
cmp
push
cmp
push
std
lea
stos
cmc
fmul
imul
mov
xor
cmp
insb
dec
inc
or
mov
or
jle
stos
aad
sub
js
xchg
add
dec
push
dec
and
jmp
pushf
sbb
push
pop
scas
pop
movsb
or
inc
lds
mov
ss
or
pop
xchg
scas
xor
push
pop
mov
mov
pop
lea
decl
outsb
lahf
sbb
and
in
into
mov
xchg
pushf
hlt
mov
xor
pop
mov
sbb
dec
or
loop
mov
sbb
es
mov
out
or
cmp
add
std
call
or
mov
jl
pop
adc
xchg
je
mov
lcall
adc
pop
cli
inc
sbb
push
pop
mov
sbb
dec
testl
ljmp
arpl
movsl
mov
add
dec
stos
xchg
adc
and
fidivrs
inc
or
mov
sbb
cmp
sub
mov
outsb
arpl
push
or
es
sahf
or
decl
push
loop
es
or
hlt
mov
je
push
dec
mov
pop
mov
dec
jbe
lcall
pop
out
adc
or
mov
repz
icebp
xchg
xor
pushl
xchg
mov
movsb
push
jae
pop
or
sahf
xchg
stc
push
repnz
jns
pop
mov
mov
ret
fwait
push
and
sub
dec
in
xor
test
dec
or
mov
insl
inc
out
jo
mov
fcomip
jae
ja
stos
cmp
dec
addb
cld
push
ret
in
xchg
incl
jns
jp
sbb
call
pushl
data16
mov
arpl
ficompl
das
push
incl
jbe
xchg
push
mov
mov
mov
fs
xchg
stos
cmp
in
aaa
adc
cmpsb
push
call
out
dec
ret
fs
popa
dec
jg
pop
test
iret
rcr
scas
lret
ljmp
jnp
shrl
mov
cli
jo
adc
pop
mov
iret
mov
adc
test
cli
sbb
cs
test
pop
incb
cmp
push
mov
push
ljmp
shlb
mov
push
push
fists
push
jge
dec
xor
add
and
ja
pushf
test
lcall
pushl
js
mov
xchg
mov
leave
jg
inc
cmp
cltd
std
jecxz
sub
xchg
fwait
lret
dec
lahf
notl
ret
pop
xchg
je
rorl
mov
jae
mov
out
cmc
test
inc
jmp
jae
adc
dec
sbb
pop
inc
jns
jle
rcll
sbb
pop
cmpsl
mov
jl
push
jo
in
adcl
xor
inc
push
push
aam
jmp
xchg
enter
fldt
mulb
jmp
mov
popf
mov
scas
incl
sub
inc
xchg
fwait
aam
mov
fstpl
cmc
jmp
lret
loopne
shrb
rorl
adc
dec
int
cmpsl
and
ja
dec
lods
sub
pop
pop
pop
jne
test
gs
in
add
mov
mov
adc
test
pop
in
fsubr
loop
xchg
inc
push
xor
xor
jmp
mov
rol
cmpsb
aam
add
push
mov
test
pop
lcall
call
mov
or
jb
divb
sbb
lahf
pop
movsl
icebp
in
cmpsb
sti
in
sbb
es
mov
mov
mov
mov
inc
hlt
mov
movsl
popf
dec
xchg
pop
movsl
das
jecxz
loope
call
std
inc
fwait
ss
xchg
imul
mov
push
dec
add
imul
push
dec
movsl
pushl
pushf
lods
jns
or
inc
inc
out
arpl
or
and
jbe
jp
call
jmp
add
fwait
mov
aas
or
scas
adc
cmpsb
loope
jmp
pop
mov
stos
test
out
ror
in
push
jbe
inc
mov
jmp
sub
dec
pop
outsl
cmp
jne
add
mov
mov
push
mov
insl
jno
insb
push
hlt
lods
cli
inc
and
popa
bound
jbe
nop
push
decl
mov
out
scas
push
imul
das
push
inc
mov
mov
push
push
dec
xor
jmp
mov
fstpl
in
loopne
imul
enter
call
mov
call
lds
ret
pop
push
outsb
push
orb
jmp
or
stos
adc
mov
sbb
incl
mov
sbb
xor
xchg
or
mov
call
push
pop
jp
push
lret
mov
mov
aaa
jne
shlb
sbb
les
sbb
aam
arpl
mov
scas
mov
mov
fadds
sub
mov
push
jg
pop
pop
adc
mov
lods
or
pushf
jl
aad
dec
mov
add
pop
pop
xchg
push
xor
inc
adc
clc
cwtl
xchg
lea
pushf
jmp
stc
pop
aad
mov
or
icebp
xchg
rcll
fcoml
call
xchg
lods
mov
adc
daa
shl
sub
insb
ret
mov
pop
cmpsl
jne
mov
push
test
jp
inc
ficomps
add
lret
outsb
sub
jmp
dec
adc
jmp
lds
ret
pop
mov
sub
jmp
nop
xor
dec
test
and
stos
mov
dec
enter
outsl
in
aad
jecxz
pushl
xchg
adc
sbb
divb
push
decl
jne
cs
scas
sbb
xchg
push
incl
mov
sbb
pop
lock
pop
add
cmp
lcall
dec
push
inc
adc
jp
sbb
jb
and
pop
loope
call
mov
pop
cmp
test
jno
pop
imul
xor
pop
pushf
shlb
jnp
rcrl
jp
jmp
or
icebp
cmpb
sub
rcr
jge
push
inc
or
mov
push
std
lcall
shl
loop
xchg
out
lret
scas
push
icebp
mov
outsb
xchg
mov
push
std
aaa
push
lret
movsl
cli
jge
gs
ss
lcall
add
dec
mull
sbb
mov
testb
inc
dec
mov
sub
in
orl
push
insb
lcall
push
push
mov
inc
divw
into
push
ja
cmp
ds
popf
int
jg
jmp
or
bound
push
subl
sbb
test
mov
pop
hlt
decl
add
adc
or
xchg
dec
or
sbb
or
cld
and
daa
ljmp
shlb
xor
jb
adc
ret
shll
dec
shrl
ret
mov
fstpt
fsts
push
cmp
or
pop
cmc
add
add
nop
adc
sahf
dec
into
xchg
sbb
cmp
jns
xchg
lock
pop
dec
sub
dec
mov
add
fwait
lcall
decl
push
fdivs
rorb
scas
or
rcr
lods
add
nop
rcl
xor
jg
dec
ret
movnti
mov
scas
loopne
bound
xor
andb
decl
adc
fistpll
scas
push
inc
cmp
ret
xchg
and
add
mov
decl
movb
loope
ret
or
jae
cmp
outsl
movsl
push
mov
mov
pop
sub
imul
test
int
addb
out
cli
ljmp
ja
rorl
xchg
add
rcll
xchg
cwtl
loope
lcall
adc
ficoml
ret
jno
mov
adc
push
mov
xor
idivl
incl
sbb
mov
xchg
xor
cmc
in
sub
dec
add
push
xchg
fnstsw
incl
jecxz
mov
pop
aaa
int3
push
and
mov
mov
jns
pushl
and
dec
js
or
fnstcw
push
test
rorl
fxch
cmpsb
imul
or
mov
sub
or
cltd
mov
js
cs
stos
jecxz
stc
sbb
inc
lods
inc
mov
decl
and
xchg
bound
inc
insb
aas
pop
lea
xor
xor
dec
jmp
loopne
xchg
aam
ret
push
cltd
pop
insl
xchg
fbstp
jp
inc
pop
lods
pushf
cmp
js
enter
add
xor
xlat
sbb
push
mov
popa
or
loopne
incl
jl
or
and
or
xchg
jne
out
sub
pop
std
jmp
arpl
adc
test
lret
js
cli
lds
fldenv
fcompl
mov
lds
adcb
in
dec
mov
enter
xchg
sub
cmp
ljmp
adc
lahf
fnclex
fs
mov
jnp
push
ret
mov
mov
decl
mov
inc
cwtl
jns
push
jno
movsb
pushf
jo
xchg
dec
pop
add
jmp
fistps
jecxz
cmp
jb
inc
popf
pop
icebp
mov
pushl
jmp
sarl
repnz
xor
fcomip
mov
dec
cld
cmp
xor
or
pop
mov
xor
jmp
outsl
adc
mov
pop
jb
pusha
repnz
mov
inc
jne
adc
xadd
push
stos
jmp
and
aas
add
pop
sub
test
addl
adc
pop
add
sti
mov
divl
mov
cmp
push
js
push
push
push
jle
setl
call
sub
in
addr16
loop
or
sti
ret
push
repz
negb
in
xor
lcall
mov
mov
ds
mov
loope
ljmp
sub
xor
out
jae
pushl
cld
push
gs
cmp
js
seta
aad
push
mov
push
or
push
jp
test
push
mov
in
out
jg
int3
mov
xor
shll
aam
data16
js
insb
mov
jnp
lcall
sub
js
dec
or
mov
mov
call
xchg
lock
inc
add
incl
in
rolb
shl
fisubrs
aaa
sub
popa
cmpsb
mov
xor
pushl
inc
push
sub
gs
xchg
jae
les
sbb
push
push
inc
adc
cmp
jle
cmp
pop
pop
sti
rorb
cmp
sub
mov
or
mov
mov
gs
scas
les
xor
xor
mov
popa
decl
ljmp
popf
xchg
dec
xlat
scas
movsb
ds
call
jg
add
adc
or
in
incl
fsts
dec
addl
add
mov
push
loopne
sub
imulb
xor
and
mov
int
mov
pushl
iret
loopne
push
add
xchg
cmp
insl
lcall
pop
incl
mov
enter
push
and
sub
sub
lret
fimuls
push
sbb
xor
test
outsl
fcoms
movl
pop
jg
test
roll
popf
sar
fsts
in
cmp
aad
inc
leave
fisubrl
push
adc
test
xor
mov
xchg
dec
mov
jmp
sub
mov
mov
imul
enter
movsl
push
and
pop
insb
outsb
dec
sbb
jmp
and
fdivs
or
lods
imul
cli
mov
pusha
sbb
xchg
xchg
and
dec
popf
pop
jno
inc
divb
mov
fmuls
xchg
mov
and
mov
hlt
push
inc
aas
mov
sbb
jns
mov
mov
add
jecxz
je
pop
fsts
mov
decl
jnp
inc
call
aas
inc
pop
adc
lret
ja
jp
sbb
call
test
xor
pop
push
mov
aad
lods
pop
mov
sbb
jmp
mov
fsubrs
sub
push
jo
pop
fnsave
in
std
or
hlt
jmp
fidivl
inc
mov
data16
xchg
xchg
jnp
jo
inc
fidivrl
rcl
add
lock
fs
and
dec
negb
decl
in
adc
lods
out
jge
mov
clc
out
out
sub
leave
leave
jecxz
cmp
xchg
fbstp
dec
and
jbe
adc
inc
out
fs
jle
and
or
push
jnp
and
ficoms
push
and
and
frstor
push
push
das
and
incl
sti
fdiv
pop
out
sar
xchg
inc
mov
push
out
and
push
sbb
jno
mov
inc
clc
lcall
add
inc
mov
scas
inc
outsl
mov
ja
cmp
jno
jge
lret
shlb
divl
push
mov
loopne
jp
jle
aad
jg
or
add
mov
jb
stc
mov
fnstcw
in
dec
rol
scas
jg
incl
pusha
mov
lods
sbb
cmp
lret
inc
jnp
push
lds
ss
incl
jb
out
mov
arpl
cs
push
pop
dec
es
mov
mov
cmp
aaa
mov
cmp
dec
aad
leave
in
jb
les
daa
push
xchg
push
inc
cmpsl
ljmp
xor
dec
xchg
out
aaa
sbb
rol
jnp
add
cmp
jg,pt
mov
es
mov
sub
daa
mov
sub
mov
xchg
mov
int3
iret
xlat
mov
mov
out
mov
jb
inc
push
mov
xchg
adc
popf
jbe
sbb
mov
adc
inc
cltd
in
adc
push
pop
pop
mov
add
lcall
push
in
scas
test
xor
adcb
push
lods
mov
xchg
fisttpl
int
dec
decl
leave
loopne
adc
fcoml
or
in
jmp
sarb
in
sub
fst
jne
hlt
mov
lcall
jg
xchg
cmp
mov
int
js
dec
cmpsl
mov
nop
mull
shrb
mov
decl
push
cltd
inc
hlt
add
sbb
ja
pop
test
mov
add
sahf
dec
or
lret
lcall
dec
cmp
pop
or
rcrb
xlat
mov
or
jge
push
pop
jge
sub
dec
or
loop
xor
js
pop
xchg
enter
push
lcall
jle
mov
iret
ds
inc
mov
ret
jmp
mov
pop
xor
inc
ss
cmpsl
jp
pusha
stc
adc
aaa
jecxz
decl
outsl
adc
xchg
mov
insb
xchg
je
loopne,pt
xor
inc
push
popf
adc
insl
cld
stc
push
push
movb
add
hlt
mov
in
dec
jmp
pop
or
popa
std
jmp
pop
sub
hlt
pushl
push
pop
push
push
ret
pop
mov
jbe
xchg
popa
pusha
cmc
nop
mov
incl
imul
and
sbb
scas
repnz
fisubs
mov
cli
rol
mov
lock
repz
mov
aam
lcall
or
testl
mov
sbb
test
and
mov
fsubrp
data16
fwait
ret
nop
dec
mov
stc
adc
out
cmp
call
cwtl
in
mov
jbe
lods
xor
std
xchg
add
in
adc
jp
xchg
xor
jecxz
mov
lock
ret
xchg
cli
xchg
int
leave
gs
xchg
call
cld
lcall
cmp
mov
ss
dec
mov
and
dec
out
pop
les
ss
mov
jmp
repz
ret
pop
inc
mov
lods
push
pop
or
cld
inc
adc
adc
add
jp
pop
lods
xor
imul
stos
ljmp
in
inc
push
fwait
push
sbb
jne
lods
cmpsl
clc
inc
jae
arpl
sbb
mov
mov
mov
call
push
fsubr
xchg
iret
scas
adc
pop
mov
call
inc
inc
push
mov
push
lret
test
loopne
aas
cld
xor
imulb
lret
cwtl
or
xchg
incl
adc
cs
mov
iret
adc
xchg
inc
bnd
mov
ljmp
jmp
and
out
jb
add
inc
lret
sub
xchg
enter
xor
icebp
call
pop
fdivl
xor
daa
and
dec
mov
subps
decl
lret
sbb
lods
push
das
cs
rcrb
icebp
xor
jae
cmp
dec
push
movsb
pushl
repnz
dec
loopne
sahf
cmc
add
jmp
out
push
fs
add
xorb
popf
mov
lahf
adc
mov
pop
sarl
add
clc
jg
das
imul
mov
and
cmp
ljmp
ss
sub
xchg
adc
scas
loop
xor
jmp
int
cmp
in
jns
orb
jb
imul
push
add
push
push
sbb
mov
push
sbb
push
xor
arpl
xor
push
dec
popf
mov
jmp
xchg
mov
mov
push
and
mov
inc
jg
outsb
mov
rclb
stos
loope
fwait
mov
jg
ret
xor
ret
push
in
fcmovu
xchg
jg
mov
sub
push
push
negl
inc
cmp
sti
call
cmp
dec
xchg
mov
jmp
dec
inc
aad
pusha
mov
rolb
sub
es
lock
arpl
dec
lods
enter
mov
mov
inc
dec
ljmp
cmp
ljmp
dec
stos
cmc
inc
in
add
sti
test
mov
nop
pushf
xchg
and
ret
cmp
insb
jmp
pushf
xchg
scas
add
pop
cmp
mov
sub
xchg
fucomi
pop
in
les
dec
call
mov
repnz
iret
mov
or
mov
add
sahf
mov
les
in
call
out
insb
repnz
xor
and
hlt
mov
popf
xor
test
dec
lock
clc
pushl
mov
xchg
pushf
hlt
xchg
xrelease
repz
pop
sbb
mov
mov
cmp
pusha
test
shl
into
push
xchg
adc
jmp
daa
sub
sarl
cmp
cmpsb
cmpsl
test
rcrb
xchg
shll
mov
pop
push
push
cltd
jg
cmc
add
dec
cmpsl
dec
or
mov
jb
jge
stos
mov
pushl
add
mov
out
in
xlat
add
test
pop
movsb
inc
outsb
pop
sub
ret
lcall
aas
loope
sub
test
push
pop
fdivl
call
dec
enter
cli
ljmp
and
mov
cmc
cmp
mov
mov
pop
loopne
es
popa
dec
ljmp
pop
push
mov
pop
push
insl
sub
in
lret
inc
pop
popf
sbb
adc
adc
inc
cmp
incl
inc
lahf
dec
mov
cmp
test
push
adc
or
pop
adc
repnz
stos
aas
xor
sbb
decl
or
xchg
mov
xor
mov
ljmp
call
jle
enter
mov
movsb
or
pop
cli
subb
and
xchg
mov
lcall
adc
or
out
add
pop
pop
jmp
stos
push
lcall
jmp
mov
add
push
mov
into
nop
and
push
pop
pop
cli
call
push
je
or
mov
mov
push
int
hlt
aas
addb
test
mov
adc
das
cmp
fcomps
lcall
out
ds
inc
mov
inc
out
ret
ret
das
test
pop
fabs
mov
inc
mov
or
out
ret
mov
loopne
pop
push
mov
xor
mov
incl
cmp
fwait
repz
sub
out
fld
cmpsb
pop
shrl
adc
xchg
or
push
incl
insl
jb
movsl
roll
stc
loop
adc
inc
test
pop
test
fistpl
sbb
mov
lret
mov
stos
jne
or
xor
shl
mov
cld
jmp
mov
fadd
push
inc
mov
sbb
out
sub
pop
inc
incl
dec
leave
arpl
hlt
pop
sub
jae
push
lcall
scas
dec
xchg
popf
insl
cmp
add
push
cld
cli
fistps
test
push
mov
movsb
popf
sbb
sti
lcall
test
xchg
hlt
mov
cltd
out
retw
popf
cmp
mov
incl
dec
push
mov
sarb
iret
mov
xchg
mov
sbb
xchg
iret
push
icebp
xchg
outsl
jmp
mov
rcll
add
dec
push
adcb
mov
push
leave
adc
fnstsw
mov
mov
jb
pusha
leave
lahf
ds
sub
inc
push
adc
cld
incl
push
mov
jae
and
std
pop
jne
cmp
xor
sti
sub
mov
ss
sub
push
push
bswap
incl
mov
add
aaa
test
es
pop
push
cmp
or
outsl
test
xchg
add
fdecstp
dec
pop
dec
rcll
imul
push
fwait
fwait
mov
sub
sub
push
xor
incl
shrb
pop
outsl
call
sbb
test
aam
mov
sbb
mov
mov
xchg
call
mov
xchg
adc
xchg
sub
les
stos
js
mov
lds
addr16
lock
xchg
imul
push
fildl
jo
shll
mov
mov
jmp
inc
imul
popa
ljmp
in
jecxz
std
cmp
stos
daa
insb
mov
mov
jle
adc
and
test
mov
or
add
push
sarl
les
aad
dec
pushl
mov
inc
cmp
hlt
mov
cmp
bnd
out
push
pop
out
mov
insb
sbb
inc
lods
and
pop
jmp
shrl
int
and
mov
decl
sub
mov
mov
ds
sti
hlt
nop
mov
xchg
lods
je
and
jp
inc
or
inc
or
jns
inc
mov
dec
adc
addr16
sbb
xchg
jg
test
fwait
cwtl
in
shl
add
test
sbb
pushl
cmpsl
or
imull
in
rolb
inc
std
into
cmc
cmp
xchg
push
pop
outsl
in
mov
push
mov
fucomp
mov
lods
lods
scas
add
enter
lcall
shll
sahf
push
fs
mov
test
sarl
cmpsb
cmp
dec
decb
cs
mov
add
xchg
mov
push
outsb
xchg
add
pop
adc
popl
fs
or
push
out
add
lcall
jno
lods
jle
hlt
mov
push
jmp
aas
mov
jmp
fmul
sub
xchg
pop
push
jge
cmpsl
testl
dec
fidivs
jno
jne
decl
lahf
lcall
cmp
xchg
xlat
loopne
jecxz
pusha
mov
pushl
aas
or
jp
push
mov
add
or
das
aam
mov
jno
adc
mov
divb
mov
subl
stos
jmp
shld
push
aad
dec
pop
adc
lcall
fstps
jmp
iret
inc
das
jo
std
mov
popa
testb
inc
jge
jb
jmp
push
fcomip
jmp
sbb
leave
in
shlb
jo
xlat
push
test
loope
mov
mov
push
cltd
sbb
fcmovnbe
push
dec
jg
sahf
dec
movsl
jle
and
lret
jg
fcomip
jns
in
ret
mov
clc
das
in
dec
ds
mov
decl
and
or
outsb
test
sub
mov
jnp
xchg
adc
imul
ljmp
cld
mov
sbb
sbb
mov
fwait
pop
and
lods
jne
inc
sahf
cli
mov
xchg
sub
rcll
cmpsb
out
mov
ror
iret
hlt
outsb
incl
call
xchg
xlat
xor
xchg
lret
dec
mov
loopne
pop
aam
cmp
aas
inc
xchg
out
adc
lods
xor
sbb
lret
cmc
clc
dec
pushf
pop
add
jns
jb
cmp
jmp
sub
add
bt
movsb
push
test
mov
cmpsb
lret
call
xchg
xchg
das
lahf
jg
in
andl
jne
filds
or
pop
mov
jg
ja
loopne
pop
mov
or
pop
mov
cmc
ja
sbb
fistps
or
sub
das
dec
mov
shll
xchg
shl
sbb
lcall
fbld
aas
and
lock
or
mov
ret
jne
sbb
call
stos
out
lods
mov
lods
add
pop
call
mov
cmp
call
lret
adcl
push
out
pop
out
shll
neg
mov
xchg
lcall
aaa
adc
sub
push
mov
pushf
cmp
hlt
imul
push
xor
adc
mov
sub
insl
cld
lock
in
lret
mov
cmp
aaa
std
fcomip
push
or
mov
cmp
add
push
jl
mov
add
jg
jecxz
fsubrp
xlat
loop
sahf
xor
cmp
xorb
fadd
fistl
cs
dec
stos
jg
hlt
push
or
dec
fwait
mov
mov
out
stos
insb
lea
inc
pop
in
js
fadds
mov
nop
or
push
push
mov
push
iret
gs
rcl
and
shrb
adc
pop
adc
iret
ja
sub
cmp
cmp
pop
mov
movsb
cmp
jmp
fbstp
sbb
and
mov
fimuls
mov
xorb
arpl
add
mov
stos
pop
inc
and
mov
pop
insb
call
mov
dec
sub
mov
je
jmp
cmp
incb
push
mov
lret
fst
ret
popf
mov
push
lcall
xchg
mov
imul
daa
pop
mov
dec
in
mov
aas
sub
or
call
in
pop
dec
xchg
cwtl
inc
or
xchg
ret
dec
xchg
push
cmp
cmp
inc
lcall
adc
scas
push
shlb
adc
xchg
cwtl
fstpl
stos
add
mov
mov
push
rcrl
ret
jl
jne
inc
popa
rcl
cmc
add
incl
pop
sahf
push
or
dec
push
arpl
addl
and
mov
ret
dec
sahf
test
out
in
xor
pusha
add
jo
add
mov
adc
jp
decl
ja
imul
int
int
ss
xchg
cld
lret
fcmovb
lods
addr16
mov
gs
movsb
in
mov
das
xlat
fimull
inc
aas
push
and
cmp
push
dec
sub
pandn
fcompl
inc
mov
out
pop
ja
or
orl
pushl
jae
mov
pusha
ret
push
dec
rolb
pop
mov
std
pushl
adc
add
popf
mov
push
mov
xchg
mov
scas
or
call
add
enter
xor
icebp
cmp
int
dec
movsb
test
imul
lret
add
add
call
daa
xchg
addr16
cwtl
adc
push
mov
cmp
ljmp
data16
mov
and
cli
cmpb
xor
outsb
dec
push
lcall
icebp
inc
shrb
and
incl
out
push
push
pop
mov
movsb
sti
mov
daa
outsb
add
lret
bound
mov
ljmp
push
outsl
mov
lods
inc
or
shlb
insl
aam
cmp
jnp
add
jg
push
movsl
insb
sbb
scas
adc
popf
test
sbb
in
or
xchg
and
jg
into
and
fs
cmc
popa
nop
jecxz
add
pusha
sbb
ficoml
into
out
in
adc
jmp
popa
jnp
xor
shrb
repnz
in
mov
sbb
jecxz
repz
lock
dec
adc
ljmp
xchg
es
sub
cmp
int
adc
pop
cmp
push
movsl
pop
pop
movsl
scas
das
and
mov
out
xor
sub
decl
mov
pop
dec
lahf
out
pop
insb
sbb
das
jb
xlat
sbb
cmc
inc
cs
mov
imul
mov
or
imul
test
lcall
sbb
incl
test
dec
nop
mov
test
outsl
jns
bound
jle
inc
inc
mov
fcos
mov
std
mov
cmp
outsl
adc
push
pop
arpl
out
decl
or
push
cmpl
adc
pop
mov
test
mov
jmp
jo
in
push
mov
stos
dec
xchg
mov
mov
ljmp
lcall
aad
test
cwtl
cmp
repz
testl
jg
pop
sub
ljmp
push
pop
inc
aaa
repz
in
xor
out
loop
xor
pusha
sbb
lds
push
mov
fnstenv
lret
push
add
daa
sub
call
test
pop
fwait
mov
lods
or
dec
out
mov
sbb
hlt
ljmp
data16
fsubrs
lods
xor
cs
push
adc
mov
mov
mov
scas
lcall
sbbb
add
fistpl
scas
mov
jge
push
xchg
cwtl
lods
pop
xchg
or
lcall
ds
loopne
sbb
xchg
in
adc
jmp
adc
out
add
push
and
inc
mov
call
xchg
sub
repz
enter
adc
stc
in
outsb
xlat
add
fsubr
mov
decl
iret
fisubrs
flds
inc
les
scas
inc
cmp
testl
out
push
or
sti
ret
xchg
mov
pusha
jns
or
push
sbb
xor
fcoms
sti
lret
jg
lcall
decb
xchg
or
cmp
mov
insl
sbb
arpl
ljmp
xlat
pop
call
shr
jmp
lds
jnp
loope
sbb
fs
je
bound
ret
sbb
push
sar
incl
jno
es
stos
aaa
andl
cld
xchg
cld
push
mov
js
in
incl
dec
cmpsl
in
inc
into
sbb
icebp
jle
mov
sub
aas
nop
sub
call
xor
or
pushf
or
or
push
lea
in
cmpxchg
decl
xchg
xchg
ret
les
xchg
loop
imul
jl
add
call
inc
nop
pop
std
insl
dec
sarb
dec
push
test
xor
fsubrs
sub
push
push
gs
adc
nop
cld
mov
sahf
or
ja
cmpsb
pusha
adc
inc
or
jb
incl
sub
aad
adc
cli
fcmovnb
fmuls
test
xchg
push
in
and
in
dec
jns
mov
lcall
out
leave
push
cld
lahf
lock
jno
lods
out
dec
inc
dec
cmp
add
inc
adc
push
sub
jo
jl
push
xchg
sub
and
sbb
jmp
call
test
inc
mov
mov
adc
ret
leave
stc
xchg
sub
fists
or
mov
sahf
mov
push
dec
popa
insb
pop
sub
ljmp
popl
pop
lods
aaa
jmp
cmpsl
and
lcall
inc
cmp
push
xor
out
mov
in
clc
xchg
mov
call
je
fs
inc
or
in
stos
push
dec
push
add
cmp
add
scas
popaw
cmpsl
aas
mov
out
and
movsl
adc
xchg
cmp
push
add
idivb
adc
jmp
fstl
mov
fstps
fsts
xchg
fldl
add
pushl
call
pop
mov
sub
leave
mov
dec
mov
sti
clc
cmpsl
adc
ljmp
ret
test
gs
mov
push
jno
out
mov
push
cmp
cld
into
push
jg
push
inc
jg
nop
test
nop
mov
adc
mov
mov
movb
jg
mov
and
mov
scas
mov
mov
out
jnp
sahf
aas
fst
sub
ja
repnz
sub
push
and
xchg
and
fs
in
jp
out
aam
sub
decl
jmp
nop
xchg
daa
xchg
rcrb
loop
fdivrl
and
std
cli
decb
xadd
and
inc
dec
dec
movsb
pop
push
pop
out
fimull
addr16
adc
arpl
dec
add
popf
mov
nop
mov
movsb
fnsave
xchg
hlt
xor
sub
fcmovnbe
jae
mov
xchg
cmp
push
and
add
mov
dec
push
jns
and
ljmp
je
scas
push
add
ds
mov
lods
xor
push
imulb
sar
jge
dec
popf
push
sbb
sarb
jecxz
dec
and
xor
pushl
cld
sbb
mov
jg
sbb
icebp
pushf
lret
pusha
lock
dec
lods
add
mov
or
push
mov
or
dec
pushf
fneni(8087
ja
dec
decl
jle
int
into
push
clc
jnp
shrb
nop
aaa
mov
sub
call
and
notb
push
adc
rorl
add
sbb
mov
movsb
mov
fsubrl
imul
pushl
addb
and
cmp
xchg
mov
lret
fimull
incl
shlb
jecxz
shll
sub
push
mov
subl
daa
test
mov
mov
lcall
faddl
jmp
shlb
cmp
push
pop
dec
pop
xchg
iret
out
sarb
fistl
mov
call
movsb
or
pop
sbb
mov
sar
in
rorl
push
clc
inc
push
and
cmp
lret
movsb
mov
inc
mov
cmp
scas
push
out
adc
push
add
loope
sub
dec
dec
aas
stos
sbb
int3
xor
lds
imul
jg
hlt
fildl
aaa
sub
cld
jle
and
and
in
cmpsl
pop
add
xchg
cmp
sbb
push
jo
cld
dec
imul
int
inc
cmp
inc
mov
adc
iret
jp
clc
test
jmp
cwtl
inc
add
dec
jecxz
cltd
jmp
xor
jae
cmpb
push
cmp
scas
cwtl
mov
dec
cmp
or
xchg
cwtl
xchg
adc
jmp
pop
add
pop
pop
incl
or
imul
rorl
push
push
pop
clc
dec
loope
and
gs
hlt
mov
dec
pop
adc
push
or
gs
and
mov
push
ljmp
dec
xor
lods
add
jb
lcall
mov
add
dec
gs
dec
movsl
push
or
mov
lret
xor
ljmp
or
pop
xchg
outsl
nop
leave
sub
outsb
in
jns
loop
dec
jmp
lcall
cmp
mov
cmp
out
cld
mov
ret
in
sbb
incl
fwait
xchg
cli
push
sub
stos
mov
aam
mov
cmpb
in
lret
out
clc
xchg
jle
loop
ljmp
js
xchg
lds
mov
repz
imul
dec
lds
movsl
in
das
xlat
notl
mov
out
aad
stc
mov
adc
xchg
adc
push
pop
test
add
cmp
arpl
jl
test
stc
mov
mov
popf
out
icebp
or
clc
stos
ljmp
xor
iret
push
push
in
mov
push
lods
fldt
mov
mov
jl
jmp
jmp
jne
xchg
sbb
push
mov
sub
jb
repz
int
cmp
mov
xchg
jmp
leave
jo
pop
pusha
ljmp
dec
jno
popa
cld
rorl
dec
jns
call
xor
pop
gs
in
sub
inc
push
std
mov
mov
mov
lods
and
pop
push
loopne
jge
test
nop
call
and
call
out
and
ss
adc
aaa
pop
mov
aaa
std
addr16
test
lcall
cli
outsb
cmpsb
cld
jne
add
adc
test
jg
lea
repz
sub
mov
test
sti
jle
sar
dec
push
out
and
adc
imul
jmp
or
dec
addr16
adc
xor
call
xlat
sub
adcb
cmp
xchg
orl
cld
enter
jbe
nop
dec
or
jp
ljmp
rorb
into
jb
popa
shrl
sbb
mov
add
dec
lock
cmpsb
icebp
mov
ja
flds
fidivrl
or
scas
mov
jmp
xchg
fimull
jecxz
mov
mov
call
iret
add
daa
cmp
lock
adc
jne
fsubr
popf
sbb
cmp
out
bound
jmp
sbb
adc
jl
adc
das
and
adc
xor
out
lods
jmp
push
push
call
stos
mov
pop
push
and
jp
mov
pushf
lahf
xor
xchg
inc
pop
xchg
xchg
mov
mov
mov
ds
add
shrb
inc
out
add
rcll
hlt
pushl
xchg
xchg
dec
mov
or
or
xor
adc
rcr
std
bnd
cli
adc
es
outsl
xchg
in
lds
xchg
sbb
out
xor
lcall
mov
pop
sbbl
sbb
mov
cs
leave
jbe
movsl
cltd
popl
jmp
and
call
adc
jno
xchg
and
jo
cmp
sub
repnz
sbb
call
shl
loop
cmp
lcall
jg
add
dec
sbb
pushf
cmpsb
into
pop
push
xchg
popf
or
mov
notl
insb
hlt
aad
xor
jg
call
mov
fldenv
movsb
test
sarb
cltd
ret
call
aaa
ljmp
sub
sbb
stos
out
sub
push
sub
pop
jle
jg
sahf
pop
mov
mov
xchg
mov
fwait
dec
mov
ja
cmc
pop
inc
sti
push
and
jb
clc
incl
ret
out
add
ljmp
cmp
popf
mov
ljmp
pop
xor
out
cmpsb
pushl
mov
aam
mov
out
mov
in
stc
repz
iret
ret
incl
xchg
sbb
ja
dec
push
add
push
xor
gs
xlat
sar
jle
jmp
inc
mov
fwait
les
dec
push
jl
mov
fsubrs
and
jo
jmp
ret
xor
xchg
inc
dec
bound
push
jbe
in
jnp
add
ja
leave
mov
decl
sti
xor
inc
mov
xlat
pop
mov
lcall
stos
sub
jg
lcall
sti
notb
push
push
xor
je
xor
pop
call
movsl
or
dec
xchg
js
push
inc
xchg
xchg
mov
mov
insl
lahf
je
stc
xor
aad
jmp
sbb
aaa
shr
adc
inc
aas
jo
adc
xor
mov
push
ds
push
sub
sbb
pusha
xchg
and
push
adc
dec
sti
mov
and
jns
shlb
inc
mov
mov
push
cld
inc
clc
xchg
test
insl
dec
adc
jbe
sub
adc
ret
xor
ljmp
and
outsl
mov
out
imul
leave
repnz
mov
dec
decb
loopne
pushl
xchg
je
leave
mov
dec
addr16
or
imul
inc
dec
jmp
hlt
cmp
push
fadds
stos
in
out
hlt
sbb
jo
mov
sbb
mov
push
pusha
xor
jg
adc
pop
inc
mov
movsl
js
sar
pushl
fdivl
push
sbb
jmp
lcall
sti
ret
inc
pushl
push
aas
daa
lods
mov
inc
stos
lret
xor
shll
loop
push
push
push
push
repz
dec
add
adc
xor
inc
add
mov
push
pop
cmp
inc
sub
xchg
inc
ret
sbb
ljmp
xchg
dec
out
adc
shr
pop
cmpb
dec
mov
and
mull
cmp
pop
jae
sub
xor
test
lds
mov
jns
push
pop
pop
lcall
ret
pushl
arpl
inc
pop
shrb
xchg
scas
adc
xchg
mov
fisubs
sti
mov
inc
mov
inc
mov
mov
loopne
pop
xor
sbb
pop
hlt
decl
test
cmp
pop
cld
andl
pop
movsl
cmp
mov
dec
mov
and
xchg
push
mov
aaa
inc
insl
movsl
sarl
push
test
out
mov
das
xchg
and
pop
jmp
loop
inc
add
jg
mov
pop
sbb
lret
je
jmp
sbb
sub
imul
xchg
push
test
ljmp
adc
out
sub
mov
mov
pop
daa
sub
dec
and
gs
sti
jl
gs
icebp
lods
adc
cmpsl
xchg
inc
ficoms
adc
inc
out
pushf
xchg
push
incl
push
sub
xchg
ss
stos
jle
aas
pop
push
inc
orb
lcall
addr16
inc
subb
mov
or
mov
movsl
popl
mov
andb
mov
push
aas
mov
or
jmp
shrl
adc
dec
nop
inc
stos
rorb
mov
cli
add
adc
icebp
ljmp
sbb
das
inc
aas
bound
cld
test
xor
mov
xor
ljmp
push
daa
ds
inc
and
jb
cmp
fidivrl
cli
test
sub
decl
std
scas
in
fisubrl
jle
push
add
adc
and
add
sub
outsb
and
sbb
cmc
cld
insl
out
shlb
js
insb
mov
cmp
cmp
dec
inc
pop
jbe
mov
arpl
insb
testl
fiaddl
call
enter
and
mov
bound
xchg
push
cli
cmp
das
iret
dec
pop
cmpsl
cmp
push
popf
movsl
add
packssdw
lds
inc
and
pop
adc
push
sub
ljmp
mov
jmp
mov
fcomps
cmp
adc
je
stos
pushl
sub
add
shlb
push
mov
pop
xchg
fs
pop
push
incl
dec
add
ss
ja
mov
pop
sub
mov
add
aam
mov
push
xchg
int
filds
pop
je
xor
js
dec
ds
mov
out
add
cmpsl
daa
cmc
enter
call
cmc
mov
fcmovb
or
and
cmp
adc
mov
pusha
jmp
jcxz
sub
mov
loope
add
enter
lcall
xor
test
jl
incb
popf
and
adc
cmc
push
xchg
push
sbb
popf
inc
fcomp
cmc
ljmp
add
cmpsl
mov
push
dec
bound
iret
adc
movsb
jmp
mov
daa
bound
or
dec
fdivl
add
fs
mov
inc
push
xchg
inc
stos
jo
sub
mov
pop
and
aad
test
loop
in
std
out
jo
imul
movsb
sbb
cmp
adc
ljmp
and
jae
aam
inc
xor
fldcw
stos
fadd
dec
iret
divb
jl
outsl
mov
call
cld
and
jmp
xchg
lock
icebp
fnstsw
mov
add
mov
mov
iret
and
inc
scas
push
scas
lret
scas
jp,pt
enter
mov
jle
xorl
pop
je
pop
push
ret
dec
pop
mov
sub
ror
inc
test
jnp
mov
add
lcall
xor
aaa
roll
scas
adcb
ret
lret
xor
add
sbb
xchg
incl
test
inc
test
xchg
sbb
pop
cs
pusha
jp
push
movsl
jns,pn
pop
pop
or
stc
ljmp
cli
in
and
fsubs
push
sub
ret
mov
jmp
cmp
dec
ja
mov
jmp
movsl
ljmp
std
mov
int
push
pusha
and
adc
jne
sub
jb
cmp
sub
jmp
cltd
or
xchg
out
cmp
daa
push
fdivs
mov
aad
ret
rcr
xor
jmp
sub
sub
lret
sub
mov
call
lds
mov
sub
and
push
mov
push
inc
loop
enter
inc
xchg
out
clc
decl
cmp
jo
push
mov
add
std
sbb
mov
jg
movsb
cmp
bound
push
in
push
xchg
add
testl
mov
or
push
push
jb
jo
sarl
mov
test
arpl
outsl
jecxz
jl
mov
inc
fsubp
sub
insb
dec
pop
xchg
xlat
popa
fldenv
pop
cmp
push
nop
xlat
push
jno
cld
div
cmovbe
incl
xchg
sbb
decb
pop
adc
aas
xor
mov
sbb
cs
test
fisttps
ljmp
lahf
add
call
je
xor
loope
call
push
dec
push
cmp
aaa
cmp
mov
adc
or
subl
cmp
push
mov
mov
std
movsl
mov
sub
jae
or
lret
subb
test
push
iret
mov
mov
stc
and
iret
scas
decl
and
jnp
popf
jmp
jecxz
test
in
cmpsl
push
jnp
jecxz
sar
call
lcall
inc
stos
shlb
shrb
push
insl
jne
mov
dec
adc
lcall
ret
cmpsl
out
jecxz
test
xor
cmpsb
adc
adc
cs
leave
insb
cmp
decl
cmpsb
push
sbb
inc
adc
jp
repnz
sub
clc
mov
xchg
cwtl
push
push
je
sti
loop
push
fnstenv
sbb
lahf
clc
cmp
in
rcrl
sbb
inc
fists
out
shlb
inc
sbb
inc
xor
pop
push
xor
jbe
enter
cmpsb
mov
lcall
add
jp
jecxz
push
inc
cs
repz
out
clc
lcall
add
jl
xchg
fs
fdivrs
das
xchg
xor
mov
sub
call
jle
mov
mov
in
pop
pop
or
enter
aad
cmpsb
in
and
ds
add
push
jle
adc
mov
cmp
mov
cmp
mov
je
jg
jp
and
xlat
cmpsb
xchg
les
push
mov
jns
xor
rcl
jb
ljmp
in
jbe
or
das
xchg
xchg
loope
pop
push
pop
jmp
incl
fwait
in
ljmp
std
inc
push
push
scas
sbb
push
mov
push
ja
fmuls
adc
fcomip
cli
mov
inc
mov
notl
dec
push
out
ss
insb
out
mov
aam
inc
aam
push
outsb
cmp
push
outsb
pop
and
ror
push
jne
lods
mov
mov
sub
jae
les
ss
sbb
cmc
pushl
notl
mov
les
mov
test
shrb
pop
out
xlat
pushl
std
push
mov
sbb
xchg
mov
xor
cmc
nop
or
cld
dec
icebp
loopne
sbb
xor
mov
icebp
mov
jp
loope
mov
ljmp
mov
or
cmp
mov
hlt
loop
ljmp
sub
cmp
cmp
addb
sahf
out
movsb
mov
cmp
adc
xor
jne
mov
push
or
aaa
and
jl
clc
jnp
sti
xchg
shl
jmp
testb
push
jo
bound
lret
andl
pop
dec
js
in
mov
sub
sub
fstpt
sub
xchg
jg
es
push
jno
sbb
bound
add
mov
ljmp
jo
bound
scas
hlt
mov
fistpll
pop
repnz
cmp
rorb
dec
call
adc
lcall
dec
sar
decl
pop
mov
loop
inc
dec
outsb
sbb
mov
sbb
testl
mov
mov
push
popl
jp
jp
fs
hlt
mov
push
jecxz
mov
mov
jmp
inc
cwtl
or
shl
and
push
fs
sarb
cli
push
fidivs
push
inc
movsb
cmp
push
and
repz
sub
mov
jle
mov
sub
negb
std
data16
push
bound
pop
sub
daa
pop
roll
inc
mov
incl
pop
pushf
shlb
in
shlb
inc
lock
mov
lcall
jae
fsts
sti
int3
pop
xor
pop
int
mov
mov
fsub
dec
ret
je
mov
call
mov
cs
stos
loopne
inc
cwtl
lret
push
pop
push
or
xor
lahf
das
jne
cmc
stos
fmull
mov
or
push
push
sub
into
lret
push
incl
pop
push
fisttpll
test
jp
push
lret
repz
cmc
mov
xchg
mov
call
or
mov
adc
popl
xor
and
adc
decl
lcall
jb
lock
sub
mov
mov
cmc
pop
inc
pop
lods
out
ja
decl
mov
or
ret
mov
aas
push
int3
imul
ljmp
cmp
in
lods
fnstcw
ljmp
sti
sub
add
movsl
xor
call
mov
mov
and
adc
pop
cmp
das
dec
fs
dec
mov
lcall
call
xchg
add
pop
lcall
imul
xchg
pop
jmp
push
and
icebp
cli
push
xorb
cli
out
leave
mov
shrl
inc
inc
les
mov
mov
mov
fstpl
in
pop
pop
les
pop
push
mov
jp
and
push
mov
ljmp
scas
out
outsl
das
mov
push
rol
jne
and
jg
pushw
insb
mov
std
xor
push
or
add
inc
jle
jne,pt
adc
jle
lret
push
jns
jb
push
add
cmc
imul
js
and
ror
adc
mov
pop
lock
mov
cltd
lcall
sub
push
leave
jo
test
mov
outsb
and
jbe
pop
mov
push
mov
aas
inc
shl
adc
fnstenv
xorl
and
or
or
movsl
adc
xchg
mov
push
hlt
xor
arpl
call
xchg
test
xor
and
and
pop
cmp
out
xchg
sub
mov
sbb
sar
sub
out
aaa
mov
movl
push
mov
sahf
pop
idiv
or
call
stc
cmpsb
mov
xlat
movsb
mov
imull
test
add
repz
ljmp
gs
sub
outsb
shr
out
dec
int
sahf
cmp
push
outsb
pop
lock
fbstp
cmp
jb
add
inc
cmp
push
icebp
jne
pop
jecxz
pushl
pusha
lods
popf
sub
mov
adc
add
push
add
inc
jg
dec
adc
aas
cmp
test
cmp
mov
leave
sbb
fdiv
pop
adc
jmp
imul
loop
lea
lcall
out
scas
ljmp
out
add
xchg
inc
and
and
insl
loopne
sbb
add
aas
jg
dec
scas
jae
aaa
pop
jecxz
loop
jp
pop
imul
and
add
push
pop
jmp
pop
adc
sbb
xchg
popf
xchg
lds
sbb
imul
lret
adcb
clc
call
mov
jne
or
sahf
push
insl
add
ds
aaa
inc
cmpl
mov
repz
sahf
cmp
inc
cs
in
stc
scas
clc
decl
pop
push
incl
sbb
popf
fnop
lea
sub
mov
cld
xchg
jnp
or
arpl
inc
mov
push
lock
xchg
or
outsb
jle
sbb
gs
cs
push
dec
dec
jo
lods
and
push
adc
popf
std
jg
xchg
lods
pop
int
jmp
rcll
incl
fldl
das
mov
jp
jns
test
rcr
lret
xchg
stos
and
in
ljmp
dec
sbb
call
xchg
sub
lods
out
mov
inc
ficoms
xchg
in
mov
add
mov
mov
rol
xchg
dec
int3
jl
cmp
sbb
bound
popf
mov
sbb
ffree
adc
adc
or
dec
xor
incl
cmp
out
out
jmp
mov
cmpl
dec
cmp
sub
stc
clc
xor
movsl
mov
jg
pop
inc
dec
dec
jp
mov
shlb
sbb
iret
insb
xchg
xchg
js
out
jmp
int3
mov
int3
in
inc
and
int
rclb
js
sbb
mov
push
fwait
mov
sub
decl
jnp
enter
js
dec
popa
xlat
cmp
cmpsb
movsl
hlt
not
fs
jp
decb
mov
add
aam
jns
inc
je
jmp
stos
decl
mov
adc
pcmpeqd
cld
test
xor
dec
inc
fstpt
add
cltd
or
call
jp
sub
cmpsl
ret
pushf
add
xor
lcall
or
xchg
in
cmp
mov
dec
adc
inc
sahf
mov
and
call
fcmovnb
lret
jns
idivl
imul
jno
test
mov
incl
pop
xchg
imul
outsb
aam
pop
pop
fucomp
call
lret
cld
mov
pushl
xchg
jmp
and
dec
outsl
bound
sbb
sbb
outsb
in
iret
outsl
cli
jmp
arpl
inc
cmpsl
xchg
inc
stos
hlt
mov
mov
cli
pop
stos
push
adc
add
call
mov
cld
push
subl
pop
rcrl
inc
cltd
sbb
add
xlat
loope
insb
inc
adc
xor
movzwl
mov
mov
jnp
call
inc
mull
jmp
data16
fidivrl
push
dec
pusha
aas
repz
push
xchg
xor
das
sar
dec
shlb
ret
jno
scas
fldcw
mov
xor
hlt
pushl
xchg
cmpsl
pop
cld
sub
fiadds
pop
out
push
rol
stos
scas
sbb
mov
lret
movsl
jle
incl
dec
aad
adc
in
xorl
out
add
ds
push
jg
sbb
fistps
insb
cltd
push
mov
jge
lods
popf
mov
lret
test
decl
mov
mov
pushf
adc
insl
insb
shrb
pushl
xor
int
stos
fwait
addr16
xchg
jnp
push
fnstcw
incl
addl
gs
mov
and
pop
idiv
xor
lcall
int3
mov
fbld
push
xchg
in
data16
xor
inc
ja
test
jg
outsl
das
ret
xor
sub
mov
add
or
decl
clc
sub
push
pushf
ds
in
ret
push
loopne
sbb
fcmovnu
push
sbb
into
pop
jg
mov
and
push
in
imul
fisttpl
stc
mov
jl
xor
fsubs
inc
push
cmc
aam
loop
leave
nop
clc
call
push
dec
jmp
and
push
mov
int
cmp
adc
mov
std
cltd
sub
jg
decl
addl
nop
daa
jg
or
sbb
int
repz
inc
shll
inc
inc
xorb
ljmp
pop
lret
sub
stos
pop
or
add
mov
bound
and
and
arpl
add
hlt
sti
sahf
mov
pushf
stos
mov
hlt
subb
inc
in
std
fmuls
push
sbb
pop
sbb
call
fnstcw
bound
xchg
mov
jnp
notl
mov
icebp
push
adc
fcomip
incl
and
push
xchg
pushf
loope
jne
sahf
je
loope
xchg
lods
lret
scas
clc
jmp
movsb
pop
sbb
dec
jmp
sahf
jne
mov
arpl
sub
out
jl
mov
shlb
sarb
std
mov
adc
inc
push
jmp
pop
inc
xor
dec
mov
fadds
xchg
xchg
cmp
mov
ret
adc
dec
lcall
jle
je
sbb
call
and
add
fdivrl
sbb
and
cmpsl
mov
sar
inc
fcoms
into
les
ss
mov
or
aad
andl
shll
dec
inc
test
xchg
ljmp
mov
inc
out
or
sub
push
adc
and
lret
mov
negl
inc
sbb
in
cmp
mov
test
outsb
push
jb
int3
mov
decl
dec
ljmp
loop
dec
int
sbb
pop
in
cld
mov
bound
incl
fs
pushl
mov
js
fcomi
jp
pop
jne
fs
jns
je
pushl
cmp
cmp
jne
test
daa
je
push
xchg
orl
das
sar
fisttps
nop
pop
aam
jmp
push
repnz
lahf
xchg
push
pushl
add
jno
lcall
sar
std
dec
rcll
add
inc
and
lahf
push
push
cmp
dec
call
mov
dec
xlat
mov
in
push
movsl
call
pop
and
testl
pop
xor
mov
mov
movsb
xor
jmp
aaa
cmpsl
sub
out
mov
enter
mov
pop
jbe
adc
push
int
cmp
dec
cld
fcomip
adc
sbb
test
fidivrl
jle
pusha
jmp
mov
in
das
movsl
shlb
shrb
xchg
xchg
cmp
test
addr16
or
fimull
shrl
jnp
sbb
call
dec
fdivrs
or
popa
mov
inc
jp
jae
sbb
pop
jp
mov
jmp
jae
shrl
adc
jp
add
dec
mov
rcl
clc
fs
mov
mov
in
test
fidivrl
cmc
mov
lock
adc
pushl
cmp
sbb
sbb
inc
mov
mov
inc
repnz
orl
mov
data16
loopne
fimull
push
cs
mov
je
dec
and
outsl
pop
sbb
pop
pusha
push
lods
std
jae
jnp
pushf
and
pop
sarl
or
pop
inc
cwtl
push
xor
dec
cmpsl
lret
dec
ficomps
insl
pop
jecxz
sub
call
repz
addl
mov
les
stc
rcrl
jno
es
pushl
or
scas
sbb
xchg
mov
mov
incl
adc
lods
lret
mov
or
pop
aam
pop
xor
aaa
inc
push
dec
shrl
aas
imul
ss
adc
sbb
and
jg
mov
pop
mov
push
mov
and
leave
dec
rclb
push
out
dec
popl
inc
mov
lock
mov
push
clc
insb
xchg
pop
mov
add
ljmp
inc
adc
gs
pop
fistpl
in
movsb
push
scas
stos
out
ret
cmp
and
xchg
sbb
add
or
cld
insb
mov
mov
idivb
dec
call
pop
mov
sub
mov
push
repz
roll
dec
in
adc
inc
fimull
cmp
xchg
push
pop
dec
push
fucomp
jmp
inc
movsl
enter
cmc
pusha
push
scas
ja
sub
es
push
mov
and
ret
or
push
daa
or
lcall
stc
mov
out
aaa
dec
std
xlat
sahf
mov
mov
data16
xchg
jge
loopne
adc
inc
dec
std
pop
imul
pop
mov
negb
ljmp
xchg
fidivrl
dec
sub
nop
mov
mov
out
sub
bound
out
mov
jl
lds
scas
jns
pushl
lods
cltd
cmc
ficomps
imul
fsubl
bound
cmpsb
cmp
add
jg
mov
push
jo
pop
cmpsb
mov
ret
xor
insb
aaa
xor
inc
push
jge
mov
push
jns
pushf
pop
iret
nop
popf
sbb
mov
sub
test
test
or
fcoms
cs
sahf
dec
leave
or
sbb
adc
xor
push
cmpsl
jmp
cs
fsubs
jp
stos
adc
ja
ljmp
scas
iret
xchg
jbe
xchg
scas
cli
mov
mov
pop
pop
adc
iret
mov
and
pop
xchg
mov
ljmp
mov
jl
fidivrl
popa
push
mov
sbb
push
cld
pop
mov
pop
lahf
ljmp
cld
mov
pop
mov
add
cwtl
jns
cmp
jmp
insl
fldt
movsb
int3
scas
xor
mov
lds
shrl
incl
fwait
lods
push
sti
or
jle
iret
pop
lods
pop
inc
adc
fidivs
arpl
repnz
js
shrb
movsl
std
push
mov
sbb
push
adc
out
jle
push
imull
dec
lock
mov
jl
call
xchg
mov
fsubp
mov
shrb
movsb
inc
or
sub
gs
cmp
inc
call
loope
mov
ds
in
lahf
pusha
xor
cs
out
ljmp
pop
ret
clc
aas
or
or
jmp
in
sti
lcall
ret
jge
inc
sbb
push
lock
stos
and
lds
pushl
push
inc
fs
push
add
dec
push
lea
cltd
insl
push
adc
fwait
pushf
loopne
clc
xchg
add
mov
call
inc
aas
mov
ret
daa
in
lahf
mov
adc
or
pop
cmp
incl
mov
cltd
push
cmp
ret
xlat
jmp
mov
mov
fsubs
lret
pop
scas
sub
or
xchg
aaa
mov
test
dec
mov
jmp
push
movsb
out
ja
shll
in
movsb
test
mov
push
adc
clc
jns
add
dec
loope
jno
sbb
std
ljmp
orl
rcrb
sbb
pop
jbe
and
in
xor
neg
push
jle
cmp
jge
adc
sub
jbe
jg
mov
jg
daa
xor
inc
push
scas
mov
enter
sub
push
incl
stos
ret
and
pop
andl
xor
int
cltd
sub
jmp
pushl
sub
or
xchg
add
das
lret
icebp
xchg
push
in
xchg
mov
push
sub
dec
int
ja
jmp
push
pusha
cmp
push
adc
xorl
subl
cmp
jne
shrd
add
adcb
out
push
cmpsl
cmp
iret
push
pop
xchg
pop
decb
cltd
enter
scas
mov
and
ja
mov
push
push
jge
sub
push
clc
call
push
xchg
stos
bnd
ja
repnz
jo
sbb
dec
sub
lock
int
xchg
int
sar
out
clc
jmp
mov
xor
fistl
jbe
mov
inc
popa
jo
sti
jns
loop
pop
jg
pushl
push
mov
test
push
fucomip
call
sahf
cld
and
test
inc
test
lcall
cmp
movl
mov
jle
fisttpll
mov
cltd
das
subps
push
dec
flds
push
ljmpw
add
mov
xchg
xchg
aam
push
in
cltd
mov
add
out
jnp
stos
jo
mov
lcall
daa
lcall
and
and
nop
pop
rcl
sub
xchg
sub
cmp
mov
bnd
out
popa
pop
mov
fldcw
lcall
dec
adc
ja
fs
ret
das
cli
mov
and
in
inc
repz
cwtl
cmc
dec
fcomp
je
push
xor
inc
mov
push
add
out
jns
jl
cwtl
aam
mov
push
and
lahf
repz
pushl
inc
idivb
call
jmp
movsb
cwtl
test
int3
fcmovnb
or
scas
mov
mov
idivl
mov
or
test
clc
pop
jmp
repz
ds
test
mov
imul
pop
shlb
movsb
addl
ljmp
maxsd
lcall
and
scas
lock
mov
and
jp
and
clc
cli
int
or
testl
arpl
jp
mov
cli
mov
sbb
cli
jmp
scas
daa
sbb
movsl
push
in
push
push
lods
jno
out
push
aam
out
mov
stos
incl
jbe
cmp
std
ret
and
loope
push
jnp
mov
lcall
stc
push
push
hlt
cmp
sti
int3
shll
arpl
lcall
sub
repnz
jae
lcall
ljmp
aas
rorl
in
int3
sbb
mov
mov
clc
mov
and
loop
inc
shlb
jmp
jmp
mov
mov
int3
push
rolb
adc
mov
lds
mov
mov
pop
int3
push
add
in
xor
jge
inc
mov
pushl
pop
mov
lcall
aam
repnz
xor
jle
decl
test
bound
push
jmp
adc
lret
inc
ljmp
leave
clc
mov
in
stos
popa
xchg
clc
ljmp
shll
test
pop
sbb
loopne
sbb
and
or
push
mov
ret
and
push
mov
test
xor
dec
adc
popf
jmp
adc
je
mov
cmp
push
xor
lret
ss
add
cmpsb
shlb
test
cs
or
push
call
mov
and
int
dec
movsl
mov
ljmp
cmc
and
pusha
xor
daa
cmc
add
cld
aam
jae
jmp
pop
sbb
cmp
mov
dec
jo
inc
dec
pop
fcoml
cli
fidivrl
ljmp
xchg
add
adc
dec
cmp
sbb
hlt
jg
xchg
movsb
or
and
mov
add
outsb
faddp
jmp
stos
in
in
stos
add
movb
icebp
stos
or
mov
jg
mov
in
mov
push
out
in
ret
scas
std
test
stc
hlt
int3
test
pop
cmp
xchg
call
incl
test
mov
aam
xor
adc
pop
rclb
push
xchg
dec
jmp
sub
mov
or
fidivl
xchg
loope
pop
aas
rep
and
xchg
pushl
push
adc
fwait
adc
leave
test
sahf
add
lods
call
jg
jne
call
aam
ret
pop
sbb
pop
pushf
pushl
scas
mov
inc
stc
fs
mov
adc
ficoms
ljmp
insl
decl
rolb
gs
fstl
push
push
mov
push
ret
push
in
jg
add
jno
into
pop
lcall
jle
sbb
insl
mov
lea
xchg
sub
ss
fwait
aaa
rcr
outsb
les
jmp
pusha
inc
mov
lahf
gs
cs
sarb
loope
jns
mov
or
mov
inc
test
lcall
or
inc
pop
xor
jae
es
lock
rolb
das
inc
mov
add
popf
stc
pop
mov
jp
in
sub
lret
lahf
cmpsl
fadd
cltd
in
js
sub
push
xchg
out
and
cmp
call
rorl
xchg
mov
dec
mov
pushf
sbb
add
jnp
hlt
mov
movsl
test
dec
cmpsb
adc
lcall
mov
out
mov
cmp
into
mov
mov
push
outsl
jge
out
add
into
xchg
les
loop
dec
add
push
into
or
call
sub
mov
lds
or
mov
mov
push
in
mov
mov
data16
in
cwtl
lds
mov
jmp
push
adc
sbb
in
inc
pop
int
fstl
or
call
clc
in
xor
loop
dec
cmp
aam
adc
ljmp
fcomps
std
jae
cmpsl
mov
cmp
jecxz
push
call
scas
adc
jle
jae
mov
add
lock
jns
popf
lods
loop
push
loopne
arpl
dec
je
mov
or
out
out
jge
loope
es
cmp
push
cmp
push
adc
jae
aad
lcall
mov
or
lea
dec
jns
mov
fwait
jmp
push
xor
and
nopl
sbb
adc
decl
and
sub
lret
insl
lahf
jbe
out
int
testb
jo
clc
incl
or
jl
daa
pop
mov
in
data16
inc
into
sub
jg
movsl
aas
sub
lods
jbe
bound
cli
xchg
test
in
jge
lea
out
leave
decl
jbe
sbb
xchg
cli
mov
cmpb
push
ljmp
dec
mov
mov
subl
insb
idivl
fbstp
mov
or
jp
pushf
cmp
ds
mov
jmp
xor
lret
sub
cmp
into
scas
mov
scas
daa
or
jnp
adc
xor
lods
sbb
mov
pushl
xor
bnd
mov
push
sbbl
jle
stos
xor
clc
xchg
outsb
aaa
decl
push
test
and
mov
mov
add
sbb
pop
mov
sbb
dec
inc
mov
jmp
lock
scas
xchg
or
inc
cmp
incl
sub
std
scas
push
aas
or
adc
jbe
shlb
sbb
imul
outsb
aad
decl
into
icebp
sbb
mov
in
les
ret
dec
imul
bound
or
xchg
cwtl
jns
mov
into
jo
cltd
btc
into
xchg
pop
cwtl
icebp
cmp
test
mov
adc
ljmp
test
out
insl
mov
push
push
xchg
pop
xchg
mov
jb
idiv
inc
cld
rcr
xor
mov
add
mov
pusha
sub
shll
jecxz
pusha
jne
jp
scas
incl
xchg
fadds
mov
nop
cmp
xchg
lods
sub
xchg
xlat
mov
adc
dec
ret
repnz
and
out
push
mov
int3
int
jp
jg
pop
loope
mov
and
cmpsl
js
and
fisubrl
xchg
sub
cmp
fdivs
daa
rolb
pop
out
mov
sbbl
mov
outsl
mov
inc
cwtl
fwait
mov
test
mov
inc
wrmsr
or
loopne
pop
mov
inc
les
pop
incl
scas
es
mov
jp
in
add
movsb
jl
out
push
sahf
inc
out
fisubrs
ljmp
call
xlat
imull
test
xchg
fildl
cmp
sbb
push
push
sbb
fbstp
test
out
cli
add
pop
xor
and
ljmp
rcrl
cmp
test
inc
popf
mov
test
cmp
jmp
jg
rcrl
std
ret
mov
lods
into
sbb
sbb
cltd
shl
fiaddl
adc
inc
sub
dec
mov
push
mov
push
lods
stos
mov
into
movsb
and
jg
cwtl
bound
fildl
sarb
popa
or
cmp
mov
std
repz
out
inc
hlt
push
adc
cmp
lret
push
ftst
xlat
mov
add
clc
dec
jge
es
lods
dec
push
adc
sbb
push
call
push
pop
sub
movsl
mov
jae
dec
flds
leave
xchg
out
jmp
loope
xchg
xchg
mov
movsl
pop
decl
xchg
movsb
dec
xor
sbb
and
pop
es
inc
decl
dec
imul
insb
test
push
pop
cmp
push
sub
call
test
ja
pshufw
mov
inc
jnp
stc
jne
adc
cmp
push
mov
imul
push
or
dec
inc
xchg
test
xor
xchg
popa
and
cmp
es
pushl
je
jp
push
sub
mul
pop
movsl
popf
pusha
in
push
in
sar
jp
jg
lcall
hlt
add
cmp
mov
loopne
jnp
xor
lcall
mov
jnp
movsb
test
mov
scas
hlt
sbb
aam
shrb
outsb
lods
int3
mov
inc
push
add
incl
nop
pop
popf
xor
loopne
pusha
hlt
and
push
sub
decl
pushf
icebp
test
shll
mov
pop
jecxz
cmp
out
fwait
mov
cld
movsl
push
pop
push
addl
add
mov
sub
inc
or
sub
incl
repz
incl
std
push
add
pop
inc
arpl
out
lahf
je
dec
xchg
lcall
ds
sub
ficompl
sarb
push
push
cmp
inc
mov
movsl
xchg
clc
test
call
jmp
mov
mov
leave
xor
mov
jmp
mov
inc
sub
out
les
out
idivl
push
sbb
enter
pop
or
mov
shll
cmp
std
push
pop
dec
cs
pushf
outsl
pusha
outsb
pop
jp
and
movsl
xchg
xchg
inc
jbe
movsb
lock
fs
cli
lcall
xor
mov
sub
out
add
out
dec
cmp
dec
xchg
cmp
outsl
push
daa
mov
popa
push
cwtl
adc
fstl
jl
hlt
notb
into
mov
movhps
mov
pushf
pop
xor
mov
rcrb
iret
push
add
popa
fnstsw
push
cmpl
jecxz
xchg
lock
push
jnp
addr16
mov
incl
stos
fsubr
loope
cld
push
pop
jge
inc
stc
scas
and
sbb
add
out
jb
cld
repz
lret
inc
int3
shl
nop/reserved
pop
sti
call
sbb
aam
push
mov
cmp
imul
cs
cli
or
xchg
arpl
jnp
push
adc
ljmp
ficompl
mov
jne
mov
out
mov
mov
movsb
xor
or
inc
sbb
cmp
rcrb
xor
sbb
test
ljmp
clc
or
shrb
daa
rcrb
nop
jmp
xchg
ret
insl
scas
daa
mov
add
sbb
pop
jg
out
ret
notl
sbb
outsb
outsb
lock
incl
test
pop
or
inc
mov
gs
stos
mov
std
inc
add
mov
pop
adc
or
fbld
rcrl
or
mov
stos
movsb
inc
xchg
test
fnstcw
and
push
in
jb
push
push
pop
mov
xlat
cmp
inc
stos
xchg
mov
rorb
dec
xor
mov
in
scas
das
push
cli
dec
and
enter
adc
std
mov
pop
or
lea
ljmp
or
andl
dec
je
adc
mov
mov
call
push
push
into
mov
inc
mov
imul
pop
cmpsl
or
stos
adcb
cld
ljmp
push
mov
adc
mov
adc
gs
add
pushl
cmpsb
call
push
dec
or
push
inc
out
push
push
fimuls
aaa
mov
stos
cs
insb
div
sub
loop
test
cli
cmc
push
xchg
addr16
arpl
and
pushl
call
fsubrs
nop
mov
mov
jmp
faddp
aaa
push
faddp
mov
xor
sar
add
jg,pn
or
aas
stos
sbb
fcomp
std
fdivrs
imul
ret
dec
in
push
shlb
adc
addr16
das
bound
or
outsb
jecxz
ret
push
add
ljmp
jl
aas
dec
idivb
adcl
mov
mov
lahf
or
clc
sbb
stc
jb
mov
sbb
pop
cli
dec
jg
js
jb
aad
inc
add
aam
jecxz
jecxz
xor
lcall
jmp
mov
mov
dec
pushf
lds
push
sub
mov
mov
jg
scas
push
mov
pusha
pop
arpl
subl
inc
add
lcall
outsl
sbb
movsb
push
aam
and
jns
dec
nop
daa
jne
call
jle
mov
or
sub
jg
adc
sub
adc
mov
sti
repnz
ficoml
test
adc
fldenv
mov
jbe
out
ds
pushl
xlat
mov
xchg
movsb
xor
fimuls
mov
push
sbb
jns
data16
dec
test
scas
scas
cli
sbb
aam
sahf
sbb
iret
and
int3
call
push
dec
pop
popf
jge
int3
pop
mov
js
lahf
cmp
test
push
popa
insb
lods
dec
test
jns
mov
clc
aad
in
stos
lock
lahf
add
sub
rcr
aam
mov
data16
cmp
sbb
movsl
push
mov
jge
jno
dec
push
dec
pushf
mov
pop
dec
fwait
lds
call
dec
sbb
dec
push
mov
lds
sbb
pop
mov
fadd
sbbb
fidivrl
pop
mov
pop
pop
shr
bound
xchg
dec
shrb
adc
in
fisttpl
lcall
adc
sub
mov
sbb
out
jb
adc
pushl
into
push
jne
js
mov
push
test
sahf
mov
xchg
sbb
cltd
subb
xor
lcall
fidivs
loop
xchg
ljmp
repnz
lcall
jg
ret
push
add
or
leave
xchg
shll
or
ret
rcr
pop
movsb
pop
lcall
mov
sbb
cli
mov
sbb
jg
insb
xchg
inc
sahf
outsb
arpl
xlat
test
fcomps
cld
in
test
jg
cmp
ljmp
stos
outsl
cmp
ret
dec
xor
jmp
mov
inc
and
jmp
enter
or
lods
movb
xchg
pop
cltd
movsb
jle
push
jecxz
in
jge
mov
incl
hlt
insb
les
mov
and
dec
mov
mov
sbb
jg
mov
xor
lea
shll
stos
cwtl
mov
pop
push
inc
incl
pop
pop
cmp
inc
cli
out
bound
mov
xor
mov
jne
mov
jg,pt
cld
stos
fstpt
mov
mov
and
insl
scas
push
dec
push
mov
nop
pop
lret
lcall
cmpb
push
sub
and
in
dec
push
mov
aaa
adc
lahf
push
adc
pushl
in
ja
inc
mov
ret
andb
adc
push
cmp
cmp
insb
jecxz
idivb
xor
xchg
sub
and
push
fcomip
pop
cs
movsl
cmp
mov
mov
ret
sbb
decl
adc
loop
mov
ficoms
add
xor
outsb
pop
dec
jge
ret
and
sar
incl
sahf
inc
jnp
or
mov
sbb
movsl
ljmp
add
sub
sub
sarb
adc
shrb
mov
pushl
adc
cmp
test
lea
stc
push
push
cmp
jge
sarl
jmp
cs
movsb
fcmovne
add
jo
sub
lret
pop
jg
fstps
dec
xor
enter
bound
pop
mov
clc
xchg
nop
pop
adc
dec
jbe
jae
mov
mov
pop
jnp
adc
inc
cld
cld
xchg
mov
mov
pop
test
fstpl
repz
lods
jnp
idiv
ljmp
jmp
lahf
cmpsl
roll
stos
adc
icebp
inc
add
or
cltd
ja
lcall
inc
std
add
loop
fld1
ss
test
std
test
push
loope
mov
inc
pushl
nop
xchg
jecxz
hlt
cmp
dec
mov
popa
sub
mov
push
addr16
inc
mov
xor
mov
pop
jne
imul
gs
mov
pop
and
jg
jmp
ret
call
fldt
dec
mov
pop
mov
xchg
sbb
sbb
xchg
js
je
mov
sub
fldt
imul
push
hlt
sub
repz
jbe
or
into
jb
shll
mov
jns
sub
inc
call
add
jne
mov
imul
movsb
aas
push
jnp
xchg
jle
pushl
jl
push
adc
sbb
and
out
ficomps
pop
push
pop
mov
lds
jp
add
mov
jae
push
fimull
jno
jle
es
push
xchg
or
ljmp
add
outsb
mov
inc
pop
lret
scas
psrld
rorl
cwtl
fisttps
and
cmc
cmpl
adc
outsl
ja
cmp
insl
inc
out
in
mov
lahf
loope
xor
ljmp
cld
mov
leave
push
lds
aam
inc
enter
mov
nop
loop
fstpt
push
call
addr16
xchg
cmp
ja
xlat
mov
test
rclb
std
xchg
fcmovnu
out
aam
mov
mov
fnstcw
out
fstpt
stos
repnz
je
or
lds
stos
call
aaa
mov
js
fmuls
push
sbb
pop
movsl
lods
cmp
cld
cmc
sti
call
loopne
cmpsl
cmpsl
inc
jns
lcall
aaa
outsb
ret
sub
push
sub
mov
popf
dec
testb
mov
cld
pop
decl
insb
ljmp
lds
nop
jno
cmp
imul
jmp
adc
lods
cmp
inc
pop
loop
sub
rol
jmp
stos
mov
cld
out
mov
adc
adc
add
sub
mov
ljmp
or
rcl
xorl
rcr
lods
adc
call
inc
jmp
push
sti
sub
movsb
or
or
and
dec
in
call
incl
adc
out
cltd
cli
pushf
push
pop
aas
in
adc
subl
pop
out
jmp
cmpsb
out
psraw
loope
ljmp
add
xor
js
sub
call
in
stos
in
jne
sti
jecxz
fidivl
push
xchg
test
mov
sub
loopne
dec
sbb
out
dec
insl
ficompl
cmp
push
out
cmpl
push
testl
fidivl
push
xchg
pop
addr16
sbb
dec
mov
inc
das
lret
push
std
call
add
pushl
fbstp
test
push
mov
in
xchg
lods
cmc
iret
push
push
push
dec
jmp
pop
fadd
scas
inc
nop
cli
jg
ficomps
add
fiadds
fnstcw
js
dec
push
cmp
and
lock
call
xchg
mov
or
push
sub
insl
fucomi
roll
dec
aad
dec
xchg
push
mov
or
rorb
push
mov
adc
mov
test
xor
gs
fcoml
es
imulb
mov
fldl
incl
xor
jo
andnps
je
andb
in
lods
insl
jo
add
cmp
sti
std
jmp
adc
dec
dec
loopne
pop
mov
cs
pop
sub
out
pop
repnz
fdivrp
aaa
sbb
cmp
inc
mov
add
je
jmp
stos
lret
icebp
js
jne
lods
scas
push
xlat
notb
and
in
dec
addb
jmp
mov
adc
aad
notb
fadds
pop
ljmp
mov
push
mov
adcl
bound
les
incl
lea
hlt
pop
out
cmp
dec
es
clc
ret
and
mov
adc
incl
mov
pop
lahf
inc
jp
movsl
add
jns
mov
dec
inc
jo
jae
out
pop
stos
decb
loope
leave
add
push
xor
xchg
xchg
sbb
inc
dec
adc
ljmp
les
ljmp
repz
dec
jo
push
popf
cld
fcomip
sbb
jle
jo
fcomi
popa
es
cmpsb
inc
mov
push
mov
filds
mov
push
xlat
sbb
cmp
push
jmp
xchg
jb
out
loopne
lcall
push
sar
lcall
xchg
cmp
hlt
out
mov
xchg
clc
dec
add
imul
dec
add
test
shlb
pop
add
aaa
push
push
pop
div
test
mov
stc
decl
test
lods
inc
and
shlb
bound
outsb
test
js
adc
mov
aad
jo
sbb
dec
ss
mov
jmp
xchg
testb
idivb
cmp
fmuls
inc
xchg
mov
pop
in
add
pushl
movsb
mov
daa
lret
pop
mov
mov
stos
les
popa
idivb
push
fidivl
addr16
hlt
or
pop
cs
scas
mov
dec
jg
mov
ds
test
icebp
lcall
sub
test
dec
lods
or
jl
xor
mov
lods
sbb
bound
inc
jmp
outsl
cld
add
sahf
pop
sbb
or
push
jecxz
pop
pop
and
jo
sahf
in
sub
or
lcall
outsb
xchg
push
or
lods
mov
flds
push
dec
test
cmp
cmp
xchg
fcomip
lcall
shll
jge
cmc
mov
sub
insl
adc
push
jg
loope
call
jmp
pop
cmc
jle
sbb
cs
xor
or
clc
fs
xchg
sub
push
rcr
lcall
mov
jle
loope
or
adc
movl
xor
mov
xor
insl
pop
loopne
incl
mov
mov
mov
sbb
imul
imul
bound
push
push
lcall
ret
mov
lds
and
fdivl
bound
add
leave
jmp
inc
daa
lret
push
dec
int3
test
pop
pop
fxch
and
adc
jb
jmp
jmp
enter
movl
sti
mov
fldcw
pop
pop
fs
jmp
lcall
add
adc
mov
cli
shrb
add
dec
fs
decl
sub
sbb
xchg
movsb
clc
imul
push
sbb
push
stos
hlt
jg
lcall
inc
mov
mov
xchg
pop
enter
mov
lret
add
scas
psubusb
jmp
int
jmp
xor
and
divl
hlt
sub
loopne
fisttps
aam
sub
jg
outsb
or
test
daa
out
jp
mov
dec
ljmp
cli
call
loopne
pop
adcl
or
cmc
lret
popf
adc
inc
and
jb
sti
in
sbb
test
popa
ds
test
inc
jge
xchg
and
mov
push
mov
mov
aad
arpl
dec
sbb
mov
cmp
cltd
mov
fnstenv
cmp
cmc
call
xchg
jmp
push
subb
les
pop
xor
lcall
or
nop
into
mov
je
and
test
je
add
lcall
jae
mov
bound
fiadds
xchg
or
xchg
pushl
jb
loope
aaa
pusha
cmpl
inc
xor
push
outsl
add
orb
jg
cld
cs
push
lods
lods
mov
popl
xchg
aam
mov
insl
mov
xor
loop
jbe
mov
inc
mov
mov
mov
test
push
sub
lcall
and
adc
sub
pushf
cmp
aam
cltd
sysenter
mov
mov
je
out
and
jecxz
jmp
pop
sub
das
loopne
in
outsb
sub
push
push
push
cmpsl
cs
jge
jbe
insl
sub
ljmp
inc
test
adc
stc
ljmp
ljmp
hlt
repz
mov
out
inc
pop
pushf
clc
mov
cmpsb
in
lods
xor
mov
mov
aad
jmp
insl
push
stos
aas
sbb
push
notl
dec
jns
nop
lds
shll
mov
jg
xchg
test
jo
sub
fistl
flds
xor
push
pusha
movsl
fdivrl
daa
or
insb
movsl
lea
cli
dec
push
test
into
rorb
popa
xor
or
das
and
xchg
jo
sub
inc
add
jmp
pushf
lods
mov
int
cltd
movsl
enter
dec
add
xchg
mov
pop
repz
push
fstps
cmp
rcl
pop
popf
mov
xchg
sti
insl
mov
sbb
lahf
shr
pop
aad
lock
out
clc
call
stc
adc
xchg
bnd
ja
insl
sahf
call
lea
mov
pop
decl
in
pop
pop
andl
mov
rolb
ficoml
xchg
lcall
mov
push
xchg
in
sahf
xchg
mov
outsl
mov
and
pushf
std
out
cli
lcall
test
icebp
or
test
sahf
dec
pop
adcb
pop
inc
and
rol
cld
test
daa
add
filds
and
ret
sub
leave
dec
aad
push
sub
jmp
lods
xchg
stos
mov
mov
in
mov
dec
mov
inc
sbb
out
ljmp
cld
mov
call
xchg
cli
sbb
pusha
js
cmp
jecxz
adc
call
cmp
scas
push
xor
outsb
mov
mov
ljmp
shrw
rorb
pushl
cmp
inc
jge
fs
xchg
testb
outsb
jb
cltd
add
mov
popa
push
lock
lret
inc
push
add
sub
cs
pusha
mov
sbb
add
adc
pushf
test
pop
cwtl
loope
fbstp
jmp
dec
cs
mov
adcb
aas
cmp
sahf
loope
mov
fcos
jmp
xchg
jp
mov
inc
iret
pop
imul
cmp
and
cltd
iret
div
sbb
sub
popf
adc
imul
sub
lahf
idivl
pop
outsl
pop
insb
mov
aam
cmc
mov
fwait
cmp
ret
mov
push
and
cwtl
and
jmp
sub
inc
mov
xor
jle
inc
sti
scas
push
in
out
jp
xor
jb
out
in
dec
adc
loopne
ljmp
mov
mov
dec
and
mov
mov
cltd
call
fdivrl
and
mov
daa
rorl
js
movsl
push
pop
pushf
and
hlt
out
pop
call
decl
mov
call
daa
sbb
add
push
mov
dec
insb
std
push
or
xchg
dec
fstl
ljmp
push
pop
add
hlt
xchg
inc
es
rcll
xchg
jno
xor
jg
pop
mov
xor
jns
test
jl
push
lfs
cmp
mov
sahf
sub
xorb
incl
jp
mov
sti
inc
cmp
pop
out
dec
ljmp
stos
adc
push
xchg
movsb
or
pop
mov
out
mov
fstpt
mov
outsb
filds
cmp
shll
adc
test
icebp
addr16
ja
enter
imul
dec
call
std
add
mov
sbb
shll
add
cmp
shl
leave
incb
decl
pop
mov
pop
and
mov
or
fisubrs
sbb
in
nop
out
mov
push
push
daa
ret
ja
mov
out
mov
out
sub
fcomip
call
orb
mov
fldl
loop
cld
pushl
andb
xchg
xor
inc
fnsave
sub
setl
jns
mov
push
lods
test
push
push
jno
jg
dec
xor
incl
mov
dec
out
inc
outsb
mov
cmp
andb
jmp
decl
sbb
lret
pop
cltd
mov
jbe
int
mov
push
adc
jb
dec
jmp
jle
fldl
and
fwait
mov
cmp
dec
in
mov
mov
in
lcall
xlat
sbb
and
lea
or
dec
pop
adcb
outsb
out
pop
push
fs
jmp
pop
pop
nop
xchg
jne
xchg
aas
sub
outsb
adcl
adc
ljmp
mov
gs
pop
sbb
dec
fadd
or
cmpsb
popa
mov
mov
in
push
mov
call
lods
ds
sub
push
xchg
pop
test
inc
aas
or
add
dec
adc
in
call
mov
fwait
add
xchg
add
into
or
push
rorl
push
mov
idiv
jmp
fs
js
mov
sbb
sub
inc
out
repz
lgs
ljmp
mov
pushf
dec
jbe
pop
bound
in
je
popf
mov
push
inc
sbb
xor
sbb
repnz
push
bound
add
inc
dec
xchg
cmp
decl
add
ret
xlat
mov
sbb
push
add
mov
je
mov
inc
jmp
out
out
inc
pushf
sub
jmp
popa
lahf
lahf
xorb
scas
push
mov
inc
sub
dec
xor
sbb
xor
out
sub
adc
insl
inc
cmpsb
mov
jbe
xor
sub
mov
pop
test
cmp
dec
je
call
jbe
jb
jge
test
push
mov
push
lods
mov
or
shrb
dec
mov
cwtd
xchg
sti
call
mov
jmp
mov
pop
pop
test
mov
jb
pop
jo
pop
mov
cmp
clc
call
push
pusha
or
enter
js
jnp
sub
idivb
jge
sub
xchg
fucom
sub
cmc
sahf
push
jo
popf
adc
cmp
repnz
cmc
jns
mov
ljmp
mov
and
pop
lret
inc
dec
xor
adc
mov
inc
or
sub
sbb
test
dec
data16
pop
test
xchg
jnp
fdivrp
lcall
adc
pop
push
jp
push
push
ss
cmp
test
push
and
fcomip
jmp
cld
bound
lret
data16
sahf
test
cmpsl
lds
mov
pushl
push
jae
cmc
mov
pcmpgtb
ljmp
mov
mov
push
out
aad
jmp
sub
and
cltd
arpl
inc
ret
adc
cmp
cmp
testb
jbe
pop
ljmp
shlb
cli
xor
invd
loope
dec
xor
daa
in
mov
jecxz
mov
pop
cmp
adc
shrb
push
inc
std
and
lcall
mov
repz
cmp
stc
inc
add
lock
adc
test
in
pushl
pop
outsb
outsb
cmp
pop
add
jp
scas
lds
fisubrs
xor
ljmp
mov
dec
adc
pop
arpl
test
jp
hlt
call
xchg
inc
xchg
rorb
pop
cs
fstps
shlb
dec
popa
sbb
insb
insl
pop
test
jb
sub
xchg
jp
jmp
mov
mov
fidivl
mov
sti
jbe
push
jnp
mov
mov
stos
inc
xor
pop
push
push
loope
repz
fs
scas
cmp
rcr
cmp
mov
cld
clc
and
repnz
jae
out
pop
jb
dec
inc
jmp
inc
xor
fdivrs
aaa
ss
call
adc
mov
jle
sbb
pop
dec
out
es
and
mov
lock
xor
lahf
imul
cs
into
ljmp
cmpsl
out
push
pop
jge
lock
xchg
stos
mov
sub
jno
int3
sub
lcall
inc
ret
daa
xor
sub
mov
pushf
repnz
enter
inc
cmpsb
lea
subb
hlt
dec
cltd
out
jecxz
mov
and
ret
mov
scas
mov
lock
fisttps
shl
cltd
xor
fwait
ds
push
xor
notl
incl
dec
dec
scas
sbb
pop
sub
loopne
insb
mov
xchg
pop
outsl
test
call
pop
dec
and
inc
and
mov
xlat
jne
lcall
jbe
mov
cwtl
jmp
out
jno
lods
mov
mov
sub
pop
hlt
cmp
push
and
add
enter
out
out
shl
add
int3
or
push
in
xor
call
mov
gs
repnz
cmp
movsl
jns
mov
lods
fcmovb
and
pushf
push
pushl
pxor
aas
adc
leave
mov
int
fldl
jmp
jmp
cmp
in
xor
pop
out
pop
mov
add
xchg
and
movsb
incl
es
push
pop
xchg
cli
addb
stc
mov
repz
mov
hlt
in
repz
dec
shrb
pop
div
push
sbb
inc
inc
jp
popa
and
jmp
cmp
repnz
jmp
inc
jmp
cmp
jae
bound
ret
mov
pop
dec
jge
mov
mov
lret
cmp
push
sti
enter
pandn
std
cli
aam
cmp
mov
push
ret
incl
cmp
dec
sub
fdiv
push
xchg
hlt
js
mov
xchg
inc
mov
movsl
js
jle
call
cli
pop
or
pushf
aaa
push
mov
aas
outsb
dec
bound
out
inc
por
jne
pushl
dec
push
mov
fdivrl
and
cmp
out
jno
sub
mov
push
cld
outsl
inc
jae
adc
mov
push
pop
pushf
pop
and
cmpsb
imul
lret
out
repnz
mov
lcall
sbb
inc
fcomps
dec
sub
test
cmp
mov
or
mov
ljmp
adc
sarl
cs
and
shrl
cmp
notb
lods
add
std
lcall
add
cmp
std
subl
iret
inc
enter
mov
mov
pop
cltd
lcall
add
cmp
fs
lock
add
cmp
pop
adc
pop
or
in
dec
test
inc
sahf
sub
or
aad
sbb
sbb
repnz
or
loopne
pop
sub
shlb
adc
mov
cli
mov
mov
insb
xor
or
push
and
mov
ficoms
shlb
in
mov
int
ljmp
adc
lret
daa
jns
movsl
jno
imul
clc
dec
or
xchg
push
inc
push
stos
out
call
das
xorb
mov
xchg
sbb
dec
jge
push
pop
dec
xchg
rol
cmp
sarb
jmp
dec
int
cmpsl
add
stc
xor
lahf
adc
je
rcrl
adc
movsb
mov
call
dec
sahf
pushf
add
ljmp
pop
cmpsl
lods
cli
rcll
jbe
xor
loope
and
push
and
incl
dec
xchg
push
pop
sbb
sbbb
cmp
dec
es
lcall
out
lret
mov
pop
jg
int3
adc
sarl
cmp
cmp
lcall
sub
add
test
shll
push
xor
mov
ljmp
jae
push
cmp
adc
mov
lds
push
xor
cmp
das
popf
scas
pop
push
and
clc
sbb
int3
cmc
adc
pop
pop
push
shll
into
sbb
dec
jns
xor
ja
cli
jp
cmc
xchg
mov
enter
daa
cmpsl
fcmovnbe
call
testb
lret
push
popa
and
pop
and
sbb
jp
aad
sbb
push
inc
mov
sub
and
out
addr16
in
and
mov
sub
les
inc
adc
xchg
pusha
jmp
fs
addr16
lcall
notb
insb
and
pop
push
mov
std
and
inc
fadd
arpl
jmp
push
es
xchg
jmp
inc
inc
cli
push
lds
imul
push
nop
jp
push
mov
rcrl
inc
and
iret
ret
add
mov
ret
jp
rcll
cli
jp
fisubrs
jg
aad
sub
rol
test
jg
cmpb
vmulps
pop
shlb
jne
push
inc
mov
cld
sar
lcall
inc
mov
or
or
mov
adc
fildl
cld
stos
add
jo
fucomp
inc
jge,pt
scas
es
add
test
and
inc
outsb
lea
lret
ja
or
call
sar
cmpsb
mov
movsl
scas
lret
pop
das
outsl
ljmp
and
mov
jbe
sub
test
scas
push
inc
movsl
mov
jp
push
xchg
stos
sbb
fcomip
add
loope
sbb
and
dec
dec
push
std
out
pop
adc
jb
adc
je
and
xchg
shrl
imulb
mov
dec
sub
jg
out
nop
sbbl
dec
inc
pop
xor
in
jecxz
xor
test
loop
or
pushl
loop
fmull
hlt
cmpsl
xchg
out
std
xchg
pusha
lods
push
adc
lret
mov
ljmp
and
jbe
mov
sbb
ljmp
cmpsl
push
jb
lods
sahf
or
pushl
mov
ret
jmp
mov
test
in
movsb
fwait
jne
pop
rclb
int3
sar
dec
bound
lods
jle
fmuls
das
repnz
jae
xorb
inc
in
ja
xchg
ja
call
inc
xor
cmpl
lods
cwtl
enter
cmp
sahf
lea
jmp
adc
sbb
xor
add
mov
mov
or
int
xchg
mov
pop
cld
roll
dec
push
sub
popf
and
and
les
dec
jae
andb
sbb
call
les
jecxz
adcl
lcall
pop
inc
pop
outsl
fs
or
and
sbbb
jbe
xor
hlt
mov
jg
hlt
jmp
dec
movsb
dec
aaa
or
sub
mov
jno
pushf
cs
call
cld
inc
inc
jb
add
push
dec
fistpll
cli
adc
decl
add
movsl
sbb
fiaddl
in
popa
xchg
or
or
arpl
pushl
dec
rcll
push
pop
outsb
or
test
stc
je
dec
push
cwtl
mov
add
cmp
stc
arpl
sbb
pushl
mul
sbb
cld
pop
cmp
push
js
jl
cmp
add
mov
jg
dec
jecxz
test
ficoml
mov
xor
out
or
aad
rcl
lods
mov
dec
pushf
sub
pushl
mov
adc
xchg
js
mov
iret
jne
xchg
push
repz
aas
and
incl
inc
and
add
fstpl
cmc
mov
stos
cmp
jo
fnstcw
mov
aam
sub
sbb
stos
out
mov
fwait
clc
call
pop
dec
clc
dec
pop
jb
movsb
pop
jns
pushf
or
mov
ljmp
mov
or
dec
or
arpl
push
int3
clc
rcrl
leave
imul
loopne
mov
and
or
and
dec
dec
pop
jne
test
shll
jb
movsl
jmp
mov
mov
xchg
xchg
pop
clc
call
insl
in
arpl
daa
add
loopne
mov
push
jp
outsb
pop
imulb
ljmp
push
cmp
push
xor
jl
mov
andb
jecxz
cltd
push
call
sbb
call
jmp
mov
xchg
sbb
imul
adc
ljmp
dec
repz
dec
adc
cmpsb
incl
cmp
int3
lods
loopne
xchg
pop
cmp
mov
xor
push
das
rcrb
test
fcompp
jbe
mov
ret
xchg
movb
sbb
loopne
adc
fisubrs
jo
scas
pop
jnp
cmp
or
adc
mov
adc
shrb
mov
incl
imul
inc
xchg
mov
bound
fs
mov
push
pushl
shll
ficomps
xor
jmp
mov
repnz
mov
and
pop
dec
mov
xchg
leave
or
lods
jno
repz
pop
cmp
sub
jmp
xchg
push
cltd
cld
pop
loope,pn
mov
dec
jge
enter
cwtl
std
cli
cld
lahf
incl
push
xor
push
xchg
pop
movsl
icebp
pop
pop
pop
and
xchg
xlat
xor
mov
push
adc
lcall
inc
repnz
push
and
loope
or
push
fs
movsb
mov
stos
xchg
xorb
es
ljmp
lret
stos
jp
hlt
mov
loop
inc
jns
sub
pop
cwtl
mov
lds
cmc
pop
cmc
lcall
mov
jg
fcoml
inc
loop
jo
es
shll
fwait
test
sbb
inc
outsb
cmc
inc
pop
repz
xor
fwait
add
xchg
pop
test
rclb
ret
lcall
js
bound
test
mov
nop
loope
jl
push
jne
hlt
push
xor
sti
xchg
sbb
ss
pop
gs
call
fs
xchg
lea
cs
neg
gs
hlt
nop
pop
stos
std
jmp
test
or
fwait
aad
jecxz
push
icebp
cmp
mov
cmp
fwait
call
pushl
add
xchg
push
add
das
fistpll
pop
xor
push
mov
mov
pop
icebp
jg
pop
movsb
clc
xchg
xor
jecxz
imul
xchg
roll
jnp
or
xchg
cmc
lret
dec
add
jb
xlat
xor
pop
icebp
jg
shlb
pop
mov
mov
xchg
fisttpl
pop
cmc
xchg
cs
ret
loop
add
stos
enter
cmp
decl
rclb
daa
sub
mov
pushf
jecxz
or
xor
mov
mov
int3
insl
cld
addb
lret
jno
cmp
push
push
call
leave
outsl
ljmp
sbbb
push
xor
or
adc
pop
icebp
lcall
pop
or
fldl
adc
int
outsb
pop
testb
lcall
fbstp
sbb
dec
in
add
je
jae
das
insl
jge
pop
xor
fcomip
sbb
mov
test
lods
sub
or
in
call
jmp
pushf
movsl
adc
mov
sbb
push
mov
xchg
cmp
call
push
sub
adc
notb
adc
jl
jge
mov
pop
xor
ljmp
leave
inc
mov
adc
stc
sub
loop
cltd
fldt
jg
and
enter
leave
movsb
xchg
sbb
stos
das
mov
add
orb
lret
popf
in
pop
add
hlt
mov
mov
cwtl
adc
dec
pushl
fsubr
popf
inc
ret
iret
adc
cmpsb
push
les
in
cmpsb
in
arpl
ljmp
and
iret
fwait
lret
shrb
inc
dec
lret
mov
xchg
rorb
repnz
imul
out
xor
lcall
jno
xor
adcb
mov
sbb
cmp
in
xor
pop
xor
incl
mov
popf
pop
mov
movsl
sbb
loop
decl
mov
gs
loope
vsubpd
mov
scas
mov
add
lock
jl
xchg
xor
in
out
jae
cmp
ljmp
mov
mov
add
jns
push
lock
aas
mov
jg
pushl
xchg
popa
stos
mov
shlb
lods
pop
repz
push
scas
or
lcall
and
pop
arpl
stos
or
idivl
das
mov
data16
sbb
and
push
push
jl
clc
dec
push
inc
insl
iret
xor
incl
fs
cwtl
push
mov
push
sub
out
imul
mov
mov
jg
hlt
fistpl
cwtl
addr16
jne
push
mov
push
pop
scas
scas
mov
ja
popf
sub
pop
cmc
pop
nop
add
mov
leave
jg
scas
mov
scas
xor
roll
cwtl
mov
sahf
loope
stos
out
cs
jg
cmp
inc
ss
push
rcl
jl
mov
outsl
jl
pop
or
lcall
cli
inc
mov
loop
pop
in
push
and
push
ficomps
std
lcall
std
xchg
ljmp
xor
cld
pop
lock
out
sbb
ljmp
inc
and
dec
adc
shlb
push
xchg
adc
jmp
dec
loope
popa
pop
les
push
ljmp
fcomip
adc
xchg
fwait
mov
mov
or
jle
mov
jo
mov
add
cmp
gs
in
call
addr16
pushl
fiaddl
sbb
sbb
mov
lods
mov
in
xor
lcall
subb
sub
inc
xchg
lea
jmp
stos
fabs
nop
in
pop
jmp
xor
mov
sub
or
jbe
adc
vucomisd
dec
cmp
or
lret
jns
imul
dec
mov
jg
jecxz
ret
pop
hlt
xchg
arpl
or
adc
incl
xchg
xor
xchg
insl
push
lods
adc
movb
lret
sti
push
hlt
inc
sbb
push
ret
incl
push
rcll
ss
out
loope
cmp
jle
arpl
dec
pop
inc
push
pop
enter
leave
mov
aad
stos
or
fs
mov
xor
mov
mov
decl
call
stos
je
sbb
xchg
add
repnz
mov
ds
adc
mov
fadds
fiadds
popf
push
in
jnp
in
mov
int
sub
jbe
daa
leave
decl
xchg
pushf
daa
ret
pop
sarb
decb
enter
pop
scas
jge
inc
in
jge
lcall
bound
iret
xor
mov
adc
in
jmp
aaa
push
into
jmp
sbb
or
mov
xor
xor
je
jb,pn
push
mov
fcomps
mov
lea
idiv
mov
shlb
inc
stos
stos
push
cmpsb
pop
pop
xchg
and
jecxz
mov
push
punpckhwd
jmp
iret
jae
out
pop
sbb
scas
add
imul
test
and
xchg
or
xlat
rol
inc
call
std
in
bound
dec
bound
sbb
fmuls
pop
nop
mov
pushl
imul
ficomps
pop
mov
xchg
add
add
and
jg
or
add
dec
mov
rorl
xchg
fsubs
das
and
shr
outsl
lods
push
int3
dec
add
filds
or
pop
fmull
les
and
jecxz
xorb
ja
int3
movsb
aad
jle
xchg
sahf
jne
push
sahf
aaa
or
out
dec
dec
xor
xchg
test
pop
inc
fadds
jp
shll
stos
jbe
fidivrs
jmp
inc
test
out
adc
rorb
mov
fcomip
loop
mov
adc
lods
imul
cmc
mov
jmp
or
ja
cmp
adc
lods
xchg
ja
mov
jecxz
ja
inc
gs
sub
mov
mov
cmc
popf
pop
and
or
adc
das
cmp
inc
ret
jbe
call
jmp
pop
push
mov
push
push
fimuls
ret
cltd
mov
jecxz
rorl
lret
js
or
jns
decl
inc
test
pushf
repz
adc
shll
test
jmp
imul
clc
lods
push
or
out
sbb
in
inc
cmpl
mov
mov
je
mov
ljmp
xchg
popf
and
sbb
bound
cltd
fs
sub
mov
mov
rcll
jge
add
or
sub
sbb
pop
dec
push
jle
dec
dec
movsb
pop
mov
dec
add
lcall
ret
es
scas
sahf
sub
int3
and
addl
sub
adc
pop
mov
ret
and
dec
pop
and
jmp
scas
mov
int3
ds
or
dec
xchg
into
incl
arpl
stos
lahf
push
mov
jnp
mov
mov
dec
cmp
decl
je
out
pop
sbb
call
jne
push
cmc
mov
pop
adc
pop
inc
cld
adc
mov
and
jmp
pop
mov
in
push
dec
jbe
pushl
sti
inc
and
xchg
mov
sbb
jg
mov
adc
ss
push
incl
sub
fistpll
push
sti
in
sahf
xchg
adc
xchg
pusha
in
xor
push
mov
pop
jb
mov
pop
outsb
jae
push
es
xchg
loope
inc
jecxz
mov
mov
adc
shr
cmc
decl
xor
cmpl
add
mov
fdivrs
in
enter
add
ret
mov
mov
call
jne,pt
add
inc
movsb
test
rolb
clc
xor
mov
mov
sbb
iret
jb
insb
ds
lods
mov
and
mov
call
push
lcall
in
mov
push
or
and
sub
divb
pop
and
lcall
incl
adc
or
sub
push
lock
fisubrl
mov
inc
frstor
bound
fs
push
je
ror
pop
xchg
cmp
das
pushl
scas
dec
xchg
test
aad
je
mov
xchg
and
cli
ljmp
inc
call
shl
cmp
loope
mov
fnsave
jle
fneni(8087
add
lret
stos
scas
clc
mov
xor
cmp
je
nop
and
cld
cwtl
mov
lods
gs
cmp
pop
daa
outsl
jmp
or
and
jae
sbb
cmp
insb
jg
ljmp
cmp
sub
and
stc
repnz
addr16
xor
ljmp
lret
jp
push
shrl
jg
sbb
and
jge
mov
adc
call
sbb
pop
test
xor
stos
push
sub
or
movsl
jnp
lcall
subl
stos
ret
dec
lds
dec
rclb
ss
mov
xor
mov
jns
ljmp
pop
repz
in
jno
enter
sub
enter
adc
nop
fdivrp
incl
dec
sub
incb
jns
xchg
cmp
ja
mov
lcall
out
adc
lret
pop
ljmp
movsb
js
push
idivb
fsubs
outsb
sub
jnp
or
fucomp
xor
push
sbb
ljmp
jbe
adc
pusha
fs
push
pop
in
sub
push
loopne
incl
and
xor
rcrl
dec
stos
dec
pop
cwtl
test
xor
lcall
sub
fldz
call
test
filds
xor
call
adcb
jg
jmp
push
push
sbb
cmpsl
aad
sub
cmpb
pop
out
insl
push
je
out
dec
add
pushl
dec
mov
sub
inc
xchg
inc
mov
sar
lahf
mov
dec
lods
mov
arpl
rcrb
pushl
aam
jb
dec
mov
or
movsl
adc
movsl
mov
adc
inc
repz
pop
lea
lret
ja
decl
mov
jle
data16
push
loop
testb
sbb
mov
vpaddsb
xor
loop
outsl
jp
push
js
cmp
jg
jo
dec
push
test
lds
loope
out
test
jno
ret
and
ljmp
jge
in
aaa
xchg
movsb
mov
mov
cli
push
fists
ret
mov
repnz
ljmp
rcrb
test
repnz
insb
scas
clc
mov
jbe
call
das
jge
dec
push
mov
dec
call
cmpsb
adc
xor
mov
and
insb
jns
mov
xor
ret
push
pop
test
ljmp
jae
pop
add
inc
jle
stos
adc
or
rorl
testb
int
sbb
outsb
adc
push
jae
sbb
push
mov
stos
jnp
fsubrl
bound
lea
lods
aaa
and
adc
push
loop
mov
push
es
adc
decl
mov
test
aaa
dec
sbb
push
out
xor
ds
jg
pop
cmp
and
mov
mov
lret
ret
xor
mov
scas
lret
js
xor
inc
or
xchg
shll
das
xchg
sbb
push
pop
pop
sbb
jmp
mov
push
jg
mov
sub
int
xchg
call
clc
add
cmc
jns
test
out
dec
xchg
jl
adc
gs
xchg
lahf
daa
push
call
lds
add
sbb
pushl
inc
adc
pop
sti
dec
sahf
mov
jb
mov
mov
in
pop
add
mov
iret
insb
jmp
clc
mov
jg
jp
sti
dec
xor
incl
outsb
jmp
out
fstpt
ret
push
inc
in
add
cmp
add
xchg
arpl
pushl
inc
leave
xlat
in
jmp
sub
popa
mov
xor
ja
jmp
leave
ret
int3
ljmp
or
add
mov
xchg
lods
decl
add
adc
fs
and
xor
xor
mov
out
scas
and
inc
xchg
gs
or
xchg
shrl
pop
add
stos
mov
inc
xor
mov
jae
cmp
cmp
adcl
jno
add
mov
adc
ljmp
andl
jno
mov
and
dec
or
jg
add
scas
ds
sbb
adc
cwtl
cmc
inc
scas
sarb
ljmp
aaa
fsubs
loopne
mov
inc
adc
mov
stos
mov
incl
out
mov
and
test
ror
lods
mov
adc
stos
push
cmpsl
mov
stos
pusha
pop
idivl
lcall
cwtl
mov
inc
fstl
jge
aaa
dec
idivl
jo
cld
pop
mov
pushl
test
in
faddp
ljmp
out
inc
add
adcl
xor
ljmp
incl
dec
fcoms
sub
or
mov
xchg
aaa
out
or
repz
lcall
mov
test
jno
pop
mov
ret
xchg
mov
push
jmp
pusha
and
sbb
sbb
rep
push
jl
adc
clc
push
pop
movb
jmp
jecxz
fs
dec
aam
adc
push
adc
jne
fadd
divb
adc
ljmp
decl
push
sub
mov
aad
jns
pusha
cwtl
mov
cmpsl
cmpl
dec
mov
dec
pushf
icebp
inc
call
ljmp
inc
lock
in
adc
jne
mov
xchg
xlat
xor
divb
enter
adc
ljmp
cli
es
add
sbb
add
add
pop
shlb
jbe
ja
lahf
sarb
fidivl
fidivl
pop
add
mov
pop
sbb
roll
fimuls
push
incl
mov
pop
ret
xor
movsl
scas
sub
ret
jecxz
or
incl
xor
inc
fcoms
push
pusha
mull
call
mov
pop
rcl
xchg
push
or
adc
adc
pop
sbb
arpl
sti
repz
push
adc
sub
mov
rcl
or
mov
scas
lock
push
test
cld
mov
lret
rsqrtps
add
mov
jg
mov
mov
cs
lret
test
pushl
xchg
dec
push
repnz
lods
lea
adc
es
fs
ss
or
call
or
outsl
lret
fldt
scas
jb
inc
push
fwait
jbe
ds
in
dec
inc
test
mov
enter
aad
lea
dec
xor
js
aas
sarb
and
cmpsb
cltd
scas
ret
mov
bound
scas
in
dec
lret
jmp
sar
mov
lcall
mov
and
ja
pop
push
push
repnz
sub
mov
or
and
imul
mov
in
int3
dec
ret
incl
mov
cmp
and
roll
cmp
sbb
scas
lds
ds
ljmp
jns
or
add
pop
movsb
mov
mov
das
leave
sub
cmp
out
sub
xchg
lcall
inc
jg
shr
xor
sbbb
cmp
mov
pushl
je
pusha
xchg
cwtl
stos
adcl
inc
xor
and
and
fst
jecxz
jg
incl
inc
xor
mov
mov
pop
scas
xchg
push
dec
add
pop
outsb
aaa
and
sbb
xor
incl
imul
push
and
in
imul
sti
das
pop
and
mov
fdivrs
jge
imul
mov
dec
xchg
cs
sub
data16
adc
in
out
pushl
ss
sahf
mov
push
dec
jo
outsl
insb
dec
je
xor
enter
in
aas
push
or
push
pop
sub
mov
mov
int
pop
sbb
mov
lods
dec
hlt
xor
lcall
or
pop
and
lahf
adc
leave
repz
jg
add
inc
sbb
jae
jg
iret
jp
loop
mov
movsb
les
jno
repz
in
movsb
aas
jg
cmp
dec
inc
bound
mov
pusha
enter
mov
jmp
lcall
dec
cld
cmp
aaa
std
decl
movsb
inc
xor
mov
movsl
jne
stc
xor
push
mov
cwtl
or
lcall
adc
sbb
jmp
lock
movsb
adc
jbe
out
insb
in
mov
pop
inc
cld
incl
loopne
push
out
lret
jo
mov
imul
dec
test
dec
push
imul
fistpl
dec
ret
addr16
mov
and
sbb
cmp
mov
sarb
mov
push
fs
inc
fwait
mov
xlat
jg
pop
adc
cmpsl
cmp
and
mov
pop
mov
test
fmuls
cld
adcl
jbe
mov
aam
inc
stos
sub
aad
pushl
test
cmp
lret
adc
fs
ljmp
sub
mov
mov
lcall
jns
outsl
in
xchg
dec
sbb
xchg
dec
nop
fiaddl
insb
ret
push
test
mov
jb
fcomip
push
out
mov
repnz
jb
mov
ret
sbb
testl
inc
pop
dec
pop
adc
in
push
pop
scas
pop
pop
inc
iret
mov
out
ret
push
insl
adc
mov
and
jle
pusha
aaa
cmp
popf
push
loopne
jmp
cmp
iret
inc
and
push
subb
xlat
cli
dec
pop
mov
fisubrl
dec
xor
incl
or
decl
andb
popf
and
js
xchg
incl
out
out
out
iret
pushf
adc
mov
dec
ljmp
test
clc
iret
stos
aad
adc
decl
popf
or
pop
fstpt
dec
in
sbb
inc
adc
lcall
repz
cmp
mov
mov
mov
dec
jmp
sub
sarb
jno
mov
push
mov
je
pop
mov
push
or
call
scas
dec
cmp
pop
sbb
xor
idiv
clc
fstpl
mov
cmpsb
aaa
jmp
push
push
js
lret
into
rclb
iret
xchg
in
or
ljmp
sbb
mov
and
mov
repnz
lods
call
jmp
outsb
add
pushf
mov
and
push
cltd
mov
shll
das
js
add
add
ljmp
xor
cltd
push
jp
in
mov
adc
mov
cmp
imul
and
pushf
in
decl
sub
cmpsl
sbb
or
enter
inc
test
lret
rcrb
or
sbbl
movsl
imul
sub
stc
fidivrs
in
call
jmp
outsl
test
cmp
movsb
pop
mov
es
insb
roll
cmp
adcb
add
loope
jmp
int3
jg
sub
iret
fdivrs
jge
add
repz
loop
ret
cs
mov
or
jl
sub
fsubrs
fnsave
adc
adc
sub
scas
xchg
mov
fidivrs
push
sbb
decl
hlt
sbb
gs
imul
cli
je
cmpl
xchg
incl
cld
inc
jp
scas
mov
int3
addr16
imulb
xchg
mov
sbb
add
dec
outsb
xor
ljmp
std
mov
enter
adc
pop
popa
sub
xchg
es
add
adc
ljmp
clc
dec
or
pop
inc
or
add
jg
ljmp
jo
pop
ss
dec
aam
cli
dec
bnd
pushf
mov
pop
inc
mov
andb
mov
pop
aaa
jl
fbld
push
xchg
or
shl
rorl
add
sbb
div
call
sahf
jae
or
dec
sbb
or
inc
rorb
stos
aaa
pop
ret
push
ljmp
mov
adc
or
mov
mulb
shlb
sbb
or
lret
adc
je
jle
xor
and
cmp
out
scas
mov
push
pushl
loop
mov
adc
int
in
xchg
cmp
lcall
in
rclb
cmp
jl
leave
addr16
sbb
imull
js
call
out
mov
push
mov
std
push
add
ss
and
ret
or
cli
pushl
sbb
xor
pop
and
or
mov
addr16
call
mov
sub
push
pusha
mov
loopne
xor
jne
outsb
inc
mov
loopne
jg
or
push
mov
push
insb
jae
mov
sub
mov
cmp
hlt
lcall
test
loope
mov
frstor
aas
ror
mov
nop
jle
cmpsb
dec
mov
mov
ret
lahf
mov
cmpb
clc
aaa
std
pushl
aam
xchg
pop
jb
aam
sbb
or
add
movsb
rorb
test
out
jl
sub
sbb
cmpl
push
out
rcll
xchg
xchg
mov
popf
jb
fists
jle
rol
ljmp
mov
rorb
dec
in
in
mov
nop
dec
fistl
sbbl
stos
xor
mov
mov
add
scas
push
pop
or
inc
inc
mov
fwait
mov
add
cmp
repz
xor
ja
mov
shl
mov
xor
add
lahf
push
decl
mov
pop
fidivrl
jmp
das
xchg
or
cmpsl
jl
stc
cltd
pushl
push
sarl
xchg
lock
sub
sbb
jecxz
in
xlat
outsl
out
dec
pop
jmp
inc
inc
pop
test
sbb
rclb
cli
stc
adc
dec
lods
stc
jp
adc
insb
and
outsl
incl
dec
in
pop
out
lods
stos
mov
pop
sbb
ljmp
sbb
and
adcl
xchg
mov
sbb
mov
jmp
sbb
mov
dec
stos
icebp
pop
add
ret
out
hlt
lcall
inc
push
xor
inc
repz
jmp
out
push
imul
add
pop
movsb
sub
fistps
xchg
push
jmp
jecxz
push
mov
cmp
mov
rorb
loope
nop
movsb
add
and
add
cmpsb
inc
mul
or
daa
cli
jp
jmp
in
lods
cltd
and
add
icebp
xchg
nop
shr
inc
adc
gs
mov
loope
lcall
mov
ja
mov
test
cld
loope
loop
js
imul
call
in
lock
unpckhps
rcrb
mov
xchg
out
inc
in
rcll
and
jmp
push
push
bound
js
adc
pop
lahf
jl
xchg
and
jg
push
jbe
sub
cwtl
dec
int3
dec
adc
imul
sub
adc
adc
cs
call
or
and
imul
xchg
mov
sahf
or
in
call
ljmp
xchg
and
jge
pop
mov
test
push
call
popl
int
loop
xlat
jecxz
fdivrp
pushl
xchg
and
test
push
add
add
cmp
inc
loop
lods
mov
jmp
outsl
push
jle
push
test
sub
xchg
sar
pop
push
xor
je
subl
test
dec
pop
add
das
out
iret
jae
mov
bound
dec
das
clc
jmp
xor
add
jne
dec
iret
xchg
and
jl
imul
xchg
inc
add
sub
pop
imul
push
and
and
aaa
sahf
inc
jg
mov
jb
add
dec
xorb
jne
xchg
addr16
ljmp
inc
fstl
xor
jecxz
pop
xchg
imul
jmp
ret
mov
mov
lret
cmp
andl
jmp
fcmovne
rol
popf
cmp
lods
mov
mov
mov
add
lcall
sti
cmp
dec
mul
aam
push
insl
adc
xchg
rorl
jb
xor
fstpt
cmp
dec
shl
xchg
fisubl
adc
lods
push
jbe
sar
lods
mov
js
sub
cmp
sbb
xor
lds
repnz
nop
repnz
and
rcrl
clc
incl
jbe
mulb
aad
jecxz
add
push
faddp
addr16
scas
aaa
std
imul
scas
xlat
js
lea
ret
vmwrite
jmp
add
pop
cwtl
bound
scas
and
lds
dec
push
cmp
dec
xchg
pushl
jl
nop
mov
les
into
rcll
xchg
ss
jp
fisttpll
sub
das
xor
mov
aam
jmp
jae
fldl
outsl
clc
ljmp
mov
mov
push
inc
cmp
test
negb
inc
mov
inc
outsb
dec
xchg
adc
cmp
jmp
inc
add
adc
ljmp
dec
jmp
sbb
fsubl
add
pop
dec
rolb
push
movl
push
push
test
incl
push
sbb
stos
pop
jne
aaa
stc
sbb
js
divb
push
jp
arpl
or
sbb
and
mov
mov
add
addr16
std
mov
test
push
out
cmp
dec
xchg
or
dec
aaa
pop
lret
jge
mov
add
ljmp
adc
sbb
mov
cmpsl
xchg
clc
xchg
dec
fiadds
push
stc
je
add
xlat
mov
pop
decl
jo
jnp
xchg
loopne
cmp
xchg
xchg
add
push
imul
xchg
cs
jmp
jno
in
dec
inc
xchg
pop
stos
lods
push
call
mov
ds
xor
pop
xor
mov
pop
sub
test
sub
or
notb
xchg
fimuls
inc
push
iret
xlat
or
dec
adc
arpl
xchg
lahf
pop
push
jg
jo
mov
ja
xchg
jbe
lods
adc
je
jp
pop
stc
jb
clc
pop
ljmp
add
gs
mov
enter
movsb
sub
jg
imul
pop
dec
rcrl
push
pusha
movsl
cmc
sub
inc
pop
mov
incl
push
push
enter
into
push
dec
daa
cmc
push
inc
inc
fsubl
loop
xor
fcoms
imul
lret
fdivp
adc
mov
pop
rcll
sar
pop
std
data16
add
dec
pop
mov
mov
int3
mov
add
incl
push
sahf
inc
xor
dec
sti
mov
cs
pop
adc
and
mov
mov
xor
jae
sub
sbb
std
lcall
rorl
mov
lret
push
test
cmpsl
cmpsb
pop
inc
pusha
or
or
rcrl
or
int3
ss
fisttpll
adc
jnp
das
mov
decl
sbb
push
mov
pushl
xlat
icebp
xlat
jo
mov
inc
jb
jnp
cltd
dec
xchg
cld
pop
jmp
xchg
sbb
pushf
push
decl
mov
sub
gs
or
iret
outsb
xchg
pop
mov
shrb
add
cld
decl
mull
xor
imul
roll
xor
mov
orb
or
push
sbb
cmp
sub
in
pop
pusha
clc
adc
lcall
add
push
pop
jbe
ss
xchg
pop
icebp
mov
sub
ret
mov
dec
enter
stos
ljmp
push
je
pop
mov
jecxz
pop
popf
icebp
pop
out
mov
push
out
fwait
add
call
sub
ficomps
add
add
pop
or
loope
adc
inc
aam
inc
movsl
mov
jp
out
jp
bound
out
and
jp
rol
ret
mov
out
das
mov
movsl
es
inc
jbe
sbb
or
sqrtps
insb
sub
mov
movsl
mov
pushf
repnz
jge
mov
sub
sbb
pop
pop
loopne
jmp
outsb
in
js
lahf
insl
out
sbb
jns
test
sbb
cmp
ljmp
push
sti
jae
popf
jmp
notb
and
sahf
iret
cld
cld
ljmp
sar
out
andb
in
insb
cmp
and
mov
sar
jns
dec
test
xor
mov
mov
xor
pop
test
xchg
fneni(8087
cmpsb
xor
cwtl
les
sbb
stos
icebp
loope
add
jb
sti
mov
out
out
add
loopne
or
arpl
fwait
jl
xchg
sahf
aas
mov
xchg
ljmp
test
pushf
inc
push
pop
out
dec
cli
mov
cli
jp
das
sbb
fidivs
filds
decl
sbb
movsb
cld
lods
les
xchg
enter
xchg
loop
push
mov
jg
jge
sti
dec
push
mov
dec
inc
or
into
jmp
jne
mov
popa
mov
cwtl
sub
jle
xor
pop
jp
fmuls
add
lcall
xchg
adc
or
sbb
jge
sub
sub
or
test
je
add
ljmp
pop
pop
dec
in
push
add
cmp
sbb
imul
jb
scas
imul
stc
jge
pop
and
and
incl
pop
or
sbb
test
insb
sub
jg
call
loopne
or
outsb
jge
dec
and
ja
sbb
adc
decl
push
mov
add
bound
aam
push
xchg
push
mov
mov
fdivr
decl
mov
movsl
cmp
outsl
lahf
xchg
sub
sbb
shll
mov
push
ljmp
cmc
pop
push
rcrl
sub
clc
lret
jl
jb
mov
jae
jg
mov
mov
mov
dec
lahf
hlt
ret
sbb
jp
imul
mov
or
and
pusha
call
xchg
mov
int3
loope
imul
mov
js
sub
push
aaa
call
pop
pop
imul
sub
mov
ljmp
je
test
repnz
mov
push
jg
xchg
out
mov
push
shll
filds
push
loop
push
fldl
mov
and
idiv
cmpsl
or
push
xor
lcall
addr16
cltd
negl
and
mov
sbb
or
cmpsl
add
xorb
fwait
cmpsl
addr16
jmp
mov
movsb
pop
sbb
mov
xchg
xchg
push
jl
std
enter
das
xchg
out
scas
and
jmp
add
dec
movsb
jp
fs
fsubrl
and
aas
or
sub
sbb
sub
push
test
mov
sahf
and
xor
insb
mov
popf
lret
sub
cmp
adcb
xor
sub
out
stos
xor
stos
hlt
inc
add
call
in
insl
stc
insl
clc
pop
dec
mov
loop
xor
imul
push
lods
lcall
dec
pushl
shlb
mov
bound
pop
inc
jmp
mov
push
mov
mov
call
scas
sbb
cmpsl
mov
arpl
mov
loop
mov
ljmp
test
js
push
and
jge
loopne
faddp
lret
mov
lcall
orb
addr16
sarl
sbb
test
xchg
and
jmp
adc
not
dec
or
lcall
mov
out
push
pop
cmp
imul
orl
and
daa
pandn
sbb
sub
adc
daa
sub
js
inc
dec
push
or
inc
popf
outsb
imul
std
int3
test
sbb
aad
pop
movsl
aaa
movsb
fst
pop
or
xor
in
cmp
hlt
mov
scas
int3
nop
stos
adc
dec
aas
movsl
jno
push
aad
nop
xchg
idivl
xchg
jnp
xor
push
mov
mov
ss
or
sbb
call
and
addr16
or
and
dec
in
imul
aas
inc
cmpsl
cmp
flds
sbb
aas
js
mov
out
cli
push
ficoms
add
xor
mov
xor
xchg
sbb
adc
or
xchg
adc
lcall
sbb
xlat
inc
and
mov
out
roll
imul
jb
sbb
fsubl
leave
mov
clc
mov
fldt
test
xchg
fisubs
arpl
lods
imul
dec
cmpsl
iret
cs
mov
adc
cmpsl
je
call
cmp
lds
add
sahf
adc
fstpl
mov
test
call
cmp
fiaddl
mov
sbb
hlt
movsb
sbb
sbb
fwait
and
dec
fistpll
insb
outsl
cli
stos
ljmp
adc
mov
scas
cmp
cmpsl
push
pop
movsl
jmp
clc
scas
dec
mov
addr16
mov
mov
lcall
lods
pop
inc
das
je
cmpsl
xchg
cmp
cmp
inc
je
pop
pop
jne
mov
std
pop
movsb
push
jp
pop
gs
psubq
mov
mov
sbb
pop
push
enter
pushl
or
xorb
aad
jo
repz
pop
fcoml
stos
adc
scas
outsb
dec
ljmp
jge
or
leave
push
popa
sub
dec
lret
bound
sub
mov
mov
test
mov
icebp
out
sub
hlt
orl
frstor
in
js
fs
or
movl
mov
cltd
clc
sbb
mov
xchg
and
mov
outsl
xchg
shlb
jmp
rclb
mov
mov
popf
sub
out
ds
shll
aaa
cld
outsl
jae
adc
push
and
shlb
or
push
mov
jno
incl
outsb
adc
cmp
cmpsb
test
test
popf
mov
stos
lahf
push
pop
dec
add
mov
incl
in
sub
inc
out
jle
cmp
mov
lcall
pop
and
pop
pop
mov
jg
mov
push
push
sub
dec
mov
xor
add
int3
jge
jmp
sbb
sbb
fucomip
adc
or
pop
or
fimull
nop
sub
decl
sub
fildll
sbb
sbb
shrl
jne
xchg
int
test
stos
repz
lcall
lcall
mov
jnp
cmp
mov
in
fisubrs
leave
aas
dec
or
rolb
incl
scas
xor
aad
sub
cmp
or
insl
push
and
repz
loop
cwtl
mov
and
mov
leave
jbe
sbb
aad
add
mov
neg
sub
movsl
cmp
not
push
lahf
out
push
adc
jmp
rcrl
cld
or
enter
je
pushl
pop
xchg
xchg
cmp
je
xchg
mov
and
ficomps
test
loopne
jp
ja
adc
test
stos
cmp
call
mov
lahf
push
imul
xchg
addl
inc
sub
jnp
lock
clc
negb
sbb
decl
push
mull
jecxz
or
cmp
and
popf
imul
ljmp
jle
add
imul
imul
jg
mov
mov
jecxz
cmc
ss
adc
jecxz
nopl
inc
movsb
jle
xor
adcb
pop
adc
pushf
or
loope
add
sti
add
out
jle
loope
push
lcall
fcmovb
int
sbb
or
mov
jg
call
mov
inc
movsb
decl
push
lcall
sarb
insb
mov
lods
sbb
imul
inc
jns
cld
mov
mov
dec
xchg
dec
xchg
mov
ja
pushl
aam
jmp
enter
xchg
jbe
dec
jecxz
incb
jp
stos
push
inc
and
push
lea
cli
jnp
daa
cmp
out
es
jmp
loopne
cli
sbb
lock
fisttpl
in
clc
xlat
mov
mov
sub
cmpsl
mov
jmp
fiaddl
jnp
dec
push
ljmp
sub
or
stos
test
and
push
outsb
sbb
add
leave
nop
or
xor
lods
sbb
cld
push
pop
jg
orb
mov
scas
and
arpl
clc
xchg
lcall
jno
inc
jns
xchg
push
or
mov
in
jmp
loopne
mov
mov
loope
jae
pop
scas
fdiv
pop
mov
fmulp
hlt
arpl
push
cmp
call
inc
incl
add
scas
ret
movsl
inc
sbb
jge
fnstcw
push
cld
cli
inc
lods
push
pop
or
out
into
fsubs
xor
rorb
ja
push
mov
jg
mov
pop
stos
lret
sahf
test
aad
jns
and
mov
adc
push
clc
push
pop
pushl
cli
cltd
and
imul
xor
loopne
lcall
aaa
sub
pushf
cmp
in
andl
enter
and
dec
dec
es
test
call
cld
cwtl
push
roll
dec
stos
repnz
in
daa
into
push
add
jno
cmp
lcall
inc
add
outsb
cmp
mov
mov
test
or
pop
clc
js
mov
pop
mov
ljmp
add
data16
push
ret
out
xchg
loopne
push
fnstcw
pop
aam
sub
mov
ret
mov
mov
push
into
jg
imul
or
and
ljmp
clc
imul
jnp
xchg
aad
dec
pop
popf
arpl
hlt
jmp
dec
stos
cli
dec
cmpsl
dec
sar
inc
push
mov
in
push
mov
sub
dec
movsl
jecxz
inc
push
ljmp
ficomps
mov
or
pop
mov
pop
sbb
pop
lcall
cmp
call
loopne
lahf
xchg
addb
mov
scas
dec
lcall
push
or
mov
xchg
insl
add
enter
mov
in
mov
push
mov
mov
sbb
cli
jae
cmpl
pop
nop
mov
incl
pushl
cmpsl
fs
fmull
in
mov
adc
xor
lods
and
add
xchg
and
mov
sbb
out
incl
jmp
pusha
aaa
xor
in
or
jg
not
or
pop
call
subl
push
icebp
jne
pop
icebp
imul
pop
fbstp
mov
inc
push
inc
pop
fadd
lcall
and
ss
xchg
movsb
cwtl
push
adc
into
adc
push
fisubrl
hlt
incl
jmp
mov
push
push
push
in
jo
jl
into
inc
inc
je
mov
lahf
test
cmp
jbe
idivb
push
add
xor
lea
das
shrb
stos
push
jg
lods
repnz
fbstp
ficompl
jle
jp
cli
fistpll
xchg
jl
sub
loop
jnp
call
xor
pop
xchg
lret
push
mov
adc
negl
add
ljmp
mov
fsubp
scas
test
xchg
dec
mov
fnstsw
push
jmp
mov
xchg
push
test
cmp
and
adc
iret
jge
push
enter
gs
jae
or
sahf
decl
cmp
nop
test
lret
sub
call
nop
test
sbb
out
pushl
jmp
mov
sbb
xchg
insl
mov
das
sahf
xchg
xchg
call
incl
xchg
jnp
dec
outsl
pop
adc
adc
lds
and
xor
cld
sti
sbb
xor
mov
mov
pop
not
sub
pmaddwd
pushl
shrl
dec
push
dec
fs
sub
call
cmp
sub
cmp
pop
mov
pusha
dec
add
cwtl
xor
sub
out
pop
ljmp
cli
lods
sbb
int
cmpsl
xorl
jnp
and
es
test
pop
int
ret
mov
sar
cld
mov
adc
fsqrt
daa
gs
mov
push
sub
sbb
jae
es
lret
jg
andl
in
cmp
or
fbstp
loope
call
mov
sbb
into
pop
icebp
sbb
ljmp
inc
dec
mov
mov
sbb
add
cwtl
pop
mov
dec
jne
lcall
xlat
lods
adc
test
into
out
or
sub
and
sbb
and
and
call
fstpt
lods
cli
xor
sub
jge
imul
movsb
sub
cwtl
cmp
incl
mov
sub
mov
dec
xchg
dec
jae
adc
sbb
xchg
stos
loop
pop
cmp
ret
mov
pop
adc
cmp
loopne
jecxz
lds
push
je
mov
and
xor
adc
repnz
leave
adc
ret
divb
push
sahf
mov
lcall
and
jno
decl
cs
and
and
pop
inc
fs
xchg
cmp
clc
dec
pop
std
pop
andb
cmp
call
test
jne
fildl
in
mov
or
lcall
jbe
inc
call
int
sub
movzbl
cltd
mov
cmp
lcall
in
and
cmpsb
jmp
pop
lahf
inc
push
push
mov
push
popf
dec
lcall
mov
loope
pop
hlt
adc
or
lcall
aaa
icebp
popl
mov
vmovmskps
adc
jmp
jg
jmp
push
adc
and
inc
mov
jnp
mov
jne
dec
popf
in
lahf
rol
je
cmpsb
adc
in
push
sahf
or
imul
jmp
lods
filds
mov
mov
das
das
push
cld
rcrb
incl
ss
mov
mov
push
dec
ds
fs
push
or
mov
cld
mov
lock
enter
popa
andb
inc
in
lods
test
rorb
lea
mov
out
dec
mov
lock
ret
and
xor
pushl
xchg
adc
loopne
inc
mov
mov
jecxz
out
adc
imul
ja
xchg
jmp
or
sti
rclb
inc
pop
out
pusha
sti
xchg
imulb
inc
cmp
incl
cli
sub
aam
outsb
enter
and
mov
daa
cli
add
std
incl
ret
mov
stos
icebp
ds
fsubrs
adc
idivl
call
sarb
hlt
pusha
xchg
mov
out
push
aam
lret
xchg
sub
out
js
cmpsl
add
fnop
rorl
int
adc
inc
xor
sub
ljmp
dec
rcrl
jmp
mov
pushf
xchg
dec
lds
jg
inc
add
or
lret
mov
xor
in
and
in
dec
clc
add
pop
add
lcall
jne
jo
sahf
pop
mov
xchg
div
jbe
pop
adc
jmp
fcomip
cmp
xchg
mov
int3
lods
loopne
sub
inc
js
cld
jmp
test
jl
push
push
popa
lock
adc
incl
aas
lahf
aad
les
jbe
mov
pop
sbb
jmp
popa
shlb
clc
decl
mull
out
fwait
leave
ja
outsb
sbb
sub
into
ljmp
aam
ja
out
lret
iret
clc
sub
outsl
mov
push
mov
pop
cmpsl
jl
cld
incl
mov
push
mov
jg
jne
adc
jecxz
mov
dec
xor
dec
decl
fiadds
and
stos
jmp
push
stc
stos
iret
js
inc
adc
decl
scas
xor
sete
test
mov
mov
add
xor
sub
decl
ljmp
jae
dec
xchg
mov
cmc
dec
mull
jle
lcall
fstpt
sarl
cmp
std
bound
int3
repnz
xchg
fstps
mov
insb
push
test
jp
out
pusha
and
push
jg
in
xor
mov
testb
stos
pop
aam
aaa
aas
mov
sti
popf
repnz
pop
arpl
incl
xchg
push
sti
jb
jp
xchg
sub
dec
fbstp
xor
inc
inc
popa
sub
in
inc
cld
decl
mov
lds
add
lds
insl
cmpsl
test
test
ljmp
or
repnz
push
ss
or
add
inc
rcll
pop
dec
cmpsb
pop
outsb
add
mov
xor
push
ja
out
cmpsl
icebp
jmp
xorb
mov
xor
sahf
jb
xchg
outsb
pop
mov
clc
scas
cli
decl
lcall
ret
mov
inc
jmp
std
ja
fsubrs
out
lods
outsb
push
sbb
inc
je
inc
ljmp
call
fcmovu
adc
imul
add
loope
jp
cltd
sbb
fisttpl
mov
sarl
cmp
lcall
xchg
adc
leave
icebp
iret
or
in
and
rol
dec
lcall
cmp
jmp
addr16
or
xor
jmp
cmp
icebp
pushf
stos
sbb
cs
inc
in
ret
xor
mov
lods
adc
push
jmp
insb
test
mov
arpl
in
push
adc
mov
stc
packsswb
add
dec
cmp
cmp
daa
test
add
ja
jno
cld
faddl
into
pop
push
and
cmp
fistps
cld
incb
adc
stos
sbb
cmp
mov
je
inc
push
sub
jg
movsb
xlat
mov
add
cmp
push
mov
mov
cmc
addr16
inc
fisubl
das
lock
icebp
addb
xor
pop
sahf
imul
xchg
incl
sbb
ror
push
lret
mov
popf
adc
adc
ljmp
cmpsb
incl
mov
data16
and
in
mov
push
cmp
mov
pushl
cmpsb
push
mov
out
fnstcw
xor
xchg
adc
rorb
mov
lcall
and
stc
loopne
jnp
js
push
sub
dec
or
iret
and
daa
outsl
ljmp
sbb
imul
int3
jmp
jmp
idivb
cmpsb
lock
dec
add
and
push
pop
call
adc
mov
outsb
icebp
dec
aad
pop
cmpsl
notl
push
mov
int3
lahf
scas
fucom
cmp
mov
jmp
icebp
jecxz
in
inc
and
jb
cmp
push
test
pop
mov
decl
aam
jl
decb
cli
cs
cmp
out
mov
orb
lahf
mov
incl
mov
or
and
xchg
or
scas
addr16
push
inc
pop
sub
stos
xchg
xchg
ljmp
pop
in
add
out
es
jg
cmp
push
or
cmpsl
jge
shrl
lcall
cmpsb
xchg
hlt
mov
sub
es
in
movl
mov
ljmp
xor
mov
int
push
aaa
sbb
loopne
pop
test
shl
sbb
decl
mov
shll
xchg
out
adc
out
iret
subb
sti
pop
dec
push
ja
cmp
cli
stc
xchg
das
add
rorl
sub
shl
dec
dec
popf
jae
int
jmp
xchg
scas
call
jno
jg
dec
mov
mov
pop
mov
jp
mov
lret
xchg
xchg
and
xor
jmp
cmc
sub
test
and
int
and
mov
lock
shr
inc
call
sbb
rcll
test
test
aas
sbb
jnp
test
hlt
andb
cmp
lret
arpl
imul
pushl
idivb
jo
fimull
or
imul
jbe
or
sbb
jmp
arpl
aaa
add
push
xchg
sub
cmpsb
jne
fdiv
add
dec
mov
call
jl
rep
sbb
mov
loopne
gs
sub
and
sbb
nop
sbb
out
in
call
stc
fnstcw
adcb
sbb
inc
jle
stos
inc
pop
jle
jbe
mov
cwtl
mov
mov
push
inc
cld
adc
frstor
icebp
or
mov
hlt
dec
xchg
mov
add
nop
jbe
mov
xchg
cmp
ret
sbb
lock
in
mov
test
fildl
fisubl
cli
add
push
stos
dec
cmp
iret
xchg
dec
sbb
mov
jmp
ljmp
or
sub
cltd
or
iret
andl
fwait
add
xchg
cltd
push
lds
lcall
loopne
rcrl
xor
mov
out
adc
add
adc
cmp
push
lahf
call
pop
aas
push
jge
popf
out
mov
call
push
inc
mov
mov
movsl
mov
or
mov
sti
mov
and
adc
das
pop
and
scas
decl
flds
add
push
mov
mov
psrld
call
cs
stos
imul
add
fwait
pop
mov
xorl
lods
test
arpl
jmp
cmp
data16
ret
dec
dec
cltd
call
mov
push
test
fs
incl
and
je
push
inc
sbb
test
sbb
mov
ljmp
vorps
shll
dec
xchg
cmp
sarl
enter
pop
mov
std
xchg
xchg
mov
lret
mov
aam
adc
jmp
bound
jno
das
xchg
pop
jecxz
mov
lds
push
mull
dec
dec
scas
test
dec
or
jae
icebp
mov
mov
cmc
test
outsl
or
iret
adc
sub
call
sub
loop
jecxz
aam
call
pop
rcll
aad
inc
or
int3
cmc
js
cltd
pop
add
sub
int
push
dec
inc
pushf
mov
int
sub
mov
or
sbb
loopne
insl
lds
xchg
add
mov
pop
dec
adc
call
loopne
sbb
xor
inc
test
movb
decl
mov
andb
xchg
adc
mov
sub
dec
lcall
cvtps2pd
inc
and
xchg
cmp
lds
push
int
repz
fcomps
ret
jmp
ljmp
cltd
fwait
movsb
mov
xor
test
cmp
lcall
jp
xlat
sub
fs
sbb
popf
subl
fmull
pushl
lods
sahf
sbb
fidivrs
les
ret
add
xor
mov
rcr
call
adc
popf
movsl
das
push
mov
mov
xor
fcomip
aaa
fs
push
pushf
mov
repnz
leave
add
xchg
ds
fisttps
iret
lret
push
std
cmp
loope
imul
push
sub
mov
sbb
cli
mov
shl
lcall
mov
dec
cmp
scas
push
push
mov
imul
mov
push
dec
repnz
jg
jae
mov
ret
insb
xchg
shl
cltd
test
notl
inc
push
inc
inc
xor
fnstsw
hlt
mov
mov
mov
test
ljmp
sub
push
mov
push
lcall
xchg
inc
cmp
and
call
mov
arpl
cmp
cmpsb
cli
insl
cmp
jmp
add
or
cli
push
or
inc
int3
xchg
fdivrs
mov
pusha
pop
ss
push
inc
lods
cmp
lss
punpcklbw
push
jb
out
int
sbb
aas
mov
jo
lcall
test
ljmp
adc
in
aaa
rcl
gs
ret
rcll
dec
add
ret
aas
ret
cmp
cmp
xchg
xchg
mov
dec
cmp
fadd
xchg
test
cmp
mov
lods
push
pushl
clc
inc
rcr
push
pushl
addr16
inc
push
xchg
mov
adc
lcall
mov
adc
mov
arpl
mov
or
loope
and
imulb
and
call
cltd
push
inc
movsb
push
lds
lods
jp
cmp
fcoms
jne
add
pushf
cmp
inc
sarl
add
sub
inc
sbb
inc
into
dec
stos
xchg
xchg
mov
fmuls
fwait
pop
or
jg
jo
pop
cltd
add
or
push
aam
dec
jmp
push
mov
fisubrs
xchg
mov
xor
ret
test
fnsave
scas
or
fwait
lods
loope
jbe
ret
inc
sbb
dec
jmp
mov
and
arpl
lcall
fldl
pop
sub
dec
xchg
add
mov
icebp
adc
cmpsl
pop
ret
jo
dec
repnz
lds
dec
jp
decl
cmpsb
dec
fscale
aaa
stc
into
adc
sbb
je
add
sbb
decl
out
stos
pop
stos
push
or
pop
pop
repz
in
xchg
lret
jb
imul
ljmp
loopne
mov
popa
pop
aad
and
cmpl
adc
cmp
sar
call
nop
shl
fistl
test
sbb
cwtl
or
std
jg
cwtl
pop
and
push
or
rclb
fldl
lcall
pop
lcall
pop
out
inc
out
insb
adc
lock
popa
jl
sti
mov
test
decl
jbe
xchg
cwtl
push
ret
popa
mov
xchg
cmc
jg
shll
xchg
inc
mov
incl
push
dec
or
movq
pop
mov
and
jae
sbb
mov
out
inc
add
sub
mov
jo
sti
add
jno
or
pushf
or
jge
sbb
jae
dec
add
push
clc
test
in
pop
int3
and
hlt
jb
adc
int
sahf
ds
jae
mov
ljmp
cli
icebp
call
shl
fadd
repnz
mov
mov
outsl
decl
imul
jns
ret
inc
outsb
enter
mov
add
fimull
mov
lock
call
dec
ret
jmp
stos
mov
lret
mov
mov
fwait
or
mov
xchg
in
outsb
rolb
sub
test
push
xor
ljmp
jae
cmp
stc
add
repz
or
push
in
jb
jge
sbb
adc
and
mov
mov
das
inc
lcall
jmp
pop
push
push
cwtl
std
mov
xor
insb
movsl
mov
jg
xchg
sub
mov
shrb
loop
xchg
movsb
push
hlt
push
jb
mov
or
and
fs
jecxz
jp
clc
imul
sbb
mov
bound
call
pop
popl
mov
or
ret
adc
cmc
rorl
dec
mov
cmp
mov
adc
push
xchg
nop
scas
and
insb
jb
cmp
fdivs
pop
arpl
ljmp
sub
rcll
dec
fnstsw
add
int
xor
ljmp
andl
push
mov
or
mov
sti
js
mov
decl
cs
pop
sbbb
fdivs
inc
xchg
pushl
popa
xor
push
into
push
pushl
sbb
out
mov
es
mov
stc
nop
mov
jl
xchg
mov
incl
cmp
mov
sbb
sub
cmpsl
mov
mov
stc
xor
js
adc
cmp
movsl
xchg
or
mov
cs
sub
sahf
jae
sub
mov
jle
cmpsb
and
and
cmp
xchg
dec
add
dec
cli
sahf
pop
mov
xor
jmp
inc
xor
jo
pop
sub
movsb
outsl
inc
jno
jae
mov
aad
incl
adc
aam
rcrl
push
pushf
repnz
sub
lahf
lret
add
aas
ret
inc
insb
enter
call
sarb
xchg
ds
or
inc
stos
lcall
mov
jle
push
push
pushl
lods
in
rcll
mov
repnz
xchg
fwait
mov
rorb
decl
and
fistl
xor
clc
or
out
popf
push
push
mov
shrb
adc
call
lahf
hlt
and
outsb
addb
fistpl
decl
clc
mov
lods
sbbl
adc
ds
sub
sti
cli
cmp
fwait
setns
ljmp
xor
and
movsb
loop
jno
in
rcll
mov
ja
pushl
push
lods
jmp
mov
push
and
loopne
ljmp
push
fs
aad
push
cmp
cmp
dec
push
xchg
sahf
cmpb
mov
mov
inc
pop
dec
stc
decl
sti
test
jmp
lods
sub
inc
xor
sub
mov
pop
imul
lcall
mov
dec
je
popf
push
dec
imul
cli
rol
mov
fisubrs
out
jnp
in
push
cld
daa
insl
aaa
mov
insb
cld
call
xlat
pop
pop
aam
in
out
jns
test
fnstcw
jge
movsl
push
sub
call
or
push
xor
fbld
aam
sbb
incl
or
popf
ret
mov
cli
mov
inc
xchg
outsl
in
mov
int3
mov
loopnew
push
push
call
loopne
adc
and
insl
xor
mov
fneni(8087
fwait
andb
adc
or
scas
push
mov
pushl
sub
mov
and
scas
mov
jae
bound
loop
inc
decl
xor
movsl
pushf
stc
push
jge
jns
mov
rorl
rclb
pushl
popf
xor
je
jns
scas
mov
shll
jo
fsubrl
mov
push
mov
ljmp
pop
scas
and
outsl
pop
pop
and
jbe
xchg
loopne
sti
cltd
mov
fisubrl
dec
inc
imul
pop
jmp
mov
fists
jg
jge
xor
icebp
ud0
mov
mov
nop
or
pop
fisubrs
sbb
incl
and
ror
pop
xor
and
mov
mov
push
hlt
mov
xchg
or
mov
jns
insl
mov
ljmp
add
pop
test
roll
repnz
rcll
xchg
outsb
jne
or
shr
popf
sbb
incl
mov
cli
outsl
stc
sar
and
stc
dec
mov
or
out
sahf
xor
or
ljmp
xlat
popf
mov
stc
push
in
inc
adc
jmp
aaa
and
outsl
inc
push
push
cwtl
movsb
fsubrl
sahf
imul
pop
ja
lret
nopl
fcomp
les
ljmp
call
mov
dec
push
mov
dec
test
pop
pop
cltd
jae
dec
push
pop
gs
clc
mov
iret
pop
sahf
cmpsl
mov
mov
fdivp
add
push
push
jg
iret
dec
mov
or
packuswb
pop
cmp
gs
ja
mov
sbb
push
add
jmp
call
xchg
movsb
xchg
and
shrl
xchg
add
pusha
divb
fbld
xchg
cmp
pop
add
dec
adc
jl
mov
sub
jp
pop
adc
movsb
arpl
mov
pop
mov
call
outsb
mov
in
cmp
fs
push
and
xor
inc
dec
mov
test
push
xchg
jge
shll
add
dec
mov
fisubs
lods
push
mov
sub
ljmp
stc
fidivrs
mov
dec
cmp
push
out
push
and
adc
add
int3
cmp
dec
andl
stos
movsb
mov
std
incl
add
lcall
cli
je
sub
and
add
jne
cmpsl
xchg
das
sub
cmp
mov
pop
out
adc
rcrl
shl
lods
lods
xchg
lea
movsb
cmp
sbb
dec
cmpsb
mov
incl
in
aam
or
sbb
sub
out
test
jnp
fwait
jmp
sbb
hlt
lock
ja
cmc
jae
or
aas
shlb
jns
movsl
out
ljmp
inc
xlat
arpl
cmp
cmp
mov
insl
lahf
adc
in
mov
mov
call
jno
pop
cmp
mov
mov
cmp
jo
fstpl
nop
fs
sbb
les
rclb
and
mov
cmpsl
dec
push
dec
jbe
insl
xchg
sbb
cmp
jmp
imul
push
jb
xchg
jo
pop
enter
jecxz
daa
daa
mov
lcall
outsl
cmpsb
sub
pop
lahf
stos
dec
out
mov
fisubl
adc
add
ljmp
dec
push
xor
or
in
inc
ljmp
cli
std
cli
out
push
cmp
pop
push
stos
cmc
ret
ja
cmp
aad
cmp
adc
fs
xor
push
ljmp
sbb
or
lds
in
and
or
pop
ds
aas
pop
push
mov
xchg
stos
sub
add
push
test
xor
lods
fldt
gs
mov
add
ds
aaa
push
dec
aad
sbb
and
add
lods
add
jg
inc
and
shl
fsub
out
sbb
mov
outsl
rcll
jg
xchg
cmp
jno
and
or
add
xchg
gs
loopne
cwtl
sar
mov
les
movsb
xor
shll
lods
test
push
cmpsb
in
enter
fcomps
jnp
jg
or
push
cwtl
test
repz
jmp
or
into
mov
sub
sbb
in
lcall
ja
adcb
mov
mov
mov
sub
mov
insb
adc
xchg
mov
push
push
adc
jg
call
pop
xchg
mov
icebp
sub
test
lahf
push
cmc
ret
ja
cmp
and
movsl
mov
aaa
jmp
fisubs
inc
js
sub
incl
dec
jmp
out
and
mov
cmp
daa
mov
cmpl
les
es
outsb
or
cmpsb
aas
hlt
pop
adc
and
adc
dec
clc
call
aaa
aad
fcmovnb
cmp
mov
imul
cmp
repnz
test
outsl
shlb
cmpsl
stos
jp
clc
fwait
xchg
aam
mov
call
in
jmp
and
popl
adc
mov
lcall
xchg
mov
push
cwtl
and
cmc
xor
sti
mov
or
jo
call
dec
mov
incl
ds
int3
xor
wbinvd
rorl
cmpsl
out
and
ss
mov
xchg
add
cmp
cmpl
jno
cmpsb
adc
insb
sub
enter
ds
pushl
rorb
pop
pop
repz
xorl
ljmp
cli
fisttpl
xchg
push
scas
cld
dec
pop
jns
dec
std
jmp
pop
inc
cmp
lock
mov
cld
mov
fcmovnb
xchg
pop
or
dec
sti
adc
mov
dec
out
test
pushl
push
pop
mov
sub
pop
or
push
jbe
and
out
fistps
jmp
decl
jmp
or
pop
std
test
adc
or
call
dec
and
ss
mov
sub
lods
inc
adc
movsl
inc
out
out
fcmovb
add
lcall
inc
fcmovu
adc
mov
int3
xor
xchg
mov
cmp
xor
mov
mov
aam
xchg
pusha
jbe
sub
movsl
sahf
mov
push
insb
fidivs
add
stos
fisttpll
push
jmp
mov
sub
push
fcompl
sti
rcrb
into
push
add
jb
shr
xor
inc
jp
int
cmp
add
ljmp
addr16
xchg
fdivl
jmp
stos
ja
clc
push
scas
nop
pusha
jle
dec
enter
jmp
or
xlat
jae
xor
mov
ljmp
pushl
push
outsl
push
imul
dec
mov
pop
arpl
ret
dec
sub
inc
pop
adc
jle
sub
push
inc
mov
pop
mov
shlb
dec
subb
incl
arpl
push
xchg
outsl
xchg
add
in
push
sbb
and
test
mov
cmpsb
test
lock
rcll
or
jmp
sub
adcb
sbb
jp
aaa
and
or
call
dec
in
lock
mov
sub
sub
pop
call
lret
test
jo
movsb
emms
int3
inc
mov
in
pop
mov
jmp
pushl
sbb
dec
mov
push
shrl
imul
jns
call
fistpl
mov
fisubs
xor
jno
jp
pop
iret
adc
push
call
icebp
dec
test
jmp
outsl
into
pop
sub
int3
pop
pop
dec
fbstp
cmpsl
jle
cmp
test
lcall
insl
jae
and
lret
popf
ret
je
out
loop
incl
xchg
sub
lock
pop
enter
sub
fldt
cmc
sub
arpl
xor
stos
mov
rcrb
lcall
lret
xchg
add
adc
jp
movsb
aaa
push
pop
inc
rep
sub
xchg
popf
call
mov
push
cwtl
lods
imulb
add
jge
ds
ret
lods
lods
mov
push
push
cmp
aaa
jecxz
daa
cmovg
mov
outsb
sub
pop
jo
push
xor
fisttps
test
inc
xchg
sub
or
outsl
add
scas
stos
cld
movl
mov
cmp
adc
in
mov
push
mov
int3
test
test
jmp
call
mov
cmp
leave
push
int3
add
cli
add
lcall
or
jmp
xchg
shr
pop
ret
ljmp
jecxz
add
push
mov
rcll
jbe
jnp
jecxz
pop
std
movsb
pop
aad
mov
add
imul
incl
and
sub
xor
adc
cld
or
lods
pop
or
mov
pushl
lock
fwait
jecxz
add
clc
jae
mov
ljmp
je
inc
xlat
lret
dec
mov
sbb
sbb
adc
sbb
adc
je
or
mov
hlt
mov
jmp
lds
out
push
es
insb
int3
mov
das
clc
dec
data16
push
jmp
xor
jne
xchg
cld
mov
xchg
call
pop
and
lods
inc
pop
icebp
out
mov
push
or
lcall
xor
pusha
xor
inc
je
incl
ds
clc
fs
cmp
cld
jmp
xchg
lock
testl
fdivr
jg
or
leave
sbb
mov
jnp
jne
adc
xchg
pop
icebp
call
stos
jnp
mov
xor
push
jmp
sub
sbb
inc
mov
popf
aad
call
push
push
enter
xor
jbe
neg
pop
mov
adc
imull
pushl
das
xchg
xchg
pop
add
in
jb
sbb
icebp
fsub
pop
aam
mov
mov
incl
int3
pop
insb
mov
or
cltd
nop
arpl
or
mov
mov
fs
push
lds
sti
popf
fsubl
pusha
std
push
popa
fs
jmp
or
sbb
cmp
sub
loop
cmc
ja
push
dec
sbb
popa
decl
inc
dec
test
adc
mov
or
inc
mov
int3
lds
incb
jmp
dec
or
sarl
rcll
sub
xor
sbb
mov
hlt
loope
fstp
inc
imul
and
call
add
jmp
jg
fcompl
ja
xlat
es
fwait
bound
mov
inc
inc
cmpsl
fmuls
dec
pushl
fsubr
mov
xor
xor
sub
out
ja
push
cmp
lcall
fisttps
pop
rcrl
xlat
dec
das
lret
std
shlb
add
pushl
sub
push
adc
jmp
pop
mov
adc
jnp
sub
mov
adc
xor
pop
adc
fidivs
gs
pop
imul
push
loope
pop
jmp
push
dec
or
add
rorb
std
jg
in
andl
enter
and
dec
adc
mov
rolb
push
pushl
ficoms
push
mov
or
sub
ljmp
jno
pop
xchg
inc
sub
sub
add
or
rol
insb
mov
sub
sub
lock
sub
insl
out
jmp
jg
jbe
mov
mov
cmpsl
int
inc
mov
mov
jmp
push
xchg
jl
mov
int
in
stos
in
sub
movsb
mov
dec
fs
call
decl
add
sahf
xchg
adc
fidivl
fcmovnu
adc
movsl
push
mov
sub
loop
mov
jnp
outsl
xchg
dec
movsl
xchg
and
cmp
or
mov
daa
adcb
int
or
pop
sar
sbb
inc
adc
sbb
jecxz
clc
sahf
aaa
mov
lahf
push
pusha
pushf
loope
jnp
or
and
jnp
nop
mov
loopne
fdivr
aaa
adc
xchg
fcoml
add
inc
jbe
sub
mov
gs
decl
pop
test
mov
arpl
xor
ljmp
cli
loopne
xchg
in
inc
addps
test
mov
fsub
les
shrl
or
jnp
push
icebp
pushl
adc
cs
sub
jmp
pop
dec
pop
sti
loope
push
lock
pop
xchg
mov
incl
push
sbb
adc
push
sub
jl
jecxz
nop
lahf
push
mov
and
aaa
pop
xor
loop
pop
adc
fnstsw
jno
ljmp
xchg
or
dec
xlat
rorl
ja
lcall
fcompl
movsb
divl
sbb
cmp
cld
jbe
frstor
movsb
movsb
dec
adcb
incl
cmp
mov
xor
sbbb
rclb
lcall
js
leave
sbb
lea
iret
repz
dec
push
fistpl
js
repnz
cltd
mov
lcall
sti
adc
sbb
insb
nop
ds
ljmp
add
lcall
cmpb
inc
aad
xor
addr16
fimull
mov
pushl
mov
adc
push
sbb
sbb
jecxz
ret
cmpsb
hlt
in
lahf
outsl
call
mov
dec
cmp
cmp
xlat
push
aaa
out
adc
or
cmpsb
out
pxor
ljmp
sub
or
pop
cmpsl
adc
sbb
push
and
scas
lahf
jp
lock
xchg
inc
cld
push
mov
ljmp
decb
clc
addr16
nop
sub
lret
es
and
pop
cs
mov
mov
pushl
jge
scas
or
shl
aad
aaa
cmp
inc
jmp
push
lahf
or
mov
dec
pop
push
cli
ljmp
pop
dec
adc
adc
xor
dec
mov
xor
roll
sub
out
out
mov
das
jbe
jl
call
jb
add
jge
fwait
and
dec
mov
lea
lcall
loope
ja
lahf
sub
movsb
hlt
mov
push
fcomps
xor
mov
decl
mov
xchg
push
cmpsb
lret
lea
js
sbb
pop
jl
push
aam
popf
pop
lods
jnp
xor
das
xchg
lock
xchg
push
sub
xchg
dec
inc
pop
icebp
call
mov
imul
inc
inc
inc
popa
in
testb
clc
pop
mov
jg
push
jl
pop
out
shlb
and
andb
rcl
sbb
jmp
lods
sbb
or
aad
adc
sbb
jno
mov
stc
pop
das
cli
decl
cmp
cs
shr
popf
cwtl
jne
sbb
pop
mov
and
adc
inc
pop
les
push
pop
xlat
ds
fisttps
pusha
xchg
fistps
jle
testl
cmp
ljmp
jg
mov
adc
adcb
mov
jb
jp
mov
clc
out
sub
je
movsl
adc
lock
jbe
rorb
and
inc
xchg
dec
enter
pop
push
rol
cmp
lock
pop
xchg
jle
push
or
ja
arpl
sbb
sbb
stc
arpl
push
jmp
mov
push
or
stos
mov
add
adc
pop
ficoml
dec
pop
inc
ret
mov
fsubrl
jle
xchg
fnstsw
jge
mov
pusha
mov
rolb
mov
inc
fbld
jno
in
in
jnp
inc
xor
xchg
or
cli
or
add
data16
nop
inc
xor
cmc
mov
xchg
jmp
and
mov
frstor
mov
adc
sub
pop
push
flds
movsl
lcall
loopne
cmp
xor
mov
lds
cmc
lods
movsb
cmp
mov
je
data16
push
xor
outsl
ljmp
sbb
rep
in
aas
jo
addr16
adc
dec
sti
lods
push
or
ja
mov
outsl
cli
decl
out
idiv
cld
dec
or
xor
pop
iret
inc
and
mov
adc
lcall
inc
jno
lods
lea
xor
push
pop
btr
jg
sbb
mov
in
movsb
pop
pop
sbb
fwait
divl
lcall
pop
mov
jecxz
dec
sbbl
cmp
or
mov
lcall
lahf
jb
sub
mov
push
addr16
xchg
je
jp
jp
jl
sub
pushl
mov
imul
xchg
sub
inc
jae
icebp
jecxz
call
loopne
push
xor
outsb
push
dec
xchg
push
ud1
rcrl
clc
or
mov
decb
sbb
xor
jl
add
jge
lods
mov
inc
inc
mov
jle
pop
arpl
mov
mov
mov
addb
mov
cmpsb
mov
mov
gs
or
sbb
js
cmp
insb
jmp
pushl
outsb
nop
arpl
sub
jmp
in
and
push
lods
cltd
fbld
inc
jb
aam
inc
pop
push
leave
out
test
mov
push
xchg
test
dec
daa
ljmp
mov
mov
lock
lret
loopne
out
mov
inc
call
loope
mov
lds
outsb
xchg
clc
mov
lret
lcall
pushf
mov
decl
xor
lock
ret
sahf
or
pop
push
inc
data16
xor
pop
call
or
sti
aad
sbb
adc
push
add
pop
in
les
and
lcall
stos
test
or
in
xchg
pop
leave
aas
xchg
outsl
insl
sbb
insb
add
pushl
sub
mov
mov
shll
lods
add
test
dec
daa
cmpb
jmp
push
popl
aaa
jns
push
push
pop
sbb
push
jmp
sub
test
mov
xchg
sar
adc
adc
sbb
cltd
jle
jmp
movsl
pop
fucomi
loope
out
mov
sahf
fsts
push
outsb
jne
stc
inc
repz
cmp
mov
pop
cmp
add
aam
setno
pop
pop
mov
mov
dec
pop
insl
aas
int
mov
gs
mov
jmp
lret
pushf
shl
push
stos
fisubrs
fwait
mov
cs
orb
push
mov
fcomip
ljmp
or
fmul
dec
out
mov
mov
stc
cli
in
das
rcrl
insb
pop
cld
decl
push
fistpl
dec
cmp
lcall
movsl
out
aam
out
jmp
cmpsb
repz
pop
mov
sbb
jle
dec
movsb
div
and
std
out
jo
jb
arpl
jmp
cmp
arpl
mov
sahf
pop
out
das
popa
enter
jge
inc
mov
aad
push
add
incl
push
in
fwait
std
pop
pop
cmpsl
cmp
mov
inc
and
mov
incl
ja
lahf
cmp
xchg
jge
in
cmpsb
movsb
call
sub
xchg
cmpsb
inc
adc
incl
push
adc
sbb
lock
dec
push
adc
fmull
call
ljmp
or
fistpll
stc
xor
int
mov
scas
imul
hlt
mov
sub
call
fsubrs
stos
jo
movl
dec
cltd
mov
cmpsl
leave
mov
cld
cmpl
aaa
cld
cmpsb
cmp
xchg
push
ja
aam
xlat
in
push
test
jle
or
incb
mov
push
test
stos
rcrb
aaa
dec
or
stc
clc
data16
adc
mov
aaa
add
fwait
call
out
cmp
xor
aam
ds
loopne
xchg
mov
mov
pop
jle
or
inc
dec
xor
and
notb
pop
sarl
mov
dec
ret
xor
xchg
lds
ss
movsl
or
cld
ljmp
shrl
js
sub
mov
push
imul
and
lcall
push
adc
scas
sbb
cli
fstpt
xchg
loope
adc
xchg
push
lret
or
inc
gs
ljmp
xor
leave
mov
dec
pop
aam
test
les
xchg
enter
xchg
inc
outsb
lods
ret
int3
cltd
aaa
jg
daa
xchg
dec
push
mov
push
sub
lcall
jo
mov
dec
loope
mov
int
xor
add
movsl
test
pop
mov
nop
sbb
test
int
stos
lcall
lcall
mov
fiaddl
es
inc
add
jmp
push
cli
or
ret
incl
push
stos
mov
jnp
fwait
outsb
xchg
jecxz
inc
addr16
push
and
imul
push
das
mov
jbe
xchg
add
clc
adcb
jl
data16
outsb
inc
ret
movsl
adc
jl
adc
sub
dec
ss
mov
and
xchg
aad
pop
cmc
ljmp
out
mov
dec
hlt
fbld
outsb
and
jmp
mov
xchg
scas
dec
in
sbb
and
pop
les
inc
pushf
mov
scas
fimuls
xor
push
pop
insl
mov
in
sub
imul
dec
outsl
repnz
jecxz
sbb
call
xchg
mov
push
sahf
push
jmp
lock
jmp
sub
add
cmp
loopne
or
in
hlt
nop
adc
cmp
movsb
jo
pop
xchg
mov
cmp
mov
fistps
fcoms
inc
popa
sub
cltd
push
lcall
ret
iret
cmpsb
shrb
lahf
and
mov
psubd
mull
rolb
add
scas
add
xor
rorl
add
scas
pop
sub
inc
mov
xchg
and
add
ljmp
nop
mov
xchg
les
es
pop
lea
pop
and
out
mov
scas
jle
dec
in
xor
pusha
or
jp
fisttps
and
ljmp
cmp
dec
pop
insb
sub
ss
xchg
xchg
in
pop
dec
jmp
ficoml
push
add
sti
data16
jg
nop
pop
pop
fs
insb
push
outsb
mov
insl
mov
stos
sti
jae
fisttpll
xchg
lea
int3
add
ja
pop
adc
inc
test
and
ljmp
stos
push
sbb
gs
insl
movsb
sbb
xor
hlt
loope
call
repnz
mov
out
push
outsb
out
jecxz
add
decl
jne
leave
sbb
popa
sbbb
dec
and
popa
dec
in
jae
xorl
sbb
cmp
incl
mov
inc
push
int
or
icebp
ds
jbe
in
mov
dec
popf
xchg
into
sbb
fwait
loope
movsb
push
mov
or
push
fs
gs
push
adc
sub
cld
adc
lock
mov
xor
loope
stos
jns
jecxz
into
das
fnsave
and
out
pop
cmp
cmp
icebp
decl
hlt
notl
pop
cmp
ja
dec
in
lret
in
add
sbb
pushl
jno
mov
shrl
jecxz
or
out
mov
aaa
jbe
outsb
push
add
aas
jns
xor
push
mov
addl
gs
stos
lahf
mov
lcall
cli
mov
hlt
in
sbb
cs
movsb
mov
cmp
pop
je
test
lahf
sbb
jmp
or
xchg
jp
pushf
mov
filds
mov
std
pcmpgtb
push
dec
out
adcb
fcoms
push
cmp
arpl
test
sbb
sub
pusha
scas
mov
shll
xor
pop
and
sti
fcmove
movsl
fcom
popa
xchg
ss
jno
jns
push
push
fs
pop
lret
hlt
jp
fdivp
inc
add
adc
jnp
mov
dec
das
push
pop
lcall
inc
loop
push
sti
cmp
xchg
jl
adc
loopne
cltd
decl
jl
xor
mov
fnclex
ficompl
push
aaa
pop
jp
loope
jg
test
pusha
xchg
rcrl
pop
xor
dec
mov
scas
pop
lods
mov
cld
inc
mov
out
or
out
mov
and
js
pop
dec
shlb
jmp
pushf
cld
adc
std
jecxz
push
lret
xlat
add
outsl
dec
push
lcall
call
arpl
adc
and
or
cltd
nop
out
mov
jmp
sar
lcall
cmp
and
jmp
roll
push
mov
outsl
inc
je
sub
aaa
or
outsb
push
dec
clc
add
sub
or
and
lds
mov
test
clc
scas
repz
das
pop
ljmp
ljmp
cld
or
addr16
sbb
mull
push
xor
je
adc
lret
jmp
incl
fdivr
mov
xor
call
out
xchg
push
cmp
dec
mov
call
mov
mov
movsl
lea
mov
ljmp
or
loop
pop
sbb
arpl
decl
fwait
cmp
in
aas
mov
add
lret
cwtl
dec
leave
add
add
aam
cltd
sbb
cld
xor
gs
fisubs
aaa
std
fists
out
inc
push
je
ret
lods
ja
stc
jns
cltd
cmp
es
lret
mov
rcrb
mov
or
xor
test
jo
add
addl
movsl
ljmp
lret
jp
push
ss
pop
adc
dec
mov
inc
std
mov
in
inc
pop
divl
pop
movsb
jns
test
neg
mov
push
shlb
fisttps
shlb
lret
insb
negb
jg
test
mov
and
sarl
clc
adc
push
rorl
jle
cld
sub
andl
fcomip
pushl
jb
shl
inc
mov
test
popa
and
jl
xchg
dec
inc
mov
decl
mov
dec
lds
leave
adcb
fimull
pop
mov
lcall
cld
cmp
mov
dec
add
inc
jns
sahf
xchg
repnz
adc
jge
jo
out
es
lcall
jp
add
data16
in
scas
stc
push
pop
adc
imul
int
cmp
jnp
loope
mov
inc
jl
in
test
mov
push
add
push
mov
sub
hlt
mov
and
ljmp
xor
mov
xor
push
mov
int
insl
dec
jg
call
lock
repnz
jle
or
outsb
add
aaa
xchg
loop
jle
adc
sahf
xchg
inc
test
pop
dec
mov
insl
mov
jg
mov
push
push
xchg
aaa
sahf
mov
mov
push
pop
xchg
pop
push
push
jno
sar
ljmp
adc
dec
sub
clc
mov
sahf
fmuls
mov
int3
push
jmp
add
jge
pop
mov
lea
mov
out
out
cmp
inc
push
icebp
lcall
les
addr16
and
sbb
rolb
sbb
dec
xlat
int
adc
adc
sub
lret
jp
testl
lcall
repnz
sbb
test
loopne
andl
mov
xlat
push
fstpt
xor
ljmp
push
jae
jno
push
xor
jne
dec
xor
fidivl
and
inc
ljmp
mov
pop
ja
adc
das
or
std
xchg
lock
gs
arpl
aam
push
inc
inc
out
cld
movsb
int
dec
xchg
ret
aas
cmp
xchg
mov
frstor
sarb
mov
test
hlt
jmp
adc
cmpsb
jns
lock
shrl
pop
lcall
cmp
dec
shll
jo
pop
ror
icebp
xor
dec
fistl
inc
dec
xchg
ret
push
jle
addl
push
and
mov
mov
clc
ljmp
sbbb
mov
sti
jo
sbb
aaa
adc
pusha
lods
mov
xchg
mov
ljmp
mov
std
in
adc
sub
push
xor
mov
aas
scas
and
inc
dec
adc
mov
ja
mov
std
scas
adc
pop
or
adc
push
std
ljmp
sbb
dec
and
scas
or
jg
call
faddp
xchg
es
cmpb
pop
lods
push
int3
aas
ja
cmp
jecxz
stos
dec
sbb
push
xor
bsf
mov
ret
sub
decl
or
lret
clc
adc
sti
mov
sbb
or
lock
mov
incl
or
movsb
xchg
fcom
or
aas
cs
mov
pushf
fisubl
fisubs
push
aas
incl
shll
out
fnstcw
cmpsl
push
sbb
mov
call
pop
aaa
xchg
in
jmp
xchg
push
adc
cld
push
push
lods
mov
lahf
mov
lcall
arpl
es
shll
sbb
loop
mov
movsl
popl
fwait
sbb
call
xchg
adc
jle
sub
lods
cltd
add
jmp
push
rorl
ljmp
test
movsb
sbb
lods
push
or
dec
mov
in
fidivs
xchg
push
jae
mov
es
movsl
incl
pop
mov
enter
xchg
popf
jg
xchg
add
out
lea
mov
add
pushl
and
repz
lea
add
cmp
fiaddl
or
push
test
aas
test
jmp
add
decl
bound
out
cmpsb
test
lock
ret
push
pop
sti
call
jnp
dec
stos
xchg
mov
mov
mov
jo
add
test
ljmp
dec
adc
jnp
rcrl
insb
test
dec
xchg
mov
push
push
and
js
mov
sub
shl
inc
dec
mov
cmpsb
negb
outsb
mov
xor
adc
incl
jns
jns
stos
xor
das
into
xor
xchg
outsl
push
mov
jl
jle
inc
dec
call
xchg
jnp
and
ret
pushf
adc
dec
je
mov
sbb
mov
xchg
jno
mov
or
rol
fucomp
push
ja
cwtl
filds
std
lcall
xchg
pop
cs
jbe
rcl
scas
mov
inc
mov
xor
outsb
out
data16
inc
ret
icebp
bound
push
movsl
add
lret
scas
mov
fcomip
push
add
dec
and
rcrb
cmovbe
inc
jmp
xor
jmp
jle
xchg
jmp
mov
insl
shll
mov
sbb
inc
cmpsb
sbb
das
scas
pop
push
nop
mov
adc
adc
into
add
push
mov
mov
aam
popf
insb
incl
cmp
sahf
orb
mov
pop
sbb
adcb
call
sub
ja
outsl
subb
sub
fwait
mov
jmp
int3
mov
call
inc
inc
inc
jmp
push
lds
lret
mov
inc
jbe
mov
mov
mov
push
mov
xchg
aas
mov
sbb
decl
cmc
jecxz
mov
jle
pop
and
cli
push
orb
jg
xor
inc
dec
jecxz
sar
push
out
std
or
adcl
test
push
mov
pop
cmp
jl
packuswb
clc
jb
or
addr16
int3
shrb
mov
add
pop
sub
inc
gs
pop
stc
lcall
pushl
sub
jno
sti
movsl
in
xchg
pop
push
pop
fstps
lds
mov
loope
test
pushl
pop
icebp
leave
jnp
subb
pop
xor
cs
movsb
or
rolb
sub
jg
push
inc
add
out
adc
or
ret
imul
in
mov
jmp
lret
jge
mov
add
pop
test
xchg
push
push
clc
dec
push
jbe
add
cld
pushl
pop
sbb
imul
jp
outsb
pop
arpl
stos
fcomip
leave
xchg
popf
iret
mov
push
dec
test
das
xlat
add
cmp
cli
ljmp
lret
hlt
mov
stos
mov
in
mov
mov
ljmp
push
and
pushf
and
pop
sbb
loope
push
bound
cmp
fists
aas
inc
pop
or
mov
mov
ficomps
ret
inc
mov
sti
push
std
xchg
sub
imul
sbb
imul
iret
or
lcall
jno
shll
outsl
mov
into
sub
fbstp
call
add
mov
lahf
adc
test
pushf
sahf
fcmovbe
sub
sahf
call
fs
pushl
jge
hlt
push
movsb
mov
mov
adc
inc
pop
push
xor
mov
xchg
cmp
mov
mov
dec
shlb
outsl
and
jb
xor
mov
rorb
repnz
testb
lret
das
cmp
out
adc
add
push
arpl
ja
push
test
imul
xchg
mov
push
int
scas
cmp
cmpsl
test
mov
loope
decl
mov
shlb
mov
sbb
cmpsb
push
in
movq
das
fdivs
pop
shlb
dec
add
ret
sti
std
call
addr16
cmp
loope
mov
adc
in
fmull
mov
cmp
inc
sub
fcoml
decl
mov
clc
es
xchg
mov
push
je
mov
or
pop
movb
jo
mov
test
aaa
pop
mov
scas
repz
repnz
addr16
jl
add
inc
shlb
push
cmpsl
sub
bound
or
fstps
call
fdivrp
mov
xchg
inc
jno
test
lahf
lret
mov
call
mov
sbb
ud2
mov
setg
js
adc
incl
dec
ljmp
pop
jmp
or
fstpl
mov
mov
incl
cld
jmp
xchg
aam
in
xchg
loope
lods
aam
adc
jo
cmp
sub
ret
pop
into
push
sbb
mov
maskmovq
divl
push
fst
decl
cmp
loop
xchg
mov
inc
mov
cmp
stc
pop
lret
cli
in
sbb
mov
mov
notb
jmp
jo
movsb
into
jmp
loope
imul
push
mov
outsb
dec
jle
mov
push
hlt
ljmp
rcrl
sub
and
add
test
insb
lcall
lret
mov
push
call
les
out
clc
shlb
stc
xor
out
fidivrl
out
cli
fsubp
stc
test
xor
call
xorl
or
pop
popa
out
mov
jmp
int3
jle
orb
mov
jle
push
lret
roll
xchg
xchg
add
std
ljmp
lds
mov
repnz
rcrb
sbb
aam
incl
xchg
lea
enter
cmp
incb
cwtl
inc
pop
enter
incl
stos
cli
sbb
jp
fcmovu
add
adc
sti
jne
inc
push
cltd
je
add
adc
lcall
repz
jbe
or
sbb
ds
fwait
push
jle
or
adc
mov
movl
sar
push
ja
daa
dec
push
jmp
dec
sbb
std
ds
pop
cwtl
fcmovnu
mov
dec
dec
aas
int3
jg
mov
test
inc
out
ja
pop
add
pop
xchg
mov
jg
or
sti
jecxz
inc
dec
nop
pop
insl
add
push
jmp
dec
push
xchg
dec
jnp
scas
clc
jg
inc
pop
nop
icebp
add
daa
mov
or
xor
pop
mov
inc
ja
jle
mov
xchg
ds
xchg
xchg
mov
pop
cmp
add
aaa
dec
loope
or
outsb
cmp
out
xchg
hlt
fnstenv
push
fwait
inc
pop
or
fidivl
pushl
push
cltd
cmp
jno
or
inc
inc
enter
sub
pop
rorb
rorl
std
lcall
sub
out
xchg
cmpsb
and
adc
lds
lods
fld
testl
pusha
adc
call
sbb
icebp
adc
xchg
add
enter
aad
xchg
xchg
push
mov
jmp
cmpsb
mov
and
mov
adc
popf
or
mov
fistl
sahf
rol
add
push
std
ss
jmp
mov
rcll
dec
xchg
test
repz
loop
mov
fbstp
xchg
add
mov
dec
mov
inc
add
xchg
daa
and
lds
shr
jo
jmp
xchg
dec
mov
jg
aam
xchg
push
or
int3
pop
mov
mov
xlat
test
shrb
aam
lods
jg
lret
push
and
xchg
shl
sahf
mov
adc
rol
test
cmp
xchg
cmc
cltd
fidivrs
mov
add
popf
lcall
or
decl
or
and
fs
popa
xchg
or
push
dec
test
lcall
test
outsl
lahf
aad
int3
add
int3
and
mov
cmp
mov
call
repz
jge
cmpsb
xchg
je
jp
push
dec
jnp
inc
add
lret
dec
gs
lahf
into
and
gs
jbe
fcmove
push
popf
push
movsl
lods
nop
cmc
incl
push
mov
and
mov
add
sub
lea
out
push
mov
pop
outsl
sbb
jmp
push
out
cli
cmpsb
pop
mov
and
inc
lods
inc
shr
dec
xchg
leave
sbb
push
mov
xchg
inc
nop
xor
shr
dec
int3
fdivl
dec
shlb
dec
imul
loope
sbb
mov
inc
out
cmpsl
mov
push
jp
pop
cltd
sub
inc
cli
push
fisttpll
pusha
jg
xchg
mov
pop
lods
ds
iret
fildll
repnz
xor
cmp
movsb
fs
mov
cmp
loope
xorl
cmpsb
cmp
test
xor
out
mov
pushl
std
mov
incl
dec
jmp
add
mov
out
dec
jmp
jg
shlb
inc
ja
imul
push
mov
xchg
mov
push
testl
orl
xchg
cmp
pop
add
push
sbb
mov
fs
mov
arpl
ljmp
push
std
inc
mov
or
push
and
xor
dec
dec
jmp
jg
or
arpl
shr
loope
mov
xchg
jb
pop
icebp
cmp
leave
out
and
int3
sbb
hlt
sbb
cmc
repnz
inc
hlt
movsl
fucomi
cmp
scas
adc
mov
mov
int
loope
xchg
shll
and
cwtl
mov
popa
xchg
cmpsb
repz
mov
fsubrp
jge
mov
out
cli
lcall
filds
out
push
outsb
mov
test
cmpsl
adc
in
fldenv
fs
jmp
cs
jmp
jl
cld
inc
jo
pop
rclb
shrb
adc
push
xchg
shlb
lcall
aas
xchg
dec
mov
or
mov
outsb
imul
enter
call
or
sahf
int
jg
cmpl
mov
jnp
test
sbb
aaa
or
and
ljmp
mov
and
int3
jnp
push
dec
mov
xchg
imul
clc
data16
pushl
lods
ja
bound
shrb
outsl
out
jbe
and
lods
add
stc
ljmp
or
dec
imul
jp
mulb
push
dec
sbb
add
mov
inc
mov
push
adc
fisttps
mov
lock
ja
or
mov
push
int
and
mov
call
dec
mov
out
out
cmp
test
ss
inc
dec
stos
js
loop
fiadds
pop
in
inc
fstps
jg
ret
mov
push
sbb
jo
sahf
inc
cltd
fwait
cli
pop
jl
bound
and
sbb
push
pushl
clc
sub
lods
data16
test
enter
cld
outsl
cli
repnz
jae
out
lcall
pshufw
test
shll
decl
mov
push
mov
cmpb
sub
push
push
push
pmaddwd
pop
int
pop
mov
call
mov
xor
in
xchg
pop
adc
sti
dec
ja
outsb
mov
dec
decl
sbb
push
push
cmp
test
mov
incl
cwtl
pop
push
mov
sub
xor
jl
decl
inc
insl
mov
out
test
inc
push
into
out
xchg
xchg
dec
xor
cmc
mov
mov
scas
and
xchg
dec
dec
movsb
adc
sti
decl
pop
xor
pop
xchg
push
jge
sbb
xor
push
ljmp
icebp
pop
repz
pushl
fsubr
les
mov
in
punpcklbw
subl
pop
ljmp
adc
scas
cmp
imul
outsl
incl
add
mov
dec
hlt
sub
inc
add
jle
cmpsb
dec
cwtl
shrb
fisttps
dec
sub
iret
push
or
mov
xlat
sub
cwtl
mov
add
jg
lcall
in
sub
sub
jbe
sub
lahf
les
mov
mov
pop
std
decl
and
insl
xchg
pop
mov
inc
lods
enter
shrb
adc
mov
das
pop
cwtl
push
iret
stos
ficompl
stos
movsl
pop
in
mov
int3
leave
push
jmp
xchg
xor
add
gs
push
inc
les
outsb
imul
mov
clc
pushl
jl
stos
data16
add
fmulp
cli
fimuls
sahf
loope
add
incl
mov
enter
or
adc
inc
inc
cli
xlat
sub
cli
cmc
movsb
pushl
jmp
sub
xchg
enter
lcall
test
call
push
mov
call
sub
cmp
mov
inc
adc
xor
jae
ret
jecxz
sbb
pop
outsb
icebp
xor
add
xor
lcall
sbb
mov
roll
ret
jno
fsubs
jmp
adc
xchg
sahf
loop
fiaddl
sub
sbbb
mov
out
lret
jg
ljmp
dec
test
mov
cmc
mov
aaa
test
adc
xchg
movsb
stos
shll
mov
pop
lcall
xor
xorb
xchg
pop
inc
xchg
stos
data16
addr16
ljmp
fstl
xchg
cli
fwait
imul
stos
push
lock
mov
ljmp
clc
cmpl
mov
loope
arpl
inc
in
sub
push
add
cmp
or
insl
dec
push
js
bnd
xor
xchg
les
jg
xchg
adc
push
enter
stos
xor
negw
xchg
jecxz
push
cmp
xchg
mov
dec
or
call
sbb
jp
pop
jno
xor
jnp
lahf
cli
inc
lock
jle
and
aam
jle
inc
inc
jge
jns
lret
xchg
push
inc
or
push
inc
ljmp
ss
test
sub
aad
ljmp
add
insb
add
fistpll
imul
xchg
xor
test
int
cmp
cmpsl
jmp
ja
mov
outsb
loopne
imul
loopne
push
fwait
dec
bnd
push
xor
or
cmpsl
incl
cld
in
loopne
addr16
out
jp
xchg
mov
pop
rol
mov
mov
xchg
push
push
das
loope
cmp
mov
pop
and
idiv
jmp
daa
xchg
pusha
lods
cmc
cmp
mov
mov
push
add
not
mov
rcl
xchg
fiadds
cmp
incl
data16
fmul
js
movb
dec
or
push
and
je
ljmp
call
adc
sub
jl
add
es
out
dec
sub
out
mov
inc
mov
or
mov
pop
pop
stos
push
cmpsl
repz
xchg
push
jne
mov
jmp
inc
dec
shlb
jne
outsb
pop
push
leave
insb
push
and
mov
xchg
cmpsl
subl
add
movsb
mov
pusha
cli
ret
xchg
outsb
addr16
repz
pushl
xor
pushl
negl
mov
push
nop
push
mov
imul
je
outsb
scas
pop
decb
dec
testl
sarb
push
mov
int
pushf
fisttpl
mov
cltd
stos
sbb
fbstp
pop
mov
dec
loopne
movsb
dec
sub
lea
mov
mov
aas
or
push
xchg
in
loopne
lock
and
fucom
out
inc
lods
in
test
cmp
dec
leave
outsb
xchg
jge
lcall
adc
test
sahf
sbb
sub
sbb
mov
mov
imul
out
mov
inc
xchg
test
into
mov
and
pushl
pushf
dec
push
jns
mov
fistl
shlb
fidivrs
mov
cmp
push
call
mov
pop
mov
pop
or
mov
movsl
clc
push
cli
test
out
lcall
mov
sbb
es
jecxz
fcoml
test
imulb
movsl
sbb
ljmp
xor
add
or
push
xchg
xchg
mov
imulb
into
and
dec
mov
xchg
mov
lock
mov
pop
push
and
xchg
sbb
rclb
push
xchg
cwtl
jb
fcompl
jo
sub
mov
pop
mov
pop
cli
ds
stos
jns
and
dec
mov
out
xor
or
popf
cmpsb
cmpsl
xchg
inc
arpl
mov
jno
aas
mov
sar
int
mov
mov
jmp
fdivrs
push
out
push
cltd
leave
cmp
xchg
sbb
fcomip
lock
insb
cmp
inc
dec
push
pop
jo
in
ljmp
scas
and
cmp
insb
lods
outsl
ljmp
mov
sarl
das
movsl
movsl
ds
sbb
push
or
or
add
jne
xor
call
xor
and
fucomip
pop
out
pop
mov
cmp
inc
inc
shl
jo
adc
arpl
sub
loop
leave
leave
mov
call
push
dec
jne
xor
push
clc
xor
lahf
stc
or
rcl
das
mov
jns
pushf
push
jmp
cltd
pop
mov
mov
orb
addr16
pop
lock
mov
out
movsb
call
lock
ja
das
repz
andl
out
mov
mov
cli
pop
dec
cmp
xor
fiaddl
subl
push
xor
pushl
aam
mov
push
fstpt
std
or
and
ljmp
jne
mov
mov
pop
and
out
jae
loopne
fsts
shlb
mov
out
inc
mov
mov
stos
push
loopne
cmp
in
adc
or
das
or
cld
cmpsb
lds
and
sub
pop
inc
stc
jmp
inc
in
js
or
xchg
movl
pushl
fcomps
rcll
xchg
in
roll
pop
scas
push
xlat
adc
lock
iret
or
fwait
or
scas
xor
push
mov
sub
or
pusha
mov
cmp
pop
and
lcall
or
icebp
sub
mov
or
or
icebp
push
ljmp
jecxz
rcrl
jp
sbb
jb
arpl
cmpsb
inc
xchg
sub
icebp
cld
filds
inc
jge
flds
inc
repnz
adc
andl
out
dec
xor
call
clc
cs
sub
sbb
mov
xor
and
or
adc
xor
mov
mov
mov
aam
pop
adc
adc
ss
dec
or
mov
push
es
mov
movsl
cmp
movsb
jmp
push
jo
mov
es
push
ret
mov
andb
dec
inc
xor
in
inc
hlt
dec
add
push
out
lock
call
or
mov
imul
in
iret
add
stc
out
jge
cmc
popa
push
jbe
xlat
cltd
outsb
mov
fnstcw
xlat
nop
sub
xor
or
int
dec
dec
add
lcall
cmp
movsl
mov
jle
cmp
nop
in
or
lods
hlt
xlat
jns
jg
or
push
xchg
fisubs
adc
xchg
jg
lods
movsl
adc
mov
sub
in
roll
ret
pop
sar
ljmp
mov
dec
rcll
xchg
bound
xor
pop
ja
jmp
or
fbstp
fisubrl
jae
push
mov
out
jg
aad
movsl
int
xlat
shrb
push
inc
stos
mov
mov
inc
cli
stos
je
mov
pop
icebp
pushl
xchg
mov
in
pop
call
adc
sti
fbld
cmp
loop
insb
or
stos
pop
fildl
pusha
mov
mov
ss
rcll
inc
mov
or
fcmovbe
jg
xchg
popf
xchg
incl
stos
mov
js
sub
ds
test
cld
cwtl
popf
sar
decb
vcvtpd2dqy
imulb
aaa
cld
call
mov
and
lea
push
cld
inc
mov
pop
test
enter
call
int
es
loopne
add
bound
mov
decl
int
mov
xor
flds
jecxz
push
insl
inc
sbbl
xlat
jg
jle
test
push
jp
xlat
jg
adc
cmpsb
insl
stos
fiaddl
sar
call
cmp
movsb
mov
pop
in
pop
cmpsl
and
dec
loop
mov
jmp
call
pusha
jns
xor
push
dec
sub
jmp
jno
dec
sti
inc
je
mov
fwait
stos
popa
or
dec
std
inc
push
inc
ret
mov
aaa
jmp
sbb
xor
mov
jns
and
xchg
clc
sub
dec
fidivrl
sbb
subb
add
mov
jge
lock
mov
push
inc
mov
adc
sbb
repnz
push
cld
jne
int
xlat
pushl
ss
dec
mov
and
popf
push
in
cmovno
mov
clc
adc
lret
add
loop
push
add
incl
mov
jns
ja
imul
adc
adc
mov
add
mov
jg
andb
jne
sbb
outsl
push
xchg
mov
and
inc
nop
inc
insl
inc
mov
pop
jp
fs
sub
outsl
xor
mov
cmpl
xchg
dec
call
mov
shlb
inc
cmc
jns
mov
pop
shrl
outsl
dec
and
loopne
imul
outsl
incl
fs
mov
push
cs
adc
outsb
ss
pop
push
or
das
push
cs
fiaddl
pop
hlt
in
lods
aam
mov
jg
add
inc
dec
bound
pop
imul
push
subl
xor
or
pop
ret
ljmp
movsl
push
and
dec
into
lods
daa
mov
dec
pop
inc
add
lret
lods
push
xchg
or
fs
pushl
outsb
outsl
sbb
xchg
sub
dec
sub
data16
cli
lcall
mov
cmpl
call
add
push
mov
ret
lcall
movsl
dec
pop
pushf
sub
or
test
call
std
call
xchg
outsb
xor
outsb
repz
or
sub
imul
enter
inc
sbb
jge
call
adc
mov
xor
xlat
call
lcall
lcall
mov
mov
cmp
lock
add
jg
xchg
and
xchg
jmp
cmpsb
sar
ljmp
in
adc
dec
push
insb
xchg
scas
push
sub
sbb
out
arpl
stos
inc
xchg
into
lds
add
fcomip
push
adc
les
jo
andb
or
out
mov
hlt
call
lret
stos
push
jmp
mov
bound
cli
std
pop
inc
shrl
xchg
sahf
xchg
test
lcall
js
jb
adc
es
mov
scas
dec
fwait
jl
movsl
jnp
cmc
sub
pop
push
cli
dec
pushl
or
inc
xchg
ss
adc
ljmp
pushl
inc
inc
je
into
dec
lcall
repz
or
jns
adcb
lds
add
fcom
in
daa
imul
cltd
rcrl
xchg
je
pop
mov
test
mov
jg
mov
rclb
dec
xchg
jmp
and
ljmp
xchg
dec
jae
dec
adc
adc
pushl
in
push
nop
inc
adc
lcall
adc
and
cltd
xchg
in
mov
adc
sbb
decl
test
jge
ret
addr16
xor
pop
fistps
les
std
scas
cmp
push
mov
pop
inc
mov
sbbb
or
stos
xor
jmp
sti
sub
sub
out
lcall
pop
cmp
hlt
sbbb
cmc
fisubs
inc
jle
inc
add
push
push
pushl
xor
cld
adc
push
into
add
mov
mov
ds
or
add
decl
popa
fcoml
mov
push
dec
mov
dec
insb
out
xchg
scas
gs
popa
popf
xchg
sar
outsl
cli
lahf
push
cltd
shrb
xchg
lock
adc
movsl
lcall
ljmp
mov
cmp
shrl
std
icebp
sbb
pop
mov
inc
call
sbb
ja
mov
lahf
enter
jae
ljmp
mov
data16
out
inc
outsl
or
stos
jb
fisubrs
mov
mov
push
dec
popa
aas
mov
cs
das
je
call
push
add
mov
rorl
roll
shll
test
aaa
sahf
push
inc
dec
inc
loopne
inc
cmpl
push
mov
xchg
dec
pop
lea
subl
cld
ljmp
adc
xor
test
jb
jbe
in
inc
sub
imul
adcb
cmp
les
dec
test
decl
inc
inc
mov
push
fs
push
mov
adc
call
push
pop
iret
cs
inc
scas
call
outsl
repnz
leave
xchg
iret
iret
test
out
fldenv
push
ljmp
push
jle
repz
cmp
fimuls
jmp
cmp
sti
push
mov
lcall
int
imull
in
inc
in
mov
jnp
xchg
jecxz
cmp
in
inc
inc
push
orl
mov
bound
cmp
inc
and
mov
mov
aam
cmp
sti
out
mov
decl
rol
jne
cld
jmp
popf
add
sahf
xor
cmp
add
jg
hlt
push
mov
inc
add
ljmp
push
cmp
popf
jl
add
les
pushl
push
out
sbbl
jle
cltd
shll
idiv
mov
adc
shlb
xor
mov
xchg
mov
lcall
mov
mov
fstps
aaa
or
scas
push
pusha
mov
test
sbb
dec
and
inc
mov
sbb
pop
add
mov
add
add
xchg
aam
inc
cmpsl
cli
in
mov
cwtl
mov
ja
jns
xor
xchg
daa
cmp
movsb
or
aam
cmpsb
ljmp
push
push
sarb
push
pop
add
lods
pop
test
loop
jp
flds
out
mov
fisttpll
dec
mov
stc
mov
shrl
shl
add
les
cmp
jmp
mov
xor
rorb
cmpsl
pushl
les
push
or
jns
movsb
sbb
hlt
into
xor
subl
cs
test
lods
cld
rorl
test
mov
mov
cs
pushl
or
push
pusha
push
mov
repnz
push
sti
test
pushf
pop
xchg
movsl
xor
decl
je
fiadds
inc
dec
pop
fiadds
and
jmp
ja
dec
mulb
call
mov
and
cmc
mov
sub
inc
orl
push
std
ljmp
gs
inc
and
xor
pop
popf
lds
je
stos
out
ja
dec
unpckhps
xchg
jb
ljmp
testl
cmp
mov
pushl
jnp
popf
and
add
mov
js
mov
mov
bound
mov
jmp
jmp
pushl
or
ljmp
xchg
icebp
or
cld
pop
dec
in
sbb
ljmp
mov
stos
adc
aas
das
and
xor
xadd
jnp
pushf
mov
add
decl
call
xor
lods
adc
frstor
cltd
cmp
pop
mov
stos
fcmovu
in
popa
mov
cltd
add
xor
xchg
cmpsl
call
xchg
or
sub
xlat
dec
or
orb
inc
and
les
sarl
lock
jmp
pop
adc
add
outsb
or
bound
call
inc
cmp
popa
lcall
push
or
test
fwait
xchg
aam
cmp
pushl
into
push
adc
adc
lods
movsl
pop
out
icebp
ret
jne
ja
xor
ljmp
xchg
aam
in
dec
sub
gs
movsb
mov
sbb
into
int3
pop
and
lods
ljmp
fiaddl
add
rorl
jne
sahf
push
sbb
pop
jecxz
jmp
mov
push
or
cmpsb
test
mov
subb
mov
scas
repnz
test
pop
adc
cmp
fnstcw
ror
mov
mov
xor
mov
inc
sub
inc
push
imul
jns
leave
sbb
idiv
lcall
bound
orb
outsb
and
mov
in
loopne
push
stos
clc
std
pushl
adc
out
loope
dec
mov
inc
sub
mov
movsl
inc
repz
inc
sbb
mov
loopne
fsts
push
pop
fwait
arpl
icebp
adc
jp
pop
pop
jl
sahf
or
or
das
inc
mov
shrb
lods
clc
sbb
ja
mov
add
push
lock
fisubs
dec
fdiv
clc
mov
insb
cmpsl
test
inc
cmp
ljmp
mov
jl
scas
and
push
daa
js
and
data16
and
inc
into
sar
call
dec
push
adc
aad
and
jl
push
dec
cld
outsl
clc
jg
or
lcall
xchg
enter
push
decl
xchg
add
or
repnz
pop
push
or
aad
sarl
decl
jg
push
aaa
cmp
inc
rcll
ja
addb
mov
inc
movsl
xacquire
adc
jbe
outsl
and
pushl
aas
arpl
imul
or
sub
pop
cli
ljmp
adc
cmp
adc
mov
sub
sbb
push
mov
fs
xchg
call
xchg
pop
push
scas
cmc
sub
hlt
xor
lret
inc
mov
filds
mov
inc
cmp
ljmp
test
fs
mov
sbb
mov
pop
call
add
adc
mov
xchg
pusha
in
repnz
cmpsb
sbb
fwait
dec
and
in
xchg
call
push
das
out
sub
mov
jg
aaa
jecxz,pn
call
sub
mov
iret
xchg
mov
cltd
fmuls
and
pop
icebp
lock
dec
push
sub
mov
call
xchg
cltd
movsl
int
outsl
mov
cli
decl
gs
cbtw
cmp
aam
js
mov
mov
or
adcl
pop
push
nop
lods
aad
rcrl
in
push
pop
hlt
pop
mov
pop
mov
lock
dec
daa
mov
mov
clc
incl
mov
inc
fistpl
shl
sahf
repnz
orl
ljmp
sub
nop
imul
cmp
xchg
push
loop
shll
cld
push
dec
outsl
jg
call
hlt
stc
adc
sub
aad
inc
pop
sbb
loope
repz
cli
incl
fidivrl
daa
bswap
and
push
add
cli
or
ljmp
sbb
mov
mov
dec
add
jmp
cltd
adc
aam
jmp
fdivs
lock
pop
sub
arpl
xor
add
stc
aad
ret
scas
sti
jmp
adc
ret
or
data16
fwait
loopne
mov
mov
and
jg
mov
hlt
ficoms
in
dec
pop
inc
dec
sub
ds
mov
lods
sub
stc
push
add
xchg
loope
fcmovnu
cmp
js
call
arpl
push
lods
fstpl
les
push
cmp
fs
cmpsl
fisttps
mov
adc
notl
xor
and
gs
push
ljmp
test
add
subl
adc
pop
mov
adc
decl
sub
push
or
imul
ljmp
or
std
mov
add
add
ret
pop
bound
jb
decl
sti
cld
inc
cltd
push
mov
jle
push
sarb
stc
fmuls
shl
mov
loop
pushl
and
pop
jmp
fs
lea
adc
shll
std
aaa
sti
and
jg
push
mov
arpl
sbb
cwtl
jmp
test
mov
in
dec
lret
xor
ret
mov
push
push
push
sarl
sub
add
mov
xchg
ljmp
adc
cmp
pop
cmpsl
cli
enter
or
das
jae
scas
push
mov
mov
outsl
fdivr
or
gs
dec
repnz
pop
jmp
loop
mov
iret
pop
add
adc
arpl
in
int3
scas
cli
mov
mov
fld
sbb
test
cmp
test
jnp
cmp
add
mov
les
pop
xchg
jo
insl
pop
inc
gs
push
aas
jmp
xchg
out
dec
lock
mov
jge
ret
test
lahf
mov
jge
mov
sti
stos
push
lcall
push
cs
inc
jp
pop
mov
movsl
iret
pop
pop
gs
push
dec
xor
jb
and
lea
lret
mov
roll
cld
pop
or
pop
loopne
mov
push
cmpsl
jmp
sub
clc
dec
mov
xchg
sbb
jl
insl
mov
cmpsl
roll
pop
sub
adc
cwtl
inc
xchg
lods
or
data16
fcomip
call
xchg
dec
addr16
mov
mov
add
or
into
pop
je
push
and
xchg
popf
push
js
js
sbb
hlt
call
push
dec
adcb
arpl
mov
or
mov
pusha
cmpsl
mov
iret
sbb
push
push
pop
icebp
ja
scas
sbb
push
mov
sbb
clc
jne
or
aas
mov
inc
adc
mov
mov
sbb
mov
pop
lock
inc
adc
popa
ret
dec
and
or
and
call
jae
dec
jo
or
mov
movsb
mov
fldl
sbb
pop
imul
inc
xchg
or
fisubs
test
push
mov
iret
jo
dec
insb
dec
les
dec
push
dec
lcall
push
test
in
test
insb
or
loop
incl
or
pusha
test
xchg
call
sti
sub
ljmp
mov
int3
pop
dec
or
dec
mov
add
lret
outsb
xchg
adc
or
pop
add
popf
leave
push
push
daa
xchg
cld
call
dec
aas
sub
inc
jne
sahf
ljmp
scas
sub
push
mov
sub
call
cld
cli
push
sarb
jmp
jno
push
lods
inc
popf
mov
arpl
cmp
test
jg
adc
mov
mov
out
insl
lahf
xor
xor
call
daa
jb
pop
or
sahf
adc
clc
jp
jbe
xor
or
je
push
jnp
stc
shr
cmc
xchg
mov
jmp
xchg
sub
fisttps
sbb
out
std
push
dec
stc
pop
pop
xlat
xor
pushl
jbe
mov
enter
out
jl
jp
push
or
add
test
cltd
lret
gs
jmp
daa
cmp
cmc
test
push
clc
mov
jmp
ret
cld
ljmp
mov
cmc
dec
clc
dec
cmpsb
pop
mov
xlat
adc
mov
cmp
rcrl
mov
nop
push
sub
jmp
sub
push
fbstp
mov
repnz
push
mov
push
mov
das
mov
loopne
decl
in
dec
int3
lods
negb
loop
xchg
imul
fsubrs
cmp
jmp
inc
insb
and
and
sbb
sbb
out
pushf
pusha
and
pop
or
xor
movsb
cmp
jmp
fimuls
out
cwtl
cmp
ss
mov
xchg
cli
push
rol
mov
add
push
lcall
pop
jne
mov
cli
mov
xchg
pushl
leave
dec
fldl
inc
testb
aad
pop
dec
adc
jo
pop
aaa
and
in
decl
inc
add
out
or
mov
adc
addr16
test
inc
cmpl
adc
ds
jnp
xchg
adc
push
xchg
sbb
lea
lcall
jmp
popa
fstpt
leave
jmp
loop
mov
sbb
in
int3
ds
lahf
cmc
jmp
lret
and
jb
adc
fsubl
stc
cmp
inc
fisttps
mov
aaa
js
or
add
fmull
jae
xchg
push
xor
cld
incl
inc
bound
pushf
sub
sub
icebp
loopne
idiv
outsl
and
pusha
jl
lcall
jne
push
jb
in
mov
push
jmp
lahf
jl
pop
lret
xchg
jb
loop
shr
repnz
jmp
pop
cmp
std
cmpsb
fildll
dec
push
inc
sti
dec
dec
mov
testb
dec
pop
decb
xchg
jbe
mov
aas
aad
adc
repnz
dec
aaa
call
push
ljmp
lahf
pop
insl
andl
mov
mov
clc
adc
repnz
enter
lcall
sbb
adc
addb
jno
imull
pushl
rclb
out
mov
std
inc
or
sahf
imul
xor
repz
jg
stc
and
sbb
outsl
cmpsb
icebp
mov
xor
lea
push
mov
in
push
and
in
mov
push
dec
jno
fcmovne
outsl
push
int
pop
push
dec
fcoms
pushf
rol
cld
mov
imul
add
lock
or
mov
in
in
cmp
inc
loope
arpl
stos
es
loopne
fwait
ljmp
pop
fwait
xchg
pop
xor
filds
mov
lods
inc
ljmp
mov
jmp
sahf
inc
mov
dec
sbb
clc
rcll
call
add
sbb
sahf
repnz
and
mov
scas
lahf
test
js
xor
cmpsb
movsl
decl
test
xchg
or
sbb
jns
jno
inc
and
sbb
add
mov
shlb
and
cltd
shll
mov
cmp
scas
incl
xchg
adc
mov
movsl
fs
fnstenv
subb
mov
jmp
mov
lock
fiaddl
in
pop
push
inc
fwait
out
jecxz
push
std
pop
in
xchg
pop
xor
roll
adc
push
lret
loopne
dec
in
sub
cmpsb
xor
jae
add
inc
test
pop
repnz
sub
and
lcall
add
or
ficompl
mov
fs
shll
popf
cs
test
das
out
cmp
bound
test
push
jmp
test
adc
jmp
lods
gs
lcall
stos
insl
push
sbbb
clc
test
imulb
cmp
sub
mov
stc
shrb
lock
and
xchg
add
sbbb
xchg
fstps
mov
adc
fisubl
pop
adcb
fwait
negb
cmp
std
cmp
std
call
xor
adc
jb
daa
mov
sahf
dec
cmp
mov
mov
mov
jno
dec
loopne
sub
insb
mov
fnsave
fcoml
imul
sub
xor
xor
dec
mov
mov
xchg
mov
mov
add
push
stc
push
xchg
into
push
adc
aaa
cmp
cld
cld
xor
mov
jmp
mov
jbe
imul
stos
adc
pop
push
adc
jae
mov
das
add
ret
outsl
cli
in
into
lcall
shlb
cmc
add
fcoml
mov
arpl
out
cmp
sub
and
data16
call
sti
cmp
push
lock
addr16
rcll
inc
ret
push
addr16
out
call
scas
rclb
fists
mov
inc
jge
mov
enter
dec
ret
ret
xchg
stos
push
or
mov
dec
rorb
inc
filds
std
add
test
pusha
pop
xlat
xchg
incl
dec
push
adcl
jecxz
or
xlat
jl,pn
cmpb
jmp
ss
lds
push
into
test
xchg
stc
mov
aam
or
sbb
jmp
xor
mov
push
cs
pop
lds
call
iret
jo
mov
and
cld
mov
push
pop
push
inc
cmp
adc
idiv
cmp
jge
es
out
add
add
test
mov
test
pushl
add
nop
fchs
js
outsl
sarb
jle
push
pushf
mov
fldcw
cld
ljmp
jle
mov
mov
or
fs
int
inc
push
gs
dec
lcall
aas
data16
movsb
enter
dec
adc
add
cmp
inc
xor
test
pop
cmc
xchg
jmp
sbb
adc
out
int3
jb
adc
sub
sub
and
mov
out
addr16
lods
incb
mov
lcall
ja
adc
and
in
ret
adc
insl
mov
pop
fimuls
decl
or
gs
les
sbb
sbb
lcall
insl
xlat
hlt
xchg
mov
lcall
test
aam
jb
mov
leave
mov
leave
jae
pop
cmp
fstl
and
enter
test
inc
and
mov
cmp
arpl
inc
jns
add
pop
cmpsb
lcall
fwait
out
rclb
ds
dec
pop
sbb
imul
and
mov
ret
ljmp
popa
cmp
ss
lock
or
or
mov
push
sub
push
push
lods
dec
mov
xor
pushf
xchg
test
or
adc
out
mov
ret
add
add
xchg
jae
xor
ljmp
fwait
stos
push
sub
shlb
orb
sbb
daa
enter
mov
push
std
pop
xchg
mov
loope
jg
ljmp
push
in
mov
add
les
xlat
leave
int
insl
sti
xor
hlt
adc
pop
cltd
inc
imul
jp
cmp
in
lods
cltd
test
stc
adc
or
enter
pop
mov
cmpsl
and
lcall
mov
movsb
ljmp
and
mov
xchg
add
lods
and
push
cli
call
add
push
jl
outsb
test
test
and
push
cwtl
pop
xchg
mov
adc
sub
sahf
and
out
out
setns
jmp
stos
pusha
lret
out
test
cmp
lcall
loop
addb
sbb
incl
xchg
pop
or
jmp
je
test
les
lahf
aaa
xchg
cltd
mov
incl
cmp
fidivrl
push
loope
mov
icebp
xchg
loope
xor
stos
fcomip
pop
inc
loope
fwait
call
push
xor
mov
fistps
or
addr16
or
aas
mov
jmp
add
and
xor
out
cli
aad
in
sbb
repnz
mov
sub
and
cmp
mov
add
pusha
arpl
pushf
out
xchg
jae
dec
nop
sbb
ja
or
negb
jmp
sub
jo
fs
leave
cmp
mov
pop
ror
xor
fsubrl
sub
push
cmpl
jg
outsb
addb
hlt
push
lret
xchg
xchg
dec
rclb
and
inc
add
add
lcall
add
insl
addb
xchg
mov
adc
ljmp
mov
das
inc
shrl
jl
pop
in
fsubrl
mov
sbb
pushl
sub
dec
outsl
adc
jge
mov
mov
jg
cmp
adc
jg
out
dec
pop
es
ja
fstpt
jmp
sub
jnp
sub
push
adc
ljmp
or
push
and
and
pop
cltd
popa
in
mov
mov
clc
decb
lds
xor
sbb
mov
ljmp
rcl
mov
test
xchg
inc
mov
movsl
adc
jg
aaa
dec
fstpl
outsb
adc
out
cmp
or
mov
fs
xchg
fs
repnz
loop
bound
push
or
ljmp
cmp
push
mov
jb
mov
jne
test
or
add
dec
outsb
adc
decl
and
push
out
or
dec
push
scas
test
xchg
mov
mov
popl
enter
inc
movl
add
pushl
mov
push
push
shrb
sbb
push
mov
rorb
push
call
int3
or
or
inc
add
ret
push
cltd
cmp
lcall
and
lcall
sahf
addr16
stc
stc
data16
subl
pop
mov
push
inc
or
incl
ljmp
add
cmc
mov
and
adc
into
push
mov
xor
xchg
mov
cltd
inc
fwait
or
out
decl
rclb
dec
push
or
inc
pop
not
dec
xor
mov
xchg
add
cmc
xlat
scas
jmp
data16
out
cmp
aad
jnp
adc
or
popf
dec
jecxz
addr16
push
cmp
xchg
inc
clc
incl
and
and
cmp
test
push
fs
insb
pop
inc
lahf
popl
inc
pop
cld
add
jb
mov
out
aaa
cltd
into
pop
push
shl
jne
dec
jmp
gs
jg
fsubs
cwtl
push
std
lods
shll
add
ds
add
fldl
call
mov
inc
dec
pushl
out
arpl
cwtl
or
mov
cmpsl
mov
ljmp
arpl
aad
int
adc
maskmovq
jg
xchg
in
mov
int
leave
adc
dec
mov
icebp
sti
into
jmp
stc
pop
test
call
imul
mov
inc
jne
xor
add
aaa
xchg
movsb
xchg
push
arpl
cld
lcall
das
sub
pop
and
pusha
jecxz
aam
popa
outsb
pop
loopne
jg
hlt
and
lods
sahf
pop
fcmovnb
pop
mov
js
jns
mov
div
dec
mov
sub
inc
adc
aam
jne
int3
mov
pop
mov
xchg
fisttpll
xchg
dec
mov
out
xchg
mov
xchg
mov
sub
adc
and
fsubs
lods
mov
push
cmpsl
mov
incl
jae
bound
pop
mov
std
lods
pop
xor
jge
lcall
sti
mov
data16
xor
add
sarl
mov
jno
inc
cmp
lahf
inc
fisttps
dec
mov
or
push
lcall
inc
push
mov
das
lods
adc
insl
repz
sbb
pusha
xor
pop
xchg
nop
jle
sbb
scas
cwtl
and
decl
mov
adc
sbb
ficomps
push
js
enter
lret
inc
mov
int3
push
notl
cmp
mov
pushl
sahf
in
jle
imul
into
sbb
inc
in
dec
loop
sti
repnz
lcall
jne
cli
adc
nop
or
ja
ss
ficomps
outsl
dec
inc
dec
or
lcall
xor
das
bnd
or
mov
insb
movsb
inc
sarb
scas
jecxz
icebp
cs
cmp
jle
test
mov
xchg
inc
es
mov
xchg
loope
mov
jmp
xor
cs
dec
jmp
sahf
mov
lds
icebp
call
jnp
adc
xor
decl
xchg
jno
subb
faddl
movsl
imul
pop
cld
sub
and
lcall
out
ds
jo
rclb
lods
xor
movzbl
sub
mov
push
icebp
decl
jns
movsb
out
movsl
lret
lods
jl
movl
addl
lcall
dec
sbb
pop
addr16
mov
ficomps
push
movsl
mov
lcall
stc
inc
dec
mov
jno
jae
lock
aam
pop
sbb
inc
push
lcall
inc
sbb
insl
mov
sbb
aam
add
push
ds
mov
lock
mov
lods
mov
sub
mov
fimull
test
inc
icebp
inc
mov
loope
fdivr
add
jg
in
and
dec
mov
loope
mov
pop
xchg
das
pop
insb
enter
into
hlt
cwtl
pushl
fwait
xor
fmul
sub
sub
mull
ds
mov
and
and
pop
incl
push
add
push
jb
cmp
sub
sahf
mov
ljmp
cwtl
mov
out
jmp
mov
inc
mov
test
lcall
push
pop
xchg
push
dec
push
cwtl
pop
pop
mov
jmp
std
sbb
xchg
addr16
incl
das
mov
adcb
js
fwait
and
aam
out
or
mov
das
or
mov
jle
aas
xchg
fdivr
pushl
adc
outsb
es
pusha
in
int3
sub
mov
xchg
push
jnp
out
pop
imul
pop
dec
or
sbb
xchg
push
or
inc
and
lcall
pop
mov
out
mov
out
mov
std
sbb
aam
ret
mov
test
pop
bound
pop
add
sti
cmp
inc
sub
mov
call
fisttpll
add
loope
mov
repz
out
fidivl
fisubl
imul
mov
data16
xor
add
decl
rorb
hlt
fucomip
mov
adc
xchg
mov
cmp
mov
mov
aas
mov
adc
and
push
dec
xor
add
fwait
jle
pushl
icebp
and
adc
imul
push
fsts
jmp
nop
ret
push
add
lods
fdivs
mov
push
mov
push
out
dec
jl
loop
xor
jge
testl
adc
pop
mov
rorb
or
scas
mov
add
pop
incl
out
mov
popl
lcall
ds
cld
arpl
mov
inc
sub
inc
sub
add
mov
inc
imul
dec
adc
les
xchg
test
and
jbe
call
cmp
test
movq
inc
hlt
jg
les
sar
testb
or
jmp
xchg
jmp
shlb
xor
addr16
pop
sbb
ljmp
or
psllw
pop
out
sbb
repnz
dec
or
subl
rorb
loopne
xor
movsb
sti
jne
rol
out
loop
call
sarl
push
loope
test
stc
push
sbb
and
pop
scas
jne
mov
aad
mov
movl
cmp
ds
loope
or
cwtl
ljmp
es
sbb
fcomps
dec
call
xchg
mov
sub
add
jecxz
decl
iret
xor
arpl
int
add
sbb
je
mov
jbe
mov
xor
jae
sbb
mov
sub
incl
rorl
mov
add
and
leave
mov
ds
lock
aaa
xlat
xlat
xorl
mov
adc
in
pop
std
and
or
repnz
sbb
jmp
sub
sub
sbb
fisttps
iret
pop
mov
cmp
ljmp
in
jo
test
mov
pop
mov
leave
mov
lds
adc
cmpsl
push
dec
sar
jo
pop
mov
or
sbb
cmc
pushl
and
pop
mov
call
xor
adc
int
xor
out
ljmp
xchg
rolb
gs
iret
push
pop
push
filds
lret
push
incl
into
sub
add
mov
push
push
rcll
aad
sahf
adc
sub
fimuls
mov
add
ffree
rcl
jno
xchg
sti
loop
pop
cmp
mov
ljmp
push
push
out
test
mov
cli
or
jno
das
and
pushl
pop
jg
sbbb
push
jbe
pusha
negl
mov
xchg
bound
sub
call
sbb
outsl
pusha
push
fidivs
cwtl
dec
jmp
sbb
and
push
or
loopne
stos
dec
add
insl
dec
jmp
jecxz
jg
call
jecxz
lods
lods
jmp
mov
push
fidivrl
sarb
or
cmp
decl
rcll
je
push
icebp
mov
notb
arpl
mov
add
test
ljmp
jecxz
test
dec
xchg
sub
lret
into
repz
cmpsb
add
jo
and
incl
fs
adc
mov
mov
push
sbb
fdivrs
add
jg
xchg
into
sbb
adc
jae
or
daa
cwtl
pop
mov
aas
pop
and
aas
in
adc
lret
sbb
mov
incl
xchg
dec
jmp
into
inc
xchg
movsb
and
lods
sbb
cli
cmc
pop
xor
push
ret
push
nopl
cmp
jmp
call
rcrb
push
imul
mov
inc
loop
rcll
enter
in
out
lea
lcall
xchg
scas
inc
push
pop
arpl
or
push
insl
out
push
pop
cmc
aaa
lock
xchg
incl
pushl
push
cmp
sub
adc
sbbb
inc
jmp
dec
clc
mov
mov
xlat
push
inc
cmc
inc
imul
scas
ljmp
inc
pop
lods
adc
in
leave
cwtl
sub
jle
insl
enter
movsl
jae
call
cld
lods
mov
lcall
loopne
or
rcl
mov
lock
lock
mov
idivl
ret
lahf
nop
ret
cmpsb
sahf
or
jns
ud0
decl
les
mov
jmp
sub
pop
cmpsb
mov
jecxz
xchg
pop
outsb
cli
das
dec
adc
jmp
push
ficompl
loopne
bound
cmpsb
les
inc
add
aas
aad
fbld
arpl
cmpb
ficoml
or
jp
xor
lea
xlat
jbe
fisubl
inc
es
add
dec
dec
lods
jl
jne
mov
aaa
dec
push
pop
subb
bound
sub
jmp
push
data16
fwait
ss
int
mov
in
popf
popa
xchg
dec
sub
mov
jmp
mov
mov
mov
pop
aad
stos
xchg
mov
pushf
lds
mov
hlt
cmp
insl
into
dec
insb
jg
aaa
std
jbe
xchg
movsl
outsb
mov
orb
call
into
and
int
testb
and
adc
add
loope
push
xchg
pusha
inc
scas
jle
jmp
push
pushf
mov
jg
roll
scas
or
push
cmp
ds
enter
adc
int
mov
lcall
pop
stos
arpl
push
ds
push
xchg
jl
xor
dec
out
out
push
cmp
out
pcmpgtw
mov
rorl
sbb
int
out
data16
hlt
cli
push
sub
cmpl
outsl
lods
repnz
inc
cli
ljmp
push
sub
mov
xchg
fcomip
jb
cltd
cmp
mov
pop
push
cs
sub
call
xor
push
scas
xchg
rcrb
xor
cmc
addl
mov
sub
jo
fwait
and
pushl
mov
jmp
sar
sub
leave
lock
jne
push
jecxz
push
decl
inc
jmp
mov
andb
jne
push
shl
push
sbb
dec
xchg
dec
lock
lcall
xor
test
out
shlb
dec
adc
mov
jge
sti
out
es
lret
popa
repnz
mov
or
add
call
mov
or
hlt
incl
sti
mov
push
and
clc
ljmp
in
cli
lret
cmp
incl
int3
enter
icebp
out
jns
lcall
out
or
shl
and
ljmp
stos
and
sar
cld
mov
lock
out
cwtl
push
sahf
push
xor
das
pop
lock
push
push
aad
jl
cmp
std
lods
lcall
or
push
cmp
add
pop
push
inc
mov
flds
push
lret
addb
aaa
sbb
lcall
lock
fwait
push
fs
repz
adc
mov
push
mov
jge
pushl
push
pop
sbb
sarl
xchg
iret
jbe
and
cmp
mov
dec
out
xchg
lahf
sbb
xor
jg
cmp
flds
leave
pop
out
incl
out
xchg
pop
iret
adc
les
xchg
push
push
mov
call
inc
dec
ljmp
push
push
jge
ficoms
cmp
fildll
jg
push
pop
or
mov
and
adc
pushl
xchg
push
jg
push
repz
pusha
jmp
jmp
rorb
int3
les
cli
cmp
sub
arpl
jecxz
push
lcall
mov
rorb
push
xchg
pop
in
mov
mov
jle
rcll
movsb
add
call
aaa
shll
xchg
in
sti
pop
aad
out
sub
xor
mov
fstps
fs
mov
adc
mov
sub
jmp
mov
adc
sub
aam
pop
or
mov
push
ret
pusha
dec
pop
dec
push
incl
out
jbe
mov
mov
fisttpll
dec
repz
jl
mov
ret
sarb
arpl
fcom
push
add
cld
pushl
outsl
add
test
imul
cwtl
xchg
jg
out
pop
adc
or
push
pop
stc
push
frstor
push
cwtl
imul
daa
outsb
call
add
mov
push
push
dec
ljmp
mov
addr16
xchg
push
dec
lcall
das
in
mov
enter
repz
jb
popa
lret
cltd
pop
loopne
ljmp
pusha
pop
xor
jo
sub
aam
and
in
jmp
push
or
mov
incl
loop
in
xchg
cli
fcmovnu
jbe
outsb
fwait
cltd
xor
outsl
popf
aad
push
adc
pop
push
mov
jmp
jl
hlt
out
inc
sbb
aas
mov
and
iret
popl
cmp
cmp
inc
jns
mov
push
js
test
jecxz
sahf
clc
dec
or
or
jl
dec
ljmp
inc
dec
mov
lret
xor
mov
add
xchg
outsl
mov
mov
rcr
xor
je
in
ljmp
lret
lds
je
push
jne
ds
and
movsl
mov
xchg
outsl
lock
mov
xor
call
or
xor
or
inc
mov
xchg
mov
stos
sub
or
pop
fcompp
je
shrb
outsl
pusha
fsubs
call
xor
leave
push
xor
sbb
pop
sub
loop
icebp
aad
push
push
movsb
aaa
cmp
test
js
jge
sub
insb
sbb
lods
push
adc
stc
mov
pushl
cs
idivl
test
mov
ret
fmull
ja
push
mov
ljmp
sahf
fsubrl
jl
pop
mov
cmc
aas
or
stos
insb
jg
jl
imul
sbb
mov
dec
mov
xchg
ffree
sbb
sub
adc
jns
pop
decl
lcall
mov
cvtps2pd
sbb
push
mov
fildl
sbb
scas
repnz
jmp
cmp
in
scas
out
sub
sub
repz
sub
or
lea
or
pop
fdivr
call
stos
ret
cwtl
inc
mov
and
cwtl
outsb
cld
push
cld
dec
das
es
mov
lock
xor
cs
pop
decl
push
add
sbb
lds
mov
push
adc
lret
jbe
mov
cwtl
ret
dec
cmp
push
lea
cli
push
ret
incw
je
or
incl
cmp
xchg
test
in
aad
jge
xor
pushl
and
or
int
stos
xchg
orl
cmp
jmp
cmp
int3
iret
inc
add
xor
jbe
push
int
fiadds
mov
daa
pop
mov
push
jmp
mov
and
mov
ffreep
ds
pop
mov
push
int3
push
sbb
lock
xchg
leave
mov
rorl
mov
lcall
popa
xchg
sbb
mov
jae
xchg
add
stos
jmp
in
dec
cmp
and
dec
dec
aad
jne
enter
pop
lcall
mov
jne
int3
pusha
imul
jmp
faddl
into
lea
pop
mov
in
adc
and
jmp
test
lcall
pop
mov
add
cmpsl
ljmp
push
mov
out
mov
push
jbe
jo
mov
xor
pushl
repz
mov
cmp
fcmovne
incl
lock
mov
in
adc
or
jo
pop
adc
xchg
jmp
sub
push
sub
push
xchg
dec
ficoms
lea
movsb
stos
pop
xor
pop
in
adc
or
inc
sub
int
jmp
or
stos
xchg
inc
jmp
stos
aad
push
loopne
sbb
std
cld
scas
add
xchg
inc
ret
xor
and
or
insb
movsl
add
jmp
lret
jne
cmp
dec
icebp
fcompl
aaa
and
cmpsb
fbstp
popa
and
pop
call
cld
pop
inc
mov
in
insb
lods
push
xchg
iret
sub
sti
or
inc
sub
sub
incl
jg
push
das
xor
fwait
jae
xchg
gs
jg
mov
cmc
stos
jb
jl
movsb
std
loope
outsb
sbb
std
pop
jl
ljmp
mov
popa
or
out
out
xchg
fnsave
mov
leave
int
das
cwtl
dec
jae
incl
lods
jle
fcoms
int
add
ds
inc
xchg
stos
mov
call
fbstp
fcomip
data16
roll
into
bound
pop
fs
xchg
xchg
adc
outsl
jo
sar
decl
fcompl
fdivrs
adc
inc
mov
jge
mov
icebp
xchg
fs
call
add
sbb
cmp
mov
sahf
adc
ret
jno
std
repnz
cmp
ljmp
ret
call
dec
ret
mov
push
and
filds
mov
adc
hlt
pop
push
cs
jge
mov
ret
std
push
adc
pop
sahf
je,pn
xchg
mov
mov
adcb
js
push
fldt
out
lahf
cmp
add
add
mov
out
dec
or
call
int3
cli
jp
and
inc
call
adcb
dec
incl
mov
jmp
push
mov
fucomip
jecxz
das
rcll
mov
push
sar
ljmp
adc
adc
aaa
pop
sub
cltd
pop
xor
pop
mov
mov
fildll
inc
mov
loop
addr16
cmp
mov
call
add
pop
xchg
sub
dec
jl
fsubrl
pop
mov
jle
cmpsl
jmp
mov
pop
pop
call
cli
in
jno
or
fldl
sbb
add
ja
jmp
or
and
ret
dec
outsl
scas
in
out
popf
jmp
stos
cmpsl
aam
decl
and
sbb
mov
sbb
decl
add
and
push
loopne
out
push
rorb
add
cmp
in
mov
dec
pop
cmp
pushl
adc
cmp
add
add
pop
inc
rcr
sbb
outsb
and
xor
mov
xor
push
addr16
mov
dec
mov
hlt
sub
push
push
pop
mov
hlt
test
jmp
push
lods
data16
mov
aam
outsb
mov
cmp
sub
in
add
repz
push
in
lds
xor
inc
mov
push
xchg
sub
lock
sub
pop
sbb
loopne
out
fiadds
out
pop
jmp
ss
mov
sti
pop
mov
popa
cmpsl
rcll
lret
loopne
loope
and
dec
les
int
and
sar
mov
mov
mov
test
js
pop
into
repz
jg
add
and
in
loope
mov
inc
aad
cmpsl
mov
es
ret
mov
std
pop
adc
mov
pop
int
adc
leave
mov
mov
mov
xchg
and
add
xor
insb
or
push
clc
call
jp
mov
test
aad
xchg
add
les
cli
loope
mov
inc
push
xor
adcb
in
daa
dec
xchg
mov
into
sbb
pop
inc
cmpsb
stc
mov
pop
ffreep
pusha
das
sar
mov
adc
mov
ja
xor
mov
push
insl
sbb
and
jae
pushl
fwait
std
adc
cmp
in
jmp
jns
ja
xor
sub
xchg
adc
ljmp
adc
filds
mov
pop
in
imul
push
push
std
push
and
stos
movsl
mov
outsb
mov
xchg
pop
xor
gs
push
dec
xor
ja
test
jecxz
xor
pop
inc
cltd
sbb
cli
inc
mov
lcall
pop
mov
cmpsb
jmp
mov
add
adc
jae
cltd
scas
lcall
push
aad
fwait
push
jmp
fidivl
mov
lret
rolb
xchg
push
sub
lcall
xchg
fimuls
inc
ret
or
push
or
mov
test
in
out
rorb
sti
mov
jg
fildl
les
xor
mov
dec
cs
mov
push
and
clc
outsb
dec
jge
mov
std
cmpsb
enter
imul
jnp
in
push
mov
ljmp
and
mov
push
dec
pop
xor
jb
sti
push
mov
or
sbb
pusha
lock
mov
push
cli
xor
pop
add
add
pop
or
lods
leave
sub
jb
lea
sbb
cmp
std
adc
adc
int3
testb
outsl
outsb
out
dec
sbb
mov
jmp
sub
inc
xchg
fcomps
push
adc
xchg
inc
jg
lahf
push
jp
push
push
lods
imulb
daa
popf
or
adc
sbb
dec
add
and
fwait
cmc
adc
jns
mov
les
ljmp
inc
push
dec
and
ret
fdivrl
cmpsb
sar
lcall
out
mov
cld
mov
mov
loope
xor
or
data16
jnp
fstp
sub
mov
call
push
jo
xchg
jg
ret
loop
gs
xchg
mov
mov
pop
cli
orl
inc
pop
mov
mov
mov
fadd
push
adc
dec
mov
test
add
dec
cwtl
adc
pop
and
scas
aam
mov
jmp
ss
and
cmp
mov
dec
lahf
sub
clc
leave
loopne
xor
xchg
push
lcall
cld
xor
inc
pop
pop
fstpl
jno
leave
stc
icebp
push
scas
and
aam
lcall
into
mov
dec
xor
lds
sbb
xchg
mov
movsl
int3
sbb
or
repnz
pusha
gs
dec
xchg
cltd
mov
out
dec
bound
pop
pop
push
cmp
out
pop
mov
test
aad
push
lods
movsl
call
sbb
and
push
jge
or
lret
xchg
jg
pop
insb
dec
push
sub
cmp
push
jne
jle
enter
xchg
sub
push
movsl
push
sub
out
clc
call
das
dec
stos
aas
xor
bound
mov
daa
loopne
jmp
movsb
mov
add
inc
or
insb
push
imul
jg
push
rorl
jge
pushf
cwtl
ljmp
sub
cltd
xor
arpl
test
cs
inc
repnz
incl
mov
mov
js
ds
cmp
jo
and
popf
stos
mov
je
jg
test
movsb
shlb
leave
lahf
mov
pop
movsb
jns
jecxz
arpl
pushl
test
jle
mov
pop
and
aad
pop
push
push
push
push
sar
xchg
and
or
pop
fcmovnb
inc
xchg
in
test
dec
push
cld
divl
jne
jne
cmc
into
rcl
rclb
fbld
dec
dec
pop
mul
jg
addl
mov
mov
enter
decl
adc
sbbl
jmp
xchg
pop
movsl
jmp
add
stos
into
and
pop
adc
inc
in
add
lcall
bound
mov
shlb
add
cmc
cmp
stos
ja
rcrl
mov
daa
lret
orb
jmp
mov
cwtl
inc
jmp
mov
jg
sbb
push
lcall
sti
incl
loope
int3
sti
pop
stc
jp
addr16
ficomps
push
xor
loopne
lock
call
sub
incl
loopne
push
jae
cmp
ret
add
fcmove
xor
lods
pop
call
decl
sbb
in
jge
loop
xchg
dec
stos
push
and
xchg
pop
arpl
jmp
jo,pt
rol
fs
pop
in
mov
or
outsl
mov
mov
add
cwtl
pop
ljmp
into
inc
xor
stos
push
imul
sub
dec
dec
or
iret
nop
sbb
pop
cmp
lcall
mov
rol
push
pop
and
lods
out
enter
addr16
repz
xchg
dec
iret
and
jmp
in
cmp
ret
cmp
movsb
mov
inc
stos
pop
aad
test
aad
cmpl
incl
std
cmp
and
int
test
stc
or
xor
pop
lea
sub
jge
ljmp
insb
or
push
outsl
cltd
je
mov
push
and
in
dec
jmp
ss
jg
push
pop
add
xchg
jp
insl
repnz
fcomps
cmp
sti
sbb
and
mov
cmp
fistpll
mov
xchg
in
fisubrl
dec
pop
orl
adc
inc
daa
orl
out
jb
je
inc
cmpl
jnp
ret
jp
ret
mov
mov
dec
pop
sub
das
stos
adc
xor
mov
inc
mov
repnz
andl
pop
xchg
sub
cld
or
movsb
mov
push
push
loop
sti
adcb
shr
ljmp
jae
enter
or
mov
pusha
mov
push
das
cmc
pop
pop
inc
fisubrs
dec
sub
cmp
add
sbb
and
mov
cli
outsb
push
decl
xor
ljmp
imul
mov
adc
ja
mov
cmc
ljmp
xor
fwait
lahf
mov
outsl
sub
hlt
leave
add
dec
dec
inc
xchg
pop
adcl
je
push
js
inc
out
lcall
fsubr
clc
bound
push
adc
mov
jecxz
int3
shlb
sbb
jmp
push
pop
xor
mov
push
cmp
xor
insl
pop
mov
pop
pop
sbb
insb
jmp
fldt
sub
lea
xchg
xchg
pop
test
fldcw
mov
lret
inc
imul
xlat
call
xchg
pop
xchg
cmc
mov
movsl
mov
movsl
pop
xchg
push
or
cwtl
fidivrs
and
push
lcall
int
je
stc
mov
mov
mov
push
inc
call
js
jmp
push
mov
pop
lock
pop
stos
fmuls
lahf
nop
es
add
ret
dec
mov
sub
inc
imul
mov
out
ja
mov
add
ss
jne
clc
lcall
jns
in
cmp
cmp
push
push
mov
mov
lds
stos
adc
mov
dec
dec
sti
push
jmp
mov
or
cld
fxch
mov
adc
inc
cmp
pop
jb
add
decl
rcll
fcmovne
adc
sbb
mov
fucomp
int
jl
test
mov
js
les
pop
fdivr
push
jb
lret
inc
lea
imulb
negb
add
dec
jmp
mov
xor
loopne
dec
addl
mov
leave
cmpsb
pushl
imul
aam
daa
sahf
aaa
lods
mov
ret
fbstp
xor
inc
push
hlt
lret
pop
cmp
cmp
nop
or
xchg
outsl
xchg
addl
ljmp
repnz
pop
sbb
loope
out
repz
sbb
std
gs
inc
push
adc
mov
ss
movl
sahf
jbe
mov
testl
xor
ljmp
or
clc
and
in
sbb
or
lods
pop
push
cmc
mov
cld
int3
mov
pop
xor
popa
push
cld
dec
inc
orb
add
inc
or
pushf
jge
xlat
or
xchg
sbb
pop
sbb
std
xchg
push
stos
lret
in
mov
cmc
outsl
adc
push
xor
xor
add
popf
out
test
lcall
dec
decb
sub
lods
inc
mov
mov
roll
jl
pop
test
jp
aas
jmp
test
shlb
xchg
shrb
add
sub
pushl
imul
cmc
addl
xor
xor
lcall
push
jnp
cli
adc
cmp
je
jo
jl
adc
jmp
sbb
ljmp
adc
adc
inc
dec
jmp
jge
inc
mov
cmpsb
lcall
xor
test
xor
and
push
and
add
mov
push
fs
and
jmp
and
pusha
cmp
cmp
clc
in
lds
fwait
loope
inc
std
pushl
sub
das
sbb
addb
xor
cli
call
jnp
movups
in
jo
rcrl
mov
cltd
jbe
jmp
add
inc
das
mov
mov
hlt
adc
xor
into
nop
ret
or
mov
pop
push
jg
test
outsb
pop
in
js
dec
iret
cmc
inc
push
fs
movsb
pop
lret
cmp
incl
mov
and
pusha
xor
movsb
scas
fnstenv
sbb
rep
pop
out
pop
push
fcomip
call
sub
xchg
xor
xlat
fidivs
adc
lret
out
push
lods
cld
cwtl
mov
loop
jg
test
push
jnp
xchg
mov
adc
lret
cmc
dec
nop
adc
ljmp
in
mov
inc
pop
add
dec
jnp
lock
pop
add
xchg
inc
mov
adc
xor
lcall
adc
arpl
mov
xor
sbb
push
jmp
lcall
mov
jo
out
enter
push
aas
addr16
ljmp
call
xchg
leave
adc
xchg
and
jp
jne
movsl
add
and
sbb
out
and
fwait
mov
arpl
mov
xchg
pusha
mov
mov
xchg
out
aaa
or
cs
and
cmc
out
pop
xchg
xor
and
add
jmp
ds
clc
sbb
sub
dec
std
fildl
add
call
je
les
add
js
mov
jp
xchg
lcall
mov
lret
and
cld
hlt
out
mov
outsb
notl
cmp
icebp
cmpsl
cltd
jae
pop
fidivs
sub
dec
adc
or
dec
incl
push
inc
mov
pop
inc
lea
nop
ret
daa
scas
push
cmc
aas
cmp
push
mov
fimuls
push
inc
cli
int
xchg
inc
lcall
test
ljmp
cli
adc
arpl
xchg
dec
mov
lods
or
fstpt
mov
nop
clc
cmp
mov
leave
ffreep
loopne
sbb
pop
cmpsl
out
xor
lock
jle
xchg
lahf
ret
pop
lcall
mov
pop
and
lcall
clc
pushf
in
mov
cmp
sub
nop
jg
incl
lret
jp
jl
adc
mov
out
add
pop
cmp
rorb
incl
insb
call
jo
cmp
shlb
pop
sub
lcall
pop
cmp
hlt
inc
addr16
cwtl
push
push
cmp
push
push
pop
aad
fcomip
ljmp
dec
xor
ja
rcrl
lret
push
hlt
call
vmovups
xor
mov
sub
jne
dec
cmpsl
adc
call
jbe
jmp
pushl
xor
push
outsb
xchg
loop
scas
xchg
cmp
scas
es
dec
repnz
cmp
mov
cli
cmpsl
icebp
mov
in
test
sub
sbbb
gs
push
and
lcall
inc
ror
pop
rcrb
or
or
pop
inc
cmp
dec
je
scas
jnp
add
jmp
sub
push
int3
hlt
sbbb
inc
or
sbb
popa
cvtps2pd
movsl
xchg
idiv
jnp
xchg
scas
inc
push
call
std
sub
jmp
int3
cwtl
xor
sub
mov
cmp
sbb
jmp
sbb
divl
pusha
mov
jp
pop
jg
adc
mov
sbb
test
pop
cld
decl
pop
cwtl
dec
ljmp
xchg
cmp
and
lock
push
push
add
aad
faddl
and
sahf
mov
or
xchg
es
addl
jl
mov
pop
fcompl
insb
clc
cmp
ds
cmp
jno
daa
mov
stos
jle
jb
cltd
adc
xchg
fbstp
faddl
mov
inc
add
dec
adc
xor
push
loopne
ja
or
pop
cmc
cld
adc
cmpsl
xor
pop
cmc
add
jmp
fisttpl
mov
add
bound
cmp
je
pop
movsl
cld
adcl
ss
ljmp
xchg
push
movntps
mov
hlt
jnp
mov
xor
mov
sub
les
aam
arpl
stc
xor
mov
inc
cmp
inc
push
mov
dec
cmp
inc
insl
fcmovbe
shlb
jg
lods
inc
cwtl
inc
mov
jbe
mov
scas
js
push
leave
test
fcomps
or
add
cmp
dec
decl
cs
jno
std
pop
mov
push
int
outsl
in
jmp
icebp
adc
imul
ret
imul
jl
jns
sti
cwtl
xchg
adc
aas
out
push
mov
or
mov
aam
outsb
mov
mov
fs
jge
test
out
add
aaa
bound
out
shrl
jge
orb
iret
xchg
scas
out
mov
or
std
std
xor
jge
jae
pop
xor
call
pop
jmp
xor
stos
lcall
stos
pop
dec
stos
sbb
adcb
dec
cmp
xchg
shll
dec
cli
jge
jg
ljmp
push
idivb
sbb
aam
sbb
mov
test
push
ljmp
add
bound
add
mov
sbbb
or
cwtl
adc
or
inc
test
ret
shlb
decl
push
std
adc
mov
pop
cmp
dec
fcomp
adc
int
inc
dec
inc
pop
fdivrp
ljmp
jne
test
je
adc
fs
outsl
mov
sbb
lret
aad
call
out
xchg
leave
push
hlt
mov
or
in
mov
mov
pop
add
call
jbe
int3
hlt
les
xchg
jl
sar
or
fsubs
mov
add
fcos
incb
roll
dec
bound
shrb
jns
jp
mov
incl
mov
cmpsl
pop
xor
icebp
jmp
dec
in
or
in
call
mov
stc
add
add
mov
out
in
mov
les
orl
decl
loop
les
addr16
mov
fs
int
cld
fisttpl
cli
inc
icebp
add
mov
nop
inc
fbld
and
shrl
imul
call
dec
xor
sub
incl
test
jg
pop
aaa
mov
mov
out
out
sbb
sbb
call
xlat
inc
cmp
xorl
fistpll
jl
fsubr
fildl
lahf
push
push
cmpsb
lcallw
mov
insb
cmp
inc
and
scas
lcall
inc
in
cmp
sub
sub
adc
nop
dec
nop
cltd
roll
adc
inc
ret
es
mov
add
pushl
dec
lock
hlt
and
or
in
fs
fbstp
lods
fisubrs
fs
lret
sti
popf
xchg
push
loope
test
fdivrl
pop
mov
add
inc
mov
insb
sahf
lods
into
vpmaddubsw
mov
ljmp
add
xor
sbb
aad
imul
stos
inc
mov
jnp
call
sti
iret
stos
dec
pop
mov
mov
inc
lcall
mov
movsl
jg
dec
pop
dec
ja
pop
add
push
movsb
adc
nop
and
fisttpl
xchg
push
mov
incl
mov
push
mov
cmp
orb
fisttps
clc
sahf
dec
sub
cmp
jecxz
pop
inc
insl
dec
out
jo
cmp
addb
jmp
pop
insb
popfw
ds
pop
pop
mov
jbe
jmp
hlt
cmp
pop
push
cmp
cmc
pushl
pusha
out
mov
mov
adc
xchg
mov
and
fucomip
std
insb
pop
jno
sbb
xor
mov
cmp
xlat
mov
or
xchg
and
pushl
imul
push
pop
add
mov
out
xchg
clc
popa
jae
lcall
sub
xor
jbe
shl
arpl
or
push
call
pusha
add
or
hlt
sahf
sub
mov
jno
hlt
jg
in
pop
ficompl
pop
pop
push
cmp
loopne
cmp
add
addb
fildll
lret
arpl
fidivrl
lods
ret
xor
xchg
decl
clc
arpl
nop
mov
test
call
xlat
mov
sti
loope
ror
clc
push
test
pop
add
jg
push
popl
lock
jmp
mov
scas
cmp
adc
mov
cld
mov
lcall
repz
jecxz
mov
fwait
or
data16
and
sub
jne
decl
pop
repnz
cmp
cmp
push
int3
cmpsb
out
mov
push
xlat
ljmp
xchg
fdivs
lods
ljmp
add
in
pop
mov
decl
jle
enter
cs
jecxz
push
out
pushf
int3
push
cmp
cmpsb
cmp
push
decl
mov
xor
mov
cmp
scas
pop
pop
ljmp
adcb
outsb
sbb
fdivl
xchg
stc
mov
stos
sbb
lcall
call
push
fbld
test
int3
dec
das
les
icebp
int3
in
fnsave
adc
nop
fs
aas
pusha
in
ljmp
mov
mov
in
clc
mov
dec
fwait
sub
and
xchg
popa
add
repz
dec
scas
inc
test
incl
ja
mov
gs
sbb
push
in
sub
js
pop
in
cmpsb
movsl
inc
mov
data16
incl
rorb
test
pop
mov
sub
xchg
jae
mov
mov
imul
mov
popa
lret
and
outsb
sbb
mov
popf
cmp
or
sub
sbb
adc
ja
mov
hlt
push
leave
pop
xchg
mov
out
hlt
enter
sub
mov
pop
fdivr
push
fcoms
mov
jo
insl
ljmp
xchg
leave
lea
pop
xchg
jb
mov
dec
cwtl
loop
cli
mov
dec
mov
out
or
jo
pop
mov
mov
hlt
test
incl
cwtl
or
fwait
popa
dec
push
movsb
sub
lods
mov
repnz
decl
push
cmp
sahf
clc
mov
data16
scas
into
sbb
repz
xor
pushl
inc
shrb
mov
dec
lret
adc
cmc
pushf
and
jp
sub
add
cltd
shlb
lcall
push
push
data16
data16
adcl
mov
decl
adc
push
jecxz
or
mov
je
inc
sti
cmp
dec
ja
clc
cwtl
mov
ljmp
sbb
fs
mov
ds
mov
shl
adc
push
cmp
clc
dec
push
adc
push
aam
mov
or
not
in
push
lcall
sbb
adc
jp
leave
push
cs
inc
sub
push
mov
fbld
cli
dec
xor
fildll
les
fcompl
dec
xorl
adc
xor
dec
adc
inc
push
fwait
dec
mov
ljmp
add
cmp
mov
push
or
incl
pushf
mov
xchg
pop
jnp
in
inc
test
stc
std
pusha
cmp
daa
icebp
call
aas
leave
and
inc
jl
mov
jb
or
in
xor
mov
fisttps
adc
cmpsl
enter
cmp
adc
jecxz
push
outsl
adc
jmp
scas
xchg
loop
inc
jnp
movsb
cmp
dec
shld
pop
cmp
lret
or
xor
into
adc
push
xchg
inc
stos
nop
xor
and
dec
sub
cli
jo
sbb
fstl
mov
out
aaa
std
inc
mov
push
scas
push
lcall
stos
adc
xchg
movsb
pop
push
or
fs
insl
sbb
mov
or
int3
and
dec
outsb
das
add
rol
lahf
frstor
dec
xor
call
or
inc
cltd
pop
sub
dec
mov
aas
repnz
mov
fcmovnbe
ljmp
call
std
sub
jle,pt
sbb
lcall
jae
adc
ljmp
push
stos
jle
inc
lahf
dec
pop
nop
xchg
call
cltd
scas
jno
mov
cmp
ljmp
pop
and
movsl
pop
cmp
pop
or
dec
call
and
xor
sbbb
mov
jle
sub
add
les
jmp
loopne
stos
movsb
fisttpll
mov
rorl
jp
pop
jge
jecxz
aaa
push
inc
testl
movsl
daa
cmp
sub
xchg
in
stos
lcall
pop
fnstsw
cmpsb
clc
and
pop
shlb
pop
cli
sbb
xor
fcmove
fsubl
xorl
fdivr
ljmp
jmp
mov
push
loop
es
popf
mov
jecxz
pop
inc
outsb
adc
jmp
inc
mull
lods
es
add
inc
insb
dec
inc
fsubrl
mov
aas
mov
add
sti
mov
sbb
sub
mov
jmp
cli
xchg
into
test
cmp
mov
cmp
test
dec
lcall
jl
lahf
mov
jp
ret
xchg
sbb
or
adc
fidivs
gs
lcall
cmp
cmp
fwait
and
inc
out
sbb
pushl
pop
mov
call
enter
mov
cmp
fsubs
incl
sahf
repnz
cli
cmpsb
sub
fisubrl
fstp
pop
addb
mov
dec
repnz
adc
sub
insl
mov
iret
fmuls
scas
mov
mov
lret
adcb
nop
push
shl
xchg
subl
lock
out
cmp
jl
mov
push
addr16
fnsave
fildl
pusha
into
push
in
sub
fildll
xlat
mov
movsb
int
cli
inc
data16
call
mov
scas
aaa
mov
outsl
test
stc
push
mov
out
and
mov
in
inc
adc
andb
test
mov
cmp
call
inc
mov
pop
aad
fistl
xor
outsb
xchg
mov
jo
dec
outsb
xor
inc
sbb
ljmp
dec
ss
push
xchg
and
jb
cli
sbb
cmp
push
pop
imul
loopne
mov
dec
cld
jmp
push
insb
jle
and
add
adc
mov
lcall
lcall
adc
adc
xor
lcall
push
pushl
sub
adc
xchg
sti
shlb
mov
mov
dec
addl
call
clc
arpl
ss
and
and
inc
jns
add
imul
push
sbb
pushl
pusha
push
in
jno
or
push
inc
adcl
pop
cld
pusha
adc
ljmp
cltd
jne
sbb
insl
jno
adc
arpl
lret
mov
sbb
or
mov
jne
xchg
or
jb
mov
std
sub
aaa
shll
pop
push
jmp
aas
dec
int3
pop
mov
aam
adc
pop
push
pushl
loop
lret
pop
test
inc
sub
mov
pop
xchg
mov
xchg
fcos
decl
lahf
in
ret
jle
cmp
insl
jne
xlat
push
and
pop
fsubrs
call
sbb
sbb
inc
je
push
sub
cmp
pop
test
bound
xchg
cmpsl
and
scas
clc
jae
xor
cmp
inc
mov
pop
mov
ret
ret
cltd
pop
pushl
dec
jmp
imul
mov
jl
lret
adc
xor
pop
cli
pop
xchg
psrad
xchg
fcoml
fsubrp
sub
lds
lcall
push
fistps
adc
add
pop
pop
test
outsl
aam
pop
test
xor
decl
outsb
dec
mov
xchg
dec
ljmp
mov
or
mov
mov
into
cmpsb
pusha
xor
jno
fiadds
js
lock
or
mov
xor
call
push
or
lcall
dec
sub
aam
fldt
add
mov
jp
mov
jp
adc
scas
sti
addr16
xlat
dec
lahf
leave
jl
jmp
imul
inc
in
lret
ja
xor
pop
ret
and
sahf
inc
mov
loop
jmp
outsl
fcompl
lock
sub
mov
sbb
lods
clc
mov
loop
das
cmp
hlt
xchg
movsl
outsb
test
dec
dec
push
sub
add
jmp
sbb
and
aas
out
mov
cld
jmp
orb
pop
or
decl
es
and
mov
jae
iret
jge
lcall
push
jl
push
lahf
mov
inc
mov
dec
add
cmc
jp
sbb
jns
cld
xor
pushl
sahf
cmp
push
inc
mov
xlat
lock
push
xchg
lods
ljmp
cld
cmp
outsb
sub
orl
cmp
cmc
fisubrs
adc
xchg
dec
push
scas
dec
into
mov
mov
call
mov
roll
push
or
xchg
nop
mov
cmp
in
test
and
lea
and
hlt
pushf
das
adc
dec
xchg
imul
int3
cmp
sub
add
popf
imul
outsb
adc
and
repz
adc
sbb
aas
imul
sbb
ja
cmp
in
test
inc
or
popf
test
lcall
pop
repnz
cmp
lock
in
rcrl
sbb
push
mov
xchg
cli
test
fucomip
dec
pop
sub
xor
jnp
sar
decl
dec
xchg
mov
data16
mov
adc
mov
lea
xor
sbb
push
scas
call
mov
out
inc
sahf
push
and
iret
xchg
test
jnp
in
sub
jmp
cmp
into
add
mov
jno
sbb
out
mov
xchg
lock
fnstsw
aas
adc
pusha
or
adc
loopne
pusha
cmp
les
inc
lahf
sub
xor
mov
pop
js
scas
mov
incl
and
fistpll
or
incl
push
xchg
lea
sahf
std
test
xchg
jne
mov
mov
push
cwtl
dec
jecxz
call
mov
push
aas
test
lahf
push
xchg
sti
jmp
dec
scas
inc
mov
and
xchg
jae
mov
sub
shr
negb
add
mov
arpl
adc
sahf
lds
jmp
rcll
stos
sub
pop
jg
stc
mov
divb
clc
cmpsl
repnz
cli
incl
lock
sbb
pop
push
push
outsb
mov
das
sar
lret
aaa
sub
mov
adc
fnop
mov
ret
cmp
fnstcw
or
je
pop
movsl
adc
test
stc
int
mov
cld
jg
mov
jp
ret
mov
ret
jmp
sbbl
push
push
movsl
inc
decl
sub
cwtl
jne
push
dec
out
mov
in
sub
addr16
ret
cmpl
jmp
stos
lret
xor
jecxz
push
dec
nop
sbbb
insl
imul
imul
decl
ret
clc
js
cmpsl
sbb
ret
hlt
in
mov
inc
andb
lcall
add
sub
jg
fdivs
xchg
fisubl
sub
cmp
in
jbe
dec
dec
adc
xor
xor
mov
cmp
pop
push
je
mov
add
mov
outsb
orl
adc
cli
cli
cwtl
lcall
stos
incl
clc
jmp
cmpsb
xor
aaa
rcll
mov
stos
add
and
mov
add
mov
xor
and
xchg
int3
add
loope
xchg
push
fdivr
incl
fldenv
loop
xchg
ret
xor
jne
adc
mov
mov
testl
push
pop
repnz
mov
imul
or
mov
push
cwtl
sbb
ljmp
ret
or
push
sub
jno
sub
add
leave
ficomps
sub
fiaddl
cld
call
icebp
loop
popf
imul
movsl
ds
and
insb
rcrb
incl
pop
mov
and
andb
and
dec
test
fmulp
leave
xchg
sbb
into
sub
sbb
inc
ret
add
and
add
fists
aaa
pop
call
xor
inc
jns
sarb
ret
clc
mov
cmp
xor
adc
adc
push
xchg
push
fsubs
pop
mov
or
cwtl
push
fucomp
mov
mov
ss
faddl
pushl
push
pusha
lock
out
lds
andl
mov
fs
aad
flds
cld
gs
or
jg
jp
mov
inc
decb
repz
and
mov
or
decl
negl
inc
pop
xchg
cld
jno
outsb
xchg
cld
push
dec
ljmp
mov
enter
sbbl
and
inc
inc
cmc
mov
xchg
mov
call
xchg
je
or
and
sbb
dec
jecxz
xlat
xchg
adc
movsb
dec
pop
jbe
xor
push
add
aaa
cmp
cmpb
sub
mov
neg
cli
mov
and
cmp
sub
inc
or
push
jo
ds
xchg
into
movsb
mov
cmp
xchg
js
adc
loope
aaa
mov
pop
push
repz
dec
xor
nop
sarl
sahf
aas
xlat
fldl
add
cmp
faddl
sbb
add
push
or
dec
movzbl
fs
incl
mov
sub
sysret
pushf
xor
mov
pop
call
mulb
hlt
test
cltd
and
aas
sub
jb
or
dec
sbb
pushl
aad
mov
jmp
gs
cmp
stos
enter
or
or
jmp
jbe
rorl
sub
outsb
cmpsl
mov
int
adc
lea
lea
xchg
lcall
ljmp
add
sub
sbb
dec
mov
push
mov
mov
loope
mov
jno
mov
and
and
lcall
push
cmp
lcall
fwait
jecxz
dec
cwtl
ret
push
test
or
neg
jns
cs
subb
pop
ja
clc
ljmp
or
fiadds
cmp
sub
pushl
and
in
mov
add
push
cwtl
lea
sahf
popf
xor
aad
cmc
idiv
jmp
or
mov
mov
stos
das
shrb
das
cs
lret
movsb
inc
mov
fildll
add
xchg
jp
mov
insl
das
xchg
jbe
fsts
negl
and
xchg
mov
call
fistps
add
push
repnz
gs
js
and
fninit
push
and
pop
outsb
add
xor
out
push
inc
pop
fwait
stos
pop
push
push
rcrl
mov
outsl
add
jg
sub
adc
xor
je
jecxz
lret
decl
fcomps
mov
out
repnz
int3
mov
jbe
jo
adc
lods
mov
and
decl
fwait
jg
pop
enter
lods
sub
mov
das
mov
loop
call
fists
pop
iret
aad
insb
inc
in
mov
and
rcrl
xchg
sbb
call
mov
mov
xchg
mov
std
je
adc
test
test
outsw
imul
or
outsl
idivb
lods
jo
sub
mov
ds
push
cltd
sub
mov
test
mov
outsl
je
xchg
pop
or
mov
dec
ljmp
sub
jecxz
add
lcall
jp
hlt
cltd
andl
push
iret
pop
lret
fld
test
int
es
clc
decl
aaa
sahf
popa
inc
subl
loopne
sbb
inc
push
insl
into
xor
pop
adc
and
mov
sub
aas
and
lcall
in
in
and
xchg
pop
xor
daa
mov
mov
push
scas
dec
pop
imul
orl
jbe
pop
jmp
cmp
ljmp
inc
shlb
cmp
fs
and
sbb
xchg
jge
cltd
mov
outsl
mov
test
repz
pop
icebp
xchg
pushl
roll
cmp
xchg
cmp
sub
iret
out
jns
mov
ret
incl
bound
sub
cmc
popf
xchg
mov
push
dec
xchg
fsqrt
add
ljmp
icebp
scas
mov
dec
jmp
lods
inc
bound
aaa
cltd
scas
arpl
fsubp
movsb
in
popa
std
mov
lods
sub
ljmp
xchg
test
xor
test
ljmp
test
loop,pn
cs
jg
push
test
mov
stc
or
cmp
mov
jg
js
daa
call
fisttpll
push
roll
pop
ljmp
pop
enter
pop
xor
push
and
call
pushf
and
repnz
push
lods
inc
clc
jae
jmp
mov
cs
cld
and
loopne
ja
outsb
inc
mov
cmp
das
mov
or
dec
mov
pop
imul
or
incl
cmp
imul
sub
int3
dec
push
pop
mov
pop
mov
jo
or
push
decl
les
pop
pop
in
insb
jbe
pop
pop
inc
xor
jnp
nop
or
ret
push
adc
imul
ss
cmpsb
int3
inc
or
lods
call
xor
nop
mov
or
sub
clc
xlat
imul
jo
xor
jg
xchg
xchg
sahf
dec
or
stos
cmpsb
loop
and
inc
cs
jno
cld
out
cmpsb
or
jnp
or
push
or
sub
jbe
fidivs
adc
testl
mov
fnstsw
mov
ja
stc
jb
add
rcrl
mov
loopne
xlat
jl,pt
push
test
pusha
pop
sahf
nop
iret
lds
jb
scas
clc
inc
push
pushf
scas
in
fildll
outsl
cmp
pop
mov
loope
mov
in
incl
pop
out
out
int3
pop
add
hlt
call
cmc
push
or
imul
and
cld
ja
lret
jg
lahf
mov
sbb
add
xlat
pusha
test
imul
out
call
xchg
inc
stos
in
lcall
in
jne
orl
mov
mov
and
sbb
outsb
mov
lcall
loope
call
mov
ds
xchg
mov
push
in
xchg
adc
dec
cwtl
pop
movsl
push
ljmp
mov
cmp
outsl
cli
add
fwait
insl
dec
jae
cld
cmpsb
cmp
test
call
pop
cmp
pop
inc
push
dec
nop
cmp
mov
add
mov
pushf
clc
in
push
cwtl
mov
mov
push
lock
iret
gs
ss
add
sub
adc
aas
or
mov
add
nop
pop
inc
mov
scas
mov
mov
lods
lods
jbe
pop
popa
inc
xor
daa
jnp
jl
test
decl
cmp
pop
out
pop
mov
iret
outsl
jae
roll
mov
mov
and
pushf
addr16
jmp
add
xchg
cmp
decl
push
fcmovu
dec
ss
inc
enter
jbe
sbb
jmp
and
xor
jmp
hlt
insl
xor
jne
xchg
outsb
xorb
add
xor
inc
stos
sbb
mov
cli
jo
stos
mov
sbb
dec
pop
movsb
ss
jb
pushf
sar
mov
push
pop
rorl
aas
cwtl
out
dec
imul
repnz
jnp
adc
add
out
in
inc
cmp
mov
pop
mov
ljmp
pushf
in
inc
fwait
push
jmp
dec
sub
jb
aas
pop
lea
pop
mov
lcall
dec
and
and
out
inc
shll
rorb
out
push
jae
stos
push
sub
xor
adc
out
cld
push
mov
lcall
enter
dec
and
push
lret
sub
lds
xchg
stos
or
andl
mov
ds
mov
add
or
inc
bound
jno
pop
imul
rol
xchg
mov
incl
out
push
adc
inc
daa
inc
lods
push
cld
mov
test
arpl
or
pop
dec
cmpsl
mov
call
xchg
sbbl
inc
xchg
jbe
ja
xchg
jnp
mov
fsts
out
jle
stos
scas
fidivrs
fdivl
inc
push
mov
push
fwait
cmp
mov
jnp
cmpsb
dec
sub
jmp
pop
pushf
testb
or
xchg
xchg
dec
sub
sbb
jmp
jo
inc
repnz
aad
fcomp
and
mov
ljmp
gs
aad
jmp
fldl
xor
jns
imulb
icebp
fdivrp
adc
jbe
adc
loopne
and
test
cmovp
sbb
sbb
ljmp
adc
jb
mov
js
pop
inc
adc
inc
pop
and
sub
mov
dec
ret
jno
push
call
dec
popf
push
aad
in
dec
loop
arpl
loopne
sub
call
cmp
and
shl
lret
sbb
sub
scas
aam
jne
idiv
jg
push
test
cmp
outsl
mov
roll
jl
cltd
cmpsl
and
ljmp
jg
jmp
ficompl
dec
xor
push
leave
js
mov
pop
cld
jg
outsb
gs
mov
movsb
adc
mov
cs
cwtl
or
data16
decl
ds
test
jmp
addr16
insb
push
inc
imul
xchg
cmovs
adc
loope
lcall
adc
push
pop
inc
dec
leave
in
ss
sub
cmpb
inc
fnstsw
fs
push
icebp
notb
or
popa
mov
call
add
and
adc
in
adc
sbb
and
fimull
fdiv
decl
stos
pushf
insb
std
lret
jno
cmp
pop
shl
mov
fildl
lods
lock
sarl
mov
shl
jae
std
sub
hlt
aam
idivl
out
in
call
nop
dec
pop
lea
sub
pop
inc
mov
ss
mov
rcrl
scas
sub
add
dec
cs
ljmp
xor
popf
mov
mov
aas
lahf
ret
push
sub
cmpsb
loop
sub
xchg
dec
cmp
mov
or
insl
stos
mov
loopne
sub
std
inc
mov
nop
or
call
aaa
sub
movsl
xor
xor
call
xor
insb
pop
jge
enter
movsl
dec
dec
ret
loop
xchg
out
or
sub
or
or
cmc
shrl
fmull
jo
cmpsb
and
jp
in
shr
cmp
add
sti
in
mov
incl
test
xchg
call
aaa
lahf
xor
adc
add
jae
decl
scas
ss
aas
sti
iret
mov
ret
xor
mov
popf
gs
inc
xchg
pop
dec
cs
lcall
fidivrl
cmp
pop
scas
jbe
arpl
aas
or
jno
jmp
test
xor
jae
pop
je
dec
jb
pushl
or
pop
push
and
orb
cli
sar
les
mov
mov
xlat
cwtl
ljmp
xor
shl
dec
dec
or
lret
iret
call
aaa
fmuls
mov
incl
lcall
inc
daa
mov
push
adc
jo
pop
jae
lods
pushl
add
dec
xchg
cli
aas
ret
dec
fwait
mov
pop
rsm
in
ds
imulb
aad
pushf
mov
add
jmp
into
xchg
pop
imulb
in
inc
orl
xor
in
call
sar
dec
fmuls
sbb
jne
lcall
int
arpl
adc
filds
add
push
sub
fsubp
clc
cmc
fsubrl
lcall
adc
adc
mov
add
or
adc
cwtl
sub
cmp
or
insb
nop
imull
mov
and
jmp
nop
lods
js
push
add
lock
sbb
cmp
pop
or
dec
dec
bound
lcall
adc
ljmp
outsb
jl
enter
jl
mov
test
adc
decl
repnz
insb
pop
shlb
fistps
lods
shrl
push
mov
push
inc
cmpsl
fsubrs
ljmp
int3
xor
inc
mov
pop
jle
inc
push
add
xlat
jg
imulb
es
pop
ret
add
adc
fiaddl
cmp
mov
hlt
repz
xchg
cltd
inc
add
push
arpl
adc
fadd
enter
fdivr
mov
bound
jbe
cmp
daa
jno
and
inc
out
mov
stc
push
call
xor
movsb
xor
dec
cltd
and
dec
and
sub
jns
pusha
sbb
call
movsb
icebp
mov
adc
pop
adc
mov
pop
fldcw
jp,pn
xor
pop
loopne
filds
decl
or
test
adc
ljmp
mov
and
jo
mov
in
subl
insb
in
je
sbb
mov
push
pushf
or
push
jbe
das
pushf
jo
lods
ret
outsb
push
push
jl
es
outsl
fdivl
jno
dec
or
std
jmp
outsl
adc
out
movsl
shr
mov
pop
repnz
filds
xor
scas
aaa
lret
cmpsl
xchg
xor
call
mov
arpl
cmp
shlb
sahf
das
nop
and
shr
fcmove
hlt
cmp
ljmp
sbb
xchg
sbb
std
xchg
ds
push
cwtl
test
insb
leave
hlt
fadds
mov
addr16
pop
inc
and
loope
call
adc
jne
or
and
incl
jp
and
xchg
cmp
clc
push
mov
jns
cli
sar
sahf
jae
push
and
mov
jmp
aaa
adc
and
stos
fs
cmpsl
pop
pop
push
jg
pop
sub
dec
rcrl
int
pushf
pop
decl
and
xlat
ret
rcr
je
cwtl
test
fldl
xor
imul
xorl
fsubl
jmp
push
mov
mov
lcall
inc
clc
jl
fs
mov
shlb
mov
dec
add
repz
call
pop
aam
lcall
cmc
mov
call
decl
sarb
xchg
push
stos
mov
aam
fsubl
inc
ja
mov
cmp
inc
lea
push
pop
test
cmpb
or
out
ss
ja
call
lret
pop
cmp
ret
push
xchg
aam
sub
add
add
jg
dec
cmpsb
call
ds
repnz
pop
je
sti
mov
mov
jmp
int3
mov
push
lcall
pop
sbb
pop
ret
mov
push
jl
dec
jns
in
pushf
cmpsb
xor
ss
in
pop
cmc
and
pushf
lds
jnp
rcrl
cmp
incl
xchg
les
inc
or
mov
mov
xor
loopne
sub
es
fsubrs
sub
cs
loopne
lcall
jne
sbb
in
arpl
jmp
or
push
decl
leave
xor
scas
sahf
and
aaa
pop
jno
je
icebp
dec
cwtl
xchg
mov
jecxz
pop
mov
mov
push
call
lock
aaa
pushf
minps
outsb
jmp
dec
jns
inc
popa
popf
pusha
or
ljmp
leave
xchg
rolb
dec
mov
sub
notl
push
out
lret
stos
add
andb
xchg
dec
pushl
inc
movsb
dec
cmp
movsb
pop
xor
mov
mov
aad
inc
repz
xor
xor
push
cld
cmp
and
andl
lret
pop
xor
ljmp
jmp
clc
call
cmp
and
ja
or
enter
adc
sub
xchg
mov
sub
dec
mov
scas
adc
jl
mov
jle
fcompl
add
imul
das
loopne
call
cmc
inc
movq
ficoml
mov
mov
mov
fsubs
add
fisubs
mov
mov
test
in
mov
dec
lret
decl
lock
xchg
pop
push
xchg
test
mov
je
xlat
cmp
mov
dec
sbb
sti
sbb
in
ja
sarb
out
test
inc
mov
xchg
fists
je
scas
fnstcw
add
adc
add
insb
adc
aas
mov
sub
addr16
dec
push
mov
mov
fcompl
dec
sub
jge
sbbl
jo
jg
imul
cmp
dec
dec
daa
jae
add
sub
mov
xchg
xchg
sub
push
jmp
mov
and
pop
cmpsl
into
push
adc
jmp
cwtl
inc
add
adc
popa
cltd
mov
in
sbbb
pushf
mov
cld
hlt
jae
cs
xor
jb
js
clc
pusha
push
gs
decl
mov
imul
mov
dec
push
iret
mov
mov
jmp
clc
xchg
add
or
and
js
push
std
xchg
cmpl
scas
test
shrb
call
mov
fistpll
je
dec
inc
es
jecxz
inc
push
dec
repnz
rclb
mov
addb
icebp
push
lds
ljmp
ljmp
add
ja
jle
inc
jle
aad
pushf
imul
lods
push
mov
fcomip
inc
mov
push
out
sub
shrb
mov
loope
xor
inc
pushf
dec
xchg
xor
insl
cli
fcomps
dec
xchg
adc
add
xchg
jecxz
mov
mov
cmp
pop
pop
mov
jl
sub
and
mov
jo
cmp
dec
xchg
inc
rcll
cmpsb
jnp
fisubs
std
popf
std
ljmp
adc
jge
mov
mulb
jle
js
jnp
jmp
lret
int3
push
xor
arpl
mov
fcoml
mov
fcoms
imul
movsb
les
rcrl
repz
and
xor
or
out
mov
scas
shr
cmpsl
mov
scas
fisubrl
nop
fisubs
loopne
or
or
movsl
xchg
clc
inc
test
push
cmp
daa
xor
dec
cmp
jle
jmp
sbb
mov
mov
inc
mov
adc
mov
sti
adc
jns
stos
jne
fadds
loope
or
push
push
inc
into
jo
mov
dec
repz
inc
dec
inc
shlb
xor
leave
jne
data16
stos
decl
xchg
inc
and
push
xchg
aaa
loop
test
adc
jg
pusha
adc
ljmp
jae
mov
xlat
add
incl
testl
inc
dec
push
xor
test
and
or
ljmp
dec
adc
roll
loop
adc
inc
sti
out
shl
xchg
out
fs
xchg
cld
adc
mov
in
test
sub
pop
mov
cmp
mov
incl
fildl
adc
sbb
test
lock
or
imul
push
adc
repz
cmpsl
iret
movsl
fs
repz
ljmp
xchg
lods
loopne
popa
inc
in
lcall
ds
pop
in
push
rcrb
outsl
jg
cmp
push
and
ljmp
addb
loop
test
pop
inc
decl
jo
jb
xor
inc
xor
push
adc
test
iret
decl
mov
push
adc
aas
push
lcall
push
xchg
scas
mov
addr16
movsl
cmp
iret
test
cmpsb
dec
mov
divb
fsubr
imul
mov
add
jae
int3
fnstsw
stc
into
outsb
xor
test
cltd
mov
imul
pop
sbbb
adc
sbb
cmpb
pop
arpl
arpl
jno
test
scas
clc
add
nop
xchg
movsl
inc
and
pusha
popf
shlb
jg
xor
testb
and
mov
adcb
ljmp
add
arpl
cmp
adc
inc
push
cmp
and
lcall
sbb
xor
jo
mov
stc
adc
xlat
or
popf
pop
std
decl
cmc
roll
cmp
outsl
pop
sub
ret
ljmp
jbe
mov
cmc
dec
sbb
xchg
mov
xchg
and
add
xor
leave
jmp
jge
jp
add
scas
lods
jnp
int3
jp
in
sahf
dec
das
xor
jg
cmp
clc
stos
aam
call
shrl
mov
imul
mov
ds
jnp
adc
int
popf
imul
xchg
sahf
test
gs
adc
lock
pop
out
jp
aas
popf
ds
rcl
mov
adc
sti
mov
mov
adc
dec
xor
mov
pop
arpl
sub
aad
mov
cs
pop
adc
sbb
repnz
test
jg
ja
lcall
jl
jns
sbb
jg
out
popf
cmpb
or
jae
pushl
mov
nop
add
jl
aas
push
leave
xor
and
dec
push
call
jg
cmpsl
or
cltd
stos
popf
daa
mov
daa
sarl
cmpsl
icebp
sub
xlat
fs
mov
pushl
sbb
mov
jnp
clc
aam
mov
sahf
stos
cmp
dec
jg
jmp
mov
loop
or
nop
sbb
sub
movsb
sbbb
mov
xor
sub
pushl
jecxz
xor
out
scas
pop
insb
sbb
rolb
mov
incl
jae
sbb
and
fdivp
dec
cs
adc
addl
mov
pop
faddp
mov
les
jbe
sbb
incb
aam
fisubrl
clc
adc
ljmp
adc
jno
out
mov
sub
jno
jo
mov
mov
call
xor
movsb
nopl
pushl
addb
aam
jg
push
push
jg
data16
lret
dec
push
adc
jo
cmp
push
sti
mov
cld
inc
daa
mov
shlb
movsb
cmp
adc
mov
fdivr
jmp
xchg
xchg
dec
test
data16
dec
pushf
testb
dec
and
push
fcoms
lods
testl
dec
mov
mov
mov
out
adc
inc
sarb
loopne
add
aas
inc
xchg
fwait
xor
sti
scas
sahf
sbb
into
mov
or
js
mov
cmp
sub
repnz
pop
call
es
pop
std
negl
js
dec
pop
cmp
cmpsb
cmp
and
mov
adc
fiaddl
and
ficoml
bswap
cmc
and
aas
shr
js
jecxz
push
rcr
call
xlat
gs
and
imul
ficoms
clc
pop
sub
mov
int
push
jmp
es
rcrb
push
lods
sbb
mov
addr16
jg
outsl
popf
lock
out
pop
xchg
negb
push
inc
and
mov
lret
loope
loop
int
cli
add
dec
xchg
adc
or
add
inc
jno
sti
in
mov
ja
pop
xor
nop
jno
ror
mov
adc
mov
cmp
test
mov
in
push
inc
adc
std
push
sub
sub
mov
aas
rcrl
push
stos
mov
jg
jg
and
aam
outsl
pop
sti
js
cmp
or
xchg
dec
arpl
jo
add
inc
xor
mov
loopne
pop
imul
stos
sub
mov
xchg
mov
cwtl
push
jmp
sub
dec
adc
xor
pusha
aaa
mov
movsb
inc
xchg
pop
sub
dec
rorb
sbb
mov
jp,pn
mov
mov
rolb
jmp
dec
or
dec
mov
inc
add
sub
jo
adc
pushl
clc
lcall
mov
mov
mov
roll
xor
jae
sub
ljmp
jb
cmc
popa
sub
ljmp
dec
xor
mov
or
clc
and
das
cli
jmp
testb
jge
mov
mov
mov
std
nop
cmovbe
gs
jg
jo
into
lock
call
xchg
aas
movsl
shrb
sarl
incl
jle
in
movsl
mov
icebp
imul
in
dec
movsb
icebp
mov
fcmovnbe
insb
repz
in
inc
call
push
repz
inc
stos
std
call
outsl
mov
lods
fnstenv
jmp
ljmp
pusha
dec
sub
or
adc
adc
sub
mov
test
sti
mov
inc
push
xor
sub
fwait
insl
sub
call
loopne
rolb
mov
cmp
push
xor
cmp
xor
mov
in
lods
pusha
arpl
sub
call
clc
ja,pt
mov
mov
ljmp
push
xor
inc
xor
icebp
inc
xchg
mov
sti
ds
out
sub
enter
jmp
dec
xchg
repz
mov
push
add
mov
push
loopne
push
enter
mov
seto
out
pop
fcomps
fidivrs
jmp
or
int
and
inc
movsl
icebp
xor
sbb
stos
call
mov
inc
incl
inc
icebp
or
jo
icebp
jnp
jo
stos
in
stos
adc
add
mov
push
cld
decl
add
and
lret
mov
aam
out
push
mov
lea
xor
flds
aad
mov
push
push
inc
or
mov
xchg
fwait
test
je
gs
pushl
cmpsl
sbbl
loop
or
lea
hlt
push
fldl
push
std
lcall
and
insb
pop
es
movl
adc
inc
mov
xchg
push
aas
out
pusha
call
adc
stos
cmp
ret
imul
cmc
jg
js
push
adc
mov
mov
lods
sbb
loopne
mov
fcoml
add
repz
xchg
mov
loopne
jle
lret
popf
dec
popa
mov
jg
ljmp
add
push
mov
ret
aad
push
inc
push
movl
push
mov
inc
lahf
iret
cmpsb
icebp
mov
dec
div
jmp
mov
decl
xor
inc
movsb
and
and
ljmp
sbb
das
cmp
fs
xchg
cpuid
ret
arpl
fs
inc
xchg
clc
aad
cli
std
fs
mov
test
imul
jle
repnz
pop
jge
iret
icebp
imul
jnp
fcompl
incl
push
sahf
xchg
adc
jmp
cs
decb
addl
lods
aaa
data16
push
fs
lcall
divb
jo
movsl
push
shrl
aaa
fistps
mov
dec
inc
xor
fsub
out
clc
ljmp
addr16
mov
roll
arpl
hlt
mov
lret
lcall
loopne
push
aam
stos
inc
ds
nop
adc
lret
push
jmp
mov
aaa
dec
aad
sti
std
aas
mov
mov
adc
in
or
addb
push
movsb
inc
xor
mov
insl
push
cmp
ss
into
push
inc
mov
push
incl
lcall
adc
sbb
add
or
pop
cmp
incl
mov
js
lahf
inc
je
or
fsts
clc
lds
inc
loope
idiv
stc
xchg
shlb
mov
sarl
sarb
fcoms
jmp
jl
mov
insb
mov
outsl
das
fmul
mov
sbb
inc
insl
mov
sbb
inc
ja
mov
mov
lahf
push
inc
pop
jnp
shrb
jb
test
bound
test
inc
pop
adc
daa
incl
stos
push
out
fs
pushl
adc
lds
xchg
stos
mov
inc
test
sbb
call
push
out
pop
push
pop
pop
insl
out
and
jne
cs
int3
mov
and
jmp
aas
pop
cmp
mov
xlat
imul
dec
cmp
fisubrs
data16
enter
or
call
pop
jmp
sarl
jne
pop
je
fwait
or
xor
les
outsb
loope
mov
addr16
push
pop
jns
in
adc
adc
stos
mov
mov
lcall
sub
shll
mov
cli
nop
or
pushl
or
jmp
into
mov
add
lahf
sub
xchg
jns
or
ljmp
ds
xchg
loope
cmp
xchg
lcall
gs
lock
xor
daa
dec
and
loopne
js
dec
lods
test
lds
call
addb
or
pop
in
jne
jmp
das
fcmovnbe
mov
sbb
lods
push
and
outsb
add
fcomip
mov
lds
outsl
xor
pop
aad
jmp
test
bound
mov
mov
jmp
test
outsl
pop
push
call
push
push
pop
pop
rclb
add
xchg
lcall
addr16
cld
xchg
cltd
sub
jmp
int3
mov
movsl
push
push
rolb
inc
js
jecxz
lcall
int
xor
xor
sar
inc
adc
icebp
mov
sub
sub
das
outsl
stc
jle
inc
xchg
pushl
xorb
fidivl
mov
hlt
sbb
mov
lods
mov
mov
dec
jb
dec
sub
push
and
popa
cmp
ss
clc
add
popf
add
jmp
mov
jl
mov
mov
jl
ja
outsl
sbb
jl
sub
mov
sbb
stc
sbb
sbb
sub
lret
mov
jmp
roll
popf
add
mov
flds
rolb
and
lea
aas
lret
das
mov
incl
cmp
xchg
gs
insb
out
sbb
rorb
mov
iret
call
icebp
subb
mov
lea
pop
xor
ja
decl
xchg
and
pop
cmp
jo
or
add
push
stc
ss
das
rol
inc
call
xorl
dec
dec
les
dec
in
pop
mov
push
outsb
xchg
mov
xor
clc
icebp
push
push
mov
ficoml
push
adc
or
aas
add
lahf
add
jge
mov
dec
mov
push
and
xor
adc
shlb
lcall
mov
inc
pop
aas
mov
mov
and
push
das
mov
mov
and
or
mov
push
pop
or
cmp
pushl
inc
popa
pop
mov
in
sub
ljmp
aas
mov
fwait
mov
repnz
lcall
push
into
sahf
mov
out
ficompl
popf
mov
adc
stos
add
sahf
push
push
loopne
incl
les
notl
ljmp
push
xor
fimull
sub
jns
icebp
clc
jp
sarl
sbb
fistpl
rorb
loopne
jge
std
sbb
loopne
shl
mov
jge
mov
hlt
adc
mov
jmp
xor
mov
in
mov
dec
mov
xor
xlat
add
loope
cmpsb
mov
call
mov
loopne
hlt
stc
cld
into
insl
es
mov
xlat
mov
lret
lret
push
push
dec
ljmp
int3
pop
jne
push
push
in
xchg
cld
push
add
mov
mov
fwait
mov
int3
pop
lcall
xor
mov
mov
mov
ds
fadd
jnp
jle
pop
ljmp
push
loopne
jbe
inc
scas
pop
mov
repz
fimuls
push
into
clc
decl
ljmp
negb
xorl
jle
daa
lret
orl
incl
adc
js
pushw
popa
in
test
rcrb
loopne
pop
cmp
xchg
mov
popa
inc
and
imul
jae
or
mov
push
repz
in
dec
cmpsl
loopne
mov
das
scas
push
mov
les
add
mov
stos
divl
faddl
test
xor
stos
mov
ljmp
movsb
sbb
test
pop
aam
call
icebp
cmp
xor
arpl
push
out
dec
into
xor
cmp
cld
decl
sbb
in
repz
dec
jmp
jmp
aaa
pushl
and
in
pop
mov
addr16
clc
pushf
add
push
aas
xchg
and
es
call
loope
inc
cmp
imull
ljmp
dec
or
jecxz
fwait
or
imul
ret
enter
adc
jmp
or
mov
add
jg
lcall
andb
push
mov
mov
push
mov
push
imul
cmp
and
jp
add
shr
in
mov
push
push
test
cli
adc
cmc
dec
push
xor
xchg
ljmp
sub
popa
in
stc
mov
jo
push
notl
pop
sub
mov
clc
jg
call
fcmovu
xor
xchg
mov
frstor
repnz
pop
pop
aaa
std
in
jo
cmp
inc
sar
incl
pop
cmp
jbe
xlat
rolb
shlb
jns
mov
cwtl
cli
sbb
std
andb
sub
call
stos
addr16
daa
lahf
mov
mov
xchg
sub
mov
leave
add
pushl
push
sbb
cmc
mov
les
dec
sar
pop
rolb
add
dec
inc
mov
or
mov
aas
ljmp
les
movsl
cmp
cmp
out
cld
sti
imul
fistpll
orl
stos
cmp
or
std
inc
xchg
sub
push
cmpsl
jnp
push
and
stc
cwtl
in
push
inc
enter
sub
dec
mov
js
loop
pop
push
out
pop
outsl
jno
push
js
inc
cld
adc
sbb
jecxz
ljmp
mov
movsb
jmp
lea
inc
jl
sub
stc
repnz
mov
call
int
sub
lods
or
sarl
cmp
jle
pop
ds
inc
je
add
shl
fucom
rolb
stc
sub
inc
aaa
pop
push
out
nop
and
mov
cli
mov
clc
pushl
mov
in
push
fwait
add
fs
or
clc
loope
aaa
aad
jns
call
jo
out
pusha
pop
cli
cli
fadd
ret
ljmp
iret
push
mov
insb
mov
and
hlt
jbe
fwait
mov
call
push
mov
stc
mov
or
dec
and
or
shll
in
jmp
inc
imul
adc
aas
out
stos
lds
mov
mov
lcall
inc
insl
sti
sbb
lods
jecxz
inc
cmpsb
and
push
iret
mov
mov
fisttps
pushl
imul
in
gs
insl
loope
mov
xchg
dec
dec
or
pop
inc
dec
scas
sub
adc
aam
ljmp
add
push
loopne
in
sub
mov
stc
call
dec
dec
push
pushf
adc
jnp
ds
add
outsl
clc
mov
cmp
adc
mov
shl
insl
test
cs
decl
mov
rorl
mov
adc
sbb
pushl
clc
mov
sub
sahf
jecxz
cmp
lret
incl
xchg
jle
mov
int3
in
in
out
adc
mov
add
pop
sbb
sbb
decl
jecxz
dec
mov
inc
push
or
sbb
mov
pop
int
pop
mov
add
push
cltd
xor
push
ret
sbb
dec
enter
mov
inc
mov
jle
dec
xor
or
sbb
aas
repz
loop
jmp
stc
and
cs
into
xor
dec
mov
lea
incl
je
pop
xchg
push
jo
test
xor
inc
mov
fstpt
decl
mov
ret
cmp
inc
and
cmpsl
mov
inc
lea
ljmp
adc
sarb
pusha
sbb
inc
pop
push
in
mov
xlat
test
mov
enter
fisttps
push
fstp
push
shlb
repz
xorb
in
or
insb
sub
xlat
aam
int3
nop
add
cs
xor
inc
ret
shll
fistl
pop
push
test
loopne
es
inc
subb
mov
decb
mov
nop
adc
jmp
sbb
mov
sbb
jbe
mov
add
xor
push
jbe
mov
push
and
lret
fstl
test
movsb
adc
mov
ss
add
mov
rcl
and
mov
repnz
xor
push
into
cmp
fbld
loop
bound
and
add
xor
ret
sbb
decl
rcr
les
in
aam
repnz
in
imul
mov
out
call
pushl
mov
inc
pop
ret
jp
xchg
pop
hlt
mov
int
divb
lret
pushl
inc
icebp
pop
daa
out
imul
rclb
sarl
jp
test
sahf
les
lcall
aam
xchg
push
ds
push
cmpsb
in
jl
add
outsl
jl
call
pushl
add
nop
xchg
ss
sbb
cmp
je
xchg
pop
test
push
sbb
data16
sub
mov
adc
push
ret
icebp
cltd
sbb
jns
and
xor
cld
js
dec
lret
or
in
mov
enter
jb
push
les
lods
mov
incl
dec
sub
notl
pop
xor
mov
push
ret
scas
cmp
pushl
xor
leave
mov
jecxz
xor
das
incb
mov
or
inc
int
lcall
mov
mov
sub
xchg
pop
sub
int3
inc
push
and
jns
aam
popa
aad
add
repz
neg
loope
cltd
data16
pop
out
inc
call
fisubl
mov
mov
cmp
lods
mov
jo
sub
add
decl
aad
dec
adc
xchg
mov
cmp
out
repz
popf
out
push
stos
sub
mov
mov
mov
mov
dec
or
adc
xchg
shr
mov
cmp
repnz
shrb
bound
rolb
jg
addb
lcall
mov
xor
rorb
test
xchg
dec
bound
mov
mov
je
dec
cltd
je
xchg
neg
lods
cmpsl
dec
lock
jmp
mov
addb
cmp
pop
push
pop
loope
mov
xor
andb
ljmp
mov
ljmp
push
movsl
dec
dec
mov
cmp
divb
ljmp
in
add
fidivrs
ret
mov
cmpsl
sbbl
cmp
pop
cld
pop
inc
push
stos
cwtl
lds
push
sbb
str
cltd
and
mov
pop
and
inc
inc
incl
add
inc
sahf
leave
mov
push
out
outsl
jo
add
xor
mov
jbe
add
lcall
filds
or
test
idiv
mov
aaa
push
adc
stc
les
cld
xchg
add
nop
loope
icebp
mov
int
jle
aad
test
sub
dec
xchg
jns
push
jmp
clc
push
inc
dec
leave
mov
sahf
cmpsl
lcall
jp
mov
fmul
jecxz
xchg
push
push
enter
dec
cwtl
shll
ret
fstps
ss
and
pushl
cld
mov
out
dec
pop
cmp
xchg
test
jb
lahf
outsb
je
add
sub
mov
push
jnp
jno
outsl
cmp
mov
mov
jg
lahf
sbb
fucomip
rol
shrb
jl
orl
fwait
push
jbe
out
and
clc
push
adc
into
dec
jg
add
jo
call
or
daa
push
xlat
cli
jb
mov
adc
pushl
push
sbb
les
cmpsb
cmpsb
lcall
je
scas
stc
iret
mull
sbb
scas
incl
xchg
inc
je
mov
loopne
sbb
or
fisttps
pop
inc
or
pop
cltd
stos
sahf
aaa
and
dec
iret
mov
in
insb
cmpsl
jmp
dec
out
xor
sub
popf
shrl
dec
mov
lcall
sub
jle
sub
sub
jg
add
push
fisubrl
mov
push
call
cli
fwait
mov
pop
add
call
lea
xor
lret
jg
std
leave
popa
gs
jecxz
dec
inc
pop
jle
dec
call
test
aaa
xor
jnp
decl
cld
shlb
rolb
mov
js
loopne
or
out
pushl
and
push
cmp
add
sub
xor
in
js
jnp
lcall
mov
dec
out
sbb
fidivl
push
out
mov
dec
lcall
xor
cs
cltd
pushf
lds
insb
push
out
das
mov
dec
cmc
iret
jmp
dec
dec
les
ljmp
jg
or
add
daa
mov
test
sub
pushl
mov
adcb
fisttps
ror
aaa
jle
sbb
in
xor
call
jmp
or
out
mov
sar
imul
imul
aam
and
enter
imul
jbe
jnp
jle
jg
push
cmp
test
xor
aad
push
xchg
daa
sub
push
and
filds
cmp
lods
jle
hlt
mov
ret
fbld
jp
or
movsb
int
dec
xchg
ljmp
add
mov
rcrl
inc
stc
shll
lods
jbe
mov
push
adc
int3
and
shll
in
mov
jne
jg
dec
inc
int3
adc
pop
icebp
lcall
mov
mov
das
dec
stos
fwait
or
push
jno
xchg
sub
cmp
int
lcall
pushf
sub
xchg
imul
jae
pop
ljmp
cli
aaa
movsb
push
dec
and
jl
bsf
pop
push
in
xlat
pushl
mov
cmp
pop
pop
out
add
rcrl
mov
adc
dec
sbb
mov
pop
test
xlat
lods
ds
xor
mov
xor
mov
sarb
cli
int
push
inc
sbb
adc
and
lcall
mov
enter
cmc
pop
xor
mov
inc
mov
dec
mov
cwtl
mov
xor
sub
adcl
test
xor
ljmp
inc
popl
or
dec
push
clc
push
push
aad
or
icebp
mov
js
sbb
push
shll
inc
inc
dec
icebp
ljmp
and
cmp
add
mov
cmc
dec
lds
imul
pushl
call
stos
imul
scas
jne
mov
fldl
inc
mov
aaa
dec
clc
adc
cld
out
data16
lret
and
add
imul
icebp
jae
mov
testl
test
adc
xchg
or
mov
mov
jg
fwait
into
push
syscall
push
fdivrl
pop
fld
jo
stc
xchg
xchg
call
sub
fs
dec
jnp
popf
or
aaa
cmp
and
jne
fcomip
jge
cmpsb
add
cld
pop
inc
in
data16
push
inc
dec
pop
inc
out
cmp
jmp
mov
stos
frstor
lea
mov
aad
cmp
test
sub
call
rcll
sub
stc
pusha
cmc
into
push
mov
aas
pusha
iret
sub
out
rolb
mov
mov
sti
sub
loope
mov
into
data16
mov
mov
pop
add
int
dec
mov
decl
data16
out
mov
push
mov
mov
cmp
pop
fbstp
call
jae
mov
imul
dec
ss
mov
or
es
ss
push
cmp
dec
js
jns
add
jmp
mov
inc
push
xor
push
or
or
pop
lcall
cli
adc
daa
rorl
out
xchg
popf
test
loopne
mulb
fcmovu
push
call
fnstenv
std
cld
mov
inc
jb
mov
mov
decl
jnp
movsl
dec
xorl
and
and
xor
inc
jmp
jp
imul
sub
inc
mov
xor
scas
out
add
dec
cmp
inc
pop
adc
mov
jmp
lods
xchg
leave
or
insl
fs
add
jl
pop
mov
or
loop
sbb
hlt
lock
mov
jo
bound
sub
fisubrs
les
mov
jb
out
nop
cmpl
inc
dec
rcrb
jg
push
dec
leave
mov
sbb
aam
pop
mov
inc
ret
ds
push
icebp
adc
loop
sbb
out
insb
mov
in
mov
out
outsb
mov
push
xchg
mov
lcall
ret
add
cltd
mov
arpl
xor
out
pop
dec
daa
adcl
or
mov
cmc
fbld
daa
cmp
mov
push
adc
daa
fsubrs
xor
cmp
pop
pop
cmc
sub
call
leave
out
gs
push
call
mov
adc
ljmp
jp
sbb
insl
and
movsl
in
mov
fistps
mov
jge,pt
addr16
cli
pop
fnstsw
ljmp
adc
in
movsl
jo
out
ret
add
lahf
fstpt
mov
cmp
sub
sar
lcall
mov
aas
or
in
xor
or
incl
jg
test
stc
mov
mov
sarb
test
cld
and
xor
fcmovnb
pushl
sub
add
insb
cmpsb
cmp
lods
sub
jnp
leave
ret
cmp
cmp
mov
pop
inc
cmpsl
je
incl
inc
dec
mov
mov
pusha
jmp
mov
addr16
ficoms
add
mov
fsubl
dec
jb
and
mov
mov
int
sub
insl
sahf
add
les
ret
mov
es
fdivr
movsl
nop
popf
es
dec
jg
mov
mov
pushl
lret
or
js
jno
xchg
loop
dec
adc
inc
popa
fcomp
sbb
jg
pushl
mov
out
mov
xor
pop
sbb
pop
jge
cmp
outsl
pushf
or
mov
insb
push
movsb
sbb
pop
cmp
lcall
push
dec
or
push
push
scas
push
xchg
pusha
fildl
out
jg
mov
xchg
in
inc
dec
mov
mov
xor
test
or
inc
imul
enter
sub
jg
and
or
pop
add
add
mov
call
xacquire
pop
sahf
xchg
testb
inc
cmc
xchg
xor
lret
call
xor
xchg
add
mov
jl
imul
aam
sub
call
mov
repz
fisttpll
inc
sbb
add
cli
aaa
out
xor
fcomip
cmp
sub
aam
shl
hlt
xor
call
xchg
sbb
or
sub
clc
jb
inc
mov
ljmp
xor
inc
sub
ljmp
jae
movsb
daa
enter
xchg
aas
fneni(8087
pushf
lods
or
and
fldcw
inc
push
popf
dec
cli
mov
jo
mov
fadds
mov
test
dec
aad
and
popf
popl
aas
adc
push
outsb
loop
cmp
cmp
mov
inc
push
xchg
pop
push
test
hlt
sub
jo
js
pop
xor
insb
inc
push
dec
shll
push
icebp
inc
aaa
pop
mov
std
incl
addr16
mov
xchg
and
xchg
inc
xchg
loope
xor
fists
cmpsl
sbb
dec
into
pop
cmpsb
pushl
mov
rcrb
mov
jae
loope
mov
decl
aaa
and
mov
mov
fnstenv
xchg
xchg
mov
jns
mov
push
call
popa
je
jb
mov
pop
jno
push
mov
sahf
jmp
insl
pop
jbe
cli
ljmp
jmp
movsl
les
xchg
ret
mov
adc
add
mov
and
sbb
cmp
pop
out
and
ret
scas
jl
mov
out
xor
call
mov
pop
adc
pop
out
add
mov
hlt
inc
sbb
shll
cmp
incl
xchg
cmp
mov
xor
jne
adcl
push
cmp
add
pushl
dec
les
cs
adc
ljmp
and
cmp
mul
pop
addr16
into
pop
clc
arpl
mov
mov
mov
lock
jmp
and
mov
inc
xor
push
aas
iret
hlt
fiadds
adc
sub
incl
repnz
aam
fadds
rolb
jo
add
mov
mov
arpl
jg
adcb
jg
psraw
jecxz
jp
int3
dec
subb
jae
divl
incl
sbb
lds
lods
xchg
push
dec
and
getsec
pushf
inc
daa
pop
je
hlt
aam
push
out
sbb
jns
cmp
call
sbb
mov
aas
pusha
hlt
filds
in
shll
mov
mov
sbb
loope
jge
ljmp
not
push
sbb
sti
cmp
mov
or
daa
fstl
decl
push
sub
pusha
cmpsb
push
outsl
push
es
inc
pmulhuw
aad
fs
sar
mov
mov
rclb
lcall
sbbb
and
ljmp
mov
jmp
mov
fidivl
jmp
mov
pop
xchg
and
aaa
sbb
cmpl
jmp
subl
mov
mov
pop
int3
cli
sbbl
push
insb
lcall
and
push
xor
mov
and
lods
mov
cmp
xchg
push
dec
out
xchg
call
loop
pop
jbe
mov
lcall
jmp
ficoms
mov
jge
jg
mov
and
pop
ret
outsb
fisttpl
fimuls
push
mov
inc
push
dec
test
xchg
fs
popf
xchg
push
xchg
rorl
xchg
dec
ret
movl
dec
mov
incl
in
jecxz
mov
jp
in
decl
loope
inc
xor
dec
data16
inc
ja
mov
call
push
fwait
jle
fbstp
inc
sbb
lcall
rclb
and
xchg
fstp
fsubrs
test
lods
adc
call
dec
dec
je
sbb
inc
adc
pushf
jno
xchg
std
fisttps
test
xchg
out
shr
ret
mov
call
loop
adcl
jge
leave
and
jae
in
xor
out
mov
dec
push
inc
aaa
dec
imul
mov
push
lods
stc
aam
sahf
xchg
push
mov
xor
call
sub
mov
in
ljmp
shl
mov
mov
add
cmp
imul
dec
adc
gs
push
loop
repnz
addl
adc
xchg
dec
mov
sbb
lret
cli
inc
out
pop
fiadds
pop
dec
sar
jge
das
cwtl
fisubl
mov
data16
mov
inc
shll
push
mov
les
loopne
sbbb
mov
sbb
adc
add
pop
aam
sub
decl
push
enter
push
push
cld
xor
push
dec
subb
inc
shll
mov
add
lcall
popf
push
stos
jns
add
shr
inc
repz
std
stos
call
mov
jmp
sbb
add
into
arpl
imul
into
shll
call
cs
add
arpl
loop
or
dec
sub
add
jbe
dec
jae
ljmp
int3
enter
inc
ret
sbb
cmpsl
xchg
mov
cmp
leave
clc
mov
js
xchg
aaa
sub
loopne
xor
and
mov
or
pop
push
je
fsubrl
push
xor
ljmp
jp
ret
imul
sbb
movsb
movb
add
mov
lcall
lods
clc
cmpsl
sahf
test
cli
sub
xchg
cmp
mov
stos
pop
pop
xor
pop
rcrb
shll
mov
fnsave
je
jnp
incl
stc
xor
lea
hlt
and
and
mov
fildll
das
into
ljmp
aaa
fmull
ret
xor
in
or
cmc
dec
pushl
or
imul
inc
lahf
stos
inc
jb
mov
andb
in
mov
cmpsl
leave
inc
sbb
jecxz
shl
jae
lea
or
jmp
cs
jbe
ljmp
sbb
ret
mov
mov
cmp
lret
cmp
cld
dec
push
sub
mov
jno
add
lea
lret
hlt
push
incl
mov
std
inc
xchg
test
cmpsl
mov
dec
adc
decl
rcrb
popa
iret
hlt
pushl
and
jbe
daa
or
cmp
inc
mov
filds
cmp
jmp
adc
pushl
sub
sbb
add
and
mov
mov
lock
mov
fs
cmp
cmpsb
les
movsb
nop
pushf
push
adc
hlt
incl
jnp
pop
jae
cs
lods
dec
pop
sub
mov
sbb
je
jle
call
cmp
insl
mov
fcmove
lods
in
cltd
data16
pop
fidivs
lcall
mov
inc
jnp
xor
imul
dec
lea
mov
inc
inc
mov
lcall
mov
sub
sahf
loope
cmp
adc
sbb
pop
popf
iret
pop
or
andnps
lcall
or
popa
shrl
out
xor
out
xlat
iret
push
ss
rol
jg
adc
jge
push
inc
cld
pop
loopne
nop
mov
lds
push
stos
push
in
push
xchg
inc
xor
mov
jmp
cmp
leave
sub
or
sbb
xor
movsl
lahf
les
outsl
mov
push
lahf
pop
loop
mov
test
xor
and
mov
lret
mov
or
sub
xlat
bound
std
call
cmp
jle
ret
mov
xor
es
ljmp
add
in
mov
pop
ret
mul
xor
fdivrl
xchg
rorb
sbb
inc
and
add
call
lahf
or
addr16
std
fstpt
mov
mov
fidivrs
adc
adc
imul
mov
ljmp
out
adc
cmp
out
xchg
pop
mov
mov
mov
mov
stc
inc
xlat
and
xchg
enter
push
dec
inc
pop
dec
add
xchg
orb
shll
out
fdivl
adc
xchg
pop
fnstsw
cmp
lods
sahf
js
std
lret
enter
mov
sarb
rorl
decl
mov
arpl
cs
clc
int
popa
cmp
xchg
subl
xchg
sbb
jmp
icebp
jno
push
lods
lock
xor
popl
push
mov
dec
in
jge
loop
adc
out
sahf
fucomip
pop
jne
inc
fdivs
out
lcall
scas
imul
sub
jo
lea
icebp
gs
aad
ja
pop
sbb
jmp
clc
fdivs
loope
stc
stc
fs
or
push
fcoml
aaa
std
insb
out
adc
inc
stos
mov
insb
jbe
pop
cld
lcall
mov
mov
sbb
ljmp
loopne
fidivrl
jb
xlat
popl
sub
jb
scas
test
adc
iret
daa
pop
sti
jg
mov
push
js
aaa
jns
dec
xlat
repnz
jo,pt
rcl
fbld
outsl
das
int
pusha
jle
mov
cs
popf
lcall
jg
lcall
out
lahf
ret
sahf
push
in
and
int3
xor
mov
push
movsb
into
push
ljmp
mov
lods
rcl
jl
xchg
mov
xor
gs
mov
adc
ljmp
add
in
mov
lods
fists
dec
mov
arpl
sub
sbb
dec
movsl
decl
sub
mov
movl
jbe
aas
sub
mov
dec
stc
xchg
in
mov
cmp
ja
seta
xor
gs
sbb
jns
ss
sbb
rcrb
ds
jmp
push
clc
sub
mov
xor
push
adc
sub
insl
jmp
mov
jo
adc
jp
dec
call
icebp
aam
or
push
mov
xor
push
mov
into
hlt
xlat
lret
xor
cmp
es
add
fstps
inc
mov
mov
imulb
leave
or
fdivl
mov
addr16
into
fbld
mov
cltd
push
lods
mov
je
cmp
or
call
xor
shlb
jae
pushf
ljmp
rcl
jle
cmpsb
and
push
jmp
icebp
xor
dec
sub
push
outsl
jbe
dec
inc
add
cmp
lods
push
cmc
stos
lds
push
or
scas
sbb
mov
lods
pop
inc
or
shlb
sbb
pop
mov
sbb
imul
mov
cmp
sti
leave
pop
adc
mov
stc
jl
mov
xchg
xchg
nop
stos
pop
mov
adc
jb
aad
pop
cs
inc
push
xlat
in
cmp
push
jge
xor
arpl
mov
jecxz
pop
cwtl
push
dec
push
add
imul
mov
jle
jae
lods
sahf
sbb
fptan
dec
xchg
mov
cmpsl
in
imull
pop
int3
sbbb
pushl
inc
xchg
add
nop
repz
jecxz
push
repz
or
pop
mov
mov
incl
pop
inc
push
adc
mov
sbb
packuswb
sbb
mov
imul
das
mov
push
mov
mov
push
in
je
mov
dec
mov
pushf
lock
pushl
xchg
jecxz
pop
ffree
fwait
mov
shll
lahf
outsl
inc
pop
in
jnp
pushl
shll
push
or
and
outsb
ljmp
jae
jecxz
mov
push
or
js
cmc
leave
add
rolb
hlt
es
mov
decl
cltd
adc
cmp
lds
testb
xchg
sarb
sbb
lods
adcl
inc
ret
sub
mov
andl
dec
push
jno
dec
pushf
je
arpl
jge
call
lcall
es
incl
push
mov
push
mov
in
cmp
cld
pop
das
out
loop
sub
mov
jle
cwtl
fcomip
push
and
add
dec
and
in
and
and
mov
in
and
inc
mov
jg
mov
jle
andl
push
dec
mov
sub
inc
out
lcall
mov
nop
cmp
les
pushf
adc
hlt
setle
cltd
fistpl
pushl
neg
jl
dec
add
cmp
dec
dec
add
jnp
push
sar
cmpsb
hlt
icebp
in
add
ss
testb
xor
push
sbb
repz
test
enter
push
jl
xlat
bound
cltd
repz
sub
cld
push
sub
xchg
call
insl
nop
movsl
or
jg
cli
mov
xor
sub
scas
cmp
xor
xor
loope
incl
aas
leave
xchg
iret
sub
addr16
jl
scas
and
mov
jb
cs
out
movsb
and
lcall
sub
lock
in
daa
push
aaa
mov
enter
ret
and
xchg
push
dec
ds
les
dec
imul
add
sbb
shrl
arpl
pushf
mov
pop
cmc
je
sahf
out
inc
sub
decl
int3
mov
sub
ds
push
test
mov
adc
mov
cmp
xor
jbe
bound
xlat
int
out
call
add
in
or
movsb
push
daa
sub
in
lods
adc
inc
scas
das
in
rol
mov
cmp
negb
sub
sub
fwait
jecxz
call
pushl
in
sti
fsts
inc
cmpb
sbb
add
jp
fwait
add
xlat
fisttpl
adc
js
loop
movsb
dec
inc
mov
call
or
inc
aam
adcb
out
js
ljmp
push
into
xchg
xor
inc
jo
cmp
int3
jns
loopne
icebp
or
add
loope
xchg
test
ficompl
adc
out
cmp
dec
inc
sbb
stos
lret
fbld
jae
decl
imulb
and
lds
mov
hlt
loopne
cmp
push
out
hlt
ljmp
lds
stos
jmp
adc
push
in
lahf
mov
cli
rolb
faddp
push
imul
fmull
or
mov
inc
dec
adc
test
dec
inc
ret
jmp
jge
fbld
push
lods
enter
inc
nop
xor
lds
mov
push
sub
mov
fs
fiadds
jae
jl
mov
adc
xor
mov
cmpsb
sbb
in
rcl
mov
stc
pop
cltd
mov
xchg
xchg
and
incl
movb
incl
xchg
lock
jl
leave
loop
popa
xor
imul
and
xor
aas
jg
ljmp
push
dec
xor
xchg
lcall
and
xor
movsb
movsb
ljmp
call
inc
out
or
jne
aam
cmp
pushl
ja
push
dec
es
ret
stc
jg
aam
cld
ljmp
mov
mov
ja
outsl
push
popf
mov
repnz
xchg
je
cmp
ss
mov
movsb
cmp
mov
test
adc
pop
sbb
adc
add
pop
add
adc
push
sub
mov
aam
mov
ljmp
pusha
mov
hlt
rclb
pushl
das
lds
dec
inc
pop
addr16
pushl
adc
int
bound
mov
nop
js
dec
sub
test
or
push
pushl
sahf
pop
prefetch
xchg
icebp
pop
out
mov
lcall
cmp
mov
aad
xlat
lcall
fs
aas
inc
shrb
pushf
adc
lret
pop
mov
push
mov
xor
mov
sub
decl
stos
inc
mov
push
add
imull
pop
cld
mov
call
push
fdivrs
lods
mov
ret
cli
repz
cmp
std
jg
je
aam
in
fists
bndstx
pop
pop
or
add
lock
xchg
je
call
push
insl
test
xor
repz
std
mov
das
rclb
int
dec
arpl
mov
lods
ficoms
shlb
repz
push
push
out
leave
scas
jmp
lret
std
push
repz
lcall
and
pop
cltd
and
sub
imul
push
mov
push
decl
jbe
and
outsl
jg
rclb
cmp
in
pop
nop
or
mov
pushl
popf
mov
outsl
ss
mov
cmp
ds
push
fidivrs
add
decl
repz
sti
xor
mov
push
int
cltd
addb
in
mov
adc
mov
imull
and
call
decl
fwait
add
ds
xchg
add
int3
fisubs
mov
mov
push
cmp
sbb
pushl
shr
mov
pusha
cmc
and
cld
gs
mov
test
inc
nop
loop
and
mov
or
sbb
imul
sub
lahf
jge
mov
xchg
cltd
lret
and
add
jb
mov
mov
in
adc
mov
stos
enter
out
cmp
dec
jle
dec
fisubrl
incl
jns
mov
sar
scas
fdivrp
dec
push
sub
stos
xor
push
in
push
sub
out
xor
xchg
inc
jb
inc
sub
add
add
inc
cmp
lcall
sarb
out
iret
jns
sub
pop
jp
pop
dec
mov
adc
iret
jno
jns
stos
push
daa
ljmp
push
fwait
dec
sbb
lods
mov
add
pop
adc
insl
xchg
jmp
das
test
pop
aas
cld
decl
jnp
jne
imul
stos
push
faddp
popa
test
lea
push
xlat
test
mov
mov
scas
jle
xchg
int
sbb
lods
mov
cs
inc
sti
xchg
push
sbb
and
ds
push
int
pop
and
fsubl
stc
push
add
imul
ljmp
subps
dec
inc
inc
inc
mov
jge
xchg
cld
daa
push
push
ret
pop
out
pop
jmp
nop
xor
sub
add
dec
xchg
cs
xchg
sub
ljmp
cli
imul
lock
fcmovnu
add
outsb
call
outsb
push
inc
jb
mov
xlat
es
add
lea
lods
in
mov
mov
imulb
bound
ja
sbb
lods
mov
dec
mov
pop
mov
jbe
pushf
xor
sbb
in
push
mov
and
mov
gs
lcall
dec
sbb
out
stos
and
or
mov
ljmp
pop
xor
incl
xchg
test
stos
push
aaa
and
jbe
aaa
jl
mov
jmp
mov
in
xchg
stos
xor
push
fimull
imul
sub
clc
dec
arpl
fnsave
popa
cmp
call
dec
jle
xlat
pusha
popa
out
jae
stc
movsl
sbb
notb
neg
mov
je
ljmp
imul
inc
sbb
outsl
and
dec
out
fisttpl
enter
ljmp
jmp
pop
inc
xor
aas
cmp
push
mov
push
mov
cmpsl
ret
shll
pushl
cmc
loop
pusha
jge
or
dec
ret
in
cwtl
xchg
arpl
incl
push
lds
and
xor
cmpsb
adc
into
cli
decl
jo
inc
test
cmp
lods
adcl
out
dec
cmp
fs
ljmp
cmpsb
xor
adc
out
bnd
xchg
stc
lcall
add
mov
dec
mov
fsubrs
fwait
ds
or
sbb
out
adc
lcall
mov
cmp
decl
rcl
lret
out
test
lea
pop
sbbb
jl
stos
cwtl
call
leave
dec
mov
push
adc
jl
xchg
jecxz
lods
sahf
seto
or
in
sbb
js
add
pop
mov
pop
cwtl
cmp
dec
iret
mov
mov
cld
in
incl
leave
fists
and
xor
push
movsb
cmp
decl
std
dec
push
push
pop
clc
push
sbb
stos
mov
sar
sbb
stos
jnp
xchg
mov
popf
mov
int
jp
adc
pushl
int3
adc
mov
inc
out
adc
ficomps
cld
imul
jmp
push
mov
push
js
jmp
or
mov
pushl
xchg
add
idiv
cs
mov
push
xor
push
shll
add
call
lods
rorb
mov
fnstsw
adc
adc
xchg
mov
cmp
lcall
mov
push
mov
mov
shrl
das
in
shll
outsb
shrb
dec
fstp
push
fistpll
aas
out
jg
cld
bound
pmullw
sbb
iret
stc
mov
decl
mov
pushf
icebp
addb
gs
addr16
decl
jg
stos
rolb
jo
xor
pop
dec
lcall
sub
inc
sbb
inc
shrb
adcb
jmp
fs
adc
out
repnz
insb
ss
call
mov
add
push
cltd
and
xchg
je
dec
xor
js
adc
cltd
inc
xchg
inc
jo
inc
scas
and
shll
into
mov
and
call
inc
es
loopne
mov
lock
sub
dec
cmp
and
mov
incl
sti
mov
or
cmp
das
out
mov
clc
test
sub
cwtl
dec
fwait
sub
xchg
sub
out
cli
cmpsl
pusha
mov
shl
rclb
or
mov
stc
shrb
xchg
aaa
std
call
les
jb
ret
inc
leave
xor
push
add
inc
mov
inc
mov
xchg
adc
stos
jns
fsub
and
call
add
add
int
cmp
sbb
sbb
mov
ljmp
mov
loope
adc
mov
fidivl
xchg
add
mov
push
loop
outsb
xchg
stos
lds
jmp
test
out
in
aad
push
mov
jno
fcompl
or
cmp
test
dec
pushl
sti
mov
fs
or
mov
jecxz
jp
cmpsl
cmp
insl
test
shrl
test
ds
decl
movsb
pop
adc
mov
ret
je
pop
and
push
call
mov
sbbl
fcomp
jecxz
inc
mov
cmc
es
push
xor
sti
cltd
cmp
xchg
shl
sub
mov
pop
dec
in
ja
lcall
push
mov
cmc
jne
inc
mov
lds
psrad
cwtl
lods
add
decl
push
mov
movsb
lret
sbb
mov
xchg
js
fcomip
cmp
dec
lods
or
rcrb
dec
cld
pop
lcall
cli
pop
test
insl
adc
fs
push
jno
push
adc
jmp
xor
dec
hlt
sub
pop
mov
or
cmpsb
push
in
aam
mull
repnz
sub
call
cmp
lods
out
out
dec
negl
fs
popa
cmp
inc
js
jg
jmp
int
jno
movsb
xchg
data16
adc
popf
push
add
xor
push
sbb
pop
lret
push
xchg
das
dec
sahf
inc
sub
arpl
jle
and
inc
push
je
enter
decl
lock
popa
call
mov
sbb
repz
rolb
pushl
adc
mov
xchg
enter
mov
sahf
pop
dec
add
cmp
adc
jp
call
aad
mov
cmc
in
sbb
pushf
xor
sub
add
dec
mov
or
mov
xlat
push
test
mov
ljmp
mov
fcmovne
stc
mov
repnz
out
lahf
push
and
popf
xchg
insb
pop
jb
decl
mov
or
or
aaa
adc
insb
das
inc
add
inc
or
lret
ljmp
xchg
je
stc
pop
lods
loop
pop
lock
in
fidivrs
fsubrl
xor
aad
xchg
out
adc
push
mov
jo
cmpsl
pop
divl
inc
lahf
ret
pop
call
aad
fs
cmp
add
mov
mov
int3
mov
hlt
cmpl
xlat
xchg
mov
je
mov
add
xchg
addb
test
dec
dec
out
repnz
inc
jmp
icebp
cmpl
fadd
mov
insb
add
stos
sahf
mov
xlat
mov
xchg
in
xor
pop
idiv
imul
cld
decl
mov
dec
sub
dec
push
mov
out
cmp
jl
dec
jg
mov
push
aad
jnp
mov
adcb
push
cli
insb
int
lock
cmc
and
dec
or
std
and
cmp
std
adc
ljmp
lods
std
mov
cs
inc
fldt
dec
clc
cwtl
or
cmp
dec
pusha
push
mov
movsl
insl
inc
jl
test
fldenv
aas
hlt
add
jg
shlb
or
pop
movl
inc
outsb
nop
aad
in
aas
not
cmp
add
decl
data16
mov
jnp
fstpt
jg
sub
pop
lods
cmp
btsl
mov
je
pop
aam
clc
sarl
mov
cmp
into
imul
push
mov
xor
sbb
add
cmp
jle
sub
xlat
mov
mov
jnp
dec
sub
sahf
aaa
add
jo
mov
test
test
andl
xchg
sub
test
pop
fcmovnb
add
add
mov
add
sbb
jns
and
mov
pop
repnz
add
jg
add
movsl
dec
pop
jge
xor
mov
mov
incl
jno
gs
cmp
mov
adc
stos
mov
and
mov
cmc
mov
jg
in
xor
or
push
je
out
repz
mov
out
jp
push
pop
cmp
test
xor
sti
out
jg
push
pop
add
mov
inc
fcmovb
test
mov
or
aad
aam
mov
cmp
test
mov
sub
adcl
jno
or
jnp
inc
mov
and
mov
inc
in
test
jb
cli
push
push
dec
push
lcall
cltd
test
mov
into
pcmpeqd
sbb
jmp
incl
cld
fcmovnb
mov
pop
pop
ljmp
and
ja
lcall
sbb
xchg
mov
cli
shrb
inc
fisttps
sbb
ljmp
jmp
mov
test
inc
push
outsb
mov
fnstsw
mov
daa
clc
fbstp
push
std
jmp
test
add
push
mov
mov
out
inc
xlat
push
sbb
clc
lcall
test
xchg
dec
push
arpl
inc
js
enter
mov
call
add
fdiv
xchg
inc
fdivs
test
dec
dec
push
mov
lcall
jne
sarl
sub
negb
lcall
loope
notl
mov
dec
mov
call
sbb
pop
mov
dec
ret
lcall
js
pushl
inc
movsb
xor
jl
or
scas
cmc
mov
and
dec
das
into
xchg
mov
pushl
nop
insb
mov
cmpb
pop
out
mov
movsb
push
js
jbe
pop
fstpl
es
pop
imulb
icebp
mov
adcl
pop
add
dec
idiv
jp
test
fists
in
cli
popa
inc
sahf
dec
add
xor
ret
pop
xchg
lret
shll
psubw
test
cld
pop
jmp
cmp
push
cld
mov
ret
sahf
clc
pop
cld
mov
mov
dec
cmp
repz
cli
and
insb
inc
inc
inc
loopne
inc
mov
mov
xor
xorl
movsb
jno
frstor
add
stc
andl
outsb
shr
sar
lock
jle
add
scas
in
sub
xchg
pop
jb
push
das
cmpb
ljmp
mov
aaa
repnz
pusha
jnp
clc
loope
or
xor
sbb
and
xor
mov
test
xchg
loopne
testb
dec
adc
mov
lcall
call
stos
jnp
lods
mov
add
enter
nop
mov
jns
rolb
push
mov
dec
inc
dec
add
add
addb
ret
fcompl
rorl
call
rcrl
into
cltd
das
cli
cmp
pop
and
ja
popf
stos
xlat
std
mov
inc
mov
cmp
les
jmp
add
stos
inc
loopne
pop
pushf
clc
addr16
mov
xchg
pushf
lret
ss
xchg
inc
mov
adc
test
loop
mov
call
ljmp
add
sub
dec
aaa
push
jp
movsl
repz
adc
decl
cmp
psubusb
mov
lods
ret
pop
push
cld
inc
cmc
lock
pop
jns
mov
adc
ljmp
or
pop
pop
cmpsb
aam
pop
int
mov
call
dec
push
lret
xor
pop
in
les
pusha
pop
movsl
mov
ret
aad
mov
cltd
adc
add
adc
mov
sub
jbe
mov
sub
in
aad
enter
int3
orl
cld
mov
mov
pop
lock
call
stos
outsl
lds
ljmp
sbb
push
ret
clc
dec
aas
fs
lcall
scas
mov
fsts
mov
in
mov
jno
lods
or
shl
push
ljmp
adc
repnz
rol
mov
push
call
pusha
lcall
je
cmp
cmpsb
pop
cmp
cmp
in
rolb
inc
mov
negb
xor
call
sar
aas
and
dec
bnd
xchg
dec
push
mov
and
mov
push
inc
in
xor
out
cmp
cmpsl
std
pushl
push
in
stos
ds
std
dec
aad
xchg
test
js
and
sahf
dec
lock
cltd
sbb
inc
jae
push
inc
cmp
xor
or
lock
jns
jmp
dec
scas
mov
mov
loope
add
popa
dec
mov
fisubl
incl
dec
out
pusha
out
mov
fldcw
filds
fs
outsl
lea
pushfw
stos
cld
pop
in
push
mov
incl
pop
xor
shlb
cli
pop
mov
das
call
lods
sar
je
push
jnp
cltd
fsin
pop
lock
fcmovbe
jge
cmp
adc
call
outsb
xchg
sti
xchg
cmp
pop
filds
push
lret
xchg
stos
adc
mov
or
aas
pop
sub
sarb
add
pushl
push
mov
lcall
dec
ficomps
rcrb
hlt
popf
jae
lahf
cwtl
fwait
mov
mov
dec
push
sub
sub
push
cwtl
lods
mov
pop
cmp
subb
jmp
dec
das
mov
aaa
cld
mov
std
mov
scas
ja
clc
push
pop
dec
push
popf
push
jp
mov
arpl
pop
or
clc
lcall
and
jns
inc
xor
mov
ljmp
mov
iret
xor
jb
xchg
shrl
lcall
cmp
jmp
faddl
inc
stos
ljmp
sahf
test
dec
imul
ljmp
sbb
cwtl
add
scas
xchg
push
incb
loop
cmc
fnop
or
mov
xor
jmp
pop
ljmp
sbb
mov
lahf
dec
shrl
dec
xchg
pop
insl
or
or
inc
inc
fcomip
mov
test
jle
orb
call
adc
inc
add
fadd
add
inc
cwtl
ror
xchg
aaa
cmp
fwait
mov
sub
pop
jg
js
push
push
arpl
jbe
cmpsb
dec
pop
cli
in
orb
add
loop
cli
sbb
pop
cld
mov
mov
cld
xor
xchg
jg
ljmp
cmp
sub
out
mov
ds
adc
or
pop
and
push
ljmp
mov
or
sub
outsl
xor
ja
in
daa
mov
jg
int3
jo
sti
xorb
lds
adc
add
push
dec
subb
call
call
in
jmp
mov
pop
arpl
cmp
xor
xchg
sbb
mov
decl
cwtl
push
dec
push
inc
fisttps
ret
jne
call
jne
icebp
jne
and
cmp
pop
hlt
cmpsl
sti
mov
mov
mov
clc
jg
cmp
out
or
add
insl
xchg
pop
shl
or
hlt
mov
ljmp
notl
lods
fwait
inc
ror
sbb
adc
pusha
orl
js
or
ja
xchg
decl
jmp
sarb
add
stc
cld
fsubrl
xlat
mov
push
mov
mov
icebp
dec
into
dec
das
shll
cmp
fstpt
loope
or
call
inc
dec
jle
and
aam
adcl
xchg
cmc
or
pusha
loope
js
push
cvtpi2ps
ficompl
dec
sbb
fwait
pop
push
stc
loop
lds
xorl
adc
jne
decl
xor
xor
pushf
pop
mov
inc
gs
dec
mov
shrb
in
hlt
xor
fimull
dec
subl
cwtl
loopne
mov
cli
push
mov
jo
lcall
push
shr
aas
inc
fistl
cmp
mov
imul
mov
sarb
add
inc
xor
inc
pmovmskb
lcall
mov
mov
fbld
std
pop
hlt
jmp
clc
sbb
mov
ja
lahf
sbb
and
lods
jnp
pushl
cmp
pop
jo
lcall
jno
xchg
test
ds
addr16
push
mov
lret
loopne
jge
mov
les
cmp
js
ret
sbb
jns
pushl
js
xchg
cmp
xchg
or
iret
mov
pop
call
adc
leave
lods
cld
popf
call
rorb
loopne
out
pop
inc
rol
xchg
and
pop
adc
fmuls
nop
add
jg
ljmp
or
push
inc
jg
push
mov
sbb
jg
jp
mov
je
in
jb
mov
xchg
jmp
imul
mov
adc
sub
or
fadd
jbe
notb
ud0
call
adc
mov
repnz
popa
dec
outsb
jbe
sbb
mov
mov
fwait
push
das
mov
incl
sbb
pop
jae
int3
push
xchg
mov
add
das
sbb
jnp
cmp
cwtl
pop
xchg
cs
add
shrb
dec
mov
adc
adc
inc
lods
and
test
aas
clc
mov
sarb
jg
fisubrl
dec
imul
dec
test
std
push
or
inc
das
aam
push
inc
cli
decl
lods
int3
scas
cli
cltd
out
rcrl
fisubrl
cmpsb
xor
ljmp
insl
mov
roll
pushf
or
aad
icebp
cmpsl
push
mov
add
xchg
inc
push
or
mov
outsb
pop
incl
mov
in
enter
loop
les
push
mov
fs
fstps
negb
decl
aas
jge
ljmp
pop
push
lods
xor
jecxz
add
mov
or
xlat
cmp
cmp
push
push
pop
iret
and
inc
nop
mov
test
push
xlat
out
add
mov
push
out
sub
xchg
push
sbb
jg
jg
in
pop
dec
mov
in
mov
addl
inc
dec
ret
outsl
xchg
push
mov
push
sbb
ret
mov
dec
test
fidivrs
outsl
sbb
dec
add
push
pop
push
mov
xlat
inc
cmp
sbbl
mov
mov
incl
js
roll
mov
inc
xor
jne
loopne
xchg
or
mov
inc
daa
jnp
pop
xor
ret
mov
stc
adc
sbb
pop
sub
je
sbb
icebp
dec
push
push
jp
jo
add
test
pushf
stos
adc
and
mov
sbb
inc
in
mov
mov
ja
inc
jge
enter
adc
sub
and
cli
stos
xor
xlat
fsubrs
loopne
xor
inc
mov
decb
mov
andb
xchg
repz
mov
sub
rclb
xchg
enter
ret
nop
bound
call
rcll
xor
ljmp
aas
pop
push
mov
pop
lahf
mov
movsl
insl
jecxz
jp
incl
mov
fsubrl
pop
pop
mov
cmp
shlb
cmp
aaa
test
decl
test
loop
aam
loopne
test
jo
and
movb
add
scas
ret
call
incl
roll
dec
mov
shr
push
idivb
incl
rcrb
scas
jg
mov
hlt
ja
mov
mov
fcomip
scas
pop
mov
in
fcmovbe
push
sbb
stos
popa
and
cwtl
mov
lcall
inc
xlat
call
loopne
sub
cmp
ja
out
jg
cmp
mov
jmp
add
cwtl
das
lret
pop
lea
cmp
pop
xchg
icebp
test
lea
adc
pushl
jb
rcll
into
cmp
jne
pop
aad
mov
mov
shr
lcall
sbb
shll
inc
out
mov
add
fisttps
or
movsb
xchg
cmp
cmpsb
popa
addl
xchg
sub
insb
xor
in
push
sbb
adc
dec
mov
aam
cld
sub
mov
es
pop
jecxz
push
popa
rcrl
ljmp
mull
out
add
shl
xlat
push
push
adc
inc
ret
fwait
stos
in
pop
mov
jmp
xchg
pop
push
xchg
nop
ss
popf
in
cmp
idiv
fnstsw
inc
repz
out
push
incl
call
push
mov
push
aas
fistpl
dec
adc
jnp
pop
cmpsb
xor
add
lcall
mov
xlat
inc
cmp
cmpsb
adc
popa
jp
cwtl
sbb
and
cld
lcall
in
xchg
daa
pop
in
inc
and
xchg
or
lret
jns
and
jmp
jp
je
dec
mov
scas
sbb
pop
sbb
push
add
fsubrl
dec
movsl
stos
mov
lea
mov
adc
sbb
lods
test
mov
popa
or
push
mov
pop
push
add
outsl
mov
jg
popa
out
and
mov
nop
push
mov
decl
insb
mov
adc
cmp
subl
pusha
hlt
out
cmpsb
inc
push
aad
mov
aam
and
scas
push
test
xchg
cmc
enter
fsts
jle
mov
std
mov
lcall
adc
sub
sub
and
xchg
mov
sub
clc
push
xchg
std
clc
jge
ret
incl
icebp
lods
pop
add
mov
sbb
adcb
mov
pushl
aas
pop
inc
xchg
cmpsl
lods
mov
into
xchg
cli
decl
les
dec
adc
in
dec
jge
pop
mov
out
dec
ret
sbb
cmpsl
add
or
ret
fbld
or
jmp
inc
stos
scas
sub
xchg
jns
xor
stc
popa
xlat
dec
in
push
data16
imul
jmp
outsb
cltd
dec
mov
mov
or
inc
scas
mov
notb
dec
mov
ljmp
pop
xchg
pop
lods
add
inc
xchg
sub
xchg
shrl
insl
dec
push
in
cmp
cmpsb
cmp
stc
push
xor
sbb
ds
dec
cmp
cmp
xchg
jle
push
out
push
decl
lock
inc
push
and
bound
xchg
lahf
cmp
sub
push
push
and
lcall
cmp
stos
inc
xchg
mov
insl
sub
pop
cli
or
out
idivb
pop
stc
test
xor
mov
js
shll
hlt
mov
add
movsb
push
mov
mov
mov
push
pop
pop
jbe
fstps
xchg
pop
fst
ljmp
movsb
sti
gs
movsl
cmp
lods
ficompl
insl
xchg
jg
jmp
iret
pusha
pop
push
or
sbbb
jae
into
sarb
movsl
incl
lret
dec
cmp
jle
rclb
or
ss
cmp
push
push
les
pop
call
les
lds
xchg
sub
and
pushl
push
pop
xchg
xor
out
mov
push
xchg
jg
pop
pop
lock
ss
int
xchg
aad
adc
inc
xchg
ljmp
pop
push
subps
pop
jnp
inc
inc
mov
rcr
xor
das
jp
and
mov
daa
incb
mov
or
mov
and
fdivr
jmp
dec
mov
xor
or
sub
jbe
xchg
cwtl
xchg
in
pop
jne
sub
call
cmp
push
pushf
push
inc
insl
aaa
imulb
xorb
push
scas
pop
jmp
call
pop
enter
mov
daa
into
repnz
adc
call
das
je
leave
and
ljmp
mov
sbb
and
mov
icebp
sbb
xchg
scas
dec
jge
cmc
sar
mov
inc
dec
mov
out
idiv
fsts
sub
hlt
loopne
popa
pop
push
pop
pop
push
cmp
xchg
jb
jne
dec
ljmp
shlb
push
mov
jg
pop
sbb
or
shrb
xchg
cs
stos
push
fbstp
aam
scas
stc
push
mov
call
push
dec
xchg
xorb
xchg
fs
pop
pop
sbb
insb
insl
cmp
or
sbb
insl
adc
mov
mov
cwtl
test
cmp
add
ljmp
xor
and
lret
cld
xchg
icebp
ret
jp
imul
sahf
rol
mov
push
shlb
out
xchg
dec
mov
mov
or
ljmp
pop
js
in
push
mov
mov
jg
fcom
repnz
sarb
psllw
data16
inc
mov
decl
out
push
sahf
lret
mov
insb
xor
lcall
sub
fildll
mov
xchg
fldl
mov
int3
incl
call
pop
movsl
cmpsl
call
push
mov
pop
mov
mov
lock
jg
cltd
dec
lret
aas
cltd
cmp
loope
fisubl
jmp
push
adc
icebp
aad
call
lahf
sub
psrld
mov
popa
jg
mov
jg
lcall
adc
aam
add
cmpsl
xchg
sub
daa
xchg
adc
adc
pop
jge
or
xlat
or
xchg
lock
jecxz
lock
xor
jae
sub
jbe
out
fwait
xchg
js
lcall
nop
and
daa
test
add
rcl
loopne
inc
leave
into
adc
push
ss
shll
ret
mov
insb
xchg
xor
addl
pop
fsubrs
call
sarb
in
push
mov
mov
mov
cs
inc
shlb
inc
cli
test
cmp
mov
adc
mov
lcall
shrl
push
jecxz
scas
pop
mov
das
inc
mov
jecxz
push
xchg
aam
loop
sar
stos
mov
inc
or
into
andb
jp
incl
dec
push
jge
push
pop
and
jge
and
stos
push
fdivr
repz
jmp
adc
lds
and
cltd
jl
xlat
sub
add
les
push
rcrb
pushl
jne
bound
cmp
sarl
stos
mov
lds
addb
shl
sub
adc
ljmp
push
imul
js
cmp
sbbb
jle
dec
cli
out
decl
xor
cmp
jmp
cmc
mov
push
mov
mov
jo
ljmp
mov
ds
cmpsl
xor
xor
xchg
repz
cli
fidivrs
and
hlt
inc
add
les
jmp
jle
pop
test
pusha
sub
cld
pop
bound
xchg
pop
jne
mov
call
sarb
add
insb
dec
scas
cld
mov
iret
push
mov
xor
jne
mov
ja
cli
mov
add
bswap
xor
mov
inc
pushl
std
push
dec
push
xor
inc
cli
mov
mov
out
sarb
negl
push
jo
add
mov
jg
enter
mov
popf
loopne
cli
jg
hlt
pushl
sub
dec
stos
popf
lea
lock
ljmp
mov
pop
cwtl
fldt
dec
jno
dec
les
lods
jbe
movlps
mov
dec
cmp
mov
lcall
scas
push
jmp
xchg
bound
outsb
fmull
cmp
adc
incb
mov
jmp
push
pushl
cmpb
pusha
shrb
mov
fistpl
incl
sub
sbb
pop
std
mov
push
ret
sar
shlb
out
inc
outsl
xchg
mov
pop
insl
or
js
mov
sbb
stc
adc
pop
push
cmp
loope
in
xchg
movsb
sbb
adc
movsl
imul
pushl
int
xor
sbb
adc
mov
enter
fiadds
add
outsl
cli
mov
iret
fcompl
cmc
aad
mov
jae
and
sub
sar
imul
push
and
pop
xor
jecxz
subl
test
dec
sbb
jmp
popa
xchg
and
daa
jno
jmp
incl
lret
pop
and
mov
cmp
decl
hlt
stos
jmp
jge
mov
adc
ljmp
pushf
jae
cmp
jmp
clc
sarb
push
jb
stos
jl
or
add
mov
dec
sub
fldcw
pop
dec
pop
rolb
xor
call
adcl
out
out
arpl
jmp
push
jae
fwait
incl
jnp
sbb
inc
add
int3
aam
push
sub
pushf
test
sahf
sub
icebp
call
inc
mov
stos
push
int3
ds
add
cmp
jg
jp
mov
lret
push
icebp
mov
nop
into
movsl
lock
cltd
ds
push
ljmp
push
cltd
jns
test
lods
sbb
or
in
ds
stos
insb
leave
scas
sbb
pop
add
incl
inc
xlat
ja
testl
xchg
inc
lds
jns
push
and
ljmp
jge
popf
loopne
sahf
push
fs
imul
loopne
pop
xor
jmp
push
or
sbb
outsl
arpl
aas
xchg
xor
sub
xchg
sbb
out
fnsave
jae
and
or
movsl
pop
dec
dec
jg
adcl
push
lcall
adc
in
dec
cld
daa
clc
call
std
lret
pop
jmp
cmp
sbb
sahf
push
sti
jns
mov
and
pushl
xchg
jae
or
cwtl
in
sub
lcall
je
out
xor
dec
xor
add
sti
ja
pop
in
out
inc
lahf
jp
clc
add
incl
fwait
scas
jno
lods
jp
cmp
lahf
push
xchg
pop
cmc
loopne
dec
or
mov
push
cmp
jp
insl
cmpsl
ljmp
fcmovb
pop
mov
shll
inc
test
ljmp
into
xchg
adc
inc
in
jl
dec
scas
mov
and
push
lret
pop
call
pop
shrb
pop
decl
in
mov
ficoms
sbb
sbb
cs
lcall
mov
call
add
cmp
push
jge
dec
dec
sub
pop
add
jne
mov
decl
or
or
inc
cli
loope
cmp
stos
out
mov
and
call
mov
leave
add
push
and
repnz
dec
push
popf
clc
notb
sbb
adc
pushl
cwtl
push
ss
xorb
in
cmp
pop
mov
adc
jo
stos
mov
or
mov
cli
decl
add
lods
pop
ss
sbb
aam
or
mov
add
sbb
imul
sarl
jno
mov
out
jno
push
dec
mov
leave
icebp
mov
or
jmp
sub
hlt
clc
fwait
push
shll
add
mov
lods
sbb
lcall
add
push
dec
xor
mov
pop
inc
cmc
and
lret
mov
sbb
xchg
std
push
push
mov
xlat
mov
jb
jp
subl
decl
sti
push
loope
jno
mov
cmpsl
arpl
lret
mov
pushl
cmp
ljmp
call
lods
cli
adc
lahf
sub
jge
push
and
subl
mov
mov
decl
mov
jg
cmp
sbbb
xor
sub
adc
dec
jmp
xor
incl
fisubrs
neg
in
inc
jle
lret
pop
and
xor
fnstcw
mov
scas
ljmp
or
out
mov
into
int
mov
sbb
stos
add
sar
loopne
ficoml
push
mov
cmp
pop
xchg
pop
fisttpll
jg
mov
es
cmp
mov
or
pushf
sub
inc
nop
jle
and
xchg
pushl
loope
mov
popf
mov
mov
notl
sbb
stos
arpl
fs
decl
pop
std
adc
mov
xchg
test
or
ljmp
out
add
cmpsl
ja
outsb
rorb
aaa
fnstsw
and
icebp
xor
cmc
aaa
cld
imulb
aaa
pop
pop
mov
adc
add
push
sar
ljmp
mov
nop
pop
jle
push
xchg
ficompl
push
mov
sub
xchg
ss
decl
jle
add
iret
inc
rolb
pushf
aam
sbb
icebp
cltd
int3
adc
sti
mov
push
decl
dec
inc
jl,pt
xchg
or
out
hlt
in
clc
js
es
jmp
inc
mov
xor
jns
loop
dec
pop
sbb
enter
mov
popf
lods
js
xchg
xchg
adc
test
mov
rorl
sbb
bts
mov
inc
push
fisttps
stos
lods
hlt
or
cmpsl
and
inc
pop
out
dec
adc
pushl
sahf
jne
push
xchg
loop
sub
iret
sub
sti
mov
fistl
and
xor
outsl
sar
jg
adc
std
sti
xchg
xchg
out
fisttpl
push
mov
and
dec
xor
mov
incl
leave
in
jmp
loopne
jnp
adc
sbb
idivb
sub
mov
mov
clc
test
shrb
push
stos
jg
fcomip
inc
cwtl
mov
bound
or
xchg
mov
movntq
out
sahf
add
incb
cld
and
mov
mov
pcmpgtw
lret
gs
dec
xchg
push
mov
and
xlat
loope
cmp
inc
dec
pushf
push
nop
fsin
xor
icebp
sub
or
cld
incl
inc
out
dec
sub
lcall
into
sbbb
and
mov
bound
xor
pop
cwtl
and
loopne
les
add
mov
sbb
mov
jg
ret
xchg
sub
out
inc
cmp
mov
call
aas
iret
xchg
mov
imul
pushf
mov
jecxz
or
jg
subb
lods
mov
cmp
je
arpl
ljmp
dec
cli
sub
xlat
jl
or
pop
in
add
jne
call
cmp
jl
mov
jo
stos
or
mov
sub
or
leave
or
mov
rclb
mov
push
lods
outsl
or
lcall
pop
aaa
mov
dec
scas
mov
ljmp
imul
push
iret
aam
mov
xchg
ss
mov
dec
fucomi
dec
test
lea
and
divb
fiaddl
mov
mov
mov
jns
jmp
adc
cmp
cld
push
mov
icebp
mov
int
imul
insl
cmp
adc
jecxz
fidivrl
push
lahf
cmp
shr
ss
or
xchg
lcall
fs
lock
incl
inc
and
cmp
cltd
add
mov
aas
adc
lcall
leave
jg
jg
cmc
cli
push
sub
sbb
and
pop
loopne
mov
js
push
lret
rol
push
pop
fmuls
add
cmp
mov
lahf
pop
jnp
cmp
xor
outsb
mov
out
clc
jne
mov
andb
adc
icebp
inc
mov
jmp
je
mov
push
xor
sub
cmpsb
scas
shlb
ror
call
out
repnz
push
icebp
in
sti
out
sbb
jno
mov
mov
adc
rolb
xor
sbb
xchg
adc
adc
cld
jne
aaa
cmp
mov
jp
loope
stos
jnp
mov
negb
mov
dec
call
sbb
ret
jns
dec
in
mov
mov
inc
add
cmpsb
decb
inc
in
psadbw
icebp
mov
jne
mov
incl
pop
aad
movsb
and
jmp
jle
or
xchg
sub
ss
out
clc
aam
jge
arpl
out
mov
xor
dec
jp
cli
aaa
dec
inc
mov
sub
mov
and
push
dec
fxch
add
aam
adc
pushl
xchg
loope
sbb
dec
cmp
loop
lret
dec
cmp
aam
ljmp
inc
push
popa
dec
and
and
pushf
es
adc
sub
nop
sub
incl
dec
loopne
push
fwait
xor
push
pop
xchg
dec
addr16
add
incl
or
xchg
pop
mov
jg
cld
call
lret
mov
mov
loop
push
mov
dec
or
aaa
rcrl
pushw
int
movsb
cmp
pop
fdivr
cmp
jp
lea
jb
xchg
jp
and
push
aam
inc
fcmovne
cld
jmp
insb
xlat
adc
xor
stos
cltd
cltd
add
jno
and
call
aam
cmpb
push
fbstp
add
jne
add
cmp
mov
xor
adcl
mov
pop
test
cmp
and
repnz
dec
decl
mov
out
xor
ret
nop
xor
cmpsb
push
mov
jge
mov
stos
push
ljmp
mov
leave
mov
adc
cmp
cmp
or
inc
inc
insl
data16
incl
int
pop
stc
cmpsl
mov
jno
jle
insb
pop
out
pop
jge
jmp
push
sar
inc
or
jecxz
decl
jle
sarl
add
add
cmp
mov
xor
dec
clc
call
cmpsb
adc
push
lock
mov
data16
dec
leave
cld
incl
js
gs
push
pop
stos
sbb
sbb
stos
lock
ljmp
lods
and
mov
xor
int3
gs
mov
mov
xor
enter
sub
loope
pusha
popf
lock
fbld
cmp
pop
mull
push
mov
in
adc
jo
jmp
lea
lcall
or
ja
xorb
ljmp
jo
lock
jmp
jge
imul
lret
stos
movsb
pop
mov
test
lods
sarb
daa
decl
sbb
jl
push
lcall
leave
dec
inc
cmp
inc
xchg
cmpsb
aad
push
lea
pop
pop
ja
call
cmp
xor
push
clc
lods
imul
jecxz
mov
enter
decl
cwtl
popa
add
adc
mov
jmp
mov
cmp
mov
ljmp
sub
cld
cmc
js
cmp
lods
dec
stc
and
sar
jg
push
xor
sub
xchg
xchg
fdivr
call
mov
add
jo
sbb
mov
dec
icebp
js
stos
cmp
pop
loopne
fdiv
std
ljmp
stos
stc
sti
nop
fnstcw
and
cmp
sbb
add
jns
xor
outsb
push
call
div
add
insl
xor
ror
sub
mov
test
call
das
movsl
sub
lock
adc
push
inc
mov
cmp
mov
popl
adc
incl
jns
fbstp
mov
aaa
lea
jl
loop
fisttpll
je
mov
add
xor
je
xor
lahf
mov
andl
xchg
mov
je
ud0
incl
sub
dec
dec
ret
or
xchg
in
fisttpll
mov
ljmp
cmc
cmp
std
clc
sbb
push
in
stos
push
jmp
fistps
incl
adc
insl
pop
add
insl
sub
lock
mov
int
jle
test
pop
jp
mov
faddl
outsb
lods
inc
hlt
stos
out
cmc
pushl
sub
mov
lret
notb
push
inc
sub
rcr
shl
inc
push
cmp
jle
mov
loopne
xchg
sti
fistpll
cmp
ljmp
sahf
loope
rcr
add
mov
dec
neg
imul
js
in
sahf
mov
arpl
lock
push
int3
xchg
rcrb
push
scas
cmp
inc
pushl
push
adc
in
mov
std
dec
sbb
lcall
enter
jmp
lock
add
sbb
lods
lcall
dec
sbb
xchg
je
add
cmpsl
inc
nop
ljmp
pop
jns
bound
mov
pushl
jno
inc
sbb
jge
sahf
mov
loopne
in
in
cmp
jg
repnz
aam
and
arpl
jbe
lods
stos
and
cmpsb
pop
stos
cmp
pop
das
call
faddp
out
setb
lcall
orb
test
pusha
xchg
decl
pop
sbb
outsl
pushf
mov
pop
clc
push
es
ljmp
pop
mov
lods
pop
lcall
and
das
sbbl
stos
fnstsw
or
mov
sub
push
jns
and
into
cmp
popf
fisttpl
cmc
hlt
cmpsb
stos
jle
cmp
push
shlb
jbe
pop
mov
dec
lock
ljmp
popf
movsl
cmp
sahf
out
mov
sti
jl
daa
mov
pop
jecxz
decl
and
mov
daa
add
xchg
and
inc
add
insb
in
icebp
sub
clc
mov
cli
pop
mov
jns
inc
out
mov
sahf
dec
xchg
ljmp
hlt
mov
push
outsl
test
dec
add
inc
mov
push
mov
xchg
fsubs
imul
popf
and
mov
mov
cld
mov
decl
imul
mov
sub
adc
and
lock
mov
gs
call
into
testl
mov
cmp
push
adc
xor
arpl
or
xchg
lea
stc
pushl
xchg
cmpsb
dec
mov
cmpsl
and
lcall
stos
mov
push
ret
jmp
jbe
shrb
shl
push
inc
jne
leave
sbb
lock
mov
movsl
adc
jg
pop
stc
rorl
leave
cltd
nop
xor
jmp
movsb
xchg
sbb
inc
imul
fcmovbe
jo
hlt
ret
scas
iret
aaa
pop
adc
decl
lock
loope
push
pushf
mov
xchg
or
rcrl
push
stos
int3
jmp
dec
stos
imul
in
repnz
mov
mov
mov
das
push
cmp
xor
mov
xchg
ljmp
ljmp
insb
jnp
pop
scas
mov
lret
cmpsb
std
test
adc
pushf
cmpl
push
push
add
mov
sub
jo
pop
incl
loop
inc
adc
and
cmpb
inc
or
lret
mov
lods
call
loopne
or
pop
xchg
xor
xlat
subl
pop
pusha
pop
rorb
int3
cmc
call
dec
jo
sbb
test
divb
jge
movsb
push
pop
mov
xor
push
hlt
ds
push
sbb
pop
xchg
movsl
fadds
outsb
hlt
push
dec
adc
das
sar
add
mov
push
dec
dec
loop
mov
mov
mov
lock
push
jno
aaa
cltd
ja
jg
insl
sub
arpl
pushl
xor
xchg
jnp
jmp
enter
and
scas
mov
mov
lcall
decl
or
orl
inc
add
xor
pop
aam
call
call
push
in
and
xor
sbb
mov
sbb
jg
mov
add
and
xorl
fdivrs
xor
sub
inc
xchg
test
inc
jmp
fsts
dec
out
out
sub
orl
lods
in
cmp
add
in
sti
mov
push
mov
xor
clc
call
xchg
inc
ja
in
adc
dec
adc
xor
call
cmp
dec
mov
cmc
fidivrl
and
sbb
adc
pushl
mov
mov
cmp
jb,pn
xor
mov
mov
cmc
mov
mov
adc
cmp
or
lock
jecxz
test
pop
outsb
jmp
in
add
dec
push
es
in
icebp
shrb
ret
stc
pop
push
cmp
sti
loopne
ljmp
mov
cmp
sub
leave
rcr
pushl
cmpsb
cli
test
or
mov
add
stos
lea
and
clc
je
jle
pop
sbb
movsl
call
add
rcll
dec
adc
xchg
mov
or
aas
idiv
ljmp
sbb
loop
ret
push
cli
lds
and
ljmp
sbb
cmc
loop
call
adc
insb
movsl
insl
jno
lahf
test
test
sbb
adcb
push
mov
mov
data16
movsl
dec
shl
leave
data16
popf
sub
incl
clc
dec
add
test
mov
stos
adc
pop
cmp
pop
fisubrs
adc
loop
push
in
sub
mov
movsb
cmp
inc
inc
cmp
jmp
cmp
push
and
mov
or
cwtl
cmpsl
hlt
sti
lcall
cmp
jae
pop
in
hlt
pop
fwait
add
lds
dec
mov
xchg
xchg
popf
out
sbb
pop
cwtl
fisttps
in
and
pop
push
and
int3
pop
and
loopne
inc
lar
dec
int3
pop
ja
js
and
aas
push
lock
mov
mov
lds
inc
into
jo
dec
call
dec
dec
mov
push
mov
dec
scas
ss
push
sub
mov
nop
sti
mov
cmpsb
pushl
lcall
in
cwtl
add
vpermil2pd
and
mov
stos
push
sbb
out
scas
stos
adc
jmp
pusha
cs
or
sbbl
cli
sub
xorl
scas
lds
inc
mov
fsubrs
pop
lahf
pushl
popa
add
cld
jp
scas
lahf
mov
push
insb
xor
lret
out
cs
pop
push
std
or
mov
or
pop
fidivrl
pop
aas
stc
xor
repnz
adc
ljmp
jns
and
popf
cltd
mov
mov
push
rcrl
or
or
outsb
inc
daa
cwtl
fdivrp
jecxz
jmp
or
pop
mov
out
mov
fmull
pushf
fistpll
lahf
mov
xchg
add
incl
lahf
sbb
sub
cs
mov
xchg
pop
push
test
or
xor
sbb
pop
stos
or
cmp
fldl
inc
mov
bswap
out
mov
outsl
push
imul
add
inc
insb
inc
insl
rol
lret
jmp
lcall
in
int
sub
or
insl
movsb
and
and
out
adc
xchg
and
pop
hlt
fs
in
adc
imulb
addr16
mov
stos
inc
mov
scas
xchg
xchg
cmp
adc
xchg
jno
daa
ret
call
push
jge
sarb
add
sub
rorb
pop
ret
cld
pop
loopne
je
jmp
xor
decb
addr16
pop
out
call
inc
dec
ror
mov
imul
leave
cmp
inc
sahf
in
movsb
sub
int
in
cmpsl
cmp
std
call
or
jno
cmc
mov
hlt
cmp
lahf
pushl
xchg
sub
call
xor
dec
sub
xor
aam
ja
outsl
fxch
lcall
fwait
pop
sbb
imul
ret
sahf
add
daa
aad
sub
mov
pop
inc
jmp
push
or
shr
adc
sti
je
inc
mov
loopne
pop
push
repnz
sahf
frstor
out
jb
jge
dec
in
xchg
ljmp
inc
fcomp
xor
rolb
adc
pusha
stc
shrl
push
sub
jns
addr16
adc
push
xchg
lret
movsb
xor
push
adc
mov
dec
lret
xchg
jnp
jb
pop
std
xor
clc
inc
mov
pusha
ret
loop
repz
aas
inc
sub
xor
fdivr
jmp
add
jo
and
das
mov
insb
in
push
fnstsw
mov
incl
mov
aaa
dec
cmc
jg
cld
and
fs
call
js
add
addr16
cwtl
loopne
pushl
push
in
daa
out
mov
pusha
cmp
jnp
adc
cwtl
jns
dec
ds
adc
adc
and
int3
dec
adc
movsl
sahf
xor
mov
daa
movsb
stos
and
loope
sbb
jbe
mov
xchg
into
jmp
int3
ljmp
jb
mov
adc
and
xor
roll
sti
mov
dec
push
incl
test
lods
push
aaa
jmp
xchg
and
es
push
negl
les
mov
jg
mov
mov
mov
loopne
in
dec
movsb
mov
xor
call
daa
add
sahf
mov
jne
xchg
loopne
push
aam
or
adc
ret
cli
jp
mov
mov
sti
sub
jo
pop
in
or
decl
mov
mov
adc
xorl
jae
adc
lret
dec
jno
jbe
jae
popa
insb
in
data16
adc
addr16
sarl
mov
push
and
mov
jl
xchg
lods
mov
sbb
decl
fcmovnb
loop
adc
and
mov
mov
sub
nop
lcall
inc
test
aam
int
add
sbb
ljmp
adc
cmp
sub
lahf
dec
pushl
or
mov
xchg
scas
add
adcl
xlat
pop
xchg
rcrb
mov
jno
jecxz
ja
mov
out
fwait
xor
inc
in
sbb
adc
mov
clc
call
inc
mov
mov
dec
rorb
push
or
loope
pop
movsl
rcr
call
xor
movsb
cli
cli
adc
cmp
push
cmpsb
insl
ret
push
cmp
insl
divl
jmp
test
mov
dec
pop
pop
gs
hlt
rolb
push
push
in
addr16
push
pop
incl
jne
xor
cmp
mov
jmp
lock
jne
clc
or
push
adc
add
pop
mov
dec
outsb
insl
jae
out
mov
xor
push
faddl
jge
jl
lods
shrb
push
mov
testl
lret
imul
cmp
xor
ror
sbb
clc
mov
out
xchg
sarb
add
clc
mov
icebp
mov
mov
decl
and
jge
lods
add
push
cltd
and
adc
xor
cmpsl
shlb
sbb
cli
sbbb
sbb
lret
pop
jle
imull
ljmp
inc
fildll
outsb
push
sahf
lcall
lret
cwtd
adc
dec
out
dec
data16
iret
jne
insl
sub
jo
ret
cli
outsl
cli
xor
sbb
jecxz
mov
push
scas
call
es
clc
jne
scas
outsl
imul
int
mov
pop
mov
incl
daa
sbb
push
repz
or
testl
nop
dec
into
jno
add
ljmp
inc
fs
enter
pop
push
in
lret
call
aaa
loop
enter
jg
jp
jg
in
loop
aas
nop
sbb
inc
outsl
into
scas
or
push
xor
jmp
and
push
pop
dec
dec
xor
lahf
js
enter
jmp
ret
std
shll
add
or
fnstcw
jo
fstps
push
sbb
cmp
decl
jo
mov
push
inc
mov
inc
pop
fstpt
hlt
push
inc
je
in
aam
jg
ljmp
aad
out
push
push
nop
ja
movsb
cmpsl
stos
addl
xchg
aam
addr16
pop
incl
imul
sbb
insl
aas
inc
add
pop
sbb
in
mov
mov
ljmp
xchg
cwtl
ljmp
std
out
stc
push
das
out
je
pushl
fdivr
pusha
mov
sub
inc
mov
jmp
jle
icebp
mov
hlt
stc
iret
mov
inc
imul
dec
gs
push
lcall
xlat
popf
out
pop
cmpsl
fisubl
daa
jns
xchg
int
inc
jae
mov
shlb
lcall
push
insl
sbb
cltd
repz
inc
add
aam
insb
xchg
cmp
and
fwait
popa
sbb
or
mov
ljmp
or
jmp
out
lock
vsubpd
fbld
mov
pushl
mov
pop
add
xchg
xchg
cmp
int
subb
ljmp
mov
lret
lds
jno
push
mov
imulb
mov
pop
mov
scas
out
jns
jl
andl
cmp
movsl
push
add
gs
xchg
popa
addl
fwait
movsl
push
stos
lock
enter
incl
mov
xor
pusha
cmpsl
out
xchg
push
push
cwtl
sbb
inc
sub
scas
mov
dec
jle
or
testl
push
imulb
cmp
mov
stc
jp
cld
jmp
jge
push
flds
fmuls
cltd
imul
push
andb
cli
incl
mov
add
std
and
mov
sub
mov
pushl
loopne
test
insl
push
aad
addr16
cld
adc
adc
jl
sbb
ret
mov
mov
cld
mov
mov
cmp
decl
insb
pop
push
dec
sbb
dec
xchg
pop
dec
sbb
fadd
int3
xchg
cmp
xor
loopne
xor
mov
mov
cld
call
test
mov
cs
pop
pop
push
dec
out
xor
fisttps
outsl
cmp
mov
push
fwait
cmp
bound
imul
std
popf
in
aaa
out
cmp
aad
lret
dec
pop
pushl
mov
popa
cmp
sub
jns
push
and
or
push
adc
incl
and
jo
xchg
cs
sbb
test
push
inc
call
outsl
pusha
bound
jmp
sub
aam
push
in
add
pop
arpl
adc
lds
jmp
inc
pop
nop
dec
sbb
and
push
ficompl
jg
decl
mov
pushf
popa
into
lods
popaw
mov
pop
sub
pop
mov
adc
and
mov
mov
jmp
fwait
popf
dec
fcomip
pop
mov
mov
cmpw
xchg
mov
call
ss
je
cwtl
jmp
inc
jb
rcr
pandn
icebp
mov
cmp
mov
jecxz
decl
icebp
es
xchg
push
jbe
aas
test
add
xchg
add
ljmp
icebp
int
rcrl
pop
cmp
incl
jo
add
add
stos
adc
test
cs
das
sar
dec
es
fdivrs
pop
cld
aad
jne
add
xchg
pop
inc
xchg
jl
clc
cmp
subb
aam
inc
cmp
mov
cmp
test
pushl
jb
paddq
test
mov
add
ljmp
cli
nop
das
sub
and
lahf
jecxz
movsl
outsb
push
pusha
sbb
je
xchg
aaa
mov
incl
lret
movsb
add
stos
fucom
xchg
ret
es
hlt
dec
lahf
in
lret
loope
imul
jmp
loop
sbb
bound
mov
or
jb
pop
jmp
fs
ljmp
mov
mov
dec
cmp
or
and
xor
loop
cmp
decl
in
std
cmpsl
repnz
push
jmp
lahf
xchg
ret
xor
lods
ja
es
dec
call
jae
shrl
pop
jle
dec
sbb
dec
out
lea
adc
and
pop
adc
mov
scas
inc
call
jmp
cmp
js
dec
cltd
rcrl
ds
push
jb
and
cmc
push
push
mov
fisttpll
push
out
jne
mulps
push
sbb
mov
rorl
imul
or
add
in
imul
sbb
mov
clc
lea
out
push
hlt
mov
aad
cltd
mov
xor
mov
gs
popa
mov
hlt
es
fbld
adc
je
fildll
mov
pop
cmp
lds
adc
outsl
cli
pushl
movsb
xchg
push
loopne
arpl
or
idiv
fbld
mov
incl
lock
cmp
rcpps
das
push
sub
dec
pusha
jno
mov
adc
mov
push
testl
out
ds
int3
mov
push
in
jo
enter
sbb
decl
pop
popf
xchg
xlat
mov
ficomps
dec
or
dec
mov
imul
and
icebp
sub
jmp
mov
lea
mov
std
xchg
lods
in
and
push
aam
pop
cmc
lcall
inc
mov
cli
xchg
shlb
mov
and
add
ja
jae
test
gs
dec
mov
mov
sbb
xchg
scas
mov
cli
jmp
pop
mov
mov
fsubp
pop
jmp
cmpsl
cmp
add
in
cs
mov
scas
pushf
leave
icebp
mov
mov
outsb
push
inc
inc
clc
ret
stos
fsubl
mov
xor
ret
ljmp
add
sub
push
mov
arpl
and
lret
xchg
decb
inc
add
pop
in
sbb
pop
mov
pop
scas
dec
out
je
and
mov
cmc
pop
xchg
or
div
in
add
pop
clc
fmull
pop
jns
mov
jnp
mov
cwtl
cmpsb
push
xor
jecxz
enter
sti
push
pop
in
lret
flds
sub
shr
ret
nop
mov
in
inc
xchg
jmp
xor
push
aad
out
call
mov
jno
jbe
mov
in
and
aaa
std
inc
iret
scas
imul
lret
mov
movsb
cmp
pop
insl
add
adc
fcmovnb
cmp
das
push
push
data16
sbb
jp
cs
xchg
lcall
mov
jnp
lahf
mov
aaa
orl
sbb
dec
mov
inc
or
jno
cs
test
scas
cli
mov
mov
sbbb
or
fnstcw
sbb
xchg
out
es
inc
dec
xor
add
loop
rorb
pop
sbb
test
shll
scas
jae
pushf
add
int3
push
ljmp
mov
push
lcall
cltd
sti
jg
cmp
addl
mov
jg
push
jnp
pop
cmp
scas
mov
clc
sbb
xrstors
inc
sbb
inc
iret
adc
jmp
out
in
and
out
int3
fmuls
and
cmp
or
inc
test
cmp
dec
hlt
mov
jle
xchg
pop
loopne
push
fdivr
mov
sub
popf
es
loope
decl
add
xor
ret
iret
adc
mov
mull
mov
ljmp
mov
xchg
stc
mov
cs
pop
lea
xchg
cld
lcall
cld
inc
enter
jle
sub
xchg
leave
adc
dec
pop
mov
mov
movq
adc
out
mov
gs
sub
xchg
dec
and
shll
jmp
imul
inc
sub
pop
aas
stos
mov
push
push
inc
push
jne
sar
cmp
inc
lods
daa
pop
push
xchg
inc
adc
cmp
repz
imull
std
and
icebp
jmp
add
fsubl
xor
push
mov
mov
mov
adc
call
xor
mov
rcr
test
jle
ljmp
jmp
outsl
sahf
mov
test
cli
and
pop
mov
jbe
les
gs
ljmp
lret
fsubl
jbe
and
mov
int
mov
test
stos
bound
or
inc
xor
lret
insl
ss
fnsave
jmp
in
icebp
and
jg
incl
add
pop
mov
shlb
lods
sbb
mov
cmpsl
loop
and
adc
incl
ja
xchg
add
movsl
bound
xchg
pushf
imul
push
call
mov
aam
and
out
out
mov
sub
sarl
aaa
cld
jmp
fsts
sub
test
mov
xor
ss
rcl
data16
fistpll
enter
inc
lcall
pop
jle
nop
mov
push
leave
sbb
scas
cmc
hlt
ljmp
mov
test
xchg
test
jle
dec
push
pop
aas
popf
sub
fnstenv
mov
or
cmc
mov
inc
adc
shrl
int
mov
mov
jl
clc
cmpsl
movl
add
jp
dec
insl
mov
xchg
lret
lods
data16
mov
bound
pop
inc
movsb
repz
xor
dec
insb
les
xchg
cmp
movsb
dec
lret
and
movsb
add
mov
insb
lea
inc
hlt
xchg
and
mov
mov
repz
icebp
cmpsl
mov
push
out
adc
xchg
cs
stos
loop
imul
cwtl
loope
mov
hlt
test
jg
outsb
cli
pop
sub
aad
jno
outsl
lods
pop
shll
jnp
popa
ret
inc
pop
mov
jb
cli
cmpsl
mov
fdivrp
sub
sbb
mov
adc
lcall
mov
xchg
xor
cwtl
ja
les
sub
inc
cmpsl
cmp
mov
mov
sti
cmp
clc
jmp
push
stc
adc
in
ficomps
pop
xchg
xchg
xor
ljmp
adc
add
loope
pop
mov
and
xor
mov
call
mov
cmp
dec
sub
sub
subb
inc
xchg
ljmp
in
xchg
push
adc
js
mov
dec
fsub
imul
decl
add
lock
jmp
ret
pop
mov
hlt
add
mov
inc
cmp
sbb
decl
add
dec
sbb
outsl
mov
gs
es
incl
test
jae
mov
jo
mov
rcll
mov
fisttps
jp
data16
add
and
mov
push
push
mov
int3
mov
call
icebp
add
pop
cmp
push
pop
push
push
fnsave
push
add
incl
or
cmp
int3
dec
push
lcall
and
push
incl
mov
mov
mov
push
jbe
jecxz
pop
cltd
xchg
lret
mov
mov
das
js
xchg
add
dec
sub
faddp
lea
test
bound
jge
out
clc
stos
testb
sbb
rcrl
int3
push
clc
out
add
int3
out
sbb
pop
pop
jmp
mov
xchg
mov
jecxz
inc
gs
jbe
lods
in
mov
imul
test
call
xchg
icebp
jg
xlat
jmp
and
lods
dec
xlat
mov
jecxz
pop
push
ljmp
inc
push
mov
or
sti
rcrl
stos
in
jbe
fs
pushl
ds
inc
mov
xchg
push
jo
mov
and
hlt
or
xchg
ljmp
adc
mov
add
mov
fidivs
or
sahf
jns
int
inc
push
fcmove
hlt
sarl
mov
test
incl
data16
mov
in
push
imul
clc
mov
sub
popa
mov
inc
sti
leave
mov
xor
mov
jmp
adcl
xor
push
call
loopne
int
enter
jl
fidivs
js
adc
or
idiv
jg
test
cmp
int3
repz
jno
or
cld
int
jns
pop
push
jns
popa
lcall
cmpsl
sarl
mov
pop
mov
mov
mov
xchg
xor
jno
dec
cmp
incl
adc
arpl
int3
ja
enter
and
xor
scas
cmpsl
sub
mov
pop
adc
mov
lods
jns
and
js
add
jns
decl
lock
mov
mov
cmp
lea
out
adc
test
and
popa
int
ror
cmp
test
cmp
add
arpl
cmp
and
pop
inc
adc
hlt
dec
mov
sub
dec
sub
test
jb
dec
jp
test
arpl
loop
aad
jge
mov
and
dec
jae
dec
rcrl
andl
lods
jge
jno
push
nop
add
xor
lods
out
gs
aaa
dec
jns
adc
add
sub
xor
ljmp
pusha
test
sar
adc
add
ljmp
gs
popf
xchg
lret
inc
push
mov
mov
insl
jno
and
mov
iret
sub
cmp
decl
mov
xrelease
in
out
sub
push
adcl
call
dec
xlat
outsb
adc
adc
in
push
jge
jge
fistl
sub
call
xchg
loop
addr16
test
xor
mov
xor
dec
call
fstps
push
xor
sub
movsl
jg
mov
sub
stos
xor
mov
pmulhw
fidivs
not
mov
fidivrs
outsl
movsb
mov
jns
xchg
sbb
add
addr16
outsl
xchg
adcb
imul
out
sub
mov
enter
scas
push
out
repnz
lcall
shrl
sbb
stos
mov
pop
pop
ret
jno
adc
fildll
cld
dec
popa
pop
pop
repnz
add
jo
cmp
call
xchg
mov
iret
sarb
sbb
psllw
pop
ficompl
call
inc
arpl
scas
aad
pushl
scas
sbb
call
sbbl
sub
jecxz
inc
lcall
es
and
cltd
nop
aaa
and
cmc
dec
mov
cmp
scas
add
decl
int
jle
xlat
pushf
or
divb
test
lcall
daa
cli
fisttpll
mov
sub
cmp
lcall
cmp
pop
ljmp
clc
lcall
jmp
cld
mov
dec
adc
mov
push
scas
pop
cmp
jmp
sbb
outsl
jo
jl
in
icebp
int
mov
mov
fcmove
or
icebp
lcall
shlb
inc
cmp
mov
mov
jle
ljmp
cmpb
int3
mov
aas
xchg
xor
push
push
and
sbb
inc
sbb
mov
add
mov
pop
mov
lock
ror
mov
add
lcall
mov
xor
inc
or
push
pushf
lahf
push
pop
dec
imul
add
xchg
loop
cmp
push
lret
arpl
and
pop
add
or
cmc
jnp
push
sar
add
xor
cmp
nop
clc
mov
dec
aaa
mov
push
icebp
jl
inc
dec
pop
sbb
xchg
out
pop
mov
and
cltd
stc
insl
cwtl
add
les
es
ud0
ds
bound
mulb
or
jmp
push
dec
or
stc
cmp
pop
sbb
incl
pusha
adc
sub
lcall
in
adc
dec
into
push
aad
jo
xchg
popf
mull
daa
cmp
popf
mov
int3
pusha
bound
aas
out
clc
shrb
lds
dec
push
dec
dec
bound
sub
push
dec
insl
mov
cmp
movsb
decl
sub
cvtpi2ps
lret
bound
loopne
xor
push
call
std
decl
xchg
popa
nop
mov
mov
dec
out
mov
xor
push
dec
ljmp
int3
into
test
xor
cmpsb
and
cltd
pop
mov
pop
mov
leave
jmp
xor
inc
inc
incl
sub
aas
pop
adc
inc
movsb
pop
ljmp
inc
imul
loopne
mov
repz
mov
or
xor
addr16
push
cli
shlb
repnz
decl
mov
xchg
in
bnd
mov
inc
xchg
push
ljmp
in
adc
movsb
cmp
data16
ret
andb
cmpsl
das
mov
inc
pop
popf
repz
push
cli
mov
push
outsl
out
mov
add
ror
mov
popa
mov
mov
ljmp
movsl
sbb
dec
aam
test
fwait
pop
sbb
clc
inc
mov
test
fistpl
ja
add
xchg
dec
sarb
aad
cli
lcall
add
cmp
push
sbb
cmp
sub
sub
les
cmp
push
lret
xchg
mov
inc
jecxz
jle
xchg
mov
test
inc
push
sub
popf
addl
xchg
mov
adc
push
cmc
lods
add
lcall
dec
mov
shrb
pop
mov
cs
lcall
stos
jne
js
loopne
inc
jmp
stc
shl
lcall
cmpsl
js
and
dec
mov
pushf
sahf
iret
ret
popl
idivl
clc
addb
adcl
ljmp
subl
jno
jns
aad
enter
cmpsl
xchg
idivb
or
ds
loop
in
pop
adc
in
push
dec
popa
mov
sbb
dec
and
ljmp
repz
jl
xlat
push
adc
xor
dec
jbe
inc
lret
imul
popf
stc
ljmp
andl
push
addr16
incl
mov
gs
out
jmp
faddl
leave
int
push
cli
and
add
jmp
outsl
push
mov
jno
movsl
cmp
ret
add
clc
xchg
fcmovne
hlt
push
pop
pop
cli
fmull
fs
incl
sub
arpl
mov
add
dec
fsubrs
fisubrl
test
cmpb
decl
sbb
sbb
add
sub
aad
cld
mov
mov
add
loopne
push
pop
and
stc
or
fwait
push
sti
jg
mov
mull
pop
cld
jb
aam
outsl
repnz
nop
cmpl
cld
sbb
lret
mov
repz
lock
jne
pop
mov
ss
jmp
sarl
inc
push
icebp
or
in
mov
push
or
in
sbb
ljmp
sub
mov
aam
jbe
xchg
cmpsl
sub
push
shll
incb
pop
out
pop
aas
incl
cmc
push
out
mov
addr16
aam
leave
sub
jae
pop
and
call
mov
in
push
out
stc
push
xchg
dec
call
push
or
outsl
sar
mov
mov
mov
bound
ficomps
xchg
add
push
test
mov
js
cs
scas
daa
xor
xchg
jnp
adcl
sar
pushl
bound
pop
xor
add
lds
mov
push
outsl
ljmp
bound
das
inc
inc
fbld
sub
test
mov
testb
or
mov
fidivrs
mov
add
nop
ret
call
pusha
test
push
stos
or
push
cmp
adc
mov
mov
ret
clc
inc
clc
mov
jg
stc
pop
stc
inc
icebp
push
pop
andb
add
or
incb
push
sbb
mov
dec
mov
push
shlb
xchg
ja
outsl
fsubs
push
push
mov
icebp
in
nop
cmc
test
lret
fdivs
std
outsl
outsl
sub
clc
xor
pop
cmpsl
mov
sub
outsb
and
ljmp
mov
insl
push
loopne
dec
jb
cmc
xor
cmp
ljmp
fiadds
adc
fldt
shlb
xor
mov
decl
xchg
fsubr
movb
repnz
mov
inc
inc
out
mov
sub
call
icebp
stos
outsl
clc
inc
inc
fwait
xor
mov
pop
test
dec
outsl
ret
ljmp
inc
pop
aad
mov
sarb
cvtps2pd
ss
iret
adc
cmovs
incl
jns
add
into
cmp
insl
imul
cmc
cmp
jns
lret
ds
call
iret
push
push
arpl
sbb
fistps
dec
push
pushf
mov
dec
xor
push
call
and
pop
xchg
lahf
out
jae
js
push
mov
es
mov
hlt
adc
or
lods
jne
aaa
adc
and
movsb
jp
jnp
pop
and
lods
cli
lcall
xlat
pop
insb
scas
adcb
data16
inc
or
dec
jg
jle
mul
out
in
mov
dec
mov
push
imul
inc
add
loopne
call
incl
ror
dec
adc
xorl
push
adc
jg
jbe
xchg
aaa
outsl
mov
xor
and
and
mov
pushf
mov
lcall
sti
mov
pop
loope
pop
adc
repz
xchg
xchg
pop
lea
stc
test
inc
mov
xor
pushl
mov
outsl
and
sahf
dec
loop
cmp
mov
pop
clc
mov
outsl
pop
cmp
ljmp
push
cmp
popf
mov
cwtl
jb
hlt
rorb
incb
cmp
out
shl
repnz
dec
cld
decl
les
dec
inc
fcmovbe
ja
inc
je
fdivr
jg
cli
fimuls
pmulhuw
xor
mov
in
push
rol
jbe
pop
cld
cmp
imul
scas
mov
bswap
push
xor
dec
mov
pop
loop
jg
and
adc
mov
incl
sbb
sahf
mov
xchg
jne
mov
sbb
mov
incl
jg
rcrw
aam
les
push
and
imul
lcall
dec
mov
cs
add
mov
jge
mov
pop
repz
adc
jmp
mov
ret
push
jns
dec
xchg
pop
outsb
shll
sub
insl
in
ja
jo
mov
call
mov
ljmp
and
lock
mulb
out
jg
enter
mov
es
ja
sbb
js
jmp
add
std
in
int
mov
inc
cmp
test
mov
push
ret
pop
dec
mov
lret
inc
and
fdivl
push
std
scas
dec
or
flds
mov
sub
idiv
inc
hlt
decl
rorb
cltd
dec
lcall
xor
xchg
pop
int3
jl
pop
mov
pop
sbb
adc
sahf
jge
fsts
shrl
pusha
mov
ljmp
mov
loopne
mov
lea
jp
and
clc
outsb
mov
cld
jmp
nop
and
jp
ja
jl
push
xor
and
cmp
mov
shrb
enter
pushl
pop
mov
and
andl
push
cmp
mov
icebp
lcall
out
in
into
ds
jle
out
cld
sub
cmp
jbe
pop
insb
repz
pop
mov
out
mov
cmp
loop
ret
add
mov
jmp
push
dec
dec
mov
mov
cmc
mov
mov
mov
lret
fcoms
xchg
cmp
stos
ljmp
jns
push
decl
push
mov
mov
stc
xor
sub
cmp
fisubrl
sbb
scas
mov
mov
sub
xor
fnsave
jmp
and
fldt
ja
pop
sbb
xchg
mov
push
dec
call
in
imul
jmp
in
aad
push
cmp
bound
mov
loope
lcall
repnz
pop
dec
cmp
lods
lods
xchg
imul
aad
dec
cmp
sahf
sbb
inc
mov
movsb
pop
cmp
shlb
fs
dec
leave
iret
push
mov
cld
inc
sub
dec
out
pop
ficompl
es
test
xor
sbb
lods
sub
sar
jle
mov
mov
push
les
dec
dec
inc
stc
popf
xchg
cmpsb
aas
outsb
and
ret
decl
push
jo
push
iret
and
std
push
inc
push
call
mov
pop
lods
in
in
cmc
dec
or
insl
inc
ret
negl
loope
or
cwtl
out
pushl
cmp
ljmp
or
popf
call
in
fistpll
fildll
sbb
sub
adc
mov
rorb
stos
les
pop
arpl
ljmp
int3
xchg
insb
mov
sbb
lods
aas
movsl
mov
inc
pusha
jae
cwtl
push
loopne
mov
lock
test
dec
cmp
stos
adc
mov
lcall
push
stc
jns
inc
jecxz
mov
addr16
mov
sub
jne
mov
lods
ret
iret
ror
insl
aas
add
into
pop
jno
cvtps2pi
push
ret
cmpsl
test
pushl
xorl
mov
les
dec
inc
mov
jmp
in
test
test
pushl
mov
push
in
lds
mov
bound
mov
push
sub
cmp
sbb
repz
inc
mov
sqrtps
push
pop
arpl
ljmp
cmp
gs
cli
flds
jmp
or
fnsave
mov
xchg
jb
mov
test
bound
jns
mov
decl
lods
dec
add
mov
fcoml
xor
sub
push
das
jg
cld
jno
xchg
ret
and
push
incl
movl
cmp
pushl
out
jne
cmp
dec
push
xchg
jg
push
mov
or
imul
cwtl
jo
and
test
clc
mov
dec
jns
out
adc
inc
test
insb
mov
int3
and
in
lock
inc
mov
scas
inc
je
and
loopne
mov
or
call
add
and
pop
cmp
nop
cmpsl
add
int3
orl
jg
sub
into
enter
sahf
inc
pop
loopne
imul
sub
ret
sarl
imul
cmpl
and
pusha
dec
pop
pushf
mov
mov
mov
orb
mov
ljmp
jecxz
arpl
mov
xor
rcrb
testb
decl
jg
cli
pop
insb
arpl
pop
add
fs
int3
push
adc
and
sbb
fnsave
arpl
mov
xor
jae
mov
test
pop
mov
fbld
adc
shl
int
test
cld
cmp
repz
leave
sub
dec
lcall
add
pusha
mov
inc
and
xchg
jbe
or
stc
lcall
inc
push
sbb
rclb
xchg
xchg
out
repnz
mov
dec
movsl
jo
iret
dec
out
nop
aad
pop
xchg
clc
mov
call
lock
mov
xchg
mov
lahf
lcall
push
lods
sbb
andl
loope
loop
es
mov
mov
jmp
add
pop
hlt
pop
insl
in
jno
adcl
jp
add
call
cmovbe
mov
xor
mov
std
hlt
cld
dec
jmp
in
sub
dec
fcompl
leave
mov
stos
lods
lahf
jl
push
sub
sub
call
xchg
ror
or
mov
imul
sub
mov
mov
call
ret
sub
dec
mov
pop
pop
pop
jg
jg
lcall
in
lods
pop
push
ds
sbb
ja
movsb
push
adc
add
cmp
repz
adc
and
sbb
aaa
test
mov
adc
mov
out
cli
xor
outsl
cli
lcall
push
sub
sbb
and
lds
cmp
call
xchg
sbb
test
addl
and
std
push
sahf
les
dec
xchg
aam
lods
jne
imul
jnp
add
les
hlt
cmpsb
mov
push
sbb
imul
call
fnsave
std
les
or
mov
inc
loopne
mov
mov
pushl
inc
dec
test
mov
adc
xchg
and
mov
sti
push
stc
xchg
xchg
pushl
mov
out
lods
jge
jg
adc
push
cmp
je
inc
push
idivl
mov
sbb
call
addr16
lret
cmc
xchg
mov
test
ljmp
inc
clc
or
and
movsb
and
inc
pop
clc
push
cmp
iret
int3
loopne
cmp
add
xor
and
movsb
call
adc
or
mov
in
mov
jne
roll
pop
les
sti
mov
out
or
or
jp
cli
pop
sub
adc
adc
ljmp
add
cmpsl
xchg
pop
je
xchg
loop
cld
lret
mov
push
mov
int
lds
adc
ret
pop
nop
aas
mov
cmpsl
jno
sbb
or
xchg
outsb
popf
imul
cwtl
ret
sub
rcll
dec
int3
push
dec
aad
cmpsl
cli
mov
sbb
lcall
rorl
xchg
hlt
mov
pop
inc
leave
test
std
cmp
popf
incb
cmp
mov
incl
ljmp
cs
cmc
inc
mov
popf
pop
movsl
or
mov
cmpl
xchg
xchg
ljmp
jnp
mov
shll
lahf
mov
xorl
mov
push
aas
test
ljmp
mov
ljmp
or
and
repnz
pop
cmp
das
pusha
sahf
pop
mov
clc
enter
or
ret
cmpsl
xor
aaa
pop
pop
in
andb
fwait
dec
xchg
lret
xchg
adc
rcr
push
xor
mov
daa
dec
jnp
add
aaa
jnp
mov
js
ljmp
pop
dec
sub
mov
or
addl
push
sbb
mov
dec
adc
pushl
mov
in
dec
mov
es
lods
fwait
mov
hlt
pop
ja
mov
pop
out
lret
out
fists
icebp
call
pusha
cmpsb
xor
ljmp
ret
dec
inc
sbb
call
stos
mov
outsb
std
repz
add
add
pusha
push
sbb
call
mov
lea
jge
repnz
or
fs
out
jne
addl
call
and
mov
icebp
gs
and
insl
mov
mov
mov
int3
mov
cmp
cmp
shrl
je
push
mov
mov
jg
dec
cld
lcall
cmpl
xchg
imul
data16
jmp
jg
ficompl
loopne
pop
outsb
jns
dec
xor
mov
mov
lret
mov
sbb
xor
dec
push
test
sbb
test
mov
insb
sub
xor
lds
in
jb
mov
dec
add
mov
mov
out
sub
icebp
cmp
inc
decl
push
mov
out
pop
insl
dec
jle
sbb
mov
fs
mov
or
mov
mov
jecxz
push
push
push
mov
xor
sub
lcall
mov
loopne
mov
test
stos
lcall
xor
mov
outsl
cmp
lcall
sar
data16
out
dec
loopne
add
pop
out
mov
pushl
inc
mov
pop
mov
test
xlat
into
gs
adc
jmp
clc
add
cmp
popa
aad
fcmovnbe
ret
xchg
das
jmp
adc
sbb
iret
mov
dec
decl
fildll
movsl
mov
outsb
jp
sbb
jg
jmp
out
sub
incl
xor
test
mov
arpl
repnz
addl
jmp
data16
in
test
ds
cltd
in
lret
mov
jmp
add
jb
pop
jg
cld
add
mov
xor
adc
and
dec
pop
dec
and
jo
mov
incl
adc
rcrb
pop
sarl
jb
cmp
cmpl
push
lods
xchg
adc
imul
fcomip
bound
fcompl
mov
sarb
aam
cwtl
cwtl
imul
add
jmp
sbb
mov
outsl
mov
lock
fnsave
es
cmp
fbstp
inc
add
mov
ret
movsb
aaa
xchg
sub
decl
lret
sbb
clc
adc
shll
mov
sub
or
sbb
or
push
cmpsl
icebp
call
mov
jne
push
loopne
xlat
pusha
mov
xor
and
loopne
popf
mov
mov
call
jns
pop
add
push
mov
fldenv
add
out
xor
add
into
pop
cmpsl
movsb
cwtl
iret
frstor
ds
push
cmp
fimuls
hlt
inc
mov
incl
or
insl
and
mov
push
xor
aad
lock
orl
shlb
cs
lcall
sub
mov
push
pusha
pop
sub
idivb
push
js
fisubrs
sbb
popf
enter
ljmp
pushf
xchg
dec
xor
cli
out
mov
movsl
or
xor
loopne
push
stos
add
testl
and
nop
jns,pn
outsb
insb
pop
fsts
jg
ds
iret
out
sub
sbb
jmp
aaa
out
pop
sbb
mov
sub
fimull
std
xor
cmpsl
pushf
fcmove
scas
pusha
loop
jg
bound
inc
jecxz
mov
mov
sub
into
into
mov
ljmp
loope
test
add
in
mov
sar
addl
mov
mov
repz
ljmp
or
roll
pop
dec
clc
insl
add
dec
pop
sub
xor
mov
cli
or
mov
imulb
or
add
rcll
icebp
push
ja
insl
outsl
cli
ljmp
lahf
mov
movsl
and
ret
sti
call
stos
lret
clc
repnz
lcall
xchg
fistpl
je
jl
in
pusha
loope
cmpsb
or
stc
fistl
scas
jle
decl
and
pop
jno
mov
nop
dec
inc
pop
lods
mov
dec
addr16
xchg
icebp
sub
jo
and
rol
jg
dec
daa
lea
xor
icebp
movsb
insb
lret
add
ja
in
mov
xorb
lods
mov
dec
cmp
lods
fs
cmp
daa
test
push
or
cli
adc
adc
insb
adc
xorl
sbb
data16
or
mov
lea
lds
jmp
jnp
sub
cli
stos
add
inc
in
mov
enter
fdivl
sar
jmp
xchg
xchg
sbb
xor
rclb
dec
mov
inc
xor
pop
xor
mov
jp
or
pop
and
push
test
lcall
test
mov
jne
fsts
xchg
in
fimull
mov
decl
sbb
add
pop
add
xchg
test
mov
in
lods
jge
outsb
and
pop
mul
sbb
ja
mov
inc
enter
mov
test
sti
pop
fists
lret
xor
stos
or
shl
inc
into
lcall
lahf
fcomps
decl
repz
sub
jb
cli
sbb
pop
lock
push
aas
ljmp
lcall
mov
xor
pop
insl
mov
daa
dec
mov
imull
sahf
jecxz
jo
scas
add
dec
hlt
scas
call
call
repnz
cmp
cmpsb
mov
jne
lret
add
incl
pop
push
and
cmp
and
cmp
fcom
lahf
or
push
jmp
jne
mov
les
ret
out
cmc
repz
pop
add
jmp
cmp
ret
xchg
add
pop
dec
mov
cmp
repz
jmp
loopne
cmpl
insb
dec
inc
fidivs
add
rcl
pop
mov
mov
lods
adc
decl
lock
mov
inc
fdivr
cmp
pop
andb
push
iret
int3
jge
mov
jg
cld
loopne
ret
push
inc
mov
xor
lret
pop
insl
xorl
aaa
hlt
jl
jmp
mov
push
or
out
mov
inc
or
adc
and
fidivs
ret
ret
pushl
lods
js
lock
add
jbe
inc
sub
add
xchg
mov
into
popa
mov
aam
push
push
sbb
pop
frstor
fsubrl
cmpsb
pushl
adc
jns
rol
addb
dec
xor
sbb
pop
out
inc
int3
out
test
movsl
cmp
xor
sub
cmp
int
int3
push
adc
jp
lret
or
pop
sub
outsl
mov
jne
in
loop
in
dec
and
push
cwtl
bound
fmull
pop
ret
pop
fcoms
out
xchg
call
sbb
push
xchg
sbb
push
out
xor
and
ljmp
mov
mov
mov
incl
jns
pop
push
xor
fsubr
cmp
shlb
xchg
out
pop
sub
test
pushl
mov
push
inc
mov
adc
lret
push
daa
adcb
out
push
sub
adc
cmp
stos
push
nop
add
nop
mov
and
lret
cmp
adc
lahf
aaa
or
aas
pop
es
shll
sarb
push
and
loopne
leave
and
add
andl
mov
ljmp
outsl
cmp
pushf
lods
mov
sbb
inc
divb
repnz
sub
and
xchg
call
js
inc
xor
push
dec
sub
sub
push
std
sarl
mov
cmpsb
mov
mov
xorl
gs
inc
shr
cwtl
dec
ds
incl
adc
push
rcll
cmp
pop
out
xchg
ja
jg
jecxz
ret
push
push
sbb
and
ljmp
loopne
dec
clc
xor
outsb
adc
bound
mov
adc
aad
jb
or
pushl
loopne
js
push
jno
shrb
sbb
ja
test
ljmp
or
jge
push
stos
cmpsb
loope
inc
adc
stc
adc
pop
sub
shrb
sar
repz
into
and
xchg
add
xor
mov
int3
ud0
stos
jl
rolb
test
or
pop
out
and
or
inc
scas
into
in
lcall
in
ss
push
out
cltd
pusha
std
push
push
subb
push
mov
and
mov
mov
push
call
push
mov
imul
sbb
xor
imul
decl
pushf
sbb
inc
cmp
cwtl
test
sub
daa
cltd
movsb
mov
add
ljmp
sbb
fcomip
cmp
gs
leave
jmp
ffreep
pusha
xor
push
ja
dec
fxch
imul
xchg
mov
in
bound
xchg
push
add
in
ja
cmp
out
aaa
xor
mov
add
vcvtpd2dq
push
jp
xchg
xor
xchg
pushl
lods
jno
mov
rolb
arpl
in
mov
lret
adc
jle
sahf
mov
out
cmp
negl
mov
pop
in
pop
and
mov
mulb
in
jnp
push
std
mov
mov
cmp
movsb
inc
mov
mov
inc
mov
adc
ja
call
jge
mov
pushl
lret
les
js
lods
mov
lret
lret
and
stos
jmp
fcoml
add
dec
imul
pop
pop
mov
rclb
push
insb
mov
mov
imulb
sub
push
jnp
aam
mov
xchg
pop
lea
jmp
xor
add
mov
daa
fs
add
push
sbb
fst
adcb
movups
or
adc
push
ret
into
push
push
and
inc
dec
cmc
outsl
sbb
xor
dec
jns
cmc
add
mov
hlt
cli
mov
sti
sub
cld
push
mov
test
sar
jb
into
ss
lahf
dec
int
cmp
out
fs
in
pushf
and
cmpsl
lea
sub
cmpsl
or
add
popa
lds
ljmp
es
mov
jecxz
cmp
insb
aaa
or
das
imul
add
les
or
hlt
jle
jl
sbb
insl
push
clc
mov
cwtl
sbb
test
test
insl
jne
incl
mov
mov
inc
dec
adc
movsl
inc
adc
push
ljmp
je
into
jae
cmp
popa
xor
addr16
cmpsl
ret
loope
cmpsl
lcall
adc
jb
ret
push
inc
bsf
sub
lret
dec
xor
xchg
inc
sub
call
loopne
push
sub
xchg
out
fcmovne
enter
mov
scas
ret
lea
das
jmp
jg
dec
sahf
popa
cli
into
mov
inc
adc
clc
sbbb
imul
aam
push
inc
ljmp
sbb
mov
adc
xchg
ss
sub
xchg
sti
movsb
jl
loope
add
into
adc
popa
test
jns
dec
sbb
jns
decl
nop
sub
inc
cwtl
sub
iret
ror
sub
bound
cmp
and
test
dec
roll
stos
mov
aad
out
dec
repnz
insl
movl
or
insb
xchg
inc
jg
add
stos
add
inc
shrl
imul
div
sbb
test
mov
out
aas
ljmp
adc
aas
cmp
add
and
scas
pop
nop
mov
ret
imul
inc
jl
aaa
rol
xchg
rolb
xor
mov
mov
add
call
int3
xchg
push
outsb
mov
aam
inc
xchg
inc
pop
scas
or
stc
int3
and
xor
ret
jmp
imul
add
inc
test
aaa
pop
fbld
jno
add
sbb
inc
aaa
xchg
call
ljmp
outsl
or
fisubl
repz
scas
mov
mov
xchg
je
sub
dec
xor
test
test
cmp
xor
jg
or
inc
add
jne
inc
hlt
cmp
jae
lcall
push
inc
xchg
in
stos
aaa
int3
fstps
jne
pop
enter
mov
jge
pop
mov
loopne
pushf
push
stc
or
adc
sbb
mov
fcom
sbb
push
test
push
negb
and
lods
ret
nop
cmp
mov
pop
jmp
inc
mov
mov
jmp
cmp
cmpsl
bound
mov
hlt
sub
jne
sbb
inc
xchg
cmp
jmp
sahf
gs
test
stos
mov
jg
ds
dec
fs
push
push
sarb
mov
int3
jmp
push
adc
out
nop
and
lahf
outsb
push
and
adcw
sub
pop
mov
and
leave
aaa
data16
mov
adc
insb
fdivr
call
inc
xor
dec
jae
sbb
jno
sub
or
js
mov
xorl
pop
inc
decl
jecxz
pop
jp
inc
js
repz
sub
std
popa
or
lock
jmp
adc
nop
cmpl
mov
inc
sub
sbb
dec
enter
and
call
mov
sbb
jp
cs
ss
jge
rolb
or
jmp
clc
xchg
rclb
add
mov
aaa
lock
and
push
decl
clc
push
sub
jbe
dec
mov
call
cmp
dec
jp
es
in
insl
ljmp
rolb
dec
test
cli
jl
xchg
dec
shlb
iret
jns
mov
loope
ret
aad
shl
pushl
adc
or
push
inc
sbb
js
js
jle
dec
mov
fwait
xchg
mov
or
bound
lcall
jge
dec
movsl
sbb
inc
aad
sub
push
fwait
and
sbb
std
and
mov
bound
push
mov
jg
cmp
lock
jecxz
out
inc
inc
insb
outsl
loop
push
and
lcall
and
in
xchg
mov
lods
xor
fiadds
pushl
in
jo
push
test
pop
pushf
sbb
jb
lret
icebp
rcrl
test
dec
aam
decl
jle
out
sti
aad
mov
flds
mov
cwtl
inc
rclb
les
lock
cmp
clc
jmp
lret
cwtl
outsl
out
int3
sub
mov
pushf
es
cmpsb
xchg
mov
bound
add
ljmp
or
movsb
gs
and
pop
push
sti
and
imul
pop
gs
push
call
in
call
push
loopne
testb
push
pop
aas
in
lret
cmpsb
cmp
mov
jmp
clc
jo
dec
xor
mov
scas
stos
or
jle
cmp
jle
push
mov
jo
negb
shlb
push
jg
xchg
pop
loopne
jl
mov
dec
jp
push
ds
inc
in
imul
ljmp
mov
cwtl
mov
popa
mov
push
pushl
mov
mov
fwait
ljmp
std
push
iret
enter
pushf
scas
adc
push
xlat
inc
push
addr16
cmp
adc
xor
aaa
cmpsl
ja
shll
lcall
loop
repz
inc
pop
and
jecxz
sbb
ljmp
inc
dec
adc
pushf
jne
xor
ljmp
push
andb
inc
jl
stos
outsb
adc
sub
dec
or
mov
push
adc
incl
jo
je
push
pop
jmp
iret
pop
mov
cmp
pusha
adc
push
pop
scas
push
popf
ds
addb
jle
nop
pop
xchg
fimuls
and
push
ret
stc
dec
inc
xchg
sti
lret
arpl
or
jnp
sub
pusha
or
call
ss
mov
pop
punpckhdq
cltd
icebp
mov
fistpll
ljmp
cmp
push
sbb
jl
fnstsw
inc
shlb
mov
push
push
mov
call
loope
daa
or
dec
inc
les
sub
out
push
fs
icebp
aaa
xchg
cs
ljmp
push
inc
cltd
loopne
cltd
cmp
fnstenv
or
ret
scas
ret
pushl
pop
cmp
xchg
and
xor
jge
cmp
jecxz
or
rcll
scas
shlb
decl
imul
inc
and
stos
mov
testl
shl
inc
add
lcall
jbe
sbb
lods
mov
cmp
cmp
mov
mov
sbb
je
int
enter
mov
or
mov
mov
decl
in
icebp
in
test
or
adc
mov
das
int3
in
fwait
xor
xchg
loope
jb
repz
sub
idivb
mov
std
lahf
push
stos
xchg
aaa
cld
fcomip
arpl
mov
loop
and
dec
lods
ret
mov
ljmp
pusha
jb
mov
cmp
add
or
mov
inc
call
pop
shlb
int
sti
xchg
and
rorb
dec
decl
movsb
loopne
jg
sbb
pop
xchg
or
aas
cmp
test
cs
arpl
push
stos
enter
cmc
out
ljmp
incb
or
inc
or
rorl
hlt
or
decb
int3
mov
pop
xchg
mov
mov
ja
addb
pop
mov
and
icebp
in
insb
lds
in
mov
loope
or
in
imull
je
int3
jmp
into
sub
pop
ret
pop
mov
xchg
std
sub
bsr
and
mov
aaa
add
sbb
dec
xchg
int
mov
bound
xlat
pushf
dec
faddp
lcall
ror
push
push
jno
call
sar
call
inc
cli
leave
sbb
lcall
xor
mov
stos
inc
mov
cmp
mov
sub
lock
and
lods
loope
adc
call
out
addr16
sub
push
lds
mov
or
pushl
cs
and
dec
adc
adc
push
imul
nop
hlt
mov
testl
jmp
mov
insb
sbb
clc
clc
aas
repnz
dec
adc
push
js
xor
out
call
cltd
pop
outsb
and
andl
inc
adc
popa
scas
cmp
shrb
jae
adcl
inc
lret
add
mov
ret
mov
jae
lock
and
add
fbld
insl
adc
cmp
push
nop
cmpsb
mov
dec
xchg
cmp
iret
scas
jg
inc
js
xchg
out
dec
xor
int
aas
pop
add
ljmp
jae
fs
dec
push
movb
xchg
jnp
sti
jo
pushl
fiadds
inc
xor
daa
int3
sub
dec
shrb
cmp
pushl
sbb
fwait
sub
ret
sub
xor
pop
or
push
push
and
call
lcall
out
das
clc
push
imul
test
inc
push
mov
shlb
xchg
call
mov
lret
incl
mov
inc
pop
dec
xor
mov
mov
jne
repz
mov
inc
ret
leave
mov
aas
mov
mov
in
icebp
dec
cmp
push
loope
into
mov
nop
sbb
adc
mov
repz
loop
jg
rcll
xchg
nop
adc
and
pop
cli
mov
lcall
cmp
inc
out
lds
mov
inc
pop
and
sbb
pushf
xchg
and
int
mov
jecxz
mov
lret
cmp
lods
test
add
jo
xchg
popa
xor
inc
and
adc
xchg
addr16
and
imul
hlt
dec
call
mov
sti
mov
sbb
cmpsb
fcomps
mov
dec
daa
xor
jnp
xor
shl
jmp
fsubrl
scas
jle
inc
icebp
gs
push
xchg
sbb
jbe
and
xlat
push
andb
cmp
adc
movsl
or
push
mov
dec
test
xor
mov
and
iretw
nop
mov
jmp
mov
rolb
movl
push
incl
jmp
movsb
adc
js
push
or
jge
mov
mov
daa
mov
popf
add
shrl
jle
shrb
lret
push
ljmp
dec
add
jae
leave
adc
jp
pop
inc
jns
insl
pop
jb
ret
fldl
popa
xor
jo
ret
rcrl
mov
xchg
testl
cmp
call
inc
xchg
dec
sbb
mov
cwtl
pop
outsb
std
pop
mov
pushl
cmp
adc
daa
ds
push
mov
mov
dec
sub
out
lods
ljmp
sub
hlt
into
dec
dec
cmp
in
cmp
dec
in
pop
movsl
lret
icebp
ss
add
cmp
in
sub
mov
cmp
ret
fcomps
adc
fs
mov
pop
adc
xchg
jg
test
pop
out
add
mov
jge
sarl
aad
test
cltd
xchg
adc
jbe
fcomip
and
int
insl
push
in
outsl
and
outsl
fisttpll
pushf
mov
inc
incl
pop
lcall
pusha
ficompl
loop
js
lea
add
and
in
loop
xchg
mov
or
inc
ss
dec
or
xor
jp
pushf
pusha
outsb
xor
clc
call
lcall
push
jb
fdivrs
cmp
cs
push
mov
decl
sbb
add
jp
outsb
cli
mov
mov
dec
dec
lods
pushl
ret
add
push
sbb
clc
dec
mov
jmp
jmp
rcrb
fnstenv
dec
mov
popa
cmpsl
inc
clc
pusha
add
js
mov
call
push
ja
dec
sbb
dec
push
dec
fstp
cmpsl
sbb
cmpb
sbb
fldln2
ret
jmp
adcb
inc
daa
mov
stos
sahf
sbb
sub
push
dec
inc
push
in
mov
std
lahf
jo
cmp
ljmp
insl
jecxz
xchg
push
ljmp
and
or
pop
sti
sbb
imul
data16
push
aaa
shlb
lcall
out
aaa
iret
sub
push
push
fidivl
insl
das
sub
jp
dec
and
bound
cmpl
push
mov
jle
jmp
adc
mov
incl
fmuls
into
fs
lds
mov
add
rcr
call
pushl
cli
mov
pop
rorl
and
outsl
arpl
pop
test
add
clc
xlat
ficomps
fisttpl
fistpl
call
jns
rorb
lods
fnsave
mov
sub
inc
test
jg
xor
xchg
fstl
iret
out
roll
pop
imul
inc
add
ljmp
push
dec
ds
cmp
sub
fdivrs
jmp
sbb
rcl
xchg
xchg
jg
incl
xchg
das
movsb
and
xor
out
mov
pop
clc
fisubrs
sha256msg1
aaa
jg
cmpsl
rorb
or
cmc
or
mov
push
mov
jle
push
sbbl
stos
std
incl
or
xchg
test
mov
and
adc
and
into
hlt
imul
clc
push
jo
xchg
or
decl
jp
cmp
int
in
adc
push
out
cli
sub
mov
ftst
loope
fistpl
repnz
xor
pop
and
inc
xor
mov
ljmp
or
stos
pushfw
enter
iret
popf
stos
inc
push
mov
call
jp
fs
pop
pop
and
and
xchg
push
and
andb
call
dec
mov
xchg
int3
xchg
cmp
mov
cmp
pop
sbb
sarl
rolb
test
mov
out
xor
or
jnp
popa
in
mov
mov
aam
mov
into
ss
addr16
lea
pushl
pop
negb
addl
jmp
mov
cmp
daa
aas
shlb
sbb
repz
and
incl
jle
jo
icebp
daa
loope
testb
xchg
mov
outsb
and
fimull
jl
xchg
ljmp
push
in
cli
pop
stc
jmp
lea
jl
or
mov
adc
cmp
jg
jbe
ret
sarb
jns
mov
aam
xchg
test
xchg
push
ss
mov
push
jne
daa
fidivs
stc
dec
push
inc
dec
je
mov
in
jae
sub
jnp
inc
andb
inc
sub
lods
push
inc
pop
sbb
pop
scas
mov
and
lods
adc
jp
lds
mov
xchg
xchg
push
adc
cwtl
mov
scas
xor
sarb
pop
add
push
xchg
adc
jne
or
repz
mul
notb
adc
xor
decl
cmp
and
je
neg
nop
xchg
es
mov
push
sahf
decl
pop
ljmp
and
inc
idiv
xor
jg
xor
mov
fdivl
pop
mull
add
or
push
mov
je
jmp
xchg
jae
inc
data16
push
fiaddl
lcall
and
xlat
jo
imul
call
lock
xor
bound
xor
push
in
ljmp
clc
mov
jg
adc
ss
mov
mov
cs
dec
dec
push
or
push
cmpsb
addl
or
addb
pop
sub
out
outsl
test
jmp
mov
jl
mov
and
cs
icebp
cmpsb
mov
pushl
mov
sbb
fcmovu
jl
add
subl
popf
pop
int3
ret
dec
mov
ja
push
push
fs
icebp
or
ret
dec
in
adc
jge
xlat
ret
or
imul
jl
in
les
dec
lods
into
jo
ret
jmp
jnp
sbb
jecxz
xchg
sub
sti
cltd
popa
and
test
sahf
mov
adc
mov
xchg
pop
dec
mov
adc
ret
out
pop
lods
mov
xchg
std
fcomip
in
mov
addl
les
test
ds
mov
or
mov
mov
jecxz
adc
mov
pop
std
stos
jle
fucompp
adc
adc
js
aad
or
or
fwait
push
cmpsb
fisubs
mov
iret
int
popa
fidivrs
mov
jb
adcl
out
sub
cmp
mov
es
xor
inc
add
enter
popl
loop
ljmp
test
jbe
push
sub
xor
lahf
mov
dec
sub
pushf
fldt
cltd
xchg
int
out
movsb
mov
loope
jbe
mov
adc
hlt
jmp
and
mov
lret
sbb
sahf
adc
inc
icebp
popa
mov
call
popf
xor
xor
out
or
fs
push
fcmovu
out
pop
mov
lods
mov
jmp
fiaddl
mov
inc
push
insl
fisttpll
stos
lds
lret
stos
pusha
push
or
sbb
sbbb
mov
sarl
repnz
imul
fldt
xor
pop
lcall
pusha
push
mov
jg
xor
pop
bound
enter
mov
decl
lcall
adc
and
xchg
test
mov
repnz
test
cmp
ljmp
repz
mov
ret
bound
or
pop
popa
inc
lcall
inc
popf
jge
inc
das
or
dec
js
aas
sub
cmp
jle
inc
addb
adc
cli
sahf
out
inc
jmp
pop
pushf
pop
mov
icebp
enter
arpl
shl
pop
lcall
aam
dec
xchg
std
add
jns
int
cmp
add
test
inc
xchg
mov
pushl
cmp
daa
jle
outsl
jmp
daa
dec
inc
push
leave
aas
xor
stos
sbbl
mov
pushl
insb
mov
sub
mov
mov
lock
pop
enter
lcall
test
jnp
lahf
inc
mov
sarl
hlt
jg
sub
dec
outsb
sub
ja
jnp
jecxz
xchg
cld
call
pop
lcall
aas
fadds
fs
loopne
jg
pop
sub
inc
negb
imul
xchg
xchg
lcall
aaa
lcall
inc
sub
hlt
xchg
dec
xchg
in
push
xchg
sbb
jns
ss
dec
fmuls
cmc
lods
adc
je
push
push
xchg
lret
push
push
adc
out
dec
movsl
clc
dec
outsl
jg
lcall
pop
fiadds
outsl
jle
addr16
fisttpll
push
iret
lret
sub
cli
jnp
mov
ja
daa
cltd
dec
or
mov
jnp
adc
cmpsl
inc
mov
mov
jo
xor
mov
enter
or
xor
dec
ljmp
xchg
xor
sub
mov
and
jmp
push
xorb
popf
push
stos
roll
inc
clc
sti
shlb
push
jb
pop
nop
inc
dec
xorb
cs
lret
das
popl
repz
mov
mov
xchg
test
stos
dec
cmpsb
call
xchg
lahf
mov
mov
jnp
roll
inc
xchg
cmpsb
stc
scas
push
xorl
loope
cli
push
cmp
out
dec
aam
xchg
jle
mov
mov
inc
inc
lea
xchg
push
or
adc
push
jno
fldt
decl
in
adc
out
sub
or
push
fcomip
jle
push
lret
inc
arpl
dec
inc
jnp
in
mov
mov
push
mov
jecxz
cmp
or
pop
js
roll
lods
lret
cmp
aam
pushl
test
add
or
lods
lods
int
idivl
mov
cld
mov
aaa
jmp
decl
pop
popf
mov
pop
pop
inc
popa
inc
pop
je
ljmp
decl
icebp
jge
unpckhps
scas
cltd
ljmp
ficoml
pop
pop
cld
jmp
repnz
in
or
repnz
int3
xor
mov
sub
dec
jmp
xchg
and
ret
inc
shlb
jnp
dec
fxch
call
xchg
icebp
nop
mov
insb
cmp
sub
unpcklps
xor
jnp
add
into
mov
mov
pop
mov
lret
mov
xchg
scas
xchg
outsl
icebp
add
mov
loope
inc
sub
push
xchg
lret
jg
ljmp
nop
jl
sbb
enter
cli
inc
in
jne
pop
mov
mov
aaa
cld
dec
or
add
dec
sub
adc
adc
lds
je
pushl
or
jl
sub
mov
mov
int3
inc
jmp
mov
push
int3
mov
call
ljmp
ret
fistpl
stos
out
push
pushf
push
int3
add
inc
xor
stos
inc
incl
std
rdtsc
stos
mov
push
cltd
mov
push
adc
mov
jg
push
jae
lods
hlt
jmp
inc
adc
shll
push
arpl
sub
ja
outsl
loopne
sbbb
lahf
xchg
incl
lods
cmp
sub
dec
repz
push
lgdtl
xor
adc
or
ljmp
ret
xor
add
inc
lret
and
cmp
mov
lds
dec
clc
stos
ljmp
iret
inc
mov
cs
ficompl
gs
addr16
lret
xor
dec
out
xor
xor
sbb
jae
addr16
or
gs
cwtl
sbb
sbb
fwait
ljmp
xchg
cmp
insl
mov
sbb
or
pop
lock
pushl
rorl
xchg
xchg
dec
xchg
xchg
outsb
mov
mov
xchg
addr16
mov
rcl
leave
mov
into
pusha
inc
mov
xor
int3
aad
adc
cs
fstl
push
adc
outsl
test
push
pop
lock
sbb
sbb
imul
jno
loopne
das
jg
jbe
pushf
pop
push
xor
out
mov
mov
lret
cs
push
inc
adc
stos
inc
lds
push
jg
jns
stos
push
mov
sub
sbb
mov
scas
xor
shr
ds
scas
sti
das
aam
jmp
xchg
stos
lret
insl
cmc
out
lods
loopne
mov
mov
incl
insb
imul
sbb
addr16
dec
lret
sub
ljmp
cmpsl
icebp
lock
mov
inc
push
mov
push
nopl
subb
ficoms
fcomip
decl
loop
lea
pop
or
jp
lcall
cmp
inc
dec
shrl
sbbl
adc
pushl
jmp
out
insl
inc
popf
or
jl
mov
and
xchg
stc
ret
clc
jne
pusha
or
sbb
sbb
and
sbb
adc
ljmp
sbbl
into
cmp
rclb
jns
ret
dec
addr16
push
shll
test
jmp
pop
in
dec
out
jo
xor
das
sub
jle
out
pop
pop
cmp
adc
decl
int
sub
and
jae
add
adc
int3
mov
jmp
dec
out
lcall
dec
push
jg
fs
sub
addr16
cmpsb
jg
fcmovu
mov
mov
ljmp
push
dec
scas
stos
stc
ljmp
dec
sbb
sub
lret
fbstp
lahf
mov
dec
cmp
rcll
lcall
xchg
das
lahf
dec
xchg
cmp
xchg
add
jge
movsb
inc
jmp
sbb
add
popa
mov
push
decl
int3
and
add
and
outsl
dec
push
add
repz
add
xchg
push
data16
dec
sub
call
pop
out
lcall
or
add
incl
ret
xchg
mov
cmpsl
in
in
cs
add
pushf
cwtl
outsl
mov
xlat
jl
push
mov
mov
mov
push
push
test
mov
jmp
mov
fcompl
pushl
call
fldenv
in
xchg
shlb
pop
fs
and
cltd
and
fldl
fdivrl
ljmp
pop
insl
xor
test
dec
sbb
sahf
xchg
hlt
sub
fidivl
lcall
mov
fldenv
ficompl
pushf
fstp
shlb
dec
movsb
or
mov
push
xor
testb
pop
or
lock
pop
mov
xor
push
mov
jg
mov
gs
cmp
adc
mov
mov
scas
mov
ror
hlt
stos
mov
jne
pop
xor
aam
lods
pop
scas
cmp
jg
pop
cwtl
movsb
mov
dec
clc
or
mov
push
jno
jg
push
filds
jg
fidivl
subl
dec
xor
sub
orb
out
cmp
call
stos
sub
mov
test
pushf
arpl
adc
sbb
pushl
aaa
jp
xchg
add
outsb
cmpsl
xchg
aam
jo
or
pushl
add
jmp
or
pop
outsl
jo
push
or
add
es
cs
stc
fisubrs
sub
add
sub
in
incl
jle
inc
or
insl
pop
xchg
cmc
push
jp
dec
insb
jnp
add
stos
jle
sbb
bound
in
out
clc
lock
scas
loop
stc
fsub
mov
pop
mov
icebp
sti
rcrl
add
cmpsb
jne
leave
inc
push
xchg
add
jg
aaa
inc
insl
jecxz
or
scas
and
adc
mov
icebp
sbb
sbbl
jl
mov
mov
lcall
ror
ljmp
fwait
dec
inc
pop
push
in
in
sahf
mov
push
dec
dec
sub
mov
cld
inc
mov
ffreep
nop
jno
ds
rorl
xor
mov
mov
sbb
test
out
jge
incl
mov
cmc
nop
fcomps
fdivl
push
dec
cmp
and
ljmp
mov
push
lahf
bound
lds
jmp
pop
and
fs
std
jl
ret
or
fstl
enter
mov
out
aaa
pushf
sub
or
mov
aad
in
das
xchg
xchg
fldl
pop
mov
and
mov
jmp
jmp
inc
rclb
adc
stos
or
dec
sbb
ss
xchg
push
and
inc
loope
jmp
push
jno
pop
push
imul
shlb
aad
inc
cld
mov
pop
mov
cmp
xor
insb
inc
push
push
dec
cmp
decl
les
and
inc
mov
call
shl
rorl
adc
mov
nop
aam
int
jecxz
loopne
inc
push
xchg
jmp
xor
nop
adc
mov
jae
mov
push
imul
mov
aam
je
mov
jecxz
ljmp
stos
cmp
decl
xchg
or
int3
std
or
inc
movsb
push
cwtl
out
sub
jmp
lds
jp
leave
ss
mov
out
cmpl
or
addr16
inc
jl
and
xor
rcrl
enter
fbld
jmp
std
fsubrs
mov
or
lds
fs
dec
push
mov
std
call
inc
scas
dec
push
dec
add
xchg
dec
orl
cmp
movsl
xor
lahf
lret
add
stos
push
test
clc
dec
ds
jmp
mov
push
hlt
jnp
adc
mov
mov
sub
call
cmp
and
mov
fdivrs
out
insb
or
sbb
or
fiadds
cmpsl
inc
std
lcall
pusha
out
push
mov
sarb
cmp
shrb
arpl
jne
pusha
or
lock
xchg
jb
dec
aam
icebp
mov
call
loope
pop
movsb
jno
nop
leave
dec
enter
fmul
cmp
mov
push
in
lret
dec
or
decl
scas
sub
fisttpl
into
mov
pop
sub
mov
jmp
push
stc
push
xor
cmp
enter
es
push
clc
ljmp
inc
outsl
and
pop
insb
js
push
xor
cmp
cmp
dec
int3
or
cmp
fisubrs
and
adc
icebp
popf
gs
movsl
scas
mov
or
lcall
call
lcall
cmp
dec
lcall
jle
enter
and
inc
scas
xchg
push
inc
jne
mov
jns
mov
test
mov
lcall
decl
in
mov
fs
adc
or
push
adc
jns
cmp
jmp
adc
fdivrs
lods
aas
in
sti
sub
inc
add
push
scas
das
mov
fists
jg
lcall
add
adc
inc
cmp
jg
push
push
repz
sub
jl
call
leave
orl
xchg
out
loope
andl
aam
sub
mov
adc
inc
jp
imul
sbb
cmp
aam
test
xor
sbb
sub
pushl
xorb
cltd
push
xchg
mov
adc
sbbl
sub
lcall
es
fwait
or
mov
sarl
or
outsl
mov
adc
out
fisttpll
loopne
or
pushl
xor
mov
lods
addl
mov
sub
push
dec
loope
decl
mov
jge
mov
cmpsl
or
lcall
imul
mov
sbb
mov
aas
dec
aas
xchg
push
cmp
jecxz
mov
mov
pop
bound
lea
dec
insb
jecxz
sbb
fnsave
pop
xor
pop
in
out
pop
std
jecxz
out
es
push
ljmp
adc
outsl
add
inc
ja
bnd
fs
jge
lcall
jmp
pusha
add
fs
lods
cmp
loopne
rolb
call
bound
jno
dec
add
mov
push
cmpsl
stos
mov
inc
push
push
gs
cmp
push
jb
and
pushl
inc
mov
sbbb
subb
hlt
lcall
xchg
loop
xor
mov
pop
cmc
mov
cmpsl
outsb
mov
jno
aad
testl
inc
pusha
inc
dec
decl
sub
in
inc
pop
lock
leave
cmpsl
mov
cmp
outsb
fs
lret
mov
push
cmpsb
mov
iret
cltd
dec
mov
jbe
pusha
cld
sbb
ljmp
lock
test
sub
shlb
cltd
mov
jo
cmp
mov
movsl
aas
es
push
dec
xchg
adc
or
incl
cld
rcrl
cmpb
decl
sti
sbb
inc
stos
or
mov
iret
popl
pop
cmc
aaa
sbb
sti
stos
stos
and
push
add
imull
adc
jg
sbb
mov
nop
sbb
dec
testl
jl
and
cmp
sub
jns
fisubrl
add
mov
sbb
inc
insl
jne
mov
pusha
in
test
addr16
stos
je
lock
decl
and
sbb
cmp
xlat
mov
lahf
xor
js
cld
testb
mov
test
adc
or
push
lea
jb
js
imul
iret
jge
xor
jo
insl
notl
mov
jp
adc
pushf
cmp
xor
stos
andb
sub
shll
es
cld
call
push
or
jbe
hlt
jmp
add
xchg
sahf
fldt
dec
jl
jg
sub
sbb
ljmp
out
adc
shrb
lcall
cltd
push
dec
mov
inc
cmp
sarb
mov
cmc
or
sbb
decl
add
and
ss
dec
cmpsl
repnz
fs
lahf
sub
incl
shl
and
jne
into
sbb
mov
addr16
xor
data16
out
lods
mov
popf
out
outsl
ljmp
mov
lds
lods
mov
sbb
and
jmp
movsl
dec
mov
cmpsb
aad
sub
out
adc
out
jo
mov
decl
sub
adc
adc
cld
jg
adc
mov
jge
call
xchg
sbb
inc
lcall
mov
sar
test
cmpsb
test
loopne
rclb
jmp
or
ss
pop
stos
ljmp
sbb
nop
pop
mov
shl
sbb
aam
jnp
aas
icebp
fisubrl
aam
and
call
outsb
mov
xchg
add
sub
push
out
push
jg
fidivl
cmc
push
jmp
fidivrl
or
lea
loope
fwait
daa
push
fdivl
mov
clc
rcl
loopne
pop
sbb
scas
mov
inc
iret
xchg
rcrl
adc
rclb
jle
imul
rcll
jg
lds
jecxz
jo
push
xor
push
iret
jge,pn
mulb
pop
fsubrs
mov
cmp
pop
outsl
inc
std
push
iret
cmp
ljmp
inc
xor
lahf
lahf
pop
cmp
dec
scas
sbb
sti
xchg
adc
jns
loope
iret
in
popf
xchg
push
jl
insl
push
mov
scas
inc
decl
ret
imul
lea
xchg
mov
sti
jmp
dec
cmp
dec
or
rep
icebp
jecxz
leave
cmp
roll
ds
lcall
xor
std
ss
push
cmpsb
icebp
dec
loope
push
mov
xchg
pushf
je
jg
adc
inc
adc
push
xchg
push
scas
add
xor
or
imul
movsb
jmp
jmp
in
jne
add
subl
mov
xchg
push
call
and
fwait
pop
mov
mov
ss
scas
int
or
add
shl
sarb
add
xor
or
xorl
repz
inc
cmc
sub
lret
decl
sub
xchg
or
cmp
cwtl
lahf
cmp
std
inc
clc
sti
dec
pop
xchg
lcall
clc
dec
mov
sub
shlb
push
mov
jae
dec
push
dec
pop
xor
decl
push
sbb
sahf
cltd
jno
sub
jl
je
stc
fsubl
sub
ljmp
pushl
or
or
lahf
sub
loop
cmp
xchg
adc
mov
loopne
inc
mov
bound
aaa
cmpsb
incl
aad
or
dec
sbb
xchg
xchg
scas
xlat
stc
filds
cmpsl
jp
loopne
call
cmpsl
sbb
push
mov
pop
mov
jmp
pop
sti
jecxz
pushf
or
iret
loopne
jne
add
addl
test
movsb
add
call
rorb
arpl
shl
jmp
mov
lods
jg
imul
jecxz
jno
mov
pop
inc
cmp
mov
dec
dec
mov
cmp
add
jge
or
shrl
stos
push
int
sub
fcmovu
mov
jmp
incl
mov
jo
and
push
mull
popf
out
test
daa
add
cld
out
adc
es
stos
jl
add
sub
sbb
scas
outsl
jno
in
in
das
xchg
decl
xchg
out
daa
cmp
mov
and
mov
mov
call
add
outsb
ljmp
in
pop
gs
je
mov
sbb
jge
xorl
pushl
adc
cld
lock
xlat
jno
jl
mov
test
push
pop
lcall
out
addb
jp
into
push
mov
std
decl
in
adc
cwtl
or
jecxz
scas
inc
gs
out
push
xor
mov
pop
xor
filds
pushl
arpl
out
lea
and
mov
inc
pop
movsl
lods
jae
add
lcall
hlt
ret
aad
xchg
lret
dec
imul
sub
mov
or
inc
or
dec
or
lret
loopne
cmp
xchg
fidivrl
and
mov
ss
cwtl
jbe
pop
pop
push
out
outsl
fucom
fwait
jg
imul
ljmp
es
sbb
xor
add
add
in
push
push
mov
inc
mov
jg
xchg
clc
mov
cmp
ljmp
mov
idivb
lods
or
shlb
daa
adc
ljmp
mov
mov
rcrb
fcomps
clc
movsb
lcall
gs
mov
and
sahf
je
fildll
ja
test
lcall
leave
jp
out
movsl
mov
sbb
flds
dec
fwait
pop
xchg
push
xor
ljmp
arpl
mov
jns
cld
dec
scas
int3
and
jg
mov
pop
movsb
dec
mov
into
mov
mov
xchg
lock
outsb
pop
and
scas
push
add
lcall
out
and
je
jecxz
movb
mov
jns
add
es
data16
in
jle
sub
mov
and
dec
and
add
mov
rcl
ss
mov
sub
cli
decl
adc
jecxz
popa
xor
xor
or
jnp
or
dec
test
push
push
jp
mov
call
add
loop
jo
add
ficomps
push
imul
ds
or
dec
scas
push
sub
mov
jle
pop
inc
or
cmpsb
sub
or
filds
push
ret
xchg
xor
inc
add
adc
xchg
lahf
stc
mov
icebp
mov
fildll
decl
fstl
push
lret
fcomps
cs
fdivl
enter
pushf
cmp
add
fsubl
call
dec
dec
in
stos
shll
or
dec
js
imul
mulb
xchg
sbb
xchg
sub
push
cmp
jmp
cs
fstp
adc
subb
inc
jmp
aaa
lahf
dec
icebp
ljmp
incl
enter
mov
jbe
lret
pop
mov
pop
pop
sbb
mov
pusha
loop
lods
add
jnp
insb
out
cmp
subb
jae
mov
jbe
sub
jecxz
mov
pop
add
imul
sbbl
pop
cmp
inc
and
mov
and
xor
push
dec
shr
cmp
cmc
inc
push
into
inc
iret
outsb
adc
sar
decl
fwait
data16
scas
lahf
pushf
and
inc
out
mov
inc
dec
xor
rclb
or
mov
inc
adc
jo
jle
je
js
subl
out
lea
outsl
movsb
cmp
dec
pop
pop
mov
push
and
popf
pop
cmp
mov
fnstenv
in
jmp
ss
push
jo
shrb
imul
aaa
aam
mov
or
jp
pushl
daa
mov
xchg
pop
ss
lret
inc
push
cmp
jmp
and
btc
cmpsb
test
lcall
jp
jne
adc
mov
out
mov
jmp
inc
sbb
mov
dec
add
or
hlt
int3
incl
mov
mov
and
push
shll
push
test
add
leave
nop
push
cli
dec
enter
addl
dec
rclb
jmp
loop
jo
lcall
mov
test
add
dec
mov
movsb
dec
in
dec
dec
push
mov
stc
and
call
stos
add
aad
mov
jmp
popaw
mov
mov
ret
mov
dec
xor
outsb
lcall
decl
in
mov
and
lea
sbb
cmp
or
pusha
imul
push
jne
aaa
mov
test
lds
enter
ljmp
shl
jmp
add
repnz
pop
outsb
mov
repz
hlt
ja
xor
xchg
jg
incl
dec
or
es
dec
cmpsb
scas
or
adc
jg
imul
call
bt
iret
mov
push
fstl
pop
mov
cmp
ljmp
inc
stos
stc
ss
mov
pusha
jb
xchg
or
fsts
decl
pushf
fsts
stc
outsb
gs
cmp
add
inc
pop
mov
shll
jl
mov
repnz
inc
cltd
outsb
fwait
pop
out
sbb
xchg
lock
decl
jmp
sub
icebp
mov
mov
add
shl
jno
nop
dec
mov
sbb
push
cwtl
shll
push
fdivl
arpl
lcall
adc
jo
arpl
scas
out
mov
out
push
xchg
cs
outsl
jg
add
shrb
cli
insb
iret
sbb
xor
sbb
push
iret
mov
add
mov
sub
and
hlt
rcrl
in
ss
into
cmp
andb
jne
test
call
add
cmpsl
out
lea
es
and
lret
mov
cld
xchg
mov
cmp
jns
push
rclb
mov
jmp
mov
jmp
cltd
call
outsb
insl
arpl
addr16
push
pop
dec
sar
inc
sarl
mov
jmp
aaa
or
dec
push
gs
es
cmp
adc
stc
pop
cmp
and
decl
xchg
daa
cmc
cmp
enter
addr16
lahf
nop
and
jbe
sub
ja
aaa
mov
jl
push
mov
int
lret
iret
mov
and
icebp
cwtl
inc
dec
lcall
jp
jb
mov
lods
pop
mov
inc
inc
hlt
scas
mov
cli
mov
jmp
adcb
loopne
jnp
jbe
sbb
sbb
call
ret
daa
shr
pop
dec
push
cmpsl
cmc
pop
les
pop
cltd
jecxz
dec
xor
popf
pushl
ja
lds
addb
ds
lods
cld
pop
pop
sub
dec
push
movsl
incl
or
dec
cmp
jmp
jne
ds
repz
std
loop
push
ljmp
sbb
jb
ret
ret
inc
je
xchg
call
test
rcrb
mov
bound
stos
pop
and
test
and
mov
adc
mov
fbld
int3
xchg
sar
incl
mov
inc
in
sub
add
ljmp
xchg
dec
aaa
cmp
adcl
jp
enter
and
sbb
movsb
insl
lods
mov
dec
into
andl
ret
push
pusha
add
ljmp
stos
scas
movsb
fstpt
xor
aaa
stc
mov
data16
mov
mov
hlt
aad
sub
mov
decl
mov
mov
or
inc
sub
jno
aaa
push
jnp
jg
xchg
jo
stos
mov
es
dec
jp
fsubl
fmull
lcall
or
out
add
aad
mov
scas
orl
jp
mov
mulb
mov
pop
pushl
mov
jb
inc
cli
jl
sub
in
pop
dec
insw
fsubl
call
scas
out
scas
cmp
xchg
lcall
inc
rcll
pop
rcr
push
out
inc
or
pushl
lods
loope
push
nop
mov
jg
mov
sub
jae
bound
dec
pop
cmc
out
fwait
cmp
mov
call
cs
xchg
mov
mov
mov
outsb
sub
lea
call
cmp
iret
or
scas
jmp
jno
es
inc
shlb
dec
or
icebp
push
cmp
xlat
fdivr
aaa
cmp
std
push
negl
sub
movsb
jge
jne
jae
aam
jmp
or
popf
adc
mov
jp
dec
cwtl
add
test
mov
jno
sub
mov
push
xchg
xor
fs
mull
test
aaa
addr16
add
sbbl
rol
lcall
call
push
push
idivb
xchg
stos
fidivrl
divb
fndisi(8087
js
mov
inc
decl
push
inc
std
pusha
je
out
push
rcr
test
sti
adc
call
and
dec
pop
shll
repnz
lods
xor
pop
hlt
jmp
outsb
jbe
fildl
xor
hlt
aaa
sahf
sub
in
movsl
push
mov
aam
bound
cmpsb
outsb
sbb
fs
faddl
je
lods
or
mov
movsl
dec
push
call
push
out
mov
lahf
pop
mov
jp
jmp
das
clc
lcall
sub
sub
scas
jge
fwait
out
jae
fcmove
sti
push
jg
lcall
sahf
sbb
pop
pop
jbe
mov
hlt
jnp
mov
scas
push
incl
jmp
mov
std
add
outsb
sbb
lcall
incl
mov
jl
shll
push
sbb
jns
inc
pop
les
xchg
sub
jmp
daa
insl
enter
add
sub
adc
mov
xchg
xchg
int
nop
push
mov
cmp
in
call
lcall
mov
js
ds
ror
add
jbe
inc
into
push
out
ljmp
incl
jne
mov
push
jge
shll
pusha
add
mov
jg
pushl
and
xchg
push
pop
filds
and
push
fldl
cmp
xor
or
sahf
sub
jl
mov
scas
push
pop
in
adc
cltd
lcall
cld
cmp
jl
push
arpl
inc
fnsave
aam
jns
aam
mov
out
sbb
ds
mov
incl
adc
mov
int3
pop
data16
push
xchg
or
cs
inc
xchg
inc
sbb
ljmp
movsl
jg
sbb
sub
lcall
push
xchg
out
sahf
cmp
call
fcmovb
xor
mov
jp
mov
movsb
sbb
ljmp
or
jne
mov
movsb
sub
lods
aam
fidivrs
mov
enter
aad
fildll
or
outsb
fnstcw
push
mov
mov
loop
icebp
enter
ljmp
xchg
rorl
orb
push
mov
int
cs
icebp
xchg
dec
push
sub
fmuls
lock
call
aas
xor
rcrl
jmp
push
ljmp
jmp
nop
fucomip
mov
jo
cmpsb
leave
and
and
nop
xchg
add
xor
data16
inc
loope
xchg
aas
imul
push
xor
mov
or
or
sub
sbb
jmp
mov
ret
pop
bound
inc
rolw
mov
xchg
inc
sub
std
pop
push
and
popa
decl
jno
pop
out
fisubrs
mov
mov
orl
popa
ljmp
iret
sahf
xor
lret
xor
dec
lret
mov
je
push
or
call
add
lods
imul
int3
or
test
push
js
imull
push
sub
inc
jge
loop
cli
incl
fstl
shll
cmp
mulb
cmp
pushl
insb
push
jae
lret
addr16
rdtsc
push
cltd
scas
loope
cli
lcall
mov
in
jns
mov
and
mov
scas
and
lcall
aam
mov
jnp
adc
in
push
and
cmp
ljmp
push
or
mov
mov
lods
ret
scas
out
adc
mov
mov
cltd
stos
movsl
sahf
jb
out
mov
adc
xor
inc
mov
pushf
iret
adc
popa
jl
repnz
jg
es
fwait
ljmp
add
jecxz
push
xchg
pop
out
cmp
mov
xchg
and
cmp
int3
push
stos
push
push
decl
sbb
sahf
push
pop
cld
push
pop
call
fistpl
lods
adc
sbb
inc
clc
incl
cltd
test
insb
mov
int3
add
cmpsl
dec
sarb
lds
fs
decl
in
jo
mov
out
add
lods
pop
add
incl
pushf
pop
pop
dec
inc
cmp
sbb
fildll
fnstcw
std
jnp
out
push
cmp
in
icebp
cmpsb
mov
inc
mov
cwtl
xchg
push
add
imul
add
ljmp
aam
jo
xor
nop
jnp
pop
jb
push
loope
fisubs
cmc
push
jno
call
loop
push
je
sub
jge
fdiv
fsts
lds
mov
clc
lret
sbb
push
xchg
outsb
jae
cmc
and
mov
jg
les
test
add
cmc
xchg
dec
sub
inc
movsb
dec
movb
jmp
mov
jp
mov
movsw
xchg
inc
aas
or
sub
inc
jo
test
cmp
jb
ficoml
cs
ret
mov
mov
jmp
aam
push
push
and
in
mov
pop
xchg
fstps
and
jo
jns
scas
mov
sbb
mov
push
mov
mov
icebp
mov
push
cli
incl
addr16
popa
adc
pop
jp
add
sbb
or
cli
lret
or
mov
push
and
or
mov
je
ret
lock
out
test
mov
pop
or
daa
adc
xor
inc
ljmp
int3
or
and
ror
lret
lock
xchg
inc
jg
lock
ljmp
adcb
jo
call
push
mov
call
inc
pop
lcall
negl
pop
into
cmp
add
sti
repnz
int3
add
jg
or
loop
xlat
mov
stos
pop
out
inc
rorb
adc
mov
dec
sub
lds
hlt
shl
cmp
or
jmp
inc
cmc
pop
mov
lds
pushf
push
fstpt
jecxz
mov
nop
fisubrl
cli
sub
pusha
adc
adc
arpl
insb
bswap
xor
xchg
mov
loopne
mov
clc
or
out
sahf
and
fstps
push
jno
lret
mov
lods
and
jae
pop
jg
add
cwtl
mov
in
pop
punpckhwd
int3
inc
fwait
stos
inc
decl
jae
adc
add
mov
ror
outsb
in
aas
insb
call
adc
iret
lods
cwtl
fcmovbe
movb
mov
lods
or
jo
pop
lret
shll
fildl
lcall
jmp
in
and
push
pop
lods
mov
jns
ja
push
pop
and
in
add
jmp
jmp
in
aad
leave
leave
clc
jmp
int3
movsb
jp
push
push
or
lods
mov
test
dec
test
pusha
aam
imul
lcallw
leave
and
test
test
ljmp
scas
pop
xor
or
dec
movsl
cmc
popa
sub
pusha
xchg
sub
daa
mov
add
insb
das
sub
cwtl
and
js
pop
add
pop
or
cmpsb
sbb
mov
lcall
adc
loop
push
mov
fucomp
and
mov
pusha
lds
push
inc
sbb
cmp
push
dec
cmpsl
lods
gs
push
nop
aad
jbe
xor
stc
and
inc
das
cmpsl
or
fcoml
int3
mov
lahf
xor
fs
jno
bound
cmp
pop
clc
pushl
jne
ror
cld
dec
push
adc
jle
hlt
add
inc
jle
int3
mov
repz
xchg
jns
cltd
scas
mov
ljmp
lods
stc
arpl
ret
jecxz
push
call
push
cmp
jmp
popa
bound
fbld
push
cmp
xchg
in
into
add
inc
in
lret
popa
dec
dec
pop
cmp
ljmp
sarb
stos
mov
mov
sub
fs
gs
add
push
shr
fcomip
jmp
call
iret
and
sbb
jl
mov
xor
mov
mov
pop
push
cld
jle
lods
jb
xchg
sub
mov
mov
mov
in
sub
jecxz
shl
pop
orl
inc
mov
aam
popf
jmp
incl
mov
add
movsl
ds
mov
sub
stc
jle
jecxz
dec
push
ja
and
pushf
mov
ljmp
dec
lock
dec
adc
fs
inc
hlt
jecxz
xor
mov
inc
push
xor
dec
jmp
test
lcall
jbe
popf
imul
out
sub
or
lock
mov
pop
mov
jmp
jmp
mov
clc
stos
jns
jge
loop
sub
fildl
dec
leave
jno
jmp
jmp
add
movsl
lcall
inc
sbb
sti
out
fistpl
xchg
mov
ja
mov
iret
pop
je
jl
ss
cmp
mov
lods
mov
sbb
cld
lcall
repnz
aas
test
ds
and
sarl
pop
mov
xor
lahf
cli
jae
jle
add
jae
addr16
mov
mov
xchg
jb
pop
mov
sbb
aam
jl
int3
mov
test
and
call
movsl
mov
fsubrl
jg
addr16
dec
mov
gs
mov
jns
std
jp
lret
daa
das
push
imul
in
bnd
cmpsb
call
out
xor
dec
xor
xor
adc
rclb
mov
pop
xor
mov
dec
pop
xor
gs
pushl
pop
lds
rorb
aaa
outsl
shr
enter
clc
test
push
ret
or
leave
push
dec
incl
or
mov
rorb
xchg
dec
clc
dec
lods
cmp
inc
adc
incl
sub
mov
cmp
ss
mov
hlt
pop
cmp
fnsave
test
cli
adcb
pop
cmp
pop
jbe
outsb
adc
mov
subl
fcoml
ret
decl
stos
sub
jno
and
enter
call
and
cltd
xchg
pusha
add
jb
lcall
test
out
jmp
mulb
add
jge
icebp
xor
mov
push
pop
jno
push
dec
frstor
fcomip
in
lock
push
fdivr
ljmp
cmp
loop
xor
jae
ret
lcall
cld
sahf
jmp
dec
sysenter
pop
das
lods
movsl
mov
inc
pop
push
leave
icebp
cmpsb
xchg
or
push
test
test
mov
pusha
loopne
push
incl
or
fsubs
inc
xlat
subl
sti
pop
ret
pop
pop
int3
push
jle
sub
dec
mov
fucom
test
inc
movsl
roll
pop
clc
xor
std
test
iret
scas
push
jle
call
cmp
out
shl
mov
scas
push
and
out
ds
icebp
es
gs
decl
insb
rorl
stos
inc
inc
pop
nop
push
fisubs
jp
fidivrl
mov
incl
clc
ss
push
push
adc
or
pop
loopne
dec
lods
ss
leave
lcall
outsb
das
lods
loopne
decl
scas
sbb
adc
sahf
push
inc
mov
movsl
scas
aaa
and
movsl
add
xchg
lock
in
jmp
in
aaa
jno
mov
mov
in
ljmp
adc
dec
decl
push
in
test
movsb
push
push
shll
cmp
repz
lcall
add
repz
test
push
fcoms
cmc
mov
or
pop
and
jnp
lds
decl
fcoms
add
add
test
jns
in
enter
ja
addr16
mov
bound
jae
stos
mov
fs
dec
addr16
ds
loope
push
clc
call
mov
mov
ret
mov
incl
sbb
or
fwait
mov
mov
xor
and
test
adc
call
int3
pop
fwait
xor
ss
out
test
lds
ds
fs
loopne
pusha
push
sub
mov
push
ret
pop
cmp
ljmp
jo
andb
jle
aaa
mov
loop
arpl
jecxz
bound
mov
mov
jge
decl
out
imul
cmpsb
out
cli
add
rcll
and
pop
pop
pop
xor
pop
pushl
ljmp
mov
and
pop
push
xchg
adc
dec
repz
fcomip
ss
jbe
les
xchg
aaa
call
shlb
inc
stc
ljmp
sub
cmpsb
pusha
scas
rol
ds
lock
sub
mov
xchg
ret
xor
push
sahf
add
and
mov
outsb
jae
ret
sub
dec
lret
gs
ds
mov
and
call
call
pop
hlt
imull
loope
cwtl
xchg
jno
icebp
nop
mov
aad
mov
rcrb
addb
rcrb
adc
jg
repz
inc
xchg
cltd
lcall
fcomps
mov
in
mov
add
adc
inc
inc
in
call
mov
lock
add
xchg
nop
cmc
popf
sub
pop
test
adc
dec
inc
fdivrl
imull
bound
repz
mov
call
add
mov
pop
inc
adc
push
xor
aad
aad
and
pop
cmp
decl
ljmp
pusha
push
xchg
xchg
xchg
inc
inc
add
push
mov
call
push
sahf
dec
pop
push
mov
pop
fnstcw
ljmp
test
ljmp
dec
daa
lds
push
mov
mov
jmp
xorb
dec
addl
xor
js
cli
addr16
repz
fwait
add
pushl
sub
cmp
inc
cmp
in
pushf
es
fistpl
mov
xorl
fisttps
and
mov
addb
cmpsl
ja
push
mov
add
sub
in
mov
pusha
jbe
xchg
popa
sub
push
call
shll
sub
fdiv
jl
push
jp
notb
leave
sahf
pushf
inc
xchg
pop
xchg
std
mov
dec
mov
test
push
xchg
fisubrs
and
add
shlb
ret
inc
movl
and
loope
mov
pushl
jle
lock
jle
jns
aam
hlt
pusha
ret
fcoml
rcrb
shrb
lcall
hlt
lock
mov
lods
and
lock
add
sub
popa
dec
aam
or
pushl
inc
insl
pop
mov
xlat
aam
xchg
je
faddl
mov
popa
xchg
popf
adc
ljmp
push
notb
out
popa
cwtl
push
ret
pop
aaa
push
sub
xchg
sub
in
jo
mov
dec
or
lods
in
inc
ret
xchg
ss
lods
mov
icebp
jo
mov
stos
mov
xchg
cmp
xor
push
lcall
call
fwait
cs
mov
mov
dec
out
incl
mov
bound
adc
fs
cmp
outsb
jge
mov
jns
xlat
mov
call
jl
nop
hlt
jle
adc
adc
mov
lods
fcoml
dec
mov
dec
dec
test
push
je
sbb
lcall
sub
xchg
or
dec
fwait
add
gs
repnz
mov
iret
cmp
les
mov
lea
push
xchg
pop
dec
stos
rcll
inc
mov
loop
ljmp
outsb
cmp
data16
dec
add
pop
and
popf
inc
cmp
dec
nop
ja
lahf
int
sti
and
sub
lcall
cwtl
sub
sbb
int
add
arpl
leave
jp
push
cli
sbb
add
es
divl
prefetch
or
into
sub
mov
push
or
ror
sub
pushl
xchg
jecxz
or
testl
cmp
imul
negl
adc
pushl
cmpl
inc
pop
cltd
ret
addb
jnp
mov
pop
jo
ljmp
mov
shlb
out
push
outsb
mov
push
cmp
sbb
fcomip
pop
outsl
sbb
xchg
clc
mov
mov
dec
mov
mov
xor
les
outsb
mov
cmp
pusha
xor
mov
pop
nop
popa
jbe
or
add
and
out
roll
sbbl
jp
xor
ss
clc
ficomps
fidivs
inc
inc
cld
or
decl
inc
stos
jmp
mov
xorl
sub
push
fld
push
dec
inc
stos
insl
mov
mov
pop
add
inc
mov
repz
dec
loopne
fbld
or
push
mov
push
movsl
jle
lds
pop
ds
fistps
push
push
mov
push
imul
pusha
fs
dec
pop
data16
push
stos
repz
sub
pop
mov
mov
fstpl
xchg
rorb
fistps
dec
and
es
inc
mov
pop
jno
pop
push
pushfw
lock
mov
add
pop
pushl
aam
pusha
mov
lret
inc
or
fsubrp
push
lea
mov
jmp
jo
pop
ljmp
mov
enter
mov
out
hlt
in
aad
ja
lods
dec
xor
mov
jge
mov
sub
adc
sbb
inc
xchg
sbb
pushf
xrelease
jmp
aaa
dec
pop
fstl
bound
test
push
ret
in
pop
out
mov
sub
ljmp
mov
mov
xchg
repz
fsts
sti
ror
jnp
adc
mov
cwtl
call
adc
push
mov
pop
sbb
out
xchg
xor
pop
pop
xchg
sahf
push
xor
inc
sub
mov
std
lret
int
pop
into
notl
testb
subl
mov
pusha
inc
dec
cmp
lock
mov
xchg
mov
lds
bound
imul
repnz
loop
clc
roll
jmp
sub
fcompl
scas
sub
add
pop
pop
sbb
lock
test
jo
sbb
pop
and
incl
scas
popl
test
fwait
mov
decl
dec
push
sbb
push
adc
ds
fisttpl
cmpsl
cwtl
dec
aaa
rolb
sub
std
mov
bnd
test
mov
or
or
incl
divb
jecxz
sbb
decb
out
stos
adc
adc
stc
sbb
scas
fcoml
sbb
repnz
cld
sti
adc
inc
int
call
mov
je
hlt
mov
adcb
inc
mov
popa
jmp
test
pusha
xchg
or
sub
mov
fdivr
incl
lcall
sahf
mov
jae
dec
push
cmp
push
daa
xor
and
and
sub
pop
scas
xor
inc
and
daa
insb
lahf
mov
or
ds
push
pop
mov
or
jge
out
test
push
and
cmp
push
adc
iret
pushl
mov
xchg
ror
xlat
cmpsb
outsl
icebp
sub
push
cmp
sub
add
call
and
lds
push
addb
out
mov
sti
movb
xor
out
loope
jae
decl
ja
xchg
in
and
push
mov
inc
outsl
push
xchg
loope
mov
add
cmc
mov
fwait
ret
pushf
and
out
xchg
ljmp
pushf
mov
mov
mov
pop
cmp
mov
subb
mov
call
fdivrl
je
mov
mov
mov
dec
cmc
pusha
test
decl
ljmp
les
dec
jno
xor
add
mov
mov
out
mov
push
insl
clc
incl
jae
jns
dec
dec
les
jl
ljmp
mov
ljmp
int
testl
ljmp
jnp
and
jp
sub
sbbb
jo
out
xchg
or
jnp
jns
dec
std
call
jnp
outsb
popl
fcmove
dec
roll
cmp
and
out
fbld
xor
mov
hlt
mov
mov
add
call
sbb
mov
addr16
push
fdivl
in
add
mov
dec
mov
xchg
in
xor
ljmp
sbb
mov
and
addr16
cwtl
lods
xor
sub
gs
lcall
mov
push
xor
add
lods
or
dec
fs
pop
in
lods
out
imul
sub
incl
ret
and
mov
cmp
add
and
in
fwait
rcll
in
js
sarl
stos
jbe
scas
sub
inc
jecxz
xchg
pop
aad
call
xchg
sbb
mov
pop
and
outsl
or
cmpsb
adc
divl
sub
pop
jbe
dec
lods
nop
jg
dec
ja
scas
stos
jne
cld
call
jno
mov
xchg
mov
push
into
inc
call
call
xchg
xlat
inc
xchg
push
loopne
insl
bnd
mov
incl
aad
push
push
lahf
mov
sub
js
orb
icebp
mov
add
mov
data16
pop
outsl
add
mov
stos
cwtl
pop
sbb
ljmp
icebp
aas
sbb
dec
xor
cmc
rcl
lock
xorb
stos
dec
push
push
fcmove
mov
es
call
mov
add
cmp
orl
pop
stc
add
fwait
cld
dec
js
icebp
es
loopne
loope
in
lock
outsb
sub
das
dec
add
mov
jg
mov
fucom
mov
add
fwait
aam
adc
aas
pushf
sub
fcomip
inc
cmpb
shrl
cmc
les
ss
push
xor
inc
aad
out
sbb
out
clc
incl
ret
mov
lods
ret
les
ds
lahf
jmp
call
cld
arpl
lcall
ret
cmc
mov
inc
sar
ds
popf
roll
add
sub
es
sbb
clc
fmulp
dec
dec
fmulp
jl
jmp
loopne
inc
lods
repnz
fistpl
sbbl
movl
div
dec
in
jo
lock
dec
jb
lds
mov
add
mov
cmp
sub
dec
inc
adc
xchg
jbe
ljmp
mov
mov
popf
mov
cwtl
sti
add
aas
jne
adc
xchg
out
jp
popf
cmp
cld
leave
cs
fidivl
fwait
push
loopne
jl
cmp
pushl
cld
sahf
mov
call
cmpsl
mov
pop
sti
fcoml
add
test
mov
sub
push
xchg
inc
movsb
add
je
ds
and
ret
push
cwtl
adcb
push
cmp
out
mov
dec
mov
loopne
movsl
push
in
dec
xchg
pop
fcos
call
fsubrp
cmpl
pop
dec
inc
dec
imul
pop
add
add
mov
adc
in
jns
or
incl
push
mov
mov
add
out
sub
push
in
jb
pop
or
dec
push
push
insb
daa
push
fsubrs
movsb
push
fbld
out
pusha
jg
xchg
mov
sub
dec
add
adc
pop
lds
dec
push
add
das
and
popf
sbbb
out
xchg
xchg
pushl
or
pop
inc
ljmp
nop
fsub
xchg
jbe
mov
cmpsl
xchg
arpl
or
mov
cmpsb
hlt
sti
push
ret
pop
sub
push
iret
jmp
mov
test
xchg
ss
xor
clc
pusha
push
and
add
adc
out
jg,pt
mov
and
mov
mov
mov
cld
add
loop
sbb
in
loopne
pop
call
xchg
xchg
inc
cld
jmp
jmp
insl
fiadds
ss
arpl
pop
inc
inc
ss
and
and
decl
scas
mov
jmp
add
hlt
jbe
ja
sub
ror
lcall
jnp
mov
sbb
movsb
and
das
xchg
imull
pusha
dec
sub
call
negl
loopne
shlb
pop
loop
pop
pop
icebp
sub
dec
pop
sbb
icebp
fldcw
jl
sbb
in
jecxz
adc
push
hlt
out
ljmp
mov
sarl
cmp
push
rcrb
jno
sbb
mov
ret
xchg
hlt
pushl
mov
or
sbb
lcall
mov
inc
sub
in
push
lret
out
xor
shll
dec
rorb
hlt
cmp
xchg
leave
leave
cld
pop
sub
shrb
sahf
pop
in
cltd
adc
add
jg
ljmp
adc
jno
sbb
xlat
dec
mov
add
ds
mov
movsb
xor
notb
lahf
mov
sub
lcall
das
cli
dec
add
jmp
mov
scas
test
fs
adc
stos
lahf
call
push
filds
and
es
pop
mov
movsb
push
mov
cltd
cs
add
aaa
andb
pushl
popa
jl
fs
push
push
adc
ss
incl
lahf
mov
clc
out
call
ficoml
call
fsubl
lahf
ret
lahf
dec
sar
lcall
std
xchg
lcall
lahf
js
lea
xorb
sub
add
stos
ret
cltd
lock
ljmp
pop
mov
xor
mov
mov
test
or
outsb
jle
mov
aaa
je
call
inc
adc
ljmp
ror
dec
leave
mov
xchg
fs
cwtl
cmp
inc
or
mov
icebp
cmp
incl
or
push
pushf
enter
out
jg
leave
into
js
jne
or
push
cmpsl
nop
lahf
js
cltd
ljmp
shlb
cli
int
push
xchg
dec
add
cli
out
xchg
aas
out
xchg
movsl
sub
jp
add
mov
movsl
inc
enter
lds
fs
ss
pop
pop
pop
cld
ljmp
mov
push
sbb
xchg
mov
lahf
out
cli
ja
mov
sbb
mov
inc
mov
push
ljmp
out
or
icebp
mov
rorb
test
add
stos
inc
adc
xor
mov
loopne
stc
lcall
push
into
mov
xor
and
dec
mov
dec
call
pop
popa
icebp
push
push
jmp
push
push
jne
cmp
adc
outsl
mov
sti
push
mov
pop
adc
inc
add
jl
lret
popa
pop
jg
jg
lods
pushl
scas
loopne
mov
sahf
push
mov
and
in
lcall
js
stc
imul
cmpsb
cmp
mov
sahf
imul
dec
push
ljmp
fstpl
jne
gs
mov
lret
jb
iret
mov
rolb
decl
into
outsl
jno
cmp
repnz
cs
subb
cmpsl
test
fdivp
dec
sahf
cmp
mov
add
pop
sbb
mov
fnsave
jge
lock
fbstp
sub
sahf
sbb
pop
movsb
fstl
dec
add
daa
xchg
std
fdiv
into
jp
loopne
shll
pop
aad
pop
stos
in
icebp
cmp
push
inc
mov
ljmp
xchg
adc
push
sbb
mov
push
mov
shrb
cmc
mov
jae
mov
jmp
jns
stc
in
ret
dec
xor
jle
repz
xchg
mov
cmp
cmp
jg
add
arpl
aam
fcoms
dec
xchg
inc
rolb
and
inc
enter
mov
dec
insb
aad
sub
jmp
sahf
clc
pusha
shlb
scas
pop
shlb
inc
ret
clc
call
cld
cmp
sub
aad
jbe
adcb
les
add
ljmp
ret
mov
mov
mov
mov
xor
inc
xchg
pop
pop
and
lock
stos
mov
ljmp
test
jle
mov
pop
int
cmp
ljmp
ret
sbb
xor
sub
ds
pminub
into
push
int
repnz
mov
fldenv
cli
pop
lret
add
std
xchg
xor
lods
movsb
fisubrl
nop
enter
push
inc
pop
cmp
jmp
ja
fisubs
sahf
icebp
and
ljmp
loope
sub
jge
out
fisttpll
or
sbb
pushf
orl
dec
andl
repz
faddl
lcall
push
mov
incl
inc
push
pop
push
cmp
pusha
test
rol
movsb
jo
jmp
mov
lcall
cmp
jnp
addr16
lret
jo
xchg
daa
dec
int
int
mov
mov
inc
mov
js
adc
dec
icebp
xchg
nop
inc
decl
fdiv
mov
daa
sti
aad
and
inc
mov
jg
jge
push
mov
mov
xlat
imul
fisubrs
jp
aam
popf
mov
in
rcpps
inc
xor
call
insb
mov
daa
push
stc
jg
rcrb
call
or
push
sub
rcrb
fs
xchg
dec
add
fistpll
clc
mov
jmp
adc
mov
adcl
lcall
mov
xchg
xorl
dec
xorl
jns
dec
std
call
bswap
aas
shl
call
lods
hlt
dec
jecxz
call
dec
pop
fsubrs
insl
jb
lret
jmp
mov
xor
stos
lcall
xor
movl
frstor
pushl
shrb
loop
out
inc
mov
fsubs
nop
movsl
xor
jne
aam
xchg
decl
push
enter
jnp
pop
mov
cmpsb
mov
adc
jbe
in
idiv
in
dec
mov
dec
jns
in
xchg
xchg
cmc
mov
or
fildll
xor
push
or
lcall
dec
rorl
or
out
ficomps
adc
hlt
dec
testb
dec
push
es
sar
loop
imul
or
or
dec
movsl
movsb
loop
mov
call
sahf
pop
pop
jmp
ds
les
or
pushl
add
and
les
stc
xchg
scas
aad
ljmp
decl
adc
push
xor
fcomip
loop
addr16
adc
test
xlat
fildl
pushl
in
stos
or
sbb
or
cli
int3
mov
fadd
scas
mov
pusha
jnp
arpl
jns
ret
jnp
jno
das
add
adc
decl
adc
push
xor
test
test
test
imul
xor
call
and
fptan
lock
ja
mov
mov
ljmp
dec
loop
adc
jl
lods
pop
inc
jecxz
call
notl
lcall
xchg
mov
mov
int3
jae
mov
hlt
cmpsl
pop
mov
lcall
ret
dec
sbb
mov
inc
call
jmp
gs
out
rcll
fildl
test
out
test
pop
imul
push
dec
out
xor
daa
jae
loop
sub
or
call
pop
data16
sbb
es
mov
dec
sbb
push
pop
xchg
shrl
push
sbb
mov
or
loope
jge
add
fbld
sbb
xor
xchg
or
sbb
jmp
mov
int
out
stos
hlt
jae
mov
fistps
call
inc
cmpsl
jne
test
dec
out
gs
aam
inc
dec
ret
mov
inc
dec
mov
decl
stos
mov
jmp
jno
loopne
xchg
aas
add
mov
out
inc
cmc
bound
sahf
cmc
mov
int3
shlb
dec
imulb
or
adc
adc
ds
pop
and
fdivrs
fstpl
adc
xor
pop
stc
pop
adc
fstl
and
aad
xorb
adc
outsl
sub
addr16
in
js
xor
push
shll
sub
cmpsl
xor
shr
or
jno
sbb
inc
and
das
sar
mov
fiadds
pop
jb
jge
gs
xchg
mov
fidivs
sbb
pop
loope
and
das
push
call
mov
lds
push
sub
stc
insl
mov
test
and
pop
push
fcoml
jae
pop
movsl
out
xchg
push
add
pop
or
out
insl
push
loopne
ljmp
mov
scas
or
add
int3
jmp
sub
pop
movsl
xchg
xchg
std
scas
pop
cld
dec
faddl
jne
inc
xchg
outsl
sbb
xchg
jmp
and
decl
inc
fwait
pusha
mov
test
cmp
dec
ljmp
jmp
xchg
adc
cli
pop
xlat
lcall
paddb
fidivl
sbb
push
mov
mov
decl
movsb
push
repz
pop
adc
xchg
inc
sub
xchg
outsb
pop
and
fcoml
sbb
push
sub
mov
and
clc
mov
loop
divl
mov
shrl
test
movsb
outsb
mov
fimull
in
inc
loopne
out
in
pop
mov
jg
sub
sbb
lcall
jl
push
push
adc
sti
lcall
dec
dec
insb
cli
xchg
in
sar
jmp
sub
testb
xchg
and
in
mov
pop
dec
push
out
in
incl
push
xlat
adc
mov
mov
clc
ds
pop
popf
repnz
cmp
mov
inc
fwait
xchg
jno
repz
and
rclb
sbb
rorb
fisttps
jmp
xchg
mov
mov
lcall
push
imul
in
mov
outsb
arpl
addr16
loope
jmp
dec
or
int3
xchg
popf
pop
push
repnz
pushf
insl
pusha
jecxz
mov
dec
inc
mov
xorb
push
lock
jb
data16
cwtl
inc
xlat
cs
jo
dec
shlb
push
divb
add
inc
xchg
sub
pop
add
dec
icebp
jl
ja
call
and
loop
aas
jle
jmp
fistpll
fistl
divb
aas
gs
cmp
ljmp
add
pop
cmp
dec
movsl
pop
lret
nop
mov
es
mov
xor
in
sub
ja
xor
push
ljmp
and
lods
pop
stos
pop
insb
leave
imul
push
pop
rcrb
outsl
jge
mov
xchg
out
jmp
add
xchg
pusha
pop
or
testb
dec
mov
lds
in
icebp
sti
in
inc
outsl
pushl
push
mov
cmp
jnp
dec
jmp
pushf
jno
jg
ret
push
mov
add
sahf
in
and
xor
stc
xchg
je
scas
mov
aas
sbb
test
fwait
or
xor
jbe
or
popa
and
sbb
lcall
dec
xchg
lods
leave
lcall
push
addr16
clc
xor
shlb
and
mov
fs
arpl
iret
movsb
adc
mov
mov
inc
jge
nop
xor
or
popf
mov
mov
sti
aad
pop
pusha
xor
daa
jmp
jge
outsl
lahf
test
pop
adc
jl
xchg
mov
sbb
orb
pop
rcl
ljmpw
jecxz
adc
lcall
jmp
or
jle
popf
dec
outsl
add
xchg
loop
fsubrp
inc
aad
push
jo
movsb
dec
push
fcomip
or
fsubr
pop
jbe
cmpsl
jo
pusha
cmp
les
test
jo
add
js
adc
repnz
mov
push
jo
ret
or
incl
cmpsb
pop
or
jo
lds
psrad
clc
ljmp
rcrb
pop
enter
push
decl
jbe
dec
outsl
cmp
in
sub
mov
pop
dec
fisubl
and
pushl
pop
add
es
and
call
shl
scas
and
pop
mov
inc
sbb
lods
ja
cs
ja
inc
lcall
lods
inc
mov
sbb
or
fcomp
sar
cmp
dec
pop
filds
fsubs
loopne
popf
sub
and
aam
mov
jne
adc
fists
push
sub
pop
fisttps
enter
ja
out
xchg
in
hlt
jp
bound
pushl
ljmp
xlat
xor
inc
mov
mov
xchg
jp
ljmp
stos
xorb
int
mov
xchg
jmp
daa
rep
popf
sub
push
aas
jle
jno
jmp
outsl
jp
bound
out
in
icebp
pop
sub
lods
adc
adc
stc
sar
lcall
add
pop
cltd
jp
inc
js
or
mov
call
mov
jg
mov
push
add
js
cmpsl
pop
neg
add
incb
or
or
jmp
mov
xor
test
insl
xchg
imulb
xor
test
gs
loop
lcall
or
insl
in
xor
dec
pop
pop
out
xor
dec
adc
or
and
sub
xor
jno
popf
ja
mov
jmp
add
ljmp
xlat
test
xchg
std
or
stos
jge
push
pop
push
sbb
clc
add
mov
leave
addb
sti
push
pushl
add
xlat
shl
hlt
inc
sbb
stos
cld
mov
pop
iret
in
lds
ds
scas
decl
adc
dec
lret
mov
scas
adc
scas
xor
and
loopne
and
mov
incl
ficoml
cs
sar
xchg
pop
sbb
mov
cmc
out
pushf
js
cmp
mov
ss
mov
test
out
adc
int
mov
sarl
sub
sub
jae
insl
cmc
sub
imul
inc
rol
ret
aaa
push
orb
push
mov
mov
daa
cmp
fcomip
mov
imul
aaa
lea
lret
jmp
xchg
cwtl
mov
call
pop
sub
dec
jo
mov
xorb
xchg
jbe
gs
mov
xorb
fcmovnu
lahf
xchg
pop
aad
out
jae
ret
aad
sbb
or
or
call
cld
faddl
out
fimuls
repz
cli
pop
xchg
dec
loope
add
orb
mov
jg
data16
fsubrs
inc
dec
ds
shll
fbld
push
cld
test
adc
clc
mov
or
inc
fists
jmp
stc
and
repnz
pop
xchg
sbb
popl
ds
lcall
or
in
add
cmp
add
inc
cmp
push
jge
popa
nop
iret
mov
out
sbb
pop
into
in
mov
jmp
xor
mov
adc
test
mov
insb
mov
push
insb
xchg
jb
test
mov
fs
std
adc
ja
fistl
hlt
add
in
inc
adc
in
jno
or
mov
mov
push
sub
call
aas
push
mov
lods
add
pusha
iret
sbb
iret
mov
int3
sub
xor
insb
xor
inc
mov
xor
lcall
jl
cmp
test
addr16
and
pop
aam
cmp
and
jmp
aad
test
and
pop
pop
shrl
or
cmp
in
dec
push
inc
push
mov
inc
ljmp
adc
lret
push
pop
pop
mov
lock
ficoml
adc
mov
fwait
in
fistps
rorl
pinsrw
cmc
outsb
pop
push
and
sti
inc
fcmovnu
popa
sbb
in
ljmp
mov
in
jmp
xor
pusha
popf
xor
mov
das
fisttps
movsl
out
xlat
cli
out
pop
or
addr16
lcall
loop
xchg
xchg
ret
dec
fwait
into
and
iret
arpl
xchg
scas
pop
aad
push
into
arpl
outsb
pushl
int3
fdivrl
cmp
lcall
mov
mov
scas
enter
xlat
movsl
mov
pushl
add
pushf
push
cmp
pop
xor
jl
js
test
ljmp
and
or
cwtl
les
lcall
jmp
enter
rclb
or
fildll
test
pop
lds
int3
mov
ljmp
jns
call
cmp
jno
inc
mov
loopne
jae
inc
mov
rcll
sbb
pushf
dec
int
adc
sub
pushf
pushl
add
jg
repnz
popf
mov
ljmp
mov
rcll
imul
movsb
lret
shll
sahf
push
aaa
test
inc
test
jp
cmpsl
mov
add
icebp
outsb
insl
or
sahf
push
fcomps
adc
xor
mov
mov
pop
inc
inc
jne
push
mov
std
cmp
popa
push
shlb
fwait
in
ds
outsb
mov
push
shr
ret
mov
sub
mov
pushf
cmpsl
xchg
out
and
add
mov
push
and
ljmp
jg
repnz
sbbl
aam
fisubl
ret
jmp
adc
add
movq
add
mov
mov
gs
fldenv
call
xchg
out
fxch
aad
sbb
sar
jp
sub
sahf
sbb
aam
icebp
and
xor
rclb
mov
xor
ljmp
ss
iret
shll
sti
push
es
pop
lcall
out
aas
mov
out
int3
sub
movsb
sbb
fsubl
dec
jg
shlb
dec
dec
shl
jecxz
cmpb
cmp
xchg
mov
nop
leave
cmp
mov
adc
leave
in
shrl
mov
loopne
cmp
and
fisubrs
xor
adc
inc
adc
daa
cmp
enter
jge
in
xchg
cmpb
or
mov
rorb
adc
lcall
push
shll
iret
dec
mov
xchg
pop
mov
fdivr
pushl
dec
jle
cmp
frstpm(287
mov
shl
and
xchg
dec
pop
shr
call
in
aaa
shrl
mov
js
pop
push
in
pop
lcall
leave
cmc
jae
lock
pushl
divb
test
fadds
lock
sbb
lcall
mov
nop
and
cmp
enter
adc
sbb
outsb
dec
jb
stos
movsl
decl
ss
roll
outsl
pushf
jmp
and
incl
hlt
ss
jg
sub
jns
mov
jo
sub
mov
adc
and
incl
xchg
jp
ret
sbb
outsb
mov
fldt
aas
mov
jg
ror
fisubl
xor
xchg
aaa
adc
dec
adc
sbb
and
movsb
cmc
jbe
push
push
mov
adc
jmp
pop
fwait
jecxz
sbb
cmp
or
ret
mov
xor
insl
sbb
jg
into
xor
packsswb
filds
addr16
mov
je
testl
decl
lods
mov
sti
lock
cld
sbbb
jg
fdivl
scas
cli
insl
aaa
in
xorl
loop
cmpsb
insl
push
sbb
mov
mov
xor
lock
mov
es
cmpsb
xor
cmp
repnz
push
orb
jl
cmp
jmp
pushf
ja
loope
sub
push
push
addb
mov
xchg
push
stos
and
fsub
and
scas
pusha
loop
ljmp
jecxz
out
lock
sub
out
push
int3
or
mov
push
jns
or
sbb
mov
adc
jle
sbb
and
push
pop
mov
clc
pushl
push
in
leave
lock
jb
ror
aaa
outsb
fldcw
arpl
mov
lcall
pusha
xor
inc
ds
inc
and
mov
leave
or
mov
dec
pop
jne
stos
lcall
or
push
jecxz
push
pop
sub
xor
clc
pushl
add
lcall
lahf
xchg
iret
push
div
mov
decl
push
xchg
lods
testl
mov
incl
jle
divl
or
andl
imull
sub
pop
call
shlb
ror
pusha
aaa
sub
mov
inc
cli
decl
rclb
adc
pop
jge
add
cwtl
loopne
ds
loop
add
scas
and
sbb
gs
idivb
ret
and
sbb
loop
sbbb
in
ljmp
mov
push
or
xor
pop
or
decl
cltd
push
scas
cltd
inc
xchg
sbb
stos
leave
jmp
cmp
mov
clc
mov
xchg
mov
imul
add
fimuls
ljmp
sbb
and
iret
pop
dec
and
pop
inc
sahf
xchg
mov
sub
shll
jo
mov
push
in
jns,pn
cmp
bound
mull
adc
xor
jge
jl
movsl
fidivl
incl
cmpsl
pop
pop
leave
mov
es
lahf
mov
rcrb
mov
out
sub
pushf
pop
fcomp
jmp
jnp
imul
mov
out
and
ja
mov
jle
popf
cmp
adc
cmp
popa
lock
xorl
out
mov
data16
ljmp
and
lret
cmc
cli
stos
inc
popf
and
leave
push
mov
mov
decl
cmc
inc
mov
jns
ja
mov
aaa
add
pop
fs
mov
cmp
push
push
stc
gs
inc
inc
imul
xchg
or
jno
rcrl
cld
incl
mov
call
push
lock
cmp
xlat
lods
inc
inc
scas
inc
xchg
daa
sub
mov
push
push
out
adc
pop
push
out
nop
jg
cld
daa
cmp
sbb
sub
lcall
cmp
movsl
jmp
mov
pushl
adc
ret
orb
aad
decl
hlt
sbb
bound
xor
lods
sti
cwtl
jne
push
jo
add
pop
dec
xchg
push
out
call
xchg
negl
addl
movsb
mov
adc
jle
jmp
loope
aas
cmp
adc
sub
fstl
lahf
dec
jecxz
inc
push
add
fwait
mov
add
decl
iret
movsb
xchg
add
pop
sti
mov
sbb
shl
mov
std
and
nop
lock
aas
movsb
fidivrs
rolb
stos
mov
test
ja
push
hlt
lret
test
cmp
sbb
les
mov
or
in
push
ljmp
aaa
jno
sahf
aam
div
mov
sub
and
cmp
push
std
mov
shlb
jl
or
mov
ljmp
mov
mull
xor
and
mov
test
push
sub
call
mov
cmp
pusha
mov
cltd
jl
or
pop
cmpsb
ljmp
movl
or
push
pop
xlat
push
shlb
cmp
jnp
ljmp
sar
repz
je
mov
and
scas
fld
xor
hlt
jmp
ja
cltd
mov
and
jmp
sahf
sub
lcall
jae
xor
ds
push
cmp
jmp
filds
jne
or
and
xchg
mov
das
fbld
lcall
stos
sub
decl
pushf
sub
sahf
xchg
int
mov
sarb
daa
pop
sbb
lock
xchg
push
jbe
int
ja
in
sbb
mov
or
cwtl
pushf
push
test
mov
and
lea
jmp
add
imul
pop
dec
push
loope
gs
lcall
xor
xchg
jecxz
xor
fwait
push
mov
mov
shrl
loopne
add
pushf
popa
sub
mov
push
push
or
inc
pop
fdivrl
jg
xchg
inc
out
jl
jae
xchg
pop
pop
mov
push
les
push
sbb
js
sub
iret
dec
push
div
outsl
dec
int3
in
add
push
fstps
lea
pushl
cld
mov
je
mov
aad
es
fstl
or
mov
jg
dec
out
cmp
mov
xor
sub
mov
cmp
xchg
lcall
inc
mov
aas
inc
je
daa
out
xchg
jne
xchg
lds
popf
mov
ret
dec
and
mov
push
js
in
xchg
mov
lcall
nop
cmp
push
test
cmp
hlt
stos
fsubp
ljmp
clc
mov
pop
or
pushf
stos
adc
push
das
cld
add
lret
shl
filds
push
and
lret
lahf
lods
loope
pop
cmc
cmp
xor
or
and
das
clc
jg
loopne
push
stos
call
in
adc
hlt
pop
dec
fstps
or
jle
popa
cmp
jge
or
fisubl
das
push
rol
lea
pop
inc
inc
mov
fst
pop
jmp
xlat
xor
sbb
popa
cmp
xor
mov
sbb
shlb
call
sbb
popl
rcrl
adc
mov
push
mov
in
into
lret
idivl
jmp
outsb
lret
jle
fcmovnu
call
repz
mov
ljmp
cld
jne
jne
test
sbb
inc
sub
mov
pop
loope
sub
mov
jo
daa
jmp
out
pusha
mov
stos
mov
das
das
movsl
or
ljmp
cmp
mov
lods
mov
scas
repnz
popf
and
mov
pop
sub
jnp
imulb
xchg
xor
dec
push
and
xchg
push
inc
sbb
dec
cmpb
push
dec
daa
pop
and
xchg
adc
dec
stos
or
loope
scas
adc
mov
lret
arpl
sbb
shll
fiaddl
dec
setns
sti
cmp
push
xchg
ds
dec
lock
xor
cwtl
sbb
out
add
dec
or
das
loopne
lock
stos
sub
js
scas
pop
stos
push
test
out
cmp
jbe
jmp
cltd
lods
cld
hlt
int3
jno
fcom
in
lods
lcall
dec
es
rclb
mov
or
jg
jge
jb
outsl
call
jge
ljmp
mov
loopne
daa
xchg
xchg
or
mov
mov
xchg
shlb
jp
in
ja
xchg
pushl
fs
icebp
sub
mov
jbe
mov
inc
in
lcall
xchg
mov
rcll
push
dec
pop
dec
push
rolb
outsl
sbb
decl
je
shlb
dec
es
xchg
aas
lahf
mov
fisttps
xchg
sti
sbb
and
scas
xchg
addb
jae
fistps
mov
ljmp
mov
xchg
push
push
rcrl
std
add
jp
cs
sub
cmc
pushl
lret
sub
and
lods
cmp
das
jbe
push
cld
call
mov
sbb
mov
stos
dec
popf
into
add
les
push
and
and
mov
mov
or
push
loop
or
jg
or
dec
out
dec
push
fs
mov
fistps
adcb
sub
in
lret
mov
xchg
movsl
dec
push
inc
outsl
mov
cmp
sub
fildll
jg
adc
adc
cmp
insb
dec
ficomps
outsb
out
jle
inc
lahf
mov
adc
ljmp
test
adc
pushf
pop
cmp
je
rcrb
pop
adc
dec
push
lret
sbb
es
push
lcall
aam
js
add
icebp
fcoml
cs
mov
inc
xchg
ret
stos
lods
in
les
ror
mov
add
stos
loopne
cmpsb
mull
aaa
std
ljmp
cmpsb
inc
pop
shlb
div
addr16
out
repz
loop
cmp
mov
push
aas
repz
push
inc
mov
ret
sub
dec
push
and
fcomip
inc
dec
adc
dec
dec
mov
pop
push
lock
mov
je
in
stos
xor
aaa
enter
decl
rolb
stos
in
jae
scas
and
into
cmp
in
stos
push
in
call
lods
sbb
xchg
scas
clc
sbb
xor
jg
leave
insb
sub
xchg
decl
mov
addr16
inc
aas
rorb
cmp
jo
mov
sub
inc
insl
aad
xchg
cmp
push
cmp
mov
insl
or
aas
movsl
mov
mov
imul
in
mov
jne
fs
cs
js
mov
pushl
js
push
cli
xchg
jle
lds
inc
in
subl
shrl
pop
ror
ret
push
daa
cmp
ljmp
xor
lret
leave
cs
lods
sbb
mov
sbb
mov
jbe
jne
lods
stos
out
cli
stos
inc
pop
cld
push
cwtl
add
imul
bound
pushl
push
or
loope
jb
dec
fstpl
imul
xor
out
cmp
decl
pushl
fisttps
in
fcoml
fimull
cmp
aaa
decl
xchg
jl
mov
fnstenv
inc
insl
push
adc
add
bound
pushl
xchg
dec
xor
push
aad
aad
int3
stos
jmp
fdivl
sub
push
mov
push
push
inc
loope
mov
sub
loopne
inc
pop
jae
inc
jmp
jl
out
dec
mov
mov
fld
lock
mov
dec
push
addr16
shr
stos
in
jmp
rcrb
and
aam
push
addr16
movb
mov
jg
pop
mov
jge
sbb
repnz
and
lods
mov
inc
cld
je
dec
mov
in
stc
mov
inc
imul
pusha
roll
jbe
add
divb
insb
hlt
incl
inc
mov
cli
orb
out
dec
sbb
test
call
mov
fsts
inc
insl
cmp
and
in
dec
sarl
rolb
add
jl
movsb
push
outsb
in
jns
mov
sahf
das
fcoml
movsl
ret
movsb
imul
xchg
lea
test
push
xchg
mov
scas
es
jo
cmpsb
std
mov
ljmp
adc
call
xlat
test
int
mov
push
mov
pop
pop
cmp
aaa
push
int
push
jae
pop
jg
incl
mov
sbb
test
ret
xor
sahf
and
cld
ret
in
xchg
cltd
mov
jb
lcall
loopne
addr16
and
xchg
add
orl
and
in
out
mov
das
aaa
popa
cld
fisubrs
dec
pop
mov
pop
push
mov
add
jg
data16
add
daa
jg
cmp
je
cmp
push
xchg
mov
inc
stos
push
sub
test
xor
dec
idivl
repnz
ljmp
add
nop
jb
movsl
push
mov
das
jnp
sarb
in
negl
mov
dec
cltd
clc
shll
testl
mov
mov
pop
jl
and
popa
add
rcrl
pavgb
pop
loopne
xchg
mov
inc
ljmp
xchg
sti
loope
xchg
jp
jl
clc
incl
repz
shrb
mov
mov
dec
or
pop
pop
aaa
sub
incl
mov
adc
dec
jns
fsubrs
add
data16
ljmp
cli
pop
mulb
shrl
sub
dec
hlt
push
lcall
decl
pop
sub
mov
pop
ss
add
jnp
or
stos
rorl
mov
mov
inc
jae
daa
xchg
adc
mov
mov
scas
dec
jecxz
mov
cmp
lds
lds
mov
xchg
arpl
loope
dec
inc
cld
js
addb
add
or
xor
and
pop
mov
push
mov
scas
shll
pop
push
inc
jmp
sbb
mov
cmp
push
in
sub
push
lret
xor
and
incl
mov
aaa
lahf
pop
push
or
aaa
inc
loop
pushf
in
and
sahf
cmp
mov
xlat
test
xor
decl
jbe
mov
test
mov
xor
push
dec
imul
dec
shlb
scas
imul
cli
push
push
outsb
cmpsb
jmp
out
daa
mov
and
lcall
cli
xchg
pop
adc
push
lahf
shrl
cmpsb
sar
dec
out
call
sub
cld
push
mov
mov
push
mov
loopne
insl
or
inc
iret
ljmp
cmpsl
mov
cmovg
test
push
dec
out
adc
add
mov
jmp
ljmp
mov
sub
fidivl
inc
push
mov
jnp
push
pop
sub
fidivrl
adc
xchg
in
adc
jbe
or
dec
frstor
call
ret
cwtl
cltd
data16
les
jg
stos
mov
jmp
mov
xor
stos
mov
int3
pusha
sub
sbb
in
jp
mov
out
pop
outsl
stos
clc
incl
dec
fistpll
dec
and
or
jnp
leave
out
mov
fcomip
ljmp
dec
pop
sub
inc
je
das
xlat
sub
pop
mov
cmp
jp
cltd
xor
mov
mov
dec
aaa
jno
xor
sbbb
mov
mov
call
hlt
mov
rcl
and
scas
ret
add
pop
ljmp
mov
fsts
xor
loope
mov
outsl
imul
mov
or
repz
addl
or
fsubs
pop
in
mov
mov
clc
jo
jae
fs
insl
jmp
push
cmp
xor
or
and
sbb
scas
addr16
call
cltd
les
push
xchg
repnz
xor
incl
lcall
inc
add
mov
inc
xchg
mov
xchg
xchg
test
sub
call
and
bound
out
push
xor
pop
xor
cmp
cmp
jmp
or
sbb
xor
lret
fisubrs
sub
xchg
out
sbb
push
jle
out
lahf
fstpl
std
push
in
mov
mov
dec
cli
movsl
test
push
xor
repnz
ja
jle
popf
cmp
sbb
push
call
in
insl
clc
addl
xor
fptan
cmpsb
dec
inc
imul
pusha
aad
loop
push
push
in
in
lret
loopne
xchg
loop
or
inc
adc
inc
xlat
divb
cld
call
adc
jne
jg
shll
repnz
mov
shr
decl
dec
push
in
filds
mov
leave
jge
shlb
cli
lcall
cmp
adc
push
sub
cmpsl
enter
test
fs
inc
lcall
cmp
shll
or
lods
imul
scas
xor
push
rcrl
inc
and
lcall
cmp
mov
dec
testl
jecxz
mov
adcl
fsubr
mov
sub
arpl
and
test
rcrl
test
not
fcomip
ljmp
and
fiaddl
pusha
je
xchg
out
mov
decl
mov
xchg
rol
addr16
or
jmp
cltd
or
in
jecxz
cmp
addr16
idivl
inc
into
mov
dec
or
xchg
lret
and
mov
mov
xchg
pop
movl
iret
std
std
and
test
cmc
cld
xchg
mov
fdivrl
jecxz
movsl
mov
xor
xchg
ljmp
sub
pop
add
lcall
incl
in
jmp
cld
sbb
cmp
push
out
mov
cmpsl
inc
out
mov
ljmp
jp
sub
and
jnp
frstor
pop
stos
push
jo
adc
adc
aas
cmovl
lret
mov
incl
pop
lods
cmpsl
iret
ror
pop
dec
mov
xor
mov
jae
aaa
jnp
push
jae
dec
mov
aad
sbb
test
ljmp
jbe
push
nop
out
sbb
pop
dec
jg
pop
dec
adc
dec
stos
cmpsl
xchg
add
popa
leave
cmc
mov
mov
fs
rclb
js
movsl
inc
mov
cmp
mov
ljmp
pop
pop
roll
stc
mov
scas
push
idivl
xchg
jmp
int3
test
jno
fisubrs
insb
mov
das
dec
ror
xor
in
clc
dec
add
scas
pop
mov
cmp
mov
xor
inc
imul
repz
popf
push
pop
std
pop
aas
mov
xorb
cld
sub
pop
cwtl
loope
mov
incl
sub
inc
enter
push
pop
push
and
testb
inc
pop
and
mov
fnstenv
xchg
and
dec
sbb
mov
or
fsubl
add
sbb
inc
testb
ljmp
aaa
loopne
mov
lods
popa
and
in
mov
int
mov
dec
in
std
fnstcw
movsb
pop
add
mov
cmc
iret
movsb
and
mov
jbe
iret
dec
xlat
jne
jecxz
cmp
enter
imul
loopne
filds
cmp
jge
sahf
mov
sub
push
sub
mov
jecxz
adc
inc
xchg
sbb
les
xor
fucomi
dec
cli
xchg
dec
stos
flds
js
add
lcall
js
mov
or
lcall
lcall
inc
lret
ret
xlat
loopne
mov
inc
add
and
jns
movsb
mov
cmp
cmp
decl
cmp
clc
jmp
fsubrl
jb
fildl
push
movsb
cmpsb
push
and
call
jns
hlt
xor
ficompl
ljmp
jg
ret
scas
cld
shl
fdivl
add
gs
repz
stos
and
xor
js
incl
jno
dec
pop
scas
outsb
rcrl
jmp
stos
add
mov
fimull
aaa
std
mov
out
arpl
in
or
mov
pop
dec
jns
jbe
pop
adc
mov
aam
cltd
lret
lods
push
cmp
lret
pop
and
mov
or
jg
pushl
ljmp
xchg
push
mov
int3
jae
ljmp
push
ja
jmp
sarl
pop
jecxz
ljmp
mov
scas
fbld
popf
jp
xchg
mov
xor
bound
pop
into
sbb
lcall
jmp
lods
xchg
repz
push
cld
inc
mov
jnp
dec
inc
repnz
adc
mov
jl
jle
mov
sbb
inc
mov
sub
cmp
call
jne
xor
mov
imul
imul
jo
outsb
insb
scas
add
pushl
in
loopne
rcll
mov
xchg
sub
pop
lcall
ljmp
mov
test
es
mov
rcr
data16
xor
decl
pop
ret
and
cwtl
subb
inc
or
sbb
out
test
ja
lret
or
dec
daa
daa
hlt
dec
add
aam
adc
fsubrs
int3
sub
dec
and
mov
xlat
jg
mov
xor
cmp
pop
push
jle
sub
jb
xor
leave
adc
fucom
aam
outsl
and
leave
outsl
jmp
mov
outsl
cli
decl
aad
scas
ret
push
pop
sub
inc
ss
out
sub
ljmp
xor
movsb
icebp
lahf
mov
int3
push
test
jg
jne
in
push
pushf
gs
hlt
int
leave
pop
lret
test
adcb
decl
popa
lcall
pop
pop
pushf
loope
xchg
add
mov
rorb
popf
aam
fnsave
push
incl
pop
flds
popf
xor
cld
test
fsts
ljmp
aaa
fcmovb
xlat
pop
dec
rcrb
cli
pop
add
call
in
negl
adc
mov
add
cmp
shlb
in
sub
xlat
jmp
or
test
lcall
push
jecxz
sub
xchg
push
incl
and
mov
shl
cmp
mov
ja
stc
xchg
out
adc
push
and
pop
dec
leave
icebp
test
das
ret
sti
mov
std
ljmp
mov
and
mov
stos
dec
inc
in
pop
stos
push
fcomip
pop
decl
jp
movsl
add
mov
cld
sahf
jg
push
in
cld
das
stc
jb
jno
push
sahf
mov
decl
mov
inc
lods
loope
pop
and
daa
sub
and
mov
out
jmp
decl
push
es
push
or
imul
sub
out
add
mov
push
cwtl
cs
dec
test
pop
or
mov
push
cli
inc
mov
sbb
sub
imul
mov
mov
cmpsb
fmul
js
pop
pushl
out
ja
out
jo
fwait
sahf
and
jl
jl
call
adc
add
lcall
mov
jno
insl
mov
enter
clc
push
xchg
in
shl
aaa
and
pop
fisttps
dec
sub
xor
outsl
xchg
mov
jl
and
sub
jo
lods
push
je
cmp
push
cmpsb
push
sub
mov
add
push
pop
adc
adc
enter
outsl
push
fwait
data16
xor
ljmp
mov
inc
dec
adc
add
cltd
push
mov
push
and
jns
fbld
dec
sub
jbe
cmp
xchg
mov
lcall
mov
mov
mov
add
push
xor
int
pop
cmp
insl
jae
sub
sbb
repz
push
mov
out
inc
and
dec
mov
loopne
sbb
mov
lret
mov
inc
cmp
inc
dec
daa
jmp
lds
ret
dec
psubq
cmp
mov
and
ljmp
loop
add
pop
push
or
in
jns
das
sarb
out
mov
adc
jnp
test
int3
jae
mov
pushl
fisttpll
inc
xchg
and
dec
gs
push
sbb
sahf
fabs
xorb
or
movsl
decl
mov
setp
in
cmpsl
jb
mov
sarb
test
ljmp
sbb
adc
push
fadd
lock
cmp
vpaddusb
pushl
or
lods
test
in
mov
mov
pushl
scas
aad
dec
outsb
or
dec
pop
pushf
push
dec
mov
push
add
das
jno
jno
inc
call
out
add
push
enter
xor
xor
jmp
mov
pushf
fwait
add
movsl
shlb
adc
pusha
loop
sahf
cld
add
inc
push
imul
ljmp
cmp
adcl
jmp
stos
cmp
xchg
rcrb
xlat
sub
out
movsb
int
xor
pop
fs
or
dec
mov
incl
mov
popa
out
mov
rclb
inc
jne
enter
mov
aad
xchg
in
shll
push
pop
xchg
ja
cmp
xchg
stc
jg
push
sahf
cli
inc
push
jbe
mov
mov
and
insb
mov
pop
adc
fsubs
mov
aam
pop
add
adc
loop,pn
sti
decl
or
adcb
mov
loope
xor
lods
pop
sub
xchg
lcall
aaa
cmp
inc
rolb
cs
les
aas
aaa
dec
leave
cmp
lahf
decl
out
mov
aas
xchg
xlat
repnz
inc
jp
sbb
addr16
sbb
push
fdivr
inc
mov
pop
push
inc
ret
and
xchg
or
inc
jg
fdivrs
jbe
and
and
jg
mov
aaa
stos
das
test
add
jl
outsl
jmp
pop
and
mov
push
dec
cmp
cs
mov
bound
xchg
push
insl
xchg
enter
data16
cld
incl
push
test
das
xor
push
fdivl
xlat
ja
sbb
sti
inc
jnp
pop
jno
mov
mov
testl
pop
addr16
call
sbb
fimuls
pop
sti
xchg
or
mov
mov
mov
std
dec
pop
fsubs
lcall
mov
daa
fcomps
xor
push
stos
add
mov
add
mov
lcall
mov
push
fldenv
arpl
xor
sbb
sub
mov
fsubr
cmpsl
movsb
push
and
dec
lods
adc
hlt
stc
pop
push
mov
jmp
cs
sbb
pop
mov
or
loopne
incl
pop
shll
mov
icebp
jo
mov
cmp
in
call
cmpsb
in
xlat
out
lds
xor
mov
mov
xchg
mov
or
dec
jns
jae,pt
popa
daa
imul
jecxz
add
out
inc
fsubrp
dec
mov
sbb
or
aam
in
or
std
inc
jae
push
lock
popf
sub
aas
fsubrl
call
mov
xchg
jne
and
ret
ja
mov
mov
push
mov
mov
mov
pop
xchg
mov
mov
neg
je
incl
insb
xor
lods
sarb
dec
sbb
inc
cltd
sub
cwtl
es
dec
jnp
fwait
imul
and
incl
mov
inc
mov
cmp
dec
imul
loopne
call
add
mov
sbb
jns
xchg
pushf
xor
stos
incl
push
test
lret
push
sbb
or
jnp
mov
or
call
cld
scas
loop
xchg
sbb
jp
lock
inc
cwtl
insl
mov
mov
push
xor
fdivr
inc
and
dec
fsubrl
pop
fimull
and
add
scas
adc
and
sar
call
jno
mov
outsb
mov
mov
movsb
sub
push
fwait
push
sbb
loopne
sub
scas
sti
enter
xor
inc
mov
sbb
adc
jo
cmp
jge
mov
pushl
movsl
fidivs
repnz
jno
in
test
mov
pop
jo
decl
jno
bound
popl
lret
lods
ss
mov
fcomip
lcall
jmp
movsl
jecxz
xchg
jle
into
aaa
andb
add
in
ljmp
mov
cli
imul
or
fisubl
lods
mov
push
arpl
ja
sub
call
std
call
test
mov
ret
je
jg
ret
lock
dec
fstl
ljmp
add
into
in
fs
xchg
sub
cltd
add
inc
mov
mov
inc
stos
adc
decl
push
cli
ret
out
mov
adc
mov
jle
in
lods
cld
cld
incl
mov
cwtl
jl
gs
mov
fdivr
in
push
clc
mov
lcall
lcall
pop
push
dec
jle
pop
push
es
cld
lock
cmc
jb
mov
shrl
jae
xchg
out
cli
pushl
xorb
fstps
je
xlat
in
notl
jnp
and
cmp
mov
mov
rcrl
roll
jl,pt
add
jge
in
clc
mov
adc
loopne
push
movsb
scas
fwait
mov
lcall
add
xor
xchg
ljmp
push
test
pop
push
out
pop
ja
mov
adc
and
xor
enter
mov
jmp
cmp
mov
xor
add
cld
decl
mov
and
jne
sbb
nop
xchg
out
xor
inc
in
jl
jg
xchg
and
or
fstl
pop
xchg
cmc
xor
jmp
jo
push
decl
out
xchg
ss
dec
sti
or
mov
idivb
pop
cld
inc
dec
push
mov
sar
jp
cwtl
cmpb
stos
test
incl
push
hlt
aad
mov
hlt
sbb
mov
repnz
decl
jle
mov
lods
pop
out
shll
icebp
sahf
mov
sub
push
dec
lea
fs
mov
int3
ret
mov
ret
scas
xor
ljmp
incl
mov
lret
inc
jmp
daa
mov
das
push
sub
mov
incl
xchg
or
inc
add
fcomp
push
into
adc
cmp
xchg
hlt
popf
sahf
and
mov
loop
lcall
push
cli
rolb
cmp
or
inc
cs
or
push
stc
cmp
ljmp
sar
jb
lret
enter
dec
nop
stos
cmp
ljmp
inc
daa
or
sub
cmpps
jb
cmpl
cmpsl
xor
stos
pop
hlt
dec
cmc
push
mov
stc
and
movsl
ds
and
ret
mov
jbe
inc
std
add
cmp
mov
stos
insl
icebp
in
ret
cmpsb
aad
sbb
lcall
sbb
inc
das
mov
ficompl
jno
loop
add
shr
dec
pop
or
jg
insb
mov
add
push
and
or
mov
outsb
out
pop
or
pushf
jp
mov
popf
in
mov
mov
iret
ja
decl
ret
xor
and
jno
add
push
inc
test
cmpsl
adc
loope
adc
scas
imul
dec
ljmp
mov
xchg
inc
iret
mov
in
mov
fildll
jnp
push
pushf
das
xchg
jle
jmp
xchg
and
jae
incl
decl
cmpsl
jg
punpckhdq
cmp
ljmp
mov
pushf
push
mov
pushl
int3
jns
sub
or
mov
and
push
pop
loop
add
filds
insl
dec
mov
dec
lea
repz
incl
add
sahf
jnp
cwtl
mov
popa
pop
sbb
rcrl
je
and
dec
jae
out
clc
std
loopne
jle
repnz
cmp
dec
lds
insl
aaa
push
push
cltd
xchg
dec
adc
dec
inc
pop
lods
mov
incl
mov
jg
inc
into
pop
test
xchg
adc
into
movsb
push
sub
mov
adc
insl
fldenv
dec
pop
popa
addb
cld
iret
fwait
adc
loope
das
pop
ds
call
xchg
pop
ret
adc
add
sub
pop
push
sbb
jg
xlat
fmuls
stc
or
scas
movb
dec
into
inc
fists
mov
mov
repnz
imul
ret
das
xor
pop
fnstsw
das
rcrl
call
and
and
push
sub
jmp
sbb
movsb
jno
mov
inc
adc
imul
jnp
cmp
mov
push
or
mov
outsb
mov
insl
pushf
jb
inc
jb
lcall
je
adc
je
push
out
jo
xlat
dec
sbb
push
sti
jo
sub
sar
push
sub
iret
shl
adc
cmp
dec
fwait
push
and
enter
xchg
and
jg
adc
cmpsb
sbb
dec
jp
mov
inc
ljmp
fs
hlt
jge
xchg
lds
test
in
jle
enter
inc
cld
pop
ss
xchg
xchg
xchg
aam
cli
push
ss
jg
aas
cmp
ljmp
pusha
push
js
ds
sub
jecxz
push
jmp
movsl
rorb
sbb
stc
inc
mulb
add
or
loop
clc
std
jg
fsts
das
sbb
add
insl
cmp
dec
faddl
pushl
mov
iret
lret
and
mov
mov
in
cli
xchg
mov
std
enter
ljmp
and
inc
dec
sub
aas
cmpsb
leave
stos
and
xchg
pop
nop
mov
mov
lret
and
jmp
mov
pushl
lock
inc
nop
ffreep
push
mov
dec
mov
add
shl
sbb
sarl
scas
add
loop
cwtl
ds
sbb
ljmp
add
sbb
iret
fcos
adc
es
mov
xchg
cmpsl
add
decl
pop
out
xlat
jo
jae
mov
mov
pop
jecxz
call
inc
pop
inc
divl
out
adc
test
movsl
fcomip
mov
cmpsl
push
repnz
jp
andb
call
jbe
inc
cmc
int
push
adc
xor
pop
pusha
xor
imul
push
outsl
out
gs
int3
dec
push
pop
mull
loopne
add
and
xor
add
movl
pop
cmp
dec
fstps
jmp
repnz
or
imul
fadds
cld
lcall
mov
push
lret
push
adc
cmp
fmulp
pushl
je
imul
jecxz
xor
and
fldl
pop
dec
and
imul
decl
das
sbb
xchg
mov
nop
test
push
mov
xor
std
nop
jp
test
loop
ret
fldcw
in
pop
add
cld
fcomip
cmpsl
xchg
lcall
mov
jp
jmp
cwtl
addb
aaa
imull
xor
xor
hlt
fists
xlat
jne
je
mov
pop
sahf
call
pop
mov
inc
pslld
jmp
lods
mov
cmpsl
and
push
lahf
sub
xchg
arpl
xchg
xor
js
loopne
jle
stc
sub
cwtl
loope
rolb
dec
mov
cld
sbb
les
and
ljmp
adc
mov
jmp
xor
fptan
pushf
hlt
iret
lahf
arpl
ljmp
inc
xchg
stos
mov
std
push
cmc
sarb
repnz
lahf
lock
lcall
jmp
lods
pushf
xchg
push
or
div
mov
dec
pop
clc
sbb
call
mov
and
mov
mov
sahf
outsl
push
scas
add
fcom
clc
jg
pop
popaw
inc
ja
and
notl
ja
movsb
ljmp
enter
sahf
mov
sbb
rcl
cmp
fistps
daa
cmp
fs
jnp
push
jb
fwait
addl
lahf
or
push
xorl
and
out
add
jg
dec
test
push
sub
fwait
pop
filds
or
jne
xor
jns
pusha
idivb
pushf
mov
push
out
jne
pushl
inc
stos
push
sub
jp
mov
ljmp
aaa
cli
mov
cmp
popa
pop
mov
sbb
addl
mov
cmp
out
cmp
mov
push
mov
fistpll
jg
inc
testb
add
scas
or
rolb
jp
imul
adc
decl
cmpsl
rorl
data16
ljmp
xlat
lcall
adc
inc
xchg
shrl
ret
cmc
adc
pop
fwait
pusha
adc
and
fisubrs
inc
cmp
mov
push
rcr
testb
mov
ret
incl
lods
mov
dec
and
scas
pop
adc
fdivrp
xor
insb
or
adc
mov
inc
mov
icebp
sub
jle
pop
inc
pop
ljmp
loop
lret
dec
ljmp
xor
push
jge
cmp
pop
hlt
movsb
mov
int
and
out
insb
sub
mov
int
push
cmp
inc
lods
mov
push
push
int
pushf
into
insl
xchg
jp
fcomip
arpl
gs
loope
and
adc
xchg
ljmp
dec
int3
add
enter
inc
icebp
jmp
ds
leave
icebp
cld
adc
enter
cmpsb
sbb
lods
in
mov
lcall
fdivp
fs
mov
orb
mov
int
push
cli
adc
addr16
adc
adc
arpl
pushl
add
jmp
lock
and
cmp
incl
xchg
jbe
in
push
xor
push
inc
sbb
pushf
jg
inc
cltd
enter
shl
rorl
pop
mov
lcall
fnstcw
mov
cmpsb
test
inc
cwtl
push
in
dec
pop
ljmp
test
mov
lcall
xor
test
lods
mov
data16
clc
xor
aam
push
jbe
fs
mov
clc
incl
in
inc
in
push
js
call
loop
orb
push
sar
adc
movb
adc
in
das
loop
std
out
ds
mov
addb
mov
loopne
lret
add
xlat
or
popf
test
inc
add
stc
push
dec
inc
repnz
pop
je
inc
jne
inc
out
pop
shlb
add
jno
lcall
fcmovbe
daa
repz
cmpl
xchg
mov
gs
rorl
jo
and
call
test
lock
bound
mov
movsb
sub
inc
mov
popa
jnp
addr16
xor
lcall
mov
sub
shlb
mov
popa
aad
cmp
sbbl
lret
or
popa
ret
loope
incl
jl
xchg
add
ljmp
outsb
push
cmp
or
sbb
mov
lcall
sbb
add
lea
jg
add
adc
jmp
mov
sahf
shl
imul
pop
push
call
sub
decb
repz
lcall
xor
mov
inc
cmpsb
cmp
sbb
pop
cmp
mov
xlat
flds
test
aad
incb
addb
push
add
cmp
pushl
popa
push
insb
xchg
xlat
jle
inc
outsb
jecxz
mov
sbb
sbb
das
pushl
adc
cmp
hlt
mov
jns
pop
cmc
sbb
xchg
ss
pushl
pushf
push
pop
push
data16
mov
lret
push
psllq
outsl
popf
outsl
mov
pop
dec
test
incl
jp
inc
and
and
jae
dec
jmp
jecxz,pn
pusha
sub
loop
incl
out
sahf
pop
add
rcrl
xor
mov
mov
incl
cld
repz
jbe
pop
mov
cmp
aas
jp
xor
inc
xchg
ljmp
inc
mov
insl
aaa
mov
es
jb
cli
daa
mov
jmp
pop
pushl
sbb
cli
mov
clc
lret
cmp
lahf
adc
mov
dec
sbb
xlat
ljmp
adc
pop
mov
fucomi
mov
sub
push
lahf
mov
int
mov
or
shll
cmp
call
fisttps
inc
jae
xor
std
cmp
ljmp
mov
lods
cmp
pop
pushf
imul
push
aaa
scas
repz
jno
add
push
jb
jmp
mov
std
adc
aas
cmp
scas
fs
push
mov
arpl
cmc
fldenv
pextrw
sbb
xor
clc
jo
out
clc
cmp
push
push
pop
and
jb
filds
jae
sub
pop
xchg
pop
pop
call
pop
push
mov
sar
decl
sub
arpl
or
lods
pusha
dec
test
jle
scas
push
push
adc
arpl
sbb
fildll
lcall
divb
in
xchg
adc
decl
aas
hlt
pop
pop
pop
jmp
push
lcall
xor
mov
fxch
test
rorl
and
insl
mov
stc
push
push
inc
mov
frstor
daa
fnstsw
sahf
dec
das
das
mov
sti
pop
inc
popf
inc
mov
xchg
xlat
add
pushl
sub
les
int
cmp
or
sub
pusha
mov
mov
idiv
lcall
loopne
int3
lea
lret
mov
adc
pop
sti
stc
dec
pop
pop
dec
xchg
ret
jmp
pop
xchg
jne
add
cli
push
js
test
mov
lods
mov
incl
fdivrl
das
mov
popa
jb
lcall
pushf
out
scas
das
and
jns
sbb
cmc
and
fadd
inc
sub
mov
decl
loope
mov
lods
fistpl
movsl
push
or
mov
dec
test
call
clc
add
ljmp
cli
ljmp
or
jne
mov
clc
cltd
mov
lcall
movsl
movsl
jns
mov
push
pop
pop
mov
push
in
bound
mov
call
push
sbb
mov
shr
loop
push
or
push
cs
flds
enter
ss
inc
cmp
dec
cli
fld1
mov
jg
xor
and
or
xchg
ja
xchg
mov
stc
loop
stc
mov
lds
pop
adc
xchg
xor
mov
es
fwait
loopne
lods
rcrl
pop
jno
cmpsb
out
inc
cmp
inc
mov
jge
incl
call
sahf
clc
and
or
fdivl
lret
pop
int
scas
arpl
hlt
lcall
jp
pushf
pusha
lcall
pand
or
dec
pop
mov
testb
movaps
jl
jecxz
pop
lcall
scas
mov
mov
push
nop
popa
mov
test
or
mov
popa
in
out
and
push
xchg
notl
dec
cmp
bound
mov
jecxz
in
mov
cmpsl
lcall
fs
sbb
cwtl
mov
xor
out
lea
add
loope
mov
decl
cli
xchg
pop
je
jno
mov
adc
divb
insl
pop
jmp
mov
push
xchg
xorb
lahf
inc
mov
mov
xor
insl
pop
cmpsb
mov
lock
fmuls
mov
push
imull
mov
adc
pop
and
fisttpl
mov
pop
test
mov
rcl
push
lret
mov
jmp
pop
add
jmp
push
mov
pusha
inc
adc
aas
jmp
push
addr16
cld
ja
test
lcall
lods
movsb
call
jnp
sub
dec
rol
ljmp
dec
sub
dec
aam
and
cltd
xchg
sbb
jge
dec
pushl
clc
pop
ret
inc
call
sti
aam
fidivl
pop
xchg
sub
call
repnz
and
pop
in
lret
xchg
xor
and
inc
mov
pushf
add
mov
repz
add
xchg
inc
iret
inc
xchg
cmpsb
les
dec
lods
insl
data16
outsl
into
dec
xlat
pop
incl
fidivl
rclb
mov
pop
sub
lcall
sarb
ja
push
pop
imul
dec
jmp
inc
ret
scas
push
sub
int
xchg
add
in
push
jb
aas
sbb
mov
jg
mov
dec
ljmp
ret
add
push
push
push
add
and
rorb
loope
repz
push
decl
jp
mov
icebp
cmpsl
mov
loopne
enter
fmuls
and
incl
iret
and
jno
in
pusha
inc
rolb
nop
sbb
movsw
sbb
or
jbe
ljmp
lcall
pusha
push
push
pop
jnp
lock
jne
aad
cmp
jae
lods
sarb
jg
jmp
pop
scas
push
mov
lea
push
ja
pop
call
icebp
jle
dec
jl
and
pop
aam
jle
incl
push
sahf
test
in
or
xchg
out
imul
add
in
pop
jb
fcomip
cmp
push
xor
sub
in
ret
cltd
loope
pushl
sbb
dec
xlat
or
push
mov
pop
mov
shl
pop
lret
mov
pop
or
cmp
and
sbb
into
in
ror
inc
outsb
popa
cld
call
dec
out
adc
hlt
mov
xchg
jg
and
xchg
jb
mov
cmp
mov
inc
xchg
cmp
std
jge
stos
ret
fnstcw
mov
stos
out
jb
jecxz
fcomps
inc
je
popf
push
sbb
in
aaa
xchg
fs
lcall
add
cmp
mov
or
negl
notb
mov
inc
push
movsl
call
pushl
ja
fcomps
adc
mov
daa
cmp
mov
aaa
cmp
test
hlt
mov
es
lods
xorps
lock
xchg
int
bound
call
filds
sbb
rcrb
xor
enter
addb
lcall
incl
jns
adc
inc
lret
rcrl
aad
lods
rolb
or
push
cli
ljmp
and
mov
gs
xor
jb
push
mov
inc
ljmp
lcall
outsb
out
pop
adc
push
pop
push
dec
inc
fs
and
test
cs
mov
lods
and
push
adc
xor
push
lcall
push
sbb
mov
cli
sbb
mov
imul
cmp
cmp
ljmp
scas
test
cmpsb
sbb
cmp
or
mov
jnp
jl
lahf
sbb
adc
lret
adc
fistpl
mov
pop
inc
and
jg
in
popf
jo
mov
mov
mov
test
pusha
ret
rolb
pop
inc
daa
fidivrl
sbb
inc
or
xor
cmc
lcall
jo
loopne
cmp
mov
mov
jo
cwtl
sub
push
or
mov
enter
pushl
sub
push
pop
cwtl
sbb
or
insb
and
push
jbe
into
cmpsl
inc
xor
inc
adc
ljmp
movsb
dec
xchg
daa
cmp
aam
les
xor
xchg
je
xchg
mov
adc
push
sbb
les
fldcw
pop
lods
jmp
cmpsl
cmp
adc
incb
movsl
int
mov
mov
aam
loop
ljmp
push
int3
outsb
cmp
or
pushf
cmp
cwtl
aas
sub
or
enter
rclb
ja
ret
stos
fdivrp
cmp
jl
mov
jg
pushl
push
pop
jnp
sbb
xchg
ss
dec
fwait
pop
je
cwtl
or
popa
roll
out
mov
bound
call
daa
inc
inc
push
mov
and
enter
ss
jbe
idivb
sbb
jl
mov
incl
push
jnp
scas
xchg
imul
fsubl
lds
decl
cmpsl
inc
mov
push
mov
push
jns
or
pop
ljmp
add
xlat
add
sbb
cmp
stc
btc
and
iret
xchg
icebp
loop
incl
jle
test
add
mov
jae
dec
and
dec
pusha
bswap
test
je
lret
xor
decl
dec
cmp
loopne
in
ds
sahf
xchg
sbb
pop
loope
or
cmp
add
and
add
and
inc
mov
and
dec
add
movsl
out
int3
in
jns
lcall
push
aaa
in
add
sbb
pop
repnz
jg
push
ja
add
pop
shr
sahf
mov
lods
cmc
sbb
test
pushf
pop
xor
cmp
jno
scas
scas
ss
adcb
cmpsb
adc
rclb
das
rol
inc
inc
mov
adc
sbb
sub
mov
xchg
addl
xorl
add
loop
jg
aaa
cmp
mov
adc
or
cwtl
outsb
insl
icebp
loope
dec
or
jns
ljmp
inc
mov
in
dec
dec
sub
push
nop
cld
pop
loopne
aad
push
push
inc
mov
jle
arpl
and
sub
push
or
inc
fidivs
stc
lret
push
movsb
push
sahf
movsb
xor
cmp
or
xchg
sub
jns
mov
cmp
push
fisttpll
test
test
sub
shr
and
ljmp
sbb
xchg
adc
pop
cld
pop
fcomip
jmp
pop
mov
test
bound
loopne
ds
mov
lods
mov
ljmp
push
fwait
add
sbb
xchg
push
jns
jb
mov
push
call
cmp
and
sbb
inc
lret
repnz
xlat
ror
decl
cwtl
pop
dec
ret
test
mov
adc
lcall
rolb
ds
pop
push
xor
int
pop
rorl
aam
pop
mov
cmp
test
cltd
ljmp
sub
cmpsb
push
mov
xchg
push
dec
add
xlat
lds
mov
adc
out
in
cld
push
outsb
das
add
sbbl
addr16
sbbb
sub
lods
incl
and
iret
std
or
jg
and
xchg
out
pop
out
addb
insb
loopne
jne
and
jle
xchg
popf
in
push
pop
das
int
push
jecxz
or
fcoms
das
fsubrs
xchg
xlat
push
inc
jmp
clc
rep
test
sbb
push
dec
or
out
shl
dec
mov
js
arpl
ficoml
cmp
mov
out
in
addl
movsb
cmc
push
mov
adc
lcall
mov
ret
inc
lahf
aam
cmpsb
aaa
pop
divl
sbb
loopne
lcall
pop
inc
mov
add
fstpl
sbb
js
lcall
mov
add
inc
ffreep
imul
lahf
pop
lock
mov
and
jecxz
jmp
fs
jno
adc
and
lcall
ret
dec
out
dec
lret
dec
loopne
iret
mov
pop
call
mov
fsubl
dec
mov
shll
inc
push
js
outsl
jnp
lcall
cmp
ljmp
or
sbb
leave
inc
mov
mov
adcb
cs
daa
in
rcll
loope
cmc
jecxz
mov
and
dec
jmp
mov
stc
scas
add
imul
inc
jbe,pt
sbb
incl
popf
pop
sub
ffreep
inc
xchg
ljmp
push
mov
mov
notb
decl
pop
inc
push
dec
adc
shr
mov
mov
test
pop
jecxz
andb
push
dec
popa
cmpsb
mov
jecxz
repnz
ret
push
loope
clc
inc
xchg
xlat
dec
add
pop
incl
xchg
clc
inc
es
pop
shr
ja
jnp
pop
mov
je
push
mov
outsb
in
ja
xchg
ficoml
mov
scas
pop
cs
or
sbb
add
imul
inc
adc
fsubl
jmp
cmp
push
iret
adc
xor
icebp
and
call
jno
aaa
call
sti
xchg
jp
push
mov
shlb
inc
add
mov
lret
xchg
decl
outsb
repz
notb
in
lahf
fbld
pop
fs
or
mov
loopne
sarl
sub
cmp
incb
cld
pushf
sub
jge
dec
mov
rcll
fldcw
inc
inc
inc
ret
and
mov
xchg
call
inc
add
xchg
sbb
mov
lcall
or
shll
mov
inc
add
xchg
fsin
pop
sub
jae
fiadds
cmpsl
jmp
bound
leave
punpckhdq
add
push
lods
daa
mov
sbb
cmp
dec
imul
arpl
lods
nop
popf
pusha
push
cmp
inc
and
jmp
insl
addr16
cmpsl
test
xlat
push
mov
lea
int
dec
or
push
test
cmpb
push
sub
movsb
push
loope
or
mov
rcll
cmpsb
jg
jb
adc
scas
push
or
or
inc
adc
imul
mov
xchg
xorb
jp
and
push
std
pop
hlt
pushl
and
inc
cltd
scas
sub
gs
popf
cmp
add
push
popf
mov
pushl
xlat
mov
push
inc
repnz
sahf
int3
cmp
adc
push
mov
call
movsl
arpl
dec
sahf
xchg
test
scas
daa
pop
push
xchg
sbb
jno
cmp
lcall
mov
lock
pop
sub
stc
fmuls
ja
les
add
decl
push
jg
ljmp
add
push
or
shll
fs
lock
sti
int3
loope
pop
ljmp
xor
sahf
sbb
repnz
pushl
loopne
mov
jge
sub
call
xchg
clc
xor
leave
int3
addb
xor
mov
stc
or
fdivrl
push
xchg
ds
mov
outsl
clc
fmull
xlat
cmp
add
push
movsb
inc
pop
add
push
adc
add
lods
inc
mov
and
pushf
pop
or
jmp
sub
dec
inc
enter
cmpsb
test
lock
xabort
xor
pop
push
lcall
movsb
push
dec
ljmp
xor
add
jmp
cld
jge
je
nop
loopne
mov
sub
adc
stc
int3
dec
or
cmc
push
fs
call
and
mov
jp
pop
jnp
stos
or
or
jge
pusha
in
jo
jecxz
lock
ljmp
outsl
sbb
popf
and
cld
jns
test
sub
xchg
fstl
jmp
jle
mov
imul
jbe
sarb
pushl
mov
fildll
adc
pushl
sub
outsl
push
popa
ss
push
xchg
lcall
jle
popa
cwtl
xchg
jae
sbb
xchg
cmpb
inc
icebp
cmp
sbb
mov
mov
movsb
aam
xchg
pop
pusha
ljmp
lds
jne
andl
dec
loopne
push
inc
mov
push
mov
dec
imul
and
cmp
xor
arpl
add
cli
mov
ja
jnp
aaa
push
dec
adc
fucom
mov
call
cld
in
push
js
mov
cmp
jg
xor
scas
fwait
aas
pop
xlat
sbb
add
test
bound
ficoms
jb
cwtl
inc
jecxz
sub
cmpsl
sahf
add
mov
or
jno
pop
pusha
mov
mov
in
pop
sub
cmp
call
pop
rolb
cltd
or
popf
fldt
mov
jl
fdivr
jmp
sbb
mov
sbb
lea
ja
fiaddl
pushl
movsb
adc
dec
lahf
sarl
pop
xchg
xor
pop
mov
jno
hlt
inc
mov
pushl
fidivrs
jns
divl
push
vpsubsb
inc
in
mov
enter
ret
sub
decl
push
sti
add
js
in
inc
pop
mov
inc
add
sti
lea
add
sub
xor
incl
scas
sub
roll
pop
xor
xchg
cli
add
cld
sar
dec
push
mov
add
loopne
or
jns
push
clc
dec
decl
mov
in
lret
mov
cmp
cli
jp
call
bound
lahf
push
aad
jno
sub
insb
inc
movsl
pop
inc
inc
pop
jno
int3
outsb
cli
outsl
fildll
lock
mov
inc
nop
and
add
push
jge
mov
std
jg
inc
cmpsb
cmp
popa
test
fidivrs
push
jge
dec
and
out
cmp
push
jmp
out
imul
cmc
jno
sahf
shll
jg
leave
rclb
lcall
xlat
int3
adc
push
push
ljmp
jg,pt
mov
jmp
mov
add
aas
out
dec
pop
incb
sbb
sbb
outsl
mulb
push
jmp
add
decl
mov
adc
lods
in
out
cmpsb
jp
pop
sub
pop
incl
mov
lahf
pop
pop
fsubr
dec
out
pop
scas
outsl
pop
mov
lahf
notl
out
mov
adc
rorb
pop
ja
push
es
add
pop
outsl
cmp
mov
je
adc
ds
mov
lcall
repz
xchg
es
ss
cmovp
xchg
fdiv
pusha
sbb
ljmp
repnz
dec
fistps
sbb
scas
pop
test
pop
sbb
add
out
mov
mov
incl
js
fs
push
xchg
mov
outsb
jno
dec
stos
sub
ljmp
jp
pop
or
and
faddp
addr16
fbstp
aam
jge
xchg
lret
pushl
out
les
scas
and
mov
sysret
xor
addr16
enter
lea
test
dec
cmpsl
or
das
xchg
test
clc
xchg
or
jg
mov
and
add
ljmp
pop
mov
or
cmpsl
sbb
adc
std
lods
sbb
fildl
lcall
xlat
icebp
push
mov
mov
adc
test
js
jg
std
dec
arpl
lock
push
mov
adc
cltd
xlat
test
test
jge
incl
xor
inc
dec
mov
jge
add
subb
add
fbld
push
dec
clc
call
inc
in
adc
test
add
sub
xor
inc
or
adc
lcall
lahf
sub
fnstcw
repnz
gs
mov
clc
and
mov
aam
adc
ss
insl
inc
push
dec
inc
xor
lea
decl
or
lods
push
sarl
ljmp
dec
movsl
std
call
xor
daa
adc
enter
fs
sub
incl
fadd
mov
jbe
mov
icebp
je
push
out
inc
add
ret
cmp
or
mov
dec
pop
mov
xchg
jae
jne
dec
push
inc
sbbl
sbb
pusha
and
pop
xor
lret
loop
jg
push
push
cmp
fnsave
jb
shlb
push
sti
and
call
dec
xor
int
mov
ljmp
jecxz
fs
ljmp
jp
lea
push
insl
dec
sbb
test
and
mov
sub
mov
mov
lcall
cld
sub
fcomip
dec
mov
cmp
inc
mov
ret
xchg
xor
mov
ljmp
sti
int3
adc
mov
clc
cli
adc
or
daa
cli
push
cmp
jb
incl
jle
jb
jnp
repz
cmc
jns
dec
fnstcw
daa
or
push
or
mov
push
cmp
mov
add
lods
or
add
in
xchg
push
jp
sti
inc
movb
scas
clc
call
or
sbbl
and
mov
fucomp
lods
sbb
cmpl
pushl
inc
pop
js
mov
daa
mov
jns
mov
nop
sub
mov
mov
sbb
mov
fnstcw
in
pop
mov
mov
inc
mov
xor
hlt
push
and
and
cld
call
subb
mov
mov
cmp
ljmp
sbb
aad
shlb
test
pop
out
xchg
imul
idiv
cmpsb
decl
sbb
or
or
mov
inc
aaa
dec
out
sbb
fadd
inc
out
mov
enter
loope
xchg
loope
adc
and
in
loop
cmp
loop
lcall
inc
in
push
mov
mov
imul
sbb
jns
inc
pop
jae
mov
cmpsb
pop
mov
idivl
adc
lock
mov
popf
fisttpl
mov
mov
fildll
insb
in
push
jns
ljmp
pushl
mov
aas
xchg
mov
cmp
stos
pushf
aaa
fst
nop
xchg
frstor
out
lret
xor
andb
scas
jge
fdiv
inc
leave
outsl
pop
pushf
cs
std
pop
loopne
sub
cmp
outsb
xchg
iret
mov
shlb
loope
push
pop
pusha
stos
ljmp
in
or
shr
dec
and
mov
sub
daa
jl
add
lcall
pop
enter
jg
loopne
out
sub
mov
dec
outsl
lret
aas
xchg
cs
lcall
roll
pop
jle
or
imull
mov
hlt
out
push
neg
adc
mov
aaa
ror
inc
sahf
lods
inc
jl
lcall
mov
pop
addr16
pop
adc
xorl
jne
mov
inc
sub
or
incb
lock
scas
repnz
pushl
or
sbb
shll
mov
push
dec
pop
ja
lods
in
xchg
lcall
pop
fwait
out
jge
aam
cwtl
test
es
pop
xor
mov
sbb
repnz
call
cmpl
pop
lods
rol
or
sub
and
ljmp
push
imul
add
pusha
xor
and
stc
mov
add
add
cmp
pop
pop
mov
loope
jo
int3
lods
lret
add
dec
jo
pop
cmc
decl
jecxz
pop
addr16
add
xchg
addl
sub
push
mov
lcall
loope
les
xchg
fdivrs
stos
mov
mov
xchg
mov
jmp
add
ljmp
push
mov
add
cmpsb
jnp
jl
cs
mov
cmp
jmp
add
cwtl
movsb
and
inc
sbb
sbb
mov
jns
orl
jno
or
push
cmp
push
sbb
movsl
dec
mov
mov
andl
sbb
adc
mov
out
pop
shl
repz
out
div
or
lcall
movsb
jle
call
mov
add
push
push
in
sub
sbb
jns
pop
push
sti
dec
push
mov
add
dec
loopne
fwait
jmp
pop
sub
test
mov
inc
mov
xchg
adc
call
mov
fstps
push
and
sarb
xchg
jne
push
mov
xor
dec
test
mov
jns
cmp
add
fcmovnbe
fyl2x
sbb
cmp
adc
cmp
stos
je
lock
scas
and
outsl
mov
jge
cli
xchg
dec
or
sbb
add
insb
mov
and
mov
cmpsb
std
push
cld
sarb
movsl
or
gs
mov
pusha
dec
xor
mov
sub
lods
mov
icebp
pushl
or
loopne
cwtl
inc
call
testl
pop
mov
aas
mov
incl
xor
push
out
dec
pop
mov
das
call
xor
sub
call
mov
aaa
in
testl
adc
loope
icebp
jno
pop
push
hlt
cmp
sub
mov
ja
js
lret
pop
hlt
mov
ljmp
rolb
das
sub
fdivrl
js
daa
test
push
stos
pusha
sub
movsb
dec
add
push
adc
mov
cmp
sbb
cmpsl
icebp
add
ret
push
lock
or
sbb
xchg
movsb
stc
and
dec
imul
mov
out
scas
sbb
sub
stos
pop
push
stos
dec
cmovp
rorl
stos
inc
sbb
push
and
les
aad
jle
xor
inc
mov
mov
pop
add
sbb
lahf
int3
xor
add
or
arpl
insl
mov
push
outsl
jne
test
push
lret
dec
adc
adc
addr16
inc
adc
pop
lods
int
test
pop
nop
mov
xchg
insl
and
dec
std
mov
out
lea
daa
imul
ret
sub
cmp
cld
push
ljmp
or
sbb
push
out
dec
inc
sahf
push
xchg
cmc
xchg
call
add
xchg
iret
frstor
pop
inc
cli
jmp
call
push
cmpsb
iret
add
push
js
mov
pop
cmc
movsl
mov
faddl
inc
jne
push
dec
lret
xchg
push
pusha
bnd
decl
push
mov
or
jo
mov
push
xchg
imul
stos
lea
ljmp
repz
mov
aas
in
cmp
imul
lret
adc
mov
inc
xchg
push
ret
out
xchg
mov
or
sub
xor
mov
movb
mov
mov
lret
mov
sub
mov
insl
loopne
push
mov
dec
enter
ljmp
cli
fnstsw
scas
xchg
fimull
jecxz
dec
sub
lods
or
jg
sahf
inc
sub
std
push
popf
sub
fmul
dec
mov
cmp
dec
mov
ljmp
out
sub
mov
adc
jmp
inc
cmp
nop
lcall
arpl
inc
mov
mov
sbb
mov
mov
jmp
scas
enter
mov
enter
push
leave
push
paddusb
adc
jns
into
push
jmpw
fildll
pop
fcoms
mov
into
add
out
sbb
in
mov
pop
mov
pop
aas
clc
pusha
not
xor
push
push
cmp
arpl
loop
pushf
sbb
jg
pushl
add
sti
pop
pop
pop
stos
inc
imul
jns
ljmp
or
jne
out
mov
xchg
push
jecxz
es
jg
xchg
or
xor
out
xchg
mov
sbb
mov
mov
pusha
and
cmc
jmp
stc
jbe
loopne
sub
shll
aas
push
sar
ds
cmpsl
push
fwait
push
or
scas
mov
int3
pop
mov
aad
ret
sub
jg
arpl
ljmp
cmp
jg
testl
andl
popf
js
mov
inc
and
ret
enter
js
popa
dec
xlat
pop
mov
sbb
cmp
in
ficomps
out
jno
lds
fadd
cltd
cmp
pushf
test
ljmp
lods
lahf
inc
out
jl
inc
xor
test
mov
in
pop
repz
ljmp
ds
cmp
dec
inc
int3
mov
sub
cmp
and
loop
xor
jno
into
lahf
add
data16
inc
test
fildll
out
adc
enter
or
pop
inc
sub
cltd
mov
mov
inc
inc
mov
cwtl
push
cs
jns
xor
rorl
jl
push
add
jae
jmp
cmp
add
outsb
lcall
imul
icebp
into
mov
lea
mov
popf
fisubs
push
lcall
push
lds
testb
push
mov
and
pop
lods
out
jge
push
push
jge
and
adc
and
lcall
out
inc
and
fcmovbe
pushf
xchg
std
sbb
dec
les
call
dec
movsl
jne
ljmp
js
std
mov
cmp
xorl
and
iret
cmp
push
in
xchg
mov
push
in
mov
xor
jmp
pop
roll
jo
or
mov
add
div
ljmp
cmp
push
loopne
loop
stos
cld
rclb
dec
or
insl
push
sub
aam
or
jmp
aad
arpl
mov
sahf
inc
inc
pop
scas
or
cld
pop
cli
lods
js
outsb
idivl
fucomp
adc
push
xchg
popa
scas
fwait
and
sahf
xchg
imul
scas
lret
or
fnstenv
shrd
mov
call
push
fdiv
imul
ret
mov
jg
fstpt
movsl
aam
pusha
push
adc
jno
stos
lret
out
hlt
sub
and
jb
dec
stos
xlat
stc
mov
leave
adc
cli
pop
adc
pop
cmpsb
orl
ljmp
les
dec
in
mov
in
push
add
xor
or
sti
aaa
cltd
pop
lods
ljmp
inc
shlb
and
aam
push
fmulp
pusha
rcl
inc
popa
sar
jl
add
jno
pop
sub
sti
std
jae
cmp
sub
pushf
js
in
xor
call
incl
xchg
jno
mov
ret
xorb
je
jl
pop
imul
xchg
test
add
es
sbb
loop
scas
mov
or
leave
xchg
lcall
lcall
push
cmpsb
xchg
dec
xchg
push
lods
adc
shlb
adc
cmp
mov
pop
sbb
jae
mov
mov
sbb
sbb
xchg
clc
mov
sub
mov
and
jge
insl
imul
das
out
cli
mov
clts
roll
popf
jb
sbb
pop
incl
aaa
addl
sub
mov
ljmp
sbb
push
sbb
out
shrl
aam
push
clc
ds
mov
outsl
in
sahf
sbbb
jmp
jno
fcoms
pop
nop
dec
or
orl
fbld
scas
insl
inc
repz
inc
repz
dec
outsb
icebp
dec
or
rcr
xchg
mov
pop
data16
dec
or
cld
stos
pop
sbb
lods
sbb
mov
das
lea
lock
call
or
pop
cmpb
jmp
jp
stos
pop
mov
mov
sbb
pushl
ss
cmp
xchg
pop
int3
push
movsb
int
cmc
fistps
sbb
jbe
jecxz
ljmp
subl
orb
and
aad
or
mov
in
sub
push
fdivs
fdivp
pop
or
xchg
push
inc
dec
push
jge
jmp
clc
gs
jne
adc
or
sub
push
inc
popa
in
adc
xchg
dec
push
int
push
mov
jp
adc
divb
sub
ljmp
add
xorl
rclb
int3
add
fs
lret
incl
js
popa
ret
pop
inc
outsl
arpl
fldenv
fcmovb
ljmp
cmp
lret
mov
outsl
sub
sbb
aas
pusha
mov
sub
loop
out
out
jo
test
nop
test
std
arpl
sub
leave
mov
call
int
jg
inc
mov
sahf
cli
out
add
pop
xchg
mov
les
mov
and
aad
repz
out
fmul
lcall
or
lock
pop
jp
xchg
xor
popa
jge
fnstsw
iret
pop
fstpt
out
lock
pusha
push
pop
sub
pop
sahf
shl
mov
cmp
sub
out
jmp
and
rcll
xor
xor
adc
ljmp
jno
push
popa
lea
pusha
dec
and
pop
pop
ljmp
fbld
outsb
cmpsl
movsl
pop
out
push
cmp
ja
inc
dec
dec
fimull
insb
pop
jno
insb
adc
call
mov
ret
xchg
jge
dec
inc
xor
sbb
mov
dec
arpl
jg
jl
pop
daa
nop
std
hlt
jno
jo
and
lret
je
xchg
ret
add
fwait
inc
loop
gs
ljmp
push
test
sbb
call
movsl
mov
or
ficoml
test
or
push
data16
xor
mov
in
adc
pushl
in
shlb
ljmp
lret
or
jns
pop
fnstsw
ljmp
and
in
inc
ljmp
orb
mov
out
inc
jecxz
cmp
cmp
xor
lds
jbe
or
movsb
mov
jnp
jns
lcall
aam
imul
adc
stos
push
mov
decl
xor
cwtl
jae
aas
mov
outsb
shl
data16
sub
clc
insb
or
dec
or
jg
mov
inc
jno
jmp
jmp
repnz
cmp
in
gs
decl
decl
sti
push
jo
xchg
mov
jl
in
xchg
jle
jmp
jbe
pushl
cmpsb
sub
popf
xchg
adc
and
ror
xor
pushf
push
das
mov
negl
call
add
push
fldcw
xchg
sbb
jp
mov
dec
mov
and
scas
int3
hlt
mov
decl
jecxz
pushf
xor
mov
adc
call
dec
push
sub
and
mov
jb
sub
fisttpl
ret
ljmp
jb
push
sub
xchg
add
adc
std
and
inc
add
jmp
lock
and
push
mov
sbb
mov
inc
mov
push
jo
and
mov
cmp
pop
incl
or
cmp
and
jl
cmp
sti
xchg
mov
fisubl
scas
out
mov
fisubl
int3
xchg
xor
je
pop
jl
dec
jb
in
movsb
cmp
call
aas
add
pop
pop
mov
insb
xchg
jle
enter
fnsave
mov
lds
test
jo
ss
outsb
push
dec
clc
lcall
mov
add
call
jmp
xor
mov
pop
push
push
ds
ss
push
sub
mov
push
and
cmp
jl
cli
out
pop
push
lret
jb
ret
push
mov
pop
and
jno
sub
jmp
sbb
icebp
fistl
repnz
mov
insb
outsl
sbb
inc
pop
fwait
inc
or
insl
inc
out
mov
mov
je
stc
sbb
int
dec
jmp
cld
inc
jl
push
xor
je
mov
jge
lds
mov
push
and
dec
mov
push
negl
js
cld
xchg
ljmp
ss
addr16
sbbb
mov
xchg
mov
dec
int3
mov
hlt
sub
les
movsl
cmpl
cmp
inc
imul
jg
cmp
xchg
jnp
jg
lret
push
jge
fwait
in
mov
outsl
nop
jns
icebp
jg
hlt
dec
js
adc
push
int3
popa
jbe
sub
cmp
sbb
xchg
xchg
mov
and
test
iret
scas
adc
lcall
insb
in
xor
inc
or
cli
aas
inc
dec
cmp
enter
jns
adc
cmp
cmp
dec
xor
movsb
adc
in
adc
lret
ret
mov
inc
pop
and
fwait
and
mov
or
ficomps
cli
sub
call
inc
fcomps
mov
add
mov
scas
cli
sbb
push
shl
inc
out
stos
push
je
incl
add
popf
and
sti
jle
mov
cmpsl
out
xchg
dec
jmp
mov
jns
rol
icebp
aas
hlt
fmull
add
sub
sub
je
addr16
xchg
jl
subb
roll
incl
gs
or
fisubs
inc
test
xorb
dec
push
inc
popa
push
push
cltd
daa
cli
inc
push
fsts
lock
jl
clc
incl
jno
fimull
insl
clc
xor
pop
pop
int3
xchg
inc
js
pop
test
cmp
call
mov
push
aad
in
test
inc
lret
mov
movsl
add
cld
pop
dec
push
dec
leave
jle
mov
lds
inc
push
cld
scas
xchg
hlt
incl
xchg
ja
mov
and
push
mov
adc
test
or
stos
mull
enter
sbb
push
add
call
cmp
test
pop
cmp
add
mov
test
lock
lcall
bound
lcall
out
mov
xchg
xchg
dec
push
xor
fistpll
dec
movsb
sbb
imul
clc
imulb
insl
arpl
xor
mov
jno
jmp
insb
insl
and
repnz
fnstenv
inc
fwait
rorw
hlt
ljmp
in
test
cmpsl
aad
pop
push
cmp
test
aad
jle
scas
fxch
cmp
push
xorl
adc
mov
or
testb
push
add
cmp
jg
push
xchg
idiv
mov
aam
std
ss
adc
jl
scas
les
mov
cmpsl
dec
mov
push
clc
jmp
push
sbb
sarl
mov
jne
push
mov
dec
and
sahf
jg
out
dec
inc
pop
lea
sbb
lret
inc
add
loope
or
or
scas
cmp
xor
mov
adc
aam
adcb
inc
pop
je
and
pop
andb
int
cld
outsb
sbb
fists
ret
mov
gs
leave
inc
mov
ljmp
xchg
mov
arpl
pop
xor
fidivs
cld
jmp
pop
mov
dec
in
mov
lcall
movsl
mov
mov
jg
inc
negb
fiaddl
test
push
ret
jae
lret
fbstp
insl
push
ljmp
insl
ror
out
jmp
stc
mov
fimull
rorl
sbb
mov
pushf
mov
out
ds
mov
pop
pop
cs
mov
mov
fwait
addr16
popf
cmp
sar
call
scas
daa
mov
inc
pop
cmp
mov
cmp
incl
lret
jp
pusha
test
out
ljmp
sti
fs
aaa
out
inc
jmp
mov
fwait
subl
cmpsb
push
xlat
ja
cmp
jnp
inc
in
sti
mov
incl
mov
xchg
xchg
mov
out
loopne
mov
cwtl
xchg
imul
ljmp
xchg
pop
cli
out
sbb
sbb
icebp
and
dec
popf
pop
sbb
inc
pop
sbb
hlt
or
mov
mov
mov
aas
leave
scas
push
sub
push
xchg
movsb
sub
mov
fldt
movb
je
ret
arpl
mov
xor
mov
push
cmp
lods
lods
lcall
pusha
test
sahf
in
sub
fcompl
mov
repnz
rcrb
repnz
mov
dec
fbstp
cmp
cmp
pusha
push
sub
shrl
push
sub
test
push
mov
out
les
pusha
xlat
mov
mov
out
out
clc
stc
xorl
stos
jns
mov
sbb
push
jg
insl
sbb
jb
int
ljmp
jb
adc
enter
fstpl
xor
lock
jo
shrl
push
jne
fwait
inc
cld
xor
push
shll
stos
xchg
ret
jmp
loop
mov
add
fwait
es
pusha
ret
xchg
es
cmp
mov
xchg
xchg
lcall
nop
dec
loope
sub
gs
jl
fcompl
repnz
push
mov
cmpsb
ret
dec
pop
cmp
mov
fmull
sbbl
aas
aaa
rorl
sbb
cmp
mov
mov
ss
inc
lock
mov
xchg
xchg
cmp
adc
or
sub
cli
mov
fsubr
adc
js
and
cmc
leave
adc
sbb
incl
xchg
test
jb
sbb
sbb
sbb
fstps
incl
jno
and
mov
lock
aam
jmp
add
and
dec
pop
cwtl
js
pop
xor
xchg
lock
js
test
xor
cmc
and
inc
sub
xor
jle
mov
add
pop
lock
test
hlt
add
leave
std
cmp
ljmp
inc
aas
jg
pop
xorl
push
fists
mov
add
gs
incl
sbb
push
in
std
mov
int3
dec
pop
sti
dec
mov
cmp
push
cmp
jg
data16
mov
ljmp
loope
sub
mov
shrl
enter
inc
out
je
push
mov
outsl
jno
mov
outsl
clc
stc
pop
xor
int
idivl
cmp
or
es
test
sbb
mov
in
ucomiss
int
loope
sbb
test
out
incl
arpl
xor
push
cmp
jg
test
lods
dec
jp
outsb
cmpb
pop
push
je
inc
mov
cmpsl
mov
lods
or
mov
push
pop
imul
inc
imul
loop
jbe
sti
incl
and
cmpsb
sub
adc
js
push
leave
rolb
sub
add
lock
push
shrl
pop
fsub
scas
les
shrl
push
dec
push
xlat
xchg
jae
xchg
adc
mov
lret
mov
dec
and
imul
mov
dec
cld
ja
mov
in
lods
loop
les
jmp
roll
pop
inc
imul
or
call
das
jl
out
stos
xchg
inc
push
xchg
int
push
ret
xchg
mov
jp
cmp
inc
jle
sbb
pop
std
push
mov
or
int
test
fwait
fs
adc
push
cld
ljmp
aam
iret
idivl
pop
pop
call
push
mov
mov
or
rolb
add
or
cwtl
xchg
es
inc
cwtl
lock
mov
mov
cwtl
jg
subb
sti
sub
inc
push
jmp
je
incl
jbe
je
jbe
inc
cmp
call
test
sbb
push
mov
push
mov
push
lret
jle
or
ss
xchg
inc
and
mov
inc
jl
pop
outsb
sbb
fstps
arpl
loope
lea
jno
add
mov
into
or
ljmp
cli
cmp
hlt
xchg
cmpsb
and
jg
mov
cltd
clc
xchg
push
dec
push
lahf
ja
rclb
insl
mov
outsb
cmc
lret
mov
aaa
add
adc
inc
mov
fwait
and
scas
sub
push
push
sub
mov
aam
and
in
out
clc
jbe
out
xor
pop
std
ljmp
add
xor
jg
mov
dec
imul
adc
vunpcklps
int3
pusha
sti
pop
sbb
aas
mov
xchg
out
cli
jg
xor
outsb
xorb
fmull
lock
pushl
mov
cli
mov
movsl
punpckhdq
aas
sub
in
mov
add
ljmp
pushf
cmp
mov
and
mov
jl
cmpsb
loop
jp
inc
mov
scas
add
xor
mov
cmc
push
test
je
push
mov
fadds
xchg
dec
push
nop
out
jns
mov
faddp
loope
cwtl
sub
bts
popf
xor
mov
mov
lds
nop
mov
jg
decl
sub
pushf
and
mov
insb
push
test
int3
jg
dec
lods
inc
dec
or
aas
outsb
inc
adc
ss
adc
fistl
in
xchg
mov
repnz
fs
andb
in
mov
jecxz
lods
stos
jbe
mov
xor
int3
add
je
jns
pop
push
jo
xor
cli
test
pop
movsbl
lds
or
mov
ja
int3
push
outsb
mov
imul
adc
push
sbb
decl
movsl
inc
lret
mov
movsl
sub
and
xchg
mov
xchg
in
hlt
call
gs
mov
mov
jo
pusha
incb
push
sub
adc
mov
adc
mov
xor
jns
mov
mov
or
lret
lock
push
cmc
xchg
ds
cmp
add
and
dec
push
push
js
push
sbb
dec
mov
stos
xor
mov
xchg
cmpsl
jno
jnp
into
push
mov
call
cltd
fisubrs
addr16
nop
inc
jb
out
fwait
repz
cmp
and
int3
xor
int
sahf
jg
arpl
leave
jae
mov
in
pop
xchg
dec
in
mov
cmp
sub
push
cmp
outsl
out
inc
sbb
andl
aaa
call
loopne
push
mov
pop
add
pop
fs
ljmp
mov
scas
lret
mov
cmpsl
or
fwait
jmp
les
cmp
and
gs
xor
inc
xor
fdivrs
and
aaa
xor
xor
mov
pop
lods
dec
aad
out
cli
int
lcall
lock
sub
outsl
std
pop
jo
jg
push
pop
insb
push
and
inc
pop
mov
cld
xchg
stc
jne
push
jp
cmp
cli
jne
negb
mov
call
imul
xor
jo
sbb
mov
xlat
push
jg
imul
dec
dec
xrelease
mov
stos
sub
aas
jmp
idiv
sub
fnsave
dec
fadds
adc
test
dec
jp
mov
decb
cmc
fsubs
hlt
sub
mov
imul
cld
sbb
jg
mov
jns
lahf
jnp
and
mov
mov
adc
mov
jne
inc
mov
lea
mov
sahf
insb
sub
adc
jne
cmp
mov
rol
insb
ficompl
fcomip
rol
aam
movsb
and
or
pop
clc
dec
test
dec
stc
rolb
mov
mov
into
shrb
jg
xchg
mov
aam
test
sub
inc
out
push
pop
movsb
pusha
xchg
or
lds
ss
fbld
pop
mov
fldcw
cs
cmp
sbb
mov
lock
and
cmpl
shrb
or
out
cmp
pop
pop
and
icebp
incl
mov
lcall
rorb
mov
in
in
sbb
adc
jg
call
mov
xchg
in
mov
jle
jle
xor
and
fdivrl
xchg
into
add
and
mov
adc
ljmp
repnz
sarl
dec
out
or
add
and
shrb
adc
xchg
and
add
call
imul
in
out
pop
icebp
cmp
loop
insl
out
inc
sub
clc
jmp
inc
sbb
or
or
cs
xor
call
push
in
decl
mov
clc
xlat
lret
mov
cmpsb
lcall
sbb
in
sbb
ljmp
sub
subb
out
insl
ds
call
std
jl
pop
xor
jo,pn
and
sub
into
mov
call
fnstsw
dec
push
mov
ficoml
pop
icebp
fldt
pop
inc
mov
inc
loop
cld
int3
push
outsl
mov
clc
call
jecxz
fsts
jl
hlt
add
push
int3
incl
pop
lds
push
xor
pop
mov
adc
pushl
call
stc
int3
lea
bound
std
lcall
mov
inc
push
lods
xor
mov
dec
fiaddl
out
mov
push
ffree
xchg
fisttps
cmp
cmp
cmpsb
pop
mov
dec
loope
aaa
lods
jmp
sti
les
add
xchg
mov
movl
add
jecxz
add
mov
insb
mov
jb
cltd
adc
inc
lcall
insl
repz
loopne
sub
pop
subl
add
hlt
int
stc
push
cmp
pop
pop
jp
cmpb
and
sarb
ljmp
add
test
xchg
int3
inc
jg
rorb
jo
mov
ror
pop
mov
add
push
or
jmp
or
jnp
fistps
idivb
aad
lcall
mov
mov
outsb
adc
jg
mov
je
gs
adc
inc
pop
mov
push
popf
bound
fs
jmp
add
ljmp
out
or
dec
jo
push
push
in
xchg
insb
jl
jmp
enter
dec
addr16
orl
xchg
mov
ffreep
inc
std
ss
mov
pop
push
bndstx
add
or
jmp
or
sbb
ljmp
xchg
in
push
xchg
push
je
ja
pushl
lret
sbb
cli
ja
idivl
dec
pop
imul
sbb
dec
mov
jl
jns
cmp
aaa
aad
xor
cmp
or
pop
or
sti
lea
sbb
test
add
adc
pushl
push
pop
pop
mov
jno
shrl
in
pop
dec
sbb
mov
jg
mov
mov
cmp
cltd
sbb
stos
movsb
mov
stos
jne
jb
fwait
xchg
in
jns
clc
cmc
pusha
pop
rcl
jg
call
jl
fdivs
jp
ja
insl
mov
inc
fisubl
mov
jne
fisubrs
aam
xor
das
inc
inc
cld
pop
out
fstl
test
inc
std
frstor
mov
dec
xchg
nop
fidivrs
pop
lock
or
aad
roll
enter
xchg
xor
dec
cld
decl
inc
cmp
add
jle,pt
jg
dec
adc
sbb
ss
adc
test
xchg
shl
xchg
bound
incl
sub
sub
pop
lret
fwait
and
sub
push
imul
jg
lret
jb
rorl
lret
push
ja
fildl
pop
inc
push
lds
sub
cs
pop
pop
test
inc
dec
adc
sbb
movb
dec
add
or
xor
sar
mov
cmpsl
cmp
inc
sbb
ret
popa
fisubrl
jg
scas
fidivs
xlat
ret
jecxz
popf
ret
repz
cmp
xchg
dec
sbb
int
jg
sub
mov
adc
sub
inc
les
inc
pushl
inc
bound
sbb
stos
pop
jge
mov
push
cld
sub
incl
enter
test
out
mov
cmp
aad
pop
addr16
sbb
jne
loopne
pushl
pop
call
xchg
shlb
jnp
jbe
xchg
sarl
clc
mov
mov
and
out
popf
adc
cmp
xchg
hlt
ret
pop
out
mov
dec
in
sti
loopne
aad
cli
cmpsl
or
sbb
jg
iret
push
add
jecxz
leave
icebp
push
dec
jne
mov
mov
clc
xchg
or
add
mov
pop
aas
pop
hlt
and
repz
jae
mov
imul
fnstenv
push
dec
mov
mov
aad
mov
inc
repz
push
mov
jp
push
mov
test
mov
inc
jmp
incl
push
into
push
test
out
nop
dec
xchg
mov
pop
xor
int
cld
xor
xlat
fisttpl
lahf
stos
bound
xchg
bound
sbb
adc
pop
outsl
test
loop
ljmp
mov
push
mov
in
pushf
pop
xor
cs
cmp
insl
mov
push
adc
xor
jmp
xchg
ret
lods
and
mov
incl
push
lds
addr16
or
movsl
test
ss
sub
push
push
xchg
je
cmp
jne
fwait
mov
jae
sti
cwtl
jbe
mov
sbb
cld
mov
cmc
decl
aaa
mov
pop
cmpsb
pop
movsl
cld
lock
roll
cmp
outsl
ljmp
popf
daa
dec
jle
scas
mov
sbb
jecxz
sbb
adc
pop
in
shrl
call
les
xchg
lahf
push
mov
sub
xor
pop
test
ret
push
out
in
cwtl
mov
dec
pop
int
imul
fcomps
jg
mov
push
cs
push
mov
aaa
adc
jp
push
ret
fs
sbb
lcall
sbbl
add
mov
aad
icebp
call
xchg
fprem
push
rcr
stc
ds
lcall
sub
mov
push
jne
scas
xor
mov
fldcw
or
mov
mov
mov
lods
movsb
sbb
xchg
aaa
stos
dec
cli
mov
xchg
insl
out
lcall
in
stos
cmp
cmp
sbb
inc
inc
cwtl
dec
xchg
in
in
mov
mov
jecxz
xchg
dec
popa
jnp
call
mov
lcall
adc
mov
std
mov
xchg
push
add
jns
add
or
clc
mov
and
xchg
test
sub
cmp
test
aaa
inc
pop
arpl
repz
popa
xchg
ret
ljmp
out
sub
incb
ljmp
andl
std
fimull
sahf
imulb
icebp
std
push
jecxz
cmp
cmp
decl
push
in
jne
and
test
enter
cmp
mov
pushl
sbb
and
fstpt
mov
fnstcw
ljmp
mov
outsb
popa
out
inc
push
mov
outsl
aas
cli
jg
sub
inc
or
add
aam
idiv
mov
ljmp
push
xchg
ja
call
inc
cwtl
jnp
dec
mov
push
push
and
insb
ds
aaa
xchg
stos
dec
pop
loopne
pop
lret
add
mov
ljmp
es
fcoml
sbb
test
pop
dec
xchg
or
sti
enter
xor
das
clc
pushl
movsl
test
fdivr
cmpl
nop
iret
mov
movb
jl
mov
xor
adc
outsb
sbb
cltd
lret
mov
mov
mov
ljmp
mov
mov
cmp
cmp
xchg
pop
mov
jns
and
mov
decl
ret
xor
add
out
mov
test
pop
fdivrs
cltd
scas
sub
enter
mov
jg
test
rolb
or
push
jp
std
popf
aas
std
add
stos
dec
cwtl
nop
call
xor
lret
push
fisttpll
sbb
mov
scas
addr16
cs
insl
idivl
insl
pop
repz
xlat
rclb
daa
decl
xlat
out
rcrl
ja
mov
cmp
pop
lahf
cmc
pop
mov
lods
sbb
cwtl
addr16
incl
gs
popf
cmp
jae
push
fwait
inc
cmp
into
call
inc
jge
push
mov
pop
push
xchg
jae
cwtl
xor
jecxz
xchg
test
loope
cmp
jp
incl
push
adc
mull
jp
xchg
jecxz
pop
sub
pop
cmpsb
dec
and
adc
pushl
call
sbb
jnp
pusha
and
jl
divl
int3
cs
mov
ljmp
jnp
inc
fsts
aas
repz
sub
mov
jp
xchg
dec
mov
jp
fdivrs
xchg
mov
adc
int
fdivp
jne
inc
sub
imul
psrlq
push
fadds
call
bnd
cmc
in
outsl
sti
inc
and
lds
inc
mov
leave
inc
sbb
loope
lods
pop
jae
in
and
pushl
cli
sar
pop
fisubrs
imul
sub
push
push
fwait
inc
inc
incl
icebp
lret
add
pop
stos
xchg
cmpl
test
pop
jle
mov
jno
mov
das
je
fistps
cmpsb
aaa
and
adc
xor
in
pop
or
mov
fcomip
jg
shll
or
movsb
shl
mov
cmovl
jg
mov
xlat
pop
inc
ljmp
pusha
pusha
xor
imul
pop
mov
jmp
das
xchg
test
mov
fstpt
xchg
stos
call
ret
push
ret
out
addr16
sub
fadd
push
mov
push
push
jae
dec
std
es
lods
and
decl
adc
ljmp
insl
js
rcll
or
rcr
sbb
push
fwait
cli
je
pop
arpl
ljmp
push
mov
sub
jne
mov
cmpb
rclb
dec
cmp
stos
and
sbb
add
fs
push
ja
fmuls
das
inc
les
sti
adc
jecxz
adc
jle
mov
enter
lds
imul
loope
xchg
popf
mov
daa
xchg
out
out
ljmp
fadd
cmc
mov
mov
sbb
test
enter
sarl
sarl
popf
or
cmp
scas
call
pushl
sti
xchg
test
pop
and
repnz
pushf
sahf
mov
movsl
loop
mov
arpl
incb
lds
outsb
cltd
jne
sub
xchg
les
fsubl
ljmp
xor
pop
int
addr16
frstor
jl
mov
pop
ret
dec
icebp
ljmp
mov
adc
mov
xchg
push
imul
rcl
xor
push
rclb
sarb
pop
cmp
enter
jmp
push
cmp
ja
test
or
pop
mov
jg
ja
lret
xchg
mov
in
mov
inc
stc
roll
and
cli
cmp
mov
jmp
inc
and
das
adc
xlat
jno
add
xor
push
std
ljmp
in
in
fmull
or
out
jb
lea
xor
dec
pushf
icebp
pop
hlt
sub
and
jb
lahf
sbb
jp
popf
dec
and
sarb
sti
das
shrb
xchg
lods
sti
fsubs
insb
out
repnz
repz
loop
loop
jecxz
js
inc
adc
gs
decl
inc
lret
push
fs
lahf
sub
jnp
and
ficompl
in
adc
jmp
out
xchg
loopne
fstps
sbb
mov
pop
dec
sub
inc
cmc
imul
mov
cmc
pop
hlt
incl
xor
sbb
adc
aas
jne
and
test
pop
add
xor
mov
xlat
mov
data16
scas
lcall
mov
xchg
mov
inc
sub
fcomip
lcall
mov
repnz
mov
and
sbb
mov
fstpt
clc
pop
xor
mov
ret
push
mov
and
mov
cmpsl
jl
or
push
es
icebp
es
call
xchg
xchg
pusha
add
push
enter
cltd
mov
pop
outsl
and
pushl
fwait
mov
and
or
pushf
std
jb
lfs
lcall
cmp
and
ds
xchg
loope
lods
into
xchg
xchg
lods
inc
pop
inc
dec
call
out
mov
lcall
inc
sti
loope
sub
pop
outsl
out
adc
sub
stc
mov
jmp
fistpl
ljmp
clc
mov
add
jno
lods
and
pop
mov
maskmovq
mull
scas
daa
pop
test
jmp
add
fs
cmpsl
jmp
adc
dec
adc
pop
shrb
bt
lcall
mov
sub
sbb
lcall
test
pop
cmp
jno
sbbl
mov
xchg
inc
aad
sarl
fnstcw
incl
cmpsl
lea
gs
jne
stc
inc
das
push
popf
push
push
lcall
in
into
dec
in
and
fldenv
mov
out
decl
mov
stc
test
das
mov
mov
inc
test
dec
push
inc
in
lock
pushl
inc
loop
xor
inc
sbb
outsb
jnp
repz
jno
inc
dec
incl
push
mov
icebp
mov
cmpsb
lret
popa
inc
cmp
enter
nop
arpl
loop
rolb
lcall
sarb
fists
cld
cmp
in
jmp
lcall
jg
sub
shr
pushf
adc
pop
xchg
sti
dec
cmpl
call
inc
shlb
cmp
jne
sbb
cs
adc
idivl
testb
adc
and
inc
push
xchg
inc
sub
test
call
pop
out
orl
mov
xchg
dec
pop
into
push
mov
out
and
sti
and
std
movsb
add
cmpsl
and
clc
sbb
ljmp
pop
movsb
lds
fnstsw
mov
mov
xor
test
and
fildll
push
movsb
test
xor
test
cs
mov
stc
pop
xor
jnp
mov
stos
mov
jo
cmp
mov
cmp
pop
std
ljmp
int3
je
iret
shrb
jg
fistpll
pusha
lcall
pushl
lcall
jecxz
and
stos
jo
jmp
imul
or
pop
pop
mov
insb
cmc
ret
dec
inc
mov
call
stos
adc
in
fldenv
call
jle
mov
mov
outsb
mov
push
sbb
enter
ja
push
insl
sti
ja
sbbb
jmp
cmp
mov
std
inc
cmp
xchg
mov
test
sbb
mov
sbb
pop
rcr
or
cmp
addr16
movsb
shlb
test
cmp
pop
leave
stos
dec
sbb
dec
loopne
sahf
mov
arpl
pop
add
sub
mov
pop
test
add
out
cmc
pushf
adc
xchg
imul
or
lds
mov
pushl
dec
mov
stos
ret
or
cmp
jns
gs
aas
rolb
or
test
jl
mov
mov
or
xlat
mov
lcall
jb
xor
enter
outsl
sbb
cmc
mov
inc
dec
xor
sbb
incl
into
nop
movsl
cmp
ja
and
sub
pop
xchg
mov
or
add
add
push
clc
shl
mov
jmp
adc
fimuls
imul
xlat
pushf
mov
in
les
ljmp
adc
sbb
push
fbstp
popf
xchg
or
push
inc
flds
in
sub
enter
cmp
sub
sbb
ljmp
fdivl
jmp
sahf
decl
movsl
addr16
into
mov
or
mov
scas
bound
incl
into
je
movsl
loopne
mov
inc
lcall
xchg
je
ja
test
push
test
es
sbb
sbb
decl
in
lods
imul
dec
in
int3
push
aad
pop
addr16
pushf
sahf
sahf
lods
mov
or
adc
pushl
hlt
in
lret
dec
cli
jge
sbb
ss
iret
stc
outsb
nop
ss
cld
jmp
in
es
fdivrp
mov
or
es
adc
push
cwtl
shll
call
xchg
out
fstpl
cmp
pop
sbb
inc
fs
sub
pop
sbb
inc
rol
fs
incl
mov
and
fiaddl
rcrl
and
inc
jno
cmc
pushf
jl
filds
test
push
hlt
outsl
clc
jmp
es
sub
and
xorl
cwtl
pop
sub
xchg
push
lods
push
inc
enter
minps
aaa
cmp
add
aam
xor
movsl
mov
iret
sub
ljmp
arpl
xor
adc
lret
xor
jmp
imul
cmp
mov
setl
push
mov
data16
mov
lret
xor
adc
fs
incl
jl
test
xchg
xchg
insb
scas
pop
pop
mov
stc
mov
dec
push
ja
add
fs
jmp
std
jl
loopne
andl
outsb
gs
divb
mov
les
ret
inc
idivl
inc
es
and
mov
cmp
fiadds
ljmp
cmpsb
imul
sti
bnd
mov
sub
incl
aaa
mov
jae
mov
pushfw
or
sub
dec
sub
jmp
pop
or
fdivl
sub
jbe
es
in
xor
icebp
mov
decl
divl
aaa
dec
jmp
or
cmp
push
inc
call
xchg
xchg
je
pusha
mov
inc
out
insb
stos
dec
sub
adc
imul
dec
dec
cltd
fisubl
ss
decl
push
mov
scas
jmp
dec
outsb
or
negb
cmc
sti
cmp
pop
lods
cmp
and
dec
repz
out
xchg
jb
in
daa
shlb
fdivs
jmp
clc
xchg
cmpl
repz
out
dec
xorb
add
pusha
or
sub
xchg
add
jle
mov
adc
lds
pop
mov
call
dec
sbb
test
jo
fisttpll
push
insl
fsubs
cmp
and
sti
ljmp
cli
cltd
push
bound
sarb
in
into
adc
cmp
jb
ud0
pushl
sbb
loop
mov
mov
js
and
mov
sar
push
and
out
ljmp
mov
jg
pushl
inc
stos
popf
add
fs
leave
sub
mov
call
ret
call
sahf
xor
sti
xor
adc
aam
cmp
inc
push
and
aaa
xor
pop
push
out
jns
or
push
pop
stc
mov
fnsave
lcall
adc
or
int
cwtl
sti
dec
add
sbbl
jb
lcall
leave
or
inc
or
cld
xchg
loop
cmp
xorb
leave
fldl
sbb
fistps
push
sbb
cmp
lds
ror
cmp
push
dec
scas
scas
je
xor
mov
icebp
divl
adc
xchg
lods
pop
es
in
mov
sbb
push
pop
icebp
jmp
outsl
and
pop
xor
mov
mov
xor
or
stos
cmp
mov
dec
repnz
test
into
sbb
outsl
ret
xchg
stos
in
movsl
jmp
aas
mov
pop
test
jle
push
xorb
push
mov
adc
js
ret
xor
or
xchg
mov
xor
sbb
out
or
outsl
es
lahf
imull
jmp
int3
imul
adc
mov
pop
push
sub
cmp
shlb
dec
mov
sub
incl
mov
cmpsb
jge
into
cmp
jl
or
mov
jne
push
pop
mov
icebp
outsb
push
jnp
loopne
out
cwtl
stc
je
jge
mov
lea
imul
adc
cli
jbe
adc
in
cs
dec
loop
xchg
shl
mov
mov
out
adc
std
xchg
and
mov
fsubrs
jns
and
add
jg
ja
mov
and
dec
jecxz
stos
mul
sub
add
lret
sbb
icebp
sub
in
inc
push
incb
jle
cli
sti
psllq
cltd
mov
ljmp
push
jmp
fsubrs
daa
sbb
cs
incl
fmuls
push
mov
dec
divl
fiaddl
insb
leave
clc
and
or
call
push
sti
test
lret
dec
pop
stos
mov
mull
cltd
incl
lret
pop
push
xchg
out
or
fwait
add
fmull
add
inc
in
pop
cmc
mov
ljmp
shrb
pop
or
mov
or
xchg
repz
shrl
add
popa
sar
incl
test
mov
mov
mov
xchg
mov
mov
pushl
push
or
fistpll
dec
xchg
pushf
bound
mov
xchg
cld
dec
adc
cs
out
ret
incl
hlt
mov
cmp
nop
mov
les
adc
imul
push
xor
nop
xlat
ds
subb
call
mov
mov
cmp
lahf
and
jmp
xchg
mov
outsb
xchg
push
pop
jg
xchg
clc
stc
daa
ret
pop
pop
js
scas
loop
shr
ret
fsubr
or
add
mov
inc
add
lcall
shll
add
imul
mov
call
mov
sahf
sbb
adc
mov
xor
sbb
push
mov
add
stos
add
subb
jg
fdivrl
cs
or
or
lods
enter
fbld
rorl
ljmp
movsl
sub
dec
std
div
scas
test
lock
call
enter
data16
push
cli
xor
cltd
jp
jmp
sub
mov
xor
push
jbe
enter
pop
js
dec
push
mov
pusha
iret
mov
cli
mov
mov
loopne
xchg
outsl
mov
imulb
jno
dec
and
xchg
dec
and
pushf
packuswb
xchg
cld
jmp
clc
inc
stos
arpl
lock
dec
ret
mov
pop
mov
push
sbb
jo
call
mov
inc
imul
inc
jl
stc
sub
mov
mov
xchg
arpl
adc
js
imul
pop
cmp
cmc
fcompl
sub
aad
insb
and
ja
adc
adc
push
pusha
add
mov
fsubs
loop
jge
and
lret
push
incl
test
sub
movsb
jg
xor
js
scas
addb
cmpl
ds
arpl
inc
out
sub
xor
mov
lods
and
mov
jmp
mov
mov
cltd
adc
stos
cmp
in
mov
mov
push
stos
nop
sub
push
insb
push
clc
dec
add
mov
ljmp
xchg
rclb
mov
cmpsl
aad
out
jg
hlt
push
sub
jnp
mov
inc
bound
mov
ljmp
mov
negb
mov
test
je
mov
inc
and
or
jmp
sub
push
jmp
shlb
dec
sbb
push
push
inc
dec
and
dec
lods
sub
repz
sub
sub
call
push
aaa
in
icebp
cwtl
lods
scas
in
aas
and
outsl
pop
jo
push
jg
push
outsl
into
add
pop
int
stc
loop
notb
mov
dec
das
adc
sahf
les
xor
lcall
movsb
bound
adc
mov
pop
fmulp
fprem1
mov
jge
sub
loop
xor
movd
pop
mov
jmp
mov
jmp
shll
xlat
inc
mov
push
idiv
test
sub
shlb
pop
hlt
imul
mov
inc
push
in
mov
clc
pop
dec
decl
icebp
xor
cmp
adc
insb
pop
add
movsb
jge
cltd
clc
stos
jg
push
gs
mov
outsl
js
push
inc
cmp
sahf
mov
cli
xchg
insl
xlat
insb
aas
mov
cld
sub
decl
fwait
push
loopne
xor
jecxz
sub
test
ja
ss
stc
shll
and
and
rcrl
fcos
mov
les
cmovge
or
pop
cmp
jbe
hlt
dec
and
stos
mov
lcall
js
pop
adc
cmpl
sub
xor
ficompl
inc
decl
xchg
mov
jg
imul
sbb
sub
call
mov
fcmovne
push
xchg
loop
lods
jae
data16
mov
push
cld
iret
jbe
xchg
sbb
lcall
adc
xor
mov
fidivrl
jg
hlt
loop
fs
incl
lods
lds
ljmp
mov
pop
dec
cmp
or
mov
stc
or
roll
add
jmp
jl
or
add
dec
xchg
loop
pop
sub
jle
stc
fstl
mov
jb
xor
aam
incl
and
and
mov
jo
aad
addr16
mov
jbe
mov
test
cs
inc
push
and
xchg
fsubp
aam
rcrl
out
les
jp
clc
sbb
inc
ffree
pop
stos
ret
and
stos
xchg
les
add
icebp
pushl
iret
dec
sti
xchg
push
lods
or
mov
test
pop
lret
addr16
je
jg
dec
fs
incl
xor
mov
mov
fsubrp
sub
lods
xchg
dec
fs
pushl
mov
adc
loopne
jno
or
adc
and
outsb
leave
ret
insb
cmp
cmp
ljmp
inc
insb
jbe
aad
out
xor
sbb
lcall
xor
mov
sahf
iret
sbb
and
sub
pushl
hlt
inc
clc
fwait
mov
adc
pop
andl
mov
imul
add
mov
mov
call
std
jmp
jp
pop
push
sbb
and
addl
shll
sbb
decl
aam
aam
inc
dec
push
icebp
push
outsb
jp
and
cltd
sbb
dec
pop
ljmp
xchg
pop
inc
mov
outsb
xor
in
push
mov
lock
jnp
into
jae
sub
push
lret
dec
push
inc
loop
inc
xor
jmp
call
sbb
test
pop
sub
repnz
cmpsl
jnp
mov
daa
dec
stos
out
pop
push
in
sbb
pop
jo
jl
out
jle
cli
ret
cwtl
pushl
cmc
fsubs
lods
cmpsl
mov
mov
cmpb
aas
jmp
dec
lods
pop
mov
jg
sub
xor
pop
mov
pop
push
hlt
mov
stos
incl
cld
mov
out
stos
and
imul
decl
or
jg
lret
js
mov
addb
jb
push
adc
test
div
jb
leave
rcr
dec
out
xchg
dec
or
inc
sub
push
add
addr16
ljmp
stc
xor
fidivs
jae
push
jl
pop
lahf
shlb
mov
sbb
int3
dec
lock
incl
push
int3
dec
or
push
xchg
les
in
stc
dec
fisubrl
push
xchg
ret
jg
mov
out
xchg
stos
lcall
push
inc
jge
decl
out
pop
xor
sub
movsl
idivl
jb
iret
xchg
mov
repz
and
add
mov
adc
cmpsb
push
shll
jae
sbb
mov
lock
sbb
pop
neg
call
dec
pop
jno
pop
andb
cmpsl
into
insl
ds
sbb
pop
mov
jg
stos
dec
std
jmp
xchg
imul
mov
fcomp
les
push
pop
stc
mov
pushf
movb
and
cmp
ss
ljmp
lods
or
enter
je
stc
incb
mov
push
rol
mov
lea
mov
rcrl
js
iret
pop
push
jg
push
push
je
jecxz
ss
pushl
adc
aaa
sub
movsl
pop
loopne
ljmp
pop
movsl
lock
fbstp
paddw
out
dec
cmp
loopne
cltd
jmp
cli
subb
jb
xchg
hlt
dec
sub
mov
pop
mov
inc
incl
in
mov
popa
push
dec
in
xor
cmpsl
push
jl
dec
dec
lods
call
adc
mov
loop
movsl
enter
inc
out
or
std
adc
imul
push
in
mov
inc
add
adc
aas
out
into
sub
lcall
mov
fcom
dec
ffree
add
mov
mov
cmpb
and
fwait
pushl
subl
lahf
add
push
xchg
scas
mov
repz
hlt
decl
aam
mov
test
jle
fbld
int3
outsl
sub
loope
inc
adc
fstl
fnstenv
incb
cmp
incl
shrl
dec
popa
fwait
mov
xchg
outsl
add
and
bound
jge
shlb
adc
incl
stos
mov
out
and
rep
aad
xor
or
fimull
mov
pop
pushl
or
pop
int3
cld
cmp
cmp
test
mov
or
dec
pushf
mov
pop
in
cltd
mov
jecxz
fisttpl
xchg
sbb
das
sar
push
xchg
add
push
mov
cld
xlat
sbb
shrb
ret
pushl
imul
sub
repz
mov
inc
jb
mov
jmp
xchg
popa
cmpsl
imull
sbb
cmp
dec
stos
sub
mov
jmp
pop
loopne
stos
cs
shr
in
ret
sti
and
out
lret
pop
dec
sti
cmp
cmp
adc
mov
push
hlt
cmp
cmp
imul
arpl
cwtl
push
push
mov
scas
adc
push
add
sub
pop
lock
aas
dec
aad
add
call
enter
jmp
pop
neg
inc
pop
scas
sub
or
mov
aad
sbb
sar
shr
cwtl
cli
aad
fwait
mov
inc
xchg
push
mov
lods
lea
push
xchg
shrl
ljmp
cs
or
dec
add
arpl
in
or
lcall
mov
idivl
add
icebp
mov
pop
add
test
inc
cmp
cwtl
imul
cmp
mov
divl
dec
mov
fnstsw
cmpsl
aad
icebp
mov
push
mov
inc
loopne
and
loopne
es
cmp
fs
mov
fcmovnbe
adc
push
dec
cmp
test
add
scas
addb
std
sub
xlat
lods
jmp
mov
fcomip
fcoml
pop
fdiv
ss
aas
jg
repz
mov
jecxz
in
xchg
or
and
add
divl
lds
pop
push
fnstcw
sub
lret
scas
lcall
clc
je
incl
adc
jge
mov
pop
gs
loopne
hlt
xchg
stos
shll
sbbb
loopne
leave
icebp
lret
popa
mov
clc
out
cs
pushf
or
push
mov
mov
das
cmpsb
lods
push
dec
and
mov
jg
push
or
stos
iret
fists
in
cmpsl
sbb
in
cwtl
pop
fs
push
rclb
outsb
mov
imul
lds
jbe
dec
int
push
sbb
mov
inc
mov
sub
cmp
mov
or
jmp
sub
push
addr16
call
ret
les
inc
inc
push
mov
sub
sbb
cmpl
data16
mov
xor
call
nop
ret
imul
xchg
daa
sub
mov
jnp
mov
in
hlt
rorl
inc
out
jb
test
sub
ljmp
mov
sbb
gs
fdivr
lcall
movsb
ja
out
xorb
aas
or
popa
and
inc
jnp
add
jmp
mov
and
cwtl
xchg
cld
xor
in
xlat
cmp
loope
mov
test
cmp
push
imul
sbb
xor
mov
xchg
jo
out
mov
push
mov
jl
add
dec
mov
repz
rcrl
push
mov
aad
inc
fwait
xchg
push
and
mov
mov
mov
incl
int
xorb
add
xchg
jne
lds
sbb
lcall
jg
ljmp
mov
push
mov
adc
mov
call
or
jno
add
or
jne
out
aam
xor
xchg
sub
scas
mov
push
cmp
rorb
pop
lock
cmp
or
adc
and
push
incl
push
and
dec
int3
insb
sarb
stc
iret
outsb
cmp
jl
jae,pn
cmp
incl
leave
pop
nop
movl
inc
xchg
add
adc
cmc
jae
dec
and
mov
jb
out
push
jecxz
fmuls
insl
ljmp
ss
imull
cmp
lods
into
jp
mov
xchg
aaa
notb
divb
mov
inc
cmpsb
out
scas
les
mov
dec
or
popa
nop
cmpsl
push
or
dec
jbe
and
cmp
push
mov
cmp
test
jbe
or
filds
mov
out
or
lods
ljmp
ret
decl
fs
adc
jno
add
push
roll
pushl
rorb
push
test
sahf
in
sub
push
ret
jmp
push
jno
cmpsb
pop
fidivrl
jno
dec
int3
mov
adc
dec
xor
std
pop
xchg
ret
jne
jno
push
ds
incb
push
jl
cmp
mov
es
xchg
pop
jae
cmp
mov
push
lret
pop
pushl
enter
js
iret
dec
rolb
inc
xor
xlat
loopne
outsb
pop
decl
hlt
push
enter
or
fmull
push
rorb
mov
movsb
mov
aad
push
pushl
cld
xchg
dec
inc
scas
lea
data16
loop
or
ds
push
or
and
lahf
add
jg
adc
sub
sub
mov
jo
lea
in
xor
inc
dec
pop
adc
push
push
xor
lods
dec
pop
jne
popa
add
sbb
add
cs
dec
cmpsl
ret
push
sarl
jmp
xchg
sti
push
adc
jg
mov
outsl
sub
mov
ss
mov
push
lret
ficoms
inc
cmpsb
xor
ss
in
fwait
jmp
sbb
xchg
or
clc
dec
out
popl
mov
popf
mov
les
jns
aad
js
call
add
push
hlt
inc
leave
fsub
cmp
leave
adc
push
scas
adc
jl
cli
xchg
lcall
enter
mov
aaa
cltd
sarl
mov
movsl
xlat
cmp
adc
test
ficompl
or
mov
test
add
loope
test
mov
ret
aaa
dec
dec
pusha
out
sub
stc
lcall
adc
or
pushl
daa
popf
jle
call
mov
dec
int3
std
push
out
lahf
xor
or
ret
call
movb
in
sub
sbb
push
lret
sbb
ficoms
test
fwait
enter
decl
test
data16
or
test
pusha
hlt
cmp
mov
dec
sbb
jbe
lcall
cld
and
push
test
iret
testl
pusha
cmp
jle
nop
lcall
das
jp
and
mov
test
rorl
pop
cmp
sahf
fwait
mov
testl
mov
push
or
dec
dec
frstor
mov
dec
jle
inc
les
fstl
cmp
add
lock
mov
loope
pushf
xchg
push
jne
mov
push
add
call
imulb
lcall
cmpl
into
mov
call
ds
sbb
insb
cmpsl
push
ret
lods
cmc
cmp
lods
jo
ror
mov
mov
lcall
mov
mov
loop
bndstx
sub
scas
je
xchg
in
mov
xor
loope
das
insl
and
insb
test
lods
xor
nop
rcrl
repnz
rcrl
fs
inc
addr16
cli
div
push
aam
repnz
lock
sub
insl
mov
dec
xor
fildll
lcall
divb
shrl
test
add
ljmp
es
aaa
xor
and
repz
fcmovnb
adc
pop
sbb
adc
out
mov
and
int
dec
pop
mov
incl
aam
fwait
fs
or
push
add
test
js
push
jmp
ss
push
inc
and
pop
loopne
imull
loope
ljmp
pusha
int3
jg
push
mov
lock
cmp
xchg
cmp
in
out
out
add
mov
movsl
cmp
fcoms
xor
sahf
xchg
movsl
repz
clc
xchg
hlt
xor
pushl
xlat
sahf
cmp
popf
xor
push
sub
enter
sbb
inc
jbe
pushl
and
pop
std
push
test
push
mov
inc
icebp
lea
in
pop
mov
lcall
and
fbld
es
movswl
jg
rorb
je
or
mov
push
ljmp
aad
sub
add
test
jae
jg
cmpsl
sub
decl
pop
sub
xlat
adc
mov
jl
xchg
inc
mov
int
xor
fbld
xchg
out
lret
push
inc
lds
sbb
dec
xchg
inc
sti
sbb
jmp
in
jno
rcr
push
daa
mov
call
loope
flds
pop
sub
mov
ljmp
inc
mov
dec
sti
mov
xchg
ja
sbb
sti
js
pop
leave
mov
cmc
lcall
push
nop
lods
or
pop
cmp
mov
jp
insl
sub
loopne
sbb
pushl
adc
aam
sahf
mov
dec
sub
pop
sti
iret
sarl
out
sub
incl
fwait
stos
cs
popf
jecxz
push
mov
add
scas
ljmp
pusha
lods
test
add
decl
pop
cld
fwait
stos
xor
insl
loope
mov
cmp
mov
jg
or
pop
sub
loope
sbbb
aaa
add
stos
dec
and
push
sbb
jmp
mov
jle
xor
in
outsb
dec
outsl
fs
ljmp
or
xor
cld
cltd
adc
out
test
fs
lcall
dec
fdivrl
outsl
jne
bound
push
jbe
add
and
cmc
push
dec
jb
push
call
or
push
dec
cli
lea
outsb
orl
enter
push
jmp
add
outsl
movsl
pop
cmp
cmp
je
cmp
addb
out
cmpb
sub
stos
dec
das
and
fistps
xchg
movl
xchg
jle
js
mov
jmp
dec
testb
in
stc
inc
je
aam
mov
pusha
shrb
cwtl
out
ljmp
rorl
jl
pushl
cli
push
dec
movsb
push
push
aam
mov
popf
fsts
int
inc
mov
decl
std
je
cmp
mov
mov
inc
insl
lret
xor
mov
inc
jb
pushf
cmp
xchg
pusha
xor
lods
sub
pop
std
incl
test
jns
push
dec
mov
push
mov
loop
inc
icebp
jnp
jecxz
xchg
sub
aad
pushl
cmpsl
dec
fistl
jmp
mov
pop
insb
jle
insl
pop
xor
or
xchg
pushf
pop
jle
decl
enter
dec
pop
mov
insl
pop
and
fwait
popf
movsl
jge
cmpsb
sbb
mov
rorb
lods
dec
ja
in
and
mov
popa
add
stos
inc
jecxz
cli
inc
mov
mov
fsubrs
xor
inc
xor
jbe
ja
cmc
cmp
cs
scas
mov
test
jle
outsl
push
cmp
sub
jno
repz
ljmp
sub
sub
cltd
xchg
jecxz
sti
clc
push
ret
jmp
or
je
and
jmp
pop
in
xchg
xchg
ret
out
mov
cltd
mov
addr16
sti
pcmpeqb
mov
adc
fildll
sbb
lahf
stc
scas
int3
push
xchg
negb
push
and
push
push
addl
xor
sub
mov
jg
xchg
mov
xor
mov
xor
mov
and
pop
xchg
xchg
cli
sarb
mov
lcall
pop
xlat
pop
xchg
pop
and
roll
xchg
and
mov
mov
cltd
lcall
iret
mov
mov
lahf
in
xor
cld
insl
stc
inc
dec
out
mov
loop
jmp
dec
lret
add
dec
inc
aad
pop
imul
and
mov
mov
sarl
and
bnd
lahf
les
arpl
adc
je
cmp
xchg
pushl
gs
and
test
xor
test
adc
test
jecxz
hlt
incl
adc
jo
and
xorb
sub
push
mov
inc
jg
stos
fistpl
sbb
rorb
mov
lcall
outsb
mov
dec
xor
shr
lcall
lock
call
and
stos
sbb
cmp
fnstsw
push
ljmp
das
pop
or
sbb
mov
mov
outsl
mov
cmp
lcall
pop
mov
jae
push
cwtl
xor
sbb
es
jmp
cli
xor
push
int
and
jg
jp
dec
paddsb
shlb
pop
or
fnstsw
xor
add
scas
insb
mov
mov
insl
lods
sti
adc
ss
mov
xor
xchg
andl
stc
mov
adc
pop
clc
jmp
dec
int
insb
xchg
f2xm1
xor
inc
jecxz
mov
xor
adc
mov
adc
es
outsb
repz
stos
int
push
push
into
mov
add
cmp
xlat
mov
jb
sar
andl
dec
cmp
out
jb
incl
inc
lds
test
add
cmpsl
mov
loop
out
dec
addl
xor
andb
mov
cmp
mov
pushf
mov
push
fisubrs
xchg
cmp
imul
pushl
nop
out
sbb
xor
cmp
mov
pop
push
push
dec
int
jmp
dec
xor
les
pop
sub
das
fidivrs
fstpt
jmp
or
fdivl
incl
inc
sub
dec
add
jle
testb
cmp
jnp
or
ljmp
sub
sbb
xor
fists
int3
mov
pop
sbb
mov
push
nop
stc
fs
mov
lahf
iret
int
mov
decl
xchg
gs
or
jl
imul
xor
dec
es
call
cmp
rcll
fnsave
jge
cs
hlt
andb
lds
pop
arpl
roll
cwtl
jnp,pt
outsb
dec
pop
outsl
lods
pushf
mov
jmp
push
ret
pop
je
adc
push
pop
pop
or
test
lock
daa
call
lods
test
adc
add
adc
or
fwait
loope
rcrb
cs
insb
call
sub
jbe
lea
js
arpl
faddl
stos
lock
scas
jg
cwtl
xorl
stos
leave
cmp
xlat
loop
dec
cmp
jno
iret
push
push
xor
push
xchg
sbb
push
xchg
mov
lcall
js
push
lds
out
push
sub
out
fidivl
inc
cmp
cmp
mov
jnp
pcmpgtb
jl,pt
pushf
mov
cli
jbe
sbb
pop
push
mov
cmpsl
ror
out
mov
pushf
sbb
or
xchg
pop
push
std
lcall
and
mov
inc
lahf
popa
push
das
minps
lods
loopne
pop
adc
stc
ret
ds
mov
imul
jns
repz
mov
fsub
mov
xchg
mov
cmp
test
dec
xor
mov
mov
jb
stos
fstpl
out
clc
insl
in
push
sub
incl
stos
popf
pop
push
push
clc
mov
clc
test
inc
out
nop
lods
pop
orl
mov
aam
cmc
pop
xchg
cli
dec
or
mov
and
pusha
lcall
ljmp
xchg
out
test
dec
pop
cli
insl
fwait
arpl
insb
lods
or
jmp
or
push
push
movsb
jno
sub
adc
inc
movsl
cmp
mov
jp
push
jns
jge
mov
sbb
sub
cmp
cmpb
lods
lods
or
and
lcall
mov
pop
ret
cmp
cli
pop
in
pushf
popa
and
cmp
imul
call
imull
cmp
mov
pop
pop
xor
or
inc
aaa
pop
in
jmp
test
cwtl
jne
adc
jg
rorb
ror
movl
decl
dec
jmp
pushfw
addb
mov
add
mov
mov
pop
rcl
filds
clc
insb
call
mov
mov
shl
ds
insl
cltd
adc
fdivrl
dec
ljmp
clc
push
mov
out
les
cmp
cmp
mov
mov
push
call
out
int3
scas
push
test
loopne
fwait
push
sti
mov
or
push
and
cmpb
xchg
fwait
out
pop
cmp
test
add
fldpi
call
or
outsl
sub
into
cli
xor
icebp
inc
dec
xchg
scas
shl
sub
mov
or
pushl
daa
sarb
jge
les
aad
sar
incb
xor
int
pop
xorl
cmp
adc
inc
call
cli
inc
pusha
lahf
mov
sub
dec
pop
imul
cmp
or
aad
int3
inc
mulb
mov
lret
scas
repz
lea
pusha
dec
cli
cmp
clc
cmp
iret
in
rol
cli
mov
aaa
cwtl
or
lret
xor
sub
enter
incl
xor
movsl
push
popf
loop
inc
cmc
mov
push
xchg
iret
mov
adc
or
pop
cld
mov
pop
ja
cmpsl
xor
mov
sbb
inc
and
pop
push
pop
xlat
adc
mov
ljmp
mov
and
fwait
mov
lret
dec
or
flds
or
push
mov
addl
dec
sbb
jno
dec
fbld
push
dec
iret
inc
mov
cld
adc
decl
shlb
scas
aaa
sahf
cmpsb
xchg
pop
sub
iret
outsb
fstpt
repnz
lods
lcall
enter
mov
lock
mov
js
mov
bound
aam
push
adc
cmc
adc
push
pop
arpl
mov
lcall
pop
in
lock
shlb
je
cmp
imul
fnstcw
test
call
push
mov
in
mov
dec
adc
adc
dec
stos
in
movsl
sbbb
inc
push
in
ret
std
dec
faddl
popa
and
loopne
xor
addr16
push
popa
add
xlat
xchg
push
lcall
dec
rcl
out
pop
and
es
xorb
and
insl
loopne
lcall
jl
iret
jle
mov
adc
in
icebp
decl
jne
out
xchg
pop
sbb
mov
sub
jbe
in
jns
cmpl
outsl
push
in
int3
add
outsl
outsl
loopne
in
pop
mov
fsubr
pop
jl
scas
add
add
clc
or
xchg
lea
mov
rcl
dec
lret
cli
sbb
aaa
sar
cltd
jns
idivb
push
or
scas
jp
cs
clc
call
jg
stos
push
out
mov
inc
xor
pop
cmp
jmp
xor
mov
fnstsw
cmp
mov
mov
or
popa
enter
ljmp
fmul
mov
pushw
cmp
sbb
sub
pop
and
add
decl
xchg
pop
add
cs
cmp
dec
clc
dec
loop
insl
ljmp
jmp
add
in
mov
aaa
mov
stos
mov
sub
inc
mov
cmpb
sar
incl
mov
push
sbb
inc
cltd
lahf
or
mov
mov
pop
push
sub
pop
call
xor
outsl
add
jge
xchg
pusha
clc
or
cwtl
and
mov
or
cli
fcomip
jmp
imul
and
out
jne
or
popf
aaa
mov
into
add
xchg
adc
jno
push
mov
xchg
pop
lcall
aaa
and
and
popf
xchg
jne
jmp
mov
lahf
jb
pushl
adc
xor
and
jmp
imul
mov
cmpb
decl
shrl
insb
adc
mov
mov
sub
int3
push
jnp
mov
jg
sub
or
push
stos
xor
push
popf
stc
ret
mov
dec
cmp
push
and
cmp
xlat
dec
xchg
pop
xor
mov
gs
sub
aad
scas
or
insl
mov
pop
dec
std
ds
rolb
aad
movsl
mov
je
inc
sbb
dec
ss
shll
sarl
jg
or
jge
jmp
mov
enter
pop
cmc
pop
bound
inc
xor
sbb
adc
push
pop
addr16
cmp
sub
fldt
lods
push
in
lahf
mov
or
push
cmp
inc
out
or
add
push
inc
xchg
in
into
mov
jmp
sub
xchg
push
and
jbe
pop
jecxz
adc
pop
adc
loop
and
aas
fwait
push
push
adc
pushl
jne
dec
out
pop
dec
dec
data16
sbb
and
mov
scas
adc
outsl
dec
outsl
out
pop
push
push
or
add
adc
sub
cli
fisttps
iret
iret
call
mov
incl
outsb
sahf
inc
mov
sbb
mov
dec
fs
incl
insb
add
sbb
lods
sbb
lea
pop
xchg
test
jno
fmull
fistl
fiadds
lock
lcall
lds
push
adc
dec
stc
popf
and
xchg
fs
sub
mov
call
xchg
push
aaa
sbb
xchg
push
sahf
jl
shll
inc
setnp
incl
inc
popa
lret
xchg
movsl
stc
xlat
mov
rcr
das
or
in
stos
insb
arpl
xchg
or
mov
leave
fisttpl
jg
shlb
sbb
shl
outsb
addr16
lock
cmp
jae
add
iret
push
pop
jle
sbb
jmp
cmpsb
negb
ljmp
jmp
pop
xor
xor
add
cld
or
push
test
mov
pop
mov
ficoml
mov
mov
cmpsl
shrb
mov
out
sbb
clc
incl
or
ret
sbb
lods
pushf
fnstsw
out
repnz
incl
pop
sbb
test
mov
jp
pop
adc
sbb
push
lods
sub
insb
mov
js
lcall
in
sbb
lds
daa
fwait
repnz
inc
mov
mov
jecxz
ud0
decl
dec
jo
or
popa
jae
test
cli
mov
pop
mulb
call
mov
pusha
mov
add
insb
or
pop
cmp
scas
inc
or
ljmp
shll
flds
mov
xor
out
bound
lods
sbb
stos
cltd
lret
incl
lods
arpl
ficomps
inc
adc
out
and
sbb
mov
adc
mov
incl
fisttpll
push
and
gs
cs
or
cmp
xchg
mov
sbb
inc
rol
fprem1
dec
insb
mov
hlt
cwtl
add
lret
lods
or
lcall
push
out
es
int3
mov
sbb
adc
stos
clc
icebp
shrb
call
xchg
sbb
clc
loopne
lods
cwtl
jno
jecxz
xorb
out
outsb
arpl
pop
out
add
add
add
int
dec
stos
in
xchg
dec
arpl
popa
cld
fistpl
jo
test
push
sbb
into
jnp
push
sbb
push
inc
jo
cmp
jmp
push
cmpsl
rcrb
into
adc
sub
fbld
mov
lahf
cmp
lahf
sahf
idivl
cmp
cmp
ljmp
push
rorb
pop
in
rcrb
mov
inc
pusha
push
scas
xor
jmp
mov
xchg
jnp
jns
in
popf
out
mov
cmp
fdivrs
popa
loop
mov
cmp
ljmp
sahf
push
dec
insb
in
push
and
popf
mov
sub
roll
mov
mov
int
daa
insb
inc
jle
fs
faddp
push
mov
pop
movsl
aam
addr16
ljmp
lea
sbb
sti
fidivs
mov
into
jmp
movsb
sub
bswap
repz
inc
dec
loope
sbb
mov
push
push
clc
rcl
imul
aaa
push
mov
mov
jo
push
mov
mov
fsubrs
mov
adc
inc
mov
and
sbb
lods
int
cmp
xor
incl
sbb
stos
movsb
out
xchg
inc
stos
ss
loop
dec
inc
push
adc
insb
xchg
adc
call
add
cmp
adc
test
add
sbb
cmc
incl
scas
push
mov
mov
lcall
mov
sub
out
jns
mov
notb
int
lcall
pop
sbb
lcall
inc
xor
cmp
pop
fs
fnstenv
cmpsb
cmp
cmp
dec
push
rorl
pop
xor
cmp
lock
or
inc
je
add
push
pop
test
lcall
aas
imul
movsb
pop
loopne
fbld
daa
cmc
cmp
lcall
incl
dec
mov
shll
out
sub
enter
cwtl
lea
mov
and
inc
push
lods
mov
or
push
les
icebp
adc
ljmp
cmp
pushl
imul
jns
mov
and
jbe
cmp
das
or
in
bound
cli
and
lret
xor
data16
adc
add
add
sbb
pushl
cmp
arpl
gs
outsl
imul
je
push
push
jb
fistpll
imul
je
outsb
addr16
jns
gs
push
dec
imul
out
push
insb
outsl
arpl
fs
outsl
insl
jo
pop
inc
js
push
jg
imul
jns
inc
insl
cmpsl
push
insb
jae
push
popa
insb
jne
sub
insb
gs
sbb
ret
mov
fistpll
jne
je
jo
dec
bound
arpl
dec
popa
xchg
jb
add
addr16
jae
push
add
pop
and
cmp
inc
fs
jae
dec
fnstcw
dec
imul
imul
out
inc
je
pop
inc
insb
inc
js
or
mov
push
push
imul
sub
movsl
in
cmp
jbe
loope
outsl
ja
jge
xor
outsb
jae
aam
and
mov
into
scas
jb
pop
mov
add
pop
mov
pop
and
mov
jg
mov
adc
mov
or
sbb
push
mov
roll
lods
sbb
jle
je
jo
push
adc
mov
xor
popa
and
jp
js
dec
outsb
imul
jb
out
insl
mov
push
jae
xchg
and
add
lods
add
push
sahf
add
mov
addr16
jb
push
inc
lret
call
push
xor
imul
aam
pop
cwtl
test
shlb
xor
jl
inc
jae
bound
push
push
mov
popa
ja
and
push
pop
add
or
mov
and
outsl
add
xor
mov
add
into
fbld
jnp
pusha
pop
adc
adc
pop
gs
xchg
test
sub
add
adc
inc
and
in
push
das
stos
and
add
push
adc
sbbl
add
xor
ret
adc
xchg
popa
mov
roll
adc
pop
push
mov
outsl
imul
mov
or
pop
and
inc
test
add
mov
shrl
mov
adcb
adc
dec
arpl
mov
std
outsl
cmp
mov
idivl
addb
leave
bound
or
rolb
dec
add
and
test
in
or
adc
scas
add
movsl
call
and
jmp
add
sub
addb
mov
mov
mov
sbb
ret
stos
or
add
mov
sbb
adc
push
add
or
and
mov
pop
sub
stos
bound
add
adc
or
mov
fsubl
adc
push
add
stos
xchg
mov
xorl
adc
mov
sub
pop
pop
mov
mov
mov
addb
or
inc
insb
popa
pop
rorb
in
outsb
inc
insb
insb
xor
outsl
push
shll
add
sbb
sbb
aaa
or
mov
push
and
lods
loop
mov
inc
addb
sbb
aaa
nop
and
and
inc
je
inc
testl
movsl
bound
cmc
or
imul
mov
fistpl
push
movsl
test
pop
or
mov
sbb
mov
sti
sub
adcb
test
add
push
inc
jne
adc
and
pop
inc
lds
push
add
add
mov
sub
adc
ret
lods
shrl
push
cltd
and
sub
lds
mov
inc
sbb
or
cmpb
inc
cwtl
xor
mov
xor
mov
xorb
add
inc
mov
mov
inc
jne
das
sbbl
mov
or
popa
inc
pop
pop
shll
popa
push
cmp
or
push
jne
sti
add
and
mov
mov
sub
jns
or
push
fwait
les
loop
pop
push
xor
shll
inc
pop
out
mov
xchg
dec
mov
and
sub
mov
add
mov
adc
mov
push
sbb
sbb
stos
or
mov
and
sub
add
sbb
dec
inc
stos
cwtl
add
sub
mov
adc
std
in
add
adc
mov
mov
or
and
test
adc
mov
mov
stos
nop
mov
xor
push
xchg
sbb
mov
and
sub
cwtl
orl
rclb
jmp
dec
xchg
orb
pop
push
xchg
add
xchg
add
outsb
popa
inc
xchg
test
roll
mov
inc
or
and
fcmovnbe
mov
sbb
fwait
je
and
xchg
inc
sub
inc
mov
sub
push
xor
mov
pop
sub
cmp
rcll
mov
inc
std
cwtl
mov
fldt
pop
add
movsb
roll
shrb
popa
mov
inc
and
push
push
mov
cmp
xchg
movb
dec
mov
dec
and
aam
and
mov
inc
jnp
mov
and
insl
add
or
inc
xor
imul
mov
lods
adc
xor
adc
jo
or
mov
test
push
add
orb
sbb
xor
adcl
push
mov
mov
fmull
add
ret
ret
sub
cmp
in
adc
add
shll
cli
jmp
mov
adc
stos
dec
insl
jecxz
inc
imul
xor
add
fldcw
or
push
pop
cmp
or
lahf
adc
lret
mov
or
inc
push
les
lret
push
test
sub
inc
imul
and
xor
pusha
mov
add
xor
outsl
add
sbb
sub
int3
daa
lods
add
and
adc
add
adcl
aam
add
push
rcl
mov
adc
lea
push
add
mov
scas
push
movsb
push
sbb
rcrb
adcb
insb
dec
test
mov
push
dec
test
sbb
or
aaa
dec
and
xor
sbb
rorb
add
mov
mov
dec
add
pop
xchg
or
mov
bound
out
push
sbb
stos
daa
rolb
sub
and
roll
push
push
mov
shrb
xchg
inc
add
add
pop
push
mov
and
and
pop
loopne
adc
pop
outsl
mov
push
inc
push
dec
add
add
stc
cmp
add
add
xor
push
imul
inc
add
add
add
testb
rolb
add
outsb
insl
insl
add
lea
and
xchg
outsb
rorb
nop
push
mov
sarb
push
mov
lods
pusha
mov
dec
and
xchg
and
rolb
mov
outsb
fs
je
lock
push
nop
add
pusha
mov
mov
enter
or
fidivl
dec
dec
ss
dec
repz
sarb
cmpsl
mov
cwtl
mov
dec
pop
das
add
inc
gs
inc
add
push
sti
es
dec
cmp
jb
and
jns
mov
inc
dec
ds
lock
aaa
fwait
das
inc
add
add
add
jge
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
adcb
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
ret
pop
add
add
add
add
add
add
add
add
add
mov
ret
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
xor
inc
add
add
add
add
add
add
add
add
add
add
or
add
cmp
inc
add
add
add
add
add
add
add
add
add
add
xor
add
inc
movb
add
add
add
add
add
add
add
add
add
pop
add
add
inc
add
add
add
add
add
add
add
add
add
add
addb
add
inc
add
add
add
add
add
add
add
add
add
add
test
add
pop
leave
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
pusha
lret
pop
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
and
inc
add
add
add
add
add
add
add
inc
add
pop
repz
or
mov
mov
rcrl
inc
jne
push
mov
fs
stc
sbb
inc
jns
pop
push
cmp
in
pop
sub
fdivrl
mov
lret
push
iret
push
mov
out
dec
adc
pop
mov
add
or
inc
jno
xchg
add
jb
mov
repz
fcmovnbe
mov
rcll
add
sbbb
push
repnz
rorb
out
inc
xor
sarb
daa
adcb
push
jmp
inc
pop
mov
xor
push
xchg
xchg
sbb
sub
mov
call
push
xchg
imul
ret
lret
sub
sbb
lahf
push
inc
cmp
outsl
in
in
mov
js
jge
xor
ja
jmp
pop
scas
cmpsl
test
in
adc
cwtl
lcall
adc
popf
xor
fwait
mov
sti
xchg
add
pop
bound
sub
sbb
int
cmpsb
aaa
imul
dec
push
dec
into
mov
lret
xchg
imul
out
lret
sbb
loop
shr
cmpsl
and
lret
xchg
push
fldl
mov
jno
cmp
fists
pop
lcall
adc
sub
into
pop
lahf
dec
imul
test
sub
push
mov
into
fldl
dec
sub
adc
xchg
dec
les
and
imulb
clc
movsb
into
adc
je
ja
inc
std
lea
xchg
popw
outsb
push
sub
jl
sbbl
push
sbb
out
mov
push
lret
imul
bound
cmp
mov
jl
inc
into
mov
mov
sbbb
push
icebp
enter
stos
dec
ffreep
mov
int3
adc
mov
pop
or
and
or
int3
pop
fistl
add
dec
lret
in
xchg
popf
xchg
das
sbb
inc
lock
arpl
out
dec
bound
aas
jge
jmp
subb
shll
mov
dec
and
les
pop
inc
push
and
and
pop
bnd
ret
mov
daa
mov
and
jae
aad
mov
dec
in
loopne
mov
imul
mov
test
daa
std
jge
insl
repz
ret
stc
loop
out
and
jmp
repz
into
loopw
sti
add
jae
mov
fwait
push
push
popf
cmp
or
popa
stos
sbb
outsl
lcall
ror
mov
inc
mov
mov
xchg
push
stc
mov
dec
mull
movsl
xor
ljmpw
sub
add
pushf
jne
add
inc
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jne
add
jbe
add
add
add
jbe
add
add
add
jbe
add
add
add
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
ja
outsb
jae
popa
jb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
add
add
jb
push
inc
popa
jb
push
xor
imul
