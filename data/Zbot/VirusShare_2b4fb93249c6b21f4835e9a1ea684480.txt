push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
xor
mov
pop
pop
pusha
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
xlat
inc
clc
sbb
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
cmpb
je
add
lea
inc
movzbl
sbb
ja
mov
cmp
jae
nop
mov
cmp
ja
lea
jle
popf
push
pushl
decl
jmp
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
call
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
call
add
mov
sub
sub
mov
pop
mov
mov
lea
mov
push
xorl
pop
sub
or
xor
add
test
je
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
add
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
aam
add
xor
add
xor
add
add
stos
xor
add
xor
add
xor
add
xor
add
add
or
add
lcall
add
add
or
add
sub
add
mov
add
jbe
add
sbb
add
call
xor
add
add
add
add
mov
xor
add
add
jb
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
add
add
add
add
push
add
add
xor
add
xor
add
xor
add
add
cld
xor
add
add
mov
add
add
add
add
add
nop
xor
add
add
add
add
jl
add
movsb
xor
add
xor
add
xor
add
xor
add
add
stos
xor
add
xor
add
xor
add
xor
add
add
or
add
lcall
add
add
or
add
sub
add
mov
add
jbe
add
sbb
add
call
xor
add
add
add
add
mov
xor
add
add
jb
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
xor
add
xor
add
add
add
add
add
push
add
add
add
insb
jae
gs
popa
insb
jne
add
inc
imul
jne
arpl
add
inc
gs
je
imul
inc
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
add
popa
jo
imul
push
gs
je
jbe
outsb
je
add
add
push
popa
insb
imul
addr16
add
je
imul
bound
gs
add
xchg
add
je
imul
je
add
add
add
imul
jb
je
arpl
dec
add
je
jb
arpl
jae
gs
jo
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
inc
popa
fs
jb
je
push
je
add
add
je
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
loop
inc
gs
js
je
outsl
fs
push
add
add
gs
outsl
jbe
inc
imul
jns
add
addb
jb
popa
je
inc
imul
jns
add
pop
add
jo
imul
insb
gs
add
outsb
fs
insb
outsl
jae
add
gs
popa
jae
inc
jb
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
mov
inc
imul
dec
gs
popa
addr16
add
jno
push
gs
jne
jae
jb
pop
or
jae
dec
gs
popa
addr16
add
sbb
ja
jo
imul
push
push
gs
jae
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
imul
jae
popa
addr16
add
rolb
jae
imul
fadds
dec
outsl
popa
fs
insl
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
xchg
inc
gs
imul
js
push
add
in
push
inc
gs
popa
jo
jne
add
jnp
push
gs
outsl
arpl
add
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
dec
push
inc
inc
push
inc
pop
push
cs
insb
add
add
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
cmp
jo
je
fisubrl
mov
or
pop
insb
push
cmp
shl
rcrl
nop
push
decl
idivl
cmpsb
bts
lds
dec
daa
je
pop
loop
mov
test
into
in
pop
or
cmp
fadds
push
xchg
xor
aaa
stos
in
mov
lds
shrl
sub
add
xor
rorl
data16
mov
mov
mov
pop
xor
lcall
pop
push
test
mov
fs
sbb
gs
push
pop
mov
mov
fidivrs
fdivrs
add
adc
add
les
push
sub
loop
lods
push
xchg
adc
mov
inc
scas
mov
jl
sbb
popa
cwtl
push
sbb
imul
push
jl
movsl
jecxz
insl
dec
or
adc
mov
sti
cwtl
push
insl
jb
ja
xchg
dec
mov
popl
inc
daa
lcall
xchg
xor
cmp
insb
push
fsub
xchg
outsl
mov
js
in
test
push
test
cmp
xchg
jnp
in
mov
sub
adc
outsl
push
pop
lret
mov
cwtl
sahf
stc
ret
push
popa
pusha
pusha
push
stos
arpl
sbb
xchg
mov
mov
testb
lock
outsb
push
orb
aam
sub
arpl
jnp
mov
jno
lods
pop
and
dec
inc
rorl
movsb
loopne
sahf
xchg
mov
cli
inc
dec
dec
push
push
repnz
add
pop
push
das
add
test
sub
jb
popf
aaa
ror
mov
add
add
add
add
xor
add
decl
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
ss
push
mov
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
std
std
add
std
std
add
xchg
xchg
pop
sahf
mov
rorl
sahf
sahf
or
lcall
add
add
lods
lods
stos
add
popf
mov
push
cmpsb
cmpsb
movsb
jne
stos
test
nop
mov
mov
scas
mov
jne
stos
test
sahf
lahf
mov
adc
add
add
mov
mov
xchg
cmpsl
scas
lods
les
mov
leave
out
rcl
shr
ror
iret
fmul
lret
mov
cmpsl
mov
and
add
add
mov
mov
push
mov
cmpsl
out
mov
cli
mov
into
int
jecxz
in
out
out
out
ljmp
stc
fcmovnu
leave
mov
mov
cltd
cltd
add
incl
lods
lods
lods
add
int
add
mov
cltd
xchg
rcrb
test
mov
xlat
xlat
fdivr
out
call
cld
cld
std
push
repnz
loop
loope
rol
shll
xchg
sbb
add
add
xchg
xchg
pop
mov
mov
xchg
pop
sahf
lahf
mov
push
stos
stos
lods
scas
pushf
pushf
popf
icebp
cltd
fwait
fwait
std
mov
mov
mov
leave
leave
fcmovnu
in
in
jmp
lock
sti
cld
cli
sti
sti
cli
jmp
jecxz
dec
into
int3
out
lods
scas
mov
inc
lods
stos
stos
add
nop
daa
mov
test
pop
cmpsb
cmpsl
cmpsb
jo
test
mov
std
mov
mov
cmpsb
movsb
cmpsl
jmp
mov
std
lret
into
sar
aam
clc
in
in
jmp
in
in
repz
repz
jmp
lret
loopne
scas
mov
fistl
add
add
xchg
cmp
scas
lods
popf
mov
mov
mov
mov
mov
les
mov
ljmp
mov
ret
lret
lret
repz
fcmovne
repnz
fcmovu
neg
sti
loop
in
lock
mov
aam
cwtl
movsb
mov
add
add
push
push
push
push
addr16
pop
arpl
dec
dec
dec
adc
cmp
or
xor
xor
or
add
add
add
add
mov
subl
rol
sarb
std
cmpsb
mov
stos
pushl
lods
mov
shlb
dec
lret
leave
shl
mov
repnz
enter
mov
mov
pushf
mov
lds
add
add
outsl
and
addr16
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
push
pop
push
pop
pop
cmp
push
sbb
or
jne
xchg
xchg
xchg
inc
mov
mov
enter
leave
inc
mov
ljmp
cmpsl
test
test
cmpsb
pushl
mov
mov
mov
mov
lock
sahf
test
cmpsl
fwait
cmpsl
lcall
mov
rolb
add
add
mov
loope
jl
xlat
jb
je
insb
insb
imul
jne
int
jge
lods
jbe
je
addr16
bound
and
test
test
mov
mov
mov
rol
rol
mov
mov
mov
call
leave
xchg
dec
int
inc
ret
mov
sarb
mov
movsb
notb
xchg
xchg
call
mov
add
add
test
cmpsl
lahf
fsts
mov
cli
lea
stc
mov
mov
mov
jp
imul
mov
iret
lods
lods
lods
out
mov
mov
decb
call
lcall
jmp
push
jmp
mov
mov
mov
sti
ret
scas
mov
lahf
std
test
mov
lcall
xchg
xchg
movb
add
shll
mov
decl
xchg
xchg
lcall
cwtl
fwait
cltd
xchg
cltd
sti
nop
nop
xchg
out
mov
pop
jg
push
push
insb
imul
addb
xchg
mov
and
jmp
lcall
mov
test
mov
dec
int
dec
ror
rcl
iret
inc
mov
mov
fwait
mov
lcall
lcall
mov
xlat
scas
fldt
xchg
xchg
decl
xchg
xchg
lcall
lahf
lahf
lcall
xchg
xchg
cld
mov
push
push
dec
push
xchg
pop
pop
pop
cmpsl
jb
jb
addb
lock
lret
call
mov
mov
jmp
in
in
out
in
push
lock
ljmp
mov
stos
lods
lcall
xchg
xchg
ficomps
add
add
sarb
fldt
xchg
xchg
call
fwait
call
decl
mov
icebp
cmpl
test
rorb
lea
mov
lcall
stos
mov
pushl
mov
into
loopne
hlt
repnz
cli
cli
cld
std
std
cld
sti
sti
out
in
in
call
fcomp
pushl
stos
lods
lock
dec
add
add
fmul
mov
fldt
mov
lahf
lcall
cltd
lcall
xchg
xchg
xchg
mov
clc
sahf
mov
cmc
mov
pop
stc
mov
nop
ds
mov
fwait
xor
inc
mov
inc
mov
call
xlat
jmp
call
idiv
std
cld
std
stc
idiv
fnstsw
fdivrp
mov
hlt
mov
mov
movsb
movsb
mov
push
add
add
lret
les
fldt
mov
cmpsb
ljmp
pushf
sahf
ljmp
lods
mov
mov
push
inc
xchg
ds
mov
mov
dec
mov
fcompl
add
in
or
fldt
xchg
ror
mov
jmp
clc
idiv
std
cld
cld
cld
cld
push
div
jmp
loope
ljmp
scas
jbe
stos
mov
add
mov
mov
fldt
lods
test
ljmp
test
test
test
inc
cwtl
inc
dec
mov
call
xchg
add
rorl
add
rcll
add
in
add
in
lods
add
repz
or
out
xor
fmul
cmpsb
jmp
in
out
push
in
in
out
in
call
cld
rcl
shl
enter
mov
lods
and
mov
mov
mov
scas
mov
pushl
mov
ljmp
stos
lods
inc
mov
dec
mov
push
fcoms
add
pushf
add
ficompl
out
mov
push
mov
add
cld
ret
sti
rorl
test
dec
call
aam
call
scas
dec
sarb
test
cmpsl
mov
rol
add
add
add
mov
fldt
mov
mov
mov
mov
lods
lods
lods
inc
mov
pop
call
lcall
ficompl
jmp
cmpsb
add
jmp
mov
sti
mov
add
inc
add
inc
or
cld
enter
int
dec
and
std
aad
in
aam
inc
shll
xchg
fwait
xchg
lods
lods
lods
add
add
add
cmpsl
movsb
mov
mov
mov
mov
inc
mov
imul
fistpl
add
fisubs
add
repnz
stc
mov
add
std
lds
std
lds
call
sub
dec
sub
cld
shlb
xor
std
shrl
dec
cmpsl
clc
test
test
xchg
xchg
xchg
inc
push
push
push
add
add
add
xchg
xchg
cwtl
cltd
cltd
mov
mov
ret
mov
mov
inc
mov
jl
rcrl
add
loopne
add
in
add
in
mov
push
mov
add
cld
les
cld
lds
std
fmuls
std
fisttpll
xlat
dec
std
dec
fmull
fisttpl
loop
fcom
stos
sti
mov
lods
rcrb
push
add
pop
pop
pop
insb
insb
fisttpl
mov
inc
rol
mov
mov
inc
mov
xchg
call
mov
add
jmp
mov
add
std
lds
inc
add
std
sbb
std
fildll
cld
loope
std
out
jmp
insb
call
push
cld
in
mov
loopne
mov
mov
lahf
sahf
pop
fwait
lcall
dec
push
dec
pop
pop
pop
pop
fmuls
mov
inc
rol
ret
mov
mov
mov
ret
cmpsl
call
test
or
ljmp
sti
rolb
std
lds
std
enter
movl
loope
in
test
std
ljmp
std
lock
std
hlt
mov
std
cmc
test
std
cmc
xchg
call
iret
mov
mov
mov
mov
pushf
adc
add
add
add
add
popa
inc
jnp
jl
scas
mov
fxch
ret
iret
in
int3
lret
shl
int3
into
into
cld
mov
mov
inc
mov
mov
fldt
or
icebp
mov
clc
mov
add
std
lret
dec
add
std
lret
fdivrs
std
icebp
sahf
std
icebp
pushf
push
sahf
cli
lahf
std
sti
mov
clc
pushf
call
shrl
loopne
mov
cwtl
sbb
incb
jp
jb
popf
popf
popf
inc
lret
int3
int3
fs
in
loope
in
loopne
loopne
aad
fcmovnu
lret
leave
lret
out
int
int
int3
ret
fidivl
or
repz
cld
rolb
cld
movl
dec
add
std
lret
pop
fstl
std
rep
repz
std
clc
mov
divl
cli
mov
cld
stc
cmpsl
mov
mov
cmpsl
cmpsl
mov
incl
lods
stos
stos
add
or
lock
repz
in
lock
in
call
in
jne
fnstsw
xchg
fcom
fadd
into
mov
stos
pop
jmp
mov
add
cld
les
inc
add
dec
add
std
into
and
jmp
ja
cmc
stc
cld
test
std
clc
mov
cld
test
ljmp
icebp
cmpsb
test
pushf
lea
addl
incl
std
incb
std
decl
div
negb
in
lock
xor
jnp
int3
shl
mov
adc
divl
add
cld
mov
add
inc
add
shlb
in
mov
std
stc
mov
cli
repz
imul
mov
ljmp
in
mov
loopne
cmpsb
sti
loope
mov
les
test
mov
addb
add
add
aam
aam
int
int
mov
sti
call
stos
add
stc
mov
push
scas
push
out
mov
bnd
out
iret
inc
std
jmp
in
cli
jmp
fcomps
in
aam
mov
rcl
mov
into
shlb
ror
mov
pushf
test
test
sbb
add
add
fcmovu
pop
leave
ret
mov
mov
mov
inc
fldcw
xor
shll
inc
repnz
push
jmp
les
int3
movsl
fmul
leave
lods
sarb
ret
cmpsl
mov
ret
mov
mov
les
mov
dec
mov
mov
mov
add
add
add
rol
lret
les
nop
rol
mov
lret
repz
ffree
mov
mov
mov
movsl
mov
test
mov
scas
ja
mov
push
mov
mov
sub
rol
enter
enter
into
int
add
addb
add
incb
mov
stos
adc
mov
mov
lods
mov
stos
pushf
scas
lods
cmpsb
jns
scas
cmpsl
push
scas
mov
inc
scas
stos
mov
and
mov
stos
or
lods
lods
add
incl
incb
jmp
add
add
jmp
add
add
jmp
add
add
clc
add
add
add
push
add
add
jmp
add
add
add
inc
add
add
add
incb
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pusha
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
jmp
mov
inc
loop
jb
stos
add
bound
push
jmp
inc
push
test
int
movsb
sti
and
cmp
inc
fidivrl
or
shrb
mov
and
popf
xor
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
adc
pop
loop
lret
in
jecxz
push
call
xor
push
and
or
stos
inc
pop
sti
pop
hlt
sub
leave
pusha
mov
jnp
jg
out
add
es
dec
es
mov
jns
inc
fdivr
lcall
dec
in
adc
mov
ret
pushf
xor
xchg
dec
in
push
mov
add
mov
push
mov
lods
inc
fadd
pop
push
arpl
xchg
das
jecxz
popa
mov
jmp
mov
jno
cmp
pop
mov
pop
lea
cmp
inc
loopne
pop
repnz
leave
inc
stos
fsubs
mov
leave
sub
jb
dec
mov
jb
add
xlat
les
mov
clc
in
subl
scas
inc
sahf
pop
or
and
ljmp
movsl
or
test
lds
cmpsl
test
aad
dec
jecxz
repnz
orl
or
fcmovb
es
sbb
ds
outsl
data16
xchg
nop
sub
les
xor
pop
in
sbb
cmp
push
mov
add
fimuls
jne
push
mov
xorb
mov
les
mov
test
sub
cmp
dec
dec
loop
jnp
push
out
lcall
xchg
out
pop
cmc
pop
test
mov
inc
jl
jb
cmp
negl
pop
out
dec
ljmp
popf
cmp
cmc
insl
mov
jl
sbb
mov
fdivrs
inc
xlat
jg
xchg
sub
mov
add
jl
das
and
lcall
pop
inc
fidivrs
insb
mov
sahf
cmp
insb
loope
cmpsl
sarl
outsb
loop
pop
adc
adc
data16
lcall
jl
jne,pn
and
lcall
pusha
mov
popa
cmp
call
dec
cmp
shrl
add
jle
lods
icebp
mov
push
add
cmpsb
xor
sub
fsubrs
movsb
dec
loop
dec
pop
idivb
add
sahf
jge
rorb
push
jnp
fwait
xor
popf
movsl
cmp
inc
mov
pop
and
loope
jne
cmc
mov
adc
sbb
cmp
insl
jecxz
out
pop
lock
push
adc
xchg
sub
fsubrl
dec
mov
fcmovnbe
push
mov
out
xchg
add
mov
and
add
es
loopne
int
hlt
js
test
lret
cld
jb
xor
mov
pop
mov
ret
loopne
cmc
imul
popf
push
call
out
imul
shr
bound
xchg
or
outsb
add
xchg
pop
lea
mov
sub
mov
leave
pusha
fistps
push
add
jg
stos
icebp
mov
push
push
popf
test
das
cmpsb
and
xlat
push
sub
fldcw
mov
pusha
idivl
imul
iret
dec
xchg
jp
pushf
xor
pushf
movsl
cmp
inc
mov
pop
and
loope
je
testb
cmp
sbb
leave
sarl
shrb
mov
mov
test
xchg
inc
cmp
and
push
xor
xchg
adc
rolb
aam
dec
sub
jg
lods
inc
fisubl
popa
clc
jb
jo
subb
jge
inc
outsl
push
jae
aam
jp
movsl
cmp
mov
push
ljmp
lods
inc
in
push
out
inc
imul
dec
cli
xchg
jl
pop
sahf
in
insb
add
aas
sbbl
xorb
gs
test
testb
sahf
fidivl
sub
jb
push
push
jmp
jl
nop
stos
stos
fdivl
leave
outsl
push
incl
fwait
xor
push
rclb
cltd
xor
lods
dec
in
mov
imul
adc
js
push
adc
and
mov
pusha
in
xor
and
enter
jns
jne
out
adcl
fcoms
mov
dec
stos
inc
jp
call
fistpl
mov
dec
ss
lahf
and
fcompl
adc
push
add
into
cwtl
mov
int
xchg
cs
pop
and
rcrb
imul
pop
add
mov
adc
sbbl
jle
fwait
jl
lret
xor
sahf
sub
dec
lret
xchg
mov
test
into
lcall
xchg
pop
testb
pushf
inc
fst
arpl
movsl
jbe
dec
out
movsb
pop
out
fsubs
xchg
xchg
dec
shlb
orl
push
xchg
dec
rclb
lahf
ss
clc
pop
bound
jecxz
xchg
nop
mov
adc
xchg
push
mov
test
xchg
xchg
push
xchg
mov
sahf
xor
xchg
inc
mov
jb
adc
imul
jns
xchg
inc
mov
je
out
xchg
xchg
cs
push
movsb
cmp
xchg
test
ret
jle
push
jo
xchg
lods
inc
aad
das
cltd
dec
mov
jg
cmp
shrb
test
dec
xchg
enter
ret
outsb
mov
mov
out
lret
pop
icebp
mov
lea
cltd
or
lret
pop
fnsave
dec
fisttps
cltd
and
je
and
mov
inc
fxch
dec
pop
idivb
sub
loopne
sbb
mov
test
arpl
mov
mov
popa
clc
insb
arpl
out
sbbl
jne
pop
xchg
mov
cmp
into
es
push
inc
mov
or
add
push
stc
push
sub
mov
jnp
add
pop
dec
std
popf
xor
pop
stc
add
data16
xor
xor
xchg
cs
cmc
mov
mov
sub
adc
jmp
gs
pop
or
adc
pop
fmul
fs
jg
mov
rclb
sub
mov
lods
ret
push
aad
mov
js
loope
sbb
mov
inc
mov
int3
arpl
sbb
xchg
dec
and
sbb
or
xlat
stos
pop
stos
inc
inc
jbe
adc
adc
imul
in
sbbl
add
insl
test
jecxz
pop
ja
lret
movsl
or
cmp
lea
jl
mov
jg
ljmp
jb
iret
mov
subl
and
cmp
js
xchg
sub
outsb
lods
inc
lahf
inc
inc
fdivl
lret
lods
sub
popf
xor
mov
es
sub
jo
movsb
cmp
test
fdivl
inc
dec
out
mov
mov
stos
fwait
xor
cmp
and
das
js
adc
roll
xchg
jno
int
jle
push
mov
fwait
mov
mov
sub
inc
fldcw
mov
ret
mov
fistpl
adc
mov
sub
fnstenv
addb
mov
nop
daa
add
fnsave
push
mov
dec
jne
jnp
cmp
mov
movsl
mov
pop
out
xchg
pop
inc
and
jae
pushf
mov
xchg
mov
push
add
sbbb
and
push
ss
es
aaa
mov
ret
out
stc
rcrl
xor
and
pop
sahf
cmpsl
ja
pop
movsl
or
jo
adc
or
inc
fs
xchg
lock
xchg
mov
xchg
in
mov
aaa
pop
aas
xor
mov
mov
inc
xchg
fdivp
fscale
jmp
das
sti
jnp
sub
dec
push
sub
fwait
add
and
inc
jle
jns
sub
lret
xchg
sahf
xor
es
adc
jb
cli
xchg
outsl
xchg
js
lds
sub
cmpsl
sbb
or
outsl
test
mov
jg
mov
bound
push
mov
jle
push
scas
xor
jp
mov
adc
mov
fiaddl
fcmovu
mov
jge
mov
fidivl
and
cmp
fs
fwait
fs
pop
adc
test
mov
xlat
jnp
sbb
push
divb
testb
adc
adc
insl
adc
sbb
jno
push
fdivs
loopne,pn
cs
lods
mov
sarl
dec
push
jp
xchg
pop
mov
sub
les
xchg
sbb
push
jns
mov
xor
push
cmpsb
mov
fs
lcall
fcoms
scas
mov
loope
mov
jo
popa
repz
push
xchg
jg
repz
jmp
cld
cmp
shlb
sub
push
out
in
sbb
sub
or
and
pop
outsl
mov
mov
fadd
xchg
rcr
xor
sub
nop
xor
xchg
pop
pop
addl
clc
rcr
subb
ret
add
sub
lcall
mov
mov
adc
jo
movswl
rorl
scas
xor
imul
inc
pop
outsl
adc
test
xchg
je
test
xor
dec
fistpl
mov
ljmp
dec
ret
jp
mov
subl
adc
rolb
jne
push
adc
xorb
andl
jg
out
movups
cmp
xchg
sbb
push
add
inc
add
mov
andl
jmp
sbb
mov
test
mov
test
pop
cmpsl
add
enter
dec
lahf
stos
push
mov
in
clc
jmp
pushl
dec
sbb
add
clc
jmp
inc
push
xchg
gs
or
push
mov
cmpsb
std
adc
or
in
inc
inc
movsl
out
jne
loopne
daa
xlat
sub
out
xor
int3
iret
aaa
mov
cmp
js
sub
int3
mov
lret
sbb
mov
pushf
fwait
jge
or
push
enter
mov
rorl
cmp
stos
cmp
mov
movsl
dec
subl
imul
jae
adc
fstpt
pop
sub
sub
mov
mov
xchg
repnz
sbb
mov
mov
pop
aam
das
popf
inc
testl
clc
addb
mov
inc
jb
xor
mov
push
jge
push
stc
and
aas
mov
dec
fidivrs
mov
mov
fistps
loope
mov
rorb
add
or
das
or
lcall
lret
sub
push
out
dec
push
in
mov
jle
xchg
sub
movsb
cmp
nop
shrb
push
call
push
mov
fsub
jle
lods
add
and
inc
fnsave
test
adc
imul
mov
call
ds
cmp
insb
int
ror
test
icebp
dec
and
push
dec
insl
lods
out
mov
popa
hlt
mov
xchg
stos
imul
xor
mov
shrb
fisttpl
int3
mov
insl
add
scas
push
mov
cmp
and
cmp
add
inc
fimuls
test
cld
test
iret
je
fabs
add
cli
repnz
sub
mov
inc
inc
fcomps
into
gs
pop
mulb
jge
or
sbb
inc
mov
shrb
cmpsb
cmp
mov
les
xlat
push
in
in
jecxz
pop
or
add
mov
pop
mov
fbstp
aam
nop
loopne
cmp
repnz
pop
call
pop
out
mov
jnp
daa
mov
mov
xor
pop
loopne
push
inc
push
call
inc
inc
outsl
push
add
cmpsl
outsb
sub
lds
aam
jecxz
ret
xchg
and
xor
pop
pushf
xor
mov
cmp
je
fnstenv
popf
push
in
push
testl
lds
ljmp
pop
xchg
call
push
ja
push
data16
cmpb
lea
push
pop
sahf
mov
loopne
stos
mov
aam
enter
jg
mov
push
popf
rorl
and
das
fstps
test
lret
in
aad
xchg
call
repz
lods
cmc
mov
jle
adc
movsb
cwtl
das
aam
xor
mov
mov
in
fists
fs
jg
or
repz
popf
xor
xchg
adc
mov
lret
pop
dec
rorb
cld
outsl
insl
xor
hlt
mov
xchg
test
iret
rdtsc
enter
pop
sbb
movb
jnp
outsb
dec
in
jle
mov
mov
fwait
xor
mov
dec
out
sbb
insl
add
sbb
jle
movsb
mov
pop
out
pushf
ss
test
stos
cmp
pop
iret
push
xor
clc
out
jl
and
mov
add
mov
nop
daa
loope
aas
sub
scas
inc
jmp
pop
hlt
jle
into
gs
fldlg2
sbbl
xor
sbb
mov
xlat
in
cs
dec
loope
inc
add
add
and
je
inc
xlat
outsl
popf
mov
imul
jl
lret
push
repnz
jecxz
xor
ss
addr16
insl
pop
orl
addl
test
mov
rcll
out
mov
inc
insl
xlat
insl
add
xchg
fs
out
and
lret
sti
xchg
lret
inc
test
sbb
mov
fdivr
xchg
sbb
xor
push
in
mov
xlat
jae
mov
int
sub
test
nop
daa
xchg
cmpsl
fnsave
scas
inc
rolb
xchg
add
int3
arpl
and
jmp
push
test
ret
or
shll
jne
jl
inc
fcompl
xchg
xchg
sub
arpl
movsb
push
sbbl
loope
mov
xchg
cmp
xchg
mov
lret
jbe,pn
ret
cmp
js
pop
repnz
xchg
pop
out
out
jns
dec
emms
push
cmp
adc
inc
cmp
dec
cltd
and
jp
mov
push
js
out
xchg
mov
or
enter
ret
popa
clc
lea
jg
dec
add
inc
arpl
sbb
sti
jg
cmp
fcmovb
pop
cld
cwtl
fsubrs
push
aad
cmp
add
jl
repz
rclb
sti
mov
xor
gs
dec
in
push
outsb
add
leave
rorl
sbb
test
pop
cmp
outsl
fnsave
pop
cmp
lcall
and
sub
gs
and
jo
ds
cltd
insb
add
pop
hlt
subb
stos
jnp
loopne
mov
xor
xlat
outsb
sbb
cmp
sbbb
mov
xor
add
in
and
lahf
sbb
mov
andl
sub
jle
sbb
ss
xor
sarb
lods
dec
fsubrs
int3
sub
enter
je
adc
pop
sahf
imul
movsl
insl
xchg
int
out
loop
sub
sbb
cmp
mov
ficoml
xor
sarl
dec
dec
insl
js
or
cmp
hlt
mov
push
sub
and
adc
stc
push
xor
inc
adc
sub
out
push
jne
cmp
insl
add
push
xchg
sub
repz
loop
pop
sahf
or
jnp
mov
pop
lret
xchg
in
jge
cmp
movsl
shrb
fwait
push
jmp
and
jns
inc
xlat
mov
pop
cmc
icebp
adc
cs
sbb
pop
inc
jae
bnd
loop
aam
jns
loope
out
xchg
or
movsb
jno
mov
mov
sub
dec
imul
dec
loopne
stc
repnz
fnsave
mov
adc
jne
lds
mov
jecxz
xor
push
mov
int3
mov
adc
or
bound
rclb
les
aas
inc
fdivp
push
jecxz
push
adc
add
dec
mov
stos
fisubrs
pop
dec
divl
leave
mull
and
inc
icebp
mov
push
sub
jno
stos
lea
imulb
lods
mov
flds
push
call
stc
jp
push
popf
fistps
and
icebp
xor
fidivrl
popa
clc
lods
cmpsl
fdivl
lds
outsl
cli
xchg
sbb
sahf
xor
rep
mov
fidivs
lcall
sub
push
int3
lods
pop
sahf
lret
and
in
mov
push
xor
fiaddl
fidivl
insb
popa
clc
lcall
push
sub
popf
xor
mov
mov
stc
repz
jo
adc
testl
pusha
mov
lret
fnsave
push
call
pop
dec
outsl
push
cmp
mov
push
lea
fisubs
mov
lock
inc
faddl
fbstp
arpl
inc
test
xchg
call
add
cmp
mov
shll
leave
pop
out
sti
popf
fnsave
ja
mov
xchg
shlb
or
sbb
daa
mov
cmpsl
mov
out
xchg
ss
adc
sub
test
dec
loopne
mov
jl
insl
xlat
xchg
xchg
xlat
out
movsb
cmp
add
mov
test
xor
push
shll
daa
jl
in
dec
ds
add
adc
mov
jnp
inc
insb
mov
xor
insl
or
dec
mov
lret
aad
push
int
mov
test
adc
sub
das
and
sbb
in
jge
aaa
hlt
mov
mov
and
je
sahf
test
shll
adcl
xor
jnp
add
aam
xchg
cmp
dec
lahf
test
and
stos
aam
sub
jle
inc
std
and
gs
lds
adc
xchg
xchg
mov
ret
mov
mov
xchg
inc
mov
push
lods
xchg
adc
cmp
add
push
xchg
daa
push
in
push
mov
xor
jne
test
sub
nop
in
mov
dec
call
or
ja
mov
push
popf
mov
push
mov
pop
in
mov
inc
xlat
sub
idivl
or
int3
and
and
xor
enter
data16
into
mov
mov
movsb
inc
cmp
mov
cmpsb
jb
imul
mov
imulb
popa
sub
je
xchg
cmp
push
adc
xchg
fiaddl
dec
das
mov
mov
jnp
addr16
sbb
sahf
adc
daa
xor
or
outsb
mov
inc
jmp
imulb
into
pop
xor
dec
mov
pop
inc
jmp
and
push
mov
mov
into
mov
jmp
mov
xor
mov
inc
out
sub
xchg
fdivp
sbb
ds
push
and
push
rorl
mov
add
pop
test
adc
sbb
cmp
popa
mov
sub
in
xchg
nop
jge
or
push
and
test
fistpl
lock
mov
add
push
pushf
iret
sub
cmc
out
inc
leave
arpl
loopne
inc
xor
adc
ds
sub
test
pop
dec
cli
test
fimuls
xor
dec
cs
jae
inc
cmp
or
aaa
cwtl
pop
setle
sbb
mov
movsb
mov
sbb
aas
mov
add
out
pushf
mov
xor
imul
cmp
shll
jnp
inc
pop
movsl
inc
mov
andb
jecxz
xchg
subb
lret
hlt
loopne
jns
mov
mov
dec
xchg
xchg
loop
jae
and
test
adc
mov
add
js
jno
sbb
xor
jns
dec
xchg
shlb
scas
or
mov
xor
mov
mov
inc
je
fisttpl
cmpb
cmpsb
rcll
sbb
cmp
popf
aad
cmp
mov
mov
jb
fdivrp
xor
mov
cmpl
bound
push
ss
pop
add
push
adc
jb
jp
ljmp
pop
mov
mov
inc
mov
cmp
sub
sub
add
pop
cmp
lock
sub
repnz
js
inc
inc
loope
sub
in
dec
in
push
mov
pop
loopne
mov
add
data16
jle
stc
aad
jnp
xor
cli
sub
pop
loopne
dec
push
insb
mov
xor
rorb
push
test
pusha
bound
pop
lods
mov
mov
stos
sar
sti
rcl
jns
shll
push
sub
adc
xchg
scas
push
repnz
imul
cmp
daa
test
jp
mov
jle
cltd
in
out
jae
push
ret
icebp
insw
iret
xchg
clc
dec
and
sahf
mov
cli
cmp
lret
cwtl
and
jp
or
or
inc
inc
mov
inc
pop
hlt
pop
or
cmpsb
test
orl
into
mov
arpl
fistpll
xchg
imul
scas
rclb
inc
xor
in
push
lret
inc
loop
imul
mov
mov
and
push
cmpsb
mov
jnp
insb
lcall
je
test
dec
dec
out
jecxz
mov
sub
xchg
out
push
enter
and
mov
int
pop
sub
mov
mov
pop
ret
ret
aam
xchg
jb
mov
jle
jae
xor
scas
jo
mov
mov
xor
repnz
cmpsl
and
sub
notb
and
adc
aad
mov
adc
inc
push
pslld
cld
aam
lret
test
adc
das
pop
or
cmp
adc
or
clc
in
push
mov
imul
mov
adc
cmc
jne
dec
pop
rcll
clc
sbb
sbb
add
roll
xchg
fcomi
mov
pop
xchg
ds
sti
jo
dec
not
lods
stos
lea
imul
xlat
lcall
adc
cmpsb
pop
sti
jae
ljmp
xchg
les
cs
lods
adc
loop
cmp
xchg
sbb
sti
mov
bound
ja
adc
jnp
mov
insb
nop
popa
sub
call
iret
sub
cwtl
push
sbb
ljmp
shlb
sub
lods
mov
push
jo
and
mov
jl
sar
into
test
lods
mov
mov
jb
shrl
sbb
sub
std
fucomp
xlat
gs
sbb
subb
push
push
test
pop
xor
sub
repnz
lds
test
add
xchg
insl
xor
ljmp
xor
xchg
pushf
mov
arpl
adc
xchg
and
mov
jg
push
pop
lea
pop
in
ret
sbb
cmpsb
das
sbb
sti
fnstsw
push
adc
jne
nop
push
inc
insl
clc
mov
les
loop
iret
rcll
push
movsl
jl
pop
push
mov
mov
movsb
xchg
dec
into
int3
lock
fidivrs
mov
mov
push
jno
scas
dec
outsl
neg
repz
inc
sbb
imul
cmp
popf
add
insb
fisubs
jo
lret
daa
outsl
or
mov
rolb
xor
sub
mov
ret
ljmp
inc
jb
add
popa
xchg
xchg
daa
mov
jo
lret
jp
ret
js
hlt
inc
fbstp
cmp
xchg
ja
xchg
sub
popl
xchg
clc
inc
je
push
addb
sbb
jg
loopne
js
mov
mov
cld
xlat
orb
mov
imul
cmp
sbb
fmulp
xchg
pop
bswap
push
or
icebp
lds
pop
and
sub
ljmp
inc
popa
loop
les
mov
or
mov
pusha
mov
push
xchg
push
pop
dec
jp
or
sbb
push
sahf
mov
cmpsl
sbb
shll
inc
fnstsw
mov
xor
cmp
loop
es
cmc
std
imulb
enter
jg
and
mov
xlat
loopne
inc
fs
jmp
jmp
sbb
jecxz
dec
jl
sub
or
loopne
andl
sahf
shl
fdivl
enter
cmp
test
outsb
dec
sub
cmpsl
sbb
iret
mov
and
mov
mov
or
mov
mov
call
movsl
inc
push
loop
push
adc
inc
fdivrs
mov
xchg
ja
fisttpll
negb
pop
repnz
jnp
in
xchg
xor
and
je
xor
or
in
movsl
inc
mov
adc
int
sub
pop
push
scas
aas
and
pop
mov
jmp
popa
stos
pop
xchg
test
xorb
jb
insl
mov
inc
dec
xor
push
loop
sub
leave
rclb
push
push
imul
mov
add
scas
into
pop
cmp
jg
jg
in
push
out
adc
lret
mov
lds
imul
xchg
ljmp
sub
inc
jl
and
incb
mov
push
mov
test
dec
in
leave
inc
xlat
cmp
pop
icebp
pop
or
addb
into
cmp
lea
mov
lods
inc
jmp
dec
fsts
test
cs
dec
frstor
push
jg
aaa
add
sahf
dec
out
cmc
xchg
imul
and
ljmp
xor
sbbb
imul
and
cltd
mov
stos
push
stos
sub
mov
push
dec
mov
cmp
in
fisubrs
dec
add
jns
cmp
mov
popf
insb
in
inc
jae
ret
jmp
jmp
aad
out
jp
inc
gs
or
gs
push
xor
test
sbb
dec
mov
in
sub
cs
or
shr
lods
pop
ja
jmp
les
in
shlb
rcll
test
and
adc
sub
mov
mov
test
movsl
js
divb
test
mov
cmp
sub
xchg
iret
add
stos
mov
inc
popf
mov
loopne
mov
insb
out
jmp
mov
cmp
je
mov
shll
push
jmp
sbb
xchg
addb
sub
lds
cmp
icebp
jl
jecxz
and
stos
aam
sahf
xchg
vmovaps
shl
xor
or
aas
icebp
jle
pop
shll
in
xchg
stc
inc
lock
mov
jae
pop
sbb
and
loopne
pusha
lds
fisubrs
fadds
cmp
sbb
push
stos
pop
cmp
ret
mov
jl
fxch
test
out
adc
pop
movsl
cwtl
pop
push
popf
xor
jns
mov
and
imul
leave
test
mov
pusha
add
pop
insb
or
dec
cltd
dec
lea
fsubrs
daa
add
jmp
dec
lret
or
xchg
mov
stos
out
bound
gs
and
icebp
mov
sti
lods
iret
adc
outsb
dec
rcl
aam
daa
arpl
add
lahf
fwait
mov
mulb
clc
lret
ror
pop
or
or
js
lock
fists
and
jge
sub
mov
popf
and
mov
push
cmp
imul
testl
mov
fs
iret
cmp
cli
add
cmpl
xor
add
fisttps
outsl
inc
inc
sub
inc
fs
xchg
in
iret
jmp
in
inc
mov
push
cs
or
imul
cld
push
pop
imul
mov
nop
dec
test
mov
pop
insl
cmp
fdivs
add
xor
movsl
add
fmul
lock
rcr
xor
lea
dec
jne
test
xchg
sbb
fildll
insb
leave
in
add
scas
enter
int3
es
cvtdq2ps
mov
push
adcl
sub
gs
cmp
or
inc
call
std
or
gs
and
inc
shlb
mov
lcall
jb
jmp
fisttpl
xchg
rcrl
aas
jae,pn
int3
std
xchg
cwtl
arpl
mov
inc
push
jns
insb
aam
aad
insb
jbe
mov
test
mov
and
push
add
xor
cmc
fdivl
sub
or
repnz
faddl
or
mov
cmc
mov
push
xorl
and
jecxz
dec
movsb
mov
jg
test
xchg
pop
cld
or
nop
add
cmp
push
adc
inc
fs
pop
in
aad
fucomip
aam
xchg
xor
add
push
mov
mov
enter
test
nop
cmpsl
mov
sbb
dec
mov
insl
mov
and
js,pt
mov
andb
dec
push
xor
insl
shrl
scas
ljmp
push
shlb
shl
incl
imul
mov
mov
and
cmp
out
repz
jbe
xor
dec
or
aaa
mov
or
shll
and
jmp
sbb
aaa
jne
xlat
cs
into
rcl
ss
dec
dec
clc
inc
adc
xchg
add
lods
or
and
cmpsl
lcall
pmaxsw
imul
out
aam
rorb
push
sbb
inc
fs
lods
shr
popf
aad
loope
nop
scas
daa
fwait
aaa
rcl
js
enter
sub
mov
out
pop
cmp
pop
or
xchg
pop
and
sub
sub
jl
out
lcall
das
adc
test
pop
sti
add
sub
jmp
popa
sub
xchg
push
dec
daa
sbb
cmpsb
pop
cmp
mov
bound
sbb
xor
push
add
and
inc
add
adc
mov
xchg
test
into
pop
sub
mov
lcall
subl
dec
lret
push
inc
mov
fdivrs
inc
push
cmc
mov
pop
or
xor
push
and
iret
popa
fcmove
ja
nop
js
pusha
std
lret
pop
mov
js
outsl
pop
lret
subl
seto
add
iret
xchg
jge
cmpsb
shlb
jp
and
jle
pusha
daa
outsb
fisubl
jmp
and
addr16
cwtl
lcall
and
addb
or
std
bound
call
inc
xor
popf
pop
les
mov
xchg
cmpsl
clc
scas
dec
or
jmp
sbb
sbb
lock
aam
or
inc
fldl
scas
dec
negb
dec
jns
lock
or
mov
push
into
test
xchg
cmp
aas
jnp
adc
mov
cld
lret
rcrl
les
add
popf
js
daa
int
dec
dec
jp
imul
lods
xchg
sbb
xchg
add
ja
into
stc
pusha
xor
mov
fwait
mov
lea
adc
pusha
movsl
mov
iret
inc
pop
subl
test
sub
and
incl
xor
mov
je
push
xor
mov
lods
mov
paddusb
shlb
pop
add
mov
fsubrl
xchg
loope
outsb
fcoms
js
add
mov
or
stos
daa
inc
mov
push
lods
sti
rorb
mov
mov
or
jg
mov
jle
or
dec
mov
jnp
xor
filds
mov
or
xchg
mov
arpl
imul
sbb
inc
push
shl
test
jb
inc
lret
call
sti
sub
adc
pop
cwtl
pushf
es
xchg
dec
test
jg
adc
sub
jno
das
jle
mov
repz
add
xor
shl
movsb
and
and
pop
xor
mov
es
mov
jns
push
dec
sbb
dec
sti
adc
mov
xor
hlt
cmp
mov
rolb
inc
inc
xor
mov
shrl
cmp
sbb
leave
inc
imul
ds
jne
adc
out
pushf
mov
adc
dec
mov
push
dec
jecxz
pop
cmp
jp
inc
and
or
mov
outsl
jle
js
data16
fucompp
clc
lahf
das
pop
jae
in
lahf
flds
cli
dec
js
fwait
imul
inc
pop
push
xor
mov
hlt
jl
jg
ljmp
into
in
test
jbe
xchg
test
test
sub
dec
push
es
mov
arpl
and
popf
pop
xor
pop
jno
sti
xor
mov
mov
stc
sub
inc
mov
in
roll
daa
iret
ret
jl
xor
das
lds
push
scas
mov
fcomi
and
jmp
out
add
adc
xchg
sarb
lcall
mov
enter
bound
cmpsl
inc
dec
push
xchg
xchg
fwait
add
xor
and
cmc
adc
mov
insb
lcall
push
cmp
xor
inc
inc
arpl
xor
dec
imul
stos
add
enter
rcll
xchg
cli
lcall
dec
pop
gs
mov
mov
movb
mov
outsl
lret
xor
sub
cmpsb
and
cmp
inc
ss
test
pop
out
or
add
aad
push
clc
fisttpll
mov
mov
push
push
add
xor
aad
add
xchg
xchg
pop
les
insb
bound
mov
cmp
lcall
gs
pop
fidivl
jbe
and
jmp
xor
pop
sti
call
xor
bnd
jae
sbb
sub
jecxz
push
hlt
jno
push
and
data16
lret
add
mov
push
or
loopne
rcrl
je
mov
outsb
cld
pop
cmp
pushf
lods
pop
xlat
clc
push
xor
sbb
lret
dec
popa
iret
mov
subl
mov
mov
or
sbb
mov
lret
shrl
fbstp
cmp
mov
and
pop
and
subb
mov
cmp
ret
addr16
sub
jmp
sbb
imul
mov
lret
push
imul
in
je
mov
cli
cli
mov
push
jecxz
cmp
jns
add
dec
sub
repnz
int
and
push
lock
daa
jb
push
iret
push
addl
cmpsl
ja
dec
xor
xlat
mov
cmc
xchg
div
jmp
sahf
pop
inc
outsb
pop
mov
pushf
and
dec
inc
add
cmp
popa
and
pop
repz
xchg
and
sbb
je
in
inc
sti
subl
ret
cli
mov
dec
jo
loope
fisubl
add
sub
jl
int3
jecxz
js
sahf
or
mov
sti
notl
fildll
loop
lds
xlat
pushf
push
cmp
push
sbb
or
sbb
outsl
jns,pn
dec
mov
les
jge
fiadds
test
jbe
push
pop
xchg
jnp
sub
inc
andl
xchg
stc
ret
or
jbe
arpl
call
inc
ds
pop
xor
pop
add
test
jmp
xchg
fimuls
xor
ljmp
rolb
subb
lret
movsl
scas
add
imul
leave
push
push
ficoml
lds
lret
gs
sub
ds
popf
lcall
add
jmp
lods
push
dec
out
in
inc
add
push
sti
mov
xlat
mov
iret
dec
pop
popf
xor
outsl
push
scas
mov
int
ja
dec
insl
add
negl
sbb
add
insl
rorb
and
std
sub
and
mov
mov
mov
pop
jp,pn
cmp
mov
jne
inc
data16
jl
mov
out
jne
inc
mov
adc
lahf
fwait
xchg
movsb
or
lret
movb
xchg
sti
out
push
hlt
lcall
push
enter
fidivrl
cmp
ljmp
fiaddl
cmpsb
loopne
sbb
sti
sti
sub
scas
wrssd
xchg
cpuid
std
lahf
dec
es
mov
pop
ffreep
fwait
cwtl
sub
shl
mov
scas
out
lea
fdivrp
add
mov
shll
fistl
jmp
je
fildl
mov
dec
xor
orb
jmp
arpl
and
sbb
icebp
mov
inc
pop
cli
cmp
mov
push
shll
add
gs
jae
cmpsl
movsb
jl
movq
mov
call
push
jmp
test
add
fisubrl
ds
mov
mov
ja
mov
and
push
out
jle
jecxz
std
sub
mov
out
pop
add
xor
push
cmp
inc
cmpsb
nop
into
pushf
mov
cmp
xlat
rolb
sub
mov
test
adc
rcr
inc
in
fistpl
mov
out
fimuls
js
mov
sub
bound
dec
pop
pop
addl
and
addb
std
jmp
xchg
cmp
gs
sub
aad
shrb
lods
mov
dec
mov
jl
repnz
loope
cmp
push
mov
xor
push
xor
lahf
pop
lods
jns
xchg
jge
das
mov
out
cli
dec
sub
nop
sub
mov
cmp
inc
les
push
sub
push
sbb
int3
or
sub
jle
adc
mov
and
shl
inc
add
bound
cltd
hlt
ds
cmp
push
mov
pop
pop
pop
dec
out
lret
rorb
hlt
push
inc
mov
adc
rcl
mov
in
push
popf
cs
add
fsubs
sarw
cmp
push
or
mov
cld
ss
dec
add
add
sbb
and
sub
std
mov
ret
nop
jge
mov
int3
mov
icebp
push
xchg
pmaxub
push
mov
shll
int3
push
jp
pop
push
aas
and
dec
outsl
xor
jnp
arpl
lods
sarb
cwtl
xchg
lret
jle
pop
cmpl
mov
repz
repnz
insl
cmp
ljmp
mov
mov
loop
adc
dec
mov
pop
and
or
jbe
rorb
pusha
pop
subl
outsb
mov
mov
adc
movsb
ret
ret
jmp
inc
imul
outsb
inc
fstl
pop
rep
xchg
pop
push
lahf
idivl
out
sarb
push
stos
adc
rcrl
cwtl
rcll
in
add
jbe
adc
mov
mov
mov
adc
repz
ljmp
gs
push
push
push
mov
mov
loope
push
inc
xchg
in
cwtl
sbb
addr16
adc
jbe
push
cmpsb
push
test
jae
pop
and
or
xchg
add
mov
push
mov
popa
sbb
mov
dec
loopne
stos
jo
icebp
jecxz
popf
push
dec
es
sbb
dec
loop
push
inc
rcll
or
push
das
add
mov
add
stos
cmp
les
mov
push
or
es
or
cs
dec
gs
fdivrl
xor
sbb
dec
push
cmp
into
enter
stos
aad
pusha
mov
inc
in
into
jnp
sahf
jl
jg
adc
psubusw
mov
mov
lahf
push
push
xor
pop
icebp
fs
bound
jns
loope
out
fcmovb
cmp
dec
add
cmp
push
popf
nop
stos
push
and
and
adc
popf
inc
push
push
inc
jle
sbb
pop
pop
loope
jne
popf
push
dec
iret
rorl
push
xor
push
xor
incb
ficomps
hlt
insb
jb
dec
push
in
xlat
test
push
jo,pn
push
pop
inc
xchg
sbb
test
jge
data16
dec
sarl
out
mov
inc
mov
push
call
inc
cltd
sbb
sub
sahf
rorl
into
xor
add
xchg
cld
daa
lret
int
pop
jno
movsb
ret
sub
sti
mov
lock
push
or
imul
jg
popf
jmp
inc
popf
sub
cltd
mov
inc
mov
jae
adc
xor
fldl
mov
inc
stc
stc
pushl
inc
in
sbb
test
fisubrs
push
addr16
rolb
xor
push
jmp
cmpsb
insb
inc
jne
imul
mov
or
enter
pop
pop
adc
mov
in
sub
dec
pop
push
jae
push
cltd
adc
mov
movsb
test
adc
pop
fs
adc
fwait
daa
loope
testl
mov
addl
lods
or
movsl
outsb
leave
inc
stos
jno
movsb
fidivl
jne
mov
push
cs
ja
inc
stos
cmpsb
divb
shll
pop
imul
scas
mov
fs
les
xor
xchg
or
jmp
out
push
sub
sbb
aaa
or
pop
imul
or
dec
mov
pop
aas
lds
lcall
stos
out
mov
add
xorb
dec
add
loope
pop
sbb
in
mov
fnstsw
mov
cmp
repnz
mov
es
mov
std
xlat
jp
movsl
jne
push
in
es
mov
addr16
icebp
js
pop
in
bound
adc
sti
sub
in
xchg
popf
call
adc
cwtl
movsb
cmp
out
fstpl
xchg
testb
mov
out
sti
bound
movsl
adc
stc
mov
cmpl
loope
jbe
aam
cmp
jmp
cld
roll
mov
mov
fwait
mov
cmc
cli
ja
mov
add
out
popa
repnz
lea
cmpsl
jg
dec
pop
popf
ja
test
sbb
or
outsb
sbb
lods
pop
jae
rcrb
xor
stos
or
jl
iret
pop
addl
jbe
sbb
adc
add
xlat
je
mov
lds
sti
ljmp
stos
sbb
cmp
xchg
adc
lds
pushf
rorb
sub
aas
aad
pushf
hlt
sbb
cld
dec
es
and
pop
mov
cmpsl
ror
cld
mov
shrb
mov
jb
pushf
lods
rclb
loop
movsl
xor
dec
mov
imul
fsubs
test
loopne
int3
fwait
int3
fwait
scas
pop
test
mov
dec
loopne
and
dec
iret
and
cmp
ret
insb
mov
fidivrs
mov
mov
adc
leave
sub
jg
fwait
mov
inc
mov
xchg
sub
outsl
push
fs
adc
pop
icebp
adc
repnz
arpl
stos
pop
mov
and
xor
das
rcr
adc
jg
add
jnp
lret
cltd
pop
and
xor
inc
mov
mov
aas
pop
lock
loope
das
fs
fstps
sbb
enter
xabort
pushf
pop
iret
cwtl
nop
inc
loop
mov
ds
xor
xchg
les
loop
stc
dec
imul
cmp
mov
or
insl
ss
adc
xchg
aas
mov
ret
cmp
rol
add
enter
or
clc
call
mov
clc
out
lahf
cmp
or
mov
scas
popf
mov
inc
in
jne
movsb
lret
loope
fmull
sub
and
or
add
mov
xchg
das
les
jae
or
pop
xor
dec
xchg
fldt
fs
or
add
js
adc
mov
jge
dec
outsl
sbb
insl
mov
xorb
push
mov
jne
xchg
pushf
dec
lods
inc
jmp
xor
jl
dec
pop
fbstp
pop
insl
cld
aas
aas
cmp
cld
jno
lds
mov
push
outsl
jge
mov
mov
add
rolb
ficoms
push
stc
fs
aaa
xchg
push
adc
jecxz
dec
mov
negl
lods
push
xor
mov
cmc
dec
jecxz
lods
pop
and
cmp
push
add
je
dec
insb
add
movsb
or
sub
data16
test
int
xchg
lods
jb
inc
aad
dec
xchg
dec
cmpsb
mov
lock
hlt
das
sbb
sbb
mov
call
mov
jg
cwtl
mov
stos
mov
cmp
sbb
je
push
es
cmp
out
cmp
xchg
xor
or
push
stos
shll
adc
data16
stos
ja
inc
movsl
and
inc
ds
jae
js
xchg
push
xchg
aas
and
or
sub
hlt
faddp
adc
jle
or
or
ret
jb
div
and
mov
jp
cli
and
adc
insb
dec
cmc
mov
aam
dec
mov
or
mov
and
adc
bound
cmp
mov
push
lods
xor
mov
cld
push
lods
mov
dec
test
pop
cmp
inc
out
fs
xchg
ja
les
testb
sbb
sbb
mov
jge
adc
inc
push
push
pop
sub
jmp
jo
push
testl
out
inc
or
xchg
xor
das
loope
sub
mov
fadds
xchg
dec
out
dec
popa
push
adc
test
mov
xchg
fisubrl
sbb
test
jo
and
or
cltd
push
jno
aam
std
psraw
adc
xchg
jmp
cld
cwtl
out
shl
sbb
lock
push
pop
inc
add
mov
inc
adc
push
xchg
stos
stos
gs
pop
and
push
rcll
lahf
bound
mov
or
mov
sub
or
outsb
pop
cmpsb
add
je
dec
xor
or
shrl
in
inc
cwtl
in
mov
xchg
mov
ss
leave
jnp
mov
cmp
test
pushf
dec
div
std
mov
cmp
movsl
lcall
fnstsw
sub
test
or
xor
es
test
mov
fmuls
cmpsl
ds
adcb
dec
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
popa
cltd
cmp
lret
cmpsb
mov
push
ljmp
jne
jo
dec
in
xchg
es
jns
ljmp
int3
sbbl
imul
jmp
dec
lcall
data16
ss
xchg
push
ljmp
jno
shufps
xor
loope
subl
pop
or
loope
pop
adc
lods
fs
xchg
into
and
pushl
inc
fistl
cmp
icebp
mov
les
imulb
movsb
cmp
jno
xor
dec
pushf
push
mov
test
mov
fcoms
cmc
mov
int
sub
xchg
dec
jmp
jle
xor
out
or
cmp
daa
mov
lea
fdivl
and
xchg
arpl
movb
inc
xor
sbbl
xchg
lahf
ss
test
jle
lea
lcall
and
jg
cld
xchg
outsb
mov
cmpsb
cmp
and
js
add
es
pop
lahf
pop
repz
mov
fcompl
add
es
pusha
nop
fidivl
addl
add
aaa
mov
jno
or
int3
jb
jnp
in
mov
pop
into
pusha
div
cmp
popa
sbb
cmpsl
mov
fdivrl
mov
test
popa
or
movsl
xor
fidivs
fucomp
jg
scas
xchg
push
cli
pop
cmc
and
lods
inc
out
jle
test
clc
lahf
push
mov
sbb
dec
adc
cwtl
sahf
xor
mov
mov
xchg
sub
xor
pop
cmc
add
lea
cli
xchg
pop
scas
inc
jle
jne
clc
xchg
repz
add
dec
popf
push
lods
outsl
daa
mov
and
mov
jl
mov
pop
pusha
inc
xlat
cltd
call
loopne
in
ret
push
inc
fdivrs
mov
xchg
mov
flds
cwtl
in
mov
inc
jg
cltd
test
sbbb
leave
cs
cs
inc
fimull
pop
inc
insl
stc
xchg
popa
stc
lcall
push
in
jg
dec
push
jg
inc
insb
xchg
xchg
popa
jle
fwait
mov
mov
in
jnp
dec
push
sti
xchg
inc
insb
stos
inc
xchg
popa
stos
inc
fwait
mov
dec
icebp
mov
iret
dec
push
iret
inc
insl
mov
xchg
popa
ss
mov
jmp
in
jae
cmp
pop
lcall
test
outsl
push
out
inc
dec
sub
ja
scas
inc
mov
inc
loop
mov
and
and
rcrb
or
adc
pop
icebp
insl
mov
popa
mov
lret
bound
ficompl
mov
das
pop
pop
and
push
pop
jp
movsb
jg
mov
dec
fwait
xor
and
imul
decb
std
xchg
movsl
outsb
ljmp
mov
stc
pop
add
out
jp
mov
mov
cmp
test
in
dec
hlt
stc
cs
inc
xchg
push
xor
mov
mov
lahf
dec
notl
dec
xchg
push
and
out
scas
push
call
aaa
cli
mov
out
inc
mov
mov
mov
inc
fisubrs
std
cmp
and
inc
mov
shll
and
sub
and
js
pop
lock
mov
ret
cmp
jecxz
push
sbb
test
jmp
dec
stc
jae
aaa
into
mov
sub
lret
rcrb
pop
das
es
aaa
mov
jo
and
mov
ret
cld
out
dec
loopne
push
lods
inc
dec
cmp
popa
xchg
test
pop
mov
loopne
stc
sbb
lret
bound
fsubl
sub
xchg
mov
add
shll
les
and
xchg
jp
cld
movsb
mov
inc
lock
mov
jb
and
add
mov
xor
les
mov
adc
mov
and
ds
push
in
inc
pop
lods
inc
mov
cmp
mov
insb
add
arpl
xor
push
push
cmp
mov
mov
or
cmc
pushf
xor
dec
sub
jne
and
shrb
inc
sub
mov
jp
inc
lods
inc
jg
insb
add
lahf
arpl
in
jp
call
sub
jns
mov
sbb
mov
mov
mov
jl
dec
jecxz
popf
lods
inc
jnp
cmp
rolb
cwtl
or
pop
sub
pusha
xchg
insl
mov
int
mov
ficompl
xchg
push
xor
cwtl
push
mov
rol
in
repnz
je
adc
hlt
inc
cmp
push
xchg
xchg
cmc
mov
mov
dec
in
outsl
push
and
in
xor
jo
push
insl
test
cmc
mov
in
mov
cmp
add
test
cmp
pop
add
lds
push
push
jmp
jg
push
lods
movsl
jbe
ror
mov
cli
xrelease
sub
pop
dec
dec
movsb
cmp
shlb
lahf
mov
fwait
ljmp
lods
cmp
lock
cmp
xchg
or
out
lret
adc
dec
in
xor
ja
mov
lcall
cld
test
das
addr16
loop
jnp
scas
inc
mov
pop
or
adc
pop
inc
xor
xorb
mov
pop
in
rcr
or
add
imul
xor
or
sub
lret
enter
cmp
and
fsubs
mov
jo
pop
out
mov
in
ret
fildll
add
adc
pop
inc
inc
in
jne
inc
stos
lods
outsl
stc
rol
aam
cld
std
jnp
and
add
and
mov
sub
test
add
cmp
push
outsl
clc
mov
jge
jbe
sub
mov
dec
mov
jge
lcall
out
cmp
in
jb
aaa
mov
movsb
outsb
xchg
jbe
xorb
mov
shll
push
es
pop
and
push
stos
jno
fs
nop
ss
loopne
xchg
and
and
jno
icebp
xchg
popf
lahf
push
hlt
shll
and
add
fiaddl
stos
dec
push
js
repnz
loopw
movsb
test
pop
mov
push
add
mov
mov
cs
lret
add
cmp
ljmp
jp
mov
adc
or
sub
pop
ret
jo
stos
lock
sbb
iret
xor
and
pop
dec
pop
xlat
subb
popf
xorb
ljmp
adc
ss
in
arpl
adc
pop
adc
inc
and
push
xchg
xchg
sti
jle
mov
push
faddp
jmp
pop
sub
pop
mov
jge
inc
lock
cmp
rclb
je
inc
out
in
xchg
pop
and
jne
aam
out
push
ffreep
sbb
scas
xor
dec
jmp
push
cmp
subl
adc
int
dec
add
fstps
cwtl
mov
int3
scas
loop
fucomi
lods
cmp
cmc
sti
xchg
inc
mov
mov
xchg
int3
pop
iret
mov
lock
and
pop
out
push
sti
xorl
pop
pushf
cmpsl
fwait
and
cmc
adc
aas
aaa
and
mov
adcb
cmp
rcll
add
xor
push
jp
or
int
daa
enter
sbb
sub
lahf
insl
andb
mov
ds
outsb
sub
bound
pop
fnstenv
dec
out
sub
test
pop
mov
mov
lods
adc
jbe
aad
dec
incb
xchg
test
je
pop
push
loop
test
jg
mov
and
imul
jecxz
loop
pop
sub
jg
adc
pop
jnp
adc
mov
int3
xchg
sub
ret
mov
or
sti
xchg
bound
leave
pusha
pop
sbbl
mov
jmp
rolb
rorb
mov
pop
and
ret
jnp
lods
jbe
call
dec
imul
and
push
push
sbb
popa
movsl
outsb
mov
mov
shr
repz
rorb
cmp
or
fbstp
mov
mov
cmp
or
xchg
pop
insl
mov
popa
out
hlt
mov
or
cmpb
adc
mov
movb
dec
loopne
incl
xor
outsl
push
sub
pop
hlt
orl
jg
jae
mov
rcrl
stc
nop
es
mov
jns,pn
sbb
dec
lret
out
mov
push
inc
fnstenv
cmp
mov
mov
test
cmpsb
mov
adc
stc
pop
xor
mov
dec
loop
fstl
push
lea
mov
loopne
and
fisttps
inc
bound
scas
inc
pop
adc
les
addr16
in
pushf
sub
add
cmpsl
cmp
mov
shrl
xchg
or
mov
out
jecxz
je
cmpsl
ds
xchg
icebp
mov
fcomps
mov
into
jecxz
adc
das
cmp
repnz
pop
bnd
and
in
xor
xlat
add
arpl
push
cmpsb
cmp
les
ja
shrb
cwtl
in
adc
repz
mov
adc
push
scas
lods
inc
popa
jae
xor
test
data16
mov
lea
add
xchg
aaa
push
adc
xchg
xchg
sub
ljmp
dec
dec
pop
out
jo
arpl
mov
xchg
aad
xchg
sub
adc
inc
xlat
pop
or
int3
jge
jmp
in
lret
bound
mov
push
popf
xor
jl
adc
mov
and
lahf
xchg
shrl
inc
shrl
in
push
cli
es
out
fidivrl
mov
arpl
ljmp
ret
rep
insl
adcb
pop
inc
testl
jg
dec
cmp
rcrl
pop
mov
lea
ss
add
je
cwtl
and
push
int3
adcl
loopne
icebp
xor
and
out
mov
icebp
aad
mov
push
out
cmpsb
in
jno
enter
aas
clc
jno
nop
daa
lea
popa
clc
js
cmpsl
lods
adc
aas
dec
xor
lock
push
push
call
or
mov
or
inc
pop
sub
lea
popa
xchg
scas
dec
loopne
mov
jle
add
add
mov
test
outsl
mov
shrl
cli
xchg
sub
xchg
sub
mov
jmp
lret
add
sbb
in
test
stos
mov
fisttpll
je
xor
add
dec
test
shrl
lods
xor
fisttpll
push
lahf
sub
and
dec
mov
pop
jmp
push
pop
inc
jle
adc
lods
repz
adc
daa
push
push
mov
dec
in
sbb
push
pop
arpl
xor
xlat
hlt
bound
cmp
data16
test
jp
mov
dec
cmc
mov
into
mov
dec
fdivrs
loop
and
into
out
pop
jnp
jnp
pusha
jg
mov
scas
and
push
cs
outsb
mov
mov
mov
imul
sub
cmp
sbb
xor
mov
mov
xchg
adc
ret
jne
fcomip
fistpll
xor
push
hlt
and
mov
jno
and
call
push
in
stc
clc
mov
jge
das
sbb
xchg
xor
fwait
pop
adc
push
test
mov
inc
sbb
cltd
sub
fcomp
and
add
orb
xchg
lret
fdivl
mov
call
test
jo
pushf
ret
hlt
fisttps
push
adc
repnz
mov
pop
sub
shrl
pop
jecxz
dec
pop
pop
repz
mov
lcall
and
dec
cli
jl
shrb
push
in
inc
insl
stc
pop
insl
repnz
mov
push
out
mov
icebp
inc
inc
mov
insl
pushf
xor
jge
mov
or
test
xchg
sbb
pop
scas
xor
mov
cmp
lret
inc
lods
stc
sbb
pusha
jb
push
pop
xchg
add
dec
mov
cmp
pop
xor
out
lods
pop
popa
clc
mov
push
popf
xlat
and
cmp
shrl
ret
inc
fisttpll
mov
imul
stc
pop
sub
push
je
mov
dec
mov
sti
ljmp
dec
pop
jnp
sbb
inc
xchg
popa
clc
ret
test
mov
jmp
popf
sbb
pop
scas
call
jmp
stos
fisttpl
adc
sbb
adc
push
push
lods
dec
and
mov
adc
adc
loope
outsl
push
or
mov
shlb
mov
call
jmp
test
mov
mov
roll
popf
add
adc
cmp
or
cmpsb
je
lods
data16
js
and
pop
fwait
adc
stos
dec
and
idivb
adc
push
scas
and
stos
and
lods
xchg
ret
mov
mov
push
and
lods
mov
stc
and
test
inc
mov
adc
xchg
lret
mov
mov
sbb
test
and
lods
xchg
arpl
mov
rclb
icebp
and
xor
lds
rcrb
mov
jne
jp
inc
insl
or
mov
arpl
mov
out
test
mov
fimuls
add
xor
mov
pop
stc
nop
cmp
imul
into
gs
cmp
and
fidivs
aad
push
xchg
jns
leave
add
push
mov
jbe
push
imul
mov
cmc
mov
xchg
adc
stc
nop
adc
clc
inc
cmp
xor
cli
xchg
shlb
jne
in
outsb
add
insl
sbb
push
mov
int
aas
mov
mov
pop
cmc
pop
xor
cld
cmpsb
jno
nop
mov
int
xor
dec
sbb
rorl
jge
cli
fnsave
aad
ljmp
push
ficompl
push
mov
sbb
push
cltd
leave
cld
xchg
mov
mov
cli
xchg
cmp
push
popf
xor
fnstsw
ror
mov
shl
adc
rolb
sarl
mov
jns
mov
mov
and
mov
aam
inc
pop
cmc
js
cmp
jle
stc
nop
lds
aam
in
sahf
xor
popa
cmp
shrb
cmp
push
test
jne
xchg
inc
flds
dec
cmp
cmp
push
mov
cmp
fisubrl
lods
ds
fistps
punpcklwd
push
daa
stc
nop
pop
xchg
cmp
movsb
push
sub
dec
into
cmp
add
fidivs
pop
sub
dec
jbe
adc
ret
hlt
push
sub
inc
push
mov
aad
jns
hlt
test
sar
repz
aam
sbb
lret
adc
aad
sahf
xor
aad
adc
aad
fwait
xor
lods
adc
aad
fwait
xor
sbb
lret
cmp
jno
cmp
mov
lods
fidivl
aam
adc
dec
ja
cmp
sbb
popa
sub
stos
pushf
mov
inc
mov
stos
dec
loope
dec
sti
xchg
xchg
dec
jmp
cmp
sub
rclb
sub
sarl
jae
adc
jnp
int3
aam
add
out
mov
adc
stos
xchg
push
xchg
aam
aas
mov
cmp
xor
xchg
push
fsub
jge
inc
pushf
xor
lods
cmp
in
and
mov
mov
jp
xchg
das
pop
negb
fsubrp
adc
mov
xor
sub
mov
mov
pushf
xor
xor
mov
mov
fdivl
push
mov
dec
cli
jnp
sub
inc
sbb
jne
repnz
popf
mov
xor
call
xor
nop
xor
xchg
addr16
je
pushf
xor
pop
jb
js
cmp
sbb
sbb
jae
insl
fwait
xor
jnp
mov
sbb
adc
xor
mov
mov
test
jecxz
xor
xchg
push
sbb
mov
sub
cs
jae
test
pop
adc
add
cmp
pop
inc
or
stos
xor
adc
test
stos
sbb
push
mov
dec
mov
scas
inc
xor
dec
out
xor
adcb
cmpsl
adc
and
inc
sub
clc
xchg
mov
inc
sti
xchg
cs
insl
push
mov
out
xchg
cs
adc
mov
fwait
add
fnstenv
jne
mov
push
jg
inc
xchg
xchg
sub
sahf
cmp
mov
mov
xchg
jmp
add
mov
lea
fidivl
push
pop
mov
icebp
jge
and
sbb
in
mov
xchg
fninit
pop
icebp
adc
fdivl
cmp
xchg
insb
iret
cmp
mov
mov
cmp
or
lds
mov
jge
mov
aad
mov
pop
jg
dec
sub
gs
add
repnz
sar
repz
and
dec
cmpsb
add
xchg
pop
fnsave
fdivl
popl
lcall
jl
dec
mov
mov
hlt
jg
out
mov
in
sbb
or
mov
test
shlb
sahf
sbb
dec
fldl
int
hlt
mov
xchg
sub
ret
mov
xor
imulb
imul
fstps
leave
or
stos
cmp
mov
mov
xchg
jno
scas
push
ljmp
hlt
mov
popfw
xor
inc
xchg
sub
jno
setle
rorb
cmc
inc
cli
shrl
test
jbe
pop
lock
jmp
xor
cld
mov
das
and
xchg
inc
push
ljmp
hlt
mov
add
jno
xchg
sub
inc
xor
jne
pop
icebp
push
popf
shrl
cwtl
mov
or
dec
gs
cmp
stos
data16
dec
ret
mov
std
and
push
ljmp
hlt
mov
dec
loopne
adcl
jp
xor
adc
loopne
cmp
push
sahf
xchg
adc
data16
inc
sar
xchg
add
fwait
xor
gs
out
ja
shll
iret
push
pop
repnz
sub
rorl
mov
pop
pop
hlt
ja
mov
sub
pop
repz
insb
pop
icebp
pop
fs
xchg
xchg
popf
xchg
sub
rcrb
sbb
dec
inc
xchg
sub
arpl
jb
xor
movsb
mov
xchg
sub
sbb
dec
sub
pushf
popa
xchg
sub
mov
dec
out
lcall
fs
test
sbb
cmp
sub
sub
stos
sub
xor
loope
xchg
xor
xchg
sub
outsb
add
push
mov
fisttpl
cmp
adc
pop
xorb
mov
mov
cmp
mov
sti
xchg
es
in
push
dec
pop
lods
jns
jne
pop
cltd
xor
leave
jnp
sub
mov
std
ds
insb
push
mov
mov
leave
adc
pop
pop
sbb
jnp
jne
out
aad
cltd
add
imul
sbb
aad
jbe
aas
test
pop
repz
leave
pop
sti
sbb
dec
sbb
jl
insb
cltd
xor
mov
and
inc
adc
inc
gs
mov
mov
jl
jmp
or
out
push
cmp
test
and
adc
xlat
lods
inc
enter
test
enter
mov
js
negl
sub
pushf
pusha
inc
std
xchg
je
and
rolb
iret
aaa
cli
cmp
in
inc
fidivl
cmpsb
jne
sbb
mov
push
mov
add
mov
push
mov
in
test
std
xchg
adc
fnstenv
push
inc
xlat
inc
mov
mov
rcrl
mov
cmc
jge
out
mov
and
cmpsl
adc
xchg
add
int3
arpl
sub
xchg
jmp
ds
sbb
mov
fnstenv
lret
inc
fnstcw
mov
sbb
lahf
int
push
fiadds
icebp
dec
adc
sub
sarl
xor
not
imul
sbb
xchg
mov
jo
leave
cmp
mov
mov
sbb
mov
movsb
cli
xchg
pop
mov
cmp
dec
push
xchg
cmp
cltd
xor
mov
push
pop
or
inc
fisttpl
adc
cld
movsb
cmpsl
xlat
inc
pop
lock
das
hlt
cli
xchg
out
xlat
outsb
jns
inc
fcmovnu
xchg
jo
ret
push
jle
sub
ret
cmp
push
std
xchg
inc
test
mov
sub
cmc
loopne
inc
adc
jp
ljmp
inc
fiaddl
cli
xchg
mov
mov
adc
sub
mov
stos
jge
sbb
sub
mov
xchg
and
aaa
into
pop
and
xchg
je
cmpsl
aam
adc
iret
addr16
incl
mov
jns
add
outsl
outsl
cmpsb
cmp
pusha
leave
inc
fdivr
jbe
adc
inc
cltd
mov
or
and
lret
sti
fistps
iret
adc
arpl
cmp
out
insl
imul
pop
sbb
call
add
xor
inc
mov
ss
sbb
xchg
sub
hlt
mov
es
hlt
mov
push
sub
orl
fisttpl
aas
rep
add
dec
or
cbtw
lods
inc
lret
rorl
in
loop
cmp
in
xorl
adc
pushf
mov
into
add
jl
call
mov
divl
lret
bound
mov
add
aad
mov
xorb
inc
bound
dec
loop
push
jb
dec
fsubr
orl
out
insl
and
and
mov
push
subl
xor
lret
bound
inc
xchg
aaa
sub
inc
push
in
aaa
je
mov
aaa
int
inc
incl
cmpsb
aaa
pop
dec
jecxz
inc
sbbb
jmp
xchg
dec
into
gs
dec
rcrl
sub
dec
push
mov
bound
mov
mov
mov
or
stos
inc
xchg
mov
mov
mov
dec
mov
mov
cmp
push
ds
mov
mov
scas
cmpsl
and
call
sti
pop
pushf
xor
test
rcr
fnsave
fnsave
mov
adc
lods
sbb
xor
daa
loope
decb
hlt
nop
std
es
mov
fidivs
clc
pop
lock
es
xor
pop
push
aam
jae
jge
or
push
es
inc
fcmovbe
jl
jno
icebp
mov
outsl
mov
lea
jo
test
add
xchg
or
cmp
inc
dec
out
cmp
ljmp
mov
jl
and
xchg
cltd
mov
iret
fsubr
or
ja
inc
nop
ret
call
push
in
test
sbb
aaa
jle
mov
xchg
jae
push
fs
pop
repz
cld
xchg
xor
xchg
pop
pop
fwait
xor
test
rcr
dec
das
cmp
cmp
jl
subb
mov
pusha
add
and
xchg
cs
dec
sub
cmp
insl
stos
loop
xor
ds
jo
testl
add
jl
sbb
push
lods
cmpsl
xor
mov
xlat
ret
pop
enter
mov
aad
repnz
pop
std
xchg
nop
xor
xchg
bound
fwait
xor
xlat
cmp
or
sub
cltd
jge
adc
enter
sub
xor
inc
jmp
dec
loope
jmp
in
test
in
outsl
push
filds
mov
xor
and
out
scas
inc
loopne
lret
fsts
stc
test
insb
jecxz
shl
ja
dec
jmp
jle
pop
cmc
test
fidivs
loope
bound
adc
test
insb
add
fsubrs
xchg
mov
dec
fildll
insl
cmp
push
push
jmp
mov
enter
mov
adc
sub
imul
fsubrl
xchg
int3
inc
push
lock
or
jne
lods
inc
movsb
test
aad
into
dec
loop
add
in
test
mov
imul
xchg
push
adc
mov
sub
bound
push
xchg
inc
push
insb
add
stos
or
loope
lods
inc
sub
movsl
cmp
inc
dec
loop
adc
in
add
rcrl
mov
mov
inc
jb
cltd
xor
pushf
dec
loop
sbb
stos
mov
in
adcl
popf
xor
aas
mov
jno
adc
lret
xor
in
bound
sbb
stos
mov
add
fdivp
mov
fwait
or
je
lods
inc
adc
cmp
xchg
sub
in
cmpl
mov
pop
dec
push
in
cmp
sub
pop
xor
gs
pop
scas
js
imul
dec
push
xsha1
cmpsb
dec
adc
repz
cltd
loope
mov
loop
sti
xchg
rorb
cmpb
in
xlat
pop
mov
mov
cmp
dec
jne
pop
jp
push
pop
jns
lea
mov
inc
xchg
sub
repnz
sbb
dec
pop
cmc
jge
push
in
push
xchg
stc
nop
enter
dec
loop
xor
add
cmp
jo
std
xchg
movsl
pushf
cmc
mov
aad
popa
call
inc
fdivrs
xor
pop
insb
mov
imul
mov
test
inc
jle
dec
mov
cld
xchg
cmc
fsts
or
aam
ljmp
rcr
jl
imul
into
aaa
into
shl
sub
add
dec
ja
xor
push
imul
hlt
lahf
sub
nopl
dec
lods
inc
inc
jp
jp
test
ret
test
or
mov
and
mov
jbe
les
inc
mov
xor
cmp
shrl
mov
iret
addr16
cltd
ljmp
sbb
pop
mov
nop
or
mov
adc
rcrl
mov
inc
test
test
sub
test
cmpsb
test
sub
and
and
jle
mov
insl
lds
les
rclb
ret
pop
insb
ss
out
addr16
sub
adc
ret
in
xchg
push
cmpsb
sub
sbb
and
popf
test
lds
popa
ret
cmp
jle
jae
les
jb
mov
fistl
add
insb
sub
xor
mov
test
clc
and
cmc
das
push
or
cmc
leave
test
dec
xor
xchg
xchg
aad
cmc
movsl
xor
xor
jne
in
xor
adc
push
push
popa
test
or
movsb
ds
xchg
sbb
or
lock
ss
out
mov
mov
loope
loop
mov
fidivs
shrl
stos
les
hlt
push
cmpsb
ret
jge
and
push
jmp
lret
xchg
outsb
je
and
adc
or
outsb
repz
cmc
and
je
jns
adc
cs
xchg
lret
daa
add
fldenv
js
mov
inc
pop
xchg
adcl
adc
sub
and
sbb
sub
dec
inc
ss
cmp
jae
ret
pop
aas
arpl
or
lock
rcrb
les
movsl
push
repz
jg
mov
xchg
and
xchg
jle
inc
mov
sub
sbb
dec
lret
mov
mov
mov
push
leave
mov
push
rcr
mov
wrmsr
into
sub
jmp
mov
jecxz
xor
pop
mov
or
pop
je
xor
lds
dec
cmp
mov
and
lcall
repnz
jae
inc
rcr
or
rcr
push
int3
xchg
mov
jge
mov
push
cli
sub
and
repz
inc
mov
lret
ret
stos
loop
and
jno
inc
jmp
inc
adc
pop
jmp
xchg
sbb
mov
push
loop
mov
aaa
lods
lret
repz
push
dec
mov
repz
imul
mov
jns
and
test
inc
pop
out
sub
enter
jbe
jle
out
sbbl
mov
and
and
ja
dec
in
cwtl
mov
add
jmp
push
sbb
fdivl
push
test
fcoml
leave
pusha
das
in
scas
push
push
out
xorl
int
movsb
add
jmp
mulb
mov
push
stc
lret
bound
ja
sub
lret
cld
lahf
pop
sahf
rcrb
and
test
jge
cltd
scas
push
arpl
aas
iret
and
xchg
and
aad
mov
xor
pop
jb
mov
adc
loopne
xor
in
nop
daa
xor
push
out
push
scas
call
inc
inc
sahf
js
fsts
xchg
inc
sub
inc
pop
popa
push
mov
jg
arpl
outsl
and
mov
adc
loope
xor
loope
nop
daa
xor
push
out
push
scas
jmp
push
test
scas
fnstcw
jne
jno
xor
sub
dec
push
ljmp
pushf
xor
imul
mov
and
dec
pop
out
jns
test
or
xchg
in
adc
push
mov
xor
jno
add
out
pop
and
push
mov
fsub
aaa
mov
imul
sub
mov
enter
or
cmp
lcall
xchg
cmp
mov
int
fists
cli
xlat
pop
sbb
frstor
aad
insb
xchg
push
fldl
repz
fs
pop
cmpsb
cmpsb
dec
out
pop
in
adc
jge
mov
fstpl
aam
xor
repnz
adc
cmc
mov
xchg
xchg
cs
sub
stos
pop
ljmp
scas
cmp
dec
out
xchg
icebp
mov
and
push
in
cmpsb
adc
ss
inc
cli
mov
mov
fisubrl
or
out
mov
ret
repz
inc
rol
pop
add
es
pop
mov
call
xor
sbb
loope
shll
or
xchg
popa
adc
out
dec
sahf
sbb
das
and
imull
mov
xchg
bound
pushf
and
push
sub
adc
dec
sub
lods
mov
das
nop
repnz
stos
push
inc
mov
add
xlat
sub
rclb
ficomps
add
xchg
test
sub
test
int3
sub
dec
cwtl
pop
je
xor
jmp
sub
adc
out
hlt
jl
imul
and
sti
cmp
push
mov
push
mov
push
icebp
cwtl
outsb
into
lahf
push
xor
pop
popf
pop
fstpl
int
push
outsb
mov
fnsave
adc
jg
jecxz
xchg
adc
add
scas
push
mov
fsts
push
pop
pop
testb
jnp
faddl
xor
fdivl
dec
jg
shrl
pushf
aad
iret
mov
gs
cmc
mov
cli
in
xchg
cmp
stos
imul
lret
sub
lret
fstl
or
xor
arpl
push
jno
xchg
sub
aam
dec
push
out
inc
sbb
mov
adc
mov
insb
adc
iret
inc
mov
and
jae
andb
iret
lock
stc
pop
jbe
adc
imul
push
test
pop
xchg
in
inc
pop
mov
mov
xchg
in
les
test
inc
sub
in
jecxz
rorb
hlt
dec
push
xor
add
popl
arpl
cmpsb
xor
sbbl
mov
push
and
imul
ds
xor
xor
push
subl
hlt
fdivrs
outsl
jnp
dec
push
gs
leave
dec
lahf
xor
fsubr
adc
sti
xor
jno
push
mov
enter
adc
test
jl
iret
and
xor
test
sub
nop
ss
outsb
repnz
aam
scas
pop
and
add
pop
xchg
add
adc
data16
adc
daa
cmpsl
std
jmp
jl
fs
xor
pop
lods
xor
dec
push
aas
sbb
jle
scas
out
add
repnz
jl
aas
ret
push
xchg
and
cmp
cli
adc
jb
mov
lahf
jns
xlat
inc
stos
mov
mov
mov
or
es
test
cmp
mov
mov
mov
mov
leave
inc
insl
mov
mov
xor
and
stc
jb
ret
pop
pusha
imul
outsl
nop
dec
pop
xchg
adc
mov
jns
in
mov
mov
shlb
hlt
inc
pop
cmp
jbe
mov
ret
repnz
adc
xlat
and
mov
xor
inc
ja
std
lods
movsl
clc
xchg
in
jmp
test
int3
sbb
mov
xor
aad
jo
cli
mov
mulb
cmp
fmul
xchg
cmpsb
adc
jb
mov
xor
shrl
push
int
mov
mov
xchg
push
sub
mov
cmp
push
rclb
movsl
pop
pop
cmp
stos
mov
stc
lahf
sbb
adc
shlb
push
xorl
fadds
push
cmp
xchg
stos
inc
adc
les
shrb
aam
insb
nop
rol
cld
xor
mov
and
mov
sbb
xor
je
xor
cltd
add
scas
pop
cld
pop
nop
pminub
lret
pop
sbb
addb
pop
dec
fadd
sub
rclb
xor
sub
inc
cs
adc
insl
notb
shlb
add
imul
inc
cmp
or
int3
sub
jmp
mov
mov
inc
inc
ret
adc
mov
cltd
sahf
cmp
jecxz
push
mov
movsb
ret
cmp
lahf
add
out
test
sti
sbb
dec
adc
roll
dec
pop
add
jl
pop
sti
jecxz
pop
inc
mov
pop
jae
dec
cmpsb
pusha
nop
lret
add
and
pop
sbb
adc
sbb
lock
nop
ljmp
pop
pop
sub
cltd
test
jge
int3
push
add
dec
lods
test
sub
inc
test
cs
out
imul
mov
outsw
ljmp
std
jnp
add
push
and
add
ret
insl
sbb
adc
jns
add
movsb
xor
lahf
cmp
and
and
lds
push
gs
xchg
cmc
cmpsb
inc
jp
push
mov
lar
or
jns
inc
movd
mov
scas
out
fsubrl
aad
cmp
popa
dec
inc
xchg
outsl
mov
mov
mov
cmpsl
imul
repz
outsb
popa
out
inc
adc
neg
enter
push
xor
mov
push
add
xor
in
push
sub
lods
sub
mov
sti
mov
int3
mov
movb
dec
adcb
sbb
sbb
enter
sbb
sbb
sbb
mov
scas
xchg
push
rorl
xor
loopne
pop
cs
xor
push
xorb
and
fsubrl
scas
add
lods
daa
sub
adc
cmp
cld
pop
jae
xor
ficompl
push
jg
ret
mov
pop
mov
mov
sbb
sbb
mov
lcall
imul
fists
push
mov
sti
mov
es
push
push
jmp
mov
xchg
cmc
fidivrl
es
jge
lahf
lret
arpl
lret
es
mov
icebp
pop
inc
fstpt
mov
in
jmp
aad
in
pop
mov
lret
sub
lret
shl
pop
adcl
test
addr16
pop
mov
sahf
nop
rorl
mov
stos
xor
int3
pushf
inc
and
inc
xor
dec
lcall
sbb
cmp
loope
repz
mov
cmp
fists
inc
xchg
jg
frstor
outsl
mov
push
pop
lea
shrb
jbe
mov
adc
xor
and
adc
mov
sahf
cmp
xor
clc
test
mov
sub
lods
inc
xchg
cmp
hlt
insl
inc
xchg
daa
in
inc
shr
pop
xchg
pop
cmpsb
ret
pop
or
inc
jge
mov
sbb
aad
fwait
mov
dec
pop
xor
repnz
das
cmpsl
popf
and
dec
roll
mov
xchg
push
rorb
push
mov
cmp
mov
sti
addb
stos
stos
movsl
add
dec
loopne
cmpsb
ds
xchg
jg
or
lds
xchg
dec
fidivs
fimuls
xlat
mov
adc
cmp
push
scas
popf
call
xor
and
pop
dec
fs
lds
pusha
ret
fdivrs
sahf
xor
ret
pushf
jae
es
jp
orb
mov
cmp
pushf
testb
sub
inc
and
and
xchg
scas
push
sub
and
push
xchg
sub
mov
cltd
push
xchg
mov
outsb
add
les
cmp
xchg
repz
push
outsl
push
inc
shlb
push
xchg
jo
add
sub
push
test
xchg
scas
mov
pusha
mov
mov
jge
adc
lcall
xorl
and
jns
movsl
imul
addr16
xchg
sub
movsl
cmp
fstpt
or
ret
pop
shrl
loop
imul
scas
xor
or
jl
pop
xchg
lea
bound
sbb
and
mov
rcll
xchg
je
je
inc
inc
xlat
xchg
arpl
sti
mov
jae
fiaddl
jl
int3
dec
aam
xor
lret
loope
rcrb
push
jmp
and
pop
movsb
inc
sbb
and
sbb
lock
sahf
cmp
insb
mov
xchg
sub
adc
lahf
inc
loopne
dec
adc
mov
gs
fucomi
xchg
xchg
sbb
scas
lahf
ss
dec
loopne
add
incb
push
fdivl
and
xchg
cmpsb
cld
sbb
push
mov
iret
dec
test
cmc
mov
mov
pop
cwtl
xchg
add
insl
xchg
jge
jno
mov
gs
stc
cwtl
mov
sub
mov
test
cs
je
xlat
inc
cwtl
jnp
mov
mov
jns
dec
xchg
js
popf
fsubrs
pop
subl
pop
in
std
lds
cld
adc
sub
or
pop
cmp
adc
dec
dec
cmp
in
rcll
ss
out
addr16
rorl
das
and
inc
dec
in
das
mov
popa
cltd
imul
adc
mov
mov
push
out
test
inc
cmpsl
jb,pt
or
pop
xchg
lds
sub
lods
out
jp
into
dec
cmp
cwtl
push
addr16
push
mov
mov
jb
sbb
fnstsw
cmp
das
pop
repnz
sbb
pop
dec
cmpl
sahf
aam
cs
sar
repnz
mov
pop
adc
inc
mov
leave
int
imul
call
fsubrs
cmp
insb
jae
lea
dec
push
jmp
and
imul
pop
sub
mov
fdivl
lret
mov
fsubr
insb
cmp
pop
lea
mov
jo
rcrl
pop
lock
inc
ficomps
adcb
xchg
sub
ja
stc
dec
loopne
cmp
pop
hlt
rcrl
dec
data16
xor
dec
loopne
cmpb
repz
inc
adc
ds
jb
sub
mov
sti
cmp
mov
iret
int3
fnsave
pop
out
mov
inc
xor
mov
adc
mov
jne
dec
loope
xchg
mov
or
sbb
pushf
cmpsl
mov
mov
pop
dec
jecxz
dec
gs
inc
cs
insl
pop
popa
lret
lcall
jne
mov
incb
and
mov
test
aas
loopne
pop
lds
sbb
cli
in
and
popf
ljmp
and
jl
es
push
adc
sahf
xor
das
ret
dec
fbstp
fsubrs
cltd
lahf
ss
hlt
fldenv
jo
cli
jecxz
in
inc
xchg
jl
xchg
sub
sbb
mov
adc
mov
sbb
imul
mov
shrb
and
enter
lret
outsl
pop
cmc
xchg
in
ljmp
decl
lock
mov
sbb
orb
add
push
mov
mov
aaa
call
int
xchg
sub
xchg
iret
xor
xchg
dec
add
ljmp
pop
jg
cmp
inc
inc
fnstsw
aam
sub
dec
aad
inc
in
out
bound
push
rcl
add
jo
movsl
das
out
cmp
cli
sbbb
lea
mulb
inc
xchg
sub
xor
cmpsl
inc
sti
stc
nop
sbb
inc
pop
mov
sarl
cmp
jp
test
lea
out
pop
xor
nop
push
and
and
mov
out
xor
push
in
dec
mov
ja
imul
mov
dec
rclb
push
movsl
jmp
ss
and
xchg
push
gs
outsl
mov
movsl
and
pop
repz
inc
xchg
sub
ljmp
dec
mov
sbb
aad
jge
jg
lcall
add
xchg
pushf
and
xchg
ss
data16
lea
adc
mov
cmp
cmc
mov
pop
push
in
dec
lret
add
dec
popa
stos
or
hlt
js
jp
adc
add
sbb
fnstenv
call
test
into
jge
ror
mov
loope
psrlq
stos
inc
out
fbstp
pop
mov
inc
bound
movsb
cmp
sub
loope
jge
mov
xchg
sub
push
arpl
inc
sbb
mov
repnz
js
lea
adc
adc
sti
or
mov
mov
or
lods
shrl
inc
sbbb
js
fisubl
dec
lea
imul
sbb
dec
loope
lods
inc
add
pop
lock
inc
ficoms
mov
sbb
mov
in
dec
sbb
mov
push
mov
mov
sub
pop
jg
ss
cmc
mov
xchg
in
add
daa
testb
mov
lahf
ss
dec
mov
aas
aas
dec
loopne
pusha
pop
push
jno
fistpll
or
mov
rcrl
xchg
sub
mov
pop
pop
add
xor
lds
push
je
inc
movsl
aam
mov
push
sbbb
jp
hlt
imul
ret
dec
mov
pop
loope
sub
and
in
mov
or
inc
pop
sahf
aaa
mov
dec
pop
ljmp
pop
out
sub
sub
xchg
cmc
nop
cwtl
das
add
jmp
xchg
jo
sbb
inc
xor
xchg
dec
arpl
cmp
je
dec
or
nop
inc
insl
inc
fstpl
add
repnz
mov
adc
xchg
movsl
cmpsb
xchg
sub
dec
or
stos
sbb
lahf
cmp
aam
aad
fistps
rclb
push
out
insl
pop
icebp
scas
add
popa
jne
and
or
push
ljmp
cmc
mov
mov
mov
mov
mov
aas
pop
and
push
and
xchg
enter
repz
test
xchg
clc
sbb
mov
adcb
test
enter
or
shlb
shrl
clc
pop
loop
out
shl
cs
pop
lock
gs
add
push
in
jns
sti
xchg
aam
push
mov
jge
sub
sub
int
dec
pop
sahf
nop
mov
test
test
aas
pop
scas
aas
bound
jl
jbe
jmp
jmp
lcall
mov
inc
mov
hlt
mov
inc
cltd
xor
cmp
xchg
push
ljmp
out
mov
cmpsb
xchg
sub
mov
mov
xchg
push
mov
mov
je
jno
mov
ret
mov
nop
push
insb
mov
pop
mov
inc
loope
in
jno
adc
add
pop
lahf
and
loope
cmp
test
iret
xlat
outsb
push
dec
mov
ds
aas
push
popf
mov
add
mov
pop
ret
test
mov
mov
jl
stos
jns
sbb
lock
pop
imulb
shr
test
mov
clc
aad
jbe
out
negb
xor
or
push
pushf
mov
mov
das
les
push
push
mov
and
aam
fcmovb
cli
scas
inc
das
out
insl
mov
add
shrl
mov
pop
in
push
aas
jg
pusha
neg
mov
add
movsl
pusha
mov
popf
pop
divb
fsubrs
xchg
in
cmpsb
into
gs
or
ror
adc
mov
jns
pop
lcall
mov
test
cmp
sub
xchg
sub
mov
std
fdiv
add
xchg
add
je
push
lods
fs
jno
pop
adc
dec
sub
lcall
lcall
jmp
inc
mov
pop
scas
push
xchg
add
data16
inc
test
pop
jns
movsb
sbb
mov
repnz
lods
int
push
pop
lea
scas
stos
inc
and
out
in
sahf
xor
xchg
cmp
cmc
sub
inc
sti
cmp
cli
and
les
sub
mov
movsb
cmp
sub
js
pop
dec
loop
ljmp
push
adc
scas
imul
in
sbb
mov
lret
iret
xchg
outsl
push
das
icebp
mov
rclb
adcb
xchg
jbe
mov
cwtl
jl
sbb
or
sub
xchg
sahf
icebp
inc
call
scas
imul
iret
push
movsl
fistpl
mov
jo
mov
fnclex
jns
add
lea
imul
add
in
or
test
jb
imul
xchg
testb
dec
adc
stos
sbbl
jmp
dec
adc
int
xchg
inc
dec
xor
jl
test
icebp
into
mov
jae
out
outsb
add
cmp
mov
je
or
aaa
pop
cmp
lods
mov
dec
and
dec
aad
loope
stc
arpl
sub
insl
add
dec
jns
ds
data16
out
sbb
cmpsl
mov
test
cmp
fidivs
pop
jge
dec
xchg
sbbb
mov
leave
pusha
mov
std
mov
and
mov
in
cmpl
add
adc
jnp
or
cmpsl
ds
stos
inc
and
pusha
pop
fildll
push
pop
bts
jl
ds
mov
fnstenv
das
mov
mov
fwait
sbb
and
adc
mov
mov
mov
jg,pn
in
cmp
jl
jmp
and
sub
pushf
push
jo
lcall
xchg
sti
push
ja
mov
ljmp
test
lods
inc
mov
or
jl
sub
jmp
xor
fdivrs
sbb
ja
pop
sbb
xor
rcrb
inc
fbstp
ror
cmp
bound
in
mov
or
xor
or
mov
adc
cmp
in
pop
scas
sbb
pop
pop
les
mov
adc
push
insl
pop
mov
jmp
iret
fiadds
sarl
xchg
es
xchg
pxor
enter
clc
push
mov
cmp
xor
sbb
fwait
adc
sub
sub
aam
add
cwtl
cmc
js
daa
mov
aad
repnz
or
flds
xlat
into
xor
add
and
cmp
jbe
dec
loop
cmp
pop
inc
int
rcl
inc
fldl
or
mov
loop
cmpsl
out
mov
fcom
pop
lock
loop
push
in
movsb
rcll
loop
jb
or
fwait
test
int
cmc
mov
in
pushf
and
insb
add
mov
sbbb
push
jnp
jl
inc
aaa
jnp
jne
pop
mov
push
jb
fsubs
mov
push
inc
ja
cmp
in
gs
out
xchg
push
inc
xchg
js
jo
imul
dec
jecxz
fisttps
dec
or
das
pop
push
loop
inc
mov
cwtl
sbb
mov
mov
mov
jno
adc
iret
pop
xor
xchg
sub
inc
gs
arpl
cmpsl
ds
movsl
cmp
rcl
outsb
in
xlat
outsb
push
push
mov
pop
test
rclb
lret
cmp
daa
jg
lods
inc
mulb
test
and
mov
and
xor
xchg
xor
push
sub
movsb
mov
cmp
fnstcw
pop
jnp
pusha
jmp
cltd
xor
cmp
mov
je
sbb
jecxz
in
mov
fistpll
call
movsl
mov
lea
mov
fldenv
in
mov
fisubrs
das
pop
pop
mov
nop
pop
dec
loopne
and
scas
xchg
pusha
mov
push
bswap
popa
orb
jge
out
stc
aas
xchg
jne
scas
lock
dec
fwait
cmp
add
out
sbbl
int3
dec
sbb
fwait
imul
cmc
lods
pop
mov
fdivl
lock
icebp
mov
mov
sub
cmp
jne
cmp
inc
mov
xchg
sti
push
mov
imul
mov
and
aad
mov
leave
pusha
out
aas
and
bound
mov
mov
bound
push
push
shlb
mov
push
ljmp
inc
fdivl
cmc
call
add
cld
push
popf
stos
out
or
jne
mov
fdivr
xchg
jecxz
fsubrs
add
adc
cmp
pop
out
inc
push
dec
in
test
push
popf
pop
pop
hlt
mov
lea
enter
decb
insl
cwtl
das
pop
sub
push
sub
pusha
mul
sbb
leave
jns
sub
or
push
and
out
pop
lahf
in
inc
sti
xchg
jne
daa
mov
add
pop
sub
stos
pop
subb
pop
jo
pop
popf
xchg
insb
add
out
xchg
lahf
ss
adc
mov
pop
xchg
adc
inc
call
xchg
cmp
stos
cmc
call
mov
pop
repz
jmp
test
popf
xor
sbbl
inc
xlat
insb
add
and
mov
inc
stos
fsubrs
rcll
test
jb
sbb
mov
dec
shrb
pop
stos
inc
dec
xchg
divb
cmp
insl
add
inc
rclb
jecxz
fs
jno
inc
mov
push
cltd
xor
loopne
jle
lret
bound
lahf
mov
and
gs
xlat
outsb
xchg
xchg
test
mov
sub
cmp
test
int
andl
push
iret
push
outsb
add
mov
fcoml
test
mov
ret
out
or
jmp
sbb
cwtl
mov
adc
jmp
cmp
jnp
gs
test
lret
sbb
cld
cmp
fnstsw
pop
cmc
lahf
sahf
cmp
push
rcll
repnz
pop
lock
adc
test
lret
xchg
test
testb
dec
jne
push
daa
in
xorl
dec
xchg
je
outsl
jo
push
call
repnz
adcb
jb
push
movsb
in
add
fstp
imul
rorl
clc
stos
repnz
mov
int3
outsb
add
shl
dec
enter
adc
shlb
xor
sbb
aam
clc
push
ret
mov
adc
ss
and
shll
aam
movl
mov
inc
fsubrs
xor
bound
cmpsl
mov
xor
ds
jle
xchg
sub
aad
pop
pop
dec
mov
pop
sub
pop
loopne
lds
rclb
rcrl
test
bound
addb
imul
jecxz
xchg
fidivl
loopne
shrl
add
mov
mov
jmp
dec
or
js
push
int3
jle
jb
mov
xor
notb
les
movsb
arpl
aad
outsl
push
xor
ds
push
in
adcl
fsub
jae
or
cmpsb
insl
stc
mov
mov
mov
sub
popf
rorb
into
sti
xlat
outsb
lret
sbb
shrb
aaa
into
fst
fidivl
jne
ret
fimull
cwtl
mov
int
pop
shll
adc
cltd
xor
inc
addr16
mov
adc
scas
inc
sahf
lahf
add
test
fbstp
test
clc
jl
in
insl
cmpl
scas
add
mov
xor
call
and
inc
in
cmpl
jno
jge
add
sub
movsl
push
call
or
mov
in
mov
mov
lret
lock
lcall
mov
data16
push
add
sbb
pop
jne
imul
mov
sbb
sbb
cwtl
sub
and
mov
mov
push
sar
nop
add
es
mov
les
std
xchg
pop
loope
lret
sbb
mov
and
int
popf
lcall
fcoms
lret
or
test
fwait
pop
hlt
or
or
aad
rcrl
lods
inc
stc
sti
fsubrs
imul
sysexit
or
dec
subb
mov
ret
adc
sbbl
stos
fbstp
std
mov
pop
cmpsb
sbb
mov
stos
fs
ret
mov
in
fsubp
cmp
imul
jb
call
or
mov
repz
in
cmpsb
cmp
mov
ror
loopne
jo
xchg
add
jne
loop
fcoml
cmp
in
stc
push
mov
xchg
dec
mov
and
out
cmp
iret
dec
stos
sbb
leave
pusha
out
lods
pop
ficoms
cli
xchg
inc
call
xor
movsl
xchg
push
testl
out
sub
cmovb
movsb
cmp
orb
loope
popf
aam
fidivs
insl
xor
pusha
insl
adc
sbb
push
jns
or
insb
pop
shlb
lea
or
mov
gs
dec
xchg
int
mov
cmp
cmp
adc
cwtl
inc
mov
pop
repnz
dec
daa
incl
inc
fnstsw
cmp
imul
fs
test
fildll
inc
je
xchg
imul
xor
hlt
out
in
test
ficoms
ret
pop
out
shrb
fcmovnu
lahf
and
lgs
enter
pushf
pop
repnz
fdivs
cmc
gs
fs
jb
xchg
andb
cmc
shll
push
jne
xchg
popf
dec
cwtl
bound
dec
cmpsb
shll
aas
repnz
rorb
cmp
sbb
es
add
sbb
outsl
dec
push
xchg
xchg
arpl
scas
test
jg
scas
dec
push
loop
popa
clc
je
fadds
cmp
cmpsb
jns
scas
pusha
scas
cmp
fwait
mov
incl
mov
cli
mov
lods
add
aam
mov
pop
add
int
xchg
sub
cltd
out
sub
and
aaa
push
jbe
jecxz
dec
loop
push
jnp
adc
push
push
add
push
push
loopne
xchg
or
add
sbb
jno
enter
jae
dec
fisubl
out
xchg
loopne
dec
mov
loop
pop
fucom
mov
out
pushf
addl
in
xor
xchg
dec
sahf
and
data16
cwtl
dec
movsl
insb
pop
sbb
mov
insb
sbb
cmp
lock
mov
frstor
push
inc
movsb
mov
cmc
inc
rolb
mov
add
inc
mov
jecxz
jp
popl
mov
dec
mov
sti
and
iret
in
dec
in
icebp
ds
imul
pop
fs
sub
inc
add
std
and
mov
xchg
ret
hlt
mov
das
pop
test
fists
ror
repz
test
gs
mov
sbb
sti
xchg
pop
pushl
or
cmp
lods
sub
sub
mov
testl
loop
push
shll
adc
les
mov
insb
imul
jo
and
mov
jp
mov
dec
out
scas
sti
xchg
into
movlps
mov
push
jmp
aad
ljmp
adc
push
inc
dec
mov
clc
cmp
pop
push
lods
lock
jle
mov
and
and
push
mov
push
lret
and
dec
jecxz
push
cmc
inc
inc
notl
or
pop
sub
cmp
sarb
imul
xor
add
test
outsl
sarb
les
pop
xor
pushf
or
jp
and
cli
stos
in
cmp
sbb
cltd
or
sub
insb
cmp
subl
push
jmp
dec
testl
mov
in
push
ret
sarl
rolb
in
inc
ret
xchg
aas
fucomip
or
das
fimull
pop
sbb
dec
inc
fnstsw
call
loop
sub
xor
inc
inc
jg
enter
popa
inc
roll
push
cmp
fwait
pop
mov
addr16
stos
bound
mov
add
bound
dec
and
mov
jb
pop
movsb
xchg
testl
push
or
or
xor
sbb
pop
add
dec
pop
in
or
push
sbb
imul
clc
jnp
sbb
ret
movsl
xchg
les
insl
movsl
mov
adc
jl
sarb
inc
hlt
dec
mul
and
imul
dec
adc
imul
je
shrl
ss
adc
or
xor
sbb
push
push
cltd
js
inc
xchg
loope
and
pop
lds
mov
fsts
push
sub
xor
scas
popa
jmp
add
sbb
xor
fimuls
inc
ret
mov
ljmp
sbb
xor
out
jmp
movb
xchg
mov
dec
mov
iret
xchg
jmp
daa
mov
js
mov
dec
jg
jmp
cmp
cli
mov
xor
jnp
push
rcl
mov
sbb
mov
sarb
cmp
push
int
mov
jb
push
aad
pop
and
das
jge
popa
xchg
jne
push
pop
out
cmp
inc
test
mov
ljmp
cmpsb
out
push
cltd
xor
inc
dec
fistpll
push
into
ja
cmp
cmpb
xchg
test
cmp
lods
iret
outsl
scas
loope
adc
mov
in
and
mov
repnz
fldl
repnz
push
sbb
aaa
into
sub
into
fnstenv
sbb
jb
in
and
push
inc
stos
mov
lahf
in
leave
pop
add
out
in
mov
cwtl
mov
shlb
das
clc
popa
lcall
xor
sub
dec
in
andb
in
pop
mov
sbb
adc
std
lahf
fiaddl
insb
add
sti
popf
mov
sub
lret
outsl
imul
ret
pop
out
hlt
adc
icebp
mov
or
or
mov
ret
mov
mov
or
test
xorb
fnsave
dec
loope
cltd
adc
shlb
sbb
cwtl
loop
clc
jnp
sub
das
mov
or
add
sbb
fwait
mov
aad
push
cltd
movl
sub
icebp
ret
add
push
sub
daa
sub
fwait
daa
inc
cmp
pop
dec
outsl
repnz
call
jmp
rcl
sub
lock
insl
mov
pop
jae
or
bound
dec
out
sub
enter
mov
fcmovnbe
divb
mov
pop
mov
pop
sbb
push
aaa
xor
cmp
pop
or
pop
push
xchg
andl
sub
inc
inc
fdivl
int3
std
shl
imul
test
adc
repnz
add
daa
sbb
daa
xor
testb
fs
add
stos
pop
and
sub
out
adc
pop
dec
pop
mull
push
mov
dec
and
push
xor
test
ret
push
add
mov
xlat
outsb
dec
loopne
mov
test
pop
mov
sbb
jg
in
and
pop
mov
sub
push
mov
sbb
inc
xchg
sub
pop
imul
repz
fisttpl
enter
push
int3
adc
imul
push
jb
pop
decl
loopne
int
or
xor
mov
inc
ss
sti
xchg
xor
imul
pusha
sub
movsb
adc
inc
aam
repz
data16
xchg
pop
loopw
roll
sub
enter
dec
loop
gs
incl
repnz
dec
leave
cli
push
sub
mov
cli
aam
mov
or
lds
fidivrs
pop
aad
xchg
dec
fiadds
sub
pop
scas
fistpll
push
or
adc
sbb
das
lods
test
sbb
and
inc
mov
pop
ret
sbb
pusha
pop
in
dec
cmp
fldenv
into
pop
popf
mov
xchg
loop
loop
in
lock
clc
dec
fimull
rcrb
fsub
shll
mov
pop
inc
sbbb
jge
inc
mov
push
fcomip
test
loope
jle
sub
ret
jecxz
mov
in
fsubl
aad
rcll
sbb
daa
mov
jne
inc
mov
cmp
inc
stos
or
popf
popf
xorb
scas
pop
lods
shr
mov
iret
and
xor
imul
cld
pushf
fldenv
std
fildll
fadds
lahf
mov
mov
stos
cmpsl
jns
loope
loope
inc
sbb
cs
aaa
addr16
pop
pop
xor
ret
push
mov
in
popa
clc
insl
xor
js
outsl
mov
sub
pop
mov
out
lods
push
xchg
ss
in
fcomip
mov
xor
adcl
sub
mov
insl
push
sbb
aam
sub
sub
sbb
test
lret
mov
icebp
sbb
mov
ss
outsl
cmp
mov
fwait
mov
int
mov
and
inc
nop
not
lret
jb
sahf
xchg
lret
or
test
sub
out
test
rorb
pushf
mov
sbb
mov
bound
fwait
lods
shl
inc
scas
je
fwait
xor
stos
mov
dec
mov
mov
lods
inc
jmp
or
xor
push
mov
push
cmp
pop
out
push
pop
fcomps
fs
xchg
pop
loope
mov
les
sbb
pop
jno
and
pop
pop
rorb
cmp
lods
out
mov
nop
sub
cmpl
cs
sub
mov
mov
push
or
mov
outsb
pushf
pop
mov
int3
xor
and
sub
dec
loope
inc
pop
enter
cmpb
pop
test
mov
popf
adc
pop
movsl
das
fstcw
insb
sti
mov
fdivs
enter
mov
mov
imul
pusha
push
mov
push
enter
fisttps
test
sbb
xchg
dec
mov
cmpsl
add
add
mov
je
sub
xor
repz
jnp
mov
ret
or
lret
repnz
add
xsha256
cmpsb
push
pop
and
cli
loopne
sub
sbb
mov
mov
fstpt
add
in
cmpsb
dec
adc
inc
xchg
mov
xlat
pop
ret
scas
mov
rorb
out
icebp
push
lods
mov
xor
xchg
jae
xchg
sahf
jmp
bound
inc
fidivl
outsl
in
mov
push
mov
pop
inc
test
xchg
mov
ret
pop
scas
inc
and
loopne
in
inc
and
mov
sahf
aas
imul
cmp
add
xchg
call
mov
mov
or
xchg
xchg
or
lcall
xor
push
js
stc
push
addr16
mov
insb
repz
scas
test
add
or
fdivrs
mov
or
mov
adc
or
push
test
imul
repz
xchg
bound
int3
mov
cmp
in
dec
pop
pushf
cmp
fnsave
mov
outsl
add
mov
mov
lods
fcomps
and
rolb
hlt
push
fstpl
and
scas
push
mov
aas
xchg
subl
punpckhdq
push
xchg
pop
cli
pop
lcall
push
cs
mov
inc
pop
inc
fbstp
jns
clc
mov
dec
in
xlat
jg
sarl
pop
mov
inc
mov
or
imul
xor
out
cmc
aas
in
inc
lret
or
pop
jae
fwait
icebp
mov
mov
gs
hlt
jmp
aam
loopne
and
inc
dec
inc
and
repz
gs
mov
stc
adc
sub
or
dec
xchg
rclb
sbb
shlb
jbe
cmp
test
or
aad
inc
mov
frndint
xchg
adc
push
mov
dec
sbb
adc
imul
jg
xor
sbb
sbb
cmp
add
inc
sbb
push
adc
rclb
add
out
xchg
jg
adc
sahf
insl
pop
mov
push
loopne
rolb
push
xor
lds
fdivrs
pop
adc
mov
pop
subb
fwait
jne
pop
pusha
jmp
adc
jno
out
cmp
stos
push
inc
scas
inc
jne
xor
dec
in
inc
shrl
push
or
mov
jmp
call
pop
shll
sub
xchg
lds
mov
mov
int3
and
push
sbb
test
adc
sbb
sbbl
rcrl
dec
loope
cmp
arpl
jmp
out
lret
sub
add
inc
jno
xchg
orl
es
or
mov
movsb
int
popl
popa
test
clc
jmp
divl
sub
je
inc
test
sbb
in
inc
ja
sub
mov
out
inc
push
xor
orl
pop
hlt
fidivl
cmp
lds
js
sub
xchg
and
pop
outsl
xorb
stos
addr16
cmp
mov
cwtl
or
and
xchg
xchg
int3
outsb
fnstsw
cmp
jae
adc
addl
push
lcall
test
fdivp
test
mov
leave
pop
sbb
mov
adc
ljmp
mov
dec
dec
loop
fists
pushf
push
lods
aam
adc
popf
mov
inc
mov
jo
scas
enter
dec
sub
in
add
xor
int3
inc
arpl
test
pop
or
sub
mov
fs
pop
pop
jp
into
mov
mov
xchg
sahf
outsl
xchg
jmp
jmp
rcll
gs
loopne
int
ss
dec
mov
outsl
cmpsb
dec
aad
cmp
cmp
das
jg
fwait
insb
orl
dec
pop
incb
mov
ret
out
pop
push
mov
lret
rcr
add
call
movsb
aas
xorl
or
roll
movsb
pop
cltd
es
and
cld
sbb
push
andb
sub
in
and
es
push
sub
mov
adc
lods
fdivrl
jge
and
jp
ficoms
outsb
ja
xchg
push
xor
mov
insb
or
loopne
and
jnp
rolb
mov
mov
ds
inc
cmp
cmpsl
icebp
stos
pop
mov
cld
hlt
in
sub
mov
es
jg
lods
mov
lret
sahf
dec
jne
int
mov
mov
jb
or
push
dec
inc
push
cmp
xlat
xchg
xlat
aaa
jg
push
in
sub
lock
repz
in
aam
sub
xor
xchg
xchg
nop
cli
std
sub
movsl
jl
loop
xor
fisubrl
pop
mov
int3
arpl
adc
test
call
into
gs
push
mov
jge
cli
xchg
jg
fmull
jg
inc
pop
outsl
mov
dec
jns
out
inc
sbb
add
leave
insb
mov
hlt
lock
lds
jl
mov
lods
inc
lock
xor
cwtl
js
mov
xor
pop
jbe
or
mov
or
sahf
and
and
dec
pop
out
mov
jne
xor
mov
jge
adc
je
std
cmp
dec
and
inc
test
cmp
and
jp
dec
mov
pop
data16
fwait
xchg
mov
in
or
rcrl
mov
nop
mov
push
mov
mov
in
adc
pop
inc
out
sub
sub
dec
cmp
and
jecxz
insb
dec
fcoml
xchg
stc
inc
fldcw
mov
inc
out
jle
inc
popa
int
out
ret
addl
xchg
push
in
jns
fiadds
cmp
repnz
aas
lahf
cmc
fisubl
repz
add
pushf
loop
test
cmp
push
ror
and
mov
xchg
in
in
stc
adc
clc
orl
int
fiadds
xchg
cwtl
and
add
dec
sbb
jns
push
addr16
jmp
jae
aaa
inc
xor
lock
fs
xchg
call
adc
dec
xor
xchg
pop
jo
cltd
fadd
jmp
sahf
es
shlb
cs
add
test
fmuls
dec
scas
jmp
in
jno
bound
fisttps
xchg
out
gs
mov
je
addr16
dec
jo
ds
xchg
sub
lds
mov
es
mov
sub
clc
stc
iret
nop
fnsave
stc
mov
mov
call
xchg
mov
orl
sub
dec
pusha
daa
call
xor
adc
jg
aas
stos
cmp
jl
mov
add
cld
xchg
popa
and
pop
push
sbbb
js
and
jge
gs
mov
xchg
stos
test
rol
fidivrl
sub
insl
dec
mov
mov
mov
adc
sbb
push
dec
into
leave
mov
cmp
cwtl
add
icebp
pop
pusha
pop
and
sub
xor
xchg
pusha
or
jno
or
js
inc
sub
addr16
sub
aas
mov
orb
adc
filds
jecxz
mov
sbb
adc
and
aam
cmp
xchg
cmpsl
push
ds
in
xor
sbb
xor
jecxz
jno
lds
int
rcrb
dec
mov
mov
enter
loopne
xlat
xor
sub
inc
lods
stos
ds
int
adc
inc
xor
aad
loop
mov
cmp
loopne
sub
jo
inc
adc
shlb
loopw
mov
xchg
or
in
test
xchg
xlat
data16
in
rcrb
add
jo
rcr
pushf
jne
dec
xor
adc
cmc
mov
scas
xchg
mov
fcomip
pusha
mov
lods
push
mov
cmpsb
jne
fmuls
popa
xor
jns
nop
ret
ja
dec
loope
cwtl
jne
sbb
or
jg
arpl
sub
aaa
xchg
or
mov
mov
out
mov
pushf
push
stos
pushf
push
mov
ljmp
cli
into
push
mov
lock
fdivrs
lods
js
mov
lahf
xchg
imul
outsl
mov
sub
shlb
mov
jno
es
outsb
jb
pushf
jnp
cmp
jbe
add
mov
dec
jb
ret
and
int
push
inc
dec
std
lods
push
into
je
fldl
lock
les
dec
xchg
add
xor
popa
ret
cmp
cmpsl
jge
fdivrl
cld
sbb
mov
clc
add
in
sub
ret
sub
jmp
pop
push
cmpsl
les
dec
sahf
adc
mov
sbb
mov
dec
loope
lcall
and
out
loopne
mov
push
mov
cli
dec
pop
mov
in
mov
mov
mov
idivb
fstps
xchg
sbb
dec
mov
cmp
imul
in
adcl
cmc
dec
jae
adc
popf
jb
fisubrl
fwait
iret
sub
pop
lock
cmp
add
loop
lock
out
ret
jecxz
test
adc
nop
adc
xchg
dec
test
push
adcb
jnp
pop
insl
sarb
dec
pop
jb
insl
dec
loopne
mov
pop
loop
addr16
lock
jle
adc
pushf
xchg
xchg
test
mov
jmp
or
js
dec
pop
idivb
call
shlb
fwait
xor
adc
inc
or
xor
dec
rorl
cmp
mov
loope
orb
lds
nop
adcb
mov
sbb
xchg
dec
int3
jmp
stc
and
dec
jo
stos
add
fdivl
mov
imul
andb
hlt
ds
addr16
and
fsubr
sbb
cltd
sub
pop
inc
in
push
sbb
sub
adc
test
inc
scas
fs
mov
xchg
cmpsl
inc
stc
inc
scas
mov
fstl
stos
test
mov
add
test
mov
push
dec
fsts
rorl
fnstcw
movsl
test
mov
mov
imul
aam
adc
xlat
pop
xor
push
pop
in
pushf
leave
and
negl
inc
pop
imul
sub
fdiv
nop
filds
push
mov
sbb
mov
cmp
push
xchg
mov
rorb
cs
sub
test
xchg
je
sub
ret
xchg
push
rcrb
mov
xor
xor
test
outsb
or
push
jle
outsl
mov
push
je
imul
popf
inc
xlat
daa
cli
mov
sub
dec
and
pop
movsl
or
fcompl
mov
mov
lahf
jbe
inc
pop
loope
mov
outsl
aas
rcrb
push
cmp
das
aaa
lret
mov
or
dec
sbb
pop
xor
dec
aaa
rorb
test
pop
xchg
sbb
sti
xlat
fadds
push
xchg
sbbb
out
test
aam
push
add
pop
ret
pop
shll
in
and
int3
fdivrs
fsts
fisubrs
push
mov
and
mov
xabort
and
mov
adc
xor
mov
mov
sub
sbb
pop
mov
movsb
jecxz
pop
xchg
sub
hlt
sti
pop
aad
pop
outsb
add
add
fcmovnu
pop
out
sti
andb
jae
jge
aas
lds
add
lret
stos
xchg
rolb
nop
jno
test
in
aam
jne
mov
inc
xchg
je
fsubs
ret
repz
sbbb
sbb
jmp
sbb
cmpsb
mov
fimull
xlat
push
mov
sbb
out
leave
pop
jmp
insl
ja
sub
dec
hlt
pop
shlb
pop
mov
addb
inc
add
inc
xor
jae
pop
or
push
xchg
pop
mov
loopne
fidivl
jg
mov
cmpsb
dec
push
fnclex
enter
fbstp
enter
jp
fs
ret
iret
mov
add
in
fsubrs
xor
negb
jne
test
and
hlt
fistl
xrelease
pop
add
push
icebp
insb
dec
iret
data16
sbb
push
sbb
sub
loopne
movsl
mov
outsl
push
sbb
mov
pushf
loop
mov
gs
or
adc
mov
push
push
cmc
lea
imul
mov
sbb
pop
pandn
lds
mov
repz
cmp
shrb
fwait
loope
mov
dec
mov
mov
push
iret
push
fimull
and
ja
sbb
fistpl
push
jno
rdmsr
fs
aaa
inc
cwtl
in
xlat
and
push
inc
fsubs
mov
xor
cli
inc
xor
mov
sub
addr16
popf
dec
push
or
xor
ret
fisttps
xor
std
sub
pop
dec
loope
sbb
fstps
pop
cmp
xchg
add
or
addr16
aaa
stos
jno
daa
fsubs
fs
add
push
je
nop
xchg
push
xchg
cltd
push
sti
cmpsl
lods
inc
xor
lret
push
lret
test
and
rorb
dec
and
mov
ret
mov
jp
cmp
enter
subl
add
lods
ja
in
or
add
aam
sbb
push
push
out
cld
test
dec
adc
popf
lcall
push
lods
popl
icebp
mull
orl
outsb
into
xchg
push
lods
pop
adc
sub
adc
or
lahf
out
aas
mov
pop
lret
xchg
loope
sbb
dec
mov
inc
mov
test
popa
dec
fiaddl
mov
mov
fadd
mov
loopne
pop
inc
cltd
out
dec
xchg
or
pushf
mov
sbbl
repz
sti
rorl
neg
xchg
push
lret
xor
fisubl
push
jmp
fcompl
std
mov
dec
push
mov
lock
arpl
scas
adc
fs
inc
pop
icebp
je
jl
push
add
xchg
outsl
dec
cli
jo
cmp
pop
add
push
add
jb
fdivs
jge
sti
dec
adc
cmp
push
pop
test
push
loope
pop
and
pop
imul
mov
divl
in
inc
pushf
out
mov
in
fdivl
jnp
scas
scas
add
xor
orl
gs
adc
inc
aam
lds
pusha
dec
pop
pushf
jbe
sbb
mov
aam
push
pop
inc
sti
jl
pop
lret
push
push
mov
in
cs
testb
dec
pop
lcall
jmp
jl
push
inc
push
xchg
dec
ss
in
ljmp
and
xchg
ljmp
ljmp
push
or
js
es
dec
xor
out
sub
push
testb
sti
adc
sub
ret
aaa
inc
outsl
adc
inc
popl
and
and
sbb
push
cmp
clc
dec
mov
xchg
mov
pop
into
lea
and
addb
or
loopne
fwait
sbb
pop
popfw
mov
xorl
mov
iret
xor
sbb
inc
faddl
push
jno
in
loope
in
clc
mov
mov
sub
or
negl
pop
sub
lods
js
negl
ljmp
sbb
pusha
rcll
xor
sub
mov
hlt
or
popf
pop
icebp
hlt
and
cli
jne
pop
inc
in
in
fsubr
sbb
pop
das
mov
dec
in
inc
mov
stos
and
push
int3
jae
jg
sbbl
push
mov
pusha
jnp
cs
lock
or
sbb
in
gs
cmp
ret
jle
sub
add
mov
xchg
test
mov
insl
mov
cs
push
mov
popf
pop
lock
xchg
cltd
and
lcall
and
push
out
fs
sbb
mov
loope
inc
fwait
adc
nop
iret
stos
ljmp
mov
dec
or
jnp
and
ds
xchg
xor
pop
rcrl
cmp
cmp
jbe
pop
inc
pusha
lds
adc
sbb
pop
imul
ds
decl
lods
insb
fisttpl
mov
test
pop
scas
cli
pushf
test
negl
in
inc
cmp
inc
sti
inc
xlat
lret
xchg
ljmp
cmc
xchg
js
dec
pop
outsl
jge
add
orb
int
ja
fdivs
pop
movsb
mov
repnz
test
dec
adc
ja
pop
pop
dec
mov
jo
xchg
mov
nop
sbb
in
add
in
adc
test
inc
jae
inc
fs
inc
data16
adc
out
aaa
push
or
lahf
mov
mov
loop
cmp
jns
mov
das
movsb
pop
fidivrs
aad
incl
orl
dec
aad
out
sub
sti
shr
xor
cmpsl
mov
cld
jp
cs
adc
and
cltd
idivl
or
hlt
scas
mov
add
mov
arpl
xchg
fnsave
xchg
or
push
cmp
push
inc
jb
push
push
lahf
and
fcoml
mov
aaa
out
std
xchg
loopne
in
addl
mov
jmp
or
jb
mov
push
out
mov
outsb
imul
mov
insl
jp
push
xlat
push
out
repnz
out
loop
xor
cmp
fwait
fwait
and
stos
xor
dec
dec
call
fbstp
pop
repz
jbe
mov
and
pop
inc
std
nop
pcmpgtb
xchg
sub
clc
jg
les
aaa
rcl
xor
add
pop
imul
sub
push
popf
sbb
movsl
cmp
pushf
leave
jg
ret
lahf
jl
inc
add
imul
in
pop
loop
push
sub
mov
sbb
fmuls
sbb
nop
mov
xchg
arpl
or
mov
sbbl
sbb
add
icebp
mov
lds
add
addl
mov
add
jge
stos
xchg
inc
adc
mov
lahf
mov
sbb
ds
aaa
jno
pop
loop
aam
sub
loopne
sbbb
jnp
cmp
frstor
sbb
dec
sub
cmp
enter
in
data16
out
xchg
mov
inc
testb
cmp
cmpsb
insb
and
jp
fneni(8087
js
sbb
jns
add
and
push
inc
fbstp
and
pusha
pop
cld
push
inc
fildl
cmp
test
lret
mov
pop
or
ret
aam
dec
push
in
and
mov
lods
inc
test
push
data16
cmp
mov
fbstp
xor
shlb
mov
push
or
mov
mov
push
outsb
jle
xchg
mov
out
mov
lods
cmp
call
or
scas
cmp
popf
adc
in
pop
hlt
sbb
or
adc
xchg
inc
mov
pop
or
orb
adcb
int3
or
aam
sbb
mov
out
hlt
mov
lcall
mov
in
or
aas
add
fimull
push
cwtl
mov
or
mov
mov
mov
daa
call
fcompl
adc
mov
pop
rol
pop
add
push
out
mov
fnstenv
fdivs
int3
fisttpll
mov
inc
jne
test
pop
aas
dec
xor
jo
pop
add
in
fists
cmp
fsub
xor
adc
sbb
sahf
sub
arpl
fdivrs
push
mov
cmp
xchg
mov
rcrl
mov
and
loopne
inc
imul
sub
sbb
xchg
jge
dec
pop
xchg
sahf
xor
shr
dec
aaa
and
outsb
xchg
jmp
xor
mov
mov
out
idivl
loop
fistl
or
pop
rcrl
pop
inc
sbb
add
push
aad
test
xor
int
int3
fs
test
roll
jmp
inc
mov
pop
lcall
push
jno
call
xchg
imul
mov
pop
mov
pop
xor
std
push
push
in
mov
mov
pop
sbb
es
and
addr16
dec
sbb
inc
xlat
mov
or
ret
push
out
xchg
pop
sub
push
test
pop
mov
movsl
fists
out
add
call
or
sahf
jg
cs
das
fidivrl
mov
mov
dec
lcall
inc
stos
out
inc
inc
jmp
addl
xchg
imul
adc
mov
in
sub
jle
mov
mov
and
sub
loope
inc
mov
add
add
insl
jb
mov
jmp
xchg
sahf
cmp
fsubl
scas
push
inc
mov
rorl
xchg
push
xor
xor
dec
mov
fnstenv
sub
into
xor
xchg
jnp
dec
and
sbb
cmp
outsb
mov
movsl
icebp
add
add
repz
popa
out
call
cmp
jge
fs
xchg
call
xor
push
or
pop
add
leave
sahf
lret
lret
pop
movd
js
inc
fisubs
dec
gs
mov
mov
lret
data16
sarb
arpl
xchg
pop
je
aad
movsb
push
mov
push
pop
repnz
sbb
jne
fsubrs
repz
loopne
jbe
jno
popa
movsl
jo
fwait
leave
mov
mov
mov
imul
pop
cmp
cmc
popf
fdivs
loope
and
push
ljmp
cmp
bound
outsl
add
repnz
pop
stos
subb
and
les
ret
shr
cmp
mov
or
ja
mov
pop
and
fcmovu
inc
sbb
inc
cmc
iret
sahf
and
inc
fisubrl
ljmp
push
mov
add
lret
int3
jmp
aaa
mov
lds
dec
mov
push
mov
push
mov
add
or
stos
mov
lahf
clc
add
js
lret
and
inc
lds
sbb
shrl
mov
int
insl
fdivl
mov
xchg
adc
mov
sldt
jecxz
pop
stc
fs
aad
fwait
xlat
aam
fsub
aaa
jo
mov
ds
sub
ret
pop
xor
jp
or
nop
mov
mov
movsl
mov
push
inc
lods
movsb
mov
test
sbb
ja
push
test
xchg
push
pop
sbb
mov
pushf
mov
dec
sbb
pop
int
cmpb
data16
mov
jmp
xor
mov
dec
push
or
sub
xchg
push
arpl
icebp
aaa
pushf
das
dec
fwait
push
mov
add
mov
aad
outsb
test
pop
and
and
sti
jo
sub
hlt
fsubrp
and
and
xchg
pusha
and
push
adc
mov
mov
jo
lea
ret
loopne
iret
fimull
sahf
mov
sarb
adc
lock
scas
inc
push
add
sub
xor
fistps
mov
fildll
sbb
mov
stos
jbe
push
mov
pop
stos
sub
inc
cld
lds
cs
into
jno
push
ljmp
fsubrp
fwait
cmpsl
in
lods
xchg
stos
push
insb
push
jne
push
loopne
ret
shll
lcall
clc
dec
divb
loopne
lahf
enter
addr16
repnz
ljmp
call
pusha
mov
inc
fmuls
and
je
in
in
push
jg
sti
mov
cmpsl
sbb
enter
leave
cmp
test
cld
rcll
in
pop
int
lret
cmpsb
ret
pusha
lea
mov
aad
daa
outsl
std
pop
add
xchg
fnstenv
mov
inc
jb
cld
xchg
inc
and
fisubs
jo
call
jg
pop
xchg
jnp
lods
das
xor
pusha
into
stos
push
sbb
cld
xchg
xor
fstps
mov
dec
push
movsl
cmp
jne
sti
and
sbb
dec
or
add
rorb
mov
inc
pop
adcl
aad
xchg
mov
lods
xlat
es
fcmovnbe
aam
ja
imull
inc
subl
mov
sti
in
jge
xor
pop
push
outsb
sarb
cmpb
bound
pop
mov
arpl
ror
push
mov
dec
lcall
aam
cwtl
repz
das
jmp
or
cmp
inc
out
push
mov
ljmp
pop
loop
pusha
sbb
das
and
hlt
jo
shlb
sbb
jno
mov
dec
and
and
add
push
or
test
test
push
jo
stos
mov
xchg
or
rolb
ss
movsl
mov
test
pop
mov
cmp
aaa
std
ss
repnz
mov
mov
push
xchg
mov
mov
adc
inc
pop
add
push
stc
dec
and
lret
inc
in
jle
enter
xor
mov
pop
push
pop
lock
jge
push
jae
mov
lret
dec
inc
pop
cld
arpl
fcoms
jecxz
mov
add
push
mov
inc
popa
scas
adc
xchg
stos
es
das
shl
shrl
pop
je
xlat
sub
or
adc
add
or
inc
int3
mov
insb
and
iret
stos
inc
imul
bswap
test
sub
adc
sbb
popf
insb
mov
pop
xor
pop
and
sahf
inc
push
sbb
out
lret
push
mov
dec
xor
or
aas
mov
scas
mov
jns
add
rcrl
ljmp
loope
mov
aad
cld
jns
add
mov
or
sarb
inc
mov
xlat
inc
and
jecxz
loope
loope
inc
mov
rclb
rclb
xchg
mov
into
insl
in
lahf
lock
movsb
dec
sti
sub
fdiv
mov
sbb
cmp
rorb
push
mov
pop
lock
mov
clc
lock
mov
pop
sahf
sub
repnz
add
movd
add
ja
xchg
jb
push
scas
and
xor
inc
in
push
cmp
xchg
call
add
test
jmp
ss
addr16
mov
aad
xor
orl
cmc
imul
mov
add
jo
jl
aad
movsl
push
xchg
push
add
xor
or
push
jne
xorb
xor
jg
aam
mov
cld
sub
ret
hlt
daa
and
mov
stos
inc
mov
das
inc
aaa
stos
leave
pusha
fstpl
push
lcall
hlt
jns
pop
je
push
orl
cmp
insb
ficoms
cmp
cmpsl
sub
or
add
mov
mov
or
jnp
lods
cli
mov
jns
push
rcl
out
pop
lahf
and
mov
data16
pop
clc
mov
test
lret
cld
addb
mov
pop
jno
mov
and
es
add
cli
sub
ret
hlt
mov
mov
pop
push
ror
inc
insb
fnstsw
iret
xorb
inc
fnstenv
xchg
mov
inc
add
stos
add
into
cld
jno
push
add
mov
mov
es
or
leave
cmp
jmp
les
sarl
fiadds
sbb
mov
in
or
cltd
push
cli
pop
jo
inc
pop
jp
daa
mov
mov
inc
sbb
xchg
negb
xor
out
nop
inc
sub
outsb
mov
jb
jge
pop
jge
fxch
sbb
jb
insl
add
call
mov
push
add
orl
cli
mov
popl
aam
adc
cmc
cmp
push
je
xlat
lahf
or
xlat
xrelease
push
or
pop
mov
jnp
xchg
mov
adc
mov
or
mov
mov
push
mov
mov
out
sbb
cld
pop
andb
jle
enter
lods
jge
cmpsl
sub
push
loop,pt
hlt
mov
inc
divl
pop
jnp
mov
jge
mov
cmp
clc
add
in
pop
test
mov
imul
cs
cltd
cli
or
mov
sti
xchg
stos
pop
loopne
jmp
lock
fisttps
push
lods
and
adc
repz
scas
imul
dec
jmp
movsb
cmpsb
add
jmp
mov
mov
fsts
shr
xor
or
mov
fwait
xchg
fcoms
add
arpl
and
xchg
fstl
movsb
dec
pusha
fidivrl
sbb
add
mov
mov
mov
cwtl
mov
imul
and
cmp
popa
push
sahf
and
and
stos
mov
ds
push
pusha
dec
jb
inc
pusha
pop
sbb
aam
jb
data16
mov
pop
sahf
decb
mov
or
in
xchg
sti
push
imul
xor
inc
cmp
pop
jp
push
jg
jmp
or
sub
test
testb
dec
mov
aam
insl
cmp
mov
rcrl
push
rolb
xchg
ds
add
imul
jb
lods
je
push
jo
pop
push
and
or
nop
mov
dec
popa
enter
lcall
stc
and
jge
gs
cmpl
pop
mov
xor
mov
out
xor
fdivrs
lret
nop
push
arpl
mov
bound
clc
enter
push
fs
aam
rorb
xchg
loope
orl
dec
push
and
add
pop
mov
push
in
mov
lock
push
lcall
aaa
cmpsb
pop
adc
ret
adc
mov
inc
push
arpl
sub
xor
imul
xor
ljmp
cmc
adc
int
clc
jne
jb
xchg
cmpsl
orb
sub
pop
sub
lds
xchg
ret
or
notl
fmuls
arpl
rcl
icebp
or
repz
test
lret
mov
push
add
out
pop
test
lea
adc
loopne
push
mov
rcr
push
sbb
xor
fwait
test
mov
daa
ds
mov
outsb
mov
lahf
std
adc
add
cmp
add
adc
adc
mov
cwtl
out
mov
les
sbb
sbb
popf
cli
inc
cli
ds
dec
in
mov
sub
icebp
or
dec
dec
pop
addl
or
repz
push
jno
stc
sti
movsb
sti
pop
movsl
xor
fdivs
xor
iret
add
imul
mov
mov
out
cmp
stos
movsl
icebp
sub
in
ss
in
sahf
cmc
lods
add
or
mov
popa
js
fwait
cmp
dec
xchg
xor
fisubs
cli
enter
fsubrl
adc
decl
mov
pop
test
js
sub
sbb
cmc
dec
xor
jo
scas
clc
push
mov
dec
inc
lret
mov
scas
push
dec
lods
add
daa
xor
or
stos
stc
je
jge
and
jg
mov
daa
or
mov
or
outsl
pshufw
xchg
push
add
mov
inc
shrl
js
repz
xchg
push
or
ret
mov
es
cmpsl
insl
inc
push
mov
mov
iret
mov
notl
adc
mov
jmp
aas
dec
fldenv
das
adc
mov
int3
cltd
mov
jbe
or
aaa
cmpsl
pop
fwait
and
sarb
rorb
and
or
fwait
ljmp
cmpsb
rcrl
cltd
filds
pusha
shll
pop
mov
in
mov
lds
sbb
mov
cmp
and
fdivrl
lds
sbb
fadds
in
push
jmp
out
mov
jbe
addr16
jg
mov
lcall
pop
add
cwtl
fiaddl
in
ror
fiaddl
push
cmp
dec
sbb
lret
pop
insb
subb
in
add
cltd
add
xor
popf
or
mov
or
out
sub
aas
xchg
jb
enter
jmp
or
call
cld
sub
iret
mov
sbb
dec
cmp
and
push
lods
idivb
push
cmp
push
je
testb
inc
adc
cld
int
aaa
add
mov
sbb
popf
aam
iret
out
in
mov
sbb
insb
js
cmp
push
jp
and
ret
pushf
xor
insb
push
add
stos
pop
ds
push
roll
scas
in
out
add
out
xchg
inc
fsubrp
or
cvttps2pi
sbb
addr16
imul
es
pop
fadds
or
icebp
inc
add
popa
lret
jmp
call
int3
mov
pop
fists
add
fwait
pop
cwtl
das
mov
add
push
jbe
outsl
jns
stos
pushf
lea
repz
icebp
test
dec
nop
add
pop
pop
aaa
inc
loopne
out
dec
in
rorl
mov
pop
popf
inc
fmull
push
adcb
adc
in
insb
sbb
icebp
dec
loopne
mov
repnz
aam
lcall
push
cmpsb
pop
inc
jge
loopne
mov
das
add
mov
lods
push
mov
fdivrl
push
sbb
xor
rorl
in
fwait
mov
xorl
test
in
divl
push
cmpsl
loope,pt
hlt
push
or
sub
jp
repz
jb
push
pop
xchg
pop
pop
mov
iret
data16
lods
in
test
mov
cli
in
dec
pop
in
mov
loope
sub
je
pop
mov
add
adc
arpl
das
test
scas
adc
add
cmp
and
cmpsb
addb
lahf
jle
orl
push
or
push
pop
out
das
add
inc
icebp
bound
sub
push
cmp
pop
scas
jae
and
stos
mov
sub
push
jp
ret
clc
or
dec
xor
je
mov
stos
xchg
out
daa
lods
push
leave
sbb
lret
pushf
cmc
call
or
cmp
sahf
lods
or
jecxz
inc
test
into
push
inc
das
lods
mov
push
jo
push
cmpsb
sarl
mov
jmp
nop
ljmp
inc
ljmp
mov
sbb
repz
in
push
repz
xlat
je
lds
fnsave
push
ja
xchg
jge
ret
xor
inc
jp
data16
xor
push
jle
or
in
fistpl
push
jl
inc
mov
mov
fdivrl
lahf
addl
pop
or
nop
cmp
dec
and
adc
inc
rcll
scas
in
test
mov
repz
pop
lret
aam
sub
ljmp
pop
fldcw
mov
test
sti
sbb
mov
ficoms
pop
or
clc
pushf
sub
ljmp
lods
dec
outsl
aad
movsb
mov
jnp
and
sbb
or
inc
or
insl
and
mov
mov
mov
jle
aas
xchg
pusha
push
or
xor
cltd
or
out
sahf
clc
mov
repnz
jle
mov
inc
in
mov
fildll
and
lock
inc
add
xchg
pop
xchg
cmpsl
test
scas
mov
or
mov
push
add
mov
gs
test
jge
jns
ds
pop
dec
imull
jae
mov
jg
xchg
int3
fwait
xor
lret
cld
xchg
mov
jl
loope
or
sbb
xchg
pop
lea
sub
sbbb
stc
cltd
sti
pop
add
xchg
mov
int
arpl
scas
xor
sub
jmp
movsl
ss
and
xchg
xor
mov
pop
nop
arpl
insb
lods
stos
insl
push
pop
mov
adc
xchg
rcll
mov
les
mov
hlt
clc
ljmp
scas
ficompl
imul
sub
daa
pop
call
sub
out
out
jnp
inc
mov
and
and
je
mov
popf
push
test
mov
ret
shrb
jb
dec
pusha
mov
xchg
sarb
pop
roll
mov
push
mov
adc
xchg
dec
dec
mov
pop
repz
loop
xchg
or
scas
mov
cwtl
and
pop
cli
push
sti
mov
lock
aad
jmp
test
jle
pop
cmp
out
pop
popf
and
ret
dec
pusha
mov
jnp
and
pop
push
lcall
cltd
mov
mov
dec
in
lods
fisubs
outsl
adc
mov
addr16
mov
ljmp
pushf
mov
enter
and
adc
jb
xor
cmpb
push
xor
pop
repz
bound
rcrl
shrb
rcrl
lret
aad
popl
iret
data16
dec
in
test
cld
fiadds
or
jne
scas
test
loopne
test
ss
mov
popa
mov
and
inc
mov
mov
jns
push
call
and
jp
aad
inc
mov
ret
mov
fistl
sub
mov
inc
dec
inc
pop
jnp
xor
push
xlat
pop
in
test
outsb
mov
sbb
mov
aas
adc
cwtd
mov
out
sbb
aas
lcall
sarl
inc
into
lret
mov
push
or
mov
lds
sbb
fcmove
cs
mov
and
mov
adc
lcall
data16
fdivrl
out
xor
jle
xchg
bound
aam
pushf
xor
lcall
aad
cmp
cld
push
jns
int
xor
mov
sbb
jnp,pn
pop
loopne
add
push
jno
rcr
pusha
and
cwtl
das
xorb
ja
sub
cwtl
es
lret
push
fisttpl
mov
iret
sbb
fldcw
add
or
and
repz
ds
insl
xchg
adc
int
cmp
cmp
add
mov
push
xchg
inc
mov
repnz
lock
scas
loope
sub
mov
mov
call
push
mov
sub
insb
push
adc
pop
int
out
push
aad
push
stos
and
cs
aam
xor
pusha
jle
xlat
jmp
ror
mov
sub
orl
call
xchg
clc
jg
sub
cs
imul
rcll
and
cwtl
fisttpll
data16
sbb
lock
rcrb
sbb
sahf
cmp
inc
push
rolb
mov
push
mov
clc
xchg
inc
push
int
cld
push
xchg
pop
mov
mov
fidivl
or
das
mov
dec
xor
int3
jae
cmp
xchg
adc
arpl
mov
lahf
or
arpl
shll
in
cwtl
call
or
jge
aaa
outsl
iret
xchg
cli
or
xchg
cmp
mov
in
fwait
jmp
ret
push
and
lahf
popa
and
xchg
pop
hlt
enter
pop
jmp
das
addr16
mov
ret
xor
mov
fsubrl
scas
rorl
scas
mov
inc
pop
xor
fildl
cld
mov
jns
adc
rorb
in
lahf
test
inc
repz
mov
inc
xchg
not
lds
aad
xor
cmp
sub
cmpsb
cmp
test
mov
push
lahf
clc
filds
xchg
dec
inc
mov
sti
imul
mov
test
cmp
bound
and
mov
mov
pop
xor
sbb
orb
inc
jge
lret
cs
test
and
inc
xchg
clc
mov
insl
or
pop
sbb
mov
push
cwtl
imul
arpl
fcomip
sub
push
pop
dec
ret
or
mov
bound
cltd
inc
ja
cmp
adc
mov
inc
pop
mov
xchg
pop
das
dec
inc
cmp
cli
sub
movsb
hlt
or
mov
fldt
mul
popf
jecxz
add
into
movsl
mov
lds
or
and
cltd
das
pop
fwait
push
mov
jmp
and
sti
rcrl
int3
ja
fwait
mov
xchg
push
ss
sahf
clc
js
ret
jns
pxor
mov
data16
inc
push
jmp
and
mov
dec
inc
push
and
lock
pop
jecxz
loop
lret
push
mov
pushf
xchg
push
ret
pop
mov
lods
jg
and
push
pop
mov
popf
loope
leave
and
loop
arpl
stos
mov
addl
ret
hlt
in
pushf
xor
das
mov
and
sbb
sbb
ret
push
popl
outsl
ja
imul
stos
lods
add
mov
dec
adc
rcrb
jne
test
jecxz
pop
and
sbb
adc
movsb
pushf
sub
lret
bound
mov
mov
repz
pusha
xchg
mov
shrl
mov
sub
lods
and
adc
mov
and
sbb
cmpsb
inc
jo
mov
call
inc
sbb
push
inc
aas
addb
add
rol
pop
and
fwait
or
rcrl
roll
stc
mov
pop
xchg
jge
out
sub
and
cmp
jns
xor
test
push
cmp
inc
lods
daa
enter
or
lret
xchg
repnz
push
push
cltd
and
and
iret
cli
inc
inc
lods
inc
mov
sbb
data16
das
aam
and
into
pop
sarl
faddl
mov
mov
loope
xchg
addr16
int3
add
cli
test
imul
decl
xor
js
xchg
pop
lret
int
cmpsb
gs
mov
ds
loopne
lret
sbbl
mul
pop
mov
pusha
pop
cmp
xor
mov
push
mov
inc
test
in
shrb
out
push
fbld
subl
mov
int3
data16
scas
out
aaa
mov
cwtl
call
stos
adc
pusha
clc
add
pop
ret
into
lret
jge
in
dec
add
mov
stc
push
cld
mov
mov
lds
in
jecxz
pop
adc
mov
outsb
inc
test
and
mov
aad
push
or
enter
add
fwait
xchg
inc
fimull
scas
imul
in
or
add
fdiv
jb
add
mov
cmp
mov
jae
cltd
jl
xchg
mov
aad
jg
sub
in
add
loopne
sub
sti
aaa
mov
push
jb
xchg
test
jmp
xor
pushf
dec
cmp
dec
rorb
and
iret
mov
ficompl
fbld
push
repnz
andb
jb
sub
add
cmc
mov
cmp
xlat
ljmp
sahf
cmp
loopne
rorl
and
xor
repnz
out
test
jmp
or
xchg
mov
inc
pop
in
incb
std
cmp
push
mov
lods
mov
std
mov
movsb
and
xchg
sbbl
push
idivb
xor
add
fnstcw
ds
mov
rclb
mov
cmc
pop
sahf
out
mov
or
xor
mov
loopne
dec
stos
fwait
xor
pop
mov
cld
jle
scas
add
adc
test
sbb
ja
lods
sub
mov
out
cmpsl
push
rep
mov
loope
jmp
jge
cld
jb
divb
xchg
andl
lods
in
jbe
leave
mov
lret
push
mov
aad
cmp
nop
cmp
lds
movntps
cmpsb
lret
mov
imul
xchg
jecxz
shll
stos
push
loop
in
mov
loopne
mov
jp
and
ret
test
pop
repz
or
cmc
ja
int3
or
ds
jbe
loopne
mov
jl
insb
aad
inc
lahf
addr16
test
js
or
jnp
je
add
cmp
dec
push
jge
rolb
mov
std
xchg
push
xchg
adc
jbe
mov
jecxz
ret
jle
testb
add
add
pop
cmp
scas
les
std
iret
push
mov
mov
aas
mov
inc
inc
int3
cmpsb
lods
gs
mov
loopne
into
and
mov
es
push
fistl
fdivl
jecxz
addr16
or
in
pop
mov
push
shl
adcb
fadd
jmp
jle
mov
lock
add
jg
xchg
sahf
in
aam
jmp
xor
jmp
lea
mov
jo
cltd
ds
mov
ficoml
mov
push
aad
mov
mov
ret
divb
in
fsubr
xchg
cmpsl
mov
test
mov
dec
or
sub
xchg
push
in
jae
rol
popa
in
dec
sbb
out
hlt
mov
dec
imul
lea
incw
mov
and
int3
xchg
subb
testl
pop
loope
test
pop
mov
add
push
call
inc
mov
fstps
inc
incb
fwait
jno
in
inc
loop
xor
pop
mov
int
dec
xor
sbb
sbb
cmpsb
insb
out
sahf
sbb
ds
xor
ljmp
mov
sbb
dec
in
and
roll
cwtl
ljmp
ja
mov
cwtl
cmp
pop
aad
cwtl
pop
sub
push
sbb
jno
outsb
je
out
sub
pop
fsubrp
popl
outsl
jnp
aam
decb
inc
pop
dec
imul
mov
out
xchg
mov
push
lods
cmpsb
fadds
sti
add
and
and
and
test
and
sbb
dec
in
aas
mov
push
or
mov
or
sbbb
mov
test
in
movsb
push
push
mov
sub
fisttps
jae
scas
xor
lea
sahf
in
in
or
dec
fsubs
bound
or
or
cltd
cmc
arpl
das
jge
dec
scas
dec
sbb
test
ret
aaa
movsl
jbe
pusha
sbbl
mov
push
mov
pop
stos
mov
xchg
mov
test
ret
and
outsl
push
into
lods
out
ret
hlt
hlt
or
shlb
push
sarl
repz
stos
mov
inc
pusha
and
mov
fwait
jns
push
mov
pop
sbb
mov
mov
or
mov
mov
pop
daa
stos
xsha1
cmpsb
iret
jecxz
xor
dec
jno
mov
aad
rcll
aaa
mov
adc
mov
cmp
sarb
fwait
stos
fildl
mov
aas
ljmp
cli
mov
das
pop
dec
imul
ds
inc
in
mov
pop
pushf
mov
xor
mov
xchg
jp
jmp
sbb
movsb
jb
inc
inc
insb
xor
popf
call
fs
jge
outsb
push
ss
loopne
mov
or
pop
rclb
fcoms
sub
xchg
mov
cltd
std
and
add
mov
push
xchg
sub
das
cmp
jecxz
mov
pop
add
mov
cmp
faddl
sub
jne
and
fmuls
push
mov
inc
imul
mov
shl
cmp
mov
mov
xor
push
pop
push
iret
repnz
jae
popf
sub
push
fistl
mov
mov
rcll
nop
add
jbe
adc
cltd
in
push
sub
mov
pop
mov
enter
popa
mov
int3
xchg
add
xchg
divl
mov
into
daa
lret
or
xor
cmp
iret
push
mov
shrb
or
outsb
mov
jb
arpl
fidivs
inc
and
mov
pop
pop
test
mov
lods
sti
xor
sub
push
popf
arpl
and
inc
nop
inc
flds
shl
mov
test
lret
mov
sbb
or
jne
adcl
in
outsl
ret
ss
inc
pop
mov
or
sahf
mov
adc
or
es
fcmovnb
xor
sarb
sub
clc
xchg
das
cld
dec
dec
ss
sub
ss
add
das
pop
loope
or
js
imulb
mov
or
mov
jnp
add
inc
inc
iret
and
sub
inc
or
out
push
shrb
jnp
mov
mov
ret
sar
leave
mov
add
adc
in
or
scas
cmpsl
jbe
cmpsb
pop
xchg
lds
adc
mov
movsl
adc
outsb
cmp
lahf
jae
jg
mov
add
adc
xlat
jl
cld
add
xchg
mov
xor
jp
in
adc
lahf
inc
or
aad
xchg
cmpsl
call
dec
in
jo
ror
lock
cld
ds
bound
subb
ss
out
xchg
ds
dec
lret
imull
aaa
mov
push
sahf
sub
sub
and
push
inc
gs
mov
into
shl
jl
das
out
add
frstor
sub
popa
cmp
dec
pop
cmovnp
mov
and
lcall
fildl
push
insb
aaa
scas
xchg
rcrl
sbb
mov
cmc
pop
fmuls
testl
outsb
daa
cli
leave
mov
data16
cmp
jp
flds
mov
mov
imul
arpl
lods
popa
adc
mov
test
cld
xchg
insb
xor
jg
sbb
shll
call
or
lea
fldenv
xor
aam
jge
jmp
cmp
or
and
sbb
mov
pop
xor
in
daa
mov
lret
xor
addb
fwait
ljmp
ret
call
loopne
js
iret
cltd
stc
repnz
sub
dec
mov
dec
ficoms
sbb
mov
jecxz
sti
mov
mov
shl
popa
test
rcl
adc
lods
lock
adc
ja
sub
lret
xchg
mov
mov
xchg
inc
xchg
imul
inc
jp
lret
adc
pushf
mov
into
jbe
xor
mov
mov
mov
inc
mov
cmpsl
fs
rorl
pop
mov
mov
jg
ljmp
pop
or
test
icebp
xchg
rorb
mov
cltd
xor
nop
mov
ss
cmpsl
in
jbe
push
fistpl
loopne
cmp
shll
dec
dec
sub
shr
loopne
aad
lea
push
cmpsb
cmp
jbe
ljmp
sbb
daa
stc
xchg
sub
sbb
repnz
pop
and
lds
cli
inc
pusha
lea
jne
outsl
pop
cs
ljmp
call
daa
mov
jnp
mov
mov
mov
int
jnp
cmc
push
or
sbb
pop
popa
sbb
inc
xchg
mov
mov
or
lcall
decl
pop
ljmp
xlat
mov
mov
push
imul
es
fnstcw
xor
sub
mov
mov
mov
bnd
fisubs
sti
or
cli
mov
into
out
popf
xor
mov
inc
jmp
cmp
pop
jnp
out
lret
cld
movzbl
push
pop
xor
mov
sub
dec
and
or
into
enter
stos
mov
outsb
jnp
adcb
add
je
jne
sub
add
xchg
jg
rorb
dec
movsl
in
ss
into
addr16
mov
pop
push
mov
iret
adc
xchg
jecxz
mov
shrl
mov
repnz
leave
xchg
outsb
in
daa
inc
push
push
adc
insb
into
and
adc
cltd
out
sti
dec
dec
ss
adc
pop
iret
jae
int3
mov
ljmp
cs
pop
int
sbb
out
loop
les
add
ret
shrb
xchg
adc
mov
mov
jecxz
cmp
pop
icebp
add
pop
cmp
sti
mov
and
push
push
add
mov
cmpsl
loopne
scas
push
fcomip
push
movsl
fnstsw
into
gs
leave
fnstsw
jg
xor
add
mov
es
ss
daa
mov
outsl
in
adc
lahf
mov
popf
adcb
test
insb
pop
lods
lahf
or
xor
xor
dec
cwtl
lret
pusha
adc
and
cmpsb
ss
imul
xchg
sub
cld
ss
push
inc
fidivl
pop
dec
sbb
fs
arpl
test
ds
adc
pop
pop
xor
pushf
adc
xchg
scas
loopne
mov
bound
inc
loope
mull
sub
repnz
lock
cltd
testl
dec
pop
mov
inc
fiaddl
mov
and
mov
hlt
cli
cld
fwait
stos
fucomi
jmp
leave
mov
mov
jg
lods
ljmp
lock
xlat
fwait
adc
inc
ljmp
mov
push
mov
sub
int3
and
lock
xor
stos
shrb
arpl
mov
fwait
leave
fcos
push
mov
push
out
daa
les
aad
fbstp
aaa
fwait
data16
push
jb
scas
loop
fwait
test
xchg
jo
cmp
push
outsb
mov
test
loop
movsl
push
es
xchg
jle
inc
jno
adc
mov
in
out
sbb
and
inc
pop
into
xchg
cltd
repnz
xor
ja
test
test
push
mov
mov
cmp
int3
xchg
stos
sub
daa
mov
rcrb
in
sub
pop
pop
ret
cmp
lea
push
fidivrl
mov
roll
pop
and
js
adc
dec
mov
outsb
fwait
and
cmp
dec
and
icebp
test
or
roll
scas
aas
dec
loope
icebp
out
stos
mov
fldenv
cmp
or
push
inc
lret
sub
or
lret
adc
dec
add
jbe
pushf
push
rcrl
mov
setp
int3
jo
xor
int
lret
cmp
push
push
mov
mov
mov
ljmp
sub
dec
mov
inc
cs
in
ds
pop
repnz
push
mov
icebp
mov
xchg
mov
ds
movd
pop
das
mov
pusha
test
add
xchg
fs
ss
mov
in
test
or
ljmp
in
repz
cmpsl
push
insb
out
enter
xor
ljmp
push
or
and
stc
fucomi
jp
adcb
cltd
pop
ret
cli
jle
cmp
sbb
sbb
sbb
sbb
cmp
fucomip
iret
pop
data16
mov
mov
ficoms
rol
mov
push
ret
rcr
cltd
rorb
mov
pop
fldt
sub
sub
pop
jl
mov
adc
icebp
aam
or
enter
aad
fisttpl
addr16
adc
pop
cli
or
inc
dec
rcrl
add
sub
ljmp
outsl
or
cmp
outsl
test
xor
int
fisubrl
jne
adc
das
cmp
jecxz
cmpsl
lea
cmp
pop
notb
pop
xor
test
cld
lret
xchg
les
mov
dec
popf
mov
adc
adcl
in
xchg
jmp
out
push
ljmp
jno
xor
loope
and
mov
test
xchg
add
mov
outsl
aaa
out
xor
ffree
pop
fcoml
sahf
out
jle
daa
sub
sbb
sub
sbb
mov
mov
cmp
sbb
sbb
jg
mov
dec
ja
add
jnp
shlb
dec
and
sarl
and
std
stos
clc
test
std
inc
ljmp
arpl
cld
and
cwtl
call
inc
push
lods
mov
xchg
imul
pushf
mov
cmp
sbb
pop
cmp
mov
jno
fs
aad
clc
sahf
inc
mov
lods
xchg
gs
or
push
push
or
jnp
jle
inc
movsl
add
xlat
es
inc
stos
inc
pusha
frstor
xchg
test
in
mov
in
filds
mov
jno
scas
inc
sahf
push
in
and
push
imull
inc
sbb
dec
fs
pop
cwtl
sub
and
xor
dec
rolb
stc
bound
pcmpeqd
lea
lods
shll
push
sub
jmp
fistps
pop
lds
sbbl
add
sti
xor
mov
aam
sbb
scas
stos
adc
push
out
arpl
jae
cmc
xchg
sbb
inc
rcr
push
std
scas
or
shl
pop
cmpsb
loop
jbe
cmpsl
cmp
xchg
jl
sub
mov
xchg
and
mov
arpl
bound
push
nop
dec
lods
inc
cmp
inc
sbb
in
dec
adc
lahf
dec
jecxz
jle
into
loop
xchg
mov
inc
push
loopne
sti
in
sub
push
pop
mov
cld
pop
orl
sarl
jle
jo
mov
scas
inc
fistl
sti
sbb
rep
test
xchg
insb
test
leave
repz
xchg
enter
add
cmpsl
adc
popl
jne
mov
jns
and
adc
fiadds
test
lret
fsts
and
mov
inc
fildl
cmp
cwtl
call
andb
or
sub
lea
in
inc
adc
cmp
popf
pop
dec
mov
jns
aaa
jno
sub
jg
les
mov
dec
imul
jecxz
dec
jne
xor
dec
mov
mull
xor
mov
pop
dec
dec
cmp
out
hlt
leave
push
xchg
lret
add
mov
cmpsl
lret
lret
mov
inc
fiaddl
outsl
loopne
push
out
lret
int3
mov
push
insb
sbb
and
push
ret
xchg
ret
and
lods
and
int3
add
sarl
stos
xor
dec
push
dec
xlat
loope
int3
fsubs
cmpsl
sbb
ds
test
pop
hlt
push
hlt
push
jb
jl
aas
scas
js
loopne
mov
mov
fcompl
mov
jno
jb
jp
mov
nop
stos
inc
xchg
cmc
mov
addr16
shrb
jbe
loop
lods
pop
icebp
scas
inc
and
push
outsl
jns
cltd
xor
lahf
pop
daa
out
mov
xchg
aas
aas
mov
adc
dec
jbe
stos
stos
jecxz
and
cmpsl
xchg
add
jecxz
jnp
mov
cmp
mov
les
push
out
and
ja
xchg
das
mov
cmp
jno
or
clc
or
outsl
lock
cmp
dec
sbb
pop
adc
sbb
jbe
aam
xor
xor
add
test
int3
and
adcb
pop
jns
js
sbb
inc
aad
clc
push
loop
test
insb
sbb
mov
daa
jg
push
lea
jecxz
mov
push
mov
xchg
outsb
addr16
inc
xchg
decb
cmp
push
loope
mov
aaa
adc
lahf
pusha
gs
pop
dec
test
mov
inc
add
push
es
leave
or
in
test
push
imul
scas
adc
clc
mov
stos
test
fwait
ret
ljmp
push
cmp
xchg
clc
js
inc
mov
jl
arpl
adc
ss
inc
or
stos
add
pop
adc
jno
int
leave
xchg
dec
data16
or
cmc
add
or
adc
rcll
xlat
and
push
inc
test
sbb
mov
mov
or
adc
mov
fildll
adc
pusha
xor
push
mov
test
add
inc
leave
inc
stos
cli
dec
mov
lahf
xlat
lods
inc
loop
push
or
mov
pop
jg
mov
and
cmpsl
or
cs
mov
push
mov
pop
ficompl
xchg
push
push
mov
mov
dec
lret
mov
cmp
mov
sahf
mov
inc
ret
cmpsl
cwtl
mov
mov
popa
add
dec
lret
movsl
jno
imul
dec
dec
fistl
sbb
or
or
mov
out
mov
leave
jae
xor
fstl
push
fildll
les
jg
es
sub
sbb
daa
push
dec
add
scas
xchg
enter
push
or
push
sbb
lret
cmp
enter
mov
dec
push
mov
into
stc
lods
ja
rolb
call
fldcw
jl
add
into
mov
mov
lret
cld
and
mov
pop
cmp
cli
inc
rcll
fwait
push
sarl
jmp
mov
adc
and
xchg
mov
insl
cmp
push
adc
int
cmp
and
sub
cmpl
push
jo
xor
addr16
add
mov
xchg
mov
inc
push
bound
sbb
fcmovnb
push
ljmp
out
orl
dec
scas
ja
xchg
out
je
sbbb
mov
jmp
iret
or
inc
adc
sub
pop
into
lea
pop
sbb
mov
dec
dec
inc
xchg
test
add
js
test
add
adc
inc
and
cmp
js
adc
and
mov
stos
rol
scas
mov
test
jae
mov
cld
adc
push
jmp
adc
sarl
jb
mov
jns
mov
test
mov
in
fcomp
clc
rcrb
dec
xor
popa
outsl
sahf
cmp
stos
test
pusha
push
rcrb
das
ja
jmp
es
push
in
movsb
jle
lret
push
test
cmp
sbb
int3
sub
insl
out
aad
pop
outsb
add
test
divb
call
and
jb
dec
mov
dec
jnp
ret
pop
and
xchg
adc
mov
jle
xchg
lods
sub
lret
dec
outsb
add
gs
lea
push
pop
imul
ljmp
outsl
cmpsb
pop
xchg
and
rep
stc
cmp
mov
dec
mov
sub
int
inc
pusha
lds
int
sub
into
dec
hlt
pop
sti
test
jecxz
aam
jmp
sub
dec
fsubrp
movsb
xchg
lret
mov
fstpt
in
cmp
decb
adc
jnp
test
push
xor
call
xchg
lahf
pop
jbe
ja
and
add
ficomps
cli
in
mov
sub
or
shlb
dec
pop
inc
pop
loopne
cmp
mov
push
inc
popa
aad
and
sbb
mov
loopne
clc
and
mov
sti
sti
pop
sbb
insb
fdivr
xchg
dec
adc
sbb
jecxz
daa
xchg
int
jecxz
pop
outsl
lock
xchg
addr16
movsb
jecxz
mov
nop
es
and
loopne
pop
cmp
fidivs
mul
and
fsubl
jbe
inc
add
aam
aas
cmpsb
sub
pop
cmp
dec
pop
mov
fsts
cwtl
leave
fidivs
adc
and
insl
xchg
repnz
mov
inc
push
cmc
mov
push
or
sub
in
mov
and
test
add
push
ja
ds
aad
add
lds
addr16
mov
ficomps
int3
rclb
cmp
mov
ficoms
xchg
rorb
mov
fldl
cmp
fisubs
sub
das
or
bnd
lahf
jo
xor
pop
inc
loopne
pop
xor
shll
jmp
fwait
out
out
cli
std
jmp
adc
int
push
push
push
xor
jbe
in
mov
fisubrl
jnp
or
jge
xchg
mov
jno
rclb
jle
call
lcall
xchg
inc
aas
iret
mov
push
insl
test
add
outsb
mov
call
fs
xlat
cmp
mov
mov
push
mov
jno
mov
xor
push
sbb
xchg
push
sbb
mov
ror
je
push
sbb
bound
shlb
pop
mov
mov
scas
inc
xor
push
push
jae
adc
adc
cld
mov
lea
lods
pop
std
mov
sub
xchg
ret
adc
aas
push
xor
rclb
mov
lcall
inc
fisttpll
xor
pop
ss
push
mov
jae
sub
add
notb
jmp
and
leave
or
cmp
cmp
test
aam
xor
dec
sahf
scas
jge
imul
jno
xchg
pop
mov
inc
pop
fisubrl
mov
pop
repnz
into
gs
pushf
pop
jle
sub
mov
nop
inc
and
in
jb
cmpsl
lahf
push
aaa
add
jno
iret
mov
cmpsl
adc
mov
mov
mov
mov
jb
mov
add
mov
jno
mov
xchg
jne
mov
bnd
xor
pop
jne
fnstsw
add
or
cmpsl
push
cs
mov
add
mov
push
mov
aam
sub
mov
cs
fucomp
push
lds
in
stos
jge
add
loopne
hlt
inc
pop
fisttpl
dec
and
lret
xlat
repz
lods
jo
imul
cwtl
mov
xchg
add
sub
xchg
iret
pop
into
cli
pop
jle
clc
lcall
dec
and
scas
pop
pop
std
adc
popf
jg
push
repnz
sub
xor
xlat
out
inc
stos
mov
mov
int3
mul
xchg
mov
mov
xchg
sbb
data16
arpl
repnz
ret
insb
jl
out
mov
sub
push
data16
cmc
sub
mov
dec
push
dec
jbe
scas
inc
rclb
mov
repz
imul
push
xor
add
add
outsb
mov
dec
xor
xchg
and
xor
lret
jno
popa
xorl
out
xchg
addl
pushf
xchg
and
cs
push
cmc
cmp
xor
jnp
pop
out
pusha
std
or
test
or
add
mov
add
pop
jmp
pop
divl
aad
js
add
popa
mov
shrb
and
mov
arpl
test
mov
cmpsb
enter
sbb
and
iret
leave
or
or
jg
daa
xchg
fstps
movzwl
cltd
pmulhw
adc
dec
dec
xor
sub
xor
mov
movsb
sbb
cmp
dec
nop
aas
mov
xchg
pop
ja
or
arpl
jle
mov
test
pop
sbb
in
or
and
add
mov
adc
pop
xchg
push
mov
add
daa
and
js
les
xor
pop
rorl
out
outsb
hlt
ds
aad
inc
pop
dec
pop
sbb
or
mov
xchg
mov
mov
push
rcl
xor
inc
mov
outsl
hlt
fidivs
sub
sub
or
sahf
aaa
adc
lret
mov
std
shrl
add
popa
pushf
hlt
fadds
xchg
add
jecxz
sub
shll
sub
sbbb
jno
popf
gs
loop
cmp
stc
sub
int
pop
cltd
jae
out
inc
clc
cmpsl
ljmp
pop
test
lea
inc
xchg
mov
dec
scas
mov
fisubrs
lds
addl
test
jne
sub
aas
push
scas
jno
faddl
imul
jne
int3
movsb
sbb
popf
dec
leave
cmp
xor
fistps
add
jl
lret
fimuls
or
add
pusha
je
insl
jnp
aad
mov
push
push
push
aas
cmp
mul
outsb
clc
and
cmp
lret
in
pop
cltd
nop
fimuls
dec
out
dec
cmp
cmp
lods
cmp
call
xor
push
push
cld
das
push
jbe
and
or
imul
inc
mov
shl
out
sub
inc
xchg
and
cltd
aas
dec
lret
push
mov
ss
mov
popaw
stos
lret
mov
cs
dec
mov
cmp
insl
lcall
jo,pn
pop
cli
mov
fndisi(8087
hlt
into
sahf
lds
testb
addr16
and
pop
movsl
adc
or
scas
stc
xchg
out
or
mov
pushf
arpl
sti
int3
cmp
xchg
push
nop
or
mov
lock
sbb
and
cs
xlat
outsb
push
pop
cmc
shll
mov
xor
pop
cwtl
jae
inc
mov
or
pop
js
inc
js
decb
mov
sbb
cmp
imul
push
mov
mov
and
lds
xor
push
movsb
popf
aaa
ss
loope
cmp
outsl
pop
jge
das
scas
cmp
lcall
xor
jecxz
sbb
adc
or
xlat
pop
and
sbb
xchg
mov
cld
xchg
not
xchg
xor
out
loope
pop
in
xor
addl
out
inc
sbb
lret
push
jns
pop
cmpsb
cmp
cmpsl
shr
add
movsl
movl
lcall
loop
std
xchg
pop
mov
inc
jecxz
into
lahf
mov
jno
jge
xchg
mov
mov
dec
rcrb
mov
xor
xchg
jno
int
shl
aaa
mov
and
cli
sahf
jge
test
stos
pop
pop
repnz
cmp
cmp
sahf
jg
pop
jl
xchg
mov
in
inc
outsl
sbb
and
and
test
loop
ss
rolb
xchg
data16
sbb
or
cltd
add
lds
sahf
aad
inc
mov
xchg
pop
push
mov
jbe
xor
push
inc
mov
in
xchg
pop
sbb
mov
xor
sbb
fcomp
lret
push
xor
andb
cmpb
or
mov
and
rclb
push
sbb
cwtl
cmpb
jl
in
lcall
jmp
sti
pop
add
cmpsl
jb
mov
into
repnz
adcb
mov
outsl
adc
cwtl
pop
dec
push
stos
inc
addl
pop
test
dec
test
jl
daa
outsl
sbb
movsb
mov
sbb
iret
mov
lods
stc
pop
aaa
scas
jbe
or
test
fcomp
dec
mov
mov
sbb
dec
push
mov
push
sbb
loop
ja
jno
inc
xlat
js
arpl
push
sub
pop
mov
jg
cmp
mov
mov
jge
dec
fs
jno
cmpsl
mov
xor
mov
into
jne
bound
mov
fs
popa
dec
dec
cmp
adc
loope
inc
pop
and
rorb
dec
jmp
lcall
sub
push
cld
push
cmp
movsb
lock
cmc
cmc
jg
enter
push
pop
addr16
rorl
mov
movsl
push
cli
int3
or
sbbl
adc
mov
dec
pop
cmp
inc
push
adc
xor
adcb
scas
std
mov
or
es
inc
notl
mov
cs
pop
cwtl
out
les
stos
inc
and
clc
lcall
xchg
js
orl
out
sub
outsb
pop
insb
insl
add
pop
jg
pop
pop
jge
mov
notb
rcrl
mov
fcmovnbe
test
scas
roll
xor
mov
mov
incl
movsl
push
dec
lea
es
fcompl
outsb
test
push
cmp
jns
cld
scas
mov
xor
sbb
xor
mov
inc
idivb
lods
inc
scas
in
movsl
mov
inc
lret
pop
enter
adc
nop
inc
push
ret
hlt
out
xlat
push
lea
dec
mov
fldcw
jns
rol
push
test
or
fcomip
inc
cmpl
imul
adc
call
ds
scas
fimuls
int
ljmp
sbb
mov
jns
shlb
lahf
mov
int
push
add
ljmp
mov
sub
pop
mov
cmp
dec
out
dec
lret
jo
sub
mov
mov
mov
sub
xchg
lahf
add
inc
cli
push
insl
sbb
insb
cld
imul
add
sub
stos
dec
loopne
repz
cmpsb
lea
mov
and
lods
jbe
loopne
out
inc
sub
sub
inc
stc
lea
xchg
lahf
xor
xchg
jbe
mov
enter
inc
sti
sbb
insl
sbb
ret
stc
fs
idivb
sti
nop
push
mulb
scas
idivl
mov
mov
xchg
int3
xor
adc
jbe
in
lods
sbbb
rorb
pop
sbb
xchg
fistpl
sub
lock
data16
dec
xor
dec
inc
mov
push
out
out
outsb
cmp
jmp
dec
jl
loope
fwait
sti
mov
push
cmc
inc
jne
ja
movsl
xchg
push
daa
mov
inc
pusha
enter
aam
insb
lods
xchg
sub
jg
jp
loop
adc
iret
movsb
aad
je
jecxz
daa
sahf
dec
addl
mov
and
js
stc
pop
mov
stc
or
cmpsl
xchg
fcom
cmp
je
cmp
cmc
adc
sbb
or
emms
mov
out
or
adc
std
mov
push
shll
mov
dec
fcomps
clc
or
repz
lcall
lds
das
nop
in
mov
add
xchg
mov
pop
and
or
bound
shll
inc
push
iret
mov
jmp
rclb
je
dec
sub
sahf
push
orb
jg
pop
fadd
mov
sbb
pop
adc
mov
add
mov
outsb
cmpsl
enter
adcl
sbb
ficompl
push
lret
pop
jb
inc
repz
ret
mov
or
pushf
or
cmp
inc
outsb
jno
and
iret
dec
in
repz
dec
and
imul
aam
jo
mov
adc
rorl
repz
mov
rcll
sti
push
cmpsb
cmp
sbb
xor
sahf
inc
cmp
mov
sub
mov
inc
decl
jne
andl
mov
add
cmp
cwtl
lea
dec
icebp
pop
lods
adc
jns
add
movsb
cmp
fcoms
je
ret
push
jmp
fnstenv
test
cmp
daa
dec
xor
adc
das
stos
mov
inc
sbb
mov
and
repz
popf
lret
mov
ja
dec
fdiv
push
and
xor
or
jle
mov
mov
fists
cwtl
pop
mov
icebp
test
enter
shl
mov
aas
call
mov
jg
inc
adc
sbb
xor
cmpsb
in
sbbl
cmp
loop
pop
xchg
fwait
and
mov
jge
or
and
fsubrl
lea
out
xor
xchg
push
bound
or
dec
in
inc
push
jno
imul
lods
inc
movsl
repnz
xlat
in
dec
xor
mov
mov
mov
movsb
mov
fbld
mov
or
xchg
mov
jg
push
xor
pushf
mov
int
out
jbe
ret
mov
push
mov
xor
xlat
mov
fimull
xor
repz
aad
adc
daa
mov
xchg
js
test
mov
cmp
or
rcrl
jbe,pt
out
lahf
adcb
loopne
and
pop
fisttpl
dec
mov
pop
addr16
or
aas
inc
ljmp
mov
ucomiss
repnz
dec
push
jne
fs
lret
lcall
mov
ja
es
es
jle
test
inc
xchg
and
ja
daa
rolb
pop
adc
sahf
mov
mov
xchg
ja
adc
jb
addr16
mov
push
shl
mov
xchg
rclb
stos
inc
xchg
loop
repz
mov
adc
arpl
cmp
pop
in
sub
stos
mov
in
leave
lea
mov
sahf
add
lret
inc
out
inc
push
cmpsl
mov
jmp
mov
jae
js
dec
cmp
xchg
adc
repnz
fucomip
xchg
shll
xchg
popf
outsl
cmp
sub
and
push
inc
xor
in
lret
jl
push
fs
test
lahf
divl
in
cwtl
das
pop
inc
lods
ror
pop
popf
push
adc
pop
loopne
xor
sub
dec
cmp
ret
ficompl
push
add
push
pushf
jo
xchg
loopne
loop
mov
sub
repz
fwait
lea
jno
pop
cmp
jbe
sub
fisubs
dec
ds
xor
cs
mov
sub
push
addl
adc
int
sbb
add
lods
jo
pop
lds
fwait
sbb
shrl
or
xchg
lret
test
int
outsl
sbb
push
fs
push
test
insb
add
jbe
mov
imul
jl
pop
and
scas
and
pop
repz
and
inc
arpl
sbb
test
lcall
dec
pop
rclb
dec
pop
jb,pn
mov
lds
xchg
and
movsl
dec
fisubs
cs
nop
xlat
mov
cmpsb
and
subb
loopne
clc
xchg
fwait
or
shlb
mov
shl
adc
adc
cli
inc
or
inc
sbb
push
ljmp
cli
shlb
xchg
dec
sub
adc
cmp
ret
add
outsb
xchg
dec
in
xchg
movsl
js
insb
inc
sub
mov
sbb
hlt
clc
mov
cmpsl
jge
xchg
imul
icebp
cmp
bnd
and
mov
sub
jl
mov
ja
pop
outsb
adc
add
imul
xor
lds
stos
inc
popf
sahf
pop
dec
imul
add
pushf
test
push
outsb
std
xor
mov
adc
xchg
push
lcall
das
ret
sub
and
add
inc
push
pop
clc
scas
arpl
jp
dec
inc
repz
push
ljmp
cltd
inc
mov
mov
pop
int
rorb
and
test
lret
jb
pop
icebp
lret
andl
add
sbb
sti
int
loopne
lea
or
jns
and
cld
and
push
inc
mov
cltd
sti
js
push
std
inc
lods
fst
add
popa
jno
jns
xchg
test
scas
xchg
dec
jl
dec
cmp
cmp
jae
xchg
addb
inc
int
push
popf
xchg
in
les
mov
ret
cmpb
jae
icebp
loopne
scas
fldenv
je
pop
push
fwait
sbb
adcb
cmp
idiv
add
in
push
mov
mov
xchg
jmp
fstps
xor
mov
cmpsb
imul
das
adc
jge
add
sub
testl
cmpsl
inc
call
orl
loopne
push
mov
jp
cmc
mov
in
jge
arpl
in
inc
jle
stc
test
test
xchg
popf
std
lcall
push
jmp
mov
in
mov
jmp
cld
push
imul
lret
test
add
push
cmpsl
mov
out
jg
mov
ficompl
or
shlb
add
lcall
out
ret
insb
xchg
sub
jg
push
mov
inc
dec
cmc
inc
das
pop
js
int
into
daa
or
dec
cmp
out
hlt
and
outsb
add
jae
iret
add
std
pusha
testl
jle
enter
pop
outsl
sbb
jno
pop
lret
daa
cmp
push
pop
add
bound
scas
mov
push
jmp
cltd
mov
and
xchg
je
pusha
ss
mov
movsb
push
out
sarb
ss
jno
ss
lret
xor
ret
jb
mov
fsubrs
lock
ja
fsts
and
andl
dec
mov
cmp
outsb
icebp
mov
cwtl
psrlw
jmp
jbe
fidivl
or
popf
adc
fcmove
jmp
test
sarl
mov
cmp
popa
icebp
adc
nop
cmp
adc
into
jbe
sbbb
adc
push
and
test
or
add
mov
cmpsl
mov
inc
mov
js
mov
les
fsubrs
adc
adc
mov
sub
jmp
sbb
imull
adc
std
cmp
or
or
add
psrad
mov
dec
lock
scas
push
icebp
push
xchg
movsl
js
push
jecxz
pop
xchg
clc
fwait
loope
jle
daa
add
mov
aaa
imul
test
mov
fmul
sub
addr16
dec
mov
pop
jno
mov
push
mov
clc
mov
or
loope
gs
inc
pop
sbb
test
sbb
in
push
movsl
aaa
add
scas
fimuls
lock
push
dec
push
jg
push
popf
pop
mov
daa
inc
jbe
dec
xchg
cmc
mov
popf
adc
mov
out
xchg
stc
mov
push
imul
adc
lret
enter
mov
popa
push
jae
xchg
push
jge
stc
xchg
sub
push
aaa
fcos
push
and
enter
cli
insl
xlat
push
lahf
sbb
dec
mov
adc
sub
lock
and
shl
or
outsb
pushf
mov
int
mov
cmc
mov
clc
sahf
mov
loope
mov
iret
data16
xor
push
mov
mov
lods
lods
push
push
inc
into
test
jo
fbstp
addr16
pusha
sti
lcall
adc
rcr
es
cwtl
sub
mov
mov
inc
js
inc
stos
popa
xchg
push
ja
push
aad
cwtl
in
lret
loope
inc
mov
repnz
add
sub
loopne
shrl
add
cmpsb
push
push
sub
mov
or
cmp
and
imul
mov
adc
xchg
stos
inc
mov
das
pushf
push
mov
in
call
fwait
mov
jmp
das
mov
xchg
inc
dec
shlb
stc
popa
clc
sub
add
jp
xor
out
aas
cmp
jmp
mov
in
push
std
bound
scas
add
loop
mov
mov
stos
push
roll
jnp
jae
out
lods
lea
xchg
into
sahf
pushl
inc
fldcw
into
pusha
fsubr
fistpll
sub
fmul
push
enter
jb
pushf
aaa
pop
mov
or
add
loope
divb
xor
add
jp
insb
xchg
out
push
fildll
je
sub
pop
xchg
xlat
fimull
scas
ss
jecxz
jl
dec
call
pushf
cli
jge
sub
or
xchg
jle
adc
sbb
movsb
inc
movsb
push
cltd
bound
aam
loop
mov
and
cwtl
arpl
sbb
jnp
lret
loop
faddl
xchg
sbb
cmp
push
mov
adc
xor
push
imul
jno
insb
push
fwait
repz
mov
pusha
rol
shlb
rcrl
jb
outsb
fsubl
pushf
mov
cmp
fdivs
xor
into
xor
dec
push
push
jecxz
xorl
pushf
std
ret
xor
leave
mov
cmp
cmp
mov
js
jle
mov
xchg
push
mov
dec
xlat
aas
pusha
push
aas
cs
mov
jb
pop
and
mov
test
lahf
js
add
pop
dec
popf
xor
insl
mov
ss
les
stos
mov
sub
sub
cmpsl
dec
lds
rcll
imul
stc
call
or
fs
dec
rol
sub
das
in
xor
pushf
push
cmpsl
sbb
sub
sar
push
inc
inc
out
shrb
xchg
shrb
or
add
fwait
cs
mov
das
repnz
jae
pop
and
xchg
imul
push
jae
cmpsl
mov
arpl
jno
das
popa
rolb
fwait
push
ficompl
mov
ja
rorb
sbb
sub
mov
lock
clc
push
sbb
or
cs
gs
xchg
ret
outsb
inc
sbb
jo
lock
es
loope
fstpl
in
or
clc
imul
loopne
imull
orl
lods
clc
xor
stc
and
xchg
push
adc
test
jecxz
daa
fcomip
cld
add
aad
cmp
jo
std
lea
mov
xor
push
test
push
mov
scas
jecxz
bound
xchg
jne
test
push
mov
out
into
movsl
mov
pop
scas
imul
in
test
addr16
repz
mov
pop
daa
movsl
je
sahf
lcall
pop
mov
inc
fdivs
mul
mov
leave
jg
clc
sub
pop
pop
sbb
pop
inc
and
cmc
icebp
mov
lcall
mov
xlat
and
imul
pop
pop
xchg
sub
xor
lret
repz
cmp
sbb
dec
xor
andb
inc
push
mov
jge
popf
repz
lret
js
stos
imul
mov
pop
ret
xor
ja
and
mov
orl
push
xchg
adc
hlt
adc
xchg
dec
mov
push
orb
lods
daa
xor
mov
sti
imul
sbb
in
jno
stos
inc
test
mov
ljmp
stos
popa
es
push
xchg
insb
ds
add
repz
dec
jge
jp
xor
leave
jecxz
mov
sbb
pop
lahf
imul
mov
fidivs
xchg
cmp
and
add
aas
dec
jo
mov
xchg
clc
cmpsl
mov
inc
pop
lds
jecxz
dec
mov
adc
jle
pop
js
and
adc
jecxz
adc
inc
test
pop
movsb
sub
mov
cmp
stos
mov
jae
jno
jns
dec
jecxz
push
fiaddl
push
pop
jmp
in
add
imul
ja
mov
push
jbe
jmp
sbb
cli
jnp
xor
cmp
es
aaa
push
cmp
cmp
lcall
ss
push
sahf
add
cli
aam
and
xchg
mov
or
jp
test
shrb
lock
scas
cmp
xchg
add
mov
roll
fadd
jo
gs
nop
and
mov
xor
push
inc
in
push
movzbl
pop
outsl
add
push
inc
fidivrl
pop
je
sub
or
xchg
dec
xchg
sbb
dec
adc
cmp
imul
xchg
xchg
push
or
inc
inc
stc
inc
test
pusha
adc
imul
xchg
test
sbb
out
test
int
out
stos
pop
mov
insb
scas
ftst
gs
pop
mov
dec
subb
lds
jl
iret
inc
adc
stos
push
mov
popa
add
leave
jecxz
stos
call
pusha
inc
sarb
sbb
pop
fistpll
xchg
or
push
sbb
lcall
clc
lods
sub
sbb
orl
mov
insl
loopne
mov
or
mov
cli
jecxz
cltd
pop
cs
xor
shrb
xchg
inc
cmpsl
push
pop
pop
cmpsb
cmpsb
cmp
mov
dec
pop
arpl
cwtl
subl
mov
icebp
pop
cs
cmp
pop
push
sahf
aam
test
pushw
imul
cmp
mov
cmpsb
clc
xchg
bound
dec
pop
xor
and
cmp
call
adc
jecxz
pop
bound
adc
jge
lods
mov
ja
std
and
mov
and
pop
mov
insb
xor
scas
xchg
std
faddl
repz
or
mov
push
push
test
pop
sbb
lds
imulb
and
jo
insb
lret
test
arpl
in
lods
mov
insl
pop
aaa
mov
cmpl
mov
or
lock
fcoms
sbbb
inc
imul
enter
sbb
in
push
ja
and
xchg
jmp
shll
in
jae
ljmp
fidivrl
or
aaa
pop
mov
jl
ja
pop
mov
mov
aam
sbb
push
fldl
outsb
ja
or
push
add
mov
fstl
pushf
mov
cmp
dec
push
rcrl
test
outsw
repz
sbb
mov
lahf
xchg
in
mov
test
mov
mov
pop
inc
fwait
dec
es
fisubrs
dec
push
mov
sub
shrl
jbe
pop
rolb
push
loopne,pn
and
lret
mov
pop
lods
pushf
fs
xlat
fwait
test
cmp
jmp
mov
cld
in
jmp
xchg
and
and
push
xchg
xor
scas
and
pop
insl
add
sub
scas
leave
xchg
jmp
xor
pusha
dec
aaa
push
in
lahf
xor
loope
sbb
pop
mov
xchg
fistl
and
lahf
gs
add
lahf
jns
std
insb
push
mov
mov
mov
jb
xor
add
std
push
inc
fnstsw
xchg
out
cwtl
loope
adc
and
jmp
aad
outsl
loop
jns
nop
add
ror
and
xor
jb
and
in
add
pop
out
lods
repnz
movsl
inc
jbe
jns
dec
mov
dec
test
test
popa
or
das
adc
dec
ljmp
jno
mov
push
push
sub
push
or
sti
and
lods
jg
sub
stos
mov
stc
shlb
je
mov
ret
test
cmp
fistl
push
cmp
xchg
jae
nop
or
add
shll
jge
into
scas
inc
jbe
xchg
sub
sub
mov
xor
int3
cmpsl
out
push
call
dec
leave
movsb
bnd
sahf
xor
sbb
in
jecxz
cmp
add
mov
fstp
xchg
dec
pop
les
int3
sahf
add
test
xor
in
add
out
rorb
lock
ret
outsb
sbb
mov
cmp
xor
push
sub
push
aas
stc
push
mov
mov
cmpsb
adc
and
subl
sub
push
pusha
mov
push
xchg
lahf
mov
aas
cmpsl
dec
cmp
push
test
ret
aaa
jo
cmp
jecxz
out
fucomp
arpl
incl
push
or
loope
dec
movsl
cmp
shrl
mov
aad
adc
jbe
rcrb
sar
push
loop
cmc
xchg
push
xchg
mov
mov
outsl
test
mov
mov
cmp
adc
cmp
aad
mov
subb
insl
mov
and
adc
js
mov
mov
adc
or
and
mov
int3
push
cmc
cmp
mov
fsubrs
imul
insl
les
repnz
cmp
push
sbbl
lods
cmp
insl
and
lea
mov
dec
sub
rcrb
out
jae
lcall
mov
mov
jne
fistpll
pop
lock
add
or
andb
xor
push
out
inc
fistpl
push
xchg
sahf
mov
rcr
leave
int
push
test
cmpsb
cmp
jbe
sbb
sub
lea
push
std
dec
cmp
cmp
mov
or
jo
scas
inc
dec
mov
jle
iret
push
mov
inc
jge
xor
inc
mov
outsl
loop
pop
test
lds
pop
dec
mov
mov
jle
mov
adc
orb
bound
xor
iret
jle
in
jae
cli
icebp
movsb
ficoms
adc
cmp
cmpsl
or
or
cld
or
fists
xor
xchg
and
mov
jg
adc
add
ret
jno
fsubl
sbb
out
xor
lcall
xor
mov
mov
ja
mov
and
fdiv
cmp
out
jne
call
sbb
jbe
leave
imul
add
add
xor
or
insb
lock
out
add
push
scas
pop
add
add
movsl
movsb
and
push
dec
jb
mov
adc
push
dec
xor
jge
lods
scas
fisttpll
jge
adc
sbb
push
ljmp
jno
lock
xchg
cmp
in
add
jmp
pop
rcrb
sub
aaa
add
pop
cld
fnsave
mov
je
mov
loope
fimuls
dec
mov
movsb
pop
pop
jnp
cmp
mov
ficoms
jnp
or
ljmp
inc
and
jecxz
lds
jns
sbb
xor
jbe
add
xor
sbb
push
pop
dec
test
shrl
rcrl
adc
xor
das
jno
outsb
add
mov
or
cmp
push
lods
sahf
pop
repnz
and
xchg
sub
shll
popf
mov
sbb
daa
mov
xchg
sub
pop
or
aas
pop
cltd
int3
mov
insb
and
in
je
cmp
js
test
call
add
loop
lods
push
fwait
sub
cmpl
loope
mov
scas
jo
mov
arpl
push
add
lcall
inc
or
fwait
outsb
das
stc
pop
out
inc
shl
jno
adc
jbe
lds
pusha
mov
data16
mov
sbb
aas
dec
adc
cmpsb
cmp
push
test
add
insb
test
sbb
movsl
js
push
xlat
cli
push
popf
test
iret
repz
call
cmp
push
jb
jge
iret
cmpsb
daa
bound
pop
mov
cmp
iret
subb
nop
mov
adcl
add
xor
push
enter
lcall
dec
cmovs
test
jo
jecxz
pop
adc
ret
xchg
out
xchg
xlat
adc
popf
xor
aaa
repnz
aas
push
inc
mov
in
fucomip
adc
xor
push
push
lods
inc
mov
sbbb
jp
mov
outsb
sar
mov
push
sub
fcomps
push
jne
jae
and
dec
push
inc
clc
jae
stc
aad
loopne
add
out
and
mov
dec
insb
aad
inc
cmp
inc
test
mov
out
fbstp
and
mov
xchg
and
mov
in
xchg
jne
jb
cmpsl
sub
jge
popf
inc
or
addr16
fadds
pop
mov
push
add
cmpb
hlt
xchg
sub
movsb
mov
jle
fs
popf
mov
mov
mov
xlat
push
inc
je
cmc
adc
push
ljmp
js
xchg
lret
jmp
stos
mov
movl
gs
xchg
js,pn
mov
mov
lcall
mov
push
dec
loop
cs
and
push
shl
dec
in
adc
pop
nop
gs
pop
xor
xchg
mov
mov
enter
lods
es
ret
and
rcrl
std
ret
mov
mov
ss
in
ret
sbb
cmp
outsb
xchg
sub
clc
push
jae
cmp
push
jle
pop
lcall
cwtl
and
sub
sbbl
pop
add
stos
fmull
ja
test
mov
mov
bnd
lea
insl
xchg
jbe
and
push
lret
xchg
loope
mov
and
push
call
in
mov
mov
add
sbb
jae
cmp
dec
test
add
push
addr16
loopew
mov
mov
mov
sarb
in
sahf
sbb
loope
xorb
dec
cmp
jg
dec
in
mov
jge
lcall
dec
scas
sbb
stos
repnz
gs
pushf
and
dec
jp
out
scas
daa
lods
inc
pop
push
es
ss
in
insl
lods
mov
cli
stos
inc
mov
jnp
xor
xchg
loop
push
adc
int3
inc
popa
xchg
sub
dec
js
or
push
mov
sbb
mov
nop
mov
sbb
lea
imul
sbb
push
or
pop
outsb
frstor
pop
push
push
inc
sahf
add
sti
or
cmpsl
out
dec
test
cltd
jecxz
mov
cmpsl
cmp
cmp
leave
push
movsl
cli
out
cmp
aam
imul
jle
push
jg
outsl
nop
aas
adc
or
test
mov
test
or
int3
dec
sub
fdivrs
jmp
push
loopne
mov
sbb
hlt
dec
dec
pop
cmpsb
inc
shr
rolb
lods
cmpsb
push
ljmp
mov
insl
cmc
rcrb
mov
jno
lret
and
ja
mov
or
idiv
push
fdivs
loope
lret
add
call
sub
lret
data16
ss
pop
mov
movsl
es
pop
sub
popf
mov
pop
in
iret
das
cmp
cld
lahf
mov
inc
mov
add
xor
outsb
loopne
stc
or
testb
in
adc
xchg
push
out
andl
jnp
movb
xchg
add
imul
fnsave
jne
or
pop
lcall
sbb
stc
test
jae
mov
xchg
jp
cmc
xor
repnz
xor
add
mov
ret
popa
inc
jecxz
fcoms
lea
fidivl
pusha
mov
lret
testl
add
lret
mov
or
gs
loopne
cmp
pop
pop
out
push
or
cld
outsl
aaa
repnz
aam
mov
fists
clc
iret
shrb
push
lcall
inc
clc
arpl
aaa
stos
pop
pop
pop
rclb
or
inc
inc
lahf
push
imul
scas
sbb
cmp
inc
jmp
lahf
jmp
sbb
clc
push
imul
dec
scas
push
lahf
xor
int3
out
popa
xchg
dec
bound
and
hlt
xchg
test
pop
daa
fisubs
mov
ljmp
cmpsb
dec
mov
or
int
push
xor
sahf
sahf
cs
xchg
pushw
and
mov
xor
addr16
inc
shl
xchg
adc
loop
leave
adc
jns
pop
ret
sub
call
lahf
ss
jl
dec
cmp
out
nop
dec
decl
push
addr16
pop
negl
sub
cwtl
mov
test
sti
sub
push
dec
das
lea
mov
ja
xchg
dec
pop
mov
mov
cmpsl
push
jbe
jge
test
das
inc
popf
aad
mov
mov
pop
cmc
sub
fs
cltd
loope
call
or
sbb
ret
bound
jae
outsb
sbb
jns
insl
shlb
imul
cmpsb
and
pushf
loop
out
lods
das
popl
sub
stos
fwait
sti
xchg
ljmp
mov
dec
mov
jl
and
shr
push
pop
push
pop
lret
jecxz
scas
xor
mov
cmp
jle
ds
aam
cmc
std
jo
lcall
or
dec
sub
out
lahf
xor
pushf
pop
push
mov
mov
pop
out
add
and
or
mov
pop
je
mov
leave
jbe
push
xchg
pop
xor
xchg
shlb
and
xchg
xor
xchg
pop
pop
repnz
fstps
pop
cmp
pop
nop
out
movsl
cmp
dec
cmp
aam
ret
negl
dec
adc
movsl
icebp
in
hlt
dec
and
inc
mov
incb
push
or
xchg
adc
enter
fdivrl
int3
clc
inc
add
jmp
jl
mov
out
pop
fcmovnbe
iret
lods
enter
sbb
mov
fs
inc
dec
xor
pop
inc
pop
jl
cmc
int
xchg
and
lret
push
cwtl
ja
mov
sbb
mov
out
mov
push
in
jmp
or
cli
mov
push
adc
rolb
xlat
imul
stos
add
in
jge
mov
adc
xchg
pop
cmp
adc
dec
sbb
cld
cmp
sub
inc
fcomip
jnp
and
adc
mov
adc
add
xor
jb
fwait
cmp
aad
das
xor
jnp
mov
jae
or
inc
xor
sbb
adc
testl
nop
ret
mov
push
mov
fs
pushf
mov
pop
fisubs
lret
shlb
mov
sbb
sbb
dec
fiaddl
icebp
lods
push
cmpsl
repnz
xor
and
hlt
jnp
xchg
jnp
iret
inc
or
in
mov
andl
mov
cltd
mov
pushf
jbe
stos
inc
sub
mov
movsl
popa
cmp
mov
inc
pop
cmp
scas
ror
ja
dec
xchg
adc
sbb
enter
ret
jp
or
pop
mov
les
inc
into
imul
rcl
lcall
and
pop
cmc
notl
add
push
mov
inc
inc
push
mov
push
mov
rcl
inc
xchg
cmpsl
jno
in
xor
out
movsb
xor
ja
lret
leave
or
out
lret
add
mov
nop
pop
out
stc
jb
sbb
sbb
pop
das
aas
andl
push
imul
stc
rcrb
xor
xchg
es
test
mov
out
sub
mov
push
adc
push
and
xlat
cmc
push
cmp
ret
imul
outsl
pop
je
fs
or
pop
call
xor
sub
jecxz
insl
cmp
adc
imul
out
jnp
pop
stos
movsb
imul
es
cmp
mov
add
push
mov
out
inc
dec
scas
cmp
cltd
jecxz
clc
out
lret
sti
xchg
sbb
jg
jns
jp
sub
sbb
pusha
mov
add
cmpl
or
jmp
xchg
loope
push
daa
xchg
or
in
addl
fwait
movsb
stos
ret
xor
scas
and
out
sti
cmc
ret
cli
dec
jp
xchg
adc
sub
cs
scas
sbb
pop
mov
lods
test
add
das
test
adc
repnz
or
out
or
leave
outsl
sbb
cli
push
cs
in
movsb
dec
bound
fwait
icebp
pop
fdivl
add
lods
fsubl
fwait
scas
xor
add
push
je
test
mov
cmp
sub
push
mov
insb
mov
or
test
sbb
stos
aad
mov
sbbl
mov
dec
aaa
push
std
fadd
sbb
out
jp
mov
mov
lahf
call
xchg
and
pop
ficompl
fs
ret
ds
repnz
pslld
dec
pop
xchg
fsubrs
xor
lods
loope
dec
filds
mov
popa
mov
sub
mov
ss
je
xchg
inc
mov
sbb
popf
ret
sbb
adc
mov
mov
push
or
ret
mov
jg
add
bound
cmpsb
sbb
imul
out
xor
jmp
xchg
loop
jmp
mov
out
ds
adc
sbb
xchg
shlb
daa
in
rorb
cld
xchg
js
data16
sub
mov
sub
ds
pop
shlb
add
inc
xchg
pop
mov
leave
xlat
orb
rcrl
jae
xor
lock
out
xor
cmp
push
cs
rcl
lret
test
mulb
movsb
repz
shll
shlb
pop
lahf
idivb
ss
pop
mov
jge
pop
sub
adc
pop
add
add
icebp
ret
xor
or
outsl
mov
lret
jl
inc
adc
ss
popa
test
push
leave
sbb
mov
mov
pusha
shrb
fiaddl
cwtl
sub
das
and
push
int3
js
xchg
rclb
adc
lods
rcrl
movsb
cmp
or
push
jmp
pop
lods
inc
mov
scas
clc
dec
sbb
inc
sbb
pinsrw
adc
in
mul
fsubl
sbb
iret
aas
cmp
adc
popa
lds
pop
mov
ljmp
aaa
aas
pop
jno
mov
icebp
cmp
std
cmp
inc
pusha
or
cmc
or
jo
lcall
sarb
xchg
adc
xchg
cwtl
cwtl
cmc
jns
xchg
mov
test
push
inc
adc
stc
dec
cmp
lock
push
out
cld
les
xor
push
andb
adc
push
mov
lcall
add
imul
cmp
jbe
xchg
stos
inc
aas
aam
int3
sbb
pop
push
ffree
mov
or
cltd
sub
lods
push
std
fnsave
or
std
xchg
pop
or
ljmp
repnz
dec
mov
clc
lods
sti
movsb
or
pusha
stc
int
mov
dec
scas
cmp
inc
dec
pop
mov
imul
pop
fwait
ds
sub
or
imul
lds
inc
mov
push
lds
out
fcompl
fidivl
sahf
into
or
mov
fs
or
daa
gs
in
inc
dec
cmp
fsubr
xchg
sub
and
adc
xor
les
or
mov
mov
mov
sub
imul
mov
insl
jecxz
sbb
add
in
jnp
jo
cmp
cmp
mov
pop
add
cmp
mov
gs
cmpsb
adc
sub
out
lods
ljmp
pushf
je
pusha
pop
scas
pop
mov
test
push
add
xchg
subb
fucomip
xlat
xchg
push
mov
and
test
mov
fistpll
sub
push
dec
adc
push
mov
add
and
cmp
and
movsl
mov
jne
mov
inc
enter
cmp
out
cmp
inc
insb
ss
icebp
or
add
sti
sbb
adc
xor
inc
jecxz
jb
insl
pop
mov
pop
cmp
push
in
repnz
push
arpl
in
jo
inc
inc
xor
jo
pusha
loopne
push
push
aaa
ja
loope
fsubrs
inc
xor
scas
jp
mov
stc
cmp
cmp
dec
loopne
fsubrs
adc
cwtl
cmc
cmpsb
je
dec
loopne
lods
loopne
sub
jle
inc
enter
mov
pop
mov
sti
rcl
aad
pop
pop
mov
fadd
and
or
in
mov
mov
insb
outsl
clc
adc
inc
mov
sub
push
mov
fistpl
mov
sbb
and
sub
jb
ret
mov
pushl
stos
add
fistpl
in
mov
sub
and
sbb
xor
dec
jmp
add
adc
rcll
outsl
push
dec
mov
fmul
push
push
and
and
icebp
fs
fcoms
push
das
push
mov
jl
push
mov
push
mov
mov
mov
add
insb
jg
inc
stos
daa
pop
ja
je
or
pop
adc
pop
ds
addl
dec
add
fwait
cmc
cld
scas
frstor
push
jmp
pop
clc
hlt
mov
cmpl
jecxz
test
jb
or
mov
push
movl
fisubl
jb
mov
nop
ljmp
jmp
ljmp
insb
jmp
int
in
or
inc
mov
sub
cmp
movsl
vmovss
sbb
mov
sti
sti
push
sbb
jb
push
xchg
ret
adc
rcl
mov
inc
pop
xor
cwtl
push
dec
out
aad
pusha
nop
imul
fdivr
sub
test
cld
clc
mov
jp
sbb
xchg
test
repz
cld
cmpl
or
test
shl
jle
or
test
in
scas
clc
xchg
fwait
push
jmp
inc
mov
cwtl
das
jno
sub
push
adc
stos
adc
loopne
pusha
in
frstor
ljmp
pushf
sarl
mov
sbb
sub
test
js
leave
cmpsb
dec
dec
loopne
repnz
add
jecxz
push
or
pop
xor
rolb
cmpsb
pop
js
fcomp
jae
pop
jge
ljmp
dec
xchg
sub
test
push
in
jmp
xchg
mov
ret
out
sub
dec
stos
cmp
enter
mov
repz
packuswb
cld
add
pop
xor
add
cwtl
xchg
fiaddl
pop
scas
loopne
rcrl
daa
jl
push
rcrl
rol
pop
aas
cmc
rep
mulb
ljmp
mov
sbb
mov
shlb
inc
data16
movsl
jl
fisubrs
mov
fs
cmp
xorb
aaa
cmpsb
scas
daa
enter
jle
jnp
into
mov
loope
adc
repz
cmp
add
mov
loopne
roll
stc
push
pop
sub
adc
xor
dec
mov
xor
cmc
dec
mov
push
jnp
repz
and
dec
pop
jl
cmpsl
sub
pop
sub
cmp
repnz
xchg
or
inc
fdivrs
lcall
scas
shlb
test
in
inc
movsl
cmp
push
pushf
inc
ffree
iret
jae
ljmp
push
adc
cmp
xor
outsb
mov
adc
jl
repz
mov
aas
sub
jae
int
sbb
scas
sahf
pop
mov
ret
shl
cmp
sub
or
dec
ret
cmpsl
mov
insl
jnp
jmp
rol
pop
in
jge
pop
out
out
mov
out
adc
dec
pop
repz
adc
in
jnp
xlat
mov
fisubs
jno
mov
add
bound
stos
fimuls
xchg
cmp
out
add
push
dec
pushf
inc
decl
das
stc
call
jno
push
mov
mov
pop
fsubs
xchg
adc
nop
and
xorb
mov
les
std
aad
clc
xchg
ss
fnsave
test
cmp
and
cmc
clc
fnsave
inc
test
lods
mov
xor
fadds
jbe
add
push
dec
sbb
leave
cmp
inc
subl
push
dec
fadd
mov
sbb
or
jae
mov
xchg
xchg
mov
lods
arpl
jecxz
sbbl
xor
sbb
jmp
cmp
leave
int
jbe
loope
push
stos
inc
push
jo
gs
cmpb
xor
adc
aad
pop
mov
pop
pushf
stc
loope
fs
dec
xor
mov
add
repnz
ficoms
mov
scas
cmp
sbb
or
sub
insb
pop
out
lahf
mov
mov
dec
inc
dec
and
push
pusha
mov
or
ss
in
shlb
mov
mov
lret
xor
push
scas
out
test
cltd
pop
addr16
loopne
aas
lahf
or
sub
mov
sub
aas
decl
test
mov
pop
negb
mov
js
in
fldl2t
adc
mov
shlb
pop
adc
xchg
push
packssdw
mov
sub
xor
stc
jecxz
push
lret
lock
in
add
cmp
add
icebp
pop
cmp
or
outsb
pusha
dec
pop
mov
ret
push
iret
or
jne
outsb
repnz
jl
icebp
xor
stos
add
xchg
add
test
jl
fistl
adc
pop
xor
sarl
and
mov
mov
push
adc
sbb
sub
bound
and
dec
xor
add
adc
jns
shll
push
fimuls
test
cli
pushf
stos
cmc
cs
fmul
push
call
jo
mov
xor
sub
pop
mov
dec
mov
lcall
add
xchg
inc
adc
or
out
sub
test
mov
adc
fdivs
or
es
outsl
inc
popa
mov
jae
jmp
testb
mov
cmp
je
sbbl
movsb
and
sbb
es
or
xor
mov
mov
adc
popl
and
fwait
inc
fisttps
add
mov
jge
jmp
mov
mov
dec
inc
pop
repz
mov
leave
push
in
mov
mov
mov
or
cmp
inc
jo
pop
push
fisubrl
outsb
shll
sbb
add
shll
pushf
adc
lret
or
push
mov
pop
sbb
cmpsb
cmp
jae
repnz
stos
push
xchg
insb
stos
mov
mov
push
test
cmpsl
shr
mov
popa
cmc
out
hlt
cmp
add
and
icebp
adc
add
jp
ret
push
repz
lcall
xchg
ja
aam
fcomi
shl
movsb
mov
ret
sub
sub
testl
in
and
cmp
inc
fsubrl
mov
mov
aas
mov
in
lcall
jbe
insl
dec
shlb
jne
hlt
xchg
and
sti
fdivrs
sbbb
lods
inc
xor
in
rcll
fadds
daa
pop
notb
cli
jle
mov
push
add
shrl
inc
lcall
mov
sub
mov
imul
mull
xlat
popa
mov
pop
hlt
mov
pop
repz
into
fucomi
and
inc
sahf
sbb
hlt
fldenv
mov
pop
lock
je
or
aas
adc
rclb
push
xor
add
sbb
sub
or
and
aas
jo
sar
dec
adc
iret
inc
das
addr16
fs
aad
xor
hlt
sti
jnp
icebp
or
mov
jae
fwait
cld
cli
jle
sub
and
rorl
mov
sti
or
loopne
lock
sbb
or
mov
outsb
add
les
lea
pop
mov
mov
stc
ss
insl
shlb
sbb
mov
or
mov
jmp
inc
or
inc
cmp
lods
ja
loope
cmp
push
fstpt
pop
pop
cmc
dec
dec
xorb
aad
dec
mov
loop
les
arpl
out
jne
xchg
dec
sbb
incl
push
cmp
inc
shrb
pop
mov
int3
loope
mov
cmp
xchg
sbb
pop
or
jno
dec
jmp
clc
movsb
stc
mov
jmp
fistpl
mov
and
xchg
loopne
push
popf
lods
mov
lock
jno
push
sarb
xor
lds
or
cwtl
dec
out
js
xor
fisttps
test
imul
movsl
cmp
dec
jecxz
out
mov
sbb
add
test
cmp
sbb
cmpl
lock
fmull
push
jae
mov
cmp
or
pop
and
insb
rolb
lret
jg
mov
inc
xlat
fdivrs
loope
ret
push
cmp
subl
fistpll
sub
jae
dec
xor
jb
addl
enter
mov
mov
cmp
test
dec
push
outsl
cwtl
push
push
jge
rcrl
add
shlb
cmp
push
je
pop
and
cmpsl
ficoml
aad
dec
dec
rolb
jl
sbb
jl
js
mov
test
jno
xor
add
or
pop
jg
int3
cmpsl
sar
loopne
xor
subb
lds
mov
mov
push
outsb
add
sbb
pop
ja
mul
add
cmp
jle
sbb
jne
scas
jp
nop
ss
dec
pop
and
sbb
daa
outsl
pop
add
mov
add
push
mov
lods
pop
add
mov
mov
or
sub
rorl
mov
pop
int
mov
push
sub
pop
test
or
sbb
in
mov
jge
add
xchg
jnp
decb
or
mul
lods
scas
adc
push
xchg
xchg
scas
fdivrp
in
and
mov
push
cmpsb
jp
adc
sti
fiaddl
cmp
fsubrp
aad
push
pop
xor
arpl
jecxz
and
addr16
xchg
and
out
and
xchg
pop
cwtl
push
cmp
popa
mov
nop
out
xor
sub
outsl
into
jo
or
negb
pop
mov
cmp
push
jns
int3
push
fisttps
and
int
addr16
jp
add
aaa
sti
test
clc
xchg
out
cmp
test
ret
mov
push
stc
je
xchg
hlt
lock
scas
lds
hlt
jno
or
test
push
push
aas
lods
nop
daa
loope
fdivrl
jnp
sub
push
call
ljmp
push
out
test
push
xchg
loope
or
add
icebp
or
cmp
adc
movsb
int
in
mov
jnp
rclb
std
jb
dec
rclb
dec
cmp
xor
imull
dec
mov
loop
je
xor
into
and
in
inc
rorl
add
xchg
inc
mov
add
ret
cmp
test
mov
repnz
shl
mov
xchg
jge
mov
add
stos
ss
rcrb
negl
test
insl
xchg
int3
jb
lahf
jo,pt
jo
fidivrl
add
dec
mov
inc
lods
mov
mov
and
and
rol
imul
jns
je
push
js,pn
popa
mov
fucomip
sub
lock
data16
out
pop
lahf
mov
test
outsl
jnp
in
orl
add
dec
test
stos
cmp
or
loop
adc
cmpsb
jecxz
pop
xor
iret
mov
lea
aaa
or
push
lret
push
in
xchg
inc
out
shlb
push
dec
dec
inc
add
ds
mov
lret
lret
fs
sub
xchg
inc
push
enter
push
in
push
cwtl
mov
push
xchg
jbe
loop
cmpsb
sbb
mov
mov
mov
iret
pushw
add
mov
dec
add
jo
mov
into
insl
iret
dec
aad
or
loope
jo
xchg
sbb
mov
in
add
mov
cli
std
add
cmp
notb
test
mov
xor
push
jno
outsl
xchg
mov
imul
js
sbbl
cmpsl
sbb
inc
and
sub
mov
adc
pop
lret
mov
pushf
daa
jno
movsl
mov
lret
xor
out
xchg
fcomps
lods
insl
out
push
mov
adc
xorl
sub
jne
ss
cwtl
lea
push
mov
jae
clc
into
add
xor
flds
push
dec
lcall
into
hlt
aaa
xchg
cs
push
push
add
and
stc
fisubl
rcl
sub
fsubrl
or
xor
or
jle
testl
fwait
xchg
movsb
lret
sub
fstps
scas
push
movsb
cmp
sbb
push
and
dec
add
es
xor
pop
stos
fucomip
mov
std
mov
add
adc
pop
pop
push
insl
jecxz
cmc
push
addl
mov
dec
sub
mov
pop
sbb
mov
shlb
clc
add
aad
mov
das
sub
sbb
fsubp
loopne
movsl
push
andl
repz
add
adc
iret
cmpsl
ror
xor
icebp
loopne
add
mov
add
mov
pop
pop
push
add
fnstenv
xchg
call
inc
popa
aam
pop
and
jne
mov
fs
stos
sub
inc
inc
pop
mov
sbb
iret
inc
cmp
add
mov
test
cltd
lds
adc
cmp
xchg
sub
aaa
into
xchg
or
add
mov
shll
enter
mov
add
mov
push
lock
cmpsl
scas
and
or
and
mov
int
sub
out
iret
or
or
sub
andl
aaa
xchg
push
or
mov
test
pop
mov
lods
mov
sub
push
leave
cmp
mov
jo
mov
out
fadds
inc
adc
aas
ror
js
jbe
subl
jle
movsl
subl
rorb
movsl
add
lods
add
mov
and
mov
and
xchg
inc
fdivrl
stc
ss
test
ja
shrl
dec
jecxz
jg
or
dec
daa
mov
fdivrl
push
leave
cs
adcb
ja
mov
jg
dec
jecxz
lahf
jecxz
dec
movsl
push
xlat
jo
es
cld
push
sbb
sub
stc
adc
dec
cmp
xchg
jp
stos
inc
std
pusha
sti
fnstenv
test
outsl
inc
shll
jns
cmp
lcall
mov
stos
lret
mov
push
push
and
push
cmp
or
imul
push
push
jnp
sub
test
cmp
in
ficomps
jo
in
and
out
xchg
mov
push
outsl
mov
mov
mov
pop
pop
shrb
insl
and
jnp
imul
popa
or
sbb
ffreep
mov
testb
add
and
jne
mov
sbb
push
and
dec
fbstp
adc
sbb
mov
mov
xor
loop
pop
or
out
mov
ja
push
test
fidivs
push
sarb
cmc
xor
es
mov
les
shl
adc
and
push
fldpi
jnp
imul
fildl
pop
jno
cwtl
mov
es
push
jns
cmp
testl
dec
push
ficomps
leave
cmp
ljmp
xor
lock
fidivrs
lods
ja
das
lret
mov
sahf
xchg
add
pop
and
es
push
fcomps
pusha
daa
jg
pop
scas
data16
sub
iret
mov
add
inc
dec
inc
push
fsubs
imul
pushf
or
ret
push
xchg
pushf
xor
cltd
pop
sbb
mov
aam
fiaddl
nop
mov
addr16
xlat
sbb
lea
mov
mov
test
shll
inc
arpl
fildll
loope
idivb
xor
aas
sub
call
adc
inc
ror
mov
iret
adc
push
push
dec
mov
int3
fsubrs
ljmp
mov
loopne
pop
popf
xlat
add
push
and
fcmovu
and
ja
aas
cmp
pusha
inc
mov
fsubrp
mov
pusha
sbb
fnsave
js
xchg
lods
mov
aam
bound
mov
sbbb
test
mov
adc
xchg
adc
jno
stos
mov
xlat
cltd
clc
jae
jnp
dec
lods
pusha
jle
dec
xchg
clc
xchg
lahf
jnp
cld
xor
es
xor
lds
out
movsl
cmp
repnz
mov
pop
adc
mov
cltd
mov
rorb
xor
bound
add
jge
imul
mov
lods
std
jo
xchg
das
int3
test
loopne
setg
mov
jnp
adc
mov
out
mov
mov
jge
adc
aad
incb
adc
in
pop
or
add
sti
sti
add
mov
and
pop
insb
sarb
xchg
jmp
in
les
add
cmp
fs
shlb
or
scas
pop
dec
fisttpl
mov
test
xchg
cmp
lcall
mov
addr16
cltd
cs
clc
loope
xchg
adc
out
sub
dec
ds
out
mov
sub
xchg
arpl
les
xchg
jge
xchg
nop
add
int3
xor
movsb
push
out
cltd
lcall
fwait
mov
int
cmpsb
dec
fwait
cs
adc
mov
sub
pop
xlat
sub
inc
mov
jmp
adc
pop
pop
cmpb
ja
lods
add
imul
jbe
mov
or
cld
cmp
dec
fadds
ljmp
mov
jl
pop
sbb
bound
icebp
arpl
jno
sbb
mov
ja
mov
jle
fmul
mov
and
adc
jne
movsb
push
cli
mov
xchg
aam
cli
aaa
mov
cmp
xchg
addr16
mov
cmpb
and
push
push
fdivs
push
clc
sbb
sub
pushf
sub
nop
cmp
fdivr
aam
lds
xchg
testb
cltd
or
sub
xor
loop
xchg
sub
test
and
or
addb
std
mov
aad
jne
and
cmp
mov
sub
stc
rolb
mov
sbb
jae
pop
imul
outsb
xor
mov
insl
sub
dec
fdivrl
pop
mov
pop
or
pushf
sbb
fidivrl
jbe
mov
aas
add
scas
fxtract
xchg
jb
frstor
jl
negb
cmp
pusha
and
icebp
adc
jl
lods
jecxz
cmpl
or
mov
ret
xchg
imul
add
daa
cltd
jno
cwtl
stc
mov
cmp
call
jp
inc
jnp
inc
xor
adc
lock
push
es
insb
fdivp
out
dec
loop
xlat
mov
outsb
sub
inc
dec
push
pop
dec
testb
xor
les
subl
or
xchg
add
mov
imul
xchg
je
pop
popa
fwait
xlat
jbe
pop
mov
rcl
out
and
scas
xchg
jl
mov
insb
mov
jge
ja
fcoml
push
pop
xsha1
cmpsb
mov
out
jecxz
pop
mov
sbb
adc
jle
and
inc
or
test
pop
scas
inc
fcomps
inc
fs
dec
adc
enter
outsl
or
ljmp
jbe
cmpsb
cmpsl
cmp
jge
inc
out
xchg
xchg
popa
jnp
xchg
lea
mov
test
or
dec
in
lods
shrl
cmp
dec
cmp
insb
sub
addr16
dec
mov
int
cli
lret
movsb
pop
icebp
xchg
ljmp
push
adc
pop
inc
cmpsb
mov
pop
fcmovne
lret
push
movsl
cmp
adc
pop
mov
iret
lcall
jne
shr
jle
out
scas
loope
outsl
and
jmp
and
cld
mov
outsl
sub
sbb
in
pushf
cli
sbb
xor
push
mov
mov
pop
ds
filds
dec
push
xchg
mov
or
inc
das
stos
inc
movsb
and
jle
add
movsl
pop
pop
ljmp
mulb
lock
inc
pop
hlt
or
dec
outsl
mov
rcl
adc
xlat
ds
push
js
subl
mov
sub
sahf
inc
and
cmp
popa
jg
lcall
pusha
add
daa
add
push
cltd
jno
pop
add
pop
fwait
jns
xor
fnstenv
sbb
scas
mov
jl
hlt
push
repnz
int3
push
cmp
push
push
pop
mov
mov
jae
jle
xchg
mov
cmp
xchg
mov
aad
cli
pop
mov
xor
xor
xor
and
out
or
iret
loope
push
mov
xchg
push
mov
cmpsl
dec
add
movsb
sub
loop
mov
lods
pop
out
adc
fsubrl
lods
dec
addr16
fdivl
cwtl
push
cmp
jg
inc
jl
push
fdivl
dec
push
std
lret
push
sbb
mov
cwtl
pushf
rcl
mov
adc
mov
in
xor
sub
fldl2t
rorb
cmp
jecxz
imul
xor
pop
sub
lret
push
mov
jb
in
std
cld
and
inc
cmp
xor
inc
and
test
jecxz
and
addb
xlat
sbb
lret
outsb
fwait
xor
inc
mov
add
inc
ss
in
jne
xchg
push
ljmp
dec
lods
rclb
mov
or
mov
stos
test
outsl
mov
mov
lret
test
dec
inc
cwtl
stos
jbe
pusha
sti
fdivp
xor
stc
stos
mov
mov
shl
lret
pop
lcall
push
lahf
or
xchg
ljmp
mov
mov
or
sbb
cmc
push
fcompl
lret
jb
mov
daa
pop
fdivl
ret
dec
fistpl
adc
push
int3
pop
cmp
pusha
arpl
jbe
aad
or
into
xor
dec
cmp
ret
inc
gs
aad
mov
jae
adc
loop
cmp
bswap
jno
rcll
jg
xchg
loopne
cmp
cmp
xchg
push
mov
cmp
mov
add
mov
icebp
inc
sbbb
pusha
rcrb
out
cmp
daa
lods
inc
outsl
jle
inc
idivl
lret
mov
fdivl
xor
daa
adc
cmpsl
inc
inc
inc
push
inc
push
mov
aam
inc
out
mov
aam
jo
and
mov
add
out
jb
ljmp
orl
mov
mov
mov
jg
pop
mov
or
ret
adc
xor
shl
sub
jle
test
es
test
sbb
mov
mov
adc
out
cld
jecxz
es
arpl
stos
stos
test
adc
push
xchg
push
mov
js
ja
adc
sub
popf
xor
bound
pop
test
push
fidivl
mov
test
ljmp
cmpsb
nop
mov
push
dec
in
loop
lock
sub
fcompl
dec
lods
pushf
push
push
add
sbb
cltd
pusha
mov
pop
decl
std
lods
adc
push
subb
mov
test
in
lock
in
adc
sti
mov
jmp
xchg
fadds
and
pop
movsb
rcrb
mov
sahf
adc
mov
sbb
inc
adc
mov
pusha
movsl
or
add
cmc
mov
lret
xlat
fiadds
mov
inc
lahf
add
xlat
shrb
xchg
dec
jo
xchg
sbb
inc
jecxz
in
ret
pop
cwtl
cmp
cmpsl
ss
dec
mov
subl
shl
jo
loop
mov
jnp
stc
lahf
clc
push
cmpsb
lock
mov
add
decl
lods
sbbb
in
divl
pop
scas
mov
xchg
add
cmp
aaa
fnsave
push
inc
push
lret
cmp
sbb
and
int3
xorb
int3
add
test
or
xor
in
sub
rclb
sbb
fildl
cmp
xchg
cli
lahf
fildll
std
stc
push
test
cmpsl
incb
das
leave
fdivrs
loope
push
cwtl
mov
enter
popf
xor
push
mov
loope
hlt
popa
mov
popa
fistpl
add
pushf
lods
sub
xchg
mov
dec
xor
jnp
sbb
sub
push
pop
loope
dec
and
add
mov
in
mov
stos
and
pop
push
ficoms
out
cmp
push
movsb
cmc
inc
push
cmp
and
pop
mov
push
rsqrtps
xor
movsl
push
jge
int3
inc
xlat
std
add
nop
in
adc
ret
sub
sub
mov
popf
ds
xchg
xchg
inc
jo
cld
in
pop
or
cmpsl
sub
xchg
xchg
mov
lcall
jne
adc
or
push
push
sub
mov
cmp
add
cmp
mov
sahf
or
xchg
lret
sbb
mov
bound
ret
fistl
pushf
dec
jno
mov
and
arpl
mov
lds
adc
in
lret
shrb
push
dec
fs
cmp
fwait
add
fmul
mov
add
and
cld
sub
jae
sbb
out
stc
ds
and
sub
cltd
mov
fisttps
lea
out
leave
push
sbb
stos
mov
xor
sub
fbld
out
mov
xchg
outsb
mov
sbb
rcll
loop
imulb
aaa
sub
jp
aad
leave
pusha
jg
inc
stos
xor
andb
inc
insb
xchg
icebp
push
loopne
inc
adc
inc
adcl
insb
adc
sahf
rorl
mov
outsl
outsl
jp
mov
mov
rcrb
push
xchg
push
shrl
je
shll
mov
imul
inc
ret
or
fmull
push
insb
jbe,pt
xchg
mov
scas
jp
fsubr
leave
adc
movsl
pop
push
xor
loope
mov
add
or
ret
fists
test
pop
push
xchg
js
add
movsl
xchg
in
pop
lock
out
inc
push
aam
xchg
mov
in
jl
push
int
aas
or
cmp
pop
aas
inc
aaa
push
mov
pusha
pop
add
cltd
inc
icebp
xchg
inc
push
loope
pusha
adc
out
lea
pop
push
movsb
mov
mov
jo
shrb
es
cmc
jl
test
mov
loope
jp
dec
pop
pop
adc
out
cltd
mov
add
sub
movsb
jnp
std
cltd
xor
jae
ret
repz
shlb
icebp
mov
push
ds
inc
bound
jmp
pop
mov
xor
jl
shl
into
sbb
vshufps
mov
in
mov
or
fsubl
add
mov
jns
push
fsub
dec
dec
out
adc
lahf
hlt
sub
adc
cmp
adcb
ret
cmpsl
cmp
lcall
jo
mov
andl
and
adc
inc
pop
and
in
mov
xchg
inc
pop
mov
sub
shlb
outsb
push
mov
push
xor
shrl
jecxz
insl
mov
imul
mov
xchg
add
jae
stos
arpl
jge
or
adc
fs
xor
cmp
std
sarl
adc
dec
or
mov
adc
icebp
and
clc
push
push
mov
xchg
jns
dec
out
rcrb
inc
fcomps
hlt
push
xchg
mov
push
cltd
mov
or
flds
sti
fwait
cmpsl
or
mov
sbb
orl
xchg
add
push
fwait
xchg
mov
ljmp
sahf
and
not
sub
call
data16
scas
adc
out
aaa
lods
outsl
sub
fdivs
pop
out
imul
xchg
jae
inc
push
fcoms
scas
enter
xor
sbb
pushl
int3
aam
std
ljmpw
push
ret
push
mov
xchg
pop
pop
les
cmp
js
repz
sbbl
out
sub
pop
mov
hlt
or
dec
push
dec
lods
add
fidivs
xchg
pop
js
incb
daa
xchg
sub
mov
mov
pop
test
sti
mov
mov
adc
xchg
imul
testb
in
divl
cmp
test
cmp
divl
or
loope
mov
jmp
or
fs
inc
pop
enter
mov
les
loopne
lods
and
fisubs
shlb
inc
push
in
mov
je
fadd
xchg
pop
clc
xlat
xchg
in
test
mov
pop
sub
dec
pop
fcmovne
pusha
out
xlat
shrb
mov
ljmp
mov
mov
adc
inc
sbb
mov
xor
test
push
mov
int
movsb
cwtl
push
sub
mov
enter
cltd
jle
mov
loopne
dec
testb
cmp
and
sbb
leave
mov
movsb
mov
mov
ljmp
iret
or
cs
jo
leave
out
push
pop
mov
xchg
insl
inc
ret
in
pop
cmp
xchg
stos
and
xchg
rorl
dec
lret
jl
cmp
jne
ficompl
sub
mov
dec
cmp
mov
js
iret
data16
in
mov
and
rclb
ds
test
dec
stos
inc
jmp
mov
xchg
jne
push
mov
dec
and
enter
xor
arpl
das
adc
pop
cltd
dec
pop
mov
shlb
adc
push
adc
les
aas
mov
jno
cmpsb
dec
cwtl
das
jnp
das
cli
repz
mov
aad
gs
divl
mov
andb
cmp
dec
aad
jg
inc
jae
loopne
lret
add
shlb
cmp
push
cmp
mov
sti
jbe
in
jle
cmp
nop
sahf
cmp
scas
push
sbb
test
sbbb
arpl
loopne
lea
and
add
inc
push
or
lods
inc
pop
or
daa
cmp
leave
add
cmp
inc
or
cs
and
ret
les
lcall
xchg
adc
cmpsl
in
je
sub
and
gs
pop
and
cld
popf
jmp
jnp
sub
stos
in
fsubs
sbb
adc
xchg
mov
rorl
add
sahf
sti
and
daa
mov
test
mov
dec
rcrl
jo
xchg
cmp
xchg
add
inc
ss
sti
push
sbb
fldl
mov
shlb
mov
insb
push
je
push
lds
scas
pop
push
xchg
add
lret
outsl
scas
adc
jae
addr16
add
sbb
cmc
mov
out
mov
in
dec
xlat
xchg
xlat
xchg
in
xchg
adc
outsb
pop
adc
adc
push
inc
dec
shlb
pop
push
xor
xchg
or
add
push
icebp
xor
out
in
xchg
pusha
pop
inc
push
jae
sub
lods
test
int3
mov
xor
addr16
mov
pop
dec
xchg
mov
ret
pop
in
mov
push
aaa
add
mov
or
cmp
lahf
inc
into
andl
inc
jo
ljmp
imul
jb
adc
ret
add
mov
cltd
jae
jmp
loope
xchg
xchg
lods
mov
outsb
in
mov
mov
mov
and
clc
xchg
jmp
cmp
ds
sub
call
fsubrl
mov
out
aam
sub
jmp
sub
push
jae
cmpsl
in
fwait
popf
xlat
sub
pop
cmpl
fdivrs
push
jl
lret
mov
into
into
loop
push
clc
rcl
jmp
scas
fidivl
stc
pushf
les
dec
loop
sbb
into
pop
push
imul
fs
scas
shrl
pop
mov
lds
xorb
ja
enter
ret
ss
push
scas
pushf
cmp
nop
push
xor
lcall
cwtl
testl
and
dec
xchg
out
shr
xchg
mov
loope
sub
hlt
lods
icebp
mov
or
cmpsb
mov
xor
pop
jae,pn
repz
mov
in
pop
fadd
ret
dec
mov
or
push
jl
ljmp
hlt
jge
scas
mov
jge
xchg
sub
push
imul
inc
jmp
in
xor
jo
test
mov
dec
cmp
fnstsw
jle
lods
sbb
sbb
dec
fistpll
pop
cwtl
je
cltd
lock
pop
sub
xchg
or
aas
ds
pusha
daa
add
push
popa
test
hlt
inc
jae
in
std
sub
int
push
sub
cmp
xor
add
repnz
decl
js
push
je
adc
cmc
push
icebp
mov
sbb
mov
arpl
push
or
test
dec
rcrb
sbb
insb
rorl
xchg
pop
jno
jno
imul
rorb
int
push
shll
data16
jg
cmp
testl
mov
es
and
mov
or
sub
cltd
sub
push
pop
mov
or
sahf
lods
inc
rol
test
inc
mov
mov
pop
out
call
mov
pop
mov
dec
dec
dec
shl
lock
fimuls
mov
fisttpll
sbb
and
fbstp
dec
dec
adc
into
xchg
clc
push
ret
call
mov
ss
in
jecxz
xor
pop
data16
pushf
leave
fistps
push
lcall
pop
in
fimull
pop
push
imul
stos
mov
jge
sbbb
push
cmp
mov
pop
out
xor
cmpsb
lcall
ret
mov
rcll
ror
ret
fsubs
ret
repz
or
jmp
fadds
fildl
xchg
add
adc
nop
add
ja
cmpsl
and
pusha
popf
ja
mov
lahf
jg
out
xor
loope
pop
push
mov
push
jp
xor
sub
rcrb
and
cmp
imul
dec
std
repz
dec
dec
test
fidivrl
test
int
mov
sub
stos
addb
jbe
loope
test
lods
ss
sbb
mov
and
sbb
push
leave
xchg
sub
pop
mov
rcrl
lods
andb
pop
in
push
sub
nop
mov
out
loopne
repnz
adc
cmpsl
movsl
pop
xor
orb
pushf
in
xchg
adc
loope
das
mov
mov
and
jo
jmp
mov
data16
xchg
clc
xchg
out
sbb
push
jnp
out
faddp
sub
push
mov
pop
stos
adc
sub
into
inc
push
mov
out
outsl
inc
imul
inc
ljmp
inc
cmpsl
xchg
jbe
and
shl
and
ffreep
jmp
add
arpl
push
push
lea
test
scas
push
movsb
xlat
jnp
js
adc
movsl
cmp
push
mov
push
mov
stos
scas
jp
adc
xchg
in
shrb
mov
pop
ss
pop
sub
or
test
cmpsb
scas
neg
xchg
int3
mov
stc
xchg
rcll
js
jns
adc
mov
sbb
xchg
add
enter
add
loopne
iret
outsb
mov
jp
out
add
xchg
lahf
inc
mov
pop
jae
fistpll
loop
inc
adc
xchg
aam
aam
dec
int3
in
cld
sbb
xor
mov
sbb
lds
pop
hlt
in
inc
push
fbstp
enter
cltd
push
push
aad
cmpl
shrl
mov
inc
jno
dec
lock
push
push
mov
jno
scas
sub
sbb
sbb
xchg
std
nop
sbb
addl
lea
out
icebp
test
out
das
add
hlt
ss
testb
inc
inc
std
nop
cmp
shrb
leave
std
inc
mov
jns
dec
jecxz
fsubl
popf
out
cld
and
lock
or
fmull
inc
icebp
jne
xchg
xchg
or
mov
fsubs
push
pop
xor
add
cmp
sub
loop
not
push
add
rcrb
arpl
pop
test
jbe
mov
xchg
shll
lds
imulb
insb
xchg
stc
jns
add
pop
jns
mov
orb
ds
adc
bound
jmp
pop
insb
hlt
and
popa
cmp
push
sub
loope
es
cltd
divl
mov
jge
cmpsb
sbb
pop
cmpsb
add
into
nop
paddb
push
sbb
jmp
cmpsl
add
aas
or
testl
fsubrs
fbld
js
cmc
iret
js
push
outsb
add
int
pop
jecxz
mov
fimull
int
add
dec
jl
dec
jae
dec
dec
in
cld
sub
dec
call
sub
fisttpl
inc
or
dec
inc
ss
mov
cltd
sub
std
cmp
cmc
pop
icebp
rcr
scas
xchg
repnz
mov
cs
bound
cs
cmp
push
pop
sub
dec
dec
xchg
inc
cli
or
mov
xorl
and
mov
enter
test
pop
jne
mov
cmp
lock
jg
clc
cmp
out
sub
xchg
into
loope
nop
inc
ret
mov
movsl
sbb
or
insb
jnp
test
sbb
jbe
xchg
lods
add
mov
or
adc
insb
and
stos
nop
or
imul
icebp
popa
xchg
ljmp
out
xchg
sub
push
outsb
hlt
jnp
decl
jo
dec
push
push
mov
jp
into
scas
mov
aam
and
lcall
xchg
enter
pop
mov
mov
xor
sarb
lds
dec
push
xchg
xlat
aaa
loopne
add
push
scas
notl
add
push
out
aam
pop
lret
insl
and
shll
push
mov
stos
loope
inc
lahf
jecxz
mov
in
xor
adc
and
movsl
cmp
push
dec
mov
inc
fs
mov
mov
or
test
pop
jb
test
data16
dec
mov
addr16
into
shl
add
fdivr
mov
sub
repz
test
mov
stos
xor
pop
jg
xchg
inc
adc
int
and
push
imul
mov
lea
add
das
cmpsl
inc
stos
les
inc
sub
xchg
rcrl
dec
xchg
subl
jle
mov
inc
cwtl
fldenv
mov
pop
add
gs
cld
cltd
dec
sbb
jp
mov
mov
or
pop
jmp
pop
shll
fdivrl
mov
inc
sub
out
or
stc
lcall
sub
rcrl
jae
mov
stos
shlb
mov
jle
xchg
loope
push
insl
arpl
adc
lods
ret
pop
sbb
das
dec
jnp
adc
jnp
push
lahf
in
rorb
jge
rolb
sub
or
jns
jo
cmp
lret
push
adc
je
pop
mov
pop
fcoms
iret
sti
sbb
push
push
jl,pt
ljmp
cmc
push
xor
int3
xor
sti
push
ja
nop
xchg
xchg
pop
mov
pop
in
adc
inc
fyl2x
push
clc
inc
cmp
cmp
dec
dec
inc
sbb
insb
or
jmp
out
inc
loope
jne
dec
add
sbb
xchg
dec
xor
out
jb
pop
popf
sbb
cmp
test
out
xor
leave
xchg
ljmp
or
sbb
push
arpl
jb
dec
dec
lock
xchg
ss
push
adc
cmp
jl
out
xor
mov
mov
arpl
cmpsl
out
leave
jbe
push
push
xchg
sbb
mov
xchg
jns
cmpsb
cld
mov
and
add
sbb
sbbb
icebp
and
push
outsb
or
in
shlb
and
pop
out
out
pop
inc
in
insl
or
outsl
clc
sub
outsl
or
push
adc
sti
sub
cli
pop
xchg
adc
cmc
jge
in
mov
std
mov
dec
xchg
and
mov
cli
dec
sub
mov
mov
sti
pop
enter
daa
loop
push
out
xchg
das
je
ds
in
xchg
add
ds
pusha
test
jge
sbb
jg
jae
sub
and
sbb
out
jb
and
push
mov
mov
fidivs
mov
fisttpl
std
jo
test
rep
sub
sbb
mov
sarl
sbb
adc
pop
lods
inc
out
pop
inc
pop
or
adc
jmp
in
imul
outsl
jmp
mov
stos
mov
lds
lock
cmpl
add
int
dec
or
out
cmp
mov
mov
je
and
test
out
sarl
in
jns
in
sarl
mov
jp
pop
push
aas
push
jmp
rol
mov
inc
cmovo
insl
jns
add
daa
push
hlt
xchg
mov
xor
jmp
push
sbb
mov
mov
out
imul
in
push
addr16
fisttpl
sahf
xchg
and
dec
arpl
popa
xor
sarl
push
repz
cltd
daa
push
rorb
lds
fisubrl
insb
shll
inc
xor
xor
stos
std
and
sarl
imul
cmp
sbb
jecxz
add
fsubr
cltd
es
push
addr16
popf
jg
test
js
aaa
into
fwait
aaa
fdivrs
int3
push
les
lcall
lock
loop
fcomip
cmp
xor
sub
adcl
ds
mov
pop
ds
mov
sti
fbstp
xchg
sub
jo
mov
mov
mov
sbb
cmpsl
in
gs
push
cmc
mov
subl
les
sbb
or
push
imul
test
fcmovb
cs
arpl
sbb
xchg
in
int3
add
mov
jnp
arpl
dec
icebp
inc
xchg
lea
data16
ror
xor
incl
loop
dec
lods
mov
sahf
jp
rcrb
insl
inc
cmpsb
leave
xor
addb
lock
xor
mov
push
inc
mov
pop
sbb
scas
xor
outsb
test
mov
aad
fxch
clc
and
adc
in
pusha
icebp
bound
xchg
adc
and
in
mov
or
fsubrs
mov
movsb
sub
mov
out
lock
jo
inc
scas
xor
cmp
movsb
add
rol
inc
aad
idivb
aad
pop
out
mov
xchg
mov
test
or
fldt
xchg
test
mov
mov
sbb
mov
repnz
jo
scas
in
adc
inc
pop
add
test
pushf
xor
inc
jnp
divl
inc
ret
lcall
pop
std
iret
rol
popa
push
addr16
adcb
je
shll
push
sahf
jp
pop
in
jns
scas
mov
movsb
aaa
lea
adc
xchg
dec
icebp
mov
fnstsw
add
ja
fidivrl
jae
or
mov
lods
adc
faddp
hlt
push
xor
popf
mov
fildl
push
test
cmp
cmp
ret
sub
inc
add
xchg
or
ret
jl
dec
test
in
fdivrl
jmp
in
inc
inc
aad
out
outsb
pushf
dec
sub
fadd
jbe
repnz
mov
das
or
xchg
cmp
pop
repz
inc
rcr
cmp
imul
lock
jne
xrelease
hlt
add
movsl
insb
jb
into
ret
ror
or
push
dec
dec
dec
gs
fistps
jno
test
daa
outsl
ret
out
es
add
ret
outsl
stos
lea
popf
inc
mov
repz
jbe
sub
scas
push
or
repz
les
ljmp
lret
test
push
fstpl
jp
andl
loope
mov
fdivrp
pop
fstl
mov
fildl
and
shlb
lock
movsb
insl
ret
jge
stos
sub
pushf
fildll
add
inc
jae
mov
cmc
push
cmp
xchg
xchg
movsb
push
das
dec
add
cmp
fxch
xchg
addb
sub
pop
cmp
setg
es
push
out
xor
pusha
adc
mov
mov
cltd
sbb
and
ret
rorl
add
insb
cmc
mov
mov
adc
lock
push
push
sub
cmp
cwtl
cmp
xchg
xlat
cmp
pusha
div
test
mov
call
pop
movb
pop
out
lcall
inc
jb
inc
pop
outsl
movb
dec
and
dec
loopne
pushf
out
shrl
rclb
inc
out
clc
sub
jmp
inc
xchg
pop
outsb
out
push
rolb
sti
bound
sub
inc
outsb
inc
pop
frstor
ficomps
fstpl
sub
or
stos
or
cmpsl
cmp
cli
and
sbb
fs
fadds
movsl
ljmp
jns
jne
pusha
pop
cwtl
pop
clc
popa
scas
inc
inc
jo
adc
scas
dec
add
es
xchg
pusha
and
fstpt
jne
push
cmpl
sarl
sub
aas
cmp
push
outsb
pop
insl
mov
jnp
and
sbb
aas
lcall
inc
fisubrs
inc
stc
pop
jbe
pop
lahf
ja
push
cltd
xor
ret
pushf
bound
sbb
movsb
sub
inc
pop
xchg
mov
mov
je
imul
xchg
cs
jg
jl
and
fiadds
xchg
adc
fwait
xchg
xor
xchg
cs
dec
mov
jle
inc
dec
les
pop
cmp
stos
sub
in
inc
or
pop
addr16
mov
movsb
dec
sbbb
xchg
mov
fdiv
pop
mov
mov
bound
jno
je
push
lcall
lea
sbb
mov
stos
sbb
pop
adc
push
movsl
cmp
decl
sbb
push
into
inc
js
hlt
call
hlt
cmp
mov
loop
bnd
movsl
cld
stos
jae
dec
push
scas
out
ret
loopne
xor
loopne
fimuls
and
enter
aam
mov
xor
pop
xchg
aaa
mov
fisubs
jae
and
mov
mov
pop
fidivrl
cmc
add
ds
push
bound
cltd
inc
xlat
sahf
push
scas
nop
xor
pop
mov
out
xchg
les
cmpsb
ret
or
xlat
sbb
std
pop
cmpl
push
jmp
and
dec
fcmove
and
sarb
pop
mov
clc
fwait
fwait
dec
out
inc
jg
add
insl
sub
or
push
mov
movsl
inc
xor
int
insb
add
lea
inc
pop
cmpsb
addr16
data16
dec
jl
dec
pop
adc
dec
cmp
leave
rcrl
mov
popf
rolb
sub
adc
xor
pop
popf
out
cmp
call
cwtl
dec
jmp
and
mov
aas
add
ja
test
mov
and
sar
popf
pop
jo
icebp
push
push
jmp
jmp
adc
cmp
jae
rcrl
add
call
dec
mov
adc
loopne
adc
cmpsb
std
xor
sahf
andb
xchg
push
mov
int3
or
in
int3
lds
and
into
repz
inc
lret
add
mov
mov
int3
enter
repnz
aas
mov
jmp
shl
shrb
leave
xor
adc
xor
fldenv
mov
jg
xchg
stc
and
mov
lods
out
je
adc
rol
mov
xchg
imul
sub
movsb
fbstp
and
fiaddl
ljmp
fs
idivb
dec
cld
pop
bts
test
mov
clc
dec
add
in
fcoms
aam
xchg
out
and
popf
add
int
xchg
dec
mov
icebp
scas
loop
mov
popf
call
ret
sahf
sub
and
sub
aas
push
mov
add
add
fucomi
xchg
xor
dec
jmp
out
sbb
mov
jno
fwait
scas
sbb
out
ja
cmp
xlat
and
or
or
push
outsl
lds
push
sub
xor
mov
cli
mov
mov
and
mov
cmp
addb
cs
arpl
cmpsb
jmp
aas
in
cltd
cmp
daa
xor
mov
xchg
lods
inc
stc
test
add
shrl
inc
inc
outsb
add
mov
in
les
call
push
mov
mov
sbb
in
pushf
sub
xchg
mov
das
lea
je
mov
fstpt
je
jo
repnz
mov
and
and
inc
cli
lret
mov
jno
movsl
sub
das
cmp
imul
out
dec
test
push
push
ds
sar
gs
nop
jo
push
imul
cltd
cmpl
int3
mov
shrl
xchg
jecxz
cmpsb
std
xchg
add
push
addr16
shr
std
mov
push
pop
js
and
mov
mov
mov
sub
sbb
call
out
loop
stos
inc
das
pop
test
loop
push
stc
xor
mov
fsts
mov
mov
pop
mov
mov
dec
mov
lds
jge
and
adc
stc
push
aam
adc
sbb
or
scas
out
adc
addr16
es
mov
push
addr16
pushf
test
cmp
cmpsb
and
in
pop
std
xchg
insb
ret
in
movsb
and
xor
popa
mov
dec
add
jmp
jbe
jnp
push
jae
cmp
mov
pushf
xor
push
in
mov
stos
and
nop
out
rorl
out
roll
sbb
ljmp
sarl
lcall
cs
sub
fnsave
and
clc
cmp
xor
jmp
data16
mov
fldt
dec
cmp
jge
jbe
das
and
outsb
jp
loope
mov
movsl
cmp
call
rorb
lock
inc
mov
jne
sbb
andb
test
clc
mov
lds
inc
fcmovne
pop
push
mov
bound
lret
push
fwait
pavgb
xchg
int
sub
shrb
pop
outsb
pop
mov
mov
movsl
movsl
cmp
rorl
mov
adc
inc
pop
or
inc
push
and
lret
dec
jo
jns
push
jne
fwait
push
ja
inc
test
xchg
js
mov
cwtl
dec
cld
jmp
mov
ret
hlt
cmp
xor
mov
mov
insl
xchg
push
inc
ljmp
arpl
xchg
jo
mov
sbb
sub
add
inc
or
imulb
stos
jp
xchg
enter
add
jno
test
inc
cmp
fnsave
xor
aaa
fistl
int
jmp
out
adc
mov
nop
not
lods
mov
int3
jbe
jl
loop
add
nop
pop
mov
xchg
xchg
jecxz
je
mov
adc
dec
scas
out
les
aam
sub
es
jl
cli
adc
cld
inc
stos
enter
add
pop
fdivrs
ja
mov
fisttps
cmpsl
hlt
mov
push
and
bound
fwait
test
std
pusha
test
add
mov
pushf
xor
pushf
ds
lcall
aas
sub
addl
mov
push
loop
xchg
dec
xor
or
in
mov
mov
imul
add
aas
pop
ds
clc
jb
pop
xchg
scas
out
imul
notb
mul
out
xor
mov
cld
rclb
les
iret
mov
ret
fs
lcall
ret
repz
pop
movsb
xor
ret
xchg
sbb
pop
xchg
jne
push
fs
es
xor
and
push
pop
ret
jns
stos
movsb
stos
in
nop
jl
push
mov
lcall
xor
pop
decb
sub
andl
jge
push
sub
stc
xchg
push
xchg
js
sbb
subb
push
dec
dec
fsubrl
out
jb
sub
pop
lahf
xor
or
mov
mov
xchg
test
xor
cmp
pop
int3
mov
add
xor
js
cmp
add
int
jnp
mov
pusha
push
xchg
dec
or
and
ss
pop
gs
pop
pop
movsl
cmpsl
mov
fwait
xor
jl
dec
push
sbb
lods
pushf
inc
pop
dec
mov
inc
stos
jmp
sbb
leave
mov
mov
mov
xchg
pop
ja
xchg
outsb
in
mov
rorb
push
xchg
and
jl
cli
xchg
testl
cltd
jae
sbb
dec
enter
cmp
int
push
mov
xor
mov
xchg
sbb
push
cmp
pop
mov
jnp
pop
jo
popf
jno
lret
dec
cmp
popf
imul
xchg
xor
mov
sbbl
popa
fdiv
test
xor
add
jg
test
int3
add
adcl
dec
pop
scas
cmp
adc
mov
fcmovnu
sub
push
cmp
lcall
push
push
dec
inc
fldcw
sbb
push
mov
das
call
or
fs
daa
mov
dec
out
sub
ljmp
std
mov
mov
or
pop
scas
in
jns
jae
pop
movsl
test
cmp
pop
movsb
dec
mov
fnstenv
dec
leave
sub
insb
mov
inc
hlt
aaa
outsl
rcr
cwtl
push
inc
aas
mov
xchg
or
fbstp
jp
mull
jg
mov
pop
mov
xlat
pop
add
in
sbb
sahf
inc
aam
jmp
mov
and
push
out
dec
test
loope
stos
hlt
inc
es
scas
popl
pop
ret
dec
push
lods
or
mov
lcall
cmc
cmp
mov
aaa
xor
mov
push
enter
cmp
cmp
push
lods
sbbb
inc
pop
mov
mov
xor
mov
dec
cmp
mov
out
daa
icebp
lock
jl
dec
test
outsb
ret
in
and
cmpsl
push
mov
or
jnp
sub
ret
xor
sbb
ds
hlt
dec
mov
xchg
inc
inc
daa
testl
nop
mov
fstl
add
dec
inc
cltd
xchg
sub
jne
sarl
repnz
fadd
xor
icebp
mov
roll
negl
test
jno
out
bound
enter
in
in
loop
loop
add
mov
xchg
bound
mov
inc
mov
fstpt
cwtl
dec
filds
inc
mov
ds
setp
cmp
add
icebp
aaa
jle
sub
and
sbb
repnz
push
mov
dec
in
cmpsb
jno
xchg
in
lret
stos
insl
cld
push
adc
call
inc
mov
pop
rclb
sbb
les
hlt
into
popf
mov
fildll
mov
sub
scas
mov
or
dec
and
fsubl
adc
call
aad
sbb
data16
xor
arpl
in
or
jae
pop
fs
push
cs
or
add
mov
dec
adc
jl
popf
sub
sub
dec
test
xor
aaa
mov
mov
mov
or
das
or
mov
ss
addb
sub
scas
inc
arpl
jnp
mov
lds
sub
dec
aad
cli
insl
ljmp
std
sahf
cmp
mov
fs
popa
pop
push
adc
push
int
mov
xor
inc
faddl
aas
addr16
or
jb
xchg
ds
cmp
adc
loope
cmp
out
push
shll
rcrl
fwait
sub
pop
jb
jl
je
mov
pop
fsub
mov
test
loop
xor
push
push
mov
and
popf
or
stos
sbbl
sub
test
inc
daa
stc
decb
sbbb
outsb
sub
jnp
xchg
das
sub
dec
inc
xchg
testl
push
or
xchg
cmp
mov
dec
adc
repnz
testb
push
mov
clc
popf
cs
xor
fsubs
mov
dec
xor
ret
cmp
aam
dec
rcr
scas
jno
or
scas
frstor
scas
jl
lods
push
lahf
mov
cli
inc
arpl
xor
cmpsb
scas
stos
jne
rcl
cld
faddl
mov
pushf
outsb
push
xor
jne
cmp
and
fxch
adc
push
jge
lods
sti
imul
or
daa
mov
sbbl
push
fxtract
mov
xor
test
das
sbb
aad
lock
push
std
jecxz
in
cmp
xor
mov
in
add
cmp
arpl
push
or
or
xor
or
leave
mov
jns
dec
ja
pop
push
sti
cmpsb
push
cli
lret
pop
pop
js
scas
and
int3
mov
mov
mov
out
mov
sbb
push
xchg
jnp
js
loop
cwtl
add
scas
cmp
pop
xor
inc
inc
fdivrs
loop
fisttpll
push
roll
insb
scas
clc
pop
fdivl
shlb
fnstsw
dec
push
inc
dec
popf
das
sbb
cmc
lahf
lds
or
in
pop
jl
js
sar
addr16
insb
out
pop
push
js
fidivs
scas
icebp
adc
push
rcrl
lahf
push
pop
and
sbb
popf
js
cmpsb
jmp
mov
insb
ljmp
cwtl
mov
sarl
mov
rcrb
xor
ds
scas
out
fldcw
dec
mov
test
push
sub
cmp
dec
mov
or
sub
pop
shlb
push
movsl
bound
pop
lds
sub
stc
out
fs
aas
inc
daa
or
cli
in
xor
xor
push
xchg
into
pop
cmovle
fisttps
xor
dec
ljmp
inc
or
mov
xor
push
in
in
test
push
stc
aaa
mov
cmp
pop
push
insb
xchg
test
lahf
nop
loope
frstor
xor
push
push
insb
add
mov
fnstenv
bound
hlt
mov
inc
out
mov
inc
ficompl
add
mov
call
ss
mov
add
hlt
gs
cmp
push
lds
jg
mov
aaa
pusha
popf
jmp
or
add
cwtl
stc
jp
xchg
and
xor
jg
mov
and
outsb
sarl
shrb
ja
push
shl
jnp
cmp
lcall
dec
lret
out
jg
popf
out
jo
icebp
stc
xor
cmp
dec
fstps
popa
fildll
popl
fstpl
ret
xor
jns
mov
rcrb
sti
test
or
mov
rolb
add
ss
xor
xchg
jb
dec
imul
out
inc
mov
push
and
ret
loope
leave
ret
out
arpl
rcrb
mov
add
mov
xor
subl
push
adc
xor
loope
arpl
cmpsl
into
dec
pusha
add
hlt
mov
test
outsb
je
pop
stos
push
out
xchg
push
punpcklwd
lds
xor
test
pusha
cmp
xchg
adc
rcrb
xor
ja
shl
jecxz
arpl
ds
filds
std
pop
push
inc
iret
ljmp
lret
sbb
adc
mov
jns
sbb
mov
cwtl
mov
xor
jae
aad
adc
pop
shrb
pop
sbb
or
aas
data16
dec
in
xor
sub
xchg
fnstenv
push
jbe
repz
fstl
test
das
in
fcom
ja
sbb
xchg
js
mov
dec
mov
xchg
pop
sbb
rclb
movb
test
inc
out
ljmp
lcall
lcall
in
push
mov
stos
ja
xchg
push
test
repz
out
outsb
push
fstpl
pop
pop
out
dec
lock
das
aam
outsl
dec
cmp
sbb
aam
and
jp
repz
test
test
mov
add
inc
stos
mov
pop
psadbw
mov
jb
and
adc
add
cwtl
mov
sub
ret
test
adc
ss
bound
lret
cmp
test
sub
fcmovnbe
in
xor
add
push
loopne
fstl
sahf
sub
insl
outsb
ret
outsb
or
xchg
testb
push
mov
add
xor
stos
in
mov
push
in
mov
insl
or
testl
and
cmpl
call
outsl
mulb
pop
jle
mov
call
shll
fsubr
je
or
xor
sub
push
xchg
or
mov
fisubs
inc
pushf
mov
mov
std
fldcw
cli
cli
inc
testb
lret
es
inc
add
inc
cwtl
mov
addl
shr
mov
lock
cmpsl
sub
ja
mov
xor
or
shl
sub
int3
add
mov
frstor
push
cmpsb
adc
fistpl
in
pop
daa
clc
pop
adc
push
fbld
jmp
bound
outsl
sbb
mov
test
out
testl
jnp
insb
stos
fst
push
dec
repz
repnz
ds
mov
adc
xchg
outsb
lods
jo
xor
inc
jb
xlat
sbb
out
add
sub
mov
das
stos
cmp
sub
cwtl
mov
lea
push
bnd
aad
flds
orb
xchg
dec
add
lods
in
and
sahf
fwait
cmpsl
stc
aaa
scas
fisubrs
fnsave
shrl
jmp
vpcmpgtd
mov
push
pop
push
jb
dec
xor
pop
and
nop
into
test
mov
adc
xor
sbb
inc
or
fiadds
jge
cltd
cltd
xlat
lret
sti
adc
inc
lahf
enter
stos
sbb
test
pop
xchg
mov
fisubrs
mov
int
insl
sbbb
jae
shll
mov
rcll
or
adc
or
movsl
pop
cmp
xchg
adc
dec
or
mov
sbb
pop
pop
sbb
add
cmp
sub
push
shlb
loopne
orl
jge
sahf
and
xchg
sbbl
pop
outsl
jb
xor
pusha
xorb
mov
lret
xor
addr16
cmp
je
pop
repnz
jecxz
bound
push
dec
jbe
jle
and
mov
jne
push
cmp
stos
aam
dec
or
jnp
cmpsb
dec
shrd
mov
add
push
xchg
inc
cltd
mov
push
flds
and
shlb
adc
add
inc
imul
push
fld
fnstcw
mov
dec
inc
dec
xlat
lock
mull
or
mov
mov
les
dec
pop
addr16
adc
push
hlt
mov
pop
adcb
push
cmpsb
xor
add
mov
in
or
insb
lds
sub
mov
xchg
hlt
data16
movsb
icebp
stos
mov
dec
loop
xchg
push
and
jb
test
mov
sub
add
or
es
cmp
movsb
lods
out
lcall
or
jo
call
mov
jp
sub
xchg
xchg
addr16
sbb
shl
mov
aas
leave
aaa
call
out
aam
scas
clc
or
shll
les
adc
lahf
push
cwtl
pop
bound
imul
push
add
and
add
movsl
cmp
mov
dec
mov
lea
int3
sbb
lret
inc
cmc
popf
gs
popf
xor
mov
mov
and
mov
js
xchg
mov
dec
in
or
mov
mov
popf
std
pop
into
clc
in
xchg
xlat
inc
iret
cmp
jmp
mov
inc
movsl
sub
lcall
pop
in
cmc
lods
jmp
xor
mov
je
add
sbb
mov
push
sbb
sbb
mov
add
jle
iret
lcall
jbe
pop
pushf
pop
jns
lods
stc
sbb
je
lcall
and
jmp
adc
lret
ffree
pop
push
and
xchg
dec
sub
push
stc
jb
ret
pop
fs
push
dec
sti
cmp
es
sub
mov
jae
test
shrb
dec
stos
sub
cmp
xchg
xorb
out
pop
cld
push
pop
pop
insl
xchg
mov
mov
ljmp
mov
jmp
lods
or
ja
shrb
shll
jle
mov
push
sub
rcl
mov
pop
push
xor
mov
xchg
jns
fbld
bound
mov
sub
sub
iret
lods
sub
lahf
mov
inc
shr
lahf
cmp
std
pop
add
ret
fcmove
out
sbb
mov
adc
and
repnz
aam
rcrb
adc
jle
shrl
stos
mov
push
adc
je
je
jmp
sti
jb
push
jp
filds
test
std
jmp
push
jo
bound
clc
cmp
add
jnp
mov
test
dec
pop
ljmp
fbld
cltd
jge
add
xor
cmp
add
xchg
scas
arpl
adc
lods
iret
test
or
enter
nop
mov
in
mov
jle
add
mov
lcall
addr16
mov
xor
mov
scas
xor
mov
xchg
adc
dec
iret
mov
and
pusha
arpl
inc
cmp
push
or
stos
lods
mov
jb
xor
xchg
add
xchg
mov
push
outsl
insl
sbb
cmpsl
xor
mov
cwtl
mov
aam
inc
inc
out
rorb
cs
fwait
gs
arpl
jne
iret
cmpsb
lcall
daa
sub
fwait
jbe
pop
cli
sbbl
xchg
sub
lcall
cmpsb
add
imul
jmp
fistps
fmul
movsb
mov
stos
out
pop
xchg
mov
add
cmp
sbb
and
dec
or
test
xlat
pop
fmuls
or
mov
test
shl
rcll
sbb
xchg
pop
adc
and
mov
dec
aam
push
cld
into
jb
and
sub
jl
das
test
inc
cld
ljmp
je
fmulp
adc
pop
lea
add
scas
popf
xor
xchg
xor
cmp
xor
mov
fbstp
test
ds
sub
fwait
push
inc
xchg
push
xchg
cmp
lods
cmp
xor
xor
xor
inc
dec
jns
mov
jo
or
and
jmp
mov
push
lahf
xor
adc
mov
les
xchg
adc
adc
fcomps
mov
mov
std
aam
xchg
push
xchg
add
pop
popf
cmc
shr
rorl
xchg
dec
adc
xchg
je
mov
and
jl
dec
pop
pop
sub
inc
push
sti
lods
cmp
mov
fisubl
mov
scas
divl
clc
sahf
lods
in
imul
sarl
dec
mov
mov
jae
push
push
pop
aas
add
sub
and
dec
and
rcll
sbbl
mov
sub
fildll
imul
add
mov
shlb
out
inc
jg
push
aam
jno
sub
popf
sbb
aas
aad
call
pop
push
xor
jecxz
push
jae
inc
jmp
or
dec
pusha
xchg
sub
test
mov
jne
adcl
pop
push
and
jecxz
test
fdivp
test
and
sbb
icebp
iret
cmp
cli
cmpsb
jbe
fmuls
push
fwait
mov
ret
push
notl
scas
cltd
repnz
call
fldcw
icebp
mov
jle
rcrb
mov
js
scas
push
add
xor
ret
loope
lock
push
mov
les
arpl
in
jge
fcmovne
cmp
jp
xlat
loope
enter
ja
pop
adc
aad
mov
sbb
jle
xor
pop
sbb
sub
shlb
int3
inc
cmc
jbe
rcrl
xchg
fs
repnz
fsubs
add
push
repz
and
adc
fidivrl
and
sub
repnz
daa
lods
jl
dec
out
jo
imul
fucomip
fistpll
push
sub
push
pop
fwait
sub
lret
sub
cmp
jnp
lods
cld
int
in
dec
pop
dec
jbe
bound
inc
push
add
inc
cmp
loop
cltd
cmc
lret
outsb
mov
sti
xor
popa
arpl
ret
xchg
jl
add
add
enter
in
jmp
dec
testb
pop
insb
popf
lahf
into
push
fwait
cmp
mov
bound
cltd
xor
lock
lock
pop
aaa
pop
inc
roll
gs
inc
xchg
dec
aas
shl
into
sub
rorl
push
push
js
shl
idivl
scas
inc
jno
pop
icebp
arpl
xor
or
popf
push
test
inc
xor
xor
or
mov
push
and
shlb
push
mov
mov
subb
mov
xchg
adc
int3
rcrb
std
push
mov
pushf
cli
nop
sti
push
jg
adc
out
mov
push
cmp
leave
daa
xchg
in
dec
dec
push
mov
jae
xchg
jno
or
xor
jp
ret
push
shll
and
push
inc
fwait
and
xor
lea
push
pushf
idivb
ret
mov
dec
out
add
enter
addr16
push
dec
fdivrs
fdivrs
popf
push
negb
fwait
sahf
mov
jbe
xorl
out
scas
dec
movsb
jecxz
inc
mov
and
test
fnsave
lcall
push
mov
mov
je
int3
xchg
aam
mov
mov
mov
sub
cld
adc
es
scas
inc
push
push
ss
mov
arpl
repnz
enter
in
mov
xor
in
loopne
and
loope
xor
daa
cld
nop
push
dec
cli
xchg
cmp
leave
or
sbb
sub
pop
cmpsl
in
jmp
mov
popf
daa
pop
fstpl
outsb
sbb
popf
jl
aaa
cmp
das
popf
sbb
or
adc
cwtl
sub
shr
pop
dec
and
mov
idivl
mov
push
add
sbb
pop
inc
test
xchg
xor
jp
sbb
xor
lds
sahf
inc
sbb
cltd
jb
jnp
stos
jmp
and
frstor
push
inc
push
jae
adc
or
add
jne
jge
xlat
adc
ficomps
mov
cmp
jmp
fcoml
into
xor
insb
inc
xchg
adc
pushf
fs
cmp
nop
mov
mov
cmpsl
push
into
mov
adc
fisubrl
loope
aas
mov
mov
daa
shll
pop
jecxz
inc
pop
negb
int3
in
cmpb
sub
add
mov
xchg
pop
push
push
rorb
fstps
stos
mov
bound
adc
stc
loopne
push
dec
xor
push
cmpsl
sbb
and
mov
imul
arpl
mov
ss
rclb
in
xor
pop
stos
push
cltd
push
jne
add
xor
jb
cwtl
out
ja
jae
addr16
push
lods
mov
xor
adc
aam
cmp
and
in
mov
push
mov
and
arpl
ficompl
xchg
decb
and
fisttpll
xchg
mov
int
jp
icebp
cli
insl
ret
test
popa
subl
mov
jns
inc
ljmp
add
jbe
andl
in
jecxz
inc
add
cmp
mov
in
incl
int
xor
xchg
sub
inc
add
push
sahf
mov
add
push
fcomps
ljmp
mov
add
xchg
stc
movsl
and
int3
jbe
mov
mov
pop
aaa
sarb
out
xchg
clc
push
dec
sbb
test
cmp
addr16
outsl
ret
inc
gs
pop
pop
repz
ret
add
insb
add
mov
cli
lods
jae
jno
mov
jmp
jae
in
jbe
fdivr
or
cmc
test
adc
jl
lea
sub
pop
dec
cmp
sbb
fcmovnb
pop
jnp
flds
pop
pop
dec
and
into
jns
ret
jnp
jns
scas
fwait
and
into
sub
jge
lret
enter
andnps
pop
push
loopne
sbb
mov
jnp
ja
jge
arpl
inc
inc
jo
sahf
inc
ret
call
repz
les
jg
or
arpl
ds
sarl
lds
pop
sub
add
push
lock
cmp
jae
push
fwait
cmc
popf
outsl
loop
sahf
and
mov
sub
push
dec
hlt
mov
xlat
in
lds
ljmp
add
cmpsb
fsubl
and
adc
adc
inc
dec
xor
movsl
mov
sbb
insl
xchg
cld
xchg
and
mov
faddp
mov
arpl
xchg
xor
movsl
popa
xchg
dec
pop
cmc
push
sub
lock
adc
adc
sub
dec
or
test
inc
inc
inc
xlat
cwtl
das
or
lods
call
test
inc
lods
xor
sub
lea
pop
loop
push
xchg
sarb
aas
mov
adc
std
inc
int
dec
sbb
add
add
scas
or
dec
lea
adc
in
imul
test
adc
into
inc
enter
inc
ret
insl
add
inc
hlt
dec
xor
div
jmp
loopne
rolb
mov
loopne
sub
xor
xchg
daa
cmpsl
cmp
addr16
inc
push
and
cli
dec
adc
dec
insl
out
xor
push
das
cmp
mov
fs
sti
push
sahf
mov
pop
jmp
mov
movsb
shll
cmpl
and
mov
mov
arpl
sbb
and
sub
aas
fisubs
adc
pop
cmp
dec
in
adc
mov
and
cmp
cmpsl
dec
mov
cmp
rolb
lock
sub
loope
pop
repnz
nop
sahf
jns
mov
in
sub
add
ret
mov
mov
mov
int
add
xor
test
ret
sbb
xor
insl
andl
in
sub
xor
mov
cmp
jmp
inc
xchg
into
shll
ljmp
pop
outsb
jge
adc
cmp
testl
or
jno
jae
dec
sarl
leave
jo
pop
mov
adc
sub
lret
push
lods
pop
inc
test
dec
iret
incl
pop
test
sub
ljmp
fdivrl
adc
hlt
pop
jmp
aaa
pop
sbb
aam
sub
mov
adc
std
add
jmp
into
sub
lret
pop
aaa
fwait
loopne
mov
push
popf
lcall
or
push
push
rcrb
add
or
lcall
add
out
cmpsb
sarb
into
pop
add
scas
xchg
cli
popa
clc
sub
outsl
aad
push
shll
in
shll
mov
xlat
xchg
fwait
testl
inc
repnz
jle
lret
xorl
cli
rorb
addl
test
lcall
pop
hlt
bound
imul
icebp
shlb
add
dec
push
ja
push
jae,pn
adc
loopne
fildl
mov
inc
popa
cmp
out
mov
es
jle
mov
or
jns
movsb
dec
cwtl
cmpsl
jb
fyl2xp1
loope
lods
not
imul
adc
xor
ss
test
jp
js
into
test
xchg
daa
sbb
dec
in
cmp
mov
adc
jl
out
scas
cmc
rcr
nop
repnz
dec
pop
fincstp
call
mov
imul
cmpsl
cltd
dec
add
iret
dec
aam
imul
mov
push
mov
aas
loopne
jge
add
test
inc
push
inc
inc
and
cs
pop
icebp
jge
cmp
jl
js
ret
popf
ljmp
out
jb
insb
and
lret
hlt
sbb
push
out
aad
xchg
addr16
and
sti
sub
inc
cmp
and
push
pop
into
inc
out
test
mov
xor
lret
jns
inc
loopne
and
mov
stos
arpl
add
push
mov
pop
pop
cmp
or
fistl
jecxz
pop
lret
sti
loop
popf
in
dec
data16
sbb
int3
pop
sbbl
insb
repz
sub
adc
or
jne
aaa
lock
lea
or
push
mov
mov
and
cwtl
daa
ljmp
inc
fmuls
jnp
stc
lret
movsb
sbb
pop
test
test
pop
repz
mov
cwtl
adc
inc
mov
inc
jp
mov
outsl
adc
lea
or
lahf
push
cld
and
rorb
xor
and
ljmp
js
cmpsl
loop
jecxz
add
push
or
xor
mov
ret
inc
lcall
ljmp
jno
mov
xchg
or
sbb
fcmovnb
mov
cld
and
mov
sbbb
cltd
repz
enter
cltd
push
loopne
js
mov
int3
cmpsl
into
and
ja
push
cltd
dec
sbb
cltd
or
push
jle
int
jbe
ficoml
call
popa
or
jecxz
push
aad
xchg
icebp
mov
aad
mov
xor
pop
ret
cmpxchg
nop
mov
aam
sbb
pop
out
icebp
ljmp
xlat
cmp
rcl
dec
add
add
inc
cmp
xor
paddq
adc
xchg
xlat
outsb
pop
lahf
mov
shrl
leave
dec
pop
sahf
cmc
psubusb
popf
rorb
out
data16
xchg
xchg
mov
pop
int3
arpl
inc
loope
daa
outsl
rcrl
leave
ljmp
or
call
pop
xor
lcall
rcl
or
cld
mov
aas
imul
pop
mov
mov
ja
jno
iret
mov
dec
ljmp
push
sbb
pop
pushf
test
push
jbe
js
scas
mov
pop
jae
pop
mov
hlt
xchg
pop
xor
sbb
jnp
xchg
stos
aam
into
fmull
test
shll
out
sarb
enter
mov
aad
mov
mov
xchg
sti
pop
int
mov
mov
jbe
lcall
pop
add
jae
inc
lods
dec
or
adc
xlat
push
test
in
xchg
cmp
jle
xor
or
call
fldenv
pushf
dec
sets
jae
pop
movsl
repnz
add
stc
mov
jne
pop
xor
stos
jns
bound
xor
popa
stc
adc
pop
call
aam
out
mov
mov
inc
mov
mov
cmpsb
jmp
or
xchg
jo
out
mov
mov
cmp
pop
push
jl
sub
and
push
dec
lods
mov
pop
clc
xchg
popa
cld
ja
jl
jnp
call
mov
loope
inc
xlat
mov
ficompl
mov
jnp
add
xchg
sub
jge
push
jmp
xlat
mov
cmp
push
mov
lods
call
icebp
mov
sbb
lds
cmp
push
aad
inc
adc
mov
ds
jo
push
sub
popf
das
loopne
ja
cld
push
fsubl
or
movsl
cmc
pop
hlt
es
dec
pop
outsl
cs
sbbb
arpl
cmpl
dec
pop
add
cltd
ja
sbb
ljmp
outsl
scas
cmpsl
je
fisttpll
in
push
mov
adc
dec
mov
sbbb
fcoms
out
in
or
push
ja
mov
pop
mov
xlat
jo
inc
mov
imul
adc
sbb
or
jne
ret
sub
test
stos
add
leave
mov
jae
cld
xchg
in
mov
stos
imul
cmp
add
push
das
add
movsl
mov
fistpl
cmp
push
out
scas
mov
push
cmc
cmc
mov
movsb
inc
ds
scas
cmp
mov
pop
mov
shlb
jne
fcmovb
fmuls
and
syscall
rcrl
les
jbe
imul
add
xchg
pop
lret
bound
xchg
jo
jnp
enter
push
test
insb
mov
add
cmpsb
lods
cld
daa
push
aas
pop
fldl
dec
std
jo
outsl
popf
push
jmp
nop
pop
movsb
hlt
in
or
shlb
push
rcrb
jmp
jb
push
add
stos
ds
jl
loope
popa
stos
lods
inc
fnstsw
int3
sub
mov
sbb
dec
fwait
pop
int3
enter
loope
push
xor
bndstx
decl
mov
dec
mov
cwtl
pushf
adc
imul
or
nop
rdtsc
mov
jo
mov
push
dec
adc
adc
pop
xor
jp
pushf
stc
popf
xchg
mov
and
mov
jle
adc
aaa
bound
lcall
xor
dec
cvttps2pi
popf
bound
dec
mov
jl
and
mov
pusha
adcb
inc
sbb
jle
stc
mov
sub
mov
xchg
jecxz
insl
jle
lcall
and
ret
movsb
adc
mov
in
jle
adc
or
lea
pop
pop
mov
loopne
repz
pop
int3
jp
push
sub
mov
push
dec
shrb
or
rcll
shl
sbb
pop
shl
iret
int
push
jmp
dec
out
nop
push
mov
lret
ss
ficompl
bound
push
cmp
jg
sub
lret
arpl
rorl
insl
sti
adc
adc
je
jl
mov
mov
pop
lds
sbb
add
aaa
outsb
in
stos
fisttpll
xor
fisubs
movsl
inc
add
dec
inc
iret
jl
xchg
sub
inc
xchg
adc
sbb
call
stos
mov
and
loope
xchg
or
sub
lret
jp
add
ljmp
pushf
jo
push
aas
loop
mov
sub
arpl
stc
orl
jo
dec
sub
sbb
in
xor
cmp
dec
ds
dec
repz
ja
add
out
lahf
fistpl
scas
rorl
inc
loope
xchg
cmp
jp
mov
ljmp
mov
jmp
fidivl
push
fnstsw
aad
imul
push
xor
mov
or
loopne
pop
xor
jge
repz
or
xchg
sub
mov
mov
cmp
xchg
or
mov
scas
mov
fdivl
push
popf
mov
jne
ficoms
cmp
clc
fcos
sbb
push
push
lcall
and
jns
lods
inc
das
dec
fmul
stos
jne
test
and
shl
leave
aad
xor
mov
int
xchg
sbb
leave
clc
clc
enter
sub
push
push
insb
leave
mov
fisubs
fyl2x
mov
sub
mov
mov
jle
in
jg
aaa
cmp
xor
mov
aaa
mov
sub
xchg
cmpsb
out
and
cmp
ljmp
repnz
push
cltd
lahf
jb
inc
cs
cmp
mov
enter
sarl
lahf
stc
lahf
sar
ds
sbb
mov
xorb
clc
or
sbb
testl
xchg
jle
es
out
ret
adc
inc
rcll
add
xor
arpl
xchg
push
cwtl
pop
jecxz
or
jno
sub
ljmp
pop
ret
outsb
adc
pop
jge
or
jg
or
cmp
adc
or
in
sub
movsb
push
push
insb
popf
inc
and
jmp
mov
inc
add
lock
rcrb
cltd
dec
add
push
insl
jmp
jge
jne
popa
jp
pop
mov
aam
push
cltd
xchg
scas
xchg
mov
or
repz
sbb
andb
aam
stos
out
loop
test
mov
inc
and
int
inc
inc
fsubrs
dec
pop
popa
fmull
mov
ds
pop
ret
jo
shl
into
fs
test
mov
hlt
imulb
jb
sub
sahf
js
ljmp
sbb
insl
rcrl
add
sahf
lock
jae
inc
in
cmp
pop
mov
and
jno
dec
cmp
jl
sub
sub
ljmp
nop
sbb
outsb
mov
imul
or
mov
cmp
xor
xor
push
xlat
mov
xor
nop
push
sbb
add
les
mov
pop
popa
xorb
and
dec
mov
push
call
cltd
mov
mov
mov
add
pop
adc
inc
adc
dec
jecxz
push
add
xor
mov
cld
pop
xor
xchg
int3
daa
fmul
cwtl
xor
in
mov
mov
push
es
and
mov
add
ja
shrb
movsb
cmp
and
dec
adc
xorl
movsb
inc
repnz
aas
pop
nop
add
cmpsl
mov
inc
adcb
fisttps
sub
push
jmp
mov
pusha
cmp
dec
loop
lea
xchg
insl
mov
imul
dec
data16
sbb
aas
add
xor
pop
mov
add
sti
loopne
ss
xor
ror
push
xchg
xchg
add
test
call
rolb
lret
pop
out
cltd
jge
mov
gs
js
cld
ss
enter
mov
adc
shrl
sbb
xor
push
popl
jo
push
notl
ja
imul
clc
sub
rorb
scas
adc
mov
ja
mov
in
push
push
int3
arpl
push
add
ret
xor
cmpb
ljmp
jne
pop
aad
mov
into
lahf
mov
fbld
mov
pop
inc
sbb
fwait
add
xor
js
adc
rcl
inc
out
xchg
sarb
xor
pop
sbb
lds
mov
cld
bound
cmp
mov
idivl
ljmp
jno
mov
fcmove
pop
or
arpl
push
or
sarb
mov
push
mulb
lods
iret
lods
inc
add
push
jnp
cwtl
pop
fistps
jnp
fcmovne
out
out
decb
fwait
lods
inc
into
sbb
lret
adc
xchg
lcall
sarb
lods
adc
mulb
jns
fdivs
add
adc
popa
lcall
stos
adc
dec
jp
adc
lret
push
test
xchg
rorl
arpl
mov
mul
ja
mov
test
outsb
mov
jne
xchg
fwait
rol
jbe
lahf
rcrl
or
cmp
push
jl
popa
jl
fs
call
sub
push
push
clc
or
cld
pop
dec
inc
or
mov
outsl
add
jp
dec
in
fwait
lret
popf
movsb
pop
cmc
adc
ss
dec
stos
test
stc
lods
jo
in
mov
adc
and
sub
mov
xchg
xchg
cmp
pop
sbb
movsb
es
mov
push
bound
psrlw
adc
mov
or
add
pop
mov
andl
jb
sti
jp
push
imul
sub
jle
test
sbbb
icebp
adc
mov
adc
inc
sbb
rcrb
cmp
les
popa
insl
ja
ljmp
or
rorl
add
insb
repnz
xchg
imul
push
out
inc
fstl
xlat
mov
xlat
sub
ret
mov
pop
int
sub
adc
jnp
aas
add
jecxz
fmulp
fsubr
sbbl
and
dec
xor
add
sbb
and
mov
rcrb
in
rorb
aam
sbb
push
dec
mulb
pop
xor
xlat
int3
pop
int3
inc
cmpsl
mov
sub
dec
loope
movsl
mov
je
stos
push
pop
and
mov
xor
cmp
pop
push
shl
insl
add
jecxz
mov
les
jae
sbb
shlb
push
repnz
call
add
out
cmpsl
cmpsl
sbb
sub
dec
push
icebp
fwait
and
sarl
test
and
sbb
inc
rclb
and
mov
leave
sti
xor
cltd
loope
push
out
add
mov
js
ret
nop
std
xor
pop
and
pop
mov
sti
sbb
les
test
inc
stos
cmpsb
fisubrl
cs
rolb
loopne
in
lret
call
inc
std
sbb
testl
mov
mov
fidivs
push
add
sub
jbe
imul
xchg
mov
jns
fcoml
jg
cmpsb
fidivs
adc
ja
iret
push
je
mov
clc
push
add
testb
pop
nop
leave
mov
lahf
and
ja
fstpl
lea
mov
pop
hlt
add
out
push
pusha
and
in
dec
jo
movsb
mov
sbb
pop
add
enter
lock
inc
imul
adc
adc
bound
mov
fwait
sub
test
daa
enter
mov
je
lret
or
pop
sbb
jae
in
mov
pushf
ds
and
add
jne
jmp
mov
aam
ss
dec
xchg
xor
mov
je
dec
xchg
fmul
div
ffreep
clc
ret
cmp
or
lcall
xlat
outsb
insl
insl
daa
cli
test
in
loop
incl
adc
inc
dec
dec
test
andl
test
xchg
shll
cmp
fimull
sub
lcall
enter
push
jg
mov
fdivrs
ljmp
cltd
xchg
pusha
sub
cmpsl
inc
clc
and
inc
dec
add
data16
lret
sti
mov
mov
cmp
lret
cmp
sub
inc
or
add
imul
out
jns
scas
je
sub
scas
inc
mov
or
mov
mov
jne
mov
fwait
pop
std
push
push
je
loop
out
xchg
jne
es
cwtl
inc
mov
adc
push
xchg
jne
bnd
sbb
xchg
mov
cmp
lods
sbb
mov
pop
ficomps
cmp
cmp
pop
subb
jns
and
mov
divb
loop
dec
and
dec
push
jmp
mov
mov
stos
loop
shrl
mov
jp
jae
adc
jae
pop
sub
lock
jg
int3
nop
popa
test
je
adc
je
add
stos
jp
loope
push
fcomi
inc
pop
imul
adc
pop
cmpsb
pushf
outsl
mov
jb
lds
xor
cmpsb
js
leave
pusha
adc
aad
sub
mov
jmp
and
push
rol
pop
call
or
sub
sti
inc
insl
add
adc
gs
mov
std
repz
daa
pop
pop
outsb
mov
cmpsl
dec
sbb
fbld
xor
xchg
in
test
mov
push
insl
inc
inc
or
mov
pop
dec
cmp
cmp
lcall
jecxz
adc
inc
fdivr
mov
or
cs
pushf
push
fnstcw
leave
mov
jne
pop
stos
inc
mov
cmp
and
pop
loop
mov
and
cmpsl
cmp
adc
or
jno
shlb
dec
repnz
mov
les
les
insl
or
outsb
mov
loope
les
scas
mov
clc
cs
testl
xchg
mov
cltd
push
aas
dec
addb
test
adc
nop
inc
pop
scas
inc
ret
filds
cmp
mov
pop
mov
mov
jne
cmp
jge
mov
mov
and
pop
mov
repz
adc
xorb
mov
pop
adc
mov
push
hlt
pop
cmpsb
adc
into
lods
mov
or
popl
sbb
ret
cmpsb
and
mov
inc
mov
push
sub
fpatan
pop
out
mov
jl
mov
jl
lret
rorb
sub
shll
adc
dec
leave
push
sbb
shl
out
les
sti
or
pop
push
loopne
pop
cmp
fucomp
mov
dec
in
or
adc
dec
stc
ds
adc
push
push
jmp
in
xchg
mov
sti
ljmp
imul
outsl
in
sub
lahf
mov
in
aad
mov
xor
add
xchg
push
rorb
mov
xchg
push
loop
aaa
mov
or
scas
sbb
mov
push
out
ja
push
cwtl
or
xchg
cmpsb
pushf
scas
xlat
mov
sbb
pusha
jecxz
sbb
mov
fcompl
push
push
jl
gs
dec
out
lret
pushf
sub
mov
adc
sti
cwtl
xchg
mov
push
lret
out
cli
out
push
jmp
mov
fimull
cltd
es
test
daa
inc
adc
push
lcall
jmp
test
sub
xor
mov
outsl
aas
sub
stos
xchg
mov
sbb
scas
pushl
adc
enter
push
andl
inc
call
repnz
cmpsb
into
out
adc
out
pop
sti
mov
dec
hlt
rcrl
jl
repnz
leave
movsb
and
flds
xchg
mov
dec
pop
adc
jb
and
out
popfw
mov
cmp
dec
adc
fnstcw
iret
into
cmc
adcl
dec
pop
push
sahf
xor
lcall
std
test
mov
push
sub
inc
pop
aas
je
jno
mov
cs
mov
sbb
mov
pop
lods
jo
cmpl
push
rep
popa
mov
loop
pop
lea
sbb
xlat
xchg
cmc
aad
out
sbb
xchg
xchg
movsl
outsl
ret
repnz
add
jecxz
jb
imul
add
int3
pop
lods
adc
mov
fidivs
pop
mov
pop
mov
dec
repz
add
ja
or
pop
push
ret
pop
cli
sbb
push
dec
pop
jae
pop
sub
xchg
dec
cmp
mov
loop
lahf
jecxz
shrl
mov
mov
jo
fimull
shrl
and
sbb
js,pt
in
jb
sub
nop
sbb
cmp
xorb
mov
mov
jae
inc
push
es
jmp
pop
out
pop
or
loopne
cs
fistpl
and
push
test
jmp
sbb
cwtl
test
repnz
les
sub
arpl
bound
mov
movsl
cmp
xchg
aaa
iret
xorl
mov
cmp
gs
push
pop
sbb
aas
sub
test
sbb
nop
xor
loop
push
mov
cmp
shrl
lea
mov
inc
js
rcrb
scas
push
outsl
inc
loop
mov
in
pusha
pop
sahf
jp
inc
sub
push
pusha
pop
sub
inc
and
inc
mov
pop
ljmp
cmc
push
pop
adc
vmulss
daa
jecxz
and
sub
mov
dec
stc
jle
inc
mov
mov
outsl
sbb
pop
divb
sub
xchg
and
push
mov
lahf
mov
rcl
dec
pop
jecxz
xor
test
mov
testl
sbb
push
and
adc
sbb
jge
cmp
push
add
fdivrl
mov
ss
cmp
test
mov
dec
mov
push
stos
inc
dec
add
xchg
shlb
jne
test
lods
cmp
cmpsb
imul
inc
aam
xchg
je
ds
loope
push
push
sahf
jmp
stc
cmp
xor
mov
xlat
mov
mov
jle
pop
sti
xchg
mov
lds
fwait
shlb
loop
add
sahf
test
movsb
mov
jg
lahf
push
adc
pop
lods
push
and
shlb
mov
mov
push
out
add
sub
ja
mov
push
addr16
sarl
dec
jno
aas
rcrb
mov
in
ret
adc
je
mov
adc
out
jo
mov
pand
xchg
popf
or
cltd
hlt
pop
cmp
push
mov
or
add
sub
hlt
fcmovnb
es
push
shrl
cmp
jl
negl
and
or
xchg
sub
mov
sub
into
sub
rclb
bswap
mov
sahf
call
aas
and
pop
sbb
mov
in
jge
daa
sahf
insb
add
jp
adc
shlb
je
iret
out
xchg
lret
mov
adc
lret
and
sbb
mov
mov
pop
leave
xor
push
repz
jns
aas
dec
jne
jmp
sub
dec
shll
insb
mov
mov
ds
add
or
test
mov
in
nop
les
cmp
sbb
mov
mov
cmp
call
test
into
nop
icebp
pop
fildl
dec
popa
cs
jne
call
xor
scas
arpl
mov
inc
fldcw
movsb
xor
push
xchg
jp
or
add
cmc
iret
test
bound
or
fmulp
sbbl
addl
lea
cmp
add
pusha
adcb
and
and
cmp
xor
ror
push
pusha
and
mov
adc
adc
inc
mov
dec
subl
lods
xchg
int
mov
xor
sbb
mov
cmp
cmpsl
mov
mov
push
test
stc
mov
test
cmp
rorl
imul
sahf
icebp
out
enter
scas
mov
imul
sbb
lret
add
jo
rcll
pushl
test
rorb
mov
lahf
test
aaa
icebp
inc
mov
mov
in
dec
xor
sub
popl
inc
lods
mov
fstpt
out
pop
jle
push
pop
or
mov
pop
daa
add
cmp
xchg
inc
out
cmp
sub
or
add
nop
jg
test
cld
push
test
jle
dec
nop
pop
std
lds
test
rclb
push
cltd
js
xor
jp
hlt
ret
fiaddl
mov
add
dec
jae
mov
adc
pop
lea
ja
aaa
xor
aaa
pop
lahf
out
cmp
jne
pop
in
cltd
cld
xchg
ret
jne
mov
mov
imul
and
sbbb
out
mov
test
xchg
stc
orl
jne
push
loope
outsb
in
ret
sbb
insl
inc
or
inc
fstpt
mov
scas
sub
pop
jo
popa
cmp
gs
sub
or
sbb
fistpl
js
push
insb
testb
mov
mov
push
mov
in
dec
addr16
jmp
test
push
inc
fistpll
push
lret
ljmp
jnp
push
pusha
ss
sti
lahf
sub
rcl
push
shrl
and
ficoms
mov
mov
pop
insb
jnp
lds
and
movsb
push
rorb
lahf
xlat
lea
shll
mov
ficoms
mov
lods
push
mov
mov
cmp
imul
sub
adcl
inc
xlat
pop
jle
arpl
pop
jbe
movsl
cmp
outsb
roll
fwait
pop
test
je
jp
dec
out
fmull
cs
cmp
das
inc
or
sbb
out
in
hlt
add
mov
pop
inc
shrb
jb
int
in
in
rcl
pop
inc
in
xchg
mov
pop
dec
mov
push
in
adc
mov
addr16
iret
dec
inc
data16
test
mov
adc
adc
sbb
je,pt
jb
add
jae
mov
and
xchg
call
cmp
orb
mov
cmp
jl
sbb
aam
dec
test
xchg
push
pop
jge
pop
addr16
ljmp
out
mov
push
pop
push
jns
xchg
or
add
das
pop
test
jle
filds
sbb
add
clc
in
lods
push
pop
sub
xlat
xor
out
sti
lea
out
inc
inc
scas
les
xchg
mov
mov
sti
adc
xchg
push
fs
addl
and
dec
or
popa
dec
or
lods
mov
pop
fidivl
mov
add
loope
add
aas
data16
jo
outsb
mov
pop
add
mov
pop
jle
mov
mov
mov
out
dec
fsts
enter
test
in
mov
test
nopl
jmp
and
push
cltd
lea
mov
cmpsl
mov
cltd
outsb
loop
imul
push
dec
scas
orb
adc
stos
xchg
addr16
sbbl
mov
xorb
sbb
fwait
in
jnp
jbe
sub
mov
lock
outsl
and
inc
cmc
adc
sub
andb
add
int3
nop
pop
cmpsb
push
push
inc
aas
jl
loop
xchg
push
loope
cltd
sbb
cmp
call
out
sahf
pop
mov
inc
inc
jns
xchg
mov
dec
shl
call
in
adc
pop
lcall
and
mov
xor
fistpll
out
mov
push
xchg
nop
pop
mov
jb
inc
sub
inc
in
xorl
sbb
jb
sub
loope
push
jp
add
fimuls
repz
inc
mov
push
jne
push
xchg
inc
movsb
jnp
adc
push
jmp
xor
dec
movl
dec
add
dec
icebp
dec
addr16
sbb
add
test
and
mov
mov
sbbb
jne
in
jl
jecxz
mov
mov
inc
fmul
cli
lcall
aad
add
push
mov
jno
dec
rorl
sub
or
pushf
mov
push
ljmp
icebp
insb
outsb
mov
decb
add
mov
fsub
jg
pop
inc
push
sbb
bound
pop
shrb
mov
hlt
mov
sub
push
mov
inc
xchg
dec
fimull
pmuludq
sub
mov
or
lahf
mov
leave
sbbl
mov
hlt
jmp
aad
hlt
pop
push
test
and
movb
dec
sbb
insb
arpl
mov
adc
fadds
decb
xchg
xor
push
mov
jg
inc
pop
ds
push
loope
dec
dec
fwait
repz
inc
dec
jp
inc
inc
xchg
jg
aam
mov
lds
or
mov
cmpsl
ret
int3
fmuls
push
cmpsb
xor
adc
push
pop
out
repnz
je
jbe
lret
xchg
pop
push
inc
dec
mov
pop
xchg
mov
notb
mov
jmp
neg
pop
adc
xchg
xor
sahf
stos
adc
push
orb
fs
imul
pusha
push
imul
dec
mov
jge
inc
add
add
cmp
sti
test
stos
sbb
push
fmuls
pusha
jle
jp
loop
and
jns
shll
cmpsb
test
test
mov
aaa
add
mov
adc
jne
mov
outsb
shlb
fmul
xchg
add
cmc
fs
fmuls
mov
aad
nop
btr
popa
sahf
cs
sahf
lods
push
sbb
jg
imul
fisubrl
inc
adc
xor
mov
push
push
inc
outsb
inc
sbb
insl
mov
sti
dec
cmpsb
mov
sbb
loopne
pop
xor
out
outsl
daa
lock
lahf
jb
add
jmp
jno
int3
jbe
cs
jmp
es
enter
ds
stc
lahf
aas
cli
inc
xchg
in
stos
push
push
lret
or
dec
jo
mov
les
xor
or
pusha
cmc
js
out
dec
jecxz
outsb
loope
inc
push
insl
push
test
inc
pop
test
add
mov
or
pop
sub
jnp
mov
fstl
js
fsubrl
inc
mov
fs
adc
sbb
sub
loop
rclb
push
sub
inc
fucomip
dec
fidivl
pop
loope
inc
call
adc
mov
xchg
sub
mov
and
stos
push
repz
mov
inc
mov
pop
or
loope
sub
je
ss
xor
adc
push
mov
inc
pushf
sahf
push
and
ret
ds
cmpsb
and
pop
adc
outsb
add
loop
outsb
lods
sub
sub
push
jae
pushl
adc
adc
std
lret
sub
sti
popa
lods
cs
mov
inc
and
push
decb
add
rcrb
aas
outsl
pop
test
cld
cmc
adc
push
stos
push
cmc
push
mov
lds
jae
adc
xchg
sbb
push
int
scas
push
in
rcl
jmp
rcll
fwait
mov
test
shrb
adc
das
shrl
dec
mov
inc
pop
mov
sub
mov
xchg
test
aaa
into
jle
mov
mov
vpunpcklbw
push
push
rol
popa
testb
fwait
bnd
or
pop
push
add
mov
repnz
aad
pop
fs
xchg
jge
fsubr
ds
xchg
jo
fs
push
and
fbstp
xchg
xor
mov
add
jmp
in
iret
mov
lods
cs
ss
pop
mov
pop
push
cmp
sub
push
cmp
fstps
out
pop
xor
jae
mov
push
xchg
sysret
pushf
clc
aaa
mov
mov
nop
enter
ret
out
cmp
lret
inc
mov
ja
jmp
or
and
mov
adc
aaa
in
repnz
movsb
add
es
add
cmpsl
inc
out
mov
jl
xchg
pop
mov
sub
pop
out
and
cmp
es
adc
and
cld
mov
adc
pop
pop
rcl
mov
jl
dec
in
lahf
scas
mov
int3
je
sbb
mov
mov
dec
mov
add
aam
xchg
lret
faddl
gs
push
dec
dec
jg
push
rcl
lret
mov
mov
pop
xor
cmp
divb
xlat
outsb
lcall
cmp
or
popa
mov
sub
pop
or
push
cmpsb
lods
pop
or
cwtl
mov
out
cwtl
or
sbb
shll
push
icebp
sub
test
inc
pop
into
mov
cmpsb
pop
outsb
dec
fwait
push
imul
cli
imul
pop
test
lret
and
pushf
outsl
jecxz
aas
add
in
pop
inc
out
sbb
es
xor
push
movsl
pusha
and
fisubs
cltd
movsb
and
adc
in
outsb
push
je
sti
addb
cli
mov
fisubs
dec
push
test
andl
stos
pop
inc
sbb
pushf
xor
rorl
mov
mov
fwait
dec
mov
and
sub
sbb
mov
cmpsb
cmp
inc
push
jecxz
mov
rorb
mov
push
movsb
fldt
sub
pop
xor
dec
pusha
enter
int
cmp
sti
loope
ret
mov
mov
mov
xchg
out
enter
mov
push
scas
push
fcmovnu
mov
stos
in
xor
jp
push
movsl
mov
shrb
xchg
subl
push
out
in
dec
dec
mov
dec
push
push
outsb
out
pop
ss
mov
mov
push
dec
mov
mov
adc
fisubs
test
push
xchg
aaa
jne
mov
addl
pusha
stos
mov
dec
sub
adc
stc
cmp
inc
sbb
out
push
mov
xor
das
pop
dec
push
mov
pop
xor
scas
cmpsb
push
jmp
andb
and
int3
and
push
out
and
iret
mov
adc
xchg
fnstsw
test
and
push
daa
pop
rclb
push
add
mov
mov
and
int
into
push
das
dec
jge
add
push
sbb
xchg
fwait
or
mov
call
enter
ss
mov
jns
sub
scas
dec
sub
dec
jecxz
pop
push
ficompl
xchg
mov
stos
hlt
jb
jmp
cmp
jns
mov
xchg
sahf
push
add
cwtl
cld
xchg
mov
pop
xor
or
sub
fstpt
stos
scas
roll
loopne
mov
fbld
jle
add
stos
pop
jo
lcall
inc
movsb
cmpsl
ret
and
orb
shrb
mov
xchg
mov
mov
dec
stos
fidivrl
xlat
cmc
jl
xchg
adc
xlat
inc
call
sahf
xor
mov
mov
push
cwtl
and
xor
lods
in
pushf
rcl
insl
add
push
cmc
pop
mov
lcall
push
xor
js
pop
cmp
or
jnp
pop
fcomi
fsubr
push
adcl
pop
sbb
xchg
sub
push
inc
jb
cs
scas
inc
push
loope
test
out
or
aaa
je
pop
sbb
jle
pop
dec
insb
adc
test
adc
inc
into
movsl
test
in
or
aad
enter
cmpsb
loope
inc
in
mov
aam
test
mov
sub
fs
std
icebp
lods
dec
and
test
push
dec
fcoml
sbb
push
or
outsb
pop
and
fs
or
imul
nop
out
mov
test
or
mov
cli
pop
imul
lods
pop
bound
cmpsb
fistps
gs
call
nop
xor
addl
adc
insb
mov
dec
mov
je
xor
cmp
scas
pop
lcall
and
adc
mul
jl
jle
mov
les
push
std
jmp
push
sbb
inc
pop
xlat
cld
adc
orl
xor
std
mov
push
sub
lock
roll
imul
pop
jg
sbb
out
sub
loop
jg
xor
push
ret
loope
movsb
arpl
mov
sbb
outsl
jecxz
mov
mov
push
push
rclb
cwtl
and
push
and
lahf
stos
jge
lcall
mov
out
stos
xlat
sub
push
inc
add
jb
notb
xchg
out
or
pop
aas
test
inc
sbb
movsl
js
pop
dec
popa
insl
js
imul
mov
lret
aas
xor
popa
add
and
stc
popa
sbb
sub
lea
fld
push
pop
sub
mov
jne
daa
or
xchg
sahf
dec
dec
pop
push
mov
movsl
mov
and
cmc
cltd
sbb
lock
adc
movsl
jae
cmc
test
sub
add
repz
fsts
jbe
cli
jl
dec
push
movsl
xchg
sti
pop
inc
daa
sbb
push
sub
aas
lods
inc
mov
inc
scas
mov
mov
dec
cmp
or
cmp
leave
mov
add
icebp
xchg
rcll
inc
pop
sub
movsl
lds
sahf
inc
sub
or
cmp
test
jmp
mov
pop
push
stos
ret
cmp
insb
cmpsb
andb
mov
inc
pcmpeqw
or
jecxz
fst
jno
xchg
sub
push
inc
test
xchg
movsl
dec
mov
and
xchg
pop
into
inc
mov
mov
push
mov
and
in
add
stc
imul
cwtl
fcmovne
jmp
pop
shrl
out
pop
repz
jno
fstpt
into
push
je
cltd
lret
shl
adc
jecxz
ret
stos
mov
dec
loopne
bound
cmp
in
daa
in
loop
mov
rcrl
mov
orb
xor
fldenv
imul
fnstenv
push
mov
mov
jbe
repnz
pop
pop
sahf
push
sahf
pop
adc
pop
lea
cmpsl
das
xor
nop
cltd
ljmp
dec
pop
into
enter
mov
lcall
push
imul
insb
cmp
mov
mov
pop
js
andl
dec
dec
pop
adc
sbb
shll
sbb
in
pop
mov
dec
and
leave
cmp
and
test
popl
aam
xlat
and
ja
ret
arpl
inc
sbb
sarl
adc
cmc
jne
sarb
lret
inc
mov
aad
lock
adc
sbb
cmp
and
and
outsb
push
xlat
lahf
adc
ljmp
rcr
xchg
cmp
dec
jmp
jmp
or
repz
sysexit
data16
push
cmp
movsl
push
mov
das
mov
jecxz
pop
flds
out
test
fs
sbbl
xchg
aas
stos
ja
mov
adc
notb
fmuls
jge
mov
cmp
cmp
cwtl
xor
js
std
and
test
sbb
add
pop
pop
pusha
andb
pop
jge
jbe
xchg
fs
lahf
pop
mov
adc
dec
scas
fisubs
imul
mov
gs
jb
mov
scas
push
mov
mov
filds
insl
mov
sbb
push
xchg
lods
pop
je
lock
inc
xor
or
ljmp
jne
dec
fmuls
loope
outsl
mov
jo
pushf
push
out
adc
add
jae
mov
rep
dec
loope
in
mov
inc
sub
adc
dec
fbstp
cmpsb
nop
imul
popa
lods
pop
movsl
sub
adc
mov
push
aaa
outsb
add
rolb
cmpsb
push
push
cmpsb
ja
xchg
sbb
in
sbb
sub
popf
push
clc
ja
push
inc
repnz
mov
mov
cli
push
insl
daa
cmp
cmp
subl
mov
inc
scas
xchg
std
inc
and
mov
enter
cld
ljmp
pushf
pusha
xor
adc
ja
sbb
fstpl
setl
ja
rcrb
mov
mov
and
repz
shl
test
leave
ljmp
in
mov
std
les
int
in
pusha
iret
push
movsb
rcll
out
xchg
and
mov
cmp
push
jo
pop
adc
nop
cmpsl
jnp
sub
fnsave
or
aaa
cmp
in
out
daa
or
pop
or
push
inc
lret
cs
push
gs
lret
lret
mov
push
dec
push
clc
sahf
and
lret
dec
jo
rol
mov
cmpsl
fdivl
cmp
fistpll
in
daa
push
push
cmp
ret
xor
fmul
dec
sub
push
call
or
outsl
push
xor
fisubl
lods
fbstp
or
or
xchg
dec
mov
in
or
test
or
or
adc
sub
jno
jg
clc
or
jl
rcrl
jmp
pop
in
mov
subb
or
jl
cmp
lret
aam
gs
js
mov
xchg
imul
sahf
div
insl
mov
inc
into
icebp
push
add
sbb
and
mov
js
pop
enter
pusha
ss
mov
push
jmp
scas
test
pop
loopne
inc
fisubrs
shlb
and
xorl
insl
xor
es
inc
mov
pop
push
fisubs
and
pusha
add
jmp
xchg
push
cmp
int
test
cmp
mov
push
icebp
unpcklps
cmp
pop
add
dec
xchg
and
jp
sbb
add
stos
push
mov
inc
pop
dec
sti
shll
js
cmp
pop
cli
xchg
xchg
out
test
data16
jae
push
sub
inc
xchg
or
addb
scas
pushf
pop
or
sbb
adcb
insb
sub
test
jo
js
mov
push
push
test
loope
pop
daa
xor
cmpsb
fsubr
mov
jbe
std
cs
pushf
push
fucom
sbb
and
fmuls
xor
scas
sub
and
xlat
std
xor
inc
jmp
scas
mov
xorl
and
pop
mov
pop
je
es
sub
push
jp
enter
pop
lock
mov
out
xlat
or
loop
pop
push
ljmp
inc
das
icebp
mov
push
or
sub
cmp
mov
pop
sbb
cmp
data16
push
push
je
pop
fnstcw
jnp
or
inc
push
sub
aaa
adcl
push
std
sub
pop
sbb
or
scas
fcomps
jns
adcl
push
bound
xorb
stos
outsb
cmc
out
add
push
fucomp
dec
fs
cltd
mov
rclb
mov
ret
call
inc
cwtl
stos
js
ja
js
hlt
cmp
jb
int3
cmp
and
pop
in
imul
jg
aam
and
fdivl
and
jge
arpl
pop
shll
sub
out
sub
mov
jle
xor
xchg
inc
inc
dec
movsl
adc
xchg
and
sarl
jmp
movsb
or
addr16
sti
push
je
call
adc
jno
aam
scas
cmp
sahf
pop
bound
shr
xor
fucomi
popf
lods
adc
push
jmp
loopne
imul
loopne
and
xchg
sub
mov
fnstenv
or
sub
or
xorb
mov
xor
xchg
mov
push
mov
mov
xchg
popl
inc
pop
ret
jge
test
or
aam
cmc
js
test
pop
adc
jnp
cmp
dec
shlb
pop
dec
loope
cmp
push
lcall
cwtl
pop
cmp
jecxz
cmp
repnz
push
jmp
icebp
cli
jo
mov
std
inc
inc
jnp
push
pop
jmp
cld
outsl
mov
push
insl
pop
into
push
fisttpl
push
add
jno
pop
insl
xor
cmc
mov
repz
mov
shlb
jp
les
mov
xor
jmp
nop
sahf
cli
lahf
mov
rcrb
xlat
inc
xchg
mov
adc
movsb
faddl
mov
es
js
das
cmp
mov
lcall
xchg
ljmp
push
lcall
cwtl
pop
mov
lcall
lahf
jae
sub
cmp
jle
dec
and
imul
pop
cli
mov
mov
push
mov
imul
clc
lock
outsl
das
addr16
test
aam
pop
fadds
cli
or
sub
pusha
push
in
adcl
mov
xlat
inc
cli
mov
jp
ss
icebp
jg
int
cld
jmp
mov
jne
mov
dec
dec
sbb
cmp
rolb
mov
sbb
lock
mov
mov
repz
inc
cmp
pop
jle
loop
adc
cltd
data16
xor
xchg
inc
mov
add
out
imul
sbb
hlt
mov
mov
xor
mov
add
test
bound
push
outsl
fnsave
or
jp
jmp
mov
fbstp
bound
lcall
fimuls
jle
pushf
test
sbb
xchg
lret
ss
sbb
pop
mov
sahf
outsb
inc
call
fwait
inc
mov
add
pop
sub
call
popf
popa
jecxz
inc
inc
lods
sub
add
je
inc
into
cmp
sub
shl
adc
xor
test
sbb
cltd
jecxz
movsb
test
push
std
pop
decb
lret
repz
das
inc
cmpsb
int3
mov
shll
mov
sub
into
cmp
stos
movsb
cltd
je
pop
jne
lods
cmc
cmp
cmp
jl
lock
popa
and
or
and
outsl
mov
mov
jecxz
dec
xchg
movl
popf
sub
fdivs
rorl
pop
iret
jne
xchg
sub
out
insb
shrl
add
sarb
int3
pusha
imul
bound
popa
sbb
or
loop
rcrl
in
ret
adc
insl
inc
lret
aaa
and
mov
out
stc
imull
jae
cmpsl
cmp
test
shrb
sub
xchg
inc
jge
mov
jmp
lret
in
jle
mov
adc
mov
mov
shll
cmp
repnz
mov
lods
inc
mov
dec
sub
dec
add
enter
add
push
xor
sub
inc
mov
mov
inc
shll
leave
push
lcall
or
sarl
fidivrs
and
sbb
inc
inc
mov
add
jne
jns
fwait
sub
int
mov
mov
test
sub
push
ficomps
stos
inc
mov
cmc
sub
arpl
in
negb
out
faddl
mov
dec
ss
inc
ret
mov
lock
sbbb
fiaddl
mov
sbb
ds
outsb
repz
stos
lds
jae
addr16
push
nop
mov
movl
scas
rcll
cltd
orb
nop
or
inc
aad
pop
mov
test
jne
dec
pop
movsl
push
js
xor
lods
fstpl
scas
mov
xchg
mov
push
hlt
push
daa
adc
pop
sub
adc
inc
push
pusha
loopne
fcomp
jb
loope
mov
pop
pusha
in
jp
sub
into
dec
aaa
add
iret
outsl
pop
or
rcl
jae
or
sbb
pop
dec
mov
adc
xor
fnsave
ud2
icebp
push
stc
cs
daa
fidivl
pop
ds
loope
and
mov
cmp
sub
fnsave
add
inc
fiaddl
xchg
leave
popf
and
cmp
imul
divl
sahf
pusha
xchg
lds
cmp
cmpb
divb
add
call
mov
arpl
addr16
sbb
in
push
add
mov
int3
jae
cmpsl
pop
xchg
adc
enter
enter
rorb
mov
push
adc
aaa
rcrb
mov
dec
out
dec
or
jae
cmpb
aaa
fcompl
sarb
push
xchg
les
je
mull
test
jmp
sbb
xchg
mov
xchg
fldenv
shr
sub
and
mull
mov
push
xchg
jg
ss
xor
pop
lds
or
inc
arpl
adc
out
cld
sbb
pop
push
fsub
cmp
shll
enter
lcall
cmpsl
ds
xchg
out
shl
addb
dec
repnz
mov
loope
xor
mov
addb
xchg
outsb
dec
ret
stos
xor
xchg
imul
jmp
push
push
lods
adcl
jnp
mov
scas
scas
shrb
das
xor
lea
dec
mov
test
lret
jns
lahf
and
ljmp
cmp
iret
mov
xchg
cmp
or
insl
jge
and
sbb
pop
fnstenv
inc
dec
cli
data16
push
push
adc
sbb
add
into
shl
lcall
test
jo
imul
jp
outsb
pop
mov
sarb
adc
xorb
mov
sahf
lea
push
das
jbe
insl
push
jns
mov
loope
mov
sbb
add
into
shrb
in
cld
or
pusha
jno
cmpb
jne
adc
add
or
sti
sarl
fnsave
and
lret
mov
and
fiaddl
or
ss
inc
loop
bound
lea
insb
loopne
lcall
xor
mov
jp
push
add
cmp
jbe
arpl
fisubrs
les
movsl
fidivrl
insb
dec
pop
lods
int
adc
add
imul
cld
dec
out
jne
sub
cmp
sub
push
xchg
sub
dec
sbb
inc
dec
cmp
arpl
push
cmc
pop
insl
adc
and
daa
xor
lret
pop
in
dec
fadds
xchg
sub
mov
es
or
pop
jae
fiaddl
pusha
lods
repz
cld
sbb
test
in
cmp
push
xor
ja
fbstp
sub
mov
stc
scas
push
jecxz
daa
rcr
int
lcall
and
fwait
in
shrl
loopne
data16
inc
iret
fisubs
lret
lock
stc
adc
movsl
pop
out
sbb
xor
inc
icebp
fs
jmp
fwait
pop
jns
cmp
sub
xor
repnz
arpl
adc
push
pop
daa
data16
leave
mov
jbe
mov
push
shrb
enter
data16
sbb
stc
mov
mov
inc
iret
aaa
mov
adc
dec
ja
sbb
or
shll
stos
push
lock
test
ss
mov
mov
dec
stos
xchg
jp
leave
icebp
ss
fwait
imul
lds
imul
in
xchg
inc
or
cmp
pop
scas
add
sub
pop
sahf
pop
test
fcmove
sub
adc
mov
pushf
cltd
lret
xchg
push
test
enter
inc
pop
push
cmpsl
jbe
ja
mov
cs
fcomps
loope
or
pop
fdivp
outsb
int3
mov
std
xor
xor
stos
test
gs
adc
xchg
sub
sahf
testb
jns
inc
ret
add
pop
sub
sub
cmpb
sbb
stos
fbstp
icebp
mov
pop
and
mov
inc
out
adc
sub
lods
bound
adc
fidivrs
sub
and
sti
dec
repz
cltd
mov
push
fldl
push
fstl
scas
push
call
repz
xchg
or
and
push
std
sahf
mov
iret
and
sti
mov
dec
data16
enter
push
enter
ja
sub
dec
sbb
pushf
jae
je
pop
mov
insb
bound
aad
push
mov
aaa
xlat
cli
mov
lods
jnp
cmpsl
pusha
inc
test
inc
cmp
in
test
sarl
or
mov
and
xor
jge
push
stos
dec
mov
sahf
test
dec
and
mov
out
sbb
and
sbb
cmp
mov
mov
popa
clc
into
mov
cld
cmp
loopne
push
adc
data16
movsl
icebp
ja
and
and
dec
hlt
aad
mov
mov
test
repz
xchg
inc
mov
push
mov
dec
ret
pop
mov
inc
imul
sar
popf
mov
lcall
out
cmpsb
std
popl
dec
mov
daa
and
mov
data16
daa
and
sub
leave
outsb
dec
sub
pop
iret
sbb
sbb
pushf
dec
push
movsl
xchg
and
pop
or
xor
cmpsl
sbb
mov
jp
int3
xchg
sbb
scas
sub
outsl
jns
cmc
jl
iret
xchg
mov
in
dec
mov
pop
xor
ss
mov
sbb
or
xor
pop
lds
inc
pop
nop
lahf
pop
xchg
loopne
xchg
sub
xchg
push
jmp
xor
hlt
ljmp
mov
mov
ss
imul
xor
xor
test
in
in
lods
add
dec
mov
mov
rorl
std
inc
mov
or
fwait
push
jns
jecxz
divl
std
or
mov
ficoml
and
jne
push
jmp
pop
inc
fsts
imul
pusha
clc
cmpb
mov
popf
sbb
cmp
es
cmc
push
and
cmp
and
add
test
scas
dec
hlt
inc
adc
cld
adc
dec
xor
into
push
push
sub
das
cmp
dec
push
dec
push
xchg
pop
loopne
sahf
sub
add
iret
adc
mov
arpl
arpl
arpl
xchg
push
or
test
pusha
pop
sub
sbb
in
dec
pop
jbe
jmp
ds
and
cmp
movsb
sarb
and
stos
outsb
scas
pop
scas
or
mov
mov
add
ret
xor
xorl
sub
movsl
mov
ret
pop
cmpsb
xchg
pushl
cmp
cmp
hlt
pop
add
fwait
lods
dec
xchg
aad
jae
movsb
fidivs
aad
inc
sbb
mov
pop
cltd
or
adc
xor
out
and
cwtl
pop
or
mov
mov
sub
adc
pop
notl
call
sete
in
mov
imul
cld
and
pop
subl
repz
imul
out
daa
jno
pop
icebp
mov
ja
in
adc
shr
xor
sbb
arpl
add
mov
mov
push
jmp
dec
out
adc
aaa
fwait
sub
mov
imul
pusha
add
cmpsl
cmc
adc
aaa
mov
jb
mov
lret
icebp
xor
sub
rcrb
mov
scas
jg
add
jecxz
scas
int3
popf
mov
fwait
push
or
loopnew
dec
mov
clc
andl
std
lods
add
inc
repnz
cwtl
xor
icebp
mov
neg
in
jmp
sti
push
xchg
test
int3
daa
pop
jg
shlb
mov
pop
add
call
jnp
and
mov
jns
mov
adc
jge
xchg
rcl
adc
sub
mov
fwait
scas
movsb
nop
xor
add
orb
frstor
jbe
xchg
call
aaa
ljmp
sub
pop
gs
push
jmp
sub
xchg
or
aam
je
xchg
xor
cmpsl
cli
rol
mov
push
and
inc
fisttpll
adc
ljmp
adc
mov
sbbl
in
cli
and
shl
pop
xorb
je
sbb
pusha
frndint
dec
mov
mov
popf
jl
lahf
cmp
cmpsl
dec
dec
rclb
mov
rclb
insl
popf
pop
dec
mov
mov
push
cmp
jmp
out
ficomps
push
adc
pushf
xor
inc
cmpsl
cmp
call
and
sbb
jmp
mov
pop
in
or
test
cmp
js
clc
ja
out
lcall
cmc
cmp
mov
mov
cmp
sub
pop
icebp
jno
or
mov
call
aas
ljmp
dec
inc
lcall
pop
nop
pop
or
mov
sbbb
cmp
push
pushf
jmp
movsb
mov
andl
out
mov
add
leave
and
mov
ljmp
xor
sbb
inc
mov
fsts
ljmp
mov
pop
mov
in
add
jae
sub
push
hlt
or
sti
xchg
rcrl
mov
xor
popf
add
das
out
adc
lcall
imul
pusha
mov
sub
jnp
nop
jge
mov
inc
lcall
adc
aam
in
xchg
push
outsb
loope
push
xchg
cltd
mov
icebp
dec
arpl
push
daa
push
jne
cmpsb
push
jmp
stos
mov
push
pop
xor
push
out
fcmovnb
out
sbb
dec
lds
pop
imul
ss
mov
pop
push
jae
movsb
out
hlt
pusha
mov
fadd
test
sbb
or
inc
mov
movsl
mov
dec
repz
jne
push
cs
adc
arpl
jae
notl
cmp
les
pop
aad
dec
out
cmp
xchg
call
shlb
pop
xchg
pop
lcall
jmp
inc
adc
push
int3
je
sub
mov
popf
aaa
popf
testl
out
cmp
stos
pop
repnz
or
stos
jge
fcompl
into
adc
pop
jo
cmp
nop
adc
inc
mov
orb
jmp
lahf
ljmp
xor
andl
cmp
sbb
mov
xchg
jbe
popf
je
addr16
xor
ds
sub
nop
je
lock
mov
cli
xchg
xchg
clc
sub
inc
cmp
jmp
lret
mov
push
and
inc
int3
mov
pop
aam
aad
mov
les
orl
enter
into
aad
jne
mov
aaa
outsb
xchg
test
popa
cmp
pushf
mov
mov
mov
fdivp
mov
xor
adc
inc
fs
imul
cli
andb
sbb
dec
lcall
fucomip
mov
aaa
and
outsb
mov
stos
hlt
and
es
adc
dec
jle
jl
fwait
or
jns
in
stos
or
adc
dec
popa
dec
movsl
mov
leave
nop
fcoms
pop
imul
lret
sub
out
or
push
daa
dec
cmc
xor
push
push
jae
clc
insb
mov
adc
mov
pop
adc
test
mov
inc
std
dec
pop
pop
mov
clc
repz
add
lods
push
jb
movd
ja
push
test
mov
pop
xchg
call
sbb
and
jg
xchg
jne
mov
fsubr
jle
shll
fldenv
into
xor
lahf
lea
xchg
mov
fwait
or
add
mov
push
out
jo
push
sub
into
sub
mov
stos
rclb
das
jo
nop
jge
shll
mov
push
mov
icebp
mov
push
push
xlat
outsl
shl
jo
sub
push
mov
jmp
into
jmp
mov
outsl
jge
mov
or
mov
jle
sbb
mov
insb
dec
ja
dec
imul
insl
dec
push
pop
or
imul
mov
loop
xchg
pop
ds
xchg
mov
xor
push
mov
cmpb
or
test
gs
fsubrs
jo
sbb
loope
dec
imul
cmp
outsb
dec
cmp
or
mulb
mov
push
pop
inc
mov
int
stos
insl
in
mov
sbb
xor
and
push
pop
bound
lods
aas
rol
out
outsb
clc
cmp
mov
adc
jbe
jns
mov
jnp
fiaddl
mov
int
arpl
mov
imul
loopne
int
pop
repnz
rolb
add
fildl
xchg
inc
xchg
sub
sbb
push
movsl
lds
sbb
dec
push
ret
or
icebp
lcall
lods
jbe
mov
movsl
cmp
sub
cmp
pop
cmp
dec
add
shl
imul
outsb
clc
dec
jl
dec
repz
jo
in
into
pop
ja
sarl
shll
aas
lretw
adc
and
and
pop
or
pusha
lea
lock
mov
xchg
pushf
dec
sbb
lods
xor
sahf
and
fsubrl
push
mov
mov
leave
test
das
xor
xchg
jbe
lods
mov
sti
and
push
add
movsb
les
push
push
lock
aaa
pop
fsubs
popa
clc
push
imul
imul
mov
sub
ffreep
or
movsb
stc
cmpsl
ds
lock
outsb
xor
hlt
mov
pop
cltd
pop
mov
inc
mov
jle
xchg
test
mov
ljmp
ret
into
movsb
mov
adc
inc
arpl
faddl
mov
and
or
inc
cmp
inc
out
inc
sub
mov
push
cmp
xchg
shrl
idiv
jmp
sti
inc
pop
call
adcl
push
leave
flds
inc
adc
test
cli
mov
push
lahf
daa
in
mov
sub
cmp
fwait
push
pmaxub
adc
popf
out
cwtl
push
fdivl
hlt
jle
aad
cwtl
mov
push
and
mov
pop
mov
enter
xchg
aad
mov
in
loope
mov
repz
clc
leave
and
cmp
and
adc
aad
data16
cmpb
mov
push
mov
popf
jge
jne
cld
mov
into
mov
inc
pop
xchg
and
aaa
push
bound
jb
jae
les
push
push
add
pop
fdivl
sarl
push
jge
mov
dec
and
jae
jae
adc
push
xor
sub
push
popa
push
in
adc
fistpll
js
jg
test
add
jns
jmp
mov
cmpsb
jns
dec
ss
stc
in
fcmovne
mov
mov
test
or
daa
ss
sbb
fistl
xchg
aad
inc
mov
jae
xor
sbb
adc
daa
stc
pop
inc
dec
pop
je
push
sub
jno
mov
fbld
cmc
mov
pop
adc
stos
mov
lahf
imul
das
xlat
xchg
jno
jg
adcb
sbb
repz
cmp
inc
mov
jl
pusha
push
mov
pop
jl
out
lds
sahf
arpl
lret
jge
push
mov
mov
xor
ljmp
pop
dec
shrl
dec
fisttpll
fs
aas
loope
rcrb
aad
jnp
lret
jge
mov
in
jle
sbb
xor
out
in
or
cs
insb
outsb
mov
hlt
pop
cmp
lahf
and
ljmp
ljmp
inc
sbb
push
fwait
aaa
nop
mov
mov
jl
sbb
andl
xchg
mov
lds
ss
add
aam
and
xor
sub
cmp
arpl
mov
sbb
sarb
test
jmp
movsl
adc
cmpsb
or
out
adc
pop
xchg
dec
into
dec
stos
inc
pusha
outsb
rcl
rorb
dec
rorb
jge
stos
pop
ds
scas
insb
pop
out
fcomps
inc
jbe
test
mov
dec
jg
pop
repz
add
dec
cmp
ds
out
sub
pop
cmp
xchg
dec
enter
iret
pop
movl
dec
pop
push
sbb
jge
inc
sahf
cmpsl
jge
cltd
xor
sahf
int
dec
push
mov
jg
xchg
mov
mov
nop
push
cmp
push
mov
out
insb
jmp
push
jae
lahf
inc
sbb
notl
das
aam
out
cld
cld
pop
addr16
and
loope
fwait
sbb
adc
sub
or
aas
and
out
scas
inc
dec
or
fs
xchg
mov
int3
inc
aad
mov
dec
mov
jmp
loop
test
sbb
cwtl
cmp
jbe
add
cmp
jecxz
pop
adc
mov
pop
add
or
mov
lods
mov
sub
and
mov
adc
push
cmp
lret
hlt
shll
mov
dec
mov
inc
fisubrl
lds
and
push
xchg
insl
aam
fnsave
cltd
and
lret
add
lock
test
pop
rcrb
filds
es
test
push
iret
push
lret
jmp
cmpsb
popa
popa
fdivrl
xor
rclb
sbb
test
xchg
addr16
jne
sarb
push
es
dec
dec
xchg
call
pusha
mov
lahf
and
cmp
push
dec
xchg
in
pop
cmc
mov
jo
mov
jecxz
int3
push
ss
mov
mov
sti
stc
sub
push
or
adc
mov
xchg
ja
aam
inc
iret
data16
lock
push
xchg
in
xchg
popa
dec
mov
mov
fnstsw
xor
jge
push
mov
fdivrs
xchg
adc
lahf
sbb
cmp
addr16
out
rcll
push
mov
jno
shl
sbb
pop
rcrb
pusha
xorb
and
add
clc
or
inc
fcoms
sub
fisubrl
add
fs
cmp
add
jmp
and
repnz
dec
cmp
das
push
fdiv
cmovle
adc
jmp
push
sarb
arpl
out
inc
ljmp
inc
push
inc
fnsave
or
mov
dec
jge
xchg
pop
iret
out
iret
je
sti
sub
bound
xor
mov
mov
push
or
scas
les
lea
jo
pop
test
add
dec
mov
xchg
in
daa
jbe
mov
adc
fcoms
mov
push
popf
mov
stc
or
loopne
into
lcall
push
mov
sarb
std
jmp
push
cltd
push
out
or
add
sub
mov
adc
ds
pop
xor
pushl
extrq
lods
push
add
or
xchg
lds
cmp
mov
les
out
stos
arpl
outsl
adc
sbb
or
flds
test
ret
mov
fs
mov
jg
add
jne
adc
xchg
repnz
mov
mov
fbstp
leave
mov
xor
jmp
sbb
mov
icebp
sbb
jns
jnp
sub
out
inc
push
repnz
sub
jecxz
gs
mov
or
mov
fwait
insl
test
aaa
data16
inc
in
push
jmp
and
lahf
and
leave
aam
sbb
jb
mov
fdivl
nop
sub
push
movsl
cmp
adc
push
cltd
popf
subl
lods
das
outsb
pusha
pusha
lock
mov
jg
pop
aas
push
incl
hlt
mov
mov
imul
cmp
lcall
adc
and
pop
sahf
sub
sub
dec
and
xchg
push
test
mov
xor
aam
out
out
test
lret
arpl
mov
in
adc
repz
mov
test
test
xchg
adc
std
sbb
jne
lods
stos
test
dec
cmp
rcrb
test
sub
popf
loopne
outsl
sbbl
jae
pusha
add
jo
enter
mov
lret
sbb
adc
inc
lods
cs
sub
inc
mov
cli
es
push
xor
pop
daa
jne
or
add
stos
cmpl
or
repz
and
adc
fdivrl
xor
lret
ja
shrb
jnp
and
in
test
int3
push
fnsave
pop
pop
scas
jecxz
out
dec
mov
mov
aaa
addb
int3
lret
or
jnp
cld
fs
push
aad
xor
mov
push
movsl
int3
xor
aas
sahf
lea
push
lds
mov
fstpt
fisttpl
jmp
cltd
in
test
fisttpll
add
pop
cmp
jo
cmp
ret
call
or
fnsave
ret
ja
xor
js
test
mov
mov
inc
jg
mov
shrl
shrb
cmp
push
idiv
sahf
stos
fbld
orb
adc
call
xchg
cmc
outsl
push
in
pusha
or
aas
push
jb
bound
imul
outsl
sar
aam
nop
pop
pop
aaa
stos
adc
sbb
push
mov
push
xchg
jle
jne
ja
jnp
lods
jbe
aam
jne
and
lahf
les
pop
jo
and
cmp
leave
imul
out
es
jmp
aaa
inc
and
clc
ds
iret
cmp
sub
pop
test
ljmp
jge
clc
scas
in
leave
icebp
sbb
lods
test
int
cmpsl
cmp
inc
fcoms
mov
add
fs
js
pusha
das
into
mov
sbb
inc
jg
mov
xchg
into
push
cs
insb
cmp
into
jno
cltd
imul
pop
jnp
xor
sbb
inc
js
pop
lcall
in
push
lock
fldl
into
daa
jmp
pop
sub
add
mov
lret
fdivrl
mov
cmp
pop
inc
out
movsb
mov
adc
inc
sub
push
int
addb
mov
lret
mov
sub
bound
push
sarb
mov
sub
mov
test
fisubs
aad
orb
movsb
mov
add
popa
lods
stos
out
pusha
jae
xlat
and
and
jnp
sub
sbb
xlat
mov
ret
mov
arpl
mov
push
dec
dec
fisubl
and
popa
mov
xchg
clc
stos
inc
sub
pop
rcrb
out
fisubl
lds
dec
jge
fs
pop
rclb
mov
call
mov
daa
test
mov
mov
sub
jmp
jb
push
xor
xchg
inc
mov
dec
sbb
jecxz
jmp
imul
sub
pop
cs
cmc
test
mulb
mov
lods
adc
mov
mov
mov
sbb
inc
divb
sub
jbe
les
mov
in
pop
xchg
inc
stos
movsb
pop
and
shlb
lcall
outsl
mov
aam
rcll
filds
subl
sbb
js
adc
fsubrs
sbb
daa
push
mov
loopne
mov
mov
pop
popf
push
mov
xor
mov
sub
cmp
add
add
or
push
mov
push
sub
adcl
shll
sbb
int3
in
sub
dec
cli
scas
ja
clc
or
cmp
pop
pop
sahf
push
test
pop
fbstp
add
inc
jle
or
cs
mov
in
mov
pop
push
imul
lret
sub
int3
dec
jg
sub
insb
push
fidivrl
sub
scas
jno
int3
mov
inc
push
mov
and
sub
cmp
push
add
notb
push
mov
out
scas
cld
push
xorb
push
push
shrl
ret
xor
add
add
jge
sti
cmpsl
sbb
filds
xchg
mov
sbb
jns
cmp
mov
xchg
leave
or
mov
jo
push
push
pop
mov
jbe
cli
cmpsl
mov
ret
pop
mov
add
xchg
outsl
inc
test
imul
daa
nop
push
jecxz
dec
cmp
mov
pop
cmpsl
sub
and
movsb
repz
jg
cs
ljmp
lods
cmp
pop
and
xchg
sbb
decb
aad
inc
inc
movsl
mov
fsubl
dec
push
cmc
dec
aam
mov
mov
lret
insb
pushf
mov
mov
int3
lret
lods
out
push
xlat
push
mov
ret
or
mov
fdivs
cs
imul
mov
shll
adc
and
mov
pop
loopne
aas
push
jg
mov
std
in
jbe
mov
lahf
shlb
adc
punpckhbw
push
dec
out
ja
inc
test
mov
dec
addl
xchg
lods
negl
xchg
cs
add
mov
loopne
add
shr
flds
data16
xor
test
aas
and
popa
orb
sbbl
arpl
test
and
push
popa
mov
cmp
add
in
adc
or
notb
xor
lret
sub
jnp
pop
fcomps
push
into
bound
jp
and
push
cmp
sahf
pop
addr16
pop
andl
shlb
push
mov
fmull
mov
jle
inc
aas
in
aaa
mov
dec
cmc
and
aam
cmp
cmp
andl
ja
push
xor
mov
nop
idiv
fidivrl
jecxz
rcrl
jns
mov
out
cmpl
push
mov
add
loope
enter
mov
xor
and
cmp
pop
nop
daa
nop
adc
sbb
fsub
mov
inc
imul
mov
loopne
enter
mov
decb
insb
dec
sbb
enterw
outsb
sub
sub
cli
arpl
mov
adc
pop
lds
hlt
mov
call
xchg
les
mov
push
mov
in
jae
pop
in
inc
lret
add
call
repnz
push
cmpsl
lds
outsl
inc
loopne
daa
lea
mov
aam
mov
leave
test
inc
insb
ret
pop
lahf
inc
divb
and
pop
popf
mov
xchg
dec
cmp
push
or
inc
into
outsb
orb
mov
js
in
jnp,pt
ret
lcall
fnstsw
cmp
push
xlat
outsb
mov
mov
ds
mov
lea
mov
sbb
mov
loop
lock
jecxz
cmp
pop
shl
xor
mov
imul
call
scas
mov
pop
xor
jbe
or
fldcw
imul
xor
out
sbb
inc
xchg
push
mov
pop
lods
iret
ja
xchg
mov
stos
inc
fcoms
fwait
cmpsl
lods
rol
mov
aaa
mov
pop
xchg
adc
aad
inc
xor
pushf
gs
cltd
cwtl
sub
mov
xor
mov
sbb
ret
les
aam
js
mov
cwtl
dec
repz
mov
mov
push
data16
cmp
out
daa
outsl
mov
push
movsl
fs
data16
cmpsb
dec
sbb
jne
xchg
sub
hlt
add
or
testl
pop
xor
testb
or
jmp
push
ret
jno
in
outsl
dec
mov
add
and
fnstcw
divl
nop
sahf
test
pushf
cmpsb
dec
inc
and
fxch
push
shr
rcrb
and
arpl
cmp
push
test
dec
adc
lret
jp
and
add
clc
sbb
daa
jnp
bound
scas
fwait
push
or
mov
cmpsb
stc
je
dec
call
push
movsb
mov
xchg
mov
add
lret
push
imul
push
or
pop
mov
fiadds
cltd
and
push
mov
ss
push
push
dec
scas
loopne
mov
xchg
jne
jnp
jp
jmp
rcll
xor
notb
mov
fisttpl
fstpt
aad
andnps
es
cmp
adc
pop
ret
orl
jb
ljmp
mov
ret
jno
and
je
jae
leave
mov
jecxz
dec
xlat
mov
dec
ficoml
mov
enter
sbb
int3
aaa
push
push
movsb
xchg
push
rcll
ja
mov
cmpsb
lock
sbb
inc
sahf
adc
lock
sarb
sbb
movsb
pop
mov
push
mov
shll
stc
loope
mov
sbb
shll
loope
mov
lock
shrl
rorb
mov
xor
inc
mov
push
test
leave
xlat
adc
icebp
mov
push
and
popf
clc
adc
repz
mov
dec
sbb
popf
enter
push
std
inc
xchg
and
pushl
into
push
js
mov
cmp
fdivp
xchg
push
jb
sarl
pop
mov
flds
fs
das
jne
add
xor
cmp
and
jae
insb
add
stos
mov
cmp
lcall
pop
xchg
adc
push
lret
mov
push
push
mov
aad
out
iret
mov
popa
rcrb
push
je
andb
enter
ds
inc
popa
cmpl
dec
dec
out
imul
or
scas
lock
xchg
xchg
into
addl
sub
stos
jae
mov
lds
insb
je
and
mov
push
mov
xchg
outsb
ret
pushf
popa
mov
pop
stos
sbb
jl
mov
adc
push
pop
xor
xchg
xchg
repnz
dec
mov
movsb
call
in
push
jae
test
inc
mov
clc
add
xor
xchg
sub
aaa
out
push
xor
or
iret
xor
flds
lret
icebp
pop
sti
ret
dec
ss
pop
cmpsb
cmc
cmp
jo
ret
je
orb
cmp
cld
push
adc
or
pop
dec
loope
xchg
pop
aaa
shll
cld
lods
popf
scas
fstpl
std
mov
adc
test
mov
pop
sbb
adc
jle
jp
cmpsl
imul
divl
mov
andb
add
add
lret
subl
cwtl
into
enter
shr
inc
jecxz
cmp
in
mov
fcoml
pop
lcall
dec
pop
cmp
into
mulb
xchg
ret
out
cmp
into
data16
add
sbb
in
decl
cmpb
les
inc
fnstenv
loop
shr
das
rorl
cmp
xchg
mov
leave
sub
mov
rcrb
or
popa
jl
mov
lds
leave
aad
jge
lahf
sbbb
xlat
stos
js
inc
stos
int3
dec
dec
cld
add
mov
stc
mov
into
mov
daa
mov
fimuls
jmp
or
fdivs
aaa
testl
push
adc
xor
xorb
imul
or
push
mov
aam
xor
xchg
movsl
pop
ret
sub
add
xor
shrl
pop
sbb
sbb
inc
xor
or
test
dec
dec
dec
js
int
xor
pop
cltd
popf
jo
hlt
sbbb
push
xchg
ds
add
jge
mov
fwait
or
add
out
adc
into
popa
and
arpl
ljmp
ss
inc
sub
iret
movl
mov
lods
push
jno
fwait
int
xchg
inc
mov
xor
push
push
adc
std
pop
dec
sbb
outsb
ja
sbb
mov
fiaddl
adc
xchg
mov
cmp
incb
xchg
pop
icebp
das
xchg
fisttpl
jnp
xor
jecxz
push
jo
add
ficoml
mov
fldenv
rcrl
push
jg
cwtl
cmpsl
movsl
mov
push
pop
or
cmp
cmp
ljmp
mov
adc
or
and
call
mov
test
cmp
and
mov
mov
and
rcrl
cmp
jle
enter
les
dec
push
push
and
test
add
xor
jb
jmp
es
push
fdivl
or
lcall
lcall
pop
mov
fimuls
pop
jle
inc
pusha
dec
jnp
out
nop
mov
daa
or
aas
mov
mov
in
pop
adc
loop
dec
aaa
loop
add
dec
mov
sbb
and
das
pop
pop
rcrl
push
add
cwtl
mov
pop
cltd
mov
repnz
pop
pop
imul
jp
and
mov
testb
repnz
or
xlat
cmp
push
mov
cmc
jo
mov
fstpt
sbb
push
or
mov
push
sbb
mov
xor
scas
arpl
scas
xor
push
and
test
cmp
mov
jmp
out
les
ljmp
push
stc
jno
or
popf
mov
mov
out
rclb
popf
imul
push
hlt
pop
push
lds
xor
dec
xchg
imul
push
push
mov
jle
push
insl
in
xchg
xchg
inc
out
mov
pop
adc
sub
dec
int
xchg
cmp
insl
jno
fbstp
in
xchg
inc
cmp
test
or
push
out
xchg
cmp
sbb
and
sub
cmp
daa
sub
or
inc
shlb
adc
loope
data16
jbe
dec
xor
jmp
notl
es
or
in
jg
stc
pop
pusha
add
inc
ss
push
lret
stos
or
and
or
dec
nop
rcrl
cltd
lcall
out
xchg
mov
dec
and
or
dec
push
cltd
mov
ljmp
cld
push
add
xor
adc
push
and
pusha
xchg
dec
inc
pop
cltd
test
xor
sbb
sbb
ret
scas
mov
cmpsb
adc
mov
movsl
mov
subb
xbegin
stc
jo
repnz
gs
add
rclb
cmp
jae
ljmp
les
jmp
inc
in
and
inc
add
sub
mov
xor
fidivrs
mov
mov
dec
pushf
outsl
sub
lret
rcl
hlt
adc
mov
pop
aas
mov
jne
das
out
push
or
clc
mov
push
mov
mov
jne
mov
mov
jnp
and
mov
mov
pop
or
outsb
repz
aad
test
lods
dec
mov
mov
xchg
sub
sbb
sub
sbb
adc
jns
std
scas
popf
inc
push
mov
cmpb
xor
fs
sub
shlb
in
dec
cmpsb
mov
fisubrl
adc
or
loop
jns
mov
test
dec
inc
pushf
jmp
sahf
in
leave
mov
or
out
push
in
loopne
fsubr
mov
ret
icebp
insb
ja
or
les
and
std
push
pop
out
mov
mov
mov
and
scas
xchg
sub
arpl
rcrl
mov
lock
mov
popa
lret
push
mov
xchg
loopne
pop
pusha
outsb
sbb
lea
cmp
mov
inc
jmp
loopne
scas
cmc
mov
test
out
jnp
aas
inc
cmp
cmp
subl
mov
pop
fwait
es
mov
mov
imul
jl
add
jno
xchg
add
mov
mov
call
and
dec
rorb
cwtl
push
sti
cmpl
mov
cmpsl
add
lock
jo
and
xchg
xor
imul
in
dec
sarb
shrb
lods
repz
push
cli
mov
pop
xchg
jle
mov
fdivl
mov
adc
or
icebp
xor
xchg
hlt
mov
popa
inc
idivl
data16
add
lcall
or
xchg
sti
jl
adc
lods
sti
xor
sub
sbb
popa
dec
adc
fs
adc
and
and
subb
es
sbb
inc
fstps
lret
hlt
adc
gs
ja
xchg
dec
arpl
inc
and
lods
lods
ljmp
pushf
xor
jae
dec
movsl
mov
inc
mov
dec
in
push
jg
push
fs
rcrl
pop
mov
lret
not
cmp
jecxz
in
aas
mov
xchg
pop
mov
dec
mov
repz
and
adc
push
jg
pop
push
lods
mov
orl
sbb
imul
cmpsb
jo
xlat
pop
and
inc
xor
bound
addr16
lahf
ret
out
out
test
xor
std
add
pusha
mov
cmpsl
leave
int
and
pop
and
je
jnp
xchg
add
mov
xchg
std
stos
bound
xor
rclb
push
xchg
push
lock
adc
pop
pop
js
mov
andb
ja
lock
pop
ret
ja
pop
repnz
xchg
ss
fcomip
mov
call
jne
inc
dec
cmp
dec
lahf
push
repz
pop
pop
es
inc
jnp
push
outsl
stos
pop
stos
mov
sub
aad
pop
and
dec
and
push
test
aas
mov
add
adc
pop
andb
test
mov
sub
push
lock
cmc
mov
sub
jecxz
dec
mov
shl
pop
cmp
cmp
inc
pusha
jmp
add
inc
inc
leave
je
mov
mov
mov
sbb
bound
out
push
cmc
jl
sahf
cmp
inc
cld
in
jbe
loop
das
fdivs
mov
xchg
in
or
mov
and
adc
ret
sub
in
pop
add
imulb
cmp
jnp
cmp
sub
roll
shr
addb
add
xorb
aas
adc
mov
cmp
das
lock
cld
pop
push
sub
pop
test
mov
and
cmp
mov
or
das
pusha
mov
inc
mov
fcompl
pop
cli
es
mov
cwtl
xor
cmc
or
scas
sub
jecxz
ret
imul
dec
neg
ret
jp
cmp
rep
out
out
add
das
lret
adc
out
lret
in
xchg
sbb
and
fs
adc
mov
pop
aaa
jle
aam
notl
push
int
pop
pop
sub
icebp
mov
hlt
fs
je
test
mov
adcb
shlb
negl
cwtl
out
mov
fiaddl
cmp
fisubrl
sbb
les
mov
divl
pop
outsb
add
mov
fmulp
fsubrl
je
add
cmpsl
popa
xchg
jne
movsl
orb
fsubr
frstor
xor
sbb
jae
jns
das
arpl
cmc
addl
xchg
repz
hlt
je
dec
das
push
cli
jbe
pop
repnz
add
sbb
pop
ljmp
mov
int
dec
outsb
adc
jo
mov
jne
imul
popf
lock
repz
mov
loop
rorl
mov
int3
call
hlt
lds
and
mov
xchg
stos
dec
sbb
and
adc
pop
mov
js
jmp
push
sub
push
xor
push
mov
and
or
nop
out
or
clc
shlb
cltd
pop
jnp
adc
jne
popa
leave
and
xchg
and
add
adc
cmp
decl
loope
bound
or
mov
imul
sub
arpl
insl
adc
hlt
pop
std
addr16
sbb
mov
or
loope
jne
adc
in
ret
inc
repz
mov
loope
outsl
mov
js
dec
mov
pop
mov
orl
mov
jne
pop
xor
mov
adc
movsb
inc
ljmp
into
adc
fcmovne
out
pushf
sub
xor
in
imul
mov
jl
out
pop
das
or
daa
or
jp
imul
jl
dec
dec
sub
cmovle
mov
sahf
mov
cld
inc
sbb
mov
or
and
stc
mov
mov
xor
lcall
sti
enter
int
adc
fcoms
idivl
pop
dec
mov
inc
cli
mov
push
popa
xor
cmp
cmp
mov
cmp
sbb
pusha
xor
mov
insb
imulb
mov
cmp
ja
insl
xchg
rorb
adc
jae
arpl
cmp
lods
js
add
mov
sti
jecxz
sub
inc
rcl
mov
or
cs
xchg
ljmp
incl
jbe
cmp
cmpsl
aad
xchg
dec
xchg
jae
aas
in
in
loop
dec
pop
leave
cmpl
add
in
out
fwait
ja
cmpb
mov
mov
ds
jl
test
cmp
adc
fwait
sarb
push
popa
xchg
mov
arpl
sbb
es
mov
icebp
jecxz,pn
push
pop
and
and
and
into
and
leave
hlt
pop
cmp
in
mov
push
lods
mov
jp
mov
mov
or
fidivs
jmp
nop
daa
or
mov
lret
pop
mov
mov
push
pop
out
dec
xchg
js
cmp
scas
pop
std
mov
int3
out
xor
lcall
imul
out
imul
mov
cmpsb
sbb
jmp
insb
test
push
cmc
lea
test
cmp
push
dec
les
mov
mov
ret
in
push
push
bound
and
and
push
out
push
xchg
and
test
add
iret
stos
pusha
movsl
lds
cmp
mov
andb
mov
movsl
jb
add
cmp
jae
mov
sub
in
dec
push
lret
outsl
ss
rorl
xchg
stc
push
decl
cs
loopne
or
adc
mov
dec
ds
out
fisttps
push
adc
mov
or
insb
fisubrl
mov
scas
js
out
mov
or
cmp
roll
hlt
xchg
fcomi
lret
ss
in
and
in
jecxz
leave
ret
mov
xchg
and
sahf
repnz
sbbb
lods
push
rcrl
rorb
adc
xchg
inc
subl
dec
sbb
cmp
call
pop
cld
inc
add
mov
stc
sub
mov
ds
imul
xorb
pop
mov
lock
fnstenv
mov
getsec
xchg
mov
jge
jae
sub
pop
pop
cmp
ds
dec
in
das
xchg
add
shlb
mov
jns
lret
mov
aas
rclb
pop
and
ret
mov
in
xchg
jmp
or
pop
and
adc
dec
push
mov
aam
gs
xchg
push
xchg
incl
sti
out
xor
lods
push
add
int3
xor
fbld
mov
out
roll
xchg
cltd
into
and
jmp
jecxz
nop
or
cltd
xor
pop
stos
sub
gs
shlb
lcall
scas
out
fwait
inc
cld
or
cmp
mov
cld
jg
mov
pop
enter
idivb
cmpsl
mov
dec
jo
imul
mov
gs
push
mov
cmp
xor
fstl
push
out
out
cld
xor
xchg
mov
aaa
aas
push
mov
xor
mov
repz
jmp
negl
dec
xchg
stos
loop
xchg
fisubl
cmc
xchg
pop
rcr
dec
pusha
or
push
dec
stos
orb
or
aas
and
xor
aam
sub
es
add
adc
test
aas
jae
mov
xorl
test
push
sahf
in
outsl
xchg
push
xchg
add
mov
or
adc
movsl
xchg
jnp
inc
stos
dec
call
fists
mov
hlt
push
fsub
pop
adc
mov
jno
out
inc
in
rcll
add
and
ret
mov
hlt
insb
ret
ss
pop
rcr
sub
and
loopne
sub
ljmp
push
push
pop
mov
fnstenv
mov
mov
call
add
inc
fsubp
les
sub
rcrl
adc
mov
std
roll
lcall
lcall
call
pop
fmulp
stos
adc
cmp
shrb
inc
mov
call
xor
mov
gs
dec
fsubrp
dec
stc
pop
fidivrs
out
test
inc
and
scas
ljmp
jg
imul
das
lea
mov
or
mov
lock
adc
test
xchg
xchg
push
adc
testb
lret
xchg
pushf
frstpm(287
cmpsl
push
cmc
or
jl
data16
inc
out
add
scas
rol
dec
inc
dec
jnp
lods
lret
aad
push
int
dec
jnp
popa
jns
xchg
iret
inc
addl
xchg
sbbb
add
and
inc
mov
lock
cmpsl
push
daa
push
lock
stos
inc
or
enter
or
and
es
ljmp
push
lods
sahf
and
test
lcall
or
mov
fisttpll
pop
jae
adcb
pop
inc
loope
mov
pop
xlat
pop
out
pop
cmp
stos
out
add
push
test
gs
fwait
mov
dec
jg
jp
int3
pop
pop
popf
bnd
pop
dec
pop
leave
nopl
mov
popa
fsubr
scas
pop
push
dec
jno
pop
sahf
fildl
jl
jbe
popf
xor
ss
pop
mov
outsl
orl
popf
enter
in
test
fwait
sub
add
cli
mov
pop
je
pop
cmpsb
sbb
push
or
inc
fidivrs
push
jne
inc
roll
or
into
mov
xchg
imul
sahf
sbb
es
repz
push
pop
sub
lret
sub
idiv
test
mov
mov
bound
iret
roll
sub
in
ljmp
ja
xchg
mov
lret
imul
icebp
test
sbb
mov
inc
lahf
jecxz
daa
push
subl
into
push
push
int
int
or
aam
adc
fadd
adc
or
sbb
iret
pop
jnp
push
je
dec
push
sub
aaa
dec
push
fstpt
pop
daa
dec
sahf
and
push
nop
lock
subb
cmc
testb
mov
and
inc
dec
jo
sub
cmp
mov
mov
push
decb
jmp
movsb
test
dec
mov
dec
and
jl
int
cmp
or
lahf
and
int3
jle
dec
cwtl
cmpsb
mov
rcr
les
push
mov
ret
mov
nop
jle
sahf
outsb
in
lahf
sbb
xchg
lret
in
mov
sbb
shlb
push
mov
fimuls
lds
xor
and
nop
sahf
clc
add
jp
daa
rcll
mov
mov
xchg
jo
dec
subb
mov
or
sbb
jg
in
cld
fisubl
mov
imul
icebp
enter
and
add
frstor
popf
std
sar
adc
std
sbbl
or
daa
iret
test
pop
pop
sbb
pusha
dec
jg
xor
imull
int
dec
in
outsb
lds
mov
sbb
add
cmp
fadds
mulb
and
addb
ja
nop
lock
jo
ss
add
sub
int3
mov
minps
mov
mov
lret
add
arpl
mov
push
jle
fdivrs
xchg
cmp
cli
loop
add
pop
mov
add
or
push
pusha
mov
fsubr
es
xor
lock
lahf
decb
sbb
inc
cmp
add
ret
and
cmc
xchg
scas
inc
shl
pop
movsb
in
int
mov
fidivl
and
test
ret
sub
lds
pop
adc
mov
mov
cmp
out
out
xchg
sbb
sbb
lcall
das
xor
xchg
fisubrs
push
test
fdivs
xchg
repz
or
scas
inc
mov
test
cltd
xchg
adc
sbb
mov
test
insb
add
xchg
pop
mov
mov
insb
xchg
mov
andl
jg
lock
sbb
mov
repnz
jecxz
repz
push
popa
cmp
sub
pop
movsb
iret
push
mov
cmp
xor
push
xor
mov
sbbl
xchg
xor
jno
fnstenv
dec
jecxz
mov
inc
fisubl
sub
mov
sub
idivl
pop
pop
ret
in
inc
or
cmpsb
sbb
or
adc
in
lret
bound
pop
pop
adc
das
mov
push
in
popl
mov
jl
adc
and
inc
out
das
mov
jmp
and
add
adcl
mov
test
cmp
lods
sub
sub
je
aas
aas
sahf
jno
nop
xor
repnz
fcompl
xchg
cmp
pop
aaa
mov
and
movsb
test
inc
jnp
mov
mov
push
mov
mov
mov
pop
or
cmp
sti
jbe
clc
lods
xchg
sub
fstpl
popa
repnz
inc
cmpsb
sbb
push
dec
loopne
adc
cmp
push
lods
filds
dec
jecxz
add
negl
fisttps
int3
and
arpl
aam
inc
popf
movsb
cmc
jg
rcl
inc
out
daa
mov
cltd
and
inc
cltd
cmp
inc
fisttpl
loope
mov
ret
lahf
xor
fldl2t
cwtl
inc
and
cmp
pop
in
ss
mov
adc
int3
cld
sbb
xor
xor
inc
push
andb
xor
mov
mov
fbstp
xor
pop
dec
cmp
pop
xlat
xor
lock
jno
pusha
push
loope
inc
pop
insb
filds
push
ljmp
jb
call
fisubl
rcrb
xchg
mov
pop
xchg
inc
mov
mov
mov
cmp
data16
xchg
sbb
dec
add
cmp
fs
push
or
cmp
xlat
mov
in
popa
out
out
mov
pushf
jae
cwtl
inc
in
cmp
xchg
push
out
mov
sbb
nop
test
test
arpl
test
dec
test
pop
mov
xchg
dec
adcb
cmp
movsl
pop
mov
popa
sub
loop
adc
aaa
test
or
pop
andb
addr16
std
or
sub
fildll
stos
sub
push
mov
adc
adc
lds
jo
mull
jno
jl
lock
clc
mov
or
test
rcr
outsl
push
xor
mov
mov
aad
roll
in
and
adcb
jmp
cltd
xlat
outsb
sub
movsb
xchg
adc
push
icebp
cmp
mov
loop
mov
mov
les
popaw
add
xor
and
movb
dec
xchg
daa
shr
pop
jb
jmp
jns
pusha
test
pop
stos
xor
sub
dec
adc
jns
xchg
das
inc
popf
pop
mov
popf
in
jb
inc
ret
jnp
push
jmp
or
push
jnp
test
mov
out
mov
imulb
or
xor
daa
lcall
pop
xor
jne
or
flds
push
test
sbb
or
push
imul
push
mov
scas
fsubrl
inc
cmp
daa
pop
pop
out
pop
ret
pop
inc
jle
insl
add
mov
mov
call
repz
stos
inc
push
or
jno
and
js
and
mov
inc
sbbl
dec
add
dec
sbb
xchg
cmp
pop
and
in
inc
pop
pop
dec
xor
das
int3
ficoms
fwait
pop
xchg
sbb
rcrb
lock
adc
cmpsl
aas
cwtl
push
sub
pusha
sub
xchg
mov
adc
inc
stos
sbb
mov
jo
mov
lahf
xor
ret
adc
pop
in
stos
loopne
inc
fcmove
add
xor
pop
lea
and
orps
dec
add
add
xchg
outsb
sbb
mov
pop
push
inc
inc
shlb
incb
decb
cwtl
sub
in
lock
inc
and
xchg
enter
mov
int
sbb
pop
adc
sub
incl
xchg
movsl
mov
inc
data16
sbb
fmuls
repnz
jle
jmp
pushf
pop
mov
test
mov
pop
cmp
sub
mov
adc
or
out
inc
sbb
fnstsw
rolb
out
xchg
adc
inc
mulb
push
xor
jecxz
or
push
ljmp
jno
pop
cld
shrl
sahf
xchg
insl
inc
push
icebp
shrb
cmp
out
std
cld
push
call
xchg
add
lds
mov
and
push
xchg
jmp
loop
insl
mov
add
es
stos
inc
add
mov
mov
enter
je
pop
push
mov
insb
inc
popa
sub
dec
nop
mov
aad
jecxz
rcrb
cmpsl
popa
and
add
lods
add
or
xor
cltd
push
xchg
fcmovbe
stos
sbb
mov
imul
pop
loope
add
out
mov
pop
push
out
adcl
jge
pop
or
mov
add
pop
jecxz
ret
in
cmpl
adc
jo
ja
loope
cmp
into
xchg
push
je
iret
icebp
sbb
lods
mov
push
jp
shlb
add
mov
movsb
cmp
push
mov
pop
dec
ret
fnsave
jmp
pop
xchg
jns
and
add
fdivrl
cmp
xor
cs
xchg
in
nop
addl
verw
fadds
cltd
sub
dec
and
leave
jecxz
add
dec
popa
shll
pop
out
jg
hlt
sbb
and
repz
and
leave
in
push
sahf
les
addl
push
fs
je
xchg
xchg
sub
mov
xor
test
cmp
push
cmpsb
mov
daa
jo
mov
sbb
insl
xchg
push
cld
in
stos
inc
jl
push
dec
xor
xchg
in
cs
ja
or
call
jns
mov
std
push
push
lahf
data16
adc
js
jne
dec
jecxz
cwtl
add
mov
sub
pop
mov
js
in
jbe
cmp
cs
xor
adcb
sub
out
cmc
or
cmp
fildll
lahf
lods
aaa
inc
cmpsb
sbb
fldl
push
inc
fsubrl
and
adc
shlb
push
ds
cmp
movsl
inc
arpl
mov
lods
shrb
ss
push
push
jbe
lds
movsb
dec
les
mov
ret
pop
sub
dec
xchg
scas
dec
loopne
stc
or
dec
mov
cmpsb
lret
nop
mov
push
push
loope
mov
insb
sub
dec
jge
jp
adc
shlb
inc
stos
cwtl
xor
cmp
mov
popa
xor
xor
xchg
adc
mov
out
mov
stos
dec
cmp
lahf
lods
sbb
xor
movb
cwtl
roll
shrb
dec
jmp
mov
mov
cld
in
mov
pop
pop
jae
jl
into
inc
test
jmp
push
leave
and
cli
adc
inc
std
adc
dec
pop
inc
push
test
pop
xchg
and
add
std
adc
xlat
sbb
insl
nop
jg
sub
int3
jg
out
shl
lock
scas
sub
cmp
xchg
jno,pn
addr16
push
mov
mov
pop
stc
mov
imul
mov
and
jg
sub
push
dec
sbb
outsb
shrl
jno
loopne
lds
in
arpl
xchg
mov
push
popl
xlat
int
or
push
insl
dec
fcomip
adc
xchg
and
dec
les
insl
ret
xchg
xor
xor
push
mov
sbb
push
stos
std
clc
or
sub
out
fwait
inc
xchg
sbb
or
cli
jg
mov
fbstp
add
jb
push
add
roll
stos
xchg
pop
jae
xchg
fsubs
std
and
ficoml
mov
jb
stos
mov
movsl
repnz
mov
pushf
mov
sub
imul
test
sbb
jg
aaa
std
jl
fistps
push
out
xchg
lcall
pop
lret
in
mov
fistps
rol
shr
add
subl
xchg
test
cmc
fnstenv
ret
jle
mov
add
and
jne
sub
inc
sub
jbe
lret
xchg
and
popa
push
pusha
sbb
imul
mov
and
mov
stos
adc
adc
mov
mov
ljmp
imul
leave
inc
fbstp
out
imul
cli
mov
sub
aas
lea
call
in
test
js
pop
xor
int3
int3
inc
mov
pop
int3
lret
or
xchg
mov
push
sub
push
fwait
add
outsb
mov
sub
push
pop
adc
cltd
jb
inc
jo
mov
dec
arpl
pop
xchg
mov
lock
arpl
les
int3
mov
mov
icebp
mov
call
roll
mov
repnz
sub
bound
push
jo
adc
inc
es
cmpsb
stos
push
lods
ljmp
pushf
repz
gs
xchg
fucomip
sahf
add
lods
ds
add
cmpsl
ds
dec
add
lds
sbb
fstpt
cli
jne
aaa
movhps
movsl
or
mov
xchg
jnp
popf
and
inc
mov
pop
cltd
lcall
addr16
cmp
jmp
mov
movsb
adc
repz
insl
loopne
rorl
sbb
jb
loope
sub
lods
sbb
movsl
stc
paddw
ss
adc
sbb
pop
jge
push
push
or
test
rorl
mov
fwait
inc
add
test
mov
ljmp
cld
dec
mov
es
in
mov
cmp
add
in
adc
xor
sbb
and
cs
and
test
mov
andb
std
xchg
mov
mov
jne
and
sbb
call
fistps
cmc
in
stos
push
popa
xor
mov
and
repnz
mov
xchg
scas
js
mov
sub
push
inc
push
xchg
das
pop
or
jecxz
adc
pop
imul
sbb
rclb
fistpl
lret
jl
enter
jl
add
and
aam
push
and
xchg
xchg
sub
push
arpl
add
je
adc
lds
push
movsl
xor
push
aad
pop
ss
pop
mov
out
scas
jl
adc
mov
fbld
mov
lea
xor
xor
adc
clc
in
cmp
gs
pop
add
icebp
adc
nop
cmpb
data16
pop
add
and
lds
mov
mov
adc
mov
repz
sub
movsl
retw
test
js
sbb
call
push
push
ja
shll
or
push
outsb
adc
inc
testb
loope
imull
je
cmp
push
mov
mov
pop
and
aam
mov
fldz
mov
sbb
in
aaa
loopne
dec
divb
cmp
mov
or
cmp
in
bound
mov
push
lahf
sub
push
fldcw
mov
xchg
lods
add
jbe
inc
movsb
repnz
adc
xor
or
jnp
aas
pushf
dec
movsl
sub
adc
movsb
sub
vpunpckhqdq
loopne
aaa
ja
outsl
sub
add
or
shlb
add
cltd
test
xor
insb
leave
adc
mov
int3
stos
sti
aaa
cmp
fiadds
add
dec
in
in
xchg
xor
and
sub
xchg
stc
or
xchg
popa
cmpl
fcompl
mov
leave
adc
pop
outsl
mov
stos
jmp
aaa
fwait
pop
adc
pusha
popf
data16
popf
gs
popf
push
cmp
jmp
push
test
pop
sbb
jmp
xor
in
mov
mov
jmp
xchg
dec
ds
cmp
sti
test
es
arpl
sbb
loopne
daa
outsb
sub
push
jecxz
push
sub
dec
inc
icebp
test
inc
cmp
subb
jge
movsb
mov
testb
sub
mov
imulb
cmp
pop
das
das
cltd
lods
adcl
dec
in
cmc
pop
data16
pop
mov
dec
push
push
call
mov
ljmp
xlat
xor
push
xchg
cld
sbb
scas
test
in
std
sub
mov
in
mov
icebp
sub
cmpb
dec
jecxz
push
sbb
cmp
and
in
or
sbb
outsb
lds
jg
shr
dec
sarl
iret
adc
inc
loop
push
add
iret
push
push
mov
rolb
movsb
inc
push
jnp
or
aas
sar
jle
outsl
adc
dec
int3
sbb
out
out
xchg
cmp
pop
sub
lock
push
jge
and
inc
xchg
add
test
andb
add
test
pop
mov
push
cmp
adc
fxch
int
jo
iret
movsl
pop
bound
push
orl
enter
pop
jecxz
adc
push
dec
sub
adc
repz
adc
push
aad
ljmp
adc
out
push
xor
jg
mov
ss
jmp
mov
int3
jecxz
mov
push
in
add
loopne
out
fadds
adc
inc
sub
dec
mov
nop
shrb
cld
xchg
cld
dec
and
js
lods
mov
or
adc
es
ficoms
andl
jge
jnp
xchg
xor
loopne
mov
mov
adc
fisttpl
push
sbb
loop
inc
je
in
in
lock
in
dec
and
loope
adc
sub
adc
mov
cmp
xchg
shrl
xlat
outsb
popa
cmp
in
cld
pop
xor
xor
pop
xor
push
cld
mov
push
add
lea
push
jp
mov
jp
iret
xor
xchg
int3
fs
es
loopne
sbb
ret
cmpsb
push
enter
sbb
fildl
push
add
jae
mov
cmp
jmp
jp
inc
cmpb
stc
or
add
addr16
pushf
xchg
pop
inc
mov
out
mov
test
xlat
and
mov
mov
mov
aas
adc
rol
cmpsb
ret
sub
bswap
mov
out
cli
add
lahf
xor
dec
push
mov
movl
dec
loope
pusha
adc
into
add
into
pop
add
xor
fwait
mov
mov
fimuls
pop
call
and
lahf
pop
pop
es
pop
push
mov
lock
mov
push
mov
xchg
ret
ljmp
mov
xrelease
jo
push
jle
xor
andl
lock
jmp
xchg
jg
push
fbld
jp
sbb
push
mov
xchg
dec
sub
mov
sahf
outsl
add
sbb
pop
xchg
adc
repnz
mov
xchg
mov
adc
cmp
in
ret
fildll
pop
add
mov
icebp
inc
sub
iret
aad
ficoml
insl
push
jno
mov
fists
jmp
ds
insl
aas
aad
jle
pushf
outsl
ret
jnp
decb
fmul
pop
inc
ffree
sub
push
orb
mov
dec
push
rcr
jg
scas
mov
outsl
movsb
into
jno
jnp
xchg
or
lahf
repz
lahf
into
popf
jb
mov
xchg
lcall
cmp
mov
xchg
stc
cmp
jg
xchg
mov
adc
add
fisttpl
pop
sbbb
repz
sbb
and
insb
sti
sbb
cmpsl
ret
ljmp
xor
mov
mov
leavew
push
mov
inc
mov
outsl
mov
mov
ja
sbb
test
fmuls
jecxz
pop
int
xor
fimuls
sub
pop
sub
pop
cltd
jne
inc
jle
test
jle
xchg
mov
jmp
and
leave
mov
scas
aaa
adc
push
loopne
sti
xchg
leave
les
push
insl
mov
ds
ret
or
xor
jne
imulb
ret
adc
je
aad
xorl
push
sub
faddl
and
rcr
int
push
mov
xor
repz
pushf
loopne
sbb
jle
mov
sbb
dec
les
dec
mov
push
jl
mov
inc
mov
xor
fimuls
pop
ss
mov
fwait
test
dec
pop
xchg
lret
idivl
add
push
jle
adc
jle
mov
or
xor
pop
mov
sti
mov
lahf
mov
pop
andb
pushf
outsb
add
jmp
adc
stos
add
out
lret
push
sti
push
xchg
jb
enter
pop
outsb
mov
cmp
imul
jmp
xchg
inc
das
cmp
inc
inc
inc
stos
repz
pushf
shrl
lods
inc
fstpt
call
mov
pop
mov
popa
lds
leave
fstp
jo
inc
adc
test
rcr
movsl
xor
fistps
inc
icebp
jmp
and
test
ss
jmp
test
addr16
xor
jle
cmpsl
mov
loopne
loop
ret
add
push
fadd
insl
filds
jmp
xor
pop
cs
mov
fisubrs
xchg
fistps
ret
fildll
fs
enter
popa
inc
lret
and
mov
inc
jg
inc
lea
mov
addr16
imul
dec
das
es
imul
xor
pop
out
loope
push
jns
pop
insl
std
pop
mov
xchg
cmp
loope
nop
or
outsl
cmp
lods
xchg
pop
das
loopne
jge
pop
adc
loopne
repnz
call
into
cld
adc
xor
add
packsswb
setle
xlat
es
jg
pop
mov
clc
nop
cld
fsubrp
ss
lcall
cmp
cmpsl
mov
fiaddl
outsl
stos
inc
loopne
int3
sub
lods
dec
repz
aad
adc
and
in
int3
mov
xchg
call
mov
and
ret
push
xchg
fcoms
xsave
clc
lds
mov
stos
fs
xor
cld
nop
je
sub
inc
mov
cld
cmpsl
js
jae
pushf
fwait
ds
icebp
adc
aad
mov
outsl
jg
xlat
aad
ret
inc
stos
loopne
shl
lret
mov
mov
dec
xor
faddl
jmp
pusha
inc
jmp
xchg
cmpsb
adc
jmp
dec
and
or
mov
daa
add
ds
sahf
scas
ret
mov
pop
fmull
sub
test
sub
sbb
jno
mov
dec
jbe
adc
shr
fwait
repnz
pop
pop
adc
dec
fcoms
cmp
outsl
repz
sub
popf
mov
imul
repnz
sub
dec
pop
push
dec
lods
andl
or
imul
xchg
sti
cwtl
cwtl
jnp
and
push
inc
jns
popf
jnp
push
dec
leave
lods
popf
inc
test
sub
cmpsl
adc
call
or
adc
int3
xchg
aaa
sahf
push
lods
aas
in
jg
pusha
mov
cmpsl
xchg
pop
sti
jo
sub
sub
push
xchg
inc
push
add
aaa
sub
dec
push
push
insl
mov
out
daa
ret
ret
jae
mov
adc
scas
mov
xchg
push
push
add
or
clc
leave
add
in
pop
add
mov
fdivrl
fisubrs
repnz
out
mov
ljmp
jnp
pop
or
jnp
or
dec
mov
rclb
and
add
hlt
jae
mov
inc
cmpsb
call
inc
into
cmp
cmp
adc
stos
testl
shlb
imul
push
js
mov
aad
dec
push
pop
push
sti
outsb
insb
dec
orb
jmp
mov
pop
lret
loop
cmpsl
lds
sahf
outsb
sub
arpl
sbb
andl
jp
inc
stos
mov
rcll
test
out
or
inc
sub
cmpsb
xor
stc
inc
data16
inc
clc
lret
cmpb
push
mov
mov
inc
enter
loop
popf
stc
int3
cmp
add
mull
push
xchg
daa
add
out
cmp
jl
mov
scas
imul
jmp
and
xchg
lcall
popa
jmp
xchg
ror
xor
push
out
fbld
xlat
mov
hlt
adc
pop
inc
adc
lock
int3
xor
lea
movsb
and
scas
mull
pusha
xlat
mov
cmpsl
cmp
loopne
mov
push
fisttpll
iret
jno
outsl
mov
nop/reserved
in
push
xchg
sbb
push
adc
loopne
push
addr16
rcrl
in
adc
xorb
cli
dec
std
inc
lcall
clc
jge
push
fwait
sub
bound
push
ret
rcl
jo
pop
out
outsl
arpl
jg
shl
movsb
pop
pop
pop
fiadds
and
xor
dec
stos
jbe
jge
jbe,pn
push
nop
rclb
aas
mov
mov
shl
in
pop
cmp
push
dec
sbb
js
movsl
xchg
punpcklbw
xchg
lods
adc
xchg
outsb
rorl
mov
in
lcall
xchg
mov
dec
repz
and
and
xchg
add
ss
mov
pop
in
cltd
inc
pop
mov
imulb
xlat
lret
imul
sub
fmull
and
repnz
add
movsl
xor
lds
jns
repnz
das
icebp
mov
dec
lret
es
cmp
movsl
mov
int
sbb
loope
loopne
cld
add
jecxz
dec
mov
dec
adc
sbb
xchg
sbb
test
or
adc
pop
sbb
mov
push
mov
cli
dec
les
enter
jae
in
inc
ds
pop
es
movsl
xchg
int3
fbstp
xor
iret
adc
in
mov
mov
sahf
lods
dec
leave
loope
cmp
push
cli
dec
pop
push
cmp
xchg
into
mov
rorb
mov
out
jle
mov
jb
push
in
push
icebp
mov
xchg
push
movsb
and
aas
and
pusha
clc
cmp
cmp
lret
das
lock
push
or
enter
pop
or
jns
dec
bound
pop
push
fwait
xchg
sub
or
loopne
sub
jp
fs
xor
jecxz
push
sbb
or
cwtl
int3
fwait
cmc
mov
jl
mov
mov
arpl
fldl
idiv
sub
ret
pop
lods
ljmp
bound
xchg
jle
repz
lock
out
imul
out
pusha
jecxz
cmp
adc
jne
mov
sbb
xchg
mov
mov
push
mov
movsb
inc
popa
call
inc
push
sbb
sti
enter
dec
cmpl
out
setbe
jp
enter
mulb
and
sbb
add
shrl
adc
je
icebp
mov
adc
adc
inc
fisubrs
or
imul
xchg
adc
or
jle
push
outsb
sub
xor
jns
xor
add
mov
pop
inc
dec
xor
jmp
icebp
mov
int
xor
inc
outsb
mov
mov
stos
sbb
jp
mov
sbb
xor
inc
fdivrl
push
xor
sub
dec
mov
outsl
cmc
sub
in
cmp
xchg
dec
in
out
mov
insl
loopne
pop
mov
jnp
push
and
mov
xchg
jno
sahf
and
pop
or
xchg
inc
push
aad
sarl
sbb
push
mov
inc
xchg
fdivr
mov
pop
sbb
pop
or
mov
movsb
sbb
dec
push
inc
inc
lcall
push
iret
dec
pop
sub
sar
dec
out
pop
dec
test
cmp
pop
lcall
lds
loope
mov
jp
and
add
push
jb
or
mov
push
inc
arpl
cmpsl
scas
inc
adc
push
fisubs
ror
les
xor
inc
out
inc
cmp
setno
xor
rorl
cwtl
xchg
jno
dec
test
imul
xchg
loope
int3
sar
imul
push
sub
dec
mov
in
lods
ljmp
ret
out
jle
cmpsl
cli
add
notl
mov
inc
fistpl
mov
push
stc
dec
or
stc
cld
or
pop
cmp
adc
xor
and
jg
loope
in
sbb
push
add
testb
or
mov
and
inc
pop
inc
fmull
repnz
in
cmp
and
add
mov
vpackssdw
cli
or
adc
adc
push
xor
xlat
orl
fsubrl
push
arpl
adc
add
mov
adc
push
mov
mov
mov
stos
mov
movsb
iret
mov
loop
xchg
fdivrp
push
push
dec
cmpsb
pop
adc
out
xor
sub
notl
repz
sub
push
or
xchg
stc
push
mov
mov
jmp
mov
insb
popa
mov
cmc
adc
testb
sbb
pop
sti
fisubl
xor
idivl
sti
roll
xor
xchg
in
loop
xor
orb
mov
fcoml
leave
push
or
stos
in
and
add
add
mov
fsubrs
shll
shr
iret
mov
subl
cmp
sbb
adc
cmp
push
jecxz
jnp
ss
inc
cli
xor
sub
push
mov
nop
shrl
push
lret
xor
test
adc
imul
mov
testl
inc
movsl
push
into
push
cwtl
lahf
pop
adc
loop
or
xor
add
test
pop
ja
mov
pop
test
addb
mov
sbbl
cmpsb
in
fdivs
and
dec
xor
jg
push
jmp
sti
lods
or
push
sbb
dec
jle
dec
lahf
iret
jmp
jno,pn
xlat
fsubl
or
in
stos
lcall
xor
test
ret
sbbl
mov
inc
mov
mov
jmp
jg
mov
insb
add
cmp
and
subl
sub
cli
faddl
mov
xor
stos
xor
lcall
fwait
popf
out
mov
mov
jge
jmp
out
dec
repnz
sub
loope
cmp
push
leave
jmp
mov
inc
test
test
push
je
jo
stos
stos
clc
mov
leave
jecxz
add
in
mov
lcall
and
or
cltd
and
mov
sub
inc
scas
mov
shrb
inc
icebp
mov
les
lahf
cs
xchg
js
dec
pop
cmc
fcoml
push
cmp
or
fiaddl
ss
push
lods
mov
popa
gs
adc
repnz
bound
xor
mov
roll
lea
into
jno
out
out
cmpsl
sbb
push
lods
popf
addr16
mov
ret
pop
sbb
mov
mov
aad
sbb
dec
lods
cmpsb
push
pop
push
pop
sahf
fnstcw
mov
mov
fsubrl
mov
xchg
sarl
into
popa
fmulp
or
xor
adc
dec
loope
dec
outsl
xor
pop
mov
fimuls
stc
push
jmp
lock
adc
xor
fwait
jmp
imul
cmp
pop
std
jbe
cld
out
out
or
sub
inc
data16
cs
cwtl
jge
or
adc
mov
xchg
addr16
xor
sahf
and
mov
js
popf
cmpsb
pushf
sbb
test
fimuls
cltd
xchg
stc
sbb
cmpsb
xchg
mov
cmp
shl
movsl
mov
push
xchg
cs
sub
cmp
sahf
jns
push
les
in
inc
mov
mov
mov
inc
shlb
fidivs
fidivl
mov
jnp
stc
je
cmpsb
cmp
add
fdiv
sbb
add
shll
gs
pop
out
test
adcb
push
inc
mov
jae
mov
sarl
cmp
push
sbb
mov
push
pop
loopne
pop
pop
xor
imul
mov
leave
stos
sti
jae
and
pop
fstps
pop
loop
pop
push
and
adc
jmp
dec
fcoms
mov
fcmovb
daa
add
push
stc
xchg
pop
push
out
sti
xchg
nop
outsb
jne
fbstp
sbb
mov
pop
js
pop
jmp
shrl
lahf
pop
scas
inc
dec
mov
test
mov
dec
scas
mov
in
push
xor
cmc
loope
mov
lahf
ss
jo
sub
jno
inc
sub
cli
cmp
xchg
mov
shl
xor
inc
cltd
pop
pop
loopne
out
sahf
xchg
xchg
pop
out
jecxz
leave
aam
dec
push
fdivs
rcrl
xor
gs
mov
dec
aam
mov
push
xchg
dec
inc
or
imul
mov
xchg
inc
int3
cltd
lcall
data16
xor
dec
mov
lcall
lock
mov
addr16
test
movl
mov
xor
inc
stos
jne
icebp
enter
xchg
movsl
aas
dec
out
mov
repnz
in
into
mov
inc
fidivrl
aaa
ficoms
in
add
js
mov
mov
andb
clc
xchg
push
or
jb
dec
jne
jae
lea
xchg
das
fsubrp
add
mov
jnp
mov
test
rcr
pop
jg
fldcw
iret
push
xor
mov
jge
fists
mov
out
incl
mov
mov
mov
and
out
add
dec
xchg
call
dec
push
inc
inc
leave
int3
arpl
ljmp
inc
or
push
mov
or
mov
loop
xchg
mov
fchs
scas
xor
inc
cmpsb
mov
xchg
jne
adc
adc
sbb
or
jne
jb
cld
cmp
sub
push
mov
mov
adc
inc
jno
cld
xor
data16
jbe
add
or
cmp
fld
ds
pop
in
movsl
ljmp
cmp
fwait
push
jge
movntps
adc
and
push
xchg
add
inc
ss
cmp
nop
cmpsl
aaa
ret
cli
pop
add
xlat
mov
pop
stos
jge
mov
pop
stos
dec
mov
push
fists
dec
mov
cld
jns
shrl
dec
daa
sti
push
add
pop
fucomip
ret
dec
mov
fbstp
sub
imul
pop
icebp
ds
js
push
mov
add
jno
push
mov
xor
lock
fwait
push
js
mov
xor
hlt
push
popf
cmp
call
push
mov
sbb
xchg
aas
jg
push
mov
or
stc
mov
fidivl
xchg
test
cmpb
lret
and
or
cmp
fwait
test
rcrb
mov
inc
jno
mov
adc
sbb
jne
nop
sbb
sbb
ss
inc
push
sbb
in
dec
add
xchg
xchg
decl
xchg
add
aas
adc
sub
in
lods
in
mov
sub
dec
mov
lods
ret
or
jp
arpl
cli
pop
ret
and
into
and
or
sub
clc
or
jmp
or
cmp
xchg
dec
cmpsl
out
shlb
mov
add
movsl
in
xor
pop
enter
jno
mov
pop
rcrl
lret
mov
adc
testb
cmp
push
mov
sub
adc
jne
test
and
mov
fnstenv
sub
mov
sub
jbe
inc
popa
add
mov
push
fcoml
imul
cmp
push
test
shll
jecxz
data16
std
adc
mov
xchg
inc
cmp
and
outsl
aam
pushf
arpl
pusha
ret
int
and
sub
test
je
test
cmc
mov
xchg
gs
mov
call
xchg
into
fs
fmull
xchg
push
call
fwait
and
out
jae
adc
shll
pusha
rorl
sar
loope
jle
das
pop
out
pusha
jae
push
jns
mov
mov
push
mov
push
xor
inc
int
push
cmp
mov
stc
nop
lock
push
jbe
lds
repnz
repnz
jbe
add
adc
icebp
inc
stc
int3
pop
sbb
cmpsb
jecxz
pop
mov
stc
jp
sbb
jle
adc
popa
ret
hlt
inc
push
fwait
xchg
and
test
fiaddl
mov
sbb
adc
cld
bound
in
lods
popf
dec
xlat
outsb
cmp
sub
shrl
popf
sbb
inc
or
insb
in
pop
adc
inc
mov
mov
sbb
es
rcrl
je
inc
cmc
or
push
push
scas
mov
xor
in
test
iret
jno
pop
inc
fistl
jp
lock
les
and
mov
imul
in
imul
or
cwtl
rcr
jb
cmp
in
stc
shll
mov
pop
decb
dec
mov
add
jl
scas
bound
test
rcrl
outsl
test
int3
cmp
mov
dec
cmp
movsl
icebp
insb
scas
aas
push
pop
mov
xchg
mov
fildll
lods
push
cmp
out
cld
xchg
and
imul
push
sahf
clc
adc
adc
fcoml
mov
stc
push
add
cmp
mov
notb
mov
cmp
push
xlat
outsb
xchg
dec
rcrb
cmp
xchg
sub
jo
xor
inc
mov
fmull
rcll
scas
push
or
mov
pop
xor
push
and
push
lcall
in
ret
adc
mov
and
popa
in
jl
cld
mov
inc
mov
pop
cmpsb
fistl
add
aam
mov
cmc
sub
loop
add
inc
jb
ds
test
das
jge
pop
fidivrs
call
dec
pop
and
lea
jno
scas
jne
subb
mul
sub
pop
add
jne
cmc
pop
test
cmp
out
push
insl
out
sti
inc
fsubrp
pusha
out
inc
pop
and
gs
mov
ret
leave
pop
cmpsl
adc
xor
pop
leave
pusha
jns
gs
repz
inc
push
or
cmp
mov
jne
stos
das
add
jno
in
sbb
jecxz
or
ret
sbb
adc
mov
dec
repnz
pop
ljmp
xchg
ja
fdivrs
loop
mov
add
push
mov
push
mov
data16
ljmp
jno
jge
cmp
fs
fadds
xchg
mov
push
loop
test
adcb
inc
mov
into
shrl
sarl
shl
pop
mov
jnp
addr16
out
loope
cmp
xor
sub
adc
xor
in
decb
xor
add
notb
sub
push
mov
xor
mov
pop
rolb
daa
shrb
jecxz
inc
dec
mov
cmp
add
xorb
xchg
push
clc
cmp
jmp
mov
jge
imul
and
cs
js
inc
insb
inc
je
adc
push
roll
out
dec
sbb
test
jmp
dec
sbb
jge
mov
iret
adc
inc
inc
scas
das
aas
loope
notrack
push
inc
outsl
mov
push
jmp
enter
rcrl
mov
scas
mov
hlt
push
cmpsb
es
shlb
push
out
in
xchg
push
and
and
pop
adc
sub
mov
or
push
out
add
mov
jnp
ljmp
addr16
xchg
inc
lret
and
and
jns
xlat
cmp
fsubl
ja
mov
push
adc
sbb
jmp
std
push
adc
cmpsb
mov
push
inc
clc
imul
push
pop
dec
dec
fdiv
cmp
fs
cmp
cmp
mov
jb
fs
push
sub
sti
hlt
push
mov
out
inc
int3
pusha
inc
les
push
jae
inc
add
add
movsl
push
mov
mov
int
sarl
sbb
pop
repnz
jmp
pop
mov
imulb
mov
mov
pop
test
pop
and
xchg
jns
testb
xchg
adc
out
adc
xchg
cmp
mov
outsb
add
or
jl
xchg
outsb
push
rcrl
movsl
push
fnstcw
shlb
vmovapd
xor
rol
push
adc
adc
movsw
xor
outsl
insb
sbb
mov
and
iret
push
lcall
in
stos
inc
pop
inc
pop
inc
test
mov
fcom
psubusb
sub
xor
and
jo
negl
ret
add
insl
inc
sbb
mov
push
sbb
inc
addr16
ret
dec
dec
icebp
sbb
ret
pop
es
mov
dec
loope
jns
push
nop
and
mov
fwait
int3
rclb
xlat
xor
xchg
test
xchg
jl
dec
ficoms
call
push
ss
sub
scas
pop
loopne
sbb
and
xor
lea
adc
push
dec
and
cmpb
inc
cmp
mov
pop
pop
je
sub
cltd
outsb
sbb
test
mov
xor
adcb
popa
lods
pop
mov
xchg
mov
in
lods
mov
aad
ja
fnstcw
leave
push
cmp
movsb
scas
outsl
data16
jle
ud1
add
in
dec
push
jb
ret
xchg
loop
shrl
dec
outsl
push
jne
jne
movsb
pop
fdivs
repnz
stc
jecxz
les
cwtl
xchg
xor
adc
out
mov
add
xchg
pop
fcoms
cmc
fwait
popf
daa
mov
jne
and
cmp
imul
inc
xor
or
lahf
add
stos
pushf
jnp
add
mov
add
insl
mov
xchg
fiadds
idivl
mov
inc
std
jmp
and
jl
push
jne
popf
mov
es
pop
out
and
addb
aad
ret
and
sahf
outsl
pause
popf
xchg
sbb
xchg
lret
jns
xchg
jle
or
adc
jno
mov
push
lcall
je
notb
xchg
scas
mov
xchg
cmp
cmp
xchg
sub
sub
movaps
mov
xchg
jge
inc
sub
call
push
mov
std
jae
fadd
xchg
sbb
dec
scas
sahf
inc
dec
gs
mov
dec
js
mov
cld
mov
xchg
sub
mov
cmpsb
rcrl
dec
dec
lods
fisttpl
xchg
mov
xchg
xchg
lods
dec
mov
mov
rcrl
rorb
mov
fcmovb
jecxz
je
shrb
hlt
mov
mov
sahf
add
ds
notb
loope
aas
mov
pop
cmp
adc
xchg
push
orb
mov
arpl
sub
inc
and
fsubrl
pop
aaa
pop
mov
mov
fs
jae
aas
fsubr
push
push
pop
lea
sbb
add
sbb
dec
scas
mov
mov
fldt
into
push
std
loop
shll
lods
aas
movsb
inc
stos
cwtl
xorb
xchg
cmpsl
ret
hlt
cmpl
mov
cmp
add
or
mov
dec
js
dec
cmpsb
shrl
fisttps
mov
xor
out
mov
add
add
popa
rcrl
es
rclb
pop
push
push
adc
and
loope
cmp
jo
repz
push
shl
jle
mov
lcall
cwtl
lods
out
pop
pavgb
add
cld
mov
fwait
test
inc
pop
ficomps
test
and
insb
movsb
sub
mov
fldl2t
arpl
dec
loopne
lods
lahf
jb
sub
pop
cmpsb
cltd
repnz
and
adc
add
fiaddl
sub
lods
and
pop
out
dec
int3
repz
dec
hlt
mov
in
ds
nop
fidivrl
outsl
lret
std
inc
lods
das
and
stos
jp
adcb
mov
mulb
add
movsb
in
mov
aas
and
jge
xor
rol
push
insl
cli
pushf
sbb
aad
push
jo,pt
lahf
push
enter
xor
mov
mov
mov
push
fistps
or
outsb
into
fnsave
scas
sbb
sub
jno
cmp
inc
jne,pn
stos
into
xor
lret
adc
cwtl
push
pusha
stos
cltd
insb
aad
dec
stos
push
stos
and
push
ret
outsb
fstps
inc
mov
add
mov
clc
into
pop
fstpt
cmp
lcall
inc
gs
testb
add
mov
push
ret
imul
mov
lock
inc
daa
inc
roll
es
push
xchg
pop
imul
cwtl
shl
cmp
adc
int3
adc
sbb
ret
mov
jnp
aas
pop
lock
add
test
jp
test
lret
mov
xchg
cwtl
and
lahf
dec
jecxz
xlat
xchg
mov
mov
adc
push
rolb
mov
fistps
js
std
cmp
xor
jg
inc
push
ljmp
pusha
pop
ret
xor
outsl
jmp
out
loope
fildll
mov
lods
dec
and
push
insb
push
loopne
cmp
ret
or
imul
sbb
dec
mov
adc
adc
mov
xchg
xchg
add
inc
cmp
outsl
jnp
mov
test
adc
repnz
aaa
gs
cmc
jns
cmp
and
sarb
loop
dec
xchg
insb
ret
jnp
pusha
or
in
bndstx
mov
imul
adc
dec
push
insb
push
mov
js
sub
jne
scas
stos
ficoml
movsl
test
rclb
clc
mov
data16
nop
cmp
pop
sub
jge
and
mov
lahf
push
xchg
add
mov
fwait
stos
dec
or
push
js
dec
jbe
dec
aad
jnp
in
test
sbbl
mov
test
int3
mov
pop
aaa
sbb
imul
cld
sbb
mov
cwtl
das
insb
jle
mov
sbb
jp
popa
into
mov
je
or
setge
sbb
inc
cmp
filds
loopne
lret
into
aam
hlt
add
push
call
pusha
lds
cmp
int
int
out
insl
lahf
jp
clc
jb
shlb
dec
push
aam
andl
repz
std
pop
aas
repnz
cmp
mov
fwait
sub
mov
cwtl
dec
cwtl
cmpsl
rclb
sub
add
das
dec
sub
popf
cmp
xchg
push
es
sub
adc
mov
mov
testl
xlat
insl
push
cltd
adc
test
fisttpll
lock
in
in
adc
adcl
cmp
outsb
mov
push
xor
jg
ja
aad
pop
test
add
loop
mov
cmpl
into
sbb
dec
mov
inc
sbb
rcl
rcrl
mov
insb
cmp
mov
fsub
aas
loop
or
scas
addr16
sahf
popf
inc
xchg
jmp
pushf
int3
cmpsl
inc
stc
push
in
arpl
pop
testl
and
sbb
pop
fadd
sbb
sub
pop
addr16
dec
add
mov
gs
test
addr16
mov
inc
add
outsb
dec
jecxz
jae
testl
lret
int3
out
mov
cwtl
mov
mov
jo
call
movsl
gs
cmc
fwait
inc
or
js
mov
sub
inc
cmp
push
jno
mov
pop
xchg
iret
in
dec
les
and
insl
jbe
lds
test
idivb
fnstcw
dec
mov
pop
insl
cmp
push
dec
jne
outsb
xlat
call
test
push
push
popf
xor
cmp
dec
repnz
rcr
pop
sub
or
pop
hlt
mov
sahf
dec
out
jae
jp
hlt
roll
mov
inc
rol
inc
loopne
cmp
jns
inc
ror
jbe
mov
and
sbb
cmpsl
fisubs
data16
mov
xchg
mov
test
dec
add
pushf
pusha
mov
jnp
out
jb
pop
mov
xchg
jg
cmp
mov
add
mov
and
xor
cmp
sub
push
adc
cmpsb
fwait
sbb
lret
jno
out
pop
push
jne
jnp
les
sbb
push
mov
sbb
test
out
fmull
pop
mov
mov
cli
mov
and
adc
pop
add
xadd
lock
loope
dec
scas
cmpsl
jno
mov
pop
dec
xor
cmpb
insl
sub
and
pushl
cli
cmp
leave
xor
fwait
push
mov
push
in
adc
add
je
icebp
mov
inc
adc
lods
adc
rol
inc
movlps
loopne
jge
add
pop
mov
shrb
pop
cmc
lahf
negb
cmpsl
adc
xchg
call
fiaddl
pop
and
popf
leave
int3
or
mov
jb
ret
or
lret
push
dec
xor
lods
inc
push
or
jae
pushf
popa
cmpb
repnz
mov
in
cmpl
sbb
rcr
cld
pop
pop
js
mov
jg
sub
fbstp
adc
test
mov
mov
int3
arpl
cmpsl
ljmp
mov
mov
cltd
xchg
jg
les
jbe
adc
je
push
lea
das
out
leave
jbe
pop
in
ljmp
iret
enter
repz
jnp
es
inc
adc
out
or
lret
sub
call
inc
fldt
scas
lods
das
ret
xlat
jmp
add
push
in
cmp
int
push
mov
sub
popa
cs
mov
xor
mov
mov
cltd
je
inc
sub
push
aam
sub
add
sbbb
gs
mov
out
repz
adc
mov
fnsave
or
or
push
std
fisttpl
mov
lock
lods
xor
add
mov
push
and
outsl
dec
movsl
mov
mov
mulb
shll
lock
push
cmpsb
add
cmp
enter
cmp
jle
repnz
sub
jmp
mov
push
add
inc
test
sub
mov
sarl
mov
cmpsl
dec
divb
push
stc
sarb
sub
ret
mov
sbb
dec
sbb
adc
lret
idivl
lock
imul
pusha
xlat
mov
inc
lods
loop
xor
fwait
outsl
aaa
sub
loope
loop
or
leave
sub
stos
mov
sbb
mov
mov
xchg
push
adc
test
mov
add
stc
dec
push
push
lea
frstor
or
push
iret
loope
fcomps
leave
push
pop
lods
sub
inc
repnz
xchg
add
popf
lods
imulb
mov
lds
movb
jl
mov
aad
inc
lahf
jo
add
push
test
mov
inc
sub
inc
dec
ja
nop
push
push
mov
ret
push
fldenv
es
cwtl
adc
dec
fdivrp
out
es
push
loop
fildll
mov
popa
lcall
xor
jp
or
mov
xchg
or
sub
mov
jmp
mov
push
xchg
add
lds
lods
mov
jns
add
or
cmp
and
fisubrl
add
or
inc
fst
and
add
xchg
icebp
adc
add
xorb
sub
mov
jne
insb
xchg
add
xor
jne
fildl
push
shlb
add
popf
xchg
mov
lods
gs
xchg
pop
push
xor
popa
pop
sti
xchg
nop
push
cmp
mov
iret
push
or
push
mov
mov
hlt
mov
jb
jne
dec
cmpsl
sbb
test
xchg
cmp
lds
or
jo
loop
jnp
mov
xchg
mov
inc
cltd
mov
clc
mov
test
jmp
add
or
arpl
xchg
push
bound
leave
pusha
pop
nop
pop
sahf
dec
les
insb
in
adc
lock
fnstsw
mov
test
jno
add
adc
lret
loop
enter
mov
xor
sub
push
inc
iret
mov
jb
lods
and
imul
data16
rclb
pushf
lods
xor
or
fisttpl
sbb
add
scas
setp
movntq
add
jecxz
lret
mov
push
lret
xor
in
sub
xor
pop
cmp
sub
mov
nop
test
mov
sbb
jo
push
movsb
push
xor
into
popa
cmp
mov
stos
mov
cmc
push
push
pop
sub
push
cmp
enter
jmp
push
andb
lods
xchg
cltd
add
dec
loop
roll
jl
push
mov
lds
repnz
cmp
ret
xorb
inc
or
inc
scas
jmp
inc
fstps
ret
andb
mov
test
adc
rol
or
insb
loope
rclb
mov
shl
inc
clc
inc
fisubrl
xor
adc
dec
rorb
sbb
pop
icebp
push
cmp
add
aad
push
jns
imul
popa
mov
xor
dec
push
pop
lret
aas
loopne
sub
cmc
jmp
push
push
pop
je
push
and
ss
push
jmp
and
popf
sub
sahf
dec
add
dec
loop
sbb
xchg
test
cmp
in
movsl
repnz
push
push
push
cmpsl
xchg
ja
js
cmp
xchg
pop
mov
mov
movsb
jne
pusha
xor
imul
pushf
orb
mov
cwtl
test
shlb
out
jae
cmp
nop
ss
xor
icebp
bound
pop
lahf
jae
cmp
xchg
push
mov
mov
cmpsb
scas
enter
shrb
xchg
add
jmp
iret
rcrb
iret
mov
sbb
gs
loop
mov
and
and
lret
cld
or
jo
stc
sbb
or
mov
mov
jb
sti
push
mov
push
and
cmc
inc
divl
std
adc
test
add
cwtl
mov
das
jb
mov
out
inc
fstpt
xchg
lods
mov
scas
adc
jle
ret
cmpsb
cld
push
movsl
dec
mov
test
aad
jp
jg
ljmp
xor
lret
popa
sub
push
xor
call
sbb
xor
ret
sarb
aam
inc
popf
das
test
and
mov
jge
push
rolb
inc
out
push
int3
arpl
ljmp
jno
inc
mov
push
dec
pop
mov
cmp
jp
and
mov
cli
jns
and
int
inc
push
jb
or
lods
sahf
mov
add
adc
idivl
dec
adc
bound
popf
ret
ss
cld
not
sub
notl
pop
or
stc
pop
pop
cmpl
cmc
movsl
sbb
push
mov
inc
inc
push
sarl
gs
loopne
in
and
dec
movsb
test
add
mov
les
ret
gs
or
call
mov
mov
cli
dec
ja
shll
aad
or
repnz
or
xlat
jb
orb
jmp
rcl
nop
lock
stc
or
pushf
mov
sarl
push
shrb
jnp
ret
mov
push
and
or
add
inc
push
mov
push
lcall
push
mov
mov
inc
mov
inc
loopne
mov
je
iret
sbb
int3
xor
inc
jnp
pusha
lock
jne
mov
jnp
mov
push
cmp
mov
repnz
cmp
or
cmpl
adc
out
decb
mov
decb
insb
jl
fs
jp
mov
push
cmpsl
lock
push
cmp
fsubrl
jecxz
test
jecxz
mov
inc
clc
and
out
jle
xor
mov
cmp
dec
and
out
mov
arpl
lahf
pop
incl
jge
mov
adc
mov
sahf
jns
fildll
cltd
jge
mov
pop
or
imul
mov
dec
fs
call
cs
insb
stos
dec
add
pop
fs
ja
mov
jl
xor
aaa
mov
in
xor
cmp
mov
popf
cmp
add
jge
imul
xchg
inc
frstor
lds
ds
pop
mov
shlb
sbb
dec
loopne
jge
adc
std
xchg
mov
cmpsb
lret
xor
es
cmp
push
mov
pop
sbb
inc
pop
cli
cltd
out
sub
ja
outsb
inc
xchg
sub
push
and
inc
das
enter
push
aad
test
pusha
out
rorb
or
xor
add
sub
push
addl
cwtl
call
cmpl
adc
das
pop
push
out
int3
je
push
pop
outsb
clc
push
ja
add
push
cmp
addr16
xchg
daa
orl
aas
mov
int3
lret
jmp
mov
out
ret
mov
stos
out
lods
mov
sub
mov
adc
push
cs
in
mov
mov
jg
push
movsb
ret
pop
sahf
inc
test
lcall
sbb
into
mov
sarb
cltd
fidivrl
inc
sbb
adc
das
pop
xchg
scas
call
mov
and
inc
mov
xlat
mov
push
out
sbb
in
cld
movsb
xchg
jo
repz
nop
ss
fwait
cwtl
test
and
popf
movsl
adc
pusha
rcrb
lret
and
repz
mov
pop
dec
dec
andl
sahf
lods
enter
into
and
xchg
xchg
dec
push
scas
push
movsl
loopne
cltd
or
adc
sub
sbb
sbb
mov
in
icebp
xchg
jnp
cwtl
xchg
inc
test
and
add
frstor
jnp
push
ss
adc
xor
xchg
out
test
aad
jno
outsl
or
and
in
push
jne
ja
aad
call
and
ret
cwtl
xchg
mov
test
or
test
in
aaa
test
dec
jg
mov
into
xor
lds
push
addb
fs
and
xor
xor
pushf
pop
mov
adc
mov
xlat
xchg
add
mov
mov
sub
and
sbb
jbe
xchg
data16
inc
mov
jmp
andl
into
dec
gs
faddl
adc
jmp
movsl
push
sbb
lcall
pop
pusha
stos
dec
cmp
push
and
inc
lret
std
inc
fsubl
push
call
push
movl
dec
fldenv
fs
es
sub
repz
and
dec
adc
leave
mov
mov
cmp
pop
adc
jl
nop
mov
fdiv
ja
decl
mov
pop
jne
pop
les
loope
arpl
ljmp
nop
cmc
push
jno
call
lock
sub
imul
jne
pop
lods
adc
movsl
into
into
fnstenv
jl
fwait
insb
lods
testl
cmp
jecxz
js
insl
mov
icebp
adc
scas
hlt
mov
sbb
pop
inc
adc
movsb
test
adc
fsubl
sbb
pop
sbb
sub
cmpb
sub
rcrl
icebp
and
cmp
mov
sbb
xor
push
call
push
adc
inc
aaa
and
cmp
inc
fmuls
pop
mov
stos
cmpsl
fsubr
fmul
sub
mov
dec
loope
xchg
scas
and
inc
push
dec
in
ret
clc
lods
jl
xlat
jmp
popf
ds
cmpsb
push
mov
fdivrl
enter
out
js
pop
sahf
iret
adc
adc
mov
push
std
jo
inc
push
xor
mov
test
or
sub
test
lret
std
mov
xorl
icebp
inc
add
xor
add
stc
sub
mov
fldt
rcll
sbb
jne
mov
test
stc
out
push
fucomip
sahf
lods
or
into
gs
clc
xchg
lock
das
ja
movsl
and
pop
je
or
orb
call
or
push
adcl
repz
test
inc
push
jmp
and
sub
insb
push
ficomps
add
sub
push
loop
dec
cmpsl
sub
mov
lea
mov
fldenv
int3
xor
imul
cli
xor
scas
jno
add
cld
test
mov
xchg
jp
hlt
adc
test
icebp
das
xor
das
sarb
dec
in
shrb
xchg
dec
imul
mov
popa
xchg
adc
xor
mov
in
cmpsl
fs
xlat
cld
inc
hlt
mov
les
std
mov
test
test
andb
mov
and
pop
xlat
cwtl
mov
inc
fldenv
ret
pop
sti
mov
cmp
dec
mov
and
fs
inc
dec
clc
and
mov
jle
js
mov
mov
js
pop
sbbl
xchg
sbb
in
je
add
test
fwait
and
mov
and
movsb
dec
je
sti
xchg
jmp
stos
mov
rcrb
aas
push
or
mov
test
div
movsl
pop
adc
sub
jns
iret
es
scas
inc
stc
and
arpl
sbb
loop
and
pop
sarl
test
int
mov
psraw
pop
pop
jmp
and
jne
and
jno
add
nop
adc
fadd
mov
fcoms
lock
lods
mov
inc
call
test
jp
jmp
js
mov
stos
ficomps
mov
mov
rorb
xchg
dec
mov
xchg
ss
cmp
jne
or
stos
push
mov
pop
insl
xor
cmpl
lods
xchg
dec
adc
sbb
push
jno
mov
ret
dec
adc
xor
sbb
arpl
in
push
mov
push
outsl
xchg
lahf
es
push
jmp
cmp
xor
rcrb
test
sbb
repz
lret
jbe
cmpsl
mov
popa
push
test
dec
mov
out
sub
sbb
mov
inc
sub
fidivs
mov
mov
and
dec
mov
lds
aaa
shlb
cltd
std
mov
outsl
loop
or
mov
scas
dec
pop
in
data16
xlat
and
mov
cmc
aam
xchg
ljmp
cmpsl
mov
fidivrs
imul
fwait
jg
mov
ret
ljmp
test
icebp
fadds
in
inc
sub
pop
outsl
arpl
dec
addr16
or
daa
loopne
jecxz
iret
insb
add
mov
fisubl
popa
lea
arpl
xor
push
xor
xchg
jo
push
daa
jmp
pop
js
stc
lea
add
adc
mov
adcb
add
dec
loope
xor
mov
popa
push
sti
cmp
dec
data16
or
scas
pop
mov
jo
in
idivb
repz
mov
push
push
cmp
sbb
dec
and
jp
call
stos
jl
adc
fistpl
test
mov
mov
push
dec
or
lret
mov
into
and
sbb
sub
push
sbb
inc
adc
lea
and
xchg
div
sub
rcrl
mov
or
xor
jo
xlat
cmp
out
data16
imul
xor
sub
lock
adc
and
xor
int
sahf
sahf
stos
stc
adc
jb
jne
pop
shrl
and
out
das
repz
addb
lcall
mov
jno
add
or
cltd
std
nop
lods
test
inc
ljmp
dec
insl
pop
xor
test
pop
or
aam
or
in
mov
testl
js
pop
mov
jecxz
jnp
and
mov
in
push
fsubr
orl
push
repz
and
pop
outsl
inc
pop
or
cmp
cmpsl
js
mov
hlt
aaa
pop
add
jl
jne
mov
popa
xchg
xchg
out
cs
cmpsb
fsubs
or
pop
pop
inc
push
lret
and
ss
mov
jg
cmp
push
jae
mov
loopne
cmpsl
sub
jle
imul
movsl
int3
and
std
movsl
pop
dec
jmp
mov
leave
in
lock
repz
xchg
data16
out
outsl
out
test
mov
xchg
sbb
xor
movsb
xor
in
sub
inc
aas
mov
int3
sub
mov
jl
lods
leave
and
push
jbe
test
mov
push
push
stc
sar
nop
adc
inc
sub
pushf
test
cwtl
jnp
mull
mov
and
lcall
and
js
outsl
push
mov
xchg
adc
into
ss
xchg
stc
rcrb
adc
mov
cwtl
je
lcall
pop
jp
dec
jnp
mov
sti
pop
pop
fcmovnbe
jne
pop
es
movsl
fisubrs
stc
mov
cmpsb
xchg
rcrl
adc
xchg
int3
xor
int3
mov
or
orb
push
fidivs
pop
ja
shl
mov
xor
les
imul
or
mov
loopne
or
repz
sub
mov
enter
xor
inc
sub
jae
xchg
push
imul
xor
inc
pop
ss
rorb
cmp
out
bound
je
jmp
xor
lcall
inc
fistpl
scas
ret
cmp
mov
or
fisubl
mov
leave
and
add
aad
adc
mov
mov
hlt
dec
and
inc
aas
push
out
sbb
das
xor
ffreep
mov
rol
negl
orl
sub
jno
fadds
in
shll
or
jo
flds
hlt
out
jmp
lret
inc
xor
daa
jae
sbb
imul
xor
adc
repz
scas
lock
pop
iret
mov
lret
movsb
jge
cli
mov
out
jnp
adc
shll
and
cmc
insl
or
pop
sbb
mov
jb
popf
mov
cltd
xlat
mov
and
aaa
data16
stos
rclb
mov
test
mov
int
mov
ret
push
repnz
or
dec
and
xor
and
fsin
fnstenv
pop
push
add
cli
or
sbb
nop
insb
xchg
out
std
dec
push
hlt
in
and
push
mov
fstps
adc
and
fistpll
xor
adc
cmp
das
cmp
cmp
test
or
lods
pop
inc
fisubrs
out
test
mov
push
out
jbe
out
pop
sahf
outsl
xlat
aam
jne
jb
jle
sbb
inc
pushf
scas
jg
pop
repnz
push
add
xor
call
xchg
scas
push
dec
fimuls
fnstcw
int3
push
push
arpl
xchg
jp
sbb
pop
add
cmp
imul
loop
add
lret
das
bound
mov
rcrl
insb
adc
jnp
fdivrs
mov
loopne
add
jl
fisubl
enter
lret
sbb
popf
sbb
add
test
rclb
test
insb
divl
lock
sbbb
rol
pop
or
ret
pusha
mov
popa
mulb
lret
test
sbb
mov
jp
outsl
fbstp
xchg
pop
adc
xorl
mov
mov
mov
xchg
push
insl
mov
sub
adc
lods
jno
imul
aaa
dec
into
dec
push
mov
push
fbstp
cmpb
test
gs
mov
arpl
sbbb
mov
cmpsb
pushf
fidivl
xor
packssdw
call
sub
roll
push
push
fsub
jle
jo
rcll
rorb
out
fimull
adc
and
out
cli
iret
fs
cmp
hlt
jg
mov
repz
lods
and
lea
inc
scas
adc
aam
sbb
sbb
scas
inc
jmp
xor
cs
add
jnp
pcmpgtd
push
ficoml
lahf
scas
es
xchg
inc
push
repnz
jge
cmp
jnp
mov
cmp
lods
jns
mov
and
lcall
sub
sub
sbb
lea
inc
loopne
cmpsb
in
mov
sub
sub
addl
and
xchg
decl
rorl
sbb
jmp
cld
add
mov
mov
mov
inc
frstor
inc
sub
mov
mov
jmp
ficoml
xchg
mov
pmovmskb
pusha
push
ja
scas
gs
cltd
sbb
pop
inc
xchg
push
mov
cmpsl
mov
pop
das
ljmp
push
in
pop
adc
or
clc
sbb
std
or
cwtl
fwait
es
cmp
and
adc
inc
push
enter
lret
lods
add
hlt
push
leave
loope
test
add
cmp
or
or
sbb
arpl
inc
lahf
mulb
jns
mov
mov
mov
push
out
sub
cmp
jle
lea
fnstsw
sub
jg
adc
rep
mov
add
sbb
arpl
jbe
jae
lahf
pusha
in
jmp
inc
mov
fmull
lods
lods
enter
rorl
loop
test
ret
xor
dec
dec
lods
dec
cmp
insl
mov
imul
out
sub
imul
mov
shlb
sub
inc
push
mov
jnp
popf
adc
sahf
fwait
sbb
lahf
lret
daa
bound
jmp
ret
pop
mov
mov
sbb
test
adc
mov
push
adc
dec
mov
inc
mov
fldenv
xchg
xchg
sbb
pop
mov
imulb
out
insl
jae
mov
adc
inc
push
push
gs
outsl
pop
test
push
int
pusha
jae
outsl
divl
ror
sbb
jg
subb
dec
jmp
xchg
shlb
push
mov
test
ljmp
cmc
and
jge
lcall
mov
adc
sahf
xor
xchg
cmc
out
and
lret
mov
nop
into
jp
sbb
repz
movsl
mov
sahf
adc
sbb
adc
aad
dec
popa
xorl
mov
imul
sub
or
test
sbb
sbb
push
xchg
xor
sub
push
push
stos
negl
pop
pop
mov
popf
lret
sbb
add
inc
out
ja
sub
jl
lret
into
testl
xchg
ljmp
sbb
int
push
scas
sub
repnz
das
mov
or
pop
or
mov
repnz
add
jno
dec
and
pop
das
inc
fwait
xlat
orb
sbb
and
inc
call
gs
test
jp
lods
enter
xchg
ljmp
adc
outsb
icebp
or
mov
push
jmp
cli
rcrb
mov
aam
push
rcrl
jl
push
mov
scas
imul
mov
outsl
addl
ret
cmp
jae
dec
cmp
sahf
jo
dec
int
gs
out
js
ret
fiadds
call
mov
std
xchg
testl
jnp
fimull
pop
xchg
xor
xlat
repnz
xchg
and
imul
push
lods
cmp
imulb
push
in
ret
xor
push
dec
jo
xor
mov
dec
pop
fisttpll
iret
outsb
in
push
inc
inc
out
and
out
jno
mov
xchg
jns
lea
shlb
out
mov
fdivl
or
mov
pop
enter
imul
lret
movsb
mov
mov
push
jnp
into
cmpl
push
or
xchg
push
push
pop
stc
jp
sub
adc
loop
mov
sub
xor
pop
cs
test
pop
mov
repz
es
xlat
xor
mov
and
fildl
es
mov
shrb
pop
cmc
cmp
lods
call
ret
adc
mov
mov
pop
in
pop
inc
sub
xchg
in
pusha
pop
sbb
lcall
push
inc
dec
sub
dec
push
in
xchg
sub
sarl
xchg
test
xor
push
les
divb
insl
test
enter
push
cli
jp
shl
out
push
scas
adc
cmp
inc
hlt
pushf
cmpsl
out
xchg
and
lds
cmp
cltd
push
dec
dec
fbstp
negl
subb
movl
scas
mov
psrld
mov
addr16
movsl
cmp
jbe
sub
mov
dec
inc
vpor
xchg
cs
sahf
xor
mov
jbe
icebp
mov
sbb
cmc
mov
mov
sub
dec
aad
dec
inc
push
or
fstl
push
aaa
icebp
popa
sbb
cli
pusha
decl
daa
sbbb
sub
sub
sbb
iret
and
lcall
mov
jle
xor
push
and
das
loope
push
and
sbb
jmp
dec
scas
fs
dec
lahf
inc
and
and
xchg
shrb
ret
jp
inc
lods
movsb
std
mov
pop
mov
cmp
sbb
cmpsb
cmpsb
cmp
add
lds
mov
dec
outsl
pop
dec
scas
add
adc
sbb
loop
bound
dec
cmp
inc
xchg
aad
sub
push
in
enter
mov
lods
dec
leave
pop
jl
pop
add
jb
adc
xor
mov
psrlw
adc
andl
loope
call
sub
push
pop
dec
mov
pop
dec
inc
xchg
test
lcall
jmp
push
and
dec
jne
add
sub
hlt
mov
mov
mov
adc
mov
or
cmp
dec
add
enter
mov
sub
pop
imul
rorb
daa
inc
shrb
mov
aad
jge
cmc
lahf
ret
es
test
push
fmull
int3
negb
outsl
push
imul
inc
sbb
adc
and
mov
xorb
inc
xchg
or
and
je
mov
ss
and
xchg
scas
rcrb
notb
mov
and
cmp
fadds
or
push
ret
andl
jg
repz
inc
maskmovq
divl
pushf
subb
inc
cli
outsl
ret
sub
jne
insl
popl
mov
mov
cmpsl
imul
stos
sahf
scas
leave
dec
adc
aad
dec
and
ja
leave
mov
rcrl
mov
insl
cmpsl
popf
sub
push
outsb
add
pop
stos
mov
cmp
stos
call
jge
xlat
push
std
fwait
clc
pop
jbe
loope
xlat
cli
pop
xchg
push
xor
pop
push
int
js
push
jno
mov
cmp
icebp
inc
dec
test
xchg
in
icebp
adc
push
shl
rorl
add
adc
aam
add
xlat
push
sbb
xchg
int3
test
xchg
mov
add
outsb
push
xchg
push
in
aas
mov
dec
das
adc
cwtl
and
jmp
lods
jmp
mov
add
and
inc
sti
repnz
movsb
and
cld
cmp
sub
and
pusha
clc
nop
push
mov
jmp
jg
xorb
nop
es
mov
jp
stc
inc
clc
fisttpl
int
out
push
or
popa
popa
xor
xchg
pop
mov
nop
out
out
sar
sbb
sub
xor
cmpsb
pop
mov
orl
cmc
shlb
stos
lds
or
or
mov
in
popf
stos
inc
inc
dec
pop
mov
insb
psrad
add
rcrb
out
dec
jp
sub
push
sbb
jmp
pop
sti
jbe
jmp
fnstenv
push
or
std
push
fisubrl
sbb
add
fbld
and
mov
xor
divb
shl
in
adcb
pop
std
adc
sti
inc
je
jae
dec
fildll
or
mov
data16
les
jg
cmpsw
mov
in
std
mov
notl
add
xor
add
mov
fstps
icebp
mov
mov
fcoml
cmc
push
jae
popf
mov
imul
repz
roll
in
std
xor
or
repnz
sub
xchg
std
push
ss
dec
or
mov
testl
jo
shlb
add
xchg
and
sahf
arpl
dec
xor
bound
mov
push
pop
and
mov
mov
cmp
test
inc
xchg
jg
dec
cli
cs
push
xorl
xchg
pushf
push
inc
fmuls
mov
lcall
popa
mov
fs
push
aaa
xchg
xor
mov
mov
movsl
jge
xor
das
lahf
cmpsl
add
scas
shrl
fidivl
xlat
in
add
cmpsb
lcall
sarl
dec
ljmp
aam
mov
xor
xor
inc
nop
popf
sub
and
xchg
xor
push
adc
sbb
adc
pop
stc
daa
mov
jo
cmp
lea
mov
loope
shlb
in
xchg
mov
push
push
add
sbb
enter
leave
jmp
das
addr16
dec
lahf
ss
out
sub
lock
outsb
cmc
aad
jmp
pop
notb
pop
aad
push
ret
notl
mov
pop
ds
outsl
jg
jbe
push
scas
adc
divb
mov
mov
fstpl
in
dec
call
xor
gs
xor
nop
cmp
inc
fcomps
xor
push
or
in
call
sti
xchg
lret
rcr
mov
in
sbb
fidivrl
dec
out
ljmp
filds
test
push
adc
mov
jle
or
mov
repnz
roll
insl
add
and
pop
arpl
fs
sbb
mov
outsl
lcall
sbb
mov
add
sbbl
xchg
daa
lret
push
push
cmpb
cmp
movsb
pushf
dec
adc
jns
xorb
dec
inc
cmp
out
lods
cmp
outsl
ret
and
push
fsubrs
iret
pop
insl
rorl
popl
mov
add
pop
inc
and
hlt
data16
and
or
movsb
cmp
popf
hlt
xor
pop
rorb
js
in
daa
sbb
jno
ja
cmc
test
push
fstpl
push
push
mov
cmpsl
popa
xor
cmp
xchg
pushf
in
fsubs
sub
push
callw
js
xchg
and
xchg
mov
xchg
outsb
ret
cmp
lock
aaa
adc
xchg
sub
aas
dec
orl
stos
push
enter
dec
add
jae
movsb
cmp
xchg
hlt
push
rorb
fldenv
push
push
fstpt
testb
bound
stc
push
dec
pop
shrl
aaa
js
inc
lods
or
dec
adc
popf
rorb
cwtl
sti
ds
inc
push
cmc
js
mov
sbb
mov
or
notl
int
mov
sbb
mov
test
lcall
jno
repnz
jbe
sbb
xor
test
dec
mov
incl
push
imul
dec
dec
movsb
jb
jne
dec
sbb
loope
xchg
jg
jo
dec
loopne
jne
mov
mov
xor
repz
mov
popf
mov
loopne
adc
inc
data16
stos
and
pop
add
dec
xor
sub
push
out
repnz
push
pop
adc
test
mov
aam
pop
xor
stc
cwtl
js
dec
scas
enter
inc
iret
data16
test
pop
je
stos
loopne
push
cmp
or
push
loop
mov
out
test
lret
out
dec
xchg
mov
dec
mov
test
jl
cmp
js
imul
loope
lds
inc
add
pop
clc
xchg
jle
jo
or
jge
in
pushf
scas
inc
in
jns
mov
or
rorl
fbstp
pop
mov
inc
and
add
jo
test
mov
adc
jg
insb
cmp
insb
fdivrl
fisubrl
lret
sbb
pusha
hlt
sbb
clc
sahf
popa
pop
jno
dec
mov
js
jne
mov
pop
imul
into
sub
cld
adc
mov
xchg
fwait
sub
ja
stos
into
call
repz
push
inc
gs
inc
dec
mov
shlb
movsb
out
jle
loope
lds
repz
cs
lret
sub
loopne
jge
inc
adc
cmp
ljmp
add
mov
mov
pusha
rcl
gs
mov
lret
pop
add
mov
mov
rol
push
cmp
jo
bswap
leave
and
jnp
add
mov
pop
pop
dec
lods
xchg
jae
inc
mov
fisttps
shl
hlt
in
cmp
dec
push
push
inc
jp
xchg
ja
adc
sahf
pop
jbe
add
ret
das
pop
pop
jb
mov
adc
fildll
ljmp
xor
inc
jno
cltd
xor
dec
sbb
cmp
subb
imul
cltd
xor
fists
pop
inc
push
loope
outsl
les
inc
xor
xchg
outsb
xchg
mov
push
sub
pop
addr16
stos
cmpsl
mov
fimuls
inc
movsb
mov
out
test
outsb
push
shlb
fidivs
ds
iret
xchg
lock
ljmp
lods
adc
pop
cmp
pop
pop
mov
jo
jnp
sub
cmp
xchg
jo
ja
lods
test
aam
std
cltd
push
dec
inc
scas
mov
mov
inc
cmpsb
int3
add
jnp
repz
rclb
incb
fsubrp
adc
faddl
aam
test
das
stos
scas
fstl
int
xchg
jb
in
inc
pop
adc
cli
pushf
popf
or
cmp
sbb
repz
pushf
or
dec
and
and
or
aas
aad
push
cmp
xchg
pop
ljmp
jecxz
and
insb
aam
mov
jg
sbb
pop
inc
cmp
add
es
adc
mov
sbb
and
imul
stc
cmp
fcmovnb
aad
outsl
stos
inc
gs
leave
sub
clc
int3
xor
divb
repnz
jge
xlat
lret
and
adc
aam
xor
aaa
into
cs
push
adc
inc
or
or
es
rcr
and
nop
fstps
xchg
arpl
movb
cmp
scas
ret
xchg
std
mov
fisttpll
aas
xchg
sub
in
mov
sbb
ljmp
ss
movsl
inc
mov
lret
mov
mov
pop
mov
rolb
push
xor
jno
in
out
adc
loop
jnp
add
aad
cmp
mov
sub
mov
popa
dec
push
adc
jns
push
jecxz
mov
mov
cmp
pop
mov
jge
loopne
cli
push
or
mov
mov
and
cli
cmp
xor
shll
add
cld
in
push
jb
dec
mov
jg
or
xor
mov
fcomps
sbb
fisubrl
mov
out
aaa
ror
daa
in
xchg
mov
in
jmp
pop
pop
cmp
mov
lods
xlat
rolb
push
mov
adc
jne
push
inc
xchg
gs
pop
lods
lea
rol
push
cs
dec
or
xchg
push
movsl
shrb
sub
test
fwait
mov
jbe
inc
push
push
push
pop
icebp
jae
imul
xchg
js
cli
mull
test
cmp
xchg
insl
xchg
loope
add
cwtl
mov
lods
lret
push
mov
insl
std
repnz
inc
stos
aam
fsubr
sbb
filds
repz
inc
cmp
mov
inc
xchg
daa
mov
cwtl
outsb
inc
fcompl
cmp
je
js
cmp
jmp
movsb
jne
das
std
ja
and
inc
push
jmp
ljmp
mov
or
cmp
mov
stos
add
lret
and
fmull
leave
cwtl
xchg
push
imul
into
lock
cmpsb
or
scas
test
mov
aam
dec
or
divb
sbb
cld
cmp
call
loope
dec
adc
xor
cmp
test
jmp
sbb
pushl
dec
xor
dec
out
pop
adc
pop
int
adc
push
jg
fsub
lcall
dec
mov
pop
cmp
cmpb
out
lock
daa
cmpsl
stos
or
adc
xchg
or
and
and
push
out
pop
subb
dec
and
call
cmp
push
andl
pop
call
and
out
ljmp
pusha
cmp
sub
dec
jbe
mov
jae
sbbl
adc
inc
idiv
pushf
jbe
dec
pop
imul
sub
pop
mov
add
mov
inc
push
or
movsl
imul
inc
fildl
out
and
cmpsl
push
shrl
or
and
movsb
push
xor
mov
lock
xchg
inc
cmp
mov
or
adc
ds
xchg
mov
rcrl
loop
xor
mov
into
gs
arpl
push
jns
out
dec
lcall
out
lds
out
mov
add
ljmp
jae
cmpsb
ret
cmpsb
xchg
out
icebp
xchg
or
das
push
xchg
and
cmpl
mov
mov
push
push
push
mov
outsb
push
adc
cmc
inc
dec
xor
clc
outsl
enter
and
add
mov
fimull
hlt
aas
push
sbb
vpsllw
fstpt
mov
movsl
inc
sub
shrl
pop
cmc
nop
mov
pop
andl
enter
into
add
push
outsb
xor
pushf
dec
jle
cli
test
and
sub
sbb
push
ljmp
mov
lret
add
xchg
dec
arpl
lahf
pushf
gs
push
adc
es
test
sbb
nop
jl
and
sbb
pushf
mov
mov
addb
daa
imul
stos
xor
mov
addr16
leave
inc
jns
xchg
scas
sub
movsb
jno
shlb
fidivl
insb
dec
out
sti
xchg
cmp
sbb
cmp
iret
xchg
mov
push
imul
lea
int3
pop
or
lock
stos
pop
leave
and
dec
xchg
cli
xor
data16
xchg
and
rorb
in
pop
inc
xlat
cmp
out
xchg
pop
pop
mov
rcr
add
insb
add
scas
call
jne
jecxz
loopne
test
push
inc
outsl
push
jb
push
icebp
and
push
sbb
sub
dec
xchg
test
aaa
inc
inc
aad
out
cmpsl
jg
xor
sarl
fadds
in
test
fucom
and
adc
test
mov
adc
sub
xor
mov
fisttpll
mulb
jge
repnz
jl
pop
lcall
dec
sbb
loopne
add
inc
push
frstor
pop
push
dec
lret
in
ja
cli
mov
out
rcl
adc
cmc
popa
out
cmp
cmpl
inc
pop
mov
ja
or
add
je
xor
ja
iret
sbb
pop
pop
aas
cmp
fwait
lea
adc
ss
dec
push
dec
cs
aas
lock
mov
cmp
xor
sub
ret
mov
mov
and
fnstenv
ds
data16
test
test
popa
fistpl
insl
sbb
mov
mov
test
fstpl
enter
lods
loop
aam
int3
lret
arpl
push
pusha
adc
scas
pop
mov
enter
hlt
loopne
dec
mov
adc
xlat
gs
xchg
not
stc
cmp
xchg
xchg
cmp
mov
stc
popa
pop
cmc
fcom
addb
insb
jle
cmc
sub
lcall
xchg
scas
in
cmp
xchg
lods
mov
lcall
ja
lret
xchg
lods
and
and
cmp
add
jmp
pop
into
xchg
xchg
and
outsl
pushf
scas
mov
fildl
push
mov
push
lcall
fucomp
cmp
adc
adc
pop
out
inc
cmp
push
push
dec
movsb
fwait
xor
dec
out
or
fs
xchg
aas
mov
push
je
shll
mov
jno
pop
cmp
push
jnp
add
sbb
js
movl
inc
int
cmp
push
stc
dec
fdivl
clc
pop
cmp
cli
mov
push
loope
fidivrl
add
out
ds
xchg
sub
mov
mov
scas
ja
cwtl
sub
fcoml
dec
sbb
jns
fwait
xor
add
push
fmulp
jnp
int
aad
mov
sbb
dec
stos
sahf
scas
mov
es
cmp
adcl
inc
jbe
in
testl
and
std
xchg
jle
inc
popf
test
mov
cmp
cmp
xor
mov
pop
xchg
leave
fs
jge
mov
add
lods
cmp
or
pop
cli
xchg
mov
in
xchg
mov
lret
sub
push
sarb
inc
pop
int
and
mov
stos
inc
rcl
sub
daa
jbe
test
sahf
adc
out
jae
in
in
loope
and
add
push
mov
loop
jne
mov
add
out
mov
dec
pop
jae
push
push
ds
push
jne
dec
mov
popf
push
inc
xchg
inc
cwtl
in
fs
mov
add
sub
mov
mov
push
cmpl
lea
sbb
inc
fld
push
xor
jecxz
insl
mov
aas
xchg
sub
hlt
andl
push
adc
mov
mov
cs
push
nop
and
stos
mov
and
pusha
jae
stos
mov
inc
out
jbe
sbb
add
sbb
cmp
sahf
clc
movsl
fsubrl
xchg
dec
movsb
add
lds
jle
push
in
or
lret
xor
dec
dec
popa
xlat
sbb
push
out
push
and
mov
inc
push
shl
push
mov
xor
orb
nop
arpl
out
push
js
sbb
iret
xchg
jbe
mov
fwait
xchg
add
jb
subb
xchg
sub
dec
dec
loop
js
cmpl
sub
mov
mov
jns
fldcw
adc
imul
or
pop
cmpsb
int
dec
xchg
sub
jl
jae
pop
cmc
inc
xchg
cmp
ds
mov
xor
adc
scas
mov
sub
loope
mov
cmp
dec
add
cmpsl
ret
aaa
sbb
into
xor
call
or
cmp
bound
adc
xorl
sti
lahf
fcmovb
pop
or
cs
jp
popf
popa
jbe
xchg
mov
or
fmuls
mov
pushf
arpl
mov
ret
adc
ret
popa
imulb
cmp
test
out
push
cmp
in
inc
fdivrl
pop
cmpsb
lret
dec
mov
sub
or
cmp
mov
int
sahf
cmp
xor
push
inc
fstpl
xor
push
dec
lods
adc
inc
xlat
pop
pop
sbb
dec
jnp
cltd
nop
pop
cmpsb
inc
push
mov
ja
xor
dec
xchg
sbb
mov
pop
stc
nop
dec
dec
mov
mov
leave
adc
xor
shlb
mov
aas
mov
imul
rcrl
aaa
das
cltd
imul
pushf
mov
add
lret
cmp
and
shlb
jmp
mov
out
fnstenv
inc
cltd
test
pushl
pushf
and
mov
cmp
xchg
lret
fildl
data16
out
out
test
and
cwtl
cs
data16
xor
add
sbb
jle
sub
cmpsb
mov
dec
scas
push
mov
ss
jno
cli
mov
fildl
inc
xor
fbstp
push
mov
xchg
xor
scas
arpl
sbb
hlt
clc
xlat
sbb
xor
push
xor
icebp
push
mov
je
inc
push
push
push
mov
inc
fsubs
lcall
dec
in
mov
mov
repz
xchg
pusha
hlt
mov
mov
in
sti
pop
aaa
sub
sub
sbb
pop
xor
mov
xor
lea
arpl
enter
jle
out
outsb
test
fs
rclb
mov
out
insl
std
mov
sti
pop
and
push
sti
in
rclb
stos
adc
ret
pop
xorl
sbb
fdivs
jp
cmp
fimull
or
ret
loope
sbb
loope
test
dec
movsl
inc
aam
dec
sti
pop
pop
add
es
or
jge
xlat
push
dec
mov
clc
lcall
das
jecxz
pusha
sub
mov
fwait
ret
imul
mov
les
mov
filds
xchg
push
bound
mov
movsl
lcall
call
int
cmp
aam
popf
ror
scas
cltd
mov
pushf
mov
fxch
loope
mov
and
xchg
mov
in
cmp
sbb
sbb
dec
jecxz
mov
movsl
ljmp
cld
aas
lret
popa
xchg
stc
hlt
fnstenv
popf
or
mov
xchg
lods
out
iret
push
test
sbb
and
mov
pop
out
xor
outsb
mov
roll
pop
mov
outsl
popa
mov
test
clc
mov
and
rsqrtps
push
lcall
movsl
xchg
cmp
and
imul
stc
jnp
mov
pop
dec
or
out
jp
sub
dec
pop
cmp
cmp
in
outsb
in
lret
cmp
in
sbb
sbb
inc
pop
lds
pushf
pusha
and
mov
fldenv
idivl
cli
mov
cmpsb
cmp
push
les
add
pop
jnp
sahf
mov
loopne
cmp
push
fnstenv
hlt
xor
sbb
pop
lret
pop
lcall
dec
out
test
adc
insl
enter
getsec
push
int3
das
leave
inc
push
rclb
test
dec
pop
xor
lods
sbb
mov
and
xor
xlat
sub
ds
inc
or
mov
push
sub
movsb
sbb
push
imul
xor
mov
lret
outsl
fistpl
or
mov
or
sbb
rcll
shll
insb
jle
dec
movsb
sbb
sub
sub
punpcklbw
rcl
cli
sub
jmp
adc
inc
inc
push
pop
sub
cmpsb
sbbl
lods
xchg
aas
fsubp
int3
mov
aas
aad
rorb
scas
hlt
xlat
cmp
aas
in
xchg
jne
mov
outsl
or
imul
mov
test
push
lcall
sub
out
pushl
and
mov
ret
push
inc
mull
mov
rcr
out
inc
mov
xor
xchg
push
cmp
movsb
out
xlat
dec
dec
push
inc
xchg
imul
repnz
sbb
insb
add
and
icebp
stos
jg
sbb
push
lods
mov
jmp
bound
jo
adc
mov
leave
rcll
push
test
push
jbe
or
sub
imul
lock
adc
push
shrb
jae
push
mov
and
jmp
movl
mov
mov
call
or
enter
xchg
push
lret
icebp
dec
or
or
and
shrl
pop
es
mov
pop
dec
mov
pop
sub
sbb
lret
mov
je
stos
test
xor
negl
and
test
and
repnz
xor
loope
clc
into
and
mov
dec
mov
mov
mov
mov
mov
sarl
adc
ljmp
leave
sbb
testb
mov
daa
lret
sar
and
xchg
fisubrl
sar
or
and
mov
adc
adc
and
das
mov
nop
movsl
jp
call
sbb
scas
dec
cmp
call
nop
mov
lods
and
pop
adc
push
aas
push
jne,pn
xchg
orb
std
int3
cltd
inc
mov
adc
fs
push
mov
jns
ret
sub
leave
sbb
adcl
xchg
notb
call
dec
cmpsb
adc
test
pop
sub
cmp
cmp
mov
movsl
jle
repz
movlps
fldt
lods
xchg
andb
jge
out
push
adc
in
outsl
cmc
lret
sbb
add
add
shlb
xor
pop
cwtl
jl
orl
or
sub
ret
frstor
and
sahf
jae
lea
cli
dec
and
repz
sub
sahf
mov
jecxz
push
stos
stos
sub
jecxz
jle
pop
sub
mov
int3
xor
fwait
xor
dec
and
xchg
add
sarl
hlt
mov
scas
jp
push
hlt
or
lods
xchg
mov
lret
mov
fsubl
mov
scas
and
pop
or
cmp
and
push
cmpsb
fnstcw
sarb
fists
mov
pop
adc
add
fstpl
jl
inc
mov
pop
ret
add
push
jmp
cld
scas
push
sub
cmp
leave
lret
leave
pop
movsb
cmp
and
pop
pop
sub
sbb
loopne
daa
mov
xchg
incl
xor
mov
push
mov
mov
mov
cli
xor
repz
and
fistpl
jne
add
insb
loopne
pop
dec
cmpsl
cmpsl
jbe
cmpsb
jns
mov
mov
in
daa
into
cmpsl
ds
mov
fcmovnu
lds
add
inc
iret
ss
sbb
inc
loopne
dec
sub
ficompl
adc
mov
mov
mov
or
es
sbb
and
sub
sub
xchg
cmp
cmp
shl
push
imul
icebp
icebp
movsl
cmp
enter
cmp
sahf
jg
sbb
rolb
out
mov
mov
xor
leave
adc
outsb
sbb
repz
shrb
adc
pop
fsubl
pop
js
pop
imul
jbe
push
pushf
mov
push
adc
push
push
stos
or
notl
pop
xor
dec
orl
adc
sub
pop
subb
pop
mov
iret
fcmovnb
loope
or
sub
aaa
mov
dec
out
loope
ljmp
adc
out
addl
jno
jmp
xchg
shlb
and
sbb
sbb
insb
fistps
rcr
xor
cmp
xor
filds
inc
push
mov
js
fldcw
dec
add
outsb
add
scas
xor
pop
xor
cs
aam
rolb
shl
fistl
pop
pop
and
mov
push
icebp
pop
loope
mov
mov
cmp
fimuls
stos
push
cmp
lods
dec
inc
icebp
mov
push
lret
mov
test
jb
xor
js
push
or
adcb
dec
insl
out
rcrb
aam
cli
test
or
daa
jge
in
and
insb
jl
inc
es
sahf
aas
inc
pop
jno
data16
dec
and
scas
fildl
cmpsb
pop
fdivr
mov
stc
add
shll
adcb
dec
pop
icebp
cmpsb
sbb
ljmp
add
or
dec
iret
jae
xchg
xor
cmpsb
or
pop
aas
mov
das
loopne
fmul
xchg
add
mov
das
mov
ja
mov
test
jecxz
or
jle
cmc
mov
cmpsb
inc
sti
adc
cltd
xor
cltd
mov
mov
jge
je
xor
mov
or
pop
je
dec
push
sti
add
xchg
fisttpl
jns
iret
inc
bound
and
pop
mov
lret
dec
outsl
stos
daa
mov
cmp
jae
ja
xchg
adc
cmp
sub
clc
pop
insl
sub
mov
jae
mov
shrb
inc
pusha
divl
jno
lahf
cmp
out
push
loopne
and
cmpsb
cmp
cli
mov
pop
mov
push
sub
xchg
testb
out
pop
shrl
hlt
pop
neg
outsb
sub
inc
inc
loop
fldl
pushf
std
cli
jne
pop
push
ss
xorl
mov
push
xor
xchg
test
imul
jmp
mov
outsl
sub
in
stc
js
leave
in
pop
loop
or
mov
sbb
xlat
aad
lods
xchg
stc
sahf
hlt
aaa
dec
inc
les
jle
sub
sub
frstor
or
js
stos
sbb
mov
cmp
sti
or
cld
sub
add
aam
sbb
add
sbb
stos
shld
dec
jne
inc
cvtps2pd
inc
arpl
sets
inc
sti
jecxz
xchg
dec
jp
outsb
mov
and
pop
cmp
cmp
mov
les
pop
scas
or
xchg
xchg
addr16
dec
pop
mov
mov
scas
ljmp
push
mov
lahf
outsb
jnp
lahf
jge
adc
out
sub
push
repnz
int3
xchg
es
ja
pushf
lods
cmpsl
rclb
jl
fidivl
out
dec
loop
je
in
xchg
daa
mov
stc
inc
pop
and
lea
fcomip
arpl
and
mov
fldcw
lea
mov
add
xlat
ret
hlt
lods
xchg
xor
ret
push
inc
aam
icebp
inc
clc
or
mov
jb
shl
mov
shlb
mov
xor
xlat
ljmp
lods
jbe
jmp
and
cmp
xor
dec
test
adc
xchg
mov
xor
testl
cmpb
insl
jo
test
adc
stc
pop
nop
imul
mov
pop
mov
lds
sbb
sarl
mov
sbb
adc
insl
cmp
lds
jbe
pop
pop
adc
push
adc
pop
fdivr
pop
and
and
fstp
adc
inc
filds
ret
inc
pushf
inc
dec
iret
pop
push
aas
loop
mov
cli
daa
das
jae
cmp
inc
adc
pop
jo
sub
imul
sub
stc
test
mov
push
cli
and
and
cmpsl
out
dec
loop
das
sbb
pop
lods
add
xor
mov
movsl
add
rsqrtps
test
dec
pop
xor
xor
nop
push
outsl
rcr
pop
jae
fnstcw
jnp
push
je
jb
dec
cmp
dec
nop
cltd
push
in
xor
daa
jb
add
xor
mov
lds
push
or
mov
xchg
mov
gs
xchg
daa
lret
sub
ficoms
add
aaa
inc
ds
xchg
or
push
data16
xchg
push
or
das
test
in
cmp
or
dec
xchg
fbstp
outsl
sub
jge
subb
loopne
sub
push
aad
cmp
neg
je
pop
mov
sti
aad
mov
loop
add
lods
adc
cmpsl
outsb
mov
pcmpgtd
sub
cmpb
movl
outsb
xor
mov
fwait
sti
movsb
iret
jp
adc
or
insb
mov
mov
xor
lods
andnps
rcr
cmp
inc
frstor
fisubrl
mov
xor
fs
cli
push
xor
or
fidivl
sbb
orl
mov
mov
js
rcrb
icebp
dec
icebp
lcall
mov
xchg
mov
push
mov
test
xor
or
jb
mov
jne
sub
pop
jb
fs
pop
repnz
add
bound
cwtl
push
mov
rolb
imul
sbb
adc
ds
outsl
out
fwait
test
dec
xor
arpl
push
popa
popa
mov
jae
pushf
xor
adc
rol
fmuls
in
stc
repnz
rdmsr
lods
in
jp
xlat
add
and
hlt
jl
cmp
xlat
xlat
rcrb
cmp
push
sub
dec
out
rep
sbb
aam
jl
int
and
pushf
sti
cmp
pop
lock
push
sahf
push
pusha
jo
jne
pushf
mov
xchg
xor
push
adc
cld
xchg
mov
repnz
popf
xchg
inc
iret
call
sarb
insb
fistpll
mov
dec
out
xchg
jge
or
dec
daa
test
movsb
nop
insl
add
mov
clc
orb
dec
rolb
ficompl
dec
cli
cmpsl
sbb
in
dec
imul
lahf
dec
pop
adc
or
sub
inc
mov
in
addr16
cmpsb
pop
adc
push
test
dec
sbb
int3
sti
stc
std
or
xchg
adc
stos
add
scas
push
movsl
loopne
leave
adc
adc
sub
gs
mov
xchg
or
mov
loope
inc
lds
hlt
ret
push
mov
push
enter
imul
lds
es
in
xor
jl
sub
iret
dec
dec
je
and
mov
aas
fstpt
or
scas
sahf
xchg
xchg
les
adc
dec
jo
movsb
mov
loopw
leave
jecxz
mov
faddp
dec
add
xor
lock
xchg
aad
test
test
jl
das
or
loop
xor
test
jge
sbb
in
mov
rcrb
sbb
xor
rol
scas
cld
mov
pop
call
dec
pop
outsl
aas
xchg
and
jmp
sub
lds
pusha
jg
inc
cli
test
movl
xor
jl
test
push
and
mov
cmp
xor
imul
icebp
mov
adc
mov
jmp
adcl
add
rol
popa
repz
xor
ret
popa
movsl
dec
repz
stos
and
sub
mov
aas
add
ljmp
out
fs
add
adc
cwtl
add
jmp
cmp
dec
inc
lcall
inc
xchg
mov
sahf
sbb
push
ret
call
sbb
aad
xchg
repz
aaa
ja
jecxz
sbb
outsb
popa
mov
int
pop
push
fldcw
nop
mov
pushf
gs
mov
stos
aam
movlps
out
js
jo
jge
cmpxchg
not
out
xchg
bound
adc
pusha
sub
jmp
or
pop
daa
cmp
jmp
xchg
loopne
lret
loope
add
xchg
pop
imul
movsb
xor
inc
inc
mov
mov
push
outsl
dec
fbld
inc
data16
jl
aam
stc
push
add
arpl
gs
loop
fsubrl
add
dec
fnstcw
je
sub
add
inc
mov
and
pop
mov
outsl
je
or
repnz
movsb
jecxz
adc
jp
imul
sub
jmp
andb
loope
sbb
dec
jmp
fildl
and
out
dec
rclb
mov
cld
and
mov
xor
jo
pop
and
xchg
dec
fcomp
dec
xor
xchg
mov
iret
dec
sbb
dec
adc
and
adc
sbb
jne
addr16
cltd
lret
shlb
jbe
aad
shr
jg
xchg
mov
std
outsl
adc
enter
inc
in
push
je
mov
test
or
in
adc
notl
inc
xlat
fucomp
loop
inc
mov
pop
inc
xor
je
jbe
test
push
mov
inc
gs
les
loope
test
setbe
sbb
aaa
xchg
and
inc
sbb
mov
cmpsl
push
mov
add
cmp
mov
int3
jne
hlt
cmp
outsl
add
push
jo
daa
inc
sub
jae
test
mov
or
into
sbbb
jb
lahf
iret
pop
add
adc
es
xor
movsl
outsl
xor
add
popa
or
stos
push
sub
test
ret
icebp
xchg
shrl
out
in
cmp
lds
mov
shl
inc
inc
mov
out
aad
push
rcll
xor
push
cwtl
or
pop
stos
adc
leave
push
bound
xlat
repz
jne
je
js
roll
arpl
xchg
push
loope
lods
out
scas
pop
nop
das
dec
inc
add
insl
dec
dec
xchg
inc
push
and
inc
sbb
push
popa
mov
jmp
push
test
pop
sahf
cltd
mov
lret
gs
mov
outsl
test
gs
leave
testb
addl
xchg
bound
jo
mov
xor
adc
fdivr
jno
andl
mov
pop
shlb
in
add
and
jl
xlat
cmpsl
sbb
stc
jmp
mov
xchg
dec
insl
pop
stc
sub
test
loopne
cmpsl
loop
fabs
pop
test
aam
jns
adc
int
sub
iret
xchg
sahf
xor
aaa
mov
push
add
insl
lods
icebp
jl
imul
add
or
adc
jg
out
rcr
repz
mov
or
xor
sbb
test
jbe
mov
imul
aas
mov
mov
xor
ror
and
out
cmp
lea
dec
adc
in
push
add
or
std
stos
sub
xchg
sub
lahf
daa
ja
ror
ret
dec
jp
ljmp
ss
addr16
mov
enter
lods
cwtl
aaa
mov
and
sahf
sar
mov
pop
scas
xor
pop
pushf
cli
ss
test
or
outsb
out
repz
in
adc
push
das
pop
test
dec
repnz
pop
aad
xchg
lods
cmc
mov
or
mov
jg
sbb
adc
inc
or
mov
and
mov
cwtl
sbb
out
gs
movsl
rorb
jp
xor
dec
ret
rorb
fisttpll
sbb
mov
pop
ret
cmp
stos
inc
loop
xor
push
movsb
push
jmp
jo
xchg
ja
inc
push
jge
ja
enter
insl
adcb
cmpsl
ret
add
lods
inc
inc
scas
mov
inc
push
dec
outsl
lcall
mov
pop
adc
mov
and
inc
cmpsl
xchg
push
or
xorl
sub
es
or
mov
add
dec
test
mov
dec
aad
repz
adc
pop
mov
xor
cmp
lds
mov
jl
mov
mov
xor
sub
testb
icebp
mov
pop
xchg
jecxz
les
xor
mov
sub
aas
add
iret
lods
add
mov
dec
outsb
and
cld
stos
rcrb
or
dec
decl
mov
adc
lea
sub
std
add
lea
scas
dec
pop
aad
and
pop
inc
dec
mov
insb
fidivs
push
cwtl
repnz
fdivl
cmp
jge
aam
sub
popa
mov
ret
pop
and
ds
cmp
imul
sub
jnp
xchg
popf
add
mov
fcmovbe
faddl
jns
in
or
fsubr
arpl
popf
out
and
mov
adc
xor
xor
sbb
dec
mov
dec
pop
jae
sub
jns
sub
stos
jge
pusha
mov
sti
pushf
or
rclb
push
pop
loopne
or
sub
add
add
jb
dec
and
xor
out
push
shrl
jle
xlat
cmp
push
mov
pop
xchg
lods
or
mov
popa
stos
xchg
push
test
into
aaa
xor
lea
or
rcrb
scas
pandn
shl
sub
idivl
mov
inc
fsub
cs
sbb
pop
popf
scas
cmpleps
pushf
xor
sbb
adc
aad
decb
pop
jecxz
addr16
aas
lret
push
out
mov
mov
push
or
pushf
mov
pusha
adcb
lcall
mov
out
std
xchg
pop
xor
mov
ffreep
inc
stos
sub
dec
push
and
dec
lea
shl
mov
add
cmp
xchg
mov
aas
js
aaa
jnp
out
dec
or
pop
lahf
mov
inc
fwait
xchg
outsl
xor
hlt
lcall
adc
out
add
std
add
dec
push
rorl
lret
pop
out
dec
inc
movsl
adc
scas
dec
push
dec
subl
mov
addr16
xchg
sahf
out
jmp
xchg
pusha
or
push
ss
sub
pop
mov
inc
dec
add
add
and
jns
push
pushf
adc
outsb
xor
xor
aam
or
cmpsb
push
popf
xlat
mov
in
imul
cld
sbb
push
or
pop
test
movsb
jp
pop
fdivrs
dec
mov
fiadds
loope
push
jne
push
addr16
mov
inc
sti
sub
xchg
pop
rcrl
es
pop
sub
lea
sti
sbb
or
sti
xchg
jo
movsb
xchg
aam
cltd
hlt
adc
mov
repnz
and
mov
rep
ljmp
jle
and
addr16
ds
test
das
div
in
stos
loope,pn
pusha
js
out
push
call
push
mov
scas
push
es
xor
shr
mov
jb
push
je
jne
testb
lea
cli
adc
mov
fldt
adcb
mov
jbe
push
add
inc
stc
test
jae
xchg
jne
dec
movsl
aaa
push
and
inc
dec
daa
pushf
xor
mov
xchg
cmp
mull
loop
sbb
adc
in
xor
aaa
cmp
repnz
std
xchg
push
and
sbb
push
ret
js
stos
inc
sub
cltd
int3
ja
call
into
mov
pop
data16
dec
cld
rcrl
jge
push
inc
out
negl
imul
xchg
adc
inc
cmp
fldt
xchg
or
rorl
daa
inc
and
cmp
xchg
pop
fists
xchg
pop
jecxz
fistpll
dec
pop
jcxz
xor
loop
inc
lock
adc
stos
inc
cld
jae
cmp
mov
daa
cmp
out
aaa
ds
movsl
adc
scas
sub
pop
js
ss
out
gs
cmp
mov
push
ja
pop
xchg
pop
cmp
cmpb
gs
fucomi
orl
ret
test
icebp
mov
add
cmp
sahf
xor
sub
mov
mov
adc
mov
popa
inc
push
inc
in
or
shrb
mov
stos
cwtl
push
pop
cmp
enter
dec
mov
and
and
adc
cs
icebp
mov
loope
xchg
call
fdivrs
sbb
mov
and
mov
shr
mov
js
or
mov
adc
outsl
sub
push
mov
imul
in
pop
loop
repnz
pop
add
ret
xor
sub
add
inc
icebp
fs
or
mov
filds
pop
fldl
dec
add
cmp
pop
adcl
push
xchg
adc
and
cmpsl
dec
sbbb
lods
dec
mov
test
mov
push
insl
or
pop
aad
lahf
stos
lods
or
mov
icebp
insb
cmp
and
push
add
dec
mov
mov
test
pop
fnstenv
cs
cli
loopne
mov
sub
xchg
out
mov
pop
mov
mov
aaa
push
jo
insb
in
or
movsl
inc
mov
inc
dec
loope
lods
dec
in
adc
pop
mov
mov
je
outsl
aam
pusha
and
outsb
addr16
lds
xchg
test
aam
fldcw
jl
insl
loopne
sbb
loope
cmp
scas
sbb
je
sub
xchg
mov
outsl
push
cmp
dec
loope
clc
pop
jmp
mov
and
shll
push
xchg
dec
fs
pushf
pop
shlb
fidivs
xchg
push
or
add
push
jb
mov
into
sahf
cmpsb
iret
out
dec
dec
xor
nop
mov
push
mov
cmp
and
mov
push
les
fisubs
popf
cmpl
repnz
repz
shl
inc
inc
clc
sbb
cmpl
popa
cld
push
mov
push
test
insb
or
xor
fcoml
pop
add
rcrb
lods
pop
adc
add
and
xor
push
mov
fldt
lds
inc
push
das
mov
dec
push
jmp
pop
cli
stos
int
imul
push
mov
xor
inc
or
lods
inc
mov
sbb
add
and
xchg
aaa
inc
jecxz
adc
jbe
bound
xchg
mov
aas
lcall
inc
adc
pop
dec
fimuls
mov
jae
sub
xor
test
sbb
stc
out
sub
pusha
cmpb
lret
jge
or
iret
lcall
pop
mov
pop
and
neg
repnz
loope
xchg
cmp
test
cld
jle
pop
jge
mov
or
sbb
es
cmp
cmp
jecxz
sti
leavew
sub
je
push
ficoml
shll
mov
push
imul
push
push
in
sub
mov
call
std
xchg
mov
pop
mov
mov
and
test
pop
mov
ljmp
pushf
in
or
scas
fs
popf
cmp
pop
sahf
mov
loopne
out
mov
or
pop
sub
push
dec
add
add
leave
adc
icebp
dec
outsb
pop
cmp
aad
add
xchg
jns
and
icebp
fdivs
jo
icebp
add
enter
int
lcall
inc
fs
and
jo
or
inc
sbb
pop
mov
mov
cwtl
stos
mov
pop
int
fcomi
bound
arpl
popf
xor
lcall
sahf
sbbb
add
cmpsl
xor
nop
sub
jecxz
nop
leave
sub
inc
sahf
fcmovne
cmp
inc
mov
rcll
jne
dec
shrb
cmp
mov
jge
mov
sbb
push
in
mov
mov
nop
ds
dec
out
pusha
ss
sub
push
add
jae
nop
test
and
loope
mov
cmp
sti
out
stc
and
fsubs
mov
inc
jp
mov
in
dec
outsl
sub
jmp
push
push
cwtl
inc
mov
movsb
pop
mov
push
leave
mov
sbb
dec
add
aas
mov
in
cmp
mov
call
mov
xor
sub
cld
mov
jg
inc
repnz
imul
loopne
outsb
cmp
mul
xchg
cmpsb
cmp
jns
mov
mov
lret
xchg
push
insb
clc
into
enter
xor
pop
gs
mov
inc
ret
and
xlat
pop
inc
bnd
jmp
inc
inc
lods
jbe
xchg
cmp
and
mov
xchg
das
mov
pop
es
rcll
lcall
and
sbb
mov
jmp
aas
jae
pop
call
inc
xor
frstor
xchg
mov
rcll
lods
mov
pop
out
dec
pop
adc
addr16
ljmp
stc
insb
push
lea
mov
and
scas
or
mov
stos
xchg
or
addr16
inc
mov
fld
adc
ds
pop
lock
pop
mov
add
jbe
stc
sub
jbe
mov
mov
andb
push
xlat
sbb
mov
sub
and
sub
das
sbbb
cmp
sub
jp
pop
lret
int3
xor
xchg
push
jge
sbb
testl
ljmp
jg
pusha
insb
ja
mov
mov
mov
cmp
pop
imul
add
xchg
push
fdivp
cmp
mov
sbb
mov
adc
js
nop
lods
fcoms
sbb
in
xor
dec
inc
push
add
mov
movsl
push
outsl
roll
test
mov
outsl
std
dec
xor
xchg
add
dec
adc
leave
jns
pop
es
lret
pop
push
bound
fsub
jl
sub
xchg
hlt
mov
sub
lret
mov
inc
shlb
jge
jbe
das
sub
xchg
cli
or
sbb
inc
aas
lret
cmc
inc
out
add
out
add
mov
jno
popf
push
inc
fiadds
sub
jle
push
sbb
mov
mov
mov
sbb
repnz
mov
xchg
adc
imul
push
xor
out
bndstx
outsl
out
loopne
pop
test
inc
adc
mov
stc
push
popf
sub
and
sahf
daa
and
fistpl
xchg
jno
and
mov
add
cltd
cmpsl
or
cmp
adc
xchg
scas
jne
adc
les
iret
sub
push
adc
ss
or
arpl
addr16
loop
into
iret
dec
jns
sub
jnp
mov
lods
cltd
cmp
adc
cli
or
fdivl
aas
cltd
mov
cmp
xchg
in
test
jmp
mov
mov
ja
cmp
in
jno
xlat
mov
lea
ja
mov
popf
int
mov
mov
push
jno
and
mov
fldl
rorb
cmc
jle
cmp
gs
lods
xor
adc
cld
repnz
push
ret
pop
test
or
push
push
push
ja
push
push
stc
mov
out
push
lahf
pop
movb
nop
gs
loopne
xchg
pop
popf
pop
push
jns
mov
fnstsw
xor
imul
sub
ficompl
pop
and
mov
rcll
pop
xor
xor
and
clc
and
outsb
lret
bound
ljmp
dec
loopne
mov
es
add
stos
repz
repnz
lahf
cwtl
and
fwait
pop
hlt
or
ret
pop
xlat
jmp
lea
jge
push
push
imul
sub
test
and
stos
xchg
cmp
xchg
addr16
loop
cmpsb
sub
popa
mov
dec
mov
push
mov
fimull
xor
jne
pop
jge
sbb
xchg
sbb
les
sahf
push
push
in
inc
rorb
cmpsl
dec
jbe
vcvtsd2ss
gs
mov
pop
mov
pop
adc
push
mov
xor
or
mov
les
and
nop
push
add
inc
daa
into
mov
adc
jbe
aam
push
jno
mov
scas
jmp
outsb
ror
adc
inc
or
inc
xchg
stc
shll
cmpsb
out
push
out
pop
and
push
push
addb
fimull
or
sbb
or
stos
adc
bound
xor
cmp
aad
and
and
imul
xor
cltd
cmp
or
push
out
pop
sub
push
xchg
jne
int
cld
xchg
cmpsl
out
fwait
aas
sbb
movsl
sbb
pop
imul
loope
mov
mov
add
mov
sub
jnp
sbb
dec
push
aad
fmul
lret
cli
inc
pop
aaa
inc
es
je
arpl
leave
mov
sub
jae
mov
pop
jecxz
iret
jmp
or
es
cmp
push
fnstenv
into
xchg
adc
movsl
repnz
imul
sbb
xchg
stos
push
jge,pt
jo
int3
int3
inc
mov
into
mov
xchg
inc
jno
inc
aaa
mov
mov
jecxz
lret
lret
jne
mov
lock
iret
add
cmc
push
mov
shll
cs
cmp
xchg
scas
and
sub
cmc
clc
xor
pop
push
mov
sub
and
and
xor
or
pop
into
pop
sub
dec
iret
pushf
jl
pop
mov
mov
mov
mov
les
jno
cmpl
movb
push
jb
cltd
jl
in
les
push
cmp
mov
scas
mov
loopne
sub
repz
je
lahf
test
inc
lret
lret
push
xchg
add
movl
mov
jle
iret
and
loope
jno
xor
out
adc
and
fs
mov
sbb
icebp
jg
addr16
push
pop
mov
xchg
add
push
dec
and
add
fucomp
cltd
and
mov
addr16
xor
lret
incl
pop
ret
inc
and
pop
fnsave
orb
js
mov
pop
xor
push
in
xorl
or
push
jno
mov
das
xchg
pop
cmp
xlat
xchg
sub
shlb
cmpsl
fists
jle
subl
jno
gs
je
stos
xchg
xchg
jl
idiv
sub
movsl
hlt
xchg
nop
movb
jl
lret
sub
iret
gs
dec
push
dec
xchg
stos
cmp
mov
mov
jmp
insl
fisttpll
mov
je
or
xchg
inc
pop
insl
inc
sti
inc
fisubrs
cltd
popf
lea
mov
mov
addr16
pop
dec
lea
add
jne
addl
or
jecxz
pop
repnz
or
xchg
sti
push
mov
and
mov
icebp
xchg
lods
inc
or
xor
les
into
test
out
and
push
push
jae
mov
push
ds
popl
je
daa
lods
inc
xchg
shl
jge
inc
inc
popf
stc
mov
inc
ret
inc
cmp
test
mov
std
data16
daa
mov
push
push
xchg
sub
decb
and
pop
push
int3
fs
add
xor
or
cs
xchg
arpl
aas
cli
mov
icebp
das
and
cmpl
rol
add
pop
adc
dec
ret
in
rclb
cli
pop
lret
mov
ss
mov
daa
push
test
or
dec
out
popf
and
inc
outsb
pop
subps
mov
inc
ret
sbb
pop
dec
loope
inc
stos
fs
fadds
stc
jecxz
inc
mov
jg
daa
mov
sub
in
mov
dec
cmp
inc
push
push
xlat
outsb
loope
mull
push
shl
jo
jg
test
xchg
adc
leave
add
push
jl
loop
and
fistpll
fmuls
mov
inc
mov
sub
stos
ja
jmp
lods
fcmove
pop
icebp
stc
std
adc
scas
xchg
add
stos
iret
xor
mov
dec
mov
add
xchg
cwtl
in
cld
loop
inc
sub
rcl
xor
inc
in
cld
jmp
xchg
xor
or
fidivrs
xchg
cs
aad
mov
sbb
add
cmpsl
push
lret
xchg
out
xor
in
fcmove
push
xchg
icebp
mov
je
fisubl
pop
mov
add
xor
gs
incl
push
dec
insb
xorb
adc
shrb
cmp
xchg
jno
jne
mov
cmp
lea
push
cmp
mov
mov
mov
xor
xor
inc
pop
icebp
and
popa
ret
dec
cli
loopne
push
popf
int3
ret
je
notl
xchg
cltd
lods
push
cmp
movsl
xor
adc
inc
in
shrl
in
ret
sub
stc
and
rolb
inc
hlt
mov
adcl
sub
test
lret
lock
mov
mov
into
mov
lods
out
sub
rorb
xchg
shrb
rcl
inc
repnz
sub
add
mov
leave
mov
push
test
jge
sbb
mov
out
inc
into
filds
mov
mov
xor
cli
ljmp
inc
fsubrl
cmpsb
push
mov
mov
es
jecxz
xchg
int3
das
icebp
fs
jne
mov
and
dec
pop
jge
addr16
push
xchg
mov
in
mov
in
push
cmp
mov
xor
popf
aaa
nop
add
jecxz
pop
jmp
test
push
sub
iret
pop
push
pop
lods
mov
lds
xchg
mov
int
mov
out
test
dec
mov
negl
sbb
enter
adc
or
mov
imul
mov
push
cmp
aaa
sub
iret
sub
popa
arpl
mov
pop
stc
test
mov
pop
lds
movsl
icebp
out
push
out
jbe
xchg
mov
mov
push
in
std
js
pop
ljmp
imul
adc
adc
mov
fadd
out
jbe
repz
dec
sbbb
mov
cmpsb
inc
pop
push
gs
xorl
cli
cwtl
push
sbb
jp
xchg
mov
shrl
cltd
fadds
xor
stos
jbe
fildl
fldcw
jecxz
sub
jae
lret
and
out
shll
xlat
test
push
in
popf
xchg
mov
inc
add
xchg
cmpsb
imulb
lods
mov
add
lret
mov
xor
mov
je
or
adc
or
xchg
aaa
push
aad
loope
es
cmp
ficomps
bound
lret
and
dec
shrb
adc
cmp
lock
insb
cmpsb
in
daa
mov
or
icebp
enter
xor
push
mov
fcompl
mov
fwait
push
les
jmp
push
stos
pop
cmp
ret
cmp
icebp
imul
adc
mov
call
seto
aaa
call
mov
ret
fimuls
mov
fstps
mov
lds
test
push
inc
lcall
lahf
xor
or
out
jl
add
mov
add
das
mov
imul
shll
or
ret
sub
mov
sbb
ret
in
es
mov
sahf
insb
and
jae
fwait
cmpsb
add
sub
loopne
push
ret
sub
outsb
lret
clc
dec
push
mov
out
cs
daa
dec
lods
outsl
out
dec
adc
pop
bound
mov
mov
push
jl
sti
es
sbb
ret
shrb
pop
and
mov
xor
xor
sbb
sbb
mov
fcompl
jb
jns
adc
pop
repz
sbb
or
pusha
cmp
jno
mov
popa
xchg
push
les
fidivl
call
mov
fidivs
sahf
mov
push
js
rcrb
movsb
pop
daa
fstpl
bound
mov
and
sarb
imul
and
mov
xchg
stos
lods
and
scas
es
add
pop
sarl
shrb
ret
sbb
mov
das
popa
out
sbb
xchg
mov
adc
mov
xchg
pop
shr
fdivrl
lahf
out
fld
pop
popf
cltd
xchg
mov
aaa
in
push
fisttps
mov
lods
lods
pop
cmc
push
ficoml
std
daa
inc
pop
scas
icebp
test
mov
xchg
ja
or
xchg
jae
into
cwtl
in
mov
stos
xchg
sbb
stc
sbb
popf
xchg
loope
test
imul
outsb
mov
push
or
comiss
je
xchg
mov
cmp
aam
or
pop
lds
pop
push
fisttpl
sbb
mov
adc
or
cmova
jae
cld
xchg
mov
rcr
jno
sbb
jle
cmp
sahf
mov
lock
jecxz
sbb
fidivl
and
xor
and
fsubrl
dec
push
enter
mov
and
mov
inc
jbe
out
jns
add
ret
inc
clc
outsl
xchg
mov
into
inc
hlt
push
shll
dec
push
xchg
jo
call
movsl
adc
pop
fldl
and
sub
out
cmpsl
jne
into
jns
sbb
push
in
pop
pop
cmpsb
sub
xlat
push
xor
cmp
jmp
loopne
sub
dec
jle
in
ljmp
loope
dec
and
jmp
mov
push
push
loopne
js
fbstp
jmp
xchg
scas
adc
jne
lret
mov
aas
xor
pop
push
pop
shll
out
cmc
mov
test
lret
test
jmp
popf
in
sub
test
or
fbstp
inc
xchg
jmp
or
mov
lock
mov
in
jbe
repnz
add
cmpsb
jecxz
add
movsb
mov
sahf
cli
mov
pop
jb
mov
pop
test
movsb
shlb
jne
ds
aam
mov
xorb
mov
mov
leave
lock
cwtl
incb
or
push
ljmp
push
outsl
add
dec
ljmp
pop
xchg
lea
lahf
aaa
mov
out
icebp
cli
sarb
insb
xchg
cmp
inc
mov
pusha
lret
xor
pop
xor
arpl
outsl
or
adc
ret
push
cli
hlt
aaa
daa
adc
jp
mov
xchg
or
jl
mov
adcb
stos
mov
and
mov
nop
adc
in
adc
xor
add
sbb
outsl
test
add
cwtl
pop
and
adc
mov
xor
push
or
sub
mov
fists
movsb
adc
mov
mov
pop
adc
pop
sahf
and
arpl
iret
mov
push
adc
sub
push
fxch
sar
sbb
sti
ficomps
in
cmpsb
dec
std
push
and
es
push
shrl
or
pusha
loope
cli
test
jmp
add
dec
xor
inc
jmp
inc
cmp
adc
xor
cmp
movsl
lcall
popf
fsubl
loope
lock
or
das
adc
dec
inc
mov
pop
fucomi
fs
je
add
sbb
xchg
js
fnsaves
shlb
cmp
sub
jbe
lret
xchg
stos
test
fldcw
les
adc
call
sbb
testb
jmp
aad
and
sub
jge
rcrb
push
jae
mov
push
nop
mov
sub
jle
pop
daa
lahf
sbb
int
aaa
clc
cmp
in
enter
jns
push
inc
sbb
pop
jle
sti
adc
pop
xchg
pop
lret
lds
je
fisubrl
aam
jp
pop
mov
sbb
push
add
pop
sbb
adc
jb
sbb
popf
imul
xchg
movl
pop
dec
pop
mov
ret
xlat
mov
xor
adc
add
sub
pop
mov
xchg
push
aas
test
bnd
push
lods
push
pop
scas
test
jp
loop
dec
les
loop
in
push
push
jo
dec
aam
and
inc
mov
push
ljmp
rolb
fs
and
inc
and
adcl
loop
popf
test
dec
sbb
call
imul
loope
mov
push
test
rcll
jge
and
je
cmp
dec
sbb
dec
push
inc
push
stc
in
js
sub
and
fstps
loop
xchg
add
ret
outsb
roll
dec
mov
inc
add
xchg
push
pop
mov
sbbl
and
repz
and
rcll
stc
sahf
inc
cmp
test
call
sbbl
jle
aaa
dec
add
jbe
mov
adc
mov
fbstp
fstpt
lods
cmpl
adc
clc
lea
out
jns
jecxz
sbbb
sbb
mov
sbbb
pop
stos
repnz
push
hlt
xchg
mov
cmp
xchg
stos
and
lods
jl
test
aad
cs
cmp
sub
xor
popa
out
xorb
dec
roll
leave
inc
or
cli
ja
in
sbb
fstl
imul
pop
push
outsb
aam
sahf
or
sub
jbe
cmp
shrl
or
add
push
push
cmpsb
jl
mov
stos
sti
xor
insb
dec
bound
sarl
scas
xchg
test
xor
leave
fyl2xp1
or
pop
movsl
mov
xchg
sbb
mov
in
or
cwtl
and
jnp
sahf
insb
push
and
ret
pushf
scas
insl
insb
bound
cmpsb
out
and
push
test
jmp
aaa
jno
push
cmp
add
sbb
lods
imull
jmp
fsubrl
inc
jno
xor
mov
inc
fistpl
sbb
dec
out
cmpl
mov
fstl
adcb
popl
add
xor
daa
mov
std
repz
xchg
sbb
enter
leave
push
ljmp
xchg
xchg
mov
lahf
mov
fbstp
ficoml
sbb
add
sbb
xor
loope
sub
push
ljmp
jno
xchg
fnsave
aas
mov
test
fstps
xor
or
aam
mov
push
jmp
pop
int
sub
push
add
std
cmp
jb
mov
sti
insb
push
cmp
popf
xor
sub
pushf
pop
fnstenv
mov
jp
cmpsb
fmull
jbe
push
popf
lock
xchg
rorl
xchg
sarb
cmpsl
cli
xchg
push
into
push
xlat
jge
shlb
into
je
out
ss
mov
cmp
dec
frstor
ds
xchg
jb
dec
jae
mov
call
push
or
outsb
adc
sbbb
or
dec
mov
gs
out
addr16
in
mov
mov
mov
test
adc
shrd
dec
aad
rorb
mov
mov
and
repnz
sbb
dec
sbbl
cmc
fbstp
mov
pmovmskb
lock
lds
jg
push
sbb
dec
dec
ffree
xchg
insb
add
and
jl
push
and
mov
sahf
ret
add
jnp
test
adc
out
push
jmp
jns
int3
inc
sahf
jb
sti
ljmp
pop
shl
repz
fs
dec
in
mov
xor
lods
cld
sub
rcrl
movb
inc
clc
iret
jno
inc
lret
mov
xchg
in
or
push
jmp
pop
sub
jnp
and
in
cmpsl
ds
lcall
cld
fcoms
stc
int3
cmpsb
cmp
sub
out
clc
xchg
stos
add
notb
lcall
mov
insb
stos
jmp
aaa
repz
push
mov
push
mov
sbb
push
cmp
fisubl
mov
jmp
lods
mov
dec
rclb
sub
popf
sarb
jo
pop
cmc
filds
xchg
pop
inc
cltd
sbb
xor
pop
mov
mov
inc
out
js
or
testb
xor
mov
or
mov
push
leave
shr
xor
cmc
lods
pop
ljmp
xor
fucomip
mov
cmpsl
nop
lcall
sahf
arpl
ficoml
xchg
push
or
ds
dec
stc
add
mov
jns
cs
in
loop
mov
mov
int3
stos
push
leave
adc
or
push
test
cwtl
and
movsb
mov
dec
daa
lcall
or
sbb
bound
test
sub
and
push
push
and
jae
mulb
ret
add
fmulp
push
je
or
xor
ja
inc
in
push
inc
dec
out
outsl
outsb
pop
jmp
cli
sbb
push
out
xchg
cld
clc
es
push
mov
pusha
or
lds
jbe
cltd
inc
mov
jle
int
push
out
cmpsl
aaa
pop
mov
push
leave
mov
jle
pushl
add
or
sub
daa
or
dec
jle
lods
fldt
scas
cld
cs
inc
shrl
js
mov
pop
out
push
adc
subb
and
je
push
sti
inc
push
sub
xchg
lret
jb
dec
fisubl
cmpsb
in
stos
pop
das
mov
pop
dec
in
pusha
ss
xchg
loop
ds
jb
shlb
ret
mov
test
fwait
push
dec
lahf
lods
into
pop
cmp
outsl
push
addr16
je
inc
push
inc
adc
aam
cmpsl
pop
cmp
ret
dec
jge
dec
pop
pop
mov
lret
cs
adcl
scas
les
iret
sbb
push
pop
or
pop
cmp
jo
jmp
cmpsb
cmp
sbb
icebp
enter
push
mov
inc
daa
imul
popf
test
mov
add
cld
cmpb
push
mov
iret
jns
xchg
mov
xor
and
repz
pushf
xchg
or
cwtl
xchg
adc
movsb
and
insl
inc
inc
fnstenv
add
xchg
pusha
int
sbb
inc
adc
outsb
xchg
fs
xchg
hlt
lea
adc
pop
mov
mov
sub
mov
sub
sbb
stc
or
in
push
xchg
push
aam
or
mov
push
xor
insb
inc
mov
mov
dec
fcompl
push
cmp
sbb
shlb
sbb
lret
leave
fldenv
push
push
mov
mov
stos
in
cmp
nop
sbb
aam
mov
shll
int
cld
decb
and
jl
mov
ror
out
inc
int
or
test
xchg
call
add
lds
pop
rolb
out
pop
adc
jne
inc
scas
outsl
xchg
mov
imul
sbb
sahf
dec
push
icebp
pop
mov
out
dec
sub
jle
outsb
lods
jne
fsts
in
ljmp
das
xchg
and
adc
rolb
jns
enter
sub
insb
adc
bsr
pop
fstpt
fucomi
pusha
bound
aam
inc
aaa
loopne
mov
iret
sbb
adc
cmpsl
inc
dec
mov
pop
stos
ljmp
sti
lcall
call
lret
cld
outsl
sbb
ret
int3
add
andb
pushl
jno
inc
lea
lret
scas
mov
cmp
add
xchg
scas
jp
aad
pop
mov
mov
cmp
sbb
jbe
mov
mov
iret
lret
lcall
imul
push
aas
jbe
daa
outsb
mov
jmp
ret
in
cs
xor
movsb
jmp
ffree
iret
push
fisttpll
repz
sbb
idivl
js
add
in
incb
push
dec
jbe
out
lahf
xchg
push
int
sub
pushf
mov
push
push
and
mov
sahf
mov
leave
lret
dec
xchg
pop
mov
sbb
mov
xchg
push
insb
push
jnp
sub
and
pop
inc
jmp
scas
sub
mov
out
in
leave
add
and
mov
pop
jg
jmp
push
pop
xor
sbb
outsb
mov
push
lds
movsl
inc
xchg
mov
ficoms
push
inc
aam
out
pop
subl
push
loop
aaa
jbe
mov
lcall
cwtl
imul
or
lea
lahf
lea
hlt
add
stos
imul
push
mov
add
cmp
xor
lea
rorl
in
adc
nop
lods
mov
out
std
aam
cmp
cmp
xor
scas
and
cmp
popf
popa
out
lret
cmpsl
mov
mov
adc
imul
inc
push
push
popf
movsl
cmp
mov
ljmp
mov
orb
std
mov
mov
call
shlb
mov
xchg
cmpsb
push
inc
fcomps
cli
or
sbb
push
dec
ljmp
dec
push
fsts
mov
ljmp
sub
fnsave
sub
cmp
mov
test
stc
jl,pt
xchg
add
outsb
xchg
push
repz
addr16
sti
cmp
fildl
cmp
lods
in
fwait
and
xchg
stos
or
pop
xchg
rcrl
ret
orl
arpl
mov
or
pop
pop
mov
js
out
shll
fmuls
lds
xor
push
aad
incb
test
adc
add
arpl
fcomps
dec
ljmpw
push
mov
scas
das
data16
lret
sbb
cld
pop
imul
lods
ja
mov
in
nop
dec
int3
rclb
lods
pushf
daa
or
mov
jecxz
lock
addr16
js
cs
dec
repnz
addr16
xor
je
lds
mov
popa
xchg
repz
in
adc
sahf
test
mov
and
movsb
mov
lods
mov
lds
xor
sub
mov
pop
in
jns
jbe
jno
mov
call
mov
ret
fistps
ss
mov
les
cmpsb
cmp
shl
sahf
mov
stc
or
sub
sbb
int
or
icebp
test
adc
xor
mov
into
cmp
mov
xchg
outsl
div
push
mov
imul
xchg
clc
outsb
inc
scas
mov
loop
mov
mov
ds
jge
add
lds
sbb
pop
and
sti
add
daa
inc
ficoml
fnstsw
jb
clc
arpl
out
xor
call
gs
xchg
fldenv
ficoms
and
pop
gs
add
adc
xor
sub
and
and
cli
pushf
mov
xor
in
mov
push
lods
jne
cmp
mov
adc
punpcklwd
adc
sbb
in
push
push
inc
decb
cltd
in
cltd
push
std
mov
inc
idivl
mov
jg
cmp
cld
sub
inc
xchg
add
xchg
sub
push
andb
insb
pop
xchg
fs
int
add
fs
push
adc
and
lea
push
mov
loopne
push
add
jp
cmp
sub
dec
push
std
xchg
inc
jns
ds
inc
sahf
xor
aaa
pop
inc
push
jmp
pop
mov
sbb
mov
adc
pop
xchg
mov
xchg
inc
mov
jg
nop
push
mov
fsubs
sti
icebp
pop
mov
movsb
lcall
sbb
movsl
cmp
xor
subb
dec
xor
addb
jo
in
leave
sbb
aas
pop
pop
cmp
sarl
pop
outsb
jecxz
xchg
mov
cmpsb
cmp
sub
pop
adc
pop
mov
sub
cmpsl
mov
fldenv
jne
call
fsubrs
cmp
pop
or
call
int
or
mov
cmpsl
lea
arpl
outsb
roll
addr16
mov
aaa
scas
jno
inc
and
data16
jae
ret
pop
mov
xchg
ss
sbb
inc
or
push
cltd
dec
jl
mov
xlat
and
and
out
leave
dec
add
sti
subb
xchg
fsubs
imul
and
divb
rcrl
lcall
mov
loopne
fstpt
outsl
push
cltd
stc
ss
push
mov
sub
sbb
movsb
push
sahf
pusha
rclb
stos
insb
xchg
inc
or
mov
jns
inc
btr
fnstsw
into
push
rclb
lahf
cs
imul
js
xor
in
dec
inc
inc
jge
dec
in
pop
repz
cs
sti
dec
adc
in
icebp
cwtl
es
cmpsb
loopne
xor
sub
pop
fxtract
mov
sbb
xor
dec
sahf
ds
mov
pop
or
sti
pop
jno
aas
cmp
pusha
imull
inc
jle
jns
scas
xor
push
popf
sete
dec
xchg
push
add
out
pushf
data16
mov
cmpsb
notl
adc
adc
push
aaa
jo
mov
fnsave
cmp
lods
inc
inc
pop
or
insl
jg
je
push
gs
and
add
das
repnz
jp
out
cmp
sbb
loope
nop
mov
sbb
inc
mov
pop
movsb
aas
push
hlt
inc
in
sub
fidivl
dec
xor
dec
in
aaa
into
loopne
pusha
int
mov
inc
mov
mov
fisttps
push
mov
mov
int3
push
sbb
cmp
xchg
nop
sub
push
cmp
dec
or
fstl
cs
pop
loopne
in
out
add
mov
movsb
jmp
jecxz
adc
mov
lock
ret
enter
pop
mov
xor
shll
pop
fdivrs
sub
push
aad
test
dec
push
dec
push
fldenv
jmp
jae
dec
lock
aaa
cmp
sub
and
pop
adc
test
divb
movsb
inc
push
add
mov
movsl
loopne
loopne
lea
or
subl
test
or
jle
pshufw
jb
pop
movsb
mov
mov
aaa
jg
mov
roll
pop
mov
test
push
sarl
xor
rcr
dec
mov
inc
push
jge
add
test
add
scas
mov
stos
sbbl
mov
orb
or
pop
sub
mov
repnz
testl
mov
lcall
and
pop
shlb
fcoms
jmp
jecxz
inc
xor
xlat
dec
repnz
push
test
sub
pop
stos
lds
xor
xorb
adc
mov
mov
lods
or
icebp
sub
repz
fadds
xchg
in
test
rorl
fcmovbe
inc
mov
out
cli
imul
mov
xor
int
out
int3
ss
sub
lea
pusha
cmp
mov
rep
scas
repz
fistpl
push
neg
mov
lret
scas
push
jne
adc
hlt
and
into
out
pop
cltd
fdivrs
jns
mov
cmp
cmp
add
dec
jmp
int
ss
pop
adc
jae
sarb
mov
sub
fistps
jbe
lea
ja
lods
sub
push
adc
cmp
jl
es
jo
jne
push
icebp
cmpsl
pop
dec
pusha
dec
test
repz
cld
andb
shlb
iret
aam
cmp
or
lret
jbe
cmp
aad
mov
repz
std
jl
orl
jbe
add
sub
test
stos
jg
mov
fsubr
cmpsl
push
lock
adc
in
mov
jle
mov
mov
lods
mov
fsubs
push
stos
ret
jecxz
jb
imul
cmp
lret
out
mov
lea
mov
jecxz
inc
sbb
inc
sbb
mov
jl
sbb
pop
lret
addr16
or
mov
jne
into
test
dec
mov
dec
out
dec
into
mov
cli
data16
fistl
shrb
add
add
adc
aaa
add
cmp
xor
jno
mov
loope
mov
cmpsb
cmp
mov
or
sbbl
fcom
lods
mov
mov
and
das
icebp
pusha
mov
inc
sub
cmpl
cltd
jle
test
jmp
xlat
pop
ljmp
pusha
clc
sub
es
push
fs
cmp
push
xchg
cwtl
in
dec
sub
aam
cltd
out
stos
enter
je
jl
mov
lcall
and
orb
and
jno
mov
jle
stc
rcll
or
loopne
or
xchg
mov
imul
mov
push
push
and
loop
or
cmp
andl
dec
pop
pcmpgtb
dec
stc
xchg
movsb
mov
fdivp
mov
out
mov
mov
sub
mov
shlb
mov
dec
add
imul
popf
cmp
mov
xor
daa
dec
xor
jmp
push
fimuls
and
fistps
push
mov
xchg
jmp
add
push
push
add
xchg
mov
and
call
pop
lret
cmp
shlb
sbb
push
mov
in
lock
adc
pop
adc
test
xor
lea
pop
subb
cmp
or
sub
ljmp
pop
sarb
xchg
sbb
pop
out
cs
cltd
cld
int
out
xor
pop
and
sbb
aaa
xchg
rcrl
out
testb
call
inc
rcll
adcl
mov
test
daa
mov
mov
int
pop
sti
pop
fsubrs
int3
pusha
enter
xor
add
push
or
cltd
inc
or
test
push
ljmp
jno
xchg
push
cld
or
pop
out
enter
sbb
in
xchg
jns
out
xchg
pop
jle
fldcw
push
in
ds
pop
or
push
xchg
out
or
outsl
sahf
cli
mov
gs
scas
addr16
lods
xchg
mov
mov
cmc
mov
pop
jmp
xor
pop
ja
mov
or
lds
xor
in
lret
mov
sub
add
rol
pop
loop
or
xor
xlat
cmp
mov
je
dec
add
popf
sti
pop
mov
mov
adc
or
imul
adc
jle
aam
orb
imul
push
leave
jmp
sti
mov
inc
fistps
ficoms
and
pop
sub
adc
mov
push
mov
pop
lock
lds
xchg
lea
xor
loopne
push
adc
arpl
cltd
fistps
mov
jecxz
clc
push
in
mov
loop
fsubrs
mov
add
dec
jle
mov
push
mov
pop
and
and
lahf
adc
sahf
push
jb
popf
lods
outsb
rclb
jnp
es
fcompl
jl
inc
fs
mov
mov
hlt
xchg
mov
sbb
inc
adc
sbb
push
dec
pop
pushf
aam
and
xor
mov
in
inc
fidivrl
loop
je
pusha
popa
subl
repz
roll
mov
js
sbb
out
js
or
lahf
cmp
es
mov
ret
pop
stc
nop
sub
mov
shlb
cli
cmp
and
fs
inc
scas
inc
jne
sbb
enter
lahf
outsb
cmp
rcll
icebp
cmp
jmp
jecxz
test
sbb
jo
aaa
popf
xor
mov
dec
push
mov
in
or
pop
fst
mov
adc
xchg
das
les
add
insb
scas
icebp
push
sub
mov
mov
cwtl
inc
jp
sti
sub
sub
std
std
cld
cmp
mov
mov
test
sub
cld
out
div
aam
push
mov
jle
inc
fs
or
add
loopne
sub
push
sahf
push
push
stc
mov
in
adc
pop
push
enter
or
enter
xchg
sub
pusha
sub
xchg
ss
mov
repz
imul
out
loopne
xchg
pop
fildl
jmp
xor
mov
mov
cmp
ljmp
adc
test
scas
int3
push
js
jecxz
scas
push
popl
inc
pop
dec
mov
outsl
icebp
and
add
aas
ljmp
ja
std
lcall
in
pushl
and
push
fsubs
xchg
ljmp
ds
xor
sbb
mov
cmp
sub
or
cmpsl
leave
push
lcall
push
outsl
pop
jo
xchg
mov
movsl
leave
ret
loopne
and
int
fnstcw
int3
and
je
imul
mov
mov
iret
ja
shrl
iret
inc
popa
rorl
mov
sbb
mov
push
xchg
ljmp
rclb
bnd
pop
sbb
cmp
xchg
inc
jnp
push
outsl
or
inc
jae
fyl2x
dec
mov
push
in
xchg
pop
adc
cmp
pop
repz
pop
aad
mov
mov
loope
adc
clc
repnz
fadd
pushf
jb
mov
data16
shl
mov
sub
scas
mov
popf
das
and
fidivrs
loop
cmpsl
push
enter
cmpsb
pop
cwtl
and
mov
jmp
or
cmp
inc
imul
out
ficoms
xor
daa
cmpsl
in
dec
fidivrl
push
lret
push
popf
testl
sti
pop
push
and
push
push
test
call
je
adc
push
int3
gs
push
sbb
rcll
fsts
jne
popa
cmpsl
test
dec
sub
repz
mov
add
cltd
ljmp
jg
stos
inc
dec
mov
xor
sbb
imulb
dec
imul
out
sarl
cmp
fsts
xor
push
idivb
insl
cmpl
xchg
scas
ret
jb
or
mov
fmuls
clc
repz
inc
call
cmp
pop
pop
push
nop
imul
or
imul
push
shl
pop
mov
pop
icebp
adc
mov
ljmp
out
popf
ret
xlat
mov
pop
pop
in
cmp
subb
imul
add
xchg
ret
dec
and
cmpsb
and
jmp
cwtl
sbb
int
inc
xor
mov
dec
mov
pop
dec
sbb
mov
dec
jbe
mov
in
in
movsl
icebp
inc
xchg
mov
call
aad
ret
lods
jno
push
and
inc
addr16
push
push
sub
mov
mov
adcb
add
mov
sti
pop
jecxz
mov
cwtl
stc
pushf
cmpb
pop
mov
in
mov
cs
sti
push
in
lahf
ret
xchg
xor
sbb
orb
mov
fucomi
sbb
mov
popf
push
and
inc
mov
jle
mov
adcb
lods
std
mov
or
imul
push
xor
mov
jle
movsb
in
or
cmpsb
xchg
sub
into
daa
ljmp
insl
sbb
ljmp
insb
lods
add
or
faddl
stc
gs
add
clc
mov
loopne
bound
xchg
push
mov
inc
pop
je
xchg
inc
pop
into
aam
mov
movsl
sub
pop
cs
sahf
dec
les
xor
popa
clc
out
mov
cmpsl
pop
cmpb
dec
stc
or
xlat
fbld
fists
add
cmp
movsb
mov
push
sbbl
pop
outsl
call
mov
sub
in
dec
scas
and
sbb
in
ret
test
and
bound
ds
cs
add
xlat
jne
lea
adc
and
lods
shll
out
mov
icebp
jbe
cli
xchg
out
dec
mov
lods
mov
push
test
lcall
je
out
ret
push
pop
ret
test
inc
sub
push
outsb
icebp
add
mov
push
iret
mov
sub
fadds
lods
xchg
bound
cwtl
xor
dec
adc
jp
adc
inc
ret
loopne
lds
cwtl
xor
std
sub
test
pop
iret
imul
xchg
pop
pusha
testl
mov
jnp
stos
pushf
sub
mov
add
xor
outsl
loop
sbb
push
loope
jmp
adc
ljmp
jp
xchg
mov
pop
mov
int
dec
shl
js
out
xor
xchg
aas
call
inc
test
sbb
out
or
int3
enter
add
jo
subb
clc
mov
roll
stc
lods
mov
mov
jl
xor
push
xchg
aaa
xchg
iret
mov
nop
cmp
cmc
add
mov
cwtl
loope
xorb
and
dec
sub
mov
mov
sub
mov
pop
int3
icebp
fisubrs
adc
cmp
out
push
fwait
dec
pop
mov
enter
cmp
or
sub
sub
bound
sarl
sub
cmc
jo
jl
cld
sub
decl
xlat
xor
stos
popf
sub
dec
xchg
scas
xchg
out
popa
xchg
mov
fadds
jmp
mov
nop
and
test
das
mov
inc
jbe
test
xchg
inc
inc
repnz
xchg
call
mov
fstps
cmp
xchg
sub
jp
cmc
dec
imul
dec
loop
rcl
or
movsb
and
xchg
add
fwait
das
outsb
dec
jmp
sbb
xchg
cmp
push
gs
xchg
outsl
arpl
pushf
shrl
les
stos
xor
and
out
fdivl
cmp
xor
cli
call
or
sbb
lods
jg
lds
push
cltd
test
jecxz
pop
cmpsb
and
pop
ja
daa
rcll
data16
jmp
jmp
imul
andb
je
and
lds
ja
cs
pusha
aam
xchg
mov
fmulp
lods
outsl
shrb
mov
loop
pop
xor
aam
icebp
andb
cwtl
adcl
shl
mov
sbb
lret
rorb
pop
incb
dec
or
pop
sahf
das
lret
jns
jmp
or
imull
and
lret
sti
test
ret
js
push
int3
dec
pop
insl
jnp
xchg
lods
mov
mov
lahf
les
xor
lea
in
lea
iret
push
jp
scas
fiadds
push
fcoml
pushf
out
into
cmp
mov
fcompl
pop
je
outsb
and
sbb
sub
sbb
xchg
nop
lock
int
outsl
js
or
rcl
mov
icebp
pushf
inc
mov
add
adc
add
mov
mov
push
aas
loope
sti
adc
arpl
das
repnz
out
dec
cltd
pop
adc
gs
add
lods
xor
ljmp
pushf
xchg
jo
lods
adc
inc
push
jne
and
lret
in
add
sub
scas
daa
adc
xor
loop
xor
fidivl
push
mov
inc
add
mov
mov
es
and
loope
mov
inc
inc
pop
leave
out
jne
add
dec
pop
push
pop
int3
xlat
fidivs
push
xor
sub
mulps
ljmp
in
push
sbb
or
push
fsubl
mov
ret
enter
in
out
sahf
push
mov
dec
arpl
mov
push
cmpsb
inc
sti
inc
loopne
movsb
pop
inc
fsubrl
stc
mov
clc
pop
rcr
add
xchg
test
pop
cmp
sub
pop
jmp
jl
ljmp
stos
aam
jne
scas
ret
es
test
xchg
fcmovbe
lret
sarl
aad
inc
dec
aam
sub
mov
ljmp
or
adc
xor
cmc
and
jbe
les
push
call
adc
adc
fldl
or
movsb
mov
sarb
add
mov
imul
cmp
push
pop
inc
rcrl
imul
xchg
push
scas
xor
pop
icebp
jmp
insl
lret
dec
in
jo
mov
ljmp
arpl
jo
test
les
sahf
aaa
hlt
iret
push
dec
decl
jge
and
jb
jae
push
or
aas
dec
addb
loope
mov
mov
or
lret
notl
pop
jo
fistl
loopne
inc
in
push
int
and
nop
call
jne
mov
sub
mov
addr16
hlt
shrb
pop
mov
cmpl
mov
adc
add
jp
mov
and
and
cmpl
clc
cmp
scas
daa
cli
push
and
cmp
gs
mov
ret
push
in
std
xor
cwtl
dec
icebp
xorb
loop
subl
add
movsb
gs
test
inc
lock
in
xchg
daa
sub
pop
inc
js
jbe
mov
repz
xor
int3
fimuls
addr16
cli
cmpsb
push
pushf
fcoms
jle
dec
test
or
sbb
and
lcall
roll
mov
imul
cmp
lea
mov
stos
inc
mov
arpl
outsl
cmp
dec
cmp
add
lea
add
xchg
cmp
pop
mov
pop
jg
icebp
in
mov
and
std
jo
inc
ret
push
hlt
out
jmp
and
fnstsw
jbe
pop
stos
data16
inc
cwtl
lret
mov
dec
js
lds
add
aad
cmp
xchg
pusha
les
ds
insl
lcall
sbbl
iret
push
or
in
clc
sub
orl
inc
push
pop
xchg
pop
rcrl
xor
push
sbb
iret
addb
and
cltd
jo
pop
ss
aam
lock
mov
lods
xorl
popf
cmp
or
pop
push
inc
cmpsb
cmp
pop
lahf
call
mov
dec
out
pop
clc
or
pop
insl
into
mov
push
lods
mov
sti
repnz
jecxz
sbb
mov
lcall
push
sbb
pop
je
fsubrs
inc
cmp
add
aad
les
xor
adc
ror
fcmovb
inc
orl
lods
fsubr
std
mov
jns
adc
sub
aam
or
cmp
data16
int
and
lret
cmpsl
xor
sub
test
lahf
mov
pop
pop
xchg
movsb
stc
or
fucom
mov
lds
or
idivl
pop
cmp
out
aas
notl
nop
repnz
cmp
aad
sub
adc
push
push
hlt
mov
add
int
mov
mov
ret
outsl
push
inc
sub
pop
in
popf
xor
mov
and
push
aas
outsb
jne
repz
and
cltd
ss
pop
xor
clc
cmpsl
fsubl
hlt
jge
jmp
push
jp
push
repnz
push
fbld
cs
xorl
inc
loop
dec
sbb
pop
xchg
sub
popf
popf
outsl
dec
aas
scas
aaa
xor
stos
inc
and
cmp
mov
aam
outsb
push
mov
fucomip
js
dec
sub
xchg
das
dec
aas
jp
sbb
sti
xchg
repz
mov
inc
push
stos
loopne
adc
cmpsb
cmp
lcall
mov
xor
xchg
mov
out
jnp
adc
lret
adc
mov
int3
cld
lret
js
loop
out
mov
sarl
cmp
mov
adc
dec
in
push
cli
xchg
inc
sbb
icebp
inc
mov
mov
out
aad
mov
inc
sub
or
js
mov
mov
xlat
iret
jno
aaa
lods
inc
test
mov
andl
or
dec
out
cmp
pop
leave
in
sub
lods
ss
data16
hlt
push
sbb
sub
dec
adc
cmpl
popf
faddl
mov
jle
dec
mov
adc
xchg
mov
jmp
inc
ret
adc
jne
inc
fisttpll
test
cmp
das
mov
out
and
inc
inc
jnp
mov
std
and
iret
loopne
stc
pusha
cmp
int
sbb
sub
leave
leave
and
pop
loope
cmp
fwait
push
mov
fstl
cmp
push
push
mov
pushf
mov
push
adc
push
cltd
sub
les
and
xor
arpl
in
inc
or
mov
hlt
and
sub
push
sbb
xor
xor
mov
outsb
or
xchg
icebp
jae
imul
mov
push
sbb
lds
scas
mul
sbb
aad
outsb
push
mov
loope
or
xlat
add
cmp
inc
lods
jecxz
push
or
fincstp
push
xchg
out
jb
subl
stos
jge
inc
jge
loopne
loopne
repz
rorl
sub
push
push
repz
cmc
adc
mov
shl
pusha
fld
mov
xor
int3
rclb
lahf
subb
lcall
mov
mov
push
or
push
fcoms
xchg
cmc
pop
cmc
es
add
out
int3
int3
mov
fstpt
xor
mov
test
loope
cmp
add
adc
and
or
inc
dec
mov
fwait
push
push
dec
mov
sub
fwait
clc
lods
mov
jns
arpl
push
bound
inc
adc
inc
arpl
enter
mov
repnz
pop
cmp
int3
pop
dec
movsl
ftst
bound
jg
mov
loop,pn
xchg
clc
lret
pop
add
sbb
iret
popa
push
insl
dec
ret
shl
jg
shlb
adc
dec
pop
addr16
fcoms
fldcw
scas
cld
fwait
push
jecxz
sub
mov
loopne
inc
xchg
stos
cld
out
test
cmp
mov
call
lret
std
leave
into
sub
test
mov
scas
xchg
inc
std
incl
cmpb
dec
cmp
push
mov
pop
add
xchg
mov
or
lcall
sub
push
push
lret
push
mov
push
call
add
mov
out
rcrb
adc
ds
xlat
and
inc
pop
xor
mov
inc
jbe
fists
xor
enter
rolb
lds
ret
cs
push
adc
ss
cmp
xchg
dec
int
jae
add
js
and
insl
ds
jns
push
xchg
mov
cmp
jbe
or
rcl
imul
dec
sub
jae
daa
js
dec
sti
cli
xchg
in
lock
sbb
and
enter
into
push
sarl
sbb
fwait
inc
faddp
or
loope
out
test
mov
shlb
loop
xor
fsubl
aam
cld
adc
jns
cwtl
aam
cltd
in
ja
lods
iret
shlb
sub
mov
mov
ja
and
sub
scas
dec
out
or
adc
mov
iret
push
cli
cltd
call
jl
mov
mov
cmp
mov
mov
cmpsl
and
pop
xor
mov
cmp
mov
loope
push
dec
mov
mov
pusha
jb
push
add
lock
icebp
mov
loope
inc
adc
addb
dec
jecxz
out
inc
fnstsw
jle
pop
fsts
and
popf
lret
xor
push
movsl
push
leave
test
pop
movsl
shrb
outsl
stc
nop
pop
movsb
mov
cmp
xchg
push
bound
fs
sbb
iret
cmc
push
fdivr
sti
leave
movsb
test
ja
addr16
sbb
loop
insb
stc
mov
fisubrs
mov
mov
into
fs
mov
pusha
push
int3
sbb
sbb
pop
fldl
in
dec
stos
jmp
movsl
shlb
mov
call
mov
sub
movsb
mov
add
mov
mov
ss
xchg
outsl
mov
fcmovnbe
lock
add
out
dec
dec
add
test
incb
iret
leave
mov
adc
cltd
push
lock
in
mov
test
cli
mov
inc
adc
mov
lret
pop
mov
cltd
bound
jle
inc
daa
mov
push
test
mov
push
je
test
push
or
jne
in
andb
shlb
inc
jl
out
fcoms
iret
sbbb
imul
pushf
sub
outsb
xchg
cmp
movsl
cmp
pop
mov
push
lods
cmc
add
sub
std
out
sub
icebp
adc
negb
sbb
es
or
xor
fisubrs
cmc
sub
es
je
add
stos
jae
dec
loop
std
leave
test
mov
pop
push
insl
lock
inc
lods
mov
bound
es
test
fadds
push
ja
pop
sti
cvtps2pi
mov
push
pop
jge
mov
outsl
loop
mov
xor
cld
outsl
mov
rep
pusha
add
push
shlb
cmp
and
cwtl
sti
add
outsb
or
cmc
test
rclb
sbb
xor
test
mov
push
xchg
inc
mov
adc
xlat
cmp
inc
sub
mov
push
or
mov
sbb
ss
xchg
cltd
out
mov
mov
add
push
fidivs
pop
roll
ds
jae
lock
test
fisubrs
inc
xor
xchg
sbb
dec
scas
fwait
dec
pop
jmp
sbb
cmpb
and
aas
pop
mov
add
lret
shl
cwtl
enter
cmpl
arpl
adc
add
test
lahf
push
outsb
cmpl
outsb
enter
rcrl
jmp
test
add
popa
mov
lcall
sub
xchg
xor
add
das
push
movsb
in
mov
rol
cld
aad
les
ret
xchg
popa
push
shrl
jecxz
rcrb
ljmp
adc
inc
stc
dec
pop
bound
fwait
add
jp
int3
aas
or
mov
shrl
out
insb
xchg
mov
hlt
daa
push
xchg
mov
in
vmovd
xor
lcall
fnstcw
mov
push
push
movsl
in
xlat
das
fyl2xp1
cmp
sub
push
cmp
addl
mov
fists
mov
sti
cwtl
push
jno
lods
xor
leave
sub
inc
push
or
jne
sbb
aas
imul
adc
insb
cmpsl
adc
es
add
mov
aam
sar
mov
push
and
lcall
movsb
fstl
push
jge
mov
pop
movsl
frstor
jmp
inc
xor
into
leave
mov
jge
pop
addr16
mov
sbbl
mov
out
pop
cmpsl
xchg
dec
andl
or
sub
jmp
or
jecxz
popa
dec
add
lahf
ss
lock
lds
dec
pop
fidivrs
pop
test
push
cmp
daa
add
ds
inc
mov
jmp
in
repnz
jbe
daa
xor
jae
int
fldl2e
dec
fiadds
nop
push
xchg
into
sbb
les
jle
imul
adcl
addr16
push
lret
jg
and
pop
jg
cltd
mov
xchg
add
call
sbbl
clc
push
in
mov
scas
fs
xchg
sub
mov
xlat
jge
fildll
pop
arpl
sub
push
push
mov
pop
stos
and
daa
es
jae
cmp
add
ljmp
fwait
or
out
pop
pop
lahf
dec
loope
dec
jge
dec
sub
leave
push
pushf
jle
sub
xchg
xchg
jb
ret
mov
neg
fldcw
test
push
push
aaa
cmp
push
cld
add
aas
mov
ja
out
sub
and
test
stos
pop
stos
mov
aad
pop
fwait
divb
cmp
loop
and
pusha
ss
lds
data16
sahf
lock
enter
xor
inc
lds
dec
mov
dec
dec
repz
std
dec
xchg
xchg
jp
xor
lods
repz
jmp
notl
pop
sbbb
push
mov
adc
push
inc
inc
cld
pop
cltd
aas
fs
fadds
icebp
inc
jbe
jb
dec
dec
filds
and
pushf
shrl
lahf
xor
lods
xor
mov
stos
mov
int3
and
and
ljmp
insl
ja
inc
es
inc
lret
ret
frstpm(287
std
or
out
sub
rcrb
cmp
loope
mov
jb
sbb
sbb
pusha
testb
pusha
mov
fsubp
jle
scas
push
hlt
jae
add
dec
jmp
ljmp
int3
push
mov
jo
inc
loope
cmp
add
test
sub
jo
fcoms
cmpsl
out
xchg
sbb
sbb
mov
inc
rol
pop
add
mov
ret
push
loopne
jmp
sahf
or
jecxz
jecxz
pop
or
dec
loop
jge
pop
sub
jl
dec
dec
mov
cmp
sbb
mov
cmc
push
imul
inc
add
leave
pop
dec
dec
sbb
lret
testl
test
sbb
aad
pop
into
enter
ror
aaa
aam
imul
insl
les
xor
push
es
sbb
sub
movsb
shrl
pop
cmp
sub
mov
lods
jnp
aaa
stos
dec
mov
pushf
das
sub
jbe
cs
inc
ljmp
ret
pop
jae
and
pop
xchg
in
test
and
dec
push
dec
or
je
in
lods
inc
xchg
sbb
push
sub
cmp
orb
jge
and
jecxz
sbb
sbb
inc
add
int
hlt
mov
jmp
lds
xor
xchg
push
dec
lock
cmpsl
mov
push
push
xchg
outsb
fidivrs
mov
stc
ds
insl
in
pop
sbbb
fidivl
ret
xor
fwait
xchg
push
mov
or
std
mov
testl
stos
les
popf
dec
add
outsl
cltd
movsl
cmp
mov
hlt
adc
sub
out
jecxz
inc
push
stos
shrl
dec
pop
or
insl
push
xchg
ficoms
jo
cltd
mov
or
cmp
xlat
cmp
jl
mov
leave
sub
mov
cmp
inc
pop
cwtl
out
mov
mov
loope
outsl
insl
jae
jo
dec
xchg
adc
dec
jmp
jae
sbb
rorl
cli
xchg
in
in
das
cmpsl
add
xchg
pop
sbb
cmpsl
jle
mov
paddusb
ja
imul
subl
jecxz
add
fldenv
dec
mov
push
inc
jmp
and
fists
mov
icebp
cmp
daa
loop
loopne
dec
adc
sub
inc
mov
xor
xchg
mov
fwait
mov
addr16
pop
push
mov
aam
dec
mov
insl
rep
scas
call
jmp
sahf
jge
mov
mov
faddl
inc
in
push
cmpsl
out
add
nop
mov
cs
mov
push
and
std
xor
lods
inc
sub
cli
jne
lret
icebp
fisubrl
mov
mov
or
push
pushf
ja
leave
outsb
clc
sti
jne
jno
pop
add
push
dec
clc
push
test
sbbb
dec
loopne
scas
cwtl
mov
dec
xor
xor
insb
xchg
pop
pusha
stc
in
in
arpl
push
out
or
ljmp
or
jmp
xchg
bound
lret
fidivrl
push
mov
pop
gs
out
subb
jbe
push
iret
adc
fidivrl
je
int3
dec
mov
jg
std
scas
in
mov
mov
push
add
jp
lea
adc
push
sti
mov
idivb
out
mov
std
popl
sub
in
imul
xor
xchg
mov
lock
test
fwait
jle
push
add
cmp
popa
xchg
aam
out
mov
test
push
push
rcr
in
and
xor
dec
test
dec
adc
loop
mov
daa
pop
out
dec
lds
cmp
lds
movsb
int
cmp
mov
pop
out
sbb
xchg
dec
sbb
lret
in
out
cmc
jne
sub
pop
mov
incl
add
add
lret
and
rcll
loopne
jp
or
sahf
adcb
ficomps
in
mov
sbb
imul
jne
mov
adc
push
ss
test
aaa
hlt
mov
jg
lods
enter
bound
repz
in
push
addr16
inc
mov
addr16
shrb
pop
loopne
mov
jecxz
jo
iret
add
in
cli
sub
push
loop
out
in
jae
dec
cs
sub
es
xor
sarl
into
push
loop
pop
xchg
bound
cmp
jnp
imul
pop
enter
daa
dec
inc
mov
insl
push
out
ds
ret
insl
cs
jmp
subb
idivb
fsubr
inc
mov
adc
les
jo
divl
jl
and
sbb
hlt
jne
cmp
lods
sbbl
sub
loope
shll
sbbl
xor
pop
jl
xchg
pushf
xor
ljmp
call
fs
mov
in
mov
and
xor
push
mov
lock
inc
xlat
stos
xchg
mov
addl
or
insb
dec
lret
dec
jns
imul
and
dec
sbb
sti
popa
xchg
scas
xchg
sbb
cmp
imul
into
and
push
dec
in
mov
xchg
fists
mov
mov
jl
pop
aas
movl
leave
pop
dec
loopne
sbb
out
lret
xor
aam
jns
push
jp
cmpsl
scas
bound
rorl
cmp
push
push
mov
testb
jb
sub
mov
iret
add
mov
mov
loop
mov
fstpl
call
fsubp
jle
adc
int
add
mov
jg
mov
lods
xlat
scas
pop
aad
cmpsl
jg
mov
inc
stos
xor
add
fnstenv
aad
cmp
push
testl
pop
adc
jp
int3
addr16
daa
fidivrs
jns
dec
xor
adc
test
push
pop
dec
mov
and
sbb
push
imul
mov
or
in
repnz
outsl
inc
add
je
sahf
sbb
push
pop
or
cwtl
negl
scas
xchg
push
inc
lret
call
cmp
xchg
inc
lock
inc
je
mov
xchg
fdivrs
lret
jns
les
out
sub
inc
mov
xchg
aaa
stc
enter
pop
inc
stc
cmp
sub
scas
ja
fisubrl
jne
mov
jbe
add
ret
outsl
lcall
sahf
test
sbb
in
adc
xchg
sar
jne
push
loop
bound
cmp
insl
xchg
mov
pop
pop
sbb
imul
jl
popa
ds
sub
cmpsb
rcl
les
stos
aad
cs
in
jp
sahf
ret
pop
shlb
bnd
scas
daa
in
mov
push
ret
sub
std
sbb
inc
jo
call
add
and
leave
fldcw
jnp
arpl
sbb
adc
shlb
jg
daa
mov
das
das
mov
push
mov
aam
jecxz
pop
ror
xchg
sub
mov
jecxz
push
adc
arpl
inc
mov
xor
mov
mov
sbb
not
movsl
mov
fmull
sub
or
lcall
push
dec
sub
cmp
push
xchg
xchg
ljmp
cmc
mov
or
ret
ffree
pop
mov
iret
push
add
mov
in
xchg
pushf
pop
popf
iret
sbb
push
jae
dec
fildll
sub
mov
dec
xor
je,pt
push
out
xchg
lods
repz
out
fcomip
adc
or
aad
adc
in
rcr
mov
mov
jnp
jecxz
mov
xor
cwtl
and
xchg
or
dec
cwtl
pop
lods
inc
js
jo
shlb
xchg
movsb
jns
mov
mov
mov
mov
xchg
iret
sub
popa
out
mov
xchg
push
outsl
lret
ds
pop
in
mov
fmull
xchg
std
pop
clc
add
jno
fwait
repnz
jno
rcrl
test
xchg
pop
mov
jno
data16
jmp
mov
rcrl
mov
xchg
push
out
push
cmp
pand
inc
pop
adcl
movsb
xchg
inc
out
inc
sub
and
clc
mov
xchg
or
ret
outsl
cmc
mov
mov
in
sbb
mov
adc
shrb
mov
mov
fidivrl
push
scas
xchg
and
xchg
xor
jno
lea
call
fistpll
lods
sub
adc
jae
mov
xor
adc
ja
mov
fildl
cmpsb
adc
cmp
cs
orb
pop
ss
mov
aaa
pop
mulb
cld
mov
push
cmp
roll
inc
insb
iret
dec
mov
and
xchg
mov
pusha
sbb
jne
mov
cld
std
cmp
jmp
in
jg
mov
mov
push
hlt
jmp
jo
call
xor
mov
push
in
mov
ficoml
jbe
pop
inc
scas
inc
popa
jnp
leave
lahf
stos
mov
lods
arpl
jbe
xor
inc
pop
sbb
and
lds
jno
fnstenv
pusha
jge
and
pop
popa
out
test
iret
subl
or
call
push
inc
arpl
push
dec
rcl
jns
test
add
sbb
aaa
sahf
pop
mov
cmp
test
fbstp
jp
std
and
jne
jmp
incl
nop
test
push
push
push
jl
ss
mov
fcompp
jo
inc
jecxz
shll
cmp
push
les
loope
sub
xor
sub
out
addr16
add
and
lods
sbb
in
outsl
test
popa
out
or
int3
ret
cs
cltd
jno
test
or
xor
sub
sub
dec
xchg
jg
daa
lods
add
jne
lods
push
imul
jbe
mov
test
addb
inc
dec
int3
xchg
aad
jae
xchg
pop
icebp
or
dec
in
imul
fstl
push
cli
pop
jecxz
inc
cmp
andl
pushf
sub
xchg
aaa
push
out
mov
frstor
xchg
fbstp
push
int3
mov
push
in
movsl
in
repz
fs
lcall
mov
ret
add
xor
jns
push
das
movb
or
mov
adc
mov
out
lods
mov
adc
ss
andb
mov
push
andb
xor
insb
outsl
push
shrl
xchg
test
outsb
loop
lret
add
or
jle
mov
jmp
inc
mov
fidivrl
mov
sub
out
stos
push
xchg
pop
adc
cmp
ss
out
inc
sub
ja
pop
test
add
xor
sub
test
adc
lods
mov
popa
sub
test
incl
cmc
push
or
push
das
pop
or
mov
imul
stos
cmp
call
aam
xchg
dec
dec
and
fistpll
pop
jmp
lret
stos
push
popaw
xchg
mov
cmc
fdivl
adc
imul
sbb
hlt
add
in
inc
jae
ja
or
je
sub
pop
cmpsb
sbb
aad
sbb
aam
add
test
xlat
xchg
sbb
loopne
idivl
pop
mov
faddl
je
aaa
mov
xor
inc
data16
jae
das
mov
sub
lcall
cs
inc
dec
lahf
xchg
ret
xchg
es
dec
xorb
scas
stos
mov
pop
mov
pop
loopne
ljmp
mov
sbb
shll
adc
dec
xor
mov
adc
lret
push
pushf
ja
push
fcoml
test
mov
add
shr
and
mov
aad
cmp
imul
xchg
push
mov
aad
and
leave
test
pop
jb
rorb
fs
fcomip
bound
cwtl
fcmove
leave
insb
movsb
cmp
sti
push
jbe
lods
pushf
test
call
or
ja
push
imul
jle
dec
fisttps
sbb
ds
xor
push
jne
xorb
mov
pop
andb
xchg
cmp
jecxz
xchg
or
mov
pop
addr16
rclb
pop
int
xor
fucom
jb
dec
inc
add
in
cmp
int
sbb
sub
aad
movsl
les
movsb
loope
vsqrtss
cmp
jg
or
cmpl
adc
rol
pop
call
sarb
movsb
mov
sbb
rcrl
jmp
orl
scas
lds
jecxz
ret
dec
icebp
fucomip
cs
xor
xchg
xchg
mov
cltd
enter
iret
frstor
sti
pop
add
push
inc
inc
enterw
lahf
movsl
fnstsw
test
mov
adc
fdivs
fdivrl
into
inc
out
jg
das
pop
jno,pt
jge
gs
testb
xchg
xchg
shrb
daa
lock
bound
movsb
in
subl
mov
stc
popf
in
fstpt
rolb
movsl
push
sub
add
push
jecxz
test
out
cltd
cmpsb
repnz
fucomip
imul
insb
dec
cmpsb
mov
dec
sub
mov
push
push
or
stos
adc
cwtl
gs
mov
mov
mov
out
rol
cmp
arpl
lret
cmp
ret
ds
mov
push
jecxz
or
pop
mov
push
imul
jb
mov
mov
mov
xchg
stos
xor
faddl
aaa
jg
push
addr16
sahf
adc
xchg
mov
jo
loopne
cmpsb
lret
popa
add
sub
lret
jg
push
xchg
mov
push
movsl
push
in
inc
jo
je
fisubrs
add
cmc
push
dec
cwtl
rcrl
xlat
loop
pop
cld
fdivrl
out
sbb
jmp
jnp
out
jmp
leave
filds
jge
out
mov
outsl
inc
jg
dec
sahf
mov
shl
push
and
xchg
xchg
sbb
mov
shlb
fsubs
cmp
filds
pop
fstpt
jbe
enter
mov
aad
adc
push
sar
add
push
inc
minps
std
aas
imul
inc
cmpb
enter
bound
cmp
dec
aaa
and
out
xor
mov
mov
hlt
jge
cmp
xor
ret
mov
mov
ljmp
jl
pop
fwait
cmpsb
jae
fdivr
shrb
outsb
in
pusha
push
mov
or
out
mov
test
sbbb
pop
movsb
push
adc
adc
ret
sbbl
sbb
sub
push
mov
pop
arpl
fsubrp
jb
inc
pop
dec
push
test
mov
or
mov
jns
pop
shlb
mov
sbb
push
jg
pop
sub
xchg
stos
jmp
in
ss
out
fwait
and
pop
ds
xorl
push
jge
jge
jns
sub
mov
cmp
fisubs
iret
jb
popa
inc
jne
mov
sub
jns
gs
aas
les
push
cwtl
out
por
pop
xor
push
cwtl
bound
fildll
jns
mov
shlb
push
xor
mov
rcll
pop
jle
test
xchg
xchg
loop
pop
je
ja
dec
xor
adc
scas
inc
test
je
or
lahf
jg
ljmp
mov
shr
jmp
xlat
nop
jl
dec
pop
mov
mov
aad
aad
pushf
sbbl
cmpsb
daa
leave
mov
adc
push
cmp
and
pop
out
dec
adc
adc
and
out
fimuls
mov
xchg
push
aas
jle
add
pop
je
pop
xor
aaa
pop
cmpb
roll
lods
mov
sub
sub
aam
mov
les
add
sbb
dec
test
clc
scas
dec
push
and
lahf
xor
imul
adc
sbb
jb
fldcw
rcrl
aaa
ds
xchg
gs
adc
adc
mov
mov
dec
push
mov
or
ja
xchg
mov
rcrl
scas
daa
xchg
mov
mov
dec
loop
jecxz
orl
lds
rcl
add
shll
sti
cmpsl
inc
adc
fimuls
je
test
fisubl
sbb
mov
push
jnp
push
aas
push
ficompl
mov
add
sub
outsb
insb
sub
add
jmp
sbb
gs
cmpsb
sbb
mov
insl
jp
mov
pop
bound
jecxz
lods
ljmp
imulb
fcmovnu
pop
adc
cmpsb
ljmp
mov
jo
jns
pop
jecxz
enter
sub
xlat
and
adc
test
stc
mov
insl
test
rcll
jle
xchg
cmp
sahf
adc
lret
mov
mov
cwtl
shlb
lock
mov
pop
jnp
pop
movsl
jnp
icebp
cltd
dec
jecxz
in
ret
mov
mov
das
xchg
andl
aas
stos
scas
inc
or
cmp
jge
call
lock
pop
cmp
rolb
inc
fdivrp
xchg
add
and
fadds
nop
dec
inc
lea
mov
mov
xchg
arpl
pop
push
ret
or
cmp
mov
lahf
pop
fnstenv
ljmp
mov
lret
cmp
sbb
add
xor
add
sbbl
mov
fnstcw
int
mov
adc
stc
add
push
cmpsl
daa
in
mov
ficoml
loope
int3
push
jnp
cltd
sub
xor
addr16
pop
mov
mov
cmp
mov
lcall
shrb
mov
push
add
push
mov
loopne
mov
pushf
mov
movsl
mov
and
mov
repnz
jo
adc
leave
sbb
mov
cltd
sub
lret
cmpsb
lock
rorb
in
sbb
mov
adc
sub
test
mov
ficomps
sub
aam
cwtl
pop
xor
sbb
fs
jae
sbb
xchg
and
popa
xchg
mov
fidivrl
mov
popa
or
lcall
pop
shlb
mov
jg
push
movsl
push
ja
dec
mov
mov
fsubrp
popw
push
shrb
push
inc
in
std
mov
out
add
add
xchg
movups
lahf
lds
mov
lea
mov
rcl
pop
mov
pop
jns
xchg
pusha
inc
cli
inc
push
inc
jne
or
mov
sahf
ljmp
sbb
enter
cmp
roll
and
out
out
sarb
ja
fs
inc
cltd
sbb
call
dec
leave
mov
sbbb
add
jo
sbb
test
or
stc
pop
cmp
out
lret
stc
xchg
jb
shl
dec
sub
mov
mov
xchg
leave
in
add
loop
dec
dec
pop
jae
sbb
xlat
lret
cmpb
jmp
stc
clc
popf
test
leave
es
pop
cltd
sbb
dec
adc
fisttpll
add
inc
fnstcw
mov
push
test
bound
and
in
call
cltd
bound
lcall
inc
out
fildl
and
aad
test
xor
mov
cmpsl
dec
and
jno
mov
int
mov
cmp
scas
sahf
push
mov
ficomps
sbb
mov
cmp
sub
sti
rcr
sub
mov
cmp
js
xchg
mov
adc
sbb
adc
push
in
push
push
xchg
rcrl
mov
mov
leave
popa
pusha
add
jno
mov
cmp
inc
and
into
mov
and
cmp
xor
add
stc
icebp
add
jle
xchg
mov
fcoms
es
mov
sbb
cmpsl
out
adc
addr16
cwtl
xor
add
push
testb
test
inc
dec
fcmovu
and
into
xchg
push
in
sarl
in
pop
inc
pop
sbb
xor
ror
dec
std
in
sbb
jbe
or
fiadds
dec
mov
xor
mov
dec
mov
jae
dec
pop
out
nop
mulps
fldenv
jecxz
mov
adc
stos
mov
cmp
or
dec
mov
out
movsl
push
adc
shll
mov
adc
pop
pop
cmp
mov
iret
adc
test
in
daa
sbbb
je
jmp
jno
call
cmpsb
loopne
loope
jg
call
and
dec
js
jp
xor
xchg
xchg
fwait
xor
mov
cltd
rcl
adc
cmpsb
movsb
test
pop
lock
mov
icebp
fisttpl
cwtl
mov
jle
test
int
dec
jg
xor
mov
stos
cmp
popf
or
or
mov
jnp
cwtl
popf
loop
mov
adc
lods
mov
jmp
scas
les
insl
sbb
sbb
jo
and
stos
xchg
subl
xor
mov
aaa
push
mov
popf
ds
stos
pop
push
adc
cmp
pop
xor
jge
pop
mov
cbtw
dec
pop
mov
into
cmp
mov
test
ss
sub
jp
ret
pop
das
adc
test
lea
shlb
movsl
pop
push
ror
cli
shll
inc
out
iret
gs
insb
shrl
sub
add
imul
lods
mov
lock
enter
jae
movsl
popfw
daa
ret
xor
mov
fs
jge
cli
daa
jmp
jns
dec
filds
pop
cmova
movsl
dec
loop
outsb
mov
cmp
repz
test
adc
push
mov
test
ror
xor
repnz
or
sbb
stos
xor
pop
mov
leave
daa
rep
xchg
gs
mov
lahf
add
mov
mov
dec
sbb
test
imul
repnz
movsl
and
push
xchg
loope
xchg
xor
sbb
mov
aas
mov
xor
xor
icebp
arpl
pop
loop
aas
enter
lods
jmp
add
aad
dec
nop
fcmovnu
lock
cmp
inc
mov
jb
cli
mov
ja
cwtl
test
nop
dec
or
clc
mov
fidivrl
sub
jecxz
in
cltd
or
xlat
ljmp
out
out
or
push
paddw
imul
and
out
stc
or
int3
cmp
sbbl
call
or
mov
ljmp
pop
jae
or
in
dec
jns
std
or
lods
pop
stc
sahf
out
sbb
cmpb
and
repz
add
cmp
out
mov
sbb
addr16
inc
int
jmp
gs
jno
sub
and
das
pop
cwtl
pop
outsb
test
lahf
fisubrl
loopne
xor
mov
insb
cmp
sbb
adc
lods
xchg
mov
pop
movsl
cmp
arpl
dec
jb
inc
cltd
fsubrs
cmp
sti
ficompl
sbb
sbb
data16
pop
mov
cmp
cmpsl
nop
lret
cld
cmc
aas
adc
fistpll
daa
jb
aas
push
xchg
lret
sti
mov
or
loopne
cmc
sub
fbld
sbb
cmp
add
rcrl
pop
pop
js
push
ds
lods
orb
mov
push
stos
jg
mov
mov
adc
scas
mov
and
int
ss
shlb
sbb
pop
cmpsl
shll
addr16
scas
dec
jnp
mov
jns
pop
and
shrl
divb
cmp
movsl
sbb
dec
mov
sbb
mov
fistpll
in
pop
clc
fisttps
push
push
xchg
data16
pop
pop
subl
in
push
inc
cli
or
sti
mov
ljmp
test
sbb
out
aam
and
jne
aas
adc
dec
outsb
inc
popa
cli
into
mov
adcl
aam
rol
into
xorl
jmp
filds
xor
mov
and
pushw
enter
mov
jnp
jp
pushf
xor
push
inc
jnp
lahf
xor
cmpb
pop
mov
jg
xchg
fsubrs
enter
es
pop
sbb
sbb
xchg
movsb
ds
sub
cmp
adc
push
sahf
enter
out
jle
jne
enter
fwait
js
dec
dec
clc
cltd
and
dec
roll
inc
out
sub
js
test
sti
lret
sub
dec
adc
incl
scas
add
insl
sub
push
push
or
movsb
mov
jecxz
pop
int3
push
inc
fs
or
jno
mov
dec
push
loope
rorl
mov
inc
xor
cli
push
pop
push
mov
mov
sbb
inc
sub
aam
mov
gs
mov
xor
loope
inc
push
test
addr16
inc
sub
mov
aad
pop
hlt
loopne
ja
xchg
dec
jnp
jp
push
inc
aad
cwtl
mov
mov
push
xlat
ret
sti
xchg
cmc
js
inc
mov
mov
cmp
add
push
fstps
dec
in
jo
or
xchg
sub
divl
dec
dec
xchg
cmp
mov
inc
push
push
out
mov
jmp
and
mov
decb
pop
dec
adc
push
pop
das
cld
sub
mov
mov
push
jp
push
shll
call
lock
lods
jmp
mov
popf
push
dec
imul
dec
ds
test
not
cmpsl
lods
xor
subl
cld
inc
mov
pushf
cwtl
jns
leave
stc
out
test
push
fidivs
sub
test
dec
bound
insb
icebp
outsl
pop
icebp
mov
dec
js
jle
dec
add
pop
loopne
dec
cmp
jp
pushf
stos
es
repnz
and
popf
push
nop
orl
push
pop
cmp
int3
cmpb
sbb
jmp
mov
add
sub
xchg
shlb
imul
ja
insl
mov
popf
ss
lock
xor
orps
lds
lods
sub
mov
jnp
das
sub
sub
mov
fs
insb
clc
arpl
inc
mov
sub
inc
jecxz
dec
add
shlb
inc
push
sbb
out
sub
sbb
cmp
push
popa
outsl
push
ss
inc
fsts
jae
pop
jecxz
daa
lcall
and
pop
stos
mov
inc
or
das
int
pop
add
enter
xor
dec
movsl
mov
mov
pop
push
outsb
fists
xchg
mov
into
mov
adc
mov
call
pushf
shll
jecxz
sub
and
andl
in
cmpsb
push
pop
test
mov
int
adc
inc
cmpsl
xchg
add
or
scas
ds
rclb
inc
xlat
xchg
inc
sbb
dec
movsb
xchg
mov
or
pushf
add
insl
sub
jp
in
push
mov
and
jae
insl
cld
or
enter
andl
loop
es
mov
ss
movsb
jnp
xchg
fwait
ss
add
inc
cmp
sub
adc
pop
sahf
cmp
cltd
sub
jo
scas
push
sub
push
pop
xchg
popa
clc
ret
sub
jmp
fnstsw
mov
mov
adc
ss
sub
xchg
and
lods
sbb
nop
mov
mov
lcall
xchg
dec
lahf
repnz
neg
sbb
pop
jae
shld
or
add
scas
insl
test
pop
dec
jo
jnp
jne
xor
push
inc
outsb
inc
popa
imul
iret
in
test
inc
bound
xlat
xchg
xchg
sbb
or
lahf
ss
jle
mov
sbb
stc
ret
adc
xchg
jns
stos
jo
sbb
cmpsb
and
bound
icebp
mov
into
lret
cmpsb
adc
pop
hlt
aas
ret
daa
mov
das
pop
inc
inc
int
out
jno
into
popa
mov
xchg
adc
sbb
mov
push
ds
cmp
nop
mov
outsl
or
int3
das
dec
mov
addr16
jmp
movlps
loope
cmp
xor
int
add
xor
dec
enter
dec
sbbl
adc
int3
outsw
sbb
pusha
mulb
dec
fwait
repz
sbb
mov
loop
ret
test
push
das
test
mov
dec
imul
inc
sub
mov
xchg
in
into
lods
sbb
sbb
xorl
dec
hlt
pop
dec
inc
push
out
movsb
inc
hlt
xorl
mov
dec
mov
lock
jns
cmpsl
fwait
push
add
iret
adc
jnp
out
test
das
mov
stc
insl
gs
daa
bound
sarl
popl
dec
movsl
cmp
je
in
sahf
ret
jg
mov
shl
stos
or
xchg
mov
sub
pushf
jmp
mov
push
jo
and
xchg
test
repz
adc
mov
and
xchg
imul
imul
outsl
push
and
add
shl
add
clc
sbb
leave
mov
test
mov
push
mov
movsl
aas
push
stos
test
pusha
inc
xlat
push
test
xor
sub
push
aad
mulb
ret
call
push
xchg
pop
mov
mov
push
outsl
sarl
pushf
psubw
xorl
pop
pusha
out
pop
mov
roll
push
mov
sbb
mov
imul
aas
lock
test
loop
mov
idivl
sub
cmp
mov
sub
xchg
ret
xor
mov
ror
insl
pop
inc
stc
inc
add
das
or
mov
nop
push
popf
hlt
nop
shlb
dec
dec
popf
or
jle
clc
mov
mov
push
sti
jle
push
push
outsl
loope
inc
pop
sub
jp
subl
xor
aaa
mov
bound
push
cmp
cmp
stos
push
xor
sbb
add
adc
setp
mov
cld
je
mov
and
and
dec
cmp
add
imulb
out
add
jmp
flds
or
shll
shll
fwait
pop
js
js
pusha
inc
lea
loopne
outsl
test
add
pop
mov
cwtl
fs
in
xchg
sbb
pop
mov
or
dec
add
mov
lods
inc
lock
lret
enter
adc
push
icebp
insb
dec
xlat
sahf
xor
cmp
jbe
int3
inc
push
sub
lods
test
popf
int3
pop
xchg
or
xchg
in
inc
cmpsl
inc
divb
jp
das
xchg
fbstp
push
pop
xor
and
out
sbb
mov
add
and
adc
pop
roll
pop
mov
repnz
mov
cmpsl
fdivs
pop
movsl
arpl
imul
or
cmp
leave
sbb
insl
pop
and
sbbb
xchg
std
jp
mov
xor
lds
shrl
inc
adc
jmp
pop
adc
mov
lea
xchg
push
push
mov
test
mov
xor
and
mov
leave
xor
dec
lahf
mov
add
pop
dec
dec
into
into
incb
cwtl
das
cwtl
aas
addr16
mov
mov
fxch
pop
leave
das
add
sbb
shll
inc
sbb
or
pop
sarb
sub
les
jb
iret
enter
jle
nop
adc
sbb
xchg
hlt
sbb
aas
jmp
mov
aas
int
aas
pop
scas
push
inc
xlat
push
jno
xchg
lret
popf
jmp
adc
and
frndint
cltd
xor
shlb
out
sarl
cltd
outsb
or
xor
je
sub
xchg
scas
mov
clc
arpl
cmp
imul
xchg
jns
sbb
jae
and
and
mov
cli
rorb
int3
push
xor
pusha
mov
add
test
mov
jmp
or
mov
pop
xchg
mov
push
inc
call
pop
and
loop
xor
arpl
pop
shl
xor
xlat
sbb
andb
pop
scas
push
jae
or
stos
mov
loope
subl
jmp
dec
incl
or
dec
fldt
repz
xchg
sub
out
dec
pop
sub
ds
dec
pop
sahf
push
fucomp
inc
fisttpl
mov
insb
and
pop
jl
fimull
dec
xchg
cmpsl
jge
cltd
inc
cvtpi2ps
dec
cmpsb
jno
mov
inc
cwtl
push
xor
decb
pop
mov
jo
cmp
imul
push
jecxz
repnz
pop
in
test
cwtl
jae
adc
xor
in
and
pop
repnz
ret
jae
and
inc
out
xchg
mov
flds
xor
hlt
cwtl
mov
xchg
stos
or
mov
push
push
into
lock
mov
or
and
loop
jns
scas
dec
or
adc
push
jo
jns
shr
dec
dec
lock
mov
xor
mov
or
push
xor
and
shll
shrl
into
in
icebp
out
dec
mov
in
fistps
loopne
or
xchg
cmpsl
mov
cmpl
add
mov
pop
aam
test
int
push
inc
mov
scas
movsl
insl
shl
leave
push
adc
inc
xchg
and
sub
loope
mov
addb
jo
add
push
and
ss
mov
push
mov
scas
and
rol
push
fbld
out
cmp
les
enter
rclb
fcomps
or
mov
mov
icebp
insb
int3
pop
mov
push
adc
test
mov
in
or
dec
add
xchg
movsb
inc
adc
into
das
inc
pop
outsb
stc
fs
in
outsb
cwtl
dec
cmp
in
add
push
sbb
xor
add
orb
mov
mov
push
dec
in
or
ljmp
ss
das
and
addl
adc
sbb
test
mov
aad
xchg
mov
leave
leave
push
rorb
aam
mov
sub
push
xchg
sub
jmp
call
cmp
insb
sbbb
inc
pop
pusha
nop
dec
mov
int
fdivs
lret
dec
xchg
gs
adc
push
lret
xor
jecxz
adc
inc
jne
mov
mov
addr16
inc
popa
mov
dec
bound
sbb
xchg
cmp
sbb
mov
fwait
mov
push
addr16
test
mov
ret
test
mov
out
adc
lahf
loope
xbegin
dec
cmp
cwtl
sub
push
jb
mov
add
add
mov
xor
xorb
js
pop
int
add
push
adc
clc
sub
jb
fsubrl
jns
cmp
mov
and
and
xor
mov
mov
cmp
mov
dec
repnz
insl
orb
mov
hlt
jb
aaa
movsb
adc
mov
push
mov
xchg
jns
iret
int
dec
push
add
aam
dec
outsb
cli
and
mov
out
sarl
mov
movsb
bound
in
aas
std
and
jecxz
jle
jns
sarb
mov
cmpsl
stos
xchg
fstps
dec
and
adc
fidivs
jns
dec
stos
jne
or
addr16
and
fisubs
test
mov
xchg
push
fiadds
test
test
ja
mov
jl
clc
cmp
clc
xchg
dec
fcoml
xor
adc
ja
loope
dec
mov
mov
lret
mov
js
and
hlt
into
imul
pop
push
sbb
xchg
jb
negb
bsf
push
sbb
das
stc
and
jmp
rclb
mov
or
pop
sbb
in
fwait
sbbb
shlb
sub
aas
seto
pop
mov
fs
loopne
sub
dec
pop
push
out
lods
fsubl
cmp
int3
sub
loop
pop
jmp
mov
push
and
push
test
jnp
mov
mov
cltd
push
lcall
js
cmp
popf
adcb
jo
sar
xor
outsb
out
lods
push
decb
bound
popf
cmpsl
mov
repnz
aas
stc
mov
fists
mov
cmc
jmp
cmp
jg
mul
push
or
sub
adc
test
out
shrl
mov
cwtl
outsl
pop
es
movsl
idivb
mov
adc
es
loopne
fwait
sub
mov
divb
sub
movsb
fdivp
dec
pop
sub
sub
or
cmpl
pop
ljmp
xor
fwait
cmp
add
outsb
mov
arpl
aad
push
cmc
mov
push
xor
jo
or
push
push
push
repnz
mov
dec
pop
cmpsb
push
fs
into
cld
js
jl
add
cltd
cmp
mov
cwtl
or
aad
lcall
in
stos
pusha
lock
sub
test
mov
mov
fs
push
cmpsl
rcl
sub
pxor
adc
shll
xchg
jle
dec
or
clc
inc
xchg
add
jnp
shl
loope
adc
push
es
je
flds
add
or
mov
dec
fsubl
pop
pop
scas
loope
pop
outsl
fnstcw
adc
jnp
ss
sti
xor
pop
movsb
mov
push
xchg
flds
rcl
imul
rcrl
jns
jne
in
sbb
repz
inc
mov
arpl
xor
cmpsb
mov
mov
decl
aad
insl
shlb
push
add
cmp
hlt
jne
and
and
sbb
fadds
mov
shl
jae
ret
mov
sbb
out
push
notl
fnstenv
cld
subw
cmp
leave
pusha
loopne
les
mov
sub
das
repz
sub
lahf
mov
cmc
mov
adc
in
testl
lods
inc
mov
push
mov
data16
out
add
insb
jnp
scas
nop
fimuls
jg
jbe
add
cmpsb
cmc
push
lods
mov
sub
outsb
inc
or
mov
pusha
insb
shll
sub
xchg
jmp
xchg
add
testb
jg
sbb
lods
ret
lret
bound
ror
jnp
mov
dec
mov
fldcw
sbb
int3
jg
rcr
xlat
jecxz
ljmp
sbb
ds
sbb
cmp
and
cmp
xchg
inc
xor
fstpl
out
hlt
jecxz
nop
lea
xor
mov
push
adc
arpl
into
imulw
popa
mov
lret
das
sub
dec
mov
xlat
push
sahf
inc
cmp
fwait
cmpsb
repnz
aam
inc
inc
and
xchg
add
scas
cwtl
or
adc
and
xlat
loope
pop
push
cmp
outsl
movsl
mov
adc
push
nop
push
enter
mov
cmp
xlat
ret
in
sub
sti
cld
loop
sub
and
das
mov
or
cmc
push
mov
ret
ret
outsl
daa
mov
aam
inc
dec
gs
aad
xchg
pand
movsl
dec
sub
sbb
clc
cmpsl
cmpsb
adc
sti
sbb
clc
jne
frstor
scas
cmp
pop
ss
inc
sub
mov
xchg
mov
adc
mov
jnp
lret
pop
pop
repnz
sbb
xchg
push
in
mov
inc
mov
shl
mov
pop
mov
fmull
jp
pushf
mov
enter
xchg
sub
stos
or
add
pop
mov
iret
xor
xor
test
push
xchg
pop
push
dec
jmp
dec
test
jp
jmp
mov
jo
nop
int
xor
and
and
mov
es
adc
add
sbb
xchg
mov
jge
jmp
xor
call
sbb
jae
xchg
out
sahf
mov
sti
xchg
dec
sti
cltd
sbb
daa
jle
stos
sbb
stos
push
cltd
rcll
jl
push
hlt
mov
out
addr16
testl
divb
jl
push
sbb
stos
fwait
rcrl
je
fsubrl
pop
xchg
xchg
jge
std
test
cs
adc
repnz
and
stc
jl
enter
pop
jg
inc
mov
leave
sbb
fs
dec
gs
xor
loope
imul
out
fwait
test
inc
mov
jbe
and
or
rol
add
dec
fidivs
es
js
inc
dec
mov
adcb
ljmp
push
js
mov
ror
xor
jns
insb
xlat
mov
stos
fld1
pop
pop
cmp
jno
xchg
mov
inc
fisubl
mov
or
pop
mov
xchg
pop
push
fcomp
mov
pop
dec
mov
jnp
cli
sub
add
pop
ss
enter
pop
mov
sahf
pusha
jp
std
push
in
adc
cmpsb
dec
xor
lcall
adc
insb
shlb
push
or
mov
xchg
add
mov
scas
inc
loopne
scas
sbb
mulb
lods
pop
xchg
mov
enter
sbb
repnz
jbe
getsec
stos
mov
imul
add
cmp
in
std
test
jecxz
push
mov
jle
xor
or
push
inc
fstl
je
push
inc
ret
test
inc
sbb
rcll
push
aaa
popf
cmp
mov
inc
mov
jo
xor
dec
ljmp
mov
pop
and
hlt
leave
cmp
pop
insl
ljmp
lds
rcl
fdivl
faddl
test
mov
cmp
ds
pusha
scas
sbb
dec
add
jns
sub
inc
dec
cmp
jmp
pop
cs
xor
jl
stos
xchg
test
jae
jg
or
and
or
das
lcall
test
inc
loop
xchg
or
push
sti
fsubrl
lock
fsubrs
fdiv
shlb
add
sub
daa
pop
icebp
stos
pushf
mov
out
orb
dec
hlt
inc
divl
add
xor
stos
mov
and
xor
push
shl
sbb
jle
xor
sub
jnp
jmp
ja
mov
push
mov
sub
and
stc
and
xchg
sbb
fs
xchg
in
loope
cwtl
mov
mov
fistl
ja
cmpsb
pusha
mov
pop
push
and
repz
orb
mov
sub
sbb
mov
testl
in
jnp
mov
xchg
and
hlt
sbb
mov
shl
inc
pop
jp
imulb
ret
or
push
outsl
lods
ds
gs
mov
mov
lahf
jnp
shlb
mov
jo
stc
mov
sbb
push
jnp
sub
cld
ret
repz
xlat
enter
mov
mov
jns
xor
ljmp
mov
lea
mov
add
into
jg
and
ljmp
push
rclb
dec
mov
stos
push
int3
sbb
scas
xchg
dec
adc
dec
sti
out
or
movsb
testl
es
dec
mov
icebp
insb
les
sti
jle
jbe
jp
pop
jle
mov
lds
into
push
mov
push
std
out
inc
xor
sbb
push
cmp
mov
hlt
lds
sti
dec
push
std
insb
ret
in
negl
or
adc
dec
shrb
lock
popf
xchg
mov
push
cmp
pop
mov
mov
movsl
adcb
mov
test
inc
lods
imul
pop
lcall
pushf
adc
js
fidivrs
inc
push
or
inc
jmp
movl
pop
ret
jge
cwtl
or
pop
inc
negl
fidivrs
testl
xchg
leave
out
sub
punpckhdq
and
loope
cwtl
push
or
js
lock
and
jnp
pop
adc
insb
and
iret
retw
xchg
test
repz
xor
jnp
dec
xchg
sti
cmpsl
frstor
lcall
jbe
imul
fdivrl
iret
add
jl
fimuls
out
xlat
mov
lea
mov
push
xor
inc
push
adc
pop
cmp
in
mov
cmpsb
push
aam
xorb
enter
js
sbb
xor
icebp
add
js
add
pusha
and
jno
aas
rorb
lods
push
ljmp
mov
lahf
test
dec
fmul
shrb
push
sbb
add
sub
xor
icebp
mov
pop
test
int3
lods
cs
push
fnstenv
test
cmc
dec
lcall
outsb
popa
es
fwait
dec
in
jae
ret
ret
ss
sbb
sbb
jbe
ja
jge
dec
xchg
pusha
lcall
mov
cli
or
xchg
xor
jp
rol
push
inc
out
mov
arpl
pop
jle
sbb
out
sarl
adc
les
in
gs
call
hlt
dec
stos
imul
ja
mov
gs
stos
sbb
addl
mov
push
loopne
mov
add
or
inc
mov
xor
mov
jno
jnp
push
jmp
add
jmp
sbb
jg
adc
stc
push
mov
repnz
pop
stos
or
test
lret
fisubl
mov
pop
ds
inc
shlb
dec
in
cmpsl
bound
adc
and
lock
dec
xor
pop
inc
ficoms
dec
bswap
inc
arpl
dec
addr16
addr16
push
out
sbbl
out
sti
mov
dec
fildll
push
popf
cmpsl
dec
out
movsl
xchg
nop
push
fst
mov
adc
or
mov
sbb
les
mov
lea
insl
sahf
sub
ret
or
clc
mov
push
cmc
jg
mov
sbb
mov
mov
fucom
subb
sahf
lret
leave
cmp
iret
pushf
inc
shlb
lcall
inc
cmc
inc
mov
adc
fnstcw
aas
mov
lcall
add
inc
test
cmp
xlat
movsb
add
lock
cmpsb
into
divl
jp
push
jbe
es
xchg
push
jmp
dec
pop
push
jmp
push
lret
push
pop
lds
mov
mov
dec
loopne
movsb
add
sbb
sub
mov
xchg
push
pop
mov
fdivs
bound
xor
mov
shrb
jp
andl
imul
pop
sarb
loop
push
push
inc
out
addr16
dec
dec
jecxz
push
outsb
or
mov
cmp
dec
fdiv
adc
xor
fimuls
xchg
adcb
mov
and
sub
leave
sub
testl
incl
jno
mov
dec
int
mov
jge
jl
jo
cmp
sub
leave
ds
repz
dec
adc
movsb
inc
outsb
inc
sti
pop
out
dec
and
pop
sub
out
sub
xor
aas
mov
push
mov
mov
mov
cwtl
out
mov
sahf
cmp
jecxz
add
ds
sbb
jl
jge
sbb
inc
std
aas
jns
pop
aas
loope
push
aad
cmp
push
test
pop
ds
scas
shll
xchg
adc
and
pushf
nopl
popf
lret
jge
and
mov
mov
out
inc
dec
test
and
inc
stos
inc
js
lcall
fldenv
pop
clc
mov
pop
push
mov
mov
pop
fucomi
mov
mov
pop
cmp
adc
jbe
loopne
inc
mov
aam
push
fildl
add
mov
outsl
repz
jle
das
pop
stos
rcrl
divl
scas
and
mov
dec
test
cmp
cmp
stos
dec
xchg
jno
out
pushf
int3
cwtl
lock
mov
mov
add
pop
adc
ljmp
inc
pushf
push
lret
repz
loop
adc
jbe
inc
int3
and
cs
shlb
mov
enter
addr16
lret
test
mov
mov
push
push
push
cmp
or
sub
push
xor
mov
insb
negl
jnp
and
movsl
mov
adc
movsb
bound
or
aad
xlat
repz
or
clc
movsb
std
aam
or
pop
testb
and
cmpsl
jle
xor
mov
daa
frstor
push
cwtl
mov
sbb
call
dec
sub
and
xchg
push
cmpsb
cmovo
mov
adc
lods
repnz
push
cmp
mov
pop
mov
sbb
xlat
jbe
mov
push
adc
stos
lds
push
xchg
adc
ret
mov
mov
movsb
fdivl
loope
xchg
aas
mov
jns
pushf
movsl
sbb
outsl
mov
push
mov
dec
nop
mov
fs
push
or
or
sbb
mov
in
arpl
cld
cmpsb
jae
fistl
add
push
and
mov
pop
mov
dec
mov
sbbl
jp
sub
cmp
xor
in
repnz
sub
inc
adc
or
and
hlt
jo
add
mov
rep
loope
les
mov
xchg
jp
ljmp
or
shlb
inc
push
xchg
push
cltd
xor
movsb
int3
fs
shrb
jae,pt
outsb
pop
xchg
cmp
cmpsl
mov
inc
sti
imul
xchg
outsl
lcall
imul
inc
sub
ja
loope
xchg
fnstcw
mov
cmp
outsl
push
ss
aas
imul
enter
xor
inc
insl
cmp
push
in
mov
dec
mov
mov
test
cmp
mov
andl
hlt
hlt
mov
pop
mov
fdivr
jo
daa
outsb
add
insb
xchg
xchg
les
scas
pop
mov
jno
mov
pop
add
roll
xchg
mov
xor
or
adc
lahf
inc
dec
mov
xchg
es
and
pop
push
fcmove
into
pop
mov
jmp
into
add
pop
push
xchg
add
stos
jno
cmp
in
loopne
add
adc
mov
push
or
xor
cmp
or
test
popa
jg
filds
pop
loopne
xlat
lods
push
adc
xor
cmpsb
les
lods
and
dec
add
outsl
cmp
sbb
insb
hlt
and
and
ss
lods
mov
lock
imul
ss
imul
and
fnstcw
push
xchg
cs
inc
mov
sahf
in
mov
sarb
out
and
mov
and
push
into
lcall
and
std
cmpsl
adc
mov
push
ljmp
mov
sarl
or
rclb
pop
les
or
jmp
pop
cmp
or
mull
out
mov
pop
cmp
out
push
push
movsl
mov
stos
lock
test
aaa
stos
fwait
push
daa
outsl
lret
xor
mov
push
fimuls
lods
sub
fisubrl
cmp
movsl
loop
mov
mov
mov
sub
sahf
test
xchg
sub
popa
testb
sub
inc
inc
ret
stos
cmp
xchg
inc
fsubrl
mov
out
fimuls
fsts
sub
subb
xor
jl
fisubrl
imul
lret
adc
xchg
sbb
push
fstps
rcrl
aam
or
mov
fucom
mov
push
lds
hlt
loopne
fwait
lcall
xlat
xor
rcll
cltd
test
xchg
push
ljmp
testb
mov
shl
jle
repnz
pop
lock
add
xchg
jno
shr
mov
sbb
pushf
and
sub
fsubrs
xchg
aam
xlat
fcomip
ret
dec
push
add
push
xor
outsl
loop
or
jp
and
cmp
mov
insl
dec
aad
dec
and
imul
movsl
sti
in
and
sub
sub
jae
jl
xchg
mov
enter
dec
jb
outsb
sbb
jecxz
daa
in
out
push
aad
xor
xchg
mulb
mov
push
mov
jae
ja
enter
mov
scas
jge
pop
icebp
jb
adc
mov
add
dec
cli
sbbl
inc
and
sar
andl
test
xor
sbb
push
push
inc
bound
insb
mov
fwait
jmp
flds
ds
adc
and
add
mov
push
push
jo
or
adcw
push
pusha
adc
das
adc
xor
in
xlat
mov
cmp
sbb
or
xchg
cmpsl
ret
push
mov
mov
es
and
pop
cwtl
stos
mov
mov
jo
popa
dec
pop
cmc
xor
sbb
mov
repz
add
and
sbb
cmp
mov
fisttpl
hlt
mov
mov
push
push
pop
mov
xchg
and
add
in
xor
mov
adc
ss
dec
push
sahf
outsl
add
sub
dec
pop
pusha
cs
xor
cs
push
mov
add
popa
push
sar
mov
call
push
jb
bound
movsl
xchg
fwait
out
fsts
mov
pop
cltd
pop
lods
xor
dec
fcmovb
and
int3
ficomps
ror
push
dec
jecxz
mov
jmp
hlt
addr16
or
dec
pop
dec
or
lea
loop
push
sub
mov
mov
dec
popa
fdivl
stos
jp
pop
fnstenv
fisubrs
outsb
rcrl
mov
xor
mov
pop
and
call
out
inc
mov
arpl
ret
adc
mov
add
fwait
sti
daa
imul
dec
mov
push
inc
js
add
jb
lods
cli
push
push
inc
jmp
xor
fdivs
push
jae
leave
inc
inc
fnsave
imul
popf
adc
les
and
push
in
cwtl
mov
jmp
mov
testb
add
rclb
subb
stos
pop
outsb
fisubl
lcall
ss
sahf
sti
fildll
stos
mov
adc
sbb
sub
ret
int
out
push
mov
jae
out
fidivl
paddsw
sar
nop
outsl
push
mov
nop
pop
fistpl
xchg
daa
mov
aad
sbb
dec
dec
punpckldq
pop
ficomps
pop
mov
popa
or
sbb
push
std
or
mov
cmp
mov
push
cmp
lods
or
jle
into
cmp
push
sbb
adc
and
push
xor
outsl
jle
inc
push
jo
pop
xor
xchg
fadd
mov
sub
sub
in
dec
and
sub
add
aam
xchg
repnz
daa
inc
xor
and
push
repnz
int
mov
inc
jnp
stc
pop
dec
xchg
pop
sahf
rol
out
xor
and
iret
mov
pushf
push
jg
mov
sbb
testb
sub
out
pmaxsw
xchg
pop
xchg
lret
add
pop
xchg
pop
or
cmc
aam
das
loope
pop
lcall
inc
inc
stos
sbb
fs
jmp
mov
jo
push
mov
push
jns
and
jno
lods
jmp
pop
sti
in
lods
stos
sbb
fmul
and
pop
fs
fidivl
xlat
pushw
popa
clc
test
js
and
or
jg
je
ja
mov
mov
into
fs
cmp
jle
dec
cmc
sahf
adc
jno
cli
test
popf
mov
adcb
loop
and
pop
sahf
pop
and
dec
fimull
fwait
hlt
cmp
hlt
mov
add
popf
lahf
adc
data16
mov
or
das
data16
jge
inc
xor
sbb
inc
idivb
fdivl
std
gs
in
push
sahf
push
mov
or
cmp
pop
inc
pop
sub
pop
icebp
scas
stos
xor
adc
pushf
mov
xor
rcr
pop
cmp
add
cmc
pop
jbe
sti
pushf
in
or
xchg
sub
testl
push
iret
idivl
mov
roll
inc
cmpsb
mov
sti
add
dec
ljmp
sub
pusha
sbb
ss
ds
pop
scas
addr16
fstl
aas
movsl
jo
lods
mov
dec
shlb
mov
ljmp
mov
imul
hlt
push
sub
xchg
add
mov
cmp
incl
clc
mov
clc
aam
mov
pop
xchg
pushf
xchg
mov
in
aaa
lret
aaa
loope
and
cmc
fimuls
cmp
push
mov
push
jne
add
jne
pop
jp
add
and
lcall
push
das
add
test
push
mov
add
add
xor
mov
mov
aam
push
mov
sarb
cli
push
icebp
hlt
mov
lret
cmp
pop
push
jle
addb
scas
lods
inc
loopne
jl
movsb
mov
sub
std
or
dec
sub
pop
outsl
mov
ret
les
adc
pushf
fnstsw
fmulp
int
jnp
inc
test
fnstcw
aam
fwait
stos
and
jl
arpl
arpl
rcr
mov
jecxz
lahf
sbb
jns
clc
in
jbe
push
jb
lahf
ret
pop
cmp
loopne
addb
ljmp
xchg
fcmove
jbe
push
jmp
incb
cmc
int
sar
enter
sub
addl
jle
and
jne
aaa
out
jae
or
mov
cmp
dec
sub
roll
cli
jo
stos
repz
add
and
sti
xor
push
jmp
xlat
std
cltd
mov
ret
mov
push
xchg
push
pop
jno
xchg
jae
mov
mov
loop
jge
jl
mov
sbb
dec
adc
pop
dec
add
shrb
pop
cmpsb
pop
jecxz
sub
cmp
into
inc
cli
subb
adc
push
dec
lods
cltd
mov
xor
les
shrl
dec
ret
cltd
lea
cs
lea
pop
and
sub
lds
dec
fldcw
leave
lock
enter
loopne
movsl
stos
xlat
xlat
sub
mov
not
rolb
xchg
sub
or
mov
imul
cmp
filds
adcb
loop
push
ror
sbb
out
adc
lahf
lcall
mov
pop
data16
adc
gs
outsb
dec
cltd
xor
mov
fstl
stc
or
scas
insl
add
pop
stos
inc
into
add
sub
shrb
lds
mov
xor
ret
jp
jp
stc
mov
out
adc
push
jae
cmp
out
mov
jnp
xor
out
inc
adc
pop
sbb
call
dec
ds
dec
movsl
or
in
dec
cmp
sbb
divl
fsts
and
adc
mov
inc
icebp
jl
and
xchg
cld
cmp
test
ja
loop
shr
rorl
lcall
cmpsb
lock
out
xchg
xchg
push
lods
fnstenv
and
and
push
adcl
adc
xor
or
lea
and
call
out
or
cmpsl
sbb
mov
outsb
in
inc
mov
push
xchg
jne,pn
lods
ljmp
pushf
and
out
js
data16
imul
sarl
inc
jbe
dec
in
xor
xor
js
ljmp
shl
jbe
inc
fdiv
pop
push
sarb
sbb
imul
push
dec
fistl
outsb
cld
lret
sarl
xchg
add
xor
inc
out
outsl
clc
mov
les
and
push
loope
sub
loop
in
rclb
je
add
lcall
adc
mov
fcom
test
inc
and
test
in
and
shrl
xchg
in
fisttpl
pop
in
pop
or
nop
jmp
aaa
stos
in
stc
out
je
adc
jg
xor
cmc
fs
inc
fildl
clc
sahf
xchg
jno
push
mov
gs
inc
fdivrs
insl
add
les
sbb
pushf
pop
jns
test
and
lock
xchg
jmp
int
mov
js
fwait
rol
aam
push
mov
mov
scas
out
inc
mov
jp
jb
adc
aad
dec
fistl
imul
inc
pop
mov
movsl
and
loope
lods
inc
ret
shr
jae
hlt
sub
jle
dec
aaa
stos
outsb
pusha
mov
adc
fwait
pop
dec
aaa
push
aad
fcomi
or
stc
sub
inc
aad
insl
sbb
test
sub
mov
sbbb
lock
cli
sbb
test
add
pop
loop
sahf
adc
pushf
or
js
clc
mov
and
cli
xchg
in
xchg
ljmp
frstor
push
repnz
fdivrl
push
mov
push
iret
xor
push
cmc
xchg
mov
ret
inc
pushf
or
lock
call
sub
mov
add
nopl
cwtl
cmpb
cli
loope
pop
aaa
pop
add
push
leave
loope
dec
cmp
sub
orb
arpl
or
imull
add
xor
add
xchg
cmovae
imul
sbb
in
sbb
sub
stos
mov
adc
sbb
add
xor
or
jb
mov
push
rorl
cmpsb
sub
mov
push
subb
add
gs
xchg
rclb
dec
repz
mov
mov
outsl
test
mov
xchg
sub
test
pop
fsave
and
xor
push
cmp
or
in
pusha
sbb
push
xor
loope
negl
popf
rolb
xor
clc
les
pop
mov
jb
enter
addb
adc
adc
in
pop
cltd
mov
sub
idivb
lock
aas
xor
push
movb
jl
xor
int
test
mov
test
gs
test
xchg
adc
leave
fldcw
arpl
pop
lea
stos
xchg
fwait
mov
mov
adc
jo
sub
aas
jp
imull
adc
popf
inc
pop
push
mov
loopne
push
add
mov
pop
outsb
addr16
cmc
lea
data16
or
mov
lcall
add
repz
jl
cmp
fstps
cld
push
in
dec
or
push
mov
aas
pop
out
insl
mov
test
insb
mov
or
arpl
test
sbbl
cli
adc
mov
dec
push
cmp
or
mov
aaa
sub
daa
sbb
inc
into
push
cmpsl
cmp
xchg
mov
add
gs
push
movsl
dec
rcr
xor
jnp
jb
outsb
xchg
add
jae
inc
xor
test
outsb
dec
das
jmp
imul
repz
sti
inc
int
lret
mov
sbb
scas
mov
push
mov
sbb
fistps
mov
inc
and
sbb
inc
adc
int3
xchg
inc
pop
js
dec
ljmp
push
xchg
test
sarb
outsl
jle
stos
fsubrs
mov
ja
ss
out
pop
fisubs
rcl
adc
lcall
fidivrl
xchg
push
cmpsb
jp
jmp
adcb
add
sub
add
mov
sub
sub
push
outsl
mov
sbb
fadds
andl
mov
sbb
xchg
rorl
push
and
inc
scas
xchg
stos
bnd
movsb
fsubs
push
mov
dec
inc
cmpb
shl
daa
jo
xlat
repz
mov
test
cmp
and
call
pop
bound
notl
sbb
mov
jno
and
popa
sbb
inc
mov
aam
mov
test
out
ret
xor
add
sub
cmpsl
hlt
sub
rcrb
sbb
sub
pushf
std
jg
das
mov
and
stc
mov
jbe
xchg
jecxz
js
test
outsb
xchg
popa
lret
dec
inc
movsb
js
xchg
push
stos
add
test
test
repz
lcall
cwtl
test
or
xchg
mov
scas
bound
ss
mov
mov
xorb
add
xchg
mov
cli
popa
mov
hlt
bound
xor
in
rorb
scas
mov
push
cwtl
adc
pop
mov
test
mov
jne
add
or
incl
dec
and
fdivr
xlat
outsb
icebp
sbb
je
mov
lods
adc
inc
mov
lods
push
mov
into
int
daa
mov
sbbb
and
cld
daa
loopne
shll
xor
push
dec
loope
loop
dec
and
mov
mov
call
cwtl
decb
mov
pop
imul
flds
mov
ljmp
imul
in
test
cmp
mov
ljmp
in
mov
inc
in
xor
pop
dec
push
adcb
aad
sub
jo
sub
pop
clc
push
das
jbe
icebp
popf
ja
lret
loopne
imul
xchg
jno
iret
push
in
cmp
jnp
dec
sub
inc
popa
xchg
out
cmpsl
aas
dec
hlt
cmp
jo
inc
push
daa
repnz
lea
xchg
negb
das
cmpxchg
cli
insl
aad
xor
cs
and
push
pop
mov
jb
into
iret
sub
add
ss
xchg
sub
push
rorb
pushf
sbb
push
movsl
pop
xor
das
popa
sbb
mov
jb
popa
mov
in
xchg
lock
xlat
in
add
push
mov
lods
ljmp
es
repnz
mov
inc
loop
jne
jp
leave
push
xor
iret
imul
adc
inc
mov
add
mov
clc
jae
pusha
fidivl
cltd
xchg
out
fisubl
jge
setp
test
test
les
push
bnd
mov
loopne
mov
addr16
and
or
int3
xchg
ss
xlat
mov
jo
cs
pop
mov
cmp
push
add
lret
hlt
mov
adc
negl
mov
hlt
inc
es
loopne
mov
pop
add
fildll
pop
push
fucomip
add
fcoms
xor
mov
sbb
cs
mov
cli
sbb
mov
xor
sbb
pop
cmp
into
lods
inc
xchg
in
dec
adc
inc
bound
sbb
xchg
faddl
xchg
sbb
rclb
xor
fs
cmp
lods
insb
aas
dec
lcall
inc
or
mov
adc
inc
cltd
cmp
stos
push
mov
popa
cmp
lret
xchg
inc
and
imul
movsb
jnp
sub
mov
hlt
cmp
mov
inc
adc
cld
inc
push
mov
loopne
push
push
sahf
outsb
pop
jbe
or
das
pop
icebp
loop
pop
pop
int3
fmul
push
sbb
adc
jb
push
mov
push
push
sti
xchg
mov
cmpsl
out
adc
and
mov
mov
scas
loopne
dec
loop
and
das
out
test
cmpsl
and
test
push
jns
lods
inc
pop
pop
repnz
push
dec
xchg
xor
lods
jmp
sub
andl
ret
mov
sbb
loop
cmp
inc
inc
jo
jnp
loopne
sbbl
jg
dec
adc
push
adcl
push
jns
cli
mov
stc
nop
mov
xor
lods
inc
mov
or
mov
inc
cld
inc
rcl
faddl
jecxz
sbb
in
imul
mov
adcl
scas
gs
daa
sub
or
sbb
and
fucomip
aad
aas
and
jbe
ret
pop
cmp
pop
pop
jo
lods
pop
add
xorl
je
push
add
push
out
jne
iret
dec
lds
push
cmpsb
dec
inc
test
fistpll
rcl
cmpl
mov
mov
mov
lret
inc
arpl
sub
sub
movsb
mov
bound
int
rolb
pop
ds
inc
dec
bound
iret
nop
inc
sub
out
mov
lea
push
andl
and
xchg
sub
icebp
sub
or
xchg
fldt
or
adc
dec
fwait
stos
push
mov
mov
lds
dec
or
jns
mov
xchg
jb
sbb
inc
or
and
fdivrs
xchg
sub
mov
inc
sub
inc
mov
dec
mov
xchg
push
ficomps
pop
pop
jo
add
xlat
cs
rclb
mov
add
adc
inc
mov
xchg
rcrl
out
leave
cmc
adc
les
loopne
push
in
lea
ret
lcall
clc
or
adc
jbe
cs
lods
movsb
cmp
in
sbb
scas
call
scas
in
cmp
add
dec
and
pop
lret
xchg
add
xchg
es
xorb
inc
sub
roll
sub
hlt
repz
jle
leave
cmp
push
push
mov
pop
or
in
dec
add
aam
dec
sub
cli
inc
sub
inc
je
sahf
mov
pushf
mov
xchg
pop
aaa
xchg
dec
movsl
mov
std
add
jns
outsb
mov
fdivs
sub
mov
add
dec
test
xor
jo
scas
and
lret
ss
aas
cmc
push
mov
lret
test
addr16
fnstsw
scas
mov
and
aas
dec
enter
and
mov
addr16
fnstcw
leave
decb
jbe
push
or
adc
insl
jg
mov
cmp
out
pop
dec
fdivrs
mov
jne
scas
mov
lret
mov
mov
outsl
aaa
or
addr16
xchg
jae
lds
and
popa
xor
les
cmp
arpl
mov
or
loope
dec
ss
push
retw
lock
add
push
jg
xchg
stos
mov
fiadds
sbb
sbb
leave
add
adc
xchg
leave
cmp
iret
jbe
add
mov
insb
in
ss
inc
outsb
push
add
fldl
mov
imul
insl
pop
xchg
and
mov
popf
gs
cmpsb
gs
dec
inc
jp
jo
xor
scas
mov
or
popa
and
stc
fwait
test
jmp
sbb
popf
push
gs
pop
jb
inc
leave
xor
mov
fbld
pop
rcrl
nop
sbb
sub
push
adc
sahf
sarb
jne
into
int
xchg
int3
mov
and
jl
cld
xor
enter
cli
orl
testl
mov
lcall
jmp
xchg
mov
sub
or
adc
push
add
call
out
fmulp
outsb
iret
jne
outsb
dec
pop
icebp
jns
rcrb
js
xor
sub
imul
pop
cmc
xor
sbb
out
push
jl
mov
leave
pop
push
xor
sub
cs
addr16
testl
loope
pop
pushf
call
cmpsb
adc
enter
movsb
outsb
inc
inc
xlat
push
push
inc
loopne
orl
jbe
xor
xchg
adc
inc
aam
fsubs
mov
inc
mov
popa
inc
jecxz
jmp
cmp
scas
jg
xchg
mov
sub
push
cld
push
mov
sti
sub
sar
fisubs
add
jle
xchg
sub
push
mov
jecxz
push
nop
jnp
xor
xor
pop
dec
mulb
loope
mov
jnp
push
add
lahf
jl
arpl
es
popf
xor
add
jmp
pusha
jp
inc
mov
jle
jno
mov
fdivrs
xor
xlat
and
or
daa
inc
imul
jl
mov
and
imulb
leave
xlat
and
dec
or
lods
pop
mov
xor
addr16
orl
seta
lcall
xor
add
or
mov
jo
fldcw
pushf
xor
mov
movsl
mov
pushf
or
push
or
scas
popf
sub
sbb
shr
cs
enter
enter
data16
daa
pop
popa
and
js
inc
stos
pop
and
into
inc
enter
insb
mov
mov
lahf
jge
cmp
arpl
fidivl
ret
or
xor
repnz
call
inc
repnz
jmp
ss
pop
test
mov
imul
inc
inc
sbb
mov
fs
and
pop
sub
xlat
rclb
jl
nop
inc
loope
mov
fists
jg
add
xor
adc
inc
and
inc
xor
in
dec
aad
add
adc
mov
mov
mov
mov
and
xchg
lods
and
movsl
jmp
in
jns
icebp
iret
jp
xchg
icebp
mov
mov
fwait
neg
jne
mov
pop
mov
inc
fists
jge
pop
iret
jg
popa
mov
ljmp
mov
insb
xchg
pop
cmp
mov
cmc
lret
mov
in
orl
shlb
mov
sub
mov
lcall
jns
cmp
pop
cs
dec
adc
or
push
nop
xor
pusha
jp
cmp
pop
jmp
sub
fiaddl
js,pn
lret
mov
std
dec
mov
test
fldt
add
clc
call
pop
push
sbbl
sbb
adc
ja
hlt
mov
cld
lcall
mov
test
loope
push
subb
push
sahf
test
or
xor
imul
cli
out
add
xchg
clc
lds
dec
in
sub
imul
imul
lahf
lock
jno
vunpckhps
int
stos
jbe
cli
adc
mov
rcll
push
into
in
mov
stos
in
pop
call
cmp
jo
pusha
fisttpll
sbb
lcall
or
nop
xor
push
xlat
stc
jle
mov
sbb
inc
mov
ss
je
sub
pop
or
or
outsb
ss
cwtl
out
nop
out
aam
inc
sahf
and
int
lea
push
es
xchg
ss
mov
xor
aas
adc
sub
test
push
adc
sbb
bound
movsl
in
hlt
and
mov
inc
fsub
sbb
dec
ret
adc
sbb
insb
xchg
mov
cld
sub
add
push
push
push
dec
sbbl
lock
pop
mov
adc
pop
stos
dec
and
bound
mov
test
dec
fcos
jb
outsb
pop
addr16
adc
add
icebp
jb
xor
sbb
push
xor
out
and
inc
cld
aas
push
xchg
lret
idivb
or
dec
xor
imul
icebp
dec
stc
insl
mov
sbb
shll
or
push
push
jecxz
repnz
cmp
hlt
mov
aas
icebp
lea
jmp
leave
inc
movsl
jb
aam
loopne
or
push
or
xchg
fsubs
push
cmpsl
push
aam
xchg
in
mov
push
stos
jge
jle
imul
mov
xlat
cmp
or
loop
push
js
cmc
orl
and
pop
clc
bound
test
lcall
mov
inc
sbb
fidivrs
decl
ja
push
inc
fdivs
and
pop
fcomps
sub
test
cmp
xor
movsl
icebp
loop
mov
fcomps
aad
nop
popa
cmp
push
push
mov
push
jle
and
jge
movsb
aas
pop
mov
inc
insl
fcmovu
ss
mov
dec
add
rorb
mov
cmpsb
ss
sbb
dec
cwtl
sub
sub
rcrl
xchg
sub
inc
or
lret
lret
daa
popf
imul
andl
incl
cmpsl
fcmovnbe
popa
xor
dec
adc
pop
lods
or
testb
lahf
and
dec
add
mov
pop
sbb
repz
push
or
sbb
shr
daa
xor
in
pusha
andb
fadds
movb
cmp
in
das
cmp
out
fcom
lods
inc
adc
push
sahf
js
dec
sub
mov
mov
xchg
pop
out
mov
imul
out
pop
cmp
fcoml
in
mov
xor
aad
popf
sub
ja
mov
push
es
xor
ret
inc
mov
jae
in
jmp
into
lahf
dec
in
fstp
out
aad
pop
and
mov
jg
out
popf
hlt
fwait
pop
pop
fadds
mov
mov
adc
out
xchg
mov
xchg
outsl
ret
fldcw
mov
cmp
outsb
inc
arpl
cmp
call
mov
andb
mov
dec
pop
popl
cs
pop
outsl
dec
movsl
lret
mov
pop
mov
loop
dec
cmp
dec
aaa
outsl
andl
loope
sub
push
cs
add
loope
sub
or
pop
mov
gs
push
shll
xchg
mov
mov
sub
idivb
pop
cmpsl
pop
sbb
stos
and
data16
mov
enter
lds
fwait
mov
jge
xchg
xchg
and
lods
cmp
mov
icebp
mov
aaa
mov
adc
insl
inc
out
js
push
cmp
cs
in
jg
lds
ficompl
cmp
imul
xor
xor
ret
xchg
push
fldl
mov
mov
aam
and
rcr
add
and
aad
push
std
dec
ds
and
es
movsb
jmp
adc
sub
xchg
subl
adc
mov
jmp
mov
in
clc
mov
daa
pop
mov
adc
cmp
out
push
and
rcll
cld
xchg
dec
subb
fs
add
pop
jbe
and
and
lods
mov
push
imul
movsb
push
mov
mov
mov
inc
push
imul
addr16
fxch
jge
frstor
outsb
icebp
jp
xchg
les
hlt
leave
cs
icebp
mov
dec
push
scas
out
mull
or
xor
sbb
into
scas
in
adcb
js
fnstenv
xchg
aas
dec
loopne
adcl
push
xor
mov
cltd
inc
push
dec
stc
arpl
out
fdivl
cltd
or
daa
mov
int3
inc
repz
or
mov
mov
inc
insb
inc
adc
xchg
xor
aad
xchg
dec
fcomp
insl
std
mov
mov
ljmp
insb
mov
mov
int3
adc
data16
incb
xchg
pop
hlt
hlt
lret
mov
into
inc
mov
mov
mov
or
sti
sbb
ja
stc
dec
pop
pop
adc
movsb
sarb
lahf
daa
xor
cmpsl
cwtl
sub
pop
jmp
add
hlt
jp
scas
xor
aam
in
xchg
cmp
data16
xor
lock
mov
das
cmp
insb
fucomp
jns
add
xchg
push
xor
mov
leave
inc
inc
jmp
mov
insl
out
arpl
mov
push
cmpsb
dec
scas
lret
xchg
lods
pop
dec
mov
repz
xchg
stc
or
cmp
daa
movsb
push
popa
xor
arpl
sarl
xchg
sub
ficomps
shll
cmp
push
adc
in
push
divb
cli
xchg
xor
popa
xor
cld
sbb
scas
pop
push
les
ret
mov
cmc
sub
push
adc
call
popa
cmp
cwtl
movsb
mov
inc
adc
fwait
cmc
mov
mov
mov
or
rorb
jge
imul
stos
mov
lock
adc
xchg
and
adc
shll
xchg
jmp
add
lret
jl
aas
fs
mov
arpl
loopne
mov
frstor
in
push
mov
xor
aam
mov
sahf
mov
pop
aas
insb
leave
mov
cmp
mov
out
fdivrs
je
mov
mov
stos
add
sbb
ffreep
mov
push
inc
stc
mov
stos
dec
inc
sbb
aas
xchg
loop
fwait
in
mov
int3
gs
jb
fsubr
xor
fwait
xor
in
fdiv
fldt
aam
inc
pushf
lahf
xchg
xchg
mov
lods
push
fdiv
sub
xchg
std
test
cmp
adc
rorb
xchg
lods
fcompl
pop
rclb
cli
dec
dec
add
sbb
lret
add
repz
cmc
jmp
sti
dec
lods
scas
fs
imul
adc
aad
loope
ret
repnz
mov
out
fld
xchg
in
stos
pushf
sbb
mov
movsb
mov
cmpsl
aas
fisubrs
and
or
pop
mov
and
push
xchg
and
xor
cmp
jne
adc
cli
push
and
insl
mov
mov
outsb
lret
mov
stos
cmp
add
aas
push
cmpsb
fcoml
mov
push
cmp
dec
fwait
xchg
leave
jmp
sub
insl
in
cmp
or
mov
aad
or
mov
xorb
or
dec
hlt
xchg
sub
sbb
test
xor
cli
mov
lcall
jg
push
iret
into
pop
and
pusha
gs
mov
sarb
into
lods
cld
mov
sbb
nop
xor
xor
inc
es
pusha
lret
inc
fnsave
scas
sub
out
xor
mov
cmpb
in
sub
data16
xchg
addr16
xchg
sub
jge
push
insl
pushl
loop
and
pop
xchg
inc
jnp
mov
cltd
es
je
add
into
enter
lods
mov
shrl
movsb
sub
jecxz
or
inc
xchg
outsb
mov
cmc
xor
lods
aas
xchg
dec
mov
jne
dec
roll
testb
sub
out
xchg
dec
xor
mov
jmp
cmp
pslld
sbb
cld
pop
lock
ja
cli
test
mov
xchg
cmp
stos
lods
mov
lret
jae
and
jno
mov
sbb
pop
cmp
cld
xchg
adc
push
push
sub
mov
dec
jecxz
aad
xchg
push
inc
ljmp
sbb
mov
inc
cmp
jl
std
xchg
sub
fwait
xor
sbb
add
out
fnstenv
sar
and
xorl
aaa
dec
mov
pop
out
aam
inc
xor
push
rclb
add
fmuls
cmpsb
ficoms
sti
jbe
out
push
xchg
call
jbe
xor
jne
sbb
popa
or
cld
dec
pop
xor
push
jmp
mov
ljmp
push
adc
cmc
mov
fdivrs
aad
or
je
hlt
popa
das
cmpsb
sbb
aad
lret
sti
icebp
pop
jae
int
pop
lcall
repz
and
add
cmp
push
xchg
mov
pop
and
jnp
sbb
push
call
inc
dec
roll
push
ret
xor
dec
and
add
xchg
xchg
cwtl
xchg
ds
pop
pop
cmp
jl
push
lret
xchg
jbe
loope
aam
mov
push
sub
inc
mov
xor
add
push
sub
mov
mov
pop
sub
sub
nop
mov
xchg
movsl
divb
outsb
push
push
jl
adc
fmull
inc
xor
adc
jecxz
mov
leave
mov
push
xchg
shlb
insl
test
ss
mov
std
fs
imul
enter
push
push
std
dec
mov
mov
mov
push
dec
rcl
lea
stos
cmp
mov
mov
imul
stos
mov
add
outsb
sub
push
incl
cmp
pop
push
mov
aaa
repz
cmp
sub
iret
add
inc
daa
inc
mov
dec
jnp
out
sbb
out
jns
jle
mov
testl
inc
sub
sbb
fstpl
mov
mov
shl
pop
rol
shll
sarb
cmp
sub
notb
test
mov
push
cmc
lcall
in
rorl
push
mov
fwait
popl
xchg
push
xor
popf
jg
dec
cli
and
test
xchg
jbe
inc
mov
push
out
dec
pop
sbb
add
xchg
and
lret
movsl
inc
in
inc
fstp
adc
sbb
icebp
mov
or
add
jecxz
inc
sbb
movsl
fidivrl
push
xchg
mov
jne
movsl
cmpsb
sarl
test
inc
fstpl
test
shl
cs
mov
test
sbb
inc
mov
xchg
ja
pop
hlt
lcall
sbb
adcl
or
mov
jno
je
and
mov
mov
loopne
loope
es
call
stos
test
ss
cwtl
push
popa
cmp
sti
push
in
inc
sar
dec
fs
cmc
mov
add
adcl
sbb
or
rol
adc
and
sbb
rcrl
stc
imul
cmp
stos
dec
and
jl
cmpsb
mov
xchg
paddsw
and
pushf
sub
sub
orb
ss
cs
inc
xchg
xchg
add
sub
into
in
push
mov
aaa
or
pusha
movsb
sbb
and
cs
mov
ljmp
stos
aas
insl
rcrb
es
mov
cmp
mov
ret
enter
xchg
test
xchg
inc
inc
push
bnd
jg
lcall
mov
ficoms
push
and
aaa
inc
pop
xchg
in
xchg
add
sbb
fucom
ss
inc
jl
dec
push
out
push
insb
sahf
xor
fcompl
ret
inc
icebp
sbb
push
mov
out
push
fidivrl
mov
push
xor
ficompl
or
imul
leave
rcll
mov
pop
out
dec
add
mov
mov
icebp
call
mov
mov
pop
out
decl
add
pop
aaa
test
jecxz
fs
mov
xor
push
mov
inc
pusha
push
test
out
lock
test
jge
add
jmp
fs
sub
hlt
dec
je
inc
sahf
xor
iret
lret
sub
fnstenv
orb
xchg
movsl
inc
test
adc
mov
cmp
fmuls
jle
std
out
mov
stos
pop
cmp
push
push
outsb
je
pop
jbe
and
rep
sub
lock
dec
inc
cmp
jns
sarl
mov
jbe
xchg
rorb
xor
push
jmp
push
inc
cmp
jo
shrl
in
mov
sub
mov
jns
ret
and
mov
ficompl
clc
inc
sti
ja
xlat
xchg
pop
mov
test
push
add
push
jb
inc
out
shlb
mov
xlat
mov
pop
movsb
jmp
push
fisttps
arpl
jo
mov
ja
or
xchg
add
push
hlt
fcomi
xchg
xor
jo
cwtl
movsl
icebp
cwtl
lcall
mov
fcoms
scas
iret
insl
or
fwait
inc
mov
cs
pop
std
cltd
adc
mov
inc
mov
xchg
pop
cwtl
adc
mov
cmp
ret
pop
cltd
fnstcw
std
inc
incl
xor
fstp
faddl
mov
cmpsb
rcll
or
jno
lea
add
lcall
out
mov
dec
cwtl
mov
pop
pop
mov
push
cmpsb
xor
arpl
and
jne
test
inc
ja
cld
xchg
and
in
xor
cwtl
or
mov
add
aad
stos
fimull
jae
mov
jno
mov
fstp
in
iret
sbb
jl
shlb
clc
xchg
int3
adcb
push
xor
test
leave
out
pop
dec
mov
pop
jg
lds
pop
cmp
sub
dec
mov
std
xchg
daa
mov
fidivrl
daa
jo
lds
mov
insl
mov
pop
jmp
in
outsl
sarb
enter
pop
rolb
xor
rol
popf
sahf
xchg
push
movsl
orb
mov
pop
icebp
jmp
and
in
test
pop
sub
and
mov
add
stos
cmp
out
pop
dec
dec
xchg
das
jae
data16
xor
fists
add
iret
jecxz
adc
addb
fwait
inc
push
cmp
hlt
shrl
mov
jle
cmpsb
and
int3
shll
fsubl
jmp
pop
repz
push
add
add
mov
mov
push
in
cmp
loope
and
negb
sbb
enter
loope
push
js
lds
cld
inc
jecxz
out
test
lret
insb
xor
mov
fistpl
or
xchg
adcl
lret
cltd
aas
inc
sub
popa
aas
xor
jb
les
shr
pop
mov
leave
mov
mov
out
aas
mov
mov
pusha
jns
cld
lcall
in
pusha
test
push
fnsave
leave
add
push
subl
int3
sahf
clc
arpl
popf
and
or
and
dec
stos
push
js
lods
inc
loopne
inc
in
out
lret
xchg
loope
in
xchg
fsts
jg
arpl
mov
push
lds
mov
aam
sub
pushf
add
in
dec
mov
movsl
jecxz
add
hlt
scas
xor
jg
add
insb
cmpsb
sub
xchg
xor
adc
ljmp
jmp
pop
jg
dec
dec
insb
popf
inc
jo
jl
xchg
sub
dec
negl
ret
aad
ret
scas
into
enter
mov
jo
in
cmp
jg
call
pop
inc
xor
xor
or
jns
je
bound
fsubrs
cmp
inc
loopne
jl
dec
push
rolb
mov
frstor
dec
xor
aas
ljmp
loop
cltd
xor
jmp
cwtl
mov
js
push
insb
xchg
imul
and
lret
bound
jo
jmp
cmp
stos
or
jo
xchg
aam
or
ja
xchg
or
jg
adcl
repnz
jno
or
les
sbb
mov
hlt
popf
mov
adc
add
jb
and
push
sub
mov
jb
test
cmpsl
xor
push
sub
lods
lahf
add
mov
icebp
mov
test
ret
pop
jnp
clc
jp
add
sub
cmp
fcomip
int
loop
pop
lock
imul
push
ljmp
cmp
inc
cld
insb
js
pusha
daa
ret
stos
sub
sbb
das
movb
jo
add
adc
test
cwtl
shrb
xchg
lock
sbb
dec
nop
and
dec
testl
pop
xor
in
xchg
fnstenv
mov
arpl
xchg
add
jl
pop
mov
jecxz
fidivrl
dec
inc
inc
lahf
nop
push
and
mov
mov
cld
subb
decb
hlt
pushl
rcrb
iret
pop
xor
jo
adc
nop
mov
jns
movsb
rorl
insb
mov
loope
jne
stc
xor
imul
mov
shrb
pop
adc
les
outsl
pop
test
imul
sub
dec
ret
sar
jl
cli
stos
movsb
addr16
mov
mov
adc
sbb
insb
gs
ja
or
lahf
jno
jo
mov
inc
loopne
daa
xchg
popf
and
fldl
mov
push
dec
aam
adcb
adc
sbb
fdivs
mov
inc
dec
push
icebp
sysenter
roll
sbb
aad
aam
push
inc
dec
jp
sub
cltd
pop
sub
mov
mul
pushf
xchg
or
mov
loop
xchg
repz
xor
dec
testl
test
bound
xchg
mov
orb
inc
xlat
out
jbe
mov
jo
xchg
xor
stos
loop
in
jl
sbb
lods
inc
mov
arpl
pop
mov
jno
inc
sbb
in
cwtl
xchg
ret
push
mov
push
push
loop
jge
push
add
out
sahf
mov
repz
repnz
lods
xchg
loopne
jae
je
mov
inc
mov
pushf
xor
clc
mov
in
dec
or
cmp
push
mov
in
xchg
flds
and
dec
rcll
insb
in
cmp
mov
pop
insb
scas
adcl
cmpsb
arpl
ljmp
sbb
pop
xor
and
pop
fwait
sti
sbb
xchg
test
out
adc
mov
mov
aaa
adc
aad
aam
push
xor
push
andb
in
or
sbb
cmpsb
addr16
xchg
rolb
adc
stos
inc
xor
push
ss
xchg
xchg
fcompl
adc
mov
jno
jmp
adcl
push
sub
and
xchg
adc
in
mov
fists
or
push
pop
out
shlb
or
ss
imul
mov
decl
mov
push
fwait
push
iret
xchg
jbe
adc
inc
in
data16
cmp
pop
rcrl
sbb
pop
movsl
fs
repz
adc
shl
imul
jne
stos
cmpsb
xor
cld
push
jp
shll
inc
pop
popf
imul
movsl
push
jns
xchg
pop
outsl
and
popa
lds
adc
gs
dec
jbe
outsl
aam
adc
loope
cmpsl
ja
pop
movsb
out
cli
pusha
sbb
mov
jg
jecxz
and
or
inc
add
pop
ja
mov
pop
sbb
aas
dec
or
xchg
push
mov
mov
xlat
test
inc
int
popf
xor
cmp
xlat
rcl
jnp
push
inc
mov
xchg
roll
mov
shrl
cmc
cltd
xor
or
cli
addr16
stc
mov
mov
lahf
push
jo
aas
std
je
nop
daa
js
sub
insl
adc
adc
enter
lds
mov
pop
sub
std
inc
lret
add
es
mov
xchg
clc
mov
dec
aad
stos
mov
add
mov
xchg
push
cs
aas
inc
xor
cmpsb
loope
add
or
es
shlb
insl
mov
out
or
dec
inc
or
cs
mov
dec
out
push
sub
xor
adc
jbe
sbb
mov
jbe
call
add
mov
mov
xchg
mov
outsb
mov
sbb
icebp
push
sbb
movsl
call
sbb
mov
or
jmp
out
je
and
pop
or
mov
std
cmp
jo
inc
push
mov
mov
xchg
cltd
mov
jg
or
jp
and
out
iret
out
fnsave
sub
pop
in
mov
in
mov
jnp
je
lahf
or
popf
mov
adc
mov
cs
mov
insl
inc
xchg
xor
les
push
inc
out
enter
mov
add
xlat
push
adc
sti
loope
lahf
loop
jmp
sbb
sbb
out
scas
dec
dec
pop
popa
rcr
pop
aaa
sbb
pop
stos
sbb
ja
out
rorl
fidivl
sub
fists
xchg
inc
fsubl
and
push
pop
ss
push
sub
dec
fisubrs
sub
test
xor
rorb
jp
call
rorl
ficomps
rorb
mov
mov
lods
vpcmpeqd
cmp
test
adc
movl
pop
push
mov
xchg
test
add
mov
test
xchg
movd
mov
mov
daa
jbe
fucomi
sbb
sub
cmpsl
xchg
fwait
cmpsl
icebp
lret
rcrl
jp
xchg
and
int
xor
cmpsl
mov
mov
mov
push
jno
adcb
xchg
pop
cmp
or
fwait
aas
fisttps
xchg
out
cs
sbbb
aaa
sbb
gs
lahf
ss
xchg
repz
jl
push
add
lcall
push
out
jb
pop
cmp
ljmp
loope
push
or
xchg
orl
in
ljmp
dec
mov
insl
insb
ja
lcall
jae
push
fcmovb
insl
lods
inc
fnop
push
pop
loope
pop
adc
lret
stos
aaa
and
cld
xchg
test
scas
pushf
adc
fdivrs
fisttpll
mov
fcoms
xchg
adc
clc
adc
xchg
adc
mov
cs
dec
xchg
js
shlb
hlt
mov
add
adc
inc
xlat
lea
scas
sub
pop
enter
leave
int3
arpl
jae
insb
in
ljmp
mov
or
and
rclb
idiv
xchg
jmp
sti
icebp
dec
lods
clc
push
xchg
aam
sbb
or
lcall
or
ret
push
ret
pop
loopne
jb
movsb
pop
mov
xchg
and
scas
ss
dec
push
outsb
lds
jmp
xor
jg
inc
sbb
loop
cmc
push
bound
je
je
jo
fs
inc
pop
fwait
sub
mov
mov
mov
int
xchg
pop
inc
push
xor
test
mov
gs
rorb
dec
cmp
cmp
subl
or
xchg
fisubrs
mov
cmp
inc
cmc
inc
mov
add
imul
in
add
lret
mov
cmpsb
int
inc
fidivrl
in
adc
add
aam
cltd
add
mov
sbb
mov
mov
rol
and
repz
cmpsl
cmpsb
and
pop
mov
int
ret
lods
jmp
test
je
push
or
pop
xor
mov
mov
jecxz
sbb
jb
pop
cmp
mov
js
sbb
mov
popa
cwtl
repz
pop
and
and
fistpll
leave
xchg
mov
pop
mulb
push
sahf
mov
dec
and
push
insl
pop
je
xchg
dec
data16
cmp
xor
fmuls
push
lret
xchg
loopne
sub
dec
push
dec
inc
sti
ds
and
insb
jbe
or
ja
push
call
out
ja
add
mov
cmpsb
imul
movsb
outsl
fiadds
mov
bound
les
jns
jb
subl
outsl
sahf
mov
sbb
xchg
jnp
xchg
mov
fstpl
decb
test
xchg
sub
cltd
and
ss
in
fildll
jb
adc
pop
cltd
xor
and
fistps
sti
aad
mov
mov
int
push
mov
outsl
pop
mov
iret
mov
dec
out
ss
adc
dec
daa
add
nop
arpl
adc
int
into
pushf
or
stos
aas
dec
stos
sbb
jl
ret
xchg
xlat
outsb
enter
aam
insb
cli
push
dec
or
dec
adc
jne
stc
cmp
sbb
sbb
cmp
push
sub
xchg
inc
adc
mov
inc
adc
arpl
call
outsl
stc
push
push
sbb
mov
std
imull
dec
pop
lcall
scas
mov
loopne
cli
xchg
xchg
out
les
dec
aaa
test
mov
or
push
inc
addr16
test
aam
push
das
popf
cmc
jne
cli
jle
add
add
sbbl
rcl
testl
mov
xor
xor
sbb
in
movsb
add
pop
inc
mov
sbb
push
dec
loopne
int
jae
push
sbb
imul
cli
jnp
aas
into
or
pop
sbb
sbb
or
jbe
pop
je
xchg
sar
stos
xor
je
pop
iret
push
push
jo
sahf
lret
dec
sub
and
aaa
jbe
cmpsl
xor
dec
daa
inc
mov
xchg
xchg
dec
adc
push
dec
cmp
loop
mov
pop
imul
cwtl
js
jge
lds
push
mov
stc
nop
dec
jo
into
cmpsl
pop
pop
xchg
insb
fcoms
mov
or
cmp
push
mov
pop
loopne
push
push
xor
pop
xchg
pop
fdivrl
xchg
movsb
movsb
inc
and
testl
in
divl
loopne
push
push
cmp
insb
jae
sbb
mov
lock
jge
mov
fistpl
xor
mov
pmulhw
stos
inc
push
mov
aam
stos
or
aad
push
rcrl
fsubr
jge
fbstp
lcall
or
jo
adc
mov
mov
jp
xchg
pop
addr16
js
cmp
xchg
dec
push
or
lahf
sbb
rcr
jp
aaa
xor
mov
push
sbb
rcll
repz
mov
into
dec
and
cmpb
adc
leave
dec
push
lahf
cmpsb
mov
xor
in
idiv
sub
sub
adc
dec
dec
mov
jg
pop
pop
cmp
mov
cmpb
sub
hlt
jne
sahf
xor
ds
cmp
cmp
int3
scas
repz
out
mov
jmp
mov
sbb
test
and
pop
rcll
movsb
mov
shl
mov
sarb
sbb
sub
loop
cmp
sbb
mov
sub
jb
movsl
xor
mov
push
push
push
mov
dec
and
and
xlat
jge
mov
mov
cmp
mov
mov
add
adcb
mov
cmp
push
jmp
dec
cltd
pop
bound
jle
loope
into
inc
and
stc
icebp
push
mov
lds
inc
sbb
or
mov
mov
mov
into
adc
pushl
adc
and
sbbb
xchg
out
popa
or
pop
add
mov
scas
popa
mov
int3
adc
iret
movsb
aam
add
push
or
shlb
inc
ds
jmp
out
pop
sub
pop
int3
ds
xor
mov
popa
lods
repnz
lret
sub
test
inc
leave
sbb
push
dec
and
jmp
ret
xchg
adc
outsb
addl
dec
cmc
xor
insb
push
mov
cmpsl
mov
jns
lahf
xchg
out
clc
inc
sbb
inc
xor
cmp
sbb
mov
imul
jno
pop
mov
dec
icebp
pop
push
jle
cmp
sbb
ret
push
xlat
pop
mov
pop
loop
outsb
out
mov
sub
cmp
sbb
ds
jp
lahf
and
fisttps
adcb
imul
adc
and
lret
into
iret
movsl
mov
or
lods
pop
sahf
lea
je
out
ret
xchg
mov
lock
jle
mov
insb
cmpb
loop
or
shlb
ds
out
scas
shll
push
pop
subl
mov
int3
arpl
adc
dec
stc
lahf
cmp
and
repnz
inc
cld
mov
xchg
push
mov
jle
lahf
scas
jmp
out
sbb
jge
mov
fwait
loope
add
mulb
test
or
lcall
icebp
movsl
in
dec
cmp
stos
dec
and
test
lahf
push
dec
daa
or
test
aad
mov
and
jns
outsl
inc
jg
adc
inc
popa
mov
popa
and
sub
arpl
hlt
shll
ret
push
fbstp
test
sub
enter
inc
mov
xchg
test
aaa
stos
add
push
lods
adc
jbe
mov
fisubrs
mov
out
mov
pop
pop
je
cmp
sti
inc
cli
popf
out
adc
jne
push
stos
rcl
enter
xor
cs
cli
incl
push
cmc
pop
call
mov
and
repnz
and
mov
jle
pop
jg
jnp
iret
inc
xchg
ss
loopne
nop
adc
jg
jle
fidivs
dec
stc
jle
fld
in
jnp
pop
mov
dec
dec
psubsb
sbbb
jecxz
or
bndstx
imul
enter
bound
cmp
inc
sbbl
mov
stos
ljmp
insl
xor
idiv
shrb
mov
lods
fsts
and
jb
lock
cmp
cwtl
xchg
out
xchg
pushf
jae
ret
in
std
xchg
and
pop
call
sbb
push
inc
loopne
jbe
fcomps
fcoms
jae
iret
loope
push
sbb
lock
mov
out
add
pop
mov
jno
leave
push
in
testb
and
aaa
enter
sbb
test
fisttpl
xor
fwait
sub
pop
or
xchg
ds
mov
lret
jne
andb
sbb
xor
xchg
pushf
cmp
insl
addl
mov
lea
mov
push
add
sti
fwait
and
test
jecxz
loope
loop
push
add
mov
or
mov
dec
pop
sbbb
cmp
sub
xchg
mov
sub
orl
cld
adc
aaa
or
mov
pop
xor
adc
jle
notl
push
mov
push
sbb
mov
xchg
dec
or
aad
fsubrs
lret
jmp
add
ss
add
popl
dec
adcb
pop
lcall
adc
add
cmpsb
lods
push
mov
xor
sbb
andb
test
dec
in
scas
dec
xor
out
add
xorb
sbb
pop
xchg
test
in
mov
icebp
mov
repz
mov
movsl
cmp
and
jp
aam
andl
cmp
loop
xor
xor
pushf
sarb
mov
cmp
xor
or
test
out
mov
mov
push
fnstcw
test
dec
and
dec
stc
sub
flds
cmpps
cmp
push
cmp
aas
and
gs
mov
leave
pop
mov
jp
dec
nop
jnp
mov
cmpsl
aam
hlt
cmp
imul
xchg
fsubrl
xchg
les
cmp
aad
mov
add
subl
outsl
xor
fldl
mov
movsl
pop
xor
bound
jecxz
sbb
repz
sub
mov
rolb
adc
lock
pop
add
mov
add
cwtl
mov
mov
fwait
and
xchg
add
push
mov
sub
fstpl
xchg
dec
in
fsubrs
pop
xor
in
test
sbb
sar
je
sub
or
xchg
scas
mov
pop
sbb
mov
popf
mov
sbb
int
jns
mov
mov
pop
stos
mov
dec
iret
cmpb
out
enter
or
mov
fwait
stos
cmp
fistpl
cltd
pop
jno
imul
fsubs
scas
and
std
pop
popa
mov
lahf
ficompl
sub
sbb
lock
insb
jecxz
cs
or
add
jnp
dec
push
mov
mov
adc
or
mov
and
dec
sub
inc
pop
insl
mov
sub
adc
cmp
lahf
jb
imul
popa
push
fidivrs
roll
movsb
cmp
loopne
mov
push
shl
lea
outsb
lods
test
cli
sbb
mov
mov
fsts
push
pop
lods
pop
add
mov
push
mov
fists
fnstenv
daa
addr16
fwait
shrl
popf
int3
push
test
addr16
fldcw
mov
sbb
mov
sbb
outsw
rcll
pushf
loope
into
fcmovu
mov
insl
leave
lret
jbe
cltd
ret
sbb
fcoms
nopl
sub
mov
cmpsb
xchg
aas
push
lcall
insl
sahf
ret
fnstcw
push
mov
test
testl
orb
stc
adc
mov
pop
test
in
cwtl
mov
cmp
fsubr
and
push
push
or
sub
sub
cwtl
pop
and
jnp
popf
cmpsl
mov
ss
sar
mov
mov
and
mov
xor
bnd
out
test
mov
rclb
out
fcomip
and
sbbl
insb
push
shrb
nop
daa
sub
je
mov
xor
jmp
or
add
rcll
push
jae
or
xchg
jno
cli
xchg
loopne
outsl
adc
inc
sahf
dec
xor
jnp
stc
inc
jmp
mov
sub
jns
int
pushf
dec
mov
mov
mov
mov
icebp
pushf
mov
add
push
pop
push
adc
imul
lock
divb
cmp
mulb
mulb
out
inc
jle
sbb
mov
je
jg
lds
mov
mov
inc
mov
int3
jecxz
fdivs
pop
fmuls
cmpsb
cmp
dec
cli
xchg
mov
or
in
cld
cmp
xsha1
cmpsb
mov
gs
push
es
xchg
jbe
aam
inc
push
add
or
fimuls
xchg
stc
xor
sti
fwait
dec
xchg
pusha
mov
int3
adc
loop
rcr
and
cmp
insl
cmp
adc
inc
push
in
lret
cmpb
add
scas
and
fisttps
inc
push
pop
and
lea
jmp
xorl
add
mov
rcrb
add
ja
out
xchg
or
cmp
insb
jnp
lods
mov
xor
push
sahf
fidivrs
fcomp
mov
test
lret
bound
fdivrl
es
jmp
push
xchg
sarb
or
inc
mull
sub
cmpsl
ljmp
pop
and
negb
fisttpl
fs
jne
ret
push
adc
sbb
call
clc
lea
dec
lea
cmp
push
mov
mov
jbe
push
xchg
loop
mov
pop
shlb
xor
cmp
xor
loope
cmc
lea
push
jp
push
jne
lahf
push
std
inc
test
jno
xchg
test
sub
jge
notl
int3
popf
ljmp
push
adc
dec
jecxz
and
jnp
mov
fdivl
xchg
pop
adc
paddq
or
arpl
jge
cmc
mov
xchg
repnz
inc
add
mov
mov
mov
aad
loope
push
test
xor
cmpsb
stc
mov
pop
jl
dec
movsl
mov
lcall
jecxz
daa
inc
nop
imul
bnd
stc
jns
loope
mov
push
insb
cmp
scas
rorl
clc
in
cmpl
push
ret
jge
in
cmp
stos
enter
xchg
push
jmp
out
xchg
sbb
test
bound
fbld
xchg
arpl
test
test
cmp
inc
dec
jmp
cmp
sbb
xchg
aam
sbb
xchg
mov
aad
mov
int3
push
pop
hlt
scas
fsubl
fistpl
mov
sbb
loop
fwait
test
mov
clc
xchg
dec
out
shrb
xor
leave
xor
sbb
subl
adc
inc
xchg
mov
test
pop
push
jp
mov
dec
int3
shrl
jp
xlat
xor
push
je
int3
adc
xor
lea
les
testb
lret
pop
loop
int
push
mov
mov
xchg
mov
dec
notb
cmpsl
fstps
in
jp
es
cmpsb
mov
cmpb
jnp
icebp
shlb
into
mov
ja
arpl
cli
out
push
js
mov
inc
fdivrs
shl
push
fsubrs
test
fidivs
mov
pop
sbb
xchg
stos
pop
jg
lds
in
test
mov
mov
jne
fidivrl
lret
sbb
cmpsl
and
cmp
insb
inc
out
subl
testl
xchg
mov
int3
pop
fidivrl
cmp
testb
xor
pop
or
jmp
jl
xor
sbb
inc
fcmovbe
rclb
pop
dec
adc
push
xor
shlb
pop
orl
cmp
pop
push
cs
push
sub
push
punpcklwd
inc
jae
jecxz
add
pop
into
arpl
fdivrl
rorb
and
mov
adcl
sti
mov
sub
jecxz
ds
les
loope
push
lea
sti
or
lret
pop
stos
jle
xlat
sbb
dec
cs
jmp
mov
repnz
loop
mov
and
jg
adc
subl
ret
mov
mov
jg
and
adc
xorl
inc
jne
inc
dec
cmpsb
push
mov
pusha
in
xor
lds
lcall
push
sub
mov
sbb
xchg
adc
leave
and
or
rcrb
clc
lret
pusha
pop
test
pop
cld
adcb
push
and
iret
sahf
mov
xchg
lods
inc
std
or
cmp
sub
arpl
repz
je
jecxz
out
sbb
sbb
in
sub
insl
sub
mov
scas
cmpsl
jbe
shl
js
rorl
pop
repz
jmp
repz
call
xor
lret
adc
ss
or
push
xor
sbb
xchg
cmpl
mov
inc
ret
repnz
js
cs
fnstcw
xlat
jl
xor
adc
pusha
fldcw
mov
mov
push
and
cli
push
add
mov
mov
adc
sub
mov
mov
aad
aaa
push
ss
idivb
loopew
lods
cmp
cmp
push
mov
es
packssdw
and
inc
fcoms
fcomp
dec
out
cmp
into
sbb
pop
loopne
lcall
imul
xchg
mov
sbb
xchg
sub
mov
test
add
and
cmc
mov
call
push
inc
es
mov
push
call
and
fidivs
out
lds
sbb
xchg
dec
mov
xor
pop
push
out
pop
test
mov
mov
js
cs
imul
sub
mov
lea
jle
cmp
fimuls
mov
jle
lret
and
lea
mov
mov
fwait
sub
nop
cmp
arpl
xchg
mulb
pushf
loop
clc
mov
sbb
outsl
fidivrl
mov
mov
xchg
cmpsb
dec
sub
loope
in
shrl
pop
sar
mov
push
adc
push
scas
lods
add
ss
mov
pusha
mov
or
xor
movsl
andb
jge
mov
roll
jne
adc
inc
jb
jns
test
add
jp
jb
xchg
test
sub
adc
and
daa
int
and
mov
scas
xchg
out
pop
or
insl
cld
xchg
lods
push
mov
je
jbe
or
inc
repnz
jp
and
pop
dec
je
cmp
push
push
sarl
push
jae
out
pop
sbb
mov
mov
sti
dec
sub
shrb
inc
icebp
mov
cmc
pmaxub
out
dec
hlt
lahf
push
ljmp
jno
cmc
scas
fsubrs
mov
sbb
enter
cmp
jle
fwait
sub
mov
idivl
push
jne
lods
push
out
mov
cmp
sub
jbe
test
and
jne
lret
push
test
sub
cwtl
ds
je
sti
fwait
adc
jbe,pt
outsl
push
lcall
movsb
xchg
out
pusha
ret
rcll
movsl
sub
js
dec
fildll
cmc
pop
xor
xchg
ds
sbb
mov
mov
cmp
inc
sbb
rorl
jns
das
enter
pop
adc
mov
mov
rclb
cmp
lock
fsubrs
jae
imull
sbb
nop
ds
and
or
shrl
pop
xchg
xor
repnz
and
out
dec
outsl
rcrb
xchg
mov
add
scas
scas
dec
mov
dec
int
rorl
jg
or
cmp
imul
in
jge
inc
cmpsb
les
lret
sti
leave
popf
sbb
test
lahf
lods
sbb
and
inc
dec
repnz
mov
outsb
imul
pusha
aad
and
lods
pop
mov
push
loope
dec
dec
mov
dec
rcrl
xchg
lret
rcll
xor
stos
cmp
sbb
xchg
das
bound
in
andl
sub
repnz
jle
jecxz
sub
pop
pop
lea
jg
and
inc
inc
push
push
in
xor
sub
movsb
out
lret
jo
pop
mov
add
loop
inc
lea
ljmp
sub
inc
outsl
gs
test
lds
or
or
dec
push
mov
mov
mov
insb
sbb
push
jl
leave
or
enter
nop
cmpsb
bound
xlat
repz
lea
mov
in
inc
fimuls
pushf
and
cmc
xor
sti
shlb
and
decb
jp
inc
aaa
dec
mov
imul
mov
pop
sub
iret
inc
jmp
aam
ss
adc
add
jecxz
and
add
xor
push
xchg
jb
inc
xlat
aaa
insl
insl
sbb
pop
dec
dec
dec
pop
dec
nop
mov
add
repnz
dec
sbb
mov
sarb
hlt
popa
scas
inc
mov
xchg
push
mov
sub
jle
mov
jno
add
shrb
pop
dec
nop
sub
js
mov
imul
mov
mov
cmp
bound
idiv
jmp
inc
xchg
and
mov
mov
push
pop
push
mov
sub
out
mov
fiaddl
or
xchg
sbb
in
push
push
in
sti
in
icebp
cs
fsubrl
cwtl
je
negl
cmp
push
push
pop
cmp
lret
icebp
shrl
sub
xchg
int
icebp
int
and
shrl
jne
pop
mov
icebp
xchg
cmp
daa
rorl
repz
bound
mov
enter
pop
pop
pop
inc
fcompl
aas
cmp
imul
ret
add
fwait
mov
add
ljmp
xchg
popf
hlt
cmpsl
sti
sbb
mov
dec
jp
jmp
cmp
xor
lods
mov
aaa
push
shlb
mov
jnp
xchg
enter
mov
jo
popf
dec
xchg
imul
std
inc
mov
sbb
rorl
repz
sbb
in
jo
adc
pusha
add
or
or
inc
push
test
inc
shrb
fmul
scas
inc
push
jmp
pop
fsubr
dec
pop
mov
lcall
subl
ficoms
out
fsubl
ljmp
shrb
pushf
add
addb
repnz
stos
jae
out
mov
imul
inc
inc
adc
shr
sbb
cmp
add
call
scas
and
jge
popf
inc
xor
sub
out
push
jno
xor
jae
enter
shrl
fstp
mov
mov
movl
push
fbld
leave
pop
xchg
arpl
push
xor
and
or
test
insb
mov
push
aas
mov
hlt
pop
icebp
push
pop
fcomp
xchg
mov
dec
add
leave
pop
dec
push
js
inc
shll
out
and
xor
lods
int3
leave
sub
lock
sub
and
rcrl
xor
xchg
push
movsl
out
pop
jo
cli
pop
out
sub
pop
mov
pushf
xlat
cmp
dec
cmp
add
inc
pop
aas
xchg
xchg
add
jnp
cmpl
fidivrs
pop
rcll
mov
ja
add
cmp
inc
add
push
nop
loope
pushf
lcall
fisubs
pop
insb
xchg
ljmp
sub
adc
hlt
mov
test
daa
in
xchg
lods
push
je
lock
jae
in
test
mov
adc
pop
js
cmc
das
mulb
xchg
inc
jl
ds
xchg
cmp
stos
lds
test
inc
push
std
stos
jne
fstpl
arpl
cmc
hlt
jl
cs
fcom
dec
add
scas
stc
cwtl
int
mov
ret
out
xchg
out
jl
sbb
cli
and
mov
jns
jg
dec
les
in
pop
insl
popa
cli
dec
addb
cmp
push
push
fst
push
hlt
shll
jle
jle
mov
add
shrb
jge
mov
or
sbb
adc
sub
mov
aaa
dec
das
cmp
add
scas
scas
pop
add
mov
xor
arpl
sbb
int3
arpl
cmp
lds
imul
mov
mov
lahf
push
insl
jb
pop
mov
in
les
pop
insl
push
jg
fidivrl
pop
inc
add
sbb
mov
adc
daa
maskmovq
sub
pop
dec
xchg
add
adc
lret
les
xchg
loope
fwait
adc
cltd
imul
sub
outsl
dec
xlat
pushf
notb
call
in
pushf
cmp
les
push
enter
mov
loope
inc
add
mov
lea
add
inc
cmp
inc
sbb
pop
pushl
inc
icebp
enter
add
mov
testl
clc
sti
lds
add
push
cmp
pop
jnp
cwtl
stos
push
fistps
cld
fsubr
ret
ret
cs
sbb
loope
dec
add
ljmp
out
fs
cmc
adc
sbb
push
aas
sahf
mov
pop
push
or
inc
les
fimull
xchg
jp
adc
outsl
dec
enter
inc
pushf
ds
out
dec
sub
mov
xchg
out
jno
xor
jmp
call
in
sahf
gs
scas
push
xor
jne
xor
pop
jno
frstor
jecxz
xor
inc
cmp
mov
mov
repz
cmp
cld
movsb
cmp
ss
pxor
adc
and
leave
fwait
or
jl
and
push
aaa
int
fcmovu
sub
cmp
mov
mov
in
fsubr
xchg
mov
in
sub
jle
orl
mov
in
adc
or
xchg
lret
or
mov
icebp
mov
icebp
movsl
imul
pop
les
fstps
out
cmovb
stos
leave
xor
icebp
adc
test
jo
pop
lcall
nop
lahf
push
daa
dec
nop
push
aas
mov
ret
les
adcl
popl
sti
sahf
lret
insb
add
call
or
add
das
je
cmpxchg
andl
xchg
mov
cmpsl
cmp
das
addr16
movsl
add
into
in
lock
cmpsl
out
mov
xchg
stos
int3
das
pop
ss
dec
dec
lock
sbb
push
lock
es
xor
mov
add
lret
jns
mov
int
cmp
rclb
xchg
imulb
push
pushf
cmp
fistps
fldenv
pushf
neg
or
push
mov
gs
dec
and
leave
push
js
mov
adc
or
insb
inc
pop
stos
pop
lcall
or
mov
lcall
jo
pop
xchg
leave
stos
xchg
pop
fists
mov
idiv
mov
cs
jb
sahf
dec
cmpsb
mov
ds
xchg
ds
repnz
lods
sub
outsl
jno
inc
leave
int
fsub
jp
push
jmp
cmp
mov
test
inc
mov
and
les
adc
movsb
cwtl
ss
jae
insb
add
into
xchg
pusha
xchg
sarb
out
and
inc
fdivl
fsubs
repz
xor
xorb
bound
fucomi
mov
inc
xlat
push
xor
imul
xchg
outsl
add
xchg
push
movsb
fidivs
jno
mov
fwait
ss
jo
loopne
jcxz
and
inc
add
push
cwtl
jae
fstps
jne
movsb
ret
push
mov
cmpsb
es
roll
jg
xchg
xchg
imul
sbb
cmp
cmp
dec
xchg
jg
dec
pop
push
mov
fnstcw
or
rcll
pop
std
aam
pop
jbe
int3
xchg
cli
fsubs
addl
add
outsb
pop
xlat
xchg
lods
outsl
sbbl
jge
out
fcomip
addr16
jg
int
add
fsts
adc
sbb
mov
es
push
out
inc
and
out
add
add
jle
mov
add
xchg
sbbl
aam
mov
es
or
and
insl
or
out
sub
and
push
pop
xchg
push
sbb
mov
popf
int
iret
nop
push
sub
loope
inc
out
mov
xchg
lret
dec
movsl
ret
cmpsl
lock
pop
xchg
rol
fimuls
stos
aad
jno
out
xchg
repz
and
cwtl
das
clc
inc
lods
ljmp
pushf
scas
lea
sti
outsb
fisubrs
fdivrl
aaa
or
inc
std
ja
mov
into
fmulp
int3
loopne
inc
mov
lds
js
mov
adc
xor
push
mov
add
ss
loop
jg
outsl
loop
mov
dec
pop
inc
lret
fildll
cld
mov
cmp
inc
xor
and
mov
aam
dec
jb
ret
xchg
aam
lds
add
mov
rorb
ret
das
xlat
out
cwtl
stc
nop
lret
fwait
lods
jle
and
scas
jmp
jne
xchg
cmp
sbbb
pop
es
cmp
mov
aaa
lea
cli
mov
pop
pop
dec
shrl
mov
lahf
data16
and
shr
addr16
scas
mov
insb
dec
ret
or
jle
cmp
sbb
sbb
push
jecxz
jg
xchg
add
jno
inc
jno
in
out
clc
adc
xchg
inc
lahf
dec
pop
shll
sbb
shll
lea
clc
push
in
out
loopne
and
mov
sbb
rcll
jl
rol
mov
and
fdivrl
mov
xchg
xchg
es
gs
divb
es
dec
or
cmp
and
ret
cmp
sub
dec
loope
dec
and
push
iret
or
mulb
push
xchg
or
outsl
adcl
into
outsl
lret
out
add
or
in
dec
sub
jmp
adc
leave
or
addr16
leave
je
aas
xor
dec
je
mov
jns
fsts
leave
into
and
and
jno
cmp
popf
imul
scas
addr16
dec
or
aaa
aas
jno
dec
loop
xchg
cmp
das
inc
stc
sbb
dec
sbb
pop
jo
jno
icebp
xchg
dec
out
lret
mov
mov
push
and
mov
xor
pop
mull
loope
dec
jg
dec
lea
jp
clc
cmpsb
dec
mov
test
adc
mov
push
or
add
and
push
stos
decb
xor
nop
xlat
orb
pop
mov
xchg
xchg
inc
pop
lret
dec
push
jo
loope
sbb
repz
out
cmp
cmp
or
stc
nop
cltd
into
es
jb
pop
arpl
lds
imul
popf
in
xchg
icebp
stos
mov
popf
sti
mov
shl
jo
outsl
cmp
mov
jne
rcrl
xchg
sub
imul
and
movsl
icebp
lods
outsl
and
or
cmpsl
data16
scas
add
shll
out
add
xor
cld
and
aam
xor
mov
add
push
fstl
gs
mov
push
sub
push
fsubr
mov
dec
xlat
imul
pop
mov
ret
and
hlt
ss
dec
scas
push
jnp
dec
inc
mov
imul
fmuls
add
xor
mov
cmp
lret
divl
int
movsl
xor
fsubrp
gs
insb
mov
ljmp
lock
pop
xchg
cmpsl
push
movsb
sub
sti
shld
dec
mov
pop
in
rol
loope
dec
mov
adc
dec
jp
dec
sub
mov
lahf
pop
mov
loopne
inc
lahf
mov
xchg
sub
out
ret
es
mov
jg
adc
jge
cmpsb
mov
test
ljmp
xchg
mov
push
mov
dec
cmpsl
cltd
fwait
jne
inc
lock
scas
cmpsb
push
cltd
adc
aad
xor
in
outsl
pop
fstl
sarl
inc
add
dec
and
testl
ss
sub
or
fs
dec
mov
bound
hlt
cmc
pop
cs
jmp
shl
sub
pop
fidivrs
sub
into
fsubrl
dec
mov
pop
lret
mov
mov
out
test
dec
cmp
cli
fiadds
pop
sub
pop
cli
ss
add
int
inc
mov
push
in
subl
mov
testl
jl
sub
fs
push
jne
popa
int
push
dec
push
adc
cld
out
mov
xchg
jb
aam
mov
dec
lock
outsl
test
jb
dec
ja
xchg
mov
cmpsb
dec
inc
into
xorl
test
lret
adc
in
seta
lahf
ss
cld
mov
lds
xchg
add
pop
push
inc
arpl
adc
pop
loopne
hlt
pushf
popa
adc
imul
cld
adc
mov
push
imul
mov
cmp
xor
jp
cmp
push
jae
mov
mov
lcall
and
ret
sbb
dec
adc
testl
loop
pushf
fs
and
fsub
inc
fadds
loope
inc
popa
pop
stos
sbb
pop
adc
mov
mov
mov
je
scas
add
xchg
lret
jae
out
in
and
jge
sti
xor
ret
xchg
lods
mov
rol
jecxz
jg
push
xchg
inc
es
repnz
imul
flds
test
xchg
mov
fidivrs
pop
je
jmp
adc
mov
jl
pop
hlt
jle
sahf
and
test
mov
mov
fmull
jle
scas
es
cmc
cmpsl
into
xor
andb
inc
mov
jno
dec
mov
sbb
dec
adc
jp
dec
arpl
add
adc
or
stos
into
movsl
pop
pop
adc
jae
ret
sub
fwait
rcrb
out
test
mov
fisubrs
push
loope
and
and
and
decb
inc
sahf
inc
lock
hlt
mov
fnstcw
push
fmuls
test
cmpsb
xchg
ss
jle
push
mov
push
jl
sbb
in
sbb
cld
arpl
add
inc
or
and
repz
xchg
jmp
adc
jmp
inc
fwait
push
lods
or
inc
mov
data16
inc
mov
iretw
imul
aaa
aas
repnz
adc
in
inc
dec
lret
imul
lret
in
in
or
push
xor
inc
fisttps
pop
cs
stc
xlat
sti
sub
lcall
and
or
mov
adc
jl
cmpsb
enter
pop
jecxz
mov
push
inc
test
cs
lock
jecxz
jnp
adc
xchg
cs
adcb
mov
pop
and
outsb
push
icebp
jl
or
mov
pop
call
out
lret
repnz
pusha
je
imull
xchg
mov
inc
xchg
sbb
data16
test
cmp
stos
in
xchg
mov
in
xor
icebp
nop
imul
adc
stos
fsubrs
insl
jb
cwtl
inc
shll
xor
jg
xchg
cmp
add
clc
jg
scas
aaa
mov
cmp
mov
sbb
add
syscall
test
xlat
xchg
adc
stos
add
mov
adc
push
mull
or
lret
jno
mov
das
js
and
dec
and
and
dec
jmp
jns
insl
sbb
fsts
icebp
call
sbbb
add
test
or
dec
and
jle
frstor
push
inc
or
out
mov
sub
sbb
dec
jbe
xor
cmpl
pop
mov
shrl
and
addr16
mov
or
sub
push
fs
bound
lea
mov
or
js
test
sahf
sti
je
xor
inc
pop
jb
xor
xor
insb
test
xor
fsubrs
dec
loop
in
notl
setno
push
mov
mov
sub
stc
outsb
dec
pusha
rclb
sbb
repz
movsl
popf
lods
pop
sahf
fidivrs
cld
or
pop
push
push
je
jecxz
push
dec
das
jo
sbb
push
repz
pusha
dec
cmp
scas
jb
ds
pop
dec
mov
xor
pop
jae
daa
xor
sbb
add
insb
aad
mov
outsl
fmuls
inc
push
mov
xchg
cmp
out
push
and
mov
es
pop
int3
sub
jbe
iret
imul
mov
mov
fldcw
xor
pop
and
add
jae
sahf
push
stos
mov
jle
and
test
adc
stc
push
sub
push
mov
loop
dec
xchg
jae
cltd
xlat
jno
or
enter
sbb
jne
ss
mov
enter
pop
call
push
ljmp
incl
daa
test
pop
out
in
pushf
mov
mov
pop
jl
push
call
es
pop
and
in
call
sub
cmc
pop
and
sbb
js
dec
and
out
mov
adc
mov
std
insl
lock
inc
lahf
pushf
inc
repz
lret
roll
sub
mov
add
pop
mov
cmp
jecxz
pop
pop
jo
xlat
lds
mov
cmc
pop
jg
sub
xchg
cmc
push
xchg
mov
push
sbb
scas
and
push
pusha
inc
jae
jg
ss
and
sub
xor
inc
jno
xor
lock
or
add
adc
or
fmulp
fstpt
or
sbb
mov
jnp
int3
xchg
dec
pop
sti
ds
inc
aam
cli
xor
mov
jne
shll
in
xchg
std
adc
pop
rcrb
loopne
sub
ljmp
std
push
and
push
in
sub
aas
dec
jge
fbld
andb
shrl
push
fldcw
repnz
into
mov
xchg
cmc
push
mov
ja
xchg
cltd
call
dec
cmp
mov
das
scas
xlat
jo
cmp
push
into
fimull
dec
mov
nop
adc
jae
cmpsb
lods
jmp
daa
popf
or
int
sbb
sbb
mov
faddl
inc
das
std
scas
test
enter
jns
test
sub
cwtl
dec
iret
outsl
daa
das
shl
push
int
cmp
push
ret
outsl
out
insl
in
push
pop
fnstsw
cmp
fiadds
push
out
inc
sbb
aam
mulb
push
leave
out
pop
loopne
lcall
dec
xlat
push
mov
add
pop
call
mov
icebp
mov
mov
dec
jns
cltd
decl
lret
xor
decl
das
mov
xchg
sub
fisttpl
xchg
scas
sub
mov
sub
testl
repnz
ljmp
jae
decb
mov
leave
fcmovnu
pushf
push
sbb
call
pop
imul
lock
dec
ds
shl
push
jno
pop
div
mov
das
nop
xchg
inc
pop
ss
mov
push
xor
leave
fisttpll
jae
lret
sub
repz
das
fdivrs
mov
mov
in
cwtl
pop
sub
out
test
lds
aaa
pop
ficomps
xor
arpl
cmp
jbe
mov
into
enter
lds
cmc
xlat
ljmp
repnz
cmpsb
testl
inc
cmp
std
pop
cwtl
cs
fnstenv
or
mov
xchg
cmp
ret
pop
les
or
dec
scas
adcb
jo
jae
adc
mov
fiadds
adc
sub
push
lret
push
ja
pop
mov
pusha
sub
xchg
ficomps
jge
sbb
nop
sbb
pushf
shrb
dec
cwtl
jecxz
and
mov
inc
sbbl
je
dec
mov
leave
out
outsb
pop
mov
xchg
int3
rolb
shll
sbbl
outsb
mov
ss
dec
bound
sub
mov
pop
sub
inc
gs
daa
out
pop
cmc
inc
lods
rcrl
fadd
daa
sub
std
nop
xor
jb
add
xchg
fsubrs
popf
jns
pop
jo
sub
incl
push
or
cmp
jno
shrl
out
sub
in
sbb
stc
and
cli
pushf
xchg
fsubrs
ret
sub
out
dec
loopne
jmp
or
pop
xchg
jmp
push
loop
inc
sbb
scas
out
adc
jecxz
xor
add
icebp
orl
xchg
sbb
das
and
rcrl
and
jle
pop
rolb
push
cmpsb
idivb
scas
adc
cmp
andb
mov
mov
mov
dec
movsb
mov
xor
xchg
pop
cmp
jmp
pop
out
shll
fisttps
pop
jo
js
test
adc
addr16
push
cli
and
jb
in
xor
sbb
out
inc
xchg
xchg
mov
loopne
fndisi(8087
pop
jle
je
stos
mov
and
cmpsl
xlat
add
mov
mov
jns
sub
cwtl
stos
pop
into
mov
and
fwait
jecxz
cld
ljmp
jbe
pop
fsubs
test
cmpsb
mov
mov
rcll
gs
shll
pop
mov
lahf
mov
or
out
inc
dec
rcr
test
xor
dec
out
xchg
ds
add
mov
bndldx
sti
call
or
scas
inc
test
ret
adc
sbb
inc
andb
and
add
cwtl
aas
xchg
data16
push
or
clc
xchg
adc
xchg
mov
test
dec
adc
lock
enter
idivb
lea
pop
movsb
push
mov
jl
mov
sarl
cld
jae
inc
loope
cmpsb
jmp
mov
mov
push
mov
push
enter
sub
fwait
add
xchg
pop
jmp
add
gs
pop
and
xchg
sbb
addr16
shlb
mov
sbb
aad
cmp
jne
cmp
clc
pop
sarb
cmp
faddp
dec
imul
mov
add
inc
push
push
jo
mov
into
pop
fmulp
std
cltd
insl
jbe
mull
dec
pop
jns
jg
idivl
xchg
pop
push
loop
push
mov
stos
and
rorl
sub
loop
cltd
xor
adc
jo
pop
stc
cmp
add
imul
es
sahf
lods
xor
jle
cmp
mov
fcompl
sub
popa
xor
aaa
ss
imul
push
mov
jmp
pop
sbb
mov
pop
mov
xchg
mov
loope
jg
add
dec
jge
shrb
mov
push
and
inc
xor
mov
add
imul
xchg
or
cs
sarl
xchg
dec
or
or
adc
clc
xchg
jns
inc
rorl
movsb
push
adc
sub
sub
out
nop
xor
in
mov
iret
mov
mov
inc
lahf
and
add
fs
cmp
andb
push
add
push
sub
lock
cmp
sbb
mov
cmp
or
out
sub
int3
inc
mov
sbb
jmp
fbstp
inc
mov
mov
fldcw
push
ds
xchg
adc
loope
lea
sub
mov
mov
out
loopne
sti
dec
fbstp
outsl
push
jnp
adc
lret
pop
ret
cli
add
push
add
push
jmp
push
data16
fwait
inc
sbbl
mov
pop
sbb
lahf
pop
dec
dec
mov
inc
sbb
fsubrl
push
push
cmc
in
sub
bound
cmp
mov
fwait
adc
push
pop
adc
sub
xor
push
mov
cmp
inc
or
add
int
inc
js
adc
sbbb
xchg
enter
out
dec
stc
inc
cli
pushf
inc
daa
ds
push
jb
and
xchg
add
jbe
sbb
add
or
jle
pop
lods
jg
jbe
pop
and
ret
adcb
cwtl
inc
mov
cwtl
das
in
and
push
push
mov
inc
mov
or
out
aad
std
test
pop
repnz
cmp
ds
out
test
cs
push
clc
or
sti
fisubl
fdiv
lret
xchg
lret
jae
pop
out
mov
inc
jbe
cmp
sub
sbb
fs
push
mov
sub
pop
and
add
loop
out
add
std
dec
out
adc
imul
out
push
cli
and
loopne
mov
sub
jne
aad
lret
push
pop
xor
push
int3
dec
mov
aas
test
xor
push
or
call
xchg
push
jae
mov
xchg
loope
test
shrb
inc
mov
adc
stos
daa
inc
loope
jo
faddl
pusha
jb
or
or
mov
leave
pop
cmp
mov
in
dec
movsl
cli
pusha
loop
jbe
loope
stos
stos
icebp
mov
ljmp
jo
lea
xchg
ret
mov
mov
in
mov
dec
aad
daa
pop
andb
lds
mov
mulb
aaa
fstl
dec
add
mov
sbb
mov
in
outsl
mov
lret
xlat
insb
test
sahf
clc
push
jecxz
rclb
out
xchg
xchg
sub
movb
jl
cmp
in
popf
or
clc
mov
adc
push
xchg
add
and
pop
call
into
ret
popa
add
daa
sub
pop
fdiv
pslld
shl
and
fucomp
pop
and
ss
insb
pop
jns
int
into
ret
push
fwait
or
sbb
pop
imul
les
ret
out
sbb
cmp
pop
xor
aas
aas
jne
mov
imul
mov
je
ret
push
add
xor
lods
in
nop
shll
call
or
xchg
add
icebp
xor
jge
stos
shll
loope
in
mov
lods
call
mul
push
mov
test
push
add
jmp
mov
sbb
push
fidivs
adc
lcall
aad
enter
mov
fs
cmp
jmp
out
jp
xor
js
subb
jle
jge
or
dec
cmpb
ss
push
pop
in
scas
cmp
fimull
push
js
movsl
jo
es
ja
xchg
jbe
repz
fcmovbe
xlat
lret
addr16
adc
inc
ljmp
cmp
inc
xchg
insb
loope
cmp
inc
cmp
xchg
push
mov
loope
ficoml
dec
jbe
sub
negl
ds
fwait
negb
in
rcrb
jo
repz
sbb
inc
rolb
insb
pushf
sbb
pop
pop
dec
cld
xchg
sub
out
push
dec
jmp
ljmp
inc
sub
push
xlat
in
pushf
je
pop
cmp
cmp
dec
push
and
push
sub
fcoml
pop
mov
mov
pop
mov
mov
nop
addl
cmp
jle
mov
adc
jo
sti
dec
movsl
icebp
add
or
scas
xor
fwait
cld
xchg
jp
dec
mov
mov
push
push
mov
in
mov
std
xorl
fwait
out
and
test
imul
shrl
mov
mov
data16
dec
push
fwait
call
sbb
out
scas
fucomip
jl
xchg
cmp
and
pushf
ljmp
je
pop
movsl
stc
jno
mov
fisubrs
fwait
xchg
dec
test
dec
dec
dec
and
jp
mov
or
cmp
loopne
and
movsl
arpl
mov
test
inc
sbb
mov
inc
cli
lock
xlat
insb
in
or
loop
sbb
add
lock
fidivrs
push
mov
and
push
sbb
out
neg
or
xchg
xor
adc
cs
jb
lods
lock
das
add
push
inc
jnp
das
jne
xchg
test
pop
pop
add
fidivs
les
ret
std
cld
xchg
loope,pn
lcall
sbb
rcl
movsl
cmpsb
jle
pop
iret
sub
sub
je
add
xorb
scas
loop
inc
xlat
add
pop
adc
xor
or
fimuls
push
sbbl
adc
xchg
push
push
push
flds
int
in
arpl
in
addl
jge
repnz
in
xchg
dec
aam
and
sub
mov
les
jb
push
leave
js
cmp
mov
outsb
ja
mov
out
outsl
and
in
push
cmp
test
stos
inc
add
push
out
lods
ds
push
call
inc
sbb
mov
movsb
jb
popf
lret
fwait
and
inc
and
xchg
mov
fisttps
dec
mov
xor
jae
push
mov
inc
loop
shlb
js
sub
movsl
daa
cmpsb
mov
sbb
stc
sbb
inc
lds
int3
sbb
lret
xlat
push
out
push
jno
xchg
or
loop
mov
test
es
or
imul
int
inc
push
movsl
sub
leave
mov
sbb
push
aaa
pop
dec
out
int
outsb
ljmp
outsb
sub
jno
jno
sbb
cmp
cmp
inc
imull
in
jae
mov
and
mov
or
cmp
les
pop
pop
movsb
addr16
jns
imul
test
push
sbb
adc
dec
das
aaa
pop
sub
icebp
cmp
jb
push
push
add
sbb
rcr
lret
sbb
push
xchg
and
jle
mov
sbbb
dec
outsb
bound
insb
push
popf
mov
cltd
nop
pop
cld
lods
loopne
or
ljmp
mov
arpl
pusha
mov
sub
jle
jle
jp
xor
push
cmp
pop
jo
lds
jne
push
cmpsl
add
or
mov
leave
lcall
shrb
mov
pusha
sbbb
aaa
push
movl
aaa
pop
jno
xchg
dec
test
sub
sahf
inc
cmpb
out
cwtl
push
int3
es
imul
mov
in
sbb
aaa
sub
xchg
lret
push
popf
mov
stc
gs
push
test
xchg
pop
fsubrs
xchg
add
xchg
adc
dec
jg
pop
sub
outsb
mov
pop
push
add
mov
mov
fidivs
push
in
xor
shrb
shrl
cmp
mov
xchg
loopne
arpl
add
cmpsb
xor
push
or
and
jle
or
mov
pop
mov
int3
pop
sbb
mov
fxtract
lds
popf
push
push
mov
mov
push
mov
push
out
push
je
fdivp
cli
and
xchg
mov
das
adc
xchg
mov
mov
subb
pop
dec
ja
xor
loope
push
mov
fst
lods
sub
cmpsl
push
and
nop
mov
filds
clc
cmpsl
ret
fsubrl
or
push
and
and
push
sub
adc
dec
mov
inc
xor
in
lea
es
je
or
mov
ljmp
pusha
stos
stos
lahf
dec
aad
mov
js
popa
cmpsl
iret
out
jecxz
or
jecxz
fildl
shrb
jb
cmpsb
or
jnp
jle
cmp
sahf
or
pushf
cmpsb
adc
notb
inc
and
out
cmp
idivb
enter
cmp
mov
cmp
jbe
push
test
in
jnp
inc
cli
and
lcall
movsb
nop
jcxz
adc
dec
les
dec
mov
pop
ss
outsb
loope
lret
lock
iret
cmpb
stos
andl
sbb
sahf
lods
mov
cmp
push
aad
sbb
dec
aam
repnz
lea
jae
jp
pop
mov
ficoml
popa
jns
ret
ds
jp
adc
cs
inc
dec
dec
scas
mov
and
cmp
push
push
movsl
stc
sahf
sub
ret
sbbb
cmpsl
mov
into
aaa
test
insl
mov
jne
pushf
les
mov
stos
jg
test
add
jg
movsl
fdivr
popf
jg
std
push
movsb
adc
ja
aas
cmp
cmp
xlat
jns
pop
pop
clc
sbb
adc
shrb
xchg
decl
sbb
inc
pop
xchg
add
sbb
imul
xchg
aas
xchg
lods
rcr
mov
aaa
or
lods
jmp
xchg
pushl
inc
jge
test
sub
xor
mov
loopne
push
jmp
inc
xchg
jo
push
sub
popa
adc
out
jbe
inc
js
pop
pusha
ficomps
into
inc
mov
lret
scas
shr
add
aaa
sub
mov
jno
jns
outsl
imul
mov
data16
sbb
mov
mov
vmaxsd
dec
outsl
sbb
imul
or
fimuls
sub
push
or
gs
sbb
mov
adc
sbb
adc
pushf
popa
clc
int
push
sarl
jmp
push
shll
cmp
xor
mov
mov
outsb
pop
adcl
xchg
je
sub
cmpsl
imul
jo
push
dec
arpl
sbb
jno
mov
and
sbb
sbb
pop
xchg
stos
mov
outsl
inc
gs
jg
add
out
test
jle
dec
push
mov
in
cmp
dec
sub
mov
cmpsl
and
mov
adc
mov
stos
mov
push
mov
insl
shr
pop
mov
ljmp
cmp
sti
cmp
jp
mov
cmp
pop
or
mov
dec
repnz
rol
popf
loope
rcll
sub
pop
lock
add
out
sub
inc
in
mov
sub
sub
push
aad
add
cmp
les
fldcw
push
ret
fimuls
dec
pop
mov
jp
in
and
cmpsb
lock
imul
imul
mov
jbe
sub
stos
push
lret
adc
gs
outsl
xor
dec
ljmp
sti
inc
cmp
xchg
dec
xlat
xchg
out
dec
test
cmp
jp
cmp
insl
fidivrl
pop
mov
mov
pop
inc
or
cmp
mov
notl
jbe
mov
jge
in
daa
ret
xor
adc
imul
lcall
lcall
push
cmp
aas
std
int3
iret
imul
push
mov
arpl
dec
dec
dec
lahf
cmc
sub
mov
push
mov
cmpsl
outsl
and
test
inc
out
mov
cmp
lods
daa
push
push
clc
push
dec
cmp
addb
sahf
or
push
adc
lods
add
push
imul
shlb
dec
iret
cli
repz
add
sub
jl
ljmp
and
or
or
cmpl
xchg
dec
sbb
sub
lds
std
jg
pop
xor
ret
pop
mov
jle
add
cmp
das
sub
jb
shlb
inc
push
add
xor
add
push
dec
jecxz
adc
mov
mov
movsl
mov
popa
dec
subb
cmp
pop
cmpsb
push
mov
sbb
push
and
fs
dec
aad
dec
xchg
xchg
pop
loop
xor
mov
adc
pushl
mov
fldcw
xchg
cmpsb
int3
push
cwtl
cmp
and
pop
push
movsb
iret
and
sbb
cmp
add
xor
cmp
mov
push
mov
mov
data16
cmp
push
mov
dec
or
jo
cld
jp
mov
movsl
leave
jo
jne
scas
scas
out
imull
div
cmpsb
les
sbb
adc
sbb
test
hlt
mov
in
push
scas
lcall
jge
loop
xchg
mov
inc
outsl
mov
nop
outsb
pushf
out
scas
dec
iret
sub
cmp
daa
or
fldl
push
mov
sub
lods
cli
push
xchg
cltd
pop
mov
scas
push
imulb
cmpl
push
xchg
call
mov
xchg
lds
or
lock
addr16
rorl
std
lcall
in
data16
ja
push
js
sarb
popa
or
push
mov
cmp
push
leave
push
fistpll
mov
negl
jns
lret
push
adc
in
jl
popf
and
scas
mov
add
push
xor
popa
xchg
mov
mov
int3
out
imulb
icebp
cmp
andl
icebp
sub
dec
xchg
lods
ljmp
ljmp
xchg
jl
sahf
cmp
pop
fistl
push
cli
and
notl
stos
sub
inc
lret
in
sub
jne
clc
dec
out
mov
in
pushf
jo
jns
jge
push
or
fstpt
pop
jb
int
mov
pop
jmp
test
aam
adc
in
jno
test
lret
ss
or
sub
jecxz
gs
sub
ja
rorb
jmp
dec
pop
cmp
nop
mov
xor
jno
xor
jne
in
in
or
in
mov
cmp
lahf
pop
jo
pop
data16
push
adc
push
into
sbb
adc
sbb
or
push
stos
sub
jnp
xor
inc
daa
test
shlb
xorl
jne
xchg
sbb
sub
mov
icebp
pop
lds
cs
scas
mov
loopne
xchg
sub
cld
inc
push
xchg
subl
xchg
jnp
push
mov
dec
icebp
xchg
dec
out
mov
fstl
push
add
sarb
xchg
les
push
cwtl
or
pop
mov
mov
or
mov
sbb
test
fdivl
sbb
scas
scas
push
adcb
out
push
xchg
loope
and
adc
mov
xor
aad
xor
lahf
push
pop
push
leave
pop
or
sub
mov
insb
daa
inc
or
pusha
mov
loopne
add
aas
test
jns
dec
mov
pop
mov
add
leave
push
lods
out
xor
pop
push
int3
lods
and
cmpl
inc
xlat
jae
mov
iret
jmp
pop
xor
jmp
mov
push
pop
pop
inc
dec
adcb
idiv
aam
aaa
lret
inc
jecxz
sahf
imul
data16
adc
push
popf
mov
loope
sub
adc
in
sbb
call
cmp
les
or
lret
sbb
adc
inc
push
push
setbe
push
hlt
mov
cmp
xchg
xchg
insl
ljmp
xor
jo
mov
push
clc
repz
jbe
rorb
cmpsl
push
and
loopne
sub
addr16
nop
pop
pop
push
inc
jbe
imul
js
int3
lea
fistl
or
cmp
stos
push
add
out
dec
call
cmp
cmp
das
loopne
add
cmpsb
or
jne
sarl
fmull
and
jmp
test
jecxz
sbb
adc
inc
ljmp
xor
cmp
inc
popf
jnp
icebp
call
xchg
test
add
mov
jecxz
mov
mov
xchg
pop
and
mov
aaa
mov
sbbl
shrl
mov
sub
mov
xor
movsl
icebp
sbb
ror
or
push
mov
cmp
sub
bound
movsl
xchg
mov
outsl
movsb
addr16
push
push
adc
in
cmp
xor
stc
cmp
mov
mov
repz
pop
std
cltd
aam
pop
jecxz
stos
in
cwtl
push
sbb
xor
test
xor
mov
add
lds
and
cmp
xor
mov
dec
pop
adc
pop
lahf
mov
xchg
mov
decb
inc
sub
faddl
fimull
mov
mov
mov
mov
or
data16
cltd
dec
cmp
loop
cwtd
std
lret
sub
xchg
ret
jns
fidivrl
mov
jp
subl
pop
das
push
add
push
cmp
mov
imul
push
movsl
push
insl
jg
scas
sub
jg
cli
and
pushf
movsl
push
fwait
popf
cmpsl
xchg
lret
lret
xor
lcall
xor
or
icebp
push
pop
leave
int
rorl
divb
in
mov
jg
std
sub
clc
push
mov
push
xor
or
in
jp
push
sbb
cmp
xlat
add
or
and
lret
jp
cmp
data16
mov
divl
and
out
insb
js
cmp
sbb
rcl
pop
sbb
in
push
sarb
ret
push
pop
pop
push
lret
xorb
test
pop
mov
js
xchg
mov
jae
xchg
mov
inc
pusha
pop
jb
and
mov
xchg
ljmp
xor
les
jp
sbb
outsb
dec
mov
dec
cmp
adcb
jmp
add
mov
push
int3
data16
mov
pop
aaa
sbb
push
sub
ds
push
nop
arpl
aaa
sbb
int3
push
xor
mov
fisubrs
clc
cmp
add
ja
lret
inc
mov
dec
shll
mov
push
ror
xor
mov
fucompp
sbb
stos
mov
bound
jne
pop
and
xchg
jmp
dec
pop
and
adc
mov
xlat
aaa
push
stos
fidivrl
add
mov
cld
dec
mov
xchg
mov
pop
in
dec
adc
pop
out
fwait
cmpsl
outsl
pop
cmpsl
cmp
pusha
shrb
pop
jp
pop
and
movb
adcl
or
xor
push
movsl
in
or
mov
ljmp
stc
icebp
ja
inc
xor
or
sbb
cs
sbb
cwtl
pop
jecxz
ja
push
aad
outsb
mov
in
mov
jp
pop
cmp
push
pop
scas
ret
sbb
push
test
cmc
inc
test
dec
sbb
repz
or
mov
stos
addr16
jne
sbb
jbe
pop
test
mov
adc
faddl
inc
fdivp
lock
mov
push
xor
sbb
test
cld
lods
stos
lcall
sbbb
ret
sbb
mov
andl
jbe
cli
sub
ret
mov
push
xchg
imul
std
sbb
ret
and
ss
jbe
push
repz
jmp
mov
aas
test
outsl
sub
stos
adc
xchg
mov
cs
sbb
xor
inc
add
adc
inc
loope
lods
mov
lods
insb
ret
cli
idivl
push
sbb
ljmp
adcb
adc
mov
es
cli
stc
inc
pop
pop
mov
jae
xor
or
divb
out
loopne
dec
xchg
add
sbb
mov
pusha
jbe
das
inc
sbb
pop
adc
out
add
jg
mov
lea
push
adc
mov
mov
mov
or
and
xchg
jns
rcrl
or
adc
lcall
enter
jb
cmp
jbe
movsb
xchg
sub
or
sub
xchg
icebp
mov
int3
ret
outsb
sbb
fidivs
adc
jecxz
lock
pop
mov
enter
int
xor
push
int
data16
sub
add
xorl
ret
dec
jns
fisubs
loopne
aaa
push
lods
pop
pop
sti
mov
les
dec
loopne
sub
cmpsb
dec
push
xor
mov
push
mov
fwait
adc
and
xchg
mov
xchg
icebp
imul
iret
adc
test
pop
scas
call
sbb
adc
popf
lea
bound
cmp
cld
and
push
mov
mov
pop
mov
xchg
xor
dec
enter
fsts
adc
cmpsb
ficompl
xchg
mov
mov
push
dec
orb
ret
lret
out
loopne
call
sub
out
scas
gs
gs
sub
or
add
jmp
cli
aad
aam
mov
popf
add
jnp
loope
aad
jnp
pop
and
or
in
scas
pop
rcr
and
sub
dec
and
push
ficompl
push
sub
push
andl
std
adc
cmp
jle
ret
pop
fs
inc
bound
and
dec
lds
shrl
xor
mov
inc
jp
jmp
sbb
lea
je
xor
out
lret
jle
push
or
adc
mov
daa
mov
xchg
inc
lea
ljmp
adc
push
daa
xchg
dec
sbbb
xchg
jp
shr
push
cmpsb
dec
out
add
push
test
stos
in
inc
mov
clc
repz
xor
mov
mov
sub
dec
jns
fdiv
sub
add
int
pop
in
xchg
xlat
aaa
push
mov
rclb
fwait
push
inc
movsl
data16
popf
fisttpll
aam
jmp
mov
pop
inc
pop
nop
fldt
cmp
add
jae
cmp
adc
sti
scas
in
rcrb
into
add
dec
mov
test
push
xchg
sub
sub
mov
mov
mov
xchg
inc
pop
test
push
or
xchg
call
sbb
rolb
shr
sbb
push
in
cmp
push
inc
out
xchg
out
pop
into
movsl
cmp
pop
icebp
jecxz
aad
inc
add
adc
sbb
xor
xlat
xchg
cs
cmovge
mov
je
aam
xor
aad
xor
ds
mov
xchg
out
push
jecxz,pt
push
sti
jbe
lds
mov
leave
jae
rorb
mov
dec
popf
daa
mov
orl
inc
insl
sub
or
fstpt
mov
dec
inc
pop
xchg
push
push
fcomi
out
xchg
cmc
add
mov
jae
sub
fwait
add
mov
ja
lahf
inc
inc
nop
lret
popa
mov
outsl
mov
aam
repz
cltd
rcrb
inc
inc
aad
out
sahf
fiadds
pop
jb
divps
inc
cmp
or
imul
sbb
mov
cmp
xor
fcomps
sbb
add
sahf
repnz
call
into
sarl
test
pop
sub
jg
in
int3
addr16
jmp
pop
testl
dec
les
ss
jg
or
xchg
add
push
outsl
lods
jns
lea
seto
xor
push
movsb
out
push
adc
adcl
fwait
add
dec
mov
in
ds
jnp
ljmp
push
popf
push
add
cmp
rolb
jecxz
loopne,pt
jne
bound
sbb
adc
push
xchg
pop
aad
and
push
cmpsb
sub
mov
adc
jg
cli
mov
mov
and
push
daa
int3
data16
adc
cmp
fldcw
or
jbe
sub
movsl
popf
inc
fadd
mov
and
loop
xor
add
dec
lds
and
int3
pop
pop
jnp
push
test
and
das
in
imul
inc
fdivrs
adc
pop
jae
into
mov
adc
jae
loope
mov
mov
outsl
cld
cs
xor
bound
sarb
rol
sbb
hlt
dec
pop
fstps
adc
shlb
mov
ja
inc
and
outsb
shll
out
fldt
insl
sub
fsubrp
mov
test
mov
test
imul
divl
sbb
dec
repnz
dec
inc
aam
leave
out
pop
out
xor
sbb
pop
inc
pop
jb
sbb
push
cwtl
aaa
cwtl
shlb
data16
mov
inc
sub
pop
mov
sub
jl
ljmp
loop
mov
inc
das
inc
xchg
ret
adc
mov
ljmp
push
mov
stos
and
imul
test
inc
jns
dec
lock
cmpsb
loop
loop
popa
pop
or
xor
outsb
inc
xchg
scas
mov
cltd
cwtl
int
sub
xchg
mov
xchg
lds
sbb
lret
adc
mov
mov
inc
push
push
adc
ss
popa
repnz
sub
adc
add
mov
cli
imul
xchg
cmp
xchg
sbb
push
xor
xchg
mov
negl
sub
dec
ret
mov
sbb
xchg
jno
mov
les
pop
out
jae
mov
jne
mov
call
and
mov
test
test
mov
or
and
jmp
cs
imul
insl
or
inc
lods
pop
jle
jl
dec
sub
cmc
push
mov
xchg
push
in
and
mov
movsb
mov
mov
cmp
ret
test
pop
mov
mov
jl
xchg
cmp
pop
push
sbb
int
jb
mov
lahf
sub
aas
stos
je
lret
fnstsw
mov
cltd
push
xchg
addl
and
in
jns
das
push
ljmp
jge
in
mov
mov
enter
fisubrl
jnp
sub
pop
enter
dec
fldl
xchg
pop
xchg
cmp
or
cwtl
je
rcll
popf
loope
aam
testb
mov
fsubr
push
out
cmp
xor
xchg
das
cmp
mov
mov
xor
xchg
and
mov
mov
dec
lret
loope
int
sbb
mov
fldt
mov
cmp
inc
dec
pop
dec
sti
cs
bound
and
add
pop
popa
lcall
xchg
mov
es
jl
mov
push
popf
mov
imul
or
dec
incb
sub
add
or
data16
and
fbstp
testl
pop
testb
out
pushf
pop
mov
clc
out
jge
sub
mov
inc
call
jge
and
mov
stos
mov
js
dec
insb
jle
and
loopne
jb
leave
mov
popf
iret
and
mov
scas
sub
repz
fists
mov
out
jp
negl
movsl
or
inc
mov
fwait
decl
mov
scas
ret
pop
pop
loope
xchg
and
mov
pop
scas
mov
sbb
loop
popf
aas
mov
push
ljmp
or
or
cmp
jbe
icebp
push
adcb
fcoml
adc
xchg
stos
push
mov
loopne
xchg
xchg
or
std
mov
ds
push
or
lea
dec
xor
fistpll
jle
xchg
mov
rcll
push
cmp
xor
mov
push
aas
and
adcl
in
cmp
cmp
add
sub
and
cmp
or
std
insl
cltd
inc
pushf
xchg
push
in
pushf
xchg
or
dec
mov
pop
fiaddl
nop
into
gs
adc
into
movsl
repz
int3
imul
aas
repz
pop
lods
mov
icebp
cmp
mov
jno
sahf
aaa
or
clc
or
xchg
lds
movsl
aam
sti
or
sub
outsl
sahf
ja
scas
inc
std
add
je
push
cmpsl
ds
push
stos
inc
sbb
int
addr16
cltd
insb
push
arpl
mov
cs
mov
insb
les
lds
dec
mov
pop
push
jo
sarb
add
movsb
mov
xor
mov
ss
pop
icebp
fcompl
jnp
xorb
mov
mov
in
mov
or
arpl
icebp
lock
popf
sub
jne
lcall
ret
js
ret
in
lret
pop
mov
fdivrs
and
out
pop
sahf
std
inc
add
sub
lcall
loope
popf
addr16
xlat
mov
dec
or
ss
jge
in
xchg
stos
enter
call
stc
shll
in
js
call
fsubs
jns
stc
popf
inc
adc
rorl
add
xchg
pop
lahf
pop
pop
movsl
cmp
pushf
jno
sub
sub
sbb
les
add
iret
adc
inc
inc
in
xor
test
fidivrs
insl
lret
add
lods
ljmp
call
adcl
cmc
outsb
add
subb
mov
pop
and
imul
sub
call
lcall
adc
sbb
add
mov
cmp
pop
int
jae
dec
icebp
movsl
lods
xchg
cli
aad
jl
cmp
jl
adc
hlt
mov
sbb
mov
ret
int3
test
inc
pop
mov
cmp
rcl
pop
test
cmp
jb
lret
iret
loop
iret
adc
push
jb
pusha
xchg
mov
stos
or
out
jmp
popa
xchg
ret
or
jecxz
stos
outsl
add
mov
xor
cli
pushf
pop
shlb
inc
mov
das
jge
or
inc
inc
int3
hlt
sbb
rol
stc
mov
sub
es
jns
lds
adc
mov
shrl
addl
int3
xor
mov
arpl
mov
mov
loope
fs
aas
inc
jmp
ja
mov
inc
jle
inc
xchg
push
lahf
mov
hlt
sti
out
xchg
lods
add
into
pop
lds
pop
mov
or
mov
sarl
inc
flds
out
lret
pop
cmp
mov
mov
jge
adc
adc
or
icebp
popf
outsb
sub
adc
je
mov
testl
jge
hlt
rcl
push
mov
inc
cmpsb
dec
push
test
pop
loope
aas
xchg
sub
lahf
push
add
imul
push
xor
gs
iret
cs
js
pusha
cmp
cli
mov
push
scas
nop
lods
fisubs
or
enter
mov
stos
dec
stos
xlat
xchg
leave
insl
hlt
arpl
adc
sarl
lods
andb
mov
and
or
cmp
mov
aaa
jmp
adc
movsb
ljmp
dec
ja
adc
push
xchg
jmp
jo
add
sbb
cs
popa
cmp
jl
rorb
test
pop
aas
pushf
mov
aam
dec
aaa
fwait
cmpsl
cltd
bound
out
mov
scas
fbld
xor
mov
and
dec
sbb
add
popf
shlb
push
hlt
cli
xchg
enter
out
test
test
ss
daa
daa
je
pop
sahf
imul
mov
push
out
cmp
sub
mov
push
dec
js
push
xor
and
dec
addr16
pop
xchg
xor
or
clc
mov
push
add
push
sub
dec
fucomi
push
mov
pop
aaa
test
in
fstp
jmp
ficoml
idivb
dec
pop
icebp
jge
cmp
aas
sahf
js
xchg
loope
sub
mov
mov
insl
sub
jns
mov
pop
mov
ror
xor
cmp
xlat
push
arpl
xchg
ljmp
test
and
dec
mov
enter
or
movsb
imul
adc
outsb
mov
add
fwait
mov
movsl
in
mov
sub
pop
jo
ret
push
jno
inc
aaa
jbe
and
rorl
popa
fbld
mov
dec
xor
mov
jmp
dec
xor
fmull
sub
mov
mov
lods
jo
idivb
pop
aad
in
dec
inc
mov
adc
jp
dec
fdivs
shrl
dec
push
movsl
subb
dec
ljmp
sub
mov
dec
push
and
lcall
cwtl
test
cwtl
aam
add
je
into
lods
mov
shr
xor
bound
pop
cmp
and
mov
sbb
test
test
pop
jae
inc
push
cs
leave
sti
jnp
pop
sub
adc
mov
pushf
iret
mov
pop
fimull
push
lea
xchg
pusha
add
cmc
mov
push
ror
sbb
enter
ja
aad
add
add
xchg
bound
mov
mov
cmp
xor
scas
and
adc
xchg
push
bound
ljmp
push
out
imul
add
dec
jp
ljmp
int3
and
adc
shrl
cmpsl
arpl
cmc
mov
mov
cmp
test
and
xor
andl
pop
daa
inc
adc
repnz
cmc
lods
cmp
enter
scas
cmp
lahf
sub
lock
cmp
adc
xor
daa
lds
testb
jle
mov
pop
pop
je
hlt
jmp
inc
mov
fidivl
dec
gs
push
pop
xor
adc
sub
fsubl
cmpsl
xor
pop
push
mov
jp
lret
mov
bound
pop
jnp
cmp
std
xor
and
sub
lcall
repnz
stc
sub
in
cmp
and
adc
or
hlt
xlat
je
mov
stc
sub
push
or
jns
mov
jne
mov
or
mul
xchg
fisttps
mov
ja
lcall
xor
adc
xchg
add
js
xchg
sub
iret
add
mov
sahf
jp
xor
test
jg
pop
rorb
add
ja
icebp
in
xor
add
add
out
test
divb
add
mov
cmp
sbb
jge
testb
lds
jbe
stc
sete
push
popa
sub
xchg
pop
sbb
lea
xor
roll
xor
aad
dec
outsl
xor
bnd
sub
sub
mov
ljmp
lock
rorl
data16
fisubrs
sahf
rcrl
fbstp
icebp
out
xor
and
or
mov
adc
movsl
xor
mov
repz
push
scas
decb
setbe
and
ret
test
iret
in
or
sub
imul
inc
mov
cmp
adc
push
mov
or
cmc
push
addr16
ss
mov
nop
adc
idivl
ficomps
fldt
rol
cmp
push
movsb
mov
xor
out
mov
sub
dec
pop
mov
adc
cmpl
adc
insb
nop
lahf
mov
lea
inc
out
jbe
sbb
and
and
inc
fnstcw
adc
adcb
je
jb
push
xchg
mov
pop
xor
push
dec
push
mov
into
lret
add
push
popf
or
and
and
push
mov
popf
mov
pop
push
xor
test
iret
push
jmp
add
aaa
lret
bound
dec
in
pop
ljmp
les
leave
pop
pop
or
iret
jp
lock
add
mov
pop
sbb
xchg
pop
stos
jne
push
cmpsl
iret
in
cmpsb
sar
repnz
adc
push
mov
cmp
sti
inc
popa
mov
popa
mov
jge
inc
nop
push
cld
lea
adc
inc
sbb
out
imul
movsb
call
add
int3
push
jmp
testl
jmp
cmp
clc
xor
or
inc
jns
sub
jecxz
xchg
gs
push
rorb
cmc
sub
xor
mov
ds
push
je
jo
in
push
sbb
xchg
jmp
shll
push
jbe
dec
scas
aaa
cmp
lret
xor
adc
in
adc
pusha
test
mov
sbb
shr
mov
scas
out
xchg
dec
mov
jg
push
pusha
sarb
push
and
add
stos
sbb
inc
cltd
pop
jbe
sub
xor
pop
popa
push
inc
int3
add
inc
pop
mov
movsl
icebp
sti
jo
out
filds
xchg
adc
add
jecxz
insl
in
in
dec
mov
adc
cmc
mov
fstpl
aaa
pop
jb
add
aam
ret
mov
pop
cmp
test
test
je
xor
ja
aaa
bound
or
jmp
and
mov
cltd
adc
aam
jl
push
ret
cmc
es
mov
xchg
xor
mov
arpl
aas
into
rorl
pop
mov
mov
stos
xor
sti
outsb
andb
enter
imull
bound
icebp
and
mov
fcmovu
mov
inc
dec
inc
pop
insb
subl
xor
jno
fidivl
rcll
sub
insb
jbe,pt
pop
push
cmpsb
ret
inc
lock
mov
xor
mov
cwtl
dec
sbb
cs
pop
scas
fs
ret
lds
xchg
rclb
loopne
jmp
lret
cmc
or
sahf
pop
pop
ljmp
test
xchg
pop
xchg
andl
std
dec
iret
outsb
in
jge
pop
push
push
scas
mov
jns
dec
add
insl
sub
push
dec
loop
lret
pop
fdivrl
or
sti
ret
icebp
sbb
mov
sub
adc
push
push
sarb
aaa
call
adc
dec
mov
mov
push
scas
out
fdivrl
or
pushl
fnstenv
inc
lods
mov
pop
sub
negb
sbb
dec
jno
or
enter
mov
pop
leave
out
aaa
adc
popa
jns
cmpl
leave
xlat
xchg
int
inc
pop
add
test
icebp
dec
xchg
mov
cmp
cld
add
insl
jge
sbb
ret
mov
adc
shlb
sbb
ja
cmpsb
jno
fisubrl
mov
dec
jecxz
sub
xor
and
pop
and
inc
jl
lret
sub
jle
or
imul
mov
pop
cwtl
inc
and
adc
movsl
add
iret
fstl
daa
cmp
sbb
nop
xchg
inc
push
push
mov
mov
cmp
aad
mov
popf
sub
xor
out
sub
leave
xor
bound
iret
ja
jo
in
and
loop
dec
add
cmp
cmp
jo
lret
fistps
mov
es
lock
xor
xchg
loopne
test
gs
xchg
out
rcll
sub
das
xor
push
sub
lds
jl,pn
lret
inc
and
dec
inc
push
inc
lods
fs
in
xchg
ss
cmp
pop
movsb
or
jmp
mov
call
add
cmp
sub
adc
leave
push
sub
dec
fidivs
pop
jg
ja
inc
fdivrs
jp
xlat
cmp
dec
mov
mov
and
in
imul
out
add
in
add
or
inc
pop
stc
popf
test
call
adcb
sub
and
cs
fstps
ljmp
inc
jnp
inc
pop
insl
icebp
inc
add
in
xchg
imul
sbb
sbb
movsl
movsl
add
popf
cld
sbbl
fwait
dec
pop
sbb
or
fldenv
add
xchg
int
or
cmpsb
fs
add
mov
xor
xor
xor
bound
cmp
cltd
push
mov
and
cs
clc
rol
bound
mov
rorl
aam
pop
les
imul
jns
in
mov
dec
push
mov
push
cli
sub
mov
xchg
xchg
jle
addr16
push
sahf
mov
cmp
mov
hlt
and
dec
mov
out
lahf
inc
fwait
inc
adc
movsb
js
xor
adc
sbb
cli
and
stos
addr16
es
popf
mov
sbb
or
cmp
cld
loope
jns
push
inc
cmpsb
mov
jecxz
addl
mov
movsl
add
xlat
jl
add
jecxz
jecxz
cmp
cltd
and
mov
xor
sahf
ds
add
lret
add
mov
push
xor
lret
lret
mov
xchg
lods
mov
fidivrl
andl
pop
sub
mov
jecxz
mov
adc
scas
xchg
fstpl
dec
fs
mov
xchg
movsb
jmp
cmpsw
lcall
mov
push
inc
push
insl
pop
out
and
jbe
push
ss
sti
ds
lods
test
nop
adc
pop
and
or
cmp
test
lock
xorl
mov
lds
daa
lret
push
jle
ljmp
pushf
xor
popf
xor
out
mov
xchg
add
loope
push
sub
test
enter
ds
in
xchg
jg
mov
cmpsb
cmp
cs
enter
daa
ljmp
repnz
jnp
push
cmpsl
jbe
pop
rcrl
cmc
cmc
shll
adc
pop
mov
mov
sub
test
scas
cltd
sbb
mov
jg
rcrl
xchg
mov
negb
ss
sahf
repz
aas
out
jge
into
popa
xor
cltd
add
adc
pop
sub
fsubr
movq
push
push
mov
push
call
mov
mov
outsl
movsb
mov
jmp
ret
sti
xchg
xor
repnz
push
sbb
xchg
divl
xchg
in
xor
add
lcall
inc
aaa
adc
jb
aam
add
xchg
inc
lret
aas
cmp
enter
ljmp
inc
pop
adc
xchg
or
imul
dec
lahf
imul
adc
pusha
xchg
sub
mov
push
pop
cmp
jmp
mov
mov
push
inc
sbb
xchg
movb
test
inc
cmpsb
add
repz
cmc
adc
enter
sub
hlt
push
dec
lods
inc
jg
jmp
jb
movsl
mov
jp
sbbl
sub
and
dec
mov
pop
pushf
in
shl
fbstp
xchg
mov
fdivrp
cltd
push
dec
loope
mov
pop
xor
test
push
imul
sub
pusha
insb
push
mov
and
rol
push
jo
xor
xchg
push
loopne
add
jo
in
fnstenv
mov
mov
clc
leave
mov
add
inc
gs
xor
jecxz
enter
es
or
call
pushf
mov
lock
cmpsb
inc
stc
int
les
cld
inc
mov
xchg
test
aas
and
push
stos
mov
jle
xlat
scas
sti
fwait
stos
sti
dec
sbb
nop
jecxz
jno
jmp
inc
movsb
sbbl
pop
scas
and
sbb
les
lret
inc
adcb
add
and
cmp
bound
push
bswap
lods
jnp
stos
jmp
rol
insb
add
cli
or
or
stc
pusha
int3
mov
jb
push
cmpsb
int
push
sub
mov
js
outsl
jae
pop
roll
mov
insl
pop
jbe
mov
cmp
ret
or
data16
cwtl
or
mov
shl
out
cmpsl
mov
fbld
imul
mov
psrlq
mov
pop
test
push
int3
adc
adcb
mov
addr16
out
cltd
pushf
xor
xor
push
dec
out
sbb
mov
inc
jle
rcrb
aas
adc
or
shlb
cmpsl
out
push
or
xchg
mov
xor
repz
inc
popf
js
sbb
test
movl
mov
pop
nop
cmp
jae
jb
jle
cmp
leave
push
jno
mov
sbb
in
pop
sbb
loop
les
fdivs
sarl
sahf
fcmovnb
xchg
sbbb
fdivs
adc
and
add
dec
push
out
or
scas
inc
mov
fidivs
dec
pop
pushf
lret
jb
mov
lock
xchg
sub
shll
pop
and
into
loop
ja
sbb
xor
test
push
in
inc
fdivrs
push
adc
push
in
and
jno
addr16
scas
cwtl
jno
mov
jb
xor
mov
lret
xchg
mov
dec
ret
ror
adc
jno
dec
jbe
out
adc
cmpsl
dec
jmp
test
jp
icebp
mov
fldz
incb
sahf
mov
aaa
aas
push
rcll
fnstcw
aam
cs
shrb
repnz
mov
ret
pop
decl
test
shrl
es
cltd
mov
jg
icebp
repnz
mov
jmp
inc
out
jle
adc
scas
push
xor
pop
sbb
nop
jle
movsb
cmp
and
pop
push
mov
jb
cmp
sbb
loope
xor
xchg
xchg
subl
dec
ror
mov
inc
pop
jo
xchg
push
mov
pusha
arpl
inc
andl
jae
subb
lock
stos
je
pop
loop
movsb
adc
rcrl
xchg
cmp
arpl
cmp
push
clc
popl
and
gs
ss
mov
stos
ss
mov
push
aam
push
stos
shl
andl
xchg
dec
test
rolb
jne
data16
xor
inc
adc
pop
fsub
dec
in
loop
scas
lea
lea
ret
hlt
pop
adc
or
test
cmp
pop
jno
add
lds
mov
or
pusha
push
xor
pop
add
loopne
push
inc
push
fistps
or
inc
ss
mov
cwtl
add
mov
xchg
push
ljmp
mov
adc
icebp
dec
loopne
in
stos
loope
addr16
cli
mov
xchg
push
repz
pop
sub
xrelease
xor
loopne
fcmovu
int3
pop
fstpt
andl
repz
fs
lret
and
cmp
aaa
orb
adc
repnz
jns
sbb
addr16
push
pop
jle
stc
imul
and
fmuls
dec
aad
sbb
push
testl
inc
js
ret
push
sub
jecxz
gs
pop
mov
fstl
xchg
test
cmc
cmp
pop
xchg
inc
add
in
pop
scas
dec
fcomps
jecxz
imul
jmp
jo
test
data16
inc
movsb
xlat
xor
insb
push
cli
mov
ss
mov
fcomps
or
and
mov
in
dec
sub
cwtl
das
mov
fdivl
out
ds
popl
fildl
jno
and
adc
dec
testb
inc
sbb
test
mov
xchg
pop
sahf
mov
repz
out
stc
sub
add
cmp
sti
popa
sbb
cmpsb
sub
les
dec
sub
mov
cmp
cmp
cmc
sub
loopne
lahf
loope
rcrb
xchg
pop
jp
decl
test
push
pop
push
push
add
negb
push
pushf
adc
xchg
stos
shr
ss
inc
dec
adc
aam
das
inc
arpl
outsb
sub
mov
fwait
xor
stc
movsb
mov
ljmp
sub
or
jo
test
add
ljmp
in
mov
outsl
adc
sub
lcall
push
mov
idiv
fs
jo
lods
mov
push
stos
enter
or
cs
inc
adc
push
push
or
mov
fiaddl
adc
test
leave
lods
sbb
dec
and
mov
in
mov
sti
test
push
cwtl
pop
lret
in
js
out
test
cmpsl
jnp
jge
pop
inc
pop
insb
push
popf
movsb
data16
lret
mov
push
in
ficompl
jmp
add
and
or
push
add
fmuls
icebp
xchg
jb
adc
fstpl
nop
es
dec
xchg
ds
adc
aas
movsl
mov
jmp
mov
aaa
in
sub
fdivl
or
jmp
fstpl
dec
or
ds
je
pop
mov
clc
dec
bound
jnp
ss
pop
cmp
pop
inc
or
outsl
dec
pusha
ret
inc
ljmp
fadds
es
test
lcall
jmp
pop
sti
mov
outsl
or
jle
mov
push
jmp
xchg
into
cld
mov
inc
inc
sti
cmc
fsts
cmp
mov
aaa
push
lods
push
cmpsl
test
lret
addr16
lea
stc
sub
repnz
inc
push
or
in
mov
imul
mov
jecxz
adc
lret
sahf
sbb
fcoml
mov
stos
push
mov
xor
fucomi
int3
dec
in
test
add
fnstsw
or
mov
pusha
lret
lret
test
es
and
sti
cwtl
lods
cmpsl
lcall
ret
cld
out
iret
arpl
add
ljmp
jne
and
fiadds
dec
dec
out
data16
xchg
dec
dec
arpl
lahf
das
inc
inc
push
test
and
in
test
push
jo
cmp
dec
xchg
mov
dec
pop
out
rorb
cmp
dec
push
mov
adc
xchg
xchg
mov
aas
shl
repz
xchg
jno
repnz
push
xchg
adc
xchg
cmc
mov
xchg
mov
xor
shll
inc
jmp
jp
cs
push
mov
adc
enter
jae
push
inc
sub
inc
push
xchg
mov
sbb
es
pop
test
cli
push
outsb
aaa
xor
xor
andl
ss
xor
push
inc
push
ss
push
test
popa
xchg
mov
and
in
das
popa
stc
mov
aad
push
pop
ja
or
iret
jo
andl
lahf
cs
add
adc
sbb
mov
mov
pop
or
rcl
sbb
je
mov
cwtl
or
mov
das
xor
jle
xor
loope
dec
mov
int3
mov
mov
push
aam
stos
pop
sbb
fnstenv
in
bnd
fstpt
adc
aad
std
pop
shll
lcall
shr
push
aas
inc
movaps
lret
lock
gs
push
xchg
fdivrl
addr16
mov
fs
mov
xor
roll
sub
bound
or
jmp
pop
mov
ljmp
hlt
dec
ret
cmc
rolb
mov
mov
xor
add
jg
mov
add
ret
stc
daa
inc
mov
xchg
add
cmpsb
cmp
test
bound
mov
adc
mov
mov
movsb
or
sub
add
mov
jnp
fnsave
mov
dec
mov
pop
arpl
sbb
in
adc
in
stc
sub
fwait
scas
inc
int
xchg
lret
int
inc
enter
mov
arpl
push
sbb
push
or
mov
or
xor
mov
cmp
fs
or
inc
lock
inc
pop
cmc
sbb
jg
xchg
mov
fdivl
int
push
ljmp
xchg
nop
les
shl
adc
push
xor
pop
dec
cmc
into
sub
dec
les
jge
dec
in
bound
inc
sub
sub
or
mov
add
cltd
lea
mov
mov
movsl
call
dec
inc
or
push
mov
jmp
cmp
outsb
mov
push
int
jecxz
cli
lea
mov
sti
inc
jp
pop
adc
xchg
inc
movsl
dec
xor
mov
loop
mov
sarb
pop
addr16
fcoms
leave
sbb
and
movsl
sbb
or
or
and
sbb
insl
iret
and
xchg
fistl
notl
cwtl
nop
mov
fwait
ds
lahf
fsubs
test
inc
ja
je
pop
icebp
jno
or
adc
in
push
pop
mov
scas
sub
dec
lock
fdivrs
sub
into
mov
stc
arpl
push
sbb
shlb
cmp
jge
jne
getsec
stos
jne
cmpsl
push
out
dec
test
scas
adc
lods
cmp
enter
xor
add
push
mov
or
fisttps
and
jmp
ret
clc
sbb
cli
or
test
mov
pop
mov
mov
in
mov
push
xor
shrl
psubusw
mov
push
fsubr
test
inc
fimull
xchg
cs
fwait
pop
mov
lea
in
pop
xlat
imul
insb
add
dec
repnz
cltd
xor
call
pop
adc
cmp
mov
clc
lods
imul
jne
pop
ret
push
cli
stos
pusha
loopne
cmpsl
inc
hlt
xor
mov
xchg
push
cmpl
inc
loop
push
adc
or
pusha
mov
icebp
mov
ljmp
xor
mov
push
xchg
addr16
jno
ja
mov
clc
adc
je
jge
imul
and
sbb
push
insl
cmp
subl
andl
dec
mov
mov
sub
pop
adc
int
mov
fstpl
push
mov
daa
and
sar
mov
lods
sbbl
add
movsb
mov
fucomp
mov
repnz
and
xlat
cmpsl
sbb
enter
sub
jge
lahf
sahf
xor
pushf
stos
mov
mov
fildl
test
scas
decb
jge
push
ss
cmovs
insl
sub
pop
fbstp
mov
sti
into
orb
mov
mov
aam
inc
push
dec
xor
test
jmp
movsb
dec
scas
lods
mov
mov
push
jl
sub
fcomps
neg
out
push
pop
test
inc
and
mov
or
jbe
pop
out
mov
cmc
mov
cmpsl
dec
insl
ja
adc
je
mov
sub
and
jbe
push
mov
imul
adc
mov
push
outsl
push
push
int
xchg
addr16
or
movsb
or
fs
xor
mov
fwait
inc
mov
cltd
je
mov
mov
mov
aas
outsl
mov
pop
rcrb
das
repnz
test
jns
mov
pop
ror
aaa
push
iret
in
mov
push
fwait
bound
pop
jnp
xor
mov
cmp
lea
sub
jno
loopne
inc
pop
loop
cmp
into
cltd
push
xchg
mov
subb
jns
jno
les
mov
pop
imul
adc
lock
in
xchg
mov
add
movl
repnz
jb
loopne
mov
test
and
stc
add
mov
int
das
inc
push
addr16
bound
pushf
pop
das
addr16
ljmp
addr16
dec
aam
mov
fistpl
pop
rol
lods
addl
xchg
add
mov
push
addl
fstps
inc
add
xchg
mov
sbb
jl
sub
cmp
dec
mov
sub
lahf
insb
stc
int3
sarl
int
ds
and
fcmovne
adc
mov
out
testb
test
mov
lods
icebp
pop
or
or
push
push
sub
aaa
jne
shlb
mov
push
fisubs
add
jmp
pop
cmp
stos
and
fcoml
xchg
adc
mov
test
stos
ljmp
mov
jnp
push
ss
into
das
shr
jge
push
add
push
test
jmp
fildl
int3
and
jo
jg
cmc
or
xor
mov
xchg
push
dec
sarb
mov
pop
sub
imul
push
ja
int3
mov
push
push
jmp
jecxz
mov
inc
rcrl
jmp
dec
mov
cmp
and
mov
aam
pop
push
adc
mov
mov
orb
mov
pop
bound
jnp
nop
jmp
orl
aam
mov
jmp
mov
scas
fwait
pop
enter
sub
add
fldt
xchg
mov
movsl
clc
ds
test
repz
jle
dec
lret
push
cmpsl
jno
dec
repnz
sbb
xchg
mov
lods
insb
outsb
mov
pop
or
dec
imul
jle
add
dec
cmp
shr
pop
xchg
pop
sub
pop
sbb
push
and
mov
inc
out
daa
psraw
xchg
fcomps
hlt
dec
and
iret
and
call
pop
int3
mov
sbb
and
pop
insb
cld
jg
daa
dec
adc
sti
fsubrs
push
loope
add
mov
je
ja
out
pop
ja
pop
repz
call
xchg
dec
fmull
inc
lret
jnp
test
aaa
mov
insl
cld
xor
cs
insl
sbb
push
xorps
jne
mov
adc
jmp
xchg
aam
adc
jns
push
sbb
push
xorb
popf
push
fwait
jbe
pop
hlt
sbb
aad
xchg
add
repz
adc
cmp
ja
out
cmovnp
fnstsw
mov
icebp
outsb
add
mov
ja
mov
mov
push
mov
ficomps
xchg
pop
sub
or
pop
pop
rclb
cmp
push
adc
or
enter
push
stos
hlt
sbb
jge
adc
imul
mov
cld
xchg
movsb
cmp
add
out
and
cmp
adcb
dec
dec
mov
pop
pop
ja
arpl
sub
mov
out
fwait
sbb
hlt
rcll
add
dec
xchg
cmc
jle
dec
sbb
or
sub
daa
int
jne
cmp
fwait
je
sbb
push
dec
jae
xor
inc
xchg
xchg
mov
xor
adc
mov
add
adc
xchg
cmp
addr16
xchg
or
je
mov
mov
push
call
fldt
cs
ljmp
outsl
clc
or
cmc
cmp
pop
lret
fxch
ds
add
xlat
shll
andl
fisttps
dec
in
push
push
in
inc
push
out
cli
adc
cmpsb
mov
test
sbb
mov
pop
negb
mov
clc
jge
jmp
and
mov
mov
les
ljmp
rclb
dec
in
xchg
xor
sbb
dec
sbb
jecxz
sub
js
adc
cli
das
fdivs
lret
xchg
or
bndstx
jb
push
and
ss
and
push
xor
fldcw
lea
out
sti
inc
rorb
in
pop
cwtl
data16
mov
or
xor
je
push
aas
xchg
sar
pop
add
lods
les
loope
scas
cmp
out
xor
push
div
lds
leave
mov
popa
stc
outsb
and
pop
push
xchg
xor
jle
xor
pop
mov
bound
movsb
xchg
pushf
sub
orl
sahf
dec
nop
pop
in
shl
jge
mov
cmp
adc
sbb
dec
stos
test
popa
outsb
out
lahf
or
inc
push
repnz
xor
test
into
mov
pop
lahf
pop
push
fwait
jae
sub
int
shlb
icebp
adc
dec
sti
jmp
stc
cs
lods
fildll
xchg
adc
dec
inc
or
std
and
mov
mov
jg
je
scas
inc
ret
jle
push
out
dec
add
insb
jnp
lods
aas
int
ss
mov
xchg
or
rorl
test
xor
rorl
xchg
cwtl
push
sub
lret
jae
loop
xchg
xchg
push
adc
movsl
adc
sti
add
jne
pop
mov
cwtl
dec
adc
ds
jmp
mov
adc
das
xchg
cs
mov
js
repz
mov
aas
mov
test
and
and
into
or
xchg
cmp
lcall
xchg
push
cmp
out
lcall
jmp
adc
arpl
enter
or
aas
mov
test
lahf
rorl
push
sub
scas
mov
out
cld
call
xor
sub
push
sbb
jns
testb
cmp
cltd
loopne
and
shlb
push
push
fistpll
fisubrs
cmp
aaa
and
out
pushf
scas
pop
xor
test
or
es
inc
in
arpl
add
mov
add
outsl
je
push
call
clc
lahf
mov
arpl
add
iret
int3
mov
mov
jbe
es
aas
aaa
dec
xor
shll
jle
push
test
mov
jle
call
test
mov
jle
sub
mov
std
and
add
xlat
mov
pop
out
adc
bound
movsb
jbe
add
cmp
repz
and
sub
sub
fcomps
je
xchg
pusha
shrb
adc
mov
mov
sbb
je
outsl
enter
add
jle
mov
push
popf
xor
adc
clc
dec
loop
inc
js
stos
and
pop
push
bound
xchg
pop
pop
fdivrs
in
out
pop
mov
cmp
and
fdivrs
push
icebp
enter
iret
lret
arpl
or
mov
call
cs
cmc
adc
shll
js
adc
lret
rcl
mov
out
mov
mov
aam
sarb
mov
xchg
adc
pop
jmp
xchg
mov
leave
lret
testb
test
push
jne
jecxz
std
popa
pop
xchg
xor
push
std
xchg
jae
or
adc
sub
lret
mov
arpl
inc
add
es
out
sub
sbb
jnp
jae
push
sub
imul
lea
adc
xchg
stos
mov
in
repnz
aam
xor
sbb
jmp
insb
push
jmp
iret
jp
es
adc
adc
fs
xchg
scas
sbb
std
aaa
aas
mov
mov
mov
cmp
call
mov
cli
sbb
stc
nop
pop
xchg
jl
push
jne
xchg
pop
add
sbb
js
xchg
and
lahf
test
or
cmp
pop
loop
adc
xchg
cwtl
int3
fwait
inc
pop
pop
in
sub
push
lret
jp
jbe
inc
pop
in
sti
push
add
cmp
das
jns
imul
add
xchg
into
xor
bound
fisubrl
sti
subb
pop
fistl
clc
or
pop
fwait
jmp
fnsave
or
cmpsl
xor
push
mov
jle
aas
int3
sbb
je
pop
fs
cltd
jne
and
xchg
push
scas
call
pusha
push
jb
jne
lds
add
push
xchg
enter
ds
sub
jns
scas
pop
repz
andl
adc
xor
icebp
jae
movsl
movsb
adc
int3
lcall
xor
or
jb
in
imul
clc
xchg
cmp
loope
or
xor
stos
popa
inc
lahf
mov
push
cmp
js
adc
ja
lret
sub
out
stos
stos
push
aad
test
lds
sub
adc
push
adc
idivb
sub
fsubrs
and
loope
mov
imul
or
mov
sub
fucomp
or
and
push
jne
cmp
stos
inc
in
pop
lret
leave
movsb
inc
push
leave
sub
out
cmp
cmpsb
dec
pop
sub
inc
cmpsl
lds
xchg
xchg
aam
testl
xchg
mov
sbb
aad
ss
lahf
in
addr16
push
pushf
and
incl
fucom
dec
mov
js
mov
iret
imul
xor
jmp
js
xlat
and
or
stc
push
jne
push
jbe
rolb
jno
aaa
sub
scas
ret
sahf
mov
xchg
in
push
and
dec
sub
out
test
add
or
inc
fcmovnu
sbb
in
rorb
vphaddwd
pop
jle
xchg
imul
outsb
inc
sub
cmp
cld
sbb
popf
or
lods
out
movsb
dec
fiadds
xchg
xchg
out
xchg
sub
sti
shr
adc
pop
sbb
cmp
mov
dec
and
ljmp
or
enter
xor
ficoml
push
addr16
sbb
mov
inc
or
pop
mov
repnz
stc
js
or
mov
pop
loopne
out
repz
sub
adc
sar
filds
daa
or
iret
push
lret
mov
mov
mov
sbb
pop
lock
jnp
in
adc
xchg
xor
jae
daa
shlb
jbe
iret
push
ss
cmp
js
js
test
jne
scas
push
stos
pop
mov
lods
mov
jmp
test
gs
out
add
inc
mov
pop
shll
ja
push
push
icebp
add
pop
mov
cltd
sarb
fnsave
js
sub
cli
pop
add
pop
rol
shrb
dec
dec
xor
aam
adc
push
int
gs
icebp
call
dec
scas
test
clc
loope
sub
pop
mov
mov
repz
stos
test
pop
les
cwtl
fs
int
je
and
mov
inc
fsubl
shr
sub
hlt
fiaddl
push
push
pop
cwtl
pop
inc
leave
jno
std
int3
sub
mov
mov
ds
mov
pusha
push
stc
aam
stc
lock
mov
nop
or
adc
jmp
fadds
or
lds
adc
int3
jl
mov
inc
pop
daa
xchg
ja
mov
movsb
push
rorb
aad
jns
jne
addr16
bound
xor
hlt
dec
fisubrl
insb
ret
jmp
lds
mov
addr16
aas
xchg
adc
das
xor
push
jnp
push
shr
fwait
insl
add
mov
mov
movsl
push
lods
xchg
jno
xor
sub
push
jo
frstor
mov
scas
ja
xchg
lods
leave
cmp
faddp
das
push
mov
fs
and
adc
sub
xchg
scas
xchg
hlt
pusha
pop
shlb
test
lock
cmp
repnz
dec
ss
push
pushf
push
pusha
subb
mov
das
jg
shll
pusha
fbstp
lahf
cs
in
sub
rorl
insl
add
out
dec
push
pusha
adc
fwait
leave
xor
xchg
xor
mov
mov
inc
lcall
xor
dec
ja
cwtl
jne
xchg
cmp
adcb
cmc
add
repz
mov
adc
pop
sub
sbb
iret
and
pop
shrl
dec
in
mov
add
lea
adc
mov
adc
xor
lods
jns
push
divb
cli
in
mov
or
xorb
sub
cld
aad
jp
divb
adc
fwait
cmp
xchg
mov
mov
cmp
mov
shlb
fldl
xor
test
aaa
mov
lea
sub
dec
dec
mov
mov
dec
hlt
pop
jb
cmp
xchg
pop
nop
xor
leave
inc
into
fwait
jb
mov
test
notb
lds
ljmp
cmp
bound
aam
out
popf
in
and
jle
pop
scas
dec
sub
and
mov
cli
fsts
mov
dec
loopne
idivb
into
lret
pop
mov
and
aam
inc
mov
adc
add
xorl
xchg
push
sbb
movsb
icebp
and
pop
inc
and
rep
xchg
shll
jl
add
mov
es
jne
insb
lcall
add
xor
jb
sub
out
and
aas
fldl
mov
es
xchg
rorl
jnp
sbb
lods
mov
jb
jbe
or
lcall
xchg
enter
xor
fsubr
mov
daa
xchg
or
daa
add
jno
stc
lds
or
sahf
sub
out
inc
pop
pop
andl
icebp
mov
pop
popf
jp
mov
xchg
pop
sub
pop
xchg
mov
inc
cwtl
push
add
sub
leave
cmp
hlt
and
or
rorl
test
loopne
rorb
insb
ret
cli
mov
das
push
jg
push
push
dec
loop
mov
lock
push
sbb
mov
pop
and
inc
mov
xchg
fildl
mov
shll
test
sarb
inc
gs
mov
fidivl
push
out
sar
or
test
and
jae
pop
pop
mov
inc
arpl
mov
sbb
mov
add
cmc
adc
sbb
and
popf
mov
stc
mov
jns
or
cwtl
leave
sub
push
mov
stos
inc
xor
add
push
es
ret
dec
shlb
jge
sub
sub
lock
clc
inc
pushf
dec
push
into
fs
xchg
in
jno
mov
add
cli
mov
add
fs
pushf
push
outsb
imul
adc
nop
fiadds
notb
int3
outsl
sbb
dec
add
mov
loopne
mov
add
inc
lods
push
in
test
pop
sbbl
icebp
int
mov
adc
mov
jmp
push
fdiv
cmpsb
or
mov
mov
fbld
mov
popa
ret
int
out
ret
xchg
fcmovnu
lods
add
add
outsl
shll
inc
stos
ds
testl
add
aaa
pop
testb
repnz
sub
inc
xchg
dec
je
cmp
dec
cmpsb
aad
or
daa
js
test
xchg
scas
jnp
fsubr
sbb
inc
xor
dec
adc
mov
mov
fwait
imul
orl
loop
adc
loope
repz
and
mov
jmp
xchg
xor
jb
jo
ret
add
scas
inc
mov
test
xor
mov
mov
loop
insl
lcall
jbe
and
fists
fnstenv
add
ss
in
mov
imul
fwait
xor
pop
stos
xor
mov
jo
dec
jo
cmpl
adc
jae
adc
leave
insl
lea
fwait
adc
push
mov
loope
out
not
add
adc
idivb
cli
imul
adc
into
pop
sbb
mov
icebp
out
mov
leave
jns
inc
jecxz,pn
mov
mov
pop
xchg
dec
flds
lea
hlt
sbb
xchg
pop
fnsave
clc
cwtl
inc
sub
cmp
hlt
enter
pop
or
jae
les
outsl
push
sub
call
insb
xlat
cltd
or
jae
bound
mov
clc
iret
shr
mov
ds
push
mov
pusha
out
ds
dec
xor
test
loop
imul
mov
cmp
xchg
les
and
imul
inc
aaa
xor
fisubrl
cmp
lret
ds
loopne
inc
mov
out
scas
ja
inc
in
test
cmc
mov
lcall
into
out
or
dec
mov
mov
push
adc
stc
adc
out
cwtl
mov
int3
mov
aam
lcall
ljmp
inc
mov
mov
lahf
mov
xlat
outsl
jo
push
ljmp
jno
pushl
mov
inc
repz
pop
push
scas
into
and
pop
inc
repz
fldt
cmpb
adc
sbbl
mov
mov
stc
add
lds
sub
jp
jl
imul
popf
add
jmp
enter
lock
add
clc
leave
call
repnz
mov
jbe
pop
mov
sbbl
mov
cmp
inc
cmpsb
test
inc
cmp
sbb
mov
popa
sbb
mov
jmp
mov
add
pop
cmp
les
out
adc
mov
cmpl
and
flds
scas
push
pop
imul
in
pop
pushf
cli
push
jae
mov
nop
rcll
call
and
leave
mov
push
ljmp
sbb
inc
ds
cwtl
and
mov
adc
das
ret
push
lahf
xor
adc
lods
lret
push
inc
dec
push
mov
pop
lret
lret
insl
and
fldenv
xchg
push
and
jae
loope
xor
pop
stc
in
push
mov
repz
jo
arpl
jns
jecxz
pop
lret
adc
mov
das
sub
inc
mov
clc
mov
dec
mov
sub
mov
jae
mov
out
add
lock
fcmovnbe
addr16
lea
push
mov
adc
sub
popa
sbb
leave
or
push
mov
xchg
sbb
mov
and
inc
fiaddl
xor
push
bound
lret
scas
jo
iret
lock
dec
sbb
mov
push
lods
cmc
inc
movsl
mov
popf
sub
pop
xor
jge
sub
mov
and
lods
sahf
arpl
mov
add
mov
pop
out
xchg
sbb
jp
cmp
stc
fwait
pop
mov
add
shrb
mov
mov
notb
addl
or
idiv
fwait
adc
gs
femms
movsl
xor
jnp
jmp
cltd
xor
aas
ficoml
xor
in
loope
add
xor
push
jecxz
pop
out
jae
dec
push
fistl
xchg
sub
mov
xor
insb
les
inc
repnz
inc
xlat
xlat
push
mov
ss
pop
gs
rolb
and
insl
cld
mov
lea
or
int3
mov
mov
cmc
jle
leave
mov
mov
jge
stos
pop
pop
cmp
das
nop
xlat
push
xor
cld
loop
mov
xchg
add
fcom
or
jmp
xor
and
sbb
int
arpl
xchg
cmpsb
xchg
lods
or
mov
ret
sti
inc
xchg
mov
hlt
jmp
push
imul
cmpl
xchg
and
lcall
and
xchg
ja
test
addl
sti
mov
std
jmp
fdivr
inc
test
fbstp
pop
daa
nop
inc
std
je
mov
dec
loopne
xchg
ret
xorb
aad
dec
pop
mov
ljmp
push
jb
in
stc
iret
pop
mov
orb
pop
mov
jbe
movl
mov
test
out
rcr
dec
lret
xchg
add
inc
call
xor
popa
mov
in
jns
into
lahf
add
daa
pop
lods
mov
cltd
jns
jecxz
dec
pop
cltd
test
shlb
into
and
mov
lret
pop
sub
push
xchg
mov
jbe
in
iret
aam
lea
hlt
or
mov
push
xor
inc
pop
sub
movsb
les
aad
cmp
rcr
adc
shr
cmpsl
xchg
fdivs
mov
cli
movsl
and
cmpsl
cld
or
lcall
loope
push
pushf
lcall
and
fdiv
decb
mov
popf
mov
or
out
movsl
lret
leave
xor
test
push
sub
and
xchg
das
mov
cmp
ljmp
jmp
xor
dec
stos
mov
lock
and
xchg
jecxz
loope
or
sbb
fcompl
out
push
lahf
sub
repnz
fisubrl
pop
pop
mov
push
fcoms
in
xchg
sbb
cwtl
loope
mov
aaa
jnp
stc
and
xchg
push
ret
insb
jle
dec
sbb
movsb
es
jno
adc
stc
test
rorb
sub
hlt
lret
popa
clc
insb
adc
lea
sub
xchg
ret
adc
lcall
mov
and
xchg
jbe
loop
pop
dec
test
xor
daa
test
inc
bnd
mov
rcl
jge
es
daa
rol
inc
add
stos
cmp
push
lea
int3
ficoms
stc
shlb
push
push
inc
fidivl
sbb
and
pusha
in
pusha
ljmp
mov
xlat
orb
jae
fdiv
or
ficomps
xor
ret
sub
mov
rcrl
adc
call
roll
jp
jno
nop
jl
fdivs
lret
into
cmp
loopne
repz
jmp
dec
fwait
jno
js
jne
pop
repz
cwtl
or
mov
sahf
jge
adc
lock
shl
enter
and
pushf
das
cli
enter
mov
pop
jecxz
repz
addl
fwait
xchg
pop
repz
mov
sahf
lods
cmp
xor
pop
or
xor
dec
cmc
or
mov
jnp
jp
inc
fisubs
aam
push
push
in
cmpsb
fnsave
gs
imul
imul
inc
enter
add
jecxz
test
push
lock
popa
icebp
sbb
add
cmp
fldenv
push
add
jno
xor
inc
dec
pop
ja
mov
in
cmp
xor
pop
xchg
fdivrs
hlt
mov
sub
cmp
or
mov
test
jl
int3
mov
mov
mov
je
fistl
or
test
sub
std
es
outsl
jl
sub
inc
mov
jae
js
xchg
ss
arpl
inc
add
imul
cwtl
mov
mull
lret
xor
out
mov
inc
inc
fcomip
nop
sub
adc
mov
xor
rcr
pop
mov
scas
dec
mov
es
jns
addr16
push
mov
push
inc
lahf
jmp
xchg
ss
sbbb
movl
inc
ljmp
sbb
adc
sbb
ss
stos
jle
xchg
ficomps
xchg
sbbb
cs
push
scas
push
aas
shll
and
out
jle
int3
push
notb
pop
dec
add
cmp
push
mov
mov
mov
sub
push
cmc
and
stos
jnp
leave
int
mov
lods
dec
pop
and
ja
mov
pop
aad
jbe
std
pop
push
sbb
paddsb
jecxz
fbstp
mov
fldt
push
push
sub
pop
push
lret
cmp
jg
decl
pop
push
pop
dec
fidivs
or
iret
movsb
aad
sbb
divb
stc
dec
cltd
mov
pushf
fwait
dec
jno
jg
and
in
mov
aaa
cmp
xchg
and
inc
mov
inc
adc
out
jo
ljmp
sbb
in
sub
cld
int3
dec
dec
fs
push
enter
cmp
jge
pop
push
xlat
add
mov
stc
xor
clc
sbb
mov
sub
out
popa
sbb
jo
pop
int
ja
stc
xchg
push
decl
lretw
movsb
xchg
xchg
mov
aad
clc
push
pop
scas
inc
xor
rcl
lds
adc
xchg
push
xchg
das
movb
cs
mov
aaa
push
pop
cmpps
push
lcall
and
pop
data16
push
push
test
push
aad
dec
inc
scas
jmp
das
sub
aam
inc
fsubl
mov
push
inc
arpl
cli
push
movsb
scas
cmp
jmp
adc
mov
aas
lods
add
fisubs
mov
mov
rol
fidivs
sahf
lods
xchg
push
jge
mov
and
fcomp
sarl
jb
or
xchg
and
and
push
cltd
int
enter
and
dec
pop
cmc
mov
and
mov
fisubl
inc
mov
mov
test
inc
lea
aas
xchg
inc
jmp
pusha
jle
xchg
jo
jl
cmp
jg
pop
jl
push
add
lds
xor
je
jno
rcll
mov
subb
add
insl
xor
pop
and
pop
repnz
lret
pop
pop
je
jns
sub
pop
cmp
push
dec
and
imul
into
lea
jnp
test
cmc
pusha
inc
aaa
sarb
hlt
xchg
pusha
dec
inc
rorl
aas
rclb
testl
pop
cmp
imul
mov
jmp
outsb
and
nop
stc
or
loope
push
je
push
in
dec
roll
mov
out
test
xchg
ret
sti
call
movsl
mov
inc
or
cmp
fsubr
or
sub
leave
dec
pop
mov
cmpsb
dec
add
jle
out
cmp
lods
sub
xchg
sbb
sub
ss
pop
addr16
jnp
cmp
push
lret
outsb
test
xchg
sarb
popf
lods
xchg
adc
adc
mov
es
or
jg
cmc
daa
push
adc
add
xor
shl
jmp
or
add
arpl
fbld
out
call
mov
loop
or
imul
xchg
mov
sbb
mov
or
in
push
sbb
fs
int3
js
jmp
je
sbbb
or
inc
pop
jno
shrb
fsts
jne
sub
pop
adc
inc
push
in
mov
inc
in
daa
inc
mov
fsubs
sahf
insl
pop
shlb
push
dec
sbb
in
clc
lret
push
cmp
and
push
sub
std
xchg
das
int
ret
push
cmp
cmpsb
jne
inc
test
pop
fwait
test
sub
pop
xchg
inc
lock
inc
loopne
enter
inc
jmp
sub
add
popa
and
push
outsl
cli
push
or
jl
lret
dec
dec
movsl
adc
rcrb
jmp
aad
mov
pop
pop
dec
popa
inc
cwtl
sbb
arpl
mov
sbb
mov
sbb
mov
pop
inc
xor
fidivrs
arpl
cmp
into
movl
sti
cmp
fnsave
in
add
in
mov
fisubs
sbb
dec
push
adc
or
lods
jo
movsb
or
sbb
loop
sub
insb
pushf
dec
ja
icebp
popf
inc
lods
int
sbbb
mov
sub
inc
sbb
pushw
xchg
insb
sub
fsubr
adc
popa
notl
mov
das
lock
aas
int
stos
cmpsb
or
stos
outsl
mov
nop
pop
inc
addr16
jae
xlat
jmp
push
cld
push
adc
add
mov
mov
js
movl
mov
imul
sub
mov
movsl
add
sbb
sbb
xchg
cmp
adc
ret
je
hlt
xor
aad
insl
xchg
push
cmc
jp
inc
pop
mov
clc
mov
ja
xchg
pop
mov
test
cwtl
xor
test
aaa
out
or
pop
cmp
movsl
mov
push
lods
jne
push
cs
out
mov
pop
out
lahf
cmp
push
push
mov
push
ljmp
sti
pop
scas
xor
test
push
add
fdiv
pop
jl
sub
push
in
mov
adc
in
pop
inc
and
jbe
outsb
add
add
mov
ss
and
adc
dec
pop
lret
jne
xchg
pop
add
and
dec
xchg
pop
mov
ret
out
jbe
cmpsl
adc
xchg
std
adc
call
jns
mov
jl
xchg
push
sahf
cmc
les
pop
sahf
and
imul
jb
xchg
mov
hlt
mov
inc
or
rcr
cmp
int3
mov
or
add
cmp
pop
xchg
sub
aad
les
or
es
inc
mov
popa
xor
loopw
add
push
sbb
mov
fcomps
stc
fdivs
lahf
mov
mov
in
and
push
loope
mov
stos
xorl
out
cmp
fxch
inc
imul
or
int
cmp
mov
dec
fcmovu
inc
dec
adc
sarl
pusha
mov
pop
cwtl
or
lds
ljmp
out
out
push
mov
mov
mov
pop
movsb
mov
mov
push
loopne
stos
xchg
std
movsb
cmp
inc
mov
jg
or
out
mov
push
xchg
fistpl
xor
imul
insl
mov
movsb
movsb
imul
jmp
inc
insb
sbb
rcll
repnz
lods
insb
mov
fbstp
mov
cld
and
sub
adc
aam
dec
pop
arpl
push
or
je
adc
or
cmpl
sbb
repz
fisubrl
testb
repnz
jg
sbbb
xchg
int3
test
xchg
mov
push
jo
loop
imul
outsl
push
jmp
repnz
or
and
xchg
cmp
aam
in
pop
das
mov
xchg
pop
xchg
fimuls
lods
lret
jbe
xor
aam
addb
imul
inc
jno
shll
push
out
inc
dec
sahf
jmp
sub
xor
add
mov
sub
pop
ljmp
jmp
pop
mov
dec
scas
cmpsl
mov
cmp
sbb
and
fmull
jg
push
imul
push
je
xlat
xor
aad
fidivl
add
pop
pop
mov
cltd
and
mov
jp
idiv
dec
cmp
push
hlt
sarb
adc
adc
sub
jne
lea
ret
jge
jb
orb
cmp
pop
adc
pop
stos
adc
add
and
inc
and
inc
rolb
sub
lret
xlat
xor
pop
scas
nop
jb
rcrb
popf
push
inc
shrb
mov
outsl
jmp
mov
loope
xchg
cmc
pop
iret
push
mov
outsl
push
push
cmc
pop
out
je
lea
in
xchg
ljmp
inc
lret
test
inc
pushf
mov
insb
adc
mov
repz
jmp
adc
sbb
and
mov
push
test
in
inc
mov
mov
push
imull
fs
adc
daa
decb
jne,pn
pop
rclb
add
and
shrb
das
add
adc
adc
mov
push
mov
fcmovnu
inc
inc
imul
push
lock
push
aas
fucomip
cmp
pop
stos
stc
cmp
inc
sbb
call
sahf
lods
pop
push
ljmp
push
sub
push
inc
dec
loope
mov
lods
dec
loope
das
jl
mov
push
dec
mov
adc
jo
icebp
dec
dec
aam
adc
mov
mov
sub
mov
and
decl
lea
loope
in
push
jae
movsl
js
or
mov
or
cmp
pop
stos
inc
dec
in
incb
xchg
mov
mov
rep
jmp
sbb
js
ja
cmp
out
aam
test
aad
test
out
and
data16
xchg
jmp
enter
shlb
cmpsb
scas
push
adc
setno
frstor
jmp
add
lret
test
xchg
out
mov
dec
push
movsb
add
shrl
add
jl
lret
mov
rcrb
movsl
and
sbb
inc
sub
xchg
stos
sbb
or
lahf
cmp
mov
mov
mov
ret
jge
cmc
mov
cmpsl
lock
mov
dec
adc
roll
enter
dec
fistpll
lods
push
cmp
int
add
sub
shrb
enter
xchg
bound
imul
test
jns
mov
cli
stos
inc
movsb
pop
jns
dec
jl
in
mov
loop
imul
imul
aas
cmp
push
out
pop
dec
xchg
add
jns
stos
ljmp
aad
mov
jae
jle
mov
es
enter
adc
mov
cwtl
mov
rorl
out
loope
sbb
add
sbb
xor
mov
sbb
aam
js
mov
mov
xor
daa
mov
lock
cmp
xchg
or
sbb
xchg
push
loop
out
lock
pop
stos
or
ds
ds
xor
ljmp
push
repnz
adc
mov
aad
test
std
cs
movsl
repnz
xlat
push
mov
inc
pusha
mov
sbb
mov
aas
loope
in
mov
add
jae
stos
push
add
xchg
scas
xor
cmp
mov
filds
add
rorl
fwait
insb
js
xor
lea
and
mov
jecxz
cmpsb
adc
int3
aaa
xor
or
out
dec
adc
jb
jb
test
push
inc
test
loope
lcall
sub
cmpsl
xchg
xor
xlat
cmpsl
and
pop
mov
dec
daa
ret
cmp
fs
shlb
and
mov
inc
sbb
lods
dec
fwait
cmp
push
fwait
dec
out
cmp
xchg
insl
testl
aam
filds
popa
cmc
mov
add
ds
popa
clc
mov
sub
inc
and
loope
jg
jp
hlt
mov
clc
xchg
adc
insb
sbb
dec
in
inc
mov
repz
sbb
xchg
mov
bound
leave
push
inc
sbbl
fsts
inc
push
and
sub
and
jmp
sbb
mov
pop
jl
jbe
popa
xchg
cs
jae
lret
movsb
out
movsl
fistpl
xlat
arpl
pop
dec
push
cld
cltd
xor
sbb
aaa
pop
adc
dec
sbb
adc
lcall
ljmp
ja
iret
xorl
or
cmp
jmp
xchg
mov
sub
out
or
xor
mov
inc
rolb
mov
dec
fstpl
xor
xchg
loopne
mov
orb
cmp
mov
neg
mov
loopne
jae
add
fdivl
ffreep
dec
sbb
test
bound
mov
imul
pop
aam
pop
or
in
iret
into
test
mov
mov
inc
mov
mov
inc
outsb
push
inc
loopne
or
stc
xor
in
cmp
add
clc
adc
xlat
sbb
mov
outsb
inc
rep
push
pop
xor
test
lods
into
bound
push
inc
rcl
push
fbstp
add
cmp
or
xor
mov
xchg
or
xlat
es
lock
scas
in
add
xor
insl
push
or
lret
hlt
push
jnp
or
push
sub
push
xor
mov
orl
adc
and
pop
cmp
jb
loop
jno
jp
sub
fists
push
fs
add
dec
outsb
mov
xchg
scas
mov
xchg
addr16
mov
adc
clc
push
mov
icebp
lds
inc
push
in
js
incl
aaa
pop
mov
push
inc
pop
ja
fcoms
inc
add
inc
rol
sbb
in
push
mov
push
xchg
sub
jp
std
pop
divb
fcomps
inc
out
les
cmpsb
cmp
ljmp
sahf
pusha
cmp
shll
lock
les
mov
jg
outsl
mov
mov
and
mov
mov
xor
call
jno
bound
jns
cmc
cmpsb
idiv
cmp
and
or
jae
jge
push
das
push
mov
sbb
cmp
xlat
xor
mov
pop
test
ds
out
xor
xor
mov
xor
dec
js
hlt
xchg
push
inc
inc
mov
fstp
push
fadds
dec
jge
shlb
pop
test
jge
pusha
idivl
mov
test
mov
mov
mov
aas
or
mov
imull
mov
lods
int3
imul
inc
fsubrl
pop
xor
hlt
and
sub
cmp
icebp
cwtl
jbe
or
paddsb
movsl
jmp
sub
pop
add
lea
adcb
movsl
or
cwtl
xchg
dec
and
mov
scas
mov
xchg
stos
sbbb
mov
mov
sbb
add
dec
dec
es
ret
pop
mov
faddl
mov
xor
mov
sbb
test
jmp
mull
mov
sub
xor
in
push
cmp
mov
adc
arpl
xor
jne
mov
push
xor
lahf
pop
out
and
sbb
cmpsl
outsb
dec
sbb
lret
rclb
dec
pop
cmc
ret
xchg
fcoml
push
adc
repnz
adc
aam
sbb
push
mulps
les
mov
sbb
push
adc
addr16
sub
sbb
sub
cmp
es
ss
test
ljmp
cs
jnp
mov
movsl
pushf
lea
outsb
imul
sbb
std
adc
lock
pop
sub
adc
push
or
jge
xchg
cli
nop
daa
sub
ds
push
test
adc
call
imul
inc
add
dec
and
lahf
les
mov
ret
ret
mov
jle
dec
data16
push
cs
pop
mov
int3
push
test
enter
xchg
movsl
mov
add
push
idivl
movsl
cmp
iret
js
xor
subb
aam
stos
cmp
push
icebp
or
xor
out
repz
xchg
mov
lock
cwtl
and
pop
mov
mov
mov
lcall
and
cld
out
mov
cwtl
jb
int
sbb
fs
pop
pop
add
jp
mov
int
rcrb
cmpsb
leave
pop
adc
pop
pushf
push
sbb
sub
nop
ljmp
cmp
loope
adcb
mov
insb
test
pop
mov
and
cmp
aad
sub
pop
iret
push
cmp
pop
xchg
test
in
inc
fcompl
aas
arpl
daa
dec
pushf
xchg
ds
xorb
sbb
dec
test
mov
push
adc
mov
rol
mov
xchg
iret
and
arpl
cltd
pushf
push
lds
movsb
dec
pop
sbb
xchg
cmpsl
xor
jae
xor
mov
ficomps
xchg
fstpt
mov
repz
inc
nop
push
sbb
pop
mov
scas
adc
lods
movsl
and
mov
popa
jb
pop
enter
es
or
cmp
jne
stc
inc
add
not
divb
mov
or
xor
sub
insb
jno
mov
mov
das
aaa
lea
mov
jecxz
mov
jae
push
scas
adc
orb
fidivrs
test
cmp
xchg
test
leave
jg
mov
cmp
rorl
rcrl
mov
or
aaa
scas
loope
fimuls
in
mov
sbb
xor
jo
inc
cmpsl
jg
into
sti
test
add
mov
shrb
xchg
stos
lea
xchg
mov
jp
inc
test
aam
out
jo
mov
in
mov
jl
add
aas
inc
and
add
gs
mov
add
lret
push
ret
in
test
or
std
sub
pop
sbb
mov
push
daa
cmc
jae
dec
xlat
cmpsl
xchg
cmp
vcvtps2pd
cs
xchg
adc
lods
subb
push
lds
push
mov
mov
sbb
pop
scas
mov
and
sub
daa
inc
aad
inc
stc
mov
jno
stc
cmp
xor
jg
leave
sub
fisubrl
cmpsb
fstl
cmpb
push
mov
and
gs
xor
ds
mov
mov
pop
test
cmp
in
add
out
mov
jl
hlt
into
sahf
jae
sti
push
mov
ljmp
mov
fcmovne
mov
sub
sub
test
leave
mov
fmul
ret
jo
scas
lret
jg
arpl
cmpsl
jno
mov
leave
rolb
push
cmp
cli
in
jg
mov
xchg
int
js
das
stc
sub
inc
movsb
fdivr
fnsave
and
cli
mov
sbb
push
test
dec
add
dec
pop
inc
out
out
adcb
xchg
cld
sub
out
pushf
push
jge
lret
lds
shrb
fistl
push
ja
mov
adc
jns
cmp
add
adc
bound
daa
sub
decl
cmp
insl
pushf
mov
movsb
cmp
popf
mov
add
popf
aaa
shll
mov
sbbl
push
adc
sub
jle
pop
mov
loopne
ficomps
inc
xlat
leave
mov
pop
push
test
add
push
mov
inc
dec
and
aam
lods
mov
je
cld
push
fnstcw
jge
loope
pop
hlt
inc
pop
xchg
imul
stos
jo
add
mov
fchs
sub
mov
adc
mov
cs
lahf
cmp
push
add
hlt
jmp
gs
xor
test
in
cmp
outsl
in
inc
mov
xchg
lea
cmp
pop
dec
aas
jnp
dec
loopne
push
lret
xchg
adcl
dec
icebp
dec
and
mov
mov
rcll
fs
loop
mov
sbb
xchg
cmp
out
push
mov
dec
addr16
cmp
ret
std
sahf
notb
aaa
xchg
icebp
dec
adc
call
jns
fcmovnb
inc
cwtl
mov
adc
test
idiv
out
mov
xor
nop
and
lahf
add
sarl
push
adc
mov
inc
dec
lods
and
faddl
lds
and
int
inc
dec
sub
xor
les
add
xchg
cwtl
test
in
xchg
sub
lret
test
push
add
pop
lock
pushf
or
aam
xchg
jo
sub
es
xchg
sub
xor
rclb
pusha
add
pop
scas
lock
dec
movsl
jbe
jne
fwait
pop
loope
int
pop
hlt
xchg
mull
jns
lret
fcoml
lahf
lahf
mov
fldl
movsb
fs
sbb
sub
cld
push
mov
icebp
pop
and
rcll
add
cmp
idiv
scas
jecxz
cmpsl
and
xor
mov
outsb
add
outsb
mov
xchg
jle
pop
repnz
jns
jne
adc
je
inc
out
and
popa
sub
in
sub
and
adc
xchg
lods
mulb
jmp
inc
jo
mov
rorl
fistps
or
movsl
jp
sbb
push
pop
inc
push
cmp
das
pop
repz
fisubrl
add
mov
rcll
mov
stos
cld
xchg
fsubl
sbb
xor
int
or
mov
mov
mov
push
mov
fs
out
shlb
insb
aas
scas
ret
mov
subl
cmp
xor
test
adc
cmpsb
testl
in
hlt
clc
int
jo
sub
pop
inc
subb
scas
sub
sub
xchg
pop
bound
test
push
mov
sar
lret
jb
pop
dec
push
call
jp
outsl
sub
jo
shrl
pop
jmp
cmp
jmp
jnp
movsb
lods
push
pop
mov
enter
aas
bound
sbb
daa
inc
inc
int
sti
xchg
fidivrl
mov
pop
xchg
orl
das
adc
add
test
push
sub
push
pop
sarb
notb
cli
cmpl
stos
pop
add
push
ret
sub
jp
fidivl
jb
adc
push
test
cmc
aam
frstor
fucomp
aam
push
mov
sbbb
inc
jmp
pop
in
out
loopne
nop
cld
sub
hlt
sbb
out
mov
xchg
jno
call
dec
arpl
cmp
jo
pop
and
sbb
xor
popa
mov
and
pop
fiaddl
jne
xchg
int3
jecxz
xor
xchg
test
add
pop
mov
pop
rcll
sub
and
pop
sub
mov
imul
nop
push
pop
pop
push
push
ret
adcb
in
arpl
and
push
mov
bswap
xchg
jne
dec
mov
push
lock
add
std
cmpsl
sub
loope
lods
or
jmp
sbb
pop
pop
mov
cmpsb
stc
movsb
and
mulb
push
lods
ljmp
pop
div
cmpsb
loop
pop
xchg
test
add
mov
sbb
movsl
cmp
fiaddl
sahf
cmpsb
nop
pop
lock
cmp
xchg
ret
std
xchg
mov
xchg
inc
ss
sub
xor
je
jmp
in
sub
adc
dec
jmp
test
hlt
movsb
cmp
push
jle
mov
pop
mov
pop
aad
shrl
xchg
push
test
call
sahf
stc
mov
xchg
push
insl
je
inc
movsb
ficompl
aas
add
cmp
fisubrs
xchg
push
add
movsb
and
test
xchg
in
je
sahf
jmp
mov
lods
negl
jge
fbstp
movsb
inc
xor
dec
pop
cmp
in
lret
inc
mov
mov
mov
push
test
inc
lods
lcall
push
cltd
testl
add
inc
es
mov
push
shlb
outsb
decb
fbld
inc
push
in
adc
push
cmp
fnsave
add
fldt
push
imul
or
clc
mov
add
loop
and
lcall
data16
sub
inc
fadds
mov
xor
add
or
push
stos
jle
shll
xchg
stc
mov
jbe
pop
in
mov
dec
shr
leave
mov
loop,pt
push
pop
insl
mov
mov
je
popf
ret
cmovo
cmc
outsl
lock
into
lahf
cld
pop
fwait
insb
aad
cli
aaa
rcrl
adc
dec
leave
xor
and
orb
mov
fs
bound
push
sbb
mov
lods
xchg
scas
mov
xor
dec
mov
cmc
pusha
cld
ret
sbb
je
cmp
mov
cs
insl
push
out
pop
xchg
mov
shl
test
push
adc
out
push
lcall
lock
sbb
inc
inc
ret
xchg
out
pop
push
mov
popa
test
ficoml
xor
jnp
scas
stos
mov
push
or
pop
or
pop
in
push
lea
bound
ja
fisubrl
cwtl
pop
sbb
inc
adc
aaa
push
dec
fbstp
out
inc
out
leave
cmp
in
loop
jae
rsqrtps
and
jp
lds
cwtl
xchg
and
int3
dec
in
push
or
xchg
inc
push
call
jle
fndisi(8087
sti
add
loop
je
ss
pop
fcomps
xor
scas
addr16
pop
dec
sbb
ss
or
xchg
push
and
xlat
dec
data16
sbbb
cs
outsl
and
dec
and
mov
sbb
mov
adc
sbb
sub
into
or
push
lret
loop
pop
inc
icebp
pop
jae
cmp
int3
sub
fisubl
in
sbb
push
inc
jno
stos
das
insl
xchg
movl
jns
vdivpd
pop
adc
pop
out
add
fcomi
insb
or
fwait
loope
mov
rcrb
insl
lret
idiv
or
in
and
xchg
movsl
inc
jae
cltd
mov
cmp
imul
clc
push
jnp
sbb
dec
sub
repnz
push
fcompl
pop
rol
jmp
outsb
hlt
cmpsl
or
fstpl
push
add
inc
or
fsubl
sbb
sarl
movsb
int3
pop
lahf
xor
xchg
fsubr
lods
sub
adc
sbb
cltd
fcmovu
cmp
mov
add
rol
push
ret
out
pop
pop
cmp
jo
enter
mov
clc
aas
loopne
xor
shl
add
mov
movsl
dec
shl
dec
loop
sbb
mov
jo,pt
xchg
mov
cmpsb
adc
jle
cmp
push
xchg
sbb
sub
dec
mov
inc
push
daa
mov
fs
je
push
mov
and
xchg
and
mov
pop
lret
add
cmpsl
shrl
mov
sbb
cmp
repz
add
outsl
imul
mov
mov
es
or
clc
lret
imul
inc
in
into
addr16
int
cmp
out
test
dec
ret
cmp
out
bound
mov
in
subl
pop
cmpsb
dec
or
scas
push
rorb
mov
out
nop
sbb
or
jecxz
sbb
pop
test
xchg
and
cmp
push
adc
xchg
mov
push
mov
mov
leave
dec
lds
cmpsb
sub
addr16
jb
mov
and
pop
xlat
popf
test
in
rclb
jae
fsubp
mov
push
jle
cmpsl
mov
jmp
jg
sar
shr
and
cltd
jp
jnp
lret
fcoms
or
sub
aaa
into
repnz
std
xchg
ds
push
jno
cmp
rclb
inc
ljmp
add
xchg
dec
pop
loop
hlt
mov
jnp
pop
jecxz
cwtl
mov
cltd
shl
xchg
mov
enter
sub
push
push
inc
test
xor
inc
arpl
es
filds
sbb
js
mov
rcll
outsl
ror
xor
lds
dec
and
rclb
push
sarl
jmp
call
or
ljmp
mov
mov
addr16
rcr
pop
mov
jo
out
loop
imul
or
into
dec
fadds
cmp
call
es
mov
xchg
mov
mov
jmp
xorb
adc
dec
fmull
jae
insl
arpl
sahf
shrl
lock
fldenv
xchg
jmp
leave
push
xchg
xchg
sbb
lahf
mov
push
fwait
add
cmp
ficoms
adc
mov
pop
loope
popf
in
testl
aaa
adc
fimull
insl
ds
inc
popa
and
test
push
prefetchw
or
into
adc
adc
ds
jns
adc
push
out
sbb
dec
sbb
or
les
or
or
lret
jp
sub
dec
clc
and
xchg
inc
in
fcoml
orb
push
dec
add
mov
pop
push
sahf
pop
std
mov
inc
push
fmull
bound
jg
sarl
or
push
pop
cli
pop
mov
js
cli
xor
lods
addr16
ljmp
push
push
cmc
out
fbstp
cwtl
arpl
adc
push
int
lahf
ss
das
clc
aam
outsb
push
adc
insb
add
imul
pop
push
subb
xor
pop
call
sbb
addr16
insl
add
mov
popl
inc
cmp
cltd
mov
test
push
std
or
xchg
mov
mov
inc
mov
test
adc
jo
sahf
and
xchg
addr16
sub
mov
pop
repz
pop
jp
sbb
hlt
jb
mov
xchg
pop
sub
repnz
into
insl
cmp
mov
cmp
int3
fucomp
data16
cmc
dec
push
mov
les
push
pop
push
loop
arpl
inc
pop
js
mov
sarl
shrl
push
cs
inc
int3
xchg
xor
aad
adc
mov
cmpsb
sti
add
mov
pop
in
movsb
pusha
div
xlat
sub
push
daa
in
jle
and
pop
bound
mov
xchg
jecxz
pushf
lea
movsb
sbb
pop
cmp
arpl
push
add
mov
nop
pusha
xchg
mov
arpl
imul
cmpsb
inc
jge
jne
ja
sbbb
sbb
inc
jl
inc
scas
gs
call
fsubrl
scas
mov
mov
jnp
mov
sub
adc
shl
into
pop
push
iret
mov
ds
addr16
cmp
test
hlt
xchg
popf
push
cltd
xchg
repz
xor
jb
sub
je
xor
pop
adc
sub
cltd
pushf
test
jae
mov
fists
pop
cwtl
jg
pop
fidivrs
lods
aas
adc
xor
dec
setge
data16
pop
push
sbb
leave
in
sti
test
pop
sahf
icebp
jno
addb
in
xchg
push
in
iret
mov
jne
lret
pop
fstps
cld
xchg
push
jo
mov
dec
pop
pop
ficomps
out
push
outsl
leave
call
mov
fsubr
pop
sbb
popf
ret
jae
xchg
adc
or
jnp
daa
fdivs
push
xor
lea
aad
add
int
ss
jbe
int
sub
pop
sahf
cli
xchg
shlb
mov
cmp
aad
ja
sbb
in
cmpb
push
mov
xor
push
addl
test
push
xor
pop
jne
popf
cmpsb
cmp
push
adc
jg
lods
test
adc
inc
loope
pop
adc
sbb
fucomp
cmp
inc
in
daa
sub
hlt
and
jns
test
in
add
ss
or
loopne
jl
fsubs
sahf
pop
imul
inc
pop
rcll
adc
insb
pop
loop
outsl
jne
fistpl
cmp
int
pop
lret
inc
xchg
js
xor
cltd
or
xor
sub
mov
and
sub
adc
aam
pop
push
add
clc
xchg
bound
mov
std
in
std
add
movsl
pusha
pop
insb
or
cltd
xor
and
lock
movhps
pop
icebp
call
inc
or
ljmp
leave
ss
insl
mov
mov
dec
fldenv
stc
repz
movsl
xchg
mov
mov
push
fcomp
lahf
out
sti
mov
aad
roll
mov
jmp
xor
ja
sub
test
repnz
push
jge
or
adc
mov
sahf
push
and
lods
bound
mov
fdivs
lock
dec
lea
mov
jg
add
lret
push
mov
rcrl
dec
jp,pn
jp
loop
mov
sbb
mov
cmpsl
das
xor
enter
xchg
frstor
xchg
imul
jb
in
outsl
xchg
nop
nop
mov
mov
test
inc
ret
cltd
orl
roll
push
cmp
pop
cmp
call
or
stos
or
cmp
sub
inc
push
orl
sub
pop
dec
out
jl
sub
xor
cltd
xor
rorb
clc
cmc
sbb
push
fstpl
daa
mov
inc
cmp
push
mov
or
dec
fdivr
or
outsl
in
push
cmp
jns
and
fsubs
js
mov
push
sub
mov
push
push
cs
pop
add
add
mov
mov
jbe
clc
cmpsl
push
sbb
pop
xchg
sub
pushf
xor
mov
fistl
mov
jp
jge
cltd
push
push
mov
cmpsb
cs
xchg
push
pop
mov
hlt
scas
cmp
outsl
repz
nop
pop
stc
rcrb
push
cli
sahf
and
mov
mov
iret
mov
aad
lock
inc
imul
pop
push
mov
shrb
insl
imul
fists
add
mov
xor
push
das
fidivl
adc
test
stc
add
mov
insl
out
and
shll
mov
cmc
mov
repnz
movsb
cli
xchg
loopne
jmp
sub
mov
adc
lds
negb
xor
fidivl
sbb
dec
lods
clc
nop
jp
fstpt
rorb
mov
cmc
mov
xor
ret
f2xm1
adc
fimull
je
fldl
inc
dec
inc
pop
call
add
sub
repnz
mov
jns
sbb
inc
or
cmp
imul
push
pop
dec
inc
fnstsw
pop
push
js
addr16
adc
sahf
inc
fs
sbb
jecxz
mov
jae
push
mov
push
and
xchg
cld
inc
lcall
push
aaa
or
stc
lahf
and
out
je
sub
mov
sbb
test
sbb
sub
cmp
push
xchg
fimuls
sahf
mov
dec
test
ss
out
jnp
imul
inc
clc
stos
out
popl
test
gs
inc
pop
aam
push
push
inc
fisubs
xor
mov
daa
addr16
nop
cltd
dec
pushf
ss
fmulp
cs
bound
aaa
pop
lock
ja
mov
cmp
clc
jg
sub
sbb
xchg
lds
or
arpl
cmc
shlb
or
mov
xchg
mov
inc
mov
sbbl
icebp
cmpsl
xchg
mov
enter
int
into
fdivrl
mov
xchg
mov
pslld
rolb
inc
jl
es
pop
stos
pushf
pop
scas
push
jnp
inc
jmp
push
arpl
pop
daa
inc
aam
and
cld
fnstenv
lock
push
xchg
clc
xor
je
in
fldenv
stos
push
sbbl
out
add
repnz
jns
fdiv
lret
shl
cmpsb
dec
and
jl
shll
and
js
xchg
or
inc
fsubrp
test
xor
mov
push
push
frstor
mov
in
inc
fs
push
mov
imul
mov
idivb
pushf
stos
hlt
aam
and
dec
test
sub
xor
xchg
das
out
adc
call
push
and
mov
loopne
fsubrs
fdivs
test
lret
jb
xchg
sub
xchg
or
jp
inc
outsl
pop
call
mov
rcrb
add
dec
fs
stc
jno
dec
outsl
inc
xchg
lds
ljmp
aad
bound
mov
notl
dec
push
int
or
jb
and
cwtl
push
aas
subl
fldl2t
mov
jmp
mov
add
es
loop
pop
cmp
mov
add
in
xor
mov
dec
in
bnd
decl
test
fs
xor
clc
test
lds
cmp
adc
mov
negl
mov
inc
lahf
shrl
repnz
cs
jne
pop
mov
xchg
pop
xchg
call
xor
mov
jge
xchg
leave
sub
xchg
ds
pop
jo
mov
inc
adc
lods
inc
in
push
lahf
nop
out
lods
push
or
fdivr
jmp
cwtl
sbb
je
mov
ljmp
jl
dec
jecxz
popf
decb
jge
sti
mov
cmp
loopne
aam
or
and
mov
cmp
lahf
adc
inc
jmp
mov
xchg
stc
adc
fiadds
xchg
push
rcrb
inc
data16
fsubrl
push
jnp
cld
push
pop
push
arpl
jb
es
fcompl
or
mov
adc
in
movsb
das
inc
frstor
push
xchg
std
int3
push
mov
loop
mov
fwait
jecxz
test
pusha
push
loopne
movsb
addr16
jae
cmpsb
incb
xor
inc
xchg
mov
sbb
fcmovbe
or
xchg
inc
xchg
ja,pt
cmp
pop
or
add
scas
jg
inc
xchg
es
add
fwait
push
sub
mov
xchg
sbb
xor
testl
test
out
push
cmpsl
nop
out
cmp
ficoms
enter
sahf
movsb
mul
inc
mov
adc
popa
push
enter
dec
bound
and
cltd
ds
mov
cmp
push
pushf
add
pop
mov
mov
sbb
pushf
pop
xchg
mov
mov
push
sub
mov
lcall
f2xm1
jge
leave
mov
vpsubd
mov
loopne
std
or
adc
mov
xor
test
inc
or
or
jmp
lret
mov
les
pop
ds
add
fldenv
sub
mov
mov
inc
lods
sub
mov
je
xor
in
dec
jne
das
rolb
repnz
ret
and
adc
jge
cltd
pop
mov
bound
jp
loop
jo
js
aam
add
out
in
loopne
xor
add
xchg
loope
adc
dec
aaa
mov
xchg
rcrb
add
testb
add
ljmp
and
mov
jge
out
ja
loope
add
scas
insb
loopne
mov
mull
inc
fwait
cwtl
sub
insb
mov
es
fdivl
ja
inc
xchg
scas
jg
or
dec
loopne
fucomi
cld
add
repnz
dec
adc
addr16
das
xor
sarl
add
mov
repnz
mov
fiaddl
or
data16
add
sahf
xor
cld
mov
pop
mov
pop
inc
fcomps
pop
ljmp
cmc
stos
cs
push
les
lods
sub
fildl
push
call
cltd
scas
out
sbb
pop
jg
cld
sub
jno
sbb
dec
mov
clc
in
push
cmp
cmp
cli
jecxz
imul
scas
xor
mov
xchg
sub
dec
xor
jmp
ret
movsb
test
push
inc
push
cmp
test
in
int
scas
pusha
cld
mov
push
xor
jae
cltd
clc
or
mov
and
and
inc
fsubrp
xor
lods
insl
aad
repnz
je
cmp
mov
sbb
je
movsb
xchg
inc
pushf
cwtl
xchg
xchg
f2xm1
mov
repnz
jecxz
pop
sbb
cmp
jle
adc
notl
clc
lods
sbb
test
sub
out
jb
insl
lea
mov
and
pushf
imul
jae
fistpll
jno
stos
or
and
addr16
sbb
sub
aam
lods
js
xchg
mov
jbe
jbe
test
std
fsubrs
clc
cmp
sub
mov
mov
cltd
jae
jle
xor
sub
pop
stos
mov
adc
nop
jnp
clc
aas
popf
lods
insl
add
pop
cli
and
xor
in
add
out
inc
or
jmp
repnz
sbbl
jne
push
xor
jae
out
bound
push
push
xchg
mov
enter
or
add
push
cli
and
xlat
leave
aaa
int
jne
pop
jno
dec
pop
cmp
adc
in
icebp
aam
cmp
jge
mov
jge
ret
push
cmpsl
daa
push
hlt
repz
add
shlb
inc
or
dec
lock
pop
jnp
icebp
push
mov
fildll
pop
lret
lret
jle
outsb
bound
loopne
ds
fidivs
mov
cld
jb
mov
subb
xor
mov
sbb
std
adc
adc
mov
fdivr
test
add
mov
je
aaa
lcall
add
sbb
out
sbb
pop
movsl
sub
mov
xor
ds
out
out
mov
pop
insl
jge
cmp
loop
mov
mov
mov
inc
or
cmpsl
rcrl
mov
mov
iret
inc
into
inc
fisttpl
pop
iret
or
mov
mov
in
and
push
xor
or
cli
sarl
mov
mov
or
cmp
pop
lcall
adc
lret
jae
rcr
insl
insb
mov
push
roll
sahf
sub
pop
inc
cs
cs
ds
jg
std
cmp
daa
lods
or
adcl
add
inc
pop
divb
add
add
add
pop
sub
add
xchg
out
rorb
push
je
sub
mov
cwtl
mov
cs
jnp
lock
loop
fwait
cmp
add
jno
cmp
test
dec
push
bound
pop
incb
push
xchg
js
mov
xor
xchg
sub
imul
sbb
inc
fistpl
mov
and
or
mov
ss
jle
sti
aaa
test
xor
push
loop
mov
movsb
aas
sbb
sarl
not
jl
scas
orb
ds
insb
jmp
cmp
push
icebp
or
or
sub
adc
add
mov
in
jne
pop
dec
ret
addr16
and
xchg
lcall
jbe
fsubrs
insb
icebp
test
test
cld
add
out
xchg
test
xchg
add
sbb
sarl
lret
cmp
scas
rcrl
addr16
fwait
add
jb
push
sbb
push
fwait
sti
mov
adc
in
mov
ret
aad
or
fcoml
loope
mov
push
mov
xor
test
sub
es
cmp
fisubl
bound
lret
jae
sbb
ret
mov
enter
pop
in
sub
jae
jp
add
nop
lods
dec
cli
cmp
insb
sbb
outsb
aas
in
loop
fcomi
dec
sahf
xorl
out
in
test
out
jno
and
adc
mov
ja
mov
jg
fisttpll
sbb
outsb
test
mov
push
test
movsl
inc
push
mov
xchg
mov
bound
mov
aas
cli
jne
iret
adc
icebp
cmpsl
test
sahf
dec
and
cmp
loop
add
adc
lods
or
inc
pop
addr16
push
mov
push
xor
mov
or
in
mov
pop
pop
xchg
sub
and
mov
xchg
inc
es
call
pop
sarb
push
clc
test
jno
jb
fisubrs
daa
jg
mov
shl
or
mov
stc
jne
adc
fwait
cmpsl
test
push
mov
adc
jecxz
je
jge
xchg
mov
pop
cmp
aad
enter
dec
jmp
inc
sbb
in
xorl
dec
in
xchg
or
dec
psadbw
js
aad
ds
and
dec
in
dec
sarl
add
mov
cmpsb
and
pop
cmpb
mov
mov
scas
sbb
lret
movsb
repz
or
inc
inc
clc
mov
rcll
in
fisttps
and
xor
ss
add
filds
das
aam
movsl
mov
cmc
mov
dec
xchg
jmp
ret
fidivl
mov
loope
ljmp
rcrb
mov
jle
sahf
mull
mov
es
cmp
xchg
cld
xchg
mov
test
outsb
lds
mov
jecxz
xor
cmovo
aam
and
aam
fidivrs
sar
and
and
in
push
repnz
lods
sbbb
sahf
cli
popa
sbb
pop
push
pushf
push
leave
outsl
inc
icebp
subl
cmc
int
lods
mov
adc
and
pop
mov
out
pop
loopne
lret
inc
call
jbe
outsl
jns
mov
mov
stos
mov
lods
in
push
call
xchg
es
inc
push
mov
xchg
hlt
in
aam
xchg
mov
loope
lods
arpl
in
and
dec
scas
dec
daa
fnsave
insl
xchg
fmull
xchg
pop
ret
inc
jmp
dec
int3
jo
mov
sbb
mov
int3
lret
cmp
cmc
and
pop
sti
out
lods
cmc
pop
cltd
rcrb
out
add
xchg
js
jmp
inc
push
fdivs
inc
in
in
sub
mov
xchg
aad
sub
daa
mov
mov
fists
int3
xor
fstps
mov
scas
stc
cmc
pop
cmp
enter
sbb
push
jo
mov
push
sbb
mov
xlat
add
pushf
scas
inc
lods
or
pop
outsb
jb
mov
ret
cmp
call
ret
cmp
test
pop
inc
sbb
sbb
pop
loop
sbb
std
ret
clc
imul
pop
neg
test
call
dec
stos
sbb
in
mov
pop
adc
xorl
mov
inc
mov
adc
xlat
cmc
clc
mov
scas
aad
in
jmp
aad
int3
push
sub
sbb
mov
rcrb
xor
xchg
frstor
jbe,pt
out
jl
jge
mov
aaa
cmp
push
lcall
adc
xchg
movsl
shll
idivb
sbbb
testl
pop
adc
loop
jg
rcl
int3
cmp
ljmp
fdivl
fs
mov
das
cli
xchg
popa
sub
inc
jb
xlat
cmpsb
cmp
mov
in
inc
jp
popa
cmp
cmp
sti
sbb
or
sbb
movsb
mov
outsl
sub
mov
mov
xchg
roll
repz
into
push
int
sbb
inc
loope
add
xsaveopt
pop
fists
aas
mov
dec
sbb
jg
inc
push
push
jne
xor
clc
xor
jmp
fdivl
fs
sbb
cli
adc
cmp
pop
icebp
ss
data16
mov
loopne
mov
xchg
jnp
dec
mov
add
push
int3
and
int
jmp
std
je
cltd
insb
mov
loopne
mov
pusha
jmp
mov
ret
inc
sbb
into
fwait
ret
out
mov
ljmp
and
push
mov
push
sarb
clc
or
xchg
cs
sbb
roll
sub
add
push
popa
add
pop
imul
mov
sub
cmp
fiadds
sbb
push
hlt
mov
sahf
xor
xchg
mov
stos
mov
pop
xor
shll
inc
add
jns
dec
stos
adc
mov
cs
lods
sbb
sub
mov
cmp
dec
dec
jecxz
movsb
cmp
cmpsl
cld
xchg
pop
icebp
les
js
mov
fdivrs
push
mov
or
and
mov
xchg
pop
shlb
inc
pusha
insl
cmpb
lahf
pop
jp
inc
xor
or
arpl
cmpsb
cmp
cmpsb
dec
test
lret
mov
mov
ljmp
push
imul
lods
cmp
fstp
lods
push
xchg
jl
cmpsl
enter
xchg
cmc
mov
out
rcl
jl
mov
lods
stos
enter
cmp
orb
out
stc
sub
std
add
jne
push
loope
jp
int3
mov
or
sahf
lods
aas
push
mov
loop
hlt
das
sbb
lock
cmp
bound
mov
je
mov
sti
pop
cmp
mov
sub
xchg
stc
inc
fnsave
xorl
fstpt
aad
lret
addr16
js
mov
roll
es
aad
testb
ficompl
xchg
and
fs
je
push
xchg
ret
dec
xor
dec
ret
rcrl
insb
adc
push
inc
add
sub
xchg
es
arpl
push
xchg
push
scas
inc
and
int3
ret
in
cmc
mov
and
mov
sbb
push
neg
ror
popa
adc
mov
xor
push
fimull
jmp
dec
out
pusha
mov
inc
repz
fists
stos
adc
inc
mov
pop
mov
push
sbb
out
test
fcmovbe
insl
push
cltd
out
dec
popa
jnp
les
fstl
mov
outsb
add
xchg
fsubl
push
in
push
andb
jge
inc
mov
dec
mov
ficoml
scas
gs
test
insl
push
andl
fldt
xchg
sub
imul
cld
outsb
ficoml
push
mov
test
fcmovu
mov
jns
into
sub
in
inc
in
or
imul
ss
arpl
out
jmp
sbb
lahf
push
prefetcht2
dec
pop
icebp
int3
pop
fdivrl
sahf
and
or
les
inc
stos
push
arpl
lret
jbe
icebp
in
jg
adc
int3
cmc
icebp
jne,pt
mov
cs
popa
test
lret
jnp
out
out
push
sbb
inc
stos
je
jns
adc
pop
xor
lods
jge
pop
std
lret
pop
outsl
pop
ficomps
fildl
fwait
fs
out
push
inc
and
dec
add
daa
into
das
ret
orl
sti
out
call
pop
push
and
mov
ss
inc
shlb
xor
or
mov
movsl
in
test
ja
pop
cmp
mov
lea
lret
cmpsb
lock
sub
add
and
and
adc
sub
mov
sub
jecxz
test
push
imulb
scas
lods
lahf
movsl
jmp
stc
addr16
mov
rorb
lret
push
daa
repz
pop
je
pusha
mov
xchg
sub
lahf
cwtl
sti
scas
mov
xor
xchg
sahf
cmp
cmc
cmp
push
shll
inc
fists
leave
xlat
sahf
scas
mov
push
fistl
or
in
ja,pt
stc
cmpsb
arpl
jo
test
push
sbb
fisubrl
xor
call
fcoml
xchg
imul
add
imul
jge
push
repnz
or
pop
sbb
fmuls
mov
shll
push
fidivs
mov
mov
pop
adc
scas
clc
dec
pop
frstor
loop
enter
mov
in
dec
loopne
test
mov
push
js
mov
lods
cs
fisubrs
adc
test
fwait
sub
mov
push
pop
movsb
repnz
cli
pop
mov
pop
xor
pop
xor
push
ljmp
jno
int3
imul
insb
sub
or
cmpsb
cmp
add
push
push
mov
dec
and
mov
inc
repnz
scas
scas
loopne
loope
jecxz
dec
cld
xchg
or
jno
cltd
loope
rorl
fisttps
dec
push
xor
stos
push
jbe
lret
xor
xchg
push
outsl
lahf
popf
stc
add
mov
outsb
xchg
je
test
inc
imul
leave
pop
mov
push
addb
xchg
jge
xchg
mov
jp
or
sub
push
jnp
xchg
outsl
ljmp
movl
test
outsb
jno
out
arpl
lea
pop
or
fildll
incb
add
push
movsl
pop
mov
das
insl
add
idivl
aad
orl
jp
mov
or
xchg
pop
out
stc
nop
and
mov
int
xchg
call
repnz
testb
jne
nop
cmpsl
push
repnz
popf
std
xchg
int3
je
nop
lods
push
repnz
testb
mov
xrelease
xchg
testb
cli
mov
jb
pop
mov
popa
sub
jbe
int3
cmpsl
ret
jo
sbb
pop
insl
or
out
or
jno
mov
push
pushf
inc
push
and
or
rcrb
sub
aam
clc
add
out
addb
shrl
push
mov
shll
xlat
movsb
aas
and
inc
push
icebp
cmp
scas
push
cld
test
push
xchg
mov
sub
mov
inc
mov
mov
dec
outsb
mulb
gs
inc
pusha
jecxz
dec
jne
pushf
add
imul
xor
sub
pop
and
popa
xchg
in
mov
push
cmpsl
mov
subb
mov
aad
sbb
ljmp
fnsave
in
sub
fmulp
jmp
mull
ret
ret
ficoml
sbbb
lds
pop
add
sbb
jmp
cltd
mov
into
adc
sub
pop
jo
ja
xchg
dec
add
inc
pop
pop
popa
clc
nop
jg
out
push
jle
in
push
mov
adc
sahf
into
xor
mov
adc
pi2fw
push
jo
inc
mov
sbb
out
iret
fmuls
daa
enter
ret
mov
repz
stos
sub
lds
fcoml
jp
inc
sub
cmp
test
je
adc
push
mov
cmpsb
mov
int3
or
sbb
jns
popa
mov
xchg
js
imull
mov
add
dec
lock
xchg
ja
lret
cmp
daa
pop
aad
cmpsl
xor
dec
cmp
pop
or
iret
jecxz
rclb
gs
popa
mov
shll
push
loopne
shrd
shlb
jge
pop
xor
mov
sti
inc
call
mov
outsb
es
movsl
ss
mov
or
mov
or
repz
call
jns
xlat
ss
lret
test
sbb
pop
ret
push
fstpl
push
xor
insl
add
push
and
mov
ja
jmp
dec
subb
push
jmp
leave
call
fnstcw
dec
cmp
jle
bound
push
jecxz
mov
jo
push
loope
pop
mov
mov
test
nop
fsubl
pop
dec
fadd
push
inc
jle
or
insb
rcrb
repz
mov
sub
shrb
inc
xchg
mov
fsubl
jns
int3
sub
sbb
jns
fstpt
ret
shl
inc
lds
add
fcoml
xchg
mov
xorb
mov
lock
lcall
or
jns
ja
pop
ret
xchg
insl
jae
sub
push
xlat
icebp
jno
dec
loopne
push
data16
jae
push
jl
inc
outsb
ret
cltd
data16
std
out
pop
aas
je,pt
sub
xor
pop
sub
out
cld
pop
call
bswap
sahf
inc
sahf
dec
mov
xchg
mov
cltd
adc
popf
push
iret
jnp
rorb
mov
adc
cmpsb
scas
arpl
mov
dec
or
mov
fdivrl
mov
pop
fisubrs
ljmp
or
in
addl
pop
jle
cwtl
push
mov
pop
sub
andb
mov
scas
push
scas
add
mov
xchg
mov
cmp
mov
or
js
xchg
sub
mov
pop
insl
fistpl
push
or
int
ss
dec
mov
iret
data16
xlat
xlat
pop
and
shlb
push
lea
clc
mov
dec
icebp
cmp
sbb
out
sbb
mov
dec
or
rorb
bound
jae
fcmovnb
cmpsl
popf
pop
jne
ljmp
addr16
pop
movsb
lods
inc
loope
mov
shrl
jb
push
sub
xchg
push
insb
loope
roll
and
ja
add
scas
push
push
sub
dec
mov
mov
mov
push
rcrl
je
dec
push
push
mov
adc
fidivl
mov
call
ljmp
jmp
js
mov
xchg
enter
mov
add
sbbb
pushf
lahf
push
adc
xchg
jno
xchg
popf
js,pt
mov
mov
dec
add
repnz
inc
jmp
lret
cld
sbb
push
jmp
leave
jecxz
popa
lds
lret
mov
jne
fdivrs
movsb
mov
into
pop
cld
sub
test
adc
pop
sbb
cmp
pop
cmp
pop
sub
cmp
jle
adc
sub
jl
int3
ret
hlt
in
mov
xchg
mov
sahf
mov
mov
xchg
push
repnz
xchg
mov
sub
jge
iret
mov
gs
orb
out
cwtl
dec
pop
mov
leave
test
jb
loopne
mov
sub
jae,pt
push
jne
sti
addr16
and
and
mov
add
mov
and
push
add
or
pop
mov
lock
mov
out
cmp
lahf
stos
inc
rcl
pusha
xlat
lods
push
xor
fadd
sub
repz
push
out
adc
xchg
rorb
popa
lods
push
add
std
jmp
lret
mov
xor
adc
loope
cli
xchg
mov
sub
subl
sub
popa
mov
adcl
pop
or
lret
mov
roll
lods
aad
pop
push
sarb
fldcw
add
mov
jae
dec
lret
lods
add
lods
push
test
push
lock
out
mov
bound
inc
setnp
or
shll
cmp
fwait
jns
sbb
jbe
cmp
orb
and
sbb
iret
dec
jnp
sbbb
push
scas
inc
lahf
xchg
mov
bound
mov
loop
cmpsb
ljmp
dec
dec
jae
loope
mov
cmp
adc
dec
pop
and
mov
and
mov
add
mov
dec
cmp
xchg
movsb
sbb
xor
push
dec
out
bound
cmp
jne
sub
xor
sbb
jle
push
daa
imul
je
test
push
mov
sti
push
out
mov
rdtsc
repz
or
mov
nop
out
or
mov
sbb
pusha
dec
fists
mov
jl
insl
and
pop
rolb
lcall
and
stc
inc
cmp
xor
sub
mov
ffreep
stos
jmp
ret
add
jecxz
loop
rolb
add
cmc
dec
lods
push
xchg
push
test
lret
or
icebp
adc
jo
fwait
test
dec
add
sbb
mov
bound
sarb
ljmp
repz
mov
enter
cmpsb
int
push
out
dec
sub
adc
stc
pop
cwtl
imul
gs
insl
cmc
adc
dec
mov
ljmp
jno
outsl
not
out
in
inc
sub
mov
mulb
sbb
xor
imul
idivl
cmpsb
andl
das
data16
insb
xchg
xor
cmp
mov
repz
push
lret
pop
sbb
mov
fildl
push
cmp
iret
data16
xor
test
js
jge
test
adc
lea
stc
andb
xchg
xor
mov
iret
outsb
inc
movsl
push
inc
and
dec
xchg
ds
lods
cmp
dec
enter
mov
pop
scas
xchg
cwtl
daa
jecxz
pop
mov
sbb
repnz
dec
fcmovnb
adc
inc
dec
fistps
lock
xor
mov
mov
push
popf
imulb
push
gs
notb
sarl
insl
imul
rcl
lea
scas
je
pop
imul
jb
ret
sbb
pop
popa
popf
adc
mov
push
repz
mov
jns
xchg
gs
je
add
pop
sbb
dec
icebp
or
imul
jecxz
andb
and
in
and
sbb
insb
jmp
push
sbb
andb
pop
pop
jae
jns
or
stos
aas
sub
jbe
ss
cld
xchg
push
push
mov
jl
sbb
add
into
mov
cs
shrb
andl
push
das
cmp
add
test
les
lret
clc
sbb
cltd
mov
xchg
push
and
mov
xchg
ja
cmpsb
lock
add
inc
jl
dec
scas
sbb
dec
rcl
sbb
add
outsb
fdivrl
mull
and
or
clc
and
and
pop
mov
dec
mov
dec
and
mov
push
lcall
or
cmp
aas
nop
daa
outsl
or
scas
push
jp
or
lds
dec
filds
push
addb
dec
adc
rorl
sbbl
jb
jp
ret
sbb
jge
and
cmpsl
add
fbld
enter
push
gs
push
scas
sbb
rcl
jo
push
mov
pop
loop
or
decl
and
mov
mov
aam
arpl
jns
sahf
pop
sub
push
mov
and
movaps
mov
add
lahf
xor
xchg
dec
ret
pushf
sub
iret
and
addr16
mov
xor
fdivrs
add
lret
cs
mov
mov
repnz
sbb
repz
add
pop
cmpsb
add
jbe
jg
and
insl
sub
adc
jae
cmp
push
sub
filds
add
xchg
mov
push
mov
nop
sti
js
fsubrp
or
xor
inc
shll
outsl
pusha
les
add
pop
xor
arpl
xorb
pushf
popa
mov
and
sbb
cltd
test
in
test
loop
lcall
frstor
pop
repnz
inc
cmpsl
in
imul
cld
orl
int
push
pop
pusha
ss
and
jno
clc
inc
call
leave
cli
cmp
cmc
rolb
lret
in
mov
push
adc
push
jno
pop
aam
into
xchg
and
dec
mov
iret
aad
ret
fs
push
lods
mov
in
in
pop
aad
push
popf
mov
sbb
inc
aad
stc
xchg
hlt
ss
aam
dec
mov
ljmp
call
pop
movsl
aam
dec
add
pop
push
outsb
dec
or
repnz
sbb
mov
insb
adc
xchg
inc
or
loope
mov
push
or
inc
and
adc
adc
sahf
mov
and
fisubrl
xor
fnstcw
int
lahf
xchg
cmpsl
call
mov
jae
not
mov
xchg
mov
mov
adc
adc
add
mov
jne
and
in
add
test
ja
jns
or
or
in
add
jns
sbb
repnz
and
mov
push
sbb
imull
sbb
nop
lea
mov
testb
test
and
test
adc
mov
es
in
dec
and
outsl
or
popa
xchg
xor
into
fsubrl
push
push
lea
cmp
idiv
push
cmp
leave
sub
ds
cmp
mov
addr16
lea
inc
repz
or
or
scas
outsb
stc
add
inc
pop
popa
js
test
or
jle
xor
pop
mov
sub
pop
out
push
pop
in
fwait
lret
cmc
js
ds
out
sub
jo
enter
inc
adc
and
testb
imul
jecxz
sti
mov
fisttps
rorl
outsl
fxch
mov
push
push
add
mov
stos
jb
fistps
rcr
mov
mov
xchg
lret
push
in
or
jb
add
mov
loope
pop
jae
mov
rol
cmp
xchg
sbb
in
cltd
pop
scas
mov
pop
xchg
imulb
add
test
push
cwtl
sbb
push
insb
ss
loopne
xor
lea
jae
mov
or
fsubrl
enter
out
pusha
xchg
jo
sbb
push
gs
dec
enter
scas
adc
mov
push
inc
jmp
aaa
and
xor
adc
mov
sub
loopne
jl
xchg
fisubrs
jno
ret
xchg
bound
sbb
xchg
xchg
jmp
adcl
or
ds
popf
xor
jne
mov
jmp
push
push
push
mov
mov
xchg
push
rolb
jecxz
fcmovb
rorb
mov
push
insb
adc
ss
rcll
fstpl
in
cmp
fldl
sbb
in
mov
xchg
gs
add
test
pop
ja
mov
dec
mov
push
scas
sahf
adc
xchg
push
or
insb
daa
into
jg
pop
lea
sub
adc
leave
adc
push
sbb
shld
nop
add
sub
arpl
les
test
repnz
mov
ja
mov
int
add
ljmp
push
dec
mov
push
and
pop
xor
cmpsb
cmpl
mov
mov
inc
xor
imul
or
mov
cltd
pop
xor
lods
fbstp
add
inc
jl
in
dec
outsl
enter
sub
enter
or
xchg
pop
notl
jp
nop
bound
pop
xrelease
decl
jns
addr16
jns
pusha
pop
loope
js
add
xchg
add
call
fstpt
pop
xchg
call
aaa
ja
aas
popa
dec
and
push
pop
add
dec
jae
test
movsb
ret
imul
lcall
jo
pop
int3
sub
dec
mov
loop
and
pop
inc
fs
dec
sbb
pusha
cmp
xlat
dec
lret
popa
jo
xchg
mov
fisubl
pushaw
frstor
lea
ficoml
mov
sub
call
mov
repnz
mov
xorl
out
push
xchg
ret
push
pop
mov
data16
stc
push
mov
mov
ss
cmp
fidivrl
outsb
xor
in
cmp
lcall
pop
test
ljmp
xchg
xor
cmp
jae
cmp
inc
out
out
inc
dec
pop
xchg
dec
cli
and
sub
dec
cmp
fwait
inc
out
pop
iret
hlt
sbb
or
in
ror
cmc
or
mov
push
xchg
push
cmpsl
les
out
inc
pop
lahf
dec
loopne
inc
jo
jle
jecxz
leave
pusha
addr16
lds
dec
pop
mov
dec
mov
jmp
or
xor
pop
shl
iret
and
sbb
xlat
sub
sub
add
or
test
ds
push
sbb
mov
sahf
xor
inc
push
enter
cmpsb
mov
lcall
out
jae
insb
movsl
add
add
mov
sub
xchg
push
dec
call
dec
jle
insl
rolb
and
jno
sbb
inc
mov
jmp
jge
mov
mov
and
push
popa
iret
add
aaa
push
in
xchg
fwait
lcall
xor
sbb
push
loope
imul
ss
popf
imul
jo
aad
inc
add
insb
xor
popf
enter
mov
in
jb
cmp
fdiv
shr
addl
cmp
daa
or
add
adc
movsb
subb
test
inc
mov
push
sti
jecxz
mov
outsb
inc
mov
xchg
dec
shlb
cmpsb
mov
adc
imul
and
jno
out
out
bound
mov
or
xchg
mov
mov
or
mov
or
pop
mov
idivl
adc
clc
mov
jmp
xorl
push
mov
mov
das
push
test
jnp
je
mov
adc
mov
aam
xchg
loopne
add
lea
push
lea
xchg
and
add
imul
cltd
lea
cmp
in
adc
pop
sbbb
mov
mov
lds
sbb
and
ret
outsb
repz
outsl
lods
jge
sub
jae
addr16
xor
out
cmp
inc
fs
mov
shr
dec
jl
aad
jl
push
mov
push
scas
ret
adcl
xchg
shll
aam
aad
dec
divl
out
sti
insl
mov
fldl2t
adc
and
aaa
pcmpeqb
in
cmp
or
jo
stos
js
ret
mov
cmp
aas
lods
mov
cmp
shrl
mov
hlt
xchg
fs
fldt
mov
xchg
rorb
hlt
in
dec
xlat
mov
jecxz
push
cmpsl
cwtl
mov
xchg
xor
sub
sub
lret
sbb
loop
je
add
adc
push
sahf
jne
out
cmc
shlb
adc
ret
jecxz
sbb
test
mov
xorl
mov
test
or
stos
xchg
fimull
mov
sub
cmp
adc
jb
das
lea
and
push
sarl
stos
dec
pop
movsl
mov
jnp
daa
inc
test
sahf
out
add
les
cmc
xchg
ss
add
sbb
iret
mov
add
add
cmp
sbb
inc
ja
in
mov
cmpsb
das
xchg
pop
mov
sub
sbb
movb
mov
add
fsubl
enter
mov
jnp
or
mov
pop
mov
lods
pop
std
push
mov
test
arpl
mov
xor
mov
push
stc
push
jb
push
in
hlt
xor
xchg
or
fwait
xchg
xorb
dec
and
lahf
cmpsl
jle
xchg
insb
mov
repz
push
add
sub
lods
cmp
lds
xchg
jb
adc
icebp
dec
in
pop
lock
setp
pop
mov
call
fcmove
outsl
add
aas
arpl
jo
popf
rcll
test
and
sbb
xchg
and
arpl
repz
xor
xchg
mov
int
movsb
cli
imul
es
pop
adc
fnstenv
enter
test
pop
lret
push
or
rorb
sub
pop
popa
fsubrl
enter
push
pop
cltd
stc
mov
lods
movsb
repz
sub
push
push
outsb
mov
pop
es
push
pushf
xlat
ret
push
add
jb
popa
sub
fnstcw
jo
scas
cli
jle
decb
movaps
repnz
xchg
sbb
adc
dec
test
clc
mov
xchg
inc
lds
mov
push
ljmp
insl
dec
mov
sbb
vpunpcklqdq
rorl
in
push
jnp
stos
nop
cmp
arpl
test
stos
or
adc
xchg
jne
xchg
cmpsl
cmc
rcrb
mov
xor
movlps
adc
sbb
gs
pop
sahf
dec
push
sahf
inc
jmp
and
mov
fnstcw
mov
icebp
inc
add
rcrl
ret
sbb
lods
pop
mov
fildll
sahf
sub
mov
lahf
loop
es
mov
aam
test
push
icebp
mov
popa
push
jmp
sbb
mov
jb
add
fldt
mov
or
xchg
mov
loopne
jg
add
in
xorl
sbb
mov
les
add
sub
push
les
ss
iret
cmpsl
ljmp
lds
pop
dec
fadd
or
mov
aad
lock
adc
mov
and
das
arpl
stos
mov
sbb
cltd
nop
and
orl
out
sub
int
push
sbb
popa
les
lods
cmp
dec
addr16
sahf
pop
ds
xchg
or
rorb
push
add
les
fists
jmp
ds
push
or
or
mov
outsl
mov
and
fxtract
jnp
jl
or
xlat
pop
out
in
add
mov
dec
in
mov
sub
imul
mov
imul
scas
fs
mov
push
mov
std
addl
mov
lds
push
inc
int3
xor
dec
mov
mov
scas
loopne
mov
add
movsl
pop
nop
cmpl
adc
shr
jg
addr16
xor
mov
aad
cmp
js
push
pop
movsb
aaa
in
incl
loop
xchg
sbb
sub
ss
pusha
inc
fdivl
ljmp
mov
sahf
mov
shrb
push
jae
repnz
ffree
push
pop
inc
call
in
pushf
inc
and
jno
int3
out
xchg
mov
mov
pop
cli
std
sahf
daa
add
loope
pusha
jb
sbb
dec
xor
fsubs
dec
fdivl
mov
lahf
dec
sbb
icebp
in
mov
cli
lret
xor
xchg
pop
hlt
add
cmpsb
popa
add
cltd
ffreep
mov
or
jp
hlt
cmp
and
sub
dec
cmp
mov
pushf
daa
addb
aad
push
push
mov
movl
inc
js
out
ret
les
movsb
jle
out
test
pop
sbb
js
addr16
sbb
dec
ds
and
les
rcr
xchg
sub
xchg
js
les
rcr
js
push
pop
mov
dec
sarl
add
sbb
mov
data16
das
inc
mov
in
icebp
mov
loop
and
lods
jmp
aas
stos
pop
icebp
sbb
lcall
jb
in
fs
dec
loop
pop
mov
sub
fisubrl
in
scas
cmp
divl
mov
add
pop
jg
ljmp
sbb
mov
cmc
jb
popa
xorb
inc
push
iret
sbb
stos
inc
shll
fbstp
cmp
clc
jle
cmpsl
jo
push
in
testl
je
sbb
cmc
mov
test
fistpl
outsl
mov
mov
jg
shrb
jns
call
mov
adc
dec
in
scas
add
cmpsl
inc
pop
ja
jns
xchg
push
stos
inc
add
push
ljmp
pushf
xor
mov
or
ja
cmp
ja
in
xchg
jbe
or
xchg
add
rcrb
shl
xor
sub
pop
add
jp
mov
xchg
adc
push
inc
xlat
sti
fcmovu
jae
cmp
xchg
pop
mov
adc
add
jmp
mov
pop
pop
sahf
iret
pop
icebp
add
and
mov
pop
inc
fimull
rol
cmc
add
loopne
dec
push
push
ljmp
jno
out
fnsave
nop
daa
cmp
xchg
xchg
call
push
call
inc
cld
outsl
push
cs
and
test
add
jmp
mov
xor
mov
and
sti
xchg
and
sbb
ja
sub
out
mov
adc
add
es
xchg
lahf
fisttpl
or
sbb
pop
adc
and
add
add
and
pop
push
mov
negl
mov
aas
inc
rolb
sbb
xor
les
shl
pop
mov
jg
jg
cltd
lods
ret
push
in
hlt
into
and
inc
sbb
scas
inc
movsb
xchg
sub
vpcmpgtb
sbb
inc
popa
xor
xchg
lret
cld
mov
out
sbb
adc
mov
xlat
adc
mov
add
mov
and
add
inc
xlat
xchg
and
mov
pushf
add
ret
mov
cmp
int
test
pop
push
mov
sbb
inc
fnstcw
ljmpw
jecxz
lea
test
nop
adc
push
dec
mov
jno
rcrl
xchg
xchg
sbb
mov
imul
mov
add
icebp
sbb
dec
xchg
in
add
adc
adc
dec
xchg
enter
sub
add
mov
gs
dec
xchg
or
add
pop
sbbb
push
pushf
push
into
jb
sub
int3
fsubrs
dec
inc
fstpt
fnstenv
mov
add
or
out
dec
xchg
sub
xchg
lret
pop
call
rcrl
scas
cmpsb
cmp
outsl
std
movsb
cmp
xchg
and
jp
inc
fstps
pushf
loopne
rorl
add
js
fnstenv
lods
mov
mov
xor
jns
repnz
pop
icebp
repnz
and
push
pop
repnz
inc
and
dec
filds
repnz
add
adc
dec
out
fucom
jp
repnz
and
stos
inc
sub
sti
out
sub
rcrl
cld
mov
sub
push
adc
push
add
jno
adc
mov
sub
push
fsub
jle
or
clc
dec
jmp
loopne
fildl
push
ss
sbb
xor
and
pop
repnz
fdivl
pop
fdivl
cmc
outsb
add
pop
jmp
sub
cld
adcb
icebp
icebp
mov
mov
sbb
dec
loopne
or
xor
sub
std
cmpsl
xor
sbb
adc
add
cmp
pop
out
hlt
mov
lret
sti
or
cmp
adc
jmp
dec
fistpll
cmp
loopne
pop
mov
gs
cmp
rcrl
mov
jmp
xor
sub
lret
cmc
jno
sub
aad
and
xchg
sub
jne
es
jecxz
shrl
xor
leave
popa
sti
add
push
jecxz
add
mov
sub
and
mov
adc
push
jmp
add
mov
push
ljmp
clc
or
mov
int
and
add
and
fidivl
repz
xchg
mov
repz
popf
xor
cmp
insl
repz
pop
and
and
pop
jne
popf
xor
cmpsl
add
and
xchg
out
cmp
jg
adc
fisttpll
xchg
pop
mov
stos
inc
fs
inc
stos
lods
mov
loope
cmpsb
cmp
pop
cwtl
push
popf
int3
rcrb
mov
inc
mov
aaa
into
std
es
das
push
xor
nop
imul
mov
clc
xor
mov
xor
rorb
lods
dec
loopne
mov
addr16
das
stc
aaa
into
cs
lahf
ss
xchg
sub
popf
mov
enter
je
hlt
inc
pop
es
add
je
in
jbe
enter
inc
fcomp
inc
ss
cld
pop
divb
lods
stos
inc
loopne
xchg
sub
inc
int3
jecxz
inc
stos
inc
jne
jp
in
jmp
sti
imul
je
push
lods
out
sti
xchg
fidivrl
rclb
mov
shl
cmpsl
jmp
daa
jne
pop
subl
pop
jbe
out
jg
fidivs
movsb
adc
jo
imul
scas
clc
fildll
dec
jecxz
dec
fnstenv
xchg
push
ret
xlat
pop
cmpsb
cmp
jl
cld
xchg
ret
popf
or
cmp
xchg
in
leave
popf
sub
iret
push
into
test
or
mov
testb
xchg
adc
aad
loop
xchg
dec
testl
fistpl
mov
mov
cmp
aam
xchg
add
jg
sbb
ss
cmp
jns
iret
mov
xor
fidivl
xchg
pop
xor
andb
cmpsl
scas
orb
mov
fidivs
add
push
and
fs
jns
out
lret
std
adc
lret
ja
add
xor
and
jecxz
je
push
cmpsb
les
test
out
clc
pop
sub
inc
sbb
jmp
gs
out
xchg
imul
mov
mov
ret
clc
add
jns
sbb
mov
inc
cmpsb
test
loope
jmp
movsl
push
dec
push
jmp
jbe
popf
mov
les
inc
imul
inc
pop
and
mov
insl
ja
add
mov
out
ljmp
inc
cmp
cmpsl
mov
shlb
push
adc
xor
cmp
pop
lret
addl
mov
fnsave
enter
push
pop
mov
xchg
sbbl
mov
in
frstor
add
add
pop
decl
jnp
in
sub
lret
sarb
push
fsubrs
out
jbe
lcall
cmp
jbe
mov
dec
fists
stos
xchg
sub
maskmovq
testl
inc
mov
sbb
push
mov
xchg
out
cmp
fdivl
push
dec
ret
jnp
mov
pop
arpl
pop
jno
in
sbb
dec
cmc
int3
push
mov
test
pop
stc
mov
mov
fwait
and
outsl
fcomps
cmpsb
cmp
dec
cmp
push
sbbl
push
or
dec
xchg
inc
xor
push
sbb
les
mov
ficompl
xchg
das
adc
shrb
fwait
test
pop
scas
lcall
into
add
mov
leave
mov
ficompl
filds
sbb
loopne
outsb
mov
cmpsl
fbstp
arpl
push
dec
inc
int
repnz
fnstcw
or
ret
clc
dec
mov
int3
or
fdiv
popa
mov
icebp
dec
ret
aam
xchg
mov
scas
pop
xchg
adc
jns
ljmp
mov
sub
or
xchg
push
mov
xchg
js
mov
jmp
and
mov
fs
cmp
xor
in
sub
mov
aad
fiaddl
lods
insb
int3
rorl
xchg
out
testl
sbb
loop
out
fbld
nop
imul
repnz
cs
cs
jge
xchg
scas
sbb
dec
into
sahf
xchg
shl
shll
loopne
sahf
mov
enter
addl
adc
xchg
dec
dec
fbld
push
leave
out
sub
sbb
inc
cltd
fsts
ja
jecxz
adc
add
mov
ret
jbe
call
stos
jg
mov
mov
mov
adcb
pop
fnstsw
jne
mov
es
xor
dec
pop
fdivl
push
rorb
mov
cmc
aas
sbb
mov
xchg
push
cmp
mov
xchg
jle
outsl
pop
mov
cmpsb
or
jg
mov
idivb
xchg
cmpl
fistpl
xchg
mulb
mov
push
jae
lahf
xchg
aaa
push
pushf
je
pusha
mov
xchg
pop
out
mov
es
or
inc
mov
sub
dec
dec
pop
mov
cmpsb
cmp
and
out
mov
and
inc
es
inc
aam
pop
and
faddl
pop
inc
mov
mov
dec
mov
mov
dec
loope
xchg
cmp
pop
cli
fisttpl
js
add
sbb
pop
mov
ret
call
scas
int
adc
out
and
add
rclb
mov
push
loopne
dec
outsb
xchg
mov
repnz
mov
js
ret
scas
mov
or
test
out
xchg
xchg
push
push
jge
push
jp
addr16
cmpsb
cmp
aaa
test
std
adc
inc
ret
or
fisubrs
mov
xor
xchg
xchg
xor
arpl
ret
lret
jae
shll
sub
rorl
push
cmc
xchg
cmp
mov
pop
mov
call
dec
out
fisubl
jmp
stos
movsl
cmp
push
or
jmp
inc
mov
ficompl
stos
aad
mov
and
aad
xchg
pop
mov
and
jmp
dec
push
xchg
mov
mov
lods
pushf
jg
mov
popf
xcrypt-cbc
cmpsl
push
lret
cli
imul
mov
hlt
sti
sbb
cmp
jne
add
cmp
in
and
aas
mov
and
dec
sbb
imul
pop
test
mov
int
test
les
xor
sbb
jg
fdivl
cmp
lods
lds
call
stos
push
lret
cs
mov
out
daa
jbe
mov
gs
push
int3
pop
and
and
pusha
cmp
mov
xchg
lds
call
adc
daa
aad
in
xchg
neg
and
dec
cmp
nop
pop
repz
out
mov
adc
inc
test
das
jns
mov
fcomps
ret
push
in
ljmp
repz
ficoml
jbe
fists
test
icebp
lods
and
or
mov
jmp
mov
lret
ficoms
nop
dec
mov
adc
popf
mov
add
pop
inc
or
xor
stos
pop
test
mov
xor
loopne
bound
stc
xchg
sub
ret
mov
sbbb
gs
mov
lahf
dec
fsubl
fcmovu
pusha
je
inc
lods
cmp
fwait
pop
add
cmpsb
cmp
cltd
and
aad
adc
xchg
lock
lock
add
or
lea
add
outsb
call
jge
pop
stos
outsl
pop
rol
loopne
mov
xor
adcl
sti
push
jl
aaa
jmp
xor
pop
mov
jb
arpl
xchg
pop
ret
and
mov
mov
lcall
in
xor
mov
icebp
aaa
ljmp
jb
lahf
jbe
or
data16
scas
pop
out
test
test
data16
es
and
inc
jne
push
mov
stos
cmp
or
pop
imul
push
pop
aam
addr16
add
push
sub
cmp
int
xor
push
cwtl
movsb
ljmp
data16
fmul
mov
in
stos
push
scas
add
xchg
sub
and
repnz
ja
and
xchg
mov
ljmp
push
push
enter
je
cmp
mov
roll
pop
sahf
pop
test
jno
std
inc
popf
xor
enter
ficoml
popf
stos
jo
adc
negl
andb
sub
pop
divb
jne
cmpsb
imul
pop
loop
jno
mov
mov
enter
out
and
fsts
cmp
pop
mov
scas
jb
cld
mov
cs
mov
arpl
mov
fsubs
lea
mov
or
repnz
cltd
xchg
adc
ja
mov
loopne
mov
sbb
stos
xor
je
jno
xor
rorb
or
inc
cs
data16
jle
xchg
jbe
add
std
cmp
lea
pop
shl
fcompl
loopne
cmp
cld
push
jmp
test
dec
shlb
mov
mov
xchg
jg
lcall
jno
out
jae
push
mov
sub
out
mov
cmp
mov
dec
loop
shll
shll
aam
aad
mov
dec
test
sub
imul
std
jno
xchg
ja
cmp
in
sahf
and
jecxz
aas
mov
sbbb
mov
out
je
mov
frstor
add
aad
add
div
sbb
fsubp
lock
stos
adc
xor
popf
add
or
and
dec
fs
push
jo
xor
xchg
test
fwait
lcall
push
data16
loope
jae
or
ja
in
and
or
bound
rcrl
and
cli
xor
les
cmp
and
sti
iret
fs
test
stos
orb
mov
pop
nop
jbe
es
xchg
cs
inc
push
push
pmaddwd
je
cmp
xor
test
mov
push
lret
jg
mov
testb
out
dec
and
jo
sub
adc
jecxz
pushl
rolb
fbstp
cmp
push
sbb
and
stc
out
out
int3
and
or
in
test
jmp
adc
das
test
pop
enter
clc
xchg
sub
fs
rorl
fwait
xchg
es
cmp
mov
stos
int3
dec
or
sarl
lcall
dec
jle
pop
dec
inc
sub
push
dec
rcrl
sbb
pop
je
adc
inc
pop
shll
pop
in
sbb
lret
mov
xchg
fldl
imul
cltd
sti
int3
push
les
ds
lret
shll
sti
and
lret
int3
arpl
iret
cmp
int3
call
pop
or
adc
push
add
mov
inc
fmull
rorl
cs
scas
stos
mov
clc
jecxz
pop
loopne
sahf
test
out
sbb
push
adc
add
sbbl
cmp
cmpsl
lock
jecxz
jmp
xor
lret
ss
inc
xlat
imul
xchg
test
out
cmpl
lret
aad
inc
mov
push
jae
dec
mov
imul
inc
testb
jae
movsl
dec
xchg
push
cli
das
inc
inc
fstl
pop
and
subb
int3
scas
or
cmc
or
out
out
add
adc
icebp
ss
std
xor
icebp
sti
xor
sub
mov
je
cld
mov
jg
pop
aas
lret
jnp
push
dec
not
dec
mov
movsb
pop
pop
cli
ret
push
shlb
jo
aam
or
addr16
add
jae
pop
lret
nop
cmp
aas
jmp
adc
adc
int3
mov
lock
and
pusha
filds
fists
pop
inc
cmpsl
mov
lock
mov
push
jns
sarb
adc
jne
xor
enter
inc
ret
loop
mov
xchg
add
and
sbb
jno
repnz
outsl
out
push
mov
jns
push
fidivs
adc
or
int
push
cmpsl
movsb
pop
adc
mov
inc
sub
ja
mov
call
std
pop
and
push
cmp
jle
jecxz
mov
mov
sahf
aam
pavgw
shlb
ror
push
or
sarl
fsubrs
cmp
leave
fcmovnb
dec
in
pop
add
ret
xlat
aad
mov
clc
repz
mov
jmp
push
or
in
mov
in
ficoms
or
repz
sbb
adc
dec
xchg
stos
add
sti
add
pop
xor
pop
nop
nop
imul
negl
or
lcallw
xchg
dec
addb
inc
pop
icebp
push
mov
loopne
imul
dec
or
push
sbbb
xor
push
test
or
jmp
loop
or
jns
enter
icebp
sahf
xor
lret
sub
sbb
pop
lds
mov
cli
push
sahf
xchg
scas
in
push
out
in
mov
inc
add
in
dec
push
inc
mov
xor
int
in
fildl
or
test
in
jg
inc
ret
stc
daa
mov
xor
cmpsb
pop
lret
inc
xchg
xor
call
mov
mov
pop
pop
jmp
icebp
sbb
rcrb
out
add
mov
out
test
notl
int3
pop
jbe
jo
inc
lret
loopne
xor
mov
xor
adc
test
cld
daa
pop
int
test
add
cmpsl
pop
int
mov
push
and
push
dec
rorl
movsl
cmp
inc
xchg
mov
jmp
xor
jae
sahf
ja
test
rcrb
xchg
add
sbbl
stos
stos
jb
ljmp
xchg
hlt
stos
call
mov
pop
sar
jae
fidivrl
mov
das
hlt
insl
cmp
or
sbb
nop
dec
in
jbe
imul
push
leave
xchg
jnp
inc
leave
inc
pop
mov
sub
xor
xchg
test
das
fcomip
xchg
imul
mov
in
int
xlat
sub
pop
loopne
pop
aad
pop
mov
lods
shrb
outsl
leave
sahf
xor
popf
idivl
mov
adc
lods
out
in
jmp
or
jnp
add
xchg
sub
push
jnp
or
lea
lods
imul
insl
or
mov
lock
push
outsb
pop
cmp
jno
cmpsb
cmp
mov
test
das
mov
cwtl
or
fwait
xor
jge,pn
js
ljmp
lcall
jmp
dec
pop
and
cltd
pop
imul
outsb
aam
mov
fs
xchg
jge
cmpsb
std
sub
fwait
sti
popa
loop
adc
shrl
clc
pop
int
in
sbb
xor
or
sub
dec
jbe
in
xor
xchg
adc
dec
clc
and
hlt
sbb
dec
enter
testb
bound
dec
xchg
addr16
outsb
data16
push
mov
inc
test
jl
push
scas
sub
add
push
aam
sub
sub
push
sub
adc
inc
dec
enter
push
ffree
push
lret
dec
sub
jp
adc
jl
in
mov
jecxz
daa
or
cmpsl
cld
and
fucomip
xor
mov
aaa
sub
jecxz
pop
ja
push
push
hlt
xor
enter
test
jns
push
add
fists
xor
aam
leave
xlat
into
gs
jg
mov
decb
ret
ret
loop
mov
pop
nopl
negb
and
aam
mov
enter
mov
test
dec
cmp
test
mov
xchg
mov
addr16
inc
xchg
jbe
repz
addl
loopne
inc
xor
cli
or
scas
mov
dec
lret
inc
test
cwtl
out
xchg
add
out
test
pop
rclb
popf
sbb
shr
fisttps
scas
pop
fsubrl
mov
decb
add
incl
inc
mov
in
das
jne
mov
sub
jo
jbe
xor
loop
inc
shll
clc
imull
fmull
inc
push
fmulp
inc
fmull
jl
shlb
movsl
and
js
repnz
iret
rcrl
out
xlat
inc
mov
out
pop
enter
aas
sti
movl
in
sbb
icebp
fwait
rcr
out
and
fwait
or
xchg
or
jl
sub
jno
pop
ret
and
test
cli
pop
int3
adc
push
sbb
out
push
mov
das
adc
inc
fisubrl
cli
adc
in
lds
push
jo
movsl
xor
hlt
fadd
mov
mov
dec
rclb
aas
mov
jmp
je
xchg
or
testl
cld
pop
loope
inc
mov
shl
data16
mov
je
mov
xor
in
orl
js,pn
mov
outsb
xchg
movsl
mov
push
sbb
imul
cmp
xor
cmp
aaa
jl
int
pop
sub
xchg
lods
xchg
xchg
sbbl
xor
mov
add
lret
xchg
stc
ret
mov
adc
mov
add
xchg
xor
mov
movsl
push
bound
fldl
mov
les
or
inc
jge
psubd
sbb
add
add
ljmp
adc
xchg
outsb
jno
cmp
loopne
mov
inc
mov
inc
adcl
fs
push
cmp
mov
or
mov
ret
leave
inc
jp
lcallw
bound
xchg
sub
insl
psllw
mov
inc
ret
mov
push
xchg
push
aas
fisubs
xor
xlat
jg
outsb
cmp
outsl
xchg
sub
ret
rorl
and
inc
ret
xlat
inc
and
inc
clc
les
data16
xchg
out
fs
scas
adc
xor
jge
pop
inc
cld
mov
outsb
pop
or
cmp
pop
cmp
test
insl
bts
mov
sbb
in
mov
sbb
sbbl
adc
iret
push
push
fwait
xchg
cmp
xchg
pushf
dec
jns
cmp
imul
dec
push
jo
or
cmp
mov
int3
inc
xchg
call
call
pop
mov
or
push
stos
loope
mov
in
xor
push
xchg
mov
loop
sbb
push
mov
sti
xchg
pop
into
in
mov
dec
push
les
fcoml
mov
fisubrs
mov
fwait
and
add
data16
cmp
sub
jnp
push
lods
loop
and
rorb
in
aam
jmp
mov
sbb
inc
mov
cld
ret
jp
cmc
test
stos
xchg
fwait
push
out
imull
jns
sahf
je
ljmp
mov
mov
shl
sbbl
mov
jo
dec
nop
jnp
mov
ret
jns
mov
mov
cs
push
pop
sahf
mov
jmp
inc
mov
ljmp
fistpl
mov
daa
loopne
adc
sbb
adc
fsub
add
mov
add
hlt
sub
and
inc
adc
sub
jbe
inc
imul
outsl
lahf
popa
fsts
xchg
xchg
test
inc
or
lds
or
cwtl
dec
pushl
pop
cli
pop
or
fsub
cmp
dec
nop
mov
in
lret
xchg
clc
sarb
outsl
rcrl
cli
sbb
shl
push
stc
rcl
mov
aad
jnp
shlb
adc
mov
mov
dec
cwtl
lcall
jge
insb
pop
scas
cmpb
mov
jg
xchg
jns
xor
sub
scas
popa
mov
adc
xchg
add
mov
cmc
test
ficomps
and
pushf
cwtl
das
stos
adc
jo
stc
repz
jmp
test
out
and
clc
cmc
fcoms
lods
pop
mov
mov
push
or
xchg
addr16
cmc
pushf
nop
mov
ficoml
cli
fldenv
push
jae
cmp
ljmp
lods
stc
test
cltd
out
sub
and
xchg
pushf
shlb
adc
adc
push
jmp
in
sbb
inc
scas
scas
xchg
xchg
sbb
test
ret
lea
ftst
fwait
xchg
frstor
dec
aam
fidivrs
call
add
adc
sti
mov
outsb
sub
clc
pop
test
add
aaa
idivl
jne
in
pop
xor
outsb
loope
jo
aam
adc
inc
popa
sbb
pop
jns
repnz
pop
lcall
jl
fbstp
popf
jecxz
sbb
negb
adcl
adc
fisttpl
popa
stos
add
mov
mov
outsb
add
clc
jb
cli
push
test
sbb
outsb
jp
test
dec
adc
push
cmp
lea
fistps
out
aas
aaa
lock
aaa
cli
sub
or
shll
mov
push
rolb
stos
pop
jb
mov
sub
jp
push
insl
xor
and
fisttpll
jp
mov
loop
pop
xchg
add
fbld
testl
push
mov
cs
adc
pop
popa
jb
cmp
cmc
push
mov
pop
xor
cmp
inc
testl
arpl
cmp
pop
mov
outsb
push
dec
in
cmp
push
movsl
mov
or
imul
das
les
loope
aam
out
adc
add
jb
gs
cmp
outsb
mov
pop
lds
rcrb
push
inc
repz
xchg
cmp
sbbl
js
mov
pop
jbe
pop
push
dec
iret
addr16
or
cmpsb
or
jno
rolb
js
addl
in
mov
out
mov
mov
jnp
pop
sbb
cmpsb
pop
push
in
xchg
xor
in
xor
xchg
movsl
repz
or
inc
mov
sbb
push
pushf
loop
in
popf
iret
pop
mov
div
mov
addb
push
loopne
jnp
sub
ja
aaa
xor
pop
in
cmpsl
rcrb
negb
jg
jmp
daa
mov
lret
scas
inc
ret
imull
sub
or
fimull
push
out
in
pop
push
jmp
insl
out
aaa
add
ja
mov
sub
cli
inc
iret
mov
fstl
loope
nop
daa
xchg
mov
in
mov
mov
sahf
and
sbbb
dec
adc
jge
mov
call
jno
orl
sbb
adc
push
in
sbbl
shlb
cld
sub
in
pop
stos
ss
dec
test
out
push
fwait
xor
and
inc
inc
lret
gs
push
out
shll
sub
js
or
pop
xchg
lock
jl
xchg
inc
into
xchg
fmull
jle
cli
and
les
inc
lret
push
mov
lods
adc
popf
movsb
cli
mov
vpshuflw
cmpsb
popl
pop
push
roll
cld
pop
push
cmp
orl
inc
std
dec
out
inc
pop
mov
roll
mov
push
xor
aaa
or
lret
cwtl
mov
inc
insl
mov
outsb
sbbb
or
sahf
mov
mov
push
adc
in
imul
pushf
push
fdivl
mov
cli
xchg
xchg
movd
in
mov
xchg
push
aaa
into
aaa
mov
inc
out
push
in
mov
leave
pusha
cmp
out
std
xchg
sub
scas
add
inc
addb
mov
aad
inc
flds
pusha
not
dec
or
sub
add
insl
movsl
cmp
push
mov
push
mov
mov
arpl
mov
leave
inc
jmp
je
aad
sbb
and
outsl
call
test
cmp
imulb
mov
js
jle
shrl
mov
lods
orb
pop
mov
jg
shlb
rcll
add
pop
icebp
adc
jne
or
js
inc
sub
and
mov
sti
call
cmp
cwtl
imul
lods
inc
push
fstpl
push
sub
popa
pop
das
jbe
pop
sbb
orb
jmp
outsb
pop
ficomps
gs
out
in
nop
addr16
sbbl
aaa
out
test
mov
in
fdivr
xchg
or
ret
dec
in
mov
imul
aas
dec
loop
orb
xchg
imul
jge
inc
decb
lahf
fwait
jb
aad
pusha
pop
xchg
and
ds
cmp
imul
cmp
mov
imul
addr16
push
push
loopne
jae
push
loope
sub
cli
cwtl
outsl
xchg
fimull
mov
adc
sub
and
aaa
shrb
aas
dec
mov
inc
sub
sbb
inc
stos
fidivrs
adc
mov
cltd
fxch
xchg
loop
daa
in
je,pt
and
mov
sbb
das
sarl
aad
xchg
dec
inc
mov
push
lds
in
imul
aas
or
ss
add
fadds
enter
gs
imul
sbb
sbb
mov
fcompl
xor
in
sbb
xchg
sub
inc
sbb
jmp
movsb
out
in
or
sarb
or
push
mov
jecxz
sti
mov
jno
jnp
in
sbb
push
lahf
pop
inc
mov
inc
ja
das
inc
les
lea
fsts
adc
das
add
cmc
jns
iret
imul
mov
cmp
add
mov
cs
mov
pop
push
and
repnz
fnstcw
dec
out
insb
push
shll
mov
icebp
mov
pop
push
push
lds
cmp
pop
stos
xor
or
cmp
or
add
jle
das
ret
xorb
sahf
outsl
cmp
push
jmp
test
sbb
lahf
jmp
scas
stos
sub
ja
jecxz
mov
mov
shll
clc
outsl
mov
cmc
pop
cmp
cmp
popf
cmp
lock
push
loopne
sub
add
dec
mov
pop
fbld
lret
push
into
ret
sub
out
add
and
enter
iret
sti
lret
mov
xchg
out
pop
or
pop
or
pushw
in
pop
inc
ja
mov
add
mov
dec
in
leave
addr16
fstpl
inc
adc
push
movsb
mov
mov
mov
cmp
sub
pop
mov
mov
cmpsb
jne
andb
hlt
lods
std
js
out
dec
sbb
es
clc
sarb
push
jo
adc
stc
jbe
dec
loopne
pop
std
xchg
mov
sti
xchg
test
es
dec
mov
test
fdivl
into
dec
repz
dec
in
loop
jl
add
push
jae
sbb
test
insl
jns
push
call
mov
jnp
stos
sub
rcrb
add
xor
push
sub
xchg
aas
push
dec
loop
push
sub
pop
pushf
dec
adc
je
pop
push
sub
pop
popf
dec
xor
ja
sahf
push
ljmp
jge
lods
sub
cmp
mov
mov
adc
test
leave
mov
mov
inc
jecxz
xsha1
cmpsb
or
push
xor
dec
mov
xor
add
testl
pushf
icebp
clc
xchg
out
jg
les
ret
xchg
enter
mov
popl
scas
lock
cli
jp
addr16
mov
inc
insl
xchg
sbb
rorb
xlat
outsb
out
mov
pop
sbb
dec
add
movsb
dec
inc
or
mov
mov
ja
pop
push
imul
rcrb
inc
sti
bound
dec
pop
add
cmp
jl
xlat
jle
insl
xchg
aaa
xchg
std
add
adc
stos
xor
inc
push
stos
dec
lea
mov
mov
inc
dec
push
outsl
imul
dec
dec
inc
or
sahf
mov
or
lods
data16
jb
mov
mov
mov
pop
adc
inc
or
jbe
push
xor
outsb
mov
or
mov
mov
mov
cmpsb
sub
or
mov
out
mov
mov
mov
mov
mov
pop
ret
les
shll
in
pop
data16
dec
mov
sub
and
and
inc
or
sbb
lret
arpl
out
mov
inc
cmc
lcall
inc
fadds
ror
mov
mov
xor
pushf
sbb
cmp
les
mov
jl
hlt
push
hlt
imul
cmp
xchg
xor
je
lds
sarb
mov
iret
or
pop
inc
push
pop
in
jge
push
and
lods
cmpsb
sub
scas
xor
into
pop
add
movsb
xor
push
mov
mov
xor
dec
adc
cmp
nop
js
in
jno
outsl
fwait
inc
and
xor
call
adc
mov
lahf
inc
int3
xchg
loope
jg
addr16
in
jb
jb
repz
xor
jno
leave
pop
std
mov
test
xchg
std
pop
data16
pop
out
push
xchg
xchg
mov
lcall
jne
sbbl
and
clc
shr
insl
push
loope
ljmp
insl
jmp
mov
test
sub
leave
xchg
fdivl
mov
shlb
cmc
arpl
mov
push
test
push
add
mov
incl
fistps
dec
add
scas
pop
fdivrl
mov
cmpsl
and
enter
jb
adc
cwtl
cmp
mov
mov
jle
stos
or
mov
mov
pop
sahf
int3
pop
clc
stc
lds
xlat
icebp
pop
fdivrl
jmp
push
loope
leave
mov
sti
mov
std
sahf
or
xchg
or
sbbl
aas
icebp
jge
jmp
mov
inc
jl
push
lret
std
sahf
adc
dec
mov
xchg
mov
jns
stc
lahf
cmp
int3
xchg
hlt
std
pop
ret
negb
adc
xchg
and
mov
mov
jg
sbb
dec
mov
mov
mov
xchg
cmp
jle
inc
adc
adc
and
icebp
cmp
movsl
das
pop
cmpsl
push
jmp
stos
cs
dec
add
pop
cld
pop
leave
mov
mov
scas
and
cmp
and
scas
adc
pop
movsl
mov
mov
movsb
and
imul
sti
fmuls
std
and
enter
push
lods
and
pop
std
lods
cmp
out
mov
or
test
pop
std
lods
fmul
mov
mov
sub
and
push
cs
mov
or
pop
lock
out
jbe
lods
rorl
hlt
xor
cmp
daa
ljmp
push
repz
lea
sub
cltd
push
dec
or
into
mov
and
pusha
xchg
add
out
andl
inc
insl
addr16
lcall
in
adc
inc
pop
ret
and
dec
pop
push
insl
addr16
sbb
ljmp
dec
inc
push
ret
xchg
hlt
cmpsb
dec
or
in
orb
popf
xchg
add
inc
out
jl
xchg
mov
jbe
adc
nop
mov
stos
dec
adc
out
cmpsl
cs
je
push
xor
xchg
lods
les
cmp
cs
or
shlb
cmpsl
pop
in
dec
sbb
out
cltd
lods
sbb
addr16
pmullw
mov
mov
xchg
cwtl
stos
xor
ret
sahf
inc
mov
mov
fildll
rclb
dec
nop
push
dec
fwait
sub
mov
stos
sbb
enter
lods
sbb
pop
fisubrs
mov
mov
lods
cmp
sbb
shrl
adcb
sbb
mov
dec
xchg
cs
sahf
stc
popa
in
pop
mov
out
xchg
negb
int3
imul
ret
cmp
jns
shrl
out
je
add
test
sbb
mov
xor
int
push
and
pusha
pop
xchg
ret
lret
mov
data16
outsl
repnz
pop
fiaddl
imull
add
in
push
lret
popa
rcrl
sbb
mov
jge
aad
call
jg
popf
mov
ljmp
pop
and
xor
xchg
dec
and
lods
push
fwait
sub
or
imul
pop
sbb
push
jb
aam
test
xchg
dec
cmp
mov
mov
lds
jb
fiaddl
lcall
mov
ss
gs
pusha
sbb
xchg
lret
loop
push
xor
rcll
xor
stos
sub
mov
and
cld
mov
mov
mov
popa
lahf
cmp
jbe
inc
adc
jo
movsl
lea
sbb
adc
push
test
push
loope
xchg
mov
jbe
adc
mov
cwtl
daa
sbb
lods
adc
aad
pusha
or
loope
mov
ss
int
in
xchg
pop
cli
xchg
lea
mov
enter
or
or
rorl
pop
cld
xchg
or
mov
scas
mov
dec
mov
out
cwtl
lods
or
movsl
les
mov
mov
fidivrs
arpl
pop
stos
bswap
fmull
push
add
mov
aaa
mov
mov
scas
lcall
pop
into
xchg
xchg
scas
inc
pop
xchg
inc
negl
out
jae
mov
mov
push
add
out
fstps
mov
ret
xchg
mov
mov
lret
mov
rclb
mov
adcl
add
addl
add
add
icebp
xchg
cwtl
aas
out
loop
in
pop
add
add
add
jns
out
and
in
jns
pop
repnz
and
dec
xchg
xor
in
jo
mov
iret
insw
and
mov
test
insb
push
push
aas
mov
stos
sbb
bound
cwtl
aaa
je
pop
imulb
sbb
push
call
dec
or
add
jbe
sbb
pop
leave
jae
sti
loopne
push
adc
into
xchg
jae
jl
inc
arpl
ret
push
pop
adc
lret
xchg
mov
dec
push
pop
jnp
mov
pop
add
lods
sarb
or
lret
cwtl
xor
push
ret
in
lds
call
clc
adc
or
pop
scas
ss
sbb
addb
xchg
rcll
shll
cwtl
insb
jecxz
mov
mov
or
push
and
imul
icebp
sub
je
xlat
jp
popa
mov
outsb
popa
in
mov
push
cld
icebp
cmpsl
xchg
cmp
out
or
stos
push
lret
imul
sahf
cltd
inc
cmpsb
cwtl
inc
mov
lods
faddl
ja
inc
push
and
xor
mov
rcrb
pop
jbe
mov
out
jo
outsl
lea
push
push
std
mov
mov
stos
sub
ret
scas
jp
pop
jmp
icebp
dec
push
pop
fs
mov
xor
xlat
cs
ficoms
xchg
aas
sti
imul
loope
sbb
arpl
leave
mov
inc
adc
push
lret
jne
fdiv
pop
negl
shl
push
icebp
push
sarb
and
push
out
sub
xor
xchg
pop
mov
mov
sub
js
nop
cmp
cmp
pop
shrb
and
cmp
out
jne
sub
mov
dec
fdivrs
fwait
add
and
lcall
test
cwtl
xor
sub
push
nop
cmc
pop
dec
xorl
mov
xchg
cmp
movb
stos
das
mov
or
cmc
jl
cmp
mov
inc
dec
pop
test
iret
sahf
js
scas
sbb
xor
mov
fdivrl
roll
mov
cmpsl
pop
stc
jmp
mul
jbe
dec
pusha
repz
cmp
sub
lcall
addr16
mulb
shlb
sub
cs
or
negb
sub
pop
out
mov
nop
jbe
ret
mov
adc
cwtl
rcrl
loope
pop
aam
adc
les
push
orb
aaa
andb
push
jg
cwtl
jae
lret
test
ret
nop
std
out
insb
or
inc
paddusb
dec
pop
rolb
sub
insb
in
in
xor
sbb
hlt
data16
stc
pop
enter
mov
cmpsl
fidivs
bound
lret
lret
ret
push
jbe
add
loope
sub
push
in
cld
xchg
push
mov
adc
mov
cltd
orb
call
testl
ret
xchg
fisttpll
insw
sub
xchg
jp
jle
enter
daa
dec
adc
jmp
sbb
xor
inc
clc
mov
orb
mov
pop
sti
fstl
jne
pop
cmpsl
outsl
in
cmc
add
push
in
pop
aam
mov
mov
mov
push
mov
cmpsl
rclb
mov
pop
je
movsl
jecxz
xlat
push
aad
mov
mov
aad
dec
test
in
sub
daa
push
pushf
xlat
xor
pop
inc
add
mov
xchg
das
scas
adcb
xchg
pop
int
imul
jns,pn
inc
sub
xor
mov
stos
inc
lret
rorl
in
push
shll
adc
mov
inc
mov
jecxz
test
mov
jo
in
sbb
insb
sub
nop
repz
arpl
daa
mov
jnp
cmp
mov
inc
adc
idiv
pop
pop
add
pop
inc
js
dec
push
mov
les
sbb
mov
out
pop
cld
or
pusha
cmc
adc
xchg
dec
fs
xor
out
les
sub
cwtl
insl
out
sub
xor
pop
mov
test
cmp
jns
cmp
and
loop
inc
mov
mov
lret
adc
jl
dec
adc
aas
push
cli
inc
adc
or
scas
mov
push
loop
rcll
outsl
push
mov
and
sub
xchg
ds
into
mov
mov
lods
cltd
mov
fildl
pop
aaa
xchg
in
sub
fsubs
push
pop
testl
cmp
mov
int3
jae
fadds
fnstsw
mov
mov
std
pop
fnstsw
fimuls
outsl
in
adc
push
movsl
xor
pop
int3
cmpsl
xor
mov
enter
add
jo
ljmp
fmul
int3
xchg
shll
pop
ja
mov
imul
or
jp
stc
pop
mov
out
out
js
or
rolb
inc
push
cmp
adc
inc
in
mov
hlt
xchg
xor
cmp
sub
adc
dec
arpl
xchg
pop
js
fimuls
lahf
inc
hlt
jnp
add
loop
test
scas
xchg
cmp
sub
lds
sub
popa
jg
push
dec
gs
addr16
fnstcw
jp
pop
push
pop
mov
cmp
dec
adc
lret
xor
in
jae
and
or
xchg
punpckhbw
push
lds
int3
xchg
scas
sbb
sti
pop
dec
pop
add
pop
add
pusha
sub
sbb
dec
arpl
outsb
aam
inc
clc
jl
sbb
hlt
pop
shlb
sbb
push
dec
callw
mov
mov
movsl
inc
fnstcw
mov
roll
or
mov
inc
sahf
pop
std
stc
pushf
lret
iret
fiaddl
fs
cmp
cmp
adc
mov
pop
and
inc
mov
push
mull
or
int
xor
dec
lahf
and
adc
jmp
nop
inc
cmc
icebp
push
int3
inc
out
sbb
mov
movsl
xor
cmp
or
cmp
lea
pop
push
clc
popf
add
mov
test
push
sarb
ret
mov
add
xchg
pop
pop
push
ret
popa
lea
push
out
mov
stos
std
gs
repz
testl
push
inc
out
xchg
or
pop
dec
adc
mov
les
mov
sarl
fs
imul
cld
pusha
dec
inc
pusha
in
inc
cltd
cmp
push
lods
xor
jno
cwtl
les
jne
inc
adc
inc
xchg
pop
add
cltd
stos
sub
pop
add
pop
loop
cmp
es
lcall
xor
lret
fs
cmpsl
xor
jno
ss
fnsave
sub
outsl
ljmp
std
sub
inc
dec
hlt
pop
shl
xchg
or
lret
sbb
mov
push
and
out
lock
js
sbb
push
mov
push
push
aas
scas
jb
subb
dec
imul
push
mov
test
adc
push
out
clc
pop
loop
add
xor
mov
test
imul
dec
jb
gs
xchg
dec
or
jns
jno
arpl
divb
jnp
jmp
mulb
add
add
pop
movsl
cmp
sub
xchg
movsb
dec
adc
dec
gs
movsl
sahf
orb
pop
add
xlat
mov
test
xchg
sbb
xor
rorb
sbb
push
push
push
jns
orl
sbb
js
or
bound
cmp
cltd
cld
xor
xlat
adc
mov
test
test
jno
aas
lcall
pushf
cmp
mov
jne
pop
add
mov
flds
xlat
jmp
pushf
inc
push
mov
stos
fwait
inc
mov
stos
cmc
pop
outsl
rol
mov
jnp
test
pusha
sub
imul
in
jne
mov
stc
stc
lret
mov
jnp
mov
push
adcl
mov
in
pop
cmpsb
test
test
mov
icebp
and
inc
mov
insb
xor
push
hlt
xor
push
jmp
mov
scas
adc
mov
test
loopne
jl
lcall
mov
mov
out
dec
adc
ja
mov
mov
and
cmc
int
pusha
mov
fdivrs
rcll
fdivs
imul
cmc
pop
pop
add
insb
test
mov
xor
mov
les
mov
arpl
mov
jno
repz
and
lcall
and
stos
sub
scas
std
pop
push
sub
mov
cmpsl
sbb
addb
jecxz
lahf
cmp
cli
mov
iret
daa
jb
jb
cmp
subl
xor
sub
jl
jns
dec
stos
lock
fldenv
cmp
xor
arpl
lods
xor
inc
dec
ss
daa
xchg
jne
jl
sarl
jo
ljmp
sarb
cltd
mov
movsl
xchg
imul
sub
push
cld
inc
imul
add
mov
aaa
sub
xchg
out
and
int
sti
lds
fisttps
stos
sub
or
cmp
dec
dec
or
adc
mov
sahf
and
sbb
sbb
je
cld
pusha
sub
mov
lahf
mov
jl
aad
cs
or
pop
xchg
ds
mov
enter
std
inc
hlt
sbb
xchg
xchg
hlt
pop
mov
lock
and
loopne
loope
rcll
push
push
roll
and
rorb
cmp
pushl
lods
test
pop
in
mov
adc
add
daa
test
pop
add
mov
sbb
jecxz
mov
icebp
jo
pusha
cld
cmpsl
sub
shlb
scas
sbb
xchg
cmp
dec
ret
sub
lods
data16
jle
and
outsb
jae
fldcw
ja
xchg
das
cmp
mov
ss
jmp
subb
or
or
cmp
das
mov
cmp
test
cs
push
push
int3
nop
xor
popf
inc
push
sub
lea
iret
popf
inc
aas
cmp
xor
fstp
js
or
pop
incb
or
rorl
xchg
arpl
js
icebp
bound
cltd
cmp
mov
stos
push
js
dec
ret
mov
cmp
loop
pop
lock
and
add
aaa
in
push
aad
sub
jg
cld
data16
jnp
push
std
sbb
dec
mov
loopne
jecxz
bnd
aas
xor
stos
imul
sub
lea
fadds
insb
cmc
ja
arpl
out
hlt
pop
out
out
push
testb
lods
dec
pushf
inc
scas
push
psrlq
add
pop
popw
ret
aaa
dec
sbb
cli
and
filds
icebp
xchg
test
mov
pop
out
cltd
stos
xor
or
fwait
inc
int
fldl
mov
and
ljmp
adc
cmpsb
and
iret
mov
pusha
sbbb
and
xor
movsb
jne
movsb
in
cs
mov
aad
inc
sub
fcompl
ret
pop
add
xor
ds
mov
sub
xchg
nop
or
rol
xlat
outsb
push
fadds
test
pop
add
or
clc
gs
pusha
fiaddl
es
fcompl
mov
mov
daa
mov
lods
inc
cmpxchg
add
push
stos
imul
pop
rcll
dec
pop
xchg
xchg
inc
gs
push
ret
xor
shll
or
enter
sub
add
cmp
and
imul
push
mov
in
aad
int
push
lcall
xchg
xchg
cmp
xchg
cwtl
lea
pusha
lret
ss
and
sub
jno
fldl
pop
xchg
jmp
pop
adc
sbb
inc
and
js
sbb
xchg
icebp
dec
in
movsl
and
std
pop
dec
pop
fucomi
out
sbb
cmp
jns
dec
loop
jp
and
lret
xchg
sub
loop
xor
pop
gs
ljmp
dec
adc
jp
pushf
sbb
lret
test
dec
adc
mov
pop
ror
mov
add
daa
call
int3
xchg
adc
inc
lret
xchg
xlat
enter
add
and
lea
test
push
shll
push
xchg
add
mov
clc
data16
clc
cmpsw
hlt
sarb
fiaddl
ss
push
cltd
add
mov
lret
fnstsw
out
repz
sti
mov
lods
or
xchg
sbb
push
push
lcall
sub
sarl
cmp
test
jmp
adc
xchg
sbb
lret
fstpt
push
shl
add
mov
ret
scas
inc
adc
jae
arpl
mov
push
inc
mov
sbb
fisubrs
inc
or
and
pop
mov
test
and
sbb
scas
sub
aam
ja
movsl
or
xchg
inc
js
mov
adc
les
sub
push
mov
mov
shrl
jecxz
lea
les
or
sahf
jg
or
lea
pop
std
fcoml
cmpsb
rorb
jecxz
push
aad
jnp
das
mov
outsl
mov
adc
xchg
cmp
sahf
outsl
fnstsw
jo
int
aam
bound
add
out
jp
mov
les
ja
iret
mov
enter
pop
movsb
repnz
sbbb
sub
xchg
testb
jmp
clc
pop
mov
adc
jnp
dec
gs
out
sbb
sbb
js
lcall
sbb
mov
flds
repz
ss
aam
mov
add
fidivrs
add
out
sub
mov
movsb
pusha
repnz
int3
arpl
sub
ret
inc
pushf
inc
push
adc
clc
jle
adc
leave
jg
test
mov
ror
les
mov
adc
mov
lods
faddl
clc
mov
sub
jp
sub
adc
push
adc
scas
add
imul
pop
gs
fsubr
cli
orb
mov
call
fdivrl
jns,pn
outsl
push
add
movsl
jnp
loopne
mov
frstor
mov
or
arpl
xchg
jbe
mov
push
mov
mov
out
pop
xor
bound
xor
mov
test
mov
loopne
dec
jae
mov
pop
push
out
andl
push
inc
aam
subl
rcll
es
fadds
fnstcw
mov
outsb
add
xchg
adc
mov
arpl
addr16
dec
je
ljmp
fildl
lods
aaa
in
xchg
shl
add
inc
xchg
roll
dec
push
and
stos
test
ss
mov
add
sub
lods
push
push
mov
xchg
add
fwait
inc
jmp
popa
in
icebp
std
push
jg
int3
xchg
push
imul
mov
arpl
test
lods
inc
adc
daa
scas
sub
xor
push
cmovs
cld
fdivrl
aam
mov
lret
movsl
fs
push
push
in
cwtl
sbb
cld
popa
cmp
xchg
sbb
add
xor
les
loopne
cltd
or
data16
xor
inc
xorb
mov
fisttpll
movsl
adc
cmp
cmp
dec
adc
cmp
cwtl
inc
jmp
out
mov
scas
xor
mov
stos
xor
add
enter
sahf
cmp
inc
push
mov
lods
lahf
inc
adc
mov
sub
int
es
imull
xchg
or
fisttpl
mov
lret
pop
hlt
jp
stc
pusha
jnp
jne
adc
ret
inc
out
jne
pop
arpl
int
nop
cmp
aad
and
flds
shll
xchg
mov
sbbb
arpl
push
mov
inc
jecxz
xchg
cwtl
xchg
out
jno
into
mov
push
jno
aad
testb
das
nop
loope
fadds
fcmovnb
xchg
pop
push
push
sbb
xorb
push
add
xor
adc
movsl
xor
rolb
mov
mov
sub
mov
out
lret
ret
sti
adcb
aas
outsb
int3
and
and
fadds
test
ja
cmp
fsubs
mov
push
or
cmp
shlb
pop
xchg
sub
jbe
mov
aas
movsl
test
out
jne
jecxz
faddl
imul
sbb
mov
mov
je
jbe
ret
bswap
jecxz
lods
shl
xor
in
mov
lock
mov
in
in
mov
cmp
push
pop
repnz
and
adc
mov
dec
mov
je
daa
mov
lds
scas
out
inc
pop
divl
lds
xchg
std
pop
adc
cli
and
ficoms
push
clc
mov
sub
dec
int
adc
ds
cmp
mov
xor
cmc
sbb
or
xchg
out
fmuls
rclb
testl
push
xor
mov
test
mov
sarb
lcall
mov
test
movb
mov
inc
push
jo
outsl
out
mov
jp
push
mov
cmp
pop
orb
xchg
test
xchg
lret
mov
roll
adc
sahf
push
aad
inc
mov
mov
inc
adc
lods
sub
lahf
aas
dec
or
ret
jp
mov
mov
ljmp
mov
stos
stc
fnstsw
loope
xor
jecxz
repz
and
ss
push
fwait
movsl
fwait
inc
mov
es
cmpsl
sub
sbb
adc
pop
pop
pop
add
dec
lods
sub
push
jne
insl
xlat
lock
aad
sbb
mov
movsl
sub
dec
stos
jnp
sbb
mov
imul
jg
jns
jmp
std
aam
fldt
stc
pop
mov
mov
in
mov
sub
jle
rclb
mov
cmpsb
jne
xor
fnsave
imul
in
inc
adc
adc
in
jp
fld
clc
mov
ds
fs
push
push
test
mov
ret
adc
fsubl
cmp
mov
shrb
sub
xor
scas
andl
or
jno
arpl
dec
pop
adcb
and
cmp
push
sub
xchg
inc
and
mov
or
pop
arpl
out
mov
lods
xor
cmpsl
in
jae
cmpb
lock
or
fs
fstl
jns
jno
inc
pop
add
ret
sti
dec
inc
or
out
aaa
cmpsb
std
lcall
sbb
sub
imull
dec
jnp
push
incl
fisubl
outsb
test
imul
push
je
push
sub
push
lea
inc
and
cmp
dec
scas
sub
inc
popf
aaa
xchg
cld
lds
jl
push
shr
xlat
addb
pop
cwtl
pop
popa
mulb
enter
cmp
mov
cmc
push
mov
adc
jmp
push
sbb
dec
fdivrs
mov
outsl
cmc
mov
mov
fsubl
mov
test
cltd
pop
int
pop
scas
xor
mov
push
and
pop
add
xor
dec
cmpsb
push
rorb
mov
xchg
jbe
jns
jmp
sti
sub
xchg
xchg
pop
add
lcall
mov
out
jb
lret
scas
xor
fidivrl
add
mov
fbld
mov
mov
enter
test
inc
or
mov
insb
repnz
dec
orb
jp
push
stos
xchg
inc
and
sbb
out
pop
mul
add
cmpsl
fstpt
push
lcall
push
addr16
test
add
sbb
mov
cmp
movsl
scas
and
lret
insl
in
stc
mov
cltd
push
jecxz
insl
dec
mov
xchg
xchg
jmp
cmpsb
inc
call
or
fistpll
jne
mov
mov
loopne
mov
cltd
cmp
ljmp
scas
push
lods
cs
mov
jp
jl
push
leave
xor
hlt
sbb
rcrl
movsl
cmp
inc
inc
pop
add
sarl
push
popf
inc
push
jae
xor
pop
data16
adc
or
iret
xchg
inc
fnstsw
aad
push
inc
add
je
cwtl
add
insb
sbb
out
jmp
int
call
stos
cmp
sub
aam
shlb
repz
aaa
cld
pop
adcb
lahf
inc
loopne
out
adc
es
cmp
je
or
mov
pop
mov
loopne
rclb
lds
movsl
popf
cmp
cmp
fildll
loopne
inc
jb
scas
loope
pop
sti
cmp
pop
adc
test
push
mull
or
xor
aaa
mov
inc
and
mov
pop
popa
dec
or
xchg
sub
jae
pushf
mov
xchg
aaa
cmp
gs
scas
push
std
lret
out
xchg
shll
sbb
lock
lea
in
data16
stc
mov
lods
sbb
sarb
pop
lret
imul
push
fs
hlt
adc
ss
jecxz
test
lea
and
ljmp
ljmp
mov
fwait
das
cmpsl
push
sbb
dec
push
lds
fcompl
scas
adc
push
xor
add
cmp
outsb
fdivrs
inc
or
into
xchg
or
pop
mov
jle
scas
add
push
add
fs
lea
in
fsubrl
test
inc
mov
pop
js
mov
mov
test
fcompl
repnz
outsb
pusha
loope
and
jbe
into
addl
xor
iret
data16
test
xor
xchg
stos
call
jge
cmp
push
push
xchg
and
push
iret
inc
adc
mov
xchg
mov
loopne
pop
mov
mov
imul
int3
xchg
or
out
inc
cmp
mov
popf
ds
lods
adcl
sub
xchg
lea
push
hlt
adc
sub
out
add
in
fnstenv
mov
push
adc
int
add
out
cwtl
cmp
dec
test
sub
cli
pop
jmp
cmc
data16
push
fcmovnu
iret
mov
adc
les
adcl
lock
or
mov
push
xchg
xor
xor
mov
mov
ret
fwait
mov
setae
fnsave
mov
les
jae
push
mov
xor
mov
test
pop
leave
pusha
mov
mov
adc
movsb
xchg
leave
into
out
je
push
scas
xor
scas
xor
ret
add
mov
out
insl
shrb
mov
xchg
mov
sbbb
mov
adc
inc
rorl
call
cli
xor
ss
cmp
sub
mov
push
leave
sti
popa
push
pop
sbb
loopne
sbb
sbb
sub
jle
jnp
inc
insl
negb
xchg
icebp
pop
jo
ret
outsl
icebp
fsubrl
test
or
into
cmp
lods
xor
sub
sub
lret
fsubl
push
inc
or
into
lods
xor
ret
sub
pop
push
pop
ret
dec
pop
add
lock
push
ja
aas
and
in
cmp
out
dec
jae
jge
or
std
outsb
xchg
cmp
mov
fiaddl
pop
adc
mov
mov
sub
mov
les
lea
adc
fidivs
jno
mov
loopne
in
inc
push
lds
add
test
or
mov
push
xchg
sub
stos
mov
fcompl
pop
mov
iret
data16
lods
sahf
xor
addb
push
xor
cmc
sub
cmpsl
stc
nop
flds
fidivrs
pop
scas
sub
xor
sbb
lahf
push
ljmp
jno
and
es
fnsave
lods
inc
lret
xchg
imul
bound
ds
into
adc
push
in
in
mov
mov
inc
fisubl
xchg
sub
mov
mov
fstpt
or
cs
xor
shr
addb
mov
mov
pop
ja
mov
pop
leave
inc
fdivr
jnp
lods
lods
sbb
int
lret
sbbb
pop
push
jmp
bnd
pop
mov
les
je
pop
lods
inc
dec
mov
lret
bound
jmp
iret
adc
lahf
inc
mov
in
loope
es
xor
inc
frstpm(287
push
xchg
sub
test
dec
ficompl
sbb
lods
lahf
fimuls
test
mov
hlt
sub
and
inc
inc
fidivs
pop
scas
sub
xor
sbb
mov
or
xchg
mov
es
fnsave
lods
inc
leave
cmp
xchg
push
lret
bound
sbb
outsl
fidivs
into
setno
sahf
ret
in
popa
jecxz
mov
mov
inc
fisubl
xchg
sub
mov
mov
fidivrl
or
int
scas
sub
jmp
add
or
push
jbe
mov
pop
enter
jp
lods
stos
sbb
int3
xor
std
insb
sbbb
push
push
jmp
icebp
jo
pop
mov
ret
mov
xchg
push
lods
inc
dec
mov
lret
bound
mov
cmp
mov
or
loopne
es
xor
xchg
sub
cmpsl
mov
fsts
sbb
stos
lahf
fisttpll
test
mov
mov
xor
shlb
fidivs
pop
scas
sub
xor
sbb
mov
or
xchg
mov
es
fnsave
lods
inc
enter
imul
sbb
outsb
fnsave
into
push
nop
pop
sahf
shrl
in
pusha
loop
mov
mov
inc
fisubl
xchg
sub
xchg
mov
fnstcw
or
scas
sub
xor
iret
jmp
add
or
add
testl
stos
sbb
lret
xor
cld
imul
dec
mov
jo
mov
ret
hlt
fnsave
lods
inc
inc
mov
xchg
jmp
or
mov
mov
cmp
lea
or
fbld
mov
xor
xchg
sub
cmpsb
mov
fcoms
sbb
stos
lahf
fmull
jle
mov
mov
xor
shlb
stc
nop
inc
inc
fidivs
pop
scas
sub
xor
sbb
pushf
push
ljmp
jno
and
es
fnsave
lods
inc
ss
xchg
push
mov
mov
cmp
subb
into
or
cs
in
pop
loope
mov
mov
inc
fisubl
sub
xchg
mov
scas
inc
pop
fdivrs
or
lods
sub
addb
mov
mov
add
daa
mov
push
movb
js
lods
test
lret
sti
push
sbb
mov
pop
mov
rorl
xchg
adc
inc
inc
mov
xchg
call
or
mov
mov
cmp
mov
push
in
ficomps
mov
xor
xchg
sub
mov
xlat
push
sbbl
sub
in
cmpl
push
das
lahf
or
xor
mov
inc
inc
fnsave
scas
sub
xor
sbb
pushf
push
ljmp
jno
and
es
fdivl
xchg
lods
inc
xor
lret
bound
mov
scas
mov
int
popl
sahf
shrb
mov
mov
inc
fisubl
daa
add
es
inc
pop
fdivrs
or
arpl
ljmp
and
mov
add
mov
push
lds
divb
lods
test
fs
dec
leave
xor
cli
imul
aaa
out
insl
jo
lahf
movswl
rorb
xchg
adc
xchg
out
lret
bound
mov
cmp
mov
lahf
cmp
pop
es
xor
xchg
sub
movsb
mov
push
sbbl
sub
in
cmpl
cs
or
xor
stc
nop
aad
inc
fnsave
pop
scas
daa
xchg
fs
dec
xor
sbb
fwait
push
ljmp
jno
pop
mov
es
fdivl
xchg
lods
inc
xor
xchg
out
bound
mov
scas
mov
fidivl
int
mov
sahf
mov
loopne
mov
mov
inc
fisubl
nop
daa
add
popa
clc
mov
scas
inc
push
xlat
jg
or
arpl
int3
ljmp
pop
or
add
mov
push
les
cmc
jbe
lods
cmpsl
push
fs
inc
enter
push
push
jmp
in
insb
jo
sahf
push
mov
and
xchg
adc
xchg
out
lret
bound
mov
cmp
mov
or
fcompl
mov
das
mov
fndisi(8087
push
xchg
sub
mov
sbbl
sub
in
cmpl
push
sub
dec
out
sub
aam
inc
fnsave
pop
scas
es
fs
lds
int3
js
sbbb
lcall
imul
or
lea
es
fdivl
xchg
lods
inc
lds
cli
xchg
gs
bound
xchg
scas
mov
fnstenv
int
lea
sahf
mov
fbld
or
rcll
clc
mov
scas
inc
push
jg
or
arpl
lret
ljmp
push
or
add
mov
push
ret
inc
fdiv
jne
lods
cmpsb
adc
xor
clc
sbbb
sbb
dec
mov
jo
popf
or
mov
xchg
adc
xchg
in
lret
bound
mov
sub
cmp
mov
or
fistpl
cld
je
cs
inc
fneni(8087
dec
xchg
sub
mov
sbbl
daa
cmpsl
lahf
cmpl
push
sub
or
jg
sub
roll
fnsave
pop
scas
and
inc
xor
sbb
cltd
push
ljmp
jno
sbb
ds
es
fdivl
xchg
lods
inc
les
cli
xchg
fs
bound
xchg
scas
mov
jmp
int
mov
sahf
mov
fisubs
or
rclb
clc
mov
scas
inc
push
aad
push
pop
ja
arpl
lret
cld
jnp
push
lods
sbb
fnstenv
jo
mov
push
ret
repz
lods
movsl
adc
sti
inc
xor
mull
sbb
mov
jo
pushf
or
push
ds
fnsave
lods
inc
inc
mov
xchg
in
lret
bound
mov
sub
cmp
mov
or
ficompl
mov
sub
dec
xchg
sub
mov
sbbl
cmpsb
lahf
fadds
cmpl
push
sub
in
sub
sarb
inc
fnsave
pop
scas
and
fs
ret
inc
xor
sbb
cwtl
push
ljmp
jno
sbb
mov
outsl
jae
xchg
lods
inc
ret
xor
xchg
arpl
lret
bound
test
scas
mov
jmp
int
mov
sahf
mov
frstor
or
iret
nop
daa
add
scas
inc
push
aam
push
push
jbe
arpl
leave
ljmp
sbb
mov
ljmp
mov
push
rolb
jae
lods
movsb
adc
lds
mulb
xchg
pop
push
ljmp
jno
fwait
or
es
pop
fnsave
scas
inc
inc
mov
xchg
loop
int3
arpl
ljmp
or
mov
fcomps
mov
sub
xchg
sub
arpl
xor
sbbl
and
inc
in
cmpl
push
sub
in
sub
sarl
inc
pop
scas
and
xor
sbb
mov
or
mov
outsb
fstp
jae
nop
lods
inc
ret
xchg
lret
bound
ss
int
mov
sahf
mov
fsubl
or
into
nop
daa
add
scas
inc
push
sarl
add
es
xor
enter
jns
push
stos
sbb
mov
insl
daa
mov
push
mov
push
lods
mov
les
cmc
arpl
ljmp
jno
lcall
es
pop
fnsave
scas
inc
inc
scas
sti
xchg
loope
int3
arpl
mov
and
pop
or
xlat
pop
daa
mov
sub
sub
arpl
das
lahf
mov
rcll
sbb
movsb
lahf
ss
inc
in
xorl
push
sub
jmp
mov
sarb
pop
scas
and
xor
sbb
push
ljmp
jno
sbb
es
jae
lods
inc
shrl
xchg
popa
loop
bound
sbb
addr16
int
mov
sahf
mov
or
nop
daa
jg
clc
mov
scas
inc
push
sarl
add
cmpsb
and
xor
jmp
stc
ja
push
test
lret
cld
insb
sub
dec
mov
push
lods
mov
ret
repz
ljmp
jno
cwtl
or
push
cmp
fidivs
or
inc
ds
cld
xchg
loopne
int3
arpl
mov
and
add
push
out
push
daa
mov
sub
xchg
sub
cli
sub
dec
sbbl
and
in
test
mov
mov
jp
sub
sbb
fisubrs
pop
scas
and
xor
sbb
xchg
push
ljmp
jno
sbb
es
je
lea
xchg
pusha
loopne
bound
sbbb
mov
jmp
into
add
es
in
push
fldenv
or
int3
xchg
sub
jge
clc
scas
pop
mov
push
iret
jg
add
movsl
and
cmp
mov
mov
cli
imul
pushf
sbb
dec
mov
push
lods
lahf
pcmpgtd
inc
shlb
popa
test
xchg
adc
inc
mov
cmp
fs
xchg
pop
rcrl
es
or
xchg
fistps
arpl
mov
and
add
mov
aad
daa
mov
sub
xchg
sub
arpl
sub
sbbl
and
out
test
mov
mov
js
sub
sbb
dec
fildll
scas
push
mov
mov
loopne
sbb
xchg
push
ljmp
jno
push
xchg
push
mov
fcmovu
jne
mov
xchg
pop
fmulp
bound
sbbl
andb
iret
add
pop
sahf
mov
push
in
push
xlat
and
or
lret
xchg
sub
jnp
clc
lods
push
mov
push
int
push
pushl
mov
in
test
jae
push
movsl
pop
or
dec
fidivl
imul
nop
dec
mov
pop
scas
popf
or
xor
sbb
adc
mov
cmp
bound
xchg
add
nop
daa
out
loopne
mov
scas
inc
cmp
int
sbb
das
scas
jmp
loope
cmp
addl
pop
out
rcll
test
jbe
cmpsl
inc
fstp
inc
xchg
sub
fs
sub
sbbb
out
shlb
lahf
mov
test
mov
mov
ja
sub
sbb
dec
fildll
sbb
mov
fiadds
ret
cmp
jb
adc
ss
daa
push
mov
xchg
pop
arpl
jg
mov
xor
andl
or
push
es
test
inc
fistpl
xchg
sub
jp
stc
stos
sbb
dec
dec
int3
adcb
outsl
iret
mov
ret
hlt
jb
push
movsb
adc
addr16
cwtl
sbb
xchg
dec
mov
sbb
cmp
ss
pop
test
andnps
inc
mov
cmp
popa
jae
xchg
add
pop
xor
push
loopne
mov
mov
cmp
into
gs
sbb
sub
dec
cmp
jg
or
rcll
rolb
inc
xchg
sub
gs
sub
sbbl
in
shlb
sahf
mov
test
mov
mov
jbe
sub
push
cwtl
sti
xchg
lret
fildll
sbb
mov
faddl
shrl
cmp
jae
adc
rclb
xchg
sub
fidivs
mov
xchg
pop
fmul
fs
jge
mov
das
jmp
popa
iret
cmp
add
push
in
push
aad
mov
cmpsb
daa
inc
fcompl
xchg
sub
jns
cli
stos
sbb
sbb
insl
iret
data16
push
mov
test
jno
push
mov
fdivl
gs
xchg
pop
sti
xchg
dec
mov
fucomip
push
mov
or
cmp
sbb
push
push
in
aas
scas
mov
or
mov
sub
push
loopne
xchg
mov
cmp
iret
mov
sbb
sub
cmp
jge
or
xor
sub
xor
or
inc
xchg
sub
data16
sub
test
jnp
shlb
popf
mov
test
rclb
or
ret
jne
jecxz
rcll
xchg
leave
xor
sbb
mov
fiaddl
shrb
or
add
sub
fidivs
mov
xchg
pop
fcmovne
gs
cs
andl
iret
incb
push
out
push
shrl
mov
movsb
and
xchg
sub
ja
sti
test
mov
dec
leave
sbbb
imul
popf
sbb
cmp
out
test
outsl
mov
movsb
inc
ret
hlt
arpl
ret
cld
xchg
inc
mov
loopne
push
push
iret
jmp
xchg
cmp
pop
jne
nop
inc
pop
xor
loopne
test
xchg
xlat
pop
shlb
clc
sbb
sub
sarl
or
xor
sub
sub
or
aad
xchg
sub
std
daa
xchg
mov
enter
jp
shlb
pushf
mov
test
rclb
or
roll
je
sub
adc
dec
fbld
sbb
mov
flds
mov
loopne
or
add
mov
xchg
sub
fidivs
xchg
xchg
pop
fcmove
gs
sbb
pop
int3
cmp
std
orb
mov
push
out
dec
shrb
mov
mov
les
sti
cmpsl
pop
mov
dec
enter
push
addr16
sbb
test
outsb
mov
movsb
inc
rcr
repz
ret
cld
xchg
inc
mov
loopne
sbb
push
iret
ljmp
out
cmp
movsb
cmp
pop
jne
inc
pop
xor
loopne
addl
movsb
xchg
push
shlb
negl
sub
cmp
jp
or
das
pushf
pop
out
int
sub
sub
dec
inc
xchg
sub
data16
es
mov
movl
sbb
int
out
test
rclb
or
rolb
jae
sub
adc
dec
fbld
mov
xchg
mov
cmp
imul
sbb
lea
mov
fbstp
jg
push
mov
xchg
sub
jne
xchg
xchg
push
fxch
or
mov
sub
sbbl
iret
cld
jg
mov
dec
shrl
mov
mov
ret
xchg
sub
jne
sti
cmpsb
push
mov
dec
movl
cmp
test
insl
mov
movsb
inc
rcr
repnz
sub
xchg
adc
xchg
inc
mov
loopne
data16
ss
xchg
cmp
lret
gs
inc
ret
mov
nop
pop
mov
ds
movsl
cmp
pushw
leave
mov
cmp
and
es
sbb
or
out
cwtl
das
call
xchg
push
pop
dec
es
fcoml
add
fmull
or
test
or
jecxz
cmp
movsl
mov
sub
push
lret
hlt
and
mov
jns
xchg
arpl
push
mov
jne
mov
jnp
cwtl
xlat
adc
aad
popf
mov
jae
shr
pop
fwait
and
add
pop
stos
lcall
rcr
or
xchg
cmpsb
xchg
push
repz
push
mov
stos
enter
icebp
cmc
and
xor
xor
aam
inc
mov
lret
test
shrb
push
pop
sub
inc
push
add
pop
mov
xchg
imul
or
push
lock
adc
and
sahf
insl
movsb
xchg
stc
inc
push
aad
jle
dec
jle
xchg
popf
insb
push
dec
jp
mov
out
inc
add
nop
xchg
or
jmp
out
lods
mov
inc
dec
data16
inc
add
loope
ret
mov
xchg
in
das
mov
insl
xchg
insb
push
dec
lds
shll
xorl
pop
addr16
leave
and
sbb
push
add
inc
mov
push
popa
mov
cli
insb
or
add
insl
push
arpl
subl
mov
rdpmc
scas
xchg
icebp
int3
cmp
jb
rclb
ror
in
cmp
adc
cmc
fwait
jbe
or
arpl
popf
out
mov
jl
sbb
sub
mov
in
repz
or
mov
jae
mov
add
in
movsb
repnz
repz
or
mov
add
add
add
and
add
add
and
fs
add
jno
shrb
jbe
lahf
nop
daa
jns
in
ffree
cmp
cli
test
aad
push
mov
inc
inc
dec
xor
xchg
jg
mov
es
cmpsl
testl
fnstenv
pop
cwtl
mov
mov
inc
imul
nop
arpl
shlb
scas
push
inc
enter
mov
mov
fs
int
sbb
sbb
pushw
jo
fwait
cwtl
rol
pop
rcrl
push
aam
add
imul
or
push
xor
pop
or
pop
repnz
sarl
push
and
mov
adc
hlt
mov
jo
fs
aaa
pop
dec
stc
push
pop
insl
mov
and
cmp
pop
mov
enter
or
mov
rcrb
es
or
cmp
in
fsubrl
xchg
jnp
xchg
xor
loop
xchg
jnp
add
loopne
push
xchg
pop
les
insb
arpl
mov
dec
and
test
push
push
popf
arpl
mov
and
outsl
fwait
mov
leave
pop
sub
test
xor
xor
mov
mov
mov
pop
stos
outsb
test
xchg
test
ljmp
out
adc
inc
sbb
aam
pusha
xchg
cmc
lcall
inc
rcl
jae
addr16
dec
enter
aad
dec
out
pop
mov
arpl
jp
mov
xor
fldenv
jmp
xchg
loope
mov
sbb
xor
push
push
mov
xor
push
add
cmp
cmp
cmp
xlat
scas
addr16
das
pop
int3
jge
sti
adc
or
adc
sbb
push
addb
dec
or
fwait
or
push
enter
or
add
and
repz
gs
jle
lcall
pop
dec
dec
es
xchg
repz
bound
loop
add
cmp
bound
das
push
shrl
sbb
test
inc
push
inc
inc
call
movsl
lods
stc
xchg
stc
jle
dec
addl
jae
or
push
add
xchg
insl
xor
mov
adc
adc
xlat
jae
in
cltd
push
add
dec
push
or
cmc
scas
das
shll
pop
test
cwtl
mov
bnd
jo
cltd
pop
push
in
dec
add
cltd
push
jno
std
clc
scas
mov
dec
pop
push
dec
cs
popa
inc
add
mov
js
or
add
lds
push
addl
mov
xor
orl
mov
push
ss
inc
lods
push
push
xor
sbb
cmp
in
cmpsl
test
in
and
push
xchg
push
fucom
movsb
sbb
lock
push
out
test
fs
cmpsl
in
jmp
add
push
dec
imul
push
inc
xlat
xchg
push
aas
cltd
mov
nop
xchg
insb
outsb
xchg
jg
rcrb
or
mov
clc
cmp
fwait
es
push
or
cmp
mov
xchg
add
lea
mov
mov
pop
pop
cmp
push
bound
push
ror
cwtl
mov
sub
rclb
cld
xchg
in
pop
mov
scas
inc
call
adc
popa
test
or
js
dec
cld
add
cmc
dec
cli
xchg
adcl
xchg
jns
insl
xchg
cmp
push
push
cli
idivl
daa
sti
pop
adc
nop
xchg
shlb
adc
mov
pop
movsl
add
fnstenv
loopne
dec
popf
or
or
lock
outsl
call
lahf
dec
pop
shlb
pusha
mov
stc
mov
push
dec
push
aas
ss
into
or
insb
push
popf
dec
mov
mov
dec
rolb
xchg
lea
inc
mov
fildl
inc
rorl
ret
mov
les
or
das
push
orl
lock
pop
lea
jb
aaa
jne
mov
xor
adc
loope
xor
popa
hlt
sbb
jge
dec
or
mov
xchg
add
enter
adc
lret
add
cmp
and
adc
add
jecxz
mov
sbbb
shlb
cmc
mov
rolb
cmp
sub
leave
in
stos
inc
mov
stc
dec
lcall
sbb
mov
xor
xchg
mov
inc
hlt
int
mov
mov
inc
dec
movsb
jne
jg
inc
or
bound
and
sub
add
test
sbb
jno
pop
test
out
xlat
je
sub
ret
mov
xlat
idivb
mov
mov
jne
pop
in
sbb
jns
adc
adcl
sbb
mov
cmp
test
movsl
iret
xchg
mov
mov
add
cli
js
jp
bound
ja
mov
sti
add
dec
push
sub
dec
fdivrs
xchg
jns
fidivrl
daa
bound
daa
jno
dec
push
leave
out
ficompl
cmpsl
add
dec
ficoms
sarb
call
mov
js
sub
or
jge
jg
mov
pop
mov
jl
xchg
sbbl
push
jge
xchg
xorb
jbe
sub
cvtps2pd
es
dec
and
sub
mov
mov
rol
pusha
mov
nop
sub
sub
lea
jne
lods
dec
jle
cmpsl
dec
sub
sbb
xchg
jb
enter
lahf
or
or
shlb
mov
xchg
out
inc
mov
inc
mov
fldl
inc
and
inc
xchg
mov
ret
adc
mov
push
fisttpll
dec
sbb
push
jno
sub
pop
popf
ja
xchg
les
inc
jmp
movsb
push
push
out
ss
mov
add
fs
push
dec
adc
mov
or
aad
cmp
push
xor
push
mov
ficoml
or
dec
imull
aaa
rol
dec
iret
std
xchg
out
push
pop
movsb
test
pop
mov
inc
call
push
adc
out
mov
inc
in
shr
pop
adc
loop
cli
jmp
pop
dec
or
mov
push
mov
or
dec
push
ss
fwait
orl
lds
or
test
popf
