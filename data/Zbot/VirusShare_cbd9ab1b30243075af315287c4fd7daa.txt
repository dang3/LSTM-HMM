add
add
mov
mov
add
add
add
add
add
mov
add
mov
add
or
mov
pop
orl
inc
add
add
movl
test
xor
add
mov
mov
add
inc
push
or
mov
inc
in
cld
add
jbe
add
call
pop
or
dec
call
jb
xor
incl
in
enter
dec
jne
mov
dec
inc
hlt
add
dec
lret
xor
mov
dec
enter
mov
hlt
movsl
mov
dec
push
xor
add
mov
fmul
mov
push
test
incl
mov
push
and
dec
decl
lea
mov
mov
add
inc
lea
add
mov
enter
mov
hlt
lret
dec
decl
movl
add
inc
test
sldt
movl
add
decl
mov
decl
add
ljmp
add
rorb
or
push
mov
mov
mov
incl
push
add
dec
cld
dec
jge
mov
cld
add
incl
aam
in
test
call
push
cwtl
js
test
decl
rorb
aas
inc
lea
inc
movsb
jecxz
rorl
fisttpll
decl
shr
test
incl
inc
out
test
add
mov
xchg
lret
mov
mov
cld
jmp
out
add
inc
fisttpll
add
push
add
mov
test
add
daa
add
add
adc
inc
add
mov
add
add
mov
jne
mov
cld
sub
mov
mov
push
nop
inc
in
mov
cld
inc
mov
add
add
inc
mov
mov
ljmp
aaa
add
inc
out
mov
loopne
ret
call
cmp
add
xlat
add
add
inc
push
cmp
mov
cld
fists
jo
incl
call
mov
add
call
call
decl
mov
pushf
call
mov
add
add
jne
xor
lea
push
mov
cld
add
mov
fadds
cld
xor
int3
in
add
test
cld
xchg
jge
mov
fsubs
add
mov
pushf
add
ret
incl
call
push
mov
hlt
inc
dec
xorl
add
push
roll
in
inc
sub
inc
mov
fadds
add
mov
mov
cld
push
inc
call
add
add
mov
cld
xor
in
xor
addl
mov
mov
xor
mov
fadd
add
shr
add
push
incl
mov
cld
push
ret
inc
mov
call
incl
or
push
mov
add
add
jne
xor
add
mov
mov
mov
add
add
mov
add
adc
fadds
mov
add
xor
incl
enter
mov
or
incb
call
inc
mov
push
cmp
pushf
or
inc
cld
incl
push
jge
adc
mov
adc
dec
ret
mov
rorl
call
cmp
add
cmp
enter
pop
incl
call
loope
sub
xor
xor
add
cmp
mov
clc
add
mov
ret
inc
test
mov
mov
je
mov
mov
xor
into
or
movl
clc
mov
pushf
int
sub
inc
inc
cmp
setl
test
clc
dec
inc
cmp
int3
clc
test
lea
mov
lock
add
inc
shr
test
jmp
add
push
xor
mov
lock
test
pop
addb
inc
add
dec
sub
mov
adc
into
or
inc
mov
jb
mov
enter
cmp
lock
cmp
mov
mov
mov
mov
lret
les
add
mov
or
jmp
dec
mov
test
clc
lret
inc
sarl
pushf
into
scas
movsb
mov
sub
cmp
test
dec
inc
mov
rcr
push
into
xor
adc
add
jmp
movsb
dec
inc
mov
mov
clc
dec
lret
xor
add
cmp
imul
mov
les
cmp
ja
mov
lods
add
cmovge
mov
mov
lock
into
stc
or
dec
mov
les
jge
sub
cmp
mov
mov
clc
dec
lret
mov
clc
ror
lret
scas
mov
les
cmp
mov
add
mov
inc
movsb
cmp
xor
add
xadd
test
mov
xor
add
jmp
mov
jmp
mov
mov
xor
mov
or
dec
push
xor
push
stc
mov
add
or
push
xor
add
add
lret
cmp
dec
stc
mov
push
mov
xor
add
andnps
xor
mov
lock
psubw
dec
dec
jbe
mov
int3
dec
push
mov
in
xor
add
add
dec
rorl
mov
scas
fmull
dec
into
mov
cmp
lret
mov
call
xor
add
in
push
push
mov
adc
jb
add
dec
mov
mov
mov
xor
mov
xlat
push
dec
mov
xor
mov
fmul
mov
mov
call
inc
push
mov
fadds
add
mov
mov
add
add
dec
enter
push
lret
mov
int3
into
rcl
scas
add
in
dec
add
sub
mov
add
inc
lret
mov
or
cmp
inc
xor
xlat
push
sub
lea
pushl
add
mov
mov
mov
in
inc
lret
ror
scas
mov
lret
sub
push
add
dec
adc
and
lret
jmp
sub
add
mov
xor
into
or
clc
icebp
jb
mov
movl
clc
push
push
jne
push
clc
adc
inc
test
inc
orl
into
rorb
incl
or
adc
push
into
inc
mov
jb
mov
cld
mov
into
add
add
clc
incl
mov
mov
mov
enter
xor
lret
pushf
into
enter
inc
jne
xor
add
push
jmp
mov
rolb
rolb
cmp
cmp
add
mov
inc
mov
mov
mov
in
inc
pop
mov
inc
inc
mov
mov
pop
pusha
rolb
clc
pop
inc
cmp
pushf
movsl
decl
incl
decl
lea
pop
add
push
decl
mov
xor
dec
inc
xor
add
orb
inc
add
mov
mov
cld
add
mov
fdivrs
add
inc
add
xor
adcb
add
adc
jne
dec
sbb
inc
adc
inc
rolb
enter
jne
jns
add
mov
clc
inc
inc
cmp
sarb
inc
inc
mov
sub
mov
add
mov
sub
mov
add
clc
incl
cmp
pushf
test
ljmp
loopne
test
lcall
test
incl
cmp
pushf
push
call
clc
add
mov
into
mov
fadds
jmp
add
push
cld
sub
lret
add
add
push
jne
incl
rorb
mov
rorl
scas
jmp
push
or
sub
mov
clc
pushf
lret
mov
call
mov
test
push
pushf
xor
add
lsl
mov
mov
xor
add
mov
or
jmp
dec
int3
mov
sarl
pushf
into
scas
lods
mov
sub
cmp
test
dec
inc
mov
shr
push
into
xor
adc
add
jmp
lods
dec
inc
mov
mov
clc
dec
lret
xor
add
cmp
imul
mov
hlt
mov
sub
xor
mov
movsb
add
cmovge
mov
mov
call
or
dec
mov
hlt
add
sub
cmp
mov
mov
clc
dec
lret
mov
clc
ror
lret
scas
mov
hlt
scas
jge
sub
cmp
mov
add
rorb
xor
add
lret
clc
mov
xor
add
jmp
mov
jmp
mov
mov
xor
mov
or
dec
push
xor
push
stc
mov
add
or
push
xor
add
add
lret
cmp
dec
stc
mov
push
mov
xor
add
xor
psubw
dec
dec
jbe
mov
mov
push
mov
in
xor
add
add
dec
rorl
mov
scas
fmull
dec
into
mov
cmp
lret
mov
lock
add
pmulhuw
push
push
mov
adc
jb
add
dec
mov
mov
mov
xor
mov
xlat
push
dec
mov
xor
mov
loopne
mov
mov
call
jne
mov
cld
add
mov
add
lock
add
xor
inc
mov
decl
mov
lock
call
pcmpeqw
test
xor
lock
xor
add
punpckhdq
push
jge
xor
pop
ret
jb
add
lea
push
dec
jne
mov
into
push
scas
jne
cmp
pop
rorl
lret
js
inc
adc
jb
add
inc
mov
fadd
lret
mov
int
sub
add
mov
mov
hlt
mov
mov
mov
psllw
decl
cld
movb
int3
push
add
lea
push
leave
incl
push
inc
in
mov
inc
add
cld
mov
add
xor
cmp
jne
mov
or
inc
not
adc
inc
int3
mov
fadds
add
add
add
push
sbb
mov
push
push
in
jne
cmp
mov
cld
inc
mov
cld
mov
sub
clc
push
lock
jne
movb
cld
or
mov
add
leave
push
push
cmp
jne
mov
mov
in
push
inc
mov
loope
ret
cmp
or
inc
xlat
in
into
inc
push
adc
incl
fadd
ret
call
xabort
inc
call
mov
ljmp
rclb
push
inc
mov
inc
add
mov
sbb
jne
push
push
jne
lods
push
push
inc
dec
mov
cld
sarb
decl
add
movb
push
fcoml
push
cmp
lret
push
mov
inc
loopne
mov
pop
mov
add
push
pop
inc
out
add
loop
lea
mov
sub
iret
leave
inc
pushl
movb
test
dec
iret
and
loope
push
jmp
inc
pop
in
sbb
add
pop
jmp
add
push
mov
add
jne
add
jnp
rorl
add
testl
add
enter
or
icebp
in
add
add
push
cmp
push
jmp
mov
add
inc
roll
add
mov
sub
stos
mov
cli
add
add
leave
aas
add
pop
mov
lock
and
add
jecxz
add
pop
xchg
pop
add
xor
push
jge
roll
addb
add
jae
int
enter
add
jne
mov
decb
add
push
push
cmp
mov
jb
mov
push
xor
jge
sub
fdivl
jnp
lods
into
jge
stos
into
mov
mov
call
shll
loope
cmp
mov
jne
je
mov
rclb
add
mov
call
fadd
jne
pop
inc
pop
cli
push
lsl
mov
jb
add
push
insl
sub
push
add
rcll
dec
mov
int3
jne
pop
sub
pop
pop
jl
add
xor
mov
jmp
mov
jne
mov
call
icebp
add
or
mov
or
add
cld
jge
push
pop
and
addb
mov
in
sar
jmp
add
enter
repz
sbbl
in
in
mov
add
mov
mov
aam
dec
push
pop
fdivrs
rorl
mov
mov
or
xlat
add
pop
into
shl
dec
add
mov
orl
rcr
dec
leave
stc
or
mov
mov
int3
into
lds
add
faddl
loopne
inc
inc
mov
out
push
pop
add
add
cmp
loopne
push
add
add
add
int3
jne
mov
add
mov
int3
inc
gs
add
add
sub
insl
add
in
jge
add
addl
jge
roll
pop
in
dec
add
in
rorl
sub
cmp
lea
testl
sub
add
mov
sub
mov
cmp
std
icebp
jmp
add
out
sub
add
mov
and
jne
sub
sbb
xor
cld
inc
jge
mov
leave
enter
jmp
sbbl
movsl
jmp
adc
jb
ret
jb
call
jne
cmp
call
roll
enter
shll
push
pop
pushl
int3
inc
mov
add
test
je
or
mov
enter
add
rcr
dec
add
add
cmp
ja
mov
sub
jae
mov
dec
or
push
jge
bswap
lock
add
jmp
call
pop
rcr
add
push
sub
add
insb
jge
sub
and
cmp
pop
fstps
pop
add
rolb
sti
and
ret
add
or
mov
clc
mov
jae
mov
loopne
loopne
lods
add
mov
dec
push
jb
add
call
mov
add
lea
inc
dec
sub
andl
and
roll
add
add
clc
pushf
ret
inc
mov
and
mov
add
pushf
rol
loopne
test
clc
and
jae
mov
test
clc
jmp
lahf
add
ret
xchg
ljmp
push
mov
add
addl
insb
mov
push
mov
mov
mov
jne
mov
mov
mov
mov
mov
push
xchg
inc
add
cmp
or
pushf
sbb
cmp
mov
push
add
push
push
add
add
mov
sbb
mov
add
add
push
add
push
in
xor
ret
mov
clc
add
cli
or
test
cmp
rolb
mov
in
pop
push
push
cwtl
xor
addl
inc
mov
nop
movl
call
add
lea
mov
test
jne
lcall
stos
push
add
push
incl
mov
cwtl
pop
add
mov
xor
jne
call
dec
inc
mov
add
mov
mov
mov
sbb
add
mov
cwtl
incl
mov
pushf
add
push
sub
xor
leave
push
sbb
add
mov
or
call
add
add
mov
mov
xchg
inc
inc
mov
mov
sbb
add
mov
and
mov
mov
in
add
inc
inc
xor
inc
dec
add
jb
mov
or
addl
roll
push
incl
mov
incl
mov
inc
mov
mov
mov
clc
jge
ret
mov
mov
mov
clc
push
inc
mov
jge
orl
mov
roll
push
ret
mov
cwtl
add
movl
decl
sarb
shlb
cld
adcl
add
add
sbb
inc
dec
add
dec
mov
mov
call
mov
mov
cmp
inc
jmp
push
mov
mov
ret
inc
push
mov
add
add
inc
add
add
inc
ljmp
lea
mov
mov
call
mov
sbb
out
mov
fcoms
inc
jnp
mov
fmuls
pusha
inc
int
xor
pushf
cld
jne
mov
aam
lret
or
add
push
add
add
aam
adc
mov
mov
addl
mov
sbb
subb
hlt
xor
cmp
movsb
cmp
jbe
lea
aaa
lock
mov
lock
mov
sub
add
cld
xchg
mov
add
in
inc
in
mov
xchg
add
xor
cwtl
push
inc
add
call
inc
lea
mov
inc
pop
add
dec
mov
sbb
sbbb
lea
or
mov
pop
mov
sbb
adcb
add
decl
mov
cmp
rorb
sbb
dec
or
decl
add
mov
push
mov
add
jb
mov
mov
je
push
insb
cmp
ds
cmp
or
xor
add
add
data16
jmp
mov
add
add
inc
test
mov
add
push
test
mov
data16
add
incw
inc
test
test
incl
inc
test
incl
fadd
inc
data16
test
sub
inc
test
inc
jmp
rolb
test
sar
inc
inc
out
inc
test
jae
add
inc
test
incl
rol
inc
data16
inc
jmp
incl
fistpll
inc
pushf
call
test
incl
js
mov
mov
hlt
mov
mov
decb
lea
sbb
mov
in
loope
add
je
pushl
mov
sbb
orl
test
hlt
hlt
mov
add
neg
mov
add
clc
in
idiv
inc
in
in
mov
sub
mov
sub
in
lock
icebp
in
mov
add
in
mov
add
out
movb
cld
call
xchg
ljmp
inc
int
add
xor
lea
xor
push
fnstcw
mov
movl
clc
inc
inc
in
jmp
add
mov
add
add
xor
lea
sbb
mov
jl
add
sbb
mov
push
add
or
aam
mov
js
inc
pop
jb
xor
jmp
mov
inc
sbb
lea
fadds
sbb
pushl
xor
pushl
pop
ret
push
xor
inc
mov
jb
decl
ja
push
inc
jnp
push
adc
decl
mov
rolb
dec
lea
incl
decl
inc
push
cmp
pushf
jae
or
clc
in
inc
jae
add
xor
cmp
jmp
mov
add
test
decl
mov
mov
inc
push
pop
rorb
fbstp
pop
lea
xor
inc
xor
pop
dec
mov
mov
mov
incw
lea
mov
inc
inc
mov
inc
xor
inc
push
enter
les
inc
add
add
test
dec
ljmp
inc
js
test
add
add
cmp
jne
mov
in
adc
inc
xor
mov
mov
add
adcl
push
pop
cwtl
mov
jl
decl
decl
orb
test
mov
sbb
incw
push
pop
decl
loopne
movb
lea
push
mov
mov
xor
decl
shlb
dec
jmp
dec
xchg
sar
aam
inc
aad
lea
aas
inc
xor
inc
incl
lea
mov
add
incl
test
cld
jge
add
add
push
mov
push
dec
inc
add
mov
orb
add
xor
inc
mov
stos
adcl
call
cmp
or
jmp
push
sub
adc
inc
push
xor
inc
push
mov
lea
mov
mov
ror
mov
xchg
push
jmp
dec
push
lea
xchg
mov
sbb
dec
mov
mov
mov
decl
mov
xor
add
push
data16
inc
jge
jbe
test
inc
ret
add
add
orb
test
inc
mov
jne
decl
decl
decl
ljmp
push
mov
add
mov
lea
pop
mov
adc
pop
mov
pop
add
mov
sub
lea
nop
ret
xchg
mov
data16
mov
add
test
data16
data16
mov
aam
mov
mov
movb
xchg
add
test
add
xor
cmovne
xor
cmp
data16
mov
or
inc
add
add
adc
jne
pushl
call
add
mov
mov
mov
call
adcb
add
adc
mov
cmp
jb
mov
jl
push
sti
imul
in
ret
inc
pop
or
sbb
push
into
in
enter
push
lock
or
sti
add
cmp
mov
cld
add
mov
test
je
mov
jns
js
clc
cmovne
or
sti
cmpl
add
adc
ltr
mov
cmovne
addl
mov
mov
cmp
dec
sub
add
js
jmp
lock
push
add
mov
dec
popa
push
decl
mov
add
push
sub
andb
add
paddsb
pand
add
je
lea
adc
dec
inc
test
je
mov
cmpl
and
add
jnp
pop
mov
sbb
push
lea
mov
cld
or
push
decl
add
pop
jge
xor
mov
jbe
cmp
adc
push
cmp
mov
push
sbb
mov
hlt
or
incb
jge
cmp
jbe
mov
mov
add
decb
inc
jge
test
je
mov
cmp
lock
jb
jmp
xor
pop
xor
ret
mov
add
sbbl
cmp
setl
dec
or
ret
cld
jle
pop
mov
xor
push
jbe
inc
push
add
push
dec
mov
and
jo
mov
mov
add
or
mov
mov
cld
add
add
cmp
cld
or
test
jae
minps
jmp
mov
fbstp
add
add
add
clc
xor
add
mov
jl
clc
add
mov
jb
mov
adc
inc
cmp
cmp
xchg
adc
fmulp
fisttps
sbb
jne
mov
lock
adc
faddp
pop
test
clc
test
mov
cld
inc
dec
mov
imul
adc
mov
dec
inc
mov
cld
add
fdivrl
lret
dec
iret
mov
cmp
xor
add
inc
cld
lea
xor
add
inc
xsaves
add
mov
add
sbb
filds
lret
adc
dec
mov
adc
inc
pop
or
xor
fiaddl
adc
mov
xorl
add
cmp
or
mov
cld
add
cmp
hlt
add
cmp
mov
loopne
movb
mov
mov
adc
addb
mov
adc
dec
scas
xor
push
in
dec
cld
mov
cld
into
inc
iret
jne
mov
mov
add
add
cmp
or
xor
hlt
dec
pop
mov
mov
mov
aas
call
adc
jne
mov
fadds
add
mov
cld
iret
fiadds
cmp
jne
mov
mov
fadds
mov
cld
or
inc
mov
cld
jg
inc
xor
add
cwtl
movl
add
mov
xor
mov
movl
inc
fmuls
cmpxchg8b
lret
jmp
inc
mov
in
add
mov
fmuls
add
xor
add
cmp
jp
decl
mov
adc
jne
mov
clc
rorb
jne
incl
or
add
add
add
inc
cmp
adc
pop
add
jb
add
inc
add
add
add
mov
xor
mov
pushf
mov
iret
cld
enter
add
mov
in
cltd
inc
test
push
mov
xor
je
mov
cld
std
dec
pushl
dec
add
roll
cmp
mov
cld
dec
or
mov
cld
add
mov
push
pop
jne
decl
push
sbb
inc
in
add
or
dec
test
cmp
or
inc
push
mov
push
mov
or
jb
add
mov
jne
mov
call
add
or
jo
push
dec
jne
movl
clc
dec
inc
mov
xor
lea
add
jb
add
inc
xchg
mov
in
movb
add
incl
inc
jne
mov
or
ja
mov
cld
stc
jne
cmp
bswap
iret
add
mov
jne
mov
clc
jne
push
inc
inc
xor
add
add
jne
xor
repnz
pushf
test
pop
clc
or
mov
or
inc
out
invd
add
jne
mov
bnd
add
and
add
mov
in
jne
add
or
inc
mov
mov
in
jne
mov
or
icebp
repnz
push
mov
js
xchg
in
psllw
repnz
mov
or
inc
mov
fsubl
decl
call
xor
jge
xor
mov
xor
jne
xor
add
mov
cld
pop
lock
hlt
add
mov
jnp
add
shr
cmp
ret
mov
call
in
inc
add
mov
mov
sub
push
out
pop
xor
xor
mov
loopne
jge
xor
jb
add
push
mov
mov
xor
xor
mov
mov
cmp
xor
jne
mov
add
sbbl
mov
hlt
mov
mov
jge,pt
mov
mov
in
jae
add
hlt
lahf
jne
mov
repnz
cmp
incl
pop
mov
pop
rolb
inc
add
add
inc
pop
test
str
mov
andl
inc
mov
xor
mov
inc
add
mov
shufps
cld
mov
mov
xor
mov
test
cmovne
rcl
test
xor
add
mov
clc
inc
rorl
mov
or
mov
orl
mov
mov
fadds
orl
add
incw
mov
inc
sbb
dec
add
test
lsl
and
push
mov
sbb
rorb
add
inc
add
push
shll
add
data16
mov
inc
add
test
add
lea
mov
add
cmp
inc
xor
or
roll
test
add
cmp
xor
loopne
dec
inc
jnp
sub
sub
cmp
loopne
xchg
add
addl
add
jmp
mov
lea
incl
test
push
notl
xor
add
push
mov
incl
push
push
cmpsl
mov
in
inc
cld
mov
mov
or
push
shr
lret
add
xchg
mov
add
inc
mov
call
or
mov
faddl
push
dec
orl
mov
adc
dec
mov
or
inc
mov
push
push
into
lret
rolb
cmp
jns
mov
lret
mov
mov
faddl
mov
push
sbb
dec
sarl
shll
mov
fmuls
call
mov
sbb
add
cmp
push
mov
roll
mov
or
popl
push
add
add
and
call
add
mov
sbb
dec
add
add
xorl
dec
movb
or
inc
add
adcl
add
mov
sbb
loopne
shlb
lea
inc
jb
add
push
inc
mov
sbb
add
push
or
or
add
inc
dec
cmpl
jbe
mov
cld
fstl
out
into
lret
mov
ljmp
daa
out
xchg
add
push
inc
push
fdivl
out
add
inc
push
in
inc
push
ret
sbb
rorb
dec
inc
ljmp
mov
mov
fmuls
add
lea
les
dec
add
add
jmp
inc
dec
mov
add
rolb
je
mov
mov
inc
mov
lret
or
lea
jne
mov
sbb
add
adc
adc
push
jge
push
nop
mov
jb
sub
inc
or
push
fdivl
call
out
inc
test
add
add
jne
mov
call
and
fs
test
js
leave
add
or
push
repnz
incl
add
and
push
call
mov
fmuls
lods
mov
push
mov
sbb
decl
push
fdivs
mov
in
jno
push
mov
mov
and
je
mov
sbb
pop
add
add
adc
mov
mov
cmp
pushf
cmp
in
pop
add
add
push
adc
mov
add
push
push
inc
and
and
call
test
ret
pushf
add
decl
jne
call
loopne
inc
test
inc
inc
mov
and
iret
subl
pushl
orl
cltd
mov
and
jne
call
sbb
push
test
add
add
push
push
cmp
mov
fcomps
add
call
jb
mov
or
ficomps
enter
mov
xor
pop
je
mov
push
inc
in
in
or
movsl
lock
test
incl
cmp
pushf
or
add
jne
cmp
data16
add
xchg
add
add
test
inc
or
sub
ret
mov
mov
mov
mov
push
sbb
push
add
jge
add
mov
inc
ret
xor
pop
clc
pop
add
mov
lock
xor
inc
rcpps
xor
lea
je
mov
mov
cmp
or
or
pop
lsl
jge
mov
inc
xor
mov
pop
xor
mov
addl
inc
clc
cmp
pushf
mov
hlt
in
test
cmp
mov
mov
ja
mov
mov
jmp
sarb
inc
pop
mov
mov
or
inc
fisttps
add
jge
mov
adc
fbstp
mov
or
mov
or
inc
cmp
add
data16
mov
inc
xor
add
data16
inc
cmp
jb
mov
mov
mov
hlt
inc
pop
add
clc
lock
add
data16
pop
add
data16
sub
mov
loopne
jge
pop
xor
data16
jne
mov
data16
mov
data16
mov
data16
add
mov
jnp
pop
or
add
jge
hsubpd
data16
data16
xor
add
cmp
mov
data16
pop
mov
add
test
mov
mov
sti
jge
mov
in
add
or
call
sti
mov
data16
filds
or
mov
hlt
test
jne
xor
add
data16
scas
mov
push
fbstp
mov
mov
sti
in
push
or
add
mov
push
push
enter
mov
sti
xor
add
mov
mov
fmull
jge
data16
data16
pop
xor
data16
icebp
pop
add
rolb
jge
mov
fmuls
ret
jb
add
pop
or
cmp
data16
mov
xor
dec
jge
mov
add
testl
pavgb
jmp
int
mov
add
jne
jmp
mov
roll
dec
cli
or
jb
add
in
add
or
add
xor
mov
add
inc
lret
add
mov
add
dec
icebp
pop
sbb
call
lea
dec
in
add
leave
jne
xor
jmp
xor
inc
cld
pop
test
xor
add
incl
clc
mov
push
xor
popa
add
pushaw
into
int
mov
into
data16
add
add
test
clc
inc
cmp
pushf
data16
into
addr16
add
mov
mov
lea
push
icebp
mov
test
inc
jne
mov
xor
mov
mov
pop
fs
add
sub
mov
inc
xor
dec
pop
add
cmp
in
mov
inc
pop
add
clc
test
clc
into
rolb
pop
or
add
inc
inc
add
mov
add
pop
lret
mov
mov
mov
je
mov
mov
pop
cmp
push
mov
xor
mov
xor
inc
xor
dec
cmp
add
sub
mov
xor
lea
push
jne
addl
clc
sbbb
sti
shlb
xor
pop
cmp
push
or
rorl
or
incl
mov
ret
xor
add
push
test
cmp
pushf
inc
call
or
data16
sub
mov
mov
cmpl
dec
push
add
cmp
jne
xor
pop
mov
cld
addr16
add
push
lret
in
add
jne
in
add
xlat
cmp
in
add
push
add
inc
inc
add
lock
test
ds
pushf
enter
add
inc
je
xor
inc
pop
add
leave
add
in
add
pop
push
push
addl
push
scas
cmp
add
mov
adc
sub
mov
lock
icebp
jmp
mov
or
mov
add
shll
xbegin
clc
mov
add
dec
clc
mov
add
inc
xor
inc
pop
pop
dec
ret
add
inc
inc
jmp
movl
roll
orl
xorl
cmp
xor
hlt
mov
mov
mov
pop
push
push
mov
mov
mov
call
mov
clc
rol
dec
add
roll
add
add
mov
mov
orl
mov
pop
jbe
mov
mov
mov
mov
mov
add
mov
add
push
or
inc
mov
clc
lcall
mov
push
dec
sub
mov
or
pop
pushf
shll
inc
add
inc
daa
xor
clc
mov
clc
or
add
sub
inc
xor
pop
dec
mov
jb
add
inc
dec
jmp
mov
adc
push
sub
icebp
dec
or
pop
or
add
add
roll
mov
add
add
add
clc
test
cmp
xor
inc
dec
test
jmp
jmp
mov
mov
mov
mov
mov
hlt
in
lcall
push
or
push
mov
inc
cmp
mov
or
add
mov
inc
cld
jmp
mov
add
clc
inc
inc
jne
jmp
mov
clc
lcall
push
adc
cld
dec
arpl
decl
mov
jmp
or
dec
decl
call
in
dec
in
xor
add
cmp
cmp
lock
test
mov
pop
lahf
rol
pop
add
mov
mov
clc
repnz
jmp
push
in
mov
addl
jge
add
push
movswl
push
cmpsl
xor
add
mov
mov
call
push
fdivrs
adc
push
roll
add
dec
inc
orl
call
hlt
inc
pushl
call
cld
fistpl
lea
call
aaa
inc
mov
mov
jne
pushl
mov
or
mov
xor
iret
je
mov
or
mov
mov
inc
add
xor
data16
xor
pop
js
inc
cld
add
sbb
icebp
lods
mov
mov
push
pop
xorl
push
lret
test
add
add
add
add
mov
and
leave
inc
or
mov
clc
clc
roll
pushl
xor
dec
mov
hlt
shlb
mov
cmpl
mov
jae
lea
hlt
cmp
xor
xadd
mov
or
or
data16
jne
jnp
add
or
pop
inc
cmovne
lea
add
lea
cli
mov
sarb
add
add
inc
sub
cmp
pop
add
inc
dec
lea
dec
add
jmp
incl
mov
lea
push
je
inc
mov
fmuls
cli
ja
call
xchg
pop
add
xor
scas
dec
incl
shlb
add
add
dec
lock
xchg
mov
add
in
mov
and
dec
clc
mov
add
mov
xor
add
add
mov
jne
call
sti
xchg
add
pop
add
inc
mov
jbe
jmp
mov
mov
ja
sbb
lea
jae
mov
mov
mov
lea
mov
movl
mov
cld
add
mov
mov
push
mov
mov
inc
mov
hlt
add
add
add
std
add
dec
inc
jne
mov
call
mov
jb
pop
je
js
lock
mov
mov
sbb
clc
lea
mov
adc
enter
dec
decl
mov
xor
mov
xchg
fisttpl
clc
mov
add
push
push
mov
loopne
mov
pop
add
cmp
sbb
mov
or
cmp
mov
cld
push
ret
add
add
sub
or
add
push
fdivr
push
xchg
out
add
jmp
sub
std
jmp
test
cld
out
cmp
inc
mov
add
pop
aam
pop
in
inc
in
pop
push
cmp
clc
pushf
xchg
mov
leave
inc
add
push
in
dec
inc
test
mov
add
add
add
dec
decl
push
mov
clc
or
mov
clc
add
push
add
push
jmp
xor
inc
or
add
pop
andl
mov
mov
lret
cmp
jne
xor
data16
add
or
mov
mov
mov
or
rorb
icebp
icebp
inc
orb
into
or
stc
shlb
movb
xchg
add
mov
test
jne
xor
sub
jmp
mov
mov
sub
mov
mov
or
leave
addb
add
dec
add
dec
xor
cmp
adc
push
pushf
xor
sub
xor
push
test
pop
lret
push
enter
mov
or
xor
mov
sub
clc
mov
pop
or
dec
inc
xor
or
inc
ret
testl
xor
test
inc
mov
hlt
hlt
add
dec
inc
xor
pop
xlat
dec
mov
mov
cmp
mov
rolb
mov
or
dec
stc
mov
dec
or
jb
add
enter
lret
mov
mov
lret
enter
dec
xor
add
xor
jmp
xor
xor
rorl
mov
mov
xor
lea
add
xor
mov
call
stos
add
add
inc
or
push
ret
in
mov
add
xbegin
clc
pushf
inc
mov
mov
xchg
in
test
clc
ljmp
push
pop
push
push
xor
add
lret
pushf
jmp
mov
clc
sbb
xor
or
add
mov
dec
dec
xor
add
add
lsl
shll
mov
sub
xor
mov
clc
or
call
lret
mov
mov
mov
lea
mov
xor
mov
mov
mov
leave
rcll
cmp
jbe
mov
in
cmp
pushf
inc
mov
clc
clc
inc
fstpt
popa
pushf
dec
push
mov
add
call
or
pop
or
dec
mov
push
cmovne
lret
test
fidivl
xlat
add
and
mov
lea
sti
leave
incl
mov
in
mov
clc
into
dec
xor
lea
add
inc
mov
hlt
inc
lea
int
sub
add
mov
xor
add
cmp
in
dec
lea
or
jb
add
inc
pop
mov
call
mov
sbb
dec
mov
mov
jo
push
mov
mov
add
xor
mov
inc
lret
xor
add
shrl
inc
ljmp
dec
mov
xor
xor
cmp
popf
iret
fs
adc
mov
cld
dec
lret
add
movsb
test
mov
inc
or
mov
fmul
inc
dec
cmp
test
mov
sbb
inc
xchg
mov
mov
movl
leave
sbb
push
add
add
mov
mov
xor
add
mov
mov
xor
add
inc
iret
mov
mov
shlb
orl
jmp
sbb
mov
xlat
dec
lret
rcl
enter
mov
add
inc
lahf
mov
xor
add
mov
adc
inc
test
add
add
fmull
adc
push
add
mov
clc
clc
cmp
cmp
adc
test
clc
inc
inc
mov
mov
mov
mov
xor
lea
add
mov
ret
inc
inc
xor
adc
inc
inc
add
incl
mov
decl
inc
push
xor
je
mov
cmp
dec
ret
mov
and
mov
or
inc
test
je
mov
ret
mov
or
movl
decl
mov
hlt
ret
inc
inc
mov
sub
mov
loopne
inc
mov
cmp
pushf
or
dec
adc
test
mov
ds
pushf
mov
mov
loopne
rorl
roll
push
call
hlt
iret
inc
mov
xchg
xor
cmp
add
or
movl
inc
mov
hlt
test
mov
mov
call
call
loopne
test
mov
xor
xor
inc
mov
push
idiv
add
clc
dec
test
xor
add
xor
lea
mov
inc
pushl
inc
lea
add
lock
dec
mov
clc
add
mov
mov
mov
loopne
enter
inc
lods
mov
or
dec
incl
inc
or
jmp
add
lods
shr
cmc
sar
cmp
pushf
add
xor
mov
test
xor
cmp
pushf
lret
ror
dec
add
mov
add
dec
dec
mov
or
iret
ror
dec
shr
add
add
cmp
mov
xor
mov
add
iret
dec
lock
cmovge
mov
loopne
testl
xor
mov
ret
dec
enter
inc
mov
or
or
inc
dec
push
mov
decl
add
mov
xor
mov
mov
add
cmp
add
mov
xor
mov
add
xor
mov
xor
mov
add
rcrl
mov
or
dec
shll
mov
mov
add
add
enter
add
mov
xor
mov
or
mov
or
add
mov
mov
xor
mov
mov
in
dec
or
dec
or
mov
clc
push
or
mov
or
add
dec
or
push
or
xadd
dec
add
add
dec
shll
mov
iret
or
xor
xor
mov
push
or
dec
mov
rorl
mov
xor
add
mov
cmp
add
mov
in
add
dec
lret
xor
mov
inc
mov
xor
mov
in
adc
inc
iret
mov
or
or
decl
cmp
jne
mov
xor
mov
iret
ret
mov
lea
xchg
xor
mov
call
orl
test
jne
mov
movsb
iret
inc
mov
fidivs
cmp
lods
xor
add
cmp
je
push
pushl
inc
or
fadd
call
lock
mov
xor
mov
or
mov
lock
xor
add
ud0
mov
mov
xor
add
cmp
cmovge
decl
inc
add
jne
lea
call
pop
inc
ret
loopne
movl
xor
add
sbb
mov
dec
mov
and
push
hlt
pop
rclb
adc
jne
pushl
adc
inc
mov
and
mov
or
push
jmp
inc
push
mov
loopne
mov
and
mov
and
xor
mov
movsb
lret
push
adc
cmp
jne
mov
and
mov
lea
or
mov
sbb
ret
cmp
add
xor
lea
add
rcrl
jne
mov
mov
add
mov
pop
mov
or
push
sbb
inc
in
addl
inc
pushf
adc
inc
add
dec
or
push
or
mov
sbb
cmpb
xlat
inc
push
sbb
push
add
inc
adc
dec
fcoms
push
mov
adc
add
add
push
jmp
inc
rorb
inc
inc
adc
dec
adc
and
inc
mov
sbb
push
and
push
add
cmp
jne
push
and
mov
and
xor
je
mov
and
mov
xor
cmovne
and
mov
and
mov
and
mov
mov
test
cli
mov
mov
mov
jne
call
mov
push
sbb
mov
incl
inc
dec
or
inc
push
in
ret
inc
mov
jmp
cmp
mov
and
jmp
lea
mov
inc
call
and
inc
and
stc
and
scas
movb
jmp
or
clc
jne
pop
push
mov
sub
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
jmp
imul
movsb
fs
sbb
fidivl
loopne
js
js
jl
js
cmp
fnstenv
jbe
or
cmp
lret
sbb
mov
or
rol
or
dec
add
push
out
outsl
add
sahf
jb
dec
lods
pop
sub
mov
mov
icebp
rcrb
dec
rclb
ja
fdivrl
sub
sbb
test
jecxz
xor
mov
in
test
iret
push
sub
je
sbb
and
add
fisttpll
cmp
push
inc
ffree
add
pop
rcll
jns
mov
daa
add
fstpt
dec
loop
xchg
sbb
and
stos
fistps
bound
jle
sub
adc
lock
les
xchg
fimull
cwtl
dec
lods
lods
mov
adc
inc
fucomp
fstl
push
cmp
js
int
mov
dec
inc
cmc
std
shll
push
fldl2t
scas
pop
xor
jle
imul
mov
ja
jl
aaa
sbb
dec
sub
sub
test
into
add
lret
sbb
mov
or
lock
inc
inc
scas
mov
add
sarl
add
iret
dec
xor
jae
stos
xchg
iret
testl
xor
decl
push
or
loop
andb
jmp
ja
push
cmp
xchg
rcrl
leave
mov
loopne
jecxz
or
mov
mov
sbb
aas
fwait
cmc
add
test
pop
shl
les
mov
dec
addb
jno
or
jmp
sahf
je
xchg
add
enter
pop
pop
mov
jmp
sub
inc
xlat
mov
pop
pop
sbb
mulb
insl
fsubl
enter
mov
jno
push
mov
and
out
shlb
pop
dec
sbb
cli
fildl
les
lahf
ret
mov
xor
stc
aas
fadds
cmp
jecxz
fcomip
push
jb
dec
sub
rolb
das
xor
cmpl
clc
repnz
mov
sub
xchg
insb
stc
xor
xorb
loop
xchg
mov
dec
fcomi
mov
add
popf
les
pop
fildl
call
lret
pop
imul
sbb
loopne
adc
lcall
mov
push
leave
mov
int3
pop
inc
add
movsb
int3
aad
int
lret
add
or
mov
lea
iret
mov
sahf
fcomip
fisubs
and
mov
enter
inc
out
and
or
add
mov
xchg
lods
push
push
xchg
shlb
cmp
shlb
push
cmc
mov
dec
push
pop
scas
movsl
out
aad
es
mov
adc
xchg
jb
inc
sub
jmp
sub
mov
jl
inc
insl
sbb
mov
aad
loope
or
popa
or
gs
xor
test
test
cmc
fstpt
dec
inc
sub
adc
inc
xlat
into
push
aad
shl
xor
loope
rorb
outsb
jecxz
and
into
mov
dec
push
mov
into
mov
or
add
mov
dec
fdivs
push
sub
cmp
icebp
sarb
xor
dec
xor
aas
addb
adc
and
push
jo
and
push
push
cmc
dec
jnp
mov
pop
add
xor
pop
xchg
jl
in
mov
or
xchg
or
cmpb
into
jl
pop
leave
jg
gs
sti
or
outsl
frstor
mov
cwtl
les
jle
lahf
xchg
sbb
lahf
movsl
xor
add
or
cmc
js
push
push
jb
fucomip
adc
imul
lods
roll
inc
lret
cmp
cmp
scas
mov
ret
xor
imul
xchg
enter
int3
inc
sbb
inc
test
jl
mov
sub
dec
fidivl
rcl
cld
shrb
sbb
jp
stos
push
std
sub
or
jo
lea
mov
lahf
and
inc
mov
xchg
pop
jmp
mov
lea
push
mov
sbb
or
jge
mov
out
test
mov
shr
aaa
mov
dec
push
sti
fwait
cs
push
outsb
or
or
dec
cld
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
jmp
jbe
nop
inc
mov
aad
fstl
jl
js
jl
js
stos
imul
lods
push
or
movsl
mov
mov
mov
rcl
and
sub
sbb
inc
mov
and
incl
ljmp
outsb
test
sbb
mov
mov
mov
cmp
jge
cmp
inc
enter
cli
inc
dec
sbb
pop
jecxz
outsl
pop
mov
cwtl
lahf
mov
xchg
xchg
push
pop
adc
adc
ret
sbb
jbe
xor
mov
jle
inc
movsb
and
inc
or
push
scas
dec
inc
nop
or
aam
out
push
sbb
call
jg
pusha
lods
adc
out
movsl
in
ja
rcl
pop
cmp
mov
inc
push
xor
and
push
jl
hlt
lret
sbb
sti
call
add
dec
lcall
pop
xchg
or
movb
loop
mov
call
pop
popa
cmp
movsl
jne
fcoms
ja
or
lret
loope
inc
mov
inc
push
cltd
cmpsl
cmovg
jb
cmp
jns
adc
ss
xor
enter
fisttpll
outsb
mov
nop
xchg
mov
or
sahf
sub
push
push
dec
lret
adc
jp
repnz
arpl
adcb
call
sbb
ljmp
xchg
fdivrs
andb
jno
push
xchg
add
aaa
mov
out
call
push
mov
push
test
mov
das
dec
test
aad
add
inc
cwtl
adc
insb
jg
adcl
mov
jmp
cmpsl
lcall
sbb
andb
cmc
sti
cmpsl
jno
mov
aaa
sbb
dec
outsl
ljmp
mov
or
or
push
repnz
and
pusha
imul
lahf
jae
outsb
cmpsl
dec
sub
xchg
lcall
push
lea
dec
or
sub
dec
cmpsb
jo
in
adc
sub
popf
cmp
add
stos
sub
pop
clc
jecxz
push
pop
idivb
je
into
mov
adc
xchg
rorl
dec
sbb
nop
pop
movsb
mov
xor
add
pop
mov
imul
inc
sti
push
mov
arpl
cmpb
shll
or
push
or
cmp
and
inc
gs
enter
sub
or
xchg
jge
xor
dec
sarl
ljmp
ja
fs
imul
lods
mov
mov
inc
mov
inc
jns
and
lahf
insl
add
lea
imul
dec
int
imul
sti
pop
and
leave
jno
sbb
ja
jnp
cmp
cmc
adc
jo
pop
inc
bound
xor
mov
out
iret
outsl
stos
lcall
pop
aam
push
jo
icebp
or
movsb
fidivs
aaa
or
push
gs
inc
aaa
bound
and
pop
cmp
movsb
sub
dec
push
add
std
or
push
mov
repz
mov
xor
lods
gs
and
lret
ja
sub
xchg
lcall
dec
xor
std
inc
fwait
jae
xchg
sub
mov
mov
mov
rorb
inc
leave
xchg
push
cmpl
movsl
pop
sbb
dec
ret
add
cld
add
push
dec
mov
iret
mov
push
add
notb
roll
cmp
jge
pop
jae
loop
rcrb
in
lods
out
mov
lea
shlb
js
cmp
push
sub
rcrb
add
add
mov
sub
sarb
jmp
and
mov
das
into
loopne
dec
dec
test
lret
nop
dec
ljmp
aas
repz
movsl
clc
pop
test
mov
jle
and
ret
xchg
js
jmp
jne
rorl
xchg
push
cmpl
test
inc
push
fsubl
out
mov
mov
fstps
cwtl
js
mov
pop
iret
dec
lock
sahf
fnstcw
push
push
out
je
pop
aaa
in
cmc
push
es
in
or
fadds
fcoms
sti
push
xor
xor
or
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
and
mov
addl
add
mov
add
mov
xorl
push
subl
push
test
je
jmp
mov
xchg
add
lahf
sub
xchg
js
jl
js
adc
pop
push
outsl
pop
mov
nop
cs
inc
fstps
sbb
subl
push
pop
adc
mov
nop
into
jg
adc
dec
jno
fucomip
mov
cmpsb
xor
add
insb
movsl
cmpsb
mov
test
cltd
data16
jmp
add
xchg
loopne
fisubrs
into
inc
xchg
cmpsl
in
inc
ds
stc
rcr
pop
sti
hlt
xor
xchg
test
cli
test
jb
stc
mov
push
adc
lret
les
jae
jp
je
jge
add
cmp
push
inc
push
push
jl
mov
or
fistps
mov
stos
cmp
es
scas
push
push
pop
sbb
dec
in
jne,pt
pop
aam
sbb
push
sub
popa
push
pop
int
jl
mov
push
scas
lods
or
xchg
sub
cwtl
or
xchg
mov
out
mov
cld
sbbb
mov
roll
pop
cmp
xlat
lods
cmpsl
push
add
cmp
mov
jne
outsl
xor
popf
test
movsl
shlb
xchg
xchg
add
outsl
je
mov
test
pop
daa
xchg
in
mov
ficoms
cli
stc
cmp
hlt
mov
cwtl
mov
xchg
mov
and
jbe
cmpsb
push
loopne
sbb
mov
je
jns
mov
push
mov
mov
hlt
push
push
stos
fldenv
pop
jecxz
fwait
and
and
mov
neg
cmp
fistl
push
testl
fcompl
bound
scas
loop
dec
lret
lcall
dec
nop
cmpsl
mull
inc
xchg
movsl
loop
nop
mov
and
div
leave
push
dec
sbb
aaa
xchg
loope
xor
cld
xor
into
dec
mov
lret
push
jp
lods
fwait
sub
in
je
inc
mov
fsubs
pop
xlat
daa
push
or
sbb
lock
popa
xchg
mov
repz
ret
in
xor
outsl
stc
push
aaa
fwait
or
and
fisubl
popa
into
mov
ret
fdivrs
sub
es
jle
sbb
sbb
mov
lods
int
in
xor
fsubrs
or
pop
rorl
call
xchg
in
inc
xor
aas
scas
push
std
popf
pop
out
outsl
push
jg
bound
loop
add
push
push
push
loope
scas
es
insb
jge
add
jge
mov
and
mov
sub
mov
cmpsb
adc
pop
stc
sub
xchg
jmp
das
stos
adc
cli
jmp
xchg
sbb
push
xchg
push
push
sub
cmpsb
mov
sbb
inc
xchg
hlt
sti
add
add
xchg
xchg
dec
outsl
jb
pop
dec
mov
inc
icebp
scas
and
mull
lock
sub
and
in
add
pop
repz
sbb
hlt
pop
mov
pop
and
jo
mov
popa
ss
outsb
cli
clc
stc
dec
int
fistpll
cli
xchg
test
cmp
daa
cmpsb
idivl
and
pusha
cmpsl
sbb
imul
fiaddl
test
push
mov
stos
pop
inc
sbb
mov
sbb
adcb
mov
les
scas
xor
jo
dec
or
sbb
pop
push
push
sbb
popa
lcall
loopne
fcoms
mov
neg
imull
outsl
and
jo
rorl
push
jbe
mov
cmp
inc
daa
das
mov
and
hlt
ljmp
mov
repnz
repz
sub
stc
push
adc
fwait
cltd
xchg
cld
cwtl
cmp
cmp
cld
and
mov
out
adc
mov
mov
mov
ja
into
negb
add
insb
icebp
or
enter
and
aaa
das
adc
jno
lock
sahf
inc
sub
std
cmp
mov
shlb
inc
lea
jle
mov
jb
pop
out
xchg
fwait
mov
aam
insb
sub
mov
lock
xlat
dec
test
and
push
mov
adc
and
cmpsl
out
cmp
jge
das
xor
add
xchg
addl
repz
pop
mov
test
push
std
int3
jmp
jae
push
adc
xor
lock
sbb
popf
movb
add
add
dec
mov
stos
add
cmp
rorl
js
dec
jl
js
iret
mov
test
adc
into
lahf
cld
addr16
cltd
hlt
movsb
pop
jl
nop
sti
ret
or
add
movsb
sub
in
add
jns
insl
das
jb
in
outsl
mov
xchg
ret
dec
nop
movsl
mov
mov
mov
xchg
stos
cmpsl
add
and
xor
in
inc
or
lock
xchg
sarl
sbb
inc
mov
movswl
je
mov
push
mov
in
sub
fadds
jecxz
ret
mov
pushf
adcl
es
mov
dec
or
push
mov
int
sub
push
pop
xchg
sub
jecxz
jl
loopne
imul
mov
rorb
lahf
mov
xor
inc
ds
inc
xor
imul
inc
out
push
xchg
movsb
push
dec
pop
dec
pop
shl
jg
repnz
daa
mov
dec
jno
stos
std
divps
pop
jb
leave
insb
adc
dec
jg
jno
cs
in
jecxz
repz
push
cmp
dec
ret
jle
xchg
mov
mov
dec
sub
cld
out
xchg
inc
stos
mov
xlat
mov
lock
aas
dec
mov
pop
inc
adc
lahf
sbb
jnp
pop
out
addr16
mov
bound
xchg
out
cld
addr16
test
mov
ja
xchg
in
adc
ret
cli
loopne
mov
daa
lcall
adc
icebp
push
xchg
mov
sub
stc
cmpl
inc
es
mov
or
sub
leave
neg
insl
imul
mov
aad
lods
movsb
je
cmp
jp
rcr
xchg
add
jae
les
hlt
mov
jbe
ljmp
cmp
cwtl
mov
mov
in
loopne
inc
pop
repz
aaa
or
pop
fisubrl
pop
cmp
loope
xor
or
out
lret
adcb
sti
xchg
push
ret
lock
push
sub
or
scas
push
cmp
xchg
mov
stos
das
test
jae
bound
btc
inc
inc
ljmp
inc
fisubl
pusha
in
push
sbb
ljmp
jae
aas
and
or
sbb
and
mov
movsl
insb
das
push
xchg
popa
mov
push
fnstenv
test
mov
sub
fcoms
mov
adc
je
jo
aad
mov
stos
inc
xchg
xor
xor
jbe
jne
divl
cmp
bound
mov
data16
mov
jle
mov
cmp
jbe
jmp
mov
pushf
mov
lea
out
mov
lods
outsl
adc
aas
int
loop
pusha
adc
les
sbb
loopne
dec
in
sub
jns
dec
shl
gs
add
adc
aam
addr16
xor
popa
mov
dec
or
or
and
lcall
int
mov
mov
lods
testb
inc
dec
jmp
cltd
mov
enter
sub
clc
mov
cmc
mov
pop
dec
repnz
sub
sarl
push
cmp
lret
inc
mov
fcom
popl
in
outsl
repz
mov
rorb
pop
dec
je
lock
shrl
xchg
inc
sub
jmp
enter
xchg
push
ret
mov
fs
pusha
cmp
cmp
jp
xchg
and
mov
mov
imul
cmpsb
outsl
incl
jle
imul
jns
shrb
adc
cmp
mov
xor
cmp
ljmp
pop
loopne
jmp
movsb
fists
mov
and
pop
push
popf
lcall
jns
popa
or
lahf
ds
adc
mov
pop
sbb
gs
ja
fwait
std
jmp
outsb
push
dec
outsb
xchg
jmp
push
pop
pop
lret
pop
xlat
xor
nop
pop
xlat
in
cmpsl
jo
jno
mov
dec
or
mov
popf
mov
pop
outsl
dec
adc
fsubrp
inc
xchg
pop
aam
testl
aaa
push
popl
jmp
pop
loop
scas
mov
ds
arpl
imul
add
xchg
out
in
push
jns
and
dec
pop
int3
js
or
into
jl
mov
sbb
lods
stos
xchg
in
iret
sbb
or
in
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
xor
imul
decl
mov
add
mov
sbbl
mov
orl
xchg
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
jmp
push
cmp
xchg
ljmp
sub
js
dec
jl
js
bnd
push
inc
inc
nop
flds
add
loop
loope
mov
subb
ret
lea
imul
and
push
adc
pop
mov
mov
lods
or
out
dec
test
inc
daa
mull
or
jnp
hlt
add
mov
sub
notl
push
adc
sub
inc
mov
sub
mov
push
std
fmuls
pushf
imul
xlat
jne
ret
sbb
sahf
xor
movsl
mov
test
or
xor
push
pop
aaa
negb
mov
mov
fdivp
pop
push
adc
imul
and
and
sub
fs
ja
mov
cmc
push
push
pop
pusha
sub
pop
inc
or
loopne
mov
push
loope
shlb
push
lods
cmp
into
bound
in
xor
rcrl
in
scas
mov
ds
std
insl
rclb
iret
jmp
mov
rcl
int
sti
jl
or
lods
ja
imul
sub
xor
mov
outsl
or
xorl
fs
scas
sub
add
push
xor
sbb
dec
xchg
ds
jmp
sbb
and
and
hlt
xor
jnp
jne
xchg
orl
rcr
push
pop
daa
out
or
out
fcomip
sbb
xchg
or
pop
push
dec
push
test
adc
mov
dec
in
cmp
aas
jle
sbb
push
fwait
add
xchg
xor
sub
push
imul
push
popl
std
test
or
cmp
mov
jbe
test
xor
lea
sbb
pop
fiaddl
test
into
and
inc
dec
xchg
dec
mov
dec
adc
stos
xchg
roll
pop
cwtl
loopne
ret
push
cmp
sub
inc
mov
daa
shlb
or
cmc
cmp
clc
sub
xor
aas
scas
ljmp
outsl
es
mov
or
lea
aam
adcb
xchg
sub
stos
arpl
nop
sub
dec
pop
or
mov
xorb
fsubr
lds
sahf
mov
add
push
mov
sbb
inc
mov
dec
mov
sub
outsb
sbb
adc
adc
shrd
dec
jo
cwtl
in
and
sbbl
push
add
mov
push
test
sbb
mov
mov
cmp
or
aas
dec
xlat
push
mov
jns
cmpsb
mov
mov
int
dec
xor
mov
outsl
or
and
cmp
dec
fnstsw
ss
or
xlat
jno
inc
out
add
push
das
hlt
mov
mov
or
sbb
outsb
ret
xchg
lret
xchg
lds
repnz
sbb
icebp
mov
das
pop
into
jmp
int3
xor
dec
ret
hlt
push
out
or
fs
insl
arpl
pushf
or
push
cltd
cmpsl
jmp
pusha
test
pop
pop
aas
iret
imull
jg
lcall
loope
ds
fadd
cmp
int3
sub
addr16
loop
cmpsb
lcall
add
inc
aaa
js
gs
mov
dec
loop
or
test
cld
cmpsl
sbbl
or
fcmovnbe
iret
rolb
or
dec
ret
pop
jb
mov
jo
int
jecxz
adc
push
outsl
aam
fwait
cwtl
adc
push
add
or
adc
push
sbb
cmp
scas
popa
sbb
cmc
out
and
fdivrl
adc
and
in
in
or
popf
rolb
mov
mov
pop
add
jno
push
xlat
xor
mov
out
test
push
xor
aaa
cltd
lock
clc
jl
or
jecxz
ret
push
and
xchg
xchg
mov
pop
cli
fwait
das
int
out
lea
adc
mov
movsb
in
aad
cli
adc
es
stc
xchg
mov
inc
fldln2
iret
push
sti
push
aaa
inc
js
sbb
pop
pop
cmp
jp
xor
and
das
cmp
pop
arpl
stos
scas
mov
jbe
movsl
ret
adc
sti
sbb
mov
sbb
jmp
cmpsl
mov
addb
call
jg
js
dec
jl
js
es
push
push
mov
fisubrs
mov
scas
sbb
cmp
cld
scas
jbe
clc
pop
cmp
in
pop
jmp
rorb
mov
mov
xor
lret
lods
scas
push
out
jne
jp
jecxz
sub
fimull
out
stos
or
dec
mov
in
sbb
or
imul
out
xchg
push
push
jb
out
std
pop
sarb
cmpb
rep
adc
jnp
xor
lahf
and
stc
and
test
fsubs
mov
adc
scas
lcall
cmp
jmp
shr
lds
dec
test
xchg
mov
pop
or
lock
add
xorw
cltd
xor
or
ret
and
std
xor
push
and
ret
or
or
push
adc
dec
lcall
xor
push
fdivl
incl
sbb
std
add
adc
xor
pop
pop
jne
and
dec
sahf
pop
out
dec
inc
xchg
in
mov
jbe
xchg
xchg
fwait
loop
aad
mov
sbb
lds
dec
or
adc
or
xchg
mov
lds
dec
dec
repz
mov
pop
jnp
lds
jne
jg
loopne
sti
xor
push
xchg
stos
mov
icebp
outsl
sub
or
or
jp
je
movsl
mov
sbb
dec
cltd
addr16
in
mov
mov
aad
inc
mov
cmpsb
dec
push
mov
inc
mov
mov
lock
lahf
mov
sbb
add
push
pop
mov
js
imul
fmuls
adc
and
jp
mov
scas
add
xor
xor
jno
shl
aad
inc
mov
pop
leave
out
cmc
call
into
pushf
cmpsl
jbe
sub
pop
fsubs
lret
inc
neg
dec
ret
jmp
inc
adc
in
shlb
inc
pop
push
or
cmp
and
push
push
mov
jl
out
repz
push
cmp
shrl
enter
orl
lcall
mov
xor
mov
int
pushf
adc
pop
adcb
je
mov
sbb
lea
in
add
cmp
xlat
inc
fildll
jle
push
inc
sub
inc
jmp
flds
nop
mov
stc
nop
movsl
dec
inc
jl
push
test
nop
cmpsb
testl
out
jno
mov
lds
mov
jnp
jnp
or
xchg
cmp
xchg
jle
insl
or
jno
mov
sub
lock
sbb
pop
repz
negb
dec
or
out
xor
jmp
push
sti
mov
arpl
dec
ds
imul
pop
fisubrl
movsl
fists
sahf
fistpll
nop
push
jl
add
aas
adc
int
loope
jp
push
dec
test
aam
pavgw
fidivrs
jl
addr16
sbb
jp
fs
add
jmp
loop
mov
repz
pop
mov
inc
xor
imul
xchg
mov
mov
xchg
or
dec
mov
dec
pop
mov
inc
sub
cwtl
xchg
icebp
dec
insb
leave
mov
loope
mov
pop
out
fmull
cmp
nop
mov
movsb
pop
sbb
mov
loop
adc
mov
pop
xchg
ds
loope
sub
stc
mov
add
dec
dec
cmp
pusha
pushf
jb
aas
int3
imul
ljmp
cmc
enter
mov
scas
and
rcrb
jnp
out
into
ss
mov
nop
ss
and
jge
hlt
mov
je
mov
mov
lea
mov
cmpsl
jnp
sbb
lahf
scas
jmp
cmp
in
mov
movsl
test
pop
adc
mov
xor
dec
movsb
fnstcw
mov
je
shrb
sbb
les
xlat
mov
cwtl
lds
push
mov
fcoml
jb
lret
jecxz
mov
repnz
mov
lods
jecxz
divl
pop
cmc
pop
jbe,pt
enter
mov
cmpsl
int
pop
orl
sbbl
mov
mov
xor
jmp
jns
jne
jne
jns
sub
fwait
and
add
js
jl
js
test
cmc
test
jg
fiaddl
push
mov
js
hlt
pop
data16
std
push
out
dec
sti
jl
rolb
mov
xchg
cmc
movsl
dec
aam
add
pop
pop
cwtl
cmc
dec
data16
or
add
mov
popa
lds
sbb
xchg
xchg
test
js
fs
mov
dec
xchg
add
imul
iret
and
mov
cmpsb
mov
mov
mov
inc
test
jae
xlat
push
xor
aas
fisttps
xor
out
outsb
jmp
mov
pop
fcomps
ja
sub
stc
xchg
out
adc
and
cmpsb
lahf
lret
sbbb
dec
xchg
push
arpl
fisttpll
sbb
jno
in
in
iret
fwait
jo
add
insl
pop
shlb
decl
inc
cmpsb
xchg
ja
pop
and
out
jb
mov
leave
mov
aaa
add
sti
outsb
enter
sarb
jmp
jae
ret
sub
lods
mov
ljmp
jmp
and
pop
cmp
or
sub
popa
and
fsts
jo
push
sub
adc
cmpsl
dec
es
aaa
ret
cmp
cli
adc
sub
pop
neg
cli
rclb
fs
mull
xchg
jnp
or
es
push
pop
xchg
ret
aam
fcomip
push
sub
out
ret
cmpl
fsubrs
sbb
repnz
adc
test
inc
xlat
inc
gs
lret
adc
jge
orb
jo,pt
adc
sub
inc
pop
cltd
ja
rclb
sub
adc
mov
cmp
movsl
lret
sbb
pop
mov
cmp
insb
ss
adc
or
test
xor
sbb
stc
sub
shlb
out
lds
inc
add
scas
inc
adc
pop
mov
or
pusha
fabs
push
imul
cmp
into
cmpsl
in
or
mov
and
addb
addb
add
sbb
jecxz
cli
std
test
sbb
shl
sbb
push
pushf
lock
test
pop
repnz
xchg
out
push
mov
push
xchg
push
mov
or
add
sub
push
push
jne
add
insb
pop
xchg
sub
rclb
popa
adc
int3
pop
gs
std
sahf
inc
in
and
or
out
ss
jp
popf
mov
out
mov
ret
iret
fdivrs
movsl
pop
out
mov
popf
adc
sbb
xchg
and
push
mov
lahf
fwait
movsl
push
test
arpl
fwait
inc
mov
mov
and
notb
adc
jns
cmp
or
fwait
inc
dec
inc
stc
cltd
inc
xor
mov
imul
cmp
aam
cmc
lcall
xchg
addr16
cli
mov
rorl
call
mov
das
lods
or
mov
push
pop
mov
lock
inc
pop
pusha
dec
cld
cs
lods
aam
bound
test
and
mov
aam
cmp
test
out
stos
les
insl
rclb
ret
sarb
jecxz
push
sbb
fsubr
addb
cmpsl
push
mov
les
jl
lcall
mov
test
pop
push
cmpsl
ret
fadds
dec
xchg
jae
mov
jno
arpl
xor
dec
or
push
and
cwtl
arpl
rcrb
cmp
xchg
pop
sbb
stos
fmul
jb
pop
movsb
lods
cmp
ds
mov
les
int
jo
lret
test
sbb
sbb
push
clc
sar
out
sbb
push
stc
nop
imul
jno
cmpsb
sbb
out
add
cmp
aaa
pusha
dec
add
jne
push
mov
xchg
cmpsl
cwtl
xchg
iret
xchg
pop
pop
mov
add
popa
xor
fistps
scas
cmp
add
call
stc
stc
stos
push
int
jge
leave
pushf
cmp
pop
test
dec
mov
xchg
ficomps
mov
xchg
push
sbb
loope
cmp
test
or
test
scas
xor
inc
pop
xor
add
and
jp
fisubl
inc
aaa
push
mov
lock
stc
adc
clc
xor
sbb
add
jmp
xor
push
push
ds
mov
test
js
dec
jl
js
mov
pop
imul
and
adc
insl
popa
daa
jge
sahf
insb
mov
inc
inc
mov
xor
sbb
stos
fisubrl
sbb
adc
push
test
dec
cmp
push
and
fisttps
add
xchg
push
mov
fs
push
xchg
cmp
xor
xchg
xchg
pop
or
int
lods
lods
xchg
insl
insb
into
mov
add
cmovs
pop
nop
fcmovne
mov
jno
icebp
test
inc
ja
ds
mov
into
loopne
mov
pop
add
fcomps
add
adc
push
js
mov
ja
cmpsl
jbe
scas
xor
outsl
test
lahf
lret
dec
push
and
js
xor
cmc
test
pop
xor
ja
cli
jb
push
mov
or
push
lock
out
push
mov
add
cld
gs
or
add
stc
and
adc
js
xor
icebp
xor
loope
pop
push
push
fdivrl
mov
push
jno
push
into
or
fcmovu
push
push
dec
insl
fcoms
xchg
inc
xor
sbb
loop
movsb
pop
inc
shl
lcall
adc
lds
or
cmc
jle
mov
xor
push
imulb
hlt
mov
out
out
mov
dec
pushl
push
enter
xchg
xor
mov
cmp
mov
dec
pop
mov
pop
mov
pop
iret
jge
adc
das
loope
push
cmp
and
inc
xor
push
adc
movsb
jno
pushf
lock
and
subb
cld
add
pop
hlt
inc
stos
jmp
out
hlt
push
dec
popf
into
push
xor
data16
dec
movsb
sbb
dec
arpl
enter
dec
lock
inc
into
jge
xor
insl
stos
pop
pop
jp
push
daa
push
addr16
jbe
lret
sbb
cmp
xor
sbb
cmc
sbb
mov
push
adcl
and
or
insb
or
inc
out
faddl
and
mov
dec
lods
xchg
insb
jno
sbb
add
loope
adc
das
test
pop
adc
cmp
mov
mov
iret
movsb
dec
in
test
out
or
add
lret
imul
insb
fcmovnu
xchg
add
pop
out
inc
call
push
clc
mov
mov
sbb
test
syscall
ret
inc
xchg
lcall
adc
arpl
dec
mov
add
xor
cld
mov
leave
xchg
xor
bound
pop
mov
cwtl
ret
fs
pop
loopne
xchg
mov
movsb
mov
xchg
mov
xorb
cmp
adc
xchg
mov
sbb
fs
xchg
cwtl
roll
sahf
and
jno
data16
lcall
jmp
mov
mov
jg
xchg
test
test
jp
cld
or
mov
or
lcall
push
stos
push
add
mov
lcall
inc
jp
or
fiadds
enter
nop
outsl
mov
stos
test
in
test
add
cmp
mov
xchg
pop
mov
cmp
jns
mov
xlat
lret
jge
shlb
enter
icebp
push
mov
and
lcall
sahf
insb
imul
dec
lcall
sub
pop
sub
inc
data16
test
mov
adc
out
mov
mov
arpl
mov
pop
xor
and
jne
mov
xchg
pop
add
xchg
jp
push
daa
mov
dec
lret
into
sbb
stos
aam
cmp
data16
ja
ljmp
mov
push
movsb
jge
mov
add
cmc
add
sub
shll
call
jl
mov
popa
cltd
stos
scas
dec
mov
loope
out
lds
and
jno
fidivrl
dec
xor
lea
bound
fildll
or
int3
in
aas
mov
pushf
inc
cmpsl
push
jo
mov
nop
fidivs
out
nop
fstpt
mov
idivl
cmp
cli
inc
roll
pop
add
mov
xlat
aaa
and
out
fmul
pop
push
ficoml
add
mov
mov
mov
mov
je
orl
mov
adcl
xor
incl
add
movl
cmp
movl
jne
andl
pushl
movl
call
jmp
add
add
in
loope
sub
daa
outsb
rclb
js
dec
jl
js
clc
mov
inc
pop
fiadds
mov
test
jg
imul
add
sub
insl
mov
inc
add
es
sub
aas
cmpsl
inc
mov
call
xchg
mov
push
leave
add
ret
cmp
ss
ret
test
push
mov
inc
orb
sbb
xchg
dec
mov
lret
add
dec
aaa
shll
mov
rcrb
mov
filds
dec
jns
mov
adcb
mov
mov
lret
ja
mov
adc
cmpsb
cltd
sbb
or
dec
test
out
aaa
pushf
mov
ljmp
jmp
sti
xchg
inc
xor
mov
in
lahf
and
xor
movsb
jne
lret
pop
jnp
cwtl
xchg
jo
add
cs
mov
jmp
aad
pop
push
add
sub
sub
push
pushw
push
roll
xchg
in
push
cmp
out
dec
and
xor
or
mov
pop
or
aas
lods
rcll
jb
test
outsl
repz
pop
lock
insl
pusha
xor
jp
les
aaa
shrb
lret
xor
int
dec
mov
dec
push
dec
adc
daa
faddl
push
push
js
mov
jle
and
sbb
mov
insb
add
jnp
imul
movsl
lret
jns
pop
xchg
rcrb
cmp
push
push
out
std
and
xor
hlt
imul
stos
inc
sbb
icebp
je
mov
ds
loop
push
iret
pop
xchg
pop
cmc
test
pop
dec
inc
jo
mov
mov
add
pop
jns
insl
sbb
mov
adc
cmc
insb
out
push
dec
and
lret
and
lock
or
hlt
mov
xchg
jl
lock
and
std
mov
call
shl
cmp
lcall
out
icebp
adc
scas
stos
jo
imul
add
mov
mov
add
xchg
decl
sub
imulb
push
xor
test
mov
sbb
ja
lret
das
lret
ss
stc
or
mov
sbb
repz
sub
test
jae
jp
inc
js
sbb
shlb
cltd
mov
movsb
push
xchg
sub
int
sub
xor
push
pusha
loop
mov
sbb
dec
mov
data16
xchg
out
adc
push
push
push
push
in
cmpsl
cltd
mov
jns
cmpsl
sub
adc
jb
test
dec
mov
nopl
ja
mov
cmp
test
js
cmp
das
loop
xor
imul
push
mov
cmp
test
mov
adc
pusha
fs
cwtl
cmpsl
ds
sbb
in
jns
sarl
xchg
xor
sbb
icebp
xorb
int
dec
mov
cmpsb
jb
mov
xchg
lods
int3
ret
in
mov
pop
jbe
out
push
mov
ss
pop
js
aaa
lds
std
pusha
and
loop
loope
repnz
out
mov
sbb
jno
add
xchg
aad
repz
jecxz
pop
and
adc
out
inc
mov
cmp
cmp
sub
xor
loop
aad
ljmp
push
pusha
pop
out
mov
test
and
inc
stos
data16
pop
aam
insl
push
daa
popf
popa
hlt
js
mov
sub
nop
and
test
dec
mov
xor
aam
pop
pop
test
icebp
loope
pushf
lods
sbb
jp
sbb
inc
out
dec
dec
ret
xchg
push
inc
sti
lods
sbb
cmpsb
call
imul
push
push
cltd
mov
into
cmc
sarl
movsl
push
nop
aaa
mov
js
mov
mov
lock
lret
mov
cmc
adc
xor
sar
pop
pop
fs
das
pop
xchg
add
out
cmp
das
pop
sbb
or
test
lea
add
cli
repnz
sbb
outsl
push
stc
test
add
xor
pop
int
hlt
mov
and
or
pop
cwtl
insb
stos
rorb
test
test
shrl
dec
rolb
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adc
mov
mov
subl
xor
add
movl
jmp
add
jge
and
xchg
jg
adc
and
js
cli
shl
data16
pushf
js
add
imul
rolb
cmpsb
dec
out
and
insb
push
filds
sbb
arpl
mov
xchg
lcall
subb
adc
pusha
jb
inc
pop
imul
sbb
and
and
adc
cs
lcall
lcall
xchg
call
mov
int
out
in
cmpsb
ret
in
loope
inc
jle
arpl
gs
aaa
faddp
test
scas
inc
mov
sub
js
inc
sbb
push
and
std
sbb
mov
dec
sti
or
xor
add
mov
repnz
cmp
cltd
movb
iret
inc
mov
cmp
mov
jle
ret
dec
js
and
outsl
imul
mov
test
cmp
pop
mov
scas
es
inc
mov
addr16
aaa
insl
cli
out
push
mov
outsl
sub
sbb
imul
mov
mov
cltd
dec
hlt
out
clc
push
cs
cmp
sub
push
jg
popf
movsl
lods
leave
adc
scas
mov
sti
xchg
mov
insb
mov
out
pop
and
je
ret
inc
dec
dec
inc
pop
mov
xor
xchg
pop
ret
and
mov
rclb
cmp
clc
dec
nop
inc
push
dec
sbb
pop
sbb
fnstcw
adc
push
sbb
push
mov
shll
sbb
push
pushf
or
push
nop
sub
lcall
ficoml
push
fwait
pop
or
les
sti
cmpsb
into
add
xchg
popa
das
sbb
pop
push
dec
xchg
mov
cmpsb
sahf
gs
xor
cmpsl
jo
in
sbb
sbb
mov
icebp
sarl
mov
add
push
test
clc
mov
fcompl
mov
lods
xlat
add
das
ret
jg
dec
in
aad
out
xor
fbld
xor
xlat
stos
push
in
cli
into
cmp
test
rcrb
fldl
xor
sub
andps
xor
xchg
push
push
push
sub
push
xchg
lahf
adc
leave
out
add
sub
ljmp
int3
iret
mov
mov
and
jge
fstpl
dec
lcall
mov
push
fdivp
imul
cmp
cmpsb
pop
out
enter
ret
pop
popa
mov
xor
sti
mov
ficoml
sub
std
popa
roll
push
or
push
and
test
push
cli
pop
pop
cli
inc
ja
outsb
icebp
pop
push
xor
xor
jl
mov
add
mov
mov
adc
jl
mov
adcl
mov
push
cmp
xchg
jp
jbe
popf
mov
aam
out
jno
mov
icebp
cmpsl
sbb
or
bswap
inc
andb
xor
shl
ret
adc
jae
jns
dec
adc
mov
add
xchg
rcrl
ret
data16
jl
movsb
adc
outsl
xor
push
test
clc
xchg
rcrb
pop
into
stos
cmp
jge
adc
xor
out
cmp
cmc
fldl
push
mov
incb
ljmp
pop
add
jge
popa
jne
pop
or
mov
or
dec
or
fsubs
mov
mov
or
aam
jno
lret
movsb
jnp
movsb
rcr
or
hlt
dec
outsb
inc
aaa
add
jge
sbb
push
mov
cwtl
mov
xorl
jns
mov
or
sub
nop
xlat
loopne
jno
andb
mov
adc
inc
sub
or
std
and
icebp
xchg
jnp
imulb
push
jp
xchg
push
loopne
mov
push
loopne
movsl
popf
cmpsl
lock
push
mov
andl
mov
xchg
push
mov
fmull
jo
inc
lods
sbbl
fcomip
idiv
cmp
mov
ret
loope
mov
mov
sti
lcall
mov
mov
pushf
fnstenv
mov
inc
into
lods
icebp
pop
scas
push
sub
xlat
jne
mov
and
mov
cmp
mov
lahf
dec
fiadds
push
mov
sub
mov
mov
fldenv
and
add
mov
xlat
sbb
cmp
mov
mov
aam
inc
add
add
test
and
add
jne
pushl
orl
call
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
andl
add
cmp
movl
je
xor
mov
adcl
mov
mov
add
mov
jmp
syscall
push
push
scas
movsl
test
mov
mov
sub
dec
jl
js
inc
and
inc
mov
fldl
fwait
xchg
icebp
arpl
mov
lock
bound
push
aas
ljmp
push
iret
dec
leave
pop
in
mov
jo
iret
enter
movhps
ret
ret
add
into
int3
jno
dec
hlt
fildll
mov
or
cmpsb
fwait
iret
xchg
lcall
push
xor
je
out
sbb
dec
jecxz
pop
jle
cwtl
bound
test
lcall
push
outsb
in
addb
mov
ret
cmp
jl
adc
xor
and
fists
mov
pusha
adc
andb
and
sahf
cmpsl
rcrb
dec
js
shl
push
rcrb
xor
sbbl
and
je
xchg
lcall
pop
in
out
repnz
js
xchg
lock
pop
mul
mov
inc
sbb
mov
mov
jecxz
dec
pop
shlb
xchg
add
push
fnstenv
lds
cmpsb
rclb
jp
mov
sti
or
ljmp
jg
inc
stos
sbb
jne
push
sarb
fisttpll
rcrl
mov
cmp
push
mov
mov
xorl
call
js
xchg
xchg
and
clc
cmp
mov
imull
add
sub
jne
push
repnz
push
push
fwait
xor
jge
xchg
fs
stos
cmp
lods
rclb
mov
ds
and
insb
pop
stos
adc
int
mov
push
dec
cmc
mov
shl
pop
push
mov
enter
out
lret
gs
out
aad
shll
adc
jge
mov
movsb
jmp
adc
xchg
pop
dec
jg
jnp
xchg
pop
jmp
or
and
shll
repnz
xchg
xchg
lods
fstl
push
mov
js
pop
lahf
imul
cmpb
jecxz
xchg
ret
loop
and
pop
addr16
and
pushf
sti
pop
mov
out
pop
addl
and
pop
cs
int3
fldenv
mov
lods
lret
out
jnp
cmp
mov
scas
movsb
mov
cmp
inc
cmpsl
jns
stos
cmpsb
iret
das
pop
out
ret
movsl
xchg
scas
addr16
jle
int
fucomp
iret
in
mov
lret
nop
lcall
pusha
pop
les
ljmp
push
sbb
insl
insl
cmpsb
lret
xchg
adc
jmp
pop
xor
xorb
inc
clc
and
xchg
sub
loopne
xor
pusha
mov
sarl
cmp
push
sahf
sub
mov
sub
lret
push
fbstp
dec
in
pop
adc
aas
inc
rclb
xlat
jnp
lcall
cmc
adc
mov
xchg
in
int3
cwtl
push
sbb
jae
jg
sub
push
xchg
enter
xor
ja
xor
in
loop
stc
push
jecxz
push
es
mov
je
sbb
fs
fwait
ret
sub
daa
lret
inc
gs
cld
inc
jb
inc
xchg
mov
sub
jbe
sbb
clc
adc
ja
es
inc
addl
dec
sbb
stos
lea
inc
imul
mov
outsb
sub
dec
jmp
jge
and
or
test
xor
arpl
sbb
jg
loopne
fs
xchg
call
mov
stc
fldenv
cmp
inc
push
test
adc
or
lahf
adcl
fidivl
std
insb
cmp
out
aas
leave
insb
test
je
lahf
insb
in
xor
sub
xchg
ljmp
ret
fistpll
lret
lock
pop
into
sub
inc
pop
aaa
sbb
adc
mov
outsl
mov
fistl
and
add
cli
loopne
pop
inc
xorb
fmul
add
cwtl
push
daa
ljmp
imul
mov
mov
mov
sub
xchg
pop
inc
sub
orl
ljmp
out
jg
insl
and
pop
mov
cmp
mov
dec
sbb
stos
sbbl
idivb
aas
fadds
cmp
push
xor
add
movsb
aad
inc
sahf
orl
outsl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
and
mov
adcl
jmp
pusha
push
ja
pop
push
jp
mov
xchg
adc
js
jl
js
ret
fldcw
xor
fcomi
lock
jge
fcoms
jecxz
mov
dec
testl
push
aas
daa
inc
jae
sub
test
fsubs
jp
xchg
dec
xchg
xor
sub
xchg
push
imul
das
sti
jb
and
push
sub
inc
movsb
test
movsl
push
inc
adc
add
lea
xlat
adc
mov
cmp
mov
out
mov
pop
repz
sub
hlt
mov
jl
imul
jo
gs
call
cmc
adc
fldcw
dec
jae
mov
mov
inc
mov
leave
cli
xor
mov
into
je
pop
aas
dec
dec
clc
mov
or
dec
add
mov
xchg
adc
test
dec
in
cmpsl
inc
jnp
pop
and
lahf
push
decl
and
and
add
cmpsb
pop
andb
mov
mov
mov
xor
dec
mov
xchg
outsl
mov
aas
iret
mov
test
popf
jecxz
dec
nop
nop
pop
dec
je
mov
repnz
pop
cmovp
jb
and
mov
sub
ret
xor
lods
pop
leave
xor
cli
sub
jle
pop
sub
stc
inc
xchg
test
cmp
mov
hlt
mov
in
xor
pop
and
mov
add
loope
enter
cmp
push
mov
icebp
mov
in
lods
jle
jg
xchg
cmp
dec
jo
jmp
mov
pop
push
dec
insb
and
adc
notl
push
ret
sti
ret
xchg
pop
push
cwtl
push
sbb
andps
and
jne
aad
add
fisttps
pop
aad
and
cld
rcrl
push
int
jb
push
pushf
lock
or
or
test
shlb
insl
lcall
lret
and
call
mov
add
pop
repnz
dec
inc
lods
jecxz
movsl
pop
push
out
sub
mov
push
sub
xchg
jecxz
test
cwtl
pop
fdiv
push
bound
xchg
mov
dec
jmp
cmp
jmp
jecxz
faddl
mov
imul
mov
jge
mov
jmp
mov
lcall
popf
lcall
fstpt
adc
adc
jbe
cs
nop
std
xlat
sub
push
roll
push
xor
push
loope
lock
or
lods
add
out
lds
jge
mov
pop
jle
outsl
mov
xchg
pop
push
or
pop
adc
xor
les
cltd
or
jmp
int
xor
ficomps
dec
mov
aam
sbb
popf
dec
jle
loop
and
pop
push
cmp
mov
dec
nop
cmp
int
push
or
or
or
and
mov
push
ret
fdivrs
jle
adc
lds
add
dec
icebp
mov
dec
push
lahf
jmp
out
jmp
cmp
mov
mov
push
adc
call
rolb
cld
and
mov
add
mov
dec
push
add
aaa
xchg
outsl
xor
mov
push
or
and
push
mov
lcall
mov
popa
movsl
adc
and
inc
ret
in
lods
adc
fnstsw
mov
push
insb
cmp
push
inc
scas
mov
repnz
les
lods
fldenv
test
sarb
fldl
xchg
add
cmp
icebp
inc
out
mov
cmp
cmpsb
sub
addr16
les
pop
sub
push
clc
rorb
inc
push
sahf
xor
lahf
fcompl
push
mov
mov
cmp
data16
gs
shlb
pop
jo
cltd
loope
rorl
xchg
cld
cli
ret
ss
cli
mov
lds
sbb
in
lock
into
cmp
sbb
jl
dec
icebp
loopne
lods
cwtl
mov
add
add
iret
aam
test
mov
push
dec
pop
ret
scas
mov
mov
jmp
loope
sbb
inc
aaa
xchg
test
add
xchg
ds
sbb
pop
add
cmpl
dec
pop
pop
pop
out
adc
mov
aaa
ds
add
mov
mov
jmp
fldt
popa
aam
mov
mov
daa
js
dec
jl
js
and
push
mov
pop
pop
into
mov
inc
fildll
jp
push
jae
test
mov
rcr
jmp
test
test
jmp
pop
lock
dec
and
outsl
and
imul
lods
add
lock
nop
cs
ret
outsl
adc
and
pop
mov
call
lea
test
es
push
decb
inc
mov
xchg
mov
lret
add
push
mov
imulb
mov
test
mov
push
inc
cmp
stos
jl
imull
shrl
mov
push
mov
inc
outsb
in
cmp
sbb
xchg
xchg
into
cli
nop
into
push
jecxz
repz
jp
jo,pn
mov
sub
mov
push
adc
and
cmp
lret
in
cltd
in
add
nop
in
jns
mov
adc
xor
sub
xorps
lds
mov
pop
pop
decl
inc
xchg
jge
popf
dec
and
add
notb
rorb
fnstcw
pop
cmp
xchg
inc
jmp
or
xchg
push
jne
into
push
mov
jnp
pop
lock
in
and
adc
xor
push
xor
insb
daa
push
or
xchg
outsl
or
mov
and
stos
and
inc
cli
pop
ud1
sbb
sbb
push
or
psubq
fxch
pop
jg
fildll
cmpsl
div
movsl
mov
pop
aam
ss
inc
or
cld
pop
add
test
xchg
fdivp
test
jg
lods
divl
xchg
xchg
or
hlt
sarl
test
pop
cwtl
loop
call
lods
push
push
cltd
lcall
dec
in
fld
xchg
scas
das
pop
jnp
add
cmp
sub
mov
sub
mov
les
std
inc
fs
fildl
pop
mov
les
insb
mov
jo
movsb
icebp
xorl
xchg
idiv
xchg
or
sti
call
xor
jecxz
dec
pop
shrb
add
int3
inc
rcll
mov
rcrl
mov
fistpl
lahf
xlat
and
push
fnop
rep
jmp
rclb
scas
add
mov
adc
pop
push
push
cmpl
jl
push
mov
pop
push
rcr
push
ficompl
push
lret
ja
cmp
cmp
call
fstpt
outsl
aad
sbb
inc
ret
cmp
test
cmpsb
cmpsl
pop
inc
scas
add
mov
popf
std
inc
fst
movsl
rorb
scas
push
loopne
dec
popa
pop
dec
hlt
push
dec
jl
and
and
sbb
outsl
push
sbb
pushf
shrl
outsl
mov
mov
or
xchg
dec
inc
xchg
rorb
fisubl
lcall
pop
add
dec
icebp
dec
es
nop
cmp
add
cmp
lcall
stos
out
into
add
test
xor
mov
ss
mov
insb
jnp
push
pop
cmp
pop
xchg
cmpsl
int3
dec
and
int3
shll
jge
xchg
sti
jnp
cld
sbb
call
sahf
jae
or
or
mov
in
stos
dec
mov
xor
fsubs
test
frstor
dec
scas
adc
mov
push
lret
loop
jnp
fiadds
push
shrb
mov
jmp
mov
shl
jnp
shlb
or
lods
mov
rorl
icebp
js
adc
pop
mov
mov
mov
xchg
dec
push
cmp
popf
rcrl
lcall
mov
lahf
mov
outsb
pop
cld
mov
mov
dec
jo
movsl
mov
cmpsl
mov
sbb
mov
aam
stc
push
xchg
or
mov
icebp
xchg
cmp
rcrl
shll
or
es
push
lea
pushf
call
cmpsl
sbb
adc
pop
addl
or
jns
pushf
add
adc
inc
stos
int
jns
js
xchg
pop
jp
cmp
jl
iret
cmp
or
mov
push
mov
mov
or
and
dec
aam
inc
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
inc
jmp
jl
je
jns
cltd
jecxz
ja
out
xlat
cmp
dec
jl
js
inc
scas
sbb
push
dec
test
and
test
dec
jmp
xor
push
sarl
fwait
sub
fbstp
or
sub
fs
mov
xchg
or
or
jo
push
loop
ss
and
pop
std
and
mov
xchg
out
add
jns
mov
mov
in
pop
mov
out
stos
test
adcl
jnp
outsb
jno
push
pop
lret
sub
out
bound
dec
ss
dec
mov
cmp
insb
push
mov
cmp
inc
cli
test
lret
cmp
add
sbb
mov
inc
mov
jle
push
dec
nop
mov
dec
mov
ficomps
adc
and
inc
add
addr16
add
inc
xchg
mov
lock
in
push
xchg
ja
mov
cltd
pop
lea
flds
mov
mov
inc
test
aad
or
pop
sub
jle
lret
fwait
push
sbb
insb
gs
test
lock
and
pop
xlat
mov
mov
push
stc
insb
or
cld
mov
mov
xor
jb
icebp
jge
push
and
int
mov
imul
push
enter
add
mov
dec
in
daa
xchg
jno
push
mov
imul
xor
movsl
sub
cli
push
sub
and
aaa
fisttpll
iret
fsubrp
ljmp
out
out
sub
add
mov
ss
cmp
leave
push
and
and
dec
pop
xchg
cmp
insb
loop
cmc
add
xor
adc
push
jge
or
mov
dec
fisubl
sbb
inc
pop
leave
sbb
dec
push
mov
inc
cmp
sub
xchg
les
cmp
bound
movsb
in
dec
arpl
push
adc
pushf
pop
and
add
outsb
sysret
cmp
sub
push
xchg
inc
push
push
scas
sub
mov
push
cmp
int3
insb
push
repnz
in
repnz
jno
inc
jb
jp
call
adc
and
sbb
mov
ljmp
pop
mov
loopne
fwait
jno
xchg
pop
push
std
std
scas
sub
xchg
mov
mov
fistps
sti
push
mov
fcomi
push
insb
loope
movsb
inc
push
sbb
pusha
and
and
fucomi
add
rcrb
sub
jne
inc
jno
rcll
mov
daa
mov
pop
fisttpl
sub
andl
sub
movsl
or
mov
cmp
inc
cs
nop
jge
jge
fwait
adc
cli
dec
sub
mov
scas
cwtl
repnz
xchg
or
dec
pop
sahf
cmpsb
loopne
jmp
push
arpl
xor
jbe
sub
pushf
in
mov
lods
out
xor
or
add
aaa
int
add
dec
lods
add
loop
shrl
iret
out
xchg
inc
out
das
imul
lret
data16
in
inc
cmp
clc
jne,pn
xchg
pop
scas
popf
fyl2x
shrb
je
mov
adc
pop
mov
pushf
dec
pop
inc
insb
push
lea
bound
add
fistpll
mov
xchg
jae,pn
jl
cmpsl
pop
cli
adc
mov
sahf
repz
bound
jp
cmpsb
aad
cmc
mov
adc
mov
mov
pop
dec
arpl
adc
addr16
popa
cld
push
mov
fwait
loopne
les
or
push
cli
pop
popf
add
inc
fsubrl
outsl
cmp
jmp
dec
fldcw
lods
adc
pop
movsl
adc
movsl
ljmp
xor
cwtl
and
push
push
mov
out
sbb
pop
and
xchg
adc
add
iret
dec
xor
inc
xchg
test
arpl
stos
out
dec
or
cmp
push
lret
pop
xchg
ficomps
mov
mov
adcl
and
add
sbb
adc
xor
dec
push
xchg
jl
dec
mov
xorl
cmp
xchg
push
lds
negl
pop
hlt
shr
sub
pop
xchg
push
xlat
pushl
pushl
call
jmp
or
or
rep
sub
cmp
sahf
and
js
enter
mov
rclb
pop
and
shll
dec
stos
sub
pop
subl
in
rorl
pop
dec
popa
shll
push
push
clc
sarb
les
xchg
and
sti
aad
dec
pop
es
imul
dec
mov
mov
pop
scas
cmp
cmp
sahf
scas
push
mov
mov
clc
mov
in
sbb
or
sub
xchg
jp
mov
clc
jmp
stos
rol
lahf
test
cmp
push
cmpsl
dec
add
adc
sub
stos
in
jl
insb
xchg
xchg
pop
jmp
mov
pop
jg
shll
push
int
sbb
push
sti
maxps
xchg
jae
push
xchg
jle
mov
or
adc
test
xchg
std
data16
dec
and
push
out
xor
mov
jl
push
test
push
jne
jo
xchg
xchg
pusha
sub
movb
mov
scas
jb
xor
rol
jg
and
adcl
jae
push
in
outsl
or
cmp
jl
mov
mov
nop
out
or
fstpl
and
test
jl
cwtl
lret
fldcw
pop
push
inc
add
mov
je
jg
arpl
and
xlat
lahf
add
sahf
xlat
es
xlat
out
scas
repz
xor
inc
std
out
repz
xchg
add
jp
inc
sub
push
je
adc
stc
addr16
xor
xor
dec
js
ja
pop
popl
mov
mov
sub
jnp
dec
out
xor
aas
xchg
pop
ss
adc
fwait
ret
push
lods
add
lods
sbb
pop
pop
enter
push
mov
test
sbb
sbb
cmc
cwtl
addr16
xor
movsb
sbb
dec
ficoms
jle
clc
inc
pop
mov
jae
mov
mov
and
mov
es
sbb
sub
es
mov
aad
mov
lock
roll
push
sbb
jmp
repnz
sti
aam
ret
and
addr16
push
mov
leave
repnz
inc
shll
jae
jns
mov
gs
fsts
pop
mov
add
mov
mov
mov
lea
push
adc
imull
fisubrl
mov
adc
adc
call
and
aaa
call
fistpll
pushf
gs
lods
jno
dec
gs
rorb
adc
jmp
sub
test
repnz
and
xchg
fbstp
scas
cld
or
shrl
ret
dec
jge
dec
cmp
sbb
xor
cmpsl
fidivrl
imull
mov
loope
adc
stc
enter
inc
push
insl
push
subl
scas
sub
mov
insl
sahf
push
pusha
dec
jns
lock
frstor
fisttpll
and
test
adc
fistl
test
and
sub
fiaddl
cltd
lds
jno
jmp
pop
out
mov
push
in
fsubs
movsb
es
rorb
movsb
in
xchg
fiadds
fbstp
mov
repz
adc
mov
push
in
push
add
mov
shrb
mov
jmp
test
xor
or
shll
mov
in
inc
add
mov
jnp
pusha
sbb
mov
into
mov
mov
xor
mov
xchg
fsubrl
xlat
repz
inc
cmp
pop
rorl
mov
pop
addr16
and
bound
pop
add
pop
mov
push
lea
xorb
push
and
outsb
pop
push
leave
hlt
mov
out
enter
outsb
sbb
fwait
scas
mov
les
daa
jg
xor
fsubrl
adc
push
out
add
dec
mov
in
cmp
xor
es
fstps
lret
lret
pop
jle
pushf
shlb
xor
xchg
shlb
xchg
push
sbb
mov
in
scas
and
mov
jp
push
test
jb
xchg
mov
jg
aaa
fidivs
test
cli
loopne
push
push
xrelease
pop
iret
hlt
cld
leave
adc
pop
push
int
into
stc
stos
in
test
cmp
fadd
cmp
add
or
inc
mov
stos
fadd
in
leave
inc
pop
sub
jge
inc
cld
mov
jmp
stos
mov
pop
in
jns
mov
mov
movsb
sbb
into
jge
js
dec
jl
js
lods
in
lods
mov
sub
jmp
dec
dec
loope
aaa
cmpsl
adc
adc
movsb
test
dec
movsl
aad
mov
pop
mov
enter
pop
cmp
push
ret
daa
jo
jns
or
sbb
movsl
cmc
rclb
inc
jmp
shll
sarb
sub
cmp
push
shrb
mov
fsts
push
in
inc
and
stc
sub
insb
cltd
inc
mov
test
push
cmp
scas
inc
shlb
mov
xchg
addr16
cmpsb
scas
into
popf
cmpl
or
aam
jp
call
call
inc
xchg
lods
ss
clc
jbe
pop
and
xor
and
stos
cmp
push
mov
in
repnz
jb
xor
cmp
loopne
pop
xchg
cmp
cmp
aaa
mov
insl
repnz
mov
in
addl
fidivl
jnp
cwtl
push
mov
sbb
mov
pop
sbb
rclb
cmp
push
pop
push
cwtl
push
sub
pushf
cmc
clc
loopne
insb
scas
ljmp
push
push
ljmp
add
sti
cmp
pop
push
sbb
sub
fbld
add
ret
mov
and
test
adc
cmp
dec
sti
es
sbb
and
pop
sub
scas
fwait
cmp
das
mov
movsl
stos
cmp
mov
outsl
cmp
cmpsl
lcall
and
mov
andl
repz
cmc
xor
dec
and
push
incl
cmpsb
inc
cmp
lds
lahf
out
jns
mov
cs
pop
fs
mov
pop
dec
les
shlb
jmp
lock
xchg
push
xor
xchg
hlt
mov
xchg
out
push
or
push
test
pop
lret
cwtl
push
pusha
pop
mov
cwtl
nop
addr16
sub
or
dec
js
flds
subb
data16
addl
mov
adc
mov
lret
mov
test
dec
repz
xchg
pop
push
stc
mov
mov
jl
popa
add
push
cmp
mov
filds
ja
xchg
xchg
pop
adcl
std
push
mov
nop
mov
or
lea
jp
or
outsb
int
xchg
imul
movsl
daa
lahf
imul
or
jbe
jl
push
movsl
mov
and
aam
int
lahf
add
gs
sub
fsubs
adcb
xor
jnp
xchg
jb
lret
sub
popf
je
pop
hlt
mov
fisubl
jb
testl
jecxz
jnp
add
dec
cmp
xchg
in
mov
and
loopne
out
xchg
jmp
repz
push
inc
jo
ss
imull
inc
jecxz
mov
test
je
mov
adc
mov
fmull
adc
aas
cld
inc
add
mov
jnp
jmp
dec
xor
push
jp
mov
into
popf
imul
dec
lret
cmpsl
sub
insl
scas
loopne
into
andl
leave
dec
aad
mov
fisubs
and
in
ret
jl
add
dec
xor
pop
fsubp
cld
push
xor
fistl
pop
cmp
inc
cmp
arpl
adc
loopne
sbb
pop
negb
loope
xchg
cld
ljmp
out
fisubrl
jo
fstps
cmpsl
daa
popf
adc
sbb
or
cmpsb
out
pushf
ss
jns
xchg
add
clc
inc
adc
rcrl
pop
clc
into
out
inc
scas
in
lods
int3
sub
mov
pop
fucomi
xor
ss
adcl
pop
bnd
mov
and
sbb
xor
nop
xchg
xor
lret
fldenv
xchg
cs
jae
cmp
pop
es
mov
icebp
inc
fadds
lods
cs
mov
xchg
shll
clc
rorl
push
or
loopne
mov
ds
hlt
fdivrs
outsb
fnsave
aas
cmp
dec
cmp
and
mov
inc
int
sbb
outsl
jo
in
sub
jbe
loop
xor
add
cmp
jne
mov
inc
cmp
jmp
clc
or
lret
scas
lods
and
lock
xor
js
jl
js
in
mov
mov
fisubs
push
pop
jae
testb
mov
fnstsw
outsb
sbb
cmp
jbe
les
mov
jns
mov
mov
sbb
jne
mov
add
cmc
movsl
scas
mov
clc
pop
aad
stos
cmp
xchg
mov
aad
sub
rclb
push
inc
push
xchg
xor
adc
call
nopl
mov
xchg
loop
dec
xchg
sub
scas
mov
mov
rcrl
pminub
sti
pop
popf
push
mov
xorb
pushf
daa
out
daa
mov
rcl
push
daa
clc
cmp
pop
mov
or
frstor
mov
cmp
add
clc
cmp
das
push
sbb
pusha
cld
scas
push
or
popf
adc
clc
mov
cltd
cs
aaa
ss
ja
sahf
xor
pop
adc
push
rclb
inc
sbb
movsb
sti
xchg
and
xor
mov
sbb
test
in
stos
mov
dec
dec
loopne
pop
ja
lcall
jecxz
lea
loop
sbb
stos
pop
pop
pop
fbld
mov
mov
adc
mov
aas
xchg
pop
inc
int
inc
mov
jne
sbb
jge
push
out
sbb
lock
push
scas
lods
cmpsl
cmpsb
mov
out
mov
or
leave
mov
mov
add
insb
nop
in
inc
sbb
xchg
xlat
mov
sub
cmp
clc
call
cs
js
inc
mov
pop
fidivrl
stc
push
push
cwtl
test
xchg
daa
mov
ret
cmp
push
lods
rcrl
xor
jecxz
test
js
add
push
push
enter
or
jb
int3
cwtl
sub
and
add
std
dec
and
inc
fs
mov
cmp
out
and
pop
test
cwtl
cmpsl
add
mov
insb
iret
icebp
jp
pop
push
jb
add
adc
or
or
lret
imull
arpl
jmp
cmp
popa
in
into
push
loopne
lea
sbb
xchg
js
aam
je
pop
aas
add
cmp
es
adc
bound
sub
aam
cmp
push
mov
iret
in
pop
lret
out
sub
pop
scas
lret
mov
int
sub
lahf
or
push
cld
and
dec
out
push
mov
icebp
popf
mov
cs
outsb
iret
shlb
jnp
and
std
in
icebp
add
mov
mov
xchg
add
rolb
pop
out
sahf
shlb
mov
bnd
push
cmp
pop
push
or
fsubrl
std
scas
shrl
mov
cltd
xor
adc
xor
lret
dec
loop
jbe
pushf
xchg
cmp
mov
mov
out
sub
loop
xchg
loop
mov
fisubrl
add
pop
cmp
das
jecxz
mov
inc
ljmp
outsl
cs
out
inc
int3
psubb
pop
loop
cli
xor
cmp
fisubs
mov
pop
in
dec
cmp
ss
xchg
add
hlt
nop
adc
mov
inc
or
popf
xor
sub
mov
nop
sub
pusha
popl
pop
xchg
in
into
mov
cld
add
popf
jmp
pop
rolb
cltd
xchg
addb
out
fs
jno
hlt
xchg
xor
notl
test
jnp
sub
leave
inc
pop
lods
fwait
xor
push
jo
and
mov
hlt
jnp
out
inc
dec
inc
pop
test
mov
sub
int3
arpl
xor
cmp
inc
movaps
test
mov
xchg
movsb
mov
jecxz
cmp
movsb
roll
icebp
cmp
inc
or
push
lods
hlt
xor
push
lcall
test
sbbb
mulb
scas
setnp
adc
and
loop
movsb
dec
jg
addl
xor
leave
lds
push
jo
subb
and
out
push
and
sbb
int
clc
jecxz
sub
cld
rorl
ss
das
loope
push
mov
pop
rcr
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
jmp
xchg
mov
icebp
xchg
cmc
pushf
push
test
js
jl
js
dec
cmp
sub
push
cld
insl
aad
and
dec
fwait
mov
mov
pushf
roll
flds
pushf
add
or
fs
leave
xor
dec
adc
hlt
xor
push
rolb
imul
adc
cmpsl
adc
pop
mov
cli
pop
mov
jmp
in
adc
idivb
and
or
int
fstp
and
or
xchg
int
popf
out
jge
pop
sbb
mov
daa
cmp
mov
pop
lret
sbb
into
sar
out
xor
add
fnstenv
fs
jg
repnz
and
sti
pop
pop
push
into
pushf
adc
popf
push
push
push
fwait
jo
cmc
andb
pop
xor
ficoml
cmp
cld
out
or
add
add
cmp
cmp
jge
xor
pushf
and
or
push
rolb
pop
pop
rclb
idivb
insl
or
mov
add
imul
adc
mov
hlt
cmp
subb
js
repz
jg
test
adc
pop
incl
pop
enter
xor
cmp
or
stos
sbb
sarb
stc
aaa
das
cwtl
mov
pop
mov
jae
pop
orb
jle
xchg
pop
push
add
push
or
mov
cwtl
arpl
fadds
movl
xchg
mov
jmp
iret
dec
inc
aad
outsb
and
stc
lret
cmp
ja
inc
icebp
mov
pop
cltd
inc
lret
jbe
out
ljmp
shrb
jo
mov
cmp
push
addb
mov
std
cmc
jno
jmp
loopne
hlt
xchg
inc
test
cmp
push
flds
stos
mov
nop
ds
inc
xchg
and
dec
pop
mov
shll
jmp
ljmp
popf
mov
jnp
xchg
or
lds
push
push
dec
fsubl
lods
addb
aam
mov
sbb
sahf
jg
fidivl
repz
es
cld
pop
push
std
sbb
push
idivb
fwait
das
mov
jp
xchg
addr16
movsl
jne
mov
or
rcl
xchg
mov
adc
fcomp
mov
xchg
jl
pusha
adc
lcall
add
xchg
js
dec
push
mov
jmp
xor
sbb
cmpsl
aas
pop
sub
stos
add
andb
add
mov
sbb
nop
xchg
inc
dec
in
mov
xor
mov
call
and
ret
negb
mov
or
movsl
lret
nop
clc
sbb
sbb
xorl
lods
adc
push
mov
dec
add
and
cmc
imul
popa
aad
jp
clc
lock
mov
xchg
adc
xchg
xchg
lcall
imull
ret
icebp
add
popf
into
lods
cmp
rorl
pop
fnstenv
push
cltd
or
repnz
and
in
sbb
xchg
fwait
cltd
lcall
adc
ljmp
rcll
mov
fnsave
cmc
lods
xor
and
push
pop
outsb
mov
mov
sub
jae
and
or
cmc
stos
std
jno
inc
fucomip
sbb
scas
out
rorl
dec
mov
mov
dec
xchg
mov
xchg
mov
inc
roll
aaa
dec
test
scas
mov
jo
mov
adc
jecxz
pop
movsl
add
repz
aad
push
pushw
out
fldt
dec
loope
push
sub
cmp
jmp
xchg
cwtl
sub
sbb
popf
mov
jecxz
jle
pop
test
jge
rcrl
lahf
mov
les
movsl
mov
loopne
enter
cwtl
shl
dec
movsb
sbb
inc
dec
jbe
sub
cmpsl
xchg
cmpb
xor
sbb
push
cmp
mov
sar
sti
sbb
iret
jge
and
or
sub
sarb
shrb
mov
sub
dec
add
lahf
jno
decb
add
add
mov
mov
mov
adc
ret
dec
jl
js
mov
rclb
mov
push
sub
pop
cli
mov
leave
xor
leave
pop
xlat
call
xchg
ja
rolb
jnp
mov
adc
fildl
les
mov
cmpsl
fwait
sbb
dec
repz
or
jl
and
das
orb
push
cmc
rclb
and
mov
idiv
cli
and
cmp
imul
mov
js
ja
in
cs
call
cmpsb
lcall
or
ja
sbb
pop
xor
adc
scas
sub
subb
aam
in
mov
out
mov
and
xchg
adc
jp
outsl
lcall
repnz
add
mov
roll
mov
jmp
xchg
cmc
stos
rcrb
xor
shlb
insl
pop
cltd
sahf
xor
mov
fsts
cmovg
and
sahf
mov
mov
aaa
bound
jne
xchg
aad
leave
es
mov
add
imull
cmp
push
daa
shlb
leave
add
push
aam
push
popa
sbb
adc
sbb
inc
jp
mov
nop
push
cmp
shlb
pop
gs
add
cmp
mov
leave
bound
loop
inc
test
fistpl
fprem
sub
xchg
inc
imul
loop
inc
orb
movsb
lahf
cltd
xchg
push
push
sbb
sub
inc
xchg
add
bound
push
in
mov
mov
in
cmp
xchg
push
lock
pop
push
stos
mov
mov
push
fdivs
inc
mov
sahf
jno
lods
mov
jp
sub
imul
inc
jg
clc
dec
inc
sub
dec
cmp
stos
movsl
stc
push
loope
pop
jl
add
xor
and
adc
loop
fiadds
insb
inc
pop
testl
inc
out
adcl
dec
pop
add
shlb
xchg
mov
add
lds
lcall
into
pop
xchg
or
and
jo
or
icebp
add
sahf
sub
sub
into
rol
add
push
std
bound
sbb
lcall
inc
mov
insb
push
and
sahf
iret
pop
in
mov
and
loopne
push
sbb
cmpsb
push
std
rorb
scas
push
in
push
flds
hlt
sahf
xchg
mov
pop
pop
add
push
testb
lods
jecxz
jo
in
cmp
out
xchg
add
dec
xchg
test
push
xor
addr16
stos
cwtl
in
cld
or
sub
mov
fldenv
mov
sti
xchg
cmovne
or
ds
add
mov
and
outsl
daa
push
shl
xchg
xchg
cwtl
cmp
ss
adc
and
scas
mov
test
xchg
inc
inc
loopne
mov
xor
sub
dec
flds
inc
repnz
dec
adc
xchg
hlt
dec
mov
int3
jmp
xchg
sub
push
idivl
sbb
cmp
push
push
outsb
mov
sahf
insb
or
stc
xchg
stos
jnp
ret
jmp
or
idivl
bound
stc
imul
add
sbb
test
xchg
jmp
test
adc
mov
push
jp
and
sti
jecxz
ja
shlb
xchg
inc
fidivl
testl
pop
or
and
add
jns
std
iret
or
pop
incl
inc
sub
in
mov
lret
stc
sub
dec
dec
mov
rcrb
push
push
cmp
add
mov
mov
in
and
xchg
pop
sub
mov
cld
adc
dec
mov
mov
push
mov
fadds
popa
int
outsl
loop
orb
test
pop
movsb
adc
out
jecxz
ja
push
pop
pop
sti
addr16
inc
lret
sbb
cmp
push
or
aaa
mov
rcll
push
daa
pop
mov
fmulp
ret
fs
cmp
push
push
dec
cmp
ds
mov
adc
or
out
adcl
aad
cli
lahf
xchg
add
es
jb
mov
popf
inc
sub
fnsave
stc
pop
push
andl
je
and
dec
dec
fadds
push
mov
fildll
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
jmp
jmp
movsb
jmp
sub
pop
repz
lds
dec
jl
js
in
repz
pop
mov
dec
cmpl
fldl
scas
mov
xor
fwait
inc
pop
cmp
adc
cltd
xor
add
jns
push
cmp
aaa
pusha
cmc
jmp
adc
repnz
mov
push
xchg
mov
xchg
pop
in
in
lahf
insl
cltd
xor
xor
push
test
xor
test
jle
xchg
jg
adc
leave
leave
arpl
xchg
jae
jo
dec
push
mov
stos
add
fdivrl
insb
shll
cwtl
call
stos
mov
in
scas
push
xchg
xchg
push
pop
xchg
test
add
mov
mov
pop
sbb
mov
dec
lock
jle
ljmp
xchg
dec
movsl
cs
fisttpl
lcall
in
adc
mov
mov
sti
lahf
lock
push
nop
xorl
test
aad
stos
repnz
into
mov
xchg
mov
add
mov
or
cmp
mov
std
dec
fdiv
bound
call
add
test
push
mov
sti
mov
jae
xchg
out
shll
incl
popa
mov
jbe
cltd
icebp
cli
xchg
stos
push
outsl
or
cli
nop
aam
rclb
int
inc
fimuls
sub
push
jbe
cmc
insl
push
mov
arpl
sahf
xor
xlat
or
loop
sub
mov
push
fsts
xchg
xor
mov
fistps
or
test
mov
jbe
mov
inc
lods
je
mov
pop
or
fwait
sbb
and
and
in
dec
sbb
lods
or
add
out
pop
xor
lret
sar
push
jecxz
sbb
test
add
cmpsl
mov
daa
inc
stos
xchg
hlt
subb
dec
adc
dec
push
movsl
arpl
negl
or
xor
decb
fnstsw
push
sti
fwait
pushf
lcall
add
xor
inc
xchg
sub
and
mov
loopne
imul
sti
xchg
repz
and
out
or
dec
lods
xchg
mov
popa
or
adc
pop
sub
cmp
inc
cs
leave
scas
nop
shll
pop
jae
pop
push
les
icebp
mov
inc
cwtl
orb
mov
push
out
push
or
ds
jl
popf
fwait
lret
push
push
fstl
mov
mov
push
bound
sub
and
pop
pusha
mov
outsb
push
mov
adc
das
cmpsl
lea
loop
fs
sub
jge
std
pop
data16
cmp
mov
push
outsl
test
hlt
sub
mov
xor
aad
xchg
cmpl
push
adc
push
mov
and
xor
loop
pop
cmp
inc
lods
ficomps
jo
out
mov
nop
push
in
ljmp
stos
sub
add
mov
xchg
mov
scas
cmp
pushf
mov
pusha
aad
push
and
sbb
lahf
lods
mov
cmp
lds
aas
sub
sub
test
pop
jo
pop
cmpsb
je
mov
int3
push
pop
sbbb
inc
push
sbb
subb
adc
cwtl
adc
movsb
xchg
addl
mov
xchg
mov
xchg
jno
gs
push
push
jne
aam
test
mov
pop
das
xchg
pop
das
aad
xchg
in
push
insb
and
jp
out
cmp
enter
dec
popa
mov
jp
out
push
aam
xor
cli
dec
leave
mov
and
popf
pop
fimuls
lods
push
fsubs
aam
test
add
add
push
inc
daa
push
adc
cltd
xor
cmp
mov
pop
mov
jo
stc
sub
sbb
or
and
sbb
jb
lock
push
int
stc
sbb
test
mov
mov
sub
jp
stos
jp
pop
sbb
sbbl
jno
push
rorb
sbb
dec
mov
push
stos
subl
fisubl
pop
in
shl
mov
and
stos
dec
pop
outsl
and
aas
leave
ficomps
mov
pop
gs
ret
and
mov
andb
fdivl
mov
imul
mov
xor
mov
jmp
pop
jno
popa
push
cmp
xchg
leave
cmp
jmp
sarl
js
jl
js
add
mov
push
lds
in
mov
push
test
push
iret
mov
jbe
push
jnp
mov
aam
pop
cmpsb
repz
sbb
into
lcall
pop
lcall
aaa
xchg
ds
dec
mov
aam
mov
neg
nop
mov
cmp
les
loopne
mov
subb
lock
arpl
loop
pop
sbb
cltd
test
std
lock
pop
fisubrl
lcall
cmpsb
lds
jmp
mov
and
loope
call
or
mov
adc
ficoms
cmp
pusha
fdiv
arpl
mov
hlt
sbb
clc
add
cmp
les
jle
xchg
sbb
or
push
or
repz
mov
imul
add
out
cs
mov
mov
lds
in
sub
call
inc
imul
xchg
and
outsl
adc
test
testl
sahf
push
cltd
push
lret
pop
mov
xchg
pop
jne
adc
cs
pop
sbb
sub
jg
out
pop
popa
fsub
dec
cmpb
mov
xchg
or
subb
jecxz
adc
mov
jmp
lock
push
clc
js
decb
and
xor
lret
cli
data16
cmp
je
push
fsubl
stos
sub
loopne
mov
jo
inc
push
inc
xor
test
xchg
or
mov
push
or
test
fidivl
lods
inc
sar
xchg
or
xchg
sahf
or
mov
push
mov
scas
lret
sbb
inc
sbb
fs
dec
hlt
cmpsb
arpl
loop
xchg
dec
xor
sbb
xor
cmpsl
stc
xor
push
enter
jb
push
jle
xchg
cmc
pushl
ret
fistpl
loopne
scas
inc
lds
pop
sbb
mov
dec
dec
pop
in
push
inc
cltd
cs
loope
loopne
dec
xchg
ss
popf
mov
mov
insl
inc
cmp
pop
nop
pop
stos
in
jmp
test
push
jo
lret
incl
mov
dec
cmp
sahf
dec
push
pop
inc
xchg
jecxz
repnz
cmp
cmp
sub
bound
stc
popf
mov
jne
push
mov
addr16
fwait
dec
and
das
and
cwtl
xchg
test
mov
jl
dec
bound
ret
dec
mov
out
and
or
mov
pop
not
adc
mov
lods
iret
test
xchg
lods
sahf
add
fists
push
or
jmp
test
sbb
pop
int3
pop
jne
std
and
movb
movsbl
cmp
das
and
lret
sub
pop
insl
sbb
std
mull
call
fwait
lret
das
or
stos
jne
ss
mov
out
mulb
push
push
cmp
jne
stos
sbb
sub
mov
sbb
sub
sub
nop
mov
cmc
stc
dec
fs
dec
test
insl
les
pop
mov
jno
loop
fbld
mov
cld
testb
lock
mov
rcr
loopne
fcompl
lds
lret
jbe
in
mov
ret
xchg
adc
shrb
es
leave
xchg
jo
push
cwtl
bound
rcrb
ss
inc
scas
mov
mov
movsb
aaa
inc
decl
adc
hlt
pop
out
xor
pop
ljmp
xchg
into
ret
jge
add
mov
leave
inc
and
fsubr
je,pt
mov
pop
out
imul
fs
pop
das
lahf
aas
arpl
outsl
dec
mov
xor
ficomps
pop
xchg
sahf
inc
repz
ret
mov
sub
xor
jge
mov
push
or
cmp
je
cmp
sti
mov
sti
pop
clc
sarb
or
mov
sbb
jp
push
sbb
lcall
loope
adc
jns
inc
or
xor
push
mov
movsb
mov
aam
mov
cs
or
shlb
scas
xchg
adc
xchg
sub
loop
icebp
rorb
add
enter
or
add
or
addb
or
jmp
test
inc
andb
out
lahf
cmc
insb
out
loope
dec
fdivrl
dec
jl
js
mov
dec
dec
jne
or
cmpsl
stos
or
pushf
sbb
jecxz
int
sahf
iret
jb
dec
dec
mov
mov
sbb
mov
scas
out
mov
add
xchg
or
rcll
xor
in
flds
imul
pusha
and
outsb
arpl
push
sahf
xor
das
mov
push
push
jbe
inc
sub
outsl
and
and
push
ret
cmc
movsl
mov
xlat
adc
adc
xor
inc
ja
mov
and
jns
pop
adc
stos
or
jmp
push
sub
jo
mov
fwait
push
inc
cmc
xor
lcall
or
stc
daa
lds
movsl
dec
inc
ret
dec
jbe
in
push
mov
addb
dec
push
mov
inc
mov
mov
xchg
lret
jnp
dec
stos
in
insb
add
or
icebp
roll
inc
push
xor
testb
out
and
cmp
adc
add
and
lret
leave
mov
inc
std
fwait
jno
in
in
es
xchg
xor
adc
adc
into
inc
cltd
pop
dec
test
aas
inc
inc
mov
push
or
mov
adc
out
insb
sub
sbb
aad
out
jnp
mov
outsb
push
dec
xchg
lods
aad
mov
inc
mov
out
cmpsb
xchg
xchg
stos
dec
pop
popl
or
mov
popf
cmp
fstps
jo
push
push
sbb
pushl
loopne
and
jg
push
gs
in
les
mov
outsb
stos
xor
xchg
jl
inc
mov
dec
push
imul
pushf
pop
pop
pop
or
jnp
push
xor
cli
jb
xor
lds
sub
lcall
dec
outsl
das
loopne
addb
popa
mov
sub
pop
je
fistl
dec
das
inc
cld
push
lcall
mov
out
xchg
daa
into
cmp
jne
stos
aad
mov
jmp
fwait
testl
inc
mov
dec
stc
aam
jg
pop
mov
cmp
imul
lcall
push
inc
movsb
sub
pop
popf
sbb
push
dec
xchg
test
push
xchg
adc
lahf
pop
inc
js
mov
mov
adc
cmc
xchg
and
call
dec
lea
jno
jmp
outsl
leave
in
and
test
insl
ret
mov
and
popa
subl
adc
cs
ja
aam
xchg
fistpl
aas
mov
xor
lahf
inc
jmp
push
cmpsl
or
pop
mov
pushf
int
and
mov
mov
scas
xor
jne
into
lahf
cmpsb
popf
pop
aad
into
push
xchg
rorb
cmpsl
ror
sub
movsl
jg
mov
shrb
outsb
cmp
call
test
and
jb
adc
arpl
cli
inc
mov
sbb
mov
mov
xchg
sub
sub
cmpsb
push
pop
jb
xchg
pusha
mov
lods
aaa
fmull
dec
es
or
fsubrs
push
add
mov
repz
sbb
xor
and
ret
add
lock
lret
mov
shl
jecxz
adc
rclb
mov
pop
sub
data16
push
add
lahf
clc
rclb
les
jp
ss
sbb
enter
add
aad
pop
push
inc
add
or
lods
roll
sbb
mov
ret
jae
imul
and
jbe
sbb
jo
cmp
shrl
and
pop
jae,pn
cmp
push
push
addr16
aaa
cmp
pop
mov
clc
inc
cwtl
mov
xchg
mov
mov
or
jl
mov
pop
test
or
js
sbb
or
add
popa
xor
jnp
inc
push
mov
movsl
cmp
mov
jmp
lea
lret
filds
test
iret
in
lock
sti
iret
mov
push
cltd
test
push
mull
or
pop
cmp
sub
mov
ja
xchg
dec
dec
mov
cmp
and
jb
xchg
std
lea
bound
fidivrl
push
push
mov
imul
mov
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
insl
mov
gs
int3
scas
fs
lcall
js
out
adc
and
xorb
loopne
mov
jno
imul
cmp
mov
dec
jbe
dec
cmpsb
pop
ss
sub
test
lret
test
cmp
in
sbbl
jl
mov
imul
orb
cmpsb
repnz
je
inc
inc
out
and
xor
in
sub
jns
mov
push
sub
cmp
push
movsb
cmp
pop
and
push
out
xchg
push
adc
lds
xor
loop
addr16
pop
ja
add
xor
hlt
jmp
jns
fisttps
mov
dec
insl
test
movsl
daa
iret
mov
daa
or
clc
notl
fistl
push
xor
rcr
sbb
mov
fnstsw
dec
mov
mov
push
add
movb
repnz
in
stos
sbb
push
xor
lods
bnd
and
pop
jle
lcall
adc
jmp
add
repnz
xor
lods
addr16
jne
xor
push
or
fcoml
daa
dec
sbbb
cmp
or
dec
es
mov
sbbb
adc
mov
and
stos
mov
lretw
test
jbe
push
mov
hlt
addr16
adc
push
xor
jb
push
jbe
and
pushf
subb
mov
ds
jmp
repnz
mov
andl
insl
add
jns
mov
add
shr
cmc
cmpsl
push
rorl
mov
jecxz
cmpsb
aas
fadds
pop
ljmp
and
mov
mov
cli
and
push
mov
or
aas
lea
aas
lods
jmp
outsl
imul
and
push
loop
or
xchg
pop
pop
test
rcrl
imul
cmp
jge
add
add
ret
jnp
inc
out
out
in
addr16
mov
push
cmpsl
adc
subb
hlt
rcrb
or
adc
push
jb
inc
int3
or
test
test
jne
adc
pop
cmc
lds
repz
inc
and
movsb
pop
dec
inc
mov
rcrl
dec
insl
push
inc
pop
add
adc
inc
sub
ud2
fcom
in
rolb
sub
mov
and
rolb
cmpb
andl
lea
into
into
xorb
mull
cmp
push
fsubp
push
in
mov
lods
ret
fs
adcl
lret
add
rorb
push
into
test
lock
adc
push
arpl
mov
xlat
aaa
lret
adc
fistl
pop
outsb
push
mov
xchg
in
mov
repnz
cmp
pop
add
dec
bound
jl
icebp
mov
fsubr
pop
test
mov
mov
sbb
fcompl
push
dec
rolb
clc
into
scas
mov
jmp
or
jl
xlat
mov
pop
andl
dec
push
dec
or
xor
adc
imulb
sub
adc
adc
icebp
lret
cmpsb
cmpsl
notl
adc
xor
and
cld
pop
jl
sub
lsl
add
mov
cwtl
incb
sub
xor
sbbl
push
inc
sub
sub
add
pop
dec
push
cmp
xor
and
jmp
jge
dec
inc
add
xchg
push
movsb
mov
pushf
and
into
imul
xor
dec
rcll
icebp
into
fsubrl
and
or
push
jns
sub
cld
or
mov
jae
leave
inc
add
cmovns
dec
ss
sbb
clc
test
clc
mov
aam
or
gs
sbb
cli
adc
incb
lea
jle
iret
push
sti
mov
xorl
push
nop
cmp
pusha
add
iret
add
sbb
insl
pop
leave
imul
pop
xor
fidivs
adc
dec
addr16
lds
js
je
loope
xchg
lock
and
inc
jle
jne
divb
push
pop
clc
fisubrl
fdivrl
loopew
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
jmp
cmp
xchg
es
mov
bswap
jp
dec
aad
js
dec
jl
js
out
idivb
mov
jo
sahf
pop
andl
or
inc
push
sub
mov
jno
jg
loopne
and
lcall
mov
xchg
leave
loope
and
imull
sbb
stos
xor
cmp
ljmp
movsb
adc
sub
sub
in
xlat
sbb
dec
dec
or
mov
add
mov
out
push
jne
inc
inc
jge
xchg
pop
pop
adc
cmp
dec
dec
dec
test
and
mov
add
add
test
jge
sub
iret
inc
adc
das
fnstsw
cwtl
aad
dec
inc
xor
wrmsr
lods
cli
out
sub
adc
push
ret
or
pop
sbb
xchg
push
mov
rcr
and
mov
mov
movsb
push
push
inc
inc
adcb
inc
rorl
fadds
popl
sti
inc
aas
not
test
icebp
cmpsl
cmc
pop
lret
push
clc
aam
adc
mov
pop
inc
inc
daa
pop
lock
jg
sbb
lret
in
or
pop
test
mov
inc
stc
std
jl
out
push
mov
adc
sahf
lret
movsb
outsb
and
jle
inc
mov
std
jmp
push
lods
gs
mov
leave
testl
and
mov
in
fs
in
enter
xchg
xchg
scas
popa
test
pop
sbb
pop
adc
jb
repz
jle
fdiv
and
adc
inc
leave
scas
mulb
mov
push
cli
in
stos
loopne
dec
xchg
je
shll
sbb
jbe
mov
sbb
cmp
in
out
sbb
inc
inc
mov
sbb
cli
jle
xchg
ss
adc
out
lock
int
dec
ficompl
in
xlat
mov
lds
movsl
out
mov
lods
add
cmp
mov
push
sbb
mov
gs
adc
mov
aaa
cs
mov
dec
fisubrl
fidivrs
cmc
mov
rorl
jl
rcrl
cmc
dec
mov
adc
pop
or
sbb
sbb
xor
lods
pop
adc
cmp
fdivl
test
add
or
sub
fisubrs
push
push
sarb
adc
dec
xchg
mov
push
mov
pop
cli
in
cmc
mov
push
jbe
sti
jno
pop
mov
test
mov
and
int
dec
push
test
fcomps
enter
push
mov
xchg
sarl
sbb
lret
loope
jp
xor
cmpsb
loopne
inc
nop
rcr
hlt
and
cmp
pop
push
xchg
inc
repz
enter
cmp
popa
sahf
and
fld
out
data16
mov
popf
arpl
sub
mov
inc
divb
fst
hlt
sub
dec
aad
mov
jbe
and
imul
add
sahf
add
add
shrl
sbb
js
mov
shl
cmpsl
dec
mov
mov
dec
inc
lds
mov
fwait
out
in
mov
ljmp
ffreep
loop
pop
fs
mov
xor
add
popf
mov
add
xchg
outsl
into
add
cmpl
adc
jae
mov
sbb
sub
sbb
adc
inc
fsubr
adc
push
and
insb
sub
mov
mov
mov
testl
inc
das
jb
xor
es
jmp
jbe
frstor
outsb
not
fwait
stos
sub
xor
mov
roll
das
jmp
popa
loopne,pn
cmpsl
test
cwtl
push
dec
pop
test
ja
fistl
cmp
adc
loopne
ds
hlt
lahf
loope
sbb
ja
dec
xor
and
in
jae
cmp
sbb
push
sub
adc
cmpsb
fsubl
cmpsb
adc
mov
test
rorl
clc
sub
adc
into
js
lods
lods
push
nop
xchg
aaa
aaa
clc
repz
pop
sub
aad
and
sub
sub
mov
mov
jp
paddd
and
into
jl
arpl
pusha
jp
add
sti
or
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xor
ret
push
mov
jmp
scas
and
icebp
stos
cltd
mov
xor
ss
and
js
sub
lods
cmpsl
inc
push
ljmp
sahf
mov
mov
mov
xor
std
int3
test
jecxz
loopne
call
mov
pop
in
loop
pop
sub
aaa
imul
lea
jbe
fisttpll
fmuls
pusha
fcoms
sbb
enter
pop
std
sbb
lea
mov
mov
daa
daa
sar
xchg
inc
dec
adc
jecxz
stos
int
inc
bound
es
add
jno
mov
sub
xlat
or
cltd
fwait
push
cli
mov
inc
and
enter
adc
loop
fidivrs
pop
adc
add
mov
out
add
mov
js
mov
notb
test
int
idivb
mov
sbb
ficompl
aad
and
mov
cmp
sahf
cmpsl
sub
bound
xchg
adc
or
xor
inc
mov
mov
aaa
mov
outsb
pop
mov
cmp
jecxz
lods
jl
scas
fildll
dec
mov
rcrl
jns
call
sub
pushf
adc
popf
sbbb
insl
imul
add
xor
inc
addr16
ja
mov
inc
inc
cmp
mov
les
pop
sahf
cmc
cmpsb
cld
jno
push
aad
das
mov
and
imul
cs
lea
sub
rolw
fisttpll
pop
mov
mov
push
cli
ds
pop
adc
loop
orb
aam
and
insb
mov
or
fiaddl
dec
ds
adc
jge
cmp
nop
pop
pop
xor
bound
stc
fmul
adc
mov
xchg
xchg
lret
lds
jne
stos
rolb
inc
repnz
movsb
mov
cld
adc
repnz
cwtl
mov
and
stc
add
dec
xor
or
ficoms
iret
inc
std
aad
pop
mov
push
out
clc
pushf
mov
push
add
ret
jecxz
cs
inc
lret
das
cmp
stos
das
sahf
inc
int
add
rcrl
ljmp
jae
and
mulb
jb
pop
lcall
inc
and
divl
jmp
xchg
xchg
mov
cmp
and
int3
mov
push
sbb
es
mov
and
pop
adc
insl
imul
mov
icebp
xor
pushf
imul
jmp
mov
repz
jbe
or
nop
cmp
cmc
add
test
les
nop
cmp
adc
mov
push
sub
int
data16
clts
adc
xchg
rcl
loop
and
dec
xor
sub
pop
imul
push
js
leave
out
jbe
xchg
pop
xchg
mov
orb
ds
int
jp
sbb
dec
movsl
lds
dec
loop
das
nop
push
int3
add
shlb
inc
cmp
fildl
dec
jb
dec
cmpsb
push
fisubrs
mov
lds
data16
add
mov
mov
sarb
sub
xchg
dec
sbb
and
xor
mov
hlt
imul
mov
push
cmp
ja
fstpl
data16
xlat
inc
inc
loopne
sbbb
sahf
pop
adc
mov
mov
cmp
cmp
das
cmpsb
pop
ljmp
jb
sub
jl
cmpsb
adc
cmp
push
push
loop
loope
test
dec
xor
jg
lret
fs
in
fs
cmp
adc
ss
pop
add
loope
ss
push
push
xor
mov
mov
movl
not
mov
sbb
push
mov
or
xor
orl
mov
sbbl
push
movl
mov
sbbl
add
cmp
movl
je
mov
mov
sub
xor
mov
sub
sbbl
add
xor
xorl
add
movl
cmp
movl
ja
push
movl
jmp
mov
adc
mov
mov
subl
xor
adc
add
xor
mov
addl
imul
sub
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
mov
movl
push
mov
mov
mov
jmp
push
test
pop
gs
imul
shl
js
pop
jl
js
call
xor
adc
test
mulb
mov
xor
jb
stos
dec
sbb
pop
ss
and
fbstp
stc
cmp
mov
cmp
movsb
add
sbb
mov
add
outsl
push
sub
push
lcall
cmp
outsl
pusha
cmpsl
mov
adc
lods
inc
mov
add
xchg
dec
les
mov
adc
ss
paddusb
pop
inc
in
ja
cmp
sub
push
or
sub
cli
adc
icebp
xchg
aas
mov
test
mov
out
rcll
mov
pop
mov
add
sub
test
cmp
adc
inc
sbb
fsubrs
sbb
and
mov
orb
insl
push
fisttps
xchg
jmp
or
mov
outsb
scas
jp
inc
out
dec
mov
leave
jmp
ljmp
adc
jp
pop
das
xchg
or
fisubs
add
adc
mov
sbb
fdivrs
bound
add
jno
cmpsb
dec
xor
adc
jnp
mov
das
xor
inc
jl
push
or
test
lret
test
push
xor
movsl
lret
push
mov
cmpsb
xor
cmp
inc
loop
cli
pop
int
int
out
sbb
jnp
push
rcl
rclb
and
imul
push
or
stc
mov
pop
cld
mov
mov
xchg
mov
fxch
adc
sbb
xchg
inc
jg
push
stc
cmp
inc
pop
cmc
push
in
sbb
pop
mov
fsubrl
pop
pushf
in
lahf
mov
stc
dec
push
dec
inc
mov
cmp
enter
popa
aad
gs
mov
fildll
dec
int
sub
int
test
push
loop
xchg
dec
pop
pop
rol
xchg
pop
sti
push
xor
sbb
lods
scas
pop
aad
movsl
vmovss
popa
rolb
in
jae
cmp
push
sahf
es
xchg
pop
inc
sbb
xchg
jne
cmpsb
cmp
jg
aad
mov
inc
mov
inc
gs
repnz
das
fistpll
sti
pop
xchg
aas
and
mov
jne
mulb
adc
pop
jmp
pop
dec
mov
lods
push
pop
jmp
lahf
es
sub
cmp
fdivl
popf
sbb
mov
inc
xlat
inc
sub
stos
fisttps
pusha
insb
scas
mov
notb
pushf
in
fwait
in
adc
out
add
test
es
sbb
cmp
inc
xchg
pop
sbb
push
pop
ja
pop
jmp
xor
mov
mov
dec
xchg
mov
pop
add
jg
ret
push
inc
inc
incb
rclb
aad
cmpsb
cld
jne
pop
cltd
iret
mov
xor
xchg
jecxz
mov
sar
xor
jo
add
iret
inc
mov
push
mov
ret
cmpsb
fs
push
mov
ret
add
pop
add
xlat
mov
fstl
or
mov
dec
leave
decl
push
push
pop
sbb
adc
test
sbb
cmp
rcrl
loop
stos
inc
sbb
orb
jge
cmp
cmp
loope
dec
sti
mov
push
sbbb
push
insb
or
fildll
mov
loope
out
cmp
xchg
es
scas
lock
imul
sub
test
dec
ja
jb
sbb
ds
dec
in
addb
and
cmp
jmp
adc
pop
adc
lahf
push
mov
mov
loopne
rcrl
pop
lret
mov
call
fadd
pop
gs
pushf
sub
std
jno
repz
or
pop
jl
mov
jp
inc
inc
inc
sbb
mov
dec
fildl
fstp
rcrb
push
pop
mov
sti
push
aaa
cmp
xor
or
dec
and
jge
or
lds
addr16
jle
mov
xor
bound
sbb
mov
add
aaa
mov
cmp
dec
mov
jg
ret
xchg
push
mov
adc
xchg
cmp
pop
xchg
xor
jb
movb
inc
push
sbb
mov
mov
mov
or
movl
cmp
movl
je
mov
xorl
mov
sbbl
mov
orl
sub
xor
cmp
jne
andl
mov
mov
orl
xor
jmp
adc
loope
mov
push
dec
addr16
loope
in
js
jl
js
or
push
push
or
mov
ljmp
push
insb
jge
ret
add
fisubrs
les
cmp
or
popa
cmpsb
aam
or
xchg
lea
jle
and
clc
das
mov
mov
inc
mov
mov
add
sahf
mov
addr16
sahf
lods
sbb
mov
jne
out
scas
jmp
jo
push
lcall
adc
cwtl
testl
in
push
push
or
lock
fiadds
push
fildll
out
mov
push
mov
lds
jg
fidivl
scas
not
mov
add
xchg
xor
cmp
push
jp
sahf
ror
push
mov
mov
sub
sahf
push
pop
idivl
adc
arpl
dec
pop
pop
mov
push
mov
and
dec
mov
or
mov
push
jl
push
cmp
mov
add
mov
sub
outsl
cmp
pop
outsl
icebp
or
mov
xchg
push
aaa
cmp
cmpsl
and
mov
mov
jmp
stos
daa
adc
add
push
orl
arpl
mov
mov
cld
or
jl
cwtl
push
dec
fldt
and
sbb
mov
scas
pop
cmp
aas
xchg
dec
hlt
int
mov
mov
inc
jb
stos
pop
fmuls
sub
jge
stos
add
cmpsl
and
xchg
call
dec
mov
loopne
sub
rcrb
fbstp
in
stc
dec
fldl
sbb
jb
movsb
jmp
lcall
add
xor
mov
fwait
insl
xlat
aad
fcomip
aad
sub
fbstp
dec
jmp
inc
push
and
inc
xchg
pop
bound
lret
mov
ror
inc
add
mov
out
enter
lret
pop
inc
sub
or
xor
in
push
and
in
jno
and
mov
push
jge
insl
out
rorb
mov
lahf
pushl
cmp
leave
rcrl
cld
and
orl
xor
hlt
inc
fwait
addr16
dec
icebp
push
lret
cltd
es
sbb
inc
cmpsb
xchg
sub
and
or
movsb
fdivl
cmp
into
jns
or
cmp
cltd
push
fs
inc
andb
xor
fisttpll
fnstsw
jb
jmp
xchg
lock
mov
sub
sub
aas
call
leave
ret
mov
mov
mov
popa
mov
cwtl
pop
clc
cmpsl
jecxz
cbtw
ljmp
fnstcw
pop
aas
jg
inc
repnz
xor
inc
mov
pop
jecxz
cmp
cmc
test
fimuls
and
xor
fwait
sbb
test
jg
or
fmul
sbb
rorb
sbb
mov
jmp
loopne
out
outsb
lods
mov
ret
jle
lahf
int3
scas
jnp
dec
ret
outsl
fs
mov
and
mov
outsl
sub
into
imul
mov
les
inc
and
pop
jne
stos
jne
out
pop
fsts
xchg
add
bound
jge
adc
jo
pop
out
adc
mov
dec
mov
push
decl
mov
push
sbb
sbb
pop
scas
dec
ret
mov
cmpsb
sbb
gs
sbb
rolb
icebp
push
addb
sbbb
mov
jge
mov
add
pop
and
adc
arpl
and
fcompl
dec
xchg
adc
mov
dec
or
xchg
clc
leave
xchg
sbbl
and
cmp
inc
mov
pop
popf
outsb
movsl
mov
lds
pop
xor
dec
dec
ds
adc
sub
xchg
mov
and
lea
xor
jle
in
mov
daa
lret
scas
ret
push
push
push
push
cmpsl
xlat
add
mov
loopne
int
outsl
xchg
jge
xor
mov
orb
dec
mov
js
mov
aam
push
adc
fdivrp
decl
sub
decl
nop
xor
setl
divb
in
lea
ja
xchg
imul
cmpsl
inc
ljmp
and
sahf
stc
ss
inc
ljmp
sub
ds
bound
cmp
sub
xor
add
add
adc
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
push
mov
add
jmp
inc
insb
inc
sub
popa
adc
incb
js
pop
jl
js
nop
xor
sar
sbb
and
fildll
mov
leave
xchg
je
xor
andb
add
insb
cltd
out
pop
push
lret
stos
cli
mov
rorb
lcall
hlt
xchg
pop
xchg
fdivs
mov
fdivrs
fcmovnb
or
mov
out
sub
gs
mov
dec
aad
out
inc
pop
lock
sahf
scas
sbbl
push
iret
and
daa
popa
lret
mov
aas
stc
fwait
call
push
arpl
and
test
mov
dec
daa
repz
outsl
ljmp
test
sub
leave
std
aam
out
xchg
arpl
mov
shlb
jo
sub
mov
ficoml
inc
mov
dec
lret
and
adc
gs
mov
shrd
mov
pop
mov
lds
push
mov
inc
mov
hlt
dec
dec
sub
sbb
into
movsl
xor
arpl
mov
dec
test
mov
xor
push
push
sub
pusha
ljmp
int
insb
mov
xor
jmp
hlt
mov
les
xchg
lret
and
in
and
or
jb
out
leave
push
ss
xchg
push
testl
dec
cwtl
js
sbb
sub
cmpsl
mov
xchg
pusha
mov
mov
push
rcl
xor
fisubl
fnstsw
rcpps
or
test
add
ja,pn
test
int3
pop
pop
pushl
and
rcrl
loopne
jecxz
hlt
jl
push
jne
jp
ja
rol
std
push
jg
jmp
movsl
xchg
cmp
xchg
popf
and
mov
lret
adc
bound
insl
jb
xchg
fcoms
push
inc
bound
lcall
shll
fwait
jbe
daa
jmp
cltd
imul
xchg
sub
test
call
mov
fucomip
jmp
test
pop
dec
pop
pop
rorb
and
cmp
xchg
cltd
cmpsl
cmp
cmpsl
xchg
iret
shlb
mov
loope,pn
push
xchg
rcr
shlb
fbstp
xchg
jb
jmp
popa
cmp
mull
out
insl
lea
ds
dec
adcl
add
bound
push
aas
test
pop
adc
fmul
jmp
jae
sub
adc
jno
mov
lea
mov
ss
icebp
std
mov
lret
push
lret
mov
or
jns
xor
push
xchg
icebp
aas
sbb
js
inc
xchg
rcl
imul
repnz
pop
filds
test
pushf
xor
stos
sti
fsin
daa
test
xchg
add
mov
repz
in
fdivs
ss
pop
enter
repz
lret
mov
push
pop
ficomps
lods
pop
ret
arpl
mov
pusha
cs
hlt
xor
fwait
mov
adc
cmp
mov
mov
pushf
lret
jl
ds
dec
int3
nop
lock
pop
mov
bound
mov
ss
push
inc
enter
mov
and
cli
stos
jnp
pushf
add
xor
xor
pop
adc
add
and
pop
jl
cmpsl
loopne
xor
movsb
mov
std
call
je
pop
daa
pop
xor
pop
gs
mov
insl
jle
jmp
call
sub
shll
sub
sub
jns
xor
pop
cmp
pusha
into
lods
loope
stos
cmp
xchg
mov
jnp
movsb
daa
mov
pop
fbld
jnp
jns
pop
out
loope
inc
ficomps
inc
sub
es
sahf
in
adc
mov
and
jecxz
inc
stc
loope
mov
in
pop
cmp
xchg
lret
xor
mov
insl
push
mov
test
mov
test
out
loopne
mov
add
insl
pop
in
rorb
pop
test
jmp
pop
movsl
or
addr16
dec
dec
lret
mov
jge
in
in
data16
hlt
jbe
fs
lock
ljmp
xor
xchg
and
aam
mov
jl
in
and
scas
jns
ja
xor
mov
xchg
addr16
jg
ret
and
jecxz
ds
jns
aas
dec
xor
dec
xlat
dec
ja
scas
testl
xor
mov
add
pop
cmp
jne
mov
mov
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
sub
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
mov
sub
mov
sub
movl
movl
addl
jmp
add
ds
sbb
sbbb
js
jl
js
outsb
inc
cmpsb
inc
mov
xor
push
rcrl
shr
adc
jp
lds
ljmp
cmp
mov
inc
and
ficoms
adc
rcll
sub
test
sub
add
or
daa
daa
and
jnp
adc
push
mov
call
lret
inc
das
jae
in
jnp
rorl
and
stc
lret
inc
inc
jcxz
inc
pop
lea
mov
dec
cwtl
stos
lds
inc
ret
lret
xor
gs
mov
dec
push
roll
xchg
les
push
dec
js
lcall
scas
std
shlb
cli
and
mov
sbb
cmpsb
xchg
pop
lahf
cld
aad
xchg
adc
mov
dec
jne
lahf
pop
mov
pop
sti
andl
sti
lret
sahf
or
cmp
loope
mov
pop
xchg
xor
stc
mov
pop
sbb
jnp
and
push
xchg
stos
mov
add
inc
add
mov
out
cli
push
ret
cvtpi2ps
adc
add
das
popa
inc
out
test
dec
out
and
sub
arpl
adc
mov
test
dec
jmp
inc
sbb
lods
inc
andl
fildll
mov
push
aaa
mov
stos
xor
mov
cmp
mov
jne
xchg
hlt
push
dec
jo
in
addr16
adc
push
lods
clc
sbb
jnp
pop
popa
mov
sub
and
pop
pop
es
popa
insl
inc
add
jne
shrb
lahf
fcmovbe
mov
mov
mov
mov
and
popa
movsl
adc
jo
sbb
cmc
and
ds
cmp
outsl
mov
cmp
push
call
push
call
repnz
insb
test
xchg
cmpsl
adc
addr16
lds
jmp
inc
jbe
xor
and
xchg
sub
std
pop
jg
insl
stos
cmp
lock
popf
dec
call
repnz
movb
mov
push
popf
mov
dec
bound
add
jge
shrb
rcrl
ret
sbb
test
into
test
repz
push
mov
mov
xchg
push
ja
add
or
jecxz
pusha
idiv
lret
rolb
clc
xor
add
inc
shrb
xorl
pop
xchg
cwtl
insb
xchg
push
mov
pop
addr16
cmp
outsb
das
sarl
xchg
xchg
popf
sub
xorb
shrw
push
xchg
xchg
iret
adc
cmpsb
xchg
jbe
sub
jmp
mov
push
xlat
pop
push
cmc
jae
add
or
popf
adc
ja
sub
lahf
std
daa
cmp
pushf
shlb
xchg
int
sub
stos
test
pushf
sbb
cs
mov
mov
and
mull
xchg
cld
dec
add
cmpb
mov
mov
mov
add
cmpsl
cwtl
sbb
test
adc
pusha
jnp
sbb
loopne
sub
pop
push
and
push
pop
sbb
cmp
xchg
pop
std
mov
push
or
jb
daa
sub
xlat
sahf
pop
cmp
scas
sub
in
mov
sbb
jp
aam
push
jg
fsubl
nop
cmp
xor
and
hlt
stc
lds
xor
mov
imul
cmp
mov
fcomp
mov
popf
cli
lahf
pop
mov
xchg
fcomps
fwait
adc
mov
cmp
xorl
addr16
sub
mulb
imull
aaa
push
lods
mov
mov
xor
mov
or
mov
andl
xor
mov
adc
mov
sbb
jmp
sti
mov
dec
scas
jns
imul
xor
js
jo
js
dec
negl
lock
pushf
loop
ss
repz
jne
push
add
lcall
js
and
mov
jp
rolb
push
mov
adc
push
inc
insl
lock
dec
mov
pop
inc
mov
or
rorb
add
fcompl
dec
rcrb
push
inc
xchg
cli
cs
insb
mov
cltd
sahf
inc
popa
lret
xor
add
jns
pop
or
jp
mov
mov
push
or
cli
icebp
mov
pop
and
cmp
adc
push
ss
jl
xchg
sarl
inc
andb
sub
in
sub
push
lods
cld
pop
cmp
and
cwtl
xor
pop
cmpsl
inc
repnz
sub
sbb
fcompl
jo
mov
mov
jo
xchg
mov
xor
in
mov
xorb
mov
cltd
icebp
outsb
cmpsb
cmp
adc
push
dec
in
pop
movsl
fimull
jle
dec
movsl
ja
or
add
test
push
fnstenv
push
shl
dec
cmp
add
xchg
adc
push
insl
out
rolb
cmp
push
fs
cltd
mov
lahf
jbe
sub
insl
sub
and
leave
sbb
or
sarb
adc
pop
sbb
popf
hlt
fistpl
lods
fwait
xchg
mov
mov
testl
adc
mov
popa
mov
jo
adc
inc
or
sub
sarb
pop
dec
add
test
div
add
mov
mov
add
push
mov
inc
push
repz
cmp
lcall
and
adc
fs
push
fs
test
orl
in
dec
lods
inc
int3
push
ljmp
popa
stos
push
iret
cmpsl
mov
inc
add
sbb
push
mov
pop
bound
push
jle
jbe
cmp
mov
sbb
lret
jbe
iret
jae
dec
lret
mov
divl
frstor
xchg
iret
sahf
mov
lahf
subl
movsl
test
pop
lahf
mov
test
sub
or
mov
aaa
xor
mov
repnz
push
mov
loopne
push
push
add
add
fs
inc
int3
call
int3
cmc
repnz
mov
iret
scas
ret
or
lods
pop
repz
movsb
mov
push
stos
movsb
cmpsb
mov
pop
or
or
inc
pop
sub
mov
mov
in
nop
inc
iret
loop
iret
add
ret
push
aam
mov
orb
fs
jle
lock
shll
frstor
ret
or
mov
les
push
outsl
into
xchg
fisttpll
mov
gs
xor
pop
icebp
lods
aaa
imul
xchg
repnz
mov
push
or
inc
mov
ret
arpl
cltd
adc
daa
scas
test
mov
push
sbb
pop
sbb
into
xlat
lret
and
inc
jmp
xor
lcall
ja
cmc
mov
push
adc
aam
mov
pop
cmp
mov
mov
adc
nop
jne
outsl
sbb
xor
jmp
int3
xchg
lods
arpl
insb
lcall
or
sar
ljmp
movsb
cmp
out
mov
push
into
xchg
outsb
inc
scas
jns
cmp
aas
xchg
dec
jns
shlb
or
and
fiadds
cmp
xchg
and
inc
imul
mov
adc
lret
or
pushl
adc
pop
add
in
add
mov
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
sub
and
mov
not
xor
sbb
add
mov
sbb
movl
movl
movl
movl
adc
movl
xor
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
or
mov
xor
mov
orl
add
movl
cmp
movl
jmp
mov
xchg
mov
jno
popf
sbb
mov
jo
js
push
mov
pop
lods
dec
jb
cmc
sti
sbb
cmp
shlb
fsub
pop
lods
hlt
divl
pop
push
push
adc
arpl
lock
xchg
pop
cmp
in
sbb
outsb
xor
gs
sub
filds
adc
movsl
cmp
xchg
arpl
cmp
push
movsb
cmp
in
imul
icebp
mov
mov
mov
dec
aam
dec
ret
or
mov
dec
cmpsl
jl
aad
pop
shrb
inc
addr16
mulb
popf
in
fs
push
fs
cld
mov
scas
popf
dec
adc
push
xor
push
imul
mov
mov
pop
sub
push
mov
cli
or
xlat
insl
sub
fisttps
xor
mov
bound
js
lret
das
lds
jo
push
fs
test
hlt
int3
sub
das
or
and
sbb
and
pushf
std
dec
sahf
or
dec
push
sub
inc
or
push
out
stos
gs
fisubl
mov
in
sar
mov
repnz
fucomi
mov
mov
sub
in
xrstor
pop
mov
add
insb
in
es
ret
popf
in
shlb
ss
cs
int
or
test
ja
sbbb
and
pop
pop
inc
and
in
out
xor
push
enter
dec
je
mov
and
sbb
jp
fistps
sub
in
dec
or
lods
pop
cmp
aam
inc
xlat
dec
cmpsl
cli
xor
mov
mov
xor
lds
enter
das
clc
scas
pop
xlat
mov
nop
push
and
ret
jg
sub
divl
jmp
out
push
js
lea
jb
dec
je
add
or
xor
dec
imul
adc
sbb
sbb
mov
inc
adcb
pop
push
mov
das
sub
inc
dec
inc
mov
aam
faddl
cmpsl
int3
sbb
add
ljmp
or
sahf
data16
sbb
sbb
in
outsl
push
pusha
cmp
stos
dec
jl
jae
les
scas
cmp
popa
xchg
rolb
cs
and
scas
jo
das
push
dec
inc
fisttpl
cltd
std
loop
rcr
cmp
test
mov
sub
dec
lds
jecxz
push
aaa
sub
xchg
mov
push
sbb
pushf
xor
ja
jnp
push
mov
sbb
inc
icebp
lret
inc
adc
sti
add
push
add
dec
adc
sub
enter
rorl
sub
leave
xchg
lods
push
mov
loopne
insl
sbb
enter
push
jno
fstpl
xchg
in
add
and
daa
cmp
mov
hlt
or
inc
pop
hlt
jmp
ds
sub
ss
add
loop
pop
decl
mov
fs
ds
test
lea
pop
push
loop
in
test
fs
adc
lods
pushf
push
adc
pop
loopne
out
mov
cmp
push
xchg
sti
dec
add
push
adc
cmpsb
int3
mov
or
mov
xchg
inc
xchg
outsb
mov
sub
sbb
fldcw
xchg
cwtl
jae
pop
jge
push
push
adc
push
pop
mov
inc
xor
int3
out
orl
imull
mov
dec
cwtl
mov
push
aas
rolb
rorl
and
xor
popa
xchg
mov
push
sub
addl
aam
push
pop
add
mov
mov
mov
je
movl
push
movl
jmp
add
mov
mov
orl
sub
mov
xor
add
cmp
jb
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
dec
xor
notl
xor
mov
mov
add
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
add
add
jmp
insb
mov
cltd
pop
shr
and
mov
js
jl
js
paddw
mov
xor
gs
fistpl
je
xchg
rclb
outsl
push
or
mov
daa
lock
insb
in
nop
sahf
movsl
movsb
sub
mov
ja
shrb
or
aaa
int3
mov
arpl
pop
and
iret
pusha
jno
popf
fwait
insb
or
clc
addr16
pop
loope
inc
aas
mov
ljmp
mov
or
rcrl
add
lock
lds
pop
negl
and
mov
clc
decb
aaa
jp
popf
jmp
xor
call
push
cmc
xchg
dec
in
push
lcall
mov
cwtl
xchg
cmpsl
push
pusha
jmp
int
in
add
lahf
adc
add
xchg
push
data16
inc
pop
fldcw
out
adc
ret
ja
mov
cltd
test
sbbl
jle
adc
lcall
mov
ret
cmpsl
aad
add
nop
ja
int3
add
push
inc
fldcw
fiaddl
inc
fcmovb
dec
loope
inc
mov
jle
sub
pop
sub
inc
test
adc
ljmp
sti
arpl
xchg
and
push
sub
pop
xchg
out
sbb
cli
mov
xor
mov
mov
mov
cmpsl
and
adc
sub
into
push
xchg
cmp
aas
cmp
pop
dec
jecxz
pushf
pop
sbb
icebp
sub
dec
pop
test
sar
rcrl
xor
jle
lret
and
dec
push
inc
mov
dec
mov
push
xor
or
sbbl
mov
pop
and
sbb
jne
nop
add
mov
sbbl
cmpsb
nop
lret
jle
xor
add
mov
iret
xchg
clc
xchg
bound
xchg
or
sbb
xchg
inc
push
lret
cmovne
cmc
mov
xor
xor
mov
mov
mov
inc
fnstsw
popf
bound
sub
add
leave
test
xor
repnz
outsb
inc
sbb
in
mov
xor
pop
adc
and
mov
lds
adc
fdivr
or
pop
cmc
xchg
test
xlat
pop
xor
mov
or
cmp
xchg
mov
adc
jae
ret
lret
add
testb
jmp
adc
cmpsb
mov
ljmp
push
loop
sbb
add
cmc
dec
sub
int
mov
push
cmp
les
and
push
icebp
jmp
dec
stc
push
in
rsm
jmp
add
sbb
adcb
pop
push
andb
jp
fldcw
outsb
scas
push
pop
pop
subb
cmp
inc
mov
loop
fs
cli
stos
xchg
out
icebp
pushl
push
repz
jo
daa
sub
aam
adc
nop
adc
and
cmp
test
ret
mov
inc
bound
lret
adc
nop
dec
or
fidivrl
imul
inc
sub
add
pop
xor
jne
sub
fs
push
cs
sbb
scas
leave
das
push
into
scas
inc
adc
push
jo
popa
out
lds
push
sahf
adc
or
sbb
push
in
xchg
mov
mov
push
xchg
jle
jae
inc
lahf
sbb
xor
loopne
mov
lds
shll
nop
ss
xchg
sub
ficoml
cli
mov
testb
push
pop
shll
xchg
xor
mov
fidivs
jne
mov
je
pop
stos
sbb
mov
mov
popa
sub
setl
cmc
std
push
imul
subl
mov
mov
sub
movl
cmp
movl
ja
andl
mov
xor
orl
add
movl
jmp
xorl
mov
mov
xor
addl
xor
or
add
add
imul
mov
add
mov
sub
movl
cmp
ja
mov
jmp
movl
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
jmp
push
cmp
into
xor
outsb
mov
cmpb
jl
js
dec
pop
or
mov
xor
xchg
cmpsl
ljmp
xor
sbb
roll
adcb
dec
out
or
mov
push
dec
pop
shrl
cld
adc
sarl
addl
test
xchg
jo
imul
pop
sub
test
cmp
cld
inc
lods
pop
ss
push
movsb
push
xor
xor
ja
xchg
insl
mov
fidivrl
int
xchg
jecxz
negb
add
xchg
mov
mov
add
pop
jmp
das
pop
pop
jge
jne
stc
pop
subl
and
pop
arpl
stc
cmp
mov
jle
xor
mov
in
inc
lea
popf
lret
push
push
lret
popf
sbb
sub
icebp
jl
mov
ss
push
dec
js
add
or
out
push
dec
mov
or
inc
dec
inc
mov
lret
mov
sbb
loopne
sbb
test
inc
push
dec
fldt
movq
stc
xchg
es
push
fsub
mov
cli
loop
test
leave
push
int
in
pop
lods
push
lds
lods
mov
out
jmp
and
rorl
sbb
push
adc
sub
or
adc
mov
sub
adc
sub
pop
jg
inc
sub
pop
int3
out
mov
dec
dec
push
andl
enter
xorl
sub
data16
jge
mov
cmc
inc
and
sbb
adc
fisttpll
pop
lahf
mov
orb
and
adc
mov
daa
gs
xchg
push
xorl
or
push
aad
scas
insl
and
stos
add
fidivrs
ds
dec
sbb
push
dec
cmp
push
mov
fsubrs
and
xor
and
leave
inc
mov
xchg
fidivs
jne
mov
pop
dec
sbb
insl
daa
adc
subb
xlat
jo
mov
mulb
in
or
mov
xchg
dec
fists
pop
add
inc
push
sbb
adc
fisubs
xchg
or
fcmovne
push
push
cmp
and
clc
imul
mov
and
cmp
out
push
shll
clc
or
mov
test
fnsave
rcrl
aas
xchg
xor
push
loopne
aad
mov
jmp
lods
dec
mov
cmp
out
imul
mov
adc
mov
inc
xchg
out
jg
xlat
inc
push
fwait
jbe
sar
bound
out
cmp
xor
mov
int
jp
inc
pop
sub
mov
mov
loopne
push
xor
test
imulb
and
mov
sub
sub
mov
enter
imul
jmp
jae
mov
mov
xchg
sbb
or
pop
lods
or
imul
xlat
inc
adc
xor
jb
and
cmp
sahf
or
fldcw
repnz
shlb
call
test
mov
aad
xchg
fadds
xchg
xchg
es
push
push
xadd
incl
clc
loopne
enter
fstps
and
mov
pop
mov
imul
lcall
mulb
pusha
push
pop
mov
ret
cld
adc
pushf
push
popf
jo
std
xor
leave
imull
mov
addr16
pop
xorb
mov
pop
popf
adc
push
dec
pop
xchg
test
ds
std
std
insl
and
loopne
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
cs
push
jns
loope
cltd
push
rol
jmp
xchg
jo
js
cmp
daa
jle
cmp
stc
mov
fmuls
clc
sub
les
adc
xor
sbb
mov
sub
shlb
stos
scas
andl
jl
pop
pop
add
or
mov
push
test
sub
ret
sbb
mov
jecxz
jb
popf
mov
fistps
mov
xor
ds
and
cmp
mov
mov
lods
icebp
test
sbb
add
jl
inc
jmpw
push
push
mov
cltd
push
loope
shlb
cli
lods
adc
xor
mov
dec
jbe
scas
scas
xor
pop
and
push
imul
inc
dec
xor
dec
cmp
inc
ja
sub
xor
sub
pop
mov
std
sbb
pushf
add
xor
xor
bnd
add
or
xchg
mov
jae
inc
xchg
cmp
imul
imul
cmp
mov
jmp
inc
or
aad
push
inc
lods
ja
xor
fdivl
dec
sbb
repnz
lahf
out
into
jecxz
cmp
mov
pop
xchg
das
andb
mov
sbb
add
ror
mov
mov
add
sbb
sahf
loopne
mov
cmp
loop
call
xor
lock
cli
xchg
mov
jmp
out
sub
pusha
mov
xchg
cmp
rorb
std
test
gs
popa
mov
mov
sub
mov
ret
add
call
push
je
aad
out
add
cmp
orb
es
rolb
mov
inc
xor
out
or
xchg
aas
shr
xor
jae
cli
adc
mov
lcall
insl
fsubrs
xchg
in
cmpsb
xchg
jbe
icebp
dec
movsl
insl
outsb
jl
mov
ret
mov
outsl
sub
insl
mov
mov
out
dec
sub
xchg
mov
dec
shr
xlat
cmp
xchg
sub
ljmp
clc
sub
sub
pop
fisubs
dec
imul
cli
push
les
inc
fdivrs
in
mov
push
cltd
push
ss
into
pushf
sub
cmp
sub
mov
and
dec
mov
jle
sarb
or
or
popf
inc
cmc
je
jl
add
sahf
and
sahf
lahf
push
fcomps
sbb
or
je
mov
adc
xor
pop
sub
mov
sbb
push
fs
fcomps
ret
jb
pusha
nop
mov
arpl
loop
out
xchg
cmpl
aad
je
lods
ljmp
and
hlt
push
popf
add
xor
aaa
sahf
imul
jp
cs
push
daa
lret
jns
les
mov
outsl
ss
mov
pop
cltd
jg
and
and
dec
mov
outsl
and
mov
sub
aam
cmpb
mov
jnp
mov
lods
xchg
add
js
enter
add
insl
movsb
movsb
push
pop
xchg
mov
ss
dec
or
fdivrl
sti
sarl
loop
mov
mov
push
ret
in
xor
sbb
cld
jnp,pt
xchg
adc
out
inc
xchg
lock
pushf
cli
inc
jle
loopne
loopne
mov
cmpsl
test
pop
ss
xor
hlt
xlat
sub
outsl
notw
scas
sub
test
and
adc
insl
leave
pop
push
and
inc
inc
mov
aam
pop
adc
test
mov
sub
xor
fdivp
jmp
shl
xor
ja
sub
sbb
lods
in
pop
ja
dec
xor
fistpll
fimull
xchg
push
shr
mov
and
add
cmp
insl
cmp
movsl
mov
lcall
inc
test
fists
cmp
std
sub
rolb
mov
adc
ret
cmp
aad
pop
rcll
fwait
xchg
push
push
mov
push
dec
out
lds
cmp
pop
xor
sub
outsb
cli
stos
iret
push
rorb
jle
iret
scas
push
sbb
pop
les
xchg
test
and
fbstp
mov
vxorpd
sahf
lcall
xor
inc
pcmpgtw
out
stc
jb
push
popa
movsl
sub
pusha
test
push
jns
jno
xchg
sub
out
popa
jmp
mov
inc
cmc
mov
icebp
push
stos
shrl
lahf
inc
in
sbb
or
jo
fiadds
jnp
fstl
in
cs
fwait
imul
xchg
je
fiaddl
je
lods
dec
inc
in
push
xchg
lahf
mov
and
push
inc
sbb
or
mov
pop
pusha
push
shll
mov
into
xchg
or
lahf
out
add
jp
in
out
test
movsl
lret
mov
dec
adc
test
push
pop
stc
negl
frstor
push
fcomi
sub
and
aam
mov
mov
and
inc
sbb
mov
mov
or
sub
loop
xchg
mov
insb
sbb
add
pop
test
add
lcall
adc
sub
jne
dec
xorl
jecxz
mov
pusha
push
loop
mov
xchg
das
ja
decl
adc
fsubrl
aaa
xchg
dec
das
out
xchg
add
jecxz
add
std
dec
js
sbb
mov
xor
jg
addl
mov
sbb
test
out
das
push
xchg
cmp
or
addr16
in
daa
pop
or
mov
pop
add
inc
push
jp
ret
imul
fbld
stos
mov
outsl
cwtl
dec
jge
push
sub
ficoml
xchg
ljmp
test
fdivl
faddp
or
sbbl
inc
add
dec
icebp
sbb
ret
xor
xor
dec
nop
ret
and
xor
add
mov
dec
mov
dec
into
int3
leave
cmp
inc
out
fcos
mov
xchg
adcl
imul
ss
mov
inc
lock
pop
mov
pop
pop
js
jns
adc
dec
call
xchg
ret
cmp
mov
fwait
cmp
and
ss
jae
inc
cmc
test
outsl
cmp
icebp
mov
sbb
cmp
pusha
mov
das
jno
std
pop
push
jg
jg
xor
sub
jno
out
lock
jle
pop
xlat
push
and
mov
mov
out
addr16
dec
int3
lret
call
mov
pushf
shll
insl
cmpb
popf
daa
jp
js
mov
lea
jmp
cld
cli
loop
xchg
arpl
inc
lcall
mov
fwait
or
xor
mov
sub
cli
push
xchg
add
stos
add
popa
cmp
fstl
xchg
std
or
xchg
mov
cmp
fstl
nop
sub
xchg
lcall
push
pop
jo
push
lods
sub
jo
xchg
pop
xlat
xorl
jp
call
inc
or
adc
out
mov
xor
mov
pop
jp
outsl
int3
sbb
adc
cmpsb
lahf
adc
push
inc
inc
mov
adc
dec
pop
xchg
add
sub
movsl
sar
inc
rcll
jo
out
jbe
cmpb
pop
xor
mov
cwtl
mulb
fimuls
pop
movsl
push
scas
jecxz
out
jns
lds
es
add
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
jmp
mov
inc
jns
cmpsb
adc
leave
and
js
mov
fists
jne
lock
aad
push
pop
in
xchg
sub
fistpll
and
and
rorb
ja
xchg
fs
shll
insl
mov
jmp
ds
std
inc
aad
sub
pop
or
or
jo
shl
or
cmpsb
or
aas
xor
es
ds
daa
cmpsl
sti
outsb
mov
sidtl
or
aaa
gs
or
test
jle
mov
sub
adc
into
add
in
mov
subl
mov
iret
inc
xchg
cli
shll
imulb
jg
pop
repz
jl
mov
or
lock
in
push
in
mov
pop
in
xor
xchg
push
fwait
pushf
sub
sbb
push
arpl
mov
cmp
gs
xor
mov
jl
mov
mov
mov
loope
inc
lea
orb
pop
push
add
movsl
mov
and
xor
xor
add
mov
and
iret
stos
hlt
ret
aaa
xchg
xchg
pop
cmp
push
scas
or
xchg
call
mov
nop
loop
insb
jo
mov
xchg
jle
stos
sub
icebp
popf
mov
test
adc
xchg
rcrb
inc
fsts
cld
push
aaa
and
push
leave
loop
mov
lock
in
mov
pop
jg
mov
push
jg
mov
pop
xchg
cmp
sub
push
pop
addb
cmp
in
lea
cmp
bound
and
sub
ret
in
sub
loope
pop
lods
xchg
out
sub
lds
inc
mov
leave
mov
das
test
pop
xchg
cld
sub
adc
jge
aad
adc
fmull
lret
jnp
fwait
addr16
sbb
mov
cs
in
repnz
sub
lock
sahf
cmp
adc
xor
push
aas
inc
cmpsl
movsl
int
ret
repz
repnz
add
jbe
or
fs
int3
addl
repnz
dec
adc
decl
xchg
int3
mov
ret
jno
push
mov
push
ss
pop
mov
mov
divb
out
decl
cmp
das
mov
stc
aad
gs
out
flds
and
cmp
sbb
jmp
arpl
and
ja
and
rorb
add
cmp
xchg
sarl
pop
and
mov
pop
push
dec
push
mov
icebp
into
repnz
shll
cli
xchg
mov
fldl2t
xor
fldt
cmp
pushf
scas
jo
clc
pop
or
jp
sub
in
fwait
aas
or
push
mov
fsubp
shr
movsl
lret
mov
dec
data16
cmp
and
cmpsb
pop
mov
inc
clc
adc
in
sbb
dec
stos
bound
push
or
or
or
sub
and
inc
das
lods
mov
inc
bswap
adc
scas
sbb
push
clc
lea
stos
sbb
mov
pop
mov
int3
daa
neg
shlb
aam
and
testw
addb
mov
insl
in
adc
dec
addb
xor
or
bound
adc
test
fdivrs
mov
add
sbb
add
pop
pop
cwtl
cli
cwtl
push
pop
mov
adc
addr16
cwtl
cltd
push
xchg
cmp
aam
fimuls
mov
sbb
mov
imulb
leave
mov
mov
jmp
movsb
cmpsl
push
fists
movsb
jnp
push
fcmovu
adc
ljmp
jl
js
push
stos
inc
lret
shl
mov
jnp
xchg
sar
subb
and
aam
push
xor
add
out
add
out
sbb
jge
sarl
jno
lock
int
std
lods
and
xchg
ljmp
dec
and
pop
cmpsl
sbb
popl
push
mov
xchg
pop
jne
cltd
test
js
push
rorb
xor
cmp
cltd
push
lea
int
aad
lahf
inc
adcl
pop
shll
out
jb
and
adc
cmp
push
sahf
dec
pop
lds
lahf
push
pop
subb
adc
xor
ljmp
addr16
adc
mov
add
data16
push
shlb
call
ss
jns
out
decb
ss
scas
sahf
mov
xor
subb
mov
add
outsl
jmp
icebp
sbb
cwtl
in
mov
sbbl
data16
icebp
data16
ljmp
aam
push
add
mov
popf
aaa
mov
dec
mov
cwtl
xchg
stos
push
daa
in
push
pop
xchg
jge
les
jl
adc
sbbb
shr
sub
rcll
mov
sbb
ss
and
subb
shll
cmp
push
and
fs
dec
jmp
jle
sub
cmp
mov
out
stc
and
sbb
in
rclb
js
jmp
push
mov
mov
ss
sbb
mov
movb
leave
int3
ds
mov
pop
jle
ljmp
ficoms
pop
dec
push
mov
inc
mov
lcall
mov
and
fldenv
stos
fdivl
insb
ljmp
jae
cmp
pop
push
dec
cltd
adc
call
fists
jo
and
insb
push
cltd
cld
imul
in
movsl
pop
sbb
iret
mov
addr16
dec
sarl
insb
addb
xor
jns
push
aaa
dec
pushf
stos
fistpl
repz
mov
jae
xchg
ds
jl
fldenv
xor
femms
or
gs
push
shrl
sbb
xchg
lret
icebp
push
jg
cmp
stc
jg
inc
iret
outsl
pop
xchg
aas
inc
ret
xorb
push
idivl
clc
arpl
cmp
scas
inc
xchg
dec
test
fimuls
insl
or
mov
pop
mov
insb
mov
add
sub
mov
clc
dec
add
xchg
ds
sub
adc
ud0
sub
shrl
mov
pop
inc
es
xchg
pop
repnz
loop
in
filds
inc
bound
cmp
lods
lods
ja
lret
gs
jb
cmc
xlat
ror
das
pop
imul
aaa
sub
aad
jb
iret
aam
lods
xchg
repnz
add
inc
mov
cmc
sub
sarb
jl
sub
and
mov
das
fs
pop
mov
fcmovu
mov
sbb
addb
inc
add
lock
pop
sbb
cmp
loopne
inc
push
test
lahf
jp
adc
xchg
ret
data16
add
pushf
mov
popa
push
mov
fstps
sbb
lods
pop
fwait
and
sbb
nop
enter
out
and
nopl
call
mov
mov
and
or
sub
ret
shrb
psubsw
sahf
arpl
clc
xor
sbb
pop
cld
xchg
in
sbb
popf
jns
sub
fwait
push
xchg
pop
je
les
shlb
clc
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
jmp
aaa
int
xchg
movsl
push
insl
aad
pop
jmp
cmp
xor
js
pusha
and
and
add
xchg
fdiv
xchg
enter
jns
imul
mov
adc
jo
dec
test
xchg
add
push
push
je
adc
dec
pop
out
mov
or
cmc
in
xchg
aaa
mov
add
and
mov
jg
inc
adc
int3
mov
outsl
fnstcw
jb
insb
shlb
jle
adc
lret
add
adc
jno
movsl
iret
std
test
popf
pop
mov
pop
dec
shlb
pop
insb
push
inc
xor
inc
or
lcall
pop
leave
out
dec
fidivl
mov
push
adc
xor
sub
sti
cmp
mov
sub
lret
icebp
scas
sbb
sub
shlb
push
mov
bound
in
imul
iret
stc
clc
and
pop
out
jnp
mov
shl
jne
jnp
adc
das
adc
dec
dec
xchg
clc
stc
out
jbe
cltd
sub
out
es
cmp
cmp
cmp
or
and
out
in
mov
push
je
xor
mov
cltd
jmp
mov
loopne
sti
sahf
loope
std
jmp
fwait
out
dec
ficomps
lcall
dec
adc
mov
mov
jbe
jp
addr16
test
frstor
stos
lret
shr
and
push
pop
mov
movsb
sub
push
ds
popf
sub
add
adc
sbb
push
es
cs
mov
mov
call
fstp
sbb
imul
push
or
mov
push
sub
call
lahf
fdivrl
mov
lcall
jg
mov
and
lock
and
orb
xchg
popf
and
testb
adc
jmp
mov
js
stos
inc
std
sbb
fstpl
add
xor
outsb
fbld
jecxz
ret
sub
dec
gs
loop
ret
dec
cmp
cwtl
mov
mov
fnstenvs
sbb
test
and
movq
mov
sahf
xchg
dec
push
inc
popf
lret
add
xchg
cmp
jnp
inc
rolb
jl
xor
mov
cwtl
test
push
test
sub
jecxz
scas
or
lods
addr16
inc
inc
cmp
jae
stos
pushf
mov
mov
or
mov
pop
lret
fdiv
outsl
xchg
dec
pop
cli
pop
xor
xor
outsb
scas
insb
jbe
inc
test
mov
mov
xlat
lods
dec
enter
pop
ljmp
inc
lcall
dec
insl
daa
loop
mov
mov
jle
mov
fisubs
outsl
lahf
pop
sub
push
insl
xchg
sub
jp
lea
stos
sahf
jecxz
push
mov
pusha
cld
xchg
andb
in
adc
inc
fwait
jg
push
aas
sub
sub
call
sub
and
jmp
cmp
jno
or
dec
and
enter
sub
xchg
dec
cmpsl
xchg
cmpsb
cmp
mov
mov
pop
push
jmp
aam
adc
and
jecxz
push
dec
push
mov
icebp
mov
pop
ds
cltd
mov
mov
dec
jb
fnsave
xchg
repz
lock
jp
leave
and
dec
xchg
aaa
js
rolb
mov
test
pop
repz
mov
xchg
shll
lea
data16
mov
mov
aas
iret
icebp
dec
cmp
and
push
cld
lret
in
mov
jmp
pop
cs
cmp
stc
jmp
mov
lret
js
jl
js
push
cmp
or
sarl
dec
bound
dec
ficomps
jb
rcl
or
xor
pop
aaa
jmp
fdiv
jmp
push
aas
adc
cli
ret
and
add
jns
addr16
push
push
xchg
jmp
mov
sbb
cmpb
push
aaa
les
and
arpl
shll
and
xchg
dec
into
xorl
das
aas
mov
loop
push
cmpsb
push
adc
mov
popa
hlt
push
lock
stc
arpl
aad
jmp
jmp
pop
je
add
cmp
push
xchg
xchg
mov
orb
insl
cmp
orb
cmp
jle
adc
push
in
mov
fmull
iret
es
mov
jns
dec
and
imul
or
xor
orb
cmp
dec
pop
insb
in
jle
sub
cmp
je
gs
fdivrl
xor
icebp
push
jecxz
aaa
fwait
xor
and
nop
xor
jne
and
ds
aam
fwait
add
push
sub
mov
fs
popa
add
fadd
and
out
sbb
adc
mov
mov
mov
xor
sbb
inc
inc
out
adc
xchg
fwait
ljmp
add
mov
sub
jno
jg
ret
dec
stos
mov
dec
or
mov
jl
jae
xor
clc
out
fcoml
jb
xchg
imul
xchg
mov
rorb
arpl
xor
push
pop
outsl
mov
push
jo
pop
sbb
ss
movl
sub
push
popf
lret
das
cmpsl
mov
out
adc
arpl
sbb
pop
cmp
dec
and
adc
loope
mov
or
mov
and
insb
mov
jbe
add
inc
ljmp
addb
adc
jmp
dec
hlt
orb
xor
xchg
pop
mov
xor
clc
xlat
jbe
and
inc
jge
ljmp
dec
inc
or
mov
cmp
or
add
mov
repnz
repnz
dec
cmp
mov
push
add
mov
pop
testb
add
fdivs
add
shlb
lds
xchg
stos
imull
and
stc
ja
lret
test
jae
inc
repnz
scas
clc
xchg
jo
jbe
jmp
and
rcll
sub
andl
sub
xchg
sub
inc
add
out
and
div
sbb
mov
or
add
loop
repnz
jae
stos
lods
js
das
push
pushf
icebp
ja
lret
jecxz
fs
cmpsl
insb
punpckhdq
mov
dec
fstps
add
push
int
and
rolb
adc
dec
mov
or
pcmpgtb
scas
dec
cmp
sbb
sbb
clc
movsl
jp
sbb
and
and
jge
mov
pusha
jnp
mov
scas
jbe
add
jg
push
push
fcoms
imul
iret
ss
call
sub
pushl
inc
jbe
pop
movsl
sub
pusha
pop
mov
or
xchg
and
rorl
dec
mov
sbb
mov
nop
cwtl
rorl
fnstsw
jo
adc
xlat
fdivrl
mov
and
dec
mov
xor
mov
loope
imul
loopne
js
in
fcoms
arpl
cmpsb
int3
xchg
sub
test
clc
mov
sbb
adc
push
rol
call
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
jmp
dec
sub
in
pop
inc
or
ret
js
jl
js
xor
pop
loope
and
aam
into
pop
mov
sub
je
xor
mov
pop
ljmp
andl
xchg
adcl
xchg
fucomip
nop
push
cmp
sbb
xor
mov
push
sub
and
into
inc
in
fnstcw
xor
push
push
test
js
pop
ret
outsl
xchg
es
add
ljmp
popa
xchg
push
xlat
adc
out
jecxz
roll
ret
sahf
adc
push
xchg
mov
or
add
stos
xor
jae
mov
adc
iret
aad
sub
test
pushf
lea
mov
mov
ret
xor
jmp
sub
mov
mov
ficompl
arpl
mov
stos
ret
loopne
and
sub
pop
in
pop
shlb
or
mov
sbb
xchg
xor
mov
mov
fnstcw
stos
in
fisubl
xchg
ret
mov
and
add
iret
pop
ds
movl
cmp
mov
mov
out
mov
shl
orb
mov
out
mov
sub
inc
sbb
push
cmp
adc
sub
jecxz
mov
mov
cli
lahf
neg
pop
add
add
sbb
iret
pmaddwd
popa
push
rorb
mov
mov
int3
cltd
mov
xchg
or
mov
and
or
fstpl
dec
and
dec
call
xchg
loopne
sub
mov
pop
add
jmp
repz
push
push
pop
adc
adc
pusha
adc
jb
cmp
imul
jmp
add
fwait
subl
xchg
aam
sub
and
faddp
cmp
in
mov
fs
out
dec
lcall
sbb
jbe
dec
jbe
sub
aam
pop
add
imul
push
xchg
mov
stos
popa
cli
int3
test
jecxz
fwait
das
dec
jmp
sbb
jns
xlat
cmp
adcb
inc
mov
icebp
inc
cmpsl
and
ss
push
mov
aad
push
test
jl
xchg
mov
sub
push
push
dec
xchg
sub
sub
pop
inc
push
lods
mov
int
sub
pop
sahf
into
cmc
dec
nop
out
jmp
mov
push
adc
inc
mov
or
cmc
mov
mov
sbb
cmp
sub
jecxz
pop
xchg
ret
test
xchg
popa
pop
and
xor
scas
pop
into
lret
and
sub
mov
sti
out
dec
push
jmp
out
fwait
mov
push
imul
fnstsw
dec
xor
push
mov
divb
add
xor
pop
and
insb
mov
and
mov
inc
sbb
xchg
sub
dec
inc
roll
cmp
inc
bound
icebp
popf
lret
dec
repnz
xchg
lret
inc
repz
sub
sarb
adc
mov
push
xor
xor
xchg
push
push
xchg
pop
sub
add
sub
xchg
fistpll
stos
cmp
stos
push
inc
idivl
lds
mov
hlt
cmp
std
loopne
rcr
daa
jb
pop
adc
sub
or
dec
or
mov
outsl
jmp
jo
sub
cmp
inc
mov
test
scas
stos
inc
into
jbe
sti
jmp
adc
loop
mov
das
inc
lea
in
xchg
cmp
push
jnp
add
mov
jmp
sub
ret
inc
mov
and
comiss
mov
js
sub
mov
arpl
xor
dec
out
pop
mov
rolb
mov
fsubr
repnz
mov
pop
addb
jnp
inc
inc
adc
popa
mov
sub
push
sbb
mov
inc
xlat
jne
sub
xor
or
jecxz
add
mov
fwait
mov
dec
adc
shrl
push
mov
jo
fs
js
iret
xchg
lret
pop
xor
insl
scas
mov
push
jne
push
lds
push
cmpsl
pop
pop
jnp
repnz
aad
mov
movsl
mov
adc
loope
mov
addr16
sahf
inc
gs
sahf
jg
fisttpl
xchg
mov
mov
cwtl
clc
femms
inc
les
push
sub
ret
xchg
add
mov
jge
push
insl
popl
sub
pop
mov
adc
xchg
jmp
or
xorb
ret
sub
or
movsb
int
cmp
sarl
and
add
inc
lahf
pop
xor
pop
pop
and
inc
inc
lds
icebp
mov
add
cmpsb
or
out
jp
int3
xchg
add
xchg
cmp
mov
xchg
lods
push
ljmp
cmpsl
arpl
jbe
mov
loop
mov
mov
or
dec
mov
adc
scas
ljmp
mov
xor
pop
out
enter
xlat
or
mov
loop
cmp
pop
adc
cmp
rclb
or
lahf
bnd
test
arpl
enter
adc
mov
fistpll
ss
mov
fdivrs
pushf
pop
movsl
xchg
xchg
or
jle
pop
mov
ss
mov
ret
push
ret
mov
iret
mov
cltd
icebp
lods
xor
das
lods
push
movsl
scas
pop
shl
xorl
clc
aam
test
jae
cwtl
mov
and
stos
js
mov
adc
ja
sub
loopne
pusha
stos
lcall
mov
push
xchg
cmp
cmp
pop
add
das
adc
push
adcl
les
bound
xor
pop
mov
sub
jmp
repz
push
mov
inc
xlat
push
loope
cmpsb
lock
push
xor
or
xchg
mov
sbb
push
mov
jle
xor
pop
xor
add
xchg
enter
sub
sbb
push
mov
xor
sbb
xor
add
mov
in
xchg
push
sub
fsubp
sub
test
stos
idivb
push
mov
fwait
mov
rcll
push
ds
sbb
xchg
add
xor
hlt
lret
fsubrs
jo
aam
lret
outsl
push
xchg
pop
or
jl
sub
xchg
mov
cmp
push
addr16
jp
fdivrl
jno
mov
adc
js
dec
jmp
pop
subl
adc
pusha
or
jae
xchg
mov
cmp
outsb
roll
xchg
out
dec
out
rolb
mov
mov
sub
rcrl
fiadds
pop
repz
ficomps
lods
fisubs
aas
outsl
jns
push
adc
and
mov
es
inc
fucomip
mov
inc
repnz
jmp
jle
xlat
add
cmp
arpl
jp
shrb
xchg
dec
repnz
ljmp
jno
jae
fisubrs
push
aas
push
jo
and
push
and
adc
movsb
jp
sahf
in
fidivl
leave
sbb
xor
mov
mov
mov
xor
add
mov
mov
jmp
pop
mov
push
and
sbb
and
jo
js
mov
inc
cltd
inc
mov
cltd
stos
fidivs
out
pop
xchg
sbb
jecxz
cmp
aad
jg
dec
sub
test
subl
dec
sbb
fptan
lahf
inc
and
test
lcall
sub
sti
lds
push
sahf
push
imul
add
fistpll
sub
jp
push
dec
fildll
mov
jae
xchg
add
cmp
mov
add
aad
mov
lret
adc
dec
and
add
sub
stos
dec
mov
clc
mov
sub
bound
ja
mov
dec
scas
mov
mov
and
aas
dec
mov
ljmp
mov
xor
dec
lret
adc
insb
popa
test
lods
inc
repnz
or
xor
push
ja
pop
shrb
mov
fchs
dec
lahf
push
sub
out
popf
movsb
rcrl
nop
and
xor
push
sub
leave
loopne
test
gs
adc
and
test
shrl
scas
add
pop
add
jl
jo
and
or
fiaddl
push
sbb
xor
and
mov
test
das
fdivs
mov
dec
pop
mov
xor
mov
fbstp
push
adc
lods
pop
shll
jne
xor
outsb
mov
xchg
test
test
dec
mov
inc
or
mov
mov
pop
out
das
jle
loopne
jmp
popa
mov
or
pop
aam
and
icebp
sbb
popa
or
push
mov
loope
ljmp
lock
pusha
mov
and
int3
fstl
and
rclb
inc
sbb
push
fdivrp
pusha
imul
inc
cmp
out
cmp
scas
xorl
int3
cmp
scas
add
scas
test
cli
cld
xchg
push
mov
mov
and
mov
cld
hlt
fdivrp
jp
out
addb
push
out
in
xchg
mov
mov
push
add
stc
popa
dec
push
test
push
ds
faddp
iret
in
mov
ret
popa
cltd
inc
int3
fwait
and
push
jecxz
mov
push
jns
rorb
jo
daa
in
dec
fs
cmp
aad
jle
jo
jmp
mov
sarl
xchg
xchg
rcr
push
adc
clc
sbb
data16
outsl
add
xchg
int
mov
cli
dec
data16
dec
lret
jg
call
inc
nop
jge
js
loop
mov
stos
cwtl
mov
dec
lds
test
imul
test
cmp
mov
or
xchg
xchg
lods
mov
aaa
outsb
dec
or
enter
shll
adc
je
sub
gs
jnp
pop
jge
dec
jb
pop
addr16
jp
mov
cmpsl
cmp
out
mov
push
cmpsl
dec
pusha
jo
fidivrl
dec
addr16
mov
add
jne
out
and
add
pop
ljmp
mov
mov
in
adc
mov
in
cli
and
xchg
mov
bound
dec
push
std
into
outsb
add
inc
push
pop
out
ret
jnp
sbb
aas
pop
pop
loop
and
or
sahf
stc
inc
lods
notb
das
cmp
add
cmpsb
push
aas
add
mov
fwait
imull
jbe
shlb
popa
xlat
xchg
push
sti
sub
jb
push
sub
cld
cmp
orb
mov
add
fbstp
fcompl
cmp
cmc
xchg
sbb
cmp
mov
push
mov
mov
and
ret
inc
dec
sbb
adc
adc
cli
mov
stos
mov
js
into
jnp
lods
pop
xlat
mull
add
push
test
pop
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
jmp
mov
jnp
sbb
cmp
ljmp
js
test
sub
icebp
push
xor
cmp
sub
jge
xchg
das
ret
adc
add
rorb
add
inc
fildll
sbb
sbb
lcall
lcall
xchg
add
aas
ficoms
fmulp
je
fstp
xchg
std
and
mov
mov
aaa
mov
popa
cwtl
rcl
arpl
jle
lods
jp
stos
sub
sub
xchg
cmpsl
push
xor
lds
loop
jmp
fwait
lods
inc
sub
mov
outsl
jmp
cmpsb
fisubrs
sbb
jno
enter
out
and
aaa
cld
mov
sub
mov
daa
ret
jle
mov
jecxz
jae
imul
mov
aaa
jge
mov
xor
xor
fisubrl
add
cmp
in
pop
loopne
push
mov
mov
icebp
dec
int3
ds
mov
sub
mov
push
popa
fidivs
adc
pushf
inc
and
shrl
xchg
out
loopne
xchg
negl
enter
jmp
adc
repnz
imul
lea
dec
inc
add
dec
test
test
push
cmp
incl
test
pushf
inc
push
push
std
inc
or
insl
push
into
push
cli
pop
dec
or
mov
add
dec
nop
push
loopne
icebp
sarb
cmpsl
xchg
gs
cmp
or
lods
notb
ss
xor
stos
out
lods
jl
incl
mov
jle
cs
sbb
imul
loop
cs
aaa
scas
sti
andb
shll
std
sub
popa
mov
std
jle
jbe
mov
push
subl
fcomp
stos
in
mov
fisubs
adc
cld
push
and
loop
repz
in
repnz
cmc
ds
jl
inc
cmp
adc
ljmp
insb
adc
mov
test
dec
jge
push
xchg
pop
and
outsb
xor
pop
loopne
fisubs
call
and
insl
mov
movl
add
adc
mov
stos
insl
loopne
ret
pop
ret
xor
and
mov
inc
xor
and
test
push
fs
xorl
ret
xchg
push
push
push
call
sbb
cli
add
cmp
sbbb
xchg
int
adc
mov
sti
clc
sub
lret
shrb
cmp
sub
rcl
cmp
jmp
out
movq
popa
repnz
test
xchg
jp
or
sub
push
sub
mov
xchg
fucom
mulb
dec
sbb
testb
inc
inc
push
stos
adc
pop
push
aaa
mov
or
xor
xchg
dec
mov
dec
mov
js
mov
loopne
jno
fwait
jp
sub
iret
and
mov
jg
roll
mov
fsubrp
stos
adc
ret
jno
or
ja
cmp
js
shl
xor
sub
jbe
imul
sbb
and
pop
inc
xchg
sub
adc
xchg
dec
cmpsl
js
test
lods
mov
or
mov
filds
xchg
cs
mov
in
neg
pop
pop
mov
gs
pop
pop
test
pop
jno
sub
jae
mov
arpl
pop
lcall
shll
jp
jb
fcmovnb
out
dec
ret
xor
nop
mov
sbb
stc
dec
inc
jns
mov
insl
jnp
test
lock
addr16
sub
xor
push
repz
mov
dec
jo
inc
mulb
les
aad
test
clc
sub
jmp
shlb
mov
xchg
popf
jge
shll
mov
js
cmp
or
roll
and
jecxz
repnz
ret
adc
pop
aas
lahf
out
lods
xchg
jbe
fstps
pop
xchg
adc
sbb
mov
shr
mov
jg
jne
add
inc
rolb
add
pop
sbb
xchg
stos
lods
and
xor
cli
dec
push
xor
pushl
cli
int3
aas
xchg
dec
mov
lods
clc
cmp
jp
lock
xchg
push
mov
xchg
leave
inc
iret
clc
cmc
movsb
cs
jecxz
cmpsl
sub
das
ds
xchg
icebp
sbbl
loopne
mov
shrl
mov
in
mov
stos
mov
pop
enter
outsl
in
xlat
inc
jb
xchg
mov
mov
sar
mov
insb
ss
sub
sbb
insl
lods
lret
aam
add
dec
xor
sub
add
mov
mov
fs
out
cwtl
aas
mov
arpl
mov
mov
push
dec
enter
mov
fwait
push
cld
pop
mov
mov
push
mov
insl
fisubrs
icebp
push
cmp
mov
xor
cltd
popa
inc
stc
sub
inc
add
pop
xchg
divl
in
out
mov
lret
mov
enter
sub
xor
xchg
imul
nop
mov
dec
xor
sub
pushf
or
mov
loope
xor
cwtl
iret
xor
sub
call
and
xlat
adc
mov
pop
xchg
dec
aam
lret
in
mov
push
div
lret
cmp
and
imul
movsb
mov
test
outsb
add
add
fnstenv
mov
arpl
cmp
subb
mov
shl
mov
pop
repz
or
out
sti
aas
mov
sti
dec
idivb
jae
shlb
cwtl
fildl
mov
and
addr16
or
arpl
ret
push
push
or
ja
rcll
push
mov
bound
sbb
cli
jg
jg
lret
js
inc
mov
mull
aam
mov
push
pop
mulb
mov
dec
dec
inc
jge
outsl
mov
jg
in
movsl
ret
pop
in
xchg
and
out
jns
or
stos
dec
mov
xchg
cmc
test
jle
pop
mov
xchg
out
scas
lret
cwtl
push
or
or
xchg
test
dec
lods
inc
jmp
lods
sbb
roll
mov
ljmp
ja
aas
sub
fldt
hlt
xchg
pop
or
jo
mov
mov
lcall
push
fimull
aaa
jno
test
rol
mov
inc
mov
imul
test
mov
inc
data16
repnz
out
mov
pop
gs
adc
aad
mov
mov
ss
xchg
jbe
push
adc
xor
bound
in
mov
daa
mull
in
dec
and
loopne
arpl
test
mov
xchg
jle
push
and
imull
mov
pop
sub
icebp
lock
pushf
dec
lods
sahf
cmp
out
shr
shll
xchg
push
sub
movsb
jecxz
in
test
scas
cmp
testl
sbb
push
push
push
push
nop
adc
push
nop
ss
xchg
jg
pop
int
imul
daa
push
cmp
scas
sarb
popa
mov
push
cli
je
jmp
jns
in
cmpsl
xor
lods
popf
inc
dec
mov
jne
jge
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
testb
pop
add
and
inc
sbb
cltd
je
mov
js
jl
js
mov
outsb
ljmp
mov
push
mov
pop
aam
int3
test
push
lods
push
xchg
cld
js
cltd
out
jb
ret
and
shll
test
inc
jb
xor
mov
stos
cmpsb
fwait
ljmp
leave
aam
inc
movsb
pop
add
arpl
push
js
mov
sbb
pop
jg
jne
ja
pop
es
shll
cmp
and
mov
pop
cld
ja
or
fcompl
xchg
mov
jae
inc
jp
jbe
push
out
xor
jae
mov
xor
mov
cmpsb
mov
sub
sub
fwait
xlat
xor
push
xchg
dec
sbb
sub
or
fnsave
mov
add
mov
jne
addl
pushf
mov
imul
fstps
inc
xchg
jecxz
mov
icebp
and
lret
xchg
out
fildl
lret
mov
gs
push
sbb
popf
sbb
mov
jae
jne
mov
dec
push
int
cs
sbb
int3
pop
or
and
or
pop
xchg
outsb
test
mov
fs
mov
addr16
dec
decb
lahf
in
sbb
popa
in
cli
jmp
add
push
mov
mov
add
rcll
lcall
jle
sub
mov
test
stos
mov
out
mov
lods
into
test
jae
xchg
mov
mov
push
ret
sbb
lcall
inc
jmp
sbb
jecxz
mov
jmp
repnz
push
movsl
inc
lret
cmp
jg
arpl
xchg
lcall
jae
mov
das
or
cmpsl
cld
test
adc
out
dec
cmpsb
stc
daa
loopne
jmp
fldl
cmp
cmc
sti
and
cmp
xchg
das
mov
je
rcrl
jmp
and
adc
repz
pop
or
insb
dec
loopne
fimull
xchg
mov
movsl
mov
pop
and
sub
pop
lock
sub
xchg
aaa
sahf
inc
sbb
movsl
mov
dec
xchg
mov
aad
out
test
movb
dec
fwait
xchg
sub
jbe
insl
jnp
cmpsl
mov
cmp
jecxz
in
loop
into
pop
xchg
dec
push
sub
mov
daa
fadds
sub
jmp
mov
shll
out
cmpsb
addl
cmp
lahf
test
fnstenv
shlb
adc
xchg
mov
decb
add
push
pop
fldenv
fdivrs
jns
repz
daa
push
das
in
hlt
dec
fdivrs
fisubl
fadds
xchg
into
ja
dec
add
jecxz
xchg
pop
out
dec
negl
sub
rcll
loope
jne
cmp
fs
jge
mov
pushf
mov
pusha
orl
std
pop
jnp
int3
arpl
cli
push
ds
and
adc
lahf
mov
jmp
loope
add
test
xor
jns
push
mov
and
push
xor
cmpsb
sbb
aam
mov
add
jnp
test
nop
ret
arpl
shlb
mov
sub
xor
push
mov
lods
push
push
sub
push
pop
outsb
mov
sti
notl
add
dec
sbbl
rorb
inc
add
js
lret
cmp
xchg
not
push
or
xchg
rcrl
jmp
ror
xor
xchg
aas
movsl
lahf
push
dec
test
mov
cwtl
sub
imul
mov
xor
add
mov
lea
jmp
push
aaa
mov
xchg
xchg
jp
fcoml
js
jl
js
xchg
mov
xor
rorb
fisttpl
loope
adc
pop
xor
pop
dec
dec
inc
adcl
xor
and
cmpsl
pushl
sbb
xchg
adcb
pushl
push
daa
push
adc
dec
ret
orb
xor
mov
and
dec
mov
arpl
stc
lret
aaa
loop
fsubr
and
dec
dec
inc
sub
push
mov
addr16
push
aaa
stos
pop
dec
movsb
xchg
mov
mov
jle
dec
fbstp
sbbl
adc
out
mov
aas
inc
fsubs
or
lock
jno
adc
mov
lock
loope
push
xor
jmp
sub
lods
dec
sbb
cmpl
jp
clc
loope
fcomps
scas
lret
cld
mov
insb
mov
push
dec
or
xchg
xchg
jno
adc
adc
out
xor
fldl
aas
jmp
push
xchg
xchg
ds
sbb
int
sbb
negb
lods
adc
sub
cmp
dec
mov
fwait
xchg
flds
out
cmpsl
icebp
stos
cmp
or
aad
adc
cmp
sbbl
lret
mov
jmp
sahf
mov
add
sbb
ror
dec
sbbb
xchg
jo
test
xor
in
inc
imul
lea
movb
int
fdivr
hlt
les
pusha
mov
pop
int3
repz
cmpsl
adc
dec
outsl
push
ja
out
jb
mov
add
inc
aas
add
xchg
test
add
add
and
movsl
mov
sub
call
ja
sbb
inc
add
lods
ljmp
dec
pop
push
in
mov
ret
imul
cmp
jmp
xor
xor
mov
mov
lret
inc
lds
sbb
inc
cmp
lcall
jmp
dec
push
mov
xor
xor
adc
xor
ja
or
int
test
cmp
notl
in
sub
ss
pop
xchg
xchg
jne
in
int3
icebp
inc
gs
int3
outsb
stos
sbb
je
dec
enter
mov
push
imul
shlb
xor
sub
fadds
sub
fwait
jp
iret
rol
push
mov
or
jg
jnp
movsl
je
hlt
inc
sbb
sub
jge
icebp
inc
inc
mov
cmp
mov
push
data16
and
inc
pop
fsubs
xchg
shlb
pushf
ss
dec
fs
and
jp
loope
bound
xor
aaa
mov
inc
pop
jle
and
sub
pusha
xchg
fsubp
adc
jl
mov
out
jns
adc
jns
add
xor
fcmove
pop
mov
cmp
mov
push
push
xchg
test
ds
cmp
and
mov
jae
jmp
inc
outsl
shlb
lcall
das
lods
popa
sub
adc
divl
inc
or
lret
rorb
adc
bound
movsl
mov
test
jb
shll
loop
shlb
adc
adc
mov
mov
std
xor
loope
mov
ds
fwait
mov
jmp
stos
or
add
cmp
mov
and
fnstsw
dec
cmp
mov
ds
jl
add
or
int3
fadds
stos
jns
cmp
and
xor
or
enter
mov
jmp
rcr
movsb
and
push
mov
out
jp
bound
dec
js
jo
js
xor
dec
pop
sar
fstpl
pop
call
daa
dec
sbb
fs
push
data16
lret
adc
mov
or
aad
mov
sbb
fdivr
outsl
mov
ret
push
test
mov
loopne
or
cli
mov
jno
cld
jae
mov
repz
ss
jo
shl
or
push
test
or
popf
cmp
jmp
fldl
adc
cs
mov
scas
jns
in
ret
movsb
bound
jl
sbb
std
xor
push
jb
js
or
cmp
mov
sbb
mov
add
loop
repnz
sahf
jl
xor
leave
and
ljmp
adc
jae
lret
out
jmp
ljmp
mov
pop
cmpsb
mov
test
call
add
in
pop
into
fistl
adc
push
sbb
pop
mov
addr16
push
mov
xor
pusha
roll
mov
push
mov
mov
add
das
cmp
and
xchg
addr16
ds
mov
and
jmp
fcom
andb
push
cmc
push
mov
shll
enter
aaa
cli
xor
mov
mov
loopne
sbb
and
dec
pop
cltd
stos
iret
iret
sub
fwait
stos
and
adc
outsl
mov
or
inc
filds
xor
sbb
push
daa
jge
mov
mov
jmp
xor
mov
jnp,pt
mov
xor
je
xor
fidivl
or
repnz
or
jmp
pop
cmp
data16
dec
mov
aas
stos
fdivr
pop
inc
roll
push
push
push
addb
sbbb
test
cmpsb
cs
enter
js
pop
fdivrs
movsb
stos
dec
stc
hlt
dec
aam
push
lcall
mov
mov
into
jp
lahf
out
mov
out
or
mov
sbb
jecxz
test
mov
arpl
mov
arpl
pop
loopne
fidivrs
lahf
sbb
pop
mov
fcmovbe
mov
dec
sub
icebp
mov
scas
sarb
mov
fwait
inc
xchg
mov
and
dec
repz
hlt
push
dec
push
lgs
jb
lret
cld
sub
mov
jmp
ss
sub
push
push
ljmp
fidivl
ror
mov
mov
insb
imul
fisubrs
cmp
fimuls
outsl
inc
insl
nop
ja
lret
jecxz
sbb
cltd
jo
insl
inc
push
out
push
adc
mov
mov
pop
push
insl
jnp
dec
push
sbb
jae
push
scas
lret
sbb
leave
jmp
adc
mov
mov
loop
xor
pop
jge
mov
dec
lds
das
xchg
jecxz
add
imulb
mov
push
pop
fsub
add
hlt
xor
leave
std
push
cmpsl
in
adc
mov
shrd
das
out
inc
out
cmp
fcoms
fwait
mov
sbb
mov
dec
insb
outsb
outsb
cli
mov
imul
out
repnz
sbb
jmp
and
push
mov
cli
jp
pop
lock
std
mov
out
insb
ret
sbb
mov
sub
pop
add
insb
mov
in
cmpsl
out
movl
inc
cltd
dec
ret
popa
call
aam
mov
cwtl
jecxz
jg
sarl
xor
into
dec
cmp
mov
xor
mov
sub
add
mov
mov
xor
jmp
push
fbstp
mov
xlat
stos
or
mov
out
push
orb
jo
js
jle
in
push
dec
stos
hlt
test
xor
into
xor
jae
xor
mov
lock
mov
xor
out
hlt
ficomps
pusha
mov
das
in
xlat
add
popa
lods
xor
mov
in
ss
or
idivb
xchg
mov
xor
mov
roll
je
push
cmp
sbb
movsl
fbld
pop
push
sbb
add
shll
xor
test
loop
test
adc
xchg
decl
xor
xchg
leave
xchg
inc
and
icebp
pop
sbb
ret
dec
adc
push
outsl
add
mov
jo
fimuls
or
movsb
add
mov
or
adc
fwait
lock
mov
sub
pushf
push
loope
loope
xchg
and
sbb
testl
mov
insb
jb
pop
mov
cs
lods
aad
data16
js
pop
sub
mov
and
das
inc
js
shr
repz
adcl
sub
outsb
jnp
mov
lea
pop
ficoml
xor
out
adc
js
movsl
aaa
out
push
mov
mov
fsubrs
mov
sbbl
fistl
test
sbb
jp
shlb
sarl
mov
mov
popf
mov
or
and
pop
jno
bound
jne
cwtl
jg
xchg
pop
jo
out
stc
fwait
mov
out
nop
mov
mov
or
into
mov
mov
cmpsb
dec
inc
jecxz
lea
clc
fcomi
adc
push
pop
ja
pop
enter
in
xchg
enter
push
sbb
mov
jns
cmp
mov
loopne
cmpsl
fs
sbb
popfw
les
pop
ret
testl
inc
sbb
mov
jge
std
mov
jg
fucomi
inc
push
shrb
pop
jnp
sub
push
aam
mov
subl
fs
push
xchg
adcl
mov
loop
fwait
jb
sarl
sbb
push
cld
add
adc
xchg
sbb
into
pushf
jl
cs
sbb
and
jae
add
in
imul
data16
jle
add
mov
pop
sub
pop
or
xchg
push
mov
push
shll
xchg
xchg
xor
pop
cmp
mov
and
and
test
push
out
adc
sub
and
in
push
test
mov
stos
or
cmpsb
xchg
lcall
iret
cmpsb
push
push
mov
mov
pop
or
cmpsb
lcall
xchg
dec
xor
jle
pop
stos
in
pop
lods
adc
aas
ret
loopne
cmp
xchg
pop
fs
or
sub
in
jp,pt
into
movsl
nop
and
cmp
add
push
shrb
push
add
mov
pop
jg
and
push
inc
imul
mov
mov
jl
push
push
int3
inc
push
mov
push
pop
dec
aaa
mov
cmp
inc
ds
movsl
and
cmc
cwtl
sbbb
les
roll
aad
rorb
pushf
adc
push
add
call
push
push
push
add
inc
dec
push
pushf
push
movsb
mov
xchg
inc
xchg
push
mov
adc
gs
dec
iret
pop
inc
cmc
push
aaa
pop
das
ja
pop
loopne
mov
hlt
jae
sub
pop
cld
cltd
ds
cmp
push
inc
pop
or
mov
mov
cwtl
aas
out
inc
in
dec
jmp
sub
insl
mov
ljmp
mov
fmul
cmc
dec
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
sbb
movl
mov
mov
sub
sub
mov
sbb
mov
subl
mov
subl
xor
subl
add
mov
inc
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
xor
or
dec
mov
jmp
mov
xor
xor
push
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
mov
inc
jecxz
push
adc
lcall
js
cld
into
mov
pop
jne
mov
cmp
in
out
call
popa
cmp
iret
pushf
mov
mov
cmp
mov
push
pop
jno
sbb
pop
pop
idivl
shlb
addr16
mov
or
gs
sub
xchg
inc
imulb
and
jle
lock
mov
dec
mov
jb
or
xor
xchg
xchg
xor
cmp
dec
cmp
cmp
push
cmp
decl
in
or
sub
cmc
jg
inc
mov
js
mov
jg
in
pop
ja
mov
test
push
sahf
pop
jecxz
add
int3
sub
adc
inc
cmpsl
push
les
or
sub
shl
xor
jge
loop
adc
cli
dec
bswap
ja
and
mov
sbbl
adc
ja
xor
subl
ficoml
inc
jg
push
mov
push
dec
adc
in
jnp
lods
outsb
jb
cli
inc
and
lret
push
imul
adc
rcrb
cmp
aas
mov
cmpsb
push
pop
pusha
jbe
mov
sub
roll
popa
iret
or
xor
stos
and
out
mov
pop
call
or
loop
ret
je
mov
add
adc
testb
adc
cmc
test
inc
xor
sti
pop
cmp
gs
cld
sub
dec
int3
divb
inc
xchg
push
and
or
and
xchg
pushf
xchg
jp
sub
fmull
and
push
clc
in
into
rorl
pop
nop
pop
clc
in
outsl
mov
pop
jo
and
sub
jle
adc
jno
pop
sub
dec
mov
or
imull
inc
inc
mov
or
sbb
cmpsl
add
sbb
sbb
ds
cwtl
es
or
aas
dec
inc
or
repz
mov
test
dec
cmp
pop
xchg
sub
xchg
mov
out
stc
hlt
addr16
int
shrb
or
movsl
enter
push
sub
idivb
push
and
cli
andl
push
push
mov
mov
pop
pop
repz
and
jns
and
sarl
arpl
adc
test
aas
cmp
mov
stos
sub
lahf
push
mov
inc
fildll
fsub
lahf
jge
loope
adc
push
cmp
hlt
mov
and
and
add
jo
bnd
adc
push
sahf
mov
jae
pop
in
push
inc
in
cltd
outsb
cmp
pop
dec
mov
pop
push
xlat
push
scas
leave
mov
sbb
in
loope
inc
xor
test
cwtl
lds
mov
sbb
jo
lret
pop
pop
lret
repnz
bnd
dec
push
rorb
in
stc
mov
das
cmp
lcall
call
mov
adc
icebp
sarl
loope
fimull
cmpsb
nop
stc
sbb
insb
mov
mov
mov
cmpsl
mov
inc
xlat
inc
outsl
add
ret
lret
dec
in
jecxz
repnz
jl
pop
pusha
xchg
outsb
add
rclb
icebp
xor
cld
mov
push
dec
in
aad
mov
push
pop
mov
jns
mov
xchg
ret
movsb
out
pop
mov
mov
pop
cltd
ds
imul
xor
ja
test
pop
movsb
mov
idivl
mov
mov
sub
dec
cmp
jo
test
xlat
and
jns
out
loopne
fadd
jo
orl
ds
or
jecxz
fildll
daa
loop
in
gs
shrb
sahf
sbb
sub
jno
add
gs
leave
das
push
or
dec
pop
mov
xchg
dec
jmp
pop
xchg
mov
test
loop
and
mov
psubusb
lret
cmp
fisttps
lahf
sbb
push
xchg
mov
sub
shll
clc
lret
lds
ja
pop
inc
and
sbb
and
adc
shrl
sti
rorb
lret
push
cld
inc
xor
pop
stc
mov
sub
jle
out
lods
int3
cmp
dec
test
push
add
fs
out
cmp
es
fiadds
loopne
pop
mov
cmpsl
mov
das
push
pop
mov
dec
jae
movsb
sub
jne
push
push
pop
call
sbb
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
jmp
in
mov
sbb
movsl
jb
repz
or
gs
js
push
shr
pop
dec
mov
arpl
adc
xor
cwtl
pop
xor
aam
sub
es
fisubrl
aam
in
cmp
adc
in
push
mov
icebp
mov
repnz
mov
rclb
pop
scas
mov
push
xchg
push
mov
xor
std
adc
movl
lock
mov
xchg
leavew
jecxz
iret
adc
add
es
adc
shll
js
pop
sbb
shl
outsl
dec
inc
ror
mov
stos
into
dec
out
dec
icebp
cmpsl
ja
xor
mov
mov
inc
sti
or
test
jmp
loope
xor
aad
pop
pop
enter
and
loop
ffree
arpl
iret
pop
push
es
sbbb
iret
push
aad
mov
jle
fadd
sub
or
insb
aaa
pop
xor
jmp
popa
mov
fistpl
add
sahf
lcall
mov
movsl
stos
addr16
fcomi
bnd
or
xchg
and
repnz
and
mov
sbb
stos
in
stos
cmp
outsb
mov
je
sbbl
xchg
pop
out
mov
push
imul
pop
fdiv
mov
aad
pop
push
dec
cltd
rorl
cli
repz
adc
aas
pop
test
push
sbb
je
rcl
mov
shll
mov
push
mov
xor
popf
cs
or
or
arpl
xchg
inc
add
pusha
hlt
cmpsl
inc
add
mov
pop
dec
sbb
cmpsb
fwait
das
leave
scas
or
js
cmp
mov
push
int
mov
jl
ss
push
and
adc
dec
xor
out
jne
dec
inc
leave
mov
loopne
mov
loop
out
jmp
movsb
ret
sbb
mov
enter
jno
pop
jb
pop
pop
xchg
inc
xchg
jne
pop
or
mov
push
scas
popa
int3
ja
mov
dec
push
loope
mov
push
sub
jl
push
add
aas
popf
scas
test
lds
xor
add
push
cmpsb
xchg
mov
negb
out
out
and
mov
sar
or
lahf
sbb
cld
inc
mov
orl
add
sahf
xor
fcmovne
lds
or
jns
ror
inc
mov
mov
sub
icebp
add
cmp
cmp
pop
aas
cmp
inc
dec
xor
insb
jne
sti
arpl
fmull
shlb
inc
test
sub
xor
pop
sahf
mov
mov
pop
shll
pop
dec
popf
jno
push
lahf
xchg
jb
pop
jae
and
insb
ret
cwtl
sbb
test
sbb
ljmp
dec
jno
scas
cmp
aas
xor
shr
sub
and
sbb
outsb
and
cmp
lret
mov
stos
mov
das
xlat
test
call
add
push
pop
imulb
jns
dec
xchg
push
pop
testb
fidivrs
and
leave
out
cmpsl
mov
cmpsb
icebp
push
pop
sbb
sub
mov
stos
inc
dec
jecxz
fildll
dec
scas
mov
ret
push
lods
jnp
ret
inc
xor
scas
xor
lret
xlat
rcrb
rclb
ret
cmpb
cld
push
testb
xor
ss
or
ret
add
mov
movsb
cmp
xor
rorb
sahf
sub
sub
dec
leave
mov
aas
push
jns
bound
mov
ret
iret
or
in
aad
ficoms
jnp
fwait
mov
cs
test
inc
push
inc
add
dec
add
std
lds
cmp
mov
jg
xor
lcall
or
test
mov
adc
inc
nop
stos
aaa
repnz
push
sahf
fidivrl
dec
test
mov
stos
fnstenv
rdmsr
inc
fcompl
mov
mov
data16
jb
lods
cmp
mov
popf
or
lds
fdivl
add
dec
outsb
jae
test
in
out
mov
sbb
lret
aam
lods
push
mov
enter
push
sahf
xchg
pop
add
push
push
inc
adc
mov
aad
cli
sub
shlb
jns
ret
aaa
mov
mov
xor
lock
jns
ficomps
out
shll
iret
inc
aas
jno
ljmp
jnp
testl
cltd
test
cmp
add
insl
cmp
cmp
test
jb
sbb
push
les
adc
or
dec
mov
das
xchg
dec
loope
cwtl
daa
lret
imul
or
mov
jmp
mov
pop
dec
lea
jl
add
ud0
js
or
push
mov
xor
xor
sbb
sub
xchg
scas
mov
lcall
and
xor
and
dec
sbb
adc
cwtl
mov
cmc
fnstsw
lods
subl
add
inc
push
rcr
fcompl
adc
js
lods
mov
test
mov
sub
jae
enter
inc
rcll
push
mov
inc
xchg
out
add
imul
inc
aam
push
adc
cmc
insb
mov
sub
sbb
adc
imul
jb
lcall
jg
jmp
cmc
pop
sbb
sbb
adc
pop
sbb
inc
pop
add
jns
js
cmpl
or
pop
sbb
es
mov
inc
push
bound
int
nop
dec
leave
sub
cmp
out
bound
data16
inc
pop
fs
cld
out
inc
int
call
jno
jo
push
xchg
mov
aam
jg
mov
imul
loopne
mov
xor
rolb
movsl
mov
rcll
les
dec
inc
push
inc
inc
jbe
push
stos
mov
gs
push
enter
dec
js
shlb
idivl
mov
mov
lret
dec
sbb
add
insl
push
add
fisubrs
lea
pop
out
icebp
jo
into
jl
jb
into
or
scas
andl
aas
in
ja
loopne
add
out
nop
jmp
and
or
jnp
mov
dec
ret
fcmovu
shl
pop
pop
outsb
je
adcl
outsl
pop
ret
mov
mov
insb
sbb
movsb
dec
call
xor
pop
jne
pop
add
pop
dec
stos
push
ret
push
cmc
mov
xchg
add
xchg
mov
push
and
fdivrs
cs
aas
mov
jg
lea
lock
push
add
aaa
sti
dec
adc
fcmovnu
je
out
pop
ds
ds
mov
movsb
in
jecxz
pop
pop
shrd
loope
mov
jecxz
sub
add
adc
push
movl
daa
sbb
cmp
mov
push
mov
mov
mov
sub
and
inc
inc
push
ljmp
pop
iret
idivb
imul
and
divl
outsl
cwtl
nop
jb
adc
adc
into
or
das
cmp
lods
mov
aas
jo
jecxz
insb
cmpsl
int3
cmp
test
clc
std
xchg
sub
jg
adc
aaa
inc
lds
mov
pop
repz
pop
sti
mov
pop
cmpb
or
add
pop
and
int
and
cmp
lret
aam
mulb
mov
cld
and
or
rcrl
daa
push
dec
lods
sahf
andl
std
dec
dec
push
xchg
mov
imul
dec
pop
loop
fcompl
inc
sub
mov
sbb
popf
sti
mov
bnd
je
es
mov
pop
push
je
mov
in
sbb
and
test
adc
inc
mov
pushaw
mov
sahf
lret
cmpsb
or
cs
jecxz
subb
test
add
mov
add
icebp
movsl
xor
loopne
data16
bound
lcall
iret
jne
xchg
xor
enter
or
mov
pop
mov
inc
sbb
xchg
dec
call
fists
pop
adc
daa
mov
ret
cmp
push
ret
mov
or
rol
fistpl
ljmp
fwait
and
repz
jle
pushf
mov
fidivrl
out
bound
in
mov
outsb
in
push
aad
jecxz
dec
sub
adc
sbb
push
xlat
fadd
cld
aas
not
into
mov
sbb
int
push
mov
sub
rclb
dec
sub
mov
pop
sub
fmull
mov
ret
fimull
mov
inc
xchg
loop
out
repz
pop
clc
cmp
ds
mov
add
and
sbb
flds
adc
nop
enter
mov
jae
jge
inc
push
cmp
fiaddl
and
mov
adc
sbb
push
mov
push
xor
movl
sub
mov
mov
add
mov
addl
xor
add
sbbl
mov
mov
add
mov
andl
jmp
in
ss
and
cli
lcall
sub
jl
js
xchg
imul
adc
sub
dec
mov
pop
ljmp
pop
xor
popa
or
mov
mov
or
push
push
sbb
add
imul
adc
cmp
cmpsl
aaa
les
outsb
addr16
cmpb
xor
sbb
popa
jge
sahf
dec
jmp
aaa
ja
xchg
pop
js
out
and
xchg
push
adc
fwait
repnz
xchg
outsb
push
or
jecxz
and
jbe
lock
and
pusha
pusha
mov
lock
cwtl
mov
sub
std
lods
dec
out
xchg
incb
cmc
fwait
mov
lret
xchg
mov
pop
mov
dec
movsl
dec
das
pop
cmpsb
cld
adc
push
es
popa
sub
jmp
push
aad
jnp
pop
mov
mov
subl
scas
pop
mov
lea
stos
cvttps2pi
pop
mov
pop
push
cmpsl
sbb
into
push
pop
pusha
xchg
adc
cld
inc
adcb
adc
cltd
fldl
ljmp
cli
or
out
ret
div
ja
mov
sarb
arpl
fdiv
mov
mull
pop
movsb
je
std
nop
sahf
fwait
cmp
xor
jb
mov
push
adc
mov
loope
mov
daa
lods
test
or
pusha
lcall
cltd
leave
mov
int
orl
cmpsl
dec
xor
ja
or
or
push
call
shlb
mov
jecxz
adc
lea
push
jmp
xchg
ss
out
insb
jo
fwait
stos
or
jp
insb
in
mov
jmp
mul
xor
in
lahf
jmp
in
dec
mov
test
push
shll
xchg
add
sub
cli
sbb
pushf
shrl
sub
in
rcl
or
out
push
xor
es
xchg
shlb
fs
loopne
sbb
call
jp
loopne
rolb
push
add
xor
fdivr
jo
bound
fisubs
push
shll
adc
and
inc
xchg
pop
add
jnp
cmpsl
stos
repz
test
lds
fcomps
mov
insl
mov
ret
lock
push
lods
cld
or
xor
mov
dec
push
int3
add
pop
aaa
adc
xchg
loopne
mov
std
sti
fs
jge
mov
jno
test
faddl
push
inc
add
rolb
dec
lcall
jae
lods
push
or
loopne
adc
out
or
in
and
xchg
push
ja
jmp
aam
xchg
xchg
mov
mov
and
adc
fisubrl
jbe
es
xchg
add
jecxz
mov
es
lret
inc
push
test
pop
or
xchg
inc
psllq
pusha
xchg
in
mov
pop
cltd
adc
or
sub
mov
lds
mov
jp
rclb
jmp
push
movsl
out
iret
dec
add
pop
push
sbb
mov
aas
and
dec
repnz
or
ffree
mov
mov
sbb
in
xchg
test
mov
testb
call
mov
cltd
movsl
outsb
mov
xor
fs
or
dec
mov
or
cmp
leave
inc
insb
pushf
inc
cwtl
test
pop
loopne
mov
pop
mov
add
lock
arpl
jmp
mov
mov
dec
out
subb
aad
mov
mov
jp
push
mov
sbb
leave
mov
mov
mov
xchg
pop
icebp
inc
scas
rcrl
add
ret
outsb
ja
mov
push
fldl
aaa
dec
imul
dec
shll
push
push
dec
adc
or
and
sbb
dec
ja
sub
adc
pop
adc
add
push
test
jl
inc
dec
dec
aaa
adc
cmp
inc
test
fisttpl
outsb
mov
sub
xor
sub
push
mov
cmp
dec
jp
cmpsb
push
shll
push
push
lcall
adc
mov
movzbl
sub
mov
andl
mov
andl
mov
addl
mov
and
mov
addl
mov
jmp
or
sub
gs
popa
xor
rclb
js
jl
js
cmc
in
fwait
shl
das
fwait
jo
jecxz
outsl
pop
testb
int
sbb
out
xchg
mov
stos
icebp
test
hlt
js
xchg
inc
insl
adc
shll
add
jle
push
mov
orb
adc
movsl
loopne
add
pushf
jb
ret
subl
jmp
enter
push
out
xchg
adc
in
xchg
dec
mov
and
cs
aad
xor
rorl
in
outsb
movsl
cmpsl
rol
andl
pushf
in
xor
lahf
mov
inc
add
aam
lods
mov
lock
mov
sbb
inc
pop
fsts
pop
cmp
and
pop
and
xchg
cmp
add
mov
loopne
aad
cmp
add
xor
dec
push
sub
jecxz
mov
scas
mov
sub
mov
testb
popa
es
js
aad
pop
xchg
mov
call
adc
dec
je
test
inc
nop
shlb
mov
in
cli
in
test
dec
add
inc
aas
icebp
ja
xchg
mov
rcll
inc
pop
adc
pop
mov
xor
xchg
push
icebp
dec
cmpsb
jle
xchg
jae
lahf
jge
dec
sub
movaps
lret
js
push
jns
out
cmpl
push
rolb
mov
jl
mov
and
enter
aam
cmp
add
mov
stc
sub
dec
push
loope
pop
iret
test
cmp
lahf
call
je
iret
push
sbb
add
push
mov
ds
or
sub
jbe
fistps
xchg
jge
mov
fdivl
sub
jb
inc
rolb
lcall
jno
cmc
imul
adcl
pop
mov
jecxz
insl
xchg
push
fsubrs
inc
mov
bound
mov
and
test
outsl
xchg
ss
or
imul
mov
mov
jle
jp
inc
gs
prefetchwt1
mov
cs
pop
repnz
aas
mov
in
scas
pop
lahf
lea
icebp
mov
mov
inc
jge
jle
or
sar
inc
popl
pop
push
xchg
push
xor
popa
cwtl
and
push
ljmp
push
mov
jmp
mov
xlat
jmp
lods
xchg
paddd
add
mov
mov
sub
lret
cmp
rorb
mov
and
idiv
inc
outsl
sbb
movsb
and
and
sbb
xorl
sbb
add
jecxz
sub
bnd
dec
pop
jb
cli
mov
je
push
test
data16
orb
bnd
or
jae
push
mov
dec
stc
inc
pusha
ja
imul
ficoms
push
rdtsc
rol
or
mov
pop
jmp
add
bound
sbb
xchg
pusha
mov
xor
dec
rcll
xor
inc
xor
inc
data16
into
jnp
into
dec
and
sub
jge
sbb
jmp
les
filds
imul
testb
lods
and
movsl
imul
push
lods
outsl
insl
jge
das
push
dec
aam
fcmove
lret
mov
in
or
push
leave
push
jno
lds
adc
mov
or
xchg
loopne
sub
mov
adc
mov
js
jecxz
xor
mov
cmpsb
out
pop
sbb
test
pop
adc
mov
push
jno
and
mov
adc
das
std
xchg
xor
movsl
cltd
add
out
jl
inc
push
mov
add
fistl
enter
or
mov
mov
xchg
sub
test
je
jle
outsl
das
adc
xchg
xchg
dec
adc
jnp
and
scas
repz
mov
out
sbb
fmull
das
or
mov
fistpll
decb
sub
push
xor
sub
out
add
jb
and
ja
sbb
rol
int
loope
sub
or
lret
xchg
mov
in
xchg
mov
test
cmp
popa
imul
ret
inc
fmuls
stc
jae
clc
call
sub
push
dec
test
or
pop
push
push
fisubrs
and
adc
add
and
push
ret
mov
loop
xchg
or
inc
jl
js
cmp
ja
mov
dec
xor
lahf
lock
pop
push
call
loop
test
xor
mov
push
pop
mov
dec
push
bound
inc
icebp
stc
test
push
and
loope
imul
sbb
jo
push
lods
cltd
mov
cmpsb
or
icebp
imul
shrb
xor
stc
lea
cmpl
sbb
inc
mov
cmpb
gs
psubusw
mov
pop
insl
pop
dec
xlat
divl
dec
dec
sub
and
mov
cld
dec
imul
aaa
jae
dec
jl
dec
xchg
cld
pop
int3
shl
sbb
test
jns
loop
iret
mov
arpl
sub
in
fcoms
mov
fistps
mov
das
popa
int3
push
pusha
inc
mov
jo
addb
out
dec
mov
sti
es
jae
into
push
xor
fisttps
and
insb
cld
imul
insl
jb
movsb
jb
pop
dec
pop
cmpsb
lcall
ja
add
adc
push
roll
dec
frstor
mov
flds
pop
scas
jno
cmp
fsubrl
divb
and
ret
xchg
mov
lods
mov
mov
daa
pop
mov
mov
jp
nop
mov
aaa
aam
cmpsl
add
push
icebp
pushf
inc
sbb
daa
push
mov
bound
and
js
pop
mov
out
pushf
ljmp
adc
sub
jp
sti
and
push
aad
fnsave
cld
mov
call
aam
lock
adc
jl
or
out
lods
out
push
lods
aam
push
xchg
adc
shll
cmp
cmpsl
sti
addr16
imul
xor
xor
xor
lcall
out
mov
jno
rcrb
lds
xor
push
pop
pushf
xchg
das
je
imul
mov
loopne
inc
xchg
mov
mov
stc
insb
or
sub
outsb
sub
popl
and
ds
out
insl
pop
push
into
cld
stos
loope
sbb
sbb
repnz
jmp
sahf
push
in
es
add
sub
mov
push
std
cld
add
cltd
push
inc
cmp
pop
inc
sub
sbb
repz
mov
mov
cmp
gs
push
or
jb
in
mov
test
std
test
and
cli
fists
hlt
xchg
mov
xor
push
lds
rolb
das
dec
mov
or
mov
jg
cli
outsl
sahf
pop
movsb
dec
cwtl
mov
fwait
shrb
and
test
jecxz
cmc
pop
or
jg
push
mov
das
and
dec
sub
movsb
roll
lock
sub
arpl
or
add
das
mov
and
in
push
and
mov
mulb
push
out
gs
lods
roll
xor
nop
jp
cmp
xor
cmp
dec
inc
stos
or
push
pop
sbb
or
push
mov
adc
mov
sbb
push
mov
mov
icebp
jge
aaa
test
jb
rorl
xor
icebp
mov
sub
out
cmp
xchg
rolb
stos
add
mov
push
mov
jnp
mov
sbb
push
sbb
pushf
xchg
popa
aaa
adc
pop
fmuls
sete
fs
cmp
fucomip
mov
sub
adc
ret
jne
push
xor
cmpsl
mov
pop
xor
stc
sbb
enter
ds
cmp
imul
sti
jmp
sub
xchg
push
xchg
iret
mov
sub
lret
int
mov
out
rcrl
mov
imul
div
push
subl
jo
add
dec
pop
cmp
mov
xorb
lret
mov
or
inc
pop
jp
fdivrs
stc
jnp
or
add
xchg
xor
inc
xchg
add
andl
sahf
mov
js
inc
out
xor
lret
fdivl
add
mov
arpl
pushf
fwait
cltd
dec
inc
cmc
mov
pop
mov
clc
cmc
stos
jecxz
cmpsl
ds
sbb
mov
jne
mov
xor
add
leave
ret
push
mov
sub
mov
subl
mov
mov
subl
mov
add
movl
or
movl
orl
mov
sbbl
push
push
push
adc
mov
adc
xor
movzbl
sub
mov
movl
add
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzbl
xor
movl
addl
movl
movzwl
sub
movl
inc
movl
mov
xor
jmp
and
fisubs
into
leave
es
jmp
leave
or
js
ss
js
and
xlat
dec
dec
ret
mov
sub
mov
jb
mov
jg
inc
insl
jg
xchg
movsl
call
dec
stos
stos
cli
aam
jae
fwait
jp
sbb
xchg
sbb
inc
lock
cmp
out
repnz
movsb
scas
xchg
add
xchg
or
push
jge
or
sbb
aaa
lret
sub
pop
mov
fiadds
aas
popa
ffreep
les
push
sub
and
ret
cmp
scas
pop
mov
add
and
dec
add
cmp
mov
mov
pushf
pushf
pushf
lds
xchg
andl
inc
test
lea
jo
push
std
inc
jle,pn
repnz
jo
cmp
loopne
mov
nop
inc
aad
lahf
popa
sbbl
xor
dec
iret
lret
pop
dec
int
std
push
push
iret
mov
pop
inc
sub
inc
hlt
lock
push
ljmp
push
and
pop
push
mov
mov
lcall
mov
rorb
add
lods
push
and
inc
mov
sti
stos
or
cmp
adc
cmp
orl
dec
sbb
out
pop
addr16
ror
or
daa
sbb
push
js
mov
ja
call
cs
out
subl
movsb
ret
jg
inc
xor
mov
in
adc
mov
fildll
jl
mov
and
les
daa
not
cmp
movsl
lret
adc
mov
sub
call
push
adcl
ss
or
xor
ss
xor
lea
cmp
inc
js
loope
rcll
and
and
jb
daa
stos
lods
mov
adc
cli
mov
mov
sbb
enter
mov
clc
in
inc
sbb
popa
out
out
push
xor
cld
or
lret
mov
lods
out
out
fildll
and
pop
ss
xor
lret
mov
inc
gs
mov
scas
xor
mov
push
lock
shrl
sbb
mov
popa
in
inc
enter
outsl
mov
sub
aam
mov
aas
movsb
and
cmpsl
dec
fs
popa
xor
rorl
inc
test
loope
stos
pop
sub
ficoml
dec
jmp
js
cmp
inc
xlat
call
imul
sbb
jg
lock
dec
push
sbb
in
cmp
movsb
shr
lret
add
stc
ds
shlb
dec
mov
mov
cld
push
fcoms
pop
mov
jle
addr16
adc
mov
into
movsb
scas
mov
adcl
arpl
fcomps
ja
clc
movsb
dec
leave
mov
cld
inc
add
fstl
push
cmpsl
add
scas
mov
fs
adc
pop
repz
pop
jb
jne
outsb
aad
popa
inc
mov
inc
xchg
xor
bound
xchg
pop
jg
inc
xor
push
mov
fidivrs
adc
add
xor
clc
xor
stos
jg
push
xchg
lds
and
aaa
xlat
ja
mov
ds
xchg
dec
int
into
push
adc
aam
or
scas
sub
dec
fnstenv
negl
jb
add
dec
inc
bound
inc
in
sub
inc
ror
push
sbb
loopne
or
cmc
notl
pop
faddl
adc
sbb
jae
out
mov
pop
lods
aas
pop
sub
cmp
bt
leave
adc
push
lods
shll
jl
mov
sahf
pop
jge
popf
pop
and
inc
addr16
xchg
into
gs
in
xlat
add
out
mov
jo
or
add
orl
mov
movzbl
add
mov
movl
add
movb
or
mov
orl
xor
addl
add
mov
xor
xor
or
mov
incl
xor
add
xorl
push
mov
xor
add
andl
push
xorl
mov
orl
xor
add
sbbl
push
jmp
ljmp
mov
jle
outsb
ja
mov
pusha
js
ss
js
and
adcl
nop
push
ja
push
ja
repnz
inc
pusha
adc
sub
imul
pop
out
loop
cmp
out
addr16
jnp
jnp
aaa
mov
sbb
leave
stos
aam
xor
cld
or
lret
pop
jle
clts
push
in
inc
lods
cmp
movsb
jae
inc
ss
mov
pop
xchg
and
adc
push
inc
in
lcall
xor
jmp
jb
ficoml
dec
dec
stos
dec
and
and
fistpll
aam
fstpt
out
das
or
popf
rcr
mov
das
fs
je
call
jo
ljmp
xor
addr16
fwait
scas
iret
cli
or
insb
out
rclb
adc
ljmp
data16
std
std
dec
push
add
dec
dec
xor
cmp
push
xor
hlt
cld
rclb
std
mov
imul
jb
or
lea
shll
in
cmc
lea
pop
sub
in
out
dec
pop
test
dec
inc
adc
ret
es
add
xchg
mov
dec
mov
pop
lea
stc
mov
jge
int3
ret
je
aaa
cmp
add
xchg
xchg
jle
lahf
mov
cmpsl
xchg
jbe
rorl
dec
or
lcall
jns
mul
sbb
arpl
das
gs
push
push
lods
test
or
dec
es
pop
ljmp
loop
fsubrl
fiaddl
xor
mov
shlb
loopne
outsl
movsb
pop
and
ret
push
add
pop
xchg
cmpsb
subb
sbb
insl
sbb
and
addr16
xor
sub
push
inc
lret
sbb
lahf
adc
sbb
jb
add
jnp
enter
or
sbb
loop
sti
dec
lods
jl
jmp
out
mov
pop
lds
movsl
into
outsb
sub
xrelease
int
push
mov
outsb
jmp
mov
cwtl
lods
das
pop
ret
and
xor
into
fistpll
mov
mov
test
adc
bound
push
gs
nop
pop
xor
mov
pop
add
inc
add
jg
aam
scas
out
scas
stos
adc
insl
sub
and
xchg
push
jmp
xorb
out
ss
sub
int3
iret
cmp
dec
xchg
pop
andl
fsubr
out
lcall
outsl
sbb
lret
cmp
icebp
add
loope
or
adc
xor
ret
or
repz
push
je
inc
pop
dec
mov
ficoms
or
push
pop
loope
movsb
ret
data16
push
dec
mov
ja
mov
or
jno
ja
mov
in
int3
cli
in
sub
adc
mov
add
pop
out
test
das
imul
cltd
sbb
sbb
jb
sbb
andb
ljmp
scas
fcoml
xchg
es
les
aam
xlat
pop
in
mov
mov
xor
adc
lods
sbb
cmpsl
cmp
mov
arpl
ret
ret
rcll
push
pop
roll
xlat
mov
jns
pop
push
mov
push
xor
adc
add
add
sti
xchg
push
xchg
xor
inc
pop
jb
inc
xlat
pushf
push
js
push
push
test
ja
mov
xlat
push
mov
adc
sub
jnp
xchg
cld
inc
enter
dec
pop
jns
jge
mov
mov
je
inc
push
add
and
insb
dec
push
mov
imul
dec
push
stos
int3
addr16
cmp
pop
icebp
sub
dec
cld
imulb
loop
or
or
jo
or
push
mov
jecxz
push
mov
xchg
shlb
scas
int
xchg
and
outsb
data16
pop
in
ss
mov
pop
xchg
fcoms
pop
scas
xchg
and
repz
mov
mov
push
test
mov
add
add
push
pushl
pushl
jmp
aam
loop
cli
jmp
test
sbb
jl
js
movhlps
xchg
fmuls
mov
pop
add
xor
insl
sub
ret
pop
test
ss
out
cmp
insb
nop
clc
push
out
xor
xor
lock
mov
les
push
lods
sbb
out
lcall
mov
jb
outsb
imull
stos
inc
xchg
cmp
shrb
fstl
or
pop
dec
enter
dec
sub
jno
shrb
jbe
movsb
ds
loop
les
push
push
inc
mov
push
iret
and
lea
insl
out
xchg
pop
jp
inc
pop
xchg
jge
xor
xchg
fstpt
ret
mull
fnstcw
shrl
icebp
in
dec
sub
arpl
das
outsb
mov
mov
test
movsl
je,pn
adc
repnz
and
jnp
inc
pop
repz
stos
loopne
out
fstps
in
jp
dec
or
inc
jge
sub
fcmovne
fcmovnu
xor
dec
lods
js
loop
les
dec
adc
jl
std
icebp
mov
cwtl
fbld
push
xor
flds
mov
fs
pop
cmp
cmp
pushf
cwtl
or
push
xor
mov
xchg
repz
dec
and
adc
cmp
movsb
xor
jbe
je
test
iret
xor
cmp
insl
lret
adc
mov
push
cmp
mov
xchg
adc
xor
cmp
mov
dec
pop
sub
dec
mov
mov
int
sbb
in
push
xor
pop
cmovnp
fld
mov
mov
lcall
and
out
arpl
jp
sahf
iret
testb
insl
jae
cmp
hlt
mov
repz
jmp
add
arpl
decl
jo
pop
divl
dec
test
xchg
mov
push
mov
cmp
add
loope
push
loop
cltd
sbb
sub
xchg
in
mov
sbbb
and
idivl
xchg
shl
ret
xlat
lcall
xor
pop
je
jns
scas
xorps
or
imul
inc
jl
popf
and
mov
or
stos
ss
or
xor
sub
hlt
sbb
imul
addr16
push
and
jp
xlat
daa
dec
mov
cmp
arpl
sbb
sub
sub
outsb
lahf
cld
push
jo
inc
and
movsl
fwait
push
rcr
jmp
movsb
mov
out
aas
mov
mov
hlt
cmp
call
and
lahf
stos
mov
push
inc
push
push
icebp
push
mov
loop
ret
int
sbb
xchg
sbb
repz
jle
sub
xchg
test
pop
push
leave
int
lret
jns
iret
out
lcall
dec
cmpxchg
sub
sarb
idivb
outsl
cwtl
jmp
jb
std
push
dec
stos
add
outsl
lcall
arpl
popa
and
cmp
or
or
lods
and
stos
jmp
xchg
mov
or
fidivrs
sahf
outsl
and
push
cwtl
addr16
mov
lods
call
sub
out
dec
js
in
or
imul
sbb
subl
dec
adc
out
sub
pop
iret
fs
jp
xchg
mov
adc
lds
sbb
test
int
jbe
mov
loope
cmpsl
and
sarb
and
push
dec
divps
dec
mull
hlt
shlb
ja
mov
jbe
test
negl
pop
xor
adc
add
mov
ss
pop
test
or
mov
shlb
adc
mov
mov
and
daa
test
inc
cmc
xor
aaa
inc
cmc
xchg
std
pop
mov
in
iret
jmp
or
jmp
and
mov
jg
ss
js
mov
cmc
jecxz
scas
mov
out
hlt
fsubl
sub
loope
hlt
adc
insl
inc
imulb
int
xchg
fldt
mov
imul
test
rcrb
push
sub
jle
popa
mov
mov
mov
push
out
shll
dec
push
sub
test
jecxz
js
inc
jp
xchg
mov
mov
lds
lahf
lds
push
mov
inc
jp
stc
cld
stos
and
or
sbb
sarl
enter
scas
std
xchg
mov
outsb
xchg
inc
push
clc
mov
pop
fsubr
cmp
pop
mov
idivl
cmpsl
add
inc
xchg
sub
push
push
xchg
ret
or
mov
add
inc
orb
ret
sub
jno
lock
adc
mov
and
fdivrp
gs
andl
lahf
xchg
push
mov
cmp
mov
adc
test
sub
cwtl
les
jb
add
mov
icebp
jl
call
xchg
mov
push
les
push
add
inc
mov
push
jmp
jl
adc
iret
gs
or
inc
inc
out
cmp
jbe
sarb
test
pushf
std
and
inc
or
enter
ljmp
dec
cmpsl
push
xchg
stc
push
push
dec
cs
popf
sub
mov
loop
cmp
sbb
ret
movsl
cmp
adc
inc
xorb
iret
cmc
or
push
mov
fnstcw
pop
mov
insb
js
fisttps
cmp
push
imul
mov
jecxz
pop
inc
xor
inc
mov
inc
js
daa
jno
or
jg
cmc
cmpsb
scas
out
xchg
or
cmc
stos
int
movsb
and
mov
test
jo
test
inc
adc
shll
sbb
adc
cmp
jmp
cmpsl
add
fs
push
repz
xchg
mov
shl
adc
mov
push
cmp
xchg
xor
outsb
jo
shr
push
xor
adc
xchg
xor
rcr
aad
iret
adc
xor
aad
aaa
xchg
lahf
jns
gs
fisubrs
adcl
dec
rcrl
mov
inc
ljmp
push
sbb
or
mov
repnz
and
outsl
pop
push
aas
push
mov
push
pop
add
dec
mov
cmc
jb
add
push
inc
xchg
ret
mov
cwtl
push
dec
mov
sbb
mov
aas
les
sbb
push
in
xchg
shll
jg
adc
lea
xor
ja
test
idivb
iret
or
jb
andl
repnz
adc
mov
lcall
filds
mov
fcoms
sub
push
push
sub
fists
mov
lods
mov
push
es
or
in
adc
and
dec
mov
push
jo
shr
xchg
or
jo,pn
stos
fists
sahf
mov
cltd
sbb
les
movsb
jle
mov
cmp
fxch
out
sbb
mov
addl
add
dec
icebp
add
stc
dec
popl
out
stc
addr16
test
dec
inc
mov
push
aad
outsl
stc
cmp
mov
push
push
push
cmpsl
xchg
sub
scas
dec
call
test
xorl
cmpsl
je
cld
or
movsl
daa
lahf
push
int3
sub
xor
jl
popf
addb
orb
push
and
les
arpl
sub
jne
xor
cld
hlt
mov
icebp
pop
out
pop
pop
je
xchg
out
xchg
inc
out
add
fistl
lcall
fdivs
sbb
jle
add
mov
inc
icebp
test
movl
je
addl
lea
push
adc
mov
xor
orl
add
push
or
jmp
aad
push
pop
stc
jns
lcall
cmp
and
jg
ss
js
xchg
fwait
mov
adcl
xor
int3
add
lea
imul
popf
ret
lods
dec
hlt
sub
out
je
lea
mov
addb
adc
adc
ficoml
push
add
loope
ror
sub
int
ret
and
popa
xchg
xchg
pop
add
orb
imul
or
js
xchg
aad
orb
test
scas
mov
push
out
sub
jnp
xchg
loope
dec
lods
mov
loopne
pop
and
cmc
pop
xchg
mov
scas
loop
call
jns
xchg
cmc
ss
aam
dec
mov
ljmp
sbb
mov
sbb
push
and
add
cld
jp
xlat
lretw
insb
push
sub
leave
mov
adc
mov
pop
mov
iret
push
push
scas
push
jl
addr16
mov
loopne
inc
mov
and
mov
mov
and
and
add
ds
mov
lock
sub
lahf
pop
jg
outsl
push
je
lret
filds
out
mov
nop
cwtl
mov
and
cmp
dec
lea
aaa
or
inc
jl
rolb
inc
pop
in
dec
mov
imul
xor
loopne
ds
pushf
sbb
scas
xchg
lahf
push
lods
int
cmc
add
mov
and
sub
or
add
mov
jge
push
push
xchg
cmp
inc
fwait
roll
fdivrs
das
adc
and
jg
aam
mov
ja
in
xor
stc
or
xchg
xchg
mov
or
inc
sbb
fdivs
push
arpl
daa
imul
lea
adc
jnp
inc
jge
lret
and
cs
iret
ds
aaa
mov
prefetcht0
mov
push
pop
mov
jne
mov
inc
or
xchg
jge
popf
mov
mov
mov
out
divb
rcl
ja
xchg
jl
xchg
ficompl
stc
xchg
fistpl
pop
ss
movsb
push
sbb
shrb
cmp
js
call
mov
inc
call
pop
iret
xor
xchg
and
and
or
pop
jno
test
repnz
mov
dec
sub
mov
call
xorb
mov
push
aas
push
and
adc
push
outsb
int3
push
int
push
and
dec
pop
xchg
sbbl
subl
mov
movsl
mov
in
rcr
aad
sbb
mov
adc
mov
or
outsl
fwait
movsb
pop
pop
lret
arpl
cli
mov
xor
dec
pop
fs
adc
mov
test
out
outsb
xlat
aam
jmp
dec
inc
in
jp
repnz
cmc
push
or
add
mov
rclb
mov
or
cmp
or
scas
cmp
sahf
xchg
sahf
pusha
mov
ja
loope
xor
mov
clc
sub
add
fmul
push
cmpsb
or
cwtl
movsl
testl
push
ret
in
out
and
clc
fisttpll
adc
mov
js
mov
cs
and
xchg
push
lds
std
sbb
xchg
inc
mov
lret
gs
xchg
inc
aaa
pop
stc
sbb
or
pop
sarb
shll
shll
orl
xchg
sbb
lds
xchg
jmp
enter
int3
dec
xchg
addl
adc
add
insl
xchg
and
mov
mov
sub
xchg
jl
stos
mov
jl
sahf
pop
add
pop
pop
adc
mov
push
hlt
shrl
and
inc
lock
jmp
scas
adc
lock
outsl
cmp
adc
bnd
js
jl
js
adc
aad
insl
and
test
ret
cmp
or
mov
and
fwait
lods
roll
es
out
daa
jge
and
xchg
dec
bound
lods
lea
test
xor
lret
in
push
or
dec
jbe
xchg
mov
push
push
ds
pop
stos
enter
add
testb
pop
sub
inc
sub
dec
mov
icebp
movsb
sti
std
dec
cmpsl
dec
adc
arpl
mov
jmp
push
shll
ja
add
mov
bound
popa
sarb
repz
adc
icebp
fcoms
data16
lcall
push
jno
push
add
ret
xor
sbb
out
gs
jle
adcl
aaa
inc
lods
adcl
clc
jp
ret
fs
mov
jo
pop
xor
jge
fsubs
cmp
add
mov
sahf
outsb
ja
lahf
push
mov
mov
sti
push
push
pushf
rclb
add
dec
movsl
push
lock
popa
mov
call
sbb
loope
push
das
aad
jp
ds
jne
mov
jle
xchg
pop
jb
mov
imul
fcoms
loopne
push
bswap
outsl
xchg
mov
inc
aaa
push
mov
bnd
out
cmp
push
ds
out
xchg
cmp
cli
dec
mov
mov
mov
aam
add
add
xchg
cmp
lcall
jne
sti
rorl
jecxz
daa
lret
jnp
adc
mov
sti
cmp
cmp
andl
sahf
shrb
inc
sub
rolb
frstor
mov
adcl
pop
scas
inc
rcl
mov
push
adc
pop
imull
adc
add
or
push
in
push
fsubs
pop
mov
cmp
rcr
xor
adc
fstl
mov
jnp
push
xchg
popf
add
les
mov
pop
jb
xor
dec
in
in
sbb
js
outsb
adc
cmp
xor
pop
xor
neg
adc
insb
pop
sbb
imul
jnp
insl
and
sub
pop
mov
pusha
mov
pop
rolb
cmpsb
mov
nop
pop
out
ss
sbb
xchg
cmpsb
inc
and
enter
arpl
ret
testb
xor
es
ljmp
mov
cwtl
jmp
cmpsb
imul
in
mov
inc
and
mov
loop
sub
inc
dec
cs
leave
mov
mov
enter
les
jb,pn
xchg
mov
mov
aas
lcall
mov
jmp
xchg
repz
fisttpll
inc
out
push
sarl
adc
jmp
inc
inc
add
outsl
cwtl
mov
or
jge
ja
or
cmpsl
insl
sbb
bound
daa
mov
insb
test
mov
pop
xor
and
inc
decb
mov
and
int
lods
pop
add
push
mov
sub
lea
movsb
inc
mov
mov
jmp
sub
add
pop
ficoms
and
nop
or
daa
pushl
rcll
imul
mov
pop
cld
shlb
ds
pop
loopne
and
jbe
clc
stc
js
cmpsl
mov
jl
xchg
adc
aad
mov
dec
and
cmp
mov
xchg
aas
xchg
sahf
adc
pop
fnstsw
shrl
jg
jg
cld
jno
jno
ja
xor
push
dec
mov
adc
call
or
pop
push
push
int
add
test
jae
inc
inc
pop
jbe
lods
sub
mov
pop
adc
xorl
roll
movl
push
sub
mov
mov
subl
pushl
call
movl
mov
movl
cmpl
lea
mov
je
lea
push
mov
xor
add
jmp
cltd
adc
cmpb
sub
lcall
or
ss
js
shll
xor
push
push
xor
subb
mov
mov
pusha
movsl
into
mov
cmc
jecxz
adc
lods
cmp
pop
sbb
xchg
adc
dec
inc
and
and
jb
inc
adc
call
dec
hlt
ljmp
cmc
pop
mov
pop
imul
je
fwait
lret
repz
aad
in
jecxz
pop
cmp
out
out
out
subb
sbb
sahf
pop
xchg
aas
inc
lcall
aas
sbb
add
jecxz
mov
mov
and
push
push
dec
out
xchg
add
into
fcomi
fiaddl
imul
into
cmp
imul
lret
out
pop
cmp
mov
orb
xor
shll
pop
fistpll
sbb
loop
fdivrs
dec
aaa
test
push
jno
fidivrl
pop
in
out
movsb
cwtl
adc
inc
cmpsl
pop
ljmp
cs
xchg
add
addr16
pop
cltd
inc
dec
repnz
jle
jns
jecxz
xlat
lea
mov
push
or
sbb
daa
jbe
rorl
lods
insb
pusha
pushf
mov
ja
mov
or
mov
xchg
into
inc
cmp
aaa
lock
inc
fcoml
or
xchg
xor
jb
xchg
js
jae
sub
lods
in
mov
xchg
hlt
pop
xchg
mov
aad
jb
mov
mov
lods
fsubp
mov
adc
or
lcall
iret
test
push
xchg
es
jae
pop
jo
fists
movsl
push
es
popa
xchg
daa
pop
xchg
orl
in
push
pop
jp
xlat
out
lea
cmp
mov
pop
flds
data16
in
xlat
les
outsb
fsubp
movsl
pop
xor
push
outsl
jb
push
push
pop
xor
and
or
add
shll
mov
or
mov
cmp
mov
push
push
adc
jp
test
add
pop
mov
dec
aad
sbb
or
cmp
mov
dec
lock
mov
fwait
sbb
ds
adc
inc
repnz
icebp
cmp
loope
test
pushf
cmp
bound
and
aad
mov
mov
cmp
xchg
mov
dec
push
ret
cmp
xor
mov
out
aaa
mov
outsb
lock
js
dec
test
xor
daa
adc
outsl
push
std
jne
mov
push
fimull
out
das
push
jns
adc
cmp
and
xchg
xchg
push
dec
cld
sub
out
mov
shlb
pop
jmp
xchg
mov
cld
stos
inc
jmp
dec
mov
jge
push
fs
icebp
inc
jno
or
or
fs
lret
sbb
push
dec
nop
xchg
shrl
aaa
inc
subl
pop
jecxz
sub
jno,pt
xor
inc
and
dec
cmp
shlb
in
sbb
cmpsl
std
adc
frstor
jnp
and
fisubrs
cs
pop
push
out
ds
insb
jmp
jge
lret
and
cmp
lea
call
mov
sbb
xacquire
test
mov
sahf
js
mov
dec
insl
push
xchg
repnz
mov
loope
inc
lret
push
push
loop
sarb
mov
test
jmp
mov
pop
ljmp
int
ds
or
sarb
sbb
mov
rorb
and
push
add
push
stos
push
rorl
xchg
mov
cmp
out
jbe
push
shl
and
mov
and
rcr
mov
cmp
mov
lahf
inc
div
pop
js
sbb
shlb
jle
add
jge
outsl
mov
aaa
sub
xchg
lea
mov
dec
adc
bnd
inc
or
ss
sbb
add
cwtl
push
mov
xor
add
push
jmp
fdivr
mov
dec
cltd
aad
inc
mov
push
jg
ss
js
das
pop
scas
ret
stc
mov
stc
push
mov
pusha
mov
repz
in
fistl
push
in
add
std
ret
and
iret
xchg
mov
sbb
roll
adc
mov
push
not
rorl
dec
stc
cltd
lcall
mov
mov
addr16
repnz
pop
pop
lock
jno
sbb
call
sbb
xor
push
dec
repnz
sarb
inc
add
enter
pushf
xchg
enter
sub
jecxz
pusha
ja
out
sbbb
push
scas
cli
pop
lcall
sti
and
xor
cld
sbb
out
fcoml
aas
dec
fwait
adc
fbld
movsl
push
xchg
adc
dec
dec
ljmp
dec
ret
les
push
fcompl
clc
arpl
fisubrl
into
fs
xchg
inc
push
arpl
lahf
pushf
lods
lret
bound
and
cs
and
pop
adc
test
push
jae
xor
fdivs
jns
mov
popa
jp
pop
lret
loop
lea
shlb
clc
jp
cwtl
inc
cli
popf
nop
nop
cld
inc
scas
jecxz
popa
xor
fcom
or
push
or
dec
cmp
jl
out
or
push
fs
in
fdivs
and
data16
test
and
xor
inc
stos
loopne
popl
cwtl
fimull
xchg
pop
mov
jg
inc
mov
mov
sbb
mov
dec
loop
adc
push
int3
pop
cltd
pusha
loopne
aam
and
aaa
mov
push
enter
adc
fcompl
in
xor
jbe
std
out
mov
jns
jb
jl
daa
or
add
cmp
int3
jge
xor
sbb
cmp
sub
sti
sbb
jle
adc
rolb
mov
push
insl
mov
fimull
sub
mov
mov
fdivrl
jae
out
push
fldz
dec
call
int
jmp
pop
xchg
gs
or
jo
shl
add
out
gs
xchg
ja
int
add
lret
negb
fsubl
mov
icebp
js
lahf
mov
inc
xchg
add
push
sbb
inc
in
mov
fdivrl
jbe
or
fldenv
mov
js
xor
pop
aaa
sahf
lds
push
pop
xchg
push
cli
les
nop
popf
add
loop
ljmp
lahf
icebp
push
sti
adc
outsb
js
and
push
std
mov
mov
xchg
fsubrp
dec
in
jnp
sti
xor
cwtl
cmp
ljmp
sahf
icebp
and
cmp
mov
mov
dec
es
jno
mov
mov
mov
jecxz
xor
mov
mov
add
roll
lret
imul
aad
adc
push
mov
pop
cltd
ret
xchg
or
pop
sti
and
add
cmpsl
mov
xchg
sub
int3
daa
out
or
jg
das
lods
popa
push
adc
adc
out
cmp
xchg
sub
lcall
dec
inc
test
xor
xor
mov
push
cmpsl
xchg
sub
enter
dec
test
cltd
mov
push
ficoms
fstpl
in
adc
jle
shl
mov
xchg
arpl
add
jns
jbe
or
idivl
fiaddl
pop
cs
sub
add
mov
adc
mov
xchg
jo
fs
outsb
hlt
mov
jmp
xchg
inc
lret
adc
mov
scas
je
jle
mov
cs
add
mov
jo
pop
mov
pop
add
fwait
shlb
dec
shr
pop
adc
iret
int3
out
xchg
xor
mov
lahf
js
mov
push
cmc
mov
mov
adc
lods
mov
cmp
clc
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
ret
pop
stc
pop
popa
xchg
and
sbb
add
ss
js
sbb
jne
leave
mov
cmp
mov
cmp
push
adc
rol
push
scas
mov
paddusb
mov
mov
or
in
mov
sub
ja
dec
test
jne
or
fs
es
mov
push
xchg
mov
loop
sub
jle
movsl
mov
ret
mov
jo
ljmp
mov
movsb
in
or
pop
xor
test
rorb
test
or
xchg
add
loope
sbb
mov
inc
test
mov
clc
je
xor
arpl
mov
xchg
push
int
dec
pop
hlt
jmp
cltd
idivl
inc
pop
cmp
mov
mov
jo
push
test
lds
mov
adc
shrl
sub
mov
push
or
int3
sbb
std
inc
clc
xlat
xor
or
cwtl
cs
out
out
xlat
mov
incb
rolb
sub
mov
fcmovu
test
cmpsl
test
mov
addr16
icebp
fstp
mov
icebp
subl
pop
in
out
cmpsb
and
pop
pop
outsb
or
jge
stos
and
iret
or
call
bound
mov
adc
pop
dec
jae
rcr
pop
xchg
mov
stos
jg
xchg
fildl
xchg
int3
and
and
sbb
std
and
adc
xchg
dec
decl
inc
sbb
sbbb
in
jle
pop
rorb
cmc
push
adc
dec
into
aad
pop
sbb
mov
mov
push
sar
leave
add
aad
fwait
testl
and
mov
xchg
dec
pushf
jle
push
pop
inc
roll
mov
icebp
fisttps
in
call
jbe
ds
inc
repnz
into
les
xor
pop
rcrb
adc
mov
test
inc
cli
out
jb
xchg
xor
shl
pop
dec
movl
jnp
sub
fwait
pop
ret
nop
sub
or
fs
adc
adc
sbb
push
ret
sub
sbb
int
push
lock
mov
cmc
imul
fnsetpm(287
mull
push
shll
addr16
stos
es
fstpt
test
pop
jne
mov
jp
ret
adc
dec
pop
sub
pop
out
xchg
mov
hlt
mov
xor
mov
mov
test
into
int3
stos
mov
xchg
pop
and
arpl
aad
mov
shl
sahf
outsl
jno
hlt
cmp
sbb
push
inc
xor
cwtl
dec
xor
sub
cmpsl
incb
mov
jbe
outsl
mov
cld
sub
lahf
je
dec
sti
shll
pop
aad
and
mov
dec
adc
add
leave
mov
leave
jo
xlat
loop
dec
add
pop
aaa
inc
xor
pop
push
mov
les
xor
mov
std
add
xchg
xchg
jmp
or
mov
pop
in
mov
mov
adc
popa
adc
jp
cltd
icebp
mov
dec
push
cmp
mov
dec
adc
fs
popa
adc
pop
mov
jns
jge
jle
je
jp
pop
sbb
sbb
aaa
rcr
aad
jne
dec
lea
or
add
sbb
or
inc
scas
lcall
sbb
jb
cmpsb
mov
out
pop
fcmovu
out
xor
divl
mov
add
fwait
aaa
repnz
into
test
mov
dec
cmp
int
jge
roll
adc
xchg
push
in
lea
imul
mov
pop
daa
dec
enter
push
pop
outsb
mov
and
jno
enter
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sbb
movl
movl
incl
mov
mov
adc
lea
xor
jmp
hlt
ror
shrb
xchg
push
jmp
inc
stos
mov
jl
js
ret
and
xor
iret
push
jbe
inc
pop
adcl
push
push
and
lock
addl
mov
pushf
jb
pusha
push
push
mov
lret
pop
testb
jo
fildll
sbb
cs
lods
xor
shrb
daa
sar
push
aad
cmpsb
push
popf
leave
push
sbbl
sahf
sub
daa
cmpsl
and
lods
pop
hlt
mov
lods
push
jne
add
inc
sahf
aas
rcr
mov
sarb
rorl
mov
movsl
xchg
shlb
cmpsb
mov
adc
mov
dec
fdivrs
ja
cltd
mov
std
rcrb
and
addr16
dec
mov
push
aad
inc
and
add
xorl
add
shll
cltd
call
jno
ret
outsl
cltd
ret
mov
xchg
adc
mov
arpl
pop
je
icebp
cmp
push
mov
fwait
hlt
movsl
inc
cmpsb
and
push
mov
sbb
jecxz
stc
lcall
sbb
stc
push
loope
rclb
lods
sbb
addr16
dec
add
or
cmp
aas
pop
movsb
sbb
dec
hlt
cmp
lret
adc
xor
mov
enter
outsb
lret
psadbw
ret
sbb
jae
mov
jp
add
repnz
ds
mulb
jbe
repnz
fxch
stos
cwtl
test
mov
hlt
push
sbb
lcall
push
dec
test
insb
in
push
insb
out
pop
xchg
movsl
popf
addb
adc
dec
pop
sub
jmp
loopne
pop
lods
cmp
xchg
and
out
cmp
push
sub
sub
pop
and
int3
testb
leave
test
sbb
rclb
out
sbb
and
js
pop
mov
jp
mov
ret
fldl
movsb
pop
dec
jbe
fisubl
loopne
xlat
cmp
mov
or
pop
test
cmp
pop
cmpsb
mov
rorl
dec
std
pop
ror
ret
out
adc
aaa
int
push
push
jns
jmp
sarl
dec
sub
outsb
cmc
xor
jb
aaa
xor
mov
xchg
and
dec
pop
xor
xor
mov
xchg
jge
inc
mov
imul
or
inc
adcl
pop
inc
pop
cs
mov
xchg
aam
cld
and
bound
pop
insb
mov
push
jecxz
xor
mov
movsb
cmp
fists
iret
incl
mov
jl
sub
adc
pop
dec
xor
inc
ds
xchg
movsl
xchg
sub
pop
xchg
sub
ror
and
iret
mov
mov
xchg
mov
inc
rcr
fst
test
pop
bound
xor
int
gs
pop
lock
jb
and
popa
test
and
xchg
outsl
aad
andl
in
pop
jnp
and
mov
add
stc
shrb
inc
sti
push
and
pop
xor
sbb
sub
mov
xlat
push
or
pop
imul
ret
rcr
cs
cltd
out
mov
pop
testl
sarl
fisttpl
push
cmp
jge
lods
sub
xchg
adc
mov
push
inc
push
xlat
lret
dec
fs
inc
xchg
pop
mov
adc
in
movsb
sbb
ja
adc
jl
cmp
movsb
testb
imul
add
cmp
notl
add
xor
icebp
push
push
or
hlt
inc
jmp
popf
mov
mov
subb
into
ds
lcall
cli
in
int3
cmp
gs
jns
dec
xchg
or
push
sbb
cs
stc
pop
pusha
mov
adc
clc
dec
sti
pop
hlt
add
fsubs
dec
in
and
daa
movsb
jecxz
ljmp
inc
fmuls
loopne
add
adc
add
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xor
push
lea
and
mov
and
mov
sbb
jmp
lret
and
cli
jns
mov
or
sbb
lret
js
movsl
in
lret
fnstsw
out
lds
ljmp
mov
scas
sub
nop
test
lcall
xchg
sbb
in
pop
sub
pop
xchg
nop
das
in
xchg
xchg
inc
mov
pop
lods
xchg
addr16
mov
divl
test
lcall
mov
test
aas
adc
test
ljmp
aas
xlat
call
dec
cli
outsb
mov
testl
cltd
push
sub
js
fucomip
ja
dec
stos
inc
inc
sub
mov
loopne
cs
movsb
dec
cmp
pusha
popf
loopne
iret
cmp
add
ja
rorl
xlat
inc
adc
movsl
sub
les
xor
push
jnp
dec
das
xchg
nop
lret
inc
cltd
aad
adcl
cmp
cs
jo
lds
lahf
stos
dec
mov
or
mov
ret
pushf
mov
cmp
fwait
inc
add
dec
ret
xchg
ret
fstl
mov
jg
add
dec
cmpsb
and
sub
inc
sbb
lahf
mov
ss
ss
je
les
inc
lcall
lahf
dec
movsl
insl
insb
cmc
dec
pusha
loopne
jbe
sub
jbe
mov
mov
data16
jge
sbb
adc
mov
add
and
mov
add
xlat
mov
cmp
aaa
les
sti
sbb
push
mov
dec
mov
nop
loop
es
in
testl
popf
cmp
dec
sbb
enter
xor
pop
cmp
mov
mov
in
bnd
pushf
jns
dec
adc
adc
push
in
push
sahf
aaa
inc
imul
out
sar
pop
mov
ret
mov
into
mov
scas
sbb
pop
into
out
test
jno
add
repnz
dec
cmpsb
push
xchg
jmp
xchg
sub
cmp
mov
iret
or
les
cltd
dec
mov
test
or
mov
negl
lret
test
pop
push
inc
inc
repz
cmp
add
add
mov
ljmp
and
cli
mov
dec
adc
subl
jbe
dec
xor
fsubr
mov
cs
jne
lret
sbb
sub
pusha
test
dec
je
ss
fiaddl
loope
add
pop
mov
xchg
dec
in
cmpl
test
lret
adc
out
and
mov
add
push
mov
lds
test
inc
push
and
mov
enter
fnstsw
ss
data16
repz
inc
xchg
sbb
andb
orl
insb
dec
lock
bound
sub
or
fmuls
leave
dec
mull
aam
cltd
cmp
or
jno
arpl
push
iret
push
add
movq
adcl
jge
pop
dec
jg
mov
stc
jecxz
mov
dec
push
ret
aas
cmpl
mov
ds
filds
mov
in
movsb
push
xor
push
jb
movsb
out
stos
xchg
jle
lcall
imul
mov
inc
and
adc
popa
push
ret
pop
sbb
push
std
xor
out
nop
pop
jb
cwtl
inc
adc
or
inc
loopne
inc
incb
push
mov
fsubrp
mov
out
sbb
xchg
pop
cltd
jp
jae
mov
sub
add
jmp
in
add
or
ficomps
push
scas
mov
pop
das
pusha
cli
ret
mov
cmp
xchg
sbb
add
push
xor
testb
rcrl
xor
flds
shlb
jle
dec
mov
loope
fisubl
lods
lea
cmp
nop
inc
jns
push
sbb
mov
mov
mov
xor
mov
movl
mov
movzwl
xor
mov
add
xor
mov
xor
adcl
xor
sbbl
add
andl
add
adcl
div
mov
mov
movl
movl
cmp
movl
je
movl
lea
mov
mov
and
mov
imul
movl
mov
movl
mov
movl
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
jmp
add
mov
or
ficoml
xchg
inc
mov
sbb
js
leave
sbb
xchg
and
lahf
jnp
or
sbb
mov
stos
and
or
jp
xlat
ljmp
cmpsb
bound
into
aam
mov
repnz
adc
inc
cmp
xor
sahf
dec
outsb
inc
inc
ficoml
cmp
ret
inc
or
mov
mov
lds
xchg
ljmp
ret
jno
movsb
jle
inc
std
xchg
or
sub
pusha
and
addr16
aaa
sbb
sarl
add
in
sbb
push
ret
push
pop
xor
movsl
enter
mov
fmuls
inc
lret
aaa
sar
es
in
int3
mov
sbb
jmp
and
and
pop
shlb
jae
aas
cmp
jecxz
lods
jp
pop
shl
adc
adc
aad
jg
pop
dec
or
out
xor
add
add
inc
xor
mov
cli
sbb
jo
inc
rol
fistpl
mov
loopne
lret
stc
test
popw
jecxz
xchg
aam
push
mov
inc
je
leave
leave
pop
dec
add
xchg
stos
lret
sarl
jbe
dec
push
dec
fnstsw
xor
adc
addr16
pop
pop
adc
in
mov
jmp
repz
dec
mov
sti
mov
push
scas
bound
test
jns
add
loope
or
in
clc
sbb
mov
push
push
test
out
hlt
movb
std
cmp
repz
inc
pop
fstpl
add
mov
aaa
shlb
cmp
test
ss
fmul
lcall
push
adc
mov
scas
inc
xor
popa
bound
xor
push
addb
jae
sub
imul
push
jae
or
add
jmp
pop
mov
lea
out
push
adc
cmpl
adc
jo
xchg
shll
mov
jecxz
aad
out
cmp
das
sbb
inc
repnz
iret
jp
repz
out
cmp
ret
xor
ds
push
mov
into
testl
aam
cwtl
push
rcrl
sub
xchg
out
enter
inc
sub
jns
pop
jae
push
aas
stos
pop
mov
fstpl
xor
inc
inc
xor
push
outsl
add
dec
or
xor
sbb
cmp
scas
mov
clc
daa
dec
sbb
sbb
je
repz
test
scas
pop
mov
dec
jb
int3
push
adc
rorl
movsl
push
jmp
xchg
call
xchg
xchg
repnz
int3
mov
pop
sbb
cmp
cmp
dec
stos
inc
jg
xor
cld
and
js
xchg
repz
call
pop
mov
sahf
repz
cmp
mov
mov
mov
test
das
outsl
mov
cmp
pop
sub
dec
bound
mov
popa
fsubrp
gs
testb
jmp
mov
cs
jne
out
mov
add
repnz
dec
aad
fsubr
adc
pop
mov
xor
lret
and
ljmp
stos
into
and
sub
jo
ror
pop
cwtl
negl
cmpsl
dec
jae
insl
xor
enter
mov
arpl
pop
loopne
into
cmpsl
mov
xlat
enter
pop
and
push
in
shlb
jecxz
xor
cs
jae
push
cltd
loop
inc
cmovb
add
xor
ss
ficoms
scas
aad
adc
es
mov
push
fwait
lea
divl
xchg
test
insl
add
mov
ja
arpl
dec
ss
push
insb
push
inc
xor
addr16
scas
out
sub
adc
ds
mov
push
xor
call
cwtl
je
mov
andl
jmp
mov
jmp
xchg
xchg
insl
jnp
cmp
push
dec
ja
data16
adcb
js
jl
js
sbb
cmpsl
lret
clc
repz
xor
jno
add
cmc
dec
push
dec
mov
dec
xor
and
in
jle
xchg
cld
cmp
movb
or
out
fdivp
mov
loopne
add
pusha
loope
cmp
jae
mov
pop
pop
pusha
mov
push
mov
negb
sub
push
clc
enter
jmp
xchg
fisttpll
clc
shlb
xor
hlt
das
cmp
in
xor
dec
xchg
pop
int
dec
and
mov
xor
jg
mov
pusha
mov
inc
adc
sbb
les
sti
imul
xor
rcrl
je
push
or
int3
jg
in
cld
xor
mov
scas
mov
mov
je
lods
les
into
addl
loope
fstpt
add
xor
inc
cmp
leave
xchg
adc
push
mov
ss
sti
and
and
fnsave
ss
lcall
ss
cmpsl
lcall
mov
cmp
push
repz
or
xor
push
add
faddl
in
push
ja
shr
cmp
xchg
in
outsl
cwtl
sti
push
stc
fbstp
pop
sbbl
pop
push
xor
lds
ret
insl
les
inc
lahf
ja
sbb
mov
push
and
jge
imul
cmp
mov
jmp
add
lret
popf
mov
pop
xchg
xchg
out
dec
mov
mov
mov
push
cli
push
int3
jmp
mov
pop
loopne,pn
sbb
aad
push
mov
jb
xor
mov
test
push
shl
je
rorl
out
add
fcmovne
mov
lcall
mov
adc
je
leave
outsb
jle
imul
dec
and
or
or
pop
inc
mov
or
fildl
pop
mov
aaa
cld
add
aam
cmp
out
mov
sbb
push
roll
push
pop
mull
dec
fcomps
lret
lock
adc
mov
lret
dec
mov
mov
xor
jecxz
mov
inc
call
flds
mov
cmp
in
test
inc
xlat
shr
and
sahf
fcomi
add
lods
inc
xchg
sub
enter
nop
jecxz
mov
ds
pop
into
into
mov
cmc
mull
pop
aaa
adc
jle
or
push
adc
push
xlat
js
push
mov
push
or
loop
insb
push
ds
dec
mov
outsb
test
jne
xchg
push
scas
adc
sub
push
xor
repnz
rol
push
jmp
jle
mov
push
xlat
pop
jns
bound
ja
and
mov
jmp
in
insb
push
cmp
mov
jno
or
lock
pop
in
js
ss
xor
xchg
sbb
cli
imulb
lock
lahf
rcrb
aas
roll
add
les
clc
dec
outsl
sbb
popa
insl
movsl
mov
and
jg
std
push
ficomps
adc
and
sbb
mov
rorb
fisttpll
repz
in
bound
sub
sub
bound
data16
out
jle
xlat
or
pop
enter
mov
imul
out
or
popa
xchg
ljmp
in
sbb
xchg
cmp
clc
js
cli
sub
sub
pop
lods
sbb
sbbl
ret
push
and
cmpsb
pop
jecxz
lcall
je
xchg
in
add
ret
aas
mov
sbb
pushf
sub
pushf
dec
scas
jp
mov
lahf
scas
insl
data16
jecxz
aas
fmull
dec
fs
gs
cwtl
inc
add
jge
jp
movsl
or
push
test
xor
xchg
sub
jns
xor
ret
jle
jle
pop
pusha
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
jmp
jno
fcmovbe
fabs
cmp
cmpsb
test
lret
push
adc
js
rcrb
xchg
mov
push
mov
and
push
and
aas
stos
jl
ret
int3
sahf
imul
xor
push
jge
mov
xorl
lcall
movb
in
dec
mov
jp
mov
loopne
push
xor
repz
pop
push
sub
push
xchg
adc
test
sahf
cmp
lock
add
in
sub
iret
add
enter
mov
notb
fdivrl
cld
leave
pop
jb
or
data16
cld
pop
push
loopne
xchg
popa
cmc
jnp
shl
push
repz
loopne
hlt
rcrl
std
repz
daa
xor
push
mov
imul
xchg
or
test
gs
loopne
add
mov
icebp
xchg
insb
inc
pop
add
out
xor
pop
das
in
xor
jg
ss
pop
hlt
in
scas
mov
cmp
cwtl
jnp
clc
shlb
mov
xchg
dec
enter
xchg
mov
out
or
sub
and
movsl
out
iret
shrl
and
pusha
sbb
mov
repz
mov
fwait
cmovnp
lret
or
movsb
push
orl
inc
lea
je
push
mov
mov
out
sub
jmp
ljmp
cmpsb
xor
sbb
push
mov
dec
stc
xor
and
repz
xchg
lahf
mov
ja
cltd
jns
mov
sbb
stos
gs
inc
lcall
sbb
stos
fisubl
fs
andb
int
int
lahf
jl
and
cmpsb
rcrl
popa
and
imul
mov
push
les
sub
fstpl
or
push
mov
pop
pop
add
xor
popa
jnp
in
aas
leave
fiaddl
subl
push
sbb
shll
mov
or
pop
stc
inc
push
fsts
adc
sbb
stc
pop
loopne
mov
cmpl
add
pop
shl
in
pop
faddl
xchg
and
loop
adc
xor
xchg
pop
mov
dec
movsb
arpl
leave
es
jae
inc
cltd
jns
inc
das
ds
jle
xchg
cmpsb
mov
call
dec
jae
push
fldl
dec
sahf
xchg
lods
lea
add
mov
jae
push
data16
or
ds
mov
cltd
mov
icebp
fnstcw
cli
push
mov
sbb
adc
jns
decl
negb
dec
push
and
and
mov
jae
mov
std
arpl
es
pop
mov
sub
mov
shll
movb
in
push
scas
adc
repnz
fucomi
loop
inc
loope
add
pusha
push
js
cmpsb
scas
repnz
or
decl
push
rorl
out
aad
xchg
adcl
in
ret
mov
fsqrt
mov
or
xchg
pop
sub
or
xlat
push
int
out
cmp
and
mov
mov
sub
mov
mov
cs
enter
stc
cwtl
mov
inc
repnz
subb
inc
add
push
and
xor
xlat
fistpll
inc
mov
push
push
js
int
push
mov
pop
cmp
mov
sub
and
sub
lea
dec
iret
dec
xor
and
inc
inc
and
mov
popa
in
and
sbb
push
scas
cli
imul
lds
jnp
cmp
mov
and
aas
dec
pop
repz
inc
push
out
jecxz
test
pop
push
adc
add
imul
inc
mov
mov
cmpsl
out
jnp
loopne
add
mov
adc
rcll
in
dec
add
sub
stc
dec
add
in
push
dec
sub
pop
pop
cltd
mov
ds
push
shll
cmp
pop
pop
push
mov
scas
xlat
jmp
pop
dec
sub
pop
outsb
push
add
mov
sub
lret
js
adc
mov
mov
ret
mov
push
pushf
popa
lods
fsubrl
lcall
rcll
sbbl
xor
mov
imul
out
push
insb
cmp
loop
orl
cmpsb
btr
cmp
mov
fidivs
ja
xchg
sbbl
pop
bound
mov
mov
or
sbb
mov
lds
scas
jnp
add
outsl
sti
in
jmp
aad
pushf
movsl
das
adc
fcompl
sarl
mov
push
or
add
push
les
lret
mov
fwait
movd
or
mov
mov
xor
jp
xchg
pop
jae
int
mov
or
jnp
xlat
dec
sbb
or
scas
adc
push
sub
sub
orl
or
cmp
pop
sub
orb
xchg
clc
dec
pop
or
jo
call
mov
mov
lods
cmc
inc
cwtl
cmc
leave
push
stc
cmp
mov
sub
ret
dec
inc
cmp
scas
mov
adc
cmpsb
xchg
inc
shr
lret
sbb
dec
scas
stos
push
ret
and
imul
push
sbb
jbe
shrl
jno
in
jmp
dec
and
nop
hlt
jmp
fnstcw
andb
les
push
std
shlb
sahf
jmp
push
dec
mov
push
mov
icebp
add
mov
mov
popa
adc
dec
nop
in
cld
or
adcb
and
mov
pop
popf
cltd
adcl
loop
mov
mov
mov
push
xor
mov
movsl
mov
or
or
mov
aam
std
gs
hlt
arpl
cltd
sbb
test
fnsave
cmp
fstl
cs
test
and
push
sti
cwtl
repnz
jg
iret
fisubrs
sub
inc
add
adc
xchg
pop
daa
mov
repz
cld
mov
in
push
imul
test
fimuls
adc
sbb
pop
inc
imul
les
push
inc
jmp
xlat
xchg
xchg
add
adc
subb
xor
add
neg
rorl
cmp
or
inc
xchg
jp
cltd
lcall
or
push
sbb
loopne
mov
scas
push
movsb
mov
add
pop
mov
inc
cltd
jb
jns
mov
or
sub
mov
xor
jp
xchg
inc
loope
cmpsb
and
mov
jno
xor
jle
jmp
mov
sbb
das
pop
repnz
mov
pop
stos
jns
fstl
bound
mov
pmulhuw
in
ja
ss
cmp
leave
pop
pusha
jnp
stc
repz
repz
addr16
shl
pop
sub
loop
push
pop
fbld
int
outsl
mov
fcmovnbe
xchg
lahf
sub
mov
lret
in
ror
andb
lea
hlt
cmp
scas
pop
dec
pop
push
ret
sub
mov
or
out
inc
mov
testl
ret
pop
int
leave
rcll
arpl
lds
pop
or
cmp
ret
inc
sarl
sub
fsubs
ljmp
dec
fdivl
sbb
addr16
inc
or
mov
mov
inc
fiadds
clc
and
or
adcb
push
leave
mov
test
sahf
xor
lds
sahf
cwtl
sub
xchg
mov
pop
rcr
mov
push
or
sub
push
ds
push
in
test
inc
aad
adc
sbb
jg
mov
jb
clc
push
std
mov
pop
cmc
push
bnd
add
add
orb
add
add
in
xchg
mov
mov
pop
jno
leave
loop
mov
aam
xchg
cltd
xor
inc
in
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
jmp
lahf
dec
loop,pn
bound
dec
xchg
push
sub
js
jl
js
mov
ja
mov
iret
xchg
mov
clc
in
test
int
notb
push
sub
mov
mov
adc
rcl
repz
rcrb
lods
loop
mov
test
adc
es
movsl
cs
inc
xchg
outsb
popf
std
lods
xor
jl
enter
enter
and
pop
sub
gs
cmp
je
out
sarb
mov
and
in
out
ret
adcb
pop
cmc
ss
data16
aam
imul
adc
and
loopne
sbb
mov
gs
lret
xlat
cmpsl
mov
inc
lea
scas
mov
aaa
test
cmpsl
and
psrlq
inc
cs
ficompl
or
pusha
mov
fsubl
dec
es
mov
aaa
or
mov
pop
adc
inc
sbb
sbb
inc
and
mov
inc
lcall
out
jge
mov
dec
fs
dec
push
pop
lods
inc
jns
hlt
jns
sahf
pusha
insb
mov
adc
add
ss
cld
xchg
sbb
add
xchg
jne
imull
stos
sub
add
push
out
imull
add
sub
pop
sub
clc
and
das
jmp
inc
in
imul
dec
divb
jne
push
or
or
sub
cld
xorl
mov
push
xchg
dec
pop
aad
mov
xchg
mov
pop
push
orl
add
rorl
call
test
repz
nop
sbb
jecxz
or
dec
pop
arpl
bound
nop
cmp
fistpl
loopne
xchg
sbbl
je
enter
jbe
and
das
lods
adc
sub
pop
jge
bound
dec
mov
fstps
push
xchg
adc
xchg
xchg
mov
push
orb
push
and
sarl
jae
arpl
out
fcmovnbe
jecxz
aam
cltd
call
out
data16
test
pop
push
jo
inc
lret
rcr
cs
in
push
testb
dec
dec
inc
in
xchg
pop
mov
fiadds
or
popf
and
add
dec
jl
and
out
fldenv
rorb
jb
cld
shlb
cld
add
push
adc
and
dec
jae
jno
xchg
stos
mov
adc
subb
outsb
push
adc
or
jno
mov
outsb
fs
add
xchg
aad
mov
insl
sub
hlt
inc
ljmp
mov
lret
fdivl
test
fdivl
add
rcll
in
and
add
and
out
fs
lds
adc
inc
test
push
popf
jge
ret
test
loopne
mov
es
addr16
inc
cmp
xor
in
shrl
mov
rorb
shrl
sub
dec
jg
cmc
jno
jnp
out
mov
sub
loopne,pt
movsl
mov
jnp
mov
xor
pop
je
mov
xchg
in
mov
les
loop
mov
adc
and
lock
aaa
fs
ss
and
add
xor
outsl
or
notl
orl
sub
leave
scas
sub
jb
adc
mov
addb
jl
test
pop
addb
data16
pop
movsb
sub
inc
test
jbe
dec
and
lcall
insb
cmc
cmp
inc
xor
pop
push
loop
xchg
mov
xlat
orl
enter
sbb
dec
sbb
push
mov
jnp
sub
imulb
lret
push
cs
movl
adc
movl
and
mov
xor
push
sbb
mov
mov
sbb
xor
xor
mov
add
mov
add
add
imul
mov
mov
cmp
jne
mov
notl
mov
adcl
xor
xor
addl
add
add
imul
movl
jmp
jmp
mov
jns
push
adc
xor
fxch
dec
or
jl
js
sub
lods
fdivrp
fidivrs
sbb
fidivs
ss
adc
push
mov
mov
add
addr16
mov
jnp
xchg
adc
mov
fisubrs
nop
cmp
test
mov
mov
data16
pusha
mov
push
xchg
inc
or
pusha
pop
inc
lret
stc
mov
adc
push
and
jmp
pop
test
outsb
lcall
pop
dec
testl
js
dec
add
sub
imulb
or
loopne
or
loop
or
sti
psraw
clc
mov
mov
sbb
cmp
push
xchg
push
sub
sarl
ret
cmp
in
mov
sub
fwait
loope
nop
outsl
cmp
mov
sbb
cmp
scas
ds
je
pushf
mov
leave
jle
mov
xchg
movsb
mov
xchg
enter
jo
mov
ret
imul
leave
adc
test
insb
adc
mov
lahf
and
mov
in
dec
bound
cmp
sub
stc
testl
imul
push
shl
adc
sub
mov
jle
inc
jmp
mull
popf
pop
out
mov
and
icebp
shrl
bound
mov
mov
data16
imul
ret
loopne
mov
in
inc
push
sub
test
fdivs
mov
xor
sub
mov
inc
xorb
cmpsb
insl
icebp
daa
pop
sbb
lea
repz
scas
testb
cwtl
in
fstps
xor
xchg
and
or
fldcw
hlt
sub
cmp
mov
test
mov
pop
jl
dec
sub
mov
cmp
arpl
adc
cmpsb
in
inc
mov
mov
pop
mov
ja
mov
lahf
pop
sub
push
xor
shlb
inc
sub
bnd
pop
mov
cmc
jl
mov
out
lea
jl
in
dec
dec
enter
bound
iret
cld
cmpsb
jnp
jae
jmp
push
loop
adcl
roll
test
leave
scas
pushf
pop
nop
cmp
adc
inc
into
stc
les
ret
jle
mov
cli
sub
inc
test
dec
mov
cmpl
cmp
rcrb
xchg
imul
hlt
and
ret
outsl
mov
in
sub
aas
nop
mov
dec
lea
dec
fldenv
mov
xor
js
ret
adc
scas
sub
cmp
pop
rolb
aaa
gs
test
push
jbe
sbb
add
jns
jle
cmpsb
mov
cmp
mov
dec
fildll
sub
cmp
xor
dec
jae
cltd
mov
adc
mov
and
sub
sub
loopne
adc
int
adc
int3
dec
sbb
mov
fdiv
jae
lock
sbb
outsb
jno
jb
mov
jecxz
jae
cltd
pop
jge
mov
cmp
fidivrs
pop
inc
inc
inc
push
out
test
add
lods
adc
js
loop
fwait
lret
test
push
mov
nop
xchg
dec
fldt
mov
mov
jb
mov
inc
enter
je
sub
clc
push
jecxz
bound
push
pop
mov
lea
fcmovbe
rolb
push
sbb
inc
in
sti
sub
xor
loope
and
adc
icebp
or
xchg
add
imul
hlt
rorb
jg
lret
jl
test
mov
xchg
sbb
jle
sub
arpl
nop
dec
xor
xlat
leave
mov
jmp
out
jl
or
out
daa
xchg
mov
pop
repz
and
js
jl
js
mov
fucomp
cmpsl
push
not
lds
cmp
inc
setnp
jmp
xchg
cmp
cmp
sub
bound
imul
sub
test
pop
and
sub
mov
out
pop
roll
int
out
lret
aam
stos
inc
call
cmc
mov
int
std
pop
cwtl
repz
or
cmp
adc
notl
inc
adc
in
lea
push
push
sbb
fmulp
mov
bound
and
xlat
addr16
cmp
fimull
stos
gs
mov
in
rcrl
idivl
sub
pop
sbb
lret
inc
xchg
stos
inc
sub
jb
xchg
xchg
imul
daa
lods
stos
inc
jnp
mov
push
lds
shll
outsb
xchg
hlt
lds
inc
out
invd
mov
movsl
es
inc
in
xor
mov
testb
js
inc
dec
mov
inc
cmpsl
xchg
pop
call
addr16
xor
cmpxchg
jnp
and
mov
xchg
push
call
subl
dec
xchg
push
jbe
mov
loopne
rdmsr
and
cmp
incl
jb
add
lock
sbb
or
cltd
ret
imul
subl
ljmp
inc
pop
jle
and
push
pop
test
mov
or
xchg
mov
repz
leave
pop
aam
pop
jg
dec
adc
sbb
clc
movsb
fsubl
sub
inc
mov
sbb
pop
mov
push
call
sub
and
xchg
or
mov
push
inc
cltd
in
sbb
incb
add
or
xor
mov
aad
mov
or
movsb
and
movsb
pop
lcall
sbb
cmp
addr16
and
ja
fstpt
adc
push
cmp
mov
mov
xchg
dec
mov
ljmp
popa
std
jge
shrb
xchg
mov
cmc
push
cli
imul
jne
mov
stos
and
inc
xor
push
jecxz
ss
movsb
and
insl
xchg
int3
or
scas
stos
rcrb
int3
addr16
movsb
popa
push
sbb
ljmp
in
pop
or
roll
pusha
push
push
adc
test
lret
in
cld
cmovo
push
xchg
shrl
mov
xorl
dec
outsl
into
stc
mov
lods
jle
cmp
xor
adcb
movsl
ss
mov
adcb
xchg
jbe
mov
xor
insb
mov
cwtl
fnstsw
shll
dec
mov
xor
in
fcmovbe
push
and
sbbl
pop
jecxz
sbb
mov
mov
fildll
add
push
xor
jo
js
and
les
xor
test
pop
movsl
scas
loope
add
aam
adc
stc
fsubs
sar
or
and
subl
test
lods
xchg
add
jp
inc
test
add
jno
push
push
push
insl
mov
lcall
arpl
and
xchg
nop
inc
enter
sub
mov
icebp
insb
sbbl
outsb
jecxz
xchg
xchg
jns
adc
push
das
mov
in
lcall
movsl
fdivrl
loop
insb
mov
lret
loop
xor
cmp
shr
mov
pusha
adc
insb
je
cmp
rol
stos
aaa
fincstp
je
popf
xorl
lret
fildl
imul
test
xchg
fld
loop
xchg
popf
insb
cs
dec
ljmp
inc
js
xor
mov
and
mov
mov
orl
xor
xor
sbbl
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
sbbl
push
mov
subl
push
sbbl
push
sbbl
push
sbbl
movl
subl
call
cmp
je
andl
xor
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
and
andl
sub
push
xor
push
push
sub
mov
add
mov
add
pop
push
andl
push
adcl
push
addl
lea
adcl
mov
andl
push
adcl
call
mov
adc
mov
adcl
test
je
pushl
andl
call
adcl
and
xor
sbb
shrl
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
and
mov
imul
incl
mov
or
mov
mov
mov
movl
cmp
movl
jne
movl
inc
movl
cmp
movl
jb
movl
push
call
xor
adc
shll
mov
xor
or
sub
imul
and
add
mov
or
imul
and
mov
or
not
mov
movl
mov
movl
cmp
movl
jne
movl
inc
cmp
movl
jb
xor
xor
shll
add
and
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
imul
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
shll
andl
and
mov
not
imul
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
mov
sub
or
movl
mov
mov
cmp
movl
jne
inc
movl
cmp
jb
xor
shll
mov
sub
mov
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
imul
sub
mov
movzwl
adc
mov
or
mov
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
xor
xor
shll
and
and
mov
add
mov
sbb
imul
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
or
mov
mov
mov
cmp
movl
jne
inc
movl
cmp
jb
xor
shll
and
and
mov
and
imul
addl
mov
xor
or
mov
mov
mov
movl
cmp
movl
jne
movl
inc
movl
cmp
movl
jb
mov
mov
sub
or
xor
negl
shll
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
movzwl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
or
mov
movl
mov
cmp
movl
jne
movl
inc
cmp
jb
incl
movl
cmpl
movl
jb
mov
mov
mov
sub
mov
movl
movl
subl
lea
or
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sbb
lea
or
mov
mov
sbb
mov
adc
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
sub
or
mov
or
xor
mov
addl
add
movl
mov
mov
movl
cmp
movl
mov
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
xor
add
imul
notl
mov
jmp
orl
xor
jmp
xor
add
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
xor
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
jmp
xor
or
adc
mov
add
mov
sub
mov
andl
xor
add
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
mov
xor
add
mov
mov
lea
mov
mov
mov
xor
add
mov
movl
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
pushl
lea
pushl
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
adc
mov
xor
or
mov
sbbl
add
movzwl
sub
mov
movb
sbb
lea
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
sbb
mov
orl
xor
movl
sub
andl
mov
or
movl
movl
movl
andl
mov
sbbl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
add
xor
sub
mov
xorl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
sub
imul
mov
mov
xor
add
cmp
jmp
sub
scas
mov
pop
push
sahf
popa
cmp
int3
jl
js
iret
jno
mov
arpl
cmc
leave
jno
add
ja
xor
cmp
gs
push
mov
push
inc
cmp
enter
bound
cli
mov
cmp
xchg
inc
push
push
sbb
out
addr16
xor
pusha
cmp
fwait
test
call
mov
testl
inc
or
out
sub
outsb
insl
ljmp
stos
mov
push
pop
jbe
push
push
sbb
mov
cli
fsubrs
mov
enter
add
lods
cmp
hlt
push
add
push
push
push
call
inc
insl
lea
xor
fbld
xchg
sbb
fsubrs
imul
pop
cltd
dec
pop
sti
jg
sub
sub
aad
lret
or
std
loope
loope
outsb
mov
cmp
loope
inc
cmp
xchg
cmpsb
sarb
and
push
fdivrp
scas
nop
int
std
dec
adc
pusha
icebp
mov
dec
mov
sub
mov
rolb
fucomp
stos
shll
repz
out
dec
nop
xor
pop
sub
loop
iret
sbb
cmp
push
dec
mov
mov
and
leave
xor
lahf
bound
enter
push
jae
push
push
lock
sub
stc
xchg
sbbl
cmpsb
xchg
imul
inc
fimuls
mov
jbe
cmc
mov
call
adc
push
mov
xorb
mov
xchg
notl
in
test
sub
ret
jle
in
in
pop
jb
out
dec
mov
and
aam
push
scas
xchg
aam
frstor
leave
aad
roll
in
ret
ljmp
ret
push
rol
addr16
push
loope
cld
in
xchg
pop
lahf
mov
incl
fs
call
les
lds
movsb
or
stos
stos
mov
lods
inc
gs
push
and
mov
mov
mov
jle
cltd
cmp
cwtl
pushf
xchg
dec
and
test
pop
mov
rorl
push
rolb
adc
pop
in
cmp
icebp
lods
mov
popf
aas
sbb
insb
jbe
cmp
addr16
ss
lret
cmp
jle
adc
xchg
pop
in
jb
popa
das
ds
std
aad
fstps
cmpsl
hlt
cmpl
lea
add
cs
sbb
sbb
cmp
and
in
pop
aam
fldenv
xchg
shl
std
loope
mov
out
sub
dec
call
or
push
clc
clc
call
add
mov
fcom
ret
mov
aad
mov
popa
add
mov
insl
imul
jne
jg
mov
adc
cmc
adc
popa
xchg
arpl
loopne
cmp
dec
out
mov
sbb
jle
in
dec
and
mov
int
or
cmpsb
pop
ror
xor
scas
scas
or
stos
int
ds
cmp
insb
xchg
inc
cmp
sub
jne
inc
cmc
jge
cmp
push
rsqrtps
cld
fsubrs
adc
aaa
call
add
aad
push
bsf
and
inc
cmpsb
imul
cwtl
loop
mov
jnp
fistpll
adcl
iret
xchg
outsl
mov
sbb
adc
lods
push
xor
mov
inc
inc
adc
add
or
jmp
push
or
imul
jbe
pop
cs
int3
sub
stos
push
pop
add
out
ljmp
fldl
xchg
add
and
jns
pop
repnz
scas
add
std
repnz
sbb
repnz
inc
out
xchg
in
std
dec
sbb
mov
mov
jb
push
sub
mov
inc
lods
add
adc
call
jo
inc
pop
mov
mov
jb
push
mov
aad
sub
xor
je
push
push
mov
mov
xor
mov
add
jmp
and
sti
imul
imul
jg
int3
jl
js
xor
cs
pop
adc
sub
mov
in
mov
pop
sub
cmp
jmp
fwait
push
inc
pop
enter
scas
xchg
pushf
js
leave
roll
dec
cmc
shrl
sub
stc
mov
test
sub
mov
aad
or
ret
stos
mov
dec
add
in
scas
or
dec
xlat
stc
xchg
nop
mov
lahf
outsl
sbb
loop
pop
xor
enter
icebp
dec
push
cld
jl
lret
xor
mov
xchg
pop
popl
stos
int
fyl2x
adc
or
out
stos
jp
xlat
push
xchg
call
push
sbb
jl
stos
fwait
inc
cmp
jp
mov
test
leave
adc
aas
andl
das
add
and
popa
push
jl
xchg
test
or
movsl
sub
lock
cmp
xor
lahf
sbb
lahf
jecxz
push
imul
lock
mov
mov
lret
sti
std
nop
movsl
sub
aaa
xchg
out
jns
stos
into
jmp
xor
int3
add
jns
fwait
aad
xchg
cs
adc
cmc
cmp
in
dec
push
adc
push
push
sbb
jne
or
push
movsb
or
invd
cmp
test
fs
lods
loope
jecxz
mov
rorb
sti
leave
inc
mov
js
inc
adc
inc
add
popf
je
push
mov
push
push
daa
sub
mov
dec
sbb
sub
clc
push
sub
sub
mov
dec
adc
cmc
mov
xor
and
xor
inc
pop
add
or
test
xchg
cmp
stos
xor
mov
push
pop
inc
cmp
int3
jmp
mov
jmp
call
jmp
lds
pop
outsl
push
aam
dec
xchg
dec
sahf
cmp
dec
fxtract
lea
mov
cmp
das
mov
icebp
std
arpl
mov
mov
movsb
sysexit
mov
or
xchg
cmp
gs
inc
xchg
test
test
xor
ret
mov
dec
push
aas
dec
sub
cltd
push
ds
cmp
mov
mov
adc
mov
pop
loope
out
add
and
imul
jle
push
fwait
aad
ret
movsb
xchg
ja
ljmp
stos
sbb
mov
or
dec
flds
and
xorl
mov
mov
or
xchg
pop
sbb
loop
push
clc
std
jp
into
mov
inc
imul
ja
push
push
inc
jne
and
pusha
dec
fcomi
fidivs
mov
loope
sub
pop
lahf
popf
lahf
popa
cmp
cvtpi2ps
daa
lret
negb
arpl
and
adc
out
mov
mov
push
decb
mov
inc
sbb
mov
in
mov
pop
push
scas
out
mov
out
inc
fidivrs
cmpsb
jg
mov
sbb
aas
fwait
cmpsl
ret
test
xor
cltd
repz
jno
ss
xor
lds
jb
shll
mov
push
mov
ja
cmp
dec
mov
mov
mov
clc
push
lock
xchg
mov
test
ds
and
nop
movsb
imulb
pop
push
jge
dec
dec
jg
sbb
popa
mov
adc
stos
jecxz
in
mov
xchg
jne
add
add
mov
inc
push
push
popa
clc
pop
call
or
adc
ja
inc
sub
mov
testb
iret
dec
pop
mov
push
sub
add
add
scas
xor
jbe
pop
repz
outsb
and
push
and
ss
mov
cld
xor
aad
sub
mov
stc
lea
or
add
inc
in
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
jmp
sti
lahf
fcoms
pop
lret
adc
cltd
aaa
jg
int3
jl
js
push
cmpsl
xor
ret
jb
jns
lods
scas
loope
ret
add
pop
xor
fsin
int
sbb
scas
mov
mov
push
aad
push
dec
inc
mov
scas
in
jp
push
clc
mov
fisubs
rolb
daa
xchg
dec
sub
jbe
arpl
leave
hlt
std
xor
jle
into
aas
mov
mov
cmp
leave
sbb
loope
test
movsb
add
in
stc
sbb
repz
aaa
in
or
jmp
xchg
mov
xchg
cmp
cmp
fs
fwait
xor
enter
cmp
into
out
lock
daa
stos
add
je
adc
cld
mov
subl
or
imul
push
fwait
cmp
sbb
arpl
iret
call
mov
sub
gs
jb
lods
into
xchg
mov
pop
in
arpl
je
scas
popa
mov
mov
ret
sbb
push
out
out
in
pushf
rcrl
xchg
repz
and
adc
test
dec
sub
out
jbe
xchg
jmp
fisubl
arpl
jmp
pop
in
pop
dec
js
add
jp
mov
cmp
int3
jns
add
add
shrl
jbe
pop
and
xor
insb
test
cmp
in
xchg
adc
mov
je
dec
rcl
fisttpl
xchg
shr
inc
insl
inc
imul
push
xchg
cs
adc
int3
in
cli
leave
addl
inc
add
adc
adc
sbb
xchg
ud2
sub
sbb
sbb
jnp
lretw
cmp
mov
inc
insl
and
pmullw
or
insl
push
add
push
stos
stos
fs
dec
push
popf
pop
sbb
js
mov
lods
xchg
je
test
es
jns
mov
lret
and
sub
out
jno
jne
movsb
sahf
insb
fistpl
jns
or
and
inc
add
lret
test
push
pop
lahf
push
push
pop
das
fucomi
mov
pop
push
sub
cmpsl
push
or
add
clc
inc
push
dec
jge
fcomps
mov
cmpsl
pop
call
stc
icebp
inc
xor
pop
inc
xor
xchg
push
rcrl
jnp
aaa
movsb
mov
test
push
int
mov
shl
mov
push
push
fnsave
daa
and
das
mov
sahf
das
pushf
add
in
ss
nop
mov
cmp
ja
sub
dec
inc
aam
add
push
je
in
mov
test
mov
fstps
in
inc
dec
push
rclb
es
mov
mov
xor
sahf
jnp
sbbl
aam
cmp
push
or
mov
push
cmpsl
dec
sbb
cmp
xor
add
sbb
xchg
test
dec
outsl
cmp
jmp
call
mov
push
sbb
out
pop
jns
cmpl
das
xor
out
push
jne
cmpsl
sbb
mov
mov
push
iret
repz
xchg
fwait
push
mov
lea
das
jno
pushf
int
test
add
adc
mov
fwait
pop
ret
roll
pop
xlat
fwait
pop
add
mov
ljmp
inc
stos
out
das
enter
shrb
adc
mov
or
push
xor
pusha
shrb
sub
pop
loopne
mov
movsl
pop
ljmp
xor
adc
and
adc
pop
mov
add
mov
and
adc
pop
dec
js
sahf
xlat
mov
mov
cwtl
out
sbb
mov
push
test
test
mov
mov
ret
movb
rolb
fidivs
das
addr16
lahf
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
pop
mov
mov
fmulp
pop
pushf
insl
lret
jg
int3
jl
js
js
and
fldl
mov
push
ret
dec
cltd
mov
xchg
push
lea
stc
lcall
divb
fwait
adc
jnp
push
or
rcll
adc
sti
xor
nop
aaa
inc
rorb
hlt
push
mov
mov
nop
out
sub
cmpsb
jbe
pop
lds
push
mov
mov
adcl
inc
dec
popf
mov
inc
mov
into
jmp
jge
push
shll
aaa
xor
mov
fcoml
add
and
mov
or
aas
dec
ficompl
adc
fisubrs
orl
push
cmp
xchg
mov
adc
pop
int
dec
xor
fsubrs
outsl
or
mov
out
pushf
out
cmp
lods
and
jae
out
mov
cmp
jmp
popf
inc
out
mov
xor
js
fwait
mov
jne
mov
sub
sub
pop
inc
push
out
addr16
fcomi
lret
sbb
repz
pop
xlat
push
cmpl
outsl
imul
jg
and
pop
xor
jne
out
and
fsubrl
sbb
not
in
fstpl
add
mov
das
icebp
inc
lahf
movsl
and
fcoms
daa
stos
ja
pop
or
lahf
mov
jo
fisttpll
add
lock
sub
jb
xor
dec
sti
notb
addl
cmp
dec
aaa
call
inc
xor
sbb
pop
ror
mov
mov
push
sub
pop
call
sti
aaa
mov
lock
pop
push
ja
mov
mov
sub
cmp
lods
add
pop
outsl
mov
or
es
jl
jnp
inc
dec
loopne
loop
sarb
std
jmp
mov
dec
mulps
mov
cmp
mov
mov
arpl
icebp
aad
insb
mov
pop
push
rcll
xchg
pop
or
testb
xchg
mov
jmp
aaa
aam
dec
sbb
sbb
xchg
push
or
mov
and
add
scas
xor
xchg
fdecstp
xchg
enter
fnstenv
lret
lock
mov
lahf
fs
nop
mov
inc
lahf
or
pushf
movsl
push
or
push
dec
adc
cmp
test
repz
lock
leave
ret
js
push
mov
push
lahf
jmp
adc
jnp
lcall
push
push
mov
sti
call
pop
test
xor
cmp
ljmp
sbb
pop
or
mov
add
std
sahf
pop
outsl
jne
cmpsl
fisubrl
xor
mov
and
xchg
adc
pop
rcr
jno
stos
and
fdivrs
test
aas
pop
inc
mov
into
xchg
cmpsl
shlb
test
mov
push
jmp
gs
addr16
subl
js
mov
mov
pop
sub
out
jecxz
inc
sub
mov
cmpsl
push
loopne
jno
in
insb
repz
dec
cmp
in
xchg
adc
mov
pop
ficoml
xchg
cmpsl
push
rcll
jle
lret
in
fwait
imul
sbb
mov
cmp
xchg
test
mov
push
jge
and
stos
rep
stos
fbstp
inc
pop
ret
pop
jbe
xchg
mov
filds
mov
icebp
arpl
decb
jle
sarl
or
movsb
mov
cmp
mov
or
lods
jl
stc
sbb
xor
xchg
push
aas
mov
push
gs
ljmp
xor
add
movsb
sub
stos
out
cmc
movsl
pop
ds
mov
mov
sbb
hlt
pop
ret
mov
inc
movsb
movsb
xchg
pop
xor
mov
adc
lahf
cmp
dec
cmp
or
test
add
add
inc
call
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
mov
fisubrl
jp
in
adc
xchg
into
jg
sahf
jl
js
lahf
dec
xor
mov
cmp
sbb
sbb
out
push
cltd
add
mov
pop
bound
cmp
imul
add
nop
sbb
cmp
in
or
sti
lret
ret
adc
xchg
andb
sbbl
insb
cld
push
sub
adc
xor
out
cmp
cmp
jp
leave
xchg
aam
pop
xor
add
mov
sahf
in
clc
sub
jge
out
add
cli
push
pop
scas
lods
push
jae
jo
js
mov
cmpsl
sub
scas
icebp
jecxz
nop
mov
loope
xor
clc
jg
mov
push
ret
inc
data16
mov
jmp
adc
les
test
sbb
xchg
aam
mov
jl
cmp
int
pop
test
xor
mov
or
mov
test
jmp
insb
jl
stos
xorl
cwtl
sbb
inc
lahf
imul
jecxz
mov
pop
pop
push
add
pop
add
and
adc
mov
mov
mov
or
shll
add
add
shll
cmpsb
xchg
push
fsincos
push
pop
mov
aaa
or
push
into
cli
jns
mov
jp
cs
imul
xlat
pop
test
in
mov
sar
mov
mov
js
int
fsubrl
out
inc
sub
push
and
out
loopne
out
scas
jae
orl
sti
mov
leave
outsl
dec
ficomps
fmul
sbb
imul
lahf
adc
in
popa
add
xor
inc
sbb
shr
les
fiadds
in
add
pop
cmc
iret
sub
mov
mov
in
in
inc
xor
pop
inc
sbb
stos
in
mov
ret
mov
inc
loopne
cli
sbb
insb
push
add
test
ja
test
fdivrs
lods
addl
stc
bound
mov
mov
and
addr16
das
xchg
inc
ljmp
movsb
dec
stos
xor
sub
cmpsl
jae
out
adc
jl
lods
sbb
fs
int
test
jmp
test
pop
mov
mov
dec
pop
gs
push
jl
shr
data16
fdivs
mov
jge
fisubl
ja
int
push
gs
sub
xor
and
fsubs
push
xchg
outsb
adc
xor
orl
cmp
test
mov
fidivl
xorb
in
mov
movsb
mov
into
inc
push
cmp
sub
outsl
adc
es
mov
push
imul
repnz
data16
pop
jno
sbbl
sbb
mov
pop
xchg
shr
pop
insb
mov
popf
sub
adc
shrb
fwait
cwtl
sub
popf
and
je
xchg
int3
repnz
test
pushf
lock
xchg
shl
push
orb
pop
adc
dec
push
test
fisttpl
js
or
ja
sbb
jg
cmpsb
stos
enter
aas
sbb
push
mov
cmpsl
pop
sbb
stos
enter
lahf
das
mov
mov
popa
push
inc
push
adc
fnstenv
jae
sbb
mov
hlt
ss
mov
mov
dec
mov
lahf
sbb
mov
popf
fsubl
sub
sub
pop
stos
ljmp
movsl
test
es
mov
adc
xor
lea
dec
mov
mov
pushf
sbb
aad
cli
xchg
test
dec
ret
cmc
fs
inc
cs
fdivp
inc
addr16
inc
fsubs
push
repz
push
xchg
imul
rcrb
rcr
std
mov
das
mov
enter
or
ret
cld
adc
test
dec
push
xchg
addr16
xor
test
incl
sbb
dec
imul
push
je
aaa
dec
std
int
dec
xor
decl
pop
daa
sub
add
pop
add
pop
mov
fwait
mov
dec
xchg
gs
jle
adc
add
push
pop
or
pop
xchg
dec
mov
aam
iret
mov
mov
cmp
stos
or
mov
sbbl
mov
addl
add
xor
movl
cmp
movl
jne
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
and
mov
mov
add
mov
jmp
add
roll
cmpsl
sahf
in
pop
push
ret
sahf
jl
js
imul
xor
mov
mov
mov
sbb
js
mov
orl
dec
inc
xor
xchg
lds
inc
add
fcmovne
fdivl
cltd
cmc
jne
sub
shll
xchg
scas
stos
stos
sbb
bnd
fisubrl
adcb
pop
inc
das
mov
jb
movsl
jo
xor
add
mov
pop
popf
push
push
test
pop
loope
add
mov
xor
out
inc
mov
sbb
push
adc
mov
sbbb
jb
adc
jle
icebp
fdivl
je
jp
pop
mov
xor
mov
scas
clc
cmpsl
pusha
ljmp
out
sub
leave
or
ljmp
jb
movsl
xchg
lods
imul
cmpsl
sbb
xor
les
mov
daa
xchg
sub
divb
mov
pop
cmc
daa
jno
cli
aas
loop
pop
sbb
pop
and
xchg
fcompl
in
jbe
repz
addr16
mov
leave
jge
sub
mov
in
cmc
mov
das
movsb
xor
scas
push
test
jbe
in
sbb
dec
mov
xchg
mov
int
jle
adc
div
push
jns
in
mov
aam
arpl
and
mov
dec
lahf
xor
std
xchg
test
repz
out
pop
popa
mov
dec
adc
mov
movsl
push
mov
fdiv
add
dec
aaa
dec
jmp
addl
or
mov
aas
and
into
mov
push
dec
add
sub
and
imul
mov
push
jge
movsb
out
add
xchg
jno
xchg
lcall
adc
sarb
inc
inc
cmpl
inc
cmp
lahf
push
xor
cmpsb
call
jmp
or
iret
lds
test
add
or
mov
and
in
pusha
aaa
les
dec
cmp
xchg
push
adc
add
test
mov
sbb
addl
test
inc
mov
cmp
push
xor
clc
out
xchg
arpl
int3
lea
clc
xchg
sbb
lods
push
into
ficomps
and
sub
xchg
lock
test
lea
lahf
mov
fs
mov
lret
dec
cmp
insb
mov
test
out
jg
push
loope
and
fcomps
jmp
mov
mov
fwait
or
push
mov
mov
mov
scas
ss
add
rolb
or
loopne
lret
and
lea
xor
repnz
lods
sarl
dec
sub
aas
push
mov
xchg
lods
stos
pop
lret
stc
xor
xlat
lret
push
push
xchg
insl
push
sbb
mov
pushf
lock
xor
jbe
incl
leave
lcall
lret
mov
loopne
ret
pop
sub
pop
inc
and
xor
sub
mov
rcl
sub
ret
inc
lret
cmp
lods
xor
addr16
add
in
dec
jle
xchg
pop
stos
xor
xchg
or
dec
cld
lds
orb
mov
fnstcw
push
lods
add
xor
sub
mov
inc
or
xchg
enter
lahf
dec
inc
push
lret
pop
mov
fldcw
or
pop
lods
bound
lock
xlat
cwtl
cs
jmp
inc
and
lods
ja
insl
mov
mov
or
sub
xor
cmp
cmp
in
and
imul
repnz
xor
cmp
stos
dec
pop
sub
je
test
add
and
ljmp
jl
fsqrt
sbb
movsb
mov
hlt
or
insb
or
jl
xchg
adc
int
inc
push
cmp
out
push
sbb
repz
jmp
cmp
in
push
aad
mov
les
xchg
movsb
ja
inc
xchg
cmp
mov
xor
push
mov
mov
jmp
inc
mov
jns
add
push
jge
jo
xor
sahf
jl
js
cmp
js
cmp
aas
push
xchg
cmp
cmpsb
pop
sbb
xchg
pop
in
scas
sub
adc
jno
sub
fmull
divb
outsb
in
pop
lret
mov
bound
sti
sbb
mov
pop
pop
xchg
dec
inc
inc
cmpsl
shr
or
mov
pop
dec
mov
jae
in
sti
pop
dec
pushf
or
add
mov
xor
arpl
daa
pop
sbb
push
outsl
je
inc
enter
nop
push
jno
insb
jnp
je
mov
mov
daa
popa
loope
dec
lret
stos
fwait
mov
or
aas
ja
pop
mov
out
sub
dec
inc
lret
dec
ljmp
sub
fs
aas
outsl
push
pop
stos
and
fidivrs
sbbb
andnps
stc
jnp
add
cmp
pop
scas
aam
push
inc
sbb
and
test
ss
jae
test
enter
jge
cmpsb
sbb
sarb
mov
sub
pushf
push
push
roll
ss
in
xor
out
cld
pop
imul
jmp
and
jae
sbb
lods
fbstp
clc
inc
in
ret
int
cmp
pop
adc
xchg
cmpsl
pop
mul
mov
lahf
adc
inc
xchg
outsb
sbbl
jb
mov
xor
negb
xchg
inc
jg
fmuls
mov
enter
repnz
xchg
hlt
cmp
inc
mov
and
cmc
dec
push
out
mov
mov
addb
rol
sub
sub
fnstenv
jg
jb
xor
jb
nop
fld
je
outsl
into
jg
sti
shll
repnz
mov
sbb
cltd
xor
sub
xchg
push
pop
jb
ret
cmp
mov
cld
test
jae
jno
ds
jnp
out
sbb
es
mov
arpl
aad
imul
pop
mov
cmp
mov
jg
xor
cmp
je
enter
mov
xlat
pop
mov
xor
out
rcr
xchg
std
sub
add
aad
ficompl
into
or
das
fdivrs
push
stos
fs
out
mov
mov
and
in
push
in
into
fidivrs
and
adc
cmp
popf
jmp
pop
xchg
jl
cmpsl
lea
std
xchg
xchg
dec
sbb
gs
sub
je
fistpll
sub
adc
xlat
mov
or
mov
imul
mov
jo
sbb
and
in
stos
incb
in
or
sarl
fistl
fmuls
and
cmp
xchg
jmp
ja
ret
pushf
loope
mov
push
loope
fiadds
add
arpl
arpl
xchg
enter
cmc
mov
sahf
jl
add
xchg
testb
pop
and
fcoml
lret
push
int3
pop
addb
mov
inc
push
cmpsl
pop
pop
test
mov
hlt
jnp
inc
jge
xchg
fwait
cmp
adc
imul
dec
cmpsl
fstpl
outsl
stos
xorb
arpl
mov
pop
insl
pop
sbb
pop
loopne
jecxz
nop
roll
or
out
pop
fcompl
loopne
leave
scas
or
jl
test
fwait
sbb
lods
xor
lea
fldl
fs
fcompl
test
fdiv
enter
pop
into
or
mov
jno
push
xchg
sbb
dec
pop
gs
cld
jecxz
ret
cmc
ja
arpl
rol
mov
cmp
clc
insl
pop
outsb
insl
xchg
test
dec
xor
cmp
hlt
bound
in
mov
push
push
outsl
mov
shlb
pop
push
test
popa
jle,pn
les
mov
mov
adc
stos
aas
mov
popf
aad
jmp
imul
jb
jb
cwtl
insl
sahf
insb
adc
jle
iret
aas
xchg
or
clc
inc
push
insl
cmpsl
and
mov
add
out
add
enter
rcrl
or
jecxz
inc
mov
xchg
int
sub
fsub
cmova
xchg
or
add
inc
mov
lcall
cmp
add
loop
mov
sarl
push
pop
je
jmp
mov
imul
gs
jg
sahf
jl
js
mov
dec
das
jno
loopne
mov
xor
cmp
out
int
cwtl
and
dec
ficoms
popf
in
sti
and
mov
lahf
xchg
sbb
loopne
inc
stos
jo
jp
cmp
push
roll
xchg
rcrb
jmp
mull
sbb
sbb
xchg
aaa
in
push
loop
pop
mov
fsin
mov
cmp
leave
sbb
xchg
ljmp
popf
xchg
rcrb
arpl
cmc
mov
mov
fwait
mov
push
inc
bound
and
sarl
cmpsl
pop
ret
lea
negb
and
or
inc
mov
or
xlat
sbb
icebp
push
outsl
imul
sub
cltd
bound
xchg
cmp
push
fldt
xchg
orb
cmp
pop
pop
mov
xor
aad
adc
movsl
fdivrl
jle
dec
mov
push
xor
push
dec
mov
fnstenv
and
push
std
xor
out
aaa
stos
test
mul
xchg
mov
ljmp
fimuls
cmp
cmp
outsl
inc
aam
xchg
xorb
out
xor
pop
rcrb
lods
jge
arpl
add
das
adc
into
outsl
inc
and
push
daa
push
popa
pop
mov
hlt
pop
xchg
xor
sub
nop
pop
inc
ja
imul
loope
fdivrl
into
out
ret
fstpl
hlt
jbe
lret
push
scas
gs
or
rcrl
inc
decl
mov
dec
cltd
aas
dec
push
fmull
jge
cmpsl
pushf
bound
and
jbe
xchg
pop
mov
pop
adc
or
loop
and
scas
repz
ja
dec
push
cli
pushf
movzwl
add
jge
fadds
dec
xor
add
jle
jae
push
inc
imul
aad
mov
aas
mov
int
mov
fwait
loope
div
mull
jo
sbb
jle
ret
mov
lcall
outsl
nop
sub
dec
call
stos
ja
push
jg
scas
out
mov
int
pop
fldcw
or
inc
mov
inc
mov
loopne
addr16
push
mov
xchg
out
jg
add
subb
dec
dec
dec
lds
dec
adc
ret
cmp
push
pop
out
sbb
les
fs
loop
and
xchg
dec
cmp
lret
or
and
ja
mov
in
mov
jp
into
test
out
and
and
in
loop
out
test
xor
xchg
neg
pop
xor
ss
test
xor
pop
adcl
push
or
lds
out
mov
test
xchg
adc
loop
mov
mov
pop
nop
adc
rcll
lret
lret
cmc
adc
push
arpl
and
inc
sub
xchg
mov
dec
pop
xor
psubusb
mov
and
sbbl
vpsraw
xchg
pop
pushf
into
ficoms
js
loopne
and
adc
pop
sahf
push
and
push
arpl
das
ret
inc
dec
adc
and
gs
mov
negb
cmc
adc
push
pop
jns
stos
push
sbb
repz
js
mov
xchg
leave
sbb
stos
hlt
add
xor
pop
jp
fists
mov
cld
jae
inc
aaa
test
ds
push
jp
sub
and
std
push
dec
data16
test
mov
ret
dec
xchg
popl
sbb
clc
das
dec
andl
lds
adc
mov
adc
ficomps
xor
sbb
jle
add
ss
cltd
ds
sub
push
scas
ficoml
adc
leave
jnp
lods
rclb
fstps
sbb
loop
stc
fimull
fsubp
sub
xorb
aas
push
jecxz
popf
in
or
mov
jne
in
push
adc
inc
sub
adc
dec
mov
sbb
dec
dec
movsl
imul
and
push
jl
adc
cmp
push
subb
mov
xor
pushf
fidivl
std
imul
xchg
inc
xchg
xchg
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
testb
fdiv
add
lock
push
testl
add
testl
add
add
pop
testl
add
add
add
add
pushf
testl
add
testl
add
testl
add
testl
add
clc
add
and
add
add
add
dec
dec
push
jp
dec
insb
push
push
push
push
imul
imul
aam
inc
add
hlt
inc
add
mov
jle
mov
add
mov
sub
mov
dec
sbb
dec
inc
dec
mov
inc
dec
pop
push
pop
push
mov
dec
add
mov
sub
mov
dec
sbb
dec
inc
dec
mov
inc
dec
pop
bound
dec
jle
mov
add
dec
jo
mov
dec
mov
inc
dec
pop
jb
jae
subl
nop
jle
mov
dec
add
dec
mov
dec
mov
inc
dec
pop
sbbb
outsl
nop
jg
jle
mov
dec
add
dec
mov
dec
mov
inc
dec
pop
xchg
pop
xchg
insb
mov
jle
mov
dec
sub
dec
mov
dec
mov
inc
dec
pop
mov
outsl
mov
sarb
dec
cmovg
dec
jg
mov
dec
mov
mov
mov
ret
outsl
sarb
sarl
sub
dec
mov
dec
mov
inc
dec
pop
ret
insb
shrl
jg
jle
mov
dec
sub
dec
mov
dec
mov
inc
dec
pop
rcrb
jecxz
loopne
lock
mov
dec
sbb
mov
and
dec
mov
mov
jecxz
rep
lock
jle
jg
jle
mov
dec
sbb
dec
add
dec
and
dec
mov
mov
add
adc
jle
mov
lock
add
inc
add
hlt
inc
add
add
hlt
inc
add
inc
add
add
hlt
inc
add
repnz
add
mov
inc
add
hlt
inc
add
inc
add
hlt
inc
add
hlt
inc
add
inc
add
repnz
add
repnz
add
hlt
inc
add
test
mov
inc
add
or
inc
add
jg
dec
pop
inc
inc
add
ja
mov
jne
mov
incb
mov
repnz
add
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
xor
pushf
clc
out
stc
add
lock
add
inc
add
dec
cmp
push
pop
mov
add
je
inc
add
add
add
and
dec
add
inc
add
insb
add
jae
popa
add
add
add
outsl
add
add
data16
add
jne
add
add
outsb
add
push
data16
add
data16
add
dec
add
add
add
inc
add
insb
add
add
push
add
add
data16
imul
jne
add
data16
add
add
add
add
add
add
add
add
inc
add
imul
add
insb
add
data16
popa
add
jne
imul
add
dec
add
inc
add
jne
jae
popa
add
imul
push
add
data16
add
insb
add
data16
add
add
inc
add
dec
sbb
and
dec
sbb
and
dec
mov
add
push
dec
sbb
dec
arpl
dec
sub
and
dec
and
dec
arpl
dec
add
and
dec
and
dec
and
dec
mov
add
add
or
popf
or
int
fisttpll
or
or
insl
or
jo
jno
jbe
ja
je
jne
mov
mov
jge
jge
jge
jle
ds
jae
leave
sbb
jae
cs
cmp
hlt
sub
sub
jno
mov
imul
fwait
xlat
in
add
das
adc
leave
cmc
cmpsb
addr16
pop
or
daa
cmpsb
sbb
add
shl
inc
add
shlb
lock
add
push
addr16
repnz
add
addr16
inc
push
push
dec
js
outsl
push
fs
push
dec
addr16
ja
popa
fs
imul
dec
dec
bound
dec
outsb
jbe
dec
push
push
add
add
inc
jae
inc
pop
inc
push
je
push
fs
bound
jo
dec
push
je
push
fs
jo
dec
jbe
je
outsl
push
jo
inc
add
jns
jno
gs
insb
dec
push
push
add
inc
js
push
inc
pop
inc
inc
inc
je
jo
jb
push
jae
add
push
dec
pop
jp
push
insb
popa
jbe
inc
add
inc
push
data16
popa
addr16
push
push
add
jae
gs
jae
push
dec
add
add
jbe
jne
addr16
push
addr16
pop
dec
jne
jbe
inc
push
push
push
jne
dec
push
outsl
gs
outsb
dec
inc
push
bound
outsb
bound
ja
addr16
jns
inc
push
jns
push
jbe
inc
bound
pop
push
inc
popa
push
inc
outsb
insl
dec
dec
push
dec
inc
pop
jbe
jns
push
add
add
add
add
add
lock
nop
testb
nop
testl
add
add
add
add
add
testl
add
add
add
add
add
testl
add
add
add
add
add
add
dec
lock
testb
fdiv
add
lock
push
testl
add
testl
add
add
pop
testl
add
add
add
add
pushf
testl
add
testl
add
testl
add
testl
add
clc
add
and
add
add
add
testl
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
repnz
gs
je
push
popa
imul
insl
gs
add
mov
dec
gs
jo
popa
insb
imul
mov
dec
gs
jo
outsb
insb
outsl
arpl
add
push
push
inc
data16
dec
popa
jae
add
inc
inc
push
add
pop
add
je
jb
imul
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
je
push
jo
arpl
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
push
gs
jo
outsb
dec
gs
js
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
dec
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
into
add
jae
popa
addr16
outsl
js
add
inc
push
xor
cs
insb
add
xlat
add
insb
insb
push
outsb
add
add
gs
dec
bound
arpl
pop
add
fs
outsl
outsb
je
gs
jne
arpl
add
dec
add
gs
je
push
arpl
outsb
add
dec
xor
cs
insb
add
or
mov
inc
add
or
mov
or
or
lret
add
or
rorb
inc
add
dec
icebp
iret
mov
movsb
add
stos
or
add
mov
mov
sub
pop
aas
test
movsl
loop,pn
jg
inc
hlt
out
cmp
add
repz
xchg
leave
mov
sub
ss
mov
lcall
loop
repnz
cmc
addb
push
sub
sbb
jo
inc
scas
nop
fwait
icebp
mov
sub
data16
cmp
adc
notl
ss
cwtl
inc
cmp
ficomps
cmp
call
pop
jne
cmc
in
lret
ret
sub
lea
das
cmc
sbb
daa
add
adc
sbbb
xor
mov
xchg
mov
call
xorl
and
sbb
jne
test
cmp
adc
clc
test
mov
sbb
xchg
push
fimuls
push
insb
cld
pop
mov
pop
mov
push
jb
jno
js
mov
es
mov
arpl
dec
sub
lods
mov
movsl
or
mov
add
mov
out
and
in
push
in
inc
pop
jg
repz
xchg
sbb
adc
sbb
dec
dec
and
loope
or
movsl
sbb
bound
cltd
xor
ss
pop
fistl
pop
adc
sarl
in
int
loopne
insb
scas
sbb
or
cmp
fsts
push
dec
xchg
xlat
add
in
ret
hlt
scas
js
pmaddwd
fdivrp
pusha
daa
jns
insb
int3
psubb
aad
pop
and
mov
iret
jmp
cli
pop
dec
les
xor
push
mov
movsl
xor
and
add
xchg
stc
jb
add
pop
inc
mov
stos
mov
int
mov
mov
popl
addr16
and
jae
and
and
sbb
mov
dec
outsl
push
les
gs
data16
jo
sub
fistpll
shrb
sub
inc
and
stc
pusha
sahf
jle
mov
inc
testb
xor
or
shr
mov
xchg
mull
fimull
adc
pop
add
popa
lock
fwait
pop
add
lret
jge
into
popf
dec
jb
lahf
idivb
xchg
fmulp
jmp
cli
mov
xor
ljmp
not
cmpsl
imul
xor
in
fxch
jl
ret
mov
add
add
add
adc
fildll
cmp
add
mov
mov
aas
push
sti
lcall
gs
xchg
in
jecxz
in
jg
adc
out
pop
mov
or
scas
sbb
in
outsb
mov
inc
jno
jns
mov
jl
jge
dec
fcmovb
cmp
out
andb
adc
sbb
jmp
push
gs
ja
inc
out
mov
add
xchg
jbe
push
fisubrs
add
adc
pop
lcall
and
mov
lret
mov
sti
lods
mov
ja
iret
adc
fwait
sti
sub
cmp
pusha
aad
sbb
or
dec
adc
cwtl
pusha
fiaddl
fidivrl
add
jo
cmp
ret
add
xor
and
xor
xor
xlat
sub
imul
jne
mov
push
cmp
jle
inc
in
stos
shll
inc
add
jmp
fadd
push
cmp
sub
xor
xchg
xchg
sti
ret
and
icebp
je
insl
cmpl
rorl
clc
xor
xchg
xchg
fiadds
ljmp
add
fistps
xor
pop
xchg
xor
jbe
test
jecxz
push
in
inc
cmp
out
xchg
or
xor
and
mov
clc
adc
es
sub
pop
in
jp
jne
or
push
cmp
mov
jp
lods
hlt
lds
xor
xchg
repnz
rolb
dec
sub
jp
add
add
imul
sub
xor
int
popf
pushf
jne
insl
inc
insb
pop
mov
jo
loop
js
push
cmp
ljmp
mov
sub
push
in
or
cld
shrl
mov
or
leave
sahf
rorb
repz
adc
aam
cmp
aas
mov
sub
push
punpckldq
xor
addps
jne
inc
mov
push
ficompl
cmpsl
jne
aam
push
loope
pushf
or
dec
aam
loopne
shrl
shrl
ljmp
or
jmp
ja
cmp
push
and
cmc
ljmp
shll
mov
scas
subb
lea
aas
outsl
add
add
add
adc
in
rcrb
sti
loope
xlat
mov
push
add
into
subl
ja
or
jne
sahf
sub
jl
push
or
sbb
fidivl
cmc
bound
mov
dec
mov
dec
xchg
adc
mov
sbb
xor
push
dec
mov
inc
fadds
mov
hlt
or
jecxz
imul
cltd
inc
andl
pop
mov
mov
testl
pop
fiaddl
lods
sub
sub
jle
jle
jl
mov
push
mov
cmp
jno
push
and
pushf
mov
xor
mov
cmp
dec
lea
adc
pusha
hlt
dec
pop
mov
cwtl
xchg
mov
mull
les
scas
insl
idivl
xlat
mov
insb
jno
fisttpll
xchg
cmp
xchg
shr
jmp
out
push
leave
mov
out
test
push
mov
mov
hlt
pop
gs
fidivrl
adc
in
cld
push
push
cmp
fld
pop
fiadds
pop
sbb
cld
pop
mov
mov
mov
loope
mov
mov
lahf
lret
repz
sbb
mov
mov
sbb
std
sbb
cmp
push
into
and
dec
mov
inc
mov
fs
adc
xchg
filds
pop
dec
insb
aam
je
daa
pop
mov
jle
imul
lods
test
add
int
ret
ret
xchg
or
imul
imul
pop
les
sub
adc
rcl
outsl
ret
popa
cmpsl
inc
push
mov
pop
pop
pop
jnp
icebp
cmc
and
jnp
add
or
and
lahf
lahf
in
sbb
loope
mov
jae
adc
mov
mov
and
xchg
and
pop
enter
iret
imul
dec
push
mov
sbb
or
mov
loope
push
in
leave
cmp
cmp
xlat
in
cmpl
fcoml
xor
jno
jno
in
push
xor
fwait
xchg
pop
adc
fninit
pop
arpl
sbbb
inc
mov
mov
jp
xchg
neg
push
outsl
mov
dec
dec
jae
or
push
and
jp
mov
jno
inc
fs
scas
nop
enter
popa
cmp
ret
and
add
add
addl
fcompl
inc
loopne
xchg
mov
mov
xor
push
lods
test
sbb
fcompl
mov
out
icebp
fmuls
test
ljmp
fnsave
mov
cmc
pop
sub
call
decl
lods
or
stc
lods
and
sub
mov
mov
jg
mov
fstps
stos
loop
cltd
pusha
sbb
jne
mov
fsubr
imul
outsb
flds
imul
mov
and
lock
out
mov
xchg
inc
les
or
dec
add
sub
mov
stos
ljmp
fdiv
cmpsb
add
and
push
stos
inc
aad
sbb
push
xor
call
ret
mov
lahf
shl
add
pop
mov
jae
ljmp
or
xchg
push
mov
sahf
dec
mov
and
xchg
dec
rcrb
jp
rorl
mov
or
xor
xorl
jge
cmp
jl
sub
out
xchg
sub
and
jae
into
and
adc
sub
fst
and
xchg
dec
or
sbb
jb
and
bound
inc
adc
cmc
popa
fsts
mul
push
lods
lea
test
nop
fldenv
repnz
push
dec
in
jo
xor
sbb
or
push
adc
add
push
add
lods
xchg
fstps
imul
mov
aam
inc
mov
mov
push
xchg
fisubrs
jmp
mov
ficompl
in
icebp
mov
popf
pop
xchg
std
arpl
sbb
daa
mov
rol
and
in
ja
in
ror
push
leave
arpl
sbbl
mov
hlt
not
or
add
xor
cld
adc
ret
int
cmp
xchg
jno
mov
mov
mov
mov
repnz
movsl
add
inc
mov
mov
sahf
and
push
adc
jl
pop
push
pop
out
sub
popa
and
rcl
inc
sub
enter
icebp
jae
or
inc
cmp
jb
mov
jmp
in
inc
xor
pop
dec
jae
inc
or
incb
jne
and
clc
jnp
jb
jnp
das
popf
rcr
dec
js
dec
push
or
ret
inc
scas
addr16
add
add
add
adc
std
out
stos
push
dec
dec
inc
push
loop
push
outsl
add
mov
loop
stc
jbe
sub
push
repnz
inc
inc
ljmp
or
inc
cmp
sbb
and
and
test
adcl
push
fbld
mov
mov
jae
push
or
inc
jmp
lods
jne
arpl
in
imul
loopne
andl
popf
dec
enter
xchg
adc
scas
cwtl
daa
int3
test
adc
inc
orb
fcmovne
pop
jge
dec
jl
jg
iret
imul
out
cmp
xchg
add
scas
iret
outsl
fs
push
sub
xchg
xchg
pop
leave
pop
adc
cwtl
repnz
pop
mov
cmc
push
inc
pushf
pop
negl
aaa
mov
xchg
xor
xor
mov
lahf
and
push
movsl
scas
dec
nop
sbb
stos
cmp
lret
push
dec
aas
nop
jb
aas
imul
cli
repz
pop
mov
pop
dec
jb
imul
pop
pop
xchg
mov
rolb
mov
jne
addr16
dec
inc
adc
imul
mul
fcoml
fsubrl
sti
xlat
aam
mov
dec
in
nop
push
adc
push
mov
add
je
lds
mov
imul
iret
fsubrs
xchg
ljmp
or
mov
mov
mov
mov
pop
xchg
sbb
arpl
sahf
xchg
mulb
or
fdivl
sahf
fisttpll
or
xor
xor
test
scas
ja
cmp
stos
cmp
sbb
cmp
aam
lds
sbb
negb
xchg
fidivrs
std
mov
cmp
popf
mov
loop
repz
hlt
jb
aam
ret
fistpll
aas
subl
mov
in
jnp
iret
xor
shlb
inc
xor
ljmp
and
in
mov
iret
subl
mov
int
sbb
inc
in
jl
stos
jno
sbb
sbb
jmp
pusha
sbb
lods
inc
jmp
repnz
jg
and
mov
pop
push
ffree
xchg
popa
xor
fcompl
imul
dec
pop
test
aam
jle
jl
loope
cmc
fldenv
add
and
xor
jp
sbbl
movsl
xchg
ret
fucomi
shrb
int3
inc
popf
fucomi
notb
cmpsl
or
sub
mov
add
add
add
stc
fnstsw
fcmovb
inc
ret
cmp
add
loope
shll
aaa
add
cmp
push
sub
idivb
aaa
fs
jmp
ja
pop
imul
adc
xor
pop
aad
popa
xchg
sbb
inc
jae
popa
xor
pushf
bnd
pop
add
shrb
mov
push
pop
lds
xchg
jae
dec
cmp
sub
push
sbb
jecxz
mov
mov
das
cwtl
lea
lret
repz
cltd
or
out
sub
mov
inc
cmp
pop
dec
fbld
xor
stc
daa
sbb
push
lahf
add
stos
mov
dec
sahf
jb
cmp
inc
mov
call
jge
repnz
add
in
and
fmull
inc
subb
subl
mov
xchg
pop
test
imul
loop
push
xor
dec
fnsave
jae
insl
cwtl
in
push
pushf
inc
jmp
iret
movsb
jo
cmp
pop
mov
and
and
or
sub
xlat
push
test
data16
nop
test
mov
and
lods
data16
out
leave
jns
sysenter
aas
add
cltd
push
mov
xchg
test
lret
mov
movsb
andb
xchg
adc
ss
dec
xorl
sahf
mov
add
fisttpl
cmp
shl
mov
or
dec
and
call
mull
pop
xchg
push
push
pop
ret
lods
int3
xchg
xor
cwtl
fidivrl
mov
fwait
push
dec
cmpb
cmp
ss
es
xchg
sbb
test
jecxz
popf
in
push
push
add
sub
imul
movsl
xor
xor
push
lock
push
cmpsl
jo
and
in
or
loopne
out
xor
push
addl
imul
mov
scas
add
lods
lods
mov
lret
push
cli
subl
outsb
jecxz
mov
jno
add
popl
negb
fadds
daa
dec
xlat
push
add
adc
sbb
scas
call
clc
daa
sti
dec
inc
fistl
out
outsl
popf
fwait
icebp
adc
pop
inc
dec
repnz
dec
pop
and
test
aad
pop
cmc
sub
dec
lods
sbb
xchg
lret
sti
adc
loopne
xor
push
fadds
jae
mov
sti
hlt
push
inc
cmpsl
popa
xlat
rcrb
int3
sub
mov
add
add
ss
sbb
addr16
inc
dec
int
mov
pusha
fwait
je
add
out
push
incl
sti
xchg
add
or
jge
pop
repz
lret
test
std
mov
je
aaa
xor
fimull
int
cmc
std
pminub
sbb
subb
mov
dec
ds
gs
subb
or
push
dec
mov
mov
jns
incl
cld
lea
int
mov
mov
dec
xchg
mov
icebp
imul
pop
dec
testb
loop
inc
pop
pusha
cwtl
ss
repz
xorb
jg
xlat
xchg
js
jae
sub
lahf
repnz
push
sub
cmc
add
pop
test
fs
xor
loope
mov
pop
lahf
push
or
mov
adc
sbb
inc
or
imul
xchg
mov
repnz
xchg
test
movsl
repz
ret
inc
in
xchg
mov
loop
and
popf
xchg
adc
pop
add
call
pop
mov
pop
pop
arpl
xchg
shrb
sahf
cmp
dec
daa
xchg
negl
test
aam
inc
add
or
adc
outsl
cmpsb
lock
mov
jnp
inc
adc
mov
dec
pop
xchg
push
fidivl
and
xor
mov
repz
mov
pop
rcrb
fldenv
scas
push
rol
ljmp
xor
jns
mov
sbb
es
mov
ljmp
pop
imul
jp
adc
mov
sbb
aaa
cli
into
mov
push
xchg
icebp
clts
or
test
out
jmp
and
call
imul
ja
xchg
dec
xchg
add
pushf
or
fstpl
cmpsb
and
sub
and
adc
aad
dec
loopne
int
clc
test
dec
jp
push
add
xchg
inc
aam
inc
insb
mov
jge
cmp
mov
test
add
xorb
mov
in
daa
clc
aas
xor
cmp
jecxz
jne
clc
lods
enter
mov
or
mov
sub
aas
pop
inc
sbb
lahf
dec
dec
into
lret
sahf
inc
sbb
mov
in
lock
pop
jge
mov
xor
xor
mov
mov
jle
div
or
sub
adcl
add
add
add
sub
add
movups
sub
adc
pusha
sbb
add
or
add
adc
aaa
jl
add
sbb
add
adc
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
xor
add
ret
add
inc
or
add
add
insl
cmp
xor
jno
arpl
add
dec
jns
popa
je
inc
jne
arpl
pop
inc
dec
pop
pop
add
shll
les
sub
add
add
sti
xlat
mov
roll
aaa
push
mov
cmpsl
nop
mov
ss
jg
insb
add
imulb
loope
mov
sbb
and
pop
mov
xchg
icebp
movsb
mov
stos
scas
flds
fwait
mov
shl
dec
movsb
imul
jae
ret
pushl
sub
mov
lret
adc
rcll
out
jecxz
or
mov
mov
cmpsl
pop
movsb
mov
call
sub
pop
mov
push
add
inc
sub
mov
pushf
mov
cli
int
clc
adc
in
add
xor
push
hlt
repz
jb
fs
incb
mov
cmp
loope
or
mov
mov
jle
icebp
addr16
fnstsw
jnp
push
repnz
pop
mov
xchg
cltd
push
lea
jle
sub
xchg
clc
mov
jbe
pop
pop
movsb
sub
pushl
imull
int
pop
mov
call
mov
nop
in
lahf
sbb
push
out
mov
dec
movsb
jg
jo
imul
push
add
gs
movsl
test
in
mov
cmp
add
leave
aaa
icebp
mov
ret
sub
test
xchg
movsl
lds
xchg
repz
lret
icebp
dec
pop
jl
mov
les
push
jne
xchg
js
pushf
add
lret
xlat
in
push
lret
test
cmp
bound
mov
outsl
and
ljmp
fwait
sbb
enter
dec
in
sub
pop
dec
pop
mov
imul
pop
inc
sti
jl
sti
aaa
subl
daa
jo
or
push
inc
add
stos
sbb
inc
rorl
sub
dec
ret
or
test
int
inc
rorb
lahf
pop
pushf
ror
push
adc
lods
sti
andb
imul
adc
scas
cmp
mov
pop
inc
in
mov
xchg
dec
adc
dec
ljmp
pop
js
mov
jle
loopne
cmp
dec
addr16
dec
push
int
or
fstps
insb
dec
mov
pushf
jp
call
cmp
adc
dec
sarb
xchg
xor
push
xor
scas
inc
adc
xchg
cs
pop
lret
add
add
add
adc
js
push
ficompl
fcmovnu
inc
pop
fistpll
add
hlt
push
ss
aas
pop
ljmp
ljmp
push
adc
mov
outsl
data16
aas
jmp
xchg
pusha
jae
jno
in
xor
ljmp
ficoms
pop
add
pusha
cwtl
test
outsb
sbb
jbe
mov
add
xor
enter
cltd
sub
or
add
movsl
adc
cmp
cmp
jle
pop
mov
push
cmpsb
jge
push
lods
jns
push
xchg
sub
lock
jne
cmc
adc
fmuls
xor
dec
xchg
inc
dec
xor
xchg
push
out
adc
inc
add
sbb
cmpsl
mov
sbbl
rorb
inc
pop
pop
pop
test
out
insb
pusha
push
das
cmp
filds
fstpt
push
lock
scas
je
or
loope
bnd
jle
out
cmovge
sti
sbb
jns
mov
xor
adc
jnp
pop
cmp
fcmovnu
pushf
jno
repz
xor
cmp
lea
mov
leave
roll
jmp
xor
mov
out
cli
push
and
pop
inc
mov
out
pop
jl
orl
inc
orb
stc
rclb
add
ljmp
fstl
fisttpll
in
aas
out
je
add
mov
inc
fwait
mov
out
int
mov
fdivs
add
mov
fcoml
xchg
jge
orb
or
add
mov
lcall
popa
fnstenv
ficompl
loope
pop
jecxz
sub
adc
sub
and
std
ret
mov
sub
xor
imul
xchg
mov
sbb
lods
fcompl
mov
xchg
shlb
inc
or
movsb
or
inc
push
rcr
and
test
push
inc
xor
mov
fidivrs
push
ret
out
or
insl
ret
lea
and
push
movsl
and
mov
add
cmp
mov
adc
push
test
aam
mov
pop
adc
ret
mov
cld
pop
cmpsl
ljmp
or
adc
mov
pop
lret
cmc
mov
adc
and
add
add
repnz
into
negl
push
cmp
add
add
add
mov
mov
bnd
and
je
movsl
movsl
dec
push
jmp
popa
inc
ja
mov
add
sub
fsubp
inc
mov
xchg
xchg
jp
cmp
js
jo
loopne
leave
pop
mov
adc
fimuls
push
push
adc
adc
jecxz
popf
cltd
pop
add
push
notl
xchg
fs
clc
testb
or
lcall
dec
cmpsl
adc
lods
and
js
mov
cmp
imul
push
xchg
scas
int3
sbb
gs
pop
pop
mov
add
mov
es
mov
cmp
sub
sbb
xor
push
fwait
pop
push
lea
pusha
adc
je
rorb
imul
push
andb
stos
mov
cmp
cltd
inc
aas
adcl
dec
mov
repz
in
addb
and
cmp
outsl
jae
fnstenv
int
sub
jge
dec
icebp
sbb
inc
add
adc
stos
orl
hlt
in
adc
shlb
and
or
lock
xchg
int
or
fcmove
fsubrs
pushf
jg
mov
adc
mov
sar
movsb
out
xor
mov
xchg
mov
in
pop
inc
sbb
and
xor
push
aam
fiaddl
xlat
pop
cmp
jo
sbb
xor
mov
mov
jmp
insl
mov
ljmp
lea
ss
jecxz
pop
lcall
mov
mov
cmc
adc
jae
fidivrl
addr16
jecxz
pop
jl
das
jg
sahf
push
insb
cmp
hlt
mov
clc
pop
repnz
mov
jb
mov
shl
cli
jo
add
idivb
mov
push
aaa
cmpsl
lret
inc
out
shrb
movsl
test
mov
int3
adc
fildl
cmp
call
ret
rcll
dec
jg
add
fimuls
popa
pop
pop
and
loop
sbb
pop
cmpsb
loopne
adc
ds
xchg
sub
push
xchg
lea
jmp
mov
xor
xchg
clc
add
add
add
pop
insl
add
mov
xor
int3
dec
negb
jg
add
add
fcomip
push
into
xor
adc
lcall
adc
xor
sarl
mov
dec
add
stos
dec
add
pop
out
pop
dec
scas
pop
dec
push
sub
dec
sub
lcall
shlb
in
or
add
pop
shlb
pusha
inc
movsl
ss
jge
mov
and
mov
xlat
stos
jle
pushf
pushf
dec
clc
xchg
es
mov
adc
and
shrb
mov
push
pop
jp
sti
push
xlat
shrb
mov
and
jge
push
mov
fsubl
fstp
call
das
lea
cli
jne
je
sahf
ja
aas
cltd
sbb
cld
mov
or
push
jo
in
pop
lds
aaa
jp
out
cli
push
xchg
sub
push
cld
stc
push
mov
ror
or
xchg
rcll
cld
and
sarl
cmpsb
xchg
sbb
inc
xchg
cwtl
jbe
jecxz
push
stc
incl
cmp
sub
push
fwait
lods
rcr
pushf
lods
and
inc
loop
push
push
aaa
adc
dec
sub
mov
inc
xchg
dec
dec
or
mov
negl
js
mov
jae
inc
gs
in
push
loop
ss
push
xor
pushf
hlt
add
idiv
hlt
push
cmp
dec
fdivs
and
test
push
xchg
jmp
xor
lcall
mov
in
out
add
inc
push
addr16
jae
jb
cmp
into
mov
insb
stc
sbb
inc
mov
or
in
cli
adc
arpl
inc
outsb
loop
jbe
and
cmp
mov
gs
xchg
imul
adc
loopne
jle
aam
xor
or
cmp
addr16
ds
fisubrs
jge
sbb
sbb
ret
sti
dec
sub
arpl
adc
dec
loopne
imul
stc
enter
lods
stc
call
movd
mov
adcb
cmp
inc
aad
iret
insl
sbb
jge
push
iret
orl
es
clc
dec
repz
pushf
dec
mov
xlat
and
gs
fsubl
sbb
cmpsb
popf
add
sarl
ffreep
mov
dec
imul
aam
movsl
fbld
xchg
lds
add
add
xchg
inc
scas
jecxz
jmp
jne
or
aas
push
xchg
and
lds
add
in
lds
add
sbb
xor
scas
mov
iret
movsl
outsb
lcall
xor
sub
xchg
lret
imul
ljmp
cs
leave
add
sbb
adc
sarl
inc
iret
add
push
mov
stc
add
jg
push
mov
add
jb
xchg
mov
cmp
jnp
rcr
call
pop
pop
test
mov
mov
cmp
mov
adc
or
fistpll
cmp
push
push
call
xchg
cmc
pop
cmp
xchg
xchg
xchg
dec
sub
movsl
lods
sub
add
and
add
test
adc
into
aam
inc
fdivl
cmp
jo
data16
sub
jmp
je
aam
cmp
xor
xor
push
xchg
movsb
cmpsl
pop
lock
divl
pop
jecxz
adc
push
pusha
xlat
xlat
rcll
divl
inc
adcl
ds
push
adc
leave
and
rcrb
add
mov
add
cmp
xchg
jge
fsubrs
loope
dec
lods
xor
pop
xor
xchg
cmpsl
inc
outsl
out
inc
push
stos
sahf
in
mov
and
or
data16
leave
mov
in
mov
movsb
stos
mov
movsl
fadd
ja
loop
test
lods
push
sub
xor
and
inc
test
push
cmpsl
popa
push
and
sahf
xchg
movsl
and
mov
mov
outsl
ret
js
bnd
dec
pop
loop
push
push
mov
das
jp
dec
xchg
mov
icebp
pop
pop
mov
jmp
fwait
int3
jp
or
out
adc
and
inc
dec
shl
mov
dec
popf
cmc
pop
pop
or
pop
mov
fnstcw
pop
mov
xchg
xchg
enter
outsl
mov
mov
clc
dec
cli
cmpsl
leave
mov
push
rcrl
bnd
xchg
test
cs
sub
std
xor
or
push
or
icebp
sbb
in
dec
ljmp
xor
jmp
xor
dec
popa
and
xchg
aad
arpl
cmp
sub
cli
sub
and
inc
ret
repnz
loopne
sbb
loopne
xlat
out
or
xchg
sub
sub
and
cmp
mov
sub
in
add
add
add
hlt
test
js
std
in
aas
cmp
fsubrs
xor
test
add
push
pop
xor
in
add
and
into
cmp
sar
leave
mov
xor
pop
fadd
addr16
negb
ljmp
or
jno
dec
std
push
fs
jae
jb
push
or
jo
hlt
mov
cwtl
pop
add
pop
xorb
repz
sarb
in
lcall
out
dec
xorl
cltd
cmp
adc
mov
insb
pop
popa
push
fs
add
xchg
ljmp
movsb
cmp
or
outsl
jg
dec
ss
in
mov
inc
cltd
mov
repnz
sub
dec
mov
rorl
subb
push
inc
out
jnp
lret
mov
movsl
dec
outsl
dec
fnstcw
popa
dec
ljmp
cmp
clc
imul
inc
in
es
fsubrs
gs
cmp
dec
lds
stos
push
loop
fsts
pop
xchg
cmp
push
pop
aaa
inc
daa
and
cld
pushf
cld
pop
lods
iret
pop
es
aas
add
clc
gs
icebp
ret
cmp
mov
imul
loope
in
lea
sub
scas
jnp
out
out
cmp
adc
sub
push
pop
pop
pushf
out
cltd
test
mov
sbb
stos
inc
push
dec
das
push
inc
and
and
xorl
cmp
sub
inc
jmp
xor
es
jg
mov
dec
insb
sbb
sbb
pop
pop
mov
mov
lret
enter
adc
cmp
pop
push
mov
push
test
cmc
imul
sahf
int
mov
and
lods
loop
mov
xchg
pop
jp
ja
mov
ret
jecxz
aam
ret
repnz
inc
jle
dec
outsl
cmp
jno
stc
push
dec
mov
das
insl
xor
mov
mov
loopne
fdivrs
inc
fwait
mov
cld
icebp
inc
jecxz
mov
dec
inc
gs
add
cli
mov
inc
shll
test
sbb
pop
push
aad
pop
xchg
and
cmp
js
cmpsl
scas
ret
xor
fimuls
and
stos
push
les
mull
jno
add
push
cwtl
inc
leave
outsl
xor
mov
sbb
arpl
cmp
xchg
popa
fs
sarl
or
pop
inc
and
push
dec
fcmovnu
stos
add
add
add
mov
outsb
adc
fstpl
adc
arpl
add
push
adc
aad
adc
popa
bound
add
sub
inc
add
sub
inc
add
sub
mov
mov
xchg
inc
jo
cmp
add
mov
xchg
jg
loopne
xor
and
fcoml
jmp
popa
cmp
adcb
je
mov
lock
shl
jl
gs
outsb
ja
push
adc
xchg
scas
sub
cmp
test
fcmovnbe
cmp
add
and
std
pop
jb
idiv
leave
inc
inc
push
and
cmp
inc
push
sbb
int3
xor
cltd
mov
dec
sti
cmpsl
gs
sub
lret
xor
lods
cmp
xlat
or
in
push
dec
movsl
dec
jle
cmpsb
cli
add
xchg
push
lds
xor
pop
mov
mov
roll
mov
jnp
push
fmul
pushf
dec
ds
inc
jo
cmpsl
stos
int3
and
sub
adc
loop
fnstenv
dec
mov
and
repz
mov
xchg
sahf
orb
das
pop
push
nop
push
push
test
sti
and
js
pop
lret
push
pop
inc
cwtl
outsb
pop
int3
mov
adc
sub
ljmp
stos
fldt
scas
lods
pop
stos
dec
mov
ss
mov
mov
jp
jb
mov
or
adc
push
xor
out
sbb
fsub
sub
or
clc
inc
mov
cwtl
pop
xchg
mov
xor
cs
pop
lret
mov
lods
leave
pop
mov
enter
fimull
xor
mov
mov
jo
mov
fcoms
stos
sarl
lahf
test
repnz
add
mov
loopne
xchg
loop
enter
inc
adc
call
pop
jbe
push
mov
daa
mov
cmp
xor
mov
sub
adc
adc
and
mov
inc
aad
pop
mov
push
pop
out
js
jecxz
inc
jl
test
push
pop
mov
fstl
jo
into
cmp
jns
fs
or
inc
cli
mov
jno
push
push
add
roll
iret
movsb
jg
pop
xchg
pop
adc
bound
inc
and
stc
insl
adc
mov
mov
adc
adc
lea
dec
aas
pop
mov
xchg
add
in
add
push
xchg
movsb
mov
push
stos
add
in
jge
rorl
popf
mov
popa
cmp
xchg
clc
and
je
neg
lods
sti
stos
sub
aad
rcrb
aad
mov
fxch
pusha
inc
dec
mov
mov
xlat
xor
add
add
add
imul
cld
add
subb
add
mov
out
mov
ret
jb
dec
inc
push
mov
ret
push
inc
pop
jle
push
sbb
inc
test
imul
cltd
movsl
push
shrl
ret
out
daa
xor
fucomp
jbe
test
cwtl
daa
fidivs
dec
and
xor
mov
in
lods
push
xor
movsb
xor
jg
imul
jecxz
push
in
lret
ljmp
bound
bound
movsb
mov
lods
adc
adc
in
pop
dec
rcrl
sub
subb
inc
mov
mov
bound
jp
pop
cmp
xchg
xchg
dec
addr16
jg
push
adc
movsl
imulb
jno
or
imul
adc
cmc
repz
outsl
cmp
jg
outsl
call
lcall
lret
push
pop
mov
ret
out
mov
mov
and
cmp
push
sbb
jp
das
adc
scas
cmpsl
movsl
mov
sbb
and
mov
xchg
push
pop
lea
into
test
sub
mov
js
es
xchg
ficoms
out
in
bound
pop
cmp
fstl
mov
jnp
out
imul
mov
xor
sbb
add
jbe
movsb
retw
cld
jno
xchg
jecxz
loopne
jne
inc
cmp
push
sbb
inc
lcall
or
imul
push
mov
push
add
movsl
out
loop
mov
adc
loopne
div
sahf
ficoml
sub
es
push
xchg
dec
ret
mov
sbb
xchg
push
enter
mov
xor
cld
cli
call
sbb
cmpsl
mov
xchg
mull
mov
pop
pop
xorb
nop
ja
mov
mov
std
sub
xchg
int
sub
inc
lods
mov
iret
mov
jecxz
je
mov
jns
pop
ret
or
fidivs
in
jmp
push
ret
jns
push
xchg
lock
test
bndldx
pop
cmp
scas
mov
lods
addr16
cld
movsb
xchg
pop
cmp
push
adc
dec
stc
or
cwtl
or
stos
or
ja
test
cmp
xchg
out
or
and
test
mov
inc
lret
jmp
dec
stos
leave
in
push
popf
movsl
mov
add
add
add
mov
mov
mov
cmp
mov
mov
add
lret
jns
mov
pop
mov
lock
and
icebp
jnp
bnd
mov
add
imul
sub
jmp
and
push
jp
lea
leave
jp
in
leave
add
mov
fwait
out
jge
cli
fcmovnb
add
dec
fnsave
mov
ss
data16
sub
lods
cmc
push
add
call
mov
jmp
icebp
add
imul
mov
aad
dec
cmpl
dec
gs
mov
inc
hlt
clc
imul
pushf
out
mov
jae
loop
pop
cmp
and
fldcw
out
jg
xchg
scas
int3
mov
push
fs
xchg
mov
pop
lcall
xor
cltd
sub
iret
cmpsb
and
pop
in
shrb
pusha
inc
mov
aad
imul
mov
out
xchg
mov
loopne
divl
int
mov
xor
shll
fcomi
test
lock
ljmp
mov
pusha
clc
sub
sbb
and
mov
out
decb
jne
mov
cmp
lds
aam
mov
sbb
dec
popf
fwait
adc
cli
js
cmc
mov
testl
pop
mov
out
into
andb
pop
lcall
cli
jae
ja
data16
adc
inc
in
jns
mov
xchg
cmp
or
jo
lock
imul
dec
arpl
mov
inc
js
lret
fidivl
into
xor
jns
orl
xor
fs
mov
xor
cmpsb
and
sarl
mov
cmpsl
imul
jmp
incb
mov
adc
push
in
dec
ret
adc
lods
xchg
fstpl
push
loope
xor
pusha
cli
iret
bound
add
cwtl
mov
dec
jno
popa
imull
int3
add
dec
sbb
cwtl
xor
push
push
and
adc
jmp
and
jno
jp
push
adc
jns
mov
cmpsb
mov
lret
pop
push
hlt
mov
push
ret
jge
add
mov
cmp
dec
pop
push
lcall
loopne
ljmp
mov
outsl
mov
psubw
bound
ret
add
add
add
cmp
mov
in
enter
leave
adcl
mov
xchg
cmp
or
jmp
xchg
dec
add
mov
flds
rclb
xor
mov
push
scas
dec
into
jae
mov
lods
pop
xchg
fdivr
arpl
call
iret
lret
dec
cs
cmpsl
and
ja
add
aas
jge
and
in
repnz
mov
and
push
lcall
mov
xchg
cmp
fldl
rorl
rcll
and
xor
dec
push
jecxz
addl
pop
mov
shlb
enter
pop
aas
inc
sbb
fadd
stos
fisubrs
pop
or
cwtl
cmpsb
fs
movsb
cmpsb
std
mov
mov
cmp
test
and
dec
mov
pop
jb
cmpl
fs
jmp
popf
pop
rclb
mov
xchg
mov
std
sahf
iret
or
jns
shl
insl
lret
mov
adc
cwtl
jae
inc
adc
dec
jl
and
lea
or
jmp
sbbb
popa
fiadds
lds
scas
mov
push
ret
sub
push
inc
insl
mov
xchg
jno
dec
dec
repz
push
dec
jg
and
or
xchg
mov
jl
ror
pop
push
pop
xchg
jge
push
or
jae
mov
xor
js
inc
inc
andl
fldcw
jp
adc
cmc
addr16
sbb
adc
sub
add
add
loopne
jae
leave
iret
les
int3
sub
and
and
inc
xor
mov
dec
xor
adc
dec
and
loop
aam
movsw
imul
cmp
push
mov
dec
mov
cmpl
test
sub
inc
xchg
jmp
xchg
xchg
fcompl
xlat
pop
add
dec
sub
and
pop
int3
dec
push
jo
movsl
xchg
mov
in
xchg
xchg
ljmp
cli
loope
mov
fwait
or
fdivrp
lret
jo
cld
add
insl
or
fstl
dec
aad
and
mov
shll
test
and
push
test
lret
je
or
adc
cmp
dec
popf
and
jp
mov
cld
adc
sti
fiaddl
iret
movsb
out
xor
add
add
add
sub
sbb
jnp
pop
sbb
orl
xchg
add
mov
push
movsb
addr16
mov
sbb
test
movsl
rcrl
test
xor
lods
test
pop
sub
and
mov
ds
pop
mov
stos
into
mov
pop
mov
addb
push
mov
pop
pop
push
dec
sbb
jnp
adc
hlt
jmp
jl
flds
add
jmp
iret
sahf
sbb
cld
fidivrl
cmp
test
cmp
test
jo
leave
xor
rcrl
psadbw
cmpsl
mov
repz
mov
cmp
xor
ja
hlt
and
mov
sbb
lret
sarb
leave
das
or
or
imul
shl
ljmp
xchg
cmc
jl
jge
sahf
fildl
in
jecxz
adc
jmp
cwtl
mov
fs
repz
xchg
into
sbb
lods
cmp
push
scas
fldl
mov
sbb
pop
cmp
mov
sti
bound
pushf
pop
push
mov
int3
lret
mov
aam
jno
mov
out
fidivrl
push
jmp
iret
in
fisubl
push
aas
sub
jb
fs
out
pop
xor
shlb
pop
sbb
pop
popf
xchg
enter
rolb
clc
sub
mov
adc
xchg
sbb
fadds
filds
sbb
ret
push
mov
gs
and
jmp
andl
sbbl
nop
add
ss
daa
mov
sbb
subl
mov
xchg
xor
testb
and
dec
adc
insb
jbe
push
and
test
pop
jecxz
mov
or
aam
les
pop
pushf
xchg
shlb
incb
es
push
jns
adc
add
ror
cli
in
test
decl
test
stos
fstpl
jge
jmp
in
je
jb
int3
jbe
mov
inc
adc
outsl
out
push
jmp
mov
lods
adc
mov
mov
xorb
in
pusha
push
aas
or
and
jb
add
adc
daa
jne
movsb
xlat
les
sarl
dec
shl
bswap
xchg
cli
mov
and
jmp
ds
mov
xchg
sahf
xchg
scas
mov
or
or
push
cwtl
fdivl
nop
cmp
pop
jecxz
add
add
add
cmp
jnp
mov
xchg
imul
add
xchg
add
mov
loopne
les
in
push
push
insb
jmp
xor
and
xor
cmc
ret
loop
lods
jnp
jbe
cli
js
and
pop
in
pop
mov
imul
sub
and
outsl
lods
mov
je
repz
pop
push
outsl
movsl
add
in
sub
cmp
out
orl
add
adc
or
arpl
xchg
notl
jae
fbstp
loop
mov
cmpsl
fisubs
xor
mov
movb
jae
and
insl
pusha
mov
lret
ljmp
outsb
das
xor
add
mov
test
jle
mov
sub
mov
or
cli
into
inc
mov
bswap
dec
mov
cmpsb
cmp
loope
jmp
and
rcll
cmp
andb
adc
add
das
rorl
cmp
dec
fisubl
ljmp
push
add
pop
stos
cmp
mov
in
and
mov
xchg
and
cmp
lea
jb
push
popf
pop
lods
xchg
and
sub
pop
sbb
pop
jae
pop
cmp
jae
idivb
lods
adc
movsb
add
test
in
jmp
stos
bound
mov
cmpsb
shl
je
scas
or
fwait
repz
and
dec
or
cmp
insl
dec
xchg
xorb
test
adc
scas
xlat
divl
xchg
sbb
cmp
cs
inc
mov
jb
jnp
and
cwtl
mov
mov
in
xchg
sub
sbb
mov
pop
pop
rorb
xchg
mov
sar
cmc
scas
test
adc
push
out
push
ds
cmpsb
popf
dec
call
pop
das
dec
mov
inc
dec
popf
cs
loop
and
hlt
dec
test
int3
xchg
cmc
cmp
mov
xor
inc
fsubr
jns
imul
push
stos
push
notb
scas
outsb
out
dec
in
sti
shlb
movsl
add
out
aad
idiv
xor
add
inc
icebp
fistpll
dec
and
and
pop
and
sbb
pushf
mov
mov
push
mov
cld
out
repnz
adc
jo
cmp
imul
xchg
push
fdivr
lods
mov
jnp
xchg
hlt
stos
daa
add
add
add
in
movups
sti
pop
adc
divb
adc
inc
and
add
adc
mov
adc
jno
adc
push
push
inc
push
pusha
push
outsl
cmc
pop
mov
inc
mov
aad
sbb
dec
and
add
dec
cmp
jb
jae
arpl
jns
je
push
inc
gs
dec
jp
ja
pop
imul
insl
push
dec
je
imul
push
jo,pn
bound
movsb
ds
add
ds
add
ds
add
ds
add
ds
add
in
jp
jp
call
sbb
cmp
xchg
add
mov
ret
pop
lea
sub
xchg
stos
xlat
cmpsb
outsl
movsl
or
sbbb
pop
test
in
scas
adc
sub
cmp
sbb
popf
dec
pop
inc
loope
fwait
and
mov
fcompl
inc
les
notl
mov
lods
shll
ret
jnp
outsb
mov
sti
stos
xchg
out
inc
cli
push
or
in
xchg
and
lods
mov
cmpsb
insl
sbb
or
addr16
pop
loop
jge
scas
shlb
xchg
jnp
mov
arpl
sahf
repnz
or
xor
sbb
fnsave
sub
sub
lods
jne
dec
lret
les
sub
jl
cmp
out
cli
cltd
lret
xchg
arpl
test
push
lret
push
push
cmp
pop
es
in
fldcw
sub
and
inc
insl
or
nop
push
loopne
xor
jns
xchg
mov
add
das
inc
sub
cltd
mov
pop
mov
pop
dec
mov
loopne
and
test
ljmp
pop
cmp
xchg
stos
or
push
sbb
inc
mov
in
lods
mov
or
jb
test
jo
jg
test
sub
fs
or
jbe
pop
lret
movb
outsb
shlb
adc
cmp
adc
mov
add
scas
pop
rorl
aas
pusha
jge
aad
and
jb
mov
ror
lret
cs
mov
push
pop
xchg
push
cmp
adc
mov
or
in
inc
imul
dec
and
sub
gs
pop
xor
or
or
vdivps
push
jl
dec
cmp
fcmovu
mov
dec
xor
into
jbe
or
ds
testb
cs
ljmp
xor
and
loope
daa
andb
ds
xor
xchg
pop
pop
pop
xor
shll
mov
movsb
push
call
jno
mov
push
xchg
sti
and
daa
shr
in
push
adc
sbbl
mov
mov
pop
mov
and
pusha
out
mov
mov
xorb
insl
test
scas
or
aaa
ret
jmp
sub
leave
mov
test
inc
pop
fneni(8087
mov
and
out
dec
dec
mov
je
imul
mov
mov
and
shll
pop
pop
mov
adc
pop
mov
add
add
add
lcall
mov
dec
sti
outsb
xor
mov
jnp
and
fwait
push
pop
xor
inc
ss
fcoml
mov
lods
xor
rcl
repz
mov
in
dec
icebp
mov
xchg
xchg
add
mov
sti
and
adc
rcrl
test
clc
fstps
fmulp
push
or
lds
sbb
mov
push
jne
jle
xor
cs
int
cmp
xor
in
out
bnd
int
imul
es
cmpsb
jg
popa
jg
add
aam
and
arpl
std
dec
rcr
pop
mov
sub
adc
push
leave
test
in
dec
cwtl
and
pop
bound
sbb
pop
or
mov
dec
mov
xchg
repz
sub
adc
xchg
add
xchg
jno
pop
in
sub
icebp
adc
aas
inc
das
push
push
in
stos
and
clc
sub
jno
pop
sbb
stos
dec
or
pop
or
dec
arpl
dec
xor
lret
inc
jl
mov
out
sub
mov
jno
mov
js
popf
arpl
fxam
sbb
cmpsb
inc
xchg
and
into
push
pop
pop
js
out
xor
mov
rorl
xorl
sti
push
fsubrl
iret
cli
add
jge
cmp
pop
bnd
push
scas
mov
shr
or
sub
movsl
dec
inc
test
out
or
mov
mov
lods
push
movsl
dec
lret
push
inc
cmp
dec
xchg
hlt
sub
aaa
lret
inc
push
xchg
mov
push
es
out
sbb
and
ds
push
add
dec
sbb
mov
sarb
push
ljmp
sbb
cwtl
stc
jbe
dec
out
out
xorb
lahf
imul
dec
imul
in
ljmpw
das
je
xchg
mov
aas
dec
sbb
cld
cwtl
ret
push
imul
arpl
int3
lock
push
test
adc
mov
iret
push
aam
mov
cmp
fstpl
repz
ss
cld
mov
sbb
faddl
sbb
sbb
mov
xchg
pop
adc
aas
or
data16
pop
popa
mov
jp
sub
xor
movsb
fisubs
sti
xchg
lahf
jecxz
push
int
sbb
or
jle
stos
push
fnstsw
dec
sbb
shl
cmpsl
add
add
add
push
cli
mulb
pop
mov
das
in
cmp
mov
pop
repnz
jno
repnz
pop
push
aaa
mov
xchg
jnp
jmp
out
or
jp
mov
xor
mov
dec
mov
mov
int
mov
in
mov
jno
pop
add
xor
mov
adc
iret
jne
xor
inc
inc
dec
mov
scas
push
sahf
leave
add
jbe
inc
fdivr
outsb
ljmp
push
aas
test
adc
stc
push
inc
cmp
loop
or
pushl
and
push
and
mov
das
mov
push
sbb
aam
iret
cmp
shll
xor
jmp
ljmp
sti
xor
lret
iret
popa
jns
push
sub
and
push
das
movsb
test
xor
adc
adcb
and
xchg
cmpb
mov
ret
loope
bnd
jg
lret
movsb
movl
adc
xchg
outsb
mov
or
mov
sub
xchg
and
lds
lahf
push
imul
adc
push
adc
inc
pop
outsb
cmpsl
int3
arpl
imul
and
test
sti
outsl
xchg
sahf
cld
push
jbe
test
cmp
jmp
call
ja
in
xor
xor
dec
push
add
gs
inc
xchg
xchg
iret
int3
rclb
stos
push
in
shl
mov
in
mov
pushf
mov
insl
fidivs
lock
adc
push
test
cmpl
xor
call
lea
push
cmp
jp
gs
in
adc
or
mov
cmp
dec
clc
cmpsb
test
aaa
sub
hlt
push
dec
push
dec
jge
shrl
jns
mov
ret
inc
rcll
mov
dec
mov
repz
test
push
push
mov
and
fucomip
stc
sub
push
scas
test
lods
mov
mov
mov
mov
or
cli
cmp
popa
pop
jb
jns
ror
ficoms
ficoml
fisubl
mov
scas
or
xchg
xchg
mov
or
clc
ret
ds
daa
shl
adc
ljmp
jae
jb
push
pop
out
jb
sub
cmc
pop
ds
cwtl
std
and
popa
mov
insb
adc
into
jbe
xor
xchg
pusha
fsubs
adc
cmpsl
aam
outsl
dec
add
add
add
in
ss
or
pop
in
negl
mov
cmp
add
cs
cli
mov
fisubrl
or
stc
arpl
xchg
cltd
iret
and
mov
inc
push
pop
in
sti
inc
fimuls
or
mov
jge
adc
fcoml
inc
ret
mov
add
aas
cmp
fstpl
lods
pop
add
insb
lea
sub
sub
adc
sbb
call
mov
add
adc
sarl
mov
cmp
and
movsl
inc
push
cmp
clc
mov
test
in
cmove
and
mov
jmp
mov
jle
sub
cmp
sbb
addb
rcr
adc
xor
repnz
cvtps2pi
ljmp
into
mov
call
mov
pop
outsb
decl
scas
ds
call
mov
cld
dec
sub
push
arpl
xchg
mov
inc
enter
sti
ret
imull
out
in
pavgb
sarl
push
movsb
xchg
lahf
adc
dec
xlat
sbb
int
aam
mov
and
xchg
add
and
sbb
sbb
adc
mov
adc
pop
or
nop
out
addr16
push
in
sti
pop
cmpsb
jmp
sub
popa
pop
insl
jae
pusha
mov
pop
mov
pop
sbb
bnd
xchg
scas
mov
cmc
or
and
je
add
imul
and
xor
sbb
mov
jnp
sub
or
mov
mov
jmp
cmpsl
mov
lret
sub
ss
scas
out
imul
and
lret
push
out
and
cs
rcll
mov
ret
scas
das
push
addr16
dec
out
insl
add
imul
cltd
push
hlt
inc
push
ficompl
add
addr16
lds
cmp
mov
xchg
dec
cmp
repz
lods
push
sub
call
mov
xor
and
mov
sub
add
or
jo
jno
cmp
dec
jl
mov
xor
daa
fidivrs
incl
out
xchg
outsl
sub
pop
and
mov
fists
mul
mulb
mov
push
jl
inc
pop
xchg
enter
mov
xor
dec
or
mov
push
xchg
sub
mov
or
mov
add
add
add
adc
jnp
xchg
shl
jns
push
stos
imul
add
arpl
insb
aaa
std
mov
clc
fimuls
mov
mov
ja
test
fnstsw
std
adc
in
inc
jno
subl
and
les
jl
aad
add
inc
cld
in
mov
jnp
std
jecxz
jne
push
sub
loopne
sbb
adc
mov
std
jle
push
aaa
lret
call
fsubrs
enter
jp
cmovo
push
dec
and
xor
into
hlt
insl
loope
pop
sub
out
movsb
pop
outsb
lea
fstl
cmpsb
mov
scas
mov
sub
orl
mov
in
aad
mov
pop
popf
movsl
push
movsl
mov
stos
and
enter
lock
inc
jno
sub
out
cld
into
test
scas
clc
lret
in
dec
push
stc
or
addl
hlt
loopne
sub
lods
fistpl
adc
ljmp
jg
jge
push
push
cmp
in
int3
sbb
sub
inc
dec
xchg
ss
push
out
stos
adc
inc
sub
outsb
jae
xchg
subb
mov
cmp
xchg
sbb
out
sub
iret
fmull
pop
jecxz
pop
cmpsb
call
popa
mov
mov
or
jl
mov
cmp
xor
jmp
cmc
out
and
mov
cmpsb
mov
dec
xor
cmp
add
jnp
sbb
test
daa
jl
loop
loop
xor
mov
mov
mov
and
repnz
cmp
dec
mov
jg
adc
sub
inc
ret
test
cltd
adc
jge
mov
movsb
mov
lock
push
insl
cmp
movsb
inc
aam
xor
enter
pop
cmp
sub
jg
cmc
fists
sub
push
cmp
stos
test
sarl
shr
orl
pop
or
cs
test
adc
outsb
dec
xchg
push
hlt
mov
in
aas
sbb
dec
mov
popf
daa
xchg
nop
xchg
std
and
stc
xorl
mov
adc
mov
stc
mov
imul
hlt
mov
jmp
shrl
pop
stos
xor
mov
adc
popa
cld
mov
add
add
add
daa
jbe
idivl
das
adc
mov
insb
jmp
add
pop
adc
cs
test
xchg
les
cmpsb
sub
sti
mov
int
push
loop
fs
and
jge
shrb
in
loope
ret
repnz
push
sbb
ljmp
cmp
movsb
xlat
cmpb
adc
mov
jno
daa
mov
sbb
lret
xor
pop
sbb
fwait
jle
inc
mov
test
pop
arpl
das
xorb
and
je
loopne
popf
iret
icebp
aad
mov
or
cmp
inc
mov
je
mov
adc
jl
jnp
jg
jb
dec
xor
push
sub
mov
cmpb
push
or
decl
xchg
aad
ror
pop
dec
pop
and
out
jno
movsb
mov
mov
mov
dec
pop
push
push
ljmp
daa
sbb
sub
js
or
jp
sti
sbb
and
in
in
sbb
stos
js
pop
clc
adc
mov
ss
imul
sub
mov
stc
jl
and
push
call
or
push
jmp
jecxz
ret
scas
xchg
mov
dec
es
jbe
push
push
sbb
les
mov
pusha
js
push
out
mov
cltd
imul
mov
aad
les
jne
sbb
dec
add
adc
iret
mov
enter
out
and
jno
out
sbb
mov
xor
xchg
incb
mov
scas
pop
dec
mov
pop
mov
cmp
push
imul
stos
cmpb
push
adc
and
popa
and
jmp
and
mov
das
adc
adc
push
mov
dec
mov
sub
cmp
and
sub
mov
mov
mov
fstp
cmp
in
cli
cmpsb
inc
adc
xchg
fs
jbe
jne
pop
pop
add
cmp
test
lcall
mov
add
jnp
dec
cli
jmp
in
pop
jbe
rol
in
lea
add
jg
mov
mov
inc
cwtl
outsb
dec
push
adc
loopne
test
jnp
xchg
aas
mov
notl
hlt
cli
adc
mov
inc
lea
es
xchg
ficoms
and
fadds
add
add
add
sub
adc
jae
adc
lds
adc
pushf
insb
adc
in
adc
adc
adc
pop
push
adc
pop
inc
dec
cmp
push
dec
xor
add
xor
dec
xor
dec
dec
xor
dec
pop
pop
dec
aaa
dec
pop
dec
add
push
pop
pop
dec
cmp
xor
push
add
push
xor
push
dec
pop
pop
push
ss
pop
dec
add
inc
xor
dec
push
xor
push
push
dec
xor
xor
add
xor
inc
push
push
xor
inc
aaa
pop
pop
dec
push
inc
xor
dec
xor
xor
push
add
cmp
pop
push
push
xor
inc
xor
pop
xor
xor
pop
push
cmp
push
cmp
cmp
inc
xor
pop
xor
pop
cmp
pop
dec
push
dec
add
xor
cmp
xor
add
ss
cmp
xor
xor
dec
add
xor
xor
push
pop
push
xor
add
push
pop
xor
inc
push
xor
add
push
cmp
dec
push
push
pop
push
dec
add
inc
ss
cmp
inc
add
dec
pop
cmp
xor
add
aaa
pop
aaa
dec
push
xor
pop
inc
add
dec
pop
push
xor
push
push
add
push
aaa
pop
push
inc
xor
dec
add
cmp
inc
inc
xor
add
pop
pop
pop
aaa
inc
dec
xor
add
dec
pop
inc
dec
inc
xor
dec
xor
dec
inc
add
pop
pop
pop
inc
pop
pop
pop
push
dec
push
inc
pop
xor
push
add
add
add
add
push
add
xor
push
add
add
push
add
dec
add
inc
add
add
add
dec
add
add
aaa
add
dec
add
add
xor
add
inc
add
inc
add
add
dec
add
xor
add
add
pop
add
xor
add
inc
add
dec
add
add
pop
add
add
add
cmp
pop
add
add
add
xor
push
add
xor
inc
add
pop
add
xor
add
pop
add
add
add
add
add
push
add
add
dec
add
add
dec
add
add
pop
add
add
add
add
push
add
add
xor
xor
dec
add
dec
add
pop
add
cmp
cmp
push
add
add
cmp
xor
xor
add
inc
add
inc
add
add
dec
add
xor
pop
add
pop
add
pop
add
add
add
dec
add
pop
add
inc
add
add
add
pop
add
add
dec
add
add
xor
dec
add
cmp
dec
add
add
inc
add
add
dec
add
add
add
add
add
add
add
add
sub
add
dec
add
adcb
add
pusha
add
addb
add
add
add
add
add
add
add
add
add
js
add
nop
add
addb
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
push
addb
mov
mov
ja
ja
ja
ja
ja
ja
ja
xchg
inc
inc
inc
inc
inc
inc
inc
add
add
addb
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
jo
pop
jo
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addb
ja
ja
ja
ja
ja
mov
mov
mov
add
incl
add
add
ljmp
add
add
add
add
add
add
add
add
add
rolb
add
add
add
mov
add
mov
mov
rolb
addb
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
mov
incl
incl
incl
incl
incl
incl
incl
mov
inc
inc
lock
inc
addb
ja
mov
mov
add
add
incl
add
incl
add
add
add
add
and
add
add
call
add
adc
add
add
sub
add
add
pushf
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cld
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
fadds
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
sub
push
add
add
add
push
add
dec
add
add
jo
jo
insb
add
arpl
popa
add
add
outsb
add
add
outsl
add
je
add
jbe
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
xor
xor
and
sub
push
add
dec
add
add
dec
add
cmp
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
push
add
add
pop
add
add
addb
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
dec
add
add
add
pop
add
add
push
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
jae
scas
add
add
outsb
add
add
outsb
add
je
and
inc
add
jo
insb
add
jb
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
mov
xlat
jno
and
fcoml
cmpsb
add
mov
jl
dec
insl
sbb
mov
add
xchg
stc
sbb
push
das
xchg
das
rclb
push
xor
inc
jg
test
das
lret
enter
fidivrs
outsb
aaa
std
je
lock
add
fsubr
js
ficoml
je
cmc
test
outsb
nop
push
dec
jg
mov
mov
push
cld
xor
mov
push
imul
mov
dec
clc
rcr
pop
mov
push
xor
jno
pop
push
test
mov
or
fcom
popa
xor
std
lods
adc
and
mov
xchg
add
mov
mov
mov
cs
pushf
mov
movsl
xchg
arpl
xchg
jae
adc
or
push
das
jp
dec
cmpsl
add
into
mov
stos
push
mov
lods
dec
mov
enter
pop
adc
imul
rcrl
inc
sahf
cmc
or
mov
out
pop
mov
roll
cli
jbe
sbb
inc
mov
mov
push
into
outsb
xor
inc
in
jp
pop
in
or
mov
stos
cmp
pop
and
mov
jmp
jge
mov
xchg
dec
jmp
adc
ret
xchg
movsl
mov
and
dec
movsb
inc
lret
pop
movsb
add
ja
and
scas
mov
adc
mov
xchg
insl
mov
push
xchg
test
inc
and
nop
lods
and
or
cmpsl
loopne
dec
mov
pop
push
mov
pop
inc
lcall
xor
sub
inc
pop
xchg
movsl
out
inc
stc
mov
pop
fidivl
fistpl
cmp
xchg
aaa
fwait
jmp
pop
in
xor
jo
ss
pop
adc
aad
int3
cmp
sbb
dec
ljmp
add
xrelease
push
jg
xchg
and
mov
iret
lock
mov
mov
push
dec
adc
and
sbb
hlt
push
in
ja
enter
dec
xchg
rolb
inc
stc
mov
fsubrs
jmp
outsb
aam
pushf
fbld
adc
int3
cli
mov
xchg
mov
lea
sbb
scas
dec
cmpsl
mov
repz
sar
rcll
idivb
xor
cmp
fistl
mov
add
adc
jg
stos
jno
jg
hlt
nop
cmpsl
sub
add
mov
add
adc
xchg
sbb
mov
fsub
and
inc
xor
xchg
fdivl
dec
ja
mov
jnp
test
cmp
adc
orb
enter
jg
mov
lahf
shrb
sbb
mov
dec
dec
sub
dec
lock
insl
sub
mov
aaa
lods
mov
sub
jle
lret
xchg
faddl
imul
das
out
xchg
inc
ss
cli
ds
add
push
in
dec
sbb
lds
fsts
lcall
fidivl
dec
xor
cli
bound
movl
aam
dec
mov
xor
cltd
jle
cmc
push
popa
jmp
and
mov
and
loop
adc
scas
adc
mov
xor
das
mov
imul
mov
test
pop
mov
cmp
inc
test
das
fldt
in
push
push
or
aas
inc
dec
and
adc
cmp
js
adc
mov
adcl
shlb
and
and
clc
dec
nop
fadd
cmp
imul
lea
cltd
dec
xchg
mov
mov
pop
ljmp
dec
out
hlt
ja
push
pop
out
into
and
adc
add
add
mov
xchg
int3
jnp
pop
stc
inc
lcall
test
xor
clc
xchg
imul
popa
sbb
lret
dec
pop
scas
and
lods
xor
loop
sub
scas
sub
sub
movsl
mov
sbb
push
addr16
loop
int
shrl
cltd
mov
xor
lea
lock
and
push
push
xchg
daa
push
je
push
adc
je
xor
xchg
xor
lds
jno
xchg
in
lock
sarl
paddb
xchg
pop
inc
mov
jmp
flds
imul
mull
mov
or
jl
test
jae
adc
cmpsl
add
or
adc
push
es
mov
int
mov
sub
pop
fimuls
fwait
cmp
andb
jp
sbb
adc
lahf
xchg
mov
addr16
stc
andb
mov
jb
push
pop
negl
into
xchg
test
outsl
imul
enter
pop
pushf
cmp
inc
pop
and
jae
movsb
insb
cmpsl
push
mov
stos
fucom
iret
add
add
add
sbb
out
cmp
xor
sti
pop
sub
add
mov
jle
add
jecxz
les
jg
and
xchg
ret
les
rolb
call
jmp
cmp
rcrl
mov
fidivrl
and
nop
and
and
dec
jle
sahf
sbb
lods
add
lret
or
fdivr
add
push
pop
push
dec
mov
mov
lahf
jecxz
cmp
mov
jne
inc
pusha
jb
or
xchg
jp
std
ds
out
mov
inc
sbb
push
cmp
enter
shr
icebp
enter
in
adc
dec
bound
ret
call
nop
and
data16
das
jns
out
xor
jl
cmpxchg
add
cmp
ret
fs
out
mov
and
loopne
add
cmp
lock
push
mulb
cmp
mov
mov
js
mov
addr16
fnstcw
pusha
loopne
mov
je
adc
cmp
prefetch
push
dec
fisttps
dec
shl
jl
mov
pop
jmp
fsubs
repnz
aam
fstpt
out
or
and
mov
jnp
pop
aam
mov
push
pushf
mov
fstpl
pop
bound
data16
dec
xorl
das
sbb
add
scas
sbb
inc
and
jnp
lret
sti
add
adc
cmp
jle
cmp
hlt
cwtl
push
mov
add
pop
addr16
daa
lret
jnp
dec
iret
lret
xchg
cmp
testl
out
adc
mov
push
in
add
sub
loop
inc
push
jg
test
sbb
push
jae
adc
stc
imul
ljmp
push
lock
push
mov
aaa
les
dec
cltd
sub
rcll
or
stos
push
push
or
setp
push
out
xor
pop
push
mov
rclb
addr16
xchg
xor
lcall
dec
aad
aad
or
mov
xchg
xchg
scas
sahf
sbb
bound
xchg
cmp
sbb
sti
mov
mov
fldcw
xchg
mov
and
pop
or
push
call
xchg
int3
add
push
dec
add
fbld
sarb
add
lods
xor
sub
mov
dec
sub
adc
dec
aas
mov
out
mov
mov
add
pushw
movsb
ret
add
add
add
aad
pusha
cld
jne
sti
adc
add
mov
outsb
dec
rol
cwtl
outsl
jo
lock
mov
lock
add
loope
jp
inc
mov
inc
rolb
lods
cmc
mov
pop
mov
pop
push
or
lea
push
add
and
call
call
loop
mov
dec
insl
xchg
fwait
test
xor
out
insl
add
inc
pop
mov
js
in
scas
out
insl
sti
sahf
mov
pusha
rclb
mov
sub
movsb
repnz
mov
shl
cmc
push
push
mov
dec
dec
pop
mov
cld
or
xchg
call
stos
jae
repnz
jbe
or
not
aaa
cs
imul
add
out
pushf
subb
mov
dec
lret
insb
iret
daa
fildll
data16
inc
xor
mov
repz
sti
cmp
jo
and
fnsave
push
xor
push
dec
push
les
xor
out
jno
add
push
inc
dec
scas
out
jo
pop
pop
xchg
cld
mov
bound
gs
and
dec
shll
push
or
mov
lcall
xchg
xchg
cld
xor
add
fsubrs
add
and
add
inc
pop
call
xor
pop
inc
notl
shl
outsb
hlt
nop
push
sub
jmp
scas
and
les
xor
andb
mov
fdivrl
or
test
mov
mov
and
adc
imul
shl
movsl
push
or
cwtl
mov
or
mov
adc
leave
mov
xchg
enter
mov
mov
aas
leave
int3
into
nop
imul
lods
mov
dec
inc
ja
push
inc
push
popf
rcr
jo
xor
rcrb
sbb
in
jbe
scas
sbb
bswap
fldl
xor
ljmp
xchg
and
in
jo
dec
pusha
jbe
mov
xchg
aaa
scas
prefetch
cmp
sbb
push
xchg
sbb
dec
out
imul
adc
sahf
mov
rol
repz
ret
and
pop
jg
les
sbb
aad
out
adc
jg
fs
insb
and
sub
test
popf
xchg
insl
sub
lock
adc
ffree
adc
cmpsb
or
insl
pop
aas
sbb
cwtl
ja
xchg
aam
test
and
fnsave
fs
ret
pushl
adc
add
add
add
mov
clc
mov
add
mov
xchg
push
xchg
pop
out
push
push
sub
test
inc
inc
mov
pop
mov
xchg
rcr
mov
inc
lret
repnz
push
fnstenv
clc
mov
popf
gs
nop
jb
or
dec
push
jle
sbb
push
pop
dec
out
scas
mov
xchg
xor
add
jecxz
adc
in
in
pushl
push
stos
pop
mov
sbb
jno
stos
xchg
leave
dec
cmp
add
or
scas
add
mov
out
or
fwait
push
mov
sub
jno
mov
dec
sbbb
bnd
aam
cmp
cs
or
mov
cmc
and
pop
rcrb
rcrb
cwtl
xor
mov
bound
push
addb
cs
jne
adc
mov
js
mov
das
cmp
xchg
inc
test
sub
push
pusha
lock
js
add
push
test
cltd
cmp
mov
shlb
pop
add
cmp
add
loopne
sub
pushl
out
aas
cmpsb
pop
and
in
js
je
sub
jnp
loope
add
sahf
mov
lret
pop
cmpsl
inc
and
aam
mov
jo
mov
inc
push
sti
cmpsb
mov
mov
fdivl
fidivrl
jg
mov
jecxz
sahf
adc
add
cmp
pop
mov
pop
testl
fwait
dec
lea
adc
leave
xchg
add
cmpl
pop
jmp
out
decb
imul
in
loope
out
cli
xchg
sbb
xchg
loop
mov
pop
or
pop
inc
jmp
sub
imul
pop
ljmp
lock
jp
ljmp
push
push
imul
fisubl
mov
push
iret
out
dec
lcall
invlpg
popa
lods
dec
movsb
jmp
push
push
or
outsl
stc
aas
clc
inc
adc
pop
dec
je
mov
mov
or
jbe
and
loopne
push
dec
xor
bound
hlt
hlt
out
dec
mov
cmpsb
repz
mov
cmp
and
in
arpl
push
stos
insl
adc
pushf
sub
in
push
aad
ret
sbb
pop
test
rcl
fsubr
push
mov
or
adc
sbb
add
add
add
popa
jle
pop
lods
jne
dec
and
mov
add
movsb
jp
es
ss
sbb
or
jae
mov
mov
and
cmpsl
cmpsl
cmc
push
lods
iret
jns
test
add
out
push
mov
scas
out
mov
push
arpl
sti
repz
wrmsr
sbb
push
pop
jmp
mov
or
fisttpl
xor
lds
aaa
cmpb
movsl
out
imul
pop
clc
xchg
ficomps
mov
cmp
jns
add
or
mov
test
ficomps
xor
les
jb
and
scas
arpl
push
pop
ja
xlat
fwait
jg
mov
sub
shl
mov
clc
sub
mov
push
pop
push
insl
mov
xor
lock
mov
out
and
ret
and
mov
sub
inc
sbb
mov
shll
add
into
pop
stc
xchg
pop
mov
fiadds
xchg
fs
xor
jmp
ja
dec
icebp
xchg
sbb
cmp
ret
xchg
xor
cmp
mov
cmp
pushf
lods
test
sti
iret
outsl
pusha
mov
mov
dec
mov
jne
mov
bound
inc
jmp
push
out
scas
call
shlb
fnstcw
push
stos
and
jae
adc
add
or
call
loopne
mov
jp
cmpl
stc
push
dec
movsb
xor
push
test
daa
adcl
cwtl
inc
push
mov
push
inc
push
jb
pusha
push
cltd
js
cltd
das
fwait
out
jle
fwait
push
lret
lods
nop
aam
outsb
out
int
mov
mull
in
addl
mov
xor
xchg
jno
ret
adc
shll
mov
and
mov
push
add
add
xor
gs
mov
repnz
push
and
in
and
dec
jg
mov
cwtl
outsb
xor
xor
test
pop
inc
or
mov
sub
add
jle
and
xchg
pusha
push
stos
and
std
xorb
xchg
test
sub
lahf
leave
in
mov
sbb
push
sahf
sti
dec
dec
mov
inc
mov
enter
add
dec
arpl
stc
inc
mov
inc
leave
das
rcl
loopne
ljmp
aaa
mov
mov
add
add
pop
cmpsb
adc
mov
lock
dec
shrl
xchg
add
mov
mov
dec
pop
sub
mov
mov
imul
rcrb
shll
int
jecxz
pop
push
jmp
mov
xor
enter
sbb
jns
leave
mov
es
testl
call
lcall
imul
add
cmp
sub
mov
add
sub
jg
test
mov
push
mov
sbb
inc
lea
test
out
xlat
cmp
cmp
adcb
xchg
mov
sub
mov
push
push
xor
stos
or
js
movsl
inc
test
mov
cmp
mov
pop
mov
loopne
xor
int
pop
jnp
addr16
into
repnz
inc
dec
pop
jg
pop
or
add
add
andl
fldcw
cmp
cmp
mov
dec
mov
scas
pop
xlat
test
pop
fildl
fcomip
push
fiadds
jle
or
mov
lahf
mov
pushf
in
ficoml
test
mov
ficomps
and
sbb
xchg
nop
push
aam
fs
movsl
iret
mov
test
cli
jb
mov
push
ds
mov
and
pushaw
pop
test
pop
sbb
sbb
ljmp
xor
call
mov
dec
in
and
int
pop
mov
pushf
sbb
inc
or
xorl
aad
dec
incb
bound
jp
repnz
lds
add
out
mov
jp
cli
ret
cmp
push
je
inc
lret
sbb
call
push
call
test
pop
mov
pop
adc
outsl
es
mov
gs
push
fdivrs
mov
push
xlat
dec
mov
fbstp
push
ds
jl
mov
mov
idivl
mov
or
shl
ds
outsl
roll
repnz
mov
roll
cmp
loopne
mov
rolb
and
adc
cwtl
imul
push
xor
pop
xchg
add
add
add
mov
add
jp
add
sub
add
cmp
adc
sbb
insl
les
mov
or
ud1
add
mov
cmp
pushf
xor
inc
and
ret
loopne
addr16
or
imulb
or
stos
add
mov
add
add
repz
fs
dec
test
cltd
inc
shll
repnz
scas
pushf
push
loope
push
mov
daa
sahf
xor
sahf
out
repz
cli
and
or
mov
jmp
sub
mov
ror
pusha
dec
mov
dec
push
dec
scas
hlt
adc
outsl
sub
adc
cltd
test
dec
and
sub
inc
pop
loopne
cmp
scas
xchg
inc
mov
dec
testb
jp
mov
movsl
jp
mov
lcall
popf
in
adc
lcall
nop
outsb
imul
icebp
sbb
sbb
cmp
push
loop
dec
subl
outsb
mov
add
push
inc
pop
xchg
out
and
fidivl
nop
push
dec
jl
adc
jmp
testb
in
aas
sub
rorb
pop
mov
sbb
frstor
lret
pop
int
push
je,pt
push
test
shlb
mov
or
mov
mov
jl
lods
sbb
iret
inc
mov
loope
add
pop
filds
pop
jg,pt
in
andb
push
lret
jns
push
je
cli
notl
sub
add
mov
fsubrp
rcll
mov
inc
add
xchg
dec
mov
shrb
movl
adc
test
stos
sub
push
lcall
xchg
sbb
push
pop
push
cmp
dec
dec
dec
mov
enter
adc
adc
mov
ret
arpl
inc
sub
mov
add
xor
stos
pop
mov
jecxz
mov
cmc
jl
jae
adc
inc
cmpsl
xor
lock
in
jbe
lock
jp
add
xchg
popf
pop
mov
cld
int
and
inc
test
fs
dec
push
shll
push
xor
add
iret
dec
pop
jge
inc
cli
rclb
mov
imul
stos
or
aad
cmp
fmuls
sub
das
fisttps
mov
ret
sbb
sbb
mov
fidivrs
nop
mov
jo
mov
xchg
stos
clc
mov
add
add
add
lahf
arpl
mov
in
adc
add
add
and
sub
stos
push
pop
mov
adc
mov
mov
mov
repnz
mov
jecxz
xchg
push
push
fnstcw
imul
xor
jb
movsb
cmp
rcrl
push
mov
insl
sub
mov
aad
mov
lock
cld
pop
or
mov
and
cmpsl
xor
jbe
iret
jne
ret
pop
or
sti
adc
pop
cmc
ds
gs
push
ret
mov
jg
mov
inc
mov
xor
movsl
lds
dec
hlt
mov
sbb
add
das
push
lods
sub
pop
and
lods
dec
leave
dec
fdiv
lar
mov
in
cli
push
xchg
cmp
or
pusha
xchg
aam
xor
insl
push
pop
mov
pop
shlb
inc
in
bswap
into
in
xchg
pop
cs
lods
xchg
pop
mov
leave
dec
xchg
push
jnp
cli
stc
jg
push
repz
leave
loop
mov
pop
xchg
cmp
gs
xchg
in
add
ds
push
stos
sub
aaa
xor
pusha
movsb
cmp
dec
adc
fwait
push
xor
push
pop
pop
movsb
jae
lea
stc
xchg
cli
xlat
mov
into
sub
or
or
xor
in
ds
out
mov
push
mov
dec
sarb
xchg
mov
pop
xor
aad
inc
add
dec
or
imul
inc
or
add
inc
loope
mov
adc
xchg
push
shr
xchg
push
inc
imul
lret
adc
dec
out
sbb
test
popf
adc
inc
jmp
add
loope
fsts
imull
cmp
mov
dec
imul
movsb
shr
fstps
lcall
je
mov
and
pop
ljmp
sti
cmp
cmp
jo
mov
sub
inc
mov
add
or
addl
push
int
imul
fisttps
pushf
dec
and
or
fsubs
hlt
mov
rdtsc
inc
cmp
mov
adc
iret
jg
or
jl
mov
addl
sub
mov
mov
rorl
sub
or
fs
stos
aam
and
int
test
stc
sbb
in
push
mov
mov
data16
test
int
orl
cmc
and
dec
call
dec
test
add
add
add
pop
mov
mov
sti
stos
stos
je
mov
add
fnstenv
mov
xchg
rep
fimuls
not
or
mov
mov
adc
push
addr16
sbb
jb
mov
clc
data16
scas
inc
cmp
mov
xor
push
out
iret
mov
adcb
and
add
mov
test
ret
popa
mov
mov
inc
stos
inc
mov
jl
lock
decb
dec
movb
cli
dec
in
les
sbb
ficompl
push
aam
sub
mov
ljmp
inc
and
movsb
adc
add
pushf
and
mov
pop
mov
push
sbb
mov
aam
loopne
les
arpl
sub
dec
fdivs
loopne
sarb
mov
shlb
inc
insb
daa
gs
xchg
xor
xchg
pop
fsts
dec
jle
data16
int3
pop
xchg
fnstenv
xchg
loope
push
mov
mov
lock
gs
mov
push
inc
sbb
cs
mov
or
cmp
or
jns
cmp
add
cmpsb
loopne
push
xchg
loop
mov
fbld
add
lods
sub
adc
and
setbe
xchg
movb
push
imul
rorl
testl
into
imul
xchg
mov
lea
xor
mov
jb
jb
cmp
xchg
inc
push
outsl
inc
and
ss
add
icebp
movsb
jmp
andl
sub
lahf
cmpsb
fsubrs
sub
rcrb
mov
jp
pop
out
cs
cs
xor
xor
inc
insb
sub
xor
push
lods
sahf
mov
xor
aaa
fcomi
mov
adc
mov
jle
push
sti
cmp
ljmp
jno
cmp
push
mov
push
sbb
xchg
lea
xchg
jnp
or
out
outsb
inc
out
imul
sub
pop
jne
xor
add
pushf
fwait
and
ljmp
xor
xor
int
jle
cmc
rcrl
loope
test
mov
cmc
je
pop
cmp
into
pop
lea
imulb
or
das
aas
jno
insb
push
xchg
scas
ret
dec
push
fs
icebp
mov
xchg
outsb
hlt
mov
xchg
into
movsb
insb
mov
pop
mov
lahf
lods
and
pop
sub
jle
iret
jmp
mov
add
add
add
push
inc
or
cmpsl
movsb
push
jae
gs
rolb
mov
sub
mov
mov
ret
pop
dec
pop
in
xchg
pushf
ja
popa
mulb
jecxz
shl
shll
mov
pop
push
sti
cmp
inc
insb
inc
test
jecxz
clc
sub
and
mov
lcall
or
je
js
xor
adc
loop
pusha
cltd
push
test
push
arpl
push
dec
pusha
mov
imul
cmpsb
lahf
in
clc
je
fisttpll
mov
sbb
or
adc
iret
xchg
sub
call
int3
in
jle
fcoml
data16
mov
mov
ret
xor
es
lock
jp
fdiv
xchg
inc
enter
mov
push
dec
adc
cmp
pop
paddw
pop
mov
movsl
cmpsl
push
ret
push
and
cmpsb
popa
sub
mov
sub
ljmp
add
jl
inc
int3
jecxz
scas
clc
loop
leave
out
scas
push
mov
xor
imul
orb
push
and
cmp
repnz
or
cmp
mov
pop
mov
mov
iret
ret
or
rcrl
push
fnstsw
pop
ret
addr16
mov
sbb
iret
es
adc
and
cli
inc
mov
and
cmp
add
lea
notb
cmp
push
add
mov
daa
std
fmuls
lods
ss
mov
fldenv
push
out
stos
mov
sbb
and
cmp
ja
mov
ror
push
sahf
test
lods
push
orb
ljmp
add
insb
movl
sbb
sbb
adc
loope
inc
jl
jno
sbb
push
loope
xchg
loope
sub
popf
gs
push
mov
xor
dec
pushf
mov
dec
dec
sub
inc
xor
sub
inc
xor
mov
pop
xor
call
mov
or
popf
fxch
cmp
mov
cmp
scas
cmp
clc
or
adc
orb
sbb
cmc
popa
xchg
cwtl
mov
dec
pop
jge
stc
push
test
mov
mov
les
push
scas
subl
xlat
and
out
pop
adc
movsb
jmp
lea
js
ss
fiaddl
mov
push
or
mov
jecxz
mov
add
add
pop
addl
jb
cmp
lret
add
mov
divl
sbb
dec
lds
pop
stos
jae
ret
inc
jle
rep
imul
in
ljmp
ja
xor
push
ret
je
out
data16
leave
shll
in
pop
pop
out
xchg
roll
imul
jle
pop
jmp
dec
hlt
inc
fcomps
mov
outsl
fdivl
cltd
jle
mov
insl
add
mov
mov
ret
push
cmp
data16
xchg
mov
loope
adc
xchg
jmp
cltd
mov
mov
stc
mov
mov
mov
xor
xor
mov
jg
mov
or
cmp
sub
nop
xlat
sbb
call
jmp
in
and
das
push
imul
mov
push
aad
aas
loop
and
push
imul
inc
adc
jp
xchg
mov
push
push
mov
inc
or
mov
jb
scas
sub
mov
sub
mov
in
pushf
sbb
into
lods
mov
sbb
out
pop
lcall
outsl
mov
outsl
jl
xchg
lods
movsl
sub
js
lea
xchg
jg
xchg
cld
loopne
shrl
dec
xchg
add
or
subl
insl
je
xchg
mov
aad
lock
popf
inc
jmp
push
lahf
dec
sbb
pop
pop
fs
pop
adc
mov
lret
or
dec
ss
jo
mov
xor
std
xchg
and
adc
push
inc
addb
lds
sub
popa
jecxz
sub
jp
call
jle
jbe
test
cltd
jns
daa
enter
out
out
hlt
fs
call
sub
xchg
push
bound
mov
mov
jmp
shll
fiadds
rcl
mov
insb
push
add
lret
scas
jge
outsl
fsubl
adc
add
lret
sub
sub
dec
stc
sub
in
mov
cmp
jo
push
roll
imul
cltd
dec
wrmsr
sbb
lods
xchg
jbe
in
fwait
and
push
mov
icebp
aam
sub
xor
pop
push
outsl
jmp
inc
pop
xor
iret
notb
dec
shl
icebp
or
ljmp
push
cld
adc
fwait
aad
jnp
gs
add
add
add
in
jle
ret
repz
std
jle
add
dec
xchg
cmc
cmp
movb
mov
cmp
push
jae
xrelease
lret
lret
xor
out
push
in
mov
insb
in
mov
cmc
dec
push
adc
mov
dec
daa
sbb
addr16
jb
in
cmp
push
or
lds
inc
negb
in
ret
xor
pop
es
call
sub
cmpsl
sub
aas
cltd
fisubrs
mov
xchg
stos
mov
fs
push
push
pushf
jp
xor
adc
repnz
fwait
pop
adc
test
stc
aam
sub
xor
leave
cld
xchg
sbb
fst
mov
aad
xchg
lea
out
imul
xor
dec
jle
adc
push
es
ret
dec
xor
sbb
cmpsl
mov
add
mov
xchg
mov
hlt
push
adc
fcoms
jns
popa
sbb
das
hlt
fmull
notl
mov
cli
mov
scas
movl
je
pop
fucomi
stos
faddp
pop
mov
or
jne
add
clc
sub
mov
xor
loop
aam
mov
mov
les
push
shlb
mov
fidivrs
jo
add
mov
jbe
scas
jp
or
fwait
clc
dec
stos
sbb
test
imull
scas
sbb
pop
inc
mov
out
inc
lods
xor
insl
inc
dec
fld
or
cli
popf
and
xchg
and
cvtdq2ps
in
push
push
movsl
add
fwait
mov
lcall
cmc
iret
lret
dec
mov
sbb
sbb
leave
stos
test
fwait
pop
and
pop
jecxz
mov
es
dec
aam
sub
cli
xorb
adc
mov
mov
inc
mov
repz
loope
fs
imul
adc
mov
pushf
hlt
mov
adcb
pop
jbe
jecxz
push
addr16
mov
xchg
pop
inc
nop
imul
lret
and
pop
ljmp
out
cli
out
fbld
sub
jge
in
xchg
out
outsb
xorl
cltd
ficoml
xchg
daa
push
ds
test
fnstsw
jmp
lods
test
jnp
xchg
xor
xor
jns
lcall
pushf
jno
adc
jbe
pop
push
iret
loope
stc
mov
sub
pop
push
roll
lods
pop
xchg
push
aad
into
sahf
mov
lods
push
dec
and
ja
aam
add
add
add
inc
add
cmp
add
jno
xorb
aaa
lea
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
ds
add
add
add
dec
xor
pop
xor
outsl
xor
xorl
mov
xor
shll
fdivl
in
lock
xor
cmp
cmp
cmp
cmp
cmp
sub
dec
cmp
jo
jbe
cmpl
add
add
add
cmp
add
jo
add
add
jne
test
xchg
xor
xor
shll
int
xlat
fidivs
in
divl
std
ss
aaa
sbb
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addb
sbb
add
enter
fidivs
in
icebp
xor
xor
xor
xor
and
add
add
push
add
add
cmp
cmp
jbe
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
sarl
fistpll
jmp
out
ds
aas
sbb
add
add
add
je
add
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
push
cmp
xor
cmp
push
cmp
pop
cmp
jbe
cmpb
cmp
cmp
cmp
cmp
cmp
aas
xor
cmp
inc
aas
dec
aas
push
aas
push
aas
add
add
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
push
cmp
arpl
push
jo
ja
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
ds
ds
ja
jg
mov
mov
ds
loope,pt
add
add
add
inc
add
add
xor
xor
xor
xor
xor
jl
mov
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
add
sub
add
out
repnz
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
add
push
add
mov
add
jge
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
mov
add
add
add
aaa
mov
mov
mov
add
jo
add
add
xor
xor
xor
xor
ds
ds
jmp
or
adc
aas
cmp
inc
aas
inc
aas
dec
aas
bound
push
aas
mov
cltd
aas
sahf
aas
movsb
aas
scas
aas
ret
aas
sarb
fstpt
add
add
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
dec
cmp
pusha
cmp
jae
jnp
jg
xchg
xchg
cmp
cmp
cmp
cmp
cmp
add
mov
add
adc
xor
xor
xor
jb
xorb
xor
cmp
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
inc
cmp
pusha
cmp
jnp
test
mov
nop
cmp
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
outsb
cmp
xchg
cmp
mov
mov
ret
cmp
jmp
repnz
adc
ds
ds
inc
ds
arpl
imul
xchg
mov
pushf
cmpsb
ds
ds
sarl
out
lock
ds
aas
sbb
xor
dec
aas
push
aas
pop
aas
insb
aas
jb
cmpl
xchg
aas
movsl
aas
lods
aas
mov
enter
lock
idivb
cld
aas
add
add
add
xor
xor
xor
xor
push
xor
xor
jle
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
dec
xor
xor
jnp
xorl
fwait
xor
xor
xor
xor
xor
xor
xor
data16
jg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
bound
outsl
xor
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
dec
xor
imul
xor
movsl
xor
xor
call
xor
adc
ss
ss
ss
ss
ss
jge
test
mov
cltd
mov
ss
fnsave
jecxz
lock
or
adc
aaa
sub
xor
aaa
aaa
cmp
pop
aaa
test
or
mov
or
dec
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
je
cmpl
mov
mov
cmp
out
repz
adc
and
sub
ds
ds
ds
jno
ja
test
fwait
ds
ds
ds
lock
adc
sbb
pop
aas
sub
cmp
inc
aas
dec
aas
add
add
add
xor
add
lds
into
shlb
fidivl
fidivs
call
aaa
adc
aaa
cs
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
addr16
insl
aaa
add
add
add
push
xor
jl
cld
xor
xor
or
or
adc
adc
sbb
sbb
and
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
test
mov
xor
xor
xor
xor
xor
xor
xor
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
data16
add
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
add
add
add
cmp
cmp
cmp
cmp
push
cmp
add
sbb
add
add
or
or
adc
adc
sbb
sbb
and
add
add
add
add
insb
cmp
je
js
jl
cmpb
cmp
add
add
clc
sahf
out
out
sub
jbe
and
add
xchg
add
dec
and
and
dec
jle
sub
stos
mul
scas
pop
adc
nop
imul
adc
mov
cmc
repnz
adc
and
mov
repz
insl
sub
ret
adc
cli
lret
inc
fisttps
jae
push
lds
arpl
outsb
or
cmp
je
mov
fsubrs
out
out
aad
mov
icebp
sahf
adc
sti
ret
jmp
pusha
push
xchg
sbbl
int3
frstor
push
bound
mov
lea
sbb
pushf
jne
push
push
outsb
leave
sbb
or
mov
xorl
daa
arpl
es
aad
lret
push
mov
push
jle
push
mov
lods
gs
or
jne
adc
inc
dec
pop
cs
icebp
lods
jp
xor
inc
out
xchg
push
push
adc
add
mov
cmp
lds
test
testb
hlt
shrl
fwait
adc
and
add
loop
sub
adc
jg
pushf
rcl
xor
xchg
jp
jle
adc
fidivl
add
pop
stos
subb
rcl
cmp
loope
bound
adc
loop
cmpl
jo
push
adc
pusha
addl
jnp
jae
lock
sub
mov
lods
ja
or
ret
sarb
or
int3
cmp
js
sti
testb
dec
outsb
into
adc
cld
inc
xor
icebp
stc
sbb
jns
imull
out
dec
sub
mov
sbb
fwait
add
out
push
lahf
pop
or
push
add
and
maskmovq
testl
mov
add
shl
clc
dec
or
xchg
push
mov
xor
out
push
sbb
call
adc
sti
jo
fstpl
shlb
mov
xchg
jb
push
ljmp
jbe
inc
push
pop
iret
jae
in
arpl
mov
mov
xor
adc
scas
xor
adc
dec
loop
inc
mov
lea
sub
and
jmp
xchg
dec
fcomps
jno
das
and
add
jge
das
test
scas
std
dec
dec
test
je
add
add
add
call
idiv
fidivs
dec
icebp
sub
add
mov
mov
test
jp
add
aas
push
pop
sarb
fmull
jno
pop
subl
lods
stos
fs
insb
push
add
in
mov
int
jae
std
push
dec
jno
fcmove
insb
fidivs
push
std
lret
div
jle
fildll
pop
push
iret
add
sub
mov
jo
inc
lods
repz
nop
das
ja
sbb
cmp
cmp
insb
sub
mov
lret
rcll
and
ret
fdivrs
xor
out
jp
push
pop
lret
mov
xchg
popa
popa
jle
fcomps
jge
das
and
adc
push
push
iret
scas
in
rorl
leave
iret
nop
inc
shrb
xchg
shrl
movsl
int
incl
pushf
test
into
xor
push
adc
repz
lods
dec
mov
lahf
dec
scas
push
out
repz
dec
icebp
mov
add
or
repnz
std
mov
dec
inc
xchg
aam
sub
xchg
jmp
ljmp
push
push
xor
es
and
jg
sub
das
cmpsl
mov
dec
mov
or
js
cwtl
sub
pmulhw
or
and
in
cli
in
cmpl
iret
inc
cmpsl
ret
repnz
lock
scas
out
sbbl
mov
lea
add
push
push
popa
jecxz
pop
jns
in
or
scas
xchg
xorb
or
sbb
jl
or
loop
pushf
lgs
lock
inc
push
mov
push
fnstsw
push
adc
pop
dec
jno
fsub
cmpsb
dec
xor
out
pop
inc
jg
cli
ret
ret
add
cmp
pop
or
cmp
mov
pushf
insl
rclb
in
cs
inc
mov
adc
push
push
add
jo
adc
out
pop
hlt
inc
fs
inc
jnp
jb
arpl
int3
dec
leave
dec
or
sub
xchg
out
popa
lret
adc
xchg
iret
pop
addb
mov
xchg
cmp
cwtl
mov
fmuls
and
lea
mov
ds
xchg
jmp
mov
test
in
in
shr
in
shll
lret
fidivrs
push
mov
rolb
scas
jle
add
mov
mov
mov
xor
mov
in
inc
es
adc
and
mov
aam
testb
bound
ret
aad
fnstenv
add
add
and
mov
subb
add
mov
xchg
fisttpl
adc
xchg
icebp
mov
mov
xchg
push
push
xor
push
ror
mov
das
out
jnp
or
rorb
lret
mov
fsubrs
inc
pop
insb
ss
out
inc
out
cmc
lcall
iret
mov
jl
fldenv
gs
jno
gs
jb
das
es
adc
je
dec
dec
sti
dec
mov
ret
pop
test
loop
lods
in
and
push
sub
mov
cmp
jge
ljmp
cmp
cwtl
test
cmc
mov
push
ret
inc
adc
jl
add
cli
leave
js
das
das
popl
pop
es
sub
mov
sub
push
fsub
ljmp
adc
fcmovnbe
adc
mov
xchg
fwait
jnp
mov
inc
add
pushf
jecxz
fsubrl
sbb
mov
cli
inc
sub
cmpsl
mov
sbb
fcomps
and
cmp
mov
cmp
cmp
aad
push
pop
inc
jbe
out
or
xlat
call
or
cmpsl
shlb
repz
ljmp
fstl
push
mov
xor
mov
cltd
and
iret
and
in
cmc
jno
mov
aas
adc
das
cld
mov
pusha
pop
daa
inc
or
outsb
icebp
dec
mov
cmp
or
sbb
mov
dec
adc
inc
xlat
addr16
out
int
in
mov
push
stos
leave
gs
mov
cmpsb
push
xor
cmp
mov
add
into
xchg
call
stc
mov
test
jle
fnsave
mov
mov
xor
push
mov
inc
push
lret
xor
lods
sub
xor
xchg
cs
inc
in
add
xor
lret
push
inc
pop
lret
roll
cmp
int
push
sahf
pop
adc
fcmovu
sbb
movsl
popf
mov
mov
in
or
andl
rolb
ds
mov
sahf
adc
ret
and
leave
sar
xchg
xchg
shrl
jns
jge
push
push
testl
pop
loope
ret
pop
and
stos
push
bound
add
adc
mov
pop
cmp
gs
jo
arpl
push
jae
in
dec
mov
dec
sub
add
add
add
popa
push
pop
jmp
jle
arpl
cwtl
test
add
inc
add
movsb
sbb
das
daa
and
jno
das
sub
aad
xchg
cs
aaa
pop
in
push
aaa
lock
or
notl
add
inc
repz
push
and
roll
out
push
xchg
mov
push
and
loope
outsl
add
sub
push
inc
xchg
mov
das
insl
sbb
and
addr16
ja
in
mov
sub
jnp
mov
dec
test
push
lea
insl
push
aam
sahf
movl
and
aas
xchg
cmpsl
and
cmp
dec
push
dec
sub
jl
rcll
scas
movsb
pop
divl
jg
xchg
or
test
xor
add
cli
fs
loope
push
sbbb
push
cld
out
movsl
jp
cltd
inc
dec
pop
sub
in
movsl
mov
lcall
in
lds
mov
inc
or
pop
jns
mov
pop
xchg
ficompl
xor
pop
lret
jg
fs
gs
jle
pusha
dec
cwtl
sbb
lcall
icebp
in
int3
sbb
cltd
pushf
push
fcmovnb
sbb
mov
jb
or
sbb
sbb
xchg
dec
movsb
jo
test
and
paddsw
repnz
and
mov
test
xchg
ljmp
cld
dec
cmp
xor
insl
jbe
in
inc
sub
cmp
jg
dec
fiaddl
xor
loopne
push
mov
int
sbb
xor
sub
jmp
push
lret
mov
pop
das
and
leave
or
xchg
ss
fwait
loop
mov
and
int3
mov
push
add
mov
mov
cmp
add
xor
mov
enter
ds
mov
pop
scas
pop
and
mov
mov
jb
pop
fiadds
adc
dec
add
jns
jp
fcmovbe
outsb
inc
arpl
fadds
pushf
inc
stc
sub
lock
insb
insl
imul
paddusw
cmpb
outsb
xor
pop
or
and
fnstcw
dec
and
lea
inc
sub
or
mov
add
inc
mov
pusha
dec
dec
idivb
push
sbb
xchg
orl
mov
mov
int
cli
jmp
fdivl
add
add
add
test
mov
and
arpl
add
mov
dec
jno
je
push
adc
lahf
pusha
movb
ds
scas
push
mov
push
xchg
adc
shrl
inc
mov
or
clc
add
xchg
dec
movsl
or
fmull
arpl
aad
mov
xor
mov
lds
push
sub
ljmp
and
shlb
cmp
pushf
xchg
xchg
pop
shl
test
mov
sub
mov
iret
loopew
jge
xchg
and
mov
loop
mov
lds
push
mov
pop
stos
imul
jecxz
pop
divl
or
jge
pop
les
adc
xchg
and
pop
imul
or
arpl
xor
xor
aam
out
xchg
push
loope
dec
mov
mov
call
es
inc
ja
dec
add
jno
fstpl
sub
mov
or
cld
popa
xchg
xchg
lcall
sbb
les
ret
jb
cmc
adc
ja
mov
jno
mov
add
int3
and
jge
nop
cwtl
inc
cwtl
movb
out
cmp
mov
xor
lcall
ss
dec
pop
adc
lret
or
dec
mov
icebp
repnz
and
xchg
sub
xor
js
mov
fcomip
jbe
rcr
adc
out
inc
pusha
cmpsb
sbb
out
xchg
xor
pop
push
push
cwtl
stos
jmp
dec
enter
push
or
dec
fucomi
cwtl
dec
adc
or
fwait
and
push
aaa
cli
cmp
pop
sbb
enter
pop
loop
pop
lcall
repnz
lea
pop
inc
mov
mov
pop
loope
xchg
push
or
jp
out
and
xchg
dec
xorl
es
push
jmp
psubq
stos
stos
add
mov
daa
dec
fwait
dec
aad
movsl
and
adc
enter
aaa
clc
sub
sbb
imul
cmp
pop
ret
push
lret
xor
cmp
aaa
xchg
inc
mov
dec
je
rep
cmc
jmp
dec
in
ret
insb
lods
roll
pop
lret
mov
pop
sub
jnp
movsb
or
or
daa
mov
les
ja
ja
ljmp
add
add
add
adc
aas
pop
push
and
lahf
add
add
add
lahf
inc
insb
jge
popf
push
dec
xchg
vdivps
sub
jo
push
lret
pop
add
mov
dec
pusha
cmp
push
cwtl
fildll
shrl
xlat
push
pop
lods
pop
lret
add
mov
xorb
or
ficoms
mov
add
in
fwait
shr
repz
xchg
sub
sbb
adc
test
lret
pop
loopne
arpl
ficoms
pop
insl
cmp
fnstenv
xchg
jnp
dec
ret
repz
cmpsl
js
pop
mov
hlt
lods
sbb
rol
inc
jb
mov
xchg
inc
sub
mov
aam
pop
aam
xchg
pop
hlt
jg,pt
sahf
iret
das
and
dec
push
in
pop
leave
lahf
ds
mov
bound
dec
lret
pop
cli
std
and
xor
push
adc
scas
and
mov
arpl
or
xor
in
inc
mov
aaa
repnz
inc
gs
out
loope
clc
push
ja
cmp
add
js
adc
lahf
cmp
sbb
es
scas
cmc
ret
mov
icebp
in
lret
ss
je
loopne
mov
ret
out
mov
add
data16
lods
xchg
repz
mov
mov
cmp
hlt
pop
push
add
rcl
fcoml
out
fdivs
mov
and
andl
lret
shlb
rorl
jp
fwait
cmpsb
adc
inc
aam
popf
test
jne
imul
inc
pop
aad
neg
test
ret
push
jg
stos
sbb
add
cmc
cmpl
aas
sahf
push
int
movsl
cmp
lahf
xor
push
in
stos
or
stc
jmp
movsl
cmp
mov
scas
xchg
inc
sbb
shl
pop
in
cmp
xchg
dec
pop
enter
xor
dec
ss
inc
stos
cmp
dec
int
mov
lock
or
enter
jo
and
push
sbb
insl
mov
pop
lahf
int3
insb
xor
negl
dec
into
adc
adc
das
orl
and
lock
jbe
sbb
xor
sub
mov
pop
test
in
xchg
mov
ficomps
fistps
xchg
movsl
sub
jne
insb
hlt
arpl
rcrb
outsl
ficoms
push
js
iret
mov
xor
and
roll
add
add
add
lea
stos
add
and
fadds
add
aas
rcrl
pop
js
stos
rcrb
lcall
adc
pop
outsb
pusha
sub
push
mov
add
test
ret
push
mov
pop
orl
shlb
repz
shrb
inc
push
dec
push
aad
je
fstpt
dec
in
shll
ljmp
or
dec
or
push
rcrb
mov
dec
lahf
fdivl
in
iret
cmp
mov
ds
fbld
sbb
mov
mov
ret
cli
fcompl
in
inc
lahf
pop
jge
xor
lock
mov
pop
nop
cld
adc
jae
dec
mov
or
pop
testb
dec
push
stos
loopne
inc
jmp
jns
xchg
orl
pop
stc
aad
mov
in
adc
xor
push
cmp
adcl
loop
and
test
pushf
and
rorl
and
sbb
push
cltd
dec
in
sbb
fdivs
dec
push
push
lahf
inc
aaa
in
pop
sub
shrl
mov
hlt
xor
mov
mov
aaa
fwait
bound
pusha
hlt
js
iret
loopne
jb
pop
lds
mov
mov
rol
ljmp
ss
fcmovnb
test
in
loope
adc
xchg
jbe
cmp
ds
mov
and
into
or
and
loopne
push
and
jmp
mov
mov
pop
xchg
mov
mov
ficomps
dec
and
cld
js
in
xlat
orb
or
pop
cmp
mov
je
ret
cmp
sub
in
adc
daa
mov
xor
mov
mov
mov
lret
rorl
incl
xchg
pop
aam
pop
adc
inc
shrb
or
mov
scas
dec
inc
bound
mov
or
ja
dec
and
pop
mov
js
dec
fneni(8087
sar
push
cltd
lods
dec
dec
rcll
mov
test
ljmp
fmulp
daa
push
sub
adc
or
andb
or
push
dec
inc
in
ds
fs
test
loope
cmp
push
xchg
dec
call
push
incb
andl
add
add
add
xchg
dec
jnp
sti
mov
xor
int
xor
int3
mov
add
mov
in
push
fnstsw
xchg
xchg
mov
fwait
insl
sub
inc
in
or
mov
rolb
fwait
jo
jge
cmp
inc
movsl
out
xlat
or
out
dec
sub
xchg
inc
in
push
gs
fdivrs
cld
movsl
mulb
lock
imul
add
jno
dec
jae
dec
push
sbb
or
shl
lahf
cmp
xchg
adc
scas
add
dec
test
test
inc
fistpl
movb
sub
sarl
roll
mov
adc
jo
scas
cmp
cwtl
jp
pop
repnz
dec
cmc
inc
sbb
int3
dec
testb
enter
sub
hlt
dec
iret
sbb
sub
push
ljmp
mov
outsl
iret
test
leave
dec
pop
lds
data16
rol
or
jae
or
scas
mov
jb
shll
and
pop
mov
dec
movsl
pop
je
outsl
mov
cmpsl
in
iret
sbb
and
push
cmp
test
sbb
mov
pop
inc
push
push
fstpl
dec
pop
rcl
xchg
add
xchg
stos
cmp
test
fcmovnbe
addb
outsl
and
xor
addr16
xor
mov
loope
dec
lret
pop
pushf
adc
jae
pop
mov
adc
aas
fists
xchg
stos
fcoms
mov
push
hlt
cmp
pop
pop
xor
mov
push
bound
push
enter
jl
pop
fidivrl
dec
pop
adc
pop
sbb
jo
mov
jmp
adc
nop
pop
jmp
int3
and
shlb
mov
pop
pop
fcoml
push
rcrb
push
rorl
outsb
call
repz
mov
gs
lock
cmp
js
dec
nop
or
popa
mov
mov
or
push
jp
jge
mov
leave
push
and
sbb
outsl
push
fstpl
xchg
add
adc
xchg
push
xlat
dec
and
mov
sub
pop
inc
pop
not
pop
xchg
jnp
and
ja
lret
stos
pop
jns
and
scas
std
into
rol
ja
push
jb
lods
into
popf
in
cli
dec
addr16
shlb
call
into
mov
out
incl
push
inc
xchg
sub
insl
aaa
iret
dec
jle
cld
dec
sub
adc
out
fisubs
lods
ja
add
add
add
mov
cli
cmp
stos
cmp
imul
fldl
add
dec
loopne
mov
xchg
roll
xchg
xchg
and
or
pop
add
and
cs
mov
xor
xlat
loopne
jae
fisubl
sub
ficoms
mov
das
mov
sub
lods
xchg
push
loopne
ss
outsb
mov
and
and
mov
push
lock
sbb
cmp
sbb
pop
sbb
in
mov
and
cmp
out
movsl
mov
mov
or
xor
sti
inc
cmp
fistps
cmc
sbb
push
jecxz
mov
test
add
repz
in
and
mov
arpl
or
movsl
std
loop
push
push
mov
jnp
push
cmpsl
push
ret
outsl
jle
je
mov
fwait
int
or
es
jae
sti
mov
fcmovbe
adc
int
lahf
inc
mov
pop
push
pop
sub
push
stos
orb
jp
add
mov
jmp
test
fildll
addr16
dec
lods
add
xchg
in
or
out
outsl
jg
or
call
addr16
loope
sub
sub
adc
dec
ja
pop
push
cmp
ret
jl
and
push
into
iret
or
cli
test
pop
pop
sbb
jp
or
lods
insb
xor
shl
test
mov
xchg
insl
icebp
outsb
or
mov
jne
add
jno
push
inc
dec
jle
xchg
pop
cmp
sti
clc
mov
repz
nop
mov
mov
and
push
jae
out
sbb
and
clc
pop
sbb
fisubl
cmp
shrl
mov
inc
xor
aas
push
inc
mov
add
iret
test
add
and
or
fnstenv
imul
cs
loopne
xlat
adc
cmpsb
dec
and
dec
ret
stc
mov
movsb
jae
pop
jno
addr16
in
sbb
mov
mov
ljmp
adc
xor
add
sub
jp
adc
mov
out
sub
mov
or
push
ljmp
mov
enter
jno
sbb
xchg
insb
dec
test
push
fmul
mov
jmp
and
pop
mov
pop
pop
fcomps
iret
jl
aaa
mov
mov
cld
cmp
cmpsl
inc
pop
push
roll
add
add
add
push
add
ja
xchg
cmc
pop
sub
inc
dec
leave
test
mov
stos
push
test
out
shll
cmc
pop
and
vpcmpgtd
mov
out
clc
inc
mov
pop
cmp
jp
push
scas
jge
in
daa
rorl
in
jg
jl
push
loopne
fcoml
xchg
call
mov
and
sub
xor
inc
or
push
ds
lea
cmp
add
repz
notb
pop
and
adc
push
mov
mov
add
leave
pop
outsb
pusha
push
jmp
mov
and
push
mov
mov
cmp
insb
or
add
sub
sbb
or
cli
pop
sbb
dec
xchg
es
mov
outsb
and
iret
fsubrl
daa
xor
dec
js
mov
loopne
sahf
movsb
or
mov
or
mov
push
data16
lds
addr16
push
add
dec
push
imul
mov
std
cmpsb
adcl
daa
lea
pop
mull
mov
xor
sub
aam
sub
cmp
mov
jp
fidivl
cmc
xchg
mov
mov
sub
ret
or
mov
in
outsl
pop
sbb
xor
adc
ja
xchg
dec
aad
jb
lahf
or
and
ret
fidivl
adc
mov
mov
test
dec
cmp
fs
sub
add
jp
mov
cmpsl
aam
add
and
mov
outsb
mov
divl
push
cld
test
out
fstpl
jno
push
cs
int
popf
pop
sbb
repz
push
in
mov
cmc
dec
fcompl
fstl
sti
mov
adc
mov
sbb
xchg
dec
sub
js
push
movsl
add
mov
shlb
jecxz
inc
ss
mov
iret
out
push
rol
pusha
clc
mov
inc
int3
add
cmp
enter
popf
xlat
xchg
loope
mov
jno
fwait
jge
add
mov
xor
jae
popf
jge
int
movsb
scas
xor
daa
cmp
push
mov
scas
xor
xchg
mov
cmc
imul
loop
fisttpl
jns
or
jecxz
jg
adc
loope
out
fimull
loope
dec
lea
test
out
add
imul
sbb
out
and
cmp
xor
addb
dec
and
add
add
sahf
ficoml
pop
fnstsw
jecxz
add
push
cmc
in
cmp
repz
xor
inc
cmp
ja
sub
aam
mov
and
lret
xchg
fisubrl
dec
aaa
movsb
mov
aad
repnz
testb
in
lock
mov
stos
pop
movsb
jg
scas
outsb
inc
adc
imul
sub
and
scas
mov
js
jo
jne
ret
mov
or
push
mov
cld
cmp
iret
adc
or
adc
adc
cli
cmp
clc
loopne
inc
lahf
jmp
push
push
call
mov
ret
and
jo
int
add
hlt
out
lea
pusha
add
push
push
jle
push
out
popa
sbb
mov
rorb
sbb
cmpsb
out
inc
mov
mov
int3
sbb
xchg
and
and
push
lcall
es
pop
mov
sbb
sbb
dec
jle
xchg
jb
fwait
push
mov
adcb
es
mov
shl
adc
mov
bound
ficoms
xor
pop
sbb
bound
sarb
push
mov
stos
jp
inc
push
xlat
push
insb
addr16
mov
cs
push
jge
std
pop
push
nop
stos
adc
mov
les
iret
cwtl
mov
lret
mov
xor
bound
push
pop
mov
dec
test
ss
lock
into
xchg
sub
call
rol
clc
mov
lock
repz
add
jnp
pop
sbb
outsl
sub
sub
mov
pop
and
inc
sahf
mov
clc
push
insb
daa
xchg
ret
inc
gs
xchg
test
fadds
je
fisubs
fisttpl
push
xchg
mov
pop
mov
in
xchg
cmpsl
mov
cs
outsb
dec
cltd
jecxz
data16
es
inc
std
cmp
mov
xor
or
nop
cmpsb
cmpsb
inc
fs
jbe
popf
cmp
inc
iret
shrb
push
xor
push
xchg
or
mov
sbb
ja
rolb
sub
sub
dec
nop
fcomps
loopne
pop
lock
push
orl
int
mov
adc
push
jmp
mov
daa
lahf
xchg
cwtl
jae
mov
lea
sub
add
xor
repnz
jge
call
mov
arpl
bound
sub
and
cmp
popa
movb
jb
add
add
add
mov
sahf
enter
mov
in
add
xor
movsb
xchg
push
adc
mov
pop
in
jne
lods
sub
insl
and
iret
xor
cmp
fdivrp
push
shll
je
ss
adc
xor
dec
and
dec
jmp
dec
mov
pop
mov
jg
xor
arpl
push
lods
adc
inc
notl
fisubrs
cmc
ss
dec
in
mov
popa
push
popa
dec
xor
mov
sbb
scas
pop
pop
adc
or
lret
imul
cmp
sbb
icebp
inc
jns
aam
mov
mov
jmp
rclb
push
adc
dec
and
cwtl
popa
xor
ret
test
dec
ficoml
adc
out
mov
mov
and
stc
ljmp
jle
dec
push
jnp
pop
pop
xchg
add
lds
mov
xor
sbb
into
rol
pop
xchg
dec
repnz
lcall
push
and
cmp
fidivrl
mov
mov
inc
or
jo
pop
sahf
xchg
lods
in
sbb
push
and
sub
lret
cmp
xor
xor
nop
insl
es
xor
test
imul
fisttpll
jg
pop
mov
add
push
int3
test
cmp
aas
jle
mov
mov
sbb
leave
mov
aas
jnp
mov
loop
arpl
je
rol
lcall
xchg
pop
mov
popf
push
dec
shl
pushf
cs
out
int3
xchg
or
mov
cmp
cmp
aas
push
nop
inc
xchg
sbb
fdivs
mov
inc
sbb
imul
mov
xlat
mov
ret
pop
mov
adc
xor
xchg
fiadds
gs
push
out
sub
sahf
test
inc
in
inc
leave
sbb
or
lret
or
push
ret
dec
mov
ret
icebp
cmp
pop
movsl
fbld
fisttpl
lret
and
add
pop
inc
leave
lds
notb
jg
test
inc
loopne
or
rol
lcall
setns
jle
fnstcw
and
int
and
inc
js
xchg
daa
in
in
mov
int
mov
je
divb
add
clc
test
push
adc
mov
ret
cmpsl
jns
mov
in
pop
cmp
adc
stos
mov
scas
popf
test
push
add
add
add
add
stc
out
inc
std
adc
imul
call
add
xor
pusha
jg
lods
and
xchg
xchg
les
pop
jns
cmp
fcmovu
dec
and
dec
fcoml
clc
jo
inc
imul
popf
ds
lock
fdivrs
call
stos
out
fdivrs
mov
insb
cld
or
mov
mov
add
movhps
insl
fucomi
stos
cmp
pop
jecxz
popf
lds
xchg
inc
mov
fnsetpm(287
mov
or
fs
jno
lods
xchg
jg
mov
popf
popa
pop
xchg
pop
gs
adc
inc
sub
inc
pop
popa
mov
mov
inc
scas
dec
iret
jmp
push
fsubs
xchg
into
out
loop
in
xchg
xor
add
jbe
mov
mov
fmul
push
test
clc
cmp
test
addr16
cmc
add
in
insl
xlat
mov
inc
test
into
push
rorl
test
pop
orl
nop
mov
pop
vmovntdq
clc
pop
jl
push
mov
jnp
mov
inc
adc
imul
mov
pop
sbb
setp
mov
mov
pop
mov
mov
fsubrs
pop
add
pop
jl
ljmp
sbb
cmp
fwait
mov
je
loop
dec
insb
test
push
out
adc
xor
push
shll
xor
pop
sbb
loopne
cmpb
leave
imul
out
jns
and
shlb
movsb
ja
cmpsb
popa
loop
rcl
pop
inc
testl
sbb
dec
push
es
aad
outsl
addr16
mov
mov
sbb
lcall
lahf
xor
push
sub
jmp
mov
push
mov
imull
pop
cmp
in
mov
retw
fwait
inc
mov
lret
mov
jae
mov
pop
jnp
sub
jp
test
xchg
jnp
pushf
out
or
jnp
cmpsl
jnp
sub
sbb
sub
add
xor
inc
push
imul
fwait
lds
je
les
sub
xchg
int3
pop
aam
dec
jge
mov
push
xchg
dec
ljmp
cs
test
adc
les
push
gs
cwtl
aad
test
pusha
pop
mov
insl
fdivr
sub
outsb
in
xchg
mov
xchg
cltd
add
add
add
mov
in
idiv
jg
cmc
dec
mov
jmp
add
loope
cmp
leave
rol
repnz
jge
fcompp
lcall
out
sub
cmpsl
outsl
lret
rolb
dec
dec
pop
loop
fdivr
repz
repz
xchg
test
mov
adc
inc
cmp
mov
and
pop
rcll
lret
mov
pop
push
loope
or
push
mov
shl
clc
sub
pusha
sti
pop
imul
cmp
insl
and
dec
je
adc
push
fistpl
mov
pop
mov
ret
test
notl
xor
pop
adc
stc
pushf
pop
jmp
xor
fdivrl
xor
scas
jb
js
mov
mov
cwtl
int3
clc
mov
xor
or
lock
fstl
cltd
aaa
loope
mov
add
mov
and
mov
jmp
lahf
adc
mov
cmp
push
and
imul
out
xchg
sub
int
dec
xor
push
into
cli
cs
aas
add
pusha
inc
jle
jo
out
bound
push
cmpsl
cmpl
dec
inc
or
pop
pop
inc
enter
pop
es
fstpt
cmp
aas
pop
mov
sub
shl
pusha
das
pushf
sbb
add
or
push
test
mov
int
cmp
lea
int3
push
mov
iret
sbb
xlat
test
jnp
aas
pop
cmpsb
cmp
outsl
pop
subl
ds
fistl
dec
sub
dec
xchg
or
sub
mov
int3
or
dec
cmp
sbb
es
sbb
cli
mov
mov
mov
jp
mov
aaa
mov
out
fmul
sub
add
out
xor
push
test
icebp
ret
xor
and
xor
repz
mov
push
pusha
test
cmc
loop
repz
cld
cli
pop
ret
shrb
cmp
inc
push
fistpll
and
sarl
xchg
push
dec
mov
dec
cmc
and
les
sbb
ja
xorb
mov
dec
mov
stos
outsl
pushf
sti
sahf
jmp
pop
or
sbb
inc
jns
sub
xor
ss
pop
add
shll
shrl
xlat
loopne
xchg
mov
xlat
xchg
adc
sbb
or
or
sahf
inc
cwtl
in
rorb
add
add
shr
and
aas
fcomip
out
sub
mov
dec
lock
xchg
mov
add
mov
jns
inc
add
add
or
in
and
daa
out
mov
dec
pop
clc
or
jmp
mov
sbb
mov
fistpl
sub
dec
inc
dec
add
and
cs
fdivs
or
jmp
out
ret
test
inc
ficoml
data16
mov
xchg
gs
popa
jae
js
sub
pop
addb
mov
inc
test
pop
xlat
rorb
repnz
scas
mov
fldt
leave
repnz
sbb
or
dec
adc
cltd
xlat
fldcw
pop
fwait
aam
and
pop
ret
xor
sub
or
mov
xchg
and
mov
imul
loope
push
loop
add
popa
ljmp
xor
out
addr16
outsb
scas
mov
mov
push
jb
xor
and
sub
add
pop
jno
das
lods
jle
xchg
lret
pop
out
es
into
inc
adc
sub
sbb
inc
nop
shll
pop
mov
xchg
jl
push
out
xchg
imul
fmull
jae
sbb
imul
xor
xor
pop
adc
dec
jb
sti
bswap
in
cwtl
js
ja
cli
push
or
gs
fsts
xchg
mov
or
aad
jo
cmp
jl
inc
xor
push
notl
insl
in
mov
std
dec
std
and
inc
xchg
ret
into
adc
jno
or
inc
push
sar
xchg
cmp
fimuls
push
xchg
test
add
jae
xchg
call
inc
or
xor
lret
outsl
out
rolb
dec
sbb
fldenv
dec
rorl
insb
xlat
mov
add
add
push
popa
bound
sub
mov
push
mov
push
mov
andb
or
jns
popf
orl
sbb
sub
mov
jl
dec
aaa
insb
fildl
mov
xor
dec
pop
cmpsb
popf
dec
stc
cmp
mov
add
int
pop
call
andl
or
std
testb
jae
or
mov
mov
test
sub
pop
add
shrb
sbb
ljmp
clc
mov
fildll
es
mov
or
pop
xchg
out
sbb
iret
sti
xchg
jno
add
add
add
push
ja
push
outsb
dec
out
fwait
push
add
mov
je
dec
pop
mov
imul
fdivrs
and
imul
mov
pop
jns
or
test
xchg
mov
outsb
nop
pop
jb
fistps
out
cltd
mov
data16
xor
jo
stos
and
js
push
iret
fxch
dec
mov
xor
adc
call
repz
jp
das
ja
or
mov
flds
jae
test
vpmaddubsw
out
mov
inc
lret
sub
xchg
aam
test
fs
lret
adc
lret
mov
out
and
mov
test
daa
addl
dec
cli
imul
and
lahf
cmp
test
inc
xor
outsb
push
push
fstl
adc
movsb
push
dec
pop
and
sub
and
je
pop
add
cmp
std
and
sub
mov
dec
or
mov
ret
jno
dec
mulb
iret
adc
fstps
inc
nop
mov
inc
data16
jnp
pop
iret
fucomp
or
sbb
ds
test
pop
ljmp
sub
cwtl
push
inc
xor
ret
mov
mov
mov
sub
or
mov
test
sub
test
lcall
mov
lcall
or
int
cmp
pusha
jle
sbb
push
pop
pop
stc
sar
repnz
sbb
add
lret
adc
push
jno
dec
cmp
fwait
aaa
gs
repz
mov
xlat
inc
mov
jp
pop
mov
sub
push
jg
dec
adc
xchg
rorb
mov
cmpsb
push
add
leave
jl
xor
outsl
inc
xchg
aam
mov
ss
fwait
xchg
sbb
push
and
mov
mov
pop
sub
loopne
push
fcmovnbe
pop
test
mov
imul
pop
pop
add
inc
push
cwtl
mov
jp
mov
clc
fsubrs
mov
xchg
and
les
xchg
aas
mov
pop
cmc
jg
popa
sbb
cmpsb
lcall
or
dec
push
xchg
dec
jno
fwait
cmpsb
mov
lock
lret
ret
mov
mov
xchg
sbb
repnz
sub
mov
jmp
push
xchg
jbe
test
mov
inc
xlat
mov
push
out
push
into
and
mov
aaa
xchg
mov
add
push
pop
mov
pop
dec
out
xor
cmp
repnz
mov
test
in
js
and
orb
rcr
jbe
jne
in
pop
nop
jbe
and
sub
mov
sub
enter
and
js
test
fmuls
inc
lcall
lea
mov
cmpsb
xor
and
cmp
loop
or
insb
cmp
loopne
clc
sub
cmp
rcrb
xor
dec
mov
dec
mov
std
dec
add
and
fwait
add
mov
mov
sub
dec
pop
or
dec
call
pop
lcall
jmp
add
xor
dec
pop
mov
mulb
out
xor
xchg
mov
lods
push
or
fsin
repz
test
cmp
lahf
push
push
in
add
shl
out
push
hlt
push
fs
vpunpcklbw
xchg
jle
push
sub
and
pop
xchg
hlt
xchg
mov
les
dec
dec
sarl
or
adc
xchg
sub
and
insl
sub
incl
stos
popf
jle
push
push
mov
jne
jb
pop
mov
lock
sarl
adc
in
dec
push
ss
leave
shll
mov
test
cwtl
adc
arpl
mov
cmp
dec
sbb
sub
out
mov
fdivrs
aas
inc
test
stos
jmp
lret
pop
mov
sub
stos
xor
cwtl
sub
mov
mov
daa
fnsave
sti
idivl
add
gs
fcomps
sub
sbb
pop
or
jle
xor
lods
cmp
fwait
xchg
pop
add
add
addr16
sbb
jp
pop
je
repnz
loop
mov
push
lock
shll
popa
fisttpl
hlt
mov
out
pop
sub
cld
mov
test
mov
mov
dec
inc
xor
xlat
adc
adc
imul
fistpl
mov
mov
rcll
mov
xor
pusha
add
push
rclb
xchg
inc
popf
push
aad
movsl
pop
lock
cwtl
popf
adcl
mov
cwtl
or
cmpsl
add
rol
mov
aaa
lret
jns
push
push
xchg
ja
mov
gs
dec
pop
fistps
or
cmpsl
hlt
pop
ror
pop
pop
outsb
addb
add
add
scas
ror
push
pop
mov
pop
inc
pop
mov
popf
cmc
add
mov
jbe
xchg
cmp
cmp
sub
mov
inc
shrb
rorb
and
pop
testb
int
sbb
push
push
push
push
cmc
push
daa
adc
fistl
sbbb
pop
push
shll
js
in
insl
sub
mov
inc
fs
enter
inc
fcoms
icebp
xchg
dec
cmp
xchg
inc
push
loopne
fs
std
repnz
push
or
subb
jecxz
aaa
fbstp
mov
mov
bound
rcl
mov
loopne
inc
pop
ds
inc
aam
add
imul
das
mov
arpl
mov
daa
sub
adcl
mov
mov
cs
fildll
mov
aas
popf
inc
jbe
push
inc
cwtl
cmp
ret
cmp
adc
xor
pop
jb
cmp
jp
leave
aad
test
inc
inc
sbb
pushf
dec
shlb
outsl
ret
aad
sti
sub
xor
push
sbb
rol
shrl
jp
loopne
roll
test
sub
mov
fdivl
sahf
shrb
clc
pop
jge
sub
inc
xor
xchg
inc
pop
lea
jge
scas
into
decb
repz
lds
lea
int
insb
lret
cmp
in
mov
pushf
sub
ljmp
sbb
push
in
sbb
xor
xlat
pop
lret
movb
pop
adc
arpl
scas
fidivl
clc
xchg
pop
leave
movsb
mov
aas
fadds
das
cmp
push
cmpsl
jge
or
mov
stos
clc
xchg
cmpsb
lea
dec
loop
loop
sbb
xor
lahf
fadd
fcompl
repnz
out
push
dec
mov
xor
pop
jne
pop
shrb
leave
pop
fstl
adc
call
sub
sbb
jl
mov
jo
cmp
test
test
push
mov
mov
outsl
test
fcomip
std
pop
insl
fcmovnb
jne
cmp
ss
cmp
enter
jmp
aas
jb
xchg
mov
or
int
dec
inc
and
popa
ret
std
xchg
and
inc
dec
fwait
xor
cmp
and
pop
test
adc
bound
sbb
popf
mov
popf
and
nop
adc
xor
lahf
dec
xlat
adc
push
push
dec
mov
add
add
add
xor
loope
icebp
mov
fidivrl
mov
add
mov
stc
inc
jne
popa
xor
lods
add
or
aam
push
iret
and
dec
insb
fimuls
jb
lods
cmpsl
sbb
sbb
push
mov
dec
je
sub
icebp
and
pop
and
jns
jns
hlt
out
pop
inc
xorb
adc
and
scas
and
je
int3
adc
add
in
les
sub
leave
adc
test
mov
rcr
mov
roll
jnp
in
push
inc
xor
les
cmpl
fdivrp
daa
adc
dec
push
fstpl
lock
pop
adc
lret
mov
and
or
into
jo
cmp
pop
std
daa
add
jnp
jge
aas
mov
filds
dec
in
inc
dec
push
cli
jp
xchg
lds
push
pop
sbb
mov
sbbb
fsts
fisttpll
sbb
loopne
orb
imul
ss
push
sub
movsl
insb
cli
ja
cmp
inc
popf
shl
xchg
shl
ljmp
cmp
mov
inc
xchg
xchg
pop
or
out
loope
mov
aam
xchg
pop
adc
or
enter
xor
sub
repz
imul
cmpsl
xchg
test
sub
xchg
movsb
fidivrs
out
xchg
movsl
lock
scas
cmp
xchg
stos
ds
add
xchg
mov
rorl
jge
cmp
and
mov
lds
push
and
flds
adc
loopne
add
cltd
pop
xchg
cmp
pop
lahf
xlat
sti
jns
push
das
xor
test
cmp
loopne
cmp
hlt
out
lock
fstl
sub
add
call
dec
xchg
ljmp
sub
fistpl
add
rorl
adc
or
and
nop
int
rclb
add
shl
mov
push
mov
cmpsl
aam
pushl
and
ret
lahf
or
mov
adcb
cltd
jns
sbb
mov
lods
cwtl
in
mov
out
insl
movsb
jle
jo
nop
cmc
xchg
sbb
daa
push
jg
or
out
and
or
test
or
add
sti
xor
aam
das
fstpt
pop
dec
lahf
cltd
in
and
fildll
fsubs
add
add
add
out
xchg
icebp
mov
out
jmp
mov
daa
loope
add
mov
xchg
cmpsl
sub
jp
aas
mov
incb
inc
jb
shl
lcall
call
fadd
mov
pop
aam
sbb
mov
lcall
ss
mov
adc
arpl
mov
xor
add
dec
mov
lret
orl
adc
sbb
loope
mov
movsb
dec
push
rclb
stc
aad
aad
or
cmp
scas
inc
mov
push
fimull
outsl
pop
insb
pop
adc
ret
xchg
push
mov
inc
fs
xor
add
jle
xchg
adc
std
xor
push
ds
push
xchg
cmpsl
sub
push
cld
inc
not
or
xor
out
ds
mov
jbe
add
notb
sub
mov
mov
out
jns
cmpsb
outsb
xor
mov
bnd
das
jb
popf
mov
lret
dec
xchg
xchg
aas
pop
inc
sahf
cld
push
cwtl
xchg
nop
jbe
out
jmp
xchg
scas
xorl
sub
pusha
sti
push
mov
jl
sahf
mov
loopne
imul
dec
push
aaa
movsb
and
cmp
jb
les
fidivrl
dec
jg
aam
test
and
push
out
jp
and
cld
mov
jnp
or
cmpsl
ret
xor
addb
jno
mov
insb
out
xor
mov
and
jg
imul
loop
cmp
ss
nop
push
loop
icebp
les
shlb
pop
xor
xchg
xchg
xor
loop
loop
lock
inc
push
lock
rolb
iret
pop
adc
add
icebp
popa
gs
xchg
out
xchg
push
movsb
les
clc
ljmp
jle,pt
ja
rep
es
hlt
pop
frstor
lahf
mov
cmp
mov
or
sub
fidivs
cld
mov
cmp
sbb
scas
cltd
cs
cmc
sub
fcoms
jg
les
in
stos
xor
and
pop
jg
imul
inc
sbb
cwtl
xchg
or
lods
popa
jno
or
mov
inc
or
clc
adc
fidivs
stos
and
shlb
les
in
jp
and
inc
sub
xlat
pop
test
test
icebp
ja
push
and
add
xchg
lcall
and
and
sub
repnz
fwait
push
gs
sub
or
add
add
add
xlat
mov
stc
cltd
adc
or
std
add
mov
mov
push
ds
ret
fwait
movsl
imul
fisttpll
jne
add
push
sbb
stos
mov
and
jge
cs
and
sarl
mov
cmp
mov
movsb
call
xchg
outsb
xorl
mov
cwtl
out
push
jbe
pop
jmp
xor
dec
mov
jp
push
in
fmull
hlt
ret
jmp
xor
sbb
xorps
les
shll
jae
notb
adc
cmc
int
and
cmp
inc
mov
lock
loope
test
rorl
fstl
pop
or
jecxz
lock
xchg
adc
test
mov
push
sbb
sbb
mov
xchg
in
jb
js
mov
repnz
dec
stos
mov
insl
fsts
sub
sub
or
xchg
jno
jl
xchg
bound
and
icebp
cltd
add
ret
call
jne
pmaxsw
je
adc
in
mov
sub
aaa
pop
add
sbb
xlat
stc
push
leave
and
xor
push
negb
movsb
lret
or
ja
test
xor
movnti
mov
and
mov
outsl
cmc
or
jb
mov
and
xchg
lods
sbb
lahf
mov
push
mov
fwait
mov
pushf
adc
loope
test
pop
xchg
inc
mov
mov
inc
adc
lock
out
mov
and
in
sbb
xchg
cli
mov
repnz
push
and
xchg
add
add
ljmp
mov
ljmp
xor
inc
jae
or
dec
jno
sarb
jne
pop
or
mov
out
inc
sub
rcll
in
cmp
inc
mov
mov
and
mov
ret
orb
nop
sub
sub
mov
je
cmp
or
mov
xor
js
mov
inc
mov
div
out
or
sti
int3
push
mov
aad
mov
bound
mov
xor
mov
mov
ret
push
inc
loopne
xchg
sub
mov
push
stos
loope
lcall
shrd
fs
sbb
add
mov
push
sti
cli
add
leave
jbe
cmp
add
add
and
repz
or
fldt
jge
or
mov
xor
mov
xlat
sbb
mov
inc
jmp
dec
cwtl
and
int
and
cltd
and
notrack
or
lcall
sti
pushf
imul
popf
sbb
out
sbb
out
push
cmp
sub
mov
sub
mov
popa
and
int3
mov
mov
insb
stos
stos
or
lea
xchg
inc
out
lds
fsubrp
cmp
xor
es
es
repz
nop
lahf
inc
adc
enter
push
call
and
lcall
in
loope
lock
pop
movsb
jbe
mul
adc
mov
fmuls
out
push
inc
mov
aas
mov
and
or
mov
rcr
push
push
push
leave
cmpsl
aam
mov
adc
and
pop
cmp
add
es
mulb
add
popf
and
xchg
or
test
jae
and
insb
das
andb
dec
adc
repz
ret
call
mov
add
shrl
mov
cltd
jnp
cmpsb
xchg
pop
sbb
jbe
jl
pop
mov
adc
mov
out
mov
adc
cltd
jne
mov
loop
fnstenv
test
gs
shrb
inc
push
outsb
outsb
mov
out
fisubrl
gs
in
adcl
lahf
divb
lds
test
mov
addr16
sub
dec
ret
dec
das
inc
bound
adcl
or
or
mov
popf
add
std
mov
rcll
add
idivb
out
fiaddl
fisubl
xchg
adcb
fnstcw
pop
in
pop
popf
repnz
adc
jmp
inc
lds
inc
sahf
xchg
scas
test
jnp
sub
out
cmp
ss
mov
scas
rol
sub
repnz
inc
fcmovnbe
stc
dec
cs
das
js
push
daa
int
cmpsb
rolb
incb
inc
cmp
sub
ds
mov
in
ss
shrb
loope
cmp
shlb
sbb
cmovs
ss
adc
divb
mov
xor
adc
mov
push
loop
sbb
in
mov
jae
jnp
loop
mov
mov
push
fs
ficomps
sbb
mov
pop
xor
add
add
add
jbe
dec
jbe
ja
sub
loope
stos
xchg
jb
movl
add
or
jbe
rcll
or
mov
das
scas
pop
adcb
outsl
data16
.byte
xchg
popf
