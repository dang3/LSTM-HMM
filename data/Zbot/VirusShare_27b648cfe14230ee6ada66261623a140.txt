push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
pop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
shlb
pop
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
aaa
inc
xor
mov
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
ret
or
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
add
and
add
or
add
int3
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
call
and
add
add
mov
and
add
add
push
and
add
and
add
add
add
and
add
add
bound
add
loop
add
push
and
add
and
add
and
add
and
add
add
mulb
add
add
add
sbb
add
sub
add
add
xor
add
add
add
pusha
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jo
add
movsb
and
add
add
and
add
or
add
int3
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
call
and
add
add
mov
and
add
add
push
and
add
and
add
add
add
and
add
add
bound
add
loop
add
push
and
add
and
add
and
add
and
add
add
mulb
add
add
add
sbb
add
sub
add
add
xor
add
add
add
pusha
and
add
add
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
dec
outsl
arpl
inc
insb
popa
addr16
add
je
inc
jbe
outsb
je
add
call
inc
imul
bound
gs
add
push
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
roll
dec
gs
jo
jb
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
addl
jb
popa
je
inc
imul
jns
add
add
gs
outsl
jbe
inc
imul
jns
add
xchg
add
je
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
push
gs
imul
aad
inc
imul
add
push
jb
jbe
je
push
jb
imul
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
push
push
je
imul
inc
add
repnz
imul
jb
je
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
int
dec
outsl
popa
fs
jne
jae
jb
add
ja
jo
imul
pop
dec
jae
outsl
outsl
insl
gs
xchg
inc
gs
imul
js
push
add
mov
inc
imul
dec
gs
popa
addr16
add
xchg
push
push
gs
jae
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
pop
dec
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
jnp
push
gs
outsl
arpl
add
cltd
push
inc
gs
insb
addr16
jb
arpl
push
push
inc
push
xor
cs
insb
add
add
inc
popa
outsb
arpl
add
add
dec
inc
jb
outsl
jb
add
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
imul
arpl
push
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
jae
shll
scas
add
xchg
jbe
rcrl
jb
out
popa
mov
les
bound
xor
or
push
cmp
adc
jl
lock
ss
pop
pusha
jle
jnp
loopne
icebp
mov
insl
cmpsb
fucomp
aad
fisubrl
pop
push
int3
sahf
shl
icebp
push
jp
and
sub
ss
pop
cmc
in
mov
daa
adc
mov
cmp
push
add
lar
mov
xor
mov
add
fadds
push
dec
sub
aad
movl
in
movsl
dec
mov
dec
mov
mov
fnstcw
inc
popa
pop
push
mov
jp
xor
idivl
mov
fsubs
sbb
fsubrs
add
jnp
les
push
aad
push
scas
lcall
lods
xor
sub
je
mov
or
ret
and
or
jne
mov
ds
jmp
fs
out
test
in
aas
push
jle
daa
add
lcall
rorl
jnp
cmp
roll
mov
mov
dec
aam
out
mov
mov
ljmp
or
nop
or
sbb
cmc
sub
test
jnp
inc
or
push
push
mov
xchg
push
inc
aas
push
adcl
xchg
enter
test
imul
cli
push
sti
sbb
and
gs
push
arpl
gs
js
test
inc
sub
gs
jno
dec
aad
jg
data16
scas
inc
push
push
mov
jmp
shll
mov
mov
sub
adc
out
cmpb
imul
adc
popa
push
or
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jnp
jl
lods
lods
lods
add
cmpsl
push
mov
mov
mov
ret
ret
stos
leave
lret
lret
int3
into
rcl
in
rcl
shl
rcl
shl
int3
int3
into
hlt
enter
mov
in
mov
mov
lods
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
leave
lret
lret
not
rcl
cld
xlat
fdivr
fcom
fcom
rcl
sar
int
int
aam
dec
iret
sar
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
lret
lret
ror
aad
fcom
xlat
call
xlat
xlat
call
aam
dec
into
into
dec
into
int
aam
dec
int
inc
rol
mov
mov
lods
std
cmpsl
cmpsl
cmpsb
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
enter
int
call
rcl
call
xlat
fdivr
fdivr
aam
dec
int
dec
leave
leave
dec
int
inc
mov
mov
mov
mov
cmpsl
test
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
imul
pop
pop
pop
fs
push
push
sbb
prefetch
push
sbb
xor
aaa
ss
cmp
cmp
and
and
pop
push
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
sarb
leave
enter
rcl
call
aam
call
aad
dec
rcl
dec
enter
mov
mov
mov
ljmp
movsb
mov
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jle
jg
jg
jo
jno
bound
mov
cmp
cmp
mov
outsl
outsb
outsl
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
dec
leave
lret
enter
mov
mov
lods
lods
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
xchg
fwait
lcall
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
pusha
lea
incb
jnp
idivb
jp
jo
outsl
out
push
data16
jae
jle
jge
js
js
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
xchg
incl
addl
xchg
xchg
lahf
mov
mov
mov
js
jp
cs
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
sahf
fwait
sahf
in
mov
mov
addb
decb
xchg
loope
jb
enter
mov
addb
xchg
push
cmp
ss
jge
cmp
movsb
mov
test
stos
stos
stos
sti
stos
lods
stos
stos
stos
lods
test
test
std
lcall
decl
jge
jp
js
jl
jp
xchg
xchg
movsb
mov
scas
sti
mov
mov
mov
mov
mov
lods
scas
stos
test
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
cltd
cltd
cltd
fistps
lcall
mov
mov
mov
mov
xchg
lcall
cmpsb
movsl
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
test
add
adc
lods
call
lcall
incl
mov
xchg
xchg
xchg
pushf
pushf
sahf
std
mov
mov
xchg
in
nop
xchg
xchg
in
xchg
push
jne
or
add
or
inc
es
daa
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
xchg
std
mov
call
lahf
sahf
jmp
test
scas
pushl
mov
stos
std
rolb
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
popf
cwtl
pushf
decl
mov
decl
nop
xchg
xchg
xchg
xchg
popf
popf
pushf
movsl
movsl
movsl
stos
test
movsb
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
jb
mov
jge
test
mov
mov
xchg
testl
lea
jmp
mov
mov
pop
mov
xor
jbe
mov
movsb
mov
mov
stos
lods
mov
mov
add
mov
add
pusha
adc
mov
lcall
lea
call
xchg
xchg
call
xchg
cwtl
lcall
lahf
lahf
sahf
movsb
movsb
mov
stc
cwtl
lcall
mov
xchg
aad
xchg
cltd
in
xchg
xchg
out
mov
xchg
stc
xchg
xchg
std
xchg
jb
fwait
imul
ljmp
aaa
jns
mov
jb
mov
outsl
ljmp
adc
lods
or
lods
or
pushl
mov
mov
pushf
movsl
movsb
movsl
and
add
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
fwait
cltd
lcall
lahf
lcall
cltd
call
xchg
xchg
xchg
xchg
call
xchg
fwait
cld
xchg
xchg
sahf
stc
mov
xchg
pushf
cld
popf
xchg
xchg
push
xchg
push
jg
cwtl
dec
js
cltd
cmp
fwait
sub
sahf
and
mov
adc
ljmp
packuswb
lods
adc
lods
adc
mov
imul
adc
pushl
inc
jg
mov
mov
lods
scas
movsb
movsl
movsb
sub
movsb
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
pushf
call
sahf
popf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
decl
ja
cltd
jo
lcall
call
cs
decl
adc
nop
or
call
add
lcall
jmp
sbb
mov
insl
pushl
jo
mov
and
mov
and
inc
test
les
cli
scas
lods
scas
mov
sahf
lahf
lahf
add
add
add
add
mov
lods
add
pop
adc
lods
mov
shlb
pushf
sahf
popf
jmp
cmpsb
cmpsl
jmp
stos
stos
ljmp
lcall
mov
decl
cmp
mov
arpl
mov
pop
incl
add
push
incl
add
nop
add
xchg
add
lcall
ljmp
push
jo
mov
jne
mov
sub
shrl
ret
inc
sub
cmp
movl
inc
mov
scas
lret
movsl
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
stos
stos
pushl
lods
lods
jmp
jo
decl
push
push
incl
pop
push
incl
add
test
push
incl
push
decl
add
xchg
add
lcall
jmp
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
mov
mov
mov
cmpsb
cmpsb
ljmp
mov
pushl
mov
pushl
stos
lods
lcall
and
push
decl
push
incl
or
test
incl
add
popl
push
call
pop
jmp
add
lods
add
jo
ret
dec
inc
dec
inc
mov
roll
call
inc
call
dec
xchg
call
dec
xchg
fisttpll
fsts
call
xchg
std
mov
mov
mov
sahf
sahf
or
add
add
add
add
dec
dec
adc
jnp
movsl
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
outsb
decl
sbb
call
push
pop
decl
push
decl
push
call
add
mov
add
test
pop
fs
mov
dec
mov
push
xchg
call
push
cltd
fistl
fistpl
fists
fists
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
cmpsl
cmpsl
jne
lahf
lahf
or
xchg
xchg
xchg
add
adc
jns
sahf
lcall
lahf
fwait
popf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
call
call
or
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
fldenv
jmp
movsb
jmp
movsb
jmp
cmpsb
jmp
cmpsb
call
push
jmp
push
mov
into
mov
mov
mov
lahf
sahf
add
inc
inc
adc
jp
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
cltd
xor
cltd
xor
xchg
sub
cwtl
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
movd
rolb
frstor
jmp
jo
jmp
outsl
lods
call
je
jmp
scas
in
jne
out
jbe
in
je
in
jae
jmp
mov
mov
cmpsb
test
mov
mov
add
add
add
jle
jle
cmp
imul
lea
popf
pushf
fwait
pushl
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
mov
cmp
xor
fwait
push
callw
add
sahf
add
movsl
add
stos
add
mov
popa
pushl
add
enter
fistl
in
mov
ljmp
in
cmpl
push
test
hlt
test
ljmp
inc
mov
stos
cmpsl
sahf
popf
sahf
daa
sahf
lahf
lahf
add
add
add
popa
add
aaa
cmp
pop
pusha
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
outsb
mov
fwait
cmp
mov
inc
jle
mov
pop
call
add
add
add
lods
add
mov
data16
mov
add
shll
mov
in
mov
push
mov
push
xchg
sar
nop
ret
push
xchg
ret
push
xchg
ret
stc
xchg
push
mov
out
pop
fidivl
clc
lods
lods
test
xor
popf
add
add
add
inc
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
ret
mov
jl
lcall
cmp
movsl
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
leave
add
mov
out
mov
in
xchg
ret
push
lcall
repnz
cmc
pushf
enter
lret
lahf
into
cld
popf
int3
sti
lcall
loopne
int3
dec
enter
mov
lahf
lahf
sahf
aas
nop
nop
popl
lcall
add
add
xor
or
cmp
outsb
push
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
ret
inc
mov
mov
lcall
push
xchg
scas
dec
xchg
movsb
sub
cltd
or
popf
add
movsb
add
lods
add
mov
arpl
mov
add
movl
jne
loopne
xchg
out
mov
push
cmpsb
int
cmc
movsl
int3
push
cmpsb
into
cld
test
cld
movsl
sar
sti
test
stos
iret
std
test
iret
push
lahf
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
lcall
xor
add
sub
or
inc
bound
pop
xlat
je
jo
mov
sarl
mov
ret
vpaddd
leave
leave
inc
rol
mov
cmpsl
jmp
push
mov
scas
dec
test
mov
add
mov
add
mov
mov
add
into
add
xlat
add
ficoms
in
pop
cmpsb
push
popf
leave
cld
lods
sar
sti
mov
sti
scas
aad
cld
mov
mov
std
mov
std
mov
cld
mov
mov
cld
mov
push
movsb
jmp
mov
call
leave
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
push
add
dec
dec
outsb
outsb
outsl
mov
mov
aad
fsubr
aad
fdiv
rcl
sar
lret
dec
lret
lret
dec
lret
mov
mov
scas
jmp
push
mov
lods
cmp
arpl
mov
add
mov
fs
mov
add
roll
jo
add
filds
jne
ljmp
cli
lods
aad
cld
mov
fcos
cld
mov
mov
fdivr
cld
mov
xlat
inc
mov
int
out
call
lret
mov
lahf
mov
or
add
add
xor
xor
add
or
enter
jecxz
pop
call
out
test
in
leave
fsub
fcmovu
fsqrt
aam
std
int
into
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
add
faddl
jbe
in
jbe
in
xor
cld
mov
loope
inc
loopne
inc
loope
inc
std
dec
loopne
inc
dec
std
enter
lret
loopne
cli
mov
leave
call
lret
mov
mov
xchg
adc
add
add
incb
std
std
std
add
incb
repz
cmc
or
in
in
pop
in
out
in
sub
in
in
dec
call
ljmp
jecxz
out
fucomp
ret
stc
lods
outsl
xchg
cmpsl
cmp
movsl
adc
pop
ljmp
add
mov
add
int
outsb
call
add
loopne
js
ljmp
sti
mov
jecxz
std
lret
dec
out
std
int
dec
jecxz
std
int3
loop
std
int3
loopne
std
shl
dec
in
call
in
shl
sti
in
mov
xlat
inc
test
mov
xchg
xchg
add
add
add
std
add
std
add
idiv
add
hlt
lock
repz
out
icebp
lock
in
lock
in
out
pop
fsubp
loopne
les
xchg
sti
mov
pop
pop
jmp
pusha
pushl
add
movl
jo
fildl
je
in
jnp
in
push
pop
test
cld
iret
in
dec
jecxz
shr
call
call
std
aad
std
xlat
call
fldl2t
fucomi
fucomi
shl
push
aam
in
fcos
lret
lret
lret
repz
xchg
xchg
and
cwtl
xchg
add
sti
add
testl
repz
or
shlb
sarb
cltd
sbb
lahf
add
test
pop
ljmp
add
ret
dec
add
add
fldl
jbe
out
ja
in
sbb
sti
std
xlat
call
fldpi
std
fucomi
std
fsubr
fucomp
fucomi
std
loopne
std
fsubrp
loopne
std
shl
push
aad
call
iret
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsb
outsb
add
add
add
loop
add
mov
xchg
stos
jge
repnz
and
sahf
add
cmpsb
add
mov
popa
mov
add
into
add
aad
jae
fiadds
jae
jmp
sub
cld
shr
fcomip
fsubr
std
call
call
aam
cld
shl
cli
iret
loopne
stc
int
stc
int
push
ret
out
mov
fcos
xlat
xlat
xlat
sti
mov
mov
fwait
fwait
fwait
cmp
fwait
add
xlat
add
leave
adc
scas
xchg
lcall
add
mov
mov
add
iret
add
fadds
jae
loope
jp
jmp
ss
cld
xchg
cli
lret
sti
lret
sti
clc
mov
sar
repz
sar
lock
int
call
mov
sar
ljmp
imul
fsub
cmc
fsubp
fucomip
mov
mov
xchg
add
add
add
into
int
mov
rol
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
dec
or
rorl
je
fsts
jns
loopne
cmp
inc
xchg
jmp
mov
call
mov
std
loope
cld
fbstp
neg
mov
leave
ljmp
rcr
aad
loope
fcmovb
call
in
test
in
out
popf
call
leave
lret
push
lods
lods
lods
adc
test
test
lahf
mov
roll
sahf
lods
aam
dec
jg
sahf
sbb
test
imul
es
mov
jns
mov
inc
xchg
les
stc
lret
gs
test
mov
out
mov
mov
enter
int
rol
int
aad
shlb
rcl
jg
fcmovnu
jb
loopne
gs
in
out
out
ljmp
sub
cmc
mull
icebp
lock
fstp
or
mov
int
mov
add
mov
mov
mov
les
push
lock
jbe
ljmp
mov
sarb
test
mov
mov
cmpsl
mov
mov
leave
int3
jp
int
addr16
iret
push
rcl
rorl
xlat
xlat
inc
rcl
aad
fcmovnu
daa
xlat
sbb
adc
jecxz
push
in
call
repnz
add
cld
testb
std
std
add
std
std
add
std
incb
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
les
mov
daa
int3
ror
and
aad
sbb
rcll
iret
aam
or
xlat
push
rcr
fadds
fcmovnu
add
add
jecxz
add
jmp
add
aad
std
std
add
mov
add
ret
ret
sub
mov
mov
push
ret
or
mov
add
int3
lret
aad
add
xlat
aad
rcl
add
fcom
add
fadds
fcmovnu
loopne
aam
add
loope
add
fstp
add
out
add
repnz
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
ret
mov
mov
mov
ja
stos
stos
dec
test
test
xchg
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
enter
iret
jmp
aam
cmc
rcl
sar
iret
iret
iret
cli
int3
lret
int
int3
lret
lret
hlt
mov
mov
iret
stos
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
cld
iret
iret
sar
aad
call
aad
ror
sar
int
int
lret
mov
mov
lods
icebp
cwtl
cwtl
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
jne
jae
jae
data16
dec
inc
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
call
rcl
call
rcl
dec
lret
mov
inc
mov
mov
stos
stos
stos
popf
popf
popf
xchg
xchg
xchg
jmp
jo
xchg
push
push
adc
xor
add
add
add
add
addl
test
imul
pop
pop
pop
movsb
push
push
push
stos
push
insb
insb
push
pop
pop
cmp
cmp
pop
jno
jno
scas
scas
scas
pop
mov
mov
mov
mov
inc
ret
inc
mov
mov
ljmp
fwait
fwait
call
xchg
lcall
xchg
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
cltd
cltd
cltd
add
pushf
xchg
cltd
fcoml
addl
jmp
jp
sarb
jns
jp
jp
je
jb
push
push
push
cmp
aaa
sahf
popf
pushf
mov
scas
scas
rep
scas
scas
sti
scas
scas
scas
std
test
popf
popf
call
xchg
call
mov
lods
jmp
lods
lods
leave
cmpsb
movsl
cmpsb
cltd
jae
je
adc
adc
add
add
add
add
outsl
outsl
outsb
pop
xchg
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
outsb
orl
lcall
mov
call
popf
sahf
ljmp
test
mov
mov
mov
xlat
cmpsl
mov
addb
add
add
add
add
pop
or
lods
mov
cmpsl
sahf
movsl
decl
mov
lcall
popf
sahf
sti
lahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
outsl
outsl
xchg
subl
nop
xchg
lock
mov
lcall
pushf
pushl
jo
mov
mov
jl
mov
scas
stos
insl
stos
stos
test
add
add
add
pusha
or
mov
in
movsb
cmpsl
call
xchg
xchg
call
cltd
cltd
lcall
popf
sahf
popf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
cmp
dec
jnp
movsl
inc
js
scas
aaa
jbe
mov
jb
mov
outsl
pushl
sbb
mov
lods
mov
scas
mov
jle
mov
add
add
add
pop
pusha
pop
or
mov
call
popf
sahf
jmp
mov
xchg
decl
addl
xchg
jno
cld
cwtl
pusha
test
xchg
dec
js
xchg
cmp
xchg
sub
xchg
sbb
cltd
adc
mov
pop
push
pushl
sbb
mov
and
pop
nop
mov
lods
lods
xchg
popf
popf
popf
adc
add
add
pop
pop
pop
or
lods
mov
test
lahf
mov
ljmp
test
cltd
decl
cmp
mov
decl
adc
test
pop
decl
add
xchg
add
popf
add
cmpsl
or
pushl
sub
mov
xor
enter
leave
xor
xchg
inc
test
mov
test
cmpsl
sbb
add
add
pusha
popa
pusha
or
cmpsb
test
test
cmpsl
ljmp
scas
scas
pushl
mov
jmp
jno
mov
pop
decl
or
add
decl
add
xchg
add
lahf
add
add
mov
outsb
inc
aaa
cmp
inc
mov
iret
inc
call
inc
nop
call
inc
nop
fimull
call
arpl
stc
mov
mov
movsb
movsl
movsl
daa
std
incl
add
add
pop
pusha
pusha
or
lahf
mov
ljmp
mov
mov
mov
test
call
sbb
push
pop
decl
add
xchg
add
lahf
add
add
lods
add
mov
dec
xchg
fcomps
ficompl
jmp
pop
sahf
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
movsl
xor
addb
add
add
dec
pop
jle
jl
pushf
xchg
lcall
scas
mov
mov
mov
mov
mov
mov
sahf
fs
xchg
sub
lcall
and
call
push
lcall
add
mov
fs
mov
xor
fisubl
jmp
insb
test
in
stos
jmp
jb
in
jae
jmp
test
mov
test
test
add
add
add
dec
pop
outsb
outsb
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jbe
lcall
ja
pushf
sub
xchg
or
lcall
ljmp
add
ret
or
call
inc
xchg
jmp
js
ljmp
out
test
push
xchg
fldenv
mov
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
sarb
sarb
jmp
inc
jg
mov
pop
pop
jmp
add
mov
fs
mov
adc
jmp
popa
mov
push
xchg
ret
push
cltd
cwtl
stc
lcall
notb
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
ret
pushl
push
xchg
stos
dec
cmp
pop
imul
add
jmp
add
mov
add
fsubs
cmp
cmc
movsb
lret
push
cmpsl
into
clc
test
sar
std
stos
iret
std
lods
sar
sti
cmpsb
lret
jmp
mov
dec
rol
stos
stos
stos
jne
pushf
pushf
or
add
add
dec
dec
dec
aaa
je
jae
stos
stos
stos
ror
int
out
into
lret
cmc
lret
sti
lret
std
enter
movsb
mov
stos
pusha
mov
lods
inc
jg
mov
add
mov
fs
add
iret
add
flds
clc
xchg
cld
mov
cld
mov
fcos
cld
mov
std
mov
sar
jmp
ret
scas
scas
lods
mov
add
add
add
add
or
rcl
dec
loope
jecxz
loopne
loopne
fcmovnu
fadd
fcmovu
fsubr
mov
gs
cmpsl
sub
pusha
ljmp
add
enter
xlat
add
in
jnp
icebp
dec
mov
sti
loopne
std
loopne
inc
dec
std
enter
leave
loopne
sti
fdivr
out
mov
lret
mov
xchg
popf
popf
popf
sbb
add
add
std
add
std
add
ljmp
jmp
jmp
ljmp
xchg
mov
mov
mov
add
mov
fs
add
iret
add
faddl
je
ljmp
std
std
shl
call
out
shl
std
shl
call
call
shl
push
xlat
fcmove
sar
mov
mov
add
incl
std
add
cld
pop
aad
aam
mov
pop
xchg
lahf
or
ljmp
add
add
rolb
jno
filds
ja
out
and
cld
shl
fldpi
fucompp
cld
fld1
xlat
jmp
fsub
cld
aad
push
enter
iret
aad
mov
sahf
lahf
das
add
add
int
int
mov
arpl
stos
add
mov
add
aad
jae
loope
ja
out
xor
sti
int3
loope
cli
lret
fdivrp
test
hlt
ret
aad
repz
out
ret
in
aam
in
shl
ljmp
ljmp
test
add
add
add
push
mov
jb
push
data16
mov
imul
sbb
lret
and
cs
ficoms
jecxz
mov
out
loop
lret
mov
leave
ffree
int3
leave
faddp
sarl
in
fcompl
in
jmp
rorb
mov
add
stos
stos
stos
add
xchg
mov
ljmp
xchg
fidivrl
jg
rol
stos
mov
mov
ret
rol
aam
int
aad
iret
pop
rcl
iret
dec
fnstcw
loopne
fildll
in
fsubl
jecxz
lock
jmp
or
std
incl
std
std
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
ret
leave
leave
and
rcl
pop
mov
rcl
or
loope
or
int3
int3
add
std
std
incl
std
std
add
add
add
into
into
pextrw
or
int
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
cltd
add
rol
mov
xchg
leave
mov
ret
sarl
scas
mov
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
jmp
aad
std
rcl
sar
iret
into
int
mov
mov
sarl
sbb
push
add
add
add
add
add
add
add
add
jno
jb
push
dec
dec
das
cs
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
aad
dec
iret
int
enter
mov
scas
scas
lcall
mov
push
add
add
add
add
jne
jae
test
adc
arpl
mov
push
outsb
jb
bound
pop
pusha
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
cltd
lds
jno
and
add
pop
add
add
jae
je
fwait
xchg
lcall
xchg
clc
xchg
or
addb
push
dec
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
test
mov
xchg
xchg
xchg
cld
sahf
sahf
sahf
cmc
lcall
mov
push
push
imul
jge
mov
xchg
testl
mov
mov
xchg
mov
test
call
stos
stos
stos
add
add
add
cmpsl
mov
mov
scas
cld
xchg
xchg
xchg
call
lcall
xchg
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
bound
std
lcall
ljmp
and
mov
outsb
pushl
sahf
lods
lock
mov
imul
int
add
add
test
pop
lods
cmpsb
stos
test
sahf
popf
lahf
jmp
mov
xchg
decl
push
ja
xchg
inc
jb
lea
imul
xchg
adc
cwtl
or
or
scas
sbb
jne
mov
sub
lds
xchg
rcrl
subl
je
push
movsb
popf
lahf
test
test
scas
mov
mov
mov
sahf
xchg
decl
or
mov
push
decl
add
mov
adc
shlb
dec
inc
mov
aad
mov
dec
xchg
dec
lcall
movsb
mov
add
push
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
pop
decl
or
xchg
add
mov
add
mov
push
xchg
fcompl
fistps
jmp
pusha
movsl
jmp
movsw
call
fwait
mov
mov
mov
cmpsl
cmpsb
cmpsb
pop
add
add
arpl
adc
pushf
fwait
fwait
cld
mov
scas
mov
mov
scas
lcall
xor
lcall
jmp
add
mov
xor
jmp
jl
out
jle
out
jle
ficompl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
bound
lcall
add
add
mov
gs
pop
insl
fimull
in
mov
push
xchg
xchg
enter
enter
mov
movsl
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
ret
mov
xchg
ljmp
sbb
movsl
add
mov
fs
add
aad
js
ljmp
cli
stos
sar
cli
lods
sar
std
scas
sar
lods
iret
jmp
enter
mov
ds
incb
xor
jno
inc
mov
mov
rcl
mov
aad
rcl
out
leave
enter
mov
jmp
add
ret
call
add
call
pop
std
mov
fdivr
cld
rcr
std
ret
inc
lock
shl
test
dec
jg
addb
add
add
jmp
out
out
jmp
out
outsb
fcmovu
fisubl
mov
add
mov
add
fldl
out
aaa
xchg
cli
scas
aam
std
int
shl
std
shl
call
in
std
aam
push
enter
into
in
scas
scas
scas
popa
jg
addb
add
std
add
incl
int
shrb
mov
add
mov
add
loope
jns
cmc
push
movsl
inc
loopne
std
aad
aam
shl
cld
aam
sti
shl
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
scas
add
mov
or
cmp
out
mov
shl
call
mov
shl
out
rcl
ljmp
scas
fwait
fwait
cltd
add
mov
sahf
lods
xchg
dec
and
shlb
lret
ja
mov
fdivrs
adc
int
fmul
into
pop
dec
jecxz
loope
out
out
in
out
out
sbb
rol
add
mov
scas
arpl
stos
mov
ret
les
lret
sbb
bswap
into
int3
or
aad
push
incb
jg
jg
std
add
add
add
mov
incl
std
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
push
fs
nop
mov
cmpsl
rcl
fnstenv
dec
mov
insl
mov
adc
loopne
frstor
jp
cmp
push
push
cmpb
fcmovne
loop
cli
push
js
pop
xor
outsb
inc
out
jne
pusha
dec
incl
xchg
not
dec
cld
or
mov
mov
sbb
inc
jecxz
std
mov
adc
sbb
test
jno
mov
mov
out
xor
xor
xchg
stos
bts
lds
mov
ret
lds
in
clc
xor
push
outsb
dec
xchg
js
xor
pop
pop
xor
out
in
mov
cli
cwtl
cld
pop
sbb
mov
add
sbb
imul
and
push
cmp
into
and
lcall
sub
mov
call
push
jnp
dec
sbb
xchg
push
das
mov
mov
xchg
add
xor
cmp
push
dec
mov
mov
in
inc
cld
mov
in
divb
push
dec
sbb
fwait
out
adc
dec
jbe
push
pushf
or
repnz
sub
jne
xor
mov
jns
out
xchg
shlb
repz
icebp
ja
shlb
xchg
aas
hlt
enter
mov
cmp
pop
subl
test
nop
movsl
xor
dec
adc
ret
pop
mov
das
imul
mov
push
ss
push
jp
out
cmpsl
jo
jmp
mov
inc
icebp
pop
cmpsb
in
shll
sub
loop
push
in
rcl
adc
cmp
xchg
xchg
fwait
inc
shrl
mov
out
dec
call
negl
push
leave
mov
lcall
lods
sub
or
je
cmp
push
push
scas
outsl
mov
cld
dec
loope
mov
cli
pusha
out
pushf
push
jle
adc
push
sub
negl
sbb
out
inc
out
jbe
sahf
mov
sahf
adc
xor
or
xchg
add
stos
rcll
hlt
nop
rcl
xchg
mov
pop
test
pop
push
jbe
pop
or
imul
xor
js
and
daa
leave
or
fwait
push
repz
mov
int3
fdivrs
lods
add
dec
jb
mov
nop
in
lahf
push
ret
dec
inc
faddl
data16
rcll
push
add
mov
hlt
mov
mov
adc
jle
fs
rcr
std
mov
cmpsl
xchg
inc
xchg
ror
iret
mov
cld
pop
flds
push
or
repz
mov
imul
lods
popa
ljmp
mov
aaa
cmp
repnz
outsb
cld
fisubl
adc
pop
mov
shl
push
push
sub
jns
push
mov
shrb
sub
pop
dec
dec
dec
or
cwtl
stos
xchg
int
mov
clc
cmpsb
push
lock
cmp
stos
lods
add
jp
out
push
fisubrs
jle
xchg
insl
out
mov
stos
jne
xchg
push
icebp
imul
bound
mov
sbb
jg
push
movsl
mov
movsl
rcll
xor
mov
and
roll
cltd
cmc
push
lods
dec
cli
mov
add
cmp
xor
dec
lods
jne
mov
dec
ret
adc
sbb
mov
lods
sub
push
stc
icebp
fwait
ds
enterw
cmpsb
cmp
movsl
and
mov
in
fdivrs
cli
push
add
add
fsubrs
les
insb
loopne
outsb
and
frstor
insb
xchg
push
adc
push
inc
push
ffree
jbe
std
add
xlat
decl
push
daa
cs
fucom
enter
cmpsb
xchg
sarl
jecxz
cmpl
leave
inc
xor
cmc
cltd
lods
sub
in
cltd
cmp
push
out
shll
sub
and
or
mov
xor
xlat
stos
les
out
lahf
lds
pop
shl
jb
mov
les
mov
push
in
inc
fisubrl
or
shll
cmp
pop
daa
dec
adc
cs
xor
fildl
insb
rep
or
sub
mov
dec
punpckhdq
push
stc
fsub
stc
pusha
or
shrl
xor
orl
sbb
loope
shll
icebp
mov
push
jne
daa
lods
fs
adc
jbe
cmp
jmp
outsl
pop
out
orl
cmp
jae
or
push
and
scas
iret
pusha
lahf
push
aad
jae
jne
pop
divl
insl
lock
jp
mov
push
fs
addl
shrl
xorl
sub
add
andl
inc
test
scas
gs
pop
fildll
lret
lret
sbb
add
fwait
xchg
orl
mov
sbb
js
in
sub
int
mov
dec
cmpsl
lds
xor
mov
push
data16
add
jle
add
cld
xchg
mov
pop
mov
lds
popf
lcall
jo
push
notl
adc
cmpsl
fnsave
jl
fbstp
inc
imul
sub
repnz
in
jge
xor
or
ret
movsb
and
adc
pop
std
in
test
jns
stos
ror
gs
mov
cmovs
cmp
mov
outsb
mov
sysret
or
ret
inc
mov
mov
sbb
lahf
and
xchg
bound
lods
mov
in
xchg
leave
ret
mov
adc
iret
or
fwait
jle
or
repnz
push
push
xchg
data16
pop
xchg
inc
sar
insl
add
cmp
mov
ljmp
sarl
repz
insl
add
in
lea
cwtl
mov
lret
stos
push
mov
leave
mov
fcoml
or
dec
outsb
loopne
add
rcrl
inc
xchg
dec
adc
push
push
clc
push
or
inc
fidivrs
cld
gs
lret
jb
pop
dec
ret
js
fimuls
data16
shlb
xlat
cmp
sahf
ret
imul
test
addr16
xchg
aas
fstpl
mov
cmc
push
js
add
es
sub
call
or
cmp
shrb
pop
imul
pop
icebp
mov
mov
loopne
mov
les
pop
xchg
dec
jecxz
cmpsl
in
fldcw
add
mov
and
inc
sahf
ds
lds
pop
repz
jp
je
add
pop
and
sbb
aam
insl
add
xor
xchg
add
jle
mov
fiadds
and
pop
ret
mov
mov
loop
push
inc
xchg
mov
push
xchg
cs
sub
jl
jecxz
or
xchg
es
mov
mov
jns
jecxz
andl
ret
xchg
xchg
mov
cltd
ret
shll
lret
not
iret
pop
sub
xlat
outsb
sbb
jge
test
sub
das
jnp
mov
dec
iret
dec
lock
and
repnz
pop
scas
and
xor
lds
xchg
push
ljmp
jno
sbb
es
loope
pop
adc
cmpsb
cmp
adc
les
xor
loop
or
add
or
push
mov
sub
cmp
add
popa
clc
mov
pop
icebp
push
sarb
add
js
mov
imul
lock
mov
sbb
push
nop
cmp
push
mov
sub
mov
add
sahf
xor
popf
mov
inc
daa
cmp
mov
cmp
push
jmp
dec
fsubl
or
std
xchg
pusha
test
stos
inc
repz
jg
adc
xor
shlb
jecxz
cmp
arpl
int3
stos
inc
mov
jge
jmp
add
aad
adc
mov
or
mov
stos
inc
pushf
sub
or
icebp
mov
cli
mov
addl
insl
add
movsb
icebp
mov
js
fldcw
dec
loop
mov
sti
pop
or
mov
push
out
push
scas
hlt
cmc
mov
inc
add
fstl
mov
scas
mov
pop
dec
fwait
xor
and
xor
std
icebp
pop
imulb
pop
movsb
cmp
mov
addr16
inc
sbbb
mov
jo
pop
std
xchg
dec
pop
adc
pop
and
rcrb
bound
pop
negb
xchg
aas
add
add
fcmove
mov
jg
outsl
sbb
cmp
imul
pop
scas
inc
dec
or
sbbl
shll
shl
xchg
into
rclb
das
movb
sbb
dec
testb
daa
pushf
xor
sub
dec
jb
jmp
cmp
loope
jg
ljmp
in
xchg
ret
js
push
mov
inc
sub
dec
sub
rclb
pop
repz
pop
ss
mov
lds
xor
mov
pusha
test
push
push
sbbl
sub
push
popf
sbb
test
clc
cmp
lds
into
addr16
mov
loopne
xchg
rolb
movsl
mov
dec
loop
xor
adcl
inc
ja
fidivs
cltd
adc
shrb
pop
out
pushf
jbe
gs
mov
cld
xchg
push
dec
mov
inc
ds
arpl
mov
jne
add
into
gs
mov
pop
cli
inc
mov
sbbb
lea
scas
jae
and
js
sbb
xor
sbb
inc
orb
insl
jbe
lods
jp
jmp
inc
je
orb
jo
pop
scas
sbb
mull
testl
cwtl
notb
fs
mov
arpl
pop
jbe
mov
mov
insl
and
mov
shrl
lret
bound
mov
cld
and
inc
int
cmp
iret
xchg
pop
xchg
push
fs
pop
add
in
xor
xor
outsl
ficoms
aas
add
inc
ficoms
mov
shlb
fnsave
int
cmp
data16
lahf
dec
sub
cmp
pop
repnz
sub
adcb
icebp
les
cwtl
adc
jbe
xchg
inc
fmulp
movsl
fidivs
addr16
fcoms
cmp
imul
inc
fnsave
frstor
into
fsubp
jnp
lock
sahf
loope
xchg
je
sbb
pop
addr16
sub
dec
and
cmpb
lea
pop
mov
repz
pusha
outsb
add
fbstp
fisubs
stos
mov
and
mov
pusha
imull
stos
inc
xlat
sbb
es
scas
xchg
push
jmp
iret
lods
inc
shll
xchg
loop
sti
sarl
mov
insb
hlt
fdivl
or
cmp
mov
push
or
dec
out
sub
fnstenv
ror
mov
or
lds
sub
inc
out
sub
sbb
rcrl
jle
jecxz
pop
hlt
jle
nop
daa
lret
or
push
xchg
movsb
add
xor
lds
iret
mov
aas
daa
fsubs
leave
int3
int
clc
ljmp
xlat
std
jge
out
jl
pop
lods
adc
xchg
mov
inc
fnstenv
dec
loop
push
push
call
mov
fisubrl
ror
sbb
fimuls
dec
cmp
jno
pop
adc
mov
cmc
daa
mov
adc
aaa
xor
test
sbb
mov
fndisi(8087
js
gs
mov
out
es
pop
add
jno
pop
mov
xchg
xor
add
sub
push
xchg
popf
imul
mov
mov
jnp
push
call
inc
pop
push
in
dec
out
into
xor
addr16
fists
mulb
and
xchg
push
movsl
insl
cmp
cmp
into
xor
or
loope
push
ror
insl
add
cmc
pushf
xor
cmpsb
jg
jmp
fs
jns
mov
rcrl
fwait
xor
dec
cmc
mov
xor
data16
ret
or
xchg
cmp
push
in
aad
jo
sti
notb
out
push
lods
int3
or
dec
lcall
add
pop
negb
mov
xchg
sub
push
pusha
notl
and
pop
jbe
mov
adc
mov
mov
mov
mov
push
fidivl
inc
dec
in
xor
jns
sbb
xchg
lods
inc
pop
loope
and
jnp
pop
insl
stos
xor
xlat
mov
add
js
and
testb
in
jno
xchg
sub
add
pop
fwait
xor
jno
outsb
aam
pusha
lods
inc
frstpm(287
sbb
push
out
xlat
outsb
xchg
je
sbb
les
push
mov
test
xor
mov
xchg
rcrl
push
stos
repnz
cmp
pop
push
mov
add
fsubrs
xchg
jb
or
add
fwait
in
or
sub
sbb
inc
mov
dec
push
jbe
popf
xchg
sbb
pushf
xor
xor
mov
mov
fadds
mov
push
idivb
add
arpl
mov
pop
out
jge
inc
xchg
mov
int3
mov
add
mov
dec
arpl
jne
rcrl
xchg
aas
push
rcrl
xchg
sub
mov
sti
and
mov
xor
push
loopne
dec
xor
sbb
or
sbb
scas
xchg
sub
add
out
test
mov
sub
xor
cmp
mov
fwait
dec
leave
add
stc
pop
lea
sarb
or
adc
add
pop
repnz
popf
dec
mov
subl
mov
es
sbb
add
dec
dec
mov
xor
jo
bound
push
movsl
mov
dec
call
xchg
adc
fiaddl
in
or
lret
scas
inc
std
mov
into
mov
call
call
cwtl
lret
sti
or
jae
mov
mov
sbb
sbb
int3
mov
cmp
out
stc
lret
and
js
in
adcb
jbe
dec
push
neg
outsl
jmp
or
pop
jns
out
adc
xchg
sub
scas
shrl
xchg
sbbb
mov
push
cmp
add
mov
cmpsl
ds
mov
push
dec
shrl
jae
bound
movsl
cmp
js
and
imul
mov
cmp
aaa
mov
test
jb
movsl
xchg
sub
mov
pop
and
xchg
push
out
mov
ja
loope
call
pop
xlat
in
test
jl
jmp
lcall
xchg
in
push
pop
ficoms
addr16
mov
sub
or
cs
pusha
cmc
stos
inc
daa
and
mov
aad
mov
pushf
in
or
pop
out
or
mov
lret
fmuls
cmp
jae
pop
fs
cmp
sti
xchg
add
adc
fisubrl
sbb
stos
js
sbb
stos
jge
sbb
testl
aas
cmpsl
xor
jnp
cmc
dec
mov
pop
scas
mov
les
inc
jl
pop
mull
testb
mov
aaa
fnstenv
cmp
aam
stos
inc
sbb
or
inc
xchg
pop
hlt
ret
push
jmp
pop
mov
and
aam
jae
popf
inc
sysenter
lret
inc
push
push
iret
jmp
xchg
push
cmp
jb
sub
movsl
rol
pop
lds
sub
xchg
cmp
xchg
sub
clc
aaa
addr16
scas
rorl
lods
mulb
mov
push
ficoms
mov
sub
adc
fidivs
mov
lds
jg
jp
fs
mov
mov
test
xchg
xor
fisubl
rolb
fistps
add
outsl
test
and
arpl
insl
inc
ds
xchg
sub
cmp
inc
jle
int
pop
sub
xchg
rcll
ret
xchg
mov
test
adc
mov
pop
jp
mov
xor
xchg
sub
push
fidivrs
pop
or
cltd
in
jl
mov
lcall
out
sti
and
int3
xor
std
repnz
and
dec
mov
icebp
in
outsb
mov
les
xor
and
pushf
loopne
sub
dec
add
cmp
insb
lock
jg
icebp
pop
cwtl
outsl
dec
mov
hlt
jb
aam
xchg
push
cmp
nop
mov
test
scas
imul
fists
mov
fcomps
mov
mov
int3
xor
xor
bnd
insb
lock
xor
xor
mov
enter
jae
xchg
inc
mov
xchg
outsl
lods
xor
insl
mov
popa
fs
adc
in
imul
xchg
leave
clc
fwait
xor
or
push
movsl
in
dec
adc
adc
nop
dec
loope
mov
montmul
cmpsb
inc
pop
addr16
push
bound
xchg
jno
icebp
bound
imul
mov
push
out
dec
nop
daa
inc
cmpb
fwait
stc
nop
sub
pop
scas
jl
inc
fldt
jns
and
fnsave
cmp
push
jns
pop
dec
jbe
rclb
mov
cmp
imul
cmp
ss
aad
fdivrs
sbb
dec
ja
gs
js
mov
xor
test
mov
mov
xchg
mov
sbb
and
ds
jo
pop
mov
ret
testl
pushf
mov
fs
out
or
sarb
out
cmp
shrl
adc
test
jnp
xchg
jo
mov
repnz
dec
adc
stos
orl
ret
sub
cmp
or
das
pop
jge
adc
mov
sub
mov
imul
mov
or
dec
dec
fwait
jmp
mov
inc
fmuls
xor
mov
add
fcmovb
pop
or
xchg
sub
pop
mov
push
mov
fbld
out
test
cs
test
xor
loope
imul
and
movsb
push
jmp
push
pop
dec
loop
and
insb
push
scas
push
adc
out
adc
aas
jecxz
push
aam
in
addl
cmpsl
ds
sbb
mov
pop
cmc
mov
je
jl
lock
testb
loopne
ffreep
lea
add
mov
notl
pushf
sbbl
les
sbb
std
xor
mov
cld
rol
pop
lds
lea
push
add
stos
test
fnsave
mov
ja
hlt
mov
cltd
mov
in
push
in
test
lret
mov
dec
jmp
jg
mov
jbe
add
loope
dec
jle
xor
ret
inc
ficoms
ja
pop
hlt
push
pushf
ret
xchg
mov
jbe
shll
imul
xchg
cmp
pop
or
addr16
dec
pop
inc
iret
ss
adc
sub
popa
fidivl
and
add
out
out
jg
mov
int3
xor
mov
sbb
stos
mov
and
push
or
int
push
mov
jge
sub
push
dec
add
dec
nop
mov
xchg
sub
add
xchg
repnz
push
es
xchg
push
jbe
pop
ss
out
test
push
mov
ja
mov
iret
push
and
test
ds
movsl
dec
jecxz
loopne
iret
mov
fildl
or
xor
rorb
scas
sub
lret
fnstsw
sti
mov
cmp
sub
dec
inc
fstpl
dec
loopne
cmpb
daa
movsb
adc
imul
or
mov
dec
sub
pop
sub
jg
mov
cs
clc
inc
dec
adc
dec
mov
ljmp
bound
xchg
rcll
shlb
pop
sahf
iret
adc
sbb
loope
clc
pop
add
pushf
xorb
mov
cmc
mov
movsb
addr16
repnz
mov
movsl
inc
dec
fidivl
dec
fbstp
ja
and
push
cltd
xor
xchg
mov
ficompl
jae
adc
sub
cmpsl
ds
loopew
cmp
pop
sahf
xor
or
loop
pop
cmp
xchg
sub
cmpsl
ret
pop
aam
outsb
sub
shll
mov
push
mov
push
xchg
mov
fistps
int3
dec
push
mov
jo
adcb
xchg
fnstenv
scas
sahf
xor
mov
loopne
fmul
fdivrl
imul
out
lock
jg
push
cmp
pop
add
adc
add
int
and
cmc
mov
loope
test
jae
jecxz
mov
mov
lret
sbb
mov
add
pop
xchg
and
mov
or
cmc
mov
cmpsb
sbbl
stos
ret
adc
xchg
iret
jne
rcl
out
xchg
repnz
in
jg
inc
add
daa
and
jg
dec
cmp
jns
push
popf
push
xor
mov
out
cs
andl
and
leave
lahf
mov
xor
xchg
mov
pop
sbb
stc
idivb
call
xchg
jae
mov
dec
in
aam
xor
imul
cltd
xor
or
jg
pop
repnz
cmp
and
mov
outsb
iret
data16
mov
sub
mov
lret
bound
push
popa
clc
aaa
jo
xchg
xor
adc
inc
in
in
gs
mov
lret
dec
test
stc
inc
fcmovnb
pop
or
sbb
mov
movl
pop
hlt
or
subl
adc
pop
fdivl
imul
inc
xlat
adcb
sbb
dec
les
pop
out
push
push
mov
sub
fidivl
mov
jmp
mov
jmp
jae
ljmp
xchg
mov
aaa
insb
repnz
test
cmp
pop
in
mov
data16
jl
stc
xchg
out
sbb
jns
mov
push
in
xchg
lret
jmp
cmp
sbbb
cmpsl
inc
fstps
jae
stos
inc
cmp
test
push
fs
std
outsl
stc
nop
xor
adc
popf
push
inc
ficoms
dec
loopne
jne
aad
and
mov
xchg
jbe
enter
loop
enter
or
cmp
js
mov
rclb
xchg
mov
dec
xchg
sub
mov
cmpsl
ds
shrb
iret
xchg
sub
lahf
mov
adc
push
fnstenv
scas
in
test
pop
jmp
rcrb
int
lcall
scas
inc
cmp
ret
incb
in
out
inc
pusha
leave
and
cmp
jns
adc
mov
and
push
jmp
cmp
cmp
sbb
cli
push
out
push
mov
pop
popf
pop
mov
adc
stos
loop
sbb
fbstp
cmp
ret
rcr
ss
fidivrl
inc
stos
scas
dec
loopne
int3
int3
xor
adc
lret
and
push
cmpsb
repz
sbb
inc
fsubrs
xchg
outsl
pop
dec
adc
mov
or
imul
xsha1
cmpsb
or
fidivl
jb
mov
scas
lret
sbb
rolb
add
jg
outsl
push
mov
aas
shrb
push
outsb
ret
nop
push
icebp
mov
or
int
popa
xor
push
xchg
or
hlt
xor
pop
out
js
jo
xchg
in
sbb
insb
sbb
mov
lods
ljmp
mov
jb
push
mov
adc
cmpsl
ds
add
sarl
jmp
aaa
jmp
mov
xchg
xchg
or
jl
pop
cmc
jecxz
push
sarl
sbb
enter
cmpsb
add
insl
add
mov
sbb
test
add
dec
fildll
out
pop
jecxz
in
repz
int
mov
fmuls
sar
pushl
cmc
lods
xor
hlt
mov
pop
std
add
adcb
adc
lock
xchg
add
xchg
add
cmp
jne
dec
inc
lods
dec
cmpsl
jbe,pt
dec
aam
xor
loopne
loope
push
mov
neg
inc
mov
xor
leave
mov
dec
xor
scas
vmulss
scas
je
inc
les
add
mov
ss
fwait
pop
test
push
pop
sbb
jb
rolb
or
dec
cmp
xchg
loop
or
stc
inc
and
mov
mov
push
mov
push
daa
fbstp
jmp
push
and
loope
lahf
lahf
shll
sbb
add
loope
and
loope
pop
stos
inc
scas
fisttpl
or
mov
mov
stos
mov
sbb
inc
les
xor
sbb
sbb
jnp
xchg
stc
and
in
pushf
nop
mov
aam
outsl
call
cmpsl
ja,pt
testb
or
shrb
jbe
subb
aas
mov
mov
sbb
xor
jmp
fldcw
and
icebp
jae
sbb
or
push
popf
clc
sub
jnp
fs
add
test
xor
in
and
mov
arpl
sub
xlat
push
adcb
clc
imul
mov
enter
lds
mov
movsb
lahf
pop
sbb
xchg
add
ja
outsl
ljmp
pop
jmp
sbb
outsb
scas
orb
inc
inc
jo
pop
inc
fisttps
pop
jnp
dec
sub
fs
pop
out
xorl
inc
ret
mov
jge
jl
cmp
lret
mov
std
lahf
inc
leave
sbb
sub
mov
jecxz
clc
mov
bound
mov
pop
repnz
push
sarl
stos
in
jmp
push
lods
dec
out
aas
loop
jg
sbb
add
gs
mov
movsb
cmp
pop
scas
add
mov
or
mov
mov
out
lret
sub
inc
addr16
xor
mov
dec
pop
repnz
mov
icebp
mov
arpl
mov
pop
add
iret
mov
lahf
dec
enter
add
shll
jg
adc
out
sbb
in
xorb
movsb
mov
xchg
sub
inc
insl
push
mov
pop
hlt
out
jo
cmp
std
sbb
movsl
cs
fmul
push
ds
mov
ret
lods
and
aad
imul
xchg
and
lods
dec
imul
outsb
or
cmp
xchg
sbb
scas
push
fstp
mov
jb
mov
mov
xor
aaa
cld
mov
push
out
mov
test
adc
imul
jb
mov
cmpb
arpl
mov
fldl
loope
rclb
push
lods
je
pushf
sbb
sbb
sbb
add
imul
sbb
cmp
enter
mov
xor
add
lods
inc
cltd
stc
fldcw
fmul
add
pop
test
leave
adc
xchg
jbe
sub
test
scas
inc
jecxz
out
pusha
inc
leave
add
and
lds
add
add
lcall
cmp
adc
testb
fmulp
shrb
add
jecxz
inc
mov
cmp
mov
add
jno
sub
mov
in
add
xchg
mov
and
sub
scas
cmp
jle
inc
push
lret
dec
pop
push
mov
mov
inc
leave
mov
ret
push
pop
dec
xor
jae
rcrl
mov
jbe
mov
into
incl
mov
jnp
mov
call
imul
dec
and
insl
dec
in
in
push
pop
imul
aad
fldenv
add
push
scas
ja
cwtl
ss
mov
mov
addr16
mov
js
jns
pop
aad
sbb
mov
ret
scas
jo
xchg
sbb
mov
pmaddwd
pop
lods
dec
out
mov
dec
insl
add
gs
inc
mov
lods
inc
adc
or
dec
lea
dec
mov
jge
cmp
test
xor
mov
sbbl
test
mov
enter
fidivl
repnz
mov
dec
push
fildll
inc
test
jp
jbe
ja
pushf
je
fbld
ds
into
enter
push
adc
mov
movsl
in
xchg
fwait
sahf
xchg
mov
push
sub
jp
mov
cmpsl
ds
pushf
jae
inc
xor
out
push
xchg
out
jne
fwait
pcmpgtw
or
pop
adc
xchg
and
mov
jne
adcl
ret
aam
sbb
mov
out
out
adc
out
mov
data16
adc
gs
bound
jae
fs
mov
movb
test
fs
mov
jbe
pop
fsts
test
cmp
ds
je
add
or
das
mov
aas
cwtd
push
cmp
push
arpl
xor
sub
mov
xchg
das
mov
add
daa
nop
rolb
popa
mov
mov
out
push
out
fld1
cmp
xor
adc
lret
stc
mov
dec
mov
popa
movsb
loopne
out
cmpsl
add
fdivrp
adc
outsl
repz
and
jb
push
mov
repz
adc
fiadds
hlt
add
xchg
fisubrs
push
nop
mov
cmp
jnp
inc
ret
bound
outsb
jp
aad
mov
loopne
xchg
adc
cmc
jo
pop
pop
lds
mov
adc
inc
in
mov
mov
lahf
sbb
sar
aam
adc
dec
inc
sbb
sub
adc
imul
xor
lock
adc
push
shll
mov
sbb
or
inc
outsb
in
cltd
jo
cmp
mov
pop
cmc
dec
movsb
xchg
insb
adc
adc
mov
nop
fs
loope
adc
inc
js
jne
push
mov
mov
cwtl
outsl
push
lret
add
dec
xlat
cmc
icebp
daa
mov
xchg
mov
psrld
popf
mov
mov
lods
sub
sub
mov
sti
stos
in
mov
push
jae
mov
cmpsb
and
sbb
mov
inc
scas
sub
ret
xchg
into
xchg
pusha
mov
add
int
fisttpll
dec
add
xor
insl
movsl
cmp
jo
shl
cmp
jne
push
cmpsl
shl
addr16
in
xchg
sbb
insl
mov
adc
roll
sbb
clc
notl
push
cmc
aas
sbb
clc
jno
cmp
shll
pushf
movsb
inc
test
test
mul
ret
stc
out
and
repnz
les
push
mov
push
in
push
adc
mov
std
out
xchg
sti
xchg
xchg
in
lods
xchg
mov
std
fstps
jnp
mov
xchg
inc
clc
out
orb
in
pop
ficoml
sub
mov
push
inc
out
inc
pushf
sbb
mov
lahf
cwtl
xorl
fmulp
sbb
cli
es
mov
cmp
sbb
add
lahf
and
repnz
push
push
js
movsl
add
lock
pop
inc
inc
push
inc
and
jge
sub
or
out
mov
xchg
sub
pop
mov
sbb
outsl
jns
pop
push
lods
rclb
sbb
cwtl
xlat
xlat
pop
pop
dec
mov
push
push
add
scas
popa
stos
dec
movsb
rcrl
les
jmp
jp
popf
in
test
mov
data16
cmp
inc
adc
gs
mov
cmc
repz
xchg
fists
imulb
adc
mov
push
out
jp
faddl
xchg
sub
arpl
xchg
xor
pop
test
add
jnp
fbstp
test
fsubl
pop
out
pop
into
sahf
dec
test
loopne
xchg
xchg
or
imul
and
sbb
fsub
outsb
stos
xor
faddl
les
cmp
sbb
add
testb
das
pop
mov
loop
call
push
pop
mov
dec
lea
lret
ret
test
cmc
addb
call
inc
fistpl
jge
inc
sub
data16
mov
or
es
scas
pop
pop
inc
fmuls
inc
cli
xchg
js
dec
sahf
cmp
icebp
jbe
pop
mov
cmc
ja
cli
xchg
or
mov
or
nop
adc
add
cmpsb
jg
push
cmp
push
cmp
mov
sub
das
leave
in
sti
push
pop
ljmp
xor
in
arpl
mov
es
ja
sbb
jge
in
popa
sahf
mov
in
and
xchg
jmp
add
push
mov
cli
mov
inc
mov
iret
xlat
cmp
imul
orl
jae
icebp
push
loop
xchg
mov
inc
out
dec
inc
fldl
cld
test
mov
sbb
divl
in
movsl
inc
xlat
push
cli
xor
fdivs
fwait
push
ret
hlt
inc
jnp
xchg
in
cmp
mov
insl
fnstcw
in
leave
push
ja
sbb
or
mov
xchg
in
encls
je
lods
pop
cld
cmp
jle
cmpsl
mov
repnz
cs
into
in
push
jne
outsl
cmp
mov
xchg
mov
repz
xor
movsb
push
cmpsl
and
repz
subl
mov
and
pusha
pushf
cltd
sbb
das
in
jl
xor
out
xchg
dec
sub
sbb
dec
inc
push
push
pop
cli
sbb
jl
jnp
cld
dec
aas
cs
sarl
lods
sbb
cmp
xor
pop
das
or
loope
pushf
pop
jecxz
adc
push
imul
and
add
pop
xchg
xchg
out
mov
lea
adc
shll
loopne
mov
mov
in
sti
stos
lret
mov
cmp
out
sbb
rcrl
xor
sub
imul
adcb
ret
hlt
pop
adc
sti
sub
jns
push
addb
cmp
call
stc
xor
adc
fstl
inc
pop
pop
xor
dec
xchg
imul
insb
mov
pop
stos
xchg
arpl
mov
lret
sbb
sub
mov
cmp
or
xor
cs
movb
loope
addr16
adc
lea
lods
jecxz
dec
and
dec
iret
pop
jnp
sub
pop
xchg
addr16
and
sti
push
mov
ja
stos
sti
pop
mov
lock
and
ret
data16
and
xchg
push
fsubs
nop
push
jge
lods
xchg
sub
mov
add
mov
inc
inc
inc
jecxz
jo
xchg
adc
shlb
ret
inc
outsl
xchg
out
out
pop
jns
leave
sbb
pop
out
and
xchg
stos
xchg
mov
leave
fstp
push
cmp
add
aaa
dec
sub
dec
mov
dec
push
dec
jecxz
mov
xlat
iret
jl
sub
push
add
inc
lds
mov
jmp
pop
hlt
ret
or
loope
pop
xchg
stc
lock
ljmp
stos
lock
adc
mov
sub
adc
mov
rorl
and
lcall
fistpl
dec
mov
pop
decl
repnz
outsl
push
lods
mov
ljmp
out
enter
jae
xlat
popf
jg
lret
push
movsl
cs
cmp
stos
pop
les
aas
pop
idivb
sahf
or
pop
scas
arpl
pop
and
mov
ror
bound
inc
cmp
test
push
addr16
pop
pusha
inc
int
insb
xchg
cmpsb
jbe
inc
adc
lcall
mov
mov
push
mov
jp
cmpsb
leave
ja
xchg
in
sarb
pushf
dec
pop
inc
xor
xchg
rcl
xor
mov
xlat
rorl
lds
and
inc
mov
and
inc
xchg
xchg
push
in
roll
shll
out
cmp
sub
out
add
pop
and
pop
mov
push
add
jbe
xlat
adc
mov
dec
add
es
or
inc
lds
js
cmpsb
cmp
std
jns
pop
arpl
pop
cwtl
mov
fistps
fdivrl
adc
fadds
sbb
repz
out
pushf
xor
mov
scas
xchg
sub
int
add
cmp
xor
imul
mov
stos
pushl
in
scas
gs
cld
pop
mov
mov
call
jle
jns
add
aaa
cmp
inc
jne
in
inc
push
dec
shrb
xchg
fsubp
data16
dec
jg
cli
ljmp
out
aad
and
jb
out
iret
ja
inc
std
push
adc
inc
out
shrl
jmp
inc
sbb
or
xor
pop
hlt
std
push
popa
les
add
lret
mov
jge
test
cli
mov
arpl
cld
add
arpl
ljmp
pop
add
loope
aam
inc
add
mov
fistps
insl
dec
add
jp
jns
cltd
stos
outsl
add
jbe
dec
loope
inc
jns
ffreep
mov
and
mov
jo
dec
cltd
aas
inc
sahf
xor
mov
jmp
loop
adc
and
xchg
mov
pop
dec
mov
or
sub
popf
call
arpl
jg
mov
pop
ret
mov
inc
and
sub
mov
xlat
ss
mov
out
xchg
or
bound
and
add
push
jg
push
lock
loope
dec
fists
ss
mov
ss
jp
cmc
mov
dec
lock
arpl
mov
xor
mov
and
pop
pop
pusha
or
fcompl
xlat
xor
jno
add
dec
ret
mov
cmp
sarb
push
jbe
outsl
dec
hlt
mov
push
pop
popf
repz
push
cmp
jb
in
jo
sbb
sbb
inc
int
xor
inc
jne
pop
scas
sub
push
and
filds
adc
mov
jmp
call
test
cmp
adc
les
imul
inc
insb
mov
mov
outsl
es
mov
push
test
int3
fwait
sub
sub
lods
adc
outsl
rorb
iret
int3
daa
inc
or
sbb
xchg
test
add
xor
int3
xor
cltd
loop
mov
inc
sub
sbb
mov
mulb
sbb
or
out
mov
pop
add
movsb
cmp
and
in
iret
and
pop
jae
fdivr
mov
iret
adc
icebp
push
sbb
push
pop
pusha
mov
out
jge
inc
xor
dec
outsl
sbb
rcl
push
daa
cmp
xlat
mov
or
xchg
clc
or
ss
mov
push
xchg
fmuls
jge
dec
stos
sub
enter
or
lea
rclb
mov
rcl
ret
and
pop
mov
loop
push
orl
xchg
pop
and
fwait
icebp
insb
aam
sbb
push
mov
jle
mov
xor
dec
or
out
cmp
xchg
mov
lcall
ret
mov
jae
mov
xchg
les
xorb
shrb
test
jge
shll
mov
gs
mov
lods
or
out
cmp
cmp
jns
rcrb
outsb
iret
and
ret
pop
or
clc
fwait
jge
sub
jb
sub
mov
dec
jp
das
pop
xor
das
xchg
cmp
cmp
cs
jbe
cmp
rcl
mov
bound
mov
mov
popa
mov
mov
mov
sub
movsb
xor
movsb
push
leave
fwait
shlb
sub
out
pop
in
mov
push
adc
out
xchg
lcall
imul
adc
bound
test
inc
push
push
ret
ja
cmp
mov
aaa
out
mov
lea
lds
das
sbb
xchg
es
add
repz
jge
int
add
hlt
mov
bound
inc
push
xchg
sub
lret
pop
add
rcr
lock
clc
daa
adc
ss
sahf
jne
hlt
push
add
ja
inc
sahf
mov
adc
and
mov
xchg
mov
mov
repz
out
mov
shlb
cmc
jmp
mov
or
adc
inc
nop
ss
out
orb
jbe
inc
cmp
mov
add
lods
mov
jge
rcrb
or
popf
xor
add
add
jle
jb
sahf
xor
xchg
xchg
adc
or
sbb
test
stos
mov
add
jp
adc
and
adc
and
pop
inc
aam
push
jns
push
inc
bound
andl
fsubrl
mov
xchg
loope
nop
xchg
add
mov
int
xor
inc
push
nop
cmpsb
pop
icebp
xlat
mov
iret
and
sbb
push
adc
xchg
stos
imul
dec
pop
icebp
pop
adc
or
inc
mov
shlb
pop
movsb
sarb
mov
loopne
sub
mov
cmp
les
ja
cmpsb
inc
pushf
xchg
sbb
mov
inc
outsl
dec
in
pop
mov
dec
insl
dec
out
shl
mov
movsl
cmp
outsb
mov
pop
out
rorl
inc
adc
inc
inc
arpl
xchg
xchg
addr16
bound
mov
cmp
lahf
ds
pop
repnz
mov
fnsave
xchg
xor
cli
jno
icebp
mov
sbbl
into
push
mov
lods
scas
pop
out
or
sub
shl
mov
push
ss
out
sub
cwtl
pop
adc
int3
in
sub
pop
push
adc
adc
out
icebp
sti
or
jno
or
push
and
and
jb
test
push
add
loop
pop
repz
imul
arpl
pushf
jae
cmc
into
pop
mov
jge
fimull
jmp
movsb
add
cmp
xchg
out
pop
xchg
sbb
jne
push
icebp
pop
xchg
clc
roll
and
addr16
push
out
pop
pusha
mov
jecxz
lret
data16
out
cmpsl
mov
fbstp
pusha
in
jnp
test
xor
add
sarb
cwtl
test
cmp
jg
xsha1
cmpsb
dec
ja
push
mov
stos
fwait
cmpsl
lock
push
ss
daa
cmp
jb
repnz
dec
adc
sbb
leave
dec
push
sbb
add
lock
jae
das
mov
lods
mov
fbld
mov
aas
jno
mov
lods
mov
ljmp
call
imul
ja
mov
mov
sbb
cld
negb
jmp
lods
ljmp
mov
imul
xchg
daa
xchg
and
fldl
sbb
std
lret
or
out
cmp
scas
andb
stos
insb
call
shr
jge
cltd
test
push
out
jge
jb
imul
scas
les
lret
cld
fadds
mov
mov
inc
fdivrs
or
jnp
lea
test
or
inc
movsl
pop
sub
add
xchg
ret
jno
pop
mov
mov
cld
dec
in
rcll
mov
repz
jbe
add
push
pop
cmpsb
xor
lods
push
aam
xor
dec
scas
pop
xchg
pop
xor
aam
sub
stos
and
mov
inc
fnsave
push
mov
mov
dec
add
popf
cmp
repz
add
sub
mov
jecxz
sub
rorl
or
jno
pop
js
jnp
mov
cmp
xchg
xchg
popa
ret
mov
pop
call
test
dec
push
mov
mov
stos
or
dec
sti
dec
les
xchg
movsl
lds
cld
and
or
inc
add
mov
ret
js
shlb
jmp
rcrb
push
or
jb
shrl
rcl
imul
xchg
fldcw
sub
pop
cmp
loopne
sbbb
mov
mov
mov
popf
jmp
xlat
sbb
lea
es
lods
gs
jg
insb
mov
mov
jo
pop
popa
fldl
mov
jp
inc
or
adc
rclb
cmp
in
dec
mov
adc
shrl
mov
cmp
cmpsl
stos
lock
shrl
dec
and
scas
int
fs
daa
and
push
mov
add
loop
cld
cwtl
daa
jge
imul
dec
stos
mov
test
mov
hlt
pop
icebp
in
aas
mov
call
int
add
or
and
jbe
jge
loop
cmp
add
movsl
imul
add
push
or
fs
mov
jno
and
lea
inc
or
jecxz
adc
test
and
xor
lea
cmp
sbb
dec
shll
add
int3
fbstp
leave
outsl
popl
adc
mov
push
mov
mov
push
xchg
ror
lret
pop
in
sub
addl
test
imul
stos
std
inc
xchg
sbb
nop
pop
in
inc
test
fisttpll
and
ljmp
loopne
rorl
jg
out
mov
iret
es
xor
gs
andl
pop
sub
xchg
add
mov
test
pop
inc
sbb
sub
arpl
in
loopew
jne
stc
pop
out
mov
pop
mov
rorl
jl
scas
xor
paddw
mov
std
stos
push
xchg
pop
cmp
aas
pop
xor
push
sarl
xor
xchg
lods
cmp
std
addr16
sahf
inc
push
stos
inc
push
xchg
lods
cld
fstl
jo
adc
push
pushf
and
sbb
sbb
jnp
scas
xor
or
xchg
mov
lret
shl
ret
push
insb
adc
mov
push
xor
test
xchg
dec
pop
mov
ds
int3
arpl
repz
mov
outsb
xchg
mov
mov
and
sti
movsb
je
sti
jle
push
mov
cmpsl
stc
aas
loop
loop
sbb
aam
jne
addr16
je
test
loop
cmp
fisubl
fdivl
cld
loop
icebp
jg
imulb
xor
movsl
nop
mov
xor
and
add
cmpxchg
stos
inc
sbb
mov
sbb
lcall
push
inc
inc
mov
push
cmp
stc
ss
sbb
fucom
xchg
data16
hlt
or
mov
gs
out
push
test
pop
mov
sbb
xchg
jg
out
scas
rcrb
mov
xor
and
fcomps
loopne
stc
je
mov
gs
mov
aam
pop
rcll
inc
lods
mov
or
jle
std
push
das
js
fisubrl
pop
sti
cmp
adc
push
mov
movsl
cld
jb
lods
xchg
inc
push
cld
xchg
std
in
out
push
sbb
outsl
dec
cmc
or
nop
cmp
shl
dec
xchg
dec
pop
xor
mov
int3
arpl
cmp
leave
ret
fadds
pop
cmp
js
jp
mov
mov
pop
mov
cmp
adcb
adc
ret
and
mov
cltd
das
or
das
mov
mov
xor
adc
out
pop
in
add
enter
test
push
scas
test
mov
pop
add
pop
push
je
icebp
adc
pop
insl
js
sub
das
std
stos
xor
lds
je
ja
pop
xchg
sub
imull
or
sub
fcomps
in
addl
or
adc
mov
scas
dec
pop
push
shlb
pop
push
popf
cmp
aam
rcll
adc
sub
outsb
add
pusha
adc
sbb
icebp
cmp
ja
out
lret
pop
xchg
dec
jno
jmp
hlt
cltd
cmp
dec
xchg
push
insb
dec
push
out
fwait
insb
mov
scas
dec
adc
fisttps
mov
jmp
inc
dec
gs
repz
mov
ret
enter
push
popa
push
pop
or
xchg
xchg
test
dec
push
mov
push
inc
inc
push
or
pop
aas
mov
sub
push
aam
fdivrl
adc
clc
sahf
add
outsb
sub
dec
jmp
or
and
rorl
and
add
add
nop
js
test
lret
mov
jmp
push
notb
les
pop
je
in
mov
mov
mov
jno
xor
jo
or
dec
dec
bound
ljmp
mov
test
repz
sbb
mov
clc
fidivl
test
or
pusha
leave
pop
dec
push
cmp
lods
sub
fsubs
movsl
dec
sti
xlat
outsb
and
jb
inc
arpl
fwait
insl
add
movsb
out
add
les
repz
imul
sub
repnz
pop
mov
add
push
stc
push
scas
orl
stc
or
cmp
jne
cmc
cwtl
lock
push
fimuls
ret
mov
jno
imul
xchg
push
adc
and
cmc
in
mov
sti
cs
and
rol
adc
pusha
sbb
push
sbb
call
rcr
sbb
adc
mov
sbb
imul
jp
cmpsl
push
inc
sbb
mov
ljmp
or
pop
pop
pusha
clc
lea
xchg
shll
lret
int3
push
mov
mov
out
inc
cli
jns
test
outsb
ret
push
out
sahf
scas
inc
clc
dec
arpl
sbb
fs
xchg
pop
div
out
jbe
xchg
adc
lock
sub
outsl
push
negb
jo
sahf
push
or
pop
cld
cmc
pop
push
lahf
fiaddl
testl
call
mov
packsswb
xchg
pop
bound
sub
in
push
add
jecxz
jge
stc
insl
push
push
pop
xchg
mov
push
push
mov
xor
xlat
imul
xlat
outsb
sub
mov
dec
cmp
lret
xlat
stc
popf
loopne
jo
mov
dec
ret
or
or
or
jns
scas
and
inc
sbb
hlt
add
scas
les
xor
add
test
mov
push
loope
dec
jo
sub
ret
js
mov
mov
fcmovu
xor
add
push
test
push
inc
shlb
sbb
stos
stos
movsl
sub
push
js
or
xchg
pop
cltd
in
mov
bound
ljmpw
test
push
inc
dec
in
adc
or
push
cmpsb
clc
fidivrs
sti
adc
fstps
inc
mov
ja
xlat
ret
xor
scas
mov
in
ja
sub
int
push
dec
gs
jl
sub
push
popf
jno
das
jmp
pop
xchg
push
mov
push
jbe
negl
sarl
push
adc
ds
nop
xor
shr
xor
stos
enter
pop
and
push
pop
shl
sti
adc
xchg
cmp
and
push
nop
movsb
inc
pop
enter
xor
sbb
jge
inc
jno
sahf
outsb
add
mov
adc
iret
jbe
cmpsl
pop
imulb
cwtl
jp
jge
mov
push
lret
sub
jl
pop
add
cld
ss
lcall
mov
lcall
jge
push
mov
scas
sub
orb
outsl
mov
repz
pop
into
mov
lret
jl
pop
jns
lock
xchg
scas
scas
insl
add
iret
and
repnz
add
cmpsl
jle
fdiv
mov
bound
les
fistpl
mov
fldenv
pop
pop
mov
jno
rcr
lods
imul
loopne
add
jge
or
das
int
popa
inc
sbb
leave
mov
sub
mul
cmp
insb
add
int3
mov
andb
mov
and
ss
aas
aad
roll
mov
pop
roll
or
bound
xchg
sbb
xor
ljmp
mov
mov
mov
nop
ret
repz
repz
movsl
cmp
lods
add
fiadds
mov
adc
push
sub
ja
loopne
and
inc
movsb
cmp
daa
mov
flds
bound
jl
call
enter
aaa
or
jmp
repz
insl
add
adc
inc
popl
imul
xchg
jge
lahf
sbb
cmp
xchg
test
pushf
jg
cli
out
lret
sbb
and
rcll
mov
sbb
dec
mov
jecxz
and
sub
lock
sbb
lds
sti
into
xor
bnd
out
push
lods
xchg
dec
mov
cmpsl
aam
lods
inc
mov
mov
sbb
fwait
inc
std
dec
lds
and
les
jecxz
js
sub
fs
imul
pop
into
fwait
test
sub
ja
add
popa
mov
cmpsl
pushf
sbb
clc
mov
jmp
inc
ret
insb
sarb
loope
cmp
cwtl
mov
loopne
push
or
aaa
cld
xchg
mov
jnp
jmp
sbb
or
mov
enter
adc
sahf
pop
out
inc
lahf
cmp
imull
movsb
sbb
outsl
stc
mov
fldl
cmpsb
mov
lods
xchg
adc
mov
fwait
cmp
mov
xchg
roll
adc
or
outsb
sub
in
mov
fwait
lods
sbb
pop
out
lea
jbe
sub
jne
jmp
mov
imul
cwtl
adc
sub
push
cmp
fld
js
dec
cld
mov
mov
negl
jle
mov
mov
jnp
dec
jns
int
jle
mov
jo
outsb
out
fidivs
aad
jbe
xchg
cmpsb
out
cmp
mov
sbb
push
push
lret
jbe
pop
insb
pop
add
jne
fstl
push
out
lock
mov
sbb
aad
sbb
pop
inc
les
mov
out
outsb
popf
enter
or
mov
pop
pop
mov
adc
adc
int3
fsubp
pop
jae
add
je
push
push
mov
xor
and
lods
push
inc
xchg
jge
sti
jg
xor
mov
inc
popa
bound
xorb
push
and
push
data16
adc
or
cmpsl
leave
jo
ja
outsl
xchg
jle
sahf
pop
jl
test
fs
mov
fbstp
or
mov
mov
enter
sub
sarb
dec
hlt
mov
push
cmpl
scas
push
jae
fidivs
jmp
shrb
in
mov
pop
hlt
and
shlb
add
aam
test
or
pop
jecxz
ds
sbb
test
arpl
sbb
cmp
ja
and
lret
repnz
out
imul
push
push
pusha
cwtl
push
pop
add
dec
dec
dec
shl
dec
inc
aad
test
lds
outsl
push
cmp
sub
push
cmp
addb
test
lret
jae
dec
loop
adc
imul
xlat
mov
lcall
adc
jne
outsl
sub
pop
cmp
pushf
mov
repnz
into
addr16
or
pop
out
dec
insb
aam
stos
fadds
or
lods
inc
andb
sbb
sahf
out
cs
push
jmp
pop
jno
ja
mov
ret
pop
pop
xchg
mov
jge
lea
icebp
aad
xchg
adc
lds
or
adc
push
vmovdqa
pop
stc
push
mov
cmp
sti
je
mov
jbe
xchg
cmpsl
jbe
or
inc
mov
cwtd
cld
add
mov
sbb
shll
mov
mov
ficompl
mov
outsl
mov
push
test
cmp
add
dec
les
cwtl
outsb
fistpl
call
add
push
jge
mov
lock
int3
mov
dec
ficompl
fcmovu
daa
cmc
inc
xor
popa
enter
adc
test
push
mov
scas
inc
cmp
mov
cmpsl
or
iret
jnp
stos
xor
and
xor
mov
ret
out
addb
push
sbb
push
jle
and
ljmp
scas
dec
repz
dec
cmp
cli
insl
insl
loopne
jnp
cli
cmpb
xor
inc
mov
stc
nop
addr16
fmull
xchg
add
call
call
mov
add
cmp
cs
pop
mov
pop
push
ljmp
jno
ret
lock
addr16
mov
or
mov
into
xor
inc
jg
sbb
lock
mov
and
faddp
pop
adc
xchg
mov
addl
inc
lahf
testb
jns
adc
cmc
ja
int
dec
mov
add
loop
xchg
aaa
sbb
and
push
loopne
xlat
mov
mov
pop
subps
jnp
sbb
mov
jne
ja
jae
inc
add
inc
push
cltd
and
xchg
lods
push
in
sbb
lcall
pop
push
shl
adc
daa
jae
pop
adc
aad
test
fcoml
jnp
mov
mov
es
mov
mov
adc
scas
repnz
sbb
mov
int
arpl
loop
out
call
jmp
in
popa
inc
repz
jge
sahf
inc
mov
loopne
addr16
clc
in
add
inc
pusha
add
out
push
inc
imul
jbe
out
shl
rolb
sbb
jbe
ss
pop
enterw
xor
xor
push
sbb
push
in
bnd
movsb
xor
out
inc
flds
sbb
add
jno
lahf
mov
cmp
insl
cmp
mov
scas
sbb
pop
lods
push
in
fucom
pop
push
mov
ss
and
inc
cld
jne
jns
dec
inc
aaa
mov
mov
or
dec
or
fld
sub
outsb
pop
scas
sbb
mov
xchg
popf
adc
cmpsb
sbb
push
dec
enter
mov
subl
icebp
aaa
into
and
int
inc
add
and
and
xchg
in
fwait
push
stos
lods
adc
push
aaa
test
fildll
push
jp
dec
clc
push
movsl
sub
mov
shll
repnz
lods
insb
cmp
ficomps
test
cmp
cmp
sub
stos
leave
pusha
fdivrl
repz
call
sub
mov
dec
cli
sub
insb
cmp
popf
jp
pop
and
pop
jbe
popa
xchg
jmp
or
insb
or
cmp
push
mov
dec
push
push
push
sahf
mov
jae
sbb
mov
mov
pop
mov
dec
pop
sbb
push
sbb
pop
jnp
add
mov
jns
jecxz
push
lcall
scas
jno
sub
inc
cmp
sub
push
or
cwtl
push
push
or
jo
mov
mov
jnp
mov
add
add
movsb
imul
bound
pusha
or
jge
or
jnp
fiaddl
mov
add
push
push
daa
mov
rcr
jo
movsl
xchg
mov
je
adc
mov
test
ss
outsl
inc
sub
cmp
cli
add
jae
loopne
lret
fsubp
add
push
cmc
and
test
ss
jne
pop
cmpsl
sub
cmp
dec
pop
mov
mov
mov
inc
shl
dec
pop
stos
jge
pushf
sti
lret
mulb
dec
pop
adc
mov
add
adc
or
push
fwait
dec
mov
pop
data16
mov
adc
imulb
lods
and
and
jbe
dec
fmull
mov
imul
and
roll
lds
fistl
inc
pop
loope
or
sbb
push
adc
mov
ret
in
or
mov
fcompl
out
outsl
push
push
mov
in
jp
mov
xchg
cmp
cmp
call
or
cmp
aad
xor
rol
sub
jecxz
xor
mov
fistpll
jmp
xor
mul
jbe
cmpsl
pop
loop
inc
jl
cmp
jmp
scas
inc
pop
xchg
jp
sub
aam
jns
pop
stos
cmp
jo
gs
adc
fcoml
push
daa
ljmp
push
les
jp
imul
mov
cmp
rcrb
insb
add
arpl
pusha
aas
jb
in
adcb
add
xchg
arpl
xor
lods
sub
add
jmp
aas
cmp
adc
push
ja
sub
inc
inc
fsubl
fsubr
imul
mov
and
and
xchg
in
movsl
hlt
xchg
cmp
pop
addr16
mov
or
insb
xchg
sub
push
push
iret
out
jne
adc
cld
push
enter
mov
add
add
js
cmp
insl
mov
stos
jb
add
xchg
icebp
insb
sbb
insb
call
movsb
mov
jne
sbb
imul
jne
jno
mov
cmc
xchg
dec
lods
pop
mov
mov
aaa
stc
adc
cwtl
mov
xlat
out
roll
push
jbe
cmp
pop
dec
cmp
mov
cmp
pusha
js
mov
fistl
addr16
push
xchg
pop
lret
fidivs
mov
cld
inc
lods
mov
sarl
or
fdivl
jnp
and
mov
ret
inc
xchg
loop
shlb
jecxz
idivb
fiaddl
imulb
test
out
mov
stc
push
push
lds
out
inc
fsubrl
push
xorl
es
enter
fucomip
xor
test
pop
clc
ret
jle
clc
inc
inc
bound
jl
adc
jge
mov
fidivs
ds
gs
jb
inc
add
xchg
cwtl
cltd
bound
test
call
xor
loope
xchg
mov
scas
ret
dec
mov
sarb
sub
sub
inc
in
dec
cwtl
sub
dec
les
or
pop
push
imull
and
and
test
ret
test
ss
adc
lret
sbb
aam
sbb
and
ret
cmpsl
cwtl
xchg
jne
shll
add
pop
jns
out
sbb
and
mov
add
cmc
pop
aad
inc
shl
dec
adc
in
jns
jnp
movsb
jae
outsl
loop
pop
xor
mov
dec
mov
rcll
das
add
inc
loop
dec
xor
push
xor
xlat
aaa
in
add
xchg
mov
xchg
xchg
pop
sbbl
insl
in
scas
pop
enter
mov
fistps
sub
cmp
lret
jg
enter
cmp
fld
ret
scas
cmpsb
pop
or
ret
popa
mov
cmp
ljmp
push
push
mov
das
ret
and
movsb
mov
shrl
push
in
lcall
mov
mov
jae
sub
cmp
leave
fldenv
dec
push
movsl
xchg
cmp
jbe
sti
fwait
cwtl
dec
test
mov
sub
in
popf
cmc
ljmp
pop
fsubrs
movb
jl
xchg
add
xchg
jno
mov
adc
adc
inc
int3
in
pop
ret
push
fucomp
lea
sub
out
lods
sbb
aam
pop
and
sbb
mov
jp
pop
mov
or
pop
shll
push
mov
int
add
pop
clc
jecxz
popa
imull
xchg
jns
push
jg
jae
ljmp
cmc
les
adc
mov
jle
shrb
je
push
dec
mov
les
movsb
repnz
push
pusha
popa
inc
mov
test
lret
cmp
lds
fsubr
or
pop
fbstp
jg
scas
sbb
int
push
xchg
xor
dec
cmp
ret
lcall
xorl
mov
adc
rcrl
inc
mov
int3
push
inc
or
xchg
js
adc
jmp
daa
mov
bound
pop
out
in
test
lock
push
lret
add
pop
stc
sarl
mov
pop
int
add
cmc
lcall
stos
fcomps
mov
xchg
sbb
jae
in
arpl
xchg
popa
cmc
dec
push
cmpsl
or
sub
mov
loop
xor
pop
adc
add
dec
pop
int3
xchg
js
jl
jl
scas
jecxz
loopne
mov
rcll
jp
jp
sub
roll
xor
mov
test
les
push
in
cmp
out
fcmove
lock
xchg
pop
mov
push
and
pop
xor
push
mov
loop
mov
notb
add
cmp
xchg
cmp
inc
int
scas
ja
push
in
sbb
les
ss
jbe
pusha
sar
mov
or
cmp
aam
xchg
mov
inc
roll
movsb
pop
outsb
movsb
mov
jge
stos
lds
shrb
mov
sbb
fidivrs
mov
jp
mov
sbb
or
popa
out
mov
adc
lahf
dec
mov
les
in
mov
sbb
jnp
cmp
in
mov
and
cmpsl
loop
xlat
or
mov
cmp
pop
push
addr16
lea
loopne
stos
fbstp
adc
test
test
insl
jbe
pop
sub
push
mov
xor
subl
enter
jg
push
jb
ss
sbb
cld
test
popa
lods
sbb
xchg
mov
sbb
loop
and
pop
pop
fwait
or
call
jb
inc
popa
jg
shrl
sbb
sbb
idivl
pop
mov
es
fidivrl
fisttpl
sbb
cmp
jno
mov
mov
push
sbbl
jbe
push
testl
addb
lahf
dec
pop
xchg
xor
test
push
cmp
clc
mov
and
aad
cwtl
sbb
jne
jg
jno
xchg
test
mov
lock
or
mov
xchg
xor
xchg
sbb
cld
in
fstpt
movsl
sub
xor
sub
mov
hlt
push
and
shl
daa
outsl
loop
inc
or
push
js
inc
mov
dec
and
sti
pop
inc
mov
lods
jecxz
xchg
out
cmp
pop
addl
in
pop
push
or
decl
sub
adc
cwtl
xor
mov
ret
jnp
and
shrl
pop
add
lds
dec
or
les
testl
sbb
loop
and
sbb
in
cmp
xchg
jle
ds
fs
cwtl
out
pop
mov
iret
test
jno
inc
cwtl
shlb
call
and
push
and
sahf
stc
lea
mov
sbb
arpl
inc
fmuls
pop
push
ja
add
xchg
adc
sbb
pushf
mov
cmp
ds
push
andb
cmpsl
repz
je
mov
push
push
jno
mov
jnp
lods
pop
xor
inc
mov
iret
cmpsb
cmp
mov
pushf
dec
mov
in
sub
cmp
insl
add
in
test
or
sub
jns
adc
lret
leave
lret
cld
test
mov
jmp
inc
inc
scas
mov
out
push
jnp
inc
lods
ja
pop
mov
popf
lods
rcr
loopne
push
repnz
sbb
and
pop
mov
std
pop
filds
in
adc
add
xor
lea
xor
sbb
loopne
lods
lahf
mov
fistpll
sti
inc
adc
and
aaa
mov
mov
fsts
or
adc
add
xor
jae
xchg
dec
pushf
repz
mov
bound
ja
push
xlat
pop
in
push
xchg
inc
je
in
jg
xchg
mov
add
out
sub
dec
jle
mov
jae
inc
push
popf
jno
sbb
std
jb
pop
hlt
ret
jl
xor
notl
call
imul
fisubrs
mov
ja
push
sub
push
repnz
push
xlat
pop
adc
push
jmp
arpl
adc
inc
xchg
rcrl
ficomps
push
cld
xchg
mov
push
xchg
pop
mov
xor
stc
push
adc
call
orb
inc
pop
jno
cld
ljmp
sahf
addr16
aad
xlat
fisubs
inc
lods
scas
mov
and
mull
enter
fistl
les
cmp
mov
loope
xlat
mov
inc
popa
sub
inc
pop
rolb
std
int3
je
dec
xor
sarb
xlat
inc
int3
push
ljmp
cli
test
fldenv
or
dec
stos
push
jl
lds
imul
dec
lcall
inc
subb
xor
aam
sub
cmp
dec
rcrb
popa
push
or
sub
mov
xchg
call
push
lahf
mov
xlat
fs
pop
fsubl
lret
std
cltd
push
shrb
imul
int3
loopne
mov
mov
ja
inc
lods
andb
pop
sbb
ds
mov
and
cmp
insl
mov
mov
mov
sub
outsl
push
lret
jge
xor
popa
fnsave
movsl
dec
xchg
mov
xchg
sub
dec
mov
jl
and
push
cli
lods
jae
ficomps
pop
jno
push
mov
testl
cwtl
lock
shr
push
add
mov
stos
sarb
add
add
aas
xor
je
inc
mov
loopne
adc
ja
test
iret
movsb
aas
xchg
sub
sub
mov
mov
sub
and
mov
sbb
iret
push
mov
jb
pop
lret
adc
mov
hlt
lea
ds
fucomip
pop
daa
xchg
add
jle,pn
mov
adc
jns
fs
mov
nop
and
mov
aaa
lock
cli
test
pop
xor
insl
jns
inc
in
or
cs
cmp
dec
inc
lock
aas
xchg
clc
push
rcrb
out
call
lea
push
jns
or
sti
push
scas
ror
repnz
jmp
rolb
xchg
insl
mov
rol
push
aaa
push
scas
sti
pop
fcoms
adc
les
sub
add
pop
push
adc
push
imul
xor
sarb
mov
pop
lea
imull
ror
jb
gs
aas
aas
cwtl
aad
outsb
xor
les
movsl
fwait
adc
mov
xchg
xchg
xor
outsb
daa
lcall
or
xor
ss
xchg
push
ljmp
lea
in
ds
or
pop
cs
arpl
cmpl
dec
lahf
inc
sarb
out
xchg
pop
out
lret
dec
inc
cld
xor
pop
push
popf
or
out
xchg
lret
adc
jno
dec
icebp
test
and
sti
pop
imul
jo
imul
push
sbb
clc
xor
push
and
jl
cld
inc
xchg
popf
fstl
xor
xchg
add
shrb
jecxz
scas
xchg
xchg
loope
test
lock
sbb
jno
pop
mov
cmpsb
testb
lret
mov
mov
jb
xor
jge
push
repz
push
test
and
lcall
push
scas
pop
xchg
sbb
es
mov
loop
mov
movsb
in
add
imul
jne
pop
jno
or
sti
stos
pop
push
enter
fisubrl
movsl
pop
jbe
data16
sbb
add
cmp
jecxz
mov
insl
cmp
aam
jmp
fnstcw
loope
cmpsb
loope
mov
movsb
cmp
sub
adc
cld
adc
mov
jg
sub
repz
loop
sub
add
dec
daa
mov
ljmp
add
mov
std
and
and
roll
popf
mov
dec
bound
leave
mov
push
cmpsl
aad
adc
clc
shrl
mov
daa
mov
mov
jne
xor
adcl
shrl
pop
mov
mov
inc
out
les
jbe
data16
imul
pusha
nop
add
add
gs
mov
stos
negb
jl
test
mov
sbb
jae
xchg
lahf
gs
neg
mov
pusha
incl
mov
sub
sub
jp
dec
cmp
mov
pop
sti
and
fcmovnb
sub
adc
dec
lret
mov
jmp
push
in
jb
scas
sahf
or
sahf
pop
rep
inc
jmp
mov
test
xorl
cwtl
ss
mov
popa
cwtl
idivl
mov
add
lcall
xchg
clc
cmp
leave
out
clc
jmp
inc
scas
lret
pop
mov
add
dec
stos
push
or
xor
out
test
gs
jb
mov
test
lods
mov
sub
into
loop
and
cwtl
mov
inc
les
jno
cli
xchg
je
and
and
es
cmp
pop
outsb
add
or
mov
lock
xor
popa
cli
imul
adc
push
out
push
aad
in
xchg
repz
jnp
push
cmc
mov
dec
out
push
add
xchg
aad
xchg
iret
or
ret
sub
pop
xchg
imul
mov
inc
jge
aad
xor
and
dec
mov
push
fwait
push
push
sub
mov
call
inc
stos
addr16
fbld
pushf
push
dec
jae
mov
push
or
in
push
cmpl
adc
dec
and
iret
fucomip
push
sbb
jb
inc
add
push
stos
aas
aaa
or
cmp
loop
in
sbb
fistpll
repz
out
out
negb
jecxz
xchg
sbb
ss
call
xor
sub
xchg
jne
mov
inc
fidivs
outsl
ror
cwtl
and
loope
jne
mov
enter
xor
add
bound
mov
daa
pushf
gs
leave
mov
andb
or
mov
mov
pop
int
inc
shrb
pop
push
fwait
rcrl
sub
push
inc
pop
lock
inc
mov
and
fs
xchg
clc
sub
add
lds
sbb
jle
dec
add
inc
xchg
sti
repnz
inc
lods
inc
lea
add
sbbl
scas
dec
xlat
mov
stos
push
jne
cmpsl
vmwrite
push
pop
mull
lea
loop
push
mov
mov
mov
ret
sahf
hlt
xor
or
mov
pop
cld
lcall
push
inc
loope
mov
scas
fmull
pop
sub
and
int
add
hlt
xchg
insb
inc
mov
xchg
dec
inc
xor
xchg
add
adc
imul
add
jbe
fsubl
scas
out
negb
pop
sub
xchg
idivb
scas
pop
sbb
mov
sub
sbb
mov
lcall
pusha
push
popf
sahf
jns
jbe
shll
adc
xchg
jno
xchg
test
dec
lods
cmp
jp
push
jae
lods
xchg
aaa
sub
inc
pop
and
ds
xchg
fucomip
pop
push
leave
fsubrs
inc
inc
mov
jne
mov
mov
jle
not
inc
in
daa
aad
xchg
mov
or
fldpi
ja
xchg
xor
into
sbb
test
int
sub
lret
enter
in
sbb
aam
xor
test
lods
jne
ljmp
loope
filds
bound
and
es
add
js
scas
pop
vphadduwq
mov
scas
idiv
fs
push
das
cli
xchg
popa
shlb
fnstenv
pusha
or
aam
xchg
movb
pushl
and
pop
lcall
cld
mov
jo
mov
add
lcall
adc
push
mov
mov
addr16
lcall
sub
or
xchg
outsl
adc
sbb
inc
shl
jne
sub
adc
ret
jae
push
inc
or
mov
dec
sbb
ror
xchg
lods
fnsave
or
adc
sti
jl
sub
iret
lcall
push
in
push
je
nop
push
inc
bound
movsb
cmp
mov
lret
cmp
and
mov
les
stos
mov
mov
out
pop
jle
negl
jmp
push
xchg
mov
es
add
cmp
xlat
mov
nop
stos
sub
jecxz
jo
fwait
lahf
push
dec
push
lret
bound
jle
outsb
lds
jno
push
jne
cmpsw
jnp
and
test
sub
outsl
jo
int3
cwtl
decb
pop
inc
and
push
loopne
cmp
cmpsb
cld
movsb
lcall
das
std
imul
mov
call
out
push
insl
lock
jne
push
repz
je
mov
or
cltd
lock
sub
inc
cmp
scas
call
jp
sahf
xor
or
aas
xor
mov
popa
mov
fdivs
sbb
shrb
sbb
xchg
cmp
and
and
fldt
sbb
stos
fwait
add
dec
cltd
repnz
aad
pop
cmpsl
inc
adc
enter
xchg
add
aas
lret
das
jge
dec
lods
and
pushf
lahf
incl
iret
out
addl
scas
and
bound
mov
or
movsl
cmp
mov
jmp
cmpl
adc
xchg
add
adcl
lock
adc
fwait
es
inc
sbb
loopne
or
test
std
cltd
js
mov
jnp
jg
outsl
dec
mov
cmc
xchg
dec
enter
popa
movsl
int3
mov
fisubl
pop
es
sbb
dec
lods
sarb
push
adc
add
mov
fdivl
decb
xor
dec
jl
in
mov
rol
cli
cli
dec
pop
out
lret
inc
fdivrl
fisubrs
sbb
push
sub
mov
ret
notl
scas
pushf
xchg
sub
int3
stos
popa
xor
stc
adc
push
in
push
test
mov
pop
mov
scas
pop
mov
add
push
push
mov
jp
in
inc
std
xchg
fbld
fs
fisubrl
orb
ret
dec
dec
lahf
out
fwait
lods
jg
lock
push
push
sbb
pop
lret
jns
rorl
mov
aad
jae
mov
pop
jge
cli
xchg
stc
sahf
jno
cmpb
in
push
add
inc
stos
sbb
mov
add
pop
mov
popf
fldt
sti
xchg
inc
movhlps
aaa
addb
mov
push
xchg
cmp
cmc
mov
aam
cmp
test
push
cmp
or
dec
mov
std
xchg
jle
pop
xchg
scas
inc
cmp
pop
mov
scas
mov
sarl
cmpsl
lret
inc
in
jb
push
gs
push
in
or
cmpsl
sbb
nop
push
mov
shll
cmc
cld
mov
rorl
and
mov
pop
dec
loopne
or
imul
inc
mov
sbb
sti
data16
mov
fsubrl
mov
cmpsb
and
dec
jmp
fucomp
mov
les
xchg
lahf
inc
mov
mov
adc
or
mov
pop
pop
jno
cmp
scas
dec
xor
sub
inc
movsl
cs
add
loop
aad
fiaddl
repz
das
movsb
pop
lea
push
push
pop
bound
lret
in
xor
dec
cld
add
es
cs
call
add
pop
dec
jecxz
and
jo
leave
push
push
push
xchg
ficomps
sub
xchg
xchg
mov
jl
cmp
push
mov
xchg
fdivl
pop
mov
dec
fs
in
push
fldcw
fstpl
test
enter
ret
xchg
add
push
aad
daa
xchg
ds
fs
shr
outsl
and
cs
pushf
or
and
cmp
inc
imul
fcoms
movsl
dec
lea
shl
mov
mov
test
aad
cmpsb
push
dec
das
sahf
icebp
imul
pushf
adc
mov
in
pop
out
repnz
rcl
adc
lret
shr
aas
outsb
xor
xchg
xchg
ret
mov
pop
mov
dec
fistpll
mov
xchg
push
mov
inc
fcoms
ja
jmp
inc
sbbl
adc
jo
jo
pushf
and
add
fcompl
cs
test
adc
loopne
andl
jg
out
sub
test
mov
sbbl
dec
loope
push
adc
jae
imul
sbb
js
cmp
mov
xor
les
outsl
aad
push
imul
ja
mov
pushf
jg
push
dec
in
pop
sti
shl
dec
je
out
sub
movsb
test
dec
sub
dec
icebp
push
in
sub
xor
jl
jl
cmp
aad
xor
lea
dec
sbb
inc
jns
jne
loope
out
stc
xchg
pop
mov
inc
imul
adc
and
inc
and
dec
push
pop
sub
aad
sbbb
and
ds
mov
or
jge
or
mov
addr16
pop
aaa
in
cltd
xor
aam
add
mov
mov
test
stc
or
cmpsb
into
pop
mov
in
adcl
jbe
leave
xor
push
test
mov
jo
cmp
mov
imull
inc
xchg
data16
jno
xchg
out
xor
aad
or
shlb
out
inc
divl
xor
enter
or
imul
ret
sbb
arpl
data16
mov
cmp
xchg
jg
sub
dec
mov
lret
cmp
aad
rorl
icebp
ja
aaa
push
sti
test
loope
sahf
jge
setae
cwtl
es
testb
cmp
loopne
jns
xchg
ficoms
das
mov
mov
inc
xlat
mov
loopne
call
pop
hlt
hlt
addr16
jge
and
pop
inc
sbbl
xchg
sbb
addr16
rcl
mov
pop
imul
fldt
inc
lcall
cmp
scas
add
popf
xlat
clc
sahf
adc
sbb
test
sub
mov
mov
repnz
jb
jmp
adc
mov
mov
andl
and
int
rorl
fldcw
in
adc
mov
xchg
out
and
add
jmp
dec
imul
and
ja
subb
cmp
and
mov
jb
lock
inc
add
aaa
pusha
call
insb
mov
or
push
rclb
sub
add
sahf
lods
fwait
fwait
cld
outsl
and
add
sbb
cwtl
das
imul
lret
sub
mov
push
ret
stc
test
lds
xchg
out
outsb
fwait
ss
stos
in
sub
in
std
sub
pop
rorb
dec
dec
add
stos
subl
or
repz
inc
pop
lret
jge
jg
test
imul
mov
mov
rcll
popf
rol
ss
jp
outsl
daa
cmp
xor
fstpl
mov
push
bnd
iret
mov
cmp
xchg
das
push
pop
or
iret
notb
inc
cli
mov
bound
sbb
adc
pop
push
in
loopne
mov
sahf
adc
in
jnp
add
adc
in
pop
cli
mov
sub
and
popa
pop
clc
cmp
iret
movsl
add
hlt
insl
ds
xchg
inc
fwait
orl
cltd
mov
and
jnp
pop
add
insl
and
pop
or
in
loope
lcall
stos
aam
movd
hlt
cltd
push
jmp
pop
xor
push
cld
shl
les
mov
or
fstpt
jge
pop
test
test
lods
mov
shl
jge
hlt
mov
dec
in
test
lock
mov
inc
shlb
js
dec
stos
fimull
arpl
jg
push
or
pop
xchg
outsl
push
xchg
push
test
jae
mov
stos
jg
mov
sub
data16
lcall
push
pop
push
call
test
outsl
push
push
add
push
sub
xchg
sbb
dec
jmp
push
imul
aas
adc
outsb
rcr
and
sbb
jg
cmp
push
test
or
add
push
rclb
ja
mov
outsb
jl
add
xchg
and
sbb
int
inc
fiadds
pop
or
or
nop
das
movsl
leave
jb
div
push
sbb
ficomps
jo
sarl
pop
je
sahf
mov
cmp
and
inc
inc
push
mov
mov
jae
cwtl
mov
jg
add
rorl
inc
addr16
mov
enter
ljmp
push
sbb
xor
mov
adc
pop
sahf
test
pushf
xchg
aam
outsl
fldt
mov
cmpb
cwtl
movsb
ja
and
ja
je
jl
testl
testl
ficoms
dec
dec
inc
aad
popa
ret
aam
jp
jecxz
xchg
pop
fimull
hlt
jp
lock
pushf
xchg
pop
into
gs
sahf
stos
jecxz
xor
jne
into
push
repnz
sub
add
decl
popa
mov
sub
movsb
movsb
int
je
dec
sbb
fwait
xchg
adc
insl
test
sbb
mov
test
test
pushf
aad
pop
insl
es
adc
fmuls
inc
jge
xor
fdivrp
lea
stos
ljmp
insl
fadds
mov
insb
add
cmp
pusha
scas
inc
sub
and
pop
mov
inc
or
push
fcmovbe
push
pop
xor
repz
sub
pop
cmp
aaa
popf
xlat
pushf
fists
jecxz
jne
shlb
lret
fsubrp
xchg
orl
sbb
jecxz
push
icebp
ljmp
or
xlat
aaa
add
mov
lret
cld
fidivrl
hlt
loopne
in
dec
cwtl
pop
je
xchg
add
push
ficoms
xlat
dec
sbb
mov
xor
dec
add
inc
jp
gs
pop
adc
jae
scas
xor
adc
out
pop
xor
les
push
jno
test
in
int3
mov
hlt
lock
test
popf
pushf
sub
movsl
sarb
add
sbb
push
js
push
and
cmpsl
sti
insl
sbb
mov
pop
xor
pop
push
popa
into
aas
mov
loopne
mov
pop
notl
pop
adc
ret
into
and
das
push
pop
inc
lods
cmc
sub
les
int
mov
lods
rorb
call
mov
es
mov
dec
lret
fmull
mov
int
ja
aas
cld
jnp
cmc
lods
mov
out
xchg
subl
into
pop
push
out
cmp
cmp
add
shll
dec
lahf
push
dec
mov
std
fdivrp
aaa
dec
out
mov
scas
push
addr16
xchg
sub
out
mov
mov
ret
xor
repnz
fsubr
sub
and
dec
mov
shrl
mulb
arpl
stos
mov
and
shll
adc
add
inc
or
sti
cld
lods
pop
ljmp
pusha
or
and
loopne,pt
dec
out
add
nop
xchg
frstor
jnp
xor
jno
cli
cltd
scas
test
cli
xchg
and
std
xchg
enter
fisubl
jns
xchg
push
or
mov
into
test
mov
faddp
pop
sarb
jbe
stc
mov
jecxz
and
sbb
or
out
lds
add
rorb
jle
or
sbb
daa
mov
pop
jo
jnp
call
aaa
sti
inc
and
adc
filds
jge
jp
push
inc
sub
js
insb
xor
and
jne
mov
cmp
loope
mov
mov
out
or
fwait
push
and
loope
jno
nop
sub
push
outsb
sbb
fnstenv
or
mov
shl
xchg
loopne
lret
fnstsw
pushf
dec
loop
pop
fs
call
pusha
inc
sbb
pushl
lods
ljmp
inc
fdivs
pop
adc
subb
push
loop
mov
sub
fs
ss
mov
jb
cmp
jmp
push
imul
cli
mov
adc
rolb
cmc
loope
push
adc
inc
dec
or
sub
pop
dec
cwtl
pusha
fsubrs
mov
xor
add
scas
mov
inc
pop
mov
iret
push
loop
mov
push
pop
fcomps
shrb
mov
test
inc
aad
pushl
shrl
popf
loope
addr16
movsl
lret
dec
in
sub
out
add
inc
aad
jmp
cmp
sbb
or
dec
bound
mov
jp
sbb
scas
out
loope
cmp
out
jne
lcall
mov
sar
and
dec
push
jnp
imul
xchg
test
out
xor
sub
push
pop
mov
fldt
bound
adc
fs
jmp
imul
xchg
cmpsb
sub
mov
lahf
pushf
fsubr
sub
ss
in
push
jmp
fwait
and
push
cld
das
fisubrs
cs
inc
fs
sbb
xchg
pop
pop
mov
iret
cld
sbb
jno
cs
ret
ljmp
fsubr
loop
ret
int3
arpl
lcall
xchg
cmpsb
test
adc
daa
mov
fs
inc
lock
or
in
sbb
and
pop
out
aaa
out
xor
dec
mov
mulb
and
or
popf
sub
and
test
xchg
imul
mov
dec
in
push
jmp
stos
pop
inc
les
int3
jnp
or
mov
fdiv
sub
in
sbb
sbb
imul
add
sbb
mov
jp
inc
push
daa
insb
movsl
in
cmpsl
pop
jns
dec
lods
pop
xor
and
fsubl
cld
xchg
xchg
pop
add
into
gs
sahf
jno
add
repnz
stc
int3
or
stos
xchg
loop
std
adc
jo
push
xchg
int3
roll
xor
add
cmp
jl
jl
outsb
inc
imull
mov
push
mov
mov
les
int3
add
ficoml
mov
inc
xchg
jns
imul
inc
jecxz
push
call
mov
rorb
jbe
mov
or
push
clc
into
stos
mov
test
rcll
dec
in
or
enter
cmpsl
xlat
dec
dec
bound
fbstp
xchg
dec
and
push
roll
lret
cli
sub
rorb
int3
fists
pop
inc
je
fmul
stos
pop
mov
push
js
adc
leave
and
pop
dec
out
sbb
xor
or
and
push
push
mov
mov
arpl
lea
arpl
imul
push
or
popa
mov
clc
arpl
adc
pop
testb
iret
jl
jge
imulb
push
icebp
jle
lret
lahf
ja
sub
cli
pushf
sub
add
stos
xor
jmp
cmpsb
out
pop
xlat
sub
insb
cmpsb
test
xor
dec
mov
and
loope
pusha
xchg
mov
mov
push
adc
in
sub
xchg
xor
inc
aad
dec
mov
jecxz
rolb
mov
cltd
push
lret
or
push
and
mov
test
lock
jno
xchg
jo
and
inc
push
mov
cmovl
imul
pop
movsb
ja
dec
and
in
pop
push
in
add
cwtl
mov
cld
push
jmp
insb
dec
pop
and
mov
jp
push
nop
or
pop
add
inc
stc
mov
jne
or
xchg
adc
sub
lahf
repnz
push
stc
js
iret
cmp
in
outsb
loope
inc
enter
icebp
mov
mov
xchg
jecxz
mov
dec
and
call
outsl
cmp
insl
ret
push
out
addr16
xor
jle
jge
jbe
xchg
sahf
rcrl
rcrb
mov
or
cmp
xchg
cmp
mov
inc
iret
push
cmpsb
and
and
push
adc
pop
or
lods
mov
cmp
sub
add
push
jnp
lahf
pusha
sti
rol
or
fidivrs
xchg
fcompl
orb
test
inc
imul
fisubrs
mov
cli
es
mov
jmp
adc
jl
into
sub
mov
popa
push
leave
xor
pop
mov
cltd
jo
cmpb
bound
jns
adc
xchg
xchg
rclb
imul
sbb
mov
adc
leave
imul
outsb
loopne
pop
xchg
aam
dec
cmp
xor
lds
mov
cmp
jecxz
lahf
lahf
loope
cmp
rolb
add
int
jae
aad
or
cmp
insl
mov
dec
push
pop
sub
xchg
jno
push
iret
daa
push
lock
adc
cmpsb
call
cmpl
xchg
enter
shr
adc
sbb
cli
dec
mov
lahf
iret
mov
jne
jo
jns
sub
and
mov
clc
int
mov
mov
xchg
std
lods
dec
pop
shlb
and
lahf
cltd
jmp
push
cwtl
mov
mov
mov
cli
fisubs
loop
ljmp
dec
or
cmp
bndstx
repz
mov
xlat
cmp
imul
in
and
add
sub
sbb
test
lret
adc
sahf
lods
adc
mov
mov
cmp
xor
cli
outsl
mov
ljmp
jno
and
dec
inc
mov
push
sbb
lea
stc
or
mov
mov
shll
xor
pop
fidivrs
sbb
and
sub
jb
xor
and
mov
mov
mov
push
cmp
adc
inc
jmp
cmpsl
xor
inc
pop
jae
jle
mov
sbb
subb
and
out
ja
and
cmp
jle
je
aaa
popf
inc
inc
sbb
test
sbb
and
cmp
insb
jmp
pop
inc
mov
and
icebp
and
neg
mov
sbb
rclb
fnsave
inc
clc
push
push
cld
inc
mov
ljmp
mov
sub
jno
sbb
sti
adc
stos
sbb
jmp
cmpxchg
nop
mov
lahf
mov
lahf
mov
pop
scas
jae
pop
mov
into
push
adc
cmc
loopne
int3
add
sbb
cmp
mov
cmp
loope
leave
sub
adcb
cmpsb
push
aam
insl
jno
out
es
shrl
fsubr
mov
mov
and
int3
inc
dec
inc
cmp
pop
ret
popf
in
cmp
rorb
insl
cmp
sbb
sbb
cld
pusha
rcrb
cwtl
cmp
test
sub
fadd
or
dec
dec
adc
lea
gs
call
std
fistps
mov
sti
cmc
mov
setno
ss
montmul
cmpsb
adc
dec
pop
sub
cmp
sbb
ficoml
sbb
scas
mov
jb
rolb
imul
jbe
xchg
mov
rcll
sbb
stos
daa
sbb
jp
js
push
sub
enter
stos
inc
pop
add
outsl
daa
jl
dec
xchg
cltd
add
cmpb
pop
popa
xchg
pop
and
in
pushf
dec
aas
sarb
pop
pop
movsl
cmp
sbb
and
inc
push
cmp
sbb
je
xor
inc
xor
cltd
mov
dec
add
shll
call
lds
into
imul
fstl
rorl
lahf
notl
or
imul
std
mov
shlb
orl
jle
inc
shrb
add
cld
dec
adc
repnz
aad
out
in
pop
jmp
aaa
clc
cs
outsl
arpl
add
sbb
hlt
pop
lods
sti
imul
scas
or
mov
shlb
clc
pop
jp
sbb
mull
mov
aas
adc
mov
mov
imul
add
movsl
mov
or
loopne
lock
push
xchg
cmc
shll
stos
push
scas
adc
cltd
dec
jo,pn
inc
add
cmp
stos
int3
push
popa
notl
sub
mov
sbb
add
lea
les
sub
rcll
rolb
push
fs
test
mull
mov
push
add
lds
cli
push
xlat
test
and
dec
fisttps
push
in
ret
sub
pop
jmp
and
aaa
mov
scas
testl
div
ss
mov
lock
inc
xchg
mov
test
shr
jnp
fisttpl
cltd
cmc
inc
shlb
mov
mov
push
push
push
mov
loope
mov
sbb
mulb
and
cmp
sbb
mov
lret
int
xlat
ljmp
mov
cmp
cmp
out
add
pop
push
bound
xlat
mov
cmpsl
inc
movd
xor
push
int
insb
lret
inc
sbb
out
loopne
aad
subl
iret
and
sub
les
or
cmp
or
mov
pop
popa
and
mov
in
jmp
or
addl
or
mov
xor
mov
js
mov
aas
inc
js
lock
jmp
mov
movsl
push
fsubs
mov
bnd
mov
inc
fstp
popf
sbb
stos
or
stos
xchg
sbb
pop
int
sbb
rclb
and
shl
xchg
das
dec
push
pop
test
fidivrs
ljmp
cwtl
ljmp
jmp
mov
dec
clc
into
mov
add
jo
jg
inc
out
push
out
pop
mov
sbb
jl
roll
mov
dec
xchg
xchg
jle
cmp
gs
sub
insb
sbb
mov
or
daa
std
popw
mov
cwtl
xor
sbb
sarl
dec
cmp
adc
ret
in
mov
push
int3
lock
into
movsb
decb
int
xchg
pop
push
fisttpll
insb
or
outsb
in
push
dec
dec
add
mov
push
xchg
add
repnz
notb
sub
mov
jle
shrb
addl
mov
or
and
mov
inc
add
inc
fsubs
and
adc
adc
rclb
ss
sti
or
shlb
cmp
mov
add
jmp
pop
jg
dec
dec
sub
dec
cmpsl
push
hlt
bound
pop
jg
xchg
mov
add
mov
imull
inc
jl
movsl
sub
sub
push
and
xchg
or
push
addl
cmpsb
icebp
or
and
adc
push
xchg
jns
mov
pop
out
insl
in
sbb
cmp
fidivl
shrl
push
xor
xorl
jo
add
lods
mov
pusha
loope
lds
or
in
add
sbb
mov
mov
adc
imul
addr16
inc
clts
xchg
mov
push
pandn
jno
xor
and
imul
popf
lock
inc
shll
adc
hlt
dec
xor
lock
mov
ret
mov
mov
mov
mov
push
xor
mov
mov
dec
lcall
mov
pushf
movsb
mov
xor
mov
js
stos
sub
aas
cmpsb
nop
icebp
jb
mov
repz
cmp
add
pop
mov
call
cmp
lds
mov
and
rcl
cmp
mov
test
hlt
mov
push
xchg
in
enter
cmp
sbb
and
cmp
adc
ficoml
push
fwait
mov
stos
push
mov
cmp
lods
adc
test
sub
jb
scas
push
cs
sbb
and
mov
out
sti
subb
iret
sub
ja
jecxz
add
out
xchg
sti
jge
jns
jmp
jmp
adc
in
sbb
adc
inc
mov
lret
mov
mov
push
dec
out
cmpsb
pop
inc
xchg
inc
pop
icebp
jno
sub
sbb
push
or
dec
xchg
je
dec
out
add
test
push
xor
mov
sbb
mov
insb
aad
dec
popa
clc
jge
inc
dec
pop
adc
xchg
push
xor
inc
std
mov
cmpsb
jmp
add
dec
cltd
mov
cmp
adc
insb
push
mov
sti
das
mov
mov
lret
sbb
mov
cli
or
outsb
mov
std
and
sti
xor
int3
jb
imul
xchg
jmp
cmp
adc
nop
pop
cmp
es
clc
fldt
fidivl
inc
arpl
push
in
test
dec
pusha
cli
mov
daa
mov
sub
inc
lcall
andl
xchg
or
dec
push
jmp
faddl
stos
xchg
pop
jb
push
lret
stos
repz
mov
mov
adc
push
cmpsb
mov
mov
sub
mov
popa
out
xchg
inc
xchg
repz
in
mov
leave
andl
ds
cmp
clc
mov
int3
std
loope
xor
sub
imul
das
test
rcrb
dec
sbb
aad
cmc
push
popf
cmpsb
push
movsb
xchg
inc
adc
sub
sub
xchg
sub
cwtl
test
daa
push
out
test
mov
jae
add
dec
lahf
adcb
out
inc
mov
fdivp
or
mov
ja
das
ss
popa
push
cld
stos
lret
xchg
push
adcb
add
movsl
lret
int
jae
bound
out
dec
dec
or
aaa
data16
mov
dec
repnz
push
psubusb
mov
pop
imul
or
icebp
mov
cmp
ja
mov
arpl
daa
fiaddl
push
add
stos
jmp
or
sbb
sub
push
push
add
sbb
mov
clc
or
mov
roll
dec
divl
xchg
insb
cmp
in
ljmp
test
js
adc
push
inc
fcompl
xchg
cmp
add
adc
js
loopne
gs
dec
jnp
push
lods
outsl
in
jno
addr16
mov
push
jg
and
mov
xor
ljmp
cmp
add
jmp
sarb
or
jnp
cli
and
imul
pop
xchg
adc
lret
lahf
xor
test
mov
rorb
jbe
aad
mov
mov
scas
and
pop
or
xor
cmp
and
pop
notl
outsl
jae
cmpsl
mov
push
filds
aad
or
outsl
popa
sub
xchg
jp
fsts
shrl
cmp
pop
mov
sub
daa
fidivrl
sub
hlt
pop
jl
jmp
lcall
lahf
in
ss
xorl
outsl
fnstcw
shlb
xorb
xor
out
lock
pop
inc
adc
lcall
jl
inc
popa
mov
je
or
xorb
sub
stos
adc
imul
mov
lret
jbe
xchg
filds
dec
movsl
inc
push
pop
insl
sub
jns
rep
cmp
pop
rcll
sbb
adcb
push
scas
jge
loope
mov
icebp
pop
scas
pop
je
clc
cld
xchg
sub
xorl
mov
ja
add
cmc
fwait
cmpsl
sbb
jb
pop
movsb
movsb
jecxz
clc
icebp
pop
dec
das
shlb
xor
mov
sbb
jne
aaa
hlt
adc
into
nop
jns
shll
test
xchg
fimull
hlt
and
mov
push
mov
and
pop
outsb
mov
cmc
fists
mov
sbb
xchg
lret
mov
ficoms
xor
inc
push
rorb
pop
or
fbld
stos
inc
popf
je
push
out
add
jne
cli
aas
cmp
outsb
es
pop
xorl
xchg
sbb
out
test
pop
and
inc
popf
test
xchg
pop
cli
mov
xchg
test
mov
xlat
cmp
jg
jne
mov
sbb
jb
xchg
je
scas
aaa
lods
adc
outsb
lret
nop
sub
aad
push
jl
orb
jmp
ja
dec
jp
xorl
pop
pop
rcl
push
in
cs
pop
or
sbb
mov
insb
cmp
xlat
fcoms
stc
pop
scas
shrl
jo
cmpb
and
xchg
and
inc
push
pop
cmpsl
inc
neg
xchg
mov
call
lret
mov
cmp
mov
cmc
or
adc
divl
movsb
push
mov
lods
push
repnz
or
jmp
mov
inc
in
cld
dec
out
push
adc
lea
jno
das
ret
adc
mov
push
push
ret
pop
pop
jle
in
lahf
fists
push
sbb
aad
arpl
push
mov
cmp
aaa
mov
inc
push
cs
frstor
fcomp
and
test
cli
cmpb
lahf
or
push
lea
mov
mov
mov
sbb
dec
insl
ja
xor
mov
sub
ret
inc
pop
loop
shl
dec
and
mov
adc
mov
jge
jne
gs
lea
aaa
push
and
lahf
int
sbb
stos
xchg
jp
jl
xchg
nop
hlt
and
int3
test
gs
pusha
xchg
rcll
imul
dec
std
or
cli
mov
lcall
jg
xchg
and
inc
push
adc
lret
pusha
insb
inc
mov
ret
clc
ret
pusha
xchg
mov
dec
mov
cmpb
popa
mov
lcall
sbb
testb
mov
mov
sub
aam
in
cmp
cs
inc
mov
or
fdivrp
jg
jno
fwait
push
mov
jb
sub
test
gs
in
clc
adc
shll
int3
push
int
in
push
and
jbe
aad
mov
inc
pop
pop
movsb
adc
push
fld
and
and
jecxz
push
in
ret
fcomi
jecxz
xchg
adc
add
mov
inc
and
mov
cmp
lods
insb
adc
adc
movsb
bnd
cltd
test
sbb
out
cmpb
bound
shlb
sub
push
and
int
add
lret
add
nop
pop
sbb
mov
push
cmp
test
adc
negl
cmp
movsl
add
pop
jo
inc
jg
add
add
xor
dec
push
mov
cmpsl
loop
js
lods
mov
sbb
mov
xchg
xlat
pop
and
pop
sub
xchg
sbb
push
sahf
arpl
xchg
add
bound
xor
mov
push
cmc
push
in
jmp
mov
dec
adc
outsl
insl
sbb
mov
and
orb
xchg
ds
insb
sub
xchg
scas
cwtl
cltd
adc
fiadds
push
inc
popf
pop
lods
add
test
inc
sti
enter
jmp
jb
mov
insl
pop
push
rcll
add
inc
xchg
test
mov
stos
push
testl
or
jo
push
sub
add
jg
ret
fsubl
adc
ret
jbe
popf
test
mov
dec
pop
repz
push
push
mov
cmpsl
jne
and
dec
repnz
rorb
dec
push
sbbl
loop
sbb
jge
out
mov
pop
scas
test
lret
stos
cli
pushf
test
push
movsb
loop
sub
fwait
in
imul
dec
push
pop
in
fs
mov
movsl
loopne
and
cmp
mov
repnz
outsb
xor
scas
inc
fwait
in
push
jp
lcall
xchg
jge
test
sahf
ret
mov
ss
repz
and
xor
sbb
jl
mov
cmp
je
jne
mov
sub
cmc
or
enter
fcmovb
adc
xor
sti
test
ret
aam
clc
int3
push
shr
aad
imul
lea
add
ret
mov
int3
xchg
jno
xor
add
jge
call
jns
mov
fdivrl
int3
sbb
in
jle
cmpsb
pop
push
imul
out
pop
roll
mov
mov
inc
ja
cwtl
fldt
mov
inc
js
aad
add
int
loop
cmc
addr16
push
sub
jno
xor
xchg
das
and
insb
fdivrp
test
test
nop
cmp
pop
xor
sub
andl
xor
add
loopne
dec
sbb
xchg
hlt
xchg
int3
jo
jb
loopne
sub
stc
push
enter
xchg
add
hlt
jmp
stos
rolb
xor
loope
test
add
notl
xchg
pop
cwtl
stc
outsb
pop
lcall
loope
pop
movl
lods
dec
cltd
mov
and
lahf
mov
cld
stos
jle
xor
mov
dec
dec
mov
bound
mov
out
jo
sbb
sbb
lods
inc
es
sbb
mov
cltd
push
fiaddl
jmp
or
int
ds
lock
pop
inc
push
imul
pop
jmp
out
test
aam
mov
loope
jecxz
push
jl
call
mov
fldcw
mov
movsl
stos
add
test
mov
gs
test
sbb
and
mov
xchg
jnp
sub
dec
lock
cmp
dec
pop
decb
or
mov
adc
clc
dec
xchg
and
lds
addr16
mov
jp
mov
adc
les
lods
negl
mov
sub
and
pushf
divl
sub
and
cmp
xchg
adc
lods
mov
xchg
cmpsl
movsb
enter
int3
out
cli
std
lahf
ret
es
jno
lds
jno
and
pusha
repz
add
jne
or
enter
gs
adc
mull
jo
inc
bound
push
aas
mov
pop
cmp
and
pop
shrl
cmp
dec
sub
outsl
cmp
add
testb
aaa
pop
out
sbb
clc
mov
addb
inc
xchg
aaa
or
push
push
pop
out
mov
ljmp
xor
xor
lds
out
mov
loopne
subl
enter
push
jmp
cli
ss
cmp
mov
mov
pop
rol
bound
dec
mov
dec
shlb
dec
bound
in
xchg
sub
scas
call
lock
xchg
lds
xorb
pop
cmpb
mov
out
xchg
or
xchg
add
aad
sub
je
jnp
ss
out
adc
cli
jns
test
sahf
fistl
clc
in
push
call
mov
mov
push
push
jb
pop
test
icebp
aas
xchg
cmpsb
mov
push
adc
fnstenv
inc
dec
mov
testl
rcrl
loop
fadds
mov
mov
jg
mov
push
push
push
push
xor
ds
sub
or
rcrb
scas
mov
imul
adc
sub
cmp
xchg
imul
fnstcw
test
fcmovnu
je
shrb
adc
in
cmpsl
jmp
aaa
fisttps
pop
push
lods
lea
dec
in
cmpsl
xchg
inc
add
call
pushf
and
jne
insl
push
xchg
cs
or
ja
xchg
jmp
addr16
test
sub
adc
and
ds
or
push
or
movb
or
testl
mov
inc
stos
mov
adc
pop
outsb
mov
push
rcr
jnp
mov
push
pushf
pusha
testl
sub
sbb
lahf
inc
test
and
je
out
mov
inc
sahf
cmp
imul
xchg
ljmp
xor
sahf
push
jbe
pop
test
loop
fprem1
jae
sub
orl
aas
push
popf
dec
loopne
rcll
outsb
and
aaa
mov
ss
mov
pop
fdivs
sarl
push
in
and
ret
hlt
or
sub
movsb
sub
or
adc
adc
lret
push
sub
pop
loope
aas
ljmp
xchg
lea
xchg
out
push
test
stos
push
test
mov
loop
movsl
dec
add
sub
mov
cmpsb
sbb
test
xchg
and
lret
out
test
dec
stos
jmp
fs
aas
or
push
loope
sbb
xor
xchg
gs
dec
or
cld
aas
sbb
cmpsl
add
call
lahf
push
fwait
pop
stos
inc
push
sub
mov
push
xor
and
rcrl
inc
stos
sub
jg
call
aad
insb
and
cwtl
jae
jp
lods
in
shrb
stos
leave
mov
jmp
into
xchg
dec
mov
xor
mov
fldt
or
xchg
in
or
and
cmpsb
dec
ffree
dec
mov
xor
jbe
testl
push
mov
mov
jmp
out
call
dec
loope
out
sbb
push
push
lret
iret
and
mov
push
mov
outsb
xchg
inc
xchg
pop
mov
sarb
lods
mov
test
ss
sbb
out
jmp
imul
shrl
xor
in
leave
fisttpll
lahf
xchg
or
or
push
ljmp
dec
int3
sbb
mov
inc
fsubp
push
mov
add
pop
push
dec
arpl
push
js
xchg
or
popa
int3
push
mov
gs
andl
pop
mov
mov
inc
dec
stc
aam
ja
cltd
xor
xchg
jb
das
or
mov
dec
rorl
cmpsb
add
shrl
leave
aad
cmp
lock
inc
jb
pop
movsl
daa
pop
adc
out
push
push
mov
out
movsl
cmp
nop
or
jmp
push
jmp
or
aas
xchg
jo
pop
xor
xchg
sbb
shrb
mov
setp
loop
pushf
mov
cmpsb
jecxz
out
adc
and
or
enter
lahf
mov
add
mov
push
jo
mov
inc
inc
imul
jmp
daa
pop
lahf
or
push
lods
sbb
xchg
mov
mov
cli
out
jle
or
clc
popl
mov
insl
inc
aam
lret
out
data16
test
jbe
mov
xor
lahf
fisubs
cltd
loop
lret
mov
adc
pop
xor
loopne
mov
shlb
inc
das
mov
inc
sti
mov
aad
mov
lods
push
pop
push
out
nop
das
bnd
jno
cmp
movsl
js
pusha
pop
lahf
data16
push
lret
push
outsb
pop
call
pop
data16
sbb
mov
daa
and
fs
xchg
outsb
aaa
shl
xchg
inc
sbb
mov
dec
clc
inc
sbbl
mov
fbstp
push
movsb
add
cmpsl
ret
scas
gs
or
xor
inc
sub
inc
aam
adc
bnd
cmpsl
inc
paddusb
mov
insl
scas
loopne
ret
hlt
xor
add
xchg
push
push
lods
mov
push
out
mov
enter
mov
mov
hlt
jp
imull
out
xor
aam
xchg
mov
and
jbe
mov
fistl
aam
scas
sub
or
js
sub
aaa
cmpsb
add
jns
lret
es
push
or
je
cmpsb
inc
out
and
push
push
pop
sbb
inc
lret
lret
push
cmp
popf
add
push
dec
sub
lahf
into
push
xchg
inc
fstpl
mov
jae
lahf
negb
and
mov
insl
add
mov
sub
call
add
ret
cmpsb
adc
cld
shrd
enter
aam
lds
inc
jp
or
mov
ret
idivb
mov
mov
push
pushf
or
pop
mov
sti
mov
push
and
insb
fisubs
xor
out
mov
jae
inc
imul
pop
rorb
xchg
jle
cmpsl
stos
jbe
dec
int3
inc
jns
jae
sub
mov
insl
and
inc
pop
fsub
pop
lcall
and
dec
pop
dec
fs
sbb
fldt
inc
into
sti
cwtl
test
cli
mov
xchg
push
jg
sbb
insl
shl
sbb
enter
pop
arpl
js
jbe
dec
icebp
test
lds
movsl
xlat
push
inc
fiadds
add
enter
test
arpl
mov
push
mov
add
adc
push
dec
fcmovnb
mov
xor
stos
xchg
daa
jo
das
outsl
insb
scas
inc
js
dec
fstpl
xchg
add
xor
jb
mov
nop
lret
outsl
test
push
cli
and
add
es
inc
insl
negl
xchg
sbb
sbbl
bound
or
mov
and
xchg
in
mov
inc
jmp
ficomps
cmpsl
andl
adc
cmp
pushf
inc
aas
mov
mov
xchg
fistpl
mov
mov
add
lds
mov
stos
and
test
cmp
repz
inc
cli
movsb
xchg
xlat
data16
test
lds
mov
jbe
inc
fsubr
lock
dec
or
insb
or
xor
mov
push
lods
push
pushf
les
aas
mov
inc
pop
shll
dec
and
push
aaa
outsb
xor
jle
mov
or
sub
out
inc
fstpl
adc
mov
push
pop
cmc
xrelease
xlat
pop
sti
les
test
pop
insl
ret
add
fisubrs
pop
sbb
cltd
jl
cmp
sub
cmp
mov
cmp
or
fistpl
dec
and
pop
mov
sbb
jle
xchg
movsl
dec
and
fs
xchg
inc
into
and
push
pushf
cmp
imul
icebp
mov
inc
mov
in
icebp
or
mov
in
cmpsl
out
lcall
pop
or
xor
rcrb
cmp
dec
jg
pop
inc
cmp
enter
jp
call
mov
add
es
jb
lds
jbe
jl
xchg
mov
push
mov
cmpb
jo
pop
adc
pop
mov
or
mov
xchg
lods
pop
pop
push
push
cmp
movsb
lea
sarl
push
lret
out
cld
aad
inc
std
dec
pop
or
test
shll
mov
cld
outsl
imul
imul
repz
jp
repnz
dec
dec
cmp
xchg
sub
jns
xor
push
pop
push
dec
nop
jg
popf
mov
insl
lret
mov
outsl
jmp
cmp
dec
mov
cltd
xor
mov
fdivl
stos
rcll
or
jnp
add
xchg
fcompl
mov
xchg
daa
cmp
fisubl
cmp
mov
out
cltd
add
or
pop
inc
jmp
inc
inc
fldcw
mov
pop
popf
jo
ljmp
and
inc
int3
daa
ret
mov
mov
xor
in
mov
push
lret
lret
push
data16
push
mov
fiadds
push
popf
push
pop
fs
mov
repz
xor
push
push
out
sbb
adc
sbb
fstl
push
xor
pop
leave
sbb
sbb
outsl
dec
jge
ja
cmp
mov
bound
into
jbe
add
insb
ds
cmp
insb
jecxz
push
fstpl
out
aaa
mov
mov
clc
loope
jnp
xor
add
or
aad
dec
outsl
loopne
movsb
adc
sub
stc
or
inc
push
decb
and
mov
das
adc
add
cs
lods
jbe
das
push
jne
inc
js
cmp
xlat
lret
jb
jnp
scas
frstor
sbb
pop
mov
xor
outsl
daa
insb
xor
fnstenv
movsb
inc
cmc
mov
or
mov
adc
pushf
jl
insb
mov
sbb
outsb
ret
mov
in
loope
loope
fidivs
push
insl
outsb
or
fstpt
sbb
xchg
add
mov
stos
jne
cmpsb
cmp
in
test
shrb
adc
adc
push
push
jbe
int
push
aas
rcrl
xchg
inc
out
sbb
pop
push
in
roll
cltd
add
adc
js
lcall
lods
popf
or
out
pop
insb
imul
and
xchg
aad
push
jo
cmc
jne
sub
pop
and
lret
cld
dec
stos
cltd
pushf
imul
cmp
in
xchg
mov
roll
stc
iret
sub
and
js
and
lea
cld
jl
push
out
popf
sbb
dec
pop
outsb
add
sete
jae
sub
lods
push
popa
pop
push
sub
and
cmpsl
test
lds
test
mov
inc
jns
push
inc
mov
xchg
xchg
add
ret
jo
sbb
mov
ss
das
cli
sub
gs
icebp
inc
rol
dec
adc
data16
int3
and
push
ret
in
out
jo
jns
rol
xchg
mov
loope
shrb
lcall
test
jae
stos
inc
or
out
out
lods
mov
add
sbb
sbb
dec
in
xchg
out
mov
or
pop
xor
jo
or
js
cltd
mov
cli
movsb
es
push
add
je
xchg
push
inc
inc
into
inc
ljmp
loope
mov
cmp
push
out
jne
adc
rolb
mov
lock
add
lods
fcoml
sbbl
imul
sub
shll
lea
push
mov
xchg
inc
outsb
mov
in
fimull
stos
insb
ljmp
sahf
mov
add
mov
lret
test
mulb
and
leave
xor
pop
push
popf
pop
stc
xchg
pop
cmp
lock
sub
push
or
test
icebp
xchg
xor
xlat
mov
inc
pop
mov
inc
and
arpl
mov
mov
cmp
stos
pop
mov
andb
mov
sti
repz
xor
rcrl
lock
fbstp
cmpb
pop
loopne
movsl
adc
int
and
pop
shll
rcrl
add
test
jns
sub
in
fadd
divl
ds
cltd
aad
jg
cmp
cmpsl
arpl
add
pop
negb
sbb
mov
mov
add
ljmp
outsb
rclb
pushf
push
fs
aad
jg
dec
pop
sbb
loopne
cld
loop
mov
lods
mov
push
mov
dec
pop
mov
add
sbbb
out
cmp
cmpsl
push
inc
sub
clc
cmc
adc
jmp
ljmp
inc
fsubrl
mov
cmp
and
js
je
es
or
in
sbb
das
pop
sarl
push
lods
fwait
pop
sub
push
xor
frstor
lods
lret
ss
inc
mov
cltd
mov
and
push
mov
test
iret
cmp
jmp
nop
jns
stos
mov
push
or
pop
cltd
push
ds
popf
mov
fisubl
or
xor
dec
cltd
pusha
mov
dec
jmp
mov
xchg
nop
out
divb
mov
ds
pop
ds
leave
push
cmp
mov
push
and
popf
movsb
iret
mov
and
imul
push
sbb
adc
or
out
lcall
mov
arpl
loopne
lods
fsubl
xor
pop
sbb
cmpsl
cwtl
mov
cs
push
repz
arpl
mov
dec
push
in
test
inc
je
cli
test
ret
mov
addl
shll
repnz
ljmp
mov
inc
dec
push
mov
inc
cs
out
out
fldcw
xchg
dec
mov
gs
int3
scas
inc
inc
gs
into
mov
fcoml
mov
test
aas
or
jo
stos
mov
jno
std
cltd
aas
mov
in
test
icebp
lahf
stos
push
mov
in
stos
ret
aas
jne
out
fdivl
insb
fsubr
shll
xor
mov
or
je
push
cs
cmp
mov
mov
sub
inc
jb
ret
xchg
jp
xchg
cwtl
rolb
out
mov
add
mov
je
mov
push
adc
fwait
push
leave
test
cltd
psllq
sahf
fsubs
or
xor
repz
or
pop
and
sub
test
xchg
sub
or
dec
rcrl
xor
out
imul
mov
xchg
fnstenv
scas
imul
push
mov
xor
fists
xlat
inc
dec
xor
jmp
sbb
sub
es
jmp
push
xchg
xor
jmp
sbbl
xor
nop
xchg
aam
mov
test
leave
pop
leave
push
or
sub
and
mov
mov
out
jp
cld
mov
movsb
mov
push
cmpb
sbb
stos
dec
cmp
sahf
and
iret
ljmp
jge
jmp
push
or
pop
xchg
cmp
mov
inc
cmp
filds
adc
add
nop
dec
mov
aas
test
mov
dec
orb
inc
push
test
or
repz
call
cmp
bound
jb
push
cmp
mov
push
mov
cmp
lods
lret
bound
push
jae
sarb
sub
addl
icebp
cmp
loope
xlat
pushf
dec
dec
stos
inc
mov
push
arpl
je
mov
pop
cmc
mov
out
jmp
or
add
es
test
nop
inc
sub
stos
scas
loopne
in
inc
scas
fnsave
add
jbe
stos
cmpsl
or
jg
push
out
mov
aas
and
je
jo
push
mov
pop
test
movsb
pop
push
pop
cmpsb
cmp
data16
pop
pop
lods
mov
pop
fidivrs
loopne
pop
ds
bound
mov
add
lcall
test
std
mov
push
xor
mov
inc
lret
adc
jbe
push
movsb
push
fld
popa
inc
sbb
loop
mov
jbe
aas
mov
sbb
shr
or
inc
or
adc
cmp
in
cmpsl
scas
mov
inc
add
aas
sbb
push
andl
aaa
cld
and
inc
push
or
xor
movsl
ret
sub
push
icebp
adc
shlb
ror
xchg
push
pop
out
inc
add
loopne
cmp
jnp
sub
mov
mov
or
and
pop
mov
xchg
mov
cmpsl
mov
inc
das
inc
sub
je
lret
mov
adc
cli
fwait
andnps
adc
fwait
jne
mov
sbb
mov
int
cmc
scas
sub
cld
inc
sbb
add
addl
jg
loopne
and
movnti
jecxz
fstpl
loope
add
fstpl
cmp
es
popf
repnz
mov
sbb
mov
int3
daa
add
inc
mov
out
inc
push
or
outsl
insl
add
adc
fs
cmp
subb
add
loope
xadd
sahf
repz
mov
lods
or
dec
lds
or
jbe
es
ss
sahf
clc
clc
inc
adcb
push
inc
pop
adc
gs
in
in
insl
jbe
dec
test
leave
jns
mov
xchg
pop
cmp
add
xchg
push
sub
loopne
icebp
divl
xchg
nop
pop
dec
pop
cmp
addb
mov
pop
cmc
xor
jl
imul
sar
lds
rol
sbb
sbb
test
sbb
ljmp
xchg
add
je
mov
cld
aad
dec
dec
lods
pusha
xchg
jae
mov
xchg
sbb
sbb
popl
jae
loop
aad
inc
ds
xor
shlb
adcl
lock
push
add
insb
ja
sahf
leave
gs
xchg
xchg
addr16
in
or
inc
and
aaa
nop
push
cld
inc
dec
cmpsb
std
int
lods
jno
std
cltd
bound
cmpsl
repnz
add
std
jbe
add
pop
adc
outsb
adc
lods
incl
inc
int
jge
daa
stc
fistpl
nop
pop
cs
icebp
cmp
cmp
mov
dec
pusha
inc
xchg
mov
push
daa
outsb
inc
pop
cld
lcall
push
mov
dec
jmp
pop
shrl
add
lahf
push
sub
sti
push
lods
mov
dec
add
loop
dec
mov
dec
ret
fucomi
lret
inc
shrb
mov
sbb
leave
imul
push
inc
add
mov
stos
ds
sub
sbb
out
addr16
enter
stos
xchg
xchg
pop
sub
xor
xchg
std
xchg
push
sub
cld
xchg
inc
adc
popa
sbb
sub
inc
push
dec
cmp
iret
mov
aas
rolb
es
cmp
sahf
adc
ret
in
inc
xlat
sbb
bound
push
sahf
pop
sbb
xchg
sub
test
cmp
mov
mov
mov
addb
xor
and
aad
test
push
sub
ret
ret
fidivs
push
decb
pop
jg
adc
pop
sbb
inc
xlat
cwtl
ds
sbb
pop
in
fsubrs
inc
cmp
xchg
pop
and
gs
cmp
jmp
in
jg
testl
cld
test
push
sbb
dec
clc
jae
adc
ret
jo
mov
mov
imul
pop
pushl
popa
jnp
stos
mov
xor
mov
inc
mov
stc
push
inc
push
xchg
daa
ja
pop
jb
mov
jl
repnz
ret
incb
in
fnsave
lods
push
inc
inc
pop
jle
mov
ljmp
adc
and
inc
sbb
fdivp
add
repz
daa
js
xor
mov
mov
or
fisubrl
test
mov
leave
outsl
cmp
loopne
lret
sbb
xchg
add
jo
stc
cmp
push
nop
jg
shrl
loop
mov
push
rcrl
pop
aas
add
dec
xchg
cltd
mov
cmp
cmpsb
addr16
push
push
jo
bswap
aaa
flds
scas
in
inc
in
es
push
into
mov
xlat
cmp
fwait
adc
stc
inc
mov
pop
or
push
mov
out
push
jne
cld
or
xchg
lcall
jg
aas
daa
fbstp
outsb
and
xchg
pop
mov
xor
and
fistl
roll
sbb
cmp
or
push
or
arpl
in
movb
test
xlat
ret
adc
jns
xchg
fbld
inc
add
loope
mov
xorb
insb
cmpsl
xor
add
add
adc
xor
push
pushf
sub
push
pushf
loope
sahf
push
xor
call
mov
mov
push
sahf
and
cmc
push
jno
shr
jle
rcrb
mov
divl
xor
jo
fwait
mulb
je
cmp
daa
dec
je
mov
fcoml
bound
inc
call
stc
cmp
shlb
popa
sbb
push
pop
xor
and
push
inc
push
pop
inc
std
push
xchg
and
push
movsb
sbb
fs
or
loopne
cmp
add
movsb
inc
adc
clc
sbb
cmp
rolb
mov
push
in
fcoml
gs
popf
xor
test
jo
icebp
std
lods
and
clc
aaa
xor
std
xchg
mov
push
mov
xchg
jo
push
gs
dec
loope
xor
cmp
ds
push
or
or
scas
ficompl
mov
fdivl
fs
jle,pt
mov
fsts
lods
xor
or
movsb
mov
sbb
inc
add
xorb
lret
and
fists
pop
imul
xchg
or
call
dec
dec
ljmp
sub
lahf
pop
inc
jmp
ja
and
jnp
mov
stos
or
push
jge
push
sub
hlt
inc
push
scas
test
lds
out
into
push
xor
jbe
mov
jecxz
imul
notb
mov
in
mov
pop
imul
dec
mov
pop
outsl
jecxz
mov
out
loopne
out
inc
push
std
leave
and
jae
xor
test
iret
fidivl
jbe
das
pop
lods
clc
lods
rcl
sarb
lds
xor
sbb
cld
sub
inc
test
lock
push
aas
cmp
pop
inc
dec
fildl
push
add
push
adc
pop
jl
sbb
ror
lods
or
sub
cmp
mov
dec
push
ror
jae
xchg
hlt
mov
mov
jmp
shrb
cwtl
dec
mov
aam
outsl
sub
pop
call
xchg
xor
fisubrl
ss
mov
xor
mov
jmp
mov
aaa
push
outsb
pop
out
inc
jno
fdivs
xchg
js
jle
mov
xchg
inc
in
ud2
in
in
fidivrl
xor
aaa
mov
jecxz
inc
jecxz
and
or
dec
pop
addr16
xchg
clc
leave
mov
aam
xchg
daa
mov
lahf
push
mov
adc
xchg
stos
gs
loope
psllq
pop
sub
int
fcomip
lock
adc
dec
fildll
jne
jbe
iret
out
push
jmp
subl
sub
clc
pop
lret
lds
divb
fsub
xchg
push
xor
xor
lds
jns
jno
inc
fwait
test
gs
stc
push
iret
mov
or
pop
hlt
and
push
mov
addr16
push
jp
and
sub
adc
and
inc
stos
pop
cmp
cmpl
mov
vmovntps
fnstsw
rclb
push
daa
mov
sub
dec
nop
jae
add
jbe
or
jnp
sub
jp
ljmp
mov
mov
ret
rol
imul
sub
les
icebp
push
jge
mov
or
je
popa
jne
jle
push
xchg
dec
pop
cli
mov
imul
sbb
ja
push
jae
cltd
fmull
mov
in
lcall
movsb
xchg
aaa
add
xor
pop
icebp
adc
ret
jns
stos
inc
push
cltd
and
inc
pop
sti
aad
mov
std
xor
jecxz
ds
sbb
pop
repnz
mov
loopne
push
loope
mov
lahf
xor
ret
sub
out
push
mov
adc
outsl
jl
adc
jnp
pop
xchg
jae
sbb
jecxz
mov
sub
add
pop
hlt
push
dec
and
int
mov
fmull
movsl
mov
cwtl
sahf
clc
out
add
repnz
ljmp
dec
ja
mul
cmp
mov
add
in
fistpll
sti
test
xchg
mov
ljmp
pop
movsl
cmp
mov
ret
sbb
mov
mov
or
jne
shll
xchg
imul
data16
int
dec
xorb
pop
dec
pop
add
int
xor
pop
mov
dec
loop
mov
mov
mov
pop
cld
outsl
inc
ret
ficoml
call
push
cli
sbb
mov
rclb
mov
xchg
push
mov
push
icebp
sahf
outsl
pop
stos
sbb
adc
push
loope
adc
imul
in
dec
sbb
ret
repnz
add
enter
and
lds
das
pop
push
push
adc
cs
cmp
imul
pushf
dec
arpl
push
jo
inc
push
xor
or
adc
and
pop
lock
cld
in
test
test
mov
add
aaa
ja
stc
push
pop
pushf
sbb
ss
add
jno
das
movlps
test
lahf
inc
loop
lret
sub
mov
cld
inc
js
xor
fsubrs
sbb
pusha
jo
daa
fadds
mov
mov
outsb
fdivl
xchg
rcr
es
ss
movsb
sub
jne
sbb
sbb
aam
data16
xlat
cld
bound
cmp
adc
push
adc
pop
imul
testl
enter
movsl
lcall
add
jbe
std
imul
push
inc
jne
dec
das
jmp
data16
dec
test
out
cli
push
lods
shrb
jb
cltd
cwtl
push
dec
fld
cmp
fildll
mov
lret
mov
lock
adc
mov
jno
cmpsb
in
xchg
das
mov
insb
inc
push
aam
in
nop
xchg
das
add
and
mov
fxch
xchg
pop
jb
sbbl
pushl
aas
in
or
in
pop
das
push
cwtl
insb
jle
cld
sbb
inc
xchg
dec
out
in
out
pop
int
jmp
push
mov
push
test
sbb
mov
das
cmp
popf
int3
push
xchg
out
lods
addr16
jecxz
lock
loopne
orl
mov
test
ja
fucom
in
mov
and
pop
stos
jbe
aas
rcrb
loop
jae
sub
add
mov
pushf
cli
mov
loop
push
mov
mov
add
xchg
jge
mov
mov
pop
scas
imul
xchg
dec
push
inc
jecxz
push
sub
sub
fdivs
add
xor
inc
mov
push
inc
fnsave
pop
sbb
in
insb
in
mov
xor
push
add
in
pop
icebp
jnp
stc
enter
std
nop
cmp
sarb
nop
xchg
outsl
jnp
mov
lcall
int
out
test
leave
lods
mov
push
das
test
sbbl
xchg
mov
jb
lahf
dec
mov
lret
push
mov
mov
lock
adc
inc
inc
hlt
jns
push
int
mov
or
test
out
jmp
aaa
and
mov
mov
xchg
mov
stc
jbe
outsl
and
adc
ja
mov
std
test
and
lods
cpuid
sbb
jno
shrb
mov
or
push
and
xchg
rcrl
cmp
mov
jecxz
in
js
pop
add
rcrb
cmc
mov
xor
mov
and
adc
jecxz
jl
mov
or
xchg
adc
addr16
pop
or
jecxz
jns
cmp
popa
adc
xor
or
cpuid
xchg
pop
jl
test
mov
and
rcrb
jp
dec
lods
push
mov
xor
in
mov
push
jae
lods
fstpt
xchg
in
dec
pop
pop
pushf
cmp
mov
pusha
xor
js
pop
pop
xchg
out
sti
pop
repnz
xchg
pushf
xchg
mov
xchg
pop
ja
dec
add
hlt
into
dec
scas
jb
insb
imul
testl
push
mov
jge
orb
push
shrb
sahf
sub
or
mov
mov
icebp
cmp
test
fisttps
sub
lcall
stos
cld
xchg
fnsave
sahf
xor
push
and
and
enter
in
arpl
or
xlat
ja
ret
jle
gs
enter
scas
adc
lods
les
call
shll
fwait
sti
pop
leave
lret
and
in
les
mov
xchg
mov
sti
mov
cmp
pop
lods
rolb
lcall
mov
adc
push
xchg
pop
nop
jmp
xchg
repz
pop
mov
mov
add
ja
add
repz
mov
jo
dec
gs
aaa
mov
xchg
jmp
shr
or
dec
pop
push
sub
pop
or
lret
frstor
mov
mov
sub
dec
scas
daa
mov
dec
adc
data16
or
repz
mov
test
sti
adc
add
test
inc
jne
mov
xchg
sub
dec
int
pop
dec
mov
mov
fsubs
mov
inc
popa
les
dec
or
bound
adc
lods
push
cs
aas
lcall
cmpsl
cmpsb
dec
test
xchg
cmpsb
xchg
jle
imul
sbb
pop
adc
test
push
add
into
cltd
fdivrl
lret
cwtl
lods
rcrb
push
push
dec
roll
mov
push
mov
out
pop
add
inc
scas
dec
inc
dec
popf
mov
jnp
and
out
pusha
in
ljmp
out
push
jle
sub
xor
pop
mov
loopne
and
cld
fnstenv
pop
add
dec
popa
cmpsb
mov
adc
cmp
in
adc
sub
dec
inc
fwait
mov
mov
push
xor
orl
fiaddl
scas
fcompl
or
cmp
adc
cmp
stos
push
xchg
test
mov
leave
jo
ja
mov
lea
es
push
pop
aaa
add
pop
pop
dec
push
jmp
loopne
jo
loop
push
cld
or
push
adc
sub
or
mov
mov
aaa
mov
sti
or
push
and
mov
ret
adc
das
int
xor
xchg
mov
ret
sub
inc
push
fisubs
and
inc
hlt
out
cmp
loopne
add
fmull
xchg
push
iret
xchg
mov
cmpsl
in
cld
dec
aaa
call
sbb
jno
ljmp
dec
fcompl
out
dec
faddl
inc
sbb
lahf
jae
push
bound
fdiv
sub
fdivrs
adc
mov
pushf
test
xlat
cltd
pop
and
lahf
negl
imul
adc
jle,pn
clc
mov
sub
inc
inc
ret
jnp
jns
adc
cwtl
out
mov
loop
xor
push
or
cli
push
and
mov
adc
push
lahf
jnp
mov
aam
movsl
mov
sub
mov
lods
mov
fldl
inc
mov
out
mov
je
add
mov
adc
xor
adc
sub
inc
xor
fldl
std
or
out
xchg
shrb
lcall
dec
cmp
ret
sbb
gs
cmp
inc
cwtl
pop
into
mov
or
fs
pop
fs
or
cmp
les
pop
das
cmp
scas
mov
stos
cmpsb
call
dec
or
ds
jns
fisttps
lock
daa
mov
pop
xor
ret
xor
out
mov
sbb
jb
das
adc
test
lods
ljmp
and
dec
int
adc
or
cmpsl
ret
pop
dec
movsb
ret
repnz
sahf
aad
sub
sbb
add
inc
mov
lret
cld
mov
stos
cmp
out
aaa
mov
loop
shrl
loop
inc
inc
inc
inc
pop
mov
mov
cmp
int3
xor
mov
out
pop
imul
pop
testb
das
mov
mov
add
mov
popl
cmpsl
adc
and
sbb
andb
aaa
ljmp
push
mov
dec
cs
fisubrs
mov
pop
lret
wbinvd
jo
cmp
push
fldenv
clc
imul
cld
outsl
rolb
mov
or
loopne
jge
xchg
lods
cmp
nop
pop
xchg
pusha
int3
mov
jecxz
jne
pop
cmp
mov
xchg
add
mov
adcl
int3
ds
or
cmp
mov
mov
les
push
xchg
test
lds
aam
jnp
jb
movsb
fldt
icebp
maxps
imul
mov
sbb
push
sub
mov
jmp
or
xor
stc
or
xchg
push
cwtl
dec
push
clc
in
inc
and
outsb
mov
inc
fs
fs
int
lcall
add
push
push
jmp
mov
pushf
or
lea
ljmp
push
lcall
push
push
xor
xchg
adc
mov
mov
adc
icebp
cwtl
xor
mov
adc
pop
imul
imul
in
fstps
mov
cmp
idivb
xor
mov
xchg
imul
jno
dec
call
inc
inc
dec
aaa
outsb
sbb
loopne
shr
aaa
push
mov
add
inc
sub
pop
xlat
cmpb
sub
test
adc
fsubrp
jnp
std
add
add
shl
sahf
or
cli
pop
out
rorb
cwtl
clc
cmpsl
and
mov
xor
mov
xchg
std
mov
and
dec
lcall
push
dec
pushf
lret
int
rclb
fnsave
mov
cmp
xor
pop
lea
dec
jns
out
pusha
pop
jmp
loop,pn
lahf
imul
add
dec
inc
or
sti
cmp
in
mov
sub
jo
je
mov
and
pop
std
jnp
movsl
push
rcl
jno
pushf
jns
pop
out
sbb
addr16
or
mov
test
stos
pop
mov
jmpw
dec
stos
imul
sub
arpl
cmpsl
inc
sbb
adc
jb
mov
mov
aas
nop
daa
fimuls
scas
mov
mov
fucomp
jp
lcall
lea
cmpsb
lds
rorb
lds
sub
push
jmp
add
pop
jmp
lea
and
mov
push
icebp
mov
and
mov
insb
lahf
inc
dec
push
int
sbb
das
pop
cmp
js
push
insl
test
ret
add
xchg
mov
adc
mov
cmp
outsl
jecxz
movsb
mov
adc
cmp
mov
jns
adc
xlat
std
cltd
mov
shll
scas
jo
cmpl
sbb
push
subb
push
cmp
shrl
lret
rcrl
pop
sbb
insl
fbstp
stos
dec
rorb
or
mov
cs
pop
repz
inc
fwait
pop
int3
fdivrs
lcall
or
sub
push
out
jbe
fists
jo
hlt
into
dec
dec
rol
jecxz
lods
inc
bound
flds
jne,pn
fnsave
fldt
fs
test
aas
cmp
loope
xor
ja
dec
sti
lcall
cwtl
das
xchg
ss
add
andb
dec
mov
xchg
loope
xchg
pop
sub
je
jp
adc
dec
movsl
cmp
add
ret
add
add
and
jecxz
xorb
adc
imul
es
pop
lret
sti
cmp
test
clc
fnsave
jae
jb
sub
es
mov
cli
hlt
xchg
mov
push
hlt
xchg
cmp
imul
loop
ret
xlat
dec
cmp
outsb
notl
push
shl
repz
daa
call
fisubrs
test
call
and
mov
pop
jno
dec
out
xchg
pop
xor
sub
mov
cmc
mov
iret
cmp
scas
jl
sub
popf
sbb
lcall
xchg
outsb
jae
test
dec
sbb
pop
aas
or
push
and
int
stc
sub
rorb
xor
fbstp
push
bound
insl
xrelease
and
sbb
or
bound
bound
and
sahf
ficompl
or
rcrl
test
inc
fmulp
dec
or
ss
rcrl
jge
mov
leave
or
lods
mov
pop
sub
or
popf
ss
sub
mov
fsts
and
jg
hlt
adc
ss
mov
fsubl
and
dec
cli
dec
inc
xchg
jge
iret
mov
daa
or
loope
jne
js
jl
pop
mulb
int
pop
mov
cs
in
push
xchg
clc
aam
cmc
imul
or
addr16
xchg
int
push
mov
sti
sbb
push
mov
add
sbb
adc
cmp
pop
cwtl
sub
jnp
ss
outsl
aad
lret
jae
insb
clc
ljmp
or
xchg
mov
orb
cli
adc
stos
xchg
xor
mov
adc
mov
data16
sti
inc
pop
hlt
fcom
pushf
sbb
jnp
xchg
addr16
mov
push
arpl
xchg
es
pusha
mov
mov
test
fldenv
ja
adc
pop
sub
out
sbb
das
dec
push
lods
lcall
inc
ret
enter
pop
fs
sub
ja
cwtl
in
dec
fidivl
pushf
test
inc
aaa
stos
ss
test
pop
or
sub
cwtl
dec
push
or
rol
dec
xchg
sub
mov
lods
das
cwtl
jg
push
mov
ret
mov
push
ror
gs
shrb
ret
jle
mov
cmp
cmp
adc
add
jo
jbe
inc
into
das
fdivl
stos
outsl
lret
lock
dec
outsb
xor
fidivl
push
pop
dec
adc
jmp
mov
mov
fmull
out
add
add
insl
dec
leave
xchg
mov
jmp
lcall
dec
pop
ret
xchg
scas
adcl
dec
lods
jo
ja
adc
adc
and
aas
icebp
mov
push
jecxz
cmpsb
les
mov
fdivrs
cmpsl
loop
inc
adc
cmp
cmp
call
jno
inc
pop
lcall
int
cmp
pop
jl
add
lahf
movsb
sub
sbb
mov
out
test
or
pop
mov
xchg
ret
add
cmp
in
hlt
xchg
xchg
mov
mov
add
or
aaa
xchg
sbb
dec
psrld
fcoms
xorl
mov
lea
mov
out
scas
int3
lahf
inc
pop
add
movsl
jle
inc
das
mov
shll
dec
insb
jnp
fs
leave
rcll
ss
xor
pop
arpl
sub
loop
cmp
mov
mov
sub
das
adc
les
sbb
pop
pop
fidivrs
cmc
pop
iret
imul
pop
into
cmc
push
ja
adc
imul
outsl
sbb
lret
lret
xchg
push
adc
js
push
stos
dec
outsl
push
movsl
cld
adc
data16
cmp
sub
stc
movsl
ss
sbb
pop
fisubrs
insb
clc
lahf
xchg
insb
mov
pop
rep
pop
mov
sbb
xchg
stos
push
dec
outsb
sbb
repz
cltd
adc
inc
jmp
jno
jle
mov
mov
fidivrl
insb
imull
adc
jb
das
xchg
les
bound
decb
xchg
loope
mov
lds
ljmp
js
jne
jno
or
cmp
mov
xchg
xchg
xchg
loop
sbb
aas
cmp
inc
and
into
jns
dec
jge
cmpsl
pop
sub
or
aad
push
add
push
out
mov
sub
lods
mov
pop
inc
shlb
xchg
daa
mov
and
jl
insl
mov
aam
inc
push
mov
mov
mov
pop
jmp
stc
pop
add
rcr
aam
pop
mov
mov
pop
or
xor
mov
int
inc
in
outsl
popa
jb
iret
lock
mov
negb
lcall
add
jne
ss
xchg
imul
fnstcw
iret
jno
mov
pop
sbb
pop
roll
cmp
dec
push
aas
shl
sub
mov
mov
ret
lcall
jne
or
pop
dec
adc
xchg
out
mov
jge
mov
or
sub
arpl
cmp
test
inc
les
ret
loop
lods
push
pop
dec
cmp
lock
jmp
sbb
sbb
shr
repz
mov
or
cld
pop
cmp
out
das
in
jns
mov
test
sub
jnp
or
mov
jne
push
inc
add
adc
and
xor
std
adc
pop
mov
sub
dec
cmp
or
pop
ljmp
inc
ret
inc
xchg
or
int3
add
inc
cmc
mov
push
push
int
xchg
sub
arpl
movsb
movsl
mov
add
cs
test
dec
mov
or
mov
adc
jle
out
sub
pop
insb
adc
jbe
adc
pushf
xor
nop
dec
cmpsl
fucomip
inc
test
ret
sarl
call
sarl
mov
push
xor
mov
cmpsb
test
xor
jle
add
lds
js
mov
mov
push
push
outsb
pop
sub
jb
xor
jnp
pop
push
in
pop
pop
clc
cltd
xor
daa
pop
and
lret
jnp
out
daa
mov
stc
add
imul
xor
in
loope
test
add
pop
ret
push
in
xchg
repnz
adc
mov
xor
js
mov
addl
std
sub
mov
push
jmp
inc
sbb
decb
mov
data16
push
mov
inc
sbb
jo
lret
pusha
pop
test
aaa
push
fidivl
xor
sahf
xor
jb
arpl
or
stc
lcall
cltd
or
mov
inc
ret
sbb
test
shlb
out
pop
iret
out
sub
mov
inc
cmp
and
sub
in
das
push
cmp
sub
and
nop
and
mov
outsb
xor
sub
push
xchg
jns
cmc
ja
fnstsw
imul
pop
dec
leave
int
mov
lret
adc
pop
nop
mov
test
xchg
jae
xorb
xchg
dec
xorl
inc
arpl
int3
imul
dec
pop
lahf
ss
roll
mov
xor
or
gs
popf
scas
dec
cmpsl
mov
cmp
mov
xor
mov
fdivrl
dec
mov
pop
cs
dec
shl
dec
inc
enter
mov
outsb
sbb
arpl
jae
and
and
mov
add
jp
hlt
push
pop
sbb
mov
subb
cmp
arpl
fisubrl
cltd
xor
add
xchg
xchg
mov
pop
jle
movsb
scas
xor
mov
jmp
hlt
adc
push
dec
imull
lret
cwtl
dec
shrl
iret
jb
subb
pop
sub
mov
outsl
inc
inc
push
sub
fsubrs
xor
bound
xor
xor
adc
cmp
mov
push
xchg
dec
xor
inc
jne
rorb
mov
sbb
lods
cli
int3
pusha
sahf
mov
shrb
mov
popa
lahf
fimull
popf
lock
add
dec
cmp
in
test
stc
pop
movsl
sbb
xor
icebp
cmpsl
mov
outsl
rolb
mov
dec
iret
and
popa
outsb
lock
mov
xor
xchg
mov
mov
inc
push
inc
mov
in
sub
adc
in
jne
js
ss
xor
lea
add
inc
xor
jo
push
lock
jae
cmpsl
shrl
cmp
sbb
mov
fistpl
xor
andl
sub
mov
inc
je
cld
insb
add
lea
add
adc
popa
cltd
push
pop
dec
pop
or
in
mov
clc
jae
sub
int3
jae
js
mov
pop
lods
ljmp
pusha
sti
fadds
ja
xor
daa
push
mov
lret
mov
push
push
xor
ror
sbb
in
or
add
push
jle
sahf
outsl
dec
add
scas
in
daa
sarb
ficoml
xchg
testl
aas
pop
mov
jo
test
dec
pop
test
xor
fists
lods
in
mov
cld
test
push
popf
xchg
cmp
out
pop
adc
xor
icebp
popa
jmp
xor
in
and
mov
ljmp
icebp
pop
sahf
and
shll
mov
aas
aas
jle
inc
test
pop
popa
sub
jbe
pop
sahf
xor
cmp
rolb
inc
xor
dec
mov
les
imull
sub
adc
fadds
push
pop
in
pop
in
sub
push
fs
nop
dec
fst
int
iret
mov
adc
scas
mov
inc
aas
jne
xchg
xor
mov
sub
sub
xchg
dec
lahf
iret
jmp
mov
pushf
scas
xor
inc
popa
mov
jnp
test
xor
sahf
or
xchg
xorb
dec
loop
int3
dec
inc
add
test
xor
inc
test
pop
sub
std
sti
shll
push
imul
scas
sub
jle
adc
sbb
and
xchg
hlt
pop
mov
ljmp
call
or
pop
popa
pusha
call
popa
jl
mov
mov
mov
lar
and
fidivl
xor
jae
andl
fsubl
adc
sbb
pop
js
lret
dec
lret
sbb
fisttpl
dec
push
fsubrs
ja
sbb
adc
cmc
inc
loope
sub
and
cmc
dec
push
mov
dec
mov
jg
fdivl
jl
iret
lds
js
pop
mov
xchg
lahf
cmc
xor
lcall
fstps
outsl
iret
push
cmp
insb
cmp
mov
mov
inc
mov
push
aas
xchg
in
stos
in
addr16
sbb
cmp
xchg
mov
iret
bound
mov
sbb
jbe
cmp
mov
sub
cld
pop
fnstcw
xlat
adc
repnz
cmp
mov
jae
mov
lret
mulb
inc
jge
icebp
xchg
es
aam
adc
sarb
call
sub
ljmp
mov
sbbb
popf
mov
repnz
fcompl
push
dec
stos
inc
aas
cmpsl
lds
jl
outsb
pop
jle
mov
lods
mov
leave
les
pop
sbb
or
or
lea
ja
xchg
xchg
jmp
lds
mov
cmp
in
inc
test
lahf
jmp
out
bound
data16
pop
or
pop
dec
popf
into
xchg
out
xchg
dec
sub
out
or
pusha
mov
jge
dec
mov
push
fucom
push
jbe
inc
addr16
mov
lods
popl
mov
ljmp
jno
sbbb
clc
mov
mov
mov
ret
jge
outsl
mov
in
inc
and
mov
popf
adc
sub
shll
dec
jo
pop
lcall
imul
xchg
cmp
fs
xor
movsl
pop
pop
push
cmp
cmp
lcall
hlt
inc
les
push
ja
cmp
ljmp
sbb
pushf
test
lods
test
cmpsb
sub
hlt
push
dec
inc
cli
push
std
jnp
ljmp
addr16
ret
sbb
stos
loop
cmp
das
stc
jg
mov
shrb
js
mov
mov
fbld
scas
jb
pop
lods
xchg
stc
or
mov
test
push
nop
push
sbb
lds
sbb
mov
lahf
xchg
or
push
cmp
inc
cwtl
mov
pop
movsb
cmp
xchg
and
mov
xchg
push
stos
cmpsb
loope
mov
cli
inc
add
andl
leave
gs
loop
push
stc
adc
sbb
iret
cmp
dec
ja
jg
mov
jecxz
popa
scas
ds
int3
cmp
ds
mov
or
cmp
icebp
jle
xlat
jmp
mov
call
cmp
push
popa
lods
sti
mov
data16
jnp
push
xchg
jnp
push
adcb
outsb
jno
pop
sub
imul
pop
inc
jmp
jecxz
and
out
push
mov
xorl
add
jle
dec
or
test
dec
inc
cmc
sub
add
fcmove
aad
ret
mov
push
fwait
mov
jmp
mov
adc
mov
mov
outsb
test
int3
orl
pop
sbb
push
cmp
sbb
jb
jb
adc
push
pop
lahf
add
loop
mov
push
jl
mov
orb
dec
fidivs
and
pop
fsubrl
push
xchg
jge
fmuls
cmp
add
fcmovnb
jae
movsb
xchg
sbb
dec
lods
cmp
js
jb
jns
sbb
sbb
insb
ret
push
mov
dec
leave
and
fwait
ja
inc
xchg
mov
jmp
sub
or
mov
add
cmp
test
inc
xchg
aad
in
in
xchg
adcb
sub
mov
xor
dec
or
lods
and
xchg
add
xor
dec
insl
sbb
fucomip
mov
xorb
shrb
xor
movsb
stc
or
xchg
iret
sub
shlb
clc
icebp
push
out
and
jne
dec
leave
cmp
jg
and
into
fstp
add
subb
test
jnp
mov
sbb
xchg
addb
ja
push
mov
mov
and
cmp
loopne
mov
andl
push
add
mov
push
dec
in
and
notl
push
jle
insl
jb
pusha
sahf
ja
sub
or
add
insb
sahf
bound
or
inc
fdiv
jae
cmp
loope
cmp
mov
stos
xor
mov
mov
sub
in
dec
loopne
orb
aas
decl
inc
mov
mov
arpl
mov
iret
and
xor
movsb
fbld
cmp
movsl
sbb
fcoml
mov
or
mov
mov
adc
insb
iret
adcb
popa
fisttpl
addl
scas
inc
sub
inc
stc
mov
aam
xor
and
push
repnz
jp
imul
test
push
xchg
or
xchg
xor
pop
arpl
pop
xor
out
cmpb
mov
mov
mov
stc
lds
cmp
sub
pop
sub
fdivl
push
dec
pushf
test
xor
pop
nop
stos
mov
cmp
cltd
jmp
cmpsl
cmp
adc
dec
jno
add
ret
rorb
hlt
loope
add
and
sahf
sub
es
mov
and
pop
scas
xor
in
push
sub
dec
push
outsb
ja
jg
lcall
inc
nop
pushf
xor
insb
sbb
mov
loop
sahf
inc
inc
lock
in
pop
mov
popa
dec
test
sbb
negb
daa
adc
xchg
cltd
stc
pop
cmp
mulb
test
dec
in
and
jb
ljmp
jle
xchg
out
imul
aas
lods
mov
mov
fdivl
push
push
es
push
popf
pushf
or
insb
push
mov
xor
push
popf
inc
movsl
cmpsl
cmp
jmp
lds
mov
mov
adc
add
and
fnstsw
xchg
mov
into
cld
and
sub
push
and
fcomps
leave
loop
sub
cmp
add
sub
sbb
dec
pop
jge
jl
lods
out
outsl
mov
dec
and
push
pop
jns
jp
xchg
jo
dec
sbb
bound
inc
popf
add
ljmp
xor
divb
pop
pop
add
idivb
add
cli
repnz
jp
repnz
mov
adc
testl
add
fisubrl
cwtl
sti
xchg
sbb
fistps
std
stc
movsb
loope
arpl
lea
into
aaa
and
ret
imul
outsl
mov
incl
rol
sti
andl
mov
pop
push
jge
jl
sbb
sahf
xor
bound
insb
mov
je
mov
pop
insl
cmc
dec
lock
jns
out
mov
pop
shrb
sahf
fdivrs
repz
leave
jp
enter
inc
sub
or
mov
mov
mov
xchg
adc
aam
cmpsl
add
xor
jge
add
cli
cmp
icebp
sbb
pop
pop
cltd
xor
jge
movsb
in
loop
jl
daa
scas
imul
mov
mov
mov
mov
mov
jle
adc
and
out
jb
je
and
inc
xchg
xchg
dec
repz
mov
btcl
cmp
xchg
mov
int
mov
shlb
jg
push
jo
mov
out
push
in
dec
out
sahf
ljmp
cltd
enter
fists
rcrl
xor
pop
iret
push
lods
jne
xchg
scas
test
js
rorl
mov
pop
cmp
fwait
xor
mov
repnz
insb
or
xchg
inc
call
leave
push
nop
lea
fimull
mov
adc
xchg
xchg
pushf
shrb
sub
cld
xchg
mov
test
insb
push
bound
inc
lcall
xor
sahf
cmp
xchg
cmp
fcomps
mov
mov
jb
ja
mov
fildl
inc
cmpsl
pop
orl
test
dec
scas
mov
dec
adc
ja
ret
int3
dec
adc
jns
dec
repnz
sbb
arpl
cli
inc
pushf
inc
and
xor
movb
mov
inc
or
ret
push
repnz
shlb
lods
aaa
pop
pop
loope
jg
mov
pop
daa
pop
cli
push
popf
xor
in
mull
scas
pop
pop
aaa
call
daa
mov
or
rclb
dec
sbbb
dec
lret
xchg
jbe
or
es
or
out
xchg
outsl
outsb
mov
mov
cmp
rcrb
pop
arpl
inc
mov
push
fidivl
lods
xchg
test
fisubrl
jno
xlat
mov
stc
sarb
jp
popf
dec
pop
inc
cltd
popf
xor
mov
mov
enter
addb
cmp
movsl
or
jmp
sbb
mov
or
test
mov
ja,pt
das
and
gs
insl
dec
fisubs
mov
xchg
mov
sbb
add
scas
ljmp
sbb
adc
test
fimull
mov
in
loopne
pop
sub
pop
or
scas
and
add
aam
das
mov
fldl
and
dec
sub
push
or
lock
mov
in
and
aas
inc
ds
fsubr
push
push
mov
pop
sbb
mov
mov
xchg
call
filds
dec
mov
ds
ficompl
outsb
mov
dec
std
jo
out
and
pop
mov
xchg
outsl
icebp
mov
rorb
imul
sbb
mov
adc
and
repnz
or
mov
pop
cmp
or
mov
sub
add
adc
cmp
fnstenv
testl
xchg
sub
pushf
arpl
xchg
and
int3
push
popf
xor
dec
and
xor
ret
cmp
je
dec
gs
ror
popa
in
mov
jmp
jae
in
jp
xchg
dec
lds
xchg
adc
rcr
jno
pop
lods
dec
lods
popa
cmpl
inc
cmpsb
cmp
pop
sub
aam
das
clc
mov
or
xor
add
push
inc
inc
fidivs
push
icebp
ret
xchg
arpl
or
dec
mov
lods
adc
mov
out
push
pop
mov
pop
pop
and
imul
ret
insl
loopne
add
dec
loop
sahf
mov
insl
inc
movsb
adc
mov
sub
dec
hlt
xor
jae
mov
loope
repz
and
jae
lret
jo
lret
pop
test
movsl
mov
fsubrs
jns
and
xor
inc
enter
dec
pop
into
movsb
dec
jge
jecxz
push
je
dec
inc
inc
rol
lods
jp
enter
bt
jbe
shrb
sub
jns
inc
daa
inc
bound
xchg
push
cwtl
lods
mov
fbld
xchg
mov
xor
daa
leave
jno
push
xchg
pop
jo
je
lds
add
pushf
dec
cmp
jo
jnp
bound
push
jl
xlat
and
popf
clc
mov
add
roll
sub
dec
sti
call
mov
pushf
xor
lods
sbb
fcmovnu
lcall
sub
stos
inc
xchg
lock
scas
mov
into
jnp
hlt
dec
cmpsb
pushf
cltd
xchg
hlt
mov
das
arpl
inc
filds
scas
push
data16
insl
pop
popa
lea
push
lret
addr16
test
inc
inc
lods
jge
push
frstor
jmp
and
or
sub
leave
push
lds
xchg
mov
rep
mov
ja
mov
and
daa
inc
jmp
test
in
xchg
mov
testb
rcrl
and
and
push
mov
mov
outsl
daa
xor
add
lods
xchg
arpl
mov
mov
in
ret
xchg
mov
adc
mov
addr16
mov
rclb
shlb
leave
mov
test
fcomip
sub
xchg
mov
inc
jae
sub
or
sbb
bound
sbb
dec
loope
ret
and
loope
or
stos
fcmovnu
fwait
sbb
dec
test
pop
out
fs
arpl
stos
fmulp
fwait
mov
sub
jl
daa
mov
pop
hlt
pop
push
ret
clc
dec
in
mov
xor
mov
fsubl
jmp
xchg
shrb
lahf
mov
stos
jbe
lds
sarl
movsb
arpl
lret
imul
jg
mov
xchg
loop
loope
addr16
mov
mov
sbb
jp
mov
or
sbb
add
push
xchg
stc
xchg
inc
pop
enter
data16
addl
sbb
cltd
adc
dec
fcomip
or
adc
fs
adc
mov
cli
test
sbb
cltd
add
cmp
rorl
pop
sbb
mov
jb
mov
cli
xchg
repz
out
adc
ja
aas
decb
repz
adc
stc
shl
pop
test
test
cmpsl
out
add
mov
xor
xlat
cli
pop
stos
mov
lret
jp
xor
cmp
xor
xchg
add
mov
jo
inc
xchg
push
dec
push
pop
aad
popf
mov
ljmp
sarb
rcrb
mov
stos
sub
or
or
adc
adc
fidivs
add
lret
sarl
mov
and
mov
mov
or
pop
push
ret
and
adc
xchg
ret
xchg
in
jns
push
mov
addl
les
inc
cld
xor
sub
and
push
push
jno
daa
fmull
xor
sbb
push
pop
cmp
iret
jg
lock
outsb
fdivrs
sub
or
mov
imul
bound
mov
sti
pop
or
jle
push
je
jnp
xchg
outsl
in
add
mov
popf
cmp
mov
pop
lcall
or
xchg
cmp
rorb
adc
push
or
call
test
xchg
sbb
push
bound
icebp
ret
jle
pop
mov
push
jp
in
mov
insb
cmc
mov
gs
cmp
subb
mov
or
push
cmp
mov
popa
inc
outsl
push
ja
mov
jns
xchg
cs
push
inc
push
pop
xor
mov
aas
movsb
cltd
cli
xchg
iret
xchg
push
popf
gs
pop
fs
mov
ljmp
push
or
lock
gs
sbb
adc
cmp
add
std
adc
adc
movsl
inc
jmp
outsb
cmpsl
push
ss
loope
inc
sub
ficoml
imul
data16
test
test
cmpsl
fidivrl
mov
outsb
shl
lahf
push
shrl
xchg
lret
out
lods
dec
pop
xor
nop
popa
push
adc
sbbl
daa
sbb
or
les
lock
dec
pop
cwtl
adc
xor
xchg
or
xchg
lret
stc
cld
and
lods
xor
cmp
or
push
xchg
mov
push
dec
mov
cmp
rcr
xchg
cli
nop
and
jmp
rol
jle
sbb
inc
sbb
imul
push
gs
push
pop
push
add
outsb
fsubl
insl
stc
enter
xor
ljmp
stc
jmp
adc
mov
xor
ja
outsb
or
inc
pop
fstpt
mov
lods
out
or
in
jg
sbb
add
mov
dec
dec
mov
xor
fisubs
insl
xchg
or
adc
lds
jae
jo
sbb
test
aaa
sub
sub
mov
push
arpl
ret
pop
cmpsb
fsubrs
cmp
mov
push
mov
shrb
jb
dec
dec
aam
arpl
out
imul
sbb
pop
call
aaa
cmp
lcall
cmp
xor
les
push
fidivs
jb
inc
mov
sub
and
fs
add
out
loop
lds
xchg
mov
push
and
mov
inc
dec
add
js
dec
sub
inc
mov
xor
add
xor
lods
xchg
xchg
into
aaa
adc
mov
movsl
call
add
sub
sbb
xchg
test
or
inc
mov
lock
mov
popa
adc
mov
xchg
mov
and
pop
hlt
rol
loop
jg
cs
push
dec
xchg
push
inc
cmp
addr16
loopne
repnz
push
cli
ds
adc
xor
popa
pop
adc
jg
lea
pop
fnstsw
push
dec
in
xor
push
mov
negl
addr16
mov
repnz
xchg
pop
pop
dec
icebp
pop
fdivr
pop
dec
sub
out
mov
imul
push
fdivr
addr16
push
and
push
fs
repnz
mov
ljmp
pusha
pop
jnp
push
test
dec
inc
pop
addb
and
sbb
cmp
pop
push
inc
dec
and
jbe
xchg
test
mov
in
push
shl
aam
jne
out
mov
fxch
jae
or
cmpsl
push
loopne
dec
fisttpll
lods
jl
sbb
loop
mov
clc
jae
jmp
mov
mov
or
je
inc
sub
test
decb
add
data16
daa
xchg
push
add
mov
orb
cmp
or
ror
sub
movsb
xchg
push
adc
adc
push
sahf
or
inc
sub
stos
jno
dec
mov
das
or
cmp
or
mov
lods
ljmp
pushf
ljmp
jmp
and
push
loopne
add
repnz
out
movsl
and
add
xchg
test
int
mov
sbb
cmp
aas
lcall
inc
ja
xchg
dec
clc
sbb
fucomp
jp
jmp
cmc
ljmp
xlat
add
jne
inc
push
outsb
test
or
and
jecxz
or
ss
mov
seta
jge
mov
and
push
aaa
xor
lcall
mov
jb
add
sti
ljmp
scas
aam
and
jae
jl
adc
mov
mov
rcrl
clc
and
cltd
cld
in
xor
fwait
dec
mov
inc
out
in
sbb
inc
fstl
mov
mov
scas
mov
out
and
sbb
sub
cmp
sbb
mov
fsub
and
or
fidivl
out
repz
insb
movsl
mov
sub
and
jnp
out
fcoms
push
jge
test
push
sub
xchg
jecxz
pop
and
mov
neg
mov
cmp
in
push
or
inc
int
jnp
mov
cmp
add
decb
mov
sbb
xor
jo
inc
add
mov
divl
stos
aam
pop
addr16
cmp
cmpb
aaa
pop
pop
lret
decb
and
gs
and
insb
fnstsw
jmp
addl
mov
cwtl
iret
cmp
sbb
push
test
mov
subl
mov
shlb
inc
bound
iret
mov
pop
in
out
inc
jecxz
pusha
jp
fbld
inc
xchg
in
sub
jecxz
pop
add
sub
imul
hlt
repnz
cltd
movsb
xlat
rsm
repz
and
ret
insl
test
mov
in
call
mov
mov
mov
xchg
mov
fbstp
fdivl
lea
push
out
popa
js
mov
dec
repnz
or
dec
out
rol
insb
xlat
outsl
stos
pop
fidivrl
mov
cmpsl
lods
mov
xlat
mov
outsb
int3
ficoms
mov
push
je
mov
in
mov
test
inc
push
ljmp
bound
or
dec
std
push
jo
pushf
xchg
lret
xor
std
notl
in
adc
insl
ret
mov
int3
out
je
jge
sub
stos
xchg
cmp
add
jg
sbb
mov
in
mov
lock
loope
dec
in
ret
xor
rcl
add
jns
inc
pop
bound
dec
jmp
sbb
int3
push
and
mov
testb
sbb
pop
movsb
xor
and
mov
mov
movsb
js
adc
or
xor
xchg
xor
lea
cmpsb
xchg
sar
je
fldpi
ss
xor
lds
out
xchg
scas
push
mov
mov
sub
pop
insl
int
popa
mov
jns
mov
mov
or
hlt
cmp
xchg
cs
insl
jmp
mov
sbb
lret
sbb
adc
cmp
dec
dec
dec
jns
xchg
pushf
imul
add
arpl
push
test
bound
adc
push
xchg
jno
inc
das
in
lea
xlat
fwait
mov
adc
push
push
divl
xor
data16
inc
fcmovbe
cwtl
mov
mov
fsubrs
testb
xchg
pop
mov
and
sub
dec
std
dec
jae
sub
xchg
xchg
faddl
lret
fs
push
addr16
or
mov
ss
mov
mov
je
xor
rcl
out
cltd
jl
out
insb
xor
inc
loope
ja
mov
clc
gs
je
add
popf
adc
dec
repnz
leave
test
out
push
cmp
enter
xor
xchg
jle
test
mov
gs
mov
push
in
scas
mov
lea
out
push
xorb
sub
test
cs
pop
xor
icebp
mov
push
jl
and
adc
int
xor
into
xchg
icebp
sti
pusha
pop
adc
add
nop
mov
loope
aas
sub
mov
movsl
dec
pop
xlat
or
adc
xchg
xor
sbb
jecxz
fldt
add
fisttpl
mov
shlb
xlat
scas
xor
sbb
fisttps
out
xor
xchg
decl
or
movsl
dec
adc
lods
out
sbb
sbb
push
lcall
sbb
cmp
pusha
xor
out
test
add
arpl
sarl
push
inc
mov
shlb
xchg
jnp
test
ret
into
sub
cmpsl
ret
sub
xchg
xchg
mov
or
mov
test
les
sbb
mov
std
xchg
mov
sahf
cwtl
or
out
movsb
xchg
xor
push
out
in
xor
dec
aam
pop
outsb
jno
stos
mov
push
inc
scas
shr
xchg
mov
rcl
mov
mov
mov
jae
sub
sbb
sub
clc
fldl2t
es
inc
lds
lods
jmp
jae
popf
es
push
mov
cs
cmp
ds
cmpsl
lret
cltd
lcall
cmpsl
mov
andl
outsl
jne
cmp
pop
cwtl
movb
dec
repz
mov
cmp
stc
mov
sub
push
and
ret
stos
aas
in
push
mov
orb
in
mov
scas
push
jp
jl
pushl
xchg
cs
add
mov
out
and
dec
push
aam
add
scas
aam
pop
inc
inc
fnsave
dec
adc
inc
adc
xor
daa
loope
das
shr
inc
inc
fwait
jg
lret
sub
cmp
popf
pop
xchg
xor
add
cmp
jae
mov
ljmp
cmpsb
mov
das
jne
imul
dec
sbb
lahf
cmp
inc
fidivrl
leave
lret
mov
fdivrs
lock
rclb
sub
cmpsb
shlb
lock
adc
icebp
or
push
sub
lret
and
out
sbb
sub
mov
jge
jns
sbb
sbb
xchg
test
cmp
insb
outsl
or
jnp
shll
lods
inc
mov
fisubs
sbb
xor
dec
jle
hlt
cmp
and
imul
aam
adc
mov
jnp
mov
cmc
nop
mov
lea
fwait
pushf
adc
cwtl
xor
jae
fstpl
and
jge
loopne
push
dec
out
in
xchg
xchg
fsubs
add
popf
out
and
and
je
roll
jp
ds
xchg
std
out
inc
sbb
test
jmp
icebp
mov
and
out
ljmp
push
movsb
push
fsubp
inc
inc
push
lock
adc
cmp
sbb
mov
add
movsl
push
and
pop
mov
leave
mov
push
shl
repnz
idivl
or
inc
jmp
dec
pop
das
mov
sub
scas
mov
inc
add
bound
aas
push
push
cmp
jno
lods
icebp
movsl
sub
cmpsl
jle
lds
fidivl
add
out
repnz
ficompl
pop
hlt
inc
xor
test
sbb
dec
cmp
push
or
cmp
dec
add
insl
pinsrw
jae
negl
pop
scas
test
outsb
rcrl
pop
lds
xchg
adc
pop
sub
xchg
mov
movsb
enter
pmaxub
pusha
xor
fcmovnb
push
lret
popf
outsl
js
les
cmp
bnd
lea
mov
pop
cmp
into
jp
sbb
pop
mov
outsl
push
cmc
push
leave
loop
push
pop
pop
rcrl
leave
test
outsl
cmpsb
inc
push
pop
add
loopne
inc
adc
lret
out
stos
inc
loopne
cwtl
out
mov
mov
ss
cltd
test
pop
jmp
in
sbb
inc
out
jb
mov
mov
fs
loopne
call
insl
stc
sub
inc
sahf
nop
xor
dec
enter
mov
cmp
and
ret
push
enter
adc
pusha
das
pop
sub
lods
fsubp
jns
xlat
scas
stos
xchg
mov
int3
sbb
dec
jl
imul
jp
sub
jp
xchg
stc
rcl
mov
pop
pop
stos
push
mov
mov
ljmp
mov
xchg
inc
lods
xor
mov
es
pop
sti
icebp
lret
sub
pop
scas
jecxz
in
lods
xor
and
add
fnsave
jno
scas
in
or
cmpsl
iret
mov
fwait
xchg
push
or
aas
fs
ljmp
jno
es
add
fwait
pop
ret
fs
inc
jno
shrb
inc
and
pop
es
push
push
xchg
pop
andb
xchg
dec
fdivrs
adc
ds
fcompl
aas
push
add
mov
or
push
orb
xchg
inc
push
push
sti
inc
mov
rclb
push
add
imul
xchg
inc
push
pop
pop
mov
xchg
sub
xchg
popf
xor
sub
sti
inc
sahf
shrl
movsl
dec
loop
mov
inc
out
cmpsl
loop
sub
call
shrl
push
lret
pop
test
xchg
pushl
hlt
xchg
dec
sbb
popf
jbe
fwait
lods
lods
xchg
dec
dec
fwait
int
enter
sqrtps
dec
fbld
inc
push
jle
out
xor
icebp
int3
mov
jmp
pop
imul
rcr
push
dec
cmp
out
sbb
lods
add
fildll
xchg
es
push
cwtl
and
mov
pop
and
sbb
sahf
cmpsb
cmp
xor
xchg
pop
mov
lret
imul
xor
cmp
sub
inc
repnz
jo
adc
daa
imul
cwtl
divl
lret
lods
cmp
sti
xchg
xchg
pop
cmp
nop
sbbb
andl
sbbl
xor
jp
xor
cli
fwait
dec
enter
cmp
clc
cmp
add
cs
outsl
pop
out
fists
mov
and
mov
add
sbb
xchg
cs
xchg
test
sub
lods
mov
xchg
push
jnp
xchg
mov
push
out
xchg
sub
mov
xor
jg
jne
jne
hlt
jnp
das
std
inc
fisubrl
insb
loopne
xor
push
sti
xor
scas
call
fcmovbe
test
mov
shll
daa
jecxz
adc
xlat
ja
sbb
jp
or
mov
hlt
out
cmp
lahf
cltd
mov
popf
orb
fmull
sahf
xor
or
mov
add
pop
cmpsl
jl
out
push
clc
dec
push
in
dec
inc
out
mov
lcall
cmp
stc
push
xlat
fbld
mov
cmpsb
jp
push
mov
inc
repnz
iret
pop
fsubrs
pop
push
int3
pop
enter
scas
sub
repz
jl
es
pop
jge
sarb
jge
gs
mov
fistpl
lock
jle
shrl
jg
jns
shrb
fwait
mov
cmp
push
aas
mov
mov
inc
cld
stos
pop
cmp
xor
dec
jecxz
mov
lds
push
cmp
push
push
pop
insl
out
sti
xchg
and
sub
jle
sahf
stos
aas
push
out
xchg
or
stos
roll
movsb
pop
test
dec
mov
popf
daa
fists
cmpsb
loop
cmp
mov
dec
cmp
xor
xor
lock
testl
std
xor
movsl
test
repnz
lret
cmp
pop
ja
cs
xchg
sbb
mov
notb
movsb
cmp
mov
jb
pop
movsb
sub
mov
mov
xchg
push
cwtl
ret
push
ror
into
push
lcall
fdiv
nop
data16
mov
mov
add
jo
adc
mov
fcmovnb
xor
les
or
popf
scas
cmp
mov
mov
mov
bound
out
or
mov
push
pop
inc
inc
stc
outsl
push
sub
and
es
mov
xchg
xchg
mov
addr16
shrb
ss
jne
fdiv
out
nop
gs
ret
adc
push
mov
push
sbb
into
roll
pop
insb
pop
adc
push
xchg
loop,pt
stc
mov
shr
jl
repnz
aaa
adc
loopne
mov
scas
insb
or
shrl
idivb
jg
daa
pop
outsl
jge
mov
fisubrl
pop
xor
rclb
cmpsl
cmpsb
pop
in
or
lret
xchg
inc
mov
push
cwtl
fwait
mov
js
add
js
mov
add
inc
mov
mov
cld
jbe
sti
inc
adc
je
mov
fildll
fisubs
mov
gs
ds
jo
mov
xchg
adc
and
jno
in
adc
sbb
pop
jne
aam
mov
push
out
sbb
inc
popa
cmpl
movsl
mov
mov
imulb
xor
jns
lods
loop
push
ljmp
call
add
pop
pop
or
push
scas
fisubl
sub
enter
fdivrp
jae
cltd
movsb
push
addr16
pop
repz
ret
mov
inc
and
cmp
dec
inc
lret
dec
sub
jp
loop
dec
jg
shll
scas
or
push
inc
fisttpll
stos
fs
inc
jl
cmp
adc
test
fstpt
pop
int3
cs
es
inc
xlat
mull
fcomip
pop
pop
fidivl
jp
mov
mov
popa
adc
movb
xor
cmp
fsubrl
ficoms
wbinvd
jbe
movsl
lods
jno
jecxz
test
mov
fadds
out
cmp
insb
into
mov
mov
bound
push
movsl
sbb
out
cltd
test
xchg
in
out
lds
ds
ret
out
andl
adc
dec
jge
dec
sub
adc
das
cltd
push
xchg
inc
and
int3
enter
push
pushl
inc
popf
js
mov
sbb
movsb
push
sbb
and
stos
cltd
iret
inc
stos
sarb
test
orb
hlt
mov
and
or
cmp
imul
in
loope
aam
or
ret
icebp
test
pop
fildl
loopne
pop
roll
adc
lock
and
icebp
stos
lret
sub
ja
js
dec
loopne
punpckhwd
and
aam
xchg
aaa
hlt
into
pusha
out
cltd
data16
out
int3
mov
ss
pop
jge
mov
insl
mov
push
xchg
jns
and
aad
hlt
shlb
loopne
inc
lret
scas
out
cltd
dec
and
fidivrl
loop
jle
and
mov
pop
cmp
sub
pop
inc
aaa
ret
hlt
pop
aaa
mov
xchg
push
push
dec
cltd
mov
ret
pop
mov
jp
mov
divl
in
out
xor
lret
popf
sub
fistpll
cmc
inc
test
mov
push
in
sub
test
lods
xchg
dec
gs
push
mov
cs
daa
mov
xchg
pop
xchg
push
imul
divb
mov
mov
push
mov
shrb
aam
out
cld
cmc
pop
cmpsb
xor
mov
hlt
stc
xchg
mov
push
aas
mov
jmp
pop
mov
idivb
cmp
xor
xor
loop
sbb
ret
loopne
pop
lahf
hlt
jne
mov
cmp
fucomi
and
adc
repz
dec
xlat
movsl
jne
test
cmpsb
repz
cmpsb
xchg
ffreep
mov
test
dec
jecxz
adc
sbb
push
pop
outsb
jns
stos
dec
out
in
fisubl
insl
enter
out
sub
add
pop
jno
mov
cmp
add
dec
sub
jge
inc
fldcw
inc
adc
cmp
xor
data16
jno
jp
and
mov
or
aas
xchg
mov
or
mov
loopne
cmpb
fldt
leave
fdivr
xchg
fisubs
pop
inc
cmpsb
rcrl
sub
and
iret
xchg
in
sti
mov
ret
ds
cmpsl
in
daa
xchg
mov
mull
push
adc
push
adc
jge
xor
ds
add
out
mov
adc
popf
add
jge
mov
sbb
fsincos
add
xor
xchg
outsb
adc
out
lret
sbb
hlt
push
or
add
jmp
push
pusha
mov
stos
cwtl
or
inc
mov
jne
jecxz
pushf
dec
pushf
xor
jmp
mov
pop
std
pop
xor
pushl
pop
xchg
int
push
ljmp
ret
pop
sbb
fbstp
repnz
cmp
and
aad
fwait
in
movsb
add
xchg
mov
xchg
push
xchg
jmp
mov
lret
in
mov
addr16
add
enter
cltd
adc
cmc
mov
mov
xor
addr16
xchg
pop
push
mov
sbb
sbbb
jge
lcall
iret
jecxz
icebp
mov
mov
mov
or
ret
jb
nop
das
inc
ret
lds
add
ja
ljmp
sahf
test
mov
jno
add
testb
je
int3
movsl
popf
mov
fcmove
in
cmpsb
orb
mov
mov
xchg
das
jo
sbb
add
sub
adc
cwtl
lret
jge
sub
mov
add
jb
mov
xchg
lock
pop
mov
add
sbb
sub
cmp
pushl
and
bnd
inc
stos
icebp
and
mov
lahf
sbb
repnz
jmp
aas
ret
insb
aad
xchg
pop
or
pop
pop
mov
dec
xchg
in
jns
push
aas
sbb
jno
push
or
js
sub
js
ficomps
fxch
pop
xchg
pop
lock
clc
out
cmpsl
fstps
cmp
push
fstpt
bound
hlt
pop
ret
test
xor
xor
mov
dec
xor
sbbl
mov
data16
ds
adc
cmp
sbb
add
test
add
out
loope
loope
ja
push
push
bound
mov
stos
test
cmpsb
sub
mov
mov
mov
mov
sarl
pop
add
inc
mov
fcomi
mov
inc
mov
xlat
jle
fisubl
adc
fisubl
imul
adc
and
lahf
std
jg
and
xchg
xchg
test
je
jae
sub
cmp
mov
lahf
daa
outsl
cli
cs
lahf
insl
inc
add
jmp
mov
add
mov
push
sbb
push
mov
movsb
cld
sbbb
add
inc
sahf
out
clc
sbb
movb
fistl
cwtl
inc
jecxz
mov
mov
xchg
jne
or
lods
repz
loop
cmpl
shrb
lret
hlt
std
inc
fstps
pushf
pop
inc
and
cmc
mov
int3
xchg
push
outsl
xchg
rcrb
dec
test
jl
cwtl
or
or
adc
inc
mov
adc
and
loop
jne
popa
nop
mov
jp
inc
pop
pop
loope
scas
sbb
inc
jge
sti
pusha
les
daa
or
push
adc
or
daa
lods
dec
pop
in
xor
aam
pop
movl
push
and
nop
lahf
nop
test
int
xchg
mov
jmp
lock
sub
xchg
enter
xor
shrb
jp
push
jmp
inc
mov
lret
leave
cmc
mov
sbbl
mov
jnp
mov
addr16
xor
mov
repnz
mov
loopne
jmp
dec
jecxz
mov
js
loop
sbb
xchg
cwtl
cwtl
loope
mov
out
out
daa
std
xor
sti
dec
pop
sub
mov
or
mov
sbb
pop
pop
adc
pop
rcrl
mov
jns
mov
out
fsubl
mov
leave
adcb
shlb
push
cwtl
movsb
pop
push
xor
adc
nop
aad
out
call
cmp
pop
xchg
sbb
inc
shlb
aam
xchg
push
pop
fbld
sarb
cli
daa
push
fwait
dec
mov
inc
leave
fsub
shlb
adcb
mov
movsb
lret
or
mov
aad
iret
push
sbb
mov
push
fsts
loope
sbb
pusha
cmpsl
mov
push
ret
fwait
inc
shld
pop
sub
jecxz
cwtl
push
aad
jge
mov
enter
cmp
dec
fisubrl
ds
jne
shrb
add
xchg
imul
inc
or
ret
ja
pop
out
sbb
fstpt
xor
xchg
adc
add
scas
mov
xchg
fsubrl
mov
fsubrl
in
push
loopne
inc
mov
jne
shlb
jge
push
pop
dec
xchg
test
jecxz
outsl
and
mull
sub
mov
iret
mull
jno
test
mov
mov
fisubrs
shlb
pop
lret
push
lods
cli
fxch
xor
loopne
push
or
xor
inc
xor
ss
scas
and
out
push
les
cwtl
lret
sbb
lods
or
mov
ja
sbb
test
repz
mov
adc
mov
js
cld
xchg
dec
nop
mov
sub
add
xchg
insl
inc
mov
mov
push
cmp
out
push
std
mov
mov
dec
and
dec
add
push
mov
or
loop
or
int3
jge
scas
inc
push
stos
jmp
or
mov
lds
mov
cld
pop
or
push
mov
fnsave
jg
sbb
clc
jle
jns
aad
js
sbb
push
jmp
xchg
cld
push
cmpsl
insb
mov
or
dec
cltd
outsl
sub
jle
lock
js
mov
mov
dec
mov
into
aaa
sti
jmp
xchg
aas
mov
mov
adc
ja
inc
stos
dec
in
jnp
cmp
lcall
inc
push
xor
push
dec
sub
dec
add
sbb
dec
add
loope
bswap
dec
test
adc
jle
push
jo
aad
aad
cltd
mov
inc
rcrb
das
lds
adc
cmpb
mov
push
mov
mov
lods
jo
je
ret
int3
add
mov
fsubrs
add
xchg
jg
inc
insl
inc
xor
inc
test
push
and
inc
xchg
mov
and
push
jae
dec
aad
mov
xchg
jg
xor
mov
int
mov
lcall
or
jnp
xlat
mov
notl
add
or
sti
stos
bound
mov
xor
aaa
shl
outsl
push
aas
pop
mov
test
dec
add
mov
or
pop
mov
sbb
mov
loopne
pop
fbstp
mov
push
sub
scas
and
push
add
imul
mov
fs
adc
push
jnp
cwtl
xchg
inc
icebp
imul
xchg
stos
fmull
xlat
cmpsl
scas
mov
shlb
repnz
mov
jge
sbb
mov
fistps
add
cmpsb
inc
mov
sub
imul
rcr
scas
xchg
xchg
test
arpl
mov
sahf
adc
ret
xchg
dec
enter
pop
adc
jae
test
sub
push
and
pop
mov
pop
jle
cmpsl
mov
mov
sarb
rorl
sub
adc
xchg
add
out
ficomps
fisttpl
jne
mov
pop
aas
sti
aaa
xchg
jne
mov
add
str
mov
pop
insl
jge
enter
fmuls
and
jbe
pop
test
stos
lock
jae
and
sbb
adc
cmp
mov
lahf
xorl
int
int
into
stos
inc
subl
iret
ret
std
push
into
cmp
mov
push
pop
xor
pop
sbb
enter
in
sub
stos
cmp
dec
adc
ljmp
inc
imul
adc
int
cmpsb
daa
leave
mov
mov
lret
into
lret
sarl
mov
call
mov
jmp
out
xor
sub
rcrb
loope
sti
sbbb
pop
mov
icebp
popf
inc
fs
ljmp
fimuls
fimull
sub
adc
push
loopne
mov
outsl
inc
pushf
cmpsb
jns
gs
xchg
xchg
into
pop
adc
nop
adc
mov
sbb
and
inc
es
sub
push
fsubrs
clc
and
stos
loope
push
scas
lcall
repz
pop
inc
push
inc
lahf
mov
mov
inc
bound
adc
cmp
aam
rcrl
dec
dec
cltd
test
pop
mov
inc
bound
jne
and
jae
clc
out
mov
push
jl
into
js
add
repnz
mov
movsl
and
fidivl
push
or
shrl
mov
aad
scas
inc
dec
add
inc
pop
mov
jno
cmp
mov
or
lds
ret
mov
pop
push
aas
inc
stos
dec
movsl
jmp
subl
mov
and
inc
test
push
aas
xor
iret
es
out
into
push
mov
sub
and
aaa
pop
jp
into
pop
int3
sahf
push
push
and
sub
fmulp
testb
rcll
sub
syscall
test
jo
leave
jmp
sbb
jae
cmp
sarb
jge
lds
fsubrs
sub
sub
rcr
dec
ret
xchg
inc
pop
movsb
mov
jmp
mov
or
mov
xor
xchg
out
mov
cmc
mov
dec
jl
test
outsb
imul
sub
push
cmpsb
xchg
jge
mov
dec
outsl
jmp
iret
fucom
mov
outsl
or
jns
mov
sbb
push
out
mov
sahf
xchg
insl
mov
subb
cmp
mov
loopne
lret
inc
ss
pop
push
sbb
shll
aad
mov
shlb
lock
inc
test
pop
ss
js
fwait
insb
pop
lret
cmpsl
sahf
popf
dec
pop
mov
les
out
popf
in
jp
mov
mov
xor
out
fsubrl
je
clc
lret
sbbb
push
dec
mov
aas
dec
sub
xchg
js
jo
ror
mov
push
push
push
clc
popl
adc
pop
pop
cmp
mov
shll
hlt
push
mov
sub
in
inc
bound
xchg
push
lock
or
outsb
insb
inc
and
inc
jb
in
stos
in
aam
pop
repnz
inc
mov
sub
int
add
mov
sub
pop
push
ss
iret
push
sahf
decl
fildl
loop
repz
cs
cmp
repnz
out
cmp
clc
sub
mov
loopne
hlt
dec
cmp
adcb
lret
or
xor
mov
loope
movsl
aas
lea
pusha
aaa
xchg
lahf
negl
sti
pop
and
mov
popl
or
cmpsl
dec
sub
sub
mov
fidivs
adc
loop
xchg
inc
scas
xchg
mov
sub
mov
je
inc
in
jo
and
jge
mov
mov
push
hlt
jmp
daa
inc
sub
cli
xlat
xchg
sbb
in
gs
daa
cmp
push
into
mov
jo
xor
mov
mov
mov
clc
test
fidivs
fisttpl
negb
popf
stos
andl
insb
sub
ja
push
bound
out
cmpsl
sahf
std
dec
pop
fsubr
fcomip
dec
js
inc
xchg
pop
xchg
jb
add
imul
dec
sarb
cwtl
mov
adc
mov
sbb
push
sub
xchg
aad
mov
cmc
test
adc
or
mov
push
cmp
sbb
ss
imul
add
outsb
je
cmp
mov
das
adc
jns
imul
fs
iret
jno
aad
test
cli
shrb
lret
or
lcall
lods
nop
mov
ficomps
pop
sbb
js
and
inc
mov
je
clc
out
cli
fstps
inc
add
jnp
mov
das
rclb
mov
sub
add
adc
mov
push
xchg
mov
jae
das
sub
adc
xchg
cmp
push
outsl
leave
cmp
jg
xor
sbb
or
and
add
sub
mov
dec
icebp
adc
andb
push
inc
pop
adc
insb
jp
pop
lods
repnz
mov
insl
cmp
pop
jnp
out
cld
fsubrs
sahf
xor
stos
dec
mov
nop
addr16
add
mov
sbb
loop
push
cmp
push
fstpl
push
fisubrl
or
cld
xchg
xchg
jle
loope
cltd
xor
sub
sbb
inc
dec
out
mov
dec
add
mulb
mov
sbbl
mov
insb
mov
lock
jl
cld
or
mov
add
adc
pop
pop
or
nop
pop
aam
movsl
cmp
dec
xchg
mov
xchg
mov
shrl
fdivrs
pop
icebp
inc
mov
js
lret
addr16
mov
out
cmpsl
fistpl
cmp
pop
outsb
int3
in
xchg
sub
add
sbb
call
fnstsw
inc
sub
pop
cmc
loopne
push
in
mov
shll
in
stos
mov
pop
pop
jnp
imul
cli
cmpsl
pop
repnz
push
icebp
movsb
out
jl
test
test
ss
movsb
inc
lock
mov
and
push
pop
addr16
push
adc
pop
movsl
xor
or
inc
adc
rol
xor
cltd
cmp
sbb
mov
in
cld
js
bndldx
pop
or
add
mulb
stos
mov
mov
jne
lods
shr
xchg
add
cmp
inc
push
dec
mov
push
outsl
adc
out
adc
xchg
pusha
mov
inc
fucomp
jl
push
addb
dec
pop
arpl
int3
js
sti
push
cmp
stc
pusha
cmp
imul
call
leave
pop
out
adc
dec
pop
cwtl
mov
sbb
xchg
lret
dec
push
jge
sbb
dec
rclb
mov
clc
inc
fsubrp
stc
sbb
cmc
dec
sbb
dec
imul
inc
movsl
push
xchg
or
jne
ljmp
shll
mov
mov
jae
outsl
shlb
dec
cli
adc
hlt
cwtl
inc
std
in
mov
mulps
lcall
shlb
insb
rclb
push
adc
xchg
and
cltd
repnz
and
pushf
and
test
cltd
mov
inc
stc
push
mov
jge
loopne
pop
mov
stos
xchg
bnd
add
insl
add
push
aad
fidivrl
mov
loopne
test
add
sti
gs
loope
movl
mov
mov
cmp
push
cli
mov
dec
xchg
inc
sbbb
je
aas
dec
cmp
or
insl
jmp
and
fdivrl
inc
mov
negb
xor
xchg
jnp
cli
inc
repnz
out
clc
sahf
pop
clc
popl
sbb
stc
dec
sbb
xor
inc
adc
or
and
mov
inc
push
inc
test
jle
pop
inc
cltd
mov
dec
lods
outsl
mov
dec
add
adc
test
fnstsw
cmpsl
iret
cmpsb
pop
icebp
adc
je
clc
stc
and
push
xlat
movsl
imul
xor
stos
pop
push
adc
and
xchg
cmpsl
lock
and
adc
adc
das
fmull
push
dec
in
cwtl
mov
sbb
in
xchg
fnstenv
insb
adc
gs
xchg
fbstp
jge
fcmovnb
dec
xchg
out
mov
pop
add
lds
jns
addl
dec
lock
adc
xchg
cmp
mov
xorl
or
test
push
or
mov
push
dec
jno
xorb
test
mov
aas
cmovne
iret
jb
lahf
adc
and
dec
dec
xchg
dec
pop
into
pusha
shlb
sbb
pop
icebp
pop
nop
ds
xchg
cmp
lds
cmp
stc
popa
aaa
pop
scas
xchg
cmpsl
out
or
into
and
cmp
lret
outsl
scas
push
push
inc
inc
xor
xchg
fadd
mov
xchg
sti
push
push
xchg
bound
pop
push
lahf
and
push
repnz
stc
ss
push
sbb
dec
mov
lds
bound
pop
fs
mov
fbld
insl
push
stos
dec
adc
push
push
fwait
lret
sbb
std
jle
jmp
gs
les
lret
cmpsl
pop
add
sbb
mov
xchg
movsb
repnz
and
cmp
stc
fwait
aam
sub
addl
stos
jg
add
push
addb
cmp
out
xchg
mov
push
or
adc
adc
scas
pmulhw
mov
arpl
xor
hlt
push
cld
sbb
cmpsl
out
mov
fwait
call
cmp
pop
and
adc
fidivrs
out
push
in
xchg
sbb
mov
daa
daa
int3
push
test
pop
mov
mov
jle
adc
inc
pushf
fisubl
dec
jge
xchg
jmp
xchg
es
cmc
adc
jnp
dec
addr16
cmp
xchg
push
sarb
mov
sbb
pop
mul
xchg
pop
stos
stos
xchg
pop
js
jmp
es
clc
and
cwtl
or
adcb
dec
fwait
inc
clc
pop
lahf
aad
das
dec
dec
fadd
in
fidivrl
je
inc
aad
cmp
testl
das
inc
dec
notb
cmp
addr16
into
cmp
std
sahf
pushf
and
cwtl
push
mov
fbstp
cli
xor
dec
js
jb
adc
es
xchg
add
inc
bound
cmp
es
jg
imul
notb
cmp
and
and
cwtl
sub
out
xor
pop
or
mov
jae
in
lea
sbbl
mov
sbb
stos
push
into
fs
add
jne
jg
ret
daa
xorl
sub
test
bnd
xchg
sub
pop
fwait
loopne
int3
jp
adc
aaa
iret
jecxz
dec
loop
not
cmp
imul
mov
xchg
inc
and
inc
sbb
dec
stos
adc
stos
or
mov
mov
pop
test
shrl
push
mov
ret
clc
or
xor
lods
movsl
loope
in
int
and
les
push
rcl
cmp
test
xor
sbb
adc
sub
inc
cmp
arpl
or
sub
sbb
mov
mov
aam
cltd
nop
stos
xchg
mov
push
push
aad
imul
rorl
mov
sub
sbb
adc
adc
dec
scas
imulb
add
aam
pop
imul
adc
add
mov
dec
sbb
and
dec
das
cmp
aaa
jge
jmp
jae
pop
adc
add
int3
fisubs
dec
mov
in
imul
inc
bound
lods
sti
jle
rcrl
filds
fnstenv
in
cmp
and
sub
adc
std
arpl
mov
push
jo
lahf
cmp
xlat
adc
cmp
popa
sub
add
or
jne
sbb
repnz
mov
bound
ret
loope
add
sarb
cs
jge
dec
fsubr
mov
shl
shrl
adc
add
rolb
cli
or
mov
sub
sbb
pusha
mov
sarl
and
sahf
sbb
push
imul
adc
xor
sbb
xchg
sub
jnp
mov
imul
adc
adc
xchg
add
jp
pushf
out
add
push
sbb
push
push
shlb
push
mov
mov
mov
add
stos
add
mov
mov
xor
inc
out
xor
xor
aam
add
cmc
push
in
divb
mov
lock
shrb
cmpsl
add
pop
and
adc
stos
ja
push
push
mov
imul
int
mov
ret
push
lods
insb
sahf
pop
into
inc
andl
in
and
and
lods
lods
pushf
inc
ret
mov
pop
fists
mov
jne
cltd
bound
repnz
or
sub
pop
ljmp
in
mov
cmc
cmp
sub
xchg
aad
enter
mov
push
test
nop
mov
mov
aad
ret
call
repz
pop
call
dec
lahf
push
mov
adc
clc
xchg
push
push
or
mov
mov
aaa
sub
jne
pop
imul
aas
add
stos
lock
outsb
sbb
scas
cmc
jg
cmp
xchg
pop
repz
xchg
std
js
jnp
dec
filds
pop
push
jp
add
push
xchg
out
mov
movsl
fs
insb
mov
adc
mov
daa
in
mov
test
cld
jno
xlat
dec
or
push
push
add
and
cwtl
daa
pop
fstpt
int
xor
test
daa
adc
push
orb
xor
pusha
adc
jbe
dec
out
loopne
mov
mov
jns
jbe
inc
cltd
out
jp
or
lcall
mov
cltd
fs
xlat
stos
jne
stos
pop
xchg
addr16
int3
xchg
jle
movsb
jno
fcos
adc
jecxz
xor
sahf
xor
fidivrl
or
lret
jae
movsb
add
cmc
inc
movsl
mov
leave
sub
insb
cmp
xchg
cmpsl
cmp
cs
rolb
cwtl
sub
xlat
pop
test
std
sbbl
bts
xchg
jae
sbb
dec
push
sbb
push
scas
xchg
mov
outsb
sub
pusha
pop
movsl
insw
cmpsb
sbb
rorb
fcmovnbe
je
stos
bswap
sbb
imul
xchg
loopne
cld
adc
xchg
adc
hlt
sub
arpl
xor
test
cmp
repz
dec
inc
jo
and
out
xchg
xor
xchg
dec
sbb
dec
sub
outsl
push
ja
mov
xor
dec
add
sbbl
aam
fsubr
jecxz
in
pop
ds
cmp
lret
inc
aam
add
cmp
movsb
dec
ret
sarl
daa
mov
andl
cmpsb
add
out
inc
ffreep
sbb
imul
pop
sbb
mov
dec
out
pop
test
pop
push
or
xchg
sub
xor
xor
pop
hlt
mov
push
mov
and
addr16
or
sbb
mov
jle
hlt
jl
shlb
pop
xchg
mov
pop
xchg
stc
xchg
adc
std
fisubrs
out
mov
aad
or
movsb
or
scas
fnstsw
fnstcw
or
and
sbb
fsubr
stos
cmc
cmpsl
jp
outsb
aaa
and
or
pop
sbb
dec
jg
mov
mov
lcall
outsl
insl
dec
mov
mov
addr16
les
subb
xlat
or
inc
das
cmp
jne
sbbb
sbb
movsb
dec
or
xchg
sub
and
negb
push
push
mov
imul
js
jo
fwait
sub
stos
mov
repnz
sbb
fisubs
neg
xchg
push
popf
sub
xchg
mov
stos
loope
mov
add
lock
pusha
xchg
xchg
mov
es
sbbb
sub
mov
shr
dec
push
and
push
push
sti
xchg
sti
jae
push
mov
out
push
and
xchg
lahf
xor
dec
loopne
rcll
cmpsl
mov
addr16
jp
fbstp
add
ss
icebp
mov
sti
pop
xchg
sub
mov
sbb
insb
adc
sub
push
mov
mov
pop
dec
mov
mov
mov
daa
into
sbb
cmc
lea
sbb
sub
clts
dec
dec
sub
mov
ljmp
jno
out
and
test
stos
jno
mov
lgs
imul
sbb
je
cmp
lret
outsb
bound
nop
and
sub
pop
or
jne
xchg
mov
or
lret
xor
xchg
inc
add
pop
or
cmp
ret
shrb
and
lcall
and
imul
mov
lret
dec
pop
inc
cmp
jecxz
fmul
sbb
inc
fidivs
shr
push
adc
gs
jl
popa
mov
cmpsb
pop
mov
mov
jmp
mov
xchg
and
and
sahf
xchg
popf
sub
jp
js
pop
mov
mov
fcmovbe
imul
and
movsl
pop
imul
jp
nop
js
mov
outsl
test
or
mov
ror
push
dec
mov
out
mov
shrl
dec
aad
inc
inc
out
fwait
sahf
repz
ds
xchg
ds
mov
jge
test
addl
lock
mov
std
test
stos
repz
adc
add
mov
inc
enter
out
mov
bound
and
ret
dec
jae
call
inc
das
cmp
pop
dec
sti
jle
xchg
mov
jmp
mov
clc
inc
scas
and
int3
fs
lods
fcmovne
bnd
ds
jno
xlat
pop
cmpsl
cmp
dec
sbb
lea
sub
mov
jnp
push
call
nop
sbb
xorl
cmp
nop
cli
xchg
test
inc
in
movsl
sbb
pushf
test
test
ret
cmc
push
mov
pop
mov
aaa
into
loopne
xorl
into
ss
int
ret
lret
rcrb
out
jecxz
jae
xor
out
adc
ret
push
mov
in
test
inc
imul
ljmp
jbe
repnz
xchg
push
pop
mov
out
xchg
adc
loope
add
add
lret
push
dec
leave
and
test
push
or
jb
loope
adc
in
iret
mov
mov
imul
fwait
movsl
or
adc
push
mull
mov
cmp
fistps
and
mov
inc
push
jae
jne
inc
fs
and
lock
loopne
push
jecxz
aas
fdivrl
inc
sbb
add
jle
mov
aaa
into
pop
xchg
cmp
ret
int
mov
push
mov
fistpll
mov
mov
aam
lods
and
popl
sub
mov
adc
mov
cltd
gs
jecxz
xlat
mov
jl
add
scas
cld
dec
mov
or
dec
pop
xor
rorl
imul
repnz
sbb
ljmp
sub
cmp
jno
push
movsb
roll
insb
test
imul
xorl
aad
jb
test
cmp
leave
mov
out
xor
in
push
pop
dec
adc
mov
inc
mov
add
sub
pop
andb
add
or
push
cltd
in
pop
pop
or
mov
int3
fldt
shr
lods
lahf
mov
repz
xchg
movsl
cmp
adc
rcll
pop
mov
stos
xorl
push
mov
mov
pop
jle
fldt
pop
xlat
push
cmp
sbbl
aad
insl
pop
mov
inc
arpl
mov
jg
popa
xor
arpl
inc
fstpl
pop
push
mov
sub
inc
add
jns
dec
ret
and
sub
jecxz
mov
inc
jae
je
add
dec
loope
xchg
popa
mov
adc
mov
fisubrl
mov
sbb
loopne
arpl
movsb
ret
inc
pop
jecxz
clc
cltd
mov
notb
lods
cltd
and
mov
bound
push
lock
aas
mov
ret
sub
mov
xchg
js
pop
shl
push
inc
mov
xor
sub
inc
or
sub
xchg
cmc
dec
inc
movsb
repnz
or
push
cs
xor
or
test
or
leave
add
test
sarl
nop
rcr
pushw
out
in
mov
mov
popa
mov
icebp
sub
inc
stos
in
push
and
inc
jle
lret
jl
movl
sbb
daa
and
insb
jae
std
icebp
movsl
cs
aaa
int3
cli
stos
cmp
pop
aam
aas
jnp
sub
fwait
sbb
pop
mov
jb
mov
pop
xchg
ss
test
mov
in
fwait
les
xor
sub
hlt
icebp
out
mov
shrl
scas
push
lods
fbstp
adc
or
hlt
adc
in
push
xor
mov
stc
cmpb
pushf
loop
xor
shr
repz
in
pop
mov
xor
or
mov
jmp
loope
push
ljmp
jno
mov
into
enter
inc
xchg
movsb
mov
inc
mov
jle
loopne
inc
mov
pusha
les
stc
mov
repnz
jmp
mov
test
sbb
aam
mov
test
mov
and
and
jae
cmp
cli
xchg
iret
add
hlt
fcmove
cmpsb
push
adc
orb
or
push
jo
loopne
loop
jno
outsb
jp
xchg
daa
outsl
lcall
movsb
arpl
je
test
lods
xchg
jmp
inc
cmp
loope
sub
in
jnp
das
dec
dec
mov
inc
mov
push
fistpl
push
dec
mov
jge
data16
aam
ret
add
jb
out
or
pushf
lret
sti
mov
repz
inc
pop
lret
jae
int
dec
sub
jno
mov
divl
popf
pop
push
xchg
aas
cmp
fimull
popa
xchg
cmpsl
dec
cmpsb
pop
mov
test
adc
sbb
in
aad
xor
in
stc
icebp
pop
scas
and
add
push
js
adc
cltd
movsl
cmp
cmpsb
pop
inc
andb
dec
or
inc
push
inc
and
push
bound
xchg
pop
inc
mov
sbb
mov
aad
or
sub
xor
and
inc
mov
insl
or
movsl
call
out
data16
pushl
movsb
repnz
pop
add
je
pop
xor
cmp
xchg
xchg
add
into
or
or
data16
mov
cmp
pop
sub
or
sti
cmpxchg
inc
xor
jg
lahf
push
xchg
adc
shll
inc
push
nop
dec
and
mov
addl
inc
roll
jno
sahf
ret
icebp
pop
sbb
neg
cmovl
or
cmp
mov
sbb
jp
in
repnz
sub
sub
jl
test
rcl
xchg
inc
xchg
dec
xchg
mov
or
jl
mov
add
or
push
mov
cmp
fldl2e
add
jmp
xlat
addr16
adc
notb
pop
js
popf
dec
cmpsb
mov
xchg
out
jno
iret
and
ficoms
jg
shll
adc
jo
jbe
mov
mov
xlat
ds
cmp
call
mov
cwtl
std
mov
jnp
inc
xchg
push
incb
sub
cmp
cmpsb
add
xor
je
out
bound
aam
add
inc
sub
test
xchg
sbb
push
xlat
mov
jmp
cmpsb
dec
adcl
and
enter
inc
test
dec
mov
fsub
mov
pop
sahf
dec
mov
xor
outsb
addr16
mov
dec
jb
test
xor
popa
clc
cmp
lock
jmp
sub
ss
push
inc
ret
stc
nop
or
mov
rcr
mov
stos
stc
pop
push
in
nop
test
sbb
sbb
movsb
sti
stc
popa
and
xchg
inc
cld
sti
pusha
out
popf
cmpsb
and
adc
cmc
cmp
negb
jno
push
jnp
lcall
adc
cmp
fisttpll
jae
jbe
sbb
scas
shlb
mov
jge
add
icebp
fsubl
lds
push
jo
or
jle
jmp
add
xchg
stos
leave
and
and
mov
jp
orl
dec
pop
sbb
mov
adc
mov
or
adc
cld
add
push
lods
aas
cmpsb
clc
fwait
shlb
loop
inc
push
adc
inc
das
int
and
in
test
inc
aam
nop
lret
inc
adc
repnz
sahf
and
and
push
mov
xchg
push
cmpb
scas
jns
rcrb
pop
cmp
out
jb
adc
push
out
insb
xor
arpl
outsb
sub
cmpsl
inc
mov
cmc
jle
fdiv
outsb
fcomip
mov
nop
add
xchg
out
cmp
inc
mov
in
mov
jecxz
xchg
gs
and
mov
xor
cmpsb
call
push
pop
popf
pushf
add
lret
iret
mov
pop
mov
popf
sbb
pop
pusha
stos
xchg
addr16
push
xor
movsb
xor
cmp
xchg
fstpl
fdivrs
rcrb
aad
fiaddl
pop
adc
in
push
inc
pop
in
xchg
jbe
sbb
lds
arpl
pop
fdivp
lea
xlat
mov
addr16
out
jg
rcrl
xor
or
in
sbb
and
mov
aas
in
sub
mov
push
dec
cmc
and
mov
cltd
add
rcrl
and
sbb
mov
sti
xor
iret
sub
inc
js
in
sti
cld
mov
xchg
outsl
loope
mov
daa
xor
cwtl
imul
lods
jge
lds
sub
aad
and
push
cwtl
mov
shr
les
dec
or
push
sbb
nop
jns
into
out
mov
outsl
xchg
inc
fs
mov
ret
push
in
into
gs
jno
rcl
orl
fistps
xlat
mov
mov
pop
addl
std
mov
aaa
popf
insl
sbb
xor
insl
std
test
and
ficoms
sub
adc
jo
out
xchg
mov
frndint
xlat
repnz
icebp
sbb
adc
in
mov
call
outsb
inc
test
mov
cmp
sahf
jns
fcoms
pop
pop
inc
push
movsl
ja
out
dec
sub
rcll
movsb
add
and
and
push
sub
aad
rcrl
sub
push
out
rcrl
js
dec
outsb
stc
mov
jno
jp
sub
cmc
mov
and
push
mov
sub
les
sbb
mov
mov
sub
test
push
mov
lret
xchg
jns
jo
dec
in
repnz
mov
test
aaa
test
pop
xchg
test
imul
movsl
cmp
jecxz
mov
pop
icebp
call
inc
iret
outsb
jmp
in
je
pop
js
fldt
or
je
mov
xor
push
es
pop
cmp
hlt
sbb
inc
and
insb
push
adc
nop
imul
std
adc
mov
cmpsl
ds
pop
out
movsl
loope
aas
pusha
sbb
mov
cmp
stos
push
popa
jecxz
stc
cmp
adc
add
js
jge
sub
lret
and
subb
push
inc
push
pop
in
or
mov
adc
inc
scas
call
jle
fisttps
rorb
sbb
pop
pop
jb
lds
outsb
outsb
imul
push
in
inc
nop
sub
mov
int
rcrb
icebp
iret
ret
pop
outsb
das
mov
pop
je
lods
mov
ficompl
insb
add
mov
sbb
mov
xchg
call
or
sbb
inc
xchg
mov
add
add
mov
dec
mov
jl
ds
in
jp
rcr
into
add
cltd
inc
xchg
push
mov
push
mov
addb
mov
out
inc
push
xchg
dec
in
cmc
mov
jnp
ss
sti
xchg
jmp
mov
fsts
imul
xchg
pop
jge
es
test
or
lock
pop
pop
popf
jecxz
sbb
iret
mov
adc
mov
roll
pop
in
cmpb
test
fwait
push
fs
lret
popa
stc
lods
inc
xor
les
iret
pop
in
and
es
mov
mov
push
test
popf
cmp
mov
cmp
jnp
shl
das
mov
dec
test
fisubrl
pop
xor
andl
mov
cmpl
hlt
into
cmpsb
dec
xchg
stc
xchg
sbb
mov
xor
pop
xor
push
ja
dec
and
inc
dec
je
leave
divb
call
cmp
addr16
adc
mov
imul
mov
sti
cmc
sbb
fsubrs
lret
dec
pop
outsl
cwtl
xor
icebp
mov
inc
cmp
sbb
mov
adc
adc
cwtl
inc
hlt
out
mov
fs
push
fldl
loop
lcall
stc
or
push
push
call
aad
inc
gs
jg
mov
vmaxpd
cli
movsb
inc
fldenv
jns
addr16
pusha
repnz
cmc
int3
adc
nop
xor
ret
push
pop
fs
pop
mov
push
and
sbb
clc
cltd
rcrl
mov
aas
imul
sbbb
nop
das
cld
dec
movsl
and
popf
cmp
scas
pusha
jle
xchg
lea
sub
mov
repz
sub
push
add
test
and
or
je
dec
add
lcall
flds
outsb
ror
leave
ret
jmp
and
loope
cmp
dec
and
lea
clc
xor
jg
lret
pop
cmp
mov
push
dec
xchg
fs
ret
lds
outsb
mov
sbb
pushf
daa
mov
xor
jns
and
jp
dec
in
shlb
loop
decb
push
or
pop
arpl
popf
push
loopne
test
arpl
popa
sbb
bound
pop
xor
scas
ja
stos
mov
fisubrs
in
sti
ss
xchg
js
mov
cmpsl
inc
out
fwait
lcall
lds
mov
cs
pop
push
jne
mov
and
ret
mov
push
mov
call
ds
xchg
imul
push
in
pusha
idivl
jae
int
xor
les
xchg
mov
ss
mov
lret
push
stc
mov
data16
mov
sub
mov
mov
adc
testl
inc
jecxz
cmp
and
sarl
mov
mov
mov
mov
dec
sub
pop
lock
add
sub
inc
pop
sahf
ja
cmp
add
nop
mov
mov
frstor
fidivrs
push
aas
inc
dec
dec
fmull
cmp
data16
loop
adcb
repz
outsb
aas
ficoms
dec
or
aad
dec
push
addr16
scas
push
xor
movlps
sub
xor
sbb
loopne
pop
jmp
mov
sbb
fwait
xor
and
gs
cmp
daa
shlb
repnz
xor
gs
pop
int
lret
sbb
outsl
mov
and
lret
dec
sbb
sub
mov
cwtl
loope
nop
js
xchg
and
push
add
xchg
push
push
lods
push
in
inc
adc
fcmovnbe
xor
or
fistpll
out
add
lcall
mov
arpl
xchg
xchg
psubsb
sahf
lods
fbld
in
lods
pop
add
cmp
push
outsl
out
popf
mov
add
out
adc
inc
or
addr16
mov
imul
insb
sbb
js
div
cmp
xchg
inc
scas
loopne
xchg
pop
dec
mov
push
movsb
cmp
or
inc
mov
cli
mov
push
or
xchg
add
adc
decb
fcompl
inc
jl
cmp
aaa
cmp
cld
std
xor
cltd
ja
xchg
mov
outsb
pop
mov
mov
fwait
cmpsl
dec
cmp
cmpsl
push
mov
testb
push
je
xor
sti
pop
adc
ja
push
mov
cmp
arpl
mov
das
pop
ljmp
out
sbb
sbb
mov
adc
sub
out
sbb
dec
je
jl
nop
sbb
mov
pop
adc
pop
lahf
movsl
add
dec
shl
mov
push
das
sub
push
repz
fs
jns
fs
pop
mov
push
and
mov
jge
fwait
sub
add
push
aas
xor
mov
data16
dec
push
adc
aad
das
repz
and
inc
scas
xchg
jecxz
hlt
dec
lret
jbe
push
xchg
and
inc
adc
jbe
xor
sti
sub
cmpsb
repz
adc
loopne
cmc
sbb
jnp
into
enter
cmp
push
cmpsb
sti
cmp
ljmp
sbb
mov
adc
mov
sahf
imul
fidivrs
es
mov
fnstsw
lds
jne
xor
ret
fnclex
xchg
fwait
ds
arpl
hlt
movsl
cmp
gs
mov
xchg
repnz
mov
adc
push
adc
pslld
sub
or
push
loope
pop
subb
dec
or
loopne
rclb
push
xchg
push
loope
or
mov
mov
in
bound
pop
pop
outsb
stos
neg
in
sbb
stos
xchg
aas
pop
das
add
mov
sub
mov
push
dec
loopne
and
call
je
jmp
gs
sub
outsl
pop
ret
jl
aad
or
cmp
in
cmp
dec
ret
repz
adc
stos
es
xlat
mov
jmp
sub
xorb
adc
data16
in
icebp
mov
mov
out
add
or
mov
int
xchg
inc
add
je
jge
imul
cld
adc
push
je
popa
push
fwait
xchg
mov
xchg
call
mov
sbb
bound
int
push
in
inc
std
cmp
out
test
out
add
cmpsl
inc
stos
nop
lds
sbb
into
mov
sbb
dec
icebp
jmp
lret
xor
xchg
push
loopne
loope
and
shlb
ds
push
dec
and
sbb
lea
fdivr
stos
insb
sub
or
push
cmp
adc
stos
stos
movsb
jae
dec
or
loop
xchg
adc
cli
movsl
sub
mov
sbb
enter
mov
add
sbb
add
stos
addr16
out
insl
sbb
dec
insb
mov
push
mov
icebp
adc
xchg
push
call
lahf
jo
enter
enter
out
popf
jae
subb
je
mov
mov
cmp
out
jp
mov
fwait
je
xchg
pusha
ret
pop
push
movsl
mov
mov
mov
mov
mov
adc
mov
push
scas
movsl
sti
out
test
int3
lods
inc
fwait
pop
lods
cmp
aas
lret
pop
lea
xor
gs
sbb
xor
cmpsb
dec
and
inc
xchg
sub
and
ds
inc
push
sahf
ss
push
stc
mov
cmpb
pusha
pop
pusha
xchg
dec
push
repz
sbb
out
mov
pop
cwtl
xlat
xor
lods
jo
int
into
inc
push
ljmp
jb
dec
mov
scas
inc
subl
adc
add
adc
mov
imul
cwtl
test
ja
subl
mov
xchg
mov
jle
js
push
movsl
mov
scas
ficoms
stos
inc
inc
pop
fimull
dec
in
push
and
stos
inc
dec
out
mov
ljmp
aam
out
stos
sbb
dec
lret
das
das
andl
jge
aam
push
and
js
outsl
lahf
sbb
sub
cmp
pop
pop
das
mov
pushf
icebp
or
or
mov
xchg
push
add
dec
xor
pop
or
cmp
std
leave
pop
hlt
mov
xchg
clc
nop
inc
or
cli
add
pop
sub
cwtl
test
xchg
shlw
push
dec
xlat
cs
in
aaa
dec
sahf
or
lea
cwtl
loopne
test
cltd
mov
mov
pushf
mov
mov
out
sbb
repz
push
xchg
insb
cltd
and
jne
test
push
xchg
imul
jo
fistpll
pop
enter
mov
sub
jb
pusha
xchg
push
idiv
adc
das
xchg
dec
dec
popa
jmp
mov
mov
mov
dec
stos
mov
and
jb
push
cld
xchg
std
ret
outsb
leave
sbb
dec
fchs
ja
enter
test
xchg
ficoml
movsb
cli
lahf
push
or
mov
inc
addb
xlat
ds
inc
cmp
shrl
fnstenv
into
jge
adc
sub
sbb
fs
loop
pop
adc
outsl
add
imul
adc
imul
daa
outsl
add
dec
xor
bnd
inc
lods
fstl
sbb
xchg
dec
xor
lret
sub
aam
push
popf
cmc
xor
popf
cmpsl
imul
add
das
xor
pusha
xchg
inc
xchg
mov
inc
popa
lock
sbb
and
mov
je
test
fidivrs
mov
outsl
xchg
xlat
push
out
rcll
mov
cwtl
dec
repnz
jecxz
and
insb
sti
ret
sub
inc
pop
adc
mulb
mov
in
iret
inc
pop
sub
sub
xchg
sbb
xor
dec
out
mov
add
add
adc
cmp
pop
scas
jno
hlt
lahf
fbstp
pop
push
lods
lea
test
sahf
lods
inc
sbb
xchg
inc
or
dec
push
add
pop
fldenv
jecxz
xor
popa
inc
icebp
sarb
out
stos
dec
loop
fs
fdiv
push
gs
push
addr16
lea
or
jl
mov
cmpsl
imul
test
pusha
loop
stc
push
imul
negl
enter
lret
incb
xor
sub
lea
xchg
inc
and
xchg
psadbw
jl,pn
notl
add
inc
inc
les
pop
inc
xlat
add
lss
lock
cmp
adc
sbb
and
mov
rcrl
lret
add
push
clc
cmp
or
sbb
adc
jp
adc
dec
xor
xchg
ret
idivl
arpl
cmp
addr16
sbb
sub
jno
shrl
mov
dec
loope
repnz
xchg
inc
retw
xchg
addr16
cmp
cvtps2pd
ret
pusha
pop
pushf
daa
insl
inc
iret
pop
arpl
sub
push
jl
icebp
cmp
mov
adc
push
mov
cwtl
imul
int3
xor
daa
gs
out
or
cmp
pop
data16
and
mov
lods
mov
ret
repz
cmpsl
mov
pop
and
mov
mov
scas
je
movsl
push
lods
ret
xchg
jae
test
js
adc
sbb
cmpsb
stos
xor
add
jge
icebp
sub
adc
pop
mov
test
add
imul
cmp
and
outsl
enter
push
fs
pop
repz
sub
mov
lret
fbld
iret
add
ds
gs
sub
setne
call
stos
int3
inc
cltd
hlt
mov
test
mov
xchg
mov
mov
xchg
cmpsb
sarl
dec
pushf
lods
mov
test
roll
mov
xchg
mov
adc
fidivrs
daa
pop
jl
xor
pushf
mov
test
adc
cs
dec
xchg
jmp
sbb
icebp
and
sbb
fwait
ss
ss
cs
push
into
jo
sti
out
mov
sbb
fbstp
jl
jnp
mov
and
push
pop
jno
sahf
stos
rol
sub
adc
dec
lcall
nop
loope
mov
pop
hlt
loope
push
in
pushf
push
clc
xchg
mov
push
gs
imul
jmp
ljmp
das
in
pop
shll
or
push
ljmp
xor
imul
ss
in
imul
pop
adc
push
popa
das
les
and
jle
std
enter
inc
add
xchg
rorl
lret
add
sbb
pusha
cmpsl
mov
or
stos
mov
sbb
in
push
mov
lods
jp
push
pop
cmpsl
xchg
scas
jns
adc
aaa
test
insb
push
push
dec
loopne
mov
jg
and
test
ftst
subw
fstpt
pop
or
mov
outsb
pop
xor
les
or
xchg
test
pop
mov
lret
fldl
sahf
pop
ja
or
mov
andl
push
int
push
xchg
dec
movsb
call
push
lds
popa
dec
pop
hlt
mov
sub
pusha
imul
and
mov
cmp
icebp
adc
cmp
cs
outsl
mov
out
mov
roll
mov
fwait
push
mov
idivl
inc
subl
cmp
adc
mov
in
js
xchg
dec
out
dec
dec
ljmp
adc
fsubl
cld
sbb
cmp
stos
sti
aas
fldcw
lret
out
arpl
fwait
mov
jge
ja
mov
mov
jae
pop
mov
ret
jecxz
mov
lcall
and
loope
adc
push
push
and
faddl
nop
push
push
mov
das
fs
ror
jns
in
out
jno
push
inc
jbe
inc
and
sbb
cmp
mov
xchg
scas
lods
pop
fistps
inc
jne
jecxz
cmp
aaa
stc
push
movsb
je
popf
dec
in
cli
sbb
inc
ja
mov
js
jge
pop
xor
lea
push
mov
push
les
pop
push
test
frstor
inc
push
call
mulb
aam
imul
inc
mov
inc
test
js
loop
jp
out
mov
adc
mov
sahf
shl
imulb
jno
mov
xor
out
mov
sbb
xor
mov
jb
cmp
outsl
sbb
in
js
xor
les
push
push
adc
adc
cli
xor
jae
icebp
scas
lahf
xchg
sbbl
push
lods
sbb
pop
lock
lds
or
xchg
sub
cmp
sti
or
jle
inc
pop
inc
dec
outsb
add
dec
xchg
pop
lcall
sahf
sub
push
mov
adc
leave
test
dec
sbb
push
inc
push
mov
jp
push
mov
std
jo
sbb
pushf
mov
cmpsl
or
into
stos
inc
or
sbb
dec
cmp
in
xor
mov
push
nop
jmp
iret
fistpl
push
icebp
sbb
pop
insl
lods
mov
call
outsb
cmp
inc
bound
aas
shl
sub
aad
cmp
mov
sub
daa
aad
cli
dec
ud0
cmpsb
lods
aad
mov
stos
pop
cmp
shl
test
push
add
xor
cltd
stos
cmp
arpl
into
je
lea
jecxz
daa
xchg
pop
pop
ljmp
mov
dec
mov
dec
push
pop
pusha
sbb
movsb
mov
call
push
stos
jns
pop
lods
in
test
test
or
mov
or
and
fsubrs
aad
enter
test
roll
pop
outsb
bound
cltd
cmp
into
movsb
jge
test
pop
pop
xchg
in
mov
mov
adc
sub
inc
int3
dec
mov
rcl
jns
in
test
lea
std
mov
shlb
movsb
cmpl
jle
xchg
mov
sbb
lods
mov
cmp
jo
fcoml
inc
frstor
push
xlat
notb
imul
popa
in
icebp
movsl
xor
int3
cmp
jbe
les
cwtl
out
dec
xor
push
lods
imul
fwait
add
arpl
mov
cltd
add
or
popa
movsb
out
dec
ret
subb
mov
jno
mov
or
outsl
pop
lcall
ss
or
adc
and
sahf
mov
out
lret
lock
subb
loopne
or
and
pop
rol
xlat
jecxz
jb
or
jne
pop
sbb
dec
jns
js
scas
mov
mov
dec
dec
adc
jnp
mov
inc
lret
or
bound
sbb
push
jmp
in
xchg
jo
or
sbb
add
cmp
and
or
fstps
mov
pusha
adc
add
loop
or
cmp
imul
jae
cwtl
or
mov
scas
lret
cmpsb
pop
data16
push
hlt
xor
popa
xchg
add
mov
push
clc
and
or
pop
sahf
mov
xchg
jae
popf
and
nop
loope
adc
loopne
dec
bound
in
rorl
inc
fnstsw
loope
in
lea
les
and
mov
cmpb
inc
lret
push
shrl
adc
lock
pop
fidivl
add
cmp
sub
popf
pop
icebp
push
aas
iret
fistpl
stc
or
mov
ljmp
add
dec
movsl
mov
sbb
ret
and
mov
aas
mov
nop
inc
orl
addr16
mov
mul
jg
mov
andb
mov
test
outsb
pop
cmc
lahf
or
sbbl
push
sbb
stc
pusha
js
sbb
mov
lea
lds
movsl
xchg
lret
sti
mov
mov
xchg
add
test
and
mov
or
mov
ss
mov
xor
mov
dec
sbb
pop
aad
jmp
pop
xor
sbb
mov
sbb
les
pop
repnz
in
mov
in
jge
push
shl
in
shl
ret
repz
sub
push
sub
dec
mov
mov
adc
pop
push
notl
inc
dec
cmp
je
cwtl
jne
xchg
into
push
xorl
add
jp
mov
xchg
inc
push
aas
xchg
pop
je
movsl
xor
aam
rclb
push
mov
dec
fs
and
add
sbb
xor
dec
out
mov
out
jb
and
pop
rolb
setl
dec
push
stos
arpl
daa
mov
mov
stc
sahf
leave
pusha
rorb
out
daa
pop
push
test
and
adc
xchg
leave
mov
or
nop
pop
pop
mov
fldcw
push
mov
jmp
aaa
adc
insl
fabs
mov
adc
sub
es
ds
jg
scas
dec
fcomps
xor
dec
xchg
scas
popa
js
dec
sahf
or
adc
js
out
test
es
popa
int3
scas
daa
inc
jp
lods
outsl
fidivrs
paddusw
pop
push
bound
jne
jnp
imul
ja
dec
btc
scas
jae
mov
dec
or
mov
repnz
mov
test
outsl
xchg
pop
bound
cvttps2pi
sbb
adc
das
xchg
loope
push
xchg
mov
std
mov
jns
out
pop
inc
push
shll
dec
es
inc
mov
or
pop
mov
and
cltd
or
aaa
cwtl
cli
mov
sub
sub
shlb
lret
dec
fs
pop
adc
inc
daa
mov
cmp
jnp
jns
rcrb
dec
fidivl
jns
cltd
jns
adcl
dec
das
punpckhdq
orl
cmp
fisubs
mov
or
sbb
repz
push
orl
push
sub
add
ret
cmp
sti
shr
pop
je
or
mov
xor
addb
sar
sub
ljmp
cmp
stos
and
sub
jge
ret
jnp
add
xchg
lds
mov
push
aad
rolb
inc
out
les
test
cs
push
sbb
xor
xchg
mov
sar
les
out
mov
dec
out
pop
int
or
adc
pop
cmp
jecxz
push
mov
call
mov
jl
sbb
push
jb
test
pop
repnz
inc
je
cmp
repz
adc
mov
dec
pop
fisubrl
sbb
enter
and
jecxz
js
fstpt
movsb
mov
insl
int3
cwtl
add
loopne
xchg
arpl
test
cmp
das
scas
jb
lea
jb
add
dec
cmp
popf
lahf
and
jae
ss
adc
jmp
shrb
add
icebp
and
test
sar
or
adc
iret
pop
push
push
mov
cltd
int
jns
adc
pusha
stos
xor
sbb
ficompl
shld
js
dec
lret
in
shl
sbb
ret
adc
push
lcall
cmp
jb
dec
enter
adc
or
mov
or
jbe
dec
pop
notl
ret
lret
sti
sbb
fnstsw
je
dec
xor
stos
jp
pop
mov
xchg
test
xor
cmpsb
mulb
mov
mov
dec
addb
movsl
cli
data16
mov
add
incl
mov
int
jl
sahf
div
imul
push
aas
mov
jnp
pop
and
adc
movb
xchg
jbe,pt
repnz
stc
add
pop
mov
xchg
or
fisttpll
cmpsl
adc
dec
add
mov
jmp
pop
rclb
sub
adc
cwtl
sbb
mov
sub
nop
cmpsb
ret
mov
out
push
jle
jg
jb
nop
mov
jnp
sbb
mov
xor
arpl
test
bound
sbb
sub
mov
clc
jge
and
and
mov
jmp
insl
xchg
mov
jecxz
fldt
mov
dec
je
push
xor
xchg
iret
xor
dec
jmp
add
or
ss
push
jb
pushf
aaa
push
pop
fisubrs
xchg
cwtl
fs
dec
cmp
lds
andb
subl
mov
mov
jmp
scas
stos
insl
sub
shlb
insb
and
jmp
cmc
and
scas
push
aad
shlb
insb
sub
pop
mov
push
lcall
sub
xchg
mov
fsubrs
test
in
ret
insl
add
cwtl
jmp
mov
loopne
or
xchg
push
dec
jmp
or
add
add
lret
mov
xchg
fcomip
mov
or
pop
inc
lds
xchg
sti
and
aam
push
int3
dec
jle
outsl
stos
ret
repnz
sbb
lret
cmc
paddw
into
loop
pop
mov
rol
imul
call
scas
ret
dec
bound
or
sub
out
add
test
and
out
xchg
ljmp
insb
into
and
ficompl
jne
stos
hlt
ja
es
pushf
and
push
rorl
jge
push
cs
pop
pop
lods
shll
test
pop
and
mov
in
mov
jmp
mov
pop
sbb
movswl
jnp
popa
jns
xor
sgdtl
mov
jno
mov
fwait
repnz
shlb
aam
cmp
sub
cmp
jo
stc
orl
pushf
sub
and
sub
mov
test
push
push
in
outsb
addr16
cwtl
xor
mov
scas
mov
das
nop
push
sahf
dec
outsb
xchg
push
shr
add
fwait
xlat
sbbb
movsb
adc
popa
inc
inc
dec
jmp
and
es
test
jnp
xchg
mov
lcall
in
xor
push
aad
cmp
pop
imul
adc
icebp
mov
loope
ja
popl
insl
sub
or
fwait
aad
out
jl
xlat
pop
insl
pop
and
shll
cwtl
or
enter
mov
push
inc
rcll
inc
inc
sbb
pop
fcompl
cld
and
push
cmp
fisttpl
mov
jo
cli
pushf
sti
jg
cmp
ljmp
hlt
pop
lods
push
mov
xor
mov
pop
and
sbbb
jns,pt
add
mov
scas
jbe
mov
ljmp
xchg
dec
xchg
int3
enter
mov
sahf
jnp
pusha
mov
imul
fcmovb
pop
jge
pop
cmpsl
sbbb
mov
test
push
push
stc
dec
std
stos
and
dec
inc
xor
repnz
jmp
mov
shl
inc
dec
inc
pop
jb
xchg
adc
lock
add
mov
dec
std
es
inc
or
jno
xor
fbstp
je
sub
and
out
xchg
loope
loope
cwtl
scas
mov
test
mov
les
mov
out
jns
mov
pop
pop
sti
popa
arpl
xchg
inc
jae
mov
sub
cs
push
sbb
aas
scas
loop
insb
cltd
cmpb
cmp
lahf
xor
pop
lcall
sbbl
fnstsw
fisubl
add
push
bound
xchg
cmp
int
call
mov
fisubl
inc
push
mov
inc
xor
xchg
in
push
push
testl
outsb
jmp
lods
inc
sub
je
test
mov
mov
notl
subb
sbb
mov
ja
sub
scas
pop
cltd
cmp
jnp
jecxz
sub
mov
xchg
outsl
jb
and
mov
sbb
mov
sub
ss
xor
mov
mov
jg
call
or
sbbb
sbbb
mov
out
loopne
lret
xor
aad
mov
mov
push
mov
mov
movsb
xlat
adc
add
lods
js
in
ficomps
or
jl
jo
pop
sub
jle
lds
push
sbb
jmp
or
xor
imul
jbe
and
ffreep
sub
int
mov
repz
rorb
mov
addr16
pop
fcomi
or
movsb
ret
mov
mov
lds
subb
or
add
ret
dec
dec
loopne
jg
loopne
bound
ret
aas
shll
push
inc
clc
xchg
cld
scas
data16
xlat
pop
jp
negl
push
es
cltd
jbe
icebp
pop
cmpl
sarb
loopne
xor
gs
mov
stos
adc
mov
adcb
scas
jp
mov
addr16
jo
es
mov
std
push
sub
xor
lahf
mov
push
dec
pop
push
mov
inc
stc
ss
cmp
cmp
ljmp
adc
lret
cmpsl
ret
insb
push
mov
ja
xlat
push
mov
adc
jecxz
loopne
and
jbe
pushl
sbb
pusha
leave
out
fisttpll
data16
cwtl
push
rol
adc
int
add
jbe
loopne
gs
pop
ja
addr16
leave
cwtl
fidivrl
pop
xor
loop
jle
cmp
mov
ret
sub
push
fiadds
push
mov
push
xor
sbb
test
xlat
rcl
and
lea
sbb
orl
test
fsubrs
dec
pop
adc
add
mov
push
stc
pop
lods
lret
and
pop
ret
mov
addl
clc
mov
xchg
sbb
mov
mov
loope
and
xlat
outsb
std
xor
fs
stos
insb
idivl
in
add
pop
jl
mov
xchg
mul
shl
in
pop
mov
decb
mov
or
adc
or
in
testl
mov
fwait
movsb
and
cmp
sbb
iret
sub
xchg
pop
fwait
jno
inc
mov
fwait
xor
dec
int3
xor
outsl
fcmovbe
aad
add
lods
cmp
adc
sbb
mov
mov
ljmp
jge
jne
out
mov
adc
xchg
loopne
and
dec
dec
xchg
in
xchg
pop
jbe
in
mov
fstpl
inc
mov
imul
mov
jns
sbb
das
xchg
addr16
outsb
add
jae
mov
inc
outsl
shll
add
jbe
movsl
jb
in
test
aaa
outsl
sbb
mov
mov
add
xor
loope
js
inc
aas
pop
cmp
int
dec
loopne
out
mov
sub
mov
cmpsb
add
in
ja
ret
and
mov
fwait
sti
pop
in
mov
fs
lock
sahf
loope
orb
inc
sahf
out
and
or
fwait
dec
das
out
cltd
arpl
mov
lock
push
lahf
sub
arpl
and
cs
call
ficoms
jns
cmp
push
test
repz
push
jmp
fisttps
iret
adc
add
xchg
xchg
insl
pop
inc
mov
lcall
adc
cmp
mov
or
jecxz
and
in
or
sub
fucomi
gs
sub
in
scas
mov
loope
cmc
mov
push
out
test
test
mov
mov
outsb
cwtl
cli
sub
not
pop
mov
mov
xchg
sub
lea
pop
cmp
xchg
pop
or
mov
pop
adc
leave
fs
lcall
scas
inc
ja
push
ds
mov
jge
jg
leave
jp
cmp
jns
lea
mov
in
cli
sbb
scas
adc
mov
or
pop
sbb
cmp
ret
mov
outsb
les
mov
stos
mov
sub
jb
xchg
pusha
push
jbe
rorl
rcrb
aad
cmp
outsl
xor
xchg
sub
sub
repz
add
int
jns
aaa
popl
jl
xchg
sub
jmp
daa
outsl
pop
lock
scas
sub
rcl
pop
ret
outsl
cmc
test
pop
jae
add
cmp
neg
pop
sub
hlt
test
add
out
mov
and
mov
xchg
mov
hlt
pop
adc
adc
pop
scas
je
xor
mov
pop
loope
push
clc
int
xor
ret
mov
ljmp
mov
mov
lea
cmpb
incl
dec
rcll
lea
stos
or
sbb
stc
sub
insb
scas
jbe
mov
mov
push
mov
mov
bound
mov
int3
in
movsb
dec
push
cmc
inc
cmp
cmpsb
loope
shlb
or
sub
in
pop
lret
and
or
icebp
push
ror
dec
pop
add
fsts
data16
testl
or
mull
int
enter
sbb
mov
pushf
or
sbb
or
pop
lods
dec
ljmp
lret
idivl
mov
jbe
ja
inc
stos
lods
mov
xlat
sbb
cmpl
and
cmp
and
cmp
mov
out
mov
les
or
pop
gs
or
popa
cmp
mov
les
in
pushf
ret
fldcw
int3
push
adc
cli
mov
xor
shl
dec
push
notb
cmp
fstl
push
xor
mov
out
add
jnp
pop
rclb
inc
faddl
mov
in
dec
sub
lcall
mov
and
test
scas
cmpsb
mov
pushf
or
jbe
stos
dec
dec
push
sub
rclb
jmp
push
js
shl
jge
mov
jge
int3
scas
push
ja
push
xor
lods
xchg
inc
cld
dec
std
test
add
and
ret
mov
testl
mov
mov
iret
jbe
push
sub
dec
pop
mov
rcrb
push
and
stc
mov
repnz
and
mov
std
popa
rcl
sar
ss
and
mov
add
mov
scas
pop
stos
mov
test
jne
adc
fwait
stos
push
fwait
pusha
mov
fwait
out
and
lds
or
cmp
sub
cmp
mov
inc
sbb
incl
pop
insb
cmp
and
push
pop
popf
inc
lret
mov
ss
mov
gs
inc
sbb
rorl
push
call
leave
jns
test
loope
push
xor
iret
sbbb
add
xchg
sbb
fnstenv
jne
sub
xlat
pop
pextrw
lea
and
pop
test
jb
mov
pop
jmp
pop
adc
add
scas
and
mov
dec
imul
adc
mov
xchg
xchg
inc
pop
pusha
sahf
fnstenv
cmp
dec
dec
jmp
xchg
mov
mov
dec
push
movsl
jb
dec
push
jb
insl
mov
mov
data16
in
leave
push
out
mov
lret
call
push
pop
push
scas
subl
enter
mov
dec
mov
sbb
xor
cmp
push
imul
jae
pop
hlt
xor
push
and
cmc
cmp
xchg
jb
mov
mov
je
push
leave
mov
dec
pop
fistps
daa
fstpt
scas
test
sub
or
mov
outsb
mov
mov
rclb
fildl
adc
jmp
xchg
dec
mov
icebp
cmp
das
jo
or
hlt
lcall
or
push
sub
mov
scas
into
test
test
inc
scas
jecxz
or
jmp
stc
cmp
shr
repnz
sbbb
adc
adc
stc
shlb
jg
mov
jmp
mov
ljmp
popl
mov
mov
inc
andl
mov
xchg
jno
cld
push
sbbl
mov
popa
fstpl
aam
nop
pop
xchg
pop
sbb
loop
ret
dec
jb
adc
sbbl
les
sarb
leave
sbb
mov
repnz
sub
xchg
xchg
mov
lahf
movsl
mov
pcmpeqd
sub
div
out
jmp
dec
aaa
rol
jecxz
sti
mov
or
dec
nop
fsubp
jp
dec
and
dec
icebp
mov
jne,pt
jno
xchg
loop,pn
outsb
mov
movsb
jecxz
mov
sar
xchg
call
out
inc
data16
rcl
lds
inc
add
cli
ja
jns
sub
jns
jnp
mov
pop
pushf
xchg
sbb
xchg
adc
sbb
cmp
sub
xchg
jb
ret
fisubl
jmp
inc
and
mov
dec
lods
add
aad
ljmp
out
mov
mov
lcall
in
sub
out
inc
in
xor
push
or
mov
nop
sub
jb
pop
outsb
cwtl
sarb
mov
or
inc
pusha
push
pop
or
aad
or
cmpsb
lock
mov
sar
push
cld
neg
test
pop
iret
mov
in
mov
and
negb
test
iret
lcall
mov
outsl
lcall
add
mov
mov
push
pushf
lret
aam
pslld
jle
stos
jne
cmp
dec
add
and
and
into
sub
sbb
mov
test
arpl
inc
sbb
add
in
sbb
cmp
rcll
addr16
test
mov
lds
es
out
jl
push
leave
sbbb
lds
rol
rorb
mov
outsb
mov
mov
sarb
popa
in
sbb
call
fwait
in
push
lods
and
montmul
cmpsb
push
int
add
sub
mov
fsubr
dec
movsl
enter
xor
mov
xor
mov
rcll
sbb
push
sub
push
es
out
sub
jg
sub
imul
xchg
lock
dec
push
test
push
push
and
xchg
ja
add
or
negl
hlt
jnp
push
ret
sub
xchg
mov
adc
add
jns
hlt
mov
xor
inc
adc
adc
clc
and
pop
push
mov
je
push
scas
sub
or
test
iret
push
rorl
sbbl
adc
pushf
mov
fsubrs
int3
xor
lret
pop
cld
jl
inc
or
sub
popf
jmp
mov
sub
repnz
filds
shrb
pop
jmp
out
and
popa
mov
test
or
cwtl
test
jmp
mov
dec
shrl
push
or
arpl
lds
xchg
add
lds
dec
das
call
shrb
mov
adc
lea
in
add
push
sub
sti
pop
xor
mov
cmp
dec
sbb
jle
xor
pop
mov
fucomp
aad
aad
adc
cmp
xor
stos
dec
test
daa
stc
shrb
into
popa
clc
and
adc
add
sbb
lods
lret
jno
out
pop
mov
inc
inc
mov
out
loopne
sub
xor
sbb
insl
subl
int3
repnz
test
out
sub
push
jmp
pop
dec
jo
jl
adc
dec
imul
pushf
sbb
push
cmp
fcompl
lods
push
jmp
mov
icebp
sub
sub
gs
sbbb
mov
mov
sbb
inc
into
pop
add
or
mov
xor
hlt
sbb
aam
stc
mov
adc
xchg
out
inc
mov
aad
faddl
jl
add
cwtl
sti
cmpps
and
mov
bound
mov
mull
jmp
jmp
in
push
jmp
fisttps
jno
inc
push
sub
sbb
lea
dec
push
jge
mov
lods
mov
dec
daa
dec
mov
mov
sbb
rorl
ljmp
stos
cltd
cs
mov
fimuls
dec
jmp
fcmovu
arpl
inc
pop
fmuls
stos
add
les
push
mov
mov
push
ss
add
jmp
adc
lods
xlat
das
or
inc
sbb
ds
hlt
bswap
lock
cmc
and
xchg
mov
daa
cmp
mov
dec
xchg
sub
repnz
dec
call
sti
call
cltd
aas
das
loop
pusha
mov
ret
push
inc
sub
pop
adc
fistpll
out
cmp
adc
rcrl
int
arpl
pop
repz
mov
adc
lahf
div
xor
out
push
icebp
imul
faddp
push
shlb
imul
repnz
adc
xchg
shll
imul
and
xor
or
gs
sub
test
out
dec
cmp
ds
and
push
fcompl
in
dec
pop
hlt
pop
mov
and
in
fwait
inc
dec
pop
fmuls
inc
cmp
pop
sub
out
shlb
sbb
insb
cmp
out
test
into
pop
out
aas
mov
aas
and
pop
inc
pop
popf
mov
pop
mov
mov
fs
es
and
in
test
adc
xor
movsb
mov
add
cwtl
cmc
mov
sbb
enter
push
cmpsb
dec
in
add
push
jo
int3
mov
mov
and
push
jns
push
call
shlb
testl
adc
mov
test
mov
inc
and
push
popf
and
ja
push
lahf
mov
inc
call
test
xor
xchg
leave
test
xor
lock
sub
pushf
sbb
or
mov
and
pop
push
idivb
cltd
pop
or
insl
dec
xorl
sbb
push
jge
pushf
xor
sub
cmc
gs
pop
pushf
cmpsl
dec
enter
adcb
jecxz
inc
xchg
adc
and
sbb
sub
adc
shlb
xor
je
pop
xchg
lods
mov
mov
clc
cvttps2pi
pushf
sbb
int3
fwait
cmp
lods
jle
push
ret
jo
pminsw
xchg
or
dec
int3
push
sbb
push
imul
and
xor
inc
das
jo
add
xor
test
loop
rep
dec
test
cs
lds
fdiv
jcxz
lret
mov
cli
jg
dec
mov
and
pop
cmp
or
sbb
arpl
jge
inc
inc
push
in
js
pop
lds
inc
es
ret
mov
imul
leave
pop
mov
sbb
fadd
mov
adcb
fs
in
test
loop
add
sbb
lods
mov
mov
push
out
loope
jp
aas
mov
sub
pop
cmp
xchg
loop
or
mov
jno
jne
or
jbe
gs
jns
addl
hlt
xor
mov
and
jne
adc
aam
fisubrl
dec
inc
nop
lods
jae
and
cmp
faddl
cli
bound
mov
inc
lods
mov
test
xor
cwtl
xor
mov
rcl
out
fistl
mov
call
cmpsb
pop
test
push
enter
sbb
orl
add
rcr
cmc
bound
xchg
cmp
das
mov
jnp
sbb
hlt
cmp
pop
add
cmp
and
sub
mov
mov
icebp
dec
and
fwait
int3
xchg
js
loope
ficoms
jl
jge
mov
shrl
addr16
jl
hlt
or
mov
dec
push
aas
sbbb
scas
out
loop
leave
mov
add
pop
add
sbb
cmp
cmp
inc
xor
xchg
inc
cmp
push
sbb
mov
fxch
fucomip
lret
and
fnsave
pusha
push
into
inc
or
ret
mov
mov
jl
fnsave
in
jecxz
adcb
push
push
mov
pushf
lods
das
ljmp
xor
cmc
mov
sub
mov
adc
jmp
sbb
sub
or
adc
dec
fistps
sti
cltd
nop
cmp
cmc
es
insl
push
inc
inc
test
loop
test
test
xchg
or
jb
in
aas
cmp
scas
pop
hlt
xchg
divb
negb
fisttps
loop
imul
cmpsb
lds
jl
cmp
testb
push
stos
inc
jge
mov
ret
or
xor
cwtl
jbe
xchg
jne
mov
or
stc
nop
mov
popa
dec
fs
in
mov
repnz
dec
xchg
sbbb
mov
mov
mov
das
rcrb
out
push
xchg
dec
repnz
cmp
loope
jmp
or
outsl
adc
xchg
stos
push
mov
test
call
xor
inc
sub
dec
dec
out
adc
jbe
add
pop
das
adc
jp
in
fnstenv
rorl
fwait
push
xchg
xor
jb
xor
mov
mov
sbb
cwtl
mov
mov
sbb
mov
cmpsl
adc
sub
mov
fisubrs
mov
sbb
adc
scas
shll
loopne
jmp
mov
push
lcall
jp
in
sbb
fs
pusha
rolb
scas
jmp
push
pop
aad
shlb
sbb
lock
out
pop
add
ss
pop
or
and
ror
repz
aas
into
jecxz
in
add
cmp
adc
mov
scas
add
repnz
sub
inc
shrl
in
sahf
test
iret
je
pop
arpl
push
or
loope
xor
ljmp
in
push
mov
xor
push
adc
inc
ljmp
xchg
mov
mov
xchg
mov
idivb
mov
into
push
jo
out
loop
mov
jnp
fcom
jmp
in
sub
mov
pop
sub
mov
push
fnstenv
lret
sarl
mov
daa
in
das
fsubl
xor
pop
std
loopne
sub
push
jb
mov
inc
adc
sahf
adc
push
sbb
xchg
ds
fmulp
fcompl
pusha
idivl
fnstcw
push
sti
fwait
jae
adc
leave
js
fimuls
aam
sbb
add
cs
sbb
out
sbb
jmp
daa
xchg
add
xor
hlt
xor
sub
adc
pusha
jle
xchg
push
testb
xchg
adc
movsb
adc
fildll
ljmp
jmp
dec
popa
les
push
popa
pop
insb
int
pop
jmp
mov
cmpsb
jo
mov
add
xchg
and
add
jo
aas
outsb
dec
lea
mov
sbb
inc
leave
lds
adc
adc
fisubl
lret
shrb
and
adcb
sar
lock
mov
jge
adc
stos
pop
add
orl
pop
or
addr16
shll
push
stos
pop
ljmp
mov
cmp
sub
aas
loope
jno
pop
mov
xchg
jmp
popf
mov
add
xlat
aad
mov
imul
inc
mov
dec
cmpsl
sbb
ret
pop
xlat
inc
sti
xchg
je
loopne
cld
xlat
xlat
pop
and
push
loopew
inc
pop
inc
dec
jo
jae
loope
push
add
sub
sub
in
pushf
xchg
fidivs
popf
jns
out
mov
stc
mov
sbb
mov
jp
fsubr
cltd
push
lret
cld
outsl
mov
jb
loope
jmp
dec
pop
addr16
and
and
out
fadds
add
pop
mov
add
sbb
dec
roll
xchg
adc
outsb
leave
push
cmp
or
jne
lret
roll
clc
imul
inc
jl
stc
pop
jb
mov
movsb
push
push
ds
addr16
loop
mov
iret
xor
jno
inc
pop
xchg
xchg
push
jmp
xchg
mov
das
ret
fdiv
mov
push
inc
rorl
shrl
add
ficomps
push
aaa
jl
sbb
es
pop
jmp
ljmp
ljmp
fst
sub
decb
aaa
rclb
add
xchg
sbb
addr16
lahf
add
daa
popa
jns
jbe
mov
jmp
fs
xchg
sbb
idivb
dec
sbb
ret
inc
and
or
int3
shrl
lods
in
pushf
jne,pn
pop
mov
add
xor
into
pushf
scas
pushl
mov
int3
jg
or
out
inc
mov
or
push
repz
xchg
sub
call
popf
stc
add
jae
das
jmp
xchg
add
jno
daa
xchg
mov
or
lahf
mov
icebp
sbb
subb
adc
xchg
popa
and
out
aas
dec
lds
adcl
stc
lea
lahf
ss
and
cmp
push
repnz
scas
inc
or
std
jo
mov
repz
lret
pop
popa
cmpl
hlt
gs
aad
xor
jne
sahf
andb
and
movsb
ret
fstp
lcall
or
aaa
push
negb
mov
sbb
dec
dec
in
iret
push
pop
fs
stc
dec
test
jnp
mov
add
sub
adc
int3
push
test
scas
int
push
iret
enter
or
jle
push
push
mov
jecxz
sub
jns
js
cs
fisubl
shlb
cs
cmpsl
out
add
out
mov
icebp
out
dec
testl
push
mov
data16
cmp
imul
hlt
pop
or
pop
inc
cwtl
mov
pop
inc
leave
jae
push
xchg
cmc
xchg
rorb
stos
ljmp
pop
xchg
fisttps
movsl
adc
aam
inc
loope
jmp
push
push
sbb
test
inc
enter
sbb
push
push
pop
in
cmp
sbb
mov
insl
pop
cli
popa
jl
mov
decl
inc
sbb
adc
xlat
inc
lods
push
mov
neg
xchg
in
cmp
mov
stos
mul
test
daa
sub
pop
mov
hlt
sbb
jp
cmp
xchg
jno,pt
rcrb
adc
jge
rdpmc
sub
outsb
fsts
mov
jmp
mov
mov
mov
fnstsw
push
xor
adc
sub
inc
nop
call
cmp
mov
pusha
subb
add
push
xchg
aad
xlat
xchg
repz
cmp
mov
out
out
outsl
les
jmp
pop
rcll
movsb
push
sbb
xorb
daa
sbb
outsl
sbb
and
mov
ret
fistps
scas
mov
out
cmp
in
inc
loop
ret
sbb
out
loope
aaa
and
push
cmp
xor
mov
or
fsub
mov
jo
pop
sub
sub
xchg
pop
out
dec
push
and
mov
imul
pop
jo
out
repnz
pop
stos
scas
push
test
lret
loop
je
adc
out
mov
call
test
cmpsb
cmpsl
mov
in
pop
push
jge
addr16
fists
jae
jns
cld
ret
std
dec
lock
repz
dec
add
cmpsb
push
shr
stos
mov
mov
daa
popf
sbbl
sub
sbb
jmp
test
push
fs
or
mov
inc
ds
jbe
shl
xchg
and
lea
outsl
mov
movsl
fdivs
ds
out
iret
sbb
inc
fldenv
jge
jne
xchg
mov
dec
jae
popa
aas
xor
scas
loope
scas
dec
dec
outsl
pushf
jl
dec
cmp
rclw
ret
jns
mov
mov
rcrb
int3
pop
jp
inc
jo
mov
ret
xchg
xor
stos
enter
add
ud0
int
mov
addb
rclb
dec
xchg
fldt
push
movl
push
sbb
enter
pushf
mov
xchg
sub
dec
ret
jno
cmc
push
and
or
cli
gs
dec
lcall
sub
mov
mov
dec
pop
push
into
adc
add
fwait
sti
push
ja
or
rol
sbbb
clc
movb
nop
dec
jle
std
mov
sbb
mov
mov
repnz
loope
pop
dec
gs
addr16
int3
xor
dec
jmp
int3
sahf
sub
and
mov
dec
adc
inc
jmp
jmp
and
fldcw
push
sbb
lret
sti
das
out
ret
repz
mov
sbb
int3
fucomi
hlt
xchg
dec
in
adc
pop
lods
or
jecxz
or
xor
adc
mov
in
out
stc
pushf
adc
test
ja
and
fcomip
fnsave
ret
decb
jmp
xchg
out
fcompl
mov
stc
loopne
or
pop
cmp
out
cmp
xor
outsb
bound
and
lods
in
fbstp
push
orl
cltd
je
cwtl
clc
adcb
cs
push
pusha
mov
test
xchg
mov
xchg
int
mov
push
gs
int
xchg
ret
and
mov
dec
pop
xor
and
fdivl
sbb
push
jg
cmp
mov
lds
pop
stos
movsl
fmuls
xchg
or
dec
mov
ja
push
fidivrs
stos
lea
jmp
dec
pop
mov
inc
jno
mov
push
and
addb
jle
ja
ret
and
inc
outsb
rcrl
lea
insb
mov
fmull
out
or
or
add
pop
ret
mov
pop
jmp
and
jo
mov
fisubrs
enter
and
les
xor
xchg
pop
add
arpl
rcrl
mov
lea
dec
outsb
daa
cmpsb
cmp
pop
jl
outsb
stos
outsl
ret
int3
mov
lods
mov
dec
dec
arpl
mov
and
lret
cmpsb
add
xlat
icebp
push
jns
dec
cmp
repnz
cltd
lock
test
mov
jg
fistpll
add
dec
dec
dec
jp
push
mov
mov
inc
pop
or
inc
fimuls
jg
jecxz
push
cmpsb
mov
sbb
stc
jge
cmp
jb
dec
push
pop
xchg
leave
push
popf
sbb
sub
call
leave
push
or
lret
xchg
test
ret
add
or
outsw
adc
rclb
sbb
scas
adc
es
je
sub
cltd
pusha
test
into
jne
push
lcall
xor
repz
ja
pop
icebp
movsl
int3
adc
jbe
xor
pop
cmp
push
lcall
in
ret
adc
mull
add
jno
pusha
mov
cwtl
jmp
inc
pop
xor
imul
data16
sub
scas
add
cmp
sahf
push
out
iret
out
outsl
adc
int3
enter
in
ror
push
ljmp
loop
ret
add
testb
jmp
mov
loope
or
imul
add
mov
xor
push
mov
jne
lock
lds
incl
adc
cli
cwtl
or
lret
imul
dec
mov
sub
add
mov
fwait
inc
shll
adc
jae
dec
sbb
out
test
es
sub
sbb
data16
aaa
cs
repz
add
add
pop
icebp
or
mov
call
ss
add
out
xor
loopne
cmp
dec
sbb
push
cmp
insb
xorb
mov
jle
mov
aas
insb
sub
inc
jl
cmpb
and
jns
leave
add
aaa
sub
mov
jmp
cs
adc
mov
outsb
sub
das
shrl
in
xchg
mov
icebp
arpl
daa
pop
pop
icebp
sbb
out
jnp
test
mov
sbb
xor
cli
sbb
push
test
pop
cmp
sahf
and
fisubrl
hlt
push
or
imul
ret
jp
shld
and
pop
sub
cmp
dec
jne
cli
idiv
adc
pop
roll
je
sub
push
sti
or
out
and
mov
fucompp
dec
es
scas
xchg
sub
mov
adcl
stc
push
fistpl
outsb
imul
xlat
push
jp
pop
fwait
xor
or
xchg
xor
push
mov
push
cmovne
cmpb
incb
nop
lods
dec
roll
mov
out
fwait
ja
inc
fildl
and
fimuls
ljmp
xchg
imul
orl
lcall
cli
in
fists
sbb
js
aad
push
xchg
push
insb
jb
aad
aam
enter
in
cltd
push
push
xchg
dec
fisubrs
aam
jg
scas
and
cld
mov
mov
shll
pop
or
pop
clc
std
dec
cmpsl
dec
pop
mov
int3
repz
sbb
mov
cmpsl
stc
popf
pop
add
mov
fcompl
or
popf
movsb
sub
mov
adc
imul
stos
mov
dec
aaa
jne
sbb
mov
in
push
sub
iret
loopne
xor
and
cwtl
cmpsb
sbb
int
mov
xchg
js
adc
clc
stos
push
push
xchg
js
repz
aas
inc
les
add
jmp
and
cltd
cltd
test
mov
mov
ds
push
fucomi
cwtl
dec
dec
pop
test
or
sbb
enter
sub
inc
pop
mov
push
in
mov
iret
rorb
mov
fwait
xchg
outsl
jg
lret
xor
lret
jmp
in
xchg
xchg
sarb
movsb
cmp
gs
sbb
scas
jo
je
mov
mov
rcl
push
lods
fisubrs
out
int
mov
pop
inc
mov
les
mov
mov
xchg
or
clc
dec
adc
mov
loope
sbb
sub
lds
mov
push
mov
jns
mov
std
xchg
inc
in
xor
sub
xchg
outsb
out
add
testb
cwtl
rol
xor
sbb
or
jnp
fldl
cmp
icebp
mov
sbbl
xor
push
sbb
xchg
mov
scas
mov
or
xlat
outsb
repnz
enter
loope
and
mov
orl
cs
and
cmp
call
popl
popf
and
add
adc
push
jg
mov
pop
fcompl
sub
ja
das
push
mov
orl
pushf
or
movsl
jne
pop
mov
gs
out
dec
xchg
mov
decl
cmpsb
push
xlat
iret
gs
test
test
repnz
push
pop
mov
outsb
dec
lahf
xchg
sbb
insb
fists
pop
mov
cmc
jp
imul
js
cmp
pop
mov
je
sar
out
jecxz
xchg
ret
aas
repz
popa
cmp
adc
mov
outsl
ljmp
cltd
ret
mov
pop
push
ja
bound
mov
cmp
dec
add
int
xorl
mov
mov
loope
adc
push
pop
outsb
stos
sub
pop
cmp
imul
xlat
pop
push
sarl
jl
lcall
in
push
out
pop
jb
jbe
xchg
test
sbb
inc
lret
sti
fs
jb
sarb
mov
ja
push
sub
adc
pop
das
addr16
scas
pop
xor
dec
js
jbe
add
push
mov
and
xchg
loop
inc
int3
xchg
pop
xor
enter
and
pop
test
xchg
nop
es
mov
fldt
or
lods
data16
mov
xchg
adc
jg
mov
adc
mov
adc
ljmp
xor
lret
ret
jle
add
mov
pop
sbb
movsb
inc
iret
into
enter
int3
fld
sarl
add
jecxz
jno
jg
roll
add
adc
movsl
xchg
rcrb
push
xchg
pushl
jg
and
ljmp
mov
sbb
cmp
bound
lds
fdivl
push
pop
and
mov
in
scas
pop
sub
loopne
sub
push
mov
xchg
pop
jmp
mov
into
ret
xor
inc
pop
and
sub
dec
pop
frstor
push
out
sbb
dec
sti
adc
lret
mov
mov
dec
xor
sbb
jg
pop
adc
xor
jne
mov
pop
in
es
add
cli
push
cld
shrl
pop
mov
and
repnz
movsl
push
mov
scas
push
mov
inc
mov
sbb
pop
call
xor
mov
aas
dec
mov
pop
xor
ficoms
and
out
and
fcmovnb
call
jo
jg
mov
adc
es
sbb
pop
gs
mov
call
sub
outsb
stc
das
in
das
push
lret
movsb
dec
sub
xor
pop
int3
inc
dec
or
push
cmc
rolb
stc
xlat
mov
cmp
hlt
mov
imul
dec
and
sub
sub
fdivp
or
sarl
cs
inc
popf
popa
push
outsl
arpl
inc
ret
dec
push
mov
es
int3
jo
dec
pusha
in
mov
lea
les
dec
pop
xchg
pusha
adc
jnp
jnp
daa
lea
setb
mov
pop
xor
cltd
lods
incl
adc
mov
iret
lods
inc
scas
and
push
cs
adc
xor
std
xchg
ds
das
sahf
pusha
loop
hlt
mov
add
inc
lret
pop
test
xor
jo
sub
and
pop
sbb
jg
ss
fldenv
mov
lret
lcall
aad
cmp
inc
pop
cwtl
mov
dec
insl
mov
pop
clc
adc
sub
jne
aam
sbbl
ss
and
lahf
std
enter
cltd
inc
leave
orl
mov
or
scas
cld
xchg
push
mov
push
test
or
js
fidivrl
cmp
rcl
iret
mov
mov
roll
mov
sub
and
inc
pop
data16
xlat
ss
push
push
sub
daa
mov
addr16
cli
movsl
mov
pop
lods
cmp
aam
popa
fidivs
fdivrl
leave
pusha
in
call
and
add
mov
icebp
imul
ja
xor
popl
cs
sbb
inc
cmp
push
je
xlat
out
sub
xor
mov
dec
xor
xchg
cmp
loope
push
hlt
ret
shrl
ljmp
leave
nop
das
sarl
jp
arpl
jns
or
imul
lcall
sbb
iret
ret
imull
or
adc
fldt
push
or
cs
ret
or
cmp
mov
arpl
xchg
cmp
dec
xlat
test
jnp
sub
in
fsubl
xchg
lods
xor
rcll
adc
jp
das
mov
test
lock
pop
mov
std
cmp
scas
inc
jns
push
fnsave
jmp
xchg
xor
call
jmp
cmpsl
push
mov
inc
dec
push
lods
insb
cmpsb
adc
hlt
or
fs
xor
adc
pusha
mov
xlat
loope
mov
push
jne
imul
fbstp
cmc
daa
sub
lods
ret
cwtl
push
rol
xor
cmp
adc
gs
das
push
pop
repnz
mov
out
sbb
xor
adc
in
push
jbe
xor
inc
mov
or
int
sahf
push
push
gs
sub
orl
dec
es
out
mov
fcompl
cmp
dec
mov
popf
xchg
push
mov
mov
gs
adc
je
adc
jl
das
xchg
add
xchg
cmp
pop
icebp
lea
and
outsl
dec
faddl
test
inc
dec
cltd
cmp
jle
adc
leave
jns
js
fs
ror
cmc
call
dec
repnz
jnp
stos
mov
xlat
outsb
fldenv
mov
cmpsl
jne
mov
dec
xchg
jle
cs
push
ja
mov
imul
xchg
mov
popa
jo
mov
mov
test
xor
inc
push
push
cltd
cmpsl
out
fistl
in
inc
cmp
andl
mov
inc
cld
lret
insb
dec
clc
cmpsl
xor
mov
clc
mov
sbb
dec
sbb
jo
cmp
sbb
les
insb
sbb
mov
popa
outsb
sub
and
push
xor
mov
lahf
adc
adc
or
je
nop
cmpb
jmp
adc
cmpsl
mov
repnz
push
orb
mov
int
inc
push
loope
mov
jne
xor
xor
in
or
pop
cmp
stc
arpl
scas
cmp
push
les
mov
pop
hlt
mov
out
lcall
adc
sarl
fisubrl
call
pop
subb
pushf
outsl
ret
jne
jmp
insl
add
xchg
lret
mov
sbb
mov
mov
movsb
es
dec
xor
je
cmpsl
adc
dec
mov
xor
or
stos
mov
sub
sub
into
out
mov
mov
stc
les
out
xchg
inc
arpl
and
cmp
enter
jl
loop
or
ret
pushf
mov
pushf
xor
mov
stos
insb
cmp
adc
clc
xor
stos
xchg
out
sti
movsb
sub
xchg
nop
ds
insb
dec
aad
imul
cli
out
sbb
mov
pop
xorb
xchg
push
pop
lahf
aaa
outsl
pop
out
push
popf
xor
negb
test
mov
push
js
movl
popf
inc
mov
and
jo
mov
add
scas
iret
xor
fcompl
cmp
mov
pop
movsl
mov
js
sub
lds
xchg
fucomp
imul
mov
out
bound
cli
es
nop
dec
cmp
test
nop
mov
push
mov
cmp
and
sti
popf
data16
int3
int3
pop
jmp
sti
mov
pop
mov
mov
insl
fmul
jb
lds
lds
push
insl
jbe
fwait
les
and
ret
cmp
pop
fildl
in
adc
lcall
jle
push
jecxz
pop
jae
and
dec
or
and
ds
xor
nop
mov
test
cmp
jge
cmc
or
sbb
ss
pop
icebp
fistpl
push
clc
add
das
add
add
mov
pop
das
mov
pusha
or
mov
nop
push
insb
mov
das
bound
push
mov
sti
xchg
imul
xlat
sbb
mov
aad
push
int3
out
test
rorl
push
xchg
test
ret
push
out
pop
jne
pop
cwtl
je
stos
mov
adc
push
mov
insb
add
lahf
push
aam
incb
mov
sbb
mov
lahf
das
and
push
inc
push
add
mov
out
cmp
and
mov
pop
int3
arpl
test
lcall
and
andb
mov
inc
in
xchg
ret
jmpw
cmp
inc
je
xor
push
out
push
cli
xchg
jmp
fisubs
sub
pop
push
pop
add
into
sub
lcall
lods
mov
fstps
dec
lods
mov
divb
cs
xor
inc
jb
mov
cwtl
mov
iret
je
adc
in
fs
sbb
mov
push
lods
fmul
out
out
cmpsl
aaa
or
gs
sbb
push
dec
js
out
mov
imul
lock
and
add
mov
into
mov
cmp
add
and
pop
imul
pop
lret
les
jb
and
xchg
out
push
movsl
or
jge
xlat
lods
xor
clc
fwait
jle
popf
scas
jb
mov
and
test
mov
data16
xor
testl
test
mov
adcl
cmp
lods
and
ds
mov
repnz
push
lods
sub
insb
fstpt
mov
push
fwait
or
aas
in
mov
aad
mov
xchg
outsb
sbb
js
push
sbb
jae
iret
inc
lds
xchg
hlt
cmc
aam
mov
pop
and
je
jno
in
push
mov
xor
inc
lcall
repnz
stos
stos
sbb
ret
mov
adc
push
jg
sbb
jne
inc
push
aas
inc
push
fnstcw
in
jo
mov
sbb
sub
cs
pop
cld
scas
ret
or
xchg
lahf
push
and
push
loopne
inc
std
pusha
xchg
push
cmpsb
mov
out
and
push
xor
push
and
adc
mov
daa
mov
push
scas
mov
jg
std
push
sbbl
jns
jp
jl
loopne
rcl
addb
or
testb
data16
rcl
js
sub
mov
cltd
andb
das
or
aam
imul
pusha
nop
sub
leave
or
or
cmp
mov
push
pop
stc
push
jae
faddl
pop
inc
fucomi
jbe
dec
lea
mov
pop
xor
inc
mov
std
iret
mov
add
mov
rcll
mov
in
xor
dec
ds
outsb
fwait
xor
jno
add
sbb
lret
cltd
out
into
ret
xchg
and
imul
rcrb
pop
mov
jbe
sbb
mov
push
add
dec
pop
inc
xchg
and
cmp
ds
or
sub
xor
arpl
jmp
sbb
push
stos
lea
inc
sbb
addl
loopne
lods
sub
int
push
dec
decl
inc
roll
jbe
dec
leave
sbb
jbe
pop
je
cmp
mov
adc
jmp
fistps
outsb
mov
insb
fucomip
add
pop
push
cmpsb
fistl
bound
in
jcxz
leave
mov
into
test
mov
sub
pop
jecxz
dec
enter
mov
lahf
out
data16
add
xor
xchg
or
mov
sbb
mov
pop
fs
and
jno
dec
lret
repz
in
mov
pusha
repz
scas
addr16
in
fcoms
adcb
cmpb
mov
mov
dec
aad
les
add
push
add
mov
cmp
loopne
dec
les
xchg
add
pop
cmp
sbb
pop
inc
call
pop
or
movsb
fists
ret
or
cmc
ljmp
inc
pusha
jmp
push
xor
mov
fnstcw
sarb
jle
rorl
insb
and
test
adc
xor
jl
cltd
mov
lcall
and
pop
fldenv
andb
inc
push
mov
inc
jno
mov
mov
mov
repnz
add
ret
rcl
add
testl
mov
test
adc
or
jmp
inc
sbb
loop
mov
xor
stc
cmpsl
dec
inc
xor
gs
bound
xor
pop
movsl
xchg
lret
mov
xchg
lock
lock
cmp
push
mov
xchg
jno
dec
mov
mov
cmpsl
ds
xchg
push
cmpsb
dec
sbb
or
repz
cli
imul
test
sub
push
or
or
sahf
scas
jg
and
add
popa
sub
pop
adc
into
sub
inc
cmp
pop
and
mov
test
mov
mov
filds
shrb
divl
lea
xchg
inc
or
in
out
adc
xchg
mov
ret
bndstx
add
mov
xchg
adc
xor
jmp
fwait
inc
push
and
and
cmp
xchg
js
xor
adc
sti
mov
and
ss
jns
ljmp
cmp
cli
mov
icebp
cli
fstl
push
sbb
mov
mov
adc
pop
mov
inc
xor
icebp
mov
sbb
pop
in
cmc
cmp
mov
sub
pop
icebp
sbb
sub
out
mov
paddq
xchg
jno
and
or
dec
loope
cmp
and
mov
push
adc
push
arpl
daa
mov
jecxz
daa
push
adc
inc
pushf
xchg
and
leave
adc
push
jbe
rcl
pop
xor
scas
jno
lods
fsubrl
lret
arpl
cld
aas
std
mov
shrw
dec
cs
lock
push
inc
ss
inc
xlat
cltd
stos
inc
adc
mov
loopw
mov
mov
adc
sqrtps
cmc
jbe
daa
cld
lcall
jbe
pop
cmp
pop
es
iret
andb
jno
xchg
mov
fucomp
sub
into
outsb
sub
inc
inc
cmp
jecxz
enter
gs
es
dec
push
mov
mov
jge
xchg
pop
cmpsb
xchg
decl
sarb
push
inc
fidivs
pop
test
xchg
shrb
fdivl
push
sub
mov
aaa
push
mov
push
cli
cmpsb
sbb
and
subb
mov
leave
pusha
xchg
xchg
shrb
mov
sub
and
sub
sub
stos
push
inc
bound
scas
stos
jbe
pusha
inc
push
bound
adc
push
lahf
bound
outsl
outsb
add
dec
add
jne
xchg
mov
je
call
in
push
aas
inc
cmp
movsl
test
andl
lret
pop
xor
mov
loop
out
add
out
xor
loope
lcall
sbb
stos
pop
pusha
jp
loope
mov
ja
lret
cwtl
xor
stos
pop
and
pop
inc
cmp
jns
xor
roll
push
pop
das
fsubl
lds
rcrl
aaa
test
and
in
sbb
aas
jecxz
test
xor
insb
imulb
imulb
mov
stos
jge
fbstp
fistl
fcoms
js
stc
inc
fisubrl
repnz
mov
dec
in
adc
sub
insb
jl
or
test
fwait
push
movsl
mov
mov
jmp
sbb
cli
rcrl
pop
rcll
ret
pop
jmp
mov
fcmovnbe
xor
inc
enter
xor
xchg
sub
mov
dec
gs
data16
int
sub
rcr
mov
loopne
jg
lea
in
sub
lcall
push
mov
sahf
enter
or
mov
aas
push
dec
pop
and
or
mov
cmpsb
orl
lcall
push
je
in
pop
mov
xchg
mov
out
adc
in
std
rclb
inc
mov
mull
cmp
jbe
or
and
xchg
stc
popa
mov
jg
sti
add
mov
or
ljmp
rorl
pop
dec
inc
mov
mov
mov
push
test
inc
add
xchg
xor
enter
in
fstps
xor
lahf
ja
dec
sub
aam
rcrl
jl
pop
xchg
pop
scas
out
and
mov
add
mov
jne
std
data16
push
loopne
sti
adc
test
and
jnp
mov
and
pop
mov
test
scas
add
adc
pusha
pop
std
jo
push
cwtl
mov
jge
dec
push
mulb
ja
mov
jnp
cltd
lods
push
and
mov
cld
outsl
pop
mov
add
push
pop
dec
imul
ljmp
call
adc
lock
or
adc
addr16
pop
cmp
cld
push
cmp
hlt
pop
scas
cmp
sarl
pop
lea
popa
js
add
shlb
jno
adc
jae
leave
cmpsl
jmp
inc
pop
and
rcl
inc
xor
pop
insb
mov
mov
xchg
jnp
mov
mov
mov
xchg
pushf
jae
lds
inc
sbb
sahf
scas
pop
mov
cltd
adc
cltd
stos
xor
outsb
sub
inc
mov
test
notl
xor
in
sub
inc
add
push
mov
push
cwtl
push
arpl
aas
adc
ja
aaa
dec
and
outsb
pop
and
clc
sbb
pop
push
mov
lret
das
inc
stc
xchg
sub
jo
dec
shl
mov
fistps
mov
add
js
insl
stos
jecxz
xchg
pusha
push
out
mov
lret
outsl
xchg
incb
dec
inc
xchg
sub
and
adc
mov
movb
dec
and
xlat
xor
jo
fcmovne
test
and
jmp
xchg
jno
mov
fsubr
push
lahf
sbb
and
push
movsb
cld
cmp
leave
xchg
enter
mov
adc
jmp
inc
or
xor
subb
jnp
lods
sub
adc
dec
sbb
xchg
mov
std
add
jp
cmpsb
jle
add
jmp
dec
ss
rcll
sbb
pop
jp
cmpsb
mov
mov
mov
dec
pop
cmpsb
repnz
and
jecxz
dec
in
mov
xchg
and
out
xor
movsb
cmp
stc
lea
pop
sarl
inc
out
jp
stos
mov
push
decl
xor
sbb
jp
ror
fdivrs
or
insb
pop
sub
xchg
sub
push
push
cmp
in
dec
xchg
movsl
dec
in
out
and
iret
xlat
jmp
ljmp
jne
jbe
inc
and
pop
sub
jnp
shlb
movsb
sti
mov
inc
jnp
cmpsb
fildl
push
daa
mov
dec
and
fcmovne
insb
and
call
mov
hlt
xor
or
test
dec
lods
jg
fwait
gs
push
inc
jl
fs
jecxz
cmp
mov
mov
mov
push
out
xor
les
outsb
sbb
fsubl
xchg
out
sub
cmp
mov
shl
pop
or
lods
icebp
fs
scas
xor
out
jnp
push
lcall
dec
loope
sub
sbb
dec
in
jns
dec
and
jle
lret
fwait
push
fsubl
xchg
mov
std
fcmovne
push
xor
daa
mov
fwait
xor
mov
push
ljmp
call
sub
sahf
mov
in
pop
xor
fucom
sbb
mov
push
xchg
push
dec
push
fs
scas
mov
cwtl
add
andb
push
enter
push
lods
jmp
sbb
aam
xchg
dec
pop
jg
lcall
sub
and
xor
in
test
push
cli
cltd
cmp
cmp
dec
xchg
pop
ja
pop
andl
fwait
repnz
aas
mov
mov
sarb
and
adc
ja
and
pop
or
cmc
or
sbbb
ljmp
out
sbb
js
add
lock
insl
ret
daa
xchg
dec
push
int3
pop
in
scas
cltd
xor
shlb
adc
pusha
iret
push
push
bound
bound
xor
andb
data16
pop
neg
in
sbb
mov
aad
rcll
adc
repz
stos
sub
shrb
cmp
inc
fisttpl
push
fsubrs
leave
into
int3
jg
gs
push
mov
inc
pop
cltd
jns
and
adcb
scas
ret
mov
pop
sbb
cltd
clc
inc
les
scas
add
xchg
jb
faddl
out
mov
repnz
sbb
mov
shl
repnz
adc
into
pop
push
cs
repz
ret
test
fisubrl
gs
mov
mov
xchg
in
push
pushf
lods
fmull
xchg
push
mov
inc
push
sub
mov
xlat
hlt
js
fmuls
lea
mov
call
push
and
or
push
aad
cmpsb
lock
xchg
in
add
fs
add
lods
mov
fnstenv
daa
mov
mov
cwtl
or
fsts
xchg
std
mov
mov
addr16
adc
push
addr16
mov
mov
dec
mov
inc
jns
pop
mov
les
jg
push
cld
stos
pop
scas
lock
sub
inc
lds
in
arpl
dec
pop
aad
nop
sbb
out
lea
cli
inc
cs
inc
xchg
es
xchg
jle
lds
std
add
test
and
inc
js
mov
inc
inc
inc
inc
data16
mov
mov
mov
cmp
addr16
jecxz
mov
or
inc
mov
test
xchg
lcall
test
nop
jne
xchg
sub
jbe
cmpsb
push
mov
mov
lock
popa
adc
add
dec
out
dec
data16
sahf
mov
iret
call
xlat
repz
cltd
cmp
dec
adc
sarb
loop
insb
out
add
push
xor
bound
out
push
adc
stos
or
insb
lcall
sub
xor
outsb
add
insl
pop
pusha
faddl
cld
hlt
jno
pop
into
pop
loop
stc
ror
add
mov
imul
ret
daa
popw
arpl
int3
pop
jbe
fmuls
sub
cwtl
cmp
mov
pop
xor
aam
mov
ret
dec
mov
pop
xchg
pop
aam
cmpsb
xchg
js
repnz
mov
add
hlt
mov
xchg
pop
mov
aad
jno
loop
repz
icebp
je
or
fiadds
out
pop
sbb
mov
aad
shl
mov
pop
jp
adc
xchg
outsb
rorl
xchg
xor
ror
cmp
repnz
push
adc
lret
pop
xor
insb
push
ror
mov
aam
mov
fiadds
mov
sti
xlat
mov
fld
lahf
std
punpckldq
ficoms
or
inc
rcrb
sub
mov
dec
sbbl
mov
ret
in
imul
icebp
add
shrb
sahf
pop
pop
test
loope
ljmp
pop
out
dec
loopne
dec
fs
xchg
and
lahf
and
or
xchg
add
mov
int3
adc
xor
popf
cmc
loopne
arpl
push
xchg
out
daa
or
aad
mov
and
mov
mov
addr16
lcall
aad
popa
into
scas
mov
repnz
xor
jmp
cmp
mov
sbb
dec
and
add
inc
orl
aas
mov
jl
divl
jl
and
lahf
movsb
inc
sbb
test
mov
outsl
rcrb
pop
loop
imul
icebp
cmp
enter
xchg
jne
rol
rcrl
pop
subb
adcl
sbb
xchg
ret
in
int3
and
mov
xchg
mov
add
or
and
jb
jns
cs
xlat
adc
rcrl
dec
push
push
sarb
jae
xchg
leave
int
cmpsb
jg
aam
inc
cmpsl
jo
adc
fs
and
jae
pusha
andl
mov
and
sbb
cli
hlt
adcb
outsb
or
fistpl
add
add
bound
xlat
popf
lods
or
adc
xor
pop
fs
cld
lods
andl
add
mov
clc
mov
jns,pt
sub
xor
outsl
adc
mov
lahf
jge
imul
cmp
mov
jle
fsts
out
adc
xchg
sti
push
add
dec
in
and
jno
lods
divl
lods
subb
sbbl
fistps
mov
and
mov
pop
xor
cmpsl
imul
sti
push
outsb
xlat
call
jns
inc
insb
mov
popf
mov
adc
pop
mov
mov
test
dec
inc
xlat
jle
mov
ficompl
lock
mov
and
out
mov
shrl
testl
sub
iret
lods
xorl
std
pop
push
sub
fwait
inc
cmpsb
push
add
xor
idivb
ds
dec
dec
lea
iret
imul
xchg
arpl
jae
jnp
in
mov
adc
popf
jl
cli
popf
sbb
cmpsb
inc
das
jo
scas
inc
add
xor
cwtl
sbbl
stos
adc
cmpsb
and
xchg
scas
mov
data16
loopne
das
inc
cmpsb
sarl
or
mov
fwait
outsl
rclb
movsb
int
push
and
stos
pop
push
dec
clc
nop
xor
mull
pop
lret
or
push
rcl
sbb
aam
cs
dec
out
push
out
fucomi
pop
js
inc
outsb
pop
sub
aad
push
jb
jg
or
clc
mov
cmp
in
test
xorl
adc
pop
mov
les
outsb
aad
push
xor
sub
in
ds
stc
fwait
push
bndstx
adcb
mov
dec
xchg
add
xchg
sub
adc
or
in
add
movsl
rorl
or
jl
xchg
xor
push
cmp
and
gs
inc
xchg
aas
in
notl
leave
das
inc
cwtl
inc
adc
add
xor
push
add
inc
flds
and
cmp
xchg
pop
fdivrl
insl
inc
ss
dec
rep
js
ret
clc
test
sub
sub
aas
sbb
gs
sbb
xchg
pop
mov
andb
dec
mov
stc
ja
stos
in
sbb
das
fcmovne
jbe
sub
mov
pop
pop
adc
mov
fisubrl
xor
inc
xchg
mov
add
js
aaa
repz
add
rorb
loopne
xor
mov
fnstcw
mov
test
mov
gs
sbb
into
xchg
push
jb
fildll
leave
push
jb
test
sbb
jl
ss
inc
mov
pop
loopne
lret
xchg
jecxz
sbbb
aam
nop
pop
dec
mov
sbb
rolb
sub
outsl
daa
outsl
ret
fbld
sub
push
mov
add
es
sti
sub
xor
jge
out
imul
lods
fbstp
adc
mov
outsb
or
iret
xor
sbb
or
or
arpl
jo
jecxz
sub
into
jnp
mov
pusha
insb
add
mov
daa
adc
ror
sbb
inc
push
cs
jne
xor
xchg
adc
addr16
cmpsb
cmp
jle
sub
mov
ljmp
mov
outsb
insl
dec
pusha
fstpt
add
xchg
lfs
pop
dec
jmp
mov
jne
ror
pusha
add
ja
or
dec
inc
dec
fadds
in
stc
aad
stos
jae
iret
mov
cmp
call
in
movsl
aas
mov
xchg
je
into
sbb
lock
int
fnstsw
xor
xlat
push
movsl
adc
push
dec
repnz
scas
xlat
nop
rol
adc
push
lcall
and
inc
fidivrl
sbb
mov
gs
push
les
iret
inc
add
push
mov
test
cmp
mov
jb
insb
js
mov
leave
lods
xchg
lahf
int
imul
aaa
mov
out
mov
add
sub
pop
inc
push
mov
jo
bound
inc
mov
jl
xor
jns
inc
xchg
dec
cmc
out
enter
fxch
or
xchg
mov
mov
mov
shrl
daa
inc
xor
or
mov
sahf
loop
ret
fmul
mov
adc
push
leave
fwait
in
push
movsl
mov
loop
add
pop
es
mov
mov
dec
out
ds
mov
xor
xchg
test
scas
les
stc
shrb
shrb
ret
lcall
cwtl
std
and
lods
mov
jne
cmp
mov
mov
xchg
cmp
enter
sbb
lea
dec
lahf
or
mov
in
fwait
pop
js
sub
jge
jne
dec
add
push
aas
add
lock
das
ret
mov
scas
sar
sbb
mov
xor
gs
std
jo
adc
lret
fiaddl
jle
pop
inc
or
jecxz
sbb
bts
xchg
fistl
andb
shll
in
push
xlat
movsl
push
mov
cli
push
push
sbb
pop
fstps
je
mov
push
rcrl
aas
inc
jno
pop
fsub
lds
fs
mov
sbb
sbb
push
andl
cs
xor
shlb
les
scas
aas
loopne
pop
adc
pop
adc
scas
rorl
push
outsb
pop
cmp
ja
shlb
xchg
add
mov
aaa
scas
inc
mov
int
mov
fsubrs
push
dec
fsubr
idivb
loope
adc
js
cmp
int
addr16
xchg
ss
pop
inc
data16
xor
test
nop
leave
jmp
and
mov
pop
sub
dec
dec
fs
rorl
pop
or
mov
jne
outsl
push
cmc
xchg
jns
out
adcb
out
lea
push
pusha
pop
js
inc
push
daa
movsl
mov
add
xor
xlat
jns
xchg
das
cli
insb
leave
xlat
ljmp
lret
pop
lcall
bound
xor
jge
fldpi
lcall
ds
fwait
stc
scas
ds
and
test
xchg
push
inc
sbb
mov
xor
push
sbb
push
xor
out
stc
xor
in
push
sub
mov
add
push
scas
cmp
pop
popa
popf
hlt
adc
mov
es
cmpsl
jo
pop
xchg
mov
xlat
popa
jl
imul
cmp
dec
add
sbb
lock
outsb
xchg
jb
repz
sub
pop
rolb
pop
mov
call
out
pop
movsl
sub
xorb
mov
pop
repnz
xor
test
fwait
mov
fildll
int3
in
cmpl
call
movzbl
xchg
cmc
jecxz
orb
cli
stc
sub
xor
pop
xchg
call
cmpsb
outsl
outsb
test
enter
inc
xor
jb
jmp
cmp
adc
mov
jne
cli
sahf
mov
and
mov
xchg
fwait
aas
lock
mov
jge
fwait
cmpsb
xor
out
loopne
test
inc
mov
outsb
loope
push
aaa
or
mov
mov
mov
and
push
mov
pop
out
leave
jg
inc
lock
push
flds
mov
dec
fwait
xor
int3
imul
mov
jl
mov
in
and
mov
dec
mov
sarl
inc
addb
ja
fsubs
pushf
out
test
pop
adc
lods
scas
mov
pop
xchg
cmpl
jecxz
stos
mov
sub
inc
mov
jns
sub
lds
inc
cmc
add
add
or
sti
cmpsb
pop
sub
inc
dec
data16
mov
push
xor
aam
jns
push
jle
mov
inc
sti
or
sub
dec
ljmp
pop
add
ds
mov
dec
and
mov
negb
fstpt
push
push
in
push
fnstcw
fcoml
dec
push
lahf
testb
xchg
daa
pop
cmpsl
andb
scas
subl
sub
and
ds
gs
jbe
call
stc
popf
je
adc
ret
jae
xor
jns
popa
pop
xor
add
inc
icebp
mov
and
dec
iret
orl
sbbb
insb
sub
sbb
pandn
mov
outsb
mov
sbb
xor
or
mov
lods
addr16
mov
out
push
out
fwait
mov
push
cmp
push
xorl
sbb
fucomi
nop
mov
adc
test
negl
cmp
data16
pusha
test
fistl
dec
push
stos
jmp
and
xchg
mov
aaa
sbb
je
jle
adc
leave
daa
outsb
jl
fldcw
int3
cmp
rcl
sbb
xchg
lahf
hlt
iret
pusha
lods
xor
pop
leave
arpl
adc
rorb
cs
mov
repnz
mov
fildl
orl
insb
enter
add
das
adc
mov
jns
leave
jae
shlb
add
mov
fisubl
pop
fmulp
jmp
dec
or
mov
outsl
fisttps
ss
and
jns
movsl
mov
jno
xor
mov
or
pusha
loope
adc
mov
jns
push
stos
popf
or
rolb
mov
sbb
shl
xchg
scas
loop
pop
lds
jo
inc
mov
insb
loope
mov
pop
aas
mov
lahf
call
push
and
jbe
or
mov
mov
mov
inc
fnstenv
pop
out
cmp
and
std
mov
mov
cmp
sub
call
sub
scas
inc
pop
out
jae
cmp
pusha
fwait
lret
jg
sub
fs
xorl
inc
shrb
mov
mov
pusha
stos
xchg
xchg
out
push
leave
mov
fisubrs
fs
or
into
int3
loop
js
mov
test
xor
lods
add
xorb
call
cltd
es
dec
in
push
sahf
imulb
es
sbb
xor
cmp
or
js
pop
outsb
dec
fldenv
mov
mov
or
push
mov
add
mov
int
lahf
push
std
aam
inc
lahf
mov
inc
push
jb
jno
pop
sbb
sti
mov
dec
xor
out
bound
xchg
pushl
movsl
test
push
push
cmpsb
xchg
add
sarl
outsb
fwait
and
or
inc
hlt
mov
repnz
data16
pop
xchg
xchg
clc
les
pop
cmp
cmp
pop
mov
ja
mov
sahf
lods
xor
das
cld
mov
or
ficoms
test
into
cs
push
ja
icebp
pop
out
fsubrs
xchg
add
jge
sbb
cmp
push
fwait
sbb
jp
or
sub
cmp
data16
and
pop
lret
int3
pop
lock
fstpl
and
lret
lods
loopne
push
pushf
inc
repz
push
mov
dec
ficoml
jbe
cmp
mov
jge
inc
fsubs
orb
ss
lea
xor
dec
cwtl
and
inc
stos
sub
lods
sbb
pop
xlat
xchg
push
xchg
cmc
lcall
data16
mov
pop
sahf
test
lcall
cwtl
mov
leave
xor
nop
outsl
addr16
out
bound
rcr
dec
dec
jne
dec
or
lock
fcomps
lds
mov
imul
stos
pop
jno
inc
dec
stos
sbb
mov
fisubs
imul
xor
outsl
adc
int3
stos
xor
adc
aam
jge
and
arpl
xor
sub
jmp
sub
pushf
xor
push
aas
sti
movsb
cmp
push
sti
and
mov
adc
jg
push
dec
cmpb
decl
xchg
cmp
repz
movsb
insl
cltd
lahf
scas
hlt
push
xor
bnd
gs
and
lcall
in
push
test
jmp
dec
lret
pop
sar
mov
loop
fdivrs
adc
fistl
les
or
mov
lds
pop
aam
inc
data16
test
sub
movsl
nop
adc
and
cli
mov
pop
decl
mov
aam
sbb
and
das
sub
loopne
push
in
adc
sahf
sbb
das
inc
jge
add
jmp
repz
cmp
cmpb
or
stos
mov
add
hlt
icebp
add
adc
aaa
push
sbb
xchg
xor
mov
or
scas
fdivrs
pop
insb
in
lret
mov
adc
imulb
fistpl
adcb
mov
inc
or
lcall
add
jns
xor
ja
sbb
inc
pop
sahf
and
aaa
fstpt
adc
add
test
stc
add
imul
pop
xchg
lods
dec
dec
and
xchg
jecxz
cmp
pop
sbb
leave
les
jl
repnz
adc
jnp
mov
lock
mov
loop
rcll
push
mov
cmp
xor
push
lods
pushf
out
push
popf
lods
fnstenv
dec
pop
inc
push
imul
sbbb
leave
or
sbb
add
hlt
enter
jmp
push
rcrb
mov
clc
or
aaa
bound
daa
fwait
stos
addr16
push
test
aas
ja
roll
sub
insb
das
pop
jne
shrb
into
fwait
pop
pop
lret
mov
sahf
adc
push
or
mov
mov
jbe
daa
std
sbb
jno
inc
mov
mov
xchg
cld
outsl
in
scas
dec
fxch
imul
mov
subb
jle
sbb
mov
jbe
push
cmp
sbb
into
jne
in
mov
adc
cld
lcall
in
add
jle
inc
mov
xor
xchg
add
pop
mov
aam
addr16
push
cmp
test
jmp
sti
popa
fstp
nop
lret
mov
pop
push
xor
push
hlt
xchg
incb
sbb
xor
lret
and
add
jecxz
fldl
adc
mov
outsb
sub
les
pop
pop
push
sbb
jnp
subb
add
insl
cwtl
and
xor
mov
mov
mov
andl
mov
mov
mov
mulb
iret
frstor
dec
mov
enter
inc
insb
jl
fisttps
inc
jne
ret
xchg
loope
mov
mov
flds
repz
xchg
mov
js
imul
sarl
mov
pop
adc
ret
mov
pop
scas
pop
ret
adcl
and
aas
and
sub
mov
push
mov
or
mov
incb
or
arpl
xor
test
pusha
test
jle
and
or
cmc
lret
add
push
ljmp
jns
enter
mov
push
or
sub
and
add
movsb
ret
scas
inc
xlat
outsb
ja
push
inc
lds
stos
add
add
lock
pusha
cmp
adc
pop
inc
bound
dec
stos
jae
bound
stc
mov
jne
ds
mov
xchg
xor
xchg
js
loope
mov
xorl
pop
and
inc
int3
fidivs
or
xor
call
cmpsl
andb
test
pusha
pop
jmp
leave
adc
pop
lret
fsubl
jecxz
adc
mov
cld
andl
into
imul
sbb
cli
repz
push
in
js
xor
int
jae
inc
das
aam
push
jbe
inc
cmpsl
pop
sarb
adc
or
sbb
mov
fsubrl
in
jo
scas
jne
sbb
push
movsl
idivb
aaa
hlt
or
shrb
jg
imul
icebp
adc
lret
fmull
in
or
in
add
les
push
roll
fs
cli
jne
adc
pop
fstps
adc
mov
xchg
mov
bound
movsl
scas
stc
add
push
mov
pop
mov
dec
mov
xchg
jmp
loop
rol
nop
xchg
or
mov
push
mov
pop
fisubrl
adc
add
stc
incl
jp
add
mov
mov
adc
fsubl
leave
movsl
pop
inc
repnz
mov
lret
mov
fcmove
lcall
jle
or
xchg
pop
pop
jge
sbb
repnz
inc
movsl
mov
xlat
push
push
xchg
cltd
je
cmpl
xchg
cmp
mov
inc
sarl
jo
push
sub
xrelease
sub
scas
sub
sub
mov
mov
in
fsubrs
mov
mov
sub
movsl
mov
hlt
std
cs
xor
test
push
xor
or
mov
jp
test
adc
xor
mov
repz
mov
test
in
iret
adc
xlat
scas
inc
lret
test
sub
push
mov
add
pop
ss
push
mov
cmpsb
ror
or
mov
sub
mov
and
fwait
je
dec
adc
fs
testl
aad
loop
in
sub
gs
enter
in
pop
dec
mov
pushf
add
js
jmp
ss
mov
fsubl
shll
mov
pop
outsl
popa
or
aas
out
cmp
outsb
sbb
sbb
sub
adc
das
mov
inc
and
insl
xor
jb
gs
or
dec
setno
movsb
ljmp
stos
inc
cmpsb
gs
sub
cli
cld
jmp
and
into
sbb
enter
add
push
adc
mov
fwait
data16
dec
pop
fnstsw
xchg
sbb
lahf
int
add
or
popf
xor
push
jne
mov
mov
or
add
or
lods
inc
je
stos
cwtl
pushf
mov
add
aaa
sub
cmp
push
pop
cmp
mov
adc
insl
inc
mov
dec
mull
dec
out
push
dec
push
je
xor
mov
xchg
sarl
cli
mov
sub
or
addr16
cltd
je
mov
rcl
and
fxtract
dec
int
test
dec
pop
inc
sarl
insl
cs
lahf
xchg
notb
ljmp
js
dec
cmp
decl
movsl
mov
shrl
stc
jge
das
test
in
dec
sahf
outsl
rorl
icebp
adc
pop
jns
sbb
or
repz
xor
inc
xor
push
xchg
mov
cmp
and
and
dec
arpl
adc
popa
andb
sub
push
inc
popa
push
pop
cld
faddl
aam
rol
pop
add
scas
loopne
js
sub
arpl
ret
mov
clc
mov
or
inc
pop
dec
xchg
jmp
inc
pop
mov
cmp
jge
cwtl
mov
mov
call
cli
mov
sbb
ss
cltd
incl
je
dec
mov
sub
es
popa
push
mov
stos
imul
xchg
std
sub
mov
mov
mov
rolb
nop
orl
jl
jo
lahf
inc
in
test
push
sbb
sar
bound
hlt
and
imulb
cmp
aaa
or
jae,pt
enter
push
call
mov
dec
ss
adc
clc
add
fnstenv
test
sar
and
inc
ret
aas
out
mov
je
mov
mov
dec
mov
dec
push
ljmp
jmp
mov
sub
mov
xor
test
sbb
push
dec
in
nop
jp
shll
fsubl
pop
xor
xor
sub
cmc
insb
jb
cli
jo
repz
push
leave
cmp
test
cs
jae
push
leave
test
popf
add
add
decl
mov
stc
cmp
jno
pop
shr
test
jle
inc
mov
jb
add
sub
lods
xchg
push
aas
paddb
dec
cmp
cmp
rcrl
pusha
in
xchg
cmp
or
sub
push
add
cmp
sub
or
rclb
mov
ret
mov
or
clc
xchg
ret
add
jecxz
scas
adc
scas
add
inc
jp
stc
insb
push
adc
push
shll
enter
sub
sub
mov
adc
pop
mov
bound
test
sub
fiadds
add
cmp
push
pop
fstpt
push
insb
clc
cmp
adc
in
ds
sbb
jg
loopne
js
dec
add
jo
sbbl
mov
mov
scas
insb
sub
popf
int
ret
mov
int
xor
lret
inc
jnp
aaa
sbb
das
ja
pusha
lret
jge
mov
inc
call
test
pusha
or
xor
scas
js
xor
pop
leave
fsts
jge
or
and
iret
dec
and
fiadds
xchg
test
mov
and
add
aaa
or
pop
lahf
dec
je
iret
push
cmp
inc
xchg
adc
out
mov
mov
ljmp
sub
inc
jmp
jne
in
xchg
fists
sub
or
ss
inc
test
test
mov
cmpsb
addl
xchg
jnp
cmpsl
es
xchg
mov
lods
enter
nop
inc
fisubrs
ljmp
xchg
cwtl
arpl
dec
sbb
imul
mov
repz
nop
call
dec
pop
outsl
xchg
rclb
fisubs
int
in
sti
shlb
in
pushf
enter
into
out
jb
into
pop
adc
push
fistpl
mov
fwait
sub
ja
cwtl
pop
leave
cwtl
fnstsw
movsb
pop
cmp
divb
push
or
and
dec
push
add
lret
xlat
jae,pn
sarb
das
stc
mov
pop
lcall
ret
and
dec
out
test
jns
pop
scas
pop
mov
out
je
sbb
sbb
fs
test
outsb
fwait
arpl
sbb
and
scas
leave
mov
dec
and
dec
mov
and
repnz
insb
cmp
jnp
rcrb
addl
pop
hlt
arpl
jle
test
inc
sbb
jnp
dec
sarb
or
sub
dec
lods
sub
xchg
mov
cmpsl
lods
pop
outsb
test
mov
sbb
pop
test
dec
std
test
jecxz
jb
sbb
sahf
jl
pop
scas
mov
popf
xor
and
xchg
fwait
mov
jae
call
push
insl
jnp
mov
mul
jmp
push
imul
mov
in
es
mov
pusha
jg
enter
rcll
insl
popf
mov
test
cmp
lea
pop
push
mov
xor
add
adc
pop
xchg
or
je
icebp
add
mov
inc
jo
mov
mov
push
xchg
daa
pop
idivb
cmp
xor
stos
xor
mov
pop
repnz
popa
out
cld
cmpsl
xchg
push
and
std
ret
jne,pt
xchg
rcl
lahf
mov
adcb
jne
jp
ja
lods
dec
jp
sysexit
push
or
rclb
sub
daa
ret
or
pop
mov
sub
adc
sbb
arpl
lcall
jmp
aaa
hlt
mov
in
push
mov
cmpsl
cs
movsb
inc
lret
cs
mov
or
adc
fmull
cmp
cmpsb
arpl
push
mov
ret
shlb
xchg
xchg
push
loop
jns
arpl
mov
xchg
or
enter
mov
sub
inc
adc
cmp
xlat
cs
fwait
mov
pushl
pop
inc
or
cltd
imul
push
xchg
cmp
xchg
mov
or
push
mov
dec
sbb
loope
loopne
lock
mov
jb
lock
movsl
stos
jl
adc
and
cmp
ficompl
mov
adc
mov
fdivrs
rorl
leave
jl
dec
mov
rcrl
inc
fwait
shll
cltd
dec
add
cmc
adc
adc
jecxz
add
sbb
mov
or
clc
movsb
jns
sahf
iret
xchg
insb
decl
cmp
mov
sbb
aad
mov
insb
aaa
or
test
xchg
call
mov
xchg
testl
fisubrs
aas
push
scas
inc
sbb
mov
aaa
sbb
lods
cs
add
js
lods
imul
mov
jg
lcall
int3
js
sub
or
adc
shr
mov
outsb
ret
pop
mov
imul
pop
call
stc
sub
fdivrs
shlb
arpl
call
pop
sbb
divl
ds
inc
aam
pop
inc
cwtl
sub
in
cs
inc
ret
inc
adc
xchg
add
out
inc
cmc
jp
pop
fcompl
lahf
notl
insl
and
push
lods
pop
mov
imul
lret
data16
fstps
push
sar
xchg
les
jg
call
push
out
sub
ret
xchg
add
sbb
test
or
aam
add
dec
inc
test
or
cmc
loope
push
xchg
mov
ljmp
test
xchg
inc
mov
push
add
and
rol
inc
push
and
push
cmc
ror
xchg
pushw
mov
jb
mov
nop
push
lods
mov
pop
cmp
dec
repz
xlat
out
xchg
push
adc
scas
test
cmp
divl
sub
xchg
int3
cmp
inc
xor
or
dec
and
shlb
int
iret
ja
jae
and
mov
icebp
test
jae
jmp
mov
and
sbb
pushf
hlt
and
test
leave
fldcw
or
xchg
mov
cmp
das
sub
fdivr
xchg
mov
data16
and
adc
mov
pop
jg
fsubrs
push
jnp
ret
adc
dec
mov
mov
outsb
imul
jno
hlt
push
pop
push
inc
inc
lods
bound
in
das
add
nop
xchg
pop
mov
cmpsb
stc
addl
sbb
into
and
xor
pop
ret
rcl
mov
mov
int3
xchg
or
test
sbb
cmpsb
ja
sub
sbb
mov
popa
push
push
sub
iret
push
clc
js
out
insb
hlt
lea
cmpsb
in
mov
movsb
push
push
adc
sar
vmwrite
jge
in
loope
cwtl
bound
out
and
cmc
mov
mov
jg
adc
sahf
and
out
out
xchg
sbb
pushf
cltd
inc
mov
cmc
cwtl
mov
lcall
sarb
mov
sbb
cmc
add
cmp
push
jmp
cltd
adc
inc
pop
repz
xlat
cmp
popf
in
cli
repz
cmp
lcall
push
nop
jae
mov
daa
jle
fidivs
nop
mov
sbb
scas
pop
xor
outsb
dec
ljmp
aad
pop
pop
sahf
aaa
lea
in
or
adc
dec
fsubrl
es
movsl
mov
xchg
int
movl
pop
testb
lds
pop
pop
cmc
lea
cmp
mov
add
and
pop
jle
pop
imul
aaa
les
bound
sarb
mov
clc
arpl
cld
or
add
cmp
and
mov
cs
cmpsl
sbb
ret
popa
or
lret
clc
jae
fisubrs
into
push
sbb
adc
jnp
sub
enter
mov
adc
ficoms
pushl
mov
lods
dec
popa
push
sbb
adc
sub
loop
xchg
popf
push
sbb
scas
dec
jg,pn
jae
out
insb
and
mov
jl
jnp
scas
jo
stc
push
xchg
inc
fwait
subl
jo
mov
pop
lahf
nop
aaa
pop
inc
mov
cmpsb
cmp
push
ds
outsl
jae
mov
nop
sbb
adc
aaa
dec
dec
es
adc
jns
push
sahf
aad
mov
pop
cmc
sub
cli
jmp
jl
call
mov
lock
or
fnstsw
pop
push
mov
mov
lods
sub
adc
cmpsb
inc
lock
xchg
inc
xor
les
xchg
je
out
cmp
and
jnp
imul
stc
js
das
lcall
in
pop
fsubrp
iret
xchg
test
out
mov
popa
ret
push
mov
mov
pop
mov
pop
pop
fsubrs
mov
sahf
cmp
push
cmpsl
mov
pop
mov
pushl
in
cmp
fsubl
pop
pushf
mov
cmpsb
and
rolb
ja
inc
roll
inc
fistpll
sub
repz
aas
repnz
lret
mov
int3
int
mov
sub
ret
mov
jne
pop
test
dec
pop
jle
cmpb
mov
mov
jbe
pop
das
pushf
mov
push
sub
xchg
repnz
and
dec
cmc
dec
mov
shrb
add
sbbl
mov
dec
repz
pop
in
inc
sarb
loopne
es
jno
push
mov
in
push
scas
js
js
inc
mov
sbb
in
mov
aaa
mov
into
mov
mov
push
call
push
jmp
and
filds
and
fidivrs
into
cmp
aaa
iret
in
jle
mov
stos
pushf
outsl
push
cli
shl
aam
sarb
int3
fs
subl
rcrb
cltd
fadds
loope
add
cmp
inc
mov
push
aad
inc
aam
sbb
loop
scas
cmc
leave
mov
fdivrl
fwait
test
pop
sbb
mulb
loop
out
xchg
push
sbb
out
addr16
out
lods
xlat
pop
popf
xchg
nop
clc
xor
icebp
mull
push
xchg
and
jp
leave
std
or
push
iret
repnz
daa
call
push
fdivl
imul
fsubr
in
xor
xor
jmp
push
sti
adc
pop
imul
lcall
lds
xchg
in
add
fidivs
cltd
std
std
inc
jnp
xchg
sar
xchg
mov
sbb
inc
cmp
shl
push
lret
adc
sbbb
jo
subb
pop
jo
mov
dec
add
lahf
dec
mov
int
out
cmpsl
or
cli
or
movsl
xchg
and
cmpsb
les
mov
jbe
fistpll
repz
cmp
int3
inc
adc
push
cmpsb
lea
push
jle
arpl
pusha
mov
test
movlps
popf
icebp
sbb
push
repnz
cmp
lcall
in
mov
jns
mov
mov
sub
movsl
sahf
xchg
movsb
pop
adc
adc
push
jl
aad
mov
jecxz
test
or
pop
cmp
repnz
imul
sub
int3
xor
jg
ds
jg
int
cmp
out
pop
mov
in
cmp
lret
mov
imul
test
push
pusha
push
movsb
dec
cld
out
das
xor
fnsave
ja
cmpsb
cmpsb
ds
repnz
add
xchg
mov
cmpsl
mov
jl
insb
cmp
into
and
sub
test
das
mov
repnz
and
xchg
inc
ret
in
repnz
mov
mov
mov
mov
in
ja
jmp
xlat
push
push
lock
repz
and
cli
or
idivb
or
cmc
aad
in
movsl
sbb
shlb
pop
mov
or
mov
add
ljmp
je
pusha
ffree
pop
fcmovnu
adc
mov
xor
shrl
ds
dec
repz
icebp
jmp
mov
insb
jmp
or
test
jp
cmc
adc
adc
mov
add
loope
out
ret
inc
push
popa
test
ss
lea
stc
or
out
shlb
shll
imul
imul
adc
iret
insl
add
jp
int
add
ss
jg
adc
repnz
sub
jg
dec
adc
inc
fstpl
js
jb
pusha
movsb
das
imul
mov
mov
shrl
movsb
es
and
pop
jne
mov
ljmp
sbb
mov
dec
les
divb
add
test
sub
rol
repz
in
push
pop
testb
add
insb
outsl
cmp
xchg
push
je
fsts
imul
repz
cmp
jmp
sar
test
pop
es
pop
add
pop
sahf
sub
pop
dec
inc
push
nop
or
sbb
clc
adc
push
lods
icebp
jnp
jp
cltd
test
jmp
push
adc
imull
mov
add
movsl
pop
popf
inc
incb
cmc
jl
pop
push
jno
dec
ja
pop
test
in
fs
xchg
mov
inc
test
movsb
pop
lock
mov
div
push
fadds
xchg
sarl
enter
mov
lock
in
and
pop
xlat
push
pop
mov
sbb
fisttpll
pop
sahf
jns
scas
push
enter
add
pop
adc
cpuid
in
sub
xchg
xor
orl
pop
cmp
stos
and
push
dec
pop
sbb
movsl
dec
push
cmp
fucom
je
mov
ljmp
into
or
mov
ret
push
mov
aaa
jmp
push
sbb
mov
add
jle
jns
nop
dec
inc
adc
cmpsb
orl
sbb
push
xor
jbe
aaa
shr
push
outsb
cmp
mov
sbb
lcall
cwtl
mov
lcall
fs
adc
adc
dec
lods
push
nop
pop
outsb
xchg
jl
pop
xchg
xlat
test
roll
push
add
dec
fstpl
and
sbb
cmp
nop
pop
pop
push
ds
js
repz
adc
test
mov
add
jne
and
jo
testl
dec
sub
add
shrl
scas
cmpl
push
in
popf
or
mov
ds
mov
push
movsb
cmp
mov
loopne
cld
xchg
jl
test
jmp
rorb
fstps
pop
add
pop
stos
add
xchg
mov
faddp
jmp
adcb
mov
push
outsb
pop
dec
mov
mov
pop
mov
or
sbb
outsl
dec
pushf
lods
stos
sti
xchg
mov
je
push
notb
mov
sbb
fdivrl
out
movsl
dec
lahf
xor
out
jns
fmull
inc
push
nop
std
mov
mov
xor
jae
push
mov
mov
aaa
mov
lods
into
jmp
aas
roll
inc
xor
into
pop
and
xchg
insb
dec
ljmp
xor
clc
mov
loopne
fcmovbe
lret
ja
add
test
call
add
adcb
xor
mov
push
inc
push
inc
xchg
iret
and
arpl
mov
cld
cwtl
aam
lcall
les
pop
and
xchg
sub
jge
adc
inc
incb
sbb
clc
inc
nop
jo
mov
in
mov
jg
add
shrl
xchg
xchg
fdiv
dec
in
in
inc
and
add
hlt
dec
sub
adc
add
inc
in
inc
imul
xchg
mov
fcoml
xchg
inc
repnz
fisubs
mov
test
mov
enter
ret
cmpsl
cld
lcall
in
or
push
xorl
out
pop
sbb
inc
test
lods
and
fmull
push
js
and
stos
push
and
cwtl
xchg
sbb
pop
dec
or
dec
push
dec
in
cmp
sbbl
jp
lahf
mov
dec
lahf
je
shlb
lock
lods
fwait
push
or
sahf
xor
lea
cltd
jb
in
loope
push
movsl
sbb
sub
cmpsl
xlat
push
popf
jl
imul
sbb
or
lret
mov
out
loop
pop
enter
fildll
adc
push
subb
mov
nop
shrl
xchg
jmp
arpl
mov
adc
test
pushf
xor
or
cmp
stc
xchg
xchg
pop
or
mov
mov
push
xor
lret
add
mov
dec
jecxz
jnp
hlt
and
push
popf
push
sti
push
adc
sbb
fs
adc
int3
arpl
cltd
cmp
ljmp
outsl
pop
xor
in
inc
shrb
add
dec
jecxz
or
add
outsb
inc
fs
push
or
outsl
das
xchg
mov
nop
xor
dec
test
js
or
outsb
push
movsl
pusha
sbb
sbb
push
fidivrs
xlat
je,pn
lcall
ret
sbb
sar
jns
mov
jecxz
divb
xchg
inc
arpl
repz
cwtl
shll
sub
aam
push
jecxz
test
mov
hlt
scas
int3
popf
andb
push
lock
xor
mov
xchg
or
pop
cs
sub
jbe
jp
cli
cmp
adc
test
xchg
xchg
mov
adc
rcrl
jae
les
mov
sbb
add
outsb
arpl
and
jne
inc
cmp
push
add
es
add
sbb
xor
std
dec
loopne
adc
stos
inc
nop
fwait
sbb
and
pusha
push
movsb
jbe
aad
sbb
imul
sbb
stc
pop
adc
flds
ret
mulb
mov
mov
sbb
out
xlat
popa
jl
imul
xchg
pop
orl
adc
mov
adc
jb
gs
iret
pushf
cmpb
mov
and
inc
popa
push
inc
xchg
and
arpl
xor
int3
cmc
pusha
int
or
sub
and
dec
iret
sub
mov
push
jae
popf
sarl
add
shll
popf
add
hlt
pop
mov
shl
cltd
lock
jmp
ljmp
cmp
cld
xchg
push
or
dec
cld
ss
iret
xor
rorl
clc
sub
pop
fstps
in
cmpl
mov
pop
das
repnz
popa
mov
lock
pop
loope
cli
cld
pusha
aaa
in
test
fnsave
and
sub
mov
scas
or
js
xchg
je
ret
movsl
hlt
add
fldt
adc
sub
xchg
add
imulb
popl
push
adc
cmp
sbb
sub
je
xor
test
inc
daa
das
jo
xlat
pop
lahf
xchg
or
jmp
jg
dec
int3
adc
jns
add
je
imul
stos
pop
shrb
enter
outsl
jae
mov
int3
push
cmpsb
jecxz
adc
aaa
out
call
ja
inc
push
mov
mov
sbb
ror
std
xchg
aad
leave
out
lock
pushf
aad
jbe
mov
pop
dec
std
out
adc
sbb
movsb
sahf
cli
sbb
inc
jg
test
push
out
test
jecxz
add
xor
popa
xchg
lret
in
stos
addb
cmp
test
inc
aaa
jb
inc
into
aaa
loopne
mov
aad
aaa
adc
mov
ljmp
cmp
fndisi(8087
ret
lcall
clc
orl
test
dec
in
dec
aam
ss
sbb
ds
mov
out
fsubrp
mov
jle
push
pusha
xchg
scas
lahf
frstor
mov
pushf
add
pop
arpl
bound
fnsave
mov
push
cmc
adc
mov
jno
inc
rorl
dec
sbbb
and
fldl
repz
daa
dec
xchg
jmp
ret
insl
mov
lcall
mov
push
push
cmpsl
ds
mov
pop
rorl
jo
sub
add
push
sub
mov
xor
push
aas
pop
sbb
inc
xlat
jmp
dec
jecxz
jns
insl
add
hlt
xchg
xchg
incb
movsl
fsts
or
push
push
imul
jnp
add
xor
mov
mov
xor
fisubrl
adc
fsub
inc
cli
add
popf
xor
rclb
push
lods
jl
jns
adc
xchg
xchg
push
or
jnp
aad
daa
test
jns
mov
jo
jg
push
adc
sbb
fmull
push
outsl
jmp
mov
mov
js
in
jae
xor
in
movsb
les
rcr
fimull
xor
mov
push
or
jl
clc
add
mov
or
xor
or
int
mov
fstpl
fnstcw
mov
test
dec
dec
das
aam
pop
mov
jecxz
lahf
cmp
call
pop
push
sub
icebp
inc
lret
int3
adc
mov
lcall
mov
push
inc
pop
xor
adc
mov
addl
push
mov
mov
and
mov
xor
xchg
sahf
fistl
test
sub
out
addr16
dec
sbb
lret
cmp
gs
push
add
iret
dec
push
fistpll
jb
aas
ret
sub
lahf
pop
fisubrl
mov
jge
pop
out
cmp
push
add
xchg
cmp
mov
jno
or
mov
int3
lcall
xchg
cmp
mov
xor
mov
push
cmp
and
mov
xchg
fcomi
pop
push
xor
out
push
mov
jp
push
aam
xchg
adc
sbb
xchg
xchg
jge
push
stos
or
out
mov
pop
xchg
sub
outsl
sbb
imul
shrl
ja
push
pop
sub
bound
rcrl
jnp
jecxz
mov
movsb
testb
cmp
mov
mov
and
loope
xor
push
xor
add
adc
xchg
push
pop
dec
int
jno
cmp
mov
lods
outsb
dec
shll
mov
sbb
dec
js
js
imul
insl
xchg
arpl
jae
dec
cmp
cmp
or
mov
mov
mov
jo
push
pop
mov
out
pop
fsubrl
outsb
repnz
jbe
xchg
jo
sub
sbb
rol
mov
popf
stc
xchg
insl
iret
cmpsb
nop
mov
adcl
aam
in
jle
jne
pop
insb
pop
pop
pop
mov
xor
cmp
xor
mov
cmp
mov
js
shrl
xchg
mov
push
sub
inc
fwait
sub
loope
mov
pop
enter
mov
sbb
mov
fisttpll
ret
aad
jecxz
push
stc
dec
in
clc
adc
mov
repz
dec
and
inc
lahf
cmp
pop
inc
pusha
cmp
jmp
inc
fwait
scas
push
sbb
mov
cmp
inc
push
repz
jecxz
mov
js
mov
pusha
je
sti
cmp
rcr
sbb
popf
mov
pop
pop
add
cmpsb
sub
fcoms
stos
mov
and
arpl
mov
jmp
add
jae
mov
push
mov
icebp
dec
ss
movsl
ss
cmpsb
ljmp
aad
fistpl
inc
pop
cmp
xchg
gs
in
cmp
xorl
in
sub
mov
ret
lcall
es
xchg
out
lcall
push
jae
add
iret
or
inc
push
incl
xor
xchg
sub
pop
adc
dec
xlat
jbe
mov
lret
mov
loopne
pop
push
int3
dec
pop
dec
iret
fadds
jmp
int
jne
and
dec
sbbl
cmp
push
pop
lds
inc
pusha
scas
popf
stc
test
faddl
ficoml
mov
cli
sarl
push
lcall
sti
jne
test
mov
sbb
hlt
movsb
xor
cld
shr
loop
jecxz
sub
sub
das
movb
mov
xchg
insl
or
cmc
imul
add
xchg
sahf
pop
pop
jb
jp
add
int
xchg
sbb
outsl
cmp
in
std
imul
add
sbb
fwait
ret
test
pop
xor
nop
push
aas
aad
push
iret
sub
add
repnz
and
aaa
push
mov
std
push
inc
arpl
or
mov
dec
pop
and
adc
xchg
ds
ret
scas
hlt
mov
pusha
pop
adc
adc
mov
adc
jmp
sbb
test
clc
stos
adc
fisubrs
sti
shlb
outsb
lcall
movsl
enter
mov
in
aam
in
cmp
mov
aad
xchg
fcmovbe
outsb
loope
rclb
adc
mov
pop
sti
mov
pushf
dec
enter
fidivl
push
hlt
push
adc
push
mov
cli
jl
in
cmp
not
and
cmp
loopne
test
lcall
negb
mov
pop
call
pushl
test
xor
fiaddl
mov
or
jg
popf
lock
iret
mov
adc
addr16
test
dec
lock
fstpt
sub
test
outsl
push
push
mov
cld
cmp
call
cmpsb
push
arpl
xchg
push
mov
push
cmp
ds
jae
pop
lods
dec
pop
pop
adc
lds
sub
addr16
cmpsb
mov
lahf
jg
adc
in
jns
test
push
das
or
nop
cmp
je
mov
mov
inc
cmp
jmp
push
shll
movsb
lds
sti
xor
mov
mov
insl
daa
insb
sub
or
in
pop
arpl
out
sub
push
pop
ret
jns
int
fcomps
stos
lea
outsb
cmp
push
insl
inc
pop
iretw
xor
leave
cltd
inc
xchg
cld
cli
mov
fwait
bound
sbb
mov
sbbb
push
pop
mov
out
insb
mov
lods
aaa
jae
jae
popf
sub
in
test
sub
aas
mov
and
jnp
and
pop
xor
mov
mov
pop
dec
mov
pop
in
imul
sub
ja
mov
and
out
and
push
xor
addr16
mov
lahf
testl
dec
dec
loopne
mov
call
rcrb
lcall
or
push
inc
test
aas
popf
adc
inc
cmpsb
test
push
into
mov
lret
push
das
jno
add
repnz
lahf
xchg
aam
cltd
loopne
xchg
xor
and
jb
dec
in
sub
add
cmp
push
sbb
pop
jg
pusha
insl
je
or
mov
xor
adc
push
add
mov
jg
fsub
inc
mov
mov
arpl
les
ljmp
stc
sbb
adc
sub
fnstcw
sbb
notl
mov
iret
frstor
pop
test
dec
push
mov
push
adc
nop
push
jno
gs
push
divb
mov
frstor
inc
ret
outsb
fmul
fs
sbb
ret
xchg
sti
inc
repz
jno
jecxz
fcmovnbe
cli
rclb
in
out
out
adc
mov
xor
imul
mov
cmp
pop
outsb
orb
leave
pusha
fdivrl
mov
push
iret
pop
xchg
nop
fstps
adc
ficoms
outsb
pusha
or
cltd
and
sub
inc
das
sub
or
or
dec
mov
xchg
jp
xor
daa
mov
adc
xor
cmpl
fbld
dec
loope
jmp
fisubrl
mov
dec
in
xchg
shrb
jb
mov
xchg
mov
sbb
adc
xor
scas
jno
dec
inc
sti
xor
pop
push
jno
jle
lahf
daa
lods
xchg
mov
push
inc
xchg
icebp
arpl
test
dec
xchg
leave
sbb
daa
pop
sahf
push
sbb
xor
xor
sub
mov
cmp
into
icebp
mov
cmp
mov
push
push
imul
and
xchg
fbstp
stos
pop
arpl
inc
sahf
pop
test
aaa
rcll
jmp
sbb
lds
jg
into
frstor
push
lock
adc
aad
inc
sbb
mov
ja
fsubl
or
adc
jo
pop
fmull
aaa
loopne
mov
xor
je
push
subb
dec
fisubs
mov
jo
inc
lods
lret
jne
fildl
mov
int3
outsl
xor
mov
or
dec
es
xor
jmp
fxch
jle
mov
fcmovnbe
bound
icebp
cmp
mov
mov
arpl
jl
adc
mov
out
push
adc
add
cli
int
mov
push
cwtl
imul
movsl
add
xor
sub
xchg
in
aaa
pop
ds
out
jo
add
mov
push
loop
repz
mov
sahf
addr16
rcl
push
or
jne
adc
and
and
adc
xchg
popf
inc
adc
popf
sub
cmpl
lahf
test
jae
jae
shrl
sub
clc
std
test
push
mov
ljmp
mov
lds
mov
enter
xchg
dec
in
int3
push
mov
push
in
push
mov
pushf
insb
jo
mov
adc
scas
add
mov
loop
add
fwait
popf
jo
loopne
inc
cmpsl
cmp
xlat
jle
or
bound
jmp
inc
dec
sarb
cmp
mov
push
fcmovbe
jo
add
dec
jle
mov
cmp
out
inc
and
out
push
inc
pusha
mov
xchg
mov
mov
push
add
outsb
mov
jbe
enter
test
mov
push
les
out
lret
mov
push
aas
mov
loopne
inc
dec
nop
mov
ret
adc
pop
hlt
mov
jnp
mov
rcl
mov
rcll
dec
or
sbbb
pop
and
sbb
mov
out
clc
push
and
dec
mov
cmpxchg
iret
insb
lods
and
mov
in
dec
cli
inc
jg
test
mov
in
insl
jg
push
scas
mov
cltd
int
add
xor
shrb
fcoms
dec
in
lahf
hlt
out
in
push
cwtl
pop
andb
mov
loop
push
test
daa
sub
pusha
in
adc
sbb
push
test
sub
jl
add
push
mov
mov
cmc
fistps
adc
scas
cmp
pusha
stc
adcl
xchg
into
pop
xchg
pop
popf
pushf
ds
outsb
jnp
mov
pop
arpl
repz
mov
test
filds
adc
and
outsl
cli
sbb
notl
adc
shll
sub
rcll
test
fcoms
int3
shll
stc
mov
outsb
mov
insb
mul
pop
fwait
stos
xchg
daa
mov
movsb
popf
inc
out
ljmp
and
stos
dec
rcr
cli
fdivrl
pop
jp
inc
push
repnz
cs
repz
stos
inc
inc
divb
sub
stos
push
inc
pop
mov
in
xor
add
es
bound
lods
mov
std
pop
or
repnz
gs
fwait
arpl
scas
fistl
sub
xlat
movsl
out
jmp
dec
and
and
sub
inc
out
scas
mov
lret
lcall
mov
cmp
in
test
or
out
clc
xchg
repnz
sub
daa
lcall
push
add
addr16
bound
icebp
sti
xchg
and
pop
rcrb
aam
hlt
pop
adc
push
cmpps
shrl
and
hlt
xor
mov
popa
scas
mov
mov
movsl
mov
shll
dec
adc
adc
lcall
and
mov
or
jmp
mov
stos
add
cmpsb
sahf
dec
and
sbb
fisubrl
gs
xchg
dec
add
push
stc
cmp
mov
jecxz
xchg
pushf
mov
mov
push
lret
bound
shlb
out
jmp
dec
shrl
mov
incl
aad
xor
push
andl
pop
fwait
seta
jg
lods
test
ret
sbb
mov
je
jle
outsl
sub
xchg
jg
inc
jae
adc
cli
xchg
jle
inc
mov
dec
jnp
mov
jmp
sub
jns
mov
cs
pop
or
dec
shrb
mov
in
mov
scas
ds
out
jo
push
int3
pushf
adc
push
hlt
cmp
in
adc
mov
call
fnstsw
lods
daa
js
ret
mov
xchg
xchg
mov
jg
fdivrl
popf
xor
mov
lcall
mov
and
icebp
insb
dec
pusha
xor
mov
es
xor
mov
es
xchg
ljmp
insb
inc
inc
std
jp
jo
dec
sarl
mov
jno
fwait
scas
or
push
dec
aas
push
push
jmp
push
int
repz
push
scas
leave
clc
mov
std
adc
mov
dec
faddl
xchg
jp
lret
mov
dec
mov
push
lods
or
push
test
mov
cmpsb
jecxz
pop
pusha
mov
mov
pop
test
cmp
sbb
insl
dec
sbb
mov
dec
xchg
dec
pop
sub
fists
cmp
fstsw
pop
repz
add
loopne
sar
iret
cmp
enter
inc
stc
jnp
cltd
xor
sbb
sbb
jp
pusha
lret
js
lods
mov
jne
lret
hlt
pop
inc
loope
push
push
das
xchg
rclb
pop
jmp
idiv
mov
bound
out
xchg
fsubl
push
mov
mov
push
push
adc
dec
fmuls
out
fiaddl
out
adc
xchg
scas
xor
and
repz
das
sbb
gs
int3
lahf
ss
mov
mov
sysexit
add
push
add
inc
imul
inc
addr16
adc
ss
inc
push
dec
push
or
dec
add
add
cmp
leave
call
out
sbb
ret
mov
loopne
mov
sar
lcall
bound
add
add
outsb
out
int3
clc
in
jne
pop
mov
jp
inc
xchg
sub
mov
loopne
lahf
ret
mov
and
insl
call
mov
and
mov
dec
cmp
rcl
outsl
xor
ja
cli
ds
pop
mov
push
arpl
xchg
push
out
outsb
sub
popf
push
into
addl
and
mov
xchg
filds
cmpsl
cwtl
outsb
mov
pop
shrl
inc
cwtl
and
cmp
pop
lods
sbb
pop
iret
add
inc
aas
add
call
jecxz
jo
cli
push
fidivl
sbb
cmp
mov
rcl
and
push
pop
scas
add
shl
cwtl
or
add
in
rorb
xlat
fidivs
int3
lds
mov
out
add
sti
test
sub
pop
cmpsl
pop
dec
adc
popa
loopne
xor
lds
jbe
mov
fdivs
sbb
push
fistpll
movsb
jg
pop
popf
dec
popa
xchg
loop
jmp
pop
adc
mov
cmp
movsl
add
lea
into
push
popf
sbb
jle
ja
jge
in
cwtl
push
jns
aad
mov
call
cmp
lds
xchg
push
sbb
cmovo
mov
fstpl
lret
incb
adc
mov
sti
sub
sub
dec
stc
add
inc
pop
lods
ret
cmc
xlat
repz
fisubrl
add
or
inc
mov
and
xchg
add
or
push
in
adc
pop
ljmp
xchg
and
pop
add
sbb
cltd
sbb
cmp
mov
xor
mov
lock
jmp
aaa
cltd
test
mov
adc
jns
stos
mov
shlb
mov
fisubs
adc
negb
lea
outsb
jp
mov
mov
daa
xor
ss
xor
pop
cwtl
mov
mov
xor
fnstenv
mov
leave
test
mov
push
pop
jbe
ror
rolb
ss
into
pop
jmp
add
out
clc
mov
xchg
sub
xchg
jbe
ja
xor
push
or
jae
lock
and
mov
sub
pop
jno
inc
push
popf
jae
faddl
imul
xchg
mov
push
adc
sub
adc
adc
das
cmp
jbe
inc
out
cmpsl
pop
pop
cmp
repnz
and
cmpsl
xor
add
test
mov
dec
and
sub
jnp
sub
dec
push
lret
xchg
lret
das
push
out
mov
outsb
add
enter
xchg
push
xchg
inc
data16
adc
fnsave
xor
cmc
addr16
mov
out
xor
push
mov
stos
movsl
jns
mov
call
adc
sbbb
enter
dec
mov
aad
xchg
outsl
and
jg
mov
adc
lret
xchg
ss
sbb
frstor
sbb
repnz
les
out
roll
xor
scas
daa
mov
jge
ret
mov
mov
in
ljmp
jge
mov
sub
out
inc
lcall
pusha
loopne
scas
cmp
sbb
imul
popl
ficoml
sub
inc
mov
xchg
push
sbb
sub
push
lret
icebp
fdivp
je
gs
push
and
int
inc
jo
push
imul
loope
aas
xchg
clc
cmp
fs
sbb
out
je
and
lahf
repz
xor
mov
or
and
dec
jmp
push
jne
xor
fs
sub
mov
lahf
dec
mov
cmc
js
and
fidivs
push
stos
push
add
xor
imul
dec
insl
xor
adc
shl
jns
cmp
inc
jle
adc
pop
lock
mov
ja
jl
cmpsl
ds
mov
cmpl
pop
and
xor
shld
mov
inc
pusha
cwtl
sbb
dec
aaa
lock
inc
xlat
lret
out
test
jmp
out
loope
inc
add
xor
test
mov
jo
push
pop
pop
ds
jo
mov
sub
sub
jp
out
lds
fisubrl
clc
adc
hlt
dec
adc
rcl
dec
jmp
sub
mov
mov
mov
testb
in
mov
xchg
mov
inc
insb
imul
push
jb
lds
imulb
pop
mov
push
cli
fwait
push
out
mov
cmpl
mov
pushf
jmp
aaa
ljmp
mov
out
in
adc
and
shrl
fistps
pop
jecxz
lea
cmp
pusha
pop
jge
and
cltd
imul
sub
ss
and
lods
mov
xchg
sbb
bound
iret
inc
clc
jb
ret
scas
push
lods
fists
mov
xchg
add
clc
iret
ss
xor
aam
ret
mov
add
add
test
mov
ret
and
and
jae
popa
xlat
outsb
dec
mov
rcl
xchg
test
jb
aaa
movsb
add
call
jnp
sbb
jmp
or
pusha
mov
test
sbbl
shr
das
cmp
sahf
sub
std
jl
int
push
pop
jg
movb
cmp
pop
fcoml
xchg
pusha
jge
jne
xor
jns
xchg
xchg
xor
in
jns
pusha
or
lcall
outsb
xor
popf
xchg
push
rclb
inc
mov
xchg
aaa
fxch
pop
or
inc
ljmp
jae
cmpl
adc
dec
data16
xchg
addr16
cs
add
fwait
xchg
dec
aaa
pop
jno
jo
lret
scas
lock
mov
sbb
lock
mov
scas
cmp
lahf
hlt
jno
cmp
or
cmp
add
lock
sub
and
or
add
cmp
test
stos
mov
dec
sub
jnp
repz
sub
shll
push
out
outsb
stc
jp
es
dec
xchg
add
std
add
xor
fsubrs
mov
jae
inc
mov
popf
sahf
xor
in
mov
scas
cli
pop
xor
and
das
cmp
jge
xor
aaa
lods
or
sahf
and
frstor
or
daa
mov
testl
stos
shrb
and
mov
loopne
shlb
loop
pop
clc
enter
sbb
js
pushf
xor
ljmp
xor
mov
dec
sub
mov
popf
jno
jbe
outsl
adc
dec
pop
lods
jmp
jle
cmpl
pop
mov
add
popa
popa
jl
add
xor
xchg
imul
xor
rcr
adc
pop
adc
divb
mov
push
in
add
and
sbb
scas
cmp
push
mov
xchg
pop
loope
xor
xchg
lds
jae
add
outsl
xchg
shrl
adc
into
lret
cld
lock
pop
inc
movl
inc
xor
jmp
cli
xchg
jbe
xor
sub
sbb
mov
xor
and
scas
rcrl
dec
lods
ja
lcall
xchg
ficomps
std
jl
std
pop
lret
cmpsl
xchg
add
or
sbb
scas
outsl
test
scas
mov
jo
int3
mov
notb
decl
pop
cmpsb
rcr
jbe
cli
or
xchg
daa
mov
aad
jl
test
in
jle
out
mov
push
lea
call
inc
push
mov
aaa
arpl
or
xorb
push
cltd
stos
lret
pushf
or
xor
shrb
dec
aad
adc
pusha
push
add
cld
xchg
cs
or
popa
mov
mov
loop
outsb
add
inc
pop
enter
pop
testb
jl
mov
pop
int3
arpl
mov
cmpsb
mov
loopne
lods
mov
out
sti
rcrb
cmp
sub
pop
adc
add
test
outsb
into
xchg
xor
xor
pop
lret
mov
orb
stos
mov
ljmp
mov
jge
xchg
cmpl
dec
or
outsl
nop
xchg
dec
mov
mov
scas
pop
inc
sub
lods
clc
imul
dec
pop
xchg
pop
inc
ja
cmp
stos
pop
jb
push
push
pop
push
stos
cmp
daa
enter
mov
xor
jle
cmp
adc
les
fdiv
xor
mov
sub
mov
cmc
sub
jb
cltd
mov
popa
mov
sbb
xchg
es
int3
arpl
repz
push
adc
or
loope
push
gs
add
sub
pop
js
add
push
adc
sbb
insb
sub
add
mov
cli
fwait
mov
repnz
mov
push
xor
mov
inc
jmp
dec
mov
mov
sbb
jge
addr16
sbbl
ror
or
mov
arpl
xchg
ds
leave
lods
xor
push
sbb
xor
pop
movsl
iret
pop
lods
or
fmulp
and
xchg
sbb
ds
mov
pusha
clc
sub
ret
data16
dec
jg
inc
stc
jbe
sub
mov
aam
mov
pop
mov
xlat
xchg
imul
fistl
lds
in
jo
jl
push
je
add
mov
mov
xchg
out
push
sahf
jecxz
repnz
dec
sti
inc
push
filds
fldl2t
mov
jae
add
std
mov
mov
enter
push
divl
inc
jge
ss
xchg
lret
xchg
fs
inc
push
add
pop
test
pop
out
idivl
dec
dec
out
cmp
xchg
mov
stos
loope
fisttpll
adc
lret
fs
bound
sub
jne
pushf
aas
aad
lods
cld
mov
ret
xchg
mov
adcb
add
imul
cwtl
outsb
add
or
pusha
sahf
scas
dec
mov
out
xor
out
arpl
mov
sti
xchg
and
jo
dec
test
add
cwtl
pusha
insl
leave
add
gs
in
sbbl
push
jle
jge
pop
mov
out
xor
or
jl
movsl
and
shll
into
dec
cmpsb
jp
pop
inc
sbb
adc
push
adc
hlt
ja
jno
ds
nop
std
adc
fld
mov
inc
push
fidivl
push
iret
pop
aad
movsl
icebp
pop
loope
cmpsl
mov
xchg
insl
dec
lock
and
adc
fstpl
vpmacssdql
mov
add
dec
testb
popa
pop
sbb
nop
push
fs
push
lret
add
popa
inc
loopne
pop
adc
xchg
push
mov
fdivr
xchg
cmc
pop
cwtl
pusha
in
sbb
dec
and
inc
test
lea
push
aad
jo
mov
loope
cmp
testl
std
cltd
in
cltd
adc
dec
popa
push
std
mov
xlat
ljmp
mov
xchg
addr16
loope
loop
and
sbb
dec
and
push
fwait
mov
mov
call
repz
pushf
push
rclb
pop
fdivrs
test
out
jecxz
pop
das
jle
popa
push
xor
std
insl
je
jg
xchg
push
popf
aad
leave
mov
pop
and
cmpb
popf
fdivr
iret
and
push
push
clc
jle
imul
lods
in
mov
pop
cmp
pop
lahf
push
mov
push
jp
mov
dec
cltd
add
aam
test
shlb
add
xor
and
push
lds
vsqrtps
dec
xor
leave
pusha
out
decb
ljmp
adc
mov
cmp
scas
fmulp
xchg
dec
adc
sbb
mov
add
xor
movsb
loop
pop
push
inc
adc
jae
pop
mov
push
data16
mov
mov
inc
xlat
xor
mov
inc
mov
pop
pop
cmp
js
lods
mov
lret
pop
xchg
call
shrl
in
jmp
fwait
shl
pop
pusha
test
shl
adc
cli
dec
imul
in
or
int
out
int
sbb
xchg
adc
aas
xor
dec
mov
iret
mov
and
in
add
push
js
gs
jb
mov
pop
and
cmp
es
sahf
and
dec
bnd
and
pop
jbe
popa
and
stc
test
add
cmp
pop
inc
loopne
stos
or
mov
sub
sub
or
arpl
psraw
mov
call
sub
push
out
js
aaa
mov
inc
pop
push
addl
xchg
enter
outsl
popa
sub
cs
xor
pop
int3
sti
pop
sbb
sbb
or
dec
add
aas
mov
jle
in
in
insl
sub
push
inc
add
les
js
std
jp
mov
add
sbb
ret
add
stos
mov
movsl
aas
dec
sub
sbb
clc
sub
in
inc
cmpsb
cwtl
jge
aad
jmp
pop
cmp
and
mov
jnp
mov
xchg
test
mov
bound
iret
aaa
sbb
addr16
ret
push
cmp
dec
mov
sti
and
mov
aad
sub
xchg
adc
fstpl
mov
shlb
loopne
aam
sub
inc
inc
cmpsl
ja
push
in
xor
js
outsl
jbe
into
setae
lahf
testb
test
fscale
mov
test
inc
cmp
cmpl
mov
mov
daa
movd
and
jle
lock
fimuls
icebp
jp
dec
push
add
cmp
js
mov
sbb
mov
out
dec
fisttpll
insl
loopne
xchg
jl
inc
sbb
sub
sub
cmp
cli
xchg
outsb
movsl
in
cli
xchg
scas
rol
inc
stos
push
ss
fcmovb
shll
stc
push
enter
inc
mov
and
pop
xchg
jo
fistps
mov
mov
mov
psubw
mov
iret
push
mov
sbb
outsl
loop
and
dec
xor
push
mov
notb
mov
lret
in
sub
push
jmp
leave
jb
push
sub
fwait
inc
imul
ret
or
fwait
pop
ss
dec
les
xor
dec
pop
scas
in
fwait
adc
mov
test
sub
inc
lods
jno
inc
movsb
mov
sub
repnz
adc
and
sub
inc
ss
out
bnd
fnstcw
mov
mov
lret
jmp
mov
fwait
or
jmp
mov
add
mov
mov
stc
arpl
pop
mov
gs
jno
lret
rcll
push
popa
popl
sbb
xchg
cmp
lds
pop
mov
jae
pop
jb
mov
mov
lods
dec
jb
lods
fildll
jle
stos
push
in
pop
jbe
outsl
stos
scas
dec
push
sbb
mov
iret
pop
pop
imul
out
push
sbb
test
sub
loope
rolb
cmp
orb
xchg
mov
jae
in
nop
sbb
pop
or
or
jb
xor
sub
xor
scas
imul
jp
jno
fwait
rorb
ljmp
sahf
or
stos
sbb
pop
lret
sti
lahf
data16
mov
push
test
std
pop
inc
mov
ret
lret
mov
push
in
dec
jae
aad
lahf
aaa
cli
inc
ficomps
sbb
cli
xor
imul
xor
mov
inc
sub
jle
mov
xchg
mov
xchg
jmp
mov
mov
insb
mov
dec
mov
jne
fmull
mov
ja
xchg
pop
inc
ret
rorl
sbb
mov
and
fstpl
push
aas
and
dec
and
mov
repnz
addr16
push
aam
hlt
shll
cmp
nop
mov
dec
leave
fiadds
sub
aad
dec
sbb
cmp
adc
cmp
daa
adc
fcmovnb
imulb
jno
dec
mov
in
daa
pop
fisubs
jno
add
shrl
gs
out
xchg
out
bound
sub
fstps
mov
lahf
out
cwtl
mov
inc
xchg
repz
out
cltd
cmp
sub
xor
fstl
mov
lods
cmc
mov
or
inc
mov
adc
mov
fnstenv
lods
into
lea
incl
mov
xor
mov
mov
xchg
mov
mov
sbb
cmpsb
es
fsubrs
and
ret
test
sub
mov
imull
int3
leave
adc
push
add
push
pop
mov
sub
mov
push
movb
jb
pop
jmp
or
rclb
or
nop
mov
fsts
cs
addb
out
sbb
test
inc
cli
mov
mov
xchg
stc
mov
push
mov
in
jl
cmpsl
iret
mov
arpl
pop
dec
inc
push
out
inc
out
fdecstp
mov
sub
cmp
sbb
add
mov
push
adc
xlat
insl
vcvtdq2pd
pop
jecxz
cltd
fwait
rcrb
inc
jb
adc
mov
in
stos
mov
mov
jno
sub
pop
aad
push
sti
cltd
xlat
outsl
mov
jno
inc
adc
leave
lahf
outsl
js
loopne
adc
mov
inc
insb
jno
movsl
cmp
fcompl
ljmp
add
lea
dec
or
pop
mov
or
sub
pushf
call
sbb
fisttpll
mov
pop
push
rcll
mov
push
mov
push
aad
sbb
popa
in
stc
lods
adc
jg
stos
jmp
push
cli
test
in
inc
gs
mov
or
lods
fsubl
dec
arpl
cmp
aaa
inc
sbb
insl
lock
mov
pop
add
sub
xor
es
mov
dec
add
inc
ds
pop
arpl
cli
leave
mov
inc
cltd
mov
mov
mov
jae
mov
add
cmp
stc
sub
enter
mov
es
jns
inc
and
add
ja
push
jbe
dec
jmp
repz
lret
adc
push
ss
icebp
mov
inc
out
fwait
xchg
mov
fistpll
test
lea
shrb
dec
cmp
ds
lock
mov
add
rcll
imulb
syscall
les
push
mov
mov
shll
add
inc
xchg
out
cmp
mov
fldl
push
xlat
sbb
pop
jb
shlb
push
out
lods
sbb
mov
dec
inc
push
jmp
dec
pop
repz
xchg
insl
stos
sbb
and
repz
xor
sti
fistpl
mov
sbbb
lock
lea
cmp
adcb
jl
sbb
pop
mov
pop
mov
and
popa
push
das
aaa
pop
add
nop
mov
jecxz
pop
sub
xor
test
xor
call
or
loope
out
and
subb
jnp
mov
movsb
jmp
mov
cmc
mov
leave
or
and
lret
jo
pop
push
jns
push
jp
fs
xor
add
mov
xchg
jmp
sbb
sti
jp
mov
push
sub
mov
pop
stos
int
fwait
push
mov
mov
rolb
mov
fsubr
sbb
cmpsb
nop
push
lods
and
sub
jecxz
xorl
outsb
lret
sub
mov
cmpb
cld
daa
xor
pop
sbb
clc
adc
stc
out
fisubrl
into
pop
repnz
loopne
scas
jno
out
sbb
imul
aaa
push
cmpsb
negl
pop
mov
mov
loop
mov
cld
mov
cs
scas
pop
ss
adc
sub
pop
into
out
xchg
dec
bound
push
dec
dec
jg
jne
daa
or
xlat
cld
or
push
mov
mov
les
dec
push
sub
popl
scas
orl
dec
sub
lcall
inc
or
lea
std
jo
repz
cmp
arpl
sub
in
fs
sub
cwtl
mov
cli
pusha
push
dec
daa
sub
mov
addr16
mov
push
aaa
and
sbbl
pop
or
xchg
inc
add
ljmp
cmp
pushf
outsl
push
shr
negl
pop
cmp
mov
imul
punpckhbw
sarl
jecxz
mov
loopne
and
jecxz
nop
push
gs
xchg
xor
es
mov
ret
movsl
or
addr16
sbbb
add
pop
in
test
and
fwait
lods
jp
sub
mov
jg
sbb
xchg
and
lahf
lds
rcrb
stos
inc
sbb
cmp
scas
stc
mov
cmc
shl
inc
xchg
sub
dec
cmpsl
fidivs
cld
sbb
out
inc
mov
jecxz
fs
xlat
popa
push
aad
cli
sahf
xor
or
dec
gs
test
lods
sbb
rolb
aaa
sbb
or
call
out
jo
push
xchg
movsl
sbbl
mov
cli
shrb
inc
into
das
data16
adc
xor
mov
jno
and
data16
ss
adc
sbb
test
lahf
notb
sarb
ds
lea
inc
adc
pop
movsl
mov
mov
pop
sbb
xchg
out
iret
inc
push
jns
repnz
sti
ret
rcll
not
std
andb
inc
fidivrl
jb
or
push
jb
mov
push
jecxz
fsubrs
fdivp
mov
divl
cmpl
jle
notb
xchg
add
loope
cs
pop
aam
xor
insb
lret
bound
jg
jp
push
stc
mov
mov
mov
or
and
and
mov
sub
nop
push
or
imul
jp
jl
sub
pop
dec
rcrb
xchg
mov
testl
clc
cmc
mov
mov
pop
imul
and
dec
inc
fnstcw
or
leave
mov
mov
lods
jnp
sbb
cmp
ss
in
flds
pop
mov
push
scas
and
mov
pop
mov
test
subl
out
push
mov
aad
cli
insb
add
xchg
sbb
ds
fcompl
in
scas
shlb
fldenv
ds
roll
pop
ljmp
in
sbb
cmp
adc
mov
inc
sub
add
jl
fmuls
pop
shrb
cmc
adc
or
fs
sub
add
push
scas
test
call
inc
push
jb
xor
mov
sbb
pushf
pop
fldcw
stc
test
xchg
mov
push
jl
aaa
hlt
mov
xor
out
insb
inc
nop
std
cld
dec
imul
outsb
xorl
push
scas
test
lods
subl
cmpsl
mov
int3
xchg
xchg
in
pusha
fistpl
icebp
es
push
cld
pop
mov
aad
inc
ret
stos
lods
lcall
ret
pop
in
das
in
out
lahf
inc
loop
add
popa
add
mov
pop
mov
ficoms
mov
pop
add
fidivrl
adc
add
push
imul
inc
sti
or
hlt
or
cmp
pop
mov
cmc
mov
andb
ret
imul
sub
mov
cmpsl
or
fistpl
or
stos
ja
js
lret
jp
jae
aas
pop
sub
fdivrs
repnz
and
adc
xchg
and
dec
in
push
sbb
pop
push
jno
push
rcrb
xor
mov
xor
push
xchg
xlat
jle
leave
or
dec
movsl
cmp
push
stc
icebp
push
out
test
shl
adc
pop
pop
sub
dec
dec
cmpb
in
test
xchg
mov
outsl
shrb
mov
jecxz
and
dec
fiadds
cltd
std
cld
pop
jecxz
jge
mov
les
or
mov
jno
mov
jmp
pop
sbbb
adc
ss
lret
cltd
push
xor
push
dec
and
push
push
push
hlt
ret
cmp
push
stc
je
jb
pop
movsb
out
es
add
push
leave
movsb
jp
or
xor
jae
push
movsl
arpl
push
mov
icebp
push
xor
test
jecxz
lds
pop
loopne
cli
mov
sbbb
jbe
clc
push
push
out
insb
ret
test
sub
insb
xlat
pop
and
cld
scas
lds
jne
inc
push
loopne
shl
mov
sub
mov
dec
hlt
test
out
sub
mov
out
jnp
inc
fbld
ret
pop
loop
sub
or
lock
loopne
sub
xor
decb
mov
and
nop
stos
adc
or
cmp
hlt
mov
push
inc
test
in
lods
sahf
xor
cs
mov
imul
dec
pushf
scas
loop
or
out
imul
adc
jae
pop
or
mov
cltd
jge
lret
mov
inc
outsl
mov
push
fnstenv
inc
sti
push
adc
bound
pop
push
inc
fstps
adc
dec
nop
shr
shlb
xor
dec
and
jne
cmp
into
pop
idivb
imul
mov
subl
rcrl
cmc
in
mov
lds
xor
pop
mov
inc
or
mov
into
xchg
lods
repnz
jbe
aad
xchg
test
and
inc
scas
sti
inc
loop
dec
fnstsw
stos
cmp
fsubl
inc
pushf
push
test
ja
cs
pause
push
ja
xchg
or
mov
xchg
mov
sti
push
test
push
repz
sub
dec
fdivr
sub
pushf
cli
pop
testl
cs
shll
in
xchg
pop
mov
inc
xor
mov
xchg
jp
bound
js
xor
sub
fiadds
cli
inc
lcall
in
fs
mov
mov
addr16
fcompl
test
cmpsb
lods
xchg
imul
in
mov
xchg
popf
int3
imul
fstps
rorb
lret
jb
cmc
jns
fcompp
add
lret
inc
imul
shrb
imul
xchg
stc
jb
xorl
bswap
xor
push
inc
bound
stc
lret
imul
add
inc
xlat
jb
xchg
popf
push
xchg
pop
call
cmp
in
sub
mov
icebp
mov
fs
mov
fistpll
rorb
pop
loope
pop
ficoml
lea
scas
inc
sub
int
jnp
jae
daa
inc
ret
pop
dec
and
insb
loope
loopne
jp
sbb
cmpsl
fstps
xor
hlt
adc
jecxz
mov
ds
lret
cmp
lea
fs
pop
test
rclb
lahf
in
aad
mov
add
scas
add
sub
popf
stc
add
inc
push
inc
aam
ljmp
sbb
adc
imul
insl
mov
mov
das
mov
push
stc
cmp
jbe
das
lock
cmc
ljmp
xor
jmp
fadds
mov
jo
shlb
add
test
mov
inc
add
mov
pop
gs
ficomps
sub
cmc
pop
scas
out
xor
shrl
data16
iret
and
cli
sbbl
push
fbstp
or
nop
jno
xchg
pop
aad
loop
sbbb
aad
movsb
repnz
mulb
fcmovne
int
push
cld
test
std
popa
fidivrs
pop
mov
mov
push
les
xchg
mov
insl
push
ss
mov
js
es
xchg
dec
std
into
dec
mull
lahf
fcomip
inc
js
adc
outsl
stos
cmp
push
mov
push
outsl
and
push
nop
aad
out
sub
xchg
add
mov
mov
leave
ds
popa
xchg
mov
addr16
out
cmp
mov
mov
push
inc
xchg
subb
cmpsl
pop
leave
pop
aaa
movsb
pop
aaa
and
and
pop
fistpl
lock
nop
cs
les
fs
and
xchg
adc
or
pop
xchg
sub
sbb
mov
sarb
push
fimuls
inc
fcomi
jl
std
xchg
fistps
lods
or
cmp
mov
out
scas
arpl
not
insl
jg
mov
sti
sub
aaa
push
mov
add
fidivrs
xchg
adc
mov
daa
outsl
lret
ret
rclb
arpl
int3
icebp
out
xor
jno
dec
and
fldcw
push
mov
or
testb
mov
fwait
in
mov
add
dec
fisubrs
test
mov
jecxz
add
sbb
lret
sti
test
dec
lret
int
fistpll
push
imul
cmpsb
cmp
test
push
rcrl
call
mov
xchg
pop
out
pop
push
sbb
pop
sbb
dec
aaa
adc
mov
lahf
pop
ds
add
jmp
or
mov
arpl
stos
lcall
push
mov
in
mov
and
xor
jp
xchg
pop
popf
sbbb
popf
lods
ja
and
pop
iret
fwait
mov
js
jmp
push
jge
xchg
dec
call
mov
fsub
and
sub
pushf
std
jns
enter
mov
xchg
mov
stc
cmp
pop
pop
call
ds
out
popa
hlt
es
aad
std
or
fisttpl
gs
stc
cli
sti
jbe
daa
and
mov
aas
ljmp
fcomps
loope
xchg
xor
mov
cld
mov
pop
in
xor
fdivrl
inc
mov
xor
dec
icebp
push
fldcw
pop
test
test
xchg
xchg
daa
mov
int
idivl
mov
inc
mov
cwtl
jne
xchg
cmpsl
mov
in
cmpl
mov
fistl
xchg
bound
mov
inc
xchg
dec
lahf
sarb
iret
daa
xor
mov
inc
push
outsb
and
loopne
test
dec
hlt
pop
or
jmp
push
movsb
pop
add
jb
adc
jb
sbb
mov
js
sub
bndstx
pop
add
nop
push
out
ret
imul
or
jb
jns
inc
jp
ja
call
in
push
lcall
adc
cmp
repnz
subl
hlt
out
pop
cmpsl
or
ljmp
sbb
xor
cmpb
dec
cmp
cmp
jecxz
lods
in
scas
fcoml
aam
aas
fwait
xchg
dec
in
ret
mov
out
imul
mov
mov
int
jecxz
mov
inc
fstl
cmp
fisttpl
rolb
inc
push
andb
push
jne
xchg
popa
cmpsb
loop
push
adc
out
push
push
push
or
mov
mov
sub
lock
mov
cld
lcall
cwtl
push
fs
je
cmpsl
cmp
gs
adc
add
repnz
les
adcl
in
mov
aaa
iret
sub
leave
leave
cmp
sahf
popa
ss
insb
mov
test
out
mov
aas
dec
jmp
sbb
loope
sub
push
fwait
mov
mov
push
or
jns
sub
sub
xchg
rorb
cs
dec
jecxz
push
stc
cmp
push
mov
pop
int
into
lret
pop
out
jecxz
inc
les
rcr
sahf
insb
jmp
loopne
mov
dec
cltd
mov
roll
imul
ja
ret
test
sub
sub
xchg
mov
dec
sub
inc
jg
outsl
arpl
lods
insb
adc
dec
mov
xchg
cs
leave
cltd
pop
pop
mov
in
push
in
repnz
lcall
loopne
jnp
icebp
mov
mov
fimuls
add
xor
inc
js
sti
dec
pop
mov
xor
push
jbe
imul
rcll
in
adc
push
adc
testl
ss
xor
or
popa
fadd
sbb
bound
pop
dec
dec
shlb
xor
cmp
lcall
fcoms
lock
test
adc
jae
lods
pop
sub
cmc
into
cmpsb
ja
mov
sub
sahf
or
popa
mov
pop
push
js
test
jbe
js
jae
pop
testl
dec
pushf
mov
shll
je
xor
shrb
mov
lock
sub
mov
aam
adc
mov
clc
jl
adc
mov
xor
and
data16
lret
inc
cs
leave
mov
pop
sub
pop
mov
cmpps
xchg
movsl
cmp
or
sbb
arpl
inc
subb
xchg
jl
xchg
mov
xchg
and
adc
insl
hlt
stos
mov
cmp
lahf
and
int
movsb
cmpsl
xor
mov
iret
cmpsb
les
ja
xor
rcrl
std
push
gs
pop
inc
pop
mov
xorb
push
sbb
sahf
sbb
and
mov
and
xor
jecxz
mov
and
jne
pop
aaa
jbe
mov
int3
mov
imul
mov
and
mov
into
xchg
inc
add
mov
push
mov
stos
inc
jp
inc
lds
dec
push
add
sbb
loopne
adc
and
push
mov
les
push
jg
lahf
out
adc
testl
xor
std
and
dec
fmulp
jg
inc
jecxz
sbb
sbb
push
add
xor
cmp
insl
mov
mov
out
rcr
mov
sahf
mov
push
mov
mull
pop
decl
mov
outsb
insl
mov
mov
jns
mov
dec
notb
xor
repnz
cli
dec
fists
aad
lret
negl
pop
repz
adc
das
out
call
mov
rclb
add
movsl
push
and
cmpsl
xor
xor
les
jg
xchg
ficoml
lcall
inc
cltd
push
push
lret
bound
iret
inc
pop
sbb
mov
or
shll
int3
ja
mov
mov
push
je
push
addr16
push
jne
pop
insl
and
mov
pop
push
cmp
imul
ret
fnsave
lret
pop
adc
outsb
inc
iret
and
xchg
outsb
push
popa
addr16
rcrl
xchg
push
insl
enter
clc
jne
push
inc
notb
imul
jns
cs
repnz
ss
jge
cli
adc
mov
lret
lret
inc
xlat
out
xchg
fimuls
popa
aad
jo
in
fbld
repnz
aas
aas
push
add
into
aaa
shr
out
sbb
xchg
pop
setnp
mov
je
and
ficoms
js
inc
push
shlb
scas
insl
add
sub
fdecstp
inc
sbbb
add
orl
push
ljmp
jae
push
movsl
daa
stc
nop
in
inc
cmp
sbb
mov
inc
rorl
repnz
shrl
addr16
jb
cwtl
mov
pusha
mov
mov
push
montmul
cmpsb
addl
and
lods
mov
ret
mov
adc
cld
out
cmpsb
xchg
xor
ss
scas
cmp
pop
jg
lock
sahf
mov
shr
jno
out
test
jbe
cmp
or
fldcw
mov
mov
mov
adc
add
test
in
cmp
push
jmp
fcmovnu
outsl
aam
and
clc
adc
mov
fs
sbb
repz
dec
adcb
cmp
arpl
jae
inc
pop
shll
adc
rolb
and
leave
mov
enter
leave
std
psubb
xchg
fiadds
movsl
lds
inc
cmp
push
das
enter
push
mov
cmpsl
sub
loopne
push
push
pusha
insl
inc
jb
push
dec
pushf
test
pop
xlat
fnsave
repnz
pop
std
xchg
shll
sbb
test
sub
xchg
sbb
sub
pop
mov
sbb
pop
lea
push
mov
inc
addl
cmpsb
xor
int3
lret
xchg
sub
dec
and
push
stos
adc
push
das
xor
movsb
cwtl
std
loopne
lds
cmc
in
pop
mov
mov
pop
cmp
sub
lods
fstpl
sub
push
xor
cmp
pop
push
xchg
dec
xchg
in
inc
jecxz
lock
dec
add
enter
cmp
outsl
ret
les
fdivrs
push
decb
cmp
fidivrl
lods
neg
pandn
pop
mov
xlat
xchg
pop
jbe
pop
lea
call
aas
or
dec
cmpsb
jnp
xlat
insl
jae
or
mov
lcall
push
sbbl
dec
loop
inc
lret
pop
sbb
inc
push
in
dec
nop
or
cmp
cmp
dec
dec
mov
jg
bound
mov
mov
mov
sahf
gs
or
pop
pop
and
cmp
pusha
mov
stc
hlt
mov
test
adc
mov
jg
or
xchg
mov
cs
repnz
mov
imul
enter
das
out
mov
xchg
das
loope
ljmp
and
xchg
inc
fldcw
shll
les
inc
adcl
adcl
dec
dec
sahf
jne
xchg
arpl
push
ret
cld
xchg
cmc
js
lea
pop
lods
dec
data16
outsl
xor
lahf
mov
push
inc
jno
andl
adc
sub
dec
jbe
pop
mov
push
icebp
add
in
dec
push
sub
fmull
jno
cmp
popl
aaa
sub
ja
xor
and
loope
mov
test
pop
dec
arpl
or
lock
jle
adc
lcall
and
push
bound
jae
mull
pop
and
cmpl
inc
dec
mov
shrb
lock
cmp
in
push
jl
dec
sub
dec
rcl
stos
arpl
into
cmpb
lcall
or
inc
mov
inc
dec
mov
add
ljmp
jb
daa
test
jne
stc
rorl
xlat
fs
je
mov
insl
xchg
sbbb
xor
sub
xchg
pop
sbb
dec
cmp
mov
mov
or
or
jmp
sub
scas
bnd
dec
out
stos
mov
in
xchg
fiaddl
scas
jno
andb
mov
cltd
jns
dec
scas
aad
cltd
pusha
mov
cmp
dec
data16
xchg
test
mov
mov
dec
pop
jo
out
mov
les
stc
fisubl
adc
popl
rclb
cmpsl
movsl
movsl
dec
mov
and
bound
mov
mov
jae
mov
sbb
xchg
pop
xor
fstps
pop
or
mov
movsb
pop
adcl
popf
mov
js
iret
ret
or
ss
inc
fsubrl
pop
mov
mov
cld
test
ret
push
mov
mov
adc
sbb
jnp
adc
sti
pusha
shrl
cmp
fs
add
aas
pop
and
jl
test
pop
push
pusha
add
out
xor
inc
cmpsl
cmc
cmc
ljmp
repz
add
add
pop
mov
gs
xchg
movzbl
pusha
std
push
push
stos
cld
outsl
mov
faddp
int3
jle
and
adc
mov
scas
push
mov
cmpsb
jge
xchg
jecxz
xchg
cmc
mov
jecxz
cmp
sub
push
sarb
std
adc
idivb
or
fistpl
add
push
cld
ljmp
xchg
inc
fs
call
mov
cmp
idivl
enter
imul
jmp
or
or
stc
pop
sbb
stos
push
jge
jo
mov
cmp
gs
mov
call
imull
enter
jg
aas
or
mov
mov
loop
shlb
or
aas
imul
jne
dec
mov
jg
sub
fisubl
int3
and
test
lods
test
aas
jmp
in
and
in
lds
jl
adcb
or
mov
sub
pop
fildll
repz
mov
repz
mov
mov
insb
int3
and
call
out
jmp
in
push
leave
and
jp
addb
or
inc
mov
add
xchg
inc
xchg
jl
in
inc
js
push
repz
or
sarb
arpl
aad
or
mov
cmp
in
adc
jmp
push
adc
sbb
lea
mov
js
sub
shrl
data16
jne
out
jl
push
cli
mov
out
cwtl
and
push
adc
sbb
xchg
dec
outsb
stc
cmp
jle
adc
fwait
jnp
nop
test
jne
cs
inc
add
es
sarl
mov
inc
xchg
adc
xor
mov
inc
adc
and
bound
add
mov
dec
mov
dec
mov
sbb
orb
aas
mov
push
sub
add
push
in
lea
adc
arpl
out
inc
push
sahf
inc
lcall
and
out
cmpsb
jnp
xchg
sbbl
loope
cmp
pusha
pop
mov
rcrw
ret
push
mov
jp
push
xchg
insb
movsb
mov
repz
std
push
popa
mov
add
or
and
mov
sbbl
mov
cmp
test
adc
xor
sbb
fwait
jo
mov
dec
roll
sub
ss
test
cli
cmp
push
rorl
loopne
mov
imul
addr16
sub
cmpsb
into
and
pop
stos
mov
arpl
ret
out
jae
popa
clc
mov
push
or
push
jg
push
ret
mov
lods
push
xchg
outsb
sbb
xchg
jg
cmpsl
adc
pushf
xchg
incl
push
mov
mov
or
pop
int3
jle
mov
push
add
cld
ret
inc
movsb
lock
sbb
inc
sahf
out
shlb
pop
dec
pop
lock
pop
sub
ja
enter
pushf
jne
bound
inc
icebp
mov
jae
mov
stc
sub
jmp
sbbl
imul
add
sub
mov
jp
sub
add
out
xchg
push
mov
mov
jb
cmp
daa
mov
mov
rolb
sub
loopne
je
loope
xor
xor
sti
xchg
nop
icebp
insb
ss
sbbb
push
pop
inc
icebp
fistps
sub
adc
mov
mov
xor
adc
inc
cmc
cmp
testl
lcall
sbb
scas
insb
shlb
pop
sub
sub
push
jmp
gs
stc
outsb
lds
movsl
mov
push
lcall
jae
and
add
push
cld
and
mov
mov
movsb
mov
aad
movsb
shrl
ret
push
je
and
loopne
inc
ja
cld
loop
sbbb
sub
ds
testb
imul
movsb
pop
push
xchg
pushl
outsl
pop
scas
adc
ss
xor
mov
xchg
pop
cmpsb
or
out
bound
fdivrs
dec
mov
jle
mov
aas
jnp
dec
and
mov
xor
addr16
xor
jae
inc
xor
iret
loopne
pushf
cmc
add
dec
idivl
ljmp
call
mov
xor
pop
xchg
test
sub
insb
pop
and
insb
jl
push
leave
xlat
pop
and
in
je
lds
stos
mov
data16
stos
mov
jge
out
xchg
stc
jl
fisubrl
inc
xor
push
cmp
bound
scas
adc
sbb
rol
xchg
pop
mov
test
stos
jecxz
xor
push
add
inc
fdivs
enter
shrl
popa
hlt
aas
dec
pop
insb
mov
cmpsb
xlat
fxch
gs
adc
std
inc
daa
in
sbbl
adc
jnp
mov
inc
mov
pushf
stc
cmp
ljmp
int
add
xor
jns
pop
nop
inc
pop
out
mov
xchg
lahf
sub
mov
and
cmpsb
jmp
rcl
xchg
or
outsl
cmp
popf
inc
jae
aas
sub
popf
sti
outsl
insl
mov
loope
test
cmpsl
cmp
pop
insb
jnp
add
jecxz
mov
les
ss
aas
ss
pop
lods
fcomps
sub
int
outsb
jnp
cmp
fsubr
test
push
mov
popa
sub
xchg
test
push
in
imul
xor
push
shl
push
sbb
cmp
daa
push
sahf
das
adc
pop
xchg
jl
mov
fdivs
test
sbb
or
mov
and
insb
ds
sahf
sub
stos
jl
xchg
sub
lods
inc
mov
sbb
lds
into
xor
pop
cmp
dec
bound
xor
add
shll
aaa
stos
psubusw
or
in
pusha
scas
mov
pushl
mov
mov
mov
push
popf
add
or
mov
loopne
cwtl
lcall
into
scas
push
pushf
cmc
push
push
test
mov
movsl
and
cmp
dec
jg
hlt
xor
pop
cmp
add
ret
dec
mov
fsubs
test
xchg
inc
test
repnz
clc
movsl
dec
test
add
sti
ret
pop
jbe
cwtl
mov
js
lock
imul
pop
mov
mov
cpuid
xor
sar
out
pop
subb
out
rcl
out
add
in
icebp
inc
xor
testb
into
movsl
cmp
test
ljmp
xor
popf
lds
pop
std
loop
mov
dec
mov
cs
inc
xchg
je
inc
in
dec
loop
arpl
mov
mov
add
push
fidivrs
pusha
aas
movsw
fsubr
aas
mov
arpl
cmp
xchg
sub
fwait
dec
mov
add
add
aad
sub
test
aas
lahf
push
and
imul
and
fucomp
push
lret
jb
xchg
out
xchg
insb
mov
aam
inc
popa
xchg
adc
call
mov
sbb
mov
pop
daa
insb
in
mov
dec
jbe
mov
pop
mov
pop
loopne
mov
sbb
sub
je
cmpb
xor
push
clc
lea
push
dec
enter
and
mov
fucomp
mov
mov
mov
subb
mov
mov
ja
icebp
pop
sub
push
xchg
icebp
sub
test
adc
cs
jmp
and
cli
lock
lods
xchg
and
dec
or
pushf
mov
movsl
scas
js
arpl
mov
xchg
push
std
out
ret
cmp
imul
jmp
pop
js
xor
mov
sbb
sbb
xchg
and
push
fdivr
push
data16
mov
int3
add
cmp
inc
and
pop
adcl
test
negb
inc
outsl
dec
or
cmc
adc
dec
repz
test
pop
or
mov
test
jo
arpl
adcb
sub
ret
pop
sub
pop
xor
push
ljmp
jo
pop
mov
push
mov
pop
inc
pop
lock
lds
ja
repz
jle
testl
pop
lret
pop
cwtl
mov
mov
sarl
daa
adc
mov
add
xchg
hlt
loopne
jo
mov
fisttps
push
xor
lods
adc
sub
jg
mov
inc
mov
lea
jo
mov
sahf
push
xor
push
xor
movsb
sti
adc
sub
outsl
ret
dec
insb
in
push
insl
xor
sahf
pop
push
pop
lods
cmp
dec
data16
cs
out
add
scas
andl
loope
dec
testl
jmp
je
push
mov
xor
arpl
push
dec
jae
imul
sub
mov
ss
jl
call
jg
jge
test
lds
movsb
dec
mov
rcll
ss
lret
and
loop
add
sub
jne
or
and
xchg
inc
ljmp
pop
rcl
rcll
mov
cmp
shr
sub
jmp
test
cmp
fstps
inc
testl
sbb
jle
and
scas
in
test
sub
and
mov
fcmovb
jnp
pop
in
rol
shl
sub
inc
adc
das
cmp
fimull
cltd
jp
mov
scas
xorb
jnp
adc
jno
repnz
push
test
scas
sub
les
hlt
add
fadds
or
iret
mov
arpl
lock
xchg
push
stos
outsl
daa
mov
pop
add
pop
cmp
jl
jmp
mov
cmc
stos
adc
clc
in
pop
jbe
lods
push
add
adc
xchg
daa
out
push
or
lret
cwtl
cmp
daa
push
cmp
lods
jmp
les
es
add
jle
xor
mov
sahf
xor
jno
mov
test
jg
push
adc
cmp
sbb
mov
ljmp
dec
out
adc
pushl
adc
xor
arpl
pushf
inc
sub
mov
mov
ss
cmpsb
call
test
xchg
mov
pop
aaa
pusha
loop
inc
xchg
jnp
movsb
cmp
xlat
ret
cmc
add
imul
sub
pop
mov
jge
cltd
je
pavgw
sbb
lock
fsubl
repnz
rorb
cwtl
mov
adc
daa
lcall
lahf
dec
cwtl
inc
xor
arpl
and
pop
fidivs
repz
popa
or
mov
pop
jp
mov
ja
inc
jecxz
or
lcall
jmp
cmp
push
arpl
add
mov
ljmp
popf
imull
xchg
mov
xlat
insb
call
jno
out
pusha
add
bound
mov
ja
xor
xadd
sbb
repz
or
clc
and
movsb
test
sub
xor
mov
mov
fildl
iret
pop
mov
or
mov
jns
inc
lret
mov
push
mov
sti
pop
stc
lret
cwtl
cmpsl
pop
push
dec
xchg
fbstp
push
out
notb
aas
xor
dec
add
xchg
outsb
jmp
test
adc
sub
mov
cmp
lret
pop
xchg
sub
lret
into
test
sub
les
scas
push
int3
gs
dec
and
add
dec
repz
jb
in
cmp
arpl
mov
fcmove
jbe
rorb
mov
das
loope
stc
xchg
lds
jbe
aad
cmp
pop
pop
jne
cmp
pop
pop
xchg
adc
cmp
cmp
mov
out
cli
cmp
movsl
mov
mov
ret
or
lock
fmuls
fsubp
ja
sarl
mov
pop
insl
rolb
lods
sbbl
cmp
lcall
movsb
nop
mov
mov
add
cmp
sub
mov
daa
adc
mov
std
pop
dec
jne
and
pop
push
cld
out
inc
and
shrb
ds
jl
lock
and
xlat
mov
and
inc
mov
aam
sbb
jg
js
lahf
and
sub
sti
push
push
out
push
adc
sub
jne
xor
sub
push
mov
adc
es
pop
sahf
inc
dec
leave
lock
and
adc
cmc
aad
dec
ficomps
dec
sarb
cld
fwait
jmp
lds
mov
adc
aaa
rclb
gs
mov
pop
dec
jns
and
aam
es
adc
jo
mov
pop
arpl
clc
js
in
mov
sub
dec
push
mov
repnz
push
das
jg
sbb
insb
cltd
jmp
hlt
pop
push
lcall
push
cmp
js
jns
jne
fcomps
pusha
mov
sbb
inc
out
dec
push
insb
movsl
es
xor
or
dec
jne
and
mov
jl
fsubl
inc
popf
xchg
and
fdivrp
adc
test
pop
mov
les
notb
fstpl
jbe
enter
into
sbbb
nop
movsl
cs
ss
outsl
push
ds
lret
adc
ss
jno
insl
inc
cld
or
lcall
mov
jecxz
sub
imul
std
mov
jg
jnp
inc
and
inc
int3
js
mov
pushf
push
adc
xchg
lea
add
fbstp
gs
fisubrl
or
out
cmpsb
sahf
pop
fnstenv
pop
repnz
xchg
inc
dec
pusha
or
lods
fsubr
bound
and
sti
mov
les
jl
or
push
data16
sbb
popf
inc
jecxz
lods
addr16
and
loop
es
add
sbbl
sbb
test
dec
push
sahf
pop
aaa
inc
and
mov
cmpsb
inc
stos
sub
mov
mov
pop
add
fldenv
mov
or
inc
jecxz
test
xchg
jle
mov
jo
bound
and
repnz
into
stos
or
xchg
aam
gs
test
cmpsb
add
fimull
loopne
jbe
push
ljmp
jno
loop,pt
bound
push
lods
dec
jb
daa
mov
adc
pop
rorl
mov
mov
adc
mov
sarl
stos
push
and
inc
icebp
call
add
sbb
mov
mov
aam
lahf
clc
rcrb
gs
mov
mov
jns
arpl
outsl
xchg
test
scas
pop
or
jl
pop
pop
popf
xor
cs
pop
jle
mov
dec
lcall
xor
cmpsb
cmp
pop
imul
imul
and
xchg
mov
addr16
inc
fcompl
lret
jbe
xor
and
pop
addl
jge
push
xchg
movsb
dec
test
int3
mov
std
pop
lds
sbb
rorb
insb
fistpll
pop
adc
fldcw
arpl
mov
mov
add
lcall
sbb
fadd
call
mov
scas
aaa
in
adc
inc
sub
push
inc
lret
sti
pop
mov
clc
inc
shrl
fdivrl
dec
mov
jno
jp
dec
pop
mov
mov
push
daa
popf
aaa
pop
xchg
cli
adc
sbb
icebp
insb
aam
outsb
add
add
arpl
aad
mov
lock
adcb
arpl
xor
fidivs
lock
lahf
dec
daa
adc
leave
aam
mov
cwtl
mov
pop
jge
icebp
jnp
inc
cmp
fsubrs
add
cmpsl
adc
jg
int3
push
mov
roll
in
ljmp
addr16
imul
inc
jecxz
aaa
hlt
cld
push
mov
popf
fidivl
push
rcrl
mov
mov
xor
mov
mov
enter
jno
je
fidivs
test
mov
outsb
sbbb
insb
sub
mov
push
or
inc
jne
mov
mov
mov
shlb
xchg
pop
ret
lds
xchg
fildll
loop
ss
xor
xchg
mov
mov
sub
sarl
cmp
repnz
andb
dec
dec
ss
xchg
pop
xor
in
pop
iret
sub
push
jl
leave
lds
jno
dec
out
and
fsubrs
iret
inc
mov
sub
lods
and
add
or
mov
scas
sub
into
lds
lock
fbld
add
cmpsb
adc
sbb
clc
mov
sbbl
xor
mov
inc
xor
pop
je
jnp
loopne
xchg
xchg
and
ret
and
mov
push
int3
push
xchg
cmpsb
adc
cwtl
test
je
and
out
in
out
mov
les
sbb
ss
ljmp
and
xchg
mov
lds
jge
inc
fstp
sbb
xor
sti
fs
outsb
mov
mov
cmp
pop
add
in
les
fdivp
and
fcmovne
pop
scas
jns,pt
pop
stos
push
repz
or
xchg
sub
sahf
rcll
aam
pop
les
hlt
fsubr
lods
dec
mov
mov
cmc
pop
inc
sbb
add
ljmp
mov
push
outsb
arpl
and
push
lock
jno
test
int
and
xor
mov
xchg
mov
jb
and
test
jb
mov
fildll
fisubs
mov
fcomi
cmp
jb
cmp
leave
add
jbe
mov
mov
add
mov
xchg
movsb
inc
push
sahf
xor
inc
enter
xchg
jl
pop
repnz
andl
add
pusha
paddusw
sbb
add
jnp
xchg
or
cmp
cli
pop
mov
push
out
cld
sbb
addl
aaa
xchg
sub
sbb
and
in
scas
aas
lret
push
add
and
xchg
xchg
inc
lret
mov
jp
mov
bound
mov
stc
nop
pop
push
cmp
fbld
loope
cld
test
jl
jns
mov
testb
mov
shrl
outsl
je
dec
fimull
dec
andb
xor
xor
scas
mov
mov
jno
pusha
pushf
cli
popa
dec
mov
sti
mov
push
xorb
sbbb
cmp
mov
lock
jo
imul
pop
jmp
dec
fcomps
fwait
and
movsb
fcomps
fiadds
fwait
xor
movsb
mov
iret
and
fldln2
sar
lcall
xor
out
mov
sub
mov
in
aad
jbe
outsl
mov
arpl
push
in
dec
loope
jbe
push
sub
shlb
hlt
xchg
xor
pushf
push
jbe
pop
testb
xchg
cmp
jge
leave
pop
xor
or
xor
scas
xchg
cmpl
bound
mov
mov
lods
jg
lods
sub
xchg
hlt
imul
repz
sbb
into
and
pop
punpcklbw
test
sub
arpl
test
mov
repz
bound
aas
les
mov
and
stc
inc
sbbl
mov
lcall
imul
xor
out
subb
or
andl
mov
movsb
inc
sahf
out
xor
cmp
pop
push
out
mov
lahf
daa
jmp
fnstenv
subl
loop
idivl
pop
adc
push
mov
cmp
stc
or
mov
inc
add
xlat
outsb
inc
es
fnsave
cmovbe
xor
js
push
fldl
orl
shl
lock
lds
fs
push
data16
jae
mov
ffree
sub
xlat
push
lcall
loope
pusha
das
adc
lods
jbe
neg
in
stos
adc
fnsave
mov
mov
sbb
aaa
pop
lock
daa
enter
hlt
pop
dec
gs
and
enter
sarb
pop
pop
xchg
sbb
loop
idivb
int
repz
test
dec
lods
xchg
test
sbb
sub
mov
sub
push
leave
bound
dec
cmpsl
clc
fmull
ljmp
mov
cmpsb
lret
out
sbb
or
mov
test
int3
ficompl
pop
cmpb
stos
subl
arpl
lcall
jns
push
cmpsl
icebp
cmp
add
test
inc
cmpsl
dec
cmp
filds
out
dec
stos
inc
push
pop
mov
icebp
pop
mov
rorl
xchg
xchg
cmp
mov
xchg
jne
fs
testb
mov
ja
je
xchg
pop
dec
nop
pop
add
sub
and
subl
inc
and
cmpsl
push
xor
adc
in
push
and
sahf
cmp
popa
inc
pop
es
xchg
dec
mov
vunpcklps
idivl
cmpb
mov
popf
dec
shll
popa
insb
jecxz
or
cmc
mov
sbb
insb
or
pop
fistpll
iret
fnsave
int
mov
sbb
inc
adc
lock
or
push
xlat
jl
cmp
lahf
cmp
cmpsb
xor
js
sub
loop
fld
outsb
inc
mov
aam
add
pusha
xchg
mov
push
mov
cmp
int
popf
stos
inc
mov
dec
or
pusha
repz
xchg
mov
jge
inc
sbb
or
lcall
cmpb
popf
mov
test
std
inc
sub
out
inc
adc
jns
or
xchg
mov
gs
loope
push
sets
insl
jbe
sub
and
cmp
mov
pop
scas
adc
out
mov
jne
xor
push
cmp
lcall
xor
and
jns
loop
pop
sti
sbb
dec
push
in
loope
shlb
mov
hlt
cwtl
adc
push
or
addr16
rcll
sarb
scas
icebp
dec
dec
adc
mov
or
sbb
fwait
pusha
jecxz
sbb
ret
test
pop
jo
std
sub
repz
pusha
inc
or
inc
xor
dec
fdivl
lock
cmp
nop
jnp
inc
or
dec
cmp
xchg
or
sub
xor
cmp
jl
inc
cmp
cmp
insb
add
push
and
lcall
popf
pop
icebp
nop
xor
das
call
pop
popf
sub
cmp
push
jmp
sti
pop
sub
xchg
cs
cwtl
test
cwtl
clc
lcall
cmpsb
cld
push
and
lods
lods
aaa
sub
push
mov
insb
out
and
pop
cmp
outsb
inc
jg
jne
mov
cmp
inc
adc
inc
xor
fsubl
or
imul
int
push
sub
dec
or
add
mov
mov
pop
testb
jg
dec
sub
fcompl
fistl
mov
inc
mov
data16
and
jb
dec
in
out
enter
lcall
fidivrs
lock
inc
add
xchg
mov
leave
inc
sbb
stos
mov
neg
scas
lock
push
cld
inc
cmp
xchg
cs
pop
mov
add
lret
lret
dec
sbb
push
push
out
mov
cld
outsb
cwtl
fnstcw
sbb
pop
adc
test
push
push
inc
aad
data16
insl
sbbb
lds
jns
ret
cs
sub
loop
ret
pop
push
xchg
test
dec
adc
push
sub
xor
daa
push
lea
movsb
leave
xchg
mov
ret
pop
rolb
sbb
ds
xchg
movsb
addr16
pusha
add
xchg
hlt
push
cmp
mov
popa
jg
jle
sbb
pop
andb
das
pop
and
mov
cmp
push
scas
xor
cld
jp
push
lahf
xor
cld
aas
loop
add
popa
mov
inc
sahf
test
fstps
add
sub
and
adc
hlt
pop
lock
sbb
imul
aas
lret
imul
add
push
sbb
sahf
push
cmpsl
pop
xor
jno
cld
pop
push
add
lahf
bnd
sbb
dec
decb
dec
pop
mov
sbb
xchg
inc
insl
cs
mov
dec
lahf
scas
les
fadd
sbb
lahf
dec
shlb
lea
and
in
jo
and
add
jle
mov
scas
pop
out
dec
inc
pop
xchg
out
add
sbb
sub
jmp
add
jl
cmp
push
mov
pop
cmpsl
jmp
sub
jne
lock
mov
loopne
adc
inc
xchg
and
into
mov
pop
aaa
sbb
mov
inc
push
icebp
inc
adc
lea
fimuls
inc
mov
mov
pop
out
fsts
xor
pop
out
test
xchg
rcll
xor
pop
mov
jg
mov
dec
fcmovu
xor
test
adc
inc
out
lret
addr16
dec
push
fwait
aam
pop
les
icebp
jno
out
xchg
je
mov
inc
push
jb
mov
mov
sub
or
inc
cmp
mov
jbe
int
xor
mov
push
pop
cmpsb
aaa
dec
pop
into
dec
xchg
stc
push
insl
sub
dec
outsb
sub
pop
cs
add
push
xor
xor
push
outsl
ret
hlt
nop
cmp
mov
push
mull
xchg
adc
addr16
jg
jge
xor
outsl
mov
push
lret
lret
adc
xor
pop
outsl
adc
fs
je
repnz
jmp
daa
sub
mov
lret
pop
and
adc
cld
shlb
aad
pusha
testl
jle
enter
xor
in
test
push
push
mov
stc
imul
ds
scas
ret
test
or
sbb
aas
subb
mov
dec
ss
fmull
outsb
xchg
fdivl
aam
mov
cmp
mov
loope
jge
pusha
and
mov
test
and
scas
fisttpl
mov
pop
lock
movl
fisttps
jne
push
out
fnstenv
test
andb
sbb
fnstcw
cmp
push
ret
das
mov
sub
push
dec
rclb
add
int3
sub
fnsave
in
pop
inc
scas
cmp
pushf
call
mov
dec
imul
xlat
mov
cltd
add
mov
mov
out
mov
cld
test
dec
testl
cmc
js
fwait
aam
lds
test
push
in
loope
xor
scas
xor
jmp
into
clc
pop
cli
int
mov
and
mov
and
or
push
sub
xchg
sub
in
push
sub
jmp
notb
xor
enter
mov
leave
jl
sub
dec
xchg
adc
es
jno
lea
push
mov
lcall
hlt
loope
iret
adc
lods
mov
jge
jns
in
clc
dec
xor
ja
rcr
cmc
mov
test
inc
or
lret
cmp
data16
in
into
add
and
mov
or
mov
sbb
mov
clc
push
mov
cld
or
movsl
rcrl
ljmp
cld
cmp
xor
shrb
stc
inc
call
lods
imul
dec
mov
inc
adc
scas
inc
sub
push
iret
push
dec
int3
arpl
push
sub
mov
inc
push
xchg
add
addr16
mov
or
add
cmp
sub
mov
mov
stos
fiaddl
stos
dec
dec
or
jnp
out
dec
insb
dec
sub
repz
cmc
jp
jns
mov
test
jl
pop
xchg
sub
pop
add
scas
negb
mov
mov
jp
roll
inc
outsl
cli
pop
xor
jnp
cmpsl
ja
fdivrs
adc
cs
pop
dec
lret
add
jmp
aad
lods
sbb
or
sub
shlb
nop
daa
cltd
out
push
mov
lock
pop
imul
lods
xor
mov
mov
jmp
aam
mov
jns
xor
pop
pop
push
fwait
scas
mov
dec
mov
lahf
shrl
fnstenv
ds
popa
xor
xor
aad
outsb
pop
in
push
in
test
out
popa
shrb
cmpsb
xchg
push
mov
outsb
mov
test
int
pop
outsl
mov
into
xor
ja
je
mov
inc
dec
pop
js
sbb
in
pushf
addl
sub
movsl
imull
insl
push
stc
dec
out
cmp
in
push
out
mov
xchg
mov
ljmp
mov
pushf
add
ret
hlt
dec
pop
std
or
pop
rolb
mov
jae
mov
inc
call
mov
or
insl
adc
jge
cld
push
les
add
mov
movsb
jl
or
ja
es
sbb
ret
in
and
xor
sub
push
pop
or
data16
sub
xor
out
mov
xlat
call
cmpsl
loope
sub
cltd
iret
or
xchg
js
and
ret
cmpsb
out
mov
lea
icebp
repnz
rcll
cmpb
sar
sbb
pop
leave
into
shlb
fwait
cmp
mov
mov
and
inc
ja
xchg
leave
xchg
rcrl
pop
nop
xchg
testb
inc
push
xor
fmul
sbb
push
dec
test
cltd
stos
aad
das
int3
dec
lods
mov
dec
mov
inc
scas
pop
dec
sahf
cmp
cmp
fcmovnu
mov
mov
int3
xor
mov
pusha
scas
in
test
dec
inc
imul
mov
mov
cmp
xchg
push
xchg
mov
int3
loope
sub
mov
fidivs
dec
popa
pop
mov
add
int
popf
cmp
pop
jp
add
sti
fwait
loope
pushf
xchg
inc
xor
pop
sahf
inc
cwtl
inc
jns
js
mov
loop
cmp
cld
in
push
jae
es
xchg
fs
jb
in
sub
cmp
sahf
sbb
pop
dec
pop
pushf
dec
nop
setnp
cwtl
das
or
ss
test
fdivrl
inc
das
cmp
jg
jl
cld
xchg
mov
lcall
push
lcall
test
iret
and
mov
mov
sbb
mov
or
mov
stos
test
lret
cmpsl
icebp
mov
mov
imul
ret
pop
mov
jg
shll
jmp
jge
pop
and
mov
jge
pop
fucomip
dec
loop
add
and
add
stos
inc
push
fildl
cwtl
mov
xor
cld
pop
fucom
jle
and
mov
dec
repnz
movsl
test
inc
jl
jne
test
or
fcmovnu
inc
lds
int
test
dec
cmpsb
cmp
fnstenv
pop
sub
jns,pn
cmp
lcall
loope
lock
xchg
and
dec
cwtl
mov
loopne
mov
shlb
add
xor
mov
out
cmp
mov
aad
jbe
test
sbb
mov
lcall
push
ss
aas
add
fidivl
xor
test
int
jbe
and
sbbb
dec
into
gs
xchg
push
cli
jecxz
outsl
push
das
mov
cmpsl
hlt
fistpl
or
and
pop
inc
dec
in
out
lret
insb
sub
cltd
ss
aad
mov
mov
mov
scas
out
adcb
aad
leave
ret
xor
sub
orl
paddb
je
mov
in
jge
sbb
scas
adc
imull
jle
push
mov
stc
nop
mov
push
outsb
outsb
pop
sub
andb
mov
out
popa
sub
andl
subl
jg
xchg
mov
loope
lock
mov
push
jg
xchg
push
cmp
jne
cmc
psrlq
add
adc
jnp
xchg
and
inc
pop
cmp
frstor
mov
push
xchg
cmpps
mov
hlt
les
int
jnp
mov
sbbl
rcr
inc
out
cwtl
insl
orb
jl
cmc
arpl
sub
mov
fwait
or
es
ja
xor
or
loope
or
imul
jbe
xor
sti
data16
xchg
sbb
push
fs
fwait
outsl
dec
js
xor
imul
push
push
ja
aas
mov
outsb
popa
hlt
out
jmp
imulb
xor
shll
cmovs
inc
or
and
cmp
pop
rcrl
mov
fnstenv
leave
add
pop
sub
int3
fdivrp
sahf
push
xor
pushf
das
dec
out
pop
xlat
sub
push
sbb
lea
cmp
pop
ss
pop
cmpsb
retw
stc
popa
leave
xor
and
cmp
scas
pop
jle
out
mov
jge
or
xchg
dec
sbb
ja
mov
test
stos
and
loopne
bound
aas
xor
xor
mov
cmp
mov
lret
lret
jno
push
push
shrl
push
test
xchg
fs
das
xor
pop
add
cmc
out
mov
adc
mov
xchg
jmp
inc
sbb
jne
ja
lret
and
inc
scas
out
mov
test
std
loop
outsl
jo
imul
adc
add
mov
sub
dec
fcmovnbe
fdiv
mov
pop
cmp
mov
add
loop
ds
outsl
mov
mov
ret
pusha
mov
arpl
outsl
pop
inc
call
inc
mov
shl
out
xchg
imul
xchg
inc
adc
out
and
ds
adc
mov
add
pop
loope
pop
int
and
mov
loop
mov
outsl
push
lods
test
mov
add
js
dec
bound
loope
and
daa
je
mov
adc
or
stos
inc
pop
inc
cmc
push
gs
pop
loop
inc
xor
or
push
mov
sub
bts
add
pop
ja
jno
push
sub
clc
mov
inc
push
stc
cmp
jne
mov
or
add
pop
sub
sbb
gs
lcall
adc
je
gs
xchg
aaa
pop
stos
or
cmpxchg
xor
cmp
jecxz
and
inc
cmp
push
mov
insl
sarb
shrl
int
es
or
mov
shll
fs
sbbl
js
add
lods
insb
xchg
jp
mov
or
iret
push
and
sub
cld
int3
push
xor
jle
cmc
mov
mov
and
call
enter
xchg
sub
pushf
inc
jecxz
jl
mov
outsl
ljmp
fldcw
ret
bound
mov
mov
mov
inc
mov
jp
sahf
in
adc
cwtl
mov
orb
pusha
sti
iret
adc
lret
add
bound
test
inc
std
sbb
inc
js
mov
les
adc
mov
insl
aam
adc
cli
aam
jmp
cmp
loope
push
push
sub
dec
fisttpll
scas
adc
ficoms
jno
or
fwait
pop
lods
inc
pop
testb
jle
roll
pop
insb
loope
sbb
inc
adc
mov
pusha
xchg
sub
subl
cmp
xor
popf
mov
std
pushl
int
push
pop
ja
scas
lods
aaa
sbb
inc
in
mov
inc
inc
or
lret
bound
stos
push
test
inc
xlat
xchg
fs
clc
jle
mov
mov
inc
jg
std
xchg
pop
fidivl
add
xchg
clc
cmp
jnp
pop
dec
inc
cmp
scas
faddp
fdiv
lahf
pop
pusha
sbb
cmpsl
jno
std
push
stos
sahf
addr16
fisubl
inc
pop
dec
aad
std
mov
clc
mov
shl
add
fistpl
rol
inc
fs
loopne
shll
inc
test
push
out
daa
test
cmp
call
repz
xor
xor
xchg
fiadds
in
cmc
mov
lcall
and
aaa
push
inc
stc
fsubrs
aas
push
test
pop
fdiv
lods
and
and
xor
icebp
aaa
into
and
mov
scas
mov
out
ja
xor
dec
movsl
insb
fldt
int
imul
xor
jbe
mov
cmpsl
mov
sbb
call
and
insl
out
stos
pop
cwtl
cmp
in
out
xchg
or
call
mov
jno
mov
push
jecxz
jnp
adc
push
aas
jmp
loopne
jp
mov
add
xchg
sbb
dec
out
push
add
sbb
ss
repnz
in
rclb
or
mov
push
adc
xor
ret
mov
daa
sub
ret
push
mov
mov
addr16
push
cltd
loope
sbb
mov
popf
mov
fsubl
lods
iret
inc
and
in
imul
pop
mov
idivb
lock
rcrb
dec
pop
jnp
dec
pop
bound
mov
inc
mov
inc
test
push
push
aas
add
push
push
repz
and
in
adc
add
lret
inc
and
out
repnz
mov
xchg
xchg
mov
push
cmpsb
push
fs
xchg
mov
pop
out
stc
cmp
inc
movsb
inc
cmp
lock
pop
ds
pop
push
pop
in
lahf
addr16
iretw
add
jg
mov
pushf
dec
mov
or
leave
outsb
push
movsl
je
ret
ljmp
mov
push
push
or
movsl
cmp
fidivs
lea
cmp
xor
mov
or
shll
mov
imulb
out
mov
andl
icebp
and
xchg
testb
loope
testb
insb
adc
lds
test
pop
cmp
imul
ficomps
cmp
mov
push
dec
je
xchg
call
cmp
push
or
fsubr
mov
jb
out
pop
jnp
int
lahf
divl
add
test
push
push
fwait
movsl
mov
or
fidivs
std
inc
iret
push
push
leave
and
sub
or
les
int3
xor
xchg
enter
and
andb
xchg
std
lods
mov
and
shll
and
mov
stos
xchg
push
in
adc
andl
bound
loopne
cltd
out
sbbb
mov
push
outsb
adc
enter
in
insl
push
lret
lcall
cltd
fyl2x
jp
lods
or
mov
sahf
cmp
call
fsubl
and
lds
rcrl
into
jl
sub
pop
sub
xor
inc
mov
fadds
dec
xor
lea
mov
rcrl
push
jle
push
lcall
xor
and
jae
inc
jae
mov
outsl
adc
push
mov
jb
cmp
lods
mov
sub
test
ror
adc
fdivp
xor
mov
cmp
mov
scas
mov
add
sahf
popa
loop
sti
mov
test
imul
aas
sbb
sub
imul
bound
sbb
int3
cld
inc
cmp
outsb
or
sbb
push
or
popa
out
iret
call
or
inc
rolb
push
aad
int3
lcall
in
sub
mov
xchg
jnp
loopne
scas
movsl
inc
push
xlat
adc
and
lods
inc
xchg
push
xchg
sub
ret
or
js
xor
pushf
mov
dec
push
jl
mov
lea
into
add
lods
mov
mov
jae
jb
stos
dec
pop
mov
mov
push
jne
mov
xlat
into
cmp
notl
addr16
dec
dec
lods
mov
fists
or
and
popf
sub
jae
add
xor
xor
sub
mov
loopne
cmp
mov
pusha
shrl
test
ja
push
and
imul
js
cmp
adc
insb
add
xchg
in
stc
adc
repnz
stc
and
inc
push
ficomps
mov
shrb
in
aaa
outsb
aaa
cltd
ret
lret
adc
mov
pop
dec
pop
lret
sti
cmp
adc
les
cmp
jae
in
mov
lds
push
xor
sub
and
cmp
or
cmp
add
sub
shlb
mov
sbb
fistps
cld
adc
lahf
inc
xorl
lods
mov
cmp
test
sarb
imul
push
inc
in
cmp
xor
pop
xchg
lods
sbbl
out
repnz
mov
mov
xor
testl
pop
sbb
clc
enter
int
jg
scas
fnstenv
lret
xchg
lds
shrb
icebp
scas
xchg
bound
add
out
and
mov
xchg
outsl
icebp
nopl
movsl
pushf
popa
sub
in
adc
mov
sahf
jno
loope
cwtl
shlb
std
nop
and
xchg
sbb
sub
inc
sbb
dec
stos
in
stc
ja
mov
sbb
pop
mov
lahf
repz
arpl
mov
push
push
inc
xlat
sub
sub
aas
add
sub
pushf
cmp
or
inc
inc
movsl
or
int
testl
out
jmp
and
aaa
or
mov
mov
lret
dec
xor
jns
in
pushf
or
stc
subb
sahf
xor
or
mov
and
sbb
cmp
sub
add
les
inc
mov
xor
popf
push
out
pop
sti
cmpsl
mov
movswl
or
push
inc
fwait
cmpsl
out
leave
aas
push
aad
lock
mov
cmp
imul
dec
or
orb
mov
mov
aad
jg
jecxz
jecxz
lea
cmp
mov
jbe
add
push
lock
xor
arpl
sbb
mov
and
aam
out
hlt
mov
divl
sar
xchg
and
xchg
stos
inc
ret
add
jns
mov
add
lods
or
pop
cmp
aas
mov
mov
out
adc
and
pop
cmp
pop
and
mov
mov
fildl
pop
push
out
test
sub
shlb
daa
inc
lods
xchg
stos
pop
mov
dec
mov
imul
sub
cli
or
fcom
lods
or
adc
sbb
xor
pop
lock
scas
arpl
jbe
rorb
loopne
sbb
mov
push
divl
push
mov
and
loope
mov
and
shlb
cmc
cmp
sub
push
out
divl
jmp
mov
push
outsl
xchg
dec
and
mov
jne
int3
not
hlt
sarb
jp
xchg
cmc
push
jae
fsubrs
stc
adc
sbb
test
stos
push
cmpsl
xor
pop
frstor
mov
ds
pop
xor
sub
pop
inc
cmpsl
pusha
stc
jge
mov
mov
push
test
aad
mov
pop
xlat
sarb
jp
outsl
stos
pop
cmp
add
je
or
dec
std
adc
and
xor
dec
scas
out
imul
test
sub
ljmp
jno
fiadds
in
push
test
cwtl
jno
xor
lcall
cwtl
xchg
adc
push
pop
xor
sti
sub
js
inc
test
cmp
stc
push
xorl
sbb
jl
call
jbe
inc
ja
sbb
sbb
pop
xor
subl
mov
in
push
xchg
mov
jle
pop
mov
bound
dec
push
mov
xor
inc
add
sti
movsb
add
dec
popf
or
inc
subl
leave
mov
or
adc
inc
cmpsl
fs
push
mov
adc
push
jecxz
push
aad
sahf
arpl
nop
pop
mov
push
insl
mov
insb
test
les
sbb
ds
int
lahf
fndisi(8087
fisubl
cmp
mov
aam
sarw
sbb
jo
inc
push
and
stos
fisubs
mov
shrb
mov
pop
loop
cmp
aaa
in
push
push
cmp
cmpsl
push
repnz
adc
pop
ja
sbbb
ljmp
mov
push
cwtl
loop
adc
or
je
aaa
cmp
pop
pop
adc
es
dec
les
pop
adc
push
int3
xchg
xor
xchg
sub
out
cs
or
sahf
xor
dec
les
xchg
das
push
xchg
jns
arpl
pop
jae
sub
repz
xor
push
xor
mov
sbb
arpl
cwtl
notb
push
mov
popf
pop
test
out
subb
lahf
mov
fsubs
adc
mov
sbb
push
sub
lret
lret
cmpsb
xchg
jae
out
mov
repnz
das
xchg
mov
arpl
cmp
xor
or
or
cmc
xorb
xchg
jbe
mov
inc
loop
in
mov
or
addr16
sub
sbb
mov
ret
xor
xor
jne
les
rcl
or
mov
lods
push
cmp
pop
lds
pushf
push
sub
cmpsl
dec
out
inc
sti
movsb
popa
test
sarl
es
sub
out
add
inc
and
imul
jg
mov
cli
mov
jnp
xor
in
or
insl
es
jae
and
push
mov
ret
lods
and
sbb
and
pop
insb
add
mov
mov
fistpl
sbb
insb
jo
popf
sarl
add
push
fnstcw
repz
fs
les
addr16
scas
inc
cltd
hlt
sub
cwtl
arpl
cld
test
pop
sub
cmpsl
insl
movb
jg
leave
loope
das
or
nop
in
dec
mov
mov
int
shrb
and
js
xor
vmread
pop
sti
push
stos
mov
or
int
fs
jns
sub
pop
leave
cmpsb
in
jno
data16
je
aad
and
dec
fs
add
fldenv
lret
pop
test
cmp
out
jns
daa
test
add
cld
xchg
jle
in
jp
dec
and
or
adc
les
inc
in
imul
iret
ja
mov
inc
push
pop
scas
jno
mov
inc
test
gs
mov
stos
sbb
icebp
arpl
out
gs
std
cmp
int
nop
je
leave
and
dec
pushw
sbb
mov
testl
sub
add
insb
mov
lea
mov
adc
inc
sbbb
data16
mov
faddl
push
or
push
in
aaa
lods
fnstsw
pop
sub
sub
xor
xchg
mov
dec
cmc
fistpl
arpl
std
cmp
movsl
sub
lcall
jbe
loopne
repz
sub
pop
std
std
testb
daa
fbstp
and
sub
xchg
lret
add
rorl
push
cmp
jle
xchg
shr
add
mov
cmp
mov
lret
fistps
jno
add
lock
repnz
cmp
push
shll
rol
and
mov
mov
jae
adc
popa
sbb
loopne
xchg
cmp
sub
inc
pop
pop
test
push
sbb
idivb
sub
popf
add
xor
outsb
dec
sub
xchg
pusha
mov
cli
mov
or
sarb
stos
test
loop
or
aaa
push
sub
add
xchg
push
sub
lods
sub
fiaddl
lock
jae
dec
in
addb
rorl
fwait
dec
xchg
dec
imul
in
cmp
jle
fmuls
sbb
pop
aam
faddl
mov
addb
les
pop
test
or
sahf
jne
add
cli
loopne
mov
sbb
mov
ret
inc
sbb
push
push
sub
pop
mov
xchg
enter
loop
pop
push
jb
xchg
sbb
fcompl
pop
jmp
jg
jp
sub
jg
add
mov
popa
hlt
rcrb
test
xchg
add
ss
adc
out
jnp
and
fsubr
sub
into
out
jnp
mov
stos
mov
push
jp
and
push
cmp
rcrl
jne
and
int
dec
and
scas
ljmp
daa
push
cwtl
push
adc
ljmp
orb
mov
aad
xor
stos
loope
push
mov
dec
mov
cmp
cs
adc
loope
mov
cmpsl
inc
push
mov
cmp
lret
xor
or
inc
inc
insb
cmp
imul
inc
cmpsl
mov
sub
fnstcw
inc
fcom
add
mov
push
inc
cmpsl
test
and
and
mov
push
movsl
and
lcall
adcl
jl
sbb
adc
jmp
stos
gs
push
and
push
in
mov
xchg
sbb
mov
cmpsl
pop
negb
sub
popf
lock
hlt
cmpsl
mov
pushf
call
mov
xchg
clflush
lods
push
scas
push
xchg
ljmp
jb
ret
or
test
pushf
lret
xorl
lods
inc
jbe
repnz
xlat
cs
add
pop
scas
jne
cs
gs
jae
scas
ficomps
xor
pop
loope
in
into
rcrl
cmp
xchg
faddp
and
or
movsl
mov
pusha
and
popa
dec
mov
scas
das
fmull
and
mov
enter
daa
scas
sahf
sub
lds
jecxz
mov
jnp
inc
cmc
mov
pop
imul
mov
inc
pop
pushf
or
and
pop
fidivl
push
mov
divb
mov
out
push
ljmp
insl
lahf
hlt
adc
in
push
pop
out
cmc
inc
stos
cs
jmp
popa
sub
cmpl
push
cs
movsb
int
and
in
int3
ret
pop
inc
idivb
inc
cmp
orb
cmp
fsubrs
mov
icebp
mov
sti
and
sbb
pop
and
sub
lcall
pcmpgtd
or
and
push
sbb
orl
in
pushf
jo
mov
xchg
inc
bound
push
xchg
mov
aad
adc
pop
dec
pop
sbbl
cltd
call
mov
idiv
sbb
sub
xor
adc
mov
add
inc
inc
test
aaa
jmp
mov
dec
nop
cmp
int3
jbe
mov
jge
mov
data16
push
notl
imul
nop
dec
test
push
xchg
sti
jae
andb
pop
xchg
shrb
add
jae
cmp
fistpl
loope
adc
movsb
loop
int3
outsl
xchg
ds
icebp
jl
ret
ret
xchg
sub
push
insb
or
into
jb
popf
xchg
sub
sub
mov
add
stos
xchg
rcrb
rcrl
mov
rol
fisttps
pop
mov
lock
scas
mov
xchg
or
jb
adc
fnstenv
fnstcw
insb
and
pop
push
jp
mov
cmpsb
mov
repnz
or
cs
insb
mov
je
and
stc
xchg
shl
mov
mov
cld
add
jb
adc
or
iret
dec
sub
and
imul
push
repnz
repnz
mov
test
mov
cli
xchg
repz
xor
nop
inc
push
pop
mov
sti
mov
cmc
mov
mov
out
into
add
out
push
mov
xor
mov
lcall
cmp
popl
sarb
js
arpl
mov
pushl
add
filds
in
rcrb
jmp
push
or
cmp
insl
fs
and
bound
mov
mov
push
loopne
std
add
jle
les
adc
jp
out
shl
ret
loopne
pop
mov
push
pushf
clc
fsub
jp
or
xchg
jp
int
or
pop
mov
push
mov
push
cmpsb
inc
cmp
outsl
xchg
pop
int3
das
inc
aas
mov
xor
xor
test
sub
xchg
jb
dec
leave
inc
add
xor
cltd
jbe
push
fsubr
ja
mov
push
popf
sub
or
in
jbe
jl
mov
mov
lret
or
std
mov
out
cli
out
mov
data16
jns
mov
je
sub
fmull
shll
enter
or
pop
mov
and
sbb
sti
scas
xor
rclb
cmp
add
stc
test
popa
scas
out
test
dec
pop
pop
repz
ret
loop
push
cmp
mov
push
pop
pop
add
repz
sbb
ja
arpl
out
clc
add
push
cmpsb
mov
pop
in
movsl
pop
xor
xor
es
jge
js
cli
cltd
decb
scas
lods
mov
pop
mov
xor
mov
outsb
scas
lahf
cmp
rclb
inc
jmp
addr16
mov
sbb
or
mov
movsb
inc
dec
shl
shlb
lret
addl
stc
and
sub
in
sbb
jns
or
rcl
lods
push
inc
rorb
mov
inc
repnz
add
mov
xchg
mov
lock
add
das
test
sbb
cltd
sbb
jmp
add
insb
cmc
add
and
shrb
cld
push
aam
mov
xchg
fwait
pop
enter
dec
sbb
sahf
and
lahf
stos
mov
inc
loope
jmp
cmpsb
dec
mov
xchg
test
insb
scas
in
push
ret
jno
pop
push
outsl
imul
adc
sub
mov
lcall
lods
fmull
pop
mov
iret
rorb
jb
cmp
mov
loopne
or
fs
mov
lods
repnz
push
lds
jae
dec
int3
movsl
inc
loope
push
loop
cmp
mov
dec
or
popa
hlt
fwait
outsl
mov
pop
leave
arpl
les
mov
aad
sub
mov
xor
add
test
repz
ljmp
xchg
jo
cmpsb
xchg
sub
fwait
cmp
pop
scas
push
pop
adc
fwait
pop
movsbl
mov
loop
shrl
cwtl
push
ret
lcall
mov
xchg
daa
addr16
push
adc
insl
pop
ljmp
sub
mov
mov
mov
bound
sbb
cmc
mov
fwait
stc
je
repnz
xchg
fildl
scas
xchg
jmp
orb
lret
add
push
mov
cmp
mov
and
stos
aaa
stos
das
add
dec
xchg
or
stc
mov
fs
cmp
cld
insl
test
test
stos
adc
les
int
inc
add
int
jle
pusha
testl
jle
jle
inc
push
stos
mov
pop
outsb
jbe
dec
stos
movsb
pusha
not
int3
push
jne
lret
pop
push
mov
push
js
cli
pop
inc
and
jle
dec
lahf
pushw
jns
mov
lcall
dec
dec
movsb
mov
mov
cmp
jnp,pt
shrl
imul
fwait
mov
outsl
jmp
or
shlb
sbb
rol
sbb
stos
enter
frstor
xchg
jne
lcall
sbb
fisttpl
lock
add
mov
or
dec
sbb
ds
js
add
jecxz
xor
cmp
movsl
cmp
mov
mov
add
xchg
xor
jle
sub
and
loope
aas
jecxz
into
bound
push
mov
dec
loope
and
fcmovnbe
test
and
out
in
push
or
nop
loopne
fs
nop
pop
out
adc
cld
jmp
xor
mov
mov
push
adcb
push
cmp
jmp
mov
lods
xchg
or
add
mov
sbb
and
aas
lea
loope
jp
stos
cmc
lds
jbe
insb
js
nop
and
push
divb
mov
in
push
inc
clc
push
cmp
pushf
and
xor
notb
or
mov
jge
loop
mov
xchg
in
arpl
jl
insb
mov
jns
popa
lcall
int
or
inc
loope
mov
rolb
cmc
jg
jle
and
push
mov
cmp
cltd
or
add
gs
xlat
mov
inc
loope
call
popa
push
xlat
push
xorl
sub
dec
mov
arpl
xchg
iret
adc
cmp
sub
mov
sub
or
and
jg
mov
mov
popf
rolb
dec
loopne
pop
mov
cmpsb
sbb
imul
out
xchg
jne
sub
ffree
adcl
pop
fwait
cmpsb
mov
push
imul
insl
inc
xor
sub
out
repz
or
pop
test
or
mov
jb
stc
pop
adc
scas
cmp
sbb
pop
mov
cwtl
insl
mov
inc
in
mov
mov
ss
sub
cmp
lods
ret
test
mov
sub
insl
daa
shlb
rolb
movsl
bound
das
xchg
pop
jne
mov
cmp
sbb
pop
mov
mov
mov
dec
scas
mov
xchg
inc
cmp
fnstenv
mov
push
aam
sarb
add
push
dec
pop
cmp
jle
add
movsl
cmp
out
sarl
cli
sti
movsb
mov
loope
xchg
mov
imulb
ds
push
sti
movsl
push
mov
cmc
sarb
mov
shlb
fwait
inc
or
in
sub
pop
outsb
cmp
mov
sbb
mov
add
das
pop
lcall
ja
mov
ja
mov
push
dec
inc
mov
ja
gs
bound
mov
and
hlt
shlb
pop
sub
pop
repz
repz
sbb
in
xor
aad
pop
pop
inc
pusha
jg
cmp
dec
pop
push
es
inc
loope
fistpll
mov
testb
mov
mov
dec
inc
loope
movsb
leave
push
je
daa
es
outsl
cmc
inc
lods
ret
out
mov
jno
test
xor
push
scas
or
orl
jge
aad
andl
push
mov
imul
mov
cmp
jnp
les
pop
test
mov
leave
test
or
lcall
outsb
test
and
mov
fnstenv
int
ljmp
call
mov
stc
in
addr16
inc
push
cltd
sbb
test
sbb
push
andb
popa
sub
adc
mov
pushf
xor
sbb
nop
push
xchg
mov
dec
mov
jae
add
ja
test
icebp
mov
add
es
test
jmp
lods
ljmp
push
jno
push
cmp
rol
enter
repnz
sbb
aam
imul
inc
xchg
aad
test
mov
fsubrp
sbbl
jl
mov
les
sub
pop
jmp
mov
sti
xchg
shl
add
inc
or
mov
jbe,pn
push
cmp
xchg
mov
xor
pop
sub
push
fwait
in
test
inc
and
or
xor
push
pop
test
rcrb
subb
ss
sub
mov
flds
mov
aam
iret
and
jg
jno
imul
into
fs
mov
flds
in
bound
mov
cmc
mov
mov
push
sub
pop
fs
dec
clc
jl
jecxz
mov
ds
gs
movd
ds
bound
cmpsb
push
stc
fsts
mov
rorl
roll
shl
push
daa
and
in
lods
xor
dec
scas
jns
in
sbb
adc
and
out
ret
stc
or
cmpsb
add
call
in
xlat
jb
loopne
hlt
fcomp
test
pop
icebp
adc
lcall
movsl
mov
pusha
sub
cmpsb
cmp
nop
mov
push
testb
out
pop
scas
pop
mov
outsl
jo
jge
xchg
xor
push
cmpsl
xor
scas
int3
icebp
cmpsb
nop
int
inc
mov
loopne
dec
sbb
xchg
inc
xchg
pop
ja
flds
xchg
mov
and
xchg
pop
push
fcoms
jae
or
lods
cli
test
faddl
mov
iret
mov
shrl
outsl
leave
or
lret
and
push
add
test
fmul
xor
dec
or
pop
mov
call
std
sahf
jne
cmp
push
rcrl
mov
mov
sub
jb
ds
ss
in
or
lret
jo,pn
pop
add
xor
rcrl
ljmp
xor
mov
scas
jb
xlat
scas
cmp
ljmp
shrb
in
jno
mov
loope
inc
fsubl
out
inc
inc
arpl
bound
lods
or
sarl
pop
mov
xor
xor
push
fucomp
push
aad
ret
push
or
pop
iret
loope
pop
cli
xor
test
add
stos
test
outsb
push
fs
sbb
jb
lea
pop
shlb
hlt
movsb
repz
aad
daa
mov
dec
mov
sub
cld
sub
inc
jp
push
in
sbb
gs
or
adc
dec
shrb
jmp
mov
mov
aam
jo
in
iret
fnstsw
shl
stos
ja
sti
test
sub
push
and
mov
jl
out
mov
scas
outsb
fildll
mov
in
cmp
inc
cmp
push
aaa
push
push
fstpl
leave
and
aaa
xlat
shlb
push
pop
dec
stc
out
aad
push
sub
das
std
inc
pop
or
sti
inc
ljmp
pop
cmp
mov
or
das
mov
movsl
xor
in
in
fists
push
and
xorb
ret
enter
shl
fwait
and
in
hlt
jae
push
mov
add
iret
dec
lods
xchg
dec
mov
orl
outsl
sbb
sub
into
jne
jno
iret
sub
sarl
outsb
adc
rolb
test
aaa
pop
rcrb
dec
jle
int
adcb
pop
dec
out
scas
jp
or
movsb
sbb
scas
cs
ja
add
mov
or
sub
and
and
ret
sbb
lods
cmp
sti
jb
out
les
mov
xor
cmp
mov
adc
inc
fisubrs
fdivl
out
sub
dec
mov
pop
out
push
xchg
cli
fiadds
sbb
mov
orl
or
jl
push
inc
lret
out
xor
dec
cmp
scas
loop
in
adc
jb
jo
jbe
insl
xchg
sub
pop
sbb
and
jo
add
lcall
mov
shl
test
jle
cltd
insl
lret
iret
lea
lods
jnp
lahf
adc
or
xchg
sub
and
in
push
lock
lret
sarb
lahf
fwait
mov
insl
mov
push
or
leave
adc
repnz
loopne
and
fdiv
add
mov
scas
testb
sub
in
jmp
ret
fildll
clc
push
call
fisubl
call
in
pushf
mov
aad
ljmp
lcall
push
stos
adc
push
push
lahf
sbb
addl
aas
cmovge
dec
in
jo
push
jle
stos
jbe
cmpsb
pop
call
inc
xchg
xchg
lcall
call
jg
mov
jne
ret
pop
sub
dec
mov
loope
xchg
jecxz
ss
shll
adc
lret
test
popa
cmc
lea
aaa
push
jmp
popf
and
xchg
cmp
and
insb
ljmp
jbe
vpand
mov
mov
loopw
add
add
sbb
add
lcall
int
inc
ret
repz
cmp
push
lahf
adc
mov
std
jmp
pop
mov
pusha
dec
xor
and
sub
add
push
aad
test
mov
and
scas
out
mov
rorl
jmp
stos
inc
add
loop
andl
dec
cmp
sub
jmp
test
cld
imul
bound
ja
xchg
mov
and
inc
sbb
push
mov
pop
lods
inc
push
xchg
and
xor
push
nop
dec
shr
test
loope
lret
loopne
add
xchg
pop
cmp
sub
cmp
xor
mov
enter
imul
mov
push
loopne
adc
ds
and
pop
xlat
repz
cld
outsl
aad
ret
jle
jge
mov
aad
sub
inc
clc
test
lods
pop
mov
arpl
lcall
pop
popa
fsubl
cltd
fsts
shrl
cmp
jbe
push
fnstenv
inc
cltd
sbb
push
inc
sub
sbb
fildll
aam
insl
mov
adc
sub
mov
lahf
dec
mov
fmull
cs
imul
int
scas
test
lods
jb
mov
cmp
div
push
mov
xor
sbb
xor
sbb
adc
push
leave
pop
push
shrb
cmpsb
fs
pop
xchg
cmpsl
dec
in
or
in
pop
sub
js
sub
and
adc
dec
bound
pop
and
xchg
sub
add
aaa
push
add
movsb
bnd
push
push
mov
jbe
fistps
add
mov
loope
pop
out
daa
shlb
nop
push
sub
push
cli
jmp
test
dec
xor
or
cmp
pop
ret
cmp
mov
pop
mov
mov
cmp
mov
and
xor
out
sahf
push
lods
jge
outsl
push
ficomps
cmpsl
jle
mov
clc
sarb
enter
arpl
movsb
dec
repnz
and
jb
add
jnp
and
mov
mov
or
mov
leave
cmc
dec
push
lea
shrl
and
mov
repnz
inc
sti
test
shr
inc
jg
dec
sub
dec
rorl
enter
insl
sub
fwait
jp
mov
rcr
ljmp
inc
data16
in
xchg
jb
xlat
mov
das
movl
jb
aam
std
fsubl
add
sbb
shl
mov
sub
orb
push
out
push
pop
mov
jbe
xchg
loopne
jae
movb
jnp
aam
adc
bnd
push
cmpsl
sbb
leave
mov
xchg
jecxz
cmp
es
jg
shrl
mov
je
ds
cwtl
pop
cwtl
pop
aaa
out
cmc
push
test
cmc
xchg
pop
sub
aad
lahf
push
sbb
xchg
in
leave
jmp
add
pop
jne
inc
cmpsl
cmp
lods
popf
clc
adc
aad
rolb
out
push
sub
fsubrs
leave
mov
jge
fwait
icebp
mov
inc
outsb
inc
fstps
and
mov
inc
hlt
adc
dec
sub
mov
cs
xorb
stos
inc
mov
xor
xchg
enter
pop
jno
pop
mov
bnd
sub
lea
movsl
shll
arpl
or
ja
sbb
sarl
ret
jle
leave
cmpsb
cmp
sub
xchg
sub
sub
pop
cmc
pusha
mov
imul
inc
mov
and
ret
aad
fidivrs
loopne
and
mov
xor
inc
leave
loopne
dec
stos
cmp
jge
or
jae
and
adcb
xchg
xchg
inc
and
iret
out
in
add
scas
ss
or
icebp
mov
xchg
lret
cmpsl
xlat
std
jle
dec
xor
test
popf
call
lret
xchg
sub
negb
and
pop
lds
jb
cmpb
xchg
adc
jns
sbb
rclb
sarb
cltd
lret
pop
xor
out
repnz
cmp
sub
push
inc
lock
xor
js
into
jno
push
in
iret
arpl
sbb
adc
mov
jecxz
rcr
pop
insl
inc
xor
in
mov
fidivrs
dec
ret
adc
insl
pop
popl
test
xchg
insl
loope
sbb
ljmp
fstpl
xchg
sub
fnstenv
and
mov
insb
inc
mov
xchg
les
mov
jae
les
push
les
test
imul
lret
popf
dec
fisttps
lock
jge
xor
push
std
jl
das
and
aam
dec
jge
adc
inc
lods
pop
jne
in
dec
pop
sub
cmp
rol
ficompl
idivb
mov
inc
mov
push
fnstcw
fldt
movsl
cltd
rep
xchg
cmp
popf
lods
and
sbbl
mov
cli
or
fstpl
cmp
adcl
lret
ds
popa
mov
push
ds
pop
mov
pop
insl
das
rorb
xchg
adc
add
lcall
adc
lcall
jno
mov
cmp
pop
pop
dec
add
iret
adc
mov
in
mov
in
mov
xchg
inc
andl
ljmp
rolb
adc
scas
pop
div
setns
sub
loopne
sbb
icebp
cmpsb
cmp
xchg
mov
pop
mov
dec
sub
add
enter
push
or
pop
fwait
scas
jno
js
repz
aas
test
adc
dec
js
cmc
movsl
out
sbb
mov
mov
data16
out
adc
dec
dec
outsb
sbb
mov
data16
insb
add
add
xchg
insb
ljmp
mov
fisubrs
xchg
pushf
call
sarb
mov
stos
inc
or
imul
push
and
and
arpl
inc
or
add
outsl
sbb
shrb
lods
mov
daa
aaa
cli
fldt
data16
cmp
incb
sub
and
cmp
push
stos
cmp
or
xchg
xor
les
addl
xchg
int3
out
testl
ss
jnp
xchg
cmpl
int
es
cli
in
jmp
rcl
test
cs
push
sub
xchg
adc
and
enter
xor
out
mov
lret
mov
bound
ja
rclb
movsl
in
ret
hlt
dec
xchg
mov
lret
mov
jl
cli
xchg
insl
sahf
lahf
sub
push
sbb
mov
out
not
or
popa
mov
mov
jle
and
popf
cmp
pushf
loope
push
and
xchg
notl
stc
cli
arpl
es
or
iret
xchg
add
faddl
movsl
xor
cwtl
clc
lods
pop
mov
cmp
mov
mov
pop
pushf
pop
cmp
pop
out
jbe
xchg
insl
jnp
and
popa
adcb
sbb
push
mov
jle
inc
in
add
ja
imul
inc
aas
shl
pop
sbb
lods
cwtl
xchg
scas
mov
mov
dec
icebp
stos
xchg
out
mov
cmp
jmp
sbb
jnp
adc
push
sub
stos
jne
inc
iret
lret
popa
cmp
rclb
pop
adc
dec
xchg
je
inc
push
mov
cli
push
dec
cmp
ret
imul
adc
shrb
push
push
test
notl
xor
sbb
mull
negl
mov
mov
mov
xorb
cmpl
movsb
movsb
add
cld
dec
adc
fwait
ror
pop
daa
stc
repnz
lea
lret
jnp
lret
push
les
inc
cld
push
add
mov
pushf
fisubl
mov
out
add
pop
in
sbb
loopne
mov
sarb
rep
mov
or
cmp
sub
jb
and
xchg
dec
mov
and
shrl
and
scas
test
sbb
pushf
jmp
ds
push
jl
xchg
or
movsl
cmp
xchg
outsb
jae
jb
icebp
inc
lret
add
out
mov
test
enter
out
or
or
inc
cmp
stc
add
repnz
loop
mov
lcall
sbb
or
inc
sub
js
orb
rclb
mull
mov
pop
ja
in
mov
ret
cmp
jne
sbb
in
movsl
sbb
jecxz
cmpsb
xchg
mov
sbb
cmc
mov
mov
mov
rclb
and
jge
scas
daa
test
icebp
pop
push
fwait
das
cmpb
test
inc
ja
sub
leave
pusha
sbb
jns
pop
out
mov
sbb
sub
sub
sarb
mov
jmp
fxch
insb
mov
sub
cli
ret
hlt
push
mov
ja
jmp
call
jmp
stc
inc
scas
lock
add
es
sar
dec
insb
xchg
and
and
cmpsl
mov
pop
in
cwtl
or
lods
cltd
mov
or
fs
lcall
cwtl
pushl
mov
sbbl
cmpsl
or
add
lcall
jmp
andl
cmpsl
jge
and
push
out
add
cmpb
add
nop
add
pop
rcrb
xchg
jo
xchg
mov
cmp
movsb
movsb
cli
push
popa
adc
clc
test
cmpsl
aas
fcompl
xor
addb
mov
orb
mov
xchg
mov
lret
dec
sub
add
add
addl
orb
push
inc
in
jns
jno
ljmp
mov
push
mov
test
adc
ficomps
ss
push
gs
lods
aas
and
sbb
lret
cmp
xor
nop
dec
loop
sbb
clc
mov
loopne
xlat
lcall
sbb
push
or
ds
and
aad
lods
xor
in
test
aam
xchg
or
adc
mov
or
ljmp
rcll
or
or
jecxz
mov
mov
jmp
rorl
in
lret
and
xor
iret
or
add
jmp
fwait
fs
in
jno
fstpl
pop
out
jno
jnp
add
lcall
sbb
mov
push
pop
jb
shll
sbb
push
adc
aad
jb
push
mov
xlat
outsb
adc
xor
shl
sti
andb
ss
movsb
jecxz
out
xchg
and
push
das
mov
mov
scas
cmc
scas
pop
les
pop
push
push
push
stc
test
push
sahf
xor
dec
mov
or
inc
aad
add
jg
mov
jo,pn
fnsave
sbb
out
sbb
jp
sarl
test
xchg
pop
dec
cmpsl
daa
leave
int3
jge
xchg
out
adc
lret
lock
fabs
pop
mov
jnp
rol
mov
fsubrl
and
sub
sbb
mov
dec
bound
xchg
pop
cmp
adc
cmpb
push
aad
mov
mov
dec
loopne
cli
adc
push
mov
push
pusha
into
mov
int
shr
mov
xchg
ljmp
lahf
aas
jne
inc
iret
and
lret
pop
test
rclb
hlt
mov
dec
aad
pushf
das
mov
test
hlt
clc
jnp
popf
repz
and
fcmovnu
aaa
cli
and
cltd
sahf
mov
inc
sub
pop
fsubp
cmp
jmp
aad
jb
arpl
js
sbb
pop
outsb
cld
js
or
imul
testb
dec
dec
into
data16
imul
mov
adc
or
roll
xor
and
xchg
es
jnp
mov
push
sbb
scas
mov
fdivl
cmp
clc
sbb
inc
xchg
xor
pop
jle
ds
int3
xor
cmpsb
cmp
jns
les
adc
out
pusha
xor
rorl
pusha
in
mov
repz
inc
mov
xchg
call
or
js
rcrl
and
iret
in
pop
mov
push
shrb
dec
pop
loope
lock
inc
xchg
call
adc
ja
ds
add
lcall
pusha
and
ja
sti
pop
int
pop
cmp
je
inc
iret
mov
cmp
lcall
imul
jbe
outsl
in
push
adc
push
mov
push
out
xchg
or
jge
data16
sbb
das
loopne
cltd
leave
cmpsb
push
pop
incl
lret
adc
push
mov
mov
push
mov
subl
sbb
sub
into
add
gs
leave
test
ficoms
shll
arpl
ret
pop
test
mov
jno
jecxz
push
pop
mov
lahf
subb
pop
mov
mov
xchg
lret
stos
aas
add
and
shr
hlt
mov
cmp
rorb
dec
pushf
mov
jbe
mov
adc
aam
jmp
aaa
mov
mov
inc
push
xchg
sub
lcall
out
or
jecxz
leavew
hlt
sbbb
push
loope
icebp
insb
das
and
je
std
jle
scas
ret
mov
mov
bnd
mov
or
or
mov
loop
stos
lock
outsb
in
aas
add
sub
mov
add
push
cmp
fisubrl
inc
xlat
in
jno
inc
xchg
mov
es
inc
cmp
cwtl
ficoml
mov
xor
cli
insb
adc
ja
ret
inc
push
aam
cmc
repz
enter
pusha
sub
mov
adc
cmp
jae
js
ljmp
xchg
mov
or
xor
inc
jae
xchg
stos
add
pusha
adcb
or
shlb
adc
xchg
lret
xlat
push
cld
inc
mov
xchg
mov
push
ja
cwtl
xorl
cmpsb
sbbl
incl
into
lret
xlat
sti
rolb
int3
xchg
dec
dec
lock
das
xor
out
mov
es
fmul
push
or
fidivrs
sahf
std
into
cmpl
mov
addr16
cmp
xchg
out
xchg
inc
mov
jmp
loopne
ds
sbb
inc
push
sbb
xchg
xchg
lods
sar
repz
jb
cmpsb
add
imul
ds
dec
outsl
add
add
leave
ja
imulb
push
mov
mov
rorl
inc
sti
js
and
pop
or
dec
es
sub
dec
and
in
xchg
cmp
in
mov
inc
inc
pop
jl
sub
add
push
popa
mov
jl
inc
jg
mov
shr
sbb
iret
push
lahf
popa
inc
inc
jno
inc
lret
mov
filds
add
inc
test
or
cmp
pop
cmpsl
push
jmp
jmp
mov
cwtl
cmpsl
ret
leave
outsb
pop
push
arpl
cwtl
or
pop
stos
in
sub
mov
arpl
pop
loop
cmp
add
aaa
xchg
enter
inc
pop
xchg
dec
popa
push
cmp
bound
int3
fsubrl
and
dec
mov
das
adc
je
popa
xor
outsl
lcall
lcall
adc
iret
inc
add
lcall
movsl
cmp
or
pop
cmpsl
aam
cmp
daa
mov
fisubrs
popf
incl
cwtl
jg
pop
outsb
mov
cmpsl
test
push
xor
loopne
je
sbb
jne
cmp
into
jb
movsb
push
out
pop
adc
ljmp
inc
or
pop
xor
ds
push
out
or
mov
pop
sub
mov
inc
pushf
les
dec
mov
jp
inc
xchg
sbb
add
lret
mov
push
in
pop
push
dec
scas
sahf
jl
xchg
enter
jp
pop
sub
mov
test
adc
cmc
and
xchg
ret
fiadds
dec
jp
push
fwait
sbb
inc
data16
sbb
rcrl
push
addr16
pop
movsb
iret
xchg
out
popa
pop
fs
sbb
push
mov
not
imul
mov
jbe
push
pop
outsl
xchg
inc
xor
mov
aas
sub
mov
and
mov
dec
cwtl
jo
mov
cs
fsubrs
int3
data16
xchg
jb
add
test
sarb
sub
sub
iret
fnstenv
cmp
dec
push
int
outsb
pushl
in
test
cli
xchg
jl
mov
dec
xor
in
int
movsl
cmp
into
lea
push
jge
orl
and
mov
adc
pusha
jle
xchg
sub
cmpsb
push
fwait
loopne
leave
jne
mov
fiaddl
mov
dec
or
cs
or
sub
sar
jge
xor
ss
mov
sub
in
sbb
pop
out
xchg
fcompl
bnd
inc
fidivs
std
inc
add
or
sbb
xchg
dec
and
rolb
sbb
xchg
in
cli
sbb
xor
cmp
in
fwait
push
jecxz
stos
mov
sub
pop
sub
push
or
mov
inc
lret
int3
inc
dec
cmp
int
sti
mov
in
xor
push
mov
pop
jle
jp
popa
lods
ljmp
or
ret
sub
inc
fists
adc
repz
mov
mov
ffree
dec
es
xor
cli
popf
fidivrl
leave
lea
mov
out
dec
scas
lcall
hlt
pop
stos
test
jnp
mov
adc
leave
movsb
or
mov
scas
xchg
sub
cmpsb
in
inc
xchg
mov
lret
jmp
and
mov
movsb
mov
into
xor
fs
iret
sub
pop
int3
leave
ljmp
inc
inc
test
xor
sbb
movsb
xchg
dec
sbb
in
push
xadd
sbb
xor
push
push
lods
jmp
or
pop
mov
adc
mov
ret
shr
inc
hlt
jecxz
shll
stc
movsl
andl
mov
jns
mov
cmp
jns
test
int3
pop
sti
mov
push
dec
data16
icebp
and
add
mov
xchg
pop
xchg
push
add
movsl
jns
mov
std
cmpsl
imul
out
int3
dec
xor
lret
lret
push
mov
enter
call
les
pslld
push
fwait
mov
out
pand
icebp
pop
mov
dec
sub
cmp
push
mov
mov
cmpsb
push
jbe
mov
lret
jb
mov
lods
adc
scas
push
popf
lods
add
lock
ja
sbb
scas
push
lcall
loopne
xor
xor
int
adc
push
ljmp
jb
mov
lret
xor
jne
popf
aad
mov
test
dec
mov
in
dec
mov
and
inc
daa
adc
mov
push
push
xor
std
adc
insb
leave
pop
mov
jp
es
movsb
adc
shrb
in
mov
or
add
insl
cmp
cmp
mov
jnp
insl
mov
insb
hlt
inc
sbb
data16
xchg
ljmp
or
hlt
fwait
pop
push
call
and
pop
jmp
xchg
mov
cwtl
pop
pop
jbe
mov
mov
int
insl
pop
mov
adc
jb
pop
leave
dec
mov
rol
fldt
mov
pop
ja
and
jmp
xchg
rcr
enter
push
adc
xor
add
xor
dec
mov
push
dec
mov
clc
xor
mov
shll
mov
push
pop
dec
arpl
sbb
ret
inc
loope
leave
shl
addr16
mov
lcall
dec
es
inc
lods
insl
xchg
pop
add
mov
xor
push
imul
jecxz
call
aas
jb
xor
dec
vandnps
outsl
mov
mov
pop
jmp
add
nop
lret
mov
in
fcomip
sub
std
pop
add
adc
fisubl
andl
lcallw
cmp
imull
iret
pop
mov
mov
out
test
dec
test
xor
dec
mov
sub
inc
pop
cmp
cs
cmc
mov
test
bound
xchg
mov
jae
popl
jb
ss
and
pop
jo
aad
int
leave
aam
or
pop
fadd
mov
or
sbb
aad
or
inc
gs
outsl
repz
sub
je
dec
cmp
stc
enter
lret
pop
mov
sbb
dec
jae
xchg
movsl
imul
lcall
pop
pop
nop
xchg
mov
lods
sbb
repz
test
sub
pushf
inc
pop
in
mov
loope
cmpps
test
jge
out
rcll
mov
pop
mov
ret
lods
in
xor
pop
push
jne
fld
dec
mov
inc
in
push
ret
xor
xor
inc
jmp
push
loop
out
adc
xchg
js
inc
and
push
sarl
adc
and
out
stc
nop
jbe
add
inc
mov
es
mov
aam
cld
ja
leave
jge
jle
andl
out
shlb
leave
into
sbb
mov
aam
xor
mov
fistps
push
mov
in
xchg
negb
xchg
nop
aas
int3
and
nop
repnz
and
pusha
mov
clc
je
add
push
test
fstpt
popa
out
inc
inc
cmp
add
out
inc
pop
ret
outsb
fdivrp
inc
rolb
inc
lock
push
mov
add
inc
xlat
xchg
xchg
sub
and
jbe
jmp
add
xchg
fnstenv
xor
add
xor
sbb
push
cmpsb
cmp
pop
daa
les
int
fiadds
push
adcb
xchg
add
jno
mov
mov
into
popa
jl
or
push
pop
cmp
insl
dec
pop
sub
lea
adc
mov
daa
push
sub
dec
jmp
jle
outsl
mov
loopne
cmp
push
xchg
push
aas
pop
outsb
minps
jecxz
in
addr16
xchg
xchg
nop
jo
fwait
inc
pop
int
addr16
push
lds
xchg
lods
addl
arpl
inc
add
out
mov
push
in
pop
popf
mov
xlat
stos
adc
jo
add
mov
jns
mov
mov
cltd
xor
and
xchg
sbb
lock
sti
insb
hlt
or
jge
mov
js
jl
fs
add
and
push
stos
outsb
pop
sub
xor
das
daa
push
xor
xor
mov
ficompl
cmc
mov
dec
xchg
test
xchg
push
cmpsl
movsl
and
stos
xlat
cmpb
into
insl
or
mov
dec
sbb
fistps
cwtl
fistl
push
test
stos
loop
pop
les
inc
cli
jnp
mov
cmp
inc
decl
xchg
dec
cwtl
call
dec
aaa
out
pop
dec
ljmp
jo
pop
or
add
inc
xchg
pop
into
insb
inc
jl
xor
sub
repz
jmp
test
and
xor
lret
in
bound
sub
mov
mov
filds
push
ds
iret
dec
fcompl
cmp
bound
mov
fwait
scas
addr16
aaa
xor
imul
das
out
jae
call
cli
rorl
mov
mov
pop
ficompl
xor
push
pusha
xacquire
sub
ljmp
jnp
and
mov
pop
add
push
lods
fs
int3
arpl
sbb
mov
in
dec
cld
aaa
add
rcll
push
and
inc
pop
mov
shl
movsl
push
mov
dec
into
inc
pop
ds
addr16
movsb
jle
push
in
dec
mov
jno
gs
and
add
xchg
push
and
jo
es
mov
lods
lods
or
rorb
add
in
mov
out
push
sub
shrl
je
hlt
in
movsl
add
bt
sub
pop
pop
rcll
int3
adc
je
jp
push
sub
xor
fisubl
fdivs
mov
mov
iretw
fistl
lret
fwait
push
rcrl
leave
push
cwtl
leave
mov
jo
push
sbb
leave
push
push
inc
adc
mov
mov
inc
mov
jle
cmp
or
pusha
lret
sub
mov
pusha
xor
insb
rclb
and
loope
xchg
outsl
jge
stos
sahf
lods
fidivrs
mov
adc
xor
mov
cld
invd
rcrl
sahf
push
das
inc
es
xor
mov
mov
mov
push
push
or
sbb
pop
or
bound
clc
hlt
push
cmp
cld
int3
xor
mov
mov
lods
mov
hlt
popa
cmpl
fldl2t
pop
fbstp
push
test
lock
mov
pop
data16
inc
ljmp
inc
mov
dec
inc
dec
mov
rcr
rol
les
xor
lods
mov
es
xchg
scas
sbb
add
push
jns
cmc
ja
push
mov
arpl
lock
push
call
push
add
in
aad
xchg
inc
int
pop
ret
push
dec
adc
lods
jae
movsb
fistps
xor
repnz
ds
sti
dec
jle
fiadds
xchg
ret
fsub
enterw
fs
adc
pop
outsl
jo
jmp
stos
add
or
dec
push
call
ja
jo
cli
adc
mov
dec
ljmp
mov
rorl
fsubrs
xor
mov
out
push
or
aas
out
movsb
in
pop
or
jl
rorl
mov
bound
inc
cld
pop
repz
cmc
testl
xchg
imul
mov
mov
inc
cmp
lret
xchg
cmp
pop
repnz
rclb
adc
inc
ljmp
sbb
test
aam
mov
jp
and
or
jmp
ja
push
nop
mov
ret
jne
mov
xchg
lods
push
add
rcll
xor
mov
ljmp
mov
adc
sbb
pushf
dec
lret
mov
sbb
in
mov
inc
dec
xor
test
nop
popa
pop
fnstcw
shl
mov
dec
xor
push
out
sbb
into
pop
cmc
loope
ret
mov
stos
cmp
mov
aam
add
xchg
mov
into
adc
aaa
mov
leave
shlb
xlat
sub
gs
dec
cmp
repnz
jb
sbb
cs
mov
repnz
rcr
daa
or
adc
adc
or
xor
mov
dec
cmp
subb
int3
fbstp
test
jns
xor
pushf
mov
xchg
lods
leave
pop
outsl
pushf
jne
inc
nop
out
sub
add
jge
mov
les
test
sub
shll
and
jns
insl
mov
dec
out
insl
sbb
and
iret
cmp
inc
repz
je
mov
pop
push
or
mov
dec
loope
sbb
push
jae
or
jmp
lahf
dec
mov
inc
push
inc
out
popa
mov
dec
aas
adc
dec
pop
sti
sbb
cmp
jmp
popa
loope
mov
bound
popa
add
divl
gs
cmpsl
test
divl
repz
jp
ror
dec
bound
lret
bound
sbb
orl
dec
loop
xchg
inc
push
mov
dec
xor
call
mov
sub
inc
xor
dec
loopne
sub
or
icebp
pop
sub
push
leave
xor
mov
fwait
cmc
dec
adc
xchg
push
pop
insl
loopne
pop
imul
cwtl
mov
out
sbb
pop
or
sub
rclb
int3
sub
pusha
pop
cmp
clc
ret
push
mov
dec
xlat
and
add
mov
repnz
lahf
call
shlb
cmp
xchg
fs
mov
fildl
loop
jmp
mov
divb
dec
je
hlt
pop
je
pusha
inc
shrl
int3
and
or
mov
pop
mov
push
and
push
push
cld
rorb
cmpb
sub
xchg
jge
add
cmp
push
test
xlat
or
push
jns
loope
xchg
movl
and
xchg
mov
cmp
cmc
into
or
cwtl
das
pop
xchg
aam
popf
sub
adc
mov
mov
fnstsw
outsb
mov
xor
or
aas
clc
sahf
insb
js
rcrl
cmp
sub
addb
or
insl
hlt
pop
ds
or
add
cmp
inc
mov
push
test
mov
and
push
cmc
ss
fistps
shr
imul
xor
daa
sub
adc
xchg
jp
jne
push
lcall
jmp
ret
pop
stos
xor
or
sub
or
mov
iret
cmpsb
or
mov
dec
mov
in
iret
lahf
out
mov
popa
or
sub
mov
or
leave
mov
mov
push
inc
scas
std
js
repnz
imul
push
pop
cltd
push
fisubrl
xchg
lods
sarl
add
fadds
outsb
add
je
popa
cmp
out
jp
xor
out
outsl
aaa
push
mov
js
inc
push
xchg
dec
xchg
flds
and
xchg
lcall
std
push
nop
xchg
cmc
test
ja
jnp
add
cli
xchg
dec
dec
mov
sbb
cltd
lret
adc
imul
mov
push
popf
xor
movsl
ret
fs
pop
loope
shll
add
stos
push
lea
popf
clc
sbb
pop
jmp
add
data16
fwait
jb
hlt
cli
js
pop
cli
lret
aas
push
jno
popl
int
stos
jb
out
call
xchg
test
sbb
xchg
pop
fcomip
adc
sahf
sub
hlt
jmp
in
mov
mov
adc
jmp
pop
lcall
pop
adc
outsl
pushf
int3
dec
fidivl
and
mov
aaa
adc
es
les
dec
pusha
hlt
hlt
adc
or
mov
mov
pop
int
pushf
arpl
adc
outsb
cld
jg
cmc
mov
in
dec
mov
adc
loopne
jle
inc
inc
rorb
mov
and
mov
inc
lcall
jle
mov
lods
iret
and
ret
xchg
daa
sbb
mov
ret
cld
xlat
dec
scas
pop
adc
mov
int3
adc
xor
data16
or
into
test
mov
in
arpl
mov
mov
xchg
out
in
pop
aam
loopne
fs
dec
vhaddps
sahf
sbbb
jae
ret
sbb
fists
shrb
loope
arpl
mov
mull
gs
push
lret
cld
cmpsb
dec
xor
inc
inc
mov
adc
scas
sbb
outsb
add
jne
fidivl
sbb
lea
shrb
sbb
xchg
push
mov
shl
std
mov
xchg
or
cmp
mov
inc
nop
cmc
cli
scas
aaa
pop
xor
std
push
daa
bound
iret
insl
ror
or
into
imul
jmp
push
lret
xchg
inc
fchs
fcmovne
pop
ret
pop
mov
in
test
adc
shr
mov
jg
dec
aam
mov
mov
mov
xchg
nop
cmp
pop
aad
fimuls
mov
xor
popa
mov
cmpsb
test
pop
aam
push
and
jno
and
lret
inc
loope
sbb
lret
sub
lcall
lods
mov
jmp
pop
repnz
jns
add
pcmpgtd
and
mov
int
push
andb
lgdtl
xchg
scas
push
pop
mov
sbb
fidivrs
add
jo
or
or
in
add
cmp
and
in
pop
jbe
push
adc
push
pop
pop
xchg
std
mov
cli
inc
adc
bound
movsl
clc
test
inc
and
push
dec
sbb
pop
sub
adc
ret
cltd
jge
pop
outsl
pop
cmp
cmp
push
pop
mov
movsl
cmp
xchg
or
xchg
adc
mov
addr16
jmp
test
int3
mov
scas
les
cmp
scas
and
cli
jmp
jno
jne
pusha
scas
add
inc
out
loop
aaa
mull
dec
mov
adc
mov
iret
cmpsl
pop
lahf
orb
lock
aam
cmp
andb
sub
xchg
dec
loope
push
in
dec
dec
iret
mov
imul
and
ljmp
push
or
int3
movsb
shr
js
mov
shlb
and
cmp
imul
movsl
out
loope
ss
repz
dec
cmp
mov
imul
mov
push
xor
test
xchg
cmpsb
dec
push
test
dec
cmp
subl
jnp
andb
xor
mov
call
and
sbbl
subl
mov
jae
out
stos
or
ljmp
inc
sbb
fs
and
jno
xor
mov
or
lock
xlat
cmp
or
out
pop
push
mov
stos
adc
test
insb
cs
xchg
sbb
mov
leave
loopne
mov
lds
jne
out
dec
pop
fnstenv
jg
fadd
jb
int
in
mov
push
xchg
outsb
leave
push
pop
sub
js
dec
rcrl
lock
push
imul
mov
in
out
add
enter
jne
xor
mov
lock
mov
xchg
sub
push
scas
lea
add
xor
push
mov
iret
es
push
test
push
add
adc
lock
mov
or
cmp
shll
ret
movb
jl
pop
ds
jo
mov
xchg
pusha
inc
pop
xchg
cmc
jbe
das
or
inc
adc
leave
fldenv
xor
and
cmp
add
push
push
iret
push
lds
lods
add
push
out
xlat
lock
sbb
and
fbstp
pop
push
jno
call
inc
in
dec
mov
jns
notb
sub
fmul
mov
mov
xor
sar
cmp
jecxz
jg
test
pop
sahf
xor
xor
leave
fs
sbb
jecxz
add
xchg
incl
push
dec
dec
jae
adc
bound
dec
leave
pop
outsb
jl
ljmp
mov
sbb
insb
mov
pop
imul
scas
mov
mov
shrb
je
sahf
cmp
sti
sub
nop
lcall
jae
dec
pop
xor
adc
add
call
or
or
subb
sub
dec
sub
add
lock
int3
jg
jnp
jmp
adc
inc
dec
or
repnz
xchg
stos
movsl
mov
test
fdivl
xlat
lcall
bound
mov
movsb
aad
out
cmpsl
jp
in
mov
ds
inc
jl
rolb
sbb
pop
mov
imul
xchg
pop
dec
stos
sarb
jno
xchg
out
les
mov
pop
ret
test
xor
mov
enter
es
stos
ds
mov
dec
aam
fwait
fs
dec
push
aaa
aam
cli
and
sbb
lock
fsubrs
fs
jg
push
jecxz
hlt
mov
lods
inc
push
sub
cli
xor
in
fstl
leave
out
shrb
add
xchg
xor
push
mov
sub
or
mov
and
repz
inc
sbb
mov
jnp
adc
push
push
roll
testl
jp
sub
mov
cmpsb
das
push
xor
rcll
sub
in
arpl
and
popf
lods
cs
movsl
popl
leave
cld
ds
lock
lret
add
pop
and
cld
pop
cmp
and
mov
fdivl
mov
adc
and
and
add
negb
sub
cmp
push
shl
xor
adc
push
mov
jno
in
ds
aad
repz
insl
rcl
ss
pushf
repz
push
lahf
mov
adc
cld
push
mov
test
mov
cld
sbb
xlat
sub
adc
adc
rcl
and
rclb
push
pop
inc
inc
cmp
call
jno
shrb
scas
add
cwtl
xchg
lahf
mov
mov
pop
lock
orb
data16
sbb
outsb
mov
pusha
or
push
xor
push
in
mov
fisubrl
in
and
js
sahf
lcall
push
sub
insl
add
push
in
adc
insb
xor
arpl
fst
mov
mov
fstp
xchg
sub
mov
sbb
test
dec
mov
arpl
xchg
xchg
adc
xor
into
and
cmp
sbb
add
fwait
aaa
movsb
lcall
push
je
xchg
dec
mov
popa
sub
or
or
sub
sub
arpl
ds
jno
xor
and
mov
lea
lret
adc
sub
mov
jle
mov
insl
call
xchg
hlt
mov
popf
cmpsl
ljmp
nop
and
xchg
sbb
inc
add
ja
and
jecxz
mov
lock
pop
flds
sbb
pop
out
test
stos
xchg
pop
fcoml
pop
adc
ss
dec
dec
sti
roll
out
loopne
int3
shrl
out
jo
out
xchg
lea
xchg
add
inc
aam
jb
add
lods
ja
std
test
scas
and
cmp
adc
test
in
jmp
mov
mov
ret
fisttpl
xor
aad
push
cli
jne
fisubs
and
and
in
cmpsl
cmp
or
mov
mov
pop
leave
and
add
mov
cld
push
adc
push
add
cmp
inc
jnp
mov
inc
inc
cld
xchg
mov
pop
pop
cmpsl
pop
idivl
inc
scas
call
aam
and
inc
adc
mov
mov
lods
mov
icebp
subl
bound
add
xchg
sub
lea
bound
in
jg
les
aam
loopne
sub
add
lret
js
scas
inc
loopne
pusha
imul
int
pushl
xchg
mov
test
jle
in
cmp
movsl
icebp
inc
jmp
fsubs
sahf
inc
cmp
fcomi
lds
sub
jmp
scas
sahf
pop
test
loopne
stc
push
jns
push
and
pop
pop
icebp
push
mov
aam
xor
or
sbb
ds
out
mov
nop
jle
add
sub
inc
sbb
jno
fstpt
mov
loope
ficoml
inc
sbb
add
push
mov
aad
imul
js
mov
icebp
shlb
es
adc
pop
shrl
mov
mov
or
jg
stos
pop
xchg
mov
lret
in
test
pop
mov
mov
clc
ljmp
cmp
dec
notb
xchg
pop
cs
push
std
aas
call
inc
mov
pop
aaa
aas
sub
out
mov
filds
pop
iret
push
daa
or
lock
not
out
add
nop
daa
lcall
adc
add
push
in
test
inc
movsb
cmpsl
imul
lds
enter
pop
jecxz
sub
outsl
pop
scas
addr16
in
fwait
bound
or
rorb
adc
xchg
repz
fisubl
imul
out
mov
push
frstor
xor
add
test
pop
add
cmp
and
mov
ret
sub
imulb
pop
add
ret
test
ja
lret
adc
dec
jbe
call
jns
pusha
scas
shll
add
or
cmc
xchg
shrb
scas
adc
loopne
xchg
adcl
xchg
sbb
sbb
mov
mov
fbld
xor
lods
xchg
mov
xchg
inc
fcmovb
mov
out
cmp
pop
push
stos
jb
dec
push
sti
sub
or
mov
das
enter
jbe
adc
dec
leave
pusha
jp
out
popa
test
out
adc
add
int
pop
pop
cmc
mov
es
ret
sbb
sbbb
fdivs
jno
inc
push
out
xchg
cltd
or
popf
enter
dec
aad
jecxz
popa
ja
adc
pop
xor
and
mov
int3
pop
jbe
mov
jno
popf
jno
lock
pop
cmpb
popf
push
cmp
mov
mov
in
popf
out
popl
or
xchg
inc
mov
jae
movsl
sub
cli
mov
subb
repz
and
mov
xor
push
xlat
add
jns
mov
je
outsl
in
jge
sbbl
sbb
mov
cli
aas
mov
and
clc
movsl
sbb
cli
xchg
mov
mov
add
cltd
pop
icebp
lret
ss
incl
jne
dec
dec
in
in
sahf
test
movsb
sbb
into
lods
jae
pusha
or
aad
xlat
xor
cli
sub
inc
cs
inc
add
nop
icebp
lcall
or
xlat
adc
or
mov
and
xor
dec
adc
or
mov
mov
push
mov
pusha
mov
jno
insb
or
mov
ficomps
data16
inc
mov
fwait
repnz
and
mov
das
repnz
jle
xchg
cs
pop
cmpsl
out
cwtl
das
pop
fldenv
cmp
mov
lret
or
xlat
and
push
pop
mov
pop
cmc
jbe
mov
negb
mov
sbb
lahf
lret
outsl
subl
addr16
test
ja
jne
pop
pop
dec
or
xor
jmp
xor
mov
and
movsb
cmp
sbb
pushf
inc
movsl
jo
and
xchg
ljmp
mov
outsb
add
jae
cwtl
xor
std
and
imul
cmpsb
and
mov
call
andl
test
inc
push
or
cltd
and
lcall
or
sbb
and
sub
popa
add
insb
xchg
cmp
testl
jl
les
cwtl
xor
and
js
dec
inc
xor
xor
mov
and
rorl
xor
push
cltd
xor
mov
and
cmp
sarb
cld
subb
test
psubw
sub
les
mov
mov
pop
cmp
sbb
imul
dec
pop
lahf
hlt
mov
ficoms
std
adc
sbbl
nop
dec
sbb
push
mov
mov
cld
pusha
mov
push
cli
mov
idivb
sub
jb
lcall
push
cwtl
mov
into
lods
inc
mov
jnp
fdivrl
test
lret
sarb
daa
mov
or
push
sbb
stos
ljmp
pop
add
cwtl
mov
pop
out
xchg
push
aas
jnp
pop
inc
sbb
cli
fs
ja
es
fcomps
inc
pop
dec
mov
je
and
imul
and
mov
jge
cmpsb
scas
cmp
adc
sub
ljmp
push
in
push
and
lods
iret
add
cmp
xor
jp
xchg
lcall
stc
dec
pop
push
mov
mov
mov
flds
mov
dec
dec
popa
jae
insl
pop
dec
popf
das
cmp
jo
inc
push
add
mov
pop
jae
xchg
hlt
aad
mov
ret
std
mov
cld
repnz
mov
mov
pop
jno
jb
add
pop
loop
ss
cli
dec
xchg
xor
shlb
out
fildl
dec
xlat
fsubrl
data16
xchg
sub
loopne
jp
insl
cld
cmpsb
iret
das
xor
push
xchg
adc
push
test
sbb
adc
cmp
or
ret
lods
inc
dec
pop
jl
ret
dec
ss
popf
jg
xchg
iret
mov
jg
adc
inc
inc
push
subb
insl
sub
and
xchg
daa
pop
loopne
push
lds
sti
dec
int
jge
jns
mov
mov
das
int3
pusha
int3
and
or
enter
pop
sub
dec
div
jne
xor
movlps
jno
pop
cmp
dec
out
mov
mov
cmp
rorl
mov
out
sub
ljmp
loop,pt
and
jno
xor
daa
inc
lret
sbb
jmp
push
jmp
mov
and
pushf
adc
add
aad
cltd
jae
movsl
scas
ficoml
xor
and
or
dec
pop
push
sub
xor
dec
mov
addr16
andb
frstor
jns
xor
fldcw
push
in
popf
adc
pop
sahf
in
imul
scas
sub
mov
add
push
mov
scas
adc
cmpb
adc
lds
inc
imul
push
jmp
and
hlt
js
sbbl
cmpsl
imul
lods
sub
pop
mov
mov
insb
fisttps
jo
xor
lea
inc
ljmp
in
fsubl
dec
stos
das
jg
addr16
cwtl
or
pop
hlt
cld
mov
fldt
pop
jb
cld
movsb
mov
mov
inc
or
dec
dec
sbb
ret
xor
addr16
subb
sbb
sti
pop
mov
test
mov
inc
xchg
js
popa
fcompl
out
jg
jecxz
or
mov
stos
mov
jbe
sahf
out
andl
adcl
psubusw
popf
fsubr
xor
ret
out
and
jp
sysexit
movsl
ja
ljmp
rorb
and
xchg
xor
lock
push
icebp
mov
jmp
dec
pop
pusha
add
lcall
aas
or
pop
and
ljmp
cltd
lods
mov
cmpsb
idivl
xchg
adc
and
pop
ficomps
or
cs
aas
add
jecxz
xchg
cmc
or
lcall
stos
bnd
aas
jbe
ljmp
call
stc
push
add
jp
js
push
test
in
stos
or
outsb
push
add
shr
test
or
and
jno
sub
es
es
popa
add
jne
push
jle
out
mov
sbb
xorb
cmp
je
sti
and
lret
fildll
cmpsl
xchg
jmp
icebp
imul
add
ljmp
bound
jl
mov
mov
xchg
mov
and
lods
leave
inc
add
and
fs
jb
mov
sbb
push
movsl
add
pushf
jo
and
fcoml
sbb
pop
aas
mov
pop
outsb
adc
pop
clc
sub
xchg
es
call
fwait
xchg
jg
xchg
inc
xor
rorb
mov
adc
gs
jne
gs
mov
aam
rorb
adc
inc
mov
and
xchg
ja
insl
mov
mov
sub
mov
call
sti
xchg
ret
test
adc
jecxz
pop
jmp
and
stos
pushl
shrl
clc
andl
pop
mov
shll
lret
inc
mov
int
push
repz
pop
or
pop
sub
dec
test
int3
outsl
mov
jmp
inc
mov
test
push
mov
pop
inc
mov
cltd
daa
fwait
test
test
scas
mov
or
add
fwait
jns
ss
in
inc
pop
pop
in
pop
js
and
dec
and
mov
push
xchg
xor
sbb
in
aas
clc
clc
push
fmulp
dec
imul
loop
jb
aam
cmc
cmp
cmpsl
mov
aaa
fistpll
scas
adc
add
add
hlt
mov
cmp
jecxz
aas
sbb
xlat
dec
repnz
aas
mov
mov
clc
or
shrl
rorl
mov
mov
jb
sarl
xchg
push
xchg
mov
std
cmpsb
leave
xor
sbb
push
and
inc
pusha
inc
inc
xchg
jle
fwait
ja
daa
or
repz
loope
jl
lds
stos
shrl
and
fisubl
mov
ja
daa
adc
jge
pop
insb
add
mov
decb
repnz
mov
int
movsl
xchg
jbe
sahf
jle
outsb
mov
sbb
cwtl
pop
cmc
je
jmp
mov
mov
loopne
jmp
fs
xchg
xchg
repz
ret
lea
stos
mov
faddl
mov
dec
and
push
xor
dec
ja
adc
outsl
cwtl
lods
pop
cli
pushf
dec
add
cwtl
jnp
push
pop
scas
sbb
jle
jle
cmp
imul
pop
add
jge
lret
jbe
pop
hlt
push
je
int3
fcmovne
jno
xchg
fwait
or
sarb
fbld
pushf
dec
fisttps
jge
outsl
stos
test
or
add
test
es
or
dec
std
addb
jae
gs
dec
xor
sti
out
pop
dec
dec
pop
imul
push
push
jae
inc
popf
lcall
mov
fdivs
pusha
and
mov
scas
inc
addr16
or
fcmovu
jne
mov
int
cmp
jne
repnz
cmpsl
cmp
or
xchg
mov
jg
cmp
outsb
lds
mov
mov
pop
lea
clc
inc
push
cmp
dec
mov
jne
loopne
hlt
popl
out
mov
xchg
sbb
push
sbb
in
adc
rcll
out
pop
adc
add
xchg
daa
sub
aas
mov
jge
cmp
pushf
xor
cmc
rorb
mov
sub
mov
pop
cld
push
nop
test
aad
pusha
pop
or
sub
les
xchg
fnstenv
jno
mov
enter
fidivrs
push
adc
xchg
test
mov
and
nop
mov
sti
push
cmp
inc
dec
sbb
outsl
push
jmp
mov
stc
pop
test
and
cltd
outsl
insb
xor
movsl
push
lods
sub
pop
jne
mov
jo
inc
adc
stos
and
fistpll
hlt
mov
mov
test
arpl
push
cmp
lods
inc
lcall
inc
call
add
push
lret
shrb
xchg
dec
ds
stc
ret
outsb
mull
adc
iret
adc
rcrb
pop
out
iret
es
outsl
outsb
std
ficoms
test
xchg
or
sbb
test
xor
fmull
mov
mull
push
insl
icebp
ror
testl
les
lea
orb
adc
mov
fwait
cmpsl
adc
and
icebp
enter
mov
sub
push
xchg
test
das
lods
xchg
popa
lcall
push
dec
or
mov
sbb
push
jbe
adc
leave
sti
xchg
sbb
sbb
sbb
aad
les
cli
gs
mov
push
and
push
negb
push
lahf
imul
add
jno
popf
cmc
shl
shlb
mov
pop
mov
pop
cwtl
pop
jns
add
scas
rolb
arpl
imul
ja
cmp
pop
pop
imul
stos
shrb
ffreep
and
sarb
mov
mov
cli
iret
inc
or
out
dec
icebp
mov
push
sub
loop
pop
dec
shll
mov
es
subl
jo
or
sahf
jmp
fstpt
jecxz
in
push
nop
add
pop
pop
push
sub
testb
arpl
sbb
cmp
out
out
mov
ret
imul
outsl
nop
pop
add
mov
in
stos
cltd
mov
int3
imul
xrelease
xor
stos
jp
es
imul
gs
mov
orb
cmpb
stc
sub
dec
sahf
jle
sbb
and
xchg
nop
rclb
test
cmp
pushf
jns
mov
movsl
add
adc
push
cmpsb
ret
insl
sub
push
sti
pop
lret
addr16
sbbl
sbb
cld
xlat
xchg
inc
js
jl
addr16
sbb
inc
aas
iret
pop
popa
clc
lock
inc
stos
dec
adc
bound
out
jmp
xor
jno
movsl
fcomps
daa
repz
sub
xchg
mull
cmp
daa
push
pop
mov
in
aam
or
cwtl
iret
xchg
xchg
mov
push
icebp
nop
bts
scas
out
loop
sub
movsb
repnz
aad
cltd
or
add
mov
data16
ret
push
cld
add
sub
pusha
xchg
data16
push
xchg
mov
mov
dec
xchg
and
xchg
or
fadds
push
data16
cli
jnp
pop
inc
lret
cld
data16
lret
cmp
sub
aas
js
aaa
sti
jne
inc
fisubs
sbb
mov
gs
inc
iret
and
cmp
fs
mov
add
dec
movsl
cltd
xor
lods
pop
sbb
ret
sbb
call
outsl
out
or
fwait
and
mov
std
sub
sub
and
inc
leavew
test
add
jecxz
sbb
outsb
int3
mov
sahf
mov
aas
adc
add
xor
push
mov
ret
pop
psubd
inc
adc
int
pop
mov
sti
ja
xor
push
sub
mov
or
inc
sbb
inc
aam
imulb
jle
pop
mov
jns
pop
loope
into
sti
les
pop
pop
cmp
rolb
add
lods
dec
cmp
xorb
aam
xchg
sub
pop
fidivrl
push
xor
push
jno
int
jb
mov
push
pop
mov
loop
inc
adc
mov
mov
fimuls
aam
inc
cs
and
scas
sub
and
divl
stc
sbb
orb
repnz
sub
sbb
push
jecxz
xor
fisubrs
inc
aas
dec
cwtl
lret
pop
ficoms
cltd
dec
out
mov
xor
cmpsl
andb
sub
cmp
gs
packuswb
jecxz
fs
add
into
das
pop
inc
in
inc
sub
mov
cmp
mov
mov
mov
sub
pop
shrb
hlt
or
dec
jle
fsub
add
je
scas
cld
pop
mov
mov
cltd
fstl
fisttps
cmpsl
push
mov
mov
rcrb
pop
fwait
mov
xchg
push
stc
adc
dec
cmpsl
insl
jne
stos
mov
shll
mov
fistpl
fisttpll
push
mov
or
shrl
mov
push
mov
inc
lcall
inc
sub
add
ljmp
add
sub
std
jno
daa
mov
and
xchg
mov
in
mov
fcmovu
sbb
pop
jle
lds
adc
pop
cmc
stc
mov
loope
call
ljmp
jle
scas
sub
sub
das
mov
inc
xchg
nop
or
adc
xor
mov
ja
lret
ret
je
dec
inc
dec
cmc
xchg
es
call
mov
orb
mov
push
push
add
aas
xchg
outsb
jge
jb
mov
insb
stc
test
cwtl
pop
sub
adc
fisttps
movsb
mov
cld
cmpb
mov
jl
out
arpl
loop
push
outsl
loopne
push
test
sub
mov
scas
dec
aam
cld
fistpll
or
and
mov
cmp
or
mov
mov
mov
cmp
pop
adc
lds
in
or
es
cld
adc
cwtl
cmp
enter
mov
push
sahf
sbb
push
pop
lret
mov
mov
sbb
and
or
imul
lods
inc
mov
fwait
test
cmp
imulb
loop
xchg
dec
push
mov
int
push
fdivl
loopne
movsb
pushf
cli
cli
insl
mov
dec
repz
inc
dec
lods
inc
jnp
xlat
pop
pop
popf
in
cs
mov
and
push
adc
xchg
cmpsl
dec
push
fxtract
mov
out
or
jg
add
adc
xor
and
inc
pushf
sub
mov
loope
leave
sub
sahf
cwtl
lds
lret
dec
mov
jnp
push
inc
fisubrs
cmc
push
int3
notl
jb
fisttps
mov
ror
jp
ja
scas
fists
scas
movsb
cmp
fmuls
pop
adc
je
push
and
mov
ds
xor
sbb
jl
dec
icebp
sbb
sbb
push
jb
adc
popa
std
aam
xor
or
mov
cld
jp
imul
decb
xchg
shl
mov
shll
push
push
cltd
incb
test
add
mov
pop
loope
adcl
jmp
es
pop
pop
shlb
push
adc
cltd
add
jp
lcall
push
imul
xor
push
cmp
loop
lret
mov
adc
lds
jbe
mov
test
outsl
jns
mov
rclb
rcll
and
int
xchg
cmpsb
push
mov
jnp
xor
sub
cmc
push
scas
pop
out
flds
dec
jnp
rcrb
fiadds
sbb
outsl
jge
dec
push
mov
inc
pop
cmp
ret
out
mov
dec
data16
leave
xchg
mov
or
arpl
outsl
outsl
shrl
cs
sahf
pop
or
fcom
pop
lret
mov
mov
dec
pop
js
mov
xchg
repnz
test
cli
sub
xchg
push
ljmp
sbb
xor
pop
movsb
jno
fildll
nop
jp
dec
nop
std
mov
jge
sub
or
test
push
cwtl
popf
popf
xor
mov
push
pusha
scas
mov
leave
test
or
jg
push
in
lahf
fmuls
clc
jb
mov
xchg
or
mov
inc
push
cmp
inc
push
fisubs
xchg
pop
or
cmp
cld
fwait
jb
push
test
fisttpll
pushf
loopne
sbb
aad
sbb
repz
cmp
jb
inc
dec
pusha
mov
fnstenv
mov
inc
fs
mov
sub
test
pop
and
scas
dec
les
stc
mov
xchg
mov
dec
cli
pop
push
out
decl
push
not
pop
add
inc
bound
inc
xchg
dec
mov
imul
les
rdmsr
insl
jnp
dec
aas
divl
das
pop
leave
mov
sti
arpl
sub
test
popa
push
or
dec
or
imul
add
push
jb
or
jbe
int3
jp
push
mov
inc
popf
fs
and
sub
xchg
aad
scas
mov
js
aam
sti
js,pn
jo
pop
adc
push
mov
and
subl
sbb
int3
jmp
xor
stos
je
outsl
sbb
push
shl
std
and
lods
int3
pop
adc
je
sub
test
adc
jl
cmp
xchg
sub
pop
sub
movsb
es
inc
xchg
jmp
pop
xchg
mov
jno
cmp
je
pop
mov
imul
pop
inc
fdivrp
xchg
js
ret
test
xor
fs
xor
adcb
mov
orb
lea
dec
loop
pop
mov
dec
or
adc
mov
inc
xchg
fildll
les
mov
sahf
dec
cmp
push
ds
lock
adc
cmpsb
in
push
sub
inc
adc
int3
iret
or
jp
in
test
or
std
sub
enter
adc
and
adc
xchg
out
mov
xchg
cmpsl
push
mov
aas
mov
das
jne
and
nop
and
jmp
sub
adc
fstpt
push
stc
or
adcb
jae
sub
sbb
inc
push
dec
push
jnp
adc
mov
add
icebp
pop
mov
push
jb
mov
dec
movsb
jb
push
lret
adc
inc
inc
out
sahf
mov
leave
pop
ficomps
orl
xchg
mov
and
cmp
ss
cmp
pop
scas
cmp
es
xor
dec
xchg
fbstp
xor
push
inc
or
xchg
jl
xor
psraw
ja
cmpsl
dec
adc
push
dec
fiadds
xchg
mov
xor
cmp
iret
push
and
mov
mov
out
dec
loop
xchg
popf
out
dec
imul
fiadds
jp
aad
add
jne
fs
sahf
shrl
dec
rorl
loop
adc
pop
int
xchg
add
or
ljmp
mov
and
push
dec
push
mov
jb
and
push
test
data16
add
mov
xor
out
cld
pop
xchg
adc
jge
mov
cli
stc
shrl
pop
add
cli
jle
xchg
xor
loop
mov
jl
cmp
sub
rcll
movsb
imul
add
mov
outsb
cmc
jle
mov
loopne
lds
dec
adc
icebp
cs
xchg
cltd
test
xchg
sti
iret
pop
inc
jne
js
mov
jp
or
push
cmpsl
inc
mulb
int
mov
movsl
sbb
mov
mov
movsb
testl
and
mov
add
mov
inc
cli
rcll
sub
pop
add
fisubrs
outsb
popl
cmc
push
or
jmp
test
dec
and
cmpsl
pop
xchg
add
mov
adc
xor
aam
andl
or
rorl
loope
push
or
or
inc
push
aad
inc
pop
lret
dec
sarb
inc
and
fistl
mov
or
negb
aad
pop
aaa
push
sbb
sbb
cmp
loope
add
nop
or
add
and
xor
push
mov
in
negl
sub
out
insl
cs
push
xchg
add
add
outsb
xor
mov
mov
sub
lretw
mov
sahf
ss
shr
push
dec
lds
cli
jnp
cmp
lahf
jmp
pop
mov
stos
fstps
add
lods
movsb
js
xchg
jmp
sbb
adc
je
ds
push
add
jb
push
mov
xchg
cmp
lahf
aas
mov
and
mov
xchg
fnsave
sub
jmp
pop
mov
pusha
enter
lcall
icebp
xchg
lds
dec
xchg
dec
loopne
xchg
mov
loop
repz
sub
popl
pop
push
cmp
cli
inc
in
xchg
and
or
push
jno
ficoms
xlat
es
shlb
aad
push
shrl
lods
fldcw
xchg
iret
je
sbb
lcall
sub
jp
iret
mov
and
aas
push
lds
cmp
push
sbb
pop
lahf
lret
push
jo
inc
ja
mov
psrad
les
in
and
cwtl
mov
mov
fistl
pop
arpl
gs
aas
aad
add
cmp
mov
inc
fiaddl
dec
in
sbbl
pop
mov
js
xchg
mov
ret
sbb
jl
mov
dec
test
adc
dec
pop
popa
faddl
les
imul
cmp
out
ret
sub
inc
aaa
lock
fidivl
xchg
pop
cmp
sbb
jae
sbb
push
movsb
cmp
stos
btr
into
pushf
pop
ret
add
lea
pop
sti
cli
scas
fisttpl
mov
add
xchg
pop
jp
mov
aad
push
jo
aad
add
in
incl
bound
xchg
xchg
mov
jb
xlat
mov
lahf
fcmovb
push
fcoml
or
push
mov
sbb
push
stos
jno
jnp
xchg
adc
es
xchg
loop
sub
roll
jb
and
mov
orb
add
shlb
xchg
add
jns
or
mov
cmpsl
imul
sub
add
imul
test
notb
out
insb
adc
mov
ret
jge
popa
mov
mov
mov
add
and
xchg
xor
fldt
popf
xor
into
pop
jne
inc
sbb
mov
fdivl
mov
pop
push
lods
push
xchg
popa
jno
sbb
adc
xchg
arpl
jecxz
repz
test
xchg
insl
xchg
add
test
pop
mov
jae
sub
mov
dec
and
jle
sbb
add
es
sub
dec
rclb
cmp
mov
mov
fcoml
inc
push
lods
jmp
repnz
ds
out
mov
mov
inc
jmp
jp
fldl2t
inc
mov
xchg
rolb
xchg
popf
sub
sbb
dec
fsubrs
outsl
loop
sbb
clc
xchg
cmp
cmp
movsb
mov
out
insl
ficomps
add
rcrl
push
mov
in
lds
cmp
push
mov
push
shlb
test
xor
cmp
sbb
rcll
cmpsl
cmp
pop
movsb
inc
pop
sub
jbe
lahf
imul
mov
les
shl
je
inc
out
arpl
pop
clc
jae
gs
push
shl
add
inc
adc
data16
mov
lds
cmp
pop
dec
es
push
insl
mov
cmp
rorb
sub
bound
clc
jp
cli
and
jl
ret
jns
repnz
popf
sub
xchg
cmpsb
push
mov
sbb
orl
ds
popa
and
sbb
popf
xor
std
or
dec
test
pop
enter
xor
mov
negb
mov
sbb
push
lods
xchg
pop
out
and
popa
andb
stos
hlt
addr16
pusha
out
dec
test
in
icebp
inc
and
cmp
cmp
mov
xor
fildll
int
xor
loopne
aaa
push
repz
cmpsl
sbb
mov
movsl
in
or
jg
mov
ficoms
dec
jmp
mov
out
lahf
jp
jmp
js
and
outsl
int
in
clc
addr16
adc
arpl
dec
jge
inc
loop
dec
pop
cli
out
addr16
mov
adc
in
stos
push
jp
push
jl
jne
idiv
xchg
mov
mov
cmp
jge
push
jo
push
in
push
xchg
rcrb
stos
inc
jo
xchg
and
xchg
mov
inc
mov
std
in
mov
adc
outsl
in
push
adc
jmp
mov
clc
test
aaa
mov
cwtl
cmp
mov
lret
jmp
cmc
sbb
dec
and
ss
and
cltd
mov
sarl
sbb
pop
jb
shl
dec
add
mov
lcall
fidivl
adc
mov
gs
fnstsw
cli
divb
pop
add
jl
cmpsl
fwait
xor
scas
dec
xlat
out
mov
sub
xchg
fldenv
mov
mov
ror
jne
add
and
icebp
jno
push
stos
mov
test
fisttpll
fs
cmp
sbb
mov
xor
data16
inc
xchg
scas
lods
xchg
dec
repz
and
mov
adc
sbb
in
ret
imul
sbb
cwtl
inc
leave
jnp
jo
jae
mov
movl
jne
adc
xor
shrl
xchg
pop
fmull
mov
push
scas
clc
or
arpl
in
add
adc
and
inc
and
cltd
fucom
std
push
mov
inc
jbe
jecxz
push
mov
jmp
xor
scas
test
imul
mov
imul
cltd
in
jo
cli
push
fsubr
cmp
je
icebp
stos
add
int
xlat
mov
sti
cwtl
mov
pop
adc
js
sub
add
push
imul
insb
jge
push
sbb
ja
nop
xchg
insl
inc
dec
dec
cld
outsb
ds
dec
xor
inc
sub
imul
cltd
mov
cmpsl
xor
or
adc
cld
jns
ds
mov
lods
hlt
xchg
into
jns
fwait
leave
xor
cmp
add
adc
fs
rclb
out
xor
cmp
movsl
rorb
push
mov
and
flds
fucomi
mov
pop
mov
xlat
ss
dec
mov
sbb
jns
mov
les
jbe
bound
pop
lods
jnp
adc
and
lret
mov
and
jecxz
in
into
in
mov
int
mulb
mov
and
hlt
xchg
arpl
sbb
imul
js
cld
outsl
dec
test
cli
cmc
in
sub
jno
xchg
mov
loope
lahf
fdiv
jle
fsub
js
scas
lods
and
mov
push
jecxz
andb
ja
pusha
add
push
roll
mov
pop
dec
xchg
and
jmp
cmp
decl
sbb
jb
dec
movsb
xor
orb
jno
lock
xchg
out
rolb
mov
xor
das
jle
mov
pop
insl
jne
push
mov
movsb
repnz
jne
movsb
and
sub
push
pop
std
jo
stc
push
test
inc
iret
jno
inc
movsb
inc
fcoms
mov
shl
mov
sbb
mov
pop
push
xor
call
xor
or
pop
call
fsubs
scas
pop
imul
ljmp
mov
dec
mov
and
repz
xchg
sub
xlat
push
test
fwait
push
cmpl
mov
or
or
arpl
test
ljmp
into
mov
inc
mov
shrb
or
mov
inc
aas
jmp
sbb
jle
movsb
pop
mov
dec
inc
mov
jecxz
testb
rclb
jg
es
sbbl
daa
mov
or
mov
push
dec
out
pushf
loopne
fisubrs
rcrl
cmpsb
andl
jp
lods
jmp
jecxz
jo
pop
mov
test
aas
shrb
movsl
push
shll
jl
or
popf
or
cltd
int
shlb
lcall
cltd
addr16
outsl
inc
mov
mov
dec
test
xchg
add
mov
mov
mov
cmp
dec
mov
mov
push
xchg
jbe
iret
pop
sarb
int
leave
xlat
jo
iret
add
popa
sbbl
test
jb
sbb
jg
mov
lods
push
pop
xor
mov
out
sbb
jno
cmp
cld
les
adc
pushf
sbb
loop
jmp
daa
mov
hlt
repz
popa
xchg
sub
aas
push
inc
jge
icebp
aaa
pop
imul
pop
insb
xchg
imul
xor
xor
sbb
push
cwtl
out
dec
icebp
lcall
sbb
dec
xchg
movsb
repnz
adc
fnstsw
push
sbb
add
inc
fsubl
inc
arpl
ja
xchg
adc
sub
out
push
mov
hlt
sbb
jb
in
jo
pop
and
rcl
icebp
mov
dec
push
imul
lahf
stos
ljmp
or
xchg
push
out
or
jne
push
jno
loopne
jne
sub
sbb
push
out
pop
sbb
mov
mov
xrstor
sub
lret
mov
ficomps
out
inc
push
jbe
jge
adcl
add
and
pmaddwd
jo
scas
xchg
fdivrs
or
adc
xlat
outsb
inc
mov
cmc
adc
xor
sbb
or
adc
pushf
mov
iret
arpl
lods
ljmp
mov
pusha
insl
je
jle
out
rorl
push
pop
sbb
xchg
ljmp
mov
fs
push
pop
adc
sub
pop
adc
or
mov
loopne
dec
lods
fwait
in
pop
out
sbb
or
call
test
sahf
xchg
and
mov
sahf
mov
adc
testl
js
daa
cmp
cmpsl
xchg
xchg
mov
fstpl
ss
hlt
movsb
imul
call
or
shlb
lcall
in
dec
push
repz
xchg
sub
mov
and
shll
aas
repnz
adcl
mov
or
cmp
daa
mov
rol
dec
mov
into
push
fists
lretw
jae
mov
push
pop
out
dec
sbb
insl
iret
bound
sub
insb
sar
scas
dec
pop
push
sub
js
add
fdivr
xor
cmpsl
popf
xor
and
test
add
mov
out
cmp
fisttpll
add
jecxz
testl
std
repz
inc
and
mov
adc
xlat
clc
push
cmc
cmp
gs
insl
add
xchg
cs
xchg
or
adc
andl
insb
xchg
jno
or
nop
mov
dec
cwtl
mov
mov
in
and
add
xchg
cs
or
subb
icebp
lods
mov
sub
mov
lods
or
shlb
jb
jmp
es
les
enter
cmp
lods
lods
mov
pop
call
jns
repnz
cmc
sbb
test
cmp
ret
pop
pop
pop
jbe
xchg
mov
pop
ljmp
mov
jle
lcall
ret
add
out
xchg
push
xchg
add
popa
pop
push
shll
outsb
fiaddl
mov
inc
rol
ja
fnstenv
xor
sbb
adc
jge
xor
cmpb
or
pop
fdivs
in
xor
jl
pop
mov
push
stos
push
pushf
xor
and
notb
xchg
scas
jg
jo
and
cmpsl
int3
inc
xchg
sub
repz
or
and
mov
test
cmpsl
cmp
js
std
test
sbb
notl
sbb
pop
xor
aas
out
movb
fists
push
dec
jg
out
sub
outsb
or
mov
dec
sub
dec
sarl
inc
in
dec
loop
call
sbb
jne
fisttpll
subl
cs
cld
cmpsl
or
mov
mov
add
pop
je
sbb
add
sub
jle
jge
out
xor
les
xor
cmpb
sbb
mov
loop
aas
ret
xchg
push
jp
dec
mov
subb
and
cmp
addb
cmpsb
fdivrs
repnz
cmp
cmpsl
push
dec
mov
adc
sub
out
idivb
inc
xchg
xchg
ja
fstpl
xchg
add
orb
xchg
negb
or
xor
leave
fldt
mov
mov
jne
scas
and
sbb
lahf
or
mov
mov
sub
movsb
sbb
lahf
jl
jecxz
xorl
push
sub
inc
pop
pop
lods
inc
mov
push
sahf
loope
mov
xchg
mov
cmpsb
lea
ljmp
jno
ljmp
mov
pop
jae
shll
daa
inc
mov
pop
pop
sti
or
push
xchg
call
out
ret
and
test
or
fidivrs
bound
push
xor
movsb
js
adc
hlt
mov
xor
repz
xchg
aam
pushf
fistl
shll
inc
std
push
fsts
xchg
inc
jbe
gs
iret
ja
dec
and
sub
scas
imul
test
lret
out
push
jb
push
jle
mov
je
pusha
jmp
ljmp
and
out
push
add
mov
push
xlat
cmpl
fs
sbb
pop
inc
insb
pop
addr16
pop
jae
push
rcrb
jge
xor
sub
fsubrs
or
imul
in
nopl
xor
adc
leave
pop
test
dec
das
sub
pusha
outsl
outsl
push
roll
jmp
cmp
push
cmp
inc
lcall
mov
pop
cmp
push
dec
pop
cmp
fwait
cmpsl
cmp
push
jl
jae
aad
pop
js
add
ja
push
jne
stos
in
push
fdivl
outsb
ljmp
cmp
pop
out
insl
fnstcw
xchg
shrl
shlb
inc
repz
inc
fisttpll
and
scas
mov
dec
int
mov
sbb
mov
mov
lret
xchg
sub
fidivl
jg
xchg
es
pop
jmp
dec
jmp
xchg
loope
dec
adc
xor
jg
xor
adc
fistl
jg
xor
dec
push
lock
xchg
ja
aam
add
jg
and
adc
rcrl
div
mov
popf
js
xor
shll
sub
loop
cmp
fcoms
xor
ljmp
xchg
fadd
cmp
aad
in
cmc
rcl
or
jnp
push
mov
and
clc
mov
ss
add
imul
push
call
xor
mov
dec
iret
cld
sbb
popf
jge
mov
xchg
popf
stos
pop
lcall
and
push
test
inc
sbb
add
in
fwait
nop
daa
int
xor
shlb
inc
add
or
imul
adc
lret
cmpsl
cmp
mov
sbb
push
iret
cmp
mov
data16
sub
add
sub
lods
cld
inc
imul
sub
sbb
aad
mov
stos
dec
cwtl
out
into
pop
jns
ss
pop
call
test
inc
push
xlat
or
rorl
insb
xlat
cld
mov
push
cld
dec
sarl
scas
fld
mov
jle
ss
clc
push
adc
lea
jmp
sbb
ret
or
insb
jb
cmp
dec
arpl
push
adc
es
cmp
movsb
push
sbb
sbb
loop
popa
lods
xchg
lds
test
add
in
int
mov
jge
and
insb
mov
jp
cmp
mov
sarb
jp
aad
mov
sbb
sub
push
mov
arpl
and
add
call
test
lods
cmp
mov
inc
inc
push
cmp
and
xor
adc
in
pop
arpl
xlat
ret
jg
rep
les
sbb
lahf
dec
cli
and
ret
hlt
into
outsb
jl
ret
call
mov
mov
xchg
xor
nop
ds
or
mov
pop
repz
inc
sbb
or
sub
mov
out
cmp
cmp
js
add
inc
sbb
fistpl
scas
xchg
test
loopne
or
cmc
pusha
xor
dec
xchg
aas
push
int
jmp
jns
popf
addr16
mov
es
imul
bound
test
enter
not
or
imul
repnz
push
xchg
sub
adc
xor
jb
jmp
and
lods
or
or
pop
pop
scas
cmp
movsl
ficoms
orb
imul
movsb
pop
add
add
jg
and
add
xor
scas
jmp
cmp
aas
sub
loop
xlat
shrl
push
adc
and
lock
pushf
mov
into
enter
adc
ret
hlt
and
sbb
stc
addr16
loope
xchg
insb
icebp
stos
fstpt
inc
cmp
lret
dec
in
xchg
dec
fmuls
insb
add
nop
jecxz
into
pop
or
sbb
rorl
adc
iret
dec
push
ret
sbb
cmp
pop
movb
xchg
dec
mov
sbb
mov
adc
and
arpl
sub
shl
mov
imul
pushf
pop
test
fidivrs
test
ret
push
lods
mov
sbb
xor
push
mov
xchg
cmc
popa
and
mov
jno
add
or
retw
xor
jge
cmp
mov
inc
popf
fsubrl
sbbl
push
adc
cmp
test
sub
lods
push
pop
mov
aam
lret
mov
movsb
ja
movsb
push
stos
adc
xchg
pop
push
mov
or
fnsave
jo
push
pop
mov
cmp
loop
roll
push
push
xchg
xchg
push
push
xchg
cmp
lcall
cmp
cvtdq2ps
dec
aas
in
adc
aam
outsb
insl
std
dec
pusha
ja
xchg
es
das
add
or
outsb
or
ret
js
and
sub
mov
mov
lock
loop
adc
scas
cmp
adc
jg
mov
push
mov
push
inc
sub
arpl
cmc
int3
in
sub
xchg
inc
fisubs
xchg
adc
or
cmp
popf
imul
cld
mov
push
scas
mov
gs
push
nop
lret
cmp
cmp
or
insb
in
pop
inc
jmp
push
mov
jbe
push
scas
subb
push
icebp
mov
sahf
xor
leave
and
out
fnsave
sub
xchg
iret
in
and
and
xchg
enter
aam
out
fwait
hlt
xchg
in
pushf
adc
push
push
fs
inc
mov
daa
ret
push
push
push
mov
pusha
clc
or
xlat
or
cmp
lahf
mov
sub
cs
dec
jae
gs
bound
ret
lock
cltd
jge
lahf
ds
xor
jns
je
scas
mov
data16
sub
decb
mov
mov
iret
stc
dec
je
callw
fldcw
or
shrl
pop
imul
pop
xchg
ret
int
mov
test
cmp
in
adc
adc
push
cs
dec
mov
sbbl
mov
sbbb
pop
les
cmp
sbbb
std
pushf
xchg
pop
xor
repz
push
movsl
mov
es
outsb
fldt
cmpsb
lret
sub
ror
mov
pop
repz
test
movsb
loope
and
adc
push
mov
outsl
add
movsl
mov
jb
testl
outsb
pop
shlb
jle
sub
or
pop
loopne
and
clc
jns
pop
jbe
mov
pop
gs
xor
dec
pop
add
sub
cmc
add
sub
xor
rorb
push
pushf
iret
shrl
mov
out
jg
test
loope
mov
cmp
cmp
mov
outsl
icebp
int
add
es
clc
mov
movsl
push
and
and
inc
push
sub
incl
jecxz
dec
repz
idivb
call
push
sbb
je
xchg
scas
jl
xchg
imul
arpl
xchg
dec
xlat
call
mov
inc
mov
lea
sbb
xor
lret
inc
push
jl
mov
sbb
rcrb
jle
mulb
dec
outsl
iret
shr
dec
idivl
cmp
pop
lahf
sub
cmp
adc
sbb
fistl
in
dec
mov
pop
push
sti
loope
mov
cmpsb
ret
in
mov
push
loopne
xchg
mov
popf
or
lods
mulb
into
out
sub
fldl
nop
cmp
cmpsb
nop
lcall
xor
ja
push
cmp
pcmpeqb
push
and
jo
adc
or
mov
cmp
mov
mov
scas
jl
es
pop
pop
outsl
push
loope
inc
mov
pop
xor
xor
negl
mov
cwtl
mov
fimull
movsl
or
mov
sbbl
repnz
and
scas
popf
dec
sbbl
lahf
cli
xchg
shr
enter
mov
xor
loop
push
fnstsw
fbstp
inc
jmp
sub
nop
inc
pop
and
fisubl
pop
mov
flds
sub
mov
neg
popa
mov
addr16
fs
pusha
idivl
enter
stc
or
xchg
stos
jae
int
push
cs
scas
push
and
test
cmpsl
into
rorl
ret
icebp
adc
mov
out
stos
ds
mov
add
in
call
cmpb
arpl
out
sbb
fisubrs
push
lds
sbbl
push
jl
pushf
lds
and
mov
mov
pop
mov
shlb
jae
out
adc
cmp
sbb
sbb
or
imul
sub
fistpll
or
and
js
orl
mov
aas
push
add
stc
sbb
sbb
pusha
cmp
add
lods
dec
dec
scas
fwait
pop
jno
dec
out
out
cmp
mov
pusha
inc
insl
cmpsb
xorl
arpl
xor
shrl
lods
inc
inc
cmpsb
add
mov
mov
call
push
int3
cwtl
notb
push
pop
adc
add
imul
jge
dec
mov
jecxz
sbb
cmpb
jne
lods
sti
pop
out
mov
das
push
ds
aam
stos
add
mov
fwait
xlat
addr16
cltd
clc
cmp
push
fistpll
into
loope
loopne
ror
lret
test
ljmp
adc
stos
es
sbb
mov
leave
xor
add
mov
outsl
add
jle
pop
cmp
mov
sub
or
pop
dec
cli
popa
lcall
sbb
fsubrl
mov
enter
std
mov
lock
push
cmc
movsb
nopl
loopne
xchg
hlt
add
or
jo
test
ja
ljmp
dec
sahf
push
cmp
test
mov
and
push
or
inc
cmp
pop
adc
in
test
push
sbb
xchg
addr16
ljmp
pushf
and
or
in
dec
push
mov
sahf
push
mov
stos
push
push
movb
jne
imul
aaa
ficompl
jg
pop
mov
push
fs
pop
lds
push
int
cwtl
inc
push
jmp
push
loopne
adc
flds
xchg
in
arpl
aas
xor
push
cmpsb
add
xchg
test
aam
and
fs
dec
lods
subl
stos
iret
fcomi
lea
popa
in
lods
mov
xchg
daa
or
cs
nop
push
xor
lcall
stc
fists
sub
xor
sarl
xor
pop
add
add
dec
sbb
dec
and
dec
sub
mov
push
inc
push
fucomp
dec
iret
push
inc
push
stos
and
push
cld
ret
sub
sbb
add
xchg
adc
fnstenv
push
hlt
or
sub
push
xor
or
xor
or
out
dec
sahf
push
lock
xchg
add
lcall
mov
ss
pop
imul
xchg
jb
test
outsb
and
ds
ja
mov
fwait
sti
inc
push
and
add
pop
call
cmp
pop
dec
hlt
mov
test
jo
aas
mov
iret
sbbb
hlt
adc
sub
adc
out
ja
pop
mov
fs
mov
mov
mov
mov
lods
sti
xor
mov
popa
ljmp
mov
xchg
cmp
loop
call
mov
cmp
lea
aad
inc
test
fdiv
gs
loope
movsb
push
sbb
mov
lret
add
outsb
pushf
and
ftst
dec
pop
sbb
cmp
jo
or
mov
je
mulb
in
dec
push
outsb
sbbl
mov
adc
fs
xchg
mov
adc
test
and
out
lahf
adc
cmp
lea
jno
lods
cmp
sub
sti
mov
dec
test
sarl
add
fldcw
add
scas
out
push
inc
xchg
sub
mov
jnp
xor
and
data16
dec
notl
inc
fsubl
shll
daa
jb
rcrl
dec
pusha
inc
sbb
js
out
jecxz
rclb
mov
sub
roll
out
cld
iret
pavgw
in
xchg
adc
jb
sub
aad
adc
adc
ljmp
cmp
jno
sub
xchg
stos
push
jb
jmp
add
negb
push
arpl
fisttps
mov
adcb
shl
push
sbb
mov
shrb
testl
cmpl
or
xchg
out
adc
rorb
imulb
mov
aam
pop
in
cs
inc
and
dec
cmp
arpl
lock
dec
jnp
cli
scas
das
inc
shl
push
call
cmp
js
dec
mov
xor
push
add
jmp
jle
in
call
xorb
iret
pop
stc
and
shll
cmpsl
cwtl
mov
push
and
adc
xchg
push
sbb
sbb
add
push
pop
aas
adc
repz
pop
clc
push
xchg
add
mov
adc
mov
adc
push
scas
roll
lret
imul
xor
aam
sub
aam
add
leave
int
pushf
jge
sarl
or
lods
jno
int
insb
cmpsl
ds
mov
dec
loop
push
mov
xchg
shrl
xchg
cmp
shlb
outsl
pop
repnz
mov
clc
adc
pop
outsb
mov
mov
gs
xor
jae
arpl
xor
adc
fcoml
loop
testl
cmpsb
cmp
in
fdivrs
mov
inc
das
mov
cltd
subl
rcrl
data16
lret
mov
dec
je
insb
xlat
mov
jg
pop
inc
xchg
es
pusha
mov
sbb
loop
or
repz
sub
dec
ljmp
adc
repz
inc
out
leave
xor
jb
mov
xchg
cs
xchg
dec
lods
sarl
std
sbb
cmc
mov
std
fdivrl
scas
or
mov
icebp
call
leave
js
sbb
inc
mov
cmp
ljmp
testb
pop
inc
outsb
add
mov
ret
adc
jl
in
mov
enter
lock
and
sbb
adc
jl
inc
push
je
test
mov
lahf
adc
lods
sub
inc
call
push
inc
mov
loop
and
cmpb
les
fnsave
lret
out
arpl
cmpsb
mov
xor
sbb
jp
jnp
mov
push
sub
and
loopne
xchg
daa
xchg
sbb
sbb
cmpsl
inc
dec
pusha
jg
push
out
mov
repz
or
les
icebp
mov
shll
or
cltd
push
hlt
lods
lea
scas
out
loope
dec
cmp
or
xor
or
sbb
mov
xor
inc
cmp
push
outsl
adc
mov
sbb
xchg
add
shrl
add
jl
movsl
cmp
insl
repnz
loop
and
mov
mov
test
and
ja
mov
sbb
roll
adc
mov
mov
sbb
adc
orl
aam
push
sarl
or
xor
repnz
les
mov
xlat
push
xor
lret
arpl
jno
loopne
loopne
add
hlt
mov
cmp
lods
xlat
fiaddl
sub
xchg
stos
das
push
sbb
daa
jle
jmp
int
inc
xchg
xor
xlat
popa
or
mov
push
fsts
mov
iret
test
aam
dec
outsl
aad
jo
xchg
ror
mov
ret
jle
pop
push
or
fwait
nop
cwtl
ss
rclb
pop
test
xor
mov
sbb
xchg
inc
mov
cmp
and
push
mov
add
fucomp
mov
jp
divl
jbe
dec
push
fs
test
mov
cmp
xlat
add
aaa
aaa
out
sar
sbb
xchg
mov
pop
cmpsl
xor
fwait
je
inc
pop
sbb
jmp
ds
imul
jmp
inc
and
shrl
sbb
and
movsl
das
sub
jmp
sbb
xchg
nop
popf
jne
mov
pop
xor
out
xor
test
jecxz
das
push
xor
add
in
push
hlt
lret
jnp
scas
add
sar
jmp
dec
in
aaa
adc
repz
stos
push
mov
or
pop
scas
into
fsubl
adc
inc
addr16
stos
test
fisubl
xor
xchg
sbb
fnstcw
inc
mov
out
cltd
xchg
in
incb
fs
outsl
aaa
lods
pop
aam
notb
scas
sbb
in
rclb
movsl
cs
adc
cmpb
and
dec
shrb
fwait
pushf
je
xchg
xchg
xorb
xacquire
or
dec
xchg
rcrb
imul
xor
and
imul
loop
incb
and
bnd
or
cmp
mov
jmp
pop
mov
jge
lds
add
push
stos
xor
mov
dec
mov
testb
lock
in
in
cmp
pop
je
dec
xor
je
outsl
push
in
lret
into
pop
sbb
inc
pop
js
inc
push
ljmp
xchg
cmp
mov
adc
addr16
cmp
jo
sbb
nop
xchg
or
xchg
cmp
lahf
lods
jb
loope
lcall
mov
jl
test
cmpsl
jge
nop
enter
in
add
popa
stos
adc
mov
pop
in
pop
out
mov
aam
mov
fs
xchg
fwait
repnz
xchg
aaa
fwait
cli
in
outsl
addl
sbb
lret
lea
scas
int3
test
mov
in
mov
jb
jnp
pop
daa
inc
push
call
dec
xor
cwtl
and
imul
pop
dec
or
ret
mov
scas
imull
stos
test
ss
lods
nop
lret
in
cmp
adc
sbb
xchg
mov
mov
jmp
adc
sbbl
testb
push
mov
mov
mov
pop
mov
int3
popa
jl
iret
mov
repnz
repz
sbb
mov
and
mov
je
clc
mov
push
lock
es
jecxz
cwtl
push
push
daa
outsl
fildll
pop
mov
mov
out
mov
out
cld
push
adc
or
adc
or
adc
mov
mov
int3
sub
inc
push
std
daa
mov
aam
sahf
mov
cmc
xchg
fstps
repz
mov
sub
mov
leave
jge
add
iret
push
sbb
lret
lods
jns
mov
dec
cmpsl
fdiv
fldcw
fmul
inc
daa
mov
xchg
mov
add
mov
call
xor
xchg
add
insl
cmp
mov
mov
sub
xchg
std
push
pop
int3
mov
imul
mov
dec
lods
call
dec
cmp
fldt
xor
cmp
sbb
dec
sarl
adc
sub
jns
popf
and
adc
or
in
push
push
mov
fsubrp
inc
cwtl
lock
sahf
mov
fwait
in
cmp
out
xor
add
sub
ds
sub
rcl
xchg
out
jmp
ja
adc
mov
jae
cli
jno
jl
jmp
xor
inc
inc
inc
lahf
jnp
shrb
push
fisttpll
in
inc
push
sahf
dec
loop
mov
mov
mov
into
lahf
in
out
stc
sbb
popa
xor
mov
mov
or
dec
aaa
adc
imul
xchg
xor
jmp
and
inc
pusha
loop
filds
xchg
rcll
mov
in
pop
scas
mov
pushf
cwtl
bnd
sbbb
mov
out
test
cmpsl
int3
orl
adc
sarb
andl
scas
fidivl
push
and
shlb
mov
jbe
jl
and
push
out
inc
mov
test
mov
orl
push
mov
scas
pushf
pop
js
lret
sbb
fnstsw
mov
stc
cs
sbbb
in
f2xm1
jg
push
push
xchg
xchg
add
rcrb
dec
dec
ss
std
into
xlat
cmp
insb
insb
jns
fisttpl
pop
out
aam
fs
mov
and
std
inc
add
adc
repz
mov
mov
addr16
int3
int
add
xchg
mov
mov
cmp
and
andl
stc
adc
divl
mov
lods
jl
dec
movsl
into
test
mov
popf
fsubrl
xchg
xchg
xor
pop
fldl
and
roll
mov
fs
mov
andb
mov
mov
push
sbb
xchg
data16
cmp
add
sub
daa
imul
mov
cmc
shrl
sub
hlt
xchg
mov
jle
jns
pop
aas
push
mov
sub
jg
ret
mov
push
cmp
les
add
or
dec
inc
movsb
dec
cmp
shrl
das
inc
outsl
daa
in
divl
rorl
rcrb
outsw
ret
pusha
xlat
push
dec
dec
mov
int3
sbb
mov
xor
add
mov
push
xor
movsb
rcrl
loopne
out
sti
subl
andl
lret
jae
clc
pop
jne
jnp
sbb
rcrb
fnsave
jle
mov
lret
xor
popf
inc
mov
loop
pop
push
stos
inc
add
inc
lcall
push
jae
jne
aas
adc
call
or
and
addr16
cmpsl
mov
mov
gs
xlat
sahf
cwtl
and
mov
push
and
jno
rcll
cmp
mov
loopne
je
lds
jg
add
sub
sub
aas
push
es
mov
leave
cmp
ljmp
popf
cmc
pop
xlat
sub
and
test
filds
stc
jne
fnsave
push
popa
xor
or
cwtl
clc
cltd
sub
dec
fcoml
sub
adc
pop
repz
dec
xchg
sub
jno
mov
aad
or
mov
pusha
testl
sti
push
inc
fstpl
inc
mov
int
loopne
cmp
push
ret
pop
ja
ret
jle
push
pop
mov
pop
xchg
mov
mov
jl
cmpl
outsl
sub
adcb
pop
mov
add
fwait
xor
or
mov
cmp
push
sub
inc
insl
shlb
add
aad
inc
rcl
lds
mov
pusha
mov
and
test
lea
push
out
mov
clc
pop
pushl
leave
pop
push
popa
addr16
enter
adc
cmovae
add
pusha
inc
pop
mov
pop
popa
popa
xchg
sbb
fdivs
sti
ret
loopne
xchg
xor
cwtl
lock
enter
lock
lahf
in
mov
out
and
jge
jecxz
stos
or
addl
popa
jnp
rorb
repnz
nop
dec
and
inc
fiadds
mov
cmp
mov
mov
xor
push
inc
sub
testl
mov
push
jne
mov
loope
nop
mov
fidivl
icebp
fs
and
or
repz
sub
stos
sbb
gs
sbb
std
insb
xor
lock
repnz
call
bound
or
xchg
punpckldq
mov
fisubrl
dec
mov
pop
xor
or
lcall
mov
jecxz
mov
in
sub
mov
outsl
negl
pop
aaa
mov
dec
dec
xor
in
fwait
daa
pop
enter
out
es
insl
bound
lret
lock
sub
insb
pop
jmp
lods
fimuls
jmp
sub
sub
popa
xor
mov
push
jle
inc
sub
int
loopne
push
leave
popa
jae
ret
push
inc
xor
or
pop
mov
stos
push
xor
int3
sbb
aad
sbb
out
fsubrl
mov
das
mov
sub
popa
stos
fdivp
ficompl
jmp
icebp
xchg
add
aaa
movsb
test
xchg
outsb
enter
mov
cmc
push
dec
xchg
cmc
ss
loope
in
push
ror
roll
mov
push
js
sbb
push
mov
dec
lahf
js
pop
add
lods
rcl
cltd
std
out
pop
loopne
int3
decb
repnz
imul
mov
push
stos
cmp
outsb
mov
pop
gs
mov
xor
or
and
mov
mov
jbe
rcrb
inc
dec
mov
xor
xchg
cmp
cmc
jns
and
add
jnp
mov
add
mov
mov
push
popa
out
adc
int3
insl
mov
pop
xor
int
cltd
arpl
jns
out
stos
negl
xor
pop
rcrl
imul
sub
sahf
add
mov
xor
inc
push
or
sbb
les
sub
out
push
dec
jmp
add
and
or
push
in
push
adc
sub
lea
xor
mulb
push
ljmp
insb
int
sahf
pop
or
dec
add
push
ret
jg
les
sbb
jne
xor
xchg
stc
ss
test
or
pop
loopne
jp
push
ds
mov
lea
dec
jecxz
test
mov
and
mov
lods
lcall
pop
jo
inc
jecxz
adc
add
iret
rcr
ret
jae
mov
dec
dec
adcb
or
loope
test
inc
daa
sahf
jmp
mov
test
in
pop
outsl
push
ja
push
pop
adc
addr16
out
out
xchg
insb
cltd
dec
inc
fwait
shlb
jo
mov
arpl
in
add
push
subl
dec
jp
insl
jno
cmp
and
fwait
jbe
or
repz
xchg
nop
mov
aam
add
xor
adc
sub
mov
inc
xlat
and
idivb
mov
test
push
test
insb
jno
push
inc
and
inc
mov
inc
mov
cmp
xor
push
daa
mov
mov
dec
cmpsl
out
in
movsb
jecxz
mov
or
dec
lods
es
push
addb
sub
bound
pop
pop
mov
loopne
inc
aaa
ss
out
test
adc
in
sbb
fiadds
add
dec
je
sarb
xor
mov
xor
cmpsb
fs
mov
mov
lock
mov
or
neg
jo
push
nop
pop
out
and
add
pop
iret
cli
jae
test
sub
jge
aam
out
enter
jae
test
das
pop
lahf
push
scas
inc
xchg
pop
mov
jno
mov
js
std
nop
pop
xor
test
inc
push
xchg
sub
sub
push
enter
imul
fsubrl
mov
sti
push
sbb
mov
cltd
sub
pop
insl
push
pop
cmp
or
xor
mov
jl
out
rol
rcrl
mov
cmpsb
das
popa
stos
inc
xchg
mov
leave
pop
cmpsb
mov
mov
out
cli
fldcw
mov
aad
sbb
cmc
dec
mov
in
sub
dec
add
aad
xchg
lods
push
leave
sbb
dec
fidivl
ljmp
jecxz
or
adc
gs
setg
push
jle
or
lret
mov
adc
pop
pop
dec
lods
call
cmp
std
jecxz
xor
cmp
jl
or
scas
sbb
ret
cmp
jge
repnz
sub
lods
sub
jo
sahf
push
mov
pop
lods
xor
popa
mov
mov
push
js
aaa
mov
xchg
loope
or
sbb
cwtl
das
insb
pop
movsl
inc
inc
push
mov
cmp
mov
xor
repnz
cmp
cmp
push
addr16
dec
loope
mov
adc
xlat
sti
mov
rcrb
and
xchg
add
daa
xchg
dec
dec
xchg
add
mov
cmp
and
xchg
fisubrs
pop
add
mov
mov
jb
and
pop
pop
sbb
add
scas
pop
adc
push
rcl
sub
icebp
cmpb
sub
sarb
ja
dec
xor
sub
xchg
xor
scas
push
out
lcall
js
mov
clc
xchg
and
jp
daa
rolb
pop
mov
mov
sbb
sbb
incl
jl
push
or
dec
mov
and
add
shlb
xchg
aam
cltd
sarb
mov
les
push
push
or
scas
jns
fdivl
rolb
repnz
stos
mov
inc
jmp
push
scas
push
lea
inc
out
aas
mov
je
xchg
stos
imul
dec
xor
cmpsl
xor
push
xlat
mov
cs
push
mov
jno
aad
inc
andb
inc
mov
push
fidivl
jmp
in
sbb
stos
call
xchg
cmp
aam
mov
gs
inc
ret
inc
shrb
push
dec
fs
adc
adc
rclb
xchg
test
xor
cmpsb
std
popl
fdivl
pop
cli
xor
sub
sub
or
mov
dec
rorb
popf
test
outsl
push
stos
add
push
add
dec
pop
lock
imul
mov
loopne
sub
es
jnp
ficompl
out
push
push
mov
cmc
ror
lahf
ss
jbe
fs
jae
stos
pop
sahf
sbb
xchg
or
jns
insb
add
stos
enter
gs
cmp
fidivl
out
cmpsl
ficoms
fdivrs
sbb
hlt
out
jecxz
ficomps
jbe
aas
add
mov
mov
stos
inc
test
jnp
repnz
add
mov
sub
jl
cmp
pop
test
sub
les
mov
jge
jmp
inc
stos
sbb
out
ret
adc
cmpsl
dec
xchg
pushf
xor
repz
popa
xor
pop
sbb
insb
add
addr16
push
mov
and
sub
pop
and
scas
les
mov
addr16
mov
sub
xchg
out
ds
movsl
lods
cmp
ljmp
jp
inc
xlat
sub
sub
mov
aaa
into
jae
inc
dec
sbb
jle
and
add
out
and
cmp
inc
fidivrl
js
push
jbe
ljmp
pop
aad
adc
pop
xchg
push
jbe
ds
jb
test
jg
pop
jne
push
xchg
pop
fcoms
xchg
or
test
mov
imul
iret
outsb
stc
mov
cs
and
call
cltd
add
es
or
push
push
stos
sbbb
xor
ljmp
mov
outsb
mov
mov
mov
mov
push
adc
push
jl
add
and
add
aaa
aam
lds
adc
xchg
test
push
fimuls
add
movsl
mov
xor
inc
test
xchg
push
bound
sbbl
add
daa
iret
stos
mov
outsb
sub
lahf
shrl
in
push
mov
mov
mov
inc
cld
loopne
sub
dec
push
xor
ja
lret
push
push
arpl
stc
xchg
mov
fwait
push
lret
fcomps
cmp
push
std
inc
push
scas
enter
hlt
call
loopne
bound
dec
aaa
repz
mov
mov
mov
mov
pop
out
add
aaa
call
mov
and
push
cld
dec
and
sub
mov
dec
jno
arpl
ret
add
sub
push
out
pop
cmpsb
push
jmp
fbstp
or
pop
movsb
loop
sbb
cmp
xor
fdivl
add
sub
ds
push
inc
mov
push
flds
aas
test
push
xchg
dec
jmp
mov
and
aad
jno
rcl
daa
in
and
mov
aaa
inc
mov
xor
xchg
or
sub
jp
fnsave
sub
dec
pop
repnz
js
and
daa
popa
adc
inc
xchg
icebp
or
sub
sbbl
mov
cmp
push
fsubp
fstl
mov
xor
sar
mov
outsb
jp
mov
sbb
inc
mov
pop
push
mov
or
in
mov
in
dec
push
cwtl
or
cmp
pop
mov
mov
aaa
mov
mov
push
leave
arpl
leave
jbe
xor
dec
inc
push
mov
ja
jg
dec
pop
ficomps
lcall
decl
movsl
cmp
rcrb
testb
fsts
dec
fmul
leave
push
iret
mulb
sub
inc
lcall
sub
out
ret
loopne
or
shl
dec
in
mov
pop
icebp
sub
xchg
xlat
stos
mov
push
call
jg
and
pop
jg
ja
enter
lods
mov
fwait
test
gs
push
imul
arpl
dec
dec
push
aam
fsubr
aam
jne,pt
lods
popf
cmp
nop
dec
sbb
mov
pusha
or
js
lds
pop
mov
adc
mov
insl
test
cmp
add
scas
sub
xchg
adc
inc
pop
mov
movsl
dec
data16
add
lods
sub
lock
cwtl
and
arpl
mov
ss
daa
lock
dec
fstpl
sahf
mov
jo
xor
jns
iret
lods
sub
addr16
repnz
jns
mov
sar
icebp
loope
adc
out
xor
adc
movsb
rolb
sbb
mov
mov
testb
fnsave
pop
cmp
leave
sbb
pop
sbb
add
and
icebp
ficoml
insl
push
lock
insl
jp
jnp
push
pushf
das
enter
mov
push
sub
mov
test
lea
fnsave
aam
out
mov
in
addl
push
shl
cmp
dec
scas
add
nop
pop
imul
or
js
mov
push
jnp
mov
push
fsubl
cmp
arpl
push
aad
xchg
negb
sub
insl
ja
or
popl
mov
pop
test
rol
sub
jno
inc
push
add
fcompl
pop
jle
jb
sbb
jmp
sbb
loope
mov
mov
pop
in
push
out
add
fwait
sub
mov
jnp
ds
outsb
adc
add
out
in
addl
sahf
push
movsl
leave
sbbb
sbb
shrb
daa
adc
lret
xor
adc
inc
pop
mov
shll
push
push
loop
ret
mov
pop
les
ljmp
xor
cwtl
fdivs
pushf
sub
mov
inc
shr
lods
popa
inc
sbb
pcmpgtw
imul
popa
push
add
outsb
mov
xchg
sbb
out
sbb
add
push
dec
jmp
xor
xchg
into
fcmovb
cmp
push
lods
xor
js
mov
jg
call
dec
testb
cmp
xchg
jmp
push
pop
repnz
ljmp
add
inc
sbb
popf
jo
jbe
inc
xor
pushf
inc
ljmp
shr
sub
rclb
jnp
sub
mov
dec
sub
xor
aaa
dec
pop
imul
cltd
std
sarl
mov
push
and
imul
pop
cmp
loop
pop
jmp
movsl
leave
jmp
sti
lock
fs
movsb
pushf
mov
or
shl
xrelease
pop
mov
loope
add
pop
outsb
pop
lods
xor
push
cmp
dec
push
mov
les
cmp
dec
shrl
pop
pop
mov
mov
pop
sahf
iret
daa
mov
jge
push
es
dec
mov
xchg
data16
fisubl
xorl
ret
mov
lds
or
pushl
inc
adc
aad
xchg
aam
shl
mov
push
mov
inc
mov
mov
mov
shl
repnz
add
jne
adc
std
mov
pop
cmpsb
jns
into
and
mov
mov
scas
jne
jmp
jl
leave
fcmovne
push
outsl
stc
shl
add
mov
outsl
xchg
in
test
add
inc
mov
fistps
scas
into
movl
mov
mov
jge
pop
imul
adc
sub
inc
out
xorl
jae
jmp
lods
inc
mov
adc
mov
lcall
adcl
pop
loop
popf
in
xor
lods
or
add
repz
addb
addr16
ret
fnstsw
push
shrl
movsb
pop
inc
enter
lods
and
jne
ss
enter
mov
pushf
pop
or
xor
in
in
clts
lds
test
adc
shrb
cmp
add
xor
cmp
jns
mov
fs
aad
adc
push
jl
sbb
test
daa
jg
lods
xorl
notb
inc
dec
les
push
out
popa
into
movsl
cmpl
xchg
call
or
sub
and
insb
xor
fdivs
inc
xlat
xchg
jae
call
inc
or
cmp
mov
fbstp
push
mov
scas
cmpsl
ja
aam
leave
mov
push
push
push
and
into
insl
or
rorb
aas
mov
mov
mov
mov
adc
xlat
insl
mov
js
jmp
xor
jne
cs
adc
jno
adc
inc
add
lods
mov
cmc
mov
push
movsl
cmpsl
mov
iret
hlt
mov
dec
sub
fistps
lea
dec
mov
testb
bnd
je
scas
test
xchg
ficoml
ds
neg
call
and
mov
cmpl
iret
lea
lods
and
sbb
scas
jp
ret
adc
mov
arpl
xchg
ret
pop
pop
nop
sarb
sbb
jg
mov
jge
cmc
mov
jmp
call
sbb
dec
xchg
mov
push
sbb
int
adc
dec
jmp
pop
push
ljmp
xor
sub
imul
dec
sub
in
leave
jbe
pop
lret
int
jbe
test
push
popf
pushf
test
add
fsubrs
adc
push
movsb
push
notl
mov
jb
out
inc
repz
je
outsb
std
mov
push
test
loopne
jmp
lock
mov
add
ljmp
sbb
sub
dec
test
cmp
ret
hlt
push
and
iret
mov
subl
in
scas
mov
mov
into
dec
loope
cmc
lahf
cmp
fcomi
gs
js
xor
test
xchg
aam
rcl
xor
pop
repnz
test
mov
aaa
mov
adc
pop
jp
lods
les
mov
pop
daa
inc
test
arpl
xor
les
data16
cld
xchg
jp
loope
pop
aaa
cmpsl
inc
daa
lcall
adc
je
or
dec
andb
cmp
mov
push
sbb
mov
insb
adc
pop
pop
and
add
push
lock
icebp
cld
cmp
sbb
test
lcall
sbb
sub
jne,pt
lcall
invd
or
mov
pop
mov
mov
and
mov
xor
pushw
repnz
mov
es
loope
xor
pop
mov
lock
push
jmp
sbb
and
ja
xor
rcrl
dec
and
icebp
outsl
jmp
out
xchg
or
nop
insb
daa
mov
ljmp
add
or
clc
mov
jl
jb
cmpsl
xchg
sub
gs
cwtl
xor
inc
out
jns
inc
jmp
jo
in
or
fistl
pop
xorl
xchg
repnz
lds
pop
pop
mov
popf
loopne
ret
hlt
sbb
and
jl
dec
mov
aam
ss
xchg
ss
sbb
add
aad
pop
mov
adc
mov
popf
in
int3
out
inc
xlat
jno
iret
in
pop
adc
inc
ja
ja
shlb
into
sub
jge
out
cli
daa
lahf
mov
pop
and
insb
jp
out
and
fisubrl
xor
cmp
arpl
int3
mov
mov
lret
fcompl
js
pusha
cli
mov
jg
jge
shlb
into
ficoml
pop
lret
mov
lret
ds
ja
call
js
mov
aas
cltd
out
xor
sub
adc
sbb
aam
mov
loopne
mov
add
jle
icebp
jmp
and
in
jae
inc
fs
and
cmpsl
sar
mov
mov
or
xchg
sbbl
xchg
adc
rorl
inc
subb
xchg
ss
jbe
push
in
int
jno
mov
jp
jg
es
lea
clc
shlb
xor
rol
repz
inc
sub
jecxz
add
and
pop
jne
in
mov
add
push
adcb
xchg
pushf
and
inc
imul
inc
loope
add
add
pushf
add
sub
or
fiaddl
jae
adc
adc
arpl
jge
xchg
xchg
aaa
dec
cmp
imul
iret
decb
jle
ror
into
push
rcrl
xor
jmp
scas
push
es
pop
nopl
dec
sub
enter
inc
push
out
stos
jge
sbb
scas
add
jmp
enter
lds
and
call
cmp
addr16
dec
rcll
fbstp
mov
mov
vandpd
mov
xor
shll
push
in
lock
or
outsl
test
push
push
fistl
mov
and
or
push
add
push
pop
add
rcrl
pop
add
mov
test
ret
dec
and
iret
gs
cmpsb
xchg
push
mov
int
push
cmp
add
in
sub
repz
push
test
mov
xchg
mov
shl
sbb
pop
xor
mov
jl
or
fildll
mov
push
popf
and
push
inc
jmp
inc
aaa
mov
mov
dec
add
clc
pop
clc
push
sbb
sbbl
sub
cmpsl
cmp
stos
pop
mov
sbb
cmpsb
sbb
lcall
cmpsl
and
pop
push
sub
stc
adc
int3
fdivrl
mov
in
jb
test
lds
leave
loopne
add
in
and
mov
in
clc
pop
jg
cmp
arpl
popf
flds
pop
jg
in
rcrl
jns
insb
outsl
enter
or
imul
rclb
mov
lock
adc
and
outsb
adc
add
fcompl
je
cld
lds
add
cmp
or
stc
mov
jecxz
into
xchg
mov
and
mov
sbb
sub
sub
push
mov
scas
and
sub
dec
jmp
adc
mov
je
jb
not
dec
scas
in
loopne
dec
lock
aas
push
jbe
aaa
push
pop
xlat
leave
test
cmc
xchg
add
push
daa
outsl
cmpsb
push
cld
push
js
add
push
fcomi
popa
outsl
loop
xorl
and
data16
cmpsb
test
in
test
cmp
jecxz
pop
adc
insb
pop
neg
aam
jns
mov
mov
pop
in
jecxz
mov
and
inc
repnz
jne
cs
jns
jnp
sub
addr16
in
fisubrs
popa
les
imul
lahf
and
rcll
add
inc
mov
pop
in
push
pop
lock
daa
pop
js
aas
ja
cmc
push
push
in
ss
out
out
dec
insb
sarb
js
dec
pusha
iret
cmc
ss
mov
nop
mov
cmc
or
aas
dec
pop
xchg
mov
push
pop
out
stos
inc
and
inc
enter
xorl
cmp
pop
or
ljmp
inc
push
aas
or
adc
xchg
jmp
xor
test
outsb
push
ljmp
mov
or
pop
xchg
push
cmc
cmpsb
or
mov
jns
mov
test
inc
fnsave
test
pusha
pop
jns
sub
mov
and
mov
testl
das
mov
and
mov
mov
mov
in
mov
ret
xor
insl
cli
adc
lods
jle
mov
sahf
imul
adc
lcall
cmpsl
aas
add
or
mov
lea
stc
shlb
pop
repz
addr16
fwait
mov
push
jnp
xor
enter
ret
or
add
mov
icebp
adc
imul
pop
sub
aaa
bound
push
jge
stos
xchg
popf
mov
xchg
mov
jmp
incl
inc
loope
rol
test
test
out
jmp
xchg
arpl
stc
jb
cmp
pop
cli
mov
push
dec
out
mov
hlt
add
jl
push
stos
mov
lods
loope
add
aad
std
pop
imul
repnz
lds
lahf
xor
mov
sbb
xchg
dec
or
out
cs
jo
pop
push
mov
dec
xchg
int
mov
add
cs
push
testl
in
mov
in
sti
sbb
mov
int
cmp
pop
mov
or
mov
rcl
loope
ds
mov
push
les
test
hlt
push
push
imul
push
pop
nop
in
jae
mov
inc
lods
inc
negl
out
fbstp
jo
mov
lea
ja
pop
ljmp
dec
xchg
adc
pop
aam
pop
adc
xor
xor
jns
jle
pop
das
mov
int3
in
call
dec
jecxz
xor
mov
clc
fs
push
xchg
pop
add
ficompl
fnstenv
xchg
loope
clc
xor
pop
sarl
ret
jg
and
out
sbb
sub
jo
notl
lahf
mov
test
dec
jno
ljmp
subl
xchg
shrb
negb
call
pop
test
sub
popa
ss
std
cltd
enter
mov
sub
mov
lods
jp
and
stos
adc
push
test
push
iret
xor
popf
in
adc
adc
and
adc
inc
mov
aaa
popl
mov
mov
inc
ret
into
sub
dec
pop
cwtl
push
dec
loop
in
push
out
into
and
icebp
xchg
sub
in
cmp
cwtl
push
adc
lret
repnz
ss
testb
mov
pop
aas
hlt
adc
cmp
pop
rcl
pop
cs
inc
clc
mov
sbb
push
cmpsl
shll
je
pop
ss
inc
cmp
push
inc
pusha
movsb
inc
xchg
fs
sub
mov
fcmove
dec
pushf
arpl
popa
xor
mov
jno
dec
xchg
pop
jge
clc
push
adc
sbb
les
in
inc
ret
mov
adc
fadds
imul
cs
cli
sbb
push
cmp
dec
push
pushl
mov
push
xchg
cmpsl
in
xchg
adc
pop
popf
popf
or
movsb
mov
lds
aaa
or
mov
push
jl
pusha
inc
aas
push
jb
sbb
push
leave
push
cmp
fbstp
push
insl
sbb
or
fsubs
ret
jo
xor
mov
push
mov
jns
imul
rcl
mov
pusha
arpl
stos
popa
dec
dec
shll
push
je
jno
insl
call
popa
cmp
sahf
ss
fwait
xchg
lahf
iret
fnop
xchg
mov
lock
lods
inc
mov
dec
bound
mov
movsb
repnz
inc
push
and
xchg
add
outsb
add
sub
mov
lock
push
mov
add
and
add
pusha
insb
pop
push
xlat
hlt
adc
mov
pusha
stos
ret
or
or
push
sbb
call
orb
or
roll
aaa
ss
sub
aam
shlb
adcl
mov
jbe
pop
sub
mov
sub
arpl
in
aas
dec
pop
push
clc
cld
push
xchg
iret
jecxz
aam
mov
sub
mov
in
mov
ret
add
into
jo
add
lods
in
popl
mov
pushf
out
lcall
lahf
out
fwait
mov
dec
popf
cmpsl
repnz
popf
mov
clc
fwait
xor
jg
mov
dec
mov
mov
pop
inc
out
out
pminub
sub
scas
dec
push
std
mov
mov
fistl
pop
lock
fdivl
fwait
stc
mov
sub
mov
xchg
cld
scas
shrl
mov
daa
or
and
dec
push
shlb
add
sbb
stos
mov
jl
mov
sub
inc
sbb
mov
mov
stos
mov
repnz
push
mov
int
sub
xorl
shrl
push
sub
jbe
dec
mov
dec
mov
bound
pop
in
aam
add
or
xor
jnp
adc
rcl
add
lods
mov
push
lret
adc
cwtl
lcall
jle
jmp
inc
xchg
popf
pop
mov
rolb
or
arpl
mov
inc
or
push
ds
addr16
shl
fldt
insb
scas
adcb
mov
ljmp
cmpsb
or
ret
jo
jecxz
repz
sub
scas
jb
xchg
dec
adc
fsubs
xchg
sub
cli
pop
dec
dec
adc
inc
fwait
sub
add
xor
and
sub
test
inc
nop
ljmp
mulb
cmp
inc
sbb
dec
and
jmp
out
or
pop
xchg
dec
pop
out
mov
aam
adc
pop
mov
and
adcl
mov
push
jns
pop
lahf
add
mov
stos
dec
jecxz
pop
int3
lret
mov
aad
mov
lret
stos
out
jg
out
mov
ljmp
inc
pop
insl
mov
sub
lret
push
sub
push
call
cs
aaa
push
inc
outsb
aad
add
jns
add
cmpsb
jne
call
xor
mov
push
loop
mov
mov
cltd
cwtl
dec
movsb
ud2
mov
stc
jmp
cs
pusha
int
mov
mov
leave
mov
mov
mov
cmp
dec
scas
out
and
fcmovb
imul
cmp
fdivrs
in
xor
mov
out
test
fidivrs
or
pop
int
das
pop
add
lret
outsl
adc
rsqrtps
cmp
cmp
fs
fwait
cli
dec
fnstcw
scas
lods
inc
and
push
sbb
icebp
nop
adc
cmpsb
arpl
cltd
push
mov
cwtl
cmp
sahf
clc
mov
mov
add
adc
shlb
xor
cli
dec
scas
fstpt
outsb
sbbl
add
test
js
fnsave
out
xor
scas
inc
fs
cmp
out
lods
pop
dec
test
jns
repz
in
lds
sti
xchg
les
mov
and
or
lret
sbb
fucomip
push
pop
add
sbb
inc
outsl
es
adc
mov
lcall
jo
pop
icebp
movsl
cmpb
xchg
sbbb
nop
xor
sti
inc
xlat
jl
dec
in
fbld
outsb
das
dec
mov
loop
shll
adc
test
out
outsb
inc
cmp
cld
inc
adc
push
and
cli
or
cmpsb
xor
push
outsl
dec
xchg
mov
test
rcll
lahf
push
mov
addr16
js
jbe
ja
jg
and
ret
out
inc
gs
xor
push
add
loope
adcb
imulb
mov
adc
out
pushf
push
push
ret
lea
outsl
mov
popf
sbb
in
insl
fs
sahf
add
dec
sbb
ds
loopne
and
fisttpll
mov
je
sub
das
and
dec
or
out
popa
mov
jg
pop
pop
mov
out
jle
daa
cli
shrl
adc
xlat
lods
mov
add
inc
or
jmp
cmp
rep
ss
inc
leave
jge
loope
fmuls
push
dec
test
and
jne
pop
xor
cmp
out
jb
mov
mov
jbe
dec
in
fisubrs
xor
cmpsb
rcrb
call
ret
push
pushf
clc
scas
dec
mov
ficomps
jno
mov
jns
or
push
push
sbb
mov
and
adc
divl
movsl
cld
and
addl
dec
and
ret
outsb
adc
mov
jbe
dec
lahf
ds
xchg
and
and
ret
sahf
shrl
dec
subb
int3
sbb
and
pop
dec
dec
jbe
leave
es
mov
dec
shll
mov
mov
and
cld
adc
maxps
pop
repz
in
fcmove
lret
shrb
ds
movsb
ljmp
pushf
pushf
dec
fmull
cld
arpl
jmp
ss
imul
push
mov
mov
jmp
mov
lea
movsb
addb
sub
inc
pop
and
icebp
dec
sbbb
test
shrb
pushf
shrl
imul
xor
fnstsw
sub
sub
add
shll
pop
or
xchg
xor
mov
pop
jno
popf
stc
fbstp
movsl
out
mov
mov
push
or
imull
mov
ret
pop
inc
ret
lret
jb
out
pop
cmp
ds
pop
hlt
or
movsl
adc
aaa
imul
sbb
lds
jb
pop
cmpsb
xchg
pop
fdivrs
les
sub
scas
lods
and
sub
pop
cmp
cli
dec
mov
push
testb
test
add
xchg
lods
or
mov
lds
push
outsl
mov
inc
add
movsb
mov
cli
push
jae
test
and
mull
add
cwtl
or
sahf
adc
dec
adc
mov
jns
lea
es
mov
addr16
fmuls
jg
lods
pop
movsb
sub
adc
pop
sbb
rolb
lret
xor
xchg
sub
adc
dec
popf
sub
int3
ret
ljmp
lcall
ljmp
xlat
push
icebp
loop
repz
mov
dec
addl
and
subl
pop
dec
mov
cwtl
push
adc
cmpb
mov
jo
mov
mov
jp
in
repnz
and
lea
js
es
fwait
xchg
ja
pusha
xor
pop
mov
mov
movsl
fs
push
lods
movsl
insb
adc
jnp
xor
cltd
in
ret
jg
aaa
cli
mov
sub
rolb
call
arpl
push
out
jnp
pop
int3
add
outsl
add
lock
sbb
test
popf
mov
jbe
div
adc
test
hlt
js
sbb
mov
sbbl
or
push
lret
sbbb
cmpsb
xchg
fadds
mov
arpl
push
sahf
mov
fnstcw
pop
pop
inc
mov
into
clc
in
push
movsb
xlat
outsb
xlat
sub
pushf
sbb
and
orl
pop
shr
inc
in
int
insb
add
mov
lods
test
xor
mov
pop
repz
jnp
test
push
fld
call
lds
mov
jnp
sub
bound
jns
call
and
jno
dec
es
ja
test
int
jns
xchg
add
pop
std
adc
jb
sbb
int3
mov
push
test
xchg
cmc
out
pushf
xor
jmp
xor
fldcw
and
pop
leave
xlat
idiv
fwait
xor
sbb
push
sbb
ret
sahf
mov
jno
mov
clc
test
insl
lret
or
inc
jge
cld
loop
push
mov
sub
es
xor
mull
mov
adc
shll
std
jo
das
adc
jmp
in
ret
push
sbb
insl
xor
out
dec
pusha
idivl
imul
xor
imul
bound
pop
add
int
je
mov
mov
test
cs
mov
adcl
push
test
push
fidivl
loope
lods
enter
subb
arpl
mov
sbb
scas
into
movsl
int
pop
adc
jge
push
movsb
rolb
add
fcoms
pop
roll
movsb
aaa
adc
sbb
push
mov
xchg
mov
jae
push
test
xor
xchg
lea
jnp
je
ret
test
jg
sub
call
inc
xor
sbb
lods
and
push
leave
in
push
icebp
sub
and
pop
outsb
jecxz
jecxz
dec
orl
pop
sti
xchg
mov
lcall
and
popf
pop
das
dec
add
pop
fwait
and
jmp
mov
scas
push
lods
xlat
cmp
push
pop
in
pop
sbb
mov
sub
pushf
leave
sbbb
xor
mov
jns
daa
inc
adc
scas
adc
jecxz
lret
clc
and
add
mov
arpl
pop
je
adc
sub
push
fstpl
cmp
pop
jl
sub
popa
pop
stos
fmul
sbb
stos
inc
pop
shrl
loop
inc
push
adc
fisubl
sbb
xlat
dec
stc
inc
out
aaa
loopne
add
inc
icebp
mov
pop
adc
push
xor
notb
mov
push
aad
dec
out
out
push
movsl
push
or
pop
imul
dec
push
shl
sbb
mov
and
orb
pop
imul
popf
fidivrs
pop
cld
ds
mov
sbb
pop
adc
xor
cmp
jnp
les
pop
fisubs
cmp
pushf
insl
xchg
and
mov
pop
fldt
cmp
mov
int
aam
push
pop
pusha
lods
xchg
mov
mov
fdivl
shll
mov
jg
and
sub
sbb
lods
sbb
loopne
xlat
jle
mov
aaa
int
pop
cmp
jge
xor
push
pop
imul
sbb
jns
xchg
into
lret
iret
rclb
setbe
inc
xlat
js
imul
pushf
xor
mov
mov
jbe
std
negl
xor
sbb
pushf
jo
dec
pop
dec
lret
int
shlb
addr16
pop
int
pop
jno
push
push
in
lods
cmp
aam
clts
cwtl
scas
mov
sahf
xor
shr
mov
ss
inc
pop
xor
int3
push
cmpsl
pop
cmpsb
mov
xor
enter
or
cmp
xchg
mov
or
repnz
mov
sarl
test
add
enter
cmpsb
cmp
lods
pop
fwait
and
in
imul
insb
jle
jb,pt
pop
mov
clc
jg
rolb
add
insb
sti
adc
push
xchg
or
adc
call
sbb
mov
out
mov
dec
push
pop
imul
test
inc
cwtl
fwait
lock
fldenv
sbb
andl
gs
mov
movsl
mov
mov
fucomi
pusha
mov
lahf
testb
adc
icebp
cmp
loope
sbb
sbb
dec
mov
or
or
mov
inc
mov
ja
mov
push
sbb
inc
lods
inc
js
clc
mov
faddl
adc
push
ss
mov
inc
fsubrl
pop
xor
dec
arpl
out
aam
push
mov
mov
adc
mov
sub
mov
inc
jecxz
push
jmp
inc
add
bound
mov
pop
sub
xchg
mov
cmpsb
lock
sub
xchg
dec
loop
inc
enter
loopne
inc
or
pop
push
fiadds
fmuls
fidivrs
aam
add
mov
lods
sbb
je
cmp
fidivs
mov
std
xor
nop
stos
dec
pop
inc
pop
nop
dec
push
addr16
cs
ss
sub
add
jl
jl
and
and
js
roll
mov
xor
sbb
xor
int3
cmp
outsl
insb
in
push
push
addb
jne
out
xor
cld
push
pushf
bound
pop
dec
add
pop
mov
mov
test
inc
jmp
es
cpuid
shll
pop
sahf
popa
jl
insb
cmp
jl
mov
mov
mov
aas
call
or
mov
sub
mov
sarb
mov
mov
or
sub
roll
insb
ret
inc
fcomps
ds
adc
fstl
pushf
lds
aad
inc
sahf
lods
inc
andb
out
jecxz
in
aas
push
fisttpll
andb
cltd
mov
sub
test
jmp
icebp
cmp
sub
inc
fcmovnbe
pop
mov
and
orl
cltd
es
idivb
push
ja
mov
aaa
jb
inc
pop
jmp
mov
fildll
ret
shr
dec
cmp
notl
push
and
lds
push
jle
mov
cmpsb
push
andb
add
mov
mov
std
xor
xlat
inc
aas
or
adc
ret
fldcw
dec
xchg
aam
lcall
inc
inc
push
lock
jns
dec
inc
jl
inc
cmp
sbb
outsb
mov
pop
dec
adc
adc
sub
outsb
mov
pop
mov
pusha
xor
xchg
adc
std
xchg
cli
stc
dec
dec
loopne
sbb
sbb
mov
int3
popa
sub
add
push
dec
mov
fmuls
xchg
push
sahf
mov
cmp
sbb
outsb
or
sbb
loop
enter
mov
pop
into
subl
pushf
and
sahf
subb
stc
das
sub
or
xor
push
subb
daa
push
lcall
lahf
push
jae
leave
nop
cmp
mov
xchg
lahf
or
dec
inc
sub
shr
adc
aas
in
xlat
test
lock
aaa
mov
andb
je
inc
jo
dec
ds
ja
aam
into
pop
scas
scas
mov
fnsave
fisubl
fbstp
mov
cld
or
lcall
sub
daa
pop
dec
loop
adc
add
and
cmc
pusha
scas
lahf
inc
push
xchg
je
push
into
andb
push
xchg
test
cltd
xor
push
inc
push
adc
insl
xchg
out
wbinvd
mov
cmp
imul
mov
ret
inc
ret
pop
adc
shrb
and
lretw
adc
and
jbe
cmp
outsb
clc
push
or
out
cmp
fsubr
inc
mov
adc
ljmp
mov
inc
popa
clc
adc
shlb
jmp
and
rcr
pop
scas
popf
jge
inc
cmpb
nop
movsl
fidivl
fadd
dec
dec
mov
mov
push
add
xlat
mov
or
cmpsb
ds
adc
or
dec
sub
insl
and
call
xor
xchg
pop
movsl
add
and
std
xlat
mov
es
movl
fadds
xor
or
das
inc
pop
xchg
inc
xchg
jnp
enter
sbb
decl
push
mov
fistps
inc
stos
ss
je
lods
fsubl
mov
push
divb
mov
mov
adc
iret
xor
iret
inc
dec
fnsave
or
jle
adc
mov
cli
out
cwtl
lcall
pop
rcrl
inc
inc
jo
sbb
ja
fwait
gs
fdivs
push
scas
mov
or
insl
aaa
testb
add
sbb
ficoms
pop
dec
lret
mov
insl
inc
mov
sahf
add
dec
add
jp
push
cmpsb
das
jp
pop
push
sub
ljmp
inc
lods
and
loop
sbb
and
rclb
insl
xor
out
and
std
bound
dec
lock
xchg
pushl
hlt
movsl
mov
arpl
push
stos
addb
cld
mov
xor
data16
test
jo
mov
lods
push
stos
jl
mov
loope
or
mov
jmp
movl
xor
fs
inc
popa
add
jp
add
jl
rcl
sbbl
jl
lahf
cmp
popf
adc
mov
out
dec
aad
ret
jp
js
sub
rcrl
mov
push
addl
jbe
cmp
inc
leave
test
mov
daa
enter
bound
in
and
xor
out
adc
imul
iret
pop
add
sub
mov
icebp
pop
pop
xchg
call
cmp
or
int3
std
mov
cltd
fmulp
mov
and
push
in
add
int3
icebp
or
pop
les
imulb
mov
jge
lcall
sub
imul
jne
xlat
outsl
jo
dec
arpl
lret
cld
jecxz
adc
lret
data16
push
aas
jle
scas
pusha
dec
inc
rolb
aas
dec
es
ja
into
cmp
cmovne
mov
pop
xchg
rorb
cmp
xor
push
cmp
and
lret
clc
mov
pop
dec
outsl
movsl
add
dec
andb
sbb
jle
mov
sbb
test
cs
mov
mov
mov
testl
daa
scas
scas
popf
or
cmp
repz
fisttpl
scas
push
mov
test
outsl
mov
pop
hlt
rcll
das
int
data16
pop
out
inc
push
lahf
out
popf
lods
pop
or
dec
pop
push
jo
icebp
jnp
add
nop
jge
and
mov
jbe
mov
add
and
pop
push
and
cld
xor
dec
pop
dec
jo
dec
mov
dec
shll
cmc
sbb
gs
ds
das
push
rorl
addl
sub
add
aaa
js
in
test
cmp
mov
popa
dec
push
jbe
call
or
movsl
jne
in
clc
add
sub
mov
inc
and
add
int
gs
jb
sarb
pushf
mov
lods
test
mov
cmp
je
add
and
mov
inc
or
ret
out
or
das
cmpsb
adc
cmpsb
imul
fistpl
call
sbb
outsl
lret
add
into
xor
call
rorb
xchg
push
call
int
into
outsb
pop
mov
pop
mov
rcr
ret
mov
loop
mov
leave
sti
subb
icebp
jo
and
repz
mov
jmp
push
loopne
movsb
mov
and
shl
push
dec
in
sbb
rcrb
mov
cmp
push
subb
lret
dec
out
and
and
hlt
or
jne
popf
leave
imul
pop
fisubl
lret
add
das
xchg
setbe
adc
inc
notb
mov
mov
jmp
fcmovb
test
je
dec
lods
mov
pop
insb
cmpsb
daa
adc
add
test
mov
test
outsl
loop
adc
mov
rclb
push
and
or
out
adc
test
lock
in
or
cmp
add
mov
rcll
xorl
jmp
ret
popl
vcvtps2dq
sahf
hlt
nop
shl
dec
adc
xlat
lods
mov
sub
int
ret
push
dec
out
dec
aam
arpl
rcr
pop
cmp
push
sbb
les
dec
les
inc
inc
jo
push
sahf
bound
int3
mov
gs
jb
lcall
jo
out
leave
mov
stos
jmp
aaa
je
mov
out
dec
xorl
pop
stos
bnd
sbb
out
ja
adc
xchg
mov
push
fidivs
or
cmpsl
and
rorl
pop
cmp
pop
dec
dec
aam
sub
outsl
rolb
pusha
pop
pop
lcall
dec
aad
jmp
pop
inc
jb
lcall
insb
lahf
xchg
fwait
ret
sub
pop
pop
ss
pop
push
mov
pop
jecxz
icebp
rcrl
mov
mov
clc
dec
sarb
divb
std
bound
jne
mov
dec
xchg
sbb
repz
pop
cmp
mov
sub
dec
sub
loope
inc
sbbl
stos
inc
xchg
in
and
jb
push
stc
rcr
adc
inc
call
sub
popf
clc
loopne
in
cmpsl
jecxz
push
mov
mov
fadds
fiadds
adc
inc
bound
fs
jo
insb
cmpsb
mov
pop
movl
in
into
out
roll
jmp
setne
int
adc
lods
ret
push
add
pop
mov
xor
jno
jmp
adc
out
and
add
pop
jl
adc
lods
popl
imul
add
std
mov
and
adc
jae
sub
xchg
sub
sti
adc
mov
sbb
insb
repnz
inc
adc
adc
add
xor
loopne
mov
dec
aam
pop
add
sub
int3
loop
xchg
adc
sti
push
sub
lahf
ss
cmp
ja
cmp
and
dec
test
pop
add
test
shrl
inc
pop
mov
xchg
mov
mov
cld
add
pop
jl
pop
push
icebp
lea
cld
add
mov
jmp
mov
sbb
mov
fmull
lock
dec
movsb
dec
out
sub
mov
mov
mov
cwtl
js
int
xchg
xchg
xchg
mov
les
pop
adc
xor
add
mov
in
imul
test
push
xchg
cmpsb
lcall
jge
sbb
push
sub
jp
lds
cmpsb
fcmovnbe
push
in
ret
add
cmpsb
cmp
add
pop
sbb
add
bound
lods
cmp
orl
fcompl
mov
push
popf
addr16
jbe
inc
fwait
sti
aam
and
mov
les
notb
movsb
jnp
test
mov
out
mov
lods
push
loopne
lcall
mov
je
inc
pop
push
cwtl
cmp
notl
test
in
data16
mov
leave
jl
dec
pause
push
pop
insl
ficompl
je
jae
xor
pop
mov
cmp
and
movsb
fpatan
mov
lret
xchg
lea
cmp
dec
inc
add
fwait
das
lret
lahf
idivb
jmp
sti
xchg
or
sbb
and
out
cmpsb
adc
xchg
lahf
mov
sahf
xor
jecxz
jle
push
enter
sbb
pop
daa
add
pushf
leave
xchg
xchg
pop
scas
call
les
sahf
pop
xor
adc
cmpl
cld
movsb
and
les
cmp
lcall
movsl
push
cmp
push
mov
push
xchg
dec
cmc
push
int3
movsl
cwtl
push
xchg
inc
inc
xor
push
mov
push
ja
out
mov
xchg
test
xorl
leave
xchg
inc
imul
cmp
stos
addb
sbb
in
mov
cmp
add
dec
or
sarb
add
gs
cmp
std
mov
push
repnz
or
and
jge
test
pop
xor
fisubrl
xchg
cmc
fcomps
sub
mov
cmpsl
stos
adcl
inc
mov
xchg
cmp
pop
xor
loop
push
mov
dec
pop
cmp
jbe
aas
mov
repnz
inc
pushf
cmc
fdivrs
rcrl
outsb
rolb
stos
inc
dec
xorb
insb
sub
pop
out
mov
scas
arpl
fnstcw
inc
loopne
push
or
insl
cmp
jo
cli
xor
sub
jno
jnp
ss
in
mov
sbb
lahf
jo
jecxz
sub
jo
outsl
xchg
xchg
aas
jl
das
test
inc
rcrb
sbb
xchg
or
pop
xor
ds
jecxz
movsl
dec
popf
cmp
sub
das
rcll
std
js
loope
cmp
inc
add
xchg
jle
int3
fidivrs
mov
pop
lcall
mov
test
ficoml
lret
lret
jae
in
mov
mov
dec
adc
les
add
adc
orps
xchg
pop
shrb
jle
clc
fstpt
sbb
pushf
push
mov
int
popf
scas
lcall
hlt
fbstp
pushw
jne
inc
jnp
mov
adc
mov
enter
adc
mov
sahf
xor
lods
data16
ss
xchg
es
popa
aas
dec
mov
mov
xor
mov
repz
xchg
push
pop
dec
cmp
ds
fsubs
sub
xchg
and
and
mov
dec
outsb
outsb
in
movsl
sbb
out
loop
or
inc
and
mov
negl
mov
ljmp
call
dec
aas
jle
fsub
aad
enter
sahf
flds
stos
and
add
lret
outsb
add
fsub
adc
dec
mov
xchg
cmp
jae
inc
in
out
pop
sub
xchg
push
mov
jnp
cld
mov
pusha
mov
jno
sub
lods
clc
stc
pop
mov
xor
data16
xchg
sub
aas
in
push
ds
jmp
and
jae
pushf
shr
clc
test
mov
pop
cmp
mov
ret
push
shll
out
xor
in
cs
fcomi
mov
xor
push
xchg
sti
pop
nop
push
insl
cld
sub
notl
insl
std
dec
cmp
stos
cmc
push
cmp
nop
mov
add
pop
in
inc
dec
jp
ficompl
mov
add
mov
push
inc
int3
fadds
ja
and
es
in
subb
dec
push
jne
jle
and
pushf
ljmp
popf
stc
pop
dec
imul
popa
out
cmp
imul
inc
js
cmpsb
and
or
scas
js
nop
ret
mov
pop
sub
test
mov
mov
xchg
or
push
test
in
pop
fnstsw
in
int
clc
mov
shl
fstpt
sub
or
sbb
and
data16
xchg
loope
aaa
xchg
pushf
ret
jbe
cmp
pushf
xchg
lret
jb
test
stos
adc
dec
rolb
ds
in
divb
icebp
sarl
xlat
push
add
movsl
jbe
mov
cmpsb
mov
mov
xchg
in
maxps
dec
into
push
test
xchg
xor
andl
les
shlb
shlb
mov
icebp
arpl
orl
dec
sbb
and
stos
cmp
in
or
in
mov
into
sub
mull
push
rol
add
adc
adc
sahf
add
push
lods
xchg
add
xchg
insb
scas
xchg
xchg
add
shrb
mov
ficoms
jb
sbb
cmp
js
cmp
dec
hlt
orl
pop
ret
dec
inc
bound
adc
std
lods
xchg
das
mov
pop
mov
shrl
pop
shll
lock
dec
cmc
xchg
mov
xlat
mov
jle
inc
and
inc
push
or
mov
lret
cmpsb
cld
jno
adc
loopne
sub
xchg
adc
in
scas
inc
xlat
or
insb
js
leave
cmp
push
daa
nop
mov
inc
loop
dec
push
cmp
xchg
das
add
pop
mov
fwait
and
add
shl
mov
nop
insb
fldcw
cmp
mov
dec
ljmp
pushf
es
out
xchg
out
mul
mov
imul
cmp
and
jno
adcb
pop
gs
arpl
cltd
xor
and
jnp
pop
inc
inc
and
scas
shrb
mov
ljmp
push
or
fiadds
or
sbb
sub
lock
scas
gs
mov
aam
add
or
cmpsb
adc
fsts
bnd
sub
aad
mov
repz
enter
jp
pushf
sub
pop
imul
fwait
or
testb
popa
ds
outsb
leave
pop
scas
lahf
add
sub
xor
push
push
aam
inc
mov
ret
outsl
sbb
out
jge
push
fwait
jmp
es
adc
mull
ret
js
jl
fistps
mov
jb
ss
in
push
mov
add
fbld
movsl
adc
sub
fnsave
sti
cs
mov
sti
test
les
leave
fsubrs
inc
cwtl
cltd
jb
inc
push
jmp
loope
mov
pop
xchg
push
insl
cli
or
xor
inc
loopne
xor
push
imul
jmp
inc
cltd
xchg
xorb
stos
bound
pop
push
rcll
shl
in
imul
xlat
test
aad
jecxz
jbe
lock
gs
sbb
shll
push
insl
insb
adc
and
xchg
repnz
das
jae
iret
push
das
jb
xchg
push
cmpsb
ds
or
or
vcvtpd2psy
bound
pusha
sti
or
pop
daa
mov
repz
dec
push
outsl
inc
ljmp
enter
mov
jg
lret
jne
dec
icebp
mov
clc
or
sahf
or
sahf
xchg
sub
mov
test
dec
mov
cltd
imul
out
push
sahf
xchg
pusha
rcll
add
popa
and
rolb
cmpsb
in
inc
mov
sub
movsl
out
sbb
int
jnp
fldcw
test
xchg
or
enter
mov
xor
in
sbb
rclb
jmp
in
cltd
pop
addr16
ss
ret
jns
mov
fldcw
pop
repnz
ss
pop
test
xor
jp
shrl
mov
push
add
adc
cmpsb
jne
ficoms
add
dec
pop
jecxz
mov
push
cmpsb
les
xchg
out
inc
dec
mov
out
adc
inc
pusha
mov
mov
cwtl
mov
leave
insl
mov
sbb
stos
dec
fsubrl
pop
jmp
sub
aad
gs
jno
mov
xchg
dec
in
test
lret
out
rol
enter
push
mov
pop
jecxz
cmpsb
in
sub
cmp
mov
dec
pop
daa
mov
jecxz
test
test
add
push
xchg
rol
mov
xchg
mov
sahf
add
iret
and
inc
inc
xchg
inc
out
cmpsb
sbb
sbb
sbb
adc
lcall
jns
pusha
push
cmpl
pusha
popa
cmp
push
push
cli
jae
lea
jb
mov
rcr
jecxz
test
ds
pushf
mov
ljmp
push
mov
push
sahf
notb
lcall
sbb
fwait
mov
bound
das
pop
call
mull
ret
jnp
outsl
daa
mov
cmp
pop
pop
imul
cmpsw
inc
repz
test
mov
loop
sbb
loope
pop
insb
xchg
dec
pop
not
and
es
mov
add
rclb
mov
sub
daa
mov
jg
movsl
addr16
clc
imull
shrl
fsubp
and
push
xor
mov
movsb
inc
xchg
xor
dec
stos
push
shlb
cmpsl
mov
mov
mov
pop
fcoml
or
shrl
sub
mov
loopne
sbb
popf
scas
inc
cmp
mov
aam
xchg
stos
xor
icebp
cmp
jecxz
ljmp
arpl
cmp
loop
bound
xchg
dec
je
fistl
hlt
push
call
loopne
outsl
cmp
add
js
adc
inc
lcall
test
out
cld
add
push
cmp
inc
not
addr16
sub
stc
cmp
outsl
pop
mov
xchg
jp
leave
into
sbb
add
mov
adc
dec
pop
add
cmp
test
popa
jbe
dec
mov
inc
jb
out
imul
xor
ja
lret
and
cmp
cmpl
mov
mov
hlt
jne
aad
je
push
push
xor
mov
mov
cmp
popf
ljmp
pushf
addb
ds
or
push
mov
mov
mov
cmpsb
push
in
repz
fcomip
cmp
fisubl
orl
bound
adc
or
sbb
orb
mov
idivl
out
jmp
push
xchg
cs
pop
addr16
sub
add
pop
cltd
xor
add
and
push
test
and
in
xchg
inc
push
pushf
pusha
xchg
xor
cmp
imul
push
add
outsl
subl
fnstenv
jno
test
add
sti
out
and
shlb
mov
pop
dec
jecxz
cld
mov
xchg
cltd
cmp
inc
mov
push
call
fstl
lods
sub
sbbl
jns
in
shlb
mov
in
call
int
mov
test
dec
mov
in
add
mov
imul
fstl
iret
subb
inc
jge
and
shlb
jmp
cmp
popf
addr16
inc
pop
mov
mov
mov
rcr
out
into
iret
add
push
mov
test
pop
mov
aad
into
pop
jg
xchg
fwait
lds
idiv
or
add
pop
cmpsl
scas
pop
loope
or
aaa
pop
push
sbb
sub
add
iret
aam
pop
push
xchg
cmc
push
stc
es
popl
addr16
jp
and
mov
or
imul
ja
or
ficomps
mov
mov
jno
mov
adc
sbb
sub
les
stos
xchg
add
in
rcl
sbb
and
lret
repz
sbb
xchg
dec
jb
imul
xchg
add
cmpsl
adc
pop
faddl
xchg
in
mov
sub
gs
repz
or
add
sub
mov
pusha
rolb
xorb
cmp
push
mov
nop
mov
lret
mov
flds
sub
add
dec
fdivl
test
sub
daa
cli
mov
add
cmp
outsl
int3
fsubl
movsl
pop
sub
fwait
adc
lcall
rol
lahf
inc
fnop
cs
or
dec
inc
or
sahf
pop
daa
dec
mov
push
push
adc
mov
cwtl
mov
test
mov
out
shll
out
inc
stos
and
push
into
xorb
and
xchg
pusha
push
xchg
adc
cmp
addr16
pop
push
mov
add
mov
jno
repnz
adc
jmp
and
flds
push
inc
push
and
mul
push
push
loop
or
lods
out
dec
fldcw
cmpsl
xchg
roll
ja
mov
and
fisubl
xchg
sub
scas
pop
idivl
mov
and
cmp
rcll
push
xchg
jb
subb
loopne
pusha
adc
inc
sbb
out
push
inc
jle
xchg
enter
loopne
or
and
andl
inc
adc
and
inc
dec
popf
fsubrl
jmp
aas
push
cmp
lea
stos
jne
xor
cmpsb
xchg
ljmp
inc
in
movups
push
pop
add
fdivs
addb
in
mov
daa
outsl
push
mov
sub
push
inc
inc
or
out
dec
fiadds
xor
sbb
dec
and
xor
sub
mov
data16
and
mov
mov
pop
out
inc
lea
test
mov
adc
int
jbe
js
shl
mov
hlt
repnz
mov
js
fwait
test
push
push
xchg
dec
push
insl
add
imul
push
and
aad
cmp
scas
fisubrs
jb
aam
cmp
mov
test
inc
and
out
xchg
and
dec
mov
mov
xchg
mov
push
pop
addb
cmp
xor
jge
xchg
in
and
cmpsl
out
or
fnstsw
cwtl
jge
mov
mov
or
sub
inc
dec
xchg
icebp
mov
sub
adc
or
loope
inc
mov
sub
dec
mov
fildll
call
fldpi
mov
mov
adc
mov
shlb
ljmp
dec
cmp
stos
jno
in
rorb
ss
cli
cli
or
pop
mov
jge
adc
pushf
data16
ss
fcomps
xchg
jb
scas
inc
pop
mov
xor
add
icebp
outsb
js
add
mov
inc
push
imul
xor
xchg
mov
lods
xchg
mov
out
xrelease
sub
lods
pusha
out
cltd
stc
sbbb
xchg
xor
int
aaa
stos
pop
dec
xchg
xchg
mov
push
xchg
fisubrl
sbb
add
cs
in
jno
dec
mov
add
fnstsw
or
fistpl
dec
or
cmp
cmp
jp
dec
out
fwait
or
int3
jo
sub
inc
daa
stc
scas
or
jb
pop
mov
nop
lret
push
xorb
mov
or
testl
jns
negl
int3
addr16
ds
cltd
lds
push
jns
pop
popf
call
in
cld
adc
std
rclw
inc
dec
sub
sub
pop
jno
sbb
lds
jbe
aam
lea
lret
or
bound
iret
push
add
dec
jbe
lret
pop
add
pop
inc
js
ds
iret
adc
xor
lcall
or
pop
xor
arpl
push
ss
or
clc
pop
mov
mov
cli
imul
adc
mov
cmp
in
or
js
or
add
jl
push
jne
jns
mov
cmpsl
inc
loopne
scas
cmc
jo
cmp
mov
fnstsw
inc
xchg
mov
inc
pop
iret
fnstenv
jne
inc
xchg
scas
ret
outsl
jl
call
lods
add
cltd
xor
aad
lods
in
mov
xchg
sbb
frstor
enter
mov
adc
add
xchg
push
mov
sti
mull
cli
pop
imul
les
jno
int3
xchg
or
stos
mov
lock
mov
std
adc
add
arpl
repz
ret
ud2
lahf
in
fld
ret
popf
insb
sub
inc
mov
cmp
cmp
push
scas
cmp
add
jecxz
adc
inc
jg
inc
pop
mov
mov
mov
adc
inc
mov
jnp
jo
std
and
dec
cs
adc
adc
pop
cmc
shr
push
popf
adc
arpl
cmp
cmp
jl
jbe
xor
mov
fistpll
bound
iret
and
subl
into
repz
stos
in
fwait
rep
and
push
mov
pop
xchg
inc
mov
pop
cmp
dec
push
pop
mov
jp
and
jp
pop
xchg
jbe
call
fildll
mov
cwtl
es
mov
repnz
lret
sub
scas
hlt
mov
lahf
imul
pop
daa
cmp
dec
inc
out
rclb
push
and
pop
gs
adc
dec
jg
inc
mov
ret
dec
sbb
cmp
inc
adc
cmp
push
adc
leave
and
loopne
in
mov
stos
hlt
addl
push
cmpsl
ds
mov
mull
inc
in
xchg
sub
dec
cs
shll
push
and
xchg
pop
mov
pop
and
aam
cmp
aaa
mov
add
push
jp
movlps
clc
and
jp
fstps
addr16
nop
ljmp
cmp
and
fmulp
pop
jo
int3
mov
mov
mov
or
add
in
cmpsb
iret
xchg
add
test
mov
ret
pop
xchg
mov
imul
and
stos
sub
insl
mov
fildl
xchg
imul
loope
jl
stos
inc
insl
xchg
les
loope,pt
pop
cmp
je
dec
jmp
fcoml
xor
pushf
ret
inc
sbb
sti
int
adc
mov
je
push
pop
dec
pop
cmp
lds
call
loopne
fnstcw
and
push
xor
sbb
test
xsha256
cmpsb
xchg
ret
jg
sarb
sub
mov
adc
fsubl
out
or
jbe
mov
adc
hlt
les
lods
out
imul
repnz
jg
movsb
cmp
cmp
xchg
popf
mov
or
hlt
mov
mov
sub
adc
out
insl
sbb
mov
clc
pusha
nop
and
daa
lcall
inc
cld
cltd
mov
outsl
loop
and
pop
mov
pop
lret
cmc
pop
sub
push
jno
mov
inc
dec
mov
nop
add
ret
sti
arpl
sub
loope
cltd
mov
aam
decl
dec
popa
out
out
sbb
jbe
ss
sarl
pop
adc
inc
adc
dec
bound
pop
cmp
cmp
clc
addr16
pop
xor
sahf
rol
lds
xchg
insb
lods
cmp
jle
repz
add
pop
clc
sti
sbb
jle
bound
jnp
test
or
sub
jo
pop
xchg
stos
fiaddl
push
ja
loope
lret
inc
leave
loope
fdivrs
sahf
inc
add
push
ret
and
inc
push
iret
mov
xor
les
lods
ljmp
daa
cli
jne
leave
pusha
xorb
sub
jg
cwtl
cs
inc
pop
push
repz
push
add
push
dec
rclb
jno
fisttpl
jns
mov
ss
mov
stos
jns
pop
mov
mov
cs
daa
adc
mov
nop
mov
dec
mov
push
push
fildl
imulb
and
sbb
lea
shlb
aaa
or
push
icebp
pop
sbb
jo
xchg
mov
jbe
loope
jnp
orb
ljmp
sahf
mov
mov
push
ficomps
cmc
fsubr
cmp
xchg
loope
lods
mov
in
lock
adc
test
pop
fbld
jle
push
inc
arpl
dec
nop
jne
pop
popa
pop
lock
jne
sub
hlt
sub
hlt
dec
pop
pop
xchg
int3
arpl
mov
ljmp
push
dec
mulb
push
add
dec
xchg
inc
or
inc
xlat
out
pop
and
inc
stc
test
mov
imul
movsl
adc
pusha
or
scas
cli
mov
jle
dec
pushf
mov
cmp
xor
dec
ret
gs
inc
and
cmpsl
int
ret
mov
fisttps
push
cmpsl
pushf
dec
add
lods
push
gs
dec
aad
je
adc
and
or
outsb
outsb
lahf
mov
jle
sbb
jge
jb
mov
xchg
cmp
dec
icebp
icebp
xchg
mov
xor
incb
arpl
test
repnz
loope
popf
shlb
push
cmp
scas
stc
addr16
jp
and
push
xchg
fiaddl
push
cmp
fidivrs
and
jb
xchg
dec
xchg
insb
cmp
mov
negl
push
mov
outsb
mov
pop
sub
mov
int
dec
xor
pop
add
and
mov
data16
test
jno
fildl
clc
inc
hlt
adc
xchg
dec
pop
ret
sub
mov
je
es
movsb
cmp
into
add
lret
frstor
or
test
cmp
out
leave
popf
lods
add
out
test
mov
js
add
mov
stos
imul
cmp
mov
jno
dec
mov
subl
add
fldt
lahf
ss
mov
pusha
mov
lock
cmp
or
mov
adc
inc
cmp
and
mov
inc
fldt
cmp
ret
bound
jbe
mov
cmp
push
mov
subl
jecxz
int
leave
adc
pushf
arpl
adc
xor
outsl
push
insl
sbb
mov
jl,pt
shrl
jp
out
jne
adc
and
test
ret
leave
in
push
dec
sahf
call
fs
cmp
and
add
jg
or
mov
repz
xor
pushf
das
pushf
fcmovu
ljmp
xor
sarb
mov
gs
cmp
lahf
xchg
fildll
dec
repz
sub
push
outsl
jp
cmp
pop
popf
dec
mov
test
mov
mov
mov
jmp
ljmp
and
jecxz
loope
xor
shrb
mov
loope
inc
pushf
call
clc
inc
out
fbld
daa
mov
push
je
mov
or
xor
and
hlt
lret
xchg
movsl
mov
imul
sbb
imul
inc
imul
daa
xor
or
ficomps
xor
push
xor
fisubl
sub
inc
dec
arpl
jne
ljmp
and
cmp
bound
cld
dec
adc
jecxz
dec
pop
int3
test
cmc
sbb
dec
adc
jecxz
ret
dec
pop
int3
pop
push
xlat
dec
sub
rorl
dec
jnp
mov
imul
rcl
pop
cwtl
push
jmp
aam
adc
cmp
mov
add
xchg
mov
test
mov
cwtl
xor
sub
xchg
mov
shlb
add
mov
out
add
mov
fnsave
stos
fidivrs
fisubl
pop
cmc
mov
xor
loop
int3
sub
jo
mov
mov
sub
dec
add
popf
js
cmpsb
lea
mov
dec
jo
sti
inc
inc
and
inc
aas
mov
in
mov
imul
jnp
inc
xor
mov
cmp
addr16
cmp
sub
out
in
test
adc
xchg
nop
dec
hlt
or
or
push
jle
pop
mov
cmpsb
fldl
dec
jb
sub
rorb
push
mov
xor
push
push
mov
jmp
int
push
mov
rorl
lcall
cwtl
subb
lcall
fdivrs
sub
add
xchg
dec
stos
dec
add
in
adc
int3
cmpsl
sbb
pop
mov
jg
scas
aaa
movsl
mov
mov
repz
icebp
or
fisttpl
int3
repz
sub
and
cmpsb
arpl
cmp
aad
enter
fsubrl
int
sbb
ret
sub
cmp
pop
sub
pop
cmc
lret
jp
cmpsl
outsb
lret
call
jne
fwait
push
call
adc
lcall
insb
mov
sbb
cs
ljmp
gs
and
xor
orb
adc
mov
or
push
daa
fwait
cs
add
xchg
pop
sub
sub
mov
mov
gs
lcall
gs
ret
insb
cmpsb
pop
in
ret
shrb
in
or
cli
or
das
xchg
outsl
dec
pop
ret
and
or
sbb
jnp
shll
push
or
into
lret
loope
xor
xor
adc
in
pop
pop
scas
into
orl
pop
rcrb
ret
imul
jns
ret
scas
das
pop
popf
stc
shl
or
shll
push
loopne
enter
push
cmpsb
push
mov
jle
inc
int3
mov
sarb
mov
push
pop
je
jmp
in
ret
bound
hlt
lea
ret
rcrl
fisubrs
vandnps
loopne
daa
fdivp
lahf
testl
ss
fwait
mov
das
sub
stc
dec
inc
leave
loop
in
xor
and
cli
addr16
leave
es
or
push
or
add
pop
fucomip
pop
xchg
inc
fstl
dec
repz
xor
xor
shll
cmpsb
cmp
mov
adc
dec
bound
dec
jp
stos
sarl
push
xor
es
mov
decb
not
outsl
loope
or
in
mov
sbb
push
mov
and
jno
sub
ret
or
fucomip
add
add
lods
ljmp
pushf
cli
lods
negl
ficompl
sbb
scas
icebp
pop
dec
es
jnp
xor
outsb
dec
jbe
movsb
cs
jmp
jl
jns
xchg
xchg
add
cld
mov
das
mov
mov
fwait
jge
and
push
inc
jmp
sti
sub
bound
hlt
mov
test
pop
in
fdivrs
je
leave
cltd
std
xor
into
and
or
pop
call
jg
inc
fcoms
dec
xchg
mov
or
jbe
add
jns
pusha
push
out
mov
stos
lret
xchg
xchg
ret
fnstcw
leave
movsl
in
notb
cmpl
shlb
lahf
xchg
mov
inc
test
xor
inc
scas
or
into
mov
cli
shlb
sbb
movb
rcl
or
push
pop
jmp
cs
lea
enter
fistl
repz
dec
sti
or
mov
iret
and
dec
out
inc
xor
mov
movsb
inc
mov
fildll
mov
push
lods
jmp
add
out
xor
xchg
fistl
cmp
mov
xlat
pop
adc
cmp
mov
imul
jecxz
addr16
lcall
cmpsb
lock
jnp
pop
pop
and
or
push
sbb
sub
sub
push
xor
sbb
test
adc
fimull
or
cmova
push
jl
mov
xchg
in
inc
sub
cltd
push
inc
stos
jae
cmp
inc
inc
cs
pusha
jnp
push
aad
movsl
and
xchg
mov
mov
mov
loope
cli
adc
out
out
lret
push
out
mov
into
ret
test
ds
xor
ret
mov
mov
clc
loop
cmp
out
add
dec
xor
mov
or
push
into
xor
jg
adc
sbb
clc
cmp
xor
rcll
cli
xchg
jp
sub
je
sarl
sub
out
pop
cmp
jne
iret
in
sbbb
pop
mov
outsb
add
hlt
sub
lret
xor
out
repz
inc
in
stos
in
cmp
add
out
es
movsb
cmp
jecxz
movsl
and
mov
jo
leave
push
decl
mov
sahf
inc
lock
or
pop
hlt
dec
repnz
jle
sarb
and
fisttps
xchg
jle
ljmp
jl
or
pop
mov
xor
call
push
mov
fnsave
subl
aas
jecxz
xor
fsubl
sub
fwait
scas
ja
pop
call
movhps
das
xor
repz
xor
dec
leave
std
dec
jbe
cs
ss
fists
xchg
popf
jp
mov
fs
add
sbb
hlt
or
or
mov
loopne
negb
inc
push
adc
jge
inc
mov
mov
and
sbb
stos
adcl
lea
and
aad
lods
jns
cli
xchg
imul
rol
popa
scas
ror
pusha
jp
fisttpl
icebp
pop
push
pushf
pmaxsw
push
icebp
xor
pop
stos
shrl
push
imul
ds
xchg
test
dec
mov
cmpsb
jge
mov
or
ss
xlat
xor
pop
push
mov
lahf
jmp
test
js
mov
imul
push
fisttpll
add
nop
stos
mov
int
sbb
dec
and
aad
out
jg
rcr
adc
pop
ret
pop
add
mov
mov
int3
pop
mov
lret
rcrl
mov
out
cld
stos
inc
pop
inc
sbb
and
pop
xor
je
xchg
mov
loopne
or
pop
loope
fimull
mov
jb
jmp
jmp
cmp
adc
and
push
cmpsl
rorb
adc
cli
repnz
ret
nop
fs
mov
jmp
lret
rolb
xchg
cmpsl
fcmovu
test
sbb
cli
add
cmp
sub
mov
sbb
repnz
add
push
cmp
ffreep
aam
fs
out
jns
sub
fcomps
add
sub
pop
popf
or
int
push
jmp
sbb
test
push
push
xor
ret
sbb
inc
push
mov
sbb
and
sub
mov
and
push
add
punpckldq
vpminub
pop
push
lea
dec
mov
cmp
sbb
dec
rcll
nop
rcrl
pusha
cmc
mov
and
dec
adc
gs
stos
adc
jne
xor
jb
imul
mov
or
inc
mov
inc
push
je
cmp
push
fiaddl
pop
mov
mov
cmc
and
lahf
mov
sbb
stos
adc
iret
addb
test
daa
outsl
aaa
cli
sbb
js
popa
and
shll
repnz
mov
push
iret
cmpsb
sub
push
das
inc
xor
cmc
call
popf
lods
xchg
mov
mov
mov
pop
insl
add
jp
cwtl
stos
clc
jg
inc
cltd
std
dec
add
xor
outsb
xchg
insl
inc
clc
ljmp
int3
lea
leave
popf
loop
mov
out
mov
loope
mov
fs
push
cmp
xchg
jne
call
or
push
stos
or
fistpll
mov
test
xchg
mov
xor
sbbl
mov
jnp
cld
in
nop
adc
shrb
mov
cmpsl
test
jae
shll
cli
clc
inc
ds
push
mov
adc
sub
jg
int
popf
mov
mov
ds
test
add
inc
jge,pn
pop
mov
cmp
notb
outsb
nop
add
loop
sbb
cmp
or
pop
cld
addr16
cmp
pushf
vpminsw
adc
xchg
inc
int3
push
mov
or
outsl
cli
rclb
push
fistl
icebp
xor
mov
add
rcr
mov
gs
fisttpll
xor
incl
packssdw
repz
jp,pt
jo
cltd
icebp
sbb
rolb
xchg
cmp
cld
rcll
shrl
outsb
cs
lahf
test
xchg
ret
push
call
or
pusha
or
in
or
push
nop
sub
inc
or
insb
ljmp
sbb
xchg
test
mov
xchg
xchg
in
mov
mov
andl
xchg
xchg
xchg
jmp
sbb
es
or
stos
mov
jecxz
in
int3
outsl
xchg
adc
mov
out
dec
aam
adc
add
insb
movsl
out
push
jns
scas
pop
clc
lcall
jbe
pop
aaa
inc
add
cmp
jecxz
adc
mov
add
in
decb
pop
mov
nop
mov
in
cmpsl
jmp
aaa
fbstp
jno
iret
aam
negl
sub
and
dec
push
jmp
mov
inc
or
addr16
arpl
add
repnz
mov
add
mov
cmp
std
push
lret
mov
inc
aad
pop
xchg
mov
add
sbb
fistl
mov
fnstsw
mov
inc
pop
dec
cli
loopne
popfw
int
mov
test
ja
mov
insb
xchg
xor
add
pushf
cmp
adc
mov
pop
out
sbb
xor
rcll
mov
lods
inc
mov
dec
aam
data16
repnz
jnp
adc
incb
cs
outsb
mov
add
ds
lds
je
pop
and
xor
in
xchg
xorl
or
mov
mov
sti
out
cld
adc
test
push
movsl
jle
subb
popa
push
aaa
adc
arpl
xor
jp
xor
mov
dec
mov
mov
xor
inc
cltd
dec
fistps
adc
push
pop
imul
iret
in
cli
fmuls
into
xchg
das
rclb
loopne
cltd
cmp
shll
bound
push
iret
adcl
pop
sub
jp
sbb
dec
add
fwait
stc
push
cmc
mov
aaa
aas
sbb
aam
incl
cli
mov
sub
dec
mov
adc
mov
adc
sub
inc
in
mov
or
dec
in
stos
in
leave
int
lods
out
dec
mov
mov
push
and
clc
add
xchg
or
dec
mov
lock
mov
aam
cwtl
insl
out
sbb
adc
cmp
es
dec
ret
jb
icebp
sub
insl
daa
push
pop
cmp
stc
sbb
sbb
aad
sbb
add
mov
test
movsl
mov
in
add
xor
and
and
pop
dec
pop
jne
andb
lea
mov
jle
xchg
mov
pop
add
call
dec
pop
rol
pop
push
dec
and
jp
cmp
arpl
jle
xchg
ret
pop
cmp
dec
loop
mov
test
stc
insb
adc
add
mov
in
jl
setp
outsb
xor
popf
inc
dec
adc
jo
fcoms
xlat
icebp
adc
loope
stc
xchg
sub
push
insl
mov
pop
jmp
into
xor
pop
sahf
inc
in
inc
add
jmp
jecxz
mov
shr
cmpl
lds
add
sbb
imul
clc
mov
or
int
ror
fs
cmpsl
xchg
dec
int3
addl
lret
add
scas
test
in
jp
jnp
nop
pop
cmp
jbe
sub
int3
jb
loopne
out
sti
aaa
in
inc
fisttpl
scas
into
popf
adc
cwtl
enter
dec
mov
mov
pop
adc
addr16
notl
sahf
and
adc
cmpsl
shll
push
mov
or
cmp
imul
fdivs
out
movsb
pop
shrb
sub
loop
stos
dec
xlat
jns
leave
jge
lds
sub
insb
jo
dec
shll
gs
repz
mov
pop
insb
jbe
sub
out
jmp
mov
shl
mov
or
mov
xor
xlat
sbb
sub
movsb
push
pop
xor
lds
adc
push
jb
ljmp
rcrb
add
mov
popa
scas
mov
movsb
push
out
pushf
cmp
mov
mov
xchg
jmp
shl
push
stos
mov
mov
fs
into
mov
and
cmpsb
lods
jb
pop
jp
mov
xor
pop
sbb
add
arpl
cld
sub
jg
bound
int3
popa
notl
sti
cmp
jl
sbb
mov
cmp
mov
mov
ror
push
test
or
adc
out
movl
cwtl
pop
ss
add
lret
jns
mov
shl
fcmovu
sub
or
insl
add
mov
sbbl
and
hlt
pusha
sub
fwait
mov
jb
cld
sub
mov
in
lcall
inc
jge
int
faddp
gs
adc
daa
mov
add
movsl
pop
into
fidivrs
sub
xor
in
adc
sub
xchg
mov
sub
mov
bound
lods
stc
mov
push
cmp
jne
mov
and
cmp
test
rcrb
mov
mov
test
pop
mov
mov
xchg
dec
add
jecxz
in
mov
loop
mov
jle
lds
sahf
loop
std
jp
test
sub
jg
fsubrl
cltd
int3
and
inc
push
mov
enter
mov
addr16
sbb
ret
pop
or
jecxz,pn
daa
jp
dec
scas
inc
and
add
adc
push
daa
movsb
pusha
cmp
scas
xchg
test
mov
and
mov
inc
lods
int3
stc
jns
stc
and
pop
loopne
mov
test
inc
outsl
jnp
in
xor
sub
cmp
mov
lock
notl
cmpsb
cmp
cmp
lds
cmpsb
xchg
pop
out
adc
xchg
xchg
jl
jbe
movsb
dec
add
dec
ss
push
filds
xchg
sahf
lea
inc
pop
repnz
and
lcall
dec
out
jbe
or
xchg
xchg
add
mov
jmp
jns
push
xor
jg
faddl
jge
int
xlat
or
or
fstps
pop
popf
lods
or
call
cmp
and
insl
or
mov
movsb
pop
xchg
push
mov
dec
and
call
xchg
pop
inc
in
mov
jno
shlb
test
scas
flds
dec
jg
cld
and
sti
jnp
insb
and
inc
std
mov
push
sub
sbb
add
ljmp
into
adc
jbe
fcmovne
inc
loope
jns
pop
mov
jg
in
or
gs
in
mov
and
mov
fnstsw
pop
push
lods
pop
sarb
mov
ret
jnp
int
xor
jno
pop
movsl
xchg
inc
cwtl
cmp
push
inc
push
call
cwtl
cs
mov
adc
inc
push
add
mov
push
jp
and
mov
add
sbb
push
addr16
aad
popl
dec
fstpl
xor
test
in
cld
lcall
stc
and
mov
ret
mov
xchg
insb
mov
pop
movsb
mov
mov
pushf
sarl
mov
les
sbb
cltd
int3
lock
xchg
shlb
ljmp
shl
insb
ret
ss
push
jl
add
jnp
cmp
out
out
mov
repz
hlt
push
jl
push
ds
in
add
test
mov
sbb
aam
sbb
cmp
imul
xchg
add
xchg
mov
call
pop
rolb
jecxz
inc
push
mov
ljmp
cmpsb
or
andl
jl
repz
ds
xchg
andl
rorb
addr16
adc
inc
in
inc
shll
xchg
dec
jns
call
xor
jmp
lea
test
ror
or
mov
xchg
repnz
in
ds
mov
dec
sbb
stc
sub
sbb
jns
mov
ljmp
sbb
xchg
xor
jle
movd
in
push
fsubs
mov
and
xor
pop
hlt
pop
mov
jge
cmp
rcl
call
jns
lcall
fimuls
test
lret
mov
inc
jb
and
or
pop
mov
js
addr16
out
in
push
sbb
iret
cmp
jnp
insl
jae
mov
aam
repz
pop
daa
cltd
repnz
xor
es
ss
sahf
and
das
cmp
outsb
mov
insl
andb
pop
add
pop
scas
cld
mov
rcr
mov
popf
in
lcall
or
jns
xchg
out
out
mov
adcb
insl
into
aad
push
cmpsl
mov
mov
divl
iret
daa
sub
clc
xchg
push
xchg
add
fs
into
xlat
leave
sub
cmp
fsubl
sbb
adc
add
jmp
or
push
mov
cltd
sbb
sbb
int
cmp
test
loope
in
out
dec
mov
aaa
pop
jo
add
inc
add
insb
aam
and
cmpsb
sub
add
mov
mov
fbld
lds
and
dec
jne
dec
dec
jae
movsb
imull
cmp
sahf
or
push
mov
jns
outsl
out
scas
and
add
stos
std
jns
fiaddl
dec
mov
and
mov
jecxz
push
leave
in
jmp
adc
lret
test
pop
xchg
and
sti
sbb
jbe,pn
sti
or
cmpsl
movsb
iret
mov
lahf
mov
lret
mov
shl
orb
loope
sbb
push
insb
mov
mov
lret
push
mov
push
orb
andb
push
or
adc
xchg
mov
jle
pop
sub
or
ret
lea
jb
jmp
mov
popa
jmp
test
movsb
jns
mov
xor
fsincos
adc
jg
sub
jbe
aaa
mov
imul
sub
gs
add
jmp
pop
inc
push
jg
mov
xchg
xor
xchg
mov
jg
dec
insb
mov
pop
dec
test
add
outsb
popf
add
mov
cmp
mov
cwtl
xchg
in
dec
or
or
call
shll
sbb
lds
pop
push
xchg
adc
mov
frstor
xor
xchg
test
pushf
cmc
cltd
enter
mov
push
fistl
ror
jg
inc
fs
cwtl
repz
xchg
push
jbe
cmc
jle
sahf
xchg
mov
push
cmp
push
mov
pusha
iret
sahf
sbb
int3
in
gs
sub
cmpsb
mov
push
jge
dec
and
lods
xchg
aaa
dec
sahf
pop
fsubs
jb
mov
stos
mov
ds
jge
lret
sbb
scas
pop
mov
fildll
pop
pop
clc
dec
lock
les
push
mov
or
mov
in
mov
mov
and
imul
jbe
dec
pop
jle
push
dec
dec
inc
and
mov
xchg
cmp
jge
enter
sub
jbe
xchg
pop
sbb
cmpsb
mov
or
sub
addl
add
pop
pop
fdiv
jg
jae
out
mov
push
mulb
scas
push
sahf
lea
xchg
mov
pop
push
xchg
pushf
sub
out
pop
dec
push
xor
scas
insb
sahf
scas
leave
adc
scas
rclb
icebp
xchg
dec
mov
dec
sti
inc
pop
sub
inc
and
mov
je
mov
call
push
idivb
xor
mov
inc
fstpl
add
xchg
shlb
ljmp
cmp
fnsave
mov
stos
adc
fsubl
ja
add
jne
stc
push
test
and
push
mov
movhps
jecxz
imul
mov
mov
popf
sbb
icebp
shrb
cltd
add
push
jl
and
das
and
fnstsw
inc
mov
pop
dec
sub
test
pop
enter
loopne
and
xchg
js
xor
pop
lahf
mov
adc
scas
xor
dec
inc
gs
xchg
jb
inc
cmp
mov
ficompl
adc
cs
ret
fcomip
jmp
es
push
les
mov
cld
movsl
mov
into
push
jge
lcall
out
fwait
or
sub
stc
push
cld
xchg
mov
incw
add
dec
xorb
sahf
push
push
mov
inc
rcrb
ljmp
imul
es
push
imul
mov
cmp
aaa
jbe
jmp
sbbb
mov
jae
xor
xor
sarl
jecxz
pop
pop
fcompl
xchg
into
jae
sbb
cmp
xchg
mov
ret
push
dec
lods
or
repz
sti
cmp
jno
sbb
dec
and
and
aad
jmp
mov
mov
jge
aas
mov
shlb
decb
loop
mov
popf
or
lret
mov
mov
inc
or
jno
pop
mov
sbb
call
cmp
xor
es
out
or
sti
push
mov
xchg
insl
idiv
or
cld
cmpsb
jmp
aam
push
mov
les
pop
xchg
dec
cmpsb
push
jns
and
vpmuludq
mov
add
mov
clc
sbb
xchg
mov
mov
vmwrite
pop
out
dec
mov
jae
push
sbb
inc
xchg
test
fbstp
lds
rorb
xchg
sub
xchg
f2xm1
shrb
adc
stos
stc
ja
das
lret
cmp
and
clc
jecxz
sbb
fldcw
jp
mov
cmp
jge
inc
mov
dec
mul
insl
jmp
fmull
lret
sub
and
imul
mov
lds
mov
lahf
fldenv
jle
pop
repnz
mov
sarb
jo
sbb
push
shrl
ret
pop
scas
jb
pop
sub
clc
sbb
jle
outsl
rol
pop
inc
pop
dec
ficompl
into
dec
push
dec
push
stc
test
call
mov
pop
scas
in
insb
add
out
cld
mov
pop
movsl
xor
repnz
test
pop
sahf
mov
pop
aaa
mov
and
std
sbb
lds
adc
push
in
inc
jno
sbb
mov
xor
pop
lods
jmp
sbb
popf
fmul
mov
pand
adc
cmc
bound
push
or
fcmovnb
pusha
xor
push
lds
imul
sahf
in
xor
lods
gs
add
add
in
add
sbb
xlat
aaa
xchg
dec
and
fldl
call
pop
xlat
push
mov
jecxz
test
insl
sbb
cwtl
mov
pop
or
shrb
pop
out
fldt
les
or
arpl
sub
icebp
lods
aas
sub
jne
loopne
das
adc
stc
sbb
cmp
pop
das
test
int
stc
xchg
mov
mov
rorb
cld
mov
scas
pop
bnd
pop
jb
mov
sbb
loop
je
ret
mov
mov
dec
pop
xchg
mov
hlt
lea
jae
sarb
sbb
repz
or
xor
out
pop
ret
sub
adc
xor
jmp
rcr
sarl
jae
pop
and
add
pop
enter
decb
xchg
push
pop
mov
test
pop
lods
adc
push
mov
mov
bound
add
mov
inc
in
rol
movsb
jg
and
jge
in
int3
fwait
or
cmp
push
sbb
bound
mov
repz
cmp
fisttps
inc
nop
lcall
xchg
sbb
lahf
sbbl
pop
scas
adc
push
dec
sub
dec
bound
aad
nop
or
push
es
adc
cs
in
and
sbb
test
add
lret
lock
pop
sub
ja
sahf
mov
in
sbb
int3
fmuls
gs
int3
sub
add
sbb
sub
jne
aaa
jecxz
sbb
in
insl
mov
out
movsl
popa
call
insl
push
adcl
aaa
arpl
hlt
mov
and
adc
les
xchg
rolb
sbb
push
lock
cwtl
cmpsb
lock
test
aam
jae
dec
add
fs
pop
mov
and
ret
jae
jge
fstps
push
cwtl
shlb
lcall
sbb
into
int3
insb
jo
pop
push
loope
or
xchg
test
les
adc
cli
rcr
mov
or
ret
ds
dec
and
test
movsl
mov
imul
les
xor
daa
cs
xor
xor
adc
jno
popa
data16
adc
cmpsl
sbb
mov
scas
mov
loopne
xor
jne
inc
movsl
jnp
pop
aaa
rcll
leave
jecxz
sub
rcrb
imull
cld
mov
pop
test
xor
sub
mov
pop
mov
jg
sub
icebp
push
sub
or
or
out
cmp
loope
dec
lcall
jl
fnstsw
xchg
test
pop
loop
imul
add
jecxz
adc
mov
xchg
or
popa
mov
mov
jae
mov
out
test
jmp
mov
stc
out
inc
icebp
jmp
cmp
into
add
lret
push
and
mov
fs
dec
loop
lds
in
pop
sub
dec
pop
sub
cmc
mov
shrl
and
or
or
jp
sub
mov
mov
lret
sub
ja
dec
lret
jl
mov
or
dec
cmp
dec
adc
adc
ret
pop
sub
hlt
pop
push
cmp
cmpsl
cli
mov
xchg
cmp
jae
adc
sbb
cmpsb
lock
aaa
inc
pop
icebp
arpl
cmp
jle
add
or
dec
ficomps
mov
dec
cmp
imul
push
or
mov
gs
add
in
pavgb
inc
push
aas
out
loopne
mov
dec
inc
pop
addl
or
dec
in
mov
or
fisubrs
inc
hlt
cld
std
ja
xor
pop
or
jnp
xchg
cmp
imul
xor
push
std
icebp
jmp
insl
mov
cmp
cmp
nop
loope
add
lods
mov
push
jecxz
jle
jmp
mov
rcr
lods
and
dec
add
in
shrb
iret
cmpsb
in
inc
pop
pop
sbbb
push
jo
das
addr16
mov
stos
pop
mov
arpl
adc
push
sbb
je
scas
addb
dec
mov
lcall
das
cmp
es
add
pop
or
and
pop
lds
cmp
icebp
movl
xchg
lret
mov
aad
xchg
lret
mov
adc
xchg
aas
incl
pop
scas
psllq
cli
mov
mov
cltd
icebp
jle
shlb
push
xor
decb
mov
add
sbbb
mov
add
scas
mov
jge
jo
mov
popa
jnp
pop
imul
push
jno
test
int
pop
inc
data16
pop
jmp
in
push
nop
movsb
inc
setb
daa
adc
std
mov
inc
push
pop
lahf
jmp
sti
xor
or
daa
iret
test
cmp
push
add
rcrb
cwtl
stos
jne
fistl
lds
sarb
fs
jge
sub
sbb
xchg
cmp
dec
sub
pushf
icebp
ficompl
call
aas
or
mov
pusha
sbb
repnz
stos
cmp
popa
icebp
mov
jbe
enter
fisubl
nop
jle
adc
cmp
gs
mov
xor
sti
xlat
dec
pop
adc
xor
sub
push
enter
dec
dec
dec
jmp
sahf
cmp
out
icebp
movsl
mov
jge
sub
mov
sub
and
xchg
add
dec
xlat
xor
shll
pop
loope
mov
push
out
stos
inc
pop
js
inc
sub
fisubrl
rcll
xor
lea
lret
rcll
aam
jle
leave
pop
sub
push
bound
push
push
push
or
mov
fildll
rcll
fwait
hlt
fbld
dec
lret
in
mov
scas
cmc
outsb
xchg
sub
mov
or
adc
jl
enter
aas
mov
sbb
mov
fstl
mov
mov
and
cmpb
push
xor
aam
and
xor
sub
gs
fwait
jle
push
lods
insb
mov
daa
lea
jle
mov
shrl
or
bswap
cltd
bound
out
vpshufhw
test
mov
mov
fbstp
mov
lret
fisubrl
sbb
jb
inc
sub
pop
addr16
mov
in
xchg
xor
lods
mov
or
sub
push
ss
ja
cmp
fiaddl
cmc
cwtl
mov
jbe
mov
inc
sbbl
aaa
aad
popa
fdiv
cmp
hlt
pushf
mov
repz
mov
inc
dec
dec
ss
mov
fisubs
movsb
sarl
out
lods
jne
cli
dec
sub
fcomp
movl
inc
pop
pusha
pop
cmpsl
dec
test
cmpl
adc
sub
add
adc
fs
shrb
xchg
ja
xchg
insb
movsb
mov
pop
lret
lret
sub
int
out
or
pop
jl
lcall
jno
push
lock
ss
stc
jl
xor
cmc
int3
xor
jb
loope
or
jecxz
mov
add
movsl
aas
push
outsb
mov
das
push
clc
fmul
addr16
aam
mov
push
mov
hlt
call
cmp
fdiv
out
jns
sub
movsb
xchg
jno
xchg
mov
int3
push
fildl
flds
pop
cmp
ffreep
loope
lds
dec
leave
stc
cmp
inc
or
cli
push
and
and
movb
cmp
lea
pop
les
adc
dec
ljmp
add
in
mov
jmp
fidivl
mov
xchg
rolb
and
mov
mov
cmp
loopne
lds
rorb
mov
nop
enter
sub
test
ds
loope
js
enter
xor
add
fimull
std
push
gs
add
fildl
insb
adc
xchg
addr16
out
mov
hlt
jns
ss
rclb
pusha
pop
je
lcall
fmull
stc
mov
push
dec
scas
test
test
mov
xor
jne
test
inc
int3
pop
movsl
bswap
fimuls
jge
fdivrl
jl
pop
mov
mov
lcall
sbb
add
jp
or
or
scas
cmpsb
setle
rcr
jb
jbe
pop
push
jae
ret
cwtl
dec
and
hlt
dec
inc
pop
jb
push
jmp
xchg
dec
pop
and
out
fdivrs
out
repnz
jmp
pushf
int
mov
mov
shll
cwtl
push
fidivrl
stos
xor
fisubrs
fisubl
inc
fdivs
pusha
sbb
test
push
pop
cmp
push
jmp
cmp
shrl
add
aaa
dec
lds
ljmp
xor
push
pop
in
pop
sahf
nop
add
pushf
fs
repz
loopne
cmp
cmp
pop
xchg
mov
adc
pop
add
mov
dec
pop
jg
ss
add
lret
cmp
mov
in
insl
pop
sbb
jmp
or
inc
aas
jne
aad
in
adc
dec
sarl
sub
outsl
fsub
mov
insb
inc
add
add
and
inc
mov
push
push
adc
inc
int
jmp
aaa
mov
jp
and
js
shrl
cltd
jae
ret
mov
or
sub
mov
cltd
int
pop
idivb
scas
cmc
insb
pop
jle
cwtl
dec
add
xchg
js
mov
cmc
ror
jle
mov
hlt
push
push
shlb
push
insb
lds
jnp
bnd
subl
dec
rolb
xor
imul
pop
jge
mov
cmc
or
cmpsl
insb
mov
pop
pop
scas
dec
cmp
dec
jge
lods
imul
mov
int
in
and
inc
or
rclb
loopne
ror
fisubs
sbb
pop
cmp
lods
out
adc
lods
xor
iret
and
cmc
fs
lods
sti
mov
bnd
mov
sub
dec
clc
mov
insb
xor
das
ret
inc
add
add
jb
xlat
jbe
sbb
rcrb
int
jne
ret
adc
inc
clc
jnp
dec
pop
repnz
ret
imul
in
jae
xchg
dec
pop
mov
xor
and
dec
xchg
sub
jns
mov
cmpsb
ret
mov
fists
cli
adc
jl
sbb
adc
outsl
sbb
xor
add
notl
in
mov
xchg
add
jbe
int3
add
jg
ds
lahf
and
lds
in
lds
sbb
movsl
jno
cmp
mov
sbb
lahf
sti
into
test
sub
xor
mov
cwtl
push
inc
loop
mov
or
imul
je
xchg
out
sbb
movhps
jnp
in
in
ret
roll
cmp
cmp
fcom
sub
sar
mov
hlt
jb
push
out
xchg
add
xlat
stc
popf
push
xchg
je
cwtl
std
jmp
aaa
out
cli
add
cmp
pushf
inc
jns
inc
in
jns
fwait
jmp
loopne
test
mov
scas
fstl
jle
fisttpll
sbb
xor
jl
cwtl
pusha
mov
and
je
out
adc
jmp
push
je
mov
push
xor
lods
mov
loope
mov
push
fucomi
sahf
sbbl
or
inc
sarl
or
cmp
adc
dec
loope
icebp
sub
inc
insb
jmp
dec
cli
push
les
cltd
mov
aam
popf
test
repz
fisttps
xlat
dec
fwait
or
pushf
cmp
mov
xor
sahf
or
shr
unpckhps
rol
sub
push
loope
sub
jmp
je
sarl
mov
fs
adc
fbstp
insl
pushf
iret
xchg
mov
add
sbb
adc
sbb
xchg
es
pop
fisttps
add
ljmp
je
add
sub
dec
jae
sti
pop
mov
dec
xchg
aaa
pop
out
ljmp
mov
lds
xchg
cltd
and
mov
pusha
ss
movq
pop
adc
xor
lcall
aaa
mov
pop
inc
popa
cmp
ss
repz
imul
lahf
es
and
adc
dec
pop
sub
cmovns
sbb
mov
sbb
ja
and
mov
mov
mov
dec
xchg
mov
cmpl
mov
pop
int3
sahf
or
cmpsl
call
push
sti
xchg
aaa
ror
jp
ja
outsl
mov
jno
nop
imul
xchg
test
cmp
push
inc
mov
inc
inc
xchg
data16
fs
mov
daa
popa
into
enter
lods
sbb
hlt
dec
xor
stos
jnp
inc
push
lods
movsl
imul
fistpl
out
mov
lea
aad
adc
push
and
sarl
lret
jmp
mov
sub
int3
sahf
mov
xchg
mov
adc
push
dec
add
loop
or
jle
sti
stos
jno
into
enter
pminsw
call
xchg
mov
adc
int
inc
inc
mov
jge
mov
sub
mov
add
out
test
push
jno
adc
jmp
mov
mov
cwtl
lods
add
clc
lret
cltd
imul
fwait
sti
fwait
movsl
cltd
pop
test
mov
add
sbb
jl
ret
call
inc
xor
mov
mov
push
xor
adc
loope
imul
into
pop
outsl
jge
push
rcl
jnp
inc
jae
mov
pop
scas
inc
int
mov
push
inc
xorl
inc
in
popf
inc
push
xchg
xor
inc
jmp
cltd
mov
inc
enter
bound
cmp
mov
ret
push
sub
movsl
loopne
fwait
push
cmpsl
dec
sbb
jmp
xor
cmp
ret
mov
xor
mull
int3
fimuls
pop
cltd
test
add
push
les
repz
push
jmp
mov
or
movhlps
pop
pop
adc
or
add
xchg
into
push
mov
mov
rcr
inc
jmp
es
bound
fld
xchg
imul
stc
cmp
mov
adc
jp
int
repnz
das
repnz
mov
mov
iret
mov
mov
in
leave
shll
lods
pop
cltd
and
push
adc
ret
or
add
incl
jnp
adc
xchg
sbb
dec
jmp
repnz
sub
icebp
nop
int
sbb
xlat
sbb
pop
adc
pusha
sti
inc
mov
adc
mov
inc
and
xchg
push
clc
adc
pop
out
inc
outsb
imul
sub
out
call
jmp
inc
pop
mov
fwait
fwait
push
pop
xchg
or
mov
sbb
shrl
leave
ret
repnz
inc
inc
mov
dec
cmp
mov
insl
xchg
lock
add
aas
ret
cmpsb
and
xor
sarb
mov
mov
aas
jno
pop
imul
inc
pop
fisubrs
aad
xchg
out
insl
divl
sub
push
cmpsb
mov
mulb
mov
std
ja
fldt
xor
addr16
fwait
push
mov
mov
push
mov
pop
jg
lds
xchg
jno
inc
bndstx
test
push
ss
pusha
sub
inc
inc
jno
aaa
addr16
cmp
scas
dec
xchg
push
pop
mov
ds
ljmp
call
sub
xor
int3
mov
push
or
daa
aad
in
jbe
inc
dec
or
in
mov
daa
cmp
imul
sub
loope
push
es
pop
std
push
xor
repz
repz
pop
add
pop
repnz
in
push
inc
fcoms
jb
mov
lock
int
fmuls
pushf
and
xchg
jnp
jne
or
iret
nop
daa
add
xor
jo
lock
movsl
into
vshufps
or
cmpsl
repz
dec
sti
xchg
js
adc
cltd
sbb
add
dec
fistpll
in
push
data16
scas
jecxz
xor
popa
test
xchg
scas
add
push
addr16
and
imul
out
xchg
inc
loope
aas
or
loopne
add
rorl
testb
scas
adc
loopne
leave
xlat
mov
pusha
lret
pop
in
lds
pop
sbb
mov
mul
and
into
inc
aas
or
out
or
out
xor
rorl
mov
idivb
add
jbe
mov
mov
lcall
mov
pushf
ja
cld
sbb
inc
and
cli
scas
jecxz
push
cltd
data16
adc
and
cmp
add
jecxz
shll
out
push
aaa
mov
sub
maxps
aad
cmp
repz
xor
cltd
sub
stc
jns
sub
mov
int
bound
sti
jecxz
fnstcw
les
or
sub
repz
xorb
ret
sbb
inc
adc
imul
lock
mov
lahf
mov
ret
es
sbb
insl
dec
adc
hlt
mov
repnz
leave
adc
aaa
sbb
fisttpl
rclb
pop
xor
mov
cld
xchg
les
pop
pop
push
leave
pusha
mov
les
dec
xor
dec
dec
gs
mov
xor
movsb
insb
subl
lds
pushf
out
and
mov
arpl
fucomip
outsb
mov
or
hlt
mov
push
pop
push
enter
lods
mov
addr16
jno
sub
lods
mov
mov
outsl
and
inc
arpl
sbb
sahf
mov
mov
cltd
inc
and
insl
mov
insl
xor
cmp
daa
fwait
jb
dec
push
ljmp
sbb
shlb
adc
bswap
jne
xor
and
and
loopne
push
pop
lahf
adc
pop
mov
jnp
jnp
fdiv
cmp
pop
sub
loopne
cltd
add
adc
or
lret
sub
mov
jo
test
or
gs
push
pushf
jb
hlt
nop
mov
test
cld
aaa
push
aas
fcomps
pop
and
xchg
xor
xchg
push
adc
repnz
adc
xor
dec
pop
pop
andb
loope
shl
out
jmp
outsl
test
cmp
pop
mov
xchg
sti
sarl
mov
adc
sbb
loop
repz
jge
pusha
nop
stos
mov
int
mov
cs
loopne
jb
arpl
and
sub
ja
nop
cmp
add
mov
dec
and
pop
xchg
enter
or
push
mov
shll
push
in
mov
push
push
dec
adc
movsl
add
hlt
sahf
jmp
push
lods
idivl
push
cmp
sub
fsubs
mov
adc
mov
add
jnp
xchg
sub
lds
dec
mov
push
pop
pop
aad
cwtl
shl
bound
in
jp
xchg
lahf
leave
or
fists
out
in
test
mov
jle
sahf
aam
add
pushf
mov
sbbb
jecxz
into
pop
mov
popa
andl
pop
test
push
xlat
push
jnp
mov
fucomi
xlat
insb
enter
mov
pop
mov
test
add
fidivs
xchg
sub
push
bound
mov
sbb
or
mov
and
cmp
add
add
mov
and
sti
sub
test
mov
cmp
adc
fiadds
mov
cld
ljmp
add
cmc
mov
iret
cmp
cwtl
jmp
adc
iret
data16
xchg
test
pop
xor
icebp
cltd
pop
dec
mov
mov
imull
fbstp
ficomps
mov
les
xchg
xchg
ret
fldl
pop
cmpsl
sbb
pop
cmp
xchg
cwtl
cmc
jo
mov
test
push
insb
pop
inc
aaa
adc
xchg
in
jne
adc
jae
outsb
jge
fwait
test
imul
push
jmp
xor
pusha
pusha
and
cli
imul
ret
jne
mov
mov
sti
shrl
mov
loopne
xor
push
fdivs
xchg
jnp
jne
das
scas
fidivs
adc
mov
testb
mov
pop
xchg
cmc
leave
sbb
or
shlb
mov
or
repz
cmp
mov
cld
push
mov
insb
sti
dec
sbb
sahf
sub
mov
movsl
adc
push
popf
add
mov
jmp
shrb
inc
dec
xor
divb
mov
testb
push
mov
sub
repz
and
fwait
mov
test
pop
divb
fucomip
dec
cwtl
jge
dec
jo
xor
in
push
mov
jo
and
mov
je
and
fldenv
je
sub
popf
xchg
insb
enter
jnp
and
and
clc
mov
cmp
pop
imul
dec
jb
cltd
push
push
sbb
jnp
cli
mov
dec
jne
cmp
out
jp
lret
pop
stos
js
mov
test
sub
xchg
scas
sub
mov
add
jae
mov
pop
jns
jae
imul
sbb
and
xchg
and
fisubrl
xchg
in
aaa
sahf
sbb
icebp
jmp
cmpsl
add
insl
adc
scas
stos
jge
adc
pop
pop
icebp
stos
subl
push
cli
fcmovnu
lcall
xor
clc
and
cmpl
leave
fstl
sbb
jbe
and
pop
mov
inc
or
and
hlt
lods
dec
pop
or
sub
push
mov
pusha
mov
cltd
sti
into
xchg
mov
fsubs
lock
ficomps
pop
inc
arpl
xchg
mov
test
pop
and
sar
inc
cld
dec
shr
cmc
sbb
repnz
test
pop
xor
xor
inc
imul
negl
pop
daa
iret
mov
or
arpl
inc
ljmp
mov
jle
pop
cmc
jge
or
adc
lcall
pop
test
das
out
stc
push
jae
inc
divb
loope
mov
push
and
mov
mov
hlt
popa
xor
dec
or
xchg
xchg
pop
incb
add
movsl
repnz
pop
dec
pop
xchg
pusha
pop
mov
mov
xlat
mov
adc
js
mov
aas
cli
popa
push
push
arpl
jnp
and
test
adc
in
add
negl
mov
aas
inc
push
nop
adc
xor
mov
inc
popa
leave
xchg
xchg
lret
andb
int
inc
cld
mov
popf
loop
ret
jae
imul
add
fstl
data16
out
arpl
lret
or
lock
ja
dec
mov
push
cmpsl
xchg
dec
xchg
fiaddl
into
mov
mov
push
xlat
pop
out
cmc
cmp
arpl
inc
cli
in
rcl
fmul
fadds
test
add
insb
jle
stos
cwtl
leave
iret
mov
pushf
push
sbb
ret
push
pop
aam
add
inc
movsb
mul
cmp
ljmp
fwait
mov
hlt
pop
push
mov
pop
add
jne
sbbl
sbb
pop
jno
out
mov
jne
ret
pop
sbbl
mov
outsl
movsb
pop
dec
push
dec
sti
push
lods
jmp
push
mov
iret
popa
in
or
mov
xchg
pop
mov
jns
push
mov
xchg
mov
imul
out
jno
mov
cmp
mov
mov
mov
test
outsb
mov
sub
or
insb
sbb
jle
daa
mov
mov
ret
adc
insl
or
cli
push
pop
mov
sbb
pop
xor
push
call
sbb
stos
insb
mov
arpl
dec
test
outsb
adc
leave
sub
repz
in
dec
mov
leave
push
lcall
cwtl
test
mov
mov
lock
or
rcr
rcrb
test
lahf
or
stos
push
cmpsl
xchg
into
jbe
mov
dec
push
pop
push
jae
lods
mov
push
mov
xlat
sbb
movsl
and
sti
xchg
or
xchg
inc
add
sub
sub
dec
mov
into
fldenv
sbb
pop
movsb
in
cmp
jns
fdivp
mov
std
jbe
xor
xchg
push
jg
sub
mov
cli
fdivrl
or
shl
or
das
push
and
lret
jno
jg
popf
xor
mov
mov
mov
popf
mov
pop
stc
adc
gs
sbb
in
mov
lods
je
jne
jne
xchg
xchg
and
dec
sbb
imul
xorl
sahf
mov
cld
push
and
pop
mov
xchg
pop
sahf
notb
sub
pop
in
jmp
jp
or
cmp
lods
nop
aam
or
jb
mov
repnz
stos
lds
cs
xor
scas
pop
jae
aam
repnz
test
xchg
outsl
cmp
jo
test
inc
es
pop
loop
jno
cld
mov
lret
stos
push
jmp
inc
sarl
cmpsl
ds
int
stos
push
ret
test
pop
sahf
push
shr
push
jecxz
inc
movsb
push
mov
sub
shll
inc
pop
mov
sti
dec
stos
out
andb
aas
add
popf
fdivl
xchg
movntq
loop
aaa
sti
mov
fists
push
mov
xchg
inc
sti
sbb
shl
sub
adc
rclb
jmp
xor
sbb
bound
adc
lock
leave
filds
fs
xor
stos
je
xor
xchg
test
pusha
subb
fwait
jl
jno
data16
mov
cmp
jns
jecxz
fcoms
sub
jns
in
jp
lcall
xor
cmc
sbb
jl
xor
mov
push
stc
movsl
out
pop
xlat
ficompl
jle
movsl
mov
cmp
lcall
in
xorl
push
enter
insl
in
ret
test
mov
sbb
fdivs
call
shrl
mov
mov
imul
lock
cmc
push
cmp
ret
dec
pusha
repnz
push
stos
mov
icebp
sbb
test
shr
cli
sbb
dec
mov
pop
insb
fsubl
push
sbb
test
mov
push
ja
xchg
arpl
mov
inc
lret
out
aad
push
icebp
sbb
out
cld
sarb
xor
mov
std
xor
mov
push
xchg
push
mov
decb
mov
daa
xchg
add
repnz
das
cmp
fidivl
or
jns
loopne
bound
cld
or
fs
incb
add
cs
int
xchg
add
out
push
mov
pop
jmp
enter
mov
pushf
xlat
insl
mov
inc
jp
sub
loope
jp
mov
jle
adc
rcrb
pushf
mov
inc
jmp
icebp
push
mov
stos
xchg
je
add
fsubl
repz
pusha
and
xchg
cmpb
or
out
cwtl
sbb
inc
push
sbb
fstl
mov
addr16
nop
rcrl
adc
inc
in
mov
shlb
xchg
xchg
jl
das
stos
xchg
sub
cmpsb
mov
in
sti
hlt
add
mov
mov
mov
hlt
fildll
mov
jnp
sub
xchg
pop
dec
inc
lods
xchg
inc
scas
testl
or
ljmp
mov
push
dec
push
scas
clc
into
lods
jl
push
and
xchg
repz
ficomps
imul
pop
adc
ljmp
cmpsl
and
daa
jg
cmpsl
xchg
push
pop
push
scas
xchg
pop
push
pop
fwait
cmp
push
inc
inc
js
adc
ret
outsb
popf
jmp
mov
rol
movsb
dec
lods
push
popa
xchg
mov
xor
popf
xor
das
addr16
cs
xor
inc
mov
imul
jl
jb
in
cli
lea
mov
int3
ds
jo
push
sbb
cs
xor
jae
xchg
sub
daa
pop
ret
loopne
xor
testb
insl
sbb
jg
mov
adc
cmpb
idivb
xor
pop
fisttpl
pop
jge
jecxz
ja
cli
push
xor
push
pop
clc
xor
add
inc
lods
and
arpl
push
add
lock
in
add
mov
lea
pop
sbb
mov
test
ror
mov
adc
and
mov
and
adc
sbbb
sub
mov
push
jl
lock
arpl
sbb
or
icebp
jecxz
push
lods
subl
adc
cmpl
dec
rcr
push
and
sbb
not
rolb
sahf
movsb
movb
xlat
jb
hlt
repz
sbbl
gs
xchg
adc
hlt
loopne
repz
add
jno
pop
adc
lcall
xor
mov
xor
popa
jecxz
ds
ds
rcrl
daa
cmp
clc
lahf
pop
add
adc
fdivrs
pop
jno
insb
jle
xchg
movsl
cmp
jns
jecxz
mov
mov
and
jae
mov
push
int3
fistps
leave
cmp
mov
lds
movsl
push
imul
xchg
inc
jnp
adc
fwait
imul
lret
loop
xor
xchg
scas
push
ret
ret
popa
adc
sub
push
or
inc
arpl
dec
cltd
pop
pop
mov
pop
int
lds
inc
xor
ss
scas
stos
jle
jmp
test
add
in
out
xchg
pop
or
jbe
movsb
jns
xchg
mov
leave
fwait
mov
repnz
shrb
cld
out
mov
dec
mov
inc
hlt
inc
mov
ss
push
mov
mov
aad
aam
loopne
and
and
pop
fwait
outsb
xor
sub
or
cmp
jnp
stos
fwait
or
inc
mov
pop
push
je
adc
pop
mov
pop
jo
icebp
xchg
jp
dec
adc
dec
mov
and
enter
out
bound
test
fs
jbe
lock
jmp
mov
mov
mov
mov
sbb
test
xchg
loopne
pop
mov
out
push
xor
imul
mov
cmp
push
hlt
in
dec
dec
loopne
jl
mov
adc
sahf
or
xchg
or
negb
cld
push
add
fbstp
test
mov
rcll
or
loop
pop
cs
pop
repz
or
inc
mov
fcmovnu
xlat
or
push
outsb
ds
das
xor
in
scas
int
iret
dec
mov
inc
scas
lods
push
sbb
mov
cltd
repz
or
cli
xchg
ja
or
mov
pop
inc
pop
inc
add
push
xor
pop
inc
stos
lret
adc
sub
andb
mov
scas
popf
in
movsb
xchg
loopne
scas
lock
test
cmp
xor
daa
ja
pop
mull
lods
addb
orb
cmp
sahf
xor
adc
stos
pop
xchg
mov
test
scas
popf
pop
outsl
aad
decb
out
pop
mov
lcall
mov
push
cmpsb
aas
sbb
mov
add
mov
inc
outsb
mov
sbb
inc
insl
jns
adc
mov
les
add
ret
fists
movsl
out
fsubrl
cmp
mov
dec
jb
in
mov
aad
iret
pop
es
lahf
out
adc
xor
stc
int3
add
lahf
into
mov
jl
inc
xlat
mov
je
ret
aad
call
push
popf
in
iret
shl
jne
lcall
loop
add
ds
jmp
sarb
scas
loop
cmp
cmp
and
add
orb
test
jne
and
sbb
cmpsb
sbb
push
in
pop
push
inc
enter
add
jg
mov
rcll
sub
mov
in
xor
lods
inc
mov
loope
xchg
ret
shrl
repnz
mov
mov
es
xlat
lods
xchg
mov
lock
mov
and
cs
jp
xor
dec
lahf
ss
jge
fmuls
inc
fdivs
rcrl
add
pop
and
loop
out
xor
push
fistps
mov
jne
cmc
ror
and
nopl
sbb
xor
jmp
inc
push
gs
xchg
roll
or
loop
bound
stos
nop
aas
push
mov
outsb
in
cmp
pop
push
cwtl
mov
adc
xor
insl
mov
mov
or
pop
lock
jge
pop
add
stos
ret
in
dec
push
in
enter
outsb
pop
ret
dec
out
imul
pop
push
fldcw
cs
stos
xor
mov
pop
cmp
int3
fidivs
out
loopne
nop
pop
call
cmpsl
jo
jae
mov
cmpsl
adc
adc
jb
dec
mov
fildll
stos
adc
push
jle
cmp
mov
sti
sub
jns
testl
mov
jecxz
ret
shl
push
shrl
or
push
sahf
ja
cs
xabort
and
push
daa
or
add
mov
dec
and
fldt
dec
mov
xchg
mov
fimull
fwait
icebp
inc
orl
bound
jo
xor
jmp
xchg
mov
negb
sbb
rcr
gs
lret
inc
test
popf
push
mov
ljmp
push
sub
cmp
sbb
loop
dec
sbb
movsb
xchg
cmp
mov
pop
hlt
pop
xchg
lods
data16
mov
mov
loopne
cwtl
fwait
pop
aas
xor
fsubrl
add
sub
fwait
xor
jmp
mov
jecxz
mov
mov
and
sub
cs
dec
pop
push
inc
lret
scas
rol
in
into
fcompl
mov
ja
sbb
push
popf
sbb
pop
mov
lahf
jno
push
jno
xor
paddusw
outsl
jmp
dec
lret
mov
mov
daa
xchg
jno
pop
sub
mov
out
add
jo
mov
xor
aad
xchg
cmpb
add
fisubrs
mov
and
les
mov
xor
in
xor
mov
int3
xchg
repz
loop
xchg
push
mov
js
add
or
idivb
jo
cmp
add
mov
inc
and
dec
push
arpl
xchg
mov
insl
add
inc
dec
dec
mov
hlt
outsl
pop
dec
imul
mov
ja
xchg
dec
rorb
jno
das
inc
push
add
pop
loope
pop
jb
add
ret
xchg
call
pop
aas
shll
cmovl
pusha
or
ljmp
call
stos
push
fldcw
lods
in
jno
orl
lods
mov
andl
adc
dec
jnp
insl
aaa
xchg
call
lret
add
lock
sub
lret
jnp
cmp
das
lea
popa
add
mov
or
cltd
icebp
or
add
clc
xor
insb
add
fsubl
cmc
dec
nop
mov
shll
in
aas
xchg
loop
idivl
and
mov
xadd
in
dec
arpl
or
cld
cmp
mov
lea
add
fnstsw
mov
or
movsl
shr
loop
jl
nop
or
push
cmp
mov
sub
cltd
testb
inc
xlat
pop
xor
jmp
orl
jge
adc
test
push
push
pop
jae
clc
jbe
sub
or
iret
mov
fisubl
lret
jb
lods
sbb
int
lret
adc
add
out
je
aaa
xchg
push
repz
mov
and
add
iret
shl
sti
cmp
add
aad
fucomp
cs
pop
cmc
push
mov
add
fdivs
or
xor
fldenv
dec
cmc
scas
stc
data16
or
cltd
std
cmp
push
sbb
mov
sarb
push
xchg
jne
jnp
repz
xor
xor
cli
xor
push
and
fincstp
fcoml
sub
inc
pop
leave
jns
jae
pushw
sbb
out
aaa
adc
shlb
cmp
stos
inc
aad
pusha
int
loop
mov
cs
dec
adc
push
outsb
mov
in
and
xlat
pop
dec
bound
push
add
mov
push
dec
pop
js
fidivl
sbb
clc
and
sahf
xsha1
cmpsb
int
stos
push
cld
out
sub
mov
jno
cmp
pop
push
add
mov
incb
js
xchg
outsl
cmp
fsubr
cmp
dec
cmpsb
fimull
or
inc
xchg
imul
xchg
add
mov
lods
jp
dec
repz
std
hlt
cmpsl
decl
je
and
pop
mov
es
push
xor
or
fdivs
orl
jl
rcrl
into
and
repnz
test
nop
test
push
dec
in
add
mov
es
jno
inc
fcoml
enter
arpl
cmpsb
cmpsb
in
pop
ret
or
jae
push
sti
jns
cmpsl
xchg
call
dec
xchg
push
adc
std
or
lret
xor
mov
inc
movsl
cmp
push
or
inc
ret
push
and
sbb
ret
movsl
sub
out
add
clc
aad
sub
add
mov
jae
subb
push
shll
jecxz
add
test
mov
test
dec
pop
cmp
jmp
in
ss
fildl
insl
adc
mov
and
sub
pop
pusha
stos
jnp
lock
int
push
add
push
ret
xchg
loopne
mov
lret
lock
cli
lock
cmp
xor
test
fwait
dec
and
cmp
rclb
std
movsw
mov
pop
inc
xor
mov
cmp
in
cmp
add
push
cmp
stos
inc
popa
fdiv
scas
aaa
cmpsl
push
mov
incb
fiaddl
sti
inc
cmc
sbb
je
xchg
jb
or
aad
andb
mov
inc
jecxz
imul
or
mov
inc
adc
push
pop
inc
pusha
divl
loope
and
gs
push
repnz
enter
push
push
iret
push
notb
movsl
dec
sahf
int3
fdivrp
test
and
loopne
sub
inc
inc
icebp
mov
stos
loopne
rcr
mov
fidivs
imul
test
dec
sbb
sbb
inc
ret
shrb
jp
cmp
aaa
pop
xor
xchg
inc
adc
add
subb
icebp
mov
leave
in
sti
cwtl
inc
pop
fcmovu
jl
or
or
inc
dec
pop
lock
imul
out
stc
sbb
rol
repnz
repnz
lds
mov
sbb
je
mov
ret
mov
adc
stos
mov
pop
adc
fcomps
or
add
add
leave
mov
ss
stos
imul
das
push
fwait
leave
push
xchg
sti
or
out
xchg
jbe
inc
into
pop
lea
add
pop
ja
push
ljmp
jno
adc
jnp
in
or
sbb
pop
pop
cmpsb
add
sbb
mov
jmp
in
or
lds
das
push
scas
or
sbb
xor
xor
add
mov
cmp
or
test
cmovno
stos
push
push
inc
lock
mov
adc
aas
dec
adc
int
decb
int
pop
sbb
into
xchg
lcall
insb
xor
dec
add
rorb
loope
sti
imul
or
popf
xlat
pop
adc
and
scas
jle
ret
mov
pop
dec
mov
cs
out
addr16
out
dec
pop
jl
in
inc
mov
scas
inc
je
call
cmp
mov
loopne
mov
into
push
sbb
loop
mov
or
clc
cmp
repz
add
mov
dec
add
popf
lods
pop
lret
jge
push
outsb
mov
sti
ja
jbe
mov
out
adcl
jg
scas
push
daa
jae
pop
xor
insl
xorb
pop
dec
mov
lock
out
mov
and
mov
filds
pusha
loop
lahf
in
add
xor
xor
lds
insb
gs
inc
nop
sbb
fwait
scas
inc
xchg
xor
xor
fsts
and
out
shll
inc
int
inc
shll
sbb
dec
out
mov
sbb
sub
iret
pop
sarl
sti
push
out
enter
jae
jne
sbb
lods
mov
mov
js
pop
loope
xor
or
shl
mov
lcall
rclb
xchg
pop
jb
mov
repnz
jl
loop
insl
fisubl
insl
shrb
fisttpl
mov
idivl
pop
jle
pop
cmp
cmp
out
dec
fwait
sub
xor
popa
arpl
push
leave
adc
mov
xchg
stos
cli
mov
outsl
jnp
mov
mulb
xchg
sti
shr
and
cld
or
push
pop
icebp
adc
cli
pop
xor
add
mov
fmuls
rcrb
mov
push
mov
enter
cwtl
dec
mov
f2xm1
ds
sub
sub
adc
loopne
inc
jmp
ds
jnp
data16
daa
xchg
mov
cmp
push
ja
xchg
xchg
insb
push
mov
call
mov
stos
or
inc
xor
jno
pop
fcoms
cmp
xor
jo
cmovl
cmp
xor
rorl
sub
jo
fisubs
push
mov
sbb
jle
xor
sbb
push
out
dec
insl
cmpsb
ja
mov
xor
fdivrp
cmp
stos
rcl
cmp
xchg
sub
test
inc
mov
push
stos
mull
jmp
sub
aaa
loopne
imul
scas
fiadds
push
jb
cld
pusha
fadd
movsl
inc
cmpl
add
rol
jmp
or
ss
xchg
sub
push
in
add
stos
test
and
jecxz
bound
push
inc
inc
mov
in
imul
fidivrs
pusha
ss
pop
sub
mov
push
lock
mov
data16
sub
or
mov
outsl
aas
ljmp
inc
dec
fucomp
sub
jmp
add
ret
sahf
and
test
inc
adc
pushf
mov
cmp
fsubrl
shll
out
sbbl
add
loop
das
sbb
out
call
xor
jecxz
scas
inc
push
mov
aam
mov
clc
push
and
or
dec
inc
in
je
dec
push
add
cmp
in
adc
mov
pop
jno
add
mov
pop
mov
jg
lahf
out
lret
adc
int
popf
jb
push
cli
xchg
test
int
movsw
sbb
out
push
aam
or
jnp
je
into
push
lret
loop
popf
fs
xchg
and
jne
movsl
mov
jp
xchg
cbtw
pop
lret
mov
push
iret
fisubrs
repnz
sub
ret
pop
pop
pop
addr16
idivb
test
and
inc
mov
sti
push
inc
repz
xchg
sub
add
push
call
pop
scas
cmpsl
jge
xor
xor
cmpsl
or
outsl
daa
dec
sub
jge
sbb
fnstcw
cmpsb
dec
fsubs
lea
pop
jbe
adcl
cli
mov
out
orl
pop
push
fwait
jg
jge
fistps
in
mov
adc
and
test
pop
es
mov
aaa
fadd
rcrl
inc
in
xlat
and
bound
sub
outsb
mov
aad
clc
in
scas
push
shl
dec
cmp
and
jecxz
pop
lcall
push
mov
addr16
and
jbe
dec
rdpmc
lret
dec
lods
int
fdivs
orb
mov
iret
push
dec
cs
fsubr
adc
or
jmp
andl
push
decl
in
jns
push
test
dec
adc
fstl
data16
jb
mov
jge
jle
jmp
mov
insl
adc
mov
adc
xor
adc
sti
sbb
lea
cld
clc
or
push
cmpsl
add
lret
sbb
pop
fisubs
cmp
mov
mov
or
negl
push
fsubp
mov
je
scas
mov
fxtract
push
addr16
imul
gs
adc
in
mov
ds
ret
out
jne
fsubrl
push
xor
mov
loope
cli
shrl
cld
xchg
test
mov
imul
dec
adc
jae
mov
lret
lret
ret
outsb
and
fnstsw
dec
in
cmp
imul
enter
and
pushf
rcrl
xorb
pop
cltd
inc
jmp
dec
xor
sbb
fxch
sub
shll
pusha
aas
jge
das
pop
add
add
out
stc
sub
push
clc
xchg
inc
or
or
lock
ja
push
and
dec
or
add
scas
xor
xor
mov
movsl
icebp
and
in
xchg
add
sbb
pop
mov
sub
or
push
aaa
pop
out
jae
fdivrs
loop
lret
bound
adc
jo
and
pusha
dec
icebp
mov
rorl
mov
movsb
or
xchg
jge
shll
push
lods
addr16
sahf
push
jecxz
xor
add
ss
dec
sti
lods
movzbl
je
pop
push
mov
iret
dec
lret
bound
lods
xchg
jmp
cmp
inc
pop
jae
shlb
push
jle
sahf
loope
adc
add
sub
mov
ror
stos
sbb
adc
es
mov
add
cmp
iret
mov
inc
mov
adcb
inc
nop
mov
rclb
stos
roll
mov
push
popf
jge
ljmp
mov
mov
jl
xchg
imul
push
test
xchg
stos
sbb
sahf
jle
enter
stos
mov
dec
and
ja
lds
fistpll
pop
adc
xor
divb
mov
adc
xor
adc
jnp
inc
lcall
dec
gs
add
cmpl
ret
and
ret
add
outsl
clc
jge
mov
loop
mov
lds
in
jl
fldcw
iret
pusha
stos
push
cmp
fistps
jne
pushf
pop
push
adc
out
pop
push
mov
mov
or
stos
mov
std
clc
sbb
cmp
cmp
jbe
cs
mov
add
dec
xchg
imul
xchg
into
scas
cmp
leave
cmp
mov
add
adc
notl
or
mov
hlt
hlt
outsb
add
add
fbstp
repnz
sub
jne
xor
sar
xchg
dec
in
xchg
cs
imul
outsb
dec
inc
aad
insl
or
dec
dec
cmpsl
mov
sbb
cwtl
ret
dec
xor
inc
rcrb
call
mov
iret
pusha
stc
clc
pop
cmp
out
stos
sbb
fs
gs
push
xchg
xchg
sub
ljmp
add
testl
inc
xor
fistpll
movsl
test
jb
fistpl
jge
hlt
scas
xchg
shrb
loopne
xor
imul
mov
loopne
mov
lahf
mov
stos
loop
je
xchg
cld
mov
rcrl
fistpll
sahf
mov
dec
mov
in
push
stos
jg
push
aas
xor
sub
sbbb
add
js
mov
inc
xchg
dec
and
repnz
mov
cmp
mov
mov
dec
xor
addb
in
test
iret
into
mov
jge
xchg
sub
jae
add
iret
mov
test
enter
inc
inc
andl
xchg
mov
xor
aam
incl
cmc
adc
std
into
and
push
mov
pop
loop
iret
inc
pop
gs
sbb
in
std
shll
les
mov
dec
push
mov
jmp
int
fld
cmpb
pop
push
out
add
es
xor
mov
sub
test
pminub
mov
mov
notl
jnp
pushf
and
fisubrs
jmp
sbb
jle
mov
stos
subb
mov
fistpll
fwait
xor
int3
pusha
imul
sub
out
mov
dec
pop
test
push
xlat
ret
jae
cmp
sbb
mov
arpl
sub
mov
aas
das
mov
fnstenv
shl
je
xchg
iret
or
adc
fnstenv
sbbb
inc
pop
dec
push
aas
dec
out
cs
sub
dec
jbe
cmp
mov
decb
faddl
roll
ficoms
in
mov
in
cltd
dec
inc
cmc
mov
and
inc
ljmp
mov
jae
cmp
popf
dec
in
in
inc
lahf
xchg
mov
jecxz
aas
push
lea
adc
xchg
sbb
mov
sbb
scas
pop
jmp
and
and
pop
movsl
add
aam
push
out
cwtl
dec
shrl
std
push
xor
pop
lahf
inc
push
dec
pop
pop
xor
jae
insb
scas
out
decb
call
dec
pop
sbb
xchg
jge
iret
push
or
push
or
aaa
and
push
inc
insl
jns
jns
imul
mov
test
inc
scas
adc
lods
dec
ss
pop
test
cwtl
and
sbb
push
push
inc
fildll
pop
icebp
pop
add
jbe
mov
std
nop
mov
jmp
scas
fiadds
lods
andb
xor
cmp
jae
mov
bound
cs
iret
dec
mov
stos
cwtl
and
fldl
ljmp
mov
mov
add
adc
or
inc
sub
iret
scas
jmp
dec
loopne
es
aad
push
pop
loop
or
add
fidivl
cmpsb
jmp
mov
mov
es
mov
lds
mov
push
push
cmp
xor
lret
popa
push
popf
sbb
les
xchg
mov
pop
ret
mov
out
push
iret
popa
clc
adc
mov
xor
arpl
push
xchg
cmp
mov
mov
push
mov
popf
stos
xor
adc
insl
mov
dec
dec
daa
jo
rcll
pop
pusha
add
inc
dec
mov
std
xchg
cmp
adc
pop
sahf
push
mov
push
out
and
inc
pop
ret
mov
xchg
cld
dec
push
sbb
jle
out
lds
xlat
jno
popa
inc
in
add
adc
test
inc
pop
icebp
js
pandn
cltd
js
lret
adc
mov
sub
lds
mov
pop
out
xorb
ds
mov
lahf
fimuls
shll
jp
sbb
pop
outsb
fidivrl
xchg
stos
loope
push
rol
lods
int
jmp
mov
push
mov
mull
push
out
mov
je
scas
arpl
in
xchg
insb
jp
pop
inc
insb
mov
aas
movsl
dec
stos
cmp
xor
jmp
dec
scas
imul
test
cmp
jp
add
cwtl
xor
xchg
push
dec
cmc
imul
adc
ss
inc
movsb
inc
sbb
push
xchg
sub
test
inc
fisubrl
cli
xchg
push
cmp
out
mov
mov
xor
sbb
loopne
cli
lea
ret
shll
xor
sub
mov
inc
mov
sub
je
stos
sbb
mov
ds
and
std
adc
jae
xor
jle
cmc
movsl
xlat
add
aad
add
cmp
jp
cmp
mov
sub
cld
lss
pusha
jge
repnz
shlb
data16
addps
sbb
fiadds
cmpsb
mov
mov
or
movsl
lods
std
xchg
test
dec
pop
inc
test
stos
jno
and
inc
and
loopne
xchg
push
inc
sub
aaa
push
or
add
sub
and
test
cli
js
push
ret
or
decl
data16
push
fidivs
push
adc
xchg
movsb
mov
insb
jmp
push
cltd
xor
dec
sub
push
cmp
movsb
in
loope
mov
andb
mov
ret
addb
mov
js
cmp
push
lret
scas
in
jmp
les
xchg
call
jl
loopne
mov
shlb
pop
stos
fdiv
mov
cmp
xor
sbb
mov
xchg
mov
adc
daa
mov
call
les
fwait
dec
ror
out
cmpb
xchg
pop
repnz
and
rcrb
xlat
and
sti
fcmovnu
imul
mov
mov
sbb
and
pop
push
stos
and
in
scas
inc
push
or
lods
mov
mov
test
cmpb
movsb
mov
push
mov
test
inc
and
cbtw
ret
jge
daa
cmp
fisttpll
cmc
dec
inc
add
xor
fisubs
div
and
add
sub
int3
pop
insb
dec
push
jmp
xlat
jo
or
or
ljmp
cmc
mov
xor
adc
jns
cs
fsts
and
add
leave
aam
adc
stos
imul
scas
ret
mov
xor
iret
mov
aam
call
test
mov
sbb
loopne
jp
push
cmp
cmp
sbbb
lods
and
inc
mov
push
sub
add
mov
loop
mov
fdivrl
lds
scas
and
push
rolb
mov
inc
and
shll
sbb
mov
or
mov
repz
adc
sub
cmpsb
mov
dec
cmpsb
mov
or
add
inc
test
loop
psrad
mov
nop
xchg
ja
fstpt
adc
pop
call
sti
dec
in
mov
sub
jle
adc
dec
push
or
inc
ret
xchg
fldcw
mov
pop
aas
dec
mov
das
pop
psubq
inc
and
stos
inc
imul
loopne
aas
mov
mov
mov
or
ds
inc
add
jae
cmpsb
mov
decb
ljmp
in
pop
mov
call
aaa
adcl
xor
push
roll
pop
loop
mov
cmp
jge
and
aas
flds
mov
jne
scas
ret
add
shlb
das
xchg
loope
rcl
mov
mov
jmp
dec
js
xchg
sub
cltd
iret
pop
inc
dec
sbb
fidivs
pop
mov
out
mov
push
into
push
imul
or
push
pushl
cmpsb
int
js
addr16
cmpsb
adc
aaa
xor
cld
mov
aaa
push
sbb
inc
sbb
mov
fs
mov
adc
daa
stc
adc
mov
mov
xlat
insb
fisubrs
cmc
xor
pop
mov
jne
stos
xchg
jns
movsb
inc
push
flds
mov
adc
ss
stc
sti
repnz
jnp
mov
add
sbb
jno
ss
inc
test
and
jne
testb
stos
push
dec
mov
popf
sti
push
cmp
cwtl
sbbl
les
cmp
push
stos
loope
leave
xlat
das
into
test
mov
mov
aaa
iret
out
pop
xchg
jbe
inc
add
pop
in
stos
add
mov
lcall
scas
into
aad
mov
xchg
push
rcrl
or
call
xchg
add
outsb
dec
jne
cld
mov
add
and
jg
pop
mov
cmp
dec
leave
in
jle
arpl
aam
es
mov
dec
fsubl
enter
xor
scas
or
adc
pop
testb
inc
fimull
xor
pop
ljmp
movsb
testl
ret
sub
cmpsl
xchg
int
testb
xchg
adc
adc
dec
arpl
dec
pop
pop
sbb
mov
mov
popf
cli
mov
or
sbb
nop
mov
sub
pop
test
sub
mov
rcll
mov
jge
jecxz
repnz
mov
inc
pushf
xchg
repnz
jnp
rcrb
mov
mov
xchg
stc
push
xor
insb
into
rep
inc
hlt
lret
aas
cwtl
lret
fwait
stos
scas
dec
lahf
lods
mov
mov
jb
jp
scas
inc
or
mov
xor
add
xor
out
and
loopne
in
stc
xchg
and
cmp
mov
mov
shlb
cmp
jbe
or
dec
sti
iret
sub
ja
lret
lock
sub
and
hlt
fistl
or
bndstx
enter
ljmp
push
adc
stc
cld
push
mov
iret
mov
jge
push
cmp
fidivl
xor
in
add
or
testb
enter
decl
mov
pop
mov
cli
popf
stos
push
lea
ss
xor
ret
mov
daa
test
mov
enter
push
popf
mov
pop
lods
inc
pop
pushf
or
mov
leave
sbb
arpl
jb
nop
mov
jecxz
popa
or
sahf
xor
sub
push
cltd
dec
inc
push
xor
gs
adc
les
int
js
xor
add
js
imulb
xchg
bound
jmp
mov
aad
std
push
scas
mov
pop
sub
lds
decl
mov
push
int3
inc
jne
sub
cwtl
loop
dec
xchg
or
sti
xor
iret
lods
xchg
lahf
xor
pop
jns
add
jns
xor
outsb
mov
out
mov
aam
fsubrs
test
cmp
jae
fcmovnu
fiaddl
or
xchg
fisubs
jmp
adc
sbb
jns
les
dec
mov
mov
and
and
ret
mov
push
xor
sahf
jne
ret
pusha
mov
xchg
ds
cmpsl
mov
inc
sub
jne
cmp
mov
adc
in
out
loope
push
mov
rcll
or
mov
popf
and
or
orl
mov
xlat
adc
inc
jl
mov
and
dec
popa
pop
jp
scas
inc
sbb
jne
cmpsb
fs
push
fists
add
cmp
add
adc
stos
rcrb
mov
mov
push
and
out
mov
or
arpl
jo
or
lods
push
sbbb
push
fsubs
dec
fdivrp
pop
mov
rorb
daa
or
repz
push
out
push
dec
mov
sbbl
or
scas
addr16
xchg
adc
fbld
inc
and
and
lods
andb
xor
test
xchg
ds
dec
adc
jbe
pop
aaa
subl
cwtl
addr16
mov
cmp
sbb
mov
push
rcr
aam
inc
into
mov
daa
out
or
dec
xor
ds
lahf
into
jg
push
inc
and
int3
pop
frstor
mov
sub
insb
cmp
test
notb
outsb
cmp
into
dec
out
rorb
xchg
jne
stos
inc
scas
mov
or
rcll
mov
mov
fisubl
repz
xchg
dec
jecxz
jns
fsubrl
jae
push
add
sarl
das
add
pop
mov
xchg
mov
fisubrl
out
sbb
cmp
loop
aaa
sub
loop
mov
mov
mov
loopne
lcall
sub
decl
imulb
repz
fidivs
sub
dec
and
xchg
ret
out
pusha
inc
and
testl
ja
addr16
pop
test
subb
sub
cmp
add
mov
push
adcb
ficoml
in
adc
fsubrl
jge
imul
jg
mov
fs
dec
dec
dec
int
cmp
push
xchg
pop
jge
aad
push
fwait
sub
lds
add
jne
add
arpl
imul
in
ficoml
out
mov
loop
inc
pop
cmp
out
stos
inc
push
popf
pop
push
add
push
pop
jge
and
test
scas
sub
push
jge
stos
and
xchg
aaa
or
arpl
movsl
sub
or
mov
sahf
push
push
push
in
adc
aad
xchg
and
xchg
cmp
xchg
sbb
sub
mov
mov
cmp
andb
push
lods
push
jbe
aaa
lret
in
ret
lcall
out
or
addl
das
mov
cld
push
test
aas
stos
sub
sti
dec
cmp
insl
sbb
out
mov
cwtl
mov
jl
adc
fmulp
sbb
mov
shll
xor
sub
test
fwait
xor
repz
and
lock
xchg
stos
lea
outsb
out
and
dec
bound
xor
pusha
xchg
daa
sbb
xor
gs
mov
jae
mov
push
mov
in
sub
fidivrs
pop
aas
mov
xchg
mov
in
jae
adc
imul
jne
jne,pt
sbb
ja
clc
icebp
jno
or
jp
lret
pop
sbb
cli
rclb
push
pushf
xor
mov
adc
mov
in
and
pushf
push
les
jmp
aas
push
pop
sub
ja
sub
sub
cli
mov
push
push
pushf
add
and
push
cmpsb
js
mov
call
pop
stos
fildll
scas
lds
das
mov
cmp
inc
pop
adc
into
mov
test
mov
stc
push
lods
inc
sbbb
sahf
popf
stc
int
dec
sbb
push
cmp
adc
adc
out
call
sub
jge
xor
sbb
add
adc
xchg
stc
mov
das
inc
xor
push
mov
fimuls
out
dec
dec
and
mov
jb
aaa
jbe
sbb
push
dec
sbb
mov
adc
bswap
inc
pop
lahf
ds
sbb
cmp
cmp
xor
dec
ljmp
jno
cmpsb
cltd
add
push
pop
in
sub
jge
mov
pop
cmp
xchg
pop
cmp
lods
dec
pop
out
sarb
fiadds
mov
loop
sbb
inc
sub
ret
leave
push
pushl
lods
aaa
popf
push
jne
xor
push
gs
ljmp
hlt
push
lock
mov
outsl
jp
popfw
ja
xchg
inc
pop
imul
stos
bound
add
mov
int
enter
mov
out
and
push
andb
inc
jp
mov
pop
xor
adc
int3
xchg
lea
or
mov
jg
stos
call
arpl
cli
lea
xor
fildll
mov
cmpl
insl
add
insl
xor
in
fnstcw
xchg
mov
leave
repz
mov
gs
pop
pop
xrelease
test
inc
rcrl
clc
gs
pop
dec
pushf
inc
popa
mov
loope
push
xchg
stos
in
addr16
cld
sbb
int3
sarb
and
je
xor
dec
shrl
ljmp
push
cmp
xor
adc
fimull
xor
mov
lahf
dec
out
cmc
add
pop
pushf
sub
adc
xor
fsubrs
or
sbb
aas
fbld
xor
push
lods
mov
and
pop
mov
mov
xchg
pop
shlb
ret
out
mov
lock
add
imul
lods
inc
fdivp
pop
out
out
or
lds
inc
mov
out
ss
das
movsl
int3
lcall
push
test
inc
dec
jb
movb
pop
loopne
pop
outsb
mov
add
pcmpeqd
dec
xlat
adc
ret
xor
push
test
add
subl
repz
in
ret
push
dec
loop
testl
aad
aas
xchg
int
mov
leave
out
pop
jb
es
sub
inc
and
inc
cld
mov
imul
pop
mov
int
call
cld
inc
imul
or
pusha
jae
xchg
add
ret
call
nop
repz
push
xchg
icebp
leave
test
in
arpl
add
lahf
xor
nop
rcrb
push
scas
and
in
and
or
push
push
lahf
mov
sbb
jns
fs
push
add
pusha
cmp
faddp
test
inc
jns
test
sbb
and
movsl
sub
lods
scas
pop
fistps
jns
pop
out
or
dec
pop
jb
gs
sub
pop
scas
insl
or
lock
nop
sub
scas
lods
cmp
insb
jp
xchg
pop
pop
outsb
std
sar
inc
sahf
cmpsb
xor
cmp
jnp
push
sub
and
xorb
jl
insb
push
pop
loopne
lahf
pop
mov
fisubrl
mov
orb
mov
mov
fwait
mov
pop
cwtl
and
mov
sub
insb
cs
sub
and
adc
xchg
in
jp
call
sub
sbb
add
inc
ds
fiaddl
cmpsb
scas
inc
mov
jecxz
mov
fldz
in
jmp
fcompl
inc
add
pop
push
int3
xchg
jl
jbe
mov
les
aad
xchg
adc
shrb
je
jnp
xor
mov
ss
daa
ret
fs
adc
xorb
fistl
stos
int3
mov
fisubl
dec
loopne
addr16
in
call
call
vmovdqu
add
jnp
js
pop
mov
xchg
insl
in
and
loopne
mov
sub
ja
sub
mov
dec
testb
loope
inc
daa
lret
mov
push
push
lods
pop
mov
adc
sbbl
sub
push
nop
fcmovne
push
aam
cld
pop
aad
adcl
scas
sbb
out
insb
in
fwait
dec
inc
dec
movsb
sub
aad
inc
jnp
repz
and
frstor
repz
jnp
xlat
addr16
pop
leave
subl
cmc
inc
push
dec
xor
arpl
mov
pop
sti
mov
xor
lret
and
dec
je
mov
adc
in
push
xor
out
cvtps2pd
fisttps
das
bound
loop
mov
adc
add
mov
sub
das
xchg
enter
int
scas
or
imul
insb
decl
dec
icebp
push
hlt
mov
mov
movsb
leave
pop
add
pusha
or
lea
es
jge
outsl
scas
xor
jne
push
add
call
cmp
div
ja
sbb
jmp
or
jge
jmp
sub
test
mov
mov
mov
cld
and
jno
sbb
stc
dec
mov
loopne
cmpsl
adc
push
pop
adc
fdivrl
pop
imul
out
lods
ja
mov
push
pop
push
push
movb
int3
in
sahf
lods
sbb
std
sti
xchg
xor
xor
lock
cmp
pushf
adc
loop
sub
push
cmp
cmp
ja
and
sti
cmp
mov
in
pushf
xor
out
or
es
or
cmp
dec
add
subb
xchg
xchg
mov
das
xchg
fidivrl
sbb
ds
sarl
in
fisubrl
pop
mov
inc
pop
fldcw
mov
sti
out
pop
negb
dec
fistpll
out
sub
sbbb
popa
outsl
jl
and
xchg
sbbb
jmp
pushf
addb
mov
mov
mov
adc
sbb
pop
arpl
leave
out
fnstcw
idivb
sti
loop
push
je
mov
jl
push
dec
popf
call
sub
add
jg
xchg
xor
dec
pop
inc
pop
push
pusha
je
add
rorb
ja
ljmp
gs
inc
fdivl
sahf
jmp
fs
push
add
inc
or
adc
call
mov
js
xor
fildl
mov
and
shrb
mov
mov
loop
stos
mov
outsl
lds
jp
xchg
add
lahf
out
add
mov
mov
aaa
btr
push
bound
mov
and
dec
ja
or
and
fdiv
dec
test
cmp
pop
insb
cmp
fcmovu
sti
mov
mov
mov
addr16
pop
neg
hlt
sbbb
fisttpll
not
idivl
gs
and
or
clc
das
mov
daa
push
std
ret
jno
and
sub
movntps
mov
mov
repz
insb
inc
popa
xlat
sub
cmpsb
push
push
mov
int3
cmp
jp
int3
fistl
mov
aaa
push
mov
inc
fidivrs
movsl
inc
ret
adc
out
into
in
arpl
out
in
mov
insl
add
test
add
push
sbb
sbb
dec
aaa
and
xchg
in
outsl
or
mov
nop
xorl
mov
pop
push
pop
pop
pop
call
pop
xor
cmpsb
xchg
outsb
outsb
das
repz
adc
jl
jle
dec
sti
or
pusha
mov
fsubs
jle
inc
xor
mov
dec
movsl
mov
out
and
outsl
adc
or
rep
or
jl
pop
test
adc
out
adc
jmp
mov
in
not
fisubs
cwtl
sbb
popf
push
outsb
add
pusha
ljmp
arpl
push
fbstp
jg
jl
or
fwait
loope
inc
adc
xchg
inc
mov
rolb
lret
aaa
adc
cwtl
in
popf
sbb
cwtl
or
mov
mov
cmp
stos
jecxz
frstor
sub
fsubrs
xor
subb
inc
imul
jae
jae
push
lods
xchg
sbb
leave
ret
lret
push
inc
push
enter
xchg
or
sbb
mov
mov
ret
sub
les
cmp
adc
jo
inc
mul
jno
data16
sub
and
jp
push
lea
mov
cwtl
mov
into
fidivrs
rcr
or
or
push
sbb
cmp
or
sub
add
cmc
sbb
sbb
sti
adc
and
push
jmp
je
outsb
mov
clc
xor
call
lods
fcompl
iretw
insl
and
or
inc
push
jne
shr
dec
sub
fistpll
dec
dec
jns
cmpsl
cmpsl
rcrl
push
outsb
and
pop
js
push
daa
lcall
pop
push
mov
cltd
fistpll
roll
pop
iret
fildll
sbbb
inc
ljmp
test
add
lods
orl
js
mov
jae
lea
push
lock
ljmp
jno
mov
xor
pop
out
out
outsb
mov
int3
xchg
arpl
push
mov
cmp
adc
adc
jge
hlt
mov
add
hlt
jno
stc
push
lcall
sub
in
sti
jns
and
aad
cmpsl
or
mov
add
es
loopne
test
js
fistpll
imul
and
cmp
cmp
movsb
and
fwait
jge
in
add
xchg
pop
das
inc
test
cmp
mov
sbb
sbb
aas
or
faddl
or
cmpsb
fsubl
mov
jle
outsl
ljmp
stc
std
xchg
and
sbb
mov
shl
stc
std
pop
pop
jge
adc
js
cmp
or
mov
mov
dec
shll
ret
cli
lahf
mov
test
xor
arpl
push
lret
imulb
lods
sbb
lahf
lods
lea
pop
mov
push
movsb
xlat
push
cld
cmp
pusha
dec
popf
pusha
dec
sub
insb
das
popf
fnstsw
xchg
into
xchg
xor
push
sbb
mov
ror
sub
xchg
fsubrp
pop
repnz
jnp
jmp
jb
push
mov
icebp
sub
mov
jle
mov
mov
lock
test
dec
inc
xor
es
sbb
sub
pop
es
loope
lahf
fimull
rcrl
popf
and
int3
test
cmp
lahf
inc
xchg
inc
pop
ret
outsb
xor
outsb
insb
xchg
push
int
pop
jmp
mov
pop
or
cmc
dec
add
mov
daa
adc
mov
add
xchg
xchg
push
xor
stc
popa
aas
mov
fsts
pop
movsb
push
push
les
pop
shrl
push
je
lods
xchg
filds
push
jg
idiv
xchg
sub
icebp
adc
repnz
and
xor
cmpsb
adc
fmul
mov
cld
repz
out
and
sub
sub
jne
in
repnz
xchg
and
mov
xchg
or
and
inc
call
cli
mov
push
lahf
nop
jmp
lcall
inc
ljmp
pop
sub
mov
aas
pop
insb
pop
inc
ljmp
or
push
call
fstl
xor
popf
mov
cmp
mov
mov
loopne
inc
mov
and
cmp
idivl
ret
sub
adc
shl
xor
fisttpl
xchg
dec
mov
jnp
insl
es
push
inc
pusha
cmp
repnz
gs
dec
mulb
les
jbe
mov
push
xchg
shrl
dec
bound
imul
xchg
xor
xchg
stc
dec
add
sbb
jle
lcall
ds
out
adc
push
inc
fisubl
jl
cmpl
xchg
pop
jl
pop
jns
adc
pop
imul
ror
fs
dec
imul
pushf
adc
mov
fidivs
ret
xchg
out
mov
das
insl
aad
pop
insb
jge
imul
loop
lods
pop
sti
mov
mov
pop
call
std
push
push
and
dec
mov
or
mov
or
int
mov
or
pop
or
loop
dec
pushf
insb
test
imul
fs
cwtl
jno
mov
stos
ret
test
je
xor
xchg
jmp
or
mov
sbb
or
fwait
pop
mov
loope
aaa
jp
out
movsl
mov
pushf
sar
mov
xor
fistl
pushf
cwtl
mov
sbb
jno
push
aaa
iret
icebp
mov
loope
lock
cmpsb
pop
cmpl
sub
pop
pop
push
dec
lods
shl
cmp
jecxz
pop
and
push
cmp
xor
icebp
aas
jno
dec
xor
fdivl
push
fsubl
xchg
loope
inc
mov
and
push
imul
mov
jnp
pusha
mov
sbb
mov
daa
mov
movl
cmc
jnp
adc
test
mov
xor
mov
arpl
mov
xchg
push
and
sub
pop
jne
inc
loopne
std
lahf
mov
or
pusha
or
in
adc
push
sti
xor
pop
xchg
movsb
shlb
sbb
arpl
or
cmp
jge
jl
inc
xchg
mov
cld
mov
shlb
jae
in
iret
or
mov
pop
addr16
xor
xchg
mov
in
rorb
mov
xor
jl
jl
xor
sub
xlat
pop
dec
addr16
jo
push
pop
out
jbe
addr16
cmpsl
push
ja
inc
aam
lods
repz
sbb
mov
jmp
arpl
cmpsb
push
inc
test
or
nop
cmp
mov
push
test
sahf
lods
ror
lret
dec
push
stos
mov
ret
test
insl
shll
outsl
add
clc
xchg
sub
cmp
mov
lods
in
inc
xchg
arpl
xor
popa
test
mov
inc
xchg
cmpsl
jbe
cmp
fidivl
sbb
inc
out
dec
lret
sahf
cmp
push
and
xor
into
fsubl
je
mov
adc
lcall
into
outsl
cmc
or
adc
pop
push
adc
jno
adc
ja
clc
test
mov
push
xchg
xchg
push
lods
sbb
lods
sarb
dec
mov
jg
cmc
fisttpl
ret
jae
sbb
pop
sbb
rorl
scas
push
mov
loope
cmp
xlat
dec
or
in
leave
lahf
mov
push
and
fisttpll
test
insb
ja
icebp
adc
pop
jl
pop
dec
pop
jle
jle
cli
mov
pop
scas
data16
ret
add
or
mov
xchg
mov
shll
or
push
jb
xor
xchg
xchg
imul
dec
inc
xchg
or
sbb
sub
and
aaa
out
repnz
sbb
cmovne
push
aam
sbb
test
inc
xchg
dec
ss
inc
mov
xchg
mov
jmp
dec
pop
movsl
or
divl
ret
outsb
add
daa
dec
fidivs
mov
arpl
js
das
aas
dec
mov
lea
xlat
and
adc
mov
mov
or
mov
cmpsb
push
movsl
rcl
call
mov
inc
loop
mov
adcl
insb
jns
lock
cmp
xor
ror
gs
xor
dec
or
xor
pop
insl
xchg
jae
icebp
rcll
scas
test
lret
or
cmpsl
push
inc
call
sbb
int3
outsl
add
jne
xchg
xor
sub
cld
sahf
xchg
cld
fisubrs
into
data16
jecxz
pusha
mov
inc
frstor
insl
push
inc
stc
add
and
mov
int3
pop
iret
pop
jl
and
xor
cwtl
fdivrl
dec
dec
jno
ljmp
imul
mov
nop
btr
jmp
cld
lahf
andl
cmp
pop
in
mov
pusha
popa
jns
test
jns
rcrb
adc
arpl
pop
xchg
fisubl
jo
mov
push
ret
nop
test
ljmp
mov
mov
sub
push
or
cmp
stos
cmpsl
pop
andb
dec
pop
pop
es
jns
stc
ss
mov
inc
lods
sub
iret
xor
pop
test
sbb
cmp
js
mov
imul
test
dec
pop
jne
sbb
hlt
in
adc
arpl
and
out
pop
mov
frstor
shll
ja
dec
out
insb
cmp
dec
lret
out
xchg
sub
rorb
sbb
adc
lret
cmc
or
test
cmp
ret
in
test
or
rorb
jmp
icebp
pop
jo
leave
jmp
add
sub
inc
int
mov
addr16
mov
lcall
lods
test
int
je
out
push
cltd
fildll
sbb
push
pop
aam
mov
mov
lock
movsb
adc
lcall
adc
fdivrl
mov
rcr
mov
mov
inc
les
jbe
dec
ffreep
xchg
lea
cmp
push
push
mov
mov
aaa
push
xor
fprem1
and
fnstcw
xchg
cwtl
loopne
lret
cmpsl
mov
enter
pusha
daa
rcrb
adc
mov
push
popf
lods
xchg
es
loope
mov
sub
mov
cmp
dec
jns
push
in
lds
jb
push
aam
mov
push
test
and
xchg
push
xchg
sub
adc
pop
out
cmp
inc
lcall
popl
rcll
mov
cmovns
mov
sub
repnz
mov
inc
mov
jge
inc
out
es
cmp
xchg
sub
iret
popf
pushf
mov
into
lods
decb
pop
hlt
cwtl
xchg
jae
cmp
test
mov
mov
int3
xor
xchg
jae
cmpsl
nop
pop
dec
mov
lret
sbb
int
clc
addb
mov
mov
inc
jne
inc
fldl
testl
push
add
sbb
mov
leave
lcall
mov
push
out
or
in
test
fnstcw
ret
xchg
movsb
xchg
sbb
mov
clc
call
subb
rcrb
leave
lcall
mov
insl
cmc
ds
into
lahf
inc
out
mov
pop
push
dec
shlb
test
mov
rcpps
jne
cltd
lock
mov
dec
or
sti
adc
hlt
test
jl
inc
das
cmpl
pop
dec
dec
ss
pop
dec
pop
or
sbbb
das
inc
mov
inc
add
icebp
setns
inc
les
xchg
mov
mov
sbb
dec
sbb
xchg
test
push
cmc
sbb
lret
jo
mov
push
in
jns
jbe
xchg
lcall
inc
scas
inc
mov
xor
sbb
jg
sbb
mov
cmp
aad
cmp
popf
stc
aam
sbb
mov
cmp
pop
jno
and
mov
xchg
pusha
movb
push
mov
cwtl
and
movsb
sbb
jecxz
mov
hlt
mov
lcall
in
pusha
pop
and
ss
push
push
pop
pop
add
stos
lods
stc
add
test
sbb
push
outsl
xchg
and
rcrb
outsl
mov
mov
inc
arpl
sbb
fadds
mov
mov
ljmp
xor
sbb
ret
push
pop
fsub
sahf
out
les
jae
cmp
inc
and
cmpsb
xor
add
pop
cmpsl
pop
cmp
repnz
jmp
lret
call
test
lahf
and
push
sahf
insl
or
test
test
inc
es
push
in
sti
repnz
pop
hlt
push
lret
gs
dec
in
mov
cmp
jmp
sub
pop
adc
imul
jle
cld
fs
fstp
ss
int
mov
ret
inc
cmp
xchg
sub
loope
sti
jns
loop
xchg
in
clc
pop
push
lcall
jae
adc
sub
sti
pop
test
gs
adc
fiaddl
jge
sub
nop
ret
in
jle
xchg
in
lcall
xor
pop
jl
xor
enter
not
hlt
fisubrs
out
test
push
cmp
push
cmpsl
in
adc
inc
jg
and
push
mov
shr
les
rcrl
stos
jmp
je
das
xor
xor
cmpsl
fcmovnb
stos
pop
loop
lret
jae
push
add
imul
das
push
andb
cltd
movsb
xchg
cld
xchg
inc
add
cltd
push
fnstcw
ja
popa
out
hlt
dec
mov
inc
sub
xlat
mov
mov
addl
cs
pushf
jp
inc
xorb
jp
dec
sbb
fwait
xor
sbb
xor
rcrl
adc
stos
or
jo
loopne
popf
or
and
jle
or
lahf
cwtl
es
rcrb
pop
mov
and
sbb
and
mov
lret
push
mov
sub
xor
jb
lock
sahf
mov
pop
int3
gs
pop
mov
fdivrl
cmp
sti
adc
or
push
and
pusha
inc
data16
xor
imul
add
sarb
inc
dec
jo
dec
into
out
jne
out
aaa
loop
add
fimuls
scas
out
push
xor
or
movsl
mov
daa
add
mov
cmc
sbb
or
mov
mov
push
pop
lock
mov
mov
push
lods
jecxz
xchg
insl
xchg
add
fwait
mov
sbb
inc
dec
ss
xchg
pop
inc
movsl
cmc
movsb
adc
pop
imulb
jno
adc
jnp
fstpt
scas
cmp
sub
inc
and
arpl
mov
and
pop
insl
inc
mov
xor
pop
mov
dec
sarl
bound
scas
xchg
pop
mov
daa
data16
fsubrl
ret
add
inc
outsb
pop
pop
icebp
fwait
cwtl
stos
mov
out
add
stc
jg
xchg
jg
xchg
mov
push
mov
xor
jmp
or
std
outsb
insl
xchg
dec
sti
add
sbb
sbb
pop
jle
sbb
lahf
in
icebp
xor
mov
shrl
cmp
test
gs
sub
mov
inc
mov
ret
inc
pop
pop
sbb
dec
pop
scas
idivl
sbb
lcall
cmpsl
cmp
sbb
mov
cs
int
loop
dec
adc
mov
mov
add
imul
leave
ljmp
jmp
call
mov
xchg
lods
cmp
push
repnz
xor
mov
ss
movsb
xchg
outsb
jle
jno
movsl
movsb
xor
dec
rorl
sub
dec
inc
push
mov
xchg
into
arpl
mov
repz
lock
jae
enter
test
xchg
fisubl
mov
outsb
daa
cmp
into
add
scas
mov
aam
out
and
inc
loop
pusha
pusha
test
xor
mov
ret
jle
gs
cltd
std
mov
dec
mov
adc
cs
mov
xchg
sub
shlb
xchg
not
push
cmpl
stos
push
xor
add
std
xchg
fwait
jl
bound
xchg
jo
loop
sbb
mov
stc
fdivrl
push
in
cmp
roll
add
xchg
push
pop
or
fistps
into
xchg
adc
leave
cmp
hlt
push
mov
outsl
inc
fstl
push
mov
cs
imul
xchg
sub
jge
dec
or
cmp
mov
lcall
in
jae
out
lret
or
je
sbb
and
add
dec
pop
addr16
mov
ljmp
fnstsw
pop
icebp
mov
call
add
outsb
in
xchg
or
mov
jo
ret
sbb
iret
cmpsb
insb
adc
add
imul
pop
cmp
dec
int
cmpb
push
pop
loope
fistpl
sbb
adc
xchg
push
hlt
and
mov
movsl
lods
pop
clc
mov
dec
xchg
add
cmp
adc
cmpsb
int3
cwtd
sbb
adc
jbe
ljmp
loopne
push
sbb
mov
ss
shll
dec
jb
xchg
out
cmp
or
adc
std
fiadds
sbb
mov
push
dec
pop
or
mov
cmp
pusha
jnp
in
test
aam
and
jmp
mov
movsb
shlb
pop
out
mov
insl
cld
shl
sub
adc
sti
in
sub
iret
jo
add
inc
push
lods
aam
js
mov
cld
adc
inc
test
sub
sub
mov
icebp
push
push
notl
js
mov
in
pop
adc
cmp
mov
stos
dec
rcrl
inc
inc
sub
dec
in
ficompl
cli
sbb
andl
mov
sbb
ja
scas
xchg
add
inc
aas
movsb
data16
jecxz
or
mov
xchg
test
aam
cmpsb
push
mov
cltd
or
pop
xor
fstpl
gs
dec
jo
add
cmp
insl
stc
sti
cmp
pop
jne
push
pushf
cmp
clc
aaa
adcl
push
sbb
push
in
cmpl
insl
mov
push
ret
cld
inc
mov
sbb
or
adc
out
sub
xchg
mov
enter
mov
cld
xchg
lods
es
rcrl
push
mov
mov
mov
imul
sub
insb
push
xchg
xor
pop
sub
push
or
push
jo
ljmp
das
push
or
leave
adc
fucomip
lods
or
cmc
inc
shll
in
test
mov
ja
arpl
inc
add
out
sbb
pusha
and
push
xorl
fsts
jns
xchg
cs
dec
out
pop
mov
jbe
pusha
or
adc
jne
pop
rcll
xor
jae
aaa
idivl
push
outsb
add
ss
pusha
mov
sbb
xor
cmp
push
and
sahf
lret
jg
in
in
stos
push
dec
jns
das
and
aaa
je
mov
stc
sbb
mov
xchg
sub
jno
cli
xchg
sbb
inc
mov
dec
in
push
into
outsl
sbb
divb
sbb
dec
dec
add
popf
cmp
mov
cli
xor
ljmp
dec
lcall
sub
repz
dec
cmp
jp
loope
mov
xor
xor
jle
in
jecxz
xchg
mov
rolb
and
sahf
cld
sbbl
or
adc
jo
sub
mov
or
fucomi
scas
inc
or
add
jge
adc
push
ds
jbe
stos
in
xchg
mov
dec
es
loop
jns
add
mov
sti
mov
and
cmc
mov
push
test
push
std
sub
jmp
mov
mov
pop
dec
mov
push
cmc
xchg
aad
shlb
in
dec
mov
pop
ja
shrl
mov
jge
fwait
loop
ss
dec
mov
or
ret
scas
push
add
add
pop
addr16
out
rorl
add
ret
movsl
cmp
xor
fisubl
ret
pop
sahf
mov
sarb
loope
jae
mov
fisubl
call
mov
into
imul
out
mov
int3
mov
popa
clc
jmp
xor
or
inc
int
cmp
xchg
push
xlat
lcall
mov
pop
je
fnstcw
pusha
push
add
out
packuswb
and
movsl
add
adc
cmp
inc
fnstsw
in
sahf
cmpsl
jecxz
fnstcw
mov
test
scas
xchg
dec
shlb
and
xlat
scas
inc
out
xchg
push
adc
pop
inc
cmp
in
xor
mov
lcall
and
sub
nop
pop
mov
les
rcr
and
mov
xchg
xor
add
push
inc
in
ljmp
xor
cmp
pusha
mov
pop
inc
in
push
dec
fsubs
lret
sub
inc
dec
hlt
idivl
je
adc
pusha
in
mov
adc
scas
insl
lret
pop
push
loopne
daa
push
inc
gs
or
das
add
add
push
pop
jns
cmp
insl
jno
cld
loope
pop
scas
stos
test
shrl
and
rorl
lret
data16
push
in
jg
mov
ret
pop
into
pop
sahf
sbb
dec
test
push
movsb
outsl
lret
imul
xor
mov
jno
sub
xchg
int
lods
mov
out
stos
sahf
jne
cltd
leave
aad
mov
dec
in
shll
lcall
movsb
sbbb
and
in
push
and
into
mov
shll
xor
mov
mov
or
cmpl
mov
pop
jecxz
pop
mov
or
mov
imul
ror
inc
lret
bound
and
xchg
pop
ljmp
jno
or
scas
push
push
roll
inc
ja
dec
push
cmp
pop
insl
mov
mov
push
mov
and
popf
jecxz
mov
jmp
outsb
xchg
mov
jmp
inc
jne
mov
ja
dec
and
insl
mov
xor
push
and
loope
jecxz
adc
sub
mov
add
pop
test
out
sahf
std
or
cltd
int
insl
mov
fnstsw
cmp
test
std
pop
lret
mov
inc
loope
dec
pushf
test
mov
lock
or
scas
and
mov
je
mov
fwait
mov
insl
jecxz
push
and
mov
push
idivl
ljmp
call
pop
add
cli
jl
sub
jl
and
into
stos
and
jmp
sub
xchg
testb
addb
mov
mov
push
sbb
andb
xor
jle
xor
pop
sti
addr16
inc
lret
inc
stc
mov
idiv
jo
xor
or
fstpl
mov
adc
jle
neg
clc
lahf
or
inc
gs
test
mov
add
lret
inc
sbb
dec
mov
dec
iret
inc
ficoms
sub
icebp
out
das
sahf
in
rcrl
sbb
cmp
cmc
gs
xchg
sub
sub
scas
into
jno
cmc
xchg
add
loopne
pop
popf
xor
xchg
add
icebp
cmp
jl
test
dec
cmp
fs
sbb
dec
jmp
hlt
mov
test
mov
jg
inc
test
xor
push
in
cmpsl
adc
pop
adc
push
cld
xchg
aaa
jbe
mov
push
loop
push
xor
aaa
fstpt
ret
push
jno
outsl
pop
mulb
sarl
leave
adc
inc
sbb
dec
cltd
insl
sbbb
mov
insl
add
push
ss
adc
push
mov
sahf
mov
int
ret
hlt
mov
insb
add
ss
roll
jmp
aaa
ss
mov
sbb
out
push
dec
es
add
xlat
ss
pop
adc
mov
or
repz
cmp
jecxz
push
call
mov
sub
sub
mov
or
out
or
imul
ficompl
fldcw
xchg
mov
lds
int3
xor
lret
ficompl
mov
shlb
ret
jle
jns
mov
adc
ret
popa
mov
push
in
out
std
xchg
es
cli
iret
rolb
clc
push
jl
out
sti
aaa
mov
add
gs
les
jl
cmpsl
subb
sub
stos
inc
push
cmpsl
dec
movsl
mov
mov
mov
push
pop
xchg
sub
cmp
xchg
repnz
push
nop
add
dec
jmp
xchg
movsb
inc
in
jmp
lret
dec
rorl
inc
fs
inc
xor
mov
ss
jb
jbe
inc
and
jo
add
mov
fstps
out
vpunpckhbw
and
push
into
cmp
in
sar
adc
shrb
lea
mov
sti
aas
sti
adc
xchg
dec
jb
xchg
cmpsl
mov
fnstenv
pop
scas
inc
xor
sti
out
dec
aam
xchg
mov
sbb
aaa
xchg
jg
pop
cmpsb
or
lods
scas
daa
dec
pop
addr16
cltd
rcll
lret
bound
fldz
movsl
cmp
in
stc
hlt
xor
pop
js
daa
adcb
das
int
jmp
popf
sub
xchg
sbb
lods
pushf
jg
bound
inc
hlt
loop
and
push
sub
add
and
jle
mov
pop
cli
mov
mov
sahf
stos
or
cmp
test
outsl
add
jo
mov
xor
or
mov
or
notl
add
and
mov
xor
mov
cltd
out
pop
adc
mov
adc
jbe
ret
nop
andl
testl
mov
add
jnp
push
xor
pop
dec
or
xor
mov
mov
xor
xor
inc
icebp
inc
xchg
push
xchg
cmc
push
or
mov
or
lcall
mov
insl
outsl
sub
notl
inc
jnp
call
repnz
jb
or
xor
jbe
in
in
xchg
push
mov
ficoms
sub
lock
out
test
dec
pop
int
xchg
ljmp
jne
insl
test
adc
mov
dec
and
sub
outsl
jmp
cmp
testl
sub
rcrl
popa
jns
mov
mov
lds
xchg
push
out
xchg
bound
cwtl
mov
xor
mov
inc
sub
dec
shlb
insl
xor
sbb
sbb
jnp
add
jge
rol
ja
adc
adc
adc
pop
or
inc
sahf
lods
mov
mov
mov
rcll
adc
stc
out
xchg
sub
call
lahf
clc
mov
mov
enter
dec
xor
daa
lret
jae
rolb
or
adc
jp
and
push
cmp
or
rorl
aas
dec
push
push
stos
mov
sbb
push
decb
pop
sub
dec
push
sbb
pop
inc
jbe
stos
dec
imul
ret
xor
shr
add
adc
pop
movsb
jmp
clc
xor
xlat
outsb
sub
je
push
shlb
and
pop
pop
push
and
push
lods
out
das
mov
rol
ficomps
cmp
dec
pop
sti
loopne
sub
enter
test
xchg
jbe
and
fwait
out
mov
call
or
aaa
mov
lea
push
or
and
out
je
jns
mov
sub
push
daa
mov
jecxz
outsl
pop
rorl
inc
aad
sti
insl
in
mov
mov
or
fsubp
jle
inc
lcall
pushf
imul
xlat
imul
sub
icebp
insb
in
add
mov
lret
arpl
notb
pop
out
fnstenv
idivl
and
iret
push
inc
add
inc
pop
inc
daa
inc
fstps
or
or
jmp
dec
jle
inc
nop
shrb
lods
popf
cli
xchg
lds
orb
lahf
adc
xchg
xor
adc
jno
lock
push
popa
int3
pop
sbb
rcl
push
pop
aaa
iret
dec
mov
clc
sub
adc
sub
mov
fdivrl
nop
bound
out
roll
cmp
mov
sub
shl
roll
rolb
cmp
xchg
xor
loopne
or
sub
sbb
jo
ret
adc
stos
mov
or
jnp
sub
mov
sub
mov
mov
mov
les
rorl
dec
daa
jo
fadd
hlt
xchg
jg
inc
mov
mov
push
lods
sub
ret
repz
stc
adc
cltd
mov
lock
cmp
jp
ljmp
iret
sti
mov
xor
cld
lret
shlb
rsm
fcmovnu
pop
mulb
stos
push
fidivrs
and
inc
test
add
out
imul
clc
pop
mov
dec
jns
repnz
ds
mov
stos
dec
mov
or
popf
nop
xor
adc
fisubs
pop
iret
data16
ret
and
sub
pop
ds
nop
jo
sub
out
or
cmp
stos
inc
and
rcll
lahf
and
xchg
insl
popf
mov
mov
test
jnp
outsb
xchg
std
loop
xchg
push
push
sbb
push
mov
inc
lahf
and
mov
sbb
imul
cmp
xchg
jmp
xlat
xchg
scas
adcl
lods
mov
sub
iret
push
sarl
ss
ss
push
out
push
fistpll
fsubr
icebp
add
mov
ljmpw
aaa
xchg
fnsave
iret
mov
add
dec
pop
pop
call
or
outsl
shll
mov
xchg
mov
outsb
cmpb
jbe
aam
adc
jns
int
cmp
xchg
ljmp
adc
test
in
rcr
mov
test
je
lods
scas
inc
fstpl
mov
movsb
mov
mov
aas
fidivl
repz
cli
jle
jmp
sub
mov
nop
cmc
dec
jmp
loop
outsl
push
loopne
lea
int3
mov
out
push
ret
bound
adc
sub
outsb
add
cld
mov
and
out
cld
cld
test
ficompl
mov
and
insb
rclb
xor
out
fidivs
xchg
aas
mov
jge
inc
xor
and
inc
fnstsw
stos
sub
pop
cmp
mov
jmp
mov
pop
sarl
aas
outsb
in
pushf
fimull
popa
jne
sahf
jne
pop
mov
pop
gs
pop
mov
pop
add
stos
repz
jmp
push
adc
push
stos
jp
add
fistpl
lods
lea
mov
sbb
test
lods
das
bound
mov
jmp
lret
mov
xchg
mov
mov
jl
or
jle
lods
mov
or
iret
xor
pushf
scas
sbb
fucomp
popf
lods
shlb
xor
idivb
cld
out
inc
inc
and
dec
loop
sbb
insl
dec
cmpsb
cmp
sub
sahf
push
ljmp
call
pop
sub
push
sub
adc
xchg
push
pop
in
inc
inc
icebp
jo
xchg
xor
push
sbb
mov
fldcw
movl
test
or
lahf
in
out
fisubl
orb
jge
ror
mov
pop
lret
mov
and
mov
cmpsb
or
sub
mov
testb
andb
shll
orb
inc
fstl
arpl
push
xor
mov
nop
cmp
pop
out
add
popf
out
cs
aad
and
dec
in
inc
sub
imul
stos
mov
jnp
pop
adc
xchg
adc
dec
iret
data16
mov
xchg
xchg
inc
std
mov
mov
in
test
and
test
mov
pop
push
pushf
push
subl
stos
sbb
andl
mov
add
pushf
jo
jmp
mov
mov
daa
or
ja
inc
pushf
imul
mov
hlt
dec
mov
jg
pusha
aaa
sarl
or
cmpsl
pop
push
daa
shrl
fidivl
adc
mov
mov
mov
mov
jno
std
faddl
inc
fidivl
clc
dec
lret
icebp
out
push
mov
dec
inc
lcall
xchg
dec
xor
arpl
aaa
adc
add
cmp
inc
fsts
xchg
lcall
mov
pop
and
rcrb
scas
fbstp
adc
bound
pushw
xor
adc
stc
inc
push
pop
adc
mov
lcall
enter
mov
inc
xchg
sub
aaa
add
and
inc
adc
push
jmp
pushf
sub
fstpl
rcll
mov
and
cltd
push
mov
xchg
xchg
lcall
aas
popf
mull
test
pop
xor
jg
mov
pop
clc
xor
xchg
jge
arpl
push
ja
in
ds
lret
and
dec
gs
imul
adc
add
movsl
icebp
mov
push
xchg
xchg
mov
les
push
mov
xchg
and
stos
push
sub
sarl
jg
cs
jge
fiadds
addl
lret
mov
xchg
jecxz
mov
xchg
sbb
popa
stc
std
jp
mov
push
shl
ret
rcrb
inc
sbb
cmp
cmp
je
frstor
fstpl
sub
popa
inc
std
imul
fcoms
sbb
dec
cmpsl
mov
mov
xor
or
out
lods
mov
int
or
aas
cmp
dec
aad
ss
repnz
outsb
mov
out
or
push
mov
xchg
xchg
push
mov
sub
push
mov
fcmovb
pop
push
and
xchg
pop
lds
fisubs
lds
adc
cmpsl
jbe
loope
hlt
movsb
and
mov
adc
les
popf
je
adc
mov
sti
adc
jmp
pop
into
sbb
fidivs
mov
cmpsb
dec
ret
mov
mov
mov
mov
fbstp
push
ret
daa
or
inc
idiv
xor
lods
push
outsb
mov
sbb
out
daa
mov
xor
outsb
jbe
lahf
scas
mov
loopne
cmp
inc
pop
pop
xor
and
mov
or
mov
mov
cmc
lds
lods
add
adc
sbb
and
aad
in
xor
test
push
mov
cs
pushf
out
or
jnp
sub
dec
aam
dec
pop
inc
icebp
outsb
std
into
xchg
mov
adc
fcoms
bound
pop
out
mov
dec
push
push
stos
lods
push
and
and
mov
ja
sarl
pop
dec
fsts
push
sbb
and
enter
cmp
push
sarl
rcll
jb
mov
fucomp
sbb
es
mov
in
jl
mov
insl
push
in
dec
fistps
push
lret
jge
test
adcl
cmp
cli
jecxz
sbb
mov
add
aam
enter
jmp
mov
mov
sub
ds
xchg
dec
mov
ljmp
pop
push
ljmp
inc
test
stos
lds
push
adc
and
cli
push
xchg
sti
jge
inc
or
mov
sets
mov
cmp
call
jne
push
in
addb
mov
mov
jg
loopne
dec
dec
cmpb
pop
pop
movsb
mov
in
out
mov
fnstenv
test
lds
mov
rclb
mov
popf
in
cmpsb
push
stos
fmuls
or
sub
dec
cwtl
lods
leave
mov
rcrb
and
cmpsb
or
mov
mov
lret
cltd
adc
in
xchg
imul
imul
push
sub
cmovns
les
push
pop
jo
jge
push
or
ljmp
cltd
push
bnd
lods
rcrl
notb
dec
pop
mov
pop
cmc
mov
jmp
fnstcw
adc
popa
mov
add
cld
inc
in
mov
fadds
pop
push
fnsave
test
jae
sbbl
repz
cli
pushf
loope
hlt
cmp
ljmp
cmpsb
lea
add
xchg
xchg
jmp
lods
fcomi
mov
faddl
hlt
clc
cmp
lahf
mov
jg
pop
or
loop
pushf
scas
or
add
repnz
xorb
pop
lds
stos
pop
jo
leave
testb
cltd
nop
rcl
insb
add
pop
icebp
push
outsl
das
jp
pop
and
enter
cmp
imul
sub
js
hlt
sbb
outsl
cli
xor
mov
das
inc
adc
pushf
inc
int3
mov
clc
add
popf
or
push
scas
aad
lock
stos
insb
sbb
and
pop
ja
loope
sub
psllq
pop
sub
cmpb
je
fidivrl
xchg
mov
inc
je
xor
push
in
xchg
push
es
pop
inc
repz
jl
test
jge
clc
lcall
sbb
dec
and
test
data16
fwait
loope
pop
pop
push
adc
and
jbe
push
inc
cmp
hlt
bound
int3
cwtl
hlt
mov
movsl
xchg
push
adc
cmpl
dec
daa
pusha
stos
lea
lahf
les
sub
ret
hlt
and
mov
cmc
cmp
cmp
mov
mov
add
cli
add
lahf
sub
push
jns
stc
stos
fsts
cmpb
out
sbb
hlt
pushf
dec
mov
imul
mov
icebp
movsb
cmp
mov
xchg
es
push
push
fcompl
iret
sbb
push
stc
aad
sub
stos
sahf
popl
mov
inc
loope
push
shll
mov
pop
sub
loop
mov
lahf
add
mov
stos
push
test
push
mov
aad
cmp
int3
xchg
imul
gs
loopne
sbb
in
lds
aam
and
mov
inc
mov
sub
cmp
sahf
lods
dec
inc
hlt
push
xchg
loope
les
mov
jo
push
jl
xor
add
fldt
into
gs
pop
call
jnp
dec
and
jno
lret
add
in
test
das
cmp
jmp
xor
dec
out
idivb
dec
mov
inc
arpl
and
xchg
pop
xor
mov
rcll
sahf
push
adc
adc
sub
stos
inc
inc
push
dec
pop
adc
leave
inc
xchg
xchg
jne
push
sub
dec
push
in
cltd
lret
stc
mov
in
dec
aaa
or
adcb
cmp
mov
add
test
push
pop
mov
lret
sar
fnsave
in
push
or
push
sub
adc
push
rorl
test
mov
mov
movsl
lds
aad
jns
les
outsb
nop
add
mov
icebp
sahf
and
inc
pop
jg
fs
repz
roll
jns
adcb
push
pop
lahf
pushf
pop
repz
fwait
mov
pop
icebp
mov
mov
jno
pop
xchg
add
xchg
jl
push
dec
sbb
ret
out
clc
fists
push
ficompl
push
cmp
stos
jmp
xor
xchg
std
enter
fstpt
pop
mov
sti
xchg
cmp
in
jle
xchg
sub
cld
je
cs
gs
pop
jb
xchg
push
xor
into
inc
lea
jecxz
jp
xchg
dec
add
mov
scas
aaa
subl
sub
mov
push
adc
mov
jo
xchg
mov
scas
ret
out
push
adc
addl
xchg
mov
sbb
cmp
js
fucomi
dec
pusha
inc
mov
xor
push
push
stos
rcll
shlb
sub
out
sub
outsl
mov
cmp
insb
and
cltd
cld
dec
sbb
mov
push
icebp
mov
and
or
push
xorl
lods
mov
pushf
popa
data16
xchg
mov
test
shr
mov
push
call
cmpb
jl
shlb
sbb
aaa
stos
pop
or
fsubs
xchg
sub
movl
or
cltd
test
pop
push
je
push
dec
push
fwait
dec
jp
sbb
mov
js
sbb
mov
out
lock
inc
lock
lret
out
int
cmp
addr16
pop
sub
nop
gs
cwtl
cmpsb
jp
icebp
jmp
jmp
adc
cmp
pop
aam
xchg
add
cs
cmc
inc
ret
bound
mov
inc
mov
push
xchg
imul
add
lea
cmova
mov
or
sbb
sub
xor
xor
sub
push
movsb
fmull
fdivrl
sbb
loop
mov
jl
dec
sub
mov
and
xchg
clc
gs
push
xchg
jmp
ja
dec
pop
mov
lahf
or
mov
and
sub
push
fiaddl
movsb
xor
push
mov
dec
push
jae
push
je
jnp
inc
fdiv
lods
xchg
nop
jle
adc
and
test
jbe
push
fadd
mov
pop
mov
cmp
pop
jno
out
cmc
mov
out
bnd
test
mov
inc
rcrl
rcrb
dec
pop
fdivr
push
cmpsl
je,pt
mov
das
arpl
lcall
std
jl
jmp
jnp
xor
jle
mov
mov
int
mov
dec
fmul
lcall
or
mov
sub
inc
mov
xchg
mov
imul
inc
js
subl
dec
and
push
aaa
cmpsl
cmp
jmp
iret
lahf
mov
shrb
add
call
fistpll
sbb
scas
lock
pop
enter
jl
fbstp
cld
cmpsl
jle
test
cld
mov
fildl
int3
idivb
aad
out
aam
pushf
arpl
test
inc
and
fstpt
std
fwait
jecxz
cmpsl
push
mov
jmp
add
lret
orb
dec
pop
lock
test
sbb
mov
cmp
pop
stos
mov
add
jecxz
push
and
int3
sbb
pop
pop
xor
into
inc
inc
jne
pop
fistpll
sbb
insl
pop
mov
xor
insl
loopne
loopne
cmp
leave
ja
clc
imul
std
ds
and
lock
pushf
subb
sbb
jne
push
decb
iret
cmpsl
add
fcoml
je
xchg
out
mov
fldcw
inc
xchg
dec
sbb
push
inc
xchg
sub
ja
sub
pushw
in
incl
je
aas
pop
fsubs
mov
gs
int3
jnp
pop
sub
fadds
push
insl
ds
hlt
lret
jnp
jbe
mov
sbb
adc
cmp
cmp
fnsave
in
iret
mov
icebp
adc
cld
movl
mov
add
aam
xchg
mov
push
mov
test
lcall
scas
pop
out
pop
loopne
sub
or
inc
xor
out
xor
xor
inc
and
arpl
mov
movsb
adc
jge
mov
add
divb
es
decl
fdivrl
mov
test
add
lret
sub
inc
pop
icebp
xchg
sbb
dec
sti
ljmp
mov
xchg
and
sti
repnz
mov
dec
sub
add
xor
inc
jo
sbb
fldcw
addr16
add
or
mov
nop
das
push
shrb
in
loope
lods
or
pop
or
fists
gs
adc
xchg
mov
leave
stos
mov
fimull
lds
cmp
testl
mov
cmp
incb
inc
adc
push
cwtl
std
cltd
mov
jp
es
addr16
mov
sub
dec
int3
out
repz
cmpsl
xchg
jae
fisubs
or
jno
psllw
sbb
pop
adc
or
ret
fiadds
push
ds
cmp
mov
jnp
ficompl
sbb
fwait
pop
jae
and
push
in
push
xchg
mov
pop
je
rcr
cmp
loope
mov
push
or
out
scas
repz
xchg
xor
mov
out
in
add
das
shrb
add
icebp
insl
xor
and
repz
je
mov
js
cmp
outsb
inc
arpl
inc
enter
stos
and
sbb
or
mov
cmp
adc
mov
or
or
dec
or
cs
and
and
out
pop
jnp
add
cmp
or
xor
jns
in
mov
fnsave
andb
shll
lret
sahf
xor
outsl
inc
fistpll
cmp
pop
jno
jg
in
aam
push
dec
cmp
fs
mov
sub
loope
sub
dec
jl
inc
daa
mov
adc
sti
adc
test
pushf
and
scas
stos
std
xchg
add
mov
mov
int3
arpl
xor
inc
fscale
cmpl
push
pusha
xchg
inc
fld
sbb
inc
dec
and
nop
xchg
aas
sbb
jge
aam
and
scas
xor
mov
push
ss
fimuls
loope
into
test
jbe
out
call
pop
loope
imul
add
cmp
out
xchg
fnsave
xor
push
jmp
out
sbb
repnz
and
mov
push
out
rcll
cmpsl
rorl
push
pop
cld
aaa
into
out
out
jnp
and
push
inc
and
jne
jb
fdivl
push
popf
xor
icebp
cli
pushf
aas
loopne
jmp
mov
ret
pop
lahf
repnz
pop
subl
nop
out
ret
mov
pop
or
mov
fdivl
fcoms
stos
jb
mov
adc
in
cmp
inc
fcmovnbe
lds
mov
or
pop
and
cmp
nop
stc
ret
pop
adc
push
int3
ret
pop
mov
loope
mov
add
mov
sbb
sub
hlt
adc
pop
test
je
jp
jae
pop
sti
fwait
shlb
addr16
mov
cmp
leave
pop
sahf
cli
clc
rclb
es
pop
addr16
xchg
pop
ret
pop
push
mov
xor
jb
js
xor
outsl
fs
scas
or
xor
aas
xor
add
js
popf
xor
cltd
test
lret
xchg
mov
sbb
sub
testl
xor
or
test
in
xor
xchg
sbb
test
int
xor
sahf
out
inc
fistpl
andl
cs
xor
lods
cmpb
ror
arpl
or
cltd
xor
mov
pop
repnz
cmp
pop
idivb
sub
lock
sub
jnp
divl
lds
mov
xor
shrb
inc
inc
xlat
ja
sub
les
dec
loope
in
fidivl
sub
mov
inc
jge
into
testb
or
pop
ds
jecxz
lea
add
hlt
mov
fwait
inc
loop
test
xchg
sub
addr16
pushf
stos
inc
into
jle
test
jbe
or
testb
jnp
stos
lods
pop
aaa
into
leave
fidivl
mov
stc
nop
dec
or
mov
shll
shlb
xchg
gs
push
lods
mov
fs
enter
insl
push
inc
fildl
pushf
pop
repz
mov
xorl
lret
lods
imul
xorl
fcmovne
inc
xchg
jne,pn
data16
xorl
inc
lret
aas
mov
outsb
push
adcb
mov
or
lcall
popa
push
pop
repz
lret
ret
jle
test
arpl
clc
lahf
cmpsb
cmp
push
pop
push
lret
jne
cli
xchg
inc
fcmovnb
sbb
push
jne
jno
cmp
insl
clc
mov
adcb
out
jb
je
cmp
outsb
lds
repz
adc
inc
fstpl
or
xchg
sub
pusha
mov
push
jmp
or
jo
fcomps
xchg
sbb
mov
cmpb
or
cmpsb
xchg
sbb
mov
cmpl
mov
and
or
cltd
sbb
dec
mov
mov
imul
cmp
out
adcb
imul
lcall
jle
in
popf
xor
jno
mov
inc
fisubl
js
sahf
lods
imul
jp
add
andl
and
imul
xchg
xor
push
and
inc
cwtl
adc
or
jns
mov
xchg
aad
push
lods
or
and
pop
push
cmpsl
or
mov
je
xor
push
mov
ja
hlt
inc
mov
js
fnsave
lods
inc
faddp
mov
clc
dec
dec
loopne
das
inc
ficompl
fnstenv
int3
movsl
cmp
dec
sbb
dec
scas
inc
fcomp
fmull
adc
orl
fbstp
in
imul
push
mov
cwtl
and
repz
sub
push
testl
aad
in
test
inc
sbb
xor
sbb
push
orl
or
sbb
xchg
or
xor
push
out
lcall
jo
shl
jge
push
push
out
adcb
adc
pop
scas
enter
or
ljmp
xor
adc
pop
outsl
push
xchg
sbb
and
fistpl
or
adc
mov
mov
outsb
fnsave
sbb
repnz
data16
cmp
xor
jle
adc
cwtl
mov
jno
dec
test
xchg
mov
ja
pusha
cmpsb
cmp
out
push
out
lcall
add
imul
jl
jecxz
out
mov
js
and
outsb
push
fst
insb
adc
add
xchg
xchg
cmp
cmc
mov
sub
pop
hlt
ss
in
cli
or
addr16
jne
addl
sbb
and
ljmp
or
mov
arpl
shl
testl
xchg
jo
and
lods
scas
outsb
add
mov
ret
repnz
test
fidivs
lret
inc
cmpsb
mov
mov
xor
fildll
lret
lcall
mov
lods
fsubrs
push
pop
fwait
aas
sbbb
xchg
jmp
xor
adc
ljmp
sbb
fidivl
mov
das
in
or
imul
stos
mov
dec
out
test
cmpsb
cmp
aas
scas
lea
mov
jge
dec
mov
mov
addr16
pusha
notl
nop
sbb
push
pop
adc
lea
xor
push
xchg
les
into
in
cmp
lods
inc
test
je
pop
sahf
int3
arpl
lds
scas
mov
inc
fistl
mov
xchg
add
or
dec
pushf
pop
icebp
int
out
lcall
je
cmp
lahf
insl
pop
cld
xchg
inc
nop
daa
mov
imul
mov
pop
push
fnsave
out
lods
pusha
testl
in
ljmp
jge
cmp
shlb
stos
frstor
cld
adc
pop
xor
scas
cmpsl
push
in
or
pop
cli
mov
testb
jae
mov
jne
rcrl
mov
lods
push
in
pop
adc
cmpsb
xor
ja
enter
test
lea
sar
xchg
or
lcall
fwait
in
and
cmp
add
or
pop
mov
mov
fs
ds
std
pop
in
add
mov
mov
jo
mull
ret
negl
lds
mov
outsl
jecxz
xor
xchg
or
cmp
pop
fbstp
add
jne
mov
lret
sbb
cmp
jne
xor
in
pop
adc
call
or
add
and
dec
aam
loopne
shlb
add
ret
push
lods
inc
dec
insl
out
mov
ret
mov
cld
fiaddl
or
stos
shlb
int
repz
cmpsb
lret
loopne
rclb
in
adc
lds
je
cmp
xchg
sahf
inc
loope
clc
mov
shlb
popl
push
pop
xchg
push
negb
inc
lret
mov
int3
sbb
iret
cmp
std
fcoms
or
outsl
in
sahf
mov
sti
popa
clc
adc
and
out
es
int
lahf
std
fistpl
ret
pop
loopne
popf
roll
repnz
push
adcl
xchg
pop
lods
pop
movsl
pop
push
lcall
xchg
mov
stc
xchg
jns
push
sarb
arpl
add
pop
ret
xor
add
in
andb
pop
push
stos
frstor
jbe
fldl
inc
mov
jnp
sub
movsl
push
or
imul
cmp
imul
add
test
xor
insl
jle
xor
cmp
xor
inc
imul
sti
mov
add
in
ret
test
in
sahf
mov
adc
lods
dec
lds
testl
insb
imul
dec
dec
lret
cld
and
cmp
shll
pop
or
pop
mov
push
inc
xchg
mov
xor
xor
xchg
sub
cmp
adc
sbb
in
cmc
push
mov
idivb
fimull
jns
iret
pushf
nop
out
dec
pushf
xor
jl
mov
adc
xchg
les
es
scas
mov
pop
stos
aad
fcmovnbe
cli
mov
rcrb
faddp
dec
fmull
mov
push
dec
xor
pop
inc
mov
dec
cmp
jl
fwait
je
and
xchg
jae
js
rorl
cltd
xor
outsl
cmp
dec
test
xor
popa
add
arpl
sub
ja
in
fwait
xchg
aad
sub
popa
stos
outsl
filds
and
fdivrl
mov
mov
add
lret
jno
sbb
std
fldcw
fisubrs
cmp
push
adc
dec
xchg
mov
hlt
sbb
lods
outsl
scas
mov
mov
aad
jno
push
ret
flds
inc
std
push
mov
nop
leave
jbe
cltd
mov
or
sbb
push
popf
add
sti
xor
mov
push
bound
inc
mov
pop
ljmp
inc
fbstp
in
inc
fldl
cmpsb
dec
out
dec
mov
cmp
mov
pop
pop
lcall
inc
jmp
xchg
mov
lret
popa
imul
stos
pop
test
loope
jbe
shl
pop
flds
mov
xchg
mov
ret
gs
cwtl
mov
mov
add
mov
idivb
sub
sbb
xor
xor
inc
fs
or
inc
xchg
xchg
arpl
push
jns
ret
inc
decl
test
mov
push
jmp
adc
push
movsl
ds
in
adc
xor
add
jp
test
lcall
jo
inc
ss
mov
dec
adc
out
and
fwait
nop
jp
fucomi
xorb
pop
pop
cmp
shlb
sahf
xchg
gs
dec
mov
mov
xor
jne
in
hlt
jnp
mov
cld
jb
lret
and
stc
jle
cmpsb
insl
mov
pop
pushf
nop
mov
outsl
dec
in
iret
mov
lea
jecxz
repnz
fbld
fldl
imul
lret
gs
cld
pop
int
mov
add
mov
lret
std
mov
sbb
int
mov
xchg
arpl
sti
loopne
rolb
mov
fisubs
xor
mov
push
mov
and
mov
pop
push
imul
jmp
lds
repnz
loopne
sub
cmp
mov
bound
test
pop
aam
sti
sarb
fistpl
outsb
aad
aad
push
movsb
aaa
lock
sbb
repz
jns
jp
in
push
xchg
cmp
inc
jge
rolb
lods
inc
add
lods
arpl
nop
pushf
nop
sub
lcall
movsb
mov
jno
xchg
mov
cmp
scas
sbb
pushf
pop
mov
pop
outsl
movsl
dec
xchg
and
repz
int
cmpxchg
fdiv
mov
mov
fucomp
sbb
xchg
push
int
mov
ss
inc
fnsave
sarb
push
test
mov
das
cmpsb
pusha
stos
mov
xchg
xchg
mov
push
push
fisttps
stos
test
push
mov
mov
xchg
cmpsl
pusha
pushf
and
xchg
outsl
ret
sub
xor
cltd
ja
adc
stc
dec
out
and
sbb
mov
add
dec
sahf
sbb
xor
neg
inc
lock
fdivs
rclb
cltd
xchg
push
cmpsb
stos
pop
testl
pop
inc
jg
mov
push
xchg
pop
iret
pop
inc
lcall
pop
dec
loope
dec
sub
outsb
outsl
ds
xor
jp
fwait
cld
mov
mov
mov
fwait
or
jo
mov
mov
pop
aam
scas
jb
shll
pusha
add
xchg
sub
out
jae
out
xor
aaa
lock
lock
js
xor
cmc
mov
cs
cs
daa
stos
inc
cwtl
cmp
add
div
mov
addb
mul
stos
test
cmpsb
clc
push
cmc
int
test
mov
inc
out
popa
lahf
mov
je
mov
add
push
mov
cmc
adc
mov
fidivs
fistl
and
xchg
xlat
pusha
sbb
jbe
sub
adc
jns
mov
mov
pop
inc
les
pop
sub
xchg
ret
jecxz
bt
or
jle
jo
push
out
xchg
sub
adc
cmp
pop
xchg
pop
sti
sub
test
shrl
fdiv
dec
cmp
push
ret
fisubs
adc
push
call
or
sbb
arpl
add
pop
mov
loop
stos
push
lock
mov
lds
out
insl
pop
iret
jo
aas
icebp
stos
inc
sub
arpl
cmp
mov
or
mov
xor
mov
inc
lret
dec
add
movsb
dec
inc
fucomp
lds
xlat
sbb
xchg
inc
mov
or
jg
xchg
xchg
adc
out
insl
xor
into
mov
or
jp
pop
inc
das
xor
mov
and
hlt
aas
or
sub
and
mov
pop
or
push
shlb
cld
inc
or
mov
inc
xor
pop
push
dec
roll
pop
cli
xchg
or
orb
jne
sub
mov
inc
inc
pop
hlt
dec
inc
enter
movsb
outsb
inc
xchg
imul
cli
inc
mov
or
jl
test
ficoml
push
xor
jnp
mov
ficomps
call
fsubrl
xorb
and
mov
dec
inc
arpl
daa
pop
xchg
lods
xchg
nop
adc
imulb
cmc
or
mov
dec
in
jmp
dec
faddp
cmpb
aaa
sti
les
push
adc
xchg
les
mov
negb
xchg
cmpl
movsw
je
push
fidivs
stos
xchg
xor
mov
jl
pop
xchg
mov
mov
test
lcall
cmp
add
push
xchg
outsb
dec
in
mov
outsl
add
sub
mov
lods
and
imul
loopne
outsl
enter
mov
push
shrb
hlt
je
in
movsl
iret
sbb
mov
stc
jmp
int3
flds
iret
in
sahf
xchg
mov
and
test
inc
in
xor
mov
repnz
xor
mov
cmpsl
adcl
sbb
out
ret
scas
mov
les
and
xchg
pop
fs
dec
jg
xchg
pop
insl
icebp
sbb
push
jl
xor
push
aaa
mov
adc
lds
dec
xor
pop
cmp
xchg
nop
inc
jae
and
jl
ja
aam
arpl
inc
fdivl
and
shrl
pop
shll
inc
enter
push
jae
imul
adc
inc
dec
mov
aam
pop
leave
cmp
jns
ret
insl
sahf
and
mulb
out
add
mov
add
mov
ljmp
pusha
fmuls
jmp
cmp
jnp
fnstenv
popf
adc
sub
cmpb
add
dec
cmp
xchg
sub
push
xlat
push
dec
ljmp
jnp
insb
mov
cld
aaa
in
sub
cmp
insb
rcrl
mov
push
das
repnz
push
cs
sbbb
pop
enter
rcrl
mov
paddw
orl
add
sub
jno
out
inc
pop
cmp
gs
daa
insb
sub
in
and
cmpsl
pop
or
dec
shll
xor
rcrl
movsl
faddl
pop
imul
cld
dec
je
push
int
cmp
mov
stc
push
rclb
jp
pop
dec
test
push
inc
les
dec
mov
dec
addl
inc
or
pop
mov
mov
mov
sbb
mov
jmp
or
adc
adc
lret
and
cmc
shl
sarb
add
add
cwtl
push
loopne
in
cmp
clc
cmp
lods
mov
push
cli
into
push
fldl
mov
mov
test
dec
xchg
mov
jp
mov
orl
push
push
aaa
testb
pop
fistps
mov
ljmp
leave
imull
mov
mov
mov
lock
lods
push
fsubr
aad
inc
out
mov
xchg
sub
mov
out
sbb
in
stos
scas
sbb
adc
xchg
cmpl
adc
dec
mov
push
mov
lea
xor
je
rorb
or
jno
mov
jns
push
call
lods
sub
jno
cmp
mov
jge
mov
or
pushf
lods
jmp
ljmp
gs
popa
insb
loope
push
das
fs
pusha
inc
scas
bound
sahf
popf
xchg
and
mov
push
mov
cltd
or
fildll
out
add
sub
mov
aad
cmp
push
imul
cs
mov
inc
push
jbe
mov
adc
mov
jae
adc
inc
test
sbb
xor
nop
pop
pushf
fs
popa
sbb
call
dec
loop
or
xor
icebp
push
fldenv
imul
lds
inc
or
in
push
icebp
arpl
mov
fistl
in
aam
fsubrs
mov
roll
add
ret
lcall
in
mov
sbb
cltd
lahf
subb
adc
mov
outsb
add
xlat
and
or
push
lock
cld
jge
ret
sarl
adc
mov
push
adc
push
mov
imul
pusha
enter
sbb
mov
pop
and
mov
adc
shrb
repnz
adc
push
test
divb
enter
mov
fsts
add
pop
and
jp
fiadds
popa
iret
insl
lahf
mov
adc
add
jbe
data16
pop
daa
sbb
jp
xor
pop
push
clc
pop
jl
mov
push
mov
xchg
dec
leave
sub
imul
sbbb
outsl
movsl
je
call
scas
xchg
and
jp
cmp
push
cmp
mov
notb
aaa
pop
test
mov
pop
int3
dec
insb
mov
mov
fldt
outsl
pop
scas
jge
push
pop
mov
in
mov
fists
push
inc
fstpl
rorb
mov
pop
or
mov
add
cmp
sbb
fsts
and
outsl
rorl
mov
mov
stos
fimuls
ljmp
movsl
fadds
jmp
loope
jge
fists
and
adc
jecxz
jo
add
out
jp
dec
sarb
les
je
ds
daa
loope
je
pop
or
repz
je
cli
and
or
mov
into
or
jo
or
mov
psrlq
push
mov
sub
lds
loop
leave
inc
cmp
fs
pop
mov
popa
and
fiadds
pop
aas
in
and
push
leave
negb
xor
sbb
cld
lahf
cmc
in
mov
test
les
or
mov
shrl
stos
in
add
clc
inc
sbb
jnp
xchg
mov
sub
call
push
jb
adc
xor
add
lahf
lret
adc
movsb
aad
pop
lock
sbb
xchg
cmc
outsl
mov
adc
pop
xchg
mov
lret
mov
fdiv
pop
cmpsb
imul
xchg
mov
jecxz
lods
rcll
inc
mov
mov
dec
push
imul
orl
sub
adc
add
mov
in
jo
rclb
int
mov
std
aas
movsb
fidivrs
or
xchg
int3
cli
push
cld
aad
sbb
mov
dec
mov
sti
cmpb
push
ror
mov
jecxz
js
mov
movsl
mov
in
or
mov
and
fwait
imul
adc
lsl
movb
fldt
and
ja
pusha
sub
inc
rorl
adc
xchg
cmp
repnz
nop
cmp
repz
pop
adc
cmpsl
lods
push
popf
fnstsw
bound
xor
lock
popf
xchg
rcll
push
icebp
cmp
cld
sbb
sbb
add
jmp
push
sub
icebp
mov
mov
js
mov
push
call
pop
cmc
es
push
gs
inc
int3
xor
shlb
cmp
std
push
push
jp
jbe
push
lods
scas
pop
bound
out
mov
cmp
mov
sbb
outsl
jmp
pop
lret
cmp
mov
les
out
mov
adc
ja
jecxz
out
fwait
out
add
or
lahf
lock
andl
jnp
jno
adc
subb
xchg
sub
inc
or
add
add
inc
clc
inc
imul
cmp
jbe
scas
inc
outsl
add
cmp
pop
push
mov
push
das
popa
inc
lcall
outsl
movsb
outsb
pop
mov
rcrb
cmp
movsb
insb
sub
inc
out
xchg
sbb
pop
cli
fwait
cmp
jg
sbb
scas
push
cmp
rolb
add
ret
cmp
cmp
adc
or
arpl
pop
daa
push
call
cmp
clc
sub
inc
es
xor
mov
xchg
mov
mov
mov
test
les
rorb
dec
loope
faddp
inc
mov
hlt
lods
jo
or
in
mov
mov
in
add
stos
cltd
xor
xchg
pop
repz
ss
pushf
sarb
and
cld
fimuls
jae
mov
rcll
imul
mov
hlt
xchg
mov
std
jne
jmp
mov
out
and
mov
hlt
adc
stos
xor
mov
or
in
cmp
popa
ljmp
aaa
clc
popl
movsb
sarl
scas
add
pop
mov
popf
loopne
jbe
lods
mov
xchg
cmc
out
test
adc
jo
lock
pop
xchg
ror
fistpl
divb
cmpsl
fcmovnb
pop
or
cs
ja
fsubs
push
pushf
movsb
lods
pop
or
mov
push
add
outsb
push
sub
aaa
sbb
adc
ret
cwtl
sti
sub
ficoml
imul
pop
push
jb
rclb
mov
fs
sub
jnp
lock
fistl
daa
dec
lds
das
fcmovb
adc
fisubrs
shlb
aad
loope
push
imul
cmpsl
push
mov
add
inc
mov
push
ljmp
sub
pop
rorl
mov
adc
mov
pop
andl
es
test
cwtl
test
idivl
data16
adc
cld
xor
xor
pop
pop
pop
jae
cmpsb
cwtl
add
sub
int
mov
call
or
inc
jb
pop
es
jb
and
push
cmp
xor
or
aad
and
scas
pop
mov
les
test
out
or
sbb
mov
sub
test
xor
xchg
jle
or
pusha
jle
daa
jo
test
cmp
out
xchg
dec
or
inc
mov
pop
sub
jmp
ljmp
xor
jo
dec
lds
sbb
push
xor
aad
je
xor
or
test
dec
mov
mull
xor
or
push
imul
pusha
das
lods
inc
xor
out
fadds
dec
in
pop
hlt
xchg
mov
jp
mov
ret
push
mov
pop
pusha
adcb
dec
mov
xchg
xor
je
jnp
fadds
push
notb
xchg
and
in
or
test
add
mov
inc
or
lds
inc
lock
jmp
mov
fiaddl
mov
lahf
daa
cltd
inc
xlat
lret
scas
push
jmp
scas
loopne
arpl
add
test
adc
addr16
jne
sbb
ds
jge
cli
sub
sti
jmp
fiaddl
imul
scas
jae
mov
mov
insb
popf
xor
mov
shlb
cmp
sti
test
aaa
or
mov
xchg
nop
mov
and
int
out
sub
std
mov
xchg
sarb
loopne
adc
jbe
mov
fidivs
push
jne
xor
repnz
incb
sbb
dec
jg
sub
negb
outsl
popa
stc
inc
inc
ds
jle
mov
je
lea
sbb
int
lods
cmp
and
push
mov
cmc
fwait
mov
cli
xor
ror
outsl
cwtl
mov
nop
xchg
mov
jae
xlat
loop
iret
int3
jg
loopne
inc
fisttpll
ret
push
mov
test
out
adc
mov
sbb
mov
jne
jb
mov
or
cmp
pop
into
fcompl
or
inc
hlt
cs
xor
mul
loope
ficoms
out
xchg
inc
roll
out
mov
in
and
aad
or
enter
mov
and
int3
repnz
xchg
adc
inc
fisttpl
out
sarl
mov
cmpb
push
es
rorl
imul
xor
push
sub
push
out
jns
inc
inc
lret
mov
mov
fsts
clc
ficomps
or
mov
lock
mov
in
push
mov
mov
std
dec
mov
in
loopne
in
movsb
or
repz
sbb
and
in
repnz
sarl
dec
fwait
mov
jecxz
lret
cld
ret
push
or
or
or
out
pop
call
scas
xchg
jns
mov
inc
pop
lcall
xchg
push
loope
pop
adc
xor
pop
mov
cmp
icebp
xor
loope
mov
mov
sub
jl
fnstsw
popf
cmp
aaa
fcomi
jo
mov
jb
jnp
lcall
fndisi(8087
scas
xchg
xchg
clc
enter
iret
jnp
rcr
das
xlat
out
loopne
add
adc
lock
push
or
mov
mov
loope
mov
mul
es
fucomi
and
lret
cld
push
iret
hlt
decb
mov
lea
out
xchg
jl
mov
lcall
cmp
lods
ljmpw
mov
out
jecxz
push
cmpsb
add
push
push
or
stc
adcl
xchg
jnp
out
and
mov
jmp
jns
push
jecxz
sub
pop
pop
rcrl
pusha
test
ret
inc
adc
pop
inc
push
xor
insb
popa
cmp
aas
and
cltd
cmp
adc
xor
addr16
pop
jnp
adc
pushf
cwtl
out
xor
jmp
shll
in
xor
paddusb
xor
int3
push
sti
inc
popa
fwait
xor
lods
xchg
or
test
push
mov
mov
pop
lahf
add
clc
xor
lea
out
into
aaa
in
fucom
scas
out
cld
movsb
cmp
repnz
loope
xor
add
aas
icebp
clc
cli
dec
mov
fcmovne
fs
loopne
add
add
lahf
into
hlt
sub
adc
cld
jge
loop
cmpsl
cmp
or
clc
add
aas
jmp
jg
and
rclb
adc
and
pop
negb
mov
push
out
or
outsb
add
xchg
cmp
and
fsubrs
pop
testl
mov
xor
fimuls
push
call
or
outsl
push
test
lea
jg
cmc
mov
stos
inc
ljmp
add
movsl
lods
inc
xlat
and
push
ss
test
leave
pusha
sti
leave
repnz
sbb
popf
dec
sbb
movsl
dec
outsb
and
pop
xor
mov
mov
mov
gs
add
aad
or
stos
test
mov
test
add
les
jecxz
leave
adc
dec
loop
xor
imul
fisttpl
xchg
cs
cld
std
xchg
cs
out
xchg
dec
fwait
sti
loope
cmc
mov
or
mov
fs
pusha
test
sbbb
in
into
loopne
or
add
es
xchg
adc
popa
clc
jns
sbb
outsb
movsb
jg
jp
shl
je
jg
outsl
mov
sti
xchg
adc
dec
pcmpgtw
xchg
xor
imul
mov
jmp
or
dec
dec
rclb
add
mov
ds
sbb
rorl
mov
mov
mov
inc
pushf
std
enter
rcl
sbbl
mov
insb
fnsave
scas
hlt
mov
pop
push
stos
sbbb
fcoms
inc
mov
nop
mov
pop
mov
adc
xchg
pop
sub
fdivrs
addr16
lods
ret
jmp
imul
sub
hlt
xor
mov
mov
loopne
and
cwtl
shrl
xchg
pop
outsb
xor
push
dec
popf
in
dec
movsl
icebp
xchg
outsb
xchg
mov
jle
push
pop
lock
out
jns
arpl
mov
test
pop
xchg
mov
lods
or
add
sub
pop
mov
pop
and
mov
pushf
cmpsl
sub
dec
dec
shlb
shll
mov
sub
in
or
icebp
aaa
aaa
pushf
rcrl
hlt
aaa
sahf
addb
andb
fisubrl
rcl
aaa
pop
mov
gs
testb
test
sbb
mov
mov
sbb
pop
sarb
popf
cmp
and
das
jo
lcall
jmp
xchg
add
xlat
push
enter
xchg
jno
lods
aad
jbe
or
cltd
out
or
stos
je
scas
push
sarb
jne
pop
jbe
sbb
mov
out
icebp
or
insl
add
mov
rcr
in
mov
mov
ret
aam
iret
xchg
subb
or
mov
lret
inc
arpl
jge
cmp
lret
sar
lock
and
sarl
dec
push
push
xchg
mov
outsb
inc
pusha
add
dec
inc
pop
incb
xchg
cmc
call
fstpl
lea
dec
out
cwtl
in
inc
out
pop
and
sub
pop
mov
adc
repnz
lret
pop
cmc
fwait
mov
movsb
gs
repnz
cwtl
cmp
xchg
xchg
cs
fisubl
das
pop
arpl
adcb
cltd
lock
xchg
sub
cs
stos
mov
dec
rcr
xor
push
icebp
jae
xor
repnz
repnz
or
jecxz
mov
xchg
andb
add
adc
movsl
sub
iret
dec
adc
cmp
jmp
aas
enter
aad
arpl
ljmp
ret
jnp
inc
lods
inc
out
jne
enter
sub
fsubrs
mov
cmpl
hlt
add
jb
enter
and
test
cmc
imul
jmp
jge
sbb
test
dec
pop
cmp
pop
cmc
mov
inc
fsubrs
outsl
cli
xchg
popa
pop
cmc
movl
rclb
sub
in
daa
fidivs
in
cmp
cmpsl
stos
lahf
cli
xchg
adc
cmp
fiadds
mov
data16
shr
mov
jge
shlb
mov
fnstsw
in
adc
stos
inc
mov
out
test
loop
xchg
ret
mov
movsl
es
fnsave
sub
mov
outsb
sbb
lret
inc
jge
cs
cwtl
aaa
fwait
cmp
outsb
rcrl
popa
repz
push
lret
mov
add
inc
adc
sahf
cmp
lods
sub
mov
rorl
jmp
sarl
test
stos
push
mov
xchg
pop
xchg
push
mov
jge
add
mov
push
rcl
sbb
sub
ss
je
cmp
mov
mov
sbb
inc
inc
fcmove
xchg
call
cli
insb
repz
dec
xor
inc
push
ret
mov
cltd
dec
ja
fldenv
xor
ja
sub
lock
nopl
mov
sahf
push
cltd
aas
mov
in
mov
mov
ds
divb
pop
sahf
mov
sub
xchg
int
arpl
push
pop
xchg
push
mov
mov
add
sbb
lods
ss
jb
pop
jo
stc
out
fidivrl
testb
dec
scas
pop
add
sub
cmc
jne
daa
jmp
stc
bound
jp
inc
jne
mov
stos
pop
add
and
repnz
cmp
hlt
pop
in
push
lret
sbb
adc
inc
lahf
mov
xchg
repnz
adc
inc
pop
popa
add
mov
stos
and
daa
scas
es
fwait
dec
test
rcr
jg
cmpl
leave
xchg
cmp
roll
mov
mov
loope
sarb
cmc
popf
aas
sbb
repnz
pop
dec
mov
pop
repz
pop
pop
call
mov
aad
pop
jge
aaa
adc
sbb
sub
leave
xchg
jecxz
mov
clc
into
xchg
inc
dec
mov
lret
mov
push
out
outsl
fs
sbb
imul
rcrb
imul
mov
fbstp
xor
jmp
dec
sbb
add
inc
lea
pop
pop
add
sbb
lahf
push
add
cmp
sub
into
into
and
cmpsb
pop
or
movsb
mov
sub
push
pop
clc
mov
mov
or
and
sub
xchg
inc
divl
cmpsl
ss
xor
call
ds
dec
push
push
xchg
xchg
adc
lret
push
jp
adc
lods
cwtl
jg
fwait
sub
pop
clc
mov
sahf
ds
shr
imul
push
std
pop
jmp
icebp
ds
es
push
add
ds
mov
xchg
xchg
push
mov
rcrb
fldt
movsl
ss
ds
daa
lods
roll
int3
jb
ss
pop
pop
mov
popa
pop
mull
movsl
ss
mov
dec
or
hlt
movsb
ss
cmpsl
xor
push
push
aam
jmp
roll
rolb
mov
cmpsl
pop
ret
xchg
jmp
shll
inc
data16
movsb
ss
stos
stos
adc
cmp
mov
movl
cmp
movsb
jge
mov
push
mov
rcr
pop
insl
push
sub
pushf
test
fstpt
mov
rol
call
fists
leave
sbb
mov
mov
adc
jb
stc
pop
cmp
je
daa
jle
adc
dec
or
popf
aaa
loopne
pop
clc
mov
sub
xchg
lock
xor
ljmp
push
scas
daa
out
iret
mov
jns
subl
jl
mov
xchg
aas
enter
dec
pop
sbb
pop
mull
insb
dec
or
lock
and
cmp
push
sub
mov
std
xchg
mov
pusha
mov
cmpsl
xchg
inc
push
adc
push
add
lret
mov
mov
jb
mulb
outsb
dec
or
sahf
adc
inc
shlb
enter
mov
jg
das
mov
jno
cmc
out
dec
or
shl
sub
and
movb
mov
insb
out
rcll
std
imul
js
mov
sbb
inc
xor
movsb
push
mov
mov
inc
adc
push
add
xchg
xchg
inc
aam
mov
push
or
rorb
fcoms
inc
lock
leave
lock
add
fidivl
dec
or
rorl
xchg
cmc
popa
test
xchg
inc
aad
adc
jmp
mov
nop
aaa
test
push
sti
adc
stos
xor
mov
mov
mov
inc
jp
insl
pop
test
add
jae
push
inc
or
inc
pop
add
and
dec
unpckhps
jb
in
pop
mov
in
adc
ret
mov
inc
dec
adc
test
fadds
or
icebp
push
js
push
jge
adc
popa
daa
inc
inc
or
es
push
std
push
inc
mov
cmp
mov
sub
rorb
mov
std
push
mov
and
or
mov
and
popf
std
xor
or
test
push
std
ret
sub
xchg
cmp
mov
cmpsl
popf
mov
jecxz
rorl
test
aam
les
and
imul
mov
test
push
divl
mov
sub
push
pop
imul
mov
scas
call
lock
xor
dec
push
lret
jo
popf
std
add
imul
ljmp
movsl
daa
pop
test
or
mov
sbb
je
loopne
fisubs
inc
inc
or
cmp
xchg
mov
mov
orl
jnp
push
sti
cmp
test
aaa
push
mov
xor
pop
rorl
nop
inc
push
add
xchg
cmp
push
sarl
cmpsl
notl
xor
cmpsb
sbb
or
icebp
dec
loope
jns
push
add
out
insl
pop
xor
sub
add
in
xlat
test
fstpt
notb
es
cld
pop
xchg
cmp
movsb
xor
sbb
fdivrs
xor
inc
loop
adcb
jo
jb
insb
in
pop
imul
and
jl
xor
push
jmp
cmc
jge
cmp
bound
popa
sti
test
loope
and
loop
adc
lret
pop
mov
inc
adc
mov
and
cwtl
outsl
add
dec
push
hlt
nop
inc
dec
mov
movsl
lahf
mov
jnp
cld
push
rcrl
inc
dec
pop
xchg
xor
lret
in
cld
pop
push
cld
fidivs
inc
fs
add
in
imul
xor
mov
jl
lods
rclb
inc
gs
dec
sti
dec
or
xchg
xor
sub
xchg
ss
add
loopne
rcrb
enter
push
xor
push
insb
sub
popf
js
shll
mov
bswap
pop
push
mov
add
cli
adc
jl
jmp
lcall
dec
adc
je
sub
iret
xchg
cmp
xchg
popf
inc
fadds
ds
add
jae
pop
push
test
mov
je
clc
mov
ss
test
rclb
js
sub
sub
push
add
movsl
std
push
add
sub
and
filds
mov
mov
jno
inc
repz
ds
push
mov
dec
xor
popf
out
flds
int3
icebp
pop
push
sbb
mov
mov
mull
int
add
sbb
lret
pushf
loop
ja
leave
stos
sub
lods
push
call
sbb
dec
adc
mov
stos
xchg
cmp
outsl
jno
test
jle
aaa
bound
sbb
xchg
aad
loope
pop
psrlq
mov
outsl
repnz
push
leave
xlat
flds
call
repnz
push
stc
mov
xchg
in
xchg
jp
push
ret
cmp
ds
je
lcall
xchg
icebp
lock
dec
enter
sahf
cmp
cmpsl
es
adcb
sarb
cmpsl
and
xor
push
loop
aad
nop
pop
ljmp
pop
imul
test
or
mov
mov
adcb
or
sbb
lea
mov
out
rclb
mov
rorl
int
loope
adc
cmp
fisttpll
mov
cmp
cmc
and
sub
imul
lret
jmp
push
mov
dec
inc
xor
adc
in
dec
mov
sbb
push
jne
in
je
orw
pop
mov
mov
leave
add
sarl
push
cmp
daa
or
mov
xor
cmc
pop
lcall
dec
add
jl
xor
xchg
mov
nop
cmp
mov
push
cld
sbb
in
mov
scas
lods
aam
movsl
xor
fdivrl
pop
mull
sbb
aam
sbb
inc
and
nop
mov
cmpsl
stos
cs
xchg
nop
ret
pop
int
xlat
stc
mov
hlt
add
pop
push
add
sbb
inc
insl
out
das
dec
push
test
adc
or
cs
test
mov
stos
xor
mov
cmp
aam
sarl
add
lea
movsl
mov
out
scas
jns
je
sub
cwtl
imul
add
in
rolb
test
or
sti
jge
add
mov
fs
sbb
cltd
cmp
iret
lods
sub
push
add
cmc
sub
out
push
mov
shrl
or
data16
fcompl
cmp
push
cmc
pop
scas
call
cmp
jno
popa
xor
jle
adc
adc
data16
add
jae
jge
sti
cltd
inc
lret
mov
mov
rorl
fcoml
out
xchg
xchg
cmp
add
lods
pop
dec
or
mov
stos
daa
int3
xchg
mov
xchg
pop
adcl
test
and
add
push
js
xor
xchg
lcall
adc
test
jae
sbb
sub
mov
mov
jb
nop
sbb
dec
push
mov
cmpsl
je
aam
adc
and
adc
sbb
xchg
scas
mov
add
xor
mov
insb
dec
fucomip
jbe
mov
mov
add
les
fidivrl
sub
test
xor
mov
mov
fidivl
loopne
cmc
imul
cld
mov
xchg
mov
mov
nop
inc
scas
jmp
inc
adc
mov
pusha
hlt
or
inc
adc
push
xchg
inc
jp
mov
repz
push
std
pop
cmp
les
add
popf
cmp
mov
jne
out
mov
dec
or
mov
mov
xchg
mov
test
push
fistpl
orl
cwtl
fwait
inc
cmp
in
jbe
sub
js
jmp
xor
fcompl
mov
test
scas
xor
pop
adc
or
sbb
dec
adc
out
xchg
or
aam
pop
add
add
arpl
fisubl
sbb
mov
jno
div
push
add
out
test
pop
mov
cmp
mov
jnp
mov
sahf
inc
imul
movsb
xchg
repnz
iret
mov
sti
outsb
in
fisttps
push
push
lahf
add
lock
adcl
xchg
inc
test
movsl
xor
mov
add
xor
or
add
sub
mov
mov
repnz
aad
clc
in
sahf
fdivrs
hlt
cld
pop
test
push
daa
jno
jne
rclb
mov
popf
push
fcompl
adc
or
xchg
cmp
pop
pop
add
stos
std
pop
xchg
adcl
mov
sbb
inc
or
sbb
cmp
cli
inc
xchg
inc
xor
jmp
add
mov
mov
xchg
dec
inc
fdivrl
jge
outsb
pop
add
mov
mov
or
lret
push
stc
adc
mov
pushf
pop
lods
jl
lea
dec
mov
jg
fiadds
cwtl
rcr
or
sbb
xchg
xchg
pop
add
lock
pop
fldl
sub
cmp
lahf
adc
faddl
mov
mov
loopne
popa
cmp
popa
jns
shlb
dec
pop
insl
sub
data16
and
rolb
inc
js
mov
inc
nop
xchg
xor
fcomps
ljmp
and
shlb
xor
rcrl
sbb
push
jecxz
cmpsl
xor
xchg
aas
leave
fdivrs
sbb
jl
cmp
imul
xor
mov
enter
and
adc
pop
dec
adc
pop
sub
movsb
cmc
xchg
cmp
mov
push
xor
sub
aas
and
fwait
aam
inc
or
popa
aaa
mov
leave
inc
negb
dec
and
fwait
inc
ret
cmp
out
cmp
repz
xchg
dec
call
sub
dec
dec
adc
adc
mov
rcll
sbb
mov
cmp
addr16
add
and
xchg
mov
fidivrl
scas
inc
adc
mov
sbb
jno
stc
inc
test
mov
mov
rolb
jmp
mov
cmp
xor
mov
nop
inc
loop
pop
lds
inc
sbb
clc
repz
lret
xchg
fsub
cmp
push
jle
xchg
or
mov
mov
je
loop
sub
icebp
loopne
add
cmp
add
jge
push
jge
pop
sub
add
xor
pop
xor
lods
popa
inc
sbb
repnz
jno
xchg
outsl
jg
mov
sar
pop
insb
icebp
pop
sbb
das
jmp
cli
pusha
jmp
inc
dec
pop
add
xchg
sbb
rolb
mov
fldl
loop
adc
push
in
icebp
pop
xchg
inc
cmp
stos
sub
pop
inc
adc
repnz
add
add
push
add
adc
jge
in
test
stos
xor
mov
sbb
fstps
xchg
ds
push
push
ret
or
sbb
mov
pop
stos
mov
out
rorb
adc
push
incl
push
shlb
mov
push
or
movsb
push
add
push
jb
in
inc
or
pop
xchg
dec
xchg
sahf
pop
cwtl
mulb
xorb
mov
cmpsl
scas
sub
jne
push
cmpsb
xchg
jo
sbb
xchg
inc
push
inc
stc
push
xchg
cmp
scas
ss
sub
mov
lds
sbb
shlb
add
pop
lret
faddl
mov
fnstcw
mov
inc
stos
pop
sti
repnz
mov
movsl
pusha
repz
sbb
jle
popa
lock
fs
sub
jae
lods
rclb
xorl
icebp
aad
and
adcb
cmp
movsl
sub
fidivrs
sbb
aas
int3
mov
cmp
shlb
int
push
cmp
movsb
xor
cs
inc
clc
dec
adc
push
jecxz
push
stos
outsl
inc
movd
xlat
andb
cmp
add
mov
ss
add
fsubr
jne
lret
or
cmpsl
pop
sbb
pop
call
adc
sarb
or
and
push
int3
aam
in
jbe
or
pop
std
jno
clc
aad
sbb
mov
lds
movsl
daa
in
adc
dec
call
pushl
scas
test
mov
arpl
adc
clc
pop
scas
dec
clc
pop
cmp
push
in
mov
repnz
dec
jo
imul
pop
xchg
scas
das
mov
jo
cmpsb
mov
add
cmpsl
sahf
daa
mov
in
popa
out
xchg
hlt
inc
or
in
push
gs
int3
test
cmp
sub
out
dec
movsl
xor
adc
leave
jmp
cmp
clc
hlt
scas
sub
jecxz
test
xor
xchg
push
xor
sub
fwait
ljmp
loope
fs
push
mov
dec
imul
aas
jbe
in
jae
addr16
adc
cmpsl
imul
stc
mov
pusha
icebp
fmull
std
cmpsl
and
xchg
push
mov
jge
dec
ljmp
lcall
cmpl
pop
mov
je
mov
iret
outsl
movsb
push
push
fstpt
dec
jbe
ret
adc
loope
pop
lds
into
gs
fisubs
mov
adc
outsl
imul
testb
out
xor
lods
xlat
out
jo
mov
clc
bound
test
das
ja
cld
dec
cmp
pusha
in
or
aas
std
ja
subl
pusha
enter
cmp
sub
andl
xchg
mov
lods
sub
out
imul
aam
test
mov
mov
add
mov
lock
xor
mov
jns
ljmp
hlt
pop
push
jp
loop
mov
xor
mov
fsubrs
push
sti
xchg
jns
push
mov
mov
cmp
pop
fidivrl
sbb
xchg
push
loopne
popl
mov
jmp
in
loope
ficoms
iret
push
popa
jmp
scas
and
arpl
xor
mov
and
insb
dec
cmp
hlt
cltd
pop
ret
orb
pop
add
repz
js,pt
sbb
in
outsl
cwtl
jg
adcl
mov
test
and
imul
ss
mov
scas
icebp
pop
push
mov
inc
or
into
orl
jp
lods
jmp
shl
adc
add
push
inc
push
lret
addr16
and
pop
add
xor
ljmp
sbb
inc
push
out
jo
jge
lret
scas
xor
inc
or
popa
inc
push
ljmp
and
inc
ljmp
inc
cwtl
cltd
cmp
cltd
imul
loopne
cli
push
jbe
pop
decb
outsb
inc
adc
push
inc
push
insl
idivb
lock
insb
call
pop
fidivrs
mov
lods
pop
rcrb
pop
adcl
sahf
mov
cmpsb
and
push
xchg
pop
xchg
dec
sub
in
sub
aaa
sbb
stos
sub
les
cmp
repz
inc
outsb
stc
test
subl
pop
data16
in
add
rorb
lcall
out
inc
lock
out
fidivrs
add
xor
test
sub
jae
mov
sahf
sti
outsl
adc
mov
mov
add
xor
outsb
add
outsb
push
call
push
xchg
xchg
gs
ret
xchg
add
sbb
inc
push
loopne
pop
add
bnd
push
jl
adc
loopne
lods
jg
orb
inc
or
inc
mov
mov
scas
fs
xchg
mov
xor
push
fdiv
pop
pop
test
fs
mov
scas
mov
lods
xor
pop
sti
bswap
or
sahf
xchg
pop
jno
popf
les
movsb
cs
outsl
out
mov
stos
xor
sbb
dec
xor
fldl
mov
mov
test
stos
xor
jg
mov
lret
xor
sub
mov
sahf
sub
cmp
insb
sbb
ljmp
mov
lahf
sbb
jae
xchg
inc
adcl
jge
sub
aas
sahf
cmpsl
aaa
xor
cmp
aam
stos
scas
cld
inc
adc
mov
push
ja
addl
mov
xor
cmp
in
sub
add
adc
push
xchg
outsl
in
leave
mov
cmp
mov
adc
sbb
addr16
scas
ss
ja
pop
push
jmp
mov
ljmp
daa
push
jbe
inc
mov
dec
adc
loopne
dec
icebp
ja
in
xor
fimuls
repz
sbb
add
xor
cmp
mov
and
push
jae
pop
mov
mov
ds
mov
call
mov
push
push
imulb
xor
push
xchg
adc
mov
dec
mov
addb
fwait
inc
out
push
mov
xor
stos
ss
push
std
xcrypt-ctr
cmpsl
sbb
in
out
in
xchg
lods
cld
sub
add
push
push
mov
push
rolb
mov
xchg
js
lods
adc
test
int
pop
in
jbe
and
nop
push
cmp
pop
dec
iret
xchg
out
cwtl
inc
jnp
sbb
push
push
jg
dec
imul
data16
push
mov
scas
xor
push
add
sub
stos
and
pop
push
xor
or
jbe
or
jle
in
subb
pop
aad
jmp
sub
cmp
leave
loopne
mov
test
aad
cmp
leave
mov
repz
add
outsb
stos
hlt
and
jl
int
inc
push
mov
inc
or
hlt
or
popa
push
loope
dec
js
push
push
popf
fiadds
mov
pop
cmp
es
shll
cmp
mov
test
mov
xchg
cmpsl
mov
lds
sub
cmp
mov
pusha
rorb
stos
or
push
sbb
nop
icebp
enter
jge
xor
xchg
and
popf
inc
arpl
mov
jo
xor
aas
movsl
xor
mov
lret
sbb
aam
jbe,pt
dec
cmp
movsb
daa
sbb
pop
add
dec
dec
adc
es
or
fwait
inc
push
ja
mov
mov
xchg
jmp
xchg
push
andl
sub
movsb
inc
adc
in
push
add
clc
mov
fisttpl
rolb
adc
fnstcw
dec
jl
jno
add
ljmp
push
mov
cmp
popa
clc
pop
sub
pop
xor
and
dec
adc
sahf
cmpsl
mov
jne
mov
cmpsb
mov
push
aas
cmp
push
add
push
sub
test
cltd
sub
jae
scas
xor
mov
lcall
test
sahf
cmp
and
movsb
mov
shlb
and
cmpb
gs
pop
push
stos
stc
xchg
outsb
pop
out
dec
push
js
lret
jg
push
jp
cmp
ret
xor
ljmp
aad
mov
dec
adc
test
ja
testb
push
movsb
sbb
mov
jnp
addr16
add
lfs
jns
jg,pn
cmp
test
sub
pop
add
mov
scas
pusha
xor
dec
cs
push
xchg
rcll
lcall
xchg
add
or
mov
push
je
cli
dec
push
add
shll
in
insb
mov
xor
leave
or
orb
sub
popf
sub
loopne
into
push
sti
xchg
and
xlat
lds
cwtl
or
pusha
addl
inc
or
ret
imul
inc
orl
fldl
push
add
adc
lds
dec
cmp
int3
inc
mov
int3
pop
cmp
les
xor
imul
lods
sub
or
mov
push
movb
jae
lods
je
dec
adc
mov
mov
gs
jne
lds
inc
mov
mov
add
mov
jns
lea
or
add
movsb
ret
sarl
mov
pop
ja
xor
xor
sti
pop
inc
sub
pop
cltd
ds
sti
xchg
lret
out
ss
pop
push
jmp
xchg
fiaddl
test
mov
adc
pop
lods
xor
or
sub
cmp
adc
mov
movsl
add
cmpsl
pop
movl
dec
roll
movsb
scas
fstpt
mov
cmp
dec
scas
sub
cli
adc
mov
repz
xor
add
loop
ja
scas
add
les
lds
cltd
arpl
popf
pop
mov
inc
inc
jae
movsb
pop
popa
pusha
divb
jb
adc
pop
test
mov
push
mov
adcb
push
xlat
cld
pop
ja
mov
orb
clc
or
pushf
cmp
cld
inc
adc
mov
mov
xorb
aad
fbld
add
gs
test
mov
repnz
fwait
inc
mov
cmpsb
sub
or
daa
jo
pop
jle
arpl
test
sbb
mov
mov
mov
push
dec
pop
push
les
jmp
ss
test
cs
cld
ret
jmp
les
sbbl
mov
lahf
cmp
hlt
data16
pop
clc
mov
sbb
push
loopne
inc
adc
loope
sbb
repz
cmpsb
stc
pop
mov
mov
aas
lcall
pop
cld
lds
rcrl
sub
scas
cmpb
pop
mov
add
inc
je
imul
pop
cli
xchg
add
sbb
mov
sub
in
dec
lods
inc
jnp
jecxz
stos
insb
filds
push
mov
add
and
repz
dec
xlat
xchg
cmp
test
test
sbbb
add
or
jbe
outsl
push
or
add
adc
add
jge
pop
mull
add
or
push
xor
add
mov
or
push
adc
pop
mov
imul
xor
add
pop
bswap
xor
test
das
sub
out
cmc
adc
in
jg
bound
stos
cli
pop
jns
or
lea
stos
jo
arpl
xchg
jo
inc
mov
test
dec
pop
cli
and
xor
in
shll
add
cmpsb
jb
xchg
fadds
leave
lcall
fdivl
shr
or
add
popf
inc
cmp
ret
das
shlb
flds
mov
mov
push
sarl
xor
pop
pusha
imul
dec
je
sub
xchg
aaa
addr16
push
mov
out
push
jmp
std
movsb
daa
sbb
add
in
push
lret
push
std
sbb
popa
jmp
dec
fs
test
mov
hlt
pop
push
adc
xchg
and
test
sbb
or
mov
jnp
push
inc
adc
jae
loopne
in
xchg
mov
jnp
shl
jae
adc
test
js
or
mov
addr16
jbe
fwait
cmp
inc
and
in
dec
or
out
imul
jmp
push
cmp
cwtl
jle
and
jae
aam
js
popf
add
xchg
ret
adc
dec
mov
jle
jl
jo
scas
jb
jbe
jmp
cmp
bsr
xchg
sub
sbb
in
lock
mov
and
lock
icebp
and
loope
or
mov
fldcw
mov
push
dec
adc
insl
inc
jno
scas
add
lea
jle
outsb
mov
aas
mov
repnz
jbe
test
out
loope
adcl
sbb
stc
out
or
sub
sub
mov
aaa
sahf
pop
mov
mov
mov
sbb
iret
jae
xchg
xchg
xchg
int
mov
mov
pop
ljmp
adc
popf
cmp
mov
popf
jge
roll
cli
cmpsb
movsb
xor
out
pop
jmp
lea
idiv
pop
ja
mov
sti
lcall
leave
ds
in
mov
mov
sbb
push
lock
sub
shr
jnp
cmp
addr16
add
inc
imul
jb
xchg
mov
xor
mov
pop
in
xor
mov
adc
adc
sub
roll
inc
aaa
mov
xchg
xchg
aaa
pop
push
ljmp
push
inc
adc
cmp
js
movsb
pusha
lock
pop
rorb
call
cli
push
cli
pop
xchg
int3
movsl
pop
in
dec
and
loop
inc
or
repnz
jl
dec
pop
mov
pop
mov
ljmp
mov
in
add
nop
mov
stos
xor
cs
jge
push
ljmp
push
leave
cmc
push
iret
lahf
sbb
test
jno
cmp
mov
mov
ret
sub
xor
push
mov
sahf
mov
faddl
cltd
iret
xchg
sbb
pop
push
dec
icebp
pusha
arpl
data16
imul
fisubrl
or
adc
sub
mov
lret
cmp
xor
xor
mov
dec
insb
push
lcall
dec
add
or
loop
sub
mov
push
mov
movsl
sarb
lcall
push
fisubrl
out
pushf
das
jnp
stos
xchg
inc
xchg
cmc
cmp
and
inc
int
mov
shll
mov
fwait
cmp
test
insb
jmp
into
mov
or
push
adc
and
nop
outsl
sbb
xor
cmpsb
lock
add
pop
clc
jl
cmpsl
xor
arpl
push
push
fnstenv
jbe
mov
mov
sarl
outsl
inc
adc
stos
mov
push
stos
inc
xchg
shlb
test
add
inc
pop
mov
cmp
movsl
push
cli
mov
stos
push
clc
inc
add
add
xchg
cmp
jns
rol
pop
add
call
xor
jno
xchg
xchg
cmp
pop
push
stc
movb
sbb
pop
mov
xchg
movsl
test
test
jns
je
or
sub
dec
ret
lea
cmp
fists
and
out
in
xor
into
xchg
mov
xchg
cmp
fisubrl
jecxz
arpl
cmp
adc
cmpsl
sub
lds
mov
adc
in
inc
ret
fadds
addr16
sub
jecxz
sbb
inc
imulb
sub
rol
pop
push
add
push
pop
push
mov
adc
into
cltd
inc
or
push
int3
test
push
imul
mov
cmp
pop
add
sub
jg
scas
jmp
or
faddl
ljmp
push
cld
jo
out
lock
stos
xor
cmpsb
sub
xchg
cwtl
pop
js
and
xchg
cmp
xchg
sub
jge
ljmp
jno
add
shrl
and
xchg
lods
inc
test
or
sti
shrl
ret
ljmp
jo
lahf
mov
ret
repz
test
adc
faddl
movsb
cmp
arpl
xchg
outsl
ret
mov
loopne
hlt
or
xchg
inc
pop
mov
mov
mov
jae
mov
sti
xchg
ss
icebp
cmp
pop
js
nop
test
xchg
sub
sub
mov
aaa
dec
jae
jg
shrl
mov
icebp
mov
repz
inc
and
inc
int
jns
sub
or
dec
loop
in
or
sub
mov
jnp
inc
fadd
pushf
movsl
cmp
in
cli
adc
aaa
sbbl
jne
lahf
ss
fnstsw
mov
xor
jb
cmp
shrb
stc
nop
mov
pop
lock
loope
push
adc
xor
sub
jl
ljmp
jno
add
shrl
and
xchg
lods
inc
cmpsl
orl
ret
ljmp
outsl
or
test
es
sti
adc
inc
sbb
cmp
arpl
xchg
outsl
ret
mov
sbb
ret
hlt
or
xchg
inc
pop
mov
mov
mov
jae
mov
sti
xchg
xor
push
sbb
nop
test
into
fnstenv
push
in
sub
jae
jle
shrl
lahf
xchg
sub
stos
icebp
mov
repnz
inc
and
xor
fs
sub
or
dec
loop
in
or
sub
daa
mov
jnp
inc
fadd
pushf
movsl
cmp
jecxz
cli
adc
ret
pop
and
sbbl
jne
lahf
ss
fdivrl
mov
xor
jb
cmp
shrb
stc
nop
mov
pop
lock
loope
push
adc
xor
sub
jnp
ljmp
jno
fcmovbe
push
push
sub
scas
inc
cmpsb
orb
stc
shrb
ret
jmp
dec
and
loopne
outsb
or
cmpsl
shlb
icebp
enter
adc
inc
sbb
xchg
outsb
ret
mov
sbb
shl
repz
xchg
inc
pop
mov
mov
scas
fnsave
cmp
ljmp
icebp
cmp
sbb
cmpsl
cmp
fdivs
push
in
sub
or
shrl
sahf
xchg
sub
stos
icebp
mov
icebp
mov
and
das
inc
into
gs
sub
or
dec
loop
jmp
mov
daa
sub
jp
inc
ffree
fwait
movsl
cmp
loop
sti
adc
ret
pop
and
loope
je
mov
xchg
fstpt
mov
das
fdivl
cmp
shrb
xchg
mov
pop
lock
loopne
push
adc
ss
xor
jmp
xchg
or
push
push
sub
xchg
scas
inc
movsl
jg
movsb
mov
int
clc
shrl
ret
in
orl
push
insl
or
cmpsb
mov
test
adc
inc
sbb
xchg
insl
ret
mov
sbb
shl
repnz
xchg
inc
pop
rclb
sbb
jne
mov
std
xchg
xor
pop
icebp
cmp
test
mov
xchg
sub
sub
mov
xor
push
shrl
popf
xchg
sub
test
mov
and
cs
iret
data16
sub
test
mov
or
es
xchg
jns
inc
faddp
lcall
adc
ret
pop
and
sbb
loope
jae
mov
xchg
fidivrl
mov
fnsave
cmp
imul
lock
fbstp
adc
aaa
into
pop
xor
in
stos
test
or
fcom
push
push
sub
xchg
mov
movsb
jle
movsb
scas
not
sub
add
in
test
dec
loopne
insb
or
movsl
mov
test
adc
inc
sbb
xchg
insb
ret
mov
sbb
mov
mov
xchg
inc
pop
rcrl
sbb
jbe
mov
shr
add
xchg
xor
pop
icebp
cmp
mov
pop
js
lea
xchg
sub
sub
mov
xor
jbe
jnp
shrl
pushf
xchg
sub
test
mov
out
mov
and
sub
dec
sub
test
mov
or
sbb
imul
insl
inc
xchg
js
dec
fistpll
loopne
std
adc
ret
pop
pop
xor
jb
mov
xchg
push
or
sbb
jne
cmp
shrb
cld
xchg
mov
pop
lock
fidivs
adc
cmp
push
xor
in
test
lret
cld
xlat
shrl
push
xchg
sub
out
xchg
dec
mov
iret
data16
ret
out
test
dec
loopne
imul
jae
movsb
mov
test
cmovns
inc
sbb
xchg
imul
popf
mov
sbb
mov
movsb
cmp
adc
xchg
inc
pop
ret
fs
ja
mov
shl
xchg
xor
pop
icebp
cmp
mov
pop
js
lea
sub
daa
add
or
xchg
icebp
mov
out
mov
and
sub
dec
sub
test
mov
or
sbb
imul
insb
inc
xchg
js
dec
fistpll
fbld
adc
ret
pop
pop
xor
jb
mov
xchg
push
or
sbb
jne
cmp
shrb
cld
xchg
mov
pop
lock
fidivs
adc
xchg
sub
ja
in
test
mov
mov
je
sti
xlat
shrl
sbb
out
xchg
dec
mov
ret
iret
data16
iret
sub
add
out
test
dec
loopne
push
mov
movsb
mov
test
push
dec
loopne
sbb
xchg
imul
popf
mov
sbb
mov
movsb
cmp
adc
xchg
inc
pop
ret
fs
ja
mov
shl
xchg
xor
pop
icebp
cmp
mov
pop
js
lea
xchg
sub
add
or
xchg
icebp
mov
in
mov
pop
cld
sub
dec
sub
test
mov
or
sbb
imul
imul
js
dec
fistpll
fisubs
paddsw
pop
pop
xor
jb
mov
xchg
push
or
sbb
jne
cmp
shrb
cld
xchg
mov
pop
lock
fidivs
adc
iret
push
xor
in
cmpsl
test
or
xlat
shrl
sbb
sub
out
xchg
dec
mov
ret
hlt
iret
sub
add
out
test
dec
loopne
imul
movsb
mov
test
or
movsb
cmp
addr16
nop
imul
popf
mov
sbb
mov
movsb
cmp
adc
xchg
inc
push
ret
fs
ja
mov
shl
std
xchg
das
or
cmp
mov
pop
js
lea
xchg
sub
and
inc
jbe
js
shrl
cltd
xchg
sub
test
mov
in
mov
push
cld
sub
dec
sub
test
mov
or
pop
repz
push
xchg
js
dec
fistpll
data16
push
in
ret
pop
pop
xor
jb
mov
xchg
push
or
sbb
jne
cmp
shrb
cld
xchg
scas
mov
mov
fidivs
adc
cmp
push
xor
in
cmpsb
test
or
xlat
shrl
sbb
xchg
dec
mov
ror
repz
sub
add
dec
loopne
push
addr16
movsb
mov
test
or
loopne
sbb
imul
popf
mov
sbb
mov
movsb
cmp
push
ret
fs
ja
mov
shl
cld
xchg
or
cmp
mov
pop
js
lea
xchg
sub
and
mov
xor
jbe
ja
shrl
cwtl
xchg
sub
test
mov
jmp
dec
sbb
aas
shlb
dec
sub
test
mov
or
push
repz
imul
fistpll
fsubl
or
das
test
popa
inc
loope
jb
mov
xchg
push
pop
out
mov
sub
jne
cmp
shrb
cld
xchg
scas
mov
mov
fidivs
adc
cmp
push
xor
in
movsl
test
or
xlat
shrl
sbb
xchg
dec
lahf
jge
movsb
scas
ror
repnz
sub
add
test
dec
loopne
addr16
cwtl
jae
movsb
mov
test
or
cmp
movsb
cmp
decb
pop
popf
scas
test
mov
movsb
cmp
call
xchg
xchg
test
ja
mov
shl
sti
xchg
sub
dec
sbb
jg
js
lea
xchg
sub
and
mov
xor
jbe
jbe
shrl
xchg
xchg
sub
test
mov
ljmp
sub
dec
sub
test
mov
or
adc
aaa
sub
push
mov
mov
or
ret
pop
pop
test
pusha
inc
loope
jb
mov
xchg
push
push
out
mov
sub
jne
cmp
shrb
cld
xchg
lods
mov
mov
fnsave
mov
rclb
xchg
sub
jae
out
movsb
xorl
not
shrl
sbb
pop
insb
mov
sahf
jl
movsb
lods
mov
sub
call
out
xchg
loope
gs
jmp
les
loope
pop
movsl
cmp
pop
push
pop
pushf
lods
xchg
out
add
xchg
inc
push
ret
pop
test
mov
cmpsb
loope
fdivs
xchg
sub
pop
repnz
jge
jns
mov
xchg
cs
pop
lock
mov
xor
push
je
aam
test
repnz
call
adc
outsb
dec
lds
out
xchg
sahf
dec
jecxz
loop
movsb
adc
push
and
mov
jbe
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
loop,pt
jo
mov
xchg
ret
pop
add
push
mov
fbstp
ss
addr16
xchg
stos
mov
mov
fidivrl
or
cmp
push
sub
pop
out
mov
ret
jbe
cmc
rcl
imul
push
dec
pushf
jns
movsl
stos
mov
sub
cld
adc
xchg
dec
loop
arpl
movsl
xchg
outsl
imul
out
xchg
hlt
pop
dec
loop
adc
imul
lcall
jns
jmp
cwtl
inc
push
ret
pop
test
mov
movsl
loope
xlat
mov
aam
clc
call
aaa
dec
sbb
adc
stos
cwtl
das
fucomp
pop
lock
mov
xor
push
je
aam
test
repnz
call
adc
outsb
dec
lds
xchg
popf
dec
jecxz
loop
movsb
adc
push
and
mov
jne
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
cmp
mov
xchg
rcl
pop
add
push
mov
fbstp
xor
std
xchg
stos
xchg
mov
fnstcw
or
cmp
push
sub
sub
mov
ret
jbe
cmc
rcl
imul
lock
mov
pushf
js
movsl
test
lret
sti
adc
xchg
dec
loop
arpl
movsl
xchg
outsb
imul
out
xchg
repz
dec
loop
adc
cmp
mov
pop
cltd
lods
xchg
fidivrs
movsl
cmp
push
add
test
mov
movsl
loope
xlat
mov
aam
clc
call
ss
sbb
adc
stos
cwtl
das
fsubr
pop
lock
mov
xor
push
je
aam
adcl
mov
call
adc
outsb
dec
lds
out
xchg
pushf
dec
jecxz
loop
movsb
adc
push
and
mov
je
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
cmp
jns
jg
cmp
rol
pop
add
push
mov
fbstp
xor
shll
std
xchg
stos
xchg
mov
sbb
or
cmp
push
sub
out
mov
ret
jbe
cmc
rcl
imul
and
xchg
mov
pushf
ja
movsl
test
shrl
leave
sub
cli
adc
xchg
dec
loop
arpl
movsl
xchg
insl
imul
out
xchg
repnz
dec
loop
adc
add
lods
xchg
fidivrs
movsl
cmp
or
ret
pop
test
mov
movsl
loope
xlat
mov
aam
clc
call
xor
push
jp
mov
cwtl
das
fucomi
pop
lock
mov
das
inc
ja
je
aam
adcb
mov
call
adc
outsb
dec
lds
out
xchg
fwait
dec
jecxz
loop
movsb
adc
push
and
mov
jae
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
cmp
jns
jg
cmp
rol
pop
add
push
mov
fbstp
xor
fs
xchg
stos
test
mov
sbb
or
cmp
push
sub
out
mov
ret
jbe
cmc
rcl
imul
and
xchg
mov
pushf
jbe
movsl
cmpsl
mov
sub
stc
adc
xchg
dec
loop
arpl
movsl
xchg
insb
imul
out
xchg
icebp
pop
dec
loop
adc
add
lods
xchg
fidivrs
movsl
cmp
or
cwtl
cmp
pop
pop
mov
movsl
loope
xlat
mov
aam
clc
call
xor
sbb
adc
test
das
pop
lock
mov
cs
ja
je
aam
adcl
mov
sbb
adc
outsb
dec
lds
out
xchg
lcall
adc
push
pop
xor
mov
jb
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
cmp
jns
jg
cmp
rol
pop
add
push
mov
fbstp
xor
arpl
xchg
stos
test
mov
sbb
or
cmp
push
sub
out
mov
ret
jbe
cmc
iret
shrb
pop
xchg
sub
and
xchg
dec
pushf
jne
movsl
cmpsb
mov
sub
clc
adc
xchg
dec
loop
arpl
movsl
xchg
imul
mov
ret
out
xchg
lock
dec
loop
adc
add
lods
xchg
fidivs
movsl
cmp
or
cwtl
cmp
ret
pop
test
mov
movsl
loope
xlat
scas
cmp
xchg
sub
pop
repz
mov
push
jp
xchg
cwtl
das
pop
lock
mov
sub
dec
aam
adcb
mov
call
adc
outsb
inc
lds
out
xchg
cltd
dec
jecxz
loop
movsb
adc
push
push
xor
mov
jno
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
cmp
jns
jg
cmp
rol
pop
add
push
mov
fbstp
xor
bound
xchg
stos
sbbl
int3
sbb
pop
pop
cmp
push
sub
out
mov
ret
jbe
cmc
into
shrb
pop
xchg
sub
and
xchg
mov
pushf
je
movsl
movsl
mov
sub
notl
lock
dec
loop
arpl
movsl
xchg
push
add
xchg
out
pop
dec
loop
adc
add
lods
xchg
fidivs
movsl
cmp
or
cwtl
cmp
pop
test
lea
cmp
xchg
sub
pop
repz
mov
push
jp
test
cwtl
das
fsubr
pop
lock
mov
sub
ja
je
aam
jg
xchg
sub
mov
mov
sbb
adc
outsb
inc
lds
out
xchg
cwtl
dec
jecxz
loop
movsb
adc
push
sbb
mov
jo
dec
loopne
xchg
cmpsb
cmp
or
les
sub
sbb
cmp
jns
jg
cmp
rol
pop
add
push
mov
fbstp
xor
popa
jns
xchg
stos
sbbb
int3
sbb
push
pop
cmp
push
daa
xchg
sub
mov
ret
jbe
cmc
int
imul
and
mov
mov
fwait
jae
cmpsb
movsb
mov
sub
xchg
dec
jecxz
bound
movsl
xchg
imul
in
mov
out
push
dec
loop
ds
pop
imul
xchg
stos
xchg
fnsave
movsl
cmp
or
cltd
cmp
pop
sbbl
mov
aad
idiv
xchg
sub
pop
hlt
xor
mov
push
jnp
test
xor
out
pop
lock
stc
mov
sub
push
jae
aad
jle
xchg
sub
lahf
repz
out
dec
sbb
adc
insl
inc
das
jbe
out
xchg
xchg
dec
in
loope
movsb
adc
imul
xor
ret
mov
outsl
xchg
mov
cmpsl
ds
cmp
xor
mov
inc
out
mov
pop
std
insb
mov
iret
jns
and
dec
inc
push
sahf
dec
cmp
push
fs
movsl
popf
and
mov
cli
xor
hlt
or
pushf
shll
jnp
mov
fstl
xor
pop
sbb
xchg
jne
and
into
fcom
sub
stos
cmpsb
into
out
adc
or
mov
cmp
faddp
addr16
lret
jbe
sahf
dec
mov
mov
cmpl
sub
mov
aad
jp
xchg
addr16
hlt
fidivs
inc
cli
pop
sbb
xchg
outsb
or
xchg
test
std
xor
mov
pop
mov
xchg
xlat
inc
bound
cmp
test
mov
mov
inc
pop
jl
pop
popf
inc
and
mov
out
roll
scas
fbstp
mov
mov
jge
lods
daa
mov
push
dec
or
push
sbb
gs
cmpsl
mov
mov
dec
in
mov
movsl
ja
lds
cmp
insb
push
pop
adcl
leave
daa
dec
mov
fnstcw
hlt
inc
addr16
pop
xchg
js
push
fadds
outsl
inc
pop
dec
nop
add
repz
ja
inc
cmc
mov
push
incb
ljmp
push
popf
out
dec
inc
adc
insb
outsl
adc
cmp
ja
mov
mov
aaa
mov
adc
orl
jne
aam
rcrl
popa
inc
pusha
xchg
mov
mov
adc
loop
lcall
addr16
pop
pop
mov
out
rol
sub
add
push
sub
sub
test
adc
mov
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
pop
addr16
aaa
loopne
xchg
insl
pop
aaa
cld
cmc
mov
adc
pop
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
stos
add
stos
lret
stos
sub
push
cmp
xchg
lds
jl
sbb
sbbb
test
pushf
sub
jbe,pn
jae
cmp
and
