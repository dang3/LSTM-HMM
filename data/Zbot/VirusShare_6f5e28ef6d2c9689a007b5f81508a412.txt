push
mov
sub
movl
movl
lea
mov
mov
mov
imul
mov
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
cmpl
jne
movl
mov
push
call
add
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
jmp
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
movl
mov
imul
mov
movl
mov
or
imul
imul
mov
movl
lea
mov
lea
mov
mov
mov
or
mov
add
cltd
idiv
add
mov
push
push
push
push
push
call
cmp
jne
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
call
push
call
add
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
or
mov
add
cltd
idiv
mov
movl
mov
or
add
mov
sub
mov
movl
lea
mov
mov
add
mov
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
mov
add
mov
cltd
idiv
add
mov
movl
mov
and
mov
and
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
lea
mov
mov
mov
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
xor
je
movl
movl
mov
push
mov
push
call
add
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
mov
push
mov
push
call
add
mov
push
mov
push
mov
push
call
add
movl
mov
push
call
add
movl
lea
mov
mov
mov
sub
mov
sub
mov
call
movl
mov
cmp
jg
movl
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
lea
mov
mov
mov
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
add
mov
movl
mov
add
mov
cltd
idiv
add
mov
jmp
cmpl
jg
movl
jmp
mov
add
mov
cmpl
jge
jmp
movl
movl
movl
mov
or
mov
add
cltd
idiv
imul
mov
jmp
movl
mov
and
add
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
add
mov
mov
imul
add
mov
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
cmpl
jg
movl
mov
add
mov
cltd
idiv
imul
mov
movl
movl
lea
mov
mov
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
mov
mov
rorl
nop
mov
xor
mov
mov
mov
mov
mov
jmp
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
cmp
jne
movl
mov
and
mov
add
cltd
idiv
imul
mov
mov
and
imul
imul
mov
mov
pop
ret
push
mov
sub
movl
cmpl
jg
movl
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
mov
mov
and
add
add
mov
lea
mov
mov
mov
add
imul
mov
push
call
add
shl
push
push
push
push
call
mov
movl
cmpl
jg
push
mov
push
mov
push
call
add
jmp
movl
mov
push
push
call
add
movl
movl
movl
lea
mov
lea
mov
mov
mov
or
mov
mov
add
mov
sub
mov
mov
and
imul
mov
sub
mov
movl
jmp
mov
add
mov
mov
shr
cmp
jae
mov
add
mov
mov
mov
jmp
movl
push
mov
push
call
add
mov
push
push
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
cltd
idiv
add
mov
jmp
movl
mov
push
call
add
push
call
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
movl
mov
and
sub
imul
mov
cmpl
jne
movl
lea
mov
mov
mov
imul
add
mov
lea
mov
lea
mov
mov
mov
or
mov
imul
imul
mov
mov
push
call
add
jmp
movl
lea
mov
mov
and
mov
sub
imul
mov
mov
push
call
add
jmp
movl
movl
mov
add
imul
mov
movl
mov
push
mov
push
call
add
mov
mov
mov
push
mov
push
push
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
jmp
jmp
jmp
jmp
lods
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
bound
add
jb
add
jle
add
xchg
and
add
add
loopne
add
mulb
add
or
add
and
add
add
dec
and
add
add
pusha
and
add
add
add
add
add
jle
add
sbb
add
or
add
clc
and
add
fsubs
add
mov
and
add
pusha
and
add
jbe
add
cwtl
and
add
sub
add
add
add
filds
add
sub
add
add
add
fsubl
add
and
add
and
add
fs
jae
popa
jae
popa
jae
popa
jae
add
gs
jb
outsb
gs
popa
je
insl
imul
and
and
insb
insb
bound
imul
add
add
pop
dec
dec
inc
inc
pop
dec
inc
dec
push
pop
inc
dec
dec
dec
pop
inc
dec
dec
push
dec
inc
push
inc
add
push
js
push
pop
push
jne
jb
arpl
jbe
and
pop
inc
dec
push
pop
inc
pop
inc
inc
inc
push
and
outsb
je
add
add
add
add
call
sbb
ljmp
add
add
mov
add
cmp
add
andb
add
add
and
add
add
add
add
shlb
add
fsubl
add
hlt
and
add
and
add
and
add
and
add
and
add
add
bound
add
jb
add
jle
add
xchg
and
add
add
loopne
add
mulb
add
or
add
and
add
add
dec
and
add
add
pusha
and
add
add
add
add
add
jle
add
sbb
add
or
add
clc
and
add
fsubs
add
mov
and
add
pusha
and
add
jbe
add
cwtl
and
add
sub
add
add
add
filds
add
sub
add
add
add
fsubl
add
and
add
and
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jo
jb
add
pop
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
popa
insb
inc
jb
gs
add
inc
popa
fs
gs
fs
je
add
jp
inc
gs
jns
je
insl
push
imul
insb
gs
imul
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xlat
add
inc
popa
fs
jb
je
push
je
add
dec
popa
jae
inc
jb
outsl
jb
add
jo
insb
insb
outsl
arpl
int3
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
insb
je
inc
jns
gs
outsl
push
imul
loop
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
filds
push
outsb
push
gs
js
gs
imul
gs
add
dec
outsl
fs
gs
imul
add
int
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
add
je
jne
jb
outsb
je
push
add
or
inc
jne
jb
outsb
je
jb
arpl
jae
iret
add
insl
imul
outsl
arpl
jae
add
add
inc
popa
fs
outsl
fs
je
add
movl
jo
leave
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
test
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
add
jb
outsb
addr16
jb
insl
inc
dec
push
dec
inc
add
outsb
imul
add
adc
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
push
dec
inc
inc
jb
insl
push
je
imul
outsl
push
outsb
imul
imul
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
add
jb
outsb
addr16
jb
insl
inc
push
dec
inc
xor
outsl
insb
xor
cs
insb
add
imul
cmp
imul
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
gs
add
add
add
mov
sub
and
rol
push
popa
push
flds
std
and
out
add
jne
inc
add
sub
repz
push
fs
push
nop
es
or
inc
xchg
mov
adc
xorl
push
adc
lcall
nop
jp
in
bound
inc
out
sbb
shl
andb
je
bound
xor
pop
sbb
ret
movsb
sbb
flds
in
mov
psadbw
roll
and
dec
fs
les
gs
inc
mov
sub
outsl
or
les
pop
std
fwait
xorb
add
pop
and
inc
into
cmpsl
js
inc
popa
lret
mov
mov
sar
cmpsl
inc
je
inc
dec
pop
push
xchg
adc
inc
jnp
dec
cs
mov
jns
in
mov
and
and
push
nop
inc
push
inc
inc
jl
movsb
sbb
inc
fbld
jmp
push
push
adc
jo
mov
lahf
cmpb
or
jb
movsb
jae
pop
lds
xchg
shlb
sbb
filds
test
sti
cltd
sub
xlat
adcl
jb
out
test
adc
int
sub
sbb
or
push
inc
dec
fidivl
push
inc
ja
or
loope
addl
lret
cmc
rcrb
lcall
cmpsb
or
test
movsb
jb
inc
and
xchg
adc
lea
inc
add
jg
push
cltd
aam
jecxz
adc
ret
sbb
adc
scas
sbb
dec
inc
dec
jle
test
aam
xchg
js
inc
jecxz
leave
sahf
or
xchg
mov
dec
pop
sub
sbb
dec
push
add
aas
das
xchg
sbb
loop
xchg
jne
cmpb
pop
test
dec
mov
jae
nop
dec
es
jno
das
test
and
adc
sbb
fimuls
sbb
fisubl
xchg
jg
call
jae
inc
test
jl
addr16
mov
cmp
adc
rcrb
inc
ljmp
rep
inc
mov
pop
nop
inc
or
cwtl
cltd
jne
sub
iret
cmpsl
sub
ds
es
and
and
je
xchg
dec
jg
fs
enter
jbe
int
adc
push
push
xor
pop
or
leave
jbe
and
das
xchg
sbb
inc
jb
rcrb
jecxz
cltd
sbb
add
push
lcall
push
inc
add
test
inc
aas
and
popf
pusha
aas
inc
fwait
sbb
mov
jl
lds
pop
mov
inc
roll
mov
and
xchg
or
dec
leave
fdiv
push
les
inc
and
aam
inc
and
dec
sbb
cmp
inc
sub
int
and
lahf
dec
jmp
addr16
pop
inc
je
cmpsl
or
dec
movsb
icebp
xor
dec
pop
es
dec
sub
lret
je
gs
and
arpl
int3
sahf
ja
into
outsl
sub
fsts
sbb
lcall
hlt
dec
inc
jns
verw
fstpl
stc
jp
sbb
pop
dec
loop
imulb
jge
pop
shlb
sbb
mov
inc
mov
sub
dec
push
fs
rol
xor
test
cs
xchg
gs
push
push
xchg
pop
mov
cmpsb
push
adc
adc
ss
nop
inc
pop
push
adc
xorl
sarb
adc
cmp
repnz
or
hlt
or
xchg
jo,pn
pop
nop
pop
popa
sbb
xchg
and
lcall
std
jp
rcrb
dec
addl
or
les
pop
hlt
mov
cmc
fcoml
add
push
sbb
mov
push
push
ss
sub
nop
jno
dec
pop
aaa
shlb
mov
stc
sub
adc
lcall
xchg
push
jbe
inc
pop
dec
std
rclb
xchg
rcrl
push
inc
push
mov
inc
add
inc
insl
xchg
stos
mov
hlt
and
dec
or
cmpsl
pusha
dec
loop
and
xchg
xlat
mov
sbb
sbb
ret
jg
pop
pop
ss
pop
or
add
fsubrs
sbb
push
inc
movzbl
pop
pop
movl
xchg
fisubrl
icebp
push
out
test
adc
or
cmpb
jo
pop
pop
aad
fwait
ret
pusha
mov
and
cmp
scas
aam
sub
inc
adc
cs
adc
mov
in
adc
pop
sbb
cmp
aam
jge
out
std
and
aas
add
mov
push
or
jge
and
mov
or
jg
test
lret
dec
inc
test
roll
jo
test
xchg
or
jl
and
cmpsl
mov
mov
iret
mov
add
cwtl
push
adc
or
jne
es
ret
adc
ja
xchg
insl
or
ja
enter
mov
adcb
inc
and
mov
sbb
lcall
aam
sub
iret
cmpb
jmp
jnp
mov
cmp
mov
shl
gs
js
fmull
add
inc
ret
xchg
out
fidivl
les
push
mov
aad
mov
xchg
andl
testb
mov
mov
push
sbb
aaa
rol
mov
add
or
mov
out
or
out
aad
pop
dec
ja
test
push
mov
jecxz
or
xor
add
adcl
es
sub
adc
pop
aad
push
lds
add
mov
jne
lds
sbb
inc
xchg
sbbb
adc
fsubr
adc
ret
jl
cmp
repz
jge
push
in
add
incl
xchg
ret
shlb
push
or
xchg
pop
lret
cmp
popa
add
pop
and
cmp
sbb
shll
test
ret
sbb
fcmovbe
loopne
inc
ljmp
mulb
xchg
test
xchg
inc
pop
dec
cs
arpl
int
push
xchg
mov
jle
push
xchg
mov
mov
out
xlat
pop
add
mov
mov
jns
pop
movsl
cltd
decl
lods
mov
lock
mov
into
add
pop
rolb
jae
xchg
adc
pusha
outsb
pushf
pop
pop
notb
loop
dec
arpl
sbb
xor
repz
adc
sub
xlat
inc
push
jo
jg
enter
ljmp
push
pop
shll
xchg
add
push
cmp
inc
xchg
sbb
or
lods
inc
xor
iret
rcrl
adc
push
lret
inc
add
fsts
popf
pop
aas
fadd
icebp
sbb
add
pop
mov
push
add
inc
mov
sbb
add
add
ret
push
arpl
mov
aam
add
add
filds
pop
xchg
adc
xor
xchg
ret
adcl
insb
cmpb
lds
pop
nop
shl
popa
adc
in
add
jmp
imul
std
cltd
mov
out
cmc
stc
movsl
out
std
jmp
movsb
lahf
icebp
push
pop
sahf
jns
sub
jge
das
mov
push
mov
popf
lahf
lds
adc
ljmp
lock
mov
decl
xchg
add
les
pop
enter
sarb
sarb
enter
enter
rcrb
bswap
sbb
dec
rorl
outsb
and
jg
sub
pusha
rcrl
mov
fildll
cmp
popa
call
xor
cmp
insl
push
cmp
imul
xor
insl
sub
mov
popa
mov
cmp
test
mov
adc
dec
sahf
es
shll
scas
inc
xchg
pushf
lcall
mov
enter
jnp
pop
xchg
inc
jb
mov
rorb
lods
pop
jbe
inc
mov
mov
je
lock
fimull
dec
sub
addb
inc
push
mov
das
inc
cld
mov
push
inc
lahf
dec
rcrb
pop
dec
cltd
sbb
sub
sti
cld
xchg
pop
dec
pop
push
xlat
lret
sbb
dec
sub
inc
sub
jo
incl
hlt
push
adc
cmp
dec
fmuls
fdivrp
ss
scas
call
pop
call
stc
nop
js
enter
out
repz
scas
std
arpl
lock
mov
push
cmc
aad
aas
inc
fmuls
jns
leave
add
iret
fcmovne
lea
fdivrp
test
popf
push
jns
scas
out
cmc
cwtl
cmpsl
out
icebp
cwtl
scas
out
std
or
sahf
cmc
mov
sahf
std
cwtl
stos
sahf
stc
test
mov
test
mov
test
mov
mov
scas
mov
icebp
enter
fsubs
scas
cmc
call
stos
scas
std
xchg
lds
repz
lods
pop
fistpl
pop
jecxz
mov
and
fistpll
mov
addr16
cmp
outsl
push
cmp
or
imul
outsl
cmp
dec
arpl
cmp
sub
dec
imul
dec
outsl
fdivs
pop
arpl
cmp
addr16
enter
clc
xor
arpl
xor
clc
cmp
imul
outsb
outsl
call
xor
call
cmp
cmp
or
add
fidivrs
mov
push
sub
pand
orl
pop
xlat
leave
xchg
fcmovne
sbbl
leave
das
ror
mov
xlat
stc
xchg
subl
stc
aas
sar
mov
xlat
jmp
cmpl
jmp
mov
cltd
xchg
cltd
orl
pop
rcrl
xchg
mov
outsl
rorl
xchg
mov
xlat
pop
xchg
fistps
lahf
rcrl
lahf
xlat
dec
xchg
fisttps
scas
rorl
scas
xlat
jns
scas
fstpt
scas
fistpll
mov
xlat
imul
iret
shrl
iret
xlat
sbb
sbb
fs
cmp
sbb
movsb
jp
ss
xor
jp
movsb
js
cmp
cmp
in
cmp
lock
xchg
cmp
daa
lcall
xor
stos
iret
ss
faddp
sub
leave
cmp
jecxz
outsb
pusha
enter
dec
mov
sbb
add
sbb
das
dec
mov
aas
inc
test
sbb
dec
test
sbb
dec
pop
adc
inc
hlt
sbb
inc
pop
sbb
dec
cmc
pop
filds
sbb
inc
dec
adc
inc
xor
iret
dec
dec
sbb
inc
hlt
sbb
inc
jns
out
inc
mov
clc
and
jmp
push
mov
je
inc
clc
dec
and
jnp
sbb
pop
jbe
and
call
sub
pop
das
mov
push
lcall
sub
call
and
jl
push
push
adc
mov
lahf
adc
sbb
sbb
imul
scas
dec
or
stos
dec
or
out
dec
int3
es
sbb
sub
mov
arpl
inc
lock
insl
jbe
xor
jbe
xchg
popa
mov
icebp
push
xchg
andl
xchg
subl
cmpsb
cld
mov
push
lock
cmpsb
hlt
icebp
test
hlt
mov
lods
xchg
sbb
inc
sbb
fisttpll
fimuls
sbb
inc
sub
dec
cmp
incl
std
jo
jle
das
cmp
sub
test
dec
pop
in
popf
jo
push
lahf
dec
mov
push
popl
popl
adc
js
pop
mov
inc
sub
mov
dec
cmp
pop
inc
dec
sbb
dec
push
pop
dec
dec
adc
pop
push
dec
inc
pop
sbb
pop
push
dec
dec
pop
adc
push
sbb
push
adc
js
outsl
inc
js
outsl
dec
js
outsl
dec
js
pop
inc
mov
pop
inc
mov
push
jge
adc
inc
cwtl
outsb
push
jno
push
js
and
jns
daa
cli
jne
daa
cli
jno
sub
jge
jecxz
out
pushf
daa
mov
jmp
das
call
stos
xchg
repz
cmpsb
lss
adc
jl
mov
lods
sub
subl
add
xchg
cld
add
xchg
adc
xchg
mov
mov
mov
rorb
and
into
rolb
popl
cmovs
sbb
dec
stc
adc
lahf
dec
clc
sbb
jg
jmp
adc
inc
jmp
adc
inc
xlat
sahf
lock
xchg
lock
xchg
lock
negl
add
daa
xchg
add
daa
sahf
adc
inc
lcall
push
fwait
xor
add
xor
adc
push
jmp
scas
callw
repz
test
div
mov
jbe
shrl
dec
push
or
push
mov
mov
adc
hlt
dec
cs
jl
pop
sub
jecxz
push
adc
int
jmp
lods
xchg
cltd
addb
xchg
nop
jecxz
scas
mov
push
shl
xchg
test
loope
notl
loope
loope
lcall
xchg
xchg
int3
notl
add
lock
aas
mov
push
mov
jo
mov
shrb
pop
cld
enter
sarl
test
out
movsb
out
loopne
mov
in
repz
xchg
call
test
std
nop
in
icebp
fdivrs
pop
stc
cwtl
test
std
mov
cmc
mov
out
mov
sbb
clc
mov
mov
addr16
and
jnp
dec
sub
mov
movsl
pop
push
lods
das
push
outsl
xor
popa
imul
push
imul
paddusw
mov
fxch
xchg
cmp
or
sub
inc
fcomps
das
dec
cmp
das
dec
mov
jle
inc
test
das
ljmp
daa
stos
jno
jmp
pop
nop
fistpll
in
mov
fwait
movsl
adc
ret
push
mov
mov
ret
mov
lds
and
jl
or
aam
lods
xchg
lds
js
and
jo
and
sbb
sarl
call
jns
movsl
or
adc
js
sub
add
les
cld
sarb
and
fwait
rcrb
adc
jnp
inc
sub
imul
pop
jb
sub
dec
lock
test
xor
movsl
xchg
mov
push
adc
push
dec
inc
xlat
roll
fwait
rorl
xchg
rol
xchg
rol
fwait
ror
lahf
ror
xchg
icebp
les
icebp
shlb
int3
addr16
icebp
enter
les
loope
ja
loope
ja
loope
xchg
xchg
rolb
xchg
enter
les
fwait
or
cmpsl
xchg
mov
cmpsl
xchg
mov
cmpsl
fwait
mov
add
xor
fidivrs
sub
jns
and
jne
and
jno
sub
jge
sub
jns
and
jne
and
jno
das
cli
lods
and
cmc
ret
scas
out
lock
insl
cld
call
movsb
dec
hlt
lcall
cld
cwtl
test
lock
clc
mov
lock
mov
outsl
cld
mov
movsb
jg
test
jg
test
jg
test
jg
pop
movsl
hlt
pop
mov
pushf
pop
test
push
dec
mov
lahf
cld
dec
test
scas
hlt
js
scas
clc
js
scas
cld
js
scas
lock
mov
mov
lock
iret
clc
sbb
iret
lock
or
fcomip
cmp
out
clc
cmp
cld
sub
pmaddwd
mov
paddw
test
pop
cmc
enter
enter
enter
clc
movsl
das
cmc
clc
mov
das
std
clc
test
aas
cmc
call
movsl
dec
cmc
cwtl
mov
dec
std
cwtl
test
pop
cmc
mov
pop
std
mov
outsl
cmc
mov
mov
clc
fidivrl
lock
hlt
enter
enter
enter
clc
movsb
out
hlt
clc
mov
out
cld
clc
test
lock
mov
cld
call
movsb
pmaddwd
lods
paddw
movsb
pop
cmc
mov
pop
std
mov
das
cmc
mov
lods
das
std
mov
movsb
aas
cmc
test
aas
stc
test
aas
std
test
aas
icebp
pop
movsl
dec
cmc
pop
mov
dec
std
pop
test
pop
cmc
dec
mov
pop
std
dec
test
outsl
cmc
js
outsl
stc
js
outsl
std
js
outsl
icebp
push
mov
jg
push
movsl
cmc
sbb
popf
sbb
das
pop
or
push
outsb
aaa
gs
jmp
outsl
jg
xor
mull
jns
shrb
in
xor
sbb
add
fmulp
xor
lret
mov
xchg
scas
mull
jmp
scas
mov
pusha
jle
jecxz
out
in
mov
cwtl
mov
icebp
nop
mov
push
cwtl
test
pop
cli
mov
aas
lcall
daa
cmp
sub
into
loop
push
mov
cmp
lods
insb
jmp
mov
rcrb
cltd
faddp
sbb
cs
int3
scas
lock
fs
dec
jb
adc
xor
adc
dec
adc
iret
inc
loope
addl
daa
cltd
sbb
inc
dec
ret
adc
ficoml
hlt
jbe
mov
add
test
inc
fdivl
dec
je
xchg
inc
dec
mov
adc
dec
add
xor
ret
inc
leave
aad
sbb
inc
and
adc
xchg
je
dec
cltd
fadds
sbb
shrb
xor
sbb
je
in
sub
into
scas
into
hlt
pop
movsl
xchg
clc
dec
mov
loop
mov
jmp
jg
xchg
call
ja
sbb
rol
dec
aam
lds
jne
inc
cltd
flds
dec
and
adc
add
xchg
fcoms
push
dec
inc
adc
jge
inc
and
out
test
sub
out
sub
iret
scas
es
movsb
xorb
scas
cs
sbb
adc
inc
inc
push
jl
sbb
pushf
das
inc
dec
inc
adc
push
adc
push
and
fildll
sbb
mov
les
xchg
jb
pusha
fwait
inc
adc
popa
int
sub
les
lcall
scas
fs
addr16
and
or
xor
adc
cmp
jo
popa
adc
xchg
out
sbb
in
jecxz
icebp
inc
inc
sbb
mov
mov
addl
mov
aaa
jmp
sbb
lcall
push
sbb
and
roll
call
sbb
jecxz
mov
sbb
and
test
add
sahf
aas
insb
xor
pop
push
push
and
cmp
push
sub
xchg
aas
xlat
stos
adc
sbb
mov
lahf
push
outsb
out
sbbb
inc
out
cmp
add
pusha
cmp
out
call
mov
inc
popw
dec
aaa
popa
add
inc
inc
inc
data16
iret
ss
dec
xorl
cltd
test
dec
aaa
xor
out
inc
push
add
pop
ror
loop
pop
fs
jle
inc
push
inc
push
xchg
adc
aam
movsl
adc
adc
stc
dec
xchg
outsl
push
hlt
lods
dec
dec
adc
pop
sbb
push
xchg
xor
xchg
xchg
push
sub
es
inc
cmpsl
sbb
inc
inc
add
aas
xor
inc
inc
pop
jae
inc
mov
push
pushf
adc
sbb
dec
inc
fidivrs
push
insb
dec
notl
sbb
pushf
xchg
dec
dec
dec
ljmp
push
mov
leave
jl
stos
inc
out
pop
cli
dec
xorb
movsl
pop
mov
inc
sub
adc
cwtl
sbb
push
mov
jge
sarl
dec
pop
int3
xchg
imul
inc
cmpsl
daa
adc
pop
fstpt
adc
dec
jb
mov
mov
adc
or
xor
mov
sarl
xchg
xor
xor
pop
mov
add
pop
push
or
aam
sbb
inc
xchg
pop
adcb
shl
push
and
les
push
icebp
cmpsl
pop
loopne
add
xchg
inc
push
test
xchg
or
and
insl
pop
push
jno
insl
loop
or
mov
rcl
cmp
les
dec
and
ret
loop
add
jle
adc
movsb
adc
push
sbb
scas
lcall
pop
aad
sarl
xor
push
add
pop
vpaddusb
xor
aaa
adc
insb
sbb
xchg
test
adc
inc
cmp
jno
into
xorl
arpl
pop
arpl
dec
xor
inc
fnstcw
inc
imul
inc
xchg
adc
jno
fsts
pop
xor
scas
sbb
adc
aaa
push
mov
icebp
xor
inc
inc
inc
sbb
dec
call
inc
dec
mov
adc
insl
addr16
pop
sbb
xchg
sbb
and
or
xchg
add
pop
inc
outsb
inc
xchg
sbbl
mov
dec
test
mov
lods
pop
push
inc
je
inc
and
push
adc
rclb
das
inc
cmp
adc
repz
cmc
mov
push
xchg
jl
adc
push
aaa
cmp
mov
mov
lds
adc
add
push
loope
adc
adc
fsubrl
lahf
lods
and
add
mov
adc
dec
jo
lock
or
xchg
push
adc
jmp
inc
out
pop
adc
push
adc
arpl
push
inc
addr16
xor
adc
mov
dec
roll
stc
dec
popa
out
pop
push
xchg
inc
adc
sbb
pop
enter
cmpl
adc
cmpsl
aad
xchg
leave
pop
test
adc
enter
xorb
and
or
addr16
out
inc
adc
imul
bound
inc
movsl
push
addb
push
mov
bound
inc
inc
mov
adc
mov
popf
sub
cmc
inc
pop
adc
jle
fwait
loope
addr16
and
lock
mov
stos
shlb
adc
cmp
and
arpl
adc
sbb
adc
hlt
ja
mov
push
cmpsl
jge
xchg
adc
or
adc
push
les
and
in
inc
inc
mov
sub
xchg
shll
cmp
repnz
sbbb
scas
popf
sub
inc
inc
adc
xor
adc
inc
aas
icebp
xchg
bound
pop
test
mov
inc
jbe
shrl
push
jno
orl
push
and
aaa
loopne
add
daa
imulb
add
xchg
sub
scas
adcb
sbb
fstps
xlat
popa
sub
aam
popa
dec
inc
push
cli
mov
xchg
or
xor
gs
push
bound
adc
adc
popf
dec
dec
fwait
sahf
dec
dec
pushf
lahf
dec
dec
popf
lahf
lret
lahf
lret
dec
lahf
lahf
enter
jno
inc
inc
xor
adc
dec
cmpsb
lcall
test
lock
test
lcall
push
lcall
in
outsb
mov
and
xchg
mov
ja
sub
addl
push
std
or
mov
in
jo
and
adc
out
ret
adc
insl
sbb
adc
pushf
movsl
scas
adcb
mov
or
xchg
arpl
pop
ljmp
arpl
daa
cwtl
pop
xchg
and
push
xor
push
add
fstpt
pop
sub
dec
sub
insl
push
scas
fs
rorl
cmp
and
add
add
sbb
popf
mov
test
mov
xor
mov
fwait
movl
push
lret
in
push
xchg
je
xchg
out
mov
jl
cld
cmp
aam
nop
pop
cmp
rcll
push
push
sub
roll
mov
movsb
fildll
add
xor
dec
or
ja
rcrl
add
sub
mov
jle
cmp
sub
xchg
mov
push
test
outsl
lret
or
mov
out
xor
incb
cmc
ss
or
ja
fisubrs
add
mov
push
ss
test
push
arpl
loop
add
sbb
les
pop
addr16
fs
bound
cmp
cmp
add
inc
or
pop
les
fwait
cmp
rcrl
add
xchg
addl
inc
jb
push
xchg
leave
imul
cmpsb
cmp
xor
cli
lods
shr
pop
loopne
pusha
lods
cmpsb
xchg
mov
bound
and
push
jbe
in
xrelease
imul
dec
xor
xor
add
jbe
repz
cmp
cmc
dec
out
mov
mov
xor
das
int
sbb
into
ret
iret
ret
sbb
xlat
sbb
xchg
sbb
xchg
cltd
inc
rcll
mov
repz
movsb
dec
hlt
cltd
movsl
dec
cmc
cltd
mov
dec
negl
mov
dec
cli
cltd
scas
dec
sti
cltd
lods
dec
cld
cltd
lods
dec
std
cltd
stos
dec
cltd
stos
dec
lcall
sub
fwait
out
mov
add
arpl
out
mov
nop
push
inc
adc
insl
sbb
lds
out
dec
adc
and
fxtract
fdivl
pop
out
stc
adc
or
in
push
xchg
jno
lods
mov
cmpsb
dec
jle
enter
sub
gs
xlat
ret
jp
stc
adc
int3
sbb
in
pop
test
ficomps
jns
or
scas
mov
cmpsb
imul
xor
hlt
ret
xchg
push
enter
mov
jnp
cld
sub
jmp
stc
xchg
add
xchg
icebp
jmp
subl
outsb
cmp
testb
cltd
mov
push
and
dec
jno
lea
mov
ss
iret
mov
xor
mov
push
jnp
inc
mov
leave
inc
ret
add
or
cwtl
xchg
pop
movsb
mov
mov
lahf
roll
inc
and
mov
push
mov
pop
dec
xlat
aad
xor
sbb
sub
pop
not
je
pop
dec
xor
pop
lret
jcxz
jecxz
movsb
ss
and
mov
pop
int3
fs
xor
dec
lahf
pop
mov
xor
mov
mov
mov
nop
ss
jmp
dec
push
cs
fiadds
lahf
adc
xchg
mov
ficomps
aam
imul
cmp
push
mov
repnz
push
testb
lret
pop
aaa
mov
adc
sub
cmp
pop
cltd
lods
jle
jb
or
add
in
mov
insl
sub
call
in
lahf
mov
rcrb
les
sub
cmp
sbb
pop
jbe
mov
gs
imul
insb
inc
iret
mov
lret
ss
pop
cmp
incl
adc
rcrl
and
push
std
pop
mov
push
testl
adc
scas
pusha
add
aaa
mov
fbstp
incl
inc
xchg
repnz
cli
push
push
sub
jno
adc
mov
hlt
mov
push
pop
in
xchg
imul
sub
push
mov
lds
or
fisttps
and
jle
push
rol
ret
mov
inc
sbb
out
fs
js
scas
in
movsb
jo
cwtl
sub
cltd
loop
push
inc
mov
bound
pop
mov
pop
inc
bound
sbb
rclb
dec
and
adc
mov
shll
xchg
jae
dec
cs
icebp
dec
outsb
and
mov
outsl
sub
adc
pop
sbb
mov
and
test
add
rcr
shrb
lods
xchg
dec
push
or
stos
or
cli
mov
or
loop
ss
lret
aad
adcb
inc
aas
subl
ret
xchg
xchg
bound
cmovb
push
ficompl
or
xor
and
pop
push
mov
pop
sbb
mov
dec
adc
ret
out
imull
aas
pop
cmpsl
cmp
or
in
stc
in
push
pusha
xchg
sbb
dec
mov
scas
adc
and
sbb
mov
lock
fldl
xchg
sbb
insl
push
mov
stc
inc
vpinsrw
bound
pop
push
dec
and
scas
mov
mov
cmp
sub
into
ja
pop
sbb
xchg
rcrl
aaa
jmp
push
mov
mov
pushf
loopne
jl
js
mov
rorb
jp
and
push
xchg
neg
lret
jg
aad
pop
xchg
pop
mov
or
cmpb
pop
scas
inc
pop
pop
jo
or
add
imul
lret
sub
pop
lock
loope
pop
push
xchg
pop
nop
pop
loopne
xlat
or
pop
cmp
or
aaa
jae
dec
push
loope
jno
cwtl
pop
push
lds
push
push
aas
pop
mov
seta
jmp
nop
mov
fidivrs
adc
ret
adc
pushf
pop
repz
push
xor
push
ja
sub
shlb
loope
mov
adc
pop
ds
dec
xchg
bound
inc
inc
repnz
cmp
pop
push
sub
ret
adc
push
in
xor
push
pop
mov
push
pop
inc
dec
jbe
ljmp
movsb
lret
xchg
insl
cmp
lea
or
aad
jmp
in
add
daa
jmp
jb
pop
inc
and
cmp
imull
lods
add
mov
push
ss
addr16
push
ja
cld
xchg
sub
inc
cltd
and
push
push
mov
push
push
idivl
xor
and
jmp
sbb
add
flds
mov
pop
mov
push
sbb
xor
mov
icebp
adc
or
and
mov
fisttpl
mov
mov
fs
stos
jae
test
inc
out
iret
addl
dec
mov
or
add
test
enter
jns
ljmp
jno
pop
sbb
movsl
mov
lock
inc
call
insl
sbb
jl
enter
adc
out
lea
ret
dec
cmpsl
adc
cli
mov
xchg
test
adc
push
das
push
fstl
mov
mov
jns
imul
dec
int3
mov
adc
push
pop
cmp
sti
xchg
es
adc
xchg
outsb
and
test
sbb
sbb
push
inc
xor
dec
dec
inc
jne
sbb
movsb
nop
ss
xchg
sbb
lret
pusha
jl
pusha
pop
sbb
inc
inc
mov
or
lahf
cmpsl
xor
dec
div
sub
je
pushw
sub
loopne
clc
cmp
mov
outsl
lds
fistpll
fmul
adc
inc
test
mov
stos
xchg
sub
mov
and
mov
sub
xchg
in
mov
jmp
daa
jecxz
aad
and
insl
sub
add
mov
jmp
imul
jb
test
ss
call
pop
movsl
cmp
fldcw
pop
call
pop
cli
push
aas
insb
xor
lahf
mov
inc
and
fdivs
aaa
stc
loopne
sbb
sub
push
rolb
outsb
inc
xchg
lods
sarb
mov
mov
or
push
jp
cmpsb
sbb
repnz
xor
xchg
mov
push
nop
andl
lret
test
fs
adcl
mov
inc
cwtl
lock
ds
rorb
hlt
ss
add
pusha
fs
fmull
xchg
add
cmp
mov
out
stos
test
add
mov
xlat
aas
test
jp
pop
sbb
ret
cmp
stos
movsl
mov
mov
jne
xor
enter
clc
push
and
push
test
fidivs
cmp
push
addb
into
pop
jecxz
test
cs
scas
jb,pt
add
test
jge
dec
mov
aaa
call
stos
and
in
fadds
popa
ds
mov
sub
out
push
cs
adc
cmp
shr
out
jle
test
push
mov
mov
jecxz
mov
test
adc
xchg
xchg
add
fcomps
test
sahf
mov
nop
push
std
js
outsl
mov
out
in
xor
xor
into
daa
xor
mov
fisubs
test
xor
mov
mov
mov
mov
insb
movsl
mov
outsl
pop
mov
jae
jae
mov
sub
out
xchg
mov
aaa
enter
push
lahf
mov
xor
jae
mov
fidivl
test
fsubrl
movsb
jg
fst
push
cmc
mov
test
cs
push
cmp
repz
test
movsl
mov
adc
adc
outsl
test
sbb
test
aas
mov
cmpb
and
fsub
pop
ss
loop
sbb
add
xlat
in
lcall
out
arpl
cmpl
dec
sbb
in
cmp
iret
cmpsb
outsl
jl
mov
je
fsubr
xor
subb
mov
mov
sub
fdiv
pop
xor
jno
mov
fsubs
mov
gs
fimuls
fwait
push
jg
mov
mov
adc
push
jae
enter
sarb
outsb
fwait
sub
repz
out
fsub
loop
add
push
sbb
inc
adc
and
inc
ds
mov
push
es
adc
aas
and
inc
jae
push
pop
xlat
adc
movsl
mov
ja
stc
xlat
ret
jle
dec
sub
sbb
or
pop
arpl
int
das
aam
and
nop
call
js
sbb
fcomi
dec
fs
test
and
sub
adcb
jle
dec
sub
mov
jl
sbb
enter
sbb
and
out
sub
sbb
sbb
jae
dec
mov
mov
shl
pop
and
and
mov
sbb
daa
inc
dec
outsb
pop
jae
jae
lret
mov
sbb
push
pop
cltd
fistl
add
push
sbb
xchg
ret
inc
jmp
jg
dec
and
sbb
and
push
jae
lret
mov
dec
lahf
daa
xchg
sbb
inc
bound
sbb
shlb
pop
insl
mov
add
dec
mov
jl
dec
and
rorb
mov
pop
mov
hlt
adc
orb
cltd
sbb
rorl
jp
clc
imul
mov
cli
dec
jns
ret
jg
dec
and
int3
scas
mov
adc
sub
into
aad
sbb
shrl
adc
loop
and
dec
loop
ss
shll
push
jno
xchg
jo
dec
sbb
xchg
adc
jg
shlb
adc
leave
push
and
adc
cwtl
sbb
dec
sarb
adc
jo
loop
cli
dec
leave
ficoms
sbb
jle
dec
es
das
mov
sbb
sub
dec
dec
cmc
fists
and
leave
mov
mov
pop
and
inc
inc
jge
adc
ret
inc
test
pop
jnp
xchg
cmpb
mov
dec
sub
inc
adc
sub
lcall
repz
sub
je
repnz
jg
inc
add
adc
ret
inc
in
push
js
in
cltd
ret
inc
push
adc
jle
inc
sub
into
fisttps
bound
mov
sahf
and
adcl
dec
daa
lahf
sbb
or
jbe
sbb
arpl
jp
test
aam
ret
dec
sub
adcb
jo
dec
xor
iret
sub
dec
outsb
jmp
into
push
sub
pop
hlt
adcl
out
sub
sbb
mov
aam
cmc
test
xor
and
mov
and
outsl
andl
loop
scas
cmp
sahf
sub
pop
inc
xor
pop
das
nop
sbb
testb
cmpsb
push
sbb
orl
xor
adc
lock
dec
and
ret
movsb
sbb
daa
adc
mov
into
sub
xchg
sbb
jbe
cmp
ret
inc
aam
add
inc
jb
dec
sbb
jb
in
in
sub
jg
and
and
sub
jle
je
les
cltd
sbb
test
jo
adc
iret
jns
xor
inc
cmp
add
mov
hlt
inc
and
iret
filds
mov
mov
mov
into
and
and
dec
xorb
jns
repz
je
and
and
dec
push
sbb
ret
mov
adc
out
sbb
inc
les
and
push
inc
outsl
sub
inc
inc
js
adc
hlt
jbe
sub
xchg
bnd
inc
or
ret
jne
inc
and
sarb
or
jecxz
rcr
in
test
xchg
sbb
sbb
push
sbb
sub
mov
dec
fsubl
pop
xchg
mov
ret
sahf
cs
pop
test
pushf
sbb
ss
mov
xchg
inc
les
enter
adc
inc
mov
inc
sbb
dec
and
int3
pop
mov
adc
lahf
fcompl
sub
bound
daa
dec
cmpb
cmp
orl
test
popf
cltd
mov
xlat
dec
dec
fldl
or
adc
jbe
inc
sub
lret
scas
sub
mov
and
iret
ds
adc
loop
ljmp
inc
xchg
jp
pop
dec
shl
dec
push
jle
js
cmpsl
xchg
inc
jne
inc
or
rcrb
inc
jp
dec
and
shr
andb
icebp
iret
push
daa
inc
sbb
xchg
sbb
mov
sbb
xlat
push
dec
inc
jne
cwtl
mov
daa
inc
mov
xchg
sbb
lds
sub
push
push
loopne
jecxz
leave
cs
pop
je
ret
and
sbb
push
adc
jae
push
jge
dec
out
sahf
xchg
jae
inc
cltd
fbstp
aam
in
xor
push
stc
adc
in
les
xchg
sbb
mov
sub
xchg
dec
test
icebp
and
dec
sub
mov
dec
mov
pop
and
aad
push
and
push
sub
inc
lea
das
and
xor
stc
shll
fs
sbb
sub
test
jb
dec
es
das
mov
sub
dec
push
notb
add
int3
out
and
inc
and
push
addl
cmp
int3
push
or
jnp
mov
inc
ret
cmp
pop
push
aad
pop
aad
cmpb
adc
lcall
sbb
jle
cmp
mov
repz
and
mov
push
cltd
adc
test
pop
sub
test
fistpl
or
hlt
and
pop
daa
sub
repz
jne
jbe
push
jge
popa
push
mov
divl
mov
add
add
xor
mov
jbe
pop
ds
add
pop
cli
rcrb
mov
push
inc
movsb
or
shlb
and
or
xor
data16
push
and
push
rcrl
mov
dec
or
js
add
test
testb
pop
push
or
dec
mov
nop
xchg
sbb
fisubrl
or
mov
ja
out
and
adc
xor
int3
xchg
cmc
rorl
inc
dec
repz
aaa
cli
sub
dec
jge
mov
add
rcll
and
push
call
mov
sub
mov
mov
sbb
xchg
push
mov
add
andb
lea
mov
adc
repz
xor
in
push
lods
mov
ja
lds
subl
outsl
je
xchg
loopne
mov
insb
insl
scas
ja
lods
push
pop
aaa
cwtl
mov
pop
add
pop
inc
or
mov
push
cmp
aaa
into
lock
popa
mov
sbb
add
fisttps
ret
xor
push
fs
lea
xor
inc
call
data16
popf
pop
push
pop
pop
push
mov
push
pop
add
and
push
aad
add
sub
outsl
sub
sbb
test
push
mov
xor
je,pt
mov
jmp
in
and
and
fwait
pusha
cmp
mov
jbe
out
lea
push
xlat
ror
jns
andl
jns
stos
jnp
fstps
mull
mov
fisttps
enter
add
inc
adc
pop
push
add
iret
div
mov
jecxz
in
shlb
and
or
out
aam
ficomps
movsb
mov
xchg
mov
loope
push
daa
orl
add
dec
aad
in
push
dec
in
ss
adc
dec
or
mov
add
jo
std
fdivrl
add
ss
mov
jns
loope
cli
fdivrl
enter
rolb
pop
cmp
mov
cmpsl
push
or
insl
inc
jecxz
push
gs
in
or
pop
pop
jle
mov
push
movsb
or
push
add
mov
out
in
lock
push
addr16
je
loopne
pusha
xchg
mov
ja
mov
xchg
mov
xchg
imul
mov
nop
cwtl
lock
lods
or
shlb
rep
pop
mov
fnstsw
jno
jnp
pop
cmpsl
les
movsb
shlb
sbb
rclb
adc
lock
mov
inc
pushf
push
xchg
lds
xor
and
xor
inc
mov
mov
iret
bound
mov
or
push
dec
inc
es
mov
cmp
jbe
adc
es
int
inc
sbb
and
fisubs
mov
or
mov
iret
push
xor
push
push
dec
mov
or
pop
xor
sbb
push
mov
loop
pusha
cld
mov
xorb
out
mov
inc
fwait
icebp
outsl
and
xchg
int3
xor
push
sbb
mov
icebp
jl
hlt
cmp
loopne
out
sub
sbb
out
repz
movb
loope
mov
or
pop
cltd
lock
pop
jbe
in
add
cmc
movsb
push
jle
push
iret
jae
test
pop
adc
mov
pop
ja
and
or
push
jns
dec
jnp
mov
aad
sbb
dec
jae
ret
rolb
xchg
insl
sbb
add
push
adc
sub
bnd
pop
jmp
jb
test
mov
inc
cltd
flds
sbb
inc
and
popl
inc
inc
jle
add
arpl
into
dec
sub
cvtpi2ps
jl
sbb
jl
enter
xor
inc
jns
add
je
je
sub
iret
test
push
notl
jecxz
leave
out
sub
lahf
sbb
cli
dec
ret
shr
adc
adc
dec
sub
repnz
push
rorl
je
mov
bound
xchg
or
sub
pop
and
jge
sbb
orl
push
or
nop
and
jmp
jbe
inc
cs
out
mov
push
jns
push
roll
adc
inc
pop
es
mov
mov
je
lds
jnp
inc
sbb
rcrb
fs
dec
das
loope
pop
mov
das
orb
repnz
xchg
xor
into
and
sbb
mov
sbb
fiadds
jl
push
stc
rol
dec
mov
xchg
sub
mov
inc
cltd
aad
adc
xchg
pop
out
or
mov
adc
xchg
sbb
sbb
fidivs
cmpb
jmp
jo
dec
sub
in
gs
dec
into
loop
sbb
and
outsb
sub
xchg
dec
out
rorb
negb
mov
jge
add
dec
mov
jns
dec
cs
das
test
and
dec
jle
adc
add
mov
xchg
adc
iret
and
in
xor
xor
jg
inc
sbb
jb
fs
dec
sub
lret
push
adc
pop
jge
adc
lds
mov
inc
jmp
xchg
sbb
inc
mov
enter
sarb
dec
mov
loop
movsb
jno
dec
and
adc
ds
daa
and
mov
xchg
dec
dec
jns
bnd
adc
rorl
jge
mov
cmpsl
dec
mov
add
mov
hlt
dec
loope,pn
jg
adc
or
je
adcl
mov
dec
push
jnp
push
pop
fbld
dec
xor
mov
js
fwait
sbb
xlat
pop
les
inc
das
xchg
iret
incl
mov
outsb
mov
sbb
xchg
iret
into
sub
lea
sbb
dec
mov
cmpsb
sbb
aad
dec
fs
push
ja
dec
cltd
fcom
push
in
test
mov
sbb
dec
inc
fisubrs
hlt
adc
xchg
sbb
lret
dec
adc
push
or
jecxz
je
xchg
mov
jns
inc
mov
adc
add
je
sub
int
xchg
ds
inc
pop
inc
mov
mov
inc
push
push
test
out
and
sarb
push
mov
and
test
sti
das
jno
aas
mov
adc
mov
and
bound
and
sbb
gs
adc
mov
push
dec
xchg
jb
ja
test
jno
inc
and
ret
jg
adc
push
and
pusha
push
push
and
into
sub
push
les
pushf
sbb
dec
bound
pop
jmp
jns
or
movl
jae
dec
and
pop
addl
push
jno
sub
lahf
daa
cwtl
sbb
dec
ret
sbb
jo
mov
jns
inc
cmp
adc
mov
adc
sub
iret
incl
ja
push
loope
ds
aam
xor
daa
cwtl
sbb
push
sbb
push
jo
js
inc
xchg
ret
dec
jns
jb
movsb
jg
inc
daa
add
adc
loope
outsb
sub
aas
sub
sbb
dec
inc
jae
enter
xorb
fsubl
mov
mov
and
inc
outsb
popa
cmpsl
adc
or
aas
and
dec
and
dec
push
je
cmp
xor
dec
fsub
ret
jge
outsl
pop
fnstsw
sub
adc
dec
adc
push
jns
and
jl
push
je
dec
cltd
fsts
dec
daa
ror
mov
push
jnp
push
loope
jle
movsb
adc
add
das
sub
inc
xchg
js
pop
or
mov
sub
mov
add
jle
dec
sub
shr
mov
jne
mov
adc
and
out
and
adc
xor
xor
xchg
jg
inc
jns
loop
xchg
jb
inc
mov
sbb
and
dec
mov
sbb
inc
outsb
and
ljmp
inc
loop
xchg
adc
fbstp
dec
inc
js
dec
sarb
push
jg
dec
jmp
mov
scas
adc
jne
inc
dec
dec
adc
mov
adc
movsb
andl
ret
and
adc
xor
repnz
and
dec
mov
je
mov
add
sbb
jbe
or
xchg
sub
xor
or
sbb
and
jb
scas
and
out
add
pop
add
fxch
push
inc
hlt
ja
clc
adc
xchg
mov
adcb
arpl
xor
xchg
ja
adc
cwtl
xchg
ret
faddp
jbe
rcrb
xchg
out
mov
lods
push
cmpsl
xchg
addb
lods
in
fldt
sub
add
sub
inc
xchg
jno
dec
fistpl
adc
xchg
out
mov
pop
cmpsb
ret
xchg
in
mov
clc
mov
pop
push
adc
sbb
inc
dec
sub
popa
arpl
inc
sbb
pop
push
popa
push
push
gs
pop
lea
and
fst
push
nop
popf
into
push
test
loope
mov
in
xchg
mov
mov
pop
pop
cmp
or
test
xchg
cmp
enter
jecxz
pop
push
adc
orb
and
lahf
mov
jns
sbb
repz
ret
in
loope
sbb
adc
lds
les
out
lret
sub
sbb
sbb
mov
push
sbb
cmpsb
inc
mov
lret
ret
sbbl
shlb
cmpsl
mov
clc
mov
jo
add
mov
orb
out
popl
fimuls
pop
sbb
mov
test
mov
xchg
inc
or
sbb
jg
pop
mov
xor
into
mov
enter
xchg
xchg
imul
jmp
sbb
idiv
ret
subb
add
xlat
test
jae
xchg
jae
jae
test
push
lods
sbb
nop
mov
xor
mov
mov
push
jp
xchg
aam
mov
cmp
scas
out
adc
loop
or
int
lea
imul
pop
adc
jno
inc
sub
mov
fdivl
aas
in
inc
sbb
jnp
add
fildll
orb
insl
cmp
mov
mov
arpl
lea
aaa
pop
test
add
jne
cmpsb
inc
int
call
loopne
xchg
ja
adc
sub
adc
inc
icebp
or
sbb
pop
loop
and
xorb
sub
adc
xor
pop
mov
push
movsb
push
mov
es
mov
and
or
rcrb
jae
stos
xchg
popa
xchg
pop
add
popf
div
pop
add
push
lds
mov
xor
imul
pop
inc
test
inc
andl
es
daa
into
ret
popf
mov
push
xchg
sti
jnp
cmpsb
jmp
mov
mov
xchg
inc
cltd
shl
adc
jae
inc
xor
lds
pop
xor
aaa
pop
and
mov
fwait
outsb
pop
iret
jecxz
clc
mov
push
jnp
xor
stos
xchg
inc
icebp
popf
leave
insb
jns
inc
ss
adc
or
movb
jae
leave
or
inc
inc
push
xor
shll
and
out
andl
data16
pushf
aam
xor
inc
push
ret
insb
jecxz
and
les
mov
add
mov
test
xchg
rorb
sbb
inc
push
xchg
gs
inc
and
mov
mov
sbb
push
pop
into
sub
jo
mov
cmp
or
mov
or
pop
and
shlb
xchg
xchg
push
test
inc
sahf
ret
add
mov
mov
push
fstps
dec
aam
xor
xchg
in
mov
dec
adc
or
push
sahf
inc
mov
nop
mov
and
push
pushf
jmp
and
negb
xchg
fsubs
mov
sub
scas
xchg
cltd
int3
shl
arpl
cwtl
ret
outsb
filds
ret
mov
xchg
xorl
jnp
add
xchg
xchg
xchg
call
out
pop
lock
cmp
add
inc
inc
xchg
out
loop
mov
push
mov
nop
in
bound
loope
lahf
enter
sbb
ror
jle
icebp
push
adc
lret
add
sub
movsl
adc
movsl
roll
clc
movsb
bound
jno
enter
lea
inc
rolb
adcl
mov
push
orb
and
fcoml
jmp
cmp
aad
outsl
push
mov
ret
lret
bnd
data16
ret
and
loope
add
lret
std
repz
jg
jae
bound
fs
sub
or
test
xchg
or
insb
ja
inc
mov
addl
pop
inc
lds
cwtl
jae
out
xchg
lret
adc
fidivrs
fwait
bound
adc
imul
mov
loop
fmuls
adc
ficoml
neg
jns
cmpsl
arpl
ret
mov
in
push
addl
mov
les
jecxz
dec
lahf
addr16
mov
xor
jbe
lahf
lds
mov
mov
mov
adc
mov
jecxz
inc
adc
jge
xchg
inc
xor
test
sbb
ret
jle
xor
mov
dec
inc
xchg
insb
mov
pop
stc
sbb
sub
lahf
movsb
test
adc
loopne
fisubrl
inc
sar
loopne
xor
test
xor
mov
jecxz
and
lcall
sahf
mov
mov
xlat
or
pop
or
lock
push
fildl
imul
jo
daa
push
lcall
scas
inc
into
jo
xcrypt-cfb
cmpsl
es
pop
inc
rol
pop
shlb
ja
xor
add
inc
mov
mov
das
aaa
lods
in
lds
data16
lret
and
xchg
jb
adc
push
hlt
aam
pop
pop
sub
popa
push
dec
pop
xchg
push
lret
push
rol
pop
aam
fmull
loope
inc
test
testl
leave
call
leave
cmp
pop
enter
cmp
cli
sub
or
sarl
sti
loopne
dec
dec
or
ja
loopne
adc
std
scas
mov
or
mov
or
bound
ja
xchg
mov
out
iret
and
lds
pop
fnstenv
sub
sbb
pop
push
pop
fs
mov
add
testb
bound
mov
and
push
jne
je
cmpsl
pop
sub
cs
push
mov
shlb
and
flds
sbb
mov
pop
rorb
jle
loopne
xor
bound
orb
popf
scas
in
mov
jecxz
push
jge
mov
jno
loop
adc
stc
aam
mov
xchg
dec
rolb
mov
shrb
ret
dec
mov
aad
add
addr16
lock
mov
jbe
pop
and
push
into
insl
enter
sbb
adc
mov
cmp
lcall
mov
cmpsb
lock
je
jns
push
sub
lret
xor
push
and
cmpsb
pop
or
aaa
mov
sbb
push
jo
lahf
xchg
or
in
fwait
xchg
or
sbb
test
or
mov
push
inc
icebp
andl
fisubrs
jp
or
es
repnz
hlt
mov
push
test
shr
xor
test
pop
dec
jp
add
mov
ret
add
xchg
les
test
cmp
xchg
push
pop
jl
jb
xchg
leave
fwait
xchg
into
sbb
xchg
mov
repz
or
mov
xor
mov
enter
sbb
mov
mov
jbe
push
fiadds
jno
ficoms
popa
vshufps
ret
mov
lods
sarb
xchg
aam
movntps
xchg
mov
and
cmp
add
fwait
mov
lahf
xor
int3
fwait
or
mov
sbb
sub
pop
inc
dec
stos
sub
jp
loope
mov
in
rol
aad
and
scas
add
lahf
xor
jecxz
or
sbb
or
cltd
outsl
jge
adc
dec
in
cmpsl
test
xchg
int
loopne
fwait
inc
adc
adc
adc
jne
enter
mov
rol
adc
pushf
rcl
mov
mov
jmp
dec
mov
adc
adc
rcrl
lods
into
sbb
xchg
jne
fsubrl
xchg
xor
mov
or
inc
inc
lock
jae
outsb
jp
push
dec
cmp
rol
cmc
mov
ja
cmpsl
leave
and
ret
ficoml
inc
dec
jl
push
and
orb
lea
jmp
push
or
outsl
data16
int
sbbl
and
fisttps
xchg
je
arpl
push
xchg
mov
inc
or
add
inc
xchg
testb
imulb
sbb
jecxz
jne
push
nop
cltd
push
subl
cmpsb
dec
jmp
inc
sbb
push
xchg
dec
out
mov
lahf
int3
leave
sahf
inc
hlt
test
mov
out
out
test
pminub
mov
xor
std
xor
pop
add
xchg
mov
scas
addl
in
test
pop
xchg
in
rolb
lret
cmp
pop
push
push
push
inc
movsb
ds
push
pop
ss
int3
stos
xchg
les
aas
cmp
bound
lret
daa
into
movsb
xchg
mov
push
aaa
jg
and
rolb
pushf
xchg
jg
sti
icebp
xchg
mov
jae
pop
mov
es
sbb
movsb
mov
sub
add
dec
dec
sbb
sub
arpl
cmp
fnstenv
fwait
out
dec
popf
popl
cmp
daa
adc
jns
and
daa
cmp
jne
loop
in
push
mov
pop
imul
xchg
xchg
lea
scas
mov
lds
dec
decl
jo
xor
pop
daa
jecxz
push
mov
inc
pop
or
xchg
mov
rorl
xchg
subb
xchg
int3
pop
xchg
or
adc
or
sub
add
inc
push
push
popa
jl
test
push
mov
sub
sub
adc
inc
push
xor
or
and
fs
add
fisubrs
pop
ficoms
outsb
and
jg
insb
add
pop
inc
push
or
aas
and
jno,pt
add
add
push
loopne
popl
imul
inc
arpl
xor
enter
js
test
sbb
mov
push
cmp
dec
dec
inc
push
or
pabsb
scas
enter
fstps
or
and
fldcw
push
sti
imul
es
mov
lret
bound
push
dec
jnp
inc
jge
mov
aas
mov
pusha
add
jle
push
push
jp
and
push
int
or
pushf
pop
ja
enter
mov
mov
mov
fcomip
popf
fsubl
mov
hlt
aad
test
in
mov
aad
or
aam
lret
xlat
jg
shll
fcomi
je
iret
mov
dec
stos
adc
mov
cmp
push
xor
push
push
dec
aam
cmp
inc
pop
adc
xlat
je
enter
aas
xor
inc
xor
pop
out
loopne
xor
inc
mov
push
lock
pop
leave
jg
stos
loopne
test
sbb
dec
ljmp
test
aaa
push
sbb
push
or
push
paddsb
stos
push
rclb
loopne
cmpl
and
add
ja
pop
notl
loopne
loopne
push
mov
inc
sahf
lds
inc
jae
dec
push
ficomps
shrb
push
out
addr16
inc
mov
movsl
pusha
xchg
ret
leave
jmp
mov
add
test
aaa
fucomip
mov
jge
int
pop
sub
mov
xlat
jecxz
mov
int
inc
mov
jbe
dec
addr16
rorl
sbb
sbb
mov
adc
dec
decb
pop
movsl
div
popf
xchg
xlat
lcall
xchg
pop
ss
aam
bound
insb
push
cs
cmc
ds
and
push
dec
pusha
push
ss
lods
push
imul
es
dec
in
jecxz
call
sahf
ja
or
scas
push
nop
iret
push
loopne
dec
dec
jbe
pop
scas
xor
negl
push
xchg
dec
adc
push
push
mov
push
xor
popf
das
cs
movsb
mov
or
xor
mov
rorb
shl
pop
call
lods
dec
sub
movsl
inc
pop
push
push
sub
sbb
cmp
add
push
sbb
push
sbb
jno
mov
cs
pop
sbb
add
push
insb
std
stc
cmpsl
inc
or
sti
out
xchg
push
data16
rclb
or
push
cmpsb
inc
push
clc
stos
mov
rcl
test
pop
out
repnz
shl
mov
loop
sbbl
leave
or
sbb
inc
pusha
mov
jae
adc
push
int3
pop
ss
dec
push
ds
xor
cmp
hlt
add
jo
or
xor
add
xlat
add
loopne
scas
mov
pop
testb
repz
mov
into
into
pop
cmc
mov
testb
mulb
nop
jo
push
push
repnz
insb
sbb
add
pop
jae
out
stos
nop
sub
sbb
adc
cmp
pusha
push
push
es
jge
pop
mov
mov
scas
sub
and
out
lahf
lds
or
cmp
jbe
in
test
lret
shll
stos
stc
es
lea
cmp
lret
adc
bound
or
mov
mov
aaa
add
dec
xchg
mov
push
push
pop
mov
dec
int
mov
sub
popa
sbb
pop
xor
mov
mov
loope
cli
push
movsb
xchg
and
rclb
flds
mov
popf
jae
mov
cmc
adc
lock
ds
hlt
repz
mov
sbb
ljmp
jb
pop
or
inc
movsb
cmp
stc
insb
mov
cmc
and
sbb
jne
push
sub
sbb
mov
add
xlat
daa
je
lea
in
lret
cmpsl
fdivrs
xchg
cwtl
rolb
xor
xchg
pop
in
mov
sub
sub
int3
xchg
ds
inc
and
imul
imul
vcvttsd2si
xor
push
aam
out
xchg
and
and
inc
rol
sar
cmpsl
lods
cmp
xchg
pop
cvttps2pi
aaa
sub
push
sbbl
int
in
out
mov
fildl
lahf
in
popa
mov
je
nop
rcll
lahf
rcll
loopne
test
push
test
xlat
and
add
movhps
inc
jp
adc
xor
xchg
mov
inc
jo
test
filds
mov
nop
test
cli
and
fnstcw
dec
xchg
jg
push
push
add
pop
push
adc
mov
xchg
adc
fisubs
jmp
out
push
adc
stos
inc
dec
xchg
mov
popa
jo
daa
popf
push
and
lds
push
mov
lcall
int
sub
pop
dec
cmp
scas
push
neg
xchg
mov
mov
scas
adc
ret
jb
sub
or
js
jns
inc
std
cmpsb
lea
dec
sahf
cmp
fisubrl
adc
shlb
cmc
out
js
stos
pop
push
subb
xor
nop
jmp
stos
iret
mov
xchg
jecxz
ficompl
mov
mov
mov
cmpb
push
daa
push
fs
lret
testl
dec
cltd
pushf
mov
mov
mov
lods
mov
insb
and
push
sbb
add
mov
jmp
cmpsl
icebp
or
pop
sbb
rorl
cmp
jge
cmp
inc
pushf
mov
into
mov
mov
shl
push
or
inc
cmp
inc
jle
push
sbb
repz
dec
ja,pt
mov
xor
scas
insl
ljmp
mov
lahf
dec
in
in
mov
stos
pop
inc
dec
add
dec
bound
movsl
push
add
jmp
test
add
xor
fstpl
push
adc
out
in
enter
loopne
pop
das
aaa
xchg
cmp
in
movsl
pop
std
movsl
pop
test
xchg
inc
lods
xor
repz
stc
addr16
xor
adc
sub
mov
xchg
xchg
shll
rclb
pusha
aad
sub
inc
dec
sbb
ja
adc
xlat
imul
inc
xchg
in
fisttpll
into
lods
lods
mov
inc
ljmp
or
pop
sub
xchg
les
or
imul
add
jle
inc
insb
je
push
ljmp
adc
je
dec
loop
loope
mov
inc
jo
pop
arpl
jno
push
and
and
movsb
addb
xchg
leave
cmc
pop
jmp
andl
addr16
mov
popf
mov
push
ja
sti
shrl
rcrb
popa
jle
mov
das
divl
ja
pop
nop
xchg
sub
icebp
dec
pop
imul
mov
pop
nop
fiadds
xor
std
imul
clc
out
add
loopne
fwait
movsl
or
pop
int3
mov
mov
repnz
pop
loopne
ret
push
shlb
and
js
ret
jno
xlat
push
insb
pop
mov
leave
popa
ficompl
clc
out
push
rolb
pop
lcall
inc
dec
jns
xchg
stc
cld
mov
test
addr16
ja
mov
leave
and
add
add
push
add
sbb
ss
arpl
test
inc
setb
in
add
jnp
xor
push
jo
pop
xor
lea
or
iret
fisubrl
jmp
data16
pop
add
inc
xor
or
inc
jno
dec
adc
cmp
adc
sub
in
jnp
pop
push
dec
sub
push
aaa
pop
out
jae
sub
stc
cmpsl
clc
je
inc
push
arpl
mov
dec
mov
imul
mov
loope
ret
out
push
xlat
jmp
push
pushf
adc
cmc
fstpl
loopne
pop
sub
inc
push
adc
inc
dec
xchg
push
lods
scas
pop
cmc
aas
pop
jns
sub
sbb
pop
cmpl
imul
and
and
imul
insb
inc
push
mov
cmpsb
and
iret
dec
aam
fiaddl
mov
mov
ljmp
pop
idiv
lods
repnz
inc
pop
sbb
and
adc
arpl
or
stos
call
adc
xchg
loopne
mov
out
in
in
jo
enter
dec
or
inc
gs
add
adc
adc
inc
and
movb
out
push
adc
sub
mov
scas
aaa
or
mulb
outsl
pop
or
sub
aam
lret
mov
pop
mov
icebp
sub
fs
cmp
jbe
nop
lock
mov
arpl
mov
lods
push
push
push
js
mov
outsl
adc
xchg
ljmp
fmuls
inc
and
pop
je
xchg
jo,pt
push
jg
mov
push
cld
das
and
inc
cs
outsl
imul
pusha
das
ja
sub
and
lock
je
or
int3
subl
xor
inc
scas
loopne
cmp
leave
sub
aaa
in
pop
xor
dec
sbb
push
mov
cmp
mov
adc
std
call
pusha
popa
sub
out
lea
sub
xor
adc
inc
adc
dec
adc
cmp
push
mov
or
mov
mov
push
cmpsb
mov
lods
out
sub
inc
mov
cmp
xchg
or
faddl
jle
insb
dec
sub
add
jp
les
pop
inc
gs
pmaxub
mov
in
cld
iret
stos
out
add
dec
call
cltd
cmpsl
sti
enter
mov
push
pop
adc
aas
xor
xchg
sbb
pop
or
mov
pop
mov
lea
rcll
leave
movsl
mov
cwtl
fsub
and
fs
mov
pop
stc
ljmp
and
cs
in
pop
jnp
outsl
dec
add
jae
xor
fidivrl
mov
pop
mov
out
stos
js
add
add
add
movsb
mov
lret
dec
scas
xchg
call
sbb
add
pop
lcall
in
cmp
js
jg
in
aam
push
jb
mov
cmc
xchg
out
sub
ret
aaa
fcomps
lods
in
scas
in
int3
aas
pop
cltd
inc
jle
cs
ja
sub
das
inc
jmp
sahf
dec
mov
mov
jge
lahf
adc
imul
pop
cmpsb
loopne
xlat
lods
sahf
dec
xlat
adc
stc
test
dec
and
fmuls
fs
xor
and
cs
stos
and
in
add
xchg
and
ret
sub
jmp
jge
lock
pushf
jb
jmp
orb
test
xlat
push
sbb
push
xor
add
mov
and
inc
out
pushf
in
xchg
mov
push
and
or
gs
js
jo
cmpsb
ljmp
cmp
test
bt
dec
adc
mov
int3
testl
mov
neg
roll
aam
push
into
xchg
xchg
push
jl
mov
jae
add
mov
insb
jns
jo
jle,pt
pop
or
icebp
mov
addl
mov
rorb
imul
jb
pop
loopne
sbb
sbb
xchg
lcall
popf
pop
dec
popa
mov
jnp
imul
mov
sub
xchg
fs
dec
cltd
mov
jg
loop
cmpsb
cld
inc
pop
xor
ja,pn
push
gs
mov
outsb
push
call
and
mov
sbb
push
add
repz
jle
xchg
aaa
fs
and
aaa
cmpsb
mov
testb
cwtl
bound
popf
cmc
das
add
fisttpll
or
mov
push
ja
and
out
test
out
mov
xchg
pop
dec
pop
and
jge
mov
orb
in
add
push
and
inc
enter
rep
jbe
adc
inc
cmpsb
pop
imul
stos
fnstenv
pop
mov
int
push
data16
mov
and
push
adc
push
mov
rorb
movb
mov
in
cmp
mov
jmp
adc
sub
pop
popl
inc
pop
jg
hlt
popf
inc
mov
iret
adc
push
dec
mov
pop
jle
push
call
pop
fsubrp
xchg
mov
add
sti
xlat
sub
adc
push
xchg
add
inc
dec
leave
or
pusha
cli
push
loope
jg
clc
mov
sbb
mov
fnstsw
mov
ljmp
out
ror
add
mov
leave
scas
push
mov
jmp
add
mov
jg
lea
flds
add
jge
and
cmp
adc
popa
push
xor
inc
sbb
cs
or
ja
sub
inc
daa
pop
cmp
rcrl
aaa
mov
in
bound
call
fistps
es
push
fcoml
push
enter
pop
or
jl
clc
cmp
daa
dec
js
ss
jno
stos
xchg
jbe
pop
or
pop
scas
jo
mov
into
sbb
push
inc
push
adc
lret
cmp
pusha
add
add
mov
push
pop
dec
push
dec
push
fs
add
sub
mov
loop
or
clc
pop
outsl
fcomp
xchg
xchg
movsb
xor
xchg
sbb
out
mov
cmp
sbb
and
and
lahf
push
xor
xchg
push
jg
inc
push
and
imul
add
add
sti
mov
add
lock
rcrb
daa
lcall
cli
stos
mov
push
dec
in
fwait
repnz
push
xchg
xchg
jmp
subl
jecxz
testb
xchg
nop
fst
mov
mov
mov
sbb
jbe
sbb
cld
ljmp
add
push
cmpsb
add
inc
mov
ja
in
mov
in
rolb
rorl
add
mov
and
or
mov
pop
push
aad
rolb
pop
pop
push
adc
dec
test
loopne
mov
popf
add
scas
rorl
pusha
scas
mov
jmp
mov
jb
jns
dec
cs
arpl
ss
imul
aas
jle
sub
push
pop
adc
dec
cld
push
sarb
inc
cli
xor
nop
dec
mov
push
stos
aam
ja,pn
jmp
inc
dec
sbb
mov
jbe
push
push
pop
pop
adc
notb
aam
rcll
clc
jge
push
pushf
sub
dec
lret
das
scas
cmp
iret
pushf
pop
push
dec
insb
dec
push
and
sub
movb
and
mov
push
xor
push
jbe
aam
lods
fbstp
lock
pop
pushf
lods
fisubrs
sbb
adc
pusha
dec
jno
and
mov
push
incl
jb
aam
sub
enter
and
jmp
addr16
push
add
fwait
aaa
and
ss
cmpsb
in
mov
dec
push
xchg
push
push
pop
add
stc
dec
nop
adc
add
dec
xor
dec
mov
inc
sbb
adc
lea
cmc
popa
dec
xor
pop
arpl
gs
jecxz
dec
or
lea
sub
ja
roll
and
push
lods
fucomip
ficompl
out
cs
fwait
les
xor
in
pop
rcll
je
push
cmc
fisubl
or
imul
rcll
out
outsl
fiaddl
adc
cld
add
mov
pop
jge
pop
and
adc
or
ret
fs
loop
dec
clc
xchg
test
dec
xchg
xor
adc
push
pusha
enter
mov
pop
mov
or
sub
push
lcall
rolb
sub
push
lcall
adc
xchg
xchg
ret
mov
aad
push
jmp
bound
sub
pushf
pop
push
xchg
cmp
rolb
dec
pop
test
cmpl
cmpsl
in
mov
inc
xor
add
lahf
lret
test
mov
nop
repz
sbb
out
adc
out
call
outsb
inc
mov
mov
xchg
bound
cmpsb
mov
movb
je
stc
xchg
push
arpl
adc
ja
dec
movsb
adc
aas
adc
sub
mov
test
xlat
fninit
fimuls
push
mov
push
cmpl
inc
push
lods
int3
xchg
and
xchg
adc
adc
arpl
push
mov
inc
movsl
adc
out
ja
jbe
lock
push
dec
sahf
push
adc
push
cmp
add
pop
push
cmp
out
sbb
scas
or
ret
pop
pushf
arpl
xchg
mov
push
inc
jb
and
dec
lahf
int
cmpsl
mov
fs
lds
cmp
out
cmpsl
test
add
xchg
sub
mulb
or
push
lret
xchg
jecxz
mov
sub
push
adc
sbb
aad
scas
mov
pop
inc
pop
orl
movlps
lds
fsubl
xor
ljmp
xchg
and
adc
or
cwtl
and
nop
inc
or
test
frstor
dec
das
inc
xor
adc
scas
gs
pop
mov
or
jmp
adc
or
push
gs
shlb
mov
dec
jne
orb
push
dec
push
das
inc
xor
xor
xor
inc
push
push
push
cmpsl
pop
arpl
pop
jns
and
fcomps
xor
add
repz
xor
jo
repz
or
dec
aaa
or
xchg
xchg
push
inc
xor
int3
mov
fcoml
cld
dec
adc
cmpsl
inc
enter
lahf
cwtl
push
scas
sub
push
stos
push
and
mov
sbb
cmc
pop
shll
push
and
sbb
movsl
adc
jle
mov
xchg
cmp
out
cmp
cs
dec
rolb
push
imul
xchg
pop
inc
xchg
insb
fmull
add
jne
outsb
or
dec
mov
ffreep
pop
inc
out
lods
mov
inc
ret
data16
add
push
adc
fisttpl
sbb
gs
ja
outsb
mov
das
mov
call
es
jnp
repz
cmp
and
repnz
rcrl
loope
fldcw
in
push
adc
mov
imull
mov
adcl
add
data16
cmp
pop
add
push
and
negl
out
ss
repnz
inc
adc
aas
mov
jg
inc
cmp
push
repnz
inc
adc
adc
pop
mov
add
fiadds
jns
loop
fdivs
popa
into
iret
repnz
imul
scas
aas
jecxz
es
sahf
or
inc
mov
mov
sub
ret
idiv
les
jg
xor
lcall
sti
sub
pushf
fstpl
inc
push
dec
jno
rolb
pop
lds
loopne
test
cmp
sub
push
mov
mov
hlt
jnp
adc
sub
out
mov
push
or
test
sahf
pop
inc
fisubl
xor
xchg
push
sub
test
or
mov
loope
mov
push
jno
jb
repz
dec
push
pop
in
push
sahf
jle
inc
add
adc
cmpsl
fcom
sbb
add
push
imulb
lock
aaa
testl
sbb
lds
pop
xchg
mov
jnp
mov
or
push
xor
xor
xor
les
lock
ffree
shr
adc
adcl
jbe
cltd
pop
js
xchg
xor
out
jo
rcrb
jecxz
push
mov
dec
dec
into
push
xchg
inc
xchg
cmp
shlb
adc
cmpsb
daa
adc
loope
xchg
cwtl
adc
push
mov
andb
mov
loopne
lahf
and
pop
scas
rclb
pop
shl
test
add
gs
loope
iret
jae
fsubs
inc
inc
aad
add
notl
xor
loope
xlat
hlt
cmpsl
push
rcl
fbstp
push
jecxz,pt
lret
xor
daa
push
or
xchg
leave
sbb
adc
testl
imul
arpl
xchg
je
inc
or
andb
push
add
ja
cmpsl
and
jp
mov
mov
inc
sub
adc
movsl
bound
fdivl
test
push
test
xchg
mov
je
jmp
add
xor
lods
mov
sub
lcall
rorl
adc
inc
pop
mov
lahf
lods
cmp
ret
cmp
jne
aad
shll
mov
arpl
push
movsb
dec
test
pop
xchg
and
cs
push
sub
call
add
add
xchg
in
jo
test
inc
pop
xor
arpl
inc
outsl
push
pop
push
cwtl
cwtl
push
in
inc
in
adc
orl
inc
and
inc
movsb
dec
call
sbb
and
push
jne
add
or
nop
add
int
mul
mov
int3
inc
jp
xorb
movb
mov
insl
test
popa
icebp
dec
loop
aad
sub
jp
adc
rcrb
cld
pop
inc
dec
sbbl
mov
fisttpll
cwtl
hlt
mov
mov
jae
in
push
das
sub
bound
lret
nop
out
dec
mov
rorb
iret
mov
and
lret
mov
push
or
insb
stos
pop
aaa
pop
pop
enter
push
dec
xor
cld
push
or
stc
sub
mov
les
inc
lcall
mov
sbb
leave
jae
stos
jbe
sub
jo
sub
xlat
add
test
movsl
scas
arpl
and
add
lahf
pop
nop
or
push
push
pop
sar
or
lea
fs
mov
push
mov
add
shl
sbb
cmpsb
decl
ret
shlb
sub
xchg
sub
shlb
fs
dec
lock
pop
jl
test
sub
fcomp
jo
mov
and
ret
sub
cmpl
push
sti
adc
sub
test
loope
and
scas
sub
xchg
sub
xlat
je
cmp
adc
in
outsl
adc
push
mov
test
repnz
test
imul
sub
pop
adc
mov
sbb
inc
clc
arpl
dec
dec
add
sub
cmp
inc
and
mov
ret
adc
pop
in
cmc
jo
out
mov
fsubrs
jns
push
or
jge
dec
or
jb
xchg
fisubl
xchg
inc
cmpsb
dec
lcall
and
jmp
in
or
adc
adc
mov
add
pop
sbbl
icebp
adc
pop
jno
shl
sbb
int
test
cmpsb
add
imul
inc
pop
and
jge
rol
xchg
mov
mov
adc
cmp
pop
daa
and
pop
sbb
pop
stc
imul
cmp
adc
mov
and
sub
fnstenv
inc
xchg
cmpsb
loope
pop
aam
pop
xor
leave
mov
jmp
add
mov
push
sbb
adc
mov
jbe
and
leave
inc
xor
daa
movsb
aas
pop
xor
std
mov
adc
mov
enter
fcoml
orb
jecxz
mov
repz
in
adc
add
and
rclb
pop
dec
mov
xor
or
int
es
sbb
int
rclb
out
mov
push
add
adc
ret
stc
js
dec
and
bound
jmp
jbe
fistl
andl
mov
ja
bound
dec
sbb
push
cmp
inc
and
push
xor
sbb
dec
pop
rcrl
stos
pop
std
cmpl
cmc
mov
push
adc
cmp
cwtl
and
add
push
fisttpl
mov
cwtl
pushf
jmp
pop
pushf
fists
rol
adc
cs
ret
hlt
push
dec
adc
mov
test
sub
adc
test
cmc
xchg
pop
fs
or
stc
aas
pop
nop
or
xor
push
fwait
and
shrb
push
dec
mov
ss
ret
mov
mov
xor
push
pop
or
push
out
jle
aad
push
mov
loope
sbb
jl
aad
movl
popa
mov
mov
mov
pop
sbb
loop
loop,pn
mov
frstor
xchg
adc
cmc
shll
dec
rcll
push
inc
mov
aas
rcrb
xor
stos
push
test
jnp
sbb
movl
push
and
xchg
and
fs
sbb
mov
outsl
repz
xchg
dec
je
in
mov
cmp
pop
and
cmp
lahf
inc
cmpsl
xchg
hlt
mov
cmpsb
xor
pop
in
mov
fidivl
mov
push
fistps
adc
movsl
aas
mov
pop
sar
fidivrs
sti
jnp,pt
push
push
shrb
nop
jo
push
add
cmp
inc
cmpsl
stos
jo
test
je
dec
addr16
cli
jp
fcompl
mov
stos
sub
adc
dec
mov
mov
std
sbb
fs
addr16
repnz
pop
sub
shlb
add
push
nop
mov
out
inc
inc
lea
lahf
pop
pusha
idivb
popa
jns
out
push
sub
es
mov
in
int
inc
mov
add
repnz
push
add
pop
inc
jb
xchg
mov
imul
aad
icebp
rcll
shll
mov
inc
xchg
cmpsl
mov
jbe
dec
mulb
jb
add
push
jb
ret
rcll
icebp
and
rclb
push
jbe
ja
lcall
mov
lcall
add
inc
mov
shlb
push
ljmp
mov
sbb
sub
push
cltd
add
pop
dec
aaa
dec
and
insb
data16
addr16
outsl
into
loopne
in
inc
adc
pop
xchg
pop
jns
xchg
mov
scas
push
clc
inc
xchg
movsb
cmc
ds
inc
icebp
add
sahf
in
push
div
movsl
roll
test
mov
add
flds
push
jae
and
add
pop
rcll
lods
sub
and
push
in
add
test
out
rep
push
fistl
mov
aaa
jns
in
and
mov
mov
dec
test
jg
pop
jne
and
dec
adc
xor
pop
jb
and
mov
push
sahf
adc
cwtl
xor
cwtl
pusha
or
pop
and
cltd
fwait
push
fstps
push
push
aaa
ret
fstpl
inc
adc
imul
fsubs
fwait
dec
jecxz
adc
adc
push
push
scas
and
mov
dec
shlb
sub
lock
xchg
ret
and
shrl
sbb
sbb
inc
adc
inc
push
stc
mov
and
pop
nop
sbb
mov
ficoml
xchg
adc
sbb
aaa
mov
popf
fs
loop
imul
add
mov
inc
rcll
ret
out
jae
test
ret
xlat
shlb
leave
adc
movsl
xchg
adc
js
mov
rol
mov
fisubl
aam
outsl
aad
dec
add
iret
inc
aad
pop
stc
sbb
outsb
mov
push
sbb
es
inc
jle
aam
into
xchg
ret
div
inc
jb
mov
and
xchg
je
mov
or
test
xchg
and
lret
jecxz
scas
rep
inc
test
cmpsb
adc
rclb
mov
and
faddl
or
mov
add
xchg
es
push
jl
jno
std
xchg
dec
jbe
pushf
pop
cmc
push
ljmp
shll
and
mov
xchg
push
xchg
in
stc
shll
outsl
fldl
inc
popa
inc
mov
test
fbstp
daa
shrb
inc
mov
subl
data16
or
and
jle
shrb
pop
xchg
pop
jb
push
pop
and
cmp
in
xchg
stc
xchg
ss
push
jge
shlb
sti
shll
hlt
sub
push
stc
jns
subb
cmpsl
rcl
add
imul
fisttpll
inc
push
cmpsb
ret
ljmp
pop
arpl
ret
fdiv
cmp
lea
incb
outsb
sar
push
fcomip
inc
ja
in
mulb
bound
and
or
je
cli
cmc
xchg
adc
pop
sbb
pop
sti
in
push
inc
aas
aam
rorb
push
aaa
cli
cpuid
jae
pop
ret
push
adc
shll
out
sub
cwtl
mov
shll
test
pop
pop
ret
inc
push
add
cmp
cmc
dec
inc
inc
pop
shrl
leave
push
xor
inc
stos
rep
push
push
fmuls
in
adc
dec
and
rcll
sti
push
adc
insb
pop
mov
inc
js
lret
scas
jbe
mov
fimull
mov
je
hlt
adc
leave
loopne
push
shl
xor
cmpsl
int
mov
push
add
sub
jbe
test
xchg
es
in
je
add
fisttps
gs
mov
xchg
or
fsubrl
jo
jb
lcall
bound
lahf
inc
xchg
les
inc
dec
loope
inc
xchg
sahf
sbb
lret
xor
pop
dec
mov
fcoms
push
ja
add
cmp
sbb
xor
dec
push
rorl
dec
dec
push
mov
xor
call
out
jg
and
push
popa
xchg
pop
or
cltd
jbe
arpl
add
xchg
ret
sub
adc
add
push
clc
push
pop
mov
xchg
or
mov
inc
or
cmc
aas
jp
mov
add
repz
inc
inc
mov
adc
inc
fucomi
push
notb
mov
inc
movsl
rcl
mov
daa
fstpl
testb
ja
or
xchg
je
outsl
addb
and
sbb
mov
dec
ret
hlt
sub
dec
fidivrl
jne
pop
dec
jb
andl
adc
push
testb
mov
sbb
in
rcl
out
xchg
push
adcb
orl
push
push
push
and
mov
xchg
xor
push
adc
out
xor
testb
mov
sub
xor
sub
xchg
lock
xchg
adc
call
mov
outsl
adcl
inc
enter
mov
mov
sti
xor
adc
subb
inc
push
insb
jae
rcrl
add
add
dec
xor
inc
stc
sbb
inc
and
pop
or
inc
and
ss
lods
sub
pop
bound
inc
mov
sbb
clc
xchg
std
add
add
insb
sbb
mov
jl
inc
sbb
sbb
jno
dec
ss
pop
push
mov
lods
imul
cmp
jno
xlat
inc
inc
iret
out
adc
es
add
sbb
loopne
nop
sub
jecxz
xchg
xchg
pcmpeqw
repnz
lret
gs
xor
cwtl
cmpsl
fisttpll
inc
fdivl
test
sbb
shll
and
testb
xchg
mov
sbbl
push
int3
adc
push
lods
xor
stc
inc
lea
mov
les
outsb
shrl
cmp
push
lahf
sub
add
add
push
or
add
aam
hlt
clc
add
cltd
push
test
pop
add
idiv
cmp
sbb
and
push
inc
pop
loop
inc
cs
inc
and
dec
and
mov
rorb
fisubl
cmp
stc
lods
inc
jne
adc
xor
ret
push
sub
ret
dec
mov
aad
mov
or
jne
dec
xchg
cmp
repnz
daa
rcr
packsswb
jns
mov
fs
lahf
aad
lret
mov
dec
ror
movsb
add
stc
movsl
cli
insb
dec
xchg
cli
dec
repnz
rcrb
roll
ret
je
pusha
out
movsb
orl
clc
icebp
into
dec
push
mov
mov
inc
ljmp
mov
mov
sbb
dec
cmp
outsb
lods
cs
stos
pop
inc
push
push
mov
or
xchg
insl
sbbl
es
add
fmull
pop
add
jns
jl
out
aas
arpl
pop
and
add
add
cmp
stos
sub
inc
dec
push
dec
xchg
mov
sub
inc
leave
es
xor
stos
push
xchg
inc
xchg
xorb
jle
add
test
divb
je
lds
repz
ljmp
scas
inc
xor
adc
or
mov
cmp
jge
xchg
and
addb
inc
repz
sahf
and
sbb
int3
cmpsb
fadds
mov
ss
xor
in
mov
insb
nop
adc
push
mov
mov
inc
rcrb
imul
dec
ss
inc
shll
pop
fistps
and
repz
push
pop
and
call
add
push
adc
sub
lds
jne
cld
nop
push
mov
pusha
or
dec
lods
and
aad
cmp
and
sarb
arpl
dec
dec
xchg
push
xor
inc
xchg
movsb
jmp
call
mov
pop
mov
xchg
xor
adc
adc
loop
sub
push
test
xchg
popa
pusha
arpl
loop
mov
push
cmpsb
sub
bound
inc
call
std
cmp
dec
in
mov
xchg
cmp
xchg
sbb
xchg
adc
add
es
inc
jle
inc
fcmove
xchg
inc
push
add
and
push
test
and
test
add
inc
lock
adc
add
pop
mov
cmpsl
or
or
pop
aaa
dec
bound
ret
sarl
popa
cmp
xor
mov
stc
jae
dec
jbe
sbbb
adc
push
xchg
and
faddl
aaa
mov
ljmp
daa
mov
dec
mov
jecxz
add
cmp
and
pop
aad
push
push
aas
xor
vpacksswb
pop
pop
enter
fidivrs
mov
fwait
pop
jbe
js
rcrl
inc
push
push
mov
test
outsl
xorl
sbb
pop
jg
adc
out
iret
jnp
lods
inc
cmpsl
mov
icebp
dec
stos
adc
daa
adc
inc
out
sub
mov
daa
js
rorb
adc
pop
inc
push
js
enter
pop
shlb
inc
js
scas
xchg
ljmp
icebp
sub
fcmovnb
and
adc
inc
pop
inc
add
sub
and
mov
and
vxorpd
imul
fadds
imul
sub
cwtl
or
mov
adc
adc
inc
inc
pop
hlt
lds
inc
mov
xchg
adc
je
lods
repnz
xor
lods
mov
dec
jmp
shlb
div
mov
adc
cs
rclb
nop
bound
pop
maxps
adc
faddl
call
add
out
aaa
hlt
mov
jo
cwtl
push
sarl
daa
lds
aad
mov
pusha
jae
add
ja
test
pop
dec
mov
cmc
xlat
xchg
xor
mov
xchg
xorl
out
cmp
insl
pushf
stos
sbb
repnz
dec
testl
sbb
xchg
fsincos
aam
mov
mov
lods
rcll
pop
dec
fnstcw
push
adc
out
xchg
push
add
dec
mov
std
in
jle
push
daa
adc
push
push
mov
push
cltd
lds
insb
lock
sbb
or
rorb
dec
pop
lock
sub
xchg
or
mov
adc
nop
lods
add
cs
jo
pop
pop
mov
out
sbb
scas
dec
mov
shrb
or
rcrb
push
jge
pop
mov
bound
pop
push
sti
pop
sub
pop
adc
filds
xor
stc
jp
fmul
int3
cmp
fcmovnb
xchg
add
fisubs
popf
xor
lods
add
test
ss
cld
clc
mov
sbb
xchg
cltd
in
push
or
test
lock
sbb
in
lds
adc
push
ljmp
xlat
fisubs
cmp
push
pop
ret
adc
add
push
cmp
dec
cmp
cld
rclb
test
roll
test
xchg
inc
ss
mov
sbb
pop
inc
fldl
jne
in
sbb
adc
rep
mov
enter
or
pop
cltd
test
jo
std
clc
mov
insb
es
mov
jle
adc
cmc
addb
das
imulb
inc
adc
cmp
bound
dec
mov
push
incb
adc
test
sub
pop
fdivrs
mov
push
cwtl
test
push
adc
shlb
push
adc
and
jno
mov
mov
test
mov
hlt
inc
mov
adc
xchg
cltd
scas
jg
push
lods
inc
sbb
inc
jbe
int
rol
sub
pop
mov
xchg
out
getsec
clc
mov
add
in
sub
aam
push
lret
andl
popa
aaa
mov
repnz
lea
lret
or
jo
mov
pop
push
das
sbb
int
cmp
push
mulb
or
inc
xchg
inc
dec
dec
pop
pop
mov
loope
mov
sbb
ja
xor
lret
jb
ret
pop
aam
mov
call
dec
jle
sub
ds
fucomi
cmc
push
push
mov
add
fildl
inc
push
xchg
inc
lock
sub
jno
add
iret
cld
inc
aaa
pop
test
or
movsb
pushf
push
pop
inc
in
loopne
jge
test
jb
jle
pop
ret
add
push
movsb
dec
xchg
add
sub
call
xchg
ds
add
cltd
push
add
iret
daa
pop
add
cs
shrl
fnstenv
bnd
or
std
pop
loope
xchg
mov
inc
adc
sbb
into
xor
roll
stc
mov
jg
cmp
xchg
fdivrl
aaa
sub
fisubrs
outsl
incl
mov
jb
mov
jge
pop
dec
xchg
adc
or
je
mov
fs
fdivrl
jae
pop
mov
sub
into
xor
adc
sbb
xchg
es
lds
rol
and
and
push
ret
pop
xor
les
mov
pop
arpl
adc
xchg
pop
xchg
adc
mov
and
xlat
or
lock
fstps
pusha
sub
mov
adc
xor
jmp
adcb
and
ret
stos
out
xchg
dec
pop
das
dec
mov
dec
dec
mov
cmp
pop
and
push
xor
loop
orl
bound
push
xchg
mov
pushf
mov
inc
daa
cmp
psubw
out
cs
inc
inc
add
pop
pop
stos
jmp
test
sbb
push
jnp
mov
outsb
cltd
sbb
dec
fs
add
leave
sbb
hlt
inc
and
data16
and
sbb
test
std
arpl
adc
push
jbe
xor
outsl
icebp
std
jns
mov
mov
cmpsl
push
cltd
jbe
ds
add
push
mov
shl
hlt
cmpsb
push
test
cmp
dec
out
das
and
inc
repz
push
cmp
sti
cmpsl
sbb
addb
mov
pop
lahf
sbb
mov
rorl
out
mov
lds
nop
iret
ja
mov
push
push
inc
or
in
sub
pop
jo
dec
xchg
mov
clc
mov
xor
xorb
mov
add
mov
fs
xchg
loopne
je
add
cwtl
or
push
xchg
xchg
adc
fldcw
sti
and
inc
mov
aam
inc
pop
scas
jbe
loope
sbb
and
adc
out
xorb
cmp
cmp
and
cmp
adc
sti
iret
fidivs
inc
pop
daa
inc
popa
pop
push
lods
popf
pop
hlt
adc
cmp
xchg
repnz
test
jmp
mov
sub
sbb
mov
pop
inc
sti
and
sbb
mov
add
adc
je
jnp
arpl
hlt
lret
es
loope
xchg
icebp
xchg
jecxz
adc
mulb
mov
lcall
xchg
mov
stos
inc
cmp
xchg
xchg
test
inc
or
xor
inc
movsb
cmpsl
inc
add
add
jne,pt
dec
jle
lret
jg
and
xchg
in
dec
lods
or
push
scas
lods
insl
arpl
jge
cmc
pop
inc
std
mov
enter
inc
sbb
es
mov
cs
sub
aam
mov
mov
fwait
xchg
shrb
push
rcl
sub
or
push
jnp
xor
mov
inc
shll
mov
ret
loop
cltd
fldt
std
subl
scas
insb
rorb
call
repnz
cmp
inc
leave
cld
push
inc
mov
shrb
test
adc
cmpsb
inc
pop
xchg
sub
mov
ds
pop
mov
xorl
outsl
push
dec
andl
xchg
jae
xchg
add
out
mov
jno
ja
jo
push
dec
jbe
imul
inc
mov
push
xchg
incl
sbb
push
xchg
subl
outsl
mov
inc
adc
push
cmp
push
cmp
xchg
fildll
syscall
je
cmpsl
popa
pop
lret
sbb
inc
cmc
test
movsb
lret
or
jns
test
xlat
xchg
daa
push
add
adc
dec
jno
test
jecxz
gs
aad
lret
and
mov
ss
add
movd
fisubl
xchg
adc
mov
ret
pop
dec
pop
das
xchg
and
add
adc
push
inc
cmp
push
aaa
inc
repnz
push
pop
mov
inc
pop
sbb
jne
adc
bnd
cmp
test
out
mov
fwait
jp
mov
pop
push
cmc
rorl
inc
sbb
jl
jbe
xor
inc
and
and
xchg
aas
sar
popf
cmpsl
sub
xchg
movsb
inc
sbb
es
lods
inc
mov
dec
dec
lds
fmuls
stos
inc
xchg
xor
test
jo
push
inc
add
inc
and
data16
arpl
fsts
sbb
ficomps
int
ret
mov
jecxz
popa
sar
out
repnz
insb
add
shll
in
repnz
mov
inc
cli
inc
sbb
dec
aam
sbb
sub
jmp
dec
and
jge
sub
inc
inc
js
xlat
xchg
push
clc
hlt
push
sbb
aam
xor
popa
cmpsl
add
jl
sahf
pop
aas
div
xchg
bound
dec
mov
dec
xchg
push
movsb
leave
adc
hlt
sbb
pop
mov
mov
insl
pop
shlb
popf
imul
inc
out
call
retw
push
xor
push
push
xorl
sub
cmp
pop
andl
movsl
gs
test
loop
pop
nop
jl
pusha
rorl
imul
int
xchg
push
insl
mov
push
test
inc
lahf
icebp
adc
cltd
cmp
push
iret
fwait
mov
push
imul
jg
push
xor
mov
adc
outsb
mov
shlb
sarl
les
mov
adc
aas
dec
dec
test
jb
fldcw
xor
mov
arpl
fidivs
cmp
sub
xchg
jmp
xchg
push
dec
dec
lret
push
push
cmp
pop
pop
pop
xchg
push
inc
lock
dec
stos
mov
dec
rcll
inc
roll
sbb
mov
fidivl
ret
rcrl
mov
add
lds
fbstp
adc
sub
jl
push
imul
mov
lods
das
sub
jnp
out
pop
cwtl
insl
les
sbb
or
test
fdivs
adc
mov
xchg
lods
dec
mov
sub
sbb
inc
lret
shrl
decl
add
es
adc
fiaddl
lea
test
jno
ffreep
pusha
pop
xchg
push
mov
add
adc
jns
sub
xchg
xchg
imul
dec
fidivrs
xor
sahf
or
out
add
stc
movsl
imul
aad
adc
cmpsl
roll
cltd
sub
test
pop
fbld
cmpsl
sub
add
inc
and
and
mov
cmpsl
jg
mov
shlb
sbb
pusha
repnz
xchg
jp
add
mov
gs
test
dec
mov
cmp
or
mov
dec
dec
mov
jno
inc
adc
idivb
rcrl
lock
mov
add
inc
xchg
xor
daa
cmp
push
fnstenv
imul
out
inc
fwait
sub
enter
jns
cltd
mov
into
es
cli
shlb
dec
popa
test
sbb
dec
lcall
mov
andb
sub
test
lods
push
xor
fstl
das
rcll
sbb
adc
push
push
in
in
sub
stc
enter
cli
loopne
push
cmp
cwtl
sub
mov
and
push
xor
in
insb
out
test
cld
stos
fs
dec
inc
push
stc
mov
jno
jne
out
in
repz
jbe
aad
stc
sbbl
jl
push
push
pop
mov
inc
out
aas
mov
jne
imul
push
add
mov
test
int3
pop
inc
es
pusha
movsb
cmp
add
aad
mov
cltd
mov
lcall
xor
shrb
movsl
jns
xor
into
call
xchg
push
out
outsl
cmpsb
lods
pop
in
cwtl
and
sub
xor
xlat
xor
fwait
jno
xor
clc
inc
xor
je
xor
inc
inc
adc
repnz
sub
add
jb
lock
lods
jmp
ja
push
inc
das
sub
outsl
iret
aaa
in
dec
mov
xchg
xor
add
out
sbb
push
sbb
lret
into
adc
and
inc
dec
pusha
jecxz
xor
xlat
sbbb
sub
lock
loop
mov
cli
adc
clc
in
clc
fcomip
inc
int3
inc
mov
xor
mov
ljmp
xor
add
pop
dec
in
xor
insb
mov
add
adc
in
pop
loope
out
push
push
nop
inc
mov
xor
testl
ljmp
inc
adc
fs
xchg
cmp
push
push
cmpb
jle
cld
sbb
ret
imul
ror
in
push
and
outsl
div
mov
mov
sub
mov
sub
addl
pop
pusha
in
popa
xchg
xchg
dec
fstps
lds
aam
adc
inc
and
jae
cmp
cli
xchg
xchg
push
or
es
inc
fsub
mov
in
cmpl
call
jne
xlat
cmc
inc
jecxz
hlt
jbe
scas
roll
leave
or
shrb
cmp
dec
xchg
les
sahf
stos
xchg
dec
cmc
movnti
pop
rorb
sub
nop
push
inc
repz
subb
movsb
push
daa
dec
mov
adc
cmp
xchg
out
jbe
bound
jo
and
mov
testb
dec
inc
push
aam
insb
jge
adc
sbb
pop
pop
mov
notb
sbb
sbb
lock
sub
stos
push
push
into
subl
jle
aaa
push
pop
adc
loope
incb
dec
inc
and
data16
pop
aas
push
jb
dec
sbb
stos
in
lret
push
cld
stos
add
and
test
push
js
shrb
push
dec
mov
inc
out
xor
sub
sub
bound
add
iret
add
push
xor
lds
nop
jne
or
or
loop
or
cmp
xor
test
xor
mov
push
mov
mov
movsl
les
jp
cmc
push
jp
imul
je
test
and
popa
mov
sbb
addr16
repz
inc
mov
fiadds
aad
sbb
aaa
inc
lock
mov
ds
inc
das
push
add
cmp
hlt
mov
loope
push
adc
sbb
push
aam
iret
and
jp
lds
pusha
mov
mov
lods
pusha
mov
xor
mov
jp
mov
mov
adc
mov
dec
hlt
iret
mov
hlt
test
xor
adcl
lcall
jno
add
in
and
scas
mov
push
icebp
inc
rcrb
fdivs
xchg
mov
inc
mov
xor
rorb
inc
inc
popa
xchg
lahf
add
sub
aam
sub
aad
xor
ss
popa
push
mov
xchg
shrl
inc
repnz
adc
and
jae
push
xor
andl
fwait
mov
mov
test
inc
and
inc
xchg
inc
jb
mov
les
aam
imul
fs
mov
inc
aad
call
dec
popf
test
inc
bound
ja
pushf
icebp
push
push
sbb
inc
jg
jp
aad
test
in
cltd
cmpsb
notl
mov
sub
cmpsl
ds
mov
mov
std
in
mov
xchg
ficoms
stos
aad
xchg
incb
jb
lock
rclb
insb
adc
and
sbb
mov
pop
and
je
mov
stc
pop
rcll
and
and
sahf
push
pop
jbe
fbstp
out
sbb
test
xchg
mov
dec
stc
sbb
test
xor
mov
scas
push
test
iret
cwtl
jno
scas
loope
push
or
push
push
icebp
adc
loop
mov
rclb
mov
lcall
jecxz
out
insb
les
scas
pushf
bound
addr16
jp
jl
mov
std
xchg
lods
inc
repnz
std
mov
inc
fwait
cs
rol
stos
mov
leave
mov
cmpsb
xchg
je
push
pop
adc
lock
cmp
pop
enter
aam
sub
inc
fdiv
mov
fldl
adc
dec
test
push
cmc
dec
aaa
jb
dec
add
dec
jne
les
aaa
ret
jbe
jle
mov
sub
in
dec
dec
hlt
xchg
stos
and
shll
ss
mov
ret
lret
movsl
and
popa
xor
lss
xor
add
pop
pop
js
in
arpl
mov
xor
add
mov
add
subl
pop
lea
cwtl
xor
imul
nop
pop
dec
notl
test
or
loop
adc
push
into
fimull
push
lods
xor
xchg
add
push
pop
mov
push
jns
and
lock
push
mov
add
dec
push
popl
dec
jmp
add
fcoms
fsubrl
in
js
scas
out
fists
pop
and
pop
in
into
xor
mov
mov
int
mov
or
lods
daa
inc
shl
movb
push
xorb
call
addr16
cmp
dec
xchg
lods
sub
xor
icebp
xchg
fs
and
jns
push
ss
inc
mov
fwait
mov
and
sbb
sbb
xchg
mov
shl
mov
jle
subl
adc
add
sub
inc
push
cltd
inc
adc
push
aam
inc
or
inc
push
stc
outsl
mov
ret
sub
out
mov
add
and
rep
push
shll
outsl
test
cmc
ds
das
call
push
inc
xchg
cmc
jo
lret
dec
nop
loope
push
push
jno
mov
xchg
mov
push
hlt
and
mov
adc
out
out
cmpsl
mov
sahf
lret
hlt
adc
lret
ss
out
movsb
pop
fwait
dec
push
je
pop
jo
push
aam
xchg
inc
jg
inc
orb
jo
lods
insl
sub
je
pushf
outsb
mov
push
imul
pop
push
in
pop
push
imul
and
call
repz
repz
in
aam
pop
sbbl
push
xchg
bound
repnz
push
stc
push
xchg
lret
mov
add
add
xchg
int
xchg
into
dec
repnz
xchg
add
inc
pop
das
fwait
int
adc
lret
or
stos
mov
out
hlt
dec
sbb
mov
into
mov
mov
xchg
xor
jae
shlb
mov
addr16
cmp
divb
and
mov
push
jge
repnz
jl
xorl
and
fldenv
shrb
mov
xor
pop
aad
dec
push
mov
jb
repz
mov
push
push
imul
and
inc
cwtl
scas
stc
pop
inc
inc
pop
xchg
inc
js
popa
test
call
jbe
pushf
sbb
in
jbe
and
push
push
adcl
daa
jbe
cwtl
icebp
clc
shlb
xlat
inc
jno
and
lret
add
fsubs
and
cmp
std
outsl
movsl
loope
mov
in
inc
push
testl
movsb
push
push
test
sbb
pop
sub
push
das
sbb
push
insb
push
sbb
pop
and
and
jo
fildll
out
fwait
add
fs
jl
out
pop
in
xor
jno
adc
test
pushl
mov
mov
add
lods
adc
cs
pop
mov
sub
lock
sub
pop
fists
push
pop
push
adc
cmp
lahf
call
push
inc
int3
push
dec
cmp
pop
popa
mov
loop
loop
push
bnd
movsl
inc
inc
imulb
sub
lcall
in
or
add
inc
sbb
repz
xchg
rol
out
mov
push
stos
shl
dec
hlt
adcb
jle
xor
jp
das
lods
sub
pop
mov
push
jle
push
mov
rcr
jne
pop
stos
dec
stos
sbb
jns
sub
aam
xor
lahf
add
jle
jo
mov
add
push
scas
mov
or
push
int
jnp
push
jns
lret
xchg
jno
xor
jae
imul
pop
pop
popa
and
inc
sar
rcrl
lcall
jae
xor
mov
mov
clc
pop
adc
pop
cld
inc
fiaddl
aaa
xchg
mov
and
and
cmp
addr16
dec
push
loopne
pop
jecxz
xchg
nop
mov
lret
ljmp
addr16
adc
or
dec
das
add
mov
std
mov
push
cs
popf
cpuid
mull
scas
and
cmp
stc
in
jne,pt
in
scas
sub
xchg
mov
pop
sbb
xor
out
cmp
push
aaa
leave
js
dec
repz
jne
clc
pop
push
mov
dec
jno
fs
and
jnp
and
xchg
inc
sub
mov
xor
adc
fs
push
add
das
stos
xor
loope
or
fnsave
das
jl
test
xlat
adc
inc
negl
dec
jmp
popf
scas
xchg
cmp
xchg
xor
js
xor
lsl
int
jg
or
dec
addr16
nop
aaa
dec
push
pop
xor
mov
add
add
fists
add
inc
cmpsb
push
jle
setns
insl
outsb
xchg
dec
mov
sbb
mov
adc
mov
push
pop
test
popf
add
mov
stos
mov
pop
cmp
fdivr
lock
dec
or
inc
xor
mov
inc
mov
jge
mov
add
roll
add
jge
das
push
pop
imul
test
dec
or
ds
jecxz
mov
or
shll
adc
mov
lods
aas
daa
mov
cmp
sbb
ljmp
cs
xor
inc
and
push
push
in
test
inc
shrl
leave
mov
vpcmpeqb
movsl
fistpl
fs
repnz
pop
cmp
iret
push
cmp
insb
sarl
faddl
divl
jb
cmpsl
arpl
mov
push
sbb
sbb
int
push
jo
or
notb
sbb
mov
mov
lcall
push
mov
fldt
push
mov
cmc
pop
inc
outsb
cmp
or
rclb
xchg
cld
imul
jae
push
ret
adc
stc
xor
inc
dec
mov
and
jmp
push
dec
dec
dec
bound
pop
sbb
mov
add
test
ss
push
inc
add
testl
push
test
jb
iret
jnp
repnz
mov
adc
negl
sub
xor
mov
loope
push
pop
xor
cmp
xchg
push
inc
stc
dec
enter
test
xchg
arpl
sbb
shrb
jecxz
mov
sti
inc
hlt
call
inc
jbe
pop
pop
mov
cmp
mov
push
out
sub
cld
aaa
das
or
daa
mov
mov
push
negb
mov
jne
int3
pop
or
sbbl
shlb
movsb
mov
mov
aas
mov
mov
adc
ret
movsb
inc
and
pmuludq
fistps
in
cmp
jp
push
mov
xchg
and
xchg
or
jmp
ljmp
mov
repnz
popa
aad
jge
jnp
lcall
mov
and
lds
add
mov
and
pop
sbb
fcoml
enter
push
pushf
add
xchg
add
ljmp
mov
les
enter
add
insb
xchg
in
adc
les
push
xchg
sub
in
movsb
sbb
xor
cmpsl
repz
inc
shrl
push
and
xor
and
dec
arpl
fcoms
sbb
push
adc
stos
mov
add
push
aaa
sub
mov
sbb
mov
stos
adc
movb
fs
sub
mov
mov
adc
sub
movsl
xchg
push
mov
cmp
push
fstl
iret
shll
test
cs
inc
adc
mov
testl
cwtl
mul
cwtl
aad
addr16
push
ret
pop
mov
adc
jns
adc
and
lds
repnz
cli
arpl
fisubl
adc
and
jb
add
inc
out
jp
idivb
in
xorl
mov
sar
push
aaa
sbb
push
and
cmp
test
fisttps
stos
xor
enter
sub
sbb
stos
pop
popa
sub
cmp
clc
cmpsl
fdivrl
fisttpl
nop
mov
push
add
mov
sub
inc
adc
sub
addr16
mov
loopne
pushl
mov
adc
xor
inc
push
jne
loop
adc
pop
fs
cld
xchg
arpl
rol
add
pop
push
fisubl
add
fdivl
popa
inc
lahf
test
xor
stos
mov
loope
adc
jb
and
xorb
dec
pop
rcl
adc
xchg
daa
xchg
clc
pop
roll
and
push
aas
lods
cwtl
sub
lock
repnz
push
movsl
call
mov
out
int3
icebp
imul
movsl
cmp
clc
pop
nop
jne
inc
mov
sbb
vandnpd
movsb
adc
aaa
imul
cmp
inc
mov
sahf
inc
xchg
jo
in
push
dec
mov
cmpl
and
cmpsb
mov
xor
movsl
cmp
cwtl
addr16
notl
jae
mov
sbb
shll
push
xchg
out
cs
inc
movsb
lcall
cmp
test
repnz
stos
add
push
xchg
mov
fsubrl
jmp
fidivl
push
jmp
ss
hlt
xchg
push
xor
rcll
ret
jle
push
or
push
inc
or
movsb
ds
test
cltd
pop
push
inc
popa
loopne
daa
xor
adc
xor
adc
or
jae
inc
push
pop
and
test
inc
int
mov
xchg
add
adc
xchg
loopne
adc
int
xchg
add
pop
rcl
push
xchg
hlt
sbb
testl
xchg
popa
or
fnstsw
test
sub
test
mov
mov
push
mov
cmp
cmpsb
inc
lahf
adc
data16
ret
inc
or
inc
xchg
inc
mov
les
add
push
andb
repz
pop
or
out
fsubrl
enter
pusha
xchg
push
mov
jno
aaa
cmp
jg
sbb
pop
pusha
inc
fld
pop
pop
push
je
aaa
call
jp
mov
subb
xlat
add
mov
addr16
cmp
push
jnp
add
mov
or
rcrb
and
xchg
push
cmpsb
jo
pop
sbb
add
sbb
inc
xchg
cmpsb
jge
and
movb
mov
pop
adcb
jo
or
movsl
je
add
sarl
ljmp
mov
pop
adc
hlt
xchg
sbb
es
inc
sbb
daa
dec
jns
loop
ret
pop
shll
or
xchg
xor
negb
jno
testl
jne
sbb
sarb
loope
lock
into
dec
shlb
sbb
cmp
lcall
pop
jne
cmpsb
sub
cs
cmp
inc
hlt
inc
mov
sub
push
push
cmp
mov
dec
jo
notl
sub
notl
das
shll
test
mov
inc
adc
adc
mov
mov
mov
adc
rcll
jp
int
shrb
push
das
push
jmp
pop
add
jge
lret
stos
or
mov
fimuls
add
mov
adc
xchg
fdivrs
fidivs
or
pop
jae
add
pop
xchg
xor
popf
jp
fdivp
lret
or
cmpsl
dec
test
xchg
or
sbb
stos
loope
xchg
int
or
fs
mov
fstpt
sbb
pop
adc
das
dec
mov
out
push
movsl
out
xor
in
or
in
pop
and
test
pop
adc
adc
push
stos
divb
jmp
mov
xor
mov
sub
xor
push
outsb
xchg
rolb
aaa
push
popf
insb
cli
es
cmpsl
xor
and
mov
fcmovnb
repnz
xchg
scas
in
inc
leave
or
daa
xchg
ficoml
loop
cmp
fwait
dec
mov
jp
push
or
inc
cmc
fs
push
stos
mov
xlat
adc
and
arpl
xchg
sahf
andl
xchg
jnp
push
jmp
jmp
movsw
scas
int
das
inc
rorl
jns
hlt
and
push
in
dec
lcall
xor
clc
xor
jns
mov
inc
mov
dec
jb
in
decl
and
sbb
cmp
jp
iret
cmpsl
push
dec
inc
cmpsl
mov
adc
or
xchg
xor
loope
jbe
shlb
ss
sub
ja
sub
push
jecxz
push
data16
and
faddl
jmp
dec
xchg
sub
es
mov
sbb
jg
or
jbe
fucom
mov
pop
and
lahf
sarb
adc
dec
lret
xchg
jge
and
pop
dec
push
xor
sub
push
popa
adc
add
sbb
es
outsb
rcrl
jbe
adc
dec
mov
fimull
test
sub
add
nop
scas
fstps
adc
dec
adc
inc
cltd
push
test
push
jo
andb
add
test
push
mov
aas
mov
push
in
mov
xor
clc
jp
inc
mov
out
repz
cwtl
das
mov
lret
or
in
or
pop
add
xlat
jecxz
add
xchg
sub
clc
push
push
aam
inc
push
sbb
sbbb
inc
xlat
and
psrlq
jb
test
imul
jg
mov
and
nop
in
xchg
jne
cmpsl
popa
mov
daa
repnz
xlat
push
and
jmp
ret
adc
es
shrb
out
pop
mov
pop
sbb
mov
pushf
dec
jbe
inc
fldenv
loop
jo
adc
cmp
loopne
dec
dec
and
out
mov
sbb
leave
mov
pop
adc
xor
dec
les
cmp
loop
test
rcrl
shll
sbb
xchg
clc
jge
ret
cmp
dec
into
adc
push
inc
jmp
jg
cmpsl
jae
push
ljmp
and
aas
push
enter
inc
or
adcl
stos
lock
dec
and
mov
pop
sub
jmp
adc
sub
test
or
stos
sbb
add
inc
shl
mov
test
mov
test
enter
and
scas
mov
dec
mov
push
cltd
cmpsl
xor
pop
mov
mov
inc
fisubs
scas
insl
int3
pop
out
int3
and
clc
addr16
sbb
and
push
push
loope
inc
dec
mov
ja
or
push
push
add
jl
and
jecxz
daa
pop
out
les
mov
push
scas
mov
jge,pt
adc
aad
jo
pushf
arpl
lret
ja
pop
xchg
dec
scas
adc
dec
mov
or
xchg
movsl
insl
inc
stos
and
fstl
insl
scas
stos
scas
rcl
ret
xor
outsb
push
sbb
mov
dec
xor
xor
mulb
out
stos
dec
outsb
inc
fxch
xchg
xchg
cli
aas
es
lcall
and
and
rcrl
aad
stc
out
cmp
add
out
ret
sbb
in
clc
dec
js
sbb
push
or
and
movsb
shl
pop
icebp
push
popa
sub
data16
fwait
out
push
adc
mov
jnp
mov
pop
and
push
jbe
leave
cmc
xchg
fisubs
xor
or
push
push
add
dec
or
inc
fwait
rol
push
test
adc
in
xchg
jae
push
les
leave
ret
leave
adc
xor
sub
fsubs
push
jns
xor
imul
icebp
pop
cmpsl
push
cmpsb
pop
cmc
xor
and
pop
mov
add
test
out
loop
mov
movsb
lea
out
clc
leave
cmp
jle
lock
and
cmp
sub
or
mov
xor
sbb
adc
jb
xchg
add
sbb
xchg
jne
test
xchg
inc
in
idiv
mov
push
loope
inc
scas
xchg
cwtl
sub
rcrb
inc
pop
mov
add
and
sub
js
mov
cmp
dec
adc
xchg
cwtl
insl
mov
movsb
mov
sarb
jae
dec
lahf
shll
add
cmp
xor
xlat
push
push
shll
sahf
mov
xchg
inc
mov
push
leave
sbb
jmp
xchg
pop
fcompl
faddl
fadds
mov
cmp
push
addr16
aaa
jae
ret
popa
iret
and
mov
inc
rorb
add
adc
inc
int3
and
sbb
jbe
ss
imul
jno
push
and
inc
mov
sbb
jge
inc
sub
je
xchg
mov
xor
inc
ret
push
mov
inc
sub
insl
dec
and
adc
mov
inc
inc
shrb
imul
and
pushf
mov
mov
push
mov
call
add
aam
add
aam
inc
xor
xor
loopne
xor
push
and
cmp
push
sbb
imul
dec
and
xor
lea
xchg
xchg
cmpsb
sub
pop
mov
mov
repz
aaa
les
pop
fneni(8087
loop
push
mov
xorb
aam
jle
mov
fwait
ja
daa
and
lods
inc
test
sub
inc
out
scas
cwtl
and
push
leave
jmp
push
enter
repz
int3
push
aas
pop
mov
jae
sub
vmread
add
pusha
mov
and
sub
repnz
cmc
push
push
push
push
add
xchg
push
sub
jno
int3
add
cmp
xchg
and
pop
inc
subb
into
in
and
add
xor
iret
and
js
orl
aas
lea
insl
ret
arpl
sarl
xor
xchg
dec
inc
int3
xlat
rorl
jo
in
sub
jno
or
push
push
lods
jle
adc
je
ret
daa
mov
repnz
fidivs
push
dec
sub
mov
js,pt
jecxz
sub
repz
rolb
add
push
push
lea
add
inc
das
xlat
mov
push
dec
fstpl
lods
fdivs
daa
stos
mov
fidivrl
cmp
jae
push
lea
sub
jbe
je
mov
popa
cltd
inc
pop
pop
out
cmp
mov
iret
in
addb
icebp
pushf
pop
xor
sbb
insb
mov
mov
lcall
xchg
lods
add
pop
inc
aad
add
mov
decl
push
stos
aam
les
xchg
mov
xor
test
mov
push
cltd
test
rcr
test
and
and
jl
loopne
lods
jne
sub
dec
fcoms
push
cmpsl
sub
sbb
inc
jns
xchg
add
mov
adc
or
inc
inc
mov
inc
daa
ss
imul
mov
repnz
rcrl
cli
in
fmulp
xchg
inc
arpl
push
pop
mov
xor
xchg
lods
cmc
or
adc
push
mov
add
es
addb
out
adc
dec
xor
ds
mov
mov
or
inc
sub
or
sub
das
or
mov
inc
cmpl
loope
push
pop
insb
mov
or
adc
jge
xchg
fdivr
sub
je
sbb
or
adc
push
sbb
inc
dec
push
add
push
es
lea
inc
dec
daa
add
call
inc
xchg
xlat
arpl
dec
movsb
dec
sti
inc
cmpsb
mov
test
dec
out
jnp
outsb
sub
jb
insl
xchg
sbb
xchg
push
inc
xor
pushf
cmpsb
inc
or
test
loopne
or
push
sbb
dec
jb
jne
xor
xor
divb
daa
push
add
add
add
addb
data16
mov
shlb
faddl
mov
push
cmp
add
mulb
lret
xor
and
or
dec
enter
mov
scas
dec
out
sbb
or
andl
xor
hlt
jno
push
pop
mov
aas
sub
and
xor
ficoms
pop
pop
imul
pop
inc
lds
roll
insb
add
rclb
pop
cli
adc
loope
cltd
sbb
adc
jge
gs
xchg
repz
or
sbb
not
add
les
test
je
inc
pop
mov
cmpsb
mov
mov
push
test
xor
adc
imul
or
jb
and
pop
push
mov
jnp
daa
adc
and
sub
fcomps
or
cmpl
mov
loop
push
and
dec
push
push
jno
jno
sbb
or
dec
xchg
repnz
ficompl
xchg
mov
lods
mov
dec
mov
dec
jecxz
dec
sub
mov
pop
cwtl
adc
xlat
int3
xchg
mov
add
lret
cmc
inc
iret
mov
push
lcall
in
xor
sub
and
stos
mov
std
mov
jmp
gs
loop
or
rorl
jle
push
sbb
testb
je
jmp
sub
bound
push
fmuls
xlat
xchg
jbe
leave
add
scas
pop
xchg
jne
cli
push
push
int3
jbe
push
jne
loopne
inc
adc
push
iret
nop
jge
je
and
out
inc
dec
js
adc
movsb
inc
pop
sarb
lret
filds
push
test
push
jle
inc
pusha
mov
repnz
je
jb
or
dec
dec
mov
popf
lret
icebp
arpl
adc
inc
xchg
ficoms
xor
fisubs
loopne
loop
xchg
shrl
push
mov
jbe
out
mov
dec
adc
stos
add
in
stc
adc
rep
pop
xchg
xchg
push
lea
pop
fdiv
xor
mov
add
aam
lods
jg
inc
mov
arpl
in
call
or
loop
enter
jae
scas
sub
pop
sbb
out
adc
ret
push
lods
loop
xchg
jle
clc
cmpsl
mov
mov
push
push
flds
xchg
nop
dec
cmp
hlt
fisubrs
inc
pop
jmp
sub
push
mov
cmc
fwait
xorb
xchg
adc
test
xor
or
push
jae
test
cmp
and
mov
data16
mov
and
xor
iret
shrl
inc
fsub
arpl
repnz
jg
jmp
or
push
xor
std
xor
cld
or
and
clc
cwtl
sbb
or
xchg
das
add
mov
test
aam
push
xchg
cli
mov
xchg
rorl
jb
or
aaa
push
or
inc
ficomps
push
cmp
pop
sbb
lds
mov
repz
movsl
mov
dec
xchg
andb
jne
adc
dec
sub
xorl
mulb
cmp
pop
and
add
int3
push
bound
ljmpw
sbb
rcrb
push
sbb
xchg
imul
ja
dec
mov
and
sbb
and
repnz
fistl
inc
inc
in
cmp
mov
and
push
les
pop
lcall
dec
cmovb
lret
outsl
push
push
push
jle
inc
sbb
clc
ss
and
or
add
divb
je
push
fwait
loop
inc
cmpsb
push
dec
sub
push
mov
inc
sbb
fdiv
stos
loope
lods
mov
inc
ds
out
adc
pop
and
pop
cmpsl
push
test
clc
mov
jl
xor
aas
lods
cltd
lods
adc
inc
xchg
jbe
fsubrl
arpl
inc
test
jae
insb
addb
push
dec
pop
jmp
mov
adc
mov
gs
shll
lcall
nop
add
movsl
divb
pop
mov
in
sub
xchg
loope
push
pop
or
dec
mov
inc
insb
js
adc
not
clc
frstor
fistps
je
jg
adc
ja
push
dec
in
lods
je,pt
or
imul
jne
pop
xchg
jb
mov
mov
dec
and
inc
enter
add
es
lea
sbb
ds
jae
movsb
mov
out
test
inc
jle
inc
adc
or
push
jle
mov
jb
sbb
stc
add
cmpsb
xchg
lea
shrb
loope
test
push
inc
and
aaa
mov
aas
mov
nop
adc
inc
stos
mov
push
jne
es
sti
xor
scas
or
inc
mov
xchg
xlat
aad
pop
mov
and
rorl
inc
bnd
jo
in
aaa
lods
add
popa
mov
inc
dec
addr16
mov
jmp
xchg
test
lock
int3
in
test
and
jle
clc
popf
popa
lret
cmp
dec
push
loopne
add
roll
out
ljmp
xor
cmp
push
sub
xchg
or
mov
pop
push
test
fldenv
scas
shrl
jnp
aam
pop
test
test
lret
ljmp
mov
or
cmpsb
mov
loop
loopne
rcrb
xor
hlt
addr16
adc
xor
adc
in
mov
test
in
cmc
test
mov
je
in
mov
mov
lods
push
adc
jne
sbb
push
jnp
mov
jbe
sub
rclb
stos
xor
daa
lods
stc
movb
mov
fsubr
add
insb
and
mov
mull
push
roll
imul
shll
mov
lea
jb
adc
adc
mov
das
mov
mov
dec
loopne
lds
lods
fstpt
inc
mov
cmpb
cmc
dec
iret
aaa
mov
dec
icebp
sub
pop
outsl
es
xchg
iret
or
pop
clts
or
mov
mov
bound
mov
sarb
xchg
xlat
push
push
icebp
sub
pop
das
mov
pop
xlat
subb
daa
pop
pop
outsb
cli
pand
push
test
outsl
loop
and
inc
jmp
pushf
cmpl
xchg
push
dec
adc
and
xorb
push
xchg
push
sbb
add
adcl
push
mov
sub
or
jns
jle
sti
adc
sub
pop
clc
ja
adcb
adc
dec
mov
out
int
or
or
sbb
test
je
cmpsb
adc
sbb
mov
sub
out
push
or
enter
lahf
scas
sbb
inc
mov
std
dec
repz
xchg
lock
test
and
xor
aam
pop
js
push
sub
jnp
orl
or
add
ja
sti
test
dec
xchg
insb
test
inc
mov
xchg
or
sub
mov
pop
ds
add
arpl
jbe
pop
jns
test
mov
dec
mov
or
push
aas
repnz
hlt
xchg
sub
push
sti
mov
jae
or
mov
out
mov
mov
push
and
addl
mov
mov
push
shl
clc
pop
test
mov
xchg
jno
and
cmp
iret
cmp
hlt
and
push
fiaddl
test
pop
pop
std
and
sbb
add
mov
ret
mov
sub
repnz
out
test
imul
adc
les
xchg
arpl
pop
pop
push
ficoml
rorb
daa
orb
sbb
adc
btr
insl
pop
jecxz
lods
into
cmpsb
mov
push
add
and
int3
push
outsb
adc
in
stos
fstpl
inc
xor
mov
aas
std
js
cli
scas
add
xlat
add
cmp
inc
xchg
cmp
ss
aas
mov
dec
xchg
jbe
jg
sub
and
idivb
cltd
pop
mov
and
adc
or
mov
or
or
inc
inc
push
or
cmc
adc
popa
addl
add
out
or
and
jbe
inc
or
mov
push
push
les
leave
mov
fs
mov
xchg
sbb
sbb
push
xchg
sbb
inc
lods
bound
test
push
mov
shrb
pop
sbb
inc
fwait
and
aam
dec
push
cmp
mov
inc
stos
mov
pop
sbb
cmp
jne
cs
aad
push
mov
xchg
leave
adc
add
pop
xor
sti
cmp
aad
cmpsb
gs
push
cmc
adcl
clc
ret
mov
inc
add
add
jmp
sbb
xor
or
sub
jmp
cmc
insl
ror
push
sbb
push
iret
lds
add
cs
test
fcmovb
stc
inc
xor
adc
xor
shll
repnz
xchg
shlb
movsb
into
lahf
sbb
stos
mov
frstor
push
or
fisubl
test
gs
outsl
inc
in
push
in
xchg
jg
dec
add
lahf
test
push
daa
dec
das
test
dec
push
daa
cmc
xchg
scas
mov
sbb
add
jl
xchg
sbb
mov
xchg
inc
pop
pop
pop
sub
xchg
lahf
or
pop
stos
fsubs
mov
cmp
fmull
xor
nop
cld
in
into
pop
cs
xor
jmp
adc
pusha
lret
and
lret
dec
lea
dec
and
cmp
dec
jne
dec
das
mov
sub
xor
daa
bound
add
push
and
pop
push
pop
pushf
leave
lods
in
mov
xchg
clc
lds
pop
pop
inc
xchg
cld
daa
xchg
dec
mov
leave
push
xchg
hlt
sbb
mov
cmpsl
push
leave
incb
aam
push
int3
std
jmp
push
sbb
push
cmp
cwtl
push
sub
ss
shl
mov
ja
shrl
dec
add
sbb
push
lahf
in
jp
mov
sbb
jp
adc
push
jle
push
and
xor
repnz
sbb
adc
inc
fcoml
push
andb
cmp
clc
and
popa
jnp
aas
sub
popa
mov
decb
mov
lock
mov
add
mov
pusha
mov
jae
enter
mov
mov
aad
push
clc
add
dec
js
jae
pop
jecxz
pop
or
mov
fisubrl
shrb
test
test
in
imul
mov
lods
dec
cli
popf
add
jbe
pop
sbb
andl
cli
test
addr16
push
jno
and
add
cld
movsb
pop
inc
jmp
xchg
xor
jne
jno
repz
mov
fwait
sti
hlt
insl
mov
call
mov
test
xchg
dec
xor
sub
out
in
mov
pusha
icebp
movl
sub
das
push
mov
add
mov
test
pop
lods
fiadds
aas
lock
xlat
jns
insl
fwait
popa
icebp
cmp
sub
mov
out
lods
sub
iret
icebp
inc
mov
or
xor
fs
imul
stos
mov
dec
ret
adc
jo
jecxz
inc
cld
adc
int
pop
pop
cmpsb
and
xorl
fs
int3
xor
add
xor
cmp
mov
mov
add
jae
popa
pop
or
mov
lock
mov
push
leave
and
into
pop
ja
cmpsb
push
cwtl
into
push
subb
pop
test
add
gs
mov
and
add
adc
mov
fildl
jne
mov
sbb
push
addb
cmpsb
cmp
add
jge
add
in
imul
div
cld
outsl
add
and
jb
idivl
pop
loop
and
in
push
adc
ja
inc
xchg
push
in
stos
mov
ret
imul
mov
adc
and
mov
and
adc
test
mov
and
je
std
int3
inc
cmp
andl
mov
aaa
imulb
lods
or
lcall
pop
clc
inc
arpl
and
lret
into
jl
and
jmp
dec
xor
xchg
fucomi
fcoml
jo
add
sarl
xchg
inc
jne
js
mov
and
xchg
mov
hlt
mov
add
sbb
in
mov
inc
stos
xchg
push
ja
sbb
icebp
push
adc
pop
add
sub
in
lea
fdivrl
mov
add
lods
mov
xlat
dec
mov
iret
movsb
shr
loop
fimuls
jmp
mov
add
jmp
lret
nop
adc
sti
push
in
sub
insb
repnz
inc
or
mov
mov
cmpsl
mov
mov
add
fdivrl
or
and
sbb
push
xchg
or
mov
dec
jnp
cs
pop
addr16
fists
jle
jbe
xchg
aaa
add
sub
mov
aad
pop
sub
outsb
push
mov
orps
push
lcall
mov
bound
enter
out
mov
mov
das
jnp
ret
test
pop
pop
je
jo
sti
cwtl
scas
inc
or
sbb
and
daa
jl
outsb
adc
cli
leave
nop
add
sbb
sbb
movsb
xchg
es
or
jnp
lods
mov
or
jno
pop
pushf
cs
imul
xchg
cld
icebp
repnz
sti
push
or
mov
leave
fcomps
loope
xorl
iret
cmpb
xchg
cmp
xchg
movsl
dec
inc
push
cmp
das
pop
imul
cmp
pop
test
jno
sbb
adc
rcll
insb
sub
xor
lods
pushf
sahf
sbb
imul
js
sub
nop
lods
aas
sub
nop
pop
loop
and
sbb
push
inc
fucom
adc
push
jmp
pushf
push
sub
or
jbe
loop
in
jl
hlt
sbb
jno
js
adcl
sbb
lock
pusha
clc
test
xor
adc
andl
xor
aam
lcall
out
mov
int
outsl
xchg
dec
mov
bound
jno
mov
in
pop
jle
xor
push
roll
inc
push
enter
shll
and
mov
outsb
xchg
shl
mov
and
inc
pop
bound
and
add
dec
call
mov
insl
and
ret
loope
test
ja
mov
sub
add
sbb
mulb
lock
push
pop
jno
xlat
loope
pop
cwtl
sub
and
les
adc
inc
jecxz
xlat
sbb
adc
notb
in
leave
pop
movsb
jb
inc
scas
adc
mov
mov
mov
sti
push
rorl
sbb
xor
push
sahf
and
test
push
xchg
aaa
sbb
mov
mov
outsb
roll
js
roll
notb
xchg
sub
pop
pop
iret
xchg
daa
cltd
out
sbb
dec
cmp
cltd
hlt
imulb
movsl
inc
mov
lock
je
inc
add
call
popl
sub
dec
int
ds
repz
sbb
push
jle
outsl
std
lret
les
lock
jbe
aam
mov
add
sbb
push
jb
stc
mov
repz
or
lods
cmpsb
jmp
mov
mov
sub
dec
sbb
add
push
aaa
and
sarl
jns
adc
out
nop
push
and
inc
jle
xor
pop
add
jne
inc
cld
xchg
fisttpl
mov
mov
clc
sahf
or
mov
push
fistpll
inc
dec
outsb
ret
mov
scas
jp
lcall
add
mov
gs
xor
add
rcr
jae
jmp
or
cmpl
adc
add
js
cmc
jl
mov
lods
inc
mov
mov
and
and
aaa
mov
fisubl
jns
dec
insb
jbe
xchg
mov
jecxz
rolb
out
xchg
dec
sub
fcompl
je
xchg
add
outsl
and
adc
fwait
adc
mov
add
pop
bswap
xor
pop
test
cmp
adc
add
mov
xor
jg
inc
lea
and
mov
aad
cld
push
pop
mov
cmp
xchg
js
loopne
pushf
mov
lahf
mov
icebp
mov
jp
inc
and
jno
clc
pop
mov
xchg
cmp
int3
je
repnz
cmp
cmp
pop
mov
shl
push
aas
dec
in
jg
shr
mov
lock
rcl
cli
arpl
cs
outsl
sbb
xor
xchg
nop
nop
adc
add
pop
cwtl
push
imul
push
fists
in
loopne
push
cltd
test
mov
or
or
mov
fs
aam
inc
jge
outsb
xchg
sbb
inc
lods
adc
and
mov
out
push
int3
xchg
stc
incb
xchg
fidivrl
pop
xor
xor
push
std
and
adc
jmp
inc
mov
inc
cmp
push
xchg
xor
jecxz
mov
jecxz
sub
ficoml
imul
pop
cmpsb
int
ljmp
inc
xorl
out
stos
add
push
in
popf
or
hlt
es
and
pushl
pop
mov
fadd
icebp
mov
xchg
fnstcw
repnz
insb
stc
movhps
jmp
int
pop
pop
cld
into
lock
inc
jle
cmp
and
xchg
jg
or
mov
addr16
cmp
test
dec
mov
mov
cs
fisubl
sbb
test
clc
inc
jl
mov
jge
loope
mov
xlat
and
out
mov
jae
in
cs
negb
insb
addl
popf
nop
popf
in
repz
lret
sbb
testl
adc
or
sbbb
mov
hlt
jle
jecxz
jg
push
les
cmpxchg
pop
mov
addb
mov
ret
ja
movsb
mov
inc
and
sbb
sbb
or
mov
jbe
stos
push
int3
imul
pop
and
lds
jge
push
les
cltd
mov
and
cmp
dec
nop
cmpl
dec
shl
jbe
pop
push
adc
add
pop
stos
adc
add
xchg
mov
mov
inc
adc
add
cmpsb
cmp
stc
ljmp
add
mov
mov
adc
jmp
sub
pop
aaa
js
and
adc
repnz
and
inc
movsl
scas
scas
fmul
push
fcomps
cmp
dec
cwtl
add
lret
out
loopne
movsb
sahf
fstpl
xchg
add
hlt
hlt
dec
pop
test
mov
xchg
push
lcall
imul
pop
jbe
pop
push
mov
pop
xchg
cmp
adc
clc
jge
mov
push
std
dec
in
cmc
and
inc
test
adcb
dec
push
sti
pop
or
call
mov
adc
shlb
cli
pop
jl
pop
and
inc
mov
or
xchg
enter
inc
stc
dec
mov
je
push
push
std
imul
add
mov
inc
fdivrl
inc
fbstp
test
add
aas
mov
rcll
mov
push
xor
test
repz
cmpsb
daa
jle
test
pop
cmp
jg
das
insl
xor
dec
movsl
test
loope
mov
ficomps
out
and
shlb
test
ja
lret
mov
and
jnp
jge
pop
aam
daa
push
pop
push
jo
xor
jne
push
push
pusha
clc
inc
push
std
iret
xor
or
push
lock
ja
cmp
inc
iret
and
aad
enter
sahf
pop
adc
adc
shll
aas
push
and
inc
popf
xchg
fcom
cmp
stos
push
sub
dec
pop
add
sbb
push
add
adc
cmpsl
pushf
dec
popa
insb
jbe
xor
out
dec
dec
adc
pop
jg
dec
mov
aam
add
mov
nop
jg
mov
mov
and
mov
fisubs
xchg
jne
mov
pop
cli
push
scas
adc
repz
fwait
mov
adc
shrb
push
mov
ljmp
enter
sbb
mov
and
xchg
inc
ds
in
and
inc
dec
sub
pushf
lock
xchg
lret
mov
stc
inc
push
add
loop
xchg
clc
arpl
add
repnz
jecxz
imul
popa
fidivrl
add
lret
or
aaa
pop
std
or
cmpsl
adc
inc
add
ss
and
pop
ret
cmp
repz
pop
loopne
enter
std
in
jle
into
mov
hlt
jmp
mov
leave
popa
in
sarb
push
and
xlat
adc
adc
cmp
ds
lahf
pop
pop
adc
jmp
add
push
pop
scas
lock
mov
mov
pop
and
ret
mov
inc
fidivs
add
jo
ret
sub
nop
xchg
push
xchg
scas
mov
fmulp
mov
orb
pusha
and
movb
mov
mov
mov
loop
lret
adc
jo
push
cmpb
movsb
clc
mov
and
push
lahf
xor
mov
movsl
fs
rorl
out
sbb
pop
xor
push
dec
or
lea
ss
cmp
xlat
cmc
nop
scas
pop
arpl
sub
jo
popa
xchg
push
cmp
cld
lahf
xor
pushf
fisttpl
stos
adc
call
ds
jmp
xchg
pop
xchg
and
xchg
adc
lock
in
insb
mov
clc
je
aam
cli
icebp
xchg
cwtl
adc
xchg
xlat
xor
xchg
out
fs
cmp
mov
pop
pop
push
adc
ja
daa
inc
dec
pop
scas
mov
sahf
mov
ret
outsl
jge
ljmp
push
jg
aam
aaa
ret
jae
mov
roll
xor
cmpsb
inc
sub
inc
arpl
inc
in
add
mov
inc
sbb
test
ret
addr16
dec
add
icebp
test
out
int3
sub
jle
xlat
ss
bound
out
movsl
sub
push
sbb
ret
jns
dec
cmp
and
imul
add
mov
shl
rol
lahf
test
or
icebp
and
fimuls
fdivrl
out
les
test
sub
sbb
and
xchg
nop
dec
and
dec
hlt
test
mov
sbb
adc
shll
and
loop
mov
jbe
dec
push
push
and
std
mov
loop
inc
mov
pop
adc
push
ljmp
mov
sarb
pop
jnp
jae
js
and
or
add
pcmpeqw
xor
adc
pop
mov
jae
add
xchg
jp
jne
xchg
cltd
or
mov
cmp
adc
in
test
in
sahf
mov
add
lcall
imul
dec
xlat
shrl
jae
mov
dec
aad
push
adc
movsl
jl
inc
cmpsb
lds
push
add
jns
jl
out
popf
test
cwtl
out
pop
push
xchg
or
stc
add
adc
lds
mov
rorl
add
mov
sbb
lock
mov
xlat
popa
mov
in
adc
push
jbe
ljmp
popa
pop
dec
xor
adc
daa
stc
nop
fdivl
xchg
pusha
lahf
and
mov
add
stos
inc
popa
test
sub
sarl
daa
out
adc
stc
mov
out
cmc
inc
cwtl
pop
push
dec
stc
mov
push
inc
and
xchg
and
xchg
inc
push
xor
inc
test
daa
jmp
insb
divl
test
mov
sbb
adc
dec
les
xchg
push
mov
inc
ret
scas
out
aaa
ljmp
fisubl
inc
outsl
rcrl
aad
cmpsl
rolb
mov
push
inc
aam
mov
fsts
adc
adcb
pop
xchg
sti
pop
adc
pusha
mov
mov
cld
xchg
and
dec
mov
pusha
or
and
inc
lods
and
jecxz
call
mov
test
add
mov
out
push
rclb
or
notb
add
ljmp
nop
notb
pusha
test
out
mov
test
stos
cwtl
and
mov
repnz
dec
iret
mov
fcomi
jge
mov
xor
mov
adc
mov
scas
int3
sub
dec
xchg
dec
repz
adc
test
mov
jne
jnp
xor
inc
jge
hlt
insb
add
push
xorb
pop
pop
adc
xor
inc
scas
inc
ljmp
mov
leave
lcall
xchg
mov
adc
jae
jo
jbe
push
jae
jns
push
mov
pusha
stc
aaa
aad
push
cs
stc
push
jle
dec
xlat
repz
rorb
bound
cmpsl
adc
stos
cmp
das
hlt
dec
mov
add
dec
inc
test
ss
js
jp
fisttpl
mov
fiadds
push
dec
rclb
sub
sub
sbbl
clc
xor
push
push
test
mov
mov
iret
cmp
pop
mov
lret
movsl
mov
cmp
lods
inc
cs
shlb
adc
decl
xor
jle
xchg
dec
lods
iret
cmp
jnp
adc
mov
adc
sbb
addr16
adc
add
and
test
ret
stos
cmp
inc
adc
dec
inc
je
xor
icebp
arpl
xor
aaa
push
push
jb
mov
pop
fadds
loope
push
sub
add
pusha
mov
ja
xchg
subl
pusha
je
inc
pop
bound
ficoml
xchg
cli
and
push
jp
dec
mov
xor
nop
in
dec
mov
inc
sub
and
lds
mov
jnp
jo
shrb
and
adc
rorl
rclb
fidivs
stos
leave
fsubrl
les
gs
aaa
aam
push
pusha
mov
or
clc
xchg
mov
lret
nop
mov
subl
movsl
dec
fstl
jno
mov
out
add
pop
fimull
and
sbb
mov
push
mov
dec
mov
test
adc
and
inc
add
fmuls
std
cmc
pop
xchg
loope
outsl
jg
mull
rcll
in
push
call
aam
cmp
das
dec
mov
sub
or
orb
sti
push
dec
in
jp
repnz
add
sub
fdivl
cmp
std
xchg
cmp
and
sub
fucomi
out
dec
xlat
aas
and
xchg
jg
mov
fnstcw
mov
out
pop
test
imul
and
fwait
dec
out
adc
iret
les
scas
jmp
lea
cmpsb
ja
push
mov
rcrl
mov
or
mov
cmp
or
les
cmc
imul
repnz
cmp
pop
js
out
jo
sahf
fldenv
sub
dec
jo
das
sarl
mov
daa
in
bnd
nop
push
push
jle
adc
dec
daa
dec
shl
inc
loop
andl
lods
xchg
and
inc
stos
inc
into
pop
lret
lret
fsubrl
jbe
xchg
xchg
xchg
hlt
push
sbb
cmp
adc
sbb
push
mov
imul
xor
pushf
jg
test
push
pop
dec
outsl
and
mov
scas
add
and
pop
stos
and
pop
mov
add
add
mov
push
js,pt
addb
stos
mov
into
rorb
or
movsl
sbbl
dec
scas
mov
cmc
cwtl
js
sarb
pop
ret
xor
push
neg
ss
insl
movsl
mov
roll
adc
aam
pop
push
lods
hlt
int3
je
repnz
adc
jbe
xchg
cmpsl
xchg
mov
fists
jbe
mov
jp
lods
ds
cs
data16
insb
or
or
iret
aaa
mov
or
and
fcompl
pop
cmpb
push
neg
ja
fs
pop
xchg
and
jge
data16
mov
add
ds
cmp
sub
incb
mov
mov
xchg
lock
repz
data16
es
and
or
adc
lret
xlat
flds
add
sbb
sub
cmpsb
inc
cmpsb
mov
loopne
push
xor
lods
adc
add
popf
jbe
cmpb
popa
lds
and
jae
mov
fstpl
testl
test
add
mov
or
cld
sbb
cmpb
loope
xorb
or
add
ja
push
jg
or
mov
push
mov
sub
data16
cs
cmp
adc
jg
jecxz
inc
jnp
mov
sti
bound
add
in
shlb
add
aad
enter
mov
add
dec
sbb
orl
and
cmp
leave
es
or
xchg
or
inc
rorl
sbb
shrb
pushf
pop
xlat
push
add
movsl
adc
ja
mov
mov
sar
addr16
sub
push
jmp
inc
out
inc
ja
lcall
enter
out
movsb
and
adc
dec
dec
or
jge
outsb
inc
inc
gs
mov
jp
es
and
ficoml
push
jns
inc
push
test
insb
clc
aaa
mov
cs
sbb
cli
fs
inc
pop
dec
mov
sbb
addb
mov
inc
incl
and
pushf
dec
cmp
negb
pop
cltd
mov
aad
xor
lds
push
pushf
adc
popf
out
movsl
or
xchg
sqrtps
jmp
xor
pop
cmp
data16
fnstsw
dec
lcall
addr16
sub
mov
cwtl
das
adc
sub
jne
push
or
jge
pop
hlt
or
popa
out
in
ficoml
xchg
sbb
or
les
lock
inc
fs
and
cmp
push
adc
xlat
btrl
pop
add
out
adc
pmaxsw
cmp
inc
xchg
fbstp
pop
dec
dec
cmp
pushf
popa
movsl
cmp
loope
push
push
das
test
sub
xor
jo
inc
cwtl
leave
pop
add
push
scas
and
xor
insb
int3
cld
daa
sub
clc
fadd
and
test
push
je
lods
loop
stos
adc
repnz
sbb
clc
jne
push
fwait
cld
inc
fdivrp
fisubs
push
popa
adc
push
pop
ljmp
adc
mov
movsb
jl
imul
sub
sbb
ljmp
mov
xor
xchg
jl
mov
xorl
test
arpl
xor
xchg
setp
and
jecxz
inc
mov
jo
jb
add
lods
mov
cmp
add
and
cmpsl
push
movsb
jecxz
repz
jle
mov
inc
shrb
xchg
movsb
insb
cmc
pop
icebp
cs
xor
in
inc
lahf
clc
ret
call
dec
popf
pop
ret
or
dec
out
push
hlt
outsb
push
fidivs
xchg
xor
adc
lock
test
in
xchg
add
lret
add
add
mov
cmp
xchg
push
shlb
jg
addl
cltd
aad
loop
arpl
fiaddl
or
xchg
mov
jb
sbb
mov
dec
xor
inc
cld
inc
mov
jge
pop
gs
shrb
dec
loop
insb
test
clts
dec
and
js
add
nop
sbbb
or
leave
cld
jae
shrl
pushf
lret
leave
xor
ret
daa
and
push
inc
jle
repz
or
loope
ds
cmp
or
movsb
add
iret
iret
lods
rorl
mov
in
jecxz
xor
jge
test
je
jecxz
jecxz
jecxz
ret
lods
dec
sub
mov
ja
inc
adc
stos
in
adc
int
dec
inc
mov
ret
cmovl
lock
in
inc
ss
icebp
push
mov
mov
fiadds
mov
hlt
and
sar
gs
gs
hlt
sub
sub
jmp
shlb
jae
or
xchg
mov
fldl
int3
daa
leave
sub
ret
and
xchg
xchg
inc
adc
call
les
inc
sar
fucomi
push
ljmp
inc
ja
or
pop
xchg
mov
icebp
pop
inc
out
mov
mov
add
bound
sub
add
push
dec
xor
ficoms
mov
test
jge
popf
push
jmp
sub
popa
jo
rcll
pop
sub
mov
push
cmpsb
mov
ret
cmp
cmpsl
in
filds
push
fdivs
jns
xchg
ss
mov
adc
and
jmp
pusha
mov
add
pop
add
leave
mov
jno
push
pop
ret
std
enter
ret
push
xor
aad
mov
mov
add
inc
es
out
rcll
mov
ja
xchg
add
mov
push
mov
inc
and
fstpt
int
cld
push
pop
fs
inc
sbb
and
push
in
aaa
es
out
sbb
xor
mov
loop
add
adcb
and
adc
addr16
das
rclb
mov
dec
rorl
or
shr
lahf
xor
jl
xchg
adc
roll
ljmp
ret
mov
adc
mov
or
popa
push
sub
ja
and
fsubr
inc
adc
add
mov
test
lcall
mov
push
shlb
jns,pt
cmp
test
sub
js
or
sub
add
mov
add
xchg
or
and
and
adc
cwtl
jno
addr16
iret
mov
push
lea
cmp
mov
sub
and
cmpsl
sub
rep
imulb
push
lods
pop
push
add
cmp
push
jg
fsubrl
mov
push
stc
pop
movsb
push
in
push
pusha
mov
stos
and
lds
cmp
pushf
addl
mov
mov
lods
scas
inc
fidivs
fistpll
mov
or
inc
and
pop
shl
inc
pusha
sbb
add
and
inc
push
push
dec
sub
loopne
cli
in
shlb
daa
add
testl
cmpxchg
cmp
sahf
inc
repnz
cli
sbb
fcoms
cmp
and
inc
out
sahf
xor
xorb
mov
cmpsl
and
lock
test
mov
lds
jo
out
leave
jo
daa
jmp
orb
pusha
pop
mov
xor
and
ds
orb
sbb
cmp
jmp
or
adc
xchg
shl
inc
xchg
je
je
xor
and
popl
sbb
mov
add
inc
lea
add
pop
adc
mov
adcl
dec
loop
sub
aad
inc
scas
aas
test
mov
mov
ror
cs
pop
xchg
inc
stos
hlt
jne
inc
mov
scas
flds
data16
adc
dec
stc
ja
inc
pop
popf
leave
and
sbb
shlb
and
sbb
cmp
frstor
ja
add
and
and
sub
fsubrl
lods
dec
push
inc
jle
shll
mov
iret
mov
dec
loop
shl
ljmp
add
mov
xor
add
fiadds
xor
mov
mov
xchg
ret
push
sub
test
mov
jecxz
aam
jle
repnz
in
xchg
dec
and
pushf
inc
movl
pop
mov
inc
pop
shll
fsub
popa
mov
pop
loop
dec
jae
bound
addr16
aad
push
mov
adc
xchg
sub
lcall
loop
add
mov
cwtl
loopne
pushf
add
dec
inc
mulb
jne
mov
mov
add
idivl
mov
xor
ss
and
sbb
push
mov
das
push
lods
and
pop
clc
push
and
js
push
mov
cmc
in
inc
rorw
sbb
incb
jo
adc
flds
adc
shr
mov
cmpsl
add
push
jecxz
fmull
lods
push
adc
movsb
mov
stc
inc
push
jl
lds
jbe
add
int3
out
add
popa
push
iret
lods
mov
mov
clc
xor
or
mov
icebp
fbld
adc
add
mov
xor
xlat
mov
test
cmp
lret
mov
mov
sbb
pop
nop
mov
jo
pop
popa
jbe
popa
and
dec
jae
mov
pop
stos
fimuls
mov
nop
mov
int3
ret
mov
and
sbb
int
test
inc
ja
psadbw
adc
dec
daa
jnp
add
jge
dec
jge
aam
sbb
mov
xchg
adc
aad
fcoms
push
dec
outsb
cli
dec
in
pop
mov
fdivrs
mov
xchg
bound
mov
sub
cmpsl
int
shll
movsl
and
dec
xor
xor
test
inc
sbb
out
nop
out
fsubs
adc
mov
xchg
cltd
fs
jne
pop
xlat
add
ss
and
pushw
pusha
sbb
push
xchg
mov
push
adc
shll
xchg
stos
es
xchg
xorb
fcmovnu
icebp
aad
mov
rcrl
rcrb
mov
rorl
xor
pop
test
sahf
pop
xchg
cwtl
gs
ret
mov
insl
loope
lds
leave
mov
cmp
sub
mov
mov
xlat
or
dec
cld
movsb
int
loopne
out
pop
jnp
outsb
jne
fmull
push
incb
aam
mov
mov
inc
lock
sbb
jge
mov
mov
sbb
and
add
ss
adc
push
push
pop
jp
pop
sub
and
daa
stc
cmpsb
test
stos
adc
mov
fdivrl
jne
push
pop
out
mov
dec
jne
mov
insl
leave
push
push
push
mov
mov
inc
pop
cwtl
icebp
jbe
inc
aaa
cmpsl
jg
lret
sbb
daa
test
push
sub
xchg
gs
in
mov
add
pop
push
or
invd
fadds
dec
add
lods
xor
cmpsb
jo
into
enter
inc
mov
push
xor
pusha
leave
cwtl
iret
clc
adc
sub
fistpl
mov
xchg
and
mov
ja
std
in
int3
push
enter
cltd
test
push
stos
ret
imull
inc
ja
add
pop
cmp
mov
sub
sbb
sub
jmp
inc
test
add
push
insb
arpl
push
enter
dec
cmpsl
fsts
int3
outsl
popa
xchg
outsb
add
std
lret
mov
xchg
jne
xchg
and
sub
imul
into
or
jbe
pop
movsb
gs
inc
inc
inc
inc
in
push
add
pop
or
pop
cmpl
sbb
push
xchg
mov
xchg
adc
add
xchg
repnz
add
daa
add
fsubl
add
rolb
jb
test
cmpsb
and
cmp
and
addl
adc
inc
sarb
adc
jle
sbb
push
xorl
inc
and
adc
adc
push
inc
xchg
pop
das
xchg
mov
adc
adc
jle
mov
nop
push
lea
xchg
adc
inc
xorl
dec
inc
adc
mov
inc
push
adc
jbe
pusha
lcall
addl
adc
add
shrb
inc
inc
jb
adc
aam
inc
push
roll
xchg
aam
xchg
push
adc
add
rcr
push
mov
mov
add
rcrb
adc
jle
cmp
dec
or
mov
inc
testl
sub
inc
inc
roll
push
or
inc
sbb
aad
jb
adc
push
xlat
movsb
add
mov
nop
push
mov
and
scas
scas
cmp
nop
ja
lock
mov
testl
pop
mov
xchg
pusha
mov
xor
inc
xor
mov
mov
push
dec
cmp
ret
cs
movsl
gs
and
hlt
add
je
sub
dec
pop
dec
sub
fdivrl
pop
adc
jne
pop
mov
roll
jle
movsb
in
nop
and
dec
pop
adc
iret
repz
std
sbb
jo
add
sti
repnz
jns
jp
and
int
pusha
inc
dec
sti
movb
iret
add
jg
fs
sub
sbb
test
inc
sub
data16
sbb
clc
add
imulb
punpcklbw
mov
clc
sub
sbb
inc
repz
js
xor
incb
dec
dec
subb
adc
mov
aam
stc
scas
mov
arpl
aas
add
insb
xor
cmc
inc
sbb
add
iret
mov
popa
mov
test
mov
pop
jb
jl
xchg
sub
out
data16
mov
xchg
inc
jle
xchg
mov
repnz
sti
sub
out
sbb
orl
insb
pop
push
imul
fwait
shl
sub
aam
and
stc
stos
std
and
mov
shrl
out
pop
add
add
std
dec
and
xchg
out
in
inc
mov
xchg
push
fisttpl
scas
push
dec
jp
sbb
and
cmc
inc
inc
rsqrtps
jbe
sub
lods
iret
lds
ljmp
sarl
push
cmc
lea
out
dec
push
xor
push
lea
pop
ljmp
les
loop
sbb
xchg
or
ficoml
jne
xchg
in
push
aas
and
xor
rcll
pop
push
or
divb
js
mov
in
out
pop
jo
xchg
push
sbb
in
arpl
aas
ret
mov
push
shl
jns
stos
cmp
add
cmp
inc
mov
jae
xchg
ds
das
push
daa
loope
push
int3
test
test
sbb
and
push
xor
dec
das
in
je
jmp
sbb
sbb
cmpsb
push
pop
adc
in
lcall
xor
and
cmpsl
push
push
clc
dec
xchg
adc
push
pop
sbb
shlb
add
stos
pop
push
in
andb
cli
xchg
mov
ret
pop
mov
push
ja
pop
in
and
adc
jp
test
and
or
push
ljmp
nop
pop
push
and
ret
adc
mov
jno
inc
or
test
cmc
clc
jnp
sub
dec
adc
mulb
cmpsb
out
test
icebp
lds
shll
sahf
xchg
enter
aam
xor
mull
and
mov
and
sub
into
fbstp
cmpsl
inc
or
mov
lret
inc
dec
inc
sbb
mov
test
hlt
dec
sbb
inc
xlat
push
and
stos
lea
and
out
ret
push
push
lcall
xchg
push
out
and
cmpsb
inc
jl
mov
jbe
sub
inc
inc
addb
scas
clc
mov
jge
int3
inc
stos
test
aad
fistps
pop
call
repz
aam
in
test
pushf
push
push
test
jle
outsb
add
insb
out
jb
or
push
sbb
push
jae
pop
test
pop
xorb
fimuls
xchg
xor
pop
add
push
lods
sbb
and
dec
daa
fs
je
pop
ret
adcl
push
js
std
arpl
adc
or
adc
sahf
xlat
adcl
arpl
imul
stc
and
aad
xor
leave
xor
ja
jg
jg
add
das
add
push
aaa
xchg
mov
xlat
xor
inc
incb
push
shlb
je
mov
push
jne
sbb
je
sub
pop
jge
push
or
notb
fisttps
adc
xchg
push
push
push
fidivl
dec
imul
ret
push
cli
mov
jp
sub
inc
scas
int
ljmp
adc
jmp
insb
mov
pop
mov
test
arpl
and
mov
and
das
xchg
rorb
in
mov
fwait
sbb
push
rcll
cmpb
adc
mov
ret
hlt
push
test
push
sahf
push
dec
push
arpl
xchg
lock
push
sarb
dec
je
in
mov
outsl
insb
ljmp
mov
cmp
seto
xor
cmp
inc
ds
mov
lods
add
mov
cmpsb
mov
je,pt
cwtl
str
mov
sub
lock
inc
imul
jno
add
dec
mov
dec
aaa
shlb
inc
sub
es
subb
xchg
ds
inc
sub
inc
mov
bswap
sbb
ds
xchg
sti
pop
push
cmpsb
cltd
and
or
outsb
sahf
ss
pusha
jg
fidivrl
mov
push
cmp
mov
mov
dec
mov
arpl
dec
test
fcompl
and
adc
repnz
ret
jbe
xacquire
popf
xchg
inc
ljmp
cmpsl
or
mov
frstor
aam
add
loopne
adc
in
inc
pop
aam
insb
inc
movsb
cmp
es
sti
jnp
sub
pop
imul
push
pop
add
shlb
dec
mov
sbb
fwait
dec
bnd
dec
fwait
pop
add
dec
cmp
push
sub
jle
inc
dec
dec
xchg
dec
push
or
jne
cmp
push
mov
dec
or
daa
push
pusha
jnp
xchg
nop
dec
dec
xchg
lock
cli
rcl
adc
push
mov
sbb
into
xchg
cltd
push
cmp
inc
add
dec
push
int3
testb
ficompl
js
push
sbb
rcrb
dec
je
inc
mov
jno
call
sub
push
gs
fnstcw
and
mov
cmpsl
cld
and
stos
xor
push
dec
sarb
cs
sarb
das
xchg
xchg
loop
mov
movsl
sub
aaa
pop
jae
cltd
into
xorl
xchg
cmpsl
test
fbld
das
adc
push
pop
mov
ljmp
cmpsl
outsl
push
cmpsl
imul
mov
add
pop
repnz
dec
add
cmp
dec
ficomps
sahf
push
lahf
mov
pop
push
push
sub
in
adc
int3
cmpsb
in
add
in
pop
test
xlat
add
test
std
mov
push
jo
xchg
inc
dec
mov
pop
sub
ljmp
mov
push
into
adc
pop
add
pop
nop
sub
adc
pusha
dec
mov
testl
jmp
cltd
push
push
test
shl
lret
out
push
pop
add
adc
pop
outsl
xchg
inc
add
cmc
icebp
sti
add
cmp
pusha
pop
fs
sbb
fbstp
std
push
in
mov
lock
aam
mov
push
inc
hlt
pop
and
call
push
cmp
stc
and
loop
sbb
test
xchg
call
fdivrs
cmp
jl
scas
mov
je
lret
mov
out
inc
pop
mov
and
mov
test
popa
xor
jbe
jle
cwtl
test
movsb
lds
pop
fcoml
das
sti
bnd
jo
sub
mov
nop
mov
aam
ret
mov
cmp
push
nop
cmc
shll
hlt
push
or
cmp
js
rol
push
pop
aad
cmpsb
data16
lcall
inc
cmp
in
mov
push
cmpsb
sbb
add
sbb
dec
rol
inc
adc
test
adc
clc
into
pop
adc
divb
xchg
add
push
das
xchg
and
xchg
and
mov
push
jbe
stos
test
jb
sbb
outsl
or
imul
out
pop
mov
scas
ret
mov
loope
fstpt
push
sub
push
gs
iret
adc
aaa
xchg
inc
xchg
jecxz
cmpsl
inc
js
fwait
int3
ret
pop
fsts
jno
and
xchg
fs
jle
add
mov
mov
xorb
stos
sub
addr16
pop
insb
xchg
pop
dec
push
mov
pop
jns
push
push
cmp
dec
call
xor
out
cmp
loopne
xchg
pop
push
pop
pop
sub
or
out
xor
je
jg
clc
rol
mov
push
push
and
ret
das
ret
or
pop
xchg
xor
mov
add
pop
jns
push
cmp
fcomps
test
js
and
cwtl
add
cli
leave
pop
mov
mov
ficomps
xorb
add
mov
xchg
sbb
jp
mov
les
sub
stos
xchg
fimull
enter
mov
jne
jmp
cmpsb
rorb
adc
dec
js
inc
out
xchg
sbb
jp
sbb
xchg
sarl
pminub
scas
nop
dec
shlb
cmp
and
dec
daa
int3
std
pop
jae
rcrb
xorb
xor
int
and
push
arpl
jecxz
lods
jge
insl
mov
mov
imul
or
fsubl
out
dec
cmp
sbb
push
shlb
test
sub
sbb
repnz
fimull
roll
mov
ret
dec
push
iret
mov
dec
or
cmc
xor
fcomps
aas
ret
pop
insl
sbb
add
push
xorb
ror
lcall
into
cmp
dec
les
cmp
sbb
pop
ss
or
inc
xchg
and
mov
fcoms
cmp
test
pop
add
ljmp
dec
or
ja
inc
ror
xchg
push
data16
andl
jmp
mov
insb
mov
ret
cmp
inc
fs
xchg
adc
int
or
mov
xchg
jo
cmp
pop
stos
mov
xor
inc
xchg
jg
gs
adc
mov
rclb
aam
mov
mov
ja
push
hlt
mov
nop
sbb
not
cmp
in
xchg
mov
fimull
das
nop
xchg
dec
sub
aam
xor
fucom
mov
outsb
push
lret
iret
add
nop
inc
sbb
cltd
cld
shll
cmovae
ret
lret
dec
int3
jns
mov
mov
in
mov
pop
or
gs
sbb
daa
ficoms
pop
dec
arpl
mov
loope
cmpsl
jl
lret
dec
dec
and
mov
inc
ficompl
sahf
mov
mov
ds
es
xchg
int
cmp
mov
fs
xchg
mov
jb
pop
jmp
add
ss
shll
adc
mov
dec
adc
sub
call
xor
jmp
and
mov
xchg
sub
ljmp
xor
divb
mov
fdivrs
xor
adc
dec
mov
incb
fsubl
push
jle
test
outsb
mov
push
pusha
sub
and
sbb
and
pop
cmp
inc
jo
ret
jbe
ffree
inc
test
sub
mov
sbb
xor
add
xor
jmp
sub
je
cmc
dec
dec
xlat
cmp
imul
pushf
into
dec
sub
sbb
jle
cltd
push
dec
sub
sbb
add
lret
lret
push
push
fisttpl
movsb
ja
movl
pop
mov
xor
hlt
stos
dec
xor
mov
cmpb
cmc
pop
jmp
and
adc
cmpsl
data16
sbb
jmp
fsubs
mov
subb
adc
xchg
adc
rclb
adc
inc
insl
mov
fucomip
js
sbb
pop
lahf
push
in
and
push
push
and
inc
out
sub
fmull
lock
xchg
ja
inc
mov
inc
xchg
stos
xchg
adc
add
ret
das
push
cltd
daa
les
andl
outsb
and
sarb
cwtl
adc
ret
cwtl
adc
les
mov
adc
push
xor
xlat
pushf
xchg
pop
dec
cwtl
pop
dec
jne
xchg
adc
ja
or
jo
lahf
test
test
mov
mov
lods
xchg
popl
sahf
adc
nop
repz
mov
repnz
inc
stos
pop
adc
adc
pop
ret
jnp
mov
fs
push
fs
jb
adc
add
jno
leave
jae
push
in
daa
push
pop
cmpsl
or
popl
adc
in
addl
in
jbe
jp
inc
cli
addr16
shrl
and
xchg
imul
or
fldl
mov
mov
cmpsl
push
enter
clc
add
xchg
js
lea
sub
int
out
pop
mov
movsb
scas
push
mov
ja
adc
data16
sub
inc
es
and
shll
jl
rorb
out
mov
ret
das
xor
shr
cwtl
cwtl
adc
bound
dec
repnz
cltd
jno
jge
in
icebp
sbb
xchg
jno
cs
mov
jp
xchg
nop
addr16
aam
xchg
ret
fistl
xor
sbb
mov
dec
or
jge
repz
and
stos
mov
push
mov
insl
je
lcall
repnz
addb
or
rorb
mov
dec
sbb
aad
xchg
mov
or
cmp
mov
push
pop
pop
neg
fldl
ljmp
dec
xchg
mov
jno
into
in
push
pop
fdivrs
cmp
insb
lahf
or
fcmove
mov
or
call
and
je
pop
out
adc
mov
jp
mov
and
push
pop
pop
or
inc
sbb
sti
cmc
push
inc
icebp
mov
mov
and
mov
mov
out
cmp
mov
sahf
dec
xchg
push
pop
out
daa
sub
inc
sbb
pop
popa
mov
lds
mov
pop
frstor
data16
cmp
push
add
shlb
adc
add
push
adc
subb
and
pushf
repnz
out
pop
push
imul
sub
cmp
pop
adc
test
pop
sub
sbb
jno
mov
adc
ret
cld
adc
sub
cltd
cmc
adc
pop
addl
pop
jg
das
xor
dec
pusha
imul
pop
nop
popa
cli
xchg
stc
xor
sub
and
jp
call
fwait
jae
mov
repnz
shll
lret
lahf
ljmp
jecxz
add
aam
push
inc
dec
enter
mov
mov
aad
lock
or
mov
loop
adc
test
dec
shlb
mov
mov
bound
adc
addr16
je
xchg
hlt
xchg
fisubrs
sbb
mov
sub
add
fistps
movsl
xchg
or
dec
sti
scas
dec
xchg
xchg
xor
sbb
int
push
sbb
int3
int
adc
mov
or
mov
loop
lods
add
int3
and
mov
lock
dec
pusha
ret
or
sarl
mov
hlt
fwait
inc
add
into
repz
test
mov
adc
cmc
and
pop
rcrl
sbb
movsl
loop
xlat
pop
dec
dec
cld
es
and
cmpsl
dec
xchg
adc
push
dec
idivl
add
cmpsl
scas
repz
sub
pop
ret
cmp
push
or
mov
add
mov
les
pop
mov
outsb
sbb
inc
sub
xchg
iret
outsl
loop
push
jg
js
adc
aad
dec
mulb
fsubrl
aaa
adc
mov
inc
xchg
lods
addl
inc
in
mov
dec
sbb
sbb
outsb
push
and
inc
das
jge
daa
outsb
dec
arpl
sub
jg
mov
adc
add
xchg
test
adc
daa
test
push
add
aam
int3
pop
push
sarb
rcll
add
and
push
and
je
mov
inc
push
and
mov
cwtl
push
xchg
mov
aad
jno
xor
add
mov
hlt
insl
push
pop
pop
dec
les
xor
xor
cmc
cmpsl
cmpsl
ret
pop
add
cmp
push
sbbl
mov
arpl
or
aam
inc
dec
lahf
inc
jbe
pop
inc
or
cmp
paddq
adc
mov
jb
sub
in
xor
movsb
js
movsl
and
push
mov
jle
push
repz
icebp
and
push
test
and
lods
mov
and
pop
fidivrl
pop
je
div
xor
imul
mov
pop
test
bnd
repnz
push
sub
and
fwait
in
add
je
mov
cltd
mov
pop
js
mov
add
mov
mov
icebp
mov
push
dec
nop
sbb
push
add
push
and
dec
push
ss
push
cmp
outsl
repnz
mov
mov
ss
add
push
test
dec
push
mov
mov
mov
dec
push
or
push
dec
cmp
lock
mov
divl
pop
xchg
inc
and
xchg
mov
loopne
inc
adc
xor
add
int
xchg
xor
fst
sub
push
jp
sahf
subl
lea
jbe
pushf
xor
imull
lahf
sub
inc
add
dec
pushf
fsubrl
sub
aad
sbb
mov
add
lods
aad
jmp
adc
cmp
lahf
lock
and
cli
push
repnz
mov
jmp
shll
jae
add
cmp
add
xchg
mov
stos
xor
loope
adc
gs
mov
xor
popf
xchg
jmp
ljmp
xchg
sahf
bound
cmpsl
inc
dec
mov
outsl
sub
stos
lods
mov
inc
nop
mov
clc
pop
sbb
adc
je
sbb
push
pop
adc
cmc
mov
cmc
js
nop
stos
xchg
sbb
xchg
sub
dec
push
push
mov
and
or
in
cmp
or
and
inc
mov
mov
sub
sub
xchg
push
mov
adc
and
jns
xor
loopne
and
inc
mov
fiadds
push
sarl
sti
mov
dec
add
sub
adcl
adc
sbb
in
and
call
dec
and
rcrl
addr16
sub
cli
testl
aad
jns
test
push
fcoms
xchg
inc
scas
sbb
and
mov
jne
mov
or
je
lods
mov
push
mov
xor
sub
mov
int
sub
mov
sbb
sbb
add
jp
mov
das
adcl
ret
push
pop
push
ret
mov
lea
stc
jne
dec
jo
iret
xor
adc
ljmp
cmp
inc
push
adc
pop
xor
push
add
shlb
mov
and
insb
adc
mov
jle
push
pop
lods
imull
test
je
sub
popf
in
in
or
je
popl
lods
mov
arpl
sahf
int
pop
sub
out
adc
shl
imul
in
add
push
and
dec
movsl
mov
inc
jg
lock
sbb
aam
rorb
cwtl
or
mov
xor
outsb
xor
push
and
dec
push
inc
dec
lret
xor
lods
cld
sbb
in
outsb
push
iret
pop
and
mov
bound
mov
pop
xchg
xor
or
jns
imul
add
mov
aam
cs
push
jecxz
fldcw
sbb
jnp
add
adc
mov
xorl
jae
loopne
test
pop
leave
sahf
pusha
hlt
les
cmpl
pop
fwait
js
jbe
sub
stc
outsl
lcall
jb
aaa
xor
push
enter
repz
cmpsl
xor
cli
inc
sub
rcrl
ds
cmp
xchg
int
add
cmp
gs
sbb
inc
iret
pop
cmpsl
je
jnp
icebp
xchg
jbe
cmp
inc
xor
adc
arpl
int3
push
mov
scas
loop
sahf
mov
sub
sub
orb
sbb
pop
or
push
sar
inc
icebp
sbb
stc
jne
mov
lret
lret
push
hlt
inc
mov
mov
pusha
adc
add
cmpsl
arpl
sahf
cmp
mov
mov
and
xchg
mov
cmpsl
aas
push
insb
jno
scas
xor
faddl
dec
push
push
pop
icebp
movsl
push
subb
adc
scas
in
pop
cwtl
inc
ss
fnsave
jl
mov
pandn
inc
and
jne
mov
inc
jb
and
mov
das
sahf
mov
adc
jecxz
inc
lods
push
xlat
sbbb
xorl
and
pop
popf
ljmp
sub
add
inc
in
push
pop
inc
push
stos
add
mov
dec
mov
jno
dec
pop
sub
and
mov
mov
ss
sbb
insl
or
movsb
sub
and
push
ljmp
arpl
xchg
or
mull
sub
adc
js
inc
insl
jne
add
cmpsl
xchg
dec
sub
jmp
scas
inc
mov
add
mov
into
add
shll
add
mov
mov
mov
lock
mov
das
or
scas
addr16
pop
dec
fwait
mov
es
std
jle
push
or
push
xchg
jo
and
loop
es
ds
mov
push
adc
xchg
je
and
mov
adc
inc
insb
mov
es
sbb
xor
fs
inc
inc
lcall
cmpsb
adc
loope
pop
fwait
cwtl
out
shrb
rclb
daa
test
lods
repz
pop
push
xorb
or
mov
mov
aam
and
in
inc
xchg
jo
xchg
pop
movsl
testl
sub
shlb
mov
or
fwait
cld
cmp
cmp
push
mov
out
jne
pop
add
jge
dec
imul
or
or
cmc
xchg
push
push
in
dec
and
inc
dec
aaa
call
divb
nop
outsb
pop
ret
nop
jne
jno
in
sub
testb
pop
ss
stos
or
pusha
out
xchg
sub
add
add
adc
sbb
push
loopne
mov
adc
sub
cmpsb
test
xchg
or
sbb
and
fcoml
fiadds
sbb
push
mov
jl
xchg
ljmp
negb
scas
adc
leave
cmpsl
fwait
stc
adc
je
leave
and
mov
push
and
xor
jecxz
mov
pop
cltd
inc
insb
sub
mov
das
dec
lcall
in
enter
rcl
sbb
inc
pop
mov
xor
cmc
inc
movsb
movsb
bound
out
idiv
push
sbb
mov
sti
jecxz
sub
test
mov
pop
xor
in
jg
jns
pop
cld
je
in
test
hlt
sub
pusha
sahf
push
adcb
and
adc
addr16
testl
ret
push
sahf
xchg
jne
movsb
iret
addb
xor
roll
sbb
mov
js
popa
xchg
test
repz
xchg
dec
push
adc
add
dec
in
jecxz
les
stc
xlat
dec
sub
add
push
fdivl
and
daa
test
or
pop
leave
repz
loop
xor
add
dec
sub
pop
cltd
ljmp
xchg
or
add
xlat
xor
imul
and
pop
mov
in
dec
imul
addr16
in
dec
repnz
push
push
jle
fcoms
fimuls
and
cmpsl
mov
mov
sbb
xchg
scas
jecxz
xchg
test
pop
lds
and
lahf
lock
sarl
and
inc
and
or
hlt
sub
adc
add
shrl
mov
movsb
adc
shrl
cmp
icebp
je
imul
and
and
clc
icebp
pop
sub
fs
dec
adc
mov
mov
push
ss
xor
out
mov
hlt
enter
cmp
mov
iret
mov
cmp
mov
rcr
dec
pusha
xor
add
lcall
xchg
add
xchg
data16
xchg
dec
xchg
es
pop
sbb
shl
sub
adc
add
cmpsb
shl
rolb
or
mov
and
shl
daa
cmpl
clc
or
add
iret
and
xchg
fisttps
leave
adcl
xor
xlat
dec
and
inc
das
ja
in
cwtl
shlb
cld
sbb
mov
and
adc
mov
mov
pop
dec
addr16
cmp
cltd
fidivl
ljmp
and
add
xchg
inc
sbb
scas
test
lods
lods
sub
xchg
xorl
loop
mov
sti
pusha
add
or
mov
hlt
sbb
shrb
xlat
movsl
push
imul
aam
fidivs
xor
mov
mov
pop
aas
pusha
fistl
pop
movsb
and
out
dec
js
push
shrb
inc
mov
inc
lock
jae
js
popa
outsb
adc
stos
test
dec
vmread
inc
or
sub
cli
dec
xor
enter
aas
adc
adc
flds
adc
aad
insb
out
add
daa
icebp
xchg
cmc
push
xor
or
ss
xor
and
inc
fidivrs
divb
mov
sahf
xchg
push
mov
popf
sbbb
shll
aas
stc
pop
mov
das
jl
sbb
push
push
push
in
cmp
orl
cmc
add
out
sbb
mov
rorb
sbb
jl
inc
and
jge
fsubl
dec
xchg
lock
xor
adc
arpl
iret
shlb
jne
gs
sbb
mov
adc
lahf
aas
sub
sbb
cmp
je
sahf
lret
leave
outsl
fcompl
enter
js
ret
mov
int3
scas
mov
mov
arpl
loopne
iret
xor
adc
adc
lods
jns
sub
iret
jae
push
sub
push
fistpll
and
xor
fstpt
popa
je
dec
push
add
insl
xlat
divb
mov
loop
fsub
jb
push
fisubl
popf
jl
cwtl
cmp
mov
lods
and
add
xchg
rorl
xchg
adc
or
sub
inc
outsb
sarl
repz
ja
iret
aad
sbb
push
sub
mov
ret
hlt
lds
in
insl
ljmp
fcompl
pop
je
getsec
cmc
cli
xchg
imul
push
lcall
int
push
and
imulb
jb
add
cld
sub
push
sbb
jge
mov
push
inc
aaa
je
sbb
je
jae
std
into
mov
dec
and
add
xchg
test
leave
jno
out
dec
scas
mov
sbbb
test
insb
adc
mov
cmpsl
pop
in
or
cltd
inc
mov
aas
lods
fucomip
mov
sahf
cmpsb
mov
and
fldcw
and
and
sub
shl
daa
jmp
sbb
enter
nop
push
ret
xor
pop
lret
push
nop
rcl
push
js
rep
dec
mov
push
xchg
stc
and
shlb
testb
mov
scas
mov
cmp
dec
stos
pop
jo
in
lds
pushf
iret
or
mov
fisttps
gs
lock
arpl
pusha
sbb
inc
inc
xchg
adc
imul
push
push
mov
cmp
daa
or
fisubs
lds
xchg
dec
stos
cs
fs
sbb
and
out
hlt
test
ret
scas
fwait
loop
inc
popa
enter
cltd
adc
movsb
mov
mov
mov
push
mov
aam
int
adc
xchg
test
in
mov
jb
mov
pop
aas
sub
ret
xor
hlt
jns
dec
fisttps
mov
fbld
push
cmpsb
inc
sbb
in
dec
mov
cmp
push
add
or
xchg
sbb
push
fwait
aaa
adc
mov
push
pop
and
pop
or
callw
mov
das
imul
fnstcw
leave
adc
aad
outsl
mov
rcr
cmpsb
inc
jmp
fsubl
mov
inc
push
test
imul
pop
xor
pop
jnp
push
xchg
data16
inc
push
push
shrb
push
testb
pop
adc
divl
fldl
push
cmpsb
sbb
push
sub
ret
cmc
and
testl
mov
es
imul
adc
jecxz
mov
cmp
dec
mov
dec
ret
scas
jo
in
xchg
fdivr
adc
shll
scas
xchg
loop
xor
loop
jae
insb
mov
sub
in
mov
jno
jbe
das
pop
jnp
pop
arpl
jmp
dec
mov
jae
lcall
out
push
jmp
rcrl
loopne
xor
adc
mov
sbb
or
xchg
inc
push
and
jne
adc
je
push
enter
inc
mov
repnz
jb
xchg
and
ljmp
lret
addb
inc
enter
aas
pop
jmp
xlat
lock
or
and
ds
mov
out
stos
cmp
and
cli
and
mov
inc
lds
push
out
push
stos
outsl
push
repnz
jae
mov
xor
mov
sbb
mov
fwait
jp
xor
and
enter
mov
lods
and
dec
int
pop
aad
out
bound
sub
jb
hlt
jne
jae
sahf
mov
lcall
pop
mov
or
fsubp
xlat
xchg
test
push
imul
out
mov
xchg
scas
or
mov
mov
adc
mov
inc
icebp
inc
ljmp
xor
movsl
adc
ja
dec
jl
xchg
jns
jae
push
dec
adc
cmp
cli
leave
stos
fs
vmwrite
pop
repz
aad
push
sbb
into
icebp
shl
lock
imul
jp
sub
rcrl
ds
test
mov
pop
dec
cltd
sbb
cmp
and
pusha
out
mov
sbbb
push
mov
pop
test
dec
stos
iret
inc
pop
out
or
clc
hlt
inc
jle
cmp
call
xlat
adc
and
xchg
int3
jns
xor
xor
out
lds
pop
std
test
push
jae
leave
imul
adc
and
outsl
fs
and
jnp
dec
pop
daa
jp
into
xchg
push
das
mov
add
add
movsl
jp
xor
notb
je
push
mov
mov
inc
push
adc
or
call
ficoms
dec
inc
test
mov
movsl
mov
xorb
sbb
loop
dec
call
add
and
xchg
adc
fidivrs
jne
aam
jbe
jbe
push
sbb
fldt
call
mov
mov
add
pop
inc
imul
stos
mov
pop
test
cmp
adc
push
dec
popa
push
or
or
call
ret
pop
or
mov
xor
dec
lahf
out
dec
mov
xor
in
inc
aaa
fwait
push
aad
aam
hlt
mov
scas
jo
add
leave
push
or
inc
pop
pop
mov
lea
push
xor
scas
xlat
shll
mov
fdivr
jmp
push
movsb
mov
in
hlt
push
xor
sbb
stos
and
pop
orl
pop
cmpsb
lock
and
cmc
xchg
pop
xor
inc
rorl
add
jle
lock
sub
pop
ja
test
cmp
sbb
sti
test
inc
mov
xchg
mov
push
sub
cltd
mov
out
movsl
jae
lahf
hlt
xor
popa
push
dec
add
jp
ds
in
movsb
testl
fstl
lods
icebp
mov
push
pop
inc
push
xchg
loopne
add
aam
les
cmp
dec
pop
push
cli
mov
mov
sbb
out
repnz
lds
cmp
xchg
jno
gs
push
and
inc
sub
and
xor
fstps
jge
scas
mov
mov
jg
shl
mov
mov
sbb
roll
sbbl
shrb
add
inc
mov
ror
stc
xchg
jae
cmp
repz
popa
xchg
mov
daa
jbe
ds
jg
push
lock
lds
movsb
rcl
sub
out
mov
add
subb
outsb
mov
push
xlat
in
dec
js
adc
xchg
arpl
lods
and
xchg
jmp
cwtl
arpl
insb
xchg
pop
pop
cmp
dec
adc
mov
aaa
xchg
rorl
xor
outsl
cmp
mov
testl
mov
test
ret
and
lods
sbb
lock
jecxz
mov
and
cmp
or
std
das
lds
jge
cltd
mov
inc
xor
jp
cmp
mov
lcall
imul
add
push
jp
mov
dec
dec
and
stc
out
pop
or
pop
xor
std
punpckhbw
daa
dec
or
add
dec
jecxz
lcall
adc
push
incb
add
pop
sti
pop
imul
icebp
je
mov
insb
iret
rorl
jno
dec
aad
or
or
clc
jns
jge
loope
lock
sbb
and
fmul
out
daa
or
repnz
sbb
adc
cmc
pop
dec
inc
or
inc
xor
xchg
rcl
dec
mov
je
cmpsb
inc
lods
mov
or
orl
mull
fcomip
out
cmpb
add
pop
pop
out
loope
inc
inc
js
xchg
adc
mov
mov
mov
jb
inc
nop
inc
jb
sub
mov
xchg
addr16
xchg
push
inc
add
adc
sbb
scas
lcall
cs
add
mov
mov
rcl
push
mov
xchg
dec
jmp
fwait
xchg
es
sub
cmp
test
fsubs
cmpsl
aaa
outsb
mov
popa
xlat
xchg
cli
loope
insb
mov
xchg
loop
xchg
mov
mov
scas
daa
and
pop
nop
out
nop
movsb
mov
cmp
fdivl
frstor
mov
mov
jl
sub
xor
dec
nop
insb
outsl
jg
aam
xor
sub
push
je
cld
aaa
das
cmpl
bswap
mov
sub
mov
aaa
xchg
repz
push
push
dec
aad
imul
jle
jl
dec
lea
pusha
jg
imul
mov
cld
or
cmpsl
and
and
and
jae
les
push
add
cmpsl
loop
mov
dec
rcl
mulb
and
and
mov
std
sbb
jmp
cmp
push
jnp
sub
pop
cltd
inc
inc
jae
jne
mov
mov
add
call
mov
les
ja
xchg
jmp
sbb
ret
mov
outsb
sbb
dec
fists
jmp
std
pop
add
in
call
push
test
aad
in
push
pop
aam
clc
push
mov
dec
adc
movsb
jns
out
pop
or
and
aad
aaa
scas
mov
fisubs
inc
pop
rorl
hlt
lds
or
xchg
pop
cmp
cltd
inc
adcb
cmp
dec
and
pop
js
adc
or
push
sbb
xchg
dec
rolb
mov
xchg
inc
push
das
ret
mov
pop
jge
xchg
addr16
js
push
add
ret
sub
fadds
or
add
xor
movsb
ret
cmpsb
sub
hlt
shlb
and
push
xchg
push
leave
sub
in
cmp
push
movd
mov
sti
in
cmp
int3
inc
in
pop
jecxz
repz
popa
jmp
std
xchg
adc
mov
loope
adc
and
cmp
mov
mov
pop
je,pn
loope
pop
mov
pop
mov
cmp
mov
rcr
lret
xchg
ret
call
push
push
das
fwait
cmp
add
push
cmpsl
mov
shlb
or
inc
sbb
inc
bound
jl
mov
sbb
adc
sbb
loopne
jnp
or
int3
adc
or
mov
inc
add
stos
cmpsl
mov
inc
xor
aaa
xor
adc
and
jae
pop
and
add
mov
test
and
dec
xor
stos
cwtl
add
cmc
outsl
into
jb
pop
shlb
and
xorl
fcompl
clc
fsubp
rorl
iret
cmp
push
adc
sub
cmp
dec
push
lret
mov
stc
push
mov
or
lods
enter
push
add
shlb
xchg
lret
push
sub
inc
movsl
popa
mov
dec
xor
mov
pop
outsb
adc
int3
scas
mov
sarb
arpl
rorb
mov
inc
sbb
and
test
das
sub
js
lcall
xchg
rolb
push
mov
dec
push
push
std
negl
mov
dec
iret
sahf
mov
out
ds
add
mov
scas
out
insl
add
leave
push
movsb
cmp
shr
pop
div
lods
outsl
testb
loope
movsl
js
cmpsl
mov
js
data16
std
stos
push
mov
jecxz
scas
push
inc
push
sub
scas
mov
cmp
jp
adc
inc
sbb
cltd
movsl
sbb
push
test
xchg
pop
jb
pushf
test
lret
pop
or
dec
sbb
push
fmuls
inc
pop
test
pop
pop
movsl
test
popa
fcom
into
and
jne
rcrl
or
filds
push
pusha
jg
inc
dec
iret
filds
loopne
cld
aad
sbb
jae
ret
xchg
pop
add
xor
shlb
cwtl
xchg
clc
cs
lret
push
or
loope
and
enter
mov
cmpsl
or
pop
and
mov
ja
out
popa
mov
mov
popf
push
pop
inc
repz
inc
test
xchg
enter
add
xchg
adc
mov
inc
fnsave
cmpsb
divb
adc
insl
cli
sub
sub
icebp
mov
xchg
xchg
in
pop
jg
push
push
mov
pop
sbb
xor
gs
xchg
or
inc
jl
jne
dec
add
icebp
leave
test
push
pop
mov
popa
movsl
and
mov
jg
dec
sub
aaa
and
adcl
jl
ljmp
add
jne
sub
xchg
jle
sbb
into
adc
lock
icebp
inc
jg
sub
add
mov
loopne
sti
push
test
mov
popa
adc
cmpsl
movsb
dec
push
add
aad
inc
and
xor
xchg
xor
paddd
xchg
mov
push
jg
push
ror
cmp
dec
ret
push
aad
movsl
aad
mov
mov
add
cltd
aaa
mov
xchg
stc
dec
pop
lods
clc
shrl
leave
les
add
sbb
test
fdivs
dec
sub
addb
jg
mov
adc
dec
outsb
xchg
mov
inc
jno
lret
adc
or
xor
je
cmc
rcr
xor
dec
add
mov
es
jmp
js
je
lcall
mov
xchg
dec
lock
xchg
fisubrs
pop
jecxz
shlb
lret
mov
lret
pop
ss
push
xlat
jbe
adc
add
pop
add
cmpb
rcll
mov
lock
scas
adcl
ja
dec
xlat
addr16
sti
add
mov
popf
icebp
jl
inc
adcb
inc
jecxz
mov
out
mov
test
outsl
cs
lds
or
push
test
push
lahf
repz
xor
dec
or
scas
fisubs
popa
mov
adc
pop
jno
test
sbb
xor
mov
push
aas
mov
testb
jb
cmpsl
pop
inc
mov
pop
js
bound
sub
shlb
lds
cs
stos
dec
ja
cmp
cmpsb
mov
and
sub
sub
xor
xor
mov
dec
lods
dec
jge
clc
jp
jnp
xchg
jbe
fsub
decl
mov
cmp
notb
cltd
out
adc
or
cmp
cmpsl
shl
pop
scas
dec
ds
lahf
inc
mulb
mov
cs
add
pop
mov
popf
vmaxsd
mov
ret
inc
sbb
aam
icebp
lcall
das
sahf
test
push
loop
or
and
sarl
mov
movsb
adc
push
mov
pop
adc
mov
adc
mov
jb
ljmp
insl
iret
pop
pop
jmp
cli
sbb
push
add
xor
std
daa
es
int3
adc
or
mov
inc
mov
faddl
aad
or
ss
xchg
addl
dec
push
lea
insl
mov
mov
rcl
mull
xchg
push
xchg
adc
or
and
add
cmc
repnz
fs
shl
movsl
daa
iret
insl
les
in
xor
xchg
push
add
push
sub
dec
or
popa
sahf
inc
mov
dec
and
jb
icebp
mov
pop
pop
push
mov
sub
ds
mov
and
add
sahf
ds
cmp
inc
imul
pop
subl
mov
hlt
icebp
pop
fwait
xchg
repnz
dec
sub
push
cmp
push
push
add
push
imul
push
mov
push
daa
lahf
daa
loopne
aas
cmp
add
jle
les
ret
push
dec
pop
jno
ror
and
jno
test
movsb
sbb
push
mov
dec
or
cwtl
jl
or
inc
xor
in
adc
fadds
inc
int
xchg
inc
ds
movsb
mov
jg
adc
test
push
inc
mov
add
pusha
sbb
and
inc
loopne
xchg
cli
fildll
inc
sti
aad
xor
in
popa
dec
rcrl
add
inc
mov
xchg
pushf
cmpsb
mov
addr16
in
repz
out
daa
stos
or
push
addr16
fwait
jno
and
movsb
sahf
mov
pop
adc
push
ret
ljmp
xor
cmp
mov
loop
sub
mov
xor
bound
xchg
inc
mov
or
out
in
and
insb
stos
sbb
push
outsl
xlat
mov
cwtl
imul
pop
xlat
xchg
cmp
jo
rorb
ljmp
xlat
shrb
mov
jo
adc
movsl
pusha
leave
mov
decb
push
sbb
jle
icebp
in
push
mov
or
xor
add
movsl
dec
and
incb
icebp
test
inc
repz
add
xlat
mov
loop
shlb
xchg
pop
sbb
mov
jge
in
cmp
out
push
sbb
cwtl
xor
divb
sbb
mov
mov
mov
adc
fcmovbe
rcrl
lret
or
sbb
movsl
lock
ljmp
or
mov
fldlg2
andl
cmp
cwtl
xchg
or
movsb
push
mov
pop
add
push
popf
ds
jmp
mov
push
loop
jo
inc
clc
pop
dec
push
repnz
popf
fcomp
lods
push
pop
cwtl
shll
insl
xchg
sbb
pop
test
and
lret
or
adc
sbb
sub
and
jns
scas
lods
xor
cmc
and
cmpsb
xor
pop
ret
xor
cli
gs
js
push
add
out
or
cmpsb
aad
sbb
jno
inc
adc
mov
popa
jne
pop
lret
loop
mov
in
dec
dec
repz
sub
dec
sub
bound
jmp
lock
cmpb
jb
out
pop
mov
into
pop
or
lea
push
add
sti
dec
push
and
fcompl
pop
inc
xchg
xor
xchg
inc
cld
mov
xor
jle
push
in
fs
arpl
outsb
stos
or
dec
les
xlat
call
mov
rorb
push
out
test
push
enter
loop
test
daa
loop
add
lret
jl
xchg
outsl
adc
push
pop
cld
lahf
push
cmpb
repnz
inc
pushf
mov
gs
sbb
clc
xchg
jge
push
mov
inc
je
pop
fcmovu
xchg
ss
push
imul
inc
fcomps
dec
or
sub
dec
mov
fptan
dec
test
test
imul
mov
push
loope
test
inc
pop
fwait
loop
mov
mov
fiadds
or
loop
mov
movl
out
push
or
les
scas
dec
mov
loop
scas
imul
bound
imul
xchg
sub
mov
imul
call
adc
call
and
aaa
lret
popf
popa
pusha
or
cmp
dec
or
and
fwait
sbb
decb
adc
cmp
xchg
test
jae
call
rcrb
inc
inc
cmpsb
repz
mov
xchg
pop
stc
hlt
or
push
add
fmuls
hlt
jae
test
push
sub
enter
xor
mov
xor
cli
xchg
test
movsb
mov
inc
gs
stc
xchg
or
test
cmp
add
dec
dec
add
nop
pop
insb
sbb
add
movl
les
push
cmpsb
adc
push
inc
bound
xchg
inc
xor
js
adc
inc
js
out
inc
push
lret
sub
mov
aaa
inc
cs
cmp
hlt
xchg
xor
std
xchg
xchg
int3
adc
mov
push
fidivrl
test
push
hlt
jl
dec
add
cmc
dec
mov
fwait
dec
aas
sbb
inc
sub
jbe
mov
and
add
addr16
xchg
or
pop
addr16
scas
cmp
subl
mov
repz
shlb
push
hlt
int3
push
adc
dec
cli
dec
dec
dec
ljmp
lret
out
push
push
mov
inc
mov
mov
pop
ds
test
sub
cmp
ss
push
outsb
mov
adc
jne
sub
inc
les
push
inc
jge
and
pop
ja
push
lcall
aas
pop
cmp
push
cmp
movsb
push
call
in
jge
sub
call
xchg
and
into
repnz
or
xor
mov
adc
inc
adc
mov
push
int
out
and
xchg
orl
arpl
push
inc
push
jp
loop
int
ds
test
out
popa
xor
fwait
loopne
outsl
pusha
js
cmpsl
xchg
mov
iret
push
das
pop
pop
rolb
cmpsb
sbb
sbbb
cmp
iret
scas
bound
adc
dec
xchg
xor
test
dec
add
xor
lock
inc
cmpl
xchg
clc
imul
rcl
insb
push
aas
xchg
ja
ss
loope
out
and
es
dec
jae
outsl
sbb
inc
push
cltd
test
and
mov
or
push
stos
xchg
add
push
mov
cwtl
cmp
mov
out
cmp
rcll
sbb
and
cmp
cmc
mov
mov
test
inc
push
push
aam
mov
mov
sbb
out
pop
and
push
mov
jl
pop
je
repnz
arpl
push
les
xchg
fists
add
inc
push
les
cld
aad
outsl
fdivl
cmpsb
and
jbe
roll
xor
data16
mov
xchg
xchg
sbb
push
jnp
dec
call
mulb
xor
cmc
push
push
bound
pop
orl
sahf
ljmp
sbbl
inc
fildl
mov
das
int
lods
hlt
fwait
push
dec
insb
cli
es
adc
push
test
pop
insb
lds
xlat
mov
shlb
sub
bound
sub
test
jne
pinsrw
dec
xchg
inc
cltd
popa
mov
cs
xchg
cmp
test
shll
dec
and
aam
hlt
adc
push
xor
rorl
movsb
decb
mov
push
cmp
sarb
mov
pop
xchg
imul
das
mov
cmp
xchg
fwait
inc
mov
in
enter
test
mov
dec
ret
into
pop
or
add
pop
mov
sub
push
out
or
and
loope
and
and
or
push
ljmp
lock
or
jle
xor
and
lock
repnz
cmpsl
inc
loope
sbb
fs
cmp
lea
inc
std
in
gs
inc
jl
aad
lock
jo
pushf
mov
mov
sub
mov
sub
inc
test
mov
push
jle
ss
test
aad
mov
iret
mov
jb
push
pop
sbbl
aaa
outsb
fld
nop
or
hlt
xor
mov
lcall
cmp
fcomip
loope
insb
inc
ljmp
add
cltd
push
add
jo
mov
cli
xchg
testl
xchg
enter
shl
pop
mov
leave
xor
xlat
jecxz
push
aas
insl
jno
jp
aad
scas
sub
inc
das
aad
xor
scas
cmc
mov
fisubs
iret
inc
pop
jg
in
rcr
xor
sbb
je
dec
mov
push
xchg
xor
repz
repz
fcmovu
jmp
pushf
mov
cmpsb
inc
dec
je
outsl
push
fcompl
inc
stos
ficomps
sbb
fistpl
adc
fildl
inc
dec
xchg
loopne
enter
dec
pushf
sbb
and
movsb
enter
ret
sub
int
in
insb
and
bound
pop
cld
inc
add
je
add
std
add
sbbl
aaa
add
dec
xchg
stc
movsl
sbb
dec
arpl
mov
pop
sbb
incb
inc
cmpsl
inc
test
clc
mov
out
ds
fwait
cmpsl
movsb
or
jno
outsb
fcoms
cmp
cmp
sbb
test
push
scas
pop
xchg
mov
pop
xchg
sarb
into
adc
dec
cmpsb
punpckldq
xor
push
insb
sarl
leave
aas
pop
xor
xor
jb
inc
and
adc
jg
lcall
adc
out
adc
inc
sar
scas
iretw
sub
pop
xlat
les
pop
bound
push
pop
xchg
orb
mov
das
adc
movl
xchg
mov
mov
mov
out
test
inc
lahf
lcall
or
push
sub
ret
xor
pop
das
cmpsb
shrl
or
cmp
xchg
fdivl
lahf
push
xchg
sbb
push
adc
inc
fdivrp
loop
jmp
addr16
stos
inc
and
or
lock
mov
pop
lahf
icebp
mov
or
push
jl
movsb
sub
pop
mov
add
nop
mov
clc
inc
mov
xor
jo
leave
xor
pop
lods
dec
adc
pop
js
cmp
idiv
cs
not
je
inc
cmc
dec
addr16
and
push
es
lcall
lock
bound
imul
push
jb
cmpsl
add
int3
addr16
pop
push
jl
insb
mov
int3
mov
inc
sbb
sub
add
cmc
js
inc
push
lret
sub
loopne
shlb
jmp
xchg
scas
jae
std
add
test
and
mov
mov
adc
pushf
jns
push
mov
clc
push
inc
inc
mov
pop
andb
test
pop
mov
jb
clc
mov
inc
rorb
hlt
orl
mov
shl
adc
movsl
in
lods
mov
xor
ja
sbb
lret
out
cltd
inc
pop
jbe
cld
test
jg
lret
inc
jo
or
xchg
js
test
inc
mov
mov
jb
pop
adc
xchg
xor
push
add
nop
and
xchg
adc
push
cmpsb
mov
rep
cmc
jp
fs
mov
sarl
loopne
popf
push
sbb
add
fwait
addb
mov
cmpsl
xchg
mov
aam
add
bound
sti
xor
push
add
mov
add
sbb
sbb
data16
cld
inc
arpl
jnp
adc
dec
mov
add
addr16
xor
add
jle
push
rclb
xlat
punpckhwd
cmp
xchg
hlt
in
in
dec
xchg
pop
fistps
and
fcom
push
insb
mov
mov
xor
adc
inc
sub
mov
dec
dec
aas
cmc
fwait
sub
push
and
dec
and
dec
loope
loopne
pop
fmul
push
push
mov
cmp
pop
inc
mov
in
fcoml
in
inc
int3
or
lods
mov
pop
push
pushf
cmpsb
mov
push
inc
push
xor
fnsave
mov
popf
pop
mov
push
jno
daa
sub
ja
fwait
in
ja
lret
out
push
movsb
mov
icebp
dec
cmp
dec
testb
das
xchg
popf
dec
test
xor
and
jae
repnz
pop
hlt
xchg
lds
dec
jmp
jnp
cmp
and
dec
push
and
or
call
flds
fcmovne
mov
fbstp
in
mov
movsl
dec
mov
sub
and
pop
mov
xor
adc
xor
mov
rcrb
lret
inc
jmp
stos
or
sbb
mov
cmp
daa
and
pop
mov
cmpsl
popa
pop
movsb
dec
mov
dec
dec
sbb
cli
inc
xchg
jecxz
sub
xacquire
mov
addr16
cli
xor
xchg
call
push
movsl
or
insl
adc
or
mov
lcall
std
jg
mov
lahf
jne
stc
leave
jo
ret
adc
imul
sbbb
int3
jmp
adc
popl
popa
dec
push
into
lods
jge
mov
aaa
out
xchg
adc
lock
mov
lock
rep
js
and
and
fbld
popf
mov
and
push
jle
add
ja
enter
add
stos
cltd
or
push
or
cmpsl
rcl
loope
sbb
repz
loopne
adcl
xchg
fsubl
rep
popf
es
adc
xor
mov
adc
dec
in
nop
test
repz
sbb
movsb
xor
dec
adc
or
leave
in
mov
or
nop
xchg
inc
xchg
testl
jecxz
lcall
es
in
rorb
and
dec
mov
push
mov
imul
add
mov
jne
pop
loopne
imul
repz
jns
ret
mov
cmp
sbb
lods
out
jb
idivb
loop
out
xor
mov
xchg
dec
lds
es
cmpsb
lods
pop
push
shll
sbb
ret
arpl
xchg
es
mov
mov
cmp
bound
jae
scas
in
or
cmc
aas
add
xchg
dec
mov
loope
scas
and
adc
shrl
jge
lods
cmp
mulb
add
xchg
mov
mov
repnz
and
in
pop
subb
repnz
sbb
push
cld
scas
mov
in
and
xchg
leave
fnstcw
sbb
cltd
fiadds
mov
repnz
sarb
out
push
jl
bound
inc
cmp
xor
mov
pushf
rolb
jg
std
pop
inc
test
add
mov
dec
pusha
push
push
imul
jecxz
call
hlt
lea
push
stc
sbb
dec
fidivrl
in
mov
pop
jo
fdivp
ret
mov
stc
mov
jnp
adc
cmpb
mov
scas
and
scas
test
bnd
jp
pusha
jae
out
int3
cmp
scas
sub
movsl
pop
jno
or
test
jecxz
insb
xor
and
jg
repz
in
xor
ret
jb
imul
cmc
mov
repz
movsl
add
push
sub
mov
iret
pop
mov
ret
sub
adc
xor
loopne
scas
cmpsb
xchg
imul
pop
jnp
mov
insb
mov
or
in
push
sbbl
arpl
mov
pop
mov
rcl
lock
push
adc
jmp
scas
mov
lret
mov
sar
sbb
push
jne
mov
lcall
push
xor
scas
fs
inc
stos
dec
test
lds
decb
sbbb
mov
mov
mov
push
mov
stos
pusha
lds
mov
ror
or
movsl
call
jl
gs
or
xor
sub
xor
cltd
add
jb
xlat
aam
lock
xchg
ret
jo
hlt
mov
and
testl
insl
jmp
lods
sbb
lods
int
cmp
enter
sbb
jmp
mov
inc
jecxz
xchg
mov
mov
sbb
jmp
loopne
shrl
cmpsl
fsubs
insb
mov
aas
out
std
mov
scas
cmp
pop
pushf
push
mov
cmp
push
lock
insb
mov
lret
orl
xor
xchg
xor
arpl
sub
mov
lock
sbb
orb
push
lret
and
mov
loop
cmpb
mov
dec
loop
hlt
pusha
sub
sti
popa
sti
dec
or
push
repnz
mov
cmc
pop
ror
sbb
push
insl
dec
int3
xchg
imul
mov
stos
les
adc
xchg
xchg
cmp
je
push
push
sub
push
lret
mov
pop
decl
pop
sbb
jl
mov
push
push
pop
push
mov
bnd
cmc
mov
push
jae
out
push
or
mov
out
inc
add
test
stc
push
wrmsr
inc
push
scas
ss
add
add
testl
out
and
pusha
push
lahf
adc
sti
fdivs
add
call
repz
in
inc
aaa
aas
mov
cld
jge
mov
pop
pop
or
in
sbb
repnz
fstp
or
stos
push
das
fs
test
inc
mov
scas
adc
scas
pop
add
lret
scas
sbb
and
outsb
sbb
push
fwait
pop
leave
jnp
iret
inc
fwait
jns
mov
out
shll
mov
ror
test
sub
out
std
add
js
xchg
mov
dec
inc
add
incl
pop
jae
ss
sub
popa
lahf
and
push
scas
push
dec
push
das
fs
jne
adc
dec
push
icebp
adc
add
das
xchg
inc
fsubl
inc
dec
or
dec
jmp
inc
ret
dec
loop
pop
add
pushf
gs
aas
data16
ret
and
push
pop
daa
aaa
mov
in
adcb
or
cmp
daa
mov
enter
mov
std
outsl
pop
cmp
pop
xchg
or
pop
test
or
and
nop
repnz
xchg
sti
sub
test
jno
es
xor
pushl
sar
pop
ss
or
inc
jb
pop
in
jns
movsb
xor
xchg
inc
dec
sahf
sub
pop
jp
inc
cmp
mov
mov
aaa
push
repnz
mov
cmp
ror
jg
sbb
pop
clc
push
lret
add
cli
mov
push
jge
mov
xor
lods
cmc
xor
in
test
jg
or
pop
jb
inc
int
jbe
jno
aaa
pop
inc
pop
add
je
cmpsl
sahf
push
lods
ret
iret
fs
nop
inc
cmp
arpl
rcr
or
icebp
adc
push
sbb
sub
xchg
incb
sarl
mov
jmp
mov
dec
sbb
nop
shll
mov
outsb
sub
in
pop
sub
mov
addr16
outsl
loope
inc
dec
dec
mov
pop
dec
add
in
loope
mov
adc
dec
cltd
js
mov
jecxz
ss
mov
and
dec
aad
test
clc
pop
dec
jne
stc
loopne
lret
ret
shlb
sbb
add
sbb
sub
int
outsb
dec
pop
mov
xchg
adc
orl
out
gs
xchg
icebp
js
jl
test
or
cmp
lods
shlb
insb
ds
dec
or
and
dec
ret
leave
push
cmc
xor
inc
movb
mov
push
adc
jecxz
loope
loopne
or
jg
mov
xchg
into
mov
xchg
mov
aad
fmuls
clc
mov
xlat
jae
push
jle
push
inc
imul
clc
imull
pop
test
incb
in
cwtl
arpl
nopl
fmuls
loop
aas
fnsave
mov
sbb
in
adc
pop
and
cmpsl
sbb
pushf
mov
jnp
pusha
and
mov
stc
sub
pusha
mov
push
adc
jbe
inc
int3
push
movsl
loop
insl
daa
ret
data16
xor
xor
out
shll
adc
adc
movsb
mov
gs
add
loop
imul
and
sub
sub
test
cmp
xchg
movsl
das
jl
mov
mov
xchg
cmp
cmpsb
dec
rclb
add
int
and
mov
pop
outsb
adc
aaa
scas
cmp
mov
shrl
sub
loope
or
sbb
or
dec
cmp
pop
sub
fildll
mov
push
push
jl
dec
jg
fsubrs
pop
inc
pop
cmpl
clc
fs
mov
mov
movsb
test
sbb
in
mov
mov
mov
aam
mov
mov
mov
shl
and
dec
mov
lcall
repnz
pop
aad
push
jno
aaa
jo
cmp
outsb
in
adc
jae
and
mov
lret
repz
lahf
addr16
test
or
dec
jb
dec
push
hlt
lcall
iret
js
out
sbb
je
rcrl
loope
dec
in
outsl
movsb
adcl
ds
sbb
jge
cmp
shl
mov
ss
dec
mov
ret
and
movsl
inc
xor
xor
arpl
imul
cmp
push
inc
gs
xchg
jl
adc
loopne
arpl
and
jp
popa
hlt
dec
addr16
mov
jb
push
mov
push
arpl
out
mov
shll
mov
fildl
jnp
ret
mov
jbe
in
ret
ljmp
mov
ficoml
fsubrs
dec
sub
repnz
sarl
add
push
add
scas
or
movsl
mov
mov
adc
dec
mov
pop
rcll
out
pop
icebp
loop
in
lcall
arpl
push
sbb
jmp
je
cmpsl
mov
xchg
inc
mov
aam
inc
pop
les
and
jge
inc
je
repnz
outsb
out
xor
iret
and
loope
outsb
and
push
in
mull
scas
ret
pop
stos
ror
mov
fwait
push
repnz
loope
adc
sub
lret
lcall
je
mulb
test
mov
mov
jnp
lahf
pop
out
out
ja
pop
mov
mov
and
mov
mov
roll
push
cmpsb
sbb
jp
fnstenv
mov
call
ljmp
jl
mov
pop
and
insb
cmp
loope
add
dec
cld
outsb
push
jge
lea
push
inc
enter
jecxz
mov
ret
in
mov
mov
andb
pop
jmp
xlat
push
xchg
mov
xchg
jae
add
test
dec
mov
xor
and
jo
dec
or
push
adc
icebp
in
shrb
jp
and
xchg
out
nop
add
jae,pt
or
push
or
subl
fidivs
push
lock
xlat
lret
repnz
rcr
push
push
imul
xchg
pop
adcl
jb
xor
push
push
test
loop
scas
aas
js
mov
fbld
and
loopne
mov
out
lods
movsl
push
adc
dec
cmp
popl
scas
push
xor
xchg
jmp
sub
daa
add
mov
mov
inc
dec
mov
mov
lahf
movsl
xor
or
aad
inc
add
lcall
sub
stc
popl
lds
inc
pop
mov
pop
andb
sbb
jl
xor
mov
hlt
cmp
add
cwtl
and
jno
out
jno
out
jo
aam
sub
push
cmova
jle
inc
outsl
or
cmp
in
insl
inc
jp
movsw
and
mov
xchg
loopne
test
cs
xchg
push
dec
pop
clc
add
or
or
in
jecxz
ds
sub
nop
cmp
cmpsl
dec
or
repz
cmp
xor
jl
mov
bound
cmpsb
sbb
add
data16
in
mov
or
mov
adc
pop
inc
add
loopne
push
adc
pop
fdivrl
fdivr
adc
push
xor
mov
mov
mov
push
adc
adc
mov
push
cmp
mov
pop
sbb
shlb
adc
fmull
mov
mul
cmpsl
pop
sahf
dec
and
mov
rorb
cmp
pop
adc
cmpsb
sahf
pop
lods
out
jb
jle
lods
add
repz
mov
pop
xchg
pushf
sub
and
mov
xchg
int3
addr16
add
leave
addb
in
or
fdiv
and
adc
int3
xchg
cmpsl
pop
les
iret
adc
sbb
xorb
fisttpl
inc
nop
jbe
add
inc
test
pop
push
and
std
add
ret
aam
nop
add
lahf
or
out
imul
mov
shrl
dec
test
enter
cwtl
inc
or
inc
fwait
pop
les
dec
push
nop
test
call
sub
push
sti
inc
adc
jns
mov
push
aas
mov
add
stc
mov
sub
rorb
pop
mov
ficoms
sub
outsb
push
sti
push
outsl
jmp
negl
mov
mov
ds
cmpsl
pop
xor
test
stos
stc
jmp
mov
ja
pop
add
aas
jno
test
pop
dec
inc
jecxz
std
sub
fildl
xor
mov
out
leave
mov
push
inc
xor
mov
enter
jecxz
sbb
and
and
inc
pushf
shrb
inc
mov
adc
pop
pop
or
in
sub
mov
jp
push
movsl
movsb
addl
push
ret
push
je
inc
and
xchg
pop
je
and
xchg
jge
in
dec
fldl
pop
in
scas
cmp
dec
push
pop
add
mov
cmpsl
insb
sbb
pop
mov
mov
repnz
cmpsl
xor
clc
jecxz
js
jmp
repnz
jp
dec
jbe
ficoms
test
inc
popf
cmp
jnp
daa
push
pop
aam
pop
xchg
mov
aad
add
cmpsl
mov
pusha
adc
fcoml
aad
inc
or
or
mov
or
sbb
in
push
dec
fnsave
dec
cmpl
jge
xchg
lock
out
xor
add
xlat
out
adc
adc
mov
dec
xchg
xchg
cmpsl
pop
test
movsl
repnz
out
sub
jle
jg
cltd
push
ret
rorb
aad
dec
pushf
push
out
adc
mov
out
pop
dec
dec
inc
mov
int3
loopne
inc
stos
push
jbe
adc
inc
dec
jae
movsl
mov
lods
iret
push
jmp
sbb
lock
aad
iret
pop
push
std
mov
outsb
sbbb
jno
push
push
insl
rorl
lret
sarl
int3
push
jb
jge
sub
roll
xor
xchg
mov
pop
mov
dec
dec
add
or
dec
iret
cmp
jb
adc
adc
xchg
sbb
dec
cli
push
jecxz
mov
pextrw
inc
cli
push
pusha
jo
lods
dec
push
pop
outsb
movsb
sbb
jecxz
xchg
or
loope
and
lea
clc
jecxz
mov
repz
int
sbb
xchg
push
pushf
jno
pop
fists
rcll
repnz
aad
insl
movsb
cs
add
and
push
jae
jbe
dec
test
push
xor
inc
in
add
mov
inc
jae
repnz
clc
xor
jle
ja
sbb
xor
cltd
pop
add
inc
test
push
mov
add
inc
jns
cld
sbbl
dec
mov
dec
pop
ret
leave
jbe
hlt
mov
fwait
sbb
cmc
pusha
jge
and
push
xchg
sub
push
jp
sbb
push
sbb
adc
dec
push
daa
xchg
xchg
pop
arpl
or
mov
mov
cli
aad
lcall
pop
ret
and
xor
jae
cmpsl
addr16
adc
pop
into
bound
add
push
orl
dec
das
pop
cmc
idiv
push
nop
fsubrl
mov
mulb
inc
movsl
add
and
into
jl
stc
jge
cmp
push
mov
cli
sub
repnz
mov
mov
sub
cmpsl
enter
add
stos
dec
loopnew
lcall
dec
and
subl
ja
aad
cmpsb
xor
out
and
xchg
test
mov
xor
adcb
xor
fiadds
lret
and
mov
cs
mov
inc
xchg
data16
inc
push
into
adc
lea
in
and
jns
daa
and
das
ret
adc
mov
adc
js
leave
movsl
pop
pop
insb
jge
push
cmp
lods
inc
cltd
test
or
lcall
out
jno
mov
inc
inc
xchg
jnp
stos
pop
or
inc
rorb
mov
or
lods
lods
sbb
clc
push
mov
add
jp
adc
xor
fwait
mov
jno
dec
jae
add
cmpsb
icebp
stc
adc
xchg
or
test
frstor
cmc
fstps
pushf
jo
js
lods
cmc
push
pop
sub
lret
and
cmp
scas
mov
aam
sbb
xlat
jl
pop
loopne
ljmp
test
pop
or
mov
lods
je
mov
loope
and
and
fistps
cmpsl
dec
fsubrs
pop
push
push
std
call
clc
test
jg
sbb
subl
push
mov
idivb
shll
cmc
shlb
and
sbb
lods
stc
push
in
jo
adc
sbb
and
dec
fnstcw
cmc
aas
push
add
js
std
out
jge
popa
add
js
sub
movsl
pop
cmp
xchg
mov
jb
repnz
mov
movsl
dec
inc
icebp
xchg
xor
and
and
jle
enter
and
cld
fsubrp
inc
adc
insb
call
mov
ja
jo
in
xchg
jbe
lret
sbb
mov
mov
ljmp
fmull
in
jmp
ficomps
mov
sbb
jb
cmp
xor
and
repnz
aas
pop
xor
pcmpeqb
push
loop
repnz
or
lds
jecxz
sbb
mov
daa
mov
arpl
mov
jp
movsb
push
jb
ljmp
fildll
sub
lret
pop
xchg
xchg
mov
mov
insl
inc
mov
jp
lock
insb
out
outsb
test
mov
xchg
stos
lds
mov
movl
in
mov
push
int
pop
sub
push
int
js
imul
inc
loop
fistpl
inc
enter
and
inc
fsubl
jecxz
sub
mov
inc
mov
outsl
mov
scas
mov
mov
lcall
je
cwtl
mov
loop
mov
jp
mov
or
jbe
xor
jecxz
xor
cltd
stos
push
xor
and
adc
je
iret
push
inc
and
push
cmp
call
lock
loop
cltd
xor
scas
inc
cwtl
inc
jecxz
sub
imul
fwait
pop
nop
or
rcll
cmp
and
sbb
jae
movsl
fcompl
adcl
stc
mov
cmc
ficoms
mov
cltd
mov
es
cld
mov
xchg
jo
stos
lea
jo
sbb
arpl
call
cmp
and
jne
xor
sub
inc
je
lock
adc
adc
mov
sub
ret
inc
xchg
inc
popa
addl
test
mov
push
xchg
add
sbb
repz
add
frndint
pop
sub
sahf
out
sbb
mov
xlat
orl
sub
cs
fists
data16
dec
iret
push
pop
or
adc
lea
mov
pop
dec
xor
or
pushf
repnz
out
dec
mov
arpl
test
mov
and
push
std
sub
inc
data16
orb
stos
xchg
pop
repz
scas
adc
mov
or
roll
inc
sub
mov
mov
adc
xchg
subb
inc
fsubrl
mov
adc
mov
mull
sbb
mov
sub
iret
int
pop
dec
push
mov
lods
mov
popf
mov
aaa
lret
mov
cmp
setb
and
sbb
mov
movsl
in
incb
xchg
ss
xor
fs
dec
sub
add
inc
mov
jae
sti
test
mov
pusha
sub
and
push
mov
mov
or
divb
mov
push
pushf
gs
jb
frstor
movsl
dec
aam
adc
fstp
out
add
mov
fsincos
jno
mov
inc
ja
adc
icebp
push
aam
mov
mov
out
cmp
mov
shll
xor
pop
cmovs
inc
adc
jmp
sub
mov
lea
push
daa
push
sub
lahf
popf
xchg
sbb
js
dec
imul
or
inc
addr16
icebp
pop
jae
enter
mov
push
mov
outsl
mov
pop
or
jae
lods
mov
or
push
mov
jmp
scas
cld
lock
nop
jp
dec
mov
fstpt
imul
push
movsl
pushl
ljmp
out
cwtl
jg
add
jg
loopne
out
test
rclb
adc
mov
and
dec
sub
mov
cmpsl
fs
adc
test
adc
popf
and
push
pop
jmp
aad
push
fneni(8087
pop
push
or
daa
cmp
sub
or
aad
ret
inc
and
xchg
es
ss
stos
insb
sti
add
clc
cmpsl
out
adc
fcmovbe
test
mov
inc
jp
pop
repnz
jecxz
mov
cmp
adc
mov
loop
jmp
lock
ret
cmp
cmpsl
mov
test
and
add
pop
cld
push
mov
inc
pop
mov
out
test
dec
and
pop
sbb
or
rcr
xacquire
sub
nop
cmp
mov
xlat
mov
cmp
ficomps
jb
cmp
aas
in
fcomip
les
mov
xor
idivl
xorb
cmc
lret
and
and
rcrb
ror
test
les
or
add
inc
sbb
inc
std
leave
mov
inc
lock
or
add
sub
xchg
dec
or
pushl
or
sbb
add
addr16
inc
sbb
lret
adc
add
lcall
jg
in
adc
lock
fnstsw
push
sti
cmp
addr16
and
mov
pop
push
cmp
xchg
xchg
push
daa
xchg
js
inc
xchg
cmc
push
les
cmp
sbb
loope
inc
or
push
mull
and
push
scas
inc
xor
sub
sahf
pop
adc
dec
mov
pop
lret
sub
daa
scas
jg
mov
sbb
ret
data16
xchg
cmc
inc
jle
dec
push
rorb
inc
fadds
inc
loop
and
sbb
cli
repz
mov
in
into
orl
faddl
rcrl
inc
jbe
in
cmpsb
cwtl
int
int3
lret
jp
xor
es
aas
adcb
repz
xchg
dec
jno
inc
push
mov
push
cmp
jle
add
push
adc
aas
inc
ja
jne
jl
std
xor
mov
pop
orl
xlat
sbb
pop
scas
lahf
mov
pop
mov
cmp
orb
cmpsl
pop
mov
popa
mov
pop
sbb
or
icebp
mov
inc
or
adc
enter
mov
inc
data16
incb
dec
ror
push
rcrb
leave
lods
pop
in
dec
xor
filds
lds
rol
adc
fbstp
or
retw
popf
dec
je
jg
sbb
pop
imul
dec
mov
cmp
push
bound
lds
mov
mov
into
cwtl
mov
loop
mov
insb
rolb
inc
mov
fwait
cmp
lods
adc
or
in
sahf
xchg
pop
loope
sarl
add
movsb
cld
fisttpl
fmull
pop
adc
and
in
and
pop
jae
pushw
cld
add
add
jnp
jns
xchg
movsb
rcrb
aas
mov
adcl
pop
and
scas
loop
add
bound
out
subl
adc
sti
into
cli
and
push
mov
loope
lods
stc
jge
mov
icebp
push
addl
dec
cli
adc
inc
inc
aad
cmp
fcomi
push
into
mov
ljmp
adc
pop
negb
adc
mov
mov
bnd
imul
cmp
add
pop
sti
sbb
mov
ret
and
ja
push
dec
mov
or
das
mov
mov
xor
filds
mov
in
movl
push
mov
mov
lcall
je
into
sub
mov
mov
mov
and
add
sbb
inc
pop
or
cmp
push
mov
outsl
imul
push
cmpsl
cmp
or
and
and
xchg
mov
mov
adcb
test
scas
mov
mov
gs
xchg
es
xchg
mov
xchg
pop
sub
cmc
movsb
je
call
je
mov
add
adc
push
mov
pop
pop
mov
popf
fidivrs
adc
das
out
cmp
xor
repnz
mov
cmp
inc
mov
and
push
icebp
xchg
jp
in
fisubl
push
sub
das
mov
mov
xchg
ja
inc
aas
ljmp
push
mov
sub
addl
push
loope
mov
std
sti
arpl
push
mov
xor
aad
pop
divl
roll
push
push
mov
mov
inc
notb
adc
xchg
add
xor
xlat
push
and
sbb
aad
pop
cmpsl
lods
scas
and
gs
out
les
mov
mulb
shrb
scas
xor
rorl
adc
xor
mov
mov
jle
mov
pop
jo
shrb
push
xor
stos
mov
mov
adc
les
add
xchg
push
and
imul
xchg
xchg
daa
and
cli
push
aad
in
adc
xchg
xchg
inc
leave
fcomps
pop
and
inc
test
stc
and
xchg
cld
adc
aas
push
cmp
jne
xchg
ss
cmpsl
roll
jne
add
les
cmp
xchg
add
inc
cs
and
xorl
movsb
inc
xor
sti
xchg
jbe
push
js
aam
repnz
imul
loope
sub
mull
aam
repnz
mov
pushf
popf
pop
and
xchg
cld
mov
sub
inc
out
loope
fs
xchg
push
xor
mov
lock
lods
adc
aam
scas
mov
std
movsl
and
pop
stos
scas
pop
pop
loop
dec
mov
cmp
jae
inc
stos
scas
mov
inc
sbb
mov
jno
and
xchg
jecxz
nop
inc
jne
lods
inc
xor
in
add
repz
or
roll
dec
xor
repz
jle
add
jg
lods
cmp
sbb
movsb
lods
movsl
inc
ljmp
shrl
xchg
rcl
xchg
xlat
popa
jae
arpl
push
je
cmpsl
mov
rorl
adc
inc
mov
bound
fstpt
push
and
hlt
jne
ja
ficoms
stos
sub
pushf
iret
and
daa
es
jb
xor
xchg
mov
cs
adc
push
ret
icebp
push
sbb
sbb
adc
out
das
jne
push
out
inc
jne
sbb
lea
aaa
popf
fdivr
setge
dec
adc
dec
scas
add
movsl
and
xchg
movsb
cmp
leave
movsl
js
scas
pop
and
dec
prefetch
or
lea
roll
jnp
xlat
xchg
add
jbe
frstor
pop
xchg
por
jne
xchg
pop
add
fucomi
imul
subb
add
xchg
je
mov
mov
les
sbb
push
or
push
out
fdivs
sub
je
mov
outsb
or
push
cmp
cltd
je
loop
setnp
enter
ss
dec
pusha
fs
fimuls
scas
movsl
nop
cmp
dec
cmp
addl
jge
shll
push
mov
lock
jp
pop
cli
jp
push
or
pop
mov
lods
inc
cld
mov
dec
scas
shll
cmpsb
sub
jno
sarb
adc
mov
jno
or
or
in
inc
xor
loop
je
out
outsb
jae
xor
sbb
mov
cmpsb
pop
add
enter
push
push
xchg
push
cmc
movl
in
out
dec
xchg
or
test
dec
push
xor
sub
out
int3
pop
add
sahf
mov
notb
push
dec
sbb
push
lds
arpl
adc
clc
ljmp
and
sahf
xor
lret
pop
jg
jge
add
test
adc
data16
bound
xor
jp
adc
stos
imul
nop
and
js
inc
pop
jmp
cmp
sarb
sub
in
aas
push
adc
adc
fcoml
xchg
test
mov
cld
mov
lods
jnp
and
lock
aas
fdivs
and
je
cmp
in
in
out
in
xor
xor
jge
push
sbb
pop
or
fsubs
xchg
lret
push
aaa
and
or
xchg
jg
and
popf
cmp
pop
jg
push
fsts
push
lar
shlb
jb
and
dec
pop
mov
shrb
fiadds
bound
xor
sbb
xchg
mov
test
std
movsl
cld
inc
pop
xor
mov
fwait
adc
jb
inc
xorl
iret
shrb
xor
add
jg
push
popf
sub
adc
inc
mov
mov
or
sub
out
inc
jbe
pop
cmp
cli
jne
aam
cmp
cmp
mov
aas
add
or
lea
jbe
fistps
inc
cli
shlb
xchg
jge
mov
pop
or
aad
enter
and
call
sbb
cli
sbb
add
jbe
js
out
orb
dec
inc
iret
insl
adc
pop
jnp
aad
push
cwtl
out
test
dec
lods
adc
ljmp
push
push
push
fisubrs
add
es
cs
fcom
push
je
xchg
pop
jecxz
jne
fisubrs
push
call
push
jle
jbe
mov
inc
mov
popa
xchg
mov
mov
xchg
mov
out
retw
arpl
cvtpi2ps
mov
movl
jbe
outsb
fdivrs
repz
fiaddl
xchg
movsl
in
inc
in
pop
mov
out
inc
testl
dec
sahf
cmp
push
fdiv
clc
andb
sub
in
insb
or
in
gs
mov
xchg
ss
jge
jns
cmc
pop
dec
pop
js
or
cwtl
rorb
sbb
pop
push
and
inc
mulb
imull
cmp
xchg
movsb
sbb
sbb
jecxz
dec
stos
subl
inc
and
outsb
insb
in
repnz
cmc
add
cmpl
cmp
adc
sub
mov
call
adc
aad
aas
jle
out
jg
out
and
inc
ja
push
int3
adc
add
sbb
and
sub
ljmp
pmaxub
pop
cmp
dec
fisubs
mov
inc
and
inc
mov
mov
sbbl
xor
fcompl
imul
aas
xchg
sub
sub
lcall
xorl
sbb
movsb
lahf
xor
lcall
xchg
insb
outsl
out
adc
lods
lahf
pop
outsb
int3
pop
mov
scas
imul
repz
mov
mov
int
dec
jbe
jp
in
dec
pop
cmpsb
pusha
loopne
jbe
push
aaa
ds
incb
insl
cli
in
adc
clc
dec
les
xchg
xor
mov
mov
mul
dec
jno
and
pop
xor
insb
jg
ret
inc
add
xchg
daa
jno
pop
rcll
push
xor
xchg
mov
ds
je
stos
or
pop
test
loopne
das
testl
cmp
dec
repnz
or
push
lcall
pop
xor
pop
mov
daa
aad
iret
insl
adc
fs
pop
rcrl
adc
shl
shl
repz
xor
jns
mov
shll
mov
jnp
out
pop
push
mov
adc
cli
jge
daa
shrl
shrb
adc
test
pop
add
sub
xchg
pushf
std
pop
add
and
mov
fildll
inc
xor
add
inc
inc
mov
dec
xor
cltd
stos
jae
jg
mov
lock
outsb
push
xor
icebp
dec
add
jae
sub
inc
pop
shlb
adc
push
cs
pop
shll
sbb
dec
es
je
repz
sub
bound
push
fldenv
aaa
adc
dec
adc
mov
mov
jns
ds
popf
and
and
cmc
scas
jmp
mov
add
imull
cmp
mov
insl
rcll
inc
push
faddl
xorb
sahf
out
stos
and
movsb
jno
aad
loopne
xor
dec
jns
cwtl
add
mov
mov
addr16
and
enter
repnz
daa
pop
push
je
cmp
test
int
jle
rorb
xchg
xor
popa
ja
cmp
pop
icebp
mov
pop
mov
xchg
push
in
mov
adc
aaa
filds
notl
add
and
ss
nop
jbe
mov
cmp
mov
movl
arpl
fnsave
imul
adc
test
xchg
mov
gs
push
push
ret
shr
sub
call
test
mov
outsb
jo
jo
ss
inc
xor
push
je
push
fsts
outsb
fstpt
push
adc
sbb
cwtl
movsb
sbb
pop
add
clc
inc
out
shl
mov
outsl
aam
and
addr16
and
sbb
and
inc
jnp
mov
outsl
pop
movsl
push
loopne
repz
mov
icebp
mov
add
pop
xor
insl
mov
test
mov
gs
inc
in
ja
mov
cmp
mov
stos
jmp
mov
cmp
jae,pn
mov
and
pop
mov
repnz
fwait
test
mov
push
jns
inc
out
cmc
sub
ror
xchg
add
jo
xor
or
mov
dec
mov
and
dec
test
stc
test
xor
movsl
sbbl
sbb
mov
mov
clc
stos
pop
inc
lcall
test
mov
inc
and
in
pop
shlb
je
xchg
mov
enter
or
nop
cltd
mov
ja
push
cmp
adc
movsl
maskmovq
testl
cmp
mov
jl
jb
mov
dec
subb
mov
out
adc
xor
jecxz
repnz
imul
push
das
push
adc
popw
sbb
pop
sbb
outsb
add
or
pusha
ds
pop
je
loop
mov
push
inc
sbb
and
mov
je
sbb
xchg
inc
aad
or
fsubrl
and
cmp
or
fwait
inc
stc
fs
dec
ljmp
outsb
jb
jl
inc
xchg
or
cmpsb
pop
ds
insl
jb
ja
rcrb
lock
push
scas
push
mov
test
or
and
sbb
cmp
ret
add
scas
mov
mov
mov
sub
out
push
push
cmpsb
pushf
push
xor
loopne
xchg
out
push
jmp
movsb
outsl
nop
push
icebp
fisttps
repnz
imul
cmpsb
pop
dec
pop
imul
push
dec
sahf
lods
push
imul
mov
or
in
insb
rcr
cmc
mov
sbb
imul
and
notb
stos
arpl
push
enter
in
push
inc
movsb
sbb
push
mov
push
inc
push
xlat
mov
mov
shrl
aaa
aaa
popw
adc
data16
adc
add
xlat
xchg
leave
xor
mov
sub
mov
mov
data16
push
jge
clc
scas
pop
daa
cmp
dec
dec
inc
cli
cltd
pop
mov
pusha
int
push
aas
jp
jl
push
adc
roll
aas
add
push
lahf
ja
mov
popf
nop
leave
adc
sub
sub
pop
and
push
inc
jle
jae
pop
les
pop
push
lods
mov
sub
mov
popa
push
dec
push
pop
mov
inc
or
rorl
rorb
push
test
add
dec
loopne
mov
lahf
pop
dec
mov
movhps
aad
jbe
testb
and
inc
cli
cmpsl
dec
pop
cmp
sbb
mov
popa
dec
jae
or
push
adc
sub
jmp
sti
pop
dec
cmpsb
outsl
xor
sub
pop
or
sub
xchg
mov
xchg
test
push
sbb
repnz
cmp
sub
in
pop
xchg
xlat
push
mov
adc
scas
inc
push
inc
pop
jmp
adc
lods
test
rolb
and
popa
cmp
cld
mov
sbb
js
jne
sbb
inc
decb
cmc
mov
push
sub
xor
sti
sbb
xchg
sbb
dec
shrb
pop
test
test
je
xor
sub
nop
rcrl
fildl
cmp
popf
je
push
jmp
lock
fdivr
cs
test
fs
ja
push
lret
test
dec
das
dec
lret
int
sub
mov
inc
pusha
jno
mov
adc
and
push
sti
scas
jge
aad
cld
pop
push
addr16
test
stos
mov
es
dec
jns
sahf
pop
pop
aaa
mov
pop
std
and
or
addr16
roll
btc
pop
mov
les
inc
insb
xchg
push
popf
imul
sbb
mov
mov
xchg
adc
jp
cli
pusha
push
fildl
lcall
adc
mov
add
mov
xor
xchg
pop
dec
sbb
scas
cmpsb
inc
sub
jne
shlb
punpckhbw
or
xchg
sbb
dec
imul
adc
in
test
mov
dec
js
gs
add
cmc
ds
nop
mov
and
mov
sbb
daa
rorl
adc
push
sbb
jns
stos
mov
outsb
out
xor
mov
in
js
mov
cmp
inc
mov
sbb
pop
lcall
lcall
ss
dec
mov
imul
frstor
test
test
das
nop
arpl
lods
push
inc
adc
les
sbb
mov
scas
mov
movsl
mov
jno
sub
adc
insl
loope
cmpsl
inc
inc
or
cmp
popf
test
mov
pop
cltd
cmpsb
popf
xchg
lds
shlb
test
xor
inc
pop
mov
push
adc
jle
xor
and
mov
fs
xor
mov
jl
mov
fs
lcall
xor
es
sub
sbb
push
inc
or
jbe
addr16
scas
mov
mov
jnp
inc
outsl
push
sbb
xchg
dec
mov
xor
push
cld
cmpsl
sub
sub
add
add
adc
aaa
repnz
adc
xchg
and
jmp
xor
adc
push
jae
ljmp
imul
adc
xchg
xsavec
xchg
insb
xor
add
mov
xchg
negb
xchg
push
push
in
push
pop
es
and
cmc
aas
mov
lods
and
inc
pop
das
mov
imul
bound
dec
dec
pusha
je
and
cmp
in
mov
mov
scas
sub
aad
push
add
out
jl
push
or
std
stc
mov
add
loop
push
cld
std
popa
rcrl
jmp
ret
dec
push
stos
adc
cmp
pop
sbb
xchg
repnz
push
xor
fwait
add
pop
and
test
xchg
mov
jg
int3
inc
repz
jbe
mull
pushf
std
push
sahf
xor
lret
into
mov
push
push
dec
or
pushf
inc
xor
push
inc
cmpsb
jno
lock
dec
jge
stos
outsb
shrb
xchg
jecxz
cmp
push
stc
and
dec
jns
lret
sbb
xor
adc
in
mov
rcrb
add
aaa
and
sbb
mov
add
inc
jb
and
movsl
mov
jae
sbb
pushf
mov
cwtl
neg
cwtl
or
in
mov
sub
pop
je
imul
lea
adc
cvtps2pd
sahf
inc
dec
aam
inc
dec
xor
inc
into
dec
or
pop
adc
repz
push
jae
xchg
adc
inc
xor
xchg
xor
lods
xor
push
idiv
xchg
xor
sahf
insb
adc
push
sub
aam
lock
das
in
test
adc
push
mov
mov
shrl
mov
push
mov
fbld
ja
add
jnp
sub
pop
pop
shll
or
into
sbb
lret
mov
icebp
lods
push
dec
dec
les
pop
mov
nop
or
bound
stc
pop
stos
inc
mov
mov
jnp
xchg
xor
cmc
pop
mov
enter
in
mov
gs
lret
popa
lahf
jecxz
aam
adc
out
xchg
pop
inc
inc
mov
in
xchg
xor
adc
mov
imul
test
stc
scas
or
xchg
loopne
das
sub
popa
or
test
xchg
inc
or
je
sub
sbbl
dec
sub
cmpsl
clc
jbe
cpuid
not
or
or
pop
daa
sbb
xor
xchg
cld
iret
das
enter
cmpsl
inc
fdivs
fwait
add
mov
adc
inc
mov
xchg
shll
lret
and
je
mov
mov
aaa
jno
les
mov
rorl
addl
or
xor
xlat
push
sbb
mov
add
pop
jnp
pop
inc
cmp
adc
int3
addr16
mov
cmp
xorb
jbe
subl
in
arpl
xchg
mov
in
pushf
out
inc
mov
scas
stos
jnp
xchg
adc
sbb
dec
mov
fwait
push
cmp
push
push
ret
jae
insb
insl
xor
and
jmp
mov
and
xor
and
jg
insb
cld
bound
mov
or
mov
mov
mov
add
xchg
jge
and
out
jle
or
std
inc
sub
add
sbbl
popf
or
std
cmp
call
lds
pop
shlb
mov
in
fsubrl
cmp
or
ror
jne
fwait
mov
loopne
testl
cld
xchg
inc
sbb
mov
pusha
jge
clc
adc
jne
mov
push
pop
push
sbb
push
jb
or
call
bswap
jmp
icebp
jbe
or
inc
sbb
js
and
xlat
and
jno
das
jmp
cmp
je
fcmovnu
xchg
xchg
add
add
xchg
ficoml
adc
fistps
data16
mov
fs
mov
imul
dec
fbstp
fldl
xchg
int
jg
sbb
pop
cwtl
es
ret
mov
lcall
gs
cmp
arpl
jl
jmp
aaa
insl
pushl
push
popf
ret
jae
stc
inc
mov
adc
cltd
add
call
pop
test
xorb
pop
movsl
daa
mov
xlat
jo
cltd
popa
add
pop
cmp
gs
mov
dec
mov
pop
and
and
fbstp
hlt
movsl
cli
pop
adc
cli
mov
xchg
pop
or
in
add
mov
sub
dec
or
je
jbe
sub
test
je
aaa
out
scas
cmp
xchg
ret
add
xchg
xorb
jge
jo
dec
sahf
ret
xchg
mov
or
lcall
mov
mov
and
adc
xor
adc
mov
push
lret
sti
lahf
push
dec
sub
addr16
ret
push
push
sub
mov
aad
mov
cmpsl
xchg
int
adc
mov
sbb
jge
dec
or
movsl
orb
sub
aam
sti
test
insl
jg
and
cs
int3
subl
hlt
sub
test
lods
pusha
inc
xlat
rolb
out
jnp
dec
push
stos
je
fimull
jp
mov
push
sbb
xor
jno
or
sarl
or
aaa
xchg
clc
out
in
adc
dec
aaa
outsl
lahf
jecxz
outsb
jmp
mov
mov
dec
push
dec
dec
dec
gs
push
cmpsl
sbb
adc
or
popa
mov
fwait
sub
cld
xchg
sub
sahf
dec
ficompl
adc
dec
invd
movsb
cmp
icebp
inc
cld
xor
cmpsb
xchg
insb
pop
mul
sub
mov
inc
fimuls
xor
pop
dec
or
das
movsb
lods
dec
inc
jo
or
xor
loope
and
repz
xor
add
je
push
mov
pop
lods
fcoml
inc
addr16
push
push
sbb
fwait
icebp
push
sbb
push
mov
add
xchg
sbb
xchg
fists
lahf
and
sbb
das
or
add
push
xlat
push
sbb
mov
jge
std
mov
idivb
push
inc
and
mov
sub
push
mov
hlt
test
sbb
push
lods
jmp
cmpsb
lret
rorl
aam
or
xlat
mov
cmp
pop
outsl
inc
pop
out
and
cli
movsb
in
inc
arpl
fsts
add
aaa
cmpsb
sbb
leave
mov
mov
cmpsl
ret
dec
push
dec
rolb
repz
adcb
cmp
pop
xor
mov
setns
cwtl
int3
out
testb
fisubl
aam
and
call
and
imul
jmp
mov
xor
lods
inc
decb
aas
nop
push
jb
test
jmp
test
cli
or
sub
je
je
out
shll
imul
hlt
repz
jns
sbbb
pop
add
mov
sub
scas
cmp
stos
cmp
pop
xchg
dec
and
add
addr16
inc
and
in
adc
jl
es
outsb
cmp
ljmp
in
xchg
and
jle
and
push
lahf
or
outsb
xchg
inc
call
or
mov
imul
enter
sub
pop
sti
xchg
mov
inc
out
sub
push
inc
xor
fdivrs
push
xchg
sarl
cmpsb
cmp
ljmp
push
loop
cmp
or
sbb
ja
mov
push
nop
mov
stos
xor
jmp
cmp
xchg
cmp
js
loop
movsb
cld
ret
push
add
push
xchg
mov
stc
cwtl
xchg
push
outsb
dec
lock
sarl
data16
dec
inc
movl
jae
roll
ret
icebp
dec
mov
dec
pop
dec
pop
cmpb
adc
inc
imul
dec
test
dec
cld
repnz
dec
imul
adc
adc
adc
dec
inc
xorl
xlat
mov
loope
mulb
mov
or
aad
push
sub
dec
xor
mov
je
ret
fiaddl
or
cmpsl
repnz
aad
xor
scas
inc
test
lods
push
dec
aaa
or
test
and
imul
clc
xor
jp
dec
jnp
popf
push
and
adcb
add
js,pt
sti
outsb
mov
std
in
and
or
imul
lret
dec
repnz
sub
cwtl
adc
push
movnti
daa
jge
lds
pop
push
or
push
dec
cld
add
adc
dec
prefetch
or
cmp
sub
jmp
pop
mov
mov
rclb
adc
pop
push
xchg
push
dec
enter
ret
cltd
aam
push
or
sbb
xor
stos
add
push
xchg
mov
add
mov
mov
push
and
ror
mov
mov
into
sbb
sub
stos
imull
push
test
add
sbb
cmc
ret
in
pop
stos
test
out
dec
lock
xchg
mov
not
lahf
ret
movsb
pop
fldenv
out
fidivl
mov
adc
or
mov
out
dec
sahf
add
and
sub
test
add
xor
cmp
add
cmpsl
call
aaa
mov
out
mov
cmpsl
xor
mov
push
aam
mov
lock
ret
mov
insl
shll
sbb
cmp
lahf
test
pop
icebp
mov
aam
cld
imul
mov
mov
gs
sbb
ss
xchg
enter
rcr
xchg
fs
hlt
mov
ja
cs
push
ficompl
scas
cltd
leave
ss
push
inc
idivl
cwtl
push
clc
push
loop
xor
sbb
mov
xor
stc
add
jbe
push
cmpsl
push
rclb
jb
dec
sbb
adc
loopne
sbb
mov
pop
sahf
inc
subl
stos
jecxz
pop
rolb
mov
fcmovnb
ljmp
xor
cmp
out
inc
pop
out
aam
je
cwtl
nop
fiadds
lods
or
arpl
jbe
sbb
imul
adc
push
jl
lahf
mov
xor
xor
adc
adc
outsb
movsl
mov
loop
or
inc
std
loopne
jo
cmpsl
xchg
push
data16
jo
sub
sarl
mov
xchg
dec
in
push
mov
in
test
xor
lods
push
dec
loopne
sarl
bound
cmpsl
cmc
sbb
mov
nop
cmc
fistpl
xchg
rorb
lret
lods
and
bnd
arpl
out
sbb
cwtl
cmp
mov
xor
adcl
adc
xor
mov
mov
aaa
in
sahf
xor
loopne
mov
jmp
add
lods
bnd
fistpll
data16
xor
push
jne
dec
sbb
lock
data16
imull
inc
dec
mov
insb
in
loopne
inc
cmpb
jmp
andb
cmp
mov
getsec
cmc
stos
and
xor
cmp
nop
push
add
cltd
push
ja
push
xor
fwait
cwtl
jmp
adcb
je
ret
jae
stos
stos
adc
dec
xor
sbb
adc
push
inc
cltd
repnz
std
jmp
addb
mov
aam
icebp
push
inc
inc
jge
inc
pop
sbb
lock
sbb
mov
mov
cmp
fcomps
sahf
in
adc
xor
and
inc
sti
add
nop
sub
mov
divl
rdpmc
add
mov
movq
int3
mov
stc
mov
popa
xor
sbb
and
jecxz
mov
ja
cmp
inc
int3
adc
inc
rolb
loope
ud0
and
sub
adc
adc
pop
negl
dec
pop
mov
call
push
les
ret
and
sahf
fs
and
cmp
lret
and
mov
mov
lock
idivl
inc
adc
lods
js
cmpsb
lods
and
movsl
test
push
ret
jge
xor
adc
push
mov
jae
jb
xchg
xchg
out
or
pop
test
scas
xor
mov
ficomps
aas
inc
sub
ljmp
jmp
shlb
imul
cmp
jb
push
sub
loopne
adcl
stos
rolb
mov
mov
adc
out
xchg
pop
jne
orl
lcall
xor
sub
inc
sub
push
pop
insl
or
mov
add
dec
jp
sub
sub
dec
mov
faddl
sbb
data16
jg
adc
push
flds
mov
adc
bound
insl
insl
push
rolb
adc
test
or
pop
nop
mov
xchg
fwait
in
adc
lock
add
outsl
xchg
cltd
lock
cs
ret
rcr
stos
or
andl
xchg
jnp
or
jbe
mov
in
push
addb
stos
xchg
and
jmp
pop
shlb
push
dec
push
and
jae
push
hlt
out
sub
loop
pop
je
aaa
popa
jp
mov
not
adcb
cmp
xchg
cmc
mov
lea
mov
or
sti
pushf
ljmp
stos
loope
test
loopne
call
fsubrs
xchg
xchg
xchg
aas
cmp
pop
in
push
lcall
inc
lods
insl
mov
pusha
inc
xchg
sbb
pop
sbb
mov
in
inc
push
xlat
pop
stos
insb
or
push
ljmp
test
xchg
fldenv
pop
add
pop
rcrl
inc
xor
cltd
scas
sarb
push
fidivs
lods
clc
and
lret
mov
pushf
or
sub
imul
inc
pop
inc
pop
dec
inc
xchg
and
sub
xchg
popa
pop
jb
sbb
bound
and
ret
mov
jno
std
lea
and
adc
xchg
out
or
icebp
add
push
rcll
ja
pushf
push
inc
push
pop
sbb
sti
sub
ficoms
pop
push
add
inc
dec
push
push
and
xor
inc
mov
scas
mov
push
mov
mov
lahf
in
jne
push
aaa
rcrl
add
push
inc
or
loopne
push
into
rolb
fists
push
rcrb
aaa
mov
cmc
cmp
out
aad
ljmp
cmp
mov
dec
sti
out
jbe
cmc
imul
test
sets
orb
push
add
add
lret
push
test
pop
rcrb
jo
sahf
add
icebp
outsl
or
gs
inc
flds
mov
outsl
mov
fildl
aas
testl
mov
mov
adc
cwtl
pusha
mov
loopne
pop
sbb
aas
sbb
jns
xor
jg
mov
mov
cmp
jb
mov
hlt
lods
cmp
inc
pop
mov
pop
sub
cld
lds
leave
imul
int
shlb
xor
je
sub
cmp
mov
imul
add
pop
movsb
lds
sti
xchg
sbb
adc
loopne
cwtl
scas
xor
xor
push
out
or
mov
pop
subl
negb
add
cmp
add
xchg
push
fisttps
mov
cld
adc
inc
dec
sbb
xchg
js
adc
in
jecxz
aam
fisubs
jbe
cmp
mov
testb
dec
add
push
push
into
mov
stos
mulb
xor
pop
nop
push
test
mov
push
mov
add
inc
bound
add
cld
mov
sub
dec
pop
gs
push
mov
xchg
or
lock
lock
jg
mov
call
jge
jge
inc
jno
in
jo
pop
out
jl
sub
aad
loope
cmc
lret
or
idivb
mov
cwtl
loop
outsl
mov
imul
repz
xchg
mov
loop
and
xchg
out
and
xlat
pop
or
push
sub
dec
imul
sub
fisubrl
fwait
insb
mov
adc
es
adc
dec
dec
add
mov
mov
mov
flds
fsubl
es
lods
cmp
fildll
inc
and
arpl
pop
outsb
lods
jbe
fs
add
jae
push
lods
or
aad
je
sbb
out
clc
inc
push
pop
push
dec
mov
xchg
cltd
mulb
mov
gs
hlt
add
stos
jg
ret
jle
push
mov
arpl
inc
pusha
cmpsl
popa
test
lds
jnp
xlat
mov
inc
sti
ja
andl
jne
sbb
push
push
jb
jge
ret
mov
hlt
cmc
movsl
mov
xor
xchg
js
movsl
adc
rol
mov
lock
xor
pop
push
mov
adcl
mov
add
fidivs
aaa
movsb
mov
stos
movb
sub
iret
dec
lahf
push
xlat
jmp
mov
add
loopne
imul
js
sbbl
add
inc
push
hlt
stos
or
les
outsb
pop
lahf
es
lea
dec
or
sbb
mov
jns
jae
adc
add
sahf
jns
inc
enter
jno
mov
xchg
or
xchg
dec
cmp
jle
push
test
repnz
ja
lret
mov
mov
add
pop
mov
add
mov
push
xchg
mov
mov
rolb
cltd
sbb
or
neg
jns
mov
push
iret
ficoms
sub
mov
and
fisubrs
dec
lea
in
cmp
mov
clc
jne
out
sub
rep
ljmp
jns
movb
mov
adc
stos
in
and
movsb
or
cmpsl
in
mov
fs
xchg
pop
adc
add
arpl
dec
sbb
inc
out
mov
aad
orl
arpl
nop
xchg
pop
and
sbb
in
xchg
lock
pop
mov
xor
jae
add
sbbb
xchg
xchg
push
mov
daa
add
cmpsl
and
icebp
sarl
aam
je
lock
jmp
sbb
xor
daa
addr16
xchg
mov
pop
mov
lret
or
ds
aas
mov
loop
sub
adc
lret
mov
movsb
loopne
inc
xchg
dec
lods
cltd
xchg
and
dec
pop
pop
clc
push
cmpl
repnz
loopne
movsb
push
ret
iret
xor
cmp
inc
push
ss
out
mov
imul
cmp
hlt
push
push
xor
push
in
add
loop
fcompl
cwtl
pop
cmp
mov
add
add
mov
xchg
jg
xchg
iret
dec
mov
add
ljmp
mov
adc
add
lds
xchg
js
fyl2x
popf
and
loopne
and
adc
or
cld
xor
stos
pop
dec
ds
push
lds
push
mov
dec
mov
xchg
jno
enter
int3
jo
push
mov
xlat
addr16
daa
adc
fs
mov
add
js
shlb
pop
push
leave
loopne
test
sub
jnp
or
cltd
xor
pop
cmp
inc
lcall
cmpsl
and
icebp
push
fidivrs
or
inc
mov
xorb
jg
arpl
icebp
enter
inc
aad
das
mov
xchg
xchg
mov
andl
lock
sbbl
mov
addr16
rcll
inc
bound
add
fwait
mov
jne
insb
mov
and
cltd
inc
mov
lods
cmpsl
orb
push
cmp
xchg
add
ljmp
dec
inc
jne
pop
pushf
jle
sub
and
mov
jnp
lcall
push
pop
std
pop
cli
xor
add
sahf
addr16
rol
pop
outsl
daa
hlt
mov
inc
ret
xchg
scas
lods
test
jecxz
xchg
leave
cmp
push
aaa
dec
leave
jle
fs
xchg
mov
subps
out
push
xchg
dec
cmp
in
dec
shrl
test
lret
repz
test
and
fsubrs
lcall
mov
sub
out
xchg
int
in
shlb
add
popa
rcrl
adc
ljmp
out
sub
gs
inc
pop
xchg
cld
push
push
scas
dec
xlat
sub
xor
loopne
je
jl
das
lea
jno
addr16
repnz
aad
xorb
ljmp
outsb
imul
lahf
push
hlt
out
mov
push
test
add
shrl
mov
push
test
or
add
mov
or
scas
test
push
loope
pop
popa
cwtl
repnz
jbe
push
daa
jo
fdivl
adc
bound
xor
sbb
loop
xchg
adc
and
cmc
adc
adc
sbb
add
loop
sub
or
movsl
pop
mov
mov
lock
test
mov
sub
mulb
xor
dec
sahf
clc
lods
addl
clc
mov
cli
lock
mov
imulb
and
inc
xor
mov
in
insl
cwtl
pop
jbe
fcoml
inc
and
in
stc
out
out
jae
dec
and
inc
mov
push
rcr
add
bound
pop
pop
cli
dec
mov
je
pop
aas
cltd
push
inc
scas
mov
roll
adc
dec
nop
or
sbb
movsl
dec
aaa
mov
dec
jp
jmp
repz
test
and
in
dec
out
cmpl
dec
mov
pusha
mov
cli
mul
sbb
flds
addb
aad
or
xor
xchg
or
je
clc
cli
sub
xchg
dec
inc
mov
addr16
sub
push
dec
fistpll
int3
push
aas
xchg
scas
fsub
stc
inc
fs
add
cmp
sbb
pop
push
pop
clc
push
insb
bound
sub
push
xchg
inc
inc
out
jle
push
cmp
jnp
and
adc
fisubl
clc
fs
mov
fs
stos
push
dec
jb
roll
jb
add
in
xor
dec
bound
dec
lahf
in
aad
fdivr
int3
mov
jns
addb
movsb
xchg
aam
nop
loop
push
insb
push
inc
sub
outsl
mov
dec
jae
sbb
movsl
pop
aam
cmpsl
test
xor
xchg
adc
inc
arpl
jp
aad
adc
sub
out
or
xor
fdivr
mov
push
sbb
inc
mov
ret
push
call
fwait
mov
cld
arpl
mov
out
adc
out
shll
test
push
sbb
inc
sub
inc
lods
adc
outsl
pop
fsubs
jne,pt
xor
ret
repz
xchg
cmp
mov
aaa
lahf
je
rorb
jbe
les
pop
mov
lock
sub
sub
sbb
jb
pop
mov
test
outsl
xchg
mov
lcall
cmpsl
sbb
mov
dec
cld
test
aas
lea
sbb
and
fdiv
lret
rcrb
ret
mov
fstpt
pop
test
add
orb
sti
or
dec
aam
dec
orb
adc
xor
xchg
adcl
push
movl
mov
add
jp
sahf
lahf
push
repz
sbbl
lock
hlt
dec
testb
hlt
int3
out
xor
jg
lret
pop
xchg
fnstcw
pusha
cli
rcll
rorb
daa
sub
jbe
adc
ljmp
or
les
aam
sbb
push
add
push
add
les
inc
xchg
or
push
inc
stc
and
xor
aaa
cli
mov
iret
rorb
pop
les
test
pop
sub
icebp
cmpsb
loopne
cltd
push
fcompl
xchg
mov
jne
ret
inc
or
es
or
mov
xchg
mov
cmpsl
bound
cmp
clc
jb
iret
sbbb
cmc
fs
push
js
mov
xchg
dec
pop
mov
inc
aaa
or
mov
rcll
push
xchg
movsb
iret
ret
je
push
nop
lods
sub
jne
and
add
ja
xchg
jp
or
orb
mov
jmp
push
adc
leave
pop
mov
xor
jg
call
into
and
movsl
mov
xor
insl
je
mov
sub
mov
sbb
jne
add
push
subb
idivl
add
sub
xchg
pop
out
cmc
insl
shrl
ficoms
lods
js
mov
test
jae
icebp
fldt
loopne
lcall
shrl
fstps
jb
jo
arpl
pop
xchg
inc
lods
xchg
fmulp
orb
shll
movsl
fdivrl
lods
repz
je
adc
mov
adc
ja
mov
mov
loope
jo
data16
cmp
xor
xchg
mov
xor
and
je
mov
daa
test
adc
jmp
cmpsb
inc
add
inc
in
fxch
inc
std
adc
inc
retw
sub
mov
testl
push
imul
mov
adc
fucom
scas
mov
pop
pop
sub
ret
sbb
fsubr
cmpsl
jg
xchg
lahf
adc
jmp
or
push
fisubl
inc
clc
pop
test
dec
enter
mov
stos
mov
jb
adc
xchg
pop
pop
rorb
pop
mov
js
sbb
and
push
scas
or
add
jbe
or
jp
dec
xor
ret
push
or
lcall
cld
ret
popa
fcoml
or
inc
dec
into
lea
inc
sub
xor
push
xchg
xor
xchg
xor
mov
inc
sub
in
shll
cmp
adc
xchg
or
sub
pusha
push
fisubs
movsb
pop
popa
adc
cmp
imul
aaa
add
push
jmp
mov
es
in
dec
cmp
imul
add
fstl
push
repnz
popf
fisubs
cmp
mov
or
mov
mov
and
xlat
stos
sbb
jne
fildl
pusha
sbb
mov
push
and
ja
jb
pop
dec
js
jg
popa
mov
cltd
add
shrb
or
out
lcall
bound
sahf
fimull
leave
mov
repz
loop
push
adc
sbb
xchg
sbb
sbb
gs
clc
xor
push
out
jb
or
adc
out
jbe
js
adc
or
mov
ficoml
and
sahf
pop
sbb
shlb
add
ficompl
and
mov
xor
sbb
loop
push
int
sti
push
inc
scas
or
aam
mov
stos
or
out
sbb
inc
iret
fcompl
add
hlt
aam
addl
xor
mov
scas
imul
test
shrl
adc
mov
aaa
jo
and
mov
mov
incl
xchg
jmp
mov
das
pushf
aam
orl
pop
sub
mov
test
sbb
movsb
lods
fisttps
jp
xor
lcall
inc
pop
and
xchg
or
mov
pop
fidivrl
mov
fistpll
pop
mov
pop
das
call
mov
mov
test
push
sti
or
push
dec
push
mov
iret
push
xor
jp
cmpsl
cs
xor
and
lret
jp
andb
cmp
fimuls
xchg
push
cmc
xor
pop
test
and
jp
ds
sbb
pop
dec
jmp
mov
push
lock
hlt
out
clc
add
jno
gs
jbe
mov
xlat
dec
or
repz
cmpsl
loop
and
das
daa
jnp
stc
mov
push
xchg
jp
jno
fs
adc
mov
mov
push
adc
hlt
push
icebp
insl
faddl
fwait
jg
stos
jae
add
cmpsl
shl
cltd
mov
ss
movsl
jo
mov
movsb
inc
jb
pop
mov
pusha
adc
les
and
xchg
sub
test
inc
mov
inc
jbe
pop
addr16
insb
pop
jo
bswap
iret
lret
jbe
aad
insb
jno
sub
push
pop
imul
sub
into
and
and
hlt
sahf
mov
mov
or
jno
mov
shrb
sbb
sbb
cwtl
stos
cli
adc
fsub
int
jecxz
xchg
in
arpl
cmpsl
cmpsl
and
out
enter
or
scas
aas
inc
adc
jp
inc
lods
mov
addl
inc
xor
mov
hlt
ds
jne
ret
or
cvtdq2ps
xchg
cli
push
cmpsl
inc
mov
lock
cmpsl
loope
adc
testb
sub
jo
lret
ljmp
in
into
hlt
xlat
cmc
jns
call
dec
test
outsb
outsl
mov
mov
inc
sbb
xchg
dec
pop
mov
iret
addb
pop
or
andb
movb
out
loopne
lret
loop
mov
mov
lcall
out
or
mov
xor
xchg
call
loope
loope
sti
das
stc
sti
ljmp
mov
dec
sbb
hlt
adc
xchg
or
loop
jmp
scas
push
pop
mov
and
add
jns
dec
lret
or
les
inc
adc
xchg
mov
sbb
pop
das
jno
dec
xchg
dec
add
adc
cmp
mov
xchg
sbb
jb
leave
negb
fistl
mov
stos
xor
inc
mov
mov
and
cwtl
lcall
sbb
outsl
mov
mov
dec
pop
int3
add
dec
or
mov
dec
out
dec
mov
adc
xchg
sbb
sbbl
shll
cmc
scas
add
mov
dec
pop
shlb
rorl
pop
sub
lcall
orb
and
fs
adc
xlat
lahf
dec
inc
xchg
jmp
lods
fs
mov
mov
ret
jno
xchg
xor
jnp
xor
mov
fidivl
ljmp
or
cmpsb
rclb
nop
addr16
mov
mov
fdivrs
mov
clc
push
andl
xchg
movsl
pop
into
xchg
addl
inc
mov
inc
cld
popa
cmp
pop
sbb
push
push
scas
cwtl
pop
mov
leave
add
lea
inc
mov
or
xor
and
mov
dec
pop
ret
cmp
adc
jb
cmp
js
dec
js
hlt
sub
outsl
repz
jp
sbb
je
out
ja
mov
pop
push
adc
jo
lahf
xor
popa
mov
jp
xlat
and
inc
xchg
lds
jno
jbe
or
fadd
mov
cmc
pop
xchg
xchg
mov
xchg
push
outsb
and
xor
pop
and
mov
lods
mov
jb
adc
add
aaa
dec
cld
inc
sbb
fs
shlb
dec
andb
adc
gs
sbb
int3
xor
push
ja
pop
test
ret
add
repz
cwtl
scas
test
xchg
movsl
loop
inc
scas
cltd
das
bound
loop
push
adc
lcall
mov
sahf
repz
or
sbb
loope
loopne
push
fldt
jbe
and
dec
gs
lock
sbb
int
jno
mov
cld
stos
mov
sbb
in
mov
sub
inc
push
push
jno
ret
repnz
out
pop
pop
pop
mov
push
xlat
jne
lds
dec
push
pop
mov
inc
or
sbb
xchg
addl
hlt
jmp
stos
lods
cmc
xchg
jle
sbb
int3
roll
mov
inc
and
bound
stos
lahf
sarl
cmp
inc
test
mov
out
or
cs
jb
lods
pop
shrb
add
jo
jno
adc
arpl
adc
pop
divl
rcll
jmp
mov
or
shlb
test
sbb
xlat
mov
fdivrl
cmc
sbb
sbb
adc
test
mov
cltd
adc
dec
fs
clc
sub
sbb
sbb
mov
std
das
and
or
into
add
rcl
insl
imul
mov
mov
scas
shl
mov
and
dec
mov
add
inc
mov
push
sub
repnz
and
adc
imulb
add
mov
leave
push
aad
or
jl
xor
sahf
xlat
and
pop
sub
pop
dec
insb
jns
xor
add
ljmp
movsl
lahf
fs
add
xchg
aad
repz
and
push
cmp
cmp
imul
xor
inc
repnz
mov
arpl
imul
test
inc
imul
push
mov
aad
fcompl
pusha
shrl
or
mov
dec
std
pop
jno
in
test
push
jns
loope
clc
shlb
addr16
and
and
sbb
outsb
dec
inc
pop
push
dec
hlt
fistl
pop
nop
xor
sub
int
dec
inc
fdivrs
movsl
and
sbb
imul
push
push
loope
xchg
shll
leave
add
test
clc
sbb
push
adc
shll
sub
sbb
stc
dec
push
sti
sbb
jecxz
or
mov
jnp
dec
dec
scas
or
dec
mull
test
push
jge
nop
dec
and
ljmp
scas
jno
cmpsb
jns
arpl
shr
fldt
cmc
mov
sti
dec
lret
out
pop
xchg
in
dec
sub
aam
adc
nop
mov
test
lock
and
lahf
shlb
sahf
stos
add
add
iret
add
scas
dec
cmpl
pushf
xor
pop
movsl
push
stos
es
mov
mov
dec
jge
mov
mov
jne
and
xlat
mov
mov
mov
ja
nop
inc
dec
mov
and
adc
dec
cltd
jo
fs
shlb
pop
ja
and
adc
sub
mov
icebp
insl
mov
hlt
xor
pushf
mov
fcos
insl
push
aam
xchg
push
mov
lds
mov
mov
outsb
jg
lock
add
push
adc
lret
cmp
adcb
and
sub
iret
adc
das
les
and
jb
xor
in
ftst
push
mov
mov
push
shll
mov
inc
or
add
and
aad
clc
pop
mov
aad
daa
sar
scas
in
sbb
push
data16
push
sbb
adc
shlb
fbstp
inc
mov
jae
hlt
push
push
shll
hlt
cmp
adc
and
pop
or
leave
push
test
push
loopne
push
inc
ds
dec
cmpsl
vpaddsb
fstpl
test
jmp
and
sub
int
and
push
inc
adc
movsb
mov
adc
aad
rolb
in
fwait
stos
inc
inc
pop
mov
ljmp
or
or
pushf
add
push
push
pop
mov
ljmp
pop
in
mov
lret
dec
and
inc
xchg
push
xlat
outsl
ret
pop
incb
es
sbb
dec
stc
sbb
aam
nop
mov
adcb
sbbb
stc
jl
scas
jnp
jecxz
neg
cs
inc
test
mov
add
adc
adc
sbbl
xchg
out
sub
and
mov
jecxz
xorb
iret
xchg
push
inc
lock
inc
mov
outsl
mov
fmul
add
jo
push
movlhps
add
into
mov
push
cmpsb
xor
dec
mov
mov
inc
imull
rclb
mov
hlt
inc
ret
xor
movsb
mov
add
push
mov
insl
pop
push
aaa
push
dec
dec
testl
inc
sbb
inc
mov
jne
cmp
xor
insb
sub
xchg
rorl
fldcw
sbb
cmpsb
push
ret
loopne
cmp
cmp
xchg
adc
stos
add
das
push
or
pop
pop
xorl
cmp
repnz
adc
push
addr16
add
dec
mov
fs
adc
pop
ficoms
cmpsb
clc
out
test
or
js
out
fs
dec
mov
or
pop
aas
sub
push
pop
adc
test
jmp
arpl
out
daa
out
and
je
dec
pop
push
adc
mov
jl
hlt
sub
and
mov
sbb
cmc
arpl
sbb
movsb
inc
or
xchg
xor
pop
cli
mov
dec
mov
xchg
mov
mov
pop
or
mov
leave
js
mov
pop
xchg
loope
mov
testl
in
stos
fwait
xchg
ret
dec
add
mov
ss
popa
nop
mov
dec
or
mov
cmp
xor
dec
xchg
push
jle
je
mov
pop
loop
ret
bound
adcl
xor
jl
fbstp
pusha
popa
push
xchg
push
add
inc
cmp
push
repnz
or
xchg
cld
pop
jecxz
fists
sub
movsl
jno
cli
or
inc
sub
psllq
imul
sbb
lods
xor
jne
insl
scas
or
mov
std
pop
shl
dec
lea
std
xchg
push
mov
push
xchg
push
imul
ss
inc
popf
lods
inc
dec
movsb
je
in
sbb
jns
adc
dec
adc
pop
in
sahf
add
mov
jb
hlt
fwait
add
inc
and
push
dec
mov
sti
push
xor
fs
add
cmp
pop
mov
xchg
xchg
mov
jg
dec
inc
adc
xchg
gs
popf
add
add
popf
sub
aam
in
loope
xchg
xor
mov
adc
xchg
pop
repz
icebp
popa
inc
inc
mov
adc
fwait
and
aas
cld
adc
add
sub
inc
arpl
mov
xchg
cmp
pop
jb
mov
adc
inc
xor
jno
mov
mov
jne
test
mov
adc
incl
insl
jnp
lcall
out
movhlps
add
and
das
test
push
adc
dec
je
dec
fcom
dec
imul
cmp
sbb
cwtl
dec
or
mov
xchg
inc
xor
fildll
mov
sub
test
mov
mov
jo
mov
cmp
std
cmc
je
cli
scas
jb
jp
add
adc
imul
pop
push
sub
mov
cld
rolb
loop
adc
mov
test
shlb
mov
shlb
int
testb
xor
jb
push
inc
mov
xor
cld
mov
xchg
push
daa
lahf
movsb
sbb
push
xor
lahf
lcall
ljmp
add
ret
ret
xor
xchg
dec
bound
loope
push
push
or
xchg
ret
jle
or
fwait
pop
cmp
cwtl
lods
cmp
sahf
mov
inc
xchg
and
dec
nop
rcrl
shll
adc
test
pop
into
std
int
dec
sub
fsubrs
inc
add
sti
pop
add
in
inc
iret
aad
pop
xor
lods
je
inc
and
jb
imul
insl
xchg
mov
or
je
or
out
daa
xchg
inc
mov
push
jecxz
aas
cld
inc
dec
mov
push
xchg
jecxz
or
pop
in
pop
add
inc
popa
in
and
jl
out
mov
aad
les
or
loop
push
sub
aaa
push
inc
iret
add
inc
pop
xchg
xchg
ret
add
fistl
inc
or
in
test
into
pop
mov
in
cmpl
repz
imul
cwtl
mov
push
mov
xchg
fiadds
sbb
je
js
popa
stos
gs
push
inc
and
dec
bound
sub
push
icebp
test
and
test
sahf
sbb
sub
add
lds
xchg
mov
push
jnp
cmp
push
sbb
jo
inc
mov
test
daa
xor
mov
int3
cmp
jmp
xlat
std
push
les
lret
sub
sub
iret
cmpsl
and
rol
cwtl
sbb
pop
jle
ljmp
xor
xor
loopne
mov
dec
jo
dec
hlt
lahf
rorb
xchg
dec
insl
or
adc
enter
xchg
mov
xchg
mov
shlb
cmpsb
xor
scas
es
adc
scas
pop
stc
or
js
mov
push
inc
jecxz
inc
movsl
movsb
aad
lret
lcall
loope
test
pop
mov
add
dec
mov
or
sbb
push
push
add
cmp
lcall
pop
jae
sbb
imul
mov
sti
push
cmp
jo
mov
fst
dec
test
rclb
push
out
xchg
notl
xor
incl
cltd
xchg
call
in
fs
enter
ficoms
rcrl
or
mov
or
jb
loope
push
imul
pop
xchg
xchg
push
ss
push
cmp
mov
cmp
push
test
into
or
movsb
mov
push
mov
dec
lret
cmp
icebp
lcall
mov
ret
cli
lret
inc
mov
lds
and
js
pop
and
out
cmp
sbb
cmp
inc
js
rcll
lods
adc
xor
jl
jns
jbe
jnp
jbe
loop
call
inc
in
je
push
sbb
and
dec
and
jne
adc
clc
cltd
insl
xchg
or
into
ret
daa
mulb
stos
jecxz
pusha
pushf
shlb
call
jns
mov
jb
pop
xchg
sbb
addr16
lods
mov
adc
pop
mov
and
jns
fs
cmp
jbe
testl
test
sbb
sbb
push
cmc
aad
fwait
cwtl
aad
dec
cmp
or
rorl
leave
adc
mov
adc
sbb
inc
clc
pusha
mov
mov
xchg
jb
xor
mov
loop
mov
mov
out
inc
xor
mov
pop
test
push
rcr
les
dec
sub
cmc
xchg
add
lahf
hlt
popa
sub
and
adc
cmpsb
add
mov
cmc
adc
jp
pop
sbb
fisubl
in
cmp
adc
mov
nop
dec
xchg
sbb
add
mov
cmpsb
je
inc
shlb
dec
adc
cmp
pushf
pushf
fdivrs
loop
sbb
dec
mov
arpl
mov
inc
jne
adc
push
jbe
dec
xchg
push
rclb
cmpsl
loope
mov
push
fldt
cld
inc
movsl
popa
mov
pusha
sbb
aas
push
adc
or
popa
test
cltd
ret
jne
cwtl
adc
cmpsb
in
nop
push
dec
jbe
jg
or
pop
pop
lock
inc
ror
xor
jno
inc
adc
daa
mov
mov
lcall
inc
mov
inc
jb
cmpsl
lret
lods
in
or
lcall
roll
sub
stos
sbb
jl
and
cmpsb
int3
popf
jns
dec
add
pop
loop
and
scas
dec
mov
jp,pn
in
imul
cltd
sbb
xchg
clc
push
xor
pushf
insl
sbb
inc
testl
hlt
cmc
jp
adc
push
fs
scas
ja
iret
adc
xchg
push
add
in
setae
fisubrl
cs
pop
shlb
xchg
adc
cli
mov
xchg
roll
lods
add
push
fbld
ja
add
add
push
filds
pusha
xchg
dec
fwait
imul
cs
or
enter
jne
fldcw
mov
xchg
or
add
sub
xor
xor
repz
push
lds
xlat
dec
or
rcrl
xor
vmovss
xchg
pop
pop
rcr
jae
lahf
inc
test
aam
jns
push
pop
int
addr16
pop
xchg
rorb
adc
cmp
iret
and
dec
xor
inc
xor
push
cltd
push
inc
or
xchg
repz
mov
subl
clc
dec
stos
mov
fdivrs
jnp
setae
jge
or
xchg
inc
push
pop
sbb
jge
jb
sbb
xor
iret
mov
pop
mul
fmuls
xchg
addb
rcrl
mov
mov
push
fidivs
in
fstpt
push
cmp
repnz
adc
push
mov
jmp
jb
loope
push
inc
add
mov
mov
cwtl
mov
imul
sahf
je
outsl
pop
add
or
js
pop
and
sbb
arpl
pop
aas
out
push
dec
xchg
cmc
gs
cmp
xchg
jnp
and
ret
stc
cmpb
push
enter
test
adc
shll
dec
movsb
ret
and
shll
fmuls
shl
call
sub
sub
and
xor
and
in
je
pop
xchg
push
test
jp
xchg
sub
fwait
notb
imul
cmp
das
icebp
dec
dec
xor
shll
inc
loop
push
fisttps
inc
xchg
clc
mul
push
cmc
test
adc
js
push
mov
and
inc
xor
xorl
dec
or
fs
add
lahf
das
jns
rcll
pop
dec
mov
lods
xor
shr
lods
arpl
or
repz
xchg
and
out
sbbb
pop
mov
xchg
adc
adc
adc
dec
mov
adc
and
sbb
dec
push
movsl
orl
mov
xor
lahf
ljmp
inc
xor
adc
mov
mov
loop
loope
les
mov
daa
aad
sub
scas
sbb
inc
add
fwait
jecxz
xchg
hlt
outsl
mov
das
test
rclb
rcll
sahf
in
push
fistl
lret
mov
call
les
push
add
xor
sbb
loope
xchg
cmp
sub
xchg
addl
bound
xchg
mov
ljmp
loop
into
inc
add
andb
jg
into
clc
hlt
mov
rorb
inc
pop
fstps
scas
lret
rcrb
sbb
fisttps
inc
and
jmp
xor
hlt
pop
addb
jae
mov
xchg
dec
aas
outsl
out
push
loop
add
loopne
and
cmpsl
andb
imul
mov
fbld
inc
notl
xchg
fimuls
jl
in
xchg
mov
sar
jo,pn
push
enter
pop
jno
add
mov
ss
cmc
jns
popf
pop
mov
lds
mov
push
add
xchg
mov
aam
out
mov
cwtl
cli
sbbb
jbe
dec
sub
inc
sub
push
xchg
push
scas
mov
imulb
pop
xlat
adc
pop
inc
inc
insl
shll
fs
jno
push
icebp
testl
jb,pn
mov
gs
hlt
insl
int3
pmaddwd
xorb
or
mov
pop
dec
dec
jge
icebp
sub
dec
push
adc
lcall
dec
outsb
or
fsubs
in
jle
mov
out
daa
mov
dec
movsb
adc
nop
and
adc
stc
rclb
inc
clc
xchg
xchg
xor
enter
lret
pop
rclb
fsub
xor
xlat
lods
pop
fwait
or
add
cmc
and
push
pop
fcomip
hlt
popa
lods
mov
cmp
ds
aam
pop
jbe
jo
sub
xchg
imul
sub
xlat
push
cmpsl
lahf
out
es
lahf
jg
insb
xchg
lret
add
inc
jne
idivl
dec
mov
add
dec
in
dec
cmp
mov
push
sahf
inc
pop
pop
sahf
mov
test
in
ret
fidivs
repz
inc
test
add
incl
mov
jge
cmp
dec
xor
sbb
ds
jns
sti
stos
mov
mov
lahf
or
push
test
xchg
int
ja
lret
ret
sbb
pop
xor
aaa
addr16
xchg
adcl
inc
xchg
loopne
xor
inc
stos
push
dec
and
ret
aad
addl
mov
sub
pop
dec
loope
stc
hlt
mov
js
dec
out
loop
sub
mov
push
jge
xchg
add
nop
call
and
cmc
sarb
pop
clc
mov
pop
lds
dec
out
in
fdivs
pop
addr16
and
mov
dec
mov
jmp
andl
sub
outsl
cmp
sub
inc
mov
fistpll
out
roll
mov
es
aaa
das
pusha
aas
jl
gs
outsl
test
mov
sbb
adc
ret
popf
int3
mov
leave
test
sub
movsl
imul
xor
hlt
cli
push
pop
and
into
orb
rclb
mov
into
dec
xchg
pop
insb
movsb
mov
popa
dec
add
sub
xchg
mov
adc
ja
push
push
andb
aam
fidivrl
mov
and
lods
sti
cld
pop
add
pop
aad
jb
pop
lods
mov
pop
aad
rcrb
push
adc
sub
daa
lret
adc
cmp
scas
or
push
jo
imul
fwait
sti
mov
add
xor
push
imul
xor
xor
xchg
push
push
jae
cwtl
pop
dec
push
mov
adc
pushf
and
popa
xor
into
pop
into
push
lods
cli
inc
fwait
or
movsb
mov
lods
int
pop
sub
sub
arpl
dec
enter
gs
jge
repnz
adcl
cltd
fstps
sub
icebp
icebp
mov
inc
cmovg
and
push
les
xor
jne
dec
repnz
sub
nop
adc
int3
inc
xchg
aas
ss
pushf
adc
daa
or
int3
inc
lcall
nop
pop
into
int3
push
popa
and
sbb
pop
orb
jns
test
rolb
xor
fs
out
sti
adc
out
add
xchg
xchg
pushf
sbb
xor
xor
push
cli
imul
das
mov
or
pop
pop
int3
add
push
aad
jle
pop
add
popf
testl
insl
xchg
out
lock
xor
leave
in
aaa
hlt
rcll
jbe
mov
push
add
inc
push
out
adc
mov
insl
shl
fisubs
daa
fwait
add
jb
jbe
xor
cmp
sbb
adc
sub
xor
xorl
popf
adc
into
pusha
imul
ja
ret
push
xchg
inc
fbstp
pop
push
mov
inc
sub
mov
sarb
add
mov
cltd
add
mov
adc
aam
shrl
mov
insl
push
outsb
mov
ds
shll
jecxz
test
cmp
fmuls
pop
pop
add
sub
jnp
packssdw
cltd
inc
lret
int
sub
sbb
pop
add
cmpsl
jle
mov
rorl
emms
mov
jo
jl
inc
jnp
aam
dec
dec
rorl
js
mov
dec
mov
adc
xor
mov
in
xor
hlt
push
mov
mull
adc
pop
leave
out
notl
push
xor
mov
andb
in
inc
push
dec
divl
xchg
xchg
adc
adc
sbb
data16
ret
ja
push
fcmovnu
jo
jae
call
inc
sbb
cmc
push
pushl
sbb
sub
mov
jmp
add
js
adc
test
aam
test
nop
ja
test
stos
mov
cmc
hlt
xchg
mov
add
addr16
adc
jo
loop
dec
je
shl
ds
and
push
movsb
jmp
sbb
rorb
jb
dec
shr
and
push
jno
mov
push
mov
ret
inc
inc
or
out
mov
mov
dec
mov
xchg
dec
icebp
iret
mov
inc
gs
test
call
test
dec
mov
lds
flds
xchg
sbb
xchg
mov
into
adc
pushf
jnp
rorb
dec
mov
pop
jne
push
push
arpl
dec
push
cmp
and
push
rcl
xor
xchg
push
imul
mov
add
mov
xchg
xchg
adc
rorb
je
daa
icebp
jo
mov
stc
scas
aad
or
data16
adc
andl
fwait
in
add
dec
int
push
sbbl
rcll
icebp
out
mov
adc
fs
add
je
cmp
adc
incl
mov
push
aad
sbb
mov
gs
repz
cmp
icebp
in
mov
adc
mov
jns
das
jb
mov
decl
ss
jne
and
je
add
adc
shrb
add
aam
or
add
repnz
inc
cmpsl
or
mov
push
mov
ficoml
jae
roll
mov
lds
ret
subb
pop
pusha
dec
test
xchg
and
sub
ret
out
add
cmpsl
and
rol
and
leave
xchg
fidivl
dec
mov
lcall
mov
xor
adc
scas
addb
adc
push
jae
daa
cltd
sarl
add
jg
in
jae
inc
cmp
mov
lds
mov
fwait
es
je
pop
movnti
mov
aas
add
ss
loopne
cli
test
nop
adc
repnz
and
add
xchg
and
push
add
adc
movsl
addr16
aaa
xlat
xor
mov
shrb
jl
jg
test
repnz
push
mov
pop
sbb
sub
sbb
mull
inc
test
movsb
sbb
outsl
sbb
les
push
mov
xchg
scas
or
adc
xchg
js
stc
sub
push
mov
orl
scas
add
dec
daa
mov
addl
mov
cmp
sti
lret
jne
or
icebp
lods
outsl
and
std
aaa
push
div
in
arpl
inc
aam
sbb
pop
push
cmc
imul
mov
dec
testb
scas
jno
push
dec
jb
xchg
test
movsl
mov
or
pop
add
mov
flds
add
adc
ret
shlb
sub
inc
xor
jns
and
movsl
lock
sub
cmpsb
hlt
into
daa
inc
mov
xchg
das
jo
clc
push
push
popl
jl
cmpsb
fsubs
pop
clc
imul
mov
outsl
nop
jmp
fstl
cmpsb
fld
jecxz
cmp
fcompl
shlb
mov
adc
in
stc
ret
jbe
into
push
stc
insl
xor
xchg
enter
ja
mov
cltd
mov
xchg
inc
cmp
inc
insb
sbb
loop
lods
mov
dec
dec
push
adc
push
negb
mov
movsl
inc
loope
out
cmp
sbb
cmpsl
inc
push
pusha
pop
mov
cmp
push
out
and
adc
push
push
mov
mov
ret
leave
and
rolb
int
pop
fucom
out
xchg
fmuls
fwait
xchg
enter
inc
dec
xor
xchg
ds
scas
lahf
cmpsb
jecxz
imul
or
addl
mov
adc
repnz
stos
pusha
push
fcomps
jmp
jge
jb
test
or
pusha
xchg
xor
fistl
inc
mov
loopne
fmulp
cmp
lds
inc
test
mov
stc
dec
push
filds
fs
hlt
testl
gs
sub
jl
inc
fld
inc
add
push
inc
mov
pop
andl
inc
outsb
jno
pop
xchg
adc
jle
hlt
adc
inc
mov
mulb
out
popa
daa
inc
and
add
notb
adc
shlb
inc
pop
mov
xchg
lds
inc
pop
xchg
lret
add
xchg
pushf
inc
movsb
test
mov
ficoms
push
adc
adc
ja
xor
leave
push
mov
loopne
mov
es
aam
adc
inc
addr16
add
fistpll
inc
xchg
and
test
jo
inc
and
outsl
das
add
and
jecxz
outsl
outsb
popa
dec
fwait
mov
push
ret
sbb
outsb
lahf
mov
inc
mov
dec
repnz
xchg
add
sbb
inc
iret
xor
loope
add
mov
mov
and
les
and
inc
outsb
xor
adc
adc
jle
hlt
adc
dec
mov
or
shll
inc
iret
aaa
add
adc
shrb
mov
loope
dec
inc
xor
xchg
push
jo
inc
or
out
push
mov
xor
not
inc
mov
push
adcb
xchg
jb
mov
inc
sahf
or
adc
jo
repz
rol
mov
and
jb
fbld
aaa
jae
les
and
sahf
or
rcrl
rcll
mov
jle
inc
add
sbb
addb
and
arpl
and
lret
jb
imul
inc
or
test
sbb
arpl
andl
adc
test
sbb
cmp
sahf
cltd
lret
adc
add
dec
sbb
sbb
adc
jno
xchg
sub
cmp
aas
inc
and
les
inc
les
shrl
xchg
or
cmpsb
cltd
push
pop
push
sbb
xchg
sbb
jne
sbb
out
rclb
popa
shrb
inc
je
push
sub
xchg
adc
daa
xor
jbe
aam
mov
mov
lahf
and
sbb
xchg
pushf
lock
stc
sub
xchg
cltd
sarb
push
sbb
mov
icebp
hlt
xchg
jb
adc
push
xchg
int
sbb
sbb
ss
mov
dec
and
jb
shll
and
aas
xorl
shlb
daa
test
les
mov
add
cltd
fldenv
clc
inc
push
andb
dec
out
addl
jae
adc
and
adc
adc
and
sbb
inc
mov
pop
jns
adc
je
inc
shlb
or
mov
adc
ret
repnz
pop
and
pushf
rcrl
cmpsl
inc
ret
xchg
hlt
and
dec
xchg
bound
push
add
and
add
and
inc
inc
nop
sbb
orb
loope
jne
les
inc
and
lds
sbb
jne
enter
inc
arpl
add
addr16
pop
int3
adc
xchg
jo
rclb
xor
adc
and
pop
mov
aam
and
ffreep
xchg
pop
mov
clc
xchg
inc
shlb
adc
xlat
push
inc
adc
xor
xchg
push
xchg
pop
and
incl
rolb
inc
xor
push
mov
ja
pop
lock
pop
fwait
adc
out
test
cwtl
jecxz
xchg
jb
xlat
inc
pop
shll
adc
jae
inc
sbb
xchg
sbb
inc
out
mov
adc
xchg
ret
jne
inc
xchg
rorb
add
imul
add
mov
xchg
inc
dec
fcomi
xchg
jno
shll
push
adc
xor
es
sbb
inc
push
ja
nop
mov
int3
popa
inc
lret
and
mov
or
inc
sbb
cltd
jno
xlat
sbb
xor
enter
and
mov
repnz
rcll
hlt
adc
push
ss
pop
fxch
inc
cwtl
bound
push
cmp
sbb
out
rol
xchg
mov
sbb
inc
push
jno
ja
rcrb
xchg
sbb
inc
push
jo
xchg
mov
dec
add
lret
lcall
cmpsb
sbb
faddl
cmp
sbb
adc
dec
stc
fsts
aam
mov
sub
pop
xchg
sub
dec
jle
cmp
push
and
outsb
cs
inc
mov
dec
scas
das
cwtl
sbb
cmpsb
sbb
fiadds
cmp
push
lahf
sbb
xlat
sbb
jnp
pand
jecxz
lret
sahf
sub
sbb
mov
fildll
sbb
pop
dec
adc
sbb
adc
jge
enter
mov
fcmovb
sbb
sub
int3
dec
mov
sub
push
fldcw
sahf
cs
sbb
mov
fildll
cltd
sbb
pop
dec
adc
sbb
adc
jg
enter
mov
fadd
pop
fs
dec
sub
into
dec
mov
or
push
loop
jge
fwait
sbb
cmpsb
sbb
fldl
cmp
sbb
dec
stc
ficoml
aam
mov
sub
sbb
sub
dec
jle
cmp
and
outsb
sub
loop
scas
cs
sbb
cmpsb
sbb
filds
cmp
pop
sahf
adc
dec
stc
fcoms
aam
mov
sub
push
xchg
sub
dec
jle
cmp
push
sbb
out
sbb
repz
lock
push
lahf
fwait
jo
out
test
scas
jnp
sbb
sub
sbb
adc
sub
sbb
dec
mov
sbb
ffree
sbb
dec
sub
les
xor
jmp
rolb
loopne
movsl
cltd
sbb
mov
jg
mov
jo
jecxz
sbb
or
dec
movsb
lahf
ror
das
movsb
sbb
popl
sbb
outsl
dec
add
sbb
and
mov
sbb
scas
jnp
sbb
sub
push
adc
push
dec
pop
sbb
add
stos
jl
lcall
cmpsb
sbb
faddl
cmp
sbb
adc
dec
stc
fsts
aam
mov
sub
pop
xchg
sub
dec
jle
cmp
push
sbb
jle
cmp
lret
test
int
shlb
call
fisubrs
push
sbb
xor
das
dec
add
sbb
mov
mov
xchg
dec
sub
int
mov
sbb
pop
sub
sbb
sub
sbb
lcall
xchg
sub
arpl
jl
sbb
popf
bnd
dec
mov
mov
xchg
dec
sub
iret
lahf
mov
pop
jne
xor
sub
pop
xor
leave
dec
cs
movsb
pop
dec
das
cwtl
sbb
scas
dec
ret
sbb
fisubs
add
inc
sbb
lahf
bnd
das
mov
sub
sbb
sub
sbb
xor
sub
sbb
dec
push
jge
sbb
jl
mov
int3
popf
bound
dec
dec
fiaddl
sbb
sub
jns
orb
jmp
fisubrs
push
sbb
xor
cs
sbb
dec
push
jg
sbb
jle
mov
into
lahf
bound
dec
dec
fadds
pop
and
fs
sbb
pavgb
test
sbb
mov
jge
mov
fldl
aam
adc
inc
sub
into
fcomip
movsl
adc
inc
mov
pop
cltd
fnsave
push
jnp
inc
sub
bound
add
inc
inc
mov
adc
es
scas
stc
iret
push
ja
test
cmp
or
loop
out
incb
pop
adc
xchg
es
sti
dec
aaa
lock
movhps
movsl
jmp
cmp
pop
xor
push
sub
push
xor
xchg
movsb
push
push
fcom
cmp
rcrb
jno
shlb
loop
sub
sub
add
xchg
and
leave
lods
jnp
mov
add
jecxz
push
mov
pop
icebp
xor
sbb
cmovns
dec
and
add
push
outsl
out
das
jne
mov
jae
pusha
loope
inc
mov
fstpl
stos
pop
repnz
nop
outsb
ds
aas
ret
xchg
inc
scas
aam
stos
movsb
and
jp
dec
jno
sub
push
pop
mov
les
push
dec
and
and
pop
in
xchg
hlt
push
inc
call
bound
fidivl
loop
daa
push
enter
test
pop
in
fs
push
mov
fs
mov
filds
inc
inc
sub
idiv
mov
pusha
clc
mov
add
jnp
or
dec
es
push
sbb
out
xchg
pusha
js
rorl
mov
adc
sbb
mov
adc
mov
dec
jno
out
push
pop
mov
cmp
push
or
dec
shll
and
mov
cli
rclb
push
lea
push
or
clc
adc
mov
stos
into
lods
popa
in
dec
jle
xor
rorl
repnz
xchg
cmp
add
pop
inc
sbb
and
cmp
shrb
pop
mov
lahf
fnstenv
mov
out
out
and
cmpsl
add
push
scas
aam
repz
push
cmp
push
test
mov
xor
sub
adc
aad
mov
repz
push
aaa
test
fstps
outsl
sub
push
repz
repnz
dec
xchg
pop
adc
xchg
mov
adc
cmc
test
dec
icebp
push
dec
push
fdivrp
pop
dec
and
push
xor
outsl
xor
mov
sarb
lea
scas
add
popf
adc
aam
lods
push
int3
addb
test
in
adc
outsb
ret
cmp
xchg
lcall
inc
jle
test
inc
bnd
subl
sub
jbe
push
xor
fiadds
clc
adc
int
scas
dec
adc
in
adc
mov
inc
inc
aam
inc
pop
adc
jnp
fdivl
inc
push
aam
inc
push
faddl
and
inc
mov
ljmp
jb
aas
adc
insl
fsubl
test
scas
mov
shl
adc
mov
call
jno
adc
addr16
daa
jecxz
idiv
mov
adc
lock
shr
pop
mov
out
adc
xchg
xor
sbb
mov
enter
out
pop
inc
test
sbb
into
adc
scas
pop
sbb
jp
and
stos
mov
or
mov
sub
xchg
jae
loopne
call
push
jecxz
jne
add
rorb
mov
stc
call
addb
jg
js
mov
aas
hlt
aam
adc
jne
das
fs
dec
shrb
cmp
fsubrl
bound
sub
idivb
pop
sub
and
xor
jne
scas
cli
dec
xchg
insl
cmp
leave
out
fcmovnu
push
inc
cmp
sbb
mov
sbb
mov
movsl
loope
pop
inc
es
jge
and
ja
fidivs
xchg
xchg
push
fidivl
inc
imul
pusha
push
and
ret
push
icebp
lock
sub
and
cmp
jno
fisubl
out
xchg
push
test
xchg
mov
fbstp
scas
ja
xor
scas
mov
push
push
test
fdiv
ja
mov
jno
adc
js
cs
js
and
js
cmp
cmpsl
lcall
mov
ror
xchg
ror
insb
sbb
jg
mov
call
lret
jb
in
je
cmpsb
push
lea
sbb
mov
out
or
das
xor
xor
repnz
mov
ficomps
out
lahf
imul
or
and
enter
fdivr
add
mov
pop
jo,pn
icebp
sbb
pop
pop
mov
aam
out
xchg
test
rcrb
aad
stc
cmp
dec
nop
ja
mov
xor
sahf
adcl
repnz
shll
lcall
mov
xchg
jb
xchg
push
cmp
loopne
arpl
fldenv
es
pusha
mov
addr16
fnsave
movsl
cmp
aad
push
adc
push
sarb
sbb
xchg
shll
adc
iret
ja
push
dec
xchg
out
jno
push
mov
push
xor
sbb
sub
and
sbb
aam
mov
xor
and
jno
icebp
jb
lcall
les
inc
cmp
pop
loope
je
jae
jg
inc
cmpsl
lods
jne
popl
cmp
sbb
les
subb
mov
dec
rcll
push
shlb
ror
rorb
dec
jno
daa
mov
rcr
push
add
ja
push
in
inc
adc
sbb
add
xchg
movsb
and
xchg
mov
xchg
bound
jl
dec
lds
cmp
not
test
lahf
xchg
outsb
add
push
lret
fnstenv
jo
pop
add
dec
pop
pushf
mov
ss
xchg
jb
push
scas
xchg
pushf
outsl
adc
add
rcrl
daa
ret
add
fs
leave
add
aam
add
push
movsl
inc
leave
jg
mov
fbstp
xchg
ret
push
adc
inc
jle
in
hlt
bound
sub
adc
test
repz
add
inc
leave
fcoms
adc
mov
sbb
into
loop
out
xchg
sbb
push
inc
jb
adc
xchg
xchg
enter
adc
pop
stc
filds
push
jne
inc
add
push
add
sbb
into
dec
sarb
sbb
cmc
push
adc
enter
lret
les
mov
adc
call
loop
ja
imul
hlt
dec
jle
lret
iret
loopne
mov
and
dec
sarb
mov
faddl
cltd
inc
xlat
sbb
fcomps
sub
jo
cmpsb
xchg
adc
stos
pop
sbb
inc
into
jns
pop
filds
hlt
je
mov
pop
dec
dec
fstl
test
dec
mov
push
adc
ret
sahf
and
dec
mov
daa
adc
inc
add
inc
and
stc
dec
xor
jg
lahf
adc
mov
sub
lret
mov
add
add
lcall
gs
mov
ret
rol
es
jo
cwtl
sbb
fcomps
and
sbb
mov
xchg
bound
inc
mov
repnz
mov
push
andl
sub
sbb
xchg
sbb
out
clc
xlat
arpl
xor
sbb
insb
inc
ss
lcall
xchg
cmp
mov
sbb
sahf
jo
es
sbb
sub
cs
xor
push
and
sarl
mov
xor
dec
jp
inc
or
lahf
dec
pop
sbb
or
lcall
and
je
and
xchg
sbb
loopne
int
add
hlt
lret
enter
add
inc
adcb
and
sbb
cmp
inc
sbb
fwait
orb
scas
sbb
push
xor
sbb
daa
ret
inc
sbb
js
fxch
dec
push
jnp
test
cmp
dec
sub
xchg
adc
lds
rclb
cld
dec
insb
test
hlt
push
mov
xchg
jl
mov
inc
adc
adc
repz
bnd
das
add
cmpsb
add
dec
dec
fdivl
sbb
je
daa
xor
dec
test
and
inc
fstps
out
cltd
inc
pop
sbb
lret
cmpsl
mov
sbb
dec
inc
jns
add
mov
fildl
push
sbb
jecxz
fiaddl
shl
xchg
bound
mov
sub
leave
fisubrs
bound
and
sbb
jle
inc
pop
and
push
xchg
lds
adc
dec
shlb
push
nop
inc
push
cmp
adc
or
pop
xchg
mov
adc
iret
push
xchg
xor
push
xor
inc
push
shll
or
fs
dec
sbb
int
inc
iret
xchg
sub
pop
adc
scas
lahf
fwait
pushf
xchg
es
pop
es
xor
jbe
shr
mulb
push
xor
lock
shrb
and
sbb
rorb
pushf
out
and
mov
cmp
and
rclb
or
push
add
push
jo
imull
adc
inc
icebp
cmpsb
push
and
xlat
dec
push
cmpl
in
push
adc
cltd
shlb
lret
cmpsb
pusha
xor
ds
add
or
cmp
pusha
pushf
cmp
mov
das
in
fwait
mov
jne,pn
mov
inc
lods
xchg
les
and
imul
mov
faddp
xchg
mov
jne
lods
in
idivl
mov
popa
in
fstl
cld
js
ret
and
lods
xor
push
push
adc
shll
test
dec
popf
xchg
mov
and
pop
push
push
adc
cmp
push
test
xor
das
push
out
repz
add
adc
repnz
mov
imul
cwtl
pop
add
push
fwait
mov
stos
pushf
xor
push
notb
pop
insl
aaa
aaa
jae
pop
movsb
negl
dec
int
addr16
in
dec
push
fisttpl
push
sub
xor
iret
xor
dec
or
push
xlat
into
jmp
mov
inc
push
sbb
pop
lds
dec
ja
cmpsl
xor
push
adc
pusha
data16
les
jmp
mov
je
xchg
dec
loopne
dec
mov
xlat
test
cmpsl
and
rcrb
push
jb
add
daa
cmpsb
leave
es
and
movb
test
je
idivb
testb
adc
xchg
and
or
jbe
adc
ja
adc
xor
movsb
hlt
cs
mov
aam
push
rclb
mov
jp
sub
cltd
ja
fists
mov
sub
jae
clc
test
push
push
pop
push
decb
xor
xchg
push
inc
js
xchg
mov
xor
or
outsl
mov
das
xchg
pop
sub
xlat
cli
push
outsl
cmpsb
sti
adc
fucomi
push
dec
cmp
ds
cs
jb
or
pop
xor
adc
xor
mov
jmp
push
push
xchg
and
repnz
je
or
pop
inc
mov
mov
add
rcrb
in
inc
and
pop
adc
jecxz
movsl
aas
ss
jg
or
scas
lret
xchg
mov
sub
lahf
cmpsl
cmp
pop
and
mov
popa
pop
movsb
jl
and
fists
sahf
mov
sub
lea
jno
pop
test
out
push
mov
sub
pop
push
aas
push
push
hlt
cmp
jne
outsb
mov
rcrb
out
ja
shll
xchg
fs
inc
mov
or
notb
and
shr
add
outsb
jnp
mul
fndisi(8087
mov
push
call
ss
xchg
xor
fs
pushf
mov
cmp
leave
adc
in
std
insl
addr16
cmc
dec
inc
jle
xlat
xor
mov
cmp
imul
xchg
test
lahf
inc
push
mov
dec
dec
adc
jno
and
xchg
dec
mov
dec
mov
loope
lahf
test
cld
out
outsb
sub
pop
ss
fwait
pop
inc
push
and
int3
pop
cmc
lret
mov
loope
xor
je
push
sub
mov
push
aam
leave
xchg
psubusw
push
or
in
fisubrl
add
adc
sbb
shrl
xorl
ljmp
bound
xchg
dec
mov
adc
add
push
ret
bound
xchg
mov
cld
adc
cltd
insb
bound
pop
testb
rol
outsl
push
frstor
mov
xchg
in
repnz
dec
mov
hlt
adc
ds
into
jle
int
and
js
scas
and
adc
movsl
mov
and
adc
mov
imul
out
mov
xchg
call
andb
dec
test
lds
in
gs
push
fadds
jg
lds
push
rorb
adc
add
outsl
inc
dec
push
ds
adc
xchg
or
mov
adc
test
sahf
mov
lds
lret
movsl
es
dec
les
add
mov
test
out
xor
mov
testl
mov
rcrb
or
add
jno
xchg
int3
mov
and
add
fs
stos
mov
xchg
pop
and
fwait
rorl
nop
movsl
jbe
test
and
mov
sub
jmp
pop
ds
imul
sbb
mov
je
insl
push
adc
add
or
xchg
and
xchg
test
ret
add
ret
leave
cmc
fmull
xor
aam
lahf
popa
insb
inc
lods
inc
pushl
pop
jmp
xchg
adc
jb
leave
and
cmc
mov
pusha
fistps
and
out
enter
out
adc
push
insb
fcmovne
mov
sub
mov
sub
pop
lods
mov
mov
clc
fwait
rcrb
xor
rorb
movsl
xchg
shlb
xchg
movsb
push
adc
cmpsl
inc
fistps
lock
jmp
adc
sub
fidivl
and
fnstsw
push
pop
push
xchg
inc
and
aad
ret
into
mov
dec
stos
test
ret
popa
ret
loop
xor
aad
mov
je
xchg
mov
add
fwait
js
push
push
inc
lret
fadd
ljmp
jbe
js
loopne
mov
push
dec
push
in
and
jb
sub
inc
mov
mov
lret
ret
mov
aam
pop
repz
es
in
arpl
addb
adc
outsb
cmp
pop
stos
push
les
push
addr16
push
xchg
xchg
aam
aaa
mov
les
xchg
dec
ja
add
mov
jno
hlt
rcrb
inc
adc
stos
into
mov
adc
addr16
lcall
je
sarb
sub
push
mov
inc
cmc
sti
movsb
gs
push
inc
push
gs
insb
pop
jno
push
xor
inc
push
jbe
mov
out
mov
dec
push
ja
in
pop
adc
push
cmp
adc
ljmp
push
add
cli
add
push
xchg
jnp
test
es
rorl
inc
jae
cmpsl
mov
mov
and
cmp
xchg
xor
push
pop
call
jmp
push
stc
push
adcl
inc
subl
xchg
sti
lcall
shll
mov
xor
xchg
mov
imul
fiaddl
out
fcomps
shll
mov
and
mov
fs
inc
jb
xchg
hlt
fwait
mov
mov
or
fisttps
loop
add
xchg
cmpsb
aaa
push
xchg
fcomip
pop
mov
clc
push
dec
add
adc
mov
adc
outsl
mov
jns
sub
test
sarb
movl
mul
pusha
into
cvttps2pi
sbb
cli
mov
jg
jo
jae
jg
adc
sub
and
sbb
dec
lret
loop
xchg
sti
or
insl
mov
inc
loope
nop
sbb
and
lret
cmp
sub
jnp
xchg
je
mulb
arpl
mov
stos
loop
cmpsb
pop
aad
add
daa
rcr
sub
cmp
mov
dec
jae
push
outsb
add
ja
pop
push
shlb
ret
dec
mov
test
daa
adc
add
lcall
data16
mov
orl
add
rcll
aad
shlb
adc
loope
rcll
push
mov
popa
adc
inc
xchg
fcmovnb
nop
xchg
rolb
bound
mov
jno
outsb
add
shlb
mov
mov
iret
arpl
hlt
pushf
xchg
es
ret
cmp
pusha
sahf
inc
cld
jmp
mov
inc
ffreep
fs
jo
jecxz
jecxz
mov
daa
adc
jle
cmp
leave
inc
and
int3
xchg
je
jp
xor
cltd
pop
push
inc
bound
adc
andl
cltd
push
out
ret
repz
push
pop
int3
sub
mov
cmc
inc
cmpsb
inc
pop
into
hlt
add
mov
imul
ljmp
in
push
aam
adc
les
xchg
out
mov
mov
push
sahf
rol
and
xchg
rolb
add
cs
pop
adc
xchg
sbb
add
xor
es
jge
aam
sub
adc
push
dec
dec
push
push
adc
add
ss
pop
adc
push
sbb
arpl
ret
adc
loop
test
popa
stos
fistpll
push
push
lcall
mov
lea
mov
mov
fwait
scas
cmc
adc
ds
push
add
cmp
push
loopne
mov
out
in
ret
les
aad
dec
add
loop
xor
loop
xor
push
or
cmc
scas
and
sub
aam
xor
jae
in
repz
adc
out
cmp
dec
cmpsb
xor
xor
xchg
test
cmp
test
call
push
mov
shll
inc
adc
inc
mov
jecxz
popa
loop
adc
push
inc
neg
and
ret
ret
dec
cmc
pop
fcomps
mov
pop
mov
sub
fwait
jl
rorb
outsl
adc
ja
xor
mov
popa
xchg
mov
mov
mov
cmp
bound
inc
add
je
sahf
outsb
push
ret
int3
test
aam
xor
fdivs
sub
out
dec
rclb
push
inc
mov
jno
ss
mov
xor
push
xchg
fucom
xchg
repz
shl
xor
mov
daa
outsl
scas
push
push
or
test
addr16
leave
inc
maxps
rcll
cltd
aad
xchg
inc
inc
cmp
mov
jge
inc
dec
mov
xchg
push
pushf
pop
xchg
movsb
cmp
mov
adc
xchg
fcoms
or
or
xor
dec
pop
push
xchg
fstpl
xchg
push
cmpsb
push
and
push
fsts
test
xchg
dec
stos
frstor
and
fmuls
divb
dec
pop
ja
jno
es
outsl
add
je
popa
inc
jb
hlt
push
or
or
inc
stc
add
sti
jns
cmp
lret
repz
xchg
and
test
andb
arpl
push
repnz
cmpsb
push
repnz
xchg
xor
jnp
out
idivl
mov
jg
push
jb
mov
xchg
xor
es
hlt
mov
adc
inc
repnz
and
icebp
imul
lahf
mov
push
jno
into
sub
and
pop
xor
push
jb
test
add
adc
inc
dec
inc
leave
fsubl
mov
test
fs
lret
push
leave
mov
clc
repnz
and
lret
out
test
adc
push
pop
xor
jmp
push
inc
les
mov
mov
push
fmull
dec
sub
fstl
cmc
xor
inc
cmp
dec
cmpsl
and
mov
sar
xorl
sbb
repz
scas
push
mov
imul
je
jmp
idivb
lahf
xchg
xor
movsl
mov
jnp
pop
dec
mov
ret
pop
jb
test
push
xchg
inc
xchg
lods
stos
push
jb
xor
inc
mov
xor
ret
jecxz
adc
inc
inc
sahf
movsl
ret
cltd
inc
add
inc
mov
xor
xor
test
aam
cmp
xor
mov
xchg
cmp
aam
popa
dec
sub
pop
xor
iret
pop
cli
shlb
add
jb
hlt
movsb
mov
cld
loop
scas
ja
lock
test
sbb
dec
add
rolb
shlb
adc
add
mov
jb
mov
xor
stos
popf
negl
cmpsl
pushf
pusha
jbe
js
in
ss
stos
inc
or
testb
lock
and
xor
add
cmp
movsl
or
call
cmp
push
mov
xchg
loop
rclb
je
enter
movsb
or
xor
data16
add
pop
add
xor
mov
mov
movsb
ss
mov
imul
imulb
sbb
adc
fistl
jo
repnz
inc
push
outsl
cmp
out
aad
imul
inc
invlpg
icebp
xor
mov
mov
data16
pop
jo
cltd
pop
stc
mov
rorb
mulb
in
mov
xchg
jl
ficompl
sbb
movl
rcpps
js
jmp
pusha
mov
jno
cld
xor
insb
mov
int3
and
lods
mov
mov
in
add
cmpsl
inc
xchg
jp
push
sub
mov
daa
xorb
adc
and
inc
pop
andb
jg
inc
sarl
frstor
lcall
shlb
push
push
mov
pop
cmpsb
add
adc
add
js
or
std
movsb
dec
jo
mov
sub
lret
push
push
fs
movsl
mov
roll
xchg
add
jbe
and
push
shlb
sbb
cmc
jg
jg
push
xlat
jp
xchg
pop
pop
lahf
js
mov
js
mov
xlat
mov
fs
out
pop
push
xchg
dec
notl
inc
fnsave
lods
xorb
gs
dec
insl
imull
add
push
or
lea
mov
addr16
add
mov
scas
std
nop
mov
xchg
lds
jg
testl
jno
paddb
addl
mov
xchg
pop
add
aaa
adc
jne
aas
movsb
or
call
dec
push
cmp
mov
push
mov
mov
lcall
mov
outsb
cmp
pop
xor
and
das
push
or
faddl
dec
pop
loop
mov
pop
cs
lret
xchg
add
andb
sbb
fcomps
cs
push
cld
dec
je
xlat
mov
cltd
xchg
mov
add
lret
nop
jne
xor
inc
inc
adc
push
mov
cwtl
jge
filds
out
fisttpl
push
mov
lods
in
jnp
or
test
inc
in
mov
adcl
js
inc
daa
fsts
adc
xor
xorb
sbb
lea
adc
push
shlb
js
jecxz
dec
jo
fidivl
jae
mov
sub
stos
jge
out
adc
dec
mov
pop
add
call
cmpsb
sbb
les
mov
leave
push
ret
cmpsl
inc
xorps
pop
icebp
outsl
pop
jg
add
inc
cmc
hlt
mov
adc
aaa
les
fs
push
or
push
shl
repnz
das
xchg
fisttps
test
jg
pop
or
push
bound
pop
and
pop
mov
xchg
pop
jo
gs
jnp
jb
and
mov
aaa
shlb
adc
mull
movl
add
dec
test
test
dec
push
mov
inc
ficoml
cmp
hlt
rorb
mov
xor
xor
shlb
jg
xor
xor
mov
cmp
xor
daa
movsb
push
fidivrl
dec
xchg
jns
loop
dec
and
test
mov
loopne
cmc
sbb
jle
adc
mov
lock
push
mov
sub
cmpsl
mov
jecxz
dec
movsb
mov
loopne
testl
xchg
pop
lfs
add
push
lods
jecxz
or
xchg
je
js
rolb
xchg
mov
push
inc
mov
push
sbb
push
jb
add
mov
insb
ret
aam
jno
mov
adc
mov
cmp
rcr
adc
sbb
lock
mov
or
hlt
pop
orl
stc
xor
jecxz
repnz
pop
cli
push
cmp
adc
stc
gs
ret
gs
xor
pop
and
dec
outsl
frstpm(287
mov
sub
shlb
mov
lods
cli
movsb
pop
icebp
pop
ficoms
mov
sub
push
push
sbb
mov
push
push
mov
jl
fsubrp
xorl
cmc
mov
ljmp
ss
push
push
fisttps
jmp
pop
ret
push
dec
pushf
mov
add
xor
mov
push
mov
jmp
mov
ret
lock
jg
fcomps
icebp
jns
mov
mov
pop
in
sub
addb
adc
pop
pop
add
inc
aaa
push
pop
stc
xor
push
push
or
jns
roll
push
mov
movsl
jbe
inc
stos
push
add
es
inc
push
mov
flds
dec
scas
cmp
icebp
and
inc
and
cli
adc
addr16
adc
mov
arpl
adc
xor
jb
push
sub
mov
cs
and
mov
shrb
inc
inc
outsl
jmp
mov
mov
pop
mov
push
lock
das
cmp
cmpsb
add
add
sbb
cmc
pop
sub
test
xchg
mov
xchg
test
jg
scas
icebp
jb
enter
pop
lret
sub
inc
cmpsb
lock
daa
push
ficomps
and
cmp
rcl
fnstcw
iret
mov
or
rclb
jae
stos
push
pop
cld
sub
or
ja
push
lret
mov
adc
repz
movsb
and
imul
mov
cld
xor
mov
mov
das
movl
pop
lea
mov
outsb
mov
xor
or
xchg
pop
pop
inc
mov
pop
jmp
push
aas
fistl
and
jo
pop
add
add
sbb
xchg
mov
pop
fdivrl
push
cltd
lock
dec
int3
add
rolb
xor
pop
aam
sub
add
inc
pop
cmova
scas
mov
push
adc
and
mov
cmpsb
push
pop
add
or
jl
pop
stc
out
je
pop
adc
enter
aad
test
and
and
dec
cli
add
push
mov
jb
ja
in
mov
pop
add
dec
sub
pop
repz
jle
add
test
psrld
or
mov
lcall
sbb
or
xor
pusha
ret
push
adc
bound
or
dec
jbe
pop
in
jecxz
jl
sbb
jne
lret
fstps
addl
paddd
je
or
divl
insl
shr
gs
daa
add
test
inc
loop
cmp
scas
pushf
movsl
xchg
shrb
add
in
jbe
fmul
xchg
out
subb
nop
adc
sub
gs
jmp
out
inc
test
or
outsb
fldt
pop
cmp
xchg
sub
mov
test
aaa
shlb
push
inc
mov
loope
cmpsl
xchg
sbbl
das
mov
sti
add
xor
rorb
add
jmp
jnp
pop
loopne
aad
test
lods
and
into
dec
lods
jp
dec
cs
push
mov
mov
cld
pop
in
and
stos
add
fs
sbb
pusha
xor
dec
and
pop
incl
ror
or
jo
or
dec
push
or
push
or
insb
or
push
inc
cmpsl
lahf
dec
fdivp
insl
mov
xor
shl
nop
inc
je
dec
in
xchg
stos
add
ja
push
dec
mov
jl
in
and
xchg
inc
jb
fwait
cmp
mov
jno
in
or
sbb
cmpsb
sbb
dec
or
dec
xchg
fs
ja
sbb
lcall
imul
jo
jl
arpl
bnd
js
adc
mov
add
pop
and
js
push
dec
jnp
lret
xchg
outsl
sbb
pop
shrl
addb
or
in
aas
mov
loop
push
xor
jnp
cmp
nop
and
sar
jge
shlb
push
ficompl
and
repnz
imul
rorb
inc
fwait
pop
testl
sbb
sbb
andl
cltd
or
push
lret
aas
sub
push
jns
int
fs
push
loopne
outsb
lcall
adc
push
sbb
sbbl
xor
sub
call
sbb
and
inc
inc
pop
cmp
pop
and
push
fstl
push
movsb
push
pop
jecxz
je
or
jae
add
lods
imul
xchg
push
roll
sbb
adc
stc
cmpsl
mov
inc
jbe
imul
lcall
sbb
dec
push
lods
sahf
and
inc
jmp
pushf
clc
cmp
and
xor
rolb
xchg
jo
test
stos
sub
sub
inc
or
in
sbb
mov
inc
jo
mov
addr16
jl
jb
mov
dec
gs
ficoms
int
jecxz
mov
and
outsl
inc
inc
push
sub
imul
outsb
inc
push
subps
pop
pushf
scas
add
negb
ret
les
arpl
sbb
in
ret
cmp
call
dec
rcr
mov
sub
pop
in
scas
xor
mov
repnz
dec
push
mov
xor
pop
push
mov
jo
insl
jp
jmp
xor
out
lret
add
shll
push
stos
in
pushf
scas
pop
xchg
cmpsl
xor
or
dec
mov
cmp
nop
dec
sub
xor
inc
sub
movsl
cmp
ja
mov
xor
dec
inc
popa
sbbb
test
or
lock
fs
pop
aam
or
and
and
mov
js
and
mov
push
int3
push
pop
out
das
ds
xchg
mov
xor
dec
mov
mov
mov
outsb
in
repnz
inc
ret
jecxz
push
sbb
dec
mov
scas
ja
jno
negl
jno
stos
adc
and
jno
lcall
popf
in
clc
xor
jecxz
clc
sub
add
lods
insl
gs
inc
mov
xchg
mov
daa
lret
sub
rcrb
and
mov
jno
pop
sbb
or
dec
push
mov
cli
cmp
js
sbb
gs
add
mov
adc
jg
adc
icebp
bound
fucom
add
dec
xchg
cmc
orl
mov
jns
xor
aad
push
pop
push
sti
mov
jne
xor
ljmp
and
test
xorl
mov
adc
nop
dec
or
icebp
mov
not
bound
cmp
or
mov
pop
insl
add
sub
mov
notl
movsb
and
push
xor
xor
push
pop
xchg
jns
sbb
jle
insb
loopne
cmp
jle
dec
sub
ja
sub
push
cld
push
xlat
stos
pop
ja
movsl
fidivs
mov
in
clc
xor
mov
fcmovnbe
inc
inc
pop
es
sub
and
lcall
and
dec
pop
mov
iret
mov
inc
jl
icebp
xor
out
insb
ja
add
fld
ret
pop
and
sbb
loopne
or
jb
int3
pusha
sarb
cmp
stos
imul
bound
pop
push
shlb
cmpsl
mov
fistps
test
ret
and
imul
pop
mov
psubusw
push
loopne
add
push
test
mov
mov
out
push
mov
mov
lcall
cld
jns
fdivrs
inc
or
xchg
je
pop
out
jae
jo
mov
clc
inc
and
xchg
xor
mov
loopne
mov
push
dec
jae
inc
mov
repnz
popa
pusha
push
xchg
nop
js
rcll
lods
frstor
or
lea
movsl
xor
add
dec
pop
add
iret
gs
stos
jno
sbb
into
lahf
push
mov
and
dec
aas
fwait
mov
aad
or
sti
cmpsb
xor
andl
push
ja
hlt
pop
outsl
sub
adc
xchg
insb
mov
mov
mov
fstpl
outsb
sbb
adc
leave
xlat
iret
imul
int3
xchg
leave
push
fs
imul
lods
inc
cmpsb
insl
adc
scas
rcrb
fwait
and
pushf
sbb
imul
repz
pop
and
mov
sbb
sub
jbe
out
dec
mov
hlt
sar
or
xchg
pop
inc
loope
xor
loop
inc
repz
ret
aas
sti
jge
ret
movsb
and
insl
jecxz
test
push
gs
xlat
cmp
adc
xchg
in
push
mov
push
div
ret
imul
and
in
out
adc
in
sbb
or
cmp
clc
adc
arpl
fists
sar
outsb
mov
jae
ljmp
pop
dec
cmc
mov
sbb
mov
out
or
loopne
mov
rorl
aaa
js
jbe
sub
push
scas
push
hlt
dec
jne
add
inc
sub
push
sbb
cmp
mov
popa
adc
xchg
jno
sub
sub
punpcklwd
push
into
push
aaa
adc
daa
mov
push
icebp
popl
dec
xor
mov
and
push
and
and
push
inc
nop
enter
cmp
sub
pop
dec
and
icebp
pop
into
daa
pop
push
das
cltd
rclb
aam
xchg
xor
add
xlat
push
call
jge
inc
fs
push
js
repz
sarl
lds
int
loopne
incb
sbb
ss
mov
xor
mov
or
jbe
add
mov
sub
inc
orb
or
iret
fbstp
adc
push
inc
xchg
fs
cwtl
mov
sub
outsl
pop
jecxz
shlb
push
xchg
lods
arpl
inc
psubusw
test
pop
inc
ljmp
pop
push
adc
lock
pop
stc
xchg
push
test
in
sbb
movsb
xor
or
xor
fists
aaa
sbb
mull
jo
iret
cwtl
xor
xor
xor
jns
jle
outsb
outsl
daa
cmp
shll
jb
jge
adc
movups
cmp
stc
stc
daa
inc
jno
fs
mov
loop
mov
or
mov
movsl
inc
jae
test
mov
mov
adc
push
loop
jns
jo
xchg
dec
cltd
js
ficomps
out
clc
mov
aad
iret
cmpsb
popa
inc
imul
cmpsb
aaa
mov
and
add
adc
outsl
add
jecxz
repz
shl
aam
jp
test
pop
rcll
mov
pop
clc
mov
incl
cli
push
cs
dec
push
ljmp
adcb
sbb
lock
cmpsl
pop
je
push
pop
je
mov
roll
cmp
xor
add
pop
adc
sarl
cmpsl
push
mov
sub
inc
testb
lods
rorl
daa
adcb
cltd
stos
in
arpl
movsb
dec
cmpsl
test
mov
xor
xchg
fistps
fwait
and
add
pop
xor
or
dec
dec
shrb
mov
pushf
sbb
lret
test
fisubl
adc
movsl
lea
fwait
in
sub
out
arpl
mov
mov
sub
jle
inc
pop
cmpsb
mov
and
push
fsubl
and
in
notb
cmp
xchg
lret
jo
ret
mov
mov
lcall
dec
in
mov
xchg
or
pop
add
pusha
loop
pop
bound
jno
xor
xchg
sub
jg
data16
cmc
dec
fcmovb
jle
pop
push
cwtl
push
sti
stc
fists
aaa
pop
dec
cmp
jge
jns
sbb
lock
jmp
or
dec
daa
loopne
lret
mov
pop
lock
cmp
int
movsl
sbb
notl
popa
mull
ror
sbb
sbb
jae
addr16
lock
sbb
adc
sub
adc
add
pop
ret
ljmp
add
pop
mov
or
push
int3
push
out
std
xchg
mov
scas
xchg
outsl
shrb
clc
mov
sub
dec
out
mov
mov
test
jne
mov
xlat
jno
lcall
out
inc
xor
outsb
repnz
fisubs
repnz
fcoml
mov
jo
sub
mov
pop
xor
ret
cmp
or
lret
cmpsl
push
int3
mov
sbb
outsl
or
aam
lds
mov
icebp
xchg
add
mov
jmp
or
and
cltd
sub
ret
test
xor
rep
mov
orl
xchg
or
jg
xor
xchg
mov
pop
mov
push
insb
lock
imul
imul
sub
cmp
adc
and
pop
out
mov
inc
std
lret
mov
test
pop
js
push
or
mov
dec
sar
jno
lret
mov
push
jecxz
insb
out
xor
xlat
add
pop
rep
andl
adc
mov
lahf
and
cmp
xchg
popa
mov
jb
push
loopne
push
sub
fcompl
or
fs
mov
pop
clc
aad
pusha
push
mov
add
jg
stos
xchg
pop
mov
and
int
out
pop
add
xchg
push
xchg
dec
push
xacquire
bnd
cmc
cmp
cmp
xchg
in
rcr
jle
cld
push
mov
dec
out
xor
pop
sbb
pop
sbb
ret
pop
mov
xchg
arpl
jg
sub
aam
adc
icebp
pop
dec
fwait
jl
mov
mov
cmpsb
or
dec
gs
scas
sar
sub
hlt
fdivrl
xor
mov
xchg
sbb
dec
fidivrl
in
or
push
jns
retw
push
sbb
jg
push
test
cmpsb
jl
cli
pop
add
dec
mov
adc
jmp
fwait
push
fs
aad
pop
andl
cmp
cmp
sarl
cmp
xchg
cmp
jle
fbstp
xor
mov
add
xor
push
inc
fdivs
or
mov
cmpsl
inc
xlat
gs
test
jp
pop
and
add
aad
sbb
sub
aas
or
imul
xor
xchg
mov
jecxz
xchg
cs
xchg
std
dec
cmp
jae
sub
and
or
lret
ret
jl
ret
dec
push
rcr
inc
idivl
adc
hlt
fistps
ds
js
sub
jl
clc
es
pop
adc
push
jle
imul
sbb
or
xchg
mov
imul
icebp
push
int
inc
sbb
push
aaa
out
mov
lds
out
jmp
test
jne
test
push
cmc
adc
fistpl
aaa
jbe
or
sbb
enter
pop
orb
xor
mov
and
dec
add
addr16
dec
inc
out
and
les
and
cmp
push
cwtl
inc
filds
repnz
mov
arpl
xor
mov
mov
out
add
adc
out
aad
adc
in
inc
repnz
mov
inc
aaa
lds
mov
dec
insl
push
push
xorl
int3
sahf
aam
mov
and
sub
test
icebp
stos
leave
pop
inc
jb
rcll
mov
iret
arpl
cmp
imul
inc
das
jg
or
inc
mov
xchg
push
xor
fdivs
xor
fcoms
push
lret
test
lock
scas
enter
incb
jae
fbld
movsl
push
inc
mov
ss
out
adc
jle
xchg
dec
add
jg
xlat
xor
mov
mov
pop
xor
es
nop
icebp
dec
enter
mov
cmc
rcll
jle
mov
inc
xorl
jbe
add
aam
nop
mov
sbb
jae
push
test
pushf
mov
cmpsb
cmp
mov
cwtl
rcll
mov
jnp
add
mov
es
arpl
rcr
dec
cmp
gs
jp
pop
xchg
aad
mov
scas
subl
rcll
jb
sub
inc
aas
fmuls
sbb
repz
jne
movsl
aas
inc
add
push
add
cltd
lcall
push
adc
pushf
sub
push
pop
daa
inc
jp
push
aas
shrb
xor
in
inc
mul
pop
ret
sub
and
shr
inc
idivl
mov
pop
adc
sar
jo
push
mov
push
cltd
mov
bound
mov
jecxz
add
xchg
sbb
dec
mov
cmp
aad
jg
arpl
mov
or
push
sbb
ja
cmpl
mov
xor
xchg
daa
sti
jno
js
push
adc
out
aam
cmp
clc
inc
arpl
cmp
lock
or
mov
mov
mov
add
xchg
lds
and
jne
loop
fists
pusha
insl
daa
fs
loopne
mov
push
in
imul
arpl
push
pop
lds
outsl
push
pushf
shl
push
ljmp
addl
inc
ret
or
pop
andb
out
sub
lds
adc
pop
push
push
xorl
jne
add
mov
call
loop
cmp
jnp
pop
cmp
inc
or
jb
sti
inc
aam
arpl
shrl
psubsb
xchg
xchg
es
cltd
pop
loopne
es
enter
das
jb
inc
xchg
sub
ss
out
push
mov
pop
and
cmpsb
fs
push
and
and
sbb
inc
add
movsb
cmp
ja
pop
rcl
jle
sub
into
jne
rorb
push
clc
dec
lods
hlt
adc
and
cli
sub
mov
and
push
inc
test
loopne
push
jb
jno
sahf
rcll
xchg
push
repnz
sub
inc
mov
push
icebp
sahf
fisubrs
and
ret
shr
sbb
xor
fisubs
inc
push
push
repz
inc
pop
inc
mov
add
lea
fscale
xlat
push
lock
aas
shrb
push
and
xchg
fs
or
mov
mov
outsb
jne
and
or
inc
mov
mov
jp
jnp
test
movsl
push
iret
cld
cld
mov
leave
loopne
xchg
and
test
lret
jno
test
jb
loope
fistpll
jle
add
or
inc
int
leave
dec
jne
pop
pop
aaa
jge
notl
sbb
adc
call
mov
pop
in
hlt
cmpsb
int
popf
jecxz
inc
insl
ja
sbb
xor
pushf
fistl
inc
sbb
inc
popf
repnz
cmp
jae
gs
aaa
test
sahf
add
and
aam
mov
jl
xor
fs
jmp
cmpsl
add
mov
cmp
imul
cmpsb
adc
gs
mov
pop
sbb
pop
hlt
daa
xchg
push
or
lds
xor
push
xor
jae
or
cmpsb
and
xlat
int
pop
pop
mov
xor
mov
arpl
pushf
xor
hlt
pop
jbe
push
mov
divb
or
das
cmpsb
stos
xor
nop
xchg
push
and
jge
mov
sbb
rol
jp
lods
icebp
jno
loope
mov
push
adc
faddl
sti
cli
sub
mov
sti
jae
das
cmp
push
sahf
nop
fcmovnbe
dec
inc
inc
scas
inc
mov
xor
scas
xlat
push
movsl
cmpl
and
stos
push
iret
out
add
sub
sub
mov
dec
push
dec
pushf
mull
adc
stc
push
xchg
dec
in
scas
and
xchg
vpextrw
lds
or
mov
das
pop
add
xor
les
mov
addr16
std
inc
adc
cmp
movsb
addr16
jne
mov
push
leave
les
pusha
inc
inc
insb
pop
repz
cld
sti
daa
inc
pop
xchg
fiadds
js
xchg
aam
ja
cmp
mov
push
jns
aad
adc
scas
add
jl
dec
inc
adc
std
push
xchg
lods
rcrl
inc
inc
add
movsb
xor
or
testl
jne
xchg
das
and
lods
mov
inc
jno
xor
xchg
nop
loopne
lds
jg
pop
lock
stos
push
gs
fsub
testb
je
inc
jg
shl
add
mov
daa
pop
das
hlt
stc
lds
loope
lret
xor
jp
out
fwait
mov
xchg
dec
mov
out
mov
xor
push
enter
xorb
pop
sbb
xor
or
js
add
pop
pop
std
or
push
cmp
out
xchg
imul
push
inc
movsb
mov
pop
fldenv
pop
das
add
and
cmpsl
xchg
cmp
inc
dec
cmp
data16
sbb
das
popf
fimull
jae
dec
popa
cltd
lret
comiss
dec
inc
pushf
scas
xlat
cld
not
mov
repz
inc
lret
out
xor
jbe
sbb
shlb
jle
mov
jbe
mov
push
push
push
sbb
cmp
or
mov
pop
inc
popf
int
jnp
dec
adc
add
sbb
les
adc
or
xor
mov
fstpt
test
adc
add
push
sbb
cmp
jae
in
imul
sbb
scas
xlat
or
add
aad
test
inc
leave
sub
sbb
cmc
add
push
xor
dec
adc
push
sbb
sub
les
jb
pushf
test
repz
cld
add
loope
es
mov
add
pop
adc
mov
xorb
fdivl
cmc
insb
fs
or
stc
dec
sub
clc
dec
dec
inc
ds
movsb
dec
lods
push
xor
xchg
scas
xchg
ss
sbb
mov
inc
inc
insb
shl
lds
push
push
jno
aas
mov
sub
rcll
or
rdpmc
add
jnp
bound
lods
or
mov
std
mov
addl
dec
je
add
mov
xor
mov
fmuls
adc
das
test
icebp
inc
or
ja
push
pop
add
in
mov
xchg
imulb
push
int3
push
add
lahf
icebp
pop
jle
lock
es
sarb
dec
push
jae
lcall
and
insl
push
mov
add
outsl
dec
xor
cld
popa
xor
repnz
xlat
data16
inc
shlb
cld
push
popf
adc
and
mov
ljmp
sbb
push
out
addl
mov
out
sub
or
lcall
jg
inc
cmp
mov
jge
push
and
push
ss
xchg
cmpsl
mov
andl
iret
imul
push
pop
pop
loop
mov
push
ret
outsl
mov
aaa
subl
mov
sbb
adc
sbb
xor
fmul
mov
pusha
ljmp
repnz
rorl
mov
and
or
mov
scas
repz
sbb
adc
xchg
cmp
jbe
jb
xchg
push
jb
in
adc
cmp
mov
repnz
or
sbb
adc
xchg
xor
mov
adc
ljmp
scas
arpl
fs
xlat
in
fiadds
ret
cmp
in
mov
movsl
add
enter
loop
add
stos
je
mov
hlt
loope
cmp
add
test
test
clc
ja
mov
jae
pop
lea
adc
adc
cld
inc
addr16
movsb
rolb
xchg
test
cmc
pop
xor
sub
dec
jnp
adc
dec
dec
push
leave
lods
add
jae
jnp
add
enter
popf
imul
adc
outsl
cmc
leave
push
xor
xchg
adc
inc
xor
scas
movsl
pop
sbb
xor
ja
or
xchg
pop
pop
popa
fbstp
daa
je
test
adc
scas
stc
cmc
jle
sub
push
movsb
rol
fcomip
outsl
into
and
adc
cld
out
xor
and
pushl
faddl
loop
and
adc
adc
push
cs
aaa
jo
leave
xor
inc
lods
cltd
sahf
popa
rep
push
cmc
lock
cmp
inc
push
and
and
call
sub
jnp
movsb
jo
cmp
jbe
add
xrelease
adc
repz
push
pop
ja
dec
fadd
cmp
cmc
sub
nop
xchg
test
push
rorb
repnz
fisubrl
lahf
mov
movsl
inc
aas
dec
pop
stos
sar
bound
in
pop
aas
je
mov
std
mov
mov
push
fadds
mov
mov
test
inc
push
pop
inc
in
cmpsb
rorl
cmpsl
inc
mov
add
cld
jmp
outsl
orl
cli
aaa
bound
movsb
fbld
ret
lcall
cmpsl
repz
fisubrl
or
inc
adc
notl
aad
fcoms
push
sbb
adc
faddl
ja
fnstsw
movsl
push
xchg
add
popf
add
sbb
loopne
add
je
in
fldenv
sbb
add
inc
and
jnp
jl
mov
popa
pusha
shlb
pop
pop
fmuls
push
sbb
jbe
stos
inc
push
adc
divl
jnp
xchg
xchg
sub
ja
jb
orb
xchg
andl
in
mov
fdivs
push
cbtw
jmp
sub
bndstx
inc
movsl
xor
arpl
jmp
gs
mov
sub
xor
aas
loopne
mov
add
jns
push
int3
aam
jne
int
loop
cmpsl
add
frstor
rcrl
lock
repnz
sub
xor
sub
sbb
and
push
das
or
adc
pop
push
push
pop
xor
or
mov
out
and
cmpsl
dec
fs
test
and
sub
scas
outsb
mov
add
or
sbbb
in
push
push
sub
jno
jno
shrb
dec
lcall
dec
test
mov
cs
outsb
pop
mov
jns
scas
rorl
pop
outsl
mov
sub
lods
lea
push
xlat
lcall
inc
adc
push
int3
jl
cmp
and
xor
adc
mov
ss
addps
inc
es
sub
inc
rcrb
add
jecxz
push
xchg
call
and
cltd
dec
pop
jmp
mov
mov
cltd
insb
pop
pop
xchg
adc
and
adc
inc
sbb
or
pop
test
adc
inc
jae
pop
in
xor
out
out
mov
outsb
sbb
inc
dec
add
loopne
and
loopne
test
inc
popa
sbb
cmp
movsb
mov
loopne
mov
push
and
push
mov
cmp
push
jmp
dec
sahf
cmc
aam
adc
pop
rcrl
mov
lds
jne
dec
inc
fucomi
xor
push
test
pop
les
xor
pop
je
add
cmp
repnz
loopne
movsl
stos
pusha
inc
lcall
fwait
out
sub
inc
cltd
mulb
add
insb
sbb
pop
repz
stos
notb
aas
out
dec
fnstenv
insl
pop
and
mov
xor
mov
inc
fcos
aam
and
out
es
dec
icebp
mov
pop
or
cmc
add
mov
stos
les
dec
jl
mov
in
push
and
pop
out
loope
daa
scas
iret
in
nop
push
dec
inc
ret
xchg
push
pop
ljmp
dec
aam
sarl
lret
add
jne
push
punpckhbw
idivl
out
clc
hlt
jno
pop
lea
pop
imul
fwait
mov
aad
push
roll
popf
dec
outsl
mov
icebp
movsb
add
cmpsl
adc
adc
xchg
and
push
mov
cwtl
xchg
aad
jnp
xlat
arpl
scas
arpl
xor
loop
movsb
pop
lods
rcll
negl
push
sub
and
lahf
adc
ficompl
das
fisttpll
shr
xlat
je
stc
fsubr
mov
negl
jle
test
insb
push
pop
andb
fwait
lods
lcall
scas
inc
in
xor
sbb
lret
in
jg
call
fst
fmull
pop
jo
cmp
stos
in
adc
xchg
inc
stc
sub
push
adc
cmpsl
mov
sahf
cmpsb
subl
cli
lds
inc
popf
repz
mov
adc
inc
iret
cmp
sub
loopne
mov
jbe
push
xor
inc
out
xlat
mov
jno
call
popa
popa
jno
push
xchg
mov
ja
jb
push
and
sbb
and
add
pop
arpl
dec
ret
loope
mov
imul
pop
fsub
mov
sub
adc
mov
sub
sti
orb
or
cmp
cmpsl
shlb
cmovne
mov
stos
add
xor
daa
add
jns
das
xor
aaa
pop
and
inc
pop
mov
dec
jno
sahf
mov
add
repz
mov
push
inc
rcl
push
inc
add
push
lret
xor
push
mov
cs
mov
gs
fisubrl
mov
adc
add
sub
jmp
int3
mov
jb
and
cmc
insl
adc
lock
daa
testb
imul
cwtl
rorb
cmp
aas
push
mov
arpl
sub
cld
test
fldenv
push
and
mov
push
andl
xor
mov
sbb
add
insb
and
roll
cld
xchg
jnp
addr16
or
int3
popf
push
or
mov
pop
add
lods
pop
sahf
ds
mov
sbb
sti
add
jbe
nop
push
xchg
push
test
sbb
push
or
test
cmp
das
shlb
adc
sub
inc
mov
or
xor
popa
in
sbb
test
into
addr16
shl
dec
lcall
add
sbb
pop
mov
push
add
jnp
push
gs
and
test
dec
add
in
std
lds
xor
out
mov
pop
loopne
or
mov
add
mov
or
cvtps2pi
or
mov
mov
push
sarb
insl
shlb
stc
dec
or
pop
cs
jns
pop
mov
xor
aad
fcmovnb
inc
push
xchg
idivl
mov
arpl
jp
ljmp
jo
cmp
jns
mov
or
push
rolb
dec
mov
in
add
iret
fdivs
test
out
jns
es
xor
xchg
push
add
inc
imul
mov
or
push
fsubrs
mov
lret
jnp
cmc
push
into
and
xor
xor
fidivrl
inc
es
sbb
leave
sbb
jp
fcmovnu
pushf
add
enter
mov
sub
jne
call
push
loopne
push
adc
cmpsb
ret
push
movb
roll
mov
jnp
vpackssdw
dec
inc
lods
push
das
ss
adc
adc
addb
fdivr
imul
jbe
inc
ja
repz
outsl
adc
xchg
mov
jge
dec
out
pop
pop
lcall
mov
mov
cmp
test
push
scas
int3
ja
cmpsb
jg
and
inc
lret
ds
roll
xchg
shll
push
cmc
mov
push
test
loope
aas
and
and
dec
push
jp
inc
adc
add
sub
pop
pop
cmc
dec
jg
push
call
pop
cmp
fisttpl
cmp
es
and
pop
imull
icebp
out
add
aam
rorl
mov
lret
jecxz
das
sub
int
je
nop
xchg
outsl
subb
inc
pop
xchg
test
jns
fcmovne
mov
int3
dec
xor
inc
addr16
sahf
jns
idivl
xchg
push
jg
int3
add
vmread
rcr
mov
imul
aaa
add
pop
data16
pop
or
arpl
bound
repz
mov
mov
jl
std
rcrb
orl
or
dec
pop
lock
scas
les
inc
sbb
lret
test
mov
push
jnp
sub
aad
repnz
outsl
push
insl
lret
je
movsb
ret
notl
xor
push
pop
mov
int
ja
lock
pop
sub
or
jp
add
cli
leave
inc
inc
xchg
push
push
sub
stos
adc
add
imul
inc
jecxz
xchg
mov
cwtl
mov
pop
stc
cmp
js
decl
add
adc
negb
das
and
mov
xchg
dec
xchg
movsl
pop
divl
mov
xor
mulb
cmp
pop
push
and
add
and
xchg
xchg
and
lcall
or
sbb
ja
popf
dec
xor
sahf
daa
inc
lahf
or
pop
xor
push
or
dec
add
lds
xor
pop
jno
push
cmpsb
sub
cwtl
cmp
jge
dec
adc
incb
outsl
inc
inc
ret
dec
sub
inc
adc
mov
shll
xchg
sub
add
imul
add
into
iret
sub
xchg
mov
jbe
adc
mov
mov
lret
add
sti
shrb
sub
lods
mov
out
insl
lret
dec
jp
dec
jg
mov
fisttps
jae
sbb
push
xchg
sbb
pop
jge
shll
adc
and
jns
pop
and
jecxz
add
test
fldcw
mov
ud1
arpl
push
mov
inc
sub
mov
mov
cmp
cmpsb
test
hlt
jbe
into
push
into
jge
int
test
inc
loop
out
push
aam
mov
mov
inc
sti
pop
xchg
or
push
mov
cmp
sub
pop
dec
mov
pop
ljmp
aad
loopne
and
xor
les
ss
lods
dec
cmpsb
rclb
rcrb
pop
fisubl
push
mov
and
rcll
push
push
jp
adc
mov
add
sub
pusha
add
inc
lock
inc
sub
out
rcll
loop
xchg
pushf
ror
and
inc
push
push
sarl
pop
cmp
lret
adc
add
rorl
mov
ret
jne
inc
mov
mov
fldenv
lcall
scas
sbb
jl
movsl
cmp
lods
into
mov
das
sub
xchg
or
lret
pop
pop
dec
scas
push
ret
popa
mov
daa
cmpsb
in
xor
jnp
call
sti
and
shrb
add
imulb
sub
arpl
push
int3
xchg
out
jae
outsb
in
sbb
das
movl
orl
sbb
mov
imul
je
test
pushf
dec
clc
pop
call
loopne
mov
rcrl
scas
mov
xchg
jb
sub
jb
sarb
xor
dec
pop
mov
mov
mov
jge
dec
sub
push
sbb
mov
mov
push
lods
or
sub
cld
pop
cmp
aam
pop
sub
sub
dec
loop
dec
mov
hlt
into
leave
pop
mov
jnp
in
pop
push
push
mov
test
jne
enter
fldl
or
adc
mov
bswap
dec
or
imul
adc
mov
stc
stc
add
and
adcl
jge
leave
loopne
and
jo
push
xchg
push
push
xchg
xchg
mov
js
jl
call
push
inc
pop
pop
push
jmp
xor
jb
aad
subl
xor
ja
dec
mov
sbb
pop
add
inc
ja
shlb
rorl
or
or
push
pop
test
das
aaa
and
cs
fistl
outsb
sbb
pop
xchg
dec
addr16
das
or
insl
stc
adc
adc
pop
sarb
and
jns
or
xchg
scas
scas
sub
dec
cmp
data16
mov
negb
pop
xchg
cmc
push
xchg
mov
push
or
xchg
ds
inc
sbb
xor
in
fldcw
in
jnp
and
fldenv
xor
aas
push
sarb
jecxz
sub
jmp
pop
or
sub
cmp
movsb
xchg
add
fwait
loopne
xchg
icebp
sbb
pop
push
inc
and
arpl
push
ja
inc
push
xor
repnz
dec
inc
mov
andb
mov
xchg
and
jo
jne
jbe
xchg
je
or
into
pusha
inc
sub
and
lcall
adc
pop
loope
jge
inc
orb
sbb
pop
cmp
out
sti
mov
fadds
shll
sbb
cmpb
adc
cld
mov
mov
mov
out
fld
imul
mov
sub
jnp
sub
xchg
clc
mov
mov
ja
les
xor
xor
cmc
add
cmpsb
inc
cmp
leave
sbb
mov
popa
rcrb
sub
mov
mov
ret
add
lds
mov
rcrl
arpl
jnp
fs
push
adc
push
push
push
fistpl
orl
hlt
dec
pushl
sar
loope
repz
leave
pop
lea
test
jg
add
pushf
and
dec
je
and
arpl
scas
jae
pop
pop
pop
mov
mov
jb
xor
sti
cmp
cmc
inc
mov
xchg
addr16
aam
aas
cmp
adcl
xchg
punpcklbw
jle
sti
in
mov
adc
mov
and
and
in
and
push
dec
cwtl
pop
ret
js
imul
psllq
and
pop
loope
xlat
mov
lret
mov
inc
inc
sbb
lret
scas
lods
mov
pop
insl
repz
push
test
fistl
rcll
negl
rol
es
sub
cmp
push
adc
lret
adc
fmul
mov
mov
xchg
pop
pop
adc
movsl
mov
icebp
lds
pusha
pop
add
pop
xchg
dec
push
std
pop
cld
push
dec
mov
fwait
jp
push
mov
pop
xchg
aaa
je
test
rcll
mov
mov
bound
adcb
loop
push
cld
and
add
jg
mov
pop
subl
push
test
negl
jecxz
mov
mov
negb
pop
lock
sahf
and
icebp
and
cwtl
push
test
sahf
cmpsl
dec
adc
sbb
bound
sti
and
loope
in
or
int3
insl
out
std
lds
daa
mov
fdivrs
nop
fcomps
mov
cmpsb
cld
sbb
int3
call
sti
cmc
pushf
sub
loop
shrl
cmp
pop
rorb
aam
mov
pop
push
pop
fmuls
outsb
push
sti
jle
mov
sub
inc
cmp
addr16
push
pop
cmpsl
jbe
dec
mov
sub
xchg
ds
in
imul
sbb
pop
pop
inc
lcall
or
enter
push
loopne
aam
jns
inc
pop
xlat
adc
test
pop
movsb
je
int
js
cmpsl
inc
shrl
inc
xor
and
xchg
mov
or
stos
rorb
inc
mov
inc
not
jg
cmp
or
fnsave
jns
push
fwait
push
fdivr
mov
jne
jbe
cltd
sub
test
or
or
xor
cwtl
nop
xchg
pop
lret
mov
or
andl
out
jne
imul
sbb
lahf
push
jecxz
std
inc
xorl
ja
sub
dec
lds
or
add
or
das
ds
xchg
sub
loope
pop
and
cmp
repnz
movl
mov
and
out
mov
cs
xchg
mov
jg
push
shld
aad
jae
jb
mov
cs
loop
negb
cltd
outsb
and
or
mov
aas
sbb
mov
loop
dec
add
out
out
cs
add
xor
adc
aam
shl
aam
lock
das
push
xor
xchg
push
mov
push
loopne
fs
push
pop
push
mov
mov
sti
shrb
roll
push
int3
xor
stos
lea
stos
andl
xor
bnd
xchg
xchg
cmpsl
mov
push
lcall
cld
test
inc
xchg
mov
repz
out
inc
aaa
mov
ret
mov
fldenv
test
pop
int3
jmp
adc
div
xchg
or
jae
adc
mov
ja
jg
imulb
inc
jg
fxch
aam
faddp
mov
mov
out
sbb
cmpsl
in
mov
imul
add
pop
mov
xor
push
jbe
adc
add
repnz
xor
ficoml
jno
add
xor
xchg
or
test
add
int
sbb
repz
outsb
mov
out
inc
mov
aas
psrad
mov
icebp
les
add
mov
pop
ds
push
aam
cmpsl
inc
dec
lcall
rorb
repnz
popf
stc
int
sub
dec
and
aam
aam
cltd
dec
add
sar
cs
add
imul
dec
into
mov
xchg
jno
inc
sbb
jecxz
xor
sub
fs
repnz
xchg
dec
xchg
xchg
pusha
icebp
add
cmc
adc
or
lds
add
ja
pop
icebp
jo
and
sbb
jno
adc
xchg
icebp
dec
cwtl
dec
cmpsl
push
cmp
rcl
sub
dec
jg
pop
add
fimuls
mov
xchg
pop
xor
aam
xor
sbb
loopne
jnp
pop
jo
push
adcb
inc
inc
sbb
das
inc
sbb
or
in
loop
push
cmp
pop
sbb
and
std
mov
jecxz
mov
add
dec
pop
hlt
jo
pop
jo
jno
addr16
pop
dec
andl
aam
push
outsl
lods
and
push
enter
cmpsl
lea
aam
adc
fildll
sub
fcoml
in
pop
in
or
and
lods
sti
pop
hlt
inc
inc
jb
mov
cmp
mov
test
aas
insl
daa
int3
and
xor
sbbl
and
stos
pop
inc
cmp
jns
or
push
cwtl
sub
jae
ds
lods
loop
clc
xor
mov
scas
hlt
dec
mov
divb
push
pop
std
adc
sub
mov
in
mov
out
lret
out
push
jae
inc
movsb
test
jle
mov
add
mov
fs
xor
clc
pop
sbb
mov
iret
xchg
adcl
ret
mov
push
pop
cmp
out
pop
sub
call
mov
push
dec
sbb
mov
aaa
mov
faddl
divb
ja
dec
jno
ss
loopne
aad
imul
lods
inc
ret
push
add
sub
dec
inc
add
cltd
flds
jae
and
test
clc
bound
icebp
xchg
jle
rcrl
mov
add
jp
pushf
jbe
and
add
inc
fimuls
sub
cmpsl
mov
das
push
adc
imul
movsb
les
push
sahf
or
mov
mov
xchg
cmp
fiadds
mov
and
insl
cmp
cs
mov
jle
pusha
xchg
cld
sbb
test
pop
daa
xchg
hlt
push
in
and
movsb
fsubrs
cmp
xchg
test
mov
and
fs
push
insl
add
std
adc
stos
add
iret
int
jle
push
mov
sbbb
dec
mov
js
push
or
dec
jp
sub
pop
idiv
mov
inc
add
sub
sub
lret
xor
sbb
out
rclb
sbbl
jecxz
adc
imul
dec
or
ja
imul
jb
pop
adc
rclb
sbb
sbb
jp
add
push
sub
aaa
stos
aaa
testl
ret
jno
sbb
fidivs
push
lds
sti
mov
fstps
in
jl
mov
leave
mulb
push
mov
pop
and
es
adc
and
test
and
pop
inc
data16
lret
xchg
and
sub
testl
push
push
or
jno
mov
mov
ss
hlt
daa
enter
xor
sbb
fs
adc
jb
es
scas
sti
fs
pop
mov
int
out
xor
scas
sbb
loop
mov
lock
dec
inc
jl
shll
adc
cmp
in
jbe
loopne
loope
stos
dec
adc
push
fwait
adc
imul
stc
and
mov
inc
aas
arpl
pushf
fists
cmp
ds
jns
dec
nop
sbb
cld
stc
and
aaa
sbb
add
adc
jbe
sbb
and
outsb
mov
ret
or
pop
ror
sbb
std
sub
loopne
jo
sub
and
cmc
decb
sarb
pop
ljmp
ret
sbb
shlb
subb
mov
sbb
rolb
jne
in
test
and
adc
es
fimull
sbb
in
cld
jae
and
push
jns
push
push
pop
hlt
xchg
lods
push
xchg
js
jle
mov
roll
adc
mov
xchg
add
and
scas
adc
pop
movsb
cmp
mov
or
mov
adc
ret
mov
ja
pop
out
xchg
fadd
ds
pop
in
mov
cmp
push
lret
hlt
nop
pop
mov
xlat
sahf
add
and
loop
cwtl
jg
xlat
jnp
or
mov
adc
inc
scas
jl
bound
jbe
or
sbb
add
out
lea
mov
cmpb
or
xorb
mov
imull
incb
cmp
xor
mov
int
push
inc
loopne
jmp
fildl
mov
adcb
test
or
outsl
mov
xchg
in
fsubs
lods
inc
pusha
daa
mov
and
pop
cmp
movsb
movd
imul
cwtl
out
mov
pop
jmp
lock
push
inc
pop
fcoml
push
xor
addr16
and
sub
jae
and
cmp
jecxz
stc
in
xlat
repnz
ja
or
shll
jecxz
imul
add
nop
bound
in
xchg
add
repnz
lahf
ret
sbb
mov
mov
stc
addr16
imul
jle
or
test
sub
imul
mov
push
lcall
int3
sbb
dec
andb
cmpl
inc
sub
pop
cli
addb
repz
fcmovnbe
daa
lahf
add
ljmp
ror
pop
mov
adc
inc
iret
mov
mov
cmpsb
add
sbbl
in
icebp
adc
jmp
mov
push
push
jp
cmpsl
add
ffreep
push
push
mov
adc
hlt
mov
add
inc
mov
dec
mov
mov
adc
lahf
xchg
maskmovq
notl
adc
sub
cld
mov
inc
lcall
mov
push
outsb
movsl
call
xchg
loop
inc
jecxz
std
sub
push
or
mov
inc
std
aaa
cmp
pop
data16
shll
push
stos
popf
ljmp
xchg
cld
cmp
arpl
adc
nop
fidivrl
pop
push
insl
jl
repz
push
cs
adc
mov
dec
jge
dec
or
lcall
scas
cs
lods
mov
mov
adc
pop
aas
cmp
xchg
js
pop
loop
mov
rep
cltd
cmpl
out
imul
mov
iret
mov
push
xor
test
aas
movsl
push
in
hlt
aas
jl
fcmovnu
inc
sub
adc
sub
js
faddl
sbb
inc
inc
adc
adc
js
gs
repz
lds
or
scas
sub
push
jp
mov
in
aam
loopne
test
std
inc
clc
dec
inc
repnz
xchg
sbb
inc
adc
inc
in
add
out
fisttpl
jae
inc
or
cltd
sbb
inc
aas
and
aas
test
cld
movsb
cwtl
in
inc
sarl
adc
roll
sti
lahf
and
mov
push
add
adc
pop
dec
and
xchg
mov
decl
outsl
fiadds
into
ja
imul
mov
sbb
scas
mov
sub
mov
jo
std
ret
dec
jmp
out
xchg
decl
enter
pop
ret
inc
imul
lock
pop
xchg
inc
pop
pushf
jb
jle
add
loopne
xchg
gs
test
jb
stos
and
roll
repnz
xchg
or
jp
outsl
dec
inc
arpl
loop
dec
inc
je
aad
fsubs
adc
sahf
pop
mov
adc
les
push
mov
push
mov
mov
test
sbb
hlt
rcrb
cmc
push
mov
jne
mov
icebp
pop
mov
jle
and
pop
sbb
inc
jge
sbb
or
ja
rcll
test
mov
fwait
dec
jb
mov
movsb
imul
aaa
loopne
in
xor
adc
inc
xchg
cltd
push
xchg
xchg
xchg
lret
in
test
mov
in
es
pop
xchg
pop
addr16
push
stos
pop
sahf
mov
sub
mov
xchg
pop
leave
aad
roll
jp
divb
mov
ja
cmp
lods
dec
cli
mov
jnp
ficomps
lods
jb
adc
data16
jge
stc
push
sbb
icebp
test
add
incl
test
movsl
mov
push
test
sar
lods
sbbb
pop
in
movsb
jae
pop
in
scas
xchg
cld
rol
sbb
imul
mov
aad
cmp
pop
push
nop
dec
pop
add
inc
xor
push
sbbb
out
add
dec
adc
dec
push
mov
adc
sbb
das
std
lahf
aam
movsb
xor
cmp
and
dec
push
lea
xor
clc
shll
rclb
sbb
mov
add
inc
jnp
std
repnz
cmpsb
in
loopne
dec
ljmp
movsb
pop
jge
mov
push
inc
push
fcompl
leave
xchg
subb
imul
lahf
fstpt
pop
jmp
mov
out
int3
inc
js
aaa
push
test
das
mov
fisttps
or
push
std
rcl
mov
das
shrl
out
jg
or
pop
adc
lods
data16
inc
mov
in
dec
ss
enter
inc
adc
cmp
dec
and
test
push
sbb
add
mov
adc
not
cmc
div
aam
repnz
jo
in
pop
push
dec
iret
sub
data16
adcl
or
inc
inc
lods
xor
xor
popa
and
push
inc
inc
sub
adc
jmp
repz
rolb
and
jno
cmpsl
jl
test
movsl
addr16
insb
inc
push
int
test
je
adc
movsl
decb
fsubs
scas
cwtl
sbb
inc
addl
and
sahf
dec
mov
or
xor
pop
imul
sbb
mov
add
push
inc
add
push
or
jecxz
loope
sar
scas
add
pop
pop
neg
rcr
inc
sahf
in
les
popf
rorb
leave
mov
iret
inc
fsts
jno
mov
add
arpl
fwait
mov
jno
iret
jle
push
sbb
test
xlat
movsl
mov
or
dec
test
or
sahf
scas
xchg
mov
push
dec
dec
bound
imul
adc
pop
sbb
movsb
sub
jp
lods
dec
lea
push
loop
popf
je
xchg
aaa
push
and
stos
popf
ret
mov
pop
lods
cltd
lahf
xor
adc
das
js
pushf
stos
cmpsl
mov
inc
add
jle
orb
enter
jmp
xchg
jg
aad
or
cmpsb
push
repz
int
sarb
pusha
popa
add
je
xor
mov
push
add
pop
aas
pop
cmp
push
inc
popf
sbb
fisttpll
hlt
pop
mov
jp
iret
xchg
push
pop
push
push
insb
and
sahf
mov
clc
daa
mov
mov
xor
add
into
stc
sub
push
shrb
adc
push
xchg
faddl
in
or
fmull
sub
mov
pusha
out
push
bnd
sub
pop
adc
jb
cmp
push
add
shlb
ror
push
mov
ja
mov
jmp
insl
or
pop
lahf
loope,pn
movsb
pop
popa
pop
jno
mov
xorl
mov
sub
clc
adc
cmpsl
fucomp
jecxz
pop
and
loope
and
test
out
ja
add
mov
push
hlt
lock
add
xor
inc
mov
out
mov
aas
sbb
cmc
pop
cmp
movsb
jle
jl
test
sti
sbb
mov
dec
push
mov
jg
or
repz
push
dec
sti
xchg
pop
pop
stc
clc
xlat
out
dec
xchg
push
xor
dec
fwait
xor
in
mov
das
push
add
xchg
out
xor
je
daa
ds
adc
leave
cmp
movsb
jg
cld
sbb
pop
mov
pushf
test
aam
cmc
or
sbb
popa
xor
dec
pop
lock
shrl
loop
adc
cmp
adc
mov
adc
or
jle
mov
shl
cmpsl
jb
mov
fsubs
stos
fistpll
mov
inc
pop
mov
repz
cld
es
cld
jbe
adc
inc
scas
test
dec
sbb
frstor
leave
pushf
fwait
xchg
xlat
mov
xchg
unpckhps
int3
das
sub
adc
xchg
cmp
and
add
outsl
popa
pop
push
and
into
jge
sub
xor
push
sahf
sti
push
divps
jae
sub
cli
xorl
lods
xor
xchg
push
loop
test
stc
ja
int3
test
jle
dec
loope
dec
scas
test
add
push
sub
test
adc
jnp
lret
jnp
inc
repz
xor
mov
xchg
adc
imul
fwait
sub
xchg
popf
movsl
inc
insl
inc
push
push
push
cmp
mov
bnd
sbb
jle
inc
sub
xchg
aam
mov
sub
rcrb
cld
kmovb
add
ss
jge
push
bound
les
loopne
adc
mov
adc
jmp
addr16
idiv
xchg
out
inc
repnz
xor
inc
xchg
out
int3
jle
mov
inc
sbb
jbe
out
jge
cmpsl
jno
xchg
push
sbb
sbb
loope
cli
or
sbb
sub
dec
out
or
inc
xchg
mov
add
cltd
jb
stos
xchg
mov
imul
js
or
lods
pop
fstpt
shl
sbb
inc
pop
movsb
and
aam
test
lods
lret
xor
cld
and
in
jmp
repz
adc
xor
dec
jno
ss
and
mov
lock
fucomp
mov
pop
testl
xchg
inc
aas
loope
js
addr16
jo
sub
push
jp
stc
jae
or
cli
aad
jl
lahf
jns
jne
sub
xor
sub
mov
and
inc
mov
xor
push
outsl
jb
movsb
imul
ret
sbb
addb
dec
mov
and
repz
les
sbb
outsb
inc
jecxz
mov
mull
xor
in
inc
dec
out
cmp
stos
jae
out
pop
sub
aas
arpl
xor
push
test
or
cmp
lock
mov
sbbb
pop
sbb
xchg
mov
shr
xor
popf
pop
mov
cs
fldt
popa
scas
adc
add
int
fcoms
fwait
test
repnz
push
and
cmp
and
inc
in
lock
scas
push
out
push
shlb
mov
adc
ret
shl
addr16
xchg
cltd
popl
lds
pop
adc
mov
movsl
jbe
imul
dec
ret
int3
pusha
cmpsb
xchg
mov
xlat
out
filds
push
mov
xchg
data16
andb
adc
leave
xor
scas
pop
and
sub
negl
add
inc
xchg
loope
dec
mov
rcr
adc
rorb
sti
pop
adc
mov
shll
test
fists
mov
and
out
add
mov
sbb
dec
mov
cld
mov
leave
fildll
icebp
pop
lcall
cld
jb
pop
inc
cltd
pop
rcr
add
inc
jmp
xchg
dec
aad
lea
inc
mov
adc
adc
jns
in
pop
pop
cltd
and
call
test
outsl
add
xchg
rcr
lcall
daa
pop
mov
mov
out
pop
mov
int3
imul
fiaddl
and
gs
gs
cld
pop
sti
in
or
sbb
pop
divb
sbb
mov
sbb
mov
mov
cmp
cmp
mov
sub
and
cmc
les
push
inc
int
cltd
lock
or
or
call
jo
insb
add
push
sub
push
test
out
jo
or
sahf
rol
sub
pop
jne
pusha
fstps
int
sahf
dec
loopne
or
rol
mov
rcrb
mov
jns
push
les
push
iret
shll
sub
inc
cmc
repz
xorb
pop
pop
pop
push
adc
jb
jp
cmpsl
mov
fcmovnbe
sub
add
jge
pop
lods
mov
fcoms
xchg
cwtl
daa
call
add
adc
inc
into
xor
mov
sti
sbb
add
and
pop
inc
sbbb
adc
mov
jb
jg
shl
fisubrl
jnp
push
popa
lods
pop
jge
adc
and
pop
aam
add
bound
js
repz
test
and
jl
addl
fwait
adcl
addr16
sub
shll
push
jae
cmp
push
inc
and
lret
aaa
ret
int3
xchg
mov
mov
xchg
adc
pop
pop
pop
push
sbb
and
inc
js
xchg
sub
rcll
xchg
sub
pop
adc
ficoms
mov
and
jl
daa
jnp
mov
mov
loope
cli
pop
cmp
scas
cltd
pop
mov
lds
pop
lret
add
xor
jne
pop
cmp
orb
pop
jmp
out
xchg
sub
es
cmpl
psubsb
xchg
repnz
dec
paddb
out
lcall
inc
jns
loopne
shrb
xchg
es
inc
xor
arpl
mov
idivb
int3
adc
sbb
xor
sbb
mov
mov
inc
sbb
mov
dec
jbe
aaa
out
int
test
sahf
mov
jg
popf
jnp
mov
pop
enter
sbb
or
xrelease
leave
and
mov
movsl
push
pushl
mov
mov
pop
pop
add
test
cmp
std
imul
out
cld
dec
sbb
nop
jns
sahf
or
repz
sarl
xchg
out
test
pop
or
adc
imul
fcoms
dec
jle
add
xor
push
dec
pop
jge
je
mov
arpl
mov
fs
sbb
lret
pop
pop
test
jecxz
pop
leave
cmpsb
pop
cmp
stc
push
mov
adc
dec
les
mov
aam
inc
or
repz
movsl
jecxz
repz
call
ds
movsb
sar
adc
jne
xor
sbb
xchg
lock
cs
fdivrl
aad
cmp
pop
sub
jae
push
and
aas
clc
rcrl
sahf
jo
and
out
fcomi
and
sbb
loope
insl
xor
fstps
inc
lods
dec
sbbl
movsl
jb
icebp
stc
and
mov
insb
xor
xor
dec
inc
aaa
sub
sbb
xchg
jo
cwtl
aas
rcll
mov
mov
loopne
jb
cld
outsl
dec
aam
mov
test
frstor
imul
lcall
mov
pop
jle
mov
test
xchg
cmp
loope
jb
mov
cmpsb
and
and
pusha
jge
inc
inc
adc
cmp
fldl
cmpsl
mov
push
out
or
loopne
dec
mov
dec
adc
jge
fcmove
cmpsb
jmp
lock
push
dec
stc
xchg
mov
xchg
fidivrs
jecxz
xor
mov
pop
clc
sbb
xchg
sub
inc
cmpsl
cmp
in
and
dec
mov
jl
daa
mov
and
push
cwtl
fiaddl
ss
daa
mov
iret
pxor
rcrl
jl
loop
push
xor
xchg
sbb
outsb
or
call
pop
out
jl
fldt
cmpb
call
xchg
mov
cld
push
push
dec
repz
je
data16
shlb
sub
insl
push
mov
jecxz
mov
in
push
jo
and
sub
adc
mov
jmp
fs
inc
mov
xchg
test
sbb
mov
mov
pop
sbb
and
test
fdivrl
xchg
jnp
dec
in
jmp
push
mov
mov
insl
lock
add
dec
xlat
mov
fsts
lea
outsb
sub
or
cmc
mov
adc
dec
sub
scas
sub
sbb
mov
push
sarl
xchg
jecxz
mov
cmp
or
out
cld
add
pop
ficoml
adc
xchg
stc
into
or
cld
aam
sub
out
repz
jle
repz
or
stos
fstpl
leave
jb
xlat
jmp
fcompl
xchg
mov
xchg
or
mov
aad
push
and
pushf
pop
add
add
or
pop
stc
xchg
clc
in
adc
sub
pop
je
pop
push
push
jno
orl
hlt
sub
aam
inc
cmc
movsl
adc
movsl
popa
xor
sahf
cmc
ds
add
loop
lcall
mov
inc
sbb
and
mov
xchg
add
lcall
or
jl
sub
lret
jb
mov
insb
jbe
loop
stos
add
popf
nop
adc
mov
jecxz
or
cmp
fdivrs
jle
movsl
add
mov
fadds
shrb
inc
mov
inc
pushf
addl
xor
xchg
loope
jl
push
jg
iret
movsb
pusha
int
pop
ljmp
in
and
and
push
fs
lcall
dec
dec
mov
jl
pusha
divl
out
or
xor
ss
mov
cmp
pop
inc
mov
inc
pop
push
mov
dec
pusha
jo
pushf
jg
mov
inc
rorl
mov
jmp
kmovb
ja
adc
sbb
push
sbb
cmpsb
inc
lock
inc
ret
clc
xchg
xchg
jl
mov
stos
stc
sbb
lock
add
lahf
arpl
imul
inc
dec
sbb
push
idivb
adc
ficoms
pop
or
aaa
inc
sbb
push
cmp
outsl
cmpsb
mov
jle
inc
mov
jecxz
pop
mov
lret
insl
pop
push
sahf
adc
cmpsb
fcompl
xor
gs
ds
loopne
sub
enter
pop
aam
or
add
je
or
js
jbe
aad
rolb
data16
cli
and
lret
shr
lcall
jmp
neg
sbb
sar
lea
mov
sti
ret
lret
xchg
xchg
push
xchg
bound
arpl
int3
je
mov
gs
cmc
aas
fucom
pop
add
outsl
repz
daa
fcoml
adc
mov
inc
popf
out
or
pop
movsl
fwait
ss
aas
mov
dec
shlb
popf
hlt
xor
imul
or
in
xor
mov
mov
push
sbb
xor
adc
lcall
cmpsl
repz
fwait
stc
frstor
rol
icebp
add
add
jne
gs
sub
cmc
in
addr16
add
jmp
and
or
jno
fsub
sub
imul
inc
sbb
rol
scas
push
and
mov
subb
pop
fdivrs
push
shlb
divb
jle
scas
in
movsl
adc
push
pop
jle
xor
jae
push
xchg
out
popf
jb
movsl
int3
addr16
sahf
mov
arpl
xor
pop
por
push
mov
xchg
dec
fnstsw
and
test
push
loopne
out
xchg
add
int
mov
pop
cld
mov
ja
lds
pop
in
jno
andl
cmpsl
jnp
loopne
xchg
hlt
fcompl
int
pop
pop
icebp
sbb
sub
jo
lock
xchg
les
and
popf
je
mov
fs
gs
inc
jnp
push
adc
gs
fdiv
xchg
push
push
add
icebp
jns
xor
mov
sbb
cs
ret
push
lret
cmp
jl
fsubs
pop
jmp
ja
jns
into
arpl
dec
cmp
cmp
jp
sarb
or
sbb
inc
or
inc
outsb
and
xorb
es
repnz
mov
mov
mov
test
mov
fnstcw
pop
lock
mov
sbb
testl
cmpsl
sbb
adc
push
fistpll
adc
das
cmp
sub
push
sub
xchg
test
loopne
cmp
cltd
addr16
popa
sbb
imul
dec
into
mov
sahf
popa
pop
cmpsl
orb
push
js
test
es
dec
bound
mov
xchg
mov
out
outsl
adc
aam
sbb
add
lea
cmpsl
mov
add
adc
loope
sbb
scas
add
fwait
jb
mov
jae
popa
push
lret
and
repnz
or
scas
aaa
and
dec
and
xlat
dec
sarl
adc
pop
xchg
lods
repnz
ret
pop
inc
pop
push
ljmp
repz
mov
dec
jb
add
sub
or
js
sti
and
pop
push
dec
aam
shll
xchg
add
pusha
rcl
cmp
iret
jmp
mov
ja
inc
cwtl
adc
cmovns
jmp
xchg
pushf
mov
rcl
in
sbb
icebp
inc
pop
lock
mov
loop
xchg
jnp
in
sbb
and
dec
shll
bnd
cmp
iret
push
mov
inc
mov
jecxz
imul
in
pop
dec
cmp
xlat
mov
hlt
cld
mov
or
outsl
jno
add
xor
sub
arpl
inc
pop
xlat
ljmp
dec
dec
dec
xchg
les
mov
and
ss
sub
dec
add
mov
mov
jne
pop
push
jae
aam
dec
cmp
stos
xor
jp
mov
adc
cmp
cli
xchg
call
outsl
icebp
pop
ljmp
sub
int
cmp
gs
or
ss
inc
rcr
and
and
cltd
call
fidivrs
repnz
mov
das
push
add
push
rcrw
pop
mov
or
cmpl
aaa
pop
flds
movsl
jp
std
pop
andb
in
adc
adc
add
mov
iret
lahf
sarb
sub
lods
dec
inc
jnp
and
das
jnp
dec
and
inc
arpl
push
and
xchg
xchg
outsb
add
out
adc
push
jb
add
inc
pop
push
adc
outsb
pushf
loope
aaa
daa
or
push
xchg
mov
xchg
out
loopne
inc
and
rcr
pop
lea
repnz
jp
ja
out
nop
mov
sub
mov
mov
hlt
fcom
xor
pop
data16
and
adc
inc
sub
xlat
sbb
inc
dec
cli
pusha
scas
insl
xor
pop
lahf
mov
ja
sub
and
jge
jae
sbb
ja
and
mov
xchg
mov
mov
lock
mov
pushw
test
test
bound
add
mov
dec
addb
cmp
pop
movsl
push
mov
inc
mov
xor
or
pop
cli
std
je
aam
xchg
iret
enter
fxch
addb
lods
mov
shr
gs
js
push
pop
mov
push
mov
xor
out
mov
pop
ret
scas
push
clc
push
pop
outsb
nop
push
push
mull
mov
mov
mov
outsl
dec
push
cmpsl
xor
ffree
fisubs
add
sub
and
fmull
aam
adc
loop
pop
pop
cmp
jne
xchg
ret
pop
and
or
sbb
xor
cmpsb
xchg
lret
fimuls
jmp
cwtl
in
xchg
xchg
das
xor
jnp
mov
jl
jne
jne
es
adc
pusha
lcall
loop
mov
es
sbb
adc
lea
addl
out
sbb
stos
jo
addb
data16
pop
or
inc
aaa
push
sbb
inc
xor
add
and
sar
push
mov
inc
aam
push
xorb
sbb
jl
cmpsb
mov
je
arpl
stc
loope
addb
fsubl
cli
test
lock
dec
movsb
inc
and
adc
add
scas
test
mov
cmp
daa
jge
mov
mov
inc
imul
lcall
fdivs
adc
aam
sub
jecxz
mov
add
mov
sbbl
in
sbb
stos
mov
in
mov
ljmp
das
xchg
jbe
inc
mov
push
inc
pushf
out
jo
add
scas
mov
and
dec
or
les
xor
jecxz
sub
add
pop
movsb
sub
jmp
movl
or
push
push
jb
pop
xorl
pop
cltd
xlat
addr16
je
inc
or
jbe
shlb
fadd
inc
ljmp
jns
hlt
mov
loop
sbb
sub
jne
pop
jp
stc
ret
test
call
pop
lret
jg
dec
sarb
sbb
adc
gs
jbe
jbe
pop
clc
and
adc
out
dec
pop
ljmp
cmp
gs
xlat
xchg
sbb
push
nop
fnstcw
mov
pop
out
sbb
push
lds
mov
sbb
fdivl
shrb
push
in
sub
or
mov
das
stc
call
bound
bts
or
xchg
js
xchg
iret
cli
clc
push
dec
sub
push
mov
in
in
nop
daa
or
add
call
das
jne
sbb
icebp
add
popa
mov
lret
sub
push
adc
ja
sub
adc
inc
adc
and
sarb
push
scas
inc
nop
aad
jge
pop
rcrb
or
push
loope
vaddsubpd
xchg
push
hlt
cmp
stos
test
sarl
xlat
and
pop
mov
ja
shr
dec
clc
adc
inc
xor
xor
mov
test
imul
nop
or
out
xchg
stc
int
test
or
shll
inc
xor
dec
ret
add
lock
in
push
add
dec
lahf
int3
dec
loopne
xchg
and
push
add
out
and
xchg
call
and
push
cmpsl
and
cmc
aam
lahf
xchg
adc
xchg
sbb
jns
rolb
xchg
mov
jp
in
mov
repz
clc
movsb
jns
inc
rcrb
jbe
rclb
mov
call
mov
dec
mov
cwtl
adc
pop
cmp
aas
xchg
xchg
xor
int
jo
push
sub
sti
test
push
scas
adc
repnz
pushf
push
shl
scas
mov
and
out
shrb
cli
in
gs
sbb
xchg
sub
adc
ror
mov
xchg
fcompl
ds
adc
test
sahf
popa
pusha
adc
jecxz
es
sub
pop
pushf
enter
movsb
ljmp
and
cmp
adc
push
adc
inc
sti
and
or
pop
push
xlat
jnp
jge
adc
push
xchg
inc
sub
dec
mov
repnz
and
xor
call
cltd
imul
imul
outsl
xlat
jne
sub
jle
mov
adc
sbbl
inc
arpl
mov
xor
cmp
repz
hlt
mov
data16
hlt
add
mov
and
hlt
dec
and
sub
dec
mov
cmp
dec
xchg
mov
fiadds
mov
jmp
mov
aam
fidivl
test
fldt
cmpsl
movsb
push
jae
iret
pushl
mov
ret
jb
inc
or
inc
in
sbb
adc
int
in
mov
cltd
enter
enter
inc
cli
dec
mov
and
ret
inc
cs
and
cld
jge
push
int3
lods
mov
adc
in
ror
icebp
les
ja
ret
jns
push
mov
hlt
ds
jnp
rolb
repnz
push
sti
xchg
pusha
ud1
adcb
hlt
mov
mov
js
js
push
and
into
or
fnstcw
repnz
nop
push
in
adc
sub
test
adc
bound
into
mov
jns
ret
cmpsb
ficoml
cmpsl
xchg
hlt
adc
arpl
fucomp
sti
cmp
jg
adc
testl
jbe
out
out
jbe
mov
fcomps
pop
lret
jnp
fildll
pop
xlat
xchg
pop
scas
mov
in
xor
scas
inc
push
mov
mov
add
push
mov
mov
mov
push
xchg
and
and
int
popf
out
leave
jecxz
daa
hlt
mov
lock
mov
test
leave
ds
aad
pop
jo
xchg
sub
inc
lods
jl
xchg
sub
sbb
ss
inc
mov
leave
and
enter
gs
mov
aas
cmpsl
clc
jne
gs
int
and
and
sub
push
dec
mov
push
movsb
and
iret
shll
fildll
push
inc
out
sahf
push
jl
mul
add
and
mov
adc
hlt
pop
xor
push
sub
sub
clc
sbb
inc
adc
lods
jg
mov
sub
stos
mul
push
inc
rclb
push
bound
and
das
sahf
test
sub
push
outsl
negl
jl
mov
mov
xchg
push
xlat
insl
pop
repnz
lret
sti
or
xlat
in
pop
dec
jle
xorl
or
dec
or
and
stos
jl
xchg
rorb
push
inc
cwtl
imul
pop
testb
xor
pop
mov
ret
xorb
hlt
pop
ret
int
pop
or
ds
inc
xor
mov
mov
xor
sub
mov
cmp
notb
incb
stos
lea
aaa
xor
lahf
sub
push
mov
lds
push
cli
shll
pop
push
insl
inc
push
adc
add
mov
sub
adc
adc
mov
jmp
dec
movsl
test
sbb
dec
mov
inc
ret
leave
mov
sbb
mov
dec
mov
adc
rolb
popf
xor
aaa
sbb
lds
sbb
sbb
dec
jle
addb
mov
mov
sbb
mov
je
adc
fwait
je
mov
mov
fsubrs
and
mov
xchg
xchg
fcmovb
xor
pop
mov
push
inc
lcall
push
je
fildll
divb
jb
jecxz
dec
cmc
sub
in
xchg
insb
test
inc
decl
pusha
cmp
imul
int
mov
dec
out
out
push
out
sub
push
mov
mov
bound
add
dec
outsb
adcb
push
into
addb
xchg
pop
push
push
loop
hlt
imul
or
push
push
add
daa
orb
or
dec
dec
push
jle
enter
fsubrl
jae
lret
rorb
lret
push
int
dec
push
int3
inc
sbb
fnstenv
out
faddl
push
inc
cmpsl
dec
sbb
dec
bound
xchg
push
roll
mov
inc
push
pushf
push
sbb
sbb
adc
sbb
mov
push
inc
dec
leave
push
mov
out
cwtl
push
ret
or
pop
rcrl
inc
dec
pop
and
add
xor
lcall
or
pop
inc
add
stos
dec
xorl
int3
inc
rolb
test
enter
add
xchg
imul
shlb
rcrl
pop
add
ficoms
push
jb
and
and
popa
inc
rcl
iret
and
pop
lock
push
xor
xchg
out
add
xchg
lahf
rclb
negl
push
fstl
mov
xlat
rclb
xchg
icebp
adc
push
repnz
repz
push
hlt
sbb
fstpl
stc
adc
int
mov
sti
ret
lods
adc
stc
ret
scas
adc
push
push
push
gs
add
sbb
iret
sbb
iret
push
sbb
iret
push
cmp
iret
insb
sbb
iret
insl
sbb
iret
outsb
sbb
iret
outsl
sbb
ret
pusha
sahf
iret
lret
ss
bound
fs
mov
jecxz
mov
loop
mov
loope
cmpsl
adc
mov
adc
mov
adc
mov
adc
mov
adc
ret
nop
pop
xlat
roll
in
scas
pop
hlt
mov
jecxz
mov
loop
mov
loope
mov
loopne
mov
adc
mov
adc
mov
adc
mov
adc
ret
nop
pop
out
sbbl
in
mov
pop
repz
movsl
pop
repnz
cmpsb
pop
icebp
leave
cmpsl
pop
lock
test
dec
test
pop
std
leave
stos
pop
cld
leave
lods
pop
sti
leave
lods
pop
cli
leave
scas
pop
stc
leave
scas
pop
clc
ret
and
test
and
jne
and
into
and
jae
and
sbb
daa
sbb
sub
jg
sub
jle
sub
jge
sub
jl
sub
jnp
sub
sbb
das
sbb
push
test
nop
xchg
test
inc
push
xchg
cmpsl
inc
loop
movb
in
movsb
xchg
hlt
inc
movsl
xchg
repz
cmpsb
xchg
repnz
cmpsl
xchg
icebp
inc
test
lock
test
xchg
incb
xchg
std
inc
lods
xchg
cld
inc
lods
xchg
sti
inc
scas
xchg
cli
inc
scas
xchg
stc
inc
mov
xchg
out
mov
testb
dec
movsb
sahf
hlt
dec
movsl
lcall
cmpsl
lcall
test
lcall
lods
lcall
scas
lcall
mov
xchg
aaa
dec
bound
dec
outsb
cwtl
add
aas
xchg
dec
dec
rcrb
repz
cmc
adc
notl
mov
stc
adc
sti
adc
std
adc
out
adc
les
adc
mov
lahf
nop
mov
sbb
or
sbb
rol
jecxz
sbb
jge
pop
or
jl
dec
ret
jmp
ret
mov
sub
xchg
adc
adc
xchg
imul
xchg
loopne
lds
mov
notl
adc
ficompl
sarl
ret
gs
xor
mov
xorl
mov
jmp
jno
sub
jle
sub
push
js
inc
push
adc
ret
stos
in
xchg
repz
adcb
test
xor
test
fnstenv
cmpb
jmp
shl
add
ljmp
sahf
inc
mov
iret
sbb
cltd
mov
test
das
movsb
jae
dec
adcb
ret
dec
divl
int
cmp
rorl
adcb
jns
push
push
fucomip
inc
rolb
adc
fwait
sbb
int3
lcall
mov
sub
mov
loope
sub
dec
push
jle
dec
push
push
add
push
mov
testb
negl
scas
clc
test
scas
jle
test
lods
push
jns
mov
mov
and
jnp
sub
push
fstpl
daa
sbb
call
sbb
test
aas
rcrb
adcl
cmc
shr
mov
jmp
mov
mov
popa
sbb
xor
addr16
int3
lahf
lahf
cmp
push
movsl
add
mov
pop
js
fistps
mov
dec
das
pop
pop
jae
je
sbb
xor
popa
dec
pop
outsb
dec
cmp
fiadds
xchg
shrl
in
add
movsb
jmp
sub
std
movsb
stos
divl
lret
mov
cmp
outsb
or
jg
mov
faddp
or
pop
ret
shll
mov
mov
xchg
aad
loop
push
into
ljmp
rcl
jns
add
cmp
jecxz
cs
lock
adc
or
iret
ret
or
adc
or
pop
push
lret
ss
sahf
pop
fadds
popa
jo
les
xchg
arpl
test
addb
aam
je
test
aad
mov
jne
inc
arpl
out
rcll
mov
adc
leave
ret
mov
addr16
imul
iret
insl
cmp
dec
outsl
jns
mov
insl
lret
adc
lds
out
ret
outsl
rorl
push
push
leave
mov
inc
loopne
out
xchg
hlt
je
jmp
mov
sub
inc
mov
mov
dec
xor
sub
or
push
sbb
or
enter
mov
cwtl
sub
ret
jp
movsl
jl
outsb
push
pop
add
sahf
stc
jl
mov
dec
lods
sbb
sub
sub
mov
imul
fs
mov
cmp
outsb
mov
aas
imul
lds
sub
leave
cmp
outsl
into
js
and
test
mov
xchg
add
mov
xor
popf
dec
push
in
mov
xchg
shr
fs
or
mov
xchg
mov
mov
loopne
jnp
and
push
sbb
dec
pop
adc
in
vmovsldup
lret
sub
out
fistps
lods
jmp
or
aaa
mov
adc
jo
jne
and
jns
das
fldcw
sbb
std
or
arpl
sub
fists
inc
int3
adc
xorl
and
push
out
push
test
mov
lods
mov
mov
pop
bound
push
outsl
insl
sbb
movsb
repz
test
repz
inc
and
cmpsl
mov
or
into
repz
mov
xchg
aas
mov
mov
push
adcb
shll
stc
test
test
jecxz
lcall
add
scas
je
push
cltd
jnp
and
fsubr
lds
sbb
mov
inc
ret
mov
jecxz
sahf
and
sbb
pushf
or
or
push
je
xor
in
mov
mov
mov
push
dec
jb
pop
fwait
ja
and
push
pop
mov
gs
mov
pop
mov
xchg
mov
lock
out
nop
fwait
in
shll
jp
add
leave
shr
or
cmpsb
xchg
mov
shrb
int3
andl
jo
hlt
loop
mov
cmc
pop
mov
cwtl
test
inc
cltd
jb
dec
adc
cwtl
or
jmp
pop
bound
push
and
jno
jg
pop
push
add
jo
xor
jne
movsl
mov
repnz
and
jle
cs
xchg
pop
ror
hlt
jne
mov
pop
leave
xor
in
mov
or
xchg
and
sbb
loopne
movsb
push
pop
xchg
adc
in
aad
imul
scas
pop
in
lods
cli
sti
or
or
in
test
int3
stos
cmp
test
loopne
fdivs
push
jne
sub
inc
cltd
pop
pop
shll
mov
clc
mov
loop
and
in
call
mov
push
jbe
sar
xchg
les
sub
sub
jle
sub
push
sub
jge
adc
cmp
scas
insl
dec
out
cmp
out
ja
jo
nop
clc
adc
jo
enter
out
shrb
xchg
outsl
les
xchg
das
inc
xchg
gs
jecxz
add
add
inc
ds
mov
lea
fsubs
ret
arpl
dec
sahf
bswap
jmp
popf
inc
fcmovnbe
push
jnp
mul
jl
sub
jge
sub
jle
sub
out
sub
dec
push
sub
adc
push
jg
jns
pop
xchg
cltd
lds
xchg
pop
ret
sbb
adc
xchg
ffreep
fsts
test
mov
call
push
mov
lock
cld
or
outsl
popf
mov
popf
sub
iret
fisubrl
lahf
fwait
sbb
iret
cwtl
clc
into
xor
outsb
inc
addr16
sub
shl
add
xchg
xchg
ffreep
imul
lods
push
sub
jl
sub
pop
jns
loop
popa
loop
jmp
mov
cs
mov
ss
pop
insl
cwtl
push
xor
int3
outsb
mov
jle
sbb
mov
adc
movsl
shlb
out
nop
and
xlat
mov
and
jge
xchg
xchg
ds
test
xchg
aas
shrb
adc
daa
movsb
jne
cmpsl
xor
cmp
mov
cmc
xor
and
adc
inc
lcall
iret
push
call
xchg
into
ljmp
not
dec
nop
ss
imul
out
gs
add
mov
gs
sub
jbe
in
cmc
ror
cmc
sbb
in
mov
mov
mov
jns
inc
mov
sbb
int3
enter
and
adc
inc
leave
push
arpl
xchg
les
mov
shr
in
lock
sbb
lds
decb
and
addr16
adc
jae
lahf
aad
sub
jno
mov
and
jae
aam
jbe
and
sbb
adc
jp
test
xchg
jmp
loope
mov
push
test
jne
pusha
mov
sbb
add
inc
jbe
and
stos
cmpsb
push
mov
imul
cs
push
push
xor
add
mov
and
repz
into
lret
ret
test
xor
dec
lahf
fsts
adc
cmp
decl
aaa
mov
js
ret
adc
orb
xlat
sbb
aad
push
sub
pop
js
mov
jle
das
cmp
roll
jne
leave
push
inc
int3
sti
mov
into
xchg
lea
aaa
xchg
mov
mov
dec
orl
xchg
gs
fnstenv
leave
pop
stc
inc
or
mov
or
mov
push
ret
adc
push
push
add
sub
jge
sbb
or
xor
xor
repnz
xchg
cmc
rcll
xchg
push
cli
rcr
or
into
xor
dec
xchg
jp
pushf
or
sub
imul
inc
pop
and
movsl
cltd
pop
and
nop
ret
fs
and
movsb
lds
xorb
mov
add
arpl
cmc
ljmp
or
sub
sub
arpl
push
andl
cld
lds
mov
cwtl
in
jmp
ret
jecxz
stc
clc
nop
push
inc
dec
adc
out
mov
ds
les
pop
daa
pop
out
sub
out
sub
pop
lods
cmc
inc
mov
icebp
test
test
stc
stos
fildll
pop
dec
jp
inc
lcall
rcll
jno
jns
lds
jne
xchg
mov
sub
in
push
shlb
fcmovnu
sub
loopne
sahf
test
cmc
sbb
lret
sub
jno
int3
es
testl
ret
push
dec
fs
push
mov
mov
es
push
mov
add
sbb
and
int
iret
sub
roll
leave
fcmovb
pusha
mov
sub
call
in
sub
pop
flds
cmp
lea
adc
push
int
add
jbe
fistps
jge
cmp
jg
mov
jbe
jae
adc
jl
add
out
lret
roll
inc
mov
inc
push
mov
imul
xchg
ret
in
and
pop
out
mov
dec
or
push
sbb
mov
mov
mov
mov
cmpsb
cmpsb
js
add
and
push
jecxz
in
xlat
cld
jne
xchg
stos
sbb
xlat
xchg
mov
arpl
xchg
sub
cmpsb
jg
mov
sub
sub
rclb
mov
xor
adc
dec
adc
mov
sbb
pop
adc
jle
jnp
jne
mov
xorb
pop
xor
imul
stc
inc
jecxz
pop
fidivrl
cmp
shr
jp
xchg
scas
mov
pusha
mov
stos
push
cmp
scas
pusha
push
fs
sbb
lods
cmc
nop
jle
add
inc
or
orl
cwtl
mov
mov
jecxz
adc
loopne
test
in
add
aaa
adc
fsubs
ror
mov
or
xchg
inc
ja
xchg
cld
rolb
inc
inc
add
movsb
out
xchg
mov
in
movsl
or
push
ret
jp
paddsb
lds
test
repnz
ret
bound
cwtl
pop
scas
repz
movsb
and
rcll
mov
clc
cltd
in
cmp
jg
cmp
and
lret
cmpsl
push
mov
dec
mov
push
or
fmuls
add
cmp
test
push
stos
push
rol
inc
je
loop
scas
xchg
pop
popf
sti
ljmp
dec
or
pushl
outsb
icebp
xchg
mov
inc
addr16
jecxz
filds
xlat
rol
imul
xlat
in
test
out
dec
pop
and
es
pop
cli
test
fwait
mov
mov
sub
daa
mov
dec
insl
cmp
cmc
xchg
insl
inc
fistl
cwtl
dec
mov
dec
xchg
into
pop
lret
xchg
leave
stos
dec
out
aaa
mov
inc
jb
ljmp
jmp
ljmp
and
and
adc
dec
shrb
mov
mov
add
orl
mov
sbb
mov
xlat
adc
mov
add
push
push
inc
mov
push
cmpsb
mov
fstpl
aaa
mov
je
dec
movsb
jb
out
int3
mov
push
gs
bound
fsts
or
sub
ss
popf
out
bnd
es
mov
out
mov
jo
cwtl
dec
mov
jno
shll
push
sub
or
and
or
jmp
fsts
cs
dec
scas
sub
sub
mov
ret
xor
mov
movsb
cmpsl
xchg
cmpsl
xchg
dec
hlt
sahf
or
push
pop
mov
and
scas
cmp
jne
pop
iret
cld
and
stc
inc
cs
jg
xchg
cmp
lret
add
mov
push
stc
arpl
aaa
insl
jg
test
pop
jb
pusha
sbb
sahf
in
adc
mov
xchg
lock
or
rep
pop
inc
in
mov
fwait
aas
int
popf
das
lret
fcomp
and
les
movsb
jb
sti
sub
iret
std
int3
stos
jmp
insb
test
popa
mov
insl
sahf
cmp
push
popf
adc
movsb
jg
test
dec
pop
popa
pop
es
xchg
mov
xchg
filds
mov
cwtl
pop
iret
pop
cltd
test
into
leave
xchg
jns
pop
scas
cmpsl
cli
sbb
mov
stc
add
xchg
sub
xchg
enter
call
pop
jge
sub
sahf
adc
fldcw
cmp
nop
jae
pop
mov
cmpsl
les
negl
lock
roll
adc
stos
mov
mov
clc
lods
xchg
popa
cli
in
scas
sbb
mov
adc
ja
and
fcomps
jg
mov
pop
enter
ret
movsb
xchg
push
fs
nop
push
imul
jbe
xor
sbb
sub
loope
loop
addl
and
inc
into
addr16
lds
jnp
xor
je
xchg
pop
cmp
out
inc
ljmp
shlb
mov
jne
mov
lahf
leave
test
or
ds
ret
pop
sbb
imul
ret
pop
into
shlb
add
loope
ret
xchg
orl
add
xchg
inc
add
mov
lds
and
sbb
adc
mov
and
and
pop
and
sub
push
or
aam
je
cmc
movsl
mov
xchg
and
cmp
icebp
xchg
add
or
stos
ret
xchg
push
out
mov
xchg
cwtl
sbb
in
cwtl
mov
xchg
ja
mov
add
xchg
insb
mov
int3
mov
sub
in
out
ret
mov
adc
std
adc
push
shll
mov
out
in
daa
pop
sub
mov
les
jo
sub
adc
in
insb
xlat
inc
cmp
cmp
insl
pop
sub
loope
push
or
es
sub
xchg
pop
add
aaa
jle
mov
adc
adc
or
mov
test
cmp
aam
cmp
cmp
sbbl
iret
fwait
iret
daa
cmc
fstl
das
outsl
xchg
out
jnp
mov
call
sbb
sub
cld
in
loop
push
or
fdivs
mov
jne
push
movsb
pop
jne
or
mov
stos
push
mov
dec
push
jecxz
push
daa
or
mov
cmp
lcall
nop
xor
les
mov
xor
scas
test
arpl
mov
test
ret
aad
inc
xchg
out
jecxz
xchg
fcomi
mov
inc
divb
movsb
int3
pop
sbb
sbb
sbb
xchg
inc
sbb
pop
jne
repz
xchg
cmp
xchg
adc
xchg
cltd
popf
dec
jp
jle
cltd
ret
sbb
cwtl
imul
jae
add
xor
inc
dec
das
fidivrl
ds
jl
popf
popf
dec
push
mov
fucomp
xchg
mulb
imulb
outsl
jmp
jp
imul
mov
into
fstp
add
jl
push
xchg
cmc
loop
pop
adc
pusha
pop
mov
fwait
hlt
hlt
fmull
inc
jno
xchg
xchg
adc
out
push
shr
mov
loopne
test
jmp
mov
cmp
jg
or
outsl
sar
js
nop
cwtl
stos
inc
push
lahf
mov
push
inc
sub
xchg
push
aaa
xchg
int
out
inc
xchg
adc
jl
out
jb
loop
inc
jbe
movsl
mov
movsl
jae
sbb
mov
mov
cmp
mov
mov
nop
push
cmp
and
ja
sub
fs
xchg
push
dec
fstps
imul
int3
xor
movb
fsts
insb
pop
fnsave
lods
jmp
jb
inc
xor
jg
hlt
stc
cmp
pop
cld
fsubrl
and
bound
mov
pop
pop
mov
inc
stc
xchg
daa
sub
mov
and
pop
lret
and
cmp
jmp
je
test
loop
leave
shlb
and
push
or
jo
xor
push
mov
lahf
shl
mov
xor
pop
sbb
pop
pushf
fcoms
int
or
sarb
repz
test
in
cmp
sub
cmp
push
call
xchg
filds
push
xor
les
add
and
fs
test
mov
mov
shl
push
pop
push
adc
dec
int3
ljmp
sub
push
jae
in
jno
jl
testb
ss
sbbl
call
jl
cs
push
adc
divl
inc
or
cmpb
dec
imul
and
subb
dec
aam
xchg
dec
sbb
xor
outsl
rorl
repnz
jne
sbb
dec
dec
rcl
adc
and
or
fisubs
lcall
mov
lret
sbb
sub
pushf
push
and
mov
ljmp
jnp
sub
lds
iret
lahf
mov
pusha
jbe
adc
jle
pop
xchg
sub
mov
xor
movsl
push
cmp
push
lods
imul
lock
test
ljmp
and
int3
arpl
sub
sub
es
push
jns
pop
jo
js
nop
and
movsl
sahf
add
decb
cmp
sub
inc
and
rorb
repz
push
sub
mov
test
lahf
sbb
fistpl
rcr
and
outsl
loop
stos
add
inc
xor
push
mov
pop
test
sbb
loope
bound
pop
enter
in
sub
loop
dec
hlt
cmc
stc
cld
dec
sub
xorb
adc
iret
lock
mov
dec
pop
adc
gs
jnp
testb
xor
jbe
pop
fists
mov
cli
push
fnstenv
mov
fisubrs
dec
adc
push
loopne
test
clc
sub
or
xor
stc
mov
sbb
push
fdivrp
and
mov
pandn
xor
sub
leave
inc
stos
jl
or
inc
xchg
inc
in
mov
es
ret
fidivl
xchg
js
xor
sub
dec
adc
andb
js
push
sub
xchg
mov
movsb
add
or
jg
movsl
mov
jmp
hlt
inc
int3
cmp
rolb
pop
cs
xchg
cmc
ja
aaa
test
sbbl
ds
addr16
sub
fwait
and
add
inc
mov
adc
insl
or
push
xchg
mov
es
xchg
mov
out
push
dec
ret
mov
lret
mov
adc
inc
xlat
adc
sbb
dec
mov
adc
daa
adc
dec
adc
dec
dec
and
std
inc
lock
out
sub
or
xchg
enter
inc
les
adc
je
outsl
sahf
inc
ret
adc
popf
xchg
xor
sbb
sbb
xchg
bnd
mov
aaa
adc
mov
sbb
test
cli
test
or
into
pop
cwtl
dec
jg
cwtl
dec
mov
inc
push
sbbl
sbb
jne
and
fisubs
dec
pop
fiadds
dec
sbb
into
stos
popf
sbb
jle
sub
push
sub
fisubrs
outsl
sbb
nop
int3
cmp
xchg
dec
jp
xchg
pop
inc
mov
adc
test
mov
hlt
clc
adc
test
mov
outsb
xchg
pop
inc
cmp
xchg
push
add
mov
xor
mov
js
dec
into
rcrb
scas
out
add
add
aam
mov
inc
out
fmull
fdivrs
fldcw
mulb
mov
imul
leave
int
loop
push
push
push
cmp
ret
adc
pop
fs
ljmp
dec
stos
dec
daa
dec
call
and
push
dec
pusha
repnz
cmp
out
sub
cwtl
adc
dec
jae
loop
jns
ror
rorb
fdivrp
xchg
mov
stos
inc
jle
xchg
push
rcrb
mov
add
lods
insb
in
test
popf
push
in
mov
out
dec
dec
ffreep
jnp
test
and
push
frstor
lret
mov
int3
aad
mov
dec
mov
sub
js
sbb
in
insb
xchg
jle
and
ds
stos
inc
inc
fwait
repnz
clc
lods
mov
dec
push
loopew
hlt
sbb
add
mov
test
cmp
out
ret
push
shlb
xchg
divl
pavgw
xchg
dec
mov
lds
shrl
mov
ljmp
pop
insb
xor
xchg
xchg
iret
cmp
mov
lret
out
shrl
push
mov
nop
lds
test
fnstenv
popa
inc
sbb
int
mov
cwtl
sub
or
sub
fists
repnz
sub
out
mov
fsubrs
leave
xchg
jns
loope
xchg
es
std
scas
adc
or
shlb
mov
push
adc
je
xchg
sbb
hlt
ds
mov
es
xchg
sub
push
sbb
icebp
ljmp
or
lret
cmp
pusha
hlt
xchg
mov
aam
in
fs
test
pushf
loopne
and
in
imul
xor
xchg
jne
mov
cmp
stos
pusha
sub
aas
call
jl
and
and
sub
pop
mov
lcall
nop
stc
mov
arpl
sbb
mov
push
ljmp
loop
sub
dec
jns
mov
or
and
mov
dec
into
jl
xor
xchg
sbbl
cmpsb
call
ss
int
addr16
jp
sbb
imul
cmpsl
data16
push
pop
stc
ja
sub
repnz
pop
fildl
cmp
and
cmpsb
ja
xchg
ret
jle
push
arpl
adc
test
push
gs
xchg
rcrb
test
cmp
out
outsl
jae
mov
mov
jae
cld
push
sub
mov
aad
push
into
lods
push
push
lds
mov
fsubrp
cltd
inc
and
and
negl
ret
les
xchg
xor
imul
mov
jnp
pop
jmp
cmp
pop
cli
adc
in
push
or
sub
cmpb
ret
sbb
add
mov
sbb
test
leave
lret
mull
test
pop
mov
stos
in
push
or
xchg
cmp
shll
mov
add
data16
mov
cli
outsb
shll
mov
sub
divb
cwtl
movsl
out
inc
sbb
sbb
shrb
divb
cmp
inc
lret
bound
mov
data16
pop
jle
mov
xor
push
push
xchg
and
stos
push
pop
xor
dec
fidivrl
movsl
xchg
sahf
mov
test
dec
sbb
xor
loop
and
aad
sbb
push
in
sbb
cltd
xor
push
push
add
add
add
js,pt
pop
gs
xor
push
loopne
xor
popf
mov
clc
and
add
arpl
pop
pop
daa
gs
lock
les
add
insb
inc
cld
and
add
pusha
cmp
pop
mov
cmp
mov
inc
loope
push
dec
nop
pop
cltd
inc
jo
scas
add
xchg
pop
aas
mov
add
and
inc
mov
push
add
sub
jmp
push
and
mov
cs
pop
inc
rcrb
pop
and
fisubrl
pop
xor
pushf
test
or
je
fiadds
movsb
push
fistpll
aas
jns
icebp
add
gs
add
add
daa
mov
aad
pop
pop
lret
and
pmaddwd
add
incb
mov
gs
or
add
jmp
xor
popa
push
push
add
xor
test
sub
xchg
add
arpl
jo
mov
das
xchg
pop
inc
rcrb
pop
and
aad
pop
xor
pushf
inc
outsl
ficompl
nop
insl
or
sub
xchg
cmc
outsl
repnz
sub
or
test
push
inc
rcrb
in
gs
dec
xchg
lock
xchg
fcomps
fs
mov
mov
in
dec
sub
lock
xchg
call
fistpl
nop
insl
lds
je
mov
pusha
lock
jo
lods
pop
inc
rcrb
mov
dec
nop
sbb
mov
test
push
mov
nop
ds
push
mov
test
call
adc
mov
mov
dec
add
sub
push
or
push
das
nop
pop
inc
rcrb
cmp
gs
dec
sub
pop
add
fidivrl
mov
lock
sbbb
dec
add
insb
add
mov
lds
mov
cmc
cmp
push
fnstsw
pop
daa
gs
leave
jecxz
ds
push
in
inc
mov
mov
add
cmp
add
lods
inc
dec
daa
cmc
add
aam
cmp
push
jge
pop
daa
gs
leave
jecxz
ds
pusha
add
in
inc
pop
and
add
fistpll
movb
lods
inc
dec
daa
cmc
add
idivl
shrb
add
adc
pop
daa
gs
leave
jecxz
ds
pusha
add
sub
incb
adc
sbb
and
cmp
popfw
add
or
and
mov
loopne
or
mov
mov
mov
pop
mov
shrb
add
outsb
bnd
push
fimull
mov
and
cmp
pop
rcrl
add
shlb
and
imul
fisubrl
adc
or
lock
jmp
gs
shrb
add
add
pop
sahf
insl
mov
cwtl
cmp
imul
sub
xor
aad
nop
sbb
test
push
sub
inc
xchg
sub
inc
sbb
dec
or
nop
sub
add
push
pushw
mov
dec
and
mov
daa
add
adc
sub
and
addb
add
pop
jbe
ffree
mov
pop
daa
cmc
xchg
add
in
mov
gs
out
mov
je
mov
jmp
add
add
lock
sub
loopnew
xor
in
push
or
sbb
lock
and
xor
test
negb
jle
hlt
lea
xlat
lcall
addr16
ss
cmpsl
adc
push
xor
add
aaa
push
and
rclb
aam
inc
pop
mov
daa
add
repnz
inc
inc
lock
push
je
ss
mull
daa
add
push
push
inc
inc
push
es
add
push
inc
daa
inc
testb
push
inc
inc
ja
xchg
push
data16
mov
and
push
jbe
out
loop
and
pusha
mov
add
and
add
add
and
add
add
and
add
add
add
add
add
add
and
add
pusha
add
addb
push
add
add
add
add
nop
add
addb
add
test
add
rolb
addb
add
lock
addb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
loope
add
add
add
add
add
out
add
or
add
out
add
addb
add
add
add
adc
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
add
add
incl
add
incl
ja
ja
ja
ja
ja
ja
ja
ja
js
mov
mov
mov
divl
ja
ja
mov
mov
clc
addb
mov
mov
clc
test
mov
mov
mov
test
mov
mov
clc
adcl
mov
adcl
mov
mov
decl
mov
mov
mov
jo
ja
ja
ja
ja
ja
ja
ja
jo
jg
dec
mov
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
into
dec
mov
fstp
fstp
fnstsw
dec
int3
mov
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
fwait
sbb
jo
fstp
fstp
jg
dec
cltd
mov
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
outsb
dec
mov
fstp
fstp
fnstsw
dec
data16
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
cmp
mov
fstp
fstp
fnstsw
dec
xor
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
into
dec
mov
fstp
fstp
fnstsw
dec
int3
mov
ja
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
dec
mov
mov
fstp
fstp
jg
pushl
fstp
fstp
ja
ja
ja
ja
ja
jo
fstp
fldl
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
incl
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
add
add
incl
add
incl
js
ja
mov
test
mov
mov
xorb
ja
ja
jo
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
hlt
dec
enter
fst
hlt
dec
mov
decl
ja
ja
fldl
add
xchg
add
jo
add
incl
pop
mov
addb
mov
pop
mov
addb
ja
pop
ja
addb
ja
pop
ja
sub
add
and
add
inc
add
add
add
add
add
add
cli
stc
add
aad
add
loope
add
aaa
add
cmpsb
je
add
clc
testb
cld
sti
add
sti
cli
add
ds
add
inc
or
mov
xchg
repz
add
in
in
stc
out
jmp
add
push
push
add
loopne
add
call
loop
clc
out
out
imul
out
mov
mov
adc
cmpl
adc
lds
add
out
add
jmp
out
add
push
adc
sahf
push
adc
ret
gs
add
insb
and
leave
jae
add
insl
sbb
les
add
insl
sbb
shlb
shrb
shll
add
jne
add
jle
add
jl
add
jle
add
jne
add
subl
add
lahf
pop
add
test
add
std
cld
add
test
add
mov
add
xchg
add
mov
add
lea
add
mov
add
test
add
mov
add
test
add
subl
add
mov
add
mov
loopne
sub
loop
das
add
xchg
xor
loopne
xor
add
mov
in
sub
call
test
add
xchg
sub
add
xchg
sub
add
lea
lock
fisttpl
xor
repnz
xor
out
lcall
in
xchg
xor
repz
xor
lock
xor
out
cltd
xor
test
sahf
xor
repz
cmp
repnz
das
add
popf
xor
icebp
pushf
xor
loopne
cs
mov
xor
repnz
xor
clc
movsl
xor
add
lahf
xor
lock
xor
out
xor
ficoms
cmp
jmp
mov
or
add
sahf
xor
jmp
xor
in
mov
cmp
ljmp
cmp
lock
cmp
in
movsl
cmp
repnz
inc
add
mov
add
lods
imul
mov
dec
add
cmpsb
inc
add
fwait
and
in
mov
or
call
arpl
fisubl
movsl
mov
add
fisubrs
mov
mov
add
loope
add
les
add
sbb
jnp
sub
xchg
xchg
addl
dec
pop
sbb
stos
mov
add
and
inc
jo
add
pop
add
xchg
sbb
ss
add
dec
add
jnp
add
jp
add
jns
add
jg
add
jp
add
mov
add
dec
add
sti
repz
mov
add
xchg
daa
add
xchg
daa
add
outsl
and
cs
sub
push
rorl
cltd
sub
xor
sub
add
sub
sub
lods
xor
xor
add
test
xor
cmp
cmp
cmp
sub
cmp
aad
add
pop
add
arpl
push
push
les
fcomi
fildl
call
cld
add
scas
sub
sub
and
add
cmpsb
adc
and
sub
es
and
iret
arpl
push
movsl
and
and
das
add
mov
xor
add
cltd
cmp
and
cmp
and
mov
dec
add
jnp
push
test
add
jle
add
mov
pop
addl
or
inc
add
xchg
add
jp
add
rcll
add
xchg
jns
adc
hlt
add
aad
add
idiv
add
cld
incl
hlt
std
incl
mov
incl
inc
xchg
mov
sub
add
in
incl
in
std
add
xchg
lret
jne
add
filds
inc
gs
sbb
sti
add
incl
mov
ja
add
incl
add
mov
sahf
sahf
sahf
mov
push
pop
pop
pop
pop
pop
pop
pop
push
pop
pop
and
scas
test
loop
scas
lods
stos
movsl
mov
daa
es
es
es
daa
sub
add
lret
jmp
into
into
int
mov
sub
sub
xor
incl
mov
mov
loopne
fsubr
out
in
fmulp
lret
lret
mov
lea
xor
xor
xor
xor
xor
incl
mov
aad
xchg
ja
out
in
in
rcl
cltd
xchg
jae
ss
aaa
incl
mov
aad
mov
xlat
call
lea
inc
aas
aas
aas
aas
ds
aas
dec
xor
add
nop
xchg
rcl
xlat
lcall
push
push
push
push
push
push
gs
incl
mov
mov
cld
cld
jmp
rcl
sahf
mov
pop
pop
addr16
addr16
pop
pop
pop
je
incl
mov
mov
cld
call
int3
int
xchg
insb
insb
insb
insb
imul
add
repz
stc
cmpsb
lahf
ror
aam
enter
jl
jl
addb
incl
mov
rol
rol
rol
enter
mov
mov
incb
mov
mov
mov
scas
scas
scas
mov
mov
jle
addl
jns
add
xor
add
add
add
add
add
add
add
xor
add
std
or
sbb
sbb
add
or
or
push
or
or
push
incl
add
add
add
xor
add
sbb
adc
std
or
xchg
adc
cmp
adc
add
add
add
add
std
std
std
std
std
std
cmp
or
std
std
std
movhps
femms
ud0
add
add
add
xor
in
std
std
or
and
and
adc
sbb
sbb
add
add
add
xor
std
std
std
std
std
std
std
std
std
std
std
std
and
dec
dec
and
incl
add
add
add
xor
add
std
sbb
sbb
adc
std
std
sub
sub
sub
incl
add
add
add
xor
std
std
std
std
std
std
std
std
std
std
std
std
sub
das
sub
sub
sub
sub
add
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
hlt
cmc
divb
xor
xor
xor
xor
incl
add
add
add
xor
repnz
div
div
div
idiv
std
xor
cmp
cmp
add
add
add
repnz
std
sbb
sbb
cmp
dec
dec
cmp
add
add
add
xor
out
std
std
std
or
std
std
std
std
std
std
inc
inc
inc
inc
inc
pop
dec
push
push
inc
incl
add
add
add
xor
fwait
cmpsl
std
adc
adc
sbb
cmp
jne
push
incl
add
add
add
xor
ret
or
add
std
std
imul
incl
add
add
add
xor
std
std
std
std
std
std
std
std
std
std
std
std
popa
jne
insl
pusha
insl
pop
push
add
add
add
xor
sti
stc
pop
inc
inc
dec
dec
dec
push
push
push
push
pop
push
push
inc
dec
dec
inc
pop
dec
popa
incb
add
add
add
xor
repz
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
cmp
inc
dec
dec
inc
jbe
outsb
aas
inc
pop
outsl
fs
insl
jno
pop
popa
popa
pop
pop
pop
pop
bound
addl
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
incl
add
add
add
add
add
add
add
add
add
add
lods
add
add
add
incl
test
jp
cwtl
sub
add
sub
add
xchg
jnp
mov
mov
lds
js
test
sbb
ret
jae
add
pop
sub
add
mov
or
add
jle
add
mov
push
add
dec
str
imul
hlt
mov
ljmp
je
add
outsb
push
add
imul
add
je
add
jne
add
jl
add
je
add
je
add
mov
add
jp
add
jno
add
nop
push
add
jp
add
xchg
add
xchg
dec
add
mov
add
les
add
mov
add
mov
add
test
add
lcall
in
sub
add
lahf
inc
add
xchg
add
xchg
add
lds
add
test
add
adcl
out
adc
out
adc
jmp
lcall
out
xchg
sub
in
xchg
sub
lahf
xor
jmp
sahf
xor
icebp
cltd
xor
fsts
cmp
lds
pop
add
mov
add
cltd
cmp
mov
dec
add
stc
icebp
add
scas
inc
add
xchg
inc
add
sahf
dec
add
mov
pop
add
mov
add
mov
dec
add
mov
inc
add
mov
add
mov
inc
add
mov
add
lds
stc
rorl
lret
sti
lds
test
jne
shll
and
fistps
cmpsb
mov
incb
jl
jno
pop
jbe
add
sbb
pop
jns
add
daa
add
mov
add
sub
cmp
and
add
xor
ljmp
add
xchg
and
add
cmpsl
pop
add
leave
das
add
mov
add
ret
and
and
es
add
xchg
sub
xor
add
sub
cmp
inc
add
xchg
and
sub
sub
push
mov
add
sahf
sub
pop
jl
add
shlb
or
movsb
sub
add
pushf
cmp
add
lock
add
xchg
in
jmp
xchg
xlat
leave
add
mov
xchg
in
add
stos
cwtl
add
incl
lock
incl
mov
cmc
add
std
incb
repnz
incb
jl
incl
or
incl
js
incl
sti
incl
out
repz
add
jl
add
add
ljmp
cmpb
add
incl
movsb
movsb
movsb
add
jg
jns
jns
data16
add
add
mov
mov
mov
mov
ja
adc
sbb
sbb
mov
lods
xchg
nop
mov
and
and
popf
data16
mov
aaa
aaa
aaa
cmp
mov
sahf
pushf
lcall
dec
dec
mov
fwait
xchg
cwtl
xchg
bound
gs
jl
jge
jg
jbe
insb
imul
fs
or
or
add
mov
stos
mov
push
adc
push
mov
test
je
lahf
sub
adc
pop
add
aas
pop
pop
sub
mov
stos
mov
mov
mov
mov
mov
mov
push
pop
cmp
xor
mov
addb
mov
pop
push
mov
mov
inc
xor
push
pop
dec
dec
push
mov
jne
inc
inc
inc
inc
inc
cmp
mov
add
cmpsb
add
fucomi
add
xlat
lcall
push
push
add
push
push
add
incl
add
mov
add
cld
cld
add
aam
add
xlat
sahf
add
pop
pop
add
pop
add
pop
pop
add
incl
sub
add
and
add
inc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
add
sub
and
das
andl
pushl
jge
pushl
jns
pushl
jnp
pushl
jp
pushl
jp
pushl
jp
pushl
jno
pushl
jae
pushl
jp
incl
sbb
dec
pop
sbb
cmpl
ud0
or
cmpl
or
cmpb
incl
ds
cmpb
incl
cmp
or
cmpl
or
mov
add
aaa
sub
sub
xor
xor
pushl
xchg
daa
pushl
daa
pushl
mov
ljmp
jl
lcall
jp
lcall
cmpl
sub
xchg
sub
das
xchg
daa
pushl
mov
jmp
sbb
cmpsl
outsl
and
lcall
push
adc
popf
push
adc
popf
push
adc
pushf
push
adc
popf
push
adc
popf
push
adc
popf
push
adc
popf
push
adc
popf
push
adc
lahf
push
adc
mov
add
mov
add
aaa
xor
cmp
lods
sub
call
stos
and
decl
outsl
call
cltd
cmp
addl
mov
jmp
test
sub
daa
scas
sub
and
outsl
and
xchg
lea
dec
ja
inc
imul
les
inc
push
inc
imul
les
inc
push
inc
push
inc
imul
lds
inc
push
inc
imul
incl
add
mov
add
aaa
xor
ljmp
scas
sub
call
cmpb
sub
clc
call
fdivr
lcall
lcall
and
mov
jmp
mov
ljmp
cmpsb
sub
ss
decl
subl
call
jne
call
jne
call
jne
call
jne
call
jne
call
jne
call
je
call
jne
call
jbe
fnstcw
mov
add
mov
add
aaa
das
test
ds
xor
ljmp
sub
out
sbb
call
xchg
incl
enter
test
dec
lcall
lea
and
das
ljmp
test
pop
jnp
sub
ficoms
and
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fdivrs
fnstcw
jmp
mov
inc
jae
incl
add
mov
add
aaa
xor
cmp
daa
mov
inc
lcall
rcll
mov
add
adc
arpl
and
push
lcall
xchg
cmp
push
jmp
lods
sub
and
sub
sub
pop
call
sahf
cmp
jecxz
sub
loope
sub
loopne
daa
jmp
xchg
jmp
xchg
jmp
xchg
jmp
mov
jmp
mov
jmp
xchg
jmp
xchg
jmp
xor
incl
add
mov
add
aaa
das
mov
cmp
call
test
cmp
sbb
aad
and
stos
pop
ljmp
jns
sub
dec
decl
jp
jmp
test
jmp
test
cmp
inc
jne
jmp
cmp
call
xchg
sub
call
xchg
sub
call
xchg
sub
call
nop
sub
call
popf
cmp
roll
mov
add
aaa
movsb
sub
ljmp
scas
sub
decl
test
jmp
pop
leave
jmp
xor
lcall
rcll
ljmp
mov
and
lcall
jb
pushl
cmpsl
cmp
lock
lock
lock
lock
out
cltd
xor
lock
fisttpl
add
sub
sub
inc
les
xor
xor
adc
jle
call
cmc
jmp
ss
lcall
cs
decl
pop
call
mov
call
mov
and
sub
and
das
cmp
fisubs
clc
movsl
xor
push
mov
xor
mulb
xor
mulb
xor
mulb
xor
ljmp
incl
add
mov
add
aaa
sub
les
dec
mov
dec
pushl
xchg
inc
incl
mov
pushl
jae
call
inc
ljmp
dec
lcall
arpl
inc
lret
dec
pushl
cmp
jmp
mov
pushl
push
jmp
cmpsl
inc
cld
mov
cmp
cld
lods
cmp
cld
scas
cmp
std
mov
std
mov
cld
mov
inc
std
mov
cld
mov
mov
mov
xor
add
add
xor
inc
decl
push
call
push
ljmp
imul
in
imul
pop
fcomps
push
imulb
popa
call
pusha
lcall
pusha
incl
inc
jmp
andb
dec
jno
in
mov
data16
fisubl
fisubrs
fisubrs
jmp
insb
fsubrl
fildll
jmp
insl
call
arpl
lock
add
add
sub
scas
sub
pushl
mov
xor
xor
xor
aaa
mov
das
pushl
mov
pushl
mov
pushl
xor
cmp
cmp
cmp
cmp
cmp
cmp
ds
pushl
daa
pushl
mov
cmp
lock
inc
in
movsl
cmp
in
mov
xor
jmp
xor
jmp
xor
jmp
xor
in
mov
xor
jmp
xor
in
lahf
xor
in
mov
add
add
add
cltd
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
lcall
xor
incl
add
mov
add
aaa
shlb
clc
loope
std
hlt
lock
cld
sti
cli
repz
clc
out
call
push
in
out
imul
out
clc
out
jmp
lcall
aaa
add
popf
cmp
lcall
aaa
add
popf
cmp
lcall
cmp
lcall
aaa
add
add
add
shlb
push
aad
sti
out
jmp
cld
sti
stc
icebp
in
push
in
out
imul
out
imul
out
clc
out
out
clc
out
jmp
jmp
xchg
jg
xchg
xchg
cmp
dec
sbb
inc
mov
shlb
cmp
mov
add
mov
add
aaa
shlb
std
cld
std
cli
stc
cld
stc
idiv
std
cli
stc
jmp
push
push
lcall
push
sbb
jmp
inc
or
cmpsl
inc
or
test
or
cmpsl
inc
or
add
add
shlb
incl
cld
stc
idiv
cmc
jmp
hlt
out
push
jmp
in
stc
repnz
cld
clc
idiv
pushl
push
adc
mov
adc
mov
ud0
push
ud0
push
adc
mov
adc
mov
ud0
add
mov
add
aaa
shlb
mov
sahf
jnp
mov
pop
adc
mov
jae
dec
xchg
lret
addl
mov
add
mov
add
aaa
shlb
incb
add
push
jmp
sar
repnz
push
out
push
in
in
cli
repz
std
sti
cli
inc
gs
jmp
sar
addl
insb
and
leave
je
dec
jb
inc
imul
les
incl
add
mov
add
aaa
shlb
dec
insl
sbb
lret
dec
insl
sbb
lret
dec
insl
sbb
lret
dec
insl
sbb
lret
dec
insl
sbb
lret
incl
add
mov
add
aaa
shlb
call
call
call
call
call
call
call
call
call
call
ljmp
mov
inc
in
call
je
call
je
inc
mov
shlb
shlb
call
je
call
je
call
je
call
jne
call
je
incl
add
mov
add
aaa
shlb
mov
jmp
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
inc
in
std
inc
in
call
jl
ljmp
sarb
fisttpl
pop
jmp
lahf
pop
fadds
and
xlat
jl
incl
add
mov
add
aaa
shlb
mov
lock
in
cld
push
jmp
push
in
in
cmc
call
in
std
sti
cli
fiadds
dec
pushl
test
jmp
mov
fiadds
fldl
add
shlb
push
std
dec
idiv
cld
div
cld
clc
idiv
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
sub
jmp
lea
jmp
lea
jmp
lea
incl
add
mov
add
aaa
shlb
call
aam
push
sti
repz
push
jecxz
push
jecxz
push
jecxz
push
ljmp
stc
icebp
jmp
jmp
sub
mov
xchg
sub
push
mov
jp
out
stos
pop
in
xchg
cs
in
xchg
sub
mov
add
aaa
shlb
fcomi
les
cld
cld
sti
div
sti
cmc
icebp
sti
div
cld
clc
idiv
cld
clc
cmc
std
cli
stc
push
pushf
xor
mov
fcmovb
push
popf
xor
repnz
xor
repz
push
test
push
pushf
xor
repnz
xor
repnz
xor
add
add
shlb
out
pushf
xor
loop
push
fdivs
xor
repz
xor
repnz
xor
repnz
xor
repnz
xor
repz
xor
repz
xor
add
add
add
xor
add
add
jne
call
jne
incl
mov
cmp
jmp
mov
loop
sub
loopne
sub
loopne
sub
jmp
mov
loop
sub
loop
sub
jecxz
sub
jmp
sub
loop
sub
jmp
mov
loope
sub
loope
sub
in
sub
push
pushf
xor
add
add
add
and
add
add
jne
fldl
lret
xchg
mov
jmp
mov
jmp
mov
jmp
mov
loopne
sub
fisttps
sub
fisttps
sub
loopne
sub
fimuls
sub
flds
sub
faddl
jmp
lea
dec
mov
add
add
add
add
clc
movsb
xor
jmp
mov
in
xchg
xor
cmc
mov
xor
repz
xor
repnz
xor
icebp
popf
xor
lock
xor
out
fwait
xor
out
lcall
lock
xor
out
lcall
in
xchg
xor
jmp
xor
out
cltd
xor
repnz
xor
out
cltd
xor
mov
xor
sub
add
or
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
aas
sub
add
adc
add
and
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
jmp
and
es
pushl
mov
ljmp
mov
inc
imul
push
sbb
xchg
inc
or
decl
inc
push
call
dec
ud0
add
cltd
cmp
cmp
sub
and
sbb
ret
lcall
sahf
sub
pop
sub
es
sub
mov
je
call
je
call
je
call
jne
jmp
jl
call
je
incl
add
cltd
xor
lcall
nop
aas
ficoms
decl
mov
adc
sub
sub
and
mov
mov
jmp
test
jmp
test
jmp
mov
add
add
or
jns
ljmp
lods
jmp
lock
call
pushf
cmp
lcall
test
fsts
cs
out
xchg
sub
in
xchg
sub
out
xchg
sub
lahf
xor
icebp
cltd
xor
add
add
ss
das
call
jl
call
cmp
pushl
push
cmp
inc
call
shlb
pop
jl
stc
mov
mov
inc
mov
inc
inc
dec
cld
scas
inc
incl
add
xchg
cmpsl
pop
cmp
sub
cmp
daa
incl
xor
sub
jbe
sti
mov
push
stc
rorl
lds
test
pop
std
mov
add
sarl
dec
mov
int3
xchg
js
mov
lds
jno
int
jnp
mov
sub
lcall
cmp
xchg
sub
incl
add
xchg
add
adc
add
add
add
add
mov
cmc
push
std
jmp
jns
jmp
jae
ljmp
add
xchg
add
adc
add
add
add
add
mov
jmp
std
sti
push
in
push
out
ljmp
mov
aaa
dec
imul
mov
add
xchg
add
adc
add
add
add
add
mov
fdivr
lock
ljmp
jmp
push
cli
mov
mov
gs
xlat
jp
dec
outsb
push
incl
add
xchg
add
adc
add
add
add
add
repnz
decl
decl
inc
ljmp
xchg
xlat
leave
inc
pushf
pop
jmp
xchg
fnstcw
incl
add
xchg
add
adc
add
add
add
add
mov
jmp
push
ljmp
ficoml
inc
ljmp
call
add
xchg
add
adc
add
add
add
add
mov
ljmp
stc
call
call
mov
call
mov
pop
stc
mov
add
nop
push
incl
mov
xchg
out
les
push
lds
fcomps
sub
jmp
add
add
push
fidivrl
lret
jno
sarl
out
test
jmp
test
jmp
adcl
out
adc
jmp
mov
jmp
mov
ljmp
add
adc
add
incl
add
incl
add
add
sbb
add
sbb
add
and
add
pop
incl
add
add
add
dec
incl
add
add
xor
add
das
incl
add
incl
pop
and
add
add
push
add
and
add
add
add
add
add
adc
adc
add
add
addb
add
add
and
add
add
add
or
add
add
adc
add
add
add
add
and
add
add
add
adc
add
add
add
add
add
add
add
