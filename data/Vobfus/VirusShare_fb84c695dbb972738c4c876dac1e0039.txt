push
loopne
jb
fwait
mov
jb
fwait
mov
jb
inc
mov
jb
cpuid
jb
mov
jb
fisubs
jb
out
mov
jb
insl
mov
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
call
add
dec
add
add
add
add
add
add
add
inc
out
hlt
ret
sbb
inc
cmpsb
and
popf
push
push
pop
inc
add
add
add
add
add
cmp
xor
cmp
inc
dec
aaa
xor
xor
jge
xor
add
xor
inc
cmp
add
add
add
add
add
add
add
add
nop
fmull
clc
outsb
int3
pop
rorl
add
add
add
add
add
xor
add
cmp
dec
outsl
add
insb
xor
bound
or
inc
outsl
outsb
je
outsl
insb
xor
xor
pop
test
inc
mov
call
fisubrl
insb
xchg
rol
test
inc
xchg
jecxz
ror
xor
push
add
add
add
add
add
jo
inc
add
add
add
inc
add
add
add
sbb
add
insb
sbb
add
sub
inc
add
add
jb
ds
jns
xchg
inc
in
test
aas
stos
add
add
inc
add
add
imul
cli
nop
fmull
clc
outsb
int3
pop
rorl
add
add
add
add
add
xor
add
or
or
add
add
add
inc
add
adc
add
mov
add
decl
add
add
add
add
add
add
add
add
inc
add
add
addl
add
add
add
jno
dec
inc
push
pop
jbe
add
inc
outsl
popa
dec
inc
xor
add
xor
inc
dec
aaa
xor
add
add
add
inc
add
add
add
incl
add
add
inc
inc
add
add
add
add
add
add
add
das
add
adc
mov
inc
add
inc
add
add
inc
add
inc
add
inc
add
inc
add
pop
inc
add
inc
add
inc
add
inc
add
pop
inc
add
adc
add
inc
add
adc
pop
pop
inc
add
add
inc
add
inc
add
sbb
inc
add
pop
inc
add
adc
mov
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
pop
and
fsubl
inc
add
inc
add
inc
add
inc
add
and
pushf
and
movsb
and
mov
inc
add
and
enter
aam
inc
add
es
add
inc
add
das
inc
add
inc
add
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
hlt
add
add
inc
add
add
add
das
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
add
xchg
add
lods
add
add
add
add
push
stos
and
adc
add
int
stos
and
adc
add
int
stos
and
adc
add
int
xor
inc
popf
mov
inc
xchg
inc
push
mov
sarl
mov
xchg
add
push
int3
cmp
add
add
add
add
decl
add
add
movsb
and
jl
dec
movsb
scas
xchg
pop
cmp
xchg
lods
imull
add
mov
add
add
popw
push
cmp
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
test
jmp
std
jmp
std
jmp
std
jmp
add
add
add
inc
add
add
add
dec
add
add
add
mov
add
lea
add
push
push
add
clts
add
adc
add
adc
add
adc
add
adc
add
xchg
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
std
incl
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
je
popa
outsb
add
outsb
je
gs
fs
inc
outsb
popa
bound
add
popa
push
outsl
jne
arpl
inc
popa
je
dec
gs
bound
add
add
xor
inc
add
add
add
add
xor
sub
add
add
add
inc
add
add
xor
inc
add
add
add
add
inc
add
push
dec
inc
dec
pop
inc
inc
cs
inc
pop
add
dec
imul
imul
js
jb
fs
imul
insb
gs
jb
add
dec
inc
insb
gs
jb
add
add
add
add
xor
inc
add
add
add
add
incl
add
add
inc
inc
add
add
add
add
add
add
add
inc
add
add
add
and
add
add
xchg
sbb
add
add
pushf
sbb
add
add
cwtl
sbb
add
add
mov
add
add
insb
add
inc
add
add
fmul
xor
sbb
inc
add
add
inc
add
inc
add
inc
add
sub
cmp
add
cmp
inc
add
incl
add
add
add
add
add
xor
dec
and
incl
adc
inc
add
add
and
add
add
or
inc
add
and
add
add
inc
add
add
add
and
add
add
jo
inc
add
and
add
add
inc
add
add
add
cld
and
add
add
mov
inc
add
and
add
add
daa
sbb
add
add
add
sbb
mov
inc
add
adc
enter
adc
inc
add
inc
add
sbb
add
sbb
adc
inc
add
inc
add
add
add
add
add
sbb
adc
inc
add
inc
add
add
add
cmp
mov
push
ret
add
add
cmp
add
incl
add
add
inc
inc
add
inc
dec
pop
pop
jno
inc
xchg
sbb
dec
popa
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
call
add
add
inc
inc
add
add
add
sbb
add
add
add
add
add
incl
add
addb
add
add
adc
inc
add
call
add
hlt
sbb
add
add
add
sbb
add
incl
add
mov
add
add
add
fs
dec
xor
ss
push
jae
jb
outsl
outsb
je
outsl
insb
xor
add
add
xor
inc
dec
aaa
xor
add
add
add
add
jb
gs
xor
add
add
push
add
add
gs
add
adc
inc
add
add
xor
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
outsb
inc
js
arpl
adc
inc
add
add
add
cmp
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
fs
insb
add
add
add
push
je
inc
arpl
jo
gs
inc
jne
data16
movsb
sbb
inc
add
add
dec
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
insb
xor
add
add
add
inc
gs
outsl
insb
fs
popa
je
push
add
add
cld
sbb
inc
add
add
push
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
push
push
inc
add
inc
add
add
pusha
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
add
inc
fs
gs
popa
je
inc
add
add
add
insb
inc
inc
add
or
je
jmp
push
mov
call
jmp
add
add
or
add
add
add
add
add
add
add
add
push
inc
inc
ss
dec
dec
add
add
push
add
add
push
add
add
add
add
push
add
add
add
add
add
dec
add
add
cmp
push
add
xor
and
push
add
xor
add
add
sub
inc
add
pop
inc
add
add
add
add
add
add
add
jae
incl
add
add
add
add
add
add
add
mov
dec
sbb
mov
cmp
sub
inc
add
inc
add
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
bound
dec
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
js
add
add
add
push
add
add
add
add
add
inc
add
add
add
add
js
push
add
inc
add
add
add
add
add
add
add
add
add
adc
add
inc
add
inc
add
jbe
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
arpl
add
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
or
add
je
popa
add
imul
add
add
add
add
jae
je
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
xor
or
stos
add
xchg
xor
ja
xchg
add
jge
test
inc
inc
mov
nop
fmull
clc
outsb
int3
pop
rorl
xchg
jns
xchg
inc
in
test
aas
stos
pop
test
inc
mov
call
fisubrl
insb
xchg
rol
test
inc
xchg
jecxz
ror
xor
adc
xor
or
stos
add
xchg
push
jae
jb
outsl
outsb
je
outsl
insb
add
cmp
push
add
xor
inc
cmp
outsl
addr16
insl
and
insb
gs
dec
imul
je
push
imul
je
imul
pop
push
inc
ss
dec
inc
add
add
add
add
inc
add
add
add
add
add
add
add
inc
add
and
jl
inc
add
xor
add
xor
or
stos
add
xchg
dec
jo
imul
lods
xor
or
stos
add
xchg
push
imul
dec
out
movsb
and
jl
dec
movsb
scas
xchg
pop
cmp
inc
insb
gs
jb
xor
add
add
ja
or
cmp
sub
pop
filds
pop
push
imul
jae
jae
gs
xor
pop
dec
push
dec
inc
dec
pop
inc
inc
outsl
arpl
add
add
dec
imul
imul
js
jb
fs
imul
inc
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
xor
or
push
add
int3
xor
add
sbb
xchg
jns
xchg
inc
in
test
aas
stos
xor
ja
xchg
add
jge
test
inc
inc
adc
xor
or
stos
add
xchg
cmp
add
sub
add
add
push
jae
jb
outsl
outsb
je
outsl
insb
xor
sub
add
inc
add
add
add
rclb
add
push
add
incl
sub
add
add
add
je
outsl
outsb
xor
push
add
add
je
outsl
outsb
xor
add
pop
pop
add
add
incl
sbb
add
add
add
gs
add
pop
cmp
add
mov
add
or
dec
push
dec
inc
insb
gs
jb
xor
jmp
imul
imul
js
jb
fs
imul
insb
gs
jb
add
or
rolb
or
add
dec
inc
or
dec
add
add
inc
xor
or
add
rorb
add
xor
add
inc
outsl
outsl
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
orb
add
or
add
orb
add
adc
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
call
add
cmp
inc
rol
add
cmpb
add
add
add
add
add
add
incl
add
incl
add
add
add
add
incl
add
add
add
push
jecxz
xchg
into
adc
dec
mov
add
add
popa
outsb
jae
push
gs
data16
add
add
add
jecxz
xchg
into
adc
dec
mov
add
add
add
add
add
add
xor
pop
add
add
add
add
add
push
cwtl
or
add
add
add
add
jl
inc
add
movsb
pop
add
adc
add
inc
add
add
or
and
add
add
add
adc
add
add
or
add
or
add
adc
inc
add
incl
add
add
and
add
cmp
inc
add
and
add
push
add
add
add
add
add
xor
inc
add
incl
add
add
add
incl
add
add
inc
add
inc
add
and
mov
add
inc
add
inc
add
and
nop
inc
inc
add
add
add
or
add
add
add
cmp
and
push
incl
add
add
add
add
decl
add
or
add
jmp
je
ss
push
incl
add
insb
je
pop
add
add
cmc
add
add
cmc
add
add
orb
add
add
pop
add
adc
jno
cmp
cmp
jno
incl
or
add
add
add
cmp
push
cmc
add
add
insb
je
inc
pusha
push
add
add
add
decl
add
or
add
push
add
add
incb
sub
add
sti
pushf
sbb
cld
and
decl
decl
inc
add
decb
add
cld
pusha
xor
ss
add
inc
cld
incb
add
add
addb
add
add
add
add
adc
add
add
adc
add
add
add
add
add
js
add
je
add
sbb
add
add
add
add
add
push
incl
add
add
sbb
add
cld
incb
add
add
add
sbb
cld
lret
in
cli
add
add
add
sub
call
or
add
add
add
cmp
or
or
hlt
add
lret
jno
incl
or
add
add
add
cmp
or
add
add
add
cmp
or
jno
incl
or
add
add
add
cmp
pop
cmc
add
add
insb
je
insb
adc
decb
add
addb
dec
cmc
add
add
adcb
cs
add
jno
ljmp
add
add
incl
add
add
jno
ljmp
ljmp
insb
pop
ljmp
insb
incl
adc
add
add
cmc
add
add
scas
insb
adc
decb
add
addb
pop
hlt
pushl
incl
or
add
add
add
cmp
add
add
add
add
add
add
add
add
adc
add
add
or
add
adc
add
add
add
add
add
push
incl
add
add
lcall
push
add
pop
add
and
sbb
add
inc
push
jmp
imul
and
add
add
cld
pusha
cmp
add
incl
incl
das
jo
ss
push
incl
cmc
add
add
or
add
cmp
add
add
or
add
cmp
add
add
adcb
add
add
scas
add
decb
add
addb
add
add
or
add
cmp
add
add
or
add
cmp
or
add
add
decl
or
or
or
add
add
pop
cmp
add
incl
decl
push
add
cmc
add
add
or
add
cmp
or
hlt
add
pop
and
hlt
add
lcall
cmc
add
add
or
add
cmp
add
cmp
add
add
add
cmp
enter
or
add
cmp
add
add
or
add
cmp
add
add
orb
adc
sub
jo
add
pushl
xor
or
add
add
add
jo
xor
adc
cmp
or
add
add
xor
or
decl
insb
cmp
cmc
inc
add
add
sbb
lcall
add
add
dec
add
cmp
add
add
add
adc
add
add
and
add
add
add
add
add
je
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
xor
add
push
incl
add
add
cmp
add
add
add
add
add
add
adc
ljmp
pop
call
daa
pop
sti
xor
sbb
add
adc
ljmp
pop
incl
add
xchg
dec
cld
imulb
add
sub
add
add
decl
pop
add
add
add
dec
cmp
add
bndstx
add
sbb
sub
out
add
add
pop
xor
or
add
and
lcall
sbb
sub
js
das
xor
add
add
add
add
cmp
jne
sbb
sbb
lcall
push
add
and
sbb
add
and
lcall
and
sub
and
sbb
add
and
lcall
and
sub
sbb
sbb
add
and
lcall
sbb
lcall
and
sub
adc
sbb
lcall
add
and
lcall
daa
add
std
out
add
add
push
add
ljmp
sub
and
and
sbb
sbb
adc
adc
or
or
add
cmc
pop
xchg
add
pop
add
cmc
add
add
ljmp
sbb
add
and
call
std
sub
or
add
xor
xor
sub
add
cmc
mov
add
push
data16
add
ljmp
sbb
add
and
call
std
sub
or
add
xor
xor
sub
add
add
add
add
or
decl
cmc
add
add
sbb
sbb
lcall
add
and
sbb
add
and
lcall
xor
sub
and
sbb
add
and
lcall
xor
sub
sbb
sbb
add
and
lcall
xor
sub
adc
sbb
lcall
add
and
sbb
add
and
insb
or
sub
clc
xchg
or
add
sub
hlt
incb
xor
lock
adc
or
cmp
push
add
ljmp
sub
and
and
sbb
sbb
adc
adc
or
cld
decb
clc
hlt
lock
sbb
incl
add
add
mov
or
sub
add
add
add
adc
add
add
adc
add
add
add
add
add
push
incl
add
add
add
add
add
add
incl
add
add
sub
add
and
add
and
add
sbb
add
sbb
add
adc
add
adc
add
or
add
or
add
cld
incb
add
incb
add
incb
add
incb
add
incl
add
add
cmp
add
add
insb
adc
inc
js
add
cs
add
add
cmc
addb
add
decl
decl
inc
add
decl
push
add
add
cld
pusha
and
add
incl
incl
xor
cmc
add
add
or
add
cmp
or
add
add
add
cmp
adc
add
push
incl
add
fs
addl
jmp
insb
pop
incl
jmp
jmp
ljmp
add
cmc
add
add
jno
incl
or
add
add
jno
incl
or
add
add
jno
incl
adc
add
push
incl
add
fs
sub
add
insb
push
ljmp
add
lcall
ljmp
dec
ret
cld
nop
out
cmc
add
add
ret
incl
pop
incl
lcall
dec
incl
or
add
add
add
cmp
adc
add
lcall
pusha
jmp
add
add
add
add
cmp
paddb
dec
cld
adc
push
incl
jmp
jmp
pushl
add
add
incl
or
add
add
jno
incl
or
add
add
jno
incl
es
add
add
cmc
inc
add
add
dec
xor
adc
and
or
add
add
jmp
inc
pushl
cmc
add
add
or
add
cmp
adc
add
add
add
ljmp
dec
fs
jg
add
push
push
add
add
stos
cmc
add
add
ret
incl
pop
insb
push
ljmp
add
lcall
add
add
jno
incl
or
add
add
add
cmp
or
add
add
add
cmp
push
incl
lcall
dec
incl
adc
add
lcall
pusha
jmp
add
add
add
add
cmp
or
add
add
add
cmp
paddb
dec
cld
adc
push
incl
jmp
add
add
add
add
cmp
or
add
add
add
cmp
xor
orb
nop
cld
adc
push
incl
lcall
pusha
lcall
shl
pusha
lcall
insb
pop
incl
add
add
add
add
cmp
or
jmp
call
add
pushf
adc
or
je
test
add
add
add
add
add
add
add
add
add
add
add
add
pusha
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
and
add
and
add
add
add
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
int3
das
add
call
xor
add
adc
add
xor
add
add
inc
xor
add
add
insb
xor
add
add
andb
or
add
test
add
lods
add
andb
imul
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
dec
gs
inc
popa
insb
insb
inc
outsb
imul
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
inc
jne
arpl
outsb
inc
popa
insb
insb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outsb
fs
gs
add
add
outsl
arpl
insb
insb
inc
outsb
addr16
.byte
outsb
add
add
add
inc
inc
dec
add
add
add
add
sbb
add
add
add
dec
add
orb
add
pusha
add
addb
add
inc
inc
dec
add
add
add
add
add
add
add
nop
add
addb
add
add
add
test
add
inc
inc
dec
add
add
add
add
add
add
rolb
addb
add
inc
inc
dec
add
add
add
add
or
add
add
add
add
add
inc
dec
add
add
add
add
or
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
add
add
add
or
add
sub
add
xchg
add
mov
add
add
add
xor
add
nop
arpl
add
add
add
dec
add
test
add
push
add
add
add
add
add
push
add
push
add
dec
add
add
inc
les
mov
jne
sbb
sub
setns
xor
mov
scas
mov
test
stos
mov
push
icebp
pop
pop
shrw
mov
sbbl
leave
jno
mov
stos
sub
out
cltd
lds
cmp
jl
xor
mov
or
add
adc
xlat
push
in
cli
bound
sti
mov
adc
aad
hlt
cmp
and
or
xor
std
imul
mov
push
dec
mov
mov
mov
pop
jge
sbb
jl
mov
mov
push
daa
lahf
adc
shrb
cmp
mov
xchg
bound
sbb
aas
fistpl
jle
imul
add
shl
lret
fisubl
lods
pop
ss
dec
sti
xor
jmp
cmpsl
out
inc
outsl
cmp
btc
mov
inc
mov
fimull
fldl
xchg
sub
dec
insb
stos
es
scas
frstor
ret
or
leave
and
imul
int3
js
and
jg
cmp
adc
xchg
fsubs
scas
daa
sbb
jb
jle
loope
or
and
mov
jmp
push
mov
idivl
scas
inc
xchg
mov
mov
inc
adc
add
lahf
js
aaa
or
push
mov
mov
insl
iret
scas
fucomp
adcl
jns
cmp
jne
jmp
mov
test
push
dec
bound
xchg
loopne
pushf
fwait
or
inc
xchg
aam
mov
je
jecxz
sbb
es
je
test
loopne
adc
dec
cwtl
loopne
imul
pop
rcrb
dec
fxch
loopne
sub
je
data16
movsb
in
in
cmpb
cmp
jmp
fisubl
jl
dec
jae
addb
pop
mov
dec
dec
out
orl
pop
adc
movsb
mov
pop
out
imul
call
mov
idivb
in
and
shrb
dec
lcall
fiaddl
inc
cmp
mov
mov
dec
into
mov
fmull
xor
cmp
add
sbb
push
pop
cltd
popa
inc
lahf
jmp
fwait
and
adc
notl
aam
loope
adc
cltd
jae
loopne
pop
mov
test
movsb
inc
xor
jo
aad
mov
pop
fdivrs
in
popf
mov
cli
mulb
xchg
pop
mov
es
or
xchg
iret
fdivrs
push
sub
mov
dec
lds
jo
out
add
in
mov
push
cltd
fadd
dec
hlt
rcrl
mov
sub
add
out
in
cmp
mov
sbb
dec
jnp
mov
cs
bound
jp
inc
lods
sti
adc
in
or
sbb
js
pop
lock
inc
dec
mov
in
push
imul
dec
jo
es
cmpsl
mov
push
aam
std
enter
sub
adc
xor
or
push
ret
inc
in
rcrl
mov
push
sbb
pop
cwtl
push
sbb
and
dec
outsl
in
sarl
cli
xchg
fs
jmp
ret
cs
mov
pop
bound
xchg
xchg
js
lea
fdivs
mov
push
sub
mov
lahf
lahf
js
insb
fs
mov
cmpsb
fisubrl
push
xor
int3
sub
cmp
pop
bound
pop
mov
fwait
sarb
daa
addr16
clc
fsubl
mov
je
mov
rcrl
xor
and
je
sbb
outsl
loopne
imul
adc
mov
aam
push
ret
cmpl
stos
aam
stc
mov
push
inc
mov
lds
insb
in
xchg
in
fwait
loopne
pusha
aas
jnp
dec
add
hlt
out
push
fdivl
test
fmul
rol
mov
pop
pop
call
outsb
and
inc
out
arpl
scas
iret
rcrl
sub
dec
repz
xor
loope
inc
dec
incb
lods
in
sbb
mov
dec
xor
mov
push
pop
test
sbb
or
rclb
jne
sbb
and
scas
pop
mov
jg
dec
das
jnp
fistps
push
int3
pop
mov
cmp
mov
daa
rcll
enter
inc
loopne
push
xchg
jge
imul
in
mov
adc
jle
fdivrl
xor
push
imul
mov
orb
xchg
test
mov
xlat
push
pop
cmp
int3
adc
jle
fildll
jmp
sub
repnz
ja
popf
fdiv
addr16
and
sti
popf
sbb
lret
insb
rcrb
xorb
pop
jns
jg
mov
push
xor
pop
cmc
nop
mov
jae
lock
and
arpl
jnp
jp
or
decb
sbb
cmp
xor
inc
xchg
data16
roll
mov
out
jle
add
lea
and
mov
mov
lret
mov
out
iret
adc
aas
pop
cmp
shlb
vmovaps
insb
sbb
sti
in
cli
cmpsl
dec
bound
sbb
jecxz
cmpsl
mov
sub
clc
out
pop
sub
pop
pop
repnz
jg
aas
dec
les
pop
rcrb
dec
mov
lods
xchg
pushl
lock
fistpll
stos
cmpsl
and
cmp
mov
outsl
aaa
comiss
dec
add
pop
jno
and
and
shlb
bound
mov
adc
scas
fisttpll
lret
sub
mov
push
mov
cmp
popa
jae
dec
je
jb
add
insl
dec
shl
adc
hlt
fisubs
addr16
jo
cltd
pop
shll
and
loopne
cmp
sub
or
leave
fxch
neg
jl
mov
mov
add
dec
sbb
lahf
and
fidivrl
push
lret
xchg
push
movsl
outsb
adc
ret
jecxz
push
sti
stos
and
add
dec
jbe
enter
mov
adc
xchg
mov
testb
pop
movntps
es
dec
push
hlt
push
test
inc
cmp
loope
mov
mov
es
push
repnz
inc
mov
lret
lcall
jne
mov
out
jecxz
add
push
fistps
dec
adc
add
mov
mov
lret
inc
dec
mov
outsl
fisttpll
xchg
add
sub
or
lods
add
decl
sbb
fucomi
ret
or
gs
adc
mov
sub
pop
mov
fincstp
shll
lret
or
or
jno
jge
outsb
in
inc
push
pop
xor
jle
mov
xchg
xor
pop
cld
jecxz
adc
in
inc
test
inc
cmp
adc
mov
xor
rorl
sub
cmp
in
push
loopne
pop
inc
mov
insl
int
decb
clc
imul
popf
and
jo
or
xchg
inc
test
test
addb
push
dec
xlat
jbe
mov
jbe
mov
fidivs
xchg
pushf
out
fsts
cmp
cmp
push
scas
xchg
pop
and
add
fcmove
stos
aas
pusha
xor
test
pusha
cmp
loop
jle
loop
out
pusha
mov
pusha
out
xor
std
imul
mov
imul
jns
addr16
mov
loopne
cld
rcl
ds
xor
or
in
popf
jg
push
mov
mov
and
and
fucomip
fistl
je
cmp
push
adc
jnp
inc
adc
cmp
cld
inc
add
mov
push
inc
mov
mov
ja
les
mov
xchg
inc
xor
dec
inc
lds
out
sbb
fisttpl
addb
and
cmc
sbb
pop
push
sub
adc
jl
les
mov
jo
xor
pop
pop
sub
in
sbb
pop
mov
lods
mov
enter
sub
repz
sahf
arpl
mov
ss
pop
add
ljmp
arpl
jg
inc
fisubrl
xor
add
push
jbe
repz
addb
icebp
cmp
cmp
test
sub
xchg
or
add
pushl
jp
sbb
test
mov
repnz
cmpsb
movsl
test
push
mov
sti
jb
sar
ljmp
imul
aas
mov
mov
inc
push
data16
jns
mov
adc
aas
cmpsb
pop
sbb
repz
movsb
push
enter
notb
jne
fsub
sub
popf
xor
loop
enter
lock
sbb
adc
jo
call
cmp
test
adc
inc
xor
mov
dec
jb
lcall
rclb
dec
icebp
movsb
mov
outsl
xchg
mov
push
dec
rcl
inc
andl
mov
add
aad
or
add
and
jmp
jecxz
subb
scas
arpl
cmp
push
das
inc
xor
mov
lcall
aam
mov
sub
mov
mov
fwait
mov
bound
sbb
jnp
out
sbb
and
ss
and
aad
inc
sbb
push
sub
push
js
sub
cmp
or
mov
jl
jle
sbb
mulb
cld
aam
outsl
data16
out
sti
xor
cmp
pop
or
bound
push
daa
gs
push
xchg
rol
pop
push
stos
xlat
scas
pop
sahf
arpl
jp
xchg
mov
nop
xchg
cmp
fsubl
fdivr
popa
faddl
inc
in
into
pushl
enter
lahf
sub
jo
jnp
xchg
fcoms
sbb
inc
iret
int3
stc
add
int3
and
lock
leave
mov
mov
arpl
push
scas
inc
hlt
sbbl
call
jns
je
iret
jl
hlt
cmp
cwtl
fdivr
sbb
mov
and
and
xchg
enter
or
push
das
shr
lds
adc
mov
fsubrs
stos
inc
cld
addl
cwtl
sahf
xchg
clc
out
jp
adc
sbb
xchg
dec
cmp
mov
arpl
or
cmp
lahf
sub
leave
in
mov
add
inc
push
rcll
lods
repz
in
pop
xchg
gs
es
xor
xor
push
mov
pop
sub
jp
fsubr
cli
mov
mov
or
outsl
xchg
cmp
outsl
xchg
jmp
xchg
fs
sub
jecxz
fsts
je
test
fwait
pop
pop
pop
outsl
xchg
sub
arpl
xor
ficomps
cltd
aam
lret
cmp
bound
shlb
enter
in
addr16
stc
xor
testb
or
aam
mov
mov
xchg
mov
mov
pushf
or
adc
call
ljmp
cmc
lcall
inc
xor
jno
and
mov
scas
fisubl
popa
dec
test
inc
pop
and
aam
and
xor
fstpl
mov
mov
inc
leave
add
push
test
cmp
xor
daa
popa
testl
rcll
mov
cmp
mov
and
mov
test
xor
sub
jg
cltd
mov
dec
adc
daa
daa
iret
aad
sub
mov
mov
cmp
testb
cmpl
repnz
pop
push
pop
xchg
icebp
sti
aad
pop
ficomps
mov
repz
mov
fwait
je
inc
lret
and
aaa
pop
xlat
pop
xchg
out
out
lods
fsubrs
push
cmp
shlb
out
sub
leave
and
jae
or
out
test
sbb
fisttpl
pusha
inc
and
mov
xchg
mov
adcb
dec
ds
shll
lret
xlat
mov
or
rcrb
xor
sbb
es
sbb
insl
jmp
push
sub
cli
or
adc
test
cmpsb
adc
xor
loopne
xor
and
out
and
fldt
pop
add
mov
cwtl
xor
data16
xchg
fwait
mov
enter
mov
stos
mov
pop
popa
jp
push
mov
jbe
shlb
aad
mov
sbb
push
mov
movsl
rcrl
lret
arpl
out
rcr
jl
mov
xchg
iret
gs
mov
cmp
xor
cmp
rcr
notb
mov
xchg
mov
push
mov
xchg
movb
cmpsb
sbb
add
mov
cmp
cld
mov
lods
add
cli
test
ljmp
ss
xorl
insb
inc
xchg
add
xchg
push
pop
mov
fcoml
sbb
jae
mov
and
nop
pop
icebp
xlat
sti
stos
adc
jp
xorl
addr16
sbb
sub
add
mov
sub
mov
insl
add
push
sbb
jne
lods
mov
in
adc
gs
pop
jo
jge
xchg
icebp
stc
and
cld
push
lret
pop
dec
mov
nop
pop
in
and
mov
fbstp
xchg
scas
popa
jns
pop
dec
mov
inc
push
sub
pop
dec
bnd
aas
mov
push
icebp
and
xchg
jb
mov
mov
icebp
jmp
or
mov
ficoms
cmp
or
test
popa
rorb
adc
mov
push
jecxz
daa
cmp
and
mov
add
inc
push
push
pop
loopne
and
xchg
add
pop
out
sbb
mov
outsl
shlb
mov
sti
and
adc
mov
jno
add
mov
scas
out
fcomps
jg
lret
imul
mov
dec
nop
sub
xchg
pop
xchg
jp
aaa
scas
xor
int
mov
cmp
out
sub
cmpsb
mov
sub
dec
mov
xchg
pop
mov
fs
pop
add
and
aas
xchg
adc
sbb
clc
cltd
adc
cmp
push
imul
pusha
sbb
mov
mov
push
pop
hlt
popf
test
push
call
xchg
adc
pop
dec
lret
les
dec
mov
data16
push
cs
adc
int
mov
jns
or
fwait
pop
jge
sub
mov
nop
adc
les
popa
mov
jg
add
adc
in
jmp
mov
add
mov
pusha
dec
jmp
xlat
or
fst
sub
push
jbe
jns
sbbb
adc
mov
mov
sub
fisubrs
xchg
adc
ficompl
filds
sub
jmp
xorb
sbb
outsl
inc
sti
std
aas
push
das
sbb
or
movsb
mov
xchg
mov
push
add
mov
inc
xchg
cli
imul
jg
or
xlat
xchg
jge
ss
adc
cmp
mov
nop
adc
push
out
adc
pop
loop
rcll
fcomi
test
inc
xchg
pop
cwtl
or
mov
pop
jns
shlb
mov
push
xor
mov
dec
shlb
mov
cmp
add
xchg
add
xchg
and
jb
and
cmp
outsl
mov
push
f2xm1
cltd
xor
ds
subl
ljmp
pop
jp
popf
std
xchg
imul
mov
mov
out
lret
sbb
jl
bnd
xor
push
sar
gs
negb
mov
sub
add
jo
cmp
fsubrl
cld
adc
out
pop
imul
cmp
mov
or
and
mov
adc
jno
mov
push
xchg
cmp
out
adc
lret
mov
lods
xor
iret
push
shrb
cmc
jecxz
jmp
lock
jl
jae
das
pushf
push
js
stos
sbb
mov
pop
out
xor
pop
dec
nop
push
push
pop
fisubrl
pop
mov
or
xor
scas
fstpt
pop
and
xor
ror
andps
cmp
mov
pop
imul
or
dec
adc
sub
addr16
sti
dec
call
clc
loop
or
imul
loop
aaa
sarl
mov
sub
add
rorb
lods
sbb
in
lock
jbe
int3
jp
arpl
clc
xchg
pop
push
mov
sti
push
fisttpl
xchg
add
sahf
lret
pop
cltd
fwait
xor
push
and
ret
hlt
jg
push
mov
xchg
jecxz
sbb
jmp
ja
aam
les
jnp
pop
clc
sbb
in
xchg
cltd
ljmp
mov
imul
arpl
loopne
nop
and
cmp
pop
push
cmp
insl
or
std
jmp
std
xchg
fstl
and
jo
cmp
mov
lahf
mov
cmp
in
js
jmp
rolb
inc
out
out
xor
dec
sbb
cmpsl
hlt
repz
inc
adc
sub
rcr
sub
in
or
ljmp
mov
inc
add
je
jno
test
test
mov
sbbb
es
sbb
fwait
push
cmc
jbe
fwait
loopne
jo
std
add
test
adc
jns
xchg
and
rol
int3
push
and
aam
gs
add
imul
xchg
bound
cmc
in
fisttpl
pop
cmp
mov
cmp
mov
fisubs
cmp
daa
dec
jle
icebp
daa
mov
lods
pop
jne
in
mov
idivl
popa
mov
cld
shl
adc
add
cmc
sub
inc
xor
ljmp
and
push
inc
pop
movsl
and
xchg
pop
xchg
push
cmp
and
push
lds
sub
js
adc
je
std
xlat
or
inc
das
pushf
incb
rorb
cmp
push
cli
push
mov
sbb
ss
pop
adc
adc
mov
or
mov
jl
fbld
imul
sub
and
push
int3
cmpb
daa
rolb
in
stos
xchg
std
in
test
push
or
pop
les
jns
or
xchg
cmc
pop
cltd
inc
das
cmpl
js
jbe
testb
cmpb
and
mulb
mov
pavgw
inc
filds
iret
pop
push
mov
or
les
lods
mov
pop
push
jne
sbb
dec
notl
out
faddp
push
lds
outsb
arpl
outsl
push
jno
jp
je
ja
sub
lods
jb
mov
xchg
xor
ss
xchg
movsl
ljmp
mov
push
mov
in
sbb
pushf
jp
stc
dec
fsts
sub
stos
int
xor
push
daa
sti
aas
push
lret
cmp
std
sub
mov
cwtl
inc
and
jl
lock
stos
push
mov
push
sub
add
rclb
add
xchg
imul
jo
loop
fcmovne
inc
push
cmp
ss
les
rorl
xchg
xchg
test
add
inc
dec
insb
dec
mov
aaa
shlb
cmp
pop
and
dec
je
sbb
mov
ficomps
pop
adc
mov
inc
jg
scas
shr
fs
loopne
cmpsb
das
add
iret
dec
jecxz
xor
sahf
es
inc
dec
ja
mov
and
mov
jle
push
sbb
jbe
lret
push
inc
jne
out
xchg
sbb
sarl
jae
fdivrs
fisttpl
adc
xchg
imull
in
mov
jno
rclb
jmp
mov
pusha
fldln2
cmp
mov
mov
add
xchg
sbb
push
push
jno
mov
mov
notb
pop
in
and
loopne
mov
shll
push
shll
jb
adc
jae
pop
out
scas
mov
clc
xchg
js
lods
sub
fiaddl
inc
dec
inc
lret
pop
popf
arpl
and
adc
mov
push
jnp
adc
repnz
xchg
jnp
icebp
cmp
jg
xchg
inc
and
push
repnz
sbb
aad
out
jno
mov
jmp
xor
inc
out
cwtl
xchg
aam
or
into
in
xchg
js
sub
mov
add
cmc
mov
nopl
scas
lds
or
jecxz
addl
into
dec
das
mov
sub
scas
nop
xchg
pop
mov
imul
in
shl
jp
push
sbb
push
xor
ja
scas
jns
mul
jp
addr16
insl
mov
inc
mov
or
lahf
pop
push
dec
pop
xlat
sbb
loope
sub
fimull
mov
jecxz
push
push
pop
lock
sub
xchg
movsl
dec
lcall
ljmp
ja
notl
mov
cmc
cli
negb
call
cli
hlt
pop
out
scas
adc
mov
imul
sub
xor
or
sub
and
and
xchg
or
stos
mov
sbb
scas
imul
pop
les
dec
mov
pop
stos
out
sub
sub
rol
mov
idivb
push
push
sbb
leave
pusha
add
mov
and
ljmp
test
add
cwtl
out
jmp
enter
mov
call
push
cmp
push
xchg
inc
loop
push
arpl
cmp
mov
cmp
add
xor
loopne
cmp
add
fnstenv
clc
shl
js
sub
cmpsl
jmp
fadds
stos
jne
jae
cld
inc
push
ret
scas
xchg
push
and
inc
xchg
iret
xor
push
push
popf
stc
popf
fnsave
addl
fcoms
fildll
jp
lods
xor
cwtl
popf
and
jecxz
insb
cmp
cmp
sub
and
push
clc
jge
dec
les
xor
mov
or
add
sbb
cmpsl
xchg
aas
nop
and
add
cmp
xchg
cmpsb
push
imul
lea
std
sub
adc
loopne
mov
or
sub
add
aaa
sbb
ljmp
rcrl
loope
jnp
leave
jmp
mov
cmp
enter
sbb
dec
fwait
mov
sahf
mov
push
mov
inc
in
pop
pop
jbe
imul
or
xchg
pop
cmp
pop
or
rorl
pop
adc
jbe
loopne
outsb
push
sbb
jno
fdivl
lret
lods
lock
cli
jb
into
xchg
add
adc
hlt
loop
loop
xlat
or
and
jecxz
mov
addb
in
shlb
aas
xchg
imul
loope
out
sbb
in
lea
shl
xlat
lret
jmp
loope
leave
sub
imul
es
lods
int3
out
add
mov
adcb
jno
jle
addr16
out
out
lea
imul
mov
jnp
mov
bound
jno
cmp
or
dec
lret
in
dec
leave
lods
loop
mov
out
pop
cmp
jae
imul
sbb
xchg
sub
movsb
cmp
fmul
jns
mov
cmp
dec
push
inc
xchg
scas
aas
dec
push
insb
shlb
pop
out
aas
fldz
xor
in
push
in
adc
jg
add
mov
push
jge
inc
enter
adc
xor
push
sbb
push
mov
lods
pop
repz
addb
insl
xchg
pop
or
data16
pop
pop
mov
adc
jae
push
xchg
inc
pop
xchg
push
lahf
adcb
lds
dec
jg
pusha
or
cmp
xor
push
popl
lods
sbb
data16
or
jbe
inc
push
or
xlat
das
sbb
jmp
lret
adc
xchg
inc
xor
movsl
stos
sbb
call
icebp
lock
jg
mov
pop
int
shll
mov
dec
add
aas
cmp
xchg
pop
aad
out
mov
js
sub
stos
lret
lea
xor
cmp
cmp
dec
cs
gs
ret
mov
ficoml
js
popa
popa
jecxz
push
jno
cs
fnstcw
cmpsb
rcr
stos
add
les
pop
inc
bound
popa
js
inc
sbb
daa
xchg
lahf
fwait
mov
loop
inc
loop
sbb
ljmp
popa
sahf
stc
xchg
sub
sahf
mov
imul
push
cwtl
pop
and
adc
shrb
jmp
fcmovb
in
repnz
fadd
and
lods
pop
orb
adc
mov
stos
icebp
xchg
movsl
enter
adc
std
lcall
movsl
lods
or
jbe
or
cwtl
shll
inc
sbb
pushf
clc
adc
insb
cmc
xchg
stos
stc
mov
sub
mov
subl
jno
inc
cmp
dec
add
xchg
les
xchg
int
add
adc
dec
cmp
add
mov
fidivrl
loopne
pop
sbb
out
mov
pop
adc
ficoms
gs
out
mov
or
daa
loope
push
xchg
and
push
pop
dec
and
add
sbb
int3
sbb
adc
or
adc
inc
lret
test
sub
jae
fwait
cmp
jg
ret
outsb
add
sbb
push
negl
into
das
xchg
je
sahf
sub
mov
cmpsl
or
pop
push
inc
inc
shll
inc
lret
pop
jmp
movsb
nop
dec
jb
mov
ljmp
cltd
mov
mov
add
push
push
in
sbb
sbb
mov
add
out
xor
iret
xchg
sub
pop
adcl
inc
aad
push
dec
and
pcmpeqd
mov
add
mov
cmp
ljmp
jl
inc
mov
out
insb
or
and
push
fistl
add
push
jmp
dec
jne
jmp
adc
outsl
aas
jp
popw
stc
js
jae
mov
inc
sahf
in
mov
fstpl
test
xchg
aam
jg
out
test
xor
push
icebp
pop
mov
or
sbb
fbld
rcll
jnp
cmp
in
popa
jmp
lea
rcr
data16
mov
iret
cmp
test
jmp
cmpsb
mov
mov
gs
imul
inc
jge
lar
in
cmpsb
popf
lret
movsb
cltd
das
mov
fs
lock
jne
mov
cmp
mov
adc
sub
pop
lahf
clc
stc
outsb
jbe
scas
and
fildl
imul
cmpsb
loope
dec
rep
nop
sub
mov
in
insb
xchg
data16
fidivs
mov
or
pop
setno
add
mov
add
jno
mov
jae
in
pusha
pop
int
out
xchg
loop
call
into
xchg
push
aaa
iret
fwait
andb
and
test
test
jbe
inc
dec
fistps
mov
adc
push
test
jmp
lret
cmp
dec
out
or
out
inc
shlb
je
xchg
mov
lret
mov
addr16
pushf
xchg
sbb
dec
add
imul
scas
ja
mov
push
jge
dec
sarl
lods
xor
ss
addl
adc
or
fmull
test
shlb
sub
xchg
cmp
xchg
push
dec
pop
popa
pop
push
sbb
mov
addb
iret
les
jle
or
stos
adc
shrl
mov
nop
push
pop
popa
pusha
mov
movsb
cmp
dec
adc
shlb
or
cli
pusha
rorl
push
sub
and
iret
sbb
dec
repnz
xchg
xchg
lret
call
dec
mov
sbb
rcrb
test
stos
stos
fs
aas
aam
pusha
push
jbe
pop
out
loop
dec
and
xchg
sub
dec
lcall
sub
cld
ds
xor
xor
mov
mov
popf
add
push
xchg
rclb
and
and
dec
and
fimuls
cmc
sub
cmp
mov
fimull
loope
rclb
xchg
sahf
je
shrb
add
adc
pop
int3
jl
nop
adc
test
in
bound
push
and
inc
shll
imul
mov
xor
xor
push
dec
pop
push
push
sahf
mov
or
xchg
lods
jl
add
insb
mov
pop
ss
adc
test
and
xor
jg
test
inc
imul
roll
sub
scas
imul
mov
flds
adc
inc
mov
nop
scas
dec
stos
mov
sbb
mov
stos
sub
dec
xor
push
pushf
xchg
xor
xlat
rcrl
pop
push
les
mov
movsb
cmc
pop
jecxz
test
mov
dec
jge
mov
inc
mov
push
mov
ljmp
out
mov
pop
mov
cmp
mov
push
cwtl
add
dec
stos
jg
dec
daa
mov
add
enter
cmp
or
mov
gs
or
push
cmpsl
sti
cmp
outsb
sub
adc
lcall
cmp
xor
push
loopne
ljmp
adc
sub
push
enter
mov
jge
jl
jno
push
int
or
hlt
xchg
push
sti
call
xor
pop
xchg
mov
shrl
push
dec
scas
rdmsr
mov
sahf
mov
addr16
xchg
test
adc
in
adc
push
scas
pop
test
cmp
add
out
mov
cmp
arpl
mov
cmp
sub
push
push
out
mov
inc
and
mov
adc
outsb
in
push
and
insl
bound
nop
pop
mov
repz
lahf
jge
mov
aaa
dec
adc
pop
push
xchg
mov
sub
orb
call
repz
sahf
jecxz
in
adc
sub
dec
in
xlat
mov
mov
lods
and
cmp
notl
shl
jl
fs
push
imul
xchg
dec
inc
sub
fldt
jne
or
cmp
jnp
int
out
mov
mov
hlt
inc
adc
add
insb
movsl
clc
mov
subb
daa
cmp
xor
aam
shr
xchg
iret
xchg
testb
push
js
fs
mov
mov
push
fwait
jbe
iret
xchg
jne
lret
mov
ss
adc
jb
jo
es
adc
and
outsl
sahf
loop
std
jae
hlt
sbb
les
mov
test
mov
mov
test
mov
and
ret
jmp
mov
test
inc
sub
xlat
jne
sub
sub
jp
adc
loop
push
jbe
fnstcw
jmp
in
dec
inc
mov
js
cmpb
push
push
outsb
scas
mov
jnp
mov
addb
mov
loope
mov
inc
xrelease
int
lahf
cmpsb
and
sti
adc
xor
lcall
lret
dec
clc
lret
or
mov
repnz
rclb
popf
pop
std
inc
inc
xchg
shrb
imul
fcomps
push
cmp
cmpsl
sbb
pop
and
push
add
aas
insl
out
and
push
inc
stos
in
xchg
daa
jnp
fldl
lcall
or
out
mov
fisubrl
pop
push
dec
rcll
shll
xchg
insl
hlt
test
inc
pop
dec
js
push
xchg
push
inc
outsl
mov
daa
dec
pop
xchg
xchg
mov
jno
out
pusha
hlt
leave
or
sti
imul
and
cmp
in
jle
adc
or
mov
push
sub
out
mov
add
and
repnz
enter
je
ss
push
jnp
es
mov
into
and
push
pop
cs
and
add
or
cwtl
scas
jp
mov
and
leave
dec
dec
jp
pop
add
xor
test
cli
mov
pop
inc
push
clc
faddl
imul
inc
xor
pop
mov
ja
out
xchg
xchg
xor
in
pop
mov
shlb
sbb
mov
stos
xor
sub
adc
popa
push
sbb
insl
push
mov
mov
ljmp
mov
sub
out
sub
dec
cmp
xchg
pushf
call
stos
jmp
jns
xlat
xchg
out
sub
jns
xor
jno
sarl
xchg
mov
push
sbb
scas
jbe
ljmp
mov
adc
sti
xor
sub
je
idivl
loop
fs
dec
mulb
movsb
lret
cwtl
out
xor
add
aas
rcrb
and
repz
mov
test
scas
jle
mov
dec
aad
fs
pop
cmpb
xchg
call
xlat
xchg
cmp
lock
jne
jno
jnp
cmp
lods
xchg
push
xor
mov
cmp
sbb
gs
mov
and
and
fbstp
ds
test
cld
xchg
stos
sbb
mov
pusha
sbb
mov
cmp
push
pop
mov
loop
out
adc
je
mov
or
test
pop
out
push
or
mov
lret
gs
dec
ror
push
xchg
mov
jne
mov
cmp
stos
loop
lcall
cmp
sub
dec
shl
sub
sbb
cld
inc
int3
jge
jmp
mov
lcall
lods
inc
mov
dec
pop
data16
add
pushf
data16
rcrb
int3
int3
xchg
push
mov
jns
stc
adc
cmp
adc
mov
aad
stos
add
add
movl
sub
jns
add
daa
sarb
movsl
loopne
ss
loop
adc
jecxz
sahf
sub
push
cwtl
push
mov
test
dec
sahf
fisttpl
jns
adc
cmp
jb
sbb
push
inc
and
repz
jns
repnz
push
pop
jle
mov
dec
jle
data16
loop
jle
push
add
xchg
mulb
xor
mov
mov
out
lods
mov
stos
fnstcw
mov
imul
add
xlat
mov
mov
push
mov
popf
jmp
stos
adc
adc
mov
xor
mov
mov
lret
jl
xchg
aaa
inc
and
insl
dec
movups
cmp
repnz
xor
dec
es
push
mov
and
add
sbb
in
in
pop
sub
xor
popf
inc
inc
fimull
aaa
push
pop
mov
data16
xor
fimuls
fisubs
js
jp
jbe
add
popf
xchg
cmp
mov
dec
mov
or
cmc
add
push
add
icebp
movsbl
mov
icebp
call
or
jl
shrl
mulb
fisttps
lret
mov
adc
cmp
out
xchg
insb
inc
idivl
imul
jecxz
push
movsl
jg
in
push
in
or
sub
sub
lock
mov
arpl
sbb
clc
sub
mov
mov
scas
outsb
xchg
adc
popa
ja
ror
setl
xor
push
jl
movsb
mov
jge
repz
mov
jl
pop
sub
das
xchg
inc
sbb
idiv
xor
leave
lods
sbbl
pop
xor
or
addb
adc
mov
jecxz
cwtl
test
in
xor
fidivrs
xor
jmp
aam
loop
mov
out
ja
ret
mov
xor
pop
inc
int
ds
mov
lods
mov
xchg
in
lahf
push
xor
cmp
std
or
inc
mov
sarl
dec
fldt
pop
mov
adc
sbb
sbb
gs
sahf
adc
cmp
sbbb
leave
negl
ljmp
sbb
push
sbb
jae
fdivr
sub
scas
sbbl
fisttpll
pushf
mov
dec
jae
jne
je
inc
clc
jl
js
andl
mov
pop
pop
mov
jp
mov
lods
sbb
outsl
or
xlat
add
and
call
xchg
cs
push
xchg
rcr
out
inc
mov
cmp
pop
mov
loop
cmp
dec
sub
push
sbb
cld
mov
jae
push
sub
jmp
stos
mov
sbb
sub
mov
lock
push
iret
repnz
xchg
loopne
fimuls
xchg
mov
cld
stos
loope
sub
jnp
mov
popa
xchg
gs
pop
es
popfw
jo
imul
xor
jbe
fs
mov
aad
cmp
push
or
pop
push
pop
jmp
rolb
jne
movsl
xchg
sbb
inc
mov
bound
lods
xchg
sub
mov
stos
xchg
cltd
mov
lahf
xchg
out
jg
clc
jno
push
xor
call
mov
in
popa
add
rclb
cld
cli
fldcw
sub
pop
stc
mov
inc
adc
xor
in
xchg
jns
test
sbb
adcb
pusha
popf
sarb
psubsw
pop
dec
fnsave
ret
enter
or
sub
jle
test
addl
cmp
ds
mov
dec
dec
jo
icebp
sbb
cmp
cs
sub
push
rcrb
jl
fdiv
sbb
insl
adc
in
add
cmpsl
mov
sbb
jp
aaa
int
cmp
fwait
outsl
test
sub
sbb
mulb
adc
lret
clc
jecxz
in
mov
scas
dec
or
out
xor
sarb
std
xchg
in
mov
icebp
sub
mov
mov
lcall
adcl
gs
std
pop
jle
mov
dec
jmp
inc
in
push
pop
pop
hlt
orb
insl
adc
dec
ficomps
aas
mov
dec
jb
xlat
scas
jg
and
js
and
int
adcb
repz
aaa
xchg
fimull
jp
clc
sbbl
daa
push
ljmp
or
test
mov
pop
cmp
sbb
cmpl
mov
jno
rorb
jb
cmp
lea
into
mov
lds
flds
push
inc
sahf
pop
jno
sbb
and
jno
stos
pop
clc
sub
ds
andb
push
lret
add
xor
imul
mov
mov
and
aaa
je
dec
pop
pop
cmpsb
lods
in
stos
daa
cmpsb
cmp
sahf
lock
xchg
pop
dec
mov
mov
sub
shll
rcpps
ret
add
mov
push
cld
dec
jle
test
fwait
mov
mov
dec
cmpsb
call
mov
add
mov
sub
divb
jbe
jnp
lds
or
in
ss
sti
inc
xchg
mov
fsubl
sti
inc
mov
ss
cmp
xlat
rcr
push
fiaddl
sub
mov
jae
das
loopne
xor
xchg
dec
out
insl
out
pop
sub
outsl
mov
out
aad
loop
inc
push
sub
cmp
add
jmp
jnp
inc
pop
jg
cltd
stc
cwtl
mov
ror
nop
hlt
mov
shrl
adc
xchg
pop
mov
das
std
xchg
aam
cmp
add
sbb
push
push
stos
mov
jl
in
or
cmp
ficomps
sbb
sti
or
jl
mov
push
mov
test
lds
inc
pop
adc
jecxz
adc
pop
frstor
push
mov
scas
addr16
test
scas
adc
and
mov
pop
je
xchg
mov
jmp
jno
lea
pushf
das
mov
inc
dec
mov
or
cmp
pop
pop
xchg
loopne
jne
inc
repz
outsl
mov
cmp
jb
ds
mov
rcl
sub
pop
mov
popa
fisubrl
dec
or
movsl
cmp
and
add
inc
xchg
mov
clc
into
xlat
push
lods
mov
out
inc
outsb
clc
pushf
jge
add
fwait
in
in
xor
pop
fcomip
or
int3
lock
jmp
mov
cmpsl
cmp
fsubp
pushf
mov
aaa
into
mov
mov
das
mov
enter
jo
pusha
mov
std
test
cmp
xchg
pop
mov
andb
sti
inc
out
sti
ljmp
nop
cmp
addr16
js
ret
hlt
mov
mov
rcrl
ja
xor
cmp
lds
imul
jl
int3
leave
and
orl
mov
jo
jecxz
mov
fsubl
orl
pop
mov
dec
mov
fadd
sub
inc
jg
add
mov
inc
or
xchg
push
or
shlb
pop
lods
lret
or
pop
test
icebp
xlat
movsl
or
sub
mov
loopne
add
in
testb
pop
cltd
lret
xor
cmp
xor
push
or
sbb
std
mov
xor
cwtl
inc
mov
das
clc
mov
push
sbb
inc
mov
cmp
dec
dec
int
dec
loope
mov
ret
push
xchg
cmp
xor
mov
aad
add
popf
das
imul
aas
sbb
add
insb
jmp
xchg
adc
sub
add
leave
orl
clc
xchg
cli
mov
pop
pop
pop
cld
out
enter
inc
mov
mov
sub
rol
call
add
adc
popa
call
sarl
cmp
popf
cmp
cmpsb
xchg
and
mov
xchg
xchg
inc
xchg
adc
jp
sbb
icebp
cmpl
mov
out
adc
push
inc
mov
and
ds
mov
int3
jmp
cwtl
push
lds
es
sbb
pop
or
cmp
push
dec
in
add
xorl
test
inc
loopne
in
inc
add
lret
mov
out
pop
gs
pop
and
adc
xor
jg
stos
outsb
and
nop
lahf
cmpl
mov
mov
test
jae
mov
les
xor
jne
push
cltd
repz
ret
leave
jno
mov
in
pop
insb
xchg
ret
cmp
push
or
icebp
pusha
ja
xchg
popa
lods
std
stos
pop
ret
pop
lds
pusha
push
subl
pop
sbb
xchg
and
and
xchg
inc
aaa
pop
cmp
bound
ficoml
mov
dec
sub
int3
lds
pop
xchg
movsb
sub
aad
jecxz
sbb
pop
or
dec
scas
fisubrs
test
mov
aam
sub
mov
mov
pushf
or
gs
mov
loop
and
iret
cmp
out
sti
js
leave
notl
pop
sbb
cmpl
xchg
popa
ret
stc
sub
sbb
mov
cmc
adc
mov
xchg
insb
xchg
lea
sbb
jb
cmpsl
repz
add
push
fs
gs
test
movl
je
mov
les
dec
pop
sbb
pop
or
testb
test
int
push
mov
fiaddl
inc
cmpsb
and
adc
and
push
test
popf
scas
cld
sub
add
test
aam
dec
cld
and
mov
push
cmc
push
pop
cmc
cmp
push
mov
jo
adc
jo
mov
mov
inc
xlat
cmpsb
mov
enter
mov
cmp
jae
and
xchg
jp
cmp
leave
fisttps
pop
inc
fidivs
mov
push
mov
cmp
push
xor
pop
je
push
inc
fcmovnu
mov
pop
push
sbb
fdivrs
add
mov
popf
inc
mov
imul
cmpsl
mov
in
sbb
lods
and
xchg
sbb
mov
mov
jae
mov
mov
int3
fwait
out
sbb
dec
xorl
ljmp
jo
lods
sub
push
jno
inc
push
jbe
pmulhw
cmp
pop
stos
cmc
push
js
xor
outsb
pop
mov
push
cs
sbb
cmp
loope
cs
std
pop
mov
sbb
loopne
aad
loope
clc
mov
popf
je
je
hlt
stc
and
jge
lea
es
ds
xor
cld
inc
hlt
out
push
std
test
dec
je
fadds
sub
int3
xchg
sbb
add
call
addps
out
jb
pop
test
repz
cmp
out
xchg
dec
dec
add
pusha
addr16
sub
fwait
jge
sbb
sub
cmc
cli
adc
movsb
inc
in
dec
pushf
daa
cmpsb
mov
mov
cmc
out
xlat
cmp
push
dec
sbb
pop
fnsave
cmp
mov
aam
mov
aad
sbb
or
mov
jne
mov
cwtl
inc
jg
add
xor
andl
mov
jecxz
lods
in
ljmp
xor
cmp
push
adc
dec
push
jecxz
jb
mov
subb
aam
imul
fdivl
sub
std
jno
loop
mov
add
test
loop
outsl
lcall
pop
dec
mov
sub
ds
dec
out
cmp
cmp
cmp
push
stos
dec
mov
jmp
out
and
inc
xchg
or
sbb
mov
cmpsb
orb
inc
rorb
mov
popfw
jmp
xor
out
frstor
and
jo
ljmp
or
sbb
cmp
stos
lret
mulb
or
jo
sbb
push
push
push
mov
call
mov
adc
or
push
aam
cs
notl
popf
mov
ret
iret
push
pushf
out
add
les
lahf
pop
popf
stos
sub
lahf
and
mov
aaa
out
addr16
mov
mov
test
divb
xchg
jp
mov
mov
ret
ret
aas
aad
sub
jp
and
rcr
out
cmp
cmpsb
loope
dec
aas
fsubr
mov
adcl
out
dec
int3
test
inc
inc
push
jns
add
mov
and
inc
pop
cmp
dec
fsubp
insl
push
xor
mov
and
inc
jnp
fcomip
jnp
arpl
push
cltd
and
adc
mov
repnz
and
sbb
icebp
jp
mov
pop
push
mov
xor
jle
mov
orl
push
xchg
mov
rcrb
inc
push
adc
in
dec
push
lods
sbb
pop
rcll
shll
movsb
mov
and
push
sbb
fs
cmp
out
loope
ss
cmpsl
and
fcmovu
in
cmovl
daa
rorl
cmp
fcoms
shrb
shrb
and
int3
inc
sbb
sbb
cltd
dec
pop
mov
pop
roll
scas
jg
sbb
clc
out
adc
test
xor
push
sbbb
mov
and
das
push
stos
scas
sbb
imul
mov
xchg
sbb
mov
pop
js
add
jmp
push
xchg
addr16
addr16
mov
xchg
push
adc
xor
dec
mov
sub
fcomps
push
jb
or
stc
addr16
mov
imul
sbb
iret
hlt
icebp
dec
adc
mov
or
orb
aaa
roll
movsb
cmpl
out
cmpsb
or
cmpsl
mov
sbb
push
xor
lret
and
mov
mov
dec
lea
or
inc
aaa
int
push
lods
or
int3
jno
cmp
hlt
mov
stc
ds
jle
cmp
nop
popf
sarl
iret
sbb
pop
test
push
in
cmpsb
pop
pop
xorl
cmpsl
hlt
sub
int
cmp
add
in
loopne
pop
test
add
sub
hlt
xor
inc
mov
mov
cmp
or
xchg
test
pop
ljmp
rcrl
pop
hlt
mov
cld
or
and
movl
inc
js
sbb
ja
or
jne
jb
leave
push
popa
jg
enter
mov
and
pop
cmc
ds
mov
sub
into
dec
adc
inc
mov
clc
pop
sub
jmp
shlb
je
push
ja
or
movsl
sub
leave
push
dec
scas
cwtl
loopne
xchg
out
xchg
sub
mov
adc
in
pop
xor
vpmacssdqh
sbb
aas
hlt
jb
sti
cmpsb
popf
fldenv
xor
shll
mov
dec
sahf
out
push
xchg
repnz
inc
sub
mov
daa
jno
jmp
in
cmp
fnstenv
pushf
adc
jo
jg
mov
idivl
fs
add
dec
in
repnz
xchg
gs
mov
sub
xchg
fistpll
inc
mov
das
push
xchg
cmp
pop
push
add
test
cmpsb
mov
pusha
sahf
push
lea
lahf
push
and
lock
mov
sahf
gs
mov
in
ja
loop
jmp
movsb
jo
repnz
push
pop
dec
adc
adc
pushf
inc
movsb
and
jecxz
xchg
sub
fsubrl
int3
sub
sub
icebp
jle
xor
mov
lret
andb
mov
pushf
push
mov
inc
xchg
fistpl
and
lret
mov
mov
iret
adc
push
sub
adc
fcmovu
inc
int
lods
les
jnp
push
xchg
xor
or
mov
jne
std
lock
xchg
addb
fisubl
jae
mov
mov
mov
sbb
aas
insb
jne
mov
fs
fwait
out
gs
pop
and
sbb
loope
rolb
repz
sbb
xchg
mov
adc
invd
bound
mov
inc
xchg
mov
daa
adc
call
mov
xchg
dec
pushf
mov
dec
imulb
mov
sbb
insb
fidivl
cmp
mov
int
fs
pop
addr16
xchg
mov
jae
and
stos
cwtl
int
repz
mov
pop
cmp
xor
cmp
ffree
ljmp
xchg
sbb
ret
fwait
cmpsb
scas
cli
cmp
rcr
ljmp
movsb
and
movsl
jmp
mov
fiadds
stos
clc
repz
push
sahf
lods
lcall
test
cmp
test
rcr
out
cmp
inc
jbe
stos
shlb
jae
pop
pusha
push
adc
das
aam
sbb
push
pop
jge
sub
lahf
push
andb
pop
subl
sarb
mov
xlat
pop
insb
xchg
imul
in
adc
mov
push
pushf
sub
arpl
dec
dec
sub
jmp
mov
dec
dec
add
insb
xchg
popf
jmp
dec
lock
mov
jns
fildl
aad
push
popa
test
inc
mov
lds
pop
mov
pop
int
addl
leave
mov
sbb
hlt
insl
or
loope
fdivrs
mov
data16
stc
sbb
mov
fucom
adc
stos
adc
addb
mov
in
dec
aaa
out
push
rorl
push
or
bound
jne
das
xorl
dec
mov
xchg
fldl
xchg
out
rol
in
jge
jbe
shrl
pushf
jmp
sahf
add
imul
shll
pushf
mov
std
cmp
ljmp
jecxz
push
xor
stc
xchg
test
mov
fadd
pushf
mov
rorb
movsb
movsb
jmp
sbb
subb
insl
cwtl
inc
aaa
push
jns
pop
xorb
xchg
mov
pop
sub
mov
rorl
sahf
mov
cmc
aad
jmp
mov
dec
mov
cli
addb
call
stos
push
mov
inc
xor
popa
hlt
mov
sbb
jmp
mov
js
jns
inc
fildl
es
lods
lcall
mov
fidivrl
sbb
test
aaa
mov
sarb
ficoms
cld
mov
sub
mov
cwtl
aas
sbb
es
stos
mov
aam
pop
inc
cmp
mov
fcom
mov
jle
push
in
pop
or
popf
loope
popa
push
lock
dec
int
lahf
sbb
arpl
pop
lret
out
jmp
xor
or
mov
adc
jae
cmp
pop
jmp
repz
das
sbb
xor
mov
or
or
pop
addr16
mov
pop
mov
or
scas
gs
in
mov
dec
jge
fdiv
cld
call
lods
repnz
mov
les
movsl
mov
test
xbegin
xlat
cld
mov
lret
fcmovb
out
mov
cmp
loope
push
dec
inc
add
cmp
jmp
in
jno
fnsave
add
mov
les
mov
add
clc
ret
nop
scas
roll
cmpsb
cmp
sbb
in
imul
cwtl
mov
dec
aad
outsl
in
cmp
adc
shrl
push
daa
out
xchg
xchg
lods
and
and
push
dec
divb
neg
adc
pop
push
jmp
pop
pop
popf
cs
inc
cld
mov
popa
mov
mov
adc
inc
dec
add
jg
or
sub
fcoml
cmpsb
ja
fsubs
mov
xor
jmp
ds
scas
push
mov
adc
rorb
dec
icebp
test
ja
add
out
popl
or
stos
fdivrs
sbb
int3
cld
inc
lcall
mov
popa
xor
jbe
cwtl
and
adc
fdivp
scas
mov
loopne
pushf
cmp
test
iret
cmpsl
adc
pusha
hlt
dec
imul
movsl
lods
adc
mov
sub
or
mov
inc
pop
lret
push
adc
data16
push
mov
or
and
mov
dec
lahf
sbb
adc
mov
cld
stos
push
xchg
bnd
mov
rolb
sbb
mov
inc
mov
xchg
loop
insb
sub
push
jns
imull
mov
out
inc
mov
ret
mov
cld
fistl
or
xlat
jecxz
lret
scas
xchg
ficoms
jg
les
call
movsl
or
popa
cmp
nop
aaa
sbbb
lock
inc
cmp
lret
ds
xor
iret
bound
dec
data16
lds
xchg
xorl
testl
jae
lods
dec
test
cmpsb
arpl
push
das
or
shll
or
sahf
xchg
jg
popf
stos
sbb
add
or
outsl
mov
test
pop
nop
enter
lret
jge
sub
mov
jle
inc
ffree
ljmp
aam
pop
stc
int
ss
cmp
push
jp
add
stc
out
outsb
xor
in
or
enter
inc
adc
arpl
adc
push
xor
mov
jmp
xlat
imul
jp
pop
lods
neg
adc
repnz
in
sahf
jmp
in
mov
jnp
cld
push
out
leave
out
add
sub
inc
mov
adc
imul
and
pop
mov
sbb
aas
xor
shrb
cmp
hlt
adcb
int3
mov
cmp
lret
inc
dec
fsubs
push
lret
lea
shrl
sub
stos
pop
jmp
in
lods
mul
xor
dec
inc
lock
add
dec
xor
jbe
jo
aas
popf
xchg
adc
sahf
mov
aad
enter
lcall
shrb
sub
lcall
push
dec
mov
add
cmp
ja
push
cmc
out
mov
repz
test
jle
in
stc
push
je
leave
aam
call
aas
sub
mov
cmpb
frstor
mov
lods
lds
mov
sti
inc
push
rol
mov
lcall
cmp
jae
fidivrs
add
lcall
lret
outsl
clc
add
andb
xchg
out
ret
push
not
adc
and
ficompl
push
mov
cwtl
int3
mov
sub
lret
xchg
sbb
push
inc
pop
jg
sarb
pop
icebp
dec
and
lods
xchg
in
leave
or
dec
mov
fisubs
cmp
rolb
ficompl
mov
out
or
add
cmp
into
pop
call
shll
adc
xchg
jg
jns
push
mov
aas
popa
stc
pop
pop
mov
cmc
stos
jl
adc
into
mov
ds
dec
adc
movsb
cmpsb
mov
lock
pop
fisttps
ds
scas
mov
add
xor
es
add
pusha
pop
mov
mov
pop
mov
ja
or
es
mov
outsl
lcall
iret
lock
jle
data16
jno
aad
fildl
push
movsb
push
pop
sbb
cmp
loope
repnz
in
jg
sbb
data16
pop
mov
pusha
inc
in
xchg
aaa
jne
lcall
lret
mov
jecxz
mov
dec
pop
sub
or
or
aam
in
jne
filds
adc
xchg
add
or
add
lcall
shrb
test
dec
mov
or
cmp
mov
leave
adc
mov
das
mov
jb
mov
mov
jl
and
inc
fs
imul
movsl
xor
xlat
add
les
sbb
push
mov
lret
and
and
jb
add
xor
mov
lahf
xor
movntps
imul
push
mov
push
fnstenv
ffree
push
mov
into
push
out
mov
stos
scas
inc
sub
push
gs
mov
push
mov
sbbl
mov
shl
dec
mov
jmp
pop
loop
push
mov
ret
inc
xorl
dec
int3
jb
and
or
push
rcll
mov
out
fiadds
push
mov
sub
shlb
xchg
xlat
popf
mov
jno
cli
movd
lcall
and
pop
fnstcw
xor
push
lcall
cmp
jle
inc
loop
adc
cli
pop
idivl
mov
es
fsub
xchg
lea
iret
call
sub
or
scas
sub
mov
dec
fs
sub
mov
dec
xchg
or
mov
and
push
testl
add
adc
mov
mov
add
sub
icebp
jmp
cmp
mov
mov
jecxz
jge
call
push
mov
push
xor
cli
sbb
jmp
fidivs
adc
in
int
mov
iret
div
into
fwait
imul
jnp
nop
imul
dec
lret
lret
imul
lcall
push
div
jmp
dec
loope
mov
xor
sbb
fimull
mov
not
je
xchg
dec
mov
out
cmp
sbb
nop
ffreep
dec
pop
push
lcall
jmp
xor
pushf
jnp
outsl
add
gs
pop
cmpsl
xor
mov
cmp
test
jle
fnstsw
cmp
xchg
xlat
int
aaa
mov
loope
test
xor
dec
inc
and
pusha
scas
or
sbb
dec
or
shrl
call
add
lods
cmp
mov
inc
pop
scas
push
push
xor
int3
mov
cmp
lahf
decb
aad
call
mov
dec
imull
dec
and
add
push
push
mov
add
int
jnp
or
scas
mov
sbb
addr16
js
mov
hlt
add
aas
mov
loopne
xor
xchg
or
pop
insb
add
rorb
sub
gs
aas
inc
xchg
sbb
sbb
out
imul
xchg
dec
popa
mov
xor
sub
mov
and
lds
sbb
fchs
xor
popa
or
dec
mov
xchg
movsl
ficompl
arpl
sbbb
push
scas
cltd
ret
ss
icebp
or
and
test
xchg
cld
jnp
mov
dec
dec
jp
or
push
lahf
cmp
gs
xor
test
scas
cli
mov
cmpsb
push
ret
pop
ds
rcrb
add
rcll
fimuls
dec
mov
mov
cmp
xchg
jl
aas
push
xor
int3
jns
add
ret
repnz
movq
pop
dec
jne
scas
mov
add
loope
cli
in
mov
pop
cmp
fiadds
inc
add
shrb
push
inc
stc
jg
pop
lret
add
int
or
in
jecxz
idiv
xchg
push
stos
cmc
fstpt
cwtl
mov
pop
sbb
fwait
cmp
add
aas
inc
jns
mov
mov
mov
orb
jp
add
lods
xchg
fucomi
fistpll
xlat
cmpl
jl
ficompl
jmp
outsl
inc
mov
ss
fwait
ret
mov
add
or
inc
jecxz
fnstsw
and
lret
int3
outsb
pop
add
jae
je
sbb
imul
out
and
pop
lock
add
pop
sarb
out
fwait
stc
push
cmp
xor
xor
sahf
xchg
je
addr16
push
and
adc
pop
sbb
icebp
mov
jno
add
icebp
insl
mov
test
adc
xor
das
sahf
cmp
imul
xchg
cmpsb
aad
push
dec
and
sbb
inc
in
pop
push
shl
cmp
iret
imul
scas
int
arpl
and
mov
add
push
cld
mov
inc
lock
sbb
dec
fwait
js
shll
fcmovnu
pop
stc
aas
jae
aaa
ds
test
jns
mov
je
xor
mov
cmpsb
pop
mov
lods
shlb
or
ficoml
lret
adc
xor
cs
sbb
mov
testb
add
loop
jmp
mov
inc
sub
cmpsb
repnz
aam
fsub
int3
repnz
adc
mov
das
loope
mov
neg
pop
fadds
aad
outsb
jmp
das
jmp
and
push
popa
xchg
fsts
mov
jecxz
pop
cmc
xor
les
shl
cmp
shll
jne
out
movsb
xchg
pushf
push
mov
test
rorl
xchg
xchg
sub
sub
pop
hlt
xor
icebp
sbb
ljmp
dec
movsl
mov
sub
sbb
and
xor
push
add
and
mov
jb
loop
clc
pop
int3
je
inc
cltd
cmpsl
loope
cwtl
sub
mov
inc
repnz
dec
and
pop
stc
push
mov
sbb
in
inc
xchg
insl
jns
lcall
arpl
push
sbb
icebp
push
mov
and
dec
xor
inc
push
mov
xor
testl
jbe
push
inc
cmp
loopne
mov
ficompl
push
xchg
jge
stc
jmp
faddl
inc
ljmp
lret
ss
rcl
pop
mov
mov
fucomi
mov
xor
sbb
and
jecxz
and
outsb
movb
mov
setg
and
lds
imul
xchg
enter
push
sbb
sbb
out
pushl
lcall
jae
inc
mov
mov
and
sahf
aad
sbb
cli
or
vorps
xchg
bound
out
inc
jl
dec
pop
dec
push
push
stos
shl
fisttpl
dec
mov
lahf
pusha
test
push
ret
dec
jl
adc
aaa
fcmovnb
or
jo
sub
or
push
nop
mov
inc
test
xchg
cwtl
sub
sarb
mov
or
fildl
lret
shll
or
ss
and
jmp
inc
mov
stos
ret
sbb
adc
test
push
fnstenv
dec
or
or
jae
sub
push
mov
pushf
pop
arpl
jo
in
jne
xor
jp
or
out
push
lea
jmp
inc
sbb
cmp
fdivrs
or
add
addr16
adc
test
mov
cltd
sbb
xchg
repnz
jmp
xchg
or
movsb
cmp
push
mov
scas
mov
lcall
repz
pop
pop
mov
inc
flds
lcall
inc
ret
and
and
shll
mov
lock
ja
in
adc
jno
mov
daa
xor
jb
in
mov
stos
pop
xchg
daa
jbe
clc
fwait
push
ss
push
fcompp
adc
xlat
inc
in
decl
std
aas
frstor
dec
adc
test
rol
inc
test
push
popa
lcall
stos
lds
in
cmp
mov
lret
add
fstpl
mov
loopne
sub
adc
mov
mov
iret
adc
add
lcall
adc
negb
dec
lods
push
sti
rorl
daa
psubw
inc
jo
adc
xor
aas
xchg
pop
mov
cmpb
ss
scas
lret
in
out
rclb
sbb
dec
sub
fldenv
leave
mov
and
stc
dec
add
jne
cmp
cld
subb
in
mov
mov
icebp
sbb
jle
imul
fucomip
loope
lret
out
movups
pop
test
neg
les
arpl
iret
adc
jns
bound
dec
or
push
mov
fsubp
aad
loopne
mov
jmp
out
inc
or
add
and
cmp
rolb
pop
sbb
add
and
pop
sub
stos
and
and
push
mov
jge
sahf
xchg
popa
add
inc
cmp
ret
addr16
push
cwtl
hlt
test
fsubr
add
outsl
jne
mov
dec
and
jb
push
cltd
mov
mull
push
xchg
shr
mov
mov
sbb
mov
push
adc
das
push
add
mov
daa
sub
push
hlt
out
inc
stc
adc
nop
in
pusha
or
in
dec
ja
cmc
mov
ja
fcoml
push
mov
dec
xchg
or
sub
mov
jo
outsl
mov
ja
popf
or
leave
jp
ret
orl
sub
sbb
mov
lock
push
push
push
sub
scas
fwait
mov
lea
jnp
xchg
sub
bound
lahf
sbb
pop
lret
push
test
dec
xchg
push
or
rcr
loope
fwait
xchg
addr16
popf
dec
or
dec
pusha
dec
lcall
fldcw
stc
xchg
popa
mov
sub
scas
mov
xor
pop
push
in
je
and
mov
xor
das
pop
orb
jnp
sbb
adcl
dec
inc
movsl
mov
scas
and
cwtl
mov
cmp
jne
dec
push
mov
out
mov
test
lea
rol
loop
xchg
not
cmp
pop
repz
movsl
push
out
push
jmp
cmpsl
jmp
adc
and
xchg
cmc
xor
out
fs
imul
add
push
enter
sti
pop
xchg
mov
sbb
mov
sti
or
mov
das
dec
and
mov
mov
test
loope
stc
sub
aaa
mov
sub
mov
jae
add
add
dec
or
sub
adc
stos
fnstenv
sbb
jne
xchg
mov
shll
jno
in
das
mov
push
pop
xchg
test
pop
test
xchg
inc
movsb
add
imul
mov
dec
mov
jne
xchg
arpl
dec
lea
loope
push
sti
jecxz
leave
mov
addr16
adc
mull
pop
fldcw
add
je
lret
fbstp
pop
sub
je
mov
mov
lds
xchg
push
clc
sti
leave
int
clc
xchg
mov
sub
mov
gs
jb
ljmp
mov
mov
sbb
jns
cmp
rorb
decb
inc
bound
out
iret
jae
mov
icebp
push
sti
addr16
test
sub
or
pop
loopne
sub
out
or
and
test
inc
cmp
cmp
mov
or
push
scas
xchg
dec
xor
sbb
sbb
popa
into
pop
xor
add
out
push
stos
ljmp
in
add
pop
mov
dec
jae
lahf
or
aaa
pmaxsw
rol
mov
mov
inc
jae
xlat
hlt
shrb
mov
popf
imul
sub
in
xchg
inc
pop
adc
and
fwait
bound
enter
xchg
mov
dec
adc
sahf
push
pop
call
cmp
xor
aas
dec
mov
jmp
fistps
ficoml
bound
sbb
ja
jmp
popf
sub
fwait
jmp
mov
addb
jno
fldl2e
or
push
lods
fidivl
bswap
adc
cmc
imul
sbb
rcr
idivb
mov
sbb
push
inc
fwait
xchg
or
xchg
and
stos
mov
mov
xchg
orps
cltd
mov
fdivrl
sbb
jl
jge
cmp
loopne
push
jmp
cwtl
pop
xor
jbe
wbinvd
mov
pushf
jle
or
jo
add
push
out
nop
int
mov
lcall
repnz
and
mov
shufps
int
sub
notl
mov
pop
and
or
sub
pop
sub
inc
aad
jns
stos
adc
cmp
fdivrs
sub
mov
pop
jb
pop
push
mov
jecxz
sbb
scas
mov
cmp
inc
pop
leave
lods
sysexit
sbb
dec
call
cli
sub
testb
es
shll
push
or
push
lods
shll
mov
cs
pop
add
pop
and
mov
lcall
das
lcall
mov
or
imul
mov
adc
int
addr16
repz
or
push
mov
cmp
mov
imull
dec
xor
test
fists
jl
ficoml
mov
movsl
and
imul
test
mov
in
je
dec
test
cmc
push
ja
mov
outsl
in
popf
mov
xchg
out
push
mov
cmp
dec
jbe
pop
dec
fcoms
inc
mov
sbb
hlt
xlat
aas
imul
adc
push
les
jp
push
push
mov
cmp
sub
adc
fld
pop
mov
sbb
jns
gs
inc
push
leave
icebp
inc
shll
mov
rcll
xchg
leave
add
fsubrs
test
sbb
inc
cwtl
jnp
jmp
mov
shlb
mov
and
into
ud0
mov
andl
sbb
mov
inc
out
lods
lahf
dec
jo
mov
inc
and
repnz
mov
mov
push
mov
pop
mulb
add
jae
fidivs
leave
mov
mov
sbb
in
cmp
adc
repnz
mov
movsl
imul
movsb
fptan
je
mov
outsb
cmc
cmc
enter
das
xor
inc
lcall
sbb
cmp
pop
rcll
pop
adc
sub
movsl
inc
jle
push
int3
xchg
mov
movsl
scas
mov
pop
sub
bound
inc
je
xor
xchg
jle
jae
mov
test
repnz
or
sbb
push
repz
pop
jmp
clc
bound
push
jl
movsl
mov
pushf
sub
imul
add
cs
pop
adc
sub
popa
sub
sub
cmp
cld
pop
pop
ss
add
scas
or
leave
loop
push
or
sub
ret
inc
jle
or
pop
sub
dec
fldt
jns
ficomps
jg
faddl
cmp
jmp
scas
je
lea
mov
inc
push
push
push
mov
sti
aas
in
lods
dec
jnp
aaa
adc
cs
dec
mov
push
sbb
jg
fs
mov
sub
jbe
or
xchg
mov
test
pop
mov
fdivrs
data16
lods
fcoms
cmp
jb
pushf
add
loop
call
push
inc
out
aas
or
outsb
mov
jae
daa
bound
cltd
mov
or
ficomps
push
mov
fmuls
fldcw
dec
and
cmp
out
fadds
fldt
sub
pop
mov
lods
cmp
lds
ja
fldcw
sbb
cmp
mov
std
hlt
repnz
jno
fwait
dec
mov
push
xchg
pop
jo
pop
dec
jns
out
jne
jnp
mov
out
out
dec
sub
push
es
mov
push
push
dec
mov
fildll
fs
es
dec
and
jno
enter
lea
fmuls
pop
mov
setb
rcll
dec
fs
inc
pop
mov
adc
mov
lret
fimuls
mov
lock
xor
ret
mov
pop
push
push
adc
xchg
pop
mov
push
stos
push
pop
stos
lods
imul
jne
ret
sbb
adcl
push
sbb
das
push
mov
inc
jbe
adc
ficomps
insl
popf
adc
cmp
dec
mov
lea
or
cmp
leave
je
inc
or
sbb
jge
repnz
ficompl
inc
insb
sar
sbb
or
fisubrl
sbb
mov
and
shll
jmp
add
sub
cmpsb
xor
mov
gs
add
sub
cmp
sub
imul
lahf
cld
sub
xchg
push
lcall
push
and
in
aad
dec
lods
stc
mov
push
and
addr16
xlat
movsb
rorb
das
es
fildl
outsl
jno
push
mov
inc
stos
xchg
dec
arpl
scas
js
cs
pop
mov
in
add
jl
lods
ds
mov
lret
hlt
add
out
cmpsl
xchg
cmp
push
dec
lea
mov
mov
xchg
mov
cli
std
in
xor
sbb
fwait
lret
loop
jecxz
add
ljmp
int
out
mov
lock
mov
into
push
xor
sub
fs
mov
fwait
adc
ss
das
outsb
shrb
jp
pop
adc
adc
and
adc
dec
or
hlt
les
pop
push
xchg
add
cmp
stos
add
mov
lods
popf
lods
nop
cmpsl
jne
push
cltd
xor
inc
jmp
rclb
inc
dec
add
xchg
push
pavgw
cmpsl
cmp
and
push
inc
mov
in
shr
nop
jbe
arpl
or
pop
das
imul
sbb
pop
pop
stc
test
pop
jp
stc
mov
lock
and
fisttps
dec
mov
xlat
fcomps
movsl
add
cmpsl
push
push
push
fldl
mov
aas
in
inc
aam
jg
aas
call
out
xlat
ret
scas
std
nop
movsb
loopne
lods
mov
xchg
std
inc
mov
push
add
adc
add
sub
or
jno
les
jb
mov
xchg
lock
jp
ret
sub
and
jb
sub
ja
fs
push
int
jg
pop
dec
sbb
mov
jmp
push
inc
in
mov
repz
and
jl
sbb
data16
push
jl
sub
adc
cmp
lahf
or
pop
add
sub
adc
roll
mov
popa
in
loopne
loop
sbb
push
jae
sub
jne
nop
fbld
ficoml
pop
nop
add
mov
sub
mov
loopne
fwait
pop
jmp
jns
push
pop
push
rcrl
fbstp
mov
push
lock
pop
pop
mov
sub
jae
dec
or
mov
sub
lods
int3
pop
sub
mov
adc
xlat
xchg
pop
mov
rolb
xchg
int
sub
inc
ret
aas
adc
fbld
sub
pusha
inc
and
test
std
or
outsb
xchg
test
out
xchg
jmp
lea
mov
inc
fsts
pop
repnz
imul
lock
or
xor
fistl
sbb
jne
movsl
jne
mov
or
push
mov
mov
dec
js
lret
sub
sbb
sub
lock
adc
mov
sbb
mov
repnz
jl
loope
ret
lret
repz
scas
mov
add
mul
xor
daa
mov
arpl
adc
pop
and
mov
pop
and
addr16
lods
or
in
dec
inc
and
xchg
mov
insb
adc
mov
ja
xchg
mov
dec
xor
aaa
stos
je
push
in
mov
sar
cltd
cmc
std
mov
lock
lahf
sub
jb
leave
mov
push
push
jle
xlat
cwtl
cmpsl
fwait
mov
jo
sub
scas
lea
push
pop
shll
dec
or
sub
rclb
aaa
insb
daa
mov
pop
mov
cltd
sub
mov
pop
jo
fwait
inc
sbb
sbb
fdivrl
cwtl
cmp
test
out
outsl
stos
sub
je
sahf
ds
adc
cltd
int
inc
pop
pop
mov
icebp
push
jmp
out
inc
repnz
icebp
aam
xorl
int3
fnstsw
pop
sub
dec
lret
adc
add
adc
jp
test
xorl
imul
xchg
fnsave
xor
call
inc
mov
insl
fcomp
jbe
aam
push
dec
or
ficompl
dec
cli
push
pop
dec
or
ret
cmp
jl
jbe
xchg
lods
xchg
pop
fsub
cmpsl
outsl
ds
psrlw
inc
rclb
dec
movsb
roll
mov
shl
testl
dec
lea
mov
stc
jecxz
jnp
xchg
out
and
mov
sub
add
pop
nop
in
mov
xchg
dec
call
fsubrs
jo
loop
ss
hlt
push
ret
call
or
pop
mov
notb
aaa
test
insl
inc
mov
add
sbb
data16
cmpsb
jg
mov
and
lds
or
and
xor
xor
test
adc
les
pop
push
lea
pop
lret
fiadds
les
xor
out
xchg
or
xor
push
psubd
push
daa
pushf
and
pushf
dec
xchg
push
pop
inc
and
jb
das
sbb
aad
and
je
xor
iret
and
rclb
fs
ror
pop
in
lods
popa
mov
cmp
sti
and
shlb
mov
test
js
mov
mov
xlat
jp
pop
outsl
gs
inc
sti
or
xor
add
sbb
pusha
mov
dec
int
sti
imul
mov
je
mov
inc
push
mov
sub
cmpsb
ds
out
xchg
fs
cmp
aam
jbe
xchg
cmpsl
pop
out
rclb
movsl
adc
xchg
add
fists
rcll
mov
sahf
mov
fsubrl
or
xlat
push
sub
adc
or
jecxz
inc
jl
imul
push
mov
das
aas
test
sbb
es
stos
mov
mov
out
pop
push
imul
sub
fdivl
fwait
dec
jne
nop
mov
lea
dec
jle
lahf
mov
mov
out
scas
adc
cmc
xor
or
sub
movsb
cmpsl
movsl
and
dec
inc
push
pop
popa
rclb
pop
addr16
inc
out
rcrb
mov
test
in
cmc
gs
loope
inc
pop
clc
imul
in
mov
leave
aas
sti
fildl
push
or
push
xchg
or
mov
leave
jp,pt
jmp
test
or
mov
cmc
gs
loopne
mov
adc
adc
adc
mov
les
lret
and
notl
int3
aas
add
loop
cmpl
loopne
aam
test
and
cs
cmp
or
dec
or
mov
xchg
lahf
in
add
sub
insl
fisttpl
pop
mov
clc
push
fsubl
add
loop
push
xlat
sbb
mov
mov
pop
movsb
stc
mov
imul
outsb
ret
into
andb
dec
mov
imull
pop
fs
jne
shl
popa
je
je
jp
bound
mov
mov
push
mov
clc
xor
push
popf
fdiv
out
outsb
fldl
sbb
sub
lock
ljmp
in
scas
xor
jbe
sahf
push
in
stos
mov
daa
dec
sub
sbb
pop
push
test
dec
sub
ljmp
leave
les
add
ss
icebp
sbb
ret
xor
test
xchg
push
jne
sbb
int
jge
jno
inc
stos
pop
mov
mov
xor
ret
or
or
ret
mov
dec
loope
push
std
shlb
int
mov
and
adc
jno
pop
arpl
andb
add
pusha
xor
loope
jecxz
ja
lret
outsb
sahf
pop
imull
xor
sbb
adcl
nop
inc
scas
push
jp,pn
mov
xor
push
fistl
aam
lods
and
popa
out
push
push
adc
jmp
fwait
idivl
or
arpl
adc
js
sbb
cwtl
negb
icebp
mov
cli
test
test
sarl
scas
jnp
mov
int
xchg
pop
pop
mov
packssdw
push
xlat
ret
xor
pop
addr16
sbb
push
mov
leave
xchg
mov
out
icebp
test
imul
fmull
pushf
fildll
mov
dec
and
ljmp
cli
filds
sub
lock
fisttpl
jl
push
push
inc
fildl
fidivl
fstl
call
sub
fildl
loopne
and
test
push
push
scas
xorb
adc
xor
jbe
inc
jmp
mov
jo
outsl
push
and
movsl
jmp
inc
mov
insb
dec
add
bound
or
out
mov
mov
adc
push
sbb
xchg
repz
pop
jp
lret
fdivs
shl
dec
insl
fsubs
insb
popf
pop
ret
or
ja
push
mov
out
loope
pop
popa
std
inc
pop
gs
lret
mov
mov
cmp
insl
mov
mov
adc
jno
divl
pop
push
int3
lcall
fs
ljmp
insb
mov
call
mov
rol
inc
aas
cli
stos
out
mov
inc
xor
xor
xchg
aas
cwtl
or
add
pop
jmp
in
dec
cmp
rcrb
jmp
jne
mov
aaa
push
add
ret
gs
cmp
gs
jo
ret
int
ds
jns
mov
enter
pop
add
jle
sub
push
inc
sbb
inc
adc
rorb
dec
movsl
mov
data16
jno
mov
js
lret
adc
mov
pop
cmp
imul
push
dec
dec
or
add
outsl
push
ds
xchg
gs
or
repz
pop
jmp
frstor
mov
inc
clc
icebp
shrb
fidivs
lret
push
sub
leave
out
add
push
push
aad
cmc
mov
jbe
call
incb
push
xchg
enter
fcmovbe
std
mov
aam
mov
lods
xor
nop
cmp
popf
dec
xchg
xchg
inc
aam
push
lock
rcl
sub
rcl
mov
lcall
xchg
adc
push
nop
outsb
into
cmovl
adc
pop
fisttpl
push
lds
lods
dec
cmpsl
cltd
jns
pop
sub
sub
jbe
push
shll
jecxz
xchg
out
add
push
pushf
cmpsl
sbb
jl
dec
add
jno
xorb
bound
mov
sub
outsl
cmpsl
jecxz
mov
mov
xchg
dec
inc
inc
je
cmpsb
mov
dec
sbbl
sub
enter
jle
aad
jmp
sahf
cltd
fsubl
push
in
fcomps
and
es
mov
push
sbb
inc
std
test
dec
pop
xor
jp
xchg
add
cmc
jp
mov
push
fbstp
movsl
or
daa
or
movsb
lcall
add
lock
and
add
daa
les
sbb
pop
fstl
roll
lods
pop
lret
fwait
js
mov
bound
loope
loopne
iret
pop
loopne
and
xchg
mov
mov
loop
mov
inc
out
hlt
sub
ret
jle
test
dec
adc
loop
clc
lods
and
out
pop
aam
sub
sub
int3
hlt
stos
adc
in
mov
clc
bound
dec
imul
adc
pusha
int
ja
xlat
rorb
push
mov
xor
mov
jl
sub
push
out
mov
jns
mov
jmp
cltd
pop
push
out
jg
push
or
xchg
nop
jl
mov
push
addr16
adc
sub
fucom
lods
pop
in
insl
add
inc
or
pop
add
pop
jle
pop
ds
es
lods
enter
push
pop
scas
cwtl
loop
cmp
cmp
push
push
aas
pop
push
int
push
hlt
sub
push
mov
and
sbb
inc
out
mov
int3
inc
outsb
or
mov
lcall
cmp
nop
mov
xchg
push
xor
rorl
xchg
xchg
lcall
lahf
pop
jae
test
sti
mov
lea
jecxz
loop
push
enter
stos
ret
movl
add
push
int3
mov
add
cwtl
pop
or
cmp
mov
imul
cwtl
addr16
fsubl
mov
data16
mov
dec
pop
pusha
out
mov
xlat
call
popa
xchg
inc
xchg
mov
mov
lods
outsb
push
inc
push
fcoml
push
call
cmp
sbb
cmp
jo
add
jmp
inc
or
insb
jae
add
xlat
dec
push
lods
jmp
addr16
mov
fs
mov
stc
cmpsb
sti
cmp
jecxz
mov
pushf
sub
shll
lea
mov
mov
stos
scas
xor
ljmp
and
cld
aam
xor
jne
sti
stos
jle
loopne
cld
add
leave
xorl
pusha
mov
sbb
push
roll
add
and
scas
pop
mov
and
sbb
dec
out
xchg
xchg
stos
push
repnz
jbe
sahf
cmp
pop
xchg
mov
test
mov
leave
in
pop
and
jo
aam
inc
lods
or
pushf
pop
jns
idiv
lock
out
inc
xchg
xor
fbstp
ficoml
adc
inc
jae
icebp
xchg
mov
imul
mov
mov
cmp
xchg
jno
xchg
insb
adc
xchg
fisttps
shlb
shlb
xor
add
or
mov
movsb
xchg
push
adc
outsl
pop
jge
jl
mov
ja
mov
test
lds
aad
imul
pop
mov
add
sahf
adc
sbb
add
cmp
in
iret
test
push
cltd
gs
out
mov
pushf
sahf
xchg
imul
cmc
and
dec
pop
daa
mov
push
ja
xor
pushf
je
mov
inc
jno
inc
idivb
xchg
mov
dec
leave
sub
mov
pusha
cmpsl
addr16
jnp
fwait
addl
cmpsl
jp
loopne
mov
fstpt
xor
or
aam
xchg
and
call
add
xchg
addb
add
xchg
leave
ljmp
js
leave
out
jle
cmp
push
aam
xor
repz
sub
jo
rolb
cmp
pop
sbb
add
inc
and
sbb
fbld
jmp
cmp
imul
cmp
cli
inc
fiadds
iret
lahf
jmp
mov
xchg
stos
clc
mov
mov
arpl
sarl
inc
mov
ret
sub
add
dec
subl
test
push
jl
pop
and
pop
rcr
mov
pop
lret
mov
jge
fnsave
sarb
clc
outsb
xor
notl
xor
pop
aas
fstps
stos
icebp
fcom
dec
jb
and
les
pop
repz
jg
xor
clc
sub
xchg
movsb
lret
lds
fdivr
cmp
sub
adc
cwtl
add
imul
stos
or
xor
lods
scas
enter
mov
pop
cmp
das
xchg
cli
stc
inc
fdivs
mulb
mov
arpl
mov
mov
or
mov
ljmp
testb
xchg
lods
jb
insl
outsl
xchg
cmp
lret
rcrb
std
nop
jp
dec
pop
pop
sbb
push
outsl
lcall
das
mov
addr16
pop
xchg
sti
lcall
ja
outsl
sub
mov
scas
pop
xchg
pop
dec
es
dec
dec
add
push
call
in
mov
jle,pt
shrl
fsts
out
dec
roll
push
movsl
push
or
xchg
lds
insb
or
sub
pop
dec
lods
inc
sbb
push
imul
sar
cli
add
shll
adc
fcmovbe
scas
add
mov
push
aaa
push
lret
loop
sub
xlat
je
cmp
pop
dec
inc
mov
pop
mov
xlat
xor
and
or
iret
imul
push
fwait
push
in
shl
es
mov
js
shr
mov
inc
inc
inc
into
inc
sti
push
fisubl
inc
std
sbb
popf
lahf
sbb
int3
mov
mov
call
frstor
xchg
or
inc
push
mov
sub
adc
loopne
jnp
and
jo
std
mov
stos
push
ja
jo
flds
int
sbb
cvtpi2ps
popa
lds
gs
loop
mov
mov
sub
fstps
aas
push
xor
jp
lea
mov
rorl
mov
push
in
sbb
pop
push
push
adc
sbb
fmull
pop
lcall
loopne
fs
sub
add
mov
fstp
xor
and
sahf
inc
das
add
js
adc
xor
xchg
cmp
cltd
pop
mov
mov
int
sub
outsb
into
jmp
ret
aas
out
sbb
shl
mov
cmp
sub
xor
call
mulb
xchg
je
inc
pop
or
sbb
loop
or
outsl
sbb
sub
add
ret
jge
xchg
pop
xchg
dec
cli
dec
popf
jb
out
sub
out
mov
lds
clc
pop
scas
pop
or
cmc
aas
outsl
xchg
push
push
mov
mov
ds
ss
repnz
mov
shll
cmpsb
mov
pop
sub
jne
jp
scas
test
jl
sub
or
scas
enter
lcall
popa
mov
pop
xor
mov
out
ret
ret
jge
sbb
and
cmpsl
jge
pop
xchg
sub
test
js
mov
or
orb
xlat
int
adc
push
mov
lds
imul
call
sahf
dec
jmp
lock
cmp
inc
mov
ss
xchg
xor
dec
mov
sbb
ret
push
lcall
sub
cmpsl
push
xorb
imul
lcall
sub
and
lock
std
mov
pop
sahf
in
adc
insb
mov
in
xchg
inc
mov
mov
add
sahf
and
inc
mov
pop
fcmovnu
push
pop
aas
dec
cmp
inc
subb
xlat
idivb
xor
into
mov
movsb
hlt
add
cmpsb
ja
fcoml
dec
lret
mov
jbe
repnz
jno
fs
shlb
ret
aas
sub
cld
into
ja
and
push
and
cs
or
lret
add
adc
xchg
xchg
mov
mov
jle
ret
and
inc
pop
pop
fs
insl
jmp
pushfw
lock
out
push
or
stos
mov
xchg
inc
test
mov
pop
sbb
cmpsl
cs
jecxz
inc
jbe
and
cltd
aaa
add
and
cwtl
mov
insl
push
inc
push
inc
and
scas
icebp
push
fxam
sub
aaa
or
fldt
xchg
dec
pop
and
push
mov
fmuls
cld
adc
stos
fcom
inc
or
fidivs
loopne
mov
mov
aam
je
cwtl
jge
aas
and
jne
pop
mov
mov
je
ds
cmp
ret
inc
jbe
xor
push
fistpl
lods
mov
pop
xchg
cmp
xor
pusha
call
xor
mov
aad
xchg
or
mov
push
sub
sub
mov
cmp
cmp
lret
scas
movsb
outsb
mov
cmc
lock
mov
rolb
pavgb
cs
xchg
add
gs
mov
push
cmp
enter
lret
sub
in
sti
xchg
jmp
sub
cmp
pop
iret
lahf
cwtl
push
inc
out
lret
add
rolb
sar
test
std
push
push
ds
stos
and
sub
or
scas
and
daa
add
xchg
fcom
out
mov
fdivl
popl
arpl
cmpsb
and
mov
loope
cltd
popa
jns
dec
jl
jns
xor
daa
lods
push
sub
xor
das
cli
cmp
je
cwtl
push
cmpsl
fadds
lods
int3
mov
or
mov
sbbl
sub
mov
xlat
push
ficompl
add
pushf
les
or
or
mov
ja
push
sub
jae
fimuls
mov
jae
hlt
adc
sub
pushf
bound
mov
lret
mov
and
std
xchg
aas
ret
ret
fprem
sti
enter
inc
inc
into
into
adc
xchg
fcomps
and
sbb
adc
xchg
cs
adcl
repnz
mov
arpl
inc
dec
fists
push
and
sub
in
addr16
fstpl
push
xchg
dec
sbb
aaa
cli
sub
push
jl
stos
xchg
jle
dec
sub
leave
dec
mov
in
fsubs
adc
and
cmp
lods
lret
std
rorb
scas
mov
sti
xor
and
insl
xor
jo
adc
es
xor
or
jl
pop
mov
in
add
jb
pop
sbb
push
sbb
add
fdivl
xor
fcoml
stc
sub
and
xor
mov
mov
out
sar
and
mov
in
cmp
lods
and
iret
xchg
popa
fdivs
mov
xchg
xor
outsb
cmpsb
mov
je
pop
jns
cmp
rcrb
mov
mov
dec
call
addl
cmp
xchg
enter
in
out
sub
scas
cmpb
shlb
jb
leave
sub
rcl
negb
mov
add
lcall
in
add
xchg
jne
jns
out
cmp
ja
inc
mov
pusha
outsl
ljmp
fadd
in
jb
adc
push
add
movsb
inc
fwait
xlat
rcl
cmp
pushf
lods
ret
lahf
cmpb
pop
out
loopne
fisttpll
xchg
imul
loopne
fildl
jecxz
fadds
jge
push
mov
ret
hlt
mov
jns
lods
sti
or
cmpsl
sub
ja
je
cli
cmp
jae
loope
in
fisttpl
push
push
sti
sub
mov
pop
jecxz
lock
mov
shlb
pushf
sub
xchg
test
xor
sub
pop
pop
xorb
loopne
out
out
test
sbbl
cs
stc
cli
ret
test
dec
or
lret
std
mov
imul
jge
pop
xlat
lock
push
orl
push
clc
cmp
cmc
xchg
jmp
jns
hlt
mov
shlb
cmp
mov
xor
into
fisttps
popf
insb
mov
dec
fs
pop
pushf
mov
pop
or
aas
sbb
xchg
test
mov
addr16
jnp
test
jg
xor
push
lods
xlat
mov
aas
xchg
inc
sbb
xchg
xchg
mov
pusha
xchg
sbb
xor
and
out
lods
leave
lea
or
aam
mov
pop
or
mov
sti
fwait
push
jp
loope
loop
int3
push
add
rcrl
jl
test
mov
cmpsl
push
int3
cmp
add
pop
mov
scas
bound
cmp
xor
loopne
inc
sub
cmp
pop
pop
fwait
repnz
mov
stc
repz
xor
stc
push
mov
and
not
je
insl
out
ss
cmp
push
push
xor
insb
push
int
cmpsl
cmp
lahf
cmp
stos
ret
xor
adc
int
ret
add
scas
mov
outsb
sub
leave
es
repz
test
jno
addl
mov
pop
bound
or
aad
push
jg
and
push
fwait
xchg
jo
mov
xor
sbb
inc
roll
mov
lods
lret
imul
xor
insb
and
jmp
dec
loopne
adc
test
outsl
pusha
xchg
add
aad
stos
addr16
dec
aad
sbb
push
in
xchg
int3
mov
pop
add
ds
stc
and
jns
out
xchg
movsl
scas
repz
lret
mov
cs
in
inc
sub
popf
pop
repz
inc
sarl
pop
sbb
ss
jae
jmp
movsb
bswap
jmp
xor
jle
cmp
scas
sub
sbb
jnp
pop
cmpsl
lcall
or
sub
mov
jo
fcoms
add
loopne
test
sti
sahf
lock
stos
inc
xor
cli
sub
xchg
mov
mov
jp
sahf
scas
lahf
xorl
dec
push
lret
subb
cwtl
push
stos
loopne
jmp
inc
mov
hlt
push
out
pop
cmp
xchg
mov
data16
xchg
pop
cmp
jmp
sub
xchg
sub
ds
inc
fldenv
sbb
mov
mov
add
subb
cli
push
fldenv
fs
scas
leave
pusha
dec
and
pop
push
cmp
cmp
bound
bound
xlat
test
das
icebp
scas
or
jno
jmp
negl
outsb
das
aam
out
sbb
sbb
in
decb
inc
repnz
clc
out
or
test
jmp
je
lret
and
jbe
in
adc
es
dec
mov
test
lock
movsl
xor
push
or
mov
push
dec
push
and
jnp
pushf
inc
or
in
mov
lea
jl
sbb
sub
pop
es
fsts
shrb
dec
cmp
mov
jle
or
outsb
in
push
addr16
add
cwtl
inc
int
cld
sbb
into
pop
out
jne
cmp
mov
mov
scas
inc
inc
mov
or
push
rcrb
pop
std
mov
jg
push
lcall
aad
and
dec
add
popf
dec
bound
cmp
fsub
pop
or
imul
pop
inc
and
stos
jbe
dec
movsb
push
mov
shr
insb
jnp
pop
xorb
adc
incb
mov
lea
aad
add
out
jle
cbtw
sub
movsl
xor
sbb
outsl
jbe
daa
mov
jmp
jecxz
jecxz
fsubrl
shr
and
jo
mov
lods
imull
ret
mov
mov
xorl
sub
leave
mov
adc
xchg
jecxz
ss
or
lcall
cmpsl
mov
sbb
mov
in
sub
add
add
or
mov
insb
push
push
rclb
jnp
mov
fcompl
test
pop
add
mov
subl
cmp
mov
push
jb
mov
insl
jge
cmp
out
jecxz
pop
mov
pop
inc
incb
jge
and
cmp
insl
pop
insb
mov
sub
enter
fldcw
xchg
sub
xchg
pop
cs
fldt
pop
push
seta
loope
mov
jl
fidivrs
push
gs
test
aaa
ret
push
sarl
mov
mov
divps
jge
pop
addr16
pop
ret
rclb
mov
je
jg
aad
mov
cmc
out
in
jnp
lods
je
and
out
ds
movsb
dec
lahf
lea
call
insl
or
call
jecxz
pop
and
push
push
inc
je
cmp
xorb
shrb
xor
sahf
cwtl
add
and
cmc
arpl
movsl
xchg
jmp
dec
and
inc
ss
adc
xchg
jnp
flds
idiv
in
xor
mov
mov
or
inc
mov
ljmp
pop
gs
jnp
jae
in
std
jl
ret
sub
in
add
add
out
mov
rcll
in
mov
sbb
dec
mov
mov
outsb
add
fwait
or
imul
fs
add
hlt
sarl
sub
xorl
fs
cmp
jecxz
mov
and
jne
inc
mov
sarb
cs
gs
pop
in
cmp
fistl
addr16
adc
lahf
out
dec
xlat
push
aaa
cmp
xchg
xor
adc
add
dec
leave
mov
scas
mov
cmp
lds
addr16
imul
and
std
clc
aam
test
sbb
mov
dec
psubw
jg
imul
adc
mov
dec
cltd
out
ljmp
loope
mov
cmpsl
mov
jb
pop
adc
not
pop
jns
inc
jno
andb
pop
add
imul
outsl
mov
xchg
stc
mov
fbld
push
or
bound
sbb
mov
in
adc
xor
push
or
push
lret
icebp
xchg
fistpl
rorl
xor
or
loopne
add
je
and
cmovl
jno
sbb
inc
test
sahf
mov
add
into
mov
fs
push
fidivl
aaa
cmp
ret
shll
mov
loope
and
mov
enter
sti
scas
and
js
lock
addr16
mov
inc
adc
test
and
and
bound
test
push
jo
sub
xchg
mov
cmp
in
popf
pop
jmp
arpl
and
inc
lods
adc
mov
inc
sub
hlt
mov
mov
xchg
aaa
test
out
xor
out
inc
std
adc
mov
inc
sub
incb
std
fldenv
clc
push
mov
xchg
xchg
orb
lahf
popf
cltd
pusha
out
mov
xor
cmp
std
and
ret
aas
sbb
mov
sub
and
cs
xor
jl
frstor
sahf
or
xchg
fldenv
aad
pop
xlat
jp
mull
jnp
adc
rorb
das
sub
xchg
xor
stos
pop
outsw
sub
lcall
arpl
popa
sbb
fidivrs
iret
jmp
xchg
pop
dec
stos
pop
fadd
ffree
orb
mov
ds
push
push
xchg
test
arpl
xchg
push
xor
lret
jb
pop
pop
push
mov
lahf
push
mov
mov
mov
cmp
jbe
mov
xchg
sti
xor
sti
dec
out
aaa
cmp
test
imul
js
cmpsb
add
jmp
pop
lret
push
mov
stc
ret
inc
xchg
mov
fisubrl
popf
scas
ret
sub
xchg
jns
ret
adc
dec
sbb
push
cmpb
mov
adc
shrl
mov
xchg
fcompl
loope
nop
lret
movsb
dec
push
mov
popf
cli
inc
sub
xchg
xor
fimull
mov
or
inc
mov
mov
lahf
mov
inc
int3
sbb
xchg
push
leave
xchg
inc
dec
in
add
aam
call
inc
add
mov
inc
and
sbb
inc
mulps
dec
call
push
push
sub
mov
xor
mov
ss
inc
fwait
stc
xchg
or
jp
xchg
fdivr
enter
dec
cmp
mov
and
sbb
outsb
xor
inc
fs
adc
ficompl
jae
rorb
or
add
xor
mov
inc
xchg
insb
cmp
push
fnstsw
rcll
incb
dec
scas
sti
in
dec
adc
cld
stc
push
out
lock
enter
sti
xor
jne
mov
jg
icebp
aam
mov
dec
cli
leave
add
add
jb
adc
push
xchg
lds
push
mov
dec
mov
adc
cwtl
jne
popf
or
into
cmp
sub
jnp
inc
sbb
into
scas
adc
mov
lahf
out
add
pop
push
adc
ss
sbb
inc
fmull
xorb
xchg
adc
dec
add
nop
inc
mov
dec
into
sub
in
stos
not
dec
mov
decb
outsl
enter
push
leave
push
push
test
mov
loope
adc
lret
push
cmp
int
pop
xchg
out
xchg
int
mov
xchg
sbb
stc
ljmp
inc
mov
mov
test
es
ss
fprem
add
popf
xchg
add
mov
repnz
mov
add
dec
inc
outsb
hlt
cmp
in
pop
cltd
pop
pusha
scas
inc
je
pop
push
and
popa
icebp
push
xchg
inc
xchg
cmp
arpl
mov
je
add
xor
insb
lret
pop
sub
jne
adc
sbb
mulb
cmc
fiadds
clc
xchg
push
adc
mov
call
cld
mull
mov
cmp
imull
aaa
push
js
or
in
pop
addl
popf
sbb
clc
scas
les
lret
jns
leave
pusha
ljmp
add
ret
pop
rorl
pop
sbb
jo
push
addr16
inc
data16
pop
test
fstpt
push
cltd
mov
jo
jle
fwait
outsb
into
sbb
dec
dec
roll
inc
cli
push
andb
popl
cmp
push
ret
lods
sbb
push
lea
rorl
or
push
pop
fcompl
cmp
cli
dec
imull
or
and
into
lods
shll
ffreep
movsl
shrl
dec
sbb
inc
push
clc
je
outsl
inc
push
outsl
mov
pop
out
gs
fs
sahf
and
out
shlb
cmp
movsb
mov
jl
mov
xor
inc
mov
stos
mov
test
jecxz
test
and
in
ror
cmp
mov
stos
rclb
call
push
push
sti
adc
or
rorb
jae
pop
cmp
dec
xchg
out
xchg
cmp
xor
inc
ret
cmp
push
mov
pushf
inc
mov
xlat
push
add
push
mov
add
cmc
int
pop
mov
dec
jno
dec
xchg
sbb
fcmovbe
dec
pop
ljmp
outsl
jne
jns
lahf
cmp
cmp
mov
in
push
out
add
les
or
in
mov
cmc
xor
sbb
rcll
or
outsl
loopne
in
ja
out
sbbb
aaa
sbb
inc
sub
xchg
cmp
pop
pusha
jae
push
mov
jnp
lret
cmp
mov
sub
std
fnstsw
sbb
cmpsb
cmpsb
xor
cmp
mov
out
imul
xchg
ds
and
jnp
cli
in
sbb
jno
pop
outsl
mov
push
sbb
ds
xchg
sbbl
cmp
test
inc
cs
xchg
mov
xor
and
out
stos
loop
mov
inc
sub
push
cmp
shl
frstor
push
sub
push
fisubrl
outsl
shlb
or
push
lock
cmp
pop
insl
movsb
pusha
mov
mov
push
sub
mov
popf
leave
repz
jge
pusha
push
jnp
ljmp
add
data16
mov
xchg
and
add
xor
stc
adc
cmp
jne
pop
jp
scas
and
shrl
inc
addr16
das
frstor
aaa
mov
imul
popf
test
mov
and
push
jmp
cmpl
xlat
stc
pop
push
stc
ror
jnp
dec
mov
sti
fldcw
mov
dec
es
and
push
fucomi
js
mov
inc
or
and
add
bound
or
aas
enter
sub
mull
mov
inc
aaa
or
push
shlb
xchg
sub
sti
inc
jmp
pop
clc
loopne
pop
ja
adc
das
inc
xlat
test
xchg
adc
ret
shrl
or
enter
push
clc
sub
popa
mov
call
mov
mov
orl
mov
xor
jno
adc
adc
inc
outsl
push
test
movsl
outsb
adc
and
and
notl
stos
inc
ljmp
adc
les
repnz
loope
inc
inc
adc
add
adc
scas
xor
scas
add
and
fiadds
cmp
xor
lret
adc
int3
stos
cmp
mov
jle
cmp
les
dec
mov
outsl
xor
pop
xor
xchg
inc
xor
push
pop
dec
fidivl
stc
push
mov
inc
xorl
jecxz
or
test
popf
push
push
cmpsl
jnp
adc
push
lret
out
add
mov
ljmp
adc
xchg
push
push
pop
xor
jno
pop
inc
icebp
stos
add
pop
pop
pop
or
xchg
test
jle
push
jae
mov
bound
data16
pop
and
fwait
mov
addr16
xor
inc
lods
ret
sub
and
jno
clc
fs
je
pop
dec
int3
mov
sub
sbb
sbb
sub
cmp
adc
in
shll
jmp
rclb
dec
mov
inc
cltd
push
and
jne
xor
out
testl
mov
lds
lret
dec
clc
push
pop
dec
loopne
mov
fldt
cmp
mov
push
mov
fwait
shr
test
and
clc
dec
js
pop
push
sbb
popa
adc
dec
pop
or
and
mov
push
fcmovbe
pop
sahf
sbb
push
inc
mov
ss
mov
test
in
les
enter
sti
mov
fisubrs
sbb
cmp
fsubl
adc
dec
lret
arpl
das
xor
jge
mov
pop
sbbb
push
xchg
push
adc
movsb
icebp
test
movsl
outsl
sbb
adc
out
push
push
out
jl
test
or
mov
push
adc
aaa
mov
cmc
insb
repz
dec
cmpsb
mov
pushf
shl
pop
mov
pop
fsts
nop
pop
xorb
or
js
push
mov
push
fs
mov
flds
mov
push
lret
mov
mov
xchg
dec
jne
movsb
jp
pop
ljmp
inc
sbb
inc
lcall
fsubr
out
inc
scas
push
jne
and
dec
push
iret
sbb
sbb
mov
imul
cmp
mov
pop
mov
pop
sbb
xchg
fwait
clc
adc
sti
mov
jbe
mov
push
pop
shrb
mov
pop
sub
xchg
test
andb
jnp
lods
jbe
jmp
aam
xor
xchg
jne
inc
dec
mov
aam
das
or
nop
dec
inc
inc
mov
adc
dec
jnp
aam
jnp
push
mov
inc
mov
iret
movsb
in
daa
call
adcb
ffreep
xchg
icebp
pop
iret
sahf
xor
std
fcompl
mov
jbe
mov
xor
cmpsb
xchg
lret
push
inc
pop
xchg
and
pop
adc
addl
xchg
mov
ljmp
adcb
sbb
cmc
jge
outsb
mov
cmc
jge
jge
test
in
mov
pop
daa
jecxz
mov
inc
pushf
jo
mov
dec
and
pop
fildl
cmp
push
sbb
pop
pushl
xlat
push
xor
dec
sub
inc
leave
inc
mov
fnsave
pop
push
call
mov
jge
mov
mov
nop
or
fwait
mov
pop
lods
mov
mov
aaa
loop
ds
dec
sbb
mov
clc
aad
mov
mov
insl
jno
cmp
into
pushf
push
xchg
mov
movsb
aaa
subl
loop
add
inc
fcmovnbe
jl
mov
ds
inc
dec
fldt
rcrl
out
cli
pop
clc
lds
dec
push
adc
sbb
xchg
add
lods
push
lahf
jo
adc
xchg
push
mov
lds
fistl
pushf
mov
fsubrl
add
in
mov
push
mov
imul
xchg
and
les
and
fbld
lods
mov
fistl
jge
mov
or
lahf
jecxz
push
push
imul
xchg
test
lret
cwtl
jge
enter
les
in
pop
mov
lcall
jg
mov
fists
stos
xor
pop
push
push
aas
jmp
xlat
push
adc
clc
pop
dec
std
out
push
ja
mov
cmc
nop
fldenv
inc
jg
das
rcr
popf
xor
sahf
fwait
mov
push
incl
push
and
outsl
int3
xchg
nop
pop
mov
movsl
or
mov
or
and
out
push
mov
inc
imul
mov
inc
and
xor
rcll
das
push
pop
lret
call
mov
lock
or
mov
sbb
enter
fwait
and
out
jl
fldpi
or
in
subl
cmp
loopne
mov
sbbb
mov
push
mov
dec
divl
imul
sbb
push
loop
insb
movsb
je
repz
mov
jns
iret
popf
mov
xchg
xchg
push
ljmp
data16
cmp
pop
loopne
jmp
adc
in
sbb
test
cmp
out
cld
or
jne
xor
and
loopne
out
in
js
add
adc
and
xchg
insb
cmp
shl
dec
xchg
mov
cmp
push
mov
sbb
jne
fscale
mov
push
lret
outsb
in
outsl
shl
sub
sub
cmp
jo
loopne
jo
sub
and
cmp
xchg
jle
lcall
data16
adc
sbb
cli
jmp
out
adc
inc
jp
xor
jnp
cwtl
or
mov
ss
int3
add
dec
fsubrs
mov
sub
sub
push
or
les
ljmp
in
andl
fwait
or
xor
repnz
or
xchg
add
add
fildll
subb
push
out
push
pop
jp
xchg
dec
movl
mov
sub
fcompl
inc
pop
mov
cmp
call
aaa
jns
inc
gs
sbb
dec
lahf
mov
sbb
stc
mov
mov
inc
mov
and
and
mov
and
mov
rolb
xor
fstpl
sbb
xor
ret
ret
add
jo
push
push
and
insb
mov
pop
stos
sbbl
hlt
push
jae
mov
or
pop
scas
inc
and
fistl
xchg
loope
sbb
fisubs
rorl
je
lods
cmp
add
rcrl
sbb
and
jp
pusha
sbbl
lock
outsl
das
shll
popf
stos
inc
pop
rorb
mov
rclb
mov
sub
sub
dec
cli
pop
fwait
repz
jecxz
xor
mov
ja
cmp
push
push
push
inc
pop
outsb
sub
or
xchg
movsl
xor
xchg
sub
mov
inc
les
mov
mov
scas
sub
xchg
push
test
les
ret
pop
iret
mov
aaa
sub
aad
or
xor
jo
pop
sub
mov
bound
xor
mov
je
cmpsl
mov
pop
mov
cmp
mov
mov
jb
adc
jge
ja
out
mov
sub
imul
mov
or
mov
lahf
sub
outsl
xchg
lcall
jne
sar
sarb
add
pushf
push
test
push
loopne
mov
lods
icebp
daa
js
cli
or
sbbb
or
cmc
cmp
jo
sti
mov
je
mov
addr16
sub
leave
nop
jl
test
fcomp
cmp
and
pusha
gs
push
push
or
mov
scas
das
lock
or
arpl
aam
sbb
in
push
sahf
and
mov
adc
lea
out
shll
repnz
cmp
or
push
imul
lcall
es
std
jno
push
cltd
sbb
jp
adc
and
lods
lods
pop
jno
mov
jbe
pop
pop
dec
ret
push
mov
lods
clc
leave
or
outsb
in
adcb
push
xchg
dec
pushw
add
ret
test
in
dec
mov
xchg
push
pop
add
sub
pop
call
xor
adcl
mov
lods
test
sti
inc
mov
stos
movsl
in
dec
add
stos
scas
imul
push
sub
xor
push
je
push
shll
aaa
jns
dec
adc
adc
add
pop
mov
scas
push
roll
mov
lock
lds
pop
lods
lods
sbb
mov
push
pop
dec
js
and
jne
lock
add
nop
push
or
cwtl
int3
mov
ss
int3
fsubr
dec
mov
aam
push
mov
mov
leave
pusha
es
cmpxchg
shrl
test
loopne
adc
push
dec
mov
inc
mov
dec
pop
mov
scas
xlat
pop
push
cltd
arpl
pop
push
call
ljmp
insl
mov
sbb
inc
pop
sub
adc
int
mov
pop
adc
aad
lret
sbb
dec
testl
ljmp
es
out
shlb
inc
and
mov
cld
mov
and
xor
clc
jo
jno
sub
push
adc
cmpsb
cli
mov
inc
mov
cmp
mov
push
sub
cmp
xor
sarb
divl
insl
pop
mov
gs
out
mov
cmc
pushf
dec
push
sbb
enter
and
cmp
mov
inc
jbe
add
mov
lock
or
mov
int3
cmpsl
arpl
jge
fs
iret
xor
les
lds
lds
sub
push
add
xor
lods
sbb
sub
pop
inc
lock
jae
sbb
or
add
sub
push
xchg
sub
mov
fwait
jae
daa
push
lret
jmp
in
mov
xchg
movsl
sbb
add
test
or
mov
pop
lcall
lods
test
push
mov
fldl
or
or
jmp
mov
fsubr
cmpsl
add
jmp
imul
pop
inc
xchg
mov
mov
adc
aad
in
mov
jg
xchg
xor
xchg
push
jmp
mov
dec
aad
adc
outsb
in
les
jge
or
rcrb
mov
cld
addr16
jns
or
sbb
mov
jp
ds
mov
xchg
inc
iret
and
fbstp
sbb
mov
loop
mov
pop
cld
loop
lret
pop
xchg
roll
js
mov
mov
ljmp
or
les
xchg
jno
jmp
sbb
es
pusha
pop
inc
rol
inc
and
in
stos
pusha
and
cmc
adc
adc
push
xor
mov
push
aas
inc
lret
jns
lret
push
push
adc
repnz
jne
lods
xor
add
popa
adc
or
pop
adc
mov
lahf
hlt
mov
jecxz
cmpsl
inc
int3
stc
out
and
ja
cltd
data16
xor
shlb
dec
mov
nop
jp
dec
test
xchg
es
repz
ret
inc
mov
jmp
lcall
clc
shll
xchg
outsl
add
jno
inc
stos
add
ja
adc
stc
dec
leave
mov
cltd
or
aas
mov
cmp
xor
mov
stc
cmpsb
push
into
rcr
push
add
loopne
lods
xor
sar
leave
lock
xor
lods
addl
push
jp
inc
add
cltd
cwtl
hlt
aad
hlt
lret
test
iret
mov
jne
mov
mov
mov
xor
or
mov
ds
mov
scas
out
dec
sti
push
test
loop
fmul
movsl
mov
cmpsl
push
and
push
mov
leave
push
xor
popa
lahf
cli
insl
jo
enter
dec
jp
jl
add
stos
aad
hlt
cmpsl
xorb
jecxz
mov
lcall
mov
adc
js
adc
loop
sub
hlt
out
andl
nop
in
insb
lods
push
xlat
faddl
leave
dec
iret
mov
and
clc
mov
lcall
adc
mov
jecxz
xchg
out
repz
and
adc
xor
repnz
xor
stos
roll
pop
stos
scas
arpl
mov
lods
arpl
cmp
lahf
jnp
mov
or
aaa
cmp
dec
jnp
lods
mov
fisttps
cmp
stos
lret
or
sahf
or
clc
in
add
or
call
jecxz
imul
xlat
xor
sbb
stc
data16
mov
adc
outsl
xchg
out
mov
fcomi
push
aam
cmpsl
cld
or
icebp
leave
cld
aas
test
mov
cwtl
gs
xchg
inc
filds
test
ss
cmpsb
xchg
jmp
movsl
adc
xchg
mov
bnd
pop
or
roll
mov
mov
ret
jo
scas
aaa
and
mov
xor
mov
dec
xor
mov
ss
pop
cltd
int3
aad
jmp
pop
sub
sti
adc
dec
out
testl
and
sub
sub
mov
ret
mov
xorb
mov
sbb
fwait
and
shr
sub
into
or
xor
iret
aaa
inc
negb
mov
sbb
stos
mov
lret
in
push
out
subl
vpunpckhwd
jbe
in
and
xchg
mov
aad
push
sbb
or
add
cwtl
loopne
pop
mov
xor
addr16
fwait
jle
in
pop
jnp
and
and
cwtl
xchg
pop
mov
test
in
pop
xor
push
inc
jno
scas
fcomi
or
test
xlat
xchg
fsts
xchg
sub
push
mov
inc
and
dec
jp
in
inc
js
mov
cld
out
mov
shrb
pop
add
and
loope
or
cmp
pop
inc
or
dec
xchg
fcmovbe
xor
inc
sarb
adc
scas
mov
sub
faddl
adc
imul
orl
cmp
pop
fisubrl
fxch
mov
imul
push
jmp
add
in
das
or
into
and
lods
mov
std
lret
or
xor
cmp
loope
ss
mov
inc
ja
or
pop
xchg
scas
or
mov
popa
and
xor
addr16
out
pusha
mov
ja
in
or
inc
aaa
dec
cltd
pop
fildl
lret
pop
mov
gs
subl
mov
push
jns
push
ret
push
fdivrl
jl
dec
pop
lfs
push
dec
mov
mull
mov
jge
inc
ja
gs
leave
cwtl
xchg
sub
fs
inc
inc
and
pop
sub
jp
fwait
adc
cmp
dec
sbb
sbb
sbb
ret
add
mov
les
xor
outsl
roll
inc
scas
mov
mov
add
inc
sbb
lea
test
xor
repz
lret
in
pop
loope
mov
mov
test
cmp
out
daa
test
jne
insl
and
pop
rcll
lods
cmp
aas
aaa
mov
repnz
jae
das
sbb
mov
call
mov
pop
xorl
jecxz
mov
cmp
mov
xchg
push
arpl
add
loopne
add
or
and
arpl
fsubl
movsl
ja
mov
inc
sti
mov
mov
scas
aas
shrb
jp
adc
lret
into
mov
leave
into
mov
pushf
push
inc
iret
ss
sbb
sub
sti
inc
xchg
mov
test
shrl
sub
pop
xchg
jmp
fldenv
nop
jo
mov
leave
add
shl
pop
sub
enter
lcall
push
xorl
cmp
aad
shll
mov
and
lock
xor
inc
jle
pusha
mov
mov
mov
mov
mov
clc
mov
push
leave
or
cmp
dec
add
test
insb
inc
xchg
aad
out
into
ret
addr16
push
lcall
and
mov
pop
adc
mov
xlat
xchg
out
ja
outsl
push
in
fadds
cmc
pop
mov
pop
sub
hlt
je
mov
fstps
sti
cltd
push
lret
icebp
add
rorb
idivb
orl
gs
sahf
adc
std
dec
push
add
shld
fisttpll
shl
pop
inc
cwtd
mov
rcl
cltd
negb
rorl
pop
cmpsb
and
pop
in
sbb
jae
inc
and
adc
ret
popf
pop
inc
mov
mov
mov
scas
push
push
sub
scas
cmp
cltd
inc
dec
and
sub
addr16
iret
and
adcb
out
mov
jns
xor
pop
fxch
filds
xlat
stos
inc
lahf
mov
lods
mov
mov
shl
filds
jp
pop
pop
and
pop
mov
sub
les
ror
add
into
shr
xor
sub
lret
jno
mov
popa
mov
mov
imul
sub
imul
sub
ljmp
or
dec
fsubrs
fdivl
xchg
adc
xor
aaa
and
add
mov
xor
fcomps
jmp
cwtl
popa
clc
mov
mov
mov
jns
addr16
xchg
push
dec
sub
fs
dec
mov
mov
lods
mov
sahf
jl
push
jecxz
das
jbe
adc
xchg
outsl
aaa
fidivl
loop
out
jecxz
mov
mov
cmp
loop
js
and
fisubl
shll
mov
pop
aam
shlb
mov
ret
fisubs
dec
aas
in
mov
sahf
aad
sub
lds
mov
jecxz
lock
adc
cmp
clc
pop
mov
mov
sbb
pushl
xor
iret
leave
xchg
shlb
push
pop
dec
sub
ret
push
push
push
ret
xchg
repz
adc
inc
and
aaa
mov
int3
dec
add
mov
stc
mov
mov
lds
sbb
lcall
fcmovbe
mov
pop
cmp
push
or
jne
jg
push
daa
dec
fldl
mov
jae
mov
push
jp
push
cltd
and
mov
fldt
dec
mov
mov
dec
iret
pop
jecxz
and
xchg
push
or
lahf
add
jmp
ljmp
mov
and
xor
push
and
xchg
rcrl
add
adc
int3
ret
loopne
pop
shlb
scas
fstpl
insb
es
cmp
push
mov
push
stos
push
mov
fwait
lds
stos
xor
push
mov
addr16
cld
stc
bound
adc
shl
pusha
int
mov
jbe
cltd
addb
xchg
xchg
sub
xor
sub
nop
cmp
push
nop
in
and
lock
decl
jbe
mov
adcb
push
jns
fldenv
adc
push
pop
pop
adc
pusha
stc
scas
sbb
pop
dec
lcall
clc
push
mov
cli
loopne
mov
dec
and
add
xor
leave
stc
sti
pusha
loop
cmp
shlb
pop
mov
mov
fildll
mov
testl
push
out
fwait
aaa
jb
fsubrs
add
jge
mov
pop
mov
xlat
add
mov
inc
jge
mov
insb
mov
push
daa
jle
xor
hlt
test
cmc
xor
outsb
sub
int
cltd
xchg
repnz
out
jb
jecxz
cmp
lcall
mov
pusha
sbb
lods
enter
add
imul
mov
xor
incb
fnsave
fistl
xchg
leave
mov
inc
cmpsl
or
clc
daa
jl
sbb
sbb
shr
sbb
mov
in
and
push
jns
mov
test
jg
mov
adc
test
outsb
int3
mov
cmp
inc
popa
stos
push
dec
aad
test
lret
or
les
in
ja
aad
sbb
cmp
and
and
pop
jae
fisttpll
pop
mov
pushf
pop
fistl
mov
jmp
scas
adc
subl
cmc
xchg
nop
aam
or
lret
sbb
shrb
xchg
movsl
cmp
loop
mov
fcomps
shlb
mov
push
xor
out
xchg
std
rcll
sub
stc
jnp
xchg
lcall
mov
dec
jnp
ret
xchg
jp
in
add
nop
imul
ret
push
loopne
mov
mov
loope
lret
push
in
jnp
sub
repnz
mov
xchg
imul
push
push
xor
cmc
mov
inc
cmpl
push
pop
mov
out
aam
pushf
fistpl
scas
adc
lret
mov
dec
mov
adc
hlt
push
sbb
cmp
adc
mov
subb
sub
cmpsb
lock
test
inc
dec
lods
sbb
shll
fsubrl
jbe
mov
xchg
test
mov
lahf
jo
add
xor
stos
xor
ret
call
es
in
sub
loope
sbb
fwait
mov
into
cmpw
test
dec
and
fidivrs
mov
push
pop
adcl
cld
sarl
insl
cmc
aas
lea
push
orb
or
xlat
cld
jg
dec
lods
pop
inc
loope
xchg
pusha
adc
imul
inc
cld
pop
out
mov
lret
ljmp
movsb
test
cmc
sub
adc
xorl
inc
cmp
out
cmpsl
or
ds
sar
xor
sti
in
ja
push
stos
addr16
and
testl
dec
insl
shl
mov
mov
inc
aaa
xchg
movsl
aad
jae
in
fisttpl
pop
add
sti
bound
or
xor
dec
mov
sbb
jae
aam
dec
jnp
fstpl
xor
jo
add
pop
xchg
or
or
iret
es
inc
cmp
cs
jl
out
mov
jo
sbb
test
cmp
add
sarb
aam
lea
cmp
scas
xor
decl
inc
jmp
pop
daa
or
jge
sar
xchg
shll
adc
jo
lahf
add
xchg
jns
mov
or
add
test
popf
test
add
mov
add
pop
pop
lods
faddl
ret
pop
dec
mov
lcall
xor
add
rolb
sub
out
inc
jns
ficoms
stos
mov
ljmp
pop
jne
mov
filds
outsb
mov
insb
xchg
cmp
movsb
mov
push
pop
out
jns
and
lds
pop
inc
ret
push
clc
fwait
bound
dec
insb
mov
sbb
loope
adc
outsl
inc
pop
sub
push
ljmp
mov
lds
jl
in
mov
cld
cmpsl
inc
mov
insl
xchg
dec
add
dec
adc
hlt
fs
aam
mov
cmpsb
push
pop
lret
sbb
xor
pop
gs
cwtl
cltd
pop
popf
in
mov
jecxz
lea
in
adcb
sbb
mov
sbb
inc
mov
push
xchg
cmpb
lods
pop
icebp
inc
xchg
je
sub
in
mov
repnz
cmp
mov
dec
lods
rorb
cmp
fistps
pop
cmc
xchg
mov
std
pop
mov
xor
leave
pop
jbe
hlt
insb
rcr
xchg
andl
fistl
test
std
rol
ret
xchg
push
lret
mov
fxtract
fisubl
lock
mov
insl
or
sbbb
loope
jno
or
jne
mov
lcall
dec
lods
push
std
jle
inc
dec
jle
lret
jne
or
sub
mov
push
cmpsb
sub
xor
mov
pushf
mov
clc
cmp
pop
cmp
xor
dec
xchg
loop
mov
pop
outsl
enter
jg
inc
sub
adc
dec
mov
mov
cmp
sti
xchg
rcrl
mov
cmp
out
test
ret
inc
jo
js
test
sti
ja
scas
jbe
push
xchg
fsubrs
int3
mov
adc
rorl
mov
cmp
and
pop
sub
adc
sbb
shrb
cmp
push
pop
imul
or
mov
mov
pop
add
pop
scas
xlat
outsb
xchg
sub
cld
ret
push
push
add
stc
cmpsl
pop
stos
adc
insl
mov
sub
aam
icebp
arpl
out
jp
les
adc
fcom
inc
xchg
int3
pop
lock
or
jnp
mov
add
inc
test
out
ss
mov
stc
cmp
jns
jge,pn
or
add
test
mov
mov
out
je
stos
iret
fcompp
into
mov
xor
adc
mov
fdivl
out
aaa
inc
jmp
insb
mov
mov
insl
mov
jp
mov
lock
xchg
pop
or
or
push
pop
pop
xchg
out
test
test
push
push
jmp
rcl
push
ret
mov
stos
sar
cmpsl
les
or
jb
std
das
push
stc
repnz
push
jle
jg
cs
sub
jbe
lret
jp
scas
xor
dec
inc
scas
add
sbb
push
sbb
mov
jp
mov
jmp
dec
add
fidivrs
insb
insl
pop
cltd
rol
xchg
jmp
out
fwait
push
xor
pop
mov
inc
xchg
xor
stos
subl
sbb
push
push
jno
cltd
inc
sbb
xor
out
pop
daa
inc
push
xchg
test
sbb
pop
rcl
jecxz
fcomi
sub
mov
pusha
movb
icebp
jnp
dec
adc
dec
mov
push
out
scas
dec
lcall
mov
sub
sarb
jae
mov
pop
sub
sti
mov
cmc
notrack
inc
sub
cmp
les
push
mov
lea
push
dec
loope
daa
or
and
jmp
add
mov
hlt
rorl
sub
push
xor
int3
mov
mov
sbb
xchg
jg
enter
cmp
xchg
mov
in
lahf
xchg
repnz
out
push
jle
ficoms
mov
stos
jb
mov
xchg
push
inc
inc
mov
scas
jnp
stc
dec
add
test
iret
cmpsl
cmc
xchg
dec
fwait
ja
outsb
lahf
leave
xor
xchg
and
xchg
xlat
sub
jnp
pop
and
rcr
jl
mov
js
mov
or
mov
sar
lods
jmp
adc
lock
push
adc
call
fisttpll
jecxz
push
jl
into
ret
jp
out
nop
out
insl
fdivs
jbe
sbb
movsb
andl
mov
sbb
jo
sbb
cmpsb
inc
icebp
scas
clc
loopne
sbb
out
inc
fcmovu
sbb
mov
aad
scas
jle
repz
adc
push
push
xor
int
ret
pop
pop
fdiv
test
fdivrl
clc
rcr
mov
mov
addr16
ficomps
test
das
jp
imul
pop
cmpl
jg
cmpl
jns
repz
or
pop
lcall
in
mov
sub
push
test
sbb
std
imul
push
fdivrs
aaa
pop
fwait
mov
pop
mov
fmull
push
jo
mov
dec
int
sub
or
rcll
pop
out
ja
push
scas
push
out
mov
or
js
jb
mov
dec
lods
loopne
inc
outsb
xor
dec
out
lret
ret
add
mov
rorl
fdivl
scas
jne
shlb
jb
pop
add
add
dec
mov
test
imul
pop
jnp
addr16
pop
outsl
loope
cld
push
ljmp
cmp
bound
push
push
int
push
pop
aam
adc
dec
push
xor
in
mov
dec
repnz
sbb
pop
cmc
push
pushl
jbe
clc
out
fsubrp
js
outsl
insb
pop
push
les
lock
sub
enter
fsub
in
aaa
ficompl
dec
aaa
hlt
inc
dec
cmp
fucomp
aam
lcall
sub
sub
iret
xor
fstpl
adc
inc
xor
jmp
loope
sbb
mov
lods
add
je
push
jl
dec
ss
mov
inc
cwtl
arpl
xchg
aaa
ds
cltd
lahf
add
imul
popf
mov
lods
pop
aas
mov
data16
aad
xor
xchg
cltd
xchg
shll
std
es
sub
mov
push
enter
iret
push
movsb
stos
out
faddp
js
call
or
into
fwait
arpl
adc
sbb
ss
int
jg
fists
xchg
cs
addr16
das
jnp
dec
js
push
pop
daa
rcrb
push
test
shlb
mov
gs
xor
aam
jb
push
and
push
fisubrl
fucomp
scas
icebp
or
add
and
scas
call
lods
leave
insb
adcl
mov
inc
stc
repnz
imul
dec
popf
mov
out
lret
xchg
add
les
pop
xchg
push
or
outsb
dec
nop
and
sub
jmp
sbb
sbb
jge
dec
clc
mulb
jge
cmpsb
pushf
cltd
push
mov
in
cmpsw
and
loop
mov
fldz
mov
sbb
jo
mov
pop
xchg
mov
lret
inc
in
xchg
adc
imul
jo
jl
jno
es
xchg
cwtl
test
clc
and
mov
aam
repz
rolb
scas
ret
inc
mov
je
mov
lret
call
add
dec
pop
shll
push
inc
jns
jb,pt
clc
or
adc
lahf
sub
in
push
add
roll
xor
push
sub
js
add
xor
jp
push
pop
inc
push
xor
push
mov
scas
push
leave
test
pusha
jl
add
jecxz
int
pushf
ja
insb
ret
stos
mov
add
lahf
cmp
lcall
inc
stos
stc
test
pop
int3
cwtl
jo
cmp
jmp
popa
xchg
fistps
cmc
out
pop
shlb
jecxz
mov
daa
cwtd
aas
mov
cld
iret
insl
mov
call
dec
andb
testb
inc
out
or
sub
bound
rcrl
inc
je
inc
mov
add
fwait
xor
or
inc
mov
lods
outsb
scas
insb
mov
xchg
mov
iret
in
sbbb
xchg
and
push
movsl
pop
lret
insl
fcomi
cltd
or
cmp
push
and
les
push
enter
sarb
outsl
push
sbbb
mov
pop
pop
aaa
loop
sbb
enter
fs
adc
repz
xchg
insl
xorb
lock
xchg
cmpsl
mov
sbb
clc
jl
pop
ss
es
xor
mov
add
mov
fs
sub
jmp
inc
and
and
pop
in
in
iret
xchg
push
sbb
mov
std
mov
std
pop
fldl
xchg
add
in
cmp
xchg
dec
loopne
lahf
imul
es
push
popf
mov
hlt
or
std
ds
insb
lcall
jecxz
into
ret
into
sbb
or
or
loop
loope
fists
fistps
pop
mov
jp
push
stos
adc
or
int3
adc
stos
dec
les
imul
jno
andl
xchg
daa
sahf
lahf
sarb
mov
into
lret
mov
loope
and
cmp
jns
inc
mov
icebp
jo
lahf
in
in
movl
push
add
mov
addl
pop
shll
xor
ss
cmp
sub
cmp
pop
push
movsl
add
aaa
rcrl
lahf
inc
jae
lea
xor
xchg
xchg
sub
add
add
dec
xchg
cli
shlb
ja
test
insl
iret
xchg
mov
mov
ljmp
mov
je
mov
mov
arpl
adcl
cmp
and
fs
popa
inc
cmp
dec
push
jbe
cltd
aad
cltd
cltd
inc
push
sub
call
popa
dec
xchg
dec
push
adc
test
mov
and
popl
push
mov
and
dec
es
leave
shrb
ret
andb
jmp
xor
sbb
fiadds
ss
mov
lret
mov
mov
pushl
or
lods
adc
lret
and
int3
add
mov
fucomi
xchg
jnp
call
cmp
arpl
aad
lret
xlat
shll
xor
jmp
fsubrs
bound
jle
adc
inc
dec
nopl
test
lods
or
xchg
divl
cmpl
mov
mov
popf
jne
test
mov
in
fs
push
or
mov
ret
sub
xchg
and
cmp
dec
test
in
repnz
sbb
sbb
imul
mov
dec
call
outsl
mov
out
xchg
or
out
mov
or
dec
dec
mov
aas
push
mov
mov
popf
movsb
add
cmpsl
jnp
sar
jne
je
cmpb
mov
xor
loopew
push
mov
mov
cmp
cltd
rol
nop
mov
inc
lahf
mov
call
stos
cmpsl
cltd
loope
arpl
enter
movsb
cmp
push
xchg
xor
cmp
cld
and
xor
mov
add
or
mov
mov
aam
and
inc
mov
or
pop
xchg
cmp
add
push
hlt
pop
jl
mov
push
movsl
lcall
sub
xchg
push
bound
sub
inc
add
lcall
sub
rolb
inc
test
lods
mov
cmp
call
ss
and
or
mov
outsl
adc
jo
and
xor
push
jne
cli
jmp
lret
pop
clc
out
adc
inc
sub
mov
pop
mov
scas
xor
xor
cmc
dec
cmpsl
add
jg
lcall
mov
pop
das
pop
dec
daa
test
aam
push
nop
push
sbb
push
or
jns
cmpb
xchg
and
mov
aad
insl
sbb
test
jo
std
jl
ret
push
aas
sahf
xchg
lods
mov
rcl
add
adc
std
pop
jns
jg
aad
or
pop
rorb
dec
loope
cs
inc
movsb
jns
sub
inc
in
adc
ficompl
into
jmp
sub
xor
xchg
mov
xor
or
dec
adcl
rcr
mov
mov
add
jbe
xor
lea
lret
popf
cmp
jge
jne
push
lret
repz
cli
inc
mov
icebp
and
imul
mov
cli
cli
jmp
js
rcr
je
adc
sbb
adcb
or
dec
pop
loope
mov
mov
inc
inc
dec
push
xchg
pop
mov
mov
mov
jecxz
sbb
popfw
das
jo
add
pop
inc
inc
clc
pop
xchg
popa
inc
push
movsb
fcomps
enter
jae
jbe
or
loopne
std
imul
adc
xorl
pop
daa
jg
loop
call
cmp
pop
pop
lods
scas
mov
inc
cmpsb
not
mov
into
jae
pop
inc
cwtl
sti
cmpsl
dec
pop
int3
xchg
pushf
call
sar
pop
xchg
scas
insl
sti
mov
les
jo
fwait
or
iret
pop
imul
out
adc
cmp
add
sub
mov
aad
cld
dec
rorb
outsl
sbb
mov
mov
iret
in
pushl
out
and
adc
sbbl
nop
inc
push
sbb
pusha
inc
mov
dec
fsubrl
adc
lds
or
testb
mov
in
icebp
push
add
mov
test
jp
lret
push
insl
ret
aad
and
xchg
test
pop
pop
ret
push
mov
pop
aas
push
or
pusha
jmp
stc
test
iret
repz
mov
push
lea
faddl
pushf
xchg
into
cmc
push
ret
xor
cmp
mov
stc
adc
pop
pop
inc
stc
and
mov
rorb
movsb
dec
gs
cmp
nop
clc
movsb
mov
idiv
sbb
out
inc
scas
mov
inc
mov
mov
sub
and
mov
nop
mov
aaa
mov
daa
mov
inc
pusha
mov
jnp
jmp
lods
fnstsw
daa
int3
mov
sbb
sub
inc
popf
into
add
dec
push
xor
or
and
jne
dec
stos
mov
ss
aaa
xchg
dec
mov
popf
addr16
repz
sub
and
add
cmp
mov
cli
lahf
je
in
les
push
cmp
in
fidivrl
filds
push
mov
xchg
subl
insb
imul
stos
not
fldenv
xchg
arpl
jle
pop
and
das
outsb
dec
int
jo
dec
xchg
jmp
stc
sub
lods
rcll
push
adc
sbb
and
mov
dec
ja
mov
sbb
movsl
add
cmp
nop
mov
mov
lock
xor
test
push
aas
push
push
cwtl
add
fidivrs
sub
repz
inc
jmp
or
mov
in
sbb
xchg
jp
pop
std
and
pop
test
aam
into
inc
popa
jle
jmp
inc
ja
xchg
lret
sub
fildl
enter
cld
fs
push
mov
xor
inc
xlat
jns
inc
xor
test
sti
aad
adc
or
fwait
push
inc
xchg
pop
jmp
insb
int
push
cmp
jne
test
jg
mov
or
cmpsb
push
inc
push
fisubrl
or
lods
sbb
cltd
cmpsl
sahf
jns
mov
inc
xor
stos
jle
andl
aas
cmp
push
cwtl
add
jmp
jge
movl
xchg
jae
sub
insl
cmp
xchg
add
js
rolb
iret
xor
sub
cmp
outsl
mov
icebp
jge
notl
out
sbb
pop
addr16
subl
rorb
mov
fiaddl
push
and
int
xlat
mov
mov
stc
ja
or
popa
jl
lods
adc
std
test
out
inc
faddl
adc
xchg
or
in
jo
gs
sarl
lods
lahf
das
sub
loope
sub
fstps
repz
mov
cli
and
enter
inc
loop
add
gs
mov
arpl
push
pop
out
out
push
dec
xlat
inc
hlt
fbstp
in
fidivl
out
daa
pop
jge
sub
add
pop
inc
jmp
and
push
and
pop
lahf
dec
cwtl
push
jmp
outsl
mov
aad
lea
out
cmp
pop
enter
clc
fisttpl
add
cltd
insb
daa
jns
repz
das
sti
push
insl
lret
adc
mov
push
inc
add
adc
sar
inc
add
fistpl
mov
xchg
int
push
xchg
stos
aam
out
mov
aam
xlat
addr16
push
mov
add
hlt
dec
in
mov
cmp
loopne
sub
mov
cmpsl
mov
stc
shll
pop
sub
fisubrs
ret
int3
mov
insl
in
sbbb
jae
in
fwait
mov
test
notl
push
popf
cmp
loope
xor
hlt
adc
out
ljmp
jmp
mov
std
testb
mov
mov
pop
mulb
sbb
fcmovb
mov
pop
stos
icebp
xlat
or
push
fwait
repnz
pop
hlt
adc
bound
loop
sub
jae
nop
scas
sub
outsl
or
and
test
lret
push
xor
dec
inc
addl
aas
sbb
cmp
push
sub
out
mov
xchg
rclb
xlat
xabort
dec
push
and
inc
icebp
out
mov
add
cmp
inc
test
rorl
packsswb
jae
mov
mov
cmpsl
das
jmp
sub
div
xor
popf
outsl
loopne
enter
mov
scas
sub
xor
testb
lds
push
mov
dec
push
mov
fisttps
stc
mov
mov
out
pop
pop
popf
sub
jle
dec
cmp
inc
push
cs
or
icebp
movsb
repnz
movq
xchg
push
xor
mov
mov
lods
ss
xor
fidivs
and
mov
inc
int3
imul
insl
outsb
jno
add
dec
mov
out
mov
rcrl
jecxz
out
out
daa
jnp
leave
lretw
in
ret
sti
dec
loopne
cli
jb
clc
inc
push
jno
popf
mov
mov
dec
sub
mov
inc
cmp
daa
add
add
mov
repnz
lods
hlt
mov
in
sub
into
or
daa
das
or
pop
sarl
cmp
je
sub
mov
push
pop
cltd
push
mov
loopne
mov
jle
lea
push
jns
jne
movl
mov
in
jo
mov
xchg
mov
scas
mov
jo
int
out
xor
jmp
cmp
popa
les
xor
clc
jmp
insl
push
mov
sbb
add
loop
fcomps
push
and
push
fcomip
push
xchg
repz
cmp
lods
iret
addb
or
adc
or
pusha
in
or
popa
lds
test
mov
mov
xchg
fld
loopne
es
inc
mov
icebp
xchg
popf
popf
and
loop
mov
pop
out
jbe
adc
fwait
and
mov
popf
ja
jb
mov
ret
xor
xor
sbb
roll
pop
imul
movsb
jnp
rol
push
test
jne
bound
adc
inc
adc
jbe
mov
dec
push
punpckhbw
xchg
aad
and
dec
aaa
mov
clc
pop
xchg
movsb
or
sbb
insb
clc
insb
loope
leave
jge
gs
rcrl
cmp
inc
js
mov
dec
aad
ficomps
push
dec
or
mov
out
pop
arpl
sbb
inc
repz
jle
push
cltd
in
pop
dec
leave
repz
sub
mov
data16
jge
mov
in
inc
scas
out
push
and
repz
inc
push
and
mov
fwait
lret
xchg
out
push
aad
cmp
dec
add
sahf
mov
or
ror
lods
ja
mov
dec
inc
cmp
mov
orl
shrb
add
add
lds
xorb
stos
inc
mov
test
push
jno
push
jbe
ret
cltd
pop
mov
pavgw
iret
pop
mov
out
jae
int
ret
xchg
mov
pop
cmpsb
test
mov
mov
icebp
and
xor
push
ja
mov
push
pop
adc
jne
sub
imul
cmp
fcoml
leave
dec
rorl
push
inc
sbb
pushf
sbb
lds
jne
jle
movsl
or
mov
sub
mov
mov
mov
dec
fldt
jno
add
push
push
arpl
sti
stos
dec
or
or
pop
mov
push
int
call
push
xor
stos
mov
push
mul
push
mov
adc
or
add
pop
adc
pop
imul
aad
or
xor
pop
lret
loopne
jno
cmp
push
loop
jl
enter
mov
xor
call
lods
mov
mov
pop
test
jb
and
je
in
pop
popf
push
test
push
lds
pminub
insb
cmp
jmp
or
pop
xchg
or
pop
ss
push
ds
adc
mov
sahf
mov
pop
flds
lret
cmp
pop
mov
ss
in
xchg
inc
xabort
mov
mov
lret
movsb
sahf
ljmp
xchg
les
adc
ljmp
mov
pop
ficoms
gs
movl
cltd
push
xchg
sbb
data16
mov
es
inc
add
lods
sahf
push
enter
or
mov
jp
or
or
arpl
fdivrs
mov
shlb
mov
ljmp
cmp
fldt
mov
jo
add
popa
pop
loopne
dec
pop
xchg
jae
or
inc
shrl
sbbb
adc
or
sbb
fdivl
jp
aas
movsb
popl
jp
xchg
sbb
pusha
push
mov
cmp
call
insl
repz
rcll
adc
cmp
out
xchg
sub
shll
das
and
rcll
std
jbe
or
outsl
pushf
jmp
and
xor
aam
inc
stc
shll
lahf
mov
std
mov
lds
stos
add
push
cmpsl
cmpsb
mov
ljmp
cmp
cmpsl
imul
clc
add
fbld
lods
stos
outsb
and
xchg
fstpt
mov
dec
xchg
sbb
cli
out
or
sbb
mov
pushf
test
and
faddl
inc
adc
jns
mov
pop
fwait
jmp
jae
lret
xor
insw
dec
test
cmp
and
inc
and
insl
movb
stos
filds
aaa
mov
mov
xchg
loop
jmp
xor
push
lock
and
lret
add
les
xor
xor
push
jp
lcall
mov
cmp
sub
xor
xorb
xchg
mov
cld
add
sub
negl
pushf
fldt
das
lods
dec
and
imul
pusha
jmp
clc
dec
pusha
test
push
mov
std
in
shl
cmc
jbe
cli
sub
psubq
cltd
call
ret
and
arpl
shr
sbb
stos
lcall
mov
push
pushf
fwait
add
fcompl
jb
and
int3
mov
movl
push
push
push
push
mov
pop
jnp
push
pop
movsb
ret
push
xchg
push
in
lods
mov
mov
outsl
fidivl
fstl
push
lahf
add
xlat
sub
push
mov
addb
mov
pusha
hlt
js
push
fsubp
dec
addr16
xchg
jge
sti
mov
sahf
sub
push
mov
push
push
xor
mov
sbb
std
movsl
outsl
lods
add
push
mov
stos
hlt
cmpsl
iret
into
and
mov
xor
loop
cmp
jne
adc
push
mov
dec
and
out
sbbl
sbb
insb
add
push
mov
xor
mov
aaa
pop
mov
cmp
sbb
pop
out
daa
outsb
in
loop
sub
cmp
ja
push
cli
hlt
scas
dec
add
dec
inc
sbb
or
loope
jmp
lret
push
pop
clc
cmp
sarl
cmp
dec
or
sbb
jge
sbb
adc
cmp
pop
rol
and
inc
lcall
popa
inc
aas
dec
jge
ljmp
vmread
push
mov
testb
adc
lds
xchg
xchg
inc
xor
insl
push
int
data16
xchg
in
lods
add
xor
out
mov
add
out
sahf
push
and
jg
xor
sub
test
stos
sub
push
or
push
aam
packuswb
loopne
cld
inc
xchg
adc
jecxz
movsl
lds
shll
je
dec
xchg
mov
mov
push
ss
fs
imul
dec
in
sbb
push
ja
adc
dec
mov
cltd
ret
mov
add
lret
shl
adc
insb
xor
pusha
mov
sbbb
sbb
jg
mov
and
inc
rcrb
or
test
ror
add
mov
xchg
int
fxch
loop
jp
outsl
mov
jae
and
adc
jnp
push
jnp
mov
les
cwtl
xchg
out
fildl
and
xchg
fisttpll
sbb
cmpsb
mov
in
mov
ja
jbe
inc
lds
inc
in
dec
jb
fs
mov
clc
cmp
mov
rorb
push
sub
fists
leave
or
push
sbb
or
mov
inc
sub
push
out
cwtl
pop
fbstp
aas
push
cmc
in
lods
scas
movl
adc
les
jl
lahf
or
pop
xchg
ret
sbb
cmpsb
xchg
xor
mov
xchg
and
xor
push
mov
sbb
jb
addr16
inc
lock
xor
pushf
add
jl
mov
dec
inc
out
lret
sbb
adc
sbb
adc
sbb
addr16
push
mov
jo
faddl
sub
rorb
mov
lea
fcomps
ret
mov
jl
fdivr
pop
call
repnz
xor
outsl
pop
sbb
orl
scas
mov
mul
ja
in
push
bound
test
lds
daa
lret
out
inc
popf
mov
mov
sbb
stc
inc
sti
adc
push
mov
sbb
cmp
shll
lock
in
adc
imul
jecxz
repnz
lcall
push
popa
xchg
adc
cld
mov
xchg
jb
jnp
xor
pop
jmp
into
pop
xchg
lahf
mov
lret
out
pop
fcoml
mov
insb
cmc
or
sbb
scas
dec
les
sub
pop
dec
sbb
mov
cs
jmp
bound
jge
pop
push
mov
dec
xor
addr16
mov
push
push
mov
push
pop
lahf
call
jne,pt
pop
rol
jns
clc
pop
into
icebp
or
dec
inc
cld
lock
xchg
adc
cmp
and
jl
stos
sbb
mov
sbb
loope
mov
sub
mov
adc
cmpsb
out
inc
jae
pop
pop
fisubs
ljmp
sub
in
aaa
sub
mov
mov
jle
mov
pop
aam
push
clc
xor
jecxz,pn
lret
aad
rorl
dec
push
inc
push
daa
int
inc
adc
out
std
mov
enter
mov
jne
or
xlat
test
pop
test
dec
loop
jle
roll
imul
jle
fwait
bound
and
adc
rcll
cmp
fistpll
scas
ror
mov
decb
xor
arpl
dec
clc
cmp
in
inc
jno
scas
inc
push
inc
add
fiaddl
push
cmp
and
or
hlt
add
pushf
pop
push
clc
mov
mov
pop
pop
lahf
ret
in
xor
xchg
and
jmp
jecxz
scas
aam
pop
lea
sbb
rorb
push
xchg
sub
mov
xchg
ficoml
or
inc
mov
js
push
aam
stos
fildl
paddsb
out
inc
pop
pop
dec
cmpsl
insl
xor
and
and
dec
loope
jo
xchg
je,pt
inc
movsb
imul
sbb
mov
fistpll
mov
aaa
loopne
jnp
lret
lods
mov
aaa
dec
fsub
mov
xchg
push
ret
in
je
scas
mov
out
lock
sub
fisubs
fdivl
mov
jmp
mov
mov
outsl
sbb
dec
add
xor
pop
popa
cwtl
cmpb
add
daa
mov
clc
sub
or
add
rcr
or
scas
sti
inc
adc
and
mov
inc
leave
ror
lahf
movsb
inc
fisttpll
idivb
or
js
aas
jno
imulb
pop
add
loope
mov
scas
xor
add
jecxz
mov
sub
fisubrl
mov
jp
xor
mov
xchg
lds
cld
sbb
dec
push
test
xor
movsb
xor
add
inc
ret
mov
pop
rcl
cwtl
push
pop
xor
mov
dec
pushw
push
lods
pop
aam
adc
mov
mov
cld
jmp
push
jl
pop
rolb
or
fisttps
mov
lds
mov
mov
cmc
lahf
cmpsl
xlat
pusha
cmpsl
aad
pop
pop
call
jge
pop
into
mov
sub
call
int
adc
xchg
aaa
or
sti
test
sub
jns
add
or
dec
movsb
idivb
lods
push
test
lds
sub
pop
cmpsl
out
fimull
sarl
inc
dec
stos
sub
fdivs
mov
popf
push
nop
mov
push
ret
cwtl
mov
lahf
hlt
movsl
xchg
mov
jl
pop
test
jo
shlb
xchg
cmp
sub
popa
adc
cmc
lret
mov
sti
not
jge
or
mov
fwait
sti
cmp
cs
sarl
lea
jge
jns
sub
dec
es
cmpsl
in
pop
arpl
enter
or
mov
or
xchg
jge
ss
mov
sbb
movsl
push
cmpsb
push
and
sahf
mov
bound
movsb
dec
add
xor
lcall
lret
test
lods
aad
pop
jp
nop
or
and
enter
scas
sub
pop
jmp
shl
and
sbb
mov
dec
lret
into
outsb
adc
adc
mov
test
addb
sbbb
cmp
cmc
dec
and
mov
lret
mov
cmp
jmp
les
lret
insl
dec
fsts
xchg
pushf
jmp
in
daa
cmc
xchg
pop
sub
decb
jb
bnd
mov
rcl
in
xor
xchg
fmul
icebp
jge
push
and
mov
push
stos
pop
xchg
outsb
out
mov
fisubl
daa
in
push
mov
out
pop
in
outsl
xchg
jo
xor
mov
mov
xor
cmp
add
mov
bound
ret
cmovs
test
and
lret
mov
jp
sti
roll
or
cmc
addr16
xor
adc
and
rcrl
add
jno
push
xchg
jle
inc
test
jle
mov
in
fdivl
jb
xor
ds
stc
push
sub
pop
mov
and
pop
sti
nop
shrl
divl
mov
xor
leave
out
fcomi
shr
mov
push
dec
pop
sub
in
jo
mov
testl
sti
mov
push
adc
cwtl
cmpsl
sarb
pop
rorl
cmc
mov
mov
or
sub
add
test
mov
xor
mov
movsb
das
idivb
fldt
mov
sub
cltd
lods
mov
mov
in
dec
jecxz
dec
insb
jbe
lret
fwait
daa
roll
xor
adc
push
loopne
dec
fdivs
mov
leave
inc
inc
jle
and
mov
or
mov
pop
out
jmp
das
dec
cmpsb
divl
in
movl
sbb
repz
hlt
or
xchg
insl
arpl
and
cwtl
pushf
sbb
mov
cmp
cmp
xor
jnp
dec
clc
negb
popf
daa
and
sbb
dec
orl
jns
sub
cltd
pop
dec
mov
dec
jo
addr16
adc
jmp
push
or
jns
pop
aas
mov
add
add
mov
les
je
outsl
push
jg
xlat
out
and
mov
orl
xchg
mov
sbb
pop
mov
sub
push
movsb
dec
int
movsb
pop
stc
pop
dec
pop
rcl
loope
ja
push
push
in
sbb
repnz
fsubrl
dec
cs
mov
in
push
jg
dec
mov
lahf
or
lods
and
jecxz
out
add
imul
adc
adc
pop
int
adc
imul
pop
or
dec
jp
leave
push
dec
into
into
add
clc
shufps
dec
mov
cmpsl
ds
push
shll
out
roll
scas
mov
mov
test
jge
fwait
add
aad
int3
xchg
or
ja
sbbb
push
sbb
cmp
lret
xchg
xor
dec
popa
sbb
cmp
inc
mov
cmp
gs
pop
bound
adc
and
les
stc
xor
int3
call
jl
cmp
mov
ret
mov
dec
and
jae
dec
sub
or
sti
shlb
fists
jne
hlt
fsub
dec
and
push
cmc
xlat
and
sbb
cmp
fmull
inc
mov
mov
inc
stos
les
lods
movsl
push
push
nop
out
sbb
mov
cld
dec
popf
dec
push
sub
scas
adc
inc
in
xchg
push
jmp
and
lock
sbb
testl
mov
lods
inc
pop
test
int3
cmpsb
mov
or
lret
mov
mov
ss
mov
call
mov
sarb
push
outsb
das
icebp
mov
mov
or
inc
jno
dec
push
xchg
clc
fwait
inc
das
mov
adc
mov
rcl
enter
clc
out
push
pop
imul
sbb
xchg
add
arpl
cli
xor
mov
test
rorb
jnp
adc
hlt
push
sub
pop
lahf
stos
mov
jb
lods
dec
fs
add
dec
xchg
and
mov
leave
loop
mov
sub
adcb
add
pop
pop
loop
push
rep
inc
cltd
cli
mov
mov
or
cmp
js,pt
dec
cmp
ss
daa
cld
jae
lret
popw
cld
test
add
inc
rclb
xchg
rclb
mov
or
mov
pop
imull
cmp
mov
ds
sbb
push
movsb
lods
cmp
and
in
or
xor
daa
jne
iret
in
jns
je
int
jnp
movsl
push
ds
sti
mov
out
mov
add
std
mov
jne
push
popa
xchg
out
inc
fwait
or
std
fyl2x
push
movsl
sub
mov
xchg
mov
dec
mov
inc
mov
mov
arpl
subl
loope
fldt
fsubrl
sbb
pop
vmwrite
adc
es
out
jmp
and
pop
jle
jge
fisttps
adc
adc
add
pop
dec
inc
lea
adc
and
cmp
call
lahf
mov
jb
xchg
icebp
idivb
arpl
jge
dec
lock
xor
rcll
aaa
rolb
je
lcall
mov
push
jmp
jmp
cmpl
mov
mov
jb
repnz
enter
mov
std
out
mov
mov
inc
jl
inc
daa
fdivp
jg
and
xor
pusha
xor
mov
push
mov
cmpsl
sub
pop
inc
cmpsb
xchg
lret
les
icebp
mov
pop
xor
arpl
fisttpll
adc
mov
and
jle
push
std
dec
cmp
push
push
sub
push
pop
push
repz
lcall
ret
fdivl
loopne
push
inc
mov
shrl
xlat
dec
push
aas
loop
inc
jl
jg
mov
jae
ss
mov
inc
jno
xchg
cmp
in
test
les
ret
mov
mov
lods
sbb
push
jbe
adc
arpl
loopne
mull
ss
push
addr16
push
jbe
jo
out
mov
les
cmpsb
idivb
ja
out
xor
data16
not
sub
or
loopne
mov
adc
mov
shll
scas
mov
sbb
cwtl
in
loopne
les
xchg
nop
jb
cmp
ror
push
popf
jno
jne
xor
jmp
in
pop
sahf
fcoms
popa
add
js
mov
inc
add
push
int
mov
sbb
jl
mov
jb
push
mov
ret
xchg
push
lods
mov
cli
pop
loop
cmp
and
ret
jmp
rol
jnp
out
jmp
and
sub
mov
inc
inc
shll
xlat
in
sub
cmp
jle
and
inc
xor
sbb
dec
fucompp
mov
cmc
xchg
scas
xchg
and
lahf
mov
mulb
ret
xor
pop
jecxz
imul
test
dec
xchg
push
jbe
out
sub
mov
outsl
out
ja
aas
push
and
or
mov
shll
and
shl
repnz
hlt
push
into
and
pop
lds
pop
aad
adc
jp
or
pop
insb
dec
and
jnp
jae
pop
les
inc
xor
test
jno
les
sbb
push
mov
cmp
js
movsb
repnz
lret
fwait
clc
push
add
arpl
xor
dec
pop
ja
add
add
ja
arpl
test
sub
stc
xor
add
xchg
js
push
std
sbbb
dec
add
jl
aaa
fwait
ret
outsb
daa
jo
fiaddl
adc
aad
into
inc
mov
jp
xchg
push
fs
push
pop
fwait
mov
test
ss
das
dec
pop
lea
movsl
dec
lods
test
gs
mov
enter
push
loopne
sbb
movsb
into
movsb
cmp
add
pop
call
mov
cmp
sub
out
add
sahf
cmp
int3
pop
push
int3
jbe
dec
test
mov
repz
cmp
or
js
jb
push
add
jne
push
mov
pop
enter
shr
push
outsb
pop
idivl
add
jno
jns
xchg
add
jbe
sbb
sub
xchg
les
sahf
mov
mov
pop
sarb
imul
adc
inc
mov
jb
les
sub
inc
push
fildl
jg
iret
add
cmpsb
inc
jg
std
and
jl
inc
sahf
mov
fsincos
push
imul
outsl
lcall
outsl
sbb
cmp
and
xor
jge
inc
shlb
jl
jge
mov
test
stos
loopne
out
mov
push
sub
sub
inc
mov
mov
add
stos
push
ja
lock
stos
xor
mov
adc
inc
pop
dec
inc
es
in
mov
jg
mov
inc
inc
pop
add
inc
pop
mov
fwait
loope
lods
xor
jmp
jmp
repnz
pop
rcll
movsb
xor
lret
push
or
push
push
repz
subb
stos
mov
xor
sub
sarb
push
mov
cli
xlat
pop
out
mov
lret
sub
xorb
in
sbb
test
xor
loope
jnp
xchg
dec
push
sbb
popa
jge
movsb
xor
jnp
cmc
icebp
mov
shlb
mov
jecxz
xor
leave
hlt
ret
adc
mov
test
lods
add
sbb
fs
pop
pushf
push
push
xchg
es
call
jne
mov
push
inc
push
mov
fdivs
nop
arpl
or
pop
sub
js
gs
jae
inc
push
add
sti
mov
xor
mov
jl
pushf
mov
sbb
dec
and
jg
pushf
cmp
jae
mov
mov
sbb
push
dec
lret
pop
ficompl
xor
dec
xchg
adc
mov
push
bound
inc
or
fwait
subb
dec
xchg
xor
or
dec
xor
lret
in
imul
mov
rorb
mov
mov
push
jno
push
cmpsb
das
cmpsl
stos
movsb
mov
sbb
jl
cmp
jno
shll
push
pop
push
arpl
jns
stos
mov
fisubs
adc
stc
pop
test
pop
xor
sub
ja
mov
and
cmp
aad
sbb
sbb
rcrl
addl
test
and
test
cltd
mov
inc
xor
pop
je
mov
loopne
out
mov
mov
imul
ds
mov
test
sbb
divb
shll
shlb
lret
or
mov
lret
cmp
jo
add
push
iret
mov
dec
cmp
movsb
push
orb
cmp
jnp
adc
leave
clc
dec
outsl
xor
xor
push
inc
inc
stos
loop
ss
pop
fadd
scas
insb
mov
add
in
lahf
shrb
es
push
jl
jge
sub
ret
xor
adc
repnz
out
out
and
shlb
inc
mov
pop
cltd
ljmp
mov
clc
push
cld
cmpsb
inc
test
jp
jnp
mov
mov
loopne
mov
and
sbb
push
dec
push
dec
jmp
and
sub
jmp
repnz
mov
mov
pop
push
inc
jo
int3
stos
mov
pop
shl
andl
movl
mov
lret
cwtl
mov
cmpsb
jp
fwait
dec
pop
push
inc
lock
inc
xor
orl
push
data16
sub
mov
xadd
push
nop
lahf
repz
push
xlat
push
shlb
leave
jp
xor
push
sbb
add
sbb
lahf
aam
ljmp
dec
push
shrb
clc
movb
and
ja
ljmp
arpl
ss
and
cs
bound
lret
aas
mov
pop
mov
dec
loopne
cmp
clc
sub
outsb
xor
mov
jbe
push
mov
int3
js
sub
and
xlat
and
mov
shll
shlb
sbb
xor
into
rcll
stc
mov
add
cmp
or
mov
mov
sub
mov
mov
jge
push
adc
xchg
dec
add
filds
aaa
adc
xorl
xchg
in
adc
xchg
pusha
jle
lock
xchg
inc
push
mov
mov
push
mov
js
xchg
push
out
inc
repz
sub
sahf
incb
clc
push
icebp
ret
cmp
popa
pushf
mov
loop
xor
fnsave
arpl
hlt
add
push
pop
sub
and
mov
movsb
test
sub
push
fdivs
aaa
sbbb
mov
fcomps
sbb
dec
jecxz
insl
out
loop
mov
out
dec
sar
aam
sti
test
mov
xchg
cmp
sarb
adc
fsincos
pop
add
add
out
mov
aaa
and
fmul
jo
aad
repnz
jno
mov
hlt
fwait
orl
ja
cmp
xlat
add
xor
lahf
adc
sti
scas
xor
insb
pop
cmc
frstor
cmc
lcall
lods
pop
mov
addr16
xor
ja
dec
sub
and
or
insl
and
pop
pop
cmp
cs
jno
jnp
and
daa
test
cmp
inc
insl
bound
jecxz
lret
push
xchg
movsl
movsb
push
ret
lock
jb
jne
inc
movl
jmp
push
push
cwtl
fistpll
or
sbb
in
sbb
int
cmp
add
aaa
xor
les
mov
mov
jge
fsubs
xchg
dec
in
mov
inc
outsb
or
aad
mov
scas
mov
jp
and
aam
cmp
in
rcrb
inc
inc
or
push
inc
outsb
jno
adc
add
cmp
aad
mov
adc
int
pop
pop
push
or
jne
sti
jp
fsubrp
ljmp
out
sub
xor
adc
adc
and
icebp
xchg
cmp
inc
jns
lds
lcall
movsb
sbbb
imul
clc
jge
cltd
icebp
aaa
pop
push
cmpb
stos
js
push
div
mov
mov
shr
lret
fwait
gs
mov
clc
imul
out
pop
pop
cld
dec
int3
xor
js
cmpsl
ja
test
push
mov
int
aam
pusha
fnstcw
and
or
scas
popa
cmp
mov
push
jae
jbe
rdpmc
data16
sbb
pop
fisttpll
jo
pop
mov
pop
popl
jnp
out
xchg
outsl
lds
repnz
sbb
or
cmp
into
pop
dec
mov
cld
fbstp
pop
je
insl
xchg
scas
add
in
sub
int3
fsubrl
test
fistps
scas
shlb
test
sbb
repz
fucomi
out
in
push
les
xchg
dec
pop
cmp
inc
pop
leave
scas
jae
imul
inc
mulb
pop
mov
push
mov
call
push
std
inc
mov
inc
add
and
cld
jl
push
les
dec
jge
int
test
enter
cld
pop
nop
ja
scas
cmpsl
push
adc
mov
xor
and
sbb
and
cwtl
cmp
test
lods
out
inc
mov
fwait
pop
popf
or
inc
fwait
out
fcom
adc
clc
out
or
lock
insb
out
pop
and
push
dec
ss
jmp
xchg
pop
add
fcmovnu
inc
repnz
cmp
in
mov
dec
mov
add
mov
adc
es
rolb
jae
testl
imul
jb
xchg
pop
sbb
xchg
push
movsb
xor
lods
scas
movsl
cwtl
ja
lret
icebp
or
and
popa
xor
add
and
push
movsb
jbe,pn
imul
in
data16
and
push
movsl
push
cs
or
dec
xchg
and
add
nop
lahf
popf
lock
mov
inc
cmpb
xchg
popf
mov
cmpl
dec
and
add
stos
mov
mov
sahf
adc
outsl
inc
notl
jne
shlb
xor
addr16
out
gs
jp
adc
sbb
jo
lock
push
and
bound
jae
insb
or
sbb
fs
fnstsw
popf
mov
adc
in
sbb
pop
push
dec
sti
and
clc
xchg
cltd
adc
pusha
fwait
adc
pop
xchg
ja
sbb
push
mov
loop
jns
add
fisubrl
cli
xchg
bnd
popf
push
and
aad
push
lods
and
add
mov
push
movsb
push
mov
rcrl
addr16
pop
jae
jne
cs
or
xchg
pop
ss
lods
push
and
test
push
pavgw
arpl
dec
dec
std
jle
cli
insb
sub
or
mov
xchg
aas
xor
pop
lods
aam
in
push
pop
stos
inc
fdivrl
mov
fiaddl
xchg
gs
dec
fcoml
pop
jno
loop
push
push
lret
inc
insl
sbbb
sub
dec
pop
je
loope
scas
sti
dec
jp
mov
popw
lods
pop
int
pusha
push
mov
sahf
lret
xchg
dec
push
xor
test
fistps
jne
fists
inc
cmp
cmp
jb
xchg
mov
insl
mov
mov
int
loopne
les
add
add
jp
mov
adc
cmp
stc
or
mov
and
mov
das
pop
es
ss
push
add
verr
or
sub
xchg
add
decl
orl
movsl
leave
shll
and
xchg
cltd
mov
aam
sbb
lods
cwtl
ret
cmp
mov
jmp
pop
and
into
imul
test
mov
sbb
mov
rclb
jb
ss
adc
adc
mov
jmp
add
filds
sahf
sub
popa
xchg
imul
fcomps
int3
add
adc
hlt
inc
call
lds
and
and
jmp
cmc
xor
mov
ds
loope
xchg
fstl
in
add
mov
aad
push
cmp
push
outsl
ja
push
xchg
inc
xor
insl
sti
xor
or
into
shr
jno
pop
sbb
fsub
pushl
lcall
jge
mov
movsl
stos
adc
repnz
scas
fdiv
ret
mov
dec
je
icebp
cltd
dec
outsb
inc
sub
ja
dec
mov
lret
xchg
icebp
fs
xorb
pop
fdivl
test
pop
stc
lahf
pop
adc
add
pusha
out
mov
xchg
xlat
jmp
adc
sub
pop
call
adc
cmpsb
imul
xchg
loope
imul
andb
mov
sbb
mov
or
testb
or
mov
push
jns
insb
and
insl
jmp
mov
repnz
jae
sub
inc
fstl
xchg
pop
out
xor
call
jp
mov
dec
xor
xor
or
lret
and
xor
stos
or
push
ret
testl
push
lds
cmp
negb
pop
mov
add
add
jle
dec
jne
push
outsl
add
ljmp
mov
addl
repnz
xlat
adc
pop
sub
and
jl
xchg
movsb
add
std
fucomp
mov
sti
xor
jge
in
mov
or
sti
or
addl
or
mov
fistpll
cmc
movsl
xchg
ret
fdiv
mov
stc
data16
insl
xchg
cmpsb
subl
mov
mov
or
pop
mov
cmp
cmpsl
mov
inc
sub
inc
shrb
xchg
mov
aaa
call
cmp
mov
push
outsb
mov
mov
sbb
fcoml
pop
imul
cmpsl
test
adc
imul
jns
call
loope
cld
fwait
sti
inc
int
cs
xor
bound
jecxz
imul
jns
pusha
cmp
cmp
scas
ljmp
das
push
jns
pop
adc
loop,pt
dec
add
and
add
loope
out
adc
add
cli
outsb
xchg
fisttps
fidivrl
les
jl
inc
push
sub
dec
cwtl
scas
cmp
dec
enter
push
mov
rolb
push
jnp
pop
mov
stos
add
int
sub
or
sub
scas
shll
out
xor
inc
jl
xchg
andb
lds
pop
aam
jae
aam
xor
xchg
sbb
xlat
bound
mov
mov
incl
lahf
pop
stc
cmpsl
xorb
sub
sbb
cwtl
inc
lods
jecxz
inc
dec
sbb
ljmp
push
or
inc
fcoml
shlb
or
pop
dec
inc
or
push
fisubrs
lds
or
fwait
div
pop
lods
ss
adc
cmc
popa
inc
testl
jge
sbb
test
xchg
dec
sub
inc
test
inc
pop
jbe
out
stc
and
mov
mov
xor
ds
pop
scas
mov
sarb
out
inc
sub
xlat
xchg
cmp
negl
or
cmc
sbb
or
fs
or
out
and
sahf
mov
xor
jne
mov
hlt
stos
mov
pop
mov
sbb
pushf
xchg
mov
or
icebp
andb
xchg
xor
test
icebp
ret
out
xchg
mov
out
js
fstps
test
jl
jns
pop
sbb
xchg
add
jns
test
push
inc
cs
pop
gs
sbb
loope
mov
fistl
mov
gs
call
neg
jne
sbb
lods
imul
push
inc
push
mov
xchg
cmc
lods
insb
loopne
xor
mov
inc
clc
test
pop
jns
stc
outsb
cltd
dec
negb
fnstcw
xor
aam
das
mul
xchg
jne
add
cmp
ss
imul
and
mov
jg
push
mov
jmp
clc
sbb
adc
jl
icebp
mov
jbe
je
pusha
stos
out
jmp
movsb
dec
xchg
mov
popf
das
loopne
pusha
push
or
dec
cld
sti
inc
jecxz
mov
push
aas
popa
stc
mov
jb
icebp
cs
fsubrs
jmp
pop
test
les
adc
jg
xchg
int
into
dec
bound
loopne
adc
fmull
shr
pop
cld
insb
clc
mov
repz
inc
push
dec
leave
mov
adc
jnp
jno
in
xchg
inc
pop
add
call
out
shrl
dec
rcrl
jo
jns
xchg
lcall
ret
xor
ljmp
addb
maskmovq
xlat
push
or
push
lcall
adc
jb
ja
jmp
push
es
dec
ret
jge
lea
cmpsl
xchg
mov
xor
pop
jl
cmp
xchg
fs
adc
and
mov
mov
dec
xor
push
sub
icebp
das
ss
mov
rep
or
add
jp
or
popa
out
inc
mov
push
mov
jl
sub
jns
pop
aas
mov
sbb
dec
or
jg
sbb
lcall
mov
dec
scas
das
test
dec
mov
sub
pop
push
adc
imul
and
jmp
ret
fsubr
sahf
or
hlt
addl
repz
mov
cmp
mov
in
dec
xor
mov
inc
mov
add
clc
xchg
cmp
xchg
aam
jp
inc
lahf
push
or
cmp
nopl
rorl
add
loopne
js
insb
sbb
and
jmp
mov
push
fsubrl
inc
ret
test
lods
dec
or
adc
es
cmc
cmp
mov
adc
xchg
pushf
daa
ja
mov
fisubrs
ret
jg
lcall
outsl
lock
in
dec
ljmp
aaa
arpl
add
fisubs
pop
outsb
mov
mov
jp
mov
mov
add
push
aam
jns,pt
shr
inc
mov
call
jb
jle
inc
jmp
scas
push
and
sbb
lock
dec
or
sbb
dec
sub
xor
shll
xorl
pop
xchg
sub
nop
add
repz
cld
popa
mov
jge
insl
add
hlt
ss
adc
je
sub
mov
popa
add
lret
in
fwait
sub
in
mov
push
cmc
sbb
pop
inc
insb
lods
ja
test
pop
popf
gs
aam
sti
mov
push
loope
mov
adc
ret
shrb
push
xchg
test
adc
pop
stc
arpl
cmp
scas
mov
mov
push
bound
inc
in
scas
aas
outsb
sbb
xchg
clc
dec
cmp
add
cld
ds
cmpsl
sbb
shll
cmc
mov
and
cwtl
push
insb
inc
mov
push
scas
push
xchg
arpl
and
ja
add
loope
mov
fistpll
roll
sar
or
jl
mov
dec
out
lods
ja
sbb
cmpsb
sti
jno
lcall
inc
icebp
mov
jns
leave
pop
cmp
pop
ror
ret
cltd
jmp
mulb
mov
mov
xchg
fisubl
push
sbb
and
fidivrl
iret
jp
ret
or
sub
sbb
loope
notb
lea
mov
jb
test
xchg
and
xchg
test
dec
adc
or
push
iret
pushf
data16
mov
sti
sti
lock
push
stos
icebp
push
outsl
inc
ja
cmpsb
push
cwtl
rclb
inc
adc
jae
imul
iret
jp
sbbb
lock
mov
ret
jg
or
or
jecxz
cmp
jg
popa
aad
imul
or
pop
scas
lods
cmc
scas
jnp
fdivl
sbb
rcll
out
std
in
mov
pop
mov
mov
or
stos
xchg
or
jp
jmp
ficoml
jl
test
push
sbb
test
iret
mov
jns
adc
jl
repz
adc
ret
scas
cli
ret
jb
and
pop
adc
jne
pushf
push
jne
in
fbld
and
adc
xchg
rol
pop
jno
loope
in
cmp
push
xchg
inc
jge
mov
inc
mov
mov
mull
lahf
lahf
pop
cmp
ja
imul
xchg
cmpsl
sbb
nop
push
mov
jmp
int
in
xchg
cmc
and
mov
add
adc
leave
dec
xchg
mov
pop
mov
mov
mov
mov
cmp
inc
sub
test
jle
mov
cmc
inc
sub
mov
pop
ror
enter
sbb
jae
jl
stos
cltd
dec
xchg
std
fildl
call
lcall
lret
jmp
popf
cwtl
call
add
and
lcall
jbe
nop
cltd
out
push
arpl
dec
rclb
insl
and
test
push
fistl
xchg
aas
ret
cmp
adc
stc
sub
cmc
jns
or
sarb
dec
gs
sar
jno
fwait
sub
push
push
scas
xor
sub
inc
jns
nop
xor
xchg
inc
stos
lock
lahf
out
jb
lahf
mov
in
inc
mov
leave
jp
sub
ds
adc
sub
ds
cmp
push
js
cld
xor
roll
scas
adc
lea
push
icebp
aam
es
aam
dec
pushf
pop
idivb
or
int3
loop
sub
mov
aam
adc
shr
xchg
out
cmpsb
mov
je
clc
jbe
ss
pop
test
cs
out
inc
lods
inc
or
adc
inc
aas
and
inc
icebp
movsb
pop
mov
out
xor
lcall
call
daa
and
cmp
rclb
scas
dec
push
mov
movsl
fwait
cld
movsl
sbb
mov
jmp
inc
movsb
sub
push
xor
push
xorps
jg
adc
mov
pop
adc
mov
xlat
xchg
cmpb
jae
and
pop
loopne
or
ret
dec
addr16
fwait
add
push
icebp
mov
scas
or
fisttpl
cs
cmp
xchg
into
pushf
mov
sbb
mov
addr16
leave
cmpsl
outsb
add
imul
daa
adc
sbb
fldt
adc
ljmp
add
sub
add
xor
sbb
ficomps
aam
mov
jg
cmc
xor
rdmsr
arpl
mov
subb
nop
inc
pop
movsl
sahf
jg
inc
lcall
pop
or
pop
adc
cmpsl
aaa
out
jp
imul
out
mov
jecxz
into
pop
and
cmp
xor
decb
dec
icebp
aaa
stos
sarb
aas
and
sbb
add
and
dec
cmp
mov
or
inc
inc
push
gs
or
sbb
add
scas
dec
sbb
sub
outsl
and
shlb
add
dec
lds
ljmp
mov
or
sar
lahf
arpl
cmp
enter
lods
mov
xchg
repz
cmpsb
push
jno
mov
push
inc
fidivrl
out
jmp
pop
out
stos
push
aad
mov
mov
jnp
xor
outsb
mov
dec
arpl
out
pop
jns
sahf
psubusb
loop
adc
dec
mov
mov
lret
and
lods
decl
sbb
jno
mov
lock
ret
sub
inc
sarl
fimuls
mov
or
sbb
xlat
imul
pop
daa
inc
or
jmp
test
or
lea
movsb
aam
insl
cwtl
and
or
sbb
lods
xor
fucom
xchg
sub
neg
push
scas
pop
stos
xor
ss
push
sub
fistpll
or
mov
int3
nop
cmc
cmp
leave
dec
test
fimuls
cmp
clc
into
les
xor
inc
jg
gs
loope
or
adc
jecxz
daa
xorb
sti
loopne
and
ret
insb
cld
insb
aam
shlb
mov
ja
mov
xchg
out
lds
push
xor
nop
ficomps
sbb
sub
mov
xor
add
xor
popa
jb
jbe
push
and
push
mov
rcrb
or
jl
fdivrp
aam
xorl
cli
mov
out
jle
in
cmp
sarl
into
cs
test
mov
fistpl
mov
and
pusha
cltd
and
icebp
leave
out
shrb
lods
nop
dec
imul
loopne
rcr
jmp
rcrl
out
fwait
cmpb
mov
xchg
mov
sbb
roll
xabort
gs
rolb
and
mov
cmp
mov
cmp
rcrl
addr16
jp
leave
ljmp
mov
enter
loopne
sbb
pop
cld
in
sbb
add
and
sbb
and
iret
cli
and
popa
sub
jbe
sub
push
aaa
push
in
or
jmp
cmp
gs
push
dec
pop
cmp
ss
stos
mov
data16
test
add
inc
movsb
inc
int3
inc
fistpll
adc
push
mov
xor
lret
ljmp
test
mov
shlb
shl
pop
test
xchg
push
stos
in
sub
pop
add
inc
adc
or
xor
das
jae
adc
in
fs
cmp
out
xchg
sbb
movsl
lods
call
in
stos
sub
and
in
sahf
xchg
inc
adc
xchg
and
pushf
cmp
push
sahf
cmpsb
cmpsl
in
bound
orb
shl
sub
or
in
fildl
insl
test
mov
ret
mov
add
or
pop
test
sbb
rolb
stos
jl
outsb
push
fists
mov
xor
imul
mov
xor
loope
add
push
jecxz
lret
xrelease
sahf
sbb
pusha
dec
aas
dec
add
xchg
mov
test
sub
pop
push
movsb
fimull
and
push
and
or
adc
inc
jl,pt
add
imul
cmp
imul
fdivr
repnz
or
mov
pop
js
es
cwtl
repnz
xor
loopne
adc
pusha
insl
cs
add
pop
cmp
enter
or
imul
jo
push
xchg
pop
or
mov
sub
jae
dec
sub
inc
loopne
and
adc
lret
test
inc
or
lea
je
lods
data16
dec
lea
xchg
mov
fcoml
push
inc
sub
xor
pushf
es
por
push
cmp
dec
cmp
pushf
mov
mov
js
dec
scas
push
xlat
sti
jge
bound
icebp
inc
call
je
js
and
push
fimuls
pop
sub
xlat
test
sub
push
roll
mov
pop
negl
pop
jl
mov
pop
and
ficoms
loope
cmovno
aaa
xchg
arpl
push
mov
and
out
test
pop
sahf
aas
addb
loope
jb
loope
mov
and
scas
mov
gs
xor
adc
xchg
cli
sub
pop
pop
pop
mov
adc
push
mov
or
pop
in
std
inc
mov
pop
jae
xchg
pop
inc
mov
dec
mov
cmp
adc
sbb
dec
xor
sbb
fs
out
sbb
cmc
push
or
lods
or
xchg
push
data16
scas
mov
pop
rcrl
push
jo
dec
jo
arpl
negb
xchg
int3
mulb
sub
fcmovu
inc
inc
popa
fwait
outsb
rolb
cltd
adc
es
mov
cmp
roll
or
fadds
or
push
and
movsb
test
idivb
mov
or
push
xchg
cmp
push
fs
pop
or
std
sub
pop
mov
aaa
lret
push
and
pop
sub
or
cmpsl
lock
sti
imull
adc
xor
cmp
sbb
daa
mov
lea
inc
mov
pop
inc
push
out
xor
jno
popa
jnp
xchg
mov
xlat
pop
clc
test
out
fwait
inc
or
push
std
xchg
cmpsb
adcb
and
inc
pop
push
xor
and
mov
into
leave
lcall
add
jecxz
dec
lret
mov
js
inc
lea
and
loop
insb
aas
mov
imul
mov
ret
test
rorb
cmp
mov
stos
mov
ret
xchg
add
popa
mov
sahf
xor
and
aam
cmpsb
in
xlat
push
fisubs
lds
adc
test
sub
mov
push
stos
imul
mov
dec
bswap
jnp
loopne
test
and
in
jns
repz
rcrl
dec
jb
sub
aam
cld
sahf
pusha
rcl
pushf
add
dec
sub
and
cmp
jmp
mov
cld
stos
mov
imul
jge
sbbl
or
pop
pusha
mov
or
lea
and
fbld
in
mov
add
jno
scas
fcoms
call
inc
lcall
pop
stos
push
icebp
out
cmc
push
lods
rcll
stc
sbb
and
mov
mov
ss
loopne
jae
fadds
cmp
sbb
shl
jg
push
in
test
mov
jl
outsb
imul
or
xchg
mov
shrl
dec
add
call
mov
out
mov
xchg
pop
mov
in
push
mov
pop
cmp
push
mov
lret
mov
mov
adc
fistpl
xor
in
pop
xchg
bound
mov
dec
inc
push
xor
or
sahf
sub
adc
fdivrl
mov
imul
sub
ss
pop
cmp
test
jmp
ret
mov
adc
icebp
inc
rcl
push
sbbb
leave
les
sbb
mov
aam
shlb
or
repz
rclb
imul
jmp
sarl
add
push
sbb
imul
inc
mov
cwtl
push
adc
fildll
pop
call
pop
in
lret
and
dec
test
rcl
outsb
iret
fs
xor
mov
mov
cmp
lahf
xor
call
and
push
sbb
jge
inc
popf
outsl
adc
sub
iret
add
push
xchg
mov
jae
rcrb
jecxz
cmp
js
mov
mov
inc
and
jmp
mov
xor
aaa
or
sbb
mov
and
enter
push
inc
push
add
scas
call
sub
mov
jno
pop
in
roll
jl
mov
or
pop
aam
cmp
push
loope
jle
das
cmp
or
popf
or
pop
mov
sbb
paddb
sub
adc
call
jbe
adc
shlb
cmp
das
add
andb
add
std
out
xor
cmp
fs
sbb
insl
mov
or
out
mov
int3
adc
test
push
divb
lahf
cwtl
aam
ret
mov
sarl
xchg
and
jg
mov
test
sub
pusha
test
mov
sub
push
jecxz
aas
addl
or
fildl
jg
mov
add
loop
mov
cmc
pusha
and
int
inc
xchg
arpl
mov
mov
add
inc
push
test
ds
repz
mov
sub
xchg
roll
push
aam
and
fnstcw
sbb
sbb
push
scas
mov
adc
fwait
push
pushf
mov
movsl
xchg
fistpl
icebp
mov
dec
or
popf
jl
sti
lea
pop
mov
lock
pop
inc
dec
mov
lret
and
mov
or
out
and
stos
scas
or
jge
xor
arpl
mov
xchg
push
push
push
lret
pop
sar
ficomps
outsb
mov
jae
jnp
cmp
scas
jg
arpl
mov
loop
push
jmp
mov
xchg
ja
out
mov
nop
loop
adc
push
scas
cmp
repnz
mov
sub
sbb
addr16
je
add
imul
and
cs
icebp
sub
mull
scas
pop
inc
sub
clc
fildl
and
pop
dec
xor
daa
jne
xchg
mov
xchg
sub
popf
daa
mov
jge
dec
pop
loop
jp
sbb
shll
pushf
pop
movsb
mov
pop
add
cmp
and
call
add
mov
inc
cmc
scas
cmp
ss
test
pop
dec
cmp
in
dec
sarb
pushf
cltd
gs
sbb
movsl
sbb
aam
inc
lods
ds
add
data16
xchg
iret
cmpsb
loopne
and
dec
loope
mov
cmp
js
imul
xchg
jb
xor
lcall
decl
je
lea
xchg
insl
mov
flds
mov
push
adc
jmp
insl
fdiv
addl
dec
mov
cmp
test
push
xor
fistps
popa
stos
jbe
cmp
mov
fsts
and
jmp
lds
es
xchg
xchg
stos
orb
in
popa
add
jnp
xchg
stos
orl
jae
push
int3
punpckhbw
mov
pop
push
push
aad
sbb
adc
cmpsl
cmp
fisttpl
mov
call
mov
pop
pushf
inc
pop
dec
sbb
popf
mov
fcom
jle
jp
sub
cmp
cmp
cwtl
push
mov
lods
mov
push
repz
out
or
in
add
push
into
outsb
push
movsl
push
mov
mov
push
lods
clc
push
push
addr16
cmp
repz
pop
mov
sarb
xor
aas
test
pop
mov
fistps
xchg
sbbl
das
jp
out
mov
imul
mov
xchg
and
sti
sbb
out
shlb
mull
pop
stc
mov
ss
xchg
lods
mov
dec
jge
and
pop
ss
ds
arpl
push
mov
stos
addr16
mov
inc
and
fistpl
mov
or
and
ret
cs
mov
loopne
add
loope
push
lods
mov
mov
out
clc
mulb
sub
mov
icebp
int
pop
push
pop
inc
dec
ljmp
mov
push
mov
jecxz
insb
and
push
or
pop
pop
aas
loope
push
dec
movsb
sbb
jne
xor
inc
pop
sbb
int3
js
divb
das
pop
mov
pop
lahf
mov
outsl
push
inc
mov
pushf
arpl
movsl
movsb
cmp
icebp
fwait
add
cltd
dec
js
jmp
les
fs
popf
adc
mov
mov
test
jns
dec
add
xchg
push
xor
sarl
mov
push
and
loop
jmp
das
inc
addb
rorb
inc
pop
outsb
pop
pop
iret
sbb
sbb
mov
gs
jge
push
mov
jge
sbb
insl
icebp
and
loope
inc
sub
popf
scas
mov
stc
push
int
insl
push
lds
push
sahf
pop
pop
mov
xor
dec
adc
test
mov
xor
jecxz
outsb
les
mov
mov
xorl
jge
imul
movsb
ret
call
loop
inc
adc
call
shrl
mov
in
push
mov
je
mov
jp
enter
mov
fs
cwtl
mov
add
jle
sbb
mov
into
jge
jge
jbe
dec
mov
cmp
jo
sbb
shrl
push
mov
xor
jne
rcrl
pop
dec
lods
pop
es
xor
jge
fsubs
addr16
and
xor
lods
out
pop
fidivrl
dec
jecxz
mov
fdivrp
mov
je
pop
popf
and
leave
lea
and
shlb
sbbb
fdivrl
push
aaa
mov
push
pop
cmp
lea
notb
jmp
dec
push
out
xor
adc
shl
lahf
pop
movzwl
lods
jne
add
xor
idivb
jno
add
lret
sti
adc
dec
dec
shll
into
repz
jge
fnsave
loop
int3
pop
jae
fisttpll
out
mov
pop
mov
sbb
sub
lea
test
xor
inc
inc
adc
mov
pusha
cmp
inc
xor
sti
jge
xchg
popa
adc
push
sbb
sub
aaa
ja
loopne
mov
loope
pop
push
jmp
movsl
data16
inc
aaa
sbb
push
xchg
add
cmp
lock
or
cmp
dec
outsb
mov
pop
adc
sbb
in
fwait
test
aas
or
bound
rcrl
cmc
lds
imul
push
int3
fdivs
mov
jg
pop
daa
lret
push
mov
fldcw
sbb
push
push
fcoms
repz
cmp
dec
jg
into
movsl
fldt
adc
jmp
pop
imul
and
jle
stos
into
cmp
data16
scas
mov
sahf
xchg
insl
lcall
jecxz
push
in
sbb
dec
aam
imull
jmp
int3
outsl
daa
xor
push
shrl
pop
dec
mov
aaa
mov
jl
mov
ret
adc
push
pop
push
sahf
pop
sub
cmp
cli
rorb
dec
fidivl
sahf
or
mov
jnp
jge
int
flds
test
lea
jg
icebp
and
cmp
enter
push
push
pop
pop
sbb
lcall
mov
jb
mov
stos
data16
pop
sbb
jl
sahf
dec
jge
sbb
imul
xchg
outsb
push
imul
in
imul
mov
pop
sbb
bound
xor
mov
or
inc
fisubs
inc
xchg
push
sbb
out
ljmp
iret
dec
aaa
sub
jo
test
inc
sbb
stc
fs
jle
push
adcl
shll
orb
loope
in
mov
das
xor
inc
push
hlt
or
pusha
jge
xorb
fcmovbe
pushf
sub
and
mov
in
lea
push
push
fidivrs
mov
mov
inc
repz
sbb
shll
jbe
jae
clc
rorl
decl
jmp
and
push
int3
hlt
adc
cli
mov
dec
lods
scas
iret
jbe
roll
push
lock
push
popf
jnp
mov
sub
mov
mov
loopne
out
jp
pop
jne
jle
mov
nop
or
in
out
out
dec
sbb
rolb
mov
sbb
ds
dec
hlt
fimull
fsubl
bound
fstl
push
stos
push
or
pop
pop
jl
push
xor
imul
xchg
xor
dec
neg
push
mov
lock
mov
mov
loopne
movsl
test
icebp
and
pop
lret
xchg
xchg
mov
push
cwtl
stos
outsb
les
dec
iret
stos
hlt
sub
dec
push
out
les
xchg
test
insl
cmp
or
repnz
sub
add
add
pop
imul
mov
cmp
pop
cmp
lds
mov
jmp
or
inc
in
andps
xor
mov
loope
xchg
stos
sub
pushf
lods
das
add
mov
loop
in
aam
adc
aaa
mov
mov
sbb
out
xchg
push
loopne
adc
push
lods
fiadds
fwait
js
sub
adc
ds
outsb
sbb
and
mov
sbb
rorb
mov
ds
loop
jle
pop
imull
lret
pusha
das
ja
cmc
insl
mov
xor
jmp
mov
adc
adc
jle
jecxz
xchg
jecxz
repz
test
mov
xchg
jg
adc
imul
sub
mov
std
pop
dec
cld
mov
pushf
andb
ja
lods
clc
jle
outsb
out
cs
cli
mov
jecxz
inc
adc
mov
notb
jge
push
jge
dec
int
cwtl
scas
cwtl
jp
xchg
das
lds
hlt
cmp
adc
ret
jle
pop
pop
les
fwait
mov
xchg
sbb
fs
loop
repz
add
std
pop
jbe
jae
sub
pop
jl
cmp
outsl
mov
mov
je
outsl
sbb
lret
mov
cmp
mov
repnz
cmp
sarb
mov
mov
pop
fs
pop
dec
inc
xchg
int3
add
and
loopne
gs
mov
or
jbe
outsl
call
iret
das
add
xchg
addr16
outsb
jns
hlt
std
shlb
pop
fisubs
push
out
adc
out
jle
insl
sub
scas
sbb
or
sub
and
add
popa
les
loope
idivb
xor
mov
fiadds
sar
stos
cmp
sti
outsl
sbb
pop
gs
aaa
outsb
sbb
sub
jecxz
xchg
loop
lret
push
mov
insl
adc
adc
mov
mov
sub
add
test
jnp
pop
pop
fsubl
data16
cmpsl
les
out
lea
xor
push
stc
mov
cwtl
xchg
mov
dec
insl
iret
lahf
outsl
scas
adc
pop
push
cmp
xor
or
push
jnp
arpl
dec
nop
int3
jbe
lds
push
sarl
insl
movsb
fs
jmp
aaa
adc
enter
imul
sbb
jecxz
sahf
pusha
pop
outsl
loopne
dec
ror
lret
cmpsb
pop
sub
fucomip
dec
dec
sbb
sbb
push
xorb
mov
mov
sub
stos
popa
out
cmp
fwait
addr16
xchg
out
push
insl
or
adc
inc
lret
test
fwait
pop
insb
lods
je
dec
int
hlt
gs
fs
sbb
mov
jae
xchg
loopne
lahf
lods
fs
movsl
incl
cld
frstor
xchg
xchg
imulb
lea
push
fs
stc
push
pop
xchg
in
mov
pop
insl
mov
sahf
je
mov
stos
test
mov
outsb
push
cmp
shr
fmull
sub
inc
cmp
mov
lock
or
loopne
inc
loope
pop
inc
mov
jl
or
or
test
cwtl
xchg
xchg
sbb
movsl
push
fwait
scas
cmp
xchg
imul
inc
sahf
and
sahf
cmp
or
jmp
cmpl
pop
add
dec
arpl
jno
inc
mov
dec
cli
jmp
jne
fildl
jno
popf
cs
cmpsb
in
aaa
mov
in
int3
je
sub
push
inc
mov
shld
fs
lret
aaa
test
js
adc
aad
sbb
mov
cmp
ljmp
sbb
mov
add
jno
mov
jbe
fwait
mov
mov
dec
push
push
outsb
adc
cwtl
cmp
mov
sub
adc
lea
lods
xchg
dec
test
sub
mov
rcrl
in
mov
sub
imul
push
pop
mov
inc
fcomp
or
int3
cmc
bound
cltd
xor
sbbb
in
sbb
test
frstor
divl
adc
ljmp
leave
cli
jne
xorb
pop
es
cltd
aam
ficoml
jnp
or
shl
cmp
cwtl
xor
bound
push
adc
or
xor
sahf
add
lea
test
outsl
insb
push
call
loop
cwtl
push
stc
jle
and
dec
and
pop
fisttps
mov
xor
mov
mov
sbb
push
stos
mov
rcll
mull
cmp
stos
leave
pop
xlat
outsb
or
in
hlt
mov
or
pop
or
pusha
lock
imul
mov
push
scas
cmp
push
adc
insb
xlat
or
lcall
dec
gs
loopne
xor
cmpsb
ljmp
rcrb
jmp
in
add
inc
lahf
push
push
in
adc
jnp
rclb
mov
add
hlt
aaa
xlat
push
lret
mov
jmp
xchg
in
cwtl
icebp
cmc
push
cs
ficoml
or
push
cmp
cmpsb
pop
rcll
sbb
ljmp
cmpsl
mov
mov
mov
bnd
mov
imul
jns
pushf
pop
lock
cmp
xor
or
pop
js
push
lods
cmp
xor
insl
mov
loope
push
out
stos
into
add
jbe
adc
std
in
std
fwait
cmp
xchg
inc
mov
ret
dec
xchg
sti
lea
push
lahf
jne
jmp
pop
push
bound
repnz
aam
mov
pop
push
pop
push
shlb
test
jle
xchg
pop
xor
clc
cmpsb
inc
mov
iret
sti
mov
out
dec
cltd
in
or
mov
js
adc
std
std
cltd
push
mov
add
fildl
jg
jnp
adc
push
jbe
mov
push
lods
jae
out
jns
rcrl
outsl
cmp
rcl
mov
dec
xor
rorb
inc
sub
fcomps
sub
push
mov
mov
repz
xchg
ds
cmp
jbe
repz
inc
filds
sub
jae
push
push
push
cmp
inc
cmp
jmp
loope
sti
mov
pop
jbe
mov
xchg
dec
push
in
sub
scas
test
out
sti
cmp
sub
push
fnstcw
push
clc
jmp
nop
push
shll
add
lret
es
lret
xor
repnz
push
cltd
inc
test
cmpsl
jg
icebp
or
test
sub
test
jle
lahf
mov
mov
mov
dec
lock
push
sbbb
xchg
dec
cmp
sub
cld
or
sub
cmp
mov
repz
popf
mov
inc
leave
xchg
das
or
outsl
mov
and
jle
fimull
in
mov
pop
cmp
insb
jecxz
rcrl
push
stos
or
aaa
pop
test
jl
mov
push
adc
push
mov
dec
mov
mov
ret
and
push
push
xchg
lds
push
xchg
xor
add
dec
mov
je
test
sub
add
hlt
scas
mov
push
mov
jle
mov
or
inc
push
lret
adc
enter
xchg
dec
aam
outsb
dec
or
stos
adc
xchg
cmp
jmp
pop
addb
out
andb
add
jg
or
cltd
pop
scas
outsb
std
and
inc
jmp
fldt
push
loop
lods
cltd
push
cmp
insb
push
out
pop
addb
aam
sub
xchg
xchg
aaa
popf
hlt
out
mov
pushf
pop
fnstsw
call
sahf
xchg
int
xor
add
cs
push
jo
jae
mov
add
sbb
loop
es
clc
adc
lret
fwait
jl
mov
and
cmp
inc
push
sub
lcall
add
les
dec
fisubl
add
rorb
loope
daa
pop
add
push
incb
mov
sub
leave
fsubs
in
sti
add
setg
ds
push
mov
and
add
sub
cmpsl
sub
adc
jae
mov
adc
jecxz
xchg
adc
rcrl
add
xor
mov
and
in
inc
or
arpl
andb
mov
xchg
jle
fstp
add
mov
mov
cli
std
sub
jno
mov
xchg
fdiv
xchg
mov
pop
fs
mov
pop
das
cmp
mov
inc
mov
xor
andb
repnz
xchg
mov
sub
les
dec
sbb
pushf
push
jb
fldt
pop
sub
pop
out
and
mov
sub
in
loopne
and
push
xorb
lret
iret
je
cmc
stos
test
lahf
mov
ret
xlat
mov
pop
out
cmp
in
cli
popa
push
shrb
fbld
popa
imul
dec
bnd
into
xchg
insb
xchg
movsl
mov
pop
lcall
pop
jg
mov
fistl
inc
dec
mov
js
adc
sub
xchg
stos
mov
push
inc
push
push
fmul
jno
inc
lea
mov
cmpl
imul
scas
dec
in
pop
fs
pop
jne
ret
sub
in
push
popf
pop
adc
add
cmp
roll
adc
rorl
fistpl
pusha
enter
cmp
fisttpll
lcall
adc
jp
xchg
mov
mov
adc
jmp
or
test
xor
fidivrl
pop
in
loopne
sub
jbe
and
aas
mov
out
pop
mov
or
xor
sarl
xchg
cmp
push
adcl
jge
imul
in
sbb
push
add
les
cmp
xchg
or
lea
lock
leave
mov
dec
add
sbb
cltd
mov
dec
out
jmp
out
bound
pop
mov
negl
cmp
rclb
adc
pop
data16
ficoms
out
xchg
sub
sahf
pop
xchg
into
aaa
fldt
dec
stos
stos
imul
cld
nop
lods
ja
or
push
sbb
jmp
mov
adc
push
stos
mov
xor
and
arpl
cmp
aam
xchg
cmp
cmp
pusha
pop
mov
mov
dec
pop
add
ror
inc
gs
push
js
insl
add
fsubrp
jae
xchg
ja
or
dec
movsb
jge
shll
mov
jbe
subl
nopl
shlb
and
xchg
inc
enter
icebp
shrl
jb
mov
xor
dec
test
mov
sbb
clc
dec
lods
xlat
pop
sbb
lds
xchg
push
and
dec
xor
nop
push
movsb
jnp
cmpb
push
dec
adc
mov
jecxz
cmp
push
push
cmc
mov
xchg
fldt
sub
inc
jns
outsb
jmp
cld
cmp
jmp
push
jp
iret
xchg
and
fcompp
xchg
jmp
add
xor
out
xchg
cmp
jecxz
test
dec
ret
int
stos
or
dec
arpl
xor
pop
ret
mov
sbb
push
dec
loopne
lods
call
mov
xchg
xchg
dec
aas
push
xchg
push
and
lret
in
mov
mov
mov
imul
enter
push
sarb
filds
add
inc
push
mov
aas
fs
rcrb
mov
inc
fnstsw
lahf
cmc
mov
inc
cmp
shll
aaa
jle
sub
jge
cmp
sub
jecxz
test
arpl
inc
insb
imul
xchg
nop
cmpl
dec
daa
sahf
fmuls
cmp
or
ljmp
adc
mov
push
push
xchg
filds
jb
fs
insl
push
lock
js
push
in
dec
stos
jbe
xchg
adc
mov
jmp
scas
xchg
popa
push
pop
add
pushaw
push
jmp
dec
rcr
movsl
cmpsb
roll
ficompl
push
aad
out
std
movsl
push
jnp
pop
adc
mov
xor
or
push
rorl
inc
in
fildll
jp
insl
cmpsl
or
pop
pop
rcrb
mov
add
int
xchg
mov
add
push
ret
sub
or
sbb
mov
addr16
cmp
jbe
mov
bound
call
lret
sub
ret
out
xor
sub
sub
out
add
int3
mov
or
xor
fdivr
adc
xor
mov
xchg
int
sti
push
or
pop
ds
pop
pushf
roll
pop
cmp
movsb
dec
sbbb
xchg
mov
iret
mov
mov
shrl
popa
xchg
inc
mov
jbe
cld
inc
pop
or
push
xor
lcall
imul
adc
dec
test
shl
sub
lahf
xor
mov
fstpt
ret
fdivl
xchg
out
mov
mov
data16
sar
rcll
jns
popa
add
imul
call
pop
repz
or
push
cld
pop
into
loopne
push
stos
pop
pop
lea
jnp
xor
xor
cmp
shll
fstl
out
fwait
enter
mov
mov
int
push
cmp
push
lock
mov
mov
jne
and
push
test
inc
push
cmp
mov
das
cmp
xchg
lret
idivb
mov
stos
xlat
add
dec
adc
mov
mov
mov
andl
lock
in
ret
jb
adc
lret
int3
and
pop
lds
sub
stos
ret
and
dec
loop
dec
add
js
pushl
cli
insl
dec
fwait
lret
mov
jns
mov
pop
sub
push
cmpsl
sub
aas
mov
or
add
stos
mov
pushf
dec
push
stos
mov
sub
pop
imul
ud2
sti
mov
inc
dec
xor
sahf
pop
icebp
jecxz
popf
aad
xchg
push
lret
aaa
lret
adc
adc
cmp
xchg
sbb
imul
bound
js
gs
inc
pusha
andb
pop
inc
add
pop
inc
cwtl
inc
pop
fsts
pop
pushf
ljmp
shlb
mov
repz
mov
push
stos
mov
pop
jbe
xor
cmpsl
inc
and
mov
push
or
jne
xchg
mov
push
pextrw
es
inc
sbb
and
lahf
push
inc
test
std
inc
or
jne
lret
cmp
and
sahf
pop
ljmp
push
mov
cli
add
hlt
loop
jecxz
bound
jne
pop
adc
test
and
js
xor
sbb
shrb
add
mov
xor
rolb
pop
sbb
pop
ja
inc
cltd
popa
adc
jnp
fisttpl
dec
inc
dec
insb
call
rolb
sahf
outsl
aaa
outsb
mov
push
or
out
cmovg
cmp
call
pop
xchg
mov
adc
js
cmp
push
jl
mov
inc
cmovl
jle
sub
add
outsl
out
xor
xchg
dec
stc
push
test
mov
sub
mov
rorb
jge
repnz
addl
lret
je
fwait
mov
ds
aam
mov
rclb
mov
in
in
sbb
pop
imul
xor
mull
insl
cli
xlat
sbb
mov
sbb
iret
add
adc
inc
outsb
and
js
fwait
insb
ja
daa
arpl
push
lock
jp
clc
jo
xor
adc
bound
dec
mov
aas
xor
adc
cwtl
popf
mov
sbb
push
pop
out
loopne
push
pop
add
lahf
cwtl
popa
sub
inc
movsl
push
add
lods
mov
sub
nop
inc
out
dec
jl
pop
mov
scas
pop
push
in
jmp
adc
xchg
call
push
inc
jbe
or
cmpsb
mov
add
xchg
faddl
repnz
je
mov
cmpsb
sti
pusha
fidivl
mov
sub
mov
loope
xor
lods
repnz
xor
jecxz
cmp
cld
out
xchg
inc
cmpsb
xchg
adc
sti
pusha
popa
mov
push
sbb
rcrb
sbb
sbb
mov
outsb
rcr
mov
xor
hlt
insl
jmp
fistl
fmuls
repz
test
xor
in
jnp
and
subb
arpl
int
imul
xor
add
rcrb
insb
cmp
push
in
pop
icebp
outsb
cltd
aas
sbbb
test
lods
mov
js
subl
inc
adc
sub
fcoml
xorb
rcrb
mov
mov
xor
xchg
mov
outsb
sbb
add
scas
cmc
outsb
jle
fnstsw
int3
clc
mov
gs
imul
xor
push
jp
popf
xor
mov
fidivrl
add
jae
movsb
dec
nop
test
int3
test
xchg
and
das
jbe
dec
add
cmc
and
xchg
xchg
mov
orb
in
xor
pusha
in
xchg
fistps
add
imul
add
dec
in
cmp
popf
imul
fcomps
pop
mov
popf
test
or
pop
lods
ja
add
cld
call
loope
mov
arpl
test
inc
lahf
push
dec
cmp
lock
inc
repz
cmpsb
pop
jp
jmp
pop
cltd
and
mov
mov
pop
jp
inc
jl
dec
mov
out
mov
loop
movsb
sti
adc
enter
cli
fbstp
cmp
in
xchg
gs
xor
pop
ljmp
sub
cld
scas
push
ret
pop
sbb
xor
jno
stc
push
xor
cli
xchg
in
mul
sbb
cli
inc
sub
mov
test
or
lret
into
inc
jo
dec
mov
fisubrl
lret
pop
inc
cmpsl
les
mov
enter
in
dec
sbb
push
and
jbe
xchg
mov
inc
push
push
or
jne
jne
adcl
lret
sub
out
sbb
mov
lret
les
jne
outsl
call
fdiv
xchg
mov
sub
mov
mov
and
jne
xchg
cmpsb
sarl
out
into
insb
jbe
scas
cld
sub
movsb
scas
cli
push
jo
jg
mov
jl
jnp
ficoml
jecxz
sbb
and
push
into
push
jne
push
lds
sub
decl
push
jp
add
dec
mov
mov
push
sbb
loopne
fistpll
cmp
outsb
pop
stos
in
inc
sbb
ret
cmp
mov
mov
out
jo
nop
pop
lahf
push
jmp
lret
mov
movsb
fsubl
jle
lcall
add
insb
mov
les
cld
fs
out
dec
pop
enter
popa
out
xor
adc
mov
add
add
aas
mov
ret
outsl
xchg
push
jle
jmp
and
mov
pop
mov
push
pop
sahf
jmp
fadd
mov
sbb
cli
sbb
mov
adc
fwait
lret
fmul
test
lods
fisttpll
sbb
sbb
push
sbb
add
cs
dec
sti
push
sbb
cmp
push
and
sub
dec
shrw
imul
jnp
xor
xor
call
cmc
inc
pushf
in
aad
push
sub
mov
and
test
stc
mov
mov
cltd
xchg
mov
push
icebp
mov
mov
push
add
imul
pop
or
mov
fistps
int
add
into
xor
in
add
and
sbb
and
subl
mov
aam
pop
pop
sbb
mov
repnz
daa
je
nop
es
push
sti
ss
jno,pt
add
pusha
loopne
stc
mov
push
out
iret
mov
lret
mov
rep
mov
adc
std
pop
and
cmp
cmpsl
imul
pop
daa
mov
clc
daa
mov
lahf
adc
dec
clc
dec
sahf
or
pop
shr
or
ret
cmpsb
xchg
lcall
cltd
jnp
adc
add
mov
popf
mov
mov
out
test
movsl
jb
jg
mov
dec
lock
fisttps
xor
gs
sahf
pop
sbb
mov
cmp
pop
mov
and
xor
mov
cmpsb
jno
dec
xor
shlw
aam
ret
mov
movsl
jecxz
ret
jnp
jbe
xor
fldcw
cmp
xchg
fwait
pusha
mov
cld
push
dec
add
adc
dec
jge
sub
vmovsd
aam
shrl
sub
mov
jb
in
fstpt
in
dec
xor
pop
movb
insl
add
pop
mov
cwtl
lret
fcomps
and
xchg
clc
pop
mov
ror
and
inc
dec
pop
pop
sbb
call
fstps
fdivl
out
nop
loopne
jmp
test
js
sbb
or
inc
push
jns
mov
sub
xchg
pop
cmp
out
popf
xchg
fcmove
loop
adcl
dec
xchg
mov
popf
inc
xorl
ljmp
push
outsl
jno
xor
cmp
xchg
fs
lret
xor
cmp
xchg
mov
jne
dec
inc
add
dec
push
pop
jecxz
fsubs
jge
cmp
xchg
iret
ret
sbb
or
cwtl
into
push
out
rcrl
test
sub
aaa
push
std
shrl
cmp
sbb
jbe
dec
ficompl
mov
adc
jl
pop
bound
fnstcw
pop
adc
outsl
or
mov
dec
in
and
push
stc
out
ja
in
jnp
mov
std
and
cmp
ret
pop
mov
aas
mov
nop
add
push
bound
scas
stc
xor
mov
jns
pop
mov
cmp
sub
mov
test
jmp
add
adc
push
push
adc
pop
aad
cltd
adc
push
int
sub
push
sbb
xchg
fsin
imulb
xor
pop
pop
jmp
repz
jle
cmp
cwtl
mov
outsl
push
push
scas
shll
inc
push
jecxz
add
xlat
push
addr16
outsl
insb
enter
xor
out
push
into
sti
jbe
cwtl
popl
or
ljmp
mov
pop
mov
or
outsl
ss
add
aaa
dec
xor
sbb
jmp
dec
mov
test
and
loope
adc
inc
inc
push
dec
testl
cltd
jns
mov
in
and
movsb
imul
dec
adcb
cs
push
out
xchg
subl
dec
addr16
sub
inc
jne
js
push
std
cmpsb
lahf
fnsave
lcall
ficomps
pop
xlat
outsl
push
subb
es
push
jge
ja
or
mov
pop
pushf
inc
int3
repnz
cs
std
insl
inc
into
arpl
push
xchg
out
div
jns
xchg
jno
pop
ljmp
pop
out
fwait
mov
jns
scas
push
mov
adc
cmpl
pop
mov
sahf
push
add
aad
stos
sbb
adc
cli
cmc
mov
mov
pop
inc
inc
ret
adc
iret
cmpl
lcall
inc
jmp
fdivrl
sub
stc
xchg
outsb
sub
sahf
xchg
jl
cli
pop
les
xor
pop
lods
movsb
dec
sbb
int
pop
jbe
push
std
add
ret
jle
insl
and
push
out
gs
fxch
call
xor
lcall
pop
jmp
adc
sbb
xchg
inc
sub
lods
mov
xorb
add
mov
stc
add
hlt
mov
mov
rclb
mov
mov
or
push
and
daa
add
add
mov
xor
shlb
mov
mov
xorb
mov
in
mov
shl
aas
and
movsl
in
push
dec
cld
cmp
hlt
mov
nop
mov
pop
gs
leave
loopne
dec
or
xor
mov
lods
insl
add
aad
jge
jo
mov
sahf
push
stc
int
xor
dec
cwtl
call
mov
cmp
shlb
cld
pop
pop
push
dec
jmp
adcb
lret
or
sbb
out
and
fcomip
cmp
mov
repz
popf
mov
pushf
in
push
cwtl
cwtl
ljmp
aam
movsl
sbb
mov
and
jo
in
mov
adc
ds
mov
dec
stos
push
inc
mov
inc
lret
js
call
and
push
add
add
xor
mov
or
or
addr16
jmp
cmpb
and
or
rorb
mov
fists
jp
jnp
imul
ds
into
jbe
int
sub
fwait
pop
incl
popa
lds
pop
cli
stc
jmp
mov
sahf
lea
mov
xchg
cmpsb
add
andl
aam
inc
js
xor
pop
rorb
mov
mov
mov
cmp
stos
lcall
push
out
loope
sahf
push
fidivs
daa
loop
das
cmp
push
mov
mov
lcall
movsl
outsb
push
or
ficoms
in
in
aad
out
mov
pop
cmpsl
pusha
or
aaa
enter
mov
sub
adc
adc
dec
scas
push
or
xor
into
jno
cmp
dec
hlt
mov
cli
shrl
adc
aas
inc
or
xor
cmc
stos
jnp
sbb
repnz
and
lds
inc
imul
adcb
pop
jmp
xchg
mov
imul
ret
enter
mov
insb
cmp
mov
or
pop
adc
mov
movsl
das
pop
cmp
sub
pop
outsb
push
mov
sarb
sub
mov
cmp
pop
dec
aaa
out
xor
shlb
nop
pop
pushf
mov
in
pop
mov
adc
std
out
in
xlat
sub
push
pop
xchg
cmp
xchg
movsb
sbb
cli
dec
pop
mov
pusha
push
xor
lahf
sub
xlat
lret
int3
jne
cmpsb
inc
xchg
inc
and
push
cmp
loop
fs
scas
sahf
lds
ret
mov
imul
das
cmp
xorl
sti
mov
push
inc
adc
push
mov
adc
popa
push
jmp
pop
add
inc
orl
shl
faddl
jg
inc
push
and
fs
xor
pop
and
out
push
cltd
aaa
add
jg
cmc
xchg
cmp
ret
pop
rolb
and
shll
inc
cmp
xorb
sub
or
ret
addr16
roll
dec
jb
xor
xchg
inc
andl
rol
ss
lods
lret
mov
ljmp
push
add
and
pop
and
insl
aaa
mov
mov
sub
sbb
addb
sbb
xchg
shlb
jmp
inc
gs
mov
outsb
push
jge
xchg
dec
das
loope
pop
ss
pop
mov
icebp
fsubp
or
dec
test
pusha
add
mov
decl
insb
add
paddd
sahf
sti
jmp
cltd
xor
inc
xchg
shlb
cli
or
mov
loop
fs
pop
sub
push
imull
inc
gs
fildll
mov
std
daa
insb
imul
mov
sub
movsb
mov
out
jmp
and
sub
icebp
mov
fidivrs
sub
cwtl
sub
or
repnz
lock
out
push
jl
and
ficompl
movsl
pusha
mov
mov
jb
mov
lods
sbb
pop
scas
push
inc
loopne,pt
push
in
outsl
inc
cmpsb
in
adc
shll
xchg
add
adc
lcall
inc
cltd
out
pushf
maskmovq
notl
aas
addr16
jle
clc
or
mov
sub
stos
mov
into
das
cmp
aaa
push
test
push
clc
nop
daa
call
call
pop
mov
jo
je
inc
push
arpl
add
lret
jae
sbb
jne
ret
mov
add
mov
loope
stos
or
mov
dec
inc
add
xchg
inc
je
dec
add
push
imul
sbb
xor
xchg
lahf
inc
jp
scas
mov
adc
lea
clc
xor
push
or
fstpt
sbb
mov
mov
cs
jb
pop
fistps
push
fisttpll
pop
decb
aas
into
out
cmp
lds
out
ds
cmp
adc
mov
and
loop
xchg
aad
inc
push
out
outsb
or
sti
add
pop
sbb
mov
adc
mov
jmp
ret
das
pop
mov
adc
stos
mov
xchg
pop
mov
xchg
cmp
jp
out
je
mov
adc
add
arpl
dec
leave
or
inc
add
in
shlb
out
sub
xchg
loopne
loopne
ds
outsl
mov
dec
sub
clc
cmp
insb
and
int3
lret
insl
sbb
mov
mov
fisubl
xor
js
mov
test
adc
cmp
jbe
stc
lds
cmpsb
stos
or
std
lds
enter
lock
push
in
je
aad
adc
xor
jmp
into
stos
inc
mov
mov
popl
sbb
ja
cmp
or
xchg
ljmp
xor
and
popf
and
xchg
xor
add
and
aam
cmpsb
mov
xlat
mov
testl
repz
dec
jge
xchg
inc
add
loopne
in
outsb
sti
pusha
loopne
sub
jno
mov
push
dec
aam
mov
pop
repz
dec
cmp
xchg
sbb
mov
sub
push
jmp
xor
jns
jge
stos
dec
push
pop
pop
subl
out
dec
pop
dec
pop
sub
sub
inc
into
cmp
cmp
pushl
scas
push
stc
lret
mov
iret
or
test
push
shll
pop
ss
std
call
sub
lahf
negb
popf
push
push
bound
cmp
cmc
mov
inc
roll
incl
xor
lret
pushf
movsl
movsl
pop
sub
pop
pop
test
lahf
lods
movsl
sbb
ds
fmuls
mov
cmp
or
pop
mov
test
jl
aas
xchg
lcall
decl
scas
aaa
testb
pop
pushf
arpl
pop
add
xor
push
sbb
mov
popf
popf
pop
cwtl
and
popf
mov
lret
sub
cmpsl
jo
or
mov
pop
push
xor
stc
mov
push
add
add
jne
push
cmc
cmp
inc
int
jl
je
push
jle
ljmp
gs
sahf
dec
cmc
and
fwait
test
pop
into
push
sbb
pop
arpl
fsincos
fildll
and
clc
fcos
enterw
or
jg
stos
enter
push
je
sub
push
in
jns
jl
push
push
nop
leave
into
push
sbb
xchg
mov
cli
adc
cmpsb
mov
sbb
cmp
sbb
cmp
and
sbb
mov
cmc
xchg
sub
cmp
sub
jns
sub
jbe
aam
lret
xchg
cmc
stos
ffreep
xor
or
mov
lahf
in
popf
stos
ja
inc
loop
xchg
ret
je
mov
pop
int
sahf
aad
sbb
jl
scas
clc
sar
add
jle
dec
lret
shlb
cmp
sbbl
loopne
sub
cli
in
pop
xchg
push
ror
neg
pop
fdivp
fwait
lcall
fimuls
sbb
jbe
pop
or
outsb
gs
mov
and
mov
dec
push
movsl
xor
xlat
or
inc
pop
ljmp
inc
push
mov
mov
mov
jp
mov
push
scas
cwtl
jb
push
push
or
mov
jmp
lahf
lret
shlb
leave
in
sub
insl
les
scas
lret
leave
inc
les
dec
sub
sub
les
inc
and
sub
ds
insb
xlat
jl
jnp
mov
int
icebp
push
rorb
push
aad
cli
subl
cld
fidivl
push
jno
inc
pop
mov
add
xchg
mov
push
mov
xor
push
fs
push
movsb
mov
and
mov
push
popf
enter
sbb
fisttpll
test
rorl
outsb
insb
dec
jl
stos
in
sahf
lds
sub
ljmp
mov
cmp
xchg
js
adc
fcmovu
cmpsb
or
cmp
push
icebp
mov
push
aaa
int3
jmp
or
aam
shll
jo
push
in
mov
cmp
jp
frstor
mov
or
pop
es
test
inc
adc
insb
pop
jge
fsts
insl
xchg
add
faddl
mov
mov
arpl
fisttps
jb
push
inc
adc
andb
scas
jg
dec
mov
xor
test
adc
pop
push
xor
xchg
fs
ss
mov
out
loopne
icebp
xor
stos
dec
push
flds
mov
inc
sbb
sbb
and
ja
or
xchg
ja
sahf
add
lods
ds
pop
movl
and
or
test
out
dec
push
mov
mov
pcmpgtd
jle
inc
mov
fsts
sub
xor
je
pop
mov
cltd
flds
movd
shl
lds
and
and
enter
fidivl
xchg
mov
pop
cwtl
xor
cmp
mov
hlt
mov
push
push
les
mov
jl
mov
xchg
mov
enter
or
push
adc
push
mov
ror
insl
pop
cwtl
ror
dec
in
cmp
push
pushf
dec
jb
sbb
es
outsl
mov
clc
dec
stc
fiaddl
dec
lret
mov
dec
scas
inc
es
add
mov
inc
pusha
das
lret
sub
push
gs
jmp
ja
ds
clc
adc
std
inc
minps
cmp
push
cmp
loope
scas
test
sbb
or
mov
loopne
xorl
jo
xor
cmp
lock
add
cmc
cmp
mov
std
push
lds
mov
pop
fldt
jle
std
ljmp
ss
dec
inc
sti
test
aad
and
out
inc
mov
pushf
xlat
jg
mov
sbb
daa
cmp
shll
clc
push
out
xor
push
cmp
add
adc
push
insb
subb
test
or
je
imul
mov
loop
aad
inc
mov
inc
aad
fdiv
and
out
push
xchg
outsl
adc
jle
mov
mov
xchg
and
mov
arpl
dec
push
cmp
add
fsubs
push
lds
leave
add
pop
mov
clc
ss
lock
adc
fldcw
leave
cs
ret
mov
lods
ja
icebp
outsb
push
cwtl
jp
scas
inc
xor
repz
cltd
dec
pop
cmpsb
sbb
lret
adc
dec
cwtl
dec
or
popf
sti
shll
js
adc
adc
lret
sahf
xor
and
ret
xchg
inc
setne
pop
inc
add
icebp
mov
in
mov
cmp
out
mov
imull
pop
cmp
mov
xchg
adc
pop
enter
push
les
xorl
rorl
shlb
mov
sbb
xorb
cld
testl
enter
dec
mov
add
pop
or
aaa
xchg
mov
sarb
push
sbb
test
jge
nop
xchg
cmp
sbbl
add
fsubrl
and
test
mov
int
insl
adc
inc
fwait
sbb
int
and
rcrb
icebp
xchg
test
cld
jne
add
je
ds
repnz
add
xlat
inc
stos
jecxz
hlt
mov
dec
lock
xchg
gs
mov
jnp
arpl
add
add
std
mov
jge
scas
sub
lret
fcmove
cltd
sbb
pop
daa
adc
test
lcall
push
and
pop
bound
loop
popa
faddl
loope
jge
xchg
jo
or
pusha
shll
mov
lds
jge
lock
fisttpl
mov
xchg
dec
xchg
cli
insb
mov
leave
or
fnstenv
push
pop
sbb
mov
mov
popa
test
add
fsubrl
cmp
dec
gs
pushf
add
popf
push
pushf
add
jle
cmp
sbb
hlt
mov
setno
or
rcl
ja
out
fs
pop
xchg
das
dec
mov
loope
lods
xchg
mov
addl
pop
xor
in
inc
dec
adc
scas
dec
mov
or
mov
rcrl
fmull
pop
inc
mov
adc
inc
jbe
mov
add
ror
mov
jb
jb
add
push
mov
inc
popf
pop
cmp
push
and
sbb
ficompl
dec
cwtl
ljmp
mov
es
lss
addr16
push
sahf
rol
push
rorb
lret
or
or
jnp
jno
pop
cwtl
cmp
ljmp
mov
aam
iret
in
pop
or
mov
mov
addb
or
cmp
push
mov
xchg
insl
rclb
int
das
shrl
rcrl
bound
jb
test
subl
xor
sub
mov
pop
ficomps
fisubl
jle
stos
xchg
add
push
les
ljmp
sub
pop
jmp
fwait
mov
dec
xchg
xor
jae
sub
xor
push
int3
fwait
push
movsl
in
cmp
cmc
les
sbb
mov
jg
sbb
das
test
daa
or
xchg
adc
inc
or
sbb
sbb
cwtl
and
mov
in
ret
cmpsl
loop
adc
push
nop
pushf
add
out
dec
cmpsb
lret
inc
iret
rorl
pop
loop
test
adcl
inc
or
idivl
cltd
ds
sbb
loop
out
push
mov
xor
in
fucom
push
jnp
mov
rcr
fnstsw
adc
arpl
sbb
je
test
mov
out
andl
test
lea
xor
dec
out
cmp
xchg
cmp
leave
sub
pop
hlt
inc
mov
enter
xchg
int3
sbb
ret
dec
lret
fistps
stc
fldcw
lea
xchg
mov
cld
out
sbb
add
sbb
je
fcompl
adc
mov
aas
int3
push
xor
pop
jmp
test
mov
lds
cmpsl
sub
jae
jae
cli
mov
stc
nop
std
das
mov
iret
sub
inc
mov
mov
movb
pop
mov
sbb
inc
mov
xchg
or
mov
jb
and
or
popa
es
pop
and
fs
std
fwait
jae
arpl
cmpsb
iret
out
aaa
and
and
inc
push
movsb
jge
out
jo
ss
imul
sahf
outsb
in
pop
mov
jne
imul
push
pop
rclb
dec
jmp
push
cmp
cwtl
enter
lahf
and
imul
in
dec
idivb
mov
jno
stos
mov
ljmp
sub
xchg
adc
and
arpl
fadds
sub
push
inc
add
jae
lods
movsl
add
sbb
andl
xor
gs
jge
xchg
push
cmp
ss
cmp
sahf
cmp
adc
adc
inc
sti
pop
sbb
adc
and
movsl
cmpb
inc
and
loopne
sahf
jno
cmpsb
les
pop
mov
add
daa
in
filds
push
jns
loope
setne
xchg
or
sbbb
sbb
jmp
or
imul
jp
test
push
ret
mov
shll
out
aaa
or
sub
test
ss
dec
dec
int
xor
inc
mov
mov
pop
stos
mov
psubq
or
scas
jge
sub
adc
sbb
dec
mov
inc
mov
addr16
lret
jno
out
and
pop
dec
lock
mov
aad
pop
insb
fiaddl
mov
movsl
pop
inc
mov
or
sbb
push
test
movsl
addr16
aam
pop
push
cld
xor
push
sub
bound
xor
or
cmp
pushl
push
sbb
pop
insb
jecxz
mov
sub
and
ljmp
inc
pop
iret
loop
js
sbb
negl
int3
pop
mov
mov
inc
mov
mov
sub
fxam
push
fisubrl
loope
mov
push
inc
jmp
and
pop
scas
lods
dec
aaa
xor
cmc
icebp
xor
jne
pop
sbb
or
sti
mov
mov
repnz
jecxz
jbe
addl
cmp
push
mov
shrb
popf
sahf
iret
sbb
dec
sarl
push
inc
sbb
dec
push
fwait
add
mov
sbb
pop
imul
xchg
fbld
cld
hlt
mov
sub
sub
pop
dec
js
and
jnp
cmpsb
sti
int
dec
cld
hlt
imul
jp
jecxz
pop
mov
mov
pusha
fistps
pop
faddl
mov
mul
idivl
test
bound
push
dec
incl
sub
loop
gs
push
jp
add
lds
push
push
je
mov
adc
out
gs
shl
dec
ss
xchg
xchg
cmp
bound
xor
enter
xor
add
push
sub
adc
pop
sub
pop
dec
divl
mov
xchg
in
and
mov
out
or
adc
push
mov
fdivl
pop
nop
mov
rorl
out
arpl
jne
incl
jne
jmp
cmp
fidivs
mov
mov
or
mov
dec
mov
lods
das
jle
adc
jmp
in
push
or
loopne
lods
bound
fdivs
push
or
roll
sub
and
test
jo
fisttps
cld
xchg
dec
jmp
std
mov
xor
shll
hlt
or
mov
mov
pop
pop
enter
test
sub
inc
out
mov
mov
ret
pop
aas
add
jl
cmpsl
lea
test
cmpsb
or
mov
inc
decl
sahf
push
and
or
push
add
lcall
xor
dec
cmp
cmovbe
push
orl
cltd
popa
dec
cltd
push
fsts
jle
je
enter
fs
or
sub
mov
mov
insb
add
vmread
or
mov
fnstenv
cld
xor
movsl
test
mov
sub
cmp
cld
push
mov
push
loopne
adc
and
pop
inc
jmp
pop
pusha
dec
pcmpeqw
lods
or
jp
jl
loopne
test
int3
mov
add
aas
and
mov
inc
popa
out
push
inc
mov
or
lahf
pop
icebp
adc
and
fs
mov
cmp
clc
lret
jge
pop
xchg
fs
jp
pop
inc
inc
dec
add
sub
add
dec
popf
pop
es
mov
cmc
mov
testl
jnp
scas
enter
sbb
cs
rcrb
pop
fistpl
xor
add
scas
scas
ret
nop
adc
sbb
sbb
insb
push
mov
dec
dec
mov
daa
push
lods
pop
mov
loopne
pusha
push
xor
lcall
xor
cmc
cld
dec
pop
or
adc
loopne
xchg
push
sbbb
xlat
dec
or
test
mov
cmp
jecxz
js
iret
imul
inc
lret
ret
mov
sbbl
or
jns
adc
sub
cmp
lret
subl
jle
popf
cltd
cmp
js
out
sub
jge
stc
jge
out
xchg
xchg
cmp
jne
sbb
ret
in
push
mov
mov
dec
outsl
jmp
ret
call
mov
daa
in
jnp
or
dec
popa
scas
fwait
sbb
inc
ss
imul
add
loopne
xor
jmp
pushf
jnp
loop
jge
xlat
cmc
dec
push
cmp
jo
lods
clc
lea
pop
out
ret
or
loop
data16
xchg
jecxz
mov
sbbl
mov
dec
pop
add
push
lea
repnz
test
or
xchg
adc
sahf
mov
iret
cmc
sbb
sbb
je
sbb
outsl
shrl
lods
loope
dec
test
lahf
int3
scas
sarl
test
push
cmp
fisubrs
add
leave
popf
ljmp
orb
or
sub
fildll
fwait
push
mov
lahf
add
jg
sub
jb
mov
aas
outsb
fstpl
data16
mov
aas
popa
jle
sti
dec
pop
adc
dec
mov
push
cmp
pop
int3
mov
pop
decb
lret
out
sub
lock
fists
imul
jae,pn
je
lret
cmpl
mov
xor
int3
insl
jae
mov
or
imul
fdiv
jg
pop
mov
cmp
adc
sub
xchg
dec
cmpsl
and
jne
xchg
ds
lret
loop
and
adc
outsb
push
or
mov
jo
xchg
jle
std
xor
push
test
je
mov
cmp
vpsrad
aas
addr16
sub
dec
dec
clc
fcomps
xchg
stc
iret
fcom
xchg
dec
push
icebp
lcall
xchg
cmpsb
fcoms
bound
xor
add
pop
add
push
push
xchg
out
lahf
sub
sahf
fcompl
test
xor
mov
jmp
pop
ficoml
mov
xchg
cwtl
jp
xchg
pop
jge
inc
addl
push
jns
add
add
jno
mov
or
daa
mov
xchg
call
adc
das
add
sub
and
out
iret
out
bound
ss
fcoms
fdivrs
es
clc
jo
xor
fs
push
mov
stc
push
sahf
pusha
lds
ds
push
jbe
pushf
sub
and
xlat
pusha
enter
es
adcl
insl
rorb
xchg
sbb
jmp
stos
xchg
pusha
hlt
in
insb
jge
push
orl
hlt
inc
mov
push
pop
in
fiadds
cmp
jo
push
clc
inc
pop
lds
mov
lahf
aad
xchg
jmp
jb
imul
xor
test
sbb
ljmp
xchg
adc
jno
push
dec
xchg
or
xor
dec
adc
or
imul
aaa
sti
mov
hlt
or
mov
in
sahf
aas
cmpsl
push
sbb
loope
and
push
push
in
ds
adc
xchg
push
mov
pop
mov
mov
push
cltd
fs
outsb
clc
or
jmp
hlt
inc
push
jmp
loopne
inc
mov
int
xor
cmp
pop
vpcmpgtw
sub
mov
or
shl
mov
fwait
xor
lahf
sub
xlat
jb
adc
and
es
fisttps
fimuls
mov
fnstcw
sarl
or
push
mov
cmp
fsubrs
das
pop
stos
negl
insb
roll
std
movsl
add
jae
adc
cmc
sbb
jbe
add
sub
aad
int3
ret
sti
xchg
add
call
rcrb
pop
cmp
ss
or
cs
int3
mov
mov
cmp
xor
stos
int
xor
xchg
dec
mov
xchg
rcl
push
push
pop
pop
adc
mov
insb
nop
adc
pop
xchg
or
pop
add
fisttpll
add
or
aad
mov
inc
xchg
mov
mov
push
lret
fwait
loope
inc
jl
push
sub
mov
nop
xchg
enter
dec
push
ret
xlat
imul
sti
stos
sbb
dec
sti
in
in
adcl
loope
pop
fxch
sub
in
lods
add
imul
add
aam
mov
xchg
mov
lods
pop
pop
jl
mov
xchg
cmpsl
out
add
mov
daa
clc
xchg
dec
jns
ljmp
add
and
push
out
and
bound
xchg
outsl
xor
int3
scas
out
int
clc
pop
bound
mov
push
xchg
sar
and
inc
rorb
int3
out
push
sbb
xchg
adc
mov
lcall
mov
fdivl
xchg
aam
gs
ds
into
add
jge
sub
push
add
int
push
scas
ret
call
jae
add
jno
fcomp
jl,pn
out
mov
sbb
stos
pop
stc
out
fidivrl
sbb
std
scas
bound
enter
lret
fsubr
and
cmp
rcrl
sbb
sbb
xchg
sub
pushf
or
das
and
cmpl
adc
ljmp
addr16
sbb
scas
movsb
sub
xchg
adc
adc
dec
out
inc
icebp
nop
xchg
repnz
shlb
shl
lcall
pop
repz
in
xlat
and
pushl
xor
adc
scas
push
mov
ja
shrb
jb
scas
mov
add
and
int3
mov
sub
ret
xchg
push
shll
jb
pop
sbb
mov
les
dec
lods
mul
lret
sahf
pop
sbb
adc
or
mov
insb
mov
movsl
jle
add
mov
mov
xchg
push
mov
setg
cmc
jb
icebp
pop
mov
cmp
scas
fwait
push
sub
repnz
scas
push
dec
sub
int
push
xchg
push
push
xchg
xchg
push
imul
clc
imul
push
sbb
cmp
int3
stos
mov
out
jecxz
dec
dec
fs
paddsb
sti
jns
jecxz
push
sub
jb
std
pop
mov
ret
movsb
mov
out
pop
fisubrl
aam
lahf
clc
ss
xchg
xorb
dec
test
sub
pusha
add
fs
std
ss
mov
sbb
fnstenv
or
rorl
or
cmp
xor
mov
pop
loop
out
lret
jge
test
aaa
adc
in
pop
decb
adc
and
aam
ret
pop
xor
push
jle
addr16
pop
ljmp
sahf
mov
std
clc
out
xor
add
xchg
or
or
lock
mov
jl
add
in
or
cli
xchg
or
add
inc
mov
jne
sbb
jp
ficomps
call
ret
test
cmp
pop
xlat
xchg
add
lds
push
mov
cs
push
mov
sub
pop
popf
xchg
xor
inc
test
cltd
fisttpll
into
mov
inc
popa
mov
ret
stc
call
aad
cs
mov
mov
or
into
jmp
fisubs
pop
xor
lods
daa
mov
sbb
pop
cmp
out
shll
xchg
or
ja
xor
add
cld
xchg
sbb
or
adc
adc
or
insb
jp
mov
loope
movsl
aas
sub
test
imul
adc
dec
cmp
mov
dec
mov
xor
lds
mov
out
in
and
ljmp
pop
mov
dec
adc
inc
and
test
test
inc
mov
or
fiadds
jne
mov
je
push
inc
int
or
stc
scas
loop
clc
or
jnp
divb
and
push
shlb
adc
sbb
mov
gs
ret
cmp
lcall
ljmp
jp
inc
mov
mov
or
call
or
xchg
xor
aas
dec
pushf
jmp
cld
mov
nop
pop
inc
cmp
push
flds
and
and
aas
mov
pop
and
test
mov
je
xchg
scas
sbb
sti
js
dec
dec
out
jbe
mov
pop
mov
repnz
mov
push
jne
sub
insl
mov
mov
lock
cwtl
sub
adc
sbb
cmp
call
xor
cs
lds
mov
loopne
iret
mov
ret
repz
inc
int
cli
lods
or
push
push
jbe
xchg
xchg
cmpsb
mov
lahf
jne
das
push
loopne
add
lods
lock
cmc
lods
xchg
mov
or
dec
mov
je
push
sbb
pop
push
push
xorb
ret
sub
inc
sub
mov
mov
mov
pusha
xchg
repz
sub
aaa
imul
cwtl
pusha
addr16
dec
gs
fsubl
shrb
stos
subl
insl
and
and
roll
rclb
call
in
in
into
xor
aas
movsl
sub
dec
or
lahf
dec
clc
mov
jae
jne
sub
ss
dec
in
icebp
test
and
addr16
adc
out
pop
or
mov
repnz
pop
jne
std
pop
cmp
es
add
cmp
inc
cmp
xor
or
xchg
int3
movsl
pop
push
insl
leave
ficoms
or
xchg
mov
push
rorl
xor
clc
or
xor
jg
mov
into
aam
ja
sar
lret
orb
sbb
mov
push
xlat
xor
loopne
mov
aaa
cmc
outsb
push
jnp
lahf
cwtl
fldt
daa
clc
mov
mov
push
mov
rcll
xlat
out
jecxz
fmul
sbb
or
inc
nop
jbe
loope
pop
mov
daa
sahf
mov
in
repz
mov
sub
jne
add
addl
dec
bound
movsl
and
divl
cmpsb
xchg
push
jns
jbe
mov
cmpl
cmp
xchg
notb
test
es
imul
repnz
cmpsb
mov
mov
je
mov
cmpsb
or
push
mov
ljmp
add
jo
mov
mov
in
in
outsb
aam
jmp
add
jae
sub
mov
xor
jno
mov
loop
adc
dec
mov
inc
mov
xchg
xor
jl
jae
xor
int
push
xor
dec
jl
mov
xor
in
loop
adc
test
sbb
stos
xor
mov
in
sbb
add
test
pop
js
jg
mov
inc
push
ret
and
in
inc
pop
aas
mov
add
cmpsb
nop
pop
inc
xchg
stc
loope
sub
pop
sbb
std
xchg
jmp
mov
adc
fidivs
in
insl
cmc
jg
push
xchg
mov
sub
jmp
int
push
pushf
ja
dec
in
mov
sti
hlt
ja
mov
cmp
ret
mov
dec
pop
push
cmc
cmpsl
inc
mov
jmp
ja
dec
test
sbb
insb
loop
loope
xor
pusha
or
jl
pop
and
mov
sub
xorb
fisttpll
mov
test
xchg
loop
mov
jb
xchg
lea
dec
mov
sbb
fbstp
mov
pop
lret
sbb
mov
out
cwtl
mov
mov
ss
sbb
cmp
movsl
inc
jo
jb
sahf
loopne
es
adc
xor
cltd
cmpsb
jge
pushf
hlt
ljmp
dec
cltd
xor
jo
cmp
fcompp
ret
cmpb
dec
int
in
xchg
add
fcmovb
idivb
dec
mov
mov
or
int3
loope
insb
addb
enter
inc
insb
in
test
mov
sbb
lods
lret
fisubrl
inc
ret
movsb
jecxz
test
sbb
mov
xchg
lcall
mov
mov
sub
or
fs
jbe
leave
dec
jo
pop
lods
sbb
jmp
cmpsl
mov
add
sbb
xchg
cmp
fnsave
enter
xchg
inc
dec
repnz
shlb
inc
pop
xchg
jns
das
lock
addr16
movsb
sbb
imul
mov
or
cmc
add
inc
loope
cmp
fstpt
add
add
inc
mov
dec
mov
lahf
jo
mov
stc
or
scas
mov
aam
and
in
scas
int
hlt
imul
andl
out
fldcw
sub
std
orl
sbb
mov
xchg
shlb
loopne
fstps
loopne,pn
push
push
insl
cld
sarb
insb
lcall
stos
add
sbb
sub
je
imul
and
shlb
mov
mov
push
sub
stos
adc
das
pop
dec
ljmp
lds
jmp
sbb
stos
inc
sub
enter
cmp
add
push
clc
xor
js
adc
iret
out
lret
fldenv
aas
cmp
in
imul
loop
sbb
mov
hlt
mov
mov
or
add
sbb
outsl
pop
nop
gs
mov
mov
lods
clc
add
lods
jns
in
int
addr16
and
mul
xor
ja
cmp
outsb
xchg
jmp
jbe
dec
aas
stos
push
imull
pushf
mov
sub
int3
jmp
adc
inc
mov
mov
inc
fadds
pop
in
js
int3
xor
mov
pop
loopne
jmp
mov
pop
adc
in
loope
cmp
rclb
addr16
inc
dec
out
add
sbb
pop
fmull
jo
addr16
fucomi
adc
or
mov
arpl
in
push
cmp
jmp
addr16
dec
cli
adc
xchg
adc
jno
dec
mov
inc
ss
and
je
sbbl
outsl
dec
test
mov
fdivs
mov
inc
dec
mov
stos
jmp
or
and
jno
mov
sbbb
out
jl
add
mov
adc
mov
gs
push
lods
jbe
cmp
adc
push
or
enter
daa
test
push
ficoms
hlt
ss
stos
std
shlb
cmp
jo
sbb
sahf
repz
subl
mov
clc
adc
pop
pushf
lds
mov
xor
jb
aaa
mov
cmpsb
inc
je
adc
mov
mov
add
cld
xchg
mov
neg
pop
or
cmp
hlt
cmpsl
add
xorb
insb
mov
adc
adc
mov
inc
fdivs
push
push
shlb
mov
movsb
push
sbb
mov
inc
or
insb
das
outsb
rcll
enter
mov
lret
je
push
cmc
push
inc
cmp
lret
inc
mov
lret
out
stos
movsl
sub
and
and
sbb
pop
cmp
cmp
testb
lret
daa
lds
inc
pop
mov
jg
sbb
scas
mov
aaa
mov
repnz
je
push
jae
in
cs
pop
flds
bnd
jno
mov
inc
divb
push
pop
cmpsb
stos
or
test
in
jecxz
das
lock
daa
int
sarl
fucomp
adc
out
fcmove
je
cmp
repnz
ficoms
test
movsb
outsb
xchg
pop
aaa
fildll
out
sbb
repnz
pop
push
mov
je
adc
xchg
xchg
jmp
fdivrl
iret
mov
aad
or
rcll
xor
dec
xor
out
sub
inc
adc
adc
scas
je
sbb
mov
gs
lcall
fs
jecxz
push
sbb
arpl
sbb
fstpl
jno
mov
jge
fs
fidivs
xchg
ror
jge
fisubs
mov
pop
incb
inc
pop
imul
sbb
jmp
xlat
and
pop
lods
or
and
loope
std
enter
and
adc
pop
shrb
jl
adc
lea
call
add
inc
out
mov
lahf
out
sub
ret
arpl
push
test
jg
add
lods
sub
mov
sbb
popa
mov
and
loop
mov
std
fwait
cmp
mov
xor
pushl
adc
adc
adc
outsl
xchg
clc
xchg
dec
repnz
push
pop
scas
and
mov
cmp
jo
fistpl
scas
mov
push
enter
jae
mov
cli
nop
mov
mov
inc
jge
xchg
jo
add
test
loop
push
push
popf
sub
add
iret
ret
inc
xchg
xchg
fsubs
subl
mov
jae
shlb
aas
iret
pop
lcall
test
jbe
pushf
fldl
jne
les
std
mov
sbb
test
mov
cmp
pop
rolb
add
jo
scas
xchg
addl
xor
pop
rcll
ror
repnz
jecxz
pop
cmp
dec
adc
mov
push
xchg
and
hlt
call
mov
sarl
and
sbbb
je
mov
sbb
mov
in
aam
pop
mov
sub
aad
xchg
pushf
mov
cmpsb
pop
cs
cmp
sub
xor
and
mov
push
xchg
xchg
sti
add
outsb
sbb
iret
or
jp
jne
cmp
push
nop
lahf
inc
ljmp
nop
aas
lcall
int3
arpl
jge
rcl
int3
ss
imul
mov
mov
ficomps
mov
mov
mov
es
adc
push
xchg
jnp
add
jb
sub
lcall
shlb
mov
out
xchg
inc
adc
mov
jae
sbb
xor
fs
pop
test
hlt
arpl
jo
pop
es
push
xor
pop
sahf
inc
ss
xchg
cmpsl
fidivrl
ds
ret
aas
std
loopne
push
push
jbe
inc
pop
adc
adc
loopne
leave
out
xbegin
mov
loop
sub
dec
and
mov
jmp
jb
jle
sti
ficomps
add
out
fdivrs
std
adc
mov
test
in
in
mov
dec
push
mov
xor
outsl
mov
mov
jnp
add
test
mov
movsb
test
ret
xchg
mov
jmp
mov
aas
out
sbb
mov
sbb
cli
fisubs
popa
mov
sbb
addl
repz
cmp
mov
jl,pt
push
inc
xchg
fistpl
bound
sbb
cmpsl
stos
push
xor
in
xchg
push
xchg
sub
or
sbb
xchg
mov
loop
cltd
pop
push
push
and
outsl
lcall
lock
cmp
and
clc
shld
push
test
das
sarl
inc
rcl
push
lock
cmpsl
inc
push
mov
leave
xor
aad
sbb
jl
push
adc
dec
rclb
es
mov
push
sub
into
lods
fs
jmp
xorl
mov
insl
xchg
scas
outsb
scas
sbb
mov
sub
orb
stos
pusha
jne
add
sub
fs
fwait
in
or
pop
pushf
jo
stos
mov
nop
or
push
mov
scas
rcrb
pop
pop
push
arpl
lea
lods
mov
cwtl
insl
cmp
outsl
or
jno
mov
lret
in
stos
shlb
sub
cli
insb
cmp
lods
and
sbb
stos
into
inc
sahf
sub
pusha
push
pop
cltd
push
mov
fimull
rol
inc
mov
sub
sub
pusha
lret
jecxz
jno
push
push
inc
aaa
cmp
aam
sub
enter
enter
cs
cmp
xchg
sub
pop
icebp
inc
or
mov
mov
jg
das
xor
loop
cmpsb
mov
adc
dec
shl
pop
inc
cmp
notb
pusha
shrb
or
nop
int
shll
lea
inc
bnd
outsl
push
daa
dec
testb
xor
jecxz
jmp
enter
lods
push
jmp
enter
and
jg
dec
imul
gs
pop
leave
leave
int
frstor
or
jns
ljmp
and
out
in
stos
loopne
adc
pop
ret
data16
mov
fmuls
loope
adc
inc
enter
sub
adc
and
repz
dec
add
mov
pop
cmpsl
mov
shll
insb
std
mov
sub
into
das
mov
sbb
sbb
push
push
and
mov
sbb
scas
lods
mov
test
lcall
adc
pop
sarb
mov
lds
add
int3
arpl
je
adc
into
pop
test
lret
jnp
fs
cli
cli
cmp
xlat
xchg
repz
ljmp
xchg
sbb
pop
cmp
mov
xchg
inc
inc
out
push
iret
xchg
or
jb
mov
lcall
sbb
test
mov
add
loope
ficoml
fimull
xor
mov
test
mov
push
mov
cli
mov
cmp
cmpsb
rcll
daa
insb
cmp
jo
std
enter
jb
aam
mov
sbb
ds
and
sbb
jne
push
into
and
xlat
mov
pop
cwtl
xor
pop
xchg
adc
push
lahf
jge
scas
out
jns
add
push
sbb
rep
arpl
fwait
test
add
divl
pop
sub
pop
imul
cmp
sub
pusha
cmp
lret
cwtl
mov
fbld
inc
into
mov
hlt
jl
mov
mov
pop
pop
push
mov
lahf
clc
daa
jno
jge
lods
xchg
xchg
cld
cmp
hlt
cmc
push
pop
icebp
jmp
lret
sub
out
or
pushf
push
orl
out
jb
xor
mov
dec
mov
outsb
arpl
cmp
push
fldt
pop
into
orl
sbbb
inc
ljmp
into
shlb
loop
dec
mov
push
lret
lret
pop
cmc
xchg
das
arpl
fs
ljmp
ret
and
popf
jp
inc
mov
divl
adc
mov
sub
sbb
test
ss
add
push
mov
int3
rcrl
push
push
mov
adc
dec
imul
iret
lds
push
push
or
mov
dec
push
stos
lret
popf
adc
mov
scas
cmp
push
rcrb
cmp
aaa
sarb
sbbl
and
popw
fdivrl
pop
xchg
mov
mov
je
mov
inc
add
rorl
sarb
xchg
xchg
jecxz
push
mov
call
lret
rolb
stos
xchg
imul
pop
jl
sub
ljmp
lcall
add
imul
mov
or
movl
stos
lahf
xchg
pop
dec
cs
arpl
call
loop
inc
jg
adc
jp
adc
xchg
jae
add
pushf
daa
pop
and
cli
das
cltd
stos
daa
lret
cli
mov
cmp
aam
mov
xor
outsb
lock
ja
add
mov
mov
adc
sbbb
insl
js
push
xchg
add
arpl
jmp
push
testl
mov
jmp
xchg
negl
mov
out
loope
loope
lahf
popf
ror
mov
xrelease
cmpsb
mov
pand
out
stc
adc
notl
push
sub
inc
mov
ffreep
push
and
add
lods
cmpsl
add
mov
or
push
movsb
aaa
mov
popa
scas
mov
negl
push
sbb
insb
aaa
cmp
jns
aaa
adc
and
push
adc
lahf
stos
jo
jnp
mov
mov
ret
pop
ds
mov
mov
cs
fld
aam
ret
lods
sub
or
aam
cmp
enter
mov
daa
xor
in
and
push
inc
scas
test
add
lcall
je
not
rcll
add
stos
jne
inc
out
mov
insb
lds
or
clc
cmp
imull
push
sub
ds
in
pusha
int3
mov
subb
ror
inc
push
lcall
mov
scas
xchg
lock
jg
push
and
or
mov
xchg
inc
clc
jb
ja
fisttpl
in
push
sbb
repnz
das
jnp
iret
sbb
test
jmp
mov
mov
out
ss
out
jg
icebp
push
ss
std
test
xchg
clc
jge
adc
inc
lods
lret
cmpl
and
andl
dec
shl
push
pop
pop
mov
int
std
sub
lret
in
inc
fistl
in
mov
pop
call
xlat
repnz
sbb
jmp
aam
xchg
mov
or
xchg
mov
loopne
repz
lods
mov
adc
push
pop
mov
mov
or
adc
add
out
mov
mov
into
imul
jne
data16
mov
inc
pop
leave
sti
jbe
dec
scas
sti
shl
and
mov
fld
mov
addr16
push
sub
sbb
xchg
cwtl
xchg
insb
lock
xchg
pushf
loopne
push
test
push
inc
xchg
push
cmp
lret
pop
push
pop
or
dec
outsl
rclb
cmp
push
push
test
fdivrl
popf
sti
jg
ror
push
mov
lea
mov
cli
or
inc
mov
jecxz
jl
leave
inc
into
addr16
and
push
and
out
imul
ret
aaa
jp
fisttpll
sti
xchg
jbe
jge
sbb
xlat
mov
aas
pop
dec
mov
mov
xchg
lcall
int
int3
arpl
push
cwtl
and
push
pusha
leave
in
sub
int3
add
jp
dec
aam
jge
cmp
dec
xor
inc
stos
xor
sahf
addr16
out
mov
aam
lods
aas
shll
pop
jae
mov
and
sbb
cmp
sti
lahf
mov
lret
pop
push
jo
lcall
inc
aad
sbb
push
adc
mov
pop
and
aas
push
cmp
aad
pop
fwait
cmp
stos
lret
mov
movq
cmp
sub
dec
adc
mov
cmc
test
mov
or
fwait
popl
jo
pop
jmp
jmp
lret
mov
fidivl
fwait
test
mov
or
sbb
dec
mov
or
inc
mov
inc
mov
pop
push
in
pop
mov
mov
sub
and
push
cmpsb
xchg
rcl
out
std
cltd
dec
xchg
xchg
lret
push
or
out
pusha
push
mov
repz
aam
enter
adc
inc
sbb
loopne
mov
jns
shl
pop
repz
das
loope
aam
imul
push
lcall
push
inc
cmc
gs
out
xchg
cwtl
sahf
adc
push
push
mull
or
js
sub
loopne
lds
call
loopne
scas
mov
dec
dec
inc
popa
push
xchg
mov
adc
mov
clc
fbld
aam
xchg
test
movsl
xchg
jne
mov
dec
in
jl
out
mov
push
cmpsb
jbe
add
pushf
jp
or
ficomps
xchg
ja
les
cmpsl
sbb
aam
xor
inc
pop
mov
xchg
push
push
xchg
jle
sub
push
inc
sub
push
mov
outsb
dec
movsb
cmc
add
xor
and
mov
into
ds
iret
push
int
xor
xchg
xor
jbe
jb
ja
sbb
dec
and
mov
addb
xor
fnstsw
ficoml
dec
push
jo
aas
ret
push
inc
sarb
dec
fdivr
cmpsl
sbb
push
xchg
jne
int3
es
cmp
inc
jns
inc
popa
sub
xchg
adc
dec
cmpsl
adc
rolb
aam
push
rclb
sbb
dec
enter
dec
arpl
bound
daa
insb
mov
repz
push
push
out
pop
mov
mov
xchg
movb
fadds
xor
divb
pop
and
sbb
xchg
mov
in
and
xchg
hlt
and
mov
push
cltd
fistpll
dec
popf
add
push
lods
xchg
in
sti
movsl
sbb
iret
push
adc
pop
out
and
fmull
lods
xor
repz
sub
cmp
adc
std
mov
ds
jg
daa
pusha
inc
xchg
jmp
inc
push
mov
es
cmpb
cmpsl
lahf
insl
movsb
cs
test
xchg
rep
jle
adc
mov
cmp
jb
fisubs
inc
and
add
outsb
xchg
and
in
cmc
inc
cmc
enter
stc
cwtl
jl
push
sub
jp
in
pop
xor
or
cmpsb
icebp
adc
mov
jne
mov
addr16
mov
movsl
daa
fwait
push
inc
dec
adc
ljmp
mov
xor
mov
push
fucomi
enter
push
aas
imul
int3
pop
call
daa
adc
push
add
bound
aam
mov
repnz
arpl
inc
rorl
xor
add
xor
adc
and
push
cmp
lahf
fiaddl
push
out
or
adc
inc
add
aas
adc
inc
jecxz
shl
lds
jo
sar
adc
out
out
xchg
popf
xorl
movsb
aaa
fwait
push
pop
shlb
jnp
inc
mov
fidivl
decl
push
rclb
pop
xchg
and
cwtl
in
adc
cmp
pop
cltd
into
mov
push
ja
push
imul
dec
xlat
jne
data16
aam
loop
daa
pushf
movsl
aam
adc
movsl
dec
mov
pop
jbe,pn
mov
mov
dec
aaa
mov
icebp
xor
mov
cmp
movsl
cmp
daa
lea
fsub
andl
shrl
jmp
inc
mov
dec
xchg
adc
mov
scas
add
or
push
mov
in
inc
wbinvd
push
mov
or
btr
mov
push
sahf
mov
cmpsb
fdivr
xchg
or
or
jmp
repnz
in
push
push
cmp
or
stos
xchg
mov
xor
push
or
packssdw
mov
xor
mov
mov
fsub
insl
aas
imul
xor
or
and
call
push
rclb
jno
or
or
shrl
jmp
fdivrs
ja
bound
pop
jl
mov
adc
xchg
call
sbb
pop
xchg
pop
aas
jb
mov
pop
sbb
mov
mov
or
in
inc
ficoms
pop
mov
lret
mov
addb
fistps
fs
cmp
test
shll
dec
jns
sbb
xchg
mov
mov
rcrl
push
call
jo
jmp
pop
sbb
or
or
rorl
sub
fnsave
cltd
sarl
xor
jge
daa
mov
fbld
mov
out
imul
jp
jno
dec
add
cwtl
movsl
sub
or
mov
nop
lea
filds
dec
shll
subb
or
nop
mov
dec
es
jle
or
pushf
push
out
xorb
jnp
clc
mov
fisttpll
or
outsl
jge
inc
xchg
adc
or
dec
sahf
sbb
repnz
push
mov
stos
mov
jecxz
daa
cs
pop
push
xor
loope
cmpsb
cmc
popf
stos
lret
lret
mov
loopne
or
push
sarb
pop
cmp
gs
dec
mov
test
mov
cli
jg
sub
mov
adc
jb
push
and
andl
dec
rolb
lahf
dec
int
sbb
iret
xor
scas
dec
ret
jle
xchg
ss
add
or
insl
out
pop
push
test
dec
inc
sub
dec
gs
and
adc
add
into
das
rcll
mov
sahf
clc
je
lds
enter
push
xor
add
dec
repz
push
cmp
push
scas
aad
xor
jl
xor
out
pop
dec
add
xor
xabort
fxch
cmp
mov
jg
add
or
mov
outsl
inc
sub
push
cltd
fwait
orl
dec
adc
jns
ds
inc
jmp
xchg
push
xor
mov
bnd
scas
jbe
cmp
pop
fiaddl
xchg
push
adc
xor
or
sub
pop
repz
xor
pop
cmp
jecxz
xor
adc
inc
imul
call
mov
inc
adc
add
shl
shr
push
pushf
out
jns
jecxz
adc
cwtl
aam
add
popa
inc
divl
sub
idivb
por
xchg
jne
mov
push
push
sahf
push
aaa
add
out
rorl
xor
jle
aas
andb
mov
insb
xor
mov
dec
ja
add
ljmp
push
mov
add
cld
stc
movsl
mov
or
dec
aad
cmovbe
int3
in
mov
in
sub
repnz
outsl
and
or
fwait
jb
insb
and
out
stc
or
pop
push
cli
adc
dec
cmpsl
sbb
lret
jbe
mov
mov
pop
pop
int3
movsl
push
or
aad
sub
push
jl
jge
cmpsb
inc
mov
jle
mov
fstpl
nop
add
loope
lcall
cmpsb
sub
popf
ds
mov
dec
push
mov
ret
imul
mov
out
testb
xorl
std
push
and
pop
mov
mov
test
ret
cwtl
add
mov
or
adc
into
add
xor
ljmp
and
fildll
push
xlat
ret
nop
mov
xchg
imul
gs
cmc
dec
cmp
pusha
or
and
scas
roll
mov
mov
push
add
fwait
rorl
xlat
adc
sbb
pop
je
mov
aam
lock
gs
out
xor
cwtl
test
mov
xor
out
insb
adc
repnz
dec
ljmp
and
outsl
out
mov
outsb
dec
lcall
pop
cmp
lahf
test
lods
jge
push
decl
xchg
fists
mov
mov
add
cld
dec
test
js
fwait
and
xor
mov
jg
push
adc
pop
xchg
sub
fisubs
stos
lcall
push
pop
mov
xchg
and
cs
sbb
outsl
ja
movsb
inc
pop
imul
leave
jne
dec
insl
shrl
bound
fcomps
and
mov
pushw
repnz
or
out
dec
xor
gs
adc
aad
aam
push
out
xor
mov
addr16
sbb
xchg
es
ret
les
jbe
and
sbb
mov
push
jnp
out
mov
cmp
push
jb
in
lahf
inc
sub
movsl
jl
sti
test
mov
add
and
cmpsb
lret
rcl
mov
divl
sbb
mov
mov
pusha
mov
pushl
xchg
pop
daa
push
sbb
loop
int3
cmp
xor
aad
dec
and
mov
mov
mov
push
dec
ret
xchg
sbb
xchg
push
sbb
lcall
es
lea
inc
ret
or
cmpsl
xchg
pushl
ret
push
pop
js
jb
xchg
in
iret
xorb
adc
jnp
and
inc
sbb
sarl
rol
mov
lret
cmc
pop
sbb
dec
pop
popf
mov
mov
xlat
fwait
shlb
push
pushf
dec
fldl
add
fildl
leave
fwait
popa
cs
push
inc
loope
clc
je
mov
pop
je
test
mov
daa
movsl
arpl
jge
rcrl
sbb
pushf
push
and
mov
ud1
pop
cmp
mov
xchg
jecxz
push
fmull
mov
xchg
clc
mov
test
test
pushf
adc
popa
jg
je
cmc
outsb
popf
xor
xchg
pushf
and
sub
cmp
popa
jecxz
push
in
push
fwait
scas
add
int3
lahf
inc
jle
cmp
fsubl
dec
xor
repz
test
sbb
sbb
stc
gs
mov
jb
sahf
and
imul
push
jle
mov
jb
sarb
shrl
and
in
push
stc
in
jae
into
pusha
movsl
inc
movsl
sub
std
push
pusha
movsb
fcomp
adc
lods
fwait
std
jb
jbe
xchg
mov
cmp
cld
ficompl
or
inc
push
cmp
popa
nop
outsb
jl
mov
push
mov
or
xchg
ljmp
sub
les
inc
sub
bound
pop
push
enter
rclb
pop
xchg
push
jno
cmpsb
nop
pop
ss
push
mov
mov
jb
test
das
lods
fdivl
push
mov
sti
cmp
fistpll
aam
hlt
dec
sub
je
fisubrs
add
sbbl
sub
loopne
cltd
stos
fbstp
sarl
cwtl
mov
jae
push
push
mov
fucomi
dec
insl
sbb
movsl
js
push
pop
out
lods
xchg
test
sbb
loop
rorb
add
and
xor
sub
pop
mov
jnp
jbe
test
and
repz
jne
lods
dec
ret
lcall
imul
in
outsb
inc
sub
mov
test
outsl
test
jno
add
cwtl
and
movl
in
int
xchg
xchg
pop
dec
inc
add
sbb
add
xchg
adc
push
outsb
add
jns
jno
sahf
jle
popa
int3
cmp
or
cs
popf
out
jp
lds
arpl
pop
mov
movsb
into
cwtl
jp
jl
fdivl
cmp
xchg
out
addr16
ljmp
sbb
mov
xchg
cwtl
rorb
or
sbb
les
and
mov
dec
lahf
mov
inc
push
mov
lret
es
mov
push
mov
popf
pop
pop
out
pop
sti
sub
inc
mov
nop
lea
notl
jnp
pop
add
cmp
sbb
push
push
jp
hlt
jle
in
js
dec
cmp
into
repnz
test
xor
fdivp
push
lahf
mov
fwait
inc
dec
mov
mov
xor
mov
push
mov
leave
xchg
add
cmp
push
sbb
shrl
cltd
lods
mov
sub
stos
lret
fcmovnb
lods
fnsave
dec
or
cltd
xchg
dec
loopne
fisubrl
cmp
sub
lret
ret
std
dec
adc
enter
pushw
add
out
xchg
dec
jns
fmull
insl
jns
fisttpl
cld
jne
ss
and
bound
push
lea
mov
mov
xchg
sub
pop
sub
or
popf
cmp
fisubs
pusha
sti
aad
outsl
add
pop
fs
pop
aad
lea
insb
push
scas
stos
mov
dec
xchg
xchg
mov
mov
xchg
hlt
lahf
jb
lock
adc
lea
xor
sub
dec
aaa
xchg
shl
shl
sub
cli
xor
mov
adc
repnz
test
dec
call
cmpsb
lahf
push
add
fdivrl
hlt
hlt
inc
sbb
mov
adc
rclb
scas
push
add
mov
test
ljmp
pop
mov
push
imul
jmp
push
incl
jb
jbe
stos
push
cmp
cmp
in
out
or
mov
mov
in
xor
inc
jno
cltd
jg
xchg
loop
push
sbb
pop
or
cmc
arpl
adc
and
xchg
add
iret
sti
sub
fcompl
sbb
inc
mov
aam
adc
pop
dec
jno
js
lods
imul
and
out
std
add
dec
or
mov
outsb
orb
in
xchg
outsl
movsl
pop
mov
repnz
mov
cmp
push
mov
icebp
mov
cltd
daa
mov
mov
mov
mov
insb
sti
popf
xlat
loop
pop
imul
sub
mov
push
or
add
xor
pop
xchg
mov
jbe
mov
xchg
ds
or
sti
enter
arpl
xchg
out
inc
lcall
das
movsb
int
jb
xchg
xchg
mov
shlb
sbb
jl
faddl
mov
lds
inc
ja
sub
lahf
loopne
and
or
movsb
sbb
addl
add
test
jo
mov
call
and
jp
adc
mov
std
fisubrl
mov
rcll
xor
pop
fwait
cmp
test
cmp
fisttpll
fwait
mov
jge
les
or
mov
mov
fidivl
cmc
aam
dec
addr16
lea
push
push
xchg
daa
iret
js
xor
mov
pop
js
pop
fucomp
or
repz
jg
iret
jl
shrl
mov
push
or
leave
dec
lods
mov
mov
inc
les
shr
or
mov
mov
adc
pop
cld
lret
enter
jg
push
mov
xchg
push
mov
sar
push
push
cltd
sarl
inc
movb
cltd
cwtl
push
imul
pop
shlb
dec
popa
sahf
movsb
pop
out
mov
rorl
pop
mov
das
pop
sbb
aam
mov
push
inc
xor
and
hlt
addl
push
in
push
lods
add
lahf
test
das
int
mov
sbb
pop
shlb
popf
gs
adc
xchg
push
ja
dec
adc
rcll
mov
adc
xor
flds
jmp
mov
jb
in
sahf
dec
inc
sub
scas
popa
add
push
pop
hlt
xchg
dec
pop
bound
outsl
jg
test
lods
in
ja
test
push
pop
shrb
mov
push
das
mov
xlat
mov
mov
out
add
inc
imul
scas
pushf
mov
xor
inc
aam
add
inc
imul
scas
xchg
lock
lea
add
sti
lock
std
mov
push
mov
cwtl
inc
jg
jecxz
sub
repz
mov
adc
jb
push
orb
mov
hlt
clc
mov
pop
hlt
test
xchg
dec
adc
je
mov
xor
adc
sahf
cmp
sbb
cmp
cwtl
jns
lcall
outsl
push
pop
dec
into
test
fs
test
push
cmp
cmp
inc
out
pushf
out
repnz
add
stos
and
cmpsb
xchg
mov
mov
xchg
fs
movsl
sbb
jge
fstpt
push
inc
scas
add
mov
xchg
fwait
inc
pop
jb
jp
or
jne
out
jge
imul
jnp
add
xchg
js
push
dec
pop
cwtl
cmp
xchg
inc
cmp
cmp
mov
cmp
imul
mov
jle
or
pop
add
cmp
in
ss
sbb
ljmp
ret
je
cwtl
out
adc
mov
jae
xor
cmp
in
xor
test
cmc
lahf
cmc
shlb
add
insl
add
jno
jne
mov
pop
push
xor
and
aam
std
popf
data16
inc
lds
adc
iret
jge
imul
push
icebp
and
or
xor
outsl
shl
add
aad
jae
inc
or
popa
sbb
cli
or
aaa
mov
inc
jns
leave
popf
mov
sub
into
nopl
sbb
fdivl
adc
dec
test
jmp
sub
jge
sbbl
popa
sub
add
leave
stc
inc
jl
xlat
sahf
mov
jnp
mov
dec
dec
xabort
lds
ret
adc
es
xor
aam
or
mov
fs
pop
into
jnp
imul
xor
mov
mov
push
test
outsb
mov
push
fwait
xor
xor
inc
mov
cmp
repnz
sbb
inc
lds
aaa
pop
xor
xor
mov
inc
jb
push
xor
sahf
xor
fldt
addl
xor
test
ss
jnp
sahf
adc
icebp
jb
lret
cmc
in
xchg
pop
out
mov
add
je
popa
and
nop
mov
inc
sbb
or
cwtl
stos
mov
sub
sub
call
inc
sub
test
pop
cmc
sbb
xor
inc
imul
ljmp
xlat
xchg
mov
jnp
mov
insb
push
cs
roll
scas
mov
adc
xor
xor
adc
and
xor
data16
xchg
gs
pop
das
mov
fistps
mov
popa
xorl
mov
shrl
loop
dec
push
fldenv
sub
fdivr
xlat
leave
mov
lret
jge
js
add
push
xchg
inc
cmp
cld
and
call
loope
imul
imul
in
ror
mov
cwtl
sarl
xchg
repnz
cli
mov
mov
out
pop
hlt
into
scas
leave
mov
lcall
mov
imul
out
pop
pop
mov
repz
and
xor
int
inc
cmp
test
orl
xor
mov
or
adc
push
negb
mov
push
fs
sub
fcmovu
incb
mov
and
imul
jge
adc
pop
cwtl
daa
push
rcr
mov
cmp
lea
in
sub
pusha
pop
jge
sub
leave
sbb
inc
xchg
add
addr16
test
idivl
or
mov
rolb
pop
out
inc
add
and
jbe
pop
daa
minps
fs
movsb
fcmovb
ljmp
fldl
hlt
rcrb
jmp
mov
push
or
inc
dec
sub
loop
xchg
push
pop
mov
sbb
pop
mov
mov
repz
popa
xchg
stos
sub
decl
out
lods
adc
outsl
icebp
adc
std
jno
inc
daa
sub
jno
lock
cmp
data16
adc
repnz
inc
xchg
out
ret
inc
xor
into
shll
std
cmpsl
mov
or
or
loopne
retw
insl
stos
jne
lret
jmp
insb
adc
adc
adc
repz
cli
movsl
sbb
out
adc
ret
leave
adc
lods
xlat
ja
push
dec
xchg
inc
fisttpll
daa
jnp
rcl
je
clc
push
lahf
scas
bound
dec
jns
xchg
add
mov
aad
repz
inc
imul
add
jp
jp
push
cmp
xchg
add
les
pop
outsb
dec
outsb
test
insb
xlat
xor
movsb
lock
sbb
xchg
lock
mov
leave
cmp
xchg
addl
pop
ret
je
dec
push
adc
push
dec
stos
push
cmp
rorb
std
push
mov
shll
insb
shlb
loop
enter
add
outsb
lcall
pop
lea
subb
cmp
push
sub
lret
add
in
in
mov
imul
js
push
mov
mov
shlb
mov
test
jmp
mov
cmp
lods
adc
pop
inc
and
repnz
mov
xor
clc
push
mov
out
cld
jo
push
clc
lahf
xchg
shl
rcll
jle
add
push
xor
je
ja
jl
sub
ss
aaa
jne
cmp
out
scas
addr16
mov
repz
cmp
mov
addr16
in
jmp
pop
mov
add
fisubl
xlat
inc
rclb
fstpl
lea
push
jg
jmp
xchg
push
mulb
mov
mov
dec
lods
scas
xlat
sub
mov
sbb
push
sub
add
das
xchg
pushf
addl
outsl
lock
xor
lea
fistpl
xchg
sub
ja,pt
sti
push
std
int3
loopne
push
fadds
or
pop
scas
dec
fldl
inc
lret
insl
inc
in
mov
aam
jp
mov
insl
and
cmp
push
dec
fadd
mov
xor
in
and
push
fwait
imul
inc
mov
out
dec
pop
adc
jns
nop
mov
jae
add
adc
xor
pop
call
and
sbb
and
push
orl
pop
add
pop
pusha
push
nop
cli
sub
and
xchg
push
cmp
push
decl
daa
rcrl
fnstcw
and
pop
nop
mov
lods
adc
jae
repnz
sti
sub
lret
mov
loope
inc
mov
cmp
push
aad
adc
fdivs
in
outsb
mov
mov
jge
fstl
arpl
stos
lcall
sahf
and
push
mov
cmpsl
add
sub
test
push
test
aad
or
push
shlb
sub
insl
sarb
xor
jnp
xchg
jno
lods
adc
mov
fwait
xchg
std
and
and
fisubs
pop
sbb
das
aad
js
outsb
shrl
inc
inc
jecxz
mov
sbb
push
fidivrl
fucomp
inc
adc
aad
sti
mov
aaa
cmp
loop
mov
mov
or
mov
xchg
into
xor
bound
roll
icebp
rorl
popa
adc
lea
jno
mov
inc
push
xchg
jge
inc
in
ja
mov
outsb
jmp
sub
sbb
lcall
xchg
mov
and
push
jl
leave
jecxz
jecxz
cwtl
data16
xchg
adc
or
inc
int3
inc
rorb
dec
pop
xchg
stc
leave
lcall
cltd
jno
jge
loope
andb
sti
mov
pop
lahf
lret
mov
xchg
xor
cmpb
inc
dec
movsl
loope
shl
jno
imul
hlt
inc
mov
cmpsl
sub
mov
xor
sahf
mov
notb
scas
aad
xor
jno
xor
fistpl
jno
out
cs
mov
pop
push
popf
adc
test
or
jecxz
cli
divl
ljmp
add
mov
out
push
jg
loope
sahf
lret
lret
mov
jl
addr16
jl
lods
push
into
scas
mov
push
jge
pop
aas
mov
push
test
mov
mov
scas
sub
pop
int3
test
sarb
sub
jmp
call
fcomps
mov
lret
out
pushl
test
lea
and
pop
cli
arpl
test
clc
xchg
sti
mov
pop
aad
fidivrl
loopne
aad
addl
sbb
push
pop
lcall
cmp
jne
mov
cmp
movsl
add
mov
mov
daa
xchg
jnp
lret
fstl
lea
sbb
inc
cltd
sub
scas
inc
sarl
div
adcb
xor
test
push
jge
mov
arpl
mov
pop
sub
sahf
xchg
push
cmp
bnd
fsubrs
cmp
push
in
ds
jb
inc
mov
mov
mov
or
das
pop
data16
push
fdiv
test
addl
sbbl
rorb
xlat
mov
add
dec
popa
cmc
xor
mov
test
mov
mov
and
mulb
faddp
jge
andl
push
addl
in
xorb
jmp
mov
jg
dec
mov
add
mov
add
popa
or
mov
imul
loopne
testl
enter
cmp
pop
adc
in
clc
jge,pt
or
ds
sub
test
jnp
cld
ret
movsl
xor
outsb
cli
aaa
iret
test
xchg
pop
xor
nop
add
sbb
int3
xchg
pusha
push
popf
inc
ljmp
pusha
push
andb
push
imul
inc
std
cltd
cmpsb
dec
mov
mov
xchg
xchg
adc
pop
mov
push
add
js
push
xor
push
and
mov
jbe
mov
mov
icebp
jge
xchg
xor
flds
add
ret
js
mov
xor
stos
lea
inc
sub
jb
or
mov
adc
je
shrb
hlt
xchg
mov
xchg
sub
mov
and
daa
jecxz
imul
pop
scas
test
cmpl
loope
int3
mov
stos
andl
mov
mov
mov
mov
jg
jno
js
std
pop
add
cs
mov
cli
xchg
mov
repnz
inc
xor
sbb
xor
rol
push
mov
dec
shrb
stos
mov
das
adcb
or
xchg
or
xchg
sbb
repnz
leave
loop
arpl
xchg
ss
insb
test
fisubl
push
outsb
addr16
adc
jecxz
and
loopne
push
aas
pop
test
cwtl
dec
add
inc
mov
vcvtsd2ss
mov
jne
bound
sahf
push
and
lea
or
sbb
idivl
pop
mov
cld
loop
jns
scas
pop
ja
push
insb
xor
sbb
push
push
pop
mov
movsl
mov
cli
sbb
mov
imul
pusha
cmp
push
sub
mov
popa
dec
mov
xor
cmpsl
pop
sub
cwtl
jns
loop
lea
and
mov
out
aam
dec
ds
pop
sahf
hlt
mov
mov
push
arpl
pop
aaa
mov
pushf
cmc
lahf
sub
dec
xchg
xchg
cmpsl
pushl
dec
movl
jp
cmp
and
bound
add
mov
inc
mov
outsl
bsr
leave
test
cmp
jmp
mov
xlat
inc
addr16
repnz
fstpl
std
adc
lcall
mov
mov
xchg
xchg
inc
xor
adc
jg
outsl
popa
lret
sbb
jle
insb
mov
int
and
lcall
pop
dec
add
xor
imul
lahf
mov
dec
mov
lock
push
mov
xchg
cmp
negb
ljmp
icebp
adc
sub
jo
mov
inc
add
inc
xor
mov
stos
push
and
push
dec
cmp
std
jmp
dec
pop
dec
pop
ljmp
and
jmp
mov
outsl
add
push
ds
or
adc
and
mov
movsb
mov
cmpsb
les
inc
adc
in
in
cmp
idivl
sti
push
push
pop
das
and
mov
dec
lods
notb
push
xor
test
mulps
arpl
mov
fninit
sub
adc
mov
fisubl
push
imul
xchg
stos
out
mov
mov
int3
cmp
dec
or
sub
inc
xchg
cmc
test
jge
cmpsb
nop
call
pop
rclb
inc
fsubrp
lret
jne
pushf
or
xor
pop
push
inc
push
testb
dec
das
mov
adc
pop
cmp
cld
sub
inc
addb
roll
enter
ret
cwtl
xor
adc
xor
pop
jb,pt
and
insb
cmp
xor
lret
jg
pop
lds
and
add
fisttpll
adc
stos
scas
add
aas
jl
in
cmp
inc
and
sbb
arpl
ds
dec
aam
pop
lock
mov
fs
in
cmp
xor
ficoml
jmp
cmp
je
out
add
incb
leave
pop
pop
std
insl
aam
xchg
mov
push
push
mov
dec
push
aad
divb
mov
mov
xchg
inc
test
or
jno
cmpsl
and
xor
scas
mov
add
add
mov
mov
cmpsl
shlb
or
or
addr16
imulb
addl
mov
shlb
xchg
or
fidivrs
shl
lahf
iret
push
mov
push
das
xchg
mov
scas
cmpsb
mov
xchg
cmpsl
js
xor
int3
dec
sahf
jo
fidivs
push
inc
mov
xchg
push
sub
lahf
sbb
jmp
lock
and
inc
dec
or
dec
lcall
sbb
adc
mov
into
inc
daa
mov
dec
dec
or
repz
popa
add
into
mov
test
sahf
pop
adc
adc
adc
lret
mov
inc
mov
filds
mov
cmpsl
ss
out
inc
inc
pop
test
pop
or
sbb
lcall
mov
add
cli
cmp
push
inc
inc
lahf
jl
popf
insl
mov
push
fistpll
add
unpckhps
adc
or
mov
daa
pop
jnp
pop
scas
sarl
vunpckhpd
je
out
add
xchg
scas
push
fnsave
jne
hlt
cmp
wbinvd
in
xor
test
jnp
out
xchg
pop
sarl
mov
or
or
out
loope
and
nop
in
mov
mov
xchg
loop
out
fidivrs
int
xchg
pop
outsl
jge
cmp
dec
add
jno
addr16
stc
dec
jbe
in
nop
aam
scas
cmpsl
sbb
jno
jno
lock
in
or
aam
push
aad
arpl
dec
lock
push
or
mov
push
push
add
sub
add
mov
std
into
mov
jno
repz
sahf
mov
pop
mov
jae
xor
out
pop
ja
cmp
jb
sub
mov
mov
repz
sahf
dec
cmp
push
out
aam
xor
inc
into
aas
dec
loopne
andl
ss
inc
lds
fwait
jb
je
movsl
into
push
jb
add
lcall
fwait
pop
es
das
stc
xor
rclb
repnz
or
int3
nop
push
enter
add
xchg
les
push
cmp
aaa
aam
cltd
cmpsl
int3
jb
enter
mov
mov
sub
and
mov
push
xchg
xchg
xor
inc
cli
xlat
add
std
nop
xchg
inc
xor
xchg
mov
lcall
lcall
imul
pop
into
imul
jne
jo
gs
sub
fstpt
sub
orb
aas
or
sbb
je
pop
dec
xor
dec
dec
adc
inc
cli
sub
jns
mov
clc
scas
hlt
std
scas
sub
int
or
mov
loope
push
scas
sub
mov
dec
cmp
jnp
inc
les
ret
xor
push
push
jno
lcall
inc
and
es
jmp
jp
adc
jp
icebp
mov
dec
and
or
push
push
cli
cltd
jge
or
repz
fs
push
sub
nop
dec
out
clc
test
mov
xchg
out
loopne
lcall
out
arpl
and
lret
scas
iret
or
ret
mov
push
cwtl
std
je
lret
in
loopne
or
call
sbb
int
in
push
les
in
cltd
adc
pop
mov
xchg
adc
mov
imul
mov
shlb
enter
push
ja
fwait
loopne
ss
mov
repnz
std
notl
inc
fcoml
rolb
mov
pop
cltd
or
mov
or
dec
in
push
pop
icebp
pop
int
jle
inc
fsubs
aad
data16
popa
aaa
icebp
arpl
sub
bound
test
or
pop
or
shlb
subl
cmp
adc
subb
das
or
sbb
adc
rolb
dec
mov
into
insb
iret
scas
and
and
pop
lret
loope
cmp
xlat
in
in
js
push
data16
fs
mov
scas
xor
sbb
insb
inc
push
fistl
pop
xor
cmp
xchg
xchg
div
sbb
dec
std
out
scas
xor
bnd
sub
ret
sbb
push
pop
or
subb
cmp
subb
sti
shr
add
fisttps
hlt
sbb
lods
in
mov
or
mov
xor
or
movsl
mov
nop
test
jnp
sub
xor
pushf
call
call
je
cmp
in
or
jge
jo
add
mov
adc
dec
into
addr16
mov
mov
or
xchg
dec
es
push
repz
into
xchg
push
jbe
sub
jno
ret
in
and
cmc
push
daa
sbb
mov
pusha
in
arpl
cmc
in
ljmp
lret
aas
jle
pavgw
or
sub
les
ret
or
and
dec
into
rolb
rol
faddl
xchg
mov
dec
jb
mov
js
or
push
movsl
cmpsl
add
dec
xchg
and
add
test
in
aam
fstpt
shlb
call
xor
pop
loop
dec
xchg
in
mov
sbb
int3
push
adc
fisubs
out
mov
push
dec
adc
loopne
xor
dec
pop
ret
xchg
push
add
jae
stos
repnz
xor
add
int
mov
push
fnstsw
aam
inc
xchg
mov
cmpsl
fmuls
in
mov
sbb
mov
pop
enter
sbb
stc
mov
cmpb
inc
dec
je
sub
jle
sahf
scas
in
mov
jmp
lahf
xor
les
jl
pop
enter
inc
push
nop
dec
out
scas
dec
dec
mov
cmp
scas
xchg
addr16
mov
dec
sti
scas
enter
jmp
ficompl
pop
jl
test
cmp
mov
test
dec
cmc
outsb
insl
inc
clc
cs
call
and
aam
shll
jb
and
and
jle
into
fwait
sarl
fwait
push
mov
cli
icebp
jnp
dec
push
push
jno
sbb
enter
pop
and
jecxz
xor
leave
gs
pop
popa
dec
sahf
js
pop
sub
fnstenv
fcmovnu
sub
xchg
andl
clc
arpl
add
pop
popf
addl
and
ja
pusha
adc
fsts
les
pop
mov
rol
in
jge
ljmp
fsubrl
mov
sbb
pop
lds
push
mov
int
dec
and
aam
out
test
push
push
xor
pop
lods
outsw
mov
mov
sub
daa
jne
mov
jg
addr16
pop
rolb
jbe
lret
pusha
ja
mov
cmpsl
fcompl
ret
add
add
xchg
jbe
sub
rcr
xor
frstor
jle
movsb
xor
int
aas
mov
daa
outsb
jno
xchg
outsl
ljmp
je
mov
jmp
push
stc
dec
notb
adc
ljmp
jle
sbb
xchg
pop
adc
mov
jmp
mov
jns
mov
je
fldenv
pop
daa
roll
pop
clc
out
sub
rorb
mov
or
cld
push
call
xchg
das
sub
mov
mov
dec
fcompl
dec
cltd
in
dec
push
dec
add
fisttps
nop
mov
popf
cli
daa
mov
xlat
out
mov
in
leave
xchg
mov
sub
inc
sahf
jl
pop
cld
and
jge
pop
in
outsb
les
dec
add
mov
mov
inc
dec
and
into
cmp
mov
sub
dec
adc
add
jmp
das
movsb
movsl
dec
ds
xchg
insb
je
enter
sbb
pop
das
push
fimull
push
fildll
mov
sub
or
insb
jns
out
and
pop
xor
das
std
dec
repz
imul
xor
jg
cltd
in
xor
cmp
sub
lods
cmp
lock
out
fisttpll
out
push
xchg
cmpsb
cmp
repz
mov
or
dec
xchg
mov
addl
mov
and
rcl
mov
mov
jmp
push
movsb
int3
and
adc
std
mov
push
mov
lock
aad
mov
adc
mov
aaa
mov
push
dec
ds
xor
sub
lock
xchg
push
in
mov
ss
adc
ja
mov
lret
mov
adc
clc
or
mov
lcall
iret
mov
and
sbb
mov
sub
icebp
mov
pop
mov
test
rcrb
adc
adcl
jb
sbbb
lods
jmp
ret
shll
test
das
cli
mov
roll
cli
sub
pop
add
pop
adc
rolb
jo
mov
jge
testl
repnz
loopne
aad
out
aas
xchg
roll
in
in
inc
repnz
mov
sub
rcl
cld
mov
mov
filds
nop
bswap
push
adc
lock
inc
hlt
push
inc
out
sub
fnsave
adc
fwait
test
clc
frstor
cmpb
inc
xor
hlt
push
pop
mov
pop
adc
or
cmp
movsl
in
inc
orl
inc
sub
fadd
fldt
cmpsb
sbb
enter
sbb
ds
enter
je,pt
into
adc
fidivrl
pop
lock
dec
add
mov
pop
setp
xchg
arpl
mov
imul
adc
fincstp
push
xor
add
movsb
cmc
int3
scas
sbbb
mov
xor
add
push
in
or
jbe
sub
mov
ret
dec
add
movsl
lods
imull
push
push
rorb
inc
jb
inc
add
cmp
test
ret
hlt
cld
jecxz
xchg
sahf
mov
scas
lds
xchg
mov
test
inc
out
rcrb
fisubs
and
int3
outsb
push
sbb
jb
fsubl
mov
sub
cmpsl
pushf
popf
imul
inc
sub
test
push
sbbb
test
sbb
adc
sti
jae
add
shrl
iret
mov
scas
test
in
out
and
xchg
push
iret
and
nop
xchg
inc
es
xchg
mov
mov
lds
loopne
sbb
adc
pop
js
nop
outsb
mov
cmp
test
ja
inc
sub
les
jae
add
cli
cld
stc
pop
xchg
dec
pusha
pop
lret
arpl
add
mov
xchg
out
xor
mov
push
ljmp
arpl
addr16
cmp
mov
aam
adc
es
and
pushl
rclb
mov
xchg
mov
cmpsl
adc
pop
repnz
xor
xor
inc
popf
jo
lahf
inc
loopne
imul
jl
jl
sar
cmp
mov
jbe
adc
sarl
ds
mov
fldenv
push
and
int3
testl
mov
xlat
jae
add
mov
mov
pop
ds
mov
scas
mov
pushf
sub
iret
cmp
sbb
xchg
sbb
sub
push
arpl
xchg
jmp
or
cli
inc
ret
xchg
mov
dec
mov
pop
out
adc
pusha
push
pop
add
jnp
mov
ljmp
xchg
xchg
dec
fiadds
arpl
inc
or
and
aam
mov
push
pop
mov
mov
addr16
add
imul
mov
jae
xchg
sub
insb
mov
mov
mov
pop
cmp
add
xor
xlat
jae
mov
ss
mov
jmp
lds
movsl
ja
leave
and
xchg
loop
xor
enter
adc
adc
addr16
mov
out
xchg
jg
into
add
dec
out
xlat
push
xor
pop
xor
jae
jne
into
je
or
mov
shrl
repz
cwtl
fisttps
divl
lahf
cld
fmuls
sub
outsb
imul
aam
pop
fildl
cld
enter
mov
lret
pushf
pop
out
add
arpl
xchg
xor
out
pop
je
cmpsb
and
pusha
outsb
sub
dec
push
mov
sub
mov
xor
and
mov
xchg
cs
sub
xchg
jo
push
ljmp
bound
addr16
fs
jl
mov
or
divb
sub
sbb
lahf
pop
xchg
cld
pop
cmp
in
loop
jo
subb
xchg
xchg
lcall
mov
mov
cmp
xlat
sahf
ljmp
push
xor
cmpsl
cmp
xchg
dec
push
dec
in
push
or
rcl
scas
in
outsb
cli
inc
lcall
push
mov
inc
pop
mov
into
je
fs
ret
cs
cmp
into
movb
xor
pop
call
movsl
pop
lcall
test
lahf
xchg
icebp
imul
push
inc
pushl
cmpsl
rcpps
dec
in
adc
popf
pop
pop
mov
sbb
ja
hlt
or
jle
ret
mov
cld
out
lds
jle
mov
adc
inc
sbb
outsl
scas
sub
xchg
jmp
ficoml
and
hlt
jge
lret
mov
add
in
stos
push
imul
add
dec
jno
insb
dec
and
adc
xchg
imul
aad
sti
loop
fsubrl
and
xorl
je
sbb
das
enter
adc
lsl
push
dec
repz
and
insl
jg
fdivp
push
xchg
push
xchg
push
ljmp
dec
sti
cs
xchg
mov
pop
mov
lret
mov
addb
shr
mov
dec
dec
orl
pop
je
cmp
xor
jnp
adc
inc
inc
push
cmp
popa
test
mov
jecxz
imul
filds
loop
pop
mov
loopne
pop
mov
pop
bswap
lret
jno
je
outsl
pop
cmpsb
and
insl
je
mov
cmp
rcrl
lea
cli
add
mov
inc
dec
pop
call
mov
pop
aam
les
negl
pop
inc
or
popf
mov
pop
cmp
mov
in
jno
aaa
mov
jns
inc
lods
imul
xchg
pop
imul
pop
mov
push
xchg
mov
sub
push
cmp
pop
or
pop
mov
jle
enter
paddw
sub
les
add
loope
add
jl
jle
cmpsl
mov
fmul
in
add
dec
lods
mov
stc
and
sbb
adc
imul
dec
ljmp
xor
repnz
jmp
sub
mov
jae
hlt
add
cmp
icebp
pop
push
lahf
xchg
mov
aas
aaa
sahf
push
in
lock
lea
outsb
cwtl
mov
cmp
xchg
arpl
jle
pop
push
call
adc
sbb
not
jnp
push
mov
mov
cmp
andb
jmp
popf
jne
movsb
call
pop
mov
or
std
or
shll
iret
sub
jmp
ss
shrb
jo
sbb
jnp
jno
cwtl
inc
out
cmp
cltd
fcomp
fwait
ljmp
adc
loop,pt
out
outsb
mov
enter
cmp
mov
aaa
xchg
inc
mov
lcall
xchg
add
sarl
in
xchg
rclb
and
mov
div
cmpsl
pop
xchg
stc
das
jmp
pop
into
fisttpl
xchg
dec
leave
push
or
inc
add
clc
push
repnz
adc
xor
sub
mov
ret
mov
dec
sub
or
xchg
and
mull
pusha
xor
sub
jl
stos
in
sbb
das
lds
jle
push
xor
sbb
jo
outsl
fistps
bound
cs
mov
in
xor
clc
xor
mov
cmp
inc
jp
dec
es
std
cld
inc
pop
stc
or
inc
shlb
push
inc
dec
jbe
mov
ljmp
aas
inc
xchg
pop
mov
aam
div
mov
test
push
lret
aaa
jo
popa
aas
out
inc
les
bt
and
pop
mov
je
mov
sbb
jmp
cwtl
mov
add
sub
fs
mov
mov
push
sub
or
inc
icebp
jle
es
mov
je
lds
fildll
push
addr16
push
adc
xchg
jb
push
daa
and
push
loop
jmp
faddl
out
mov
pop
push
push
mov
sbb
and
repnz
out
cmpsl
push
and
out
add
mov
xchg
and
jno
lods
mov
pushf
popa
insb
pop
jecxz
sbb
add
inc
les
and
addl
pushl
add
mov
test
dec
mov
adc
in
mov
inc
mov
sbb
call
icebp
inc
fists
add
adc
inc
repz
aaa
leave
dec
add
jo
push
and
iret
xchg
or
test
xchg
adc
mov
cltd
outsb
and
inc
fnstsw
add
loop
arpl
lret
aas
adc
and
push
dec
les
fwait
add
mov
cmpb
cld
mov
enter
enter
rclb
test
repz
jae
popf
adc
sbb
xchg
and
and
dec
shlb
xor
or
add
adc
outsl
xor
xchg
ret
mov
cmc
cmpsl
cld
pusha
outsb
mov
mov
les
adc
mov
add
popf
hlt
mov
cmp
adc
jnp
cmp
cmp
int
adc
xor
popf
mov
pop
jno
sub
push
les
and
cli
push
pusha
dec
divb
xchg
jno
dec
push
pop
mov
cltd
fs
loope
pusha
imul
lret
mov
cld
mov
insl
test
cmpsb
stos
fisttpll
in
xchg
and
mov
add
stos
jno
pushf
push
ss
push
sub
test
mov
xchg
push
jl
xchg
xor
incb
adc
mov
mov
dec
les
mov
xchg
pop
mov
imul
add
mov
push
adc
mov
mov
loope
outsl
out
in
add
loopne
cmp
cmc
sbb
outsb
shrl
sbbl
std
clc
fcomp
mov
sub
loop
lcall
shll
cmpl
iret
jmp
and
jb
mov
fstl
cmpsb
and
ret
leave
mov
cmp
clc
js
xchg
inc
mov
movb
add
xchg
mov
or
cmp
sbb
pop
sbb
jae
ds
hlt
rol
and
pop
add
dec
aam
mov
pop
sbb
mov
push
repnz
sbb
jae
add
data16
ds
dec
mov
jae
mov
rcll
int3
or
cmpsl
xor
ds
stc
cli
scas
xchg
pushf
out
add
jo
ss
jge
das
mov
addr16
insl
add
cs
fiadds
cmp
dec
int
and
jns
pop
stos
lds
pop
loope
or
sbb
push
jae
jecxz
dec
xchg
addr16
ror
movsl
xor
dec
or
aad
jmp
int
fcmovne
xor
ret
mov
clc
cwtl
into
icebp
push
test
sub
cmpsb
inc
and
aad
cmp
idiv
jne
lods
push
and
clc
xor
cmp
idivb
mov
loop
cs
sarl
fstl
cmp
cmp
mov
add
in
xor
out
ds
sbb
xchg
mov
or
insl
imul
arpl
lods
or
cmpsl
or
out
sub
cld
sbb
enter
orl
inc
cmp
ror
inc
xor
nop
or
pop
or
dec
xchg
adc
sar
call
pop
ljmp
ret
in
int3
push
imul
jge
xor
jg
lods
jne
push
cwtl
xchg
push
lods
dec
mov
and
jecxz
aas
orb
mov
adc
fimull
and
pop
xor
mov
pop
sub
fistpll
adc
jge
add
in
mull
sbb
xchg
out
scas
sbb
add
mov
adc
mov
or
mov
cmp
cmpsb
adc
and
ffreep
call
call
jg
repz
jnp
xchg
push
mov
jp
xor
fdivp
rcrl
lock
je
jmp
fs
scas
jle
add
adc
lods
mov
xchg
movsw
ljmp
push
popa
pop
in
jno
dec
in
sub
pop
repnz
cmpsb
push
imul
negl
outsb
sub
enter
or
inc
rcrl
xor
sub
jns
int
xor
mov
std
pop
push
dec
lea
insb
iret
loope
sbb
pop
cmc
decb
js
xchg
mov
mov
repz
es
cmp
in
or
mov
sub
sub
test
push
stos
mov
sub
push
pushf
dec
mov
imul
jo
repnz
inc
test
pusha
push
pop
pop
fidivs
xchg
push
mov
push
cmpsl
ds
pop
rcl
std
popf
lea
and
ds
imul
xchg
lock
negb
add
loope
pusha
mov
xchg
cmp
imul
icebp
punpckhwd
adc
mov
femms
mov
and
push
loop
sar
repnz
or
clc
loop
fiaddl
orl
inc
xlat
cwtl
dec
ss
outsb
mov
aas
cli
js,pt
inc
xor
push
notb
sbb
std
mov
cmp
data16
mov
call
popf
mov
dec
movsl
push
xchg
mov
cmp
ds
lock
jle
stos
mov
xchg
iret
loop
adc
xchg
jge
or
mov
push
adc
dec
lret
adc
inc
or
cmp
push
jmp
movsb
or
sub
push
push
xchg
lret
sbb
and
hlt
insb
out
xchg
sbb
rcrb
popa
call
xor
mov
jae
lods
or
lret
pusha
sub
xchg
pop
arpl
and
loope
out
imul
jecxz
mov
mov
and
pop
pop
fcompl
out
test
pop
push
cli
ljmp
leave
add
and
mov
add
loope
xchg
scas
and
cltd
sbb
int3
pop
hlt
mov
addl
xchg
cmp
cmp
outsl
jns
inc
ds
add
inc
cli
out
sbb
movswl
xlat
fs
add
aaa
in
ret
je
cld
cmp
cwtl
lret
push
push
xchg
xchg
arpl
notb
lods
cmovs
lret
fisttpll
inc
pop
out
mov
xor
jle
mov
lahf
mov
cmp
pop
popa
ftst
jae
fstl
jmp
sbb
or
add
stos
insb
popa
sub
push
clc
mov
mov
xchg
stc
js
dec
mov
sbb
sbb
pop
out
aam
and
clc
repz
or
out
repz
inc
aaa
and
xor
scas
dec
sbb
repz
popa
fstpt
xor
gs
adcl
adc
out
mov
mull
mov
mov
xchg
testb
cmpb
dec
xchg
aad
scas
stos
jp
inc
int3
loope
xchg
das
cmp
and
sbb
adc
sub
push
and
mov
out
or
enter
bound
ret
xchg
mov
dec
sub
fnstsw
into
in
jle
adc
cmp
inc
aam
mov
cwtl
mov
sbb
inc
inc
das
xchg
hlt
mov
pusha
cld
jne
xor
cmpsl
push
out
xlat
stos
roll
jne
inc
mov
testb
jae
and
jmp
cmp
std
lcall
add
pop
into
cmpsl
arpl
mov
dec
loopne
aas
xor
clc
jmp
rcrl
mov
push
cmp
cmp
xor
push
mov
xlat
or
addr16
xor
add
dec
cmp
jge
lods
adcl
fstpt
fistpl
into
fisttpll
bound
mov
bnd
loope
popa
nop
enter
mov
enter
jno
aas
push
les
cmp
xor
push
pop
gs
jne
push
in
clc
mov
hlt
mov
int
aas
push
and
lods
pop
jge
mov
es
mov
jp
mov
sbb
jae
in
arpl
stc
cmp
sub
adc
cmpsb
lock
test
fwait
mov
mov
out
mov
iret
movsb
sbb
inc
mov
jno
xchg
xor
mov
stos
fstps
in
aad
leave
jle
jb
xchg
mov
stos
fidivrs
insb
xchg
fistps
out
push
jb
testb
repnz
jle
push
call
fstpl
iret
fwait
jne
xlat
incl
mov
sub
lret
aam
flds
xchg
rorb
and
mov
push
lds
rorl
imul
rclb
movsl
faddp
mov
xchg
pop
out
insb
and
xchg
fdiv
xor
jl
mov
adc
dec
mov
fimuls
dec
mov
xchg
pop
push
xor
scas
push
add
sub
mov
sahf
push
push
je
je
rcll
loop
pop
movsl
shll
out
flds
inc
add
xchg
jns
scas
mov
add
or
outsl
jg
dec
pushf
inc
jmp
fidivl
mov
lahf
mov
xchg
dec
out
push
xor
or
mov
out
or
lret
je
pop
mov
stos
add
mov
mov
sbb
jl
sub
push
dec
and
add
and
dec
mov
and
ficoml
xchg
jge
xchg
fistpl
pusha
sub
push
test
sub
mov
add
sbb
push
push
subb
jb
es
sbb
fstps
stos
pop
mov
int
ds
bound
mov
iret
jecxz
lcall
push
imulb
mov
cmp
pop
push
in
push
loope
nop
ja
lods
stos
ja
push
rorl
mov
aaa
nop
sarl
jae
mov
jne
fimull
call
mov
push
fildll
pushf
sbb
daa
lret
js
push
pop
mov
enter
push
insl
push
xor
dec
stc
sub
mov
xchg
dec
dec
jmp
inc
or
jmp
clc
inc
pop
ja
inc
jle
cmp
cmpsl
adc
mov
push
mov
push
repnz
clc
mov
jno
mov
inc
movsb
out
das
rcll
jns
xchg
or
clc
test
ljmp
pop
inc
test
icebp
loop
sub
loop
xchg
adc
xor
in
cmp
aas
mov
pop
jmp
and
int3
cmpsl
jne
je
xchg
outsb
iret
sub
fst
pop
dec
cld
orb
jecxz
add
mov
or
mov
repnz
pop
shlb
jb
cmpsl
dec
pop
or
int3
cmp
cltd
mov
xor
and
out
rorb
mov
stc
cmpsb
daa
jl
push
sbb
fbstp
test
out
sub
jge
dec
cmc
jecxz
cld
ret
add
stc
xor
cmp
gs
xchg
pusha
push
repnz
jnp
mov
cmpsl
adc
iret
daa
pop
sbb
and
nop
pop
bswap
push
xor
pop
repnz
mov
push
pop
jp
outsb
xor
xchg
loope
cltd
scas
mov
mov
pop
push
sbbb
dec
insl
jae
mov
pop
dec
fwait
mov
fsubl
clc
xchg
lret
inc
les
lahf
repnz
mov
jg
mov
or
xchg
rolb
nop
adc
cmp
stc
xor
jbe
dec
push
cwtl
jnp
xor
lcallw
daa
in
cli
sub
dec
outsl
cmp
lock
test
push
add
pop
jmp
mov
pop
movsb
loopne
xchg
sbb
dec
jns
mov
lahf
por
les
fcmovu
pop
lret
hlt
pop
xchg
mov
inc
mov
je
je
pop
pop
loop
movsb
jbe
mov
push
dec
es
sbb
mov
pop
dec
insl
imul
out
add
movsl
test
sti
out
nop
les
imul
pop
push
push
test
sub
xchg
mov
fs
movsb
and
push
inc
pop
xchg
jmp
hlt
push
fldcw
push
xchg
ret
jmp
inc
add
mov
fldenv
and
mov
inc
dec
adcb
sbb
xchg
sub
frstor
insb
es
inc
mov
fidivs
xor
cld
cmp
pop
nop
sarl
aas
xor
das
test
and
inc
in
test
or
mov
rolb
mov
pop
aam
lea
cmp
addb
inc
loope
scas
jbe
add
lea
dec
insb
lods
mov
jbe
add
iret
cmp
pop
mov
enter
rcll
pop
in
jns
movsl
sub
cmp
sbb
je
rolb
xor
lods
imul
add
mov
or
cmp
cs
xorb
mov
mov
fldcw
test
cmp
imul
jp
fcomps
je
out
cmpsb
je
sbb
addr16
inc
pop
das
pop
scas
adc
xchg
sbb
cmp
mov
xlat
mov
lret
aas
frstor
dec
inc
popf
and
std
lea
xlat
sbb
jb
insb
adc
mov
mov
in
or
inc
out
repz
sub
add
std
in
jmp
in
jae,pn
push
jnp
inc
out
rcr
sarb
neg
mov
loop
pop
and
ja
add
test
faddp
pop
adc
test
xor
sahf
xor
imul
leave
inc
lods
lahf
mul
inc
dec
sbb
xchg
mov
into
sbb
cmp
out
dec
jecxz
leave
inc
jp
cmp
cwtl
push
xchg
stc
dec
add
xchg
push
mov
dec
sbb
sub
or
stc
inc
adc
or
push
pop
loope
mov
add
call
jne
flds
push
push
call
int
aam
lods
jae
pop
dec
xor
ret
repnz
aas
je
sub
adc
aas
pop
clc
mov
push
pusha
xchg
mov
adc
jb
aam
scas
adc
sahf
orl
gs
push
add
pop
imul
loop
mov
sahf
rcl
dec
mov
cmp
rolb
pop
ss
lret
popa
push
ljmp
xchg
adc
repnz
mov
sub
outsb
in
loopne
jns
pushf
jae
cs
mov
movsb
daa
gs
jmp
mov
or
push
cmpsl
xchg
arpl
push
pop
add
loop
jae
in
out
ret
repz
add
sub
clc
and
fcmovne
or
push
jnp
dec
outsb
test
flds
js
add
rclb
inc
in
ds
outsl
jbe
pop
adc
mov
decl
stos
sbb
shll
inc
movsl
jmp
sbb
xchg
push
ret
cmp
pop
loop
sbb
xchg
push
lock
sbb
mov
mov
lahf
inc
iret
mov
iret
scas
dec
popa
sub
sub
sbb
xchg
inc
fidivl
shl
sti
ss
dec
add
in
push
inc
mov
addr16
mov
xchg
repz
andps
lea
movsb
mov
jp
pusha
or
aam
test
test
cmpsb
inc
push
pop
jl
test
mov
adc
les
scas
ret
jg
push
and
data16
aam
lds
iret
fs
sbbl
sub
mov
mov
mov
outsb
xor
cmp
lds
mov
es
xor
sbb
adc
nop
cli
movsb
loop
mov
scas
cmp
testl
dec
dec
jecxz
mov
scas
mov
or
fisubl
add
cmp
clc
or
pop
decl
rcll
movsb
xor
jbe
or
mov
jmp
mov
fcmovnbe
xchg
cmp
jo
loope
cmp
roll
jne
test
sbb
cwtl
in
test
xor
mov
adc
sahf
js
pop
aad
jle
insb
cltd
xchg
ds
repz
or
jno
sbb
dec
mov
gs
and
dec
mov
ficompl
xchg
xor
scas
sub
leave
xchg
ret
mov
sbb
mov
cmpsb
fs
and
mov
xor
or
xchg
mov
jmp
jne
outsl
dec
lds
insl
das
xchg
imul
jp
push
push
or
imul
pushf
sbb
adc
or
pop
sbb
mov
loope
hlt
mov
imul
bswap
sub
mov
jmp
into
push
mov
mov
add
sub
repnz
xchg
js
dec
add
xchg
nop
ljmp
or
adc
sub
les
push
mov
ss
jle
daa
pop
dec
outsl
adc
idivl
mov
push
adc
pop
imul
dec
test
mov
dec
ja
cwtd
movsb
cs
out
das
shl
xor
sbb
lock
mov
in
ret
inc
pop
cmpsl
jbe
jmp
aam
dec
push
inc
pop
aas
inc
add
mov
dec
jmp
pop
push
cmp
push
push
ja
not
xor
in
adc
ss
repz
movsl
xchg
add
sbb
xchg
int3
cmp
mov
shlb
sbb
mov
in
dec
inc
mov
int3
add
lock
cmpsl
icebp
mov
and
scas
add
add
push
mov
jne
or
dec
xchg
pop
rcll
cmpsb
test
std
stc
in
xchg
mov
clc
push
mov
in
insl
mov
mov
adcl
stc
stos
dec
out
in
enter
mov
pop
pop
jp
jae
arpl
fsts
pushf
dec
gs
push
pushaw
pop
or
jae
and
cmpb
sbb
inc
lods
and
mov
sbb
push
lea
ret
into
gs
sub
rcr
addb
push
sbb
cli
int3
cli
inc
mov
movsb
shll
mov
and
outsb
or
dec
jno
sbb
jecxz
imul
xor
lahf
int
xchg
pop
xchg
adc
into
je
repnz
test
cltd
fucomp
test
or
ss
out
ret
sbb
pop
jo
cltd
or
test
sbb
out
cmp
nop
xor
std
adc
je
mov
lret
lock
inc
jo
outsb
dec
lahf
repz
lcall
fdivl
ja
aad
pop
cmp
std
loop
loope
fs
jns
add
sbb
mov
lods
sub
les
cmp
aas
xchg
sti
adc
push
sahf
repnz
add
dec
in
pop
push
mov
jae
sub
dec
mov
pop
push
jp
lods
dec
lods
jno
adc
repz
xor
xchg
pusha
cmpsl
hlt
add
fwait
xchg
pop
adc
fildll
setno
mov
add
orb
mov
push
sbb
lock
jbe
adc
pop
xor
pop
pop
cmp
into
cmp
shr
sbb
mov
adc
mov
add
in
inc
lods
pop
aas
aad
addr16
mov
cld
repnz
xchg
pusha
cwtl
mov
lock
ljmp
sub
sbb
inc
jbe
repz
adc
aas
enter
stos
mov
out
lea
push
hlt
adc
push
cmc
jmp
inc
mov
pushf
cmp
cmpsl
mov
or
dec
jecxz
push
stos
pop
sub
sbb
cmpsl
cwtl
mov
lds
lds
push
repnz
popa
orb
cmpsl
mov
xor
into
fiaddl
cli
sbb
fnsave
and
leave
adc
or
xchg
rcll
mov
xor
mov
add
and
push
insb
pop
mov
fidivrl
add
roll
sub
cltd
mov
and
xchg
add
pop
and
cltd
sbb
push
xlat
xchg
xor
frstor
sub
pop
in
or
pop
push
mov
loop
je
dec
shrl
shlb
lock
addb
mov
mov
sti
dec
pushf
rolw
xor
jg
rorl
cmpsl
lock
fstpl
clc
dec
insl
inc
mov
mov
stos
cli
inc
jge
pandn
pop
adc
stos
ss
or
lret
and
cld
out
fstps
cmpsl
push
and
arpl
push
es
loope
cltd
dec
fdivl
cwtl
jge
icebp
int
pop
push
dec
inc
daa
sub
pop
outsb
mov
cmovs
adcl
pop
insl
insb
xor
pop
out
mov
and
inc
inc
jb
ljmp
cmp
idiv
sub
xor
mov
mov
adc
clc
sbb
movsb
cmpsl
clc
bound
or
inc
das
push
iret
mov
out
rcl
mov
lock
shlb
sbb
scas
mov
mov
bound
push
push
xor
rclb
xchg
xor
bound
jnp
push
dec
cwtl
inc
inc
xor
xor
sbb
cmp
out
testl
and
adc
shr
fidivrl
inc
in
inc
pop
inc
xchg
xchg
les
jnp
shll
xchg
and
pop
xor
xchg
cmp
or
loope
into
ret
mov
pop
mov
mov
and
push
adc
stos
ret
iret
jle
cmpsb
jecxz
xchg
hlt
xchg
sbb
repz
sbb
pop
fldt
into
shll
stos
mov
outsl
mov
mov
fld1
cmc
dec
sbb
dec
mov
mov
push
or
mov
pop
ss
in
push
mov
test
arpl
inc
pop
pop
fs
xchg
and
icebp
mov
lea
bound
call
bound
mov
xchg
or
lods
idivl
jae
movsb
inc
sti
jecxz
cmpsb
xchg
and
fwait
mov
mov
mov
and
sbb
xor
pusha
scas
das
push
and
imul
pop
outsl
enter
arpl
in
pop
out
ds
xor
mov
imul
adc
dec
sub
insb
jp
lcall
inc
out
aam
idivb
testb
scas
icebp
cld
outsb
orl
xor
add
jg
out
mov
adc
xchg
add
iret
scas
fcmove
jno
inc
cs
mov
jp
mov
nop
and
mov
lcall
push
and
inc
xchg
xor
push
arpl
sbb
push
pop
test
mov
push
mov
push
mov
pushf
lods
inc
add
addr16
repz
inc
mov
and
rcrl
imul
std
repnz
pop
push
adc
dec
pop
in
pop
and
jo
call
bound
jle
scas
sbb
sbb
orb
aad
fmull
leave
int3
push
jge
jmp
fidivs
jbe
fimull
jnp
popa
stos
cli
add
les
push
or
in
cmp
xor
sub
rclb
dec
flds
fdivs
stos
addr16
clc
les
adc
test
stos
lret
aas
inc
gs
and
mov
sti
or
xor
divl
aad
lods
xchg
add
in
jge
or
stos
jmp
test
xor
mov
jl
imul
sti
mov
cmpsb
and
ds
flds
xchg
decl
nop
pop
dec
inc
out
cmp
test
inc
jg
int
lea
loop
sub
es
in
cmp
cmp
inc
int
mov
cmp
lods
cld
in
cmpsb
xchg
sbb
push
push
and
or
lods
ds
adc
mov
in
cmp
lock
lock
jns
jg
mov
dec
mov
in
mov
pop
and
mov
mov
cltd
or
call
mov
ja
adc
adc
lcall
jl
cmp
iret
xor
aaa
xor
jg
sbb
mov
fbstp
cmpsb
les
mov
xorl
dec
das
in
ljmp
pop
lret
bound
xor
stc
sub
mov
icebp
insl
loop
jbe
aas
push
push
pop
mov
ds
or
xchg
outsb
outsl
lret
or
push
jg
clc
loopne
sub
add
jbe
mov
out
dec
das
mov
cmp
jecxz
mov
xor
or
cmpsb
rol
gs
pusha
mov
fists
mov
out
hlt
cmp
ja
or
lods
adc
push
test
fucom
iret
xchg
test
push
jl
pusha
aas
jl
clc
movsl
sbb
sbb
repnz
aam
inc
pop
mov
jae
mov
add
lcall
orl
hlt
fisttpll
pop
jbe
sti
sbb
or
sarb
dec
incl
and
sbb
add
inc
out
rolb
jns
add
andl
xor
stc
cmp
sub
inc
adc
or
sbb
aaa
aad
pushf
lock
pusha
loopne
mov
inc
or
sbb
bound
inc
add
lret
cmp
imul
jge
mov
icebp
loope
fstps
mov
sbbl
jbe
into
inc
stos
pop
fistl
pushf
xor
out
mov
pushf
stos
sti
xchg
dec
cs
leave
dec
fidivrl
shrl
mov
bound
popa
mov
mov
cltd
cmp
xchg
mov
imul
mull
ret
xor
stc
clc
imul
jo
ds
out
xchg
ja
xchg
gs
push
ds
inc
shlb
sub
jns
and
sbb
pop
in
add
push
cmp
fisubrl
cli
jg
sub
jb
push
or
enter
sub
push
mov
cmp
jmp
leave
xchg
pop
add
lret
fcompl
adc
lods
ss
imul
mov
mov
mov
mov
add
mov
out
and
jno
lds
sti
leave
push
lods
or
cmp
inc
insl
mov
sub
pop
dec
repnz
mov
cld
out
xlat
xor
sarl
mov
imul
lret
mov
pop
fcoms
dec
mov
addr16
shrl
push
adc
push
mov
mov
xor
repnz
or
mov
mov
jmp
jp
dec
jg
mov
adc
sub
cmp
adc
push
pop
pusha
shl
add
cmc
mov
push
out
stc
scas
ret
mov
mov
shrl
bnd
roll
fisttpl
xlat
or
and
jnp
ret
mov
dec
rcrb
ret
mov
inc
add
xlat
adc
add
jnp
sbb
rcrb
cld
pop
sbb
aam
fs
cmpsb
or
lock
cld
jbe
repz
and
loopne
xchg
fstps
mov
cs
stc
lcall
ret
mov
cld
xchg
clc
les
xor
xor
test
add
dec
dec
xchg
inc
les
mov
jne
sbb
sub
setns
xor
mov
scas
mov
sub
mov
in
out
aas
aaa
xor
mov
das
rcrb
cmp
jns
scas
inc
insl
xchg
popa
test
enter
fcoml
sub
sbb
add
hlt
orb
xchg
sub
lret
mov
sbb
sbb
xchg
add
bnd
cmpsb
test
jnp
xchg
cmp
adc
arpl
int3
push
fcoms
mov
cltd
iret
jne
pop
add
push
or
mov
jns
mov
add
dec
lods
icebp
lock
sbb
jge
lea
xor
jg
xchg
cmpsb
cmpsb
lea
imul
or
test
in
les
and
cmp
sbb
aas
cwtl
sub
push
adc
sti
sti
icebp
cmp
int3
pop
pop
fstpt
push
fnstsw
movsb
in
shrl
cmp
add
lock
mov
inc
add
jle
jne
or
sub
in
addr16
xor
dec
lods
imul
pop
fsubs
mov
sti
adc
cmp
mov
xlat
and
xor
jb
jle
loope
pop
loop
mov
jmp
push
mov
idivl
dec
pop
mov
mov
inc
adc
add
daa
or
push
cltd
jmp
xor
ljmp
jl
pop
divl
add
mov
jg
notl
mov
test
push
dec
xchg
and
or
inc
xchg
aam
jl
dec
adc
dec
je
test
loopne
sbb
arpl
loopne
imul
pop
rcrb
inc
pop
scas
sub
je
data16
stos
ljmp
cmp
jmp
aad
es
dec
jae
addb
test
ljmp
orl
pop
loope
stos
xchg
pop
out
imul
call
mov
push
jb
jmp
and
shrb
dec
lcall
and
cmp
into
mov
roll
cmp
sbb
pop
sub
xchg
addr16
jae
out
pop
ljmp
cmc
cmp
test
xor
ficompl
in
mov
cmp
push
test
dec
mov
shrb
jg
pop
xorl
scas
pushf
xsha1
cmpsb
dec
dec
fdivrp
fcoml
outsb
sub
jge
movsb
pusha
cltd
jp
mov
shrl
popf
jo
movb
xor
aas
pop
lret
movsl
outsb
out
xor
hlt
scas
sbb
push
sub
mov
aas
pop
je
or
xchg
imul
mov
or
adc
mov
jno
ret
aad
fistl
mov
imul
jne
mov
xor
fisttpll
mov
fcom
lock
mov
in
xor
movsb
mov
push
sti
int
es
cmp
jb
ss
xchg
mov
mov
imul
lock
xchg
mov
sub
and
or
popf
pushf
aad
js
push
fistps
jecxz
jb
jle
out
xchg
into
int3
xchg
jnp
pop
ja
nop
add
iret
aaa
or
jb
cwtl
cmp
mov
fwait
push
test
adc
mov
mov
pusha
frstor
dec
es
shlb
pop
aam
cmp
and
imul
mov
inc
mov
xchg
adc
xor
ss
xchg
and
inc
aam
imul
clc
lahf
mov
mov
push
cli
jo
adc
mov
xchg
test
and
mov
dec
push
mov
xchg
push
mov
and
in
repnz
or
test
xchg
sub
and
pop
or
lret
add
jbe
add
test
pop
xor
or
mov
insl
xor
or
mov
pop
lret
or
and
lds
jb
leave
aam
outsl
push
shlb
inc
xlat
xchg
sub
sahf
mov
xchg
orl
mov
gs
xlat
jno
dec
cli
dec
mov
add
out
xchg
test
scas
pop
mov
pop
and
push
loopne
xchg
mov
hlt
je
cmpsl
cmpsb
rolb
shll
loop
mov
orl
pop
ljmp
ja
lods
pop
je
pop
xchg
xor
lret
dec
jle
cmp
imul
pop
scas
lods
inc
sbb
lods
push
mov
shlb
mov
adc
stc
in
stc
cmp
jo
inc
sahf
stos
out
je
lods
jmp
push
and
imul
negb
fistl
cwtl
mov
fnsave
fstl
cld
sti
arpl
xlat
and
xor
fwait
std
dec
pop
sub
jo
inc
insl
and
pop
dec
xchg
pusha
andb
pop
adc
inc
std
mov
jecxz
and
shll
xor
outsl
adc
and
push
fisttps
pop
or
mov
mov
sbb
cmc
jne
sub
add
adc
std
mov
mov
in
jb
call
push
adc
mov
xchg
push
das
mov
sub
shlb
repnz
in
sub
repnz
das
imul
and
je
fimull
mov
or
sbb
jmp
push
xchg
mov
out
mov
fisubs
xchg
adc
into
and
mov
inc
push
xchg
popf
rol
out
push
dec
cld
ret
aam
les
test
andb
pop
inc
into
loope
xchg
mov
push
pop
mov
test
push
pop
lods
pop
mov
ss
mov
loopne
sbb
mov
loop
mov
jle
pop
ja
and
daa
dec
sarb
aam
jmp
jno
push
aad
jne
fidivs
and
push
lea
leave
aad
adc
in
gs
xor
mov
adc
and
pop
stc
xchg
jge
xor
pop
mov
push
xor
cmpsb
mov
bndldx
dec
push
addl
lea
je
iret
xor
jo
xor
add
adc
lahf
test
sub
mov
jno
nop
pop
and
or
aas
mov
clc
bound
pushf
mov
cmp
jo
inc
or
dec
adc
jo
std
jae
mov
addr16
add
jp
aas
out
enter
dec
mov
iret
adc
test
sahf
push
cli
pushf
push
and
inc
ljmp
pop
in
mov
xchg
out
lea
pop
and
andl
ret
sahf
outsl
out
clc
adc
sub
sbbb
lock
mov
cmpl
jg
int3
xchg
pop
add
sbb
lods
sub
add
push
divb
repnz
xor
test
pop
das
hlt
call
shl
fistpll
push
xchg
daa
sar
adc
sub
fs
cmp
push
scas
pusha
pusha
adc
cwtl
stos
js
aaa
push
jmp
cmp
repz
mov
xchg
pop
int
loop
out
ss
lods
cmp
std
mov
cmpsl
call
aas
ret
push
dec
cmp
andl
dec
pop
sti
jb
or
clc
lods
add
push
lret
les
je
je
cwtl
pop
inc
or
xor
popf
push
inc
add
mov
mov
jo
mov
imul
insl
js
sbb
ja
addl
movsb
mov
pop
mov
xor
pop
outsb
mov
pushf
test
ja
inc
xchg
movsb
jle
repnz
sbb
mov
add
push
subb
mov
int
into
mov
jb
fstp
insl
dec
int
xor
mov
sbb
mov
hlt
call
inc
in
dec
sub
cld
jmp
imul
pop
inc
loope
cmpsl
dec
xchg
or
cmp
jp
iret
xor
adc
pushf
push
outsb
push
pop
pop
xor
cli
mov
in
or
mov
pop
pop
movzwl
dec
inc
in
and
push
imul
nop
jae
divl
stos
int
cli
push
sub
or
insb
movsb
dec
xchg
push
push
aas
jnp
xor
sub
lcall
mov
push
xor
movsl
addr16
pop
xchg
xor
out
pop
ljmp
fucomp
xchg
imul
mov
mov
arpl
cmp
cmp
mov
dec
cmp
xor
pcmpgtb
fiadds
jg
dec
mov
ret
mov
sti
adc
xchg
or
mov
cmp
arpl
out
mov
mov
hlt
dec
sbb
sti
pop
jae
sbb
out
movsl
jmp
cmc
adc
add
sbb
hlt
rol
jns
add
push
shll
lcall
push
push
xor
int
icebp
and
jbe
mov
xchg
sbb
sti
out
adc
out
lods
cmc
cmpb
adc
in
mov
repnz
lahf
or
lock
cmpl
popl
dec
cmp
mov
push
sub
push
loope
out
aas
dec
lcall
jno
jmp
push
sub
sbb
call
adc
scas
pop
lods
mov
lods
jo
rclb
ret
jo
test
xchg
jle
pop
cmpsl
cld
mov
pop
hlt
cmp
cs
cwtl
mov
adc
adc
stos
sbb
jl
xlat
dec
inc
nop
lahf
adcl
push
pop
xlat
xchg
jns
movsl
lods
in
add
inc
mov
imul
or
mov
les
ja
add
mov
mov
jg
push
and
dec
mov
lock
xor
aad
in
in
inc
mov
mov
xchg
or
adc
inc
inc
jge
push
out
sub
cmp
jmp
scas
cmp
jmp
in
jns
in
rorb
jg
icebp
call
dec
jmp
cli
push
mov
mov
cmp
jecxz
sahf
jmp
mov
ss
mov
jo
xchg
fisttps
push
adc
ret
mov
or
daa
divl
or
xor
jbe
dec
xor
call
or
movsl
push
push
xchg
filds
jbe,pt
fstps
sbb
je
sbb
fs
cmc
jo
dec
mov
sahf
pop
and
and
jg
mov
push
std
lahf
add
jbe
mov
call
gs
imul
icebp
cli
jmp
aam
sub
mov
arpl
mov
ljmp
inc
out
or
adc
push
imul
mov
cmpsb
stos
lock
inc
jbe
outsl
into
sub
cmp
nop
sbb
imul
cli
ret
ds
fwait
jge
cli
dec
mov
repz
push
ror
shll
inc
xchg
daa
jo
sbb
stos
push
push
mov
fildl
xor
addl
mov
cmp
xchg
cmp
sbb
push
shll
jge
lods
push
push
addl
xchg
test
cmp
aam
jno
icebp
add
pop
and
sahf
lea
sti
add
mov
xchg
pop
push
ss
ss
lcall
push
push
and
sbb
jecxz
insl
ret
insl
push
push
sub
mov
idivb
rol
icebp
outsb
mov
call
stos
and
aas
dec
sub
add
mov
mov
sahf
fmulp
and
sahf
bound
or
mov
pop
scas
out
les
jge
cmpb
popf
out
inc
push
sub
jge
dec
test
fstps
test
mov
cmp
imul
lea
mov
mov
mov
js
dec
std
out
ljmp
mov
fdivs
je
sahf
sar
sti
xchg
inc
inc
pop
sub
aad
push
aad
bound
sbb
add
and
dec
ljmp
jmp
lods
jg
adc
aas
push
fidivs
call
aam
sbb
xor
jne
sbbl
and
bound
xchg
mov
jns
jle
and
cmp
cmp
inc
cld
aad
mov
bound
xor
subb
hlt
fs
test
cmp
cmc
xchg
lock
movsb
in
mov
scas
push
icebp
adc
popa
pop
push
ss
bound
ss
cmc
jecxz
dec
mov
loope
xor
dec
rcll
je
cwtl
jl
repnz
pushf
inc
nop
adc
dec
and
mov
xor
lea
mov
jp
mov
std
sbb
imul
outsl
pop
test
sbb
adc
repz
xchg
cmpsl
popa
fnsave
xchg
pop
xor
mov
mov
movl
ret
insl
pop
iret
ret
stos
repnz
shrb
xchg
jb
jne
jp
or
xchg
ljmp
in
sbb
sub
push
mov
lret
sbb
insb
push
jae
sub
aad
xlat
getsec
mov
movswl
sub
mov
into
push
std
pop
jg
inc
dec
imul
and
mov
insb
lock
pop
cltd
test
mov
addr16
shlb
sub
into
test
jg
pusha
push
js
fsubs
mov
jnp
fwait
rorb
mov
shrl
flds
xor
and
or
in
rcl
or
mov
fwait
or
xchg
cmp
popf
adc
mov
call
mov
add
sahf
add
insl
test
ds
shl
scas
adc
xchg
push
adc
inc
rorl
das
push
or
iret
cmp
shl
sub
icebp
dec
mov
pop
sub
xchg
lds
xor
push
inc
jg
and
cmp
fs
loope
movsb
ds
inc
pop
jp
cmp
jmp
fwait
add
jmp
pop
movl
jns
scas
loope
fmulp
mov
and
or
add
dec
cmpsl
shlb
sub
and
or
jne
add
ja
inc
enter
test
or
mov
pushf
rcl
clc
pusha
push
lret
xor
xchg
leave
push
cmpb
ret
sub
stos
jle
cltd
jo
jmp
gs
ss
jecxz
sub
and
xchg
iret
dec
imul
xchg
jg
mov
dec
aam
sub
add
xchg
xchg
aad
fs
arpl
movswl
adc
stc
xchg
sbb
add
sarb
imul
sbb
fsubr
rcrb
ljmp
and
fs
inc
bnd
sbb
std
outsb
push
bound
arpl
cs
push
jne,pt
lods
sarb
xchg
pushf
movsl
jg
je
mov
fisubrs
mov
push
add
iret
mov
aaa
popa
cmp
or
lea
jmp
add
mov
outsb
sub
mov
mov
mov
sbb
xchg
cli
jns
cli
bound
and
arpl
in
in
adc
and
sar
fsubrl
ljmp
dec
clc
sub
aad
xlat
lret
push
test
sbb
iret
fucomip
mov
mov
stos
cmpsb
ds
adc
enter
pop
cwtl
scas
cmp
in
push
or
mov
repz
jle
or
sbb
dec
arpl
jbe
push
lret
or
cmp
mov
push
mov
test
pop
pop
bsr
push
sub
mov
das
data16
pop
aas
xor
sti
mov
aad
lods
adc
les
pop
sbb
fwait
repz
outsb
in
sub
in
popa
mov
jecxz
out
es
ret
incl
fldl
fwait
mov
or
loop
mov
insb
sbbl
adc
outsl
repz
sub
mov
jle
aad
sbb
sbb
mov
lods
dec
cmp
xchg
std
xchg
fmul
shl
xor
sub
jbe
scas
mov
pop
popf
rcll
cli
dec
pushf
sub
mov
data16
lcall
movsl
scas
cli
roll
stos
adc
ja
mov
lods
cld
and
nop
mov
pop
mov
data16
clc
in
sbb
mov
or
jne
test
or
insl
lods
cmc
lods
cmpsl
outsb
dec
cmp
jg
mov
fsubr
pop
sbb
jbe
test
pop
sti
aas
mov
pop
ret
push
test
and
sarb
mov
movsb
xor
shll
cwtl
mov
cmp
int
test
xchg
ret
adc
lahf
daa
mov
gs
int
mov
imul
mov
push
cmpb
or
test
adc
and
pop
xchg
xchg
mov
push
sarb
stos
gs
jb
fwait
jnp
xlat
push
loope
jecxz
mov
jmp
mov
cli
mov
jo
pop
cltd
adc
push
pop
pop
push
pop
jg
push
fmuls
scas
fcoml
dec
fwait
pop
sub
ror
mov
daa
adcl
and
out
stos
test
lock
pusha
xor
ja
xchg
sub
pop
inc
lds
ror
insl
add
jg
mov
sbb
stc
inc
aas
cmp
rcll
xchg
aam
jo
in
sbb
xchg
mov
movsb
push
hlt
roll
or
gs
js
or
fstps
out
push
cltd
int
push
adc
add
mov
jle
xchg
lahf
push
dec
sub
mov
cmp
incb
mov
jnp
loope
push
pop
or
cmp
add
aam
adc
inc
push
mov
dec
sbb
fimull
jl
jle
xor
lds
and
fnstcw
aam
xchg
insb
test
sub
fstl
jb
push
dec
mov
stos
sbb
mov
mov
sbb
repnz
jg
outsl
cmc
test
stos
push
gs
mov
mov
fidivl
xor
dec
or
pop
repz
lea
lods
add
pop
insl
cli
mov
insb
out
andb
popf
xor
mov
int
test
imul
jnp
jns
pop
lret
xor
dec
call
xchg
outsl
cmp
adc
pop
jno
push
xchg
fwait
mov
insb
xor
inc
jno
mov
iret
gs
dec
and
pop
or
arpl
cltd
aam
or
lcall
jl
lret
and
cli
adc
iret
lods
pop
testl
xlat
cmp
mov
in
pop
sub
mov
test
adc
sub
lahf
mov
cmp
mov
sub
popf
scas
shlb
mov
rcrb
xchg
out
mov
push
test
dec
lods
jle
push
subl
cmp
mov
test
push
les
jns
insb
fcmovnbe
bound
in
inc
pop
and
and
jbe
adc
or
fwait
xor
jns
push
stc
lret
jmp
inc
lds
data16
aad
push
addb
jl
xchg
pop
dec
mov
jle
out
push
cmpl
jge
loopne
dec
jo
inc
jne
push
push
pop
xor
dec
fwait
daa
faddl
insb
sbb
mov
add
or
repz
addb
fcomps
mov
sub
sub
jae
imul
popl
cmp
das
rcll
fs
push
lods
into
cmc
fmulp
lret
and
in
jnp
loopne
ja
arpl
out
std
pop
sahf
loop
sbb
clc
dec
mov
mov
int3
dec
enter
fcoms
cmp
add
lret
push
stos
pop
mov
dec
push
jns
inc
and
ja
js
nop
jmp
mov
aaa
sahf
xchg
shll
jbe
arpl
inc
es
cmpsb
sbb
jae
test
sub
retw
lods
push
fadd
clc
ret
and
push
loopne
mov
push
call
adc
popa
jl
lcall
pop
sbb
rol
push
call
mov
adcl
add
lcall
out
lret
sbb
std
mov
xor
jg
stos
setb
out
cmp
cwtl
lahf
std
xchg
push
notb
scas
sbb
dec
xor
insb
call
add
fmull
jns
mov
or
sbb
dec
xchg
push
cmp
xor
pop
or
call
mov
out
or
push
xor
ja
jne
mov
ror
push
fs
jne
movsl
movsb
mov
sarl
add
sbb
andb
stos
iret
out
fwait
or
mov
cs
test
add
adcb
mov
xchg
xor
stc
mov
inc
xchg
sahf
dec
daa
mov
xorl
jo
shr
and
les
cltd
mov
aam
test
dec
rclb
or
mov
sub
clc
mov
testb
push
in
sbb
mov
loop
pop
adc
pop
out
adc
mov
addb
dec
add
mov
scas
jp
push
jno
push
hlt
jmp
fcmovne
jle
jb
and
jle
jno
pop
cmp
and
and
cmp
int3
add
lods
xchg
dec
sub
pop
and
mov
mov
adc
push
shll
ljmp
or
clc
and
out
jp
xchg
inc
cmp
add
int
sahf
idivb
xor
ret
lret
lods
lea
sub
dec
int
sub
ds
aad
dec
loopne
ret
popf
xchg
jg
cwtl
les
ja
dec
pop
jne
cli
xor
pop
push
inc
in
sub
add
mov
dec
mov
outsl
stos
dec
inc
sbb
pushf
clc
adc
mov
jg
jbe
insl
dec
stc
push
in
sub
inc
sbbb
sub
xchg
add
enter
mov
or
sub
cmp
scas
inc
notl
pop
sub
pusha
in
xchg
mov
int3
int
lods
cmp
icebp
sub
add
stos
adc
fcomp
dec
div
in
add
mov
cmpsl
inc
adc
push
pop
je
test
sub
mov
mov
jnp
and
xchg
inc
popf
pop
jbe
pushf
jae
pop
cli
pop
pop
pusha
mov
dec
fstps
outsl
aas
sub
xor
pop
mov
movsb
dec
inc
jno
sub
fscale
pusha
mov
push
movsl
fwait
jmp
popf
std
fs
cltd
xor
mov
push
ljmp
imul
cmpb
scas
push
lea
pop
add
loop
mov
jb
and
add
mov
lret
imul
add
jnp
cmp
nop
xchg
cmp
adc
ja
pop
or
das
pop
popf
lock
out
dec
jecxz
les
cmp
into
roll
and
bound
cmpsb
push
in
std
daa
pushf
mov
jmp
mov
sbb
add
in
inc
repz
pop
cmpsb
cmp
stc
mov
xor
ret
push
repz
jae
mulb
aaa
dec
cld
stos
rcrl
inc
iret
mov
add
mov
les
test
mov
or
loopne
sahf
repz
mov
mov
add
inc
lods
and
lret
bound
popa
push
scas
cld
stc
pusha
fisubrs
inc
test
mov
call
lret
pusha
stos
add
dec
and
in
mov
addr16
outsb
jno
inc
mov
inc
ss
sub
dec
ds
in
lret
sbb
insl
or
shl
icebp
imul
pusha
adcl
pop
pop
mov
push
scas
dec
stos
xlat
sub
pusha
cmpsb
and
roll
mov
or
pop
icebp
sbb
push
lods
adc
xor
pop
fsubr
orl
xlat
push
inc
movsl
jo
mov
cmc
xchg
test
bound
fwait
popl
shll
inc
jg
push
aas
out
in
fidivl
pop
mov
push
push
nop
fnstcw
push
jp
addl
outsl
ja
scas
jl
jne,pn
mov
testb
mov
in
xorl
and
jmpw
testl
es
rorb
stos
xlat
sbb
xchg
ficoml
test
push
push
movsl
xlat
icebp
out
fwait
test
fs
jne
fistpll
add
jae
add
jne
mov
mov
mov
pop
mov
dec
rcr
bound
pop
push
mov
fdivs
jge
ror
dec
nop
stos
pop
jmp
add
inc
cmpsb
inc
mov
mov
cmp
sub
ja
and
js
mov
jns
arpl
mov
xchg
pop
out
mov
fsub
cmpsl
addr16
dec
lock
rorb
mov
mov
jge
xor
lcall
push
aam
hlt
cmp
pop
addr16
insl
lret
or
xor
push
gs
mov
rclb
inc
jl
daa
xchg
pop
and
fldpi
cmp
sarl
std
mov
idiv
aas
not
cltd
lock
or
mov
cmp
jmp
jge
in
add
fwait
ret
jp
mov
lock
sub
aaa
ficompl
push
adc
xor
mov
sbb
aas
data16
bound
es
cmpsb
pop
xlat
push
repnz
ljmp
jle
lods
fdivr
jg
gs
mov
stos
push
or
pop
stc
cmpl
and
ret
clc
out
outsl
mov
movsb
adc
imul
lock
sub
sbb
mov
jne
inc
lret
jbe
or
std
cmp
sbb
mov
cmp
and
mov
insl
out
jae
pop
pop
push
push
hlt
xorl
imull
scas
lret
mov
stos
std
adc
in
inc
movsl
int3
inc
jbe
loop
push
test
ret
and
inc
jnp
sbbl
lret
aam
in
mov
ljmp
push
xchg
inc
mov
test
scas
jo
aas
dec
jmp
arpl
xor
pusha
fmul
xchg
jle
xchg
add
mov
daa
daa
movsb
or
mov
imul
jae
dec
pop
jb
mov
dec
inc
pop
daa
pop
shl
inc
setnp
add
push
and
ljmp
iret
sbb
jo
sbb
fiadds
jns
and
mov
repz
inc
mov
scas
push
fmul
add
in
aas
pop
pop
jecxz
jecxz
pop
dec
js
cmpsb
int3
pop
clc
pop
jb
sub
jns
xor
rol
jne
push
or
in
xchg
test
pop
cwtl
cmp
pop
add
shrl
scas
out
shr
gs
cli
int3
in
mov
push
leave
pop
int
mov
call
scas
out
stos
push
scas
fwait
andb
pop
dec
sbb
adc
sub
inc
xchg
addl
sbb
icebp
es
dec
jge
pushl
jmp
sbb
and
shr
lahf
sbb
out
and
arpl
or
cmp
inc
jmp
cld
lods
push
push
cmpsb
pop
aaa
repnz
out
loop
mov
orb
imul
cld
rorb
add
pop
pushf
dec
jle
push
inc
fcompl
addr16
fwait
pop
adc
push
das
push
insb
sti
xor
and
sbbb
imul
jnp,pn
in
inc
cwtl
mov
lret
lahf
push
xchg
dec
mov
loopne
or
andb
add
mov
pop
pop
cmp
pop
push
lea
mov
mov
and
add
mov
cmp
hlt
and
filds
xchg
inc
add
push
pop
sbb
rorl
scas
pop
dec
ret
cmp
into
sar
add
lds
jle
pop
fdivrl
cmpsb
dec
repz
push
lahf
pop
mov
insl
inc
mov
push
xchg
jnp
arpl
out
jae
add
xchg
cltd
pop
clc
in
sbb
or
stos
test
loop
pop
into
push
inc
push
faddl
pop
jmp
inc
push
in
mov
xchg
aam
insb
mov
xchg
cs
add
pusha
shrb
or
and
cmp
sahf
out
push
arpl
in
xor
aas
push
push
xor
mov
addr16
and
pop
call
fcompl
mov
add
mov
insl
fdivrl
sbb
xchg
cmp
js
bound
jno
add
pop
ljmp
fidivrs
mov
cmp
rcrb
sub
add
fildll
hlt
imul
cmp
inc
aam
nop
inc
cmp
mov
xor
or
pop
fwait
xor
rcrl
aam
lcall
dec
xlat
cmc
fs
xor
xlat
popa
or
mov
mov
int
and
sub
xor
xchg
ds
mov
dec
jbe
and
mov
add
push
xchg
xor
pop
inc
daa
loopne
sbbb
orl
rcrb
divl
add
add
cvtps2pd
iret
xor
add
in
or
stc
mov
sbb
cmc
cmp
test
sbb
lcall
popf
jb
push
sbb
sbb
sbb
fcomps
popa
adcl
sti
fcoml
imul
sbb
cld
pop
int3
pop
inc
and
pusha
xor
inc
fcmovne
xor
jb
push
pop
jbe
and
sbb
dec
cs
cmp
shrl
aas
inc
xchg
repz
jnp
loopne
idivl
inc
xchg
adc
jbe
nop
xchg
mov
cltd
ds
dec
fcomip
fwait
repnz
xor
push
adc
inc
es
and
xchg
ja
mov
dec
dec
push
pop
test
xor
sub
sahf
mov
sti
adc
sub
jns
lock
rcr
in
lock
stos
inc
pop
les
call
xlat
cmc
movsl
insl
pop
pop
nop
adc
xor
push
mov
pop
xchg
into
push
out
xchg
mov
sbb
out
sub
xchg
cld
fisubrl
mov
adc
lods
sub
pop
das
mov
cmp
aad
shll
xchg
sti
cmp
sub
xcrypt-ecb
cmpsl
psrlq
xchg
lret
lods
dec
adc
mov
in
mov
sbb
int3
fsubp
xlat
jp
pop
push
mov
jle
cmp
movsb
or
jmp
cli
repz
mov
shl
fldt
mov
cmp
das
push
ljmp
push
lock
fwait
nop
int
jecxz
insb
clc
push
xlat
cmovs
jp
mov
mov
xchg
popa
mov
fs
cltd
xlat
pop
sbb
daa
jno
sarb
mov
into
pop
dec
jmp
adc
or
hlt
and
push
xchg
cmp
xchg
xchg
sti
lret
xor
nop
add
cmpsb
in
or
sti
mov
lods
or
dec
and
push
jno
sbb
mov
mov
insl
xchg
pop
pop
call
or
dec
xlat
dec
xchg
lahf
push
xchg
rcrb
pop
sbb
jl
ret
mov
xchg
mov
insl
cmp
imul
imul
cmp
pusha
push
xor
jge
xchg
and
mov
jecxz
push
subb
inc
xchg
and
cmc
mov
ds
pop
ljmp
mov
stc
je
add
sar
jmp
push
addb
xor
xchg
inc
push
add
adc
push
bound
inc
mov
dec
jb
or
jo
xchg
mov
jns
es
adc
adc
movsl
rcrl
imul
mov
sbb
pop
and
int
lods
pop
ljmp
lahf
in
std
xchg
jno
enter
pop
fisubs
dec
jno
pop
add
push
cltd
jnp
nop
sub
add
jp
ljmp
aad
jnp
ljmp
or
add
sub
mul
lock
imul
jle
pop
ss
negl
jne
sub
mov
jg
ret
cmc
add
out
push
scas
lcall
dec
mov
mov
cli
les
jbe
xchg
and
sahf
adc
test
mov
mov
push
xchg
mov
fstl
inc
lods
jge
sub
je
mov
add
stc
out
mov
inc
int
jo
ljmp
loop
jge
push
js
adc
out
out
cmp
inc
and
cwtl
aas
bound
mov
adc
push
lock
lock
xorl
pop
or
lahf
xor
xchg
in
call
mov
xchg
adc
lahf
cli
in
pop
mov
sahf
std
jmp
fiaddl
xchg
imul
inc
faddl
aas
aas
sbb
loope
inc
inc
add
fs
mov
dec
lcall
cli
sarl
mov
xor
push
mov
int3
subl
stos
inc
jl
lcall
pop
cmpsb
mov
add
xor
outsb
out
add
sub
sub
xchg
inc
mov
add
ljmp
pop
fadds
cs
ss
push
out
xchg
pop
fdivs
xchg
sub
mov
xor
das
sub
stos
add
daa
call
or
insb
ds
mov
lods
loopne
sub
mov
fnstsw
or
stos
mov
jge
xor
dec
sbb
push
sbb
in
pop
ljmp
jg
mov
test
cmp
xor
inc
or
inc
sbb
mov
call
fwait
xor
pop
daa
jns
dec
xchg
les
fisubs
fistpll
cmp
fldl
dec
scas
mov
es
enter
rorb
mov
jle
rorb
sub
pusha
mov
mov
push
es
sub
stc
mov
in
sbb
xchg
mov
mov
or
jmp
test
sub
loop
es
in
daa
inc
jmp
je
idivl
ss
mov
push
adc
sbb
shl
push
imul
add
adc
xor
mov
xor
pop
xor
int3
cmp
dec
xchg
hlt
cmp
loop
lcall
xlat
sub
pop
lret
sbb
inc
test
outsl
mov
xchg
mov
inc
leave
data16
cmc
dec
icebp
pop
icebp
andb
pop
aam
xor
xor
or
cltd
mov
jne
out
push
push
mov
lea
lcall
mov
inc
cltd
xor
push
lret
jae
test
xchg
mov
jecxz
das
mov
daa
adc
mov
mov
mov
push
dec
mov
ret
push
jb
fs
andb
clc
mov
in
cmp
push
push
jmp
jle
or
fildl
sbb
dec
mov
jo
or
ljmp
into
inc
mov
mov
pop
pop
rcll
jg
repz
ljmp
aaa
inc
rorl
mulb
cltd
clc
in
mov
jle
incb
xchg
and
je
das
in
pop
jb
and
test
enter
cli
cmp
jl
mov
cmp
cmp
test
sub
push
push
xchg
cwtl
push
mov
les
jb
std
cmpsb
pop
mov
push
mov
xchg
xchg
inc
dec
push
xchg
jbe
scas
jo
int
cmc
pop
jl
jge
jge
inc
xchg
xor
out
dec
and
stc
fldt
mov
lret
pop
out
fnsave
cltd
cmp
and
ds
stos
jecxz
out
out
pop
lods
mov
mov
sub
push
test
inc
lods
mov
mov
push
int3
mov
clc
mov
ja
push
sahf
sbb
fcoml
pop
popa
lcall
fidivl
int
xchg
or
sub
fdivrp
andb
push
je
aaa
shl
sti
aaa
dec
leave
xchg
clc
sbb
mov
sub
repz
scas
aaa
dec
cmp
xor
js
adc
mov
je
aam
out
jns
xor
popa
aad
je
jo
cmp
rol
xlat
daa
and
mov
mov
mov
int
jae
pop
mov
out
imul
xor
stos
sarb
cltd
enter
shrl
add
mov
fistpl
mov
call
iret
mov
ret
lret
mov
cmpb
stos
fldl
pop
cmc
add
cmp
xchg
pop
sub
arpl
push
test
cmp
adc
call
rol
repz
stos
daa
stc
mov
cmp
inc
and
push
test
xchg
rcrl
adcb
lea
add
or
lds
xchg
ds
fistpll
ret
push
ffree
out
jg
lahf
pop
js
xchg
sub
mov
adc
ret
mov
cs
xchg
jl
enter
xchg
mov
fwait
cmp
push
lods
icebp
xor
sub
sub
dec
jl
int3
sub
cmc
push
decb
pop
out
cmp
mov
in
and
add
or
cmp
inc
or
jno
test
adc
or
xchg
vmwrite
mov
add
sarb
dec
rcl
pop
in
sub
rcrb
and
push
mov
int3
mov
ds
enter
lcall
pusha
adc
fsub
sub
mov
insb
xor
fbld
std
xchg
dec
xchg
or
xchg
aad
jae
popa
push
pop
ss
inc
or
push
push
loop
xchg
or
mov
lds
mov
mov
pop
sbb
inc
sub
jne
xor
lret
loope
push
dec
mov
sti
int3
sub
les
lds
scas
mov
clc
or
push
subl
fsubl
enter
into
mov
xor
push
xchg
aas
adc
jg
jns
cs
pushf
das
ret
shll
insl
xchg
sbb
in
lret
pop
repnz
adcb
aad
pushl
sub
ret
daa
stc
outsb
sarb
cwtl
outsb
sbb
enter
dec
dec
lods
cltd
daa
lods
mov
movl
popf
push
jno
dec
call
jnp
xor
mov
icebp
cmp
ja
fcomps
repnz
sbb
fsubr
inc
imul
int
xchg
xorb
pop
xchg
icebp
jo
aam
cld
daa
pop
pop
and
int
les
xchg
inc
lock
scas
inc
mov
popf
push
add
aad
jb
lret
out
mov
outsb
adc
and
xchg
cmp
nop
xchg
jne
mov
fidivs
and
lods
add
cli
stos
xchg
jb
aam
dec
jbe
lds
mov
pop
scas
aad
ds
jbe
fcoms
test
mov
jnp
notb
mov
mov
fwait
sub
pop
enter
jb
push
pop
arpl
ret
push
inc
mov
cwtl
sbb
mov
mov
pushf
xor
int3
int
outsb
ja
push
pop
sub
pop
fmuls
imul
incb
pop
cmc
and
cld
test
or
and
xchg
sahf
push
loope
pop
mov
mov
sti
scas
outsb
fcoml
mov
clc
jne
add
push
cmp
mov
xchg
cmp
ret
aaa
dec
jbe
nop
push
or
outsl
mov
push
jl
lods
cmc
mov
jmp
jbe
decl
arpl
add
scas
jb
fiaddl
sub
popf
push
movsb
das
out
lcall
mov
fsubs
mov
jne
cld
nop
divb
inc
mov
mov
repnz
add
les
pusha
out
repz
js
mov
scas
out
push
xchg
cmc
fcoml
push
addl
inc
inc
mov
in
xor
sbb
aam
pop
adc
pop
add
add
loopne
dec
dec
into
jne
enter
pop
dec
jecxz
ficomps
stos
rcll
or
adc
add
jg
mov
sbb
pop
mov
adc
mov
mov
in
push
icebp
mov
sti
mov
push
cli
cs
outsl
aaa
xchg
cmp
mov
mov
fsubrp
inc
push
sbb
or
jnp
xchg
in
or
xchg
negb
es
sbb
add
jb
push
cmp
ss
cmc
mov
mov
test
inc
mov
pop
popf
xchg
lea
insl
shll
bound
add
cmpb
mov
push
fnstenv
jg
nop
loopne
out
cmp
fistps
adc
out
mov
dec
pop
ret
sub
pop
popf
mov
out
stos
aaa
sar
ficoms
mov
and
pop
test
ja
mov
insl
xchg
rcrl
imul
test
enter
dec
sub
mov
fiadds
sahf
or
push
sub
scas
sub
add
arpl
cs
sub
xchg
fildl
bound
mov
fstpt
in
std
int3
lcall
mov
or
and
sub
cs
aas
fcmovne
inc
xor
in
pop
daa
mov
icebp
sub
lods
push
into
dec
ja
sbb
stos
lahf
or
xchg
jo
mov
inc
test
sub
daa
and
lret
aas
call
inc
pop
sub
mov
cltd
mov
mov
inc
adc
cmpsl
rolb
lcall
xor
sub
mov
and
jne
mov
pop
pop
popa
roll
aas
adcl
and
cs
mov
rorl
xchg
mov
popf
jge
stos
xchg
xchg
movsl
pushf
adc
stc
lret
js
aad
pop
inc
sub
into
xor
ss
adc
add
outsb
sub
movswl
loopne
iret
dec
and
jmp
dec
fimull
mov
addr16
or
fcmovu
gs
arpl
or
push
imul
in
insl
rcrl
cmpb
movsl
pusha
pop
arpl
int
sbb
hlt
jne
iret
mov
test
pop
test
icebp
std
shll
dec
dec
push
ja
inc
je
xchg
enter
mov
fchs
movsl
jns
je
jae
lock
adc
sbb
pushf
mov
jp
sub
xor
dec
add
shl
jb
push
test
insb
pop
xchg
sbb
cmp
ljmp
xor
lock
ss
repnz
lea
das
mov
das
scas
mov
aas
cld
xchg
sbb
imul
lcall
add
sbb
inc
mov
data16
es
ljmp
mov
fadd
jmp
cmp
xor
jb
sub
lret
loope
call
mov
icebp
scas
stos
mov
hlt
xchg
jg
into
repnz
notl
js
imul
cmc
and
cmp
subl
std
sbb
cmp
xchg
scas
stos
sbb
lahf
rcr
in
jp
test
dec
add
mov
add
or
mov
ret
push
mov
inc
rorb
shr
enter
ficompl
dec
and
jno
or
sbb
fidivrl
pop
and
or
jle
mov
xor
out
hlt
pop
or
sti
cmpsl
test
ss
pop
push
pop
mov
popf
jne
or
cld
mov
cltd
shrb
fidivs
push
mov
das
aad
push
cltd
popf
test
outsb
jge
pop
adc
or
mov
or
lods
shll
xchg
cltd
clc
subl
cmpl
pushf
sub
fistps
jns
imul
bound
shl
mov
dec
jne
adc
add
push
mov
dec
lods
or
xor
nop
fucom
push
sbb
inc
mov
sub
aam
test
mov
jns
add
stos
jns
test
test
mov
fisttpll
js
jno
push
mov
fcompl
cmp
nop
mov
fcmovu
iret
or
fdivr
hlt
test
imul
dec
mov
es
and
stc
insl
fisubs
jnp
jmp
into
pop
pop
push
inc
sbb
out
add
xchg
out
xchg
pop
cmc
pushf
fisttpl
push
icebp
test
pop
inc
decl
mov
pop
scas
popa
scas
call
jbe
and
out
sub
xor
push
dec
mov
and
push
jno
shlb
push
push
jbe
dec
jp
cmp
inc
dec
and
lret
dec
loop
stos
es
pop
adc
mov
fldt
push
sti
mov
dec
xor
cmp
jmp
push
mov
nop
mov
mov
in
insb
inc
out
mov
js
mov
pusha
jae
adc
mov
mov
mov
jmp
push
cmc
insl
lret
repz
and
xchg
and
dec
cld
xor
push
cld
lahf
fidivs
ror
sbb
clc
leave
test
mov
test
pop
and
mov
cltd
adc
mov
mov
xchg
fs
clc
sub
out
cli
xor
adcb
mov
movsb
popa
daa
aaa
mov
mov
loopne
fisttpl
push
popf
lds
call
add
pushf
mov
jb
xor
inc
xchg
push
movsl
je
pusha
clc
jno
je
mov
dec
mov
jns
cmpl
push
bound
mov
inc
and
sbb
notl
arpl
xchg
add
frstor
out
jbe
sbb
mov
cs
inc
cmp
pop
incl
push
sub
test
inc
inc
push
cmpsl
fcmovnbe
in
lea
addr16
sahf
adc
sbb
push
jecxz
and
iret
rcll
xor
ljmp
fsubrp
iret
and
adc
inc
cmp
aas
push
xchg
and
int
lods
push
xchg
or
in
dec
sbb
repz
push
jo
jmp
test
push
xchg
push
pushl
jge
and
push
or
fimuls
and
imul
push
push
mov
clc
call
adc
jle
dec
addr16
imul
out
xchg
pop
inc
out
mov
sbb
dec
std
ficoms
daa
sahf
test
push
pop
xor
push
and
xchg
fistpll
mov
bound
ucomiss
inc
shll
jge
lea
sahf
gs
imul
mov
xchg
jo
sub
mov
pop
enter
dec
stos
push
js
repz
push
jno
mov
and
cmpl
js
clc
pop
mov
test
adc
jge
and
push
jmp
pop
subl
push
pop
imul
mov
in
arpl
dec
push
fdivr
pushf
xchg
mov
test
sub
pop
out
xchg
pop
dec
stos
and
pusha
inc
mov
ficompl
and
mov
insb
lret
fimuls
add
popa
push
and
xchg
stos
stos
pushf
add
fistpll
and
mov
icebp
push
push
loope
cmp
add
dec
lds
lea
sbb
mov
jg
xor
jl
jg
popf
mov
jo
and
mov
cltd
push
cmp
fsubr
in
sub
xor
pop
or
xlat
push
cmp
pop
or
sarb
pop
dec
or
test
jmp
mov
push
fmuls
adc
dec
pop
push
dec
outsb
pop
mov
or
push
dec
dec
add
aad
mov
push
fninit
pop
xchg
dec
loopne
cmp
jb
movsb
jecxz
outsl
fcmovne
std
les
cmpsl
mov
xor
aam
iret
mov
xor
outsl
out
inc
cmpsb
outsb
mov
sbb
in
das
rol
mov
stos
out
push
mov
ljmp
jmp
cmpsl
aas
test
sub
cmpsl
shrb
push
xchg
jmp
push
or
faddp
adc
mov
test
fwait
out
lods
je
in
adc
push
pop
cmovne
shll
je
ljmp
sub
rolb
push
cmpsl
xor
mov
and
stos
xlat
lods
mov
outsb
outsb
popa
jecxz
inc
cs
pop
adc
xchg
mov
cmp
lcall
sbb
cmp
fcoml
cld
sar
inc
ret
fiadds
inc
jp
cmp
js
fistl
sahf
jo
mov
scas
jl
fcmovnb
inc
mov
push
insl
adc
cmp
sub
pop
cwtl
nop
jl
dec
xor
cltd
mov
aam
add
cmp
adc
sub
insb
sub
orb
adc
mov
repnz
xor
cmp
add
mov
cmpsl
in
shlb
inc
in
pop
push
jns
dec
adc
xchg
addr16
xor
call
filds
fwait
in
loopne
mov
cli
pushf
orb
icebp
xor
jle
loopne
sbb
fwait
stos
nop
cmp
mov
je
xor
sahf
iret
popf
mov
pop
inc
mov
xchg
sbb
dec
xchg
or
jb
negl
sub
xchg
xor
push
xchg
pop
call
mov
imull
push
xor
ffree
xchg
std
loop
mov
pop
mov
lea
outsl
jge
pop
or
jno
add
js
jno
lret
xchg
sub
inc
inc
jns
inc
lret
fucomp
stos
cmp
inc
sub
xchg
add
sub
mov
test
in
popa
out
sbb
outsb
jno
lods
jmp
and
xor
daa
clc
jg
push
xchg
aad
pushf
add
cmc
inc
cmpsb
pop
les
loope
sarl
mov
cmp
pop
movsb
js
dec
and
push
push
test
leave
or
inc
jb
xlat
mov
mov
jnp
mov
nop
push
xchg
cli
popaw
mov
jnp
xor
shl
nop
pop
cli
insl
sti
shlb
sarb
cltd
jmp
fldt
xor
ds
lods
xchg
inc
inc
mov
test
xchg
outsb
add
stc
mov
dec
sub
or
jbe
loope
mov
mov
aas
push
aas
cmpsl
jle
mov
adc
das
aad
sub
js
ds
test
sbb
or
inc
icebp
int3
fldz
movsl
sbb
rcll
daa
xchg
mov
xchg
mov
fisttpl
mov
ret
lret
jno
inc
jle
adc
stos
fcmovb
cmp
clc
pop
lds
push
xor
adc
jp
sub
aas
call
je
sbb
loope
lock
nop
in
xchg
fbld
dec
negb
stos
mov
sub
lods
ja
sub
push
mov
es
sti
xor
pusha
xchg
dec
jbe
xor
mov
sub
outsb
inc
sub
push
rcll
and
sbb
mov
dec
aam
les
mov
inc
lcall
cli
pop
ret
push
mov
inc
int3
cmp
sbb
xchg
repnz
adc
in
mov
inc
cld
icebp
aas
inc
icebp
lahf
mov
dec
jg
outsl
adc
iret
push
adc
sti
mov
cmpl
in
push
lea
imul
repz
shlb
push
push
mov
cmp
mov
mov
test
out
enter
cmp
test
push
mov
sub
sub
mov
lret
popf
and
pop
xor
or
aaa
popf
inc
cmc
dec
sti
jno
xor
mov
cmp
cmp
push
push
shl
testb
out
in
loope
jae
cmp
push
mov
int3
xor
inc
dec
call
or
add
popa
or
ss
ds
sub
popa
and
aad
js
dec
mov
dec
dec
cmp
dec
rcll
test
pop
repnz
push
insl
ret
std
push
stos
and
je
mov
test
mov
arpl
xchg
sbb
xchg
mov
dec
dec
lods
and
jnp
mov
and
push
arpl
in
ss
jle
fsubrs
xor
out
daa
mov
and
in
cs
inc
test
adc
outsl
sub
and
cltd
cmp
insl
repz
xor
mov
jge
xlat
fwait
pop
pop
pop
lock
or
pushf
jne
jno
adc
dec
xchg
and
xchg
push
movsb
ss
in
adcb
xor
sub
push
mov
sti
fcoms
fwait
mov
mov
pop
pusha
jecxz
out
cs
adc
outsl
pushf
das
or
lcall
out
pop
mov
sbb
or
and
sub
les
shll
sub
jl
sbb
sbb
andl
jge
xchg
pop
mov
addb
fcmovbe
and
cmp
push
cmp
cmp
mov
xlat
inc
add
fwait
sbb
mov
out
rcr
aas
jge
mov
rep
dec
push
scas
pop
mov
shll
sub
jle
iret
adc
out
lea
cwtl
adc
cmp
pusha
push
inc
or
or
jmp
cltd
mov
cs
outsl
jmp
mov
xchg
dec
push
cwtl
cmp
and
loope
pop
movsb
loopne
add
jb
inc
cmp
push
cld
add
ds
and
xchg
push
fildl
in
mov
ret
pop
test
dec
xor
xchg
movsl
daa
cltd
cld
dec
into
push
call
sub
out
data16
cmp
scas
sbb
xor
orl
dec
push
jp
enter
stc
pusha
fidivl
mov
adc
sbb
jmp
and
push
lret
mov
movsl
iret
pop
mov
cli
sti
fwait
push
dec
lods
test
test
sub
adc
xchg
jne
pop
movsl
and
cs
addr16
loop
fmull
rorb
popf
ja
mov
sbb
mov
jl
and
mov
repnz
out
push
in
loope
cmp
add
mov
sbb
xchg
pop
or
fmuls
bound
aad
ss
inc
nop
mov
mov
lods
push
push
jmp
mov
fistps
jb
cld
int
cli
mov
push
shl
xor
lahf
xchg
hlt
jno
fdivs
mov
xor
dec
mov
or
in
push
xchg
dec
mov
stos
dec
mov
xchg
inc
add
jl
mov
imul
movsl
imul
push
ds
test
inc
test
lods
test
addb
jbe
and
iret
fcomps
loop
mov
das
lcall
stc
jne
outsb
xor
cli
fstl
inc
loopne
add
out
add
jns
or
iret
or
pop
test
jg
adc
sub
std
sbb
xor
out
xor
fdivrs
scas
jge
or
push
cmp
mov
das
jbe
dec
push
lods
fnstcw
mov
iret
xlat
dec
jo
jl
sub
xchg
in
stc
lea
jo
imul
or
xchg
test
and
cmp
rolb
inc
jge
in
cwtl
sub
cld
rorb
movsb
fs
and
pushf
cwtl
in
add
cmp
ja
cwtl
jl
cmp
push
push
jo
xchg
mov
movb
dec
push
xlat
loop
push
test
push
call
es
dec
sub
jp
mov
leave
adc
mov
mov
pop
pop
test
sbb
mov
and
jo
sbb
pusha
in
jno
dec
aas
push
or
sarl
data16
dec
pushl
pop
xchg
aaa
test
fisttps
pop
lods
jno
mov
ljmp
imul
repz
sbb
loope
nop
push
adc
cld
mov
gs
push
push
and
fisttpl
and
xchg
icebp
lea
iret
push
cmp
pushf
movsb
callw
sarl
sti
xor
mov
imul
out
cmp
outsb
dec
push
or
sub
insb
and
xchg
ret
sbb
lret
add
push
lods
mov
maxps
and
test
cli
fistps
mov
push
idiv
mul
shll
movsb
je
aad
into
lds
stos
fnsave
test
and
dec
xchg
bound
adc
orl
into
adc
adc
test
stc
into
pop
rolb
iret
adc
sbb
fistpll
mov
sbb
sub
pop
push
fs
aad
or
lea
mov
push
xor
dec
xchg
mov
push
jecxz
insl
push
cmp
xchg
ret
ljmp
cmc
ljmp
stos
stos
sbb
inc
aaa
push
add
xlat
jecxz
lods
adc
das
fcomps
mov
xor
fistpl
pop
and
movsl
dec
sub
in
cmc
push
adc
mov
or
mov
leave
adc
je
out
jae
dec
add
mov
repz
mov
mov
push
mov
scas
and
and
or
aaa
gs
xchg
mov
bound
cltd
ret
test
mov
dec
pop
add
mov
fists
pop
sarl
jnp
pop
idivl
mov
rclb
std
jns
mov
divl
cli
dec
arpl
pushf
dec
ds
mov
jae
jo
scas
lahf
mov
fsubl
push
cmp
gs
dec
inc
push
inc
lret
insl
push
pop
ret
ds
jns
xor
out
mov
sti
cld
jmp
mov
fwait
int
repnz
dec
in
insl
inc
pop
cmpsb
repz
loop
stos
and
je
lods
in
dec
cwtl
push
lods
fcomip
in
mov
lock
cmpsb
nop
movsb
jmp
mov
pop
inc
call
lods
sub
fldt
mov
int
xchg
leave
pop
je
lds
scas
lods
jae
in
ss
out
rcll
mov
push
les
adc
push
test
les
cmpb
aaa
inc
pop
jecxz
pop
or
incb
mov
stc
cmpl
mov
jo
mov
int3
jp
dec
mov
push
xor
fcompl
push
fwait
xor
inc
xchg
rcll
add
jp
subb
sbb
dec
fwait
sub
mov
and
xor
aaa
jnp
enter
cli
mov
mov
in
push
xor
jecxz
jg
mull
inc
push
ds
xor
xchg
mov
jl
lods
push
cmpsl
jmp
xlat
scas
mov
cltd
mov
dec
sbb
jg
addl
push
addb
dec
std
cmp
mov
outsl
mov
je
mov
int
mov
outsb
jecxz
jns
subb
xor
add
cld
cmp
push
enter
cmp
sbb
add
call
xor
cvtdq2ps
cld
adc
push
inc
je
adc
dec
pop
sahf
jnp
fadds
pop
jmp
push
cmpl
loopne
sbb
call
adc
mov
inc
jns
fbstp
jae
xchg
mov
sub
incl
add
stc
test
xchg
bound
mov
into
flds
je
sbb
inc
inc
mov
arpl
adc
fcomps
jg
mov
rclb
arpl
mov
cmc
mov
or
jnp
mov
leave
iret
push
push
adc
xor
popa
mov
aam
arpl
inc
test
fistps
or
xchg
ret
mov
xlat
sbb
imul
mov
leave
ret
mov
in
gs
mov
push
std
outsb
jg
xchg
clc
imul
shrb
add
stos
lret
jns
ret
ss
repnz
mov
adc
sti
pop
lods
lret
mov
jecxz
addr16
add
imul
xor
loopne
mov
push
ret
pusha
pop
in
mov
inc
mov
sbb
inc
mov
pop
loope
xor
cmp
sbb
loopne
inc
push
cs
div
fidivrl
repnz
adc
xlat
xchg
sbb
insb
mov
pop
fcomps
insb
stos
jle
mov
loope
movsl
mov
and
inc
cmp
ljmp
inc
pop
push
adc
jmp
xor
xchg
outsl
push
dec
mov
hlt
inc
fidivs
adc
arpl
mov
jnp
inc
add
mov
or
pushfw
fstps
jae
push
xor
or
jbe
sub
jnp
add
roll
or
in
pop
aam
sbbb
xor
stos
frstor
pop
push
lea
mov
mov
dec
scas
pop
jb
stos
add
push
inc
stc
or
inc
dec
sub
mov
push
dec
loopne
outsl
dec
add
cli
and
mov
out
or
lcall
xchg
test
push
int3
imul
push
cmp
push
push
mov
add
bnd
lods
add
ret
and
push
out
aaa
into
mov
nop
ret
lret
hlt
icebp
pop
mulb
push
jl
adc
jb
cmp
out
stos
js
loopne
add
sub
movsb
lods
mov
out
inc
addr16
je
mov
cmp
insb
inc
inc
orb
test
push
in
nop
dec
ret
sub
add
push
mov
fwait
jne
rorl
std
inc
sbb
popa
mov
xchg
and
xchg
inc
and
mov
cmpxchg
test
xor
ss
pop
lcall
jecxz
insl
mov
cmpsb
cmp
repz
daa
push
and
in
jl
pushf
imul
data16
adc
xchg
xchg
cmc
inc
xchg
mov
xchg
in
test
les
xchg
ds
and
into
mov
xor
mov
inc
cli
sub
ja
mov
sbb
inc
scas
mov
add
mov
pop
mov
mov
pop
xor
add
subl
sub
mov
pop
inc
mov
cli
dec
call
or
imull
or
push
fcmovu
push
jnp
fsubrs
xor
pusha
pushf
into
mov
sarb
jge
imul
mov
push
inc
push
jnp
pop
pop
cld
mov
xchg
shr
das
sub
or
test
shll
mov
movsb
imul
jnp
and
mov
std
in
mov
adc
leave
pop
push
test
popa
push
in
inc
test
lock
inc
call
xchg
push
mov
es
insl
pop
aad
stos
mov
cmp
rclb
shr
jmp
xchg
fildl
push
bound
push
xor
int
adc
out
inc
push
jg
hlt
jo
pop
jge
cmc
lahf
ds
imul
push
cmp
cmpsb
mov
ja
jb
test
mov
or
es
or
pop
mov
jp
loop
lcall
fstl
xor
mov
aas
aad
icebp
jb
outsb
push
jp
xor
fnstenv
imul
push
inc
xlat
js
out
mov
aad
stc
hlt
cmpsl
xchg
cld
mov
dec
mov
or
out
data16
jg
test
mov
call
fs
mov
or
jns
and
dec
repz
test
push
sarb
clc
lods
push
mov
ret
or
test
sub
cmp
lods
sbb
mov
int
xorl
sbb
mov
pop
pushf
loope
mov
imul
add
mov
mov
mov
adc
xchg
test
frstor
insl
fldl
cwtl
into
dec
push
jecxz
fs
sbb
jno
xor
mov
fsubl
xchg
mul
mov
insl
hlt
daa
jb
push
ret
popf
test
dec
and
sub
inc
cltd
mov
in
mov
pop
push
jge
inc
xchg
mov
mov
mov
int3
pop
push
dec
inc
adc
fdivrl
je
xor
xchg
div
in
add
inc
or
mov
fdivp
or
ret
leave
data16
jecxz
adcb
call
push
pop
mov
into
sub
sub
lret
jl
ror
mov
lret
mov
ret
mov
fwait
push
imull
ljmp
int3
xchg
mov
jp
ljmp
jecxz
rorb
inc
addr16
xchg
shlb
lods
pop
mov
loopne
dec
pop
outsb
test
lret
dec
or
aad
push
adc
pusha
jno
mov
gs
dec
sahf
sbb
jbe
adc
js
xchg
test
mov
mov
dec
hlt
mov
xchg
loope
in
and
data16
das
dec
test
fists
mov
mov
std
push
mov
shrl
mov
and
jl
imul
ljmp
dec
or
addb
mov
insl
insl
fcomps
jae
cli
shl
xor
adc
cmpsb
pop
jb
imul
imul
pop
xchg
push
scas
out
movsl
lret
pop
xchg
dec
sbbl
loopne
aam
lods
in
pop
and
mov
repz
mov
add
rcrb
mov
loopne
push
fldl
fsubl
cmpsb
add
dec
ret
fcoml
lock
adc
jns
adc
mov
pusha
js
push
push
sbb
call
gs
jp
lret
mov
rcrl
shlb
lret
dec
push
mov
xchg
sbb
mov
and
mov
imul
insl
or
jl
scas
clc
iret
or
out
or
test
xor
pop
cmp
or
bound
rorl
gs
dec
out
adc
es
or
fldenv
cmp
push
insb
popa
es
dec
mov
test
popa
shrl
xchg
cli
xor
xor
arpl
or
mov
and
ret
xchg
mov
xchg
inc
add
jns
mov
xor
mov
dec
lret
add
dec
cs
mov
push
stos
jbe
push
daa
lods
negb
subb
pop
and
lcall
mov
xor
adc
incl
test
ja
or
adc
jmp
repz
mov
mov
and
lods
fnstsw
aad
iret
sbb
pop
ror
loopne
sub
sub
adc
lea
xchg
cmp
mov
fldcw
mov
lahf
push
jns
sbb
pop
not
test
insl
adc
enter
sub
test
xlat
test
call
int
jnp
fdivs
xor
rolb
jb
add
sub
add
jmp
xor
hlt
imul
push
clc
sub
push
adc
movsl
jae
or
inc
or
xchg
incb
ljmp
lret
test
jecxz
mov
comiss
xchg
mov
sbb
or
or
fwait
enter
bound
cmp
xor
and
popa
mov
repnz
adc
fdivs
inc
pop
xchg
xor
clc
leave
dec
stc
mov
xchg
pop
jle
cmp
ljmp
fstpt
movsl
and
fs
in
fiaddl
call
dec
fstp
out
adc
movsb
mov
test
cs
push
cmp
leave
leave
sbb
xchg
testl
mov
out
pop
ss
pop
pop
fldenv
pop
sub
addl
testl
test
je
inc
nop
mov
test
pop
lock
rcrl
popf
pop
xchg
arpl
fisttpl
cmp
jge,pn
and
xchg
xor
bound
sub
aad
mov
sub
inc
decl
mov
insl
loop
insb
mov
pusha
lods
mov
loop
les
dec
push
xor
mov
adc
mov
das
shll
arpl
xor
scas
jl,pn
xor
pop
or
cwtl
inc
andb
popf
sub
insb
punpckhdq
xor
aam
dec
in
scas
push
dec
loopne
jne
insb
xorb
pop
push
mov
adc
in
xchg
sub
hlt
push
into
pusha
mov
and
dec
adc
dec
mov
adc
push
sbb
shrb
push
test
bnd
or
lock
jnp
and
psubusb
or
push
or
inc
sahf
cwtl
dec
inc
lods
mov
popa
rolb
dec
jb
mov
jnp
roll
cltd
add
imul
fdivs
mov
mov
jl
dec
in
data16
rcrl
dec
out
stos
push
into
push
dec
mov
sub
je
sbb
pop
xor
and
insl
jg
mov
addb
dec
sub
out
lods
or
cltd
jp
in
ljmp
jle
mov
popf
push
mov
std
fists
aas
popf
lahf
pop
inc
pushf
outsl
nop
and
jbe
je
xchg
xchg
lods
outsl
pop
xor
inc
dec
shlb
imul
jnp
adc
sbb
push
int3
aad
jns
iret
push
fisubrs
xlat
outsl
push
je
nop
in
bnd
lcall
xor
jo
pop
mov
sub
jl
add
mov
sub
dec
ret
and
or
pop
xchg
test
cmp
xchg
or
fcmovnbe
arpl
es
sbb
or
jne
loope
sbb
fisubs
loope
daa
add
adc
jbe
inc
jns
popf
jmp
xchg
mov
ficomps
pop
xchg
mov
lahf
jb
cmp
aam
dec
lahf
pop
testl
gs
es
jnp
push
int3
into
call
repnz
cwtl
mov
iret
cmp
outsl
mov
push
xchg
leave
popa
jne
mov
push
es
sbb
adc
cmc
pop
std
inc
cmp
dec
mov
out
js
scas
dec
adc
popl
xchg
xchg
arpl
stos
stos
mov
in
pop
push
pop
lock
mov
and
fmul
mov
mov
aad
sbb
aaa
dec
flds
js
jb
xor
es
pop
lds
adc
hlt
push
pop
pop
jge
jno
mov
cmpb
or
mov
jmp
jecxz
fdivr
add
xchg
mov
adc
jne
or
mov
fldcw
adc
cmpsl
sub
and
sub
jns
mov
or
test
mov
loope
jno
outsb
rcrl
jno
jp
mov
ljmp
pop
iret
dec
dec
ljmp
test
inc
cmp
js
jge
mov
insl
mov
mov
xlat
mov
xchg
sub
and
fisubl
sub
sbb
xchg
imul
xchg
xor
faddp
test
inc
xor
and
mov
movsb
aad
pop
mov
bound
cld
nop
mull
mov
lds
lods
mov
pop
push
ja
loope
sub
enter
cs
sbb
dec
sbb
push
loop
xlat
adc
pop
cmp
int3
mov
lret
ja
or
pop
lret
xchg
in
mov
in
xchg
mov
push
add
adc
cmc
mov
inc
xor
inc
push
test
and
mov
cli
jmp
cmp
sub
addr16
mov
add
mov
xchg
icebp
in
pop
mov
mov
outsl
inc
lahf
dec
inc
pusha
add
cmp
mov
imul
jge
repnz
mov
push
cmp
push
add
xchg
ficompl
ljmp
aam
pop
adc
mov
popf
movsb
xor
imul
mov
ret
cmp
data16
lret
movsb
repnz
sbb
ljmp
aas
jne
stos
and
loopne
cmp
loope
fmuls
jecxz
fwait
push
xor
sbb
mov
jp
lcall
mov
or
mov
and
loopne
adc
leave
shll
and
ret
adc
faddl
daa
je
mov
xor
dec
dec
stos
push
cmp
ss
mov
data16
repz
lods
lret
arpl
inc
mov
sub
and
dec
dec
out
outsb
ret
inc
jl
cmp
ficompl
bound
pop
aas
push
aas
sbb
xor
sub
mov
sbb
popf
sbb
mov
orl
pop
ret
lea
pushf
test
fnstcw
in
xor
cmp
stos
adc
cs
pusha
mov
fmuls
ftst
cmpsb
pop
insb
jnp
xlat
lcall
inc
cltd
loop
popf
mov
pop
xor
sahf
dec
xchg
das
cmp
adc
sub
and
xchg
out
add
mov
pop
mov
mov
in
hlt
cwtl
jno
mov
insl
lds
cmpsl
bound
jmp
sbb
xchg
pushf
cmp
push
jle
iret
lods
or
rcr
xlat
cs
push
push
adc
jnp
mov
nop
in
xchg
repz
js
adcb
jle
sbb
sub
ror
push
roll
scas
inc
mov
mov
stos
and
lahf
pop
or
mov
mov
mov
loop
test
paddsw
cltd
sbb
sti
lret
mov
jne
pop
jle
add
and
cld
adc
and
mov
data16
mov
mov
into
ds
in
or
ficoml
aas
xor
pop
sbb
sahf
lcall
pusha
shll
int
adc
sbbl
push
data16
into
dec
push
mov
rorl
aam
xor
stos
cmp
cmp
add
outsb
faddl
mov
ds
fsubr
push
out
dec
je
push
lods
mov
xchg
cmp
cmp
mov
out
movl
cmc
inc
ret
inc
das
popa
nopl
jnp
cmp
push
mulps
jbe
xchg
mov
aas
mov
test
jnp
sub
repz
cs
iret
in
jl
dec
mov
imul
jle
sub
jg
fiaddl
mov
clc
sub
mov
aaa
jg
xchg
and
cmp
aas
or
jmp
xchg
pop
and
mov
fcomps
mov
ds
dec
or
inc
idiv
pop
cmp
mov
pop
pushf
aaa
push
je
scas
fnstcw
cltd
mov
iret
sub
in
mov
cmp
pop
adc
mov
es
push
loop
cs
iret
push
hlt
adc
icebp
pop
dec
jns
or
ljmp
arpl
jae
push
addr16
orb
mov
sub
sub
sarl
dec
add
mov
sbb
pop
lahf
jge
insl
xchg
push
push
imul
std
test
or
xchg
pop
ds
call
addr16
push
insb
mov
push
aad
pop
push
nop
sarb
sub
mov
push
punpckhbw
cmpsb
pusha
jnp
push
or
pop
cmp
inc
adc
and
out
jle
test
jns
dec
mov
add
lret
sbb
pop
jmp
idivb
lods
push
dec
out
fstpl
push
mov
aad
out
and
push
inc
dec
cmc
jo
xchg
std
sub
test
popf
mov
mov
adc
out
dec
testb
jns
mov
adc
sbb
add
jnp
xor
stos
stos
aam
or
data16
mov
ficoms
push
pusha
imul
repz
inc
pusha
cli
in
in
and
test
movsl
mov
sub
cmp
mov
popa
negl
sbb
test
xor
mov
dec
mov
xchg
out
xor
bound
arpl
in
enter
xchg
dec
xchg
lcall
and
nop
cmpb
leave
outsb
xchg
repnz
push
scas
dec
cmp
out
nop
xor
repnz
adc
das
mov
fdivp
scas
mov
and
adc
inc
sub
push
arpl
jge
jnp
loopne
xchg
cmpsb
add
sub
push
lods
and
mov
mov
jle
push
cmpsb
push
fdivrs
lcall
pusha
mov
pushf
lods
mov
js
push
jmp
push
bound
outsb
das
out
sbb
sub
dec
pop
fwait
mov
push
shrl
mov
mov
test
test
xchg
data16
fisubs
in
push
mov
mov
imul
fs
xor
sbb
jp
or
jns
push
outsb
xor
or
lds
mov
fs
jo
cmp
call
push
sub
lret
pop
pop
lret
add
push
in
mov
and
cmc
mov
inc
mov
sti
sub
inc
cmpsb
mov
jbe
lods
pop
lcall
fadds
out
or
pop
xchg
add
shl
loopne
adcl
inc
jl
mov
cwtl
lods
adc
and
cmp
ret
sbb
dec
mov
add
int
outsb
cmp
pop
sub
add
cmpsb
pushf
call
ss
movsb
repz
cltd
add
ljmp
sub
int
rorl
mov
sbb
push
mov
adc
cmc
repz
mov
cmp
mov
dec
xor
xchg
lods
loope
mov
jno
popf
hlt
lods
xchg
mov
icebp
jno
add
lret
push
test
orl
enter
mov
mov
sbb
cmpsb
int3
mov
sarb
xlat
push
ds
and
sub
imul
movups
xchg
outsl
adc
lret
or
cmp
sub
mov
js
out
stc
xor
add
cmp
fwait
shrb
pop
lock
leave
mov
jae
xlat
int
int
inc
sub
pop
call
out
sbb
insl
addr16
xchg
xlat
jnp
in
mov
leave
jae
inc
clc
jp
adc
iret
into
into
cmp
jae
fistpll
mov
es
cmpsb
aam
pop
xchg
jo
lcall
out
mov
xor
lret
sub
dec
rorl
mov
fmull
lods
cmp
inc
movl
jno
int
push
add
xchg
cmp
ret
add
pop
jae
push
jle
mov
jbe
fs
popf
mov
or
add
sub
lea
movsl
loope
sti
jp
pop
push
push
push
pop
lret
insl
dec
dec
adc
pop
lahf
and
loop
xor
adc
outsl
sbbb
sahf
xchg
shlb
icebp
adc
and
cmp
imul
aam
jb
repz
adc
fisttps
jge
rcr
fs
lods
cmpsl
cmp
roll
xchg
sbb
das
push
mov
movsb
inc
inc
cld
out
sub
popa
in
ljmp
push
popf
xor
lret
adc
and
mov
mov
push
mov
call
loopne
inc
clc
movb
test
inc
mov
ds
data16
das
jnp
dec
les
popa
cs
pop
or
jle
ret
and
imul
dec
mov
mov
add
mov
add
in
cs
bound
mov
aam
pushw
push
popf
pop
lods
pop
jg
outsb
jge
mov
nop
in
xchg
pop
fabs
jmp
add
call
popa
in
jns
sahf
mov
dec
repnz
xchg
sahf
cmp
gs
rorb
test
mov
mov
insb
fs
lcall
out
ret
dec
inc
pop
cmp
int3
aad
lods
fistpll
mov
out
not
pop
dec
pop
addb
push
pop
scas
mov
or
xor
xchg
aaa
jae
icebp
movsb
jge
fists
dec
mov
sbb
popa
testb
nop
out
jns
push
hlt
mov
in
jb
fnstsw
inc
xorl
ret
xlat
mov
sub
xor
arpl
jno
mov
repz
dec
addr16
sbb
sub
cs
divl
pop
rol
mov
cmpsl
jo
xchg
cli
loop
sub
fnstenv
mov
mov
pop
push
insl
pop
push
inc
pop
int3
dec
fsubrl
fbstp
int
cmp
mov
mov
loop,pn
loopne
or
fwait
pmulhuw
aad
int
clc
dec
fwait
clc
movsl
xor
dec
out
mov
cmc
test
sbb
jnp
mov
ret
scas
adc
inc
mov
and
mov
es
je
outsl
pop
cmc
gs
mov
fs
jmp
mov
scas
shrb
xchg
inc
pop
ds
test
loope
push
xchg
push
jnp
add
mov
stos
int
or
scas
fidivrl
jg
xchg
incb
xor
xor
and
xorl
cld
mov
in
nop
mov
inc
cmp
repz
loop
mov
push
jae
fstpt
push
je
pop
push
outsb
xchg
or
push
inc
dec
cli
cld
addr16
push
outsb
push
sahf
mov
pop
inc
jns
adc
stos
ds
push
push
dec
fwait
or
xor
aaa
stos
xchg
rorb
mov
lock
outsb
cmp
lods
sub
in
popa
mov
adc
xor
dec
sbb
pop
xor
xchg
pop
mov
and
je
loopne
cli
and
andl
out
call
lods
sbb
pop
sub
add
cld
cmp
mov
mov
adc
cmp
mov
orl
insb
mov
sbb
out
mov
in
push
flds
test
rolb
jp
pop
repnz
das
sarb
xchg
adc
outsb
inc
cmp
imulb
mov
ljmp
jo
fstpl
scas
arpl
leave
fists
or
test
sub
faddl
mov
sbb
push
add
pop
ror
jbe
pop
dec
pop
sub
push
or
in
ljmp
push
mov
mov
incb
sub
cmpsl
sub
out
adc
push
pop
leave
mov
or
iret
aam
xchg
cs
fistpl
sti
fcoms
jle
or
rol
sbb
dec
cmp
pop
imul
rorl
jb
mov
xchg
lret
dec
cmpsl
mov
add
rorb
fs
or
mov
sbb
or
cmp
xor
cmp
jle
mov
jae
insl
leavew
pop
push
dec
or
pop
mov
lods
out
movsl
jge
jb
pop
jecxz
insb
xor
sub
sbb
xchg
stc
int
sbbl
mov
add
add
cmp
mov
xchg
inc
sbb
mov
jnp
lods
cs
mov
jl
inc
cmp
inc
push
repnz
xchg
push
push
mov
rcr
loopne
dec
pop
push
rcll
inc
xor
pop
in
cld
xor
sbb
add
cwtl
inc
inc
xchg
adc
lods
cld
pop
jnp
and
lock
xorl
or
jmp
cmpb
out
add
mov
scas
sub
or
aam
outsb
ds
pop
hlt
ror
inc
xchg
sti
sbb
inc
call
movl
pop
leave
sbb
cmp
lods
dec
movsl
xchg
push
dec
pushf
mov
cmpsb
mov
push
jnp
jle
out
xor
xor
jo
xchg
dec
stos
add
jbe
sub
movsl
shl
lea
lcall
aaa
stc
xchg
jns
inc
loop
pop
je
test
outsl
mov
xorl
inc
shll
sbb
add
pop
mov
movsl
in
inc
jb
dec
lahf
push
xchg
imul
leave
test
orb
sbb
loope
into
std
ljmp
sub
dec
and
sbb
out
loopne
dec
insl
fidivs
jns
fldenv
mov
sbb
outsb
adc
es
insb
in
aam
fdiv
in
rcl
mov
addl
cmp
aas
out
or
lds
push
lods
mov
mov
and
pop
int3
mov
out
in
xor
fisttpll
fsts
or
cli
and
out
or
inc
and
or
sbb
ja
xor
or
sahf
dec
push
xchg
andb
add
int
mov
in
test
xlat
and
dec
xchg
cs
xchg
loope
push
inc
lret
test
mov
xchg
cmp
adc
mov
add
ljmp
inc
insb
aad
stos
jl
mov
and
hlt
sbb
pop
test
rol
jle
sub
mov
cld
mov
clc
xor
mov
cli
inc
sub
loop
out
mov
out
in
cmp
fcomp
in
in
sahf
xor
jmp
and
fstps
or
pop
xchg
push
sbb
inc
sub
cmp
mov
xchg
cmp
inc
popa
adc
push
leave
xchg
pop
in
pop
loop
pcmpgtd
pop
lret
addr16
mov
mov
mov
adc
mov
lods
sub
fistpl
insb
out
movsb
xor
xor
std
stc
jl
xor
push
sarl
jns
sub
out
das
lahf
adc
or
or
js
cmp
fs
mov
push
mov
mov
xchg
jecxz
out
jle
push
mov
mov
ret
jge
push
mov
jecxz
mov
jo
ds
xchg
imul
add
int
pop
adc
adc
shll
pop
inc
test
adc
test
cmp
jnp
movsl
subb
xorl
shll
int3
ljmp
dec
xor
jecxz
popf
jp
bswap
mov
sub
pop
push
push
pusha
js
or
pop
insb
lahf
inc
clc
pop
add
fnsave
cmp
daa
dec
add
push
mov
sbb
sub
xor
stos
or
dec
icebp
xlat
not
jo
negl
jns
push
mov
xchg
adc
mov
cld
xor
mov
and
add
call
hlt
cwtl
jl
inc
lods
mov
bound
stos
bnd
mov
iret
pop
or
js
inc
out
test
jno
outsb
and
jge
pop
adc
inc
cmp
ret
pusha
push
push
and
pop
adc
xchg
fcmove
test
insb
xchg
adc
into
in
or
adc
and
imul
adc
inc
pushf
lret
or
sub
loopne
lahf
adc
cmp
aad
loopne
inc
cld
mov
sub
xchg
es
sub
mov
dec
sub
xchg
cmc
fstp
cmp
cs
dec
and
call
push
sub
inc
or
or
stos
xchg
jno
roll
mov
inc
lea
jo
repz
and
or
pinsrw
sarb
sub
xchg
fnsave
jecxz
test
mov
jno
scas
sbb
cmp
in
inc
pop
or
lods
in
es
call
xor
lods
addr16
or
imul
lret
or
cmp
cmp
xlat
loopne
cmp
or
out
int
sbb
hlt
or
cmp
arpl
push
pop
and
mov
xchg
ds
sbb
aas
mov
pusha
and
clc
adc
lds
and
mov
pop
fwait
leave
repnz
jmp
lret
loop
mov
imul
fsubs
sarl
call
cmpsb
shll
mov
iret
movsl
jns
addr16
sub
jmp
in
xor
mov
and
mov
call
cli
insb
lret
jb
out
pusha
repz
inc
mov
inc
jecxz
int
cltd
mov
imul
xorl
jmp
sub
xchg
imul
enter
out
add
dec
outsl
lods
gs
add
dec
daa
dec
pop
push
inc
sbb
inc
and
jl
or
sbb
jle
movsb
sbb
push
roll
pop
xchg
jb
ja
in
in
xchg
pop
adc
fcomps
repnz
pop
jmp
push
inc
inc
into
fs
push
int
adc
mov
mov
into
inc
loope
xchg
popa
fs
or
aas
cmpsb
or
and
in
dec
sub
rcrb
xlat
mov
ret
adc
jno
jmp
outsl
test
inc
fcomps
in
or
or
and
fnstenv
cmpb
jbe
mov
nop
bswap
mov
stc
add
stos
aam
loope
pop
or
xor
or
push
fwait
sbb
cmp
sub
inc
pop
fldenv
sub
jge
aas
movsb
jae
pusha
les
mov
inc
aas
cmp
xchg
lods
adc
mov
cmc
adc
inc
mov
test
out
pop
cmp
clc
sbb
mov
adc
and
push
pop
mov
mov
lret
int
cmp
push
inc
enter
add
pop
cmpsb
adc
cs
sbb
fistpl
nop
insl
jne
cmp
incb
jns
cmp
mov
lahf
lret
jnp
jns
sbb
sub
bound
jg
dec
movsl
pop
xor
or
mov
push
out
jbe
xchg
xor
xor
outsb
pop
aas
jmp
cltd
frstor
mov
mov
test
push
jne
mov
add
nop
mov
pop
mov
inc
xchg
out
push
adc
hlt
and
add
das
add
add
in
pop
dec
je
lock
jmp
push
outsl
cmc
loope
jbe
xor
mov
mov
xchg
popa
sbb
xlat
push
jecxz
inc
push
test
insl
mov
and
inc
int
mov
call
or
addr16
sub
clc
lcall
dec
xor
push
lret
add
inc
push
je
sbb
imul
das
sbb
aaa
jns
ljmp
adc
lock
add
jmp
xor
cmpsb
ret
ret
cmp
mov
and
mov
pop
mov
fadd
pop
out
push
call
inc
jnp
test
dec
popf
popf
push
adc
mov
xor
push
mov
mov
dec
movsl
push
dec
leave
and
lcall
std
addr16
dec
into
mov
repnz
call
xchg
add
test
jecxz
jno
mov
rol
xchg
xor
mov
xchg
cmp
stos
bound
mov
sbb
jmp
push
call
pop
add
imul
and
jge
sahf
loope
div
sub
adc
xchg
xchg
push
adc
fisubrl
ss
sahf
rorl
cmp
jne
inc
mov
subb
mov
cmp
out
cmpl
fisubrl
adc
sbb
insl
std
xor
loop
sbb
test
xlat
inc
jbe
ss
mov
cmc
mov
psubsw
aas
ficomps
into
or
jecxz
xchg
mov
outsb
hlt
xor
dec
call
int3
das
mov
stos
pushf
and
ret
cwtl
mov
mov
mov
xor
inc
repnz
inc
stos
dec
repnz
pop
movsl
rcll
xchg
pop
rorl
jbe
out
and
mov
pop
cltd
fsubrl
loop
repnz
cmpl
imul
outsl
mov
add
push
fiadds
cmp
in
cmpsb
aam
test
setbe
das
push
cld
or
test
int3
sbb
leave
cwtl
push
lds
cli
mov
jecxz
sub
and
jmp
leave
leave
push
fistpll
int
adc
ss
sub
std
outsb
pop
iret
cmp
mov
jns
adcb
fldt
xor
testl
push
jl
int
notb
sub
mov
or
mov
pop
sub
or
in
stos
mov
fbstp
dec
pop
and
mov
outsl
idiv
and
aam
nop
push
sbb
loopne
lea
test
fcoml
scas
jecxz
push
cmp
stos
cmp
jl
push
mov
inc
hlt
or
push
imul
cmpsb
or
mov
adc
push
mov
mov
lock
jns
addr16
sub
cmp
out
rolb
dec
std
cs
test
push
xor
jnp
mov
mov
mov
movsb
mov
mov
ret
fmull
ffreep
inc
inc
jb
sbb
inc
js
mov
fidivl
inc
cld
cmp
mov
fisubrs
dec
dec
cmp
shrl
outsb
push
mov
fsubrl
cmp
sbb
sbb
into
movsb
fisttpll
std
pop
dec
imul
in
add
mov
xor
cmpsb
mov
clc
push
es
adc
in
into
and
mov
cmp
nop
mov
fsubrs
repz
or
jl
std
addr16
jne
cmpsl
pop
sub
es
xchg
jns
aaa
leave
jg
jge
mov
cmpsb
push
push
aad
adc
fs
mov
cmp
pushf
xor
mov
dec
sar
mull
or
ja
out
mov
in
dec
repnz
hlt
jns
push
fld
sbb
push
jo
cmp
xchg
test
dec
xor
and
std
mov
aas
data16
in
sub
mov
in
and
fwait
pop
loope
out
mov
and
cmp
xchg
jae
ja
fsts
lock
ret
iret
out
sbb
inc
push
adc
pop
shrb
loop
hlt
in
mov
pop
and
cmc
push
jae
adc
sbb
gs
adc
sbb
cwtl
movsb
lock
and
bound
dec
iret
xchg
sbb
imul
iret
ds
pop
scas
jne
stos
push
cmp
inc
ss
scas
add
scas
mov
sub
sbb
mov
pop
je
sbb
lock
pusha
push
leave
nop
cli
or
in
push
popf
bound
outsb
xor
fsub
inc
xchg
ret
lods
repz
mov
fs
test
ds
pop
sbb
or
inc
pop
sbb
xchg
mov
xchg
cli
mov
repnz
push
xor
xchg
mov
lret
inc
outsl
out
dec
mov
mov
jge
inc
rcrb
leave
inc
and
movsb
dec
xor
cmc
jg
mov
cmpsb
stos
mov
pushf
push
push
movsb
idiv
mov
gs
add
add
jo
pop
mov
xchg
in
fdiv
mov
pusha
xchg
and
shlb
mov
ljmp
mov
jl
push
dec
sbb
call
adc
cmp
pop
xor
ds
mov
jl
in
clc
push
cmp
dec
xor
ret
repnz
mov
adc
jge
xchg
mov
mov
in
push
xchg
xchg
mov
push
addr16
test
sbb
mov
shll
pop
cmc
jp
inc
lret
inc
xchg
inc
dec
pop
in
mov
ja
xor
sub
ds
push
dec
jecxz
scas
frstor
lods
loop
stos
cmpsb
inc
movsb
dec
daa
fidivrl
xor
in
pop
add
dec
outsl
lret
in
aad
lret
jb
lods
xchg
cs
jbe
inc
mov
incb
jmp
mov
out
mov
aaa
jno
mov
sub
pop
push
cmpsb
push
outsb
push
loop
pop
push
xchg
adc
cmovno
lret
xlat
clc
xchg
adc
xor
or
pop
movsb
jbe
add
stos
jecxz
or
loop
sub
mov
nop
jmp
fidivrs
cmp
stos
mov
in
dec
aad
cmp
cmp
ret
icebp
or
mov
fnsave
sbb
ficomps
iret
decl
imulb
aad
push
jge
adc
adc
dec
sub
push
in
cmc
lods
dec
cmp
mov
int3
enter
jmp
es
stc
in
push
push
frstor
clc
loope
mov
sbb
add
shll
mov
lods
mov
jns
inc
andl
push
clc
es
sbb
cmp
push
aad
je
sub
dec
pop
imul
lret
sub
mov
sbb
sub
push
xchg
lods
mov
adc
jmp
pop
inc
lcall
ljmp
out
popa
and
adc
ret
add
push
jae
and
stos
and
inc
fsubr
sti
pop
fistl
adc
push
pop
dec
adc
fidivrl
add
cmp
inc
mov
xchg
stc
outsl
jo
repz
jo
sbb
and
and
jb
iret
push
jns
xlat
mov
lods
sarb
aas
test
add
sbb
sub
stos
jo
dec
xchg
jmp
data16
sbb
push
pusha
ficoml
xlat
mov
push
xchg
or
cmpsl
sbb
inc
je
or
cmpsb
add
dec
cmc
pop
test
mov
sti
iret
imul
push
lcall
push
mov
scas
outsb
leave
loope
push
movsl
sbb
ljmp
sbb
cmpl
sub
sbb
mov
cmpsb
gs
sti
jl
scas
out
clc
push
jg
call
ja
pop
ljmp
ret
xchg
lahf
arpl
xchg
mov
push
shl
fisubrs
out
and
mov
enter
pop
lret
aam
movsl
xor
pop
jge
add
imul
outsl
pop
dec
jns
mov
xchg
in
or
aas
cs
mov
sbb
out
lods
pop
lock
cmp
js
in
inc
fimuls
sarb
stos
in
and
js
sub
test
xor
xor
sbb
cmp
xchg
out
inc
bound
rcrl
mov
xchg
andb
mov
mov
inc
pusha
mov
or
xor
jmp
bound
xor
xacquire
sbb
dec
and
js
lea
mov
jl
mov
add
scas
xor
xor
lret
xchg
mov
xor
mov
push
sbb
out
ret
dec
sbb
cmpb
stos
out
adc
add
rcll
iret
cmp
stc
ja
arpl
arpl
push
fs
xor
mov
inc
add
cmpsl
cmpsb
aam
insb
out
push
leave
or
mov
xchg
ret
pop
cmpsl
aas
arpl
cmp
fsubl
dec
adc
notl
pop
out
popf
test
jg
sbb
je
imul
loopne
xor
cmc
aam
xchg
and
push
test
and
xor
mov
rcrl
sbb
test
xchg
mov
lods
sub
mov
pop
jl
xor
dec
mov
jle
lea
jnp
test
jne
imul
hlt
fnsave
insl
jbe
data16
leave
jl
mov
mov
sub
imul
pop
and
mov
enter
lods
inc
in
dec
jg
mov
dec
adc
sub
mov
outsl
and
jg
dec
dec
mov
and
sbb
push
fisubrs
lret
in
sbb
xor
aad
xchg
or
mov
cmp
insb
in
les
mov
add
pop
in
mov
ss
lea
xor
jmp
pop
add
and
and
sbb
lock
jbe
xchg
rcl
outsb
dec
lahf
dec
stc
mov
jno
cmp
add
test
stc
xchg
iret
dec
mov
lds
into
sbb
xor
xor
gs
fwait
mov
cmp
je
cmpsl
mov
dec
xchg
push
push
aaa
jle
or
lock
in
dec
cltd
sbb
mov
adc
movsl
mov
or
pop
ds
adc
mov
dec
mov
ljmp
add
mov
sarl
and
lcall
in
aaa
lock
and
sub
cld
ret
jl
xor
mov
fcoml
loopne
xchg
cmp
lods
mov
sbb
movl
adc
mov
nop
into
cmc
mov
enter
xchg
es
in
xor
and
xor
test
movsl
push
test
jne
mov
fmuls
imul
jle
pop
out
xor
mov
pushf
cmpsb
lods
pop
imul
jmp
mov
loop
test
push
or
lods
rcrb
dec
cvtdq2ps
pop
mov
in
mov
rorl
xor
inc
mov
iret
adc
mov
adc
sub
testb
pushf
cs
inc
lret
nop
sbb
imul
jl
cwtl
arpl
imul
pop
in
ljmp
dec
add
lret
xchg
add
fadd
mov
fsubrs
xor
sub
cli
mov
ja
xchg
xchg
add
jnp
xor
cld
dec
inc
adc
push
xchg
inc
push
jno
push
out
out
js
cmp
cwtl
xchg
test
sbb
xchg
sahf
mov
sub
inc
or
out
cmpb
dec
dec
xor
sub
xchg
es
sbb
aad
push
pop
and
pop
int3
les
test
and
sti
dec
mov
pop
out
xchg
or
cmpsl
pop
sub
outsb
push
insl
adc
in
xchg
dec
sub
loop
lcall
es
xchg
mov
sbb
shlb
mov
adc
nop
arpl
pop
clc
xchg
jl
repz
xor
dec
inc
mov
sbb
push
jl
or
adc
push
test
andl
aam
fucomp
fnsave
push
lret
insl
stos
mov
shrl
in
fisttpll
dec
inc
js
int3
in
sub
mov
pop
sbb
nop
mov
aam
cmpsb
loop
mov
test
dec
push
xorb
inc
jl,pt
sub
sbb
inc
push
sub
cmpsb
xorb
and
sahf
jg
jmp
jo
cwtl
cmp
and
sub
cmpb
stos
rol
sub
mov
flds
test
xchg
dec
shlb
mov
push
xchg
push
fsub
xor
hlt
andl
add
jle
icebp
pop
cmp
and
popa
pop
mov
mov
mov
les
jge
shll
inc
fwait
and
lret
gs
sbb
or
push
sbb
scas
pop
push
push
pop
pop
cld
push
shll
clc
jb
test
mov
outsl
mov
test
push
setne
loop
sub
push
test
inc
mov
test
cmp
sahf
in
int3
ja
arpl
mov
aas
xor
call
dec
loop
jnp
and
int3
mov
dec
daa
xchg
enter
ret
jle
ja
and
cmp
rolb
pop
aam
adc
dec
sbb
push
push
jne
ja
pop
and
add
pop
dec
sub
push
inc
jecxz
inc
push
ret
mov
inc
loope
add
in
xchg
xlat
xchg
xor
scas
sub
pusha
test
mov
ljmp
fiadds
sub
loope
or
mov
xor
je
cmp
imul
jae
cltd
mov
and
fwait
ret
fcoml
jae
xchg
cmp
xchg
lock
sahf
or
ljmp
int
push
dec
fdivl
push
mov
ret
sub
mulb
loopne
dec
push
imul
out
xchg
insl
xor
aad
jno
mov
sub
test
lcall
pop
frstor
adc
mov
in
out
cmp
int
or
lea
add
cwtl
in
mov
xchg
pop
lsl
mov
mov
or
stos
icebp
mov
fcmove
rcrb
test
scas
pop
jmp
lea
test
shl
cmpsb
in
outsb
and
ljmp
push
jmp
pop
jmp
or
dec
scas
mov
movsl
cmp
sarl
inc
repz
xlat
push
iret
int
bound
cmc
orb
repnz
ret
out
push
mov
push
rolb
insl
or
dec
jmp
sub
loope
call
sbb
pop
mov
adc
jo
imul
xchg
mov
mov
push
sahf
ds
fcoml
cmp
cwtl
mov
push
add
jmp
lret
nop
lds
lahf
mov
cs
or
mov
lods
jb
dec
call
or
data16
xor
int3
adc
int
or
lahf
leave
pop
jne
outsb
dec
mov
jo
pop
lods
add
daa
inc
pusha
cmpsb
and
xchg
repz
in
inc
cmp
sub
js
std
adc
mov
adc
dec
test
test
cmpsb
stos
mov
or
cmp
mov
xchg
movsl
push
fmul
jmp
fdivrs
xchg
and
jb
ja
jle
lock
or
adc
fisubl
push
clc
daa
fstl
add
inc
xchg
sub
andl
fucomi
pop
fcmovnb
push
fdivp
xor
ret
sbb
in
inc
dec
cltd
jge
pusha
push
in
loop
icebp
xchg
stos
cltd
popf
pop
cmpsl
push
adc
sub
inc
mov
xor
fdivs
pop
push
shlb
or
jns
xorb
inc
das
or
push
icebp
xchg
loopne
pop
outsb
mov
adc
out
and
pop
mov
ret
int
push
stc
dec
dec
mov
lcall
bound
jle
xor
and
and
sub
in
and
sub
fists
sub
es
insl
mov
stc
mov
pop
pop
push
or
and
in
mov
call
lret
cwtl
or
sahf
ret
push
jnp
push
jl
lods
lahf
mov
pop
pop
cwtl
nopl
jne
pop
cmp
enter
and
aas
pop
stos
dec
fstpl
dec
xlat
scas
fcomps
xchg
shl
adc
mov
or
mov
ret
shrl
dec
pop
push
dec
int3
bound
push
push
and
dec
jbe
jo
add
mov
test
cmp
add
incb
and
mov
cmp
pop
mov
xchg
ficoml
pop
ds
enter
ret
icebp
jge
jae
xbegin
aas
and
in
mov
xor
push
out
cmp
jne
fnstenv
out
cmpsb
je
pinsrw
rorl
rorb
int
cld
pusha
adc
mov
push
pop
sub
xchg
in
and
jg
stos
incl
int3
int3
cmpsl
cmpsl
ds
dec
sahf
pushf
movups
push
dec
adc
cmp
cli
sub
scas
pop
imul
cli
popf
mov
xor
and
jns
in
out
mov
cltd
cmp
sub
data16
pop
sub
mov
je
and
pop
sub
icebp
xor
js
jle
add
and
fwait
mov
sub
sub
mov
inc
xchg
add
fisttps
jne
nop
inc
fisubrl
mov
or
icebp
xor
add
aaa
aaa
ja
cmp
jg
adc
nop
cmp
frstor
jp
mov
sbb
out
mull
dec
imul
insl
in
test
push
jp
mov
pop
in
push
call
mov
jbe
jmp
push
shl
add
lcall
xchg
xor
push
into
cltd
cmp
sub
enter
fcoms
movsb
pop
enter
mov
sub
pop
sahf
dec
mov
xchg
cmc
mov
pushf
lods
pop
stos
inc
push
int3
pop
adc
or
enter
inc
and
std
add
mov
pop
jbe
cld
jge
shlb
xchg
or
daa
jecxz
sbb
jb
lret
bnd
push
sub
cmc
xor
fdivr
mov
jmp
pop
pop
push
stc
xor
aaa
xor
lret
cli
or
dec
loope
test
jo
jg
mov
adc
fcomps
dec
cmpsb
adc
and
and
jb
adc
lea
shll
pop
ss
pop
add
sarl
add
cltd
sub
insb
movsb
adc
imul
aad
dec
in
cmp
sbbb
dec
inc
aas
das
and
sbb
inc
cmpl
add
push
bound
shlb
cmp
jbe
popa
mov
inc
mov
mov
jno
in
fcoms
push
sti
lcall
mov
push
mov
int
inc
xor
fwait
xor
testb
or
jle
idivb
shlb
fisttps
inc
insb
loopne
std
sbb
jo
cld
cmp
ret
jo
stos
jge
or
mov
adc
dec
gs
repz
xorb
popf
mov
divb
filds
add
and
pop
cli
imulb
dec
sti
mov
es
cli
es
inc
dec
pop
fisttps
hlt
daa
xchg
daa
lods
xchg
out
minps
pop
fsts
or
dec
dec
mov
mov
lahf
stos
fbld
inc
and
fsubl
adc
repnz
xor
arpl
and
in
ljmp
rclb
sbb
outsl
test
sbb
cmpsb
addr16
call
leave
rol
std
add
push
mov
cmp
push
sub
testl
xchg
dec
add
enter
imulb
xchg
xlat
sbb
xchg
addb
aaa
cmc
or
notl
pop
adc
out
adc
mov
lods
xchg
jns
adc
cwtl
fdivs
out
std
ss
ds
icebp
sub
dec
test
mov
bound
mov
adc
pop
adc
imul
sti
mov
and
call
subb
jo
xor
bound
push
xchg
popf
cmp
movsl
or
scas
inc
mov
dec
repz
popf
incb
leave
push
inc
je
cmpsb
mov
leave
lahf
ret
push
popa
stos
sub
lahf
pusha
lret
imul
add
fdivs
mov
fiaddl
out
push
mov
inc
push
and
fnstcw
mov
jge
adc
roll
roll
test
mov
inc
mov
and
rol
scas
sbb
or
andb
mov
xor
mov
sahf
cmp
pop
dec
pop
pop
lret
push
adc
mov
sbb
repz
pushf
adc
stos
sub
lods
jge
inc
out
fucomp
lea
inc
int
ja
mov
push
mov
mov
js
shll
icebp
sbb
ds
test
cmc
mov
pushf
loope
or
cwtl
sbb
test
gs
pop
sbb
push
lods
and
das
or
pop
popa
imull
lods
aaa
push
insb
loopne
cmpb
jle
in
and
into
nop
int3
mov
sti
lahf
out
adc
imul
mov
cmc
sub
add
and
mov
fsubrs
jbe
dec
fldl
or
mov
xchg
inc
xchg
fdivl
xchg
dec
cmp
dec
push
mov
sub
push
add
xchg
mov
xchg
push
sub
add
xor
insb
sbb
adc
sub
dec
scas
cmp
js
dec
add
test
rolb
out
sbb
dec
loopne
hlt
sbb
fidivl
push
gs
jne
int
push
adc
pop
xchg
cmpsb
popa
adc
orl
inc
xchg
add
stos
mov
xchg
dec
ror
cmp
repnz
sbb
dec
mov
outsb
push
movsb
cmpl
inc
fisttps
xchg
in
icebp
pusha
ds
pop
int
cs
std
roll
mov
icebp
lea
lods
jae
push
sub
out
sbb
adc
loope
cli
adc
pusha
rorb
js
imul
les
xor
dec
fwait
adc
adc
enter
jae
lret
loop
jle
popa
xchg
ss
stc
lds
scas
repnz
mov
aas
mov
cmpsb
pop
xor
movsl
shll
rclb
rcrl
cs
mov
pop
imull
mov
jge
mov
insl
add
jo
fisubs
and
dec
lcall
aad
mov
rorb
cwtl
int
jne
sbb
and
loop
dec
sub
mov
lcall
cmp
and
inc
pusha
pop
and
push
call
xchg
cmpsl
leave
pop
movsb
dec
mov
movsb
push
popf
mov
push
insb
push
sub
jae
sub
inc
rcl
inc
mov
popa
mov
push
adc
mov
pop
pushl
jle
or
fdiv
fstps
xchg
xchg
xchg
jno
stos
loope
loope
stos
mov
inc
mov
sahf
xchg
int
fldcw
loopne
std
icebp
mov
fisubrs
testl
lahf
mov
xlat
idiv
dec
call
jns
mov
mov
add
xchg
cmpb
movsb
in
jbe
adc
mov
sahf
call
adc
inc
loop
cmc
in
jns
mov
dec
ss
mov
icebp
int3
sahf
stos
and
or
sahf
sbb
in
jp
lret
pop
pushf
ror
lea
fldenv
fnsave
fimuls
sbb
push
scas
stos
pop
sbb
stos
sub
arpl
dec
data16
adc
xor
cmp
cs
jne
popa
xor
popf
aam
push
loope
jne
or
dec
mov
cmp
or
nop
aaa
inc
xchg
imul
push
push
out
dec
bound
hlt
inc
inc
pop
ficompl
jae
add
movsl
imulb
jle
sub
rorb
mov
lcall
insl
je
mov
jecxz
stos
mov
call
and
mov
movsb
in
or
xchg
xor
test
dec
decb
jl
insb
push
sub
mov
clc
push
adc
jl
rcrb
dec
aas
xchg
bound
xor
fistpll
or
xchg
dec
inc
sbb
pop
xchg
in
movsb
sub
sub
repz
out
push
xchg
aaa
xchg
fbld
dec
push
push
inc
jno
fstl
leave
fs
sub
pop
cmp
mov
jbe
add
add
cld
or
inc
rcrl
dec
xchg
js
mov
jecxz
outsl
dec
cmp
dec
add
jge
mov
xor
into
pop
fs
popa
add
cmp
mov
je
bound
jecxz
shl
mov
sbb
stc
fcomps
pop
arpl
pop
or
mov
or
cmp
fstps
in
pop
mov
pop
jg
inc
sahf
inc
push
pop
lock
push
mov
pop
jl
sarl
mov
and
pop
push
addr16
mov
mov
lcall
das
insb
loope
lcall
push
aas
ret
je
mov
iret
or
adc
mov
lahf
cmpsb
jecxz
outsl
addr16
and
cmp
jne
or
cld
clc
jb
cmp
push
add
xor
cli
std
fimuls
push
addr16
cmp
pop
lahf
test
jbe
push
mov
xchg
jnp
mov
in
bound
add
repz
mov
mov
arpl
lods
dec
push
subb
stos
mov
jns
xor
inc
xlat
sub
lret
mov
fwait
cmpsb
adc
jne
pop
lock
and
sub
dec
loope
or
sbb
and
or
jg
jns
lret
pop
js
cmp
jp
xchg
mov
xchg
push
push
int3
lahf
xchg
sub
and
into
mov
inc
mov
inc
test
loop
aaa
cmpsl
cmp
cs
pop
cmp
int3
in
scas
mov
scas
sti
nop
push
dec
mov
lock
imul
jns
lds
aam
pop
fldt
insb
inc
orl
loopne
or
imul
in
stc
lahf
addr16
xlat
fcmovu
lea
shlb
into
adc
icebp
lret
pusha
stc
push
jbe
pop
fwait
dec
xor
adc
outsb
in
cltd
xor
xchg
mov
xor
in
imul
push
fwait
cmc
jmp
jg
movsl
nop
movsb
lods
jp
int
adc
adc
xor
mov
and
pusha
cmp
daa
test
mov
into
mov
pop
test
int3
out
test
popf
lea
or
dec
mov
dec
jl
addr16
inc
xor
mov
imul
out
push
lds
sahf
sub
adc
inc
movsb
mov
sub
into
xor
jl
add
ret
outsb
xchg
fisttpl
iret
sub
fldl
lds
pop
xor
inc
popa
pop
mov
xchg
adc
mov
pop
adc
mov
sbb
push
pusha
or
ja
mov
lock
xchg
and
jle
shlb
dec
adc
scas
adc
outsb
daa
lahf
pop
push
pushl
je
hlt
add
test
inc
ja
push
rcr
xchg
xor
dec
mov
dec
mov
xor
test
mov
mov
es
sbb
mov
dec
lahf
inc
jmp
adc
shl
out
xchg
movsl
push
xor
mov
pop
mov
dec
push
les
gs
lret
cmp
xlat
push
int3
sbb
mov
inc
sub
into
add
cmc
adc
push
or
mov
icebp
scas
cmp
fisttpll
adc
pusha
outsb
cmp
es
repnz
fs
pop
push
xchg
insb
fstl
mov
ss
inc
inc
xor
push
out
pushf
ret
jo
orl
mov
jp
jbe
cmp
imul
mov
xlat
adc
aad
or
faddl
sbb
jmp
jno
adc
jg
or
mov
aad
inc
or
push
sti
lret
mov
je
mov
mov
pop
ret
pushf
jle
jle
int3
pop
ret
push
add
and
and
loop
dec
loop
push
lret
inc
jbe
lds
inc
mov
das
dec
xchg
out
addr16
pop
dec
adc
in
aas
sub
mov
mov
ja
adc
addr16
outsl
push
loop
xor
sub
sub
push
popf
push
jo
aam
push
loope
push
cli
inc
dec
fnstcw
xor
int3
lret
mov
loopne
aaa
sub
dec
das
mov
sub
or
jbe
iret
fsub
js
ss
xchg
arpl
lea
sub
jns
mov
mov
imul
xchg
cmp
xchg
lods
inc
fadds
adc
cmp
enter
add
xchg
cmp
pushf
dec
in
das
mov
inc
int
xor
xchg
cmp
and
pop
mov
rorb
jae
mov
popa
icebp
dec
into
cmpb
jmp
jge
lcall
pop
mov
mov
push
subb
xor
push
pusha
jg
clc
inc
add
ror
ja
push
sbb
mov
mov
mov
bound
in
sbb
or
sub
push
sbb
lods
xchg
enter
cwtl
dec
or
push
imul
adc
add
adcl
mov
pusha
push
fstpl
push
jecxz
out
and
fstps
out
test
push
das
push
es
in
sbb
add
mov
loope
movsl
and
push
xchg
pop
mov
mov
cwtl
dec
clc
sbb
inc
push
push
xor
movsl
pop
cmp
push
cmp
into
aad
xchg
jae
xlat
inc
hlt
aaa
aam
pop
inc
stos
and
or
ja
aad
xchg
nop
sbb
imul
dec
bound
and
or
push
pushf
jb
push
or
push
and
dec
in
mov
cmc
rol
in
cmp
pop
pop
cmp
mov
scas
popa
into
push
lcall
adc
dec
aam
dec
aam
loop
and
lods
mov
dec
mov
xor
loop
jne
mov
pop
cmp
and
jae
mov
sbb
scas
push
and
pop
add
inc
xchg
mov
xor
dec
jbe,pt
pop
mov
lahf
xor
mull
fwait
int3
jbe
push
jb
fwait
popf
leave
pop
test
fildl
aam
mov
cmp
data16
rcr
repz
cmp
shll
into
int3
pavgb
mov
sub
or
push
aad
cmpb
leave
add
adc
jne
push
pop
xor
loop
shrl
mov
cli
sbb
cmp
sbb
jp
and
xorl
push
inc
out
mov
cmpsb
jle
pop
xor
out
shlb
or
fstl
loope
maskmovq
imull
adc
pop
orb
repz
test
mov
cld
bound
dec
jg
popf
clc
cmpsb
lock
pop
add
add
cmc
xor
or
lahf
fcompl
std
cmp
mov
jecxz
test
xchg
push
inc
push
ja
mov
sbb
push
out
inc
shl
out
jg
test
mov
mov
inc
xchg
mov
das
or
arpl
jle
mov
ret
fmuls
or
shlb
or
lods
fstpt
push
or
push
xlat
inc
push
es
popa
aas
jl
sbb
fildll
pop
jne
and
and
and
lahf
cwtl
pop
or
iret
push
jno
jnp
scas
or
outsl
or
mov
hlt
sub
loopne
push
push
rorb
cmp
addr16
sbb
arpl
dec
ficoml
jp
in
data16
pop
rclb
mov
push
incb
ret
lods
stc
test
jb
pusha
jmp
and
repz
test
cwtl
les
outsb
or
pop
sub
aam
mov
push
stos
and
add
popa
mov
sysenter
or
aad
subl
ret
inc
add
mov
sbb
fdivrl
outsl
and
or
lods
cmp
lds
push
js
push
xchg
lea
and
nop
loopne
popf
xor
mov
jnp
sbb
test
xor
mov
push
sub
je
add
jb
mov
or
cs
xchg
jl
ss
cmp
adc
fidivrs
in
ljmp
sub
push
jno
add
insb
pop
and
mov
dec
pop
xor
jns
movsl
es
mov
stc
mov
jns
mov
icebp
iret
dec
pusha
int3
mov
fs
jp
call
movsb
dec
push
mov
jmp
and
daa
les
lret
sbb
test
jo
mov
push
mull
ljmp
je
pusha
out
lcall
push
lcall
xchg
lock
xchg
lods
pushf
fisubs
push
mov
inc
pop
pop
sub
push
or
mov
xlat
cmp
and
and
cwtl
mov
imul
cmp
xor
aam
mov
push
fbld
loopne
pop
pop
sbb
scas
imul
push
or
pop
iret
cmpsb
push
dec
addr16
stos
dec
push
xlat
out
gs
jae
mov
aad
int3
jmp
jp
add
sbb
and
dec
inc
sub
sti
inc
xchg
cmp
jp
stc
push
out
ss
out
xchg
and
sbb
notb
sub
dec
in
jbe
xor
or
push
int
push
or
shrl
push
mov
lock
adc
sub
scas
xor
fcos
xlat
mov
lcall
push
xchg
push
mov
mov
ret
dec
add
cmp
sti
jge
add
imul
movsb
dec
stos
jle
addb
lahf
push
gs
sbb
pusha
push
push
lahf
dec
gs
fildll
mov
add
mov
jo
xchg
test
jnp
fnsave
jmp
push
mov
scas
jae
repz
test
int3
add
push
fwait
test
dec
sahf
dec
fwait
pusha
adc
lds
sbb
cld
ret
lret
and
sub
and
push
stc
enter
test
jo
mov
shrl
cli
push
mov
mov
xor
add
inc
mov
scas
xchg
adc
mov
ficomps
fs
dec
xchg
test
ret
std
hlt
mov
pop
jbe
fldenv
stc
arpl
push
sbb
test
mov
sub
insl
adc
jmp
adc
shr
cs
and
test
cmp
inc
xchg
ret
dec
push
jb
fwait
pop
cmp
stos
sahf
add
nop
test
div
push
push
hlt
sarb
or
xchg
pop
adc
and
xchg
lods
push
adc
sub
jge
dec
pop
test
int
test
sub
xchg
fimuls
mov
push
mov
fwait
adcl
xor
repnz
in
jg
cmp
sub
clc
aaa
sub
xchg
jl
jns
or
pop
gs
leave
imul
popf
mov
adcl
stos
push
dec
arpl
mov
jbe
jle
inc
and
sbb
cs
ljmp
xor
xchg
xchg
insb
out
mov
repnz
pop
cwtl
mov
pop
std
imul
rcl
adc
push
adc
push
aaa
push
or
jmp
stc
fwait
xchg
mov
fwait
cmp
push
aam
inc
lcall
mov
negb
mov
mov
adc
xor
sbb
mov
sbb
and
jo
fwait
outsl
cld
out
adc
popa
and
inc
pop
xchg
xchg
aaa
mov
ret
ds
adc
cmp
adc
pop
inc
fists
aam
imul
out
orb
iret
clc
bound
addr16
adc
mov
xor
fildl
push
mov
popa
jb
pushf
mov
mov
movsb
xchg
sbb
dec
pop
imul
dec
out
pop
idivl
mov
pop
cmp
aaa
loop
lea
and
adc
lods
mov
scas
arpl
push
das
pop
mov
pop
sbb
xor
in
test
imul
scas
iret
adc
or
or
std
xlat
and
mov
stos
fiadds
js
stos
jae
xor
ljmp
pop
clc
pop
rorl
scas
inc
mov
test
popf
je
mov
jmp
mov
lock
lock
popa
push
ja
subb
push
mov
xchg
dec
jno
cmp
das
jne
stc
jmp
mov
mov
jg
sbb
lcall
ds
fucomp
call
aad
push
lods
dec
hlt
das
clc
je
jge
fwait
mov
mov
fsts
xchg
arpl
in
dec
leave
ret
cmovns
loopne
xchg
jecxz
mov
xchg
mov
mov
jno
dec
mov
inc
cmp
orb
test
loop
cld
xor
add
cwtl
divb
cmp
jge
and
push
push
mov
jecxz
pop
filds
mov
rol
mov
xchg
pusha
inc
xor
mov
pop
dec
sarb
lock
cmp
out
rol
lea
ss
cmc
test
push
mov
cwtl
cmp
dec
add
sub
sub
ret
pop
daa
sti
pop
jb
adc
std
mov
psubb
rcl
int
cmp
jno
insl
or
or
xadd
pop
push
pop
add
inc
out
lret
cli
les
clc
outsl
pop
xchg
ret
sbb
xlat
int3
int3
cli
mov
jmp
add
and
popa
jg
xor
enter
addr16
fnsave
cltd
icebp
mov
pop
notb
fwait
adc
cli
sarl
je
or
lahf
mov
sarl
push
sbb
out
xor
xchg
pop
cmp
in
loop
icebp
lods
mov
out
cmpsb
mov
mov
out
pop
push
outsb
mov
in
cltd
and
aad
adc
inc
push
fwait
inc
and
xchg
ds
pop
aas
in
ret
or
stos
shlb
jb
out
mov
mov
inc
xchg
popa
outsb
notb
and
cmp
sub
lods
enter
fldt
into
and
inc
or
xor
dec
cmp
addr16
rcrl
in
sbb
jge
xchg
cmpsb
imull
adc
rorb
not
mov
stos
push
daa
ljmp
dec
insl
xor
xor
lret
in
cli
or
push
sub
xchg
mov
stos
cmpsb
pop
rorl
repz
movsl
inc
jno
jmp
ss
xchg
jmp
fisubl
mov
cmp
arpl
adc
cmc
repnz
dec
mov
sahf
fwait
test
jbe
hlt
bound
mov
fwait
dec
pop
xor
jb
mov
ds
push
cli
xchg
jmp
pop
andl
xchg
or
lods
sbb
push
in
pusha
xchg
xchg
scas
enter
shlb
roll
cli
loop
jp
jns
xor
rorb
xor
xchg
insl
inc
test
add
add
push
std
rol
nop
lock
xchg
cld
cmpsb
mov
push
mov
or
in
push
sub
les
adc
mov
sbb
push
sahf
adc
pop
or
repz
icebp
cli
xor
jle
test
sbb
xchg
adcb
outsl
pusha
pushf
lcall
push
pop
sahf
pop
iret
push
cwtl
fistl
ret
daa
xchg
gs
insb
mov
adc
jo
push
ja
fdivrl
sbbb
xorl
add
adcb
outsb
test
imul
dec
scas
test
jo
sub
or
push
movsl
shlb
out
push
loop
ret
mov
sahf
xchg
dec
imul
addr16
push
or
push
push
cmp
or
sbb
and
rol
mov
lret
movaps
loope
pushf
sub
aas
aam
pop
fcompl
push
pop
inc
push
mov
sub
mov
popf
lock
popa
stc
adc
push
cwtl
xchg
aas
jmp
xchg
adc
mov
and
dec
adc
out
xchg
adc
xor
dec
push
sbb
mov
add
arpl
mov
push
ret
mov
inc
cmc
pop
and
cmp
push
sbb
stos
add
mov
pop
sub
cmpsl
jno
lea
faddp
in
test
xor
pop
repz
xchg
js
mov
jne
sub
inc
gs
xlat
scas
cs
test
sbb
sub
dec
cmpsb
in
ss
jnp
sbb
das
xor
add
cmp
mov
mov
push
cld
adc
shrb
adcl
movsb
jno
out
call
jg
pop
movhps
nop
push
push
pop
in
sub
or
enter
sbb
mov
xor
lea
cmp
outsb
fisttps
fcom
push
xor
cmpb
jo
cmp
sahf
lcall
inc
imull
cmp
aad
inc
iret
sbb
movl
sub
int3
dec
insb
and
rorl
add
sbb
movsb
lret
mov
lds
testl
cmp
xor
fcomps
adc
inc
into
pop
idivb
arpl
leave
pop
loop
dec
adc
out
push
leave
shl
pusha
mull
pop
xchg
fsubs
outsl
clc
push
sub
cmc
add
addr16
or
or
jne
ret
ret
lret
mov
and
loop
es
or
fwait
sbb
rolb
std
sbb
daa
testl
add
sub
rol
dec
test
pop
or
push
pop
scas
divl
shlb
int
mov
dec
xchg
adc
fcmovu
clc
xor
loopne
mov
iret
call
rcll
push
in
sub
sbb
xchg
mov
movsl
call
mov
adc
sub
rorl
pop
pop
cmpsl
call
orl
bound
sbb
xor
pop
inc
pop
dec
add
pop
inc
das
push
pop
mov
or
out
add
mov
add
sub
jl
add
cmp
subb
cli
sub
mov
xor
push
andl
push
mov
inc
ja
cmp
inc
jle
pop
push
cs
fsubs
lds
jae
inc
cltd
inc
mov
jnp
lahf
addr16
push
mov
aas
jp
sbb
stos
loop
push
push
arpl
data16
or
mov
movsl
add
popa
mov
xchg
cld
aas
aam
jecxz
in
push
stos
inc
mov
sbb
fildl
bound
sti
in
out
gs
das
or
sti
mov
adc
ret
mov
pop
jnp
inc
xchg
nop
mov
mov
pop
out
pop
mov
pop
loopne
cmp
movsl
adc
adc
pop
movsl
mov
andl
test
pop
pop
popf
gs
iret
arpl
enter
lcall
add
xchg
sub
sbb
mov
andl
gs
add
dec
jo
cli
sbb
nop
push
test
lret
fstpl
jo
push
pushf
sbb
sbb
les
test
clc
adc
fisubrs
cmpsl
dec
mov
mov
add
jb
cmp
sarb
xchg
iret
xor
jmp
xchg
popa
push
mov
add
add
add
ss
mov
or
adc
ss
pushf
mov
jg
in
cmc
adc
mov
andb
jge
ljmp
xor
push
mov
roll
pop
inc
imul
mov
xor
into
lret
or
sbb
mov
sbb
repnz
dec
dec
mov
push
inc
test
mov
push
inc
loope
lods
int3
pushf
repz
sahf
aam
inc
cmp
inc
shl
shrb
sbb
les
sub
pop
mov
xchg
dec
pop
dec
cmp
addb
scas
mov
rcll
in
mov
loope
xchg
aaa
rcll
in
out
cli
bound
popf
cmp
cmp
push
adc
or
adc
sbb
and
pop
int3
dec
push
xlat
xor
cli
cmp
dec
rcrl
imul
lods
xchg
xor
push
sub
inc
aaa
out
out
data16
outsb
cmc
mov
lods
mov
add
dec
push
mov
ret
int3
push
sub
into
test
ret
pop
loope
movsb
scas
dec
xchg
mov
mov
shl
or
mov
sbb
arpl
std
es
push
loop
xchg
xchg
push
dec
cmp
repz
in
dec
dec
jo
cmpsl
rcr
int
push
inc
cmc
cmp
cwtl
inc
mov
lock
popf
mov
sbb
setns
add
sti
sarl
je
cmp
bound
sarl
adc
in
mov
sbb
push
push
inc
xlat
sahf
push
sbb
jp,pn
push
sbb
push
push
repz
or
fbstp
and
jp
lea
xchg
movsl
pop
lods
cmp
fists
cs
test
int
testb
stc
jo
lods
jp
movsl
adc
push
jp
lahf
and
mov
jbe
fsubrp
ficoml
js
add
or
adcl
dec
mov
inc
mov
popa
loop
cli
outsl
cs
xor
mov
mov
loopne
adc
pop
js
mov
gs
clc
and
pop
mov
mov
mov
cmp
cmc
je
lods
mov
sti
dec
mov
pop
adc
aad
ss
mov
pop
and
cld
fwait
xchg
cmpsb
jns
jg
in
xor
adc
loopne
stos
cmp
mov
dec
mov
jl
jl
cmp
shrl
jne
adc
pop
dec
xchg
int3
cmp
rclb
xchg
aad
cmp
sbbl
shrb
and
insb
mov
and
push
aam
imul
jns
pusha
xchg
inc
popa
inc
lea
out
pop
sub
push
and
jae
int3
aaa
aas
fisttpll
jg
shrb
aad
jb
lds
loope
sub
and
pop
nop
rorl
adc
mov
scas
flds
fnsave
xchg
and
test
inc
lds
aaa
cld
jmp
xchg
into
loopne
idivl
lods
aaa
lods
mov
cmp
sahf
push
push
in
test
mov
or
and
mov
scas
pop
jnp
adc
lret
testb
jno
daa
cltd
addl
push
push
js
cli
cwtl
fdivrl
jne
iret
push
lea
add
sub
push
jp
insb
push
xor
lret
sbb
data16
xor
adc
inc
scas
sub
nop
out
mov
sbb
cmp
imul
dec
jp
add
adc
mov
lea
adc
es
pop
jle
cmp
dec
cmc
stos
bound
out
lahf
fstl
lret
sbb
mov
add
fistpl
repnz
sub
popf
mov
cmp
mov
xchg
enter
add
insb
lds
dec
xchg
rcrl
mov
xchg
pop
pop
jge
mov
ret
pop
push
loop
stos
pop
cmp
inc
dec
lret
fnsave
gs
popa
push
call
inc
push
lea
dec
and
cmp
pop
and
jl
mov
test
xchg
arpl
and
sahf
cmp
pushw
loope
out
push
aam
addr16
sub
or
test
and
xchg
mov
or
rclb
fcoml
in
mov
add
imul
clc
out
or
xchg
jno
adc
pop
adcl
test
cmpsb
stc
cs
sub
push
cltd
aam
mov
adc
or
repz
test
xchg
or
ja
or
aam
aam
xchg
pop
dec
push
gs
or
stc
cmpl
dec
push
jns
enter
jo
push
daa
js
jg
addb
stc
push
fwait
pop
pop
mov
mov
cltd
stos
adc
xchg
dec
stos
aad
push
lret
xchg
lods
mov
ss
xor
inc
sahf
xchg
jp
xchg
cli
mov
fld
test
cmp
add
adc
adc
pop
xchg
inc
add
and
inc
imul
push
scas
dec
arpl
sub
lret
adc
insb
shll
push
fiadds
pop
push
xchg
mov
or
mov
in
mov
xor
lret
inc
xchg
lds
dec
jmp
cmpsb
andb
rorb
out
std
stos
out
add
loopne
sbb
push
pop
sbb
adcl
pop
inc
mov
mov
xchg
mov
sahf
mov
and
loop
lea
sarb
push
cwtl
or
jns
enter
ds
adc
push
jnp
daa
pusha
xchg
daa
in
cwtl
xchg
aam
pop
pop
mov
call
jge
pop
mov
jbe
pusha
sub
xor
add
jp
mov
pop
loope
push
mov
ss
xlat
adc
clc
call
dec
sub
into
dec
mov
lea
push
shr
jns
jnp
adc
pop
loope
roll
stc
pop
lret
insb
sbb
scas
push
hlt
dec
daa
or
jnp
movsl
push
and
test
sti
fsubr
and
push
test
dec
inc
jb
stos
into
test
cltd
jno
or
inc
div
jno
mov
daa
js
inc
outsl
pop
shrb
mov
je
jl
mov
dec
loopne
adc
inc
sbb
xchg
xchg
or
imul
pop
call
sbb
aas
fnstenv
add
cltd
dec
aad
dec
pop
lret
sbb
mov
mov
jecxz
daa
jecxz
or
ss
mov
stos
mov
pop
sbb
jbe
mov
lods
rorl
push
mov
ja
cmpsl
inc
stos
clc
les
add
in
mov
jne
popf
jg
orb
mov
lds
and
xor
xor
aaa
sbb
dec
cmp
mov
int3
sbb
rcrb
fisttpl
cmp
xchg
jmp
inc
push
lods
inc
mov
aad
mov
xor
inc
lods
mov
std
adc
std
jb
aad
mov
cmpsb
mov
xchg
inc
xchg
mov
add
movsb
addb
lcall
mov
jmp
jmp
div
lret
push
mov
cmp
adc
jo
arpl
aas
mov
pop
mov
das
loop
sub
cli
popa
lret
js
scas
aas
cmpsl
or
mov
lret
test
scas
or
je
mov
repnz
out
inc
xchg
mov
adc
fcmovnu
nop
dec
xchg
dec
clc
mov
xchg
dec
dec
out
or
push
gs
push
xchg
fwait
inc
in
jne
adcb
cmpsl
push
scas
dec
adcl
ds
loopne
add
repz
dec
sub
shll
pop
cmpsb
maxps
xor
and
mull
call
xlat
das
ss
mov
sti
push
arpl
test
shr
mov
mov
mov
xchg
inc
cmpsb
mov
ds
push
jmp
or
ficompl
jmp
test
aaa
imul
push
lods
jo
mov
mov
test
xchg
pop
add
mov
add
test
sbb
mov
fs
aam
stos
jmp
xchg
and
or
mov
xor
aas
call
xchg
cmpsb
dec
pop
daa
add
repnz
xor
or
fwait
pop
xor
xor
test
into
xchg
add
push
xchg
int3
repnz
jb
jno
xadd
shlb
add
int
sub
jnp
mov
cmp
outsl
mov
ret
jo
rolb
add
imul
test
sub
aad
into
aaa
aam
xlat
cli
lods
stc
hlt
out
rcl
or
add
das
sbb
or
cmp
mov
sbb
xchg
mov
fildl
int3
outsl
aas
push
clc
scas
push
daa
xchg
sub
xchg
jne
xchg
mov
sub
cmpsl
xrelease
loopne
adc
sub
sbb
mov
add
popa
pop
lcall
lods
aad
imul
sbb
jmp
lods
test
or
mov
adc
jb
cmp
pop
lea
lcall
push
mov
cmpsl
push
sbb
aad
testb
fnstcw
dec
adc
out
mov
jg
add
or
rclb
fisubs
frstor
add
into
jge
into
cmpsl
inc
lret
push
fsubrs
sub
sahf
out
popf
loop
pop
ss
adc
js
pusha
std
ja
sub
fwait
shrb
xor
xor
or
push
push
xor
inc
addr16
pop
xor
loopne,pn
inc
stos
push
enter
ds
lods
mov
jnp
rcrb
xchg
cmp
int
mov
add
and
jbe
adc
bound
popf
adc
addr16
jge
imulb
mov
popa
pop
int3
sbb
ret
lcall
outsb
loopne
ja
ss
outsl
inc
daa
aas
stc
sub
mov
push
jnp
into
inc
add
es
rorb
sub
and
mov
push
xor
aam
andl
inc
sub
push
lahf
ss
imul
cmp
mov
push
les
mov
or
loopne
mov
xchg
add
lds
aaa
movsb
insb
imul
xor
or
movsl
xchg
adc
pop
jg
pushf
sub
cmp
sub
pop
repnz
mov
js
fsubl
fiaddl
shlb
in
adc
insb
push
push
and
jle
repz
inc
adc
mov
mov
dec
sbb
dec
aad
das
sti
sbb
inc
jl
repz
jle
popf
sbb
mov
cmp
sub
jmp
je
shl
and
fninit
lea
inc
fwait
pop
mov
jb
addr16
push
xchg
mov
into
sub
and
fcmovb
xchg
dec
mov
ja
and
adc
jb
ret
rorb
mov
iret
push
in
scas
xchg
cmp
xchg
addr16
into
negl
xor
mov
cld
dec
ds
cmp
leave
cmp
mov
idiv
leave
cs
and
aas
sahf
push
jg
xchg
sbbb
jmp
add
cmpsl
jecxz
and
inc
mov
loope
sub
outsl
mov
mov
xchg
lret
sub
ret
hlt
sbb
pushf
lret
and
xchg
and
xchg
sbb
inc
jno
les
inc
pop
add
test
mov
jle
lea
cmpsb
mov
pusha
pushl
das
imul
test
sbb
sbbl
inc
pop
popa
cmc
lods
sub
add
inc
sbbb
adc
js
sbb
adc
cltd
mov
lock
mov
xchg
sbb
fwait
and
sub
dec
push
xchg
mov
cmpsb
es
dec
ret
push
adc
test
call
xor
inc
int3
insb
roll
out
sbb
xorl
sbb
mov
ds
push
in
fidivrl
push
test
add
push
and
push
push
add
rcll
scas
mov
dec
or
lret
cmc
mov
in
cmpsl
and
sahf
outsl
or
sbb
pop
popf
outsb
rolb
flds
iret
pop
adc
mov
mov
pushf
pop
filds
adc
pop
pop
pop
pop
cmpsb
testb
jmp
mov
stos
in
push
jge
jns
xchg
sbb
mov
rcl
bound
fwait
pop
bound
and
faddl
jl
pusha
cmp
mov
jp
in
nop
inc
dec
pop
pop
adc
xlat
mov
iret
fld
adc
fistl
aaa
ja
inc
or
xchg
cmp
mov
adc
cmp
mov
inc
jl
add
add
jae
mov
or
rcrb
xchg
jl
jge
dec
lahf
jmp
imul
xchg
inc
aas
add
aad
pop
movsl
stos
fmul
aas
cs
pop
sbb
ret
aas
data16
fwait
xor
xchg
push
out
test
xchg
xchg
xor
xor
icebp
adcb
sub
ss
sub
push
jo
sbb
add
mov
or
add
cmp
xchg
push
and
sbb
adc
fcompl
push
push
jmp
stc
jge
cmp
fstpt
pop
out
mov
out
andl
in
out
mov
pop
push
sbb
cli
cmp
mov
mov
dec
mov
add
push
push
push
mov
adc
jnp
ret
adc
cmp
mov
incb
stos
testl
add
ret
jg
nop
ficoml
sahf
imul
insl
pop
and
aaa
jecxz
les
sbb
jae
xchg
and
stc
dec
dec
fistl
lcall
add
adc
ret
jne
nop
insb
fildll
paddusw
pop
push
pop
decl
repnz
ffree
xor
xchg
adc
daa
push
lcall
mov
lret
cmpsb
xchg
jmp
fldt
sub
fs
push
sbb
loopne
mov
in
or
adc
adc
test
mov
int3
and
push
jp
insb
sub
inc
add
ja
or
jb
dec
lods
iret
aad
movsb
and
push
and
and
cli
fstps
lds
add
mov
hlt
stos
sbb
out
out
push
jb
repz
sub
sahf
sbb
sub
inc
and
mov
inc
mov
stos
aad
pop
jp
int
inc
call
lret
push
daa
xor
xchg
bound
test
cmp
pushf
dec
aam
into
mov
mov
es
fcmovb
cli
scas
cmp
ret
and
notl
push
fnstcw
mov
mov
ret
loop
negl
jp
xor
dec
or
cmp
int
shlb
mov
or
bound
js
push
xchg
pop
rorl
sub
mov
push
testl
or
iret
orl
adc
orb
pusha
xlat
frstor
or
mov
dec
outsb
subl
jp
and
call
push
shll
pusha
sarb
test
push
push
push
test
testb
dec
mov
flds
xlat
sti
pop
adc
pop
insb
shlb
repnz
push
leave
jle
das
ss
ljmp
mov
sbb
dec
mov
cli
and
dec
aad
lcall
out
jecxz
and
cld
mov
cltd
out
mov
mov
es
jne
cli
and
sub
outsl
inc
pop
cltd
dec
mov
pop
pop
mov
push
mov
xchg
dec
pop
cmc
push
mov
mov
shrb
loope
mov
outsb
xchg
dec
dec
pop
add
mov
adc
subl
imul
add
ss
dec
outsl
lcall
cmp
leave
jnp
jg
movsl
inc
pop
in
cmp
lds
or
or
aaa
pusha
ja
mov
inc
mov
pushf
adc
mov
ljmp
jmp
idivl
stos
xor
pop
rcl
pop
jp
sti
arpl
scas
lds
ret
xchg
dec
repnz
xor
lods
iret
xchg
aad
mov
lahf
in
enter
push
data16
roll
and
dec
xchg
cmpsl
pushf
push
addl
shll
stos
push
jae
lret
xor
outsb
jne
or
pop
stos
lods
mov
sub
loop
mov
mov
sub
lret
xchg
test
cmp
sub
cmp
test
push
lock
sub
push
add
ret
push
add
leave
loope
mov
and
mov
fidivrl
inc
popf
mov
insl
and
mov
jmp
sti
push
jle
jmp
jbe
test
jne
es
sahf
adc
jmp
cmpl
add
in
push
fcmovbe
cli
pusha
movsb
adc
cmp
orb
addr16
cld
sub
cs
inc
dec
dec
les
fcomip
adc
xchg
jns
mov
stos
jl
inc
das
push
or
cltd
add
mov
test
xchg
mov
loop
jae
ret
and
dec
sbb
jmp
inc
inc
dec
mov
leave
mov
fists
inc
cmpsb
xchg
jg
adc
std
into
in
sbb
subl
std
jmp
addr16
mov
add
call
out
pusha
pop
sub
fcoml
jnp
js
faddp
jo
pop
in
inc
push
mov
sbb
mov
popa
mov
mov
add
inc
adc
cli
adc
or
mov
sub
fistps
dec
cmp
repz
mov
fadd
pop
xchg
dec
rcrb
mov
popa
sbb
mov
mov
xor
ljmp
lock
push
ret
mov
inc
cmovno
push
fwait
mov
jmp
sahf
cmc
pop
jmp
mov
leave
mov
or
rorb
sbb
lret
out
call
pop
lods
push
mov
inc
mov
adc
cli
bound
sbb
movsl
push
lret
dec
or
sub
dec
jne
incl
push
in
stc
push
addr16
pusha
aaa
enter
out
pop
cwtl
adc
das
dec
jno,pn
inc
cmp
push
adcl
adc
ja
lahf
push
jb
ret
popa
lods
enter
imul
mov
les
movsl
inc
lret
in
insb
insl
das
xchg
sbb
sbb
inc
xchg
aam
lret
jno
push
insl
gs
or
mov
movsb
xchg
xchg
jge
inc
pop
mov
cmpsl
xchg
lods
adc
sub
lods
addr16
jl
fcomps
dec
lock
aas
adc
lods
dec
movsl
sub
mov
sbb
outsl
push
xchg
cli
loop
push
and
fsubs
inc
mov
fistps
or
lcall
bound
popa
lods
lahf
jb
sbb
leave
mov
mov
repnz
in
and
sbb
inc
jno
or
xor
shrl
xchg
mov
mov
xchg
std
clc
mov
ret
shl
pusha
xor
rolb
sub
rcrb
bound
jne
inc
testl
sub
dec
es
cmpsb
lahf
lea
sti
sbb
xor
dec
jmp
push
sub
jae
fxtract
mov
xchg
sahf
subw
pop
insb
xor
add
jbe
mov
sbb
xchg
lret
xchg
cmpsb
mov
lods
lds
dec
test
test
pop
rorb
mov
xchg
pop
sbb
sbb
bound
push
pop
cli
test
dec
xor
dec
repz
mov
arpl
adc
aad
jle
and
xor
movsb
mov
sbb
inc
loopne
mov
outsb
push
lcall
jg
movsb
icebp
enter
dec
adc
cmc
xor
push
add
mov
in
lds
xor
scas
incl
shll
or
jg
pushf
sbb
sbb
sub
cld
lods
cmpsb
sbb
cmp
sub
jl
sbb
int3
xchg
ds
xchg
stos
insl
add
sti
iret
push
ds
adc
rorb
fs
and
insb
and
mov
sarb
loopne
push
cmp
or
mov
or
mov
mov
aas
inc
and
nop
xchg
orl
pop
jmp
inc
adc
sub
out
aad
rcrl
fcoms
push
nop
or
mov
adc
push
sbb
sahf
jp
and
push
int
std
push
rolb
push
mov
jecxz
or
pop
cltd
sbb
jne
add
jg
flds
push
andb
loope
popf
dec
dec
push
cmpsb
sub
adc
jmp
scas
pop
lret
cmp
movsb
cwtl
adc
lret
xchg
dec
sub
mov
ja
mov
imul
aam
in
ficompl
loopne
or
out
idivb
jl
inc
ja
xchg
out
fcom
pop
daa
cmpl
push
cltd
add
das
cmp
or
addr16
dec
fwait
dec
cltd
jl
ljmp
fistpl
xchg
push
mov
mov
js
adc
lret
and
sbb
or
fistpl
or
enter
aam
mulb
inc
and
lcall
or
xchg
les
ret
sbb
cld
std
jp
inc
adc
js
cmc
dec
repnz
jnp
repnz
fildll
mov
inc
int
dec
andb
xchg
addr16
jbe
icebp
or
xor
inc
sub
sbb
fdivrp
dec
adc
into
cmpsb
dec
mov
rcll
aad
pop
std
xchg
out
adc
cmp
and
mov
sub
in
or
out
or
inc
inc
insb
push
and
sbb
adc
orl
or
cmp
loopne
in
xor
pop
lcall
scas
out
jl
outsb
jo
jno
test
mov
adc
jge
pop
jns
test
add
aaa
fidivs
adc
sub
stc
dec
sarb
add
push
repnz
repz
mov
push
cltd
mov
cmp
pop
jle
gs
mov
lods
ljmp
sbb
pop
push
xchg
popa
andb
imul
ret
mov
adc
loopne
sbb
cmc
test
mov
pop
adc
pop
add
xor
xchg
jo
fimull
ja
inc
pop
clc
mov
addr16
cmc
out
mull
and
jb
inc
inc
or
in
std
stc
push
out
scas
push
sbb
sub
sub
and
andb
js
je
das
cld
cltd
xchg
fstpl
sub
or
jge
pop
or
test
fistl
push
and
sbb
ds
mov
test
faddp
dec
test
int
dec
ja
jb
push
dec
scas
int3
and
xor
movsb
fdivr
mov
inc
or
inc
sbb
jbe
pop
push
xchg
imul
and
sub
adc
mov
adc
sbb
pop
pushf
ja
dec
repz
out
fmuls
push
ss
xchg
js
sub
in
jae
repnz
jmp
ljmp
jmp
cltd
stos
add
adc
or
popa
pop
aad
add
insb
ret
xchg
into
sub
ss
inc
arpl
cmpsl
cmpsl
in
jp
jns
enterw
jnp
pop
sub
add
jmp
or
push
stos
aas
and
and
out
dec
xchg
sti
gs
loop
dec
enter
arpl
mov
out
outsb
inc
fcmovnu
test
out
jge
mov
adc
cmc
sbb
imul
sub
inc
repz
push
jecxz
xchg
cmp
outsb
fists
mov
mov
xor
adc
enter
pop
lret
cmp
aaa
xor
adc
dec
adc
or
jne
push
mov
ss
pop
test
cmp
sarb
adc
or
in
lods
sub
push
jle
add
sbb
inc
xchg
or
sbb
lret
dec
movl
pushf
mov
dec
jg
pusha
movsb
stos
cmp
daa
jg
les
ja
pop
loop
pop
pop
test
stos
clc
mov
xchg
jnp
push
mov
addr16
jno
mov
sbb
jno
les
inc
ret
test
xor
xor
push
insb
cli
movsb
dec
arpl
jo
fidivs
dec
addl
pop
movsb
pop
gs
in
les
xchg
ret
and
dec
pop
xor
ret
xchg
mov
add
aaa
test
sbbl
testb
push
aaa
call
idiv
mov
bound
and
into
ret
cmp
mov
push
out
dec
orb
pop
mov
and
jmp
out
add
jb
movsl
xchg
mov
stc
push
popa
lahf
pop
clc
loop
cmp
xchg
mov
ficomps
jae
push
add
jae
loop
flds
mov
mov
out
sahf
pushf
dec
or
jmp
clc
scas
pushl
notb
xchg
cmc
inc
pop
cmp
pop
sub
out
and
aaa
add
mov
pop
or
dec
push
pushf
and
sbb
ja
mov
hlt
out
mov
xchg
scas
xor
xchg
adc
inc
sarb
add
mov
in
mov
inc
outsb
ffreep
in
ret
pop
ret
xor
inc
mov
sahf
and
out
mov
xlat
mov
in
sbb
xchg
lret
in
aad
ja
and
xor
inc
xor
cmp
js
mov
js
popl
inc
xor
inc
dec
gs
ss
fdivrs
hlt
cmp
lcall
and
mov
test
pop
in
jno
and
adc
ret
inc
or
mov
xor
pop
popf
lods
dec
mov
pop
mov
sbb
ljmp
sahf
test
iret
sub
xor
rolb
rcrl
daa
dec
or
push
mov
xor
or
gs
jmp
sbb
rcr
mov
rcrb
xor
lret
xor
stc
jmp
mov
dec
xor
lret
pop
pop
std
mov
sbb
push
mov
outsb
inc
mov
clc
js
sarb
push
fcomip
sbb
aas
loopne
test
cmpsl
faddp
pop
and
les
mov
imul
mov
insb
hlt
dec
or
out
repnz
ljmp
lahf
in
lods
fisubrs
xchg
mov
pop
insb
jb
ds
je
and
pop
lcall
xchg
mov
mov
clc
sahf
pop
xchg
int3
adc
enter
fistps
push
popa
xor
ror
xor
and
xchg
loope
dec
ja
ret
add
cmc
clc
xor
in
pop
mov
mov
mov
adc
jge
sbb
cmp
push
nop
int
sub
cmp
push
dec
pop
imul
cmp
hlt
add
pop
rclb
cmpsb
movsb
sbb
mov
xchg
je
aas
jg
mov
xchg
adc
sbb
inc
lock
xchg
xchg
cld
daa
sub
in
bound
gs
ret
loopne
iret
cmp
mov
jne
je
pop
cmp
sub
cmp
mulb
bound
mov
jb
fwait
mov
push
mov
xor
out
pop
hlt
mov
sub
mov
das
rcrl
dec
in
xlat
xchg
gs
test
adc
int
mov
test
push
mov
jle
test
push
push
test
and
dec
dec
les
mov
dec
push
or
repnz
and
outsl
xor
ret
jo
mov
dec
cmpsb
and
leave
pop
pop
add
pop
dec
xorl
mov
sub
addb
aad
jns
mov
push
add
fiadds
pop
imul
daa
mov
rorl
arpl
rol
xchg
push
push
push
inc
cmp
or
inc
shlb
mov
mov
out
or
or
sub
scas
rcrl
iret
daa
popa
out
adcl
loop
sbb
inc
jnp
xor
inc
inc
scas
pop
mov
inc
inc
xorb
and
or
loop
inc
and
in
fsubr
pop
pop
push
push
add
pop
sbbb
sub
cmp
xor
sbb
sbbb
xorb
cmp
sbb
xchg
cli
mov
push
cli
ret
pop
ret
pop
ret
mov
mov
in
fsub
shrl
mov
sbb
push
add
pop
jg
mov
sbb
inc
in
setbe
jl
insl
hlt
insb
rcrb
roll
and
sti
inc
mov
fsts
mov
fwait
mov
in
cmp
subb
pusha
jns
cld
repnz
xchg
sub
mov
or
and
je
movd
mov
lret
push
xchg
sub
mov
xchg
lret
cmp
fistpll
mov
loop
cmpsb
sub
dec
in
test
pop
jnp
sbb
cs
lret
xorl
mov
jmp
jo
sub
jge
dec
xchg
dec
mov
mov
adc
cmpsb
testb
pop
outsb
push
pop
in
sbb
xchg
jl
mov
loope
jae
jle
and
cwtl
jnp
jnp
fdivrl
sbb
pop
insl
or
xchg
mov
je
inc
out
sbb
xor
cmpsl
mov
xorl
insb
leave
daa
mov
pop
and
das
inc
xchg
xlat
clc
mov
stos
jle,pt
ret
mov
adc
pop
aaa
xlat
mov
lods
mov
scas
dec
dec
rcrb
pop
mov
xchg
inc
and
dec
xlat
outsl
push
add
leave
outsb
or
in
mov
lret
int
mov
and
lods
clc
and
shlb
or
adc
cmp
rcr
cltd
and
pop
dec
pusha
cli
jle
dec
daa
test
test
push
inc
in
mov
testl
cmpsb
mov
sbb
xor
inc
inc
frstor
adc
mov
sub
mov
pushf
dec
push
xlat
xchg
in
dec
push
gs
sti
dec
lods
push
pop
push
xor
sub
pop
jge
sarl
subb
ret
mov
add
inc
xchg
push
inc
fwait
scas
inc
mov
jb
scas
jle
adc
xor
xchg
sub
adc
add
inc
lahf
inc
arpl
inc
jno
fistps
add
bound
jl
stc
std
daa
sub
pop
shlb
inc
adc
jl
cmpl
test
xchg
sbb
mov
outsb
cld
dec
iret
adc
inc
dec
xor
sarb
xchg
mov
xlat
and
or
mov
lahf
pop
or
jb
mov
lods
sbb
jg
jbe
xor
fld1
mov
shll
xchg
jge
push
lret
cmp
and
add
das
or
in
sti
lcall
jne
xor
rol
std
addr16
mov
movl
pop
xchg
xor
cld
andl
cmc
add
pop
pushf
ds
es
into
fistl
scas
push
xchg
mov
push
jl
imul
fists
cmp
sbb
mov
das
pop
sti
add
aaa
syscall
sbb
cwtl
jecxz
sbb
dec
sbb
and
cld
add
pushf
dec
cltd
fistl
aad
and
pusha
mov
int
vorps
in
push
dec
cltd
adc
push
mov
in
jecxz
mov
aas
xor
push
je
dec
and
push
mov
pop
inc
aaa
sbb
scas
stos
mov
jl
or
xor
pusha
dec
repz
push
lods
sahf
mov
jns
fmuls
fs
fadd
pop
pop
les
std
fwait
aad
xor
pushf
dec
inc
and
testb
loop
ss
mov
xchg
movsb
add
lock
daa
aaa
out
std
xchg
fsubrp
mov
jge
push
dec
sahf
push
repnz
lcall
add
add
cli
push
xchg
sbb
loopne
fcompl
clc
fwait
sub
lret
pushf
pop
fimull
in
mov
shlb
dec
push
or
pusha
int
je
ret
xorl
dec
push
inc
in
bound
out
pushf
pop
and
test
mov
sbb
loopne
sbb
loope
jno
dec
insb
sub
push
lahf
bound
lea
stos
adc
je
ljmp
add
mov
and
push
popf
stc
push
movsl
jno
cli
pop
inc
addb
repnz
shll
jmp
mov
jge
dec
jmp
mov
mov
jge
jne
mov
es
sbb
test
loope
adc
out
adc
adc
mov
mov
push
push
add
pop
cmp
and
xor
mov
xchg
or
loope
insb
xchg
fstpl
jnp
push
sbb
adc
bound
aas
push
mov
gs
pop
pushf
into
sahf
jns
ret
or
pop
bound
daa
and
or
push
sti
mov
decb
xchg
cmp
ret
inc
dec
or
iret
cmp
call
out
pop
inc
jl
sbb
jl
into
jle
movsb
shll
shll
inc
dec
add
mov
xor
scas
cli
fsubrl
add
dec
mov
cmp
ds
cwtl
push
repz
or
js
dec
ds
and
sbb
dec
xchg
mov
ja
lds
push
inc
push
lock
movsl
mov
xchg
inc
pop
fs
inc
mov
cmp
mov
aas
cmc
fidivrs
dec
inc
and
dec
sbb
or
mov
inc
or
inc
popf
cwtl
xchg
dec
and
addl
int
pop
cmp
fwait
test
aad
and
aas
aas
mov
in
xchg
xor
pop
call
sub
std
jg
sbb
lcall
fdivrl
and
subb
dec
cmp
cmpb
ds
movb
mov
pop
repz
stos
aam
xor
and
popa
in
add
scas
fldt
cmpb
adc
repnz
frstor
push
push
add
lds
jle
test
test
inc
dec
iret
fmuls
jae
sub
dec
pop
shll
sub
popa
das
xchg
pushf
add
cmp
cvtps2pi
mov
insl
jnp
inc
lods
fistpl
pop
add
out
jno
dec
add
push
jno
jl
pop
das
and
xor
rcr
fstl
rcrb
iret
mov
out
in
jne
les
sub
add
adc
add
pop
lcall
test
inc
lahf
and
lock
and
jecxz
stc
popa
aaa
adc
fimull
jno
cmpsl
pusha
movsl
jns
stos
xchg
test
push
mov
data16
push
sub
ds
cwtl
jo
inc
pop
jmp
in
xchg
dec
leave
mov
push
pop
or
push
rclb
push
lahf
pop
cltd
inc
mov
pop
jb
add
cltd
pop
xchg
lahf
ret
test
sub
rep
xor
adc
add
push
xchg
adc
xchg
jge
push
jbe
cwtl
cmc
scas
push
pop
cmp
xor
xorl
add
test
paddw
and
pushf
jb
mov
sub
fistps
outsb
cmp
lock
roll
or
insb
mov
lods
call
cmpsb
dec
aam
fld
jb
scas
inc
mov
mov
mov
lret
inc
sub
jbe
lahf
popa
mov
ret
sub
lcall
adc
cltd
add
inc
xor
in
hlt
xor
sub
cmc
loope
and
push
push
sbbl
mov
mov
nop
xchg
loop
push
sub
xorb
fwait
add
dec
pop
mov
xchg
mov
lret
mov
loopne
das
cltd
or
push
js
pusha
je
lock
fwait
mov
mov
or
or
or
imul
xchg
fwait
dec
cmp
push
shll
inc
jge
and
inc
sub
add
test
out
push
dec
mov
push
adc
call
fimull
add
dec
push
mov
cli
push
ficomps
cld
cmpsb
lea
dec
js
push
hlt
ret
or
cmp
fistpll
lret
xor
mov
xor
and
push
inc
test
jl
mov
stc
xor
scas
in
push
jmp
clc
pop
jmp
inc
mov
mov
ret
jge
sub
mov
loope
cwtl
mov
xor
ljmp
jo
outsl
adc
mov
xchg
pop
push
int
push
push
jecxz
cmpsb
js
mov
or
lock
xlat
icebp
bound
mov
dec
push
xlat
loope
inc
push
std
test
jno
cs
and
rorl
arpl
pop
fdivrl
ljmp
pusha
push
jnp
call
aad
fidivrl
mov
pop
push
adc
shrl
jle
stc
orl
xorl
and
lds
mov
pop
mov
jecxz
inc
rcll
dec
pop
test
push
mov
mov
mov
outsb
sub
ja
arpl
xorl
imul
stc
or
iret
aad
imul
in
jmp
je
ret
xchg
loopne
add
repnz
or
aam
pop
fisubrs
pop
subl
xchg
mov
icebp
gs
xor
push
out
test
addb
mov
mov
push
add
adc
daa
xlat
xchg
dec
es
adc
repz
mov
push
dec
dec
sub
sbb
in
inc
outsb
movsl
clc
iret
pop
mov
sti
inc
adc
adcl
insb
add
xor
mov
pop
iret
cmp
jg
and
ror
inc
scas
cwtl
popf
mov
repz
xor
cmp
push
fildl
xchg
mov
inc
out
in
and
and
hlt
and
nop
hlt
scas
sub
ret
inc
nop
or
or
xchg
loope
dec
sub
pcmpeqb
sbb
xchg
cmp
or
in
inc
mov
mov
push
sbb
xor
cmp
popf
xchg
cs
cmp
push
fldl
mov
or
sub
lahf
or
addr16
xor
xchg
dec
cld
mov
loop
add
inc
data16
test
and
cmpsl
aaa
and
inc
and
fsubrs
test
test
aam
lock
jae
push
leave
leave
js
inc
daa
pop
xchg
ret
in
jno
fsubl
push
gs
and
dec
icebp
push
sbb
mov
in
xor
fwait
and
aad
dec
xlat
out
mov
pop
add
dec
jno
xor
addr16
or
jmp
jg
mov
lret
jns
xchg
fs
andl
lret
inc
xchg
daa
mov
outsl
mov
enter
mov
push
ds
pushf
xor
push
imul
or
dec
stos
out
jns
xchg
ficoms
mov
adc
dec
mov
pushf
pop
movsl
stos
test
inc
aas
popf
add
sbb
mov
or
jae
lret
jo
out
cwtl
inc
fs
sti
inc
scas
pop
mul
inc
into
add
lods
rorb
lahf
cmp
add
jecxz
jmp
add
and
xchg
sti
in
ljmp
xchg
pop
fsts
rcr
jl
mov
ror
lret
xor
jmp
lock
je
push
adc
mov
xchg
repz
sahf
lds
mov
push
xchg
push
ljmp
hlt
push
loope
std
push
xchg
imul
frstor
pop
dec
pop
sub
pop
dec
mov
xchg
mov
pusha
in
pop
sub
sbb
cli
jbe
ds
mov
outsb
lods
add
or
pusha
sbb
or
cmp
in
iret
hlt
pop
and
icebp
push
sbb
inc
stc
fstpl
cmp
cwtl
stc
mov
cwtl
xchg
jno
jb
xchg
push
jo
pop
mov
ficomps
adc
mov
ficoml
dec
add
sub
ret
dec
std
loop
and
mov
or
mov
mov
scas
das
sbb
ficomps
mov
jno
or
mov
jno
sub
pop
jns
jbe
or
push
inc
xchg
iret
inc
mov
ret
or
movsb
inc
push
jne
cmp
xchg
lret
ds
push
pop
pop
movsl
or
add
mov
in
xchg
cmp
adc
popa
and
lods
clc
push
xchg
adc
inc
pop
dec
cmc
dec
add
iret
test
inc
pop
xchg
popa
aaa
dec
popf
loope
lods
sbb
loope
jae
push
in
and
push
nop
jecxz
fbstp
or
adc
jns
test
repz
clc
dec
stos
lds
jge
enter
push
lods
cmp
insl
jp
insb
cli
rolb
aad
arpl
inc
pop
test
sti
mov
mov
pop
mov
push
aad
xchg
xchg
xchg
mov
addr16
jae
in
xor
dec
xchg
dec
jnp
les
add
cwtl
stc
or
mov
fldt
cmp
jns
shrl
lods
xor
lret
push
pop
inc
movsl
pop
dec
or
sti
pop
add
xor
inc
xlat
mov
mov
adc
out
cmp
fstps
dec
ljmp
iret
inc
push
stos
call
sub
mov
das
lea
pop
mov
out
lcall
pop
js
lods
fldl
pop
test
cmp
cwtl
out
mov
inc
aaa
and
fwait
cmp
inc
fcoms
jecxz
add
and
add
call
call
jmp
jle
in
clc
fsubp
fs
add
xchg
test
movsb
add
out
cmp
and
aam
sbb
dec
jnp
sub
jbe
pop
cmp
jge
cs
stos
mov
out
and
mov
push
aas
lods
js
inc
inc
adc
xchg
or
xor
adc
popa
cmp
dec
ja
fsubl
push
xchg
enter
mov
mov
mov
jbe
fiadds
sti
mov
sub
xchg
inc
lret
inc
andb
push
out
and
dec
imul
inc
mov
fs
push
pop
or
lcall
stos
jbe
or
mov
fsubrl
inc
or
stc
mov
cmp
mov
push
sub
test
mov
cmp
adc
out
ret
lods
imul
es
fdivp
js
cli
in
pop
add
nop
aam
jecxz
add
cmp
xchg
aaa
fisubl
sti
mov
outsl
pop
cmp
sti
movsb
repz
mov
adc
xor
lods
inc
pop
inc
inc
scas
xchg
lcall
nop
xchg
mov
sqrtps
xor
mov
and
mov
or
mov
pushf
imul
dec
loope
outsb
cld
mov
pop
xchg
dec
shll
push
mov
lock
mov
arpl
je
xchg
jg
out
jg
adc
push
shlb
stc
sub
insb
addr16
or
sub
mov
sub
insb
cmc
insb
js
aam
add
imul
test
aam
pop
cmpb
sub
out
lret
stc
aam
cwtl
mov
push
dec
xchg
clc
inc
xchg
clc
adc
inc
es
push
pusha
inc
and
xchg
rorb
adc
mov
loopne
push
adc
insl
jecxz
and
push
jno
add
movl
mov
mov
xchg
cmpsl
mov
mov
aaa
adc
xchg
roll
cmp
push
cmp
mov
aaa
test
mov
pushf
sub
out
xor
pop
ja
rep
mov
sbb
pop
mov
inc
mov
mov
cwtl
fimuls
pop
mov
fdivr
sbb
sti
rorl
xchg
pop
dec
mov
jnp
or
mov
pop
or
enter
fisttps
fcomip
stos
xor
lock
aam
sbb
mov
pop
or
lds
pop
sbb
loope
mov
test
int3
cmp
orl
push
and
pop
add
outsb
inc
cwtl
outsb
push
lcall
pop
jbe
adc
in
imul
pop
xchg
push
aaa
xchg
test
das
movsl
inc
incb
testb
jo
sub
mov
es
daa
push
xor
jmp
out
jb
fwait
dec
test
cmp
pop
pop
adc
add
dec
pop
lods
das
pop
push
mov
inc
ljmp
xchg
imul
cwtl
test
jno
mov
adc
dec
dec
and
int3
push
dec
mov
jno
loopne
ss
lret
pop
rcr
out
adc
test
or
mov
sub
ret
jno
inc
and
cs
lahf
sub
mov
and
xor
fdiv
or
mov
cmc
mov
cmpsb
dec
or
mov
xchg
cmpsl
push
mov
dec
dec
lods
in
push
add
movsb
loopne
loope
sbb
cs
adc
add
imul
fucomi
xchg
xor
mov
inc
aam
decb
pop
data16
rcrb
xchg
xor
mov
adc
mov
dec
sbb
and
mov
cld
std
pusha
lcall
pop
xchg
scas
cmp
xchg
aaa
lds
je
enter
pop
mov
cmp
dec
xchg
and
pop
es
push
jns
pop
movsb
mov
cs
push
scas
jl
pop
arpl
scas
dec
lret
loope
xchg
mov
mov
xchg
xor
cmp
bswap
mov
cli
jns
fninit
sub
int3
clc
xchg
stc
ret
popa
out
mov
lcall
or
xor
jo
cmp
in
enter
int3
xchg
std
arpl
je
lahf
stos
cmpsl
jmp
les
push
dec
insb
adc
jno
mov
sbb
lret
xor
push
vpmuludq
cmp
jnp
cmp
cmp
aad
dec
or
mov
sub
inc
sub
mov
mov
mov
mov
sbb
mov
scas
movl
pop
mov
cmpsl
xchg
cmp
movsb
packsswb
cmp
ret
jecxz
mov
je
test
dec
dec
push
mov
lcall
xchg
addb
lock
shrb
stc
xorl
or
scas
sbb
out
aaa
rorl
push
push
pop
or
mov
stos
rcrl
stos
imull
jl
dec
lret
cwtl
daa
or
inc
sti
ss
test
fildl
cld
movsb
xorb
sbb
add
jp
movsb
in
and
mov
pop
data16
adc
adc
mov
xchg
pop
add
enter
cmpsl
mov
adc
movsb
std
mov
in
arpl
test
jle
es
dec
in
divl
iret
inc
mov
je
add
imul
xchg
js
stos
or
or
jge
leavew
insl
push
xor
xchg
bound
adc
les
mov
sub
dec
sub
adc
shld
xchg
dec
mov
int3
add
flds
mov
mov
pop
outsl
and
mov
or
test
mov
call
or
cs
and
fcoml
jp
xchg
jle
daa
dec
inc
push
sub
mov
mov
or
dec
sub
dec
cld
mov
or
adc
add
fsubl
add
xchg
dec
sbb
jne
daa
xchg
pop
push
jae
sub
scas
dec
out
rorl
inc
pop
outsl
push
mov
sbb
push
aas
xchg
cmp
cwtl
out
push
das
pop
fsubrs
cmpsl
sahf
and
test
sub
outsl
ret
inc
stos
icebp
xor
xlat
jp
push
pushf
movsl
inc
leave
aam
xchg
inc
xchg
push
cmp
mov
mov
sub
xchg
jo
adc
pop
pop
in
sub
clc
test
sbb
mov
push
je
jno
pushl
mov
pop
xchg
add
jmp
fdivl
fistl
mov
xchg
jmp
and
mov
dec
ret
and
stos
movsb
mov
dec
add
xchg
push
sub
dec
stos
mov
insb
sub
pop
in
mov
push
lods
mov
inc
movsl
inc
adcl
mov
outsl
add
add
adc
icebp
dec
out
sub
push
xor
and
jb
mov
leave
xor
lds
enter
jns
mov
cmpsb
scas
and
les
in
add
enter
add
repnz
sbb
xor
aaa
pop
pop
daa
push
stos
push
test
aaa
jecxz
testl
jmp
les
jnp
adc
mov
loope
cmp
lahf
rclb
mov
bound
or
push
outsl
jl
aam
mov
add
add
lret
loop
mov
xor
xchg
mov
inc
ror
scas
les
jl
in
scas
dec
loop
cmpsl
sub
jmp
std
cmp
loop
push
shll
push
sub
push
ret
lods
adc
in
ljmp
mov
xor
add
mov
movsl
outsl
cmpsl
lods
test
shrb
adcl
loopne
jne
jbe
es
sbb
fimull
mov
out
xor
movsl
test
aad
rol
sbb
adc
sub
mov
push
sti
mov
into
jg
outsl
inc
push
xchg
mov
rorb
mul
adc
popa
popf
xchg
sbb
stos
jle
and
push
inc
mov
cwtl
jno
imul
mov
add
fstl
jl
loop
xor
out
xchg
xor
clc
fs
pop
pusha
call
hlt
sti
jb
fucomip
mov
mov
adc
pop
xchg
lret
xor
shlb
loop
ja
insl
in
pop
es
loop
xor
xchg
pop
jb
push
cli
sbb
mov
in
cmpsb
shll
int
mov
in
dec
xor
mov
xchg
daa
xor
ficoml
ret
pop
fisttpl
pushf
in
cmp
daa
mov
mov
stc
movsb
lret
or
pop
out
int
inc
adc
add
adc
mov
xchg
ds
outsb
jno
repz
shlb
add
pop
cmpsb
adc
mov
arpl
test
testb
sbb
scas
ss
in
int
mov
adc
sub
pop
mov
push
aaa
push
int3
add
pop
test
lods
cmp
mov
test
mov
ja
add
les
dec
add
mov
out
movsb
repnz
sub
xor
ja
rol
push
xchg
push
xor
addb
xchg
js
xchg
sub
cwtl
cmpsb
test
dec
lahf
sub
out
push
ret
adc
and
cmp
int
ja
aam
idivb
and
paddusw
mov
mov
inc
int3
outsl
sub
jg
jae
pop
pushf
dec
and
mov
lcall
cmpsb
flds
pop
leave
xor
xor
xchg
filds
mov
sub
adc
adc
lret
inc
sahf
fsts
cmc
sub
or
aas
pop
loopne
icebp
stos
lcall
mulb
dec
int3
sub
mov
jnp
jbe
or
inc
addr16
jg
inc
pop
jecxz
fsubp
mov
je
pusha
pop
adc
pop
or
mov
push
cltd
sub
cmpsb
movsb
sbb
jle
and
pop
or
test
dec
stos
pop
mov
fidivrs
jb
je
into
sub
mov
popf
imulb
dec
lock
cmp
add
xchg
pop
dec
imul
inc
pop
adc
pop
add
lcall
inc
pop
in
hlt
outsb
mov
sbb
daa
test
ljmp
lahf
lods
inc
in
orb
mov
pop
lcall
mov
add
enter
in
inc
jg
ret
cwtl
jnp
sub
lcall
inc
cmp
rclb
mov
add
jp
mov
test
pop
sub
scas
lea
xor
icebp
movsl
shll
mov
test
and
out
notl
mov
and
adc
or
jns
or
cwtl
loop
mov
mov
sahf
inc
out
xor
imul
push
fnstenv
es
aas
jecxz
xor
mov
arpl
and
jg
push
push
adc
sbb
outsl
xchg
or
imul
push
sarl
lds
xchg
mov
dec
ja
repnz
adc
shrl
fsubp
jmp
push
out
imul
sbb
repnz
insb
in
lods
neg
xor
xchg
adcl
push
pop
enter
fmuls
jne
add
mov
mov
cld
or
xchg
push
xchg
cltd
stos
sbb
push
xchg
lahf
dec
cmp
in
or
scas
jb
dec
insl
aam
sarl
aas
daa
loopne
xor
jae
xchg
pop
xchg
push
jp
push
pop
test
cmp
into
and
xlat
in
push
sbb
imul
pop
xor
sahf
leave
shlb
loopne
std
push
cmp
add
sub
movsl
xlat
in
xchg
cmpl
xor
rcrb
pop
pop
fidivrl
xchg
mov
jnp
cmp
aam
fcoms
ds
es
xor
push
lods
movsl
xchg
mov
loop
push
aad
jmp
pop
add
pop
and
inc
pop
add
shrb
mov
ds
jge
jb
jbe
sub
or
loopne
adcl
push
xchg
fimuls
cmp
dec
mov
xor
inc
out
int
dec
movl
rorb
inc
xchg
jo
mov
jmp
mov
jnp
mov
mov
add
adc
adc
out
lock
mov
adc
lock
stos
mov
jno
pusha
cmp
xor
stos
addr16
sbb
xchg
sahf
dec
dec
lea
jns
mov
int3
fldenv
cmpsb
adc
xchg
test
popf
push
cld
pusha
das
jbe
lods
fs
push
jbe
mov
loope
aaa
sbb
dec
xor
outsb
outsl
or
or
lahf
push
scas
dec
popf
add
jnp
mov
push
lret
pop
jnp
fsubrs
inc
jmp
adc
inc
push
hlt
repz
js
addr16
lahf
movsl
push
lods
cld
scas
outsl
in
push
xor
fwait
pop
push
mov
push
mov
in
arpl
push
pop
dec
and
lea
out
call
adc
mov
xor
frstor
push
add
cld
pop
popa
mov
pop
repz
insl
das
testb
std
xchg
repnz
stos
cmp
hlt
pop
mov
pop
loope
xor
or
mov
je
aam
fs
mov
out
out
clc
lods
lret
fidivrl
dec
jbe
and
out
and
xchg
push
dec
movq
filds
pop
push
ret
es
enter
lret
cld
jmp
ss
ss
adc
mov
fwait
xor
rorb
fisttps
pop
push
xor
aad
stc
or
repz
sub
or
adc
std
push
das
shl
hlt
mov
jnp
add
sub
sub
je
xlat
mov
test
loop
daa
mov
leave
jge
adc
cmp
inc
push
out
lods
add
add
adc
xor
pop
or
outsb
cmp
mov
pop
jg
dec
std
mov
and
gs
push
movsl
out
mov
in
ds
repnz
push
jl
cmpsl
leave
dec
jp
jecxz
push
fs
sar
call
mov
adc
dec
test
in
dec
inc
push
xor
mov
push
cmp
inc
sub
mov
stos
xchg
sub
jno
jb
bnd
jno
cld
mov
lds
out
dec
stos
in
mov
dec
insl
mov
out
std
neg
xor
jae
xchg
pop
bound
mov
ja
and
jg
push
stos
push
mov
pusha
mov
add
push
mov
mov
movzbl
pop
sbb
add
ljmp
dec
pop
pop
and
js
pop
xor
jmp
aam
and
and
adc
fwait
adc
or
adc
inc
adc
pop
or
and
adc
fwait
into
insb
aam
pusha
test
mov
into
jg
mov
mul
lock
mov
mov
ss
sub
sub
fnstsw
mov
out
dec
loop
xlat
inc
pop
ret
test
daa
jle
fstpl
or
mov
mov
dec
sub
add
inc
shlb
inc
fdivrl
push
xchg
gs
cltd
dec
mov
xchg
fsub
daa
mov
loope
and
mov
dec
inc
adc
inc
mov
mov
dec
stc
xchg
ror
cs
adc
mov
inc
pushf
out
and
mov
adc
adcl
cmp
mov
loop
shrl
mov
push
outsl
mov
xor
mov
cmp
addr16
filds
sub
inc
faddp
mov
push
adc
arpl
dec
or
mov
repz
iret
and
mov
mov
sub
xchg
xchg
insb
inc
out
popf
int3
and
cmp
out
inc
fistps
leave
pop
clc
cmp
jl
js
fldlg2
insb
push
outsb
adc
jb
push
hlt
inc
cwtl
push
clc
mov
subb
or
pop
cs
pop
ret
cmc
jmp
mov
sbb
fwait
cmp
cmpsl
nop
pop
push
dec
xchg
mov
push
push
sub
pop
sbb
sub
movsb
lret
aas
dec
push
movsb
shlb
sub
mov
xchg
andl
sbb
fldl
or
pushw
iret
ret
clc
mov
push
stc
lcall
xchg
jmp
fisubl
movsb
out
xor
xchg
test
mov
cltd
outsb
data16
add
je
dec
pop
inc
xchg
sbb
sbb
faddl
xor
aam
jb
dec
xor
daa
fwait
leave
mov
jmp
es
pop
or
sbb
outsb
imul
mov
fstpl
mov
dec
out
in
lahf
addl
mov
jecxz
addr16
in
mov
cli
pop
mov
xchg
lock
nop
inc
popa
sahf
sub
popf
mov
pop
sbb
popa
xor
jbe
sub
lcall
insl
fwait
movsl
dec
mov
jo
lahf
and
lret
jae
fwait
dec
pop
push
rcrb
mov
fidivrl
loope
push
inc
outsb
or
ja
push
mov
mov
mov
mov
pop
ljmp
sub
sub
and
mov
xlat
jno
and
dec
iret
fdivr
gs
mov
imul
dec
pushf
sbb
nop
mov
lods
dec
and
inc
fwait
jno
pop
leave
cmp
repz
scas
push
mov
cwtl
jbe
repnz
bound
enter
pop
push
cmp
cmpsl
pop
aam
push
mov
icebp
in
cmpsb
xchg
sti
mov
nop
addr16
inc
cmc
or
sbb
push
or
test
push
dec
xor
imull
mov
push
mov
dec
test
ret
add
push
adc
les
in
dec
loop
cltd
lahf
xor
push
lret
xor
pusha
adc
pop
jl
inc
clc
mov
clc
and
pop
xchg
add
xchg
leave
das
mov
push
xchg
push
shrb
fsubl
aad
pop
mov
add
popa
or
popf
or
rep
pop
scas
loope
fildll
pop
rcrl
gs
loop
cmp
std
cmp
cli
xor
arpl
bound
ja
or
and
jle
xor
and
les
push
or
scas
pop
add
lea
mov
or
xor
pusha
mov
aad
aad
sbb
dec
inc
in
cmp
inc
xor
add
ljmp
pushf
add
jge
or
les
cmpsl
out
adc
or
sub
mov
imul
adc
scas
xor
mov
fwait
outsb
and
rcrl
xchg
jo
mov
xchg
pop
ds
push
xchg
arpl
sbb
pop
es
roll
push
sub
pop
cli
lds
adcb
and
push
or
ss
cmp
popa
and
push
push
insl
sti
cwtl
mov
mov
cmpsl
sbb
enter
mov
nop
or
jns
sub
xor
pop
and
cmp
cmp
sbb
xchg
mov
divps
mov
ljmp
out
xor
mov
xor
je
mov
fucom
sub
sub
dec
imul
dec
fxch
xor
jg
decl
ljmp
lea
cwtl
fistpll
stos
orl
sub
ret
inc
bnd
dec
push
daa
xchg
mov
shrl
adc
sbb
pop
loope
mov
sub
or
movsb
sbb
jb
out
push
xor
lock
cwtl
or
inc
ss
iret
xor
xchg
int3
adc
push
pop
popf
rorl
ds
sub
ficoml
fdivs
xchg
add
sbbb
mov
das
movsl
lds
pusha
dec
repz
or
shrl
push
loope
mov
loope
pushf
cmp
mov
mov
fwait
sbb
push
shlb
sbb
push
lods
xchg
mov
sbbl
les
fwait
adc
jne
popf
or
jb
dec
test
mov
insb
sbb
mov
push
movsb
dec
mov
xchg
xor
fbld
int3
pop
out
fcomps
out
jl
repnz
xlat
xchg
xor
push
imul
jnp
subb
cmc
lret
cmp
lcall
xor
lods
pop
pop
mov
mov
aam
mov
xor
add
enter
scas
outsb
into
mov
adc
cmp
ds
pop
dec
mov
sbb
stos
jnp
jbe
adc
push
push
mov
xchg
sbb
cmpsl
iret
sahf
pop
ror
enter
dec
enter
cmp
mov
ret
ret
mov
inc
call
lret
xchg
cmp
add
pop
mov
xchg
hlt
stc
push
iret
stos
popa
fdivp
jns
jle
jmp
ljmp
faddl
sub
push
lret
fnstsw
cmpl
stos
mov
mov
imul
inc
dec
hlt
push
jmp
mov
mov
cmpsl
dec
mov
outsl
sbb
fdivr
adc
jle
sub
push
push
inc
jecxz
adc
insl
xor
mov
xchg
sahf
je
mov
into
or
push
mov
add
pop
push
fmul
pop
ficompl
popa
mov
fidivl
enter
pop
aam
into
arpl
and
mov
insb
rcll
packsswb
mov
mov
add
out
fisubs
es
orl
xlat
jno
jecxz
xchg
cs
lods
ret
in
dec
sub
pop
cli
mov
xchg
fisubs
push
mov
scas
add
incb
std
jp
lea
and
xchg
flds
pop
out
out
dec
sbb
js
pop
mov
lock
pop
jmp
in
mov
je
dec
fistpl
mov
orb
in
ret
cmpsl
lock
pop
lods
and
ja
push
imul
jg
mov
push
pushw
xor
inc
sub
push
mov
cmp
faddp
shl
fs
fwait
sbb
sub
and
leave
jmp
enter
push
leave
jno
jne
icebp
push
stc
push
sub
fiaddl
pusha
xor
mov
cmpsl
mov
mov
mov
inc
adc
shr
movsl
jne
add
mov
pop
cmp
sbb
lcall
ret
jmp
mov
push
ljmp
mov
frstor
sub
xchg
lea
int
add
sub
mov
sub
push
sub
inc
decb
test
fwait
mov
lds
mov
push
movl
stc
xchg
push
mov
dec
xchg
cmc
mov
test
mov
mov
xchg
icebp
das
xorl
loopne
fwait
movb
add
scas
and
dec
in
stc
rcl
pop
shrl
and
ja
xchg
jo
rcll
repz
fsubl
aas
outsl
es
jg
mov
mov
popf
push
xorl
repz
add
cmpsl
and
rcrb
mov
jns
sub
adc
mov
xchg
daa
clc
es
imul
mov
or
xchg
mov
aad
cmp
shl
sub
int
popa
idivl
cmp
push
jo
mov
scas
lret
fs
stc
and
adc
xor
subl
ljmp
xor
imul
sbb
repz
cmpsb
jmp
lock
mov
cmp
push
shrl
mov
jae
and
test
lret
insb
popa
sarb
imull
sub
cs
sub
or
int3
stc
mov
loopne
xchg
psubb
pop
cmp
pop
pop
addr16
dec
and
or
fs
xchg
jl
mov
fmul
or
dec
jno
inc
stos
jp
jo
std
cmpsb
inc
inc
insb
shr
aas
clc
inc
inc
xchg
xor
add
call
sbbb
stos
sti
mov
pop
fnsave
pop
je
pop
pop
test
mov
lock
add
fcoml
push
int3
jns
lock
ret
pop
scas
negb
movsb
adc
add
out
fisttps
jne
sbb
bound
clc
iret
aad
in
fildll
loopne
outsb
fisubrs
xor
mov
push
stos
push
jne
dec
mov
sar
ficoml
pop
or
sbb
fcompl
jge
cmpsb
hlt
sub
cltd
mov
fimull
shll
push
pop
jo
xchg
dec
xor
sbb
mov
or
cmp
scas
jecxz
lods
loope
sub
mov
cmc
jge
mov
out
pop
push
andb
insb
and
loop
jp
sub
ja
push
jns
sbb
iret
and
sub
mov
xchg
je
lret
fiaddl
pop
ja
outsb
pop
pop
movsl
repnz
add
nop
iret
mov
push
ja
fcomi
pop
dec
lock
pop
jns
cmp
mov
push
inc
enter
pop
push
lss
fs
movsb
or
pop
sbb
stos
loope
gs
scas
jb
pop
hlt
mov
pop
lea
addr16
xor
sahf
lahf
xor
shrl
sbb
sti
adc
mov
dec
lcall
xchg
mov
ret
jo
push
cmp
xchg
lar
dec
or
xchg
jno
mov
sbb
pmulhw
push
add
popa
out
int
test
es
push
fcoml
cltd
cli
and
in
in
jno
out
out
jmp
or
clc
xor
jae
mov
mov
repnz
popf
sub
gs
inc
mov
pop
lea
out
adc
testb
xchg
mov
aas
vmread
pop
aaa
inc
adc
sahf
loop
rcr
enter
sti
dec
sbb
mov
cltd
sub
jmp
stos
pop
scas
xor
hlt
imul
out
push
stos
jge
ret
mov
mulb
mov
fwait
add
pop
stc
lea
sub
fwait
inc
icebp
push
scas
sbb
pop
das
into
rcrb
lret
pop
popf
movsl
test
xchg
cmp
xor
pop
add
aaa
lea
xchg
jge
pusha
dec
push
fldcw
and
push
push
mov
cli
add
nop
rcl
jp
dec
or
into
stos
jb
sti
xlat
mov
xchg
push
inc
flds
pop
cmpsl
fmuls
mov
and
add
addr16
test
dec
movsl
pop
xchg
lods
xor
mov
sbb
rcrb
mov
movsl
imul
xorb
sub
lds
add
enter
dec
int
push
lret
dec
mov
xor
sbb
jge
addb
jbe
lock
clc
add
outsl
xor
scas
cmp
cwtl
sub
and
lret
fwait
xor
mull
scas
loope
mov
stos
mov
push
and
cmp
mov
or
wbinvd
or
repnz
mov
leave
out
xlat
shr
cmpsl
mov
pop
push
mov
xor
dec
in
movsl
dec
pushf
sti
sbb
add
out
mov
sbb
fcomps
adc
jae
cmp
sbb
cmp
stos
sbb
ret
and
ss
cld
jp
inc
sarb
push
and
xor
imul
scas
loop
sub
adc
push
inc
lods
sti
dec
jbe
mov
mov
xchg
or
ja
cld
js
pop
imull
jp
inc
cmp
ret
adc
xorb
insb
loope
add
cmp
shll
cmp
mov
mov
mov
into
fcmovnbe
enter
cmpl
and
push
jecxz
fwait
movsb
enterw
fsts
cmpb
mov
das
mov
xor
xchg
mov
mov
push
lsl
insl
icebp
xor
xchg
shlb
in
shr
pop
mov
lea
lret
lea
xor
mov
xchg
call
lret
cmp
out
int3
in
out
mov
pop
lret
std
pop
subl
mov
inc
test
sub
xchg
int3
mov
inc
sarb
enter
add
pop
xchg
hlt
mov
sub
into
xor
adc
fldcw
jo
xor
mov
arpl
dec
nop
adc
jbe
mov
pusha
inc
xor
push
sub
ret
adc
jle
sub
mov
add
mov
mov
and
mov
dec
arpl
scas
add
test
js
lahf
add
shrb
and
sahf
loop
in
push
sub
xchg
lret
push
adc
pusha
imul
test
xchg
and
dec
and
add
movsb
sbb
daa
in
mov
add
xlat
loopne
pop
dec
mov
cmpsb
stos
loop
shl
test
movsb
add
cmp
in
stos
or
dec
nop
test
aam
sub
mov
mov
push
mov
js
cmc
daa
bt
ljmp
cmp
or
fstpt
rolb
and
mov
push
ficomps
lcall
mov
sub
shlb
fwait
mov
and
lcall
cmp
push
in
push
fistps
cmpsl
add
test
adc
insb
ljmp
cmp
mov
mov
rep
daa
jbe
aam
sub
fidivs
mov
fdivl
test
mov
lea
or
aas
jae
sub
sbb
pop
enter
or
xchg
xchg
mov
mov
push
hlt
nopl
adc
pop
pop
lds
lods
out
or
xchg
std
sbb
push
jo
scas
xchg
sub
scas
mov
adc
call
lods
ljmp
dec
int3
mov
call
loopne
push
mov
xchg
nop
dec
sbb
pop
mov
movsl
cmp
push
mulb
sbb
in
cmc
aad
xchg
idiv
and
dec
push
cmp
fistpl
fidivrs
dec
mov
push
in
fcoms
fsub
mov
mov
jmp
xlat
adc
jns
sub
pushf
iret
mov
ds
jle
push
adc
addb
jmp
xchg
pop
mov
push
push
cmpsb
inc
push
inc
in
inc
cwtl
sti
movsl
js
xchg
imul
lcall
mov
movsb
clc
dec
jb
mov
test
jnp
into
xchg
jl
imul
ret
popa
xadd
xchg
inc
repnz
cli
jge
or
ljmp
mov
fwait
out
sub
mov
and
aas
add
repz
aas
mov
cmpsb
loopne
fsubl
test
cmpsb
loopne
mov
mov
dec
cmp
out
das
lock
adc
pop
xchg
movsb
xchg
inc
and
pop
push
pop
add
cmp
add
pop
out
fwait
sbb
inc
sbb
jne
fdivr
sti
out
mov
std
fs
dec
sbbb
mov
adcb
sub
insb
pop
pop
cmp
pop
jp
leave
ret
inc
mov
push
into
pop
fidivs
aam
xchg
fs
rorb
jbe
jp
sub
or
jae
xchg
out
xor
inc
frstor
xchg
ds
call
lahf
ret
shl
clc
jns
icebp
pop
punpckhdq
and
jbe
adc
cmp
sbb
outsl
push
hlt
hlt
call
out
hlt
incb
xor
pop
jge
cli
mov
dec
test
or
loopne
mov
loop
enter
aad
scas
dec
cwtl
push
mov
add
int3
pusha
push
cmp
xor
xchg
dec
mov
pop
aad
cmpsl
mov
mov
shr
xorb
cmpb
xchg
rcrl
std
lahf
cld
mov
insl
xchg
adc
fwait
nop
sub
andb
sub
jns
inc
iret
cmc
repz
leave
and
test
sub
xchg
xchg
push
fsubs
rclb
xchg
sbb
lea
xor
mov
fisubl
lods
cmp
cltd
mov
xchg
shrl
adc
jbe
repnz
icebp
xchg
push
cmpsb
jl
and
scas
dec
ret
arpl
mov
scas
loopne
aas
push
repz
out
mov
pop
pop
clc
sub
pop
lods
insl
ficoml
in
fwait
scas
mov
lods
jns
imul
fidivs
dec
mov
cmc
inc
repnz
mov
cmp
mov
cmp
pusha
inc
lahf
fimuls
test
mov
inc
cmpsb
mov
dec
push
push
jbe
sub
cmpsb
stos
xchg
add
sbb
adcb
xchg
mov
cmp
lret
pop
push
int3
inc
roll
icebp
lock
shr
push
and
or
push
fsubs
aad
or
addb
daa
xor
orl
incl
pop
aaa
add
fcoms
dec
nop
xchg
inc
mov
test
hlt
sub
add
or
scas
lcall
and
pop
and
sbb
dec
out
in
sti
enter
fld
cmp
lock
out
lcall
or
push
std
jge
in
xchg
push
pop
pop
sbb
jecxz
sub
jne
in
push
insb
adc
dec
jno
fwait
aaa
hlt
cmp
jecxz
sub
jb
sar
and
fsts
sbb
shlb
xor
addr16
pop
out
test
xor
xchg
sbb
xor
jecxz
jmp
xchg
push
dec
dec
jno
mov
mov
insl
mov
pop
test
stc
test
js
cmpsl
out
adc
mov
imul
test
notl
add
pop
jo
pop
js
inc
pop
sub
loop
mov
call
aas
sti
adc
inc
fwait
adcl
movsb
pusha
in
imul
xlat
in
popf
cmpsb
mov
jb
dec
in
jg
sbb
cwtl
enter
in
enter
xor
sub
adc
pop
mov
stos
mov
mov
pusha
inc
or
jne
sbb
int
and
pop
and
push
ds
mov
inc
pop
sub
mov
xor
int
mov
pop
data16
mov
cld
mov
testb
out
jo
adc
add
cmp
jbe
mov
jl
fdivrl
jnp
sub
loop
stos
test
in
xor
and
out
mov
jmp
cmp
test
pop
arpl
jo
ljmp
and
lds
addr16
sahf
add
mov
inc
sub
mov
xlat
jl
inc
push
data16
out
movsb
lret
xor
xchg
dec
iret
xchg
addb
std
ss
int3
pop
jecxz
ss
fistps
pop
repnz
push
pop
or
push
adc
lcall
pop
sub
adc
mov
popf
fldl
js
out
mov
push
sub
testb
pop
mov
ret
mov
xchg
sbb
lret
movsb
sbb
push
incb
dec
push
cmp
int
mov
mov
stc
fwait
push
pop
popa
loop
int3
test
adcl
add
lahf
loopne
and
xor
shl
aaa
sahf
lcall
sbb
into
push
and
nop
aad
jge
pop
into
or
mov
mov
jne
xchg
inc
shrl
outsl
cmp
mov
fidivs
pop
xor
fldt
dec
out
pop
cmp
xor
js
mov
push
sbb
jb
mov
popa
push
mov
sbb
filds
mov
lcall
sbb
clc
jmp
lds
sub
push
pop
outsl
stos
dec
pop
jns
pusha
adc
dec
ljmp
inc
bound
xorb
roll
in
pop
sbb
pop
sar
loopew
sbb
inc
cmpl
and
cmp
out
sbb
enter
movsb
cli
xchg
cmp
les
cmpsb
imull
jecxz
flds
push
imul
adc
mov
in
test
std
pushl
adc
das
loop
sub
pop
lds
or
push
mov
inc
and
or
push
fistps
test
sbb
shrl
push
lcall
cmp
icebp
repnz
jg
test
lcall
jo
rorl
aam
dec
mov
cwtl
sub
cmpsl
cs
arpl
into
push
mov
cwtl
push
xchg
insl
add
cltd
jne
mov
adc
je
pop
lcall
mov
out
out
push
mov
add
sub
insb
pop
cld
out
dec
xchg
in
lcall
xchg
jns
xor
popf
pop
jp
push
sub
mov
mov
cld
dec
loop
ss
sbb
fistl
pop
add
mov
in
jb
in
mov
mov
loopne
inc
movsb
imul
sbb
fwait
pushf
push
xchg
push
and
loope
shrb
push
sbb
fwait
jo
mov
ret
add
orl
jp
inc
pop
pushf
or
sub
roll
rcll
mov
jp
jge
fsubl
add
fistpll
pop
in
loope
out
clc
fcom
fists
rcrb
xchg
and
ljmp
mov
mov
shll
call
mov
pop
lcall
mov
pop
cmc
or
jno
add
cmpsl
fs
fs
adc
lret
jno
in
mov
in
out
adc
inc
std
fiadds
xor
jnp
adc
or
mov
repz
mov
ljmp
mov
lds
xchg
and
xor
xor
lds
daa
stos
adc
nop
xlat
mov
push
and
jbe
jle
in
es
xor
lret
cmpsl
jmp
movsb
addl
xchg
repnz
push
push
call
xchg
sub
mov
mov
out
mov
addr16
lcall
xor
ljmp
mov
clc
pop
movsb
sub
push
xchg
insb
dec
fsubrs
cmp
insl
dec
testl
push
cwtl
notl
xor
add
fdivr
in
clc
mov
fdivr
mov
mov
pop
pop
test
push
icebp
outsl
dec
sub
jbe
push
js
in
sti
mov
jmp
es
test
ds
lcall
out
loop
sub
stos
inc
jae
pop
aam
ss
ja
lea
lds
test
mov
pop
sbb
or
and
insl
out
cmp
cld
je
mov
or
inc
adc
pop
push
lods
jg
std
ds
cmpsb
call
ret
mov
orb
jnp
in
jb
movsl
das
cwtl
dec
push
cmp
inc
cmp
shr
test
call
pusha
jp
pop
jno
in
lcall
fs
repz
lret
in
pop
pop
mov
xor
and
dec
ret
mov
dec
lahf
stos
ds
xchg
sbb
lahf
cmc
fnsave
add
sbb
dec
mov
daa
roll
lods
scas
jno
cmp
dec
mov
pop
dec
xchg
lret
loopne
js
sub
mov
push
lea
mov
jle
fistl
jl
shlb
stos
xchg
jl
pop
cltd
cmp
inc
imul
and
data16
jae
int
dec
enter
mov
shll
pop
push
imul
int
xor
call
add
xor
loope
in
mov
cmpsb
cmp
push
mov
fistps
ljmp
adc
or
sbb
adc
xor
shll
inc
insb
push
arpl
call
jne
pop
out
dec
sbb
and
mov
push
out
mov
xor
mov
mov
mov
push
lock
cmp
inc
in
pop
xor
rorb
add
jbe
add
jmp
jecxz
pop
push
mov
mov
dec
adc
mov
out
jl
add
and
or
fnstcw
shrl
popa
inc
add
icebp
jmp
dec
cmp
dec
insb
push
dec
push
or
scas
dec
adc
push
fists
cmp
fs
pop
bound
or
mov
xor
loope
cmp
mov
lods
mov
dec
addr16
mov
stc
dec
sub
or
cmp
xchg
adc
arpl
cmp
xchg
pusha
out
loope
pop
push
popf
insl
jnp
call
add
lahf
inc
mov
or
rclb
push
or
cs
lahf
outsb
push
imull
aas
push
push
jmp
outsl
jle
add
mov
imul
pop
mov
xchg
pop
add
lcall
xchg
in
mov
imul
lods
mov
inc
out
mov
stos
mov
ljmp
shrl
mov
adcl
test
jl
sub
mov
lret
into
inc
xchg
cmp
pop
cli
loop
push
stc
inc
mov
mov
sub
test
cmp
add
or
enter
test
xor
jbe
jbe
sbb
or
cmp
push
xlat
sub
stos
mov
js
shl
xchg
mov
aad
lods
movsl
mov
jg
test
add
add
clc
push
call
shr
mov
stc
xorl
jnp
daa
pop
fdivrl
je
mov
push
pop
daa
sub
adc
or
in
push
sti
nop
iret
cmp
dec
cmp
sub
jge
or
add
ss
negb
sbb
mov
xchg
jnp
cltd
sbb
notb
adc
sub
lock
popf
and
stos
sbb
mov
mov
enter
lret
push
lods
divl
sahf
and
xchg
rol
popf
stos
cmc
sub
fstpl
inc
icebp
loop
sahf
add
out
inc
adc
push
fisubrs
xchg
inc
iret
lret
fmull
pop
mov
mov
or
dec
imul
sub
rcrl
adc
sub
sahf
ja
or
xor
dec
jp
pop
data16
sahf
rcl
dec
addr16
filds
pop
imul
add
insl
stos
notb
mov
jnp
or
out
loopne
js
jae
push
xchg
popf
ret
mov
sub
cmp
test
inc
mov
ret
adc
jge
add
push
or
cwtl
xchg
and
inc
mov
mov
cmpsb
push
xchg
les
fs
dec
inc
lds
ss
adc
mov
mov
jg
mov
push
sahf
cmp
xor
xchg
or
fwait
dec
cmpsb
enter
testl
ret
jb
in
cmp
fs
hlt
push
push
loopne
stos
jo
mov
xchg
inc
push
enterw
cmpb
add
insl
fdivrs
mov
cmpsb
imul
fisubs
cmp
aam
pop
pop
cmp
outsb
mov
pop
push
stos
lret
outsb
inc
cmp
mov
aad
fildll
les
sahf
pop
fs
cmpsl
inc
sub
in
xchg
cwtl
jae
notb
es
sbb
pop
xor
sbb
adc
popf
pop
add
pop
insl
push
stos
pop
pushf
mov
das
xchg
sbb
adc
add
lahf
test
xchg
hlt
rclb
jl
cmp
cmp
sbb
and
and
data16
push
lret
leave
pop
dec
mov
jl
out
imul
push
or
pop
lods
or
sti
rcrl
mov
sbb
mov
xor
rorl
jnp
mov
xchg
jnp
mov
pop
test
or
imul
push
imul
ldmxcsr
das
mov
fwait
jo
loopne
jns
rcll
notl
test
pusha
imul
ja
jns
ss
dec
sub
repnz
inc
mov
xchg
adc
adc
inc
adc
cwtl
fld
push
in
xchg
mov
ljmp
push
push
dec
jle
pop
clc
sbb
dec
cmp
jnp
adc
movsw
stos
rorb
adc
and
pop
clc
fs
shr
mov
xchg
mov
sbb
ljmp
xchg
jo
jmp
cwtl
insb
cmp
sbb
ja
sbb
mov
popa
adc
push
pushf
mov
scas
mov
add
fisttpl
dec
in
sub
loop
icebp
adc
enter
xor
or
hlt
dec
inc
xor
cmpsl
sub
mov
shll
pop
jo
aaa
adcl
cmp
xor
lret
jge
jno
ror
ss
or
cwtl
sar
repnz
movsl
xor
or
adc
test
cmp
lea
mov
pop
cmc
add
mov
add
je
repnz
mov
daa
xchg
push
sbb
les
pop
inc
out
xchg
or
mov
into
jmp
xchg
mov
add
xchg
add
cmp
inc
shrl
lahf
xchg
test
mov
cmp
bnd
mov
and
imul
imul
mov
mov
dec
push
movsb
lcall
test
cmp
add
jnp
xor
and
and
push
xchg
cwtl
inc
xor
aaa
popf
out
mov
mov
movsl
xchg
sub
xor
adc
add
arpl
push
sub
mov
adc
ds
fiadds
scas
stos
repz
cwtl
stc
cwtl
shlb
mov
test
iret
imul
pop
faddl
in
adc
inc
xor
dec
mov
add
loop
and
ret
pop
stc
xor
sarb
dec
loop
icebp
or
std
mov
shll
loop
sti
jne
sahf
sbb
aaa
push
loopne
insl
mov
inc
push
inc
dec
stos
push
test
or
mov
int
pop
xor
adc
jecxz
icebp
inc
pop
mov
mull
jno
lock
push
cmpl
test
js
shll
addl
cmpsb
insl
inc
out
cmp
inc
es
cmp
mov
sbb
dec
jno
sbb
push
js
xchg
ja
jg
and
fisubl
xor
loop
adc
cmp
repnz
addr16
call
jmp
in
sub
mov
repz
xchg
subb
rcrb
dec
mov
cmp
jp
dec
stc
test
xor
lods
loop
push
or
or
jno
out
ljmp
sbb
aaa
or
cmp
ror
push
inc
ss
scas
cltd
cmp
pop
dec
pusha
in
push
pushf
or
push
mov
sub
aaa
cmp
fnsave
sub
fdivrs
into
inc
or
sbb
inc
loope
pusha
sbb
mov
mov
sub
dec
or
xlat
pop
jle
cmpsl
cmp
rclb
sub
mov
pop
inc
mov
mov
or
notb
xchg
cmpsl
lret
push
stos
mov
loop
mov
jno
popa
nop
repz
jmp
pop
xor
stc
mov
scas
mov
mov
sbb
outsb
sbb
and
and
jl
in
cmpsb
pop
inc
les
test
cli
xor
movsb
ret
lock
xchg
test
loope
or
push
popa
or
movsb
testl
and
jb
ret
loope
andb
xlat
xchg
popf
add
sub
insb
test
jge
dec
mov
push
xor
out
fistl
icebp
bound
sbb
mov
and
sahf
xchg
add
mov
clc
popa
add
loope
loope
fildl
sbb
dec
repz
loop
pop
fmuls
xlat
mov
cmc
pop
test
sbb
add
mov
sub
xchg
mov
push
dec
pop
les
cmp
cmp
dec
pop
rcrl
icebp
lea
xor
lea
mov
ret
bt
adc
popf
mov
mov
lcall
test
mov
push
jno
push
xchg
xchg
aaa
mov
fdivl
sbb
dec
mov
push
jne
mov
jge
push
in
loopne
pop
jl
and
adc
aad
mov
sub
je
inc
push
pop
cmp
xor
lods
add
call
push
pushl
xor
mov
aaa
loopne
push
mov
lods
adc
sub
xchg
test
xor
repnz
ds
mov
sub
sbb
xor
filds
push
mov
int3
rcr
dec
push
mov
xchg
dec
sub
clc
and
test
jl
mov
shrb
mov
sub
ret
mov
pop
insb
cli
int3
pand
in
mov
cli
jmp
xlat
pop
push
stos
stc
lret
or
push
shlb
int3
aas
or
inc
gs
jae
outsb
jb
adc
cmp
push
jg
xchg
movsl
adc
push
rcll
addr16
and
xchg
fiaddl
mov
notb
dec
add
xor
je
xchg
cmp
stos
and
mov
push
mov
jne
pop
sbb
push
leave
adc
jg
jno
xchg
inc
push
mov
stos
mov
es
js
push
in
addr16
sarl
mov
stc
mov
jb
xchg
or
ret
shll
jl
decl
fdivs
mov
stos
pusha
mov
push
lahf
add
std
mov
xchg
imul
pop
loopne
or
paddusb
out
dec
dec
and
xor
inc
inc
aaa
dec
loop
push
iret
xchg
push
lock
xor
imul
fstl
push
or
int3
aad
in
ja
in
rcr
xor
and
xchg
jo
fs
in
lcall
lods
or
bound
adc
icebp
pop
push
scas
push
xor
cltd
or
fsubp
das
or
dec
ror
sub
cltd
test
loopne
xor
outsl
stos
cltd
rcll
rcrl
inc
addr16
push
out
ja
mov
or
out
pop
cld
add
sub
test
jge
std
xchg
in
out
mov
movsl
xorl
and
xchg
stos
sahf
xchg
mov
sub
cld
jbe
dec
pushf
or
ds
les
ret
stos
mov
fadds
cmp
adc
push
adc
std
xchg
jg
push
pop
and
ds
adc
mov
and
rcrb
xchg
jecxz
dec
jnp
sbb
add
mov
out
push
xchg
movsl
mov
jbe
pop
mov
das
sbb
aad
iret
dec
divb
push
mov
test
xchg
or
mov
push
adc
out
dec
lret
pop
jl
pop
pop
loope
fld
out
das
ss
loope
push
cmp
cltd
imul
popf
scas
and
adc
stos
addb
push
push
jne
jns
inc
dec
mov
adc
fisttpll
bound
fnstcw
push
in
insb
inc
fadds
ficoml
ja
push
cld
jl
dec
sbb
fwait
adc
ja
inc
or
inc
push
out
cmp
pop
in
cs
fdivrl
je
inc
jmp
inc
fsubl
out
outsl
sbb
sub
xchg
cmp
mov
pushf
mov
mov
pop
adc
in
inc
jge
loopne
jp
out
insl
stos
xchg
movsb
fiaddl
repnz
test
mov
movsb
mov
shll
inc
jl
int3
push
ret
push
je
mov
andb
aam
pop
mov
incb
std
mov
rcr
xchg
sub
add
in
iret
dec
adc
mov
inc
outsl
adc
add
mov
mov
xchg
out
xchg
jmp
test
and
lahf
stos
insb
push
in
sbb
cld
lods
jbe
in
aam
push
fimuls
xchg
pushf
mov
fidivs
sub
fs
popf
pop
adc
mov
xlat
pop
mov
imul
mov
orl
lock
mov
xorb
push
cwtl
bswap
or
pop
lds
clc
dec
testl
xor
xor
mov
lock
push
inc
addr16
or
sbb
xor
jg
pushf
adc
push
fs
pop
fildll
leave
pop
popw
in
out
stos
mov
lds
fcom
enter
pop
arpl
fnsave
mov
clc
jne
sub
dec
mov
subl
pop
in
cmpsl
lods
dec
jmp
mov
call
js
sub
push
mov
push
aam
test
out
pop
insl
lods
dec
aam
xchg
mov
jmp
adc
push
lret
clc
shrl
jae
sub
sub
jb
stos
rcrb
fucom
adc
add
mov
stos
push
xchg
push
rorl
les
push
std
sbb
repz
daa
push
mov
mov
stos
pop
imul
cmp
inc
push
mov
jb
pop
repnz
cwtl
jle
push
aas
icebp
fidivl
je
mov
jne
sbb
xor
sbb
ret
outsb
mov
in
enter
pop
data16
in
mov
xchg
dec
sub
jb
adc
dec
or
mov
inc
xor
cmpsl
mov
cmp
mov
push
mov
sbb
lock
inc
adc
or
inc
push
nop
sbb
inc
and
lds
call
lock
or
repz
in
add
insb
jge
orl
push
sub
mov
mov
add
aas
mov
mov
mov
andb
and
push
mov
and
add
jl
js
and
or
cwtl
inc
fisubrs
lcall
push
jno
stos
ret
rcrw
stc
cmpsb
popa
ds
loope
inc
lret
dec
lahf
aas
out
sub
stc
cmpsb
outsb
std
scas
adc
rcll
and
add
push
mov
xchg
movsb
jno
add
jne
xor
add
ja
fs
push
push
movsb
data16
mov
lock
lea
and
xor
insl
mov
dec
rol
pop
in
std
leave
mov
aam
cmp
jmp
push
cmpl
fs
mov
popf
in
cmp
imul
mov
pop
or
in
add
lret
call
rorb
and
cmpsb
lret
mov
push
adc
lea
addl
xchg
ja
mov
insl
jle
push
stos
inc
int3
in
bound
pop
xor
dec
cmp
outsb
pop
add
addl
nop
sbb
mov
push
and
push
cs
or
lahf
sbb
hlt
pop
mov
pusha
insl
aad
sub
gs
fdivs
mov
and
daa
cmp
push
jp
test
clc
sbb
push
xchg
clc
cmp
adc
inc
imul
lahf
add
sub
fs
adcl
push
pop
stos
adc
xchg
outsb
mov
lret
pop
inc
adc
mov
push
push
mov
inc
jb
or
je
ret
sub
sbb
shlb
adc
pop
int3
push
mov
mov
orl
inc
test
sub
sub
dec
iret
cli
lret
mov
dec
push
aas
push
pop
jns
out
ret
cmp
pop
push
lea
jl
insb
xor
adc
cs
dec
ret
iret
sbb
stc
rcrl
and
xor
sbb
lcall
loopne
out
mov
imul
xchg
dec
clc
cmc
nop
sbb
push
dec
cmp
sub
jnp
fildl
dec
add
sbb
es
shll
mov
sbb
mov
mov
and
pop
xlat
and
loop
or
jo
daa
in
mov
fildl
movsl
adc
mov
push
inc
jl
push
pop
add
cli
pop
add
pop
call
insb
nop
jg
insb
into
dec
and
xor
pop
popa
lret
inc
sbb
and
out
mov
icebp
in
std
push
xchg
push
cmp
cltd
or
mov
push
test
aas
adc
xlat
mov
icebp
fstps
jo
ljmp
mov
ljmp
dec
mov
pop
mov
jl
pop
dec
pop
data16
xchg
imul
fs
std
sbb
pushf
sub
push
add
adc
je
push
outsl
push
pop
pop
cmp
or
sbb
jo
mov
jp
popa
push
mov
add
xor
xchg
add
repz
int3
sub
nop
push
mov
aas
in
sbb
lret
cmp
nop
cmpsb
or
sbb
add
mov
imul
adc
ficoml
insb
bound
mov
ljmp
add
push
aas
adc
and
push
lock
pop
cs
imul
pop
dec
lds
jg
add
jns
insb
mov
push
jmp
or
sar
mov
push
leave
fwait
mov
push
test
sarl
ss
mov
mov
movsb
sahf
cltd
dec
mov
lret
lahf
inc
pop
mov
add
lods
add
pop
push
jb
inc
orb
ror
add
hlt
ror
cwtl
shll
imul
xchg
popf
movsb
repnz
and
into
or
mov
cmp
sub
outsl
pop
insl
insl
sbb
sbb
and
mov
or
ljmp
je
ret
loopne
mov
ds
mov
mov
addb
sbb
stos
push
cmpsl
jl
mov
push
loop
insb
fmuls
std
inc
jbe
stos
cmp
pop
fisubs
sbb
mov
out
xlat
cmp
loope
sbb
cltd
jb
xor
pushf
aad
pop
into
sbb
sub
out
pop
xlat
mov
pushf
fstp
pop
jb
ds
mov
adc
fidivrs
dec
push
jno
xchg
out
xchg
and
jne
cwtl
repz
lods
mov
jmp
jnp
addr16
cmp
stos
mov
cwtl
mov
rorb
jae
inc
shrb
pop
dec
ss
mov
pop
push
xchg
js
fwait
mov
leave
pop
push
movsl
mov
mov
dec
mov
and
mov
shll
out
push
push
inc
and
xchg
lock
xor
push
add
lods
sub
cli
cmp
sub
and
sbb
cmp
inc
sbb
sbb
fistpl
mov
sahf
enter
in
push
sub
inc
or
sub
dec
cltd
mov
gs
lret
ja
into
xlat
in
fists
cmp
int
mov
dec
test
clc
cltd
push
jne
sti
leave
cltd
cmp
xchg
lock
dec
shlb
fisttpll
cmpsb
dec
sbb
insl
stos
mov
mov
aad
fisubs
adc
cmp
push
sub
pop
shll
sub
xor
fdivrs
inc
lret
push
inc
pushf
cwtl
jge
or
add
mov
xor
sarl
mov
bound
jp
push
mov
fsubrs
inc
gs
cmc
xor
ja
pop
mov
mov
es
fstpt
cltd
mov
push
cmp
mov
push
lods
or
and
mov
mov
lods
and
insl
dec
sbb
push
in
xchg
cmp
mov
mov
rorb
insl
xchg
xor
clc
sbb
dec
xlat
or
sahf
mov
dec
imul
pushl
inc
mov
cltd
xchg
mov
xchg
mov
shll
jmp
xchg
jo
mov
pushf
inc
shrl
enter
ret
cld
xchg
ja
mov
test
dec
loop
iret
dec
loopne
movsl
pop
sbb
and
aad
pop
je
mov
adc
pop
mov
imul
sub
bound
jae
xor
orb
push
pop
xchg
sub
mov
mov
mov
scas
ss
psrld
inc
pop
in
mov
adc
jl
inc
jp
push
vaddsubps
ja
ficomps
dec
adc
clc
pop
inc
sbb
dec
or
shrl
inc
dec
add
sbb
into
dec
leave
cmp
pop
cmp
sub
sti
gs
sbb
fbld
mov
lret
and
mov
divb
adc
lret
in
insl
and
pop
lea
add
ja
jl
clc
not
sbb
mov
lcall
adc
sbb
subb
xchg
sti
popf
aaa
pop
xchg
cld
jbe
and
das
out
xorb
je
je
sub
sbb
jge
out
shlb
fstl
or
repz
loop
push
xchg
dec
inc
cltd
xchg
jb
shlb
in
jne
cmc
cmp
lock
push
adc
xchg
stos
sbb
cmp
mov
out
test
ret
inc
loope
adc
imul
lods
fwait
xchg
push
mov
insb
sarb
xchg
dec
or
lret
je
jno
jbe
jno
stc
jbe
outsl
push
into
pop
sub
push
jge
jecxz
ret
lds
rolb
leave
mov
cmove
cmp
lahf
or
push
push
lcall
rolb
push
insb
add
adc
or
das
or
jb
in
push
jno
adc
into
xor
ret
and
mov
xorb
rcll
pop
sbb
sub
bnd
lahf
sub
addr16
jne
jge
jb
sbb
and
xor
push
push
popa
movsl
xchg
jge
inc
and
push
pop
mov
cmpsl
push
cld
fsts
ja
mov
pushf
xchg
mov
or
pop
popf
sub
xor
dec
ds
stc
into
xchg
lret
out
mov
popf
fimull
decl
sub
jo
jbe
icebp
out
bound
push
rcrb
iret
add
aas
ret
sbb
adc
mov
ret
das
cmpsb
pop
and
mov
cmp
aam
stos
insl
sub
nop
dec
sarl
and
repnz
sub
jnp
cmp
dec
pop
cmp
lock
pop
in
int3
gs
imul
je
dec
test
testl
mov
fistl
xchg
in
sbb
jl
dec
cs
mov
lock
incl
sahf
sti
jg
lahf
sti
test
mov
imul
dec
cmc
cs
sub
add
pop
sbb
xchg
scas
jmp
cmp
out
cmp
js
jp
xchg
testl
inc
mov
sbb
imul
insl
repz
jbe
cmpsb
sbb
call
cmpsl
lds
dec
lods
les
xor
lcall
jbe
jp
popa
je
fwait
push
xchg
mov
xchg
or
sub
xchg
xor
push
pushf
cmpsb
dec
jo
mov
test
sub
sbb
push
outsb
outsl
sub
out
adc
inc
jne
dec
push
hlt
jg
stc
xchg
xor
inc
ss
jl
and
shlb
xor
push
pop
xchg
add
idivb
adc
sub
movsb
hlt
pusha
push
xchg
insb
or
push
fisttps
jle
adc
mov
bound
ja
not
adc
cwtl
sbb
loop
sbb
mov
lock
in
divb
cs
pusha
stos
int
push
or
mov
mov
cltd
je,pn
int3
insl
sbb
stc
shrb
mov
cli
clc
xor
hlt
out
mov
sub
mov
popa
js
lahf
imul
sahf
jne
push
ljmp
and
cmpsb
mov
jns
push
mov
mov
sub
jmp
loope
cmp
xorb
out
pop
dec
cld
or
and
andl
arpl
pop
insb
mov
xor
fwait
rep
hlt
ds
pop
push
jecxz
jb
dec
mov
in
inc
pavgb
pusha
sbb
mov
cmpsb
xor
push
imul
push
sub
dec
mov
stos
jg
cmp
add
addr16
add
lods
sub
xchg
dec
cmp
lret
cmp
dec
push
xor
cmp
sbb
popa
fisttpl
adc
inc
jp
push
sub
dec
xor
and
pop
mov
pop
clc
xchg
xchg
imul
fidivl
mov
lret
jp
mov
sbb
pop
push
outsb
imul
shlb
xchg
and
mov
mov
xchg
adc
dec
out
adc
mov
push
scas
hlt
mov
lock
lret
lds
mov
pop
xor
dec
dec
out
inc
das
bound
cmp
ret
or
sub
jp
mov
popa
hlt
cmp
push
mov
fadds
sbb
push
mov
sbb
mov
add
jae
imul
sbb
cmp
int3
inc
movsl
lock
mov
test
mov
cmp
dec
test
test
into
dec
xchg
mov
ja
xor
xchg
mov
push
stos
in
sub
sub
push
dec
mov
repz
dec
fsub
imul
lods
cmp
and
cli
push
xchg
ds
xor
jmp
lret
xor
mov
pop
xchg
pop
std
iret
out
mov
adc
cwtl
sub
es
push
inc
adc
cld
pop
filds
and
andb
fnstenv
mov
fnstcw
pop
mov
mov
adc
stos
les
decb
dec
popf
ds
icebp
fldt
sarl
and
sbb
sbb
ja
mov
xor
out
cltd
mov
xor
outsb
outsb
cmpsb
push
cmp
cwtl
inc
fmull
rorb
int
data16
or
push
add
jl
xor
pop
ror
sarb
cmp
pushl
or
iret
test
adc
pop
ss
sarb
push
test
xchg
cwtl
xchg
jbe
fiaddl
or
and
in
jp
inc
jg
aaa
xor
sarb
lret
ret
stos
outsl
iret
ret
imul
dec
pop
jle
and
mov
adc
and
jae
call
pop
add
inc
test
pushf
shr
or
mov
out
repz
push
popa
adc
mov
stos
hlt
add
xlat
mov
test
scas
push
sub
cmp
aam
sti
sbb
xchg
mov
dec
mov
cwtl
int3
scas
nop
sbb
mov
dec
stc
or
je
jl
or
mov
addr16
sub
xchg
xchg
test
lods
test
lods
xor
mov
mov
out
stos
xorb
jp
adc
mov
jmp
sub
cmpsb
insb
inc
ja
sbb
ret
fs
push
cmpsb
and
jge
iret
push
das
ss
mov
jns
push
mov
addr16
xchg
data16
hlt
imul
jle,pn
pushf
cltd
jg
push
ds
pop
call
mov
nop
lret
not
mov
insb
arpl
out
fisubrl
out
pop
daa
jg
sub
in
pop
xchg
pop
shlb
cwtl
mov
fdivl
sbb
cltd
pop
jb
fdiv
mov
and
std
sub
dec
enter
mov
xor
mov
fstps
dec
sbb
nop
es
dec
sahf
loope
dec
in
inc
push
insl
mov
fcom
lret
xchg
js
xor
xchg
stos
out
clc
xchg
pop
lock
xchg
hlt
mov
push
out
mov
mov
dec
aad
jge
fisubrl
mov
test
xor
pop
imul
add
add
std
adc
push
popa
mov
loopne
je
push
cmp
sbb
les
pop
notb
mov
scas
inc
mov
mov
in
mov
movsb
xchg
mov
mov
mov
mov
ret
jecxz
xchg
mov
in
dec
xlat
insl
lods
fstpl
adc
xchg
les
aaa
sahf
sahf
mov
push
addb
push
push
add
out
jbe
jb
pushf
jnp
xor
aad
ret
stc
or
lods
or
dec
adc
outsl
rclb
int3
xchg
xor
ret
movb
pop
xchg
fldt
xchg
in
adc
aaa
sbb
cmp
stos
pop
inc
stos
ds
xor
push
clc
add
into
adc
in
popf
pop
inc
fstpt
xor
and
sub
add
rcrb
jecxz
xor
test
lret
shlb
imul
test
fxrstor
inc
jecxz
cmp
inc
mov
pop
lret
push
icebp
jb
xor
lcall
sbbb
daa
ja
dec
jbe
add
xor
or
fdivp
arpl
push
jne
adcb
xchg
cmp
ja
sbb
mulps
xor
pop
mov
cld
sbb
mov
jecxz
add
in
mov
pop
cmc
nop
mov
mov
jmp
outsb
mov
in
imul
xor
ds
testb
inc
add
pop
mov
or
lret
cwtl
movsb
or
es
jbe
in
or
sub
rorb
jmp
sub
sahf
enter
push
xor
mov
xchg
push
lea
imul
sbb
bswap
adc
cmp
inc
cmp
sti
data16
pop
jge
cmp
orb
cmp
insl
cmp
mov
jl
addb
lods
xlat
or
push
ret
mov
adcb
or
lcall
lock
notb
inc
int
push
xchg
addr16
xchg
jae
sbb
lods
call
bound
xchg
cmp
xchg
pop
and
aad
jge
fsubl
pop
je
jo
inc
pop
icebp
inc
jp
push
adc
mov
xor
movsl
mov
cmp
flds
lods
sbb
jbe
xchg
shll
push
or
popa
lods
mov
jno
cld
repnz
nop
dec
nop
xchg
mov
pop
xchg
repz
jecxz
cmpsl
jle
push
mov
rclb
and
and
and
fwait
lods
mov
aas
mov
inc
mov
les
jae
adcl
jno
pop
pop
or
adc
inc
ror
push
flds
dec
cmp
dec
sbb
xorl
outsb
in
sbb
dec
jge
pushf
xlat
popf
cmp
outsb
or
push
mov
jge
mov
pop
popa
fiadds
aas
fwait
and
sbb
cld
or
or
js
cmp
or
mov
ds
fnsave
dec
aaa
cmp
mov
sti
popf
out
pop
pop
adc
mov
mov
sbb
jge
cmp
testb
orl
jmp
aam
inc
sbb
jl
aas
testb
inc
push
out
in
pushf
aas
mov
xor
add
test
add
lahf
dec
add
xchg
mov
jb
sti
cmp
daa
out
jns
jl
inc
lods
int
xor
sbb
cmp
adc
iret
jo
sub
retw
imul
xchg
lret
adcl
imul
insl
push
mov
in
push
mov
push
pop
setno
mov
push
inc
mov
cmp
cld
xor
add
or
popf
adc
mov
pop
mov
mov
mov
negb
arpl
mov
roll
nop
ret
cwtl
js
lods
inc
push
ds
xchg
jle
pop
lds
hlt
sub
xor
cmp
aas
std
cmp
adc
jle
iret
and
outsl
fstpl
movsl
dec
int
repz
lcall
fisubrl
jmp
decb
test
lret
mov
sbb
out
add
adc
sub
leave
fiaddl
mov
sub
or
push
lds
jg
pop
add
jne
push
movsl
hlt
push
aam
lods
test
push
and
es
pop
adc
aas
fmull
and
int3
mov
inc
mov
clc
call
add
insl
push
mov
sbb
in
cmp
add
decl
sti
cmp
mov
and
push
inc
sbbb
mov
or
or
inc
xchg
cwtl
add
into
and
loop
lock
jbe
xchg
imul
and
in
push
cmp
add
pop
fs
inc
je
sub
or
fldcw
aad
adc
adc
pop
pusha
stos
mov
xchg
pop
push
call
pop
fwait
mov
jle
lock
inc
or
pop
cmc
xchg
pop
in
xchg
sbb
dec
cmp
das
mov
jge
ret
adc
xchg
insb
sbb
cmp
outsb
or
fistpll
inc
mov
int3
cmp
imul
mov
ja
arpl
pop
jp
sub
imul
pop
fsubrs
xlat
push
int3
stc
cmpsb
movl
sahf
cmp
mov
push
divl
mov
and
inc
adc
mov
add
test
mov
xchg
cld
fidivl
sbb
mov
clc
gs
cwtl
arpl
xorl
popa
xchg
or
or
xor
dec
pop
or
add
enter
mov
inc
dec
shrb
call
icebp
xchg
ss
jmp
pop
aam
inc
dec
jle
cmp
sub
daa
mov
inc
cmpsb
xlat
dec
scas
out
aas
into
and
adc
cld
and
sbb
popa
sub
or
int
cltd
jbe
sub
pop
cmc
xor
clc
mov
loop
and
mov
test
sbb
mov
orb
mov
sbb
xor
or
cmpsb
out
jns
arpl
jecxz
and
test
lcall
push
test
xlat
and
push
ss
movsb
sahf
fnstcw
add
sub
pop
nop
xor
lods
notl
push
push
test
nop
fs
and
imul
outsl
inc
out
push
cmp
lods
mov
sbb
insl
call
stos
or
outsb
pusha
jle
div
out
fs
fs
adc
add
pop
lods
pop
outsl
lret
pop
or
dec
mov
or
rorb
fxch
stos
std
icebp
adc
inc
fsubl
or
push
ss
mov
sub
repnz
outsb
jns
jb
fsubrl
fstpt
stc
pop
leave
adc
divl
addr16
pop
int3
xchg
jg
inc
std
lcall
shlb
jl
lcall
inc
jo
mov
aad
sbb
dec
insl
sub
xchg
ficomps
sti
loopne
mov
in
sbb
lock
mov
push
fistl
mov
push
nop
add
push
jecxz
dec
pop
xor
mov
sbb
pop
test
popf
fbld
mov
xchg
push
mov
out
push
and
sbb
xor
mov
xlat
fidivrl
jns
xchg
or
push
ss
mov
test
sub
mov
pusha
sub
sbb
or
xchg
xor
fwait
ds
cmp
es
xor
sbb
stos
dec
repz
pop
push
inc
inc
cltd
push
cli
je
sbb
mov
and
insb
and
dec
and
dec
jb
adc
cld
jne
mov
mov
fcompl
xchg
mov
add
push
inc
sub
pop
jns
xor
pop
and
xchg
test
mov
fsubrs
mov
enter
outsl
fidivrl
xchg
fisubs
scas
push
sbb
lods
sti
cmpl
mov
cld
mov
dec
test
push
adc
sbb
jno
in
lods
jl
dec
add
roll
jb
les
jp
and
mov
adc
pop
cltd
fs
shll
addr16
mov
inc
call
and
gs
ficoms
sarb
xchg
add
mov
push
outsl
filds
ret
das
cltd
movsb
sub
movsl
aaa
jo
adc
frstor
in
fdivl
pushf
xchg
fs
clc
or
fiadds
adc
in
or
mov
mov
daa
aad
and
push
pop
shll
aad
cli
mov
pop
aam
mov
dec
mull
xor
repz
movsb
add
adc
mov
cwtl
push
stc
into
pop
sbb
adc
sahf
mov
mov
add
mov
aad
hlt
jb
pop
or
or
pop
cmp
adc
xchg
xchg
jp
sbb
xchg
mov
hlt
movsb
loope
rclb
pop
out
rcrb
inc
add
test
ficompl
xorl
sarb
pop
rcrb
inc
jne
xchg
mov
add
sbb
and
cmc
mov
xor
dec
aas
and
sbbl
mov
addb
lock
test
xlat
or
and
fbstp
mov
xchg
pop
stos
xchg
insl
push
pop
mov
out
mov
imul
movl
pusha
lahf
mov
enter
cmp
repz
pop
cld
pop
call
sti
or
ds
lods
jae
in
cwtl
subl
fimull
roll
leave
ss
cmp
xchg
jbe,pt
jnp
jle
outsl
bnd
add
jae
loop
sbb
adc
outsb
lods
xlat
inc
cmp
sub
add
data16
loopne
lods
in
push
sti
stos
insl
and
xchg
inc
mov
sub
dec
dec
adc
loope
js
mov
inc
imull
jnp
lret
dec
addr16
mov
das
mov
mov
mov
std
xchg
mov
xchg
adc
es
clc
pop
into
hlt
mov
out
ficoms
mov
jge
cli
jnp
add
adc
mov
ja
js
push
sbb
in
add
mov
xchg
mov
dec
pop
and
push
inc
lds
xchg
pop
orl
adc
mov
in
gs
pop
orl
addl
and
pop
adc
jge
push
and
sti
cmp
aas
push
sbb
xchg
push
and
lds
insb
dec
fsubl
rorb
call
enter
int3
ljmp
xor
add
push
cmpsb
jge
cmpsl
test
mov
js
nop
push
icebp
pusha
pop
daa
sbb
pop
xor
fidivl
sbb
data16
dec
test
fsubl
mov
fistpll
jno
call
cltd
lcall
daa
mov
test
cltd
dec
jnp
jg
dec
cwtl
push
cmp
dec
add
xor
enter
sti
cmp
js
xchg
mov
sbb
repz
dec
popa
addl
lea
mov
cs
imul
lods
nop
into
xor
push
xchg
lcall
loop
cmpb
jno
outsl
mov
mov
sub
lds
sub
sbb
sbb
xor
adc
sub
mov
pop
mov
xor
xchg
cmp
push
or
xor
rcr
pop
pop
adc
mov
jb
push
inc
shll
daa
in
jno
mov
cwtl
xchg
jo
fcoml
push
loopne
mov
adc
je
lods
add
add
pop
push
imul
push
and
lods
dec
outsb
cmc
xchg
inc
xchg
cwtl
dec
cmp
fimull
cmpsb
xorb
movsb
sbb
mov
xor
xchg
dec
jo
xchg
sbb
cs
or
stos
scas
and
mov
sbb
jmp
insb
out
sub
xchg
jbe
sarb
jle
xor
ds
lock
push
cli
fxam
dec
cmc
scas
out
cmp
xchg
adc
cmc
jo
pop
inc
mov
dec
ljmp
lods
inc
cmpsl
dec
dec
sub
jno
aaa
idiv
lds
and
imul
mov
sbb
out
in
and
iret
outsb
int
xchg
in
lret
mov
scas
icebp
jb
xchg
mov
sbb
fwait
mov
mov
into
or
dec
xchg
mov
int3
shrb
add
jne
jnp
iret
test
push
insl
fldenv
mov
mov
sti
xor
lcall
repz
iret
int
jp
popf
dec
jecxz
pop
push
test
xor
lods
cmpsb
int
loop
movsb
push
add
inc
mov
arpl
mov
mov
psubusb
dec
push
cmp
and
sbb
push
pop
jne
xchg
adc
in
pop
loope
sbb
rolb
dec
or
imul
clc
je
xchg
lea
das
mov
adc
sub
xor
popa
jl
push
lcall
jp
inc
lods
jg
test
jge
jbe
inc
pop
hlt
push
nop
adc
push
xor
xor
fsubr
pop
mov
pushf
jo
mov
dec
dec
cmp
into
lds
sub
and
in
mov
and
push
jmp
adc
out
xor
loop
cmp
xor
cmp
stos
sbb
ja
cmc
push
cmc
fsubrl
ja
cmp
stos
loope
mov
sub
pop
mov
xor
movsb
inc
mov
test
out
add
push
das
out
mov
adcb
mov
cli
imul
mov
push
add
pusha
push
fsubp
ljmp
or
mov
sub
xchg
add
cwtl
xchg
inc
lds
sub
lds
aad
xchg
jp
cmp
shrl
cmp
mov
cmp
sbb
push
dec
test
push
addb
or
repnz
lcall
inc
lcall
or
pop
mov
stos
dec
add
jne
xchg
mov
leave
pop
repnz
push
aam
scas
xchg
add
negl
outsl
jnp
sar
in
ss
mov
jbe
in
scas
lods
cmp
mov
mov
les
repz
push
pop
shlb
inc
xlat
cli
daa
inc
dec
outsb
inc
sbb
xor
stos
push
add
stos
pop
and
popw
lods
lret
movsl
dec
test
in
inc
push
cmp
imul
mov
mov
arpl
sbb
es
and
hlt
nop
push
pop
sbb
arpl
xor
popa
pop
stc
adc
dec
or
xor
int3
testb
sbb
push
dec
jo
cltd
ret
out
fs
cmpb
pop
adc
out
fcmovnb
inc
insb
rorl
das
lahf
dec
es
dec
shlb
inc
push
inc
out
lods
xchg
cwtl
push
mov
fisttps
je
mov
xor
movsl
pop
scas
jl
xchg
inc
decl
pusha
sbb
add
xor
leave
sbb
push
cmpsb
xchg
ljmp
adcl
aaa
add
loope
mov
lret
sbb
mov
cmp
test
movsb
dec
mov
mov
test
mov
mov
push
f2xm1
push
ja
loope
sub
call
loop
js
ffreep
dec
cmp
push
out
ja
shll
sbb
fwait
add
push
pushf
pop
xor
push
push
mov
mov
cmp
jae
fildll
loop
rcrl
fstpt
push
or
add
jle
movl
pushf
ja
fdivl
out
mov
dec
sbbb
mov
pop
outsl
fsub
fcompl
sbb
xchg
hlt
orl
xchg
pop
fwait
fs
push
cmpsl
cmovbe
mov
adc
pop
mov
test
xchg
add
pop
add
dec
push
push
lea
fnstenv
sbb
inc
sub
and
scas
in
xchg
hlt
mov
mov
adc
pop
les
mov
call
test
fstl
sahf
out
sbbl
cmp
out
push
adc
or
lods
sub
shr
add
jns
test
jne
adc
dec
out
add
lock
int
loope
mov
sti
nop
and
pop
sbb
out
sti
jecxz
pop
sub
sub
push
xor
or
int
mov
lods
jge
shl
sbb
and
add
in
nop
fcompl
lahf
cmp
push
add
mov
out
rcr
jmp
xor
push
fdivl
jle
ret
mov
fdivrs
push
xchg
and
cltd
movsb
in
push
ljmp
sub
dec
jge
lcall
iret
ret
jae
push
sbb
les
sub
mull
adc
inc
outsb
xor
repnz
pop
mov
fprem1
sbb
mov
sub
push
ret
jecxz
cltd
outsl
ret
fbstp
dec
and
and
mov
adc
into
push
in
cltd
fyl2x
aas
in
push
shlb
and
lret
sbb
sbbb
sbb
and
jns
ljmp
std
stos
cmp
sbb
pop
push
xlat
mov
cld
lret
imul
push
in
jp
adc
aaa
inc
js
lahf
sub
jmp
mov
aam
lock
or
call
insb
icebp
sbb
imul
push
pop
xchg
push
bound
cld
addr16
pushf
ret
adc
pop
lds
mov
popa
or
pop
shlb
stc
push
jge
outsb
mov
mov
push
ret
orb
enter
lret
fidivs
fs
inc
fcmovnu
mov
cmpl
jae
bound
nop
cmc
adc
sbb
outsb
inc
adc
xchg
or
jae
or
repnz
add
cmc
cmpsb
iret
dec
out
push
fcmovnb
cwtl
pop
lret
push
sbb
xchg
cmpsb
movups
ror
mov
sbb
loope
pushl
fisttpl
stos
das
pop
sbb
out
pop
sub
aas
sub
cwtl
shlb
out
hlt
jl
aas
or
shl
adc
push
out
sub
fcmovnbe
mov
dec
sub
sub
in
pop
cmpsb
scas
imul
fcomps
pop
mov
movsl
pop
or
jnp
mov
mov
fs
jns
aas
mov
jle
add
inc
pushf
push
add
stc
or
xchg
dec
pop
aad
js
push
inc
pop
mov
sbbb
lds
cmp
out
scas
fnop
pushf
stos
sti
scas
cli
add
loope
outsb
xchg
in
xchg
cmpsl
mov
int
mov
jp
push
je
jns
jne
and
and
into
dec
push
cmp
jae
sub
pop
cli
fsubrs
lea
pop
mov
sbb
stc
in
js
adcl
iret
fldcw
push
jecxz
pop
out
notl
lock
or
pushf
sub
or
inc
push
jno
dec
jo
ds
and
push
inc
jecxz
push
aaa
or
cs
xchg
sub
push
adc
dec
push
add
sub
xor
adc
dec
rorb
rorb
add
divl
in
cs
xor
xchg
roll
pop
js
push
leave
sahf
mov
je
and
sbb
aad
jae
xlat
iret
push
mov
mov
or
lods
inc
out
fcmovnbe
idivl
mov
divb
cmp
and
outsl
ss
push
xchg
out
sarb
xchg
mov
or
imul
addb
fcomi
push
in
out
mov
adc
adc
pop
incb
mov
jle
inc
mov
adc
enter
sarb
dec
nop
dec
and
hlt
and
int
xchg
mov
outsb
iret
mov
cmp
mov
lret
mov
into
les
fcomps
ret
pushf
jo
and
lahf
sbb
js
add
aad
add
es
cmp
or
xchg
ret
xor
mov
out
mov
pop
pop
lcall
test
and
mov
pop
or
std
cmc
add
and
subl
shlb
cwtl
fildl
cmp
push
push
mov
inc
sub
js
ja
lods
xchg
lds
popf
es
push
or
push
cmp
imul
test
jb
add
xor
mov
std
pop
xorb
cmp
adc
or
stos
push
shl
xor
mov
data16
xchg
adc
adc
dec
pop
mov
std
popa
fwait
lods
lea
or
ja
gs
dec
pop
jo
xor
int3
sub
movsl
cmp
jmp
cmpsb
xor
xchg
add
push
mov
outsb
lds
sbb
xchg
or
filds
stos
in
test
and
jno
mov
fdivs
mov
iret
stos
es
adc
test
jno
adc
add
sbb
aaa
lahf
push
cmpsl
mov
movsb
icebp
mov
mov
outsl
push
lahf
push
xor
and
xchg
or
xchg
mov
imul
mov
test
test
cmp
inc
mov
cld
sahf
cwtl
pusha
xor
mov
mov
inc
mov
int
loopne
popa
add
ss
mov
stos
jnp
inc
jp
int3
cs
gs
call
cwtl
lret
sar
inc
push
push
fldt
in
loope
and
rcrb
pop
or
xchg
and
sbb
mov
cmp
stos
faddl
aam
sub
lods
in
cmp
test
andb
fs
popf
loope
adc
scas
adc
jbe
mov
cmp
push
test
repz
cmpsb
push
cmp
adc
xor
inc
adc
xor
or
and
jl
push
sbb
push
cmp
xor
int3
mov
stos
insb
adc
sahf
dec
mov
mov
or
popf
inc
push
sub
aam
xchg
sbb
int
cwtl
imul
adc
mov
addr16
adc
adc
fnclex
mov
xchg
mov
sub
inc
push
sub
adc
addl
sub
shr
xchg
mov
in
hlt
jle
fsubs
std
sbb
mov
cmc
or
and
mov
sbbl
lcall
sub
add
scas
enter
pop
cmp
dec
fmuls
or
adc
push
lret
or
xor
stos
dec
cs
stos
push
xchg
pause
aam
sbb
mov
jo
mov
test
mov
cld
cwtl
pop
ds
loope
bound
push
lret
scas
xor
lea
popf
enter
sbb
push
fs
pop
sub
push
les
pop
mov
cmc
test
cltd
xchg
mov
add
dec
cmp
mov
sbb
stc
pop
cli
mov
pop
out
pusha
decb
test
mov
and
xchg
repnz
jge
sub
dec
push
lods
jns
sbb
fcoml
divl
jp
dec
mov
fadds
mov
shrl
ljmp
or
jmp
shlb
push
nop
out
adcb
out
hlt
pop
add
scas
pop
cmp
nop
push
cmp
test
cwtl
test
shrb
es
and
dec
sbb
dec
sbb
push
loopne
sub
push
mov
out
pop
mov
sahf
mov
rolb
arpl
fwait
addr16
sub
je
fld
mov
inc
cmp
mov
cmc
inc
jae
out
pusha
mov
add
cmc
ret
in
sub
push
mov
jmp
add
jo
push
xchg
ficompl
mov
pop
lfs
jbe
sbb
inc
shll
xchg
enter
push
jne
mov
mov
mov
push
xchg
test
add
test
popf
das
nop
sbb
jbe
pop
out
call
hlt
jp
lea
ror
out
adc
or
dec
xchg
pusha
jp
sub
jmp
aaa
push
pop
ds
jb
icebp
lods
xchg
mov
test
test
dec
pop
add
add
dec
divl
out
cltd
jmp
je
icebp
repz
dec
mov
add
pop
mov
repz
or
in
xchg
mov
push
push
and
push
loop
lds
and
push
iret
imul
std
gs
inc
repz
loop
movsb
scas
cmpsl
ds
stos
lock
popf
add
cmp
mov
imul
popf
lds
xor
addb
sahf
mov
test
shl
rcrb
out
in
fidivl
cmpb
cmp
sahf
jecxz
in
lock
fcomps
sbb
dec
std
pop
clc
push
push
mov
jbe
neg
mov
pop
add
lcall
and
push
inc
pop
rolb
inc
and
das
push
jae
clc
clc
nop
arpl
or
stos
xor
dec
divb
into
sub
add
xor
or
aad
mov
jns
or
inc
mov
or
std
xchg
les
dec
call
inc
jne
out
dec
push
pop
mov
pop
mov
mov
cmp
das
push
shlb
icebp
lahf
into
xor
daa
inc
cltd
cmp
jmp
call
insb
leave
and
cmpsb
jnp
cmp
push
cmp
out
mov
repz
mov
mov
aas
or
fnsave
inc
ss
xorl
cwtl
and
mov
mov
loop
jmp
lock
movsb
je
adc
fsub
xor
mov
or
adc
or
adc
enter
leave
aas
lods
out
cmp
pusha
sbb
repnz
or
mov
dec
int3
imul
mov
jge
and
addr16
or
sbb
dec
sub
call
xor
cld
jno
outsb
pop
or
dec
or
cmp
lock
cld
imull
sub
pusha
xchg
adc
mov
jg
scas
scas
pop
out
pop
mov
jl
inc
adc
adc
pushf
shll
push
add
cltd
movsb
inc
mov
repnz
outsb
push
mov
xor
gs
jae
jg
fisubl
mov
pop
lcall
push
cmp
pushw
mov
lea
repnz
and
push
std
jle
sbb
shlb
cltd
popa
fiadds
bound
sbb
inc
and
sarb
and
seta
jae
pop
in
cmp
push
mov
jp
xchg
mov
xchg
daa
mov
push
jmp
mov
rcrl
adc
push
mov
je
lcall
pop
dec
aad
pop
sbb
mov
add
mov
mov
pop
inc
mov
leave
in
xchg
add
std
into
mov
fcmove
shl
push
push
jge
mov
std
repnz
push
dec
fldt
fsubrs
ljmp
subl
int
jecxz
lock
xchg
xlat
or
popf
stos
sti
hlt
inc
mov
push
push
jno
and
xchg
push
push
int
fucomp
arpl
inc
insb
pop
add
sub
pop
ja
subb
cs
loopne
xchg
jbe
sbbl
mov
aas
iret
je
lock
insb
lods
scas
sub
cmp
mov
push
xchg
xchg
jge
push
popf
ds
jecxz
fcmovne
lret
mov
add
adc
or
enter
sub
dec
jb
push
fists
data16
aas
sbb
push
inc
and
lahf
pop
dec
test
cmpsb
inc
in
cmpsb
and
cmp
mov
cld
ljmp
repnz
xorb
sub
adc
cmp
pop
leave
sbb
roll
pop
fisubrs
lods
gs
xor
jnp
pusha
ret
bound
sbb
dec
dec
icebp
sub
jne
test
mov
bnd
inc
shr
aaa
lahf
fcmovnu
inc
fchs
sahf
popa
xorl
xchg
xchg
fistps
leave
mov
pushf
mov
adc
jmp
jbe
jl
mov
xor
aas
mov
mov
mov
and
xchg
xchg
sti
pop
jae
inc
mov
dec
mov
pop
aaa
loop
push
int3
test
stos
aam
movsl
rclb
mov
or
add
icebp
mov
xorl
add
cmp
pop
aam
rcrb
sub
fcoml
pop
negl
sbb
imul
test
mov
push
xchg
aad
int
xor
scas
subl
sub
mov
mov
outsb
gs
in
ret
scas
push
mov
jae
call
je
and
fadds
push
mov
inc
and
mov
insl
or
cli
fnstsw
mov
shl
mov
jecxz
pop
and
mov
adc
jo
push
lods
sbb
ret
dec
jb
insb
push
mov
sahf
pop
pop
mov
adc
repnz
movsl
bound
xor
mov
jb
loopne
and
add
mov
mov
mov
test
mov
repz
mov
jmp
adcb
push
inc
push
xor
xchg
xor
push
jmp
fcmovbe
icebp
sbb
clc
call
dec
inc
add
jns
fdivp
imul
adc
ret
out
sbb
aas
cmc
add
mov
repz
lret
mov
jl
jl
test
insl
dec
adc
int
adc
or
pop
insl
mov
imul
ret
pop
ljmp
or
push
add
and
dec
data16
mov
cmp
test
mov
fisubl
jno
leave
gs
xor
cmpsl
xchg
sub
movsl
xchg
or
cltd
lods
shrl
js
sahf
mov
repnz
mov
sub
lods
fs
into
stos
pop
orb
stc
sbb
inc
or
pop
setno
cli
push
push
jns
sti
adc
lods
pop
sbb
sarb
int3
push
nop
pop
jnp
leave
mov
add
iret
cmp
mov
fdiv
xchg
pop
push
insb
test
mov
sbb
or
sbb
loop
dec
push
jae
testb
daa
daa
lcall
pop
test
lea
jp
rcrb
sub
cmp
aas
inc
dec
sarb
push
push
sub
push
daa
and
into
ret
sbb
dec
ret
lret
jb
sub
or
pop
push
xchg
sbb
xchg
pop
push
arpl
adc
imul
xchg
inc
loope
scas
test
insb
xchg
test
andl
ds
movsl
cmc
popa
fiaddl
xchg
xchg
in
adcb
or
repnz
aaa
pop
and
movsl
rorl
jno
xlat
es
xchg
mov
mov
mov
xor
fcomi
push
out
mov
and
xor
pop
adc
cmc
faddp
push
insl
cmp
ficoms
sub
test
xorl
sbb
out
mov
ss
mov
into
hlt
js
rcll
mov
or
pop
call
or
pop
imull
mov
jmp
inc
or
mov
jo
push
xor
loope
inc
lock
cmp
shr
inc
adcl
xlat
popa
rcrb
mov
mov
ja
in
xor
nop
pop
test
push
ret
pop
pcmpeqb
jmp
sbb
add
hlt
in
ja
mov
fdivrs
cmpsl
add
lods
outsb
rcr
mov
add
or
xchg
jne
cmpsl
daa
inc
sbb
lret
daa
xchg
pop
fsubr
pusha
divb
add
movsl
notb
cs
mov
inc
sbb
imul
ret
add
rclb
fadds
scas
dec
cltd
fstl
push
rorl
out
sub
mov
push
inc
orb
adc
jecxz
arpl
pop
inc
push
jmp
push
out
sub
sub
cmp
push
dec
cmpsl
jg
jne
add
push
add
dec
sbb
or
adc
sub
repnz
negl
sbb
lea
sbb
in
shll
push
mov
dec
jns
test
jge
sbb
mov
xchg
xchg
aam
nop
sbb
ss
xchg
cmp
rcrb
ds
cmc
or
fisubl
dec
xchg
fwait
popa
pop
cmpsb
dec
call
das
push
cwtl
scas
aam
iret
addl
inc
push
sahf
or
imul
sub
cld
subb
ret
movsb
loope
xor
dec
cmp
sbb
xor
mov
pop
pop
cli
faddl
pop
pop
jb
push
xchg
inc
popa
pop
pop
or
fsubs
push
int3
mov
aad
fistl
mov
mov
and
popa
aad
loopne
cmp
adc
rcrl
stc
arpl
inc
add
pop
sti
and
dec
mov
mov
pop
aad
xchg
push
jns
cli
lea
cmc
lds
mov
dec
xor
loope
add
sub
pop
sub
cmp
fimuls
aaa
inc
lret
lea
dec
inc
out
lahf
loopne
test
fs
pushw
dec
test
sahf
ds
and
mov
jae
sbb
and
or
int3
std
aam
inc
pop
xchg
sbb
dec
shlb
int3
lea
stos
bound
mov
pop
mov
mov
push
pop
jnp
sub
insb
daa
mov
shll
mov
out
lock
ret
jmp
add
mov
mulb
sbb
xchg
xchg
dec
out
sub
push
mov
add
popa
ja
add
xchg
scas
stc
inc
and
repnz
scas
dec
xchg
dec
push
cwtl
ret
test
xchg
push
out
xchg
inc
jno
pop
hlt
sub
push
dec
int3
and
push
xchg
mov
sub
mov
cmp
js
xor
sbb
out
scas
sti
iret
xchg
mov
cmc
dec
andl
mov
dec
lret
test
push
push
cwtl
pop
jmp
fstps
out
jnp
cs
and
dec
lods
jle
lock
mov
sub
sbbb
sarb
aaa
out
dec
add
push
imul
aas
into
lahf
scas
insb
out
in
stos
jb
in
push
aam
mov
or
jge
push
inc
sahf
mov
xorb
mov
out
ljmp
push
fucomi
cmp
outsl
push
clc
mov
test
fdivs
dec
fstpt
mov
out
push
rclb
test
into
sbb
jg
test
xchg
or
nop
push
bound
dec
cmp
ja
mov
cmp
pop
inc
jnp
gs
movsl
inc
ja
iret
push
mov
inc
sahf
xchg
pop
cmp
mov
xchg
xor
outsb
fnstcw
sbb
aad
and
pop
dec
scas
stc
pop
push
cld
es
mov
das
outsl
loopne
das
sub
xchg
push
mov
mov
mov
or
test
fsubp
lock
out
push
sub
or
ret
stos
add
sub
and
iret
movl
cmp
idiv
fnstcw
outsl
into
mov
push
jae
enter
sub
mov
mov
xor
lods
hlt
imul
fwait
mov
push
imul
enter
xchg
xor
jmp
jg
aam
xlat
cmp
popa
pushf
cmp
shl
xor
cmpl
xor
pop
and
cld
push
adc
jbe
sub
ljmp
xchg
adc
in
xor
or
push
out
rcr
out
cld
out
xor
or
pusha
addr16
cli
cltd
mov
dec
ss
jne
xchg
cmc
sub
jo
call
adc
jecxz
aas
inc
rcrb
lret
xor
loope
stos
jl
sbb
movsb
inc
aad
xchg
dec
mov
dec
mov
dec
pop
jno
jmp
pop
or
dec
adc
lds
inc
sbb
popa
popa
push
scas
push
push
and
imul
cltd
xchg
scas
out
sbb
sbb
push
sahf
sub
dec
mov
pop
insl
jbe
xchg
mov
mov
dec
mov
dec
jg
divb
test
xor
adc
in
xchg
xchg
movl
cmp
cmpsl
int
jne
inc
fidivrl
loop
pushf
in
push
mov
mov
outsl
mov
mov
dec
dec
std
pop
pop
push
push
scas
xchg
xor
xor
outsb
xor
fistpl
out
pop
push
mov
inc
lcall
and
and
lods
dec
stos
int
add
lret
rcrl
sub
add
call
ja
lahf
cmc
xchg
cltd
mov
cmp
inc
mov
rorb
jne
inc
fs
sti
xor
mov
mov
and
in
xchg
lds
flds
or
data16
adc
cmpsb
mov
xor
xchg
and
push
jno
imul
loopne
push
cmpsl
sbb
aad
and
shrb
xor
cltd
bswap
xchg
ret
and
sub
nop
inc
test
dec
subl
jae
icebp
in
push
push
pop
and
inc
sarb
and
dec
jg
roll
mov
orb
iret
not
call
call
in
movsl
mov
xor
jp
fs
push
pusha
or
jge
bt
mov
push
iret
aad
test
fisttps
stc
ret
addr16
xor
jge
mov
cld
dec
jmp
or
jge
adc
jmp
add
or
dec
push
incb
push
in
dec
mov
adc
pop
mov
push
int
es
stc
rep
and
cmp
shl
xor
outsb
cmp
les
mov
cwtl
xor
inc
pop
add
imul
aam
les
mul
lea
jmp
pop
push
movsl
scas
rorb
pop
xchg
in
or
add
lret
inc
and
sbb
mov
fwait
je
add
mov
inc
jmp
shl
lcall
pop
mov
push
bound
adc
aaa
and
fwait
into
dec
pop
cmp
xchg
push
xchg
jno
negb
mov
iret
cli
int3
mov
mov
ljmp
rorl
jecxz
stc
mov
pop
btsl
mov
dec
add
scas
xor
jbe
dec
lea
stos
add
lea
imul
scas
leave
loop
cwtl
xor
push
dec
bound
les
xor
cmp
and
mov
int
and
pop
sub
lret
dec
pop
push
xor
rcll
add
and
pop
mov
pop
push
mov
inc
fcoms
aas
mov
dec
push
jle
popf
roll
mov
movsl
inc
xor
or
pusha
inc
stc
cmp
inc
gs
mov
push
push
test
adc
mov
lret
lar
mov
adc
or
xchg
decb
mul
mov
mov
cmpsb
push
dec
cmc
cld
inc
jb
pop
sarl
lea
addr16
enter
clc
sub
push
lret
xchg
sti
dec
mov
cli
adc
arpl
mov
lcall
cmp
cld
and
xor
pop
and
jle
jns
stc
repnz
lods
addb
pop
cmpsl
jmp
loope
dec
add
fsubs
rcrb
aad
into
stos
cs
jg
adc
cmp
shlb
and
add
aaa
mov
cmp
cmc
sbb
push
test
lods
and
and
nop
sbb
xor
sbb
jmp
push
scas
jl
jno
sub
mov
ror
loop
mov
insb
sbb
lea
jmp
in
xlat
cwtl
flds
lea
arpl
pop
jb
xchg
adc
mov
xor
pop
ret
sub
sub
ficomps
clc
mov
mov
fsub
jnp
ja
xchg
arpl
inc
cmp
dec
jle
shll
bound
jl
out
ljmp
repnz
je
test
sub
jmp
in
inc
in
mov
out
std
sbb
les
mov
aam
js
mov
adc
sbb
jbe
adc
adc
jecxz
adc
incl
lods
jmp
mov
cmpsb
push
stos
pop
add
repz
loopne
mov
insb
xchg
loopne
mov
outsb
add
sub
and
mov
push
loopne
and
loopne
pop
nop
push
clc
add
jecxz
fs
hlt
popa
in
ret
sbb
push
movsb
out
ja
divl
gs
xchg
rclb
test
sbb
pop
sahf
jne
iret
dec
cwtl
movsl
jle
or
movsb
es
cmpl
arpl
call
jb
push
mov
inc
popf
push
repz
das
fcmovnu
rcll
xorb
add
dec
push
in
sar
fiaddl
pop
repz
push
xor
xchg
movsb
lret
setno
sbb
xchg
rorb
pop
cli
push
pop
inc
mov
shll
sbb
popa
sbb
inc
mov
stos
stc
sbb
sub
adc
fisttpl
mov
popa
imull
jge
sbb
add
popf
push
loope
and
mov
stos
sub
clc
cmp
aam
push
adc
cwtl
shll
mov
mov
hlt
repnz
push
in
xlat
mov
test
sbb
arpl
dec
aas
stos
mov
sarl
xchg
jle
and
rcll
lock
xchg
mov
xor
lods
sarl
xor
xorl
popf
xchg
dec
dec
adc
dec
push
sbb
icebp
lea
xchg
sbb
adc
stos
sbbl
xchg
lock
jne
ficoml
incl
or
loopne
stos
adc
loope
ficomps
loop
clc
hlt
mov
and
clc
pop
adc
add
andl
js
out
imul
pop
xor
mov
popf
push
fildl
push
iret
jmp
adc
rorb
or
fucom
test
lock
lea
cmp
test
or
jl
adc
jns
sahf
mov
insl
jbe
sbb
mov
jle
mov
popf
faddl
push
cmc
mov
mov
popa
sbb
xor
pop
loope
hlt
sti
mov
inc
jl
cmc
xorl
je
iret
fildll
pop
dec
inc
pop
jl
sbb
out
out
dec
mov
mov
enter
lahf
add
cmp
int3
gs
pushl
jns
xorb
jmp
add
sti
stos
fbstp
out
scas
xchg
cmc
int
inc
and
leave
sub
jmp
inc
xor
add
in
mov
and
and
fcmovb
ss
clc
add
scas
push
or
and
mov
pop
lods
mov
call
sbb
or
outsl
test
jno
push
push
jle
iret
pop
push
faddp
or
lahf
add
stos
xchg
push
or
mov
mov
test
lods
jg
stos
ficompl
and
outsb
fidivrl
mov
sub
cltd
es
leave
and
mov
mov
mov
ja
and
das
dec
and
fdivrs
mov
test
pop
jmp
stos
mov
sub
frstor
lock
cmpsl
mov
mov
adc
stos
push
push
cld
push
pop
xor
sbb
int3
mov
fistps
lods
mov
mov
and
dec
add
cmp
addl
mov
inc
sbb
shlb
mov
cs
adc
sbb
lahf
jp
dec
daa
adc
dec
dec
je
pmaxsw
adc
popa
adc
mov
pop
xchg
fcoms
push
and
jno
ljmp
add
sbb
scas
inc
mov
bsr
sbb
popf
ret
adc
leave
sub
out
add
cmp
dec
mov
pop
mov
jmp
sbb
xchg
scas
jnp
mov
ss
lock
pop
hlt
mov
flds
xchg
sub
and
mov
xor
popa
loop
pop
andl
xorb
cmp
cli
or
mov
mov
push
mov
pusha
xchg
jmp
dec
push
popa
data16
lock
and
xor
dec
test
mov
mov
push
inc
sub
dec
sahf
in
dec
leave
daa
ljmp
cmp
int
inc
xchg
pop
mov
pop
ret
push
xchg
xchg
pushw
and
lods
mov
imul
push
adc
in
jle
data16
shll
mov
mov
dec
dec
and
imul
mov
pop
movsb
mov
fisubrl
pop
inc
mov
cltd
pop
push
and
jnp
mov
lods
xchg
stos
sub
ja
cli
ret
lods
pop
mov
std
mov
and
cmp
cmp
outsb
pop
sub
sub
insl
ja
adc
cli
loop
push
lock
insl
cmp
testb
jne
insl
outsb
pop
pushf
add
cltd
int
pop
push
rorb
push
and
leave
out
pop
les
insb
dec
and
push
sbb
push
cmc
or
in
inc
sub
cmp
aad
rorb
popa
in
adc
mov
dec
mov
ja
adc
ljmp
xchg
jle
movsl
cs
jns
jmp
xchg
push
and
js
sbb
scas
sbb
cmp
std
int
inc
pop
add
into
cmp
adc
adc
data16
and
push
aas
add
adc
out
js
or
dec
popa
sub
or
push
mov
lock
jo
xor
push
inc
add
movsb
jmp
dec
loop
dec
mov
fmuls
sahf
cltd
inc
sti
jg
cmpsb
fwait
inc
xchg
mov
int3
clc
pop
rolb
movsb
mov
xchg
stos
xchg
push
cmp
sbb
mov
cltd
sti
sub
jmp
lcall
push
inc
push
into
in
pop
lods
inc
push
clc
jge
lret
ss
xor
push
addl
jp
mov
roll
add
and
mov
movsb
xchg
out
cmp
stos
add
cmp
xchg
inc
inc
jns
mov
push
or
enter
dec
cmp
xchg
ret
mov
xor
pop
cmpsl
xchg
sarb
dec
push
ror
hlt
bound
sub
push
dec
dec
add
jecxz
mov
lods
add
shl
lea
sub
and
popa
mov
out
movsl
outsl
xor
xor
popa
or
int
outsb
pop
sbb
clc
jo
pusha
fstpl
outsl
push
shlb
xchg
jle
dec
ljmp
sub
stos
add
nop
inc
sub
sbb
cmpsl
mov
xor
je
mov
or
mov
fldl
je
popa
pop
jno
cld
jb
cwtl
xor
cmp
insl
je
movsl
insb
sub
mov
xchg
and
jo
icebp
mov
insb
inc
iret
std
mov
mov
fmull
mov
shll
dec
out
dec
outsl
fwait
add
mov
bound
push
outsb
xor
or
xchg
add
ljmp
jne
pop
mov
iret
xor
add
adc
sub
es
imul
mov
pop
dec
jne
negb
imul
mov
mov
push
bound
or
xchg
sti
test
jg
mov
gs
fisubrs
ds
loopne
gs
push
dec
in
push
mov
clc
fsincos
add
insb
jno
mov
arpl
sub
out
outsb
mov
cmc
pop
je
mov
rclb
add
cmp
out
xchg
sub
cltd
stos
jle
jae
icebp
icebp
jle
arpl
push
xlat
ds
iret
inc
outsl
dec
loopne
in
sbb
xchg
mov
movsb
cmp
push
add
je
aas
push
imul
adc
movsb
cmpsl
jmp
shlb
shll
jae
mov
loop
scas
pop
jle
js
push
lea
sarl
sub
ret
mov
cmp
ret
jle
mov
mov
ss
cs
mul
out
shll
dec
mov
mov
add
inc
dec
scas
mov
out
out
movsb
adc
cwtl
push
sbb
sub
out
xchg
cmp
or
es
scas
pop
lds
loopne
pop
inc
xchg
or
mov
pop
cmpsb
inc
cmp
cmp
xor
adc
jp
or
inc
dec
sbb
sbb
sub
out
push
mov
addr16
mov
mov
in
pop
iret
mov
xchg
cmp
pop
stc
xchg
mov
out
pushf
dec
push
xlat
notl
sti
inc
or
pop
dec
subb
mov
mov
popf
dec
add
xchg
lea
mov
loopne
inc
fnstcw
addr16
repz
test
inc
push
subb
push
hlt
vmptrld
mov
fs
xor
pop
out
aas
outsb
mov
xchg
dec
pop
in
pop
mov
pop
movsb
mov
in
mov
mov
pop
inc
inc
test
aad
sbb
mul
sbb
stos
mov
adc
jns
je
pop
push
lahf
lock
lods
pop
push
push
jns
sub
xor
pusha
jge
stos
int3
out
pop
imul
cli
loope
inc
lea
xchg
cmpsb
call
fadds
das
imul
adc
xorl
cld
and
xchg
cmp
stc
adc
lahf
ds
sbb
xor
mov
mov
jg
loop
dec
pop
mov
cmp
and
xchg
and
jp
push
add
add
dec
test
fbstp
cmpsl
cmpsb
inc
dec
lea
adc
ss
idivl
mov
push
lcall
shl
xchg
xor
mov
pop
push
lods
daa
push
int3
inc
outsl
pop
arpl
jbe
cmp
sbb
rorb
sbb
test
jb
mov
cmpsl
scas
sub
push
pusha
add
hlt
xor
mov
and
lahf
lods
push
test
mov
orb
in
xchg
mov
cmpsl
mov
mov
xor
fwait
out
repz
mov
jl
or
sbb
xchg
enter
push
jnp
repz
xchg
nop
out
xchg
popf
dec
mov
into
out
scas
lods
pop
cli
call
add
addb
xor
xchg
hlt
and
dec
insl
pmulhw
ja
int
xchg
mov
loop
fidivs
pushf
lretw
cmc
dec
pusha
sub
adc
insb
jbe
in
pop
add
sahf
dec
push
call
push
lret
add
jno
daa
insb
cltd
mov
scas
aad
pop
jl
mov
vandnps
or
sub
push
or
fimuls
and
sub
js
or
inc
ja
sub
cmp
outsl
push
sbb
adc
pushf
out
add
or
lock
sub
inc
dec
and
cmp
inc
sti
outsl
push
daa
jg
cmp
mov
adc
jp
add
mov
push
and
push
sub
mov
fmuls
call
lds
adc
cs
jmp
jae
test
mov
aas
in
mov
cltd
mov
or
fistl
add
push
mov
jg
mov
jno
in
bound
jl
jmp
add
inc
ror
cwtl
shrl
fadds
lds
or
mov
mov
adc
std
xchg
int3
jle
jae
inc
xor
sbb
pop
mov
cwtl
lock
les
jp
or
or
jno
mov
xchg
cmp
jne
jg
out
lock
lcall
push
ficomps
sub
mov
fldl
adc
daa
clc
gs
test
xor
jl
pushf
push
mov
aaa
int
dec
mov
and
pusha
cmpsb
cmp
and
jp
cmp
push
loopne
mov
and
dec
dec
xchg
fs
inc
jns
lea
adc
mov
out
rcrb
out
xor
sbb
inc
bound
stos
mov
pop
stc
mov
fwait
ds
jp
mov
mov
cli
sub
pop
icebp
or
or
mov
mov
js
hlt
sbb
mov
scas
std
mov
pop
pushf
push
mov
pop
lea
jno
imul
popa
mov
adc
in
iret
jl
loope
adc
nop
lahf
fsubr
in
into
fadd
int3
and
mov
stos
inc
dec
jae
mov
test
cltd
cmp
xchg
push
inc
xchg
add
inc
jmp
mov
and
mov
adc
outsb
xchg
xchg
mov
xor
sbb
aaa
lret
and
sbb
ret
fisubrl
lcall
and
scas
xchg
scas
sarb
rol
jecxz
call
aas
loopne
js
in
leave
adc
mov
mov
inc
or
decl
mov
cld
ljmp
sub
push
shlb
push
adc
fcomip
push
jecxz
test
test
es
repnz
push
std
sbbl
movsl
pop
scas
loopne
mov
stos
inc
sbb
xorb
cmp
daa
push
stc
mov
adcl
jo
stos
enter
sub
sahf
out
xchg
loope
pop
lea
mov
inc
sub
cs
iret
mov
test
push
cmp
cwtl
out
add
sbbl
into
add
cwtl
sbb
and
xchg
stc
mov
int3
inc
xor
cmp
cs
ret
cmpb
xor
pshufw
cli
inc
ss
cmc
shrb
lods
sbb
mov
cmp
movb
stos
mov
popf
out
mov
stc
js
xchg
jae
xchg
mov
or
mov
mov
js
ret
test
repnz
or
cmp
lret
jb
sbb
mov
addr16
inc
loopne
xchg
dec
xchg
push
scas
stos
lret
fisttpll
dec
jecxz
xchg
cmp
jbe
popf
gs
ja
mov
enter
gs
or
push
aad
out
jne
sbb
xchg
xchg
pop
and
fldt
mov
lret
popa
xor
in
out
pop
repz
sbb
add
dec
stos
jge
cmpsl
mov
je
add
fdivrs
jg
cmp
lods
iret
xor
sarb
fildll
push
or
orl
push
mov
dec
rsqrtps
sbb
stc
sbbb
sub
jmp
testb
jae
jp
and
sbb
mov
sub
jl
push
sahf
adc
data16
imulb
or
aad
or
ret
xlat
fcompl
neg
push
pusha
dec
dec
rcr
mov
inc
lock
scas
fwait
or
cmp
push
add
cwtl
punpcklbw
dec
out
inc
push
inc
jge
sub
out
in
xchg
jne
test
repnz
pop
das
and
repz
rcrb
lret
icebp
mov
loop
inc
popa
das
es
cmp
adc
and
cs
push
gs
into
xchg
or
dec
aad
and
enter
mov
mov
lods
adc
loope
cltd
and
add
sub
cs
jae
jne
sbb
push
pop
pushf
ljmp
addr16
push
pop
ficomps
into
int3
ja
pop
lahf
sbbl
into
jb
jo
mov
lea
pop
sub
cmp
movsl
dec
sahf
jb
xorl
pushl
xchg
push
xor
repz
ds
cmpsb
mov
lahf
or
outsb
mov
stos
dec
ficoms
push
mov
ljmp
adc
xchg
ja
add
fdivrs
push
mov
mov
cs
and
xchg
rcr
fwait
jl
pop
cmp
sbb
and
cmp
jo
shrb
jmp
jmp
pop
jp
fsubrl
mov
inc
fwait
jo
push
hlt
test
imul
sub
lahf
cmp
sub
add
xchg
mov
or
xor
pushf
push
mov
jle
hlt
xor
sbb
lock
int
add
push
pop
inc
push
clc
ror
mov
es
test
mov
sbb
push
mov
daa
in
sub
loope
cmc
xchg
push
div
and
dec
lock
adc
ret
jns
std
jle
sbb
pop
xor
add
sti
call
fldl
ret
ss
fisttpll
jbe
sti
test
leave
cld
in
push
sbb
mov
inc
mov
ja
pop
std
push
shll
call
xchg
mov
stc
into
or
insb
fnstenv
sub
cld
mov
sbb
popa
loop
insb
dec
rclb
and
shlb
sarl
dec
mov
lods
and
fstps
jl
sti
mov
cmp
filds
push
or
jo
or
or
sbb
lods
sti
xchg
int
mov
loopne
aad
ret
adc
mov
test
aaa
jecxz
dec
scas
mov
push
das
rcll
pop
fsubrl
sbb
repnz
push
mov
jbe
dec
fdivs
adc
mov
pop
cmpsl
ret
mov
movsb
out
push
xchg
ret
add
stos
ljmp
leave
negb
movsl
lret
push
adc
in
and
test
push
sub
fisttps
or
sbb
inc
sub
lret
inc
data16
aad
push
lods
out
xor
aas
and
add
scas
jmp
es
jbe
or
push
xchg
imul
fwait
dec
adc
loop
mov
push
mov
xlat
movsb
mov
rcrb
pop
out
dec
xchg
loope
mov
ret
push
outsb
dec
sub
cmp
enter
jbe
je
lcall
mov
or
ja
js
rcll
inc
cli
and
xchg
xchg
outsl
xor
int3
jg
dec
out
pop
popf
cmp
aad
lds
jnp
sarl
or
jae
out
inc
ja
xor
loopne
cmpsb
subl
xchg
int3
mov
mov
mov
xchg
pushf
jle
push
js
xor
lds
pop
sub
sbb
sub
push
into
jmp
iret
es
aam
fstps
jmp
add
lods
mov
push
scas
and
outsb
or
out
push
sbbl
push
pop
fcmovnbe
sbb
out
in
loopne
sbb
jp
mov
jno
or
leave
jl
push
dec
lahf
mov
mov
cmp
andb
xchg
mov
mov
xor
testb
out
xchg
sub
add
sub
jne
imul
outsb
cmp
cmc
sti
lcall
xchg
mov
inc
fs
imul
push
and
in
decb
addb
loope
rcrb
ss
arpl
in
jg
fnstcw
std
fbstp
arpl
pop
push
fisubrs
out
mov
aad
call
aad
popf
push
mov
ret
cli
inc
inc
inc
xor
push
sbb
mov
cmp
jmp
push
mov
or
call
xlat
loope
int3
outsl
loope
jns
inc
inc
sar
mov
fdivl
das
inc
push
push
outsl
shlb
aad
dec
sbb
push
add
out
scas
mov
push
or
add
inc
inc
mov
inc
or
dec
mov
fisttps
jg
push
lods
jp
xchg
movl
int3
cmp
je
xchg
out
inc
mov
lcall
lret
ret
imul
repnz
push
push
clc
int
sub
insl
jb
sbb
mov
les
xchg
iret
daa
es
rclb
sub
add
js
out
lds
and
loop
fistpll
cmp
ja
dec
dec
shlb
gs
jae
mov
jno
add
fcoms
mov
sbb
mov
lea
mov
and
sub
repz
sub
movsl
clc
pushf
pop
adc
or
or
cmpsb
pop
aam
mov
hlt
ret
and
jmp
fscale
pusha
inc
push
stos
inc
flds
loopne
xchg
xchg
lods
lods
sbb
jp
xchg
popf
repnz
jb
inc
movsl
lock
mov
sub
mov
adc
lret
std
mov
push
sub
mov
aad
cmpsb
cmc
and
je
pop
fmuls
mov
cmpl
xchg
mov
mov
lea
cmpl
and
into
lret
daa
jmp
sub
lods
cwtl
add
xor
ret
je
int3
sub
and
ss
leave
sbb
xor
sbb
addr16
mov
adc
sub
xchg
mov
xor
loopne
test
xchg
mov
int3
insb
push
push
xor
call
fucomi
sti
dec
push
xchg
in
rcll
sub
test
dec
call
and
mov
mov
repnz
adc
mov
js
and
insl
lea
xlat
sbb
cltd
pop
repnz
inc
push
lds
pop
xlat
mov
xchg
lcall
mov
aam
push
aas
push
mov
test
adc
aam
sbbb
mov
push
ljmp
fs
cltd
aas
mov
mov
cmp
mov
add
popa
cmpb
lahf
inc
mov
mov
icebp
xchg
out
in
push
sub
dec
and
mov
adc
out
jle
mov
mov
jle
fld
jns
add
inc
inc
cmc
loope
inc
xchg
cli
rcr
js
cmp
push
cltd
loop
in
xsave
mov
fwait
cmpsb
mov
lret
jl
das
and
out
leave
sbb
dec
cmp
fstpt
mov
xchg
cltd
push
sub
inc
xor
or
dec
clc
sbb
int
jo
push
ret
fbstp
xor
adc
ffreep
add
bound
inc
lods
and
and
sbb
stc
js
inc
push
jle
jge
test
in
mov
lahf
pop
mov
push
dec
xor
xor
shrl
test
push
sbb
xlat
inc
ret
add
xchg
push
popa
mov
hlt
mov
aam
fstps
dec
xchg
iret
pop
imul
out
sub
into
add
ja
mov
mov
rorl
das
js
mov
insl
dec
sti
in
adc
jp
insl
ret
in
xor
mov
icebp
cmp
jmp
and
mov
gs
cmp
out
sub
inc
rclb
nop
mov
push
ud0
mov
shll
adc
and
inc
ret
fbstp
jecxz
daa
stos
jo
out
movsl
ret
daa
xor
stc
add
push
orb
jp
mov
aaa
sub
cmpsl
sbb
or
loopne
lcall
fnstenv
loopne
out
pop
leave
fs
rorl
sbb
mov
cmpb
pushf
cmp
pusha
out
pushf
mov
or
mov
push
and
cmc
sbb
fisttpll
loope
ja
loopne
adc
arpl
dec
test
adc
mov
repz
pop
cltd
out
cmp
imul
sti
dec
hlt
jg
cmc
xchg
ja
pusha
outsl
pop
adc
push
inc
sbb
js
or
dec
ljmp
sub
cmp
cmpsb
loop
cmpsb
push
js
aad
cmp
loop
and
dec
adc
mov
arpl
xchg
loopne
icebp
push
mov
xor
add
adc
xor
sub
jns
mov
xlat
fs
dec
fwait
dec
in
decl
movsl
jno
aad
mov
and
cmpl
aam
add
lods
xlat
xchg
rcl
jbe
add
outsb
sbb
loope
imul
sarl
cli
notb
fwait
in
fst
dec
add
inc
pusha
mov
cmp
enter
adc
jno
xor
nop
fcoml
dec
or
push
cmpsb
cli
shll
mov
lahf
jns
xchg
xor
mov
repz
mov
mov
cmp
cld
in
sub
int
jns
dec
jg
xchg
jae
mov
mov
cld
mull
inc
mov
in
jp
inc
sti
xchg
addb
inc
test
loop
jle
in
imull
and
lahf
dec
insb
and
shll
mov
scas
pop
sbb
cmp
add
mov
ret
aad
mov
dec
or
xor
pop
cli
in
jmp
cltd
cltd
xchg
imul
js
aaa
cmp
lods
aas
push
cmp
mov
jae
xchg
rolb
inc
mov
and
add
daa
scas
adc
lret
cmp
xorb
pcmpgtb
imul
pop
fucomip
cltd
stos
mov
das
js
mov
bound
push
or
pop
fstps
pop
neg
xchg
xchg
mov
push
movsl
iret
add
xchg
mov
xor
fiadds
jb
stc
pop
sti
gs
sbb
sbb
pusha
push
push
inc
xor
cmp
fldl
aaa
insb
rcrl
ljmp
sar
mov
clc
push
xor
mov
jmp
addl
mov
sub
jno
arpl
fwait
rcrl
push
add
sub
fsubrl
mov
fld
lret
imul
jl
xlat
test
icebp
inc
es
repnz
dec
incb
ds
movl
fwait
xor
jns
push
idivb
xchg
pop
insb
scas
mov
jns
pushf
mov
call
xchg
xor
mov
sub
jge
roll
add
mov
pop
mov
ja
ss
adc
decl
adc
mov
pop
inc
sarb
jns
out
xlat
std
sbb
dec
mov
popf
add
add
lds
and
arpl
fcomp
push
dec
addb
or
adc
sbb
mov
movb
push
sti
jns
xchg
mov
int3
adc
fisubs
lcall
sub
add
xor
add
pusha
add
add
add
add
jns
add
jns
add
jge
add
xchg
add
sbbb
mov
add
mov
add
mov
add
xchg
mov
add
cltd
mov
add
lahf
mov
add
xchg
movb
xchg
movb
xchg
rolb
lcall
or
into
add
popf
roll
add
aam
or
fiaddl
adc
add
movsl
fadds
sbb
into
add
mov
ret
movsl
movb
mov
leave
add
stos
iret
add
cmpsb
aad
sub
fiadds
sub
fiadds
aas
scas
roll
cmp
aam
and
fiadds
sub
fiadds
cmp
fiadds
cmp
out
daa
mov
ljmp
mov
add
into
add
int3
add
xlat
add
fiadds
dec
mov
add
add
fiadds
push
mov
fiadds
arpl
loop
inc
mov
add
loope
dec
mov
in
dec
ret
out
add
loope
push
shr
push
ret
in
add
ljmp
into
out
add
in
add
add
hlt
add
cli
add
add
clc
add
add
add
in
add
in
add
ljmp
int
add
ljmp
fldz
add
in
add
out
add
out
add
repnz
incl
arpl
incl
arpl
testl
imul
add
icebp
add
icebp
add
cli
add
incl
data16
add
stc
add
incl
imul
cli
add
incl
jbe
repnz
lock
repz
testl
jge
lock
cli
add
incb
je
incl
jno
std
add
incb
jle
incl
jns
incl
jae
hlt
add
testb
loopne
add
incb
jl
incl
jnp
incl
jge
incl
jg
incl
test
out
adc
add
in
add
out
add
repnz
lock
f2xm1
add
xlat
testl
pushf
fcomi
add
cli
add
fucomip
add
out
add
out
add
jmp
incl
test
incl
mov
incl
mov
incl
xchg
loopne
add
out
testl
xchg
jmp
incl
fwait
jmp
incl
pushf
out
incl
test
std
add
lock
mov
incl
mov
incl
cmc
incb
mov
incl
xchg
icebp
incl
nop
idiv
add
incb
xchg
sti
std
add
std
incb
pushf
incl
lods
out
add
out
add
jecxz
add
in
clc
add
icebp
incl
movsl
idiv
add
incl
movsl
incl
lods
sti
incl
test
incl
lods
incl
mov
cli
add
idiv
add
idiv
add
incl
mov
std
incb
mov
jmp
add
out
testl
into
out
incl
out
incl
ret
add
lock
add
cmc
incl
sar
add
stc
incl
sar
add
std
incb
leave
incb
into
incl
repz
fcomi
cld
add
cli
incl
sti
incl
sar
incl
incb
fdivr
incl
out
incl
out
idiv
add
clc
std
add
cli
incl
loope
incb
out
incl
out
sti
incl
jmp
incl
cmc
incl
incl
fcmovbe
incl
incl
adc
add
add
and
lahf
and
push
push
add
add
add
sub
je
dec
cmp
add
add
add
das
je
push
jne
push
xor
adc
add
add
add
das
movb
jne
jne
jno
xor
sub
add
add
add
sub
addb
xorl
and
add
add
add
push
sub
addb
addb
mov
pop
sub
prefetch
add
cmp
xchg
addb
mov
xorb
dec
inc
xor
add
sbb
mov
mov
movsb
cmpsb
mov
mov
push
add
add
add
sub
mov
mov
mov
cmpsl
test
mov
push
dec
jp
movsb
movsb
movsb
movsb
test
cmpsl
cmpsl
test
cmpsl
test
mov
test
test
cmpsb
cmpsl
cmpsb
orl
add
push
and
mov
cmpsl
test
test
stos
stos
stos
test
stos
cmpsl
cmpsl
cmpsl
test
mov
test
cmpsl
mov
add
add
sub
mov
test
test
stos
mov
mov
mov
stos
test
push
add
add
sub
mov
mov
mov
mov
mov
push
add
add
cs
mov
mov
mov
mov
mov
mov
add
xor
mov
mov
mov
mov
mov
jb
add
add
push
push
push
pop
ffree
ret
rol
sarl
sarl
mov
jne
or
add
push
push
popa
out
ret
ret
rol
rol
ret
rol
ret
ret
ret
mov
add
add
push
pop
dec
lock
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
iret
iret
iret
iret
movsb
scas
and
add
sbb
ds
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
rol
rol
rol
rol
rol
ret
iret
ret
iret
iret
mov
add
xchg
jle
out
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sarb
push
sahf
jnp
imul
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcr
fcmovu
ror
mov
cltd
xor
add
push
lcall
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
mov
repnz
add
push
pushf
push
inc
loope
stc
lret
xlat
xlat
out
call
fstp
fstp
fstp
fstp
fstp
int3
push
bound
add
mov
sbb
fwait
lods
lods
lods
ljmp
jmp
jmp
jmp
xchg
or
push
in
mov
outsb
fs
bound
fdivrp
icebp
lock
lock
icebp
icebp
icebp
icebp
jmp
lock
sti
les
add
add
add
in
int
sarb
outsl
test
sti
repnz
idiv
div
div
repnz
in
adc
push
cmc
rol
ret
ret
ret
ret
ret
ret
push
sbb
cld
cld
cld
cld
clc
sti
cld
sti
clc
clc
clc
clc
cli
clc
push
cld
push
add
add
add
repz
ret
ret
iret
ret
ret
ret
ret
ret
ret
rol
sbb
gs
loopne
std
std
cld
in
cmc
cld
sti
sti
push
std
sbb
push
repz
ret
iret
ret
ret
ret
ret
ret
ret
ret
ret
rol
xchg
outsl
push
dec
cmp
sub
xchg
xchg
leave
stc
std
std
in
std
std
add
add
add
xchg
test
ret
ret
ret
ret
ret
ret
ret
ret
shl
ljmp
addr16
xor
push
inc
sbb
sbb
add
push
repz
ret
ret
ret
notb
enter
lods
lods
jmp
test
add
pusha
sti
ret
ret
ret
fld
ret
ret
ret
icebp
xchg
and
add
push
push
push
pop
pop
pop
pop
pusha
mov
sbb
add
hlt
std
std
clc
clc
jmp
fucompp
les
push
push
push
push
push
push
push
push
add
add
sub
lea
push
add
push
push
push
push
push
push
pop
push
adc
incl
incl
incl
incl
incl
incl
incl
incl
incl
jg
incl
pop
incl
add
test
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jg
jle
add
add
jg
jle
add
add
jg
jle
add
add
jg
jle
add
add
jg
jle
add
add
jg
jle
add
add
jg
jle
add
add
aas
test
add
add
aas
test
add
add
aas
test
add
add
aas
test
add
add
aas
test
add
add
aas
test
add
add
aas
test
add
add
aas
test
add
add
incl
add
incl
clc
pop
incl
incl
incl
incl
incl
incl
incl
incl
incl
add
add
xor
add
add
add
