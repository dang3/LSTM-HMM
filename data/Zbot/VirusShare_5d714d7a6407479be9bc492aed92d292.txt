int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
int3
movsb
inc
call
stos
mov
arpl
or
xchg
fiadds
adc
push
inc
fwait
pop
fcomps
ja
mov
sar
shl
sbb
dec
lahf
pushf
cwtl
jno
mov
xlat
lret
xlat
in
je
sbb
xchg
les
add
je
push
mov
lock
fsts
test
sub
mov
sbb
icebp
ja
inc
jb
filds
jae
stos
pop
or
dec
push
lahf
pop
xor
jne
push
mov
inc
add
lds
ret
popa
jno
scas
cmpsl
push
jno,pt
push
lods
enter
xor
test
mov
popf
lods
add
push
js
xor
add
rorl
cmp
in
mov
and
jno
xor
dec
nopl
lretw
xchg
insl
pop
and
mov
fisubrl
dec
add
or
mov
test
test
mov
cmc
lock
push
pop
jmp
sub
roll
lret
fisubrs
icebp
out
cmp
dec
int3
shl
in
jmp
test
jae
pusha
push
ljmp
inc
mov
rorb
iret
repnz
sahf
sbb
daa
dec
inc
call
loopne
ficomps
xor
xchg
mov
fwait
push
out
incb
mov
cvttps2pi
clc
mov
xchg
nop
or
mov
xchg
dec
out
pusha
les
les
aam
jg
jp
pop
das
xor
ret
jmp
ljmp
scas
mov
mov
ds
in
lahf
sahf
test
cmp
push
iret
pushf
add
or
into
sub
cwtl
fldenv
ja
ja
xor
push
mov
in
and
lret
and
leave
stos
jne
adc
test
and
xchg
dec
in
mov
jbe
ret
inc
or
test
inc
ljmp
push
pop
push
sub
or
jecxz
ss
jl
add
xor
sti
push
cmp
jge
adc
lret
pop
test
push
adc
fsubp
mov
jmp
cmp
imul
test
mov
push
adc
nop
mov
mov
hlt
add
shll
push
mov
or
pop
int3
aam
mov
pop
aas
sub
jnp
sar
test
shrl
rep
out
mov
popf
cmp
shlb
or
adc
in
jle
popf
fistpl
js
jb
push
enter
mov
notl
inc
nop
xchg
int3
add
lahf
in
into
aad
xchg
daa
push
xorl
dec
movsl
notl
psrad
mov
jmp
outsl
add
push
icebp
outsb
and
xchg
fmull
ja
scas
mov
jno
push
inc
insl
jns
mov
leave
pop
pop
sbbb
push
stc
sbb
popf
ret
lahf
xor
or
xor
or
stos
mov
movb
adc
popa
adc
cmpsb
cmpsb
mov
sbb
ja
cmp
es
into
sub
daa
or
lods
push
ret
fstpt
data16
push
push
sbb
jle
sti
movsb
lods
jns
testl
fbld
sbb
outsb
popf
mov
icebp
dec
lcall
outsl
adc
pop
leave
adc
pop
in
cmpsl
pop
mov
je
cld
add
lds
push
xor
lcall
lret
inc
cmpb
popf
lret
adc
inc
xchg
mov
mov
xchg
dec
mov
cmp
push
lock
out
inc
rorl
or
push
adc
divl
mov
jp
cmp
dec
out
loop
push
stos
adc
cmpsb
js
xchg
inc
movsb
rolb
and
call
jle
jae
push
sub
adc
or
xchg
je
mov
jge
push
mov
sti
adc
jecxz
adc
fidivl
fadds
test
jge
test
sarl
sbb
out
xor
cmp
and
mov
rcll
inc
jnp
cmp
adc
jo
mov
fs
gs
adc
and
ret
pusha
and
push
leave
push
inc
cli
notb
sbb
js
cmpsb
pop
cltd
mov
mov
sahf
cmpsb
stos
sub
adc
lods
gs
xlat
ret
dec
push
out
mov
pop
js
mov
mov
sub
fwait
pop
lock
xor
mov
push
cmp
jbe
pop
pop
ret
int3
push
mov
add
cmpsl
filds
add
add
add
mov
loop
add
add
add
mov
add
add
mov
mov
add
add
movsb
movsl
mov
add
add
add
enter
add
fisubs
add
add
add
add
add
add
add
add
movsb
fsubl
movsl
mov
add
fnsave
add
loope
fistpll
add
add
mov
fnsave
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movb
xor
mov
mov
movl
movzbl
mov
lea
mov
mov
sub
cmp
jbe
movzbl
mov
lea
mov
mov
mov
lea
movzbl
cmp
jne
movzbl
mov
lea
mov
movzbl
mov
lea
mov
lea
dec
sub
add
mov
dec
mov
movl
mov
mov
lea
mov
mov
sub
cmp
jbe
movzwl
mov
lea
mov
mov
mov
mov
movzbl
mov
lea
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
movzbl
mov
lea
mov
movzbl
cmp
jne
jmp
mov
mov
lea
movzbl
cmp
jne
movzbl
mov
lea
mov
mov
cmp
jne
jmp
movzbl
mov
lea
mov
jmp
movzbl
mov
lea
mov
mov
sub
mov
mov
imul
cmp
je
movzbl
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
mov
jmp
movzbl
mov
lea
mov
movzbl
imul
cmp
je
movzbl
mov
lea
mov
jmp
movzbl
mov
lea
mov
mov
mov
lea
mov
mov
sub
cmp
jbe
movzwl
mov
lea
mov
movzbl
mov
lea
mov
movzbl
mov
lea
cmp
jb
mov
add
movzbl
add
mov
mov
add
movzwl
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
call
mov
add
mov
movl
lea
push
lea
call
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
lea
mov
mov
add
mov
add
mov
movzbl
mov
lea
mov
mov
sub
mov
movzbl
mov
lea
mov
mov
sub
mov
movzbl
mov
lea
mov
mov
add
mov
mov
movzbl
movzbl
lea
mov
mov
add
mov
add
mov
mov
mov
lea
mov
mov
sub
mov
movzbl
mov
lea
mov
mov
add
mov
mov
mov
lea
mov
mov
add
mov
mov
movzbl
mov
lea
mov
jmp
lea
call
lea
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
lea
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
call
movl
lea
call
movzbl
mov
lea
mov
push
lea
call
movzwl
mov
imul
cmp
je
movzbl
mov
lea
mov
jmp
movzwl
mov
lea
mov
movzbl
mov
lea
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
mov
lea
mov
movzwl
mov
lea
cmp
jb
mov
add
movzwl
add
mov
mov
add
sub
movzbl
add
mov
push
sub
mov
lea
push
call
mov
sub
push
call
add
movzbl
mov
lea
mov
lea
push
lea
call
mov
mov
mov
lea
mov
jmp
movzwl
mov
imul
cmp
je
movzbl
mov
lea
mov
jmp
movzwl
mov
lea
mov
movzbl
mov
lea
mov
mov
push
mov
push
call
add
movzwl
mov
lea
cmp
jb
mov
add
movzwl
add
mov
mov
mov
lea
call
lea
call
lea
call
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
lea
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
lea
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
call
lea
call
movb
mov
xor
lea
rep
stos
push
lea
call
movzwl
movzbl
lea
mov
movzwl
movzbl
lea
mov
mov
push
lea
push
push
call
lea
push
lea
push
lea
push
call
add
push
lea
call
lea
call
sub
mov
lea
push
call
mov
push
call
add
mov
movzwl
add
movzbl
sub
cltd
add
adc
mov
mov
mov
mov
movzbl
movzbl
sub
mov
mov
add
mov
adc
mov
xor
add
adc
mov
movzbl
movzbl
add
mov
movzbl
mov
lea
xor
mov
mov
movl
lea
call
lea
call
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
mov
call
mov
call
push
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
mov
mov
push
call
mov
call
push
push
mov
call
mov
push
push
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
mov
call
mov
call
push
push
mov
call
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
push
mov
call
push
mov
mov
push
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
cmp
jae
mov
call
mov
call
sub
mov
mov
cmp
jae
mov
mov
mov
cmp
jne
mov
push
mov
add
push
mov
call
mov
push
push
mov
call
jmp
push
mov
push
mov
call
movzbl
test
je
mov
push
mov
call
add
push
mov
call
push
call
add
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
call
add
push
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
cmp
jae
mov
call
mov
mov
sub
cmp
jae
mov
mov
sub
mov
cmpl
jne
movl
jmp
mov
cmp
jae
mov
mov
jmp
mov
mov
mov
push
mov
push
mov
call
add
push
call
add
mov
mov
mov
cmpl
je
mov
mov
jmp
mov
cmp
jae
movl
jmp
mov
xor
cmp
setne
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movzbl
test
jne
jmp
mov
cmpl
jb
mov
mov
mov
cmpl
jbe
mov
push
mov
push
mov
add
push
call
add
mov
mov
add
push
mov
push
mov
call
mov
movl
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
jb
mov
mov
mov
jmp
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
call
movzbl
test
je
mov
push
mov
call
mov
sub
push
mov
push
mov
call
jmp
push
mov
push
mov
call
movzbl
test
je
mov
push
mov
push
mov
call
push
call
add
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
cmp
jae
mov
call
mov
mov
sub
cmp
jae
mov
mov
sub
mov
cmpl
jbe
mov
mov
sub
sub
push
mov
call
add
add
push
mov
call
add
push
call
add
mov
mov
sub
mov
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movb
mov
mov
mov
lea
push
mov
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
cmp
jae
mov
call
mov
mov
cmp
jae
mov
mov
push
mov
push
mov
call
jmp
movzbl
test
je
cmpl
jae
mov
mov
cmp
jae
mov
mov
jmp
mov
mov
mov
mov
push
push
mov
call
jmp
cmpl
jne
push
mov
call
xor
cmp
sbb
neg
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmpl
jb
mov
mov
mov
jmp
mov
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
cmpl
ja
movl
jmp
mov
sub
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
sub
push
push
push
mov
mov
mov
or
mov
mov
call
cmp
jae
mov
mov
jmp
mov
xor
mov
div
mov
mov
shr
cmp
jae
mov
call
mov
mov
shr
sub
mov
cmp
ja
mov
mov
shr
mov
add
mov
movl
mov
add
push
mov
call
mov
jmp
mov
mov
mov
movb
mov
add
push
mov
call
mov
jmp
push
push
mov
call
push
push
call
movl
mov
ret
movl
cmpl
jbe
mov
push
mov
call
push
mov
push
call
add
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
cmp
jb
mov
call
mov
add
cmp
ja
xor
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
movl
cmpl
jbe
mov
mov
jmp
movl
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
mov
push
lea
call
mov
call
push
mov
call
lea
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
push
call
add
push
mov
push
mov
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
call
movzbl
test
je
mov
push
mov
call
mov
sub
push
mov
push
mov
call
jmp
mov
or
sub
cmp
ja
mov
call
cmpl
jbe
mov
mov
add
mov
push
mov
push
mov
call
movzbl
test
je
mov
push
mov
push
mov
call
mov
add
push
call
add
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
cmp
jae
mov
call
mov
call
sub
mov
mov
cmp
jae
mov
mov
mov
or
sub
cmp
ja
mov
call
cmpl
jbe
mov
mov
add
mov
push
mov
push
mov
call
movzbl
test
je
mov
push
mov
call
add
push
mov
call
mov
add
push
call
add
mov
push
mov
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
call
push
push
mov
mov
call
pushl
andl
lea
movl
call
mov
mov
pop
mov
leave
ret
cmpl
jb
mov
ret
lea
ret
push
mov
push
push
lea
movl
call
mov
pop
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
jmp
push
pushl
mov
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
movl
jmp
mov
call
sub
push
lea
call
andl
lea
push
lea
call
push
lea
push
movl
call
int3
mov
call
push
push
push
mov
mov
push
mov
call
andl
add
push
lea
movl
call
mov
pop
mov
pop
mov
leave
ret
push
pushl
mov
call
movl
mov
pop
ret
mov
call
sub
push
lea
call
andl
lea
push
lea
call
push
lea
push
movl
call
int3
push
pushl
mov
call
movl
mov
pop
ret
push
mov
jmp
push
call
test
pop
jne
call
push
call
test
pop
je
pop
ret
push
lea
push
mov
call
movl
mov
pop
ret
movl
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
push
mov
sub
testb
push
mov
jne
orl
lea
push
mov
movl
call
push
mov
call
pop
push
lea
call
push
lea
push
mov
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jecxz
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
xor
inc
add
ss
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pushf
ss
add
ss
add
ss
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmp
inc
add
add
add
add
add
add
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwtl
aaa
inc
add
aaa
inc
add
aaa
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
cmp
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jae
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
cmp
xor
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
int3
cmp
aam
inc
add
cmp
in
inc
add
cmp
hlt
cmp
cld
cmp
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
add
cmp
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
jmp
push
mov
push
push
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
pop
leave
ret
pop
pop
xchg
jmp
pop
pop
xchg
jmp
pop
pop
xchg
jmp
push
mov
push
push
push
push
push
mov
mov
movl
push
pushl
pushl
pushl
call
mov
mov
and
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
cld
mov
xor
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
mov
mov
pop
ret
mov
pushl
pushl
push
pushl
call
add
ret
cld
mov
mov
cmp
je
mov
orl
xor
inc
ret
push
push
pushl
pushl
push
pushl
pushl
pushl
call
add
ret
push
mov
sub
push
cmpl
jne
mov
mov
mov
xor
inc
jmp
andl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
andl
andl
mov
mov
mov
mov
lea
mov
movl
mov
mov
mov
mov
lea
push
mov
pushl
call
pop
pop
andl
cmpl
je
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
leave
ret
push
mov
push
push
cld
mov
mov
cmp
je
mov
mov
or
mov
mov
xor
inc
jmp
mov
mov
and
je
mov
movl
xor
inc
jmp
push
mov
pushl
mov
pushl
mov
pushl
push
pushl
mov
pushl
pushl
call
add
mov
cmpl
jne
pushl
pushl
call
push
push
push
push
push
lea
push
push
call
add
mov
mov
mov
mov
jmp
xor
inc
pop
leave
ret
push
mov
push
cmpl
push
push
push
mov
mov
mov
mov
mov
mov
jl
cmp
jne
call
mov
dec
lea
lea
cmp
jge
cmp
jle
cmp
jne
mov
decl
mov
mov
cmpl
jge
mov
mov
inc
mov
mov
mov
cmp
ja
cmp
jbe
call
pop
lea
pop
lea
pop
leave
ret
mov
mov
mov
mov
mov
mov
ret
mov
jmp
mov
cmp
je
mov
test
jne
inc
ret
xor
ret
mov
mov
cmp
jne
mov
mov
ret
mov
add
jmp
mov
cmp
je
mov
lea
cmpl
jne
jmp
mov
mov
ret
push
mov
sub
mov
andl
mov
mov
mov
mov
mov
inc
movl
mov
mov
mov
mov
lea
mov
pushl
push
pushl
call
mov
mov
mov
mov
leave
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
sub
mov
push
push
push
pop
mov
lea
rep
mov
mov
mov
lea
push
pushl
pushl
pushl
call
pop
pop
leave
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
cmpl
jne
call
push
call
push
call
pop
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
movl
mov
test
je
push
call
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
add
push
add
push
call
neg
pop
sbb
pop
inc
ret
mov
add
push
add
push
call
neg
pop
sbb
pop
neg
ret
mov
add
push
add
push
call
pop
pop
xor
test
setg
mov
ret
lea
ret
mov
movl
ret
mov
ret
mov
andl
andl
movl
ret
push
push
mov
mov
movl
pushl
call
inc
push
call
test
pop
pop
mov
je
pushl
push
call
pop
pop
pop
movl
mov
pop
ret
push
mov
push
mov
movl
mov
test
mov
je
pushl
call
inc
push
call
test
pop
pop
mov
je
pushl
push
call
pop
pop
jmp
mov
mov
pop
mov
pop
ret
cmpl
movl
je
pushl
call
pop
ret
mov
test
jne
mov
ret
push
lea
push
mov
call
movl
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
movl
jmp
push
lea
push
mov
call
movl
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
movl
jmp
push
pushl
mov
call
movl
mov
pop
ret
push
pushl
mov
call
movl
mov
pop
ret
movl
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmp
je
call
pushl
mov
call
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
cmpl
push
mov
jne
cmp
ja
push
call
test
pop
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
mov
addl
pop
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
mov
test
je
cmpl
push
jne
call
test
pop
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
mov
test
je
lea
cmpb
je
mov
cmp
je
add
push
push
call
test
pop
pop
jne
testb
je
testb
je
mov
mov
test
je
testb
je
test
je
testb
jne
xor
ret
xor
inc
ret
mov
cmpl
je
xor
ret
andl
jmp
push
push
call
mov
mov
mov
incl
andl
mov
cmp
je
cmp
jle
cmp
jl
call
mov
shl
mov
add
mov
mov
movl
cmpl
je
mov
push
push
mov
pushl
call
andl
jmp
mov
call
ret
mov
andl
mov
mov
mov
mov
jmp
orl
call
cmp
je
call
mov
call
ret
mov
mov
cmpl
jle
decl
ret
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
cmpl
jne
xor
inc
ret
xor
ret
push
push
call
mov
test
je
mov
mov
test
je
andl
push
pushl
call
orl
call
ret
xor
cmp
setne
ret
mov
jmp
push
mov
mov
add
cmpl
jl
mov
mov
mov
mov
add
add
pop
ret
xor
cmp
setne
ret
mov
test
push
push
mov
je
mov
test
je
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
cmpl
jne
mov
pushl
push
call
mov
mov
mov
pop
mov
pop
mov
jmp
orl
orl
decl
pop
pop
jns
andl
xor
inc
ret
mov
test
je
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
cmpl
jne
xor
inc
ret
xor
ret
push
mov
cmpl
je
push
call
cmpl
pop
jne
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
pushl
call
test
pop
je
push
pushl
call
pop
pop
mov
mov
mov
mov
pop
ret
push
pop
ret
push
push
call
andl
mov
call
jmp
mov
call
ret
mov
orl
call
ret
push
push
call
andl
pushl
pushl
pushl
pushl
call
jmp
mov
call
ret
mov
orl
call
ret
push
push
call
mov
mov
mov
mov
andl
mov
mov
pushl
lea
push
call
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
andl
movl
pushl
pushl
push
pushl
push
call
add
mov
andl
jmp
mov
mov
mov
mov
cmpl
jne
mov
cmpl
jne
mov
cmpl
je
mov
cmpl
jne
mov
cmpl
movl
je
movl
mov
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jae
lea
mov
lea
mov
cmp
jle
cmp
jg
lea
mov
mov
mov
mov
push
push
xor
push
push
call
add
mov
mov
mov
orl
call
mov
call
ret
inc
jmp
mov
mov
mov
mov
pushl
call
pop
mov
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
cmpl
jne
cmpl
je
pushl
call
pop
test
je
call
push
push
call
pop
pop
ret
push
push
call
mov
mov
mov
mov
mov
test
je
cmpb
je
mov
test
jne
testb
je
mov
test
js
lea
andl
push
pushl
test
je
call
pop
pop
test
je
push
push
call
pop
pop
test
je
mov
mov
lea
call
mov
jmp
testb
je
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
pushl
push
call
add
cmpl
jne
mov
test
je
jmp
cmpl
jne
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
lea
mov
call
push
push
call
add
jmp
call
pop
pop
test
je
push
push
call
pop
pop
test
je
pushl
call
pop
test
je
mov
lea
testb
je
push
call
push
pushl
push
call
jmp
call
push
pushl
push
call
jmp
call
orl
call
ret
xor
inc
ret
mov
jmp
push
mov
sub
mov
xor
cmp
push
push
jne
xor
jmp
push
mov
mov
cmp
je
cmpb
je
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
cmp
jne
mov
cmp
jne
xor
jmp
mov
mov
or
mov
mov
mov
lea
mov
cmp
mov
mov
jle
mov
pushl
mov
lea
call
test
pop
jne
decl
addl
cmp
jg
jmp
mov
incl
test
je
lea
push
push
mov
call
pop
pop
jmp
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
cmp
jne
cmp
je
incl
xor
inc
pop
pop
pop
leave
ret
push
mov
test
je
push
pushl
mov
call
pop
pop
cmpl
pushl
jne
push
jmp
pushl
call
pushl
pushl
pushl
push
call
mov
push
pushl
inc
pushl
mov
pushl
mov
push
pushl
call
add
test
je
push
push
call
pop
ret
push
mov
push
push
mov
cmpl
je
cmpl
je
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
test
jne
push
mov
push
lea
push
lea
push
push
pushl
pushl
call
mov
mov
add
cmp
jae
push
cmp
jl
cmp
jg
mov
mov
shl
add
mov
test
je
cmpb
jne
pushl
mov
pushl
lea
pushl
xor
pushl
pushl
pushl
call
mov
add
incl
mov
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
cmp
movb
mov
jl
mov
cmp
jl
call
push
mov
cmpl
push
push
jne
cmpl
mov
jne
mov
cmp
je
cmp
jne
cmpl
jne
mov
test
je
mov
mov
push
push
mov
mov
movb
call
test
pop
pop
jne
call
cmpl
jne
mov
cmpl
jne
mov
cmp
je
cmp
jne
mov
cmpl
jne
call
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
mov
lea
push
lea
push
push
pushl
pushl
call
mov
add
cmp
mov
jae
jmp
mov
cmp
jg
cmp
jg
mov
test
mov
mov
jle
mov
mov
lea
mov
test
mov
mov
jle
mov
mov
pushl
mov
call
test
pop
jne
decl
addl
cmp
jg
mov
decl
add
cmpl
jg
jmp
pushl
mov
pushl
mov
pushl
pushl
pushl
push
mov
mov
call
mov
add
mov
incl
mov
add
cmp
mov
jb
cmpb
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
mov
cmpb
jne
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
jmp
jmp
push
mov
push
mov
mov
push
and
mov
cmp
je
call
mov
testb
je
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
add
jmp
cmpl
je
cmpl
jne
cmp
jbe
mov
mov
test
je
movzbl
push
pushl
pushl
push
pushl
pushl
pushl
push
call
add
jmp
pushl
pushl
pushl
push
pushl
pushl
pushl
push
call
add
xor
inc
pop
pop
pop
ret
push
push
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
orl
jmp
mov
test
je
call
jmp
push
push
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
orl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
mov
add
mov
mov
push
pushl
mov
mov
call
push
push
call
pop
pop
mov
pop
mov
push
mov
cmp
jne
mov
push
call
pop
pop
pop
leave
ret
push
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
jne
call
mov
test
je
push
call
test
pop
je
push
call
jmp
xor
pop
ret
push
call
mov
xor
ret
pushl
call
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
mov
push
xor
inc
cmp
push
jne
pushl
call
push
call
cmpl
mov
mov
mov
jne
mov
test
je
mov
sub
cmp
jmp
mov
test
je
call
mov
sub
cmp
mov
jae
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
jne
pushl
movl
call
pop
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
mov
mov
push
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
push
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
sar
mov
mov
and
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
pop
xor
mov
lea
cmpl
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
xor
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
test
push
push
jne
pushl
call
pop
jmp
push
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
cmp
ja
push
call
mov
test
pop
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
mov
test
pop
je
mov
dec
cmp
jb
mov
push
push
push
call
push
call
mov
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
pushl
call
mov
test
je
mov
dec
cmp
jb
mov
push
push
push
call
push
push
call
add
test
jne
test
jne
inc
add
and
push
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
mov
jmp
xor
cmp
ja
test
jne
inc
push
push
push
pushl
call
test
jne
cmpl
je
push
call
test
pop
jne
xor
pop
pop
pop
pop
ret
cmpl
push
jne
mov
push
call
test
pop
je
mov
sub
pop
ret
push
jmp
pushl
push
pushl
call
pop
ret
push
pushl
xor
pushl
inc
call
test
je
xor
mov
pop
ret
push
pushl
xor
pushl
inc
call
test
je
xor
mov
pop
ret
push
pushl
xor
inc
call
test
je
xor
mov
pop
ret
push
call
push
call
pop
pop
push
call
int3
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
xor
inc
ret
xor
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
mov
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
movl
mov
mov
cmp
je
cmp
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
rep
stos
xor
inc
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
cmpl
jne
mov
mov
push
jmp
mov
mov
push
test
pop
je
cmp
je
andl
push
call
pop
xor
inc
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
push
push
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
call
test
je
mov
jmp
mov
mov
lea
add
lea
cmp
jae
cmp
je
jmp
cmpl
jne
push
push
call
cmp
jne
mov
dec
dec
je
sub
je
sub
je
dec
jne
mov
mov
jmp
call
mov
movl
or
pop
pop
pop
ret
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
push
mov
push
push
mov
mov
dec
dec
je
dec
dec
je
sub
je
sub
je
sub
je
sub
je
dec
je
or
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
call
add
mov
jmp
mov
mov
cmp
je
test
jne
push
call
push
push
pop
cmp
je
cmp
je
cmp
jne
mov
andl
cmp
jne
mov
mov
movl
jmp
mov
cmp
jne
mov
mov
add
cmp
jge
lea
lea
sub
andl
add
dec
jne
jmp
andl
cmp
jne
pushl
push
call
pop
pop
jmp
push
call
cmp
pop
je
cmp
jne
cmp
mov
jne
mov
mov
pop
xor
pop
pop
pop
ret
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
mov
ret
mov
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
push
mov
imul
test
push
mov
jne
inc
xor
cmp
ja
cmpl
jne
add
and
cmp
ja
push
call
mov
test
pop
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
jne
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
jne
neg
ret
jmp
push
push
push
push
mov
jmp
inc
movzbl
push
call
test
pop
jne
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
push
mov
cmp
jbe
andw
push
xor
lea
stos
mov
shr
cmpl
mov
mov
pop
jne
xor
leave
ret
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
je
cmpw
jne
testb
je
xor
inc
leave
ret
cmpl
jle
push
push
call
pop
pop
leave
ret
mov
movzbl
and
leave
ret
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
mov
mov
movzwl
and
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
sar
push
mov
movzbl
testb
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
lea
pushl
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
mov
jmp
mov
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
insb
jecxz
dec
add
add
add
add
inc
add
add
dec
add
sbb
add
add
add
or
scas
popa
push
orl
pop
out
shrb
mov
mov
in
xor
aas
xor
cmpsl
pop
sbb
movsb
insl
cmp
rcll
pop
dec
out
dec
dec
mov
mov
mov
leave
ja
das
jnp
xchg
addr16
mov
int
inc
push
lret
cwtl
jae
xchg
shrl
xchg
insl
and
xchg
mov
and
orb
cs
mov
lret
mov
popa
repz
outsl
stos
pop
pop
jecxz
lea
mov
test
sub
daa
gs
mov
inc
xor
push
pop
jbe
mov
aas
jb
jmp
xor
dec
popf
nop
mov
sub
mov
icebp
dec
ret
mov
or
cmpsl
xchg
xor
test
movsb
insb
mov
mov
stos
xchg
sub
nop
icebp
sahf
lock
cmp
lahf
mov
xor
or
add
out
pop
fldenv
into
lret
xor
movsb
sub
push
loope
sbbb
mov
jge
push
xchg
je
mov
cmpsl
jnp
dec
cmc
repz
xchg
sahf
push
or
aad
sahf
push
dec
aas
xchg
push
out
popa
adc
adc
jg
inc
add
push
int3
and
add
mov
mov
es
sub
decl
icebp
test
add
jbe
add
push
stos
cld
sbb
divl
stc
pop
pop
jb
inc
or
test
add
inc
push
push
lcall
pop
mov
mov
mov
fdivrs
fidivrl
ficoms
cli
sbb
stc
bound
push
icebp
scas
mov
jle
pushf
mov
mov
stc
cmp
sarb
fiaddl
dec
jecxz
cmp
cmpsl
pop
xor
jne
aam
cmpsl
icebp
xor
shll
cmpsl
mov
mov
ss
fbld
ljmp
ret
jns
pop
cli
notl
ja
out
shlb
mov
dec
sbb
pusha
mov
test
dec
cmp
test
jle
rorb
jg
ljmp
fistpll
in
mov
pop
cmp
jbe
stos
cmp
cltd
leave
into
pop
cmp
mov
dec
mov
ret
repz
or
daa
mov
jle
jae
lds
or
into
mov
or
mov
xor
or
out
cld
popa
scas
xchg
fmull
stos
arpl
push
fistpll
repz
cmc
je
mov
stc
xchg
mov
push
push
pop
add
popa
bound
test
pop
subl
fwait
jmp
jl
pop
pop
jbe
adc
aas
cli
test
in
mov
jae
cmc
or
push
xor
addps
aam
test
les
mov
pushf
mov
xor
push
mov
jp
and
xor
and
je
nop
jp
and
hlt
dec
sti
inc
cwtl
sbb
xchg
jp
and
cld
pop
cmp
and
adc
outsb
sbb
test
mov
push
and
jne
jb
push
daa
sbb
dec
xchg
mov
fidivs
sahf
clc
nop
cmp
jb
mov
jo
mov
lods
popf
loop
fisttpll
hlt
xor
adc
mov
lret
in
push
xchg
mov
mov
hlt
imul
xchg
xor
lret
cmp
jns
cmp
lds
mov
divb
stos
add
jp
gs
cs
xchg
push
lcall
push
inc
jp
ljmpw
sub
xlat
add
cmp
icebp
roll
test
dec
sti
out
test
lock
pop
dec
sub
inc
clc
test
inc
sbb
inc
adc
fs
inc
bound
bound
xchg
orl
lret
test
iret
iret
outsl
cmp
xor
adc
add
pusha
adc
shll
orb
mov
jae
lds
lcall
push
clc
das
insb
popa
loopne
dec
addl
sub
or
sbb
roll
lods
mov
stos
cmp
sti
frstor
xchg
repz
sbb
mov
add
pop
ret
cmp
cmp
test
stos
shrb
mov
rclw
mov
pop
aaa
bound
mov
in
jmp
cltd
pop
jbe
dec
daa
mov
xor
jbe
cmpsb
pop
ret
push
jno
addr16
mov
or
pop
aad
cmpsl
comiss
nop
outsl
pusha
mov
test
lahf
jge
cmp
and
jge
and
pop
lret
xor
das
inc
xchg
mov
ljmp
fwait
vpmacsswd
dec
or
popa
mov
push
iret
cmp
mov
ljmp
ja
sbb
or
sub
and
jmp
leave
jl
cs
push
pushf
fisubs
sahf
sub
pop
call
jle
out
jmp
mov
and
stos
sbb
repnz
add
and
leave
stos
pop
pop
std
mov
rcrb
data16
push
wbinvd
xlat
mull
out
adc
cld
ljmp
fsubl
adc
scas
andl
cwtl
test
insb
pop
sbb
lea
mov
nop
xchg
sahf
ds
cmp
sbb
addr16
shlb
fsubrs
test
cmp
and
sbb
xorl
pushf
pop
push
push
xorl
inc
sub
outsl
jp
enter
call
sub
ljmp
hlt
fs
mov
push
dec
jp
sbb
pop
jne
xchg
in
mov
shll
push
in
or
rcll
ss
mov
or
loope
mov
adc
js
sub
in
pop
lcall
cmp
ljmp
movsb
outsb
ja
sbb
call
push
xor
iret
cltd
xor
testb
addr16
adc
scas
inc
pop
and
xlat
cmpb
aad
jb
out
fisubrl
add
int
jnp
orb
dec
dec
testl
mov
inc
call
popf
push
rep
push
lahf
push
dec
sbb
xchg
pop
cmp
rcl
sub
dec
loopne
sbb
jg
pop
xor
int
and
jg
aam
and
cmovnp
or
push
push
adc
and
ds
inc
dec
test
jg
push
gs
ss
cwtl
and
aaa
into
insb
mov
popf
bound
mov
scas
fidivrs
cli
sbb
lret
xchg
cld
and
fsub
jmp
cmp
jns
jg
adc
inc
les
nop
push
imul
mov
test
cmp
movsl
outsl
sbb
loope
mov
inc
adcl
mov
mov
and
pop
js
in
pusha
test
test
add
aaa
dec
or
mov
add
rcrb
pop
addb
mov
call
inc
fwait
push
fmul
in
push
xchg
xchg
mov
or
mov
repnz
std
outsl
jno
xor
mov
jnp
lcall
lods
out
sahf
push
push
sub
outsl
and
cwtl
in
aam
sub
ja
push
or
jbe
dec
cmp
int3
pop
inc
or
les
gs
cmc
stos
xlat
repz
mov
and
iret
sub
add
push
xchg
lods
mov
jl
out
ljmp
icebp
push
mov
in
loop
adcb
and
xor
jb
shlb
adc
and
les
lea
das
rorl
push
ljmp
cmp
outsl
testl
mov
dec
andl
and
xchg
sub
adc
outsb
in
push
jle
js
mov
jmp
popa
mov
pusha
dec
imul
mov
xchg
fucom
mov
push
jp
xchg
fdiv
mov
jecxz
lods
scas
stc
fisttps
cmc
adc
pushf
jbe
jo
xor
inc
iret
stos
adc
cmpsb
or
inc
xchg
inc
sub
jne
bnd
cmc
inc
xor
cmp
test
dec
sub
imul
or
loop
mov
xor
popf
mov
jl
xchg
or
sbb
dec
scas
and
gs
inc
add
add
js
jecxz
fisubrl
ss
push
stos
jecxz
jmp
dec
imul
shlb
push
cmp
int3
das
jg
push
and
leave
jne
mov
aas
mov
int3
sbb
sub
data16
adc
mov
ret
mov
dec
jb
push
inc
repnz
mov
push
inc
addr16
push
frstor
xchg
push
test
push
mov
mov
dec
xor
or
push
xor
lock
in
sub
dec
out
lds
mov
mov
lret
inc
push
nop
sub
xlat
loope
inc
ja
in
mov
pop
inc
loope
cmpsl
sbb
mov
movsb
or
rolb
cmp
cltd
mov
and
movsl
dec
stos
xchg
or
lods
aam
inc
vmread
lds
xor
xchg
and
and
or
ret
xchg
lret
sbb
pop
dec
addr16
hlt
dec
out
dec
or
inc
xchg
out
inc
dec
in
mov
subb
push
orb
add
loopne
lcall
or
adc
addr16
mov
arpl
into
push
outsb
fstpl
or
lods
inc
xchg
mov
dec
cli
iret
stos
xor
enter
sub
sbb
inc
leave
inc
mov
insb
and
mov
sub
cmp
dec
jecxz
push
inc
inc
data16
ret
xchg
mov
push
lcall
int3
cmp
push
xchg
stos
adc
sub
jl
loope
pop
xlat
mov
push
adcl
sub
pop
aam
jo
mov
gs
sbb
int
push
fwait
cmp
outsb
cmpl
out
inc
xor
ret
lods
insb
andl
loop
pop
leave
xchg
sub
loop
movsl
sarb
std
into
xchg
jge
test
dec
icebp
add
mov
ret
cmc
push
outsb
aas
mov
xchg
push
xchg
stc
je
adc
mov
mov
jg
movsl
and
testb
cmp
dec
xlat
jns
les
shl
jge
cmc
movsl
dec
es
call
xchg
pop
out
mov
jle
jl,pt
adc
aam
xchg
lahf
jbe
jp
and
jg
pop
subb
pop
pop
negb
inc
jle
imul
cmp
mov
stc
lret
adc
loopne
pop
andb
xlat
nop
loope
or
fwait
inc
test
xor
cwtl
adc
lret
les
add
or
mov
adc
dec
pop
jp
ja,pn
pop
mov
outsl
not
add
mov
jbe
imul
test
jne
pop
ss
pop
movsl
shlb
fisubrl
int
and
dec
add
and
jns
mov
fwait
out
cwtl
in
mov
and
mov
cmc
push
or
cmp
fstl
mov
inc
jp
and
mov
iret
mov
setbe
add
xor
int
fidivrs
pop
dec
fwait
pop
nop
loop
sub
jns
adc
insb
mov
xor
fsubs
ja
pop
lret
dec
std
and
xor
push
rcl
dec
ds
pop
mov
cmp
fnsave
jge
cltd
pop
push
mov
xchg
xchg
cmp
fisttpll
shll
push
jp
fwait
mov
dec
dec
sti
mov
testl
idivl
cmpb
data16
mov
pop
mov
inc
push
dec
pop
cmp
fcmove
pusha
rorl
fisubrl
or
cmp
push
je
xlat
cmpsl
jb
sub
rcrl
and
mov
mov
adc
fsubs
mull
jne
push
push
clc
je
mov
out
push
lds
xor
std
inc
aaa
bound
sub
jae
mov
jno
lods
insb
dec
ja
sub
jb
mov
xchg
gs
push
out
jb
xor
enter
fistps
testl
lahf
pop
in
jo
inc
idivb
push
inc
and
xor
cmp
in
xchg
stc
fcoms
mov
adc
adc
mov
pop
fildl
push
mov
jmp
pop
dec
inc
xchg
push
je
xchg
repz
dec
ficomps
fdivrs
inc
xchg
popa
cli
jge
fisubl
insb
std
pop
pop
in
cmp
cmp
push
dec
insb
ja
jnp
aad
add
sbb
stos
push
fs
pusha
cmp
insb
ror
push
add
testb
fadd
out
mov
ljmp
adc
push
notb
xchg
inc
xchg
adcb
mov
inc
jae
fisttpll
push
xorl
lret
xor
add
push
xchg
lret
mov
les
adc
sbb
xlat
jl
add
jmp
in
mov
lods
cmp
inc
cwtl
mov
shrb
or
das
adc
enter
loop
jne
pop
enter
sarb
pop
aam
push
andb
jge
xchg
js
bound
push
cmc
cmp
pop
in
cmpsb
clc
cmp
cmpsl
addr16
push
mov
mulps
jp
sarl
lret
xchg
xor
add
popa
shlb
dec
adc
mov
mov
sbb
out
jl
xchg
mov
jg
clc
fldcw
mov
aad
das
mov
pop
sub
sub
clc
inc
lea
bound
ja
xor
dec
sub
push
and
call
cmp
pop
push
in
push
cli
negl
xor
popa
add
test
sahf
and
mov
cmp
jg
int
out
sti
aaa
jbe
mov
aaa
jg
dec
or
pop
dec
pop
fidivrs
das
dec
jnp
push
and
xchg
mov
daa
xor
add
adc
gs
ds
inc
clc
jno
push
out
adc
call
leave
sub
adc
aas
sub
jecxz
fisubrl
mov
or
ret
dec
push
das
push
xorb
fcmove
stos
enter
imul
mov
mov
jnp
inc
sub
fwait
nop
pop
push
aas
mov
push
in
adc
adc
outsb
notl
jne
cwtl
dec
iret
mov
clc
aad
pop
fsubl
dec
mulb
jl
xchg
add
ret
mov
mov
mov
movsb
aad
add
sub
nop
addb
mov
test
cmp
adcl
push
fistps
sub
in
inc
pop
xchg
mov
inc
mov
cmp
sub
cmp
pusha
pop
xchg
jg
lret
xchg
lcall
push
push
loop
lock
mov
outsb
mov
jb
push
out
jecxz
fistpl
imul
or
hlt
sbb
int
ret
push
inc
push
call
mov
adc
mov
jecxz
and
loope
mov
in
or
xchg
adc
mov
mov
xor
adc
jbe
or
lods
and
lock
sbb
add
pop
fistl
push
mov
enter
sub
jns
cmp
lock
adc
xchg
dec
std
pop
mov
mov
gs
cmpsb
mov
outsb
loopne
in
mulb
inc
das
inc
mov
lea
mov
xchg
mov
jle
sbb
andl
ret
add
sub
mov
xchg
lock
inc
sbb
call
lods
push
mov
loopne
add
and
push
cld
adc
in
outsl
pop
pop
xor
outsl
rolb
pop
xor
jmp
mov
insl
mov
mov
push
or
pop
rcl
mov
push
or
sbb
mov
sti
pop
cltd
repz
sub
or
pop
ja
fs
js
inc
sub
sbb
mov
ljmp
pop
scas
sbb
jecxz
and
add
sbb
inc
cmp
jns
ss
loope
ret
xchg
adcb
std
dec
dec
psubsb
sti
push
xor
xchg
mov
leave
sub
or
arpl
in
jmp
jbe
jecxz
mov
imul
fldenv
addb
add
dec
ljmp
or
pop
cmpsb
lea
iret
cmp
sub
leave
repnz
jns
shlb
hlt
arpl
mov
fimuls
scas
jae
lret
push
sub
jl
xor
jecxz
jne
mov
fisubrl
add
mov
push
fcoms
dec
imul
movsb
out
repz
loope
cmp
pop
pushf
hlt
adc
je
outsb
fdivr
ljmp
sub
mov
cwtl
mov
movsb
and
enter
pop
out
sub
fs
adc
pop
add
sub
movsb
popa
fistps
sahf
add
lods
mov
push
xchg
dec
add
mov
inc
add
inc
ret
fwait
popf
cltd
shl
mov
dec
jle
and
sub
mov
dec
outsl
sti
push
ss
in
faddp
mov
ljmp
add
xchg
shl
add
inc
test
addr16
repz
xchg
jae
add
adc
mov
hlt
xor
pop
in
in
sub
ja
arpl
push
popf
dec
jg
cmp
ret
sbb
popf
ljmp
stc
inc
pop
jae
push
sub
scas
jge
fildl
mov
adc
imul
shufps
inc
aaa
mov
jp
xchg
loopne
imul
jl
repz
dec
stos
mov
jns
aas
lret
add
ret
mov
dec
fcmovnb
cmp
xor
push
into
add
xchg
dec
vmwrite
mov
inc
push
dec
push
or
fadd
stos
jle
ss
dec
inc
or
das
push
cmp
xor
push
xor
sahf
sub
and
outsl
stc
cmpsl
cmp
cltd
mov
fildl
xchg
fidivs
sub
repnz
stos
push
push
or
cmp
shrl
imul
push
or
imul
rcrb
into
inc
jg
add
int
mov
lea
inc
arpl
rcll
add
inc
lock
mov
idivl
dec
stos
je
mov
leave
nop
rcll
sub
repz
jmp
cmp
lods
mov
or
dec
pop
sbb
in
pop
rcrb
cvtps2pi
pop
test
inc
cmp
jb
mov
mov
loop
pop
adc
xchg
loop
into
mov
leave
lahf
das
sub
frstor
sbb
push
loopne
mov
xchg
mov
inc
or
clc
mov
jae
lahf
cmp
cs
and
mov
sbbl
add
push
pop
pop
xchg
mov
adc
js
mov
adc
pop
mov
xchg
pop
sbb
xchg
or
in
sarl
or
popf
xchg
pop
pusha
dec
outsb
aad
pop
xchg
cld
sahf
mov
icebp
inc
mov
sbb
mov
ja
sar
aaa
sbb
jbe
xchg
xchg
mov
test
pop
xchg
push
cmp
adcl
repnz
mov
push
in
mov
aaa
ljmp
jmp
faddp
or
dec
xchg
inc
mov
out
shlb
hlt
mov
xchg
cmc
addb
sub
pop
dec
iret
cmp
sbb
xchg
jne
inc
mov
mov
mov
pop
fstp
xchg
sti
lods
stos
sbb
add
push
or
and
push
mov
pushf
pop
pop
ret
ss
test
movsl
fiaddl
jmp
ss
out
xchg
mov
xchg
adc
repnz
std
push
mov
xor
mov
jae
data16
xor
mov
cmp
in
cmp
addr16
stos
fisubrs
or
les
sub
es
testl
mov
xor
testb
sbb
aaa
cwtl
xchg
in
sbb
cmpsl
addr16
call
shll
sar
rclb
mov
aad
insb
cmc
pop
cwtl
mov
ds
mov
mov
sbb
add
insl
mov
mov
push
pop
mov
ja
pop
xchg
adc
js
mov
xor
pop
fsubs
lds
dec
cltd
sbb
leave
cmp
dec
or
insl
inc
push
es
pushf
or
popf
mov
jp
fstpt
insb
and
in
lahf
add
jecxz
popf
inc
jne
aad
mov
push
fcompl
adc
ror
and
push
in
sbb
jmp
push
push
lret
mov
fwait
mov
mov
mov
pop
loopne
call
sbb
push
repz
mov
es
xchg
adc
dec
lahf
cmp
xchg
add
mov
stos
mov
cmpsb
jl
dec
and
popf
mov
int
jae
dec
push
cmpsl
mov
push
incl
ljmp
add
idiv
loop
xor
cmpsl
fisubrl
add
pop
push
pop
das
inc
fbld
ret
push
pop
add
out
je
mov
fs
mov
mov
stc
sbbb
test
shlb
jae
daa
clc
mov
dec
and
dec
cmp
jno
pop
cmpsl
mov
push
std
mov
pop
sub
mov
rorb
sbb
pushf
sbb
nop
mov
stc
pop
imul
mov
cmp
fcoms
ljmp
in
jne
push
or
add
sbbb
xchg
pushf
push
fdivp
mov
push
loope
jb
lods
dec
out
push
stos
jle
scas
inc
pushf
xchg
mov
and
or
js
outsl
int
clc
pushf
add
adc
test
adc
inc
movsl
dec
pop
xchg
je
mov
or
dec
dec
popf
push
push
inc
jl
and
fsubrs
ror
mov
push
lds
mov
xor
call
xchg
orl
push
push
scas
add
xor
aam
fimuls
add
cld
jb
pop
sbbl
popa
cli
inc
dec
into
xchg
xlat
mov
adc
clc
add
outsb
lret
out
adc
aad
cmpsl
sbb
int
pop
jle
cs
scas
push
mov
ljmp
std
and
xchg
stos
imul
xor
cltd
jbe
push
dec
fstps
and
aad
dec
mov
mov
pusha
ja
push
xlat
faddl
xor
pusha
lret
ret
stos
call
pop
ret
xlat
sti
popa
call
push
clc
roll
mov
push
lock
mov
pop
mov
pop
jne
mov
icebp
mov
mov
push
pushf
movsl
insl
dec
lcall
mov
hlt
inc
fcoml
mov
popa
mov
movsl
fstps
pop
decl
xchg
ds
dec
sbb
adc
cmp
popa
ds
pop
aad
sbb
fcom
xsha256
cmpsb
adc
leave
adc
inc
xorb
imul
inc
push
mov
or
and
mov
inc
dec
adc
dec
test
je
jle
icebp
cmp
mov
ret
je
bound
dec
and
test
imul
push
fwait
test
mov
outsb
dec
mov
add
rcrl
xchg
lods
and
xor
cli
out
insl
mov
imul
cs
out
movsb
inc
mov
jnp
in
popf
mov
mov
dec
adc
sbbb
bound
and
ret
loope
dec
lcall
out
push
mov
mov
push
and
cs
xor
or
loopne
ficompl
mov
out
in
push
add
scas
jbe
ljmp
fldcw
xor
pop
xchg
clc
movsb
pop
lret
js
jno
push
push
xchg
add
mov
sti
xchg
push
push
stos
rorb
jecxz
or
mov
loop
xchg
add
sub
cli
aam
cmp
fwait
iret
xor
inc
addr16
jecxz
pop
push
pop
scas
pop
dec
clc
sahf
stos
mov
adc
fnstenv
div
xlat
mov
imul
or
aaa
add
negb
in
add
popf
popa
xor
stos
es
mov
pop
out
es
or
fldt
sub
push
sub
xchg
jl
sub
cmpsb
dec
mov
test
add
cmp
sub
pop
std
sub
sub
je
fwait
lret
and
and
ljmp
in
mov
int3
inc
rcrl
inc
imul
rorl
jne
js
lret
pop
add
and
push
nop
pop
rorb
out
push
mov
cli
int3
ja
stc
jle
sub
ficoms
push
int3
and
add
pop
jecxz
andb
mov
repnz
movsl
inc
xor
gs
push
jmp
cli
inc
sti
and
mov
jg
dec
sarb
iret
jmp
mov
and
outsl
or
nop
shld
mov
xlat
pop
xor
cli
mov
out
dec
sti
xor
sbb
push
adc
int3
xchg
out
stos
mov
push
lods
out
and
xchg
addr16
daa
push
push
cmp
std
pushf
insb
loope
loope
sbb
cmpsl
pop
mov
jbe
cmp
xchg
cmpsb
js
inc
leave
hlt
clc
ret
imul
push
js
lock
adc
scas
in
add
movsl
adc
cwtl
mov
stc
insl
sarl
incb
repz
or
sub
loope
mov
stc
scas
adc
xor
cmp
icebp
xor
fbstp
aam
fstpt
arpl
aaa
int3
push
rorb
xor
inc
pop
xor
in
in
sbb
push
xchg
xchg
and
in
push
sti
arpl
outsl
stc
jle
xchg
jmp
leave
sbb
sbb
cmp
push
adc
cmp
sub
lret
iret
inc
lds
in
inc
xchg
mov
out
test
test
dec
hlt
call
push
lcall
push
xor
pop
test
pusha
push
xchg
in
cmpsl
mov
jnp
mov
add
scas
adc
jle
adcl
jge
mov
out
cli
lds
cli
xorl
into
xor
fs
xchg
push
or
call
adc
sbb
dec
add
idiv
push
mov
stos
aam
mov
out
aas
outsb
popf
jle
dec
mov
mov
dec
xlat
ret
push
mov
loop
xlat
out
je
enter
adc
add
xor
lods
dec
sbb
sub
pop
insl
lcall
fsubrs
das
adc
lock
mov
mov
out
in
decl
sub
daa
fwait
sti
stos
adc
into
mov
fsubrp
stos
in
pop
out
jnp
mov
jb
daa
sub
xor
iret
add
loop
push
push
mov
sti
sbb
jns
int
je,pt
ret
jns
notb
aaa
rorl
mov
mov
cmp
pop
or
fwait
lea
push
mov
out
mov
or
out
sub
fnstenv
mov
mov
rcpps
std
pop
scas
rcr
dec
fmul
mov
out
dec
mov
sub
xchg
mov
popa
pop
rolb
inc
ss
cli
aas
data16
andb
clc
or
jle
loop
add
mov
jl
and
add
stos
aam
and
aam
xchg
adc
jp
insl
fimuls
mov
fsts
out
adc
pop
scas
dec
mov
vmptrld
xchg
outsl
lahf
mov
lds
fiadds
cs
icebp
into
lea
lea
jle
sub
jp
iret
je
xchg
addr16
inc
or
cmp
add
jp
jp
pop
lahf
inc
es
popa
fnstsw
add
shlb
pop
or
or
mov
pop
mov
mov
popf
mov
sbb
std
or
jecxz
jbe
mov
aad
adc
repz
push
sub
pushl
mov
sbb
xchg
orl
loopne
cmpsl
pusha
popf
lds
or
fisttpl
adc
xchg
sbb
push
lods
mov
iret
lret
mull
mov
mov
test
jnp
std
mov
ret
or
push
sbb
add
and
inc
je
lcall
aam
jbe
hlt
xor
mov
fs
add
insb
mov
mov
icebp
or
mov
sub
pusha
mov
mov
jo
mov
adc
lret
nop
dec
les
mov
insl
xchg
ja
cmp
gs
inc
or
mov
les
mov
add
in
mov
lret
push
xor
mov
mov
shl
inc
std
pop
cmc
cmc
std
pop
lods
std
xchg
push
xor
movb
or
jmp
push
in
xchg
leave
xchg
cmpsb
cmp
fmuls
adc
fistl
push
and
inc
inc
xchg
xchg
push
dec
les
aaa
cli
stos
add
mov
cmp
pusha
cmpsl
ret
mov
jmp
in
insl
cwtl
psrld
pop
cs
flds
outsb
mov
repnz
inc
and
cld
test
pop
sub
dec
sub
mov
mov
cmp
loope
mov
pop
push
cmpsb
and
cwtl
int
popa
out
andb
push
arpl
ja
xchg
xchg
sub
fs
push
pop
arpl
lahf
jg
dec
test
cmc
xchg
pop
lret
or
and
inc
addr16
mov
add
bound
mov
mov
sub
arpl
scas
dec
in
pop
fisubs
ds
add
or
imul
out
inc
cwtl
enter
hlt
adc
dec
les
push
outsl
mov
and
inc
imul
xor
dec
insl
out
pop
cwtl
dec
push
test
mov
fstpl
outsb
inc
adc
addr16
adc
jae
ss
inc
add
ficomps
lret
pop
adc
xchg
or
push
pop
imul
sub
cmp
imul
xor
adc
jns
or
int3
int
out
or
mov
repnz
lret
sub
sub
pop
inc
lods
fbld
aad
and
out
aad
mov
mov
jmp
mov
js
stc
inc
insl
mov
push
cmp
adc
gs
in
fdivl
push
push
pop
lods
lret
mov
push
cmc
cmp
sbb
or
push
sbbb
dec
nop
fwait
ret
sbb
pop
adc
pop
and
inc
iret
mov
mov
add
inc
std
loope
push
push
ds
in
xor
int3
push
sub
out
mov
xchg
xlat
and
adc
jae
xchg
push
mov
dec
je
sbb
andl
loop
outsl
dec
outsl
jno
and
in
adc
cmp
movsb
push
mov
dec
daa
rorl
cwtl
mov
daa
ljmp
shll
adc
out
jge
xchg
mov
pop
push
dec
pop
fwait
push
xor
shl
pusha
cmp
in
daa
push
push
cmp
roll
adc
sub
mov
cs
or
out
aad
sbb
or
or
mov
xchg
dec
xchg
into
pop
mov
fildl
mov
mov
shl
adc
repz
arpl
in
sub
and
jno
aam
cwtl
xchg
popa
sub
inc
cmc
inc
sub
and
insl
push
push
aad
mov
add
daa
jge
sarb
iret
insl
mov
ficoml
mov
ds
fisttpll
aaa
and
and
mov
sbb
mov
and
cs
ds
gs
movsb
aad
mov
out
xchg
inc
aaa
add
pop
mov
stos
cli
mov
stc
cltd
shll
inc
xchg
mov
push
mov
cld
cmp
ret
and
jmp
xor
xchg
negl
push
jl
xchg
jns
bound
cs
lds
cs
in
adc
mov
and
cwtl
xlat
cwtl
dec
icebp
inc
mov
add
das
pop
inc
sysret
inc
in
and
xchg
imul
push
mov
jge
movhps
mov
stos
cmpsb
xor
jne
xor
xor
adc
js
enter
pop
cld
movsl
mov
add
jp
push
add
out
pop
sar
dec
mov
mov
cs
add
jmp
dec
or
jns
ja
int3
xchg
xor
ds
mov
sub
dec
cwtl
scas
or
lahf
in
push
xlat
lods
mov
lea
inc
add
fsubrl
inc
and
pusha
std
mov
stos
jmp
stos
pop
inc
jbe
lock
call
ret
stc
iret
push
hlt
pushf
xor
or
dec
dec
ja
scas
pushf
jno
jge
ret
insl
dec
mov
and
ret
aas
mov
xchg
and
cmpsl
shlb
addr16
in
ret
jo
out
popf
or
loop
enter
and
xchg
xchg
mov
mov
testb
daa
add
imul
negb
cmc
ljmp
add
and
inc
fmuls
dec
popf
xchg
add
cmp
pop
enter
cmp
jb
cmp
ja
bound
movsb
xchg
in
xorb
push
fisubs
or
dec
sbb
cmpsb
nop
inc
mull
fwait
cltd
sbb
lcall
add
add
push
insl
daa
fwait
xchg
sbb
jbe
cmpl
dec
std
lret
lods
inc
adc
hlt
in
fnstsw
dec
jl
lcall
push
mov
sbbb
cmp
cmp
int
fnsave
cmc
mov
data16
inc
add
fildl
loop
or
mov
sub
sbb
bound
fwait
xchg
int
sbb
cs
pop
jns
xchg
sub
test
mov
xchg
test
sub
cmp
adc
repnz
jno
inc
mov
pop
fstpl
shrl
loopne
insb
push
or
xor
pop
imul
mov
rorb
incb
insl
cmp
popf
adc
das
ret
sbb
xor
mov
or
sub
into
mov
mov
dec
or
push
and
test
aam
hlt
insb
push
mov
xorl
push
xlat
xchg
push
in
xor
daa
sbb
inc
push
enter
cmpsl
cltd
stos
scas
outsl
lea
pop
pop
test
jge
xor
jnp
push
leave
scas
call
pop
sti
lcall
add
or
mov
mov
negl
dec
pushf
imul
pop
xchg
cmp
xchg
xchg
xor
mov
loope
jge
ficoml
and
jne
jbe
cmp
mov
iret
out
add
mov
sub
pop
sbb
ja
xchg
jne
xchg
sbb
lds
add
cmp
addr16
cld
mov
jl
mov
mov
ficomps
mov
out
dec
mov
scas
mov
out
ret
movsb
dec
inc
jl
loope
arpl
in
lods
mov
pop
sti
popf
pop
les
cmc
or
popf
sub
adc
pop
inc
inc
cmpsl
int3
pop
pop
mov
roll
xchg
loopne
imul
stc
stc
push
xchg
jnp
lcall
mov
mull
stos
mov
sbb
ss
bound
mov
dec
push
inc
ss
xchg
out
adc
fisttpll
jmp
cmpl
dec
dec
jmp
pop
cmpsl
arpl
mov
sub
in
xchg
adc
loope
or
fisttps
adc
icebp
inc
sbb
push
insb
mov
cld
imul
aad
add
inc
sbb
xor
pop
sbbl
mov
pusha
cli
std
xchg
int
mov
lock
pusha
dec
push
lods
shrl
cmp
cmpsb
and
das
les
push
je
push
mov
mov
aas
adc
sbbb
pushf
aaa
mov
mov
pop
fwait
in
mov
or
out
adcl
inc
sub
loope
call
sbbb
pavgb
add
loope
lock
and
sub
mov
mov
roll
mov
xchg
jb
pop
push
scas
dec
xor
ret
adc
mov
gs
in
sbb
cmp
xchg
lods
leave
xchg
jecxz
pop
pop
aaa
and
rcll
sbb
cli
or
jle
mov
push
sub
sbb
xchg
shr
inc
or
jae
inc
inc
adc
imul
rclb
mov
mov
sub
jmp
jp
cmp
or
mov
fisttpl
out
mov
push
inc
mov
or
push
or
inc
fmulp
add
or
xlat
sub
repz
sbb
pop
cmp
mov
sub
aad
iret
adc
es
sub
mov
adc
xchg
int3
add
fisttpll
lods
mov
cmp
mov
jg,pt
sub
pop
xchg
pop
xchg
inc
das
scas
in
dec
xor
aas
das
int3
fcmovbe
shlb
dec
sub
test
pop
push
movsl
sub
aas
imul
push
inc
loope
mov
in
cwtl
std
add
in
xchg
aam
aad
ret
mov
mov
cmp
or
pop
sub
push
xor
mov
mov
inc
sub
and
dec
aaa
das
das
pop
or
mov
xchg
test
adc
es
out
js
stos
jno
xor
repnz
adcl
sbb
add
fnsave
push
xchg
out
mov
loope
jns
dec
hlt
ror
lea
pop
sahf
testb
jp
rolb
jecxz
or
cltd
mov
mov
in
push
test
mov
mov
adc
jle
daa
jmp
in
cmpsb
shll
xchg
jle
sbb
jnp
movsb
sub
les
lods
cmpsb
bound
xor
lods
inc
adc
add
inc
int3
lods
xchg
pushf
push
loope
shl
add
das
enter
mov
mov
repnz
in
in
inc
shlb
mov
packuswb
std
and
in
push
push
outsl
adc
out
xchg
fcomps
pop
cmp
mov
es
out
push
iret
movsl
data16
adc
mov
adc
aaa
mov
ja
dec
call
scas
shrb
or
sbb
mov
pop
sub
dec
es
push
xchg
or
rol
iret
mov
mov
and
cs
test
jmp
jmp
mov
scas
mov
push
movsb
inc
pop
mov
pop
rclb
stc
daa
jg
pop
ficoms
dec
int3
jmp
neg
mov
mov
les
shlb
adc
push
and
aam
pop
sbb
sarb
lds
mov
mov
or
push
jae
inc
cmp
mov
addr16
ret
lret
sub
mov
outsl
rclb
mov
dec
daa
gs
mov
mov
jnp
jge
inc
lcall
in
adc
xchg
jle
aam
inc
fisubrs
fucomip
dec
mov
rorl
lods
jl
dec
inc
sub
ret
and
aaa
mov
jbe
aas
add
sub
adc
add
adc
push
jbe
psllq
jnp
xor
and
jb
imul
in
pop
mov
ret
pop
lret
xchg
adc
xchg
pushf
testl
cld
pop
les
xchg
or
movsb
aam
dec
and
dec
pop
jge
cmp
sahf
inc
sbb
inc
loope
push
push
mov
xchg
push
je
dec
arpl
hlt
lods
xchg
out
mov
pop
fdivrs
jne
mov
lock
and
sarl
int
jno
loop
sbb
pop
mov
cs
adc
jns
movsb
daa
inc
xchg
sahf
cmp
shlb
flds
or
xchg
data16
fadds
pushf
jb
pop
pusha
jo
dec
push
xchg
xor
dec
int
mov
sub
icebp
cwtl
adc
push
test
mov
add
ror
ja
fldl
mov
cmc
es
mov
hlt
aas
test
popf
mov
aaa
repnz
pop
or
and
call
cmp
aaa
push
imul
fmull
insl
mov
mov
sbb
push
js
insl
shll
or
mov
sbb
xchg
xor
jmp
mov
data16
cli
movsl
xor
push
mov
arpl
mov
mov
jp
jmp
loope
ret
aaa
cmp
and
add
push
sub
inc
leave
dec
pop
gs
and
imul
movsb
loop
sub
mov
mov
cld
push
cli
shl
and
cmp
mov
mov
aad
imul
cmp
dec
adc
and
leave
shlb
arpl
lea
push
test
cmp
fsubrl
cmp
jns
les
xor
push
cmp
cs
out
mov
fs
or
mov
arpl
pop
gs
aad
ja
hlt
pop
xchg
adc
mov
xor
push
push
add
adc
xchg
or
dec
addr16
or
or
inc
daa
daa
iret
mov
lret
fsubrs
out
scas
rorl
mov
aad
cmp
sub
fnstcw
out
imul
call
arpl
test
xor
add
mov
imul
or
pop
dec
std
add
fsubl
and
in
jo
fiaddl
lret
cs
sub
sub
push
ficoms
xchg
int
cltd
xor
adc
rorl
xchg
mov
xor
mov
bound
fbld
stc
fisubrl
shr
dec
mov
xchg
xchg
and
or
stc
orl
cmp
mov
movsb
adc
jo
pop
xchg
out
pushf
adc
repnz
daa
aam
mov
lods
clc
xor
dec
int
mov
into
mov
and
inc
icebp
les
mov
xchg
and
std
mov
adc
sub
int3
rcll
rcrl
xchg
mov
mov
jge
movsl
dec
in
fistpl
es
mov
jnp
cmp
cmp
sbb
or
test
cmp
cmovnp
loopne
sahf
aaa
jno,pt
loop
ret
xor
mov
mov
sub
mov
sub
xchg
stc
popf
in
lret
je
addr16
or
push
mov
repnz
cmp
sbb
mov
mov
into
and
push
rclb
repnz
stos
leave
fnstsw
bound
sbb
arpl
pusha
stos
in
cmp
mov
and
outsl
cli
mov
cmpsb
cmpsl
insb
jecxz
mov
jnp
movsb
clc
in
out
daa
sar
pushf
pop
jecxz
mov
lcall
popa
sbb
stos
xchg
pop
add
xchg
call
and
mov
xor
clc
into
cmpsb
stos
pop
out
icebp
in
aas
rcrl
xorb
add
adc
push
lock
dec
jl
shl
fisttps
out
mov
mov
inc
loope
and
pop
and
jecxz
cs
xchg
sbb
mov
testb
dec
xchg
mov
push
fadds
jle
fdivrl
outsl
mov
dec
out
out
ret
sub
pop
inc
jmp
cltd
aad
popf
sub
inc
movsb
in
lea
adc
inc
pop
jnp
pop
sub
sub
push
mov
mov
fucomi
clc
mov
popf
daa
popf
leave
loopne
decb
dec
mov
pop
repnz
mov
mov
pop
fcompl
in
gs
jle
ret
adc
out
lcall
jo
in
mov
lods
mov
data16
ret
push
loop
xchg
xor
fnstcw
push
xchg
xchg
test
xchg
mov
icebp
insl
adc
sti
lea
data16
pop
pushf
andb
and
push
ficompl
lahf
pop
and
cs
stc
ret
ds
lret
and
xchg
lds
or
stos
in
mov
sbb
insl
cmc
loop
mov
jne
xchg
jae
fcompl
dec
and
jl
dec
sti
xchg
mov
sub
mov
jnp
push
xlat
adc
int
enter
mov
jle
mov
lahf
idiv
xor
js
out
sbb
mov
inc
pop
cmp
popf
sahf
ja
mov
push
mov
sahf
mov
test
imul
inc
cli
repnz
push
rclb
sahf
and
jo
xchg
jg
enter
mov
jno
sbb
aas
jecxz
shrl
or
mov
pop
in
xchg
dec
in
adcb
fs
les
mov
shr
mov
rcr
push
jge
std
cmp
aam
mov
cltd
xlat
test
and
push
testl
add
and
jbe
dec
in
sarl
jecxz
jle
adc
loope
add
xchg
aas
test
fmull
pop
add
int3
jg
sbb
fcmove
mov
ljmp
ljmp
lret
lods
push
stc
out
sub
clc
ror
inc
mov
and
int3
imul
shrl
mov
mov
cld
xchg
aad
and
mov
jno
dec
pop
or
fs
jmp
enter
in
pop
push
imull
enter
add
and
sbb
shll
push
push
rorl
daa
fbstp
scas
mov
stos
lock
jae
mulb
stos
mov
aaa
cmp
jo
icebp
gs
adc
lods
je
je
xchg
sbb
fsubrp
ljmp
push
jnp
movsb
sbb
fcoml
movsl
sbb
cmc
rol
push
or
mov
gs
es
aad
mov
push
cli
sbb
aaa
mov
arpl
jl
jp
jno
pop
and
push
mov
pop
leave
rcl
pusha
fsubrs
in
sahf
jb
mov
inc
sub
dec
loope
xchg
cmpsl
cmpl
cmc
aas
idivl
sbb
jmp
xor
js
fwait
xor
mov
adc
xchg
push
dec
lret
shll
lret
mov
ja
mov
jmp
aaa
jmp
test
push
aam
or
pop
stc
add
mov
inc
mov
add
loopne
or
xchg
inc
jo
into
xorb
cwtl
aaa
and
out
cmp
jecxz
add
shlb
inc
or
and
hlt
pop
mov
jno
je
dec
sub
mov
sub
dec
push
mov
js
pusha
mov
hlt
pop
ficomps
xor
dec
pop
clc
jp
adc
mov
int3
mov
in
dec
test
addr16
daa
pushl
cmp
ret
lock
and
mov
push
cmpsl
imul
enter
cmp
shlb
mov
scas
dec
aam
popa
repnz
filds
scas
in
pushf
je
mov
outsl
imul
cli
hlt
jns
test
aam
ja
imul
xchg
mov
jb
daa
das
pop
movsl
pop
and
test
popf
or
insl
into
cmp
jle
jg
pop
mov
and
test
insl
fbld
push
mov
mov
pop
rorl
call
jp
dec
mov
cmp
dec
in
adcb
sarl
xor
std
in
aad
ljmp
ret
push
fmuls
jg
and
sbb
cli
fistps
xchg
push
lock
lcall
sbb
dec
inc
jns
jmp
lock
jecxz
mov
dec
or
xchg
movsb
xor
sub
aaa
cli
jbe
mov
cmp
clc
add
mov
lods
jmp
xor
push
dec
scas
out
push
mov
cmpsb
pop
inc
jno
jle
dec
cmpsb
mov
inc
mov
xchg
popf
and
or
shll
sub
sahf
sbb
incb
into
ja
cmp
fcmove
dec
cwtl
xchg
or
jle
cltd
mov
out
and
ljmp
nop
dec
pop
dec
mov
cs
test
xor
in
repz
pop
jns
push
jno
psraw
out
push
sarl
jno
push
and
es
clc
nop
mov
push
dec
xor
incb
add
mov
in
pop
test
int
imul
xchg
add
pop
or
adc
lahf
pushl
popa
sarb
sub
insl
xchg
addr16
push
lret
aam
push
sub
dec
inc
inc
mov
ret
mov
mov
je
push
pop
fldenv
mov
xchg
pop
xchg
pop
mov
mov
jmp
and
or
dec
andb
jne
hlt
call
rcl
les
xor
mov
divl
dec
jne
pop
push
dec
dec
enter
ja
dec
adc
sbb
les
js
xchg
mov
mov
mov
push
iret
add
sbb
push
mov
pop
mov
cmpsb
sub
fsubs
mov
popa
dec
jecxz
and
cld
jno
sub
inc
scas
add
test
jg
lahf
rcrb
mov
pop
mov
or
push
lcall
mov
movsl
adc
dec
test
add
call
leave
mov
call
loope
je
mov
je
pop
pop
adc
xor
xchg
push
dec
mov
lahf
mov
mov
push
or
clc
mov
inc
add
lea
mov
cmp
jge
mov
xchg
adc
pop
loop
and
loopne
jnp
pop
clc
adc
gs
push
ja
mov
dec
xchg
outsb
iret
cmc
jb
inc
and
in
inc
dec
jg
mulb
orb
pop
mov
push
lret
inc
mov
lods
in
in
cld
jnp
imul
sub
aas
mov
aaa
mov
add
xchg
test
cmp
les
push
adc
push
push
sub
or
jmp
vdivss
jle
shlb
mov
jmp
je
sti
cli
jecxz
add
fistpll
jne
mov
pop
sbb
mov
sbb
xchg
push
push
xchg
frstor
inc
lock
stos
push
in
adc
cs
jecxz
push
jmp
sub
lea
subb
lret
sub
sti
sti
lds
push
push
push
push
mov
scas
or
xchg
cmpsl
or
scas
faddl
xor
faddl
adc
and
out
repz
pop
sub
outsb
jb
pcmpeqb
outsl
mov
push
not
pop
or
cmc
mov
arpl
jg
test
mov
lods
cmp
xlat
pop
ret
test
cld
decb
pop
xor
mov
hlt
popa
xchg
test
mov
pop
jle
sub
push
ror
adc
outsb
adc
jae
jns
xchg
pusha
mov
fstps
cli
sub
loope
lods
lea
fidivrl
xor
fwait
mov
aas
push
andb
inc
mov
dec
dec
dec
or
rcr
gs
mov
shll
out
or
jge
stc
iret
and
sub
outsl
mov
clc
fwait
push
dec
addl
pop
inc
jo
and
ret
sub
jb
shrb
aaa
xchg
dec
dec
xor
adc
pop
dec
or
ficomps
cwtl
clc
mov
rcrl
popf
push
out
cld
out
mov
lret
daa
pop
aaa
adc
out
mov
mov
ja
popf
mov
xor
push
addr16
imul
clc
push
lods
and
mov
pop
mov
jp
stos
xchg
mov
jecxz
sub
imul
shl
add
je
cmc
out
loopne
fs
pop
mov
scas
jo
dec
inc
push
sub
jecxz
test
enter
sub
sar
lea
add
clc
cmc
sbb
xor
mov
mov
aaa
or
je
sbb
daa
fldenv
jnp
sub
mov
dec
js
ljmp
mov
mov
ljmp
sbb
inc
inc
mov
push
xchg
fucomi
dec
push
cmpsb
push
ja
xchg
div
and
jge
mov
mov
pop
pop
cmc
mov
enter
xlat
out
jge
xorb
jl
dec
push
test
mov
pop
and
jecxz
mov
fsubr
add
cmc
in
adc
dec
pop
test
shr
adc
test
cmp
dec
sub
pushl
lcall
outsl
dec
test
lds
pop
inc
outsb
and
mov
mov
lea
test
out
dec
cld
jmp
push
in
fwait
pop
loope
sti
aas
ret
negb
adc
cmp
sbb
aad
cld
cmp
mov
and
cs
or
inc
ret
test
jnp
cli
push
out
iret
xchg
push
sub
xchg
jo
test
inc
jge
loope
inc
sub
mov
cmp
icebp
pop
loop
sbb
aam
cmc
jo
jno
cmp
insb
sbb
insl
lds
jno
and
cmp
leave
mov
imulb
clc
shr
push
inc
or
in
pop
dec
pop
les
xor
mov
push
add
mov
iret
sar
xchg
cltd
mov
and
mov
shlb
fildl
jae
sarb
adc
dec
sub
mov
mov
fwait
imul
ret
cmp
push
stos
enter
ja
popf
or
sub
in
cmp
pop
nop
mov
sbb
mov
adc
push
out
mov
stos
clc
cmp
ja
inc
sbb
jnp
sbb
jecxz
js
ds
fcomip
sbb
inc
outsl
ja
mov
and
incb
imul
pop
addr16
idivl
hlt
in
push
cmp
pop
xor
push
stos
clc
es
aaa
jns
call
add
jg
hlt
mov
daa
lcall
dec
sbb
adc
or
xchg
xchg
inc
nop
addl
shll
or
adc
jnp
notb
ja
push
lret
aas
cmp
test
rclb
hlt
fsubrs
mulb
and
cld
retw
cmp
cmpsb
clc
stos
pusha
jne
sub
jp
out
add
sbb
adc
loopne
push
mov
popf
adc
aaa
das
lods
jmp
or
cmpb
add
es
push
adc
xchg
ss
adc
jno
insb
jecxz
jo
mov
lods
test
enter
lods
ljmp
mov
mov
dec
popa
and
ret
inc
sub
mov
out
add
push
cmp
add
cmpsl
dec
xchg
xchg
sub
enter
sbb
cwtl
adcb
enter
imul
xor
adc
loop
dec
nop
shll
mov
dec
dec
push
test
dec
push
cld
sbb
mov
cwtl
lret
dec
aad
lods
daa
testb
aam
pop
std
outsb
dec
cmpxchg
dec
jns
or
push
clc
aam
jmp
out
shrl
and
pop
je
mov
fwait
fwait
je
dec
and
inc
call
mov
rol
xor
sbb
mov
scas
add
mov
fcmovne
cli
test
sbb
sbb
rorb
jle
shrl
mov
fwait
adc
jg
pop
xor
mov
add
cmc
push
sbb
jge
mov
aaa
incl
loopne
and
pop
mov
subb
mov
xor
fnsave
push
push
cmpsl
xchg
into
rolb
sub
enter
mov
jns
sahf
xor
lods
test
add
dec
mov
dec
ja
mov
dec
ja
mov
into
mov
les
xchg
pop
call
ret
sti
dec
xlat
test
pushf
xor
loop
aaa
cwtl
push
push
mov
and
xor
cmpsb
add
icebp
repz
repz
fidivl
shlb
sbb
stos
in
cli
popa
pop
shll
jmp
sbb
mov
push
pop
les
js
cmp
test
ljmp
jmp
scas
xchg
adc
adc
adc
pop
jmp
mov
out
fiaddl
in
inc
sbb
stos
push
pop
cmp
jns
or
clc
es
aas
mov
jl
xor
add
sahf
and
pop
mov
stc
lods
in
les
stc
aam
mov
lds
nop
pop
pusha
int3
addr16
pop
adc
and
lock
sub
jle
ds
push
push
outsb
jo
mov
in
and
test
sbbl
das
xchg
and
push
dec
mov
test
push
stos
sub
mov
push
lahf
pop
mov
test
notl
and
inc
cmpsl
xlat
and
out
push
xor
shll
xor
or
aad
or
cmp
fbstp
cmpsb
add
pop
cld
popf
sbb
push
ret
mov
jb
pop
jp
jnp
insl
mov
mov
mov
sub
xchg
cmc
lea
xchg
sti
mov
rcl
and
and
jo
dec
cs
add
iret
ja
sbb
cmp
inc
or
mov
mov
fcomps
pop
rorb
pushf
cli
jp
adc
addps
mov
insb
lea
neg
scas
mov
mov
push
insl
dec
dec
xor
movsl
and
dec
call
fwait
xlat
adc
push
pushf
aaa
pop
roll
xor
inc
jge
xchg
rol
lds
subb
push
pop
mov
shrb
test
and
xchg
out
pop
mov
sbb
and
jno
mov
push
inc
daa
ret
iret
hlt
pusha
push
test
push
into
lahf
out
xchg
xlat
testb
adc
pop
sbb
rorb
int3
mov
mov
mov
insl
push
mov
insb
jle
pop
or
jne
push
shrl
repz
int3
xchg
sub
push
push
push
push
gs
test
ljmp
aaa
pop
dec
ljmp
pop
xchg
aaa
test
enter
push
jnp
push
je
push
or
outsb
cmp
mov
mov
clc
sub
xchg
cmp
adc
push
sets
test
cwtl
dec
enter
shrl
mov
mov
scas
and
leave
dec
fsubs
lcall
imull
bound
cltd
dec
jl
sbb
mov
jae
scas
push
fmul
fcoml
std
push
dec
or
enter
mov
add
mov
into
xchg
stc
scas
jnp
cmp
push
adc
push
xor
mov
popf
mov
mov
ds
mov
xchg
mov
or
jnp
cs
das
nop
imul
fwait
repz
lret
mov
or
cmpsb
lahf
cmp
jne
out
push
out
push
testl
xchg
mov
mov
pusha
jle
pusha
add
out
cmp
cld
push
sub
xor
and
lock
xchg
lea
sbb
mov
pop
lcall
int
pusha
je
xor
adc
orb
cmp
jge
xor
jb
xor
jmp
xchg
lcall
jge
cmp
xchg
mov
test
add
push
push
out
xchg
leave
xor
filds
inc
nop
aas
mov
mov
xchg
mov
fisttpl
cmp
movsl
push
push
push
negl
mov
out
push
push
stos
stc
pop
scas
or
sbb
mov
mov
fiadds
and
mov
cmp
out
mov
bound
cmpsl
push
div
cmp
fmull
xchg
js
xchg
iret
scas
sbb
jg
mov
jbe
aad
mov
into
shlb
ret
fdivrp
adc
push
dec
and
xlat
jp
sub
mov
popl
pop
jo
into
lods
testl
push
push
cmp
out
xchg
mov
cmc
inc
popa
sbb
mov
jbe
jo
and
sbb
mov
xchg
out
sub
bound
leave
jnp
cmc
lods
mov
iret
repnz
mov
adc
adc
imul
insb
jg
pop
in
jg
das
shrb
cmc
adc
cmp
push
loopne
mov
jae
cmpsb
repnz
inc
xor
test
sarl
insb
loope
shll
rolb
xchg
pop
insl
fldt
es
movl
add
add
mov
add
mov
add
add
jecxz
mov
loope
shlb
add
fldl
add
fdivl
add
jecxz
lret
add
add
add
leave
mov
mov
mov
iret
leave
test
add
add
mov
add
add
add
test
add
int3
jecxz
test
mov
mov
add
add
lret
add
add
add
add
enter
lret
int3
cmpsl
into
test
mov
add
in
leave
add
add
cmpsl
mov
cmpsb
in
add
int3
lret
add
add
add
in
lret
mov
add
add
add
add
mov
in
enter
iret
add
add
add
add
push
imul
jmp
xor
out
jns
inc
xchg
adc
mov
repnz
add
add
jbe
push
cmp
mov
pop
mov
mov
int3
ret
mov
adc
mov
sub
add
add
pop
xchg
call
rclb
xchg
lret
add
add
add
add
add
add
add
add
add
and
add
addb
add
add
adc
add
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
addb
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
inc
add
xor
push
xor
or
inc
add
inc
add
xor
pop
dec
inc
add
inc
add
jbe
insb
imul
and
jae
je
outsl
outsb
add
jb
outsb
and
outsl
and
add
add
xor
add
inc
add
and
insb
outsl
arpl
imul
insl
loopne
add
add
add
add
add
add
add
add
pushl
inc
inc
add
dec
inc
add
inc
add
dec
inc
add
inc
inc
add
inc
add
imul
outsb
and
arpl
je
outsl
outsb
add
add
inc
add
inc
add
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
inc
add
incl
add
add
inc
add
add
add
dec
inc
add
add
dec
inc
add
add
add
call
inc
add
inc
add
add
add
decl
inc
add
add
add
incl
add
add
dec
inc
add
add
add
inc
add
inc
add
mov
dec
inc
add
add
add
jmp
inc
add
add
add
jmp
push
inc
add
push
inc
add
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
add
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
pushl
inc
add
inc
add
add
add
mov
pusha
inc
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
add
add
jmp
js
add
outsl
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
jp
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
call
xchg
fildl
call
test
fadds
jmp
xchg
add
add
pushl
inc
add
inc
add
add
add
call
mov
add
dec
add
add
inc
add
add
add
inc
push
push
insl
or
data16
mov
push
out
add
add
inc
cmp
imul
imul
insl
popa
push
imul
popa
ja
jo,pn
bound
add
add
add
add
add
incl
add
add
add
add
add
add
add
incl
add
add
add
add
inc
add
add
add
add
movsb
ret
mov
inc
add
ret
add
add
add
add
incl
add
add
add
add
dec
inc
add
inc
add
add
add
dec
inc
add
ret
cld
dec
inc
add
ret
add
add
add
add
incl
add
add
add
add
dec
inc
add
inc
add
add
add
dec
inc
add
ret
dec
dec
inc
add
inc
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
inc
add
ret
inc
add
incl
add
add
add
add
add
add
add
int3
dec
inc
add
inc
add
dec
inc
add
add
add
add
dec
inc
add
inc
add
add
add
add
add
add
incl
add
add
add
add
inc
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
insb
ret
inc
add
ret
inc
add
add
add
add
add
incl
add
add
add
add
inc
add
add
add
add
dec
inc
add
dec
inc
add
add
pop
add
insb
inc
add
sbb
add
mov
add
mov
mov
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
push
inc
add
add
add
int3
push
inc
add
add
add
inc
add
decl
xchg
sbb
add
add
inc
add
add
incl
add
add
add
clc
inc
inc
add
add
add
add
incl
add
add
add
add
xor
add
add
in
inc
add
add
add
incl
add
add
add
add
inc
add
add
add
inc
add
add
shlb
add
add
add
push
inc
add
lcall
add
add
clc
push
inc
add
pushl
add
add
sbb
inc
add
ret
add
add
incl
add
add
add
add
add
add
inc
add
push
inc
add
add
add
add
add
add
inc
mov
xchg
sbb
add
add
add
inc
add
add
add
incl
add
add
add
and
add
add
add
push
inc
add
add
add
xor
add
add
mov
add
add
dec
add
add
nop
push
add
add
add
add
add
add
add
push
push
add
mov
add
jp
add
xchg
add
dec
sbb
add
push
add
movsl
push
add
stos
push
add
add
add
add
add
push
jne
outsl
cs
add
addr16
insb
add
jns
add
outsb
jns
popa
imul
faddl
add
lock
inc
add
jge
add
add
add
add
add
add
add
add
outsl
fs
add
add
push
add
add
add
fsubl
mov
ret
daa
adc
cmp
pop
lret
push
js
repnz
pop
movb
popf
lret
bound
adc
xchg
push
stc
shl
out
add
decl
enter
mov
pop
xor
inc
xchg
sti
xor
inc
push
cmp
out
dec
jmp
mov
fstpl
pop
mov
or
add
xchg
lds
mov
xchg
sti
pop
xchg
loope
pop
aad
les
push
fwait
test
sar
ds
cmovl
pop
add
cwtl
je
inc
jne
lcall
test
jne
inc
add
fldenv
sti
jl
mov
add
rolb
dec
dec
outsl
pop
inc
jle
in
jge
loope
sub
xchg
call
out
or
jo
addr16
dec
mov
je
aas
mov
das
loopne
scas
cmp
push
scas
test
inc
data16
inc
mov
das
cmpsb
fwait
cmc
jecxz
pop
xor
push
and
sub
xlat
jmp
ja
aaa
mov
xor
adc
jge
ret
movb
add
fidivrl
adc
or
push
lds
sbb
imul
out
mov
mov
adc
or
jnp
enter
mov
jne
loope
fidivrs
push
push
push
cmp
adcl
dec
mov
mov
mov
pop
mov
sahf
stc
cmc
lea
jl
jnp
scas
addb
mov
js
cmp
ds
js
add
fbld
daa
icebp
adc
lret
xor
lahf
cmp
add
and
inc
rorl
ret
mov
mov
push
mov
mov
test
idivb
sub
sbb
and
inc
dec
popf
call
shlb
lret
insl
pop
xlat
call
aas
mov
adc
aas
pop
jle
mov
fiadds
jle
adc
mov
daa
lods
cmpsl
mov
mov
lret
push
inc
je
adc
out
xor
push
xchg
xchg
lcall
stos
xchg
push
inc
cltd
popf
into
arpl
es
jle
push
out
push
adc
inc
dec
test
fs
inc
xor
xor
gs
movsb
jbe
xchg
add
jb
fwait
mov
jmp
nop
adc
xor
test
lock
jne
xchg
push
mov
jno
lock
popa
mov
push
lcall
or
gs
dec
pop
pop
stos
xchg
mov
mov
or
movsl
jne
pop
movsb
mov
ss
jge
pop
pushf
mov
pop
sti
jecxz
adc
pop
test
pop
in
adc
cmp
test
jmp
pop
or
test
dec
mov
jmp
aad
cs
icebp
repnz
inc
imul
pop
test
insb
pop
xchg
sbb
mov
jg
adc
pop
fdivrp
adc
cmc
addr16
jp
repz
mov
inc
sbb
adc
lahf
or
adc
xchg
mov
sbb
lret
mov
lcall
lock
lahf
cmc
lahf
mov
pop
add
mov
stos
pop
popa
adc
cmp
mov
divl
or
lret
jno
gs
and
gs
mov
pop
mov
call
sti
fwait
inc
mov
mov
sahf
xor
popa
push
cmp
lret
lret
iret
lret
jge
stos
int
mov
xor
cltd
inc
mov
adc
mov
cmp
movsl
shlb
inc
pusha
push
mov
notb
imul
xor
icebp
int3
xchg
jmp
clc
push
stos
call
mov
sub
mov
popf
xchg
insl
inc
cmpl
dec
repz
ljmp
push
add
roll
xor
mov
lcall
adc
add
pop
out
mov
sbb
not
cs
xchg
dec
pop
cld
outsl
repnz
cmc
add
cmp
or
jmp
mov
cmc
or
mov
bound
add
test
out
mov
xchg
fwait
sub
add
lret
mov
jecxz
dec
or
jg
hlt
loop
bound
dec
mov
adcb
ret
out
ret
mov
xor
movl
push
add
xor
loope
inc
rclb
jmp
cli
addl
jmp
int
ret
jp
xor
xor
jp
cmc
mov
push
loope
ss
cmp
ficoml
or
xchg
inc
repz
xchg
dec
pop
repz
testl
lods
cmpsl
testl
xchg
aas
adc
mov
pop
jp
push
outsl
lret
out
xchg
inc
ss
jbe
adc
cmc
mov
in
dec
mov
xchg
in
mov
sub
test
adc
hlt
stos
les
mov
inc
cmp
adc
inc
jmp
iret
add
push
out
packsswb
mov
mov
push
sahf
xlat
rolb
sub
jnp
sahf
out
adc
addr16
jne
xchg
shl
jb
mov
mov
pop
enter
into
sub
and
cmpb
sbb
inc
adc
inc
add
test
fisttpll
or
adc
outsl
arpl
data16
lea
pop
inc
push
out
popf
inc
or
iret
xor
out
aas
mov
mov
sahf
addr16
push
jno
xchg
in
cmp
call
mov
cli
xlat
jp
es
and
sbb
and
xchg
pop
hlt
xor
cmp
mov
imul
mov
sbb
test
sbb
inc
fcoml
mov
hlt
sub
test
adcb
mov
cmp
or
std
mov
hlt
inc
imul
add
xor
mov
pop
sbb
mov
ds
sahf
dec
and
clc
cmp
mov
popf
je
mov
jo
jecxz
inc
sbbb
stc
sbbl
sub
cwtl
push
mov
cmp
popa
mov
cmpsl
pop
push
push
aam
outsl
in
mov
lods
xor
or
xchg
insl
out
mov
jne
es
int3
movsb
push
xchg
and
jne
ds
cs
cmp
cmp
xor
rcrl
aas
stos
xchg
popa
ss
inc
popf
addr16
push
cmpsb
jno
mov
scas
add
dec
sahf
ret
push
push
mov
arpl
stos
ss
xchg
repz
leave
xchg
adc
inc
cmc
inc
pop
jmp
mov
imul
pusha
mov
in
shl
incl
popf
or
dec
popf
mov
mull
push
dec
popf
call
jg
popf
inc
jl
outsl
mov
and
pop
xlat
call
and
insl
xor
push
sbb
sbb
nop
mov
movsb
jg
out
popf
adc
sbb
pop
push
das
inc
inc
test
jno
in
dec
test
insl
pop
popf
xchg
mov
pop
mov
mov
xor
cmpl
jne
adc
dec
je
dec
cltd
mov
dec
lahf
adc
push
hlt
movsl
pushf
in
inc
js
push
add
sbb
loopne
js
imul
sub
xor
xchg
cmp
add
jo
das
jl
imul
into
jb
push
inc
insl
mov
sbb
fisubs
ficoms
imul
insl
pushf
sti
mov
push
or
pop
cmp
push
cmpsl
fsubrl
je
jmp
ret
test
lcall
les
sub
or
das
addr16
push
cltd
mov
sbb
test
js
mov
mov
mov
popf
hlt
mov
mov
mov
lock
push
or
lcall
repnz
dec
or
inc
xor
arpl
pop
mov
xchg
in
push
aad
int
mov
push
sbb
rorl
adcl
pop
in
fisttpl
adc
xchg
cwtl
ret
mov
bound
bound
mov
jle
inc
lods
out
and
pop
shll
mov
push
aaa
add
dec
lods
cvtdq2ps
mov
andb
das
and
test
pusha
mov
sbb
das
mov
decb
lods
shl
push
nop/reserved
sub
xor
adc
xchg
inc
sub
stos
or
int
mov
cmp
xor
adcl
cli
sub
cmp
inc
pop
or
mov
lret
dec
clc
jmp
lahf
cmc
outsb
test
sbb
jb
movb
in
or
cmp
rcrb
add
inc
outsl
cli
and
mov
popf
leave
aad
mov
jns
or
xchg
pop
jg
insl
and
sbb
mov
xchg
push
adc
or
fisttpll
push
mov
pop
loopne
pop
roll
dec
mov
clc
push
jbe
cld
push
inc
mov
repz
iret
mov
jne
ja
xchg
jg
jae
in
push
sbb
movsb
push
pusha
aad
mov
sti
jle
push
dec
xor
mov
je
sti
add
mov
push
outsb
lods
jp
mov
fiadds
add
fsubs
daa
lret
jg
ret
mov
scas
fsts
adc
inc
cs
mov
xchg
jle
mov
or
jb
lret
cmp
mov
pusha
fldenv
mov
cmp
pop
inc
inc
fcmovbe
clc
mov
mov
mov
inc
sbb
cmp
pusha
out
lret
fwait
mov
sbb
lock
fidivrs
lret
repnz
push
pop
add
sub
dec
out
enter
cmp
fcmovnb
and
push
scas
sbb
sub
outsb
adc
fsubrs
adc
stos
sahf
inc
sbbb
sub
push
aas
xor
pop
stc
insb
pop
les
xor
gs
jo
hlt
out
push
push
iret
js
pop
dec
xor
pop
jne
popf
mov
ljmp
in
lcall
call
hlt
fcmovbe
sub
std
dec
test
notl
je
cmpsl
push
shrl
jg
jno
add
xchg
ja
movsl
js
xchg
prefetchnta
cmc
and
shll
or
es
cmp
sarl
int
dec
leave
jb
mov
mov
xchg
xchg
cmpsl
sub
xor
out
mov
lahf
mov
popa
out
xor
scas
out
add
roll
or
add
loopne
leave
imul
loope
jecxz
test
roll
push
push
or
in
xchg
jb
push
push
ljmp
sbb
cmpsb
ds
out
test
shlb
lahf
xchg
clc
pushf
repz
and
mov
test
adc
bnd
pop
mov
fldt
push
adc
mov
xor
leave
jle
aaa
out
test
shlb
lahf
mov
in
inc
push
push
shll
cltd
shlb
jnp
sahf
dec
subb
aaa
ljmp
xorl
cmp
test
das
lea
pop
aas
add
negl
cmp
test
xchg
aas
mov
inc
test
cmp
or
icebp
popa
icebp
dec
and
mov
fildll
int3
popf
test
fldenv
aam
mov
frstor
movsl
in
pop
mov
jl
mov
mov
lcall
mov
jo,pt
incb
pop
outsb
testb
daa
mov
loope
mov
out
ljmp
sarb
xor
and
stos
pop
xchg
loopne
xlat
sahf
mov
dec
hlt
xchg
or
popf
add
bound
push
mov
lcall
aam
adc
or
imull
push
in
nop
jno
test
jmp
jl
ret
cmc
gs
jnp
mov
test
imulb
push
mov
jl
int
add
push
and
xchg
neg
push
sub
sti
mov
repnz
pop
ret
sarl
scas
jns
pop
xlat
mov
dec
movsb
jno
test
clc
out
lds
cmp
mov
push
shr
mov
mov
sbbb
testl
jae
bsr
js
enter
int3
add
pop
into
add
adc
inc
inc
mov
repz
adc
subl
incb
push
sub
js
cmp
outsl
inc
adc
jbe
mov
dec
popa
ja
cmp
mov
pop
mov
arpl
mov
mov
and
adc
cld
lods
popf
js
inc
mov
pushf
mov
aaa
adc
mov
out
aaa
insb
mov
sub
jne
pop
push
fisubl
js
push
cmp
mov
and
sti
les
mov
imul
insb
sbb
dec
addl
into
mov
rcrb
test
scas
pushf
sbb
push
sahf
sbb
adc
mov
pop
jb
or
sub
xchg
cmc
dec
shrl
sub
push
cld
pop
mov
sahf
or
icebp
int
or
or
mov
outsb
cld
add
xchg
mov
jbe
lds
cwtl
mov
test
push
cmp
insl
dec
jno
mov
test
sbb
sbb
xchg
xor
jmp
rorl
add
scas
pop
mov
cmp
iret
in
add
and
sbb
mov
jmp
jmp
lahf
mov
fwait
test
rcrl
xchg
repz
push
les
and
adc
dec
adc
repnz
insl
push
mov
subl
inc
pop
sub
test
hlt
sub
insb
fcompl
push
and
outsl
lcall
jmp
cli
mov
jns
ret
add
push
call
adc
mov
pop
mov
les
sub
daa
push
sti
lods
int3
mov
push
cli
pusha
cmp
stos
cs
cmp
stos
aad
adc
in
push
je
cmp
sahf
jge
daa
cwtl
dec
jl
jnp
out
jb
xchg
push
xchg
imul
jb
push
cmp
repz
and
push
mov
test
jae
out
sub
test
addb
sub
inc
cmpsl
mov
and
repz
xchg
stos
adc
and
push
mov
xlat
out
add
cmp
in
outsl
ret
xor
loopne
clc
fmul
dec
inc
jge
je
cli
rcll
scas
mov
inc
fstl
lods
movsl
jecxz
xchg
inc
cmpb
shlb
ficoms
sub
dec
push
pop
cmp
in
xlat
popf
out
push
icebp
xorb
dec
add
cmpsb
jge
int3
push
cld
stos
mov
mov
pop
pop
outsl
shl
cmp
jns
push
fwait
dec
push
hlt
test
lock
jle
mov
call
push
xchg
mov
repnz
test
lret
xor
testb
mov
and
pop
xor
outsl
nop
mov
or
addl
fisttpl
xchg
pop
dec
dec
shrl
ret
int
mov
inc
sbb
fadds
and
mov
pop
mov
lea
enter
fistl
enter
test
movsb
cltd
clc
je
push
arpl
adc
sub
cmp
add
push
gs
xchg
ljmp
addr16
jnp
push
lods
xchg
dec
lock
jecxz
and
leave
repz
cld
jmp
jns
jl
mov
js
xchg
popaw
icebp
stos
cmp
adc
cmpsl
push
pop
inc
xchg
in
add
loope
mov
or
mov
pop
sub
push
lds
adc
xchg
sbb
lea
dec
and
in
mov
jns
fistpl
and
fnstenv
stos
add
imul
xchg
cmp
lock
rcr
jl
shl
test
sbb
push
call
add
in
outsb
outsb
xchg
mov
add
sub
inc
cmp
int
aad
or
pop
cmp
pop
fs
and
add
stc
push
cwtl
inc
out
fs
xchg
mov
jge
cwtl
push
and
call
adc
push
pavgw
sub
jnp
dec
push
cmp
icebp
cmp
ja
loope
test
xchg
xor
cmp
add
mov
jmp
jb
jecxz
cli
cs
cmp
inc
fwait
and
push
into
add
lret
push
pop
dec
mov
adc
adc
cmc
mov
pop
sahf
jl
dec
sub
scas
movsl
sub
aad
or
shll
outsl
in
mov
jb
xchg
fbld
data16
stos
xchg
lret
test
js
adc
scas
ja
pop
cmp
lret
push
sbb
jle
mov
push
sbb
sbb
out
cmc
mov
cmp
pusha
adc
rdmsr
sahf
es
adc
jmp
data16
jge
sbb
mov
dec
xchg
sub
cmp
lret
sbb
loopne
aam
push
cmpb
xor
push
push
xchg
and
lret
lcall
stos
ret
enter
lock
hlt
data16
arpl
imul
cltd
jnp
enter
call
mov
and
mov
repnz
sahf
dec
push
and
adc
popa
add
jle
in
add
pop
sti
cmp
mov
or
sub
jge
xorb
push
cwtl
jae
adc
movsl
mov
ja
loopne
pop
add
fs
mov
xchg
push
lods
mov
cmp
out
dec
sbb
mov
push
and
pop
shl
pushf
roll
xor
ss
xchg
push
mov
pushf
in
inc
jbe
jno
xchg
adc
popa
and
jae
outsl
and
cs
cmpsl
pop
and
and
ss
mov
pop
repz
xchg
jb
out
push
incl
ja
mov
insb
or
sbb
jg
testl
mov
out
jecxz
rcrl
mov
xchg
shlb
mov
and
sarb
cmc
push
mov
mov
mov
pop
mov
hlt
jbe
push
adc
mov
or
jge
lret
cmpl
push
fsubrl
inc
nop
scas
sub
jns
jle
pop
scas
cld
pop
mov
pushf
sahf
rcrb
repnz
push
push
pop
adc
mov
pop
stos
xlat
add
cmp
inc
pop
jb
xor
xorb
mov
cmpsl
int
outsl
aas
xor
sub
fdivrp
std
cld
mov
mov
jmp
pop
or
or
xor
in
addr16
mov
xor
out
xor
or
add
fnstsw
cmp
add
sub
lret
jge
out
mov
xchg
jge
jnp
scas
call
mov
mov
iret
les
push
mov
pop
int
std
mov
in
stos
jle
call
xor
pop
xchg
push
or
sub
sbb
inc
popf
pop
mov
mov
jl
rorb
add
imul
cmp
outsl
sub
mov
jne
int3
lret
cli
jbe
pop
dec
sub
dec
add
daa
cs
jl
jns
pop
add
movsl
and
mov
es
int3
push
sahf
xchg
pushf
jae
adc
push
pushf
mov
in
lar
and
jge
xor
adc
in
dec
pop
daa
lret
hlt
outsb
aaa
and
aad
pop
inc
subb
adc
pushf
push
pop
into
jmp
test
xchg
jmp
ret
aaa
ja
push
dec
hlt
sbb
mov
lods
xchg
push
xchg
imul
hlt
inc
jne
lods
daa
inc
push
lahf
mov
sti
xor
adc
push
lea
and
push
mov
pop
xor
mov
scas
dec
xchg
mov
add
aam
adc
and
mov
cmp
mov
cmp
jnp
sarl
mov
pop
imul
mov
sti
cmc
mov
out
push
aas
pop
fisubs
mov
popf
fdivl
jl
lds
dec
jae
jns
lcall
insb
fistpl
subb
sub
push
out
sti
ret
setp
sbb
cltd
mov
jecxz
inc
cmp
lea
repnz
push
into
ja
repnz
mov
ja
pop
setnp
jmp
mov
jo
push
push
arpl
and
cltd
pop
enter
jbe
mov
xorb
cmp
mov
test
push
or
int3
rorl
xor
cmp
mov
cli
sbb
dec
aaa
pop
mov
in
cld
daa
rorb
int3
fisttps
dec
insb
mov
jge
bound
lcall
inc
negl
ja
fnstcw
loopne
push
imul
push
inc
imul
iret
inc
fcomps
fucompp
les
cmp
mov
andl
jle
in
ret
std
fdivl
or
pop
mov
aaa
sbb
cmp
pop
je
cmpsl
jo
and
jecxz
rol
or
int
in
pushf
int
mov
outsb
sub
push
add
shrb
push
roll
cli
in
bound
xchg
mov
and
adc
jl
fwait
add
jnp
sarl
inc
add
std
mov
pop
filds
pushf
shl
ret
pushf
mov
test
push
mov
xor
mov
cmp
jns
test
add
and
mov
js
test
add
rolb
xor
in
sbb
psubw
sub
enter
cmp
fidivs
inc
jo
mov
mov
ret
incb
stos
and
lea
icebp
sub
mov
push
in
test
jecxz
ror
pushf
sub
and
xlat
out
sbb
loop
iret
out
fsubrl
fwait
je
daa
xor
push
cli
lret
das
insl
fwait
lock
fiaddl
addr16
jbe
aad
in
cmc
adc
pop
cmc
jle
lret
outsb
xor
sub
jl
mov
or
jl
jne
div
scas
mov
dec
and
mov
jge
pop
data16
shll
js
imul
jl
xchg
cld
mov
dec
mov
sub
inc
pop
cmp
popa
jmp
mov
xor
adcb
push
leave
mov
inc
xor
ret
mov
cmp
sbb
scas
test
push
push
unpcklps
rep
fs
scas
cltd
jnp
push
lods
mov
sahf
push
xchg
mov
insb
addr16
das
add
mov
xor
mov
push
loopne
in
lods
sub
gs
fwait
mov
and
push
js
in
xchg
cwtl
dec
jmp
xor
mov
xchg
lock
and
lods
fstp
int
jl
xor
test
call
testb
mov
fidivs
mov
mov
and
inc
dec
mov
les
cmp
stc
sti
pop
xor
aad
aas
cmp
or
or
ds
outsl
test
das
repz
fcomps
sbb
mov
fs
jp
xchg
lret
mov
mov
je
cmpsl
lcall
mov
loopne
or
dec
add
ds
gs
push
movsb
jno
xor
add
adc
dec
push
fisubrl
enter
mov
std
cmc
mov
mov
cmp
sbb
ds
push
sub
or
js
jns
mov
fidivs
cmpb
pop
push
test
das
cmp
cmp
rcrb
lret
xchg
mov
pop
cmp
subb
fistpl
inc
int3
mov
push
jnp
xor
rcl
cmp
outsl
ljmp
lret
movsl
or
dec
out
ljmp
outsl
sbb
or
cld
ret
pushf
sbb
pop
out
andl
mov
pop
mov
adc
lahf
scas
bound
jg
jnp
sbb
cmpsb
add
pop
cmpb
mov
pop
pusha
cmp
mov
and
les
sbb
cmp
or
sbb
shl
int3
sub
jle
sub
fs
inc
add
push
adcl
xchg
add
cmp
dec
adc
push
cld
sub
stos
in
fwait
dec
aad
cmpsl
shl
addl
push
out
mov
or
inc
sbbl
xchg
cmpsb
mov
addb
lods
mov
shl
sbb
and
les
xlat
adc
inc
or
xorb
int
mulb
inc
dec
rorb
lock
push
cmc
fcoml
test
rclb
jg
and
add
pop
cmp
mov
je
pop
ror
sbb
adc
adc
aam
cmp
das
test
mov
push
pop
xor
pusha
hlt
aad
mov
dec
repnz
cmc
dec
mov
test
shrl
ja
fwait
lock
leave
enter
push
repz
out
add
std
pop
lea
xor
bound
cmp
xchg
xchg
jns
js
pop
cmp
cld
out
add
adc
aad
aad
mov
push
mov
mov
sahf
outsl
xchg
mov
dec
outsb
dec
pop
mov
rclb
in
dec
dec
int
and
std
mov
scas
fldenv
stos
cwtl
mov
or
mov
xchg
jno
insb
mov
test
fwait
jp
inc
outsl
adc
inc
clc
jmp
jb
rsm
push
sbb
and
jl
push
sub
sub
inc
lods
mov
jae
test
inc
pop
jb
aas
loopne
fsts
popf
test
test
lahf
cmp
dec
xchg
xor
xchg
sahf
pop
dec
mov
dec
xchg
push
pop
dec
in
jb,pt
sahf
dec
pop
sbb
mov
dec
inc
mov
lahf
cmp
arpl
adc
shll
push
test
icebp
and
pusha
iret
jns
pop
dec
sub
mov
and
adc
jl
and
loope
arpl
dec
mov
data16
add
add
pop
jns
test
jp
jmp
aam
cmp
sbb
cwtl
add
call
aaa
lods
sbb
mov
lods
adc
push
outsl
jbe
outsl
adc
fstps
and
testl
cmp
add
push
ret
add
lahf
orb
jg
mov
add
sbb
push
cs
jmp
imul
les
cli
lods
adc
sub
ds
pop
jl
mov
ror
sarl
jp
jno
cmp
mov
cld
pop
add
inc
lret
mov
loopne
cmp
push
and
dec
sbb
sub
in
adc
xor
mov
sarb
adc
ret
insl
jnp
sbb
imul
add
int3
fcmovne
loope
push
sub
mov
or
fsts
or
shrl
mov
ljmp
mov
jge
jg
inc
pop
mov
xchg
add
test
mov
mov
or
jl
push
pop
mov
jbe
jns
jge
fs
call
jmp
lea
inc
ret
popf
clc
and
push
lods
lock
testl
jmp
ss
sar
mov
pushf
push
jns
movsb
dec
fisubrs
fwait
jns
cmp
inc
inc
ret
push
mov
iret
ja
xlat
mov
mov
xor
pop
mov
nop
xor
sub
movsb
jl
ss
mov
negl
jne
push
jb
xchg
insb
stos
xor
js
les
inc
mov
std
mov
xchg
pop
aad
mov
cwtl
jge
xchg
xchg
cmp
mov
push
adc
scas
cmp
inc
outsl
jmp
lret
scas
repz
orb
xor
dec
aam
push
lret
sahf
mov
mov
jno
int3
push
push
jbe
mov
cmc
and
test
fisubl
sbb
fstps
es
ja
aam
and
jl
add
lods
push
lods
jo
insl
cld
xchg
xchg
or
cmp
dec
cli
lret
jo
mov
pop
sti
clc
dec
cmpsb
cltd
add
mov
ficoms
push
inc
fs
dec
in
insb
pop
dec
cltd
mov
pusha
mov
out
cltd
mov
hlt
dec
add
loop
sti
xchg
xchg
mov
xor
sti
adc
sub
dec
sti
mov
cmp
ds
pop
clc
mov
pop
insl
adc
sbb
add
lret
sbb
jb
loope
iret
adc
ljmp
sbb
test
dec
dec
clc
xorb
dec
mov
sub
mov
mov
or
or
stos
pusha
mov
inc
aad
insl
clc
push
imul
dec
or
push
cmp
je
popa
fldcw
inc
ja
xchg
jge
cmpsb
movsb
leave
rol
jecxz
nop
xor
fwait
inc
adc
icebp
jns
xor
push
repz
sub
cmp
inc
sbb
je
leave
inc
cmp
lcall
jecxz
aaa
xchg
jno
sub
ret
bound
cld
pop
out
leave
sub
and
int3
out
fdiv
call
sbb
mov
jb
sbb
fistps
out
outsb
sbb
mov
inc
inc
xchg
push
push
cmp
je
xchg
pop
cmpsb
mov
mov
iret
xchg
loope
popa
sbb
mov
out
arpl
jne
enter
push
sbb
test
popf
insb
push
jg
push
mov
mov
dec
jecxz
lcall
test
shlb
pop
imul
popf
pop
adc
ljmp
mov
adc
or
sub
fistpl
push
xchg
stos
imul
sbb
rolb
inc
jp
dec
add
js
int3
cwtl
scas
repnz
test
stc
adc
and
push
sbb
mov
in
xor
js
rorl
add
adc
fstl
xchg
addl
cmp
stc
jmp
sbb
xchg
jmp
ljmp
cltd
lods
fcompl
call
jp
add
std
popa
out
sbb
inc
xchg
push
stos
or
addr16
jae
mov
arpl
aas
sahf
dec
xchg
mov
pop
cmpb
subb
dec
jle
std
push
jg
dec
fadds
sub
pop
enter
inc
test
lock
and
sbb
repnz
fs
ficompl
mov
cmp
fisttpll
cmp
nop
movsb
xor
mov
push
scas
loop
lcall
in
ljmp
fld
xchg
jns
mov
enter
mov
add
xor
repz
aad
add
out
or
dec
pop
loop
inc
lea
and
cltd
repnz
insl
or
xchg
mov
mov
ret
ret
cli
mov
clc
add
jbe
push
mov
mov
movsb
mov
dec
bound
xor
push
pop
mov
and
stos
out
std
adc
shl
scas
cmpb
lret
adc
cmp
pop
add
push
gs
into
in
fdivr
popf
dec
mov
fldcw
sbb
xchg
ljmp
cmp
push
testl
mov
inc
data16
adc
cmp
cld
adc
loop
lods
xlat
xchg
xchg
mov
cmp
jmp
testl
pop
xchg
cltd
inc
xor
xchg
mov
sub
shl
and
adc
les
pop
jns
mov
imul
fistpl
test
rcrb
adc
sbb
xchg
mov
inc
sub
shll
lea
jl
fstl
lods
push
mov
sbb
mov
repnz
or
shll
and
xchg
shll
loope
scas
cmp
ljmp
mov
cmp
cmpsl
call
shrl
dec
sbb
stc
cli
insl
mov
mov
loop
icebp
push
adc
pop
hlt
mov
ds
adc
sub
xor
inc
movsb
push
sbb
jno,pt
int3
cmp
xchg
mov
test
lret
jne
push
std
das
popa
add
data16
mov
mov
shlb
out
aas
shlb
cmp
cmp
shll
xor
push
push
cmp
test
jmp
movsb
hlt
outsb
rclb
pop
xchg
jle
sub
dec
lea
jge
sbb
mov
lret
lds
loop
out
dec
mov
pop
add
xor
rclb
dec
jecxz
addr16
sub
mov
clc
ja
jns
bound
or
daa
daa
adc
pop
ret
inc
popa
xchg
add
or
sbbb
dec
sbb
orb
pop
inc
aad
add
jns
test
sar
shll
mov
fstpl
mov
cld
lods
gs
mov
clc
outsb
and
push
test
cmpsb
sahf
push
push
test
fs
inc
decl
mov
lock
xchg
js
add
aaa
inc
das
add
out
pop
push
lea
in
inc
dec
xlat
and
mov
ljmp
ds
mov
xchg
es
adc
aad
fnstcw
xor
inc
ret
jnp
pop
repz
jne
std
rcrb
ss
pop
lds
add
outsl
test
lock
ds
stos
push
xchg
cwtl
dec
test
mov
sub
jns
mov
cltd
mov
cmp
adc
fsubrl
xchg
sub
sbbl
lcall
out
ss
push
sub
test
dec
shl
mov
lret
pop
jnp
decb
icebp
cmp
mov
mov
push
andb
xor
jl
movsl
sub
jb
push
xchg
push
sti
xor
popf
push
out
pop
mov
xchg
int3
cmp
pop
xchg
and
sub
into
daa
cltd
or
add
inc
outsl
es
xchg
pop
in
popa
adc
test
lea
adc
push
das
jmp
movsl
movsb
xor
outsl
pop
sub
xor
and
cmp
insl
jge
and
sbb
sahf
and
jb
repz
mov
or
push
out
rclb
push
cmc
push
add
shlb
jmp
andb
inc
insb
fldl
insl
inc
xor
loop
mov
cld
and
je
add
cmp
rcl
fsubs
xchg
jns
aas
lods
arpl
scas
in
ret
sbb
and
out
sub
mov
das
and
xchg
xor
xchg
add
mov
mov
mov
mov
mov
pushf
decl
push
lock
fbstp
ds
out
add
jecxz
add
dec
jmp
inc
xor
xor
out
jmp
mov
cmp
insb
inc
adc
outsl
inc
and
adc
mov
fstpt
push
mov
xchg
inc
popf
or
pop
icebp
push
push
lret
inc
xor
fs
xchg
or
push
pop
push
incb
in
pop
pop
xchg
movsb
mov
mov
adc
jb
iret
push
in
rclb
jo
mov
xlat
xlat
loope
add
jp
or
out
xchg
xor
cmp
and
shll
or
sahf
mov
add
stos
int3
sbb
popf
xchg
popf
outsl
push
shrb
rolb
ja
push
xchg
fwait
inc
mov
shlb
je
in
aaa
cmp
sbb
stos
enter
ret
mov
andb
dec
and
mov
enter
xchg
mov
lods
stc
mov
aam
and
inc
mov
or
int3
sub
inc
inc
adc
ds
fs
dec
pop
loope
sbb
outsb
call
mov
push
cmp
leave
rcll
popl
mov
mov
mov
movsl
inc
pop
lahf
mov
cmp
and
or
sub
shll
sub
sub
movsl
lret
mov
mov
int
insl
xchg
push
xorb
cmp
mov
lahf
pop
xor
dec
push
xor
or
stos
nop
test
loop
shr
ljmp
push
sub
sbb
pop
roll
nop
imul
adc
push
pushf
shr
ret
xchg
xor
je
xor
dec
sbb
xor
add
rorb
mov
out
fs
aad
dec
dec
movsl
jg
dec
push
xor
jg
pop
pop
ljmp
push
fnstcw
sbb
push
sti
lods
int
mov
rorb
test
icebp
mov
pop
shrb
lret
mov
sbb
loope
mov
jge
test
nop
scas
jecxz
sbb
pop
jg
inc
mov
fs
jge
mov
adc
xchg
inc
sub
pop
sar
inc
jmp
cld
inc
adc
push
inc
divl
mov
movsl
cld
or
sbb
xor
add
lahf
cli
xor
and
mov
shrb
mov
jmp
mov
jae
mov
cmp
xor
aas
pop
imull
pop
dec
inc
add
add
movsl
gs
jno
cmp
and
push
pop
mov
jmp
mov
or
pop
ljmp
test
lods
je
ss
xlat
mov
loopne
cmp
cmp
lcall
jmp
push
enter
mov
cmc
adc
test
lretw
xor
popa
mov
xor
xlat
scas
adc
or
pusha
dec
mov
push
rcrl
inc
icebp
stos
shll
dec
out
fs
and
xor
xchg
cld
push
mov
xor
dec
rcl
out
cmc
adc
es
loop
sub
lds
in
fadds
sbb
adc
repnz
jb
inc
arpl
xchg
xor
jmp
sbb
loopne
out
mov
sarb
std
sub
add
or
mov
and
inc
dec
fucomip
mov
adc
inc
mov
jmp
pop
adc
out
mov
into
adc
fildl
ret
cmp
mov
jno
aam
or
bound
sbb
out
pop
dec
push
into
ljmp
inc
mov
jns
sub
rcrl
lcall
pop
mov
repz
cmp
les
add
cltd
dec
push
push
iret
cmp
and
popa
movsb
jg
cmp
fwait
leave
sbb
sbb
ret
xor
in
nop
lds
sub
dec
adc
dec
mov
cmp
nop
mov
jne
and
xor
push
fbld
xor
mov
xchg
leave
ljmp
fidivl
mov
cmp
xchg
sbb
mov
mov
loop
scas
leave
fdivrl
pop
in
cld
lods
sub
or
inc
jo
test
icebp
stos
push
insb
rclb
mov
pop
cltd
fimuls
fimull
and
push
dec
dec
dec
loope
sub
ret
cmp
mov
push
sub
dec
repz
mov
ret
and
mov
and
loope
cmp
in
dec
movsb
cmc
jns
sbb
push
fcomps
out
das
imul
fadds
std
test
sbb
mov
push
sub
js
lock
loop
sbb
sub
dec
push
hlt
xchg
cmp
sub
or
dec
pop
mov
in
dec
test
mov
fisubrl
push
andl
leave
fnstcw
push
mov
adc
fdivl
movsb
push
sti
nop
dec
gs
mov
mov
movsl
cmp
imul
orl
cmp
fcomps
rcll
xchg
adc
cli
sarb
dec
pop
cmc
shll
xor
push
adc
sbb
out
mov
cltd
xchg
call
xor
imul
outsb
lods
add
popf
add
pop
roll
adc
xchg
jb
pushf
xlat
mov
mov
int
call
inc
mov
dec
pop
fnsave
dec
popa
test
flds
dec
ja
movsl
ror
dec
adc
pop
mov
add
jmp
aaa
out
arpl
and
adc
cmp
mov
jne
rcl
ljmp
sbb
pop
fwait
aad
dec
pop
lahf
outsl
sub
roll
nop
sti
and
leave
cli
mov
xor
test
mov
int
int
loop
sar
es
push
fisttpl
dec
pop
movsb
ja
pop
in
outsb
xchg
jno
push
in
jae
mov
ja
in
fnstcw
and
add
stos
pop
imul
iret
aas
add
fxch
mov
movlps
out
xchg
lcall
mov
xor
rorb
or
ficoml
dec
mov
iret
adc
aad
cmp
dec
sub
dec
and
out
pop
jle
syscall
jmp
pushf
push
sub
inc
cmc
add
je
xchg
sbb
aad
push
outsb
push
adc
or
pop
sub
or
add
rclb
xchg
cmp
dec
and
mov
push
pop
lret
or
pop
cmp
mov
jmp
leave
lock
adc
mov
decb
xor
jo
inc
mov
shl
mov
pop
jmp
addl
dec
std
fnstsw
dec
andb
dec
or
aad
jp
lcall
imul
xchg
addr16
lret
fmuls
rclb
popa
pop
ret
or
push
jb
roll
icebp
stc
adc
cli
inc
fwait
stos
fcoms
jno
adcb
inc
nop
jge
pop
sub
sub
adc
jnp
adc
jns
cltd
sar
mov
push
jmp
mov
aas
sub
lods
mov
nop
notl
lcall
fs
in
notl
fwait
call
sbb
jle
loope
sbb
xor
add
pop
fldt
and
jbe
psubsw
mov
ds
imul
xchg
ja
add
adc
push
pop
add
xchg
sarb
idivl
outsl
jecxz
outsl
nop
mov
inc
and
mov
cld
int
out
scas
pushw
mov
xchg
cwtl
or
je
cs
push
pop
pop
mov
sub
and
pop
add
fwait
adc
popf
xchg
xor
pop
or
xchg
jne
lret
xchg
sti
jne
roll
jnp
jbe
push
fisubrl
idivb
ror
repnz
movsb
fs
jge
dec
xchg
pop
push
pop
lcall
call
mov
aam
adcl
mov
inc
lods
jae
push
mov
loop
sub
dec
out
jnp
xor
notl
fxch
out
cmpsl
jns
mov
dec
mov
xor
sti
or
push
jbe
add
mov
aad
mov
cmp
dec
and
fidivrl
mov
cmp
loopne
enter
scas
fidivrs
arpl
sbb
push
push
movsb
cmp
xchg
dec
pop
mov
fisubl
insb
or
add
push
mov
lret
xchg
adc
mov
imulb
std
roll
fwait
jne
xchg
xor
fcoms
mov
and
mov
sbbl
inc
xor
insl
mov
mov
pop
fisubl
fnstsw
cmp
pop
fcmovne
arpl
and
lock
sub
je
and
mov
sbb
mov
lahf
adc
jp
mov
orb
fidivrl
sbb
sub
mov
std
mov
in
add
mov
loope
pop
push
push
outsl
loop
lahf
negl
ljmp
fs
xchg
xchg
sub
cmpsb
cmpsb
push
leave
dec
mov
sbb
mov
cmc
shlb
cmp
cld
loop
or
push
stos
test
dec
mov
dec
jbe
mov
adc
push
inc
sub
push
sahf
fnsave
movsl
or
jl
jle
into
fstps
mov
xchg
arpl
xchg
outsl
mov
pop
jecxz
mov
or
fiadds
dec
cli
add
mov
mov
stc
lret
jmp
fildl
lock
mov
div
xchg
popf
fcoms
movsl
sbb
stos
cli
add
dec
jnp
push
jnp
sub
jae
hlt
sub
jno
ds
fldcw
clc
mov
or
xchg
xchg
flds
sarb
shlb
lock
adc
pop
mov
dec
test
addr16
or
mov
scas
aas
stc
scas
dec
xchg
mov
xor
push
lcall
push
das
enter
push
cmp
fwait
jb
add
inc
cmp
xlat
mov
movl
ss
jne
pop
cwtl
aad
subl
pop
ja
and
mov
test
pop
and
push
pop
fmull
sub
and
les
and
pusha
jmp
inc
add
jge
mov
sti
or
js
jecxz
aad
pop
pop
cld
icebp
push
lret
movsl
outsb
dec
dec
hlt
pusha
shl
jl
mov
cs
pop
das
xchg
nop
stc
cmpsb
fisubrl
bound
jmp
arpl
push
sub
or
sbbl
and
negl
sbb
cwtl
xor
shrb
add
insb
add
mov
dec
or
inc
mov
sub
mov
int
inc
lret
fistpll
ret
test
dec
pop
popf
jbe
sbb
repnz
mov
mov
nop
sub
add
and
cwtl
jne
out
hlt
gs
int3
push
mov
add
pusha
adc
jle
pop
pushf
pop
sub
push
add
in
mov
int3
lea
gs
push
aad
pushf
adc
mov
loop
mov
dec
out
fwait
push
mov
lret
pop
rol
push
sarl
in
test
push
xchg
aam
pop
imul
mov
sbb
or
out
mov
fldcw
stc
push
int3
sub
icebp
or
or
mov
inc
jne
sub
jmp
mov
in
lock
sub
aad
add
jp
leave
mov
loop
mov
add
loop
mov
sti
jmp
dec
ds
push
mov
clc
jbe
sbb
add
and
movsb
xor
mov
cmp
jp
xchg
pop
inc
loop
imul
xor
nop
out
loopne
xchg
test
push
sbb
loop
out
popf
xchg
dec
iret
xor
and
bound
aas
push
xor
pop
cmp
es
and
cltd
xor
shl
aaa
xlat
add
js
jnp
test
pop
aad
loope
and
je
xchg
or
sbb
mov
cmp
loopne
fsubs
data16
fmull
pop
push
nop
jnp
std
inc
std
mov
push
xor
pop
icebp
pusha
dec
or
or
xor
fsubs
mov
pop
mov
xchg
in
clc
jl
dec
mov
hlt
into
ds
jp
hlt
pop
es
pop
lret
cmp
dec
adc
pusha
es
push
test
add
fwait
adc
or
add
pop
aaa
or
dec
sbb
das
fidivrs
jae
in
popf
bound
mov
pop
sbb
mov
dec
fiadds
cmp
push
inc
out
adc
jbe
sub
nop
rcrb
pop
jno
bound
push
test
add
mov
call
cmp
jmp
cmp
or
sub
frstpm(287
pop
iret
js
ret
es
dec
cltd
mov
and
fs
dec
ljmp
repnz
jmp
pusha
pop
nop
repz
push
in
insl
push
jns
dec
or
jnp
and
hlt
out
xchg
mov
imul
je
ds
push
jg
sbb
and
pop
xor
test
xor
or
lock
bound
inc
mov
push
cltd
ja
das
pop
enter
ja
sbb
stos
out
test
ja
sub
adc
hlt
das
mov
and
test
mov
daa
out
xor
pop
pop
sub
iret
sub
mov
xchg
xor
in
fnstenv
xchg
jle
jno
ljmp
inc
cmp
adc
jns
pop
xor
stos
xchg
lods
mov
jecxz
aad
mov
data16
arpl
xlat
movsl
and
cmp
ss
lock
es
inc
sar
sbb
pop
mov
ja
jbe
xchg
sbb
inc
jmp
add
iret
mov
add
sub
arpl
shlb
add
dec
cmp
xor
shl
adc
mov
dec
daa
inc
loop
inc
jne
mov
add
fs
cmp
movsl
mov
addr16
pop
sbb
ds
div
push
std
adc
clc
neg
inc
push
jp
push
cmp
les
dec
cmpsb
xor
jo
pusha
xor
lds
xchg
adc
sti
and
adc
cmpsb
jle
add
outsl
repnz
xchg
hlt
mov
sub
pop
les
jge
in
js
subb
sub
dec
fcmovnb
pop
lret
jbe
sbb
pusha
push
pop
stos
fnstcw
jge
sti
test
jbe
enter
or
push
pop
and
pop
jmp
or
push
jns
in
xchg
idiv
xchg
in
jbe
movsl
push
pop
xchg
mov
leave
test
stc
adc
xor
xchg
out
ds
leave
xchg
sbb
incl
fsts
lock
adc
std
jmp
rol
or
sti
push
daa
and
stc
pop
inc
cmp
xor
pop
xorl
daa
lods
stos
cmpsb
mov
jle
and
pop
in
and
adc
add
mov
dec
add
and
cmpl
jae
aas
fcoms
xor
ljmp
andb
jns
dec
mov
pop
std
lcall
in
pandn
rorb
fbstp
in
sbb
clc
mov
out
mov
cwtl
adc
fs
add
out
push
popfw
xchg
mov
sahf
imul
shll
test
in
cmpsl
mov
xor
pop
mov
xor
ljmp
jbe
int
xchg
mov
inc
rcrl
cmpsb
push
test
mov
jge
mov
int3
hlt
testl
mov
jne
mov
rcrb
dec
xchg
xlat
lahf
lahf
repz
or
lret
sub
add
mov
xor
out
jmp
lods
fdiv
dec
test
lahf
mov
lods
test
mov
fwait
je
pop
lahf
push
push
aad
leave
sarl
jge
scas
test
hlt
loopne
xchg
into
test
sub
adc
inc
xor
or
jg
fidivrs
ret
ss
fidivl
idiv
popf
add
inc
outsb
pusha
pusha
xchg
cmp
cmp
lahf
or
test
sub
inc
lock
pop
ficoms
push
mov
int
sub
jbe
adc
rorb
aaa
adc
xor
imul
mov
dec
inc
sbb
cmpsl
out
cmpsl
fsubrs
sahf
and
shll
mov
inc
in
ss
inc
sbb
and
sub
leave
pop
push
dec
fidivrs
inc
cltd
sbb
sub
ljmp
or
popa
mov
imul
or
mov
jp
mov
cmpl
ja
mov
mov
flds
jp
movsb
inc
lcall
fisubrl
add
sbb
and
shll
xor
mov
test
pop
stos
lret
stos
push
test
pop
inc
add
mov
aam
sub
mul
rolb
mov
mov
sbb
clc
outsl
mov
inc
pop
jmp
iret
dec
sti
mov
xchg
mov
push
xor
filds
cmc
lods
or
js
and
pop
xor
and
sub
push
push
mov
fistps
out
pop
mov
mov
imul
loop
mov
pop
xor
xor
cmpsb
lcall
mov
push
cmc
pushf
mov
push
out
sbb
aas
loope
leave
test
adc
es
adc
xor
sbb
hlt
inc
imul
sbb
and
fs
aam
ljmp
xchg
fisubs
andb
scas
into
mov
stos
lahf
call
in
sbb
mov
out
xchg
std
inc
cmp
lret
scas
fstp
push
or
ja
dec
data16
mov
js
sarl
sub
push
jmp
ret
ja
dec
pusha
xchg
jo
repnz
sub
sub
inc
mov
jl
push
inc
ds
xchg
nop
cmpsl
sub
and
jno
lea
adc
xchg
shll
xchg
mov
lret
insb
rorl
add
dec
and
sbb
mov
int
enter
add
pop
adcl
subb
cld
mov
int3
mov
fdivrs
or
sub
out
icebp
inc
xchg
sub
lods
orl
enter
cmc
or
fmulp
cmp
add
sarb
arpl
lock
push
add
subb
lock
pop
xchg
dec
shll
mov
clc
jg
inc
test
shl
insl
loope
call
je
and
or
mov
jge
sbbl
push
addb
mov
dec
mov
addb
mov
outsb
outsb
pop
fistps
std
flds
jo
cmp
push
add
ss
add
cmp
pushf
jae
pop
sub
cld
testb
fbstp
into
movsb
mov
in
cmp
mov
or
ljmp
push
inc
mov
xchg
mov
mov
lret
test
adc
dec
jb
int
insl
jecxz
xchg
in
mov
ds
repz
xchg
xchg
and
into
jmp
aad
dec
pop
and
test
repnz
adc
jecxz
pop
or
and
aam
pop
mov
call
loopne
arpl
lods
inc
push
xlat
fstps
push
push
jecxz
sbb
sbb
in
inc
cmpsb
jp
push
cmp
test
fwait
pop
jae
xor
jo
mov
cmpsb
mov
movsb
fs
out
cmpsl
insl
lods
das
or
cld
test
scas
sti
xchg
mov
ss
cld
mov
pop
jle
scas
in
xor
outsb
sbb
es
fisubrs
add
dec
jbe
or
imul
in
or
ja
cmp
mov
mov
mov
mov
adc
mov
les
clc
sbb
mov
xchg
dec
push
aas
out
pop
shlb
jl
jmp
mov
fisubl
pop
cwtl
pop
rolb
cmpsb
pushf
or
dec
mov
imul
push
enter
or
inc
mov
pop
mov
decl
pop
inc
sbb
adc
adc
dec
jecxz
hlt
cmpsl
fbld
out
dec
lods
pushf
mov
jecxz
ret
test
push
sub
out
call
ja
mov
push
sbb
out
dec
jb
bound
or
inc
mov
repz
incb
push
inc
add
mov
out
ror
cmpsl
adc
fmull
adc
jb
jae
addr16
and
mov
jne
pushf
data16
add
jne
je
loop
cmp
shll
cld
cld
loop
or
out
push
add
mov
rorb
push
insb
sbb
mov
sbb
lods
sbb
jb
lds
xchg
mov
loopne
xor
rclb
mov
push
cs
std
adc
push
hlt
dec
into
call
cwtl
dec
lods
add
inc
mov
insb
imul
mov
out
mov
inc
adc
adc
xchg
or
mov
notl
test
in
push
lret
scas
jge
repnz
fnstsw
iret
xchg
or
pop
int
xor
stos
icebp
int3
and
sub
cwtl
scas
adc
fs
test
lret
js
addr16
shll
lock
testl
mov
jp
jle
je
popf
mov
imul
jle
adc
mov
push
xchg
cmpsl
dec
xor
push
mov
xchg
xchg
lcall
cmp
or
fwait
or
xchg
mov
push
dec
addr16
scas
andl
ljmp
mov
mov
push
lahf
out
loope
pop
repz
pop
orb
mov
jl
push
mov
jle
xor
mov
jle
fxch
cltd
fiaddl
repz
jbe
xor
fistps
lds
or
pushf
cmpsl
cli
aad
ficoms
cmp
push
mov
iret
and
lods
jae
decl
test
sub
inc
fists
push
mov
push
sti
mov
bound
repnz
push
inc
das
mov
push
inc
test
ds
divb
fsubrl
idivb
pop
pop
cmp
mov
in
fs
ret
aaa
xchg
test
les
jno
add
xor
lret
cmc
or
cwtl
ficoml
mov
cltd
push
addr16
rcll
leave
hlt
cs
cmpsb
adc
cmp
hlt
pop
int3
sub
rol
jmp
nop
repnz
dec
aam
nop
div
jg
test
jnp
add
call
leave
inc
jl
loop
in
mov
mov
or
inc
cmp
iret
push
out
jnp
mov
cmpsb
lcall
loopne
in
xchg
jno
stc
mov
pop
addr16
push
sbb
mov
into
jnp
adc
rclb
lods
adc
xor
mov
test
lret
fwait
repnz
cmp
xor
inc
xchg
pop
push
inc
popa
add
jno
dec
ret
xor
sub
xor
cmp
jmp
inc
aad
xchg
adc
aaa
cmp
mov
scas
js
mov
jl
mov
push
and
ret
adc
dec
sub
das
addr16
cld
out
movsb
pop
iret
and
in
daa
bound
adc
xchg
push
cmp
cmpsb
into
addr16
sbb
sahf
out
lods
cltd
xchg
xor
inc
sti
jo
lds
out
aam
jnp
lcall
insl
sub
test
sbb
xor
leave
pop
mov
jmp
mov
xchg
sub
jmp
inc
sub
fmul
xor
sbb
xchg
xor
push
sbb
int3
imul
and
dec
test
adc
pop
lods
dec
fildl
nop
aas
scas
dec
incl
andb
jecxz
test
ds
and
lahf
add
add
dec
jno
fs
sub
fcompl
pop
pop
push
int3
stos
mov
daa
cmpsl
ds
pop
lock
xlat
rclb
ja
loop
push
fwait
or
dec
mov
pop
or
and
mov
dec
lock
clc
jecxz
adc
add
cld
jle
fistps
cmpl
or
mov
sub
in
notb
push
cli
clc
imul
fdivl
inc
mov
pop
lods
xchg
cmc
sbb
test
mov
jg
xchg
aaa
adc
add
test
ret
stos
dec
push
xor
mov
iret
cli
inc
lea
js
mov
sub
jae
sub
cmc
pop
mov
jecxz
fadd
pusha
mov
adc
cmp
cwtl
imulb
and
iret
sbb
add
push
mov
cwtl
std
mov
repnz
leave
xor
aad
mov
aaa
sub
cmp
pop
sub
push
push
fimull
dec
sbb
sar
out
sub
add
pop
jno
addr16
adc
pushf
cli
dec
push
aad
mov
jecxz
movsb
mov
or
pop
add
fmul
push
stos
jge
xchg
pusha
pop
fisttpll
pop
scas
xor
cmp
data16
stc
mov
sbb
or
jg
pop
icebp
lods
stos
rclb
cmpsl
xchg
xchg
lret
xor
adc
push
jns
in
mov
pop
mov
push
orb
bound
sub
movsl
fadds
inc
scas
call
ror
popf
jae
push
mov
in
mov
mov
rcl
sbb
lahf
aad
xchg
jo
ds
aaa
std
pop
jmp
cld
sbb
mov
imul
pop
imul
nop
scas
push
or
scas
sub
pop
jns
mov
add
mov
sysexit
lds
or
call
mov
mov
fsts
mov
fwait
xor
shrb
imul
push
adc
mov
and
lods
cltd
xchg
in
push
stos
jmp
scas
and
ja
or
mov
jnp
hlt
mov
mov
and
js
sbb
lahf
sahf
mov
rol
xor
daa
adc
xchg
insb
out
mov
outsb
outsl
in
shl
and
add
jle
xor
cltd
mov
cmc
push
arpl
mov
sbb
dec
call
dec
cmp
sbb
movsl
jmp
jbe
cltd
sahf
out
scas
mov
roll
rcll
inc
ljmp
pshufw
xor
mov
jle
jmp
sbb
js
adc
int
inc
lds
or
lret
adc
jmp
and
sahf
push
repnz
ret
popf
rcll
ret
fwait
gs
mov
dec
and
test
mov
jns
in
negb
stc
mov
ljmp
jae
aas
repnz
sbb
je
aam
xchg
mov
jnp
jo
loop
mov
in
pushf
push
push
add
or
inc
cmc
jl
test
mov
imul
mov
jo
and
je
mov
les
rolb
or
int
xor
jns
mov
pop
negl
mov
add
ret
ret
aaa
pop
in
leave
stc
jne
fnstcw
xor
mov
testb
cmpsb
xchg
mov
fstps
adc
push
push
pop
push
pop
popa
fs
pop
xor
cmp
in
push
xchg
add
call
stc
lods
jo
add
mov
sbb
jecxz
aad
idivb
stos
fsubrs
mov
fucomi
lret
mov
lcall
addr16
shll
mov
les
pop
repnz
ljmp
mov
rorb
pop
aad
push
push
mov
out
aam
jae
repnz
or
aaa
mov
adc
sub
imul
or
jne
outsb
repnz
movups
adc
adc
add
shll
mov
mov
jne
add
sti
xchg
cmp
jbe
mov
iret
cmp
jae
cmc
sbb
popf
stos
out
scas
jo
lock
mov
mov
mov
jl
push
test
inc
cmp
jl
xorb
adcb
ja
xlat
inc
fnsave
push
sti
icebp
cltd
jno
xor
jmp
mov
in
test
fldt
testb
add
pop
fstpt
mov
inc
jns
cltd
sarl
loop
in
stos
bound
adc
jg
scas
ss
gs
add
jb
pop
outsl
cltd
lea
cmp
pusha
not
add
dec
in
jo
add
hlt
inc
mov
and
add
mulb
mov
outsb
xchg
sub
adc
xchg
jb
in
pop
fcoml
lcall
ja
cmp
outsl
int
add
adc
aad
xor
mov
lods
and
dec
xor
fisttpl
mov
imul
addr16
adc
clc
cld
mov
and
in
mov
mul
mov
je
mull
or
arpl
repnz
jmp
hlt
pop
aas
int
es
inc
inc
add
push
les
sub
push
std
mov
dec
and
cmp
fsubp
sti
fdivrl
sub
fmul
jno
addr16
sbb
cmp
sub
rcr
mov
add
clc
pop
icebp
pop
mov
loopne
inc
add
adc
mov
lock
jb
fists
pop
scas
mov
mov
adc
cmp
xchg
mov
sbbl
xchg
sub
push
xchg
test
pushf
je
sub
dec
push
pop
adc
adc
jl
jl
cli
mov
xor
into
sahf
push
jae
out
jno
and
cmp
sub
push
adc
pusha
cs
mov
xchg
addr16
pop
xchg
lods
adc
fstl
sbb
mov
pop
data16
cltd
fisubs
in
lea
sub
scas
pop
or
out
jae
inc
push
ljmp
add
fcoml
add
pop
inc
sbb
loopne
sbb
push
iret
mov
or
fldcw
adc
add
push
sbb
jp
push
pop
jl
cmc
mov
sub
fs
hlt
call
or
adc
fwait
out
jmp
int
les
xor
dec
push
out
imul
ret
out
insb
js
aaa
lea
nop
sbb
cltd
xor
cmp
imul
aaa
sbb
out
cmc
mov
jbe
rorl
test
sbb
outsl
mov
int
mov
pop
lahf
mov
dec
dec
vmaxps
out
ret
push
es
popa
scas
mov
push
sub
mov
pop
jmp
cmc
lea
sub
xchg
les
sbb
gs
jno
sbb
sbb
shlb
rcrl
clc
push
fs
mov
in
scas
cmpl
mov
inc
fstpt
push
test
shld
popa
sub
ss
cli
imul
out
call
into
negl
jnp
dec
mov
push
jns
xor
int
cmpsb
push
adc
mov
ret
ljmp
fistpll
test
jnp
sub
outsl
addr16
fs
nop
ffree
dec
add
out
into
jge
mov
dec
fmuls
jns
pop
arpl
pushf
inc
xchg
add
std
dec
xor
insl
inc
mov
and
xchg
jns
add
cmpsb
mov
mov
cs
js
xchg
sbb
add
lea
mov
jp
repz
dec
aam
and
stc
dec
stc
addr16
mov
pop
rcr
in
insl
cmpb
dec
cmpsb
loop
mov
sahf
cmp
push
mov
out
pop
fcoml
dec
mov
popf
mov
pop
ds
pop
dec
mov
ficompl
psrlq
adc
ret
sub
mov
outsb
dec
jae
repz
sbb
aad
push
fsubp
fnstenv
lods
mov
push
mov
cvtpi2ps
cmp
jg
in
mov
out
js
movsl
dec
jecxz
push
jle
cmp
or
sbb
and
ja
inc
xor
aad
dec
ret
inc
jo
xor
or
mov
pushf
xchg
out
mov
jmp
sub
pop
pushf
iret
icebp
adc
lret
mov
sbb
in
dec
dec
nop
pop
jmp
fwait
lret
mov
sar
sbb
iret
cwtl
into
xorl
jo
les
push
cwtl
pop
add
nop
sbb
or
cmp
mov
mov
loope
push
pop
pusha
inc
or
jge
jno
pop
xchg
data16
xor
dec
and
in
push
arpl
and
shlb
out
aas
scas
lods
fimull
xor
pop
or
and
test
pop
cmp
mov
hlt
bnd
sbb
push
xor
out
out
sub
jb
mov
jnp
out
pop
popf
dec
add
bound
movsl
jnp
sbb
mov
push
in
cmpsl
jg
pop
std
adc
jnp
add
sub
cli
in
mull
in
mov
or
dec
pop
fsub
imulb
aas
inc
iret
inc
push
shrl
adc
dec
sub
mov
arpl
add
push
mov
pop
cli
popf
or
in
xchg
je
fldt
inc
cmpb
pop
jmp
cwtl
je
sub
rcl
jle
addl
dec
mov
insl
fists
sbb
fildll
mov
fistl
sti
push
pop
popa
ss
lds
in
outsb
push
pop
rdtsc
jge
jo
pop
out
adc
lret
jl
dec
cmpsl
mov
je
xor
push
mov
std
cmp
xchg
pop
add
fsts
dec
nop
cs
adc
push
sbb
xor
adc
pop
xorl
subl
cld
xor
sub
shrl
mov
mov
scas
or
enter
or
clc
in
pop
hlt
cmp
lret
dec
and
jnp
push
xor
les
mov
push
out
iret
jecxz
lcall
pop
movsb
mov
movsl
fwait
enter
pop
jge
cmpsl
mov
out
in
add
dec
into
xor
les
pusha
mov
sub
pop
rcr
xor
jle
enter
subl
pop
es
orl
in
push
cmpsl
xor
jp
mov
sbb
je
pop
push
jp
int
cmp
push
aaa
pop
xor
xor
stc
in
repz
pop
pop
dec
rcr
mov
sub
jl
roll
cs
flds
in
ror
popa
sbb
jae
inc
pop
ffree
add
and
out
js,pn
xchg
mov
stos
data16
mov
push
into
stc
test
roll
repz
btr
push
pop
inc
pop
add
push
loop
lret
popa
fsubs
popf
jo
dec
loopne
inc
and
iret
sub
inc
xor
les
mov
jp
stc
pop
mov
ret
adc
gs
dec
in
push
push
movsl
neg
add
sbb
mov
or
and
ds
ja
xor
aad
sbb
and
jg
xchg
leave
mov
ret
mov
pop
popa
adc
sbb
leave
sahf
les
pop
adc
mov
push
or
lds
loope
push
pop
sti
push
loopne
dec
out
test
dec
jo
fwait
push
dec
in
lods
jo
add
imulb
mov
lcall
fdivl
rol
cmpsb
push
and
pop
imul
repnz
inc
xchg
pop
push
test
sub
mov
push
loope
mov
push
pop
xchg
push
cmp
test
mov
cltd
or
pushf
adc
int
ret
sub
lods
or
sub
add
lock
dec
push
je
xor
loope,pt
adc
test
mov
stos
mov
jl
xor
mov
push
shlb
dec
push
jp
decb
push
cmp
adc
loope
and
jnp
aad
xor
jl
inc
les
mov
push
dec
aaa
inc
loope
les
and
out
cltd
lahf
sbb
cmp
fwait
mov
mov
shrb
sahf
sub
insb
lret
xchg
inc
xchg
mov
in
pop
xchg
ljmp
jnp
testl
mov
aad
jg
out
adc
iret
bound
sahf
movsl
gs
pop
inc
faddp
test
loop
pop
sub
adc
sub
cmp
cltd
dec
bnd
aas
test
push
ret
pop
jge
and
scas
rclb
add
push
addb
mov
pop
dec
mov
lret
cwtl
or
jns
adc
sbb
les
cmpsb
in
adc
loopne
mov
imul
in
push
cmpsl
movsb
roll
cmp
xor
imulb
daa
sub
mov
popf
mov
push
lods
sbb
push
push
ret
sbb
xchg
shrb
jle
mov
outsb
sarb
add
xchg
sub
inc
aaa
ds
inc
je
aaa
into
cmp
cld
mov
mov
cmp
push
cmp
cmp
icebp
mov
or
je
iret
inc
aam
aas
mov
loopne
pop
sbb
arpl
enter
add
dec
out
xchg
fcmovu
fadds
lret
jns
dec
in
in
mov
repnz
testl
popf
dec
call
insb
xor
and
out
dec
test
cmp
cltd
jbe
sbb
fstl
xchg
out
clc
ds
lahf
sub
pop
addr16
mov
sub
scas
nop
ja
out
cld
leave
rclb
mov
adc
push
xchg
xchg
push
rclb
jae
hlt
fs
push
mov
mov
jo
mov
iret
xor
cmp
add
push
jns
ja
jb
and
mov
or
push
mov
sbb
sbb
repnz
mov
sub
mov
pusha
leave
shlb
sub
pop
ficomps
lahf
out
outsl
test
aam
mov
cli
push
push
xor
mov
xor
movb
rclb
push
fsubs
mov
pop
xchg
adc
xchg
scas
rcl
sub
push
cs
popa
filds
loope
push
xchg
mov
mov
dec
dec
fisubrl
popf
pushf
out
fsubrl
pop
les
sti
add
push
cmp
push
sub
jns
cmp
jbe
cmp
add
or
rol
push
mov
cmp
sbb
xor
lock
xchg
pop
out
dec
nop
cmp
fadds
and
cmpsb
push
aaa
mov
lds
arpl
xchg
cs
sahf
inc
lcall
test
adc
pop
mov
in
sarl
rcll
mov
aas
test
aaa
insl
pop
lahf
cs
and
push
shrl
xchg
cmc
adc
xchg
lcall
lret
xchg
imul
pop
int3
gs
stc
sahf
mov
sbb
mov
mov
ret
in
push
jle
cmp
pushf
clc
mov
sub
stos
pushf
inc
and
das
lock
iret
xor
jmp
shrl
test
jp
xchg
cmp
and
loop
jnp,pt
xchg
xchg
std
mov
sbb
out
aas
push
roll
clc
dec
push
mov
jb
pushf
lods
js
jl
stos
mov
lahf
xor
out
lea
inc
je
out
inc
outsb
bound
xchg
mov
jne
add
rorb
jae
rolb
mov
lret
mov
fsubrs
int3
mov
daa
xchg
inc
or
movsb
xchg
cmp
jg
dec
sbb
into
sub
gs
out
imul
jmp
bound
negb
gs
push
in
enter
sub
fbstp
xchg
sbb
jnp
in
movsl
jg
movsb
bound
lods
or
xor
out
lret
out
fs
or
mov
scas
pop
movsb
mov
dec
fdivl
out
inc
ss
sub
mov
mov
cmp
out
aaa
cmp
cld
mov
jne
cmp
mov
fcmovu
xchg
das
or
rorb
mov
je
xchg
xor
rcll
mov
in
into
lds
jge
out
outsl
mov
pop
test
icebp
inc
add
ret
ja
pop
js
dec
mov
pop
push
cmp
jbe
jo
scas
pop
xor
mov
and
test
orl
out
dec
insb
push
xchg
or
into
fisubrs
std
mov
jge
cltd
jge
and
mov
mov
sbb
mov
out
mov
mov
pop
dec
xchg
mov
mov
xchg
fcompl
dec
je
pushl
or
cmp
fcompl
into
in
push
mov
mov
or
lds
xor
push
or
xor
push
das
icebp
fiaddl
fbld
sub
mov
lahf
aad
cmpsl
repz
adc
add
arpl
mov
sub
pop
xor
jg
xor
add
push
or
sar
xlat
out
out
fimull
imul
pop
mov
cmp
cld
iret
jbe
fisubrs
and
lahf
sbb
gs
mov
lret
jo
cmc
cmc
pop
stos
or
notl
data16
gs
pop
scas
mov
jmp
daa
cmp
std
mov
sub
ret
sbb
sub
jmp
int3
aad
psubsb
mov
cmp
inc
addr16
stos
fwait
pop
push
imul
sub
xor
pop
push
sti
dec
inc
pushf
mov
mov
clc
lock
xchg
icebp
movsb
arpl
fidivs
and
jo
inc
nop
jg
pop
imul
adc
jmp
xor
int3
xor
mov
sbb
imul
inc
xorl
dec
jmp
loopne
ficoml
jne
shl
rcll
inc
sub
sti
fnstenv
jbe,pt
cmpsb
adc
xor
pop
dec
add
inc
cmpsl
fildll
mov
ror
xchg
sub
mov
imul
test
push
mov
push
aas
sbb
mov
push
clc
push
jae
jmp
mov
clc
sub
mov
stos
xchg
in
and
fistps
adc
popl
xor
dec
mov
jg
add
mov
cmp
mov
in
mov
jnp
jo
lret
xor
fsubrl
adc
daa
dec
jae
pop
sbb
and
das
push
xchg
mov
cmp
lahf
push
add
mov
xchg
and
pop
jns
insl
mov
jo
pop
hlt
push
push
cmpb
jge
cld
jnp
xchg
lods
cmp
jmp
stos
les
test
es
iret
repnz
insb
mov
popa
cs
loop
push
jmp
xor
push
push
mov
lds
inc
pop
dec
stc
adc
mov
xor
daa
and
mov
lds
sbb
push
adc
mov
enter
fldl
int
rorb
pop
cmpsl
pop
mov
lcall
xchg
insl
sub
sbbb
popf
dec
inc
mov
inc
fdivrl
push
pushf
mov
not
push
es
pop
pop
or
xor
adc
repnz
cld
testl
sbb
xchg
fs
cmp
inc
test
cltd
js
fcompl
sbb
pcmpeqd
add
loop
or
js
adc
dec
and
mov
jne
sub
cmp
pop
pusha
and
scas
ljmp
push
shlb
cmp
push
or
mov
xor
sbb
cmp
pop
push
rcrl
push
and
movsb
mov
adc
cmp
out
movsl
lcall
insb
test
lods
pop
addl
popf
sbb
fstps
inc
sbb
and
lahf
cmp
outsb
cmp
add
ds
push
cmp
xchg
mov
call
xor
cwtl
push
or
pop
cmp
shll
daa
std
movsl
pop
mov
jb
xchg
movsb
in
cmp
jae
dec
lcall
add
sbb
out
cmc
push
push
fildll
or
add
and
shll
and
data16
and
lock
arpl
ret
pop
xor
add
sub
inc
subb
add
xchg
test
inc
push
jmp
mov
lea
mov
sub
fldenv
dec
shlb
jmp
dec
push
lods
clc
mov
adc
sub
imul
fwait
daa
jg
aas
lods
lahf
in
popa
pop
test
mov
jbe
xchg
mov
fnstcw
int
xchg
int
jmp
push
test
mov
fadds
push
fcom
stos
mov
sub
sub
jmp
mov
les
mov
fwait
push
aad
mov
hlt
jns
add
stc
decl
out
out
int
stos
add
daa
addr16
ret
jl
jp
jle
mov
dec
pusha
mov
icebp
sub
cwtl
fistpll
add
cltd
insb
push
jbe
int
cmp
mov
loopne
dec
or
sbb
inc
sub
pop
mov
adc
imul
push
test
adc
add
dec
je
mov
jo
sbb
xchg
cli
vandnps
aas
stc
xchg
fcmovb
movsl
push
jo
int
mov
jae
clc
ret
aas
xchg
or
outsl
sub
inc
popf
or
jge
sbb
mov
iret
lret
imul
loop
icebp
inc
mov
out
enter
inc
mov
pop
pop
xchg
and
add
cmp
popa
ror
lcall
cmp
jnp
pusha
inc
mov
loopne
out
or
add
and
xchg
push
mov
mov
mov
out
imul
inc
cld
jg
xor
adc
dec
jg
cmp
dec
notl
push
mov
mov
ljmp
scas
or
andl
sti
js
adc
arpl
jmp
and
movsb
mov
aas
pusha
ret
lods
sbb
popf
dec
leave
or
pusha
or
dec
div
fwait
add
hlt
and
mov
sbbl
add
inc
fcoml
cmp
pushf
leave
xor
push
sub
inc
adcl
imul
or
and
push
xchg
xorl
scas
jl
mov
icebp
int3
daa
pop
or
daa
pop
cltd
out
sahf
dec
or
dec
dec
mov
aaa
lahf
les
mov
mov
and
ret
cmpsb
xchg
into
leave
mov
subb
stos
mov
lea
xor
push
mov
leave
jl
into
mov
movsl
rolb
stos
push
add
pop
es
mov
stos
inc
pop
pop
loop
mov
jb
mov
shrb
adc
mov
rclb
dec
mov
and
dec
inc
push
dec
adc
xlat
scas
test
inc
sbb
and
mov
gs
xchg
adc
in
sub
ja
shlb
call
xchg
out
pop
cmc
sub
fstp
aad
push
xchg
imul
xlat
notl
inc
call
push
sbbb
mov
sbb
aas
out
xor
push
gs
clc
jle
lcall
mov
clc
mov
idivb
daa
ja
inc
push
and
mov
adc
jno
xor
add
pop
mov
pop
sub
mov
pop
fbld
rcll
popf
inc
outsb
ss
jecxz
ds
cltd
push
jge
addb
fs
lcall
scas
jno
pop
or
xor
push
mov
and
dec
inc
movsl
sub
cld
sbb
lret
cli
addr16
cmp
and
sahf
push
das
or
sbb
or
sti
push
push
or
adc
cmp
mov
cmpsb
cmpsl
mov
pop
or
out
je
lock
repnz
mov
sub
adc
mov
sti
or
dec
incb
mov
xor
rolb
ljmp
insl
sarl
daa
and
push
mov
push
xchg
push
repnz
mov
imul
xchg
out
dec
xchg
jecxz
in
daa
sub
es
imul
or
push
mov
push
xor
test
sub
popa
mov
dec
int3
aam
rcll
inc
or
lret
push
push
add
addr16
inc
sub
mov
leave
lahf
cltd
iret
fisubrl
lods
hlt
pop
sub
xor
fldl
add
iret
adc
insl
mov
ljmp
and
adc
mull
pop
mov
sbb
xchg
ret
push
push
mov
xchg
rcll
jp
movsb
push
xchg
int
jno
or
arpl
in
dec
pop
add
add
and
pop
push
xor
imul
cwtl
xor
in
dec
cmpsl
fisubrl
shl
out
arpl
ljmp
cmc
das
aaa
data16
movl
sbb
sarl
xchg
sti
ficoml
and
clc
jge
sarb
stos
pop
adc
sbb
mov
sub
mov
xor
ret
pusha
cmpsl
popa
and
inc
sub
and
call
push
cwtl
and
mov
adc
sbb
or
pop
add
std
inc
adc
scas
loop
xchg
dec
fstl
add
and
sub
std
jnp
orl
and
sub
xchg
inc
int
shll
adc
outsl
mov
cmp
mov
testl
pop
or
movsl
shlb
sbb
xchg
popa
inc
mov
xor
mov
pop
lds
rorb
popf
test
cmc
push
xor
fdivl
notb
daa
mov
adc
ss
mov
mov
out
sub
or
mov
mov
imul
pop
xor
inc
adc
lret
xchg
xchg
and
popl
cli
lea
adc
inc
sahf
mov
cltd
addr16
sbb
push
stos
xchg
repnz
pop
enter
inc
xor
int3
cmc
xchg
xchg
adc
ds
popf
jae
fists
stc
xchg
add
push
sbb
ret
jne
gs
es
movsl
faddl
insb
adc
sub
fdivrs
incb
into
cmp
popf
add
lret
mov
cli
jbe
sbb
je
aam
shrl
xor
pop
jo
pop
mov
shrl
cmp
shrl
push
inc
fdivr
movl
mov
and
sti
or
punpcklbw
in
xchg
inc
pop
fwait
inc
fdivrs
iret
in
xchg
dec
stos
sarb
jl
sub
adc
and
ss
fidivl
xchg
xor
test
das
ds
xor
mov
sub
or
cmp
lea
sahf
enter
push
rorb
ret
pushf
adc
mov
sbb
push
out
sbb
shrl
icebp
mov
test
fimull
cmp
idiv
stos
inc
sbb
jae
pop
push
cmp
and
bnd
and
ljmp
in
add
jg
sbb
sub
sub
mov
push
aas
mov
filds
dec
movsl
cmc
mov
sarb
xor
add
shrb
addr16
mov
jge
jecxz
sbb
sbb
sub
dec
xchg
movsl
inc
xor
arpl
ret
inc
sub
sahf
lds
outsl
or
sub
insb
fwait
sub
mov
es
ret
add
rclb
jmp
adc
or
hlt
sbb
icebp
dec
fsubp
sbb
jl
lds
add
mov
jb
bound
mov
rclb
push
xchg
mov
or
insb
int3
inc
push
cld
push
sub
cmp
mov
std
fs
adc
pop
imul
add
cmp
add
xchg
adc
lods
mov
or
and
cmp
pop
xchg
out
jmp
jg
cmp
xchg
add
sbb
int3
sar
mov
scas
jbe
popf
dec
ffreep
pop
inc
and
out
and
popf
add
dec
cmp
sub
fcomp
and
and
stos
pop
pop
mov
push
push
mov
mov
pop
les
and
pushf
ficompl
clc
mov
or
mov
mov
inc
xchg
dec
inc
dec
cmp
mov
ret
testb
adc
dec
mov
int3
aam
imul
imul
jle
popa
sbb
cmp
scas
fstl
push
inc
jmp
mov
das
popa
jmp
xor
dec
out
jmp
lahf
addr16
adc
fcmovbe
test
test
pop
repnz
jl,pt
scas
clc
mov
mov
or
jle
sub
jo
dec
leave
push
pop
shr
cmp
mov
mov
cwtl
je
inc
mov
into
roll
push
cmc
ret
dec
lret
leave
stos
sub
inc
inc
jg
test
lret
data16
rolb
outsb
arpl
sub
pop
dec
sahf
mov
int3
pop
into
xchg
and
insl
xchg
aaa
pop
jl
into
loope
push
and
lcall
flds
insl
rolb
mov
add
mov
movl
adcl
add
mov
lds
xchg
repz
adcl
mov
push
jle
pop
and
insb
dec
pop
jb
mov
pop
enter
push
xor
push
stos
pop
mov
push
aad
mov
data16
sub
dec
mov
mov
xchg
sbb
stos
int
mov
mov
xchg
rolb
pop
nop
hlt
out
aaa
sbb
and
sbb
dec
cmp
pop
aaa
pop
aad
out
jae
hlt
jle
xor
dec
rclb
mov
pusha
addr16
inc
push
sahf
mov
fnstenv
inc
mov
sbb
iret
cmp
divb
pop
sub
mov
std
mov
gs
push
xchg
scas
scas
pop
mov
fisttpl
pop
sub
fidivs
sbb
pop
xor
shl
add
test
jmp
xchg
dec
mov
pop
ja
xchg
mov
icebp
jl
xchg
jnp
dec
jo
adcl
pop
mov
push
and
cltd
dec
scas
xor
and
fsubrs
lret
into
loope
xchg
jecxz
and
sahf
imul
les
shrb
outsl
xorl
adc
out
pmaddwd
loopne
inc
imul
lahf
out
in
mov
pop
ss
push
fimuls
loopne
push
add
popf
fcoml
ja
mov
push
cwtl
popa
inc
cs
stc
mov
cmp
adc
cmp
jle
popa
nop
xchg
shlb
cmp
fwait
mov
test
add
push
jg
adc
adc
pop
push
out
xorb
mov
rclb
das
mov
daa
repz
mov
jle
dec
ss
adc
loopne
inc
test
insl
clc
adc
mov
ret
popa
push
push
jb
mov
lods
mov
add
cmp
fnstcw
loop
sub
jge
dec
lahf
lahf
jnp
mov
repz
mov
add
pop
pop
popf
dec
pop
leave
fdivr
mov
mov
mov
push
cli
sub
and
jno
xchg
mov
jb
sti
in
jge
out
fwait
mov
aam
mov
lods
cmp
test
fistpl
pop
push
xchg
xchg
lea
sub
push
mov
sti
test
stos
in
jge
mov
sub
mov
cld
pop
add
sub
pop
xchg
adc
cmp
sarl
pop
js
mov
push
or
cld
out
lss
int
shrl
aam
cmp
sarb
mov
cmp
iret
jo
mov
mov
jle
movsl
mov
pop
nop
iret
bound
pop
adc
loop
in
pop
sahf
dec
pop
push
icebp
les
loopne
mov
stc
popf
inc
bound
sub
cwtl
rorl
ret
adc
sbb
les
jg
int
mov
ret
push
insb
sbb
add
fs
fxam
mov
xchg
inc
outsl
out
fcmovb
xchg
leave
xchg
sti
aad
cmp
call
or
sbb
xchg
shlb
dec
mov
insb
or
or
xor
xchg
add
fcoms
jge
cmp
jl
mull
lcall
push
dec
jmp
shlb
test
mov
sbb
pop
out
leave
lds
mov
and
and
push
add
notl
notl
jl
sbb
pop
cmp
inc
or
lock
mov
fstp
dec
add
mov
jecxz
in
movsl
sub
mov
mov
push
jae
mov
icebp
repz
sub
shlb
and
xchg
push
jmp
shll
xchg
mov
fiaddl
sbb
negl
sbb
pop
shl
inc
sub
hlt
sbb
test
inc
mov
lahf
xor
aaa
test
aad
dec
inc
and
cmpb
jne
incl
xchg
negb
fmull
lret
inc
sub
fistpl
es
and
imul
push
cld
lea
push
test
int
pop
lods
push
push
mov
call
pusha
push
insl
or
ljmp
cmp
jl
mov
test
cmpsb
movsl
incl
and
out
add
shr
mov
out
movsl
and
xor
test
or
into
gs
mov
xchg
inc
out
mov
jg
inc
mov
lock
ret
sub
notb
inc
cmpsl
pusha
adc
cmpsl
lcall
filds
sahf
dec
cmp
push
pop
bound
cmpsb
and
push
mov
adc
scas
push
repz
mov
jmp
push
xchg
push
arpl
adc
inc
ret
fidivrl
xor
jmp
je
dec
adc
jl
sub
inc
dec
jg
mov
jno
cmpsb
dec
inc
loope
pop
adc
push
mov
cmp
cs
add
shrl
jbe
insl
lcall
add
cmpsb
inc
enter
and
in
iret
aam
aas
in
adc
fwait
cltd
or
and
sub
xchg
mov
rorb
add
icebp
ja
fldt
dec
pusha
es
notl
in
inc
hlt
test
aas
into
push
jmp
xchg
fdivrl
je
aaa
orl
ret
or
mov
lds
pop
adc
ret
push
bound
sbb
cltd
pop
adc
push
lret
lods
mov
xchg
cmp
sahf
mov
sub
or
gs
adc
pop
adc
pop
mov
test
addr16
fadd
sbb
ja
push
lcall
sub
aaa
loop
add
jle
sub
outsl
out
or
push
outsb
or
xlat
mov
mov
idivl
je
cmpsl
ficoms
or
or
adc
pop
int
std
xor
inc
xorb
or
adc
or
sbb
aad
mov
push
loopew
lret
jl
movsl
aaa
and
cmpsb
and
pop
push
aas
jp
dec
jbe
inc
push
mov
mov
mov
cmp
sub
pushf
stc
pop
mov
xchg
aad
lcall
outsb
rcl
mov
aas
pop
xchg
test
aas
mov
movsb
add
ret
pop
push
push
xlat
sub
pop
js
out
sbb
mov
or
sbb
nop
fs
pushf
mov
adc
push
mov
mov
push
in
mov
add
xchg
dec
divl
adc
push
in
imul
xor
iret
xor
fildll
cld
cli
popf
sbb
jecxz
xchg
leave
pop
add
xchg
lds
fildll
rcrb
jle
scas
aam
es
pop
test
cwtl
mov
mov
dec
xchg
push
lcall
hlt
jmp
or
mov
mov
xlat
iret
xchg
fisttpl
jnp
add
data16
jno
ret
mov
int
mov
out
in
sbb
or
sub
push
push
in
into
fnstcw
inc
ja
mov
aam
dec
into
mov
out
or
loopne
dec
int3
arpl
sub
lret
jle
dec
test
cmc
rcrl
mov
xor
xlat
mov
push
daa
in
mov
fists
jmp
sarl
imul
inc
or
mov
mov
and
mov
xchg
sahf
add
xchg
fsubs
loope
cmp
jmp
packsswb
outsl
fisttpll
movsb
mov
cmc
out
mov
call
cld
gs
in
pop
cmp
mov
adc
repnz
loopne
push
pop
mov
cmpsb
pushf
adc
cmp
xchg
and
je
fists
icebp
inc
push
testl
cld
idivl
push
fstpt
fdivrl
ret
inc
loopne
jecxz
call
frstor
fwait
stc
adcb
std
inc
jl
es
sub
loop
lock
lcall
pop
mov
adc
lods
lahf
jle
xor
mov
push
shrb
ja
add
mov
les
mov
jo
lds
loop
leave
dec
repz
sbb
mov
sub
push
scas
js
addr16
gs
insl
daa
scas
and
dec
cld
pop
xlat
push
jl
aam
in
add
adcb
mov
xchg
or
dec
dec
test
or
negl
sbb
sti
cmc
test
dec
faddl
clc
push
dec
sbb
fwait
addl
test
fdivrl
shrl
mov
psllw
sarb
jae
or
hlt
data16
push
xchg
stos
nop
add
add
cmp
in
imul
hlt
push
and
test
aas
repz
pop
int3
cmp
insb
jo
pop
jbe
ror
divl
cmpsl
jae
adc
xchg
jp
push
jno
icebp
pop
shlb
xlat
lds
cmp
mov
jl
adc
dec
jecxz
popa
and
xchg
decl
jge
push
jb
test
jne
int3
icebp
aad
pop
mov
push
push
adc
vcvtpd2psy
movsl
sbb
mov
incb
hlt
icebp
fs
jmp
mov
or
xorb
stos
sub
gs
out
or
dec
adc
mov
cmpl
test
cli
or
cmc
aaa
lds
je
xchg
loop
sub
imul
cmp
in
mov
and
lret
mov
daa
and
xchg
insl
sbb
mov
mov
xor
add
or
sub
dec
push
cmp
sub
jl
sahf
rcll
test
mov
cmp
outsl
push
dec
test
cmp
ret
add
iret
aas
pop
sbb
ds
dec
jl
push
repz
pop
sbb
mov
add
int
add
mov
cs
fisubrs
xor
cld
fwait
cli
lds
push
idivl
xor
cmp
pop
cld
out
imul
orl
cld
mov
cli
xchg
sub
dec
cli
cwtl
repnz
adc
jne
mov
sahf
inc
loop
out
and
mov
mov
xchg
pop
mov
and
cmp
outsb
cmp
adc
sub
mov
adc
or
lret
movsl
mov
outsl
ret
sub
mov
mov
or
fimull
jo
lahf
ds
inc
mov
addb
dec
add
and
hlt
popa
repnz
in
mov
inc
jp
mov
popa
mov
adc
aas
ja
xor
jle
mov
pop
repz
aas
adc
mov
xchg
push
jnp
lods
scas
pop
inc
or
pop
sti
sbb
xlat
stos
mov
subb
inc
push
jmp
test
aaa
mov
ret
mov
fst
shlb
add
jnp
pop
int
fcmovne
ret
fs
les
push
xchg
jmp
or
mov
add
fs
cli
inc
hlt
mov
xchg
sbb
cltd
ss
out
shlb
xchg
rcl
and
jnp
in
jmp
enter
cmp
fs
push
or
shl
inc
int
adc
popa
push
inc
or
mov
push
mov
jge
out
xor
scas
push
xor
int3
insl
outsl
sub
repnz
push
and
inc
lods
sub
repz
dec
ret
es
jge
pusha
loopne
orl
dec
ja
mov
jge
mov
adc
mov
fs
pop
rolb
mov
jb
pushf
mov
inc
xor
test
ret
or
out
cmp
jnp
inc
jg
mov
jl
in
push
iret
out
jns
fsub
clc
arpl
mov
jmp
sub
jge
mov
dec
pop
and
mov
add
cltd
add
jno
pop
lret
adc
out
addr16
cmp
push
mov
movsb
inc
lret
fs
jmp
push
cmc
cmp
out
sbb
lahf
rcrb
popf
mov
push
cmp
fwait
lock
dec
jmp
jmp
pmuludq
repz
loope
mov
in
out
pop
jb
popf
cmp
aam
lret
sahf
sub
jns
lcall
sub
popa
inc
das
lea
jmp
dec
sahf
inc
dec
mov
or
dec
adc
gs
sbb
sti
nop
popa
cmp
insl
stos
add
mov
cwtl
fmuls
test
mov
cmp
jne
or
cmp
loop
std
push
sub
xor
imul
dec
push
pop
mov
cmp
cli
pop
add
ss
and
addr16
shlb
outsl
shr
cmpl
inc
idivb
adc
cwtl
rorl
jecxz
out
lret
adc
mov
addr16
mov
dec
je
es
cmp
or
add
inc
fisubs
jp
jno
repnz
pop
xchg
aad
inc
mov
lods
cs
sub
xor
inc
mov
dec
insb
jb
call
lods
push
dec
fs
push
ret
mov
inc
sbb
cmp
jno
outsb
leave
inc
add
bound
fsubrs
mov
jbe
jle
insb
aaa
ds
adc
lahf
nop
dec
ficoml
std
xchg
xchg
daa
icebp
dec
xor
sub
shll
push
push
inc
repnz
inc
std
and
xor
imul
mov
pop
hlt
clc
dec
cmp
fldcw
push
mov
push
cmpb
in
iret
sbb
jnp
insb
add
jbe
cwtl
aam
inc
dec
fildl
mov
rolb
insb
insb
mov
addr16
aad
push
mov
js
sahf
inc
pop
fsubrl
mov
pop
repnz
sbb
mov
imul
inc
and
or
push
shlb
dec
test
or
sbb
sbb
daa
xchg
sahf
add
jl
cmpsb
xor
mov
stos
sub
outsb
aad
sub
or
repz
int
cltd
mov
gs
lods
push
icebp
test
nop
pusha
add
xor
test
inc
aad
dec
cmp
insl
cmp
aaa
pop
cmp
bound
and
movsl
bound
insb
ljmp
sbb
pop
inc
jp
test
push
pushf
push
mov
insl
std
and
arpl
pop
std
pop
outsb
stc
ret
sbb
inc
sbbb
leave
adc
push
lds
jae
add
pop
pop
mov
repnz
popf
sarb
fnsave
inc
fcmovu
aad
pusha
imul
fidivl
sbb
xor
into
xlat
mov
loope
mov
bound
xlat
add
cmpsl
adc
lods
insl
lds
push
cmp
mov
cmp
dec
je
mov
rolb
outsl
outsl
mov
imul
icebp
nop
lds
sti
xor
sarb
leave
xor
out
push
mov
inc
sbbb
xchg
icebp
outsl
dec
add
mov
sar
ret
frstor
jge
sti
aas
adc
mov
pusha
jg
shll
cmp
mov
or
test
insb
rcrl
ret
outsb
xor
cmp
std
push
pushf
mov
sub
mov
mulb
outsl
adc
cltd
mov
leave
mov
adc
lods
inc
adcl
adc
mov
push
xor
jle
mov
cmpsb
lret
and
mov
lret
test
insb
and
jecxz
push
pop
imul
cltd
mov
or
cmp
lret
lahf
jge
xchg
push
adc
sti
dec
sub
lret
cmp
adc
and
shl
mov
imull
dec
lahf
jae
es
and
and
inc
adc
push
repnz
test
push
inc
arpl
daa
cmc
push
insl
lock
ja
mov
jl
xchg
add
xchg
jbe
shrl
dec
or
mov
outsb
cmpsl
lods
cld
mov
mov
jne
rcll
push
dec
filds
dec
push
sti
or
adc
push
imul
xchg
cld
cld
xlat
test
xchg
fbld
arpl
fucomip
xchg
movsb
sbb
adc
and
pop
std
cmp
xchg
cmp
movsb
xchg
jno
xor
cmp
jmp
cs
sbb
inc
mov
notb
std
lea
inc
xor
jb
cmc
adc
testl
divb
out
lock
dec
add
in
sar
or
test
xchg
and
sbb
mov
or
andl
or
adc
outsb
sub
mov
sbbl
dec
scas
fcomps
pop
dec
sub
mov
std
paddd
pop
and
pop
movsb
les
adc
nop
sti
stc
mov
add
vsubsd
fwait
std
dec
dec
sub
pop
mov
leave
add
pop
lds
sub
jg
mov
cmpsl
dec
push
xor
jo
repz
add
cmc
and
xchg
push
inc
jmp
sahf
out
pop
es
or
add
mov
in
iret
cmp
std
mov
loop
push
mov
or
fstpt
stos
pop
in
mov
je
xchg
dec
lock
in
mov
jge
mov
dec
movsl
loopne
das
jl
sub
pushf
pop
and
or
stos
xchg
adc
loope
adc
pop
xchg
xor
ret
lea
xchg
push
mov
cmp
dec
pop
sbb
lcall
or
xorl
cltd
nop
and
pop
icebp
mov
mov
rorl
ss
fsub
movsl
fcomps
sub
inc
cltd
fisttps
loope
cs
lcall
idivb
pop
aas
mov
fwait
jae
pop
aad
xor
push
adc
stos
gs
sbb
inc
in
xchg
cmp
into
fcoml
fisubrs
pop
clc
mov
aas
clc
push
inc
sub
adc
jmp
cmpsb
test
les
rcrb
xchg
mov
fmull
mov
bound
insb
xchg
push
push
mov
loopne
pop
jmp
add
movq
mov
js
jb
dec
test
das
jbe
sub
in
das
add
push
jbe
scas
xor
mov
out
addl
shlb
fnstsw
cmp
dec
lcall
lahf
iret
lds
jbe
es
cmp
jae
dec
pop
mov
mov
sub
mov
addr16
jp
and
cltd
daa
out
add
inc
cli
push
sahf
and
jne
xor
sub
fwait
out
fnsave
lods
inc
xor
aad
clc
mov
pop
scas
adc
xchg
mov
adc
js
test
jl
mov
mov
test
inc
mov
jp
lods
or
or
and
xchg
jge
xor
aas
and
pop
in
pop
shll
mov
push
inc
sahf
ss
ss
mov
je
cmp
fs
mov
out
mov
fidivs
testb
sub
xor
inc
hlt
inc
jl
lret
inc
lahf
mov
rorl
add
mov
mov
mov
add
cmp
scas
imul
in
jl
adc
and
dec
mov
jge
push
dec
fwait
add
repz
mov
sar
ja
sti
iret
es
fisttps
jl
push
cmp
jo
dec
rclb
pop
mov
shll
repnz
ljmp
mov
push
jbe
inc
pop
mov
cmp
mov
or
mov
jge
shll
mov
jl
cs
or
popa
je
in
test
repnz
pusha
data16
jg
mov
inc
fdiv
mov
and
xchg
gs
jl
movsb
inc
xchg
movsl
or
cmpw
das
sub
pusha
loop
int
imul
mov
imul
clc
stc
repz
stos
push
mov
mov
mov
xorl
xlat
sahf
dec
ret
nop
adc
or
orb
pusha
sub
add
dec
idivl
mov
mov
pop
cmp
lds
mov
mov
shll
cli
aam
in
pusha
push
js
loopne
cmp
inc
shll
jmp
mov
xlat
sub
xchg
addr16
adc
push
imul
jnp
xor
nop
xor
cld
sbb
sbb
pop
xor
or
or
inc
push
push
scas
popa
push
sbb
pop
test
mov
push
or
pop
xor
inc
push
outsl
movsb
aas
push
push
and
paddsw
test
std
repnz
stos
jg
and
jne
push
inc
xor
in
fildl
aad
call
mov
pop
jb
popf
out
fwait
mov
shlb
sub
xchg
mov
sbb
pop
and
out
xchg
sar
adc
addr16
inc
out
es
shr
cmp
push
into
push
popf
mov
pop
je
lcall
jmp
mov
iret
lcall
pop
or
push
push
int3
arpl
test
push
daa
hlt
lods
add
iret
add
rolb
fists
enter
mov
mov
or
andl
lods
rolb
sar
and
or
loope
outsl
push
sbb
addr16
mov
cmp
and
inc
filds
jne
cmpsl
sub
and
jp
xchg
in
scas
cli
mov
sub
popl
pop
mov
mov
and
das
push
push
jnp
insb
sub
pop
into
jns
or
imul
cmpsb
mov
stos
jecxz
or
movsb
lods
enter
inc
rcll
push
xor
test
push
mov
or
xchg
cmp
gs
jno
incl
in
sbbb
xlat
push
add
mov
pop
push
add
iret
jl
inc
rcll
inc
inc
xor
and
aad
sub
addr16
test
xchg
jle
pusha
repnz
sub
mov
les
lret
clc
pop
jns
pop
push
jg
mov
out
push
xchg
cltd
add
jl
pop
push
push
mov
inc
xor
adc
shll
lods
mov
std
add
aad
mov
imul
or
sbb
dec
mov
xchg
sbb
pop
lahf
or
and
xor
mov
push
popl
jg
pop
jg
test
cmp
mov
lods
lea
jmp
push
push
xchg
out
fcoml
les
test
dec
push
data16
fisubl
mov
inc
jmp
inc
dec
cmpsl
add
pop
repnz
shlb
jo
mov
mov
sbb
pop
addr16
adc
into
push
mov
test
jmp
icebp
data16
repnz
push
lahf
lds
out
loop
push
cwtl
lcall
test
adc
mov
clc
into
or
test
jno
and
push
rol
test
or
movsl
dec
ret
cmp
mov
or
mov
stos
mov
sub
stc
stos
stos
xchg
stos
ret
cmpsl
mov
lods
mov
add
sarl
ret
cli
sub
rcrb
cmc
mov
add
stos
inc
push
mov
jae
into
mov
outsb
dec
mov
sbb
pop
cmp
fcmovne
stc
insb
dec
and
xchg
aaa
mov
mov
xor
notl
test
inc
iret
out
sbb
pushf
sub
jmp
out
aaa
ss
cmp
les
stos
fs
ds
mov
pop
leave
das
mov
pop
fildl
jg
fsubrl
pusha
add
add
sbb
xor
sti
mov
xchg
xchg
leave
jp
movsl
int3
pop
mov
dec
bound
cltd
stc
test
adc
or
ljmp
cltd
pop
rol
sbb
adc
xchg
cmp
dec
call
loope
cmp
imul
sub
in
lret
add
repz
call
lods
nop
push
or
sub
inc
inc
push
or
jnp
inc
xor
pop
stc
mov
loope
dec
ljmp
pop
add
cld
mov
dec
mov
xchg
xchg
call
adc
jb
fsubl
xchg
cs
mov
mov
mov
scas
sbb
lret
ret
xchg
call
arpl
jg
sbb
aam
hlt
jl
dec
dec
and
lret
ja
xchg
pusha
inc
adc
out
xchg
adc
fidivrl
adc
out
jno
jp
test
mov
xchg
lds
js
sub
std
sbb
pop
cmp
sbb
aas
lock
push
popf
aad
mov
add
movsb
fistl
xchg
cmp
pop
xchg
jb
repz
test
xchg
sbb
push
std
test
dec
mov
aas
fstp
fs
insb
lock
int3
dec
pop
pop
push
jle
cmpsl
iret
cld
popf
lea
adc
sahf
int3
push
add
and
jo
push
loopne
sbb
sub
mov
dec
loope
ljmp
fists
ret
stos
add
daa
push
mov
pop
sarl
sbb
fxch
ss
jle
xchg
and
mov
enter
mov
lret
fisubl
or
xchg
ja
scas
fistpl
test
out
repnz
xchg
dec
movsl
cmpsl
push
pop
gs
and
ret
inc
pushf
ljmp
orl
mov
adc
repnz
out
xchg
jo
adc
mov
lds
mov
dec
iret
push
mov
pop
pop
mov
cmpsl
jae
sbb
jl
add
dec
lret
mov
popa
dec
fisubl
iret
inc
xchg
shlb
xchg
mov
pop
lahf
jle
cmpsb
or
mov
mov
jb
mov
popf
sarb
or
sub
pusha
jne
push
movsl
insb
icebp
stos
mov
xor
lcall
jecxz
mov
sub
xchg
pop
lea
jae
in
out
int3
push
pop
mov
xor
add
push
dec
pop
adc
cmp
sahf
gs
in
scas
inc
cld
scas
sbb
push
sahf
adc
shll
iret
lock
icebp
dec
das
orb
scas
push
sbb
mov
addl
xchg
jne
popa
lods
xor
pop
xor
adc
mov
mov
orb
dec
adc
ja
addr16
dec
bound
xor
dec
cmp
adc
mov
in
push
inc
dec
jmp
dec
jecxz
xchg
fstps
and
into
or
nop
adc
ljmp
pop
add
out
jnp
adc
ss
std
sbb
bound
fnstcw
pop
cmpsb
sbb
jg
add
shrl
loope
mov
idivl
addr16
pushf
mov
sarl
dec
xchg
ret
mov
xchg
jnp
mov
pop
adc
sti
or
arpl
mov
pop
xchg
shll
repz
mov
push
or
mov
mov
pop
jne
in
ret
dec
ss
jle
jl
add
mov
sub
shrl
leave
cmp
mov
push
jmp
or
push
out
xor
xlat
daa
cmp
adc
adc
push
pop
mov
jmp
inc
movsb
sbb
pop
ljmp
cmpsl
xorl
mov
in
out
add
sbb
out
cmp
sbb
cmp
mov
into
out
fdiv
lods
pop
mov
mov
outsl
sbb
in
mov
jge
int
push
xor
aaa
les
mov
pop
fmulp
test
pop
ljmp
push
xchg
cld
or
repnz
std
push
xchg
xchg
mov
ja
int
jbe
divl
gs
jle
cli
jae
out
jb
inc
bound
cmp
add
push
mov
lcall
in
and
mov
cli
or
cmovbe
sahf
hlt
push
jge
cltd
sbb
sarb
pop
das
psllq
stos
lea
mov
xor
jne
loopne
lret
lods
pop
ret
push
xorb
lcall
add
test
pop
or
sar
push
jmp
mov
sbb
mov
test
add
push
xchg
mov
adc
mov
fbstp
mov
out
js
dec
cmp
sti
xchg
mov
jns
into
popf
mov
enter
or
sub
int3
movsb
push
jg
or
sbb
dec
lds
sub
mov
aaa
mov
lcall
mov
adc
push
lds
cmp
xchg
test
and
push
ret
lcall
jl
adc
mov
mov
ss
inc
mov
sbb
sub
or
je
movsl
cmp
iret
into
out
out
push
sahf
cli
mov
mov
sub
and
jns
dec
and
outsl
clc
mov
inc
and
jg
fisttpll
adc
repz
or
lock
dec
push
xor
push
inc
and
cmp
cltd
jnp
xlat
mov
adc
lea
jmp
cmc
and
fcoms
xchg
inc
out
test
imul
lock
cmp
or
pop
lock
aaa
mov
ljmp
lret
xor
push
jp
mov
mov
out
pop
inc
rcrb
inc
dec
xor
and
mov
int
cmp
jmp
adc
mov
cmpsb
roll
sahf
push
gs
xor
adc
jno
adc
dec
sub
cwtl
xor
loopne
cs
mov
xchg
jmp
bound
cltd
lret
xchg
push
sub
cmpb
fcmovnbe
lcall
faddp
sbb
cmp
scas
or
imul
adcl
xor
sbb
test
xor
dec
xor
inc
or
fidivrs
inc
xchg
sarl
jae
xor
stc
iret
aaa
sbb
and
cmp
mov
xchg
pop
adc
mov
lahf
inc
or
nop
jns
inc
mov
lahf
sarb
pop
mov
test
adc
mov
and
aam
and
pop
jle
pop
fwait
lret
jne
pop
mov
stos
push
out
pop
test
orl
xchg
aaa
outsb
xor
add
mov
test
adc
cltd
fdivl
popf
mov
mov
xor
rcrb
and
dec
jae
mov
mov
int3
sub
out
dec
mov
pop
pop
popa
fiaddl
xor
mov
cmp
stos
out
cmp
les
jg
ret
add
dec
aaa
jmp
enter
test
bound
into
sub
cmpsb
ja
arpl
xor
cmp
cld
dec
mov
sahf
int3
decb
pop
das
mov
pop
ret
add
mov
mov
mov
mov
pop
out
jb
cmp
and
mov
aaa
sub
adc
adc
fistpll
cltd
in
sbb
jle
or
nop
das
xchg
scas
add
inc
insl
mov
ud2
inc
mov
xor
int3
mov
dec
testb
pop
xor
into
test
inc
xchg
call
and
scas
bound
xor
add
jb
adc
fwait
add
cmp
jbe
rorl
add
fisttpll
adc
mov
iret
imul
xor
jb
cmp
or
sub
adc
enter
sti
inc
fmul
adc
movsl
xchg
mov
inc
lods
in
jno
inc
cwtl
inc
sbb
sahf
add
andl
pop
fildl
js
and
gs
sbb
shlb
daa
fwait
mov
mov
std
and
fdivs
sbb
jle
mov
addl
xor
daa
lret
movsl
or
insl
pop
mov
into
push
out
xchg
cmpsb
das
push
dec
clc
inc
xchg
in
pop
aaa
insl
dec
inc
scas
lea
sahf
xor
sbb
repz
nop
shll
div
repnz
mov
sub
pop
add
adc
shlb
push
dec
daa
and
cltd
mov
incl
dec
mov
js
nop
adc
ret
in
xchg
push
rcl
sbbb
dec
jg
iret
jno
ret
gs
sbb
mov
fisubrl
push
stos
outsb
pop
pop
int3
cltd
xchg
and
and
cwtl
mov
push
sarl
mov
in
lret
in
shrl
popf
mov
sub
jecxz
dec
and
out
stc
jecxz
lret
lods
adc
jae
insl
xor
arpl
pop
inc
push
in
xchg
sub
dec
pusha
mov
mov
enter
out
add
cmp
pop
dec
out
sbb
adc
shl
or
add
jp
mov
test
inc
adc
cmp
push
sub
incb
lods
je
jno
dec
xchg
push
daa
mov
and
and
mov
xchg
aam
sub
int
pop
push
inc
sub
add
or
pop
dec
es
imul
fdivrl
std
gs
out
ret
jecxz
push
pop
fs
ss
pusha
pop
int
xor
lcall
call
adc
int
test
stc
mov
or
mov
and
push
and
out
jb
sbb
ja
xchg
loop
int
cmc
lret
inc
lods
or
or
ss
xchg
mov
jo
add
out
xchg
jmp
dec
fdiv
push
cmp
and
mov
mov
jno
mov
xchg
insl
dec
pushf
sbbl
stc
aam
dec
shlb
daa
insb
sbb
mov
jle
xor
adc
jns
aaa
or
out
mov
stos
xchg
pop
adc
cs
rorb
rep
jnp
mov
push
add
mov
mov
jns
jns
out
shl
pop
sbb
lods
adc
lods
lahf
mov
js
push
jp
dec
jne
aas
pushf
jns
rcrl
xor
xchg
pop
xlat
in
cli
xchg
add
adc
push
iret
cld
lret
pop
xchg
adc
movl
xorl
rcl
into
lret
cmp
lcall
lods
imul
push
imul
mov
lcall
dec
out
idivl
mov
xchg
push
sub
xchg
push
jns
xlat
push
xchg
dec
xchg
xor
imul
jg
incb
jne
sbb
dec
or
and
mov
sub
stc
sub
sbb
aad
xor
push
sbb
sbb
push
add
fisttps
movsl
clc
mov
mov
sahf
jmp
mov
pop
mov
fs
insl
sub
lods
aam
std
push
insb
mov
cmc
scas
imul
or
push
icebp
and
sub
and
sbbb
adcb
jno
adc
jecxz
fisubrs
out
idivl
mov
adc
adc
mov
push
lods
adc
xor
stc
adc
sbb
jp
into
pop
inc
aas
mov
and
jge
movsb
andb
out
aad
mov
pop
sbb
adc
mov
outsl
aad
lcall
push
shl
jg
cmp
fcmovnbe
sub
rcrl
in
xchg
pop
and
mov
pusha
cmpsl
jae
inc
mov
jb
pop
dec
mov
xchg
bound
mov
xchg
stos
jp
call
jl
dec
rcrl
fdivrl
pushf
jne
decb
sub
mov
or
imul
xchg
or
mov
push
inc
shlb
sbb
mov
mov
cli
mov
ja,pn
daa
xchg
xchg
sbb
xlat
cmc
outsl
mov
dec
dec
mov
ljmp
decl
imul
lahf
les
mov
scas
xchg
sub
cmpsb
arpl
push
cmc
das
mov
mov
xor
xchg
into
xor
aad
xor
pop
add
aad
cmp
cwtl
enter
ja
jne
fs
popf
sti
out
dec
jge
lea
cli
lds
xchg
mov
cmp
jne
pop
mov
push
bound
pop
xor
mov
or
ret
aam
mov
mov
out
mov
pop
sub
xor
imul
lcall
mov
cmp
int3
fisubrl
jp
scas
in
xchg
cwtl
sub
dec
inc
fwait
xchg
pop
in
add
jecxz
and
cmp
cmp
xchg
aaa
adc
sti
test
adc
sbbb
and
sub
rcrl
push
imul
pusha
cmpsb
loopne
add
jns
jle
loope
mov
call
jnp
xchg
pop
icebp
dec
xlat
pop
sbb
mov
ljmp
cmp
jp
pop
dec
push
sbb
ret
dec
test
fidivrs
or
fsubrs
inc
out
push
mov
xchg
add
cwtl
cwtl
fwait
add
jbe
pop
loop
fstpl
mov
sbb
ds
arpl
loopne
add
sbb
cmp
push
aam
imul
push
jno
mov
dec
or
and
pusha
int
out
push
pop
aas
scas
mov
cmp
ds
xlat
addr16
xchg
test
sti
decl
repnz
scas
xlat
adc
sarb
hlt
adc
fucomp
mov
inc
inc
mov
iret
testl
fstpl
pushf
adc
jae
or
jl
sbb
or
mov
adc
jle
adc
xchg
inc
jae
cmpsl
into
rcll
in
lods
and
sbb
xor
daa
repz
mov
cltd
insb
imul
mov
inc
stos
icebp
cmp
fisttps
fistpl
test
lret
and
mov
mov
out
cli
and
pop
cmp
push
imul
mov
ss
mov
mov
pop
ss
jo
mov
int
cmc
ds
lea
and
jno
lret
pop
testl
push
jl
or
xor
adc
aas
in
mov
jnp
xchg
ljmp
les
cmp
add
mov
inc
adc
jg
ljmp
mov
jg
dec
fs
mov
stc
inc
sarb
push
and
addr16
fcmovnbe
sub
in
testl
imul
stc
sbb
mov
jb
fs
cld
pop
sub
iret
outsl
dec
push
enter
sub
mov
xor
inc
or
imull
sbb
push
fisubrs
adc
int
push
std
int
dec
jp
jmp
mov
push
lea
in
sbb
sub
loop
jb
leave
out
data16
mov
movsb
ret
or
in
pop
mov
andb
aad
ja
or
inc
insb
jns
mov
inc
sbb
dec
pop
pop
dec
cs
out
fisttpll
fs
sbb
xor
mov
ds
iret
push
addr16
out
hlt
in
xor
cmp
jmp
mov
pop
and
shrl
sbb
dec
jne
push
sub
dec
pusha
stos
jne
in
mov
dec
xchg
scas
gs
pop
les
imul
divb
fs
mov
ds
aas
add
xchg
adc
int
xchg
imul
mov
loop
push
jge
out
fwait
mov
jns
leave
add
outsb
mov
out
push
dec
mov
xchg
sar
dec
inc
cmp
mov
fst
jecxz
divb
and
in
or
and
js
add
cmpsb
stos
fnop
inc
test
mov
mov
inc
ret
or
push
mov
or
or
fsubrl
test
int3
xor
pop
dec
lds
and
mov
pusha
dec
cmp
mov
xchg
add
pop
lock
fsubrl
insb
adc
or
adcl
fcoml
inc
jne
push
test
sub
jmp
sbb
divl
push
sbb
int3
dec
divl
loope
mov
xor
cmc
mov
xchg
adc
xchg
stos
sbb
das
push
aaa
arpl
dec
pusha
ja
and
in
aaa
ror
pop
jo
cmp
lods
push
inc
mov
andl
shll
out
or
cmpsb
xor
les
sbb
rorb
scas
push
jo
cli
cwtl
leave
inc
test
fisttps
leave
pop
mov
test
push
lret
adc
push
fisubs
mov
xchg
jmp
pop
xlat
push
mov
aas
mov
andl
scas
xchg
xchg
add
or
aam
inc
push
cmp
mov
xchg
mov
push
repnz
mov
lea
sbb
dec
loope
std
stc
dec
rcrl
xor
xchg
sahf
dec
sbb
jno
cmp
insb
mov
xchg
fdivrs
mov
rcrb
mov
popa
nop
adc
sub
divl
rorl
and
cmpl
or
dec
or
or
or
adc
add
push
ficompl
cmp
and
push
mov
add
hlt
inc
adc
iret
push
lock
or
xor
inc
adc
or
ljmp
stos
nop
inc
scas
cltd
mov
mov
aas
lods
sub
xchg
jl
ret
cs
int
movsb
and
bound
lret
mov
and
les
int3
sub
xchg
cmp
imul
push
mov
sbb
pop
push
inc
leave
pop
dec
fildl
ja
cli
xorl
xchg
lcall
ja
popf
pop
mov
and
ja
test
ret
outsl
icebp
dec
popf
xor
arpl
fbstp
sbb
jl
dec
leave
sbb
mov
sbb
gs
pop
mov
mov
jb
mov
call
aaa
imul
imul
clc
mov
lds
fbld
jnp
adc
test
jno
movsl
pop
add
in
movsl
jle
adcb
inc
xor
das
xchg
sub
shl
push
stos
xor
mov
fisubl
scas
ds
or
rol
aas
ja
jl
adc
sahf
js
popf
pop
mov
inc
cmpl
add
scas
in
icebp
ljmp
xchg
test
push
pop
push
or
imul
lods
push
dec
lret
mov
adc
xor
fxch
sar
adc
in
shr
inc
mov
push
cs
mov
loop
loope
jne
js
add
xchg
aam
xchg
cmp
lcall
scas
jo
sti
out
ljmp
stos
mov
and
sbb
and
xchg
pushf
or
sub
cmp
xor
stos
mov
mov
sbb
dec
cltd
stos
sarl
cltd
jae
jecxz
lea
call
pop
inc
push
pop
repz
mov
cmp
scas
xchg
xor
push
mov
popf
lock
pop
imul
lahf
sub
mov
out
cmp
sub
pop
not
sar
lahf
in
push
sub
arpl
mov
mov
lcall
fs
cld
jmp
xor
out
lods
mov
mov
cmp
subl
fdivrl
fsubs
xor
idivb
sbb
jno
jl
mov
mov
fs
and
dec
jge
test
cmp
mov
inc
push
adc
subl
xor
bswap
cltd
addl
in
cmp
enter
mov
rclb
shrl
jmp
inc
mov
cli
pop
push
mov
test
mov
mov
orl
data16
pop
cmp
rcl
lea
out
into
and
repnz
cmc
fisubrs
fwait
loope
into
in
jl
jl
stos
lret
mov
mov
xor
idivb
push
stos
shlw
add
cmp
cmp
mov
stos
dec
movsb
sub
fnstcw
pop
pushf
arpl
stc
ret
fdivs
repnz
cmp
adcl
sahf
cli
pop
mov
and
into
dec
jp
test
enter
lods
jle
test
pop
xchg
sti
cmp
xchg
jmp
mov
lods
or
mov
pop
jmp
push
fistl
pop
inc
jb
icebp
je
dec
fstpt
in
daa
lret
into
scas
fnsave
xor
mov
push
adc
inc
add
cmpb
inc
fwait
mov
add
mov
fsubs
popa
add
test
in
je
jae
sbb
or
iret
sbb
fdivrs
jns
inc
mov
mov
adc
adc
push
sbb
fdivr
push
mov
mov
cli
mov
pop
inc
cli
negl
xor
lcall
sub
cmp
lds
lds
push
stos
adc
cmpsl
shll
add
pmulhuw
dec
inc
popa
mov
cmpsl
jo
cmp
mov
ret
push
pop
ja
jl
mov
push
sbb
arpl
jne
dec
dec
in
cmovge
or
dec
cmp
in
fildl
sub
sbb
rcrl
hlt
push
adc
mov
xchg
jecxz
into
jmp
call
adc
popa
dec
shrb
mov
cltd
mov
addr16
ljmp
mov
rorb
jns
xor
inc
add
movsl
test
sub
pop
jo
fcompl
mov
dec
sbb
out
bound
pop
mov
sbb
jo
and
fidivl
inc
xchg
aaa
push
dec
out
out
pushf
push
insb
aam
das
pop
jno
mov
ret
pop
scas
stos
pop
int3
repz
out
mov
stos
aas
lret
inc
and
push
mov
xchg
adc
mov
inc
and
les
mov
push
jo
test
dec
jne
adc
cmp
fmuls
lahf
xchg
mov
cli
xor
shlb
xlat
inc
repz
cmpsb
sbb
cltd
mov
sbb
shl
lds
das
outsl
cli
insb
and
cmpsl
or
icebp
xchg
negb
test
daa
sbb
js
ljmp
lock
push
jno
and
mov
pop
data16
lods
sub
jno
pop
imul
push
mov
mov
popf
mov
inc
cmpsl
push
stos
hlt
cmpl
xchg
in
push
fwait
lea
jnp
hlt
push
sbbb
loopne
pop
out
push
pop
adc
mov
sub
cmp
ret
push
std
gs
movsb
mov
xor
lret
stc
loopne
adc
sub
cltd
add
mov
fdivrs
cmp
icebp
xchg
roll
and
pop
mov
inc
xor
stos
test
inc
ret
mov
out
outsl
cmc
cmp
testl
xchg
inc
fldcw
jge
push
push
add
scas
rcl
pushf
out
lock
cmc
out
cmpsl
push
stos
out
sub
lea
or
testb
daa
jge
dec
push
int3
cmp
dec
mov
mov
mov
and
add
scas
xchg
push
push
fwait
push
and
xor
fbstp
popf
dec
lds
sbb
movl
inc
clc
jb
enter
push
pop
test
rep
scas
xchg
out
jl
cmp
pushf
xchg
mov
imul
and
jo
je
dec
sbb
fadd
mov
push
sbb
add
adc
in
cmpsb
adc
rolb
jae
jp
and
fidivs
push
icebp
jne
mov
lock
imul
test
jge
fidivrl
jmp
insl
nop
aad
repnz
dec
dec
pop
shlb
test
inc
ss
push
sbb
sbb
xchg
jbe
adc
popa
jge
dec
out
mov
pop
or
rorb
sti
hlt
cmpsb
popf
clc
aaa
aas
mov
adc
loope
push
into
jb
xor
jl
and
lret
ret
stos
dec
aam
mov
into
out
sub
aaa
sub
xchg
in
add
push
int
popf
jecxz
adc
aas
cmp
xchg
jnp
cmpsl
inc
or
pop
jns
pop
mov
adc
inc
mov
cmp
sbb
das
or
mov
bound
out
sub
jle
xchg
jmp
pusha
mov
fstl
jp
nop
psubq
xchg
adc
inc
fsubrl
sahf
or
and
xchg
pop
fwait
jle
inc
push
cmpsb
xchg
cltd
dec
popf
popa
lock
out
or
les
jmp
mov
inc
ficoms
sub
sub
xchg
inc
pop
shrb
cli
out
mov
mov
ss
sbb
inc
movsl
xchg
push
xor
je
push
mov
ljmp
add
adc
push
out
aam
call
adc
pop
fiadds
push
icebp
push
lds
adcb
std
fmulp
pop
xchg
addr16
sti
pop
push
dec
ja
sbb
pop
fistl
add
daa
xor
call
fcmovu
clc
incl
xor
insl
xchg
add
int3
stos
aad
mov
dec
jae
sarl
mov
inc
mov
dec
or
js
mov
aam
inc
pop
mov
push
sti
jl
les
sti
xor
push
and
jbe
addr16
outsb
in
xchg
ds
sbb
rol
lret
mov
mov
in
out
orb
dec
shl
push
cmp
fwait
andb
mov
sar
jne
movsb
mov
mov
std
shrb
mov
roll
out
mov
gs
mov
rcr
add
lret
pusha
dec
hlt
mov
outsl
xor
loopne
lds
add
pop
push
jecxz
cmp
mov
add
xlat
iret
aaa
mov
leave
out
scas
loopne
mov
shrl
xor
sub
gs
jg
std
xchg
jl
loope
jb
rolb
iret
pop
les
mov
jne
pop
add
xlat
insb
int
insl
lahf
fwait
sbb
xor
lea
inc
cs
jbe
push
mov
loopne
divb
mov
test
shlb
cld
xor
ljmp
mov
arpl
notb
mov
cmp
stos
inc
mov
sub
xorb
fisubrs
xor
cmp
inc
cmp
popa
mov
add
push
cwtl
cmp
jns
nop
and
test
jl
sub
test
inc
xchg
repz
add
shrb
movsb
addr16
or
hlt
add
sub
cmp
or
mov
jb
adc
movsb
lret
push
pushf
nop
clc
insl
jns
bound
popf
sub
or
jle
mov
jecxz
xchg
inc
into
xchg
lods
dec
mov
and
dec
aam
cmpb
jl
jne
sahf
jbe
inc
das
push
lea
and
int3
inc
insl
sbbb
mov
ja
fisttpl
adc
pop
xorl
push
cld
mov
out
rcrb
adc
xchg
push
adc
dec
add
sarb
sbb
cmp
push
mov
cld
sub
pop
push
inc
imul
pop
cltd
andb
mov
sbb
ljmp
fsqrt
inc
dec
rcl
mov
jmp
jno,pn
hlt
push
dec
shlb
fdivrs
jecxz
pop
jge
mov
inc
pushf
insb
aas
push
jb
inc
sahf
mov
pop
inc
push
inc
cld
movsl
sub
mov
mov
mov
or
lds
pop
mov
stc
rol
inc
cmp
nop
pop
and
pop
inc
mov
pop
mov
push
lods
loop
mov
into
pop
lahf
popf
aad
pop
or
or
sbb
das
cmpsl
in
push
mov
mov
lret
add
jo
fimuls
push
dec
mov
push
xor
dec
fdivrl
test
cmp
sti
out
outsb
xor
mov
insb
jecxz
jp
push
gs
outsl
mov
and
jl
sbb
pushf
in
jp
xchg
or
sahf
aad
pop
push
fwait
mov
test
std
xor
je
xchg
ret
pop
sbb
push
fisttpll
and
cltd
jmp
loopne
es
out
mov
aam
inc
mul
imul
xor
call
jmp
push
xchg
cmp
mov
ja
daa
jo
mov
adc
aam
ds
or
aad
xchg
mulb
pop
outsl
imul
mov
adc
add
aaa
inc
pop
and
inc
insl
in
mov
sub
jne
out
dec
gs
lcall
sub
pop
inc
decb
mov
sahf
xchg
add
std
jae
les
cltd
dec
aas
jmp
mov
xor
ss
test
jp
add
sti
xchg
dec
jae
lret
xchg
sbb
adc
mov
push
in
mov
pop
hlt
push
test
sub
and
out
sti
mov
sub
fiaddl
and
mov
int
movsb
push
mov
mov
xchg
xchg
ds
xor
scas
shrb
aas
fisttpl
scas
add
mov
orl
cmp
mov
arpl
xchg
movsb
pushf
out
sbb
out
jno
dec
mov
ret
mov
jecxz
xor
pop
aad
dec
das
insb
test
icebp
pop
dec
clc
xor
movsb
xchg
scas
adc
jp
pushf
std
mov
stc
test
cltd
imul
inc
lods
dec
pop
jl
pop
in
push
popf
mov
fidivrs
dec
push
das
imul
xchg
or
inc
adcl
sub
push
adc
push
sbb
hlt
enter
test
sahf
test
or
mov
arpl
aad
jmp
mov
mov
jae
lock
mov
xor
sbbl
ficompl
jmp
pushf
xchg
pop
cmp
or
xor
ret
fdivl
stos
push
or
inc
sub
outsb
jbe
pop
fdivrl
in
ds
xchg
sub
loopne
xchg
cmp
mov
inc
sbb
test
mov
loope
out
cmp
mov
push
dec
mov
pusha
jae
push
mov
adc
movsl
int3
cmp
or
fxtract
inc
mov
cmc
push
aam
loope
and
pop
cmp
adc
cmpsb
cwtl
out
or
sarb
cld
mov
jbe
jecxz
jle
push
imul
adc
inc
mov
in
dec
cmp
push
cld
ja
push
cmp
pop
popf
and
jmp
ret
mov
cmp
pop
int3
mov
addb
mov
add
les
mov
nop
sarl
call
outsb
add
fwait
in
icebp
ljmp
mov
bswap
aam
xor
std
int
pop
fildll
loop
and
jg
mov
sub
jmp
into
jmp
push
push
mov
add
loop
mov
in
adc
mov
movsb
cmpsb
mov
adc
pop
movsl
fdivrs
inc
subb
mov
jae
loope
addl
stos
mov
dec
fdivrs
testb
ds
jno
and
add
push
stos
add
sbb
int3
push
mov
jb
adc
testl
and
sbb
test
fcmove
sbb
das
cmp
je
stos
xchg
outsb
fimull
aas
push
xchg
or
add
out
inc
test
data16
ret
sub
outsl
xchg
lahf
mov
dec
or
mov
xchg
push
pop
int3
sbb
sub
add
incl
sbb
test
and
mov
leave
les
cld
and
cmp
dec
in
dec
jae
sahf
int3
js
xlat
cmc
mov
sbb
int
mov
jb
cmp
int3
cwtl
icebp
sahf
pop
out
outsl
adc
sbb
subb
xchg
addr16
icebp
dec
push
inc
push
enter
mov
addr16
push
or
enter
movsb
fistl
xchg
jae
push
xor
xchg
leave
stos
jns
cmp
fstpt
arpl
and
fistpll
mov
fmulp
and
mov
sarl
mov
sbbb
xchg
add
leave
jmp
int
mov
sahf
xor
push
rorb
std
out
mov
pop
add
jge
mov
xchg
dec
in
xchg
into
les
insl
xchg
push
mov
mov
pop
jne,pt
xor
aam
mov
xchg
add
mov
jne
xchg
mov
fisttps
pop
int3
xor
cmp
xor
in
into
add
insl
mov
jb
adc
aas
cmp
inc
push
xchg
sub
pop
dec
mov
push
in
imul
xor
mov
outsb
push
into
test
rclb
cmp
pop
push
adc
lahf
test
mov
lods
xlat
adc
pop
stos
repz
bound
int3
push
sbb
scas
add
sub
push
xchg
mov
adc
or
dec
pop
push
imul
cmc
sbb
addl
dec
or
movsl
call
pop
xchg
push
lods
sbb
sub
mov
or
adc
aam
lret
fdivrs
out
nop
test
pusha
subl
dec
iret
mov
or
stos
mov
cwtl
repnz
lea
fimull
cmpl
mov
mov
and
push
push
mov
pop
mov
push
xchg
shrb
icebp
fs
outsb
test
repz
sbb
or
aam
jae
lret
jg
hlt
mov
xor
or
xchg
inc
cli
or
dec
ss
mov
popl
popa
mov
pusha
movsb
mov
fstpl
insb
jne
adc
je
test
cmpsb
push
sahf
pop
int
cmp
xchg
repz
push
push
lcall
fsubr
pop
and
mov
ds
movsb
jae
dec
ss
xchg
cli
enter
dec
push
lock
jno
divb
push
or
fwait
lods
loope
nop
lret
lret
sub
repz
pushf
push
jmp
subl
mov
or
add
fcmove
imul
sub
jl
jno
repnz
mov
inc
mov
mov
cmp
das
push
test
add
mov
scas
xchg
cltd
sub
mov
dec
push
sub
or
je
cmp
cmpsb
jns
cmpsb
inc
adc
dec
xor
lods
xor
aaa
cmpsb
cmp
sti
inc
adc
fdivr
das
in
xchg
push
xchg
dec
xor
inc
cmp
mov
iret
mov
xchg
cs
imul
loop
mov
popa
or
push
xchg
jecxz
cld
lcall
cmpsb
sbbl
dec
test
outsl
jl
sahf
jns
xchg
cmp
test
or
incl
leave
xchg
mov
data16
pop
pop
insl
mov
ljmp
jecxz
xchg
mov
mov
mov
add
scas
test
iret
adc
outsl
xor
inc
lock
lret
mov
jg
lods
cmp
mov
bound
lods
inc
sbb
mov
movb
mov
nop
adc
xchg
xchg
cmpsb
fcoml
push
pushf
xchg
xchg
dec
dec
xchg
jle
push
sbb
mov
int3
adc
adc
decb
es
roll
out
mov
out
and
sbb
push
jne
sbb
lds
lds
icebp
mov
test
lods
lock
repnz
jle
cmc
call
nop
nop
rorl
mov
addl
xor
outsb
testl
int3
xchg
mov
add
and
push
aas
pop
enter
fidivrl
icebp
and
jns
inc
xchg
sub
sbb
inc
ret
std
mov
and
mov
adc
fisttpl
inc
jns
sbb
pop
xor
in
loopne
mov
mov
aas
js
lret
xchg
into
sar
pop
jmp
jg
outsl
push
stc
cli
cmp
lahf
push
shr
leave
shll
mov
mov
insl
mov
inc
popa
push
adc
add
xor
pop
shl
movsl
add
je
mov
dec
out
jns
jecxz
jmp
inc
fs
mov
dec
add
lret
mov
push
push
movsl
jecxz
cli
push
nop
fs
mov
adc
neg
push
rcll
or
dec
xor
shrl
in
mov
sub
mov
add
cmp
jno
mov
int
testb
imul
push
out
icebp
mov
push
test
pushf
lods
mov
stos
jp
shlb
cmp
daa
call
mov
xlat
push
mov
mov
jg
mov
js
bound
xor
sub
sub
sub
out
push
jg
or
mov
mov
fldenv
dec
negb
inc
pusha
or
mov
movsb
dec
in
fisubrs
ss
int
mov
fcoms
and
mov
jo
shlb
inc
lret
xchg
cmp
jns
adc
add
cli
insb
test
mov
inc
push
into
pop
lods
gs
jecxz
dec
or
icebp
scas
fiadds
mov
mov
scas
call
pop
and
push
daa
pop
cmp
into
movsb
push
xor
cli
jno
test
ljmp
and
idivb
jge
inc
fbld
cli
ljmp
jg
cmp
sub
subl
add
stos
scas
hlt
leave
aad
ss
sbb
clc
add
cmp
mulb
and
mov
mov
pop
lods
mov
movb
mov
xchg
imul
push
fucomi
je
cmp
icebp
shll
xchg
mov
dec
jb
dec
adc
in
lcall
inc
inc
fistpl
xchg
xlat
stos
scas
in
insl
aam
or
aam
movsb
call
ds
sbb
xchg
pop
les
sbb
fsubrs
fs
sbb
push
nop
push
in
and
lods
cmp
nop
in
push
push
cmp
dec
mov
pop
mov
pop
jle
ret
je
cmp
data16
mov
mov
adc
fsts
or
push
nop
mov
jle
imul
and
adc
fwait
mov
dec
and
push
lret
in
mov
test
jmp
imul
pop
aas
lcall
imul
dec
sub
add
loope
std
sbb
mov
pop
xlat
xor
jno
mov
cs
push
add
or
push
pop
fistl
xchg
mov
in
je
out
mov
stc
cmp
orl
ret
cli
add
out
cltd
inc
add
or
jns
jle
cmc
sub
gs
cmp
mov
dec
stos
xchg
and
jecxz
fcomps
ret
mov
test
jg
dec
add
rcrb
scas
push
adc
stos
mov
pop
rorl
fsubrl
jle
and
push
cmpb
xchg
dec
lret
stc
jl
rcrl
sbb
dec
mov
ljmp
mov
je
lret
sbb
ljmp
jnp
or
xor
adc
andl
jle
dec
jno
dec
xor
add
push
faddl
ror
aaa
lret
insb
xchg
imul
popa
aad
adcb
mov
mov
fldcw
jecxz
std
mov
cs
cld
addr16
pop
push
dec
outsb
ja
adc
fimull
pop
movsl
scas
xor
adc
test
jb
adc
dec
mov
xchg
xchg
xchg
shll
jge
jecxz
lock
scas
lods
pop
and
or
outsb
sub
ljmp
into
mov
mov
cs
insl
xchg
ret
lcall
cmp
cmpsb
sti
inc
jae
fiadds
lods
pop
mov
in
adcb
into
mov
mov
pop
sti
or
mov
mov
inc
jg
pop
je
push
mov
add
jecxz
lea
mov
out
xchg
dec
aad
xor
push
gs
jmp
and
push
lret
adc
sbb
scas
xorl
inc
outsb
add
ljmp
out
and
bound
loopne
cltd
push
scas
pop
push
xchg
mov
mov
add
imul
popf
pop
in
std
ljmp
lea
stc
pop
repz
xchg
dec
jmp
arpl
dec
cli
inc
mov
xchg
xchg
mov
inc
popa
into
sbb
mov
fbstp
sub
jle
sub
add
out
push
jmp
sub
jns
mov
mov
or
into
mov
mov
fwait
nop
rcrb
into
loop
jb
jbe
orl
mov
cmp
test
out
xchg
mov
xlat
mov
cmp
jle
inc
sbb
hlt
push
call
imul
scas
adc
pop
fsts
pop
sbb
jo
sarb
push
mov
lods
dec
inc
mov
xor
loope
in
add
jle
pusha
shrb
faddl
jmp
push
dec
aam
pop
mov
stc
daa
insl
push
nop
and
cmp
rcrb
pop
sti
ret
push
test
pmuludq
sub
pop
stc
jae
sbb
and
arpl
fwait
out
sahf
popf
les
push
add
jne
cwtl
xchg
jnp
inc
and
les
push
fsubl
or
mov
push
xchg
in
jmp
cmp
fwait
ret
call
pop
cmp
test
push
cmp
lahf
sub
lods
lret
fldcw
add
pop
xchg
add
pop
jle
shr
xchg
andl
repnz
dec
push
stos
mov
jmp
ja
lods
inc
mov
je
lods
pop
xor
les
mov
sub
std
cli
leave
xor
daa
jne
adc
sbb
add
dec
dec
pop
jb
mov
mov
xchg
lods
in
cld
pop
push
push
push
xor
mul
out
fnstcw
out
mov
lods
int3
test
mov
push
ret
push
sarl
adc
in
and
mov
mov
and
mov
adc
cmp
sahf
addr16
subb
popa
cltd
xor
xor
jnp
inc
sbb
xlat
dec
lock
mov
jl
pop
ds
push
mov
push
inc
ljmp
movsl
pop
inc
cmp
lods
jo
divl
dec
xor
fimuls
stos
mov
pop
mov
cmp
and
inc
pop
push
mov
push
mov
jmp
mov
dec
lock
cld
mov
das
mov
mov
xor
insb
popa
lret
and
dec
roll
mov
mov
je
dec
xchg
in
or
leave
in
movsl
mov
pusha
cmp
and
mov
ret
and
and
add
out
pop
inc
push
add
mov
xchg
jae
leave
jle
movsb
jg
mov
adc
push
in
cmp
aad
cmpsb
xchg
xor
and
call
aas
movsl
mov
orl
insl
clc
xchg
lock
lods
adc
lahf
out
cmpsb
test
mov
repz
mov
jae
pop
ret
ret
jbe
mov
decb
int3
stos
int
stc
cmp
cmp
push
out
fs
xchg
inc
adc
fnstsw
xor
lods
push
mov
sub
push
jp
xchg
rol
in
xor
adc
xchg
cmp
clc
xchg
outsl
pop
xchg
fdivrl
mov
mov
rolb
lcall
xor
pushl
rorb
mov
jge
lret
cmp
or
sbb
push
add
inc
push
push
xchg
in
in
cs
adc
in
add
mov
dec
or
mov
lds
call
push
int3
pop
push
lret
lods
jnp
jmp
pop
xorl
push
push
xor
mov
incl
add
inc
clc
mov
jae
cmpsl
fsubp
sbb
xor
pop
push
fsubrl
por
sbb
loope
add
xchg
and
mov
xchg
inc
xchg
sbb
mov
xor
mov
cmpl
stc
lock
rcr
bound
pop
jmp
enter
xlat
test
lods
lds
jo
xchg
negb
sub
xchg
roll
mov
dec
movsb
mov
movsb
mov
xlat
ss
jle
xchg
out
sub
jne
push
shll
add
cmpl
lods
pop
repnz
jmp
mov
shlb
adc
mov
sub
sub
jg
ds
mov
inc
out
add
fisubrl
sub
push
mov
and
in
mov
pop
mov
and
fists
fstl
int
push
stos
rcrl
sbb
adc
ss
dec
call
cmp
mov
pop
adc
jo
push
sbb
and
cli
adc
mov
dec
push
cwtl
mov
stc
insl
movsl
mov
test
loope
mov
push
cmpsl
sub
loopne
pop
mov
mov
jg
shll
xor
add
inc
inc
dec
jecxz
pop
push
dec
or
mov
ffree
orb
jo
dec
mov
gs
add
ret
xchg
outsl
cld
mov
int3
cmp
adc
in
mov
lcall
test
jbe
or
push
scas
imul
mov
adc
push
in
int3
adc
fwait
sub
mov
xchg
or
aaa
push
or
sub
outsb
lea
lcall
lret
addl
and
pop
and
jne
clc
sbb
movsb
jmp
adc
or
ljmp
cld
mov
or
call
mov
outsb
mov
cld
jb
ret
and
mov
xchg
jmp
mull
jecxz
dec
lahf
adc
sub
adc
stos
sbb
lock
icebp
call
sbb
xchg
sub
test
mov
jno
das
cltd
imul
into
xchg
roll
push
dec
insl
or
pop
sahf
xor
sub
sbb
pop
pop
popf
aam
in
cmp
in
and
jp
jo
enter
mov
push
mov
in
mov
scas
rcrb
outsl
int3
nop
test
xor
test
jl
adc
les
inc
sub
xor
pop
cmpsb
pop
popf
popa
fcoms
or
in
je
rcl
mov
mov
outsb
imul
jecxz
push
xlat
mov
lock
sbb
stc
cmpsl
push
call
mov
xchg
mov
xchg
dec
pop
stos
xchg
push
xor
out
mov
nop
lds
add
push
into
loopne
iret
clc
sarl
add
or
cli
clc
xchg
repnz
ficomps
cltd
loop
mov
sub
pop
vpsrlq
mov
dec
mov
neg
data16
cmp
push
dec
dec
nop
loope
arpl
cli
movsl
lods
stos
pop
and
mov
push
into
fstpl
push
mov
sbb
or
in
out
sahf
pop
or
jbe
cmp
jecxz
push
mov
push
aad
in
xor
movsb
shl
ret
cmc
es
stos
ds
lea
loopne
adc
loope
pop
hlt
sub
jne
inc
jo
out
add
gs
fdiv
xor
push
inc
cwtl
mov
dec
xchg
es
popa
into
dec
pop
inc
daa
test
adcb
jge
shll
lods
push
and
pop
repnz
xchg
add
mov
sub
mov
scas
adc
icebp
jnp
pop
test
sub
popa
pop
and
inc
gs
ret
push
imul
push
stc
sbb
in
dec
cmp
mov
jl
mov
repnz
adc
and
and
fmul
ret
pop
adc
je
xchg
push
xor
out
cmp
xchg
aas
inc
cmp
stos
adcb
xchg
arpl
pop
mov
mov
lret
fsubp
js
xchg
gs
ret
das
ret
fstpt
push
xor
mov
aam
add
mov
rclb
inc
push
and
jge
lea
dec
jmp
ret
hlt
mov
cmp
mov
pop
int
push
jg
push
into
insb
lds
std
inc
mov
add
push
dec
dec
pop
movsl
adc
insl
jg
push
xor
addl
pop
or
cmp
xchg
mov
clc
arpl
cwtl
pop
pusha
fisubrs
sarb
inc
jns
arpl
lods
jno
cmp
jl
xchg
std
and
mov
mov
jp
repnz
xor
add
int
push
pop
jae
push
adc
scas
pop
scas
lock
mov
adcl
out
push
out
lret
stos
pop
imulb
sub
jp
outsb
out
fildll
mov
xchg
sub
shlb
mov
xchg
jb
fisttpll
adc
mov
add
xor
push
int
xchg
imul
or
out
ljmp
daa
aas
jle
icebp
enter
sub
ja
mov
rcr
inc
js
sub
lahf
stc
xor
popa
repnz
and
fcoml
lea
sbb
mov
loop
aaa
imul
cld
sbb
les
and
add
into
mov
std
int3
fucomp
or
jbe
jns
ds
rorl
cs
xorl
mov
jg,pt
imul
fs
inc
mov
sarl
ss
sub
sub
out
in
cli
xchg
mov
dec
imul
iret
push
cmp
mov
cmp
dec
cmpsl
hlt
mov
mov
mov
rcrb
icebp
adc
jne
adc
ja
daa
rcrl
inc
fcoms
push
xchg
sbb
inc
and
lock
out
mov
push
sub
mov
andl
sbb
push
mov
cmp
dec
xchg
into
jg
cwtl
lcall
bound
push
pop
out
and
sbb
push
xchg
add
xchg
push
mov
insb
pop
pushf
repz
push
unpcklps
mov
out
ficompl
xor
lret
cmpsb
loop
stos
xor
test
sbb
cmp
mov
mov
pop
movsl
imul
cmpsl
aad
loop
dec
push
push
cmp
stos
adc
xchg
push
repz
mov
call
adc
das
mov
add
sahf
fldenv
loope
mov
xor
les
push
cld
add
mov
mov
lods
mov
leave
jae
push
pop
sbb
inc
and
pop
mov
dec
ja
cmp
mov
sub
leave
fsubrl
pop
imul
add
lahf
cmp
js
and
lcall
ds
je
push
mov
and
sbb
mov
push
out
mov
add
movsl
or
mov
aad
enter
sbb
shl
lock
mov
sub
push
aaa
inc
add
jg
pusha
dec
out
insb
lret
clc
sub
call
mov
test
add
inc
cs
mov
daa
sub
jae
mov
mov
test
in
ret
adc
ja
daa
aas
and
pop
push
movsl
or
mov
jnp
adc
stos
std
inc
outsl
xchg
sub
mov
hlt
push
in
pushf
pop
jo
sti
sbb
dec
loopne
mov
movsb
cmp
arpl
jge
push
icebp
mov
jle
lret
mov
jecxz
fimull
ds
and
mov
loop
test
scas
mov
sti
aaa
xchg
mov
jb
cmpsw
xchg
add
into
mov
jns
js
sbb
adc
inc
insb
jb
push
das
xor
sbb
dec
push
mov
test
sub
jo
std
xchg
dec
ds
lods
decb
xor
fisubrl
jo
xor
cmp
xchg
shrl
test
adc
sbb
jmp
or
cmp
dec
cltd
shrl
inc
int
ljmp
gs
loope
insl
push
mov
les
icebp
dec
movsl
pop
popf
cmp
jg
cmp
push
jne
mov
cltd
dec
pop
xchg
inc
test
into
popa
mov
pushf
sti
push
out
cmp
xchg
jnp
pusha
jl
out
inc
pop
rolb
mulb
std
fldenv
and
shrb
hlt
and
xchg
pop
xchg
das
jle
imul
xor
stos
movsl
cmp
mov
inc
and
imul
lcall
stos
jl
inc
sub
mov
dec
pop
mov
pop
pop
mov
xchg
sub
aaa
sbb
inc
ja
divb
repnz
insb
jne
and
mov
inc
or
test
push
add
icebp
in
fxch
ret
daa
dec
in
xchg
test
jo
popf
jnp
sbb
mov
sub
xchg
xor
and
daa
fimuls
int3
adc
xchg
es
dec
dec
pop
bt
lods
pop
popa
in
jge
jge
mov
mov
js
lods
adc
outsb
sub
mov
pop
enter
cmp
stc
xor
out
xchg
into
inc
daa
lods
mov
das
das
enter
cmp
cs
mov
pop
arpl
movsl
add
xchg
push
jmp
repz
in
mov
dec
jge
and
mov
gs
pop
mov
jns
jecxz
add
fs
dec
fcompl
ret
jp
mov
dec
xchg
ficompl
loope
out
lret
addr16
or
enter
push
add
pop
popf
cld
int3
mov
push
dec
and
in
imul
es
lock
or
out
sarb
or
inc
fwait
mov
cmc
and
dec
out
and
mov
jg
cmc
cmp
rorb
lods
xchg
push
xchg
jl
inc
push
aam
mov
push
mov
in
xor
in
push
pop
sbb
or
mov
jmp
jle
loopne
pop
adc
inc
sbbb
mov
sbb
fisubl
sub
xchg
out
setp
pop
adc
mov
xchg
daa
mov
adc
sub
jg
popa
cmp
mov
mov
test
xchg
push
out
ss
sahf
into
inc
sub
jne
fiaddl
cmp
ret
mov
push
mov
and
cmp
mov
dec
pop
jbe
jns
push
es
lcall
decl
je
addb
sahf
cmp
hlt
cs
push
cmp
xor
adc
int3
in
fwait
push
mov
push
push
or
data16
mov
in
lds
jl
icebp
ss
sbb
or
xchg
bound
mov
in
mov
xlat
xor
mov
repnz
xor
xchg
les
enter
mov
sub
mov
push
fists
push
and
test
push
sub
pause
jmp
arpl
negb
test
mov
pop
mov
sbb
push
add
shl
subb
rclb
insb
or
dec
fisubrs
sub
jle
cmp
jle
ja
push
in
mov
sub
sub
hlt
sbb
dec
xchg
jbe
cmpsb
mov
pop
cli
dec
divl
mov
stos
pop
mov
xor
sub
int
icebp
leave
test
cmp
pop
aas
loope
shrb
push
mov
adc
icebp
inc
adc
in
and
xchg
cmp
enter
jle
outsl
test
fstpt
sub
jae
mov
and
mov
fistl
lret
jno
push
repnz
pop
mov
push
rcll
mov
jnp
arpl
or
ret
leave
sub
lods
je
ja
and
incl
xchg
push
test
pop
sub
xchg
push
pop
xor
mov
xchg
call
fildl
popa
xor
xrelease
or
aam
sbb
cmp
imul
push
insl
jp
dec
into
movsb
inc
mov
aad
push
subl
sbb
sub
push
push
jns
mov
icebp
data16
fs
mov
add
lods
add
push
and
xchg
js
cld
aam
popf
cmp
sub
pop
dec
fs
push
add
xchg
test
clc
jg
xchg
mov
sbb
or
cmp
addr16
aas
mov
bnd
xor
and
xor
shll
pushf
or
dec
pop
jle
xchg
or
pop
out
aas
andb
cltd
xchg
out
popf
and
sub
fs
mov
xchg
shll
jbe
out
sub
jo
push
or
push
insl
dec
das
mov
cltd
push
mov
push
xchg
jbe
fldcw
test
jbe
fnstsw
test
xchg
sub
xchg
imul
subb
cmc
bound
loop
mov
sbb
xorl
push
arpl
mov
rolb
mov
xor
es
xchg
add
test
xchg
mov
jno
mov
mov
cwtl
mov
shr
mov
cmovge
push
out
jbe
jge
xlat
inc
push
xchg
cmc
pop
lea
fcmovu
scas
scas
xchg
in
sbb
fwait
jns
push
notb
das
dec
inc
sbb
test
test
cmp
data16
sbb
jmp
xchg
lahf
mov
pop
mov
sbb
dec
sbb
jne
mov
cmp
pop
loop
xor
inc
adc
push
xchg
adc
shlb
or
push
pop
stos
cld
inc
aad
push
sbb
cmp
in
adc
in
out
pop
inc
insl
arpl
adc
jle
mov
adc
test
xchg
loope
cmpsl
mov
jns
cmp
lret
add
xchg
push
cmp
dec
sub
cmp
icebp
lock
dec
add
or
daa
cmp
aam
inc
push
inc
sub
push
pop
aam
or
rolb
dec
push
pop
sbb
push
mov
sub
dec
xor
dec
loop
test
mov
jg
lcall
xchg
or
js
aaa
inc
jge
xchg
fstpt
out
pop
andb
xchg
popw
addr16
ja
out
push
xchg
add
mov
inc
jecxz
sbb
adc
mov
lods
cmp
int
mov
pop
insl
xor
mov
notl
lcall
push
fwait
fs
gs
mov
push
addb
push
sarb
push
cmc
ret
lods
leave
push
pop
outsb
arpl
sahf
cld
lds
gs
add
adc
mov
shlb
sti
and
call
fsubs
sahf
lret
mov
inc
ret
shlb
lcall
mov
shl
sub
or
seto
int3
sbb
jle
ljmp
arpl
or
cmpsb
pop
ljmp
adc
and
out
ret
fcoml
add
add
pop
in
inc
jp
and
mov
mov
outsl
pop
aaa
cmp
lods
add
lods
sti
outsl
and
xor
sbb
out
hlt
cs
jmp
mov
xchg
add
push
push
mov
jb,pt
outsl
lds
les
std
or
idivb
or
movsl
sbb
leave
std
dec
add
sub
in
push
adcb
mov
xchg
movsl
xchg
js
sbb
stos
mov
or
iret
movsl
pushf
pop
lahf
dec
push
pop
push
clc
or
or
aad
pop
jmp
dec
scas
and
int3
rclb
cltd
push
and
push
jecxz
lds
lods
incb
xchg
lret
mov
sbb
add
mov
dec
out
repnz
jg
nop
int3
icebp
das
mov
mov
pop
dec
es
mov
cli
mov
das
stos
mov
add
jae
and
shl
mov
je
xor
subb
popa
scas
push
nop
fimuls
fldenv
movsl
lock
pushf
push
jbe
mov
div
out
mov
and
popa
sub
int3
sub
vrsqrtss
xor
xor
iret
loopne
test
inc
xchg
mov
jl
insb
cwtl
loope
add
je
push
adc
int
xchg
pushf
sbb
add
stos
lea
shl
int3
push
or
add
inc
pusha
lea
lcall
push
shrl
xor
imul
in
mov
lret
outsl
xor
sbb
push
shrb
jg
mov
mov
lret
cmp
rorb
aad
push
shlb
mov
cltd
pop
pop
and
ret
jns
lock
pop
stos
sbb
or
dec
mov
insl
cwtl
cmpsb
pop
and
mov
xor
negl
fwait
cmc
lret
std
aas
sti
subl
xchg
mov
icebp
jnp
nop
fcomp
lods
addl
mov
stc
jnp
sub
or
fs
jg
jno
jmp
and
cwtl
adc
mov
add
mov
and
inc
or
and
xor
rorb
xchg
cs
push
pop
jge
xchg
or
sub
test
outsl
roll
mov
xor
ja
gs
dec
jecxz
fidivrs
jo
and
imul
and
stc
jns
jo
dec
mov
sbb
sub
scas
stos
push
mov
pushl
lods
aas
and
sbb
std
xor
jae
dec
ficoms
mov
pusha
adc
mov
add
bound
push
push
jle
into
dec
jo
icebp
pop
sub
mov
or
sub
js
dec
or
lret
fmuls
test
jecxz
shrl
or
add
jb
dec
xchg
inc
sti
cmpsb
les
push
pop
push
xchg
cmp
add
int3
inc
stc
out
push
adc
sbb
faddl
sub
and
fwait
insb
repnz
jp
mov
aad
aas
inc
mov
popf
xchg
aam
stos
leave
push
or
cmp
xor
mov
jmp
pop
stos
cli
inc
jl
daa
jp
and
jg
inc
scas
div
pop
js
lods
sub
rorb
mov
inc
rorb
mov
out
mov
nop
xchg
adc
adc
mov
inc
push
add
in
pop
xor
pop
test
dec
shrb
rclb
je
and
lcall
xchg
popf
aad
icebp
or
or
push
mov
test
inc
sub
lcall
into
dec
inc
adc
jb
add
jmp
lock
or
in
nop
mov
cmpsl
test
mov
test
mov
aad
in
lds
or
aaa
clc
cmpsb
int
mov
int
repnz
lret
hlt
movsl
movsl
xor
fisubrs
cld
cmpsb
popf
out
cmp
nop
sbb
or
push
cwtl
sar
mov
sub
mov
stc
sahf
cld
jmp
adc
push
push
jle
inc
push
mov
push
and
xchg
inc
stc
push
dec
add
inc
imul
or
add
movsl
fs
and
icebp
repnz
pop
jae
ds
adc
loop
stos
add
jne
movsl
das
outsb
daa
push
or
xlat
adc
repz
push
push
insl
rol
mov
and
dec
and
cwtl
cmp
xchg
mov
and
aam
aaa
js
dec
sbb
pop
dec
outsl
jecxz
sbb
jle
pop
outsl
call
popf
lahf
push
ljmp
mov
inc
inc
imul
cmp
dec
add
sbb
sub
test
les
outsl
xor
and
leave
add
sub
mov
cmc
sarl
insl
add
fsubrl
out
call
and
mov
push
and
cmpsb
lock
test
sub
movsl
aaa
lods
push
mov
xchg
cmp
iret
insl
xchg
mov
imul
nop
fstpt
filds
xor
inc
std
pop
mov
mov
lock
mulb
cli
or
mov
dec
data16
and
popa
fistl
into
andb
bound
dec
xor
jmp
jmp
push
pop
sti
cmp
fldl
mov
jle
lds
xchg
fdiv
mov
or
cltd
xchg
movsb
das
lock
inc
lret
nop
fildl
push
sbb
adc
adcb
rcrb
mov
xor
sbb
scas
fsubr
sti
call
lock
jae
je
es
xchg
dec
or
adc
pop
inc
fcoml
sahf
mov
push
popa
mov
mov
mov
sub
loopne
subb
pop
and
jp
jmp
loop
mov
dec
cmp
jecxz
xchg
add
pop
adc
bound
cmc
and
push
sarb
fstpt
dec
inc
lret
jnp
ss
loop
dec
inc
aaa
movb
call
mov
lock
cmpxchg
mov
lods
jg
mov
stc
dec
jo
clc
xchg
sub
shll
pop
or
jge
push
lock
orl
sbb
cs
push
mov
repnz
enter
jecxz
cmpsb
je
ret
xor
adc
and
lea
add
and
fsubrs
movsl
test
mov
sub
fldt
std
xor
or
cmpsl
mov
pop
pop
mov
jmp
push
subb
clc
pushf
mov
or
rcr
pop
jae
inc
xor
std
ret
lret
jns
mov
pop
aaa
cmc
pop
test
leave
xor
mov
xchg
adc
lret
fcomi
cmc
pop
push
mov
dec
jnp
inc
push
roll
add
xchg
pushf
inc
mov
les
ds
adc
jg
jecxz
fdivrs
push
sbb
stos
jbe
xchg
arpl
imul
mov
js
out
add
iret
repz
add
xchg
test
rclb
mov
xor
and
into
cmp
xorb
outsb
cmp
fwait
cs
popf
cmp
xor
sbb
test
cmc
jns
push
inc
sub
jge
xchg
jg
out
mov
pop
xor
cli
movsb
mov
jg
inc
xchg
and
xchg
cltd
leave
sbb
or
xchg
push
test
shlb
push
push
cwtl
loope
test
stc
cmp
dec
popa
add
pop
jg
pop
dec
adc
xchg
jns
idivb
pop
imul
xchg
jg
adc
rorl
jno
adcb
xchg
das
jl
sub
je
adc
pop
or
add
mov
xor
cmpsl
jnp
push
les
shrb
cwtl
lea
pop
adc
add
xor
out
inc
adc
inc
xchg
cmp
pop
fidivs
test
ret
xchg
adc
movsl
daa
fisubl
sbb
mov
test
in
sub
adcb
sbb
xchg
je
lahf
sub
inc
shll
mov
pop
push
imul
addl
sbb
cmp
nop
mov
mov
xchg
popf
out
lahf
fcompl
lds
loopne
ss
xor
shlb
pop
jb
ds
into
mov
shl
adc
mov
dec
mov
sub
std
scas
dec
cmp
xor
mov
xchg
push
mov
scas
add
lcall
push
lock
or
jae
mov
shl
mov
and
loop
mov
adc
push
pop
pusha
pop
insb
dec
dec
outsb
dec
jle
aad
lcall
cmpb
fdivl
xchg
sbb
pop
sti
ds
sbb
stc
mov
cmc
imul
push
inc
movsl
xorb
mov
sbb
or
orl
repz
clc
dec
bt
mov
enter
data16
sbb
rcrb
gs
sahf
sbb
jmp
into
dec
cmp
adc
movsl
es
jg
pop
pushf
push
jno
insb
in
inc
fsub
mov
sub
fisttpl
lret
aaa
rclb
js
jns
mov
mov
loop
adc
pop
cmp
insl
push
test
das
cmc
and
pop
push
or
scas
pop
pop
scas
fistpl
imul
inc
jns
mov
lahf
subl
je
mov
cwtl
iret
addr16
mov
int3
push
negb
dec
nop
mov
cs
lret
imul
insl
ds
enter
fwait
enter
push
adc
out
xorl
sub
test
ucomiss
loop
xor
pop
mov
jns
xchg
aaa
push
in
std
test
sub
adc
repz
cmpsb
xchg
inc
subl
sub
inc
and
adc
jecxz
push
lock
dec
and
ljmp
add
xchg
lods
pop
jne
ret
and
mov
shl
push
test
decb
push
jnp
xchg
test
mov
xchg
fldl
inc
into
push
sub
orb
insl
insb
jle
pop
sbb
xor
xchg
sbb
ljmp
push
cmp
inc
std
inc
mov
mov
jl
inc
and
adc
in
jno
push
mov
insb
mov
lcall
rcl
inc
fstl
xchg
loop
ja
lret
mov
into
jbe
sbb
or
cmp
sbb
repz
inc
or
cmp
pop
dec
jo
popa
xchg
je
leave
scas
decl
push
scas
int
or
jl
jg
dec
lret
mov
mov
cmp
xor
pop
out
loop
xor
dec
lods
jmp
insl
push
ret
loop
push
rcrl
jecxz
iret
push
mov
xor
es
mov
pop
daa
dec
inc
lret
xor
xchg
cmpsb
je
push
pop
ljmp
xorl
add
popa
imul
pop
ret
and
das
test
pop
mov
xchg
outsb
ss
jno
insl
shlb
ljmp
in
fldl
adc
push
icebp
dec
sarl
roll
mov
iret
mov
and
popf
imul
xor
add
push
daa
imul
std
aaa
stc
aaa
xor
outsl
push
mov
jl
mov
aas
and
inc
jbe
in
add
adc
cmp
in
ja
sbb
fildll
lock
sahf
mov
push
sahf
mov
stc
jle
mov
icebp
push
les
mov
inc
jns
mov
mov
imul
mov
add
jno
imul
shrl
int
add
fisttps
scas
or
icebp
pusha
and
stc
mov
out
pop
aad
repz
xchg
iret
das
adc
jbe
in
arpl
jmp
xor
add
add
cmp
adc
mov
out
fisubl
add
testb
call
jno
push
jno
shrl
fisttpll
ja
out
xor
cmp
mov
sub
cmp
repz
loop
aam
pop
test
jl
jle
aaa
add
pop
popa
insb
test
leave
leave
inc
pop
repnz
pop
mov
ss
jmp
popa
add
xchg
idivb
pop
push
stos
cs
xchg
hlt
add
add
pop
sub
in
insb
dec
je
shr
repz
and
enter
adc
xchg
cmp
pushf
mov
inc
ljmp
mov
outsl
mov
fs
cltd
adc
addr16
dec
mov
mulb
inc
fnstsw
mov
or
mov
stc
movsl
cmpsb
mov
rol
stos
arpl
push
mov
fdivrp
and
cmp
inc
lret
repnz
sarb
decl
xor
inc
mov
cmp
lret
pop
addr16
add
ret
leave
pop
sbb
xchg
imul
in
mul
cwtl
cmpsb
mov
dec
dec
jge
cli
rclb
adc
mov
push
out
mov
or
js
in
mov
lods
faddl
rcl
sahf
xchg
popf
lret
gs
gs
and
testb
xchg
xchg
in
cli
push
adc
jbe
lods
nop
mov
xchg
mov
aas
out
and
mov
loope
outsb
cmpsl
mov
shrb
cmp
in
stos
jp
pop
fnstcw
sub
mov
push
mov
lods
dec
mov
dec
into
ret
pushf
repz
xorb
sbb
jg
mov
pusha
mov
mov
fildll
sti
stos
sub
mov
icebp
jns
scas
repz
xchg
ja
sti
jl
ljmp
cmp
mov
mov
inc
fidivrl
and
loopne
push
in
xchg
insl
mov
lds
inc
das
pop
inc
rorl
cld
push
leave
dec
enter
daa
movsl
das
dec
hlt
out
xchg
mov
mov
push
divl
stos
jp
push
mov
xchg
and
jp
sbbb
lock
pop
iret
repnz
in
cmpsl
cmp
arpl
es
bound
popf
scas
pusha
pop
or
movsb
xchg
cmc
cmpsl
lahf
shlb
iret
cmp
add
fs
stc
inc
xchg
mov
in
cmp
lea
push
xor
clc
enter
push
clc
fisttpll
push
mov
cmp
aam
inc
loopne
inc
ljmp
dec
push
rcll
ss
pop
dec
sbb
or
mov
mov
pusha
addb
or
out
lods
sub
inc
test
push
icebp
testl
or
xchg
or
sbb
jnp
or
cmp
push
je
aaa
push
sarl
movsb
jge
push
jle
mov
jae
scas
cmpsb
mov
mov
cli
dec
inc
sub
xchg
std
int
subl
jo
jp
insl
sbb
sahf
mov
jg
pop
jge
fimull
xchg
leave
cli
push
jl
push
mov
mov
push
mov
leave
rcr
nop
push
sub
push
out
fdivrp
xchg
loop
in
pop
inc
mov
test
xchg
xor
popf
xor
ds
or
pop
adc
imul
loopne
fistpl
adc
or
cmpsl
repz
push
arpl
insb
fdivrl
jge
dec
out
repnz
fcmovu
sete
pop
xchg
fnstsw
mov
mov
shrb
jnp
js
lret
add
cmp
or
ja
inc
cmpsl
aad
lcall
mov
push
fdivr
aas
dec
pop
es
xor
mov
jns
dec
or
iret
inc
xchg
repz
xlat
ds
outsb
ljmp
inc
xchg
inc
fsubrs
and
inc
push
push
pop
lret
dec
insl
cmp
cs
insb
jne
aam
popa
push
shl
push
jle
xor
insb
jbe
test
pop
cld
shr
jmp
sub
aam
test
and
sbb
leave
pop
mov
cmp
daa
pop
cltd
or
dec
cmp
bnd
add
out
xor
or
mov
cli
pushf
push
outsl
popf
imulb
or
scas
adc
sbb
mov
sbb
pop
leave
mov
cmp
or
sub
or
daa
xor
aaa
rorl
inc
movsl
dec
add
vmwrite
push
inc
out
cmp
scas
and
cmpsb
mov
movb
popf
cmp
std
popl
xor
lret
lahf
gs
xchg
xor
sbb
lds
jnp
and
insb
cmp
add
cwtl
inc
je
or
cs
inc
xor
mov
aam
dec
test
jle
cmpsl
and
loope
mov
pop
sbb
movsb
xchg
out
enter
into
pop
leave
adc
and
mov
sub
mov
lahf
xlat
cmpsl
or
or
out
loope
cmpsl
hlt
xchg
or
inc
cmp
mov
out
and
mov
outsb
sti
mov
dec
push
movb
stos
lods
dec
sub
cli
int
and
or
out
mov
leave
mov
cmpb
aaa
out
int3
adcl
push
pop
jno
mov
ja
out
pop
dec
add
dec
popf
jg
inc
addr16
loop
mov
push
mulw
cmp
aaa
mov
push
stos
divl
lret
jmp
inc
mov
in
dec
arpl
popa
dec
push
iret
xchg
sub
lock
das
in
jmp
adc
push
sbb
and
push
test
pop
jnp
or
js
cmc
outsl
pop
xchg
aas
lcall
mov
and
cli
inc
xchg
in
lahf
insb
xchg
and
movsl
xchg
scas
cmp
out
cli
dec
mov
jae
or
xor
in
aaa
cmp
jns
imul
xor
mov
sub
cvtpi2ps
ds
movsl
lcall
pop
fidivrs
in
out
lods
clc
pop
aad
pusha
lcall
push
xchg
ljmp
inc
jbe
ljmp
jbe
sub
das
dec
push
jne
jae
mov
sbb
jae
dec
push
or
sti
push
jge
lret
decb
sub
sub
call
fistpl
shll
mov
dec
ret
push
cld
dec
adc
mov
xchg
mov
lret
insl
or
mov
dec
cmpsb
das
pop
scas
mov
shlb
ljmp
mov
mov
jbe
scas
lcall
fwait
sub
or
fdivp
cmp
or
int3
out
sub
aad
xor
aam
jno
cltd
bound
adc
mov
jecxz
and
lret
rcrl
adc
frstor
xchg
jl
in
cmp
push
scas
outsb
ret
std
push
push
lods
lahf
lret
mov
fdivrs
or
fidivl
call
jne
xchg
dec
xchg
shlb
xchg
mov
xchg
je
aam
pop
adc
cmpsb
inc
xchg
bnd
and
idivl
test
adc
xchg
lret
xor
mov
cmpsl
and
inc
test
outsl
dec
jnp
jge
jl
sti
jmp
inc
dec
je
out
sbb
and
mov
out
pop
jmp
shlb
pop
push
int3
adc
jmp
shrl
scas
pop
adc
xor
fs
out
std
push
inc
xlat
fimuls
into
push
lret
ds
cwtl
and
sbb
fisttpl
in
in
sub
adc
movsb
pop
cwtl
xchg
and
sarb
push
aam
mov
je
cwtl
testb
sub
sbb
mov
add
inc
cwtl
cmp
mov
mov
in
mov
mov
mov
push
movsb
mov
inc
xor
nop
repz
sbb
sub
repz
or
in
insl
sbbl
dec
jo
dec
aas
sbb
movsl
cltd
mov
sbb
inc
ljmp
cmp
addr16
sti
and
out
in
mov
pop
pop
jle
mov
movsb
aam
aas
lret
outsb
and
rolb
sti
push
and
mov
ja
cwtl
rcl
dec
cld
push
push
push
test
cli
scas
xchg
push
and
and
aaa
rclb
ljmp
push
push
aam
stos
jecxz
adc
xor
loope
movsl
jg
pmovmskb
sbb
cmp
add
fbld
sbb
mov
sbb
roll
shll
sbb
lods
stos
jecxz
mov
xor
inc
sub
and
imul
pop
xchg
orl
insb
mov
xchg
fisubl
bnd
fstps
sbb
les
pusha
js
cmc
les
xchg
cmp
and
ja
jb
dec
arpl
imul
imul
aas
mov
jb
sub
pop
scas
aas
adc
es
mov
popf
test
cmp
ljmp
pop
icebp
sub
out
push
sbb
mov
sti
xchg
cmpsb
repnz
mov
sub
dec
leave
int
jecxz
mov
mov
aaa
pop
clc
push
clc
dec
outsb
xor
mov
out
adc
je
jmp
decl
jne
repz
lods
mov
in
bound
ret
ret
lock
and
and
lock
push
cs
cmp
in
sbb
jae
xlat
outsl
add
dec
filds
pinsrw
clc
flds
pop
in
inc
xor
pop
jno
cmpsl
adc
xor
or
aam
int3
pop
cmpsl
daa
push
jo
xchg
frstor
test
jmp
hlt
into
leave
cld
mov
and
xorb
mov
sbb
rclb
daa
rorl
sbb
inc
push
aaa
das
and
out
pushf
cmp
mov
loope
int
mov
fs
loope
jl
cmp
fxtract
mov
lcall
and
jecxz
dec
push
jnp
xor
inc
je
pushf
jp
pusha
mov
push
cmpsb
rcll
cs
outsb
rcll
push
xor
into
jle
inc
mov
mov
push
fsubl
adc
push
mov
dec
cmp
pop
add
pop
xor
inc
stos
stos
cmp
lea
out
or
outsb
jle
mov
jo
mov
mov
xchg
insb
or
into
hlt
cmpsb
cmpsb
inc
ret
je
inc
dec
and
arpl
push
dec
aaa
dec
cwtl
adc
repz
sti
in
lods
xlat
sar
mov
xor
push
sbb
pop
mov
movsl
test
ret
add
dec
aam
nop
leave
movsb
and
sahf
cmp
jge
xchg
sti
loopne
cld
mov
sbb
or
add
cld
fisubrl
sub
mov
push
pop
insb
sbb
xchg
mov
shlb
sub
and
xchg
xchg
pushf
sub
jo
dec
or
mov
jg
shl
mov
xor
push
nop
mov
js
adc
jb
push
mov
mov
xor
inc
cmp
lahf
cwtl
jae
push
mov
in
scas
je
inc
xor
daa
and
dec
fs
cwtl
scas
dec
xchg
xor
add
mov
or
loopne
dec
sbb
or
mov
clc
sbb
mov
mov
jbe
jmp
ret
call
cmpb
js
or
int3
lret
out
les
shrb
sbb
jl
jae
subb
cmp
cmpl
mov
sub
mov
add
sbb
std
dec
cltd
add
mov
inc
dec
xor
loop
out
mov
pop
or
mov
push
push
inc
insb
fsubs
cwtl
aaa
loop
xchg
rcll
cli
xor
dec
int
cmp
mul
mov
jb
cwtl
or
inc
test
rcr
push
cmpsb
mov
jo
iret
sbb
xor
cs
imul
mov
int
and
ds
iret
or
xchg
push
inc
add
sbb
add
sbb
pop
jmp
in
add
or
aaa
xchg
int3
ss
test
and
pushf
jbe
xor
jbe
in
loop
sub
call
pusha
mov
mov
inc
daa
add
push
or
into
mov
jbe
loop
imul
ljmp
jnp
sti
xchg
inc
mov
mov
cld
fcoms
inc
fiadds
insl
cwtl
loope
sbb
push
cmp
rclb
pop
xlat
jae
int
sub
sbb
addr16
fwait
hlt
inc
in
jl
push
es
jns
and
je
or
fnstenv
dec
fdivp
iret
dec
xor
arpl
mov
fmuls
ss
stos
icebp
push
cltd
xchg
and
inc
insb
cmp
ljmp
or
dec
xor
cmc
icebp
mov
and
mov
and
fldcw
pop
and
pop
ror
mov
xchg
in
jnp
push
bound
pop
or
icebp
mov
lret
data16
sbb
scas
pushf
xchg
mov
jnp
sub
pop
mov
and
or
sbb
in
add
popf
mov
pop
xlat
push
mov
pusha
jnp
pusha
int
cmpsl
dec
insl
jb
sahf
ret
insb
ret
adc
test
jl
mov
or
int
xor
or
aam
cmp
add
cld
mov
neg
ret
scas
cwtl
inc
nop
stos
sbb
push
or
push
les
cmpsb
mov
mov
and
mov
test
scas
test
pop
jg
fbld
jbe
jnp
fnstsw
notb
sub
xchg
push
bound
or
add
out
jp
sahf
dec
ffree
sub
fs
cmp
pop
mov
inc
pop
push
cli
js
lock
mov
in
dec
stc
loopne
xor
fidivrl
and
push
or
nop
out
pmaxsw
xchg
push
pop
je
xlat
adc
xchg
push
mov
push
cmp
inc
cli
into
jb
loop
pop
xor
les
hlt
sbb
mov
sub
push
pop
popf
clc
pop
lcall
lret
push
dec
xchg
jecxz
jns
mov
xchg
and
mov
movd
and
and
pop
js
xchg
int
icebp
jo
push
add
cmc
push
pop
sub
mov
das
add
mov
fists
out
or
add
cmp
popa
inc
push
sub
aas
jg
push
inc
lock
mov
ljmp
dec
pop
into
add
and
jmp
xchg
mov
cld
int3
pop
test
daa
push
jo
test
or
pop
pop
int
jno
jge
test
mov
fld
add
mov
pushf
xor
les
dec
sub
les
popf
inc
mov
sahf
push
mov
inc
mov
ret
arpl
sbb
jb
sub
aas
cmc
push
sbb
lret
push
aas
xor
xor
enter
outsb
add
test
push
xchg
add
jns
xor
lcall
pop
lcall
dec
stc
into
aam
mov
mov
repnz
stos
jecxz
jp
stc
in
fs
or
stos
adc
imul
or
shl
jg
pop
je
iret
popa
xchg
dec
dec
dec
mov
push
push
jg
in
daa
bound
or
mov
lret
push
add
lcall
clc
xchg
cmpsl
push
add
xor
pop
xor
dec
fdivr
or
leave
outsb
push
mov
sub
dec
jp
push
loop
pusha
xchg
push
jne
sahf
add
push
add
jbe
mov
dec
popf
std
loope
cmp
xor
jp
sub
push
jbe
mov
loopne
cmp
push
daa
aam
mov
mov
dec
cld
in
mov
push
test
cmp
inc
mov
out
cmpsb
fsubrs
adcl
js
push
je
jmp
cmp
lret
dec
test
push
jle
xchg
out
cmpsb
sub
cmpsb
mov
je
adc
js
push
mov
adc
sub
icebp
loope
add
bound
test
push
mov
icebp
push
inc
gs
adcl
push
inc
in
loope
push
jmp
mov
mov
int3
jg
cmp
add
daa
add
cmc
cmp
cld
xor
dec
leave
out
xor
mov
push
movsl
push
sahf
pop
dec
fimuls
lea
outsb
shll
rcrl
test
das
test
stc
cli
jne
xor
jl
enter
jl
jg
rcll
test
outsb
repnz
push
dec
cmp
das
and
test
and
sub
lret
push
xchg
xor
fsubrl
iret
cmc
sbb
dec
mov
adc
lock
fildl
out
ljmp
jmp
or
data16
repz
jmp
loope,pn
repz
mov
dec
shl
jle
dec
mov
xorl
sti
or
fwait
sub
mov
lods
xlat
inc
push
dec
movsl
dec
adc
sbb
movsb
sub
gs
mov
scas
enter
shr
stos
jne
lods
inc
lahf
xor
mov
xlat
mov
stc
xlat
mov
lds
mov
repnz
push
adcl
jae
add
push
push
outsl
mull
mov
and
enter
jmp
jnp
popf
sbb
mov
mov
cbtw
int3
lret
push
add
mov
hlt
push
loopne
shll
movsb
add
pop
in
inc
jnp
add
leave
push
cmp
test
out
or
or
fsubl
xchg
add
fistl
xchg
xor
xor
flds
push
rol
xchg
fistpll
arpl
jmp
insl
mov
outsl
push
in
lods
xchg
and
inc
ds
stos
iret
xchg
cmp
icebp
nop
movb
push
inc
pop
ret
call
fadds
bound
imul
std
aam
dec
mov
cld
call
lock
jmp
cmpsl
imul
lahf
mov
mov
ljmp
scas
test
out
fldenv
mov
dec
jmp
mov
adc
xchg
cmp
xchg
xor
jo
sub
sbb
sub
jnp
xchg
jle
mov
mov
cs
movsl
pop
jecxz
call
mov
lret
jns
pop
adc
pop
mov
call
jg
mov
or
sub
stos
mov
enter
mov
stos
pop
fidivrl
sub
cmp
mov
lods
rol
fimull
jno
les
fildl
jo
stc
add
daa
xchg
xchg
pop
lret
test
push
fisttpll
mov
and
jae
push
adc
xchg
jbe
out
cmp
sbb
cltd
sub
incb
sub
adc
ss
xchg
pushf
add
mov
inc
imul
xchg
mov
imul
mov
das
mov
stos
repz
push
fstl
add
int3
mov
xchg
punpcklwd
jae
addl
sbb
daa
mov
jbe
fdivr
jecxz
cs
adc
or
adc
xchg
pop
mov
loope
push
imul
mov
ficomps
mov
dec
mov
cmc
inc
hlt
sbbb
faddp
les
in
jge
mov
lahf
xlat
push
inc
data16
out
jo
sbb
dec
mov
xchg
adc
mov
repz
xchg
pushf
dec
lcall
jnp
pop
cmp
xor
xor
mov
lods
loope
loop
mov
adc
arpl
imul
jecxz
push
fiadds
data16
push
std
or
enter
je
mov
stos
cmp
popl
into
adc
sbb
leave
adc
push
inc
mov
ljmp
lods
into
and
mov
pop
std
jmp
lahf
dec
leave
jbe
sbb
dec
mov
ja
je
in
and
cmc
xor
lgdtl
movsl
movsl
iret
fdivrs
insb
jle
mov
stos
fisubl
jne
pop
cmp
or
arpl
xchg
adcb
push
or
mov
dec
jecxz
jb
push
sbb
cmp
sbb
into
push
mov
outsl
test
je
xor
dec
sbb
fisubrs
rolb
aas
fimull
inc
rcll
xchg
sbb
fsubl
nop
sbb
ret
push
std
or
mov
shrl
mov
aas
movsb
clc
jle
es
lds
stc
es
mov
cmpsl
ds
push
xor
push
movl
fistps
jecxz
or
pop
xor
or
addr16
iret
out
sti
outsb
and
mov
movsb
and
jg
lret
add
int
push
add
ret
mov
sahf
jmp
mov
xchg
loop
jns
add
testb
fsts
lods
es
cmp
repnz
fwait
adc
icebp
mov
xorl
mov
xor
bound
adc
stos
lret
dec
imull
dec
or
and
lahf
lahf
rclb
in
adc
jl
movsl
fildl
jo
adc
sbbl
dec
adc
inc
sub
rcrl
cmp
mov
iret
das
xor
insb
cmp
push
mov
lret
cwtl
mov
adc
lahf
pop
xchg
add
xor
data16
jmp
push
je
cmc
inc
or
std
jbe
push
mov
sahf
pop
in
ret
jmp
xchg
daa
das
jp
cmc
outsb
int3
cli
cmpsb
and
cmp
xchg
movb
movsb
je
and
adc
hlt
cmpsb
andb
outsb
xchg
jnp
mov
subb
inc
jae
mov
xchg
adc
pop
inc
inc
pop
inc
lods
ja
adc
adc
mov
jae
popf
icebp
sub
inc
cmp
mov
jge
rcr
adc
adc
sbb
outsb
push
sub
fisubrs
cli
outsl
add
sbb
jg
outsb
aas
xchg
xor
mov
and
int3
dec
or
or
jmp
test
sti
test
cmp
pop
cwtl
inc
pushf
push
mov
sbb
bound
pop
movsl
inc
dec
adc
jmp
insl
pop
sub
test
push
xor
jg
ret
sub
pop
subb
sub
mov
rcrl
sub
xchg
sub
ret
cmc
pop
js
loopne
iret
stos
mov
test
test
dec
xor
xor
cli
insl
pop
cmc
orb
int3
add
mov
push
in
cmp
pop
dec
adc
add
jecxz
mov
shlb
sbb
sub
xor
dec
inc
jae
bound
in
jmp
insl
scas
rorb
push
push
fdivs
push
mov
sub
scas
pop
enter
mov
shll
cli
fwait
orl
mov
shl
orb
mov
sub
out
inc
jge
ljmp
pop
cmp
lea
lods
cwtl
lret
lcall
add
dec
aas
ror
xchg
jmp
add
inc
push
pop
in
mov
mov
sbb
sbbl
loop
in
or
mov
int3
jo
push
in
jle
arpl
icebp
xor
xchg
aaa
push
mov
jo
or
ret
push
pushf
add
pop
pusha
jle
stc
int
mov
sarl
aam
in
xchg
mov
js
cmpsl
inc
adc
addb
sbb
xchg
decb
add
hlt
ret
mov
fwait
inc
push
cmp
jl
dec
mov
call
lds
in
adc
lea
js
inc
dec
and
or
jecxz
jecxz
lahf
add
pushf
xchg
cmp
les
adc
repz
ret
sahf
ss
js
xchg
aad
jbe
inc
cmp
idivb
push
dec
lods
and
adc
test
xor
es
and
ret
push
inc
mov
add
cmp
mov
dec
jmp
lds
fisubl
push
mov
mov
popa
stos
test
in
pop
cmp
and
loope
data16
jb
dec
xchg
imul
shll
sub
push
and
cmpl
pop
enter
xchg
xchg
and
dec
and
pop
ret
int3
leave
lds
ret
mov
xor
fwait
test
xchg
ret
xchg
scas
insb
or
imulb
mov
mov
sbbl
outsb
xor
push
sbb
fistpl
xchg
sub
xor
and
sub
mov
cmp
xchg
mov
dec
iret
cmpsb
sbb
push
loop
pop
lock
outsb
fildll
shll
iret
jl
sub
in
sbb
lret
scas
adc
rcrb
adc
push
adc
push
sub
out
mov
inc
movsb
aam
in
pop
mov
outsl
inc
clc
mov
js
orb
inc
inc
or
stos
cmp
inc
lds
shlb
push
shll
bound
push
jae
in
je
fwait
testb
xlat
push
call
mov
jmp
icebp
fisubrl
pop
push
ds
aad
scas
dec
outsb
insl
aas
sbb
adc
mov
sbb
mov
mov
and
sub
mov
jo
jle
push
out
out
mov
stos
jge
push
add
ds
push
jnp
pop
cmp
sbb
loop
out
fdivs
cmp
clc
lea
ja
dec
ficoml
push
push
xor
test
test
pushf
lret
aam
out
xchg
sub
out
test
jno
push
filds
jg
aam
mov
decb
fs
cmp
popf
inc
lret
outsl
in
push
xchg
insb
std
inc
fcomps
icebp
hlt
mov
mov
jecxz
push
mov
shll
and
xchg
out
cmpb
arpl
or
push
mov
mov
sbb
and
dec
pop
mov
push
dec
aam
xchg
movl
lret
dec
add
push
inc
es
out
and
and
adc
lods
jmp
cmp
or
and
jp
pop
jecxz
mov
mov
les
cwtl
imul
push
bound
mov
je
cmp
push
movl
fsubs
out
cmp
enter
fs
add
lea
movsb
hlt
adc
sub
dec
and
jmp
mov
loopne
jnp
mov
aaa
mov
sub
or
cwtl
or
xor
pop
insl
out
pop
data16
sti
pop
popa
rcr
jp
fdivl
push
lcall
pop
push
lcall
jo
or
lahf
stos
pop
mov
stos
add
mov
fbstp
mov
sbb
xor
push
pop
loope
sbb
jp
jmp
mov
fsub
pop
mov
lret
sti
jne
nop
cmp
and
cmp
mov
cld
das
dec
or
and
xchg
pop
adc
push
pop
xchg
leave
xor
and
mov
test
jl
rolb
enter
ret
subl
loop
mov
movsl
cmc
sbbl
pop
fcoml
daa
sbb
adc
lea
inc
jne
push
sbb
mov
shlb
dec
gs
decl
jecxz
mov
std
jp
push
push
fdivs
inc
addr16
test
mov
arpl
sbb
push
cmp
xor
out
sub
scas
sub
and
cmp
icebp
add
subb
out
call
mov
dec
xchg
out
inc
mov
pop
pop
xor
in
or
xchg
mov
jnp
cmc
mov
sbb
pop
fsincos
mov
pop
xchg
sbb
push
mov
jns
std
adc
in
xor
ret
mov
inc
mov
adc
insl
mov
mov
cltd
std
push
and
adc
outsl
dec
jns
jne
pop
cmp
push
push
retw
inc
lds
cmp
bound
push
test
cmpb
ficomps
in
js
pusha
mov
mov
leave
add
pusha
cmp
cmpsl
mov
das
dec
push
movsl
add
push
cltd
adc
xchg
je
std
fstl
mov
dec
jl
mov
xchg
lea
sbb
std
xor
or
cs
sub
pop
addb
jmp
ljmp
jbe
push
dec
in
int3
test
push
nop
or
in
or
pushf
leave
jmp
xor
jle
xchg
std
add
mov
out
out
in
inc
roll
leave
pushf
add
xor
outsb
cmp
dec
push
push
sub
cmp
sub
outsl
cmc
in
shl
ror
adc
pop
enter
mov
and
push
push
adcl
mov
test
gs
adc
xchg
sarb
xor
jmp
cmp
add
bound
std
adc
lock
inc
sbb
cld
sbb
dec
xchg
mov
add
ss
roll
adc
sub
xchg
pop
cmp
rolb
adc
inc
fs
call
sbb
fwait
movsb
mov
inc
iret
jmp
popf
in
and
jge
xchg
push
xchg
xchg
xchg
imul
mov
inc
ss
lods
repnz
xchg
jp
test
and
icebp
fadds
ds
shrl
jg
xor
cli
mov
sub
lods
fs
repnz
xor
rolb
inc
cmp
jo
js
mov
scas
jg
or
push
fwait
jmp
jbe
lret
outsb
push
adc
add
xorb
mov
in
popa
pop
and
and
leave
jle,pt
mov
std
addr16
sub
das
cmc
push
in
mov
xor
xor
sbb
sub
sub
jnp
or
icebp
call
fimull
je
xchg
ror
add
in
loope
sbb
sar
aad
mov
in
adc
push
scas
cmpsl
sbb
mov
jp
sub
ss
mov
js
lds
aam
or
fcmovu
scas
xchg
lods
aam
cmc
mul
ss
add
add
mov
out
cmp
gs
repz
repnz
outsl
in
shrb
shlb
in
inc
push
out
ja
sar
dec
jmp
xchg
or
dec
jno
arpl
push
leave
stos
fidivl
call
imul
mov
and
xorl
inc
xchg
clc
cmp
clc
popf
repnz
outsl
mov
sbb
mov
adc
xchg
xor
mov
sbb
enter
pop
push
loope
inc
fdivl
xchg
cmp
cmpsl
addr16
pop
pusha
push
pusha
push
test
mov
jge
sbb
push
inc
je
mov
jns
dec
sub
fnstsw
insl
ja
out
or
mov
dec
shl
movsl
and
xchg
ret
lahf
push
jne
adc
mov
divb
mov
jno
stc
mov
das
nop
xchg
add
jecxz
aaa
rep
push
and
jmp
mov
lods
pop
fldcw
ror
repz
sti
cltd
jecxz
push
xor
test
je
test
sbb
lock
es
inc
push
mov
fldl
loope
xor
call
lcall
out
xchg
xor
push
xlat
adc
out
pop
aas
jecxz
mov
push
inc
fcoml
loopne
push
or
scas
push
mov
std
addr16
push
cwtl
mov
cmp
sbb
mov
jp
in
lret
in
loopne
fnstsw
sub
inc
cmp
dec
xor
inc
mov
xchg
popf
stc
mov
push
orl
fucom
or
pop
stos
mov
cld
enter
rolb
ja
lret
jbe
out
sbb
sbb
outsl
mov
push
fstl
and
out
popa
neg
clc
pop
add
sahf
pop
pop
outsl
lret
pop
aad
ret
adc
test
lcall
stc
xchg
aas
mov
cmpl
pop
or
insb
pusha
in
push
js
mov
adc
fbld
fisttpll
push
lret
push
mov
in
sub
sbb
xchg
jg
cli
add
popf
sub
cmp
les
jmp
inc
fiaddl
sub
sbb
fsubs
mov
push
cld
mov
jg
inc
dec
xor
sub
sbb
dec
pop
inc
mov
pop
xchg
xor
xor
jb
pop
pop
shlb
out
loop
jns
js
pushf
movsl
ss
movsl
jb
xor
pop
pop
mov
lea
sub
xchg
dec
lcall
push
lea
inc
dec
pop
rcll
xchg
stos
int3
and
into
frstor
mov
movsl
pushf
rcll
psrlw
loope
ret
jnp
popf
sub
dec
sub
pop
mov
je
movb
int
dec
addr16
scas
lea
push
mov
repz
cltd
popa
insl
repz
mov
imul
fadd
lock
push
xchg
cmp
enter
mov
jmp
push
test
or
jo
cmp
add
push
or
pop
into
negb
adc
add
mov
ds
inc
push
jae
xor
dec
push
add
xchg
iret
cmp
addl
mov
mov
and
int3
jno
mov
xchg
push
add
cltd
pop
out
xchg
mov
insl
jo
inc
xor
cmp
push
arpl
rcrb
loop
xchg
inc
jo
jge
gs
pop
lea
mov
jno
dec
in
mov
xchg
nop
scas
popf
xor
hlt
and
xor
mov
or
jge
xchg
jbe
xchg
iret
add
std
sarl
jmp
sti
cmp
xor
dec
repnz
lcall
xchg
icebp
in
in
data16
cmc
adc
lret
mov
inc
shll
lret
idivl
les
inc
les
push
idivl
cmp
cmp
in
dec
sub
pop
lea
push
xchg
sub
imul
xor
and
ljmp
daa
ret
cltd
das
call
lock
mov
jmp
je
pop
adc
std
lcall
pop
adcb
leave
mov
inc
iret
push
xchg
sub
inc
test
pop
cltd
xor
and
push
mov
je
pop
xor
out
loop
mull
insl
lods
stc
push
fimull
int3
mov
or
mov
mov
sub
push
lcall
faddl
mull
loopne
sbb
mov
data16
popf
dec
data16
das
data16
sbb
inc
mov
loope
xchg
lea
jae
cmp
adc
test
aad
xchg
jae
mov
cmp
in
fwait
pop
aam
frstor
ss
cmp
fstpl
pop
pop
xor
inc
stos
lea
cltd
dec
pop
add
xor
dec
mov
mov
cmp
mov
ret
in
repnz
push
pop
mov
inc
dec
or
pop
pop
mov
repnz
stos
push
aam
xor
or
xchg
mov
mov
dec
add
jmp
sub
repnz
or
jp
mov
inc
dec
out
aas
sub
cmp
add
daa
or
pop
hlt
loop
cmc
ja
repnz
or
call
xchg
mov
xor
add
pop
add
nop
add
mov
jle
jnp
movb
imul
repz
inc
ljmp
push
mov
test
in
jno
insb
xchg
ret
sarl
arpl
cs
adc
cmp
mov
xchg
mov
in
mov
xchg
push
sub
or
and
loope
cmp
jne
in
aas
xchg
icebp
pop
mov
xor
mov
lahf
jmp
xchg
sbb
push
testl
fstpl
mov
inc
mov
daa
xchg
dec
jecxz
sbb
out
into
pusha
test
push
push
gs
rcl
mov
inc
in
in
sbb
cmpl
jmp
sub
xchg
out
test
hlt
popa
jbe
push
or
aaa
dec
sbb
das
sub
mov
fdivr
stc
gs
xchg
pop
enter
inc
adc
je
xor
dec
or
jbe
pusha
arpl
das
jno
inc
add
data16
jg
fisubs
sti
mov
jnp
cwtl
bound
ja
and
lret
jmp
mov
jle
test
or
mov
in
stos
and
sub
push
xchg
mov
cs
jne
or
mov
lret
ffreep
push
jecxz
dec
cmp
jle
inc
sub
repz
scas
cli
mov
xor
cs
movsb
xchg
insl
sub
into
xorl
aam
inc
ret
dec
fldl
and
test
cwtl
les
repnz
adc
lock
cmpsl
loope
test
cmp
addr16
mov
inc
cmpsb
xchg
shll
xor
mov
adc
cmpb
jecxz
out
dec
nop
mov
aad
scas
lds
fwait
pop
push
out
inc
sbb
xchg
mov
or
jo
int3
std
subps
inc
sub
jo
movsb
xchg
push
cs
cs
push
fcmovu
push
in
pop
mov
stos
ja
jne
bound
out
pusha
out
in
in
fadds
sbb
or
daa
jbe
ret
movsl
repz
in
pop
jno
das
movsl
push
xchg
out
mov
out
jg
repz
fsubl
std
ds
and
jns
cmp
and
jo
ficompl
add
cmp
pop
fwait
sbb
or
sub
nop
inc
add
inc
daa
xor
xchg
aas
and
cmp
popl
mov
push
je
and
pop
adc
jbe
push
das
push
icebp
mov
jbe
adc
jae
jae
sub
ljmp
or
rclb
lret
sbb
inc
xor
mov
pop
mov
mov
cwtl
inc
fwait
push
addr16
movsb
xchg
cltd
add
sbb
xor
cmc
and
std
sahf
aad
stos
jo
xor
inc
out
jp
mov
dec
inc
lret
push
mov
or
push
cmp
outsl
and
fistl
dec
das
push
xor
and
out
dec
mov
test
add
arpl
jns
and
cli
cmp
pop
lock
pop
out
push
es
add
mov
adc
or
mov
scas
jle
push
jl
pop
int3
fld1
lods
mov
adc
mov
mov
mov
loop
mov
add
mov
jns,pt
loop
adc
std
and
or
jns
push
xlat
push
rcrb
xor
mov
mov
sub
dec
xchg
sbb
add
test
lret
dec
shlb
push
inc
jle
mov
jp
mov
mov
clc
rol
jmp
insb
and
iret
mulb
pop
shlb
fdivs
std
insb
fwait
mov
popa
ja
add
mov
push
insb
mov
psubq
mov
xor
loop
jnp
outsb
xchg
dec
in
mov
incl
inc
imul
lds
lmsw
mov
notl
aas
pop
xchg
sahf
je
jecxz
xchg
stos
clc
ficoms
xor
inc
js
ds
and
xchg
adc
inc
pop
pop
mov
xchg
scas
jl
xchg
jge
cmp
add
push
popa
lahf
jmp
mov
sub
dec
ret
push
push
mov
lods
pop
inc
sti
ljmp
out
pop
sbb
ret
cmpsl
push
pop
adc
xorl
pop
mov
cmc
negl
adc
mov
or
out
cmp
fsubl
subb
stos
pushf
push
nop
insb
cmp
mov
mov
push
add
inc
fmulp
fimull
mov
out
mov
dec
adc
gs
in
xor
int3
mov
repz
and
insb
cmp
cmp
mov
push
pop
cmp
inc
add
repnz
pop
or
clc
cs
dec
inc
mov
lcall
and
push
std
lcall
pop
mov
push
push
pop
dec
pop
fisttps
test
or
ljmp
cmpl
ret
or
ja
out
scas
ss
ds
inc
lcall
sbb
cmpsl
getsec
lret
and
cmp
sbb
arpl
sbb
fidivl
add
int
scas
sbb
sub
cmp
xchg
les
test
ret
cmp
das
shrb
loop
ret
sbb
mov
mov
adc
stc
pop
ds
ret
adc
sub
jns
xor
push
out
mov
sbb
pop
jne
je
loopne
arpl
or
lahf
xchg
inc
arpl
mov
fcos
xchg
mov
push
push
add
xor
scas
pop
pusha
jle
sbb
dec
vpsubusw
int3
mov
cmp
arpl
xchg
ss
sarl
push
add
mov
leave
xchg
ljmp
dec
test
sub
push
das
lds
adc
xchg
jbe
out
lret
sub
enter
int
mov
xchg
xor
push
sarl
jle
sbb
in
push
out
pop
jo
xor
push
int3
cmpsl
xchg
inc
pop
movsl
adc
daa
sarb
add
aad
pop
test
sbb
or
mov
in
dec
dec
and
cmp
or
cltd
scas
fs
xchg
mov
mov
xlat
scas
fisttpll
rol
push
mov
jns
sbb
inc
cltd
in
sbb
jecxz
push
mov
mov
mov
ret
xchg
cmpsb
flds
pusha
and
subb
mov
mov
movsb
inc
push
fprem
mov
stos
aas
out
mov
leave
out
cli
das
aas
adc
aad
divl
or
ds
bound
andl
push
or
mov
inc
jnp
xlat
inc
testl
xor
popf
in
test
repnz
fidivl
pop
cmp
ja
lret
xchg
imul
repnz
adc
into
negb
hlt
pop
insl
push
hlt
scas
movb
ret
or
cmp
outsl
popa
xor
xor
inc
xchg
or
inc
jns
es
mov
bound
rcrl
jle
cmp
and
fs
adc
in
insb
gs
test
mov
adc
adc
dec
ljmp
loope
jb
lahf
or
xchg
inc
ljmp
dec
outsb
ja
cmp
dec
xchg
shrb
add
popf
in
sbb
adc
push
adc
adc
sbb
cmp
out
pop
out
pop
cwtl
push
or
jnp
aas
out
ja
orl
insl
mov
or
iret
in
stc
dec
imul
cmpsb
xor
call
sbb
popa
dec
sbb
adc
dec
jae
outsl
mov
jns
adc
lcall
lock
xlat
dec
xor
sbb
mov
test
jno,pt
sahf
push
adc
mov
lods
sub
or
lcall
sbb
mul
inc
and
xor
mov
cld
sub
xchg
insb
aad
jle
shl
test
mov
push
and
jno
sub
icebp
mov
mov
lret
out
orb
mov
mov
cmpsl
jnp
in
jnp
ficoml
mov
or
mov
aaa
and
aaa
stos
push
push
adc
shl
in
cmp
ret
and
cmp
lret
mov
fs
repz
mov
popa
fs
aad
mov
lret
ficomps
mov
inc
mov
rcll
fbstp
push
mov
rcll
xor
ret
xchg
insl
movsl
or
add
retw
sub
or
xchg
lods
stos
lea
mov
rcrl
mov
loopne
enter
push
lods
sahf
xchg
adc
divl
repz
or
pop
inc
enter
sar
mov
or
sbb
xchg
sub
sub
jae
jmp
xchg
and
hlt
mov
add
icebp
cmc
lret
inc
push
xchg
xchg
fwait
jnp
mov
lods
scas
and
daa
adc
fs
push
out
fcmovbe
inc
inc
imul
outsb
sbb
iret
add
inc
gs
adc
add
push
inc
sahf
adcl
jge
xor
dec
ja
clc
jb
lea
or
jge
mov
jmp
cs
xor
lods
mov
neg
push
lods
mov
fsubrs
sbb
subl
mov
stos
loope
into
mov
inc
jecxz
dec
iret
jecxz
shrb
into
xchg
int
hlt
nop
call
daa
leave
lock
jge
cmpl
adc
pop
jg
sbb
sub
jae
add
ds
bnd
adc
stc
hlt
daa
cld
ret
mov
mov
lret
jmp
ljmp
adcl
xor
push
fcompl
xchg
xlat
ret
xchg
or
out
mov
fs
ds
jmp
pop
push
jmp
mov
push
in
sti
mov
or
and
add
popa
inc
jb
cmpsl
sbb
pop
mov
sub
xchg
orb
jno
test
mov
and
fcmovb
rcrl
and
subb
inc
dec
sbb
jne
add
out
imul
out
repnz
push
ret
call
jmp
mov
daa
sahf
movsb
iret
push
xlat
shll
or
mov
push
cwtl
rcll
sbb
mov
iret
popa
inc
test
mov
in
fnstcw
or
scas
icebp
xlat
sbb
and
sbb
mov
out
mov
jg
jae
in
xor
adc
aaa
lods
mov
iret
ds
push
push
imul
mov
mov
mov
testb
mov
roll
pop
sub
push
imul
fldt
sti
adc
scas
xchg
dec
pop
in
aam
js
jns,pt
sub
rcll
cmc
ret
lds
pop
xor
push
inc
dec
sahf
sarl
stos
pop
arpl
sbb
jge
add
jl
lods
jmp
gs
icebp
inc
lret
scas
aas
outsl
popf
stc
imul
mov
fsubrl
adc
sahf
fimuls
or
and
cmc
or
outsb
push
lock
cmp
paddb
ds
mov
mov
repnz
add
repz
or
in
aad
jno
cmp
sbb
push
pop
jg
lods
repnz
xchg
std
imul
dec
jne
pushl
mov
clc
out
sub
jae
rcl
arpl
fstl
jg
nop
daa
ror
push
pop
aas
pop
insl
mov
cmp
adcb
fsubl
es
call
cmpsl
cmpsl
lret
push
fidivrs
adc
into
mov
push
fcmovnu
icebp
sbb
int3
and
or
xor
mov
sub
add
cmc
adc
loop
inc
lods
mov
add
dec
movsl
sbb
sub
cmp
pusha
idivb
jb
int3
adc
aaa
cmp
pop
xor
jge
rclb
mov
push
pop
mov
or
dec
pop
push
sbb
rolb
mov
xor
fucom
or
jb
cmp
dec
lock
mov
inc
xchg
add
mov
jns
pop
adc
int3
outsl
push
sbbl
loop
mov
pop
jmp
aad
outsb
stos
faddl
jmp
stos
ficompl
pop
cmpsl
jo
adc
mov
repz
push
dec
pop
insb
addl
xor
lods
out
pop
std
fstp
repz
cwtl
sub
into
int
lcall
mov
xlat
sbb
mov
sarl
mov
movsl
jge
add
jecxz
pop
dec
sarl
and
adc
inc
jmp
std
adc
scas
loop
in
jmp
mov
out
bnd
sub
jns
xchg
push
inc
mov
xchg
js
adc
add
jno
rorb
cmp
stos
cmpsb
cli
shlb
lock
jmp
scas
and
xchg
pop
push
dec
pop
xor
or
mov
mov
or
sub
shll
gs
xchg
mov
ss
movsl
xchg
sbb
xchg
rorl
fmuls
cmp
shr
jge
or
jmp
lods
lods
add
mov
faddl
cs
aad
enter
popf
add
dec
jecxz
pop
adc
out
add
add
lea
xchg
pop
sub
adc
mov
popf
cmp
sbb
lret
mov
das
in
mov
and
enter
mov
nop
cmc
adc
xchg
in
push
leave
sahf
cmc
int
data16
call
orb
push
and
pop
pop
inc
inc
stc
pop
pop
in
scas
mov
xchg
imul
add
jns
hlt
jbe
outsb
jne
push
aam
adc
mov
sub
mov
pusha
pop
add
jg
aaa
cmp
xchg
flds
add
mov
nop
mov
out
mov
dec
test
push
pop
push
or
dec
cmpb
sub
imulb
mov
jnp
mov
jle
xchg
inc
out
jle
nop
or
sub
stos
or
cltd
scas
pop
push
test
stos
sbb
loopne
ljmp
ss
in
sub
adc
xchg
gs
fstl
outsl
pusha
cld
pop
sub
xorb
pop
data16
xor
xor
cmp
pop
sub
inc
dec
xchg
pushf
mov
or
cmpsb
push
pop
push
dec
adc
sbb
sub
inc
adc
and
inc
inc
daa
pop
cmp
sub
andb
or
push
test
or
sbb
test
inc
das
aad
push
pminub
pop
jg
mov
cmpsl
je
add
sti
cmpb
lds
jb
popf
in
out
or
hlt
cmp
cmp
xchg
mov
mov
adc
fcompl
aas
sbbl
pop
inc
ror
jmp
and
addb
dec
lcall
and
mov
sahf
xlat
pushf
imul
pop
push
cli
pop
dec
inc
pusha
and
daa
clc
jb
es
dec
jno
int3
xor
mov
pushl
lock
out
push
add
sarb
std
mov
lret
mov
daa
cmp
repnz
ret
pop
and
dec
and
pop
mov
push
lcall
cmp
jnp
fs
test
and
sub
pop
sarb
mov
icebp
pop
pop
insl
xchg
mov
dec
loop
inc
in
imul
outsb
inc
mov
dec
xchg
xlat
jl
mov
jmp
shll
sahf
inc
jo
arpl
dec
leave
mov
cmp
sub
mov
lds
push
movsl
sahf
sub
pop
pop
stos
mov
mov
and
adc
scas
and
imul
leave
xor
add
mov
mov
leave
bound
es
scas
cs
ret
jnp
sbb
cwtl
sub
test
decl
inc
cmp
inc
out
pop
gs
xor
scas
out
mov
pop
lock
or
xchg
pop
test
mov
and
mov
mov
pushf
sbb
cmp
sub
cmp
gs
cli
jmp
lcall
sbb
push
fwait
rorb
mov
cmpsb
loopne
cmp
jmp
jge
in
stos
xchg
sbb
insl
mov
cmp
lock
sbb
das
lcall
pop
ljmp
mov
clc
inc
loop
xorl
jae
jg
mov
ds
es
sbb
mov
xor
shll
sbb
mov
cld
adc
cld
gs
test
ss
in
incl
or
cmp
cwtl
cld
daa
mov
ss
test
nop
repnz
cmp
dec
dec
fcmovne
mov
cmp
mov
movb
lcall
dec
fsts
push
lock
inc
setne
pushf
or
addr16
sahf
testl
push
pop
dec
and
icebp
xchg
rorl
pop
dec
mov
in
hlt
jns,pn
push
mov
push
cmp
cli
lret
mov
push
sub
and
lahf
and
div
pop
cmp
xchg
cmp
scas
js
sbb
aaa
aas
xlat
push
shl
mov
shl
shlb
add
pushf
cmp
cli
loopne
mov
xchg
dec
or
iret
or
sub
push
dec
adc
orb
rorb
shrl
dec
dec
or
fisubs
push
mov
dec
inc
mov
out
jge
sbb
cwtl
outsb
or
mov
jae
sahf
mov
inc
pop
cmp
or
pusha
shl
rolb
rorb
ds
fldenv
push
jne
fsts
lcall
repz
cwtl
inc
lret
mov
aaa
mov
sub
gs
add
mov
mov
mov
mov
push
inc
fwait
std
test
cmp
jecxz
xchg
mov
push
dec
adc
pop
pop
pushf
jp
insl
test
aad
fwait
popf
fwait
scas
mov
xchg
popf
hlt
mov
mov
mov
mov
jnp
or
push
in
push
fists
pop
lret
in
or
inc
in
cmp
lds
lahf
or
insl
sbb
in
jg
pusha
bound
sub
repz
pusha
push
ss
jae
insb
test
icebp
pop
jne
cld
cmp
insl
std
mulb
cltd
mov
xchg
mov
jno
push
sbb
jno
add
or
push
hlt
jmp
pop
sub
call
pop
adc
stos
mov
outsl
aas
dec
lret
sbb
ljmp
ds
cmp
jne
push
dec
daa
fdecstp
push
jne
aaa
and
pop
cli
push
int
pusha
lea
sbb
and
cmp
fstpt
test
dec
pop
adc
das
push
scas
in
enter
mov
push
adc
jmp
push
push
loopne
dec
mov
mov
mov
inc
cltd
jg
inc
xlat
mov
mov
mov
xor
sahf
cmc
lret
mov
add
cmp
or
jge
adc
out
stos
mov
inc
and
xlat
xchg
notb
addr16
mov
andb
lods
in
jnp
adc
or
push
in
push
into
je
subl
lcall
jo
and
sbb
dec
cli
dec
in
jle
inc
cltd
popw
leave
fildl
add
adc
inc
push
mov
cmpsl
shl
in
int
mov
dec
pusha
sub
je
pushf
sub
lds
dec
fsubrp
ret
xchg
pop
add
mov
dec
cmp
jecxz
loopne
cld
jge
push
test
mov
mov
jae
and
fs
add
insl
pop
mov
std
les
xor
pop
out
or
repnz
add
push
pushf
mov
daa
imul
add
je
data16
shrd
loopne
lods
cs
out
cmpsb
mov
mov
shrl
mov
sbb
daa
or
mov
fstl
lea
or
xchg
movl
fwait
push
movsl
pop
sub
mov
and
mov
pop
mov
sub
push
into
push
insl
ss
inc
cmpsb
pop
push
and
mov
popa
xchg
sub
cmc
push
xor
mov
xor
dec
rcll
mov
cmp
dec
repnz
mov
mov
mov
repnz
adcb
xchg
adc
test
cs
test
adc
and
insb
mov
mov
cli
mov
mov
dec
push
adc
jle
lret
and
inc
push
pop
das
das
mov
dec
sub
push
jnp
es
out
jl
xchg
or
dec
inc
jecxz
pushl
push
out
dec
mov
dec
enter
cmpsb
mov
xor
mov
mov
mov
jg
fcoml
aaa
mov
push
add
lds
into
ret
dec
mov
xor
arpl
mov
das
std
and
orl
sbb
mov
aam
sbb
push
sbb
jnp
jnp
add
loop
push
mov
mov
cmp
add
ret
adc
loopne
in
outsb
mov
std
loop
mov
push
test
xor
aam
insb
and
orb
aad
adc
dec
inc
int3
jle
addb
xchg
jecxz
arpl
sbb
or
or
cmp
mov
ret
jmp
xchg
xor
rol
outsl
iret
cld
aad
jge
push
fbld
mov
loop
add
sub
xor
sub
loopne
out
adc
adc
sbb
insl
inc
sbbb
and
pop
fsubrs
sbb
sub
fmuls
test
lods
mov
mov
bound
mov
outsl
movsl
mov
push
in
fnsave
adc
in
aad
or
int3
aaa
sub
push
aad
rorl
je
outsb
or
inc
jb
fisttpll
in
jnp
lock
inc
xchg
sbbl
add
ja
dec
fxch
popf
loope
dec
and
inc
push
xchg
dec
cmp
cmp
add
inc
xchg
dec
lock
push
adc
add
sub
lret
mov
fs
movsb
pop
add
push
cmp
iret
hlt
push
mov
push
imulb
jmp
sbb
daa
jbe
mov
cli
mov
xchg
int3
or
mov
mov
add
subl
add
movsl
jb
pop
out
js
sbb
pop
sbb
jmp
loopne
int3
add
std
jg
repz
ja
cwtl
loopne,pn
inc
add
lods
cmpsl
cmpl
or
jmp
sbb
pop
push
ja
jbe
les
and
xor
mov
sbb
in
jae
dec
mov
cmp
outsl
xor
sbb
out
sub
mov
js
jb
into
mov
fcmove
xchg
xchg
add
mov
enter
out
fcmovbe
xorb
pop
pop
test
jge
inc
scas
cmp
icebp
adc
jb
sahf
pusha
cmpsb
mov
add
cmpsl
mov
inc
es
push
mov
pop
pop
xor
mov
inc
adc
dec
stos
xor
lret
add
push
sub
je
and
lock
xchg
and
out
xchg
clc
add
sbb
dec
sbb
jmp
add
or
test
repz
leave
arpl
sbb
add
es
sbb
ljmp
xchg
dec
mov
ja
rclb
push
les
icebp
mov
lods
or
pop
sbb
xlat
cmp
jno
sub
sbb
xor
scas
out
adc
jg
into
dec
repz
xchg
and
adc
adc
jmp
jae
pushf
popf
xchg
jbe
cs
cmp
test
scas
out
in
pop
xor
cmp
jmp
fldcw
frstor
xor
and
adc
fisubs
dec
pop
lcall
js
rcl
pop
push
xchg
into
dec
int
sub
pushf
loopne
imul
sbb
xlat
push
in
push
or
test
std
xor
push
loope
fisttpl
xchg
push
gs
jne
and
je
sti
outsb
orb
mov
dec
jb
test
sub
xchg
dec
addr16
das
jle
pusha
clc
scas
jne
fsubl
push
mov
mov
idivb
ss
int3
adc
pop
cmp
or
fldenv
pop
mov
int
xorb
repnz
xchg
inc
imul
imul
xchg
pushf
popf
pop
jne
call
mov
pusha
sbb
sub
jnp
push
and
shll
push
shrl
orl
mov
ret
pop
xchg
push
hlt
mov
stos
xor
int
cmpsl
push
push
mov
mov
jns
ret
adc
mov
stc
sub
movsb
leave
negl
addr16
and
or
xchg
fnstsw
sub
addl
dec
rcl
mov
xor
out
jb
mov
sub
jnp
sbb
je
mov
dec
inc
aaa
and
or
add
imul
dec
cmp
cmp
sahf
mov
push
adc
push
stos
xor
and
dec
mov
xchg
jbe
push
out
fmuls
rcl
das
mov
test
push
loop
sub
mov
mov
lods
push
popf
cmp
in
jp
xor
sub
mov
stos
in
add
pusha
cmc
mov
shrl
dec
inc
dec
out
iret
and
sub
daa
jb
aas
arpl
inc
aaa
mov
mov
cmpsl
add
mov
dec
inc
mov
sub
mov
adc
orl
pop
mov
movsl
xchg
in
and
jbe
jp
lea
cmp
mov
inc
in
inc
push
mov
add
lret
inc
inc
dec
xor
fmuls
sbbl
fists
xchg
cmpsb
arpl
mov
data16
jecxz
scas
cmp
adc
stos
cld
push
pusha
outsl
fldenv
out
fcomip
inc
jg
or
jle
outsl
sbb
call
xchg
mov
daa
mov
test
je
adc
ja
sahf
pop
cmp
add
fisubrs
cmp
aas
dec
push
and
jl
into
and
add
pop
stos
xor
in
insl
icebp
rolb
and
dec
dec
push
stos
mov
repnz
dec
stos
cld
xor
xor
lret
sub
fildl
mov
les
lret
mov
add
cmpsb
int
lret
jne
or
sub
and
rorl
test
xchg
scas
outsb
pop
cmp
ss
lods
push
loop
xchg
mov
add
adc
iret
cmpsb
out
iret
xor
cmp
xchg
dec
ja
jp
es
jl
out
xor
sub
popf
lods
or
xor
pop
fstps
dec
sbb
out
mov
popa
push
xchg
mov
test
je
fwait
ja
aaa
outsb
insb
std
cmp
cld
sub
int3
cs
push
stos
popf
nop
sbb
xchg
fwait
pusha
aaa
das
imul
sbb
test
mov
xor
scas
cmp
sub
shll
inc
mov
adc
jg
mov
rorl
ficomps
frstor
xchg
cwtl
ss
decl
push
push
push
xor
pop
inc
fistps
jns
int
push
mov
subb
out
into
mov
mov
or
and
cld
mov
add
lea
mov
shlb
xor
pop
push
adc
mull
inc
pushf
in
pop
fimull
inc
push
push
push
in
jb
stos
pusha
xor
ss
adc
inc
add
enter
add
cmpsl
mov
shl
inc
pushf
push
js
iret
shlb
pusha
test
shrb
fsubs
fbstp
lea
jbe
in
fists
mov
fcmovnu
sbb
adc
loope
adc
sahf
aam
sbb
pop
fwait
push
repnz
data16
mov
fdivr
fstps
mov
xor
into
in
ret
sbb
out
push
push
sti
mov
sarl
jmp
jp
mov
cmp
push
dec
inc
cmp
js
lahf
js
mov
pop
arpl
sbb
push
sarb
pusha
idivb
das
jbe
pop
jge
cmc
push
xor
dec
mov
mov
xorb
les
xchg
push
stos
mov
push
mov
mov
xchg
test
push
mov
xor
arpl
inc
inc
xchg
inc
sti
sarl
rol
push
dec
int
movsb
outsb
rcrb
cmp
push
dec
inc
in
add
jo,pt
xor
es
xchg
loop
pop
add
and
loope
mov
xchg
pushf
fisubrl
hlt
outsl
enter
push
jae
xor
jbe
sub
and
or
mov
and
test
addb
push
call
cmpsb
sub
mov
xchg
sub
cld
ljmp
or
lock
ja
test
mov
and
jmp
or
inc
out
iret
push
subb
fs
js
ljmp
and
jns
pop
dec
add
popa
inc
repz
gs
in
mov
les
bnd
mov
dec
inc
push
aad
out
add
jne
str
fwait
inc
loopne
rorb
xor
cmp
andb
mov
stos
pop
cmp
xchg
rol
cli
mov
xchg
sbb
pop
cmpb
xor
and
ficomps
nop
lods
outsb
or
mov
iret
jae
mov
lock
sbb
and
int3
and
inc
push
and
aaa
roll
lock
call
cmc
pop
xchg
mov
iret
dec
mov
mov
fs
push
mov
iret
xor
sbbl
in
std
sbb
inc
stos
mov
je
xor
jnp
mov
in
xor
lret
inc
xor
mov
cmp
adc
mov
lcall
iret
pop
addr16
sub
ljmp
out
sub
data16
js
push
xor
or
sub
ja
stos
lret
or
mov
das
out
jnp
call
dec
pavgw
aam
push
push
sub
pop
ror
jge
mov
sti
out
xor
add
stc
sub
sub
aad
je
arpl
push
stc
stos
pop
dec
sub
int3
mov
loope
sub
cmp
cld
ds
mov
aas
adc
into
hlt
sbbl
adc
push
ret
or
sub
bound
les
cmp
dec
sub
xlat
jl
scas
cmpsb
pop
cli
cmp
mov
cmp
lods
dec
insl
cmpsb
xor
fsub
outsl
popa
movsb
lahf
loope
into
inc
push
into
movsl
stc
add
jl
in
cld
stc
jg
loopne
and
cmp
test
add
adc
daa
jo
xchg
lock
rcll
mov
mov
leave
ja
sub
xchg
and
adc
xchg
push
xor
in
popf
xchg
sbb
fdivs
movsl
cmpsl
nop
or
cmp
inc
xchg
lods
sub
fcos
xlat
sbb
and
bound
sub
cwtl
push
in
rclb
sub
ret
mov
out
cwtl
movsb
mov
lea
daa
and
movsl
insb
stc
cwtl
enter
mov
mov
add
cmc
lret
in
pop
mov
fs
aaa
mov
pusha
fldcw
ja
or
inc
addl
into
clc
out
pop
cmp
arpl
shll
and
push
mov
addr16
push
orl
into
mov
int
add
add
xor
or
fildll
in
push
in
sub
pop
je
jbe
sub
repnz
or
mov
xlat
xchg
xchg
js
mov
xor
in
aad
mov
xchg
lock
mov
scas
jge
mov
or
xchg
or
mov
das
sub
adc
mov
dec
mov
scas
jns
mov
dec
stc
cmc
out
and
inc
jb
inc
xchg
xchg
aaa
mov
sahf
js
out
xchg
pop
cwtl
add
stos
xor
loope
mov
xor
inc
stos
mov
fists
incl
lahf
iret
sbb
cs
lret
scas
jp
inc
into
loope
sbb
scas
rorl
add
inc
add
add
add
aas
inc
push
gs
gs
imul
aaa
inc
add
add
add
aas
inc
push
insb
outsl
imul
jb
jae
fs
inc
add
add
inc
add
add
add
aas
inc
push
insb
outsb
addr16
pop
gs
outsl
jb
jae
fs
inc
add
push
aaa
inc
add
add
add
aas
inc
push
outsl
jne
pop
outsl
pop
jb
outsb
addr16
jae
fs
inc
add
push
aaa
inc
add
add
add
aas
inc
push
bound
pop
popa
insb
insb
outsl
arpl
je
inc
inc
add
add
add
dec
push
inc
add
add
add
add
inc
add
add
add
aas
inc
push
je
jo
pop
imul
push
aaa
inc
add
add
add
aas
inc
push
bound
pop
arpl
je
inc
add
push
aaa
inc
add
add
add
aas
inc
push
bound
pop
je
jo
imul
push
aaa
inc
add
add
add
aas
inc
push
pop
pop
outsb
outsl
outsb
pop
jb
je
pop
outsl
bound
arpl
add
add
inc
mov
xchg
add
add
add
cmp
or
add
xchg
cmp
or
add
push
add
add
cmp
adc
add
movsb
cmp
adc
add
je
inc
add
add
add
inc
add
add
add
inc
add
add
add
cmp
sbb
add
les
inc
add
add
add
add
push
cmp
sbb
add
sub
inc
add
cmp
js
add
je
inc
add
add
cmp
jp
add
push
cmp
cld
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
inc
add
add
add
add
add
add
add
sub
or
mov
or
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
or
push
add
add
or
cmp
add
add
or
xor
or
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
xor
or
and
or
cmp
or
dec
xor
or
push
xor
or
mov
or
lods
xor
or
lret
add
xor
or
add
or
adc
or
and
or
ss
dec
or
pop
or
push
or
mov
or
xchg
or
stos
or
mov
or
lock
or
or
es
or
ds
or
pop
aaa
or
outsb
aaa
or
jle
or
cwtl
aaa
or
stos
aaa
or
mov
aaa
or
aam
or
in
or
repnz
or
add
or
push
cmp
add
cmp
add
cmp
add
cmp
add
add
or
data16
add
or
mov
or
test
or
mov
add
add
xor
add
add
add
xor
add
or
jl
or
insb
xor
add
or
cmp
add
add
or
xor
or
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
xor
or
and
or
cmp
or
dec
xor
or
push
xor
or
mov
or
lods
xor
or
lret
add
xor
or
add
or
adc
or
and
or
ss
dec
or
pop
or
push
or
mov
or
xchg
or
stos
or
mov
or
lock
or
or
es
or
ds
or
pop
aaa
or
outsb
aaa
or
jle
or
cwtl
aaa
or
stos
aaa
or
mov
aaa
or
aam
or
in
or
repnz
or
add
or
push
cmp
add
cmp
add
cmp
add
cmp
add
add
or
data16
add
or
mov
or
test
or
mov
add
add
xor
add
add
add
xor
add
or
jl
or
insb
xor
add
add
gs
outsb
imul
add
dec
insb
gs
outsb
imul
imul
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
dec
outsb
imul
add
outsl
insb
xor
cs
insb
add
add
je
gs
imul
inc
gs
fs
jae
inc
jns
popa
insl
gs
add
push
push
dec
inc
dec
cs
insb
add
push
popa
gs
data16
insl
jae
arpl
fs
insb
add
add
jne
push
inc
jne
data16
add
push
add
popa
insb
inc
jb
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
add
popa
jo
popa
insb
imul
pop
add
popa
jo
outsl
insl
jo
arpl
add
je
outsl
arpl
push
imul
inc
jb
popa
je
inc
imul
gs
jo
jb
add
push
add
popa
jo
insb
insb
outsl
arpl
or
dec
gs
jo
jb
popa
je
add
inc
add
gs
add
je
jne
jb
outsb
je
push
dec
add
out
add
gs
imul
dec
add
fs
imul
add
cwtl
add
je
jb
arpl
fs
jae
add
stos
add
je
jb
imul
imul
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
lret
je
push
outsb
ja
outsb
add
jae
inc
js
gs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
cmp
push
gs
outsb
push
gs
js
gs
imul
gs
scas
add
imul
jae
dec
add
insl
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
add
imul
mov
inc
gs
je
dec
popa
outsb
fs
add
jne
inc
gs
outsl
fs
gs
imul
add
pusha
add
push
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
or
dec
gs
jo
gs
jb
jns
jbe
push
imul
jb
add
push
imul
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
sub
dec
jae
popa
fs
jb
je
push
je
add
add
popa
jo
imul
dec
jae
popa
fs
gs
fs
je
add
add
inc
popa
fs
outsl
fs
je
add
cmc
add
je
inc
push
add
mov
inc
gs
inc
dec
inc
push
add
cld
add
je
push
dec
outsb
outsw
add
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jne
jb
add
loope
push
gs
outsl
outsb
jae
insb
gs
je
insb
dec
popa
outsb
fs
gs
xchg
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
aad
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
fs
add
je
jns
je
insl
push
imul
insb
gs
imul
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
cmp
dec
inc
dec
popa
jo
je
imul
add
je
je
imul
inc
add
mov
inc
gs
je
imul
push
add
insb
add
je
outsl
arpl
gs
outsb
outsw
inc
add
jns
push
imul
jb
je
arpl
mov
push
jns
je
insl
dec
outsb
outsw
add
push
dec
inc
dec
xor
cs
insb
