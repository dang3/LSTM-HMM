push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
jle
fcomps
mov
mov
mov
pusha
call
add
data16
xchg
ret
xchg
sub
xlat
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
mov
dec
pop
in
pop
hlt
icebp
sbb
jo
js
insl
or
xchg
cltd
outsb
xor
cs
push
mov
sub
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
sub
pushf
ljmp
stc
mov
cld
mov
add
loopne
adc
insl
aam
adc
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
adc
inc
pop
test
rcr
mov
sub
push
pushl
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
into
xor
jb
lret
cmc
pop
push
pop
inc
ret
hlt
daa
in
cmp
sar
cmp
clc
pop
into
cmc
mov
fbstp
inc
cmpsl
bound
jp
orl
in
out
ds
in
jecxz
stc
add
add
gs
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
add
push
pop
push
pop
cmp
je
add
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
jmp
mov
pop
ret
add
xor
jg
cmp
sti
mov
pop
lcall
xorb
ds
outsl
in
mov
jl
ret
cmp
xor
and
push
mov
test
stc
jl
js
push
fstpt
scas
lods
popf
roll
xor
scas
cmc
ja
push
xchg
out
or
push
in
shlb
mov
mov
ljmp
mov
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
ljmp
lods
int
cmpsl
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
jle
sub
add
dec
data16
das
std
inc
push
pop
clc
sbb
sub
lods
mov
shl
fs
.byte
cwtl
and
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
shlb
add
jbe
add
call
and
add
add
and
add
and
add
and
add
add
cmp
add
add
add
add
add
push
add
xor
add
push
and
add
add
pusha
and
add
and
add
add
add
clc
and
add
and
add
and
add
add
add
add
loopne
add
into
and
add
add
add
and
add
and
add
and
add
add
add
test
add
hlt
and
add
add
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
shlb
add
jbe
add
call
and
add
add
and
add
and
add
and
add
add
cmp
add
add
add
add
add
push
add
xor
add
push
and
add
add
pusha
and
add
and
add
add
add
clc
and
add
and
add
and
add
add
add
add
loopne
add
into
and
add
add
add
inc
jbe
outsb
je
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
push
jns
gs
add
imul
insl
gs
insb
outsl
jae
add
fs
outsl
outsb
jae
insb
gs
add
icebp
add
imul
jb
je
arpl
add
add
je
imul
bound
gs
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
fs
je
insl
inc
add
roll
dec
gs
jo
imul
inc
gs
gs
inc
je
insl
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
mov
push
insb
gs
add
inc
gs
outsl
imul
jbe
jae
add
fs
outsl
outsb
jae
insb
gs
add
imul
je
imul
push
add
inc
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
inc
outsl
jo
inc
imul
outsl
popa
fs
imul
add
rolb
dec
gs
jo
gs
jb
jns
dec
add
insb
outsb
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
push
add
outsb
fs
push
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
push
imul
jb
gs
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
inc
inc
add
lods
enter
add
add
enter
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jp
jp
stos
lods
lods
add
test
push
mov
mov
mov
ret
leave
lret
int
int3
rcl
in
rcl
shl
rcl
shl
into
int
hlt
enter
enter
in
mov
mov
lods
lods
lods
lea
fwait
cltd
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
leave
not
rcl
cld
xlat
fcomp
std
xlat
xlat
xlat
xlat
xlat
xlat
aam
aam
rcl
iret
dec
int3
into
aam
aam
rcl
sar
ret
mov
mov
iret
movsl
mov
xchg
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
sbb
mov
jnp
mov
sar
mov
lret
dec
rcl
aam
aam
fcomp
fdivr
xlat
xlat
xlat
call
aad
dec
int
dec
int3
into
call
aad
dec
into
into
inc
sarb
mov
scas
scas
std
cmpsb
cmpsb
cmpsb
ljmp
push
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
dec
add
pop
add
or
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
leave
dec
int
call
rcl
fcom
fdivr
xlat
fdivr
aad
aad
into
into
into
dec
leave
lret
int
inc
mov
sarl
pushl
cmpsl
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
pop
pop
pop
fs
inc
sbb
sbb
femms
push
sub
cmp
aaa
cmp
cmp
and
and
add
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
ret
ret
enter
rcl
sar
aam
call
aam
ror
sar
leave
enter
inc
mov
mov
lods
scas
scas
jmp
pushf
pushf
cwtl
xchg
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jl
jge
jle
jb
jno
popa
arpl
push
push
push
xchg
cmp
inc
inc
mov
outsb
outsb
jo
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsl
movsb
movsb
add
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
leave
lret
dec
leave
leave
inc
ret
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
xchg
xchg
cltd
cltd
cltd
in
addb
push
femms
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
pusha
mov
incb
jp
jnp
jl
outsl
outsl
outsb
out
addr16
data16
jne
jle
jle
jp
jp
fs
inc
inc
cmp
pop
sbb
adc
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
incl
test
xchg
xchg
xchg
mov
mov
xchg
mov
js
jns
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpb
mov
mov
incl
mov
std
mov
jle
jo
jo
jae
jae
jle
jle
addl
xchg
push
cmp
ss
and
jge
jge
fwait
fwait
lcall
test
icebp
lods
stos
lods
sti
lods
lods
stos
stos
stos
stos
stos
stos
test
std
fwait
fwait
lcall
xchg
jp
jns
jp
jns
mov
xchg
movsb
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
scas
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
lea
pop
pop
pop
push
femms
rdmsr
inc
inc
inc
dec
insl
insl
insl
jl
test
leave
fwait
lcall
cltd
fwait
cltd
stc
nop
nop
nop
std
mov
mov
mov
mov
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
call
lcall
incl
xchg
xchg
xchg
xchg
popf
sahf
pushf
std
movsl
movsb
mov
out
xchg
xchg
xchg
in
xchg
nop
xchg
in
xchg
push
jne
cmovp
or
sub
push
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
nop
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
lods
pushl
mov
test
std
ret
xchg
scas
mov
mov
ljmp
lahf
adc
add
add
pop
pop
adc
scas
mov
ret
mov
pushf
decl
mov
call
nop
xchg
xchg
xchg
xchg
popf
pushf
sahf
movsl
mov
test
movsb
mov
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jo
jne
jp
jle
test
mov
lea
xchg
testl
lea
jmp
lahf
pushl
imul
mov
aaa
jg
mov
ja
mov
cmpsb
mov
mov
lods
lods
mov
movsl
mov
add
pop
pop
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
cwtl
xchg
lcall
sahf
mov
movsl
std
movsb
mov
lcall
xchg
xchg
les
fwait
in
xchg
xchg
out
lea
nop
stc
xchg
test
std
xchg
jae
cltd
push
cmp
dec
cmp
inc
jl
mov
jnp
mov
je
mov
outsl
ljmp
adc
stos
or
lods
or
pushl
mov
mov
pushf
mov
movsb
movsl
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
lcall
sahf
mov
sahf
call
xchg
xchg
decl
xchg
nop
call
xchg
lcall
lcall
sahf
xchg
xchg
insb
xchg
xchg
push
jg
cwtl
dec
jp
cltd
je,pt
cltd
sub
sahf
push
addr16
sahf
pop
jmp
arpl
test
ljmp
ljmp
pushl
adc
insb
mov
cltd
lods
mov
lods
scas
scas
movsb
movsl
movsb
sub
movsb
movsl
mov
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
pushf
lcall
mov
movsb
jmp
xchg
xchg
decl
mov
mov
xchg
xchg
js
lcall
xchg
push
jp
xchg
cmp
decl
push
call
or
xchg
add
call
pop
lcall
adc
lods
sbb
mov
insl
pushl
sbb
je
mov
and
rcrb
inc
inc
test
les
cli
lods
scas
lods
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shll
sahf
pushf
sahf
jmp
cmpsl
jmp
test
test
pushf
fwait
popf
call
pop
js
mov
decl
popa
decl
pop
incl
add
incl
add
lea
push
decl
add
lcall
jmp
pop
outsb
pushl
sub
mov
sub
sub
jle
enter
cs
leave
lea
cld
scas
mov
lret
mov
add
add
add
add
stos
mov
push
adc
test
ljmp
sahf
jmp
test
ljmp
lods
lods
pushl
scas
scas
jmp
jb
decl
or
incl
pop
push
incl
push
incl
add
xchg
push
decl
add
xchg
add
cltd
add
lahf
add
add
scas
adc
mov
ss
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
cmpsb
ljmp
sahf
ljmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
push
decl
orps
xchg
push
incl
add
push
decl
add
xchg
add
popf
add
mov
add
stos
add
jb
ret
cmp
dec
inc
call
inc
mov
rorb
fmuls
call
dec
xchg
fmull
fistl
call
test
std
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
fwait
xchg
cwtl
add
dec
adc
jnp
mov
test
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
decl
sbb
mov
pop
decl
or
add
xchg
add
xchg
add
pushf
add
mov
add
test
pop
arpl
shll
dec
dec
call
push
xchg
call
push
cltd
fistl
fstpl
jmp
push
pushf
jmp
pop
popf
jmp
pop
mov
jmp
pop
lahf
call
test
mov
mov
test
test
lahf
mov
mov
add
add
add
inc
inc
adc
ja
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
callw
sbb
xchg
or
call
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
lcall
arpl
jmp
data16
in
cmpsb
jmp
test
push
test
call
xchg
mov
cmpsl
test
sahf
mov
mov
add
add
add
inc
inc
adc
jp
xchg
cltd
call
sahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
fwait
jo,pn
cltd
outsb
call
pop
call
add
fwait
add
mov
add
lods
add
mov
pushl
adc
rolb
jmp
outsb
lods
jmp
outsl
stos
jmp
jb
call
jne
in
jae
out
jbe
out
je
out
je
jmp
mov
mov
test
lcall
mov
add
add
add
jge
cmp
aas
adc
outsl
js
mov
lcall
mov
pushl
mov
mov
inc
mov
mov
lcall
xor
lahf
cmp
sahf
cmp
xor
fwait
sbb
pop
call
add
mov
add
mov
pushl
add
leave
sbb
ficoml
in
mov
jmp
jle
jmp
mov
out
cmpl
push
xchg
push
cmpl
inc
mov
stos
cmpsl
pushf
popf
sahf
daa
sahf
lahf
mov
add
add
add
add
cmp
pop
pop
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
inc
ret
mov
mov
sahf
insl
mov
lcall
jmp
cmp
fwait
sbb
add
popf
add
movsb
add
test
popa
ljmp
add
add
ret
dec
and
mov
in
mov
push
mov
push
nop
sar
xchg
push
xchg
ret
stc
xchg
mov
out
nop
sar
mov
inc
ret
lods
stos
mov
pushf
popf
xor
popf
add
add
add
inc
cmp
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
inc
inc
mov
jl
lcall
dec
cmp
dec
cmp
xor
pop
lcall
add
cmpsl
add
lods
add
mov
mov
add
movl
out
xchg
ret
push
cltd
push
fwait
push
lcall
negb
sti
lahf
into
sti
sahf
into
sti
cltd
leave
push
xchg
ret
fidivs
enter
mov
mov
xchg
xchg
add
add
add
aaa
add
das
or
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
inc
leave
mov
mov
ljmp
xchg
movsl
sub
cltd
push
pop
lcall
add
add
mov
arpl
mov
add
movl
jne
fiadds
out
mov
push
movsb
int3
push
movsl
int
stc
cmpsb
into
cld
test
cld
cmpsb
into
sti
cmpsl
into
cld
stos
iret
std
stos
sar
cld
test
mov
int3
std
mov
mov
sahf
sahf
sahf
dec
xchg
xchg
xchg
add
lcall
xor
sub
inc
inc
inc
bound
push
xlat
je
jb
mov
rol
ret
mov
ret
ret
mov
enter
rol
pushl
push
test
lods
push
mov
lods
dec
test
lahf
sbb
pushf
add
movsl
add
add
mov
mov
add
int
insl
fadds
jae
loopne
jge
in
pop
cmpsl
push
lahf
leave
cld
lods
sar
cld
scas
aad
cli
mov
cli
mov
cld
mov
mov
cld
mov
mov
pushl
sar
mull
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
sbb
dec
outsb
outsb
outsl
mov
mov
aad
xlat
jmp
fcomp
not
rcl
std
lret
dec
leave
lret
lret
lret
inc
enter
mov
mov
lods
push
mov
lods
cmp
popa
jmp
add
mov
mov
add
roll
jo
add
loopne
je
jmp
jb
sti
lods
aad
mov
cld
mov
fcos
cld
mov
fdivr
std
mov
fdivr
mov
xlat
push
mov
call
lret
mov
sahf
mov
or
add
add
xor
xor
add
pop
or
movb
in
call
out
test
in
leave
fsub
fcmovnu
fcomi
xlat
fcmovnu
cli
aam
xlat
std
int3
iret
sar
mov
push
test
stos
sub
mov
add
mov
arpl
mov
add
lret
add
add
fldl
jbe
in
js
out
xor
sti
mov
std
ret
loope
inc
loopne
inc
std
loopne
std
enter
enter
fdivrp
dec
fdivrp
dec
loopne
cld
mov
lret
lret
mov
mov
xchg
adc
add
add
incl
std
std
add
std
incl
repnz
or
out
in
pop
jmp
out
sub
out
in
dec
ljmp
xchg
call
call
fsubr
ret
mov
xchg
cmpsl
cmp
movsl
adc
jmp
popa
pushl
add
lds
imul
fadds
jb
filds
js
call
inc
popf
cli
mov
loop
std
int3
loop
dec
in
dec
in
dec
jecxz
dec
loop
dec
loope
std
iret
jecxz
std
shl
shl
std
shl
cli
out
mov
fdivr
ret
out
cmpsl
cmpsb
cmpsb
mov
cwtl
xchg
add
add
add
incl
std
add
div
add
hlt
lock
repz
out
icebp
out
pop
out
lock
out
out
pop
loopne
loopne
les
xchg
sti
sahf
and
lcall
add
add
mov
fs
add
leave
add
rolb
jno
fiaddl
je
in
jnp
in
push
pop
test
cld
mov
cld
shl
dec
in
std
shl
shr
call
jecxz
aam
call
fldl2t
std
fldl2e
dec
loopne
hlt
aad
jecxz
lret
lret
test
stos
fwait
xchg
xchg
xchg
and
cwtl
xchg
add
std
sti
add
testl
repnz
or
aam
xor
jb
negb
add
add
scas
add
mov
add
leave
add
add
fildl
jne
call
sbb
push
je
cld
fdivrp
fsubr
std
fucompp
fldpi
fldl2t
fucomi
fucomp
fucomi
fsubr
fucomip
fucomip
std
fucomip
cld
shl
push
ret
call
iret
sar
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loop
add
leave
sbb
lods
jnp
repnz
ljmp
add
mov
add
int3
add
add
fiadds
jae
jmp
sub
cld
shl
fsubrp
fucomi
fucomi
fucomi
out
aad
shl
cld
shl
cld
iret
loope
clc
iret
clc
int
push
ret
out
mov
jmp
rcr
fcom
sti
mov
mov
cltd
cltd
cltd
cmp
lcall
mov
mov
add
leave
lds
scas
mov
lcall
add
mov
mov
add
roll
outsb
fadds
je
loope
js
ljmp
cli
xchg
sti
lret
cld
lret
cld
stc
mov
aad
repz
iret
push
mov
int
jmp
mov
sar
jmp
jmp
loopne
in
mov
mov
xchg
add
add
add
int
add
mov
cmpsl
loopne
xor
jmp
add
mov
data16
mov
add
into
or
rorl
jne
fisttpl
js
loope
cmp
inc
xchg
jmp
scas
lret
call
scas
enter
cld
fidivs
neg
mov
lret
fcmovne
iret
fsubp
iret
aad
loopne
fcmovb
call
in
test
in
out
popf
call
lret
lods
stos
lods
adc
test
cmpsl
add
rolb
rolb
ret
mov
stos
aam
dec
jg
pushf
sbb
cmpsl
sbb
jno
mov
jns
mov
dec
test
les
stc
leave
gs
test
mov
sarl
rcl
mov
int3
rcl
int
into
shlb
xlat
rcl
jg
fcmovnu
jb
loopne
gs
jecxz
out
jmp
xor
div
cmc
and
repnz
fstp
or
mov
int
xchg
add
mov
mov
mov
les
imul
sbbb
xchg
cmpsl
sarb
stos
mov
les
ret
ret
int
int
ror
iret
addr16
rcl
push
rcl
rorl
xlat
xlat
inc
aam
xor
fcmovnbe
daa
ficompl
fchs
fcoml
fsubp
jecxz
loope
in
call
icebp
in
add
cld
testl
std
std
incb
std
std
add
mov
shrl
mov
mov
mov
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
lret
ror
and
rcrl
rcl
aam
rcl
rorl
rcr
aad
rcr
fadds
fcmovnu
add
loopne
add
in
add
in
jmp
lret
xlat
aam
std
incb
mov
mov
add
rol
ret
sub
les
mov
mov
push
rol
or
enter
enter
int
add
aam
add
add
fcom
add
xlat
add
add
add
flds
fnstsw
loope
filds
in
out
repnz
add
std
add
std
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
ja
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
into
rcl
jmp
rcl
cmc
rcl
sar
into
ror
cli
lret
int3
lret
stc
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
into
into
into
aad
call
xlat
xlat
dec
rcl
dec
iret
into
dec
lret
lret
inc
mov
mov
stos
lods
lods
icebp
xchg
cltd
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
je
jae
gs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
int3
lret
lret
call
rcl
call
rcl
dec
lret
lret
inc
mov
pushl
test
lahf
xchg
cwtl
xchg
jmp
outsl
jo
pop
push
adc
xor
add
add
add
add
jg
addb
jl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
push
pop
pop
cmp
cmp
pop
outsl
outsl
jno
scas
mov
pop
mov
mov
mov
mov
inc
rol
inc
mov
mov
mov
jmp
lcall
xchg
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
add
add
add
add
add
pop
fwait
fwait
fwait
add
pushf
xchg
cwtl
fcoml
addb
jnp
jl
js
jns
jp
jp
jns
jns
je
je
push
push
push
cmp
aaa
pushf
pushf
popf
mov
scas
lods
repz
lods
scas
sti
lods
lods
scas
std
test
sahf
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
cmpsb
movsb
cltd
jb
jae
adc
adc
add
add
add
add
insl
outsb
outsb
pop
stos
movsl
stos
loop
cltd
pushf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
jo
orl
cwtl
lcall
mov
call
popf
ljmp
test
std
mov
scas
mov
xlat
movsl
mov
addl
add
add
pop
pop
popa
or
scas
mov
movsl
sahf
movsl
decl
mov
call
lahf
sahf
sti
lahf
mov
cwtl
call
push
push
push
jo
pop
push
outsl
imul
jle
subb
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
popa
or
mov
in
movsb
test
call
xchg
xchg
call
cwtl
fwait
cltd
popf
pushf
fwait
sahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orb
xchg
push
cld
xchg
pop
cmp
dec
jl
movsb
inc
jns
scas
aaa
ja
scas
daa
jae
mov
outsb
ljmp
sbb
mov
mov
scas
mov
mov
add
add
add
add
pusha
or
mov
lcall
lahf
sahf
jmp
lahf
mov
decl
addl
xchg
jae
cld
xchg
pop
cmp
dec
js
xchg
cmp
nop
sub
xchg
sbb
cltd
adc
sahf
push
pusha
jmp
sbb
mov
insl
pushl
push
jb
mov
pop
nop
mov
lods
scas
xchg
popf
sahf
lahf
adc
add
add
pop
pusha
popa
or
stos
mov
test
lahf
lahf
ljmp
test
cmpsl
lcall
pop
jp
mov
imul
sub
decl
adc
xchg
push
decl
add
call
add
cmpsl
or
mov
jae
mov
das
jge
les
jge
leave
xor
lret
xor
dec
pop
xchg
inc
test
imull
test
sbb
add
add
pusha
pop
popa
or
movsl
stos
in
mov
test
scas
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
add
decl
add
xchg
add
sahf
add
movsl
add
mov
insb
inc
cmp
rolb
aam
nop
call
inc
xchg
call
arpl
stc
mov
mov
movsl
movsl
mov
add
add
add
pusha
or
popf
mov
ljmp
mov
pushl
mov
stos
lcall
pop
popa
call
push
pop
decl
push
call
pop
jmp
add
jne
iret
dec
xchg
call
pop
fwait
fcompl
ficomps
jmp
pop
mov
fildll
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jge
jp
fwait
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
insb
call
push
pop
call
add
cmpsl
add
scas
add
mov
xor
jmp
outsb
test
ljmp
out
jae
jmp
test
std
mov
test
addb
add
dec
dec
dec
pop
outsb
insl
insb
bound
lcall
mov
mov
sar
mov
jmp
je
mov
sub
cwtl
or
lcall
ljmp
add
rorl
jmp
jns
jmp
mov
in
cmpl
hlt
mov
push
mov
mov
test
push
fwait
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
mov
mov
xchg
jmp
sub
cltd
or
mov
add
mov
fs
mov
push
jbe
fistps
in
nop
mov
push
cwtl
cwtl
enter
enter
leave
clc
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
ret
ret
ret
pushl
push
xchg
lods
dec
cmp
pop
insb
jmp
add
mov
fs
mov
add
fsubs
cmp
jp
push
mov
sar
cli
stos
sar
sti
stos
sar
std
lods
sar
cld
lods
sar
stc
cmpsb
lret
call
rol
stos
stos
test
or
add
add
push
dec
push
aaa
jb
jb
stos
stos
stos
ror
into
int3
out
iret
int3
cmc
leave
lret
lret
sti
enter
enter
mov
bound
jmp
add
mov
arpl
ret
dec
add
fildl
xchg
clc
xchg
std
mov
std
mov
fcos
cld
mov
xlat
mov
sar
jmp
enter
repz
scas
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loope
loopne
fcmovnu
ffree
fcmovu
fcom
out
shll
test
pop
popa
ljmp
add
leave
add
xlat
add
jecxz
jp
repnz
mov
sti
inc
loopne
inc
loope
std
dec
fdivrp
dec
loope
cld
out
mov
leave
divb
popf
sbb
add
add
incl
incb
ljmp
in
in
in
xor
loope
jecxz
les
mov
mov
add
mov
fs
add
int
outsb
fldl
jne
ljmp
std
fdivrp
std
iret
out
shl
shl
std
shl
call
out
std
call
push
fcos
fcmove
sar
mov
mov
add
incl
incb
std
cld
pop
aad
aam
mov
pop
xchg
sahf
or
ljmp
add
add
rolb
jno
filds
jbe
out
and
shl
fsubr
cld
fld1
cld
fsubr
std
xlat
out
cld
aad
push
aad
mov
sahf
popf
das
add
add
into
into
int3
or
bound
ljmp
add
movb
call
add
loope
ja
out
xor
cli
lret
loope
cli
leave
loopne
cmc
repz
icebp
ret
std
out
sar
in
vpsubw
shl
ljmp
ljmp
test
incl
aad
aad
mov
je
or
mov
insb
inc
sbb
int3
and
cs
fists
clc
jecxz
mov
out
jecxz
lret
mov
loope
mov
lret
leave
fmulp
iret
mov
jecxz
fistpl
out
call
rorl
mov
add
lods
lods
stos
add
xchg
movsb
les
xchg
mov
nop
fidivrl
jg
rol
stos
mov
mov
les
aam
int3
insl
aam
int
ror
rorl
cmp
das
jecxz
fsubl
jecxz
icebp
adc
in
in
or
incb
incb
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
ret
leave
enter
aam
mov
rcl
or
fnstsw
or
int
add
std
incl
incb
lcall
pinsrw
or
int
into
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
cltd
add
rol
enter
leave
mov
ret
mov
scas
mov
insb
lods
stos
lods
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
into
int
std
mov
stc
mov
test
andb
push
add
add
add
add
add
add
add
add
jae
jno
pushw
inc
dec
inc
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
into
call
aam
dec
iret
into
inc
enter
mov
lcall
mov
push
add
add
add
add
je
jae
xchg
adc
bound
mov
push
outsl
jb
pusha
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jae
es
add
add
add
jb
jae
fwait
xchg
pushf
mov
test
mov
xchg
or
test
push
push
dec
inc
mov
popf
into
mov
mov
xchg
decb
mov
fwait
lcall
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsb
cld
mov
mov
xchg
xchg
xchg
cld
pushf
popf
sahf
cmc
cltd
cltd
cltd
in
addb
imul
jle
lea
xchg
notl
mov
pushl
xchg
mov
test
lods
push
stos
lods
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
cltd
lcall
lcall
xchg
mov
loope
je
out
nop
bound
std
lcall
ljmp
pop
jo
mov
insb
pushl
pushf
lods
lock
mov
imul
into
add
xchg
pop
lods
cmpsb
lods
test
sahf
popf
popf
jmp
cmpsb
call
jle
mov
xchg
inc
je
lea
imul
push
arpl
nop
adc
xchg
or
mov
push
insl
pushl
es
shrl
inc
ds
rcrb
subl
je
push
mov
movsb
cmpsl
cld
test
cmpsl
ljmp
scas
mov
sahf
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
ds
rolb
call
inc
call
dec
xchg
dec
cltd
mov
mov
mov
movsb
movsb
mov
add
push
test
mov
scas
pushl
mov
ljmp
cmp
xchg
pop
decl
push
push
call
add
lods
add
mov
push
xchg
fcompl
loope
mov
jmp
cmpsb
call
lcall
cmpsl
test
pop
add
add
popa
bound
mov
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
push
pop
lcall
add
mov
xor
jmp
js
in
jl
out
jge
out
jge
fistpl
mov
mov
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
lcall
add
pop
pushl
outsb
fisttpl
in
mov
push
xchg
push
xchg
enter
enter
mov
movsb
cmpsb
sub
aas
aas
inc
adc
push
xchg
xchg
mov
inc
ret
ljmp
cmp
pop
push
pushl
add
aad
ja
jmp
lods
push
cmpsb
int
cli
stos
sar
cli
lods
sar
std
scas
sar
scas
sar
in
mov
inc
mov
movsl
ds
incb
xor
jno
inc
scas
mov
mov
aad
aam
aad
rcl
shr
leave
lret
mov
mov
jmp
add
les
imul
out
xchg
stc
mov
std
mov
inc
inc
inc
out
mov
ret
cmpsl
test
add
add
add
jmp
or
jmp
out
outsb
fcomp
mov
add
mov
add
fldl
jne
out
cmp
dec
out
dec
in
call
in
call
in
std
aam
push
enter
into
in
lods
scas
scas
popa
addb
add
incb
incb
lret
int3
shrl
mov
add
mov
add
jecxz
js
repz
cmpsb
cld
loope
aad
aad
cld
aad
sti
aad
stc
aam
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
mov
cld
lods
add
mov
or
cmp
imul
mov
into
bnd
ret
in
aam
call
fcmovnu
scas
vsqrtsd
add
add
sarb
movsl
pop
mov
lods
dec
and
shlb
lret
mov
mov
lret
into
outsl
fxch
iret
pop
fst
xlat
dec
jecxz
fistpll
out
out
out
out
out
sbb
mov
mov
cmp
mov
lods
push
mov
mov
les
sbb
bswap
int
or
aad
std
incb
jg
jg
std
std
incb
stos
std
std
add
std
incl
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
lret
rolb
push
mov
cmp
into
nop
jp
sbb
ljmp
lea
sbb
lds
push
adc
adc
aas
pushaw
in
dec
imul
sahf
imul
adc
inc
insl
fildl
out
scas
xor
mov
insb
lcall
mov
push
shlb
jns
push
dec
outsl
movsb
sub
aas
lahf
sub
cmp
movsb
xor
dec
es
lahf
pusha
mov
fidivl
or
adc
je
fidivrs
fs
add
pop
pop
mov
sti
push
push
vpshab
sub
subl
mov
mov
xchg
leave
movsb
popa
out
test
mov
mov
add
or
ret
lds
lds
ficompl
movsb
xor
add
jns
pop
cmc
popw
lea
mov
dec
mov
xchg
mov
hlt
jp
jl
inc
pop
stc
jp
js
add
pop
test
fcompl
ror
adc
pop
xor
jbe
sub
ret
leave
divl
push
push
adc
sbb
sub
test
or
or
iret
in
push
xchg
inc
ret
pop
iret
ds
cmpsl
xchg
xchg
stc
in
xlat
push
ljmp
test
aad
inc
rep
jp
stos
daa
jb
in
pop
cmp
iret
sub
lods
xchg
cltd
pop
arpl
jl
xchg
add
add
jb
jmp
out
xor
jo
roll
inc
jae
aam
lds
mov
mov
insb
lahf
or
jmp
xchg
xlat
jl
pop
lret
and
shl
sub
gs
or
pop
hlt
test
ret
mov
movl
call
clc
stc
pop
inc
cltd
xor
jns
mov
outsb
pop
nop
mov
sbb
mov
mov
pop
mov
and
jb
mov
cmpsb
pop
sbbl
add
decl
repz
cld
mov
call
xchg
ds
mov
outsb
cmc
ds
scas
das
push
sbb
jb
addr16
test
pop
stos
in
je
mov
pusha
inc
mov
push
xchg
dec
adc
loope
jbe
pop
push
aas
cmpsl
inc
lock
addl
sbb
push
mov
movsl
aam
jmp
cli
mov
pop
xchg
or
imul
xchg
mov
cmp
push
jb
subb
and
and
sbb
int3
je
icebp
insb
jo
mov
mov
inc
pusha
push
pop
mov
pusha
pop
mov
mov
dec
adc
cli
pusha
into
insl
cmp
push
add
push
pop
push
dec
sbb
cld
lock
mov
unpcklps
repz
or
xor
popa
mov
mov
dec
cld
ds
jmp
cli
mov
loopne
lret
das
fsin
sbb
pushf
jnp
test
aam
shrl
roll
das
in
pop
add
cmp
pop
dec
ret
int
jbe
dec
jecxz
aam
dec
lods
ja
negl
stos
dec
shl
loope
enter
sub
mov
push
andb
add
mov
dec
jg
fisubl
adc
sbb
adc
sahf
mov
stos
hlt
sar
cmp
xor
mov
jno
push
or
lret
clc
lds
lret
mov
orb
mov
or
lret
push
xlat
adc
dec
xlat
cmp
mov
sbb
dec
push
imulb
shlb
daa
xchg
out
out
iret
addr16
cmpsb
insl
inc
adc
mov
add
dec
xlat
xor
pop
in
inc
dec
lock
outsl
pop
aad
outsb
in
adc
inc
add
into
mov
cs
aas
cmpb
cmp
mov
daa
sahf
xchg
ja
jg
xor
mov
insb
sahf
mov
stos
mov
clc
data16
pop
outsb
enter
or
sbb
xor
inc
ds
iret
dec
pop
ljmp
mov
or
and
pop
fstps
jecxz
jno
sub
insb
idiv
das
ret
xchg
out
or
cs
adc
pop
push
in
outsl
pop
cmpsb
bound
cli
xor
sarb
mov
sbbb
push
adc
add
icebp
loopne
adcl
enter
test
xchg
fwait
test
out
shrb
movsb
out
and
mov
stc
mov
push
xor
outsl
pop
pushw
test
sbb
or
inc
xchg
stc
ja
sub
dec
xchg
xor
sbb
xchg
dec
cltd
mov
mov
leave
ficomps
xor
idivb
jnp
clc
insl
loope
mov
rolb
push
fwait
and
jp
lret
lods
xor
xchg
aad
nop
inc
cmp
inc
mov
dec
adc
movsl
scas
inc
jo
pop
jecxz
mov
imul
movsl
shll
xor
lahf
scas
sbbb
out
inc
js
movsl
test
push
dec
dec
push
lcall
push
lds
or
mov
pop
xchg
jae
mov
lods
xchg
cltd
outsl
fistps
movsl
mov
cmpsl
lret
push
sar
mov
in
adc
imul
mov
cli
aaa
or
push
repnz
jle
inc
sbb
loope
inc
pop
jecxz
inc
pop
mov
jbe
mov
pop
xchg
subl
cmpsb
loopne
inc
cmp
and
shl
fs
cmp
push
cmp
push
mov
adc
push
inc
add
inc
fsts
lods
inc
outsb
jb
mulb
les
mul
jmp
xor
pop
sahf
imul
test
lret
sti
adc
add
mov
xchg
outsl
xchg
mov
ret
outsl
or
mov
les
pop
adc
adc
add
xor
insl
add
shrb
decb
xchg
push
cmpsb
cmp
aas
movsb
les
pusha
sub
jns
mov
jecxz
testl
add
dec
sub
jp
mov
and
dec
loope
inc
cmpsb
cmp
out
push
in
xchg
nopl
push
xor
and
les
jecxz
mov
jge
pop
mov
fwait
iret
mov
pop
loop
and
ss
inc
push
out
ljmp
fcos
xchg
or
outsb
add
pop
je
and
stos
in
clc
jno
loop
sbb
ret
push
cmc
imul
pushf
push
mov
dec
mov
cmpsl
out
xor
or
mov
xchg
sub
arpl
or
sbbl
adc
pop
mov
xor
cmp
mov
push
fldt
rorb
adc
cwtl
das
stc
jg
cld
xor
xorl
jno
fistpl
mov
iret
insb
push
in
xchg
sbb
incb
outsb
jbe
mov
shrb
icebp
movsb
or
js
divl
in
xchg
push
fwait
and
test
in
mov
fstpt
lods
xlat
outsb
ficomps
mov
cmc
mov
mov
xchg
loope
adc
xor
aam
testb
cmpsl
pop
repnz
add
stc
jns
sub
jle,pn
test
dec
rolb
pop
je
shrl
xchg
in
enter
js
add
lret
cmp
mov
sbb
ds
loop
loopne
hlt
adc
jnp
fs
push
push
xchg
cmp
fnstenv
pop
mov
fsubp
jge
xor
mov
in
mov
push
call
add
jne
pop
xchg
das
mov
nop
daa
stos
xlat
jge
or
lods
inc
ljmp
cltd
das
pop
pop
lret
jge
dec
scas
jb
andb
or
push
pop
and
mov
sahf
lds
pop
hlt
lock
inc
adc
inc
addr16
xchg
push
test
in
mov
aaa
xor
mov
dec
addl
jbe
shll
xchg
repz
imul
jg
call
add
ret
and
mov
fisubl
or
imul
es
sub
mov
mov
push
pusha
mov
cltd
push
mov
mov
insb
dec
clc
aas
mov
stc
pop
lcall
test
clc
lods
dec
loopne
repz
in
pushf
xor
cmpsl
jle
sbb
repnz
pop
stc
nop
dec
pop
pop
icebp
ja
outsb
add
inc
das
call
mov
cs
stc
imul
orl
xchg
sub
and
inc
mov
adc
rclb
cs
add
sub
outsl
xchg
push
movsl
out
popa
push
xchg
arpl
jl
repz
mov
fcomp
and
mov
sub
stos
rcll
out
sbb
mov
hlt
repz
xor
cmc
mov
icebp
xchg
sub
test
sub
jmp
dec
loope
mov
push
sbb
repz
hlt
ficomps
mov
or
pop
lcall
sbb
sbb
std
es
pop
clc
sub
fdivrl
jb
xchg
cmp
xlat
mov
or
cmpsl
sbb
xor
test
out
sub
mov
fistl
mov
sbb
fsubrl
sub
xor
push
or
enter
mov
xchg
sub
xchg
mov
add
int3
xchg
jmp
xor
lods
cli
popa
cmpsl
mov
lds
aaa
sub
push
mov
mov
fldt
or
das
mov
popa
daa
mov
pop
subb
or
jmp
cmp
mov
pusha
xor
xchg
xor
out
jne
push
out
cmpsl
cmp
jp
adc
jnp
imul
jns
out
stos
mov
dec
fcomip
pop
pop
sahf
dec
adc
outsb
mov
and
or
jne
push
jmp
sub
sbb
pop
insl
pusha
divl
jle
test
push
pop
sahf
dec
pusha
sub
insl
insb
push
call
sub
dec
sbbl
push
imul
js
mov
push
jnp
ss
out
jo
testb
xchg
dec
fistps
dec
lret
cmp
mov
add
jge
cmp
lahf
ss
jo
aam
fnstenv
cmc
fidivs
lds
jl
movsb
test
adc
mov
out
scas
inc
pushf
pop
in
test
or
mov
les
out
pop
mov
pop
nop
daa
js
sub
jge
lret
lahf
and
test
test
cmpsb
stc
nop
cli
lods
fdivl
sbb
adcl
cmpsl
pop
jg
shrl
mov
out
xchg
repz
clc
mov
jp
cltd
rcrl
scas
mov
dec
in
sub
xor
out
les
adc
push
in
jecxz
aas
push
sbbl
pusha
nop
daa
ja
mov
jb
into
fnsave
xlat
outsb
add
mov
push
insl
fldl
inc
mov
inc
dec
es
mov
xor
js
cmp
jg
mov
inc
je
cmpsb
imul
mov
adc
mov
sbb
jns
and
cwtl
push
scas
pop
popa
push
movsb
sbb
inc
and
orb
jl
iret
xchg
popf
into
sbb
in
sbb
sar
jne
and
inc
pop
sub
and
mov
sub
sbb
pop
or
push
cltd
pop
lahf
fs
and
clc
pop
inc
sbb
cmpsb
mov
pop
cmc
imul
outsb
add
adc
jae
test
lods
shrb
xchg
ja
pop
sbb
jmp
mov
pop
setp
jg
gs
outsb
fwait
xor
or
fnstenv
and
pop
out
mov
fnstenv
fdivs
out
or
push
popf
lods
mov
jge
into
xor
jno
cld
daa
mov
lods
imul
or
push
rol
mov
rcrl
imul
rcl
insl
ret
mov
jl
out
imul
adc
push
pop
mov
push
out
add
xor
stos
add
shrb
push
jmp
add
arpl
mov
les
aad
scas
mov
ret
xchg
subl
xor
shll
mov
daa
fs
xor
xor
sub
mov
inc
and
and
cmp
adcb
adc
addb
popf
push
mov
cmp
sbb
std
shlb
pop
mov
push
mov
push
xchg
inc
inc
inc
test
dec
aas
mov
scas
inc
xor
aam
jl
cmpsl
ds
popf
shrb
push
push
aaa
mov
and
int3
arpl
arpl
jno
push
xchg
sub
mov
mov
cmp
cmp
shrl
pop
aam
xchg
adc
xchg
movsb
xor
iret
xor
scas
lock
std
rclb
lods
iret
push
ret
lock
lret
fs
jmp
xor
scas
shld
popf
push
in
adc
push
push
add
std
xchg
mov
pop
repz
repz
jmp
dec
jecxz
mov
push
mov
test
pop
out
fiadds
push
jae
ds
add
in
pop
enter
mov
mov
clc
add
xor
and
sbb
cmp
sub
scas
inc
pop
bound
xchg
es
xchg
sbb
mov
call
cld
or
scas
jnp
push
in
das
mov
in
orl
push
jmp
pop
xor
dec
int3
jmp
loop
lret
push
in
mov
out
pop
xlat
inc
or
pop
dec
xchg
xor
add
and
jns
push
cmp
jne
jbe
cmpsb
push
stos
inc
xchg
mov
movsb
gs
pop
fstps
int3
mov
mov
lds
mov
pop
outsl
push
pop
xchg
ret
pop
xor
xchg
mov
or
jns
xor
cltd
inc
fmuls
sub
jno
pop
out
push
sbb
lea
fbstp
jg
mov
popf
add
cmp
test
shrb
iret
shrl
sub
push
mov
dec
lock
in
push
ljmp
shrl
jo
arpl
mov
adc
clc
enter
sbb
mov
mov
pop
repz
rorl
mov
add
imul
and
sti
sbbl
cmpsl
in
lcall
jne
adc
call
inc
add
scas
inc
push
xor
dec
xchg
inc
dec
test
inc
sti
outsl
mov
mov
ret
call
or
arpl
fcoml
dec
mov
mov
xchg
aad
inc
lock
inc
adc
jmp
scas
xor
push
add
mov
xor
popf
jg
sub
js
dec
jmp
cmp
adc
repnz
mov
loope
insb
add
add
jae
cmp
jle
mov
mov
push
lods
lahf
int
sub
xchg
sub
dec
jmp
pop
and
imul
push
inc
xchg
mov
ss
xchg
sub
push
stos
inc
mov
mov
int
mov
inc
mov
faddp
pop
adc
mov
nop
cmp
testb
mov
je
popa
clc
dec
xchg
adc
aaa
dec
dec
loop
pop
push
ljmp
or
fidivs
add
shlb
xlat
adcb
inc
sub
dec
ss
adc
call
into
mov
mov
testl
shrl
sbb
dec
fcomip
mov
insb
or
mov
sbbb
roll
xchg
add
adc
push
xor
bound
in
cmpsl
andl
enter
or
adc
rolb
push
std
inc
pop
or
sbbb
mov
out
xchg
and
fidivrl
or
adc
fxch
or
jnp
in
imul
imul
mov
test
dec
inc
iret
test
ja
test
jg
jo
ss
inc
leave
pop
subl
push
mov
xor
mov
test
add
dec
add
mov
mov
dec
in
dec
pop
sbb
pop
sbb
jb,pt
adcb
rolb
xor
outsb
lods
inc
pop
pop
hlt
mov
das
out
clc
popa
stc
lds
test
sub
js
inc
mov
xchg
test
in
push
popf
fwait
ret
sbb
ja
lcall
xchg
sub
xchg
cmpsw
adc
lock
orl
in
inc
jb
ljmp
aam
mov
lret
push
mov
out
push
pop
ss
pop
xchg
xlat
mov
xor
mov
and
cs
add
jg
inc
call
mov
mov
adc
lret
dec
pop
xchg
pop
in
ds
insb
in
sbb
sbb
pop
add
pop
jmp
push
loopne
out
push
lret
rorb
popf
xor
test
jp
push
mov
idivb
int3
xor
adc
ret
adcl
cmpsl
xor
mov
inc
xchg
jne
ret
jo
pop
mov
mov
cltd
hlt
imul
dec
push
xchg
pop
jle
jl
jo
pop
pop
cmp
sbb
scas
outsl
mov
pop
ret
jle
sbb
mov
ret
jge
fimull
cmc
fbld
pop
pop
lcall
pop
pop
sbb
jecxz
out
jmp
mov
fimull
mov
jae
push
or
sub
adc
mov
in
or
mov
or
jecxz
inc
or
repz
fldt
mov
jb
mov
cmp
and
lock
xor
pop
mov
mov
cs
dec
int
push
sbb
push
jmp
sub
out
push
mov
jl
sbb
pusha
rorb
or
pop
in
sbb
jbe
wbinvd
push
in
cmp
dec
adcl
fbld
shl
lea
test
and
mov
inc
pop
lods
inc
sbb
adc
sub
std
outsl
xor
ja
inc
bound
mov
push
into
ret
xchg
xchg
ret
repz
lcall
xchg
sub
adc
in
mov
scas
cmpsb
pop
mov
lret
in
aam
xchg
add
pop
push
xchg
sti
shll
aam
pop
xor
stos
xorl
rcrb
mov
bound
push
dec
push
xor
push
dec
push
imul
stc
lock
push
incb
inc
rorl
inc
push
adc
sbb
pop
dec
std
xchg
data16
mov
dec
push
ret
mov
into
inc
aas
pop
xchg
int3
mov
jb
out
enter
push
ljmp
push
out
cmpl
cli
xchg
sub
pop
cmpsb
inc
xchg
inc
add
lock
adc
int3
arpl
lahf
cwtl
or
dec
sub
xchg
js
scas
dec
cmp
nop
dec
ffreep
negl
ret
push
sbb
add
pop
push
inc
loop
jnp
stc
add
test
leave
repnz
rclb
es
je,pt
push
adc
xor
dec
push
test
imul
sbb
jp
es
jo
add
jmp
rorb
cmpb
xchg
lret
popf
arpl
mov
cld
xchg
enter
outsb
add
gs
decl
pop
add
xor
test
loope
cmpsb
mov
fdivs
pushf
inc
fstl
mov
mov
mov
push
mov
xorb
add
enter
push
imul
cmp
dec
fstps
add
sub
outsb
add
je
dec
cmp
ja
dec
inc
inc
movsb
pusha
not
mov
clc
testb
ja
pop
in
jmp
pop
jge
jbe
nop
test
xchg
or
adc
movsl
notb
stos
inc
push
outsb
pop
cmp
jmp
xor
mov
divl
int
mov
xchg
cwtl
das
les
mov
lods
mov
adc
test
pop
or
mov
lods
ds
movsl
xlat
push
sub
data16
push
mov
xchg
imul
dec
push
pop
in
add
jmp
arpl
dec
jns
sarb
push
in
jno
icebp
mov
and
push
mov
and
sub
and
mov
pop
js
mov
in
ds
in
pop
or
sub
xchg
push
ds
gs
add
or
in
jnp
and
mov
in
popa
inc
mov
outsb
xor
psrld
xchg
push
pop
jno
cwtl
pop
xor
pop
xor
xor
push
cmp
pop
imul
dec
xchg
jmp
dec
jae
das
testb
pop
push
mov
xor
mov
cmpl
jmp
into
dec
aaa
pop
sub
lahf
mov
loopne
jno
shlb
mov
test
fdivl
push
mov
adc
and
sbbl
sub
jbe
xor
fwait
orl
out
loopne
fnsave
and
leave
push
pop
fs
xchg
xlat
adc
and
testb
divl
inc
inc
jle
and
divl
pop
test
push
repz
inc
fstpl
inc
mov
pusha
adc
ret
mov
hlt
mov
cld
test
shr
mov
xchg
jmp
leave
push
imul
xchg
jmp
pop
and
xadd
xchg
movsl
push
push
and
filds
mov
mov
dec
pushf
adc
das
sub
test
jmp
adc
sub
jae
stc
jg
xchg
ds
repnz
movsb
jg
cli
enter
les
cmp
cmp
rolb
push
outsl
lods
aam
ret
shl
pop
repnz
fmuls
sbb
pop
sub
mov
ret
mov
cmc
cld
inc
mov
push
add
es
test
push
movsl
cmp
dec
stos
mov
pop
and
adc
push
and
std
outsl
inc
je
xor
orl
std
adc
xor
lods
sbb
sahf
adc
pop
ja
sub
mov
xchg
fwait
cwtl
roll
ret
loop
imul
scas
sahf
adc
xchg
inc
mov
pmaddwd
inc
or
ret
and
mov
push
in
int3
cmp
xor
pop
repz
in
gs
cmpsb
xchg
int3
imul
mov
adc
sub
insb
xor
roll
stos
arpl
lret
pop
fisttps
mov
add
mov
addb
lea
xor
lcall
push
push
and
bound
in
mov
inc
sbb
rorb
test
enter
popf
xor
push
movsl
inc
jge
mov
xor
inc
mov
rclb
std
xchg
cmpsb
cmp
int
mov
mov
scas
fists
mov
pop
lods
sbb
sub
lock
in
fmulp
jl
dec
add
lret
sti
jns
adc
enter
mov
add
mov
movsl
push
cmp
aam
jns
mov
cmc
fs
test
pushf
and
or
pop
cmpl
gs
xchg
add
call
jp
stos
fimuls
dec
push
pop
shlb
test
clc
cwtl
ja
cwtl
adc
sarb
jnp
mov
mov
pop
shrl
cmpsl
fmuls
mov
cmp
ret
fs
push
int3
xchg
cwtl
jb
adc
cmp
daa
imul
arpl
xchg
punpckhwd
xor
xchg
arpl
cwtl
nop
pop
inc
push
sahf
jns
xchg
lret
aas
pusha
pop
cmpb
out
ds
fadds
insb
add
push
jg
dec
dec
add
xchg
dec
lods
adcb
jbe
aad
std
loopne
mov
outsb
mov
mov
xchg
test
mov
push
jnp
iret
pop
iret
pop
out
add
push
in
cmp
je
jne
and
jecxz
imul
lea
pusha
repnz
out
je
dec
out
xor
into
lods
inc
add
inc
dec
scas
loop
mov
cmp
mov
aam
inc
rcll
stos
sbb
mov
mov
aas
popf
test
std
xchg
out
xchg
pop
scas
enter
mov
lahf
adc
popa
sub
and
and
and
in
daa
movsb
push
stos
or
notl
push
add
lret
in
adc
add
mov
jne
jae
pop
jp
pop
mov
mov
adc
daa
pop
shlb
mov
xchg
push
in
xchg
sub
je
in
cmp
lods
jo
js
loop
sub
idivl
loope
data16
cmp
mov
into
mov
ja
fsubrs
cmp
and
dec
sub
scas
mov
stc
mov
ret
pop
je
mov
fsub
cmpsl
inc
cmp
test
fidivl
cmp
andl
inc
out
adc
insl
gs
sbb
cmpsl
dec
sub
repnz
push
jns
notb
outsb
mov
sbb
aam
cmpl
ret
hlt
stos
pop
out
out
mov
adc
lret
sub
sub
push
out
jp
test
mov
and
push
sbb
nop
in
and
outsl
push
mov
loopne
sarb
testb
xchg
xor
sub
out
orl
insb
xchg
fbld
or
mov
jmp
jb
adc
es
cmp
jae
or
sub
inc
subl
scas
xchg
sub
mov
cwtl
pop
lods
pop
pop
mov
xchg
mov
jecxz
jno
cmp
xchg
sub
and
dec
and
loop
mov
daa
add
dec
mov
daa
push
or
loopne
push
aam
dec
dec
test
adc
pop
xor
xorps
push
scas
push
xor
das
mov
xchg
add
push
mov
inc
jp
sbbl
addb
inc
add
push
icebp
test
xor
xchg
fidivs
pop
or
pop
mov
lea
mov
mov
xor
xor
inc
in
testl
adc
xchg
mov
inc
pop
cmpsl
jnp
xlat
pop
add
out
mov
into
adc
mov
cs
in
push
roll
jecxz
into
dec
sti
fists
xchg
push
movsb
lret
or
inc
cmp
test
jbe
or
fdiv
rorl
nop
aaa
sbb
ds
stos
out
cmc
les
sub
xor
test
movsb
mov
movsb
or
pop
jnp
sarb
push
sarl
jge
xlat
lcall
fwait
imul
imul
dec
fcomps
and
jns
push
imul
and
mov
add
ret
and
imul
loope
shll
loope
data16
pop
subl
jns
ljmp
popl
das
jl
fstpl
into
sbb
movsl
lock
scas
xor
jo
dec
sbb
xchg
jg
push
pop
arpl
mov
outsb
lcall
adcl
shrl
in
shlb
vunpcklps
lds
movsb
aas
or
mov
push
cmp
aam
iret
cwtl
notb
test
clc
and
cmp
shlb
lret
sbb
mov
shlb
movl
aad
inc
xchg
xchg
jae
cmp
push
jno
into
mov
pop
imul
jbe
pusha
sbb
adc
leave
stc
pushf
ljmp
mov
filds
jl
pop
out
xchg
cmpsl
and
inc
cs
rorl
lret
popf
or
add
xchg
push
mov
addr16
mov
xchg
add
mov
jns
test
push
cmc
pop
ret
mov
aaa
jns
andl
and
dec
repz
cltd
lret
sub
fisttpl
pusha
cmc
xlat
push
add
out
or
outsb
sub
repz
cld
sub
cmpsl
aaa
xchg
ja
arpl
mov
nop
mov
jno
ljmp
jnp
dec
ret
call
aaa
mov
std
imul
pop
or
not
test
sbb
fcmovnu
jle
lock
loopne
fsubr
mov
nopl
cli
xor
shlb
imul
mov
jne
mov
mov
sub
mov
lods
aas
cld
or
pop
dec
in
mov
pop
out
into
int3
das
mov
push
add
mov
in
ret
mov
std
xchg
add
mov
xchg
lret
ret
testb
jge
mov
movsl
adc
push
lcall
shrl
cld
add
xlat
outsb
add
pop
scas
mov
add
cwtl
cwtl
jmp
cld
out
mov
stos
loopne
jno
xlat
sub
enter
cmp
and
ds
inc
mov
sarb
outsl
enter
add
sbb
mov
adc
cmpsb
das
inc
stos
movsl
adc
je
jae
enter
pusha
cwtl
xchg
leave
push
jnp
jle
cs
aam
icebp
add
rorl
xchg
or
clc
push
mov
sbb
popf
mov
or
jbe
dec
loopne
push
jle
xor
ss
fwait
or
or
and
scas
cmp
xchg
jne
inc
in
jae
cld
dec
into
pop
mov
pop
jmp
mov
pop
or
testl
jnp
sbb
std
push
jmp
or
push
xchg
push
push
mov
std
lea
and
mov
sbb
mov
popa
mov
adc
jle
fstpl
mov
pusha
scas
jae
loopne
xchg
out
into
sbb
test
pop
call
sbb
jns
popf
sbb
jnp
int3
xor
cmp
popf
imul
ljmp
in
or
xchg
mov
das
dec
mov
pop
cmp
shll
idivl
sub
pop
lahf
jle
and
mov
xor
push
jmp
jge
out
pop
daa
in
mov
out
mov
and
stos
mov
std
push
sarl
std
aas
out
add
cli
sbb
mov
mov
test
lds
push
push
jmp
fidivl
mov
jmp
mov
into
mov
insb
push
pusha
pusha
mov
sbb
ficompl
inc
mov
je
dec
loope
outsl
xchg
mov
ret
repz
xchg
xchg
push
ds
aas
pop
out
es
and
add
cs
das
mov
jl
inc
scas
push
xor
or
jae
movsl
gs
and
xor
and
ja
dec
aad
xor
sub
inc
lret
std
cmp
jp
scas
inc
int3
clc
xor
jne,pn
daa
fimull
and
fs
cmp
and
js
in
setle
jp
dec
mov
pop
lret
bound
lret
jg
roll
imul
frstor
sub
inc
cmpsb
fistpll
sub
in
inc
out
xor
aaa
jmp
pop
and
shlb
cmp
pop
aam
jno
adc
mov
ret
frstor
xchg
test
cbtw
in
or
xchg
fiaddl
adc
dec
adc
pop
dec
cmp
push
inc
xchg
mov
pop
sahf
bound
push
stos
ret
fmul
or
add
push
jmp
and
lods
push
mov
mov
jno
lcall
add
stos
js
testl
sub
ljmp
int
outsl
fdivl
repnz
rcll
mov
mov
pop
repnz
mov
jns
or
das
pop
push
lods
movsb
push
js
add
lret
mov
xchg
sub
xchg
pusha
clc
add
shll
fstpt
inc
loope
xor
rclb
dec
loop
ret
outsb
add
repz
mull
jbe
mov
mov
stos
sbb
dec
pop
adc
cmp
dec
dec
in
sbb
lahf
mov
cmp
ljmp
adc
out
call
push
lods
icebp
cli
xchg
enter
push
jmp
je
sub
fmulp
ja
test
xchg
push
dec
shll
cmp
inc
jne
push
and
pop
xor
loopne
add
push
nop
repnz
mov
mov
sub
mov
lods
xchg
insl
sub
cwtl
insb
xchg
ljmp
sub
pushf
add
jge
mov
mov
inc
pushf
sbbb
out
dec
xchg
out
ret
inc
or
fs
mov
mov
xlat
cmp
call
stos
cmp
rorl
push
push
jae
aas
xor
push
pop
hlt
xchg
stc
nop
sbb
pop
scas
imul
xor
dec
mov
sbb
ljmp
jno
arpl
repz
test
test
enter
pop
das
sbb
repnz
sbb
ret
xchg
mov
mov
sbb
add
push
outsl
sbb
sti
or
int
loope
imul
add
shr
lods
add
mov
fsubs
inc
pop
xchg
jne
and
aam
mov
inc
hlt
mov
cmpsb
cmp
xchg
dec
mov
cmp
xchg
mulb
insl
movsl
xchg
loop
std
cli
xlat
outsb
and
das
test
mov
mov
lock
jno
cltd
bound
imul
popa
cld
inc
add
orl
mov
pushf
in
pop
xor
shlb
lahf
push
mov
sbb
loop
in
shll
stc
cltd
imul
xchg
sbb
jge
xchg
scas
out
fnstsw
jno
hlt
mov
ret
jnp
mov
pop
dec
xor
cltd
xor
stos
push
movsl
mov
aam
cwtl
mov
dec
add
repz
rcr
test
dec
out
mov
outsb
insb
adc
cmp
xchg
loope
lahf
cmp
loope
jl
jno
xchg
sub
dec
push
mov
subb
pop
shr
ds
xchg
test
insb
mov
xchg
push
movsl
xchg
xchg
icebp
mov
sbb
add
fs
loopne
mov
jb
pop
inc
movsb
dec
mov
add
mov
sub
insb
stc
aas
std
sub
mov
push
imul
inc
sub
push
jns
pop
stos
pop
lock
lret
mov
dec
les
imul
add
dec
mov
or
xor
jp
sub
inc
pusha
test
mov
ret
clc
ret
das
ljmp
push
xlat
mov
sbb
sbb
dec
loope
and
pop
sbbl
and
jle
inc
mov
inc
gs
push
jno
int
mov
fildll
xchg
sbb
pop
adc
fidivrl
jbe
push
rol
dec
out
popa
outsl
rcll
imul
nop
mov
fisttps
dec
fistpl
mov
mov
cmp
fiaddl
push
sub
jb
dec
xchg
sbb
pop
imul
sbb
mov
frstor
xchg
xchg
inc
xor
bound
mov
sbb
sbb
lods
add
pushf
imul
mov
pop
mov
cmpsb
cli
jo
xchg
jnp
pop
push
inc
lret
subl
dec
sub
stc
mov
dec
pusha
mov
xchg
pop
sbb
mov
sub
inc
sbb
out
cld
icebp
mov
clc
js
jo
iret
cmp
das
cwtl
fsubl
and
pushf
imul
mov
push
inc
lods
and
rol
inc
xor
js
adc
pushf
jbe
in
jle
mov
mov
adc
and
inc
or
mov
clc
xchg
sub
fs
sub
push
jbe
mov
pop
inc
pop
xor
ljmp
xor
pop
scas
pop
lahf
mov
sbb
jl
jb
adc
mov
test
inc
xchg
fneni(8087
gs
xchg
add
ljmp
jae
push
movsl
xor
jge
mov
add
jo
fsubrl
adc
cmpsb
imul
loopne
mov
ret
add
mov
mov
idivl
std
lret
mov
mov
inc
sub
dec
into
movsb
mov
mov
test
je
fadds
out
fidivrl
mov
mov
imul
iret
inc
imul
into
fisubrl
lret
das
mov
add
stos
test
mov
jg
sbb
jge
ja
mov
fwait
sti
xchg
scas
jb
clc
mov
mov
shrl
jne
lret
popa
fs
xchg
jle
add
mov
pop
add
inc
es
pop
fs
test
aad
dec
mov
jecxz
mov
je
ds
inc
adc
cmp
insb
mov
es
and
test
inc
popa
sbb
aaa
cwtl
jae
add
adc
sti
jbe
jmp
ret
cmc
mov
imul
hlt
adc
cmp
push
fstpt
fcmovb
negl
shll
shlb
jno
ss
xor
rcll
push
mov
push
xor
rclb
and
sbbb
pop
mov
add
cs
fstp
sub
test
stc
test
mov
outsb
inc
lods
fcmovnbe
push
xlat
rcrb
hlt
dec
outsl
mov
shrb
movsl
out
push
scas
loope
ja
cmp
stos
mov
lds
inc
clc
std
out
loope
add
jns
shll
movsl
push
icebp
add
adc
pop
mov
sbb
out
add
sti
inc
or
enter
sbb
xchg
and
mov
xchg
jp
push
jg
aaa
or
ret
adc
std
adc
push
or
and
sbb
fiadds
mov
subb
inc
push
jbe
test
popa
inc
cwtl
sbb
outsl
adc
jae
cli
and
sbb
iret
inc
test
nop
push
inc
sub
in
arpl
inc
or
lcall
mov
shll
shlb
push
cmpsl
dec
cmpsb
int
faddl
das
and
popa
inc
push
inc
xorb
enter
repz
lret
ret
and
stos
iret
xchg
scas
clc
or
idiv
test
or
ret
std
aam
sub
data16
sub
mov
cmpb
and
addr16
lret
pop
inc
inc
push
inc
push
xlat
test
dec
pop
andl
mov
dec
pop
xchg
cld
inc
push
xor
ss
or
inc
adc
ret
fsubr
out
xor
pop
mov
movsl
pop
pop
stos
jmp
jg
inc
jb
clc
cmpsl
cmp
loopne
cmpsl
dec
or
sub
icebp
scas
mov
popaw
jp
lret
testb
adc
loop
or
ss
in
xchg
ljmp
das
scas
sbb
xor
push
andl
fistpl
shlb
test
imul
add
mov
insl
or
scas
fldcw
adc
fistpll
xchg
and
stos
jbe
sahf
push
in
inc
jl
xor
inc
sahf
int3
mov
dec
pop
xor
js
xchg
insb
mov
repz
mov
and
push
pusha
sbb
mov
jp
loopne
aaa
push
push
sub
adc
add
mov
cltd
scas
mov
cmc
mov
testb
and
int
mov
and
or
pusha
ljmp
mov
notb
das
push
xlat
aad
xor
mov
jae
scas
pop
xor
pop
jg
mov
popf
sub
xchg
jmp
fldt
nop
daa
pop
test
ds
imul
int
mov
jo
test
adc
ja
inc
lods
loop
cmp
lret
aad
add
push
or
mov
sub
xchg
jno
push
and
xchg
out
push
add
iret
sbb
pop
pop
lds
push
cltd
fbstp
inc
das
lods
iret
loopne
ret
rcll
pop
lock
pop
jg
add
inc
imul
in
in
je
stc
test
xor
fstl
stos
push
and
pop
popa
xor
ja
and
out
push
mov
adc
jecxz
mov
js
xor
jae
mov
jmp
aam
jnp
xchg
mov
inc
fcomps
xchg
xchg
gs
fdivl
insb
lcall
mov
push
mov
push
pop
jae
test
cmp
aaa
jmp
mov
loope
adc
stos
xor
dec
inc
and
lea
mov
jnp
push
mov
xchg
mov
lret
pop
repz
sub
je
inc
mov
pop
testl
mov
push
xor
cmp
decl
cli
sub
out
ljmp
inc
movd
push
mov
jo
bnd
test
adc
inc
add
jl
and
inc
in
xor
cmpl
dec
push
cltd
pusha
fsub
push
inc
dec
jbe
push
rcl
inc
pop
add
xchg
and
xor
test
fistps
aas
push
cmpl
jno
lds
into
cmp
push
xchg
pop
rorl
push
add
fisubl
and
scas
push
dec
sbb
test
pop
fsts
lock
lret
shl
ret
lcall
dec
les
jo
fcmovnbe
test
imul
ljmp
pop
fstpt
xchg
out
jg
xchg
cs
and
sub
pop
scas
lods
mov
xor
in
lret
xchg
lds
xchg
xchg
lcall
xor
std
roll
test
mov
gs
inc
xchg
repz
out
enter
pushf
or
pop
cmp
xor
cmp
or
pop
imulb
mov
jge
stc
test
pop
lods
dec
repz
sub
jb
popa
and
dec
jbe
push
push
dec
cmp
push
in
mov
test
aad
cwtl
or
movsb
cmp
pop
or
int
ror
repz
icebp
add
nop
xor
xchg
push
test
test
imul
jl
xorl
jns
test
jle
dec
push
xchg
sub
mov
and
fcom
mov
jmp
or
mov
clc
imul
shrl
dec
and
or
mov
jg
repnz
and
add
cmpsl
push
lea
xor
jge
fistl
mov
xor
jecxz
ja
in
orb
arpl
or
ss
pop
jns
sbb
mov
ret
pop
aad
das
ret
cwtl
dec
negb
stos
mov
vunpcklps
jg
pop
dec
mov
movsl
mov
xor
or
dec
mov
es
jo
sbb
jne
sbbb
ret
dec
enter
test
stos
and
mov
ja
insl
out
xchg
adc
pop
pop
xchg
push
sub
shrl
loopne
adc
mov
insb
sbb
popf
mov
movsb
cmp
mov
aad
test
mov
in
cmpsl
idivl
push
test
cmp
push
out
shll
and
or
pushf
or
and
icebp
movsb
push
dec
sub
inc
pop
insb
loopne
pop
pushf
int
sub
loope
leave
or
in
lret
fistpll
js
pop
int
push
out
xchg
aas
lret
add
es
jo
adc
push
rolb
cmp
adc
aam
jge
xchg
xchg
mov
lret
sbb
mov
rol
test
push
adc
andl
outsl
std
jns
fcmove
pop
xchg
pop
jp
push
mov
sbb
dec
insl
bound
xchg
mov
pop
jae
out
mov
lea
sub
insl
xor
imul
mov
repz
hlt
pop
push
push
xchg
ds
dec
aad
push
cmc
lds
scas
push
mov
or
imul
mov
scas
mov
cld
dec
rorb
mov
out
cltd
xchg
sarl
jecxz
jo
stc
sbb
mov
inc
iret
fistl
lea
adc
dec
jnp
shlb
push
push
movl
and
mov
mov
sbb
jl
sti
push
add
sbb
adc
or
push
pop
lock
xchg
mov
cmp
call
repz
fistps
test
cmp
push
inc
lret
divl
xchg
sbb
xchg
pop
jge
mov
adc
ljmp
loopne
orb
scas
cmp
mov
insl
xor
mov
sub
outsb
jl
dec
xchg
stos
xchg
fstpt
mov
and
push
dec
push
mov
mov
mov
push
test
mov
cmpl
or
fcmovu
data16
or
push
lcall
stc
je
add
inc
orb
pop
add
shrb
aas
xor
cli
gs
mov
cwtl
sbb
cmp
inc
mov
mov
js
mov
dec
push
cmp
jb
cmpsl
sbb
sbb
adc
fistpl
or
imul
cmp
mov
rcrl
add
push
push
xor
das
test
sahf
lret
cld
mov
shlb
in
iret
sbb
in
fists
push
and
shll
dec
popa
pop
sbb
ja
lock
fiaddl
adc
cmp
mov
cld
outsl
lods
repnz
mov
fcoms
mov
cmp
loop
pop
cmc
popf
sub
jl
arpl
xlat
cmp
jne
xchg
lds
lahf
push
inc
les
jns
or
out
push
inc
repnz
pop
jbe
push
test
mov
pusha
adc
or
repz
imul
mov
stc
pop
mov
add
das
ja
inc
or
je
daa
lcall
or
ljmp
push
mov
sbb
and
adc
fstpt
push
rorb
in
xorb
imul
rorl
test
outsl
std
sbb
sub
rcrb
cltd
xor
or
jmp
out
sti
sbb
mov
xchg
int
xor
std
movsl
push
jno
cli
movsb
jno
push
inc
push
add
sti
sbb
das
stos
inc
pop
dec
mov
call
out
jp
pop
sbb
rcl
push
and
sub
sahf
mov
push
test
ljmp
mov
push
sbb
sbb
sahf
mov
or
mov
lret
mov
jecxz
fwait
jne
jne,pt
xchg
xchg
sbb
cld
cmp
test
je
jae
mov
fwait
or
popa
jns
xchg
into
into
das
or
and
lcall
inc
pop
and
jecxz
pop
inc
xor
dec
outsb
jle
cmp
jl
or
xchg
cmp
inc
jp
adc
xchg
ja
jecxz
shl
xor
push
dec
cli
adc
mov
int3
sbb
shrl
push
dec
testb
cmp
cld
or
fs
xor
cmp
in
mov
pop
lcall
lods
add
xor
mov
leave
ret
ficoms
popf
in
adc
adc
xchg
pop
clc
ja
cmp
push
sub
jecxz
subb
mov
xchg
jmp
es
ss
dec
out
insl
pop
sub
mov
pop
in
fnstenv
ja
push
frstor
push
lods
push
cld
addb
inc
cmpsl
push
pop
and
xchg
push
inc
ljmp
data16
or
cld
mov
jne
xor
ret
inc
inc
fiaddl
mov
lretw
cmp
movsb
mov
cs
popa
mov
loope
pop
add
sbb
push
mov
xchg
inc
fldl
dec
xchg
sub
inc
mov
jbe
push
jmp
rcl
jge
jae
jbe
cs
int
sub
push
in
or
lret
inc
aaa
push
sti
std
aam
dec
mov
addl
push
sahf
das
int3
int
mov
pop
in
decb
iret
adc
pop
or
iret
and
inc
cld
jnp
test
fadd
push
cld
push
cmp
ret
inc
testb
and
rorl
mov
movsb
pop
adc
sahf
mov
inc
shrb
mov
mov
xor
and
inc
negb
mov
pop
mov
pop
xchg
mov
push
jmp
test
hlt
cmpsb
in
pushf
dec
jg
mov
jno
push
scas
mov
xchg
std
add
aaa
fistpl
incl
cli
mov
mov
out
daa
outsb
cmpsb
pop
jecxz
movsl
jno
add
mov
xorb
pop
lods
xchg
mov
movsl
mov
xchg
cmp
jae
fisubs
xchg
bound
mov
cmc
lahf
mov
mov
lahf
outsl
out
dec
icebp
insb
popa
dec
cmpsb
push
fsubrs
sbb
into
in
mov
lret
cmp
stos
xchg
mov
leave
pop
insl
jp
cmpsl
pop
mov
out
sub
test
and
out
in
pop
fmul
lods
outsl
push
push
sarb
stos
jns
jae
movsl
pusha
mov
xor
shll
add
add
inc
in
mov
add
imul
imul
add
jo
sti
push
fcoms
cmp
push
fwait
inc
arpl
jge
cld
dec
dec
lods
outsl
push
mov
nop
cmp
fadds
sub
push
inc
adcb
jmp
iret
fmull
ret
popa
push
rorl
shl
jg
push
daa
je
outsb
rcrl
loop
insb
mov
ss
out
jo
mov
nop
loop
push
mov
xor
jne
ficompl
cmp
fs
cltd
jmp
xchg
ja
pushf
push
setnp
pop
cmp
mov
push
jl
cmc
push
cmp
test
pop
fldenv
xlat
cwtl
stc
jecxz
psadbw
inc
add
pop
in
dec
sbb
xor
shr
jo
dec
pop
sbb
sti
pop
mov
leave
push
hlt
outsl
loop
shlb
test
mov
sbb
rcrb
mov
dec
add
in
clc
sbb
loopne
inc
cmp
dec
ljmp
ljmp
add
or
adc
aad
mov
sbb
dec
in
int
in
mov
pop
in
lods
inc
xchg
add
lods
dec
and
pop
push
mov
jge
out
mov
lds
xlat
cmp
pop
add
xchg
cmp
push
jne
pop
ds
inc
lods
testl
inc
add
cli
mov
in
add
out
jo
pop
jb
xchg
cmpsl
shlb
in
fs
pop
mov
xor
data16
enter
jo
pop
xchg
in
cltd
popf
sub
pop
lahf
xor
pop
dec
push
cli
xchg
enter
aad
gs
dec
fyl2x
andl
popf
cmp
jmp
and
cmpsb
scas
adc
jo
jecxz
pop
jne
xor
xchg
mov
or
inc
sub
jae
dec
enter
jg
adc
incb
pop
dec
jecxz
jg
cs
imul
sar
inc
sub
or
call
lcall
push
mov
sbb
daa
enter
cmpsl
cmp
out
scas
js
ljmp
jp
mov
sahf
fdivl
push
js
xchg
ret
inc
push
jbe
popa
xchg
xchg
ds
xlat
sahf
jnp
jmp
aas
popa
add
push
mov
ljmp
mov
mov
sub
popf
insl
daa
xor
jle
xor
dec
sbbl
push
push
imul
xchg
das
lahf
xor
loop
mov
loopne
dec
jle
imul
inc
pop
lea
call
bound
inc
jg
mov
or
ja
popf
test
sub
test
xchg
xorb
mov
rcrb
pop
add
and
jns
lds
mov
pop
push
pushf
xchg
cltd
cld
sbb
in
inc
nop
xchg
fildl
aam
pop
xorl
pusha
add
and
out
test
pop
xor
pop
lret
arpl
mov
mov
nop
ror
and
jb
aam
cmpsl
push
aas
lea
cmp
test
jbe
push
xchg
pop
push
test
fmul
xor
mov
cwtl
mov
xchg
jmp
and
sbb
inc
ds
adc
jge
xchg
xchg
mov
mov
push
sbb
push
and
pop
sarb
call
mov
iret
xchg
lock
xor
jne
jno
jo
sti
xor
push
sbb
mov
lret
jl
jl
stos
sub
add
pop
int
cwtl
push
mov
and
imul
loopne
inc
fadd
int
ret
data16
shrb
mov
mov
sub
adc
daa
cmp
dec
iret
adc
jmp
mov
mov
xor
xchg
cmp
push
mov
icebp
leave
scas
int
pop
inc
es
cmp
je
test
xchg
dec
lds
test
lahf
jp
test
jmp
sub
pop
sahf
test
sbb
and
pop
jb
jecxz
pop
xor
lock
xchg
and
outsb
add
std
pushf
stos
and
mov
pop
inc
repz
sbb
and
cltd
into
jo
lret
scas
inc
lods
aaa
push
out
into
int
into
loop
xchg
clc
or
mov
das
addb
add
jecxz
push
pop
in
push
std
les
shll
dec
lds
rcrb
dec
cld
aas
shrl
push
pop
repnz
popa
daa
mov
mov
icebp
int3
shr
fs
lea
xor
mov
scas
test
or
inc
ss
push
pop
jle
mov
dec
sti
shlb
mov
mov
iret
inc
sbb
rcl
in
popf
xor
ljmp
insl
inc
push
and
mov
mov
push
inc
cmp
mov
insl
das
in
sbb
mov
in
and
dec
stos
add
aad
jb
push
sbb
fwait
mov
add
jl
or
inc
mov
add
fistpl
dec
jno
xlat
arpl
ret
pop
and
push
icebp
cmp
cs
adc
sub
mov
sbb
push
inc
adc
aad
push
fsubr
stos
push
pop
hlt
lods
fidivs
scas
cld
jae
aas
movsl
fldl
mov
sbbb
xchg
outsl
shrl
and
insl
pushf
push
lods
jmp
or
cmp
hlt
push
adc
lret
int3
push
xor
out
jmp
xor
lret
pop
mov
mull
inc
xchg
out
roll
daa
int
testw
and
or
xchg
sbb
pop
pop
fcomps
jnp
sbb
icebp
adc
inc
adc
push
mov
xchg
and
jb
cmp
out
jo
cmpb
jbe
out
lcall
rolb
das
xorb
jne
mov
xor
out
mov
mov
test
add
imul
jbe
mov
pusha
sbb
dec
adc
cwtl
pop
repz
xchg
pop
pop
jp
stos
add
icebp
mov
bound
ret
and
dec
scas
pop
in
mov
in
push
push
mov
neg
stos
jmp
enter
sti
xor
test
adcb
sbb
dec
hlt
mov
les
jae
out
add
add
mov
jne
and
shr
pushl
cmp
xchg
aad
mov
mov
gs
jmp
fsts
push
and
in
scas
pop
mov
arpl
inc
sub
inc
inc
inc
frstor
dec
fs
insb
pop
dec
fisubrs
mov
cmpsl
aas
test
sub
inc
lods
ljmp
cltd
cmp
jbe
fiadds
or
es
popf
sbb
and
cmp
jo
js
cmp
int3
mov
das
adc
mov
jecxz
add
and
mov
pop
lret
jae
add
cmp
pop
and
add
pop
cmp
mov
xchg
pop
or
or
in
idivl
mov
inc
aas
aam
and
enter
add
jl
mov
sarl
jecxz
pop
jb
dec
into
fdivrl
insb
pop
mov
arpl
mov
lods
les
nop
sbb
arpl
inc
add
mov
mov
push
mov
dec
invd
xchg
icebp
inc
test
and
or
pop
insb
addl
test
das
jg
ljmp
xchg
aam
jb
test
inc
scas
pusha
xchg
call
addb
push
push
sub
mov
mov
pop
imul
imul
push
jmp
in
sbb
push
lea
mov
cltd
out
ds
loop
rolb
test
or
mov
in
inc
lods
inc
or
dec
rolb
scas
lret
mov
sub
dec
xor
mov
out
jge
loope
sub
inc
push
mov
sbb
icebp
pop
xchg
ret
and
push
cmpsl
push
sbb
sub
ss
addb
xchg
cld
push
clc
pop
rcrl
pop
xlat
cs
mov
test
cmp
andl
roll
push
sbb
cmpb
sahf
mov
mov
inc
bound
push
fsubrs
or
cmpsb
dec
cmc
xchg
mov
cmp
pop
loop
sub
mov
mov
mov
sbb
mov
cmp
xlat
pop
jo
pop
jns
xchg
sub
cwtl
inc
mulb
cmp
mov
das
aad
dec
inc
cmpsb
aad
insl
jge
clc
adc
xor
pop
sub
pushf
mov
into
call
aam
push
inc
adc
cmc
aas
adc
jecxz
cmpsb
ret
push
out
push
int
xor
loopne
pop
adc
aad
ficomps
inc
dec
and
jl
pusha
lahf
fnsave
insb
inc
imul
inc
call
sti
and
outsb
aam
movl
lret
lret
adc
inc
stos
gs
inc
jmp
xchg
fsubl
dec
push
mov
sub
lret
cmp
cmp
push
jecxz
divb
cmp
inc
hlt
ret
dec
es
test
cli
mov
jmp
mov
adc
aas
xchg
mov
aad
outsb
sbbl
enter
and
add
addl
sbb
or
push
add
mov
movsl
add
adc
cmp
or
out
icebp
mov
xchg
mov
xchg
lahf
mov
loope
into
sbbl
push
xor
xchg
lcall
fwait
mov
int3
mov
addr16
jo
fidivrl
sbb
jno
or
ds
sbb
jmp
hlt
lds
js
mov
ds
movsb
pop
idivb
nop
pusha
das
mov
idiv
inc
shlb
in
inc
mov
jmp
sbb
jo
lock
pushf
sub
sbb
xorb
movsb
in
mov
test
inc
add
xor
mov
daa
mov
xchg
and
pop
jno
jecxz
xlat
fwait
out
xchg
fisubs
lahf
push
push
inc
out
int3
pop
adc
pop
hlt
lods
sub
fstps
mov
stos
adc
cmpsl
lds
aad
stc
adc
or
outsl
js
mov
dec
xchg
jne
lods
mov
jmp
scas
inc
scas
pop
and
lahf
adc
ds
sub
aad
mov
or
les
into
mov
xorb
gs
leave
sbb
xchg
arpl
pusha
jp
enter
dec
repnz
cmpsb
cs
mov
sbb
cld
push
push
mov
test
push
xor
xlat
mov
sub
test
rcll
pop
out
cmpsb
loop
adc
aas
mov
dec
mov
sbb
inc
fdivrp
sbb
push
dec
xchg
gs
mov
pop
mov
or
lret
andb
pop
out
xchg
jecxz
shr
inc
add
mov
add
scas
add
adc
lea
aaa
flds
dec
jg
outsl
fidivrl
cmc
icebp
mov
stos
lods
pop
cltd
and
adcb
pop
fadds
mov
adc
lock
push
push
bnd
and
inc
jmp
add
xlat
mov
aam
xchg
push
sbb
stos
push
xchg
fdivrl
inc
mov
xchg
sub
xchg
test
int3
mov
mov
and
cmp
scas
inc
arpl
push
loop
cmp
les
mov
add
mov
mov
or
stos
sub
int
shl
out
jne
lock
xchg
aam
popf
jb
iret
test
mov
sbbl
sub
ds
cld
stos
jbe
jl
sti
push
loopne
jg
xor
cmp
xchg
inc
xchg
jmp
cmpsl
fdivs
ljmp
xor
roll
out
fmull
sub
gs
imul
mov
xor
push
jmp
mov
aad
icebp
ficoml
arpl
pop
je
sbbl
shlb
fwait
add
pop
scas
inc
xchg
xor
push
push
inc
addr16
mov
push
and
ret
pop
hlt
imul
lcall
stos
jae
loop
and
sub
imul
dec
cs
in
mov
test
test
mov
push
clc
rcrl
mov
lret
jmp
push
dec
xchg
mov
inc
xor
add
xchg
inc
leave
mov
ss
adc
adc
mov
cmpsb
xorb
outsl
into
and
lock
shll
inc
gs
fldt
hlt
cli
stos
testl
xor
loopne
repnz
pop
popa
and
cmp
xor
mov
inc
iret
xchg
cltd
mov
xor
and
test
inc
push
imull
adc
arpl
pop
stos
fldl
decb
aam
idivl
xchg
movsb
stos
inc
add
xchg
jmp
movsb
adc
pop
mov
aad
aaa
outsl
dec
pop
outsl
std
cmc
mov
insb
mov
xchg
cmp
dec
sub
push
scas
data16
and
lods
test
movsl
aad
and
sbbb
iret
sub
fisttpll
cwtl
sub
dec
add
mov
cmp
in
add
add
adc
out
scas
mov
push
xchg
adc
aas
test
pop
rolb
sbb
cwtl
pop
movsb
fnsave
lods
jmp
iret
xlat
and
aam
int
sbb
rcll
push
fidivrl
enter
popa
clc
pop
xor
das
inc
cmp
cmp
loop
fwait
lcall
out
inc
xacquire
pop
xchg
sbb
movups
sbb
mov
cmc
js
pop
jno
cs
mov
movsl
mov
popf
cmpsl
inc
sbb
das
repz
shrl
rcrl
lea
mov
add
repnz
sti
hlt
xchg
ret
cmp
pop
call
push
arpl
dec
xor
cmc
and
jg
into
lret
data16
data16
fimuls
pop
adc
push
adc
xlat
popa
inc
mov
addr16
leave
or
sub
mov
mov
addl
inc
add
sub
xchg
pop
testl
dec
clc
sbb
enter
iret
icebp
movsl
jge
enter
sub
sbb
in
or
sub
inc
dec
scas
lcall
push
or
les
cmpsb
lea
repnz
and
ss
leave
clc
fimuls
cmpsb
adc
mov
pushl
cmp
mov
adc
lods
pop
cmp
sub
and
and
lret
fstps
das
jb
adc
cmc
jae
mov
lcall
pop
clc
and
jb
jmp
imul
sti
jp
out
cltd
adc
fimuls
bswap
xchg
cs
cmc
in
xchg
icebp
or
xchg
es
add
add
mov
clc
pop
xor
and
orb
xor
cld
jle
hlt
cmp
push
sub
sar
cmp
insl
sbb
aad
subl
hlt
or
sbb
jno
mov
js
dec
pusha
inc
mov
popa
fs
sub
ret
jg
xchg
mov
pop
sbbb
enter
hlt
movsb
cmp
sbb
xchg
xor
adc
cltd
push
mov
fbld
and
popa
jl
pop
push
push
cltd
jg,pn
test
rorl
mov
adcl
movsl
mov
mov
test
adc
aas
sub
cmp
jns
shrl
or
ror
pop
xlat
loope
adc
idiv
sub
pop
mov
or
mov
and
shrb
mov
mov
ja
cld
aaa
jb
push
push
xor
jne
sub
sub
fisubs
inc
or
jns
js
out
push
push
sahf
xor
mov
pop
loopne
out
js
clc
cmp
or
and
or
loop
sahf
aad
ds
fwait
outsl
inc
dec
in
or
mov
into
cmc
mov
xlat
popl
test
adc
pop
xchg
in
icebp
xor
fsts
das
lds
push
dec
cmp
out
pop
sbb
leave
in
or
or
notb
mov
ror
jne
std
inc
fs
stos
sub
jmp
sti
sub
push
in
orb
or
insb
mov
push
sub
xor
sar
xchg
cmpb
lods
jmp
fstpl
lock
adc
sub
mov
jmp
mov
push
sub
ss
fwait
jno
push
push
add
xchg
shll
outsb
inc
mov
push
pop
sbbb
ficoms
cmp
loop
push
pop
out
add
sub
popf
jo
cmp
jecxz
inc
sbb
adc
shrl
hlt
sub
lahf
notl
shll
push
jb
push
pop
data16
xor
dec
mov
shll
mov
mov
sar
adc
sbb
repz
mov
jecxz
push
out
loop
and
inc
inc
aaa
sub
rorb
xchg
stc
lock
fwait
sbb
dec
cmp
xchg
rcr
inc
fcoms
mov
testl
cld
shlb
popa
push
push
xchg
or
lcall
cmpsl
or
pop
xchg
push
adc
or
mov
cs
mov
xor
outsl
rorl
mov
cmp
add
sub
sahf
sbb
mov
sub
scas
pop
repnz
jp
mov
gs
mov
call
lock
cmp
xor
jmp
jecxz
mov
jnp
or
aas
jno
in
bound
push
insb
ret
out
sti
push
push
push
insl
pop
decb
pop
das
lock
subb
daa
or
cmpsl
mov
push
mov
jb
cmp
jp
je
mov
or
mov
jle
jl
or
mov
xchg
sub
sbb
daa
xchg
pop
jb
cmp
insl
jne
cmp
fiaddl
enter
jae
push
and
rclb
outsb
jl
push
cwtl
inc
movl
push
pop
xchg
adc
stos
shlb
mov
adc
aaa
or
ss
jecxz
mov
jg
shrl
push
cmp
adc
lahf
pop
bound
mov
fcompl
dec
mov
push
jecxz
adc
mov
call
inc
cmp
lea
xchg
adc
xchg
mov
jle
add
mov
mov
popl
jge
pop
or
icebp
shl
jl
mov
rol
add
add
or
arpl
push
adc
push
adc
out
xor
movsl
sub
dec
lahf
pop
mov
push
sahf
cmp
leave
mov
push
dec
and
std
xor
dec
dec
push
shll
pushf
push
test
jge
or
xor
mov
add
and
mov
mov
scas
dec
cmp
inc
push
push
inc
inc
cli
push
jmp
push
aas
ds
fsubrl
adc
or
in
int3
ds
sahf
mov
pusha
lret
movsb
xchg
sub
sub
mov
cmp
hlt
and
lret
dec
movsb
jecxz
in
shrl
mov
outsb
adc
test
mov
jmp
andl
loop
lcall
xor
imul
lock
lret
addr16
add
push
xor
jne
inc
mov
movb
int3
movsl
cmc
mov
fcoml
ljmp
or
mov
shlb
jae
sahf
jg
adcl
inc
inc
jecxz
lahf
sbb
push
call
stos
clc
ds
inc
in
ljmp
subl
adc
int
lea
mov
pop
jge
mov
jg
mov
jge
cmpb
add
pop
pushf
out
jmp
aas
aad
cmp
out
pop
das
mov
push
dec
pop
sbb
mov
dec
jae
imulb
mov
pop
outsb
push
test
inc
pushf
mov
push
sbb
mov
push
outsl
jp
enter
divb
stos
pop
lahf
jb
movntq
out
and
stos
push
insb
jle
repnz
mov
je
cmp
sbb
loopne
sbb
cltd
rolb
cs
out
mov
sbb
xor
js
cs
sub
in
test
lcall
daa
mov
sub
aad
pop
pop
movsb
lods
add
mov
aad
insl
cmp
pop
clc
sub
push
frstors
push
fidivs
and
or
jbe
push
xchg
popf
and
js
popa
lods
inc
aam
js
jl
sbb
mov
je
cmp
cli
and
and
insb
mov
leave
sbb
sbb
or
mov
sti
cltd
mov
stc
inc
xchg
add
inc
sub
adc
add
add
jb
adc
int
lahf
pop
loop
inc
push
xchg
call
cltd
arpl
xchg
mov
cmp
bnd
lret
add
inc
push
outsl
mov
add
gs
and
lods
pop
stos
js
push
popf
sub
sub
xor
cmc
mov
sub
push
xor
hlt
stos
inc
movsl
inc
cmp
aas
pushl
sbb
mull
sbbl
or
xrelease
mov
dec
shll
adc
xor
scas
lahf
testl
cltd
out
cwtl
stos
xchg
dec
mov
xlat
insb
add
dec
dec
test
jg
sub
push
imul
and
mov
cmp
cli
je
jae
jmp
inc
or
mov
loop
add
rcrl
das
mov
add
sub
push
jae
stc
sbb
int
pop
movsl
cmp
or
arpl
add
jg
push
add
sub
pop
js
js
sub
jl
lahf
and
in
je
mov
and
shll
lea
mov
test
ret
ret
into
gs
mov
xor
mov
scas
xchg
cmp
pusha
sbb
add
aaa
xchg
mov
loope
pop
repnz
and
push
mov
mov
mov
sbb
lods
and
push
push
shlb
subb
dec
xchg
dec
popa
clc
jg
sub
dec
jg
jg
dec
add
dec
iret
or
jbe
popa
add
mov
xchg
mov
adc
xchg
out
stc
lds
add
pavgw
mov
and
xor
push
popl
xchg
or
adc
popa
mov
lds
dec
add
mov
ja
jb
cmp
cmpsb
jnp
add
add
dec
sbb
mov
icebp
in
push
xchg
cmp
leave
call
cmp
fisttpll
stos
movsb
pop
pushf
sub
push
stc
mulb
inc
fistl
xor
jle
dec
or
std
jmp
insl
sbb
xor
push
cmp
sbb
or
jl
mov
xlat
cmpsb
push
lods
mov
dec
inc
pop
jl
push
and
int
sub
mov
pop
jno
sbb
fcmovne
insl
xor
ljmp
push
aas
aad
inc
push
pop
xor
xchg
and
shlb
xchg
sbbb
cmp
fucom
rorb
pop
test
push
insl
pop
mov
in
or
dec
inc
mov
das
scas
aas
push
out
cwtl
adc
or
and
cmp
xchg
push
inc
hlt
hlt
sarl
cmc
inc
shr
stc
mov
pop
icebp
bound
js
enter
inc
outsb
push
or
jns
repnz
jns
jle
fisubrl
mov
mov
jg
shlb
pop
sub
scas
jbe
sbb
int3
jg
sti
or
mov
and
xchg
adc
lods
rclb
scas
or
ljmp
jno
pop
mov
or
stos
and
insl
sbb
inc
outsb
push
pusha
xor
xchg
sub
mov
fisubrs
insb
xchg
movsb
call
mov
xor
scas
inc
ret
add
lahf
push
cmp
out
inc
dec
inc
dec
mov
jae
ss
add
out
push
sbb
bound
sub
xchg
pop
int
movsl
ds
dec
mov
fsub
cmc
pop
push
mov
test
mov
ret
movsl
mov
je
mov
jl
add
lret
and
xor
mov
xchg
js
repnz
add
bound
push
mov
shr
hlt
cmpb
adc
test
pusha
xchg
sub
and
loope
int
mov
jmp
or
out
lea
lods
pop
push
mov
fisttpl
pushf
sarb
aad
ljmp
fidivrl
mov
jo
cmp
mov
sbb
mov
mov
adc
xchg
sub
shrl
cmpsb
mov
pop
je
shrl
daa
scas
enter
mov
sbbl
mov
iret
bound
jge
enter
outsl
pop
dec
loope
mov
jmp
dec
pop
inc
fildl
mov
lret
stc
xchg
stos
push
sahf
jge
rcrb
adc
pop
pushf
paddusb
and
dec
and
imul
aam
mov
arpl
fnsave
dec
adc
repnz
xchg
and
out
dec
and
movb
add
and
addr16
mov
into
jg
push
fwait
add
sbb
and
and
rorl
jl
jb
lcall
loop
aaa
or
daa
icebp
movsb
into
lret
cld
stos
cmp
fdivr
sub
jne
bound
sub
int
or
sahf
lds
pop
mov
mov
cmpsl
pushf
mov
bound
arpl
inc
fistpl
or
sub
in
jecxz
push
xor
rcl
push
pop
out
add
fimuls
push
dec
fldl
iret
lds
nop
jne
cmp
mov
lea
aam
push
pop
subb
inc
hlt
mov
mov
mov
ret
pusha
mov
lahf
fidivl
sub
sbb
mov
les
fcoml
or
loope
loopne
call
sub
pop
pop
imul
test
pop
add
lock
bound
cmpsb
dec
loope
and
mov
xchg
mov
sarl
sub
das
repnz
and
mov
add
sbb
and
cmpsb
pop
inc
pop
nop
enter
or
pop
scas
add
push
das
test
stos
shrl
xor
lods
enter
or
out
add
pusha
out
inc
jnp
pop
sub
mov
pop
out
sub
and
add
sahf
shl
iret
push
stos
cmp
add
cmp
fucomip
mov
jb
xor
mov
adc
jbe
xor
lods
movb
repnz
dec
in
push
mov
ja
testb
cwtl
add
inc
rcrb
clc
jo
push
ror
fs
addr16
cwtl
inc
in
test
cmp
xor
or
mov
push
insl
cmpsl
mov
scas
scas
sbb
xor
pop
pop
sbb
or
std
aaa
outsb
ljmp
inc
fmull
dec
pop
jnp
movsb
inc
mov
loopne
xor
cmp
ret
arpl
cmpl
fadd
rcrb
jge
pop
sbb
out
imul
pop
not
sarb
adc
adc
adc
xor
es
jns
mov
aam
adc
push
cmp
cmp
sbb
and
jns
cmpl
inc
fmuls
pop
out
sub
enter
rorb
pop
sti
popa
test
rclb
adcl
xchg
cmp
or
out
adc
lock
xchg
aaa
es
popfw
pop
xchg
adc
cmpsl
mov
addr16
push
dec
fistps
push
fisubrs
mov
je
add
gs
mov
push
iret
pop
aas
nop
fcmovne
jbe
clc
adc
stos
dec
loopne
pop
pop
dec
fdivl
mov
mov
imul
lock
pop
rorl
xor
iret
mov
push
fwait
xor
xor
jae
mov
pushf
jo
inc
inc
jmp
sahf
lods
sbb
fcmovnb
enter
add
mov
andps
fnstenv
lock
and
cld
repnz
pop
and
pop
add
jno
les
cmp
call
enter
imul
aaa
sub
lds
loope
adc
insl
adc
jmp
jne
xchg
adc
adc
mov
pop
and
jo
push
out
bound
jl
insb
mov
loopne
aas
mov
stc
mov
cli
aad
roll
cmp
pusha
aas
add
mov
pop
and
cltd
stos
bound
dec
sbb
scas
lods
out
in
mov
mov
pop
cli
sub
push
pop
testb
mov
xchg
and
lods
pusha
xchg
cli
pop
icebp
sub
pop
imul
jmp
jge
ficompl
pop
lods
mov
nop
xchg
dec
push
std
jo
call
repz
pop
cmp
or
les
and
rolb
push
xor
pop
repz
jns
insl
das
pop
icebp
or
loopne
aam
stos
fidivrl
rorl
fldl
out
stos
mov
ja
inc
pop
and
gs
mov
mov
pop
add
lret
fs
cmp
das
jmp
loop
sub
shll
cld
sbb
decb
mov
jnp
cmc
inc
xor
das
cwtl
cltd
xor
dec
or
mov
mov
xchg
jbe
test
jg
pop
movsb
movsl
mov
call
ret
cmp
inc
outsb
lfs
mov
xchg
sub
in
test
cmp
es
or
push
outsb
mov
aam
push
mov
inc
xchg
imul
fdivl
data16
in
lea
pop
int
inc
push
xchg
push
aas
inc
adc
or
mov
jo
xchg
mov
lret
xor
fld1
shll
out
xchg
sbb
imul
xchg
inc
jo
std
rcr
clc
xor
sets
lahf
xchg
push
mov
xor
push
je
leave
inc
sbb
and
mov
inc
test
addl
scas
push
movsl
loopne
mov
les
mov
xor
pop
sbbb
add
scas
xor
cmp
dec
testb
rclb
xor
and
pop
adcb
cmp
aad
in
add
xchg
xchg
addr16
jl
clc
sarl
and
jnp
mov
xchg
aaa
mov
lret
jle
jne
rcrb
call
xchg
sub
rorl
adc
pop
jne
push
jge
pop
insl
add
cld
psubq
cwtl
stos
push
mov
cmp
test
fmul
lea
insb
mov
dec
pusha
fldt
sbb
outsl
add
xchg
or
sub
fcomi
cmpsl
sub
sbb
xchg
cmpsl
cmc
inc
ds
sbb
insl
dec
pop
mov
mov
sbb
mov
ret
roll
leave
ffreep
test
popa
mul
movsl
inc
pop
sahf
shlb
jge
sahf
mov
call
jecxz
loopne
iret
std
rcrl
clc
stos
outsb
mov
std
jno
mov
push
inc
pop
mov
nop
or
and
aam
mov
imul
dec
adc
push
rclb
les
loop
add
test
jp
sbb
enter
jb
sub
or
push
cmpsl
stos
icebp
scas
push
cmpsb
ud2
lcall
in
sahf
sub
das
ja
in
add
inc
leave
es
out
hlt
ja
pop
gs
call
in
or
jns
lret
imul
loopne
ret
leave
lods
dec
shlb
jg
mov
mov
ljmp
ss
fistl
xlat
inc
mov
fldl
cmpsb
push
test
scas
mov
test
dec
jge
cld
vmwrite
fcoml
sarb
popf
lods
mov
pop
jns
sbb
mov
add
insb
adcb
lea
fistl
mov
xor
jbe
push
or
adc
or
or
push
out
in
pop
fucomp
sti
outsb
in
xlat
mov
lret
sbbl
and
xlat
dec
sub
lcall
int
or
mov
pop
loopne
cmp
push
out
movsb
and
xchg
sahf
outsb
adc
mov
mulb
xor
cmp
xchg
rcl
popa
sbb
mov
dec
icebp
mov
and
mov
clc
pop
lock
xchg
or
pusha
repz
push
cltd
outsb
mov
fidivs
xor
mov
jle
sti
shr
aad
cmpb
sub
push
test
sahf
jnp
push
nop
jge
cmp
jns
data16
inc
lods
jmp
mov
pop
divb
stc
xchg
mov
mov
fdivrs
je
xor
push
lods
daa
mov
aas
dec
and
mov
sub
leave
in
xor
movsb
or
xchg
nop
outsb
jb
shll
test
enter
aas
sbb
push
call
xchg
push
jmp
jns
mov
pusha
jbe
xlat
cmp
lahf
lret
mov
rcrl
jae
push
popf
stos
xchg
dec
mov
inc
push
mov
jle
and
sbb
mov
jae
pop
push
or
and
dec
das
test
or
or
or
mov
and
aas
ret
das
inc
mov
out
and
pop
aaa
cmp
jg
mov
adc
das
mov
hlt
inc
dec
ds
fisttpl
mov
test
imul
dec
cltd
loope
cmp
jno
popa
orl
pop
pop
lock
jns
fsubrp
repz
lds
xchg
adc
cld
in
outsb
cmp
int
jo
cltd
ficompl
cmpsb
lock
cltd
clc
mov
daa
cs
sub
mov
icebp
icebp
jo
stos
add
pop
inc
mov
call
pop
les
popf
cmc
into
and
std
mov
mov
dec
mov
lahf
jne
les
shrl
adc
arpl
sbb
cmpl
orb
loope
jecxz
adc
loope
sbb
insb
out
cmp
jae
icebp
mov
movsb
xor
mov
out
mov
rcrl
pop
ret
mov
rcr
imul
lret
adc
pop
xchg
das
repnz
addl
push
xchg
dec
xor
xchg
jecxz
push
in
inc
push
into
out
arpl
pop
pop
cwtl
or
aam
adc
lcall
in
subl
out
xchg
cld
stos
movsb
pop
sbb
push
outsb
ljmp
jno
sub
jmp
in
mov
sub
aas
aad
dec
js
fwait
inc
pop
cmp
adc
jnp
sub
lods
movsl
jb
xchg
aad
cmc
add
jno
lret
and
cmp
call
dec
popa
ljmp
jp
shrb
adcb
int3
imul
imul
cmp
mov
jecxz
pop
xchg
jg
pop
call
sti
int3
or
addr16
sbb
lret
bound
jp
mov
fstl
sti
dec
sbb
pop
ja
out
cmp
jecxz
sbb
shll
sub
or
or
cld
and
mov
sbb
adc
cmp
sub
or
sub
in
cmp
imul
adc
cmpsb
sbb
jle
push
test
fimuls
cmp
fidivs
or
mov
or
in
push
cmp
mov
or
in
sub
xchg
pushf
insb
sahf
cwtl
cmpb
or
inc
mov
int
or
pop
or
mov
js
inc
aad
aad
popaw
adcl
dec
sbb
mov
cld
lds
xor
rcl
lods
xchg
mov
pusha
jle
inc
loope
shlb
lret
mov
xchg
imul
cmpsb
inc
je
mov
inc
cmp
pusha
es
mov
sbb
mov
mov
pop
xchg
and
and
mov
imul
insb
jl
pop
divl
dec
mov
clc
jg
xchg
mov
pusha
mov
xor
in
lods
sbb
adc
out
xchg
pop
fldenv
ficoml
fsubs
paddusw
sahf
incl
lahf
mov
sbb
scas
lahf
ss
daa
xchg
fcomps
pop
lahf
mov
rol
hlt
pop
repnz
mov
data16
jns
insl
in
in
pop
cwtl
push
jne
fs
in
testl
jmp
je
das
testl
test
dec
inc
std
aaa
adc
inc
mov
aaa
into
push
push
shlb
and
in
imul
fisubrl
mov
outsl
enter
add
scas
inc
mov
movsl
int3
movsb
adc
jnp
roll
js
push
movsb
pop
dec
bnd
dec
imul
fucomp
fiaddl
lcall
mov
mov
and
xchg
adc
in
push
inc
inc
icebp
cmpsb
ljmp
add
push
jp
outsb
mov
mov
lods
push
sahf
pop
subl
mov
je
mov
std
xchg
xchg
test
addr16
cli
rcrb
mov
pop
std
adc
jns,pn
shrb
in
and
cltd
cmpsl
xchg
add
repnz
ss
mov
add
mov
jb
mov
jae
push
or
cmc
loopne
xor
jp
mov
pusha
fbld
push
iret
mov
inc
test
inc
and
inc
mov
je
adc
popf
xchg
cltd
and
sarb
sub
out
imul
je
cmpsl
shll
test
pop
inc
sbb
lods
pop
and
mov
imul
push
mov
les
lret
outsb
inc
lods
insl
cs
jae
and
inc
mov
mov
adc
std
inc
rcrl
or
ljmp
xchg
cmp
test
in
sbb
movsb
dec
adc
lock
adc
xchg
mov
mov
or
push
cmp
test
xor
lret
jge
cmpsb
fisubrs
rcl
sbb
cmpsl
push
cltd
mov
sbb
lea
xlat
fucomp
cli
xchg
ficoms
repnz
add
scas
push
xchg
jle
into
xor
cmp
xlat
repz
push
mov
outsb
outsb
bound
fs
rol
xchg
mov
mov
push
xchg
int3
xor
cmp
sub
mov
jle
xor
fldl
aas
dec
mov
lds
xchg
push
jp
xchg
mov
pop
arpl
add
push
xchg
daa
adc
icebp
sahf
popf
hlt
dec
adc
ret
outsl
or
js
cmp
jbe
in
sub
sarl
sub
lahf
and
mov
lods
or
js
inc
fidivrs
pcmpgtd
add
jle
test
movsl
mov
sahf
andb
iret
fdiv
hlt
or
fnstenv
roll
bound
shll
xor
dec
add
pop
iret
jns
rcrl
xchg
adc
inc
adc
lds
mov
mov
enter
orb
rcll
xchg
or
andb
leave
mov
test
and
cmc
loopne
mov
dec
mov
pop
fsubl
inc
mov
or
sbbb
addr16
js
xchg
pop
pop
adc
push
push
orl
js
push
inc
mov
xor
dec
popf
push
inc
cltd
push
mov
test
movsl
sbb
fiadds
pop
and
push
lock
cmpsb
fistl
lret
cmp
and
pop
out
mov
gs
or
mov
shlb
push
sarl
cli
mov
mov
add
cmp
fistpll
dec
add
cmpsb
cmp
fwait
and
idiv
inc
xlat
jnp
cmc
cmp
mov
dec
adc
sub
cmp
pop
enter
jle
out
scas
aad
addl
xorb
xor
into
addl
int3
push
mov
and
sub
fidivrl
push
repz
inc
call
jecxz
das
loopne
add
push
repnz
sti
leave
sahf
cmpsb
jge
scas
std
jo
xorl
jne
add
in
subl
sub
xor
out
and
xchg
xchg
js
cmc
jb
xchg
xor
lods
fdivs
push
jno
jo
push
bound
mov
mov
inc
sahf
ja
inc
fimull
jns
add
lcall
xchg
pop
adc
vpaddb
and
pop
inc
fistpll
dec
fcomp
sbb
movzbl
push
in
cmp
cld
jge
mov
movsb
jnp
mov
enter
pop
addr16
or
es
stos
add
sbb
adc
lea
hlt
and
dec
clc
int
out
sbb
ror
pop
jbe
push
out
lods
xchg
ljmp
aaa
or
out
aaa
pop
mov
xor
sti
lods
pop
loope
mov
inc
mull
xor
adc
mov
dec
mov
mov
dec
shrb
add
in
loope
jecxz
fstpt
push
loope
and
pop
push
sub
je
mov
adcb
push
and
jecxz
nop
push
pop
and
lods
inc
dec
inc
push
xor
popf
push
mov
or
dec
ss
xchg
loop
daa
clc
or
ds
xchg
and
pop
xchg
inc
sbb
xchg
shr
lcall
out
add
dec
pop
mov
pushf
addr16
and
sub
lret
popf
jbe
inc
sbbl
lds
inc
pop
or
dec
test
shrb
adc
outsl
cld
out
jo
and
mov
rclb
mov
jge
in
in
push
in
sub
aaa
push
push
cmp
pusha
sub
mov
leave
sbb
jo
lods
outsl
int
insl
jle
sub
mov
add
addl
push
sbb
stos
inc
pop
cmp
mov
outsl
sbb
dec
mov
cmc
mov
adc
mov
add
xor
jbe
hlt
inc
or
mov
les
mov
sub
cmpsb
cmp
insl
insb
movsl
push
adc
cmc
xchg
cli
mov
adc
or
fwait
cmpsl
ficoms
or
jno
pop
xchg
popf
xor
push
pop
jae
and
into
push
mov
daa
add
pop
pushl
pop
scas
ret
mov
pop
cmpsb
jbe
fdivrs
add
mov
mov
cs
mov
mov
sti
test
inc
inc
dec
xchg
sub
notb
jns
mov
mov
test
pop
mov
addr16
sbb
pop
mov
xor
and
sti
and
pop
pushf
xchg
hlt
mov
jp
push
mov
mov
bound
sbbb
add
arpl
lret
mov
pop
aad
adc
arpl
cmp
lods
sub
imul
mov
cld
inc
fisubl
xchg
xchg
pop
cmc
push
mov
add
jb
add
inc
cld
popf
cmpsl
frstor
imul
outsl
or
les
divl
sarl
aas
mov
std
cmp
push
cltd
mov
xchg
cltd
inc
leave
inc
das
or
or
pop
arpl
lea
ficoms
hlt
push
test
scas
fldcw
enter
mov
and
mov
imul
jp
mov
sbbb
sub
shl
mov
stos
lods
push
stos
push
lock
shrb
adc
mov
sub
test
jnp
das
inc
out
add
adc
mov
outsb
push
stos
stos
shll
inc
dec
xor
jnp
or
out
ds
add
iret
rep
jge
or
enter
jmp
mov
mov
push
and
aam
sub
xor
push
cli
push
dec
cmp
sbb
mov
xchg
and
jne
adc
pop
adc
xchg
inc
mov
jns
and
jmp
pusha
pop
mov
xlat
add
je
je
xchg
sub
sti
wbinvd
and
pop
dec
or
loop
pop
sub
sbb
sbb
cmp
mov
add
xchg
dec
jmp
cmc
mov
loopne
or
ret
add
push
push
xchg
dec
xor
dec
mov
jbe
xchg
add
lock
test
sarb
mov
adc
leave
ljmp
daa
mov
test
inc
test
xor
sbbb
jecxz
fisttpl
and
fmull
sti
popf
mov
add
jb
push
mov
out
push
aad
cmp
outsl
cmpsb
mov
in
cltd
push
in
mov
sbb
fwait
int
cmpsl
je
loop
aam
sub
xrelease
and
iret
decl
sub
icebp
mov
lret
subl
fnstsw
and
push
gs
nop
jb
adc
sbb
std
cmp
mov
cli
push
mov
call
cmp
lret
push
popf
mov
cltd
movsl
xor
clc
cpuid
outsl
mov
mov
scas
dec
shlb
adcb
aas
mov
loopne
pop
push
xchg
mov
and
jno
sub
xchg
pop
mov
sbb
cmpsb
or
stos
and
fiadds
mov
rol
mov
pop
js
jle
cmp
loope
loope
inc
loop
mov
lcall
in
dec
outsl
enter
je
fsubrs
into
cmp
sbbb
xchg
shlb
into
gs
xlat
in
stc
or
sub
sbb
fcomps
movsl
sub
negl
sbb
pop
cmp
mov
icebp
int
push
jbe
dec
bnd
mov
into
mov
pop
repnz
inc
jns
mov
fcomps
adc
cmp
je
inc
cltd
or
dec
add
mov
mov
inc
loope
pop
mov
out
or
out
jmp
ljmp
xchg
pop
aaa
shlb
mov
subb
mov
pop
or
repz
or
pop
shll
int3
in
adc
mov
cmp
mov
mov
sub
bound
mov
inc
mov
pop
in
adc
daa
mov
jns
dec
mov
xchg
enter
cmpsb
call
push
outsl
mov
mov
cld
inc
add
push
sub
xor
outsb
jmp
fnstsw
jo
lcall
jne
xor
add
xchg
inc
fsubrl
stc
and
das
mov
inc
jg
xchg
or
aad
int
xor
sbb
mov
cmc
push
mov
jl
dec
insl
add
ret
and
jns
mov
dec
jno
out
leave
test
sahf
jnp
adc
inc
movb
pop
les
pop
insb
clc
xchg
push
out
std
outsl
ret
outsb
mov
ljmp
xorb
mov
push
sahf
fildl
add
std
cltd
xor
repnz
popa
jnp
inc
and
mov
ucomiss
inc
jmp
out
bound
scas
cmp
fsts
or
or
adc
adc
rol
dec
pop
loop
scas
daa
lods
inc
adc
popf
xor
pop
push
pop
loopne
dec
adc
roll
cmp
jne
pop
pop
insl
xchg
push
push
mov
mov
mov
dec
pop
jle
xor
mov
dec
inc
fstpt
pop
fidivl
insl
out
sub
and
pop
inc
lcall
jge
or
movsb
ret
rorl
xchg
mov
add
leave
xor
cld
movsb
mov
hlt
inc
adc
movsl
sti
test
cmp
add
dec
mov
push
addl
and
rolb
jecxz
mov
mov
int
sbb
dec
dec
dec
add
push
test
loop
adc
add
push
inc
jns
mov
and
negl
leave
cs
sbb
xor
insb
mov
stos
jns
xor
popa
adc
sbb
stos
add
push
out
fmul
or
loop
sbbb
add
test
cltd
mov
inc
gs
xchg
bound
push
aas
push
or
incl
dec
mov
clc
xchg
pop
mov
arpl
shll
cld
mov
iret
ret
fbld
mov
jno
mov
mov
xchg
adc
fsts
pushf
bndstx
mov
fists
xor
pop
jae
push
jb
cmp
scas
sbb
and
mov
fsubrs
mov
mov
clc
repz
movsl
ret
pop
mov
pop
mov
mov
outsb
add
push
roll
mov
nop
decl
xchg
outsb
mov
sbb
mov
xchg
add
mov
lods
jno
fisubs
gs
lods
mov
fs
out
ja
lods
xor
pop
xchg
out
mov
test
pop
sub
stos
das
jno
dec
test
mov
push
rcll
aas
dec
jecxz
out
in
ds
out
data16
and
xchg
cmp
into
aam
pop
dec
popaw
clc
xchg
sub
cli
loopne
mov
cmc
sbb
jle
adc
push
fnstsw
or
mov
sub
insb
in
les
mov
fidivrl
and
pop
aam
xor
lahf
iret
add
out
fnsave
inc
sub
aad
push
jmp
push
jo
test
add
inc
lods
jo
lahf
xor
dec
test
aad
loope
pop
dec
dec
cli
lret
lods
mov
sti
insl
fdiv
int
jne
push
push
and
je
inc
mov
fmul
enter
addr16
and
rolb
push
jae
fbld
aam
push
pop
pushf
push
or
mov
test
fistl
int3
mov
aas
add
jns
aaa
jmp
lds
int3
cmp
jo
les
out
cltd
xchg
call
adc
xor
dec
jns
xchg
ljmp
xor
cmpsb
cmp
cli
out
xor
xor
push
push
push
sub
je
jg
sbb
nop
outsl
and
mov
adc
jnp
idivb
loopne
out
or
mov
cs
iret
jecxz
add
cmp
jns
pop
shlb
lods
les
je
mov
in
aas
cld
addr16
int
std
inc
sti
roll
dec
outsb
xchg
mov
notl
fdivrs
lock
bound
aad
xchg
jbe
jmp
cmp
cmc
push
ljmp
jno
sbb
cmc
mov
pop
into
lea
push
out
pop
and
lods
decl
or
and
fdivp
ja
and
test
xor
fstpt
aaa
scas
mov
jle
jmp
and
xor
shr
test
jbe
cmpsl
sbb
sbb
sbb
scas
int3
xor
cwtl
adc
mov
jb
jecxz
lods
add
inc
push
push
mov
xchg
mov
std
out
mov
ss
frstor
mov
in
data16
sub
or
inc
xchg
mov
adc
cmp
fneni(8087
xor
notl
scas
push
int3
rcl
cltd
pop
lret
mov
fisttpl
addb
mov
bound
loope
pop
fistl
ret
mov
mov
cmpsb
mov
loope
jl
bnd
icebp
adc
dec
push
cmc
pushf
sub
ljmp
sub
pushf
les
sahf
mov
xchg
loop
adc
shlb
lods
cld
mov
loop
sub
mov
negb
repnz
in
gs
inc
lods
adc
fsub
xchg
notl
ret
das
lcall
and
and
outsl
daa
fmull
pop
les
pusha
and
inc
dec
lret
jne
icebp
dec
imull
jo
out
inc
test
mov
out
inc
lea
mov
cwtl
out
bound
daa
movsb
pop
popf
into
int
jmp
sub
pmaxsw
adc
push
mov
jnp
loopne
mov
cmp
push
fadd
pop
imul
test
adc
or
pushf
cli
mov
and
push
nop
add
test
mov
or
std
push
add
jae,pn
adc
lds
imul
push
push
mov
push
jo
dec
add
int3
and
jecxz
or
jmp
loope
and
insb
sti
repz
mov
scas
inc
scas
pop
leave
sub
mov
sbb
push
jl
and
je
ret
mov
fstpt
adc
ja
int
das
mov
sbbb
dec
clc
aam
push
pop
iret
in
cmp
jecxz
mov
scas
pop
inc
aad
push
pop
arpl
xchg
fwait
jmp
divl
adc
mov
push
or
jnp
int3
jns
sbb
push
and
mov
xchg
push
testl
cltd
xor
shl
js
jbe
push
and
and
xchg
and
or
sbb
data16
loopne
in
push
mov
aam
repz
lock
jg
sub
pushf
mov
sahf
jbe
repz
and
mov
stos
jbe
jmp
mov
and
mov
stos
inc
pop
je
cs
fcmovnbe
add
mov
pusha
sbb
idivb
lcall
xchg
mov
or
dec
fistpl
jge
add
nop
ret
pop
sahf
negb
es
test
mov
jne
push
repnz
fsubl
or
nop
push
lods
test
dec
nop
ud1
or
aam
mov
out
cmc
cmp
lock
mov
ljmp
pusha
pop
push
inc
rclb
into
lods
cmp
arpl
imul
xchg
dec
cmpsb
xor
jg
add
stos
sahf
adc
shrb
lds
je
arpl
push
lea
icebp
xorb
add
pop
mov
fbstp
mov
mov
sbb
imul
hlt
lahf
es
dec
mov
jmp
sub
add
jge
fisubrl
mov
mov
inc
jmp
sub
jbe
inc
rolb
icebp
out
push
sbb
lods
sub
cmp
pushf
mov
lds
xor
fldl
jge
in
or
or
ficompl
shlb
adc
lea
mov
push
jbe
cmp
mov
jns
push
in
fwait
push
cwtl
mov
sub
mov
adc
adc
cltd
mov
fisubs
xchg
push
lret
stos
mov
dec
xchg
add
adc
pop
or
cmpsb
in
cmp
out
data16
ret
or
mov
jb
std
sub
nop
roll
and
and
insb
add
mov
jae
jb
sbb
sahf
pop
aaa
xchg
std
push
lcall
dec
lods
push
test
mov
ret
jl
lods
sub
cmpxchg
xchg
cwtl
das
push
pushl
pop
mov
pusha
divl
push
lcall
and
insb
scas
jmp
stos
add
add
cltd
mov
fbstp
pusha
rolb
add
mov
ds
xchg
pop
std
dec
fstps
push
add
stc
pop
sarb
add
sbb
and
cmp
int3
test
hlt
push
mov
mov
lret
xchg
mov
or
scas
push
rcrl
data16
sbb
rcll
jp
adc
fmulp
push
mov
cltd
lock
scas
ds
xchg
sti
int
lcall
and
pop
icebp
cli
push
lcall
sbb
xorl
push
pop
or
and
movsl
inc
mov
iret
adc
dec
loope
mov
movsl
icebp
add
pop
sbb
mov
aaa
rcl
push
in
outsb
mov
and
test
inc
push
xlat
lcall
icebp
fists
pop
fcompl
in
popa
shl
mov
mov
adc
jl
fwait
and
and
push
xor
cmp
loop
push
in
pop
jnp
sub
je
fisttpll
pop
in
notl
pop
cmp
lea
xor
es
js
aas
dec
stos
adc
shlb
cmpsl
mov
shlb
testb
push
inc
loope
xor
je
add
pop
testl
add
leave
mov
pop
jge
add
lret
inc
insl
or
pop
addr16
enter
xchg
fs
iret
xor
xor
jbe
scas
cmpsl
test
jg
mov
mov
sub
inc
loop
iret
je
add
out
popa
jl
xchg
sub
dec
clc
daa
nop
sbb
jecxz
movsb
dec
pop
pop
cltd
mov
push
cmp
jb
in
cmp
jge
adc
ficomps
ficoml
lcall
repz
and
xor
cmp
push
enterw
adc
or
sub
push
mov
out
cld
insb
add
cmp
lea
pop
jle
dec
lods
adc
andl
push
stos
dec
and
shll
lcall
mov
or
cmpsb
jns
rorl
mov
push
or
mov
xchg
sbb
cmpsb
cmp
jmp
dec
incl
push
lret
xchg
les
fisubrs
lret
pop
stos
mov
enter
and
mov
mov
mov
push
int
icebp
enter
inc
cltd
ds
xchg
push
into
gs
xor
inc
test
fstpl
mov
cmpsl
jnp
in
mov
mov
nop
hlt
fcmovnb
fs
insb
mov
rcrb
inc
cmp
push
sub
and
xor
mov
cmpsl
fdiv
mov
pop
out
in
stos
inc
cs
imull
adc
iret
icebp
jnp
lret
dec
jae
hlt
in
inc
out
sahf
aaa
dec
rcr
adc
cmp
inc
mov
sbb
mov
add
icebp
fimull
ja
cld
xor
gs
cmp
xor
and
xchg
and
ficomps
sub
jae
cwtl
pop
call
push
loope
inc
cwtl
cmpl
test
mov
or
fchs
pop
cmc
push
sti
dec
add
aad
in
pop
mov
mov
and
ffree
in
bound
shlb
je
add
pop
xor
jecxz
pop
xchg
adc
mov
rcrl
dec
into
movsl
sbb
push
lock
mov
sti
mov
lcall
popf
insb
icebp
mov
sub
adc
out
cwtl
mov
into
pandn
stc
test
mov
mov
mov
test
sub
imul
jge
xchg
dec
sub
mov
and
scas
cmc
in
push
in
pop
rcll
movb
mov
inc
mov
loopne
fists
xlat
mov
mov
jbe
int
out
into
pop
push
jno
xor
push
jb
xor
cmp
les
jo
push
movsb
pop
ljmp
mov
adc
fbstp
outsb
ljmp
rcrl
pop
xchg
jp
shll
ds
cs
aam
lds
jbe
mov
jecxz
aam
adc
sti
shlb
repz
cs
mov
mov
ret
lahf
mov
inc
mov
jg
xor
loop
insl
movsl
adc
xchg
or
mov
insl
loopne
ja
add
sbb
xchg
rclb
data16
inc
add
xor
lock
xchg
bound
fisubrl
xor
fs
stos
jae
lods
pushl
shrb
jnp
add
sahf
and
ss
sbb
ret
inc
inc
xchg
lahf
stc
inc
jnp
cmp
outsb
jl
ret
testb
cmpsl
ds
jb
clc
mov
mov
jecxz
test
mov
mov
insl
add
push
push
in
in
adc
out
js
imul
xor
insl
in
mov
in
dec
mov
jle
pop
dec
mov
aas
insl
and
fadds
inc
adc
arpl
adc
ss
ljmp
popa
sub
stc
push
icebp
xchg
push
sbb
push
dec
popf
jno
outsl
testl
jbe
fildll
stos
push
xchg
fcoms
jmp
iret
push
mov
shrl
sub
fnstcw
cmp
arpl
cmp
cmp
add
and
push
ljmp
pop
fsubrl
pop
and
bsf
inc
add
xchg
andb
sbbb
leave
jo
pop
jecxz
inc
pop
lret
aaa
dec
data16
shlb
jno
mov
loop
mov
cmpsb
push
shl
sub
ds
mov
xchg
adc
push
inc
mov
test
stos
mov
lahf
push
aad
mulb
mov
jge
daa
aam
stc
jno
lcall
sbb
enter
add
and
loopne
aas
push
push
xor
and
xchg
mov
add
mov
arpl
fisubrs
mov
add
aam
xchg
outsl
adc
adc
leavew
lcall
xchg
jae
xor
mov
orl
and
and
adc
in
or
and
mov
gs
test
cli
shrl
xchg
loope
int
dec
jmp
push
jle
aam
jns
loope
adc
scas
add
jl
jns
inc
andb
pop
ss
lahf
push
and
and
sbb
inc
mov
test
sbb
mov
rcl
mov
shlb
jne
dec
fcmovu
dec
int3
push
jne
loopne
mov
imul
pushf
jl
jecxz
add
jno
jbe
xchg
xchg
add
mov
sub
adc
fstps
dec
in
test
call
mov
dec
dec
out
mov
js
je
notb
jge
cmp
arpl
dec
fsubrl
cltd
inc
ret
xchg
push
adc
cmp
int
mov
pop
cmp
dec
aam
test
jo
pop
stos
popa
stos
add
jne
repnz
lret
push
addl
mov
test
je
xlat
out
mov
stos
mov
ficompl
jp
mov
fldl
inc
cmp
mov
mov
dec
icebp
mov
adc
pop
loopne
sub
jnp
cmp
lds
cmp
cmpsl
lret
leave
push
cs
test
push
hlt
shll
clc
aas
pusha
mov
lds
stos
les
push
push
dec
incl
lods
mov
or
jns
sub
sub
fisubrl
leave
mov
div
mov
lsl
xchg
cs
add
or
mov
cltd
movsl
inc
xor
xchg
hlt
lret
dec
scas
mov
gs
cltd
sbb
mov
xlat
cmp
jl
fidivs
decb
sbb
cmp
out
sbb
dec
pusha
test
iret
mov
test
jo
fwait
inc
xchg
cmp
int3
int3
cli
xchg
sub
call
out
pop
dec
jecxz
mov
out
lods
jo
cmp
jmp
in
daa
es
xchg
aad
mov
or
push
jmp
mov
pop
call
xor
test
sbb
xlat
sub
pusha
fs
lcall
adc
xchg
test
aas
jp
shrl
stos
aas
pop
and
icebp
nop
fs
sbb
inc
cli
popf
mov
xchg
js
pop
xor
cltd
sbb
and
ret
inc
cmp
inc
or
pop
imul
jo
sbb
mov
cld
or
pop
sarl
push
pop
not
ds
movsl
jmp
jge
nop
xor
dec
pop
fwait
sti
dec
inc
jge
cmpsb
gs
into
outsl
xchg
call
push
mov
inc
arpl
inc
aaa
pop
icebp
lcall
push
xor
fwait
xor
push
pushf
das
mov
mov
mov
jae
in
mov
push
imul
sbb
mov
push
das
test
inc
ffreep
clc
nop
jle
mov
test
andb
mov
mov
mov
sub
mul
add
dec
sub
sub
and
mov
mov
imul
and
mov
mov
into
sbb
mov
into
dec
test
jbe
dec
pop
imul
stos
mov
js
nop
xchg
in
push
fidivrl
fists
popa
inc
sub
roll
jecxz
sbb
fidivrs
mov
sbb
cwtl
or
pop
lret
iret
scas
and
imul
xlat
fildll
orl
shll
jbe
cmp
mov
dec
rol
push
mov
insl
push
jp
jne
lcall
push
inc
into
in
or
in
les
mov
in
fimuls
push
xor
stos
fcoml
push
mov
cmp
add
enter
xorl
ds
sub
out
xor
inc
pop
dec
jae
lea
fimull
jge
mov
inc
xchg
cld
or
push
jle
mov
int3
lret
push
test
stc
mov
pop
cwtl
sahf
aam
pop
inc
ds
mov
addr16
arpl
or
mov
dec
cmpsl
jecxz
in
and
push
loope
negb
jg
fidivs
mov
mov
orb
mov
lods
dec
in
mov
push
pop
div
sub
mov
inc
sub
loope
cwtl
push
fs
mov
pushf
out
ret
pop
insl
sbbl
cmp
push
mov
sbb
xor
cmp
add
test
mov
xor
push
insb
loop
inc
arpl
xchg
call
mov
rolb
xlat
sbb
jl
stos
xor
jp
lret
sbb
mov
xor
mov
mov
push
cmp
sbbl
pop
loop
add
lock
mov
es
jp
push
lods
cs
jl
cs
inc
clc
xchg
outsl
dec
cmpsl
out
cmp
scas
dec
leave
lods
mov
add
adc
mov
call
les
out
insl
jmp
push
stos
lds
lcall
mov
inc
stos
push
cltd
nop
jno
in
jmp
or
jmp
mov
test
addb
shll
xchg
xchg
popa
cld
mov
mov
movl
jae
mov
pop
mov
xchg
jno
inc
fisubrs
xchg
hlt
add
jne
dec
cmp
pop
insl
imul
test
dec
or
push
push
and
stos
clc
addr16
sub
daa
cmp
or
lcall
inc
pop
test
lret
outsb
inc
xor
jbe
dec
not
push
push
jmp
std
fnsave
mov
jmp
lods
or
mov
or
scas
popl
imul
cmc
clc
btl
adc
testb
sarl
add
or
xchg
mov
mov
shll
sub
cltd
test
mov
loope
cvtps2pi
test
fldl
jo
inc
jno
pop
xor
add
pushl
subl
mov
fucomp
xchg
cli
lret
mov
std
push
mov
mov
pop
mov
pop
sbb
shrl
or
dec
dec
data16
xlat
mov
mov
sub
xchg
dec
lcall
int3
int
leave
push
pop
add
push
and
inc
sahf
push
cmp
push
lahf
mov
int3
xor
pop
out
mov
das
inc
fwait
movsb
or
push
mov
xchg
out
add
xor
sbb
pop
push
jbe
test
inc
cmp
aaa
sub
jle
pushf
int3
sub
leave
mov
test
mov
inc
or
dec
or
fldl2t
add
ja
inc
les
xor
sbb
inc
cmp
in
rcl
cmc
push
xchg
push
add
cld
sarl
push
rep
push
out
test
cwtl
add
and
ljmp
or
pop
cmc
and
mov
add
fisubrl
mov
addr16
in
fwait
loopne
inc
loope
mov
pop
repnz
push
rcl
dec
idivl
fdiv
jno
push
lret
cld
xor
gs
aad
out
xchg
xor
call
out
push
lcall
rol
pusha
xor
xor
adc
ljmp
jecxz
sub
imul
push
subb
jnp
pop
lods
or
rorb
test
in
imul
or
inc
cmp
imul
push
xchg
daa
xor
inc
push
dec
push
mov
aam
and
test
push
jle
imul
rolb
sub
inc
outsb
xchg
sbbl
sbb
ss
adc
add
out
mov
ja
sbb
cli
mov
xchg
inc
and
cld
into
xchg
pop
jo
aad
adc
fcoms
cli
or
repnz
mov
push
icebp
jno
lret
cmpsb
inc
jo
jns
test
scas
insb
push
push
insb
sbb
ss
mov
fisttps
int
jb
push
aam
mov
jnp
mov
pop
fcmovb
ret
mov
xchg
lahf
and
sbb
js
inc
test
dec
in
lcall
ljmp
popa
mov
sub
xor
mov
not
call
fs
sbb
pusha
mov
fidivrs
jbe
out
and
push
and
inc
adc
aam
gs
jle
and
jp
popf
push
andb
xor
outsl
in
lock
int
mov
xor
inc
fldl
jnp
stos
out
fldl
sti
mov
or
jmp
into
fdivl
mov
push
cs
sub
fbstp
push
sub
xchg
out
sbb
inc
fsubrl
repnz
ja
lds
push
adc
add
movsb
in
mov
push
leave
push
mov
jne
xchg
mov
pop
fcoms
push
jno
fstp
into
ss
loopne
adc
push
push
inc
mov
mov
testb
jne
sahf
or
movsl
xchg
jmp
call
test
adcb
stc
dec
pop
xor
mov
filds
leave
sbb
out
mov
cmp
mov
push
jo
lods
and
sti
call
orb
xor
jae
mov
test
test
clc
repnz
push
repnz
adc
das
adc
push
sub
out
cmpb
fs
xor
inc
xor
add
mov
ljmp
lcall
fcoms
test
scas
js
cmpxchg
jns
xor
push
jmp
jae
xchg
sub
push
mov
cmpsb
movsl
push
aaa
mov
pop
jge
jmp
stos
mov
adc
jecxz
addr16
pop
std
xor
and
bound
mov
mov
clc
or
mov
fcoml
cmpsl
jg
fsub
decb
sbb
lea
jge
mov
popa
andl
push
jno
xchg
and
mov
lock
mov
jge
jge
out
dec
cmp
cmpl
cmc
mov
push
es
fnstenv
test
into
stc
in
stos
xchg
xchg
shll
aam
dec
push
jge
xchg
xchg
cmp
fdivl
sarl
es
push
or
jmp
jmp
sub
inc
xor
adc
xchg
push
addb
or
dec
add
push
mov
inc
pop
adc
pop
pmaxub
lea
cmp
pop
xor
loop
std
or
mov
mov
pop
int3
pop
fstl
push
inc
aaa
push
pop
out
incb
pop
mov
cmp
aad
mov
xchg
xchg
sub
cli
or
sub
push
or
jge
mov
movsb
out
dec
arpl
shrb
ret
jb
xor
shll
or
pusha
mov
out
es
push
mov
lea
push
push
jae
in
daa
cld
push
pop
movq
push
lods
sbb
mov
sbb
nop
pop
adc
addr16
add
mov
ret
sbb
in
dec
stc
cmp
cmpsb
sbb
lahf
bound
mov
inc
pop
inc
stos
cmp
test
test
leave
test
cmp
scas
aaa
ret
inc
inc
clc
insb
dec
aam
fmuls
inc
fstpt
stc
jmp
setg
jp
icebp
inc
inc
pop
mov
sub
pop
adc
imul
lock
loope
mov
ficoml
jmp
movsb
mov
jg
sub
sbb
in
push
divb
xor
sbb
jb
mov
pop
push
cmpsb
in
mov
jl
jne
cmp
pop
les
xchg
imul
inc
test
dec
lret
enter
fldt
call
inc
out
pop
jae
push
adc
xor
jnp
push
lods
sahf
fcmove
nop
cmpsl
cwtl
les
sbb
xor
xor
mov
inc
cld
nop
sbb
xor
out
lea
ljmp
fidivrs
into
insl
jbe
cmpl
fsts
mov
popf
push
arpl
sti
or
iret
mov
jg
cmp
adc
xor
cmp
push
in
and
jmp
jne
negl
lcall
sub
repnz
sbb
add
in
xor
pop
mov
add
ss
add
and
mov
dec
xor
lods
add
call
fdivs
or
outsb
pusha
mov
insb
sub
in
fldl
rol
sbb
add
mov
push
out
repnz
int3
arpl
mov
push
andb
sbbb
ljmp
sbbl
cmc
push
jle
cmp
jns
inc
mov
push
bndstx
xor
ljmp
sub
pop
sub
stc
out
dec
loope
test
aas
ret
push
ljmp
jno
rcl
cwtl
mov
repz
sbb
imul
and
dec
mov
sub
pop
in
int
mov
nop
xor
inc
cmc
mov
sbb
into
cmpl
pop
mov
cmp
or
outsl
and
mov
inc
or
jae
cmp
lahf
fs
ffree
ja
dec
test
dec
lldt
out
gs
or
mov
xor
rcrb
add
mov
pop
jl
or
add
mov
mov
xchg
rcr
or
imul
inc
je
add
decb
lcall
mov
mov
xchg
sbbb
or
pop
call
aam
in
xchg
fucomi
arpl
push
jno
stos
mov
xorb
lods
sti
sbb
jbe
dec
divb
xchg
dec
std
and
xchg
inc
ret
jb
subb
mov
push
mov
fstpl
push
ljmp
inc
pop
mov
jne
mov
in
fsub
mov
cmc
icebp
int3
ds
ljmp
mov
jg
dec
push
outsb
and
das
insl
repz
inc
into
movsb
mov
stos
lcall
addb
push
movsl
movsl
jl
adcl
popf
jmp
mov
enter
test
pop
aad
stos
and
je
mov
jle
jae
dec
xlat
mov
sbb
lds
rol
ds
add
inc
frstor
push
rclb
or
sub
mov
loop
ja
les
mov
sub
adc
pop
shrl
mov
add
mov
imul
or
push
stos
xor
push
test
addr16
adc
dec
iret
mov
fbld
push
jle
test
pushf
dec
scas
stos
pop
adc
inc
fidivl
repz
pop
jae
andb
push
test
xor
repnz
add
out
dec
adc
and
jo
pop
mov
and
clc
mov
or
pop
cmp
pushf
push
or
push
sbb
xchg
in
xchg
inc
cli
or
cltd
ds
dec
mov
fwait
outsl
clc
or
push
inc
int
sbb
xchg
and
push
or
mov
mov
repnz
mov
xchg
add
and
cmp
push
hlt
push
mov
push
jecxz
movsl
pop
cmp
xchg
icebp
xchg
sbb
jp
sbb
push
jns
test
mov
jg
xchg
es
adc
adc
ds
xchg
mov
cld
pop
dec
mov
int
and
lret
sbb
dec
movsl
push
lcall
out
loop
push
ljmp
dec
aaa
push
fisttpll
or
div
mov
push
xchg
aaa
cmp
jge
roll
sbb
stc
mov
lahf
xor
pop
imul
repz
in
add
lahf
loopne
inc
loope
stos
push
movsb
test
sub
xor
inc
lcall
sbb
dec
ficoml
das
sub
movb
rorb
and
mov
loop
mov
adc
sub
adc
cltd
pop
cwtl
add
arpl
int
fcompl
fcmovnu
js
popa
in
or
inc
mov
insl
jge
mov
xor
stos
lcall
and
in
inc
pop
adc
adc
inc
in
call
sbb
jne
ljmp
cmp
adc
int
call
and
fwait
sbbl
imulb
push
outsl
mov
jno
dec
inc
mov
xor
arpl
fmull
mov
test
rolb
test
mov
xor
mov
pop
inc
jo
jp
pop
test
in
adc
lea
test
and
adc
int
js
mov
xor
cmp
std
xchg
stos
ret
mov
xor
mov
mov
and
dec
loop
inc
or
icebp
sub
jns
cmpsb
lds
mov
and
stos
xor
pop
and
xor
adc
mov
fs
repz
in
sub
mov
mov
cmp
inc
push
arpl
mov
lods
adc
inc
cmpsl
shlb
loopne
adcl
add
mov
bound
mov
and
jae
mov
mov
decl
mov
xor
jns
xor
xor
cmp
stos
fxch
mov
jle
lods
mov
mov
nop
dec
jecxz
push
fwait
test
in
push
lods
in
jne
xchg
insl
int3
jg
popa
pushl
icebp
fidivs
ss
xor
push
fldenv
mov
cmp
loop
aaa
iret
cli
adc
push
in
sub
daa
dec
test
scas
inc
ds
dec
out
or
loope
in
push
outsb
dec
es
cmp
jo
dec
push
pop
movsl
addb
xor
mov
mov
push
stos
sti
cmp
adc
aas
add
jno
scas
mov
add
cld
sbb
push
fmul
lret
movsl
or
add
popf
xchg
and
scas
repz
lods
or
mov
jg
jae
pop
pop
jo
push
pop
jbe
xchg
das
cmpsb
mov
out
outsl
mov
lods
rolb
and
in
loopne
inc
fistl
adcb
cltd
jbe
out
inc
lahf
inc
in
shl
icebp
dec
roll
iret
loope
mov
dec
jns,pt
aad
mov
adc
repnz
lock
ret
test
push
xor
pop
push
mov
adc
in
mov
pop
cli
push
cmp
cmp
lcall
icebp
mov
lock
jmp
mov
pop
adc
movsl
ss
jne
fsubrl
mov
cmpsl
mov
pop
ds
pcmpgtd
arpl
and
jb
andl
and
cli
inc
es
sti
pusha
fucomi
lock
fidivl
mov
nop
add
outsl
mov
call
push
xor
adc
dec
dec
dec
xchg
mov
sbb
inc
inc
xlat
rcrl
jmp
jg
pop
jne
mov
jmp
out
adc
pop
push
shlb
push
lock
mov
lea
mov
push
std
and
das
jns
push
jl
push
sub
popf
xor
out
aad
in
add
xchg
or
sub
ss
xchg
out
stc
jns
les
cli
pop
adc
jnp
repnz
inc
jns
js
dec
add
rol
repnz
cs
stos
out
inc
inc
int3
inc
js
pop
cs
push
call
subb
test
sahf
pop
or
icebp
cmpb
mov
xchg
lds
std
push
jecxz
fcomip
cmp
into
cmp
pop
mov
jne
or
loop
lret
aam
jmp
dec
shr
or
sbb
rorb
lret
inc
pop
repnz
gs
dec
sti
jne
fdivrl
subl
outsb
hlt
xor
lods
mov
add
sti
dec
mov
cld
add
sbbb
sbb
pop
mov
arpl
dec
adc
repz
pop
or
cmp
fsts
loopne
pusha
fldpi
popf
push
inc
fidivs
fcoms
dec
cltd
sahf
jno
cmp
push
popf
inc
fmul
fisubl
fnstsw
inc
push
fcompl
push
mov
rol
jnp
cmp
shlb
mov
adc
in
ds
dec
xchg
outsb
jp
insl
mov
jnp
jns
pusha
ja
pop
hlt
mov
outsl
and
nop
popf
std
dec
mov
popf
pop
and
add
lods
ds
mov
cs
mov
mov
mov
sbb
out
insb
sar
lret
ret
fmuls
xchg
cwtl
scas
subl
mov
out
int3
aad
dec
mov
mov
push
call
vpxor
out
clc
mov
sbb
mov
push
pop
cmp
fbld
das
jp
pop
fisubl
hlt
mov
mov
popa
xor
sub
push
nop
movsl
int
in
incb
inc
fistps
jmp
add
mov
or
cmp
pop
repnz
cmp
push
jae
xor
lds
loopne
out
jecxz
scas
in
out
test
push
mov
xchg
and
stos
inc
lds
push
inc
outsl
enter
movsb
cmp
sub
ret
xor
inc
cmp
cmp
stos
lock
dec
pushf
daa
outsl
xchg
lret
push
xchg
xor
rol
sbb
pop
rol
push
cmp
jne
enter
and
fs
movsl
and
pop
jbe
aaa
jo
adc
fstpl
test
mov
mov
pop
addr16
push
loop
and
add
in
cmpsb
notl
or
and
sub
and
cs
dec
xchg
dec
sbb
add
lods
ret
xor
ror
mov
mov
mov
inc
les
xchg
pop
xchg
gs
fs
cmp
mov
movsl
mov
adc
jae
mov
sbb
mov
xlat
cmp
xor
mov
out
fdivl
mov
in
in
fs
push
fldl2t
or
mov
enter
jmp
push
pop
jp
loopne
jle
aad
int
mov
or
or
cmp
dec
fnstcw
adc
call
test
push
mov
sub
rclb
cmpsb
imul
sub
hlt
lret
cld
push
testl
test
addl
inc
sbb
fnstenv
shl
inc
repz
out
mov
dec
cmp
pushf
ret
data16
daa
rclb
inc
mov
fmul
loope
sbb
ljmp
mov
out
es
cmp
jl
push
sub
aas
pop
or
cmp
mov
idivb
dec
or
mov
push
mov
xchg
popa
fisttps
shrl
mov
sbb
push
xor
popf
cmp
sbb
fs
lret
rcrb
push
push
sub
popa
imulb
cmp
orb
aam
pop
nop
cmp
sbb
int
jns
mov
add
xor
out
add
xor
cmpsl
mov
out
popf
fxch
cmpl
pop
popf
mov
rclb
dec
cltd
lods
cwtl
lds
sub
ret
outsb
push
inc
push
or
cmp
sbb
icebp
iret
fnstcw
call
push
mov
xor
xor
scas
in
sbb
adc
jle
and
cwtl
ret
xor
mov
push
leave
ss
mov
lods
sbb
mov
and
pop
imul
mov
dec
sbb
in
mov
outsl
jge
insb
negl
scas
aad
inc
add
mov
fstps
addr16
push
je
add
hlt
test
hlt
lahf
or
cmp
call
aam
lods
fbstp
pop
ret
dec
iret
cmp
mov
outsl
fnstenv
imul
pop
dec
test
cmp
sbb
fisubrs
jne
sbb
imul
imul
popa
rcl
fdivrl
sbbb
pop
hlt
dec
mov
push
int3
sbb
jle
push
sub
dec
test
test
out
scas
sahf
xchg
icebp
mov
mov
xchg
out
por
fidivl
scas
test
dec
mov
icebp
and
push
pop
add
adc
imul
mov
data16
shr
lds
cwtl
stos
sub
out
fldenv
dec
jo
jo
adcl
arpl
or
inc
push
or
scas
call
popf
lcall
cli
mov
cs
aad
insl
pop
push
sub
lret
int3
sbb
cmc
pop
out
jbe
lock
lock
aaa
stc
jp
or
mov
cmp
jmp
mov
fiaddl
cmpsb
adc
rcrb
ja
jb
aaa
into
lahf
pop
cwtl
xchg
rcll
mov
aas
mov
rorb
dec
add
add
mov
cmpsl
sub
fwait
pop
adc
call
cmp
dec
cmp
imul
push
mov
pop
mov
push
in
cltd
jge
inc
ret
std
dec
sub
mov
adc
xchg
outsl
push
dec
das
repnz
push
jae
cmovge
in
pushf
inc
and
lods
sub
mov
mov
fwait
jo
lret
sbb
stos
stos
mov
bound
repz
filds
or
lret
movsb
mov
mov
add
jb
mov
mov
lret
mov
sub
fs
mov
inc
test
inc
movsb
sti
negl
pop
xchg
adc
cs
push
out
ds
pop
rorl
cmp
lods
dec
aad
inc
inc
movsl
add
mov
push
cmc
incb
mov
dec
and
jo
hlt
xchg
mov
sbbl
adc
repnz
lea
mov
cmp
mov
ljmp
nop
jle
add
aam
push
pop
jno
out
in
cmc
and
loop
jae
imul
shll
pop
pop
pop
imul
xor
shlb
mov
push
push
nop
insb
xlat
mov
mov
test
mov
or
xor
pop
test
loope
call
adc
cmp
mov
aad
pop
jne
pop
outsl
push
test
stc
js
inc
in
sbb
scas
lods
mov
test
ss
mov
cmpsl
out
jbe
xor
or
ja
mov
jbe
nop
jne
loopne
xchg
ret
fisubl
aas
loopne
dec
add
dec
cmp
mov
mov
mov
gs
lcall
fmulp
mov
enter
pop
mull
jmp
mov
adc
lds
adc
dec
fidivs
out
sub
push
clc
xchg
xor
push
adc
lea
sub
push
cmc
incl
aaa
mov
cmp
xor
mov
cs
cmp
mov
fwait
jns
xchg
cmp
xchg
subl
stos
insl
stc
add
icebp
jl
mov
inc
xchg
jecxz
mov
pop
cld
mov
xchg
inc
or
lcall
loop
loop
jle
sub
mov
faddp
fimull
lcall
xor
ds
mov
or
push
fnstsw
cli
adc
js
in
cmp
and
popf
cmpsb
xchg
inc
out
xchg
sahf
cmc
inc
adc
pusha
int
or
and
cld
loope
sub
inc
les
pop
es
shr
aas
rcl
jp
shr
mul
cmp
inc
stos
shlb
xchg
int3
movsl
add
repnz
shll
push
sbb
repz
jp
pop
sti
push
aam
lcall
scas
jbe
sbb
hlt
jl
and
cmp
jecxz
into
mov
shrl
mov
leave
mov
cmp
rol
pop
jb
test
sarb
out
loop
out
les
out
lods
mov
mov
xchg
icebp
iret
inc
sbb
inc
jmp
inc
jp
aas
stos
dec
fwait
and
push
stos
clc
aad
test
sbb
and
shl
aad
int
mov
data16
daa
xchg
push
movq
xchg
lahf
repz
xchg
sbb
mov
test
cmpsl
pop
mov
mov
mov
add
add
lret
jmp
pop
pop
pop
sbb
dec
negl
sub
out
cmp
inc
int3
cmp
push
dec
mov
xlat
cmp
jge
fnstenv
std
aam
dec
xchg
lret
jne
lock
mov
adc
pop
push
sub
jle
mov
cmp
add
cmp
sub
int3
repnz
out
outsb
jo
inc
sub
adc
sub
hlt
outsw
inc
outsl
lret
mov
insl
inc
sbb
notl
jmp
sbb
jmp
dec
pop
ret
out
insl
adc
repz
pop
push
inc
pop
adc
enter
mov
jmp
mull
das
addl
mov
push
xor
inc
into
sub
push
mov
pushf
and
xchg
sub
jl
mov
std
mov
mov
push
movsb
inc
arpl
inc
cwtl
and
inc
popa
test
mov
fildll
pop
idivl
and
sbb
inc
pop
jns
mov
into
sub
xchg
xor
push
jge
push
sbb
in
lods
js
inc
mov
ds
sbb
add
xchg
movsb
mov
or
xor
pop
cmp
adc
mov
mov
ja
mov
push
cs
je
into
orl
sub
push
sub
dec
push
add
xor
and
mov
les
inc
shll
or
imul
cmp
orb
jle
shl
pushf
xor
mov
and
je
ret
arpl
stos
out
fisttpll
xor
pop
inc
xchg
add
pop
out
repz
loopne
jg
bound
lds
fstpt
pop
xlat
pusha
pop
cmc
inc
dec
jecxz
jecxz
xchg
adc
mov
loopne
loope
and
aad
push
repnz
popa
mov
mov
daa
mov
stos
mov
shll
adc
mov
inc
or
lods
jg
sub
or
cld
adc
roll
adc
bound
jns
jp
cwtl
std
xchg
lret
jae
xor
les
xor
add
or
cld
sbbl
lods
jns
sbb
inc
pushf
xor
xchg
testl
lcall
shlb
int
jl
push
bound
jno
test
movsl
sbbb
out
adc
lods
inc
repnz
popf
das
inc
inc
mov
fisttpl
push
sarl
mov
addr16
insb
nop
mov
das
xchg
jo
stos
dec
inc
jmp
lahf
nop
jmp
mov
and
xor
dec
and
les
jnp
out
pusha
or
ror
jno
mov
sbb
outsl
jmp
mov
andl
aaa
cmp
daa
inc
lds
and
pusha
jl
aad
pop
xchg
int
pop
hlt
add
lret
stos
or
lahf
std
push
popl
aaa
xchg
sbb
lret
adc
adc
push
popf
aaa
jg
movsb
mov
push
sub
cmp
jmp
push
pop
subb
lcall
lret
aam
and
data16
loopne
movsl
adc
dec
jno
out
xchg
aad
mov
sub
shll
fistl
and
mov
data16
push
push
test
jns
in
pop
mov
adc
xlat
cmpl
lcall
and
outsb
in
inc
jl
xchg
cmp
jmp
sarb
stos
pop
mov
fisttpll
outsl
arpl
adc
push
dec
xor
out
rcrb
jo
rcr
lods
insl
mov
sbb
mov
and
jnp
pop
jno
inc
sub
pop
sub
push
in
test
and
aad
jbe
adc
cs
cmp
daa
out
frstor
mov
xor
lret
mov
pop
in
pop
sub
repnz
xchg
cli
addl
xor
imul
out
or
imul
lods
dec
and
aaa
test
fwait
fs
loopne
xor
repnz
dec
pop
aas
in
xlat
aam
mov
das
and
jo
inc
lret
sbb
mov
popf
sub
repnz
cltd
push
adc
sub
add
lea
mov
lahf
popa
aas
fimuls
xlat
cs
fcoms
add
push
out
mov
popf
sbb
pop
mov
and
icebp
out
push
push
mov
inc
daa
inc
fcomps
mov
jne
fisubl
adc
cmp
mov
inc
push
jnp
or
mov
push
or
pushf
movsl
mov
int
int3
data16
imul
jb
enter
lret
and
add
jbe
aad
mov
hlt
adc
cld
xchg
lea
sbb
and
push
insb
sub
cmp
test
sbb
sub
mov
push
or
inc
sbb
loope
int3
mov
les
add
jae
xchg
jecxz
xor
test
cmpsl
sbbb
dec
xchg
xchg
cmc
pusha
icebp
and
das
sbb
fsubrl
sbb
jp
daa
and
mov
pop
icebp
test
inc
adc
xchg
cld
les
xor
fldt
xor
inc
xor
xlat
fldcw
xor
out
mov
dec
test
add
pop
add
or
dec
jmp
sbb
and
pop
mov
add
mov
orl
push
xor
xchg
mov
push
ret
roll
lcall
and
jle
cmp
je
popa
addb
sahf
loopne
jecxz
jp
fistpll
pushf
lods
movsl
popf
cmp
fisubs
xchg
jg
jae
shrl
push
push
dec
mov
repz
mov
sbb
jb
stos
es
sbb
xchg
cmp
and
andb
mov
or
push
fstpt
or
and
addb
decb
sbb
push
inc
mov
pop
or
je
aam
jnp
add
out
xchg
dec
int
mov
sub
jecxz
call
int
mov
aaa
sub
leave
cld
pop
xor
sbb
mov
dec
dec
jne
pop
inc
cli
pushf
stos
fwait
mov
adc
cmp
inc
pop
test
pop
dec
push
bt
inc
mov
mov
dec
jb
cmp
mov
sub
addr16
mov
jno
mov
repz
push
cmp
cmp
adc
pop
popf
in
ljmp
ljmp
jno
sbb
jmp
xor
jmp
nop
sbb
dec
mov
push
repnz
or
jmp
or
jbe
mov
std
jo
outsl
mov
xchg
mov
lret
sbb
pop
lahf
enter
ret
sub
movsl
out
xchg
mov
dec
out
mov
lea
scas
daa
xor
andps
hlt
fcoml
jl
mov
mov
add
arpl
mov
bound
or
out
jae
mov
test
in
ljmp
inc
pop
imul
in
and
mov
cmpl
sti
mov
clc
xor
mov
arpl
mov
fists
addl
rcrb
jb
xor
js
fmuls
and
arpl
pusha
adc
fldl
mov
insl
cmp
inc
push
dec
lods
dec
out
pushf
xor
aaa
hlt
pop
xchg
inc
push
imull
into
pop
bound
inc
movsl
pusha
dec
pop
bnd
aam
jge
jns
mov
fldcw
cmp
lret
in
or
sti
xchg
sbbb
stos
out
mov
aaa
int3
mov
lds
push
out
sbb
enter
rclb
mov
push
fnstcw
sbb
cmp
pop
or
mov
loope
inc
mov
mov
cwtl
lahf
clc
or
out
adc
xor
dec
jbe
dec
push
or
sub
hlt
popa
pop
pop
nop
push
mov
and
fwait
sbb
divl
xor
cld
sarl
cmp
jecxz
add
jl
xchg
push
icebp
in
js
jne
sub
insl
push
outsb
shlb
pop
fisubrl
jb
sub
jb
stos
orb
test
pop
push
fildll
mov
mov
das
sbb
call
loopne,pn
pop
ds
loop
dec
std
mov
cs
ret
sbb
int3
xor
lock
in
jbe
dec
adc
rolb
mov
nop
daa
adc
sbb
dec
sub
addr16
mov
sahf
cmc
inc
imul
push
loop
rol
add
call
sub
mov
loope
sahf
cmpl
rep
fisubs
lea
testb
lods
adc
sbb
mov
das
cwtl
les
jb
jecxz
xchg
sbb
xchg
xchg
xor
mov
jmp
add
lds
dec
rolb
scas
lock
repnz
sub
rcrl
or
pop
mov
sub
inc
adcb
inc
sub
iret
push
fs
inc
rol
jo
mov
mov
ret
movsb
cmp
xchg
xor
cmp
pop
sahf
xchg
xor
cli
xchg
sbb
inc
sbb
ret
das
cmp
arpl
push
les
mov
aad
mov
fiaddl
jno
mov
imull
jmp
xor
pop
das
icebp
add
jae
mov
mov
stos
jecxz
cmpsl
rorb
dec
push
jle
lds
dec
mov
mov
in
mov
cmc
mov
ja
or
out
push
inc
pusha
lock
fucom
xor
cli
in
loop
pusha
cltd
das
jb
xlat
fwait
scas
loop
repz
out
fstpl
dec
mov
dec
ror
xor
or
jno
inc
pop
mov
pop
aaa
dec
shll
orl
arpl
add
sub
dec
pop
repz
or
add
sbb
xor
push
shrl
jae
bound
out
sub
add
repnz
mov
push
mov
pop
push
jno
pop
adc
and
cmp
mov
adc
dec
adc
into
ds
xor
sbb
xchg
sub
mov
mov
jne
sbb
fwait
mov
icebp
enter
int
jnp
mov
xchg
ljmp
fdivr
jnp
lock
mov
lods
loop
nop
mov
ret
xor
or
rol
enter
mov
rcrl
out
pusha
fistl
jge
movsb
daa
push
xchg
mov
fsubr
mov
ja
mov
cmp
jmp
lret
lock
and
pop
lock
sub
aad
hlt
cmp
cmc
cmp
fmulp
arpl
sbb
and
or
xchg
sub
enter
push
test
enter
test
std
dec
or
add
mov
mov
out
mov
sub
dec
lcall
outsl
lods
jmp
icebp
subb
fnsetpm(287
mov
mov
push
in
adc
push
fcomp
sbb
dec
jle
mov
adc
or
lds
sbb
mov
andb
mov
icebp
jnp
fildl
pop
sub
adc
xor
clc
mov
sub
fbstp
sub
pop
jo
into
pop
cli
ljmp
xor
and
xchg
sub
inc
add
jae
cmpsl
mov
pop
sbb
dec
jae
popa
pop
jle
xchg
movq
push
cmpsb
out
lock
jp
ja
sbb
ds
push
out
xchg
mov
aam
cli
nop
cmp
pop
out
aad
cmp
jmp
fisttpll
shrl
push
jp
scas
pusha
mov
adc
mov
add
ja
mov
mov
ljmp
test
dec
and
inc
cmp
dec
and
add
data16
cmp
outsb
mov
fcomip
mov
aas
ret
fcmovu
xor
mov
dec
inc
icebp
and
test
inc
test
sti
lret
xchg
ss
lret
test
cmpsb
dec
movsl
pusha
mov
gs
or
xorb
mov
xchg
xchg
mov
dec
clc
iret
pop
pop
ds
mov
out
pop
jae
jae
inc
cmp
aas
xchg
fwait
and
lcall
je
cmc
jge
sbb
call
pushf
stos
push
and
pop
out
insb
xchg
jno
popf
andl
mov
cmp
sar
inc
fstps
push
pop
inc
pushf
and
sbb
in
arpl
in
pop
dec
idivl
sub
lock
sbb
add
xor
xchg
jbe
stos
sub
jecxz
xchg
loope
divl
pop
lds
mov
xchg
movsb
nop
lods
aad
sbb
pop
repnz
pop
sbb
pop
mov
out
pop
inc
bound
mov
jl
stc
ljmp
ret
mov
fdivl
mov
mov
aam
bound
push
cmc
sbbl
xor
fdivrl
push
mov
xor
test
jecxz
rcpps
nop
cmp
lock
mov
pop
sub
push
sbb
cmp
jecxz
loope
pusha
mov
imul
xchg
out
test
or
mov
and
imul
loope
ret
fidivrs
xor
pusha
movsl
ret
std
xchg
call
dec
cmpsb
xchg
jge
or
into
pop
or
lcall
pop
call
jge
xchg
cmp
andb
gs
mov
les
cmc
dec
fidivl
popf
pop
cmc
sbb
lods
jg
std
sbb
xlat
push
inc
mov
mov
out
sbbb
mov
xchg
pop
out
repnz
jmp
dec
mov
add
pop
rol
cmpsl
cmp
mov
fmul
jne
cmc
vucomisd
mov
xor
pop
push
aas
xchg
adc
inc
scas
mov
ret
fcoml
je
pop
andb
xlat
or
cs
pushf
movsb
mov
dec
fwait
and
mov
and
xor
push
movsl
adc
sbb
xor
daa
sub
jg
and
movsb
xchg
mov
sbb
scas
inc
or
push
int3
arpl
es
mov
mov
mov
xor
cmp
test
fdivs
mov
or
mov
push
repnz
dec
mov
add
adc
int
push
int3
xchg
xchg
xor
testb
mov
ret
js
je
ror
sbb
inc
aas
movsb
insl
lock
pop
xor
pop
mov
out
mov
js
rcrl
inc
in
imull
or
sbb
ret
inc
add
dec
pop
mov
test
sbb
and
pop
cmpsl
leave
loopne
inc
xlat
arpl
sbb
push
repnz
add
dec
cmp
jg
dec
pusha
cld
std
mov
push
sbb
adc
nopl
jecxz
pop
mov
in
dec
pop
or
dec
mov
mov
mov
aam
mov
ja
aam
add
mov
es
mov
inc
rolb
pop
hlt
aam
lock
mov
add
cmc
rol
push
add
cmpsl
xor
dec
fiadds
jg
lret
mov
xor
arpl
mov
sub
arpl
dec
lret
mov
adc
mov
xor
inc
or
les
pop
fldl
mov
lcall
loope
jmp
aaa
sub
decb
das
bound
push
sub
arpl
into
in
and
ljmp
rclb
or
scas
mov
int
or
xor
dec
jae
shr
add
insb
out
js
cwtl
inc
inc
ret
or
jo
scas
lock
ljmp
cmc
dec
in
sbb
sub
adc
inc
inc
call
js
inc
loop
negl
out
sbb
fists
mov
add
cmpl
test
inc
or
xchg
mov
icebp
mov
scas
mov
movsl
mov
mov
push
popa
xor
and
leave
xor
xchg
cmp
in
xchg
sub
pop
adc
mov
test
xchg
mov
cmpsb
popf
sbb
insb
scas
lahf
mov
adc
adc
jle
cmp
loop
or
cmp
add
es
test
cmp
fsubrs
xor
and
lea
xor
sbb
push
testb
mov
mov
int
pop
push
filds
pushf
mov
sbb
xchg
xchg
dec
repz
xor
das
cmp
or
ss
mov
dec
jns
jp
daa
decb
pusha
and
or
bound
mov
ficoml
or
aas
cwtl
out
fdivrl
cli
xchg
bnd
xchg
xchg
mov
daa
fdivs
xor
cmp
and
aam
fwait
lds
dec
daa
cwtl
repz
xor
pop
cmp
mov
dec
lock
mov
mov
push
mov
inc
mov
sarl
push
push
cmc
mov
inc
jecxz,pt
sahf
shl
imul
and
mov
or
xchg
fwait
jb
movsb
lds
xchg
pop
lea
cwtl
aaa
sbb
mov
cmp
inc
pop
imul
push
pop
jecxz
pop
std
aam
sub
sub
or
xor
dec
dec
cmpsl
addr16
push
daa
test
scas
inc
jnp
hlt
or
adc
mov
popf
xchg
inc
push
mov
pop
lret
enter
cmp
sbb
or
out
add
frstpm(287
in
pop
xchg
dec
mov
and
fwait
les
test
xchg
pop
push
xor
mov
sti
xchg
into
pop
cltd
push
fisubs
cwtl
repz
iret
icebp
lock
mov
sub
xor
insb
pusha
and
mov
orl
or
stos
pop
daa
mov
pop
dec
inc
popa
mov
shlb
sbb
xor
stos
adc
movsl
fnstenv
adc
add
mov
je
add
cmpsb
lcall
xchg
fs
mov
add
inc
ror
sarl
push
push
jae
inc
int
cli
test
adc
ljmp
mov
int3
lret
out
xor
das
in
stc
sbb
adc
cmpsl
mov
mov
dec
es
pop
xchg
bound
insb
inc
rolb
mov
or
fimull
push
mov
fwait
inc
or
mov
ja
inc
jecxz
enter
cmp
xchg
dec
xchg
adc
fsub
test
jle
fbld
push
pop
stos
inc
lea
or
sbbl
out
pop
jge
cwtl
scas
jp
cmpsl
cmpsb
rcll
add
mov
std
insl
in
gs
push
lods
dec
pushf
cmpsl
aad
in
push
or
mov
ficoms
hlt
xor
push
hlt
negl
scas
movl
push
jecxz
sub
lock
or
ss
sub
dec
adc
push
mov
jmp
aaa
sbb
sub
mov
push
sub
ret
xchg
icebp
sbb
loop
fldl
mov
push
cmpsb
leave
xchg
push
das
cmp
lahf
push
pushf
das
leave
cmp
ss
adc
ss
out
ss
mov
leave
xor
loope
imul
cltd
rcrb
xor
fucomip
popf
addr16
mov
mov
add
jo
imul
cwtl
sub
mov
lret
cmp
lods
sbb
pop
mulb
add
xchg
test
mov
daa
cmp
pop
cmp
idivl
shlb
jnp
push
xchg
je
in
push
lcall
scas
mov
mov
js
adc
cmp
push
pusha
aas
shlb
jmp
loop
test
int
jecxz
dec
xchg
inc
mov
negb
cmp
xchg
sbb
xchg
movsl
scas
call
movsl
pop
outsb
pushf
jp
pop
rcr
fsubr
sbb
loope
dec
pop
xor
xor
jne
test
xor
mov
aad
push
push
fs
inc
popa
fs
adc
mov
pop
lds
push
data16
stc
xchg
xchg
stc
stc
orl
pushf
or
or
jne
sub
lea
or
subl
mov
add
dec
test
jb
xchg
xchg
xchg
outsl
lahf
add
imul
repz
push
push
repz
maxps
inc
jmp
jge
popf
mov
ret
cmp
or
dec
pop
mov
loope
or
loope
insb
cmp
mov
xchg
add
xor
aam
xchg
mov
and
in
dec
push
mov
vpavgw
inc
les
loop
sub
push
adc
gs
jp
push
mov
pop
lret
fucomip
stos
sub
shr
jb
mov
fstps
movhps
call
lret
jne
jmp
out
nop
fsubrs
dec
add
dec
mov
pusha
lret
outsl
push
or
inc
int
nop
test
cs
xchg
clc
mov
xor
sbb
leave
sarl
xlat
ljmp
cs
icebp
out
dec
mov
shll
das
push
sbb
lds
jmp
mov
leave
test
or
mov
push
cs
push
jo
cmp
push
xchg
ret
pop
mov
out
pop
loop
rol
insl
daa
fyl2x
xchg
dec
ret
mov
cmc
and
insb
test
lret
add
enter
pushf
pop
sahf
xor
pushf
mov
cltd
pushf
push
pop
pop
out
pop
repz
push
iret
mov
dec
out
add
pop
hlt
addr16
xchg
xchg
mov
in
inc
push
sar
mov
jg
and
fdivl
cmc
mov
aad
push
aam
dec
fisubs
adc
lcall
dec
clc
pop
in
test
xor
dec
or
in
sbb
and
and
and
cmc
jo
imul
stos
imul
cltd
mov
cmp
fstpt
xchg
in
or
aaa
mov
cmp
pop
fwait
sub
mov
jecxz
fmull
cli
scas
jle
mov
sbb
and
into
push
mov
imul
and
jo
jp
pop
push
lods
add
in
push
dec
fdivrs
sbb
add
mov
cmpsb
test
mov
outsb
sub
je
not
repz
xchg
sub
out
jbe
jg
repz
pop
add
xchg
cs
fidivs
pop
add
daa
outsb
add
dec
dec
dec
aam
or
xor
pop
mov
dec
fs
jp
adc
fsubl
or
mov
sbb
jno
add
into
cwtl
stos
rorb
std
cmp
inc
fnsave
cmpsl
cmovbe
int
pop
icebp
push
mov
and
adc
mov
fdivs
repz
pop
fmuls
xchg
mov
pop
sbb
xor
lds
bound
adcl
mov
mov
mul
jne
dec
xorl
mov
dec
js
lahf
inc
cmp
imul
sbb
test
jno
jnp
ret
sbbb
lea
add
jmp
shl
mov
and
fisubl
mov
adc
inc
repnz
jmp
xor
movsl
hlt
push
mov
xchg
sbbl
sub
lcall
push
or
lret
xchg
lods
add
arpl
xor
and
sub
test
jl
movsl
data16
or
repz
iret
js
pop
outsb
ret
jb
xor
adcl
mov
mov
lods
add
cmp
adcb
jae
out
mov
sbb
insl
mov
inc
jbe
pop
or
mov
mov
inc
cli
cltd
push
les
mov
pop
je
in
xor
leave
fistl
pop
repz
icebp
fstps
push
dec
sti
sub
sub
xchg
and
dec
ljmp
jle
add
imul
xchg
in
dec
push
paddq
std
xchg
int3
shrb
repnz
jge
push
sbb
mov
cmp
add
cmp
pop
repnz
roll
dec
pop
or
inc
lret
out
pop
add
xchg
sub
mov
xor
test
fildll
push
dec
jbe
movsb
addr16
mov
pop
and
fucomp
lcall
lahf
in
inc
sbb
mov
adc
push
jmp
rorb
rcrb
cltd
xor
jl
rcl
in
xor
mov
lock
push
ss
or
iret
gs
scas
fnstsw
leave
jg
push
lahf
mov
cmp
pusha
fcomi
nop
cmpsb
cmp
insl
sbb
les
adc
imul
scas
mov
ror
orb
add
cmp
pop
jne
fbld
mov
mov
mov
pop
ret
ds
inc
cmp
out
cwtl
rcrb
lods
mov
sti
fsubs
mov
pop
popa
andb
jmp
and
pop
fimull
mov
test
aam
xor
xor
fnstcw
adc
dec
fidivrl
pop
adc
in
mov
or
pop
push
fimull
push
clc
mov
sbb
cmpl
lret
pop
or
dec
jecxz
ret
popa
or
dec
push
lahf
lds
sti
or
cltd
inc
ss
in
loopne
fwait
push
call
sub
ja
fadds
push
js
adc
and
int3
xor
std
int
push
push
aad
push
xchg
jb
dec
mov
je
loope
stos
xchg
mov
xchg
mov
dec
add
out
shl
add
mov
sahf
subb
inc
dec
jb
fwait
sub
fwait
cmpsb
jmp
imul
push
jp
pop
push
lea
inc
shll
jge
clc
xchg
cmp
test
xlat
cmp
pop
push
fisubrs
call
loop
arpl
scas
fcmovne
fdivr
sti
cmp
and
ret
push
pop
push
repnz
jmp
icebp
lret
outsl
jnp
push
or
ret
call
jo
push
imul
pop
xchg
sub
outsl
add
or
adc
push
or
push
sbb
out
sbb
ss
push
pop
xor
push
sysenter
cli
push
out
pop
xchg
adcb
or
out
int3
xor
cs
pushf
mov
das
int
cmp
pop
ljmp
aas
enter
xchg
adc
cli
inc
xchg
sbb
ficoml
mov
cltd
push
sbb
mov
fnstsw
clc
inc
andl
xchg
mov
jo
push
in
push
popf
pop
push
or
jae
jmp
mov
lcall
and
cltd
ss
push
or
fldlg2
xchg
in
mov
xor
and
dec
repz
sbb
inc
stc
hlt
xchg
and
mov
add
jb
xorl
je
or
fs
mov
jmp
and
add
ret
add
pop
int3
insl
ffree
jg
imul
dec
jne
repnz
mov
call
xor
ret
inc
fsubs
sub
out
push
or
stos
daa
inc
xchg
lret
dec
loop
adc
mov
sbb
in
dec
in
jle
imul
jnp
mov
mov
loope
pop
mov
add
and
mov
inc
mov
adc
mov
push
mov
pop
inc
pop
mov
jb
stos
cmpsb
cmp
fisubrs
push
jb
dec
cmp
clc
movsb
xchg
lea
sarb
je
dec
andb
xchg
mov
xlat
xchg
stc
insl
mov
outsb
cmc
or
mov
lock
repnz
adc
gs
xchg
ss
insb
inc
in
test
mov
and
pop
push
fistpll
cmc
jo
daa
dec
cmp
mov
jb
jg
test
stos
inc
xor
arpl
sbb
movsl
sub
xor
je
notb
xchg
adc
movsl
push
push
pusha
imul
pop
insl
xor
jg
pop
mov
dec
pop
mov
aas
cmp
rclb
sub
pop
xchg
sarb
int
addr16
ljmp
adc
cmp
xor
mov
or
or
cs
ljmp
insl
jb
stos
push
ljmp
insb
out
push
scas
adc
jnp
and
pop
mov
or
cs
push
mov
sbb
popf
insl
test
xchg
daa
push
cltd
sub
cmp
sbb
rorb
mov
inc
fstps
aad
cmp
sahf
mov
cli
push
andl
or
cwtl
stos
inc
insl
cmpsb
stc
pop
mov
mov
adc
fimull
or
mov
mov
dec
sbb
scas
das
mov
dec
int3
sbb
jge
push
scas
xchg
popa
call
iret
and
xor
arpl
push
insl
aaa
xor
sub
movsl
push
sub
fucom
xor
movsb
adc
and
cltd
in
cwtl
or
lcall
push
cmpsb
inc
insb
add
fldl
xchg
dec
les
mov
ficoml
mov
mov
sahf
hlt
mov
stos
out
cmp
pop
int3
xchg
sub
mov
mov
icebp
jle
mov
sub
mov
mov
xchg
add
bound
jb
aaa
fbstp
fwait
aad
or
das
cmc
mov
daa
mov
jo
mov
pop
das
cmp
loope
add
lret
mov
dec
or
push
dec
addl
jnp
adc
mov
hlt
adc
test
mov
sub
repnz
fwait
sbb
add
test
mov
fnsave
jg
aas
dec
cmp
or
mov
jns
jne
xor
fsubs
dec
pop
ja
outsb
add
pop
or
pushf
dec
aas
pop
xor
cmp
pcmpgtw
out
fcomps
inc
in
jbe
adc
xchg
test
mov
cmpb
and
imul
hlt
icebp
aaa
xchg
stos
xchg
push
dec
pop
jl
in
ss
pop
cmovg
add
add
mov
xchg
jno
ret
sti
imul
mov
fisttps
sbb
dec
lahf
arpl
in
outsl
ljmp
outsl
mov
aam
and
dec
shrl
xor
dec
mov
hlt
iret
mov
stc
cmp
scas
idivb
orb
jb
jne
cmpsl
lods
arpl
cltd
inc
inc
lret
mov
idivl
sahf
nop
push
add
icebp
movsl
pop
clc
jge
popa
jns
sahf
jne
int3
inc
mov
mov
push
fptan
mov
push
shrb
cmp
imul
and
inc
fisubrl
or
in
sub
repz
fsubrs
add
lcall
mov
addr16
xchg
push
in
std
push
divb
lret
lcall
push
mov
or
cmpsl
and
sahf
out
xchg
out
rorb
xchg
mov
cmpl
jne
aaa
pop
rorl
jp
dec
in
pusha
sbb
mov
decl
inc
ljmp
out
sbb
iret
and
test
add
movsl
lahf
xor
pop
scas
repnz
sarb
add
fdivrl
dec
lret
mov
addb
int3
lret
or
lcall
and
push
lods
jg
push
jg
or
in
mov
mov
ljmp
cmc
ret
mov
insb
jl
jle
rcl
mov
inc
pop
nop
dec
pop
mov
jmp
xor
dec
loope
jnp
mov
pop
mov
popf
add
jno
dec
xchg
push
push
loop
test
jbe
lcall
fxch
pop
jecxz
mov
fnstenv
cmpsl
mov
sub
dec
or
push
pop
lahf
aad
clc
lock
adc
lret
xor
sub
adc
or
frstor
gs
sub
jmp
mov
push
daa
inc
imul
lea
sbb
in
stos
inc
jno
jnp
popa
fsubr
test
inc
mov
jbe
mov
jmp
subl
sbb
loop
jle
fsubrp
xchg
cld
test
xchg
pop
stos
dec
pop
mov
aas
nop
push
xchg
mov
mov
mov
faddl
adc
lcall
das
pop
ret
mov
subb
stos
or
push
rcll
mov
mov
sbb
pop
pop
xor
out
mov
adc
dec
loope
and
push
movsl
aad
add
mov
jg
sub
stos
push
xchg
push
mov
fstpt
xlat
sahf
xor
movsb
scas
inc
out
or
ljmp
out
cmp
and
popa
add
das
mov
lods
xchg
in
pusha
cli
mov
and
push
das
scas
adc
adc
cltd
push
int3
mov
aam
stc
add
xorb
push
call
push
jmp
push
fbstp
sbbb
inc
aam
dec
mov
push
jbe
add
js
loop
js
aam
pop
inc
enter
out
mov
fs
cmp
scas
out
js
mov
xchg
enter
mov
and
sbb
pop
aam
and
clc
loope
cmpsl
mov
or
xchg
pop
fistps
jecxz
mov
adc
shll
int3
pop
jecxz
fbstp
adc
fldt
jge
in
pop
rclb
mov
call
jno
push
sub
dec
mov
pusha
fldenv
jp
insl
out
js
mov
xchg
push
addl
mov
int3
mov
mov
jne
aas
sbb
aad
push
jge
add
jb
addr16
xchg
mov
cmp
test
pop
es
stos
add
aam
lds
and
arpl
xchg
or
out
scas
pusha
cmp
fwait
jb
or
jge
mov
and
xor
aaa
stos
loopew
lret
sarl
arpl
mov
adcb
dec
xlat
scas
into
orl
xor
clc
mov
sti
mov
ret
pop
pop
mov
lea
mov
sbb
pop
lds
adc
sbb
and
out
push
outsb
jg
xchg
pusha
mov
movsl
adc
ret
cwtl
cmpsl
hlt
push
sar
out
push
imul
dec
inc
or
adc
in
xchg
xor
adc
clc
clc
dec
sbb
mov
scas
andl
pop
iret
lea
fsub
addr16
cmpsb
popf
push
mov
sub
dec
jns
lea
push
inc
xchg
adc
mov
adc
push
mov
mov
lret
sti
adc
or
loopne
inc
in
inc
push
lcall
push
xchg
pop
out
add
loope
lods
adc
mov
insl
mov
dec
mov
aam
xchg
mov
test
lods
les
jp
icebp
jmp
rcl
xor
jge
sub
mov
jnp
std
jl
sub
pop
add
add
jbe
repz
mov
loop
out
push
mov
mov
xlat
outsb
inc
test
fisubrs
mov
subl
int
or
adc
mov
pusha
mull
xchg
cwtl
leave
lcall
repz
cld
gs
in
mov
pushf
xor
push
aaa
into
cmpsb
cmp
push
rolb
imul
sbb
in
loop
mov
mov
cmp
sub
sbbb
add
pop
jbe
sub
or
or
pop
push
sbb
addb
data16
mov
xor
jns
pop
dec
add
loope
xchg
jne
pop
xor
cmpsl
adc
push
push
vcvtpd2psx
and
or
inc
enter
movsl
cmc
mov
sbb
stos
dec
repz
loop
enter
add
lcall
call
out
pushw
sub
adcl
aad
stos
xchg
jle
inc
inc
push
call
jno
in
push
inc
xchg
pop
loope
jb
in
and
sub
mov
imul
popa
xor
loope
push
js
add
out
inc
xor
cwtl
dec
sbb
push
fdivl
iret
int
scas
push
mov
lret
stos
xor
ljmp
mov
rclb
fimuls
dec
pusha
jl
inc
movsb
mov
inc
popa
stos
leave
or
jae
lods
xorl
setl
in
sahf
sub
pushf
stos
stos
push
sub
cmpsl
xchg
mov
inc
sbb
sti
jp
dec
mov
dec
push
inc
sbb
mov
pop
inc
movsb
mov
mov
aam
jns
notl
xlat
inc
add
mov
jge
pop
jl
inc
ret
scas
fnstsw
lods
js
scas
xchg
jns
jecxz
stos
cltd
lret
mov
xchg
sbb
cmp
jmp
pop
add
and
idivb
sub
outsb
mov
mov
addl
int
adc
int3
inc
push
jo
adcl
add
fstps
adcb
xchg
xor
add
mov
push
rorl
cmp
add
mov
dec
or
movsb
js
ds
lds
sbb
sub
or
fbstp
xchg
daa
push
lds
mov
into
add
call
loopne
mov
aas
shrb
fdivp
inc
in
test
xchg
imul
jle
in
std
ja
dec
dec
inc
je
pop
jg
xchg
mov
sub
mov
jg
jne
xor
cmp
fiaddl
xlat
neg
dec
pop
das
movsb
inc
push
shrb
mov
xor
stos
push
jo
push
or
lret
xchg
mov
js
lods
push
ret
cmp
ffreep
or
jp
pop
mov
cmp
push
mov
cli
inc
fistl
popf
test
lock
jge
aad
sti
and
xchg
mov
dec
dec
mov
push
dec
sub
out
push
mov
stc
push
inc
inc
xor
xor
arpl
sbbb
dec
push
lea
sbb
aam
imul
adc
rorb
jns
ret
cld
dec
push
sub
popf
ret
pop
adc
shl
and
test
mov
shll
out
dec
inc
icebp
daa
adc
testl
cltd
push
aaa
dec
pop
scas
mov
mov
cmp
addr16
push
insb
pusha
mov
xchg
inc
scas
fucomp
ret
sub
xchg
push
cmpsl
push
inc
or
les
lcall
fdivrl
push
jmp
pop
stc
push
push
outsb
subb
aad
mov
xor
sbb
in
js
sbb
add
mov
outsb
leave
mov
je
mov
cmpsl
popa
add
push
jge
xor
fistps
mov
testl
mov
push
add
mov
pusha
mov
push
jo
ret
push
out
test
jns
or
jp
ret
insl
xchg
fwait
data16
or
call
or
jo
xchg
cmc
aad
movsb
cmp
cwtl
jg
dec
mov
fidivrs
fsubs
or
imul
xchg
das
xchg
add
dec
xchg
cs
sub
xor
cmp
cmc
push
add
test
mov
gs
stc
inc
or
ss
insb
jl
xor
jae
jae
dec
stc
inc
jge
stc
nop
mov
dec
xchg
push
jmp
push
xor
or
test
in
xchg
dec
mov
andb
push
jg
or
push
pop
testb
cli
or
cs
sarl
xchg
das
xchg
adc
sbb
out
loopne
xor
inc
cmpsb
add
inc
and
inc
fisttpl
mov
pop
mov
or
lret
cmp
push
adc
gs
push
push
pop
pop
mov
ds
mov
cli
out
lret
cs
jmp
pop
xchg
into
xchg
fs
stos
lea
xor
pop
xor
add
scas
mov
add
lcall
jnp
icebp
adc
and
mov
pop
andb
mov
arpl
jnp
aas
sub
adc
fldl
mov
and
hlt
mov
rclb
stos
add
mov
add
push
mov
ret
adc
hlt
xchg
mov
fwait
addb
or
and
jns
add
psrad
sub
cmp
dec
dec
mov
mov
adc
shlb
cltd
lock
push
movsb
cli
add
dec
enter
lea
repnz
xchg
shlb
pop
je
ret
sbb
xlat
mov
cltd
aaa
movsl
sbbb
xor
les
rcrb
div
fisubrs
pop
lcall
inc
lock
jb
mov
xor
add
fs
xchg
pop
push
sahf
inc
je
bound
adc
jmp
popa
stc
push
stos
sbb
xor
jg
push
jae
adc
movb
sbb
jns
mov
orl
enter
sbb
ss
or
out
xchg
or
rorl
pop
sub
outsb
jg
push
dec
fisubrs
stc
insb
add
mov
popf
lods
pop
movsb
in
in
popf
jo
xchg
xor
jns
xor
add
stos
sbb
xor
jmp
mov
jo
sbb
adc
outsb
xchg
jge
clc
lods
xor
mov
mov
loop
or
mov
mov
pusha
ss
out
lret
add
cmpl
sub
cmpsb
add
pop
arpl
pop
pushf
jp
dec
sub
aam
cmp
cs
insb
stos
xchg
add
das
xor
popf
mov
in
push
leave
shll
pop
cmpsl
add
das
sbb
fstpl
orb
fbstp
adc
mov
fucomp
push
gs
and
ja
clc
mov
movsl
jp
jno
rol
in
dec
sbbb
pop
arpl
lods
cs
stos
mov
inc
daa
and
pop
pop
cmp
cmp
ljmp
push
lods
fwait
jo
xlat
pop
outsl
push
inc
jg
sbb
and
add
sahf
sbb
mov
xor
pop
hlt
mov
push
add
push
inc
push
int
sub
jae
pop
int
in
push
scas
cmp
xchg
xchg
repz
enter
push
stos
mov
jb
cld
add
sub
sub
sbb
and
std
cli
pop
dec
mov
xor
mov
pop
jmp
hlt
push
js
sbb
cmp
pop
mov
inc
push
gs
inc
adc
icebp
rolb
mov
add
cwtl
mov
popa
xor
cwtl
pop
xor
out
pop
push
aas
adc
xor
push
push
mov
jmp
or
aad
stos
and
mov
lods
insb
mov
sbb
dec
insb
jg
shl
sahf
push
mulb
inc
xor
out
test
jae
xor
pop
ficoms
lret
and
sub
aas
xchg
out
xchg
pop
ret
pop
clc
mov
test
xchg
iret
loope
sub
sahf
xor
xchg
sub
rcr
addr16
jne
mov
or
mov
jl
pop
sub
add
jmp
mov
imul
leave
leave
cs
out
sub
mov
dec
adc
cmp
arpl
into
insb
xchg
cltd
xor
fldl2e
cltd
hlt
mov
lret
loope
pop
loop
inc
xchg
inc
mov
push
stos
jg
inc
popf
int
xor
sub
jecxz
mov
shrl
mov
fwait
or
aad
or
ds
mov
pop
fcomps
mov
mov
jnp
push
push
jecxz
je
add
das
push
clc
outsl
cltd
lds
bound
test
out
inc
jmp
dec
das
dec
push
mov
icebp
jnp
das
test
repz
push
and
rolb
push
xorl
push
mov
in
mov
xlat
andb
clc
repnz
adc
aam
xchg
les
pop
push
inc
rcrb
dec
or
popf
pop
scas
in
movsl
and
add
mov
jg
pop
lods
movl
add
push
xor
fcomi
mov
data16
push
mov
push
mov
add
jle
aaa
xchg
xchg
lahf
or
mov
daa
inc
adc
adcl
mov
dec
mov
cmp
daa
inc
and
jbe
mov
pop
push
out
xbegin
seta
push
dec
inc
mov
cwtl
shlb
fsub
cmp
cld
shrb
jne
lods
stos
or
cltd
adc
mov
add
mov
insb
aas
outsb
andb
dec
mov
out
sub
pop
cmp
cmp
dec
pop
imul
ret
adc
loope
mov
enter
mov
js
inc
fdivrp
inc
adc
sbb
add
subl
test
pop
cli
xchg
dec
and
lods
lods
mov
rcll
subl
jne
add
mov
sbb
rolb
mov
lds
xorb
inc
pop
sub
xlat
je
xchg
outsl
aam
sbb
shlb
or
jno
xchg
arpl
shlb
or
pop
fucomp
cmp
mov
push
cmp
jo
int3
jmp
ret
stc
cld
das
dec
movsb
sbb
adc
ficompl
adc
or
test
cs
cmp
or
out
jnp
push
in
scas
sub
inc
xchg
and
jmp
sarl
mov
dec
mov
jns
cmp
and
xor
sarl
mov
js
and
dec
cs
jle
test
rcr
ret
jle
cmp
jle
jmp
test
sbb
gs
sarl
nop
test
shll
xchg
push
jle
pop
rcrb
rcl
negl
lods
and
stc
int
insb
xor
movsb
repnz
cmp
mov
aam
popa
inc
test
mov
les
adc
inc
pop
leave
jb
ds
and
xchg
cmp
sub
int3
loopne
adc
sbb
pop
test
mov
dec
shl
xchg
cmp
xchg
jecxz
fldenv
adc
pop
mov
cmp
jb
outsb
jb
cmp
adc
xor
enter
scas
loop
lret
add
pop
mov
fwait
sbb
hlt
pop
cmp
fnstenv
sub
shrl
js
dec
sbb
fldcw
sahf
pop
adc
shll
cwtl
ret
jle
pop
xchg
je
imul
xchg
xlat
push
inc
fmuls
ljmp
add
jecxz
mov
cld
push
cmp
aam
xchg
in
fmull
mov
in
xchg
scas
sbb
popf
fldl
inc
js
mov
int
xor
xor
fdivr
inc
or
ret
sub
mov
call
lahf
xor
xchg
sarb
roll
roll
and
and
mov
add
lds
jb
xor
push
enter
arpl
outsb
je
inc
arpl
push
divb
xor
js
mov
loop
into
xor
mov
push
jo
xor
testl
cltd
mov
hlt
dec
test
xchg
and
loop
mov
int3
or
ja
mov
mov
mov
cmp
mov
les
mov
inc
sahf
push
dec
in
call
loope
cmp
scas
xchg
push
dec
inc
ljmp
ds
adc
adc
mov
pmullw
xchg
jg
int
mov
jmp
xchg
js
loope
daa
push
notrack
fwait
xchg
pushf
popa
mov
stc
or
add
pop
mov
out
sahf
gs
mov
aad
fildll
fcoml
into
dec
inc
scas
jns
push
insb
hlt
mov
xchg
jge
stos
scas
push
add
xorl
lods
bound
ret
lods
xchg
out
sbb
inc
mov
pushf
cli
inc
in
push
jns
repz
pop
out
loope
jo
lret
sub
sub
mov
pusha
mov
or
ds
push
dec
negb
cmp
pop
jns
pop
ljmp
outsb
bound
dec
int
je
lahf
mov
in
inc
je
aaa
mov
arpl
out
stos
icebp
enter
jle
test
ret
push
loop
imul
rolb
aam
daa
sub
mov
pop
cltd
pop
sub
sub
inc
inc
xor
mov
xchg
stos
push
ret
out
sbbl
jp
fldl
das
push
sbb
fimull
xor
or
cmp
fwait
jge
nop
pop
outsl
rcll
daa
jecxz
dec
aam
mov
repz
jae
shrb
jnp
mov
mov
push
jg
rcrl
dec
es
imul
and
mov
jl
mov
iret
insl
scas
popa
mov
sub
add
mov
lcall
cmp
movb
cmpb
lret
in
hlt
sbb
arpl
and
cli
sub
ds
mov
incl
ljmp
es
mov
aaa
and
mov
xchg
xacquire
popf
sub
iret
stc
jmp
js
jmp
xchg
enter
or
mov
inc
ja,pn
dec
fnstsw
shlb
mov
xor
pop
lock
cli
lret
fwait
btc
and
stos
mov
ljmp
mov
sbb
insb
test
sub
hlt
mov
sub
mov
testl
imul
mov
dec
hlt
loopne
adc
jle
mov
imul
add
in
mov
aad
mov
jnp
aad
ret
sti
jne
mov
aam
or
push
lock
enter
jmp
stc
sbb
subb
and
popa
clc
add
scas
inc
fcomps
push
mov
jle
in
negb
aad
in
les
outsb
js
lahf
sbbb
mov
or
andb
jl
pop
mov
das
adc
xor
fldenv
pop
pop
or
mov
loopne
push
xor
sbb
outsb
xchg
inc
xchg
adc
pop
mov
or
fs
pusha
pop
push
pop
out
mov
cld
xor
pop
sbb
add
es
pop
or
xor
movb
je
cmp
rorl
adc
insb
add
xchg
xchg
push
jl
or
das
fsubrl
dec
aaa
cmc
std
inc
sbb
cmp
xor
lret
cmp
push
xor
pop
lds
lahf
push
inc
ret
insb
xor
fucomip
std
adc
out
lds
mov
ror
sub
mov
adc
shlb
pop
lock
rcrl
fwait
and
test
fcmove
scas
mov
leave
xchg
bound
addr16
fcompl
cmp
rcll
ret
ficomps
xor
adc
sahf
mov
cmc
pop
fiadds
inc
inc
lret
dec
bound
xchg
sarl
mov
sets
pop
xchg
xchg
jmp
les
pop
or
mov
sbb
test
insl
mov
pop
adc
push
dec
lods
stos
sbb
out
sbb
lods
dec
add
addr16
xor
fwait
int3
add
fists
mov
mov
bswap
sti
es
push
sbb
jnp
leave
gs
mov
dec
pusha
fldenv
pop
arpl
rorb
xchg
pop
aaa
or
pop
mov
xor
jecxz
inc
lods
test
sub
xchg
pusha
jp
push
sbb
mov
lods
xor
and
ds
jl
inc
scas
mov
or
xchg
insb
cmp
push
mov
pop
jecxz
dec
mov
push
lea
aaa
mov
call
xchg
jmp
inc
pop
jns
lods
and
sub
lock
cli
jne
arpl
dec
push
inc
push
mov
jge
cltd
out
out
shl
adc
imul
cmp
lahf
push
fisttpll
push
lods
outsb
add
xorl
xor
add
out
fs
aam
dec
jmp
pop
fisttpll
adc
cld
mov
test
or
dec
es
das
push
sub
ljmp
sbb
dec
xor
call
cld
push
mov
adcl
imul
ds
mov
movsl
icebp
pop
mov
mov
mov
pop
jno
sarb
jmp
xchg
add
mov
adc
push
decl
in
out
test
add
arpl
cs
aam
fcmovb
lods
and
inc
push
or
add
sbb
pop
mov
or
lea
lidtl
testb
cmp
dec
sbb
or
subb
loopne
sbb
insb
dec
mov
aam
mov
bound
pop
scas
jae
mov
pusha
sarl
sbb
or
fidivs
out
in
xor
popl
fnsave
popa
aas
adc
and
push
js
or
mov
or
rcr
jne
rorb
fsub
xchg
imul
and
in
xor
mov
cmc
jmp
cmpsl
mov
push
imul
push
sahf
cmp
call
pop
jecxz
pop
shrl
ja
sti
iret
jp
pop
jno
adc
shr
and
inc
mov
out
sahf
mov
fldenv
aas
mov
adc
jno
leave
outsl
dec
test
aas
inc
imul
lahf
adcb
jb
lods
int3
pop
adc
clc
xor
xchg
mov
clc
inc
shll
push
loopne
mov
pop
mov
xor
sahf
or
sub
adc
xchg
jb
jmp
ss
jo
xchg
mov
mov
mov
xchg
lea
in
xor
jno
cmp
cmp
das
fnstsw
or
imull
pop
loope
enter
lcall
in
mov
int
leave
lods
push
lock
popa
loopne
cmp
test
dec
xchg
rclb
test
cmovp
pop
mov
insl
gs
mov
fs
or
pop
sub
shrb
mov
out
popa
xor
pop
pop
sti
lods
push
scas
push
in
mov
xor
jmp
out
aam
nop
lcall
or
ss
aam
iret
pop
sub
mov
dec
aaa
jno
push
insl
xchg
outsb
fucomp
adc
xchg
rcrl
scas
pop
mov
fsubrs
and
rcll
mov
leave
fmulp
fs
enter
loop
fmul
lods
add
xchg
xor
sbbl
jl
repz
or
mov
rcr
add
cltd
pop
xor
pop
sbb
add
push
orl
leave
aam
sbb
jae
lock
mov
lea
repnz
stos
inc
out
and
ret
rorl
jns
sbb
jne
xchg
or
push
adc
add
insb
jle
jae
push
mov
lret
mov
repz
cli
sub
push
js
jns
xlat
sahf
shl
mov
outsl
pop
cmp
out
jb
lods
push
adc
cmp
daa
orb
mov
call
sbb
inc
test
mov
sarb
inc
insb
xchg
mov
cmpsl
sbb
iret
push
cld
jmp
fsubrp
push
push
jle
sbb
cmp
lods
insl
clc
pop
mov
and
hlt
mov
sub
pop
sti
inc
mov
add
fwait
jb
test
xor
shlb
push
lcall
jbe
jge
cltd
data16
jge
test
add
ja
fbstp
rclb
jle
ja
pop
xor
and
xlat
lds
shrl
mov
xchg
add
or
jmp
xorb
mov
fdivl
push
push
jnp
adc
xchg
cmpsl
mov
imul
aas
or
add
xor
out
mov
xchg
jl
out
or
cli
test
into
fdivs
xchg
cmp
add
adc
inc
es
and
push
dec
leave
jecxz
je
test
cld
nop
daa
cs
add
inc
push
push
test
push
adc
cmp
movsb
popf
icebp
pop
and
pop
mov
in
stc
mov
add
dec
test
scas
mov
mov
pusha
notl
jecxz
cmp
lds
pop
jns
jge
sbb
and
std
push
ja
sahf
outsl
and
int3
mov
imull
lea
stos
ret
push
mov
push
fisttpl
or
outsl
push
out
rolb
orl
mov
xchg
and
or
sub
push
mov
data16
jo
cld
pop
mov
movsl
ret
add
icebp
in
sub
js
dec
cld
pop
and
pop
lock
cwtl
and
iret
mov
aad
arpl
push
inc
pusha
mov
push
arpl
daa
icebp
pop
or
xor
lds
out
push
loop
lcall
rorb
mov
pop
sub
imul
pop
jge,pt
xor
xchg
out
xor
sbb
stc
mov
mov
aaa
fcoml
adc
mov
mov
mov
ja
jl
xchg
shrb
jecxz
mov
roll
mov
ret
cmc
cltd
ret
ret
fbstp
sub
int3
outsl
jae
xor
xchg
pop
imul
decl
or
and
and
pop
xchg
push
fmuls
mov
insb
sbb
mov
add
je
scas
and
addr16
hlt
add
xchg
cmc
xchg
test
inc
push
xchg
xchg
outsl
xor
sbb
aaa
adc
lcall
cs
shrl
mov
js
xchg
aad
cltd
das
pop
push
in
xor
adcb
sbb
xchg
mov
fisubs
ja
add
xor
push
leave
stos
inc
cli
popl
pop
int3
es
iret
movl
pop
movsb
repnz
outsb
xchg
cmpl
mov
cmpl
push
push
mov
addr16
fnstcw
imul
jg,pn
cltd
inc
fmul
shrl
rorb
adc
cmp
sarl
push
scas
clc
or
mov
cmp
add
push
mov
add
and
cmc
jp
rorb
shr
call
jmp
movsb
inc
fwait
loope
dec
dec
pop
dec
mov
xor
xchg
or
scas
jae
adc
ljmp
aaa
shr
mov
nop
and
cltd
lock
stos
je
out
lods
inc
mov
pusha
adc
push
inc
cmp
out
xor
ficompl
adc
jmp
es
movsl
cmp
pop
clc
dec
mov
sub
xor
inc
jecxz
out
stos
add
jne
jmp
xchg
dec
xlat
mov
lcall
movsl
aad
xor
jnp
or
add
mov
loop
mov
mov
jo
mov
push
add
insb
push
mov
pusha
jge
push
jp
insl
and
daa
dec
inc
mov
repnz
in
sbb
test
xor
xchg
stos
and
jmp
addl
lret
mov
jae
ficoml
sbb
cmp
fidivl
std
cmc
push
lcall
xchg
rcl
lret
xor
xchg
fldpi
xchg
das
insb
push
sub
pop
sub
pop
subb
in
mov
push
pushf
movl
lock
adc
adc
sbbl
jle
xor
imul
mov
stos
fildl
and
arpl
and
mov
xor
sub
rcr
lcall
popf
and
inc
sahf
outsb
rcrl
rep
xchg
push
fiadds
sti
push
jp
mov
add
popf
ljmp
inc
jbe
cmp
mov
mov
push
mov
jle
out
cmp
mov
cmp
pop
dec
test
push
adc
sbb
push
xor
rol
hlt
cwtl
mov
addr16
sub
push
movsl
inc
leave
mov
inc
push
lods
shlb
int3
push
mov
jns
loopne
data16
test
pop
ds
hlt
iret
adc
xlat
es
test
mov
jmp
or
scas
mov
sti
jbe
outsl
sbb
mov
into
jns
daa
mov
jae
add
jg
loop
enter
insb
sbb
jl
scas
setne
jnp
pop
sti
arpl
adc
in
out
call
adc
pop
or
dec
cmp
sub
rcrl
mov
enter
cmp
cs
inc
jge
int3
cmp
iret
push
adc
mov
push
aam
xchg
lahf
lods
cmp
add
mov
hlt
mov
stos
setg
cltd
or
dec
mov
add
cmp
inc
pop
add
fdivr
je
mov
sar
dec
xchg
lcall
pop
mov
mov
shld
sub
pop
les
push
add
cmp
enter
sbb
test
dec
cltd
leave
loop
inc
pusha
sub
sub
pop
out
push
addr16
out
scas
dec
mov
pop
stos
and
lret
xchg
cmp
cmp
jb
into
psraw
imul
xchg
jno
sub
fmul
ljmp
jnp
sub
jns
add
sub
outsb
pop
ficoml
xchg
push
sub
mov
cmpsb
popa
pop
dec
addr16
aam
dec
add
jp
pop
sub
mov
or
icebp
fadds
pusha
or
push
arpl
int3
stos
xchg
into
scas
mov
cs
cmp
outsl
pop
loope
test
cmpsb
jmp
mov
subb
fcmovne
mov
insl
ret
testb
jnp
nop
rol
out
push
sbb
xor
xchg
stc
push
fimuls
ljmp
push
ljmp
dec
add
popa
push
jle
mov
mov
mov
jo
and
adc
jb
andl
or
adc
stc
pop
sti
push
int3
dec
jg
dec
hlt
inc
sbb
and
imul
xchg
out
and
imul
imul
fisubl
test
fs
out
jl
push
out
pushf
scas
inc
pop
inc
bound
notb
xchg
loop
jns
les
jbe
add
clc
cs
and
jnp
lret
cwtl
mov
adc
insb
arpl
fsubl
je
mov
xchg
dec
cld
pusha
movsl
insb
ror
out
mov
out
mov
jge
call
insb
sub
sahf
cwtl
add
aaa
test
shll
inc
push
sbb
dec
ljmp
je
adc
test
push
push
cmp
xor
xor
cld
cwtl
das
cs
mov
xchg
mov
in
mov
mov
sbb
add
xchg
jne
xchg
mov
out
orl
gs
mulb
aad
roll
add
pop
mov
inc
add
call
inc
dec
loopne
sti
cmp
xchg
ja
lods
test
or
ja
and
rcrl
inc
xor
out
ljmp
cmpsl
dec
xchg
jae
dec
insl
sub
jl
xlat
mov
cmp
insb
icebp
inc
add
add
lahf
cmp
enter
fs
scas
cmpsl
xchg
lret
ss
sbb
inc
cmp
andl
nop
and
push
mov
test
inc
mov
dec
jno
fiaddl
out
int
jb
lea
jo
and
in
cmpsl
mov
xor
testb
jge
jno
out
fidivl
daa
ja
enter
xor
ret
mov
sub
cmpsb
lock
lods
dec
clc
pop
add
cmpsb
mov
lea
mov
js
push
call
repz
call
rol
fdivrp
cmpsb
int3
adc
ja
mov
cmpsl
mov
sbb
jns
jns
movsb
stos
inc
test
xor
aaa
pushf
xchg
adc
push
ds
cld
fwait
out
aam
aaa
xchg
fists
aam
sar
lea
dec
xchg
mov
dec
mov
dec
cwtl
adc
mov
cmp
pop
je
outsb
das
int3
mov
mov
arpl
ror
mov
or
cld
sub
push
and
dec
das
xor
or
test
mov
mov
mov
dec
stos
jno
test
dec
jl
xor
lods
mov
pop
test
into
cmp
repz
push
cmp
or
inc
jne
cmpsl
sub
shll
cmp
and
rcrl
fsubl
jl
or
call
jns
or
out
mov
iret
in
push
mov
sbb
sub
inc
pop
and
cmp
shrb
insl
mov
shrb
inc
imul
in
enter
jo
inc
jp
add
fisttpll
push
lock
dec
cmp
cmp
bound
jmp
enter
sbb
push
out
xor
test
out
jmp
mov
out
push
pushf
add
and
jo
das
mov
push
sub
lock
outsl
loop
pushf
dec
push
xchg
test
sbb
ds
addr16
sbb
push
mov
idiv
sub
mov
aad
push
mov
loop
dec
gs
fwait
sub
cmp
lods
lret
into
sbb
mov
sub
nop
ss
mov
subl
addr16
shlb
mov
jne
insb
js
jb
mov
mov
fs
fisubrl
loopne
jmp
xchg
jg
pop
pop
mov
jno
and
nop
push
cwtl
clc
nop
bound
pop
adc
or
cmp
push
mov
cmp
clc
jecxz
add
jle
mov
in
dec
arpl
cmp
in
cmpsl
sbb
xor
daa
jmp
mov
xor
xor
push
scas
rolb
jno
mov
push
sbb
stos
popa
and
mov
xchg
jno
call
jns
sarb
or
lret
sub
mov
mov
pop
jle
aad
sub
or
leave
pusha
movsb
mov
out
insb
movsb
clc
incb
mov
or
adcb
repz
scas
std
adc
loope
outsl
out
popa
dec
fsubrl
add
hlt
adc
push
push
and
jo
fadds
xor
cmp
mov
sbb
testb
or
das
aas
repnz
stos
repnz
inc
fmulp
xchg
test
push
lcall
repnz
push
out
mov
mov
sahf
into
pop
rorb
sbb
ja
sbbl
sub
adc
subb
mov
fnstenv
cmp
aaa
int3
mov
or
fldl
push
sbb
insb
lcall
inc
es
mov
enter
shr
rolb
and
in
mov
jnp
ss
or
cli
jecxz
js
xchg
es
or
mov
fildll
sub
inc
jnp
and
and
imul
sub
icebp
push
mov
js
add
fisubl
and
stc
iret
addr16
imul
push
and
fbstp
jno
mov
shl
jp
adc
pop
fucomip
out
sub
xor
sub
xchg
pop
mov
mov
jge
xor
ja
jb
sbb
jecxz
xor
mov
pop
sbb
jnp
jecxz
rclb
lea
fimull
xor
clc
inc
stc
mov
or
cs
and
or
cmp
test
mov
mov
out
pop
sti
inc
adc
xor
push
jns
loopne
jg
pop
imulb
cli
jno
addr16
pusha
sar
add
lcall
xchg
jne
pushf
cmp
mov
pop
fwait
pop
movsb
or
movsl
inc
fldt
cmp
xchg
mov
call
or
pop
shl
cmp
pop
ret
inc
popa
daa
add
xchg
or
es
repnz
cmp
or
xor
enter
out
ja
push
mov
js
pop
data16
jae
and
push
push
repnz
fbstp
imul
mov
shlb
pop
cld
jp
mov
push
xchg
scas
jo
popf
sbb
aam
shll
xchg
push
inc
mov
aad
sbb
pop
fnstcw
mov
test
dec
mov
push
mov
mov
and
jle,pn
cmp
xor
daa
jge
adc
lods
cwtl
test
xchg
push
lahf
jge
scas
sub
dec
dec
cmp
inc
imul
dec
sbb
ret
in
dec
lods
jge
daa
dec
popl
ret
jge
cmc
and
dec
bnd
aad
mov
fwait
xchg
js
cmp
sub
lahf
fdivrl
mov
sbbb
aad
mov
lds
sub
jnp
jecxz
jge
cs
pop
push
or
adc
lahf
scas
and
jle
mov
mov
insl
mov
add
repz
aad
adc
dec
ror
or
cmp
mov
ds
sub
xchg
das
pop
xchg
std
xchg
repnz
mov
or
xor
lods
lcall
add
xor
jns
pop
cmp
mov
les
adc
sub
jg
fldcw
push
pusha
fisttpl
push
das
fidivrl
dec
add
xor
push
insl
shll
aas
mov
dec
out
mov
jae
test
nop
cli
test
ret
pop
pop
in
in
pop
mov
push
fnstsw
push
pop
jne
cmpsl
insb
imul
or
or
dec
lahf
adc
sbb
cmp
repz
es
dec
lahf
mov
dec
push
insb
shll
pop
push
cmc
pusha
cmp
jo
pop
push
or
das
xlat
leave
xchg
adc
jge
dec
scas
add
push
add
in
test
jmp
mov
ret
mov
sbb
rcr
bound
mov
adc
loopne
movsl
cmp
push
ljmp
cmc
or
pop
add
cmpsl
add
push
sbb
xchg
cmp
push
imul
xchg
mov
cmp
ficomps
imul
or
mov
aaa
in
sbb
outsl
sahf
or
mov
insl
inc
call
stc
pop
mov
xchg
mov
jmp
jns
shlb
fdivrl
in
push
out
inc
scas
ds
mov
jne
xor
xor
ret
mov
cmpsl
mov
insl
jne
push
cmpsb
xor
in
xchg
pop
xchg
adc
repz
cmpb
jl
outsl
cmp
stc
test
lahf
push
sbb
cwtl
mov
xor
int3
outsb
out
add
push
xor
lods
add
out
ret
xchg
mov
cmpsb
repz
in
inc
imul
ljmp
cmpsb
mov
cs
cmp
add
in
pushf
mov
xchg
inc
idiv
in
loopne
cwtl
lds
mov
iret
mov
icebp
popf
leave
jecxz
push
adc
jbe
stos
mov
inc
call
loope
aam
loope
mov
cmpsb
iret
xchg
loop
stc
in
fistpll
xor
pusha
push
test
and
pop
rcll
scas
add
test
mov
lds
mov
les
inc
popa
addr16
adc
cmp
imul
aas
adc
jo
push
loopne
dec
fldenv
rclb
push
pusha
divl
sahf
mov
fs
out
pop
sbb
addr16
mov
int
pop
jb
addr16
scas
popf
mull
push
sahf
xchg
out
aad
xlat
repz
fdiv
sub
and
jle
and
add
fwait
test
stos
fdivrs
mov
ja
cld
test
cmp
jns
jmp
dec
fs
pop
adc
xchg
fdivs
jge
imull
inc
jle
js
xchg
sub
xchg
inc
mov
cli
jl
add
sbb
sub
sub
sbb
and
addr16
dec
xchg
adc
out
mov
call
pop
mov
inc
fsubl
mov
jbe
cmp
lods
jmp
cmpsb
jnp
int
outsl
mov
inc
mov
jns
inc
ret
je
subb
pop
push
enter
jge
push
fs
pushf
out
ljmp
add
or
je
pop
sub
dec
or
xlat
aam
lcall
aaa
inc
fisubl
xor
shr
stc
sbb
sarb
cmp
pop
fidivl
pop
or
lret
lock
outsl
push
rcrl
fnstsw
gs
fimull
sub
lahf
jle
push
mov
movsl
push
xchg
pop
and
rclb
ljmp
and
loop
testb
sbb
jne
mov
test
adc
leave
sub
lea
fnstenv
pop
cmpsl
sarl
stc
test
ds
repz
cmp
push
data16
out
nop
xor
xor
sti
sbb
mov
mov
ret
jno
jnp
clc
or
push
aad
insb
jb
xor
sub
pop
xorl
jle
and
lds
mull
rcrb
call
mov
jg
cmp
clc
pop
loop
ds
pop
mov
ret
repz
and
pop
scas
push
mov
mov
and
iret
xor
lds
int
lret
paddusb
dec
cld
stc
rorl
push
xlat
std
inc
nop
out
movsl
sahf
movsl
jmp
add
hlt
push
mov
cmp
sbb
nop
leave
xor
sub
imul
frstor
fsubrl
mov
sbb
test
rclb
leave
dec
shll
clc
rcll
or
jl
push
rorb
je
xchg
push
aas
testl
mov
mov
mov
lea
pop
sbb
fs
xor
dec
jl
jno
clc
adc
movsl
lods
mov
repz
js
and
push
aam
inc
xchg
fcomps
movsb
dec
ret
outsb
xor
fdivrl
mov
pop
jnp
test
mov
pop
lods
fsubrl
cmp
mov
push
push
mov
jae
jns
shll
movsl
push
dec
inc
lods
xor
sarb
stos
pop
imul
aam
mov
es
add
push
mov
cli
jo
cltd
test
add
call
pusha
test
mov
sahf
push
mov
push
xchg
clc
jae
out
rorl
push
xor
inc
sti
adc
enter
lahf
push
imul
enter
mov
testl
jb
popa
lods
insl
inc
je
in
movupd
lret
pushf
cli
cld
mov
adc
iret
cld
jl
sub
or
sub
mov
icebp
in
aas
or
out
adc
ss
arpl
in
lahf
in
jmp
add
in
bound
push
lret
xorl
xor
add
loope
and
xchg
and
jno
inc
pop
adc
push
pop
sbb
call
neg
xor
movsb
jno
aad
fldenv
loope
mov
mov
je
das
xchg
js
dec
stos
hlt
rcll
clc
clc
imull
pushf
dec
adc
stc
and
data16
push
mov
es
fisubl
inc
or
dec
push
rorl
movsl
inc
mov
jle
testb
movsl
add
notl
cltd
arpl
push
jae
in
mov
scas
dec
out
or
nop
lea
adc
jbe
insb
in
jnp
fsubrp
push
movsl
cwtl
cld
push
fbld
cmpsb
pop
cld
sub
outsl
and
push
mov
leave
pusha
roll
ljmp
insl
sbb
out
fidivrl
movsl
push
pop
dec
test
mov
xor
cmp
ret
dec
pop
mov
dec
mov
jns
xchg
sbb
lahf
xchg
push
repnz
scas
push
inc
cld
and
aas
jno
jnp
mov
xchg
add
mov
stos
and
or
cld
jg
or
add
pop
or
push
inc
mov
push
cmp
out
js
cmpsl
pop
outsb
test
fs
adc
lock
jge
test
inc
aam
aam
roll
mov
repz
mov
movsb
cmp
add
jle
xlat
fucomip
pop
add
je
mov
jns
dec
add
cmp
adcl
xor
mov
push
popa
xor
xor
fcomps
push
or
icebp
psrad
mov
add
sub
mov
inc
mov
repz
sbb
mov
inc
jno
pusha
mov
jmp
es
push
mov
push
xor
fbstp
dec
test
popf
xorb
fwait
xchg
dec
jbe
std
add
insl
xor
inc
jecxz
xchg
or
add
test
je
mov
iret
xchg
mov
adc
dec
fcomi
lahf
rcll
lods
shr
divl
pop
popf
icebp
mov
out
hlt
pop
inc
ret
inc
cmp
dec
cmp
mov
adc
cmpb
add
mov
lods
inc
mov
arpl
xchg
adc
je
cmp
imul
sbb
push
in
xor
xchg
inc
add
in
push
call
icebp
fmul
test
xchg
fmuls
mov
arpl
ret
call
adc
xchg
pop
mov
addb
es
lcall
sahf
inc
fisubl
xor
imul
dec
mov
js
in
and
fstpt
adcb
fsub
xor
lcall
stc
je
jne
push
mov
pop
in
loope
int3
fiadds
and
popf
iret
js
ljmp
push
ds
out
add
xchg
sub
icebp
stos
aad
insl
repz
add
push
mov
or
xchg
xlat
mov
mov
push
jne
fnsave
push
sti
inc
sbb
fcomip
paddd
leave
fstps
lods
imulb
lret
lret
leave
outsl
mov
adc
mov
mull
stos
fisubrs
push
jle
fcomip
in
lods
sbb
fwait
imul
xchg
mov
jae
xor
nop
jge
clc
aaa
add
xchg
adc
and
scas
jmp
push
je
mov
ja
add
cltd
mov
pop
repnz
push
stos
pop
sbb
arpl
lahf
sbb
scas
cmp
int3
loop
stc
popf
inc
cmpsl
stos
jmp
dec
jmp
outsl
jg
inc
out
mov
cmp
adc
jns
mov
fists
in
inc
cmpsb
pop
xor
addr16
scas
lods
sbb
neg
cmc
in
lcall
arpl
sbb
imul
pop
xor
push
mov
fistps
and
mov
and
mov
xchg
out
pop
sbb
or
inc
push
cmp
add
outsl
lods
mov
loope
aad
xor
int3
jp
lods
jae
sbb
ljmp
push
jno
cwtl
sbb
inc
sbb
lret
cld
mov
ret
lock
call
mov
mov
sbb
mov
jne
or
test
insl
or
pop
sbb
xor
cmp
xchg
cmpsl
xchg
mov
test
es
shlb
out
jp
add
and
inc
stos
jnp
xor
das
mov
mov
jecxz
arpl
lahf
push
push
dec
je
into
mov
mov
test
arpl
fcomi
adc
jo
jle
push
push
fmull
and
sub
jecxz
movsb
idivb
sbb
hlt
into
jno
sub
inc
rcrl
ss
cmpsl
cltd
aaa
pop
xor
stos
mov
mov
popa
std
clc
loop
loop
loope
fidivrl
lods
ljmp
es
cmp
or
test
mov
inc
and
cmpsb
xor
mov
push
mov
mov
jnp
jecxz
add
xor
push
inc
scas
mov
mov
dec
cwtl
push
xor
dec
ffree
daa
mov
jno
mov
js
daa
inc
or
push
test
mov
lock
out
mov
loopne
mov
jb
pop
repz
mov
and
xlat
outsb
cli
and
sub
in
push
mov
add
pop
cmpsb
xor
inc
insl
add
mov
push
jo
mov
jmp
jle
add
jne
push
jne
rcr
fabs
lds
stc
mov
mov
popa
cli
jne
test
and
test
loopne
enter
jno
fs
adc
lods
clc
bound
lret
xchg
push
mov
xor
push
out
sbb
out
add
push
jne
and
aad
out
and
cli
xlat
outsl
loopne
mov
in
and
mov
xor
sub
scas
mov
jg
shrl
movsb
fwait
clc
pop
aam
test
rcl
lret
out
cld
dec
fcoms
xchg
sbb
jmp
dec
cmp
xor
int3
arpl
push
or
cmpsl
mov
or
jno
dec
addr16
sub
xlat
jbe
in
das
mov
daa
cli
enter
test
mov
lahf
jb
lods
and
pop
iret
fnsave
js
pop
mov
jne
push
imul
or
imul
xlat
mov
inc
dec
arpl
sbb
ds
out
cmp
dec
aad
mov
pop
fcmove
sub
and
dec
adc
addb
outsb
mov
ret
add
bound
fs
pop
xchg
sub
mov
pop
sub
pop
xchg
call
repnz
insl
mov
les
jae
mov
push
push
sub
xor
fs
je
push
popa
mov
dec
insl
dec
repnz
loop
jmp
add
xor
cmp
inc
lcall
iret
aas
mov
stos
hlt
ret
aaa
push
sbb
test
pop
stc
mov
imul
iret
aas
out
lds
cmp
mov
scas
xor
lods
inc
adc
cli
scas
cli
inc
push
mov
sbb
push
xlat
cmp
mov
lods
jg
movsl
push
in
sarl
cmp
test
mov
fsubrl
mov
in
test
fcmove
cs
mov
jg
jge
mov
xor
js
sub
adc
mov
push
out
out
lret
jmp
mov
test
in
insl
pop
cmpsb
outsb
fisubrs
cmp
outsl
loop
adc
andb
jmp
outsb
mov
orb
sti
ss
sub
sub
notb
xor
int3
jg
jle
fnstcw
sbb
jnp,pt
push
jecxz
xor
pop
sahf
leave
xor
leave
sub
jmp
sbb
mov
scas
mul
ja
aad
scas
xchg
cltd
fmuls
pop
enter
jp
sub
xor
jge
mov
jge
mov
fisubl
aas
loop
cmp
sti
stos
les
loop
add
pop
or
fwait
mov
popf
sbb
push
outsl
daa
sbb
out
xchg
repnz
add
addr16
adc
mov
stos
sti
push
out
pop
lcall
dec
popa
stos
out
push
mov
test
jp
pushf
sbb
sti
out
xchg
les
mov
es
dec
sarb
pop
aaa
push
push
dec
pop
rorb
ds
in
add
mov
adc
sbbl
scas
rorl
jb
rclb
adc
addb
outsl
add
movsl
mov
int
sub
or
ret
outsb
ds
cmp
and
jo
stc
push
ja
cs
stc
andl
cmp
int
adc
inc
inc
cmpsl
cld
clc
add
div
popa
sbb
bound
adc
shlb
shr
dec
inc
inc
dec
and
movsl
push
sahf
cmp
movsb
xor
mov
sub
push
inc
fldl
bound
gs
ds
lahf
lret
aam
call
sub
daa
ljmp
dec
xchg
xchg
sahf
lcall
aaa
and
mov
test
lods
inc
mov
push
push
inc
clc
cmp
and
arpl
loop
mov
mov
jmp
jecxz
daa
insl
pop
imul
push
push
test
rorb
dec
andl
into
jp
cmp
stos
push
lret
jecxz
adc
cmp
shl
mov
in
aad
jb
cmp
cli
pushf
movsl
daa
or
sub
lods
jmp
int3
dec
rcr
sub
ret
popa
rolb
idivl
pop
orb
int3
sub
cs
arpl
cltd
fdivrl
enter
lcall
and
lods
out
clc
cmp
cmp
sub
mov
ret
outsl
negb
les
and
in
ja
inc
and
cmpsl
out
jp
imul
sub
mov
jg
fdivr
imul
stos
ret
ret
in
lret
sub
cmp
pop
call
scas
xchg
adc
icebp
or
pop
cmp
outsb
aad
mov
or
imulb
push
nop
and
sti
add
call
es
hlt
lret
sub
cmp
sbb
enter
insb
inc
cmc
dec
test
xchg
mov
cmpsb
iret
xchg
sarl
pop
cmc
jns
xor
push
out
imull
out
test
adc
iret
enter
in
or
cs
pop
adc
jge
push
mov
add
mov
nop
mov
mov
in
inc
jp
fcomi
testb
inc
clc
aas
repz
push
dec
mov
pop
inc
cltd
sbb
fldl2e
std
pop
sbb
int3
push
dec
ror
jnp
sbb
adcb
rcr
pop
pop
and
xchg
ds
pop
mov
fcomip
movsl
cwtl
data16
leave
lods
mov
cs
sub
xchg
mov
cmp
and
push
out
push
sbb
hlt
xchg
dec
fcmovne
jp
sub
and
cmc
addb
gs
fsubr
fdivrp
insl
sub
sub
push
shlb
mov
ja
imul
xor
jb
enter
jae
out
ljmp
scas
ret
arpl
xchg
mov
xchg
mov
xchg
nop
jb
inc
cmp
inc
mov
jp
aam
dec
or
mov
lods
xchg
push
leave
jmp
or
sub
fcmove
pop
mov
push
pop
pop
or
ret
fcoms
and
repz
lock
pop
cmp
pop
cmpsb
jecxz
ror
mov
sti
rcrb
hlt
rcll
loop
std
ja
fistps
mov
les
add
sub
mov
push
dec
mov
jns
mov
in
jnp
test
or
cmp
mov
mov
cmp
xor
rclb
cltd
leave
stos
into
movsl
lret
mov
sbb
ret
rcll
or
fisttpll
dec
push
adc
lock
sarl
mov
mov
push
xchg
ja
es
mov
mov
lds
jns
push
and
jp
jge
jp
push
rcrl
cmp
fs
rorl
sbb
add
addr16
inc
loope
dec
jo
mov
sarb
stc
rorb
jo
fnstcw
mov
js
cmp
aad
sub
pop
and
mov
inc
jno
fwait
xor
fmul
popa
lret
sahf
xchg
mov
inc
sbb
test
sub
das
xchg
sub
pop
idiv
loope
push
fmul
test
addr16
and
das
pop
xor
ja
mov
fmuls
stc
adc
loopne
push
lahf
fimuls
pusha
jb
jbe
adcb
xchg
les
mov
mov
and
out
and
jnp
mov
fisttpl
scas
and
and
pushf
fbstp
jecxz
jp
sbb
in
or
or
and
mov
push
cmpsb
mov
iret
fs
shrl
xor
sahf
inc
addr16
clc
xchg
xor
cmpsb
pop
inc
mov
pop
pop
pop
fsubrl
mov
mov
jno
dec
je
dec
push
mov
xor
mov
xchg
add
cmp
pop
adc
cmp
push
insl
mov
xchg
movsb
jg
sbb
cwtl
push
movsb
cmp
jno
aad
mov
lods
sbb
fstl
and
cmpsb
inc
fcompl
sbb
mov
xor
sbb
loop
cmp
ds
inc
call
imull
iret
jle
ret
xchg
jns
movl
jl
test
pop
and
xor
mov
sub
inc
mov
fmulp
push
into
mov
jbe
mov
xchg
nop
loope
cmpsb
in
icebp
pop
cltd
repz
cli
popf
xchg
or
push
mov
xchg
sub
jne
test
sbb
jns
push
add
iret
sub
mov
jne
out
add
sub
in
mov
add
push
push
inc
fsubs
add
adc
inc
pusha
loop
gs
adc
scas
add
mov
inc
pop
push
xor
adc
sub
adc
cmp
scas
cltd
xor
aas
andb
push
mov
int
sbb
sub
or
jp
cs
imul
inc
mov
dec
out
in
ljmp
dec
fs
mov
repz
roll
insl
shrb
movsl
dec
xor
sbb
jnp
lods
ret
and
test
adc
ficompl
mov
in
dec
adc
mov
cwtl
xor
dec
jnp
pushf
jmp
adc
ds
mov
xchg
fwait
sub
and
test
jl
subl
mov
push
xchg
and
mov
push
xor
sahf
idivb
stc
adc
mov
push
add
je
inc
popa
or
nop
jne
incl
aad
add
xchg
test
enter
pop
mov
ja
fcomi
xchg
and
sti
jno
and
push
repz
out
mov
sbb
imul
sbbl
ljmp
push
sbb
gs
sbb
xchg
mov
adc
or
lea
jbe
movb
mov
movsl
mov
std
repnz
pop
adc
push
cs
repz
add
cmp
jns
repnz
mov
sub
sbb
sub
test
lret
lea
pushf
pop
push
mov
lds
mov
sbb
xlat
nop
push
test
stc
sahf
insb
and
dec
sbb
fidivs
lahf
sub
pop
or
iret
lods
xor
push
cltd
inc
fistps
mul
jp
dec
test
mov
ret
movsl
lds
je
lea
lds
sbb
ror
jecxz
and
inc
pop
push
cld
call
mov
pop
les
jl
shr
dec
pop
and
adc
xor
repnz
xchg
xor
push
test
or
xor
mov
rcll
push
cmp
es
jge
dec
cmp
xchg
dec
pop
fwait
test
mov
push
xchg
lahf
insb
sub
xchg
push
mov
xor
lods
mov
inc
lcall
jae
shl
fwait
mov
mov
cmpl
mov
fadd
jns
ljmp
in
aam
ret
sub
jnp
mov
std
adc
cmp
lea
mov
pop
leave
test
arpl
add
lret
movsb
dec
arpl
call
xor
ja
mov
movsb
inc
xor
mov
sbb
push
push
shll
add
out
test
cmp
dec
push
or
dec
iret
iret
push
push
ret
jo
ja
xchg
add
dec
idiv
iret
and
push
push
jp
jns
dec
in
out
cmp
xchg
shlb
movsl
jecxz
jecxz
idiv
movsb
jp
mov
mov
xor
call
mov
sbb
out
or
loopne
push
push
repz
mov
pop
cmp
aad
repnz
pop
les
mov
out
dec
adc
ret
data16
cmp
inc
and
testl
xchg
adcb
ret
pop
push
call
loope
jnp
pop
insb
pop
jno
mov
pop
ror
out
fwait
push
cmp
enter
fwait
jbe,pn
dec
test
xchg
xchg
adc
shll
mov
xchg
sub
xor
lret
mov
xchg
push
mov
xor
cmp
push
jno
dec
jb
clc
xlat
mov
sbb
mov
stos
es
inc
aas
int3
int3
frstor
scas
mov
xlat
pop
add
test
cmp
mov
out
aam
cs
sub
imul
sbb
test
mov
jmp
cwtl
push
or
cli
xchg
push
pop
js
test
in
adc
into
push
test
adc
jl
ss
out
in
hlt
adc
sub
test
leave
pop
inc
jle
mov
mov
ss
xchg
or
fwait
cltd
jp
cltd
add
pushf
mov
sbb
rcrb
cmp
dec
bnd
fsubrs
pushf
imul
cmp
fidivrs
lret
fdivrl
stos
mov
test
pop
pop
cmp
dec
dec
dec
out
dec
sahf
jae
shlb
sbb
scas
jecxz
or
adc
xchg
cltd
lock
lahf
mov
push
mov
mov
inc
cmpxchg
cmc
xor
adc
int3
jmp
jmp
ja
test
ficoms
sahf
aam
outsl
mov
lret
mov
jbe
sbbl
mov
mov
jle
das
addb
popa
test
arpl
inc
xchg
daa
adc
mov
popf
scas
ret
inc
dec
mulb
dec
aaa
movsl
ja
jbe
rolb
mov
lods
cmp
add
icebp
or
add
push
fimuls
pop
lret
rcrb
sbb
mov
scas
push
mov
repz
movsl
pop
push
jbe
popf
pusha
lods
xchg
mov
inc
and
and
xor
scas
clc
pop
rcll
mov
fs
mov
movsl
sub
dec
inc
outsb
movsb
repz
loopne
inc
bound
xchg
mov
shr
xchg
dec
cmp
jge
inc
and
xchg
jmp
lods
rcrb
or
xor
outsb
loopne
stos
sbb
cmp
jne
pop
cmpsl
icebp
movsl
lods
and
test
xchg
add
pop
dec
inc
pop
push
testb
xchg
mov
outsl
cmp
and
push
xchg
xchg
popf
insb
lret
add
xor
mov
test
adc
sar
and
loopne
mov
dec
ret
xlat
lds
les
adc
pusha
push
push
push
mov
bound
aad
jge
int
push
inc
loopne
xor
mov
xchg
aad
sub
and
sbb
pushf
cli
sbb
pop
adc
cmp
dec
cmp
dec
outsl
insb
push
jmp
xchg
aad
dec
and
loope
xlat
dec
movsl
cmp
ss
stos
add
repz
addl
icebp
xor
popa
add
push
ficompl
mov
sbb
cli
push
jb
jecxz
repz
clc
sub
mov
outsl
xor
out
lds
clc
shll
dec
mov
adc
into
lcall
sti
mov
packssdw
cmp
xlat
ficoms
subb
and
jo
pop
outsl
sub
or
loop
lods
rolb
lret
shl
out
jno
lds
and
pop
add
xor
addl
arpl
sbb
out
push
adc
iret
sbb
mov
mov
dec
pop
or
push
out
outsl
js
imul
je
aas
add
dec
ss
mov
cmp
lock
stos
lds
sar
sbb
adc
mov
mov
and
sahf
mov
push
dec
ja
gs
stos
mov
in
andnps
push
imul
cltd
cmpsb
scas
add
sti
xchg
ret
dec
adc
mov
orb
shll
add
out
push
sbb
xor
popf
inc
jnp
xchg
mov
incb
imul
fstp
ds
stos
jmp
lret
and
lret
xchg
dec
xchg
mov
call
popf
mov
shlb
mov
insl
mov
lret
xor
mov
cli
je
mov
xchg
fcomi
les
or
outsb
rcrl
inc
pop
les
cwtl
inc
aaa
xor
in
pop
mov
pop
mov
ret
dec
test
repz
sub
pop
aas
loope
xchg
jge
and
mov
or
or
cmp
nop
inc
test
dec
rorl
adc
cwtl
and
mov
add
xchg
iret
lock
add
or
push
fisttps
cmp
xchg
sbb
fisttpll
mov
test
cs
faddp
dec
mov
lret
mov
je
sub
sbb
out
ljmp
jno
pop
popa
dec
pop
xchg
jp
jmp
push
add
out
add
sub
lods
xchg
jg
lds
test
cmp
or
cmp
and
mov
out
testb
imul
enter
lcall
fcomp
bound
mov
mov
jno
rol
jo
jns
mov
and
fsubrs
mov
cltd
mov
sbb
outsl
add
test
mov
js
adc
mov
pop
pop
out
mov
sbb
rcrb
dec
fimuls
mov
push
xor
mov
loope
fistps
in
pushf
lods
and
sub
add
lret
mov
andl
std
aaa
cmpsl
ret
push
gs
int3
out
pop
xchg
push
push
aaa
nop
shll
dec
test
loopne
fs
or
test
or
xchg
and
jno
cmp
mov
xchg
push
mov
cmpsb
xchg
xor
mov
ljmp
adc
outsb
xchg
aaa
adc
dec
lcall
ret
in
or
pop
fldcw
mov
setae
out
sti
stc
mov
in
test
cmp
enter
xor
in
pop
addr16
and
test
lret
hlt
frstpm(287
dec
imul
test
test
add
pop
fsub
dec
and
into
scas
xchg
add
dec
mov
jg
ljmp
mov
mov
xchg
mov
xchg
aaa
sbb
cwtl
fsubl
sbb
push
xchg
leave
mov
mov
jmp
rcrl
add
leave
pop
lock
hlt
addr16
pop
cltd
and
xchg
int
inc
mov
mov
rcrb
sbb
stos
js
inc
jne
pop
daa
push
add
mov
xchg
sub
shll
push
insb
mov
sbb
test
movsl
push
shlb
jnp
test
mov
and
add
loop
minps
cwtl
in
lret
mov
xlat
xchg
dec
push
rol
xchg
hlt
loope
shr
fadd
push
dec
int
shl
iret
and
push
and
test
fcmovu
out
dec
jp
in
outsl
outsl
mov
add
sbbb
xor
add
jns
ja
dec
dec
mov
mov
aaa
mov
sbb
outsl
js
mov
pop
push
adc
push
movsl
pusha
or
ds
cs
mov
ret
outsb
fmuls
test
adc
shlb
xor
mov
mov
in
dec
repnz
clc
xchg
lods
and
push
into
pop
lock
int3
mov
gs
and
push
push
sarl
mov
add
mov
adc
or
xchg
je
xor
pop
xchg
mov
in
mov
sbb
outsl
xor
mov
fsubrs
dec
stc
int3
dec
imul
addr16
jns
daa
or
stos
clc
aam
cmp
pusha
push
lods
cltd
test
xor
addr16
jbe
imul
inc
or
dec
xchg
imul
repnz
xchg
xchg
test
add
push
cmpsb
and
and
jb
shl
lods
inc
cmp
jmp
xchg
sub
mov
popf
insb
and
cmp
jmp
shlb
jno
cmp
dec
shl
jg
mov
sub
and
ret
mov
mov
cmp
pop
out
fimuls
jo
testl
xlat
mov
mov
out
loope
mov
bound
cld
in
pop
out
lcall
push
insl
mov
and
jbe
sbb
mov
sub
sarl
cmp
leave
jb
cmp
and
movd
xchg
mov
int
mov
int
add
std
cmp
cld
and
outsl
ret
mov
cmpl
adc
or
xlat
mov
aas
divb
daa
mov
and
add
rcl
movsb
xor
pop
or
mov
jp
int3
cmp
add
fdivrs
pop
cmp
or
fdivrl
imul
cmp
in
pop
sarl
or
xchg
cs
cmp
pusha
movsb
xchg
push
cmp
shlb
pop
inc
or
addb
rcl
push
adc
ja
jecxz
rcll
xor
and
and
js
inc
fs
jl
jg
mov
jns
push
and
adc
sub
neg
jg
ss
mov
arpl
push
pop
rol
or
push
and
cmp
insb
ss
xor
adc
adc
push
push
adc
and
mov
repz
lret
ror
inc
popa
sub
mov
shr
xorb
mov
pop
xchg
cmp
into
xor
ljmp
out
icebp
xchg
arpl
adc
psubsb
gs
lret
shl
jge
std
fwait
outsl
sbb
inc
dec
in
jo
pop
clc
movsb
movl
sub
and
aam
dec
xchg
cmp
aam
mov
fnstcw
mov
and
nop
jne
dec
jno
or
cltd
mov
sbb
repnz
call
jp
aaa
sarb
mov
pusha
cmp
or
adc
xchg
daa
cld
mov
push
js
cmc
and
loop
lods
cli
xchg
fidivrl
mov
adc
add
pushf
mov
add
push
adc
and
lahf
es
fsubrs
push
sbb
sub
aam
xchg
inc
or
add
ss
mov
push
xchg
fnstenv
mov
out
push
clc
push
mov
mov
lods
movsl
jbe
xor
inc
push
into
gs
cmp
idivl
dec
mov
adc
push
pop
sub
jle
outsb
imul
mov
movsl
mov
jmpw
ljmp
jle
and
lret
and
pusha
mov
mov
shr
jbe
aad
pop
push
jmp
xchg
sbb
add
aas
sbb
adc
adcb
inc
sub
fsub
scas
xor
pop
fidivrl
or
cmpsl
popf
xor
imulb
push
popa
jae
sbb
pop
cmpsb
mov
int3
or
adc
sar
inc
out
fimuls
inc
sahf
add
loop
mov
and
pop
jno
jl
test
xchg
sub
cmc
or
sbb
adc
fs
mov
or
xchg
pop
andb
mov
shlb
jno
sbb
test
adc
gs
push
sub
insl
cmp
rolb
loopne
repz
pushf
xor
fnsaves
inc
fldl
out
jmp
lock
test
push
fwait
testl
lds
fnstenv
imul
shlb
push
incl
fdivp
cld
xor
adc
std
inc
lret
and
sti
or
push
pop
enter
add
xchg
xor
mov
inc
mov
dec
mov
adcb
mov
push
xchg
loop
aam
mov
xor
gs
xchg
sbb
aad
mov
jmp
out
push
sbb
das
repnz
mov
sub
dec
pushf
shll
mov
nop
dec
das
ret
xchg
lcall
in
mov
aad
and
cmp
push
jp
mov
cmp
movsl
in
inc
cmp
outsb
jns
xor
lcall
fiadds
das
inc
and
mov
test
mov
lcall
xchg
in
mov
or
jns
xchg
scas
icebp
add
add
mov
mov
sahf
leave
scas
mov
loope
push
insb
and
lcall
cmp
xor
mov
and
xchg
lcall
orb
jo
sbb
xchg
cmpsb
pop
mov
scas
sbb
aam
mov
mov
popa
cs
shlb
xor
fisttpll
mov
lods
inc
sbb
xor
inc
popf
out
jle
xchg
xlat
es
repz
xchg
test
lret
test
sub
push
inc
dec
inc
mov
stos
aas
out
fcmove
orb
push
lods
push
dec
lock
mov
shrb
inc
cmpsl
and
push
xchg
xchg
xor
and
adc
out
jbe
out
sbb
ret
ss
adc
cltd
test
cmp
or
lahf
ss
jg
ljmp
cmp
adc
jge
fnstcw
popa
stc
ret
lret
xchg
loope
leave
cmp
pusha
sbb
mov
mov
movsl
xor
and
jmp
xchg
xchg
popa
add
pusha
data16
aas
xor
aad
push
imul
insl
stos
shrb
je
iret
jp
inc
pusha
ss
adc
mov
xor
gs
or
and
pop
push
sub
int3
int
jmp
in
inc
mov
shlb
in
cmpsl
jp
jecxz
cli
add
or
stos
std
sub
pushf
insb
sub
or
dec
push
adc
jecxz
jecxz
mov
test
aas
gs
roll
leave
popa
pop
imul
and
ret
mov
ret
jo
or
and
scas
sgdtl
movsl
pop
dec
push
jne
lcall
cltd
mov
pop
test
mov
test
out
loop
sub
dec
pop
mov
jmp
push
pop
mov
xchg
push
mov
inc
cmp
push
mov
pop
inc
push
mov
jl
in
in
mov
pop
lahf
or
inc
adc
dec
xchg
xchg
in
and
fcmovnb
add
das
adcb
js
gs
xchg
pop
mov
daa
cmp
addr16
repz
add
cmp
and
sbb
mov
orl
test
and
mov
cmp
fcoms
push
and
or
inc
ljmp
mov
into
lock
push
dec
adc
add
cmc
inc
sbb
and
add
out
jbe
jl
leave
dec
adc
and
aas
pop
icebp
or
das
js
xchg
scas
idivl
push
jno
cmp
movsl
lret
xchg
movb
test
int
push
mov
das
jnp
popa
xor
or
cmp
rcr
nop
sarl
add
sub
rcrb
mov
sub
stos
lret
sti
adc
addr16
nop
rcrb
jmp
push
sbb
and
xor
dec
aad
sbb
sub
xlat
sbb
xchg
dec
movsb
cltd
push
adc
sbb
enter
sub
out
sbb
fbstp
lret
stc
inc
and
addl
bound
lods
ja
vpmaddwd
int3
jg
lahf
mov
sarl
xchg
pop
pop
sahf
mov
cmp
mov
test
push
or
mov
or
sub
and
and
sbb
das
rorb
and
cltd
cmpsl
js
sub
pop
lods
mov
int
das
hlt
mov
repnz
mov
call
jp
sbb
push
ret
inc
add
cld
or
mov
bt
jae
mov
scas
adc
xchg
sub
sbb
dec
inc
ljmp
sbb
cmp
xchg
sub
imul
int3
inc
sbbl
sbb
leave
pusha
insl
add
mov
call
mov
mov
cs
imul
ret
pop
or
inc
mov
loopne
pop
xor
ljmp
fisubs
add
roll
outsl
add
dec
mov
mulb
fdiv
cmpsb
pop
jo
mov
mov
test
rol
jmp
aaa
ret
pop
jne
push
inc
fisttpl
jecxz
pop
lret
mov
mov
in
jno
sbb
fdivrl
mov
fistl
push
cmp
or
adc
add
sbb
dec
cmp
pop
outsb
pop
cmp
mov
fdivs
leave
and
aam
sub
scas
std
dec
mov
aad
adc
jle
mov
mov
sahf
in
mov
mov
jae
inc
and
dec
push
inc
in
shrb
popf
or
lcall
xor
dec
adc
inc
cltd
filds
fistl
xchg
das
scas
jb
andb
lea
ljmp
and
addl
test
dec
or
jg
cmpb
pop
pop
sahf
dec
cmpsl
es
mov
sahf
lods
push
xlat
fsubrs
pop
notb
mov
pop
idivb
loopne
xor
mov
adc
loop
jbe
lret
pushl
push
dec
adc
pop
sub
cmp
pusha
movsb
push
ss
outsl
dec
std
xchg
adc
sbb
mov
cmp
xor
ret
fbstp
jo
dec
mov
dec
aad
jle
mov
call
or
cmpb
packsswb
mov
push
mov
add
out
mov
lods
xchg
mov
imul
sbbl
pop
icebp
and
js
sbb
movsl
fwait
cmp
push
push
loope
xorl
lcall
fsubrs
repz
jge
mov
outsb
add
nop
inc
xchg
sub
inc
pop
in
cmp
mov
stos
jne
fs
sbb
repz
cmp
jbe
icebp
lret
sub
outsl
outsb
jnp
in
stos
dec
shrb
inc
je
push
pop
mov
mov
leave
bound
sub
in
shrb
inc
insl
adc
and
ret
pop
and
iret
xchg
mov
repz
mov
mov
nop
inc
inc
insl
imul
test
pushf
sbb
push
sahf
jbe
andb
sbb
pushf
dec
xor
jle
or
imul
shl
popa
mov
xor
mov
rorb
pop
mov
mov
fnstsw
sbb
xchg
mov
outsl
lcall
call
cmp
xor
test
mov
xor
xor
cli
or
cmp
lret
sub
add
xlat
cmp
scas
arpl
inc
iret
mov
xor
pop
push
aas
sub
or
fdivrp
cmpsl
and
adc
icebp
push
fwait
push
sbb
in
bound
xchg
dec
sarb
clc
gs
xchg
sbb
aas
and
sub
fnsave
bswap
ss
arpl
adcb
ljmp
pop
mov
rolb
xor
mov
rcrl
hlt
and
sub
subl
inc
mov
fildl
adc
and
scas
popf
mov
xchg
dec
jo
fwait
inc
xchg
dec
xchg
jne
aam
orl
das
sahf
repnz
dec
jge
pushf
test
lods
mov
inc
push
je
jmp
icebp
push
cmpsb
popa
xor
sub
adc
xchg
cmp
pop
rorb
out
cmp
mov
cs
mov
sub
push
pop
jle
mov
pop
les
mov
jbe
jge
or
ja
xchg
dec
add
data16
mov
mov
std
adc
cmpsb
or
and
adc
xor
mov
sub
xchg
push
or
movsb
sub
mov
int3
pop
idiv
sti
sbb
lahf
inc
rcll
xchg
sahf
cmpsl
or
loopne
fildl
rclb
rolb
mov
push
pop
arpl
test
cmpsb
scas
mov
pop
push
or
pop
imul
test
cmpsl
add
fs
fldt
pop
jno
cmp
xchg
jg
push
lods
xchg
xchg
testl
lahf
int3
shll
xchg
dec
loopne
test
sbbb
cltd
sbb
pop
sahf
daa
cmp
out
fxch
pushf
addr16
jbe
mov
lret
sbb
rclb
bound
inc
ds
stos
jb
aad
data16
add
jecxz
les
jns
dec
icebp
iret
adc
repz
ret
add
xor
push
or
mov
mov
andl
test
sbb
mov
pop
jmp
pop
in
sub
shll
xor
mov
popf
mov
rorb
or
fldenv
jbe
gs
subl
enter
mov
and
aas
add
lret
sar
imul
pusha
fistl
fisubs
jmp
mull
daa
iret
and
fcomps
shlb
mov
inc
xchg
sub
dec
imul
clc
stos
fisttps
cmpsb
adc
cwtl
adcl
adc
jno
jno
test
das
fidivl
push
fnstcw
aad
or
inc
jae
cmpsl
mov
mov
lods
movsb
fs
aad
cmp
xor
jno
pop
cwtl
mov
bnd
and
call
sub
shl
xor
lcall
out
popf
or
and
mov
fdivs
and
jecxz
lds
xchg
jbe
lahf
clc
sahf
xchg
das
imul
out
sub
and
push
mov
stos
or
movsw
xor
add
or
jge
ja
in
mov
mov
mov
imul
and
rdmsr
sti
dec
enter
sub
lods
adc
mov
subl
mov
sbb
or
bound
test
stc
mov
and
loop
dec
sbb
aam
sub
xlat
xchg
data16
decb
lahf
das
mov
fsubrs
xchg
pop
inc
jg
mov
lods
cmp
push
sti
inc
test
pop
mov
pop
mov
push
in
fxtract
sbb
test
imul
dec
pop
bound
push
mov
or
jl
stc
adc
cmp
mov
ja
jl
lods
scas
in
test
xlat
cs
ja
jo
jecxz
xchg
mov
rcrl
movsb
mov
rol
dec
lods
cmp
sbb
dec
inc
repz
mov
std
adc
jne
jmp
cmp
stos
fs
push
push
sbbl
xor
test
mov
pop
out
add
xor
in
mov
ret
cmc
cli
fwait
xor
mov
xchg
sub
scas
addr16
mov
mov
pop
ja
loop
dec
or
ds
xchg
jge
mov
add
stos
jl
xchg
adc
fistl
incb
add
ret
sbb
or
xor
lods
jno
mov
push
push
aas
imul
pop
xlat
jp
fnstsw
lock
js
or
fwait
out
cli
icebp
xchg
add
xchg
cmp
sub
sbbb
lock
hlt
sbb
mov
jb
mov
sbbb
xchg
stos
sub
icebp
scas
jns
shrb
pop
jecxz
jnp
dec
idiv
cmp
loop
jo
leave
lock
jmp
daa
mov
rorl
call
mov
inc
cmp
das
jl
ret
pop
lea
push
mov
call
jno
dec
jg
xor
pushf
lcall
movsl
mov
jecxz
pop
test
pop
push
jge
sub
popf
testl
or
adc
inc
adc
xor
xor
mov
mov
pop
out
cwtl
lods
mov
aaa
ds
mov
lods
cmpsb
jle
int
mov
inc
or
xor
rorb
fimuls
cmpsl
mov
repnz
lods
stos
xlat
pop
hlt
push
or
cmp
ja
adc
roll
fsubs
nop
jle
or
pop
mov
sti
pop
inc
sub
mov
pusha
shll
add
add
gs
and
mov
sbb
lds
sub
lock
push
mov
arpl
cmp
fsubl
fwait
inc
repnz
mov
repnz
xchg
mov
pop
mov
pop
js
cmp
fnsave
pop
adc
or
rcll
rorb
repz
mov
mov
das
test
ret
scas
inc
data16
nop
arpl
dec
repz
push
fidivrl
or
ljmp
sub
mov
ret
outsl
cmp
push
addb
jmp
jnp
imul
aam
ret
in
sbb
jge
sti
mov
cmpb
out
inc
xlat
and
into
push
inc
pop
jno
aas
push
in
jo
dec
dec
jne
mov
imul
int3
insb
test
xlat
xchg
xor
in
push
xchg
shll
movntq
out
js
insb
dec
in
lds
inc
xchg
shlb
add
adc
pop
cmc
mov
mov
pop
adc
mov
adcl
xor
fmuls
sub
xchg
lea
cs
sbb
cmpsl
add
lret
mov
dec
dec
dec
leave
test
fs
insl
in
jp
xchg
jge
sub
pop
popf
jp
mov
or
dec
lret
xchg
pushf
clc
xchg
gs
fwait
mov
mov
shll
in
jecxz
pop
rorl
lods
imul
aaa
into
mov
pop
dec
clc
xchg
dec
andb
pop
neg
fisubrs
imul
std
sbb
ljmp
jecxz
nop
sub
sar
andb
iret
rcll
add
mov
jmp
jmp
sbb
add
xor
dec
arpl
or
mov
iret
sbb
mov
xor
xchg
xchg
cwtl
test
aam
jecxz
mov
idivb
inc
push
dec
mov
push
jmp
sub
ljmp
xchg
add
insb
push
and
cmpsb
rsqrtps
jnp
je
lcall
add
ret
imul
mov
fcoml
jae
and
mov
push
gs
mov
cmp
imul
sti
in
int3
mov
neg
sub
orb
push
cmp
leave
addl
mov
rclb
repnz
mov
lea
out
mov
cltd
sbb
notb
lock
std
cmpsb
inc
xchg
dec
cmp
jp
js
std
jo
adc
scas
fbld
dec
adcl
xor
and
iret
xchg
sub
push
sahf
sarl
or
icebp
lret
fsub
mov
loopne
jmp
mov
dec
call
fisttpll
pop
mov
sbb
ret
add
loope
popa
int
push
adc
es
pop
cmp
or
cs
jecxz
adc
sub
push
je
data16
pop
in
outsl
test
mov
push
aas
add
push
ret
cmc
jl
mov
test
scas
pop
sbb
rolb
mov
mull
jmp
mov
jmp
sub
push
testb
xchg
cmpl
adc
aad
mov
lahf
pushl
sub
mov
movsb
ljmp
xchg
jae
shll
sub
add
addl
push
sub
testl
aas
pop
pop
div
adc
jle
ficoms
fstps
xor
and
call
mov
push
popf
out
out
sub
cmp
sbb
jae
roll
jno
gs
push
test
cli
arpl
push
push
imulb
cmp
inc
data16
mov
or
add
scas
sub
sbb
lds
inc
or
imull
cwtl
das
aas
cmp
cmpsl
fsubl
cmc
and
test
orb
outsb
out
inc
adc
push
outsl
push
xor
repz
out
mov
mov
xchg
or
sub
xchg
lcall
fbstp
shrb
xchg
sbb
hlt
sub
and
sahf
data16
mov
stos
ss
gs
sbb
xchg
lds
adc
and
shrb
push
jmp
or
enter
cmp
cmp
movsb
aaa
stos
adc
aad
sbb
outsl
ret
cli
pop
pop
cmovl
or
mov
adc
mov
lret
xchg
xchg
int
sbb
and
jle
outsl
or
adc
or
sti
and
ja
clc
cmpl
sub
inc
mov
cltd
call
or
in
add
mov
jecxz
or
filds
ljmp
test
sub
scas
xchg
inc
pop
or
jl
dec
inc
insl
mov
add
lods
dec
sbb
xchg
dec
mov
fimuls
add
lret
jae
mov
fsubrp
gs
push
rorl
jbe
fdivl
mov
and
pop
repz
push
or
mov
mov
fsubrl
xchg
or
pslld
mov
hlt
mul
cs
jmp
mov
sub
mov
int3
add
outsl
daa
aad
jo
punpcklbw
inc
add
mov
jle
pop
fdivs
stos
int
fdivrl
adc
xchg
xlat
add
inc
mov
shrl
sti
jb
negl
cli
dec
mov
push
sbb
mov
mov
add
sub
scas
mov
pop
mov
pop
xor
int3
pop
outsb
rolb
push
push
movsb
jmp
aad
sub
lret
mov
sbb
pusha
pop
inc
lret
lret
daa
inc
fldl
mov
test
icebp
sbb
xchg
cltd
jns
adc
mov
ss
aaa
sbb
in
mov
mov
cmp
scas
and
add
dec
jg
xor
xchg
push
inc
lods
cmp
jne
inc
pop
xchg
xchg
adc
pop
and
sub
cmc
jecxz
mov
daa
pop
jmp
adc
ja
push
out
mov
dec
xchg
dec
in
sub
sahf
outsb
insb
filds
sbbl
lods
mov
aam
stos
inc
push
or
popa
in
jo
cmpsl
stos
xchg
inc
inc
fidivl
adc
cli
jb
mov
pop
add
sahf
xor
lahf
and
mov
aaa
pop
out
les
jmp
in
inc
fmull
ja
es
push
pop
sbb
in
mov
xor
outsl
in
rcl
xchg
mov
into
xor
push
dec
dec
adc
adc
lcall
xorl
add
std
repnz
push
sbb
test
fnstenv
mov
mov
cmpsb
mov
rol
pop
cltd
dec
aas
jp
movsl
ret
loopnew
mov
gs
pushf
pusha
push
lods
xchg
lods
pop
cmp
lret
and
nop
imulb
jp
popa
cld
stos
in
std
adc
cmp
mov
pop
fs
dec
xor
movsb
gs
pop
sarl
mov
pop
loope
test
lcall
imul
sbb
sub
jecxz
sbb
pusha
sti
fcomp
pop
mov
sbb
cs
fildll
out
int3
int3
fidivs
xchg
jge
stc
xchg
cmp
rorb
adc
dec
mov
push
imul
clc
jb
ret
mov
scas
sbb
outsl
loop
jecxz
inc
popf
or
cmp
xchg
add
or
pop
cmpsl
test
lret
fcomps
adc
sbb
xor
jge
in
xchg
pop
lea
add
mov
pop
test
xchg
mov
pop
aaa
push
jns
mulb
cwtl
cmp
xor
xor
andl
mov
hlt
adc
adc
jge
ss
lods
fidivrs
ds
in
sbb
pop
aas
ljmp
mov
std
shrl
les
imul
das
sbb
sar
mov
imul
cmp
xlat
pusha
repnz
fimull
mov
icebp
in
dec
adc
or
in
lcall
sbb
add
mov
sbb
mov
mov
mov
push
sbb
jle
shll
and
outsl
xabort
pop
add
clc
fidivl
xor
ret
rclb
mov
icebp
pop
lods
fidivs
les
pushl
das
les
inc
stos
dec
xchg
das
rorb
jbe
xor
push
cli
jne
addr16
or
in
andl
xchg
push
bound
popf
popf
lods
orl
xchg
mov
fidivl
or
xor
out
cmp
testl
ret
xor
push
adc
insb
js
xchg
scas
jbe
dec
mov
push
inc
inc
lock
lret
and
pop
xor
xchg
addb
out
call
or
add
ret
pop
adc
mov
cmpsl
shlb
insl
loope
js
jne
imul
mov
gs
pop
lock
jp
rorl
dec
or
rcrb
jb
fcompl
je
jmp
out
push
or
fldl
sbb
dec
or
jl
insl
scas
xchg
adc
push
jno
mov
dec
popa
xor
push
dec
aaa
into
jp
hlt
dec
pop
int
dec
not
xor
lea
fcmove
xchg
mov
mov
out
dec
fldenv
out
cld
std
or
lahf
pop
mov
rcl
cmp
cmp
mov
cmp
add
sub
and
stc
je
or
std
jecxz
pop
stc
fisubl
pop
pop
testb
andb
enter
leave
sub
scas
mov
push
dec
add
push
test
push
and
push
add
mov
xor
fistpll
adc
lds
lea
outsb
or
jns
das
jno
mov
dec
ss
js
sbb
cmpsb
inc
xchg
pop
mov
clc
aam
pop
jecxz
inc
pushf
jns
les
adc
repz
lret
mov
mov
pop
xorb
mov
lds
add
pop
mov
jns
sub
push
push
mov
scas
sub
cld
scas
rorl
stc
nop
add
dec
or
in
loop
std
pop
insl
das
mov
mov
dec
scas
mov
sbbb
pop
loopne
jno,pn
arpl
or
pop
xchg
stos
sbbl
js
adc
cli
cltd
jmp
int3
xchg
xor
adc
idivb
sub
dec
or
enter
xchg
insl
adc
xlat
addr16
fisubl
xchg
pusha
addb
mov
mov
dec
bound
rol
mov
popa
jmp
mov
inc
xlat
inc
outsb
jg
xchg
sbb
movsl
mov
add
inc
push
pop
mov
in
push
paddsb
js
adc
cmp
dec
dec
data16
call
push
in
fst
jnp
push
pushl
mov
sub
out
je
pop
jecxz
pop
aad
insb
in
repnz
stos
cli
push
hlt
call
sbb
mov
addr16
pop
stos
xchg
sbb
xchg
scas
inc
push
mov
fs
and
xchg
clc
xchg
subb
das
cmpsl
shrb
inc
insl
jo
out
sahf
xchg
sub
in
and
jecxz
mov
jge
jb
shlb
repz
outsb
cld
arpl
xchg
sub
in
mov
imul
or
mov
sub
mov
or
xlat
jb
in
enter
sbb
mov
test
jle
es
fldt
mov
inc
mov
jae
sub
fcoms
scas
daa
mov
adc
jb
stos
ficoml
mov
pusha
aaa
stc
pop
test
scas
lret
sub
pop
jne
mov
fbstp
scas
in
mov
mov
push
cmp
aam
out
test
jb
clc
pop
or
fsts
std
dec
roll
mov
addr16
lcall
inc
fldt
shlb
test
and
pop
lock
popa
lods
ds
xlat
imul
xchg
test
add
popa
fs
cmpl
hlt
ret
push
scas
jo
cmp
rcll
mov
push
shlb
sub
int
mov
inc
jge
fstpl
cmp
outsl
inc
sbb
sub
mov
adc
or
andl
in
adc
ss
lcall
sub
movsb
daa
test
stos
das
inc
mov
insl
sub
cmp
mov
pop
jnp
cmpsb
or
lods
push
popf
pop
or
es
adc
iret
inc
leave
mov
daa
pop
xor
pop
cmp
mov
and
add
insl
repnz
test
dec
or
idivl
xchg
xor
add
cltd
inc
jno
aam
pop
shr
test
test
loopne
sub
int
push
dec
movsb
push
inc
out
std
xor
shrl
cmc
cwtl
outsl
addr16
addl
fsubrl
aas
adc
add
gs
arpl
jae
jae
popf
push
jne
mov
or
or
inc
pop
mov
addr16
mov
jae
sub
xchg
dec
push
hlt
fwait
rorl
fs
jae
or
push
cmp
fidivs
push
mov
xchg
sub
sbb
sbb
mov
jmp
pop
mov
jnp
and
iret
data16
mov
mov
lahf
enter
mov
pop
inc
aas
push
inc
test
sub
jnp
cld
adcl
hlt
or
xchg
pop
inc
cmp
decl
jle
int3
push
das
mov
cmpsl
mov
leave
loop
ret
adc
test
cmc
pop
inc
cmp
faddl
jge
sub
jae
mov
cli
gs
sub
pop
xor
cs
jno
sub
lods
test
stc
in
dec
pop
scas
jp
inc
and
mov
sub
mov
mov
sbb
cwtl
mov
xor
jge
and
icebp
sub
push
cltd
test
test
add
arpl
or
xchg
fdivrs
push
cmp
cmp
popf
xchg
sub
arpl
push
in
push
xor
inc
inc
cmp
xor
xor
das
adc
out
inc
mov
nop
sahf
inc
inc
out
aas
imulb
sbb
cltd
or
lock
movsl
repz
sbb
jle
cmpsl
cmp
push
gs
pop
dec
adc
jo
leave
push
jae
push
aam
je
dec
cmp
divb
int3
data16
incl
insb
sub
enter
push
ds
insl
mov
mov
lods
fildl
icebp
cs
insb
sub
jl
and
daa
mov
mov
nop
stos
daa
out
das
lds
fnstenv
xchg
dec
mov
mov
test
mov
lret
pop
and
negl
jb
fbld
stos
negl
sbb
out
jp
jg
jne
dec
push
fwait
cltd
mov
int3
cmp
mov
xchg
sub
subl
scas
cmpl
dec
dec
adc
or
scas
adc
ret
arpl
inc
addr16
es
or
push
add
mov
gs
pop
jne
xor
js
adc
les
mov
or
inc
iret
mov
rol
jnp
outsl
jb
rorb
mov
adc
xor
out
inc
stos
icebp
repz
das
cs
dec
lods
xor
cmc
mov
lahf
andb
scas
cmc
in
jne
adc
push
xchg
xor
push
popf
pop
lret
icebp
and
lahf
push
inc
push
adc
inc
jg
cmpsb
inc
mov
lret
jge
add
ljmp
cmpsl
mov
ljmp
stc
lea
or
sub
xchg
xor
movsl
ljmp
insb
test
outsb
clc
push
mov
rol
insb
xor
pusha
mov
adc
or
fsubs
inc
adc
ja
aaa
push
inc
stc
mov
popa
xor
enter
adc
inc
dec
vmwrite
lcall
outsb
mov
mov
fsubrs
mov
xchg
jne
lock
addr16
and
aad
das
shll
add
insb
mov
int3
add
adc
das
inc
xchg
jmp
lret
xchg
jno
dec
leave
cmpsb
mov
mov
cmp
push
mov
fadd
xor
fcoms
sub
sbb
popf
dec
dec
std
jo
fcoms
or
xchg
mov
outsl
daa
ljmp
test
addr16
push
xor
add
nop
mov
xor
jb
popa
lock
and
xor
push
call
pop
pop
sbb
aam
loop
jae
ja
cs
cmp
scas
dec
aad
jecxz
jbe
mov
pop
jge,pn
push
dec
cli
arpl
decb
mov
rclb
dec
jmp
or
adc
test
call
or
push
mul
mov
sbb
sbb
fidivs
adc
push
movsb
inc
xor
jne
mov
hlt
aaa
idivl
add
xchg
leave
sub
mov
mov
cmc
sbbl
cmp
in
push
or
jp
xor
xor
mov
mov
rol
test
enter
mov
dec
fidivrl
ja
imul
xchg
xchg
dec
xchg
mov
sbb
jo
sub
and
or
inc
cli
xchg
cld
push
jmp
mov
cmc
fdivrl
lahf
xor
mov
test
out
xchg
mov
sar
lock
bound
xchg
nop
js
dec
mov
cmp
xor
jmp
mov
or
or
nop
arpl
mov
push
jp
dec
nop
add
sbb
jmp
lock
aad
leave
xchg
adc
arpl
jp
cmc
push
mov
aam
hlt
adcb
jmp
or
and
out
fisttpll
inc
loop
pop
push
movsl
xor
pusha
adc
sub
or
stos
shr
push
pop
into
cmp
dec
push
shr
sbb
jl
mov
adc
xor
fstpl
adc
cmp
jb
sahf
jae,pt
out
stc
mov
xor
mov
sub
leave
mov
jbe
and
mov
popa
xor
adcb
push
pop
xor
mov
divb
test
push
push
pop
stc
xchg
fists
fildl
sub
into
sbb
xor
jae
sbb
mov
sub
mov
inc
xchg
lods
jle
mov
test
data16
and
in
test
das
xor
pop
out
or
popf
stc
int3
test
push
es
mov
inc
xchg
dec
and
inc
fwait
pop
xchg
xchg
push
outsb
sub
cmp
mov
movsb
pop
cmp
repz
mov
sub
xchg
pop
sbb
pop
cmp
aam
pop
ret
call
stos
xchg
scas
sbb
pusha
repnz
mov
imul
popf
sbb
out
sub
mov
mov
lods
orb
and
sti
arpl
js
nop
stos
push
mov
jns
sbb
adc
ja
dec
arpl
xchg
adc
cmp
xchg
push
lods
decb
mov
xor
inc
pop
and
into
cmpsl
cmp
lcall
lea
jmp
or
or
aaa
test
jle
mov
add
lret
add
popf
xchg
and
les
cmpsb
dec
add
loop
mov
int3
xchg
mov
mov
jle
add
cmp
push
shll
xchg
ficoml
pushf
dec
or
xor
jb
faddl
pop
stos
int
sbb
bound
jmp
repnz
dec
out
shrb
xor
das
mov
add
xor
dec
pop
test
mov
stos
stos
and
cmpsb
cmpsb
subb
mov
pop
mov
or
push
dec
pop
lcall
in
mov
in
dec
fnstcw
into
imulb
jne
xor
mov
int3
inc
mov
into
and
sbb
sub
mov
enter
dec
mull
pop
xchg
pop
jl
loop
cltd
jo
cmp
and
in
out
int3
repz
gs
xor
popa
aaa
enter
jns
inc
in
imul
adc
imul
mov
fcom
jecxz
clc
lock
xlat
sbb
adcb
gs
add
sahf
xor
das
shll
lret
and
adc
ret
adc
imul
inc
fmulp
xchg
cmp
sbb
insb
and
mulb
repnz
cmc
mov
rcl
clc
mov
pop
and
add
shlb
andb
xchg
ljmp
sahf
xchg
fs
mov
inc
loope
mov
hlt
push
fdivrp
lea
cmpsb
movsb
lods
sbbb
cmc
xorb
mov
cmpsb
and
js
adc
push
adc
test
xor
pop
dec
movsl
add
xlat
push
rol
jno
sarb
andb
ja
pusha
pop
xchg
insb
aaa
jp
xor
push
push
in
xchg
filds
xor
movl
pop
loope
nop
add
mov
push
mov
lock
xchg
movsb
jl
xchg
movsb
push
loop
jl
sub
lcall
fstpt
sbb
pop
out
movsb
ljmp
shlb
leave
jns
sti
xchg
mov
inc
imul
mov
xor
leave
pop
iret
data16
add
jnp
nop
or
or
jns
dec
jle
jbe
or
outsl
fcmove
push
sarl
js
push
aam
inc
mov
fcmovne
and
aaa
outsb
jno
int3
testl
cli
mov
scas
loopne
sub
sbb
lret
sti
jns
fsts
in
jle
js
jl
push
xor
out
inc
push
inc
pusha
add
jne
pop
mov
xchg
jl
dec
dec
in
test
shlb
jp
jl
or
jns
lret
jge
out
addr16
add
dec
push
and
dec
mov
insb
sbb
add
dec
in
inc
lds
inc
and
push
data16
jae
ja
xor
cmp
sbb
stos
adc
jb
mov
repnz
scas
insl
sbb
mov
push
jne
push
std
addr16
test
mov
adc
iret
gs
loop
movsb
or
mov
add
sbb
subb
push
fsubrs
movsl
dec
stc
rcrl
adc
mov
pop
jne
mov
repz
and
push
push
in
aaa
in
xor
cmp
add
aas
or
lods
sub
or
icebp
pop
mov
call
add
iret
mov
inc
pop
sahf
jle
jmp
lret
add
popf
mov
in
push
sbb
bound
add
fdivs
adc
sbb
test
lret
or
and
inc
nop
lods
jnp
adc
sub
sbb
jge
pushl
mov
lret
mov
xchg
sub
xchg
iret
push
repz
cmpsb
loop
inc
adc
mov
xchg
loopne
jge
or
dec
movsl
cmp
cltd
sbb
dec
mov
cltd
mov
cmp
leave
iret
data16
lea
aam
pop
mov
jne
cs
fmull
idiv
pushf
test
xor
xchg
leave
mov
inc
addr16
or
ret
mov
in
jno
jno
sub
add
lahf
hlt
fidivl
int3
in
xchg
pop
push
sti
movsb
xchg
aas
movsb
in
mov
outsl
jle
xor
pop
imul
dec
out
jle
push
mov
dec
cmp
loop
lret
push
mov
test
ja
cmp
cmpl
adc
mov
add
or
or
cld
mov
xchg
jp
add
jo
imull
sbb
push
inc
sub
pusha
fisubl
gs
jo
fcomps
loopne
mov
icebp
mov
fisttpll
arpl
lock
fsubl
lret
cld
js
lods
xor
jns
dec
push
cmpsl
lds
pop
jne
adc
outsb
stos
xchg
sub
nop
push
mov
lea
add
mov
dec
adc
jg
lea
testl
push
lret
xchg
xor
adc
lods
shlb
push
push
mov
ljmp
xchg
lods
xchg
jno
mov
notl
dec
mov
or
xor
jns
loopne
dec
cmpsl
pop
repnz
gs
push
sbb
call
jle
out
sub
test
cs
or
pop
adc
jge
add
or
mov
sbb
adc
iret
cmp
movsb
pop
add
scas
xor
std
cmc
or
adc
xor
xor
ljmp
dec
cmp
cmpsb
jb
pop
mov
sarl
iret
or
cli
push
jmp
add
jo
jle
inc
fsts
ds
movsl
inc
mov
push
and
in
stos
out
arpl
jg
lcall
xchg
xorb
cltd
outsb
ds
pop
lods
inc
add
aaa
dec
repz
xchg
mov
std
test
xor
inc
jns
les
outsb
mov
out
jns
mov
hlt
lock
pop
jmp
sub
add
adc
enter
fdivs
mov
sub
or
rorl
cltd
std
cs
mov
lods
mov
les
arpl
push
orl
fs
movsb
fnstsw
and
mov
in
and
inc
fdivp
inc
aaa
into
xor
fwait
jbe
mov
out
mov
test
int
fwait
sti
push
cmpsb
adc
inc
xorl
sahf
enter
mov
int3
mov
push
cwtl
xor
push
lret
addr16
ret
pop
sti
xchg
fcmovbe
mov
fnsave
xchg
add
pop
scas
xlat
out
or
in
inc
mov
lock
mov
jmp
shl
outsl
add
js
negb
in
rcll
lock
push
cmc
pop
jae
cmp
dec
lea
push
mov
loope
loopne
push
imulb
inc
mov
inc
jle
out
sub
xor
cmpsb
xchg
lea
push
in
dec
scas
pop
lret
les
insb
sbb
add
pop
outsl
pop
sahf
mov
imul
lea
out
push
jmp
iret
cmp
stos
xor
mov
popf
xor
fdivrs
jp
ret
pop
sbbb
push
lahf
push
and
xchg
pusha
cwtl
and
xor
call
pop
jb
dec
imul
inc
xchg
and
out
mov
and
mov
out
bound
lds
push
mov
adc
test
out
fists
mov
inc
cmp
pop
shl
out
mov
or
xchg
cmc
mov
sub
aad
fs
stos
mov
mov
pusha
and
jg
lds
and
xchg
ljmp
mov
sub
aas
mov
das
lock
aaa
into
and
mov
mov
sub
lods
mov
sbb
pop
inc
adc
arpl
or
pop
and
and
fsubrl
and
addr16
inc
mov
cmp
mov
inc
xchg
pop
pushf
adc
and
data16
call
popf
cmp
jle
cltd
push
cld
mov
nop
push
jnp
outsb
push
popf
cmpb
mov
lea
and
out
push
in
lock
mov
push
popf
cwtl
inc
pop
cltd
cmpl
push
aaa
dec
gs
leave
mov
pop
lret
and
mov
daa
inc
push
sbb
ds
cs
insb
mul
cld
test
ror
arpl
test
repz
test
icebp
pop
xor
mov
scas
dec
out
in
stos
aas
fimull
cmp
aam
out
xor
and
cwtd
pop
xchg
adc
mov
dec
out
mov
add
jno
push
lret
push
jbe
xchg
push
test
mov
mov
jp
cli
outsb
add
jl
or
imul
lock
and
aaa
adc
and
mov
inc
popa
stc
dec
mov
xchg
push
loope
pop
adc
add
mov
fmuls
into
repz
sbb
cmp
call
ret
subl
daa
adc
rcrl
pusha
arpl
jb
cli
dec
orb
lock
push
mov
dec
sbb
lds
cwtl
cmp
out
pop
sbb
push
ljmp
pop
push
arpl
and
cmc
xlat
cli
aam
dec
aaa
sub
je
les
lods
push
fidivrl
cs
inc
in
movsb
mov
repnz
fidivl
dec
mov
jecxz
mov
lea
out
outsl
adc
xchg
stos
roll
pop
push
clc
popl
insl
cmp
int3
adc
push
stos
out
push
inc
test
mov
ror
test
inc
stos
and
pop
pop
insl
orb
test
mov
aam
outsl
pop
inc
sbb
xor
mov
pop
xor
mov
bound
adc
sub
pop
jbe
lahf
bound
shl
adcb
or
add
inc
outsl
fnsave
mov
add
pop
insb
test
lret
dec
stos
subb
or
jb
cmc
lahf
mov
ret
movl
das
popf
js
add
mov
int3
notb
inc
insb
xor
mov
lcall
test
ss
pop
sbb
push
jne
cmp
mov
mov
sub
dec
outsl
cmp
pop
mov
pop
mov
hlt
cmp
pop
cmp
inc
inc
mov
mov
insl
mov
add
mov
ret
cli
idivl
push
test
aaa
add
adc
mov
std
test
out
aaa
pop
arpl
jecxz
jle
call
or
inc
mov
loope
jno
sub
mov
frstor
insb
push
push
cs
je
aad
pop
mul
mov
sbb
stos
sub
scas
add
es
je
insw
xchg
mov
lcall
bound
data16
sahf
adc
push
cmp
mov
mov
rcr
xchg
fmull
or
cmp
xor
insb
nop
dec
fisttpl
dec
jp
mov
in
mov
jp
movsl
jmp
push
xor
adc
sub
mov
push
fadd
pushf
dec
sbb
add
stos
fs
pop
add
pushf
lods
imul
xchg
mov
loopne
das
scas
mov
mov
and
fcoml
jmp
out
and
and
rolb
mov
icebp
call
out
dec
xor
xor
push
lock
mov
in
ljmp
xor
stc
insb
imul
lea
inc
jo
std
hlt
lahf
mov
cmp
call
or
jmp
negl
xor
sbb
push
arpl
in
out
mov
rorl
xor
jb
cld
xor
movsb
sbb
ss
mov
je
or
in
daa
jae
test
dec
xor
push
push
cld
call
rcr
xor
loope
je
lret
movsb
stos
mov
xor
gs
push
stc
in
mov
mov
xor
add
jge
clc
in
push
sahf
mov
lret
mov
dec
jecxz
test
iret
adc
aaa
push
insb
cli
dec
hlt
mov
or
jg
mov
cs
lods
dec
mov
mov
leave
push
rcr
add
sbb
mov
int
jno
add
mov
mov
leave
cmp
test
test
cltd
jnp
iret
or
into
movsl
jmp
push
cmc
loop
xor
jge
xor
imull
das
fwait
xor
xchg
out
loopne
into
pop
cmp
in
bound
pop
fwait
cmp
and
ffreep
fists
movsl
or
inc
jl
mov
cmp
lea
scas
rorl
sbb
cmpsb
mov
add
or
pop
scas
hlt
dec
and
aaa
or
mov
lret
dec
icebp
sti
sub
adc
dec
jo
jmp
fcmovne
sub
adcb
xchg
dec
mov
fidivl
push
xchg
sub
shlb
mov
testl
es
cwtl
test
dec
jo
or
test
mov
jmp
stos
fdiv
fimull
int3
jne
aas
xor
mov
sub
mov
aaa
cmpsb
loop
push
sub
or
notb
mov
mov
aas
orb
sbb
pop
fcmovbe
fwait
das
sti
add
sub
sub
jg
push
inc
mov
adc
or
push
call
repz
fs
pop
lret
inc
mov
xchg
sub
mov
mov
fsubrp
arpl
xchg
mov
lret
cld
cmp
push
pop
insb
add
stc
dec
outsl
shl
and
and
imul
jnp
cmp
cltd
cmc
sub
add
jmp
addr16
cmp
sbb
inc
dec
mov
lret
mov
int
mov
out
fwait
push
cmp
lcall
popa
sbb
cli
jecxz
or
and
adc
adc
fs
mov
push
sbbb
jl
hlt
mov
pop
dec
repnz
add
mov
shrb
into
pop
cmp
lock
sbb
push
cmovge
imul
mov
mov
pushf
out
jns
sbb
mov
adc
push
or
push
pop
stos
out
pushf
fdivrl
push
cmp
pop
pusha
cmp
stos
lcall
and
mov
and
in
gs
testb
add
mov
adc
mov
xchg
sub
sub
repz
jecxz
jns
dec
fbld
inc
jbe
ja
clc
pop
mov
ret
ficoml
cwtl
aas
je
and
pop
sbb
push
cmp
cmp
push
adc
lods
fincstp
fdivrp
popf
xor
cmc
test
push
hlt
push
jae
cli
loop
lret
lcall
jae
aam
pop
shl
sbb
cmp
shrb
imul
imul
dec
inc
fidivrs
imul
pop
jo
rolb
test
mov
push
mov
cmp
fdiv
orb
addb
sub
adc
mov
inc
daa
adc
ljmp
lret
pop
ffree
outsb
xor
jmp
nopl
outsb
mov
xor
aam
sbb
gs
es
mov
cld
jp
rorl
or
jp
sbb
std
int
cmp
push
in
cmp
and
push
fnsave
jle
cmpsb
clc
out
aam
jl
jmp
lds
sarb
dec
jecxz
andl
mov
mov
mov
cmp
loopne
orb
flds
iret
mov
lret
loope
or
jle
pop
es
mov
or
add
mov
mov
ljmp
and
xlat
xor
sbbl
or
xor
inc
test
ret
dec
insb
data16
pop
in
xlat
rclb
jo
add
out
daa
mov
loopne
mov
test
enter
adc
ljmp
js
inc
sbb
jns
call
es
sbb
sub
test
inc
inc
out
js
loope
notb
add
add
xorb
push
push
adc
daa
imul
insl
ds
xchg
xor
loop
xor
mov
or
push
jbe
test
sahf
dec
test
adc
ljmp
test
add
xchg
inc
sbb
xor
mov
xor
sbb
sub
dec
lods
outsl
lahf
pop
rclb
pop
out
sti
cmp
xor
dec
cmp
mov
lret
push
xor
outsb
mov
add
xchg
test
jg
int
push
mov
addb
sub
ret
pop
and
or
xchg
arpl
fs
fstl
iret
data16
sbb
lahf
mov
mov
sti
mov
dec
jnp
cmc
cld
lea
cmp
stos
inc
xorl
add
xor
mov
or
cli
cmp
cmp
gs
gs
sbb
mov
push
test
jno
pop
xor
and
inc
jmp
sbb
xor
mov
fnsave
ficompl
sarb
repz
loope
in
cmp
push
mov
cld
mov
mov
mov
mov
test
sub
sarl
bound
movsl
push
sarb
ljmp
aam
push
cmp
repz
fbld
xchg
imul
scas
jg
mov
xlat
fimull
or
adcb
fsubrs
movsl
add
sti
rclb
sbb
sahf
hlt
mov
dec
jg
rcrb
clc
and
fisttps
pop
push
or
icebp
push
test
mov
movsl
xor
movsl
sub
xchg
sub
aam
movsb
sbb
push
stc
out
mov
jmp
mov
mov
and
rorb
push
xchg
loope
ljmp
pop
pop
and
inc
mov
cmpsl
pop
or
daa
shlb
icebp
dec
mov
sbb
sbb
cltd
adc
inc
push
pop
push
mov
int3
cmc
push
int3
jns
aam
xchg
cmpsl
mov
popa
mov
scas
fldl
test
xor
sbb
rorl
xchg
sub
stos
pop
mov
mov
pop
mov
testb
inc
adc
xchg
in
adc
in
arpl
fcomps
and
aad
pop
hlt
push
ljmp
jno
pushf
dec
xchg
dec
cmp
js
add
mov
cli
je
repz
pop
mul
mov
imul
and
cmp
inc
push
lods
lods
and
sub
mov
and
les
inc
nop
pop
cltd
xchg
push
addr16
xchg
mov
in
data16
push
push
adc
stos
dec
pop
insb
mov
popa
pop
sub
sub
lahf
repz
orl
out
jae
add
xchg
add
mov
or
lds
in
fcoml
cltd
std
ljmpw
mov
xorb
test
mov
insb
loop
vprotb
mov
dec
push
lods
mov
pop
test
mov
in
push
push
sahf
xor
push
in
mov
lea
inc
out
sbb
enter
jecxz
loope
or
mov
fistl
mov
pop
mov
mov
adc
ja
sub
repz
and
sahf
pop
cmp
jbe
lds
cmc
rcrl
mov
mov
sub
adc
mov
push
mov
sahf
ss
imul
jb
mov
mov
inc
test
push
mov
jp
jp
push
lahf
push
xchg
mov
jae
mov
sbb
aas
pop
mov
hlt
mov
aam
lret
or
and
push
lea
inc
add
xchg
sub
xchg
testl
popf
inc
cmp
and
iret
insb
add
into
push
lock
sub
in
adc
push
xchg
popa
test
in
inc
stos
out
pop
les
mov
stos
push
dec
cmpsl
aas
sbb
in
fs
adc
adc
scas
sub
xor
pop
loop
fiaddl
lock
cmp
repnz
scas
lcall
sbb
cmp
test
pop
dec
and
inc
xlat
and
push
insl
cld
cmc
mov
addl
jns
repnz
push
lock
or
fisubrl
ret
sub
sbb
mov
scas
and
push
mov
ficoms
inc
fs
mov
mov
add
stc
or
mov
andb
xchg
iret
es
aad
popf
push
lods
pop
xchg
lahf
push
mov
jl
call
fidivl
call
mov
or
int
push
pop
imul
inc
push
lock
xchg
in
inc
test
ljmp
mov
mov
hlt
or
iret
sti
sbb
lret
adc
scas
or
scas
cmp
jns
aad
jl
call
mov
push
in
lds
pop
xor
cmpsl
sbbb
mov
bound
or
rcrb
sub
mov
out
push
and
pop
dec
push
stos
cs
inc
fsubrs
mov
cmp
pusha
stc
cmp
adc
fwait
jp
adc
push
repnz
roll
ds
insl
jb
aad
dec
or
dec
les
arpl
and
inc
rol
insb
outsb
add
mov
jns
cmpsl
and
jnp
dec
je
jnp
add
inc
mov
or
mov
inc
lods
xchg
push
jg
lock
dec
adc
add
arpl
sub
adc
outsl
inc
dec
xor
cmp
addl
out
cmp
fucomp
push
outsl
mov
insb
int
mov
mov
mov
push
pushf
push
sbb
xor
cmp
and
adc
data16
ret
sar
out
aad
and
fimuls
xchg
aad
mov
shr
pop
adc
mov
movsl
jl
xchg
sbb
mov
add
mov
pop
adc
xor
push
test
pop
push
fs
sub
sub
mov
mov
insb
idivl
sahf
push
inc
scas
inc
std
jb
mov
adc
mov
mov
or
mov
outsb
xor
lahf
aad
sub
into
das
xchg
fistps
fwait
jmp
inc
push
fstpt
js
ja
loop
bound
push
jbe
lods
xchg
inc
ret
lahf
test
push
push
push
daa
adc
mov
fidivrs
lea
int
adc
movsl
or
adcb
mov
mov
and
mov
repz
es
push
cs
mov
adc
mov
jnp
jb
inc
pushf
jns
cltd
mov
imul
fwait
push
bound
test
clc
lds
subb
dec
fistpll
loopne
xor
lahf
jno
inc
push
in
jb
adc
mov
fadds
test
popa
inc
int3
jb
fs
and
ljmp
stc
mov
lods
inc
jmp
jbe
sbb
push
cwtl
jl
lea
aas
ja
mov
lds
sub
push
inc
ud1
jmp
loopne
sbb
sarl
jno
sar
subl
sub
imul
mov
or
aam
or
jle
shl
jno
xor
rcrl
xchg
scas
dec
mov
pop
fs
xchg
test
dec
movl
cmp
and
and
repnz
call
jbe
ljmp
sbb
push
movsb
cltd
xor
xor
test
xchg
sub
sbb
mov
push
push
loope
sbb
sarb
std
inc
ljmp
xor
sti
into
loope
in
imul
xchg
jl
lods
scas
push
fwait
and
ret
jb
sub
fiaddl
das
adc
mov
movmskps
push
addl
mov
add
mov
jl
add
enter
cmp
lret
int
xlat
or
cmp
and
scas
push
in
sbb
and
xchg
xor
xchg
sub
pushf
outsl
test
mul
es
jno
push
scas
inc
push
adc
add
mov
pushf
hlt
test
xchg
pop
clc
pop
arpl
cmpsl
inc
push
xchg
hlt
in
jge
pop
in
push
inc
sbb
lcall
cmp
in
repz
dec
es
enter
jnp
out
inc
adc
add
outsb
sbb
lea
in
mov
mov
scas
imul
aam
push
and
out
insb
mov
outsb
iret
cmp
js
clc
lcall
sub
out
dec
notb
mov
stos
lds
mov
imul
dec
mov
inc
rcrl
shlb
ret
pop
mov
in
psubw
insl
push
cli
repnz
push
movsl
jle
shlb
xor
mov
in
mov
aas
jle
mov
out
cld
sarb
sbb
xor
out
cs
adc
inc
cmp
jbe
nop
cwtl
xor
pop
jp
cmp
push
or
aad
add
lahf
fldcw
jb
jmp
stc
adc
mov
or
sub
stos
pop
jge
lea
mov
fmull
lods
ljmp
mov
mov
jae
cld
iret
or
add
add
popa
add
pop
hlt
loop
pushf
bound
cld
jae
cmp
lods
fdivr
cmp
cmc
sub
cmp
test
fidivl
insb
popa
xor
xchg
stos
cmpsl
push
movsl
xorl
pop
std
fs
loopne
jp
leave
xor
jbe
dec
push
hlt
hlt
sarb
out
out
mov
sbb
aaa
or
inc
fldenv
pop
mov
or
mov
lahf
mov
pop
cltd
gs
lret
fxam
jne
imul
mov
xor
movsb
ljmp
mov
jle
shrl
lcall
jle
es
mov
test
cmp
jmp
mov
iret
iret
fcomi
pop
std
pushf
add
push
push
xchg
sbb
jg
or
sbb
dec
rcr
jle
pop
mov
mov
and
ja
mov
cmp
imul
push
cmp
xchg
or
cmp
fisubrs
pop
pop
sub
mov
jl
mov
ret
jae
out
xor
enter
pop
and
lret
sub
dec
ljmp
in
outsb
add
test
fidivs
mov
mov
cld
jecxz
arpl
push
xchg
in
xor
in
int
or
data16
ds
out
cmp
jns
incb
movsl
jmp
aaa
mov
add
testb
stos
addb
sub
and
adc
fcomps
stos
inc
jbe
add
mov
mov
out
pop
xor
xor
aas
and
add
pop
adc
in
pop
dec
mov
inc
or
mov
mov
inc
push
enter
xor
out
gs
pop
mov
inc
loopne
cmp
not
jo
mov
mov
and
sbb
mov
mov
dec
cmp
shrl
out
xor
mov
add
xchg
call
stos
xlat
dec
cs
dec
shrl
mov
dec
adc
ss
out
fsts
in
push
jecxz
popf
outsl
jae
mov
mov
and
aad
inc
xor
movsl
mov
test
or
out
dec
xchg
cmpsl
jne
stc
inc
xchg
sub
into
popa
xlat
add
or
inc
fisttpl
orb
leave
scas
and
loopne
xchg
xchg
adc
cmc
push
push
and
inc
mov
mov
fistpl
pushf
sub
push
mov
cmpsl
mov
sub
sbb
mov
cmp
cli
insl
dec
cmp
mov
pop
xlat
push
mov
dec
lahf
ficoms
xchg
in
scas
es
loope
jl
jnp
cs
mov
int3
sub
add
enter
jo
cmp
out
je
outsb
sub
in
test
mov
mov
adc
mov
jp
xorb
aad
sbb
in
dec
es
js
cmp
adc
mov
or
adc
jecxz
movsl
in
mov
mov
and
loop
add
outsl
dec
int
cmpsl
ret
jg
sbb
push
lret
mov
call
hlt
mov
addr16
jns
pop
jo
xchg
mov
mov
push
jmp
into
mov
cmp
pusha
stos
nop
into
push
arpl
mov
adc
bound
jecxz
sub
jae
daa
mov
call
adc
gs
leave
sti
sbb
icebp
das
mov
jo
pop
int
das
xchg
sub
pop
push
fwait
roll
insb
out
popf
mov
sbb
sub
xor
sub
hlt
add
adc
sbb
mov
or
pop
cld
pop
inc
stos
mov
inc
ljmp
sub
repz
inc
mov
rclb
imul
es
inc
adcb
mov
fsubrp
pop
cmp
push
rcrb
dec
and
lret
push
mov
pop
lret
jns
jnp
cltd
jno
push
les
cmc
jae
fwait
aaa
adc
xchg
imul
sbb
jo
cwtl
sub
cmpsb
cli
add
sub
ret
test
mov
es
or
push
ss
les
dec
jg
inc
inc
mov
mov
push
fstps
jbe
loop
cmp
aas
jbe
das
push
in
insl
fisttpl
ss
or
imul
pushf
add
shlb
outsb
jb
inc
inc
fnstenv
sarl
inc
imul
sub
adc
add
stos
fwait
mov
lret
inc
mov
and
pop
shrb
sti
bound
arpl
hlt
cmc
dec
adc
mov
fldt
jmp
pop
mov
rorl
jecxz
mov
fisubrs
dec
popf
mov
andl
inc
mov
push
jge
dec
stos
in
cmp
cs
hlt
lcall
push
pop
repnz
nop
inc
in
test
mov
push
enter
int
or
mov
js
xor
inc
movsb
dec
dec
es
bound
add
out
jge
lret
fs
mov
and
das
shlb
pop
pop
orb
push
lcall
add
fbld
mov
enter
or
adc
jge
orl
lods
mov
sub
push
fcoms
sub
inc
rcrb
lret
js
mov
mov
xor
xchg
out
cmp
into
imul
cmp
xchg
popf
scas
jno
mov
fnsave
rcrb
ret
into
stos
xor
sbb
insl
mov
mov
push
fcomp
pop
xchg
ret
outsb
fwait
pop
sahf
jnp
adc
stc
mov
cmp
mov
dec
bound
test
pop
jnp
es
jo
xor
xor
xchg
and
dec
xchg
jbe
cltd
lds
jns
orl
insl
adc
sub
pop
call
daa
hlt
inc
test
mov
das
push
fisubrs
mov
xchg
sbb
add
test
movsb
mov
stos
adc
enter
mov
sti
in
mov
mov
mov
test
sahf
mov
mov
mov
enter
insl
or
xchg
bound
lret
lods
testl
cmp
stc
je
aad
ret
add
in
dec
dec
and
repz
daa
fmuls
icebp
mov
pusha
test
push
cmpsl
sbb
mov
add
in
inc
pause
adc
inc
icebp
mov
cs
pop
gs
and
mov
popf
stc
ret
mov
adc
nop
cwtl
data16
mov
xor
cmp
call
jne
das
xor
pusha
dec
jo
lahf
inc
lret
xor
insl
loope
icebp
pusha
mov
movsb
dec
out
and
jae
push
mov
lea
mov
aad
out
iret
fbstp
insl
stos
xorb
dec
dec
mov
sarl
pop
scas
pop
ds
inc
xlat
dec
dec
adc
and
in
sbb
es
and
jns
cmp
lcall
scas
fcmovne
cmp
sub
push
out
mov
adc
or
pushf
inc
mov
int3
mov
lcall
in
das
in
push
rcrb
xchg
enter
loop
std
pop
or
in
inc
push
adc
mov
ja
popa
test
xchg
mov
mov
and
mov
jb
lret
mov
sub
ret
movsl
sbb
cwtl
xchg
cmpl
add
jae
ja
rolb
loop
inc
push
ljmp
filds
cmc
pop
orps
or
test
xchg
xor
jmp
sub
jb
lahf
cs
adc
cwtl
push
movsl
push
xchg
xor
mov
pusha
push
pop
jge
xor
mov
sarl
dec
xor
cmp
mov
test
das
jo
outsl
add
loopne
jno
or
jnp
and
mov
mov
cmp
xchg
cs
fnsave
pop
cmp
cli
clc
sahf
lods
add
inc
das
jne
mov
dec
mov
subl
cs
insb
xchg
inc
aad
or
in
xor
addb
cmpsl
adc
loopew
push
xor
xchg
xchg
scas
dec
ljmp
out
mov
mov
push
adc
lea
leave
jbe
ljmp
and
sub
stos
xchg
int3
push
ret
xchg
or
das
call
adc
push
sbb
or
in
jo
daa
inc
mov
mov
mov
add
sub
stos
adc
inc
ret
mov
cmpl
rcrl
sbb
mov
paddb
dec
sub
pop
push
inc
mov
arpl
add
mov
mov
push
jl
fstps
and
sub
or
dec
sbb
or
andb
adc
sbb
jmp
dec
adc
pop
mov
dec
into
gs
jo
push
pop
jne
mov
xor
adcb
jae
es
jns
lods
sahf
ds
outsl
mov
psubq
jno
shl
pop
idivb
add
lahf
ss
add
test
or
jg
inc
xchg
aad
cmp
xchg
call
outsl
push
pop
rorb
mov
popf
mov
shll
jae
jbe
push
out
imul
cmc
mov
xor
mov
mov
loopne
sub
loope
enter
push
addr16
and
stos
arpl
cmp
xchg
dec
data16
cmpsl
loope
and
and
mov
mov
ret
aad
push
popf
shll
test
stos
push
dec
jmp
mov
in
mov
lock
xor
movsb
ja
pavgw
ret
mov
jb
iret
push
out
push
pop
sbbb
test
inc
fiaddl
push
xchg
sahf
sub
sqrtps
mov
sti
fcomip
sub
pop
sti
mov
xchg
daa
sub
xor
imulb
bound
cmp
lcall
cmp
dec
pop
jo
in
dec
sbb
mov
jno
dec
rol
das
jle
idivb
dec
push
flds
dec
and
dec
idivl
or
repnz
das
ja
testb
lods
sub
pop
inc
aas
push
jo
add
xchg
sub
cmp
add
or
mov
inc
xchg
push
cld
xchg
leave
adc
out
fs
out
in
test
out
lcall
ja
xor
mov
add
inc
pop
dec
and
gs
repnz
cmpsb
mov
dec
testb
xor
xchg
jecxz
push
out
inc
fbstp
dec
je
xlat
mov
ret
sbb
xchg
cltd
sub
mov
sub
fnsave
lret
shr
push
bound
cs
inc
sbb
and
js
add
adc
iret
or
lcall
fs
rcll
mov
pusha
ss
mov
push
lahf
cmp
loopne
ret
sbb
push
push
mov
loopne
inc
add
mov
adc
or
mov
decl
lret
lds
out
mov
or
mov
push
jnp
sub
inc
push
mov
push
mov
inc
sbb
push
repnz
or
mov
push
int3
movsb
cmc
mov
das
and
cmp
sbb
add
cmp
shl
lret
notb
cs
mov
clc
mov
pop
adc
mov
inc
xlat
clc
mov
and
mov
jbe
pop
mov
stos
in
lret
xorb
or
mov
push
inc
js
cmp
popa
or
mov
dec
cmp
cmp
add
jge
push
push
add
sub
je
cltd
xor
inc
cli
adc
pop
cwtl
jbe
add
xchg
into
movsb
push
inc
inc
lods
js
add
xor
or
bound
jmp
push
sbb
pop
jmp
insb
cld
push
push
adc
aas
xchg
imul
sub
stos
and
jno
jno
cmpsb
and
mov
test
mov
sbb
sbb
int3
cmp
cli
outsb
mov
add
add
inc
and
pop
and
repnz
pop
xchg
dec
push
xchg
add
inc
call
jno
sbb
es
pop
pushf
push
sub
xchg
sub
shlb
pop
roll
fmull
decb
loope
push
fcmove
adc
shll
inc
pop
xor
mov
inc
out
inc
pushf
imul
in
in
in
mov
dec
dec
scas
packsswb
ljmp
sub
add
decb
sub
shr
test
daa
xchg
test
and
xor
xor
mov
xchg
xor
test
xlat
in
xor
lcall
or
outsl
popa
jl
cltd
or
shrb
pop
sbb
xor
shlb
xlat
pop
mov
mov
mov
shlb
dec
or
out
mov
or
bound
lcall
fwait
lret
push
movsb
sub
incl
stc
adc
inc
cmp
and
pop
mov
xor
push
cltd
out
fsubrs
dec
mov
mov
fimuls
pause
call
loopne
inc
test
lret
int
fnstcw
add
mov
pmovmskb
or
pop
add
jecxz
les
push
fcom
lock
xchg
mov
inc
cltd
loope
pop
imul
push
cmpl
inc
stc
jae
inc
jno
shlb
cmpsl
adc
cltd
pop
or
scas
sbb
pop
jp
pop
inc
cli
shlb
aas
pop
es
rorl
add
mov
pop
adc
pop
movsl
mov
mov
push
mov
ss
movsl
lock
ret
rcl
xchg
lock
jno
loop
mov
imul
mov
mov
jno
les
sub
sahf
iret
mov
cmp
scas
inc
cmc
cwtl
out
xchg
out
rclb
fdivs
dec
dec
pop
push
mov
push
push
out
mov
pop
jbe
ja
mov
mov
dec
test
cli
jg
adc
add
jne
sahf
repz
in
adc
cli
xchg
popf
cltd
test
fmul
mov
inc
sub
ljmp
dec
or
push
ljmp
xor
push
call
mov
pop
push
pop
imul
xor
xchg
loopne
cmp
cmc
mov
push
cmp
ret
sub
lret
in
lret
mov
js
xor
cltd
mov
mov
repz
add
or
inc
int
jmp
inc
mov
dec
jne
cmp
mov
xorb
sti
aam
and
enter
aas
leave
test
rcrb
dec
pop
mov
adc
or
jecxz
or
popf
jp
stos
xchg
repz
and
pop
pop
pop
adc
out
adc
mov
test
sub
adcb
dec
add
cli
jl
inc
fnstcw
fisubl
pusha
or
mov
fadds
cmp
pusha
pop
jbe
cmp
xor
jge
or
daa
cmp
insb
cli
jp
adc
mov
ror
xlat
inc
stos
shll
jb
add
rorb
xchg
mov
mov
jne
push
xchg
dec
in
or
pusha
js
mov
mov
shlb
dec
pop
mov
or
push
icebp
fyl2x
and
sarb
stc
inc
and
shl
add
popf
mov
das
rcrl
or
shl
jb
icebp
push
and
push
lret
insb
sti
sub
xchg
mov
fstpl
lret
fwait
cld
in
cmc
mov
xchg
cltd
dec
lcall
mov
xchg
mov
push
lods
data16
inc
fwait
test
pop
jo
jl
sub
or
fisubrs
shll
int
dec
and
addr16
add
mov
fmull
pop
mov
in
xchg
mov
rclb
adc
jns
push
in
mov
cmp
and
mov
cmpsb
push
dec
int
sbbl
arpl
cli
pop
mov
dec
pop
mov
dec
jp
stc
mov
push
fidivrs
int
mov
rcrb
imul
cmp
cmp
aad
pop
cmc
shl
inc
clc
cmpsb
add
xchg
outsl
aad
js
sahf
stos
dec
jge
xor
lods
dec
mov
sub
mov
and
mov
mov
enter
cmc
pop
pop
pushf
mov
cmp
es
push
mov
les
xchg
dec
jo
movsl
push
out
dec
jbe
or
sub
mov
aad
cmpsl
scas
or
ret
scas
adc
jo
cmp
xor
aas
shll
arpl
sarb
mov
mov
fwait
xchg
sbb
in
dec
stc
fs
rcrb
sub
add
sub
and
in
or
sti
mov
fmull
fs
xchg
jmp
inc
enter
ljmp
jb
dec
fisubrs
shlb
xchg
add
sbb
mov
pop
xchg
pop
push
fsubp
mov
es
ss
movsb
gs
sbb
pop
mov
les
iret
ds
lret
lret
jae
xchg
mov
lods
and
or
shll
xor
sub
test
rorb
xchg
mov
in
ret
aad
jp
pop
jmp
add
cmp
xchg
sbb
xor
and
mov
inc
push
in
scas
inc
mov
add
add
sub
jl
jle
shrl
cmp
sbb
jecxz
out
xor
mov
mov
sbb
enter
std
push
int
in
jno
pusha
adc
cmpsl
test
inc
std
add
cmpsl
xchg
sbb
in
loopne
jb
xchg
mov
sbb
js
int
push
loopne
loopne
mov
push
jg
mov
inc
sahf
sub
cwtl
out
pusha
push
xchg
pusha
or
lcall
sbb
sub
sub
icebp
push
xor
fstpt
jmp
call
xor
push
adc
jne
xchg
stos
out
adc
pushl
out
sub
scas
cs
aas
xor
xchg
insl
ret
xor
in
sbb
jp
mov
ss
dec
in
jge
mov
pop
loop
test
push
aam
cmp
mov
push
fwait
sub
loop
mov
mov
or
ds
push
fbld
aad
fdivp
cli
lea
nop
mov
or
add
lcall
cmpsl
call
sti
xor
insb
popf
std
movsb
mov
and
sarb
out
mov
cmp
pop
mov
lds
test
and
xlat
or
je
das
xchg
lahf
clc
jmp
mov
addb
cmpsl
ds
aas
out
dec
sub
lds
pop
push
adc
test
fistpl
je
push
jae
jb
ljmp
cmp
pop
sub
adc
inc
add
mov
pop
movsl
jae
call
mov
nop
xor
add
fcmovb
mov
imul
mov
push
mov
iret
mov
shlb
rcrb
vprotb
and
inc
mov
push
int3
sub
jnp
add
mov
es
adc
outsb
xchg
add
mov
dec
pop
push
les
cmp
mov
push
xor
daa
lret
jnp
out
pop
subl
sbb
in
mov
fldcw
clc
iret
insb
ret
rolb
mov
dec
enter
cmp
inc
mov
sub
push
cmp
dec
clc
and
fucomi
inc
sahf
or
scas
mov
popf
or
pop
call
ja
outsl
addb
add
fcomi
jae
insb
sub
pop
jbe
inc
iret
adc
mov
jb
xchg
sub
lret
dec
out
cmc
popa
fadds
lds
adc
cmp
fstp
pop
paddusw
cld
cmp
lcall
ja
lret
mov
out
test
loope
pushf
push
and
pop
sti
inc
fnstcw
sbb
mov
cmpsl
add
and
leave
sub
mov
push
test
in
icebp
push
je
adc
std
xor
jmp
movsb
xchg
adc
mov
xchg
sub
push
aam
data16
sahf
push
out
cmp
gs
xor
inc
inc
ja
push
rolb
loope
ss
cmp
repz
data16
mov
and
xchg
or
add
ljmp
jno
out
fdivr
bound
popf
icebp
pop
das
in
cmp
jb
outsl
mov
xchg
cmc
mov
pop
test
cmpsl
inc
inc
pushf
sti
enter
xchg
in
sbb
xor
sub
adc
mov
or
xlat
cmp
push
in
inc
or
mov
addr16
fmull
jle
sub
push
mov
js
sub
repz
pop
xchg
lahf
dec
subl
mov
cmp
rorl
notl
mov
cmc
sbb
rolb
fisttpl
inc
cli
pop
data16
inc
jbe
hlt
and
mov
sahf
pusha
jl
mov
pop
lds
std
sub
iret
jbe
add
fdivs
pop
in
mov
jb
mov
sbb
or
sub
jnp
stc
dec
jb
sti
xchg
cltd
mov
adc
addr16
shrb
fcomi
and
fwait
mov
sbbl
outsb
push
int3
vmwrite
cmc
jnp
xchg
rcr
pop
xor
xlat
pop
jecxz
fisubrs
popa
mov
pushf
scas
adcl
std
xchg
push
or
mov
fbstp
mov
gs
in
stos
xchg
push
or
push
sub
call
xchg
sahf
ljmp
or
jae
shlb
push
cmp
test
lcall
outsb
dec
jo
jg
mov
fcomps
dec
mov
out
icebp
out
movsl
push
daa
mov
inc
and
mov
jge
out
inc
xchg
cmp
addr16
out
es
jb
jae
fdivrp
dec
std
xchg
in
mov
fxch
loope
clc
lock
icebp
movsl
pop
inc
negl
dec
test
jecxz
mov
or
cmp
je
loop
or
loop
sub
test
sbb
cmp
call
sbb
mov
repnz
cmp
mov
outsb
repz
scas
mov
in
ret
pop
popf
add
cmp
std
pushf
cmp
pop
pop
aaa
es
loop
xchg
arpl
jp
dec
xor
pushfw
xor
loop
in
fiadds
pop
popf
in
and
sti
sbb
aam
or
cmpsb
jle
mov
fwait
sub
sti
and
jns
int
cmp
jecxz
pop
bound
sbb
nop
mov
loope
jge
xchg
adcl
js
push
jne
xchg
or
movntps
jecxz
mov
sub
jae
scas
jmp
cmp
outsl
mov
xchg
pusha
push
sub
xchg
fcmovne
add
adc
lods
mov
sub
clc
cmp
call
xor
orb
lods
pop
js
mov
jmp
cmp
fbstp
dec
pusha
stos
xor
cmpsb
jecxz
sbb
stos
mov
mov
ja
loope
cmp
fdivs
mov
xchg
lahf
add
lcall
ja
lret
cwtl
fisubl
xchg
div
dec
sahf
outsl
lods
cmp
test
mov
jnp
and
inc
inc
xor
shr
aam
cmp
cmpsb
pop
jle
mov
int
mov
mov
lret
in
movsl
cmp
push
push
jno
adc
mov
push
bound
leave
xlat
div
jne
mov
cmp
cmpsb
cmp
fistpll
rolb
xor
cmp
sbb
repz
xchg
repz
popf
sbb
inc
xrstors
inc
jecxz
or
int
out
jae
push
jno
dec
mov
imul
adc
pop
sbb
jnp
and
out
push
inc
sub
shlb
mov
stos
out
nop
xor
in
call
mov
decl
cmp
pop
outsb
dec
fmul
fwait
sbb
repz
pop
das
subb
adc
push
push
jg
adc
mov
pop
mov
aas
jmp
dec
add
jno
ss
shll
cmp
pop
pop
ds
daa
scas
dec
xor
fwait
dec
dec
xchg
inc
mov
mov
outsb
jmp
xor
push
rcrl
push
mov
dec
adc
mov
jge
mov
iret
mov
mov
fs
loope
sub
and
push
dec
sbb
and
cmp
xchg
addr16
add
mov
mov
fstps
popf
adc
mov
dec
mov
adc
hlt
add
add
add
cld
xor
adcl
mov
mov
in
or
xchg
mov
les
mov
bound
fwait
inc
rol
repnz
inc
lret
xor
mov
mov
decb
pop
mov
inc
lret
pop
out
mov
aad
push
cmp
jb
test
scas
jno
inc
lahf
lods
iret
orb
jmp
cmp
lods
jmp
fcmovnbe
jmp
pop
hlt
and
test
mov
jb
adc
mov
mov
add
out
and
ds
or
adc
sub
into
setle
out
fcoms
xor
jbe
je
in
pop
std
jg
dec
cmp
inc
out
pop
mov
dec
lcall
rolb
lods
int
ds
sub
xchg
aaa
shrl
cld
cwtl
jbe
in
cmp
in
sbb
pop
mov
xchg
das
xor
cmp
fwait
xchg
push
inc
lods
std
xchg
pop
jns
xchg
out
mov
sbb
push
sub
pop
and
sub
push
or
mov
jbe
bound
nop
daa
sub
scas
inc
int
jbe
push
ror
bnd
iret
mov
push
inc
loop
sbb
xchg
loop
test
aam
xchg
cmove
shr
sahf
mull
inc
pop
sarl
push
popf
imul
cwtl
lods
cmp
fdivl
loope
in
das
fdivr
rorl
and
jl
mov
jmp
test
mov
movsl
mov
hlt
jne
mov
xchg
pop
je
cmp
lds
cmc
push
mov
test
es
fsubrs
add
pushf
cmp
insl
cld
rcrb
xchg
mov
clc
aas
test
push
cmp
and
lret
sbb
montmul
cmpsb
add
cli
jne
stos
sub
test
mov
dec
icebp
ret
hlt
adc
enter
mov
call
mov
mov
arpl
loop
loopne
push
mov
fdivrs
ja
clc
lret
faddl
in
jg
xchg
xor
into
daa
xchg
shll
cwtl
sbb
xor
jo
sub
mov
xor
mov
cmp
sti
negb
repz
mov
dec
scas
out
cld
dec
push
push
or
sub
cmp
repz
mov
fisubl
dec
xor
mov
ret
sub
add
fsubrs
adc
cmp
stos
das
mov
test
cmp
cmp
andl
jmp
adc
js
xchg
aaa
push
int
decl
shrl
in
cld
jae
aam
xor
mov
cmp
push
notb
or
xchg
xchg
insb
xchg
ret
pushf
push
mov
in
xchg
repnz
rcll
cmp
out
lcall
mov
xor
lret
mov
pop
lds
insl
pop
cmp
repnz
mov
push
shl
out
cmp
mov
test
cmpsb
adc
push
sbb
sub
ljmp
lock
sub
cmp
adc
enter
inc
mov
jno
shll
fistpll
jge
mov
js
pop
test
rorl
daa
jecxz
ss
pop
mov
xchg
mov
jle
inc
mov
daa
and
push
mov
or
test
jle
lods
fldl
lds
inc
xlat
scas
pop
ror
or
out
push
imul
popf
jg
pop
xor
cmp
cwtl
mov
push
insl
mov
lahf
repnz
pop
cmc
xor
fidivrl
clc
sub
inc
pop
xchg
out
test
sub
pop
cli
cwtl
sub
push
lods
cld
aad
pop
nop
int3
xor
sbb
pop
push
pop
data16
je
push
test
sahf
mov
in
fidivrs
sub
hlt
sub
xchg
mov
adc
cltd
pushl
xor
or
pop
repz
lock
inc
mov
add
inc
pusha
pop
scas
mov
int3
shlb
mov
mov
fsubrs
in
cmpsb
push
sbb
sub
sbb
mov
loope
clc
ret
out
jl
push
dec
sub
mov
ds
jo
test
adc
pop
iret
mov
ret
push
cmp
xlat
push
fmull
lods
and
ss
cmp
lods
ss
notl
shlb
or
test
dec
lock
and
shl
inc
popa
xchg
and
lds
out
aam
repz
xor
xchg
jp
mov
xor
and
in
fcomps
sub
cli
sbb
mov
aad
inc
pop
dec
aam
jo
dec
dec
add
xor
dec
add
cltd
ds
je
mov
cmp
jmp
pop
das
or
clc
push
outsl
sub
cmpsb
dec
ret
test
repnz
xor
out
insl
call
or
lret
or
xor
pusha
jmp
or
orb
dec
ret
loop
pop
inc
imul
mov
add
cs
push
xlat
jmp
mov
push
rcrl
mov
insl
and
iret
outsb
loope
gs
dec
cmp
popa
icebp
repz
add
sbb
xchg
xor
loopne
stos
pop
movsl
lds
aad
dec
pop
add
push
fisttpl
inc
add
rcr
jns
dec
repnz
cltd
xor
push
daa
fcoml
mov
in
loop
hlt
addr16
nop
inc
std
adc
pop
adc
imul
repnz
outsb
fisubrl
adc
jne
das
shlb
jnp
xchg
lods
push
cmp
cmc
es
sub
push
dec
sbb
mov
dec
into
cmpsb
mov
dec
fisttpll
pop
repnz
push
jns
push
add
leave
mov
daa
push
and
push
cli
pop
fsubrs
add
dec
leave
sbb
cmp
push
xchg
scas
pop
in
mov
inc
or
insb
add
add
test
dec
rolb
sahf
jb
and
and
xchg
cltd
xchg
test
ret
jle
or
mov
xchg
lcall
sub
lea
mov
enter
cmp
lret
add
in
cmp
dec
ret
xor
inc
pop
mov
ljmp
inc
cs
mov
push
or
shlb
aam
adc
mov
loop,pn
inc
loopne
xor
push
cwtl
daa
adc
cmovp
adc
cltd
xchg
test
dec
mov
adc
scas
xor
rolb
or
mov
stos
cs
jl
test
icebp
pop
out
and
jbe
pushl
sub
icebp
mov
rcrl
cmc
push
imul
mov
mov
cmp
dec
lret
and
pop
movsl
jne
testl
sub
in
xchg
xor
sub
sub
pop
gs
xor
out
dec
dec
pop
aas
cli
lods
sub
cwtl
jno
xor
out
out
add
hlt
outsl
sub
insl
mov
enter
cmp
add
and
ja
cmp
outsl
mov
movaps
sbb
mov
mov
sub
adc
out
add
lret
ret
mov
es
xchg
lret
inc
loopne
jge
es
pop
stos
ffree
and
movsl
mov
dec
mov
shl
pop
and
enter
jnp
inc
bound
fwait
jbe
popf
fistl
xor
push
addr16
out
pop
sub
hlt
lock
mov
lods
rcrb
push
lods
pop
iret
jne
sbb
stos
mov
push
cmp
or
cmp
xchg
add
insb
add
pushw
test
mov
jecxz
mov
xlat
sub
xchg
mov
xchg
cmp
cmp
mov
or
icebp
jns
cmp
negl
imul
or
and
sub
mov
in
add
iret
adc
int3
sub
shl
or
adc
or
fcmovb
pop
loope
adc
push
fstpt
aam
mov
rcrl
adc
mov
inc
imul
mov
mov
iret
jle
or
icebp
or
or
js
jecxz
push
mov
sbb
outsl
daa
lcall
inc
sbb
xchg
subl
stc
adc
push
or
sbb
aam
test
add
stos
in
push
jl
pop
scas
sbb
test
or
xchg
jb
out
adcb
cmp
mov
fistps
sub
ja
test
inc
shr
jns
es
cmpsl
clc
lret
mov
jmp
stos
xchg
and
jge
dec
in
sti
xchg
in
cmpsb
sarb
test
sar
inc
dec
fbstp
out
ss
mov
stos
sbb
and
xor
mov
sarb
and
frstor
hlt
mov
sbb
mov
shlb
adc
movl
or
or
andl
dec
cmp
inc
dec
mov
out
mov
push
pop
add
cmp
ficomps
and
fsubr
out
stos
xlat
call
test
lret
ja
fld
xchg
aaa
clc
mov
jle
adc
xchg
mov
cmp
jns
xlat
dec
mov
lock
in
dec
loope
repz
data16
cmp
add
testb
dec
arpl
popf
shl
lret
shlb
add
rorb
sbb
test
insb
mov
fisttpl
inc
fnstcw
jg
lret
xchg
mov
push
or
js
push
in
dec
dec
and
mov
jge
push
in
cltd
sahf
notl
mov
into
inc
mov
push
insl
add
push
push
insl
push
xor
or
xchg
out
add
jne
loopne
outsl
rcrb
rorb
aaa
jmp
repnz
dec
xor
push
shr
lahf
mov
mov
xchg
addr16
cmpsl
scas
inc
push
test
adc
add
and
cmp
pop
cwtl
lea
rolb
dec
push
fs
mov
icebp
rcrl
pop
cmpb
sub
dec
push
pop
pop
cmp
fbstp
cltd
xchg
cld
add
lret
loopne
jns
andl
sbb
xchg
js
cld
inc
xchg
repz
repz
inc
add
mov
xor
insl
mov
mov
jl
test
add
xor
mov
inc
in
ljmp
cmpsl
test
out
insb
fcmovb
inc
into
xchg
sub
lret
jb
xchg
cmpsb
push
lcall
in
es
cmc
cmp
push
out
lods
cmp
add
dec
jns
or
das
jge
dec
mov
sbb
leave
sub
push
insb
in
jo
mul
pop
mov
inc
mov
xor
mov
add
lods
in
les
xchg
mov
add
xor
fwait
xor
inc
cmpsl
pop
sti
or
fbstp
sti
cmp
jmp
or
mov
ljmp
clc
decb
fidivrs
stos
aad
sbb
lahf
js
mov
scas
dec
pop
cmp
pop
ds
mov
int
add
xor
dec
pusha
dec
push
scas
es
cli
out
push
sbb
dec
pop
inc
adc
test
in
jp
jno
daa
ja
dec
dec
jbe
cmc
dec
cmp
je
scas
jl
push
lock
orl
and
mov
adc
mov
es
daa
out
in
inc
adc
std
push
xchg
or
adc
add
repz
mov
mov
addr16
lahf
cli
jg
fwait
jbe
mov
or
cmp
bound
outsb
aad
je
push
sbbl
mov
stos
sub
push
out
repz
xor
lcall
mov
add
or
add
bound
cltd
jns
clc
mov
outsl
imul
cmp
adc
jg
xchg
sbb
xchg
mov
arpl
int3
xor
lods
or
fistpll
jno
push
pop
ja
or
push
jo
test
xor
dec
adc
sbb
adc
sub
das
dec
pop
xor
xor
pop
jno
rcrb
xchg
push
cmp
xor
je
stc
rolb
jg
cld
and
enter
mov
cwtl
lods
in
pop
pop
ljmpw
cmp
bound
cs
pop
push
rcrl
inc
scas
and
dec
insl
mov
lock
ja
repnz
pop
adc
pop
mov
dec
and
dec
mov
cld
xchg
adc
mov
pusha
inc
sarb
andl
dec
mov
dec
nop
movsl
shl
mov
mov
iret
icebp
adc
icebp
push
and
ss
push
test
rclb
pop
sub
dec
shrl
lea
scas
pop
xor
mov
or
scas
jns
jg
fcmovnu
repz
sbbl
sub
mov
push
test
repz
outsl
adc
inc
fdivs
cmp
lea
pusha
lods
xchg
mov
sbb
jmp
xchg
xchg
in
inc
adc
mov
push
test
pop
int3
orb
push
subl
leave
in
loop
cmp
dec
mov
mov
pop
cmp
pop
mov
ret
xor
std
ficoms
mov
jno
jns
sub
iret
sbb
ret
adc
test
push
cs
loop
jmp
aad
lret
movsb
inc
jp
mov
cmp
fsubrl
cltd
das
out
push
decb
idivl
jmp
add
inc
xor
fadd
sbb
adc
inc
jg
dec
pop
add
shl
aam
out
stc
push
stos
inc
sbbl
sub
push
mov
dec
mov
movsl
stos
in
das
sahf
scas
stc
and
clc
mov
lret
adc
push
adc
stos
int3
gs
pusha
pop
imul
lock
pop
xor
sub
xor
arpl
and
popa
xor
insl
mov
mov
sub
fucomp
out
inc
cmp
test
sbb
or
mov
addr16
lods
cwtl
xor
hlt
xor
jae
mov
jle
cwtl
push
lods
or
fpatan
jo
mov
pushf
mov
sbb
das
int3
jb
mov
pop
jae
mull
cmp
jno
test
repnz
or
int3
add
mov
lock
bound
adcb
and
stos
cmp
push
test
int
add
fnstenv
and
pop
ror
inc
xlat
cmp
flds
repnz
add
dec
mov
test
sbb
popf
push
inc
dec
leave
sbb
cltd
or
fdivrl
mov
sub
xor
inc
sub
loopne
adc
add
cmp
jecxz
sub
jecxz
repnz
in
mov
stc
ja
sub
hlt
or
cmp
jb
xchg
push
push
xchg
insl
out
xchg
jle
lret
scas
or
mov
and
fsubp
in
inc
inc
pop
pop
sbb
das
addr16
pop
int3
dec
xlat
cmc
cmc
in
out
adc
mov
inc
lods
shl
in
andb
push
lea
test
xchg
jp
cmc
push
mov
mov
in
cmp
mov
add
es
adc
int3
lret
dec
pop
test
xchg
mov
data16
add
jle
and
sbb
imul
daa
ret
hlt
int
ret
sub
aam
cs
push
clc
lods
loopne
in
test
pop
sbb
jp
jecxz
add
ret
mov
loopne
lock
rcrb
cmpsb
imul
roll
push
out
mov
das
arpl
xrelease
ret
clc
push
mov
std
rcl
mov
pop
mov
mov
or
bound
popf
or
mov
jmp
pop
les
lret
nop
pop
mov
and
jo
sub
dec
add
xchg
data16
push
in
jno
mov
out
andb
popa
jne
fidivrl
ffree
fidivrl
push
pop
xchg
sub
lahf
ss
pop
mov
sbb
negb
jge
out
adc
push
lret
test
dec
mov
cmpsb
jle
push
stos
inc
xchg
cmp
test
jmp
decb
jp
pop
ffreep
ret
add
fwait
mov
xchg
xchg
pusha
dec
mov
cmp
les
fcomp
outsb
pop
add
aas
push
les
mov
sub
enter
pop
sarb
pop
sub
inc
ljmp
test
jmpw
test
cli
ror
cwtl
mov
jp
adc
cmp
sbb
dec
xchg
rclb
add
test
and
dec
out
xor
xor
inc
cmpsb
cmp
adc
int
call
shll
mov
stos
cmc
dec
xlat
out
sub
es
out
test
sahf
cld
sbb
cmp
sub
popa
cmp
xchg
daa
mov
lret
inc
cmp
xor
jns
mov
sub
clc
cltd
add
mov
jne
xchg
test
aad
xchg
and
cmpl
xor
push
cmp
lods
fucomi
out
push
sbb
je
int3
loop
scas
dec
lds
lods
hlt
adc
es
xchg
sub
inc
mov
push
pop
notb
add
fisubl
xchg
xchg
fucomp
jle
and
mov
mov
sbb
out
lock
rcrl
fwait
xor
aas
imul
notb
push
repnz
out
repnz
jno
lcall
push
push
adc
jne
cmp
call
sbb
sub
push
sub
movsb
add
push
sbb
fnstenv
test
pop
jae
test
xor
nopl
loopne
popa
adc
push
mov
movsb
filds
push
popa
xchg
cli
popa
psllq
ret
and
dec
aaa
repnz
cli
adcb
mov
mov
popf
dec
out
pop
sarl
cwtl
insl
sahf
leave
xchg
push
add
les
sbbb
mov
clc
xchg
mov
cmc
inc
mov
mov
loopne
ror
xor
pusha
cmp
or
shll
mov
mov
and
mov
jmp
jge
or
sub
pop
rcll
xor
arpl
rcll
in
add
or
adc
rolb
cli
adc
mov
dec
andl
lock
xor
jge
add
pop
cmp
stc
inc
inc
fstps
jo
jl
adc
popf
mov
sti
xchg
scas
jns
adc
sub
addr16
in
scas
inc
aam
jno
inc
js
pop
push
out
pop
push
das
fstp
pop
or
jge
sbb
push
pusha
into
cmp
int3
arpl
mov
push
jnp
dec
stos
daa
push
loope
jl
mov
dec
push
or
lods
add
inc
pop
cmp
scas
pop
sbb
xchg
cwtl
mov
je
scas
cmp
xchg
mov
or
lcall
or
sbb
lret
sub
xor
in
xor
lock
rcrb
aam
sbb
pop
push
hlt
cwtl
sub
insb
inc
mov
pushf
mul
ljmp
int
loopne
inc
int3
mov
imul
iret
jno
or
adc
push
inc
shlb
inc
jns
cmc
std
testl
inc
insb
fildll
pop
pop
push
push
test
jnp
ljmp
inc
rcrb
lea
das
movsl
repnz
sbb
notb
or
mov
sbb
fcomi
and
xchg
int3
jle
cld
lods
jg
mov
jl
das
loopne
pop
xchg
cmc
and
test
inc
sbb
in
sbb
hlt
es
stos
lds
jnp
hlt
sahf
sahf
mov
adc
aam
cltd
shlb
lds
mov
sub
or
lret
lods
pop
lods
das
add
pop
ret
mov
xchg
mov
push
call
or
outsl
sbb
cmp
sbb
xchg
adc
pop
inc
sub
cld
jns
sarb
das
sahf
push
daa
out
sahf
mov
test
sub
and
dec
hlt
rep
cmpsb
cmp
push
cmc
xchg
jo
dec
loop
sbbl
pusha
pop
lahf
outsl
or
push
les
mov
jecxz
lods
sarl
lods
repz
sub
xchg
push
mov
fs
lods
xor
jb
mov
mov
test
inc
stc
jecxz
shrb
xchg
shl
cltd
aam
cmp
test
movsl
icebp
jb
pop
adc
xlat
dec
in
mov
in
rcrl
insb
orb
leave
push
mov
aam
xchg
outsb
subl
in
or
enter
xchg
jl
cmp
out
xor
pushf
xor
mov
stc
mov
fst
cmpsl
jns
or
pop
cltd
and
addr16
inc
fwait
icebp
pop
cmpsl
fs
inc
stc
jae
jmp
or
int3
arpl
mov
push
imul
scas
mov
fnclex
adc
xor
cli
cmp
int3
or
cmp
divb
xchg
test
or
fwait
mov
pop
or
xor
cmp
jnp
stos
pop
rorl
arpl
movsb
adc
shl
mov
mov
jae
movsl
adc
pop
rolb
sbbl
loopne
std
adc
cmpsl
push
xchg
arpl
aam
test
add
sbb
out
stc
les
sub
andl
mov
adc
aaa
jp
imul
stos
dec
pusha
mov
mov
pop
dec
aad
and
test
popa
sbb
sbb
fwait
or
mov
packssdw
and
rcrl
ss
out
xchg
fisttps
stc
shlb
imul
movsb
sub
mov
test
data16
ljmp
sub
leave
scas
aas
cli
xchg
mov
dec
sarb
hlt
pop
adc
jnp
dec
and
inc
sti
inc
aam
pop
cld
xor
insl
mov
push
inc
gs
iret
test
mov
insb
mov
sbb
xlat
out
mov
mov
and
pop
movsb
flds
cmpsb
movsb
inc
mov
push
loopne
mov
dec
stos
cmp
pop
xor
xor
mov
outsl
xchg
xchg
xchg
repnz
je
test
or
xor
push
hlt
lret
sub
test
mov
out
aaa
fiaddl
xchg
in
jg
insb
loop
pop
jle
push
das
enter
xor
push
repnz
push
les
or
mov
lahf
push
cmp
sub
iret
nop
sbb
pop
xor
icebp
or
pop
dec
cmpsb
sub
pop
ljmp
cmpsl
inc
mov
ret
bound
inc
add
mov
push
sbb
pop
mov
pop
enter
jno
sti
dec
bound
out
dec
out
sbb
xchg
lahf
sahf
ljmp
add
fdivs
leave
bound
xchg
cmpsb
lock
jmp
scas
xor
enter
adc
lahf
out
inc
push
int3
adcl
mov
fistpll
rcll
mov
adc
lods
sbb
inc
mov
fwait
dec
and
inc
outsl
aad
xor
push
out
test
xor
sub
pop
pop
out
inc
fsubl
fdivs
mov
or
dec
sar
ss
push
and
adc
push
mov
lea
icebp
push
loopne
jg
and
dec
pop
mov
xor
push
xor
enter
icebp
mov
lret
mov
and
insl
aad
les
data16
xchg
cmc
scas
pop
mov
call
and
and
or
sub
gs
mov
add
sub
add
sahf
xchg
jecxz
lret
xchg
dec
in
in
dec
pop
pop
out
insb
cmp
dec
pop
in
test
loopne
push
in
vxorpd
subb
or
outsl
sub
sub
loopne
rcl
imul
pop
pop
xlat
out
dec
pusha
and
sub
cmp
dec
arpl
rcrb
leave
and
outsb
mov
and
movsl
cmp
xor
addr16
push
push
add
lds
stos
push
pop
inc
pop
lea
inc
adc
sbb
pop
pusha
adc
xor
sbb
ss
push
mov
rcr
add
sbb
cmp
cmp
sub
fstpl
xchg
mov
jg
add
loopne
in
idivl
mov
mov
fildll
movsl
cmp
popa
pop
xchg
lahf
lds
mov
add
daa
popa
mov
stos
lret
or
mov
dec
fwait
sti
xchg
fdivrp
cltd
mov
lcall
sahf
shll
push
fildll
or
andb
sub
int
roll
push
push
push
pop
pushf
hlt
icebp
test
cmp
les
out
pop
adc
jnp
sub
dec
and
rcrl
aad
into
or
fistps
cmp
insb
push
dec
add
test
jo
pop
adc
cs
sbb
in
jne
in
mov
adc
xchg
pushf
jne
dec
xchg
fsts
fsts
fs
into
and
test
jae
mov
adc
idivb
sub
adc
sbb
clc
shrb
leave
sarb
lret
adc
push
sub
adc
mov
rclb
test
lcall
jecxz
jns
in
cmp
mov
mov
repz
jb
sub
mov
mov
pop
rcrb
mov
push
ret
imul
stos
mov
roll
add
mov
fsts
in
rcrl
aad
lahf
mul
loopne
daa
and
imul
cltd
lods
fstl
lretw
clc
repnz
adc
test
add
insl
bound
mov
out
or
outsb
sbb
test
jp
cmp
stos
rcl
repnz
testb
mov
pushf
enter
cmp
pop
sbb
jecxz
clc
inc
push
push
rcrb
cmp
scas
fcoms
pop
clc
insl
jge
ret
jne
jg
adc
outsl
mov
push
jmp
mov
jo
pop
insb
movsl
cwtl
sbb
std
inc
aas
push
in
nop
dec
dec
inc
pop
clc
imul
fidivrl
sub
push
in
cmpl
xchg
and
scas
inc
cmp
jne
mov
inc
pop
cmp
test
jge
fcom
daa
cld
out
xor
lcall
outsb
dec
jo
repz
cltd
ret
xorl
adc
ja
mov
mov
inc
cmpl
inc
ljmp
inc
jo
test
fwait
xor
jg
dec
jecxz
addr16
pop
insl
mov
std
pop
adc
jne
pop
mov
mov
or
adc
mov
dec
mov
mov
stos
inc
mov
add
pop
cmpsb
mov
sbb
scas
jno
jl
rorl
fistpl
or
sbb
jae
lods
jmp
adc
out
xchg
xchg
sub
imul
insb
jge
sub
xchg
add
or
pop
les
mov
adc
pusha
and
jecxz
mov
cmp
jge
push
lods
sbb
inc
fistpl
in
jnp
stos
cld
sub
push
inc
mov
fwait
repz
pusha
inc
pushf
dec
adc
stc
mov
popa
lea
cltd
push
sub
out
pop
and
jge
es
mov
lock
xor
or
push
mov
push
jns
lahf
xor
adc
out
push
cmp
inc
das
jp
pop
push
rclb
js
sahf
or
inc
popf
lds
mov
mov
mov
xor
add
cmpsl
incl
inc
jns
addr16
iret
stos
push
inc
xchg
bound
inc
lcall
push
lcall
popa
xor
fistl
pop
pop
pop
in
popa
dec
mov
add
clc
inc
sbb
adc
inc
add
das
mov
fadds
pop
fstps
int3
lods
popa
or
dec
ss
jae
ja
mov
icebp
pop
pusha
stos
rorb
sbb
mov
push
test
sbb
and
stos
shrb
cld
mov
out
hlt
cmp
or
inc
repz
mov
fs
es
jle
xchg
lods
sti
mov
pop
sbb
pop
in
ja
or
pop
stos
jge
iret
adcb
or
pop
xchg
cli
mov
test
mov
push
xchg
cli
pshufw
loop
jl
stos
ds
lret
repnz
mov
ja
jns
cmp
inc
icebp
and
fists
lahf
adc
push
and
fwait
mov
xor
aad
mov
hlt
insl
add
mov
and
dec
mov
sbb
sub
out
and
xor
adc
push
adc
roll
xor
dec
fiaddl
sar
aad
scas
fwait
and
lods
xor
das
cmpsb
mov
mov
mov
iret
movsl
in
inc
pop
jmp
mov
mov
inc
fyl2x
jbe
sub
enter
jmp
nop
pop
ret
xchg
insl
bnd
stos
push
hlt
mov
adc
push
movb
cmp
xor
es
or
sbbb
mov
test
fcmovnbe
test
aad
and
xor
push
jae
and
sbb
xchg
mov
imul
fldl
int
pop
xchg
jmp
mov
jno
rolb
adc
mov
push
xchg
xor
movsb
stc
je
nop
scas
pop
add
cmpsb
mov
arpl
das
loope
icebp
andb
dec
out
inc
push
cmc
mov
insl
hlt
pusha
pop
jl
mov
sbb
dec
cmp
shl
adc
push
push
repz
testb
add
xchg
push
test
jne
xchg
mov
ja
mov
or
cmpsl
cmp
mov
movl
popf
mov
pop
xrelease
mov
ret
in
sbb
push
outsl
in
insl
or
jmp
xchg
cmp
jg
mov
add
test
mov
clc
addr16
push
mov
fs
out
sahf
in
jbe
out
out
pop
neg
xchg
jne
push
ljmp
call
mov
push
mov
loopne
mov
adc
mov
jno
adc
repnz
bound
xchg
adc
or
lods
xor
or
daa
arpl
push
pop
cmpsb
ret
xchg
ljmp
mov
lcall
mov
in
scas
or
aas
roll
inc
sahf
mov
inc
and
aaa
dec
cmp
dec
pop
lods
mov
push
iret
stc
lock
pop
push
adc
cld
jecxz
cwtl
mov
ss
xor
sbb
js
add
in
pop
cwtl
stc
xlat
jmp
add
std
fs
popf
mov
mov
cs
xor
es
fld
xchg
sub
and
and
mov
cli
mov
ret
xor
fsubs
jo
shll
int
dec
cli
ret
dec
in
dec
xchg
mov
sbb
daa
sbb
mov
arpl
push
adc
add
arpl
clc
adc
int
hlt
hlt
movsb
mov
push
xchg
shrb
or
push
inc
dec
inc
fsubs
pop
mov
fidivrs
out
mov
cli
mov
jb
and
pop
or
fcmovbe
sub
loop
inc
mov
sbb
dec
inc
inc
lcall
call
mov
sub
dec
push
enter
mov
pop
repz
lahf
popa
mov
dec
cmp
jno
lods
mov
inc
in
push
pop
fs
or
les
clc
pop
pop
das
and
sbb
xchg
out
add
mov
mov
dec
movsb
sub
cmc
dec
sub
notrack
mov
mov
sti
inc
pop
lods
std
sbb
lock
in
in
movsb
ja
or
in
aaa
stos
mov
add
pop
mov
je
outsb
mov
adc
inc
or
inc
xor
push
mov
int
scas
or
mov
shll
xor
dec
pop
lods
negb
shlb
shll
xchg
jns
insb
sub
orl
ret
hlt
das
out
int3
aad
push
in
into
adc
inc
mov
xor
je
int
cli
mov
mov
xor
xor
push
rclb
pushf
cli
sti
fcmovu
inc
andl
addr16
mov
xor
dec
mov
cmp
jp
mov
sub
gs
cltd
xor
pop
sbbb
jns
pop
sti
daa
mov
dec
add
push
outsl
dec
xchg
and
in
mov
push
inc
inc
jl
cmp
push
ss
fs
js
mov
cli
dec
fwait
or
das
pop
hlt
pop
pop
rol
pop
rolb
pusha
lea
aam
and
xchg
add
out
sahf
pop
add
push
les
mov
sub
and
out
xchg
in
or
adc
mov
pop
pop
dec
mov
test
aaa
push
or
inc
bound
cmpsb
imul
aam
mov
hlt
ss
pop
bnd
push
rcrb
jns
outsb
shll
mov
xlat
jl
iret
adcb
xor
outsl
push
in
xorb
das
mov
imul
addr16
push
arpl
outsb
add
push
mov
popa
jbe
jbe
inc
xor
inc
mov
dec
cmp
mov
loopne
decl
and
or
cltd
pushf
iret
outsb
es
leave
loopne
or
cmc
mov
gs
out
adc
xor
into
stos
pop
cmpsb
scas
scas
adc
jp
dec
mov
dec
inc
or
insb
sbb
iret
loope
sahf
dec
pop
sbb
mov
pop
mov
pusha
sbb
fs
aaa
or
jb
gs
daa
mov
xor
fidivrl
or
data16
or
xorl
fwait
mov
add
filds
lahf
mov
jae
xchg
pushf
pop
jmp
push
or
bound
and
and
lods
jg
sub
pushf
push
lea
test
rclb
or
mov
inc
loopne
sub
inc
inc
dec
sub
push
xchg
jb
dec
aam
push
xchg
sbb
out
mov
inc
pop
push
outsb
lods
call
pop
movsl
xor
jae
jp
dec
cwtl
ss
inc
lcall
lcall
lods
arpl
imul
les
andb
mov
xchg
out
and
pop
mov
push
mov
push
xchg
pop
or
out
pop
dec
push
loop
repz
mov
imul
nop
data16
mov
outsl
cmp
adc
sub
repz
lcall
sahf
add
cmp
inc
pushf
out
les
push
pop
out
test
fildl
dec
rclb
sbb
loop
in
sub
repz
or
jae
aas
loop
scas
in
jno
pop
or
mov
cmpxchg
push
mov
inc
jge
cmp
jp
clc
ret
enter
pop
mov
jnp
sbb
arpl
jmp
mov
test
mov
popf
xchg
gs
cli
mov
cs
data16
imul
les
sete
xchg
stos
xchg
dec
xor
or
insb
jl
mov
cmp
add
and
pop
repz
iret
cld
psubsw
movsb
fistps
inc
mov
imulb
mov
add
divb
and
bound
mov
push
xor
pop
pusha
das
dec
mov
fwait
imul
cmpsb
aad
xlat
jne
aad
dec
arpl
mov
fbstp
sahf
cmp
rcrl
jmp
mov
mov
xlat
clc
xor
insl
jne
mov
jecxz
data16
leave
sti
cmpsl
cmp
mov
popf
push
inc
push
cwtl
inc
jg
xchg
scas
dec
cmp
cld
lret
push
jecxz
rdtsc
jb
in
dec
sar
sbbb
lcall
lods
fs
aas
jp
or
les
icebp
xchg
fdiv
xor
pop
jnp
std
cmp
pop
cmc
add
test
mov
or
dec
add
fldl
aam
subl
fildl
cmp
xor
das
pop
sub
repnz
xchg
test
or
jge
mov
movsl
insl
jns
pop
and
or
scas
test
dec
pop
out
and
test
loopne
add
in
nop
mov
ret
pop
mov
fmul
lahf
cmp
or
fdiv
xchg
xchg
mov
movsb
mov
in
hlt
testl
lods
enter
add
arpl
into
sbb
hlt
fwait
inc
mov
adc
and
xchg
loop
inc
test
test
lods
jmp
cmp
lea
sar
mov
js
pushf
and
out
es
cwtl
std
xchg
scas
sub
sbb
adc
mov
pusha
movsl
cmpsl
in
pop
push
push
mov
cmp
jecxz
scas
clc
add
mov
adc
in
sbb
pop
mov
mov
pushf
cli
enter
jno
add
mov
das
cwtl
mov
inc
mov
gs
push
pop
in
sarl
sub
xlat
mov
inc
sbb
sbb
test
daa
pop
jl
jge
test
jb
pop
mov
inc
xchg
sti
cli
or
mov
int
mov
in
cmp
xor
sbb
lods
add
sbb
xchg
dec
mov
ret
add
sub
imul
gs
jg
in
jg
xor
out
std
cmpb
data16
xor
mov
push
dec
xor
shl
sub
cld
fimuls
rcl
dec
out
negb
in
and
out
cli
xor
icebp
mov
ss
cltd
sbbb
or
dec
ds
lock
sub
leave
xor
mov
insl
idivl
leave
push
movsl
mov
arpl
stc
jnp
outsl
daa
and
cwtl
push
ret
dec
xor
add
mov
add
popf
dec
adc
fwait
ljmp
push
jge
xor
push
push
inc
jnp
imul
mov
push
outsb
jecxz
add
out
jo
pop
repnz
or
repz
add
lahf
push
jecxz
push
push
mov
or
or
push
in
cmpsb
mov
dec
pusha
jmp
jmp
mov
inc
repz
rclb
dec
push
inc
out
les
fnstsw
cmc
fs
dec
push
sub
xor
dec
or
mov
mov
movl
xchg
adc
pusha
xchg
ds
jl
iret
shl
inc
mov
fcoms
aad
sti
jb
xorb
mov
mov
fnsave
sbb
push
pop
mov
sbb
jnp
enter
jno
jb
outsb
push
fcmovnb
lahf
std
xchg
adc
jle
daa
negl
decl
test
enter
lea
pop
cld
fs
adc
call
add
sbb
loopne
addr16
insl
jns
cmp
jle
xlat
mov
push
in
lret
xor
xchg
les
insb
out
sub
or
mulb
aam
ja
sub
test
sub
xor
outsl
in
out
dec
pop
pop
lds
or
cmp
add
call
lds
push
test
push
sub
cwtl
inc
inc
fwait
dec
sub
fs
cltd
and
loop
in
or
add
pop
addr16
mov
fisttps
mov
mov
add
js
je
bound
sub
stos
aam
pop
add
scas
lret
cmp
out
xchg
push
and
mov
and
jb
sbb
shr
mov
icebp
je
mov
mov
dec
jmp
test
lds
or
inc
sub
enter
inc
fs
lret
adc
clc
pop
cld
push
adc
add
dec
xor
mov
sub
imul
push
clc
loop
and
push
xor
arpl
push
dec
rcll
leave
xor
pop
xchg
mov
pop
inc
xor
adc
mov
fnstsw
push
or
nop
cmp
dec
loop
les
cmp
aaa
dec
ds
jnp
xchg
nop
mov
pop
scas
or
int
lret
dec
dec
aaa
clc
mov
in
dec
js
mov
cmpl
ljmp
mov
add
in
aaa
inc
and
jge
push
insb
call
mov
pop
jbe
fmulp
mov
in
in
jb
lods
fsubl
add
test
lock
jle
dec
daa
or
mov
inc
xchg
adc
lock
xchg
pop
aaa
xchg
adc
sub
adc
jo
inc
mov
mov
mov
inc
xor
pushf
adc
cmc
adc
andb
js
pop
pop
add
adc
ljmp
repnz
mov
push
movsl
and
cmpsl
dec
push
jne
negb
xor
sub
out
dec
push
xchg
mov
hlt
mov
and
mov
les
jno
ds
pop
add
loope
add
inc
push
cmova
cmpsl
sub
mov
pop
xor
out
or
ja
mov
mov
jp
ljmp
dec
sbbl
in
imul
in
push
pop
cmp
or
xor
jle
and
mov
popa
and
xchg
outsl
and
daa
sub
jns
sti
push
mov
inc
xchg
mov
mov
cmp
loopne
jnp
adc
cmp
pusha
int
in
bndstx
pop
imul
je
push
fdivp
mov
fcompl
ret
mov
push
xchg
add
leave
popf
mov
lds
xor
scas
arpl
inc
xor
cs
jno
push
es
imul
add
std
and
push
ljmp
sub
movsb
gs
testl
add
jecxz
or
scas
adc
push
loopne
dec
cmp
mov
filds
jp
movsl
call
cmc
mov
adc
inc
mov
jl
jbe
pusha
jo
in
cmpl
pusha
icebp
or
fnstcw
jbe
inc
cmpsl
xchg
test
xchg
mov
icebp
lret
aam
xchg
inc
xor
inc
pushl
sti
sbb
add
xor
nop
mov
or
outsl
push
loopne
dec
out
insl
mov
jp
stos
out
lock
ret
or
repz
push
in
mov
test
loopne
sub
add
add
pop
and
fimuls
pop
cltd
cmp
into
sub
pop
mov
mov
cwtl
sbbl
fwait
adc
sub
bound
cmp
insl
inc
pushf
mov
aam
and
and
jge
push
inc
fsubrs
pop
add
adc
push
xchg
jmp
fwait
mov
ficoms
mov
int3
cmc
push
adc
xor
xchg
dec
test
cld
test
cmp
mov
fldenv
jbe
xlat
pop
xchg
test
and
stos
fldt
lods
cmp
inc
mov
sub
int
inc
outsl
and
and
xor
test
out
push
mov
bound
pop
jg
mov
insb
out
cmp
xor
outsl
or
scas
push
test
jl
in
pop
ret
lcall
mov
cmp
sbb
or
jns
subb
mov
mov
lods
hlt
inc
mov
popa
into
jb
out
xchg
pushf
pop
adc
push
leave
pusha
test
fnsave
gs
pop
sti
xchg
dec
mov
hlt
lret
xor
rorb
jmp
icebp
inc
in
mov
call
pop
mov
push
lods
xchg
add
cmp
jl
xchg
jle
sbb
mov
ljmp
pop
fsubr
adcl
and
jnp
adc
dec
cmp
mov
inc
and
add
inc
pop
dec
push
and
pop
pop
popf
jg
int
fs
sub
rcrb
dec
sbb
dec
rcrl
std
pop
fiadds
fdivrs
lret
loope
iret
popa
call
sub
pushf
imul
sahf
andb
pop
adc
dec
loop
jne
lret
daa
in
mov
je
cmpsl
fwait
imul
aas
lods
imul
out
push
cmp
addr16
jmp
ror
push
out
xchg
adc
jns
xor
nop
sub
test
xchg
dec
mov
popf
stc
fwait
dec
cltd
xor
mov
mov
pop
cwtl
xchg
xchg
fxch
and
int3
mov
sub
xchg
ss
xorl
sbb
dec
fiadds
mov
fdivrl
push
sub
sbb
cmp
inc
jg
repz
fnstcw
xor
mov
xchg
in
push
sub
mov
stos
inc
nop
mov
imul
lock
call
dec
mov
lods
sub
lock
loope
or
dec
lahf
ss
fidivl
pop
inc
dec
or
pop
loope
adc
fs
lret
adc
inc
inc
shlb
test
push
out
cmpsl
pop
push
aam
sbb
cli
ret
repz
shll
fdiv
pushf
inc
cld
cmp
mov
sbb
arpl
xor
adc
test
arpl
adc
jmp
ja
ffree
sub
jo
or
sub
push
mov
mov
lods
dec
dec
add
imulb
dec
lahf
mov
adc
or
fbld
andl
sub
rcrb
mov
inc
lods
push
xchg
dec
pop
and
or
jl
inc
and
shlb
mov
pop
rcr
stos
cli
in
fmul
aam
sbbb
mov
mov
ljmp
jno
sbb
out
dec
sahf
push
outsl
out
mov
cmp
jge
dec
psadbw
xor
addr16
sub
mov
ret
jbe
sti
sub
sbb
pop
dec
ss
loopne
push
fadds
clc
mov
imul
out
push
xor
test
pop
sahf
add
xlat
lods
clc
jns
arpl
sub
ret
push
sbb
and
stos
mov
pop
adc
xchg
jns
mov
mov
in
xorl
jle
sub
scas
mov
mov
adc
pop
pop
dec
dec
and
ljmp
dec
std
and
or
xchg
aas
mov
sahf
and
loop
cld
xlat
jne
out
orb
jbe
leave
xor
decb
xor
call
xor
shrb
dec
data16
push
gs
rol
je
in
daa
scas
lods
lret
int
xorb
mov
insb
sub
mov
dec
daa
test
mov
shr
ret
xchg
lcall
sbb
nop
sub
dec
pop
xor
es
mov
push
outsl
sbb
nop
adc
popa
mov
push
fidivrs
idivl
mov
push
jbe
inc
test
push
add
in
and
fs
xchg
add
push
aad
and
in
pop
cmpsl
iret
add
mov
adc
fstpt
fdivrl
dec
push
xor
xor
push
ficompl
lcall
cwtl
shlb
dec
jg
aam
pusha
lea
shll
shl
push
iret
and
sbbb
out
fmull
lret
cmpsl
es
adc
xchg
dec
aas
ret
pop
sahf
inc
das
rcrb
js
cmp
movsb
mov
fmuls
xor
aad
shrl
dec
pop
repnz
push
or
mov
push
std
xchg
push
repz
pop
dec
mov
inc
stos
outsb
cwtl
adc
test
into
push
ljmp
icebp
dec
aad
pop
rolb
sbbb
or
leave
pusha
lret
ret
or
enter
mov
inc
xor
jge
cmc
pop
sub
jns
lret
sub
incl
mov
push
notb
shlb
clc
popa
add
xchg
neg
mov
adc
push
pextrw
sbb
mov
les
inc
out
daa
push
icebp
aad
add
leave
jb
insb
push
mov
cmp
add
push
sbb
cltd
cmc
pusha
aaa
popa
mov
fistl
imul
xor
mov
and
lret
pop
in
adc
xor
sub
movsl
js
pusha
stos
mov
sub
sarb
sbb
pop
loop
xchg
out
mov
call
hlt
hlt
jnp
and
dec
cmp
mov
fwait
mov
sub
xor
ja
pop
sub
mov
lea
cwtl
in
xchg
sub
or
fcomps
adc
pop
lcall
rorl
pop
or
mov
mov
rorb
ljmp
in
mov
stos
or
pop
adc
cs
ss
cld
cmp
cmp
adc
fildll
cltd
data16
mov
cmp
jle
out
mov
mov
and
icebp
enter
xchg
enter
and
insb
mov
xor
mov
testl
bound
orl
jg
or
test
in
add
sbb
xchg
adc
mov
mov
sbb
sbb
aas
sbb
out
push
lods
aam
pop
jmp
stos
stos
push
rolb
mov
imul
cs
xlat
pushf
mov
pop
hlt
jp
jl
icebp
mov
fisubrl
shll
mov
iret
adc
add
ss
loopne
push
adc
imul
sbbl
mov
out
add
sbb
data16
mov
test
outsb
add
mov
icebp
xchg
or
orb
sbb
sbb
mov
std
cld
and
sti
mov
xor
adc
adc
lods
mov
add
mov
push
aam
fcomps
mov
cmpsb
ret
push
cmc
daa
popf
or
mov
mov
xor
or
xchg
cmp
sub
xlat
cmp
xchg
mov
mov
mov
and
outsl
pop
lret
push
lea
push
jg
ret
mov
mov
pop
lahf
mov
mov
sub
in
nop
testb
xchg
adc
sarb
inc
les
out
shll
ljmp
arpl
fcomps
dec
mov
push
ror
xor
mov
or
rorl
lods
hlt
push
sub
aam
movsl
sub
jo
aaa
jp
add
divl
enter
jecxz
sub
xchg
rcl
repz
jb
femms
lods
add
mov
or
imull
lock
stos
pop
scas
and
inc
or
inc
fsubl
push
arpl
adc
mov
sub
movsb
enter
add
lcall
cmp
mov
repnz
inc
aaa
xchg
fiadds
pop
xchg
xchg
jmp
out
push
push
push
pop
fnstenv
ds
pop
or
movsl
cmp
rcll
mov
stos
and
sub
fdivrl
push
notl
jns
dec
and
in
dec
adc
mov
lcall
cli
test
jg
sbb
pushf
adc
dec
xor
int3
mov
ja
ds
stos
cwtl
pop
cmc
int3
ret
cld
paddd
jl
and
imul
or
or
aaa
into
pushf
popa
ss
mov
rorl
je
rcrb
xchg
jmp
pop
loope
pushf
cmp
in
sbb
jns
fldcw
enter
push
inc
aas
adc
iret
enter
mov
nop
xchg
out
inc
add
arpl
pop
mov
int3
mov
adc
adc
lret
mov
das
xchg
jns
push
test
xchg
jns
mov
rclb
int3
inc
lea
loopne
inc
adc
xor
std
aaa
jp
out
cld
sbb
aas
push
pop
and
jle
leave
push
ret
xchg
dec
lret
pop
shrl
aad
enter
insl
mov
pop
fwait
jmp
icebp
dec
ds
imul
or
out
ds
in
stos
dec
addr16
mov
clc
sub
cli
mov
std
cmp
xchg
rorl
mov
push
cld
jb
or
push
push
and
lahf
shll
daa
ret
jns
enter
hlt
enter
sbb
shrl
jecxz
es
xor
dec
dec
gs
es
clc
pop
lahf
mov
mov
dec
sbb
pusha
mov
mov
fiadds
sub
mov
dec
arpl
sti
inc
sbb
push
xor
enter
sub
xor
dec
mov
cltd
mov
adc
pop
pushl
ljmp
jecxz
pushf
outsl
stos
add
lea
pop
pusha
jmp
add
aaa
pop
or
ss
cmc
fdivs
bound
add
loop
push
hlt
int
addr16
sub
lcall
cltd
std
aad
inc
fisttpl
rcrl
xchg
stos
gs
or
adc
jo
out
scas
xorb
xchg
push
imul
sbb
xchg
dec
jl
sub
inc
pop
jno
push
gs
pop
cmpsb
jle
mov
mov
adc
xor
bound
inc
bound
jo
push
rorb
or
shrl
loopew
and
push
loope
dec
out
dec
test
dec
pop
or
int3
mov
loope
lods
addl
cld
test
and
ret
lea
fbstp
jge
test
xchg
and
mov
push
push
enter
jnp
int3
mov
xchg
inc
fistl
dec
sbb
and
ret
or
sti
mul
push
xchg
mov
mov
add
cmp
mov
adc
and
push
inc
pop
pop
dec
cmp
mov
nop
rcrl
mov
subl
repz
hlt
and
pop
pop
and
adcb
jnp
sub
out
les
mov
mov
inc
std
iret
cmp
mov
ja
or
xlat
or
mov
jle
mov
adc
fwait
or
xchg
add
add
cmpl
xchg
add
jge
hlt
fwait
pop
cmp
xor
pop
xor
pop
or
push
xor
or
pop
popa
test
mov
das
popl
js
xchg
pop
push
or
or
arpl
cs
shlb
sub
add
dec
pop
imul
xor
lods
rclb
xchg
icebp
mov
add
cmpsb
fdivl
mov
mov
sti
lods
sbb
and
mov
jle
mov
loopne
jmp
mov
int3
mov
popa
fcompl
mov
loop
mov
sarb
scas
inc
dec
popf
fld
mov
in
xchg
repnz
mov
push
lods
iret
stc
or
stc
outsl
sar
in
out
ss
loop
adcb
addr16
mov
fdivrl
mov
ret
popa
js
shlb
test
mov
push
lret
push
dec
lret
int3
cltd
stos
sbb
outsb
sub
sbb
les
mov
insl
pop
in
insl
addr16
rcrl
clc
sbb
jl
mov
xor
sbb
and
mov
and
hlt
scas
std
sub
inc
into
gs
mov
push
push
outsl
add
rclb
test
fcomps
outsl
addr16
daa
xor
jb
adc
and
pop
js
int
inc
idivl
sbbb
scas
sbb
pop
mov
jnp
inc
jg
hlt
and
push
mov
mov
mov
andb
and
pop
jp
psubusb
ja
daa
pop
mov
inc
aas
imul
lock
push
subl
rorb
sbb
sbb
nop
psubq
sub
dec
movsl
add
cmpsl
dec
mov
jmp
pop
mov
push
fwait
pop
pop
repz
push
jp
mov
int3
int
or
xchg
lods
scas
iret
jae
pop
dec
jnp
stos
stos
repnz
rorb
ficomps
aam
cwtl
orb
mov
outsl
test
repz
fisubl
mov
shlb
vpsllw
dec
loop
ret
jo
xchg
sub
shrl
ret
pop
add
add
cltd
sbb
or
jnp
xchg
cli
and
mov
stc
jle
cs
dec
xor
fists
test
cli
xchg
cmc
cmpsb
mov
sub
mov
jns
xchg
sbb
dec
push
nop
addr16
jcxz
fldcw
out
dec
inc
loopne
push
mov
test
pop
and
or
mov
out
pop
les
xchg
jnp
out
insb
movsl
testb
cmp
mov
cmp
jns
das
rol
add
sbb
call
es
push
out
ds
inc
mov
sar
pusha
pusha
xor
cltd
out
cli
ds
test
jecxz
xor
mov
lar
gs
xchg
sahf
and
into
ljmp
out
arpl
aaa
fwait
cmp
ljmp
clc
mov
jmp
aaa
mov
push
lock
clc
pushf
das
push
das
add
mov
add
mov
aam
popf
add
xchg
in
lds
out
push
out
lcall
inc
out
in
sbb
sub
or
push
ljmp
jb
sti
xor
ds
les
mov
inc
ret
mov
dec
sahf
push
lcall
test
out
ja
fstl
mov
mov
in
incl
fucomi
pop
xor
push
and
push
or
mov
aam
mov
mov
sub
xor
mov
mov
adc
and
sahf
es
or
xchg
sub
cmp
sar
jge
push
pop
dec
mov
aaa
bnd
shrb
and
mov
jno
sbb
fcompl
mov
jns
push
jg
aaa
xchg
in
mov
mov
pusha
insb
push
insl
mov
xor
in
add
inc
mov
push
mov
dec
orb
adc
push
xor
fists
sbb
xchg
test
cmc
dec
cmp
xchg
mov
les
stc
sbb
mov
inc
mov
xchg
dec
std
loope
es
pusha
into
pop
jmp
cmp
sub
dec
sub
repz
scas
jge
inc
xor
dec
sub
add
xor
add
jp
lahf
adc
jg
jnp
lods
loopne
pop
fiadds
je
inc
das
and
add
push
jmp
pop
jbe
popa
test
addb
lods
lods
pop
or
cltd
clc
clc
adc
jno
into
lock
andb
jne
sub
insl
lods
out
mov
and
lret
sbb
lock
stos
jmp
xor
push
add
popf
nop
and
loopne
stos
jo
outsb
mov
jne
mov
in
stc
push
aaa
push
mov
int3
xor
stos
ljmp
jle
or
in
icebp
popl
test
adc
inc
outsb
adc
pusha
mov
aas
in
mov
shl
cmp
aad
sbb
mov
xlat
sbb
jae
mov
rorl
stos
dec
jge
test
dec
push
pop
pop
xchg
jmp
or
xor
or
mov
fidivs
and
in
sarb
sub
call
in
jle
hlt
cmp
dec
cmpsb
lock
test
nop
inc
arpl
outsl
dec
ljmp
sub
push
icebp
jle
dec
in
xchg
xchg
sub
psadbw
nop
sub
insb
loop
add
movsl
mov
push
lret
dec
fsubl
or
sbb
xor
push
aas
add
pop
test
pop
fcomps
popf
es
scas
pop
add
in
fdivr
addr16
adc
loop
mov
outsb
add
js
xor
lds
push
in
mov
and
and
mov
call
inc
push
repnz
xchg
fstps
cld
push
cmp
jp
dec
push
add
xor
xor
jns
or
xchg
mov
sub
jns
sbb
add
dec
xchg
xchg
rol
mov
outsb
hlt
sbb
and
mov
jno
inc
mov
ret
add
mov
rclb
inc
in
fwait
ror
xchg
xchg
cmp
test
nop
pop
jo
sbb
mov
test
sub
shlb
ficomps
sub
adc
fsubrs
aad
ret
fsubrs
and
sahf
orl
sbb
add
add
add
in
gs
loope
jg
call
in
and
jmp
push
sub
push
cmpsl
fcomi
fcos
leave
pusha
xor
imul
xchg
imul
cmp
push
clc
out
push
mov
sbb
lock
daa
leave
sahf
cmpsb
cmp
or
adc
ss
lea
out
push
mov
test
pop
loopne
lret
imul
sbb
out
lock
out
mov
or
pop
lods
mov
in
stmxcsr
cld
sti
adc
sbb
subb
std
cmc
shl
rcrl
loop
andl
inc
pop
xor
and
pop
out
inc
or
xchg
mov
mov
js
pop
or
adc
les
or
add
sbb
int
or
mov
sbb
dec
adc
imul
in
jne
mov
mov
leave
sub
sarl
inc
testl
adc
jbe
jecxz
shrb
mov
adc
jno
test
sbb
adc
and
ret
add
sahf
dec
cltd
popa
jg
jecxz
mov
or
xor
or
mov
cmp
rolb
inc
dec
mov
mov
push
mov
xchg
or
lret
popa
stos
daa
aas
pushf
pop
jo
push
pop
adc
ss
xchg
jl
add
lcall
loop
mov
mov
nop
jno
adc
ss
lea
push
push
sahf
aas
pop
mov
mov
and
push
or
cs
icebp
or
movsl
mov
pop
insb
sarb
mov
jbe
call
sub
and
outsl
or
inc
sbb
or
jnp
fxch
into
push
bnd
mov
sub
pop
movsl
lods
push
mov
mov
mov
push
bound
shlb
bound
mov
out
call
outsb
jb
scas
cmovo
clc
popf
imul
or
mov
dec
pop
scas
mulb
sub
jmp
fwait
add
into
dec
in
aas
add
test
jno
sbb
lcall
jbe
jno
mov
sub
pushf
adc
adc
xchg
orb
in
mov
in
or
and
mov
scas
mov
mov
jbe
jnp
imul
movsl
jl
ja
xchg
arpl
push
in
mov
cltd
cld
popl
gs
fwait
xchg
push
adc
sbb
xchg
add
pop
jo
and
test
dec
inc
pop
xchg
out
inc
stos
pop
test
jbe
pop
les
js
jo
push
lcall
sub
jbe
rorl
rcrb
cli
std
cltd
sub
ljmp
jb
dec
mov
outsl
inc
jg
fdivl
sbb
inc
rorl
sti
gs
shrb
enter
movsl
mov
or
cld
jo
mov
pop
leave
mov
arpl
js
daa
cmp
xchg
out
push
mov
xchg
jnp
divl
jg
test
pop
push
sub
push
fwait
imul
clc
sbb
push
notb
adc
mov
rcr
cmc
mov
sbb
mov
jl
push
lcall
sub
stos
jbe
icebp
sbb
movsb
ret
hlt
add
xor
mov
push
testb
push
dec
add
addr16
pop
xchg
out
mov
xchg
push
ja
push
aaa
push
inc
fidivs
repnz
aas
inc
cld
xchg
xor
jmp
push
sbb
daa
adc
push
pusha
dec
mov
cmp
push
insb
add
je
sahf
dec
daa
mov
inc
push
imul
xchg
iret
adc
sbb
pusha
or
ret
mov
movsl
sub
jbe
add
stos
jg
lods
call
outsb
inc
sahf
pop
mov
lock
nop
lret
pop
push
xor
shll
repz
loop
dec
or
ss
jle
das
sub
popa
dec
jle
aad
call
sbb
nop
and
cmp
cwtl
clc
mov
or
jae
sbb
outsb
jne
lods
and
push
push
inc
mov
mov
push
fisubrs
push
xchg
pop
mov
mov
gs
push
jae
vpunpcklwd
mov
or
int3
mov
or
cmpsb
cli
pop
jbe
pop
test
je
cltd
mov
mov
xchg
sub
nop
repz
in
test
add
lock
lahf
xchg
xor
mov
les
xor
and
mov
push
cmp
pop
jmp
sub
adc
out
pop
repnz
mov
or
int
test
mov
lock
and
sahf
pop
jge
push
push
in
insl
jb
cmp
push
xchg
adc
adc
ret
xchg
leave
lods
pop
and
jmp
fdivp
adc
dec
ja
add
int
mov
loopne
xchg
push
fdivrl
or
sarl
cmp
out
mov
popf
pop
mov
pusha
bndstx
scas
in
lock
int
pop
push
fwait
cmpsl
jge
pop
icebp
inc
xchg
imul
nop
clc
jb
xor
popa
lods
ss
aaa
es
pop
xchg
lret
nop
in
js
stc
push
mov
mov
repnz
inc
pop
test
clc
push
int3
iret
and
mov
popf
mov
xchg
fsts
andl
std
sbb
push
add
cmp
mov
and
mov
aad
jp
pop
lcall
lods
sahf
mov
pop
icebp
adc
movsl
mov
cltd
gs
xor
sbb
mov
adc
roll
sbb
popf
mov
enter
popf
loope
mov
mov
cld
inc
out
inc
or
and
push
repnz
stos
in
loopne
xchg
enter
test
xchg
jo
jge
ss
and
pushf
lahf
pop
hlt
sub
dec
scas
enter
orb
inc
jno
ss
xor
xchg
test
scas
push
jo
dec
xchg
sbb
inc
pop
xor
and
mov
and
push
mov
out
pop
and
xlat
jmp
push
ljmp
in
fisubrs
cmpsl
sbb
pop
subb
lods
pop
jne
ret
inc
mov
icebp
test
testl
push
shrl
ds
fcomi
add
outsb
mov
jle
aas
mov
xchg
aam
sahf
shlb
sub
adc
pop
mov
push
ss
fstpt
mov
fadds
sbb
mov
push
add
test
adc
fnstsw
xor
ja
fstps
lret
add
sub
data16
inc
push
push
sbbl
mov
jmp
push
lea
push
mov
or
mov
dec
mov
stos
dec
adc
xchg
jno
xor
sbb
jge
xchg
outsb
adc
movsb
lret
push
dec
out
sub
lahf
cmpl
leave
dec
add
pop
into
xor
icebp
enter
testb
loop
xchg
clc
mov
cwtl
js
push
push
sbb
add
cwtl
inc
into
jle
inc
mov
and
cli
mov
xchg
fidivrl
sbb
adc
aam
pop
repnz
pop
mov
inc
push
pop
ja
pop
inc
dec
outsb
mov
sub
mov
or
fisubl
sarb
mov
mov
loopne
push
pop
lock
lods
mov
lds
xchg
push
loope
push
dec
inc
icebp
dec
lcall
pop
adc
adcb
xchg
ja
mov
cli
push
in
mov
jge
jp
add
pop
push
adc
flds
inc
lcall
dec
js
cli
in
popf
mov
inc
mov
mov
in
in
scas
loop
in
ret
repz
pop
icebp
sub
sahf
popf
add
ret
cmp
repz
xchg
test
lds
mov
stos
or
leave
fcomps
jge
into
dec
ret
out
iret
or
xorb
jle
inc
push
ret
cli
mov
push
in
rorl
jl
sbb
or
sub
pop
popf
ljmp
into
xchg
jmp
adc
fwait
mov
sub
jne
xor
push
sub
push
mov
pusha
fstpt
adc
test
xchg
cmp
sbb
pop
xor
pop
sub
jle
divl
push
nop
push
push
stos
aaa
cli
push
jne
lea
aas
gs
in
inc
xor
cmp
inc
jecxz
shrl
mov
out
aaa
jp
adc
add
push
aas
add
cmpsb
jns
loop
push
vpackuswb
scas
fs
add
mov
sub
dec
jo
inc
jae
outsl
imul
lret
lcall
testb
pop
mov
add
jnp
out
mov
mov
add
loopne
jle
jne
sti
jbe
and
test
scas
mov
loopne
jne
or
dec
or
mov
scas
sub
ret
stos
cmp
mov
or
inc
int3
clc
stos
pop
push
xchg
repnz
push
das
sbb
pop
dec
je
inc
movsl
push
xlat
stos
fwait
xchg
test
shlb
call
push
ljmp
mov
inc
dec
movsb
mov
lods
daa
pop
and
mov
mov
bound
jecxz
pop
int3
outsb
std
sbb
mov
xor
fidivs
or
xor
pushf
scas
add
das
jg
rorl
mov
or
sub
mov
andl
insl
in
add
pusha
lcall
add
fistl
sbbb
bound
mul
push
pop
scas
or
pop
movsb
sub
xor
testb
mov
in
cmp
leave
mov
mov
add
daa
sbb
rcr
pusha
orb
dec
loop
push
jbe
push
or
loopne
xor
hlt
arpl
jmp
add
std
cltd
lcall
clc
sub
mov
xchg
ljmp
mov
inc
dec
shr
mov
jge
faddl
fwait
jb
sbb
mov
mov
inc
fstpl
sahf
outsb
scas
xor
in
dec
es
add
addr16
loop
fldl
mov
add
sbb
dec
fcom
ret
aaa
or
mov
pop
fcomps
mov
add
xor
mov
mov
sbb
ds
pop
jne
bound
inc
and
aas
into
or
lods
cmp
adc
or
mov
mov
push
sbb
les
outsb
sub
int3
aam
lret
ret
dec
xor
xchg
adc
and
jae
xchg
cmpsb
cwtl
cld
jg
in
xor
cmpsl
cmc
lret
clc
pop
cmc
cmp
xor
inc
pop
cmp
int
or
in
out
lods
xchg
fdivs
jmp
rcrb
inc
fcompl
insb
nop
cmpsb
mov
fisttpl
adc
mov
mov
pop
fisttpl
cmp
imul
cmp
pop
add
xchg
jmp
fdivr
shlb
lret
inc
sub
push
push
lcall
pop
movsb
dec
dec
mov
dec
test
fisubl
js
push
cmpsb
push
cmpsl
cmp
jge
or
rol
scas
popf
scas
xchg
pop
or
push
and
cmp
insb
inc
fsubrs
inc
jecxz
adc
and
mov
mov
adc
ds
ret
xlat
pushf
lods
or
push
xor
jp
movsl
jne
arpl
xlat
scas
mov
pop
ljmp
fcompl
and
in
mov
test
dec
xchg
dec
ffreep
sbb
sar
mov
lods
mov
lret
pop
mov
fildll
xchg
dec
mov
pusha
mov
and
mov
stos
cmp
cli
xchg
mov
andb
lcall
loope
add
sarl
pop
mov
bound
fmulp
lahf
addr16
cmpsl
adcb
js
or
lea
jecxz
aas
leave
or
in
pop
shlb
jnp
out
sub
xor
aad
xchg
mov
xchg
dec
stos
shlb
adc
jecxz
add
das
cltd
gs
lea
arpl
mov
mov
sub
xchg
push
sub
je
cwtl
or
cmp
adc
jge
ss
pop
test
adc
fdivs
jg
jl
fcompl
scas
add
inc
lahf
and
jno
into
fdivl
add
xchg
jp
or
cmc
mov
outsb
iret
in
dec
imul
or
cmc
mov
or
jae
push
ret
jmp
or
jg
sub
jle
je
aad
in
insl
ret
or
pop
outsb
mov
push
cmp
sbb
or
jl
mov
dec
mov
add
jl
mov
mov
or
test
mov
aam
lret
mov
aas
push
xor
mov
push
ret
inc
dec
mov
add
jnp
dec
jmp
jle
pop
repnz
and
xchg
roll
and
jae
and
sti
push
jne
lods
popa
and
fbstp
ljmp
stos
dec
cwtl
test
sbb
lock
xor
and
pop
inc
push
push
popa
ljmp
mov
inc
test
jmp
dec
xchg
int
pop
cli
and
lcall
mov
clc
inc
popl
xchg
xchg
imul
xchg
mov
fsubl
add
add
outsb
ficoms
xor
scas
sbb
popf
lods
push
mov
xor
lock
shl
fwait
or
sbb
mov
lahf
or
cmpsb
mov
add
jbe
fiadds
dec
sahf
sub
fnstenv
stos
dec
add
clc
popl
xchg
sbb
push
js
ret
lret
cmpsl
out
stc
mov
popa
js
loope
pop
dec
call
xchg
mov
or
pusha
dec
cmp
cmpsb
xor
xlat
sub
inc
fnstcw
andb
cltd
decl
xlat
nop
iret
inc
mov
push
add
iret
mov
mov
xchg
fcmovnbe
mov
inc
xorb
ljmp
fdivr
in
scas
out
ljmp
jecxz
mov
push
mov
shrl
pop
ds
cmc
mov
std
and
mov
xchg
ds
or
addr16
jl
adc
sbb
and
mov
cmpsl
xchg
xchg
push
jmp
xorb
add
test
push
cmpl
sub
and
call
iret
std
dec
repnz
insb
or
ficompl
dec
mov
jge
mov
push
pop
test
dec
mov
decb
into
dec
and
lcall
xchg
mov
xchg
mov
mov
sub
sbb
sahf
sub
hlt
xor
jmp
and
cmpsb
xchg
repz
dec
push
cli
pop
loop
rcl
or
and
xchg
outsb
iret
xor
js
popa
aas
adc
insb
clc
xor
rcll
inc
mov
loopne
sahf
mov
jb
test
outsb
jl
or
in
jnp
stos
test
mov
add
sbbl
dec
adc
clc
bound
int
pop
adc
add
es
out
xor
js
pushf
mov
inc
fnsave
je
rcll
jae
call
scas
js
push
inc
sarl
es
adcb
cmpsb
push
xchg
dec
bound
xchg
cs
cmp
mov
in
loope
lods
xchg
adc
subb
inc
and
sub
in
and
inc
cmp
cmp
pop
mov
pop
adc
sbb
mov
jg
xor
scas
les
inc
mov
cmc
and
mov
imul
and
or
push
out
loopne
inc
fnsave
popa
pop
cmp
pop
dec
xor
ss
jp
sahf
sahf
add
insb
push
sbb
adc
xchg
test
test
fistl
jns
cmc
pusha
repz
or
xchg
sti
psllq
push
adc
mov
cltd
ss
dec
out
stos
xchg
icebp
pushf
pop
xlat
leave
enter
mov
xor
xchg
sbb
mov
int
pop
sub
cmpsb
outsl
ret
pop
call
push
js
xchg
jle
pop
jmp
mov
orb
cmp
pop
shlb
leave
pop
mov
fdivrs
mov
aas
outsl
pop
xor
mov
dec
stos
and
leave
push
dec
lock
jmp
or
lea
push
jae
mov
stos
push
das
fucom
inc
add
xchg
xchg
xor
iret
xlat
shll
das
inc
in
rorl
jl
pop
imul
loop
sar
out
cmp
jno
std
mov
pop
aad
daa
xchg
inc
gs
jmp
enter
in
decb
shll
fucomp
aas
fidivl
bound
lock
data16
lret
in
sbb
iret
dec
popf
jno
xchg
fs
lock
push
and
aad
or
daa
inc
adc
fcos
pop
loop
cmp
popa
shrl
fistpl
mov
cmp
pop
imulb
push
shlb
lahf
xor
jo
popa
or
ret
inc
test
std
loop
ficompl
out
stc
sbb
adc
fwait
cmp
jo
test
pop
dec
jbe
jg
ret
mov
cmp
arpl
dec
cmp
test
lods
jecxz
inc
dec
icebp
mov
je
xlat
sub
cmc
add
xchg
orb
xchg
push
mov
sbb
pusha
scas
sbb
sbb
inc
add
iret
jb
scas
xchg
lahf
pop
leave
int
leave
add
in
cld
mov
cmp
inc
pop
std
pop
cmp
xchg
outsl
and
aam
subb
mov
rcrw
inc
lcall
xchg
cmp
sub
mov
push
pop
aad
cmp
neg
fldenv
xor
mov
lret
ja
icebp
sub
lahf
dec
ljmp
mov
test
std
insb
jle
mov
int3
into
shlb
push
jg
fisttps
das
push
sub
mov
bound
call
dec
or
movsb
cmp
push
inc
fsts
mov
decb
adc
mov
ja
sub
pop
mov
fistl
insl
add
arpl
pop
mov
and
fstpt
cltd
je
gs
ljmp
cmp
stos
and
sub
xor
lcall
jl
add
adc
and
sti
insl
mov
pop
jb
stos
scas
mov
clc
or
cmp
mov
xchg
imul
jp
stos
mov
adc
and
fists
xchg
stos
and
fidivl
in
scas
stc
cwtl
xlat
adcl
imul
jno
stc
push
pop
inc
arpl
mov
out
xor
pop
jmp
js
shll
pop
cmc
mov
xor
xor
imulb
pop
daa
cmp
test
adc
add
dec
pop
mov
ja
int3
xor
jmp
inc
sbb
push
adc
into
mov
push
stos
mov
dec
or
xor
aam
sahf
jmp
jb
insl
js
pop
jl
dec
daa
xor
jmp
cmpb
int3
cmp
shlb
rcll
mov
fadds
js
loopne
notb
loop
sbb
mov
xchg
inc
in
jmp
fucomp
sti
xor
fcompl
cli
xor
insl
inc
call
mov
das
push
ds
imul
daa
inc
mov
push
push
adc
mov
push
fnstenv
cmp
xchg
stc
negl
add
out
inc
xchg
and
or
xor
ret
shll
jp
push
js
das
mov
sub
inc
mov
cwtl
and
xchg
mov
pop
mov
push
insl
int3
jb
sub
push
fdivrs
jns
fsubrp
aad
fs
gs
pop
xchg
pop
aad
adc
dec
pusha
aam
mov
icebp
repz
leave
add
and
jp
jbe,pt
jle
push
lods
insb
push
std
jo
push
je
jp
out
xchg
fimuls
sbb
icebp
pop
sahf
test
inc
sbb
jmp
ret
jns
call
cmp
push
inc
faddp
xchg
add
mov
inc
ss
xchg
jne
adc
inc
fcmovnu
mov
xchg
xor
test
out
or
dec
xor
mov
divb
mov
fimull
inc
pop
ret
jnp
out
aad
sbb
outsl
imull
dec
adc
dec
mov
lret
leave
jns
pop
sub
adc
pop
lret
mov
inc
clc
or
adc
lret
mov
pop
std
sbb
bndstx
test
lahf
arpl
ror
pop
mov
in
pmaxsw
sub
adc
out
jge
fwait
jno
xchg
push
and
or
in
out
int3
jg
shrb
js
cmp
pop
movsb
jg
out
daa
loopne
cmp
add
cwtl
dec
scas
mov
add
rolb
jo
icebp
jnp
pop
popf
push
enter
fdivrl
cli
mov
imul
cmp
and
ret
push
loop
xor
repnz
cmp
dec
xchg
mov
or
sbb
mov
rcrb
sub
scas
std
mov
xor
jmp
mov
outsl
and
add
jg
push
jp
mov
fwait
in
outsl
and
lods
ljmp
sbb
dec
cmp
negb
in
not
shrl
cmp
push
repz
ja
fwait
and
cmpsb
imul
es
push
mov
xchg
dec
lahf
and
xor
in
stos
add
ljmp
cli
mov
cmpsl
jecxz
add
les
cli
mov
shlb
dec
jb
jp
sbb
mov
sbb
in
xchg
xlat
add
mov
jae
sub
inc
and
mov
jb
dec
loop
mov
imul
leave
xor
frstor
xchg
sub
test
mov
cmp
pop
pop
xchg
mov
enter
adc
pop
or
rcrl
subb
fucomip
rclb
add
jne
xor
mov
imul
hlt
sbbb
fsubl
repz
in
inc
and
sti
xchg
imul
inc
sbb
lcall
pop
sahf
imul
inc
aam
jbe
pop
icebp
fiadds
js
sub
movsl
add
jbe
popa
subb
call
xchg
aas
adc
push
sbb
test
mov
scas
and
aaa
push
pop
popa
cmp
in
pusha
or
inc
scas
das
imul
sub
push
cmpsb
ret
or
idivb
aam
or
outsl
scas
jecxz
subb
jno
test
sbb
pop
jns
iret
inc
sub
mov
xchg
jnp
dec
sub
movsb
jecxz
xor
dec
pop
sbb
pop
cs
pop
movsl
adc
loope
add
pop
stos
xchg
push
je
jbe
xchg
pop
cmpsb
push
lahf
adc
xor
mov
les
sub
mov
jle
fadd
xor
sub
cmp
pop
dec
fildll
add
cmpl
ss
push
xchg
mov
into
fwait
and
je
cmp
adc
mov
addr16
fstpl
mov
dec
lret
jg
iret
mov
nop
jae
mov
stos
xchg
dec
fsubrp
jg
lea
pop
stos
inc
push
stos
stos
mov
sahf
sbb
mov
jns
mov
test
ljmp
xor
dec
rcrl
arpl
xchg
dec
fbstp
pop
call
adcb
mov
rol
andl
add
and
mov
movsl
lahf
loopne
lret
xchg
shrb
mov
fsub
push
mov
arpl
ffree
mov
cmpsl
inc
lret
ret
je
jb
iret
xchg
aad
xchg
dec
ss
decb
orb
pop
aaa
mov
pop
mov
sbb
gs
cmp
cld
imul
aaa
pop
ret
jne
push
test
cmpsb
les
pusha
lcall
mov
xor
das
push
jmp
jne
mov
sbb
xor
cs
mov
dec
loope
inc
enter
or
bound
clc
out
pop
sbb
or
cmp
pop
stos
sub
inc
rol
test
outsl
dec
es
rcr
and
popa
inc
cltd
data16
mov
fmul
jne
inc
push
push
dec
aaa
or
int
push
test
and
cli
inc
stos
mov
xchg
mov
imul
dec
aas
mov
lcall
adc
test
mov
fwait
jg
xchg
jno
cmp
daa
mov
orl
xchg
movsl
out
or
in
pop
dec
pop
xor
xor
xchg
add
test
and
mov
jne
jge
sbb
pushf
mov
mov
fldl
cld
mov
lcall
fwait
mov
lock
test
pop
jae
es
pop
pop
std
push
bnd
sub
negl
insl
dec
sbbl
and
jbe
push
lret
pusha
lods
sbb
and
repnz
xchg
jmp
pop
test
movsb
es
add
push
mov
stc
cmp
sbb
aam
mov
ss
ret
and
shlb
sub
mov
mov
add
cmp
mov
insl
shrb
sub
dec
cwtl
cmp
xlat
lods
lret
jbe
repz
popf
add
cmp
sub
mov
xchg
aas
rolb
fdivrp
xor
cwtl
and
movsl
inc
repnz
push
jmp
pop
mov
mov
ret
cmp
gs
push
add
pop
ss
push
push
cmpsl
pop
cs
jns
sub
repz
divl
subl
add
andb
out
xchg
push
movsl
stos
mov
sbb
inc
stos
add
lock
push
orb
sbb
call
push
ja
test
push
cwtl
ror
pop
mov
bound
pop
sub
cmp
mull
mov
or
jge
aad
rcrl
in
jnp
sub
lret
and
push
xchg
out
imul
cmp
arpl
add
xor
pop
cwtl
sbb
loop
iret
inc
leave
fnstcw
mov
xchg
cmpsb
daa
jle
into
push
sbb
sub
adc
sbb
sub
mov
inc
inc
sbb
dec
mov
push
movsl
insl
mov
mov
pop
cmc
mov
mov
lods
inc
pop
mov
repnz
push
dec
jbe
adc
insb
imul
xchg
sub
icebp
push
nopl
data16
mov
jp
xchg
popf
xchg
test
int
xorb
stos
in
dec
in
push
out
adcb
arpl
adc
adc
mov
cmpsb
push
cmp
je
pop
fwait
xor
iret
das
out
js
out
sub
jl
inc
hlt
add
and
stos
ja
out
movsb
in
sbb
mov
in
mov
lock
cs
dec
repnz
inc
jnp
fdivl
jle
jno
insl
mov
gs
jmp
push
inc
in
jne
push
mov
lcall
push
push
cmc
mov
cmp
sub
push
push
inc
cmp
insl
testb
shlb
dec
aam
rcrl
out
xchg
std
data16
cmp
cmp
jnp
je
lret
cmp
fcomps
loope
in
scas
mov
in
aam
pusha
jp
mov
xlat
popa
rolb
les
roll
ficomps
xchg
shrl
addr16
test
inc
in
pop
bound
insl
add
shll
and
xor
pop
addb
mov
jae
adc
push
sub
xchg
test
jge
cmp
push
jmp
sbb
push
push
out
push
mov
test
mov
pop
imul
out
jle
loope
add
pop
lea
movsbl
faddl
mov
test
daa
xchg
mov
mov
cld
xchg
ljmp
gs
adc
inc
add
cmpsl
in
cmc
push
cmp
lret
ffreep
jb
ret
and
sbb
xor
inc
mov
dec
sub
icebp
nop
scas
scas
add
xor
out
test
lods
aas
je
imul
xor
and
adcb
jge
mov
sti
test
leave
daa
mov
jo
adc
mov
sahf
inc
stos
mov
push
adcl
lock
sahf
inc
in
xor
xchg
sbb
add
jo
jb
adcb
push
push
jnp
lods
and
lods
jmp
cmp
sub
jnp
sub
mov
punpcklwd
xchg
or
iret
cmpsb
imul
xor
xchg
dec
dec
in
jle
jo
imul
pop
cld
stos
jne
bound
call
cmp
lods
jle
movl
inc
arpl
jle
sbb
or
pcmpeqb
outsl
push
aad
push
subl
add
adc
stc
inc
mov
adc
or
cltd
sbb
aam
testl
aas
sub
add
les
jns
in
push
pop
mov
and
popl
mov
dec
ds
testb
push
xchg
inc
adc
or
je
jecxz
mov
xchg
jmp
in
inc
add
cmp
hlt
addb
pop
fnstsw
call
pop
hlt
inc
xor
mov
pop
or
push
dec
imul
and
fmul
data16
data16
push
push
cmpsl
mov
sub
or
mov
sti
cmpsl
cmp
xchg
sub
sbb
mov
dec
loopne
dec
shll
xchg
pusha
mov
test
loop
xchg
sbb
jnp
xchg
mov
or
dec
mov
data16
and
jno
mov
xchg
movsl
loope
cltd
dec
dec
fisttpl
sbb
adc
push
push
jns
xor
aad
nop
sbb
push
aam
subl
hlt
and
xchg
sub
mov
dec
call
mov
mov
xchg
pop
pop
dec
push
and
sbb
add
mov
and
mov
cwtl
xor
mov
in
cmc
adc
cmp
cmpsb
icebp
jecxz
adc
mov
pop
inc
sarb
test
mov
dec
lret
movsl
inc
and
test
xor
cmc
inc
pop
adc
pop
call
out
cmp
add
jge
inc
arpl
aaa
cmp
mov
ret
pop
sub
pop
out
mov
xor
jne
mov
or
fldln2
cltd
aad
dec
xlat
push
movsl
adc
test
jp
mov
add
cmpsb
in
and
xor
xor
dec
pop
xchg
call
or
pop
jg
xchg
in
xchg
add
cmp
mov
xchg
xor
out
xchg
mov
insb
xor
aad
push
hlt
mov
movsb
and
stos
inc
daa
into
mov
xchg
xchg
mov
je
cmp
dec
in
xchg
lret
lods
subl
lds
pop
pop
lock
je
xchg
and
xchg
adc
push
or
cmp
pop
rcrb
mov
inc
pop
aas
rorl
fnclex
sbb
lods
stos
dec
sbb
xchg
cli
push
clc
js
test
lock
rcrb
inc
repnz
mov
sub
or
jp
cs
xor
sbb
daa
jmp
xlat
js
mov
add
stos
inc
jp
ror
dec
sahf
mul
lock
and
add
mov
out
lea
stos
cs
jl
lret
adc
xchg
sub
push
lret
stc
inc
lret
pop
test
cmp
adc
stos
test
mov
mov
rorl
imul
mov
push
fstpl
xor
roll
sbb
xor
mov
sarb
pusha
mov
outsl
inc
mov
insl
sub
sarb
jp
pop
adc
cmpsb
movsb
mov
movsb
cld
add
movsb
mulb
movsb
iret
fcmovb
lret
popa
movsb
sbb
scas
test
and
mov
rorb
and
gs
cmpsl
push
inc
pop
mov
int3
outsb
mov
cmpsl
or
loopne
or
call
cli
popf
ret
mov
out
push
mov
fstpl
movsl
lods
pop
out
fidivl
cmp
or
or
mov
out
hlt
xorb
lret
filds
push
hlt
nop
jae
movsb
push
jge
sub
pop
jns
add
xchg
ret
and
idivl
sbb
lahf
mov
sub
je
test
add
outsl
sti
inc
push
ss
xchg
pop
push
and
std
fldenv
xchg
mov
mov
push
push
sbb
bnd
xchg
test
mov
mov
cli
or
fsub
aas
shrb
xchg
stc
dec
inc
roll
pop
inc
cli
aas
pop
movsl
ret
stc
xor
push
mov
stc
les
dec
mov
sahf
push
push
add
dec
push
popa
cld
or
decl
push
pop
jp
dec
sub
inc
lds
mov
or
imul
mov
xor
mov
xchg
repz
jg
jecxz
or
stos
fs
sub
push
testb
pop
mov
loope
cmp
cmp
cmp
and
xchg
leave
cmpsl
inc
cmp
imul
ret
lret
sti
mov
outsb
sbb
xchg
mov
adc
lock
int
pusha
negl
xor
jmp
pop
je
mov
std
and
cmp
pop
mov
ja
jp
pop
mov
adcb
imulb
rcl
ret
sarb
cltd
insl
push
xor
xchg
jmp
cmp
cli
xor
cmp
dec
xchg
repz
jg
mov
cmp
or
mov
xchg
sbb
xchg
and
mov
test
es
outsb
inc
sahf
xchg
add
ret
fs
push
pop
pop
jne
frstor
or
cmp
pop
mov
ds
xchg
insb
mov
mov
lea
ds
out
imul
in
test
imul
pop
icebp
sbb
and
insb
or
cmp
or
dec
mov
cmp
xchg
mov
add
sbb
loop
mov
or
add
lods
mov
mov
repnz
in
lahf
repnz
dec
test
cld
imul
mov
jg
jmp
loop
iret
mov
clc
popa
xor
pop
dec
popf
std
jo
loop
cmp
ret
addb
je
jp
imul
lcall
rolb
push
icebp
fdivl
lret
push
push
loope
add
add
mov
sbbb
dec
inc
insl
test
cmp
push
fld
sbb
rcrb
nop
push
inc
push
push
adc
xor
inc
in
adc
add
xor
sbb
xchg
in
lods
jl
jno
sbb
pop
test
fldt
xchg
xor
rorl
pop
adc
shr
mov
push
adc
ds
jbe
inc
or
repz
jp
mov
pop
js
cld
dec
cmp
movb
cmpsl
inc
dec
dec
ficoml
arpl
dec
ficoml
dec
mov
pop
mov
iret
dec
pushf
ja
sub
mov
mov
enter
dec
pop
cwtl
mov
and
push
jmp
xor
cmp
in
push
sub
outsl
add
sbb
sbb
adc
ret
add
pop
lods
cwtl
bound
xchg
std
push
test
out
enter
xor
orb
cmpsb
xchg
nop
push
dec
ljmp
sub
stc
imul
lock
add
or
jne
push
icebp
sbb
cmp
sbb
mov
rol
outsl
push
mov
adc
daa
pusha
add
mov
je
jo
sub
mov
clc
pop
lock
aas
mull
pop
mov
add
mov
pop
pop
repnz
repnz
call
enter
dec
cmp
jae
lcall
sbb
gs
and
mov
jecxz
imul
outsb
test
test
rcrl
mov
clc
int
add
mov
insl
lods
mov
into
aas
add
rolb
adc
push
int
gs
rcrb
cwtl
mov
mov
cmc
sub
stos
jmp
jne
push
out
sti
jmp
loopne
push
dec
xchg
test
jge
add
pop
stos
mov
idivl
cmc
jnp
nop
pop
push
push
add
notb
and
jb
or
sbb
push
popf
adc
xlat
jns
xor
push
xchg
inc
xchg
hlt
push
or
pop
arpl
stos
xchg
jp
fnsave
cwtl
loopne
stc
fstp
inc
stos
out
lods
mov
xor
cmpsl
push
mov
jnp
aas
popf
inc
mov
mov
xorl
movsl
add
dec
push
push
push
fs
pop
insb
test
cmpsl
imul
int3
out
and
xchg
inc
mov
sbb
xor
push
out
divb
inc
call
icebp
repnz
jb
loop
test
cltd
aas
outsb
ret
xlat
cmp
aas
mov
mov
je
adc
mov
jle
nop
es
lcall
dec
sbb
sub
push
push
inc
lahf
int3
and
mov
sbb
sbb
xor
ret
xlat
scas
cmp
lds
mov
and
out
push
lea
xchg
push
ret
rcl
les
sti
and
mov
icebp
leave
ret
sub
vorps
daa
inc
shll
or
cmp
inc
pop
nop
sqrtps
sbb
je
pop
int3
cwtl
das
incb
sub
mov
fdivs
or
push
mov
test
mov
cmpsb
sbb
aas
jbe
and
jecxz
es
jmp
ss
mov
inc
push
cltd
jmp
adc
mov
sahf
gs
inc
xchg
or
cmp
rorb
lods
and
fbstp
xor
popa
jp
aas
adc
pushf
scas
mov
push
add
rep
push
or
xchg
stc
cmp
aad
test
sub
adc
pop
xchg
mov
cmp
or
mov
pop
or
insb
test
xchg
cwtl
inc
mov
mov
jne
mov
inc
lret
dec
push
ds
hlt
shrl
mov
cmp
lcall
pusha
lea
cmpsl
mov
notl
cli
mov
scas
push
clc
adc
orl
movsl
mov
or
shll
dec
mov
imul
mov
inc
test
mov
fidivs
push
mov
push
shrl
jg
rcrl
and
fcmovu
mov
lret
sub
lock
or
pop
adc
dec
push
and
cmp
data16
testb
mov
ja
adc
or
sarl
add
and
outsl
xchg
xor
stos
divb
clc
arpl
cli
aam
adc
sbb
lods
push
roll
push
dec
push
xor
xchg
pop
push
repnz
mov
jmp
lods
into
out
mov
xchg
sbb
sub
jg
scas
inc
repz
or
mov
lret
daa
xor
sbb
cmp
push
mov
xchg
fmulp
cltd
sar
fnsave
leave
pop
cmp
call
fistps
in
es
testl
push
jnp
rcrb
mov
shrl
xor
aas
aad
fistpl
push
dec
cli
push
jp
cmpsb
ret
pop
addr16
push
sbb
imul
movsl
mov
mov
lods
mov
popa
loope
adc
ss
add
lea
lods
fdiv
fstl
mov
push
push
sub
or
sub
sbb
lods
gs
adc
dec
jl
cmp
test
cltd
int
decl
sub
aas
mov
push
fisubs
inc
push
jae
and
mov
stos
jbe
mov
lret
ja
add
lea
lods
cmp
sbb
push
xchg
jo
mov
jl
loope
dec
xchg
in
push
aam
cmp
mov
popf
out
popf
and
and
je
pop
pop
popa
sti
lcall
popw
pop
adc
xor
add
rcl
daa
movsb
sbbl
mov
mov
push
les
lock
aas
push
popf
insl
mov
sub
jle
shll
in
arpl
mov
stos
sub
aad
mov
rolb
lcall
push
push
pop
repz
cmp
cltd
out
sahf
ret
pop
dec
xor
pop
jae
gs
lret
adc
mov
out
mov
loopne
gs
mov
rol
mov
adc
sub
jp
testl
mov
push
xlat
inc
ret
js
push
loop
test
cli
mov
cltd
xor
sti
push
adc
and
leave
pusha
lahf
ds
fldcw
push
fldpi
mov
xchg
add
test
stos
test
scas
dec
test
push
add
mov
insl
xor
adc
sarb
aam
sarb
sbb
ret
sahf
mov
cmpsl
pop
int3
out
enter
jne
mov
lcall
adc
or
in
bound
pop
shl
andl
and
lds
hlt
aad
and
gs
arpl
jp
ja
test
lea
jnp
fiadds
popa
cmp
jg
aad
rcrb
cmp
cmpsl
push
push
push
insb
fildll
mov
arpl
mov
lea
leave
mov
sbb
enter
mov
out
aam
adc
scas
in
lods
fs
leave
mov
popa
mov
lds
jge,pn
into
cmp
aad
out
lcall
mov
sti
fwait
pop
mov
cs
xchg
loop
sarl
mov
mov
xchg
and
sbb
push
test
sub
ret
shl
repnz
mov
fisttps
push
xchg
stos
iret
adc
add
lret
std
inc
inc
aas
stc
xchg
adc
mov
add
or
lds
mov
cmc
lcall
fwait
jmp
mov
aaa
shlb
adc
inc
icebp
xor
das
inc
jno
adc
inc
clc
aad
cmp
les
adc
add
loope
ds
xchg
stc
loope
push
lahf
jmp
push
cmp
mul
sub
les
mov
nop
flds
inc
jne
lock
cmc
divl
imul
sub
mov
setg
xor
xor
inc
loope
out
inc
and
icebp
xchg
movsb
int3
lret
add
sbb
inc
rclb
sub
into
pop
push
sbb
jae
jl
lcall
add
enter
fadds
and
sub
test
data16
adcb
int3
pop
mov
fsubrl
mov
es
mov
incb
mov
xchg
cmp
in
cwtl
inc
jbe
dec
sub
sub
adc
outsb
fstpt
fidivs
dec
subl
cmp
lock
cld
inc
jmp
jae
xchg
and
pop
loopne
stc
ss
adc
data16
popf
cmpsl
bound
jb
lret
mov
test
push
ss
inc
arpl
test
in
icebp
adc
mov
and
fwait
sti
test
fdivl
dec
jnp
icebp
push
sti
das
add
cs
jbe
int3
out
ljmp
test
push
out
xchg
push
add
push
test
push
and
test
mov
fisubs
mov
mov
push
push
mov
dec
cmp
mov
pop
cmp
mov
aam
lahf
shlb
fucomi
insl
add
push
mov
test
push
sbb
sysenter
bound
or
stc
mov
dec
es
pop
mov
push
xchg
adc
icebp
sub
dec
jo
int3
ss
neg
mov
sbb
mov
inc
popa
pop
int3
into
popf
js
mov
out
test
adc
cmpsb
insl
ja
push
aam
mov
pop
arpl
xchg
sub
or
pusha
fldt
insb
jl,pt
jecxz
fcomps
add
stos
mov
dec
inc
test
or
cmp
pusha
insb
arpl
xchg
jns
jb
fcmovb
mov
push
mov
icebp
adc
mov
out
sti
push
in
pop
mov
repz
cmpsb
cltd
push
shlb
xlat
shll
jb
jbe
push
push
push
in
mov
in
xchg
fstpt
xchg
leave
mov
jg
mov
mov
pop
fstpl
repnz
dec
cs
cmp
jns
lret
stos
jne
xor
mov
xchg
push
addr16
popf
mov
mov
sbbb
nop
test
pop
insl
sub
out
adcl
mov
aam
pop
pcmpgtw
loop
xor
or
not
pop
xchg
rcrb
sub
xchg
pop
and
pop
cmp
nop
cltd
push
mov
shlb
iret
fwait
sahf
test
and
adc
roll
mov
cmpsl
mov
push
mov
lret
lahf
int
and
cli
push
out
ljmp
shr
insl
inc
dec
push
mov
orl
mov
adc
pop
iret
flds
sbb
test
sbb
cwtl
inc
cmp
add
push
and
popa
xorl
ljmp
and
push
int3
pushf
out
xchg
je
stc
outsl
jnp
jg
out
ficoms
or
inc
xor
add
scas
pop
mov
sti
fs
in
mov
imul
pusha
and
sbb
cli
lock
fdivl
xchg
pop
imul
hlt
mov
add
add
jae
add
xchg
aam
or
rcrl
adc
outsb
test
outsb
xor
dec
cmc
cmp
repz
into
mov
or
fs
xor
addl
roll
loope
stos
xchg
jle
jbe
les
ret
pop
out
das
push
sub
scas
dec
fs
add
sbb
inc
pusha
jb
add
bound
jbe
lock
lods
mov
jns
cli
loope
in
stos
add
and
sti
fwait
mov
mov
or
mov
dec
mov
cmpsb
mov
aam
xchg
xchg
mov
push
cmpsb
or
sahf
sti
gs
lods
pop
out
push
jns
orl
adc
jle
pop
insb
hlt
mov
cmc
mov
mov
add
cmpsb
xor
or
out
loopne
push
push
lods
insb
pop
jecxz
xlat
mov
rol
mov
jns
mov
adc
inc
test
or
adc
pop
fidivrs
push
jge
enter
movsl
mov
popf
mov
nop
xchg
push
push
dec
popf
js
iret
imul
outsb
mov
pop
and
inc
in
mov
out
push
push
mov
aad
or
pop
cmpsb
add
push
aam
jbe
out
pop
movsl
cmp
fisubl
mov
jne
insl
push
push
jns
jecxz
addr16
cmp
and
cmp
xor
sub
pusha
pop
ret
jns
jae
inc
sahf
lock
xchg
sub
in
cltd
das
adc
xor
and
in
inc
in
mov
jp
adc
jnp
dec
add
push
sbb
je
shll
adc
sbb
sub
push
mov
or
xchg
xor
pop
jns
add
sub
xchg
dec
pop
mov
push
mov
out
adc
test
sub
bound
aaa
into
mov
shrl
jl
xor
xor
dec
cmpl
dec
into
xor
jae
test
push
ret
push
mov
shl
or
fsubrs
xor
orl
lea
xchg
push
cltd
repz
or
sub
jecxz
xor
add
data16
dec
push
scas
pop
mov
xor
push
push
jmp
fimuls
or
out
pop
fstpt
adc
jb
pop
adc
lret
inc
leave
mov
push
pop
adc
fisttps
inc
cmpsb
cmpsb
lods
fisttps
xor
jb
test
adc
cwtl
pop
sub
into
mov
mov
and
mov
adc
rcll
in
xchg
out
dec
fcompp
ret
pop
mov
lea
adcl
add
xor
xor
clc
add
daa
jae
sbb
pop
cmp
rcrl
xlat
jl
jne
fwait
stos
cmp
xchg
into
andb
sbb
clc
mov
movsl
mov
std
jo
imul
stos
push
enter
xchg
inc
loopne
lods
fwait
sti
sub
fidivl
call
fnstcw
les
cmp
sbb
inc
and
out
sub
repnz
inc
mov
call
push
lret
cmp
out
jnp
lods
sub
mov
pop
xor
leave
shl
mov
xor
std
clc
aas
clc
push
out
popa
add
scas
in
aad
testb
or
jns
mov
aam
add
xchg
or
cmpsl
mov
xchg
mov
pop
loopne
movsl
imul
loop
rcrb
pushf
dec
mov
mov
js
lods
push
cltd
or
mov
dec
adc
push
sbb
orl
mov
add
lahf
imul
and
cmpsl
ss
mov
pop
shlb
insb
mov
fildl
lea
aaa
lock
cmp
xor
stc
bound
shrb
cs
sti
imul
push
xchg
out
repz
mov
cmp
insb
cmp
push
aas
inc
enter
out
mov
push
lods
add
dec
dec
jecxz
sbbl
xor
js
xor
out
js
cmp
lcall
jge
xor
xchg
sub
inc
js
dec
lock
ljmp
inc
pushw
aad
out
dec
mov
test
ja
in
test
lock
outsb
mov
cltd
cwtl
or
mov
in
imul
push
jae
out
rcrl
cmp
in
sbb
add
lods
test
arpl
mov
mov
adc
adcl
pop
ret
icebp
pushf
sub
cmp
repnz
jb
cwtl
push
imul
stc
adcb
repnz
jns
jns
jmp
push
test
xchg
add
jecxz
or
pop
add
fnstsw
pop
repnz
dec
xlat
idivb
cmp
cmp
sub
lahf
mov
adc
enter
lock
inc
sbb
dec
jb
push
fidivrs
notl
mov
aad
dec
imul
fidivs
mov
or
push
loopne
fsub
jl
jo
or
jmp
and
arpl
mov
scas
add
out
in
pop
add
xor
orb
xor
arpl
inc
jp
das
fwait
xchg
jg
and
mov
ja
loopne
cmpsl
out
adc
imul
andl
mov
mov
jne
and
jmp
popf
cld
sahf
mov
int
and
icebp
out
data16
dec
sahf
xor
cmp
or
lea
mov
xchg
stos
in
stos
ficomps
data16
outsb
pushf
or
and
sbb
sbb
lods
xchg
xor
ret
jno
lret
es
inc
fs
sub
push
imul
fistl
sbb
ds
push
jl
in
std
xor
rclb
and
mov
push
fwait
dec
pop
pushl
test
orl
sbb
sti
ret
cli
xchg
cmpsl
sub
cmc
mov
out
adc
adc
in
jbe
mov
scas
jno
ret
jp
mov
fildl
pop
fsubr
data16
dec
adcb
fwait
cwtl
push
push
lret
mov
lods
js
fimuls
addr16
mov
cmp
sbb
jno
jge
push
jecxz
popf
sub
ljmp
jmp
adc
inc
lds
sub
jp
mov
sti
jmp
mov
shrl
xor
popf
ljmp
sti
inc
int
outsl
jmp
sbbb
xor
mov
insb
push
sub
cmp
inc
cmp
xchg
test
dec
leave
mov
out
mov
mov
push
sub
inc
adc
bound
xor
inc
mov
repz
sbbl
js
mov
inc
rcl
jbe
addr16
mov
cltd
sub
stos
faddp
push
cmc
pop
repnz
enter
mov
lea
imul
mov
outsl
push
loope
pop
in
inc
lea
mov
es
loop
or
aas
pop
push
pop
cmp
cmp
sbb
js
cwtl
mov
sbb
mov
push
or
mov
lcall
xchg
sub
orl
push
mov
jp
and
adc
xorl
lds
ds
outsb
push
mov
push
mov
push
std
jns
in
cwtl
popf
xor
xlat
mov
sub
insl
shlb
push
test
cmp
jb
movb
dec
inc
cmc
and
nop
fisubrl
inc
xlat
pusha
cmp
cli
or
mov
sub
sub
mov
cmpsb
int
ja
shll
cld
mov
mov
xchg
fbld
mov
jo
xlat
gs
movsl
rorb
daa
xchg
and
ret
dec
mov
sub
cmp
xchg
jge
fistpll
test
std
mov
and
hlt
xor
test
test
add
xor
lcall
sbb
icebp
lahf
pop
fprem1
jl
add
daa
ljmp
push
jne
inc
or
pop
ss
lcall
leave
dec
mov
mov
jmp
add
mov
push
dec
xor
add
pop
in
into
or
aas
dec
cmp
aaa
into
pop
out
dec
test
aas
dec
and
cmp
mov
push
data16
mov
mov
popa
aaa
iret
bound
dec
scas
xchg
mov
lods
mov
jmp
cmp
stos
mov
lcall
xchg
cmp
out
test
int
data16
cmp
push
aam
inc
mov
or
call
or
mov
mov
addl
jg
bound
fs
and
mov
mov
dec
ret
mov
ret
adc
ljmp
orl
popf
add
lret
mov
xor
add
js
stc
mov
rolb
ss
pop
inc
push
sbb
push
icebp
mov
push
pop
sbb
stc
nop
xchg
jae
push
stc
push
push
movsb
and
xchg
or
sbb
mov
adc
jno
fidivs
xchg
sub
xchg
mov
or
lods
inc
out
inc
fcmovb
sub
arpl
mov
sbb
les
xchg
shll
sbb
test
jmpw
xchg
mov
es
pop
movsl
in
sbb
sub
add
mov
xor
jge
outsb
push
mov
xor
loopne
sbb
ror
rcl
mov
add
push
rcrl
jmp
cltd
gs
sbb
fnstenv
hlt
pop
xorl
insb
sub
mov
or
movsb
popa
popf
cmp
les
jmp
mov
sub
cmp
lods
xchg
rclb
dec
icebp
outsb
out
into
xchg
cmp
je
add
xor
sub
imul
ljmp
xchg
enter
aam
mov
mov
push
or
pushf
and
inc
fstps
mov
call
add
jg
push
jo
sbb
and
pop
cli
lahf
and
sahf
xchg
ss
popa
aas
or
ret
jmp
sbb
mov
insl
jns
fwait
mov
adc
xchg
call
dec
xlat
sti
xchg
sbb
jg
mov
xor
mov
lods
dec
push
ss
insl
into
push
in
cmovp
imul
addr16
or
and
push
imul
dec
mov
jg
xchg
arpl
add
ljmp
pop
mov
lret
add
sahf
into
push
orb
cmpsb
push
sub
sbb
xor
push
add
movsb
mov
test
bound
mov
nop
lahf
mov
sbb
popf
add
lcall
movsb
inc
dec
or
dec
cmp
gs
aam
gs
call
jbe
mov
repnz
leave
mov
fidivs
leave
push
dec
bound
js
subl
mov
popf
stc
sub
push
ds
push
mov
rorb
lret
inc
or
xor
adc
pusha
mov
pop
or
and
sub
push
pop
cmpsl
insb
or
out
lret
mov
dec
xchg
mov
imul
ljmp
lods
mov
mov
ja
je
ret
mov
pop
jne
out
in
stos
clc
xchg
fwait
mov
sbb
testl
and
cltd
loop
xchg
fcom
outsl
push
iret
sbb
jge
insb
jge
pop
mov
jge
jb
pop
int3
push
nop
stos
jne
jmp
je
dec
lret
sub
jecxz
xor
incb
adc
push
ror
lret
sbb
push
sub
jns
mov
xor
push
or
cmpsb
sub
add
cmp
or
pop
call
and
xchg
xor
sbb
daa
lds
mov
pop
add
cmp
adc
movsb
sbb
inc
xchg
shll
inc
xchg
jb
sub
jge
sbb
test
pop
scas
ffreep
sbb
js
adc
pop
sub
sub
in
xor
push
sub
pcmpeqw
mov
test
or
aad
es
sahf
pop
jo
pop
xchg
cmpl
or
mov
xlat
mov
inc
jnp
iret
out
add
cmp
cmpb
cmp
je
or
and
or
mov
loopne
mov
sub
scas
xchg
lret
jb
inc
movsl
add
adc
or
mov
xor
fs
arpl
imul
test
xor
add
jne
dec
xchg
dec
push
icebp
mov
push
push
js
out
or
fisttpll
push
cmpl
in
pop
cmpsl
adc
dec
add
call
in
xorl
push
jl
dec
and
iret
ret
nop
outsb
jl
and
push
in
loop
loopne
cld
push
pop
cmpsl
adc
inc
add
fidivl
or
out
jp
inc
and
iret
hlt
push
adc
mov
jmp
add
push
popf
or
adc
or
xchg
insb
int
nop
xchg
hlt
push
nop
setne
scas
pop
clc
and
jne
inc
xor
das
sub
lret
pop
mov
mov
push
dec
jp
outsb
les
lcall
scas
sub
push
hlt
sti
dec
xor
mov
daa
fildll
aam
dec
cltd
mov
dec
pop
dec
add
or
cmp
js
xor
bound
into
dec
mov
outsl
js
fcomps
adc
xchg
xor
out
in
loop
std
rorl
movsl
xlat
xlat
std
pop
nop
stos
iret
sbb
mov
out
jge
lods
or
mov
out
dec
xchg
sub
ja
lods
lea
sahf
push
into
xor
add
mov
xlat
cmp
sub
scas
mov
enter
cmp
or
add
inc
dec
jge
jge
sub
fcomps
pushf
lea
jl
xchg
adc
jl
xor
cmp
imul
push
sahf
cltd
xor
daa
jl
mov
jl
orl
xchg
add
add
mov
dec
add
mov
cmc
mov
dec
cltd
jbe
add
jo
in
inc
sub
sbb
push
or
imul
insl
add
sarl
jecxz
sub
dec
cltd
push
lock
subl
fisttps
and
push
add
mov
out
sbb
lea
sub
shlb
sub
hlt
movsb
jnp
lea
cwtl
and
jne
das
mov
fucomp
enter
std
xchg
push
inc
pop
cli
out
daa
sbb
xor
call
push
inc
mov
stc
ds
das
pop
mov
loop
dec
fwait
and
cmpsb
mov
push
sti
stos
lods
or
movsl
inc
addb
add
popa
dec
je
call
mov
movsl
sub
sub
and
mov
jae
sbb
popf
imul
into
fcoms
adc
enter
add
test
xchg
inc
jmp
test
cmpsl
std
mov
pop
or
cli
sti
jmp
add
repz
ja
stos
sub
mov
nop
fwait
push
dec
adc
xlat
jmp
xchg
xchg
mov
push
rolb
addr16
movsb
mov
pop
sbb
jge
pop
mov
lock
xchg
sbb
push
mov
mov
mov
popf
aam
jmp
dec
jmp
iret
insl
loope
cwtl
movsl
xor
xor
sbb
iret
add
or
mov
add
cwtl
imul
dec
sbb
sbb
inc
dec
cmp
pop
fstpt
std
test
mov
push
lock
cmp
pop
rcrb
mov
testl
lret
mov
fsts
popf
popf
sub
mov
stos
add
out
test
into
popa
cmp
fsub
push
mov
das
sahf
sbb
inc
sub
lret
inc
das
cmp
jns
imul
sbb
ror
mov
push
add
mov
sbb
adc
adc
pop
or
mov
insl
adc
mov
xor
pop
inc
lods
pop
dec
mov
push
cmp
addr16
cmpl
adc
mov
out
mov
dec
mov
call
aaa
loopne
fwait
movsb
ja
imul
stc
add
mov
push
sub
lds
mov
popa
add
fmuls
inc
stos
sbb
negl
rolb
popa
jns
sbb
lret
stc
addr16
jnp
sqrtps
push
pushf
clc
ja
add
push
lret
jle
gs
notl
js
jbe
pop
cmp
mov
js
pop
and
push
fwait
xchg
inc
dec
mov
push
in
lret
bound
inc
jmp
enter
in
imul
adc
add
jg
jp
es
popf
cmp
pop
popf
ret
das
push
jae
cmpsb
dec
add
jne
push
cmpsl
jl
and
dec
stos
rol
cmpb
loope
sbb
xlat
icebp
data16
mov
sarb
pop
cwtl
cltd
pop
mov
insb
mov
xchg
mov
iret
ficoml
or
fldt
repnz
inc
in
push
mov
jns
adc
imull
lock
mov
or
cmp
fsubp
mov
mov
fwait
movsl
std
testb
in
ss
jg
cmp
mov
pop
adcb
fdivrl
cli
xchg
push
mov
lahf
xor
or
mov
std
jbe
jne
jmp
xor
fcmovne
pop
pushf
xchg
add
mov
aad
push
test
fnsave
out
fists
xchg
icebp
test
pop
je
stc
shlb
inc
dec
cmpsl
sub
dec
icebp
popa
mov
test
xor
pop
lods
pusha
cmc
xchg
xchg
into
lds
cmc
scas
mov
pusha
cs
xchg
outsl
mov
sbb
or
pop
les
or
test
mov
outsb
mov
ret
stc
sub
push
lock
jp
repnz
push
lods
add
ret
fidivs
pop
xchg
lcall
and
mov
mov
in
jecxz
sbb
inc
or
in
sub
mov
popl
out
mov
xchg
adc
adc
ret
fisubs
push
rcrl
jno
ljmp
or
cmc
jnp
stos
bound
movsl
leave
data16
lea
push
xchg
mov
sub
in
mov
ret
add
outsl
jmp
cmp
xor
stc
jae
sub
ret
mov
addr16
in
fsubs
repz
stos
jmp
cmp
mov
mov
push
adc
ret
shrl
adc
or
or
jl
push
and
lods
pop
daa
xor
decl
lret
sti
shrl
jl
test
mov
mov
mov
out
push
sub
mov
incl
mov
and
push
shrl
nop
sub
inc
cltd
jmp
dec
call
mov
fdivrl
push
lea
loop
dec
pop
addb
fists
xchg
add
mov
arpl
push
jge
sub
out
sahf
fidivs
fdivrl
aaa
and
cmp
cmp
dec
imul
xchg
add
sbb
add
inc
xchg
ret
push
iret
js
pop
outsb
addr16
fmuls
aam
in
sbb
ds
push
ja
sub
popf
and
cltd
sub
out
scas
xor
jl
sbb
cmp
push
mov
popf
push
push
cmpsl
push
hlt
push
pushf
or
std
mov
loop
pop
and
outsl
cmp
test
jns
mov
aas
loopne
sbb
popa
sub
fsubr
mov
movsb
cwtl
lahf
push
mov
inc
subb
or
iret
ret
dec
inc
jbe
cmp
fldenv
jb
pushf
sub
fwait
xor
dec
xchg
pop
mov
push
int3
dec
cmp
dec
sbb
mov
js
fiadds
sbb
shlb
outsl
shlb
add
les
stos
inc
pop
les
hlt
pushf
out
jno
int3
or
stc
ljmp
adc
cmp
rorl
add
cmp
and
imul
sti
sub
orl
faddl
out
adc
mov
hlt
push
jae
dec
mov
sbb
xor
jbe
adc
movl
call
inc
test
das
jl
lcall
test
dec
fstpt
aas
pop
test
jo
sub
xchg
cs
aam
mov
adc
out
mov
cwtl
call
fsubrp
outsw
sub
lahf
jnp
mov
leave
push
mov
sti
sbb
fstpl
mov
mov
mov
jge
loop
inc
sub
jb
in
jecxz
and
push
imulb
cmpsl
out
lods
leave
xchg
enter
mov
insb
jno
sbb
inc
xchg
repz
popa
push
mov
jge
lods
and
inc
mov
lret
fcompl
mov
or
mov
lds
rclb
push
cmp
cwtl
jle
inc
ds
imul
jg
jnp
cmp
push
lahf
add
daa
and
fcomp
repz
ds
cmp
sub
push
mov
add
movsb
adc
mov
inc
mov
loope
mov
imul
sbbl
js
add
loop
adc
cltd
xchg
push
rcrb
xor
mull
mov
into
add
fcomi
xchg
lahf
add
and
testb
out
sub
xchg
pop
lret
call
scas
jle
in
push
mov
dec
fwait
pop
mov
bound
xchg
mov
lahf
in
insl
xchg
mov
ret
sbb
and
sbb
sub
and
stos
je
outsl
pop
xchg
js
or
sbb
pop
mov
ret
call
and
mov
mov
ds
sub
add
and
arpl
clc
jnp
jne
sbb
dec
cmpsl
out
call
dec
repnz
movsl
gs
adc
arpl
aas
inc
pop
and
in
pop
cmp
pop
pop
cmpsb
inc
stos
shr
adc
xchg
inc
popa
clc
je
cmp
push
cli
jecxz
cmp
fisttpll
stos
fs
sbb
jl
add
test
dec
add
ss
fwait
into
cwtl
stos
inc
sbb
sbb
subb
or
pop
out
daa
push
insb
sbb
dec
jbe
mov
int3
jge
xor
cmp
scas
mov
out
dec
fdivrl
mov
mov
aam
push
jmp
sbbl
cmp
ljmp
jl
cmpsb
sub
andb
adc
fldt
data16
pop
xchg
sbb
arpl
testl
xor
sbb
adc
jns
pop
jg
insl
sub
pop
les
jae
ret
roll
test
sbb
mov
jne
sahf
sahf
in
jp
outsl
stc
cmpsb
sbb
js
push
ds
icebp
outsl
mov
mov
lea
pop
ret
inc
subb
in
push
idivl
aas
lahf
jle
inc
sbb
add
shll
xchg
inc
leavew
mov
je
stc
sahf
hlt
pop
xchg
push
push
mov
fdivl
push
call
movb
in
sub
inc
aad
imul
je
adc
pop
rcl
sarb
pusha
jno
adc
jg
and
fwait
cmp
xchg
push
je
push
pop
fiaddl
xor
fsubrs
out
test
subb
scas
mov
adc
int
push
xchg
insb
loop
and
lcall
mov
push
sub
sahf
and
aas
or
inc
lcall
push
negb
mov
aad
mov
mov
jg
mov
out
out
icebp
xchg
sbb
sahf
inc
push
jl
jno
fucomip
jecxz
push
push
dec
imul
push
push
scas
mov
icebp
mov
movb
les
out
adc
push
loope
imul
jne
xchg
fcom
mov
scas
add
mov
push
pop
xchg
sarb
cmp
pushf
test
xor
and
jbe
dec
fcmovnu
xlat
in
inc
add
insb
inc
andb
xchg
imul
and
and
mov
outsb
arpl
xlat
inc
jp
add
js
rcrl
inc
pop
mov
pusha
shr
push
cmp
cwtl
fstps
je
das
sbb
addr16
pop
fnstsw
push
jno
jo
xor
ret
and
iret
fdivrs
xor
imul
sbb
dec
rcrl
orb
jl
jl
test
call
iret
inc
mov
add
inc
push
and
loopne
sbb
mov
lret
out
iret
sub
adc
roll
and
icebp
or
jb
add
mov
adc
jle
jmp
mov
lret
test
cmp
popa
mov
mov
mov
or
scas
pop
data16
and
test
shlb
xchg
lock
sub
idiv
cmp
test
xor
push
gs
mov
or
pop
cmp
add
lcall
jno
fisttpl
movsb
lea
pushf
xor
dec
pop
xchg
bound
push
lds
xchg
fisttpl
mov
pop
mov
popa
mov
inc
mov
add
mov
scas
inc
cmp
mov
in
andl
not
or
pop
ds
jge
fidivrs
loop
call
add
mov
stc
cli
dec
std
pop
outsl
xor
mov
nop
pop
ss
mov
lcall
inc
fsubr
jle
mov
jp
subl
sub
pop
mov
fwait
sti
and
sbb
pop
sub
push
jp
enter
int3
jmp
out
ret
idivl
testb
ficompl
pop
mov
les
sbb
add
scas
hlt
imul
lods
loop
lock
popa
sahf
shlb
or
mov
jbe
pop
and
xlat
mov
jg
scas
pop
nop
addr16
mov
in
insb
out
pop
inc
xchg
dec
mov
mov
in
fbstp
shrb
lods
test
push
and
and
sbb
ljmp
call
or
out
jns
add
bound
loop
pop
mov
pop
ret
xor
inc
jmp
or
int3
and
sti
mov
fmull
xor
cmp
loope
push
or
adc
cmpsl
push
jb
sbb
inc
dec
fs
mov
test
mov
xor
iret
out
imul
and
mov
lret
and
lcall
test
cmpsl
inc
notl
ret
jle
mov
pop
fsubrl
idiv
xchg
mov
ret
outsl
cmp
xchg
pusha
int3
cmpsb
sbb
mov
aaa
into
or
pop
and
js
pop
jge
jmp
sub
jge
sub
aaa
adc
mov
icebp
int
sbb
mov
fwait
hlt
imul
jne
adc
mov
inc
lods
sar
pusha
negl
xchg
imul
lds
out
cmp
xchg
cmp
movsb
ja
pop
movsb
sbb
jne
inc
cmpsl
or
adcl
inc
cld
lods
shrl
sub
mov
pop
jno
dec
dec
push
sbb
sbb
mov
movsb
pop
stos
and
lds
cmp
sbb
jnp
lds
jo
add
sbb
addr16
cmp
jns
jbe
cmpb
les
cld
insb
pop
loopne
lret
negb
nop
stos
adc
mov
or
add
or
jle
mov
jmp
xor
inc
push
mov
mov
adc
or
jno
xchg
daa
pop
mov
scas
cld
aam
loop
xchg
fistps
mov
std
jo
in
shld
es
push
clc
mov
fldenv
fs
test
inc
fsubrs
negb
jmp
pop
lcall
sbb
cld
sub
mov
mov
not
clc
test
call
xchg
stos
inc
mov
loopne
pusha
adc
push
out
pushf
mov
cmp
xlat
shrl
test
iret
xchg
shll
pop
jp
mov
daa
fwait
mov
test
cltd
and
cwtl
pop
scas
inc
aas
gs
jbe
pop
movsb
mov
pop
pop
and
sbb
fdivr
xchg
sbb
stc
cmp
stos
jo
push
shrl
aas
sbb
fnstenv
and
testl
cmp
notb
or
adc
mov
leave
pop
je
leave
int3
mov
pop
mov
jb
sarb
pop
inc
data16
mov
mov
jbe
mov
push
aam
xor
push
repz
stos
or
test
jge
adc
pop
andl
in
add
ror
pop
mov
jne
movsl
rcr
jp
lahf
stos
pop
addr16
les
sbbb
pop
test
sub
jl
test
fwait
cmp
xchg
adc
outsb
sub
addr16
adc
sub
add
flds
lcall
test
and
xlat
insl
popa
pushf
inc
fldenv
xor
fadd
idiv
es
in
push
mov
fwait
sub
pop
xadd
bound
sub
pop
fisubrs
movsl
lret
xor
inc
jecxz
icebp
clc
and
jp
aas
mov
pop
lret
or
sbb
fnsave
adc
pop
adc
outsl
and
sarb
lds
pop
cmp
daa
dec
adc
jns
lock
in
xor
je
inc
fwait
xchg
xchg
stc
jle
xor
rep
lods
cmp
xchg
gs
mov
cmp
xchg
lods
push
mov
lds
js
cmpsl
cmp
cmpsl
jl
insb
cmpl
or
jno
mov
loop
std
sbb
or
mov
jle
cwtl
nop
mov
lret
in
mov
pop
add
es
inc
insb
sub
push
mov
bound
xchg
iret
faddl
push
xchg
dec
lret
lret
in
loope
mov
jbe
push
jle
inc
ljmp
scas
fs
movsb
add
repz
xor
add
push
icebp
mov
push
lods
mov
fisubs
push
mov
lret
xor
ret
xor
pop
mov
jnp
insb
and
std
xchg
in
jge
or
push
movsb
cltd
sub
pop
or
jp
testl
addb
imul
sbb
push
cmp
mov
adc
outsb
mov
popf
int3
das
add
jb
popa
xor
out
adc
pop
or
pop
sti
mov
add
jnp
test
add
xor
fidivl
dec
cwtl
sbb
ret
sbb
movsl
jle
pop
xor
inc
andl
ret
fucompp
ds
outsb
stos
arpl
repnz
test
push
call
pop
outsb
jns
adc
lods
test
mov
inc
imul
push
adc
fadds
or
into
push
out
sub
xchg
add
xor
pushf
xchg
hlt
sub
jne
enter
push
enter
cmpsb
xor
fs
mov
sub
fstps
mov
mov
dec
mov
push
mov
ja
shrd
clc
repnz
push
add
sbb
push
int
or
sbb
out
aad
pop
subl
ror
pop
vmulpd
jo
and
jbe
xor
pop
popl
jno
lods
pop
sbb
iret
fcmovnbe
inc
xchg
sti
xor
jg
xchg
notl
jp
aad
inc
xor
aaa
jg
in
pop
mov
xchg
jecxz
push
sub
fwait
mov
sub
in
cmpsb
movsb
js
lahf
sbb
push
pop
fisubrl
pushl
rcrl
adc
ficompl
or
sub
and
jae
lods
sar
repnz
addr16
lcall
pop
push
mov
imul
and
and
pusha
cmp
dec
in
test
xchg
sarl
push
test
ljmp
xor
cs
cmpsb
test
add
shrl
mov
cmpsb
sub
xlat
dec
xchg
xor
sub
out
popa
js
out
dec
pop
sti
push
add
jne
je
ficoml
cmp
scas
push
outsl
and
and
or
daa
cwtl
or
dec
ja
jns
and
push
hlt
adc
jmp
orl
mov
stos
inc
sub
push
in
std
scas
inc
stos
fcoms
add
inc
jns
dec
rcr
pop
cmc
nop
pop
inc
dec
dec
jnp
mov
inc
scas
movsb
or
iret
mov
les
in
mov
jbe
mov
add
gs
int3
pusha
cmp
into
and
pop
movsb
cmp
cs
cltd
push
fdivl
push
jo
cli
jecxz
hlt
mov
repz
sbb
or
xor
stos
push
push
xchg
sub
fdivl
add
sbb
cli
mov
ss
ret
cld
xorl
pop
or
insl
cwtl
mov
out
iret
fidivrl
andb
add
mov
cmp
dec
clc
or
lds
sbb
mov
cmp
xor
mov
fisttpll
or
cmpsl
pop
cmp
insl
cmp
iret
mov
mov
inc
aam
xlat
adcl
in
push
out
loopne
sub
sub
aad
sbb
jns
lret
jnp
mov
mov
push
mov
daa
mov
dec
pop
dec
aam
std
cltd
pop
mov
xchg
pop
jg
dec
fistpll
pop
loope
adc
incl
inc
nop
jnp
movsb
xchg
ret
pop
mov
jp
or
mov
cmpsb
xchg
shlb
fnstsw
loop
imull
nop
stos
push
pop
in
test
add
pop
outsb
cmp
arpl
mov
cmpb
cmp
push
fsts
cmp
inc
fnstcw
addr16
pop
fisubs
idivb
xor
add
jmp
sub
jo
test
aad
scas
imul
aam
mov
pusha
cmpsb
lock
aad
mov
jne
int3
das
push
mov
in
or
cmp
mov
loop
cwtl
ret
push
mov
loopne
imul
or
jge
cmpsb
pop
in
js
mov
or
add
pop
fnstcw
mov
jmp
test
xchg
dec
out
in
jo
test
sbb
fidivs
xchg
jmp
xor
imul
adc
mov
clc
or
outsl
jg
arpl
push
stc
push
or
daa
fadds
clc
aas
mov
popf
and
stos
ljmp
sub
or
cmc
cmp
adc
out
mov
push
pop
aaa
lods
inc
movsl
xchg
testl
push
fdivl
test
ss
cmpsl
bound
jle
lcall
cmp
cmp
js
pop
cmp
pop
ret
loopne
cmc
aas
gs
cwtl
sbb
add
mov
les
push
leave
jae
add
mov
mov
leave
in
cmp
rorb
rorb
shrb
sub
stos
imul
or
es
jl
jg
cli
std
or
inc
dec
iret
cmc
jecxz
mov
add
xor
inc
dec
inc
pop
mov
cld
fs
push
clc
daa
xor
inc
fiaddl
adc
mov
lods
dec
rcll
sub
cmp
shrb
sbb
pop
outsb
sub
rol
jp
cli
mov
int
out
xchg
sahf
mov
addw
lahf
je
inc
sub
pop
mov
testb
mov
xor
xchg
ljmp
adc
imul
sti
sub
ds
aaa
cs
cmp
cmp
out
js
scas
and
or
daa
adc
jecxz
mov
testl
sub
std
and
jg
cltd
mov
or
bound
mov
outsl
mov
hlt
adc
mov
test
xor
dec
test
adc
adc
and
call
enter
addr16
dec
lret
sbb
cmp
arpl
mov
sub
jo
cmp
cmc
sbb
aad
jl
lods
adc
add
lret
addr16
inc
xchg
lea
repnz
cmpsb
loopne
sub
fistl
mov
lods
in
aaa
jbe
xchg
xor
mov
jne
adc
pop
cmp
push
adcb
add
clc
mov
fidivl
loope
idivb
out
sbbb
or
lds
into
adc
sbb
xchg
adc
cmp
ficomps
stc
shll
xchg
iret
push
ret
movsl
push
icebp
pop
in
jnp
push
in
dec
sbb
fwait
push
xchg
adc
gs
lcall
dec
push
push
in
mov
or
jnp
lcall
cmpsb
push
je
mov
xchg
push
jno
xor
aad
divl
hlt
or
pop
add
mov
cmpsb
add
pop
sahf
dec
push
daa
jo
and
pusha
xchg
fdivrs
leave
push
push
dec
pushf
ret
into
sbb
xor
jecxz
cld
pop
lcall
push
jmp
dec
test
xchg
inc
popa
inc
cmpl
pop
jo
mov
and
inc
xor
jmp
adc
xor
gs
inc
jecxz
or
or
fisttps
push
sti
in
or
sub
int3
pop
ljmp
mov
and
push
ljmp
addb
movsl
das
pusha
mov
xchg
sub
dec
dec
scas
or
aas
hlt
mov
das
fstp
stos
xchg
xchg
mov
jecxz
imul
outsl
loop
outsb
push
push
dec
fsubr
sbb
cmp
cmp
outsl
cli
mov
negb
jae
add
rorb
mov
cmp
repz
dec
mov
gs
inc
push
aad
scas
xor
dec
sub
inc
jae
adc
aas
into
das
sahf
xchg
popf
cmp
psubusw
jmp
or
js
out
mov
push
push
adc
xchg
scas
or
push
adc
xchg
ja
dec
in
mov
ljmp
dec
pusha
and
mov
mov
movsb
cmpsb
in
or
shll
pushf
adc
or
loope
cmp
pop
xchg
je
lcall
pop
mov
push
or
sti
jns
sahf
mov
jns
popa
add
sub
mov
mov
out
dec
xlat
xchg
xor
adc
mov
dec
shll
mov
or
fsubs
inc
ljmp
mov
sbbl
push
inc
inc
jmp
mov
mov
leave
mov
mov
and
sbb
sub
cmp
push
sub
mov
lcall
jne
mov
mov
adcb
mov
ret
out
sti
shl
pop
and
add
repnz
inc
pop
adc
inc
cmpsl
leave
shlb
lds
fabs
push
dec
lods
mov
aad
and
stos
stc
dec
pop
sbb
mov
xchg
ljmp
sub
out
mov
dec
add
mov
es
dec
xor
lretw
push
in
mov
movsl
fwait
aam
nop
push
mov
cltd
or
push
inc
fnsave
lock
mov
dec
das
fimuls
mov
addl
pushf
pushf
xchg
add
lods
jge
clc
xor
sub
sti
inc
sbb
rcr
rcrl
test
cmc
inc
jno
jle
xor
pushf
or
pop
repnz
sahf
xchg
add
insl
sub
mov
xchg
add
sub
pop
sahf
adc
cmpsl
mov
push
out
push
xor
cwtl
das
pop
pop
cmpsb
imul
gs
dec
test
jmp
or
popf
mov
jp
fistl
mov
adc
out
fwait
mov
fnstenv
and
int3
push
lret
mov
xchg
xchg
lret
aam
inc
pop
push
scas
pusha
out
pop
xchg
mov
xor
or
inc
lahf
sbb
or
into
cwtl
cmp
enter
out
xchg
push
sbb
cmp
mov
or
ficomps
rorl
xchg
cmp
in
lock
cwtl
jle
xor
push
out
xor
into
add
aam
cli
mov
jno
je
pop
cltd
mov
sti
stos
das
iret
pop
cmp
add
xchg
add
sahf
cmp
sbbl
adc
sbb
js
cmp
sahf
sub
lock
clc
xchg
xor
adc
fs
mov
xor
mov
inc
shrl
out
rorl
insb
aad
cmpsb
adc
mov
and
pusha
pop
sub
cmp
imul
jl
pop
mov
popf
testl
mov
xchg
sub
and
rcrl
xor
icebp
test
fidivrl
aad
ficoms
incl
pop
jle
cmp
add
or
lahf
clc
ljmp
leave
jb
std
push
mov
loopne
stos
inc
push
add
imul
scas
mov
mov
push
push
adc
fsubr
mov
pop
loope
xchg
adc
arpl
in
test
xchg
aas
push
addl
aad
dec
pop
lods
inc
push
pop
lds
sub
push
inc
jl
adc
das
mov
push
mov
xchg
adc
push
lret
movsl
testl
xor
pop
inc
mov
pop
mov
insl
in
dec
ja
cmpsb
jns
mov
mov
xchg
inc
jo
pop
mov
cmp
insb
cli
sub
cltd
or
xor
mov
aam
test
fdivl
add
leave
cltd
and
or
fdivs
dec
push
dec
imul
cmp
ljmp
xchg
das
jne
jp
mov
std
int
fcoms
ljmp
jg
fnsave
add
imul
hlt
mov
push
xor
lcall
jp
xchg
jae
dec
mov
cltd
cmp
sti
rclb
je
pop
lahf
shrb
dec
dec
fidivs
push
ficoms
mov
pop
dec
xlat
sbb
bound
out
add
loope
mov
pop
mov
les
pop
mov
sbb
sbb
mov
sbb
sub
jl
xor
mov
xor
mov
shll
insl
or
aad
test
aam
pusha
iret
dec
in
andb
inc
in
lds
xlat
jmp
sbb
sbb
sbb
lods
loop
or
outsl
adc
xchg
mov
int
stos
pop
rcrb
aaa
adc
mov
xor
fwait
cmpsl
inc
xchg
aad
stos
jns
xchg
mov
mov
cmp
or
or
lret
adc
inc
xchg
ss
sbb
mov
mov
mov
lahf
cmp
sbb
dec
es
xor
arpl
xchg
sub
ds
sbb
add
lret
sub
sub
xor
fidivl
mov
scas
mov
and
xlat
jns
push
dec
fbstp
or
cmpsl
cmp
lods
sub
rcrb
popa
mov
inc
inc
loopne
outsb
leave
cmp
add
sub
call
jne
hlt
mov
lea
push
mov
sbb
pusha
push
aam
lcall
and
mov
fidivl
jle
inc
in
sbbb
cmc
daa
dec
push
push
stc
jl
scas
loop
lock
call
jecxz
sbb
jne
enter
cli
ja
sub
imul
xor
dec
dec
mov
pop
and
jle
inc
or
mov
jp
adc
cli
sbb
mov
data16
in
cmp
mov
xor
imul
push
add
pop
add
cmp
les
testb
mov
repz
aas
mov
dec
and
lret
mov
out
xchg
adc
jbe
test
inc
and
or
les
insl
hlt
sbb
jg
push
inc
sbb
sub
aam
fildl
jb
mov
cli
enter
test
in
mov
jmp
and
add
je
jns
fists
adc
mov
sub
test
pop
sub
push
out
or
addr16
sbb
inc
inc
sbb
adc
or
xlat
dec
in
std
push
cltd
jno
add
cmp
mov
dec
adc
push
scas
inc
inc
or
mov
add
push
out
push
jge
dec
mov
cmp
sub
sbb
sbb
js
fwait
jle
mov
pop
or
scas
lods
xchg
loope
push
cld
mov
dec
pop
jno
je
pusha
adc
and
cmpsl
xlat
and
rcrb
cmpsb
xlat
jns
lahf
stos
ret
sbb
xlat
xchg
adc
dec
pop
xor
dec
xchg
shrb
dec
dec
push
or
clc
mov
ds
aaa
jg
pop
pushf
jmp
xchg
fs
nop
pop
cwtl
orl
pop
scas
pusha
xor
and
cmp
mov
jg
filds
cwtl
adc
sbb
xor
xchg
push
call
push
dec
pop
icebp
xchg
dec
mov
clc
mov
mov
mov
cltd
push
push
jg
test
testl
jmp
lock
outsl
xchg
shll
or
cld
cmp
outsb
add
cmp
xchg
inc
push
xor
loopne
les
inc
pop
push
inc
xlat
loopne
dec
cmp
aaa
into
pop
mov
push
inc
push
pop
jbe
xlat
insb
mov
adc
add
arpl
addl
sub
int
imul
inc
sbb
mov
xlat
stc
and
dec
or
ss
adc
test
pop
test
aad
adc
cwtl
mov
inc
js
push
fistpl
mov
adc
inc
shll
les
push
decl
jp
cli
aad
test
inc
mov
lret
push
fsts
fidivrl
and
lods
xchg
mov
mov
shlb
sub
mov
lock
jbe
push
arpl
sbb
pop
jne
outsl
fnstenv
xor
bound
mov
sbb
adc
lods
or
jae
bound
mov
int
adc
mov
dec
or
icebp
dec
xor
adc
xchg
lcall
push
mov
and
add
orb
inc
xlat
out
push
mov
pop
pop
cmc
sarb
out
adcw
xchg
pop
stos
add
popf
shlb
scas
xchg
xchg
notl
bound
push
dec
mov
mov
xchg
xchg
mov
test
push
lods
xchg
dec
sub
xchg
mov
mov
insb
js
mov
and
mov
adc
cmp
test
aaa
mov
fidivs
imul
aas
les
dec
loop
loope
aas
cmp
push
sbb
icebp
xchg
jmp
add
test
xchg
ret
add
das
sub
shrb
pop
mov
push
pop
test
jnp
stos
mov
xchg
sub
enter
cmovg
aas
fwait
pop
xor
insb
insl
mov
inc
iret
xorb
sbbl
mov
rcll
clc
mov
xchg
imul
dec
iret
sub
repz
bound
jge
mov
jae
mov
arpl
sahf
inc
mov
sub
les
and
push
inc
bound
dec
mov
lahf
icebp
xor
aam
jle
paddd
mov
inc
jle
nop
pop
xor
add
cmp
dec
lock
aad
xchg
hlt
add
adc
imul
xchg
dec
cli
sub
mov
cltd
xchg
lods
mov
and
pusha
fmul
push
adc
fsts
xor
test
inc
add
pop
in
mov
or
add
fists
add
sub
imul
cmpsl
dec
stos
in
push
jno
cmpsl
pop
add
cltd
sbb
fimuls
je,pt
mov
or
cld
jge
ljmp
arpl
cld
insl
xor
test
push
add
cmpsb
adc
aaa
adc
les
jge
fcmovnb
xchg
add
mov
inc
dec
inc
fidivs
add
das
cmp
lds
or
mov
scas
movsl
aas
jle
ds
jne
sbbb
mov
sub
cmp
shlb
xchg
xchg
fwait
aam
dec
pusha
aaa
mov
jp
fs
stos
sbb
xor
cmp
insl
loopne
xchg
xor
dec
push
pop
push
sbb
pop
lret
xor
jp
jo
imul
iret
je
inc
jno
leave
sbb
or
jmp
dec
add
jns
xor
xor
fbstp
push
dec
mov
xlat
adc
rolb
andl
ljmp
and
adc
jo
jo
call
loopne
and
mov
and
imul
in
test
loop
inc
enter
imul
sub
add
add
lds
inc
jle
lahf
loop
sub
ds
rep
xchg
outsb
sbb
mulb
ljmp
in
xchg
loop
cmp
jmp
sbb
add
sub
mov
pop
jne
adc
jnp
push
cwtl
je
ret
mov
and
pusha
lock
test
xor
push
cld
inc
lods
fildl
test
lret
fwait
loopne
inc
into
jns
cmp
push
lcall
or
cld
add
test
add
pop
push
mov
jg
js
ja
add
sbb
dec
sbbl
negb
dec
jno
cltd
das
sbb
jmp
cmp
lcall
fs
inc
xchg
cmc
jns
data16
iret
pop
push
lock
mov
jle
jae
mov
jbe
aad
je
movsl
data16
repz
sti
pop
adc
pop
dec
loope
fimull
lcall
aas
xchg
mov
std
fnstsw
or
add
loopne
cmc
es
xchg
jb
cmp
cmp
add
imul
push
mov
adc
sahf
sub
es
shr
repz
xor
pop
xchg
mov
add
xor
mov
and
xor
test
loop
jp
or
arpl
aaa
push
mov
inc
aam
test
cmc
sbbb
mov
outsl
movsb
add
loop
xor
fidivrs
sub
xor
es
cwtl
arpl
ljmp
xchg
mov
or
cmp
insl
sbb
cltd
sub
pop
push
cltd
xor
out
shll
mov
sub
cmp
jge
jno
sub
jg
das
xor
mov
hlt
fs
sti
aas
popa
leave
sub
fwait
es
fistl
jb
notb
push
jns
mov
into
adc
je
cld
ror
xor
mov
out
ret
pop
ds
in
scas
pushl
mov
montmul
cmpsb
or
test
add
mov
cmp
jl
out
add
popa
test
ljmp
jle
jns
xchg
mov
and
cltd
pop
jmp
and
ljmp
movsl
hlt
inc
push
pushl
mov
sti
in
xchg
or
mov
ret
cmp
jg
and
mov
jnp
mov
xor
insl
adc
fsubrs
sbbb
aad
arpl
movsb
negb
int3
push
sbb
cmp
push
mov
or
bound
sbb
push
cltd
cmp
movsl
push
test
aaa
push
or
pop
icebp
add
int3
cwtl
xchg
js
push
pop
popf
stc
adc
dec
push
mov
push
or
inc
add
pop
inc
shll
mov
fcmove
fdiv
daa
mov
call
push
sbb
nop
lret
pushf
add
outsb
pop
notl
push
hlt
cmc
xchg
jp
inc
and
mov
adc
or
das
int3
fsubrs
and
loop
xchg
loopne
mov
push
mov
adc
bound
inc
xchg
lock
xchg
push
cmp
insb
mov
lods
leave
mov
push
mov
mov
push
add
js
adc
imul
xor
mov
hlt
xchg
fst
int3
xchg
sbb
jp
int3
sub
and
dec
clc
in
xchg
add
lcall
xor
imul
mov
adc
dec
mov
mov
je
jge
mov
ljmp
adc
repnz
and
test
dec
lods
cli
push
sub
adc
adc
pop
and
in
stc
mov
xchg
cmp
cltd
or
push
xchg
ds
push
clc
mov
lock
mov
mov
rcl
xorl
cld
lods
stos
push
fisttpll
scas
inc
fiaddl
push
out
pop
jge
lea
cmp
add
mov
push
sub
sbb
jge
mov
jecxz
jmp
pop
loope
adc
mov
mov
pushf
std
int3
loopne
ds
dec
fimuls
pop
mov
ret
cli
mov
or
negb
push
cmp
sbb
movsb
repz
jo
fucomip
push
mov
mov
xor
add
xchg
cmp
les
xlat
loope
pushf
sub
arpl
mov
xor
mov
inc
data16
ljmp
inc
add
nop
jle
push
cmp
and
inc
mov
lock
xlat
repz
mov
cmp
mov
cmc
mov
xchg
scas
lock
sbb
jbe
pushf
lods
int
sahf
lock
movsl
cmp
fwait
adc
insl
inc
mov
shlb
inc
loop
push
cli
pop
fs
fcoml
xor
mov
pop
jo
sahf
test
jle
or
xchg
ja
sbb
fwait
adc
mov
iret
dec
pushl
and
or
shlb
mov
out
bound
mov
sub
inc
mov
pushw
adc
aas
xor
inc
jmp
rolb
insl
test
push
push
into
stos
pop
sbb
fisttpl
scas
cmpsb
loope
dec
pushf
mov
cmc
xchg
xchg
pop
dec
inc
in
fldcw
add
push
aad
jnp
inc
dec
sbbb
dec
int3
addr16
fmulp
mov
mov
imul
mov
movsb
insb
mov
nop
clc
and
push
push
mov
xor
lcall
push
mov
out
jbe
push
das
dec
mov
nop
sahf
repz
aad
dec
icebp
loopne
insb
adc
dec
inc
mov
mov
fimull
sub
mov
fnstsw
add
fstps
mov
popf
and
adc
adc
sti
pop
movsb
not
jnp
push
daa
inc
mov
mov
call
outsl
into
imul
out
notb
xlat
jno
and
clc
dec
shrl
int
int3
sub
pusha
fisttps
mov
dec
or
mov
mov
xchg
mov
add
popf
mov
ja
push
mov
inc
dec
shlb
imull
notb
cwtl
mov
mov
ljmp
test
xor
mov
cld
fldl
shlb
fistps
xchg
or
fcom
mov
enter
mov
arpl
int3
and
gs
dec
add
push
mov
hlt
mov
incl
xchg
ror
cld
xchg
lahf
inc
sbb
mov
sbb
sbb
mov
cmpsl
cmpb
jne
xor
pop
push
addr16
lea
inc
es
mov
xchg
mov
popa
icebp
inc
fsubrs
cltd
cs
and
ljmp
cld
xor
pop
mov
jno
imul
add
xchg
push
or
jle
adc
scas
mov
inc
pop
leave
jo
mov
and
aad
ja
imul
rcr
fnsave
xor
arpl
in
mov
mov
pop
dec
pop
jnp
ret
outsb
push
lock
pop
js
mov
fistl
orl
add
lods
push
idivl
jo
subl
aaa
repnz
mov
mov
mov
data16
cwtl
es
push
imul
jbe
das
mov
sbb
adc
add
fwait
mov
jp
out
mov
pop
or
and
jp
sbb
rcll
jns
int
mov
mov
mov
repz
jbe
mov
out
push
int
iret
jbe
fisubl
xlat
in
test
repz
mov
clc
jg
or
sti
add
aas
push
loopne
mov
mov
dec
mov
insl
iret
and
lods
enter
inc
sbbl
clc
fcompl
fcoml
cli
aam
or
sarb
sub
in
push
stos
cmpsl
add
or
lods
std
movsb
scas
xchg
daa
into
notb
xchg
dec
mov
sbb
adc
inc
call
fiadds
les
xor
xchg
dec
loop
adc
jo
push
inc
and
test
inc
sbb
popf
stos
lock
mov
repz
pop
mov
mov
data16
inc
add
out
js
xor
push
cwtl
pop
add
pop
cmp
xor
add
mov
loop
jle
int
outsl
cmpsl
inc
push
or
pop
mov
mov
cli
shr
sahf
push
adc
add
into
test
and
dec
js
das
pop
loopne
fmulp
sahf
pop
std
aad
out
dec
pop
dec
jge
mov
daa
cmc
lods
cmp
jne
imul
stc
pusha
and
cmpsb
cwtl
jmp
in
cwtl
pushf
or
lock
mov
mov
sbb
xchg
adc
mov
xor
xchg
mov
adc
sub
mov
jp
jne
pop
gs
in
push
stc
push
subb
mov
testl
mov
push
mov
mov
call
adc
les
mov
insb
hlt
sarb
subb
jae
test
iret
das
out
aad
inc
adc
lock
xor
adc
andl
sbb
sub
in
cmpsl
dec
les
adc
add
cmp
xchg
sub
rcrb
clc
mov
shrl
cs
pop
cmc
rcrb
movsl
test
cmpsb
out
add
dec
mov
mov
adc
scas
xor
roll
add
mov
xchg
push
mov
cld
pop
or
pop
lcall
repz
sbb
in
bound
mov
out
dec
fidivrl
test
jg
add
mov
pop
clc
pop
sbb
pop
adc
xchg
add
aam
cs
mov
xor
popf
push
mov
cmp
xchg
inc
fmulp
and
fidivs
sub
inc
out
test
popf
mov
lahf
jne
adcb
sub
adc
dec
jb
scas
jle
dec
int
loopne
test
cmp
xchg
and
pop
push
mov
movsb
gs
sahf
sbb
sbb
push
pop
push
fisubrs
or
adc
dec
lods
cmpl
adc
and
repz
pop
dec
sti
jbe
ds
jns
sti
test
jmp
xorl
incl
jmp
jo
imul
sbb
mov
xor
cmp
aam
cmp
lret
inc
mov
xor
and
sub
push
xchg
add
iret
repnz
jg
scas
pop
mov
mov
call
mov
shr
test
push
jno
xchg
cli
sub
setp
fsubrl
jo
push
pop
and
fsubrs
push
pop
mov
imul
cltd
or
movsl
pop
inc
gs
cmc
sbb
mov
cli
sub
xor
push
xchg
imul
flds
out
inc
sahf
leave
lahf
or
adc
iret
push
mov
jg
ror
mov
lds
sarb
jno
test
gs
jns
xchg
in
and
mov
pop
cmc
aad
inc
aas
ds
sbbb
mov
in
or
add
or
pop
cld
push
lret
mov
jae
xchg
in
mov
mov
insl
mov
mov
stos
or
stc
fsubs
insl
mov
sbbb
dec
cmpsb
xor
loopne
movl
lea
mov
in
inc
xchg
jecxz
fnstenv
int
mov
popa
mov
ds
inc
push
push
mov
mov
mov
mov
repnz
cmc
jecxz
std
nop
push
call
in
mov
push
push
mov
push
pusha
ljmp
push
cmp
lcall
outsl
movsb
sbbl
lods
sub
xchg
cmp
mov
push
add
jns
loop
nop
or
stc
les
sbb
inc
in
xchg
sbb
sbb
jp
and
push
mov
xchg
or
xchg
jnp
movsb
mov
add
pop
cmp
rorl
push
pop
xor
jle
push
push
pop
push
in
jg
and
cmp
sub
loop
mov
mov
int3
lret
sub
jp
jmp
adc
loop
fucomip
aas
add
sbb
adcb
and
incl
ja
adc
pushf
sbb
out
adc
fidivrs
jp
pop
lods
mov
sbb
xchg
scas
xlat
insl
in
or
inc
and
push
jne
push
out
popa
hlt
cmp
add
mov
je
dec
pop
lock
jmp
andl
stos
and
jno
mov
jb
out
or
ss
push
mov
sbb
sbb
adc
popf
lahf
push
jmp
and
sarb
aam
xchg
and
outsb
jae
scas
in
dec
jl
push
jno
inc
sahf
bound
xorb
jg
cmp
gs
repz
inc
into
sbb
shlb
ficomps
xor
push
jo
loope
or
adc
lahf
mov
dec
call
sahf
xor
xor
pop
push
ljmp
jno
jecxz
or
ds
ret
fiaddl
sub
sub
and
xorl
movb
cmp
xor
mov
dec
test
cmp
sbb
and
mov
ret
mov
push
add
inc
jl
divl
test
inc
pop
scas
cld
jne
fprem1
adc
xchg
add
repz
add
and
inc
jmp
add
adc
cmp
stc
mov
in
cmp
insl
dec
cs
test
ja
fisubs
mov
fnstsw
or
ja
pop
test
jae
add
pop
les
gs
add
adc
outsl
daa
imul
stos
repnz
mov
or
mov
xchg
xchg
mov
xor
mov
mov
cmp
xor
addr16
jle
cli
lods
andl
fwait
shrb
jno
ljmp
insb
dec
das
aam
fmull
iret
loopne
lret
push
mov
mov
or
xchg
mov
pop
xchg
dec
out
imul
inc
int3
mov
fiadds
jbe
jl
daa
push
pop
ljmp
mov
sub
pop
adc
scas
int3
jns
xchg
and
and
sbb
and
stc
fdivrp
and
lahf
push
pop
jecxz
aam
xchg
loopne
rcrl
xabort
inc
scas
out
inc
mov
js
in
and
leave
imul
lock
inc
aad
outsb
lcall
sti
scas
sbb
sti
adc
inc
mov
mov
lock
dec
sub
mov
subl
ja
int
loopne
sar
or
shrl
mov
push
fcomps
dec
push
push
xor
xchg
inc
pusha
add
or
add
test
out
xor
adcb
je
mov
push
sbb
push
add
xchg
loop
shl
add
incl
add
jge
loopne
mov
aad
jge
jp
pop
scas
pop
jnp
sub
fsubrs
hlt
xchg
cmpsb
les
mov
xor
adc
and
jns
bound
cld
inc
loop
jo
clc
pop
adc
lods
push
jne
imul
addr16
loop
inc
cltd
and
xchg
out
lea
inc
insl
jge
sbb
and
push
divl
out
add
popl
mov
addl
xlat
fmulp
mov
cmpsb
push
inc
sbb
push
mov
jne
dec
scas
dec
rolb
in
xchg
cltd
fs
mov
mov
icebp
xchg
scas
lea
lods
in
add
sbb
prefetch
or
popa
adc
or
mov
mov
cmp
dec
adc
or
or
scas
cmp
lea
cwtl
sbb
sub
pop
sbb
or
mov
inc
in
xlat
scas
mov
add
pop
int
or
cltd
xchg
pop
scas
mov
pop
stos
inc
dec
push
xchg
inc
fildll
or
in
es
dec
inc
pop
out
cmp
movsb
clc
movsb
sbbb
sbb
insl
js
sbb
repnz
push
sub
xchg
enter
add
cltd
aas
je
push
push
lret
test
xchg
idivb
push
or
pushf
pop
or
xchg
inc
and
mov
pop
inc
enter
mov
inc
or
test
mov
or
push
in
dec
adc
repnz
ja,pn
cmpsl
and
jb
cli
cmp
pop
lods
xchg
lcall
jmp
and
inc
scas
pushf
xchg
loopne
lods
xchg
inc
fwait
cmpsl
inc
and
in
ljmp
xor
cld
fidivs
dec
aaa
lret
inc
loopne
mov
xor
shrl
push
ret
cli
sub
icebp
roll
cmp
shll
dec
aaa
mov
into
test
mov
aad
loope
insl
sbb
movsb
je
inc
lods
or
je
sbb
pop
rcll
stc
mov
pusha
cmpl
cmpl
cmp
adc
shlb
pop
xor
shr
push
xor
call
push
jmp
jnp
icebp
mov
jle
pop
inc
data16
outsl
fsubs
orl
out
jmp
fs
jge
jbe
mov
sbb
jg
mov
adc
mov
xchg
and
or
and
sub
fldcw
mov
sahf
mov
mov
cvtpi2ps
int
cmp
dec
sub
pushf
movsl
cmc
movsb
pop
mov
loopne
dec
adc
subl
pop
lret
shrb
orl
mov
adc
dec
repnz
out
lds
nop
mov
pop
jge
enter
xchg
daa
pop
xchg
fldcw
lret
pop
negl
fwait
adc
lahf
repz
daa
lret
ljmp
jo
scas
sub
cmpsl
pop
push
jle
xchg
cmp
stos
or
fiaddl
jbe
bound
xor
movl
aas
loope
pop
xchg
push
test
lods
mov
jbe
lea
hlt
mov
fs
add
dec
test
movsb
pop
pop
ret
jge
cmc
jge
into
lods
mov
mov
sub
jle
les
push
lea
push
add
int
cmc
jp
ss
xor
cmpsb
inc
arpl
add
sbb
cmpsl
push
in
test
push
cmpsb
stos
jecxz
gs
push
lcall
cmpl
push
fcompl
mov
xor
aaa
mov
mov
test
pop
jno
jbe
add
mov
stos
xchg
push
and
mov
push
mov
shrl
shll
or
fsubrs
fcmovnb
arpl
pop
xchg
sbb
pop
or
scas
cmpsb
push
and
jle
xor
mov
jo
cmp
inc
dec
mov
lods
lahf
or
lods
inc
repnz
dec
jmp
roll
movsl
jns
movsl
mov
jg
rcrl
cld
inc
dec
fistpll
les
pusha
pop
loope
jle
mov
fs
add
repnz
shr
jo
sub
filds
lds
into
cmp
push
out
bound
add
inc
inc
xchg
mov
mov
bound
cwtl
out
sub
gs
lret
insl
cmp
clc
xor
mov
lcall
and
cmp
insb
es
pop
jbe
bound
mov
lcall
cmpsb
lock
repz
or
data16
dec
loope
jb
outsl
lcall
xchg
cmp
ja
nop
dec
lock
addr16
movsb
scas
sbb
jle
repnz
inc
and
ret
pop
inc
and
jae
adc
xor
stos
js
sbb
mov
push
movsl
lea
adc
in
std
in
leave
sub
es
les
call
cmc
mov
jl
dec
cmpsl
stos
xor
ret
iret
mov
fwait
inc
test
cmpsl
mov
adcl
push
fiaddl
mov
adc
aas
cmp
cmp
testl
xchg
lock
mov
mov
mov
outsl
sub
push
insl
dec
lds
std
mov
in
push
adc
adc
inc
sbb
stc
push
sub
lds
cmpsl
ss
daa
inc
cltd
call
mov
jle
mov
aas
outsb
ret
pop
es
jl
data16
ds
lcall
cmpsl
add
xchg
ss
shll
push
or
mov
sub
push
sbb
dec
mov
push
popf
sub
pusha
bound
arpl
sbb
lret
shll
adc
fnstcw
popf
les
mov
push
inc
xchg
push
mov
add
pop
and
call
xchg
adc
sar
movsb
mov
mov
lea
ja
pop
mov
addr16
jae
int
pop
mov
mov
cmp
ds
xchg
xchg
and
jae
loopne
pop
xchg
and
paddusw
mov
lock
scas
repz
test
fs
and
mov
mov
cmp
adc
out
cmp
popa
cmp
subl
dec
aam
dec
ret
lret
and
mov
mov
test
loopne
sub
xlat
push
jecxz
pop
mov
mov
sub
cwtl
daa
mov
fidivrl
daa
stos
sti
mov
loop
inc
testl
inc
xchg
out
fucomi
repnz
mov
in
sub
sub
cli
pop
fsubrs
push
jb
cmp
push
repnz
sub
aas
mov
shrb
nop
push
lds
sub
push
xorb
xchg
dec
divl
sub
pop
mov
data16
cs
sub
push
mov
fs
fs
mov
test
sub
mov
dec
lret
xchg
or
mov
popf
push
into
in
add
movsl
enter
cmp
jge
clc
mov
test
adc
rclb
xor
cld
push
cltd
das
mov
scas
mov
push
push
push
push
add
cmp
rorl
push
in
cmp
pop
je
adc
nop
xchg
jb
rcr
mov
stos
inc
adc
add
adc
packsswb
aas
out
push
cmova
adcl
dec
or
cmp
mov
lds
inc
xor
push
jmp
xchg
mov
mov
out
stos
ret
push
movsb
clc
in
dec
cld
and
and
sahf
cmpsb
hlt
dec
jg
repz
adc
pop
insl
xchg
jl
bnd
sbb
mov
fidivl
inc
jl
inc
adc
sbb
out
add
or
cmpsl
inc
mov
ljmp
clc
inc
scas
xlat
jne
inc
mov
pop
jge
dec
scas
and
inc
fwait
sti
in
aaa
jecxz
jl
adc
mov
out
sub
xor
test
inc
aaa
mov
adc
push
xor
pop
jbe
pop
out
scas
pop
neg
and
lods
xchg
push
jge
outsb
mov
mov
inc
iret
leave
mov
mov
sbbl
into
in
in
dec
aad
fcoms
fwait
mov
dec
fsubs
xchg
mov
cmp
jg
das
stos
faddp
xchg
outsl
lcall
pop
xorl
ja
push
in
fiadds
xor
pop
cmp
add
inc
cmp
dec
add
pop
movsl
pushf
adc
push
dec
arpl
aaa
fnstsw
mov
rcl
pop
adc
shrl
push
sub
mov
mov
and
testl
aam
out
das
sbbb
mov
xor
mov
pop
mov
mov
lods
adc
add
into
cltd
ret
mov
daa
xchg
sub
lea
push
jo
cltd
xchg
push
jmp
mov
cmpsb
jecxz
lods
movsl
add
xor
call
mov
jae
add
stos
sub
cmpsb
leave
and
out
push
cld
vpacksswb
mov
sbbl
jmp
cmp
lods
cmp
lods
mov
ror
pop
add
repnz
mov
popf
push
and
push
int3
pop
xor
cmpsb
sbb
fisttpl
add
mov
cwtl
sub
shll
mov
sbb
sbb
ret
mov
out
fdiv
and
aaa
push
ss
adc
test
inc
adc
aaa
into
test
cmp
sbb
push
mov
xchg
push
imul
inc
pop
jmp
inc
mov
je
notb
dec
and
jge
shll
and
fsts
jge
mov
bound
stos
mov
pop
scas
mov
mov
mov
inc
shrb
sbb
and
xlat
pop
stos
cmp
pop
inc
in
sbb
movb
arpl
and
mov
xchg
setno
rclb
lahf
push
push
arpl
sub
outsl
adcl
in
adc
or
das
add
mov
lods
inc
cmp
int3
pop
mov
mov
push
xchg
push
mov
dec
stc
mov
in
outsb
js
nop
inc
mov
cmp
mov
inc
repnz
sub
inc
fldenv
int
mov
xchg
pop
shrl
ja
das
imul
xchg
sub
andb
xor
lahf
stos
xor
jo
je
add
push
xor
mov
das
subb
aas
fsubl
inc
call
loop
out
ja
out
pusha
dec
dec
jp
xchg
es
jns
mov
xchg
adc
mov
push
add
adc
mov
dec
mov
shlb
push
jb
mov
in
hlt
icebp
sub
push
repnz
cmpsb
lds
pop
mov
xchg
fstl
imul
je
test
imul
idivl
dec
mov
dec
pop
fs
dec
pop
cli
xor
dec
pop
call
in
mov
inc
pusha
rcrb
mov
adcb
sbb
js
movlps
out
popa
xor
fdivl
lods
pop
loop
push
nop
mov
stos
ss
cwtl
pop
ja
dec
clc
xchg
addb
nop
mov
mov
inc
imul
rcrb
loope
out
sbbb
jns
lahf
cmpsl
dec
adc
sbb
and
cmc
mov
cmp
andl
mov
sbb
jno
sbb
scas
sarl
xchg
push
faddl
mov
and
push
pop
out
and
test
jmp
sarb
push
into
sbb
cmpsl
pop
inc
into
in
ret
push
movsl
and
daa
jmp
js
and
push
push
cmpsl
or
dec
out
and
cmp
in
and
jl
adc
pop
arpl
push
jne
or
ret
test
push
popa
orb
jp
mov
movl
pop
xor
adc
in
inc
out
dec
in
lock
pop
fisttpll
and
or
mov
sub
rcll
push
mov
js
daa
das
sahf
push
mov
lcall
out
pop
subb
or
imul
stos
xchg
loopne
dec
repz
mov
test
jae
insl
ret
xor
cmpsl
dec
pusha
mov
rorl
adc
and
and
push
outsb
sub
mov
pop
cmp
call
dec
mov
xchg
stos
and
mov
leave
or
add
ffreep
inc
xchg
mov
dec
sbb
cld
xchg
mov
mov
mov
dec
inc
lods
jmp
mov
popf
sub
mov
jmp
mov
and
push
mov
lcall
in
dec
shlb
cmp
pushf
ljmp
loop
sbb
mov
sub
aas
rorl
scas
adc
mov
push
decb
test
mov
sbb
loopne
cmp
or
cmp
pop
nop
sbb
xchg
pop
mov
sub
dec
test
sub
cmp
arpl
popf
int
dec
pop
and
cltd
sub
mov
push
mov
xchg
push
inc
inc
fcoms
cmpsb
mov
pop
jge
rcl
fwait
mov
mov
frstor
repz
out
and
and
lcall
cvtps2pd
imul
or
mov
mov
test
or
inc
push
jge
imulb
loope
and
fsubl
fimuls
adc
inc
in
popa
sbb
push
inc
or
bt
adc
inc
mov
shrb
mov
test
push
inc
mov
lea
gs
xchg
dec
incb
inc
adc
outsb
cmp
jne
push
inc
cwtl
stc
xchg
hlt
movsb
stos
clc
and
int
jno
dec
ret
push
in
and
cli
addb
adcl
mov
outsb
shr
xor
daa
mov
lea
inc
or
loop
mov
icebp
sub
cmp
sbb
push
mov
pop
jno
jl
mov
adc
fcmovnu
mov
push
dec
jp
nop
xor
add
xchg
sti
mov
inc
lds
leave
jecxz
push
cwtl
fwait
mov
lahf
lock
das
cmp
mov
mov
xchg
jmp
add
das
mov
or
insl
xor
aad
test
push
jno
add
lret
mov
mov
inc
fst
lods
aaa
pop
xorl
ret
out
adc
adc
dec
cltd
adc
jbe
clc
push
in
pushl
leave
std
xchg
sti
pop
pop
cmpsb
mov
fnstcw
pop
hlt
leave
pop
lret
std
es
enter
fsubl
jno
and
pusha
xchg
arpl
jp
mov
fwait
cmp
movsb
pop
mov
js
jle
stc
push
call
add
imulb
and
outsl
daa
xchg
data16
and
pusha
and
push
mov
out
adc
push
scas
mov
xchg
adc
int
pop
cwtl
and
sti
push
jae
stos
push
insl
and
fsubl
or
out
lret
push
xlat
mov
lds
rclb
scas
add
dec
shlb
jb
jg
jmp
in
push
push
jnp
sbb
nop
into
sub
add
sahf
xor
inc
cmp
std
sbb
inc
leave
mov
fdivr
setno
cmp
hlt
adc
in
cwtl
test
xor
add
fsubrs
bnd
movsb
mov
shrb
arpl
pop
addr16
push
testb
sub
sbb
ds
movsb
daa
movb
adc
clc
enter
mov
in
lods
and
test
sbb
addr16
add
or
mov
shrl
sub
std
sub
in
lods
fwait
cmc
mov
sub
dec
daa
outsl
in
pop
scas
adc
jbe
in
int3
mov
mov
ja
movsl
sub
push
push
mov
ret
out
sbb
dec
pop
dec
xor
xchg
lock
inc
mov
add
xchg
andl
adc
out
add
push
mov
jno
ret
imul
pushf
inc
cmpl
scas
fisubl
push
jge
push
xor
mov
pop
pop
test
jns
sub
lahf
addb
hlt
movsb
and
pop
lods
arpl
arpl
mov
rcrb
pop
pop
pop
lahf
inc
jne
loopne
call
movsb
push
sub
xor
jo
mov
xlat
bnd
push
insb
cmp
insb
fbld
int3
xchg
out
mov
leave
das
notl
sub
adc
repz
jo
test
push
xlat
lcall
out
xchg
xlat
sub
lds
fs
inc
mov
out
xchg
push
iret
mov
push
or
test
fstl
mov
jmp
push
jne
adc
stc
push
inc
mov
pushf
sub
rcl
sbb
clc
jnp
test
jno
stc
jl
aad
pushf
adcb
test
jp
rcrl
test
add
cmp
sub
sbb
rcrl
data16
jb
jmp
mov
popf
mov
test
sti
cltd
push
leave
test
lds
les
mov
enter
add
sti
add
stos
movsl
fisttps
mov
pop
arpl
rcl
adc
es
xor
dec
sbbl
xchg
lahf
dec
out
push
or
fsubrl
cld
or
subl
sub
sbb
dec
icebp
push
mov
or
in
mov
scas
ret
xchg
cs
fsubrs
ret
je
or
and
xchg
sub
push
mov
dec
sbb
popa
stos
outsl
shrl
sbb
cmp
add
mov
push
cld
mov
cmpsl
mov
jnp
int3
insb
mov
das
insl
adc
jmp
or
test
ss
imul
mov
jp
roll
popf
sub
push
xor
fdivrl
jmp
ret
mov
test
adc
in
inc
mov
push
rcrl
insl
stc
dec
decl
xor
mov
mov
mov
or
pop
jmp
and
xchg
jbe
xlat
out
cwtl
and
fstps
cmpsl
pop
jl
popf
lret
inc
lret
sbb
adc
adc
adc
xchg
sub
test
push
adc
hlt
fldcw
stc
and
dec
mov
gs
out
sbb
std
jns
push
pcmpeqb
popa
inc
lret
sub
cmp
loope
out
int3
out
popf
shll
pop
movsb
rcrb
and
aam
mov
or
pop
adc
xlat
push
mov
mov
test
cmpsb
mov
lret
loope
jnp
imul
pushf
jbe
push
mov
cmp
mov
imul
icebp
or
jp
xor
pop
cmp
xor
jg
mov
pop
mov
adc
in
cmpsl
movsb
mov
adc
je
fnstenv
lods
roll
das
adcl
flds
gs
aam
pop
repz
pop
jbe
and
sbb
daa
cwtl
clc
mov
clc
mov
dec
or
push
sbb
jb
mov
jb
inc
xchg
sbb
stos
adcl
jbe
ret
xor
sbb
notb
cmpsl
inc
ret
cmp
shlb
push
out
lahf
jns
mov
pop
mov
cmp
pop
repnz
push
into
int
pop
xlat
bound
jae
jns
testl
popl
mov
mov
and
out
sbb
mov
rcrb
loop
and
push
mov
pushl
inc
xchg
sub
in
mov
dec
xchg
mov
and
out
or
cmp
mov
rorb
aaa
mov
sti
adc
mov
lods
push
inc
xchg
inc
imul
mov
xchg
stc
or
pusha
xlat
sub
lods
jge
int
les
test
fldenv
les
int
adc
cmp
add
pushf
and
outsb
push
std
mov
addr16
pop
fidivrs
push
std
test
or
xchg
and
cmc
mov
mov
insb
stc
sbb
mov
lret
pop
icebp
std
daa
mov
push
adc
jge
std
inc
loop
xor
js
lock
dec
jecxz
dec
push
aam
outsb
jle
shll
push
in
hlt
and
out
pop
inc
pop
cmp
leave
loop
cmp
inc
outsb
clc
xor
sub
insl
cli
call
insb
ret
fdivr
cwtl
pop
push
mov
xchg
in
sti
cmc
inc
ftst
es
push
rcr
hlt
or
sbb
rorl
jge
in
pop
rclb
pop
insl
sub
sub
push
mov
ds
dec
pushf
cld
xchg
xor
push
xchg
jae
mov
jb
xchg
int
sub
ljmp
mull
inc
adc
xchg
jle
pop
sub
push
jno
hlt
daa
xchg
mov
mov
inc
push
loopne
push
lret
dec
sbb
pusha
push
push
xor
sbb
push
fwait
xchg
fsubrp
and
xor
out
jg
ss
in
mov
xor
mov
mov
mov
pop
sub
and
add
jno
mov
cmpsl
cmp
push
popf
pop
icebp
and
add
int
insl
mov
sub
pop
cmp
add
mov
mov
mov
ds
xor
fsubp
jmp
cwtl
out
iret
push
std
push
sub
xchg
adc
aaa
testb
test
cmc
mov
enter
mov
inc
and
lods
cmpsb
out
xlat
xchg
pop
dec
cmp
mov
pop
movsb
mov
sbb
jp
jnp
cld
lret
add
jge
test
fwait
enter
movsl
pop
jmp
or
aaa
mov
inc
and
xchg
mov
or
iret
popf
jae
test
shrb
adc
inc
jns
add
into
aam
push
push
lock
fdivr
add
pop
mov
scas
add
sub
dec
push
xor
jo
mov
jl
jbe
ret
cli
push
xchg
loop
test
cmpsl
outsl
xchg
shrb
addl
movl
pusha
and
xchg
add
imul
or
imul
push
mov
add
stos
test
std
inc
push
inc
mov
mov
inc
repz
out
jb
cmp
lods
mov
sbb
push
addr16
mov
hlt
movsl
cmp
mov
cmp
addr16
xchg
daa
mov
xor
mov
clc
cmpsl
outsb
out
clc
jns
pop
icebp
adc
add
cmc
mov
scas
pop
sarl
or
jbe
jne
fs
mov
les
xchg
jae
xor
pop
fwait
jno
jbe
mov
and
test
rclb
fldl
add
fdiv
int
mov
dec
sub
mov
and
bound
bound
or
mov
sbb
lods
clc
mov
push
lahf
daa
cld
ja
fisubl
lret
sub
lahf
lods
popf
inc
rcrb
cmp
fldl
pop
shll
lret
push
shr
enter
and
cmp
repnz
jp
fisubrs
push
xor
enter
pusha
inc
aam
add
xchg
sub
sbb
inc
jno
inc
ret
repz
test
sbb
mov
in
inc
push
out
pop
push
testb
add
fisubs
mov
sub
loopne
jle
insb
mov
cmpsb
out
ret
push
ljmp
xor
mov
mov
flds
and
rol
arpl
add
ret
aam
mov
cmp
ret
mov
jo
cmp
mov
mov
or
sub
fwait
push
loopne
inc
loopne
xchg
mov
pop
sub
and
into
fsubrl
daa
sub
xor
adc
aas
jl
pop
pushf
and
dec
push
scas
jp,pt
js
clc
pop
jnp
fimull
inc
xchg
std
adc
loopne
lock
cs
lret
fcomps
jb
push
add
push
mov
ret
add
inc
sub
into
orl
lea
into
in
sub
aam
lret
imul
and
pop
mov
mov
fwait
ret
ja
arpl
or
push
mov
dec
fsubs
mov
pop
mov
popa
in
ja
mov
mov
popf
insl
inc
stc
xor
fldcw
push
jmp
pop
add
pop
add
leave
inc
push
ljmp
jb
int3
cli
stc
test
gs
bound
and
or
and
jne
adc
xor
dec
mov
fnstcw
lahf
or
fprem
xchg
popa
arpl
test
je
je
cli
aad
push
repz
movsl
adc
jbe
inc
cmp
jmp
jns
subl
popa
repz
or
in
nop
aam
mov
fs
jg
pushl
adc
inc
mov
sbb
push
pushf
cwtl
mov
loopne
daa
push
lock
je
mov
into
out
stos
idivl
adc
les
iret
popf
movsb
jge
jno
dec
clc
push
add
and
das
gs
sub
pop
fcompl
scas
arpl
jl
aas
adc
outsl
fidivs
push
fwait
jo
add
dec
push
push
pop
in
push
stc
shrl
je
je
fistpll
push
lods
push
decb
loopne
adc
addr16
leave
jbe
cwtl
sti
aad
dec
fwait
xchg
pop
hlt
pop
pop
aad
sbb
jl
call
xor
stos
adc
adc
push
lds
mov
cld
push
cmpl
xchg
outsb
fsubrs
xchg
ffree
cmc
dec
cmp
idivb
inc
jge
mov
mov
int
pop
mov
fcoms
push
push
push
into
fdivl
popf
jbe
adcl
xchg
or
or
sub
movl
out
inc
add
pop
cmp
cmpsl
jl
sbb
xlat
cmp
pop
mov
dec
jne
jo
sub
jb
dec
mov
ja
xor
push
mov
pop
mov
inc
add
mov
popf
lcall
cmp
jmp
push
sbb
dec
xlat
scas
xchg
cmp
loope
push
scas
int
and
lret
push
call
add
jl
fisubrs
push
mov
pop
je
in
sub
ja
leave
and
push
xor
sbb
add
sbb
xlat
out
push
dec
ljmp
rorb
inc
pop
lret
pop
cmp
pop
mov
push
jno
scas
in
das
push
stc
adc
fidivs
daa
loop
dec
enter
xchg
push
shrl
jl
or
fisubs
cmp
add
iret
out
in
mov
in
outsb
repz
nop
push
aad
out
test
jecxz
dec
outsb
or
and
pop
outsb
out
std
pop
xor
rcl
insl
insb
add
mov
mov
pop
repnz
pcmpeqd
call
mov
jne
dec
cmpsl
bswap
aam
or
loopne
aaa
leave
lock
insb
test
add
imul
inc
mov
sti
or
pusha
out
test
and
cltd
inc
cld
push
cwtl
mov
dec
in
mov
dec
stc
sub
mov
shl
call
mov
xlat
gs
rcl
fisubrl
inc
aam
mov
lods
pushf
inc
popf
mov
adc
aas
loopne
std
push
xor
test
fwait
dec
mov
outsb
in
push
shlb
adc
or
cmp
sub
testl
adc
test
jae
pop
xor
push
inc
gs
and
mov
fwait
jae
ljmp
mov
imul
mov
ret
mov
subb
icebp
mov
add
sbb
push
xchg
jl
pop
jle
sub
das
aam
ja
inc
loope
pop
mov
jo
lret
arpl
cmc
sub
or
movsl
jg
pop
call
int3
push
fucomi
xchg
repz
sub
lods
xor
popa
pop
jle
xchg
dec
repnz
dec
imull
push
xorb
jns
es
loop
int3
dec
dec
mov
mov
es
test
sbbl
cmpl
pop
jge
adc
imul
lretw
ljmp
pop
mov
dec
xchg
add
stos
out
jp
mov
add
jle
mov
aas
lahf
jmp
rorl
flds
jl
js
mov
inc
ficompl
cmp
adc
inc
xchg
stos
push
bound
adc
cmp
pop
add
inc
mov
push
jbe
sahf
add
jecxz
mov
jne
cmc
dec
lods
inc
push
into
sub
aad
xor
sub
cmp
pop
and
hlt
sbb
bound
xchg
ljmp
adc
mov
inc
in
jge
inc
push
or
push
fistl
xor
adc
push
xor
push
int3
lret
arpl
cmpsl
fsubrl
orl
out
ja
and
fdivrl
xor
enter
sti
call
aad
sbb
fdivr
sub
into
sbb
or
and
and
repnz
inc
ficoms
sbb
ljmp
mov
xchg
adcb
cmpl
insl
das
shll
outsl
add
xor
call
inc
jmp
out
mov
faddl
mov
mov
gs
scas
test
stc
lea
ss
nop
dec
mov
push
rcrb
lret
xlat
mov
cmpsl
and
pop
cmpsb
mov
adc
push
add
push
js
fsubrl
insb
loopne
popa
jg
push
jbe
jns
mov
fwait
test
scas
outsb
add
out
mov
lods
cmpsb
in
adc
int3
xchg
add
xchg
and
mov
mov
xchg
arpl
xchg
into
mov
inc
add
or
repz
push
mov
call
out
adc
jae
cli
decb
xor
call
sbb
adc
mov
aaa
into
outsb
ror
test
sarb
sbb
repnz
xchg
out
pop
int
xor
and
lock
stc
insl
sarl
xchg
sbb
cmp
cmpb
cmp
push
lcall
push
pushf
cli
mov
imul
push
xor
jge
xchg
push
adc
xchg
inc
loope
adc
xlat
cwtl
ss
ljmp
rclb
cmc
xchg
jge
mov
inc
iret
aaa
or
clc
sbb
cs
adc
xlat
out
ja
push
imul
add
sbb
shl
incl
xchg
addr16
sbb
incb
push
fistpl
sbb
ds
xchg
lods
sbb
jns
repnz
sub
pop
mov
scas
xor
rcrl
inc
xchg
addl
xor
cmc
adc
push
xor
dec
sbb
or
incb
movsb
add
outsb
push
mov
test
sub
icebp
sub
mov
jg
and
out
lret
push
push
shll
fwait
and
aas
stos
mov
loop
mov
hlt
test
shrb
adc
jae
leave
mov
or
cmp
push
out
mov
mov
clc
js
test
into
fs
mov
arpl
lahf
icebp
and
inc
lods
iret
out
cmp
xlat
shll
mov
js
insl
sbb
in
std
adcb
fmull
in
jge
adc
outsl
mov
negb
push
mov
aas
or
mov
dec
mov
sti
ret
int
stos
stc
jno
sub
cmpsb
fcomp
jmp
mov
scas
or
dec
testl
fsts
jle
jnp
test
xchg
test
stos
int3
insb
jle
jbe
or
jg
jns
rcrl
scas
mov
sub
push
ret
js
leave
pop
mov
aam
pop
loopne
or
inc
repz
fidivrl
dec
outsb
repz
jo
subl
int
mov
into
mov
add
insl
outsl
xchg
sub
dec
scas
stc
xor
or
add
mov
aaa
iret
push
add
movsb
adc
pop
insl
mov
mov
mov
xchg
xchg
dec
js
outsl
ja
outsl
sub
popa
mov
dec
mov
xor
lods
cmpsb
xlat
scas
push
into
test
bound
jae
jbe
cmp
jne
adc
jge
adc
cmpsb
jp
jne
mov
inc
out
cmp
mov
add
test
jge
mov
push
in
out
ljmp
lods
inc
xor
mov
push
in
mul
lds
and
jle
mul
mov
xchg
adc
dec
pop
insb
mull
pop
test
dec
add
ja
inc
repz
out
jge
out
test
adc
negl
sub
jo
aad
outsl
inc
xchg
dec
ret
in
add
daa
push
sub
lods
dec
pop
rcrl
xchg
aas
loop
pop
mov
mov
fdivl
roll
jbe
jo
lahf
push
arpl
inc
mov
call
push
mov
clc
imul
out
data16
sub
adc
lds
mov
cmpsb
jg
in
clc
and
cmp
aas
cld
mov
xor
inc
movsl
loopne,pt
les
les
dec
pop
sub
dec
outsb
xor
mov
shrb
xor
bound
test
lds
test
mov
aas
jae
in
cmp
jbe
mov
sub
xor
outsl
jb
inc
cltd
xor
decl
test
cmp
inc
jb
mov
push
mov
fidivl
dec
mov
and
ret
adc
bnd
dec
stos
add
mov
mov
aad
mov
fwait
pop
pop
xor
pop
mov
pop
vrcpps
cmp
dec
mov
movsl
xchg
iret
js
shl
outsb
and
xchg
pop
decl
pop
mov
enter
jnp
pop
inc
cmpsb
rep
pop
pop
ss
mulb
ret
cmp
or
les
cltd
mov
fwait
mov
lahf
das
iret
and
leave
cmp
inc
cwtl
aad
xchg
stc
fsubl
in
imul
add
mov
fucomp
icebp
hlt
sbb
sbb
jg
xchg
sarb
loop
stos
dec
push
pop
inc
xor
pop
imul
ss
and
mov
mov
cmpsl
ds
push
stc
call
int
jg
daa
cltd
test
out
add
cmc
sarl
repnz
leave
sub
and
inc
repz
std
bndldx
adcl
push
sbb
add
dec
pop
or
shrl
sbb
into
sbb
lahf
push
fs
test
cltd
xor
cmpb
mov
push
sub
add
pop
or
pop
loope
lds
pop
or
xor
xor
movsb
push
sub
or
out
in
fistpll
add
sarb
es
xchg
dec
lret
shrl
sub
pop
lahf
mov
hlt
dec
adc
pop
inc
pushf
and
adc
in
mov
stos
push
in
cmp
sbbl
ds
test
mov
ljmp
sbb
dec
push
popf
or
lcall
and
adc
xchg
test
inc
pop
fistl
sub
xor
lock
movsl
dec
cmc
arpl
and
pop
adcb
mov
iret
jg
in
jno
push
xchg
pusha
daa
xchg
sub
insb
cmp
xor
add
pop
lahf
sahf
imul
mov
mov
inc
nop
xchg
sub
mov
mov
in
mov
jmp
data16
std
cltd
mov
mov
icebp
jge
push
loopne
mov
adc
dec
sub
and
repnz
mov
loopne
lds
sti
ja
lods
idivb
or
sbbb
nop
lea
insb
add
fsubl
and
cmpsl
jecxz
je
inc
out
imul
int
xchg
fwait
clc
sahf
xchg
fwait
add
add
leave
xlat
imul
xor
push
mov
lods
loop
into
dec
shlb
push
dec
sbb
int
push
pop
aam
mov
add
lods
ljmp
cmc
cmpl
stos
cmp
repnz
pop
and
inc
and
gs
jge
sbb
push
jmp
scas
cwtl
mov
icebp
arpl
push
add
push
mov
cs
jp,pn
test
and
mov
push
lret
adcb
sub
test
je
loope
jne
or
xchg
scas
rcll
out
and
and
leave
and
sbb
jle
or
cmp
push
push
jp
in
and
insl
push
push
inc
jmp
daa
hlt
mov
roll
outsb
repnz
int3
or
mov
in
je
fistpl
push
imulb
jp
jno
sahf
mov
icebp
call
cmp
mov
in
in
add
xor
inc
aaa
test
pop
mov
dec
aam
inc
mov
cltd
test
add
or
lea
lock
fnstcw
jbe
ret
mov
rcl
mov
cwtl
outsl
add
pop
lods
push
jno
dec
sub
je
iret
add
pop
sub
leave
cs
stos
aas
adc
jb
cltd
mov
add
or
scas
mov
addr16
dec
or
imul
insb
lret
push
dec
mov
scas
loope
xchg
sub
jne
fcoml
fstl
adc
les
pop
imul
setle
cmp
subl
inc
inc
xchg
lods
jp
and
mov
aad
enter
pop
sub
push
lcall
out
daa
sbb
sub
jne
push
subl
and
data16
jnp
jns
push
das
mov
xchg
and
mov
scas
cltd
dec
add
ljmp
jle
pop
rcrl
pop
das
insb
fistps
dec
insl
fnsave
gs
lea
shll
mov
ret
sbb
mov
test
mov
cmp
fstl
inc
xchg
lahf
mov
mov
out
mov
rcll
repz
in
cmpl
inc
mov
push
ret
outsb
and
fisttps
push
pop
mov
xchg
add
les
inc
adcb
add
data16
fs
bound
and
sti
popf
cmp
add
cld
cmp
out
jb
stos
mov
into
ret
subl
pop
fsub
and
jnp
lret
movsl
test
jo
nop
mov
lds
bound
aad
insb
fistps
lret
mov
cmp
lcall
cwtl
out
cmp
gs
mov
mov
ljmp
and
push
data16
shr
push
mov
jno
xor
mov
push
movsb
inc
fst
out
pop
dec
sahf
xor
jmp
inc
clc
xchg
lret
stos
in
call
fs
aaa
dec
imul
lret
pop
xor
push
outsb
movsb
cmp
pop
xchg
mov
mov
notb
mov
inc
pop
adc
cmp
pop
out
dec
push
loopne
jnp
or
movsb
clc
les
insl
xor
jne
cmp
jmp
inc
arpl
inc
adc
jnp
pop
jb
ret
test
jecxz
cltd
lret
cs
pop
ret
pop
daa
push
xor
lds
popf
mov
cld
cmp
sbb
push
ret
outsl
and
jmp
push
mov
lahf
mov
aas
xchg
push
test
ret
int
cmpsl
test
add
sti
cmp
bound
cmp
insl
fmuls
cs
mov
in
push
int3
icebp
loop
mov
adc
jmp
scas
nop
test
out
jmp
mov
jns
dec
inc
negl
sti
jbe
jnp
cmp
iret
mov
xchg
mov
dec
mov
out
icebp
aaa
bound
out
les
adc
mov
movsb
and
ljmp
mov
pop
sub
and
pop
out
sub
inc
and
mov
int
pop
test
or
mov
out
pop
and
pusha
or
push
scas
and
push
sahf
mov
xor
int
mov
bound
and
sbb
cmp
out
jns
rolb
outsb
sar
xor
mov
mov
and
and
mov
sbb
dec
add
in
push
cli
pop
xchg
in
push
sbb
lods
xchg
xor
repnz
add
notl
cltd
arpl
scas
outsl
loop
jno
ret
xchg
sbb
inc
dec
negb
repnz
or
rolb
push
insb
jl
inc
sub
mov
cld
adc
adc
ret
xchg
add
pop
sbb
mov
loope
jmp
push
js
or
xrelease
repnz
jl
cmpsl
out
adc
mov
data16
jle
sub
loop
mov
lret
jo
or
lea
sbb
xchg
cmp
sbb
mov
or
sbb
adc
push
popf
leave
mov
push
je
mov
test
dec
jae
andl
repnz
push
cltd
loope
push
mov
sti
mov
cwtl
mov
sbb
lahf
aaa
cmp
mov
cli
mov
pop
out
pop
mov
mov
cld
pop
pop
leave
cli
pushf
fs
shlb
jo
pushf
leave
roll
push
and
push
lods
sbb
jmp
xchg
and
sti
mov
mov
sti
inc
call
mov
data16
pop
psrlq
mov
mov
das
repnz
nop
cmp
dec
mov
jnp
and
mov
shlb
pop
fldl2t
lea
jb
xor
vmread
sbb
in
xor
call
sub
lret
xchg
out
inc
out
std
cmpl
faddl
stos
cmp
lcall
hlt
mov
jmp
mov
add
stos
movsl
jo
adc
push
test
clc
dec
mov
pop
jae
das
pop
cmp
and
mov
ret
cmp
lea
add
and
divl
cmp
cs
sbb
jns
inc
pop
inc
imul
mov
xor
pop
cmp
inc
bound
dec
cmp
lret
loopew
cmpsl
jmp
jl
testl
popa
adcl
mov
lret
loop
adc
sub
outsl
out
rolb
add
aaa
jle
sub
sub
fsub
sub
push
sub
stc
adc
inc
sbb
insl
cmc
lret
pop
or
inc
jno
lock
and
dec
sub
test
cmc
push
adc
inc
in
pushf
sub
mov
add
cli
es
lret
lret
sub
and
mov
insb
cwtl
jnp
dec
mov
iret
adc
test
pop
call
rclb
lods
pop
mov
sti
bound
push
addl
mov
jg
inc
shrw
fucomi
mov
xor
mov
sbb
das
cmp
jno
inc
outsl
mov
fldenv
ds
cmp
mov
pop
call
fucomi
pop
push
xlat
push
jne
xor
or
xlat
xor
and
push
sub
fcompl
mov
imul
fcmove
add
mov
push
repnz
stos
mov
pop
test
pop
mov
xchg
aas
stos
stos
shrb
decl
mov
lret
dec
or
dec
jnp
lea
sub
jmp
stos
xor
mov
mov
push
xchg
and
std
cltd
clc
cmp
icebp
sub
mov
cwtl
in
pop
cltd
sbb
lcall
mov
mov
inc
xlat
aas
push
push
int3
xchg
call
mov
sbb
cs
lret
aas
pop
mov
xchg
push
sbb
xchg
pushl
or
cwtl
dec
or
sbb
push
mov
sahf
lcall
das
xchg
jns
and
xchg
push
cli
xchg
xor
imul
pop
sub
fs
adc
or
jmp
or
pusha
jp
mov
pop
es
sub
enter
shrl
ret
rcr
fmull
ss
push
dec
and
ljmp
arpl
repz
sub
add
call
mov
mov
adc
push
ss
xchg
fldenv
jl
cmpsb
mov
aad
pop
cmp
push
cmp
adc
daa
jp
ds
adc
rcl
cmc
jo
adc
pop
cmp
xchg
leave
mov
mov
add
xor
loopne
add
sbbb
lcall
movsb
andb
out
lock
xchg
adc
xchg
mov
repz
adc
dec
mov
mov
push
js
xchg
mov
cs
or
fwait
int3
mov
pop
xchg
lahf
ss
call
inc
test
mov
lods
pop
adc
mov
dec
movsb
xlat
mov
xchg
sub
gs
jb
cs
test
int3
leave
aad
test
lock
mov
clc
ja
pop
adc
sbb
mov
in
stos
out
add
neg
hlt
faddp
xor
imul
mov
adc
arpl
scas
jnp
dec
push
aam
stos
and
repnz
and
mov
or
mov
add
divl
cmp
lods
pop
arpl
adc
cmpsl
fdivrl
repz
adc
push
adc
and
jae
enter
rcll
das
mov
pop
dec
mov
dec
jmp
xor
xor
es
sbb
dec
adcl
inc
push
insl
sub
bound
bound
jae
xchg
pop
outsl
cwtl
cmp
and
mov
stos
jbe
add
pop
test
rol
push
mov
xchg
movsl
add
mov
ret
add
jns
cvtpi2ps
mov
mov
out
fnsave
daa
nop
sbb
clc
cmpsl
repnz
test
jno
mov
add
leave
and
mov
jae
or
dec
aam
mov
inc
add
inc
notl
xlat
ljmp
cltd
enter
jbe
icebp
cmp
pop
call
xchg
mov
sbb
repnz
sub
test
mov
sbb
dec
out
xchg
in
xor
lcall
pop
lea
nop
lea
pop
sub
add
lods
and
jns
push
cmc
and
mov
mov
dec
aam
lods
pop
loope
loopne
jle
xchg
cmp
out
ret
iret
adc
xchg
stos
stc
ret
out
dec
xor
dec
fadds
inc
pop
xchg
scas
inc
push
xor
ja
fwait
dec
mov
push
xchg
jo
pusha
idivl
test
std
mov
pop
cmc
jns
mov
lds
jbe
jl
mov
les
adc
leave
xchg
cmpsl
xor
je
roll
imul
jl
push
sub
push
mov
fs
arpl
jno
test
mov
pop
jp
jnp
dec
mov
or
and
jb
lods
push
sub
popa
lods
lods
jae
test
mov
push
test
test
jp
rolb
sbb
or
adc
inc
dec
lret
mov
loope
jg
adc
or
add
adc
sbbl
sbb
lret
fiadds
jmp
jns
sbb
xchg
je
decl
mov
mov
aaa
mov
in
xlat
movsb
dec
dec
mov
push
xor
rcrb
sbbl
popf
xchg
lahf
negl
jp
xchg
mov
mov
sbb
out
dec
dec
mov
add
nop
xor
andl
cli
sub
fdivl
or
les
cli
push
push
inc
scas
test
jg
cmp
stos
in
aam
lea
jp
or
outsl
fstpt
cld
cmp
push
movsl
cmp
in
adc
aas
ret
sbb
mov
sub
sbb
sbb
inc
mov
idivl
inc
inc
jnp
les
xor
add
xor
fsubl
adc
in
insb
mov
push
cltd
sub
cmpsl
sbb
mov
jg
iret
adc
add
fsubl
pop
aaa
dec
sbb
scas
test
add
push
or
aad
out
cmpsl
mov
fs
int
push
pop
adc
mov
dec
loop
inc
cmpsl
loop
dec
and
dec
jge
push
out
pop
sahf
scas
out
inc
mov
ljmp
and
and
mov
cmp
cmpsl
incl
dec
mov
inc
or
scas
adc
stos
test
pop
add
xor
xchg
rorl
es
inc
mov
jmp
lock
ja
daa
int3
ficomps
adc
lret
cmpsb
jo
mov
jle
xor
lods
loopw
sbb
sub
xchg
out
pushf
lret
lock
aaa
push
mov
push
fidivs
shll
mov
gs
add
pop
sbb
mov
negb
cmpsb
or
lods
cmc
fs
jno,pn
dec
xor
cmp
add
insl
ja
xchg
add
xchg
inc
and
push
arpl
fcoml
fldt
mov
jge
or
xchg
mov
sahf
ret
repz
xchg
or
popa
add
xchg
in
mov
xchg
pop
ds
add
mov
push
add
pop
pop
sbbb
lcall
sar
out
push
push
pop
cmp
push
popf
push
jmp
popf
cli
push
in
cli
std
and
xor
lahf
lods
nop
lods
inc
sub
sti
cmpsl
add
rcrb
cmp
lods
movsb
outsl
daa
lea
xor
inc
or
xor
sbb
ljmp
enter
adc
es
popa
or
out
sbb
jl
jle
xchg
mov
out
movq
mov
add
ss
movsl
out
gs
push
jbe
xchg
outsb
int
push
xor
ss
fwait
bound
ljmp
hlt
shl
dec
out
iret
leave
dec
orl
mov
sub
sbb
push
mov
cltd
das
dec
shl
adc
push
js
sub
jo
lcall
mov
xchg
pop
or
cs
stc
adc
nopl
packuswb
icebp
inc
fsubl
sbb
sbbb
notl
jge
and
sbb
testb
pop
fisubs
and
jecxz
aas
in
cmp
mov
push
ss
out
popf
xor
and
fsubs
cmp
adcb
xchg
sub
faddl
mov
cmp
mov
adc
mov
pop
cs
into
pop
sub
lock
xchg
int3
sub
stc
scas
divl
mov
adc
mov
dec
sahf
xchg
inc
fs
jmp
cmp
add
add
cmpsb
mov
sub
push
jnp
sbb
in
outsb
push
lret
cmpsl
add
mov
int
jo
cmpb
rclb
lret
jb
and
lret
and
or
into
inc
inc
scas
std
int3
popf
jmp
mov
test
inc
add
sti
jl
call
lcall
push
test
cmpsl
pop
cmpsb
jp
sahf
cmp
mov
fisttpl
shl
mov
mov
incb
int
negl
orb
xchg
cs
enter
jp
xchg
pop
sbb
xor
jecxz
pop
mov
fcmovu
fwait
or
sbb
mov
push
jb
fs
cs
push
add
mov
jb
pop
loopne
push
sbb
dec
bound
out
dec
lds
pop
mov
xor
cmpsb
or
or
inc
dec
mov
iret
in
jp
or
add
mov
mov
inc
and
lods
jmp
push
jb
pop
mov
sti
cmp
sbb
fs
out
fucomip
xor
sti
mov
int
and
insl
sbb
cmp
cld
cmp
cli
mov
xor
and
mov
jp
loope
shrl
inc
aaa
jb
jge
jecxz
or
push
mov
jae
lcall
sahf
clc
push
movsb
call
mov
mov
sub
test
pop
aam
xchg
out
xchg
jns
mov
lcall
shlb
push
rolb
xchg
clc
inc
add
test
pop
in
loopne
sub
cli
inc
inc
or
imul
sbb
pop
mov
lock
pcmpgtd
mov
mov
or
push
mov
mov
and
daa
add
nop
data16
add
push
in
mov
lret
lcall
xchg
or
xlat
nop
mov
xchg
jge
in
sahf
xor
push
data16
jae
rcrl
ds
sbbl
daa
leave
cmc
mov
jl
or
leave
mov
ret
or
cs
fisttps
ss
pop
fdivl
lea
push
sahf
push
lock
jecxz
arpl
ret
sub
push
pop
mov
fisubl
insl
pusha
push
addr16
js
hlt
lcall
lret
dec
cmp
fadd
out
std
or
mov
jl
xchg
loope
jg
out
jmp
scas
imul
imull
ljmp
jecxz
popf
push
push
out
ss
in
push
or
mov
and
xor
cltd
xor
jns
adc
inc
ret
dec
aad
andl
rcrb
inc
push
pop
icebp
arpl
sub
je
stc
or
insb
or
fnsave
fs
ds
xchg
lods
lahf
jb
mov
shl
cltd
nop
dec
dec
mov
mov
setbe
jmp
int
push
outsb
mov
cmp
mov
xchg
cmp
or
mov
dec
xor
adc
test
pop
lods
pop
and
shlb
sbb
add
ret
rcrb
rol
jbe
cmpsb
ret
jbe
stos
sub
xor
sti
imul
rol
cmpsl
cmp
mov
ret
lods
and
pop
jecxz
pop
repnz
pop
jb
add
mov
sub
cwtl
mov
in
int
jbe
daa
hlt
push
stos
sbb
push
xchg
push
jno
test
sbb
in
mov
lock
push
jb
fs
sbb
js
lods
outsb
and
xchg
or
add
rcrl
push
mov
mov
jmp
inc
inc
loope
mov
jp
jne
add
sub
popa
sub
aaa
inc
lds
insb
xchg
insl
and
sbb
shlb
sub
into
js
cmp
mov
mov
inc
call
and
or
test
lds
fidivs
jle
mov
cwtl
inc
lret
push
loopne
mov
sbb
movsb
inc
jb
lahf
popa
orl
call
js
insw
add
stos
mov
add
inc
mov
cltd
push
mov
jmp
pop
in
lcall
jne
out
push
movsl
sub
mov
shll
xor
push
xor
push
and
xor
shll
in
inc
pop
lret
push
insl
in
scas
push
js
aam
xchg
pop
mov
adc
movsl
stos
jmp
stos
lcall
sub
outsb
ss
repz
jns
and
testb
push
add
mov
repz
sbb
push
jno
gs
fists
mov
lahf
fmuls
test
adc
ja
das
mov
loopne
or
testl
mov
add
daa
cmp
clc
xchg
sbb
daa
mov
pop
xchg
add
add
xorl
dec
repnz
daa
aas
xor
test
test
stos
dec
push
cs
ficompl
or
je
push
test
inc
insb
xchg
div
insb
add
enter
loopne
sub
lahf
mov
pop
xchg
jbe
in
xchg
ja
pop
test
rorl
movsb
inc
iret
nop
adc
sub
inc
leave
int
xchg
and
sbb
jno
pop
or
add
test
push
adc
pop
and
or
mov
ds
push
or
push
fs
and
stc
jp
cltd
sbb
punpcklwd
adc
mov
pop
lret
xchg
scas
outsl
sub
mov
das
imul
sbb
mov
imul
pop
das
sahf
call
adc
xchg
mov
sahf
pop
cmp
inc
aaa
push
xchg
xchg
adc
imul
in
loope
add
add
in
jp
inc
and
push
daa
es
push
inc
cmp
jo
test
jmp
aaa
pop
aaa
arpl
addr16
push
mov
inc
fcmovnu
icebp
hlt
xor
pop
mov
test
inc
inc
mov
mov
fs
imul
filds
sub
push
int
xchg
test
push
mov
ret
loope
push
push
xchg
in
lret
leave
rcrl
je
pop
aas
rcrl
mov
sbb
mov
add
adc
into
enter
cld
movsw
fs
add
and
stc
test
sbb
and
push
xchg
mov
repnz
xchg
push
inc
sub
repz
jmp
scas
mov
shrl
mov
push
imul
into
das
insl
jbe
pop
ret
aaa
push
lds
sub
divb
mov
and
jns
pushf
pop
das
mov
repz
arpl
inc
cltd
insl
cld
mov
and
xlat
jge
mov
negb
test
inc
add
push
cmpl
push
sub
in
adc
inc
push
call
fnstsw
ja
std
sti
out
mov
ds
repz
pop
push
push
andl
aam
iret
and
leave
adc
adc
mov
dec
push
inc
out
sbb
xor
hlt
ljmp
loopne
into
xor
pushf
jge
in
pop
insb
xor
pushf
imul
lock
sti
or
and
aas
mov
stos
jae
pop
insl
dec
xchg
inc
stos
clc
cmp
mov
sub
sar
or
adc
lods
xchg
pop
popa
cltd
adcl
xor
call
lea
mov
imul
scas
in
popa
pop
adc
sub
adc
cmc
movsl
mov
xlat
push
jnp
sbb
adc
out
sti
enter
xchg
adc
lcall
sbb
sub
xorb
xor
ficoms
shlb
stc
andl
out
hlt
out
cs
push
fdiv
push
jb
xchg
sbb
jne
popf
mov
int
sbb
adc
cmpsl
jle
lock
rcr
outsb
inc
enter
loope
adc
xchg
out
call
stos
mov
cmc
test
dec
popa
icebp
mov
xlat
mov
lea
fnstenv
insb
mov
pop
popf
fisubrl
add
out
pop
mov
sysret
loop
dec
push
lds
lock
je
std
popf
mov
stos
insl
fstpl
xor
pop
fcmovnb
dec
mov
pop
add
cmpsl
in
test
add
sti
xor
mov
xor
out
lds
pushf
xorl
pop
jns
xlat
and
adc
and
mov
xchg
jae
das
push
fbstp
jbe
sub
gs
mov
push
or
or
decb
pusha
jp
xlat
sub
mov
outsb
cmc
jle
mov
mov
call
add
std
mov
les
add
mov
enter
add
dec
mov
sub
aas
aas
std
sarb
out
add
pop
ret
imul
pop
popf
repnz
push
jno
rol
lds
sbb
cltd
sub
or
dec
pop
out
stos
ret
ret
repz
adc
scas
rcrl
cmp
and
jmp
arpl
push
out
push
add
fnstenv
adc
iret
gs
jb
xchg
mov
aad
mov
rcl
jmp
lret
add
mov
imul
add
sahf
cmp
pop
orb
stc
pop
and
lea
xor
mov
mov
mov
xchg
add
loop
jbe
clc
dec
mov
pusha
and
daa
push
cmpsl
aad
inc
mov
adc
sbb
add
cmp
dec
push
cmpsb
sub
xor
scas
loopne
lock
jbe
push
mov
dec
and
out
scas
xor
lea
das
pop
push
inc
jge
fs
js
inc
ljmp
imul
sbb
fcoml
fbstp
cmp
jg
jbe
out
cmpsl
inc
push
arpl
or
mov
pusha
insl
out
pop
xorb
cs
dec
inc
mov
ficomps
stos
leave
filds
outsl
adc
in
push
sbb
mov
ja
xor
outsb
mov
mov
adcb
xor
mov
adc
pop
cmp
test
lahf
es
sbb
ja
and
pop
insl
or
aad
sahf
cmp
outsl
shr
and
ja
inc
fisubrl
popa
fisttpll
xchg
insb
rolb
mov
or
dec
lea
pop
repz
sahf
xor
mov
leave
sbb
cmp
push
sub
jl
dec
push
pop
icebp
test
mov
pop
sbb
ss
adc
add
lea
lods
sub
cmp
fstpl
fcmovnbe
enter
sbb
adc
in
inc
mov
mov
adcl
sahf
push
popf
lea
aad
fdivrl
nop
divl
dec
inc
cmp
mov
fistl
push
cltd
out
push
add
adc
mov
mov
pusha
or
sbbb
in
lcall
popf
movl
xor
sub
mov
add
mov
fsubrl
sbb
in
push
cmp
bound
out
jmp
and
repz
enter
dec
push
xlat
mov
setl
pop
cs
adcl
xor
sbb
sbb
mov
jbe
shrl
dec
sub
adc
imul
push
add
dec
mov
inc
mov
mov
movsw
jl
mov
lods
outsl
xchg
lods
insb
inc
push
mov
out
mov
jo
adc
in
push
cltd
or
mov
test
js
pop
js
xchg
xor
cwtl
icebp
jns
adc
adc
sahf
clc
sub
stc
aas
add
xor
sahf
mov
pop
testl
xchg
imul
adc
cmp
sahf
or
adc
xchg
arpl
or
pop
mov
xchg
mov
mov
jns
stc
lods
inc
rcll
call
or
or
cmp
fcmovu
add
dec
or
cmp
or
js
and
add
sbb
decl
adc
mov
adc
xlat
ja
or
push
ljmp
inc
pop
subb
call
mov
jge
mov
lods
inc
lods
andb
cmpsl
dec
int
and
out
nop
mov
cmp
rol
push
xlat
das
bswap
inc
cmp
mov
mov
scas
xor
insb
xchg
jp
testb
stc
sub
pop
pop
popa
insb
xchg
sbb
daa
pop
cmp
call
cmp
adc
scas
fidivrs
fsubr
xor
pop
or
lcall
cwtl
dec
icebp
add
ret
loope
push
mov
jle
dec
push
sbb
or
pop
add
mov
adc
int
sub
sub
sub
pop
ret
push
scas
jecxz
jbe
sar
adc
push
mov
addl
out
cmpsl
sarl
in
and
mov
int
xor
xchg
fidivrl
call
or
and
mov
mov
ds
mov
xchg
mov
fcompl
mov
add
cmp
lods
mov
xchg
fldt
fsubrs
push
push
mov
dec
sub
loope
and
or
or
mov
popa
jle
xchg
and
mov
int3
pushf
leave
jp
daa
inc
cmc
fwait
push
insb
mov
mov
push
in
xor
push
mov
jp
xor
lods
xchg
cmp
mov
insb
xchg
cmp
mov
inc
es
sahf
pusha
jl
cmp
adc
loop
push
and
test
push
nop
pop
or
sub
cmpsl
mov
scas
and
push
mov
xchg
out
les
lds
sbbb
cmp
push
icebp
mov
jcxz
push
or
cmp
jmp
push
sbb
mov
xchg
xchg
test
shr
push
inc
inc
xor
mov
sbb
dec
and
cltd
pop
outsl
and
fadd
ret
adc
rcrb
out
into
data16
cld
clc
dec
jns
adc
jge
repz
mov
repnz
adc
loop
xchg
insb
imul
in
sbb
sbb
cmp
enter
jae
cs
cmp
cwtl
jns
mov
and
push
jae
aad
jecxz
ja
fistpll
push
push
fbstp
or
jg
out
movsl
lea
fsts
test
dec
fiadds
push
out
push
shrb
popa
xor
je
cmpsl
dec
out
and
insb
das
push
xchg
sub
loopne
mov
mov
lock
enter
pop
pop
sahf
mov
jae
and
ficoms
inc
fidivl
push
popa
jmp
add
sbb
xchg
stc
jo
xchg
pop
cmpsb
in
sbbb
add
outsb
sbb
lahf
push
mov
or
cmpsl
rcrl
or
js
jl
dec
adc
cmpsb
out
sub
cld
mov
push
repz
aad
mov
sarb
std
aaa
inc
fsub
adc
add
dec
bound
pop
sub
fcmovnb
hlt
data16
inc
lods
aas
out
push
dec
int3
jg
loop
stos
push
loopne
mov
stos
mov
adc
adc
inc
fwait
mov
sbb
mov
jge
in
scas
mov
js
sbb
lods
and
jp
cli
cld
sub
xor
xlat
outsb
rolb
jp
jb
outsb
fwait
pop
or
inc
or
lcall
les
filds
adc
sahf
pop
add
roll
fstpl
push
jno
add
loop
dec
les
or
pop
push
mov
int
pop
sti
pop
adc
push
lret
xor
nop
mov
out
outsb
pusha
lret
mov
jle
lret
or
sbb
mov
sbb
add
sbb
mov
jle
lahf
and
and
lret
dec
test
rorl
ret
insl
inc
cmp
jbe
and
cli
xchg
in
std
jge
xchg
arpl
loop
negl
aam
lret
mov
popf
popa
andl
outsb
adc
push
shrl
sub
shrb
xor
jb
fisubrs
sbb
dec
fwait
jne
psubsb
push
push
insb
or
mov
clc
push
push
lret
xor
mov
iret
mov
mov
mov
mov
stc
or
mov
push
insb
jle
push
or
push
pop
cs
and
gs
lret
jnp
mov
pop
pushf
add
xchg
ret
and
std
bnd
inc
shll
iret
out
test
pop
insl
add
xchg
mov
pop
insb
mov
xchg
jno
jmp
adcb
sbb
lea
push
test
jns
jb
mov
sub
in
rorb
dec
sub
push
jnp
fnstenv
xor
xorb
sbb
mov
repnz
ljmp
dec
repnz
inc
xchg
jl
dec
pop
lock
jge
aad
andb
stc
pop
push
jb
daa
xlat
stos
aad
mov
aaa
pop
into
jbe
rorb
mov
pop
push
mov
and
sti
inc
xor
bound
or
filds
add
jmp
xchg
and
mov
ss
int3
add
jg
cmpb
mov
adc
push
js
andb
dec
les
insb
outsb
iret
cmp
or
pop
rcll
sbb
mov
or
xchg
fsubs
inc
pusha
jp
jge
push
sbb
mov
push
fdiv
hlt
mov
iret
xor
push
je
iret
dec
lods
add
pop
mov
fcoml
pusha
iret
pushw
out
jbe,pt
repz
leave
xlat
xor
lea
pusha
sbbb
pop
xor
push
lret
mov
add
outsb
xlat
lods
and
xor
inc
gs
mov
and
fwait
push
in
and
mov
mov
inc
into
pop
enter
jb
xchg
dec
pop
mov
int
scas
rep
mov
adc
jae
sbb
adc
push
lcall
in
ret
test
inc
ljmp
mov
sar
mov
lock
mov
or
scas
fbstp
adc
mov
push
mov
cmpsb
mov
rorl
mov
add
popa
orl
dec
aas
adc
lea
xor
es
das
xchg
push
jmp
or
pop
adc
lock
fwait
inc
cmp
pop
ficomps
pop
aas
outsb
mov
insb
xlat
jecxz
mov
mov
loopne
stos
xchg
mov
pop
pop
imul
lods
jo
fadd
call
test
add
das
call
rclb
sub
outsb
cltd
gs
pop
mov
in
pop
jmp
cs
lea
mov
shrl
scas
rcrb
dec
addr16
mov
rclb
adc
sbb
mov
aas
xor
addr16
jg
leave
xchg
push
sti
popa
xchg
push
adc
sub
mov
inc
mov
pop
xchg
pop
andb
cmp
hlt
je
sub
stos
cltd
inc
in
or
cwtl
gs
gs
pop
mov
xchg
jne
shrl
mov
sbb
dec
xor
sub
cltd
fstpt
or
movsl
mov
adc
movsb
sbb
pop
sub
clc
push
adc
cmp
sbb
sub
inc
mov
add
pop
scas
mov
iret
xor
lods
call
scas
jmp
push
arpl
push
icebp
cmp
leave
out
xor
ds
sbb
xchg
outsl
jno
cmpsl
dec
mov
fstpl
push
out
sub
xchg
jbe
push
mov
push
adc
inc
rcrl
lret
lret
adc
jge
mov
mov
adc
mov
fnstenv
aam
idivl
add
pop
mov
mov
pop
lods
pop
mov
ss
cltd
in
xchg
sub
hlt
pop
xor
push
fwait
sub
and
out
inc
inc
or
pop
ds
leave
pop
pushf
cmp
in
repz
push
addr16
mov
repz
mov
jp
pop
or
add
or
outsl
jp
test
test
roll
xchg
testb
std
ja
cli
test
addr16
data16
pop
mov
scas
dec
pop
sub
xchg
daa
movsl
mov
int3
int
arpl
xlat
and
adc
xor
data16
test
iret
push
mov
inc
cmpsl
mov
lret
in
cmp
push
mov
jle
es
lcall
cmpl
mov
pop
lods
inc
cli
mov
hlt
xor
dec
pusha
fldt
xor
adc
int
js
pop
lock
subl
and
out
xor
jp
jg
mov
xchg
negl
daa
aaa
dec
and
cltd
dec
data16
mov
mov
aas
sub
lods
test
clc
mov
cmpsl
scas
pop
sbb
jge
imul
add
addl
sub
repnz
push
jmp
movsb
jbe
mov
int3
hlt
sub
shll
gs
insb
das
inc
or
mov
and
dec
lret
jb
jae
jne
enter
popf
rclb
add
loop
adcl
jae
in
mov
repz
loope,pt
lods
fwait
or
cwtl
dec
dec
cltd
cmc
jbe
mov
stos
fucomi
mov
mov
insb
lods
fbstp
pushf
sarl
xchg
leave
test
rcll
pop
outsl
xchg
sub
nop
sti
jge
pop
das
lcall
push
push
cli
popa
outsl
loop
es
or
pushf
popl
inc
stos
lea
cmc
cmp
dec
iret
out
add
jne
mov
out
in
inc
cmp
pop
and
push
movsl
stc
inc
in
jnp
or
jmp
sub
repz
push
dec
add
fadd
push
stc
sbbb
dec
mov
loope
lret
out
icebp
inc
enter
adc
add
mov
out
pop
es
add
xchg
in
inc
xor
test
jns
lret
test
fisubs
dec
cmc
popa
aad
inc
inc
fdivs
xrelease
adc
inc
sahf
shlb
xor
mov
aad
call
xor
sub
stos
jg
lcall
dec
cmp
jae
xchg
sbb
xor
in
jmp
mov
xchg
dec
call
cmp
in
inc
mov
in
ljmp
jp
inc
xchg
push
test
iret
data16
ss
in
test
add
negb
adcw
and
cmpsb
js
mov
das
fcoml
dec
dec
mov
push
loopne
fxch
adc
pop
in
xor
xchg
rclb
mov
adc
ret
repz
call
mov
adc
pop
aam
lea
arpl
cwtl
aam
push
pop
outsl
lret
lds
inc
pop
pop
adc
repz
mov
cwtl
je
inc
in
cltd
jecxz
inc
xor
jle
shrb
cmc
loopne
scas
sahf
cs
out
loope
inc
cmpsb
test
xchg
pop
mov
out
test
idivl
ja
popf
dec
add
mov
xor
cmpsb
jbe
pop
inc
xchg
add
js
fbld
mov
daa
xor
gs
xchg
mov
or
inc
xchg
push
test
cmc
mov
push
sub
lds
and
cwtl
test
pop
mov
in
int3
in
sbb
mov
sbb
pushf
and
ss
scas
imul
xchg
fdiv
pop
rep
repz
fcomps
dec
mov
sbb
sub
sti
enter
pop
dec
aas
fistps
mov
push
cwtl
pop
push
out
mov
addr16
popa
adc
outsl
movsb
inc
in
xchg
aas
push
jecxz
add
cmpsb
cmp
add
xchg
jns
mov
mov
pusha
andb
dec
add
xchg
mov
dec
stc
or
pop
pop
add
or
and
aaa
adc
xor
mov
inc
lods
xchg
sub
cmp
orb
out
and
push
or
jbe
daa
adc
xor
addr16
ret
lock
subl
mov
ja
jle
jne
mov
int
das
push
inc
sbb
loopne
sbb
fildl
aad
xor
xchg
neg
mov
push
jecxz
mov
es
xlat
and
gs
or
iret
jmp
dec
shlb
subb
adc
daa
xchg
sti
jge
mov
insb
add
mov
adcl
mov
xchg
fnstenv
push
adc
xchg
sub
jbe
pop
dec
pop
adc
loope
mov
or
push
mov
testb
cmp
mov
ret
xchg
js
mov
cmp
cmp
mov
sub
cwtl
sahf
loop
cltd
push
sub
xor
cltd
gs
arpl
into
test
xchg
xor
decl
adc
sbb
repnz
and
mov
cmpsl
aad
pop
sbbb
inc
xchg
mov
iret
pop
adc
jno
jns
out
in
stos
inc
lods
xlat
mov
xor
notrack
push
sub
pop
daa
sub
icebp
mov
inc
pop
cli
movsl
scas
jno
mov
pop
scas
push
dec
fcmovne
xor
bound
mov
addr16
inc
stos
push
int3
incb
in
dec
dec
fwait
aas
nop
daa
loop
lret
jg
add
sbb
cmpsb
adc
lahf
jnp
popa
mov
jns
xchg
in
test
loope
fiadds
enter
inc
inc
test
sbb
ficomps
add
inc
mov
dec
loop
out
sub
out
jl
mov
dec
mov
jl
out
fmuls
adc
lea
hlt
out
mov
lahf
and
push
fsubrs
cmc
inc
in
cmpsb
jno
movl
adc
lcall
hlt
mov
mov
pop
daa
push
dec
pop
gs
xchg
mov
mov
shrb
pop
out
popf
mov
sub
xchg
adc
call
in
mov
lret
push
rcrl
lds
mov
mov
inc
pop
mov
aaa
mov
data16
shrb
inc
sbb
dec
enter
insb
leave
push
sbb
dec
pop
inc
cmp
and
lea
push
mov
xchg
popf
xor
loop
cltd
mov
adc
push
mov
nop
imull
sbbb
mov
mov
mov
push
adc
add
test
in
aam
outsb
adc
xchg
cmp
adc
int3
jne
cmpsb
out
push
frstor
data16
lret
inc
and
js
aas
iret
and
popf
jge
mov
lahf
inc
into
dec
leave
push
insb
setne
ret
je
cmp
outsl
andb
pop
sub
aad
or
roll
push
inc
mov
sbb
push
rcpps
lret
mov
push
jecxz
insl
adc
cmpl
push
test
nop
mov
xchg
fistps
xor
or
mov
orb
hlt
xchg
xchg
cmpsb
in
loopne
das
mov
mov
or
jl
sbb
test
adc
cmp
xlat
lret
push
add
mov
addl
mov
inc
ja
mov
adc
je
sti
fs
mov
inc
inc
leave
leave
fwait
ret
sub
les
repnz
mov
xchg
cmp
xlat
adc
pop
pop
outsb
test
mov
out
xchg
cmp
xlat
cmpsb
lock
in
push
es
xchg
add
pop
out
cmp
cmp
fsub
cmovle
mov
in
cmpsl
mov
and
cmpsl
fbstp
dec
psllw
lea
cwtl
mov
or
sub
movsb
shl
lahf
pop
ja
scas
aaa
inc
cwtl
fidivl
or
sub
clc
sahf
dec
lds
cmp
loop
jne
xorl
push
aas
adc
inc
jmp
and
loopne
xor
mov
jb
test
mov
repz
aaa
movsl
pop
or
xchg
lahf
dec
cli
dec
stc
pushf
inc
push
adc
pop
xor
pushf
pop
out
test
push
pop
cmp
mov
or
popf
js
cli
pushf
test
popa
ljmp
fadd
ret
jmp
xor
sbb
rcll
adc
jmp
dec
push
mov
inc
inc
fildl
mov
xchg
je
loopne
cmc
shrb
mov
sub
mov
sbb
mov
in
xchg
iret
ret
mov
pop
in
jmp
cmp
in
or
inc
sahf
mov
jl
mov
imul
js
pusha
testl
sti
cmc
mov
add
test
xchg
adc
jbe
out
mull
inc
cmc
add
mov
loope
dec
xlat
mov
push
es
inc
inc
das
jl
xor
pop
mov
xchg
cmp
arpl
outsl
lss
in
push
gs
les
add
dec
xor
and
lock
jge
mov
out
mov
jp
in
xchg
jns
scas
add
fnstsw
scas
aaa
orl
sbb
sbb
cmp
in
push
cld
mov
ds
adc
mov
mov
dec
push
jg
mov
movsb
pop
sub
ds
xchg
shrl
shlb
and
or
mov
clc
mov
mov
out
adc
adc
inc
xor
xor
sbb
imul
mov
insb
out
bound
adc
mov
push
jmp
fisttps
sub
sbb
push
sbb
pop
leave
ljmp
pop
inc
sbb
stos
cmp
push
scas
rolb
push
fsub
adc
enter
fs
push
lea
iret
inc
flds
pop
sbb
push
cld
cmp
xchg
rclb
and
lcall
adc
popa
adc
addr16
mov
push
pop
daa
outsl
cmp
pop
xchg
mov
push
add
cmpsb
sti
xlat
jle
lahf
cs
jle
fstpl
mov
dec
adc
mov
push
inc
lea
mov
mov
insb
test
mov
or
stos
test
test
das
xchg
mov
inc
jp
fdivs
pop
aam
lret
mov
cmp
mov
test
push
push
loope
rclb
idivl
test
pop
fwait
mov
sbb
stos
scas
and
dec
pop
mov
lea
std
xchg
xor
pop
adc
imul
jbe
add
inc
inc
cs
sbbl
jge
or
shll
cltd
push
pushf
cli
arpl
je
std
inc
jbe
mov
push
sub
rcrb
adc
out
xchg
sub
mov
cltd
fbstp
or
insl
popa
in
test
xor
jmp
ret
adcb
xlat
push
cmpsl
mov
sahf
inc
mov
push
inc
movb
ds
fsubr
xor
pop
sbb
mov
jecxz
mov
imul
push
mov
mov
lods
pop
xchg
sahf
push
in
mov
insl
mov
jle
daa
and
sbb
inc
fwait
push
mov
ja
imul
sub
cmp
clc
pop
shr
push
outsb
in
xchg
cld
cmp
mov
dec
jno
push
jecxz
push
mov
push
ds
jle
lret
cmc
inc
movb
cmp
lods
add
jmp
sarl
dec
lea
cs
addr16
ret
bnd
pop
call
loopne
pop
xchg
lods
inc
stos
fdivp
std
xchg
in
fildl
add
xor
xchg
stos
add
inc
sbb
jbe
in
inc
dec
mov
rcr
xchg
adc
sbb
arpl
add
ja
out
int
ret
jl
or
push
pop
loop
ja
push
repnz
adcb
jle
dec
sub
jbe
sbb
les
pop
inc
out
in
mov
rcll
dec
dec
in
push
pusha
popa
jo
jne
jle
jb
fwait
dec
sbb
in
dec
xor
mov
lcall
popf
dec
jns
out
sub
test
fidivl
jne
pop
testb
data16
movsl
push
pop
push
mov
lret
push
in
add
je
adc
out
xchg
iret
xor
ret
inc
out
xchg
sub
push
jge
mov
leave
sbb
lret
data16
push
jl
mov
mov
in
mov
inc
stos
or
add
cwtl
jns
cmp
lcall
loopne
pop
mov
fldcw
pop
sub
stos
inc
cmpb
ret
jno
pop
gs
shll
cwtl
repnz
jne
mov
pop
dec
xor
lcall
and
movsl
test
push
out
cmp
mov
xchg
pop
jne
cwtl
orb
je
xor
int
mul
jns
dec
shll
mov
ss
popf
enter
lret
dec
out
pop
mov
ja
mov
cli
cwtl
jb
das
les
mov
test
mov
scas
xor
lahf
mov
xchg
jb
cvtps2pi
lods
xor
xchg
and
loope
rcrb
rorb
imul
ljmp
pop
imul
shr
push
xchg
push
stos
pop
adc
cmp
fsubl
dec
lods
add
xchg
cmpsl
dec
sahf
ja
sub
insb
add
rcr
jnp
mov
inc
or
add
inc
cmp
imul
mov
mov
jg
mov
xchg
inc
xlat
test
cmp
mov
dec
dec
stc
imull
mov
sti
shlb
pop
xor
jle
mov
clc
push
in
aaa
sub
fcoml
jno
leave
lock
out
push
push
mov
jno
arpl
mov
pop
je
stos
inc
xacquire
fisubrs
loope
inc
dec
pusha
or
aas
inc
fnstenv
xchg
jecxz
insb
cmp
icebp
mov
xchg
out
pop
jnp
aad
insb
popf
fwait
pop
ljmp
pop
sti
leave
xor
adcb
movsl
adc
mov
sub
jne
orl
mov
aam
or
mov
push
mov
mov
mov
out
jnp
inc
fisttpll
mov
rolb
fsubrp
jbe
mov
fwait
jae
lods
int3
mov
fldl2t
test
sbb
fwait
jnp
inc
int
pop
in
pop
int
pop
cmc
and
mov
into
insb
sbb
mov
sbb
clc
lahf
and
faddl
jmp
test
jge
sti
fwait
sbb
push
in
out
adc
sub
xor
add
push
jae
sub
shrl
aaa
jns
push
push
repz
or
fsubrp
fsubr
pop
sar
jle
xor
sub
jl
pop
out
dec
fistps
adc
in
data16
xchg
push
in
add
push
sbb
data16
inc
and
out
or
outsb
test
mov
fimull
outsl
mov
cld
imul
pop
sbb
and
movsb
repnz
lods
xchg
ret
divl
push
aas
sbb
or
sub
scas
add
std
dec
stos
out
bound
fcoms
pop
xor
ret
and
add
push
mov
jne
sub
dec
sub
add
loopne
push
into
testl
sbb
fs
cld
push
or
xchg
jl
ret
pop
lahf
std
add
xchg
jl
gs
fcomps
fcomip
inc
dec
fadd
je
mov
aam
fwait
cmpsl
stos
pusha
pop
push
loopne
cs
inc
or
repz
and
cmp
add
out
cmp
add
ret
jne
xor
nop
mov
xorb
mov
fstpl
dec
add
rcr
xlat
jae
add
popf
stc
and
pop
shrl
push
cli
mov
sub
outsb
aaa
aad
insl
sub
dec
pop
lahf
jl
cltd
stos
mov
sbb
jne
fs
mov
sbb
lahf
pushf
or
ljmp
inc
xchg
sub
hlt
mov
daa
mov
idivl
fcmovnu
xor
jbe
ljmp
cltd
dec
in
sub
mov
loopne
pusha
popf
sub
fwait
jae
cmpl
dec
fsts
lcall
sahf
and
enter
push
jmp
add
mov
pop
push
adc
xchg
xor
in
inc
push
movsb
ljmp
mov
loop
add
clc
push
fsubl
inc
xor
je
out
jno
in
mov
sti
add
les
fnstenv
test
push
stos
jp
addr16
mov
call
mov
je
in
aas
lods
call
hlt
add
jnp
and
push
cwtl
inc
xlat
lret
push
outsb
mov
mov
std
test
cmpsl
mov
shl
and
push
loope
hlt
cmp
pop
imul
push
mov
xchg
jecxz
imul
loope
inc
shl
fsubs
out
xor
das
mov
scas
fdivp
xchg
push
inc
adc
int3
mov
mov
xchg
xor
jp
mov
bnd
lret
push
adc
mov
and
std
xchg
cwtl
xchg
jecxz
add
movsl
lea
cmp
icebp
dec
popf
mov
dec
xchg
xchg
add
stc
clc
jnp
std
or
push
mov
xchg
sub
outsl
pop
fcmovnu
sub
stc
cmpsl
stc
cmc
mov
cltd
lret
xor
xor
out
mov
lfs
jno
notl
pusha
aad
bound
add
or
sub
cmp
dec
and
pop
jo
popf
aas
xchg
push
dec
out
scas
testb
stos
inc
xlat
outsb
ja
or
xchg
or
jecxz
pop
iret
leave
jbe
decl
push
sub
sarb
cmp
data16
lds
pop
les
lcall
aas
aam
es
push
cs
lods
xchg
mov
push
mov
mov
addr16
fdivs
sbb
pop
insb
mov
outsl
cmp
pop
lods
scas
pop
xor
int
stc
pop
out
jge
inc
aam
cli
and
mov
andb
adc
bound
jb
rcrl
mov
mov
xor
es
add
sub
lods
xor
inc
push
sub
jnp
mov
push
subb
mov
pop
std
jo
sbb
je
ficompl
sbb
pop
outsb
cmp
jbe
dec
pop
jnp
bound
push
sbb
and
lds
jne
idivl
jae
cwtl
lods
stos
test
stos
arpl
cmpb
pop
sti
aam
fcmovnb
in
or
loopne
or
jne
inc
sub
add
mov
xlat
xor
inc
dec
popa
jns
les
imul
gs
ds
test
test
rcll
lock
pop
jmp
pop
lcall
or
xor
jo
stc
sbb
xor
adc
mov
popa
lods
inc
sub
nop
fstpl
add
add
stos
mov
lret
lea
mov
lods
push
or
imul
dec
jbe
addr16
lcall
sbb
mov
sub
xorl
rclb
cmp
insl
lret
xchg
mov
test
pushf
fwait
rcr
jne
xor
jae
push
and
das
jb
pop
push
jne
out
adc
xchg
ja
lret
and
cmp
mov
loope
adc
loopne
push
push
shlb
rcrb
addl
sbb
cmpsb
xchg
sub
jecxz
mov
push
or
adc
data16
insb
icebp
mov
sarb
repnz
inc
int
add
mov
lret
lds
dec
sbb
aam
add
repnz
mov
jno
adcl
ret
cmp
ficoml
xorl
jno
popa
fcompl
jmp
dec
jle
out
jo
inc
cmpsb
cmc
in
test
shlb
and
pop
push
mov
dec
jle
andb
scas
sub
enter
repz
call
mov
and
jle
insl
stc
mov
dec
cmp
lcall
mov
outsb
pushf
js
shrl
adc
add
movsl
mov
mov
enter
test
lret
mov
jo
loope
sbb
mov
push
call
jno
outsl
loop
push
ret
jnp
pop
out
or
sbb
in
inc
lcall
dec
rorb
adc
mov
jae
pop
xchg
push
pop
jmp
xor
add
dec
jb
xor
cmpsb
lods
jmp
stos
into
lret
hlt
scas
test
cld
ljmp
fdivp
test
dec
movsb
xor
xor
fisubl
test
xchg
pop
cmp
inc
stos
push
xchg
stc
cmp
ljmp
dec
mov
test
sub
mov
iret
cmp
and
mov
pop
ds
xchg
data16
dec
and
push
sti
mov
cmp
jno
jmp
shll
xchg
icebp
test
test
out
mov
mov
cmc
jno
enter
xchg
or
adc
gs
insb
and
insb
sub
jbe
inc
in
sbb
adc
outsb
xlat
cmp
adc
pop
jge
fcompl
push
test
adcl
add
adc
mov
aam
sarl
inc
add
lcall
test
pop
and
jne
or
push
cmp
sti
stos
les
xchg
add
pop
fimuls
sbb
repnz
and
push
fiaddl
clc
out
inc
mov
loope
dec
dec
je
jg
decb
adc
dec
nop
ja
out
sti
jb
call
loopne
out
lds
cmpsb
or
rcll
mov
or
mov
movsl
push
fldl
arpl
nop
sub
sub
sbb
mov
addr16
and
dec
and
scas
push
outsl
dec
mov
je
lret
hlt
push
aam
dec
mov
loopne
aam
sub
inc
aam
sbb
mov
adc
aad
out
adc
gs
ds
pop
hlt
dec
imul
imul
and
and
pop
or
mov
daa
mov
lea
inc
mov
adc
inc
adcb
xor
jmp
or
sbb
daa
leave
jecxz
adc
mov
icebp
mov
adc
int3
in
xchg
subl
push
test
xor
bound
or
loopne
inc
sub
jae
int3
out
dec
loopne
cmp
ss
jns
jge
push
dec
in
or
mov
fstps
xor
movsl
pop
in
ljmp
or
xchg
sub
or
fldl2t
fwait
xlat
mov
sbb
mov
scas
das
sub
mov
xlat
imul
sub
push
jmp
mov
cmp
or
cmp
pop
adc
sti
mov
add
jecxz
push
in
cmp
pusha
or
inc
fs
xor
ret
jge
xchg
sbb
lcall
jns
and
dec
movsb
xchg
mov
daa
cmp
xor
push
mov
gs
aaa
call
push
add
outsb
jns
ds
jl
cmp
roll
aam
flds
or
add
lods
inc
out
mov
and
lret
xchg
dec
add
adc
xchg
mov
out
add
rol
push
mov
ficomps
adc
xchg
pop
cs
dec
push
int3
xchg
jbe
xor
ja
fnsave
inc
mov
shr
mov
xchg
clc
leave
sbb
jbe
xchg
leave
xor
repnz
push
inc
push
in
adcl
pop
pop
rolb
jbe
mov
insb
pop
enter
imul
outsb
out
out
inc
out
inc
syscall
xchg
xchg
xor
lret
inc
xor
ja
cmpsb
sahf
add
aam
fstpt
mov
rol
pop
jb
mov
fimuls
gs
and
mov
cld
insl
aad
stc
mov
rcrl
out
stc
xchg
or
mov
sti
xor
out
rol
lock
out
sbb
push
js
subb
scas
adcl
das
add
pop
into
xchg
push
sbb
gs
sahf
push
sub
sbb
inc
dec
enter
loop
daa
lret
mov
jae
dec
ja
cmc
dec
cli
mov
sbb
push
dec
pop
out
jge
push
in
orb
xor
inc
mov
aam
int
push
stc
ljmp
fisubl
loope
mov
test
clc
xchg
or
sbb
add
out
jae
test
scas
jno
xchg
pop
loop
add
es
insb
cmp
cmpsb
inc
mov
jb
push
fimull
inc
test
cmp
push
ljmp
jno
shlb
adc
adc
dec
or
xor
das
sbb
pop
fwait
xor
popa
mov
and
sub
subl
pop
cmp
pop
xchg
dec
int3
xchg
xor
popf
sbb
mov
sbb
add
pushf
icebp
jno
push
loope
ja
out
mov
rorb
inc
pop
mov
xor
inc
adc
sub
inc
test
pushf
outsl
push
pop
jne
movsl
cmpsb
sbb
mov
and
adc
xchg
pop
pop
bound
mov
loop
jb
aaa
adc
into
fwait
sbb
push
call
jge
mov
nop
sub
xlat
pop
outsb
pop
add
repnz
mov
fstpl
mov
xor
mov
and
mov
cmp
mov
repz
ljmp
std
xor
inc
cwtl
flds
femms
pushf
xor
pop
outsl
andl
push
mov
addl
push
subl
inc
xlat
cmp
jecxz
fwait
inc
dec
fstpt
shl
push
repz
in
or
jno
push
fnsave
mov
pop
jecxz
es
pop
sbb
sbb
sahf
pop
jecxz
into
xorb
push
xor
adc
jae
fmulp
stc
test
inc
cld
aam
cmp
jge
fdivrl
js
mov
ja
dec
es
jne
fldt
inc
inc
repz
push
pop
or
cmpsb
daa
and
pop
pushf
mov
addr16
sahf
testb
sahf
sbb
test
jg
into
fwait
sbb
jnp
stos
sbb
stos
test
fwait
cmc
jl
test
cmp
mov
into
mov
repz
push
fs
mov
arpl
and
loopne
push
push
adc
lods
enter
adc
inc
mov
imul
cmp
pop
icebp
mov
mov
fldz
xchg
or
orb
or
mov
cmpsb
mov
push
adc
pop
icebp
mov
call
cmp
mov
push
pop
repnz
adc
sbb
jns
cmp
nop
sub
int3
inc
pushw
or
test
stos
psraw
sahf
push
loopne
js
or
adc
pushl
dec
mov
rcr
hlt
mov
or
sbb
ret
dec
pop
insb
sub
sahf
push
enter
dec
fbstp
xchg
loope
mov
adc
mov
sub
adcl
mov
xchg
mov
xor
movsl
call
mov
push
call
mov
imul
aaa
lock
arpl
pop
fsts
imul
dec
shl
loop
nop
jmp
push
push
test
int
sub
test
inc
push
dec
inc
iret
xor
jmp
dec
adc
adc
or
add
or
repnz
pop
mov
mov
add
add
mov
arpl
xor
cmp
add
std
or
pop
adcl
sub
pop
lods
jp
pop
aad
sarb
jg
jno
pop
fcomip
dec
xchg
addl
pop
mov
gs
sbbl
xchg
pop
and
sub
push
sub
ja
cmpsl
mov
sbb
inc
pop
adcb
and
dec
dec
dec
jne
cwtl
dec
lds
out
xor
gs
rcl
fwait
hlt
repnz
js
add
pop
insl
pusha
es
add
xchg
scas
mov
add
jle
mov
shll
adc
push
cmp
test
adc
pop
push
mov
aam
test
jo
stos
inc
xor
movsl
xchg
xor
and
jb
inc
cltd
btr
inc
cli
fsubr
fcoml
in
shr
sub
lds
repnz
xchg
sbb
aad
outsb
push
int3
test
ja
xor
adc
fwait
aam
push
or
lcall
andl
and
and
mov
mov
test
lret
clc
fbstp
add
and
stc
fisttpl
mov
pop
stos
movsb
and
in
mov
jae
cmp
inc
inc
popa
fcoml
cwtl
loopne
and
jecxz
out
xchg
and
mov
stos
xchg
mov
lcall
mov
mov
cmp
mov
fidivl
pop
push
pop
test
mov
arpl
popa
into
sub
and
rcll
repz
mov
gs
in
lahf
mov
inc
push
lods
push
test
sbb
out
jg
push
and
mov
xor
cltd
mov
stc
je
aaa
cmp
jmp
jne,pn
push
gs
mov
test
jb
dec
and
pop
ljmp
jno
popf
mov
loope
or
xchg
dec
stos
and
pop
xchg
aam
inc
xlat
repnz
cltd
popf
adc
scas
sub
mov
or
sbb
jg
xchg
insl
pop
sub
jnp
dec
xchg
pop
mov
push
mov
push
in
xchg
js
cld
sbb
test
movsl
mov
jb
cwtl
mov
mov
add
lret
push
hlt
sub
ljmp
push
hlt
or
pop
loop
jg
shlb
dec
es
add
data16
dec
and
sbb
scas
pop
dec
pop
add
lods
xchg
popa
jl
int
jl
test
xchg
adc
cmp
lea
repnz
loopne
mov
jnp
cmp
add
in
push
cwtl
dec
sahf
jnp
sarb
cltd
stos
daa
outsb
fs
jae
jbe
test
pop
out
xchg
adc
inc
mov
push
xchg
pop
sbb
or
cmp
fstl
sbbb
jnp
sub
jle
movsb
inc
lahf
sub
cmp
dec
data16
jle
xlat
xchg
sbb
cmp
icebp
data16
inc
ret
pop
pushf
sub
jae
mov
jg
repnz
addr16
or
pop
xor
add
fwait
fistps
xchg
shrb
adc
or
cs
pop
sti
mov
out
mov
fisubl
cmp
dec
out
faddl
add
insl
loopne
adc
mov
mov
mov
lret
mov
in
xchg
mov
jle
xchg
jno
lahf
mov
mov
repz
mov
cmp
ss
and
rcr
sub
or
mov
sub
sbb
push
ret
xor
out
jmp
xorl
and
scas
push
dec
jns
cmp
ss
fsub
inc
lret
cmp
sub
pushf
fwait
xor
push
lock
aas
in
jl
lret
pusha
inc
xlat
xchg
sbb
mov
stos
in
movsl
and
sbb
xchg
adc
movsl
inc
lods
rcrl
mov
mov
push
push
and
mov
sbb
push
push
sbb
mov
or
test
icebp
xchg
ljmp
sbb
xor
daa
mov
fisttpll
push
jbe
testl
std
ljmp
mov
or
std
mov
divl
dec
rolb
adc
xchg
mov
xchg
jg
mov
popl
rolb
out
xor
mov
sahf
mov
rol
mov
mov
cli
aam
mov
leave
mov
mov
jp
iret
push
push
mov
push
jle
clc
xor
imul
test
ss
das
cwtl
ljmp
pop
in
pusha
cmp
mov
gs
push
pop
into
call
pop
mov
hlt
fistpll
stos
mov
mov
inc
mov
aad
movsl
sbb
pop
js
cmp
jmp
ss
and
inc
loopne
test
int
adc
inc
push
lret
fadds
std
xchg
jbe
push
sarl
jo
push
mov
lods
mov
stc
mov
scas
mov
pop
clc
mov
jge
aaa
call
addb
mov
mov
loope
lret
jae
sbb
push
or
or
notb
je
mov
xor
jae
dec
mov
roll
jge
and
outsb
xor
outsb
inc
lds
mov
cmp
data16
push
lds
sbb
inc
sub
mov
push
xor
push
loope
add
adc
int3
mov
pop
pop
xchg
jne
roll
insb
in
pop
xchg
add
mov
inc
push
addl
gs
imul
shrl
inc
popl
jb
in
lock
xor
scas
push
mov
inc
fcompl
dec
insb
cmp
inc
lcall
push
add
decb
inc
and
lock
push
mov
jg
test
insl
cmpsb
push
mov
seta
pop
jp
lods
mov
outsl
and
jb
cltd
jg
movsl
xchg
fisubs
popf
push
jmp
or
fnstsw
clc
test
arpl
push
xchg
fimuls
and
xlat
inc
fs
mov
sbb
ds
in
mov
popa
jp
jp
pop
aam
pusha
push
mov
cmc
or
and
add
jno
leave
jecxz
inc
pop
lods
fimuls
adc
cmp
jb
adc
dec
jmp
or
out
adc
mov
sbb
mov
or
mov
inc
mov
shrl
mov
jl
scas
out
bound
aas
std
adc
addr16
jns
scas
jl
sbb
and
push
loop
push
jae
idivb
lret
std
pop
jbe
mov
insb
add
or
insb
or
pop
sbb
pushf
scas
fisttpl
loopne
js
lods
xchg
filds
inc
fstpt
movsl
push
inc
sbb
push
mov
xchg
rcrl
fwait
lret
test
mov
dec
mov
stos
add
ja
xlat
mov
cwtl
insb
les
insl
insb
pop
scas
gs
cmp
add
jb
or
fdiv
push
insl
int3
xor
scas
push
xor
loop
and
inc
inc
cmpsl
jp
bound
dec
jns
dec
pop
int
inc
cmp
sarl
sbb
mov
int3
pop
add
scas
push
mov
push
mov
inc
fdivrs
popa
xchg
mov
gs
out
das
xchg
jb
add
mov
adc
sbb
inc
push
ja
xorl
out
xor
stos
mov
sub
lcall
nop
push
mov
mov
xchg
cld
adc
cmpsb
sbb
add
inc
mov
inc
loope
inc
mov
nop
ja
mov
push
add
popa
xor
sbb
adc
xchg
imul
push
fwait
out
adc
mov
mov
adc
js
lret
lds
je
mov
inc
out
dec
xor
out
xor
add
and
pop
jne
pop
xchg
int
mov
lret
pushf
int3
lret
push
stos
sub
xor
push
sub
cwtl
or
imul
lahf
pop
fwait
bound
arpl
lret
jmp
cs
pusha
call
or
xchg
jmp
cltd
jo
lret
testl
push
push
jmp
cmp
stos
adc
pop
out
test
mov
dec
inc
out
stos
add
jp
aas
jg
cltd
ja
cmc
mov
mov
pusha
idiv
pusha
pop
call
cmp
xor
adc
or
sub
test
pop
mov
inc
imul
pusha
inc
ss
inc
es
xor
lcall
mov
mov
mov
adc
xchg
or
cmp
and
in
pop
mov
adc
sub
pop
adc
mov
adc
icebp
shll
and
iret
fildl
sbbb
movsb
movsb
aas
add
rol
pop
test
pop
sub
rcrl
das
iret
pop
sbb
or
movsb
mov
data16
movsb
imul
inc
rolb
and
jbe
adc
jmp
jae
lret
push
cmp
push
push
and
jo
or
pop
fsubrl
sub
xor
leave
mov
pand
mov
add
adc
lret
push
xchg
dec
das
shlb
cmp
xor
or
pushf
dec
jle
cmpl
push
mov
sahf
add
rcrb
mov
xchg
pop
push
jnp
add
roll
pop
mov
pop
outsb
andb
push
pop
jne
dec
fsubl
xchg
fmull
pushl
pop
push
in
push
dec
lods
jno
inc
stos
push
push
sub
fnstcw
sbb
lds
int3
es
xchg
fs
jmp
loopne
pop
or
fstl
out
mov
sahf
mov
pop
cmp
loop
add
inc
fidivrs
push
pop
inc
outsb
sub
xlat
ret
add
jo
shlb
sti
hlt
sbb
cmpsl
pop
mov
mov
mov
sub
xchg
sub
lds
loop
scas
or
inc
inc
adc
adc
xchg
adc
sbb
dec
sbb
jae
mov
push
xchg
mov
les
hlt
cmp
rol
cmc
mov
outsl
sbb
adc
inc
lret
mov
dec
mov
dec
or
mov
jae
out
popf
dec
sbb
rorb
jno
dec
stos
fcompl
es
xstore-rng
cmpsl
add
les
int3
xchg
imul
sbb
sub
add
cmp
mov
pop
push
mov
lock
sti
test
and
fwait
scas
popa
cmpl
mov
sub
jbe
into
jecxz
shll
add
fstl
test
jecxz
scas
adcb
sbb
inc
xchg
out
mov
fwait
js
mov
fwait
mov
cs
jno
cli
mov
dec
in
pop
clc
iret
or
and
xlat
push
inc
push
push
xorl
adc
fnop
mov
outsb
mov
enter
repnz
daa
push
or
mov
int3
pop
pop
scas
dec
lock
and
xor
xchg
lock
sbb
rclb
or
addr16
popf
push
cmp
jmp
inc
pop
push
mov
sbb
std
test
jp
psubq
mov
lret
jp
push
jbe
daa
inc
lock
mov
cmp
lcall
test
in
jne
iret
into
and
mov
out
dec
in
jb
sbb
dec
movsb
cmp
popa
arpl
mov
ret
ror
stos
shr
rcl
push
push
sbb
sti
stos
fwait
xor
decl
mov
cmpb
adc
out
add
pop
es
dec
cmp
mov
movsl
mov
dec
add
shrl
js
pop
sub
dec
es
xchg
adc
add
mov
adc
nop
loop
fwait
jecxz
xchg
ss
fsubrl
fmul
mov
jle
mov
or
mov
ret
arpl
mov
scas
xchg
jg
mov
aam
sub
jp
mov
adc
dec
dec
pop
hlt
jge
xchg
sub
push
movsl
in
lea
dec
cmpsb
inc
out
ds
cltd
shrl
inc
ror
pop
insl
call
mov
jl
ljmp
push
notb
mov
enter
in
inc
fistpl
shl
outsl
and
cmp
jb
xchg
xchg
mov
dec
mov
adc
ficoms
jnp
push
out
test
sub
aas
lods
mov
ficompl
dec
mov
inc
jl
hlt
or
pop
inc
fisttpl
in
negb
xor
xor
xor
xchg
testb
stos
xchg
leave
shlb
arpl
int
dec
repnz
roll
testb
sbb
loop
out
push
test
addb
ljmp
push
popf
inc
iret
pop
xor
ret
dec
xor
imul
xchg
sbb
jae
pop
push
jnp
jns
jmp
in
ja
fcmovne
xchg
rorb
lea
cmc
add
cld
or
sbb
lret
lret
cld
sahf
sahf
push
andb
push
and
mov
cmc
pop
mov
data16
scas
and
sarl
in
push
aam
in
fdivrl
rcl
mov
xchg
fisubrl
loopne
stos
dec
orb
mov
mov
push
jmp
daa
pop
xchg
jp
or
jmp
mov
add
cmpl
push
add
stos
sbb
pop
cmc
push
cmp
dec
out
std
pop
cli
pop
sarb
mov
iret
pop
mov
in
jno
into
jl
shll
xchg
nop
pop
adc
test
cmp
and
sbb
imul
xor
xchg
inc
lods
pop
lcall
sub
and
loop
in
cltd
out
add
testl
and
imul
sub
or
out
pop
stos
dec
loopne
outsb
and
dec
std
in
das
daa
dec
dec
cmp
lock
loopne
dec
dec
mov
out
inc
popa
and
lret
bound
lret
jbe
sub
inc
cwtl
movsb
cwtl
pop
jmp
negl
mov
out
and
sub
in
aaa
lahf
pop
test
add
mov
jg
dec
xorl
popf
stc
stc
scas
aas
popf
lea
jbe
jp
inc
loop
mov
adc
sub
sahf
sahf
clc
cli
pop
pop
sahf
mov
sbb
sub
xchg
decb
adc
aad
sub
jnp
mov
out
or
adc
aaa
push
cwtl
jl
call
inc
rcrl
inc
pop
or
nop
lods
xchg
sub
pop
mov
push
and
or
std
int3
lret
into
push
jl
mov
pop
dec
push
ret
inc
push
outsl
and
cmc
pop
rcrb
add
dec
out
jnp
pop
pop
jmp
fwait
cmpsl
xor
or
cld
neg
mov
jge
push
rcr
jbe
cmpsl
xchg
xor
bnd
lods
pop
inc
fimuls
jecxz
out
jmp
jae
in
sbb
pusha
sub
cltd
rorl
out
movsb
xchg
mov
ss
jge
outsb
sbb
pop
mov
pop
fdivrs
sub
mov
jg
xor
inc
mov
push
test
mov
pushf
and
daa
fucomip
icebp
push
xchg
mov
out
sbbl
std
jge
aam
push
ret
loopne
or
daa
push
lcall
push
rclb
aas
gs
scas
pop
cmp
pop
jnp
sbb
dec
pop
jnp
std
sub
in
mov
or
cltd
dec
jae
push
aaa
outsl
shr
mov
jle
js
mov
pop
popa
push
call
enter
push
jp
and
je
and
aaa
in
cmp
inc
cmp
je
mov
sbb
jl
mov
int
and
adc
xlat
pop
or
jg
mov
sbbl
nop
shr
pushf
mov
fstps
ljmp
sbb
mov
movsb
push
jle
mov
mulb
in
mov
push
in
push
pop
sub
clc
cmpsl
les
or
addr16
cmp
mov
or
mov
aaa
xchg
cmp
cmpsb
stos
outsl
xchg
push
out
ljmp
mov
nop
jno
sbb
pop
sbb
jno
mov
xor
dec
push
or
xlat
mov
jo
cmp
xorb
jo
and
enter
mov
fucomp
jne
cmp
add
out
outsb
cltd
popa
enter
or
in
mov
inc
cmpl
repz
sub
pop
xchg
jo
adc
mov
jmp
mov
lret
push
das
insl
jnp
push
xor
cmpsb
sbb
or
nop
add
adc
lret
lock
mov
mov
jae
cmp
or
lret
cmp
pop
out
ja
add
push
out
cmp
jb
cmpsl
mov
ret
pop
fisubrl
loope
sub
adc
mov
jb
mov
cmp
js
in
xchg
xchg
cmp
jg
addr16
pop
popf
lock
jl
push
mov
lea
xor
sub
sub
mov
inc
fisubs
jl
fiaddl
jge
mov
add
cltd
dec
push
mov
idivb
sub
popf
stc
in
sti
das
push
and
jae
lea
cmp
jns
sub
scas
pop
dec
je
outsb
into
sbb
jns
mov
or
call
pop
pop
stc
nop
jnp
repnz
jg
xchg
cmp
pusha
mov
std
xchg
jns
adc
mov
es
add
or
mov
and
sub
std
outsb
add
lock
jmp
push
sbb
dec
dec
jno
jge
aaa
loopne
sbb
mov
icebp
dec
in
loopne
sbb
scas
repnz
rorl
lods
mov
test
add
xor
movsb
xor
popf
xor
les
sbb
mov
pop
pop
das
cmpl
pop
incb
add
lahf
ss
notb
leave
jecxz
mov
jne
dec
jnp
loop
or
testl
rorb
push
js
inc
fidivs
test
push
sbb
adc
jae
repz
out
xchg
dec
testb
aas
adc
out
in
mov
popa
cmp
sbb
es
xchg
out
cmp
push
xor
dec
and
sbb
rorl
sbb
mov
mov
roll
ss
daa
mov
out
aam
jb
add
jbe
clc
dec
pop
bound
xchg
imul
cwtl
fwait
rcrb
mov
ljmp
jns
bound
outsl
es
pop
push
fldl2t
fs
push
push
and
xor
adc
lea
mov
lods
cmp
pop
ja
leave
pusha
adc
ss
push
call
adc
sbb
in
lods
sub
into
mov
sbb
mov
ljmp
pushf
imul
nop
pavgb
stc
jge
mov
sti
pop
add
imul
hlt
xchg
sub
inc
popa
out
mov
int
jmp
push
jmp
mov
mov
or
test
inc
outsb
clc
jae
sbb
repnz
xchg
into
mov
inc
inc
mov
mov
data16
inc
test
cmpsl
lock
xchg
loope
lret
and
push
pop
aaa
adc
shll
dec
mov
jne
fiaddl
sahf
lret
inc
rol
mov
loop
adcb
loope
xorb
add
pop
jecxz
cmp
xchg
loop
xchg
mov
jge
imul
xchg
push
shrl
mov
pop
in
push
jnp
int
jb,pn
iret
push
mov
or
jnp
mov
cmp
rolb
and
jb
and
lock
cmp
cwtl
xchg
sub
jg
daa
jo
imul
pop
pop
pop
repnz
test
and
mov
cmp
mov
and
pop
rclb
sub
xchg
or
pushf
loope
adc
jo
xlat
cmp
or
notl
nop
mov
xorl
and
test
pop
loop
inc
adc
das
add
jp
lret
mov
or
addl
cmp
xchg
call
into
fdivrl
add
dec
shrb
and
cmpsl
fsubrl
mov
inc
std
cmpsb
inc
pop
pushf
into
mov
addr16
add
imul
loopne
out
nop
xchg
or
sbb
lds
lret
lret
jb
xor
jo
orl
mov
enter
mov
mov
outsb
pop
outsl
jns
sub
cmc
add
push
pop
int3
rorl
pop
or
or
in
cmp
mov
js
clc
cmpsb
xchg
sub
sbb
inc
mov
into
mov
mov
popa
and
cli
pop
or
daa
ds
push
push
insb
push
jmp
fstp
lret
mov
jb
mov
dec
push
loop
sub
pop
lods
addb
inc
lret
jge
xorb
cmc
jg
dec
out
mov
mov
fadds
or
mov
pop
andl
out
sbb
push
xor
add
push
out
lcall
fdivl
jecxz
mov
push
cs
push
repnz
jns
inc
stos
xchg
lods
mov
dec
in
insl
ja
mov
push
fiaddl
in
push
and
jg
xchg
aam
int
or
xchg
out
jl
jmp
mov
sub
shrb
pop
movsl
or
in
std
push
xchg
cmpxchg
pop
mov
xchg
sub
loop
dec
cmp
sub
les
jl
lds
xchg
jp
aas
pop
adc
add
dec
lods
rolb
addr16
push
call
cs
cmc
aas
addb
cld
outsl
push
call
out
and
jae
adc
sbb
jno
mov
or
pop
addb
popa
mov
ljmp
or
adc
pop
test
xor
xchg
mov
or
mov
fdivl
jmp
in
sbb
ljmp
cmpsb
cmp
push
dec
int3
or
repz
js
xchg
lock
or
adcb
or
vmovmskpd
inc
loopne
mov
outsb
mull
or
lea
imul
or
adc
mov
cmova
int
push
mov
mov
loopne
xor
cmp
add
ljmp
xor
adc
and
push
mov
ljmp
jbe
cmp
mov
les
push
leave
sbb
es
dec
in
pop
imul
mov
mov
inc
pop
imulb
stc
stos
xchg
or
loop
leave
xorl
ja
inc
data16
ds
or
mov
bound
out
loop
andb
insb
sbb
xchg
adc
dec
repnz
jle
call
sarb
clc
cmp
xor
adc
outsb
xor
das
notb
movsb
out
inc
pop
or
cmp
sub
fnstenv
sub
dec
pop
dec
enter
cmp
inc
fiaddl
cmp
inc
pushl
rcrb
pop
leave
loope
outsl
cmp
pop
dec
cmp
cltd
lods
loope
xor
mov
aas
pop
mov
clc
mov
imul
push
insb
mov
xlat
xor
pop
lret
shl
arpl
or
fldl
jnp
mov
mov
insb
sub
push
dec
sti
outsb
stc
pop
pushf
cmp
pop
dec
sti
mov
mov
cs
hlt
rol
in
rclb
cmp
in
push
pop
sahf
pop
cmp
mov
adc
inc
mov
jno
jecxz
jae
out
rcrb
sbb
out
imul
stc
or
sbb
call
pop
enter
jle
mov
adc
pop
fistpll
xchg
jp
mov
dec
adc
cwtl
cmp
fwait
xor
out
mov
les
cmc
jp
test
cmpsb
mov
shll
aam
sub
sub
pushf
push
js
mov
xchg
ret
xchg
nop/reserved
dec
dec
cmp
mov
mov
mov
push
cmc
je
cmp
stos
xchg
dec
push
pop
adc
subb
aas
or
addb
sub
mov
aaa
xchg
in
mov
or
nop
test
bound
outsl
fldt
push
pop
int
push
pop
xchg
insb
add
popf
dec
inc
iret
cmp
push
sar
mov
cmp
and
enter
inc
mov
xchg
mov
lret
addr16
in
xchg
mov
sub
iret
mov
dec
dec
aaa
mov
ja
mov
pop
mov
adc
test
addl
and
inc
push
fwait
sbb
pop
fnstcw
fbld
xorb
sub
xor
mov
icebp
or
xorb
xchg
add
xchg
sub
cltd
clc
scas
mov
jle
mov
lcall
lret
add
jmp
push
inc
lods
xchg
xor
mov
mov
add
and
fistpll
mov
adc
push
jg
mov
repz
sbb
push
mov
mov
bound
popl
adc
or
push
outsl
pushf
xor
mov
insl
cld
es
mov
in
clc
ja
xchg
cltd
scas
cltd
je
mov
xchg
sbb
aam
sarb
scas
test
jg
cmp
nop
ror
lret
pop
sbb
dec
iret
fsubr
das
pop
lock
pop
inc
xor
loop
idivl
fxam
xchg
adc
mov
inc
daa
enter
jae
pop
add
and
das
mov
ljmp
das
dec
pop
insl
rclb
sub
imul
push
inc
dec
jno
jl
je
and
push
movsl
das
inc
fdivl
dec
repz
mov
xchg
js
sub
in
mov
jecxz
pop
xchg
push
nop
cmp
or
inc
test
adcb
cli
int
sbb
pusha
into
inc
mov
xor
mull
push
fstpt
jg
dec
pushf
out
sbb
mov
aaa
pusha
push
sbb
mov
or
mov
mov
xlat
cmp
mov
movsl
lea
adc
stos
movsl
popa
sbb
push
lock
adc
sbb
xor
mov
jae
jnp
in
inc
mov
es
mov
mov
mov
in
leave
loope
jmp
xchg
lods
popf
and
test
ljmp
cmp
inc
adc
test
and
dec
xor
hlt
add
sbb
add
dec
pop
daa
inc
in
cmpsb
imul
inc
sbb
push
sbb
cmp
jmp
xchg
clc
iret
xor
add
in
push
sub
cmp
loopne
mov
pop
mov
jmp
data16
ds
in
ret
pop
adc
cmc
or
jb
jns
dec
ds
add
in
movsl
cmp
push
xchg
lcall
lock
shrb
dec
push
pop
js
int3
into
cmp
leave
rorl
mov
mov
jo
pop
sti
jg
cmp
jmp
aad
repz
enter
popa
mov
jns
mov
shlb
cwtl
cltd
outsb
jns
mov
test
das
cmp
loope
jg
adc
sub
push
insl
out
test
movsl
pop
inc
lcall
sbb
ret
push
fs
push
in
and
inc
inc
sbb
sbb
loopne
cmp
cmp
add
ret
mov
or
inc
pop
sub
shrl
pop
movsb
mov
push
outsl
repz
pop
sub
daa
mov
push
out
push
arpl
add
out
sub
jmp
mov
xchg
add
xor
mov
mov
jns
leave
aad
inc
orl
decl
pop
jno
test
jle
cli
leave
pop
mov
xor
push
add
out
bound
adc
sbb
xorb
popl
inc
inc
ss
and
aaa
push
rolb
cmp
lea
popf
push
test
fcomps
pop
adc
xchg
mov
pop
icebp
or
mov
mov
stos
cmp
sbb
in
xchg
sti
lcall
mov
pop
movsl
mov
adc
lcall
jb
xor
shrb
xchg
cld
cmp
xchg
insl
idivl
jo
xor
adc
enter
ss
or
mov
pop
push
pop
int3
test
scas
pop
pop
lods
outsl
ljmp
repnz
out
les
mov
adc
rcl
aaa
into
push
jbe
gs
push
in
fimuls
push
mov
pop
jo
add
test
es
or
divl
aad
call
xor
insl
push
add
adc
aam
fimull
sbb
andl
jns
add
shl
adc
xor
cmp
sarl
pop
sarb
shrl
lret
jns
add
sub
call
adc
lods
inc
pop
lret
dec
ficoms
imul
shrb
and
scas
lcall
fiaddl
or
and
test
push
xchg
jns
mov
sub
mov
pop
fsubrp
push
push
inc
fsubrp
xchg
cmc
mov
pcmpgtd
inc
push
adc
ret
mov
and
dec
xor
iret
mov
push
test
arpl
mov
add
jno
dec
lret
ljmp
cmp
add
add
into
cmc
aas
mov
pop
jnp
push
jo
popf
mov
mov
cs
mov
shr
mov
sbb
cmp
sbb
ja
lods
sub
add
push
testl
rol
xchg
lret
scas
leave
cli
js
sahf
sub
lcall
mov
or
jns
xchg
sub
out
cmp
stos
mov
jecxz
sub
data16
adc
rcrb
and
xchg
imul
std
loop
jbe
shll
mov
sbb
sahf
shll
lea
adc
ret
xchg
in
nop
push
sti
push
lret
xlat
ds
movsl
ja
inc
push
sub
pop
decb
ss
std
cltd
ret
pop
fwait
mov
aam
xchg
and
popl
stos
inc
test
cltd
sub
sub
dec
pop
call
movsb
les
test
bound
clc
sub
cmpsb
ds
fmuls
and
in
jnp
faddl
jne
xlat
imul
jo
xor
sbb
rcrb
and
sub
sub
jp
jno
jg
aas
jns
test
push
icebp
push
add
xchg
aam
movsb
cmp
dec
xor
call
fldenv
nop
xlat
jo
or
or
pop
cmp
idivl
in
js
push
aas
out
sub
inc
add
cmpb
nop
data16
push
inc
mov
int
push
sti
and
call
inc
push
mov
fistps
xchg
cli
inc
test
and
cltd
test
cmp
mov
xchg
int3
fnstsw
fs
aad
mov
fs
mov
scas
cmpsl
je
into
and
dec
xlat
dec
rcl
iret
mov
pop
je
mov
cwtl
in
adc
jbe
fcoml
mov
inc
inc
outsl
mov
cmp
push
cmpl
rcrb
cmpsl
cmc
xorb
shlb
enter
or
ss
imul
cmp
xor
rclb
mov
hlt
je
mov
inc
adc
in
xchg
insl
orl
jg
gs
push
das
decl
stos
inc
ja
mov
dec
and
push
xlat
jbe
imul
push
xor
cwtl
insb
inc
dec
mov
mov
xchg
sti
cmp
lea
inc
adc
loope
test
mov
and
sbb
jp
jo
pusha
rcrl
xchg
jmp
mov
push
es
ds
dec
adc
push
and
or
pop
daa
stos
cmp
ret
filds
pop
dec
arpl
cwtl
sub
ds
hlt
in
fmul
adc
mov
add
js
mov
jae
cmp
add
jl
dec
lods
jo
xor
dec
popf
notb
lret
mov
push
das
push
sub
jae
jp
add
mov
ret
mov
xchg
mov
rorb
mov
jp
push
add
jbe
jo
adc
in
jae
adc
add
add
out
pop
ret
push
and
add
cmp
push
leave
je
pop
ret
pop
mov
outsl
je
stc
pop
pop
sub
add
pop
das
adc
insb
repz
jno
mov
lock
xor
push
adc
int3
cmp
sbb
les
sbb
push
inc
sub
inc
in
xchg
or
aas
sarb
pop
out
in
dec
jno
repnz
rclb
rcrb
in
pop
inc
cwtl
xor
arpl
xchg
push
cmpsl
mov
pop
inc
sbb
or
ljmp
sbb
adc
insb
cmp
ret
in
test
push
dec
fisttps
pushf
inc
jmp
andl
lods
mov
mov
xchg
das
cmp
jae
cli
cwtl
mov
push
shrl
fsubrs
pop
sub
push
and
ficompl
pop
nop
push
cmpsb
inc
mov
pop
neg
and
cltd
mov
push
jns
fwait
xor
in
imul
insl
call
xchg
sahf
popa
jp
sub
jecxz
and
jo
inc
and
aaa
push
dec
push
fcom
icebp
test
out
cwtl
push
jp
xchg
stos
inc
pop
dec
int3
inc
cmp
jge
ret
nop
sbb
mov
pop
std
pushf
mov
xchg
nop
mov
addr16
jecxz
les
add
mov
negl
fldcw
jge
push
push
jno
pop
jnp
add
movsb
icebp
cld
xchg
shl
cwtl
xchg
sbb
mov
aam
adc
ret
pop
and
dec
loope
loop
gs
ss
cmp
fsubl
push
dec
idivl
sub
push
cmp
mov
xchg
aas
adc
loope
xchg
mov
out
les
shrl
jle
xchg
jns
add
jnp
movsl
inc
pop
adc
pop
das
mov
bound
into
inc
xor
fmuls
sub
and
push
mov
mov
leave
or
cs
lret
push
or
fsub
movsb
cmp
sbbl
cli
pop
bound
movsl
xchg
jle
jl
xlat
shr
push
mov
mov
test
adc
xchg
ds
ds
sbb
imul
shrb
mov
push
xchg
mov
loopne
cmpl
xorl
sbb
cmp
xchg
cli
int
pop
stos
mov
xor
shl
sahf
loopne
mov
sub
mov
icebp
add
sahf
cs
pop
idivl
cmc
mov
jbe,pt
popf
stos
hlt
xchg
in
sub
cld
ja
test
leave
add
adc
push
aad
mov
mov
jnp
cmpsl
jp
fs
sahf
and
in
stos
push
inc
push
data16
fimuls
xor
add
jl
stos
adc
aaa
std
inc
push
xor
mov
cwtl
mov
adc
sbb
pop
rorb
imul
adc
roll
mov
xor
sti
fs
sub
adc
cld
enter
cwtl
jae
cltd
dec
dec
cmp
and
xor
push
hlt
mov
pusha
jp
cld
gs
loopne
sbb
mov
lcall
xchg
sub
mov
test
xchg
jnp
adc
out
dec
jecxz
dec
movsb
cmp
loop
pusha
mov
ret
mov
xchg
ret
int
mov
inc
out
in
popf
pop
adc
mov
jo
flds
adc
sar
xor
and
fisubrl
jle
dec
fwait
out
mov
test
adc
fcoms
cmp
sahf
sbb
nop
or
enter
leave
lret
jge
push
mov
pop
xchg
out
popf
pop
imul
outsl
test
negl
movsl
mov
mov
js
dec
inc
adc
push
mov
out
and
lcall
stc
test
pop
nop
push
adc
xor
dec
insl
loopne
push
adc
ficoml
test
inc
outsl
push
in
mov
lods
lret
mov
adc
fldenv
mulb
sub
or
dec
stos
nop
cmp
mov
push
call
inc
jno
adc
xor
adcl
sub
xorl
sbb
push
inc
ss
dec
jecxz
inc
push
sbb
and
mov
roll
pop
repnz
inc
mov
jns
push
ds
insb
sbb
pop
mov
imul
insb
cmp
dec
hlt
cmpsl
rcrb
dec
cmpsb
movsb
fucomip
cwtl
push
sbb
add
jmp
js
mov
lahf
or
dec
mov
jae
jecxz
std
inc
adc
add
mov
pop
mov
loope
mov
lods
subb
cli
out
sub
xchg
sbb
scas
shll
mov
cwtl
leave
jo
stc
jns
mov
loopne
mov
notb
jb
out
fnstenv
push
xchg
jae
sub
loope
sbb
mov
fpatan
int3
loopne
inc
mov
cmp
push
insl
cmp
mov
mov
adc
aaa
add
ljmp
cli
daa
add
mov
xor
fidivl
pop
fbstp
fbstp
das
add
mov
decl
and
adc
mov
pop
mov
cmp
ss
dec
popf
cmp
je
into
fdivrl
and
sbb
dec
lods
aad
into
pop
cmp
mov
adc
pop
mov
xchg
sbb
and
lds
out
pop
fstpl
mov
mov
and
add
jae
test
inc
fsubl
inc
mov
sub
addr16
push
xlat
lret
gs
rcrl
out
mov
fwait
adc
inc
mov
push
je
pop
mov
mov
mov
mov
stos
aam
fstpl
rep
mov
sbb
sbb
jl
sahf
out
bound
sbb
fldcw
int3
outsb
add
dec
mov
mov
sub
xchg
in
rorb
leave
xor
movsb
push
jbe
jne
les
fsubrp
test
jg
push
pop
cltd
cmp
ret
dec
je
pop
mov
pop
push
idivb
rolb
scas
add
mov
fiaddl
push
jne
xorl
cmp
mov
aam
dec
dec
mov
xchg
insl
pop
mov
shrb
add
fwait
orb
or
loopne
call
jno
hlt
mov
mov
fisttpll
push
push
shlb
hlt
lret
jne
lret
mov
out
adc
subl
ret
sbb
mov
out
cld
xchg
loope
mov
aad
ret
adc
jmp
fcmovnb
shl
xchg
mov
fdiv
sub
shrl
out
dec
fnstenv
pop
xchg
mov
in
ss
inc
push
in
inc
lods
inc
loope
mov
and
add
push
and
push
ja
mov
adc
stc
pop
mov
int
mov
sbb
lods
test
sbb
mov
jmp
adc
mov
into
lahf
inc
add
sub
in
inc
stos
cmpsl
nop
cltd
sub
jns
jl
push
xor
pop
jle
jnp,pt
mov
jp
xor
sbb
jmp
xchg
mov
rcr
xchg
push
shl
jnp
pusha
or
loope
leave
mov
jae
icebp
dec
rcll
sti
mov
rol
cmp
inc
ret
aad
stos
and
xor
jae
addr16
lret
mov
cmp
add
sub
fs
dec
mov
mov
jo
push
mov
mov
inc
xor
xor
inc
sti
inc
fisubrl
arpl
adc
lcall
pop
mov
inc
stos
dec
sbbb
ret
adc
xlat
add
cmc
and
mov
loope
sub
rcll
lea
fs
sbb
mov
shrl
dec
imul
insb
js
ffree
pop
ja
jae
jle
loopne
mov
push
xchg
xchg
sbb
mov
lods
cmp
loopne
sbb
ret
ret
dec
push
push
xchg
rcrl
mov
xchg
add
lods
sbb
test
int
fmulp
push
jbe
or
push
pop
cmp
adc
pusha
gs
movsl
mov
aas
dec
jp
mov
ret
add
xor
mov
iret
sbb
fwait
cmpsb
mov
vmovhps
jno
stc
add
das
in
push
mov
in
in
pop
outsb
cmp
movsb
add
xchg
mov
cltd
lahf
cmc
inc
int
int3
repz
xchg
mov
sbb
jne
mov
fcoms
pop
mov
arpl
xchg
inc
dec
hlt
jmp
sbb
cmc
and
cld
sub
xor
stos
add
sbb
mov
pop
insl
mov
lret
aas
jmp
lcall
push
stc
push
loop
fs
ss
inc
loope
aaa
and
dec
and
cmp
xor
data16
mov
add
cld
rcrl
xrelease
fimull
stos
das
adc
inc
push
data16
int
add
pop
std
enter
mov
ss
pop
xor
inc
cmp
fcmovnb
shlb
loop
fdivrs
and
mov
insb
fcoml
add
inc
std
hlt
xchg
pop
test
mov
popf
push
enter
nop
rol
jl
jno
or
cmp
sbb
sbb
push
popf
inc
insl
pop
rcr
adc
dec
mov
das
dec
adc
add
and
hlt
das
fimuls
jecxz
inc
lahf
mov
push
fldenv
test
inc
lret
gs
mov
push
pop
lock
xchg
mov
fsubs
bound
lret
cmc
or
je,pn
es
mov
aas
js
xor
mov
pop
jnp
sbb
bound
lods
adc
fisttps
shlb
lock
orb
aam
or
lahf
jecxz
jge
call
mov
loope
push
cmp
dec
push
inc
loop
pop
inc
pop
mov
cmpsb
xor
adc
das
mov
xlat
push
out
xlat
not
inc
aad
xchg
mov
mov
or
rorb
jne
mov
or
out
pop
mov
scas
mov
jae
xchg
dec
or
and
lods
and
inc
mov
es
aas
lods
mov
adc
push
sub
and
sbb
jge
mov
lahf
xor
into
ss
stos
sbb
gs
xchg
mov
pop
cmpsb
push
mov
ret
outsl
test
rcrb
stos
mov
cwtl
jb
sarb
les
movsb
and
xchg
mov
jmp
cmp
push
idiv
mov
push
pop
arpl
aas
lahf
push
lods
jle
add
push
jnp
lcall
cmp
outsl
cmc
inc
ja
xchg
stos
imul
clc
in
stos
sbb
jns
xor
xchg
or
mov
mov
ret
jmp
adc
lds
mov
cmc
call
test
mov
repnz
fs
fwait
icebp
cmp
mov
test
xchg
fwait
push
and
dec
and
adc
and
test
ret
in
push
xor
or
mov
mov
inc
ret
add
shll
int3
mov
adcb
fwait
test
aam
mov
maxss
push
mov
pushf
inc
xor
cmp
and
stc
inc
pop
popf
cld
pop
in
loop
inc
bound
push
in
aad
and
scas
jmp
ja
test
pusha
mov
mov
ret
pop
and
pop
jecxz
jge
out
add
cmp
inc
es
cmpsl
pop
movsl
pushf
push
lods
int
in
andl
out
sub
lret
or
pop
mov
pop
fnstsw
lahf
mov
mov
sub
mov
xchg
add
and
cmp
pop
mov
fs
testl
test
daa
inc
jae
xor
aaa
mov
jmp
js
pop
lret
pop
adc
xchg
mov
cld
mov
mov
sbb
lea
dec
inc
leave
sahf
xor
call
add
and
mov
add
and
scas
mov
push
ja
cmpsl
sub
scas
mov
mov
dec
cltd
fwait
xchg
xor
cmp
imul
lret
sbb
dec
xchg
cmp
inc
xorb
mov
ret
cmpsb
cmpl
sub
stos
loop
pop
enter
xchg
pop
int
mov
pop
inc
test
leave
inc
cmp
adc
sbbb
push
lahf
into
mov
stc
test
ljmp
xor
arpl
push
pop
nop
lods
into
sti
repnz
out
loop
mov
cmpsl
jae
sbb
movsb
pop
icebp
faddl
mov
sbb
cmp
inc
dec
lock
lock
hlt
scas
stc
cmp
inc
lods
and
fxch
mul
scas
cmp
stos
dec
popa
sbb
adcb
cmpsb
clc
in
cmp
mov
ret
pop
pop
jb
mov
cmp
lcall
and
dec
jb
push
sub
std
push
jno
imul
dec
fstp
mov
cmpl
bound
gs
pop
jmp
add
and
rol
dec
cmp
mov
aam
xchg
imul
jne
mov
loop
inc
fsubrs
mov
and
pop
mov
pop
sub
repz
shlb
mov
jp
mulb
push
jb
pushf
mov
ljmp
xor
into
enter
stc
jecxz
inc
lock
xor
mov
mov
jmp
jmp
or
repnz
add
and
test
sub
sbb
or
outsl
xchg
adc
dec
mov
sbb
push
sbb
in
stos
cltd
jnp
jo
subl
or
mov
xor
out
adc
out
sub
or
and
inc
pushw
daa
in
cmp
xchg
xchg
pop
cmc
jno
mov
xor
pop
jnp
call
cmp
sub
dec
fbld
shr
or
adc
inc
ret
lods
data16
xchg
or
mov
sbb
iret
loope
shrl
enter
subl
or
push
pop
mov
in
and
jp
and
or
pop
jge
daa
xchg
popf
test
mov
jp
inc
xchg
mov
daa
sbb
rclb
ret
pop
mov
loopne
push
mov
sbb
stc
test
and
aas
or
sbbl
pop
out
mov
aaa
wrmsr
and
sbb
psraw
test
fstps
test
scas
sub
mov
sbb
into
push
icebp
xchg
call
cs
and
int
stos
xchg
cmp
pushf
cld
out
movsl
call
in
pop
cmpsb
testb
into
push
lahf
mov
push
shl
aam
xor
aad
iret
leave
pushf
push
inc
or
cmpsl
inc
push
out
dec
mov
lods
cmpsl
ljmp
inc
jecxz
push
pop
pop
cmp
scas
subb
push
xlat
outsl
scas
ficoml
sbb
add
testl
cs
pop
ds
fnstsw
dec
add
ret
lods
jg
sahf
arpl
xchg
mov
arpl
daa
jp
cwtl
add
arpl
mov
cmp
or
pop
call
popa
test
jae
xchg
fisttps
jmp
mov
popf
jb
iret
push
ret
lods
mov
fisubrs
push
pop
jno
int
cmp
xchg
xor
push
icebp
jl
cmp
sub
les
xchg
ljmp
xchg
mov
cmpsb
dec
inc
lock
loop
jmp
xor
pusha
xor
loop
insb
movsb
mov
mov
imul
add
mov
push
inc
repz
xchg
mov
xlat
push
inc
pop
mov
xor
mov
cmp
ret
pop
into
pop
stc
popa
xor
push
repnz
xlat
cmp
mov
ret
arpl
and
stc
push
sub
lret
pusha
les
out
popf
fwait
xor
out
cmc
mov
jbe
enter
scas
jp
int
dec
fwait
dec
popa
dec
inc
jmp
jb
int3
scas
repz
or
dec
lahf
test
iret
adc
push
jno
cmp
enter
inc
fwait
insl
xrelease
xor
xchg
dec
dec
adcl
mov
fs
scas
insb
andl
or
testl
ret
adc
in
push
dec
repz
pop
in
mov
mov
pop
mov
push
mov
push
mov
push
cli
pushf
aaa
pop
push
mov
add
lods
pop
xor
fcmovb
daa
add
int
xor
mov
cmpsl
aas
adc
roll
enter
call
test
or
in
mov
cs
inc
xor
mov
adc
lret
scas
clc
in
mov
adcb
sub
or
jb
dec
mov
in
jmp
ficoms
out
or
jecxz
lods
insl
ja
inc
cs
lock
xchg
aad
mov
adcl
pop
and
xlat
cld
lcall
jne
xor
and
fcoml
das
lods
adc
addb
cmp
mov
or
mov
ljmp
jnp
xchg
jne
les
pop
insb
or
pop
stos
dec
mov
xchg
lret
movsl
push
incl
scas
int
jbe
cmpsl
xchg
pop
cmc
popf
stc
rolb
push
xchg
mov
insl
sahf
xor
jmp
leave
in
gs
stos
mov
lahf
notl
jns
push
stos
or
inc
fs
add
adc
leave
sbb
push
leave
sti
pop
cmp
aas
mov
jmp
pop
jl
sub
pop
sub
stos
and
rorb
mov
sub
cld
movsl
jne
mov
rcrl
js
cmp
lcall
ret
repz
add
xchg
in
data16
icebp
adc
cmp
imulb
mov
pop
adc
sar
sub
scas
lods
or
lea
mov
ljmp
fistpll
and
xchg
in
adc
fxch
fwait
sti
or
or
xor
xor
dec
dec
xlat
dec
js
pusha
stos
in
hlt
xchg
sbb
scas
and
fsubrs
mov
mov
daa
push
sbb
stc
or
jae
sbb
dec
inc
jbe
sahf
push
xor
daa
push
cli
scas
decb
mov
mov
or
and
jno
push
push
cmpsl
stc
fdiv
jo
les
sbb
out
pop
fucomp
lret
aas
dec
iret
xor
mov
lret
into
iret
sbb
jbe
gs
lcall
in
mov
movsl
mov
or
mov
into
add
inc
mov
xchg
adc
ds
mov
sbb
xor
mov
inc
jecxz
mov
jecxz
push
add
into
inc
dec
in
insb
int3
and
aam
das
mov
push
sbb
sub
into
das
xor
dec
or
lods
int
fdivrl
stos
popa
subl
dec
dec
cwtl
jbe
icebp
dec
mov
or
addr16
fcoms
sbb
leave
xchg
sahf
movsb
into
inc
push
arpl
pop
sub
or
clc
dec
inc
mov
rol
push
test
cmc
and
loop
call
or
add
cmpb
aam
jmp
pop
fcomps
cmp
cwtl
test
adcb
imul
dec
cmpsl
sbb
arpl
sbb
dec
dec
insb
int3
insl
sahf
jnp
mov
lods
movsl
call
stos
pop
cli
jns
cmp
test
notl
inc
popf
pop
ja
ljmp
and
adc
jbe
je
mov
shl
xchg
mov
pop
mov
push
mov
or
cmp
jo
cmp
inc
push
sub
pop
cmp
hlt
push
dec
in
roll
gs
mov
or
xchg
lret
popf
nop
inc
cmc
test
nop
jmp
mov
adc
lret
clc
add
and
xor
inc
inc
cmc
cmp
mov
andb
frstor
mov
mov
mov
mov
cmpsl
jle
jae
lcall
push
mov
daa
mov
or
pop
mov
test
mov
mov
jbe
lds
mov
lock
gs
les
jbe
xchg
sub
in
sbb
push
fdivs
lea
jo
fnstcw
mov
das
jb
or
cmp
lret
push
fucom
sarl
cmp
ss
sub
or
outsl
xchg
mov
fidivl
pop
outsb
pop
xchg
and
inc
mov
fwait
push
sub
xor
or
cmp
imul
xor
movsb
xchg
cmp
out
out
movsl
icebp
cmpsb
and
imul
sub
enter
cmp
pop
mov
inc
adc
clc
push
mov
fsub
aaa
insl
outsl
adc
mov
inc
inc
inc
divw
dec
mov
cmpsl
nop
push
mov
pop
adc
cs
mov
pop
movsl
mov
dec
cs
push
jne
loopne
aaa
ss
inc
out
hlt
frstor
sub
xchg
cmp
incl
sbb
es
cld
imul
xchg
jne
in
jg
stos
add
mov
sahf
sub
fists
xor
sbbb
popa
adcl
bound
rclb
xor
je
outsb
and
jb
fstps
fsts
lret
arpl
xchg
repnz
and
xchg
dec
add
push
call
mov
ljmp
jp
push
and
xchg
or
imull
sbb
hlt
insl
shrb
imul
add
xor
test
fdivrl
loop
pop
cmp
arpl
or
xchg
loop
sub
hlt
popa
mov
inc
cmpsl
cmp
sarl
add
int3
and
cmp
hlt
in
dec
push
les
fisubrs
int3
subl
fiadds
je
das
push
xchg
mov
sahf
nop
lret
sub
cmc
push
adc
mov
out
xor
jno
stos
sbb
mov
enter
xor
jmp
push
xchg
pusha
jp
sbb
js
mov
incl
mov
ret
push
push
div
das
addr16
sarb
xchg
sub
test
inc
pop
adc
test
repz
in
sub
add
jecxz
sub
test
ret
pop
sub
pop
divb
loope
push
inc
sub
mov
call
sbb
sbb
pop
or
in
repz
mov
mov
clc
jno
xchg
mov
and
jl
jae
push
lods
jl
dec
leave
outsl
xchg
xor
popf
mov
nop
outsb
out
mov
lds
lods
or
or
fists
pop
push
or
jb
mov
hlt
test
stc
nop
cwtl
leave
test
jl
jo
adcl
addl
test
lods
add
test
push
add
xchg
scas
add
fdivl
inc
stos
dec
add
cli
xchg
mov
xchg
pusha
arpl
push
in
lods
enter
int
dec
push
fimuls
ficoml
lods
inc
and
lret
jg
popf
mov
loopne
mov
cwtl
inc
nop
rolb
lret
lds
cwtl
lods
sbb
fimull
adc
inc
sub
jae
xor
pop
push
test
sub
push
mov
pusha
jne
inc
mov
push
push
mov
sub
into
mov
mov
ja
imul
in
jne
xchg
sarl
push
pop
icebp
addl
xchg
out
int3
or
std
xchg
in
add
cli
in
push
test
ja
fs
sahf
fistl
in
jge
in
dec
movsl
aaa
or
mov
sbb
outsl
cld
loope
iret
loop
shlb
out
add
inc
cmp
andb
addb
or
das
mov
mov
xlat
inc
fmul
xchg
mov
push
inc
fidivrs
and
int
dec
inc
mov
sbb
and
outsl
adc
call
xchg
pop
div
loope
mov
inc
loop
cmc
dec
push
mov
mov
inc
fdivs
aam
stos
xorl
loopne
jl
jg
lds
loop
push
sub
addr16
imul
lahf
or
dec
pop
icebp
mov
mov
jl
out
add
incb
lahf
push
stos
cmp
outsl
stc
mov
inc
sbbb
sahf
mov
in
jno
cli
pop
outsb
jb
adc
orl
pop
ds
pushf
std
inc
in
test
lods
je
out
fwait
push
fnsave
xchg
imul
jp
ds
fdivs
add
cs
xchg
insb
xor
scas
inc
iret
xor
rclb
sub
push
sbbb
inc
out
stc
out
dec
in
mov
insl
dec
ret
or
sub
mov
sti
repz
lods
add
and
into
xchg
pop
dec
mov
fidivs
adc
iret
faddl
add
xor
mov
adcl
cmp
jo
call
daa
inc
neg
adc
fisubrs
addr16
iret
jl
outsl
sub
psubq
or
sbb
or
outsb
push
sub
xor
mov
push
jge
lret
daa
jle
pop
jg
jbe
fmull
pop
dec
sbb
xchg
insb
pop
push
lret
dec
outsb
mov
cltd
adc
ljmp
xor
fimuls
stc
cmp
gs
imul
push
and
int3
mov
xchg
xchg
xor
mov
out
pop
xchg
std
jp
test
mov
or
mov
lods
and
adc
leave
add
mov
pop
fs
jecxz
test
mov
mov
mov
sti
aaa
int3
icebp
fdivl
xor
addb
adc
test
loop
das
and
aad
nop
pop
mov
test
sub
pop
jmp
sub
dec
mov
jne
subl
arpl
inc
or
xchg
pop
pop
mov
ficoml
dec
aam
scas
mov
call
je
bound
stos
inc
mov
cmp
addl
popa
into
jecxz
xlat
outsb
xchg
add
push
add
mov
pop
mov
adc
into
mov
fs
pop
mov
sub
icebp
movsl
mov
sbb
imul
mov
in
pusha
outsl
out
cli
jmp
xor
sub
daa
jle
test
dec
or
test
adc
fwait
push
add
sarb
loop
jl
inc
loopne
jecxz
push
mov
ljmp
icebp
inc
cmp
out
enter
push
and
adc
stc
sbbb
sub
mov
jecxz
fcomps
add
fstl
push
inc
jmp
fwait
mov
sti
cli
xchg
sub
dec
adc
sbb
dec
mov
add
push
test
call
dec
arpl
dec
push
inc
fsubrl
jmp
popf
dec
sbbl
inc
js
and
call
out
inc
sub
push
js
enter
out
inc
pushf
jle
outsl
jge
enter
testl
pop
shl
push
cmp
std
pop
adc
inc
or
mov
test
std
jg
cld
das
in
pop
outsb
sbb
mov
mov
jecxz
jg
outsl
sarb
mov
shl
pop
xchg
push
sbb
adc
testl
out
adc
addb
push
mov
dec
repnz
icebp
bound
adc
lods
jo
outsb
andb
sbb
jne
sub
in
push
shrl
sbb
push
sub
lods
ljmp
pushf
or
mov
es
mov
fwait
jg
mov
ljmp
popf
or
in
test
shrl
out
lret
das
jae
mov
lds
in
inc
xor
add
cmpsb
and
sti
or
movsl
jmp
push
sbbl
std
loope
test
sahf
xor
ljmp
inc
loope
xor
mov
xchg
push
jo
push
sub
pop
adc
imul
push
dec
ja
repz
fdivrl
and
push
dec
enter
jo
jmp
or
jle
outsl
mov
ret
repz
not
insb
sub
inc
push
jb
repz
jb
ss
push
inc
xlat
mov
and
mov
test
js
cmc
test
add
out
cmc
pusha
loop
cmpsb
bound
xchg
cmp
xchg
add
push
cmc
addr16
xor
jl
inc
push
ss
xchg
inc
movsb
inc
lock
cmp
incl
dec
and
daa
xchg
xchg
add
sti
in
inc
mov
xchg
imul
popf
cli
or
sub
lahf
push
mov
inc
sub
push
cltd
movsl
gs
lret
sbb
stos
call
mov
add
push
in
movsb
leave
lods
mov
xchg
aas
or
dec
mov
and
or
out
out
test
in
xor
cmp
add
lret
fildl
add
lock
les
jo
jne
ljmp
popa
out
xchg
repz
pop
insl
inc
lods
cs
ljmp
lahf
mov
lock
stc
inc
push
lcall
inc
xor
lods
adc
push
fwait
lods
push
loope
add
pop
mov
adc
mov
jbe
shlb
sbb
into
jo
movsl
cmp
dec
sti
xchg
aas
xchg
testl
and
js
jo
sub
ds
test
js
loope
leave
adc
dec
add
in
cmpsb
inc
inc
fnstenv
mov
addb
cmpsl
ds
fdivl
fldenv
lret
int3
or
daa
shll
mov
ret
jl
mov
jl
and
mov
or
pop
lea
mov
jae
inc
ret
jecxz
and
aad
add
jmp
pop
icebp
jno
pushf
and
ja
in
stos
mov
fdivl
jnp
clc
pop
scas
adc
jns
inc
test
jbe
lret
popf
fs
out
push
push
and
mov
clc
xor
testb
mov
xchg
mov
sub
das
test
add
sub
adc
nop
leave
cli
fstp
inc
in
imul
aaa
ds
cmp
and
jne
sub
mov
sbb
repnz
inc
fsub
push
push
mov
xlat
push
lods
enter
aaa
pop
lods
rcl
dec
pop
repz
mov
pop
pop
push
lods
jle
daa
jmp
dec
add
xchg
into
fdivp
push
push
sub
dec
add
mov
out
pop
ret
outsb
push
ficompl
lret
fisubl
jns
fs
xor
cmpsb
jnp
sbb
loop
pop
mov
div
nop
imul
or
push
test
cmpsl
nop
add
in
jge
push
test
jl
xor
xor
outsb
lds
add
in
icebp
not
outsb
xlat
inc
test
mov
lods
mov
push
cmp
mov
mov
jns
scas
xchg
xchg
fisttps
jle
nopl
mov
lea
stos
add
cmp
xchg
in
and
fdiv
lock
and
pop
fdivs
and
cmp
add
xchg
fdivs
rorb
push
mov
icebp
sbb
xor
lods
cs
shlb
xorl
push
adc
add
stos
aam
stc
in
cmc
xor
mov
xchg
mov
cld
push
gs
inc
xchg
and
aaa
mov
push
cmpsl
add
add
adc
sub
cmp
mov
cmp
insl
and
jae
sbb
xchg
push
aam
pop
repz
lods
mov
inc
sub
sbb
and
dec
inc
cmpsb
mov
adc
jmp
jb
push
je
xchg
dec
dec
dec
and
cmpsl
cmp
gs
popf
filds
lds
imul
pop
roll
push
mov
dec
dec
xchg
addr16
xchg
push
cmp
mov
xchg
jb
push
dec
lahf
or
jg
dec
test
mov
add
in
push
aam
fucomi
outsl
dec
mov
mov
mov
pop
xchg
pop
lods
js
jae
or
mov
push
ret
fstpl
adc
ja
jp
cltd
out
cmc
sub
outsb
adcb
icebp
shll
int3
lret
lret
stos
inc
cmc
sbb
jl,pt
out
test
rclw
pop
jmp
rol
inc
and
clc
push
jno
pusha
jae
xchg
inc
orl
ss
add
out
das
add
inc
pop
xlat
jne
mov
jns
inc
popf
jge
fldcw
or
adc
fstl
xor
pop
popa
lcall
aas
movd
in
mov
mov
xor
into
mov
lea
repnz
in
inc
mov
andl
push
sub
xchg
add
fdivs
mov
inc
popf
adc
jno
pushf
xor
arpl
inc
pusha
ljmp
add
out
mov
adc
rcr
cmpsb
cmp
xchg
jge
and
xor
stc
mov
dec
or
add
mov
pop
push
fidivs
jp
ds
sbbl
and
xchg
and
inc
scas
data16
adc
jbe
cmpsb
dec
fisubrs
pop
sbb
xlat
adc
movsl
lret
repz
inc
mov
pop
into
sahf
ja
or
sarb
aad
cwtl
lret
shl
push
mov
push
inc
jo
mov
jne
fnstsw
xchg
test
gs
gs
mov
pop
dec
jbe
mov
add
dec
cli
xlat
xchg
xor
inc
mov
xlat
cmc
lret
loop
sbb
sahf
fsub
clc
stos
cmp
jno
fbld
mov
mov
cltd
leave
inc
pop
add
or
test
push
notl
fscale
in
cmpsl
test
jecxz
jg
sti
pop
cmc
xor
bound
and
xor
sub
mov
in
shlb
mov
stc
push
sub
pop
mov
in
mov
adc
xchg
cmp
in
xchg
mov
call
sbbl
movsl
xchg
bound
cmc
rcl
xor
and
popf
jno
xor
cmp
int3
fnstcw
adc
filds
mov
fistps
dec
pop
xchg
mov
push
mov
push
adc
mov
and
popf
hlt
mov
fildll
push
popf
lds
xchg
rcll
insl
les
stos
mov
int3
pusha
ss
aas
push
inc
aad
aam
cmpsb
jns
push
ret
bound
xchg
mov
jg
push
mov
push
daa
jl
cmp
and
jbe
mov
xchg
sub
int3
aam
stos
mov
push
cmp
shll
and
xchg
jo
sahf
sub
mov
or
std
mov
iret
pop
adc
test
push
lret
lretw
cwtl
daa
mov
loope
dec
out
test
push
cltd
test
test
jmp
xor
mov
push
inc
fwait
loop
push
lea
int
pusha
in
clc
push
sbb
mov
fisttpll
leave
pop
xchg
add
mov
xlat
cmp
loop
pop
jbe
mov
mov
lcall
adcb
popf
pop
push
sbb
or
out
jne
fsubrp
andb
or
idivb
inc
mov
loope
push
in
aaa
or
xchg
or
negl
out
popf
clc
and
mov
insl
out
sbb
cmp
mul
mov
xor
nop
cmp
xor
aaa
dec
xchg
jecxz
dec
loop
add
es
imul
inc
sub
repnz
pop
inc
sbb
stos
ja
neg
mov
cmp
mov
mov
repnz
pop
adc
js
dec
imul
hlt
jnp
cmp
movsb
mov
xorb
and
xlat
iret
iret
pop
jmp
enter
fmull
mov
mov
adcb
xchg
dec
push
sbb
outsl
inc
mov
xor
stos
stc
ljmp
or
mov
les
xchg
daa
stos
sbb
shlb
push
enter
cld
pop
cmc
jbe,pn
mov
push
mov
xor
popa
lods
xlat
sbb
sbb
sub
push
xchg
inc
insl
ja
pop
jmp
adc
mov
testb
test
sub
nop
arpl
jbe
sar
xchg
repnz
fcoms
dec
je
pushf
xor
arpl
fisubl
movq
call
cld
repz
lcall
or
jns
jbe
mov
add
and
mov
js,pt
xchg
sub
fwait
dec
mov
dec
in
push
in
sbb
cli
negb
stos
xor
outsl
leave
push
popf
cli
sub
repnz
orb
mov
dec
jg
jle
adc
test
mov
mov
daa
cmp
cmp
aas
aad
pop
loope
and
lcall
nop
push
ds
pop
sbb
pop
mov
adc
pop
test
sbb
int
xor
or
popa
pop
notb
jns
js
movsb
cmp
mov
or
rorb
xor
cmpsb
popf
or
xchg
scas
pusha
sub
sbb
cwtl
popf
arpl
inc
adcb
into
push
xor
and
add
sbb
adc
popf
jo
push
push
dec
mov
stc
popa
popf
sbb
nop
fildll
aaa
sbb
ja
mov
add
mov
mov
jne
je
or
aad
dec
int
dec
lods
pop
repz
ljmp
jne
ds
push
shll
and
mov
cmpsb
dec
fidivl
orb
repz
arpl
nop
pop
sub
push
jne
or
sti
mov
iret
loop
popf
loope
or
adc
mov
hlt
jns
inc
jmp
stc
popa
add
xor
mov
fsts
mov
pop
popa
sub
ja
fimuls
repnz
pop
and
push
mov
push
in
cs
push
inc
or
stos
das
push
inc
sub
mov
push
je
out
inc
loope
cli
push
lds
adc
int
add
movsl
adc
adc
dec
dec
pop
cmp
scas
arpl
cmp
and
aad
shl
and
mov
ss
stos
xor
pop
mov
push
jae
fldt
cmpsb
stos
stos
int3
mov
sbb
les
push
in
jl
push
neg
and
mov
ret
aas
or
dec
popa
inc
mov
sub
repz
push
xchg
mov
sub
cmp
xchg
call
addr16
jp
sahf
stos
fs
dec
fs
sub
out
inc
sarl
in
mov
push
ds
clc
mov
loopne
xchg
call
mull
sub
fldl
sbb
ds
repnz
adc
les
out
mov
lock
cld
inc
dec
pushf
repnz
sbb
xchg
cs
ret
jnp
mov
jge
dec
loopne
pushf
mov
sub
xchg
lods
pop
out
xchg
mov
or
xor
daa
cmp
imul
or
cmpsl
lret
loope
repnz
sub
cltd
outsl
xchg
addr16
xor
push
mov
xchg
mov
push
jp
cmpl
add
out
mov
insb
cwtl
mov
lods
bound
pushl
out
cmp
test
cli
fstpt
dec
es
cmpl
jl
mov
pusha
xlat
repz
mov
sub
loop
lds
lret
into
jbe
pop
test
or
testb
jno
pop
push
lods
mov
cltd
push
xor
addr16
mov
sahf
lcall
push
lock
push
repz
xor
fs
das
push
jle
pop
dec
icebp
cmpsl
ret
enter
cmp
jp
sbb
adc
add
xor
xor
sbbl
add
int
push
out
cld
mov
icebp
adc
into
cmp
xchg
mov
and
mov
test
or
cmpsl
out
push
out
cmpsl
jno
add
leave
jne
sti
incb
pop
js
lods
test
jg
cmc
enter
repz
fisubrl
or
imull
mov
mov
or
pusha
negl
aad
jne
mov
ljmp
jno
pop
into
pop
and
bound
ljmp
sbb
jbe
loop
pop
fwait
lea
fbstp
int3
jae
mov
outsb
les
je
sbb
hlt
push
les
pop
outsb
pushf
je
or
mov
add
fucomip
push
mov
push
test
repz
daa
mov
cltd
inc
mov
in
sbb
cld
and
mov
push
lret
rcrl
jbe
ds
add
in
adc
cmp
or
mov
pop
sub
les
out
fidivrs
fimull
into
cmpb
add
shlb
lock
ds
stos
insl
push
pusha
arpl
xor
shlb
xor
mull
iret
adc
testl
jmp
dec
test
xchg
inc
insl
dec
loopne
in
adc
fsts
shr
and
pusha
enter
xlat
test
lret
movsl
pop
cmc
test
lcall
mov
cmp
dec
fadds
mov
ret
add
push
lds
push
sbb
or
repnz
push
inc
loop
mov
xor
sbb
mov
stos
test
inc
outsl
sar
inc
dec
cmpsb
ss
out
jp
pop
dec
rorl
pop
xchg
pop
out
arpl
mov
cs
add
ficoms
mov
or
sbb
jnp
xbegin
pop
push
fwait
adcb
adc
push
sbb
inc
push
lods
xchg
shl
cs
pusha
stos
insl
mov
xchg
fidivs
in
mov
pop
xchg
add
jecxz
adc
mov
cli
insl
push
rcll
sbb
mov
add
lea
xor
mov
out
fiaddl
setnp
popf
jmp
leave
daa
jno
or
pop
xchg
add
dec
push
xlat
cmc
jae
fimuls
jns
inc
pusha
loope
test
std
mov
stos
popf
pop
es
mov
pop
jmp
fidivs
or
sbb
xchg
mov
inc
sbb
mov
or
sbb
out
pop
fldt
xchg
adc
dec
bound
call
aam
inc
call
cmp
pop
pop
ds
fs
pusha
aad
mov
in
xor
push
xor
sbb
jg
inc
out
stos
nop
xor
mov
insb
outsl
cmp
repz
xor
arpl
jne
lods
int3
cli
sbb
outsl
add
sbb
pop
dec
fisttps
lahf
cld
mov
fidivs
enter
data16
enter
call
or
push
pop
scas
adc
pushf
popa
int
xor
add
jg
les
cmp
hlt
jb
int
fimuls
pop
jo
int
decl
push
movsb
push
lods
push
shr
lods
inc
and
mov
fdivrl
jmp
gs
sar
push
cmp
mov
sub
xchg
push
sub
gs
cmpb
mov
leave
mov
sbb
push
add
inc
inc
pop
jnp
mov
or
sar
dec
ret
stc
lods
pop
insb
ficomps
aad
rcr
mov
adc
repnz
mov
xchg
jb
mov
adc
xchg
enter
in
test
dec
push
mov
sbb
in
lods
pop
fbstp
inc
push
cmpsl
or
cs
testl
mov
out
enter
addb
ljmp
stc
cwtl
mov
add
mov
insl
jge
fdiv
lea
dec
jp
lods
adc
rcll
and
out
jmp
jns
push
ljmp
jno
push
daa
mov
ficomps
sbb
sbb
cmp
pop
xchg
or
jg
adc
mov
movsl
cltd
inc
jno
rcr
jae
pop
aad
aad
jne,pn
pop
insl
push
xchg
mov
xor
push
shrl
imul
xor
jno
std
and
test
lods
sbb
xor
jne
arpl
insb
add
loopne
cmp
jns
cmpsb
imul
arpl
adc
cmc
or
std
rep
mov
jle
push
and
lcall
push
je
les
mov
outsl
cs
sbb
insb
stos
aaa
dec
sub
jne
pop
pop
movsb
outsb
pop
xor
cmp
lods
fldcw
sbbb
or
cpuid
mov
sub
pop
jmp
cmp
mov
outsl
pop
popa
xchg
mov
cmpl
xchg
mov
lcall
xchg
adc
fidivrl
push
sti
aaa
sbb
pop
jae
dec
xchg
cmp
mov
dec
sub
lea
dec
or
mov
jne
mov
dec
ficomps
sti
enter
loop
adc
mov
nop
outsl
inc
bound
out
stos
mov
cmp
cmp
sti
jnp
ljmp
imul
mov
dec
and
jle
popa
clc
lds
xor
xor
jg
lock
in
jecxz
adcl
sar
add
repz
xchg
jnp
and
mov
pop
rcll
in
inc
jns
lahf
jno
dec
in
mov
daa
xor
roll
rcl
and
lock
popa
int3
and
xchg
outsb
mov
push
mov
fildll
pop
outsl
sbb
arpl
mov
rcl
addr16
js
sub
pop
push
jae
inc
cli
shl
in
rclb
ret
push
arpl
test
mov
push
gs
jae
xchg
inc
or
ja
dec
mov
sbb
sbbl
push
int
loopne
outsw
mov
fs
xchg
add
lods
add
pop
adc
inc
mov
add
ret
xchg
test
mov
jge
sub
mov
insl
xor
out
adc
insb
inc
adc
xor
std
pop
sub
shl
add
and
shr
inc
inc
mov
lock
stos
or
cmp
lret
int
loopne
test
xchg
outsb
dec
cltd
jnp
mov
insb
sub
push
sub
xor
cli
int
push
add
outsl
pushl
shlb
fsubrs
dec
imul
test
cmpsl
fldenv
ret
xlat
pop
mov
lret
jmp
mov
scas
add
add
repnz
cmc
sbb
xchg
inc
xchg
cmp
xchg
push
lea
mov
pop
repnz
pop
mov
cs
lods
mov
jl
shlb
and
xchg
das
es
xchg
testl
lcall
push
xor
dec
add
repz
lahf
jnp
jnp
popa
jb
test
jne
mov
outsl
andb
mov
jns
xor
in
jae
ficoms
adc
jge
inc
jg
dec
imul
mov
pop
dec
out
sub
into
lods
jp
and
lret
nopl
add
mov
xor
or
cmpb
mov
je
push
dec
in
sub
dec
aad
inc
loope
and
ret
mov
outsl
andl
int
cmpsl
ret
fisubrl
fldenv
mov
push
jbe
mov
in
insl
subb
push
xor
pop
xor
stc
jo
cld
and
mov
dec
ljmp
insl
mov
je
dec
sub
mov
rclb
lds
stos
inc
xor
adc
stos
je
inc
dec
lret
mov
cmp
jecxz
mov
shll
push
ret
inc
fisubl
shlb
mov
pop
stos
mov
sub
lret
stos
jns
icebp
fs
mov
rclb
lret
lock
daa
cmp
jmp
dec
mov
push
add
nop
cmpsb
xchg
xor
cmp
jg
dec
popf
mov
movsl
dec
sbb
imul
rcll
jb
ror
arpl
jl
xorb
lcall
and
ret
mov
aam
popa
dec
pop
test
jnp
aam
dec
in
pop
jecxz
cmp
shr
jl
dec
fisubrs
dec
cmp
cwtl
pop
imul
cmpsl
jle
loop
jb
push
icebp
xchg
andb
pusha
or
push
push
and
addr16
cltd
and
adc
mov
xchg
addl
mov
adc
popa
mov
movsb
sub
stos
pop
lds
cmp
mov
adc
inc
mov
mov
or
jne
mov
add
inc
fcoms
mov
lock
push
xchg
pop
xor
sub
stos
scas
xchg
push
mov
popf
sub
dec
sbb
inc
orb
sbb
cmp
in
loop
push
in
fldl
add
cmc
jbe
test
clc
push
lds
and
daa
ret
jecxz
insl
stc
repnz
lds
adc
dec
dec
xchg
jb
jb
dec
arpl
int
cmp
add
daa
or
or
xchg
sub
push
sbb
lock
and
mov
push
fsubr
cmp
daa
mov
dec
mov
push
mov
pop
insb
out
subb
in
xor
scas
jmp
dec
mov
xchg
fbstp
add
mov
cmp
mov
popa
jg
shlb
insb
jo
lret
shlb
cs
jnp
pop
inc
pop
and
mov
clc
pop
test
jp
test
xchg
sub
pop
dec
mov
xchg
scas
cmp
mov
in
sub
data16
or
test
pop
test
loopne
mov
push
sub
mov
or
rorl
push
enter
xchg
lcall
xor
js
lret
ljmp
shl
cmp
cwtl
cs
and
mov
cmp
jmp
xchg
mov
sbb
in
push
cld
adc
pop
xor
sbb
and
inc
data16
inc
sbb
and
xor
pop
movl
and
js
dec
imul
sbb
add
sbbb
xchg
and
fucomp
cld
repnz
stos
decl
mov
xor
insl
mov
or
push
ljmp
ljmp
push
sub
xchg
outsb
inc
and
mov
pop
mov
ret
stos
inc
cmc
pushl
sbb
mov
pop
xlat
sbb
jno
cld
lahf
mov
testl
ret
lods
data16
nop
outsl
inc
lds
fwait
test
xchg
jne
cmp
pop
lds
mov
in
enter
mov
jmp
jl
mov
sub
adc
cs
fsubs
mov
sub
push
xchg
push
sub
adc
jecxz
cmp
push
in
sbb
test
in
xchg
jo
es
call
cmp
stc
test
into
inc
iret
jle
cmp
aaa
cmp
pop
xchg
add
les
into
mov
lret
push
sbb
clc
cmp
out
inc
push
je
fcmovu
data16
shll
cmc
mov
pusha
or
test
xor
mov
sahf
or
jnp
xchg
out
sbb
cmp
sbb
iret
sti
fnsave
jle
ror
sti
stos
add
mov
imul
add
adc
and
dec
adc
shr
jnp
pop
lock
jg
adc
cli
push
js
ljmp
adc
push
sbb
and
adc
pop
cmp
cmp
xlat
add
fistpl
movsb
test
int
dec
jmp
lods
xchg
fidivrs
imul
sbb
xor
jecxz
cwtl
mov
lret
fldcw
dec
sbb
inc
cmc
sarl
int3
cwtl
add
xchg
xor
sub
repnz
pop
xor
out
std
sbb
sbb
outsb
mov
mov
jae
cli
sub
jnp
lret
dec
ret
repz
push
in
push
lea
fcomip
or
cmpsb
inc
aad
xchg
outsb
loop
dec
mov
sti
jae
push
mov
adc
in
movsb
adc
mov
dec
dec
fs
loop
or
adcb
dec
je
adc
addr16
pushf
xor
and
mov
aam
aas
push
sub
inc
popa
das
dec
fidivl
inc
lret
sti
movsl
in
pusha
out
lret
enter
sub
in
sti
cmp
add
out
andb
dec
lods
xchg
cmc
into
sbb
inc
out
cmp
and
cmp
jno
mov
mov
sub
xchg
and
cli
sbb
mov
mov
pop
pop
scas
dec
adc
je
jp
add
outsb
sub
sbb
inc
lcall
dec
repnz
insl
jg
pop
enter
popf
scas
call
mov
movsl
incb
cmpsb
jge
push
add
add
jbe
hlt
sub
dec
loope
pop
insb
jno
xor
xchg
lock
mov
and
cmp
mov
fisttpll
sbb
push
or
add
mov
in
jbe
das
nop
jecxz
lret
sub
lods
add
mov
mov
pop
mov
ss
icebp
imul
add
xor
ret
lock
repnz
das
mov
scas
test
js
pusha
call
enter
push
mov
out
mov
inc
scas
sbb
sahf
or
loop
pop
cmp
sub
lcall
repz
popf
push
jg
fildl
jo
xchg
enter
fidivrl
lret
xchg
lret
mov
mov
xor
and
mov
clc
aaa
popa
ljmp
mov
stos
call
mov
mov
xor
fdivl
mov
sbb
and
jb
ljmp
ret
pusha
dec
rolb
jmp
movsb
cmp
xor
mov
scas
pop
lods
pop
adcb
rcr
outsb
pop
sub
sbb
jb
movsb
inc
insb
adc
dec
mov
lea
pop
das
ljmp
mov
sub
add
jbe
sbb
leave
call
cli
xchg
sbb
mov
pop
test
mov
mov
push
popf
and
out
xor
adc
mov
xor
std
mov
inc
fs
nop
subl
mov
aaa
in
cmp
mov
mov
add
jae
vaddsd
mov
leave
and
xor
inc
pop
xor
xchg
inc
cmp
and
dec
fwait
push
test
sub
out
mov
mov
dec
ja
aaa
popf
sub
jg
xchg
sbb
pop
push
jg
enter
je
mull
push
js
iret
frstor
adc
push
inc
and
push
mov
adc
or
mov
addl
mov
dec
insl
lods
sbb
inc
popa
pop
ds
push
pop
mov
cmp
mov
add
xor
sub
sbb
sbb
dec
lock
add
aad
adc
movsl
push
mov
dec
cld
xchg
cmp
rorl
fbld
out
out
je
les
test
lea
scas
pop
pop
push
adc
test
adc
jecxz
mov
cltd
cmp
mov
mov
pop
mov
fldl
ret
pop
xor
dec
and
inc
cmp
xor
int3
or
mov
lods
and
mov
stos
in
lods
mov
mov
or
popf
and
movsl
mov
cli
test
inc
pop
mov
aas
in
dec
cmp
mov
in
push
xchg
xchg
lods
mov
outsb
js
inc
cmp
xchg
mov
imul
aaa
dec
or
push
lods
loopne
push
jbe
add
and
dec
out
sbb
add
push
jo
and
jle
aad
sub
mov
or
jns
sbb
lcall
push
sbb
or
xor
sub
xor
js
inc
test
out
mov
pop
negl
fcompl
push
inc
sar
mov
and
push
inc
out
adc
mov
lods
and
shlb
mov
enter
cld
and
inc
sbb
push
mov
das
loopne
clc
and
push
and
jbe
daa
cmp
popa
mov
jecxz
sub
inc
inc
push
ljmp
cmp
iret
jno
in
xor
inc
mov
arpl
scas
or
and
or
xchg
add
pop
jmp
loopne
hlt
cmc
mov
lods
movsl
sub
add
push
iret
dec
dec
iret
sub
fstl
inc
and
adc
and
cmp
sahf
insl
mov
jmp
cmp
push
fbstp
push
jecxz
push
cwtl
pop
mov
sub
dec
test
jge
cld
inc
xchg
add
pop
aad
fs
push
jecxz
mov
js
inc
mov
ret
lods
call
jb
lahf
ss
addb
test
mov
out
jg
mov
dec
jmp
jne
sbb
jbe
hlt
mov
jb
pop
sub
in
inc
jecxz
mov
jne
jge
or
pop
add
scas
stc
add
loope
aam
lds
in
out
mov
push
aas
push
popa
jp
int
popf
xor
mov
jb
jle
jmp
xlat
bound
push
imul
pop
ret
repz
and
xor
mov
xchg
cmpsl
xchg
mov
ljmp
mov
xor
rdmsr
mov
inc
pusha
test
cmp
std
fisubrs
cmpsb
movb
pop
mov
arpl
in
mov
mov
inc
push
add
jb
mov
cmc
cwtl
arpl
outsb
xchg
mov
cmc
int
jo
mov
scas
insl
inc
scas
jns
pop
jecxz
int3
push
hlt
out
dec
mov
push
aad
roll
ljmp
aas
or
jp
jmp
xor
rcr
jp
pop
scas
mov
aaa
fdivs
out
lcall
jo
push
sub
pushf
sub
xlat
add
pop
cmp
mov
mov
push
faddl
adc
cmp
sbb
jne
hlt
test
dec
mov
mov
imul
cwtl
push
sub
mov
repnz
lods
insb
cltd
adc
popa
push
testl
stos
or
cmp
fs
xor
mov
or
sbbl
push
iret
test
mov
aad
cmp
pop
out
jge
adc
mov
adc
ljmp
ljmp
jbe
cmp
lods
outsl
cwtl
mov
dec
insb
popf
sub
ss
lahf
and
dec
loop
mov
imul
test
inc
add
adc
fiaddl
mov
mov
push
xor
stos
shrb
add
cmp
pusha
lahf
ss
shlb
pop
jecxz
inc
cmp
movsl
mov
add
xchg
rcll
mov
xchg
es
aad
sti
inc
decb
sbb
pusha
mov
push
dec
outsb
cmpl
cmc
mov
xorb
out
sahf
xchg
pop
lods
test
mov
and
lcall
hlt
out
push
test
inc
leave
lahf
mov
fdivr
jns
mov
test
mov
or
pop
loopne
mov
pushf
scas
cmc
mov
repnz
xchg
sub
add
add
shl
fmull
outsb
mov
in
push
add
out
daa
fidivs
jecxz
add
imul
mov
mov
xlat
mov
lock
inc
leave
jmp
icebp
mov
jnp
or
inc
add
shll
xchg
pop
cmc
push
add
xor
cli
daa
pop
hlt
pop
or
xor
dec
in
dec
testl
push
insl
mov
adcb
sub
mov
inc
mov
ret
addr16
mov
push
add
jecxz
mulb
mov
push
movsl
jl
int3
pop
daa
sbb
mov
lret
in
sbb
cmp
mov
sbb
faddl
arpl
loopne
loop
sub
sub
dec
jb
dec
test
inc
mov
rorb
sbb
cmp
adc
test
cltd
andl
sub
pop
sbb
in
in
jg,pn
enter
add
cwtl
mov
mov
cwtl
pop
roll
mov
pop
testb
popa
stc
xchg
sbb
adc
stos
loopne
daa
and
xchg
cmp
jb
lahf
mov
shrb
shll
mov
dec
adc
es
int
ficoms
lods
jne
lret
call
or
iret
cmp
push
ljmp
popf
repnz
subb
adcb
sbb
pop
clc
xlat
mov
cmp
mov
mov
mov
arpl
mov
mov
shll
lods
test
xor
pop
mov
cmp
pop
in
in
push
mov
ret
ror
sub
imul
mov
into
test
adcb
inc
pop
cmp
icebp
pop
xor
sbb
insl
inc
movsl
pop
repz
imul
push
outsl
pop
jb
mov
dec
add
inc
pop
gs
xor
out
xchg
pop
je
cmp
push
outsl
sub
std
aaa
test
arpl
mov
lret
pop
xor
xor
sti
push
jno
out
xchg
xchg
leave
arpl
and
nop
push
call
pop
jno
cmp
insb
mov
scas
xor
out
cld
or
mul
mov
testl
sub
fwait
mov
add
fwait
mov
push
push
nop
cld
add
test
mov
movsb
jnp
out
mov
dec
in
cmp
pop
paddw
fisubl
fwait
pusha
leave
js
xchg
fs
mov
sti
test
mov
out
sbb
loop
in
cmp
push
push
or
test
iret
mov
cld
es
add
mov
fsubrl
and
rclb
mov
bound
shr
add
cmpsl
xchg
and
test
ss
in
jl
das
mov
xchg
je
mov
sub
sub
std
daa
jle
aad
bound
cmp
jb
lock
loop
add
sarl
bound
xchg
adc
cmovne
pushf
ret
inc
cwtl
push
stos
inc
mov
mov
mov
jl
jbe
popfw
mov
mov
add
inc
mov
jl
jmp
add
xchg
sub
sbb
dec
and
push
call
adc
das
mov
sub
inc
in
jo
xchg
scas
test
lods
inc
mov
setns
mov
mov
push
stos
push
mov
cmpsl
cmp
inc
adc
jb
mov
push
jl
push
mov
adc
mov
addb
clc
sub
incb
fiaddl
add
xchg
jns
aam
mov
mov
shrb
cmpsb
adc
pop
cmp
mov
cmp
movsl
aam
jne
dec
cs
sub
fdivs
and
sahf
adc
imul
out
ja
jne
pop
xchg
and
test
lret
or
cmpsl
push
sub
jne
xor
jle
arpl
fwait
and
pop
daa
inc
jl
orb
mov
adc
add
gs
int3
sbbl
cmp
mov
xor
lock
mov
movsb
add
loop
lods
mov
push
jmp
iret
push
cs
scas
mov
mov
sbb
dec
push
jl
mov
jo,pn
pop
xchg
mov
pop
cmpsl
aaa
or
xchg
pop
jbe
repnz
mov
push
in
cld
or
xchg
cmp
ds
bound
adc
lret
cmc
inc
pop
pop
jmp
sub
imul
xlat
repz
out
lret
shll
bound
mov
lret
xchg
pop
or
popl
addr16
mov
jnp
mov
test
add
lods
inc
jle
data16
lahf
mov
rcrb
push
lock
stc
pop
into
in
outsl
outsl
aas
leave
fcmove
arpl
mov
int
in
in
push
xchg
mov
sbb
xor
push
inc
gs
nop
mov
and
sti
jle
popa
xchg
sbb
call
dec
data16
mov
cmp
pop
xor
imul
loope
sbb
lock
push
clc
gs
insb
push
cmp
fbld
xchg
jg
mov
pop
mov
aad
and
loopne
sub
testb
adcl
popf
cs
dec
sbb
mov
loope
xchg
mov
dec
dec
std
aad
das
outsb
shrl
bt
cmp
push
cmp
mov
insl
add
jns
lret
mov
inc
dec
xchg
ljmp
je
lcall
lods
or
mov
mov
xchg
cmpsb
jl
mov
cmp
pop
jecxz
pop
outsl
xchg
and
icebp
fidivrs
nop
in
aad
nop
xchg
cmc
mov
xchg
add
mov
lock
cmp
xor
sub
xor
push
push
lods
mov
popf
sub
cs
fsin
cwtl
jo,pn
call
testb
bound
inc
add
stos
repnz
lcall
fs
jbe
or
ja
std
or
inc
mov
push
and
out
hlt
aam
push
adc
in
xlat
or
ljmp
loop
pop
adc
pop
scas
pop
pop
and
rorb
push
cmp
and
pop
fdivl
lods
ret
bound
jmp
movsb
push
or
or
dec
and
pop
dec
out
push
fwait
sbb
hlt
xchg
dec
mov
pop
jno
imul
mov
xchg
or
mov
push
inc
aaa
aad
mov
inc
push
sbb
or
outsb
or
xchg
mov
ficompl
call
cmp
dec
rorb
fdivrs
data16
inc
in
xchg
push
stos
neg
mov
repz
enter
or
push
lahf
pop
adc
mov
cwtl
push
ret
mov
push
cltd
test
lcall
pop
not
mov
add
rclb
aaa
pop
or
jb
aaa
lcall
or
jl
test
test
jae
sub
out
addr16
mov
data16
clc
mov
fstp
xchg
bnd
clc
mov
fstpt
mov
fisttpll
sahf
call
or
jp
call
rol
ja
std
xor
fs
mov
mov
add
mov
and
dec
stc
outsl
push
sub
mov
adc
mov
adc
sub
xchg
cmp
sub
or
call
sbb
pop
cmp
cmc
imul
mov
jne
mov
icebp
push
mov
push
pop
pop
jns
jp
sub
jb
inc
sub
adc
xor
mov
or
add
inc
pop
sbb
or
mov
call
mov
fst
push
fisttpll
mov
imul
jo
mov
add
lret
and
mov
pop
mov
or
sub
push
xchg
dec
addr16
test
xchg
notb
sbb
cs
mov
mov
sbb
cld
cmp
repnz
fsubr
clc
int3
mov
inc
inc
add
out
loopne
fmull
mov
mov
mov
sti
xchg
mov
lret
jp
jnp
xchg
mov
pushf
add
mov
scas
out
mov
iret
mov
jbe
dec
in
sub
jb
fistps
xor
test
xchg
ret
insb
pop
mov
scas
mov
push
cmp
in
pusha
dec
mov
fwait
scas
pop
and
jg
jns
mov
movsb
cmpsl
call
and
add
dec
cmp
rcrb
mov
xor
and
xchg
sahf
stc
and
in
inc
push
into
mov
jp
pusha
lock
xor
sbb
adc
or
pushf
ss
inc
push
cmp
decb
dec
sahf
test
mov
pop
cmp
inc
or
or
faddl
xchg
or
aaa
int
lret
lret
sub
xchg
inc
jp
or
movsb
jp
push
aad
add
sbb
inc
inc
repnz
mov
repz
sub
in
cwtl
outsb
addb
in
arpl
push
inc
xchg
lock
or
shlb
insl
testl
arpl
xchg
sahf
call
imul
mov
xchg
sar
add
pop
repz
add
fsubl
or
xor
dec
adc
jnp
fildll
data16
jmp
ds
mov
hlt
ficoms
cmp
sub
mov
inc
fstps
rcrb
aaa
into
mov
out
inc
lock
jns
clc
sub
sub
add
int3
mov
ljmp
lret
jne
adc
xor
mov
inc
push
in
std
jae
and
jo
jmp
xlat
xchg
xor
pop
shl
mov
mov
mov
adc
inc
imul
dec
popf
js
adcl
and
mov
lods
fwait
negb
ds
fwait
jl
xor
test
lds
sbb
insl
dec
fsubs
fdivr
insb
add
popf
pop
xchg
loopne
lods
fsubs
lods
cmp
mov
mov
outsb
xor
add
ficoms
les
push
sbb
push
inc
mov
sub
adc
ja
mov
mov
in
in
or
dec
out
mov
xor
mov
mov
jmp
int3
sbb
out
adc
jns
jne
mov
xchg
xor
sub
mov
hlt
mov
pop
cli
in
push
mov
pop
add
ret
or
xchg
mov
xchg
xor
mov
jmp
test
mov
cmp
out
xchg
sub
ja
adc
cmp
xlat
ret
mov
and
lods
or
ss
sub
mov
and
aam
pop
bound
pusha
cmp
dec
loop
je
jo
or
cmp
pop
lds
fnstenv
jbe
lret
jle
mov
popf
scas
stos
jo
jno
lock
inc
sbb
idivb
sub
ljmp
mov
clc
mov
jns
and
inc
push
push
and
paddd
push
mov
push
fcmove
inc
ret
hlt
addr16
inc
aad
sub
and
add
xchg
add
sbb
iret
xchg
jno
mov
insb
mov
int3
cmpsl
or
int
ret
rep
push
jmp
scas
shrb
imul
hlt
lahf
cmp
adc
sub
jge
adc
clc
xor
or
test
ljmp
mov
push
push
popf
push
pop
addr16
xchg
sub
rep
adc
sti
mov
sub
xchg
sub
enter
xchg
mov
or
mov
mov
jne
xchg
mov
imulb
push
cld
pop
je
les
xchg
sti
iret
aad
xchg
movntps
pop
fcom
lret
cmp
dec
pop
pop
xchg
jnp
enter
cmpsb
aas
insl
cltd
push
cmpsl
add
jle
adc
sub
loope,pn
sub
aaa
add
push
jno
lds
pop
aas
mov
dec
test
fisttpll
test
push
xchg
outsb
cld
stc
xchg
scas
icebp
jle
mov
shll
adc
aad
vmovaps
arpl
mov
negb
cmp
inc
loopne
lret
enter
dec
sub
and
popa
call
iret
arpl
mov
mov
fiaddl
shll
loope
fcompl
pushf
test
movl
add
xchg
sbb
cli
out
and
and
xchg
nop
insb
pop
mov
pop
jb
sahf
addr16
lock
xor
push
xchg
pop
sahf
mov
nop
and
push
sti
jo
inc
stos
fistps
clc
rorl
jnp
test
cmp
cmpsb
xchg
jae
leave
aaa
push
rorb
push
push
call
fldl
xor
adc
ficompl
and
das
and
and
scas
push
leave
mov
push
mov
or
xor
out
xor
ficoml
test
sbb
dec
push
das
inc
mov
or
unpckhps
pop
xchg
sti
ja
inc
push
movsb
inc
lcall
fdivl
dec
in
in
loopne
aad
insb
cli
inc
xor
pop
pop
sbb
adc
jp
stos
add
int3
dec
add
negb
inc
dec
sahf
mov
je
push
jo
and
pop
scas
cmp
leave
adc
lods
cmp
xor
fisttpll
inc
xchg
cs
xlat
jle
dec
arpl
jecxz
dec
dec
lcall
aad
cmpsb
and
push
sub
mov
pusha
mov
lds
popa
pop
dec
sbb
aas
inc
imul
dec
int
sbb
mov
inc
je
repnz
test
in
iret
pop
test
push
sub
sub
jbe
pop
cmc
jle
bound
sub
jge
int
mov
iret
js
jp
int3
jo
bound
pop
ja
nop
mov
push
call
stc
mov
pop
fwait
sub
aas
fcmove
lret
and
dec
jecxz
std
mov
fisubrl
pusha
ror
and
or
mov
les
orl
aas
sahf
xor
lods
aam
int3
pop
sbb
shll
dec
arpl
pop
loop
inc
xor
mov
lahf
xchg
shll
cmpsl
jmp
dec
repz
jmp
sub
mov
das
into
adc
aam
icebp
push
jbe
adc
dec
mov
mov
xor
add
popa
lcall
shll
mov
dec
gs
enter
jmp
dec
push
lahf
outsl
push
shll
dec
dec
mov
mov
lods
mov
in
rcl
mov
add
mov
std
dec
in
push
ja
shrb
pop
jbe
inc
inc
pop
jl
adc
xchg
jge
shlb
inc
out
les
inc
cwtl
sbb
push
mov
xor
cmp
or
and
lock
repnz
jnp
test
ret
xor
sbb
push
xchg
icebp
push
mov
push
inc
sbb
out
enter
jne
inc
subl
cmp
cli
iret
fnstsw
jl
bound
push
je
xor
movsb
call
or
scas
imul
adc
push
fcom
dec
jb
repz
xor
dec
sub
mov
mov
enter
in
push
jae
mov
loope
popa
daa
jmp
mov
fs
popa
cmp
test
mov
or
pop
pop
or
lret
and
data16
je
sub
out
std
inc
inc
js
addr16
test
ljmp
push
cmpsl
pop
pop
pmuludq
push
sub
push
ret
cwtl
stos
add
or
repz
and
pop
int3
out
jbe
or
in
push
imul
jmp
scas
adc
and
xor
xchg
fiaddl
loopne
mov
fsts
insl
add
xlat
xor
pop
lea
xchg
insb
mov
or
cmp
daa
cmpsb
gs
jae
sub
dec
inc
push
push
iret
scas
mov
add
pop
das
pop
mov
mov
imul
jno
mov
push
dec
dec
inc
and
subb
bound
xor
lea
inc
fmull
cli
xchg
out
insl
fisubs
lret
push
jns
lret
pop
repz
pop
scas
jg
xor
repnz
aad
fwait
inc
fisttpl
es
sub
inc
es
sub
xchg
sub
enter
jnp
add
dec
sbb
mov
in
cmp
pop
lods
sahf
lds
stos
inc
push
mov
in
test
les
push
push
jg
dec
push
inc
fidivrl
jb
pop
rcrl
or
and
sbb
jae
mov
jne
inc
xor
mov
enter
push
sub
mov
cmpb
cmp
xlat
mov
nop
sbb
pop
mov
xor
jb
lea
add
js
nop
scas
fsubp
mov
jno
add
sub
xchg
jge
push
popa
shlb
cld
push
cld
int3
ficoms
cmp
xchg
xorl
idiv
out
pop
dec
int3
sub
mov
fwait
divb
inc
push
cmpsl
popa
sbb
fwait
or
std
leave
scas
mov
jl
je
dec
dec
in
mov
test
iret
or
arpl
daa
mov
and
inc
push
iret
sbb
fsubrp
insl
movsl
test
loop
pop
add
mov
ljmp
pushf
orb
pop
stc
in
fistpl
pop
call
leave
jb
ss
arpl
adc
mov
pushf
pop
inc
and
stos
and
adc
or
lds
mov
xchg
aad
add
pop
insb
add
test
cltd
or
shll
das
in
pop
in
adcl
mov
sti
adc
flds
add
idivb
jo
cmp
aas
sub
xor
enter
bound
jge
mov
add
lock
jae
adc
insb
out
add
cmp
jne
fdivrs
imul
mov
jle
out
dec
out
sbb
adc
repz
jnp
aas
inc
pushf
sub
in
inc
sbb
mov
das
js
or
in
std
xor
jmp
loopne
pop
inc
dec
dec
sti
scas
add
gs
cmp
mov
test
add
or
scas
mov
push
xor
std
nop
shlb
pusha
clc
scas
shrb
ret
inc
bound
mov
adc
or
fnstsw
adc
cmpsb
test
pushf
cmc
test
aad
ret
je
or
test
adc
mov
and
jae
mov
cltd
dec
push
loopne
in
insb
xchg
movsl
add
leave
out
ficoms
mov
push
lods
sti
add
sub
jg
scas
mov
subb
pop
shll
pop
ljmp
ss
sub
cmc
shlb
popa
sub
and
pop
sub
pop
mov
sbb
and
int
sub
andb
arpl
mov
lods
cmp
pop
mov
int3
into
ljmp
int
xchg
cmp
mov
push
mov
cwtl
pop
push
jg
xchg
cs
in
rolb
call
std
jmp
sbb
jo
or
or
ljmp
cltd
or
push
fdivrs
jmp
adc
inc
jecxz
pop
push
sti
fstps
out
pop
nop
daa
push
loope
lods
dec
sti
scas
or
jmp
or
xlat
sub
xchg
nop
out
adc
cltd
sub
insl
cltd
cmpsl
lret
jbe
push
popa
clc
mov
data16
add
xchg
in
add
fsubrp
dec
rcrl
rolb
out
call
mov
lds
inc
fbld
loopne
aaa
gs
test
decb
push
xor
into
int3
add
mov
xchg
call
xchg
mov
push
add
les
orb
test
dec
les
jmp
popf
fs
xchg
cmp
insl
add
bound
mov
cmpsb
stc
test
daa
push
xor
jle
movsb
jecxz
dec
xorl
sbb
jp
repnz
adc
add
nop
jae
mov
xchg
add
sbb
aaa
cs
adc
ficoml
pushf
xor
inc
shrb
leave
popa
mov
repnz
cs
iret
adc
imul
jbe
mov
outsb
outsl
push
aaa
pop
js
cmpsl
cmp
dec
mov
sbb
dec
cwtl
mov
cwtl
xlat
add
gs
jge
mov
ret
push
mov
add
jnp
loopne
roll
std
cmp
loopne
cmp
cld
or
lock
cs
cmpsl
sub
push
ja
lock
mov
sbb
int
adc
stos
jae
fwait
cmpb
loope
jbe
sbb
lea
sub
int
jge
push
inc
push
mov
jge
mov
rcll
adc
aaa
stos
ss
fnstsw
sub
cmp
cmp
fsts
dec
sahf
cli
cmpsb
cmp
jecxz
les
arpl
push
imul
aam
inc
test
ds
fcomps
popf
jmp
lret
cmp
sahf
dec
cmc
mov
ljmp
int3
sbb
setbe
mov
in
std
pop
jge
or
sbb
daa
jg
out
xor
mov
dec
repz
fsts
mov
inc
add
stos
mov
cmp
xor
cmp
sbb
lret
mov
pop
mov
pop
and
sub
or
clc
fdivrs
ficompl
pop
clc
mov
mov
enter
cmc
sbb
inc
fisttpll
push
scas
dec
ljmp
cltd
shlb
fs
inc
sub
jg
pop
pop
cld
and
test
mov
push
mov
bswap
repnz
in
mov
ja
rcrl
add
das
addr16
cmpsb
les
into
jae
int
sbb
push
aaa
push
test
popf
mov
out
das
pop
lods
clc
popf
push
mov
jmp
xchg
movsb
ja
cmp
dec
mov
cmp
test
in
insb
sbb
xchg
add
test
inc
arpl
lcall
test
mov
sbb
jecxz
pop
push
in
in
inc
add
jmp
adc
xchg
or
insl
jg
jmp
clc
inc
pop
in
sub
or
and
test
inc
sarl
add
out
adc
mov
cmp
ss
or
mov
and
xor
into
pop
or
ljmp
stc
outsl
and
stos
inc
test
add
fsubrl
stc
mov
movsb
jbe
or
jnp
adc
pushf
aam
mov
clc
inc
push
sub
cmp
in
sub
data16
setl
sub
jnp
mov
inc
in
fwait
mov
rcrb
adc
je
arpl
cltd
out
cmpl
mov
mov
imul
loopne
cld
pop
jl
mov
and
fsubr
cmp
and
pop
fwait
sbb
cmp
and
sbb
xchg
ja
mov
mov
mov
inc
gs
add
not
das
push
movsl
add
cmp
and
sahf
pop
add
mov
mov
stos
xchg
outsb
lret
in
ss
nop
mov
xchg
xlat
xor
add
popa
in
jl
stos
inc
sbb
add
xor
xchg
add
xchg
outsb
mov
rclb
ja
jno
test
aaa
add
sbb
out
cmpsl
out
or
int
sbb
add
adcl
sbb
and
lods
sbb
push
dec
sub
mov
in
xor
lahf
shrb
or
outsb
sub
imulb
and
cmpsl
mov
sub
cs
cmp
fidivrs
push
lret
cli
orl
movsb
fcom
inc
push
push
inc
loope
cmc
pop
push
inc
dec
pusha
jbe
dec
mov
sub
add
push
cld
xchg
dec
inc
mov
inc
aas
shrl
fldl2t
lret
sbb
aaa
nop
ret
sub
xchg
push
mov
mov
lods
jle
std
inc
mov
push
inc
stos
cwtl
jg
mov
js
out
lock
cmpb
xchg
mov
mov
xchg
or
mov
add
mov
xor
incb
ret
rorl
arpl
dec
or
in
dec
stos
adc
push
jns
test
idivb
ret
pop
adc
dec
jb
pusha
inc
clc
xchg
rclb
movsl
dec
jbe
out
pop
sbb
or
push
mov
arpl
sbb
fmuls
xchg
in
inc
fnsave
and
add
mov
dec
jmp
lahf
inc
fdivs
rclb
rcl
rol
mov
cwtl
lea
dec
mov
fistpll
push
push
mov
jb
mov
jle
mov
cmp
inc
jecxz
push
xchg
nop
and
cwtl
jl
pop
insl
stos
jge
orl
lahf
ss
cld
inc
xchg
pop
cmpsl
shll
add
pop
mov
call
sbb
add
fnsave
add
imul
xchg
outsl
mov
xor
jnp
jl
sbbb
mov
js
ret
add
jo
cwtl
into
push
mov
fisubrs
jne
lock
pop
xchg
jl
lods
adc
sub
fucomip
add
cmp
jo
cmpsb
mov
mov
call
loope
sub
add
js
xorps
in
cld
loope
pushf
scas
cmp
test
inc
loopne
mov
stos
cs
out
ret
shr
das
repnz
scas
out
sbb
pop
mov
adc
add
pop
scas
dec
aam
stc
mov
push
out
or
pop
movsl
pop
jge
push
int3
jecxz
std
das
mov
and
cmpl
jmp
add
pop
add
mov
int3
fcomip
stc
adc
mov
cmp
xchg
nopl
adc
cmp
enter
leave
int
movsb
xchg
scas
shll
cmc
call
rcll
leave
cwtl
loop
outsl
add
lret
shrl
cmp
fnstenv
add
adc
jno
addr16
data16
stos
jmp
dec
movsl
mov
adc
aad
xchg
push
test
int3
daa
clc
js
lret
mov
sbb
std
lods
and
dec
dec
jmp
loope
lods
adc
sub
pushf
xrelease
push
sbb
cmp
fdivs
pop
fnsave
inc
dec
mov
pop
sbb
imul
jp
dec
push
mov
xor
xor
test
sub
fstps
jle
xchg
test
jb
aas
push
out
mov
dec
mov
mov
lahf
cmp
mov
xchg
iret
pop
xor
cmp
pop
mov
adc
int3
aaa
test
mov
mov
pop
jne
cmpsb
daa
daa
fnstenv
mov
jno
fstl
lods
pop
jg
movsb
dec
xor
sub
lahf
test
in
xchg
arpl
lret
repz
cmp
pop
sub
dec
pop
push
mov
jge
sub
and
sarl
mov
jae
inc
sti
gs
or
cmp
mov
mov
scas
sub
add
xchg
and
enter
frstor
cmc
mov
stos
in
mov
in
push
arpl
out
jmp
movsb
sbb
jne
dec
cmpsl
fstl
sub
mov
jle
inc
sbb
shrl
xorl
iret
inc
and
enter
push
pop
adc
lea
push
stos
shl
fs
fldcw
notl
clc
xor
int3
fbld
push
scas
inc
push
fmuls
push
jb
sub
or
stos
sbb
mov
test
test
in
push
cmpsl
ss
lahf
cmp
sbb
lods
adc
ss
jae
fucomip
outsl
push
shlb
mov
mov
or
mov
stc
or
inc
push
cmp
sub
cmpsb
pop
and
push
push
push
mov
dec
out
aas
shrb
cmp
fdivl
nop
insb
add
enter
adc
lea
adc
lods
sbb
leave
sbb
inc
imul
inc
clc
clc
nop/reserved
xor
and
mov
cmp
ds
xchg
lcall
addr16
mov
aad
and
sarl
mov
outsb
lods
and
sahf
jb
xor
mov
insl
adc
sbb
mov
ficoml
pop
sbb
addr16
jl
in
insb
cli
pushf
aad
push
mov
imul
push
lcall
mov
fistpll
fnstenv
mov
dec
fs
fs
pop
jmp
dec
dec
mov
push
cmp
inc
adc
sub
xor
push
jp
mov
scas
xchg
ss
adc
sbb
inc
aam
add
clc
mov
lock
mov
sbb
pusha
mov
ja
ja
insb
cmp
rcr
lods
dec
pop
in
stos
inc
ljmp
mov
in
pop
outsl
divl
pop
ja
xchg
fidivrl
sub
in
sub
shlb
xchg
loopne
fwait
dec
cs
mov
mov
ret
add
fstps
xchg
lods
mov
push
jno
push
mov
lret
stc
xchg
fdivrl
paddd
dec
pop
cmp
loopne
mov
ja
insb
mov
stos
sub
lret
fsubrl
int3
arpl
sbb
orl
inc
dec
in
xor
popa
and
test
pop
shrl
ljmp
popf
sti
pop
aaa
scas
pop
and
mov
sub
xchg
dec
cli
adc
les
xchg
fs
inc
xchg
xor
jmp
mov
fstpt
mov
je
sub
js
in
in
rcll
fmuls
mov
cmp
sbb
mov
sbb
popf
adcb
or
js
nop
mov
fwait
outsl
jnp
push
jns
mov
rclb
sub
dec
mov
int3
fisubs
into
and
movl
sub
fcoms
cmp
jecxz
fisubrl
mov
push
sbb
adc
pop
int3
xchg
add
fs
mov
mov
mov
popa
stc
push
push
lahf
jns
stos
mov
mov
enter
js
je
push
sbb
cltd
cmp
xchg
sub
inc
mov
shl
lods
icebp
jnp
aas
jae
stc
pop
sti
mov
cmp
loop
ror
mov
mov
add
xor
and
cmc
or
rorl
imul
outsl
xchg
icebp
adc
cmp
insb
jno
leave
jo
jp
stos
sbb
or
shrl
or
jp
dec
aas
repz
mov
cli
xchg
add
push
imul
sbb
addr16
subl
cmp
rcr
out
daa
sbb
xor
enter
sbb
addl
movsb
mov
data16
and
jg
shll
scas
ret
lret
bound
adc
arpl
enter
daa
ljmp
sti
dec
jno
scas
push
out
ffreep
dec
mov
add
mov
fldenv
push
addr16
fsubr
enter
wbinvd
ss
add
movsb
lock
js
mov
fwait
inc
sbb
iret
push
sahf
xchg
vmulsd
add
test
dec
pop
pop
aaa
xchg
imul
mov
pop
lcall
cmp
mov
shll
lahf
cmp
iret
push
fdivs
in
inc
pusha
into
add
lods
mov
int3
pop
sub
sti
inc
out
int3
dec
xor
or
dec
mov
sbb
ss
out
addr16
lods
fdivr
sub
fbstp
daa
pusha
cmp
jo
insb
shrb
ss
or
inc
xor
jb
icebp
add
ss
sub
mov
icebp
shrb
frstor
int3
pop
mov
mov
mov
xorb
call
pop
fdivr
test
dec
jne
cmp
push
xlat
xor
fisttps
dec
push
dec
out
inc
jecxz
sub
sub
sub
aas
lahf
and
imul
add
push
sbb
scas
dec
mov
ss
lcall
cmp
xchg
pop
cmpsb
pop
mov
das
sti
sub
and
imul
sbb
mov
inc
fcomps
dec
arpl
outsl
lods
mov
mov
pop
jb
pop
jmp
int
jo
test
xchg
repnz
xchg
or
mov
mov
out
inc
adc
stos
test
repz
mov
ds
xchg
push
fisttps
mov
add
int3
arpl
arpl
cwtl
or
xor
nop
movsl
sahf
sbb
mov
hlt
push
popaw
orb
test
sbb
mov
rcll
and
mov
add
mov
test
and
sbb
test
movsb
cmp
loope
in
add
stos
inc
icebp
aaa
pop
insb
lcall
xchg
pusha
mov
in
xor
lret
or
jg
sbb
ds
outsl
sbb
lcall
pop
inc
sub
add
stc
testl
out
jo
cwtl
jbe
fs
popw
xor
stc
inc
push
cmp
pushf
scas
and
testb
jmp
sub
bt
push
js
shrb
dec
pop
jecxz,pt
dec
mov
dec
push
test
push
outsl
fwait
xor
js
popf
or
cltd
push
ljmp
lock
and
ret
outsl
ja
gs
push
outsl
test
cli
ss
mov
into
or
mov
popa
jne
gs
jmp
out
mov
lea
test
sbb
or
aas
jbe
out
stc
push
stos
inc
dec
xchg
xchg
add
cs
test
rorl
loope
and
push
out
rcr
adc
push
ja
xchg
ja
loop
rorl
sub
outsb
shll
pop
in
in
cmpsl
mov
lock
fs
adc
adc
sub
fiadds
xor
lods
add
fidivl
push
cmp
or
scas
pop
jns
push
outsb
cli
lret
test
ja
sub
loope
call
xchg
jmp
movl
test
mov
push
inc
cwtl
int3
out
fisubl
stc
outsl
mov
jg
push
mov
pop
lret
jne
les
imul
fdivrs
xor
js
mov
lock
sub
xor
add
repz
add
arpl
scas
jbe
pop
add
aam
popa
xchg
imul
push
xlat
repz
pop
cmp
rorl
pusha
cmpsb
in
mov
mov
decb
xchg
push
call
add
outsl
aad
sbb
sbb
pop
cmp
int
cmp
nop
mov
les
sub
nop
add
jbe
dec
mov
or
mov
adc
repz
out
test
xorl
dec
stos
jle
inc
addr16
and
lcall
in
xchg
mov
lea
es
stos
repnz
and
daa
leavew
lods
xor
cmp
sub
and
cmp
cmpsb
out
inc
and
jmp
push
and
aam
negb
movsb
leave
mov
addr16
aam
mov
loopne
repnz
in
and
icebp
movsl
or
jns
aad
mov
pop
jp
xlat
mov
sbb
lret
lret
push
push
mov
std
mov
bound
sti
mov
addl
roll
std
cwtl
mov
test
push
fcomps
xchg
popf
dec
or
add
arpl
jne
mov
push
and
icebp
pop
fnstsw
mov
xlat
lds
je
mov
or
pusha
mov
xchg
or
movsl
icebp
test
sbb
add
and
dec
fbld
dec
dec
or
out
sub
push
jnp
xor
lret
stos
cmp
sbb
mov
negl
in
out
cmp
movsb
pop
cmp
mov
sbb
jg
push
mov
lock
inc
cmp
out
mov
call
cmp
inc
pop
cmp
int3
push
iret
mov
and
xor
andb
cmp
xor
cmp
call
pop
dec
and
lods
scas
cmc
adc
cli
aad
mov
cs
cmp
clc
daa
fcmovne
dec
jecxz
cld
pop
outsb
fistps
test
mov
mov
rorl
fsubrs
repz
jp
adcl
enter
cmpsb
lods
lret
pop
fwait
inc
push
stc
xchg
jns
push
incb
mov
add
loopne
popa
push
dec
push
inc
pop
ror
add
call
sub
mov
scas
mov
daa
sbb
sahf
clc
inc
dec
int3
dec
testb
sbb
and
filds
dec
fidivrs
mov
cmpsb
loope
xlat
popf
cmpsb
hlt
ljmp
mov
cmp
sub
fsubrl
ret
jle
hlt
xchg
stos
out
popf
stc
pop
cmpsl
leave
fs
mov
shll
out
mov
xchg
ljmp
xor
sbbl
jge
fdivrl
outsb
cld
leave
insb
in
add
iret
xor
inc
call
dec
filds
and
lret
sahf
or
push
in
lods
pop
cs
sti
test
mov
leave
stos
sahf
sbb
shlb
lods
loopne
out
inc
js
push
rol
rcrb
mov
push
sbb
push
or
mov
dec
cmc
into
repnz
arpl
cmp
push
add
or
lret
adc
lret
in
clc
iret
sub
scas
lods
ljmp
pushf
xor
pop
repnz
out
xor
jp
dec
out
mov
and
movsb
sbb
nop
push
out
mov
aaa
roll
inc
adc
stc
shll
cltd
hlt
push
jne
enter
mov
lcall
sub
add
jo
pop
enter
rcrl
in
pop
shrl
je
push
cmp
rorb
inc
test
fdivrl
push
arpl
push
mov
shl
inc
scas
inc
ja
in
pop
into
cwtl
push
clc
shrb
xorb
xchg
repz
jg
outsb
adc
push
into
gs
dec
add
outsb
sbb
xchg
lods
imul
lcall
lock
cmp
getsec
inc
dec
pop
insw
or
push
shr
jle
push
popf
rcrb
dec
pop
pop
mov
xor
punpcklwd
mov
mov
adc
repz
in
jns
mov
dec
out
aaa
inc
cmp
sbb
adc
cmp
inc
jecxz
push
stos
adc
out
test
test
insl
imul
and
sbb
mov
push
sbb
mov
shl
aam
cld
xchg
inc
cmc
fnstenv
in
mov
mov
mov
mov
or
mov
mov
or
ror
icebp
adc
mov
adc
jns
in
jmp
dec
adc
inc
or
lret
push
jmp
js
icebp
sbb
dec
adc
jl
mov
mov
pop
adc
call
or
inc
gs
sbb
les
in
loopne
jbe
adc
leave
pop
ret
jnp
inc
mov
ja
push
mov
and
ds
and
data16
sbb
sub
sbb
arpl
imulb
insb
adc
pop
or
push
mov
sti
xchg
dec
push
in
sahf
outsb
jg
es
mov
idiv
insl
cmp
fadds
scas
adc
add
outsl
push
and
sti
mov
ja
push
jl
cwtl
stos
inc
xchg
adc
lret
mov
adc
sub
movsb
insb
ret
pop
sahf
cltd
xor
aas
loope
jno
mov
sbb
test
inc
ficoms
or
stos
fisttpll
pop
mov
and
and
inc
fcomps
inc
cmpsb
add
cli
or
push
and
mov
imul
aaa
cs
les
push
sahf
pop
aas
inc
sbb
dec
movsb
inc
stos
fstps
mov
xchg
jnp
mov
xchg
push
test
out
aas
mov
lcall
jl
push
mov
add
or
jecxz
test
inc
push
clc
ficomps
mov
repnz
cmp
cwtl
pop
fdiv
sub
sub
mov
scas
daa
pop
cmp
dec
jbe
jmp
xlat
inc
inc
mov
adc
cltd
je
jb
jbe
adc
subb
adc
xchg
jge
mov
shr
pop
mov
inc
popa
scas
xchg
pop
fsubp
stos
cs
inc
xchg
stos
je
ret
ror
and
dec
bound
add
add
test
or
or
test
dec
mov
xor
shrl
add
add
pop
sbb
mov
push
popa
or
cmp
shl
outsb
andb
push
pusha
rorl
cmp
mov
sbbl
dec
fbstp
push
or
jecxz
iret
xchg
cmc
cmp
adc
movsb
bswap
fwait
scas
push
movsl
js
and
dec
xchg
mov
mulb
sbb
pop
adc
push
or
mov
or
push
nop
mov
or
arpl
int
popl
addr16
push
cltd
lock
jp
cmp
repnz
cmp
test
mov
nop
xchg
mov
push
jmp
dec
xchg
icebp
mov
xchg
les
xchg
and
pop
pop
adcl
mov
mov
lret
push
ljmp
and
int3
insl
insl
sahf
mov
fdivs
mov
xchg
sar
imul
push
add
push
jbe
xor
lret
scas
pop
push
in
push
pop
push
int
xchg
jg
mov
sub
dec
dec
or
pop
repnz
adc
jns
fldcw
adc
sbb
mov
jl
sbb
lea
or
gs
xor
push
push
sti
popa
xor
pop
push
pop
sub
push
pop
lock
and
jg
xor
lahf
aam
icebp
dec
je
popf
jmp
orl
xchg
sub
or
popf
sub
loope
mov
pop
mov
jmp
jp
addr16
sub
dec
imul
mov
pop
js
mov
rcr
jg
or
imul
lds
mov
xchg
mov
nop
dec
push
xlat
sbb
or
and
sti
adc
dec
xchg
lret
bound
jmp
in
in
dec
lret
out
mov
loopne
fsubrl
shrl
hlt
adc
add
repnz
stos
stos
xor
push
xor
cmpsl
daa
rolb
dec
outsb
jle
clc
pushf
xor
dec
or
lret
sti
sbb
jl
lcall
push
das
jmp
cmc
sti
int
fldl
notl
sub
push
mov
sbb
mov
add
pop
aas
fsts
test
popa
cmp
repz
popf
das
xor
jp
arpl
cmc
jle
movsl
rcrl
jmp
mov
ds
mov
movsl
dec
stos
imul
xchg
das
push
loope
sbb
add
jno
cmp
xchg
xor
ja
mov
jb
aam
jns
nop
dec
pop
filds
or
jo
data16
movsb
dec
mov
cwtl
repz
stos
mov
mov
mov
fstpt
das
sbb
cmp
sbb
fdivr
jge
jle
in
sub
loopne
push
popf
scas
ret
cmp
fidivrs
stos
lea
aam
in
aad
pop
arpl
sbbl
cli
arpl
xor
das
adc
jbe
sbb
test
test
xchg
or
sbb
and
dec
and
add
arpl
aad
xor
sbbl
daa
roll
clc
dec
ret
pop
mov
out
mulb
fstl
jnp
dec
js
sti
test
inc
stc
or
jp
imull
inc
add
mov
jb
mov
sub
kmovw
enter
in
hlt
cltd
addl
jmp
or
call
aaa
inc
loop
mov
ljmp
xor
sarl
decb
sub
ja
sub
sub
testl
mov
cwtl
xchg
scas
mov
push
dec
xchg
popa
icebp
cld
mov
in
jmp
mov
mov
stos
gs
incl
mov
cltd
sub
arpl
test
lea
fdivs
js
jecxz,pt
mov
or
outsb
push
mov
cs
mov
adc
inc
imul
hlt
fstps
pop
mov
ret
mov
and
push
mov
mov
negl
sbb
rcrl
es
ret
dec
or
ds
push
negb
ljmp
adc
fists
sar
xor
movb
and
movsl
cmpsb
mov
subl
mov
mov
sbb
pop
test
mov
cmpsl
jmp
or
in
lods
sub
dec
test
mov
out
into
xchg
roll
sub
push
add
mov
jb
in
into
or
xor
pop
or
inc
and
push
xchg
icebp
adc
stc
xchg
icebp
imul
lahf
xor
fists
mov
push
push
scas
adc
xor
jae
lods
sub
and
hlt
stc
mov
push
aad
cwtl
mov
stc
imull
shrb
pusha
int3
mov
mov
sub
jl
ret
push
cmp
adc
int3
pop
pop
hlt
mov
and
ret
enter
pusha
or
jne
mov
mov
mov
sub
push
sahf
mov
leave
adc
add
sbb
aam
push
sti
test
jecxz
loope
mov
mov
push
lea
outsl
add
mov
add
bound
xchg
pusha
xchg
mov
jb
push
aam
loopne
js
jg
pop
fcmovnb
inc
stos
decl
xlat
mov
mov
add
and
js
pextrw
xor
das
mov
out
imul
daa
xor
hlt
ficoms
jnp
and
inc
pop
lock
mov
lret
out
jmp
js
or
push
mov
xchg
sub
mov
pop
sarl
jp
pushf
mov
add
out
xor
ret
xor
fsubrl
pop
xchg
ret
pop
and
leave
loope
sti
fisubs
xchg
insl
xchg
lahf
mov
movsl
dec
mov
cmpsb
and
aad
inc
push
aam
gs
jg
aaa
cmpsl
or
mov
mov
pop
sbb
mov
cmpsb
xchg
sub
ret
shrl
divl
or
xchg
les
push
cmp
scas
push
loop
pop
mov
bound
and
cmp
jae
ljmp
scas
je
xor
in
movsl
fmul
outsb
push
jno
mov
push
call
into
cmc
or
cmp
and
pop
jnp
out
arpl
and
cmc
mov
stos
sbb
cmpsl
ror
daa
mov
jg
inc
test
xchg
movsb
inc
les
or
lret
imul
mov
xchg
lds
rcrb
jmp
mov
add
loop
shll
fisubrs
and
adc
mov
in
xor
fwait
mov
adc
xor
and
int
out
and
dec
dec
in
aam
stc
mov
mov
in
cwtl
dec
push
and
xor
xchg
xor
xor
bound
xchg
sub
fistpll
out
test
or
adc
les
and
aad
mov
sahf
jg
cld
inc
cmp
push
inc
fiaddl
in
cld
jge
lcall
loopne
xchg
sarb
jnp
fisttpl
fistpl
jno
add
mov
xor
mov
icebp
lahf
xor
adc
loop
loope
data16
lea
jno
pop
repz
dec
pop
mov
es
push
lea
sub
stos
mov
popf
daa
add
fadd
iret
hlt
push
add
push
outsl
mov
lret
bound
xor
pop
bnd
mov
mov
fnstenv
in
outsl
jge
es
xchg
bound
xor
aad
xchg
loop
mov
or
sbb
cmpsl
cmp
cltd
in
mov
and
rclb
lahf
inc
loope
jg
jno
int
mov
int
xchg
jmp
push
or
jl
adc
lcall
and
push
and
rorb
lahf
arpl
sub
hlt
jp
mov
out
stos
cmp
add
jns
sbb
xchg
jns
mov
in
dec
inc
loope
xchg
fsubrl
push
mov
jmp
or
cmc
push
jae
jmp
test
dec
add
pop
cmp
call
mov
jbe
outsl
out
push
out
lods
inc
and
int
fs
push
mov
or
ds
pop
arpl
add
into
outsl
push
hlt
wbinvd
mov
idivb
shrl
stos
dec
pop
jbe
jecxz
les
lret
bound
repz
jl
mov
fistl
clc
xor
cs
add
pop
bound
add
xorb
std
out
in
push
jmp
sbb
jbe
mov
mov
xor
leave
xor
popl
xchg
out
xchg
sub
and
dec
xor
clc
cmpsb
popf
adc
outsb
cwtl
lahf
adc
and
mov
xchg
jae
movsb
test
popf
jne
aam
jge
dec
ss
fprem
mov
cmp
mov
int3
pop
xchg
sub
icebp
xchg
mov
clc
add
dec
andl
scas
xchg
inc
fld
iret
or
xchg
pop
or
or
add
mov
mov
pop
int
xchg
mov
or
mov
repz
jns
push
jecxz
inc
cmp
pop
sbb
xchg
sub
in
jnp
mov
int3
jno
push
mov
xchg
clc
jl
loopne
push
push
mov
mov
out
adc
imul
int
pushf
fbstp
mov
push
int3
mov
mov
es
ja
arpl
dec
in
lods
stos
push
push
sbbl
or
mov
lods
xorl
lahf
lods
pushf
dec
int
pop
xchg
jg
or
fimuls
outsl
push
scas
or
int
mov
ss
cld
mov
hlt
push
lret
adc
and
mov
and
test
iret
data16
dec
pop
mov
rorb
adc
xor
fldcw
xchg
fnstenv
add
cmp
stos
jmp
mov
lahf
xorl
mov
bound
arpl
xorl
nop
sub
aam
jle
pop
rol
call
nop
adc
dec
ljmp
lods
and
imul
inc
mov
inc
pop
mov
add
or
clc
cs
repz
notl
into
xlat
cld
xchg
repz
and
enter
outsl
pop
adc
test
xor
pop
xor
cmp
sbb
add
fnstsw
pop
ja
stos
add
dec
loope
and
mov
lods
inc
mov
push
mov
lret
sbb
jmp
hlt
adc
scas
inc
pop
mov
or
add
cmpsb
jns
xlat
mov
lea
jb
insb
lret
pop
adc
in
cmp
fldl
movsl
mov
ljmp
pop
xor
popf
movl
push
xchg
pop
idivb
sbb
sub
pop
in
xchg
jbe
dec
into
insb
cmpps
or
or
sub
ret
push
push
pop
stos
xchg
mov
insb
je
or
bnd
mov
dec
mov
js,pn
subb
lcall
rorb
ret
loopne
scas
xchg
dec
pop
ret
iret
insb
jns
hlt
mov
data16
cmp
stos
frstor
xlat
ds
out
aaa
cld
std
mov
ljmp
adc
push
inc
push
or
bound
mov
jle
imul
popf
lcall
shr
sub
or
sub
insb
fisubs
push
adc
out
xchg
into
dec
data16
or
dec
sub
out
jo
lret
mov
or
int
sbb
testl
lock
adc
add
jl
dec
push
xor
int
popa
int
roll
xchg
mov
in
pushf
and
test
aas
lock
test
sarb
int3
sbb
jl
mov
jle
jmp
je
xchg
dec
pop
out
cs
mov
pop
clc
nop
sbb
sub
out
adc
pop
sub
lds
movsl
loope
data16
mov
or
push
leave
loop
pop
mov
cltd
out
mov
dec
jae
jge
or
adcl
pop
mov
jmp
fnsave
outsl
mov
pause
enter
jno
pop
mov
popl
aas
jae
ss
stos
jp
clc
lret
or
in
add
and
jo
fisttpll
scas
movsl
stos
lea
jp
dec
ret
ret
sbb
dec
pop
outsl
jbe
fists
mov
sbb
loop
mov
mov
cmp
popf
enter
jo
popa
mov
ss
mov
pop
pop
cwtl
jns
fidivrs
jae
out
js
pop
aad
adc
lock
jg
or
xchg
ret
mov
fidivrs
movsb
xchg
movsb
push
xchg
xor
pop
fidivs
ficomps
xchg
xorb
sbb
cmpsl
sub
hlt
notb
aas
rolb
inc
mov
sbbb
push
je
and
subb
push
mov
or
inc
push
pop
shlb
cltd
sub
pop
mov
outsb
jnp
add
xchg
xor
insl
cmpsb
lods
or
mov
in
pop
add
out
push
cld
or
cld
and
jno
cld
sbb
xor
pop
ret
fisttps
mov
js
adc
mov
jp
jle
xchg
push
pop
jl
inc
add
jno
icebp
jle
loop
cmp
fldl
pop
les
sti
xchg
push
in
jno
jb
scas
mov
lcall
adc
daa
xor
les
not
mov
push
les
adc
imul
cmp
pushf
scas
fdivrp
call
sub
jle
das
sbb
shlb
lret
jnp
or
adc
bound
lcall
cmp
repz
dec
jbe
aaa
adcb
rclb
jp
stc
test
inc
jne
shlb
in
xchg
enter
fistpl
cmp
popa
fs
mov
xchg
xchg
jmp
shl
mov
and
jnp
mov
and
inc
imul
test
ret
push
add
adc
xor
in
sub
roll
es
adc
xchg
shl
mov
out
and
arpl
push
cmp
push
adc
sbb
and
or
addr16
or
hlt
mov
sub
xlat
aam
int3
sbb
cmp
sbb
xchg
cli
lock
rcrl
mov
mov
xchg
adc
psllw
cli
fwait
inc
sub
add
ljmp
flds
jne
push
xor
xchg
xor
inc
push
cmc
stc
inc
clc
orb
push
inc
adc
mov
add
in
adc
adc
xchg
insb
or
stos
mov
stos
jge
push
je
test
leave
push
call
xlat
shr
xchg
lcall
adc
adc
rcll
and
mov
cmp
in
es
lock
push
movsl
dec
mov
mov
loop
movsb
and
mov
push
insb
mov
jno
int
ret
pop
nop
pusha
mov
gs
xor
fucomip
out
mov
sarl
and
ss
xchg
je
cmp
or
stc
fsubrs
xchg
lods
stos
xor
leave
dec
aam
in
outsl
mov
in
dec
fists
cli
sqrtps
fdivp
cmpsl
jns
fsts
push
inc
push
inc
mov
pop
jmp
sub
test
enter
xor
test
xchg
icebp
sbb
push
les
pop
lods
mov
rol
push
mov
sahf
sub
xchg
pop
cs
mov
push
mov
jb
mov
adc
sbb
mov
in
arpl
adc
sub
xor
daa
dec
xchg
sub
out
sub
ret
push
push
dec
add
push
inc
xlat
xchg
jbe
inc
gs
sub
test
mov
xchg
in
ret
fstpl
idivb
mov
sbb
xchg
xchg
sub
scas
mov
sbb
icebp
rcr
mov
outsl
lcall
outsb
in
pop
out
sbb
push
shrb
mov
mov
or
sub
repz
clc
stos
inc
and
cmp
pushf
leave
test
testl
pop
inc
xchg
jns,pn
mov
shlb
jl
dec
xchg
pop
jl
out
dec
dec
and
loopne
lret
cld
inc
jge
mov
xchg
or
and
stos
and
cmpsb
repz
cmpsl
mov
fwait
in
or
iret
movsl
test
cmpsb
dec
fistpl
adc
cmp
dec
add
adc
push
int
fs
xchg
sbb
adc
jns
sub
stos
lock
adc
pop
pop
pop
mov
add
xchg
mov
fisttps
inc
stos
mov
cwtl
jne
ds
xor
jae
out
cmpsl
and
or
int3
fbstp
pop
inc
repnz
repnz
push
mov
out
sub
inc
xchg
test
xchg
in
jl
xchg
pop
pop
cltd
pusha
jge
test
fsubp
jg
push
aaa
jge
sub
inc
lcall
adc
aaa
mov
popa
fldt
add
cmc
ret
fists
aas
or
addr16
push
mov
jle
mov
out
outsl
jb
dec
movsb
nop
add
clc
push
rcrb
shlb
das
rol
fldl
inc
fadds
mov
jmp
jmp
sbb
ds
jo
ds
sub
mov
pop
mov
shlb
loope
dec
jbe,pt
data16
adc
push
xor
inc
and
adc
inc
push
and
nop
popa
subl
aas
jl
mov
mov
jge
addr16
jnp
push
fstps
clc
xor
push
hlt
pop
arpl
sbb
dec
cmp
push
jo
outsl
sahf
or
xor
push
fiaddl
pop
fdivs
ficompl
imul
ljmp
imul
sarb
es
ficompl
mov
push
pop
adc
hlt
xor
loop
inc
daa
mov
stc
sub
cli
pushf
rorl
imul
add
cmp
daa
arpl
push
daa
fadds
jb
mov
mov
push
jmp
add
sub
movsl
rclb
int
mov
les
roll
dec
and
mov
les
add
stos
sbb
sub
je
std
movsl
jns
sti
pop
cmp
adc
adcb
pop
and
mov
sahf
mov
sbb
xchg
imul
fidivrs
mov
leave
cwtl
inc
ror
push
dec
dec
dec
cs
add
cwtl
fisttpll
out
mov
sbb
mov
xor
xchg
mov
xlat
sub
aam
rorl
jnp
jmp
jle
sbb
adc
rorl
and
sbb
pop
dec
push
and
ss
es
adc
les
les
stos
inc
fidivs
das
cwtl
jbe
lret
xchg
mov
in
orl
loope
adc
out
ss
or
xlat
gs
add
mov
outsb
stos
sub
push
sub
cmpl
loop
in
cs
mov
lahf
aam
fidivs
lret
inc
mov
xchg
sarl
push
jb
loop
js
icebp
lods
push
xlat
mov
subl
outsb
sub
insb
incb
daa
test
std
clc
sub
jne
frstor
jo
pushf
pop
xor
mov
mov
inc
lahf
stos
std
test
mov
fnsave
rcr
stos
push
gs
xor
stos
sbb
xlat
cltd
xor
leave
push
ror
int
test
sbb
test
addr16
mov
mov
push
stos
and
or
xchg
xlat
cmp
cmp
into
xor
jg
xchg
xchg
sbb
rol
sbbb
mov
inc
sahf
sub
or
jo
mov
test
neg
push
sbb
mov
es
pop
stos
call
out
idiv
scas
xchg
sbb
and
lret
jno
nop
and
imul
mov
sbb
jb
push
test
test
test
in
imul
test
mov
push
shlb
add
xor
insl
sti
mov
and
ret
lock
mov
add
test
sub
adc
sbb
pop
cmp
lock
push
push
and
fsqrt
and
and
mov
mov
jb
int
xchg
mov
jl
dec
adc
jl
dec
loope
dec
jl
in
nop
sub
insb
jle
sar
xlat
sub
dec
cld
mov
pushf
jo
xlat
fiadds
adc
stos
pop
test
cmp
in
out
insl
test
shlb
lcall
sarb
insl
mov
data16
jno
mov
fnstenv
pop
mov
jecxz
dec
bound
outsb
in
mov
ja
cmp
mov
mov
mov
fiaddl
repnz
jnp
push
cmpsb
incb
enter
scas
jmp
lret
sbb
rorl
sbb
mov
adc
mov
xor
xchg
sarl
fisttps
xchg
mov
std
xor
cs
xchg
pop
mov
enter
sahf
arpl
pop
loopne
adc
mov
add
jge
push
scas
xchg
push
rclb
mov
push
mov
jns
in
mov
clc
orl
pushf
cmp
xchg
les
or
nop
pop
or
and
or
xchg
xchg
jae
jp
test
repz
aaa
bnd
loopne
dec
in
mov
sub
addr16
iret
fdivrl
mov
cs
xor
movzbl
xor
jge
push
test
aas
test
push
movsb
mov
lea
jae
inc
out
aas
mov
pop
mov
les
and
xchg
adc
hlt
insb
mov
push
mov
xor
out
pusha
ss
xchg
maskmovq
mov
popf
dec
pop
rorb
mov
cmp
mov
iret
sub
jno
rorl
jl
cmp
xlat
sbb
sar
cmp
call
jecxz,pt
adc
out
xchg
mov
add
call
inc
daa
mov
adc
ss
gs
lea
cs
push
lods
jle
push
pop
and
cs
mov
xchg
sub
jge
pop
fwait
mov
lret
insb
mov
add
dec
cmp
xchg
ficomps
nop
cli
inc
cli
mov
or
sub
fdivl
jmp
sub
sti
jne
cmp
xchg
psraw
roll
out
test
scas
jg
outsl
pop
push
add
and
ret
cmpsb
ret
jmp
lods
xor
lret
jbe
sub
xor
scas
cmpb
fbld
or
js
scas
jecxz
aas
dec
rcrb
jmp
push
jge
or
push
lret
jae
clc
clc
in
popa
mov
lods
sub
pushf
lods
rorb
jl
mov
sbb
fcoms
lea
add
and
lret
icebp
in
dec
stos
cli
xor
adc
lret
xchg
ret
and
xchg
xchg
pop
repnz
out
sub
pusha
push
iret
shlb
call
aad
add
jbe
sbb
int
sub
cwtl
mov
push
push
jbe
mov
les
inc
mov
fdivr
sarb
pop
aas
pop
cvtps2pd
fwait
fwait
loope
lds
test
jae
int
pop
mov
shll
push
mov
lea
js
or
shr
xor
and
add
arpl
fstpt
sbb
pop
andb
nop
and
lahf
call
iret
fdivp
imul
lret
mov
pop
repnz
inc
into
in
xor
add
js
loope
rdpmc
sbb
lods
push
and
leave
sub
sti
test
xor
mov
mov
xor
fisubs
pop
sub
mov
sbb
lret
xchg
mov
cltd
mov
int
fucomi
dec
lahf
mov
aam
cmp
pop
mov
in
cmp
faddp
movsb
mov
in
lret
andl
cltd
dec
cmpsl
cmc
lea
ror
push
mov
xchg
out
loopne
and
mov
jne
into
cmp
add
dec
in
sub
dec
into
hlt
fisubl
je
push
movsb
dec
cwtl
mov
pusha
fs
iret
test
adc
xlat
loopne
cmp
shll
dec
inc
das
test
add
aam
jns
cmp
push
insl
icebp
cld
popa
stos
andb
sub
or
cmp
jb
push
or
stc
dec
pop
jnp
or
lods
and
mov
mov
jge
pusha
sti
xchg
stc
inc
push
adc
into
das
add
and
and
sbb
add
xorl
jno
inc
xor
stos
or
jge
and
data16
out
test
or
push
pop
dec
and
inc
sti
or
xchg
and
aad
fimuls
jp
cwtl
gs
cmp
and
lock
out
mov
std
or
aas
enter
call
mov
sahf
inc
loope
fcomps
sub
cmpsl
std
mov
sub
mov
stos
cmp
sbb
xchg
adc
mull
scas
sub
nop
ja
ret
mov
jecxz
push
push
push
rcll
icebp
adc
mov
jne
xlat
mov
outsb
add
mov
mul
pop
movsl
sbbl
ror
sbb
mov
outsl
cld
outsb
mov
shll
sbbl
test
lahf
imul
into
in
jbe
dec
pop
dec
mov
or
jno
cmpsb
sub
xlat
pusha
adc
jp
mov
xchg
stos
cmc
les
iret
xchg
mov
gs
mov
add
iret
lods
push
pusha
enter
outsb
cmp
push
dec
or
jl
and
ret
fsts
or
testb
or
xchg
movsl
in
sti
push
sub
fadds
cmc
dec
and
fs
push
addb
test
and
lret
push
call
inc
aas
lock
aad
jg
jne
insl
insl
mov
pop
jg
mov
test
insb
out
in
mov
out
mov
mov
shlb
popa
addl
lret
mov
jg
mov
imulb
dec
test
push
mov
mov
inc
jno
pop
lret
cld
in
scas
in
lahf
ss
shr
cwtl
jbe
mov
push
ss
lahf
sahf
lods
rolb
xchg
push
pop
ljmp
dec
xchg
ja
add
xchg
cmp
rcll
cmp
enter
xlat
sub
push
aam
mov
popf
jb
in
les
sbb
test
mov
push
xchg
or
stos
clc
push
pop
movsl
lret
adcl
pop
mov
sbb
mov
dec
insl
popf
xor
cmpl
push
rcrb
pop
or
icebp
mov
xor
adc
dec
repnz
out
test
out
aam
aam
mov
stos
inc
ss
mov
fidivrl
arpl
sbb
mov
sub
push
or
xchg
lods
repz
lahf
cmp
mov
mov
fiaddl
adc
dec
in
pushf
xor
fwait
jecxz
mov
aas
cmp
movsl
lret
out
nop
dec
stos
inc
lods
mov
int
gs
jbe
sbb
sbb
dec
and
push
xor
and
shlb
fnsave
sub
in
aas
dec
mov
xchg
push
xorb
mov
imul
lock
ficoml
mov
jno
sbb
pop
dec
or
push
test
lock
push
inc
rcl
fdivr
push
negl
outsb
pop
cmp
adc
ret
pop
push
jno
fisttps
jmp
iret
insb
sahf
loope
add
scas
pop
sub
push
jb
movsb
cmp
shlb
lods
sbb
in
adc
fldt
pop
dec
sbbb
add
pop
push
or
pusha
dec
out
add
sbb
fisubrs
addr16
popa
clc
or
out
sub
das
add
xor
push
push
xor
mov
aam
push
outsl
inc
adc
dec
mov
jecxz
cltd
jo
and
and
mov
fwait
adc
inc
jle
scas
arpl
push
aad
inc
push
push
or
xchg
sub
xor
sub
xchg
or
fistpll
pop
sbb
fldcw
dec
mov
mov
mov
rcrb
ljmp
xlat
hlt
jnp
lret
mov
jbe
fs
dec
lret
add
data16
sub
int
mov
inc
jne
int3
arpl
xchg
lret
insb
repz
es
dec
or
aad
mov
xor
sahf
push
loopne
test
outsb
mov
fadd
xor
jmp
pop
bound
cmp
or
pop
je
mov
les
inc
fs
push
push
lock
out
xchg
test
repnz
lea
jecxz
lods
es
out
sbb
push
sub
test
mov
loope
ficomps
sbb
cmp
sti
pop
xchg
cmp
jecxz
add
test
popa
or
sbb
push
mov
jbe
out
dec
add
mov
mov
xchg
repnz
adc
iret
das
cmp
sbb
jmp
repz
add
xchg
das
les
dec
push
mov
rep
out
fdivs
in
pop
sbb
rcr
insl
lret
jl
pop
push
sbb
mov
add
test
pop
cmc
cmp
sub
arpl
mov
xor
push
out
pop
add
pop
push
mov
lods
stos
xor
fcmovnbe
pop
out
add
mov
bound
lret
cmpl
push
push
jno
mov
jle
out
stos
and
fwait
ret
xchg
sub
mov
sub
dec
in
cmc
dec
sarb
and
outsl
les
insb
mov
cmpsl
jg
rcrl
adc
into
fdivs
mov
jl
mov
push
lock
stos
cmpsl
inc
test
cmpsl
jg
pop
insb
adc
sbb
adc
dec
jne
and
rcl
repnz
dec
in
divb
add
dec
pushf
jb
incb
popf
lds
push
test
je
cli
in
sbb
xchg
xchg
mov
pop
push
ljmp
jno
sbb
mov
data16
jecxz
mov
clc
cmp
mov
mov
jne
add
fmull
fbld
pop
mov
sti
mov
xor
pop
push
mov
sbb
adc
sub
ds
and
arpl
in
inc
pop
lock
hlt
sub
add
mov
add
repz
cmpsb
pop
cmc
adc
cwtl
and
inc
and
inc
pusha
push
in
sbb
fmull
iret
sbb
mov
popa
and
or
and
dec
mov
das
inc
std
adc
loope
pop
sti
push
adcb
sbb
movsl
push
inc
lahf
daa
fsubrs
sub
mov
push
mov
push
dec
and
into
in
cmpsl
ds
out
xchg
call
cmp
or
adc
mov
rcll
xor
mov
sarl
popa
pop
fdivr
into
xchg
in
cwtl
imul
int3
mov
testb
and
roll
sbb
adc
push
mov
push
xor
inc
pop
sti
xchg
and
inc
inc
rorb
orb
loop
pop
lock
aam
shrb
cmp
lret
imul
mov
enter
sbb
jl
in
and
test
int3
jecxz
cwtl
sbb
negb
clc
add
movsb
lret
dec
push
fmuls
jge
cld
jns
cmpb
xchg
mov
fstpl
mov
adc
push
roll
enter
stos
inc
adc
jb
pmaxub
xor
xlat
pop
in
enter
movsl
add
sub
xchg
pusha
pop
fdivs
xchg
std
adc
and
push
xchg
rcrb
add
xchg
jmp
mov
jno
out
sbb
jge
dec
insl
test
cmp
jbe
enter
sbb
mov
jns
inc
pop
push
pop
rcrb
and
je
adc
dec
jb
cli
mov
ret
leave
sbb
push
imul
ret
mov
jno
dec
mov
cmp
cs
pop
adc
inc
jg
imul
xor
pop
dec
mov
adc
xchg
dec
and
xchg
pop
popf
cltd
cmp
xchg
mov
and
sub
rclb
cmp
gs
pop
and
jp
xchg
push
adc
lahf
push
sarb
loop
scas
mov
sbb
xor
xchg
dec
mov
jmp
ja
lahf
cmp
je
inc
mov
andl
rorb
fimull
xchg
rcl
rclb
dec
inc
js
add
inc
int
jbe
add
cwtl
dec
mov
dec
xchg
dec
push
pop
cmp
pusha
jmp
sub
lret
dec
pop
lret
js
bound
jge
pop
movsb
mov
mov
adcb
push
add
sbb
inc
das
mov
jns
repz
pusha
xor
xchg
and
jl
jno
and
and
test
lcall
fnsave
dec
lret
nop
cs
push
mov
mov
mov
mov
icebp
test
shlb
ret
lcall
jne
adc
aam
or
jge
shlb
push
mov
add
mov
gs
ja
fdivl
or
and
addr16
sbb
or
pop
pop
out
cmp
movsb
jno
idivb
repz
popa
popf
pusha
divl
xchg
daa
test
iret
and
pop
mov
mov
sbb
dec
dec
and
faddl
mov
pop
ds
jecxz
js
icebp
test
inc
scas
sbb
mov
jle
ficoml
int
int
mov
out
in
jbe
pop
lret
dec
and
dec
in
adc
out
arpl
loope
inc
push
jmp
add
mov
mov
cmp
mov
inc
xlat
and
cmpsl
xchg
loop
sub
movsb
inc
pop
rorb
arpl
add
xor
ret
pop
and
mov
cmp
sbb
mov
mov
and
repnz
lret
pop
testl
push
bound
mov
test
ret
push
int
add
mov
mov
loopne
pop
add
xchg
pop
cmp
inc
fwait
cmp
js
ss
test
push
mov
push
pop
add
rclb
repnz
hlt
sbb
pop
sbb
sbb
mov
js
add
xchg
inc
jns
xor
pusha
lods
and
dec
push
nop
inc
or
loop
mov
xchg
repnz
dec
pop
and
fimuls
mov
cs
sbb
mov
jno
or
mov
loopne
xor
pop
clc
or
notl
je
mov
add
dec
stc
fiaddl
mov
stos
inc
push
adc
mov
pusha
mov
ret
hlt
sub
xchg
pop
adc
add
push
fdivr
dec
addr16
cwtl
jo
shrl
mov
dec
xchg
pop
fiadds
fisubs
sub
push
pop
leave
test
inc
repnz
fildl
test
mov
test
ds
xchg
jne
xor
xchg
movsl
nop
sbb
mov
aas
lods
mov
push
adc
mov
jb
bswap
inc
pop
movsl
cmp
jne
mov
inc
lds
nop
in
sbb
adc
xchg
mov
xchg
jmp
adc
or
mov
push
add
jp
sbb
mov
lods
shll
insb
test
mov
rorl
jno
dec
pop
or
mov
sbb
rol
imulb
repnz
inc
imul
gs
test
push
ret
add
jp
jno
adc
push
test
ja
cld
mov
inc
in
push
inc
cmc
push
movsb
call
cmp
jl
insl
mov
jle
jbe
dec
mov
mov
insl
decl
pop
mov
out
mov
pop
push
pusha
dec
dec
loopne
add
int3
mov
cmpsl
cmpsl
repnz
in
cld
add
test
sbb
inc
dec
in
test
insb
xchg
stos
or
popa
cmp
daa
mov
xor
mov
mov
mov
ret
dec
scas
adc
pop
or
out
dec
mov
cmp
or
data16
and
xchg
mov
jmp
push
add
dec
inc
into
scas
cmp
ret
pusha
aas
roll
fadds
fcompp
icebp
mov
shl
fisubrs
mov
movsb
sahf
jb
fcmovbe
push
adc
out
xchg
rorl
lahf
inc
test
mov
xchg
inc
mov
sbb
in
cmp
push
or
dec
push
ds
stos
dec
or
xor
dec
mov
pop
bound
ljmp
adc
outsb
aas
sti
push
in
inc
add
push
lock
add
insb
sub
ss
fstpt
shr
push
push
or
loopne
fistpll
je
adc
fcoml
jecxz
out
sub
jmp
jp
mov
loopne
mov
mov
inc
xchg
movsb
movsb
pop
sbb
dec
adc
test
push
adc
inc
push
jne
mov
mov
push
or
es
adc
fs
inc
jne
icebp
xchg
das
adc
pop
push
test
cltd
xor
in
adc
pop
mov
gs
push
andl
cli
cmp
jle
mov
xor
mov
xor
test
pop
loope
inc
in
lds
orb
sub
cmp
popa
je
shll
jno
or
push
sub
enter
les
pop
sub
mov
push
into
push
cmp
jl
mov
inc
test
or
cmp
and
popl
lret
cmp
stos
out
xchg
push
push
fistl
xchg
or
clc
cmp
adc
cmp
stc
ds
lcall
pop
out
mov
and
icebp
enter
into
sahf
mov
xlat
xchg
fidivrs
bound
ffree
pop
cmovl
push
andl
xor
dec
cmp
adc
mov
xor
and
adc
mov
les
movsb
rcrl
jmp
pop
pop
pop
popa
sbb
fs
pop
pop
orb
cli
pop
es
adc
stc
and
mov
daa
in
push
loopne
mov
xlat
lahf
test
ss
fs
mov
test
mov
fimull
mov
punpckhdq
leave
pop
sub
call
and
sbb
arpl
dec
in
lcall
int3
pusha
data16
xchg
mov
test
test
shrb
aaa
adc
bound
mov
push
mov
lahf
push
xchg
aaa
int3
ss
lods
jmp
mov
cmc
pop
imul
xchg
int
inc
pmaddwd
call
cs
sub
xchg
sti
or
adc
mov
xor
cmp
xchg
pop
pop
repnz
dec
jle
push
xor
pop
data16
lcall
loopne
repnz
adc
mov
adc
psadbw
push
dec
nop
mov
ss
out
inc
xchg
xor
clc
cltd
pop
es
inc
or
cmp
pop
push
push
hlt
jmp
push
in
inc
int3
cmc
adcb
in
popa
ss
cmpsb
fldcw
inc
dec
iret
cmpsb
mov
mov
sbb
xor
mov
mov
dec
sub
mov
mov
adcl
inc
out
nop
stos
inc
je
ljmp
fwait
mov
pop
push
les
leave
sbb
xor
jg
pop
daa
into
loope
or
xor
sbbl
arpl
dec
cmp
cmp
sbb
es
cmp
incl
push
je
es
cltd
or
js
jg
in
sti
mov
cmc
mov
or
int
xor
test
js
mov
lock
xchg
add
xchg
sbb
mov
sub
out
sti
sub
iret
xor
dec
mov
data16
pop
and
add
test
imul
pop
push
jno
outsl
stos
or
sbb
mov
jb
int
inc
sbbb
push
adc
loop
xchg
mov
aas
insb
mov
mov
mov
mov
cli
lret
and
jg
adc
sahf
inc
data16
fistps
mov
cmovne
mov
mov
iret
jmp
shrb
dec
dec
push
dec
fsubs
or
sub
sub
cmc
arpl
scas
and
push
loope
dec
mov
bound
mov
pop
adc
xchg
jae
mov
popf
imul
cwtl
bound
psllq
lcall
cmp
das
and
arpl
movsl
push
test
xchg
sti
mov
mov
les
xchg
cmpsb
shll
cmp
in
push
imul
out
push
and
imul
stc
sub
push
cs
test
pusha
not
aam
aad
cmp
lretw
or
jbe
push
je
jmp
and
pop
or
pop
and
and
pop
jb
dec
jg
mov
mov
jb
pop
filds
pop
adc
int
sub
mov
adcl
mov
mov
adc
leave
push
mov
jg
cs
xchg
or
mov
pop
jp
mov
push
popf
cltd
push
inc
dec
jg
jae
pop
into
shll
add
leavew
adc
mov
rcl
repz
xchg
cmp
das
aam
das
mov
and
push
fildl
fldenv
mov
mov
sbb
mov
lahf
push
shr
ljmp
test
cmp
test
data16
das
popl
shr
jae
inc
mov
xor
lret
push
fwait
rcr
xor
and
icebp
and
xchg
cs
dec
arpl
fbld
xchg
fucomip
arpl
lret
dec
dec
pop
mov
scas
aam
popa
leave
jl
subl
dec
movsb
xlat
lds
sbb
cmp
jecxz
jge
rcrl
shlb
or
fcmove
pop
movsl
imul
repnz
add
test
add
lret
rcr
arpl
cmpb
mov
pusha
fcoml
enter
adc
popl
loope
mov
or
stc
sub
fldt
push
and
fsubrs
rol
ror
mov
ret
or
loope
sbb
sahf
sbbl
popf
mov
lret
push
cwtl
in
push
cltd
les
dec
popa
jno
mov
pop
imul
add
push
inc
call
sbb
cmpl
add
inc
icebp
or
dec
inc
gs
jg
ljmp
lock
flds
js
mov
push
adc
cmpl
dec
vmovupd
cmp
dec
subb
adc
sahf
stos
dec
xor
shll
pop
into
cwtl
in
sbb
bound
test
adc
add
sub
daa
mov
cmp
jge
xor
mov
push
sahf
ss
sahf
std
cmp
jmp
cwtl
xor
out
push
mov
push
mov
mov
inc
movsl
mov
jl
icebp
fisttps
rclb
adc
jg
xchg
cltd
jbe
mov
in
push
loopne
mov
jb
stos
jne
js
lret
adc
jp
les
sbb
aas
shll
ss
das
lea
xor
inc
push
cwtl
pop
cmp
dec
mov
loopne
xor
pop
and
add
shll
ds
pop
mov
or
sbb
pop
js
inc
inc
lods
aaa
xor
daa
stc
fadds
int
inc
lret
jl
test
outsl
jnp
jnp
add
add
jo
push
mov
push
dec
shlb
mov
in
sbbb
jge
lcall
cli
mov
rcll
out
jg
mov
inc
mov
push
xor
fld
sbb
in
push
push
xorl
jne
fs
and
jecxz
clc
popl
or
gs
push
push
mov
sbbb
popa
int3
test
inc
fdivr
sahf
push
dec
dec
xchg
fsts
sbb
decb
cmp
lods
add
xchg
pop
pushf
and
xlat
repz
in
int
loop
mov
dec
adc
sbb
lods
lcall
movsb
mov
sbb
mov
out
sahf
add
js
xor
mov
out
xor
loop
pop
repz
aam
ja
and
adc
mov
mov
sbbl
pop
add
jmp
sahf
clc
push
and
push
loope
fsts
lea
jmp
sbb
sbbb
js
aam
sub
mov
push
imul
ret
mov
or
lret
rclb
mov
std
rcl
jne
shrl
mov
inc
arpl
mov
jmp
mov
lods
in
sbb
xchg
daa
vpunpckhbw
imul
sbb
and
lret
orl
stos
inc
sahf
xchg
daa
leave
sti
push
jno
scas
bound
lds
jb
cmp
jecxz
je
jo
xchg
and
add
dec
inc
jb
notl
in
inc
pop
inc
loop
popa
enter
fistpl
add
mov
xor
gs
push
mov
js
adc
adc
ds
fsubrs
and
cmc
nop
pusha
pop
lret
dec
or
sub
fisubrl
or
shrb
dec
and
mov
cmp
inc
xchg
int3
fists
adc
sbb
xchg
inc
and
add
push
push
cmp
add
in
lock
out
xchg
jge
fcoml
adc
lock
jg
inc
cltd
mov
roll
or
das
sbb
inc
sub
mov
cmc
and
jne
pusha
jp
adc
pusha
inc
stos
data16
cmc
mov
push
test
xchg
xlat
or
push
dec
xor
or
push
xchg
push
aad
cmp
ljmp
xor
xchg
out
clc
mov
std
pop
pop
outsb
cmp
fwait
mov
mov
lea
dec
popl
daa
adc
mov
rorl
mov
push
cmpsl
mov
mov
xchg
and
sub
fwait
cmc
adc
cmp
data16
imul
dec
jne
sbb
jnp
jmp
push
jo
adc
pop
jp
sbb
js
ss
leave
sahf
sub
mov
add
adc
lret
xlat
lods
lret
or
stc
daa
mov
sub
cmp
hlt
push
dec
mov
jl
mov
pop
repnz
stos
add
and
pop
in
test
fdiv
add
mov
xchg
rcl
popa
call
pop
pop
cli
inc
cwtl
mov
add
adc
cld
sbb
cmc
adc
mov
in
lods
sti
aad
out
cmpxchg
lods
jecxz
sub
adc
dec
imul
outsl
push
jmp
js
movsb
jle
popa
jecxz
jg
ret
testb
aas
adc
out
sbb
daa
mov
test
inc
mov
add
aas
xor
jmp
lods
mov
jnp
mov
inc
xchg
imul
mov
insl
aaa
push
xchg
xchg
pop
jae
gs
mov
pop
cmp
xor
adc
cmp
arpl
jle
lret
dec
jg
or
cwtl
mov
inc
mov
sub
out
mov
sbb
mov
stos
in
imul
sub
add
xchg
mov
xchg
add
xor
scas
ja
jne
push
es
mov
sub
in
fadds
cs
mov
mov
xchg
sar
mov
mov
aaa
xchg
lcall
add
adc
gs
dec
push
sbb
imul
mov
jmp
inc
cmp
push
push
xchg
xchg
mov
sub
andb
mov
xor
dec
iret
sub
stc
or
dec
and
aas
dec
xor
fucomip
push
les
iret
popf
orl
iret
push
jae
roll
push
add
cmpsl
pop
sub
ret
fadds
shrl
adc
jns
fs
push
lcall
push
mov
or
sub
stc
or
cs
fistpl
cmp
xchg
call
adc
push
stos
push
push
inc
xchg
xor
push
stc
mov
ljmp
out
clc
mov
iret
test
mov
fidivrl
rcl
iret
fidivs
or
clc
xchg
mov
lods
jecxz
sbbl
scas
insb
cmpsb
jns
pop
stc
push
int3
add
push
jo
dec
enter
push
imul
cmp
lret
insl
fimull
iret
sahf
push
cmpl
add
lret
sub
xchg
sbbb
movsl
daa
fldcw
lret
xlat
and
dec
and
fbld
in
jns
out
stos
std
push
mov
scas
sub
xor
repnz
inc
std
cmp
je
cmp
js
aam
sbb
mov
fbstp
je
repz
jle
mov
adcb
dec
pop
pop
mov
xchg
xlat
ret
out
call
sbb
mov
pop
stos
clc
insl
jge
mov
jns
mov
xor
bound
adc
sbb
jge
loopne
lea
cmpl
bound
clc
mov
rcrl
add
mov
ja
out
dec
push
out
cmp
cmp
pop
dec
pop
sahf
xchg
roll
pop
fwait
xor
stos
inc
clc
pop
insb
and
test
jge
scas
fcompl
or
lcall
fwait
and
mull
dec
mov
fcoml
push
rclb
jno
loopw
rcrl
out
outsb
sub
jne
clc
inc
adc
jne
ljmp
inc
les
mov
fisubrl
cli
nop
lods
cmp
xchg
inc
xlat
loopne
ds
stc
adc
push
ljmp
psrad
leave
or
fwait
xchg
xor
je
push
out
dec
in
call
int3
scas
jae
sub
sti
sbb
push
cltd
or
out
test
lcall
hlt
mov
jmp
outsb
sahf
add
or
pop
jl
inc
mov
mov
into
or
add
cwtl
dec
lock
out
and
cmp
inc
cmc
mov
outsb
jb
int
sbb
out
push
gs
cmp
lea
or
int
popa
rcrl
negl
dec
lcall
mov
stos
pusha
pop
lcall
popa
xchg
pop
jl
fstpt
mov
cmpsl
or
push
into
gs
out
sub
notb
scas
pop
mov
icebp
pusha
out
sub
jge
mov
xor
add
sbbb
or
pop
add
and
adc
mov
call
sbb
loope
cmp
pop
xchg
inc
inc
stos
dec
xchg
pop
mov
push
xchg
scas
push
sbb
lods
ljmp
es
jl
es
sub
cmp
das
arpl
aam
or
cmp
sub
pop
lock
pop
sahf
popa
and
into
jge
mov
ret
sbb
lret
xchg
xor
outsl
and
js
add
jns
push
jl
outsb
mov
cwtl
je
imul
pusha
pop
adc
pop
lods
xor
leave
adc
cli
sbb
sub
xor
pop
sub
sahf
adc
fnstenv
or
mov
loopne
jb
dec
dec
mov
lret
insb
mov
fsubrs
adc
lret
jl
subb
aas
ret
nop
pop
in
shll
and
cmp
in
in
adc
int3
aas
out
dec
leave
call
cmpsb
movsl
fiaddl
jne
pop
adcl
xchg
mov
fldt
dec
add
xchg
stos
outsb
cmp
ss
mov
clc
and
pop
repz
mov
out
push
or
adcl
ret
cli
push
sbb
pop
sub
adc
sub
fstl
leave
pusha
jne
mov
jno
aas
fcoml
scas
inc
cmp
aas
sub
or
mov
in
ret
or
cltd
aad
insl
pop
xchg
stc
pop
or
cmpsb
test
sbbl
push
data16
inc
icebp
xor
adc
mov
mov
adc
mov
xchg
dec
arpl
jg
ja
adc
sub
jp
shll
mov
inc
fmulp
lea
mov
inc
into
gs
shlb
mov
addr16
push
inc
pop
inc
mov
xor
or
mov
mov
inc
push
popf
xor
xchg
cs
push
and
fnstsw
std
xchg
ret
add
dec
mov
xchg
mov
sub
fidivrl
lock
xlat
shlb
in
push
push
jmp
xor
inc
inc
ss
push
mov
add
ss
and
lea
add
push
inc
mov
scas
mov
arpl
outsl
push
cmp
mov
scas
inc
mov
push
aas
pop
xchg
inc
xlat
or
push
inc
adcl
into
imul
dec
in
mov
imul
ss
fbld
leave
js
cld
sbb
dec
sbb
xchg
sub
lret
call
push
sub
jg
movsl
cmp
aad
mov
sub
rcrb
cmp
pop
jle
lock
jp
push
lods
fldenv
in
xchg
sub
je
in
jmp
scas
push
xchg
sub
or
lcall
pop
lock
popa
clc
and
push
mov
jbe
roll
add
and
and
push
push
test
test
jo
mov
add
mov
lea
rcrl
pop
xchg
xor
imulb
mov
mov
jge
mov
fisubrs
adc
test
add
mov
pop
mov
rcrl
stc
lock
call
sbb
push
popf
lahf
imul
mov
pop
in
xchg
sub
push
cmpsl
ds
scas
inc
sbb
test
xchg
sub
mov
inc
mov
fnstenv
fcmovne
fs
and
push
stos
aad
fdivl
in
clc
mov
sub
pop
repz
cld
push
ljmp
jno
jl
add
shlb
mov
repz
scas
push
aas
cmp
popf
xor
pop
pop
hlt
mov
mov
rcl
jle
insl
mov
push
out
es
mov
jne
jp
adc
shll
lds
int
pop
sti
dec
pop
idivb
inc
fmuls
mov
test
cltd
xor
aas
and
popa
inc
nop
imul
xchg
out
dec
adc
shrb
aaa
and
repnz
lods
inc
mov
call
push
test
movsl
cmp
lods
inc
sub
movsl
cmp
dec
aad
jge
push
in
push
sahf
cmp
inc
pop
jmp
pushf
and
movsl
cmp
fcomps
mov
fwait
out
xchg
sub
cmp
es
push
stos
dec
inc
fidivrs
fnstenv
sahf
gs
lret
sbb
dec
jecxz
pop
sbb
dec
xchg
xor
mov
in
nop
or
cmp
rcrl
aad
jo
or
int
movsl
cmp
in
icebp
mov
inc
sub
jno
insl
add
xchg
iret
leavew
lea
push
adc
push
pop
cmc
or
cmp
fdivl
in
jnp
push
inc
fidivl
add
inc
and
add
jns
add
xor
mov
andl
popf
xor
out
imul
and
pop
icebp
xor
icebp
xchg
sub
fnstenv
add
jb
icebp
out
and
mov
inc
xor
mov
in
clc
pop
imulb
push
popf
sub
loope
sub
out
and
cmp
shrl
stos
inc
and
dec
loope
add
jns
cli
push
out
ljmp
sub
lds
inc
fldenv
loop
notb
add
cwtl
xor
mov
and
sti
and
mov
cmp
daa
xlat
sbb
push
xor
jl
dec
in
fbstp
fcom
insl
or
adc
inc
hlt
adc
adc
out
xchg
or
js
jmp
add
cmp
inc
fsubrs
jmp
adc
cmp
arpl
das
jmp
iret
data16
repnz
inc
fisubrl
call
stos
inc
and
aas
cmp
std
xchg
das
call
jnp
and
movsb
das
loop
js
clc
dec
loopne
or
pop
inc
mulb
es
xchg
or
pusha
divl
adc
and
fcmovnu
jo
sti
jle
sub
in
dec
repz
and
clc
popl
sti
enter
jnp
push
repz
push
sub
pop
negb
mov
clc
sti
test
sub
test
pop
repz
loop
cli
mov
insb
arpl
push
jmp
mov
add
stc
and
arpl
outsb
add
out
mov
bound
fbstp
mov
mov
pop
xor
mov
cld
xchg
cmp
ret
xor
popa
or
lods
in
out
popf
xor
cmp
or
xchg
sub
fucomp
mov
push
or
insb
cmp
cmp
sbb
or
cmpl
xchg
sub
in
ljmp
jecxz
insl
cwtl
sbb
mov
ss
loope
es
xor
inc
outsl
mov
in
rcr
push
or
das
in
popa
adc
mov
insl
or
pop
out
add
push
data16
xchg
pop
test
lds
aad
and
push
sub
jns
and
mov
jl
mov
jne
jmp
lret
inc
push
movsl
icebp
sbb
mov
inc
jbe
or
mov
dec
lock
or
pushf
addr16
xchg
mov
sub
out
cmp
bound
pop
leave
pusha
mov
xor
lods
out
fidivl
cltd
xor
add
sub
rorl
test
or
cmp
inc
scas
inc
jae
int
mov
stos
fstpl
xchg
mov
xor
push
call
sar
sub
das
push
das
movb
mov
int3
inc
int
jae
xchg
fnstenv
cmp
nop
push
lea
andl
fcmovb
pop
adc
and
mov
pushf
cmpsl
ds
push
and
mov
dec
insb
repnz
mov
mov
mov
fdivr
xchg
push
xchg
in
lds
sbb
and
iret
stos
dec
mov
jp
jg
fwait
push
insl
int
and
push
out
add
push
test
ret
negl
fwait
xor
daa
sbb
and
xor
stos
addr16
or
fcmovb
adc
loope
sbb
xchg
xor
scas
popa
mov
aas
push
mov
xlat
out
ds
rolb
jae
xchg
daa
pop
jne
mov
and
jmp
mov
adc
inc
rcll
add
int3
xchg
and
fcoms
arpl
loope
test
sub
mov
sbbl
push
push
test
and
xchg
and
in
or
cltd
jg
adc
sarl
mov
ss
fisubrs
or
xchg
push
nop
movsb
cmp
in
test
push
in
addl
out
fcmovne
shrl
cld
jbe
sub
push
movsl
dec
dec
mov
popf
fwait
fwait
xchg
in
idivl
cmp
pop
jns
pop
mov
lcall
add
mov
inc
ja
repnz
push
mov
adc
scas
outsb
xchg
sti
sub
pushf
int
sub
sub
dec
dec
lods
pop
dec
pop
push
punpckhbw
jnp
cmp
nop
daa
addl
jp
ficoml
push
les
insl
fidivrl
jg
lods
mov
repnz
mov
in
xchg
mov
call
cmp
adc
pop
cltd
jne
and
fisubs
sub
pop
jp
jl
xchg
dec
mov
pop
popa
push
sarb
xor
add
sti
push
daa
cs
jge
les
cmp
in
aaa
pop
mov
popa
jns
orb
mov
inc
jb
pop
jecxz
leave
mov
fdivl
fcomp
inc
or
popa
aad
subb
mov
out
js
out
icebp
sbb
loop
movsb
xor
mul
xor
out
out
xchg
xchg
aam
or
adc
mov
cli
add
lahf
cmp
daa
in
int
jp
cmp
pop
fwait
stc
pop
dec
mov
mov
pop
movsb
insl
stos
xor
repnz
sub
es
lods
xor
dec
push
pop
fstpl
push
into
bound
lea
inc
les
loop
xlat
out
and
inc
test
cmp
cltd
negb
cmpsl
add
pop
adc
sti
xchg
mov
sub
cmp
or
in
or
ljmp
mov
jb
out
dec
or
adc
stc
push
cli
out
scas
es
into
adc
fsubrl
lret
inc
rcll
out
mov
outsl
add
adc
nop
sbb
pop
scas
test
int
pxor
fcoml
or
ds
icebp
stos
xchg
adc
addr16
out
enter
push
jb
imull
mov
push
call
cld
stc
sbb
into
mov
push
movsl
add
xchg
xchg
jmp
or
jo
in
loope
in
inc
push
or
femms
adc
test
xor
mov
test
pop
icebp
insb
leave
sub
sarl
sub
add
cmp
aam
mov
fsubl
ljmp
and
mov
pop
adc
mov
out
sbb
jp
cmpsb
xchg
sbb
mov
out
data16
mov
fnstcw
loop
imul
movsb
dec
iret
cld
pop
daa
mov
xor
mov
xchg
push
dec
or
dec
popa
cltd
push
push
ds
dec
cmpl
mov
ljmp
nop
daa
pop
lods
mov
xor
shll
cmp
inc
jg
fiaddl
jmp
fidivl
or
mov
mov
in
sbb
out
sti
xchg
sub
or
popf
cmpb
adc
mov
inc
orl
loopne
test
mov
int
push
enter
stc
add
xor
hlt
jne
stc
arpl
js
xchg
dec
adc
dec
adc
std
je
sti
xor
sub
jmp
popf
test
fimull
into
mov
pop
sbb
xchg
mov
sbb
fldcw
cmpsb
jle
aad
loope
dec
ret
scas
fs
pop
xor
sub
and
sbb
adc
sub
xor
cmp
pop
jnp
imul
mov
mov
pop
mov
icebp
sahf
xchg
mov
sub
xchg
add
test
aad
imul
jbe
dec
add
mov
xchg
fwait
ja
and
adc
pop
test
xchg
dec
inc
mov
int
pop
ret
jecxz
mov
fcmovne
inc
in
pop
sbb
cmpsb
mov
and
fbld
cmp
jle
shrl
pusha
lea
pop
inc
insb
cmpsb
pop
pushf
testl
cmp
addb
mov
arpl
aam
jp
loopne
mov
hlt
sub
pop
sahf
shll
fistl
and
clc
jb
xchg
adc
or
xchg
add
sub
gs
addr16
sbb
xchg
call
movsb
repz
pop
adc
cmp
jne
sarl
stos
xor
dec
xchg
ficoms
adc
inc
cmp
or
in
mov
sub
push
push
mov
xor
mov
mov
xchg
jle
mov
pause
pop
mov
jmp
sub
in
ljmp
push
pop
push
mov
dec
add
mov
push
sbbb
pop
or
pop
fwait
pusha
inc
mov
scas
sub
out
adc
add
mov
adc
inc
mov
insb
jg
jp
nop
movl
jge
arpl
mov
sub
add
xchg
pop
inc
adc
ret
jmp
cmpsl
pop
xchg
test
mov
mov
paddd
pop
leave
push
push
adc
daa
jae
nop
jae
aaa
sti
push
jne
cltd
cmpb
jne
or
cs
mov
insb
mov
jge
jnp
sbb
iret
sub
xchg
sbbl
bound
inc
mov
fdivl
stos
cld
stos
nop
daa
fdivrl
lods
pop
mov
notb
adc
dec
jmp
aas
push
stc
xor
inc
int3
dec
cmp
jo
push
xor
dec
mov
adc
mov
sbb
dec
sahf
mov
xchg
imul
daa
sub
shrb
std
es
add
adc
aam
jae
sbb
es
cwtl
pop
lock
popa
lods
enter
push
enter
pop
push
lock
pushfw
clc
and
mov
lods
outsl
mov
jne
mov
aad
push
mov
in
pop
lahf
stos
and
leave
shr
xor
lret
psubb
into
fnsave
and
rolb
fadds
mov
fisttpl
in
jo
lcall
outsl
cmp
sti
test
push
pushf
movsl
and
scas
nop
sub
sbb
dec
loope
cmp
cmp
stos
cmc
int3
and
add
iret
push
mov
sti
mov
mov
xlat
sahf
xor
andb
push
push
push
jl
into
aaa
push
adc
dec
jnp,pt
pop
dec
insb
sarl
inc
es
loope
inc
xchg
jmp
cs
das
jle
in
inc
cmp
aaa
addb
pop
add
jae
jl
inc
cmp
jne
imul
push
jg
arpl
and
mov
cmp
mov
dec
dec
rclb
sahf
loop
sbb
test
jnp
js
imul
data16
lcall
out
mov
pop
test
xchg
xchg
fst
mov
adc
les
test
xchg
xchg
idivb
iret
daa
sarl
inc
jae
push
mov
mov
aas
xchg
cmpb
ja
ja
arpl
cltd
xchg
nop
dec
xchg
sub
jae
xchg
mov
dec
int
repz
pop
stos
dec
sbb
cltd
cmpl
dec
shll
cmp
adc
push
add
std
sub
xor
arpl
adc
jno
divb
jbe
sub
bound
jo
addl
jl
xchg
dec
gs
dec
pusha
imul
movsl
scas
inc
sar
inc
mov
pop
shlb
fwait
or
push
fidivl
mov
fsubp
pop
jmp
roll
fnsave
or
rclb
repz
fmuls
cmp
fisubs
lock
inc
jnp
push
in
sarb
cmpsl
pop
scas
icebp
xor
mov
sbb
call
mov
faddl
cli
mov
hlt
inc
fisubrl
and
xchg
fisubs
stos
sbb
lcall
and
xor
lcall
push
insl
mov
pop
je
push
cmp
mov
xchg
pop
shl
or
xchg
mov
daa
fmull
mov
inc
fstpt
out
xchg
and
xchg
enter
dec
mov
repz
push
iret
mov
mov
xchg
push
inc
mov
stos
mulb
mov
mov
shr
pushf
mov
fsubl
neg
jo
xor
or
leave
popa
jecxz
xor
adc
insb
push
aad
mov
lds
pop
sub
imul
mov
xchg
sub
sub
bound
loop
mov
inc
or
std
jo
in
xor
jle
mov
mov
xchg
pop
add
jns
mov
adc
xchg
add
cli
and
jns
mov
and
pop
aam
insl
push
jmp
ds
adc
jle
sub
pop
sub
sub
and
push
je
rolb
push
out
jo
sub
xchg
xchg
cld
sub
adc
out
scas
cmpsl
fs
xor
bound
int3
mov
clc
sub
lret
sub
nop
leave
aas
call
div
and
iret
mov
add
testb
into
sbb
jg
fstps
dec
ljmp
shl
jne
mov
pop
sti
xor
pop
jmp
and
add
sbb
movsb
jmp
and
call
inc
mov
push
push
xchg
mov
xorb
mov
dec
outsb
pop
stos
cmp
stc
inc
imul
ds
inc
stos
pop
imul
mov
cmp
jae
lds
cmp
xor
jmp
add
adc
ss
lock
gs
addr16
sbbb
int
jl
mov
mov
mov
adc
mov
in
and
iret
inc
cmp
aam
mov
sarb
rorb
pop
dec
out
jge
cld
dec
lea
in
inc
push
cld
push
jno
add
push
push
stos
imul
cmpl
xor
insb
outsb
jbe
push
sub
loope
pop
dec
loopne
pushf
sbb
sbb
loop
mov
add
and
testl
lea
dec
mov
xchg
lret
inc
rorl
cmp
xchg
fistl
jmp
addr16
sbb
mov
out
push
adc
repz
in
aam
imul
ficoms
push
daa
add
mov
aam
ret
mov
cmp
mov
repnz
mov
adc
andb
push
jbe
mov
mov
inc
sbb
pop
lods
push
ljmp
cmp
push
scas
cmp
inc
xchg
mov
dec
inc
xor
jae
add
pop
test
xchg
mov
jae
les
xor
jmp
jle
sbb
xchg
jmp
mov
popf
in
nop
xchg
repnz
cmpl
jbe
lret
pop
mov
pop
sarb
push
sub
mov
je
loop
push
add
add
and
in
fdivrl
lock
sti
pop
mov
das
mov
andl
dec
mov
cmp
jbe
out
cmp
cmpsl
flds
nop
mov
xchg
lods
pop
es
adcl
xor
jbe
hlt
sbb
pop
mov
popa
cmp
stos
cmp
test
shlb
push
aam
nop
pop
leave
adc
das
xor
add
or
fs
std
and
mov
and
and
dec
fdivrs
mov
lock
popf
xor
sbb
cltd
dec
shll
loop
add
push
dec
mov
push
xor
std
pop
jbe
pop
aam
adc
insl
fisttps
lods
les
int3
loop
nop
ja
mov
incb
mov
xchg
mov
std
push
mov
pop
mov
sbb
loope
sbb
scas
out
adc
lock
mov
lret
lock
int3
adc
adc
adc
xor
filds
fs
xor
mov
sbb
cmpsb
cmp
dec
popa
add
movsb
jp
in
test
iret
and
pop
arpl
repz
xor
push
jns
push
mov
filds
fdivrl
mov
add
dec
mov
and
inc
jge
pop
cmp
clc
jge
dec
mov
xor
pop
xchg
push
mov
movsl
in
sarl
repz
adc
sub
in
faddl
mov
mov
es
hlt
cwtl
xorl
add
cmp
sbb
push
fistpll
fsubrl
dec
dec
loopne
push
lret
pop
cmpsl
insb
push
ljmp
lods
cmc
mov
jno
add
je
mov
add
rcrb
ucomiss
or
into
push
lcall
xorb
inc
adc
cli
lods
je
test
xchg
test
aam
sbb
jne
sbb
xchg
cltd
aam
mov
add
mov
icebp
les
fnstenv
cmp
pop
sbb
push
lods
pop
or
pusha
jmp
aad
mov
xchg
sub
test
add
jae
push
cmc
mov
out
scas
mov
imul
pop
jae
jbe
ljmp
iret
data16
xchg
jmp
or
xor
loop
add
lods
add
add
lret
add
or
and
sbb
inc
mov
out
test
push
rorb
inc
inc
xchg
push
popf
or
lea
dec
add
push
sahf
or
inc
fimull
mov
decb
and
push
or
sub
or
fidivs
sarb
mov
rorl
sahf
push
int
nop
ja
mov
sarl
sub
mov
cmp
sub
enter
cld
psubb
ret
adc
shrb
repnz
jb
shrb
jle
mov
or
movsb
data16
std
mov
pop
cmpsl
mov
cmp
das
sahf
scas
popa
sbb
or
pushf
stos
jo
cmp
xchg
sti
aam
int
mov
cwtl
mull
jne
add
sbb
iret
sbbl
dec
aad
xor
out
jb
fisubl
scas
outsb
popf
or
adc
cmp
and
xor
xchg
insl
push
jmp
xchg
jo
push
mov
out
push
out
pop
lock
inc
popa
pushf
xor
ret
xchg
jg
cs
enter
push
and
add
xlat
dec
mov
aas
sti
xchg
jle
cmp
sbb
dec
mov
data16
cmp
shrb
shrb
adc
ret
into
mov
es
mov
outsl
dec
clc
or
enter
fucomi
jg
and
mov
popf
int
pop
and
imul
xor
push
test
push
shrl
lret
inc
jbe
mov
pop
scas
iret
sbb
jl
fimuls
mov
pop
sub
cmp
lock
subb
pop
adc
pop
pop
cmp
mov
cmc
insl
shr
xchg
mov
or
and
add
jmp
test
out
pop
mov
adc
xchg
or
mov
addr16
cmp
mov
mov
mov
jae
adcb
sti
xchg
push
push
mov
mov
ja
imul
das
sub
fmull
inc
fdivl
cmp
sub
in
lret
push
rcll
push
leave
scas
jno
pop
aaa
into
pop
ret
mov
jmp
movsl
mov
add
inc
dec
inc
into
pop
dec
aaa
adc
notb
xchg
push
push
sbb
push
dec
std
xchg
jno
xchg
dec
sbb
in
jo
into
xor
jnp
les
and
jecxz,pt
adc
cwtl
leave
xor
fsub
and
jbe
fs
add
cmp
push
icebp
fisubl
call
int
sbb
add
mulb
repz
in
lods
sbb
scas
fdivs
pop
int
fs
cmp
or
outsb
mov
add
popf
mov
incl
cmp
push
icebp
ss
mov
sub
cmp
sbb
into
gs
mov
arpl
lcall
adc
es
mov
and
jo
fdivrl
sahf
iret
data16
xor
nop
xchg
jmp
pop
mov
or
jge
insl
jl
pop
pop
xchg
jl
push
dec
ret
pushf
mov
ljmp
xor
orl
mov
or
mov
stc
jge
out
sub
pop
mov
jnp
inc
roll
dec
dec
rcrl
cmc
sub
rorb
adc
rclb
or
loope
enter
and
mov
shrl
dec
push
lods
outsb
inc
mov
jbe
inc
or
rclb
test
and
popa
jb
mov
fstl
and
enter
into
gs
frstor
and
in
dec
test
or
xor
int
test
sti
addr16
loopne
fmull
push
ljmp
push
adcw
sub
std
lock
ja
push
lds
pushf
inc
mov
or
pusha
lret
or
std
sbbl
pushf
aaa
jecxz
imul
lock
pop
cltd
sbbl
pop
shrb
ja
lea
std
xor
cmp
rcll
decl
mov
roll
xor
arpl
adc
push
jge
push
xchg
int
lds
mov
out
and
sub
fbstp
popf
xor
sti
jb
inc
dec
leave
inc
fnstenv
add
lods
movsl
pop
jge
dec
ss
dec
jmp
stos
in
inc
shlb
mov
cltd
xchg
or
xorb
movsb
ja
jle
movsl
xor
mov
dec
mov
jle
pop
sarl
ficomps
fstpl
adc
out
icebp
cmp
shll
test
cltd
test
sbb
ret
imul
push
adc
push
inc
sbb
stos
inc
lds
cli
dec
rol
insb
cwtl
das
jnp
cmp
aas
repz
out
cwtl
paddw
adc
sbb
shll
jle
test
call
adc
mov
xor
nop
out
ret
and
and
aas
loope
jg
jmp
push
subl
gs
mov
add
cmpsb
cmp
movsb
out
pop
xchg
push
lahf
ja
les
xor
jg
loop
cli
sub
test
jecxz
leave
movsl
inc
into
add
mov
xlat
daa
mov
call
cltd
mov
sbb
pushf
push
jmp
inc
cli
lods
icebp
sbb
mov
xchg
or
subb
jbe
and
mov
enter
dec
in
push
fisttpl
mov
jno
loope
jns
and
fs
xchg
cs
popf
jmp
sbb
xor
fiadds
cmp
sbb
movsb
add
add
lret
push
pop
dec
mov
sbb
sub
inc
mov
jmp
lcall
and
sbb
ret
or
enter
ret
jecxz
mov
data16
in
fwait
mov
fistl
add
leave
icebp
sbb
inc
scas
fidivl
lret
test
fists
xchg
xchg
xchg
lret
lods
out
rolb
inc
fldcw
sbb
rolb
in
cld
mov
push
cmp
fcoms
lods
xlat
stc
mov
jns
jecxz
daa
mov
adc
outsl
popf
fwait
jbe
icebp
inc
packuswb
inc
push
int3
aas
cmpsb
enter
aas
loope
fs
icebp
xchg
bound
stc
dec
js
cmp
bound
sub
jno
lret
int3
xor
gs
add
adc
cmp
push
aas
lret
xor
jns
sub
xchg
or
xchg
xchg
mov
jge
xchg
popl
fistps
jnp
lods
lret
ja
dec
dec
mov
or
ljmp
add
daa
in
aad
or
es
imul
push
popa
int3
arpl
pop
imul
mov
std
and
sbb
dec
flds
clc
xchg
xchg
jl
aas
inc
sbb
push
imul
cmp
lds
pop
sub
pusha
cwtl
mov
and
sahf
mov
dec
in
inc
insb
scas
data16
js
lret
sbb
es
nop
sub
adc
das
aad
cmp
jle
xchg
adc
lcall
mov
xchg
jp
push
xchg
jge
pop
add
insb
xchg
test
dec
movsl
push
loop
shll
lods
xlat
or
test
xchg
jle
mov
mov
pop
mov
mov
addr16
xchg
imul
adc
cli
and
pushf
cmpsb
dec
pop
sbb
popa
mov
hlt
mov
pop
xorl
outsb
mov
adc
dec
jbe
cmp
mov
xchg
mov
xchg
idivb
shl
in
mov
pusha
pushf
mov
cli
imul
enter
notb
dec
dec
mov
jnp
xchg
sub
shll
and
or
jae
out
test
mov
dec
fists
push
sub
aas
cmp
imul
sbb
mov
sbb
bound
cmp
stos
ret
cld
xchg
or
loopne
xor
sbb
test
lods
movsl
sbb
into
push
in
push
cmp
sub
jne
push
dec
pop
out
jp
xchg
sub
mov
stc
out
xchg
sub
sbb
addr16
inc
mov
jae
out
test
rorl
out
test
adc
ret
or
imul
xchg
mov
sarl
dec
fisttps
or
std
popa
pop
movsb
cmp
mov
pop
jecxz
mov
js
sub
push
pop
pop
call
lods
stos
sbb
xchg
add
cmp
das
and
mov
push
pop
lock
aam
push
in
div
xchg
sub
sbb
dec
dec
mov
cmp
sbbl
dec
nop
lea
outsb
int3
arpl
sub
ja
loop
xchg
cwtl
dec
loope
mov
test
ljmp
jnp
inc
ficoml
mov
out
out
dec
jecxz
add
push
ss
imul
dec
pop
idivb
test
hlt
lret
gs
jnp
sbb
cmp
mov
inc
push
enter
lds
mov
pop
repnz
pop
lock
mov
fucomi
test
cs
pop
out
xchg
sub
jg
add
lcall
lret
in
cmpsb
jge
push
sub
fwait
imul
sub
sub
sbbl
mov
ss
jb
xchg
stos
hlt
xchg
testl
fcom
mov
loope
cmp
mov
or
and
aad
dec
lret
inc
jp
insl
mov
aad
push
cmc
dec
daa
test
ljmp
push
mov
add
shr
dec
popf
dec
or
in
push
lods
push
push
lods
out
xor
xchg
push
jo
pop
xchg
pusha
insl
sub
push
shl
inc
mov
fildll
lahf
sub
add
push
inc
dec
push
jo
mov
mov
cmpsl
jecxz
push
aam
xor
push
rclb
push
sbb
popa
mov
or
xchg
fs
mov
ja
xchg
xchg
bound
ja
test
call
sahf
mov
jo
inc
pushf
pop
mov
pop
aam
sbb
jbe
xchg
jo
stc
cmc
je
push
negl
dec
and
xor
xchg
fistps
pop
sub
jle
cmp
psrad
add
pop
or
mov
dec
xor
imul
mov
push
stos
push
outsl
push
test
xlat
mov
imul
adc
dec
sub
repz
cmc
rorl
enter
roll
sahf
pop
mov
xor
pop
adc
and
mov
xchg
xchg
xchg
mov
aam
pop
hlt
fisttpl
out
adc
pusha
adc
xchg
inc
data16
and
aad
sahf
jp
push
mov
mov
aad
inc
mov
sbb
js
jne
dec
ljmp
jecxz
add
mov
sub
xchg
enter
roll
gs
bound
lods
mov
add
push
push
lods
rcr
sbb
mov
mov
std
loop
fisubl
cmp
out
xor
cwtl
fistpl
dec
mov
sub
fistl
ret
mov
pushf
es
fsubrs
inc
dec
or
clc
push
mov
sub
jle
mov
mov
add
jbe
xor
adc
push
mov
ret
pop
mov
pop
in
push
jl
jae
jge
stc
inc
dec
push
push
xor
adc
sub
lds
mov
jae
sbb
repz
pop
lods
dec
outsl
cmc
sub
roll
sti
arpl
jae
sahf
xor
xchg
in
inc
xchg
je,pn
insb
add
xchg
mov
iret
shlb
inc
test
xor
xchg
sub
lods
dec
mov
cli
in
int3
repnz
push
inc
xlat
inc
rorb
repnz
mov
inc
xor
add
lds
mov
mov
subl
fiaddl
lcall
xchg
sub
pop
test
sahf
shlb
push
xchg
jno
inc
arpl
sbb
cltd
shrb
add
fsubrs
sub
pushf
mov
dec
sub
sbb
push
ss
xchg
test
shlb
notb
out
ret
mov
loopne
out
or
call
hlt
mov
jl
push
ret
sub
fiaddl
xor
xor
xchg
inc
or
push
dec
or
cmc
sti
pop
aaa
mull
inc
sub
movsl
pop
sahf
xchg
inc
les
in
push
add
bound
push
inc
push
mov
mov
test
bound
movsl
push
adc
mov
lock
adc
fs
sub
jl
sbb
iret
adc
mov
fwait
clc
fildl
or
mov
cltd
enter
leave
adc
loopne
and
test
adc
jb
mov
xor
rorb
aad
push
adc
mov
mov
insl
xchg
sbb
hlt
cld
mov
in
or
pusha
pop
add
mov
insl
xor
lret
nop
cli
daa
cwtl
inc
in
mov
in
jge
or
adc
push
in
and
dec
adc
sbb
push
jb
sub
in
fmull
add
sbb
insl
lods
movsb
mov
cwtl
inc
pop
orb
insb
mov
jns
fadds
rcl
insl
push
adc
dec
mov
ret
int
jbe
ljmp
fucomip
mov
or
sbb
iret
pop
jecxz
pop
sbb
pushf
leave
mov
inc
in
test
arpl
jbe
outsb
js
or
jnp
aas
rorl
pop
pushl
pop
pop
add
arpl
nop
cmp
ja
jnp
and
xchg
addr16
pusha
idivl
sete
mov
test
test
cmp
push
mov
in
in
outsl
inc
icebp
mov
ret
mov
mov
dec
cmpsb
out
lahf
mov
in
je
hlt
pop
push
aaa
cwtl
dec
jge
and
mov
xor
lret
je
jo
push
mov
cld
arpl
jbe
sub
pop
add
inc
mov
cltd
mulb
and
stos
hlt
pop
add
cmpsb
sub
movsb
fildl
sub
sub
inc
mov
ret
push
andb
xchg
mov
cli
xlat
rclb
in
push
aas
icebp
pusha
lods
pop
testl
xor
or
fs
push
dec
and
call
xorl
fwait
cmp
in
insl
lea
add
and
inc
insb
in
cmp
sub
jbe
sbb
adc
lds
adc
push
insb
in
int
pop
negl
rcll
cmp
mov
rolb
fisubrs
ret
sbbb
sbb
test
and
pop
mov
outsb
push
mov
push
adc
insb
out
mov
pop
stc
test
movsb
ss
arpl
addr16
sbb
mov
rclb
mov
push
fnsave
scas
pop
add
jns
test
filds
or
push
popf
repnz
fwait
cmp
and
bound
sub
test
adc
push
outsb
enter
add
ret
pop
mov
outsb
nop
lods
daa
je,pt
rorb
and
in
addr16
sbb
popf
sub
sub
jo
ss
mov
clc
pop
jne
inc
adc
insb
lock
push
fistpll
lea
xor
dec
lock
popf
aaa
mov
js
mov
lock
adc
repz
sahf
sbb
test
inc
dec
icebp
gs
mov
mov
cmpsl
mov
push
xchg
inc
orl
icebp
notb
xor
mov
icebp
xlat
xchg
adc
jle
cmp
rorl
xchg
dec
add
outsb
cmc
fstl
ja
push
imul
addb
shr
xchg
mov
stos
addr16
push
mov
lock
mov
enter
andb
lret
int
fsubrl
mov
clc
pop
and
push
or
aas
push
jno
jnp
test
mov
cmc
pop
mov
jno
cmp
and
adc
jp
mov
insb
jle
shrl
jecxz
mov
xor
push
sti
jbe
mov
fdivrl
mov
imul
popa
xchg
mov
je
xor
dec
inc
or
sub
out
lods
jp
mov
push
inc
fsubrs
out
pop
ret
adc
test
and
mov
lea
sbb
outsb
mov
jnp
jl
test
add
push
xor
das
sti
cmp
and
jae
aaa
push
sarl
mov
sub
ror
xor
and
fwait
call
imul
xchg
cmp
sub
stos
inc
or
xor
adc
loope
testb
fsub
push
mov
cmp
rorb
and
or
lock
insl
shl
xchg
cmp
push
mov
pop
mov
inc
push
cmp
inc
push
cs
pop
je
popa
out
push
fs
or
push
mov
aaa
xor
rorb
xor
scas
popf
xchg
mov
stos
xor
push
mov
cmpsb
mov
inc
push
daa
cmpsl
mov
xor
das
pushf
sbb
jno
pusha
out
push
push
mov
sbb
das
ret
xchg
inc
push
movsl
xor
sahf
pop
cld
repz
out
sub
mov
sbb
xchg
mov
mov
int
push
mov
xchg
cwtl
aaa
push
rcll
decb
xor
pop
in
sbb
testl
pop
sbb
mov
fwait
aaa
and
aas
adcb
inc
adc
inc
push
test
mov
mov
lahf
cmp
leave
std
pop
fbstp
mov
cmp
fiaddl
xchg
addr16
dec
ret
inc
sbb
cmc
jno
xlat
sub
movl
inc
adc
xor
cs
add
pop
clc
xor
jg
or
fistpll
mov
je
hlt
data16
jo
pop
aad
sbb
add
sbb
add
mov
movsl
sub
and
mov
push
inc
xor
mov
cmpsl
std
pop
lods
int3
enter
inc
push
lea
mov
cmp
mov
xchg
xchg
inc
mov
push
add
pop
cld
in
sub
fstpt
loop
xor
aam
jl
xor
dec
or
xor
in
pop
inc
adc
repnz
cmp
je
cmp
and
in
hlt
mov
repnz
in
lahf
cmp
pushf
inc
adc
test
mov
fmull
jae
test
daa
outsl
sbb
mov
ret
enter
sbb
cmp
test
enter
push
cli
stos
lods
mov
ja
fwait
and
pop
sub
mov
jb
repnz
lret
popa
adc
out
sbb
mov
pop
sub
pushf
cmp
popa
lahf
sub
mov
daa
fwait
push
les
leave
xchg
mov
pop
lret
popa
movsb
fs
sub
aas
cmp
xchg
pop
sti
shrl
stc
jbe
and
stos
sub
and
int
clc
rclb
repz
ds
inc
add
cmpsb
fwait
cmpsl
xor
mov
sub
sub
cmp
mov
int3
repz
adc
sub
int
adc
xor
add
pop
aas
cltd
sbb
inc
test
lods
imul
sti
xchg
adc
fidivs
rcrl
mov
sbb
or
jg
insl
mov
sbbb
insb
jmp
dec
adc
scas
sbb
inc
int
sahf
xchg
xchg
repnz
mov
mov
neg
filds
cmp
xor
mov
fiaddl
mov
pop
aam
fs
xor
outsb
cmc
sti
push
mov
inc
adc
scas
push
add
not
andb
popf
cmp
mov
cmp
std
pop
push
and
mov
mov
mov
les
sub
inc
sahf
inc
addb
dec
aam
push
sahf
sahf
fs
into
and
jg
jle
fildll
and
or
cmp
sarl
sub
mov
clc
mov
push
popl
int3
sahf
mov
mov
mov
cwtl
cmp
lods
fstpt
adc
pop
test
ja
xchg
and
aas
call
ficompl
inc
adc
enter
imul
dec
or
or
mov
sub
les
or
mov
fildl
test
ret
mov
loope
adc
fsts
adc
dec
das
mov
outsb
orb
lret
xlat
orb
sub
out
ss
out
ds
xchg
xchg
sub
add
loopne
shrl
pop
cli
bound
xchg
xchg
jnp
filds
inc
adc
pop
test
mov
mov
and
lcall
ret
xchg
rcll
xor
int
mov
sbb
loopne
inc
loopne
fcmovb
jnp
inc
adc
ret
xor
inc
or
sarl
cmp
loope
cmc
dec
mov
icebp
lds
mov
pop
in
push
cmp
int
sub
xchg
aaa
or
inc
cld
test
jae
xor
dec
push
bound
push
shll
cmpsl
add
push
cmp
data16
pop
sub
dec
cmpsb
sub
lret
mov
lret
inc
or
jnp
aam
cs
inc
mov
mov
stos
xor
lods
movsb
sub
arpl
lods
outsl
fs
pop
add
xor
mov
das
repnz
das
rcll
cltd
xchg
inc
xchg
push
cmp
jp
mov
push
insb
call
dec
fsubl
cli
in
mov
or
push
pop
xchg
push
leave
test
lods
das
sub
pop
add
pop
clc
xchg
jae
sub
into
xor
xor
pop
sarb
test
ficompl
mov
fadd
mov
sti
mov
cs
pusha
gs
enter
jp
movsl
xor
pop
loopne
sarl
clc
add
mov
xchg
inc
imul
mov
test
pop
pop
push
and
mov
cmp
dec
shl
pop
cs
sub
hlt
jne
xor
test
rcrb
push
insl
into
sbb
adc
xor
dec
pop
inc
sub
add
outsl
mov
mov
movsl
mov
pop
fwait
xchg
inc
pop
inc
int
repnz
lds
jle
xchg
aas
and
push
loope
adc
cmp
mov
mov
mov
into
xchg
mov
fnsave
adc
test
addb
cli
out
adc
push
fdivr
push
idivl
ljmp
cmp
jecxz
enter
jl
ret
adc
push
roll
bound
leave
movsb
out
out
fidivs
lea
jg
lahf
out
add
mov
fwait
mov
jge
push
les
outsl
dec
adc
inc
or
mov
mov
sub
xchg
dec
aad
cwtl
sub
jno
subl
xchg
add
dec
notb
es
sbb
mov
mov
and
daa
fnstsw
cwtl
ret
xchg
je
xor
enter
inc
sbb
jbe
mov
enter
mov
in
inc
mov
roll
std
data16
ret
jecxz
inc
adc
jbe
pop
test
stc
pusha
nop
mov
in
cmp
push
rcl
sarl
add
arpl
out
mov
mov
and
cmpsl
pop
clc
sub
pop
incb
add
ret
xchg
mov
lret
data16
aaa
xor
cs
daa
loope
loopne
jne
mov
faddl
int3
jne,pn
sub
and
ljmp
cli
ljmp
lods
fs
fiaddl
jae
mov
pop
out
adc
lret
mov
mov
jle
dec
mov
jg
or
mov
push
mov
imul
xorb
add
pop
cld
repz
sub
jbe
or
mov
icebp
mov
adc
inc
sub
jbe
cmp
int
ret
lret
jmp
and
fnsave
mov
inc
adc
lds
mov
test
orb
mov
cmp
and
aaa
lahf
aas
aam
pop
pop
andl
cmp
out
ret
idivb
pop
pushl
xchg
inc
mov
lods
cs
aad
pop
mov
mov
jg
inc
adc
fwait
in
lcall
in
test
pop
sti
sbbl
enter
pop
sbb
dec
dec
push
lods
jle
inc
or
outsl
cs
mov
arpl
arpl
movsl
sub
pop
incl
rorl
mov
mov
popa
cmp
pop
jns
sub
jmp
lahf
cmp
repz
insl
and
inc
icebp
popa
xchg
push
popf
cmp
and
aas
pusha
repnz
push
mov
mov
mov
sub
jecxz
xor
xchg
ja
xor
bound
pop
mov
cmpl
fwait
or
pop
frstor
fiadds
das
stos
mov
dec
in
sarb
rorl
add
xor
scas
ret
hlt
iret
jo
sub
mov
out
sbb
ret
pushf
cmp
mov
mov
lcall
dec
out
ljmp
add
clc
pop
inc
xchg
sahf
mov
fiaddl
out
fwait
negb
cmp
and
data16
cmp
mov
mov
lods
add
pop
cmpsb
sub
pop
fiadds
push
pop
xchg
cmp
push
mov
and
cs
cmp
mov
stos
inc
or
iret
iret
push
std
dec
sbb
cmp
fwait
mov
stos
in
imul
rolb
or
push
mov
mov
mov
or
xchg
pop
push
iret
xchg
scas
mov
mov
scas
mov
filds
push
or
aam
xchg
mov
push
jle
jl
movsl
add
loopne
add
fdiv
dec
adc
or
in
pop
dec
xchg
cmp
lds
cli
je
mov
arpl
arpl
mov
outsb
inc
push
std
bound
mov
cmp
inc
lods
xor
in
leave
xchg
cltd
out
cmp
mov
gs
lret
xchg
xchg
mov
imul
push
inc
sub
push
decb
cltd
mov
or
dec
adc
sbbb
pusha
sub
orb
pop
int3
fstl
jp
adc
sbb
xchg
and
lret
pop
xchg
cmp
push
stc
in
andb
mov
mov
xchg
dec
xchg
cmp
mov
mov
pushf
mov
ret
adc
clc
push
fsubs
push
into
inc
ret
lea
les
jecxz
ret
lea
testl
dec
cmp
repz
sbb
fadds
add
movsb
sub
pop
mov
xor
inc
shrd
fcom
mov
pop
push
psubusw
mov
xchg
out
daa
mov
int3
xchg
inc
add
inc
adc
ret
cmp
mov
movsl
pop
push
xchg
xchg
inc
orl
in
fwait
lds
pusha
shll
mov
mov
fstpt
xor
lcall
popa
repz
fwait
inc
adc
mov
fcmovu
scas
push
movl
pop
enter
add
dec
stos
add
icebp
cld
addb
das
mov
arpl
lcall
lcall
mov
cmp
mov
fdivrs
test
xchg
cmc
sub
xchg
jmp
or
sub
mov
ret
cmpsl
cmp
fwait
sub
jae
fisubl
lahf
ret
or
push
stc
in
jae
or
ret
out
cwtl
adc
pop
das
add
test
mov
push
stc
test
mov
gs
dec
movsl
ss
hlt
addr16
mov
insb
call
jno
push
dec
outsl
es
adc
les
cmp
or
mov
add
dec
push
sti
lcall
ret
and
xchg
es
addr16
mov
andl
add
xchg
sbb
xchg
jbe
rcr
sub
or
push
bswap
dec
adc
in
jg
cld
pop
clc
push
bound
rclb
add
adc
xchg
sub
mov
std
jle
fldcw
rorb
test
mov
inc
fnstcw
xchg
out
dec
jne
das
push
mov
push
jb
loop
out
pop
add
sahf
inc
adc
mov
inc
mov
dec
sub
cmp
ror
xchg
rorl
icebp
or
nop
mov
ja
fcmovu
mov
inc
or
jne
lret
xchg
cmpsl
daa
icebp
sbb
sahf
inc
xor
cs
pop
mov
pushf
cmp
scas
test
mov
ret
xchg
dec
or
pop
fnsave
push
call
xchg
lods
fstpt
insb
notb
aam
cmp
pop
shrb
jecxz
movsl
pop
xchg
cmp
mov
push
cld
leave
aam
jae
je
xchg
push
movsl
sub
pop
leave
push
addr16
test
cmp
xchg
shrb
mov
into
fadd
lea
mov
sbb
or
pop
cmpsl
sub
adc
testl
in
pop
lods
adc
sbb
fbld
push
xor
data16
and
icebp
adc
outsl
ds
adcb
and
xchg
jge
mov
push
in
add
decb
mov
pushf
inc
or
push
insl
cmc
jae
add
mov
pop
push
out
mov
jbe
mov
mov
xchg
xchg
jmp
sbb
iret
xchg
loopne
insl
out
or
mov
inc
pop
mov
loope
add
adc
pop
test
shlb
adc
sbb
xchg
and
out
test
cmp
sub
pop
flds
dec
or
jp
popl
ret
xchg
adc
mov
jmp
cltd
rcr
jp
push
lea
das
stos
sarb
out
aad
pusha
repnz
and
sub
mov
call
cmc
cmp
xchg
jb
jmp
stc
movsb
xor
push
adc
pop
add
mov
test
mov
mov
stc
jo
bound
mov
and
daa
scas
dec
negl
das
mov
mov
sbb
xor
inc
xlat
sarl
lahf
stos
daa
outsb
sbb
out
dec
or
cld
mov
into
pop
fwait
imul
orl
ds
incb
pop
call
clc
add
scas
lock
push
mov
imul
push
orl
mov
cmp
aaa
mov
lods
xchg
add
outsl
iret
or
push
push
or
adc
and
inc
push
in
hlt
pop
add
cld
fiaddl
dec
push
aaa
cwtl
push
sahf
lods
xor
addr16
lds
daa
sahf
adc
mov
mov
adc
xchg
dec
pop
std
out
lret
lahf
cmc
lea
lds
out
mov
cli
jae
into
pop
out
sbb
inc
xor
jne
shrb
inc
dec
in
lahf
pushf
inc
leave
push
loope
imul
js
sbb
sub
jb
xor
xchg
test
inc
or
dec
in
jae
out
mov
stos
adc
dec
ret
xchg
mov
mov
gs
testl
loop
jp
js
std
jo
aad
in
ja
sarl
pop
sbb
jmp
or
in
imul
or
mov
aaa
pop
lods
xor
sub
jl
adc
jb
dec
mov
push
mov
sarb
lods
adc
and
sbb
dec
popa
and
xor
pop
xchg
test
adc
pop
lret
stc
push
pushl
adc
mov
mov
scas
sub
xchg
out
insb
out
cmc
pop
cli
test
mov
xor
arpl
repz
jg
out
lock
mov
test
jae
jle
add
loope
lea
repz
adc
jl
mov
pop
cld
negb
mov
call
add
pop
cmp
in
imul
inc
adc
adc
test
sahf
icebp
std
pop
jecxz
xchg
inc
xchg
imul
add
aas
mov
xchg
cmp
push
movsl
sub
or
enter
lods
arpl
or
jae
mov
in
jbe
out
mov
scas
add
stc
cmpsb
test
mov
test
pop
test
imul
sub
outsb
out
mov
call
fwait
stos
cmp
cmpsl
sbb
pop
push
mov
add
lcall
jbe
data16
into
test
sarb
dec
push
mov
jp
xchg
stos
mov
rorb
aad
sahf
xor
cs
push
xor
lea
shll
scas
dec
push
lret
arpl
push
mov
sbb
mov
out
push
add
mov
or
sbb
sbb
inc
test
jae
xchg
sub
xchg
lods
ret
push
mov
notb
add
out
cmpsb
outsb
loop
mov
jle
sub
jmp
je
js
lret
pop
add
inc
push
jns
mov
sbb
dec
pop
add
sub
mov
clc
arpl
imul
hlt
sahf
addr16
gs
leave
dec
clts
xchg
jno
aas
push
rclb
dec
fs
or
push
cwtl
xchg
xchg
aas
xor
mov
das
xor
pop
sub
imul
push
roll
xor
and
push
push
pop
les
stos
cwtl
inc
jl
cmp
mov
jl
mov
hlt
pop
mov
inc
or
ficoms
jo
fistpll
movsl
add
lahf
dec
push
outsb
repnz
daa
test
test
sti
xor
xor
xchg
inc
cmovb
int
js
rolb
lea
lods
dec
rcrl
mov
lock
cmpsl
mov
xor
lds
mov
push
and
sarl
xor
xor
lahf
ret
and
xor
push
pushl
add
sbb
test
xlat
dec
push
push
inc
add
pushf
popf
popf
fidivs
rcr
loop
enter
pop
icebp
xor
mov
xor
loop
pop
out
in
nop
xchg
cmp
mov
divb
movsb
mov
lock
incl
push
jns
jl
push
cld
std
imul
jo
pop
gs
ret
sahf
xor
add
ret
push
dec
adc
addr16
cli
aas
jae
arpl
push
roll
inc
push
mov
dec
adc
aad
sbb
iret
xchg
add
cld
pop
jl
mov
push
ss
sub
daa
jb
jnp
stc
pop
outsb
xor
ds
cmpsb
daa
push
sub
jnp
loope
and
jo
jl
dec
or
leave
int3
mov
pop
cld
inc
insl
inc
adc
mov
ljmp
pop
roll
push
jns
sub
mov
mov
fisttpl
test
mov
fs
je
sbb
aad
and
xor
arpl
orb
orb
and
dec
in
sub
sbb
jne
iret
jns
pushf
addr16
xchg
aaa
pushf
jne
cli
or
cmp
out
lcall
adc
push
sti
xchg
inc
mov
add
push
jo
test
rclb
sbb
aad
ret
xchg
pop
sbb
push
ret
fidivrl
out
rcll
ret
mov
cs
mov
cmpsl
add
xor
loopne
lods
and
dec
cltd
lods
es
sti
lret
nop
jmp
xor
les
in
loop
jb
add
push
bound
cltd
mov
lods
repnz
aam
mov
add
jle
sbb
mov
pushf
inc
jmp
adc
pushf
inc
cs
or
push
enter
jbe
sbb
ficoml
jecxz
add
mov
imul
mull
std
les
sub
scas
cmpsb
dec
roll
lret
mov
adc
jl
sbb
mulb
jp
js
pop
cmp
lahf
xchg
mov
mov
imul
sub
imul
jge
cltd
jbe
cs
xor
add
cs
push
cmpsb
sub
movsb
mov
xchg
and
cwtl
inc
mov
jl
mov
scas
xor
xor
jmp
incl
lock
orb
sbb
cltd
stc
push
iret
out
insl
adc
nop
addr16
fdivrl
addb
data16
mov
xor
push
push
inc
sub
loopne
cltd
test
bound
and
mov
add
or
mov
pop
cld
je
mov
enter
xor
sbb
xchg
in
sbb
fnstenv
int
pusha
push
movsl
xchg
sub
mov
sub
sub
outsl
add
xor
lcall
push
cld
mov
jnp
faddl
repz
mov
das
jle
push
les
outsl
mov
bound
xchg
xchg
jle
lods
mov
jp
loopne
repz
fwait
inc
or
aam
or
mov
pop
xchg
insb
inc
push
push
lds
sbbb
jns
dec
js
sub
cmp
sbb
mov
push
mov
mov
dec
or
aad
push
mov
lret
mov
mov
push
add
iret
xchg
push
shlb
scas
jecxz
fidivrs
insl
hlt
push
add
jp
dec
adc
sub
fucompp
mov
or
jbe
xchg
inc
aam
movl
sub
push
loop
repnz
or
xchg
jmp
dec
dec
or
out
fcmovu
xor
adcb
gs
into
xor
mov
stos
daa
sub
in
imulb
js
aas
out
or
mov
jbe
sub
fwait
cmp
xchg
adc
sar
iret
dec
or
out
fdivl
scas
das
cmpsl
mov
mov
add
xor
sbb
pushf
outsb
lods
ror
inc
outsb
adc
xchg
je
ljmp
xchg
ret
xchg
or
movsb
rcll
out
add
mov
pushf
add
pop
inc
adc
sahf
icebp
mov
cmpsl
fwait
xor
lock
or
push
stc
ja
push
je
adc
mov
repnz
pop
add
ja
mov
ljmp
mov
mov
push
fisubrl
repz
add
rcrb
pushf
scas
push
push
clc
jl
sub
sti
insb
and
xor
xchg
fistl
lds
out
sub
xchg
inc
std
outsb
aad
pop
in
xchg
sbbl
imul
cli
xchg
lods
push
push
neg
lret
xchg
or
pop
add
add
push
negl
dec
push
cmp
or
arpl
xchg
xlat
ja
pop
enter
idivb
nop
aas
pop
arpl
jbe
xchg
shll
rolb
cmp
and
jecxz
pop
lds
push
pop
lods
mov
fldl
or
daa
stos
and
push
leave
shl
inc
or
out
jb
orl
pusha
sub
insl
stos
lret
xchg
loope
cmp
fnsave
rorl
push
sti
roll
faddl
aad
and
loop
testl
cs
sti
cmp
xchg
cmp
pop
fsubrl
bound
cs
in
mov
lret
cld
icebp
sbb
mov
cmpsl
inc
push
push
mov
mov
inc
je
and
pushf
stos
cs
pusha
adc
push
test
mov
push
xchg
inc
movsb
xchg
mov
push
add
mov
push
mov
daa
xor
push
add
pop
inc
adc
repnz
xchg
insl
add
test
je
fnstsw
ret
jns
fistpll
push
fs
jae
gs
outsb
aad
icebp
jg
xchg
shl
loop
dec
push
cld
pop
sub
loopne
pop
pop
dec
or
test
arpl
das
out
addr16
inc
xchg
inc
insb
iret
lcall
loopne
xchg
mov
mov
xor
fisttpll
xchg
inc
in
jo
jl
repz
aas
xchg
pop
jae
mov
adc
popa
dec
hlt
icebp
mov
jno
xor
mov
mov
sahf
jle
lods
mov
stos
filds
pop
hlt
sub
fldl
loop
daa
fwait
cmpsb
xor
cmp
arpl
xchg
ljmp
sbb
add
xchg
xchg
gs
cwtl
aaa
sbb
push
jns
xchg
cmp
mov
sub
lea
cmp
mov
fildll
fcoms
inc
stos
ss
inc
mov
sbbb
cs
ja
cmp
lock
insb
sub
lock
movsb
aas
orl
dec
adc
fists
pop
loop
inc
or
and
call
std
push
std
dec
add
push
scas
fnstcw
or
lea
sub
daa
mov
test
js
cmpb
jp
loopne
cmp
add
mov
ffreep
fidivrl
or
sub
cmp
cmp
inc
jge
insb
cmc
ss
sub
jl
jno
inc
outsl
pop
les
push
xchg
mov
mov
xlat
xchg
sbb
mov
stos
jae
dec
mov
cmp
adc
sarb
jle
push
je
dec
test
cltd
fadds
rcll
or
popf
loop
push
iret
lret
mov
add
iret
dec
xchg
mov
xchg
and
sub
mov
int3
xorl
mov
lods
xorb
push
inc
shrl
mov
xchg
add
add
inc
aam
mov
mov
dec
dec
mov
in
insb
iret
inc
mov
pop
sti
push
jnp
dec
push
or
mov
pop
inc
push
out
scas
lcall
mov
mov
add
or
push
jnp
les
inc
inc
adcl
mulb
in
bnd
test
loop
adc
imul
dec
cmp
loopne
sti
pop
psubd
addr16
in
mov
mov
jne
jns
or
mov
lret
xchg
test
scas
sub
xchg
mov
insb
out
mov
adc
sub
mov
cmp
ss
lret
or
fucomip
lds
jb
addr16
sti
mov
xchg
inc
pusha
scas
ret
jle
mov
js
roll
pushf
sbb
add
xor
push
push
std
sbbl
fidivrl
scas
or
or
in
inc
or
sbb
int3
int3
push
shlb
sarb
add
fcmove
bnd
sbbl
xchg
jmp
sti
mov
int
lods
loopne
nop
cmp
cmc
out
pop
xor
add
rorb
or
popf
cmp
out
test
and
mov
mov
fnstsw
pusha
imull
adc
inc
push
jle
andb
xchg
mov
test
idivb
cmp
dec
fsubrs
pop
ret
pushf
testb
out
adc
and
call
jb
sbb
out
cmpsl
cmp
fsub
outsb
add
sub
mov
imul
mov
sub
pop
adc
mov
and
inc
shrl
xchg
mov
out
xchg
fsubs
mov
push
sub
pop
aas
sub
jo
pop
cmc
scas
xchg
dec
loopne
iret
jl
add
addr16
adc
test
jbe
dec
test
mov
insl
sti
fadd
pop
push
sbb
fbstp
jo
stos
mov
ret
repz
mov
adc
cmp
pop
outsb
add
stos
mov
jne
std
or
xchg
sub
leave
pusha
xchg
jno
dec
mov
shlb
push
push
popf
aaa
pop
out
xchg
and
mov
movsb
fwait
stos
inc
mov
pusha
imull
dec
jle
andb
xchg
mov
xchg
es
movsl
cmp
inc
fsubrs
pop
ret
pop
mov
loope
fucomip
adc
push
add
xchg
xor
xor
jo
push
mov
xchg
push
out
movsl
cmp
jecxz
add
sub
mov
imul
inc
mov
pop
psllw
arpl
jbe
add
mov
lock
and
sbb
inc
xlat
pop
cmp
pop
cmc
lods
int
adc
loope
call
and
sbb
cmpsb
xchg
stc
fld
pop
or
testb
outsb
adc
lahf
jg
xchg
mov
xor
icebp
rcrb
add
push
call
push
outsl
push
xchg
jbe
out
cmpsl
mov
jbe
cli
or
dec
pop
lret
outsb
mov
mov
rcl
repz
sahf
xor
push
and
movsl
cwtl
test
fcmovu
mov
popa
clc
sub
loop
dec
jg
jle
imul
shll
mov
cmp
ja
les
cwtl
testl
sbb
add
outsl
push
push
mov
nop
push
call
aam
outsl
push
adc
pop
icebp
daa
lea
dec
js
jp
stos
inc
mov
fmul
pusha
push
out
mov
and
out
bound
imul
xchg
aad
mov
sbb
inc
fcomps
sub
insb
jp
imulb
int3
jge
fildll
adc
pushf
xor
xchg
movsl
test
clc
xlat
ret
sbb
mov
ja
insl
adc
xchg
scas
mov
sbb
add
push
jmp
push
fs
xchg
je
out
movsl
mov
and
clc
or
sub
pop
lret
bound
mov
and
shrl
add
lahf
xor
lock
mov
xchg
cmpsl
inc
fcmovnu
mov
ret
call
or
cmp
pop
jge
imul
shrb
mov
cmp
jbe
les
xchg
clc
vphsubwd
ljmp
cs
push
mov
push
jmp
shl
jo
adc
pop
icebp
and
inc
js
js
lods
inc
mov
fcmovne
popa
or
das
call
imul
lock
aam
mov
sbb
inc
fstps
sub
push
pusha
imull
lret
jle
std
push
pop
popf
xor
das
xchg
movsb
andb
aad
pop
pop
sbb
dec
sub
ja
insb
push
lods
popf
jnp
xchg
lods
mov
sbb
call
push
ljmp
jno
xchg
jb
lock
les
testb
inc
cmp
xchg
sub
lea
dec
pushf
scas
ljmp
add
mov
inc
push
daa
mov
xchg
movsl
inc
mov
out
arpl
sub
dec
jecxz
dec
sbbl
mov
pop
fucomip
mov
xor
jb
push
lds
stc
nop
cmpsl
jecxz
fld1
pop
scas
sbb
add
insb
dec
pop
mov
lea
mov
fbstp
adc
pop
repnz
es
jns
jbe
lods
inc
mov
fxch
bound
jmp
dec
sbb
shrl
addb
mov
icebp
mov
shlb
cmpsb
push
and
sub
clc
test
dec
loop
leave
jg
sti
fldt
or
xchg
pusha
jo
push
mov
ret
fidivl
aam
pop
push
pop
stc
nop
dec
daa
loope
pop
push
scas
fwait
jp
xchg
lods
mov
sbb
jmp
pop
cmp
push
pusha
jb
xchg
jno
icebp
mov
ret
js
cmc
push
scas
inc
cmp
xchg
cs
pop
int
mov
dec
fwait
lods
jmp
fidivrs
mov
inc
push
daa
mov
xchg
mov
cs
arpl
or
cmp
sbb
imul
lcall
fucomip
mov
aas
xor
jb
push
pop
xchg
in
pop
scas
pop
sti
add
push
and
mov
fnsave
pslld
xor
adc
lods
inc
mov
cwtl
das
leave
xlat
lret
bound
jmp
dec
sbb
ds
jo
pop
sahf
scas
xchg
repnz
shlb
cmpsl
push
and
push
aaa
lds
popa
clc
cmpsb
mov
jg
stc
fldt
or
mov
pusha
outsb
mov
cmp
repz
pop
push
adc
loop
pop
push
add
jmp
push
mov
or
jmp
push
cmp
or
mov
daa
jecxz
jns
hlt
add
inc
ss
int
mov
dec
lcall
imul
or
inc
dec
daa
mov
xchg
mov
das
in
arpl
and
dec
in
inc
sbbl
mov
mov
fsubrp
mov
inc
xor
push
pop
test
in
fsub
pop
scas
adc
aaa
xor
mov
mov
or
das
es
inc
jnp
jne
lods
inc
mov
cltd
xor
aad
bound
ljmp
pop
cmp
pop
sahf
lods
nop
repz
into
and
test
and
xor
stc
movsb
xchg
mov
fldcw
or
lahf
ss
sub
and
mov
ds
rol
pop
add
cli
xchg
inc
and
sbb
test
lret
sti
or
cmp
aad
pop
jae
mov
repz
scas
xchg
sub
sarb
add
xor
into
xchg
dec
cwtl
test
sbb
aad
jmp
or
aas
dec
sub
xchg
lahf
inc
fst
mov
jecxz
fs
and
sbbb
push
insl
add
xchg
mov
and
jmp
test
jae
push
pop
adcl
jl
jecxz
scas
adc
add
addr16
and
mov
fidivl
or
pop
hlt
and
nop
daa
pusha
inc
jnp
jae
scas
inc
mov
cltd
xor
aam
arpl
call
ljmp
jnp
lahf
lods
mov
mov
int
mov
adc
inc
fcoml
das
fs
cli
mov
les
add
sbb
and
push
popf
jge
ds
mov
lds
sti
xchg
inc
and
jp
sbb
cmpsl
mov
into
call
or
cmp
ds
pop
je
lea
popf
scas
xchg
sub
mov
mov
xor
cltd
xor
iret
data16
xchg
cmpsl
in
test
mov
insb
jmp
or
mov
pop
adc
iret
mov
loope
gs
and
dec
out
inc
sbbl
push
insl
add
xchg
mov
and
call
test
je
dec
pop
orl
sbb
daa
xor
and
mov
fnstenv
or
pop
hlt
push
sub
jnp
jno
scas
inc
mov
cltd
xor
ror
fs
daa
jmp
pop
cmp
insb
imul
stos
mov
mov
fists
test
pop
inc
fstl
das
bound
sti
mov
ret
sbbb
aad
add
pop
mov
and
mov
lods
mov
lds
cld
xchg
inc
and
jp
sbb
movsl
mov
iret
out
pop
mov
or
cmp
ds
pop
jne
mov
repz
lods
xchg
sub
mov
mov
xor
cltd
xor
shlb
bound
test
mov
insb
out
or
sub
hlt
mov
dec
sub
jl
adc
into
scas
xor
fucomip
data16
and
dec
out
inc
test
jae
insl
add
xchg
mov
and
out
push
sbb
test
jne
dec
pop
jg
cld
xchg
shlb
mov
hlt
add
gs
and
mov
aas
leave
fdivs
jmp
hlt
sbb
xchg
sub
jnp
outsl
jg
inc
mov
cltd
xor
ror
gs
mov
push
es
sbbl
insb
imul
mov
adc
dec
das
das
pusha
jo
cld
mov
ret
hlt
shrl
add
mov
pop
imul
ds
mov
lds
std
xchg
inc
pop
in
push
bound
mov
jb
cltd
mov
les
mov
push
pop
out
aaa
push
aas
inc
pop
jbe
mov
hlt
cltd
stos
xchg
sub
mov
mov
xor
lcall
popa
mov
test
mov
insl
out
or
sub
cmc
mov
dec
sub
jp
adc
int3
lods
xor
fsubrp
data16
push
add
xor
test
jno
outsb
add
les
rclb
stos
inc
sub
fidivs
dec
enter
cld
xchg
mov
fistps
mov
repz
and
cmp
arpl
mov
mov
inc
xlat
enter
or
pop
cmc
sbb
xchg
sub
adc
mov
scas
lcall
jecxz
dec
adc
ss
insl
push
mov
mov
fcoml
test
dec
cs
pop
outsb
gs
lahf
orb
rolb
add
mov
and
rclb
test
stos
mov
pop
std
or
in
push
pusha
sbb
mov
ret
and
xor
push
jbe
mov
cmc
cwtl
test
jl
jmp
mov
cs
shlb
pusha
mov
test
mov
outsb
in
or
es
testb
pop
adc
mov
xor
fucomp
data16
sbb
push
out
test
jo
outsb
add
ret
movsb
mov
in
push
push
clc
stos
inc
sub
fidivs
dec
enter
cld
xchg
mov
ficomps
mov
repnz
and
cmp
bound
jne
push
in
mov
inc
xlat
aad
or
jmp
xchg
sub
jl
insl
jl
inc
scas
mov
gs
mov
adcl
insl
addr16
mov
mov
fistl
test
dec
sub
gs
sahf
jg
in
mov
insb
add
adc
and
rclb
test
test
lret
cld
or
xchg
ds
sbb
mov
ret
repz
xor
inc
xlat
inc
push
jbe
xchg
cmc
xchg
test
sub
mov
mov
sub
dec
shlb
pop
mov
test
mov
outsb
in
or
and
inc
sub
ja
adc
mov
xor
fsubr
data16
sbb
push
out
cmp
outsb
add
ret
and
jecxz
push
adc
aaa
fidivs
dec
enter
cld
xchg
mov
fstpl
mov
icebp
add
and
cmp
popa
inc
and
mov
inc
xlat
aam
or
call
xchg
sub
jl
insb
jnp
inc
lods
lea
gs
mov
adcl
data16
mov
mov
ficoml
test
dec
sub
pop
insb
gs
popf
jle
in
mov
insb
add
adc
and
rclb
test
test
fidivs
leave
pop
sti
or
xchg
cmp
pop
sbb
mov
shll
repnz
xor
inc
xlat
inc
push
jbe
xchg
cmc
xchg
cmpsl
xchg
sub
mov
adc
cli
mov
sub
fwait
xor
pop
mov
test
mov
outsb
jecxz
or
and
testb
pop
adc
mov
xor
fucomi
data16
sbb
push
out
cmp
sbb
outsb
add
shll
push
adc
stos
inc
sub
fidivs
dec
enter
cld
xchg
mov
fcompl
mov
lock
and
cmp
pusha
inc
and
mov
inc
xlat
or
daa
xchg
sub
jl
imul
lods
mov
gs
fistpll
test
insl
fs
mov
mov
sub
neg
adc
dec
sub
pop
imul
jl
in
mov
insb
add
adc
and
rcrl
test
cmpsb
mov
jbe
mov
xchg
cmp
in
dec
pop
sbb
mov
lcall
and
xor
inc
xlat
inc
push
ja
test
cmc
xchg
cmpsb
xchg
sub
mov
adc
stc
mov
sub
fwait
xor
dec
shrl
pop
mov
xchg
scas
xlat
outsb
loope
or
lea
push
adc
xchg
xor
fld1
addr16
sbb
push
out
cmp
add
shlb
pop
adc
stos
inc
es
enter
std
xchg
mov
fistpl
mov
out
add
pop
cs
pop
inc
and
mov
inc
xlat
ret
shlb
add
pop
cmc
push
es
sub
jl
imul
xor
mov
test
insl
bound
mov
mov
sub
not
adc
dec
sub
pop
push
fwait
jp
in
mov
insb
add
shld
pop
mov
push
pop
xchg
jb
inc
movsb
mov
ja
vdivsd
or
xchg
cmp
out
dec
pop
sbb
fwait
pushf
lods
cmp
fidivrs
pop
lock
inc
fadds
ja
andl
xchg
movsb
xchg
sub
mov
adc
divl
xor
dec
shrl
pop
mov
xchg
scas
fsubrs
lock
mov
sub
jae
adc
loopne
cmpsl
xor
fsub
addr16
pop
cli
push
call
imul
mov
and
ffreep
pop
adc
stos
inc
and
inc
leave
pusha
js
std
xchg
mov
fstps
mov
in
add
rcrb
and
scas
xchg
inc
fadd
shlb
add
pop
notb
ss
push
mov
data16
fdivrl
test
xlat
outsb
popa
jno
mov
mov
sub
hlt
aad
stos
push
push
dec
loopne
daa
xor
pop
push
dec
out
mov
insl
add
or
mov
push
pusha
ret
jno
inc
mov
enter
call
dec
pop
sbb
pushf
fwait
stos
cmp
fdivrl
lock
inc
dec
ja
andl
sub
mov
adc
daa
pop
popf
xor
dec
shrl
pop
mov
xchg
lods
fnstenv
out
or
xor
ret
push
lods
test
xor
xlat
in
adc
aaa
test
dec
jo
jge
mov
and
pslld
arpl
popa
ja
std
xchg
mov
call
mov
in
push
popf
sbb
ds
outsl
jl
out
lods
nop
inc
fld
into
jne
add
pusha
notl
xchg
sub
adc
cmpsl
mov
cli
fstpt
test
fsubrs
outsl
or
mov
shrl
repnz
stos
add
es
push
data16
xchg
js
out
mov
outsb
add
cmp
pop
ret
jo
inc
mov
ret
leave
pusha
cmc
add
xchg
ss
call
mov
imul
rcr
mov
pop
lock
inc
fidivrl
dec
ja
jg
popa
clc
xchg
mov
jg
in
mov
and
inc
shrl
pop
mov
xchg
lods
fidivl
in
or
nop
xor
sub
outsl
push
pop
scas
test
xor
adc
push
ljmp
jno
jl
mov
es
fcmovnb
pop
or
das
fbstp
inc
lret
bound
std
xchg
mov
jmp
mov
jmp
sahf
sbb
cmp
pop
cmp
push
out
stos
popl
ror
or
loope
clc
adc
xchg
sub
jg
gs
dec
movsl
xchg
addr16
fnstcw
xchg
jo
insl
or
mov
rclb
loope
and
lret
push
call
call
or
and
mov
inc
mov
ror
repz
xchg
xor
addb
mov
addr16
sahf
cwtl
cmpsb
cmp
xlat
mov
pop
icebp
sub
fstpt
pop
stc
popf
xchg
sub
loop
mov
and
ss
shrb
push
mov
xchg
stos
jmp
stc
nop
xor
ret
insl
push
pop
scas
orb
int3
aam
push
ljmp
jno
jp
movsb
cmp
fld
pop
or
lods
inc
and
lret
bound
xchg
mov
jmp
mov
jmp
cmp
push
cmp
out
test
lret
cld
fbld
adc
xchg
sub
xor
arpl
dec
mov
shrl
xlat
mov
xchg
fnstenv
imul
pushf
jge
mov
rclb
loop
and
lret
imul
movsl
mov
push
out
outsl
push
clc
or
and
lea
sahf
scas
loop
loopne
lret
add
cwtl
xor
jmp
mov
gs
sahf
xchg
movsl
cmp
mov
sub
inc
fstpt
dec
jns
jnp
stc
lea
pop
loopne
mov
and
lahf
ss
shrl
push
mov
mov
test
jb
call
stc
nop
cmp
scas
orb
int3
rcr
imul
and
inc
jno
js
movsl
cmp
cltd
es
fld
pop
or
lods
and
xor
inc
clc
daa
sti
xchg
icebp
jbe
popf
fldenv
push
mov
into
mov
js
dec
loopne
add
mov
sub
mov
xchg
jnp
jo
movsl
arpl
aas
sbb
cwtl
ljmp
outsb
stos
test
dec
scas
sbb
test
inc
adc
pop
lcall
push
adc
mov
loopne
int3
mov
jp
outsl
mov
sbb
loop
stc
dec
dec
sbb
nop
cmp
lcall
mov
rorb
mov
add
out
xchg
ljmp
imul
movsb
cmp
xor
lock
xor
mov
fldcw
into
stos
insl
cmp
push
andl
loope
push
jg
out
int3
or
jo
sub
pop
xchg
mov
lcall
int
mov
mov
jnp
pop
ja
pop
jmp
push
and
and
les
mov
mov
jge
mov
in
push
or
test
and
rclb
lds
aaa
mov
shl
sub
jnp
sub
push
push
aaa
sbb
inc
bound
daa
arpl
iret
push
add
inc
push
xor
imul
scas
sub
cmp
insl
adc
jno
ja
xchg
push
dec
stos
jbe
adc
imul
bound
mov
mov
dec
jno
aaa
lea
push
dec
sbb
inc
out
sahf
pop
jg
je
je
push
inc
inc
adc
popf
cmpsb
push
gs
jge
cli
mov
je
movsb
fsubs
mov
and
inc
icebp
fsubrs
jecxz
mov
mov
aaa
ret
adc
or
stos
repz
jae
pop
fs
and
adc
or
or
add
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
mov
add
jbe
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
mov
mov
push
pop
aaa
jnp
jbe
jle
decb
jae
loop
mov
fsts
cmpsb
jmp
pop
and
lahf
push
inc
dec
jnp
dec
pusha
sub
gs
