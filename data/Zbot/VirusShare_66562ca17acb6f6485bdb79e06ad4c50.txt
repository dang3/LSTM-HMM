push
mov
push
movl
mov
or
imul
add
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
lea
mov
mov
mov
mov
add
add
mov
movl
movl
mov
cmp
jl
mov
sub
imul
mov
jmp
movl
lea
mov
mov
or
mov
imul
imul
mov
mov
cmp
jg
lea
mov
mov
and
mov
imul
imul
mov
lea
mov
mov
mov
add
mov
sub
mov
mov
add
mov
cltd
idiv
add
mov
jmp
movl
mov
sub
imul
mov
movl
lea
mov
mov
mov
sub
mov
lea
push
push
call
mov
and
add
add
mov
push
call
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
cltd
idiv
mov
mov
add
mov
lea
push
push
call
jmp
movl
mov
add
mov
cltd
idiv
add
mov
movl
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jg
lea
mov
mov
add
mov
cltd
idiv
mov
movl
lea
mov
lea
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
lea
mov
mov
mov
imul
mov
sub
mov
jmp
movl
cmpl
je
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
and
mov
add
mov
lea
push
push
call
push
push
call
movl
movl
mov
sub
mov
sub
mov
push
push
push
call
lea
mov
mov
add
mov
mov
cltd
idiv
mov
cmpl
jg
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
jmp
cmpl
jne
push
push
call
movl
mov
or
mov
sub
add
mov
lea
mov
mov
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
movl
movl
lea
mov
mov
mov
sub
mov
sub
mov
movl
mov
sub
mov
mov
and
add
mov
lea
mov
mov
mov
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
movl
movl
mov
sub
mov
lea
push
call
lea
push
push
call
lea
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
push
call
movl
movl
mov
imul
mov
mov
or
mov
and
sub
mov
lea
push
push
call
movl
lea
mov
mov
and
mov
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
sub
mov
movl
lea
mov
mov
mov
sub
imul
mov
push
lea
push
call
jmp
movl
movl
lea
mov
lea
mov
mov
mov
mov
sub
add
mov
push
call
movl
movl
mov
and
imul
add
mov
movl
lea
mov
mov
and
mov
mov
and
add
add
mov
movl
mov
cmp
jne
mov
or
mov
or
add
add
mov
jmp
push
push
push
call
lea
mov
lea
mov
mov
mov
or
mov
add
cltd
idiv
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
sub
mov
mov
sub
imul
mov
mov
or
mov
or
add
mov
sub
mov
movl
jmp
mov
add
mov
mov
cltd
and
add
sar
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
imul
imul
mov
movl
mov
imul
imul
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jg
movl
mov
and
add
mov
jmp
movl
mov
add
mov
cltd
idiv
mov
movl
movl
mov
imul
mov
mov
push
call
add
movl
cmpl
jne
movl
lea
mov
mov
mov
add
mov
lea
mov
movl
mov
mov
and
mov
or
sub
mov
mov
sub
mov
sub
mov
jmp
movl
movl
mov
push
mov
push
push
call
add
jmp
movl
movl
mov
and
imul
mov
mov
and
imul
imul
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
mov
or
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
imul
mov
lea
mov
mov
mov
sub
mov
jmp
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
push
push
call
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
cmpl
jl
movl
movl
mov
or
add
add
mov
movl
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
push
call
movl
lea
mov
mov
mov
and
imul
imul
mov
jmp
movl
movl
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
push
push
push
push
call
movl
movl
mov
cmp
jg
movl
movl
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
sub
add
mov
push
lea
push
call
jmp
movl
cmpl
jl
lea
mov
mov
mov
imul
mov
cmpl
jl
movl
mov
add
mov
cltd
idiv
add
mov
lea
mov
mov
or
mov
add
cltd
idiv
mov
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
movl
movl
mov
sub
mov
sub
mov
movl
movl
mov
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
or
sub
mov
lea
mov
mov
mov
or
add
add
mov
movl
lea
mov
mov
or
mov
add
cltd
idiv
add
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
add
imul
mov
lea
push
push
call
movl
movl
lea
mov
movl
mov
add
mov
cltd
idiv
imul
mov
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
and
imul
mov
push
push
push
push
call
lea
mov
lea
mov
mov
mov
and
mov
sub
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
mov
cmp
jl
push
lea
push
call
movl
lea
mov
mov
mov
imul
mov
jmp
movl
cmpl
jne
push
push
push
push
call
push
push
push
push
call
mov
cmp
jl
push
push
push
call
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
cmpl
jl
movl
mov
push
mov
push
push
call
add
jmp
movl
mov
sub
imul
mov
movl
cmpl
jl
lea
mov
mov
and
mov
mov
and
imul
imul
mov
push
push
push
push
call
mov
imul
add
mov
push
call
mov
push
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
push
push
push
call
push
push
call
add
mov
cmpl
jne
movl
jmp
push
call
add
lea
push
call
movl
mov
and
mov
sub
mov
movl
movl
jmp
mov
add
mov
mov
add
mov
cmpl
jae
mov
add
mov
mov
mov
jmp
push
push
push
call
movl
mov
cmp
jne
movl
mov
and
imul
imul
mov
cmpl
jne
movl
lea
mov
mov
mov
imul
mov
sub
mov
jmp
lea
mov
mov
mov
imul
imul
mov
lea
mov
mov
mov
sub
mov
sub
mov
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
or
imul
mov
push
lea
push
call
jmp
jmp
lea
mov
mov
mov
imul
imul
mov
movl
movl
mov
or
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
sub
imul
mov
mov
push
push
mov
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
push
mov
push
mov
push
call
add
jmp
jmp
mov
push
push
mov
push
call
add
movl
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
imul
imul
mov
push
push
call
add
mov
cmpl
jne
movl
jmp
movl
movl
mov
push
push
mov
push
call
add
lea
mov
mov
and
mov
mov
sub
add
mov
push
push
mov
push
call
add
call
call
call
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
push
push
mov
push
call
add
movl
mov
push
call
mov
movl
lea
mov
mov
mov
add
imul
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
mov
cmpl
jne
movl
jmp
movl
movl
mov
push
call
add
mov
push
mov
push
call
mov
cmpl
jne
movl
jmp
push
lea
push
call
movl
movl
lea
mov
mov
and
mov
add
mov
lea
mov
mov
mov
sub
imul
mov
mov
mov
mov
push
mov
push
mov
push
push
call
push
mov
push
mov
push
call
add
xor
jne
movl
movl
lea
mov
mov
and
mov
sub
imul
mov
movl
lea
mov
mov
mov
sub
mov
sub
mov
mov
sub
imul
mov
cmpl
je
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
or
mov
add
cltd
idiv
mov
push
push
push
push
call
movl
mov
add
mov
mov
and
imul
mov
sub
mov
lea
mov
mov
mov
add
imul
mov
push
push
push
call
lea
mov
mov
mov
or
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
cmpl
jne
lea
push
push
call
movl
movl
lea
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
movl
movl
lea
mov
movl
mov
and
mov
sub
add
mov
jmp
jmp
cmpl
je
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
movl
mov
add
add
mov
jmp
movl
movl
lea
mov
mov
mov
or
add
mov
lea
push
call
movl
movl
mov
add
mov
lea
mov
mov
and
mov
add
cltd
idiv
mov
movl
cmpl
jl
push
push
push
push
call
movl
lea
mov
mov
or
mov
add
cltd
idiv
add
mov
movl
movl
mov
and
sub
imul
mov
mov
and
mov
or
add
add
mov
lea
mov
mov
and
mov
mov
add
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
call
push
call
movl
movl
mov
add
mov
movl
mov
and
add
mov
movl
mov
imul
add
mov
push
call
lea
mov
movl
mov
or
mov
sub
mov
lea
mov
movl
movl
mov
mov
and
mov
and
sub
mov
sub
mov
mov
add
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
add
mov
sub
mov
jmp
movl
movl
lea
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
movl
mov
mov
or
sub
mov
movl
mov
add
imul
mov
lea
mov
mov
mov
or
add
imul
mov
jmp
jmp
movl
movl
mov
add
mov
movl
mov
imul
mov
sub
mov
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
push
push
push
call
movl
mov
and
add
mov
sub
mov
jmp
movl
cmpl
je
movl
mov
and
mov
or
sub
add
mov
jmp
movl
movl
lea
mov
mov
mov
or
mov
and
imul
mov
sub
mov
movl
mov
sub
add
mov
movl
lea
mov
mov
or
mov
sub
add
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
cmpl
jl
movl
movl
mov
add
mov
cltd
idiv
imul
mov
jmp
movl
cmpl
jne
movl
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
jmp
movl
movl
mov
sub
mov
movl
mov
sub
mov
sub
mov
movl
movl
mov
add
mov
cltd
idiv
mov
push
push
call
lea
push
push
call
cmpl
je
movl
movl
mov
add
mov
cltd
idiv
mov
jmp
push
push
push
push
call
movl
movl
mov
cmp
je
movl
lea
mov
mov
mov
add
mov
sub
mov
movl
movl
mov
and
mov
or
add
mov
movl
movl
mov
cmp
jl
movl
movl
lea
mov
mov
mov
sub
mov
sub
mov
movl
mov
cmp
jl
push
push
call
push
push
push
push
call
movl
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
push
push
push
push
call
movl
lea
mov
mov
mov
sub
mov
movl
lea
mov
mov
mov
sub
add
mov
jmp
movl
cmpl
jl
push
call
push
lea
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
add
mov
jmp
movl
movl
movl
mov
or
mov
sub
mov
push
push
push
call
movl
lea
mov
mov
or
mov
imul
mov
cmpl
jne
movl
mov
add
mov
cltd
idiv
add
mov
mov
or
sub
mov
jmp
lea
mov
mov
mov
or
imul
add
mov
lea
push
call
push
push
push
push
call
movl
mov
cmp
jl
movl
mov
sub
mov
push
call
movl
cmpl
jg
movl
mov
or
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
lea
push
call
jmp
movl
mov
add
mov
cltd
idiv
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
add
mov
movl
movl
lea
mov
lea
mov
movl
mov
mov
and
mov
mov
sub
imul
mov
movl
mov
and
sub
add
mov
push
call
movl
lea
mov
mov
or
mov
mov
sub
imul
mov
push
push
push
call
movl
lea
mov
mov
mov
or
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
movl
cmpl
jne
movl
mov
or
imul
mov
push
push
push
push
call
movl
lea
mov
mov
add
mov
cltd
idiv
imul
mov
push
call
movl
cmpl
jne
movl
lea
mov
movl
mov
add
mov
mov
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
sub
mov
lea
push
call
jmp
lea
mov
mov
or
mov
sub
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
push
call
movl
mov
and
sub
mov
sub
mov
jmp
movl
movl
lea
mov
movl
mov
mov
or
imul
mov
sub
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
je
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
imul
mov
mov
and
add
mov
mov
add
mov
sub
mov
mov
imul
mov
mov
push
mov
push
mov
push
call
add
call
push
push
call
mov
push
call
push
fldz
fstps
push
fldz
fstps
push
fldz
fstps
call
movl
lea
mov
mov
mov
imul
mov
sub
mov
mov
pop
ret
push
mov
sub
movl
movl
mov
sub
mov
sub
mov
movl
mov
or
imul
mov
sub
mov
cmpl
jl
push
call
jmp
movl
mov
imul
add
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
movzwl
cmp
jne
call
xor
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
jmp
jmp
jmp
jmp
mov
inc
add
lcall
add
inc
add
add
add
cmp
add
dec
inc
add
sub
add
jo
add
sbb
add
inc
add
clc
inc
add
call
inc
add
fadds
add
inc
add
add
add
cwtl
inc
add
es
add
sbb
add
inc
add
out
add
pusha
inc
add
push
inc
add
jle
add
mov
fadds
movsb
inc
add
mov
inc
add
xor
add
add
add
inc
inc
add
xor
push
inc
add
sbb
add
add
add
ljmp
add
add
add
push
dec
push
and
push
dec
pop
push
inc
dec
inc
inc
cmp
and
fs
and
je
imul
and
daa
je
push
outsb
add
add
insl
jne
popa
je
outsl
outsb
and
and
bound
and
popa
jae
and
and
jb
jne
and
gs
gs
and
and
outsb
imul
arpl
and
jae
popa
je
push
add
inc
push
push
push
pop
dec
inc
inc
inc
pop
dec
dec
inc
pop
dec
dec
push
pop
push
push
inc
push
inc
dec
push
add
push
pop
push
jb
dec
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
add
jo
popa
add
add
add
add
add
add
add
add
add
add
decl
ss
add
ss
add
add
inc
add
xor
add
loopne
add
add
add
inc
add
add
pushf
inc
add
mov
add
add
add
add
add
mov
add
add
add
mov
inc
add
lcall
add
inc
add
add
add
cmp
add
dec
inc
add
sub
add
jo
add
sbb
add
inc
add
clc
inc
add
call
inc
add
fadds
add
inc
add
add
add
cwtl
inc
add
es
add
sbb
add
inc
add
out
add
pusha
inc
add
push
inc
add
jle
add
mov
fadds
movsb
inc
add
mov
inc
add
xor
add
add
add
inc
inc
add
xor
push
inc
add
sbb
add
add
add
ljmp
add
add
je
popa
jae
inc
jb
outsl
jb
add
push
gs
imul
xor
inc
jb
popa
je
inc
jbe
outsb
je
add
inc
add
gs
je
dec
jne
gs
add
dec
add
gs
je
push
gs
popa
jo
outsl
jb
inc
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
je
jb
arpl
jae
push
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
insb
add
je
je
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
bound
je
outsl
arpl
add
inc
gs
gs
dec
gs
imul
push
gs
gs
inc
insb
imul
inc
gs
gs
inc
outsl
insb
outsl
jb
add
add
je
popa
jae
gs
jp
jb
popa
jo
add
dec
xor
cs
insb
add
push
insl
gs
js
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
insb
push
gs
gs
data16
pop
add
insb
inc
gs
gs
inc
outsl
outsb
je
js
add
push
push
push
imul
ja
insb
inc
gs
jne
jb
outsb
je
inc
add
inc
dec
inc
dec
xor
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
dec
push
push
inc
push
push
cs
insb
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
push
push
xchg
mov
sub
pop
cmpl
andl
adcl
or
insl
sbb
or
xchg
inc
add
inc
push
ljmp
rorb
arpl
call
and
je
inc
adc
mov
push
push
insl
push
push
sub
or
xlat
test
sub
mov
xchg
inc
inc
xlat
arpl
daa
pushf
popa
sbb
addb
pop
addb
add
xchg
pop
push
lock
inc
lock
outsl
stc
pop
push
adc
add
inc
add
ljmp
rorb
push
mov
ss
pop
out
popf
inc
adc
lock
arpl
scas
sub
add
pusha
adc
dec
sub
pushl
aam
jb
push
lock
cmp
mov
insl
push
push
call
stos
aam
callw
sub
xchg
add
popa
jecxz
push
mov
insb
sub
mov
push
mov
insl
out
mov
out
pop
int3
sub
add
rcrb
adc
pop
pop
sbb
in
clc
mov
jmp
shrl
sub
add
sub
xchg
scas
call
lock
jle
mov
enter
arpl
mov
jno
loope
or
inc
mov
insl
push
mov
xchg
outsb
lret
mov
push
adc
mov
testl
pop
and
push
lods
call
and
mov
dec
push
jmp
lret
and
jne
pop
lock
xor
adc
jbe
pop
xor
shrb
ljmp
xor
stos
add
stos
jmp
xchg
sbb
scas
insb
adcl
add
xchg
ret
inc
dec
inc
mov
ret
mov
jecxz
xchg
adc
movsl
rcrb
pop
push
scas
insb
and
je
mov
push
cld
add
lea
xchg
or
xchg
adc
aas
dec
adc
mov
movsl
xchg
dec
cld
jle
add
or
call
sub
jnp
push
lea
js
jne
inc
ljmp
xlat
test
xlat
jmp
push
jge
pop
add
notb
add
ffreep
add
xor
xor
or
add
test
push
add
adc
push
dec
push
add
mov
dec
add
mov
xor
sub
adc
and
mov
rorb
ret
ret
xor
xlat
out
arpl
call
ret
lods
roll
std
sbb
or
sub
int3
aas
int3
or
add
push
cmp
clc
push
nop
jg
imul
gs
jp
les
mov
xor
jo
ja
xlat
jmp
pushl
xlat
fs
aas
orl
mov
add
bound
cmp
add
xor
cmp
inc
jb
or
pop
inc
fs
and
je
inc
bound
es
xor
push
sub
jb
sbb
sbb
fs
je
or
push
add
inc
push
add
sub
add
sub
add
sub
add
sub
add
in
int
in
add
mov
ds
inc
dec
push
cmpsl
cltd
push
add
and
pop
test
or
outsb
insl
test
imul
jmp
int
fs
xor
mov
sub
rcrl
xor
inc
jmp
ss
push
inc
mov
and
out
int3
adc
into
jp
lahf
in
mov
dec
and
and
mov
add
iret
sti
repnz
pushf
scas
xor
imull
dec
push
or
out
cmpsl
mov
bts
shl
fisttps
movsb
mov
jp
cmp
roll
sub
aas
adc
mov
or
js
repz
out
and
cli
loopne
fisttpl
mov
cmp
lcall
fsubrl
push
adc
pop
mov
push
jle
dec
adc
lods
adc
mov
sbb
cmp
ret
sysret
cmc
mov
pop
mov
lret
aad
mov
test
fsts
pop
mov
fbld
xor
sub
dec
or
fcomip
xchg
xchg
cmp
stc
jo
or
or
dec
sub
clc
add
mov
cmp
xchg
addr16
pop
add
nop
push
xor
adc
xor
jle
lock
test
cs
repz
fldt
inc
dec
adc
test
stc
std
sub
js
jnp
cmp
out
jns
and
icebp
sbb
shll
insl
clc
sbb
mov
ret
push
mov
ds
xchg
push
fwait
clc
sbb
aam
mov
or
shll
outsb
and
jp
jnp
loopne
mov
xor
dec
dec
clc
mov
sahf
jl
adc
add
add
add
jge
xchg
or
ret
divl
sbb
out
or
in
mov
dec
dec
push
push
std
xor
addr16
inc
dec
imul
pusha
add
cmpsl
popf
sub
leave
or
xchg
xchg
pop
push
call
add
enter
test
fisubrs
push
mov
and
lcall
push
adc
hlt
decl
pop
lods
adc
arpl
add
and
push
push
inc
inc
adc
and
mov
or
stc
jg
xor
push
adc
popf
int3
or
mov
aaa
mov
add
mov
push
test
ret
pop
loop
icebp
xor
dec
stc
in
jno
cwtl
ret
clc
or
int3
pop
in
mov
push
je,pn
cmp
add
and
sub
int3
mov
rolb
cltd
cld
and
push
pop
test
push
jl
lahf
jle
mov
adc
mov
enter
enter
jecxz
out
sahf
and
inc
lods
in
mov
movsl
scas
nop
sub
adc
out
dec
stos
xchg
lret
out
push
mov
mov
cmp
dec
inc
dec
mov
push
mov
adc
sub
inc
fs
push
int3
sub
inc
pushf
mov
scas
cltd
inc
add
cld
mov
xchg
call
insb
sbb
xor
add
push
or
cltd
jnp
push
pushf
dec
pop
add
xlat
push
and
repz
add
adc
sbb
and
cmp
and
or
and
cmp
jg
pusha
lods
jae
or
push
cli
lret
pop
adc
ficoml
test
mov
inc
insl
fs
sbb
aaa
xor
and
repz
add
adc
xchg
pop
inc
adc
and
mov
lods
pop
scas
aam
movsb
out
aad
pushf
nop
enter
xor
pushf
xor
or
push
cmp
rep
add
adc
or
pop
add
mov
mov
sub
mov
nop
lock
fisubs
sbb
sbb
je
dec
mov
lods
outsb
test
sbb
movsb
pusha
pop
mov
es
icebp
and
cmc
sub
aad
pop
add
pop
xor
add
fs
or
mov
xchg
out
or
ds
and
pop
popf
cmp
add
adc
xor
adc
mov
loop
push
xchg
push
sub
adc
lods
int3
bound
xlat
ret
repz
add
js
mov
loope
pop
pop
xor
push
pop
and
test
push
xchg
in
or
mov
xchg
insb
adc
push
aaa
iret
adc
dec
std
jg
sub
outsl
out
movsb
ss
loopne
sarb
sbb
adc
loop
jae
ret
and
and
mov
hlt
cmp
adc
xchg
cmp
aas
sbb
pop
dec
adc
dec
pop
xor
iret
je
icebp
add
les
in
dec
cmpsb
rolb
shll
push
jecxz
xor
inc
jno
adc
add
push
or
pushf
inc
psubusw
and
xchg
xor
cs
ret
xchg
repnz
insb
ja
leave
mov
pop
std
mov
cmp
inc
mov
cmp
cmp
xor
cmp
push
test
pop
push
add
cmp
sbb
sub
sub
mov
mov
js
cs
jle
dec
add
fldt
stc
jl
rcrb
push
jae
inc
jnp
stos
dec
sti
add
rorb
inc
into
mov
cld
fidivrl
sub
adc
xor
sub
add
xor
inc
ds
cs
ds
push
xchg
leave
jbe
jp
dec
aam
xor
and
sub
dec
cmp
add
adc
mov
xchg
adc
mov
xlat
cmp
add
or
test
mov
test
mov
dec
cmpsb
scas
dec
jae
cmpsl
call
sub
mov
icebp
dec
mov
mov
mov
push
fldcw
sub
aad
movsb
fstl
cmp
mov
xchg
push
cmp
lcall
and
icebp
xor
adc
jecxz
adc
repnz
add
jp
cli
popf
and
cmp
pop
mov
push
push
insb
cltd
out
sub
xlat
mov
xchg
cmp
push
sub
and
iret
js
je
fcoml
xor
in
mov
cmc
inc
rolb
and
xor
dec
test
cmp
popa
movsl
jle
cld
and
mov
insl
das
push
sarl
sbb
dec
sbb
dec
xchg
xlat
dec
xchg
jno
imul
ret
xor
hlt
cmp
push
mov
notb
scas
jb
mov
inc
inc
loope
cmp
mov
xchg
movsl
mov
dec
adc
call
sbb
pop
mov
xchg
repz
dec
mov
dec
in
sub
in
or
push
dec
pop
add
rolb
js
mov
push
add
cmp
adc
mov
subl
pop
inc
pop
lcall
sbb
std
std
cwtl
scas
dec
jg
testl
icebp
ret
ds
mov
add
inc
jge
scas
movsl
imul
sahf
xor
or
frstpm(287
fsubrl
mov
sar
aas
mov
out
out
mov
push
pushf
sbb
dec
dec
inc
rolb
push
in
rolb
jmp
jecxz
push
inc
and
sbb
cld
pop
adc
mov
pop
push
fdivl
mov
sbb
addb
and
adc
dec
pop
clc
adc
or
pushf
insl
xor
and
outsb
enter
sub
cwtl
and
lods
inc
test
invd
into
and
test
cs
sub
and
cmp
sbb
lret
fdivrs
pushf
fisttpl
mov
and
stc
lret
int
pop
in
shlb
loope
cld
inc
push
or
mov
sub
out
xor
mov
dec
pushf
push
movsb
nop
les
jmp
stos
xchg
jl
inc
mov
xor
data16
mov
fnsave
out
push
gs
push
fucomip
push
test
into
cmp
cli
sbb
rcrb
xor
adc
loope
pop
bnd
mov
inc
and
mov
jp
aaa
mov
inc
pop
popl
add
test
test
add
push
adc
nop
push
sbb
lcall
lea
and
inc
es
mov
mov
inc
sub
xchg
cs
xor
xchg
mov
inc
shlb
sub
mov
addr16
jae
outsb
inc
add
and
mov
mov
std
sub
mov
xor
aad
add
jle
outsl
shlb
mov
and
fistps
cli
icebp
add
and
jle
in
shl
icebp
cld
cltd
jg
xchg
fsubr
int
and
ror
aad
outsl
mov
add
and
cmp
lcall
lahf
in
nopl
icebp
dec
mov
jb
daa
lds
add
fdiv
out
cmp
pop
ret
push
mov
adc
pop
xor
jbe
shll
inc
das
rclb
imul
bnd
sbb
xlat
jb
or
xor
sahf
adcl
and
xor
or
xor
out
sub
push
stos
sub
sub
repnz
inc
aam
cmc
sub
jmp
push
adc
sub
daa
mov
stos
fwait
js
into
stos
pusha
sub
xorb
pushf
out
dec
loope
push
add
pushf
daa
sbb
mov
adc
or
sub
mov
lea
int3
gs
mov
sti
adc
pop
sub
repnz
movsb
divl
shl
icebp
push
inc
mov
mov
scas
lds
sub
cmp
mov
or
dec
add
lods
sub
enter
dec
xchg
fadds
sti
xchg
push
dec
mov
inc
shrl
in
add
push
ds
xor
ret
int
mull
in
leave
sub
cwtl
pop
aad
enter
mov
mov
add
lds
scas
maxss
inc
loop
ret
movsl
or
ja
ror
cmp
rorl
data16
rolw
loopne
add
movsb
jo
ret
inc
ja
xchg
and
shll
cmp
fstpl
aaa
dec
pop
or
pand
aam
xor
push
test
icebp
sbb
in
cltd
gs
push
mov
in
mov
out
mov
aaa
inc
rolb
push
or
add
shll
mov
push
sbb
sbb
jg
pusha
scas
adc
mov
inc
cld
insl
xor
jb
add
in
js
and
jecxz
inc
insl
mov
add
sbb
push
sbb
stc
inc
enter
or
outsl
loop
add
dec
xor
icebp
mov
sub
add
loopne
dec
adc
add
ds
jmp
cld
jne
push
push
jne
jo
inc
out
mov
push
gs
xor
inc
test
scas
mov
dec
cld
push
inc
ds
add
add
push
jne
push
das
pop
add
nop
sbb
jle
jae
cmp
ljmp
stos
sbb
in
shl
jmp
mov
lcall
fidivrs
std
jo
add
pop
imul
and
ror
mov
sub
sbb
cwtl
jne
insb
jne
lret
mov
mov
lea
sub
aad
inc
out
add
xor
rcrb
ss
and
mov
push
sub
jo
dec
dec
scas
das
lods
rorl
sbb
call
dec
jmp
fwait
adc
pop
mov
test
push
popfw
and
add
push
sahf
xor
pop
outsl
and
cmp
mov
outsb
cmp
xchg
add
loopne
sbb
loopne
sahf
inc
std
xorl
jmp
data16
das
scas
mov
mov
sbbb
mov
nop
add
flds
iret
ja
mov
mov
lea
add
cmp
jmp
std
subb
xor
xor
mov
lock
sub
pusha
lods
repnz
fwait
js
cmpl
stos
lds
int3
xchg
mov
inc
add
inc
mov
sbb
fbld
inc
imul
cli
jbe
rcrb
bound
xorl
or
or
lahf
or
mov
adc
lcall
or
bound
sar
sub
push
add
mov
add
mov
jne
out
outsb
dec
mulb
ja
pusha
xchg
pusha
lea
jmp
imul
fdivs
and
jp
lea
sbb
imul
dec
gs
push
std
leave
add
sbb
test
pop
imul
data16
clc
mov
or
aas
imul
popa
cmpsl
cld
ds
cmc
push
xor
push
lahf
or
enter
push
add
int3
push
mov
scas
pushl
add
push
jl
sub
push
sbb
push
dec
cmpsl
xchg
mov
scas
push
push
jp
mov
push
test
inc
xor
jl,pt
mov
and
jp
push
push
pushf
ret
jns
or
inc
aad
inc
leave
out
push
add
dec
bound
in
inc
lcall
loop
xor
add
jmp
push
cmpsl
xchg
push
or
or
mov
lret
and
das
icebp
dec
xchg
and
push
mov
mov
push
push
or
push
cmc
cs
cmpb
adc
and
iret
add
inc
jp
and
mov
pop
test
xor
push
xlat
inc
mov
in
repnz
or
pop
mov
addb
adcb
dec
mov
ret
mov
and
ja
inc
in
jp
push
push
adc
dec
out
clc
xchg
and
fwait
add
xlat
dec
ja
jae
imul
pop
lcall
arpl
aam
out
fisttpll
ret
shrl
jge
xlat
dec
out
jo
pop
push
shl
ljmp
insb
ds
add
xor
inc
cmp
mov
ljmp
enter
movsb
roll
cmpsl
adc
mov
xor
jl
jp
movsl
ficoms
dec
mull
arpl
nop
jo
bound
or
int
pusha
xor
jbe
inc
jmp
ret
add
test
repnz
push
push
stc
enter
stos
fdivrl
inc
lea
xlat
or
loopne
mov
gs
push
xchg
rorb
fmuls
push
pop
adc
fnop
xor
add
and
sti
shr
aaa
inc
xor
push
add
jg
jo
out
incb
lret
fistps
inc
inc
inc
out
cmpsl
mov
push
and
mov
and
fs
js
xchg
ljmp
pop
lcall
pusha
ja
cmp
cmpsl
inc
cmp
iret
push
popa
xor
stc
xor
adc
pop
cmp
out
jge
lahf
nop
cmpl
and
sbb
adc
add
sbb
daa
sub
fiadds
cli
xchg
cmc
jecxz
cmc
arpl
lods
scas
pop
inc
scas
or
dec
test
push
rol
cs
add
mov
mov
ljmp
mov
adc
cltd
or
jecxz
jo
cmp
adc
out
stos
cmp
and
push
dec
insb
imul
hlt
jl
xchg
repz
out
sbb
lods
mov
xchg
lret
and
dec
or
pop
imul
and
es
xor
mov
add
xchg
sarl
dec
ja
inc
mov
mov
je
xorl
pcmpgtw
sub
sub
js
or
cmc
push
mov
lea
aas
and
and
inc
jle
pop
mov
mov
insb
in
fs
cmp
jno
cmp
jg
inc
outsb
or
pop
cmpsb
or
jo
xchg
adc
out
or
mov
push
daa
stos
cmpsl
mov
dec
jecxz
cld
lea
pop
or
inc
daa
cmp
hlt
push
mov
xchg
lret
incb
int
lock
push
push
sbb
add
push
inc
mov
mov
mov
xchg
push
push
dec
jl
and
pop
cmpsb
fisubrs
pop
daa
shrb
push
popf
push
ror
xchg
sbb
mov
imul
add
mov
ss
mov
dec
mov
and
adc
add
pop
cmp
inc
fnsave
jl
inc
adc
mov
pusha
psrlw
dec
stc
pop
mov
cwtl
icebp
or
jmp
or
xor
insl
mov
cli
inc
xchg
ljmp
out
mov
lret
imul
add
and
dec
mov
jmp
dec
mov
movsb
test
xchg
addl
push
loop
cmc
mov
add
divb
mov
pop
into
shlb
cmp
adc
sahf
add
lahf
stos
xlat
cmpb
test
pop
insl
dec
and
push
stos
hlt
xchg
jecxz
xchg
xchg
inc
jecxz
xor
or
inc
lea
push
sbb
xchg
xchg
pop
incb
lea
inc
inc
ds
cwtl
jmp
nop
xor
mov
clc
jbe
call
sbb
repnz
push
mov
cmp
xor
push
sub
rdtsc
mov
jl
mov
je
mov
jb
cwtl
xchg
jecxz
mov
rcll
ds
nop
push
aad
dec
test
stc
xchg
test
movsb
jns
fistpll
jmp
push
dec
test
add
sbb
xor
jae
add
lods
repnz
pushf
sub
adc
push
push
pop
insb
arpl
sahf
xor
and
les
jns
imul
and
out
fistps
adc
mov
or
mov
orl
mov
mov
icebp
xchg
add
inc
std
jge
int3
out
mov
dec
loopne
shr
test
xchg
mov
or
dec
pop
jecxz
outsl
cmp
notb
fisubl
out
or
sbb
push
jnp
fdivrs
adc
ljmp
cmp
sbb
jb
int3
xchg
jg
cmp
imul
inc
push
fsubrl
and
and
mov
das
hlt
sarb
pop
mov
push
mov
add
inc
loop
stos
sbb
ljmp
pushf
xchg
out
int3
dec
out
mull
push
push
mov
and
sti
dec
fstpl
in
lret
std
mov
mov
add
xchg
sbb
fsts
and
aad
into
jmp
cmp
push
andb
inc
jp
lock
fmuls
cmp
inc
mov
or
movsb
cmp
cli
mov
ss
and
ss
lds
pop
negb
jmp
adc
ja
test
dec
lcall
scas
call
push
into
ficompl
xorb
add
ret
push
jo
add
cli
xchg
fwait
aad
lahf
cld
inc
ljmp
xchg
in
sbb
call
add
mov
xchg
mov
lods
or
ljmp
ss
bound
mov
mov
popf
lods
pop
insl
imul
les
out
mov
rcrb
ljmp
popf
pop
outsb
mov
cltd
movsb
movsl
mov
cltd
sbb
out
icebp
or
add
fdivr
aas
icebp
hlt
jge
mov
mov
ret
adc
loope
mov
sbb
imul
add
sub
or
push
xchg
test
ss
enter
xchg
push
fcoml
jge
mov
imul
mov
mov
push
test
mov
mov
ljmp
lea
inc
dec
in
test
stc
pop
icebp
or
mov
xor
mov
jnp
or
mov
call
sahf
shrl
aas
sahf
leave
pusha
rep
sahf
sbb
shrd
jae
fstpl
out
adc
mov
in
adc
mov
mov
jl
jb
xor
enter
mov
je
pushf
mov
sub
xlat
inc
mov
rorl
lds
xchg
sbb
test
add
mov
setne
mov
mov
pop
sub
test
pop
mov
popf
cltd
mov
lods
clc
mov
sbb
bts
xchg
popf
sbb
shlb
lods
stos
push
dec
pcmpgtw
in
bt
lock
lea
xchg
lea
inc
mov
shlb
mov
cmp
ljmp
pop
mov
jmp
outsl
lret
ds
or
test
jg
in
add
push
sbb
daa
jg
mov
scas
out
fwait
push
xchg
fs
clc
imul
mov
xchg
push
xchg
sub
popa
add
imull
fmuls
cmp
outsl
and
addb
pop
notl
mov
mov
nop
and
fcomp
mov
dec
fldenv
insl
add
testb
jmp
add
push
xor
jmp
lods
xchg
fnstsw
not
or
cmc
jp
jnp
movsb
cmpsb
out
sub
xchg
or
scas
mov
call
movsb
and
jne
ja
pop
hlt
xlat
add
aad
dec
lea
and
pop
inc
jecxz
enter
sub
mov
lahf
xor
lds
das
adc
lcall
insb
pop
cmp
sbbb
sbb
dec
adc
mov
jne
aaa
cmpsl
test
add
mov
xor
daa
or
jo
dec
fldcw
adc
jle
pop
bound
in
pop
je
xchg
ret
xchg
push
inc
cmp
aam
mov
test
push
and
jle
mov
push
and
int
mov
call
xor
imul
test
loop
inc
popf
jmp
scas
setnp
add
xor
sbb
cwtl
inc
aas
movsl
mov
aaa
ja
imul
pop
test
add
clc
addr16
mov
lahf
and
scas
out
mov
cmpsl
insl
fstps
add
ret
pushf
das
jnp
lea
mov
push
lock
push
inc
inc
movsb
mov
dec
outsl
hlt
push
mov
test
pusha
insb
inc
sbb
mov
aad
xlat
mov
outsl
call
pop
sbb
insl
pop
cmp
rclb
addr16
sub
xchg
adc
enter
repnz
popa
cmp
add
cld
aaa
cmp
add
or
out
xchg
mov
inc
xchg
jmp
mov
pushf
sarb
fimuls
out
jg
add
ja
lea
icebp
pop
sahf
insl
mov
sbb
cmp
and
and
jl
imul
cld
sbb
lea
fwait
popa
inc
inc
xchg
inc
fidivl
and
add
dec
push
aas
adc
les
inc
movsb
mov
inc
loopne
testl
fcmove
rcrl
lahf
sarl
lods
insl
insl
xor
mov
out
add
es
sbb
add
and
push
outsl
sti
inc
ret
lea
sbb
cmp
mov
jl
xlat
fcoms
rolb
sbb
mov
xchg
inc
push
sbb
inc
push
add
pop
leave
add
mov
jb
xchg
fadds
ja
lcall
bound
pop
xchg
xchg
lahf
out
xchg
xchg
add
pop
ud1
iret
insl
das
faddp
push
push
movb
xchg
andb
out
inc
inc
lcall
jo
movsl
push
mov
outsl
stc
and
fnstcw
inc
mov
test
sti
inc
int
xor
out
sti
push
push
pusha
lds
inc
mov
jge
in
sbb
stos
inc
out
inc
stos
xor
pop
hlt
shll
ret
fmuls
je
jp
pushf
out
lock
dec
push
aas
sbb
pop
jae
imul
add
clc
aam
into
adc
loopne
and
test
xor
pop
into
push
jg
xchg
jge
ret
cmp
sub
adc
arpl
cli
pop
inc
dec
xor
das
jmp
dec
jo
aad
ss
out
mov
jecxz
cmp
jmp
faddl
adc
xchg
adc
push
sahf
jecxz,pn
pop
mov
movsb
movsl
push
das
negb
cld
mov
xor
dec
dec
push
in
sti
inc
cmp
sti
xchg
enter
test
inc
cmp
js
mov
mov
add
movsb
mov
xor
add
add
adc
pop
jmp
mov
sub
xor
push
cwtl
mov
jl
dec
mov
or
pop
into
and
push
aaa
insl
sti
sbb
adc
sub
and
cmpl
dec
filds
sub
call
sti
mov
lea
add
std
xor
sarl
mov
adc
leave
repnz
xchg
shr
dec
dec
jmp
or
in
cltd
sub
ss
arpl
loopne
insl
add
addr16
or
enter
push
mov
out
mov
or
mov
aas
insb
popl
add
ja
push
mov
sub
xchg
repz
mov
adc
stos
imul
or
inc
xchg
scas
add
andb
nop
dec
outsl
push
cmp
out
mov
testb
mov
xchg
pop
lret
sti
xchg
in
and
jmp
in
cmp
test
shl
mov
popa
xor
mov
lret
jp
jb
vmovq
inc
in
push
scas
pop
cmp
outsb
outsl
sub
insb
out
je
mov
inc
cmc
test
sbb
mov
dec
mov
mov
lods
test
mov
or
in
fmuls
fisubrs
lods
push
and
cmpl
and
and
loopne
outsb
cmp
out
or
mov
das
push
jmp
and
adc
ss
and
inc
lods
loop
lahf
dec
push
in
mov
fdivl
mov
push
or
adc
sub
arpl
into
mov
sbb
out
lcall
jbe
push
loop
mov
mov
cmc
xor
in
push
mov
sub
js
pop
out
in
or
cmpsb
es
mov
movsb
push
pop
scas
push
and
imul
test
gs
aam
jmp
bound
inc
jbe
sub
sti
jg
dec
cwtl
xchg
push
jae
int3
and
pop
xchg
or
mov
clc
mov
sub
push
push
or
mov
push
stos
jno
dec
loop
pop
push
add
adc
test
sub
add
sbb
push
insl
fdivrs
cli
lock
in
jno
test
mov
das
pop
mov
fs
cmpsl
push
mov
lock
jns
mov
jl
stos
xor
cmp
arpl
add
pop
fsubrs
cmp
dec
int3
add
gs
jmp
sbb
insl
cmp
and
xchg
das
push
xchg
mov
xor
pop
mov
loopne
stos
fidivrl
cmpsl
jecxz
xchg
inc
scas
les
and
xchg
ljmp
xchg
gs
leave
jmp
aam
ret
mov
adc
mov
xchg
jmp
jmp
push
stos
sbb
push
jb
push
lret
movsl
ror
movsb
jle
mov
scas
jp
fisubs
test
cmp
out
test
outsl
jbe
pop
loope
es
rclb
lods
aad
adc
scas
shlb
inc
mov
xor
ds
sar
shll
call
andb
ror
add
xor
add
aad
popf
push
ljmp
pop
cmp
xchg
pop
inc
mov
mov
ret
movsb
sarb
push
sub
movsb
push
sub
mov
subl
shl
push
test
gs
nop
inc
mov
sub
aam
xchg
sub
push
jle
and
add
sbb
or
xor
xchg
and
dec
enter
punpckhwd
jl
mov
movsb
and
out
mov
fdivrl
jo
or
test
cmp
mov
fcompl
dec
mov
or
shrl
ljmp
sbb
push
jg
clc
add
imull
imul
into
xchg
cltd
mov
inc
mov
mov
and
insb
cmp
mov
es
mov
mov
lods
std
inc
mov
inc
call
sub
jns
fs
cltd
outsl
data16
into
out
daa
daa
fmul
call
add
add
add
pop
add
mov
sahf
ret
mov
out
shrb
add
dec
xchg
push
stos
dec
jle
cltd
idiv
push
mov
inc
and
test
fcompl
sub
xor
inc
pop
inc
test
bound
inc
sbb
aad
inc
and
adc
out
pop
aad
adc
dec
mov
add
or
sub
sub
and
cmp
lea
push
pop
and
jmp
lods
and
loope
jbe
lahf
or
lds
pop
test
xchg
adc
cmp
push
mov
or
shl
push
outsb
adc
sbb
and
cmp
subl
push
cmpsl
xchg
fmuls
xor
hlt
xchg
out
xlat
fidivl
adc
xor
in
xlat
jno
jge
or
ret
xchg
xchg
and
out
fdivrs
push
fs
inc
ljmp
imul
fwait
int
dec
mov
add
adc
xchg
lcall
mov
decb
and
mov
mov
xchg
xor
in
ds
bound
pop
das
add
cmp
xchg
sub
inc
and
xchg
mov
mov
pop
push
jg
cld
sbb
mov
lds
mov
jp
jns
push
mov
sti
iret
cmp
fldcw
fisttpll
outsb
cmp
mov
mov
inc
inc
mov
aad
and
xchg
lods
pop
scas
mov
aad
add
dec
es
pop
add
cmp
push
sbb
and
movsl
push
adc
push
ja
cmpsb
or
mov
fcom
scas
mov
lahf
iret
mov
adc
xchg
and
repz
adc
cmp
leave
std
jo
pop
dec
push
mov
mov
test
push
fwait
test
adc
mov
mov
fadds
and
nop
adc
adc
xor
jnp
push
push
loop
lds
cmpsb
scas
lods
ljmp
aad
xor
popa
out
popa
scas
cmp
adc
mov
lods
and
ljmp
sahf
mov
sbb
and
cmp
aas
and
sbb
dec
sub
aad
sahf
and
jp
lods
inc
scas
addl
bound
pop
lahf
add
shrb
pop
push
leave
push
mov
cmp
xlat
mov
aad
cmc
and
int
lods
ljmp
and
jl
xlat
and
mov
movsb
push
sub
lret
clc
push
dec
mov
std
outsb
mov
push
out
xchg
add
or
ja
mov
mov
mov
lahf
adc
xlat
inc
and
jle
cmc
mov
subb
and
jle
rclb
sahf
stos
mov
mov
xlat
mov
mov
adc
xlat
pusha
and
adc
test
pop
negb
and
cmp
pop
and
in
dec
lods
insl
xor
jmp
and
dec
lods
insl
scas
xchg
inc
lods
out
aad
sbb
dec
jp
jne
inc
mov
cmc
dec
sbb
and
jns
ljmp
or
jb
lahf
push
lods
cmp
es
xchg
bound
dec
jmp
pop
pop
add
mov
push
dec
add
mov
xor
xchg
push
rcll
mov
pop
fadd
lahf
xchg
mov
mov
adc
xlat
sub
xor
out
add
adc
sbb
and
mov
comiss
adc
mov
jb
daa
lds
mov
dec
iret
xor
push
je
cmpsb
xlat
and
mov
adc
mov
mov
dec
adc
and
aam
addr16
mov
loop
jb
shlb
lds
mov
mov
notl
nop
jmp
in
in
shrl
ja
adc
sbb
and
cmp
add
push
lcall
fs
or
aad
xor
je
lods
mov
out
insb
ds
repz
outsl
adc
aas
sub
push
sbb
and
cmp
push
sbb
and
lods
mov
out
lret
mov
or
sbb
test
mov
ror
adc
xor
push
je
add
icebp
repz
push
fsts
test
popf
inc
xchg
sbb
and
mov
cmc
das
icebp
push
adc
inc
aas
push
lds
ds
iret
pop
adc
sbb
lcall
push
and
pop
mov
and
scas
push
sub
sbb
lods
lret
fs
inc
pop
sub
aad
sbb
daa
or
aad
je
cmp
scas
aad
mov
dec
sub
lods
bound
xchg
outsb
inc
test
xor
jo
insl
and
mov
in
ret
fs
aad
lods
and
repz
lods
xchg
scas
dec
inc
mov
mov
jmp
pop
dec
add
fucomp
xchg
pop
ljmp
jns
mov
pop
mov
add
in
jae
push
sbb
adc
xchg
fwait
jne
cwtl
adc
fdiv
push
xlat
mov
inc
repz
add
adc
nop
test
fistpll
mov
or
lods
iret
fs
aad
dec
das
push
cmpsb
jl
into
push
or
jecxz
mov
or
xlat
sti
dec
mov
paddusw
pushl
das
into
add
fimuls
dec
fimuls
sbb
roll
add
in
push
ret
out
aas
xor
pop
sbb
clc
sub
jae
ficoms
aam
sub
shlb
mov
je
ljmp
lret
in
icebp
lret
adc
std
in
add
push
add
negl
push
in
pop
mov
dec
nop
mov
sub
cmp
sti
fucomi
fdivrs
out
cmp
lods
xor
gs
sbb
loopne
in
xchg
aaa
add
cmp
add
loope
insl
jno
inc
sbb
cwtl
lods
shrb
mov
sub
rcr
lea
mov
pop
pop
push
mov
xchg
repz
mov
leave
adc
clc
sub
in
or
sub
cmp
xchg
dec
cmp
lcall
jle
cmpsl
imul
inc
push
hlt
xchg
adc
call
inc
jle
stos
sbb
cmp
jo
cmp
mov
lods
jbe
gs
test
and
push
fstp
mov
adc
fcoms
add
xchg
mov
add
cmpsl
ret
das
inc
aas
sahf
rol
mov
rol
or
xchg
stc
mov
push
xchg
pushf
imul
adcb
in
push
push
mov
out
das
sub
sbb
cli
dec
clc
test
cs
fistps
mov
pop
inc
cld
fwait
mov
loope
jmp
leave
ret
inc
inc
inc
cmp
pop
add
or
push
add
add
cli
cmpsb
mov
out
stc
or
cwtl
pop
loop
push
int3
jg
add
std
jne
in
jae
mov
movsb
jecxz
pop
xchg
mov
or
mov
fcmovnb
add
push
dec
xchg
jg
mov
imul
cld
out
adc
rolb
sub
pop
cmc
pusha
lock
ret
dec
cmp
inc
shll
int3
out
cs
sub
jg
cmp
jne
push
fnstenv
push
pusha
out
xchg
mov
icebp
insl
fsts
cld
mov
add
aad
test
aas
jbe
mov
test
sti
adc
cwtl
out
rorl
inc
mov
ja
leave
adc
imul
outsl
loopne
mov
fucomi
mov
packssdw
addb
pop
add
mov
in
mov
jb
sub
jb
jne
and
push
or
jg
sbb
sbb
cmpsb
jne
dec
or
data16
cmp
push
mov
or
xlat
sahf
adcb
dec
fwait
in
lcall
in
adc
mov
dec
shlb
cmpsb
inc
test
pusha
or
push
ja
cld
mov
lock
adc
adc
sbb
icebp
mov
or
cltd
shld
notl
pop
mov
inc
cmc
mov
mov
cmp
iret
push
pusha
sub
dec
in
sbb
or
notl
lcall
jge
lret
jne
stc
xor
inc
sbb
aas
mov
fdivrl
lret
ja
ss
cmc
ja
jmp
sub
andb
lock
mov
les
not
mov
mov
mov
js
or
fidivl
and
movsb
sub
ja
adc
ds
or
push
adc
jl
jle
sahf
test
jb
sub
sbb
add
cs
adc
lahf
loop
sub
aad
mov
lock
pushf
lret
loope
test
xchg
add
aam
hlt
add
es
lret
push
or
test
push
jns
test
test
outsl
lahf
lock
dec
aam
and
aam
mov
sahf
fs
dec
jecxz
xchg
popa
fsubl
dec
dec
xor
jge
in
inc
loopne
nop
sti
xlat
sbb
sub
movsl
ret
enter
adcl
cld
pushf
xchg
cmpsb
pop
lret
inc
out
je
push
call
cmc
jno
cmp
repz
pop
idivl
dec
push
mov
fistpl
lret
mov
cli
xchg
inc
jbe
int3
push
sti
mov
xor
inc
adc
adcb
add
or
jmp
insl
cltd
enter
iret
mov
lea
mov
call
in
lock
rorb
xchg
add
imul
jecxz
pop
adc
jmp
out
mov
adcb
in
pop
fistpll
add
xchg
insl
iret
xchg
push
fwait
inc
mov
jle
xchg
dec
xor
mov
mov
mov
push
sub
jno
jecxz
xor
mov
sub
jnp
shlb
aaa
add
loop
xor
dec
ss
leave
test
ficompl
inc
xchg
jbe
push
arpl
lret
insl
add
dec
adc
or
and
repz
in
push
sbb
and
cmp
js
mov
fs
inc
push
sub
aad
les
stc
jo
js
ret
out
aad
xchg
bound
pop
outsl
add
fcoms
dec
movsl
and
pop
cmpsb
leave
cld
pop
mov
jle
jge
mov
mov
int3
mov
lds
xchg
cmp
xchg
mov
fmul
stc
adc
gs
jns
repz
test
or
mov
cwtl
stos
push
lret
inc
repnz
aam
push
xchg
lods
or
mov
fcmovne
cld
dec
stc
cmpl
mov
dec
sahf
and
push
mov
xor
into
push
sbb
mov
mov
rol
xchg
lahf
xlat
divl
adc
xlat
lret
repz
clc
adc
push
fmul
or
shl
loope
cltd
xchg
or
pop
mov
mov
stos
pushf
lds
mov
movsl
iret
adc
xlat
fwait
and
jg
add
adc
pop
rcrb
cmp
iret
jecxz
jnp
cmpsl
outsl
fsubrl
test
aad
xchg
fcos
sbbb
pop
iret
scas
pop
jns
jmp
dec
add
cmpsb
jne
pop
test
mov
lret
outsb
sbb
aad
sbb
daa
lods
ja
adc
xor
cmp
imul
jmp
pop
mov
xchg
add
sbb
and
jns
xchg
mov
cmp
jno
or
adc
adc
and
sub
mov
aaa
subb
fisubl
inc
sub
aad
pop
and
lods
push
scas
mov
xchg
out
aad
adc
dec
call
add
cmc
xchg
ljmp
icebp
pop
or
ljmp
mov
sbb
mov
insl
mov
dec
daa
sub
mov
mov
bound
dec
inc
pusha
insl
movl
pop
and
push
mov
lods
fisubs
mov
test
lods
jae
iret
add
popf
rolb
aam
cmp
dec
sahf
and
pop
ja
sbb
int3
add
or
lcall
fldcw
inc
aad
mov
jmp
pop
sbb
lds
sti
xchg
push
add
mov
xor
dec
mov
in
xchg
push
pop
xchg
cmp
scas
mov
mov
cmp
jmp
cld
xlat
mov
or
dec
sub
xor
test
cmp
leave
push
mov
inc
xor
sbb
mov
dec
mov
kmovb
lret
iret
adc
jmp
xlat
andb
repz
add
adc
fwait
aas
outsl
sbb
jge
cmp
xor
mov
jg
cmp
scas
jo
or
cwtl
aad
scas
bound
inc
add
fsubs
xchg
insb
cli
test
mov
push
add
testl
lahf
pop
and
jne
lods
imul
bound
dec
mov
add
jae
xchg
cmp
mov
and
popf
leave
mov
mov
out
dec
push
and
mov
cmc
mov
mov
xlat
xor
adc
cwtl
push
out
xlat
cli
and
repz
push
mov
add
into
and
and
xchg
push
addr16
and
in
lods
lret
roll
lahf
aad
adc
mov
scas
popl
out
aam
xor
loope
loop
mov
sbb
and
jae
cmp
push
inc
and
aad
lods
fs
inc
and
aad
repz
andb
adc
mov
and
repz
adc
xor
testb
push
outsb
xchg
jg
push
mov
mov
stc
mov
out
aad
push
call
dec
add
adc
jle
mov
sub
orl
xchg
xchg
sbb
mov
sbb
xor
or
test
adc
adc
xchg
mov
test
negl
leave
lock
mov
cmp
adc
jg
in
or
ljmp
xor
xorl
pop
movsb
add
nop
test
jae
mov
mov
shlb
push
cmp
js
mov
lds
xchg
pop
xlat
xchg
mov
push
iret
cmp
ja
jge
pop
xlat
aad
sahf
xrelease
ficoml
test
sahf
mov
mov
insl
shlb
push
adc
mov
testb
dec
xlat
adc
dec
inc
sbbb
and
repz
adc
sarl
mov
xor
jmp
scas
rcl
lods
pop
mov
aam
daa
xchg
sbb
fnsave
adc
push
shlb
and
bound
mov
sbb
and
cmp
push
xchg
jl
lods
mov
decb
inc
xor
inc
loopne
fdivs
in
push
cmpsb
stos
ret
mov
fmuls
scas
push
adc
nop
ret
and
sbb
scas
test
aad
add
adc
imul
cmp
sbb
and
add
xchg
inc
sub
sbb
icebp
xchg
xchg
xlat
insb
mov
dec
iret
cwtl
adc
faddl
cltd
repz
jbe
mov
sub
clc
je
aam
testl
push
jge
jo
jns
pop
and
arpl
shrb
fstl
push
js
xchg
cltd
outsl
popa
fcoml
dec
jno
add
test
fwait
lret
add
lahf
xchg
adc
push
int3
in
outsb
mov
fistpl
hlt
jle
xchg
dec
adc
stc
aad
aam
push
mov
mov
and
lock
les
push
or
sbbl
aaa
adc
mov
jle
xchg
mov
and
and
xchg
cli
cmp
notb
rcll
jo
jge
inc
jmp
mov
scas
dec
pop
lods
add
and
adc
inc
sbb
and
adc
add
jl
and
insl
xor
mov
xor
mov
push
or
inc
and
mov
xor
shlb
hlt
cltd
sub
shlb
add
cli
dec
mov
or
rclb
inc
mov
pop
shlb
je
test
cmp
push
inc
dec
lock
not
arpl
dec
mov
int3
pop
and
cmp
movsb
mov
xor
aad
add
imul
jne
adc
push
jecxz
rclb
jb
lods
lds
cmpb
push
movsl
lahf
ss
mov
lods
xor
je
sar
int3
xor
insb
jg
jge
iret
mov
aam
or
pop
pop
mov
mov
mov
pop
in
in
push
mov
std
and
push
ss
sahf
cmp
pop
jno
adc
pushl
inc
inc
popa
stc
lds
xchg
fcom
data16
popa
mov
inc
jbe
adc
push
popf
andb
and
adcb
sub
insb
mov
jge
jmp
cltd
adc
cltd
andb
push
sbb
dec
mov
insb
mov
add
in
and
add
fsubrs
insb
xchg
sub
pushf
repnz
adc
pop
adc
cwtl
sahf
push
lds
mov
dec
adc
and
adc
loopne
aad
xchg
adc
dec
push
inc
jmp
and
int
sbb
ficomps
mov
adc
and
xchg
adc
dec
push
add
xor
imul
data16
jno
imul
lea
inc
cmpsl
dec
adc
negl
pop
push
mov
push
jo
and
cltd
push
lret
and
call
push
jge
ljmp
ds
mov
mov
fldl
xor
adc
into
adc
xor
insb
mov
adc
stos
repz
mov
arpl
or
and
insb
push
mov
fildll
mov
lcall
lds
push
inc
imul
ss
sbbl
or
mov
sub
push
xor
popa
sbb
inc
das
push
sub
movsl
dec
cwtl
in
mov
adc
cmc
je
add
adc
cwtl
adc
mov
mov
mov
adc
push
push
dec
fmulp
into
sub
movsb
xchg
movsb
sub
xchg
adc
subb
les
aad
rol
mov
adc
popl
add
cwtl
sub
lahf
add
fucom
lods
pop
mov
xchg
mov
push
rcrl
icebp
jns
cmc
lods
repz
pop
jmp
cltd
mov
xchg
or
push
dec
repz
jns
scas
mov
js
das
mov
jae
int
cmpsl
loop
add
int
mov
inc
mov
aam
cmp
insb
test
add
dec
inc
out
mov
sti
xor
lcall
loopne
std
push
pop
test
loop
sub
add
pop
mov
add
sub
inc
or
inc
inc
push
cmp
add
scas
pop
es
pop
jae
adc
xchg
inc
ljmp
adc
cmpsl
shl
std
xchg
sbb
adc
push
outsl
cltd
outsl
shrb
push
pop
mov
mov
ja
xor
xor
cs
or
mov
push
pop
inc
movsb
mov
aas
add
popa
call
jp
test
fwait
rorb
pushf
sti
push
ljmp
js
test
das
sub
out
ss
inc
xor
shlb
dec
clc
pop
cmpsb
cmpsb
mov
test
xchg
mov
mov
sbb
pop
rclb
aaa
mov
mov
popf
pop
mov
mov
xchg
andl
jb
xchg
enter
sbb
jl
int3
pop
sbb
push
addb
jg
or
mov
lea
xor
inc
pop
hlt
mov
cmp
xor
loop
push
adc
or
cmpsl
and
inc
cmpsl
and
pop
pop
adc
in
cltd
mov
add
insl
clc
rcll
imull
inc
lods
imul
mov
test
mov
cltd
clc
enter
leave
jmp
sti
jle
add
int
rorb
pop
fisttpl
jge
mov
adc
and
or
out
mov
push
jmp
mov
pushf
pop
iret
mov
xor
pop
jo
ret
mov
push
sti
pop
ret
or
inc
cmpsl
fisttpll
fadds
gs
xor
push
mov
sub
fmul
jno
jg
jle
adc
dec
rclb
xor
into
mov
and
dec
pop
outsl
fldcw
pop
bound
pop
mov
and
xchg
inc
addl
cli
push
pop
add
add
xchg
xor
outsb
add
loope
fst
sub
cmpsb
mov
push
pushf
loop
push
mov
imul
gs
add
sbb
cmp
jle
add
sti
jae
or
mov
inc
jnp
outsb
stc
mov
add
rcrl
add
cmp
xchg
dec
dec
pop
fsubl
hlt
inc
fisubl
xor
outsl
jo
lds
call
adc
lock
ljmp
inc
dec
lods
dec
ret
add
ljmp
mov
shll
inc
cmpsl
sbb
mov
rolb
ret
xor
and
adc
out
cs
jo
cs
jae
xchg
pop
sub
xchg
jbe
mov
sahf
andb
xchg
pop
clc
mov
bound
test
mov
pop
mov
sti
inc
insb
ficomps
pop
aas
scas
addb
outsb
sub
roll
cmp
fmul
mov
sarl
jge
lea
shll
lea
mov
dec
sbb
dec
inc
sub
lcall
xor
call
sub
jbe
cmp
mov
int3
repnz
arpl
sbb
iret
loope
mov
jns
push
push
jo
jge
adc
xor
arpl
xor
insl
sti
gs
jge
sbb
add
sub
push
sub
mov
adc
mov
jbe
xor
in
dec
mov
adc
jmp
xor
pusha
pop
push
xchg
mov
push
scas
jecxz
enter
mull
icebp
fmull
shrb
dec
sarb
push
insb
adc
les
fwait
sbb
sahf
xchg
fistpl
or
xor
adc
cmpl
xor
jb
add
add
and
jge
mov
inc
lret
xor
push
cltd
pusha
stos
sub
xor
es
push
dec
and
stc
xorb
xchg
rcrl
aaa
xchg
mov
cli
das
push
dec
and
lcall
add
pop
dec
jmp
outsl
push
push
mov
push
std
insb
xlat
cmp
pop
js
jo
in
je
in
and
push
sub
lret
lock
adc
mov
jb
push
in
popa
mov
jne
sub
movsl
lahf
loopne
and
rcrb
add
xor
inc
fildll
jo
outsb
lds
imul
push
pop
loope
and
mov
je
mov
push
add
hlt
or
jp
lods
jg
adc
adc
mov
sub
hlt
stc
cmp
xchg
sub
adc
add
fwait
sub
mov
aaa
mov
dec
ljmp
js
scas
cmp
fiadds
inc
in
sub
or
int3
fsts
xor
pop
dec
iret
dec
cs
fistl
mov
and
sbb
mov
cmp
cmp
test
sti
inc
mov
jo
pushf
or
cmpsl
sub
js
imul
pop
cmc
xchg
addr16
iret
das
and
arpl
push
xor
xor
roll
lcall
add
or
pop
xor
fs
jg
and
jne,pn
sahf
sbb
aam
imul
adc
inc
dec
sar
adc
inc
cmp
popa
inc
mov
pop
pop
shll
and
mov
or
dec
add
cmc
fmulp
or
xchg
sub
xchg
jae
dec
sbbl
dec
adc
jle
std
dec
lock
xchg
adc
lcall
icebp
mov
push
xor
shl
ds
mov
int3
clc
sbb
in
loop
mov
xchg
call
cmp
add
jl
sub
in
push
xor
lahf
addr16
mov
pop
insb
leave
movsb
pushw
mov
sub
dec
sbb
or
jb
pop
dec
and
sub
cmp
sarb
addr16
pop
push
fdiv
dec
mov
or
pop
ret
gs
es
mov
sub
sahf
dec
mov
stc
daa
sbb
sbb
cltd
cmpsl
push
in
add
mov
imul
xor
fistpll
mov
push
pop
xchg
jp
hlt
out
inc
xchg
cltd
rolb
out
test
push
mov
enter
mov
pop
adc
lahf
ja
inc
xor
mov
shlb
jo
xlat
loope
popf
int3
pop
data16
into
or
push
shrb
cmp
mov
cltd
xchg
fadds
mov
ja
and
or
cmp
cmpl
outsb
mov
lea
dec
jecxz
cmp
xchg
insb
push
xchg
jle
inc
push
arpl
int3
int3
jns
pop
cmp
sub
add
inc
sub
mov
jmp
jae
sti
push
and
inc
sbb
hlt
pop
jne
fisubs
lods
sahf
inc
inc
mov
mov
push
sti
sub
sbb
cmp
sbb
jno
fcompp
aaa
xor
jo
pop
mov
aam
lcall
lods
mov
mov
inc
or
push
out
jp
loop
pop
subl
mov
or
add
xor
insl
aad
pop
stc
clc
cmp
leave
mov
or
mov
pop
pop
fcomi
lods
adc
adc
adc
cltd
cwtl
xchg
sub
lods
adc
inc
mov
daa
cs
jbe
ds
mov
fistps
pop
lock
or
adc
stos
dec
push
xor
cli
addr16
xchg
leave
mov
inc
add
mov
inc
add
pop
sub
out
fs
jnp
adc
ss
and
enter
or
arpl
push
mulb
ficompl
or
dec
adc
mov
mov
cmp
fistps
jno
adc
fs
shr
idivb
jns
loope
cs
cmp
subb
and
push
pop
pop
stos
out
xchg
jl
or
stos
in
ljmp
mov
jle
xor
cli
pop
sahf
ret
pop
mov
mov
sub
sub
ja
mov
rclb
pop
fdivrs
jnp
insb
sub
leave
add
inc
lret
scas
mov
xor
push
mov
adc
adc
push
rclb
dec
cmp
adc
xchg
pop
and
xor
sub
mov
jo
std
inc
mov
into
push
adc
fsubrs
and
adc
movsl
jl
push
movsb
and
lds
cli
jecxz
pusha
dec
or
xchg
xchg
fidivl
fs
repnz
jb
mull
and
ret
mov
outsb
movb
xchg
fwait
mov
dec
push
sub
rol
dec
push
pop
xor
inc
imul
add
push
inc
stos
lret
sbb
xchg
pop
add
or
mov
sbb
mov
jae
sbb
callw
pop
or
push
std
cmp
les
jne
outsb
std
test
sbb
repnz
dec
jno
in
dec
es
jmp
adc
pop
ret
mov
sbb
mov
leave
es
mov
sbb
mull
mov
subb
cmpsl
lret
pop
movsl
data16
fsubl
xor
jae
rcl
push
mov
cmp
icebp
cld
sbb
pusha
sub
je
test
test
dec
je
cmpb
lods
sbb
inc
sbb
adc
push
pop
adc
out
mov
or
mov
or
and
mov
jp
pusha
js
insl
test
maskmovq
idivl
cmp
push
hlt
das
fstps
pop
push
mov
cltd
mov
push
mov
dec
aam
cmpsl
or
dec
ret
pop
xchg
pop
add
jae
hlt
lods
mov
pop
jo
lds
lea
add
cmp
pop
mov
or
mov
xchg
sub
hlt
sub
outsb
out
or
lea
inc
sbbl
dec
pop
mov
mov
addr16
or
dec
sub
stc
add
subl
inc
hlt
fsts
xchg
pop
push
and
hlt
mov
test
pop
xor
push
in
push
sbbl
add
add
inc
sti
clc
cmp
and
leave
jns
mov
cmp
ret
aam
dec
aad
imul
adc
push
push
dec
dec
xchg
push
pop
jmp
pop
cwtl
ds
sbbl
add
xchg
xchg
faddl
pop
inc
dec
int
mov
sbb
ficompl
mov
les
shrl
stos
push
es
mov
push
dec
xchg
into
dec
mov
inc
cmp
jb
and
sub
roll
dec
push
out
mov
pop
shlb
add
jmp
xlat
lods
push
sbb
imul
dec
add
test
push
sbb
js
pop
push
adc
add
add
movsl
cwtl
sub
inc
push
adc
jbe
dec
dec
dec
popa
sbb
inc
mov
pop
jecxz
push
scas
stc
xchg
xchg
je
pop
sub
sub
ret
movsl
and
inc
pop
dec
cs
arpl
cmp
pop
rolb
dec
fwait
push
hlt
sbb
inc
pop
or
sub
jp,pt
cmp
jb
xchg
sahf
push
inc
cmp
pop
pop
and
jmp
or
std
jmp
xor
lods
loop
addb
pop
fldl
sbb
mov
pop
mov
adc
dec
push
push
xor
add
in
loop
push
call
fmul
add
cmp
mov
mov
clc
sahf
dec
inc
idiv
inc
sbb
mov
pop
pop
lock
inc
cltd
popl
adc
adc
lds
lahf
xchg
mov
adc
dec
hlt
pop
cmpsb
in
xchg
add
js
add
mov
cmp
mov
cmovne
stos
in
xor
bound
js
push
roll
loopne
pop
sub
ss
adc
sbb
xchg
pop
aas
add
dec
cs
pop
dec
inc
xchg
xchg
push
lods
imul
pushf
rorl
andl
das
stc
pop
dec
push
jg
push
ret
dec
outsb
adc
enter
add
mov
mov
int3
xchg
mov
dec
aas
cli
mov
std
imul
vsqrtsd
out
enter
xor
and
andb
leave
or
inc
sub
mov
cmp
sub
gs
push
sbb
push
pop
daa
aas
dec
add
and
scas
mov
or
mov
xor
inc
xor
sub
inc
cmp
pushf
inc
push
add
push
add
jnp
or
iret
roll
or
lret
rol
xchg
inc
aad
test
add
imul
cmpsb
cmc
xchg
inc
stos
dec
inc
lahf
lock
rclb
cs
or
leave
xchg
pop
sbb
add
sbb
cld
out
cwtl
imul
nop
addl
adc
add
fs
out
cltd
cmp
pop
mov
or
adc
imul
sbb
jecxz
jge
mov
scas
mov
cmp
pop
clc
aaa
add
dec
dec
pop
hlt
adc
mov
mov
dec
adc
std
cmp
test
inc
stos
and
cmp
in
or
scas
jno
mov
jns
adc
decl
movsb
mov
scas
add
test
lret
sbb
adc
aaa
cli
scas
mov
imul
or
xchg
rcll
filds
mov
jae
mov
add
pop
push
enter
sub
stos
pop
call
out
mov
cmp
or
das
mov
jg
or
mulb
jp
jl
sti
pop
pusha
push
inc
sub
mov
jns
sbb
sub
rcrb
inc
test
das
out
mov
xchg
push
pusha
mov
sarb
dec
fadd
xor
dec
out
popf
push
xlat
and
xchg
ret
or
movsl
stos
call
mov
sub
jns
mov
test
roll
orl
inc
push
rorl
in
xor
pop
xor
cmp
in
testb
pop
jmp
faddp
inc
pusha
in
or
rol
nop
xchg
sub
sbb
push
pop
pop
xchg
les
add
inc
add
icebp
int3
sbb
cmp
cmp
xor
xchg
orl
cmpb
xchg
cmp
test
ret
sub
push
mov
cmpsl
mov
divb
mov
cmc
push
or
daa
or
pop
sbb
pusha
dec
cmp
mov
sbbb
lret
imul
sub
clc
enter
or
sub
jns
xchg
lret
mov
lods
sbb
ljmp
pop
push
mov
imul
add
cs
aaa
dec
imul
ret
cltd
push
xlat
cmpsl
pop
pop
test
outsl
popa
test
and
add
push
int3
shrl
mov
icebp
or
je
pusha
mov
sub
push
mov
xor
popf
add
mov
nop
cwtl
or
fucom
int3
xor
xor
fsubrs
mov
inc
lcall
js
lahf
xor
into
jg
sub
add
in
sub
mov
pop
mov
push
xchg
cmp
jp
fs
sbb
mov
cmp
lret
mov
out
outsb
jno
dec
sbb
mov
je
insl
jg
xchg
inc
pushf
rol
jp
les
mov
lahf
fistpl
pop
xor
repz
add
and
filds
pop
mov
add
sbb
dec
bound
jo
sbb
mov
js
and
push
adc
xor
inc
xor
inc
int3
popf
or
push
adc
out
fisttpl
jge
rorl
push
adc
mov
or
add
push
cmp
sarb
mov
fs
dec
loope
jbe
fstps
dec
push
pop
in
or
adc
cmc
ret
insb
aad
mov
sahf
addl
dec
inc
xchg
adc
ror
xchg
insl
sbb
xchg
aad
adc
sbb
mov
pop
push
pushf
clc
ja
adcb
push
jo
and
sbb
xchg
jae
loopne
push
and
xchg
js
push
mov
pop
repz
dec
sbb
inc
jl
insb
inc
das
cmp
lods
or
mov
or
cmp
dec
leave
stos
pop
sub
adc
cmpsb
bound
stos
inc
jae
jne
out
pusha
gs
xchg
jb
hlt
loop
cmpl
xchg
out
jne
or
cmpsb
repnz
mov
mov
cmp
adc
stos
dec
push
aam
stos
mov
push
pop
sbb
pop
pop
jb
or
adc
inc
mov
mov
ja
pop
add
mov
xchg
push
or
pop
das
sub
dec
out
cmp
jo
outsl
and
mov
pop
jl
lds
sub
shrb
jbe
ret
dec
cmp
leave
out
bound
push
xchg
adc
mov
orl
pop
je
es
sbb
cmp
flds
jge
rorl
inc
or
push
xor
mov
or
js
pop
inc
imul
dec
scas
imul
add
insb
add
inc
add
sti
into
in
push
test
andb
add
xchg
or
push
into
aaa
je
xchg
jmp
int3
push
call
pop
xor
push
cmp
repnz
cmp
vprotq
jnp
xor
ret
add
jecxz
dec
mov
shr
adc
cltd
mov
push
cwtl
gs
mov
sub
xchg
es
adc
mov
stc
in
int3
dec
pop
push
gs
xchg
test
xchg
out
inc
dec
push
add
rcrl
rorb
or
push
jl
addb
cmp
iret
arpl
cmpsl
push
sub
jg
and
pop
mov
test
inc
dec
iret
xchg
jnp
hlt
sub
push
int
push
push
mov
jnp
je
fistpl
add
mov
push
xchg
cli
push
adc
std
js
inc
mov
jb
and
cmp
inc
mov
pop
test
jge
cmp
sbb
std
inc
imul
xchg
popa
add
pop
jg
adc
mov
lock
cmpsb
in
lock
mov
sti
loopne
push
inc
mov
sahf
and
adc
jo
in
pushf
or
inc
lods
stc
ljmp
test
jmp
sub
sahf
cmpsb
sbb
inc
fisubs
pop
inc
mov
xor
gs
inc
sahf
jle
adcb
add
mov
push
pop
sbbl
xor
cwtl
outsb
pushf
rcrb
aam
push
in
fisttpll
fcom
add
xor
jbe
or
jbe
jl,pt
stos
outsb
or
mov
rclb
outsb
in
call
mov
pop
inc
add
xchg
mov
adc
and
fsts
ret
sub
aam
push
or
test
push
dec
dec
cltd
inc
xor
lret
push
sub
sbb
imul
mov
into
or
cmpsb
xor
pop
repnz
ss
mov
jns
jne
sub
mov
lret
lret
pop
ret
push
pop
push
pop
push
mov
lret
push
xor
jb
mov
jle
cmp
jl
push
test
adc
dec
cmp
pop
mov
add
mov
imul
mov
fwait
xchg
lea
insl
jno
fldcw
pusha
out
dec
inc
dec
lcall
mov
dec
pop
push
sbb
dec
fisubs
out
icebp
std
push
pop
jge
hlt
int
and
cmp
inc
test
push
jne
cmpsb
mov
cmp
push
sahf
ds
movsl
lea
adc
push
inc
add
jne
cmpsb
inc
jp
repz
insl
add
rol
sahf
sbb
push
inc
leave
ljmp
cmpsl
and
scas
dec
cmp
movsb
mov
fcmovnb
mov
sub
out
lret
xchg
insb
jne
push
or
dec
xchg
mov
adc
aaa
push
je
xchg
and
call
jl
sub
rolb
sbb
dec
add
ret
test
dec
cli
rcll
call
xchg
ja
adc
xor
test
cld
and
aam
sub
loope
xor
add
add
or
sbb
loope
outsl
bound
bound
jp
and
jmp
rcrb
dec
adc
lods
and
lret
xchg
popa
xchg
cmp
loopne
adc
out
sub
xlat
lea
imul
adc
cmp
push
cli
xchg
or
sbb
loop
jns
stos
cs
fistpl
push
sub
xchg
lea
lcall
lret
mov
sbbb
stc
data16
jmp
ss
add
cltd
push
ficomps
popf
add
push
adc
sub
dec
aaa
dec
mov
xchg
dec
fstp
mov
sbb
lcall
xchg
sub
imul
lret
inc
jbe
push
jmp
mov
xor
leave
push
inc
jb
xchg
adc
mov
jbe
stos
sarl
jecxz
pop
cmp
hlt
dec
or
push
and
daa
lret
sahf
cld
xor
inc
aam
adc
mov
and
imul
cmp
clc
cmpsb
mov
xchg
stos
movsl
adc
fimuls
adc
imul
shrl
mov
inc
dec
push
pop
cltd
aas
sbb
data16
adc
pop
out
stc
sub
or
mov
xchg
push
adc
outsl
jle
leave
pop
pop
in
xchg
cmp
and
repz
shlb
test
cld
bound
xchg
add
pop
fnsave
int
pop
xchg
jns
ljmp
sbb
cmp
addr16
jle
and
pop
push
int3
push
fmuls
pop
ja
and
adc
loopne
jle
repnz
fmull
add
test
or
movsb
xchg
cld
aaa
lret
testb
cmc
cltd
jo
cmp
mov
scas
mov
push
mov
and
or
jae
xchg
shr
xor
mov
shlb
add
xchg
push
xor
inc
xorb
sub
push
jne
das
sbb
addb
in
fidivl
jae
mov
cmp
cmc
cmp
push
mov
mov
and
js
lods
mov
lret
pushf
data16
mov
outsb
scas
lods
jns
gs
add
adcb
sarl
mov
jne
and
jae
xor
das
imul
adc
mov
sub
je
insb
xchg
sbb
jecxz
pushf
mov
in
hlt
data16
cmp
cmpsb
sbb
ret
cmpsb
cwtl
std
or
mov
movsl
lods
les
push
jo
jae
and
cmc
adc
loope
jb
stc
and
inc
mov
in
insb
icebp
dec
enter
adc
push
adcl
mov
insb
call
test
or
in
jns
sub
add
or
mov
push
dec
and
out
jl
aas
sub
adc
cmp
mov
insb
or
add
pop
mov
out
lock
int3
jne
andl
inc
mov
mov
sbb
inc
movsb
js
xchg
leave
adc
dec
mov
adc
test
push
movsl
sub
dec
adc
dec
push
pop
mov
jle
sti
icebp
dec
in
pop
cmp
arpl
and
mov
popf
mov
into
into
xlat
xchg
into
sub
sbb
lret
movsl
pop
mov
inc
cltd
cs
cmpsl
loope
test
adc
inc
adc
aas
fstps
lock
adc
call
fidivs
ret
jb
add
std
cltd
and
into
inc
decb
xchg
inc
arpl
jae
jge
test
imul
jmp
xor
xchg
aam
int3
add
sbb
out
icebp
loope
pop
sbb
sub
testb
add
repz
mov
test
pusha
pop
and
add
xchg
sbb
movsl
mov
fstpl
adc
fdivrl
outsb
movsb
gs
dec
rorb
add
lret
mov
ja
inc
es
or
outsb
sbb
stc
jbe
push
push
mov
enter
inc
test
lret
jg
addr16
xchg
mov
push
in
sti
pusha
ljmp
cs
gs
push
or
mov
popa
mov
and
xchg
adc
nop
es
or
xor
nop
sub
push
arpl
or
pop
pop
rcr
gs
cltd
adc
lahf
xchg
lods
notb
or
je
and
enter
pop
sub
jmp
call
mov
int3
mov
add
dec
push
or
add
clc
inc
bound
and
mov
test
cs
gs
sub
aas
repnz
xchg
orb
hlt
jo
mov
mov
out
jl
mov
mov
push
mov
add
lcall
in
fs
in
push
test
fcmovne
mov
xor
add
ret
cmc
push
lahf
shlb
fld
sub
in
popa
jne
add
inc
ficoml
pop
sub
push
and
inc
adc
cmp
lods
and
fistpll
adcl
lahf
mov
inc
sub
xor
dec
fmuls
sahf
xchg
pop
mov
gs
jae
or
das
sahf
lea
push
inc
mov
push
int3
dec
push
pop
test
adc
in
push
dec
mov
jge
push
sbb
add
inc
sub
mov
lea
lds
inc
push
mov
jbe
adc
std
dec
and
lds
or
push
jae
ret
es
mov
mov
hlt
rcrl
push
pop
in
mov
mov
ret
pop
enter
pop
xchg
std
cmp
popa
outsb
push
movsb
std
mov
mov
cmpsb
xchg
xor
cmpb
jo
xchg
jb
sub
lret
lea
out
cli
mov
sbb
loope
pop
in
test
sbb
push
das
out
pop
push
and
js
mov
sbb
cmp
cwtl
mov
pusha
cmpsl
bound
fldt
xor
imul
jg
push
out
dec
jl
lret
sub
cmpxchg
popf
push
mov
in
pop
fstps
and
jp
aad
sub
setge
mov
inc
lds
je
fiaddl
movsl
xlat
lret
imul
fldcw
daa
gs
outsl
xlat
cmpsb
sbb
lea
push
gs
es
mov
push
clc
andl
cmpsl
ljmp
jbe
ss
xor
push
aad
lea
lods
xlat
or
sub
adc
sub
dec
dec
addl
add
pop
dec
pop
fistl
pop
add
and
mov
add
out
adc
out
push
jl
pushl
jno
hlt
cmp
movsl
orl
xor
mov
repnz
addb
xchg
out
push
cs
jne
ss
adc
adc
or
pushf
into
popa
xchg
jle
imul
adc
add
dec
jb
fdivr
mov
repz
add
rcl
sub
addr16
sub
and
jae
icebp
add
xchg
jae
xor
push
movsb
icebp
lds
mov
sbb
cmp
push
repz
imul
repz
mov
sbb
inc
fidivl
jbe
jb
mov
xor
fadds
add
fcmove
pop
push
xchg
ret
or
stos
scas
jne
out
shl
les
cmp
inc
daa
jb
pop
fs
aas
imul
lods
xchg
pop
sub
out
pop
push
lods
add
fdivl
or
jle
stos
leave
and
nop
sbb
rcrb
std
negl
out
les
xchg
les
lds
or
stc
push
mov
or
pop
dec
inc
out
and
mov
fldt
pop
jecxz
mov
cmp
xor
out
int3
mov
addb
shll
or
loope
shlb
fs
fcomps
push
lods
fs
sub
mov
push
lcall
cmpsl
inc
xchg
push
mov
inc
or
or
aaa
imul
cmp
sub
pop
bound
iret
sbb
int3
in
sub
ds
or
fs
aad
sahf
and
jnp
lods
or
xchg
xchg
iret
lods
push
loop
add
outsb
bound
cli
jbe
lahf
inc
mov
jne
xchg
adc
int
push
fldcw
xchg
ret
xorl
add
adc
outsb
or
jae
test
adc
scas
sbb
xor
stc
pop
jns
push
test
jns,pt
push
push
jne
pop
outsl
xor
sub
pop
mov
add
dec
cvttps2pi
insb
jbe
pop
adc
je
sub
dec
lods
loopne
cmpsl
repnz
add
shrb
push
inc
adc
jb
js
ja
or
jnp
inc
mov
test
pop
push
xchg
fwait
sbb
out
xor
hlt
and
push
dec
mov
pushf
pop
sbb
and
add
pop
pusha
cld
hlt
mov
in
xchg
and
xor
out
nop
mov
sbb
inc
popa
ds
iret
push
fcmovne
scas
xchg
jle
push
xchg
push
lods
cmp
pop
fucomp
push
mov
inc
fcoms
int
and
ds
push
in
push
mov
nop
in
fs
rol
leave
lret
ret
pushf
mov
mov
inc
dec
sti
popa
adc
cmp
dec
adc
push
inc
ds
cmp
pop
sub
inc
sub
sbb
and
pop
lret
mov
push
xor
enter
xor
push
push
xor
or
clc
pop
in
inc
cmp
shl
js
ficompl
add
mov
popa
or
out
fs
pop
jl
jg
inc
or
cmp
or
jo
and
cwtl
sub
adcl
out
dec
decb
scas
cmp
aad
pop
rorl
ljmp
enter
les
dec
movsb
inc
and
cmp
into
pop
cwtl
xor
pop
jmp
push
pusha
lds
inc
das
in
mov
fdivrs
cmpb
xchg
add
clc
pop
and
or
sbb
shll
xor
xlat
adc
in
add
mov
jns
outsb
shll
jns
push
fcmovne
dec
push
call
or
jl
sub
fs
mov
add
cmp
test
sbb
aad
xchg
sbb
cmp
push
lea
lods
dec
cmpl
jb
xchg
xlat
addl
jb
push
cmp
mov
cmpsl
mov
cmp
in
mov
lret
icebp
push
jne
inc
pop
and
add
out
pop
into
movsb
push
out
cwtl
pop
ja
sbbb
call
imul
push
int3
dec
cmp
in
mov
pop
cwtl
adc
cmp
jge
mov
push
cmp
pop
jp
stc
icebp
out
mov
lock
xchg
fisubrl
mov
xor
jmp
jb
sub
cmpsb
std
xor
pop
out
mov
dec
or
ror
mov
xchg
addr16
inc
ret
int3
or
add
cwtl
mov
dec
fildll
and
dec
jle
pusha
and
insb
push
inc
insb
dec
or
popa
jo
mov
xor
push
pop
cmp
mov
dec
xchg
ds
xchg
push
into
out
push
cltd
and
dec
add
fmulp
pop
sub
sub
cmp
gs
pop
stc
loopne
out
jns
loopne
jne
sbbl
pop
and
jmp
cmpsb
inc
and
cmc
mov
call
mov
mov
cwtl
arpl
fisubl
stc
dec
lret
test
sub
cli
in
inc
inc
std
add
outsl
scas
test
add
xchg
jb
cltd
pop
loope
fdivs
test
rcr
lds
int
ret
or
scas
loopne
add
add
xchg
scas
fs
add
arpl
sub
adc
rorl
sbb
push
dec
inc
push
loop
jmp
in
sarb
inc
ret
int
test
jmp
lret
inc
or
mov
push
lock
inc
ret
push
sbbl
ret
add
lock
int3
lea
enter
sbb
ret
pusha
push
mov
iret
hlt
pop
aas
add
xchg
movsb
cmp
adc
mov
mov
js,pt
icebp
les
cmp
push
roll
es
pop
fstps
hlt
mov
stos
mov
push
pushf
push
xor
mov
adc
push
xor
in
rclb
idivl
addb
inc
mov
gs
sub
or
add
push
jo
xchg
push
sub
jp
jp
in
ret
xlat
lret
sub
sbb
sbb
dec
sub
pop
cmpl
sbb
arpl
orb
dec
sti
xchg
out
in
adc
inc
or
arpl
out
jo
mov
or
loopne
add
mov
sub
jnp
scas
push
aaa
inc
and
test
dec
sahf
push
nop
fs
aaa
dec
in
jb
jmp
je
push
push
sbb
mov
push
mov
and
clc
mov
push
push
jge
outsb
dec
dec
sbb
dec
adc
push
js
fstps
cli
mov
push
xor
or
mov
pop
rcrl
cmp
gs
test
xor
into
scas
insb
stos
push
cmpsb
push
push
fsubrp
fmull
xchg
pop
nop
add
addl
test
popa
sbb
mov
add
imulb
xchg
push
js
cs
jmp
mov
rep
cli
fsubr
int3
add
and
inc
loopne
cmp
or
inc
push
mov
push
cmp
jg
cltd
pxor
pushf
add
cmp
jo
lahf
cli
inc
dec
adc
dec
imul
aaa
addb
pop
inc
push
test
lea
push
movsl
sub
mov
mov
xor
or
stos
or
mov
adc
adcl
or
jmp
xchg
mov
mov
out
xor
stos
cli
cwtl
cmpsl
into
sbb
inc
sub
enter
cmc
add
enter
pop
inc
inc
nop
push
pop
out
lcall
and
das
clc
and
jp
xchg
stc
aam
imulb
adc
fstl
mov
repz
jne
insl
enter
insb
mov
outsb
outsb
sahf
push
push
andb
lds
sbb
or
push
outsb
ror
inc
test
push
mov
cli
call
loope
push
mov
iret
hlt
nop
xchg
aad
xchg
out
aas
mov
sub
ljmp
sub
out
xchg
scas
in
fwait
mov
sbb
out
jne
inc
fsubl
or
popf
stos
push
inc
push
dec
fs
int3
and
mov
add
or
or
mov
push
push
int
push
cmpsl
push
mov
dec
negb
push
ficomps
jecxz
sahf
and
sub
roll
sbbl
addr16
xlat
scas
xor
xchg
ficoms
mov
add
ret
fists
fcmovu
adc
outsb
arpl
add
xchg
fs
cmc
inc
pop
sbb
hlt
pop
imul
in
jns
pop
sbb
rolb
xchg
mov
mov
xor
clc
sbb
lahf
mov
xchg
sub
ret
out
lret
ja
jo
in
cld
dec
cmpsl
std
mov
fs
cs
mov
cmp
sbb
test
xor
add
int3
je
sbb
jg
push
pop
int
sbb
inc
es
fwait
pop
and
lock
pop
lretw
aam
je
and
mov
js
popl
dec
idivl
and
sub
add
dec
and
sub
sbb
sbb
jns
dec
je
jne
shrd
fadd
scas
sub
push
addl
out
or
add
jge
lods
jg
addr16
stos
iret
ror
clc
test
out
mov
rcrb
cmp
xchg
cwtl
fiaddl
lcall
cs
sahf
pop
add
push
subl
xchg
jo
xchg
psubsb
xchg
ret
gs
scas
ljmp
or
push
jo
sarl
fildl
cmp
shrl
addb
push
dec
add
jo
jne
mov
cmc
dec
les
imul
aas
push
and
into
orl
dec
xchg
xor
icebp
outsl
andl
lret
adc
mov
sbb
ja,pt
imul
or
insb
push
movl
outsl
adc
xchg
sbb
jp
adc
fistl
mov
test
sub
inc
outsl
cs
add
cwtl
push
push
test
and
jo
je
mov
enter
leave
leave
ja
cli
dec
popf
push
sub
push
or
and
or
add
mov
aas
sub
push
xchg
xlat
cld
sar
mov
popf
int3
divb
sub
adc
rolb
pop
dec
jb
idivb
js
arpl
add
ja
lret
inc
arpl
add
test
outsb
jae
jno
jge
scas
sbbl
popl
add
jbe
nop
mov
sub
xor
pop
call
adc
lods
pop
ss
and
jns
in
sbb
testb
popf
or
sahf
or
inc
fiadds
xor
cmc
divl
clc
sti
xchg
ror
add
cltd
lock
rorl
movb
cs
jp
mov
hlt
cltd
ucomiss
out
popa
mov
lahf
mov
adc
inc
call
out
fldl
gs
les
mov
xor
mov
or
xorb
ret
mov
jmp
scas
or
es
imul
xchg
jne
push
push
sbb
add
adcb
or
dec
jne
popa
push
ds
es
push
adc
dec
daa
pusha
add
mov
pop
outsl
imul
cli
out
enter
sub
dec
rcpps
test
sahf
push
rorl
xor
lret
lahf
mov
mov
adc
js
outsb
jecxz
mov
out
loopne
cli
sti
shll
dec
insb
ds
push
sub
push
adc
outsb
mov
xchg
mov
je
hlt
shr
subl
pusha
movsb
adc
arpl
je
add
xlat
mov
scas
lods
push
inc
enter
les
cmpsl
inc
leave
inc
ljmp
adc
xor
fs
cmpsl
inc
xor
ret
repz
je
xchg
xchg
in
mov
fldl
addb
dec
push
mov
mov
mov
or
clc
dec
xchg
popf
or
fs
xor
mov
add
and
int3
mov
push
inc
movsl
js
test
and
clc
ds
mov
or
mov
or
sub
mov
or
rcrb
sub
stos
mov
sbb
int
dec
xor
push
push
mov
cli
push
adc
and
mov
div
stos
mov
stos
mov
outsl
push
mov
jge
into
jo
addr16
cmp
push
xor
xchg
dec
push
lea
add
fsubl
sub
ja
aaa
cmc
xorl
fbstp
insb
pop
mov
xchg
out
push
shlb
in
cmp
fnstsw
rclb
add
pop
push
inc
and
pop
stos
mov
pop
sbb
add
cmpsl
loope
cli
cmpsl
push
push
xor
mov
icebp
add
add
cmpsb
push
or
cmpsb
pop
xor
fdivr
xor
xchg
cwtl
insb
pop
jle
mov
not
insb
mov
cmp
movsb
or
shrl
mov
dec
je
clc
jns
leave
adc
inc
movb
dec
adcl
xchg
pop
sarl
sub
fidivrl
pusha
or
sub
pusha
and
ds
mov
rcr
add
and
ds
lds
mov
push
sbbb
mov
and
cltd
cs
mov
mov
cmp
fstl
arpl
fidivrl
push
add
es
push
xor
sbb
push
pop
cwtl
fsubrs
cmp
jno
fsts
out
loop
cmp
or
add
popa
jbe
mov
xor
loope
xchg
sub
pushf
pop
lds
mov
jne
imul
jge
push
ret
jge
push
dec
mov
scas
xor
pop
adc
push
cld
sbb
lret
cmp
xor
add
sahf
mov
aas
push
add
je
sbb
sahf
sbb
jno
rcrb
or
roll
push
in
jp
dec
mov
sbb
jle
xor
je
push
jge
inc
movb
push
aaa
std
test
and
dec
arpl
pop
dec
out
pop
daa
inc
mov
test
xlat
add
add
movsl
and
bound
jle
fisubl
sti
cmp
gs
mov
xchg
inc
ret
aas
into
jnp
inc
jbe
test
adc
fstpt
xor
pop
mov
ja
insl
jo
cltd
xchg
sbb
dec
add
inc
push
push
mov
jne
pop
sub
sub
or
in
pop
ja
je
pop
push
pop
and
stos
inc
push
fimull
push
in
movsl
je
fistpl
cmp
ret
lea
aad
mov
in
dec
rorl
xor
add
into
push
add
sbbb
aaa
cmp
adcb
xchg
or
push
xchg
mov
or
mov
and
lahf
nop
add
xchg
adc
mov
fs
pop
push
not
adc
or
les
fisttps
in
ret
in
jne
xor
inc
xor
bnd
je
sbb
push
pop
mov
test
and
test
mov
cmp
dec
call
push
out
push
mov
lret
pop
ficoms
xor
leave
lds
or
es
shl
jne
jne
jmp
ja
fbstp
sbbl
pop
imull
sbb
popf
in
mov
mov
inc
loope
test
sbb
sub
data16
xor
loope
push
mov
fimull
or
mov
sub
jne
mov
sub
push
in
popf
addr16
cmp
mov
mov
or
rolb
push
addr16
int
shrb
cs
leave
jbe
mov
jo
or
scas
lock
xor
xchg
or
adc
mov
lret
sbb
andl
fprem
push
pop
cmp
inc
aad
shrl
pop
inc
mov
sti
add
sub
std
lods
pop
fs
mov
lret
jo
jmp
cltd
bnd
adc
cmp
cmp
lahf
ss
sahf
pop
pop
xor
enter
lds
pop
mov
inc
call
sub
pop
or
jge
cmp
xchg
xor
xchg
cmp
pop
inc
pop
adc
xor
inc
adc
xchg
sub
sub
and
sbb
rcrl
rep
mov
imul
jmp
jne
xchg
push
fsubrs
inc
inc
sub
cmc
push
les
int3
jae
lods
mov
dec
and
negb
inc
push
out
std
leave
xchg
cmpl
xchg
xor
inc
add
imul
cmp
xor
dec
andb
mov
xor
jno
frstor
mov
das
dec
jmp
mov
xor
int3
pop
mov
enter
dec
fs
int3
jbe
inc
pop
shll
fldt
jle
clc
je
and
jno
xchg
imul
inc
add
in
push
pusha
lea
mov
imul
sahf
data16
sub
mov
lds
sahf
dec
in
fcompl
inc
pop
or
xor
adc
cmpb
andb
int3
cwtl
sahf
movsb
adc
aam
xchg
int
jge
popf
call
push
adcl
xlat
and
adc
adc
outsl
mov
sub
pop
xchg
inc
push
es
xor
mov
call
push
int
push
xchg
aad
popa
movsb
or
hlt
jno
dec
add
inc
nop
sub
push
movsl
adc
je
xor
pusha
hlt
leave
aas
sub
stos
sbb
aad
fbstp
sahf
test
lods
or
cmpsb
outsb
adc
addb
notl
mov
fucomi
mov
test
shrl
test
and
push
jle
mov
adc
mov
test
popa
xchg
les
das
js
add
movsl
jns
xchg
adc
jnp
jecxz
aam
push
inc
mov
ret
cli
mov
mov
mov
mov
mov
sub
nop
pop
aam
mov
call
push
xor
xchg
lret
xrelease
aad
fsubrp
xchg
lock
sub
lds
xor
rolb
es
jnp
cmpsl
sbb
std
xchg
sbb
leave
cmp
sti
push
mov
insl
mov
sbb
ret
mov
push
adc
cmp
mov
and
or
push
adc
fisttpll
enter
shl
adc
int
lcall
fcmovnb
sahf
ret
stos
shlb
pop
mov
out
and
adc
mov
dec
pop
int3
inc
popa
push
cwtl
lds
int3
jns
pop
jge
inc
repnz
daa
push
fs
insb
subb
in
or
std
clc
fmuls
adc
mov
mov
cmp
and
sub
ret
imul
cmp
mov
cmp
or
or
push
or
into
jbe
mov
out
outsb
aad
add
and
inc
fdivp
xor
int3
enter
ret
inc
js
movsl
and
xchg
cmp
cmpsb
cld
push
adc
cmpsl
in
jle
sahf
lahf
gs
ljmp
pop
notl
shrl
cld
in
mov
mov
mov
dec
mov
mov
add
dec
push
imulb
imul
gs
cmpsl
fsubrs
mov
pop
aas
pop
jge
scas
cmp
sbb
lock
cwtl
ret
aas
add
lock
leave
aam
adc
pop
add
adc
cwtl
xchg
test
jp
cmp
mov
mov
xchg
insl
push
dec
jae
cmp
mov
dec
movsl
stos
pop
int
adc
inc
mov
or
jle
jg
lods
sub
dec
xchg
cli
push
int
push
rcll
sub
cmp
and
in
push
loop
add
roll
fwait
adcl
icebp
cmp
or
jo
inc
inc
dec
push
inc
or
mov
push
cmpsl
sub
fimuls
push
fdivrl
add
cmp
push
ss
sbb
or
add
shrl
xchg
dec
sbb
fmul
lea
fwait
sbb
xchg
mov
mov
iret
nop
sbb
stc
or
cltd
enter
fwait
pushf
push
push
and
push
dec
mov
mov
je
pusha
cmpsl
lcall
add
out
js
adc
xor
mov
xor
sub
movsl
shlb
out
push
adc
fcomip
or
in
add
jno
loope
cmp
cmp
mov
into
je
das
mov
mov
adc
xor
push
add
into
jno
sub
subl
shl
mov
adc
and
bound
iret
out
push
sub
daa
push
in
xor
sbb
mov
nop
and
fdivl
push
mov
push
rcll
and
js
sbb
fistl
pop
add
outsb
push
sbb
inc
into
pop
repnz
and
push
leave
cmp
push
lea
hlt
stos
lods
negb
dec
lods
cmp
loopne
mov
sub
in
popf
inc
popa
add
pop
xor
ficoms
lcall
dec
test
and
mov
lds
pop
fistpl
pop
arpl
aaa
out
insl
or
inc
sbb
fs
dec
sbb
xchg
mov
dec
dec
or
sti
sbb
xchg
mov
lods
jno
inc
mov
stos
xchg
dec
mov
xchg
in
in
lds
aaa
roll
and
int
subb
stos
hlt
adc
add
stc
call
jb
jne
mov
jl
jnp
divb
jp
and
aad
clc
jl
iret
cltd
ret
mov
jmp
std
push
cli
cmp
add
int3
jmp
dec
xchg
rcll
loope
test
scas
imul
shll
xor
gs
xchg
addr16
adc
fiaddl
arpl
cld
add
insb
sbb
andl
push
sub
addr16
xor
repz
push
push
scas
xchg
dec
pop
mov
clc
mov
add
mov
sbb
and
mov
push
and
out
cmc
and
and
lds
xor
jmp
inc
lret
mov
cs
lods
push
push
mov
mov
outsb
scas
mov
mov
lret
movsl
adc
add
into
cmpsb
inc
inc
jb
aad
xchg
cmpsb
in
jne
mov
pop
push
aas
imul
xor
jmp
cmp
data16
cmp
ficomps
aad
subb
leave
inc
add
fstpl
mov
jb
icebp
nop
push
and
fcmovb
mov
insb
iret
les
xor
aas
push
lds
and
jne
add
sti
dec
xchg
jbe
mov
jb
push
xchg
icebp
or
arpl
inc
nop
pop
and
pop
jge
jae
cwtl
sarb
fistl
sbb
fptan
add
xchg
inc
movsb
inc
sbb
jbe
sahf
pop
sbb
hlt
and
push
loope
stc
leave
mov
or
lea
cmp
dec
mov
mov
scas
out
push
push
movsl
sub
mul
jo
repnz
dec
xchg
adc
cmpsl
sbb
mov
or
sub
or
jns
mov
dec
in
inc
xchg
mov
inc
mov
in
mov
int
cmp
push
sbb
dec
or
addr16
sub
cltd
imul
pop
test
push
fmul
pop
add
test
adc
push
jg
pop
pop
fisttps
jae
aad
test
sub
daa
jp
mov
or
cld
mov
loope
push
orl
lods
imul
loopne
sahf
or
jnp
sbb
and
mov
iret
notl
mov
cmp
dec
dec
call
mov
adc
mov
into
mov
call
push
rclb
arpl
aas
push
mov
ret
inc
and
movsb
in
inc
add
fisttps
add
cli
dec
inc
xchg
pushf
out
and
and
lods
leave
ficompl
aas
jo
fisubrs
filds
outsb
sbb
sub
imul
pop
push
call
push
into
lea
test
stos
fcomip
ljmp
popa
out
cmc
mov
and
push
movsb
push
xchg
shrl
adc
ja
cmp
cmp
sbb
test
loope
xchg
std
mov
sub
mov
sbb
aaa
ja
cmpsb
testl
mov
cmp
mov
rorl
iret
call
xchg
pop
cmp
fldcw
gs
jo
ds
dec
jle
jnp
ljmp
cmp
jnp
jmp
mov
sub
and
or
pushf
sbb
test
ficomps
mov
aas
testl
sub
lods
call
push
cmpsb
xchg
mov
push
xlat
orl
mov
cmpsb
pop
mov
pop
sub
aad
and
int3
filds
add
adc
outsl
sti
rep
mov
mov
adc
bnd
test
jge
adc
int3
fadds
mov
test
lret
jns
mov
xchg
inc
sbbb
int
outsb
xor
xor
inc
or
inc
add
and
and
aam
insl
and
xor
pop
nop
sbb
push
insb
xor
outsb
scas
adc
adc
push
into
or
daa
test
and
add
jl
icebp
cmp
sete
xchg
push
movsl
loop
push
sub
and
and
fcos
add
mov
xchg
sub
std
or
push
loopne
and
mov
xor
mov
icebp
pusha
call
scas
insl
xchg
ss
clc
mov
jmp
push
cmpsl
test
xchg
les
jo
sub
mov
imul
lods
jecxz
fwait
test
cmp
dec
xchg
rclb
xor
push
xor
pop
pop
stos
jmp
adc
outsb
cmpsb
pop
pop
aaa
mov
loope
add
push
sbb
cld
lods
movsb
sahf
and
jb
int3
insl
adc
repnz
int3
movsb
idiv
dec
push
aam
mov
icebp
data16
test
sbb
cwtl
xchg
mov
jb
cmp
inc
dec
xchg
sbb
insl
sbb
lret
pusha
inc
testb
inc
jne
shlb
pop
movsb
adc
or
pop
xor
inc
push
into
in
out
loope
push
call
mov
mov
adc
sbb
dec
xor
pop
pusha
mov
xor
dec
test
jp
clc
jge
push
movd
pop
in
cli
pop
out
into
xchg
imul
and
xor
loopne
ljmp
dec
push
dec
test
jg
loop
das
sbb
stc
rcll
dec
shll
sub
jecxz
inc
test
addr16
in
mov
push
aam
stos
xchg
cmpl
and
cld
cltd
push
lret
add
rcrb
sub
repz
adc
xor
cmp
jl
and
pop
stos
push
cmp
add
les
decb
sub
inc
mov
adc
xchg
js
outsl
jmp
rolb
gs
int
ret
xchg
push
mov
andb
pop
mov
jmp
inc
sbb
or
addr16
iret
push
syscall
ljmp
popf
dec
cmp
popl
pushf
sarl
xor
mov
push
inc
dec
push
movsl
lods
or
in
pushf
test
push
mov
mov
in
fdivrp
xor
int
rcrl
dec
outsl
and
cmp
or
mov
and
shll
lret
sbb
inc
push
mov
test
xor
mov
xchg
jnp
push
lret
xor
data16
lcall
pushf
inc
push
lods
aas
mov
sub
mov
mov
mov
inc
test
or
dec
enter
into
insb
adc
sbb
roll
mov
xchg
mov
addl
lcall
cmp
jecxz
push
adc
cmc
mov
ror
cs
mov
adc
add
jne
xor
dec
lret
rcl
movsb
aad
ror
mov
mov
insl
mov
mov
enter
xor
xor
in
sub
ljmp
pop
imul
adc
leave
dec
lret
mov
jg
and
movsb
adc
daa
jl
pop
push
rorb
out
mov
sub
add
adc
xchg
js
mov
aad
lock
mov
ds
ljmp
push
mov
jae
adc
jne
pop
or
adc
and
dec
dec
lods
dec
and
or
push
sbb
or
dec
mov
lret
inc
mov
sets
add
jbe
xchg
inc
cltd
and
fld
les
jbe
es
pop
movsl
hlt
jae
adc
arpl
fldcw
mov
mov
mov
adc
pop
movsl
inc
out
popl
mov
cld
lcall
lret
insl
data16
mov
xchg
and
jnp
fisttpll
pop
int3
mov
loop
sbb
sbb
ss
fcoml
shlb
mov
mov
scas
cmc
lret
xlat
es
lahf
clts
jge
ja
push
mov
pop
jno
mov
add
clc
inc
jle
jmp
push
add
negl
push
scas
mov
nop
add
jecxz
adc
xor
jo
clc
clc
out
adc
push
test
and
sbb
sbb
repnz
shld
sub
inc
xor
stc
aam
xchg
je
mov
push
js
loopne
popf
push
ds
fisttpl
dec
insb
not
ret
push
adc
xor
dec
mov
loopne
aaa
stos
dec
sbb
and
js
test
lret
inc
cmc
lods
sbb
int3
jl
int3
loopne
sub
scas
cmp
mov
cmp
adc
add
and
stos
stos
pusha
pop
imul
xchg
es
ss
or
test
dec
cmp
sub
cmp
inc
sbb
jp
jno
ret
cmpl
andl
mov
sarb
mov
mov
cltd
repnz
cmp
inc
in
mov
sbb
dec
rcll
mov
cmp
push
mov
shll
adc
gs
sub
cmp
inc
mov
mov
or
or
jg
add
imul
sbb
add
jp
mov
mov
cmp
adc
and
rolb
test
or
push
outsl
adc
aad
cmp
cmp
jns
xchg
leave
loope
or
test
mov
or
sbb
cmp
xchg
aas
inc
jns
xor
pop
mov
data16
mov
cmpl
call
in
aas
push
mov
push
stos
jmp
add
test
or
int
js
mov
subb
cmc
bound
mov
popf
and
fs
add
imulb
es
call
ret
add
push
movb
iret
push
faddl
mov
cmp
orl
and
add
xor
cmp
or
gs
aas
jp
mov
fwait
jb
or
test
inc
int
lret
cltd
cmp
inc
movsl
test
or
loopne
sahf
mov
mov
jne
je
dec
xchg
pop
cmp
cltd
mov
inc
sahf
in
test
ss
sbb
cmp
stos
les
pop
dec
rolb
push
or
sbb
jns
inc
call
sbb
pop
andl
add
add
lret
inc
leave
jp
in
sub
daa
sarb
incb
leave
mov
push
cltd
lods
outsl
pop
arpl
pop
mov
jl
adc
rolb
inc
fbld
jb
pop
repnz
dec
dec
ret
sbbb
jg
jne
push
jnp
fmulp
out
lds
dec
hlt
jecxz
scas
adc
pop
mov
adc
xchg
aad
sti
scas
in
and
ja
lahf
or
rolb
jle
arpl
pop
xor
jecxz
pop
jecxz
into
inc
mov
call
out
imul
cmpsl
adc
push
jg
add
addl
pop
cs
ja
inc
shrb
mov
cltd
sbb
mov
jg
jne
fstps
sbb
call
and
popf
movb
inc
mov
pop
xchg
lret
data16
stos
adc
push
cwtl
les
lds
or
jl
addr16
addr16
movsb
cmc
jg
cmpb
hlt
dec
or
ss
ficoms
cmp
dec
int3
sbb
xchg
lret
adc
loopne
push
mov
pop
mov
ja
orb
mov
vrsqrtss
cmpsl
aam
or
test
fcomp
xor
xchg
stc
sub
scas
pop
shll
std
mov
out
rolb
push
add
cs
xchg
in
dec
insl
cmp
fnstenv
faddp
fwait
xor
in
test
jp
subl
enter
mov
sub
pop
mov
sub
cmp
add
ljmp
dec
clc
cmpsb
out
pop
inc
push
inc
mov
out
mov
test
xor
ret
ds
bound
cmp
push
mov
das
test
sbb
orb
inc
push
add
add
test
mov
iret
mov
or
jbe
dec
jp
push
cwtl
stos
ficoms
inc
std
sub
sub
ds
cmp
ss
dec
mov
sti
pop
cmp
fisubs
out
movsl
loopne
sbb
push
and
gs
mov
pop
cmp
dec
jns
mov
rcrb
jp
push
popf
sbb
pop
dec
lock
das
loop
arpl
push
push
lret
mov
push
push
cwtl
sbb
sub
ds
push
nop
lock
pop
sub
and
push
fcoml
sbb
xor
ret
faddl
or
aaa
rorb
mov
xchg
mov
das
dec
es
mov
pop
xor
scas
out
inc
shlb
xchg
clc
xchg
fstpt
daa
movsl
and
gs
sbb
divl
jg
negb
lahf
mov
add
ret
pushf
pop
shlb
subb
lahf
dec
cmp
andb
add
gs
xchg
dec
inc
inc
add
jmp
lea
mov
lret
ror
mov
popf
or
push
lea
cpuid
mov
jnp
fisubs
adc
cltd
pop
xor
mov
xor
dec
jmp
hlt
stos
cmp
or
adc
std
iret
iret
push
adc
int3
sbb
lds
jle
ja
lret
push
or
push
add
stc
push
ja
das
add
stos
sbb
movsl
xor
int3
ret
xor
sub
rolb
xchg
add
xor
insl
pop
jl
xor
sub
int
arpl
xchg
jb
loop
dec
push
mov
dec
xchg
xchg
mov
push
outsl
js
xor
test
jb
pop
fistl
aam
mov
inc
xchg
push
test
push
adcl
cmpsb
mov
cmp
pop
test
jmp
xlat
aam
xchg
das
xchg
pop
inc
notl
sbb
mov
leave
push
add
pop
xor
xlat
push
jnp
cli
xchg
or
push
das
in
popa
arpl
xor
inc
adc
pop
or
imul
mov
bound
xchg
in
push
mov
xchg
sbb
adc
mov
xor
arpl
add
inc
or
add
int
xchg
xor
pusha
inc
push
mov
push
aam
in
sti
or
in
sub
pop
mov
or
lods
orl
sub
ljmp
stc
cmc
lock
shll
xor
fcmovnu
jecxz
out
rcr
fld
unpckhps
adc
imul
xchg
jle
popa
arpl
dec
and
cmp
or
mov
or
fwait
bound
sbb
sbb
sbb
mov
adc
data16
xchg
lds
pop
cmp
fsubrl
add
pop
cmpsb
sbb
add
or
sbb
xchg
aaa
lods
popf
lds
pop
movsb
int3
xchg
rcrb
bound
inc
add
in
inc
or
fs
dec
jo
xchg
mov
fidivs
ljmp
or
sub
xor
xor
iret
add
mov
mov
stc
jnp
push
fsubs
push
pop
vmovupd
cltd
insl
pop
xchg
or
mov
push
xchg
cli
push
inc
cmp
adc
cltd
xchg
dec
and
into
xchg
daa
jge
sbb
push
pop
xchg
adc
ret
cmp
jp
and
cmpsl
inc
stc
or
insl
shll
pushf
lahf
rolb
push
fldenv
aam
sub
pop
or
inc
mov
popa
mov
test
out
out
daa
ja
imull
xchg
test
pop
fadds
lcall
or
stos
sub
stc
mov
sub
cmp
cltd
jl
loop
clc
cmp
mov
int3
cmp
lea
push
arpl
nop
push
aad
ret
ror
jb
xchg
cs
stc
sbb
inc
imul
add
test
mov
inc
jge
add
cmp
mov
jns
pop
jns
in
mov
je
dec
xchg
jnp
inc
js
push
popf
fistpll
push
mov
insl
int
mov
sub
lods
je
or
mov
sub
and
jge
push
push
mov
scas
add
push
pushf
cmp
ja
xchg
sub
mov
sub
xchg
inc
rclb
cmp
pusha
loopne
test
or
mov
je
pop
fs
gs
sub
fidivs
scas
sub
ja
sbb
dec
loop
inc
sub
pop
or
shll
testl
or
push
test
adcb
dec
lea
xor
jo
push
movsl
fwait
in
lods
jge
das
sbb
pop
mov
xor
push
int
xor
mov
jecxz
jecxz
in
jle
mov
push
jle
lret
pop
fwait
mov
insb
decl
ljmp
and
ss
pusha
mov
and
cmpsb
ds
mov
sub
xchg
scas
mov
pop
pop
aas
mov
xor
fs
jnp
push
ret
scas
sbb
lods
int3
or
jbe
loop
in
push
add
jmp
frstor
orl
pop
mov
xchg
fwait
mov
pusha
jbe
push
sub
popa
mov
jmp
pushf
sub
xchg
cmp
repz
insb
push
leave
test
and
jnp
popa
inc
andl
xchg
andb
dec
bound
push
dec
rol
clc
daa
xchg
test
les
orb
dec
pushf
and
adc
mov
jb
leave
je
gs
sbb
dec
movmskps
dec
test
flds
sub
test
push
jbe
jl
sub
inc
popf
push
bnd
dec
inc
jo
xor
mov
mov
adc
mov
icebp
loope
ljmp
ret
xchg
xchg
lret
add
mov
push
xchg
cwtl
or
xor
sbbl
enter
mov
xchg
incl
adc
mov
mov
stc
in
scas
and
frstor
inc
fs
jl
sub
lock
cmpsl
adc
inc
enter
pushf
int3
ss
xor
dec
rcll
pop
sbb
adc
ja
inc
push
out
sub
mov
test
dec
or
sub
mov
adc
push
insl
xchg
inc
mov
leave
lods
fstpt
xchg
mov
sub
jmp
jl
daa
cwtl
nop
pop
in
pushf
mov
iret
dec
out
and
std
push
adc
gs
aaa
subl
push
fcmovne
or
mov
insl
adc
test
mov
and
lret
fiaddl
dec
out
bound
and
jp,pt
or
sub
jmp
push
cmp
adc
pushf
idivl
add
xor
int
loop
and
xor
int3
cmp
add
or
into
push
aad
icebp
jp
daa
add
sub
sbb
aad
xchg
add
xor
mov
push
or
jmp
mov
jp
mov
push
sbb
xor
pop
mov
or
xor
mov
mov
cltd
mov
fs
sub
fwait
out
lods
fwait
ljmp
fidivs
ffree
mov
pusha
popa
in
inc
fistl
jno
ss
arpl
xchg
xor
sar
and
adc
adc
adc
mov
jbe
ja
mov
nop
add
xor
adc
sbb
das
out
sbb
stos
sbb
enter
push
xchg
fbstp
movsb
rcr
ficomps
test
mov
sub
push
repnz
pop
fld
xchg
loopne
fucom
dec
cli
push
sbb
dec
std
popf
inc
mov
hlt
mov
inc
shlb
mov
push
adc
addr16
or
xchg
jge
in
dec
gs
dec
test
push
push
sub
out
xor
mov
mov
adc
mov
out
and
mov
sub
inc
add
cmp
xchg
enterw
dec
add
or
inc
lock
adc
jae
adc
pop
movsl
mov
outsb
sub
nop
pop
or
xchg
push
pop
mull
stc
jmp
dec
push
mov
fistl
sti
dec
cmpsl
sbb
lret
dec
sub
jge
mov
pushf
dec
test
test
or
adc
ss
mov
or
xor
arpl
dec
aam
add
repz
int3
add
mov
adc
cmpsl
add
out
xor
sarb
sbb
lcall
xor
iret
je
and
leave
gs
and
cmc
push
adc
inc
push
jne
sbb
sbb
in
sub
mov
shll
ljmp
push
push
fmul
jo
sub
inc
mov
push
push
add
popf
push
jnp
stc
leave
out
jecxz
orl
jecxz
lret
jne
lods
pop
test
cmpsl
inc
dec
test
sub
lret
dec
sbb
jno
adc
ja
push
stc
xchg
mov
xchg
iret
adc
jge
jno
mov
fldl
loop
add
add
jl
or
cwtl
and
cmp
daa
mov
xchg
stc
add
lret
add
aam
or
fldt
mov
dec
and
xchg
lock
jae
pop
and
dec
mov
ret
aam
pop
popl
cmp
xchg
sbb
lods
pop
int
cmpl
lahf
mov
fadd
or
fists
fmulp
dec
dec
cld
mov
mov
xchg
adc
push
sahf
xor
inc
repz
mov
aaa
cmp
inc
ss
sub
ror
jmp
scas
dec
xor
mov
incb
je
jge
dec
sarb
popf
cli
and
ss
ljmp
push
sbb
inc
mov
dec
and
clc
pushl
addr16
inc
repz
lock
inc
stos
outsl
int3
lods
subl
pusha
push
nop
cs
push
daa
adc
inc
inc
pop
push
shl
rcl
ret
cmp
cmpsb
shll
fimuls
add
and
ds
dec
enter
mov
addr16
mov
out
pop
add
outsb
int3
fs
loopne
or
daa
in
cmp
iret
dec
js
mov
sbb
and
lahf
ret
push
mov
jecxz
cmove
pop
jo
mov
mov
xchg
and
jge
mov
in
or
cmc
dec
pop
mov
push
scas
addr16
push
ljmp
mov
test
adc
mov
int
mov
and
mov
and
inc
push
push
mov
clc
int3
aaa
mov
lea
leave
inc
mov
dec
push
mov
xchg
jns
scas
xchg
inc
repz
int
push
cwtl
insl
fnsave
mov
fbld
roll
jae
loope
in
enter
call
call
and
jae
mov
inc
cmp
lcall
adc
xchg
imul
pushf
inc
xchg
push
push
and
push
push
insb
mov
loopne
adc
js
ja
push
pop
scas
adc
sub
daa
imul
sbb
popf
xchg
xchg
xor
rolb
or
jle
pop
jne
and
and
in
jbe
inc
cltd
adc
jg
add
fcomps
pusha
push
rol
fs
dec
mov
inc
and
jmp
mov
and
fcmove
inc
icebp
insl
fcmovb
lock
xchg
adc
xor
adc
xchg
addl
push
push
in
outsb
insl
loope
pop
call
add
icebp
leave
mov
sbb
aas
xchg
push
or
popa
mov
icebp
fisttps
movsl
and
add
or
clc
inc
push
pushfw
add
jb
int
pop
testl
loop
fwait
ret
dec
xor
jns
sub
inc
je
lret
daa
pop
fcoms
icebp
or
sbb
popf
jae
mov
in
jl
inc
dec
push
cmp
inc
jecxz
xor
call
neg
outsl
or
lds
xor
insb
and
lret
push
stos
into
ret
adc
sarl
outsl
fsubs
pop
pop
adc
cmp
out
scas
negl
mov
xchg
sbb
cmpsl
push
popf
scas
jle
pop
out
es
push
mov
popf
adc
shrl
add
adc
sbb
cld
cmp
movsl
pop
cmp
add
pushl
mov
adcl
pop
and
gs
aad
pop
jle
mov
jecxz
mov
fimull
hlt
stos
fdivrs
loop
mov
mov
inc
mov
icebp
adc
fwait
cs
fdivrp
jle
jno
push
sbb
insb
sbb
xor
test
jbe
outsb
stos
mov
pushf
adc
popa
dec
dec
adc
add
popl
pop
dec
ja
cs
push
call
aad
cld
mov
inc
pop
push
xor
mov
call
pop
pusha
sbb
or
add
hlt
pop
cs
in
inc
pop
or
sti
lds
jle
test
or
imul
cmpb
cwtl
mov
loope
mov
loope
cltd
ret
nop
mov
stos
fbld
pop
cmp
shlb
mov
xor
jnp
loop
outsb
push
data16
out
sbb
jmp
and
jmp
outsl
dec
pop
fldenv
jl
xchg
pop
clc
bound
add
iret
in
xor
add
lea
mov
sub
sbb
arpl
mov
dec
rclb
mov
xchg
aad
fdivrs
add
dec
imul
inc
push
in
or
lret
push
ficomps
xchg
iret
mov
test
adc
es
pop
loopne
aad
push
icebp
adc
sbb
dec
xor
inc
stc
push
adc
outsb
repz
mov
je
mov
jge
jb
incb
dec
scas
and
jge
clc
insb
inc
xor
les
jg
je
bound
cmc
sbb
adc
inc
or
push
jbe
icebp
xchg
jl
sub
insl
rolb
test
pop
push
stc
jle
dec
std
xor
jmp
and
setg
push
or
lret
or
dec
add
loopne
shlb
or
cmp
enter
out
mov
test
mov
fcompl
xchg
dec
add
or
and
into
xor
cmp
or
loope
leave
mov
sar
jge
fisttpll
mov
es
xor
pushf
addb
popa
scas
sti
xor
mov
jb
jge
adc
insl
cld
popa
gs
addb
stos
push
xchg
fldcw
or
mov
ljmp
cmp
incl
sub
jo
mov
add
mov
pop
nop
das
test
lret
mov
xor
pop
push
or
repnz
xchg
mov
jae
or
imul
out
jnp
dec
adc
cmp
lods
add
loop
adc
imul
mov
xchg
or
xchg
cmp
cmp
pop
hlt
or
or
lret
call
aam
pop
and
jmp
xchg
out
lods
jecxz
bound
out
gs
addr16
aaa
or
insb
rcrl
add
pop
push
andb
cmp
decb
mov
arpl
add
adc
and
pusha
or
orl
push
mov
call
jns
jae
dec
pcmpeqd
out
hlt
scas
inc
int3
inc
cmp
in
enter
mov
dec
rcll
mov
inc
nop
int3
mov
dec
adc
outsl
push
fists
fcomp
aam
push
sbb
push
cmp
push
add
test
stc
fnstcw
sbb
xor
loopne
outsb
pop
ds
or
imul
mov
scas
sub
outsb
hlt
push
ret
js
pop
cmp
push
add
adc
popf
nop
test
xchg
adc
out
inc
sbb
inc
pop
lret
adc
stc
imul
xor
mov
aam
stc
dec
jmp
stos
arpl
adc
pop
fwait
out
mov
cltd
push
jmp
nop
out
daa
mov
frstor
movsl
mov
dec
stos
dec
and
int3
cmp
lods
into
lods
dec
mov
in
mov
adc
push
push
mov
or
jne
add
movsl
adc
and
sbb
ss
or
leave
in
jb
je
dec
mov
icebp
add
or
mov
jb
pop
sbb
sub
pop
ja
cwtl
imul
lods
insb
or
push
loopne
jle
mov
je
sbb
int3
inc
or
into
fsubrs
jbe
sub
fdivrl
clc
cltd
ja
rclb
mov
loope
dec
fs
sub
addr16
cmp
push
test
sbb
or
inc
push
dec
add
mov
shrb
sub
aad
cmpl
and
and
xor
mov
xchg
sti
or
jne
and
xchg
sahf
or
hlt
lods
inc
mov
and
mov
leave
out
push
xor
imul
pop
jmp
dec
dec
cld
les
jl
shrb
popa
sub
gs
iret
mov
sti
jmp
xchg
push
pop
cld
pop
rorl
cmp
fists
pop
jp
stc
pop
mov
xlat
xchg
mov
mulb
lahf
sub
mov
mov
xchg
lea
xchg
push
inc
sub
sub
scas
hlt
aam
pop
sbb
stos
call
roll
loopne
test
dec
outsb
mov
lock
adc
sbbl
inc
cli
sbb
sahf
push
jns
jmp
fisubrl
xchg
mov
push
roll
cmpsb
addr16
jl
xchg
cmpb
aad
ja
adc
jb
insl
sbb
cmp
push
adc
xor
xor
push
subl
leave
pop
pop
inc
mov
adc
push
cwtl
mov
dec
lods
mov
enter
add
push
push
les
push
data16
xchg
lret
pop
add
iret
xchg
jmp
outsb
sbb
xor
cld
adc
xchg
or
add
loope
test
iret
dec
sub
cld
sub
mov
movsl
fimull
mov
mov
scas
leave
fs
test
shl
cmp
cmp
sub
cmp
and
fwait
popa
and
scas
in
andl
push
jno
icebp
daa
pop
scas
sub
daa
jae
cli
pop
dec
out
data16
mov
pop
loop
mov
inc
pop
mov
adc
cld
cmp
adc
fildl
es
xlat
xchg
jnp
xchg
dec
push
ds
push
pusha
ficoms
imul
lcall
insl
mov
iret
dec
pop
in
cwtl
stos
pop
push
test
aad
fdivrl
lock
inc
call
pop
pop
dec
js
push
sub
push
dec
movsl
int
adc
iret
gs
mov
mov
jle
fisubrl
mov
sbb
scas
out
and
cmp
inc
and
bound
cmp
sub
jbe
adc
jno
insb
mov
push
cmp
xchg
inc
mov
pcmpeqb
adc
pusha
lods
sbb
sbb
call
xchg
daa
mov
xchg
add
cmpsb
ret
inc
fucom
in
rcll
lods
dec
jb
lahf
adc
or
pop
sub
push
fcompl
dec
jmp
stc
je
addr16
pop
cmp
scas
jecxz
sub
orl
daa
daa
pop
pop
incl
testb
xor
adc
hlt
loop
inc
daa
dec
rep
hlt
rol
jg
lcall
jns
pushl
inc
ljmp
push
cli
xchg
xorl
xchg
xor
jle
pusha
sahf
cmpsb
or
out
xor
imul
pop
mov
outsb
aad
cmpsb
lods
lods
outsb
adc
push
push
push
push
inc
add
mov
out
xchg
mov
dec
add
lods
cmp
cmp
iret
mov
xchg
mov
jmp
dec
push
push
push
inc
xor
stos
jmp
sub
fisubs
xchg
xchg
mov
cwtl
xor
pop
pop
scas
in
popf
dec
fistpl
data16
ljmp
lcall
add
mov
mov
pop
or
mov
and
outsl
call
mov
test
lock
cld
dec
mov
out
add
adc
int
iret
fisttpl
push
stc
cmp
fbld
jae
inc
jmp
jge
inc
jnp
cli
scas
arpl
or
mov
xchg
fistpll
lcall
mov
mov
stc
jbe
push
int3
flds
daa
cmp
push
mov
and
xor
mov
mov
fstl
pop
cmpb
pop
xchg
ljmp
data16
inc
ds
cmp
xchg
xor
xor
mov
cmpsl
imul
lods
lahf
jmp
pop
fadd
push
xor
in
sub
inc
mov
pop
add
xchg
push
xor
stc
rorw
imul
mov
lock
dec
out
mov
pop
cmp
aas
test
movsb
pop
pop
pop
dec
addr16
and
mov
out
scas
stc
mov
test
mov
insl
cwtl
mov
fsubrl
cmpl
and
or
add
mov
fs
adc
lock
mov
pop
push
push
dec
xchg
aaa
dec
inc
rclb
adc
xchg
or
pop
jne
mov
sub
jno
rcrb
pop
inc
dec
rorb
cwtl
mov
xor
std
ss
push
shll
pop
sbb
pop
push
out
lds
push
push
out
mov
pop
xor
dec
cmp
cwtl
jnp
sbbb
xchg
std
ljmp
int
enter
cmpb
movsl
cmpsl
pop
mov
xchg
push
add
inc
divb
push
bound
clc
push
xorl
add
hlt
sbb
aam
frstor
inc
ljmp
cld
les
dec
sub
mov
outsl
xor
lock
fldl
fdivrs
ds
in
out
xchg
movsb
mov
enter
push
xor
cmp
test
cmpsb
xlat
out
sbb
dec
add
sbb
push
and
mov
push
lods
xchg
lret
inc
dec
andb
dec
sbb
adc
hlt
scas
pushf
in
mov
cmp
mov
sbb
data16
lret
xchg
cs
mul
push
xchg
shl
mov
pop
shlb
mov
dec
fiaddl
out
cmpb
fcomp
or
pop
pop
add
outsl
lods
imul
jb
negb
fcmovbe
roll
jg
stos
enter
jno
pop
imul
pop
adc
cmp
inc
push
test
ja
mov
mov
mov
push
lock
push
jne
mov
out
mov
or
into
push
lock
lcall
pop
mov
shll
dec
sub
xchg
adc
inc
imul
cmp
push
lea
mov
sub
or
inc
sub
inc
movntq
arpl
adc
mov
adc
push
pop
sub
call
xchg
and
cmp
cld
stos
dec
push
xchg
std
xchg
ljmp
push
mov
and
mov
ret
in
cmp
or
push
inc
jno
cltd
pop
cmp
fidivs
pop
mov
xchg
mov
or
lcall
std
iret
js
add
shrb
ret
cmp
cmpsb
iret
dec
stos
into
xchg
mov
stc
test
aaa
dec
pusha
mov
mov
scas
mov
lahf
cmp
adc
data16
stc
int3
mov
lods
push
dec
and
dec
iret
imul
lods
xchg
aaa
jae
rcll
sti
addr16
mov
sub
or
pop
jo
stc
int
cli
dec
xor
inc
jl
fstpl
lret
mov
imul
in
push
inc
in
inc
jecxz
ds
fwait
mov
push
test
inc
fs
and
aad
cmp
ds
jg
int3
push
xchg
adc
and
add
xchg
mov
fcoml
sbb
dec
imulb
pop
cmp
scas
dec
add
cli
sbb
xor
lret
sub
adc
adc
jle
lods
mov
inc
das
cmpsl
push
adc
and
jl
sub
out
sub
sub
movsl
mov
and
divl
mov
lahf
push
add
test
sahf
ret
ja
jo
xchg
xchg
inc
adc
addb
jecxz
push
adc
sub
mov
adc
or
popf
push
dec
je
mov
add
jl
dec
stos
lea
pop
int3
in
adc
gs
or
cmp
outsl
rclb
xchg
sub
jle
xchg
mov
popf
test
mov
fs
adc
push
push
dec
imulb
stos
inc
cmp
ficompl
sete
mov
add
outsb
outsl
das
out
jbe
or
mov
cli
frstor
cltd
ljmp
loope
sbb
pop
xor
int3
dec
or
scas
repz
sub
lods
cltd
shlb
scas
sub
cmp
out
or
and
add
hlt
xchg
cmp
jmp
nop
insb
dec
mov
sbb
popf
push
stc
inc
mov
xchg
inc
fiaddl
adc
push
cmc
push
jmp
cmp
mull
and
mov
jns
sub
ret
mov
lret
daa
jg
mov
push
aam
pop
add
push
push
mov
inc
lock
je
sub
mov
inc
add
aaa
mov
adc
xor
xor
cmp
push
sbb
push
or
cmp
cmp
push
pushf
loope
fwait
adc
out
popa
sub
call
ljmp
inc
xchg
xor
mov
xchg
mov
xor
std
in
into
out
ja
xor
push
fdivrl
lret
mov
push
pushl
sub
mov
and
cmp
aad
pop
shlb
mov
cmp
mov
mov
mov
outsl
or
mov
add
push
mov
call
push
lahf
int
int
daa
addl
push
inc
or
cmp
pop
mov
ds
pop
push
sbb
cmp
repz
in
stos
and
dec
add
bswap
and
sub
inc
adc
pop
sahf
and
pop
or
out
xor
cwtl
dec
and
push
add
lock
fists
xor
adc
repz
loope
scas
data16
in
xor
cmpsl
in
daa
shlb
sub
inc
lds
mov
cmp
clc
pop
and
daa
mov
mov
in
outsb
call
add
and
es
dec
xor
jb
inc
imul
pop
loope
stos
cs
lods
stos
imul
push
add
jmp
je
inc
subb
sbb
and
lahf
sub
push
cmp
xor
iret
cmp
bound
rcll
ja
jne
xor
sarb
outsl
pop
add
or
pop
sub
ficompl
sar
sti
test
or
push
in
add
mov
scas
pop
and
cwtl
fldt
movsb
cmc
leave
lea
adc
mov
js
iret
arpl
js
mov
and
xchg
enter
dec
xchg
mul
or
adc
int
pop
sub
xchg
push
push
push
mov
add
fbstp
push
mov
ret
in
push
push
stc
fildll
push
ljmp
ret
repz
or
mov
subb
loopne
mov
ss
add
adc
sti
sahf
dec
add
stc
js
or
jo
shll
arpl
aad
xchg
loop
and
lods
mov
and
cmpsb
sub
fwait
pop
push
stos
or
cmpsb
scas
and
cmpsl
fadd
push
mov
sarb
or
or
cmp
inc
addr16
lods
pop
es
inc
xor
decb
fiaddl
adc
mov
mov
xor
cmp
fisttpl
jle
sub
adc
dec
xor
jmp
dec
mov
xor
add
cmp
mov
loope
ret
push
mov
mov
push
outsb
and
mov
movsl
idivb
sahf
mov
adc
rcrb
ror
xchg
add
int3
fcoms
pop
mov
xor
fcmovbe
dec
sahf
jle
mov
jl
push
test
daa
negb
das
or
iret
idivb
js
dec
sub
xchg
inc
sbb
in
dec
sub
xor
nop
lret
test
cmpsl
jl
jne
adc
jno
inc
jb
jo
jno
jbe
pop
jge
sahf
in
dec
daa
adc
xlat
add
es
adc
push
bound
out
mov
push
fs
sub
sub
mov
cld
cmp
divb
js
outsb
inc
outsl
scas
decb
inc
mov
outsl
xor
mov
sub
cmpsl
adc
sub
test
imul
sbb
bound
testb
dec
mov
nop
mov
dec
mov
fimull
xchg
rclb
orb
aaa
jbe
jecxz
xchg
nop
or
je
pop
sbb
inc
push
inc
xchg
push
mov
dec
sbb
test
or
and
inc
sbb
dec
ret
mov
movsl
xchg
mov
mov
lahf
mov
mov
and
hlt
and
add
loop
stos
xchg
fs
pop
mov
lahf
cmp
adc
pushf
push
add
jb
popf
pop
rolb
jo
rorb
and
xchg
dec
adc
dec
inc
movsb
incl
xchg
add
mov
sbb
xor
or
mov
lea
ja
adc
inc
outsb
sbb
adc
mov
sbb
test
or
jae
lods
cmpsb
nop
addr16
mov
fs
shl
into
dec
pushf
xchg
add
add
add
or
mov
inc
jle
xchg
lods
mov
mov
lock
mov
jle
dec
and
xor
lahf
test
imul
lods
and
lcall
fsubrs
cli
lock
sbb
hlt
pushf
movsb
jae
int
out
add
sub
out
xchg
or
mov
xchg
sarl
push
cmpsb
jno
xor
sbb
shr
out
inc
inc
or
out
cli
xchg
stos
mov
add
lcall
insb
mov
add
ljmp
pop
inc
add
jg
push
pop
jge
push
and
xor
popf
xchg
ljmp
nop
lods
testb
or
and
pop
lret
std
mov
cld
cwtl
movsl
sbb
mov
pushf
lds
pop
aam
jb
or
or
dec
push
lcall
xchg
xchg
push
cmpsb
out
mov
mov
test
mov
rorb
pop
fcompl
xchg
and
and
sub
inc
loope
into
and
pushf
cli
shrl
mov
mov
insb
mov
cmpb
cltd
addr16
das
fcmovne
ja
clc
cmp
fiadds
sbb
imul
xchg
dec
int
mov
pop
je
jns
aaa
or
mov
cmp
or
mov
sarb
jp
int
cmp
dec
and
push
adc
out
mov
movl
xchg
jne
xchg
sbb
xor
cmp
xor
mov
stc
inc
pop
imul
fdecstp
inc
loopne
fistl
sbb
mov
enter
inc
xor
call
scas
adc
xchg
xor
xlat
jo
ds
les
cli
enter
push
cmp
jo
lock
xor
pop
pop
data16
fisttpl
jae
pop
fildll
push
inc
mov
ficoms
test
cmp
pop
cmp
push
sahf
xchg
int3
mov
lds
adc
hlt
sbb
addr16
push
jno
outsl
adc
push
pop
sbb
xor
movsb
dec
sbb
bound
dec
pop
push
popl
testb
testb
mov
fwait
stc
mov
add
jo
repnz
hlt
ljmp
mov
fs
subl
pop
cwtl
enter
int3
pop
sub
in
mov
jo
xor
stc
xor
xchg
mov
stos
adc
movsb
dec
jl
or
inc
movsb
pop
or
pop
add
xchg
std
lods
xor
das
push
pushf
mov
xchg
fstl
js
lock
cmp
sub
je
nop
adc
pusha
leave
add
dec
mov
cs
enter
mov
pop
cmpsl
jnp
sbb
call
enter
jp
xchg
sub
cmp
fsubrs
shlb
or
fs
lar
scas
mov
mov
xchg
clc
stos
jmp
mov
xchg
add
adc
sub
test
xor
adc
mov
or
push
mov
loopnew
mov
subl
sbb
sub
adc
stc
ficomps
std
inc
popf
push
scas
mov
sbb
mov
js
push
divl
pop
test
inc
xor
in
inc
push
aam
jge
ljmp
xlat
dec
rcrl
loope
push
lods
sub
and
je
lcall
shl
mov
add
movsl
sbb
gs
mov
test
mov
cmp
mov
cmp
inc
sbb
js
lods
enter
cli
jnp
arpl
mov
jns
cmp
inc
cmp
mov
jb
sub
push
dec
cs
or
cmp
lret
add
outsb
cmovne
stc
dec
je
inc
inc
setae
add
enter
jno
pop
dec
jns
cmc
test
jno
loop
shlb
sub
xor
mov
lea
outsl
mov
outsl
shll
dec
inc
hlt
inc
pop
pop
int3
cwtl
xchg
mov
adc
mov
ds
push
jmp
lods
push
iret
push
push
pushf
incb
lds
cmpsb
inc
fists
xor
sbb
into
insb
ret
push
pop
pop
negl
inc
and
jecxz
and
lea
or
inc
and
add
jl
add
orb
add
or
or
pop
sarl
hlt
stos
mov
jb
and
test
dec
lahf
adc
sti
dec
pop
sub
leave
sub
pop
or
scas
sbb
std
push
jmp
inc
or
call
push
addr16
dec
jmp
xor
cmp
inc
mov
scas
clc
push
cmpsl
in
push
or
std
lods
xchg
int3
mov
icebp
lods
mov
lahf
dec
jno
lret
test
jecxz
push
sbb
adc
dec
add
arpl
xlat
dec
xchg
inc
mov
add
out
cmp
enter
cltd
inc
fisubl
test
sub
xchg
into
sub
dec
pop
das
and
dec
test
sbb
cmp
mov
iret
div
fs
in
mov
inc
mov
mov
adc
jns
dec
sub
inc
aas
fs
mov
sbb
pushf
sbb
negb
lret
pop
dec
xchg
mov
jno
add
ljmp
jae
fs
add
pop
or
cmp
dec
xor
sbb
jno
cs
movzbl
push
or
ror
mov
xchg
push
jmp
mov
call
or
subb
pop
xorb
jo
lods
push
mov
jo
enter
jbe
sarl
pop
xchg
in
and
fstl
push
idivl
xchg
lcall
stc
cmpsl
in
dec
push
test
cld
shll
roll
mov
jns
movsb
sarb
push
testl
pop
add
iret
push
cmp
fistl
mov
mov
aam
cmp
dec
sub
lds
or
or
or
dec
ds
xor
sbb
or
in
lret
xchg
jb
popl
xor
pop
adc
int3
push
cmp
mov
jbe
imul
cmc
imul
mov
lds
lret
enter
mov
orl
scas
mov
xchg
test
ss
mov
jmp
sub
bound
shll
fnsave
test
repnz
hlt
xchg
pop
xchg
nop
xchg
and
js
dec
and
adc
or
inc
outsb
jp
test
adc
ret
out
mov
pop
pushf
dec
jmp
mov
cltd
mov
pop
jmp
mov
pop
mov
push
adc
cmp
imul
and
inc
mov
dec
cld
loope
push
imul
shlb
pop
inc
xor
aas
push
mov
add
popf
push
pop
fwait
data16
add
into
clc
aam
mov
fsubrs
lahf
push
dec
jmp
xchg
xor
and
mov
jmp
ret
loopne
into
cmpsb
pop
lret
in
xorb
inc
roll
andl
and
pop
xor
je
cmp
insl
mov
push
mov
xor
and
ret
xor
xchg
in
mov
and
dec
sbb
inc
pop
leave
pop
xchg
orl
test
sbb
push
in
aam
push
aas
inc
push
mov
and
jns
repz
stos
push
jo
jmp
lahf
in
jns
xchg
cltd
into
dec
and
inc
stc
and
sub
xor
sub
aaa
and
movsl
sub
into
ret
call
xchg
icebp
idivb
imul
call
inc
pop
dec
and
loopne
imul
sti
das
cmpb
mov
xlat
adc
push
addr16
xor
scas
ja
jp
inc
jne
test
pushf
xchg
imul
clc
push
nopl
xor
and
enter
int3
std
or
clc
mov
jnp
test
packuswb
or
pop
jae
xchg
ljmp
mov
outsl
and
push
mov
jl
lods
bound
or
fstps
jp
cmp
push
nop
dec
push
inc
stos
inc
xor
movsb
jp
ja
mov
xchg
adc
imul
insl
cwtl
mov
cmpl
aas
mov
repz
add
or
andl
push
lds
lahf
jge
loop
mov
adc
stc
push
sbb
jae
pop
aas
outsl
inc
jge
stos
adc
jl
pop
jmp
bound
push
push
add
mov
imul
adc
xchg
iret
fcompl
cmp
mov
cmp
push
ret
ds
int
jp
adc
fcoms
out
ret
xchg
push
pop
divb
pop
icebp
xor
push
pusha
into
movsl
and
or
pop
xchg
mov
or
std
push
pop
cmp
inc
movsb
shrl
sub
dec
mov
sbb
inc
dec
jne
mov
push
dec
ds
mov
xchg
dec
xchg
repnz
jg
lahf
or
cmp
and
add
mov
insl
mov
jl
cld
call
popa
arpl
sub
clc
fldt
je
mov
xchg
mov
add
mov
push
outsb
lcall
jle
hlt
mov
and
sbbb
adc
cmc
shlb
mov
sub
jge
ficompl
repnz
fsubrl
mov
aas
fisttpl
dec
and
push
xor
cmp
inc
xlat
jns
dec
or
in
dec
and
add
inc
xor
data16
mov
lret
jae
push
insl
and
loope,pt
sti
mov
std
lods
ss
int
sub
jmp
mov
mov
mull
repz
push
js
mov
xor
pop
sbb
push
ss
cmpsb
push
mov
pop
mov
cli
stc
es
dec
call
sub
ljmp
imul
cmpsb
ror
cld
jp
hlt
movsl
rcl
xor
mov
xor
mov
xchg
push
test
int3
push
cmp
cmp
cmp
mov
or
push
dec
sbb
xchg
jle
xor
mov
mov
cmp
or
mov
ja
insl
loopne
lock
js
adc
cmp
xchg
mov
inc
jge
inc
leave
add
cmpb
push
add
mov
xorl
xchg
arpl
and
daa
push
lods
ja
in
and
adc
test
sbbl
in
pop
xchg
pop
inc
pop
rolb
dec
lret
push
mov
aas
sarb
jl
adc
lods
mov
out
jmp
out
imul
push
mov
shll
loope
or
out
pop
jno
jnp
pop
sbb
leave
insl
jle
pop
jno
clc
jmp
add
or
mov
push
pop
and
pop
inc
mov
sub
pop
imul
jne
inc
test
cli
push
pop
in
idivb
push
ljmp
xor
push
loop,pn
lods
sub
pop
fstp
call
mov
jae
ja
fadd
add
rcl
xor
push
icebp
cmp
fcompl
dec
lea
pop
psllw
or
cmp
sub
cltd
imul
inc
mov
mov
push
shlb
mov
ror
cmp
jae
aad
repnz
in
sbb
in
divb
xchg
mov
sbb
jbe
lret
mov
out
les
and
cs
jl
fdivrs
outsl
pop
push
mov
out
cmp
sbb
out
ret
mov
div
jle
outsb
shr
dec
push
test
test
sub
out
xor
js
ret
push
enter
and
repz
sub
stc
inc
inc
pop
fs
fldenv
stc
or
jb
xor
sub
cmpl
or
lcall
inc
in
jae
adc
pop
push
mov
pop
or
movsl
incl
fbld
dec
push
bound
jnp
sbb
adc
call
out
insl
nop
mov
popa
jns
or
inc
mov
enter
cs
hlt
ret
je
mov
aaa
gs
xchg
mov
mov
mov
xchg
lods
lret
test
pop
pop
cmp
sbb
inc
sbb
data16
mov
repz
loopne,pn
loopne
adc
xlat
cmp
shr
sti
roll
push
pop
jo
push
and
push
call
cmpsl
xchg
cmp
mov
cmpsl
push
scas
insl
mov
test
xchg
or
stos
and
and
pop
and
and
or
jne
clc
pop
mov
gs
ja
mov
subb
dec
jg
mov
rorl
imul
jnp
cmc
sbb
or
gs
adc
idivb
jns
jl
cmpsb
pop
jp
ror
call
mov
add
lret
sahf
test
cwtl
sbb
call
repz
ja
iret
sub
inc
mov
mov
mov
and
in
addl
dec
or
andl
fstl
addb
mov
pop
pop
sbb
jne
jo
xchg
jno
ljmp
shrl
mov
mov
repnz
push
fimuls
dec
and
jge
mov
or
inc
arpl
lods
jg
lahf
into
addr16
lock
call
add
outsb
in
mov
ficompl
xor
xor
cwtl
and
adc
daa
sbb
and
xor
mov
sbb
mov
cmc
pop
in
movsb
fstps
add
cs
mov
xchg
data16
les
mov
leave
jnp
or
outsl
sahf
test
cmp
and
inc
pusha
incl
pop
jecxz
adc
orl
xchg
adc
popf
pop
popa
mov
or
dec
je
repz
fs
inc
xor
lods
or
xorl
push
inc
cwtl
inc
aam
out
and
mov
add
dec
adc
xor
dec
hlt
push
insb
dec
xchg
sbb
mov
add
mov
cli
stc
jecxz
stos
inc
push
mov
cld
push
mov
mov
adc
mov
pushf
scas
xlat
push
xchg
sub
mov
cmpl
mov
stc
repnz
cmp
or
or
adc
cmpsb
aad
test
inc
cmp
test
dec
cmp
mov
clc
xor
arpl
sub
je
repz
mov
inc
mov
xchg
arpl
sbb
jl
jnp
in
sub
adc
pop
push
pop
in
sub
mov
dec
rclb
mov
sub
ljmp
and
in
cmp
jno
push
push
jns
lret
mov
cmpsl
mov
sbb
mov
idiv
in
push
lods
ret
xor
push
or
push
sub
outsl
repnz
fisubs
mov
in
mov
in
or
mov
sbb
or
or
sbb
xchg
daa
fnstcw
popa
pop
mov
jo
scas
pop
je
mov
inc
and
in
push
xchg
std
rcrb
fnsave
mov
mov
adc
jp
xor
js
adc
cmp
lds
and
mov
jb
and
ss
adc
leave
jle
push
sub
adc
enter
cld
cmp
pop
inc
subb
jle
dec
or
mov
and
stos
or
pop
scas
jnp
andb
or
dec
scas
jnp
jno
push
call
aam
sbb
stos
aam
dec
test
jb
ret
add
test
int3
scas
jg
lret
add
rolb
sub
fucomp
rorb
mov
mov
adc
mov
sub
psadbw
inc
adc
or
rolb
inc
arpl
pop
repnz
mov
jbe
and
int3
xlat
stc
dec
popf
test
add
sub
dec
pop
mov
mov
xor
bound
push
xchg
into
cli
test
push
add
push
loopne
out
stc
pop
pop
jno
cld
stos
adc
xor
sti
pushf
sarl
out
dec
jecxz
or
and
push
or
mov
pop
push
shl
lods
jnp
push
scas
fs
xchg
jmp
loope
cmc
daa
out
das
iret
subb
test
mov
mov
data16
inc
ret
add
cmp
data16
ja
sub
jne
cmp
and
jp
mov
jp
or
mov
ret
insl
cltd
sti
dec
sub
test
aaa
jae
mov
nop
cmovae
sbb
cmc
adc
ret
sbb
cmp
push
test
pop
xor
fwait
sbb
mov
inc
mov
outsl
mov
xor
test
insb
jnp
sub
loop
fnstcw
cltd
movsl
in
cmp
sub
or
pop
sbb
fisttpll
icebp
movhps
and
int
test
loop
insl
jb
cmp
addr16
dec
sbb
jmp
ja
inc
aaa
adc
mov
push
mov
lds
jge
cmp
mov
sbb
fcompl
in
iret
pop
push
in
inc
testb
add
je
lcall
mov
mov
adc
pop
cmc
fisubs
push
das
fsubrl
ds
or
ds
mov
push
std
aas
sub
jnp
xchg
sarb
cmp
out
test
xchg
push
inc
test
adc
scas
inc
and
jle
mov
rcr
js
mov
lea
pop
xchg
hlt
xchg
mov
pop
or
or
push
mov
stos
mov
enter
imul
adc
mov
dec
addb
pop
adc
loopne
rep
notl
pushw
xchg
lret
aam
pop
imul
fcmovnbe
cmpsb
dec
push
sbb
jl
adc
inc
cmpsl
out
mov
fucompp
enter
pop
loop
popa
mov
jns
fst
xor
sbb
movsb
or
cmp
jae
data16
cltd
sbb
push
inc
les
mov
cmp
jns
mov
lock
jl
cmpsb
popf
sub
pop
mov
jb
xchg
push
mov
pop
mov
dec
notl
pop
cltd
xchg
ffreep
test
sub
jne
popf
sub
push
cmp
push
stos
test
xlat
pop
mov
xor
sahf
je
cs
scas
lods
popa
dec
adc
mov
pop
clc
lret
or
xchg
pop
inc
dec
xchg
cmp
mov
fmull
rcll
jb
stc
push
popa
inc
test
sub
lahf
and
adc
adc
sbb
cmc
mov
jns
adcl
inc
inc
les
mov
xor
push
daa
cwtl
xor
and
cwtl
or
jno
inc
push
pop
mov
lds
cmp
outsb
cmp
jo,pn
sbb
xor
sbb
shl
dec
mov
loopne
xor
in
push
repnz
pop
scas
or
out
sbb
mov
xchg
ret
or
xlat
fistl
pop
inc
test
sub
je
pop
xchg
cmp
lret
adc
mov
stos
pop
in
inc
adc
sbb
jg
pop
inc
pop
dec
mov
pop
sarb
inc
mov
xchg
and
sub
test
or
subl
lea
jl
shrb
and
testl
cmpsb
lods
lahf
and
and
cwtl
or
sahf
ljmp
iret
jo
jecxz
jno
jmp
mov
cmp
fwait
xchg
pop
cmpb
or
or
mov
and
jle
std
cwtl
insb
mov
in
out
mov
adc
rcll
push
gs
cli
xchg
jo
sbb
or
xor
imul
out
add
and
xor
jmp
int
mov
ds
cmp
mov
fwait
lods
adc
stc
fs
into
bound
pop
popf
outsb
or
sub
dec
bound
push
push
loope
xor
clc
sub
inc
je
cvtps2pi
inc
dec
add
or
std
inc
mov
sbb
stc
out
jns
lods
jo
iret
adc
push
jbe
aad
sub
mov
pop
push
loope
cmp
ds
and
inc
add
int
sub
or
iret
lahf
sbb
mov
pop
and
pop
xor
mov
sarb
mov
shll
cmc
push
insb
sti
adc
pop
push
jb
insb
les
movsl
xchg
jp
repnz
push
adc
aaa
cs
adc
or
es
outsb
sarb
push
aad
je
mov
xchg
leave
sbb
adc
jne
test
rcrl
or
add
and
lret
sub
mov
jge
cmp
mov
jo
jno
bound
andb
dec
mov
mov
xor
rclb
mov
sub
inc
mov
nop
testb
lret
xchg
aam
push
movlps
lods
push
ljmp
and
sub
lret
aas
dec
popf
mov
xor
out
loopne
in
mov
daa
jne
add
mov
pop
mov
xorl
mov
xor
call
test
add
rorl
cmp
cmp
pop
and
adc
lahf
stos
push
mov
shrl
pop
add
orl
add
mov
arpl
xor
aaa
cwtl
mov
or
scas
sbb
cli
lods
mov
jmp
mov
sub
lods
jbe
das
cmpsl
daa
sub
lcall
mov
fdivl
jmp
and
pop
xchg
xchg
stos
mov
stos
or
je
mov
pusha
mov
das
inc
inc
xchg
pop
nop
bound
dec
or
jno
dec
daa
je
xchg
cmp
bound
or
pushf
inc
xchg
lar
mov
lret
jno
pop
mov
push
mov
imul
inc
movsb
pop
pop
pop
xorb
sti
inc
lahf
sbb
and
xor
xchg
xchg
sub
scas
xchg
dec
inc
mov
loope
jle
icebp
lahf
nop
stos
cmpl
add
and
dec
add
jno
adc
xor
aam
or
faddl
inc
gs
loope
inc
xchg
or
dec
shll
mov
in
xchg
scas
pop
cmp
cmp
lods
sti
adc
push
add
mov
adc
sbb
sbb
lock
add
inc
dec
ficoml
push
fmul
repnz
add
repnz
sbb
insb
in
aad
jne
jecxz
je
bound
inc
mov
mov
jb
mov
fdivrs
mov
jmp
orl
jle
jnp
ss
repnz
mov
imul
adc
and
arpl
pop
dec
sbb
dec
imul
lock
xor
lret
fs
or
lea
lahf
push
push
cmp
cltd
rcrl
xor
cmpb
arpl
cli
out
xchg
lret
or
cmp
sbb
mov
into
mov
cmpsb
pusha
insb
loop,pn
shll
ss
mov
adc
sbb
xchg
leave
es
xchg
mov
add
les
lcall
xor
xorps
shl
js
fildl
repnz
xorb
sbb
scas
and
and
sbb
pop
fwait
fwait
cmp
sti
ret
out
xor
cld
mov
sarb
iret
mov
add
inc
std
les
cmp
mov
pop
test
push
mov
movsb
and
xor
xchg
or
mov
lret
dec
pop
sti
movsb
fnstenv
add
cmc
sub
pop
push
pop
in
push
in
pop
jbe
gs
adc
mov
xor
cmc
pop
mov
add
adc
nop
fcmovb
cwtl
lods
orb
gs
xchg
jl
aad
movsb
inc
pop
sbb
sbb
pop
fcomps
mov
in
bswap
or
jae
mov
mov
sbb
lock
adc
xchg
es
ss
int3
cld
mov
or
sti
movsl
push
xchg
adc
pop
mov
subl
stos
sahf
inc
mov
or
mov
dec
scas
daa
pop
mov
in
cltd
fldt
mov
rcrl
fs
aaa
mov
dec
xchg
sbb
or
jb
dec
in
mov
mov
aad
sub
mov
sub
inc
sbb
dec
sti
hlt
mov
cmpsb
iret
fildll
jmp
loop
adc
mov
mov
adc
enter
pop
das
jbe
adc
enter
dec
popf
sub
ljmp
divb
enter
adc
nop
xor
or
add
les
shll
add
cmp
subb
mov
je
sub
add
fmull
push
add
cmp
fisubs
dec
jmp
sbb
scas
repz
nop
inc
mov
scas
mov
pop
jmp
hlt
fbld
scas
outsb
enter
sbb
push
arpl
out
jle
mov
add
into
pop
clc
std
scas
or
je
mov
in
into
inc
in
or
and
stc
movsb
rorb
push
xchg
cmpb
jge
pop
pop
push
popl
mov
jmp
add
popf
xor
fdivl
cld
ret
xchg
ds
ficompl
mov
sahf
lret
inc
or
push
pop
sbb
sbb
mov
cs
dec
shll
js
push
lods
sub
xchg
mov
jl
xor
lahf
push
adc
sub
xchg
sub
mov
jns
sbb
clc
or
xchg
jecxz
out
sbb
pop
or
cmp
repnz
lret
jne
xlat
xchg
inc
ja
inc
pushl
xchg
adc
mov
adc
sbb
incb
loope
pop
push
and
sub
das
call
xlat
fidivl
stos
pop
adc
mov
enter
cmp
mov
test
popa
jne
clc
jns
pop
fcmovnu
mov
and
loope
push
fistps
aad
or
fdivrp
push
pop
clc
iret
lock
andnps
cmp
sbb
sbb
jmp
pop
jl
aas
xlat
inc
lcall
adc
mov
ss
and
mov
out
stos
ljmp
nop
and
xlat
adc
dec
jg
outsl
into
sbb
adc
jnp
push
cmp
fisttps
sbbb
or
imul
push
xchg
dec
and
or
and
jecxz
inc
rcll
xchg
add
xor
dec
stc
shrb
dec
mov
jp
popa
sarb
mov
aam
pop
xor
pop
test
jbe
cmp
xor
xor
lcall
pop
cmp
jbe
mov
cwtl
mov
sub
xchg
jge
sub
xor
adc
sbb
daa
jmp
mov
add
push
push
fcomps
fimull
push
push
mov
sbb
add
sub
clc
insb
xor
pushf
add
jl
js,pt
xor
add
repnz
iret
push
cmp
pop
pop
mov
mov
add
cmpsl
adc
aas
push
lcall
sbb
add
mov
pop
je
push
test
lret
notb
xchg
dec
int3
ja
in
movsb
out
mov
sbb
push
in
movsl
test
cltd
test
and
jecxz
xchg
mov
push
enter
or
lret
or
or
add
cvttps2pi
fcmovbe
fnstcw
repnz
sbb
mov
sbb
data16
xchg
notb
dec
int
dec
cmp
cmp
pop
insb
das
or
add
subb
ja
dec
insl
dec
dec
xchg
jmp
adc
mov
psllw
shl
xchg
imul
add
cwtl
scas
arpl
mov
int
movsl
ret
mov
add
andb
mulb
fistps
aaa
inc
lahf
scas
fwait
cld
pop
mov
cmp
scas
icebp
test
jne
jae
dec
out
mov
dec
push
sbb
push
cmp
test
test
addr16
or
mov
inc
cmp
jg
sahf
and
mov
nop
inc
testb
lods
daa
imul
xchg
and
mov
loope
xchg
or
insb
pop
or
inc
mov
mov
aad
and
pshufw
add
mov
lods
add
dec
cmpl
sub
js
xchg
or
ret
cmc
outsl
sbb
scas
lcall
out
fsts
jb
or
mov
test
outsl
mov
scas
mov
stc
mov
xchg
xchg
sbb
idivl
cwtd
or
pop
data16
xchg
cmp
ja
fadd
adc
repnz
adc
out
adc
sbb
pand
mov
pop
fiaddl
add
sbb
add
sbb
pop
cli
ds
pop
adc
sbb
lcall
add
xorb
pop
ja
je
jge
dec
xchg
fs
xor
int3
adcl
push
push
das
pop
pop
push
out
push
imulb
sbb
and
das
pop
and
adc
xchg
cmp
aam
cmp
inc
adc
jmp
jbe
test
lahf
mov
pushw
test
dec
push
fsubr
xor
popa
jge
imul
and
mov
xor
div
and
jecxz
sub
push
sub
mov
add
fildl
and
fisttpll
xor
sbb
or
mov
jecxz
popf
test
push
xor
dec
push
and
push
andl
enter
nop
adc
or
sbb
pop
xchg
sbb
adc
pop
imul
mov
icebp
inc
add
data16
loop
add
push
movsl
sbb
mov
inc
iret
popf
mov
jno
push
lock
and
popf
sbb
xchg
xchg
cmpsl
adc
arpl
leave
jo
push
cs
movsl
pop
mov
es
xorb
ret
aas
jno
push
jmp
pop
add
mov
pop
je
dec
daa
call
ds
inc
mov
frstor
jb
sbb
insb
scas
int3
ficompl
jmp
lods
lods
cltd
add
add
clc
mov
in
rol
or
dec
jmp
jecxz
dec
icebp
orb
dec
xor
es
sahf
addb
mov
or
ds
xchg
add
mov
sahf
jl
pop
fwait
testl
mov
ja
je
loop
in
pusha
jmp
popf
dec
pop
call
ret
add
sub
ljmp
add
loope
sbbb
in
jle
sub
fildll
sub
push
lods
pop
ret
aas
mulb
jns
adc
dec
pushf
test
mov
push
inc
xor
clc
rcrb
ud0
popf
out
or
arpl
fcompl
sbb
inc
ss
xor
xchg
sahf
pop
cwtl
faddl
cmp
xor
ds
sbb
leave
testl
jb
dec
cld
mov
cmp
push
add
jb
clc
mov
jne
sbb
gs
fwait
icebp
imul
pop
lahf
push
hlt
repnz
fiaddl
adc
arpl
test
mov
fs
xor
call
mov
add
mov
popf
out
xchg
loop
push
xchg
push
test
jns
inc
inc
push
cld
inc
and
cmp
ja
rolb
ret
out
sbb
mov
add
and
sysexit
testb
add
fwait
sbbb
ss
addr16
fisubrl
adc
es
sahf
loopne
outsb
mov
pop
inc
es
push
or
iret
cmpsl
xchg
pop
xchg
scas
insb
push
sbb
f2xm1
sub
jl
xchg
cbtw
fbld
sub
insl
push
ret
ret
and
mov
jbe
mov
xchg
mov
dec
push
mov
inc
orl
dec
mov
frstor
sbb
dec
icebp
sub
dec
js
add
call
xchg
adc
out
sbb
test
inc
inc
loope
xchg
adc
mov
mov
in
pop
lcall
out
mov
lds
addr16
cld
shlb
adc
or
jb
xor
sub
or
mov
mov
ret
sbb
lea
test
adc
ja
imul
push
repnz
xlat
fmuls
adc
iret
and
ljmp
inc
sbb
insl
pop
int
pop
call
insl
mov
hlt
ret
out
test
int3
add
xchg
aam
add
fists
movsb
fs
out
xchg
cmp
loope
stos
repnz
out
add
sub
aaa
shl
or
pop
push
push
sub
pop
test
pop
jp
jecxz
inc
ja
jp
mov
and
js
rorl
notb
pop
dec
cmc
xchg
outsl
or
push
fs
add
hlt
sbb
cmpsb
add
lock
inc
loopne
fs
pushf
cwtl
call
xor
movsl
imul
decl
ljmp
sub
sbb
inc
loop
add
xor
lods
mov
roll
add
cwtl
iret
adc
jb
push
movsl
test
fcomps
mov
in
ljmp
cld
mov
sahf
or
out
stc
mov
jnp
sub
or
or
adc
adc
lcall
mov
adc
dec
cld
scas
jmp
xchg
and
aam
testl
movsb
inc
popf
add
and
lds
dec
sbb
dec
jo
and
or
mov
cli
fcoms
out
xor
mulb
inc
pop
mov
in
pusha
pop
dec
mov
sahf
shl
mov
xlat
es
rol
push
sbb
aas
xchg
jp
fistpll
int
loop
scas
out
dec
push
lock
inc
rdtsc
les
xor
repnz
sbb
es
xchg
repz
mov
adc
sub
cmc
mov
adc
xchg
push
cmp
fsts
dec
popf
shlb
imul
jmp
es
inc
loope
sub
jl
dec
int3
call
or
mov
jne
jmp
lds
loop
sbb
popa
fcomps
push
aas
mov
stos
ret
inc
incb
clc
test
xchg
adc
mov
push
cld
sar
mov
mov
xor
add
push
outsb
enter
lea
cmp
mov
xor
mov
aad
push
out
mov
stc
pop
decb
lock
pusha
mov
inc
sub
insl
dec
fiaddl
mov
les
outsb
mov
test
mov
pop
jg
jnp
adc
lret
xor
addl
lcall
les
xor
jo
cmp
mov
adc
lods
aas
imul
dec
push
movsl
or
int
xchg
jns
imul
jecxz
popf
orb
lahf
cs
cmpl
sti
mov
mov
or
lds
loope
xor
mov
dec
or
orb
xor
push
cmpsb
push
scas
gs
mov
stos
mov
xlat
das
mov
addr16
or
pop
push
les
jle
add
popf
or
jnp
xchg
xor
lea
pop
stc
aad
dec
mov
aas
shll
mov
mov
jle
inc
cmp
gs
decb
xchg
sub
fwait
sbb
leave
xor
sub
or
sti
pop
loopne
stc
mov
cmp
push
sbb
loopne
mov
ss
push
dec
inc
add
dec
mov
fdivr
cmpsl
lods
mov
jg
xchg
enter
pushf
pop
jbe
lock
fsts
jmp
loopne
pusha
hlt
sbb
xor
cli
test
push
and
dec
aas
jp
mov
mov
xchg
addr16
mov
add
xor
test
in
sbb
stc
fmulp
inc
stos
stc
xchg
mov
xlat
pop
lock
lahf
adc
jnp
or
push
xor
orb
and
adc
push
dec
cltd
mulb
jo
in
and
xchg
mov
fstpl
call
ja
fiaddl
dec
mov
jbe
in
add
push
mov
inc
insl
push
mov
sbb
mov
xchg
push
add
outsb
or
sti
lret
xchg
sub
jl
push
cwtl
push
inc
dec
pop
mov
jne
xor
adc
xor
push
cmp
repz
and
mov
sbb
adc
adc
push
hlt
jmp
sti
fisttps
sbb
push
push
pop
insl
sub
pop
ret
aam
add
bound
mov
mov
mov
push
xchg
icebp
push
xor
daa
or
inc
lcall
lods
inc
inc
jecxz
and
lea
popf
mov
bound
push
jno
bound
shr
adc
cmpsl
in
gs
sbb
jnp
mov
hlt
iret
mov
outsb
xor
sahf
cmp
xchg
pop
mov
sti
call
repz
cmp
mov
pop
adc
add
leave
test
loopne
pop
inc
cld
outsl
push
scas
mov
andl
jb
push
adc
or
sbb
ja
pop
roll
rorl
popf
mov
orb
loop
lret
fdivrs
jge
inc
repnz
test
mov
das
sar
mov
add
mov
and
test
in
lock
sub
push
ja
pop
outsl
lahf
std
lcall
pusha
movsl
pop
dec
mov
pop
mov
jge
jge
xchg
aam
fdivs
push
and
xchg
loop
mov
mov
xor
mov
push
fisttpll
jmp
push
sahf
pop
jge
push
push
xor
pop
clc
notb
int
xchg
mov
in
sbb
or
flds
outsl
push
mov
mov
jp
mov
cmpsb
test
push
mov
dec
mov
fcoml
nop
fsubl
scas
jbe
xchg
sbb
sti
cmp
fisttpll
push
loop
pop
or
pop
adc
xlat
or
push
insl
daa
dec
mov
fmul
cmp
mov
add
les
icebp
pop
pusha
jbe
aam
sub
int3
inc
gs
sub
push
aad
rolb
ror
jo
sub
decb
cmp
cmp
rcll
and
fwait
sbb
cmp
cmp
or
push
jmp
mov
and
cs
mov
in
cmc
shlb
sbb
test
aam
push
xchg
xchg
mov
push
push
inc
mov
and
push
add
sbb
cmp
sbb
cmp
dec
mov
sbb
xor
push
push
mov
inc
jp
int3
cmp
and
ss
nop
popa
cmp
insl
enter
test
outsl
mov
xchg
push
lret
cmpsb
rolb
cmc
cmp
scas
adc
test
dec
pop
sub
loopne
cwtl
jp
fisubl
cmc
jmp
sarb
cmp
jg
imulb
mov
repnz
or
and
xchg
adc
loopne
daa
loopne
pop
call
in
sub
mov
hlt
mov
arpl
xor
mov
mov
dec
push
push
cmpb
arpl
and
xchg
sub
sar
mov
js
push
in
aas
sbb
jns
lds
in
stos
jo
lahf
outsl
insl
push
scas
push
ljmp
xchg
inc
xchg
mov
pop
fcomps
clc
sbb
fisubrs
into
cs
jnp
jbe
sub
push
pushf
xchg
inc
test
fldenv
lods
rorb
jno
jo
and
add
call
and
mov
or
or
fucomi
mov
call
jb
jge
mov
movsb
enter
insb
xor
ret
sub
mov
xchg
leave
dec
pop
adc
aam
fidivs
adc
mov
imul
int
mov
sub
push
loope
lret
add
mov
jmp
and
call
jp
jmp
ficompl
ss
cwtl
repz
sub
push
xchg
sbb
addr16
adc
adc
repz
les
mov
mov
xchg
cs
clc
xorl
sub
scas
into
cltd
cmp
das
mov
fsts
xor
iret
xor
adc
sbb
cmp
lock
aas
mov
jge
fs
into
jbe
daa
rcrl
test
dec
jnp
enter
in
in
jg
imull
mov
testl
adc
into
sub
les
aas
mov
cltd
mov
sub
pop
dec
call
mov
xor
jl
push
add
xchg
jns
push
or
pop
je
jl
adc
adc
inc
mov
cmp
jo
inc
push
adc
push
popa
sbb
cmp
in
add
xlat
inc
lret
pop
je
fsubl
adc
mov
stc
test
pop
or
aam
mov
xchg
mov
roll
into
jmp
adc
pop
inc
lods
mov
push
ffree
xor
sbb
pop
lds
mov
stos
sbb
pop
push
scas
sarl
jle
gs
sub
leave
add
mov
jmp
cltd
inc
mov
frstor
and
xchg
lods
mov
popf
push
ss
out
mov
jmp
fwait
inc
js
bound
or
sarl
mov
xchg
push
inc
xchg
mov
and
mov
sbb
in
mov
mov
push
mov
adc
ss
out
fiaddl
sub
cwtl
push
adc
arpl
fisubrl
adc
shlb
out
xchg
jle
int3
inc
push
pop
into
sti
or
sti
daa
aad
cmpsl
mov
mov
mov
jp
xchg
enter
add
daa
out
andb
cmpsb
adc
mov
push
inc
cmp
jle
jns
in
mov
lds
arpl
push
data16
in
lods
mov
cltd
fcoml
hlt
lds
lods
dec
mov
mov
add
xlat
lods
outsl
xor
xor
int3
and
and
push
or
or
push
out
inc
xchg
out
sub
push
sub
js
cmp
clc
sub
sbb
mov
ret
test
shl
inc
pop
sahf
jne
inc
cmpsl
inc
test
daa
cld
jle
cmp
adc
repz
mov
test
ret
pop
lret
in
notb
adc
pop
cmp
mull
inc
inc
cmpsb
popf
stc
push
leave
xchg
enter
data16
ss
clc
push
ljmp
bound
lret
and
pop
push
cmc
xchg
or
lods
mov
stos
sub
cmp
mov
pop
cmp
xchg
stc
xchg
cmc
cltd
lds
stos
dec
cmp
jno
mov
lods
jbe
call
ljmp
sbb
insb
or
mov
test
scas
or
ss
sbb
add
push
mov
adc
dec
outsb
ret
dec
jo
add
push
mov
stos
inc
negl
jno
test
pop
push
jbe
rol
arpl
inc
les
jns
cli
sub
mov
mov
cltd
pop
jmp
dec
sub
adc
xor
add
xlat
jg
shrl
fildll
push
mov
leave
shl
fyl2x
push
mov
sbb
or
leave
or
push
add
popf
and
lea
adc
out
jb
push
jmp
push
sbb
cs
xchg
or
xchg
dec
dec
add
insb
mov
out
mov
pop
mov
dec
pop
mov
jbe
aad
lock
push
insb
dec
add
jmp
pop
sbb
jno
lea
sub
aam
lods
in
mov
push
pop
dec
imul
inc
gs
inc
jbe
pop
mov
and
xor
int3
bound
cltd
cmpsl
xor
sbbl
icebp
in
stc
test
adc
dec
add
xlat
mov
imul
je
xchg
cltd
lods
mov
mov
jmp
push
pop
xor
or
xchg
testl
adc
arpl
in
and
and
cmp
ret
sbb
test
dec
rsm
jmp
imul
scas
xor
jo
mov
xchg
cmpsl
mov
add
aam
xorl
in
push
xor
jmp
es
mov
jmp
xor
test
push
pop
xor
popf
cmp
daa
arpl
lock
aad
mov
and
push
jbe
mov
pop
mov
in
shrb
in
mov
les
adcb
bswap
xchg
jg
dec
push
out
jne
insl
out
and
clc
mov
mov
daa
notl
xor
inc
jp
imul
push
pushf
cltd
jmp
lcall
and
sbb
sbb
push
jle
xchg
out
sahf
mov
sub
inc
sub
jp
daa
xor
out
jbe
push
dec
rorb
mov
out
sbb
fildl
les
imul
aas
mov
push
sbb
cmp
jge
sar
out
filds
fwait
mov
inc
arpl
mov
shlb
xchg
insl
popl
sbb
push
pop
adc
adc
lret
lods
sbb
xlat
dec
jle
cmp
loopne
push
into
int3
loopne
xor
shlb
jno
push
push
adcl
shrl
dec
ret
jmp
sti
sub
xchg
cmpsb
jno
lahf
adc
rcrl
push
in
or
or
fisubrs
jo
xchg
pop
stc
stos
fwait
pop
test
and
test
adc
inc
pop
inc
xchg
out
bndldx
pop
sbb
jbe
sbb
mov
inc
iret
mov
popf
scas
adc
push
xchg
mov
mov
shll
xor
mov
pop
ds
ret
jbe
ret
cld
mov
inc
data16
cmpsl
addr16
enter
dec
xchg
imul
xor
iret
call
outsl
mov
in
push
mov
and
sub
dec
or
jl
stc
mov
inc
pop
jne
mov
mov
push
inc
std
jb
and
xchg
push
mov
pop
jnp
jp
adc
sub
in
leave
lea
into
cs
lahf
push
out
and
call
mov
push
test
loop,pn
enter
mov
scas
or
add
jge
test
sub
ljmp
mov
and
fildll
and
clc
stc
and
jnp
popa
fcmovnbe
mov
aad
lret
lock
cwtl
sub
mov
movsb
cmp
stos
sub
inc
das
mov
lods
mov
fsubp
jo
and
mov
adcb
jno
mov
ret
mov
sahf
inc
paddusb
jne
in
lds
dec
inc
pop
jl
xchg
lcall
daa
movsl
or
es
leave
pushf
pop
add
jo
gs
mov
test
add
inc
sub
pop
adc
push
jg
mov
lods
xchg
stc
pop
adc
repnz
xor
mov
testl
jle
and
mov
inc
scas
ljmp
inc
stc
mov
mov
and
jmp
sarl
or
insb
push
into
movsb
dec
not
decb
cmpsl
popf
sbb
ret
mov
cltd
js
cld
mov
jmp
iret
pop
add
stc
int3
push
orb
stc
dec
inc
sub
and
inc
push
pop
pop
pop
aad
and
movsb
dec
jns
and
xor
sub
jl
inc
add
pushf
lods
ret
inc
sub
loopne
sbb
fwait
and
pop
mov
push
aam
push
call
shlb
pop
andl
pop
mov
insb
cmp
aam
insb
push
xchg
lcall
int3
xor
or
jl
push
fsubp
inc
and
clc
and
aad
add
sub
sub
sahf
add
push
outsl
mov
jne
push
imul
sbb
and
insl
mov
xor
test
shrb
cmc
std
push
popa
jmp
in
fnsave
test
fwait
push
mov
mov
loop
push
xchg
scas
adc
xor
movsl
mov
rorb
fadds
ds
lods
movsl
xchg
mov
ret
pop
lock
call
call
push
fcoms
loop
mov
inc
or
aaa
sbb
xchg
xor
jmp
test
out
mov
insl
adc
sub
xrstor
out
mov
adc
in
push
iret
test
aad
iret
rol
pop
out
add
arpl
jmp
in
das
aaa
scas
imul
lea
pop
and
mov
popf
adc
xchg
hlt
or
les
dec
in
jnp
aam
mov
mov
mov
imul
test
stc
dec
insb
loop
jns
mov
ds
shrb
sub
push
sub
fcompl
jmp
stc
aam
aam
mov
dec
ret
xlat
dec
pusha
stos
insl
lcall
adcb
pop
sbb
push
cmp
subl
push
test
inc
or
xchg
lret
lcall
inc
fstpl
stc
leave
push
xor
xor
jb
cmp
mov
shl
pop
sub
fdivrs
aad
stos
add
add
repnz
push
loop
roll
cmp
dec
faddl
dec
push
adc
inc
fcmovne
jle
mov
sbb
cltd
or
inc
cmp
sbb
cmp
test
mov
xchg
mov
cmpsl
ret
sbb
xchg
push
aaa
jb
dec
pushf
add
loop
test
divb
dec
lcall
mov
lds
push
mov
dec
dec
pop
and
test
xor
push
push
push
rclb
das
push
lods
sarl
mov
adc
adc
adc
lea
pop
inc
adcb
lea
or
push
inc
jns
vzeroupper
test
test
test
adc
andl
mov
adc
aad
ss
int3
int3
mov
and
into
adc
xlat
mov
call
sbb
cmpsl
lds
adc
fldl
jae
inc
int3
je
lods
les
pop
add
lcall
movsl
sbb
mov
out
icebp
inc
and
movsb
stos
xor
push
shll
inc
imul
iret
or
sub
lods
or
imul
mov
pop
add
jnp
aam
xchg
push
das
loopne
outsb
dec
pop
jne
stos
jmp
mov
shll
xor
stc
je
xchg
lods
adc
pop
scas
mov
xchg
insl
hlt
fiadds
sub
arpl
movsl
data16
fucomi
jnp
pop
insl
int3
add
and
dec
leave
pop
jmp
pushf
xlat
sbb
mov
sub
push
aaa
leave
inc
fsub
pop
pop
andb
jae
pop
je
mov
inc
and
orb
adc
xor
shlb
lret
push
xchg
sub
pop
ret
pusha
movsb
mov
push
push
inc
js
xchg
sbb
pop
pop
mov
or
or
mov
xchg
lea
xor
push
in
jmp
fisubl
mov
fwait
mov
jecxz
xchg
add
mov
mov
sub
movsb
icebp
aad
jnp
cmp
fadd
dec
xchg
mov
aam
test
mov
scas
sarl
lret
and
xchg
pop
cmp
pop
lret
test
pop
out
or
std
sahf
rorb
or
add
in
inc
jns
shlb
sbb
xor
inc
xchg
sarl
jecxz
inc
fdivs
sub
dec
imul
add
push
or
xchg
adc
or
mov
mov
xchg
scas
int
xor
inc
iret
scas
rolb
movsb
gs
mov
mov
fsts
mov
jg
addr16
out
or
inc
mov
push
andl
scas
mov
lods
mov
mov
sub
or
mov
fsts
cmp
push
mov
js
sbb
dec
cmp
add
or
jnp
call
mov
adc
mov
cs
jo
pop
mov
sub
add
adc
mov
scas
mov
cwtl
addl
or
call
sti
mov
cmp
imul
stos
adc
mov
sbb
aam
xchg
sbb
dec
mov
adc
jl
jae
ret
xchg
daa
popa
insb
add
and
sbb
push
ffree
sub
jnp
inc
cmc
mov
jmp
shl
push
push
repz
xor
addr16
test
sub
or
xor
cmp
sbb
int3
rclb
sub
in
mov
sbb
mov
int
ficoml
jns
lret
dec
mov
add
or
xor
dec
clc
pop
in
xorl
aaa
xchg
jge
adc
jb
cmp
mov
mov
inc
test
adc
insb
sbb
popl
addb
and
mov
xor
pop
filds
dec
pop
mov
ss
cld
add
rorb
cmp
icebp
jmp
aad
push
xor
loop
dec
or
add
and
addl
cwtl
jb
pop
mov
scas
or
clc
lea
jl
mov
dec
in
sbb
scas
mov
add
out
aad
mov
mov
aad
outsb
rcl
jl
push
jns
push
nop
orl
mov
mov
add
adc
mulps
mov
inc
shl
mov
adc
or
bound
sub
add
cld
cmp
out
jecxz
or
mov
and
jle
stos
lahf
ds
inc
dec
mov
shr
ljmp
adc
mov
jecxz
mov
ja
adc
push
roll
fcmove
jg
xchg
sub
mov
dec
enter
fcoms
adc
out
aaa
add
in
dec
sbb
out
lds
clc
ljmp
or
inc
cmpsl
jle
xor
int
push
and
inc
sbb
push
push
and
stos
test
pop
scas
mov
add
push
inc
mov
mov
sbb
lds
mov
rol
dec
mov
add
lahf
mov
add
cmpsb
and
mov
test
fldt
scas
add
outsb
push
neg
push
lea
cmp
mov
mov
dec
cs
rcrl
mov
mov
sahf
mov
mov
rcr
inc
jbe
test
cmp
arpl
push
inc
out
sub
xor
or
jnp
bnd
cli
mov
out
mov
mov
jnp
jns
push
rcrl
test
xlat
adc
push
stos
insl
lahf
shrb
insl
adc
pop
lods
andb
in
mov
jmp
add
mov
test
stos
ja
xor
add
and
jnp
sahf
and
sub
sbb
leave
hlt
in
xor
ret
sahf
int
pop
fdivrl
inc
aas
mov
dec
rcll
fs
pop
sub
gs
jecxz
and
cmpsl
fmull
xchg
daa
and
in
cmp
mov
sub
sub
dec
test
dec
push
and
pop
pop
mov
pop
pop
mov
fnstsw
xor
mov
rcll
push
repnz
jo
cmc
sub
daa
push
and
jle
popf
rolb
rol
sbbl
inc
push
add
or
inc
popf
dec
lock
xchg
inc
je
popf
rcrl
xor
push
mov
adc
mov
mov
jp
jb
rcll
test
das
and
xchg
lret
xchg
mov
xor
mov
mov
mov
int
add
jl
xchg
sub
push
dec
imul
push
pop
scas
iret
sbb
mov
mov
jo
or
push
adc
and
sbb
movb
xor
outsl
rolb
mov
ret
shrl
fistpll
mov
je
pop
mov
xchg
cmpsl
loop
push
mov
xchg
lds
sbb
inc
cmp
pop
movsb
and
or
xor
gs
sbb
jmp
lock
mov
dec
and
lds
adc
push
jg
dec
adc
inc
sub
xlat
add
arpl
call
ss
inc
lret
xchg
push
leave
lds
sub
fdivl
or
shl
xchg
jecxz
stc
shl
pop
stos
cwtl
sbb
and
push
add
paddd
jae
std
mov
cld
jecxz
rcl
sub
inc
popa
stos
jp
dec
xchg
js
xor
fcmovb
sbb
fldt
std
fisubs
ss
push
mov
xchg
mov
pop
xor
push
ljmp
or
push
into
bound
repnz
in
std
mov
rcr
or
mov
mov
or
call
into
xchg
xor
adc
cmpsb
repnz
and
daa
cmp
mov
imul
dec
push
push
mov
scas
dec
inc
xchg
paddw
lea
fistps
pop
decb
sahf
cmpsb
ret
xor
xor
and
mov
mov
push
gs
je
cmp
jmp
sbb
movsb
imul
add
cmp
sbb
push
pusha
fs
flds
das
sub
fprem1
mov
scas
xchg
iret
les
inc
or
and
push
or
scas
lea
jnp
jp
fwait
fs
add
jo
mov
mov
cmpsl
fisubl
frstor
cmpsl
fwait
sbb
ror
and
roll
aad
push
test
loop
mov
fdivl
addr16
test
nop
pop
cmp
lahf
xchg
mov
sahf
out
cmpsl
adc
lds
push
xchg
fnstenv
adc
or
sbb
xlat
fmuls
mov
cltd
push
add
or
lret
sbb
out
bound
loop
or
lahf
cmp
push
lock
and
or
sbb
mov
scas
xchg
sub
sub
int3
mov
adc
cmpsb
scas
dec
cs
decb
arpl
push
inc
mov
cld
gs
call
jb
icebp
ret
mov
lods
xchg
ret
jns
popf
jb
adc
clc
insl
test
dec
push
sbb
mov
in
enter
pop
pop
outsl
mov
dec
sub
int
jae
adc
xchg
repnz
xchg
jo
fs
jecxz
adc
cmp
movsl
dec
cmp
adc
xor
mov
cmp
outsb
lret
dec
je
xchg
push
jmp
lcall
sbb
call
imul
mull
scas
or
sub
push
mov
jae
inc
pop
jae
nop
push
jmp
lods
or
jg
fprem1
outsl
shlb
pop
inc
and
lret
inc
aam
push
lods
loopne
dec
lock
movl
leave
push
ds
out
sub
push
or
aaa
or
xchg
out
lods
test
dec
inc
aaa
mov
fcom
ret
pushf
subb
or
std
dec
mov
pop
mov
cmp
fimull
lret
ret
pop
jmp
adc
xchg
pop
xor
mov
cs
cmc
into
and
pop
pop
nop
pop
dec
sbb
dec
lcall
adc
ljmp
stos
dec
lods
pop
lret
sbb
mov
insl
cli
movsl
push
in
mov
push
mov
push
lea
or
js
push
inc
jp
jecxz
xchg
dec
push
rcll
add
andl
push
sbbl
scas
mov
pop
int
and
ljmp
push
or
das
hlt
fisttps
add
sbb
push
mov
cwtl
and
les
out
mov
dec
jae
das
imul
outsl
ss
aaa
loopne
popf
pop
mov
mov
es
jmp
and
mov
pop
jb
adc
inc
inc
xor
daa
xchg
push
frstor
mov
sbb
imull
add
push
inc
ficomps
jnp
repnz
or
fdivl
in
mov
test
mov
es
push
out
or
adc
sub
and
dec
icebp
add
std
mov
mov
add
and
lods
dec
je
push
nop
pop
add
push
add
sub
xchg
mov
push
adc
jae
imul
mov
popf
add
pusha
or
adc
iret
push
jno
jmp
mov
mov
push
sysret
aas
scas
in
pushf
into
lock
adc
imul
dec
push
mov
cld
and
inc
jmp
add
push
ss
inc
std
call
xor
pop
movsb
dec
cs
jg
fcmovne
xor
fildl
add
push
adc
xchg
jge
sub
test
mov
mov
mov
ret
jge
cmpsl
in
or
push
ja
ret
nop
push
or
sub
fcoms
fbstp
in
shlb
push
push
push
adc
xchg
ljmp
mov
jae
mov
add
add
pop
mov
xchg
fs
arpl
xor
or
cmp
insb
xchg
test
not
push
push
mov
xchg
cmpsl
aad
sub
and
repnz
mov
enter
test
movsl
or
rclb
sar
lea
cmp
je
mov
lret
adcl
add
xchg
adcl
adc
stos
pop
mov
rolb
mov
imul
leave
in
push
lahf
aam
sar
negb
xchg
add
inc
popa
subb
xchg
ds
and
jo
sub
addr16
lods
repz
clc
sub
or
dec
mov
into
lahf
aad
rorb
push
js
cmpsl
adc
lds
cli
into
bound
ja
daa
inc
push
lcall
gs
pop
cwtl
cltd
add
jbe
stc
les
and
testl
roll
and
shl
mov
push
add
in
mov
sbbl
lods
push
mov
cmp
add
inc
out
ficoms
mov
imul
ss
popf
cmp
sub
jnp
mov
movsb
dec
sub
adc
xchg
dec
adc
cmp
test
adc
or
pop
daa
or
mov
jmp
iret
jb
mov
ffree
cltd
scas
pop
aam
pop
hlt
add
pop
mov
cmp
jl
aad
cmp
xchg
adc
adc
mov
sahf
test
xor
sub
inc
mov
cmc
inc
call
xor
ds
sub
fildll
stos
jl
sbb
jmp
add
and
push
call
or
imul
mov
adc
sub
or
cmp
adc
sbb
xchg
inc
push
ret
xchg
or
pop
sub
jno
shlb
jmp
in
jg
sub
inc
inc
pop
insl
jne
sbbb
out
movsl
pop
imul
les
mov
jle
loopne
push
jns
push
dec
insb
push
fisttpl
push
adc
lcall
dec
imul
mov
xlat
push
icebp
or
icebp
push
lds
dec
inc
test
pop
dec
aam
inc
xchg
into
xor
mov
pusha
mov
push
push
repnz
fwait
sub
xchg
cmp
adc
out
or
mov
mov
mov
scas
add
pushf
rolb
dec
pop
or
and
push
mov
dec
cli
shrb
adc
push
fwait
xchg
sarl
and
cmp
lea
push
int
aaa
dec
movsl
mov
sbb
jne
insl
sti
mov
mov
mov
mov
lods
stc
gs
add
movsl
repz
inc
lds
jo
mov
inc
ljmp
mov
mov
xorl
psubusb
adc
nop
cwtl
inc
fadds
and
movsl
mov
movsl
jmp
lahf
fbld
inc
in
jg
sub
loop
enter
gs
and
shr
mov
jmp
push
and
out
leave
mov
jge
icebp
ja
clc
cwtl
adc
jnp
mov
mull
loopne
cli
and
scas
mov
jno
popl
dec
dec
mov
idivb
testl
dec
lods
fmull
push
push
loop
sti
push
mov
divl
int
mov
setle
out
rol
dec
push
gs
adc
das
xor
in
or
mov
lock
std
movl
mov
arpl
cmpsl
sbb
movsl
aam
pop
inc
xorb
dec
pushf
pop
fsts
popf
dec
orl
inc
aaa
lcall
push
mov
pop
mov
mov
pop
pop
pushw
jns
xchg
and
inc
call
aas
adc
rcl
popa
aaa
lahf
outsb
test
jg
in
sub
push
xor
cs
and
or
mov
jne
idivb
subl
loop
jae
sub
je
out
or
leave
cmpsb
lret
xor
sub
xor
mov
push
fs
push
lret
addb
rcrl
xor
into
jge
jb
imul
push
hlt
das
mov
jbe
xchg
stos
lret
mov
scas
pop
ss
pop
cmpsb
lods
adcl
inc
cmpsl
dec
sbbl
inc
dec
hlt
mov
int
test
push
scas
or
sbb
push
xchg
adc
in
xor
loope
daa
xchg
cmpsb
stos
testb
dec
xchg
sbb
sbb
repz
sub
outsl
push
jbe
ds
or
mov
rclb
pop
and
xor
sbb
mov
dec
repz
sti
mov
dec
push
cmpb
outsb
popf
outsb
adc
mov
adc
pusha
and
jge
ror
push
inc
pop
lods
mov
data16
mov
enter
jle
je
pop
mov
mov
xchg
test
mov
jp
cmp
dec
nop
sbb
rcrb
xor
mov
and
aaa
pop
or
mov
mov
movsl
mov
jmp
data16
jb
push
add
inc
shrb
cmp
push
jnp
or
xchg
lock
fcoms
sub
cltd
dec
cmp
sahf
dec
loopne
loope
lea
repnz
push
inc
and
mov
inc
orb
fwait
mov
test
or
or
push
xchg
int
nop
mov
add
adc
sti
movsl
shlb
jmp
add
xchg
std
lret
or
xchg
push
ds
add
iret
ja
dec
sbb
jns
sub
outsb
aaa
mov
adc
or
in
dec
cmp
add
popf
shll
test
mov
cwtl
dec
dec
jno
inc
adc
scas
inc
in
push
cltd
outsl
cmp
or
adc
arpl
test
mov
xchg
push
push
xor
in
or
lret
jo
imul
jecxz
sub
popa
les
sbb
and
pop
xchg
xor
psrad
dec
les
mov
rcr
xorb
mov
or
les
rcll
mov
sahf
pop
fwait
pop
push
and
mov
lret
and
push
mov
mov
loope
bound
cmp
mov
insl
cmp
sub
test
inc
jne
icebp
inc
push
adc
sub
xchg
lock
rcrl
xor
mull
or
sbb
dec
sti
dec
push
pop
pop
dec
mov
or
lret
lea
pop
ret
scas
sbb
icebp
adc
xchg
pop
jno
mov
test
fwait
repnz
lcall
movsl
popf
mov
pop
sbb
std
lods
mov
jb
mov
in
mov
rorb
insb
incl
cmp
fldcw
jne
sbb
push
mov
or
adc
adc
ja
ljmp
xchg
adcl
addr16
adc
lcall
pop
rolb
pop
add
inc
mov
movsl
pop
sbb
sub
push
or
movsb
daa
jns
shl
and
movsl
cmpsb
pushf
std
push
dec
je
jp
out
cmp
clc
add
lret
cmp
jno
adcl
inc
push
hlt
xor
in
mov
add
dec
pushf
jmp
rep
es
xorl
and
mov
int
and
fstp
cltd
or
add
icebp
in
out
cmp
dec
xor
inc
sbb
push
sti
cltd
fdivrl
scas
jge
mov
adc
sahf
xor
mov
cmp
pop
pusha
inc
fs
cmp
enter
cmpb
add
or
inc
push
dec
xor
jmp
clc
loope
and
sub
mov
dec
or
push
jp
gs
scas
push
aam
inc
xchg
mul
adc
mov
adc
loop
andb
not
sub
clc
xchg
inc
lret
push
test
mov
push
insb
icebp
sub
int
inc
cwtl
call
adc
ljmp
fstps
ret
je
les
roll
xor
push
xchg
pushf
jns
mov
in
xchg
das
sbb
dec
lock
adc
sub
dec
mov
jp
add
xor
push
or
adc
dec
push
inc
or
mov
scas
push
mov
out
ja
and
dec
andb
mov
or
mov
xor
shlb
popa
pop
enter
negl
xchg
dec
inc
sub
cmp
inc
adc
or
insl
rorl
pop
hlt
clc
mov
mov
and
popfw
cs
and
pop
xlat
pushf
pop
in
out
lds
addb
mov
in
ja
clc
shrl
and
adc
jb
and
aad
sub
stos
xlat
cvtps2pd
pop
xor
mov
sbb
adc
movsl
rcrb
cld
call
or
loop
mov
jno
test
fildl
incl
mov
clc
int
sahf
xor
int3
out
and
cli
in
dec
xchg
inc
fs
mov
push
lret
rcrl
push
add
mov
inc
sub
aaa
scas
out
adc
pavgw
sub
out
jns
out
fiadds
rorb
jbe
adc
leave
es
xchg
pop
cltd
push
xchg
add
movsb
das
pop
test
outsl
dec
or
pop
cmpsl
cli
cli
leave
mov
stc
dec
icebp
or
addb
add
lea
lea
movlps
xor
hlt
add
pop
xchg
pop
push
notl
lret
push
adc
repz
in
mov
cld
ja
push
jmp
sahf
push
or
xor
and
jge
adc
xchg
sub
jbe
lods
push
in
add
xor
data16
jb
ficompl
mov
addps
push
mov
jae
nop
and
dec
loop
aad
cmp
jg
add
mov
call
xchg
xlat
repz
pop
jmp
jo
mov
sub
cmp
and
cmpb
dec
shlb
out
cmc
fucomip
aad
jnp
dec
popa
lods
popa
pop
daa
gs
dec
inc
pop
push
adc
and
mov
sub
cmpl
sub
fisttpll
push
cwtl
adc
ret
ret
int3
mov
insb
test
sub
xchg
lahf
inc
dec
sbb
cmpsl
push
push
add
aas
inc
gs
jg
push
mov
inc
lds
xchg
mov
in
xor
and
icebp
push
jns
imul
cs
cmp
mov
xchg
add
adc
sahf
inc
das
sbb
cld
out
addr16
inc
bswap
jle
and
xchg
pop
xchg
jp
cmpsb
testb
mov
and
dec
inc
hlt
das
cmpsb
insb
add
pushl
ljmp
add
cmp
sub
or
imul
and
pop
dec
sub
jp
adc
in
or
ret
scas
fst
adc
sub
jne
mov
or
xchg
out
lds
sar
jmp
xor
cmp
cmp
mov
pop
bound
inc
in
pop
cltd
dec
or
in
lret
fsts
in
ljmp
cmc
jno
push
xchg
xchg
push
adc
subl
ss
xchg
int
shl
aad
push
mov
xor
cmc
fadds
inc
loop
imul
test
cmp
movsb
lods
push
pop
adc
add
or
addr16
jge
js
ret
and
rcr
pusha
int3
ret
sbb
mov
push
fwait
xchg
pusha
cmpsb
andl
insb
fimull
dec
lahf
pushf
dec
push
inc
mov
and
mov
push
daa
jmp
arpl
cmp
fadd
and
cmpsb
or
adc
mov
xchg
adc
mov
jg
jo
outsb
out
xorl
out
xchg
ret
cltd
push
jo
sti
push
add
push
les
inc
cwtl
dec
ds
push
pop
sti
push
ret
daa
pop
cmp
clc
mov
pop
lahf
jbe
jge
in
adc
mov
lds
sbb
aaa
jbe
data16
jp
mov
andl
mov
dec
mov
dec
add
mov
xchg
jne
clc
add
sbb
aaa
in
pop
mov
add
fcoml
nop
insl
push
inc
add
sub
enter
push
push
popa
test
imull
sub
adc
cmp
shll
dec
ret
imul
arpl
and
in
dec
pop
push
fs
int3
idivl
pop
stos
outsl
bound
daa
test
dec
mov
hlt
in
mov
out
int3
clc
sub
push
sbb
pop
iret
or
cmp
push
mov
shlb
mov
add
dec
aas
cli
mov
sti
stos
dec
xchg
or
push
dec
adc
les
insl
adc
test
adc
inc
dec
into
lds
or
xchg
ret
icebp
lahf
sub
lahf
bound
iret
dec
ret
fs
mov
enter
insl
dec
in
and
jae
and
push
loopne
lds
lods
xchg
repz
sbb
jp
loopne
icebp
mov
and
pop
add
push
daa
fcomp
xchg
fimull
mul
bnd
xchg
outsb
and
sub
or
fsubs
mov
test
pop
push
or
loop
push
inc
decb
xor
mov
adc
lock
dec
enter
cmp
fistpl
popl
in
iret
insb
push
push
sbb
rolb
lret
lods
rcll
shlb
push
mov
sub
insl
dec
imul
cmp
mov
jg
jg
adc
adc
js
mov
push
mov
in
call
or
rorb
push
inc
lock
xlat
jne
aad
mov
aam
jecxz
and
add
cwtl
and
outsb
inc
test
bound
mov
mov
cwtl
imul
lea
mov
cs
in
jp
xchg
iret
popf
pushl
jl
and
jne
push
jne
leave
lahf
std
scas
xchg
jg
inc
mov
fmull
add
pop
xor
mov
lods
dec
cld
sahf
enter
ficoml
mov
or
jns
xchg
imul
jns
cmpsb
pop
movsb
mov
sub
outsb
dec
fcmovb
jns
ret
push
dec
and
roll
push
lds
ja
and
sbb
clc
das
xchg
adcl
mov
xor
rcl
out
je
or
in
lahf
cmpb
pop
cmp
dec
into
push
jmp
sbb
mov
or
into
xchg
repnz
lods
cmp
sahf
repz
insb
out
ficompl
into
cmp
ret
adc
push
xchg
test
fimuls
add
imul
jns
stc
or
in
jmp
hlt
mov
cmp
in
jl
repz
lods
pop
jb
adc
or
mov
add
lahf
das
iret
hlt
cltd
ss
loop
jo
ror
popa
cmp
ret
inc
das
adc
cmp
xchg
dec
jne
jno
cld
lahf
int
sahf
outsl
dec
negb
or
sub
mov
adc
or
shrl
lahf
bound
push
add
jp
or
mov
xor
mov
mov
mov
scas
scas
cmp
cmpsb
into
or
mov
sub
rorb
mov
es
sbb
out
punpckldq
dec
pop
sub
sub
data16
push
inc
in
cmovnp
jns
int
aaa
and
adc
in
add
gs
fiadds
pop
sbbl
imul
dec
and
pop
hlt
push
mov
mov
push
lods
cmp
scas
sbb
mov
in
data16
lock
pop
xor
cli
lods
in
prefetcht0
jp
dec
sub
hlt
mov
int
es
xor
cmp
out
mov
fwait
hlt
or
dec
push
xor
testb
leave
divl
cld
jecxz
jmp
neg
fistpll
pop
jo
xor
cmp
or
je
jns
dec
ret
nop
mov
mov
lea
jbe
xchg
mov
jno
jnp
sub
rorb
lahf
xorl
shrb
ds
in
jo
psrlw
adc
add
addl
aad
clc
jae
jnp
xchg
testl
cmpsl
jge
test
js
jle
imul
pop
and
outsb
ficoms
mov
pop
repz
scas
pop
fwait
add
dec
mov
add
jns
adc
push
pop
int3
pop
cmp
lcall
std
xlat
push
lods
in
or
icebp
cwtl
loope
push
stos
out
imul
outsb
jmp
xor
mov
jne
cli
xlat
aad
jbe
pushf
add
mov
xor
int3
adc
push
repz
add
xor
add
xor
ds
pushf
aas
mov
ficompl
loopne
scas
enter
mov
fstpl
sbb
mov
pop
jae
mov
pop
push
out
or
push
jbe
adc
xchg
in
jb
inc
inc
inc
es
iret
jmp
out
push
push
ds
les
jne
dec
cmp
mov
int
call
out
sbb
sbb
testb
dec
clc
ds
lods
jle
xchg
inc
or
mov
push
mov
ljmp
xorl
rorl
jl
test
std
pop
sub
loopne
stos
popa
cmp
leave
mov
pop
sbb
add
pop
lods
roll
imul
or
jae
jae
xchg
inc
mov
pop
dec
sbb
inc
call
mov
xchg
pop
jbe
xchg
int
dec
aam
adc
repz
mov
mov
andb
push
ja
xchg
mov
inc
and
sarb
mov
dec
cli
sarb
neg
aam
mov
pop
xchg
xchg
xchg
cmp
cmpsl
push
cmp
das
mov
ja
mov
xchg
mov
sub
xorl
pop
jle
push
push
adc
push
mov
test
mov
into
stos
adc
xchg
mov
pop
dec
mov
dec
push
adc
adc
dec
xor
outsb
mov
cmc
dec
bound
add
jl
pop
mov
iret
dec
jl
arpl
std
pop
sbb
in
lcall
movlps
push
mov
adc
push
ret
je
push
orb
mov
int3
aam
mov
inc
or
notl
or
sbb
inc
icebp
cmp
push
daa
mov
pop
call
mov
inc
call
lahf
xchg
sbb
ds
xchg
jnp
mov
and
fwait
pushf
or
push
mov
stc
sub
or
sbb
push
or
and
mov
dec
sbb
shll
bound
xchg
rcll
in
xchg
xor
and
push
pop
fadd
sub
jle
lods
jae
pusha
push
call
push
jne
xor
push
mov
pop
jmp
mov
out
pushf
je
sbb
pop
mov
adc
mov
sub
mov
cmp
outsb
pop
jbe
fstps
ret
int3
leave
add
shrb
xor
outsl
fnstsw
sbb
or
ret
das
shrb
inc
stc
xlat
ja
add
les
gs
dec
mov
pop
jl
nop
div
mov
pop
imul
jle
out
maxps
rorl
add
xlat
or
dec
daa
push
add
mov
sbb
sbb
lret
xchg
dec
scas
cltd
cmp
test
push
add
pop
or
pop
andb
adc
bound
lods
popa
xchg
aas
cmpsl
outsb
inc
mov
mov
or
out
ljmp
add
push
ja
lahf
arpl
push
or
bound
test
ret
sbb
jb
or
outsb
cs
pop
jb
cmp
sarb
xchg
add
sub
sub
and
pop
in
adc
mov
imul
pop
xchg
adc
js
inc
gs
sti
sub
mov
cld
mov
inc
cltd
pop
cli
xchg
xchg
inc
scas
enter
je
inc
stos
push
xchg
int
adc
fdivrl
xor
movsl
mov
inc
pop
xchg
ret
adc
xor
movl
xor
mov
push
mov
andb
jge
notl
call
mov
sbb
dec
test
mov
ret
push
mov
nop
cld
stc
or
in
or
and
das
cmp
adc
sub
adc
andb
dec
mov
mov
push
adc
js
ja
rcll
and
movsb
inc
or
sbb
dec
std
aam
add
popf
data16
adc
mov
pop
scas
arpl
inc
xchg
js
dec
lods
inc
dec
sbb
xchg
mov
pop
sahf
pop
adc
test
mov
xlat
sbb
jne
push
push
jl
mov
dec
orb
cs
add
adc
fwait
mov
or
jns
adc
xor
inc
xchg
cli
pushf
inc
inc
insb
mov
jnp
dec
fwait
int3
mulb
enter
fidivrl
clc
mov
xchg
push
lea
mov
test
rorb
mov
mov
jl
xchg
mov
mov
dec
add
mov
inc
pushf
sbb
mov
sub
xchg
push
and
daa
cs
stc
sbb
ret
cwtl
sbb
cmc
in
fnsave
xchg
lea
adc
add
mov
fwait
iret
mov
iret
pushf
pop
inc
mov
xrelease
or
sbb
sub
add
pop
in
movsb
adc
mov
pop
in
test
pop
jbe
aaa
les
fsubs
fsub
push
pop
cmp
clc
add
fidivs
and
push
les
lock
mov
push
mov
push
pop
adc
add
push
ret
das
fadds
mov
out
fwait
inc
roll
aad
and
pop
in
jbe
fstps
or
mov
add
pop
imul
out
ret
dec
fs
inc
out
je
pop
int3
sbb
cmp
jmp
int3
push
test
js
mov
sbb
or
subl
cwtl
sub
aad
addr16
lods
pushf
rolb
imul
adc
cs
mov
cmp
pop
and
lcall
inc
inc
push
lds
int3
repz
and
sub
sti
mov
std
rolb
jb
cli
mov
sbb
fldl
or
push
inc
and
cmp
pop
xchg
inc
cmpsl
xchg
fldcw
fimull
mov
sbb
sub
int3
in
dec
push
lea
insb
xor
cmpsb
cltd
inc
jg
cwtl
test
out
mov
daa
mov
shlb
pop
xchg
pop
call
sahf
jbe
inc
pop
cld
push
inc
arpl
pushw
mov
or
rorl
addb
add
sub
mov
sub
mov
movsl
ret
jge
mov
jo
ds
pusha
sub
cmp
and
mov
mov
pop
xchg
leave
mov
and
test
adc
sub
in
cmp
fucomip
lds
add
jmp
inc
adc
test
adc
or
add
dec
in
push
xchg
or
lods
or
xlat
inc
fcomps
pop
sub
xor
pop
xchg
int
clc
adc
rcr
dec
xor
push
shl
pusha
inc
fmul
pop
and
xchg
adc
test
cli
stc
dec
fimull
in
gs
xchg
mov
insl
scas
sbb
gs
cmpb
sub
adc
mov
aas
rorb
mov
push
in
add
sti
imul
inc
push
rorb
shr
add
push
lods
sahf
inc
add
cmpsl
push
rdmsr
sbb
in
lds
jbe
fwait
add
xor
imul
mov
jns
in
fbld
rorb
dec
divl
sub
or
inc
xor
aad
pop
mov
jp
pushf
cmp
mov
loope
arpl
push
mov
or
std
bound
test
fs
or
dec
scas
jmp
pop
movb
sub
stos
pop
or
and
lahf
and
dec
addr16
mov
inc
std
nop
fstl
ljmp
call
out
lcall
xchg
adc
and
xor
dec
lods
fmull
pop
jno
sbb
jle
fsubrl
imulb
imul
cmp
push
jae
mov
xor
pop
fnstenv
sbb
jmp
push
sub
dec
pop
push
add
and
adc
sbb
stc
out
pop
push
and
loope
mov
push
fnsave
dec
mov
mul
lea
inc
adc
enter
or
ret
push
loope
int3
cs
mov
fsubrs
mov
jg
out
push
lock
fldt
sub
adc
mov
mov
in
test
and
add
adc
daa
nop
and
push
bnd
mov
and
lods
lods
js
in
pop
mov
jmp
orl
push
push
pop
mov
dec
fcmovnb
sbbl
subl
out
sub
sti
inc
or
in
push
adc
mov
push
xorb
xlat
sub
ficoms
cmp
push
xor
fst
jae
push
inc
fwait
ljmp
dec
sub
outsl
and
mov
mov
and
int3
fdivrs
dec
in
sbb
sarl
movsb
sbbb
sahf
mov
add
dec
popa
mov
cmpsb
mov
jge
mov
or
js
cmp
in
inc
fstl
dec
xchg
xor
sub
std
into
add
pop
push
push
mov
int3
mov
stos
stc
xor
in
negb
arpl
or
stc
push
in
dec
jmp
iret
xchg
adc
sbb
clc
inc
and
fs
cmpl
mov
xchg
xor
add
lods
push
test
iret
in
xor
aas
mov
or
scas
push
jns
stos
dec
jl
mov
inc
enter
jl
push
daa
aas
sbb
jae
xor
sub
adc
or
shrb
push
lds
leave
pushf
dec
dec
sbb
call
adc
lock
leave
ss
int3
seta
or
jae
rcrl
cmpl
push
pop
mov
fs
popf
dec
loopne
incb
outsl
dec
and
repz
xchg
fldcw
pop
push
push
ret
push
loopne
xor
adc
repz
dec
mov
or
lret
pushf
mov
dec
pop
mov
sti
inc
inc
jl
cmp
pop
cltd
cmp
add
dec
mov
loope
adc
xor
mov
jecxz
inc
jp
gs
in
imul
divl
and
xchg
inc
inc
push
sbb
cwtl
out
loop
lahf
push
pop
scas
in
dec
test
fbld
mov
xorb
out
jecxz
stos
or
out
jae
xor
jo
int3
cmp
sbb
sub
sub
ret
popf
pop
shrl
mov
inc
into
negb
push
cmp
mov
add
stc
repz
add
jno
pop
test
jmp
movsl
xchg
les
xlat
aad
divl
repnz
jb
test
gs
dec
xchg
add
inc
imul
inc
cmpsb
jge
es
arpl
test
sub
sbb
and
push
push
push
push
pop
and
push
jge
mov
sub
aad
push
call
xorb
adc
add
stos
stos
push
xor
test
mov
scas
push
cmpl
data16
and
mov
fiaddl
mov
out
push
mov
ja
sub
mov
in
cs
mov
push
push
in
sub
or
in
mov
and
test
decl
test
jle
adc
sub
lds
sub
push
stos
aad
adc
dec
jae
fmuls
dec
add
cmc
mov
and
xchg
sti
push
mov
mov
or
aad
test
pop
ja
out
cltd
push
sti
xchg
imul
adc
add
les
imul
mov
sub
icebp
hlt
xchg
test
adc
icebp
mov
ja
push
or
aaa
iret
pop
gs
mov
shll
fiadds
aam
int3
lret
cmpsl
mov
push
xor
adc
xchg
aam
aam
mov
sbb
add
cmp
ja
in
in
ja
adc
and
sbb
jecxz
scas
js
ror
mov
push
sub
rcrl
aad
and
popf
xor
dec
fsubrl
and
inc
push
pushf
sub
pop
mov
pop
call
jno
jne
scas
mov
es
jp
pop
dec
stos
and
leave
sbb
adc
cmp
inc
mov
cld
lret
test
jmp
dec
pop
adc
andl
jmp
push
rol
cmp
or
or
imull
ljmp
fsts
daa
fnsave
clc
xchg
xor
sub
xchg
add
pusha
sarl
adc
icebp
pop
pop
jae
xchg
mov
and
inc
scas
ja
aas
clc
jg
pop
pop
pop
inc
pop
fsubrs
shl
insl
psubb
mov
hlt
movsb
mov
mov
shll
orl
mov
pop
lods
mov
inc
jmp
mov
pop
jbe
rolb
std
mov
inc
int3
and
xor
jp
nop
gs
subl
xchg
in
jo
cmp
or
or
fwait
dec
pop
int3
push
fwait
dec
xorl
mov
xlat
or
gs
test
add
in
mov
es
idiv
sbb
in
cmpsl
add
nop
jnp
lahf
inc
sub
and
sub
push
scas
stos
mov
outsl
sub
ret
mov
cwtl
xchg
sbb
lds
add
add
cmp
add
aam
push
bound
pushf
fdivs
sbb
push
pop
inc
jb
pop
das
mov
mov
jnp
mov
xchg
lret
jp
mov
icebp
mov
cmc
push
lea
inc
cmp
or
lds
jne
adc
aas
or
pop
adc
lea
push
mov
xor
cmpsl
xchg
test
lea
or
mov
jnp
mov
mov
out
ja
jecxz
inc
fnclex
and
mov
mov
fs
scas
mov
xchg
les
loopne
and
add
cmp
cmp
jecxz
dec
mov
mov
jo
xchg
fistps
inc
adc
mov
out
cmp
aas
sub
popa
and
sub
sahf
cs
out
lret
cmpsb
jge
and
inc
mov
adc
rcr
xor
xchg
xor
scas
lahf
inc
sbb
std
jl
call
jns
add
cmc
mov
sbb
adc
xchg
mov
mov
repnz
imul
mov
inc
outsb
adc
std
jnp
mov
pop
mov
inc
addb
lea
ret
add
push
clc
and
xor
icebp
into
test
cltd
ds
sub
dec
push
xor
mov
xchg
enter
dec
push
xor
xor
imul
popa
sbb
fcomps
leave
mov
mov
aaa
mov
test
mov
frstor
icebp
ret
movsb
mov
loope
inc
call
aas
sbb
lret
or
leave
arpl
les
scas
movsb
scas
xorl
rcrl
mov
push
push
xor
divl
xchg
xchg
push
outsl
dec
adc
dec
outsl
scas
push
frstor
sub
lock
and
lea
mov
inc
imul
lods
pushf
push
push
push
lods
test
push
rcll
sbb
xor
or
dec
sub
movb
call
jbe
lods
scas
dec
mov
xor
mov
inc
add
lods
jmp
test
js
mov
ja
loop
data16
and
sahf
push
mov
push
jge
adc
or
mov
sti
es
les
or
dec
mov
mov
add
xor
insb
pop
pop
data16
pop
outsb
clc
lods
xor
adc
in
loop
adc
popl
cmpsb
push
jae
mov
mov
xchg
test
sti
mov
pop
jns
or
dec
movb
mov
or
jne
inc
mov
xlat
popa
ret
mov
call
jo
xchg
shll
imul
stc
jge
int3
adc
sahf
xor
cmp
test
xchg
push
jns
or
or
jnp
jns
test
imul
mov
sbb
sbb
fs
or
in
outsw
jo
jne
lock
cmp
sub
adc
in
mov
and
repz
inc
cmp
xchg
cmp
enter
imul
sbb
in
outsb
push
sar
jmp
or
or
inc
aad
dec
cmpb
or
mov
gs
ljmp
inc
adc
jmp
mov
mov
clc
push
sti
stos
pop
ja
inc
inc
mov
pop
sbb
push
out
lods
lcall
mov
mov
push
add
loop
lcall
jbe
sub
lahf
sbb
sub
in
aad
mov
shrb
mov
imul
xor
add
mov
loopne
mov
popf
rcll
imull
pushf
sbb
push
jecxz
cmc
gs
ret
pushf
and
mov
mov
scas
icebp
mov
mov
dec
mov
and
sub
inc
sub
dec
outsb
imul
sbb
sub
lock
pop
sbb
lret
jb
outsb
mov
push
ja
daa
cld
movsl
psllq
scas
fisubrl
push
sbb
xchg
test
pusha
xor
dec
push
stos
das
frstor
mov
dec
jno
dec
mov
pop
fdivrp
mov
hlt
std
test
iret
test
xchg
jb
lds
or
ret
hlt
testb
mov
mov
jl
mov
movb
repz
add
jns
push
fmul
xor
sbb
mov
mov
mov
dec
sub
cmp
int3
inc
js
mov
pop
mov
pmullw
es
ret
pause
jmp
dec
je
push
mov
icebp
pop
jmp
lret
mov
xchg
mov
ds
push
out
imul
mov
jbe
test
xor
adc
inc
sub
sbb
sbb
mov
out
xchg
fucomi
jle
ja
xor
jb
jl
fidivrl
into
lcall
xor
enter
push
out
inc
push
aam
xchg
pop
jg
dec
add
jbe
mov
pop
jl
sbb
adc
mov
push
push
faddl
aam
stc
in
jl
arpl
sbb
outsb
and
jmp
xor
or
enter
xchg
jp
sub
cld
xlat
pcmpeqd
sub
in
out
movsb
pop
pop
jecxz
mov
ss
lds
into
mov
adc
xchg
lea
jb
sarb
stos
cli
xchg
out
out
mov
or
add
pop
jecxz
je
out
out
mov
or
pop
std
jle
pop
and
clc
shll
in
cmp
cwtl
xor
sbb
mov
loop
lret
inc
mov
mov
loop
in
or
cmp
cmp
ljmp
mov
dec
xchg
and
je
jbe
xchg
ret
push
out
inc
or
mov
nop
push
aam
mov
cmp
scas
mov
push
and
jecxz
and
cmpl
inc
lods
ficomps
daa
cltd
push
inc
mov
cltd
pop
dec
aad
je
mov
push
das
popf
or
and
lods
repnz
repz
add
xchg
xchg
in
xchg
mov
adc
mov
aam
mov
jp
sbb
fmull
pop
pop
enter
push
pop
xchg
mov
xchg
inc
and
mov
ljmp
ret
ljmp
cwtl
pop
scas
xor
mov
dec
sub
call
adc
pop
jnp
test
inc
pop
dec
adc
aad
out
xchg
inc
movsb
xchg
xor
sub
sbb
mov
inc
inc
pop
push
imul
cmc
dec
in
add
inc
sar
mov
rolb
fldcw
add
sbb
sbb
push
sub
imulb
dec
adc
mov
xor
dec
sub
add
arpl
stos
mov
inc
pop
gs
pop
dec
sub
fcomip
je
addr16
lret
jecxz
jae
ret
push
or
iret
arpl
lods
cmc
push
push
and
cltd
cmc
pop
mov
push
or
iret
popf
repz
cmp
aaa
dec
add
es
cld
dec
vhaddps
add
andl
gs
cmovp
xchg
cmpl
and
push
or
out
push
inc
xchg
loop
or
mov
lcall
les
int
mov
icebp
push
repz
mov
stos
cmp
enter
pop
and
arpl
jae
pop
cmc
test
adc
push
ror
test
inc
sub
add
imul
mov
or
dec
test
repz
inc
pop
clc
cmp
jne
bound
push
scas
pushf
in
fnstenv
popf
add
xchg
mov
mov
and
push
dec
and
hlt
loop
lea
mov
outsl
jge
decl
jb
gs
js
outsb
bound
mov
into
inc
call
int
jno
dec
subl
ret
mov
jecxz
dec
inc
inc
test
and
pop
divb
subl
imul
testb
jbe
add
insb
rorb
xor
add
test
xchg
inc
faddl
inc
jne
fidivl
iret
push
pop
jnp
pop
or
mov
inc
sub
mov
cmp
fadd
xor
jecxz
add
jno
out
cmc
aaa
ljmp
adc
jne
xchg
sbb
add
jecxz
inc
call
add
jb
pop
paddw
mov
out
lcall
aad
push
js
xor
sbb
cmpsb
in
mov
out
push
dec
or
mov
lds
adcl
or
jmp
movsb
cltd
mov
and
leave
cltd
lock
jl
or
shrl
cmpl
mov
faddp
sub
int3
int
aam
out
je
out
adc
nop
int3
adc
push
push
pop
xor
ror
push
inc
clc
inc
cld
sub
dec
cmc
or
xchg
dec
cmpsl
ja
stos
adc
imul
cmc
sti
dec
cltd
subb
inc
aad
cld
scas
push
mov
aaa
cmp
pop
ja
call
or
add
fadds
xor
mov
dec
sbb
jnp
sti
sar
outsb
clc
pop
and
sarl
and
adc
dec
ret
inc
insl
dec
sbb
xchg
inc
insl
jle
and
push
les
sub
enter
aaa
xor
sub
pop
xchg
lock
sti
mov
push
inc
repz
mov
xor
xor
fnstenv
ja
movsl
push
popf
pop
push
and
pop
sbb
iret
test
xor
or
mov
add
pop
push
inc
xor
inc
idiv
ss
ds
and
add
addl
cmp
or
sub
int
je
fisttpl
lods
pop
lods
fsts
mov
lret
nop
stc
cmpsl
daa
dec
enter
adc
xchg
dec
aam
ret
sti
sbb
mov
inc
lret
xlat
sbb
enter
fisubs
in
out
add
push
call
stos
gs
rolb
jae
jnp
push
jge
lds
jae
outsl
mov
out
fsts
mov
pop
mov
fimull
in
or
xor
inc
adc
pop
stos
push
jno
push
cltd
sub
lods
push
push
sbb
push
adc
push
pop
fwait
data16
adc
cmp
sahf
mov
testl
ds
dec
push
roll
test
lock
pusha
mov
insb
and
adcb
xlat
orb
les
and
filds
test
push
ret
add
stc
into
pop
cmc
in
fstps
out
mov
decb
lods
push
lret
repnz
mov
ja
in
or
fcompl
sub
aam
jl
loopne
daa
rcr
adc
testb
push
mov
ljmp
xor
mov
xor
cmc
jecxz
test
or
fcompl
loope
pusha
inc
je
shll
sahf
hlt
sti
xorb
mov
jecxz
sub
adc
test
dec
mov
es
lret
pop
add
in
fstp
push
xchg
push
push
push
push
aad
mov
add
stc
std
xchg
negb
test
mov
out
jbe
adc
pop
std
add
aaa
push
das
jmp
push
test
pop
cmp
rcll
mov
in
gs
rol
gs
and
cmp
aaa
lahf
push
xor
imul
adc
or
jmp
icebp
pop
addb
aam
xchg
dec
inc
push
jno
jle
gs
jg
aam
or
sbb
jno
int3
pusha
mov
lcall
jge
jle
mov
xlat
add
cmp
mov
mov
incl
add
dec
xor
fs
es
lods
rcrl
stc
scas
push
addr16
scas
and
arpl
pop
shll
das
pusha
jg
movl
dec
mov
pop
lods
data16
leave
mov
push
push
les
dec
rorb
int
out
inc
cld
jmp
mov
sub
adc
in
sbb
into
pop
and
enter
lcall
xor
sti
jl
mov
cmpxchg
sarl
imul
ret
stos
cmp
in
rclb
js
dec
cmc
mov
sbb
fnop
sbb
sub
cmpsl
es
and
lret
in
pop
or
roll
pop
shll
or
jmp
adc
dec
mov
aam
pusha
jp
or
push
pusha
add
aam
aad
push
mov
adc
add
and
sbb
call
dec
dec
cmpsl
pop
mov
jecxz
mov
lcall
scas
pop
mov
lods
xor
or
movsb
popl
scas
pop
loop
les
or
fcoms
push
jne
pusha
add
dec
mov
aam
rolb
mov
fildl
jno
repz
lret
stos
inc
cwtl
lock
ficoms
and
clc
or
jbe
xor
out
mov
jge
jp
sub
fs
xchg
aaa
dec
iret
pop
pop
movsb
call
add
arpl
ret
shll
sbb
or
cltd
fnstcw
xchg
cmc
xor
fs
pop
call
pop
jns
or
pop
dec
push
inc
pop
pop
add
push
es
pop
pop
add
sbb
or
add
and
mov
adc
les
jmp
push
outsl
scas
pop
call
jmp
push
push
or
aad
sbb
mulb
es
aam
xor
hlt
mov
cmpsb
es
jecxz
imulb
mov
jl
es
inc
arpl
test
fwait
jmp
mov
cmp
push
adc
addr16
inc
push
or
mov
arpl
cwtl
lahf
iret
ja
aam
inc
ficoms
fldcw
js
pop
sbb
aas
test
fstpl
mov
aad
sub
and
push
pushf
in
int
jg
push
aaa
pop
pop
call
mov
pop
xor
mov
and
xor
jno
or
rcrl
repz
adc
filds
cmp
mov
xchg
fstpt
call
mov
push
js
adc
jmp
popf
iret
xor
movsl
cmp
mov
pop
std
xor
mov
fstpt
insl
xor
cmp
mov
sub
cmp
sti
add
pop
sub
js
mov
jnp
mov
adc
mov
test
push
cmp
dec
or
inc
cmpxchg
sub
mov
lcall
xchg
jg
sub
push
outsl
bound
loop
adc
shlb
and
jno
call
adc
out
fwait
pop
inc
and
outsl
jno
or
imul
inc
or
in
cmp
movsl
mov
adc
add
inc
inc
je
mov
xor
sbb
mov
mov
mov
mov
jno
jge
mov
jo
orl
push
cmp
dec
nop
ds
shlb
mov
hlt
mov
aad
lds
and
adc
mov
in
sbb
stos
out
xor
push
jbe
or
jbe
jecxz
jae
push
es
fildll
dec
shlb
mov
sub
ret
cmp
xor
inc
leave
sub
cltd
ret
ljmp
jae
idivl
xchg
add
mov
call
push
das
mov
or
and
adc
stos
nop
xchg
sbb
in
add
add
push
or
arpl
push
or
pop
xorl
mov
pop
lea
out
cli
inc
lock
mov
js
mov
fsubrp
sbb
cmc
loope
add
pop
dec
pop
pop
xchg
push
leave
jl
push
popa
shll
lahf
filds
repnz
mov
leave
and
dec
jge
shll
sub
sbb
jmp
test
mov
fildl
hlt
adc
out
mov
add
mov
inc
mov
ret
cmp
or
popf
mov
push
or
sub
sahf
or
mov
fmull
fmulp
shrb
jb
cld
sbb
aas
daa
fnstsw
into
insl
xor
inc
sbb
les
fiadds
test
lahf
psrlq
fmul
out
call
pop
scas
lahf
into
lret
imul
cmp
mov
in
sbb
aam
and
popf
push
pop
dec
scas
stos
adc
scas
pop
mov
ja
je
mov
xchg
int
sub
cltd
dec
and
cmpsl
js
ficomps
pop
push
cmp
sbbb
xchg
dec
and
sbb
shlb
adc
dec
xchg
xor
add
cli
add
sbb
xchg
mov
xchg
mov
or
dec
mov
or
test
add
sbb
das
pusha
cmpl
push
std
and
or
outsb
dec
xor
test
jl
ret
lret
cltd
fmull
sahf
jg
pop
out
rclb
sarb
iret
mov
xchg
scas
xor
cltd
mov
out
aad
cmp
xchg
lcall
clc
push
iret
pop
or
cwtl
and
xchg
ficoms
mov
cltd
test
mov
pop
or
adc
dec
enter
xchg
xor
pop
jbe
push
cmp
or
je
pop
push
pusha
mov
xchg
fsts
jg
add
out
imul
loope
or
int3
jnp
xor
push
push
push
gs
cli
and
in
jge
jb
test
loopne
inc
sub
pop
mov
divb
pusha
ja
pop
add
or
lods
xchg
cmp
pop
mov
sub
add
aas
push
scas
xor
in
mov
iret
je
xlat
test
les
sbb
xlat
or
out
dec
cli
lods
sub
std
xor
dec
ret
xor
in
mov
sub
clc
xlat
movsb
pop
mov
or
adc
bound
xor
idivb
stos
sub
push
fadds
test
jl
dec
cmp
test
fcmovbe
int
mov
mov
movsl
xlat
mov
into
mov
xchg
in
pop
test
das
cmp
fcoms
add
rcrb
ret
and
inc
ret
scas
popf
lret
stos
into
sub
pop
adc
stos
roll
sub
cltd
das
pop
scas
xchg
es
aad
inc
xchg
adc
test
into
cmp
add
sbb
cmp
outsb
and
xchg
mov
mov
add
push
hlt
mov
and
aam
js
clc
push
mov
div
rorb
or
or
iret
call
arpl
js
jnp
jae
movsb
ss
dec
xchg
xor
adc
lods
ljmp
cmc
or
insl
aaa
dec
jp
pop
aam
xor
int
mov
inc
add
aas
repz
fisttpll
push
push
fnstsw
addb
testb
xchg
jle
cmp
inc
test
out
mov
insb
ljmp
sub
shl
jmp
lods
pop
repz
lea
and
sahf
loopne
inc
fsubp
out
loope
or
pop
in
jns
fnstsw
test
jbe
fstpl
mov
test
mov
insb
dec
arpl
hlt
sbb
add
pop
and
repnz
add
aaa
jbe
inc
outsl
call
repnz
gs
int3
or
push
jmp
ljmp
inc
lock
xchg
scas
test
and
mov
stos
push
in
mov
pop
cmp
xor
add
inc
inc
out
jg
and
stc
fldl
stos
adc
test
mov
xchg
or
dec
dec
cld
addr16
mov
daa
dec
iret
xor
add
push
dec
and
sbbl
call
or
dec
mov
icebp
jno
push
pop
pop
lods
lods
cltd
into
jbe
movl
dec
push
nop
cmp
and
fcmovne
inc
call
in
add
sub
out
sbb
mov
mov
inc
mov
fstl
ds
testl
pavgb
and
ret
cs
lods
sub
gs
xchg
sbb
and
or
ljmp
loope
arpl
out
dec
xchg
and
mov
scas
push
pop
pop
sti
push
xchg
xlat
lods
cmp
push
or
mov
dec
cmp
jnp
mov
sub
push
mov
inc
test
sub
cmpsl
xlat
lcall
pop
mov
mov
jae
lods
push
aas
loop
sti
in
cmp
movsb
outsb
dec
sbb
stos
sub
dec
int
jmp
dec
daa
std
hlt
or
mov
pop
push
mov
xchg
jmp
add
loopne
fsts
shll
popw
or
or
or
sti
sbb
stos
cmp
sahf
int
out
popf
aas
lods
sti
and
add
pop
out
or
pop
add
test
sahf
es
mov
mov
fcmovnu
mov
les
sub
js
cs
push
in
cmp
push
sub
sbb
in
pop
pop
std
les
jne
mov
and
mov
pop
insb
xchg
jo
mov
sbb
ljmp
mov
mov
add
sbb
out
loopne
in
das
cmpsl
fistpll
pop
sarl
pop
fcoms
add
rolw
inc
jecxz
cwtl
mov
or
lds
lret
dec
sbb
or
cli
push
rclb
lret
xor
inc
adc
mov
mov
lcall
mov
dec
sbb
inc
js
jbe
jle
addr16
out
dec
and
inc
add
in
cmp
cmc
push
aam
mov
in
lcall
movlps
shrb
sbb
dec
cmpsl
repz
rcrb
aaa
xor
fidivl
sub
cmpsb
jmp
inc
push
fisttpll
and
imul
je
inc
or
mov
in
mov
xor
mov
popf
call
pop
cmp
jne
jp
jge
scas
pop
pop
movsl
mov
mov
cs
fmulp
cmp
test
pop
or
ret
and
roll
aam
sbb
nop
cmpsl
inc
dec
rcll
dec
or
sub
sub
imul
jmp
jg
xor
cmpsl
div
mov
inc
cmp
sbb
mov
cmpsb
push
scas
mov
testl
shl
sub
cmpsl
xchg
jbe
jae
mov
paddusw
pop
mov
or
jl
jmp
orb
mov
pop
les
popf
cmp
pop
push
cmp
nop
je
jge
cmp
mov
push
xchg
cltd
in
mov
push
xchg
add
adc
dec
fwait
jp
xchg
pop
cmpsl
gs
mov
test
js
mov
jl
repnz
outsb
sbb
and
push
and
icebp
je
popa
add
push
movb
jno
addr16
adc
xchg
icebp
rcrl
repnz
jo
bound
sub
cmp
sub
push
jl
push
push
pop
adcl
pop
loop
adc
and
into
push
jno
inc
xchg
push
mov
jae
mov
popw
out
push
stos
loop
inc
or
rorb
dec
cmp
add
repnz
xor
sarb
mov
sub
add
jmp
mov
je
xchg
pop
dec
test
fsubrs
inc
sub
and
jge
mov
stos
push
movsb
es
cld
pop
pop
add
xchg
loopne
lods
les
mov
or
jl
std
imul
lods
push
mov
out
scas
clc
mov
pop
cld
subb
xchg
push
push
sar
in
js
sarb
mov
mov
outsl
mov
cmp
ljmp
mov
das
adc
pop
out
and
inc
addb
add
mov
dec
pop
scas
dec
lret
test
orb
lods
sahf
ja
jbe
cltd
xor
dec
and
add
xchg
push
aaa
inc
in
cmp
not
int3
sub
mov
adc
in
mov
xchg
fnstsw
int3
lahf
push
int3
mov
add
pop
popa
xchg
pop
iret
xchg
fs
add
inc
mov
bound
mov
ret
sbb
call
inc
push
movsl
fdivs
or
sub
xor
xlat
jge
push
hlt
mov
std
pushf
mov
mov
jb
fwait
nop
inc
nop
push
stc
clc
rcll
jle
stc
lds
xchg
call
add
cmp
or
fdivrl
push
sub
pop
daa
push
cltd
jp
and
mov
mov
mov
jbe
loopne
push
inc
pop
push
xor
and
scas
push
mov
or
pop
pushw
xchg
shlb
imul
push
push
mov
sbb
mov
cmp
popa
loope
aas
je
fcoms
sbb
mov
sub
lock
dec
push
sbb
movsb
inc
xchg
inc
jecxz
in
xchg
jg
cmpsb
mov
dec
ja
js,pt
scas
xchg
test
ficoml
or
xor
ja
push
bound
jge
xorb
pop
xchg
xor
cltd
jo
sbb
shll
mov
scas
inc
aas
ficomps
adc
into
jle
add
mov
and
or
sbb
repnz
scas
pushf
ficomps
mov
adc
dec
mov
aas
mov
int
or
out
xchg
dec
lds
cmp
push
jns
jnp
mov
popa
std
adc
loope
ds
xchg
enter
sbb
subb
xchg
das
jecxz
repz
insb
adc
clc
xchg
cmp
cs
push
imul
sti
jge
or
loop
jns
movl
inc
or
xlat
dec
movsl
xchg
inc
xor
insl
mov
cmp
adc
in
and
repz
sub
pop
sub
pop
add
mov
push
jl
jmp
dec
rorl
sub
lret
push
sbb
dec
or
andl
aam
fwait
mov
cld
loopne
sub
shll
addl
mov
push
ficompl
subb
xor
pop
fnsave
fstl
enter
roll
pop
cmp
mov
xorb
xchg
add
rcrl
cwtl
je
les
jmp
sub
inc
rcrb
lea
mov
xchg
aam
mov
inc
jmp
pushf
xor
lds
and
push
pop
cld
xchg
push
les
add
and
jge
fs
test
jmp
push
or
mov
dec
repnz
loopne
sbb
loope
fstl
mov
insl
pop
mov
jo
cmc
mov
repz
leave
push
lret
mov
mov
inc
aam
or
popf
pop
push
fisubs
out
add
jl
lret
faddl
repnz
fcmovnbe
mov
xchg
nop
cli
pop
dec
add
lods
push
std
popa
push
pop
cmp
pop
mov
mov
sbb
push
lea
rcl
xchg
jns
add
mov
ja
loope
cmp
mov
pop
mov
mov
inc
push
pop
push
add
out
ds
add
rcrb
mov
mov
leave
mov
pop
in
adc
push
lock
and
jmp
lods
mov
adcl
call
js
mov
or
imul
outsb
xor
nop
add
xor
push
inc
js
dec
js
and
jl
mov
and
shld
dec
inc
mov
cli
adcl
test
jge
inc
and
or
sar
pop
jae
in
ficoms
shll
mov
into
jp
testl
jae
mov
push
ljmp
popa
mov
fistpl
add
ljmp
mov
jb
xchg
jb
mov
mov
push
orb
insb
add
and
fdivl
repz
and
inc
enter
sub
mov
adc
or
and
mov
sbb
and
xor
stos
xor
jg
add
aas
jecxz
cltd
or
or
loop
jb
jo
inc
shll
stos
sub
inc
jmp
in
and
sqrtps
or
dec
test
fninit
cli
xabort
inc
sahf
push
dec
sbb
mov
mov
scas
ret
out
push
addr16
xchg
add
dec
inc
aaa
pop
add
push
xor
pusha
sbb
xor
test
or
xchg
sbb
push
or
cmpl
cmp
inc
movsb
je
fs
roll
jmp
jo
icebp
xchg
dec
sub
scas
or
mov
push
pop
mov
cmc
movsb
out
and
jne
sbb
cmpsb
xor
les
mov
dec
js
or
xchg
sub
adc
xlat
fstl
inc
aas
push
push
dec
and
mov
outsl
lds
pop
and
dec
scas
mov
push
ret
ss
shr
add
fs
xor
pop
stos
push
sub
inc
jecxz
mov
fsub
mov
xor
js
mov
aas
push
mov
cmp
outsl
jp
dec
cmp
insb
lret
mov
mov
mov
clc
inc
pop
sub
push
sbb
and
jg
add
cwtl
dec
dec
jle
add
inc
sbb
das
mov
and
cli
rclb
lock
dec
lea
les
add
cli
and
push
sbb
aad
inc
push
movsb
aaa
pushf
movd
clc
or
out
xor
add
xchg
mov
xor
pop
jg
sub
fsub
cld
ss
and
fnstcw
ret
unpckhps
jo
mov
cmp
adc
or
imul
aam
out
xchg
xor
mov
inc
cli
sbb
jmp
sbb
xchg
inc
jae,pt
mov
arpl
mov
outsl
test
cmp
hlt
sub
lcall
mov
push
push
lds
gs
inc
add
push
fs
xor
cmp
jae
mov
bound
sub
xchg
push
lahf
push
out
in
push
add
and
sub
stos
shll
push
mov
int
xchg
dec
call
sub
jne
pop
push
sbb
roll
lahf
lcall
shrb
sar
mov
nop
cmp
loopne
mov
inc
cmp
aaa
pusha
adc
ds
inc
inc
les
mov
push
inc
repz
ss
in
pop
pop
dec
fidivl
sbb
cmp
sbb
sbb
inc
add
bound
or
push
lcall
adc
push
or
aaa
jb
pushf
ljmp
andb
loopne
or
repnz
lods
fnstcw
iret
movsl
stos
or
dec
xchg
pop
add
mov
add
outsb
cs
test
enter
mov
adc
clc
pop
aad
icebp
sub
scas
stc
bound
add
sbb
notl
inc
shll
cmp
repz
and
imul
dec
sub
lret
xchg
adc
fisttps
push
push
in
in
push
mov
push
inc
aas
or
clc
subb
or
out
ja
ja
popf
xor
cmpsb
mov
push
cltd
and
mov
jo
sub
mov
jp
pop
or
dec
lods
les
or
push
mov
cltd
cld
xor
xchg
hlt
xchg
daa
sub
icebp
leave
fstps
push
mov
xchg
jbe
sbb
add
jo
dec
rorb
insl
sub
mov
jle
loopne
dec
shll
cmp
andb
and
and
fildl
jnp
js
clc
out
pop
repnz
out
mov
ljmp
cltd
dec
scas
outsb
or
xor
cmp
lcall
out
dec
out
pop
adc
mov
test
push
sub
xor
enter
mov
jle
or
mov
divb
sar
push
andb
pop
dec
cmpsl
aad
mov
dec
negl
stos
hlt
sub
lret
sub
inc
sub
jg
mov
jg
mov
imul
shl
cmp
rcl
jno
pushf
and
jae
mov
call
inc
ret
mov
repnz
leave
mov
mov
ficoms
test
cwtl
ret
sahf
cmp
mov
mul
pop
fdiv
scas
sbb
inc
push
add
daa
dec
xor
test
push
je
rorl
xor
stos
inc
mov
jnp
cltd
inc
sub
leave
push
mov
pusha
fmuls
fs
insb
sahf
jp
insb
jno
push
xor
shll
adc
flds
jnp
and
stos
addr16
arpl
into
out
imul
test
adc
or
mov
test
out
test
sub
loopne
sarb
out
int
mov
pop
dec
imul
repz
enter
jbe
stos
lods
leave
inc
sub
mov
std
int
lea
sub
xchg
and
mov
insl
cmp
data16
dec
or
fcmove
inc
test
shld
inc
xchg
dec
loop
insb
orb
sti
push
mov
rorb
cld
sub
dec
mov
leave
mov
clc
push
leave
inc
or
mov
mov
push
mov
sbb
out
jl
sbb
mov
into
sbb
xchg
pop
adc
getsec
jno
sbb
pop
jmp
adc
lahf
ret
stos
add
cli
leave
dec
inc
cmp
push
insb
loop
fnsave
pop
xor
cmp
cmpsl
iret
pop
inc
roll
in
mov
inc
or
loope
push
roll
xchg
xor
cld
or
jno
adc
scas
mov
out
pextrw
stos
inc
dec
divl
pop
ret
or
sub
out
pop
dec
sti
adc
aaa
push
lods
xor
xchg
lret
es
xor
pop
or
arpl
push
jnp
iret
mov
mov
mov
adc
jo
pop
jnp
stc
enter
out
fwait
or
push
push
and
test
stos
push
outsb
ret
or
pusha
jne
mov
mov
fwait
arpl
stc
cld
inc
adc
adc
jmp
pop
mov
sub
push
faddl
fdivs
and
pop
out
lret
dec
and
enter
fistpl
iret
or
clc
mov
and
out
inc
shlb
xchg
pop
mov
push
sbb
sarl
mov
ret
push
xorb
push
push
jle
es
sbb
cmpsl
adc
enter
stos
pop
scas
xor
nop
inc
and
imul
cmp
pushf
push
stc
loope
push
pop
xor
mov
dec
lea
insl
bound
adc
lret
lods
or
sti
add
push
das
jmp
repz
pusha
inc
and
add
in
xor
dec
pop
ds
std
push
adc
ljmp
push
jbe
imul
mov
testl
loop
mov
repnz
iret
mov
pop
icebp
xor
ja
cs
mov
push
popa
movb
ret
outsb
mov
jecxz
imul
enter
cmc
jne
push
test
aam
sahf
jns
mov
sbb
dec
lock
and
je
out
inc
mov
xor
and
es
and
dec
xchg
bound
inc
fsubr
add
outsb
clc
arpl
xchg
mov
mov
xor
aam
inc
jmp
push
cmpsb
jmp
bound
ljmp
pop
push
sbb
mov
jl
mov
lods
fwait
into
int3
ljmp
lock
bound
test
add
add
stos
pop
inc
mov
add
pop
adc
sbb
lods
int
xor
scas
or
mov
cs
test
fwait
mov
in
dec
daa
enter
inc
mov
mov
bound
pop
sbb
cmp
or
mov
mov
xchg
jg
icebp
dec
inc
and
jb
push
subl
push
pushf
push
sbb
dec
mov
push
rcl
and
mov
jno
addr16
imul
xor
lea
push
clc
adc
sub
push
jo
pop
fdivr
outsb
fnsave
lahf
inc
insb
out
cmp
into
test
push
cld
ss
mov
ljmp
cmp
dec
ja
rclb
addb
pop
cltd
or
fnstcw
sbb
or
mov
jno
pusha
mov
sub
sbb
xchg
ds
es
dec
insl
adc
jmp
sub
adc
pop
inc
mov
mov
int3
dec
push
pop
pusha
mov
test
push
jge
xchg
jg
pusha
test
sbb
aaa
fsubs
mov
xchg
bound
popa
fcoms
pusha
xchg
test
les
pop
call
test
mov
arpl
lods
das
call
add
and
adc
push
fwait
pop
cld
mov
hlt
and
in
pop
insl
scas
into
xchg
mov
push
push
xorl
mov
mov
loope
in
ss
loope
sub
mov
dec
call
out
lods
lret
lock
mov
push
stos
pop
stos
popa
sub
mov
jae
push
and
xor
int
js
test
and
cs
mov
or
bound
adc
int
push
mov
das
out
dec
scas
and
mov
fbstp
mov
dec
pop
loope
jno
fmuls
xor
pop
pop
out
mov
lock
in
orl
mov
xor
jae
in
xchg
rolb
dec
aam
fidivrl
pop
push
fwait
scas
inc
loope
jle
push
xchg
sbb
aaa
mov
movb
ret
les
fisubrl
stos
rcll
cwtl
stos
cmpsb
pop
fs
jmp
cmp
jl
mov
das
mov
testb
sbb
cli
dec
xchg
push
mov
rclb
push
push
adc
adc
mov
in
imul
pushf
pop
dec
xor
in
sahf
stos
inc
popa
mov
es
repnz
cmp
loope
pusha
mov
or
lea
clc
xchg
cmpl
fstl
test
xchg
pop
add
cmp
neg
das
cmp
mov
or
sub
dec
call
aam
call
lods
mov
adc
mov
pop
and
scas
in
imul
leave
jmp
cmpsl
and
enter
jl
inc
shll
add
jae
dec
or
hlt
jne
push
loope
lcall
dec
jns
idiv
daa
jbe
lret
mov
dec
sub
adc
mov
cltd
inc
and
testl
icebp
pop
sbbb
push
sub
push
mov
mov
rcrb
daa
ret
int
push
gs
ret
hlt
das
jne
xlat
mov
adcl
mov
test
adc
pop
outsb
dec
arpl
mov
lret
icebp
cmpsb
xor
stos
cld
xor
aad
mov
sbb
inc
subb
xor
add
or
cmp
clc
icebp
shll
jmp
xor
sahf
and
xor
dec
cmp
mov
add
or
aam
icebp
lahf
cmp
fstl
push
out
dec
cmpsl
adc
out
fcoml
and
add
test
add
or
gs
leave
ds
aaa
inc
ss
xchg
pop
into
call
or
inc
shlb
jmp
sub
call
fnstcw
imul
pop
mov
cmc
lcall
clc
add
jle
mov
xor
sbb
jg
leave
mov
call
gs
sub
out
test
mov
in
insb
sbb
imul
pop
xchg
sub
sub
jno
jae
or
cltd
push
ficompl
cmp
test
jl
loope
adc
iret
subb
or
mov
push
inc
xchg
lahf
lock
inc
fwait
pop
adc
sbb
lret
xlat
sbb
pop
mov
ss
lock
pop
gs
sti
dec
movsb
jnp
cmp
fists
pop
and
imul
or
sub
xchg
xchg
das
popf
pop
or
aad
sub
pop
movsb
scas
jae
adc
arpl
sub
mov
repz
lds
xchg
lods
orl
lret
mov
mov
jnp
pushf
in
fidivs
pop
and
sbb
cltd
call
out
or
int
movb
adc
shl
sbb
shl
dec
xor
lcall
aam
and
out
mov
pop
sub
jg
in
push
jge
ret
adc
push
dec
sub
and
repz
pop
je
inc
es
outsl
andb
test
jnp
and
das
sub
adc
loopne
repz
jge
fnstenv
xor
imul
data16
cmp
mov
pop
sarl
pop
mov
mov
fsubl
mov
inc
add
in
popa
xchg
hlt
mov
insb
and
test
aaa
xchg
test
adc
sar
push
and
mov
lret
das
and
add
pop
inc
nop
mov
neg
jecxz
push
and
nopl
repnz
mov
addr16
dec
push
scas
cld
inc
add
cmpsb
dec
ficoms
pop
cmp
cmpsl
cwtl
pop
inc
push
jns
dec
sub
leavew
xchg
push
and
dec
jno
shlb
sbb
pop
adc
pop
fcomps
repnz
dec
cwtl
jne
negl
xchg
inc
cmpsb
mov
sub
or
imul
cmp
adc
jmp
fucomip
push
ljmp
test
rcll
or
push
add
sbb
push
jnp
dec
push
or
aam
cmp
popa
shl
pusha
mov
fcomps
push
xor
sub
adc
lods
mov
or
mov
mov
inc
inc
ja
movsb
fwait
xchg
dec
mov
mov
cmpsl
nop
pop
in
shlb
cmp
mov
pop
arpl
jno
jmp
arpl
lods
add
rcl
xchg
popf
lods
add
lret
xchg
sub
cli
mov
fwait
std
scas
push
loop
js
cmp
mov
jge
jecxz
and
adc
stc
lcall
xchg
sub
int3
mov
sub
mov
cmp
sbbb
push
pop
sbb
test
les
mov
rcrl
cli
jp
jge
dec
aam
icebp
iret
mov
cmp
int3
stos
sub
bound
adc
and
pusha
mov
pusha
sbb
int
call
inc
in
pop
test
sub
mov
adc
sbb
sub
add
inc
das
pop
cmp
mov
pop
pushf
or
sar
jp
cmpb
lahf
or
loop
iret
mov
push
pusha
loope
dec
jb
mov
inc
bound
dec
test
pop
vmovntdq
into
pop
test
or
push
mov
mov
adc
xor
xor
jmp
xor
mov
leave
das
mov
mov
lds
inc
icebp
or
icebp
lods
adc
jp
mov
shll
and
test
pop
jb
subb
aad
jmp
lcall
mov
daa
dec
data16
enter
out
std
gs
fsubs
ja
add
add
daa
sub
mov
inc
cmp
xchg
movd
jae
insl
and
data16
jne
mov
ret
pusha
pop
lock
out
jecxz
mov
pushf
out
gs
pop
add
das
mov
aas
ja
dec
dec
jo
pop
ret
and
shrb
ret
dec
cltd
or
xchg
jo
icebp
mov
mov
mov
and
cs
test
fs
ret
bnd
push
fidivs
gs
adc
push
icebp
lcall
test
mov
iret
mov
testl
test
dec
push
pop
subb
out
cs
cltd
andl
mov
jp
and
loopne
aas
xor
sbb
sub
pushf
mov
test
fisubrs
sbb
sub
jmp
movsb
sub
adc
dec
jecxz,pt
stos
ret
add
dec
ret
dec
mov
mov
and
in
daa
xor
xor
mov
stc
jae
jmp
iret
roll
pop
mov
or
dec
push
nop
loop
adc
mov
fdivs
sbb
ds
xchg
push
roll
icebp
jne
pop
xor
mov
jae
stos
sbb
pop
call
mov
std
mov
jnp
call
jne
mov
cmp
fwait
xchg
sbb
and
pop
testl
lret
mov
adc
cltd
adc
jb
jns
ja
jns
lret
and
stos
push
or
lock
adc
outsb
ds
jnp
js
popa
pop
in
nop
int3
scas
lods
or
imul
xchg
mov
add
jae
cmp
push
int3
dec
pop
xor
jae
mov
push
mov
mov
lahf
insl
rorb
addl
gs
sahf
fs
mov
add
mov
mov
ret
lds
loopne
iret
mov
mov
shlb
lods
ret
inc
mov
in
xchg
and
pop
or
stos
xor
inc
cwtl
add
aaa
dec
pop
js
ljmp
lahf
cli
xor
add
push
or
iret
fldcw
aad
xor
ss
inc
cmpsl
mov
or
loope
movsb
in
adc
sub
jnp
inc
or
adc
sbb
mov
cmp
mov
jb
lret
das
sahf
push
adc
xor
fildll
or
inc
or
adc
lret
rclb
pop
lret
testb
cmpsl
cmp
loopne
bound
mov
pusha
xchg
loope
repz
mov
adc
dec
popa
mov
data16
lretw
cwtl
push
jmp
cld
mov
in
ja
xchg
icebp
jne
xor
movl
push
adc
lret
shr
adc
xlat
pop
cmpsb
popa
adc
xchg
jl
mov
out
ja
int3
sbb
leave
cs
push
ljmp
push
fwait
add
insl
pop
cmp
jne
or
xchg
cmp
add
jmp
xchg
ret
mov
insl
test
mov
push
repnz
movsl
jb
cltd
out
dec
int3
push
add
cmpb
inc
int3
dec
stc
or
mov
leave
arpl
movsl
mov
and
xchg
test
fisubrl
push
inc
pop
dec
jl
scas
push
or
icebp
inc
inc
popf
or
in
clc
pop
cmc
sahf
inc
pop
mov
leave
jmp
add
fiaddl
ds
jne
and
jno
lods
repnz
lods
jo
lea
mov
pop
dec
xlat
sbb
pop
or
mov
pop
inc
ljmp
fdivrs
xor
cld
test
andb
mov
loop
mov
ljmp
or
iret
ret
mov
mov
outsb
sbb
lds
pop
mov
negb
les
mov
std
cmp
mov
ljmp
push
lcall
add
jecxz
sbb
push
aam
pop
jle
inc
xchg
mov
js
mov
inc
mov
xor
cs
in
and
stc
cmpsb
xchg
cli
push
mov
subps
inc
mov
mov
leave
int3
in
ret
and
data16
popa
lods
mov
test
cwtl
ss
adc
mov
xlat
scas
or
mov
sbb
es
sahf
cmpsl
jno
adc
xlat
and
insb
inc
adc
mov
out
or
sbb
mov
outsb
jb
xchg
mov
cwtl
in
aad
xchg
aaa
in
daa
push
cmpsl
cs
sub
fwait
or
or
jg
pop
xchg
dec
les
push
jne
aas
fidivrs
jb
fsubrp
mov
call
dec
inc
lods
les
aas
cwtl
pop
push
ljmp
pop
cwtl
clc
pusha
in
out
xchg
test
in
jbe
imul
jne
sti
sub
push
or
loop
cs
mov
sahf
shr
movsb
insb
lds
in
mov
xchg
sub
lcall
mov
in
jmp
mov
fwait
pop
mov
aam
fisttpll
loop
add
stc
pusha
stc
test
dec
mov
outsb
aas
frstor
pop
sbb
push
dec
add
mov
push
test
xchg
repz
mov
mov
xchg
push
outsl
pop
sbb
xchg
sbb
outsl
push
das
pop
js
sub
add
pop
push
inc
je
sbb
idivl
mov
lods
pop
jmp
lock
or
adc
mov
dec
cli
jp
imull
movsb
ds
cmp
xchg
mov
mov
addr16
mov
push
fdivrs
int3
enter
scas
daa
and
ret
in
jge
jne
push
ja
mov
clc
jl
test
call
sbb
dec
lahf
into
pop
pop
mov
ret
jmp
mov
xchg
mov
cld
jne
out
xchg
mov
shrd
or
jb
jecxz
les
mov
in
lea
cmp
mov
jb
insl
pushf
or
inc
fmuls
shll
aad
filds
out
and
stos
pcmpgtd
ss
rcrb
push
xor
movsb
sub
cwtl
jp
or
hlt
xchg
xor
fistl
out
cmp
or
mov
inc
cmpb
aad
sub
cmp
jg
inc
bound
inc
mov
aas
insl
cmp
adc
scas
test
sbb
mov
and
xchg
data16
cmp
jp
insb
dec
in
gs
xchg
xchg
jno
push
xchg
xor
cmp
mov
insl
adcl
data16
jge
out
int3
fsubrp
mov
jp
mov
shl
or
pop
mov
lahf
test
gs
sbb
add
mov
lret
aam
aas
and
outsb
cltd
jmp
pop
sbb
xorb
and
adc
mov
inc
movsb
les
nop
mov
fisubrs
cvtps2pd
jo
rep
ss
push
aam
inc
lods
leave
outsl
frstor
pusha
insl
sub
js
iret
fiadds
mov
addb
adc
or
dec
dec
shlb
movsl
mov
jle
mov
out
pop
lods
mov
cmovle
cmp
fdivr
pop
lret
fcmovnbe
bound
adc
adcl
movl
inc
xor
dec
into
cmp
or
test
sub
ljmp
dec
lods
mov
pusha
lcall
shlb
notl
cltd
mov
pusha
bound
hlt
or
mov
addb
jo
aad
sub
pusha
in
dec
repnz
das
mov
enter
push
and
inc
cmp
mov
cmp
dec
shlb
outsl
mov
mov
mov
mov
add
and
movsl
mov
and
dec
add
add
inc
push
addr16
rclb
clc
push
fs
pop
rorl
jl
fwait
scas
or
testl
hlt
out
or
je
dec
or
div
and
stc
lds
pop
or
loope
mov
push
jle
insb
sahf
cs
rcrb
sub
test
scas
cmp
mov
and
fbld
pusha
pushf
xchg
movsl
xchg
in
je
inc
add
shlb
xchg
insl
fcomps
xchg
test
mov
add
jmp
call
add
cli
movsb
cmpb
fwait
shl
xor
cmpsl
or
sub
jae
test
inc
mov
lds
pop
js
inc
out
and
imul
es
clc
cld
scas
mov
inc
dec
push
inc
push
daa
into
sbb
mov
mov
aas
push
bound
xchg
xor
inc
or
mov
mov
inc
xor
xor
sub
inc
push
das
adc
dec
loopne
or
adc
adc
xchg
mov
aas
mov
mov
fsubr
hlt
stos
es
loopne
pop
sbb
push
sti
add
inc
call
xchg
xchg
pop
enter
xchg
movaps
inc
stos
fmull
loope
ss
mov
lret
cmpsb
test
mov
out
and
mov
jg
sub
icebp
sti
inc
adc
gs
in
mov
cmp
push
xchg
push
xchg
call
test
insb
sbb
adc
pop
jne
push
mov
hlt
jmp
inc
adc
popf
pop
cltd
pop
insb
jno
lret
dec
outsb
push
or
xorl
les
pop
sub
cld
add
icebp
or
adc
mov
rcr
aas
in
cmp
arpl
leave
cmp
dec
rcl
xchg
push
adc
lods
inc
mov
jge
jbe
into
sbb
xchg
adc
clc
mov
pop
jl
arpl
out
int3
push
push
clc
add
movb
inc
jo
iret
ret
mov
mov
leave
adc
sbb
scas
pushl
cld
fldl
incl
xor
rorl
and
xchg
mov
adc
gs
mov
or
leave
arpl
jns
sub
push
fisubrs
rclb
call
push
jge
int3
pop
icebp
mov
push
into
cli
dec
push
and
bound
outsl
or
lea
dec
and
ret
dec
dec
or
cmpsl
cmp
push
or
test
stos
fstpl
dec
ffreep
daa
inc
pop
push
cmp
stos
mov
push
push
sysenter
jne
or
pop
in
mov
ljmp
inc
jl
rorl
sbb
mov
mov
lret
popl
aas
lahf
lret
ds
lds
mov
pusha
dec
mov
lcall
xchg
pop
fidivrl
mov
out
imul
addr16
cld
loop
dec
shr
sub
fldcw
push
xchg
inc
inc
ret
sub
push
sub
pop
popf
shlb
cmp
add
int3
push
filds
loope
cs
icebp
xor
pop
sti
sbb
mov
mov
std
lods
enter
fwait
shlb
adc
xor
adc
cmp
add
aaa
gs
mov
dec
dec
add
and
mov
imul
xlat
loop
push
lods
and
fs
xchg
push
cmp
movsb
out
cmp
xchg
mov
dec
push
xor
push
dec
and
scas
shl
movsb
stc
push
jp
ljmp
push
fimull
mov
mov
out
mov
ret
out
cmp
test
sahf
dec
push
insl
outsl
push
inc
fistpll
inc
xor
jl
test
mov
outsl
inc
mov
iret
aas
lea
roll
sub
push
shrb
fwait
add
imul
call
leave
cs
addb
filds
sub
jae
hlt
mov
repz
adc
cltd
fbld
mov
cwtl
negl
pop
outsl
lods
mov
mov
mov
and
arpl
mov
mov
push
sahf
test
cmp
push
cmpsl
hlt
test
pop
aas
std
push
lahf
cmpsb
xchg
ja
cmp
cld
out
mov
mov
or
ret
adcl
in
sahf
cwtl
mov
push
pushl
pop
mov
add
add
push
add
gs
in
out
scas
cmpsl
dec
and
fwait
jg
sbb
aam
jp
stc
xor
ja
or
int3
inc
jne,pn
ret
xor
testl
xchg
dec
aaa
or
jae
cmc
lds
ret
pop
mov
pop
lcall
jbe
push
into
sub
inc
outsb
imul
dec
pop
lret
and
or
rolb
push
jmp
inc
dec
pop
or
sbb
test
repnz
mov
cs
mov
mov
pop
outsl
xchg
mov
cmp
xchg
sbb
movsb
xchg
sub
xor
cmp
jne
dec
ljmp
jmp
xchg
mov
mov
or
std
mov
rol
sbb
and
nop
fwait
divl
and
xchg
mov
call
mov
stc
adc
cmc
mov
test
cmp
xchg
cmpl
repz
js
sub
test
enter
mov
sub
js
mov
ret
daa
pop
rclb
lahf
pop
cmc
in
xchg
push
insb
xchg
lock
sbb
jge
push
rorb
rcrl
int
mov
push
lock
xor
adc
mov
mov
fidivrl
jge
xor
lcall
sub
push
std
fs
push
jl
icebp
mov
add
xor
lods
cli
int
insl
cwtl
add
test
push
outsl
int3
sub
outsb
mov
or
xchg
jb
imul
or
mov
adc
xchg
shlb
loopne
add
mov
inc
loope
xchg
mov
and
xchg
cltd
mov
fldl
shrl
dec
fimull
shl
insb
xchg
pop
ds
aam
cmp
mull
mov
sub
push
pusha
cmpsb
dec
enter
popf
dec
or
lods
pop
lds
stc
mov
dec
mov
out
popa
push
and
ret
call
imul
adc
cmp
mov
pushf
jne
lds
pop
mov
jae
inc
cmp
ljmp
xor
imul
into
dec
mov
test
adc
dec
adc
dec
ja
xchg
add
loop
pop
pushf
ret
sub
fsts
inc
xchg
mov
push
hlt
mulb
rorb
mov
add
cmp
jne
aam
push
adc
test
fs
dec
in
mov
lret
mov
testb
cmp
stc
push
dec
scas
push
xor
push
insl
cmc
mov
fucompp
dec
das
repnz
adc
jle
xchg
jmp
cmpsb
or
sar
mov
dec
in
pop
mov
hlt
pop
hlt
pop
bnd
and
mov
and
loope
cs
dec
sub
rcrl
mov
adc
push
sub
mov
mov
push
enter
mov
test
and
sahf
xchg
xor
sbb
orl
xor
or
cmc
scas
inc
mov
mov
lcall
add
push
xchg
mov
inc
pop
pop
in
mov
setg
push
sbb
xor
ret
xchg
cmp
fiadds
push
inc
jp
dec
pop
push
aas
dec
push
lods
pop
or
inc
mov
xor
dec
pop
jge
ja
mov
jp
mov
addb
inc
fidivs
xchg
daa
jne
subb
and
fmull
jae
fcompl
pop
jns
adc
sbb
popl
pop
stos
add
push
and
scas
movsl
int
stos
movsb
dec
outsl
add
fadds
hlt
iret
mov
adc
cs
aad
pop
push
sub
movsb
sub
sub
push
nop
rol
testl
repz
add
dec
ret
jns
imul
xor
adc
inc
jbe
repnz
fistps
mov
cmpsb
je
push
dec
jg
and
mov
mov
test
popf
inc
dec
enter
xlat
std
xchg
pushf
inc
sub
push
xchg
jb
sbb
enter
push
js
addr16
push
pop
mov
dec
frstor
inc
cwtl
test
repnz
push
push
dec
dec
in
sbb
dec
in
aam
push
mov
in
sbb
inc
js
jmp
xchg
cmp
ret
adc
pop
mov
push
xchg
add
mov
jle
mov
sbb
bnd
push
rcrb
or
xchg
nop
pop
addb
out
in
imul
enter
cmp
aaa
enter
dec
adc
test
rclb
add
and
insl
leave
out
jmp
xchg
dec
push
imul
addr16
mov
cmp
cli
lahf
mov
es
sub
gs
mov
ret
pop
xchg
sub
inc
mov
xor
or
xor
addr16
mov
pop
nop
sub
sbb
cld
pop
in
fdivrs
stos
jnp
push
pop
aaa
fadds
fidivl
rorl
in
pop
call
int
inc
mov
pusha
push
inc
aaa
enter
fld1
adc
mov
ja
cld
nop
sbbl
nop
lods
int3
lea
and
out
test
adc
loopne
add
inc
rolb
mov
shl
icebp
inc
cmp
sbb
jne
movmskps
leave
push
or
out
mov
popf
popf
sub
ffree
sbb
inc
nop
sbb
cmp
fdivrp
jb
xor
pop
add
dec
mov
cmp
out
mov
enter
xor
in
dec
xor
adc
xchg
sbb
mov
repz
sbb
outsl
lds
dec
dec
jmp
mov
xor
insb
mov
pop
cmp
cmpsl
mov
gs
js
popa
and
sub
dec
xchg
jl
xlat
fucomi
cmp
pop
dec
pop
stos
pusha
and
int
cwtl
ret
pop
cld
mov
mulb
mov
stos
stc
fnstcw
hlt
out
cmpsb
push
sbb
lods
sub
sub
or
push
pop
mov
adc
movsb
add
mov
addb
pop
xor
dec
bound
es
or
sub
mov
jbe
in
mov
mov
les
pop
rcll
pop
popa
push
test
or
push
out
data16
out
in
arpl
add
outsl
clc
clc
cmp
popa
pop
dec
fwait
movsb
outsb
scas
test
mov
or
out
pop
pushl
push
push
push
scas
iret
sbbb
adc
mov
imul
mov
into
xor
sarl
lock
fdivr
inc
sbb
sbb
lods
int3
mov
inc
cwtl
dec
mov
xchg
mov
jne
add
mov
adc
in
cmp
jne
cmp
or
xchg
lods
lret
jnp
adc
add
lods
cmp
into
mov
scas
out
sti
out
adc
jnp
inc
mov
into
jecxz
aad
pop
pop
aam
or
int3
mov
dec
in
pop
push
mov
push
js
movsl
lahf
cltd
pop
or
mov
mov
and
es
in
adc
jae
in
das
jo
out
and
mov
jle
test
test
sbb
inc
div
sbb
ss
loope
inc
mov
adc
add
andb
inc
add
pop
or
xchg
pop
push
cmp
in
xor
mov
aas
data16
add
insl
shll
insl
test
inc
arpl
add
mov
dec
mov
xchg
lahf
int
push
adc
ljmp
aaa
inc
sti
add
imul
pusha
shlb
mul
test
add
push
and
aas
dec
jns
jne
xor
les
rclb
popf
cmc
in
mov
les
add
enter
testb
and
cmp
push
fistpl
lods
imull
cwtl
iret
add
fistl
sbb
cld
push
push
dec
xchg
adc
dec
and
mov
sub
clc
ljmp
daa
shlb
jno,pn
jne
loopne
push
xor
or
cmpl
cmp
xor
and
lret
xor
out
sbb
pop
das
xchg
mov
out
sar
dec
add
aas
leave
pop
xchg
jecxz
test
sbb
lahf
loopne
arpl
adc
outsb
ss
arpl
push
fs
ja
icebp
mov
mov
in
mov
sub
clc
pop
inc
sub
cmpsb
gs
mov
scas
sti
mov
cmp
mov
jbe
push
mov
stos
sub
das
jmp
dec
pop
in
push
clc
aam
adc
push
call
jge
and
push
cmp
inc
daa
sub
add
adc
push
test
mov
bound
mov
sbb
sbb
xchg
in
mov
xor
test
inc
fstpt
xchg
fsts
mov
xor
movsl
imulb
push
mov
enter
enter
loope
dec
stc
ljmp
mov
jmp
inc
mov
shlb
aaa
subl
std
cmpsb
mov
xor
movsl
xchg
mov
jecxz
cmp
jp
jns
js
repz
and
xchg
jb
pop
mov
testl
and
sahf
sub
leave
dec
cwtl
xchg
rorw
inc
or
test
test
aaa
test
dec
add
fmuls
add
push
dec
push
and
insl
lods
pusha
adc
adc
push
inc
sbb
ret
sti
pop
lods
enter
inc
out
aad
mov
add
enter
xchg
bound
cmpsl
jae
inc
mov
cmp
test
rcll
adc
add
pop
fs
xchg
insl
cmp
mov
and
xor
jl
mov
movsb
mov
sbb
push
test
cmp
leave
dec
jl
mov
cwtl
push
xchg
mov
adc
into
mov
xchg
lcall
ljmp
sbb
and
push
adc
shll
test
test
shlb
and
adc
pop
pop
pop
test
pop
fsubrs
popa
push
jb
loop
cmp
push
mov
outsl
leave
imulb
sub
sbb
mov
lret
test
sbb
js
mov
or
iret
add
sub
fs
inc
fdivs
dec
lahf
jle
xor
lods
or
pop
mov
sbb
adc
test
dec
pop
sbb
xchg
js
lahf
mov
inc
arpl
cltd
subb
test
incl
orb
cmp
outsl
mov
dec
mov
mov
xchg
push
and
mov
addr16
push
xlat
sub
andb
and
cmp
pushf
push
add
fcoms
sbb
lds
aad
pop
daa
sub
add
and
push
sbb
push
pop
xlat
xchg
inc
hlt
or
lds
mov
push
iret
adc
adc
enter
shl
incb
outsl
dec
or
jmp
mov
pop
mov
mov
outsl
or
fdivr
mov
jle
cmp
clc
rcrl
test
xchg
jle
bound
push
inc
sub
data16
xchg
mov
stos
orb
sbb
add
es
push
push
lds
xchg
or
sub
and
js
cmp
pop
out
jb
and
dec
cs
imul
mov
test
hlt
stos
sub
inc
test
push
adc
inc
jnp
sbb
mov
push
xchg
mov
or
add
add
push
dec
and
add
lods
mov
cmp
js
lahf
outsb
and
stos
pop
lods
or
jle
or
pop
clc
cmp
hlt
and
test
movsl
gs
xchg
sub
aad
xchg
and
jg
lods
or
dec
aad
cmp
dec
test
jno
sub
mov
lods
xor
nop
test
mov
add
jo
jle
xchg
in
adc
or
add
cltd
test
xor
mov
or
repz
adc
jle
or
filds
pushf
mov
fdivrp
gs
in
and
xchg
push
arpl
fiadds
adc
adc
mov
fmull
mov
push
shl
sbb
and
or
dec
fmuls
adc
push
jo
jmp
iret
pusha
adc
xlat
push
and
dec
adc
push
cmp
sbb
cmp
pushf
out
or
mov
orb
mov
sbb
jge
in
call
test
jle
cmp
mov
pop
pop
dec
sbb
dec
mov
push
cmp
enter
ficompl
add
imul
or
xchg
clc
pop
test
pop
pop
sbb
enter
or
pop
aad
mov
cmp
jmp
pop
pop
xlat
or
movsb
int3
dec
xchg
arpl
or
push
fs
dec
jns
add
rolb
fbld
dec
xor
sub
dec
jmp
push
mov
aas
loopne
xlat
int
inc
add
adc
testl
or
sbb
test
sbb
or
iret
adcl
clc
ffreep
popa
test
mov
mov
insl
dec
or
bound
pop
pop
add
mov
rorb
dec
pop
or
xor
pop
dec
push
repz
bound
fistl
dec
test
rorl
lds
xlat
dec
mov
mov
cmc
push
scas
xlat
push
and
dec
pop
clc
push
or
ljmp
sub
test
ljmp
inc
jle
cmp
lret
jmp
pop
xor
mov
xchg
test
pop
pop
or
fcoml
pop
pop
push
xchg
divl
mov
adc
lds
xchg
xlat
dec
mov
fcmovne
push
adc
xchg
push
dec
lret
xlat
inc
and
je
cmp
sub
sbb
and
cmp
cmp
dec
sbb
test
clc
cltd
jg
out
adc
stos
in
xlat
fisubs
test
cmp
mov
lret
les
sbb
and
and
loopw
lods
adc
mov
cmp
lahf
int3
and
or
or
mov
dec
xchg
jmp
pop
xlat
add
mov
or
add
and
or
jo
mov
adc
test
mov
push
mov
test
imul
xor
ja
mulb
mov
cmp
xchg
sub
aad
nop
and
jge
lods
or
dec
aad
cmp
inc
test
or
and
sub
ficoms
lcall
orb
sub
sbb
xor
test
out
inc
enterw
xlat
bound
mov
or
dec
inc
add
aam
dec
test
mov
or
insb
xchg
xlat
pop
mov
xchg
iret
push
adc
xlat
push
and
push
mulb
fs
xchg
sub
aad
nop
and
jge
lods
or
xlat
xorl
pop
xchg
test
inc
mov
xchg
daa
bound
pop
pop
add
mov
rorb
dec
pop
or
xor
pop
dec
push
repz
bound
fistl
or
push
ljmp
dec
ss
dec
jno
stos
cmpsl
pusha
mov
xchg
inc
cmpsl
lds
adc
dec
mov
jae
add
inc
dec
sbb
and
loop
sub
imul
mov
rolb
or
lahf
test
push
dec
lods
js
hlt
inc
scas
out
aad
das
bound
pop
pop
add
test
cmp
and
push
pop
pop
dec
sti
rorl
pop
xchg
mov
cmp
xchg
fildl
lds
xlat
ds
cmpsl
iret
adc
xlat
push
and
inc
adc
push
add
or
notb
addr16
xchg
andb
nop
xchg
rcl
dec
mov
dec
iret
ret
add
and
in
sahf
stos
mov
and
andps
dec
fdivrp
lods
jmp
test
aad
sbb
cmc
jle
cmp
pop
aad
mov
cmp
jmp
pop
mov
xchg
sbb
pop
dec
push
and
or
dec
push
mov
and
mov
scas
lods
inc
out
pop
aad
push
dec
mov
or
pop
and
dec
roll
sbb
inc
das
lods
jo
stc
adc
sbb
xlat
jmp
push
lahf
adc
loope
repz
and
cmp
or
mov
jo
or
xchg
sub
push
add
and
pop
and
and
daa
mov
sub
mov
mov
inc
mov
cmova
push
jb
mov
shrb
in
imul
sbb
or
push
push
add
test
pop
cmp
sub
ja
jne
jae
xor
stc
popa
push
jns,pt
xor
sbb
jecxz
and
add
lahf
or
add
fstl
xchg
push
add
ja
outsl
mov
jmp
and
push
or
ror
in
cmp
and
ja
stos
inc
test
dec
mov
inc
inc
and
mov
add
pop
adc
sbb
and
rorb
test
xor
inc
dec
inc
iret
shr
xchg
ss
call
leave
fs
arpl
add
insl
jge
imul
add
xchg
pushf
fs
mov
cmp
mov
shrl
lock
dec
cmp
or
hlt
push
jbe
xchg
jl
push
jp
mov
push
dec
or
mov
sbb
pop
xchg
cmp
dec
inc
sbb
jno
mov
icebp
adcb
lods
inc
push
cmp
push
or
ret
data16
lret
lahf
adc
mov
cmpsb
out
cmp
and
je
jmp
sbb
lret
incb
das
je
outsb
jge
sbb
out
clc
inc
add
pop
inc
inc
les
daa
aam
pop
cmp
pop
and
adc
and
call
fsubrs
jns
jbe
add
fstpl
jnp
xor
dec
imul
and
pop
clc
fildll
push
cltd
xor
add
push
dec
cmp
shlb
mov
insb
ds
xor
adc
ss
push
data16
insl
dec
cmpsl
xchg
in
xchg
xchg
lcall
outsl
push
jae
cmpsb
and
sahf
imul
xchg
or
and
das
or
repnz
push
ds
adc
es
add
and
sbb
xor
push
nop
lods
dec
jp
dec
sbb
sub
push
in
lds
into
dec
inc
push
movl
push
dec
mov
jnp
js
arpl
shrl
out
ja
mov
notb
xchg
in
xchg
fs
xchg
test
cmp
push
filds
add
repz
mov
loope
mov
sbbl
sub
jmp
cmp
stc
adc
dec
mov
pop
mov
or
outsl
push
ja
or
call
js
shrb
mov
cmp
and
xchg
inc
test
mov
mov
inc
mov
cld
push
mov
add
adc
mov
mov
and
in
fistpll
nop
imul
int3
inc
inc
insb
rcrl
xor
push
into
hlt
sti
cwtl
outsb
test
fldl
adc
push
cmp
inc
jbe
mov
je
out
divl
leave
sti
movl
adc
aas
sub
pop
imull
cmpl
xlat
stos
cmpsl
scas
inc
jo
or
xor
xor
idivb
push
pop
rorb
xchg
js
aaa
sbb
into
mov
es
enter
adc
add
mov
inc
inc
inc
nop
movsb
pop
jle
adc
mov
sub
rorb
xchg
notb
inc
test
pop
or
dec
in
iret
addr16
addr16
mov
jl
xor
jp
je
js
test
test
pusha
mov
mov
repz
push
inc
jno
push
ret
ret
movsl
mov
fwait
outsb
je
cmpsl
lods
inc
fldl
cmpsl
js
mov
add
inc
add
subb
jbe
loop
and
cmpsb
and
dec
test
cmp
mov
cli
clc
imul
test
les
xor
dec
mov
mov
test
mov
add
adc
pop
dec
inc
cmp
inc
addr16
jmp
xor
sub
fwait
dec
or
jp
add
or
arpl
adc
dec
jp
imul
push
cmp
mov
inc
pop
test
ret
stos
ret
lcall
out
xlat
xchg
sbb
inc
and
stc
push
pop
iret
jno
sbb
mov
ret
adc
jb
scas
fcomi
and
dec
push
sub
dec
inc
rorl
subb
or
mov
ds
pop
std
movsb
test
testl
cmp
shll
jle
hlt
xor
mov
adc
mov
or
cwtl
dec
mov
mov
jge
test
loope
mov
adc
bound
xor
fcmovu
pop
test
ss
or
icebp
loope
xchg
int
push
fwait
xchg
xchg
fs
push
pop
je
int
div
and
cwtl
push
loop
andl
sbb
xor
sbb
inc
or
adc
ss
push
and
jle
jmp
pushf
test
push
adc
jb
jo
mov
or
dec
mov
es
mov
adc
adc
je
fsubl
rcrb
add
test
mov
cmp
xchg
out
sub
jo
dec
pop
sub
or
mov
adc
aas
nop
sbb
xlat
je
div
xor
int
stos
mov
xor
push
and
inc
or
sub
adc
sahf
repnz
mov
insl
lds
dec
fisubl
mov
mov
jmp
dec
adc
sub
or
push
jge
test
cmp
pop
mov
push
and
sbb
adc
ss
pop
fs
in
sub
aam
bound
dec
mov
js
mov
lock
and
pusha
leave
mov
sub
les
je
jne
adc
or
popa
scas
shll
sbbl
sbb
repnz
or
cmp
bound
arpl
mov
xchg
mov
aam
movsb
xchg
idiv
loopne
push
and
in
roll
and
or
lahf
jmp
push
bound
data16
idiv
je
push
dec
and
dec
lods
repz
test
test
and
or
xor
out
aad
test
mov
fisubs
fcompl
sbb
jne
loop
outsl
aas
out
leave
ljmp
aad
add
add
pop
test
push
mov
inc
gs
enter
in
sbb
dec
xchg
or
in
cmp
push
pop
or
inc
std
lods
xlat
adc
jmp
push
arpl
inc
mov
mov
into
inc
lcall
dec
jmp
bound
xchg
insb
out
xchg
mov
dec
cmpsl
xchg
jb
inc
cmp
shrl
imul
loope
or
dec
sub
and
fxch
add
adc
or
repnz
sub
lods
mov
inc
cmp
inc
dec
sahf
loop
sub
mov
push
test
fnstenv
arpl
mov
in
das
fisttpll
pop
adcl
adc
xor
loop
je
sub
add
mov
dec
adc
sbb
ror
js
icebp
cmp
mov
inc
xchg
xlat
cmp
push
insb
mov
je
push
movd
jp
adc
std
imul
hlt
fs
mov
ret
outsl
pop
jne
fcomp
in
inc
mov
sub
inc
leave
les
or
je
icebp
out
mov
out
and
adc
inc
push
pushf
sub
or
lods
sbb
ret
pop
stos
in
stc
hlt
gs
jp
es
mov
outsl
add
add
mov
sub
cmp
sbb
clc
mov
fwait
popf
loope
jno
adc
dec
in
mov
fcomip
clc
mov
mov
pop
call
rorb
jno
xor
das
cli
mov
lret
lds
lea
shrl
push
mov
cmp
jp
in
add
dec
mov
std
and
jecxz
adc
and
sub
ja
sbb
rclb
jmp
inc
cmpsb
bound
nop
int3
std
or
mov
pop
mov
pop
call
je
xchg
clc
sarl
xchg
pop
inc
xor
jmp
or
enter
shld
insb
jg
push
or
mov
addr16
xor
sub
jp
daa
push
dec
inc
cmp
outsl
sti
into
loope
or
mov
sbb
movsl
sub
sbb
sub
mov
out
aad
add
js
mov
and
and
mov
dec
xchg
xor
push
fbld
xchg
pop
add
jmp
push
in
pop
lret
adc
mov
bound
push
das
das
jno
jo
pop
scas
lods
hlt
mov
adc
fidivrl
mov
fistps
fwait
imul
push
push
ja
mov
inc
push
sbb
and
sbb
int
inc
sti
hlt
arpl
xchg
loop
add
and
sub
dec
pop
mov
jl
pop
cwtl
push
in
stos
shl
out
call
icebp
inc
and
stos
and
das
rcrb
push
mov
enter
mov
lods
jge
movsl
mov
ficoms
inc
push
adc
test
cmpsb
mov
mov
je
xor
hlt
popa
sbb
jp
mov
mov
movsb
xor
repz
adc
inc
call
cltd
fisttps
mov
xor
psllq
xor
leave
pop
pop
insl
push
cltd
sets
loop
mov
xorb
dec
dec
xchg
lret
or
adc
inc
and
dec
adc
cld
adc
sub
mov
outsb
and
int3
bound
pusha
test
lods
jecxz
mov
push
int
mov
mov
inc
call
cmp
shr
int3
out
pop
ss
pop
mov
mov
scas
gs
lock
mov
mov
pop
sbb
inc
adc
insb
xchg
repz
movsb
outsb
and
cwtl
fstpt
orb
fidivrs
cli
fistps
xor
push
adc
sub
xor
push
sbb
mov
pusha
or
xchg
mov
sarl
dec
xlat
cmp
or
or
jne
push
dec
cli
in
push
pop
in
mov
into
dec
sub
arpl
bound
sub
dec
push
mov
inc
sar
rcrl
mov
and
jl
add
data16
cmc
jns
adc
shll
xchg
mov
pop
out
pop
adc
inc
jb
mov
cmc
sbb
sbbb
lods
inc
mov
stos
in
xor
aam
pop
xor
or
xlat
pop
push
jbe
add
mov
push
xor
ja
testl
and
test
mov
xor
xchg
test
minps
call
inc
xchg
lahf
lcall
dec
in
punpckhbw
lods
pop
stos
push
inc
filds
dec
push
repz
test
std
adc
pushl
xchg
cmpsb
repz
out
jb
out
pushf
pop
inc
jecxz
imul
cmp
jno
imul
orl
xchg
or
scas
pushf
jl
jmp
mov
jp
push
push
ljmp
aam
and
andl
mov
jg
mov
insl
orl
sti
js
stos
sbb
xor
shld
pushf
sub
nop
out
xlat
insb
lods
cmp
and
add
je
mov
int3
mov
adc
adc
inc
sbb
xchg
add
push
cltd
and
xor
stos
adc
sub
and
lret
inc
adc
sti
ds
clc
dec
adc
cli
add
cwtl
lock
into
scas
mov
push
mov
cmp
xchg
call
orl
hlt
or
insb
mov
adc
pop
fcmovnu
ss
cmp
push
out
and
adc
adc
int3
xchg
fimull
stos
jmp
dec
iret
mov
and
xchg
mov
lret
in
xor
and
repz
aad
mov
mov
shrl
xchg
xchg
xchg
xchg
out
jo
mov
loopne
inc
aad
std
scas
dec
jnp
ss
mov
out
inc
push
ret
mov
dec
cs
test
popa
jl
pop
jae
fs
je
addr16
aad
add
pushf
fildl
pop
jg
out
push
in
sub
cmp
test
adc
pusha
jge
inc
pop
xchg
xchg
xor
inc
xor
mov
dec
in
std
xchg
rorb
pop
clc
pop
fldcw
dec
mov
in
xor
jge
add
add
push
inc
mov
fwait
movl
and
sub
lret
lcall
in
scas
push
pop
add
cmp
jge
mov
or
jg
xor
out
js
cltd
loop
stos
jnp
cmp
xchg
push
jg
fstl
add
lods
sub
xchg
xor
icebp
xchg
scas
shlb
cmp
nop
into
push
adc
mov
mov
aaa
aas
jo
sub
aaa
mov
xor
push
mov
jno
push
dec
dec
push
or
and
cli
notl
hlt
adc
cltd
adcb
std
dec
mov
xchg
in
into
faddp
or
js
and
push
bnd
shlb
in
jno
dec
adc
push
pop
push
or
push
adc
icebp
inc
inc
pop
inc
mov
pop
push
inc
out
insl
pop
mov
xlat
cs
or
dec
jbe
ret
sub
fsubrs
pushf
mov
mov
jne
jbe
push
pop
cmpsb
adcl
mov
xchg
mov
mov
fchs
xor
rol
rorb
repz
xchg
outsb
ds
and
xchg
xlat
sbb
mov
in
xchg
push
inc
int
lret
lret
xchg
jnp
fabs
gs
lods
jmp
adc
inc
push
inc
leave
mov
sahf
ret
into
pop
repz
out
or
stos
test
jb
pop
stos
and
mov
push
mov
inc
jae
push
ret
fwait
mov
icebp
lods
sub
ret
xor
jge
sub
xchg
xchg
bound
cs
sub
mov
stc
cli
out
outsb
call
cmp
mov
pop
insb
xchg
push
cltd
pop
je
rclb
loopne
add
mov
lock
mov
inc
movsb
adc
mov
pop
fbld
dec
mov
inc
test
push
scas
xor
add
dec
dec
movq
sbb
addb
jecxz
adc
push
cld
and
inc
add
sub
arpl
pop
in
jns
insb
gs
scas
push
popf
add
imul
clc
and
mov
daa
mov
inc
cmpsl
popf
mov
inc
int
jno
xchg
xchg
bound
mov
nop
punpcklbw
nop
or
enter
bound
sbb
leave
cld
and
out
pop
jge
inc
inc
mov
js
outsb
lds
fdivl
sti
movsl
enter
cmp
sbb
mov
std
js
popf
hlt
adc
mov
mov
and
mov
jno
dec
push
call
pslld
push
or
dec
mov
pop
xchg
out
sbb
mov
sbb
and
mov
mov
jb
jmp
cmovns
movsb
xchg
pop
mov
push
xchg
xor
out
sbb
inc
push
ficompl
adc
and
mov
push
inc
ljmp
inc
push
add
and
dec
dec
js
das
pop
lahf
in
push
scas
add
xchg
jp
push
and
pop
movb
insb
sub
shll
sbb
jge
test
xchg
test
push
mov
adc
xchg
in
lret
mov
add
iret
loopne
frndint
fldl
lcall
push
pop
jp
fadds
push
sub
gs
jl
jbe
es
sbb
ds
fcmove
aas
mov
ljmp
gs
mov
insb
dec
fbld
ret
pop
fidivrl
add
and
mov
or
xor
cmpsb
and
inc
scas
dec
mov
mov
dec
nop
and
insb
rcll
and
mov
pop
nop
in
xor
mov
in
pop
pusha
hlt
stos
cmpsl
and
leave
jecxz
aam
pushf
jecxz
sub
fidivl
dec
mov
pop
dec
dec
lcall
add
inc
ret
pop
dec
leave
movups
movsl
dec
mov
outsl
mov
imul
sbb
push
jae
push
stos
or
test
hlt
addr16
push
cmpsb
sbb
adc
and
or
push
loopne
leave
inc
sbb
sbb
xlat
cmp
repnz
cmp
out
and
in
aaa
push
fmul
popf
out
pop
push
or
mov
popa
int
fidivl
out
inc
xchg
and
xor
sub
das
test
jp
jle
outsb
frstpm(287
xor
xor
push
enter
fdivl
or
daa
mov
andl
aam
rcrb
fcomps
xchg
lods
push
cwtl
mov
pop
mov
outsb
rcrb
movsl
es
int
adc
rorb
in
mov
push
xchg
xor
cmp
pop
sbb
sub
into
lret
std
inc
dec
mov
std
sub
jl
pop
mov
xchg
and
or
or
xor
insl
shll
dec
push
ficomps
and
outsl
push
mov
and
arpl
vaddps
in
ljmp
cmp
xchg
push
xchg
xchg
sub
rorl
andb
loop
mov
sahf
inc
nop
xlat
ljmp
andb
ja
sub
enter
out
xchg
push
les
and
adc
popf
inc
add
push
dec
popf
fidivs
fs
pop
xor
bound
xor
fwait
mov
push
je
test
mov
test
xchg
lret
cmp
mov
sub
add
and
jbe
xor
jmp
mov
fstpt
adc
xchg
add
adc
xchg
dec
jle
ret
pop
inc
dec
xchg
clc
lret
push
fadds
mov
and
lret
push
adc
sub
mov
je
enter
pop
inc
pop
pop
daa
je
je
loopne
test
cmp
js
scas
fcompl
in
movsl
pavgb
enter
sbb
fxsave
repnz
inc
stos
mov
sub
pop
arpl
rolb
or
pop
or
inc
outsb
addr16
inc
mov
into
push
addr16
pop
je
test
add
lods
bound
mov
je
cmpsl
or
lea
dec
lret
rcrl
cmpsb
cltd
mov
xchg
pop
dec
in
pop
xor
xchg
add
rcr
pop
jmp
inc
ja
cmpsl
ss
sub
outsb
out
lods
shrl
fldt
cmp
inc
jmp
jne
or
test
je
ljmp
subl
push
push
add
mov
cmpsb
and
decb
jb
ja
js
adc
jecxz
ret
mov
mov
add
imul
push
jge
je
xchg
test
cmp
fidivl
div
sbb
mov
adc
adc
cs
dec
and
push
into
mov
fsubp
fstp
call
fldl
cmc
iret
xor
loop
pop
mov
inc
popa
imul
ror
xchg
mov
lret
pop
shrl
inc
inc
lret
enter
andl
shl
and
jl
inc
loopne
mov
loopne
dec
mov
push
repz
mov
dec
nop
insl
lret
mov
mov
sti
js,pn
xchg
push
in
cmp
push
mov
dec
inc
fisubrl
cmp
jo
cs
lods
or
pop
or
rcrb
adc
xor
mov
adc
outsl
adc
loope
lods
pop
push
xchg
ret
jae
sbb
fdivs
pop
les
mov
adc
pushf
shll
dec
cmp
mov
or
lret
test
inc
pop
dec
mov
and
and
xchg
dec
sbb
add
push
lock
xor
je
lods
add
cld
jp
inc
dec
xchg
insb
mov
sub
test
adcb
mov
sub
mov
daa
orl
fcoml
push
cmpsl
push
mov
cmpsl
mov
sub
and
push
jmp
xchg
sarb
rcr
adc
jno
inc
dec
in
imul
flds
rcll
iret
xchg
test
dec
je
xchg
xchg
adc
sub
xor
dec
insb
mov
xor
je
outsl
xchg
in
adc
xchg
sahf
inc
pop
out
adc
test
mov
xchg
in
cmp
fisubs
fistps
push
mov
mov
lds
outsb
and
pop
xchg
sbb
cmp
int
rclb
pop
test
fistpl
lret
xchg
lds
popf
xchg
test
int
inc
movsb
gs
insl
and
mov
movsl
mov
adc
mov
bound
jg
xchg
sub
mov
sbb
aas
lods
adc
sub
xchg
lock
mov
nop
lock
jbe
mov
out
ja
inc
daa
jbe
orb
push
scas
imul
movsl
cmpsb
sbb
pusha
pop
xor
inc
adc
jb
scas
dec
and
sub
and
push
push
mov
and
adc
je
pop
insl
les
mov
xchg
adc
adc
mov
movsb
jg
std
inc
mov
repnz
shl
bound
jns
push
pop
fistpll
xchg
into
jb
je
leave
adc
sub
addr16
push
les
and
pop
ljmp
jle
cli
and
pusha
jge
insl
jbe
leave
jl
push
pop
jno
add
popf
ja
call
mov
xor
jp
inc
mov
jo
sbb
lea
xor
cmp
lea
lock
lea
xor
cli
jle
lea
jo
lcall
repz
lock
pop
sahf
and
push
add
xchg
jp
inc
mov
jo
sbb
xor
cmp
lock
lahf
movsb
lea
xor
cli
lahf
les
lcall
adc
sbb
lret
and
push
inc
xor
out
int
inc
jo
sbb
lea
xor
out
lea
lock
out
lea
xor
out
lea
jo
lcall
push
loope
lea
lock
pop
fldenv
push
adc
jp
inc
outsb
push
aam
mov
aas
lea
xor
push
xor
fidivrl
movsb
lea
xor
push
add
lcall
mov
push
add
push
xor
add
and
push
xorl
mov
sbb
lea
xor
push
add
mov
aas
movsb
lea
xor
push
add
lcall
mov
push
add
push
xor
add
and
push
xorl
or
sbb
lea
xor
iret
test
fcmove
movsb
lea
xor
iret
les
lcall
inc
mov
or
cs
mov
sbb
xor
repz
lret
lock
outsb
pusha
sub
enter
lret
sahf
jp
cmc
xchg
ficompl
cmp
ljmp
mov
daa
scas
sub
sti
dec
js
daa
inc
shll
test
sub
dec
icebp
incb
push
out
lea
cmp
lea
or
lea
sbb
out
out
lea
or
lea
add
inc
push
shll
fs
push
mov
ret
stc
mov
xchg
stc
in
xor
sbb
loope
out
cmp
jl
dec
aam
dec
cmp
jle
inc
inc
add
add
xor
sub
mov
cmp
mov
cmp
add
repz
pop
ss
inc
adc
jne
cli
repz
repz
mov
testb
call
cmp
clc
pop
xchg
dec
or
lea
shlb
int3
lea
add
cwtl
cld
in
dec
add
lea
in
shll
mov
dec
int3
dec
mov
or
add
lods
jbe
popf
or
pop
xchg
xor
ret
lahf
stos
bound
jg
mull
cs
mov
into
xor
mov
and
adc
add
jmp
je
or
dec
into
jb
jbe
data16
icebp
das
jle
mov
sub
mov
push
mov
in
add
ret
lahf
nop
xchg
xchg
repnz
lret
test
dec
popf
loope
int
inc
hlt
pop
pop
fnstcw
push
adc
jl
stc
loop
adc
xor
je
enter
setg
jns
adc
xor
outsl
mov
lods
mov
cmp
stos
cmpsb
add
jne
adc
ja
in
lahf
jmp
cmpsb
mov
sub
sahf
xchg
and
add
xor
add
jnp
pop
je
stc
mov
jne
aas
jb
mov
mov
ds
jp
dec
jo
inc
cmpsl
add
jbe
in
inc
ljmp
test
mov
or
sbb
cmp
xchg
mov
jns
sub
inc
push
mov
xor
xchg
push
push
mov
repnz
inc
and
inc
shrl
mov
test
mov
xor
js
inc
adc
fistl
cmp
insb
and
mov
shlb
or
xchg
test
leave
inc
mov
sarb
add
mov
popf
fadd
ret
fwait
data16
xchg
movsl
in
jp
add
stc
sub
push
adc
adc
xor
aad
or
aaa
jle
cmpsl
js
mov
lods
pop
icebp
mov
adc
lods
mov
pop
xor
xchg
xor
inc
cmc
int
frstor
pusha
fisttpl
pop
in
js
std
cli
popf
adc
sbb
outsb
sbb
inc
push
in
push
into
es
mov
dec
sahf
loope
mov
pop
inc
xor
std
pop
mov
mov
mov
push
mov
pusha
pop
aaa
in
in
outsb
es
ror
movsl
in
add
inc
scas
iret
in
lea
xor
ret
add
push
mov
adc
insl
repz
jns
inc
mov
ss
adc
add
stos
clc
insb
out
movsl
movsl
test
mov
testb
mov
jno
cld
rorb
cld
fisttpl
mov
aas
jbe
jbe
fwait
or
mov
sbb
call
rcl
rorl
shlb
jne
ljmp
rcll
and
out
jns
orb
mov
adc
mov
push
fiaddl
pusha
iret
aaa
cmp
pop
dec
cmp
aas
dec
mov
sbb
fidivrs
loop
mov
sbb
mov
mov
add
divb
fiaddl
dec
xor
sbb
lods
out
cs
hlt
or
int
lds
mov
mov
push
mov
divb
jp
imul
sub
aas
cmpsb
inc
xor
pop
jns
aas
loop
add
push
cmpsb
mov
adc
mov
lret
aas
mov
in
lcall
and
add
push
jmp
xor
mov
sbbb
sbb
idivl
or
xor
cmp
out
push
iret
loopne
popf
mov
and
inc
xor
iret
mov
sub
shlb
cmp
out
push
or
fwait
xor
jp
jle
repz
dec
add
mov
sbb
stc
fnsave
std
jecxz
lock
add
sahf
insl
mov
sub
in
enter
xor
mov
xchg
mov
xor
push
mov
adc
dec
in
or
paddsb
ja
mov
push
mov
mov
les
jb
add
sbb
mov
test
push
push
ret
pop
pop
push
dec
lods
pushl
dec
idiv
jl
xorl
and
nop
das
clc
jg
mov
call
adc
adc
stos
mov
shl
std
aaa
cs
and
aas
pop
and
aas
mov
lods
cli
fs
cmpsb
mov
sbb
aam
sbb
sub
in
imul
popa
gs
and
loope
push
xchg
jo
push
loopne
inc
out
popa
add
push
nopl
js
int
fadds
mov
ror
lahf
jno
fsts
xor
fdivr
lahf
push
adc
stc
addb
mov
adc
dec
fbld
movsb
jae,pn
mov
mov
and
or
jle
hlt
sub
sbb
jle
repz
pop
xor
jle
add
leave
jns
sti
or
xlat
aaa
rclb
es
jle
aas
inc
cmp
dec
movsb
jns
adc
xor
sarl
daa
jbe
dec
cwtl
pop
add
xchg
adc
sub
add
loope
in
sub
mov
xchg
ret
pop
mov
adc
cs
mov
mov
lock
or
icebp
inc
mov
jae
pop
jno
jno
cld
loop
push
add
mov
imul
sbb
push
imul
out
lret
pop
sahf
xor
cmp
repz
pushf
inc
cmp
int
out
cmp
jl
scas
cmp
jge
dec
inc
add
pop
adc
test
aaa
inc
ss
rol
in
int3
clc
push
sub
mov
int
inc
cmp
int
pop
xchg
rcrb
test
into
int
and
and
pop
loop
loope
in
pop
jmp
push
mov
inc
xor
out
xlat
adcb
lock
jge
and
imul
sarl
lea
jle
lea
adc
cmpb
dec
inc
dec
stos
pop
sub
or
mov
lods
stc
repnz
add
xor
ds
fs
cmp
and
xor
iret
mov
pop
daa
mov
outsb
xchg
mov
xor
lock
out
aaa
push
stos
addr16
sbb
cmp
fsubrs
or
test
lds
in
lods
and
mov
sub
lods
adc
arpl
sarl
jmp
loopne
test
lahf
jbe
xchg
mov
cmp
jl
dec
mov
call
jbe
xor
cltd
dec
inc
xor
mov
in
ds
mov
arpl
mov
fists
push
imul
in
rcll
xor
pop
add
imul
cmp
sarl
stos
add
repz
fldcw
mov
fwait
jl
add
and
pop
daa
ret
push
and
pop
push
and
push
mov
pushf
das
mov
in
pop
icebp
push
es
and
jecxz
pop
sbb
scas
cmp
sub
shlb
dec
loope
pushl
into
int3
mov
aas
mov
bound
test
sub
sub
cmp
cmp
out
add
addr16
faddl
out
push
xchg
gs
es
ficomps
shrl
das
xchg
rcll
fmull
jecxz
xchg
add
rcl
test
out
fdivl
repnz
inc
popf
or
xchg
push
sbb
arpl
iret
mov
cmp
pop
dec
into
insl
jp
push
and
xor
loope
mov
cld
outsb
faddl
cwtl
push
jmp
jns
loop
push
add
rolb
fidivrs
es
mov
jbe
sub
loope
mov
add
inc
fsubrs
lods
cmp
fs
mov
ret
xchg
adc
gs
jo
inc
pop
jbe
icebp
fidivrs
mov
test
gs
mov
inc
push
dec
dec
mov
cmp
orl
dec
and
stc
loope
popa
jb
daa
jmp
sub
pop
mov
retw
pop
push
int
mov
add
loope
stos
cmpsb
shufps
outsb
ds
push
mov
ljmp
sbb
mov
lds
dec
dec
add
jp
adcl
das
shl
mov
add
and
stc
jl
sti
lods
mov
mov
or
mov
popa
test
and
int3
test
std
in
addl
test
xorb
dec
or
jnp
ds
dec
add
jl
cmp
jno
in
js
aas
mov
xstore-rng
cmpsl
shll
clc
cmpsl
icebp
in
fsubrs
cmp
repnz
je
mov
push
xchg
mov
inc
sub
lea
push
mov
pop
inc
cmp
jns
aas
xor
jns
aas
movsl
inc
sub
cmp
das
fwait
mov
cmp
mov
xchg
cmpsl
cltd
repz
add
fldcw
int
jnp
jns
or
mov
loop
mov
adc
fwait
jbe
and
rcr
stos
ljmp
add
dec
enter
pop
xchg
fmull
movsb
cmp
cmc
cmpsl
dec
testl
stc
mov
sbb
bound
rcl
jno
sub
icebp
test
pop
xor
inc
cmp
xchg
jno
mov
or
xor
mov
xchg
mov
xchg
adc
mov
sub
jmp
add
add
add
lcall
movsl
out
clc
data16
and
mov
or
jle
adc
mov
mov
mov
and
dec
mov
lea
dec
insb
imul
bound
mov
push
cmp
cmp
jnp
ds
jns
aas
les
add
or
xor
jne
and
push
into
pop
js
pusha
pop
insl
mov
jne
add
push
sbb
xchg
jecxz
or
jno
cld
fadds
push
cmpb
push
popf
int
push
and
loop
ret
shll
add
xchg
adc
and
and
push
dec
xchg
shr
in
adc
stc
stos
sbb
sbb
in
ficoml
add
xchg
hlt
lahf
mov
addr16
xchg
icebp
jno
jne
or
fs
xor
pop
mov
hlt
outsl
ss
sbb
cld
or
jb
or
popa
xor
es
movsb
and
push
push
int
ret
dec
pushf
in
add
daa
push
adc
pop
pop
jmp
in
stc
sub
and
and
pop
shrl
dec
addr16
icebp
rclb
inc
mov
mov
mov
int3
add
cmp
or
mov
push
mov
nop
jne
js
sub
loopne
cmp
jl
dec
repz
sbb
mov
xlat
leave
jge
push
mov
mov
inc
pop
shll
gs
call
outsb
mov
jecxz
mov
rcrl
daa
addr16
cmp
cmp
fadd
ret
mov
call
mov
cmp
pop
add
pop
push
and
mov
stos
push
push
jno
je
stc
in
lea
mov
cmp
lahf
sahf
arpl
imul
imul
and
xor
and
jl
cmp
push
pop
or
icebp
mov
int
jb
mov
lock
arpl
test
imul
pop
mov
stc
in
jne
cld
cltd
test
jmp
std
mov
xchg
adc
xor
les
es
ret
jae
xchg
test
sub
lea
dec
repz
and
inc
inc
pop
cwtl
lret
mov
inc
cmp
aad
add
popa
pop
add
cmc
hlt
fcomps
sahf
cmp
push
fstpt
shrl
pop
pop
and
inc
fsts
push
sub
scas
pop
xor
cmp
adc
push
mov
mov
imul
mov
push
xlat
and
sbb
mov
int
mov
ret
inc
adc
cmp
addl
aas
push
enter
fcomps
movsb
into
gs
loop
daa
and
sbb
fisubrs
push
loope
lea
int3
test
xchg
cltd
pusha
stos
in
mov
popf
add
sub
xor
pop
or
mov
xor
jne
cld
sahf
xor
into
ljmp
mov
mov
roll
daa
test
clc
xor
sbb
das
pop
mov
sub
jmp
call
in
cmp
xor
loope
mov
andl
lock
mov
mov
addr16
clc
mov
lock
pop
add
cmp
insl
ljmp
jae
stos
or
out
lcall
jb
lret
out
mov
jmp
popa
cmp
fnstcw
xlat
xchg
inc
pusha
lahf
xlat
cmp
stc
mov
fwait
push
fadds
cmp
pop
push
dec
loope
dec
add
in
or
imul
xor
idivb
mov
cmp
mov
push
out
pop
loop
sbb
dec
or
loopne
xchg
test
sbbl
add
push
sub
aas
dec
add
add
jle
pop
rcrl
in
add
icebp
fistps
aam
divb
mov
mov
add
fs
arpl
dec
outsb
jecxz,pt
jge
bnd
dec
stc
outsb
push
ja
xlat
out
mov
sarb
rcrl
das
jle
inc
mov
jecxz
in
mov
mov
in
icebp
pop
mov
xchg
pop
js
nop
pop
push
scas
repnz
sub
dec
jg
lcall
push
or
add
pop
jecxz
sti
pop
ret
divl
rcrb
adc
sub
dec
adc
popf
das
add
and
pushl
lods
xchg
jg
daa
jno
aad
push
or
inc
cmp
lcall
pusha
add
pop
mov
shll
cli
jl
sbb
stos
dec
lock
aam
mov
sub
rclb
cmp
mov
dec
xor
mov
outsl
dec
push
js
adc
sub
popa
push
daa
ss
in
imull
xor
inc
adc
and
jns
aas
sahf
add
add
fidivrl
xchg
inc
adc
jl
sbb
popf
sbb
cs
gs
popf
jbe
xor
flds
or
mov
das
fxch
lahf
dec
inc
mov
xchg
add
loopne
cmp
jne
xchg
test
mov
xchg
push
lret
test
lret
sbb
adc
mov
popa
push
jge
hlt
daa
cmp
cmp
jg
add
pop
inc
call
mov
sti
shl
aas
cmpsl
cmp
loop
mov
popa
sub
inc
dec
xchg
cmc
inc
dec
lcall
cltd
call
outsb
popa
sub
and
xor
push
mov
scas
shl
scas
insb
add
fsubs
test
dec
aaa
xor
jp
movsb
push
pop
and
pop
jne
popf
notl
and
pop
or
cmpsl
shlb
and
fcom
mov
xor
mov
add
popa
call
jge
mov
sbb
leave
xorb
lock
or
mov
mov
repz
and
sbb
sub
sahf
inc
aaa
mov
and
std
push
cmp
mov
dec
push
inc
mov
adc
mov
outsb
aaa
pop
jns
aas
fstp
sbb
imul
jno
daa
push
dec
lods
mov
dec
mov
or
push
push
lret
adc
repz
jbe
adc
clc
xor
lock
cs
pop
ret
sbb
cmp
lds
and
lret
mov
cmp
mov
add
fs
shlb
push
push
std
and
decb
movsl
jno
or
scas
adc
jp
insl
push
cmc
push
aam
add
mov
mov
cmp
mov
lret
or
ds
ds
xlat
push
sbb
xor
lods
or
test
mov
leave
push
inc
ret
cwtl
shlb
or
inc
dec
test
jb
lcall
adc
push
push
cld
adc
sub
je
testb
sbb
ret
mov
stc
shrb
xorl
les
jmp
js
loopne
sarb
mov
cld
jbe
jnp
stc
push
jbe
les
clc
and
inc
orb
loopne
js
sbb
adc
cmp
movd
push
sti
je
loopne
aam
dec
sbb
mov
outsl
add
pop
sbb
int
cmp
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
and
add
add
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cli
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
imul
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
push
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
.byte
