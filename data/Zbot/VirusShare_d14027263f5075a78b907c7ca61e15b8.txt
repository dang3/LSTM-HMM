sub
xor
int3
int3
nop
nop
sbb
inc
jns
sub
jp
adc
cmp
add
mov
out
cltd
ss
int3
into
cmpb
inc
xor
xchg
mov
add
add
pop
mov
rcpps
add
out
adc
sub
jo
push
push
dec
jmp
lock
pop
lret
mov
sti
mov
adc
shll
pop
xlat
add
mov
testb
repz
mov
xchg
inc
test
enter
test
xchg
js
xchg
xor
mov
es
dec
add
mov
in
pop
aad
jg
push
cmp
or
popf
loopne
lock
scas
stos
addr16
lret
gs
outsl
mov
aaa
push
and
mov
incl
call
pop
in
frstor
xchg
adc
push
xor
roll
sub
xlat
inc
rolb
and
mov
fwait
gs
mov
icebp
insl
sub
daa
jns
xchg
js
jno
sub
xchg
mov
xchg
bound
daa
push
cmp
lret
pusha
cltd
or
sbb
into
fwait
add
mov
shll
je
shlb
insb
xchg
mov
js
mov
mov
std
cwtl
stos
fisttpl
mov
je
lods
test
outsl
outsl
int3
leave
test
jnp
pushf
aam
in
nop
add
fnstenv
cmp
shlb
es
inc
sub
leave
loop
in
fucomp
insb
dec
std
and
and
imulb
ljmp
into
push
aaa
adc
pop
in
sbb
and
into
fwait
adc
inc
sub
push
test
and
std
push
fwait
gs
rcll
cmp
ljmp
or
lock
inc
pop
pop
xchg
xchg
cmp
xchg
leave
notl
mov
pop
sub
pop
lods
lcall
out
pop
cli
sub
and
lock
cmc
push
xchg
fs
ret
clc
add
iret
imul
sahf
outsb
test
sub
cs
and
and
and
and
xchg
cmp
jp
lods
sub
mov
inc
xchg
lcall
lock
cmc
mulb
popa
sbb
sbb
das
mov
and
fwait
loope
sarb
iret
inc
adc
jbe
cmp
fsubl
das
cli
and
pop
arpl
js
mov
xchg
test
dec
jp
mov
in
stos
jns
push
cld
jle
ret
jl
sub
mov
push
popl
or
ret
fs
es
mov
add
icebp
mov
pop
imul
popa
es
mov
addl
add
add
add
call
inc
arpl
jl
xchg
cld
pop
lods
in
mov
inc
push
bound
mov
xchg
mov
cmp
mov
cmpsl
fistl
sar
outsl
cmp
arpl
lea
daa
mov
or
jl
pop
shrb
outsl
subl
ja
mov
pop
push
mov
adc
lods
stc
mov
dec
andl
add
mov
xor
sbb
sti
and
insb
enter
addr16
mov
cmp
sbb
xor
clc
or
inc
dec
or
pop
cltd
xor
lods
jmp
sub
in
clc
dec
cli
popl
sbb
push
jmp
xor
jmp
int3
add
add
add
add
jle
cmpsb
sub
mov
stos
jle
add
adc
sub
std
dec
notb
or
fmul
fmuls
aaa
jl
mov
pushf
xchg
push
inc
sub
push
or
es
repnz
repz
outsb
push
cmc
mov
scas
pop
xor
add
xchg
aas
jbe
lock
daa
lret
enter
pop
cmp
or
mov
mov
out
jno
ss
dec
jbe
movsb
xor
xchg
mov
sbbl
cld
pop
clc
cmp
repz
lock
dec
push
std
adc
add
add
add
add
cwtl
cld
inc
movsb
and
add
aas
int3
push
std
fisttpl
nop
incb
pusha
cltd
cwtl
mov
out
xor
inc
pusha
in
shll
repnz
das
push
xor
stos
jg
lret
lds
xor
sbb
cwtl
cmp
jecxz
sti
imul
aad
fdivl
push
frstor
es
mov
ret
dec
sbb
dec
mov
enter
sbb
cmp
enter
out
inc
lahf
lahf
mov
sti
mov
mov
mov
sub
aas
stc
push
pop
lock
outsb
push
lods
jbe
push
sub
out
insb
mov
sbb
int3
add
add
add
lods
push
dec
gs
aam
imulb
add
repnz
jns
and
mov
sub
cmp
rcll
mov
rolb
lock
dec
cld
sti
xchg
xchg
jl
movsb
xchg
out
test
mov
dec
pop
hlt
and
mov
adc
push
loop
cmp
outsl
mov
fwait
sbb
mov
test
dec
int
pop
sbb
xlat
leave
push
xchg
sbb
roll
push
mov
outsb
mov
lock
call
cmp
lahf
dec
xchg
fsts
jb
cli
stc
add
xchg
scas
inc
pop
mov
out
or
adc
mov
cld
push
xchg
or
add
add
add
add
add
add
add
outsb
or
mov
call
into
adc
inc
fs
int3
divl
ss
mov
mov
lahf
sub
sub
imul
jge
mov
inc
add
loope
add
mov
test
add
inc
js
xor
inc
arpl
inc
shlb
mov
inc
jle
or
push
cmp
cmp
nop
add
add
mov
int3
shr
push
in
shll
mov
xor
fnsave
jne
fmuls
ja
sahf
sub
pop
pusha
adc
test
scas
push
dec
movsb
decl
lds
push
dec
clc
and
cmp
sbb
test
cli
xchg
adc
xchg
lods
xor
dec
mov
sar
ds
nop
popf
xchg
mov
or
and
mov
shrb
sbb
shrb
or
sub
in
jo
xor
ja
insl
ret
xor
mov
and
mov
nop
add
push
subl
mov
and
pop
rorl
inc
mov
jb
xor
repz
dec
jl
in
cmpsb
add
loope
push
sti
sbb
dec
dec
mov
xor
xor
cmp
out
mov
mov
lea
in
outsb
es
sar
fistpl
mov
out
inc
mov
loope
sub
jnp
dec
mov
jbe
push
call
add
insb
cmp
neg
std
stos
push
mov
flds
adc
mov
das
int
dec
call
outsl
or
sbb
aaa
aaa
mov
inc
xchg
mov
and
sbbl
int3
add
add
add
add
add
add
shrb
inc
mov
lds
ds
or
jno
fwait
inc
cmp
push
ret
add
sub
int
ficoms
pop
jmp
fimull
push
sbb
sub
stos
aad
faddl
push
jmp
pop
jns
mov
outsl
pop
mov
xchg
outsb
pop
dec
inc
mov
ja
data16
xchg
gs
pop
xchg
and
cltd
fadds
or
out
in
mov
pop
notl
mov
mov
jno
adc
jns
mov
pop
pop
aad
mov
mov
repz
scas
mov
mov
sti
sub
sub
fimull
xchg
call
and
and
and
and
and
out
std
sub
push
hlt
push
or
jnp
mov
add
add
add
add
add
iret
int3
or
jno
cmp
mov
xlat
cmc
mov
cld
pop
call
mov
sub
jg
lds
dec
cmpsb
jns
imul
mov
add
sbb
in
jle
xchg
adc
sub
fsubrs
js
push
pop
ja
xor
push
cmpl
dec
xchg
or
add
cmc
jge
or
dec
stos
les
gs
andb
lods
les
xor
inc
dec
int
sbb
stc
js
movb
xor
loopne
cmpsl
add
adc
and
mov
pop
xor
popa
cmp
int
mov
xor
popa
push
fmul
pop
inc
data16
out
repnz
fstpt
dec
mov
arpl
iret
gs
divl
push
cltd
cwtl
dec
mov
adc
and
test
jnp
cld
adc
imul
pushf
aas
nop
add
add
cmp
push
jcxz
out
inc
jb
inc
sbb
add
es
or
cmp
mov
sbb
and
xorb
stc
mov
je
jmp
pop
xchg
std
fs
js
dec
outsb
call
xor
lea
sbb
orl
sbb
mov
inc
inc
ljmp
add
add
add
add
js
sub
or
out
or
gs
rolb
mov
cld
cmp
adc
insb
xor
incl
incl
incl
call
mov
inc
cmpsl
lods
fildl
test
push
push
mov
jae
pop
cmp
cmc
cld
mov
iret
push
or
sbb
ret
push
and
sub
dec
in
mov
addl
cmp
call
pop
jns
mov
or
dec
in
orl
loop
pop
arpl
test
movsl
push
add
pop
jge
push
push
dec
ret
mov
and
and
and
and
push
jl
pop
test
mov
dec
mov
ljmp
iret
cltd
nop
add
add
shl
nop
sub
fsubrs
sbb
sub
dec
xor
inc
add
stos
or
popa
repz
jecxz
ficomps
dec
aad
test
push
lods
mov
mov
cmp
mov
outsb
push
mov
and
es
xchg
ret
jl
pop
je
insl
mov
je
mov
jbe
shlb
push
xor
push
dec
repnz
in
movsb
cld
clc
and
lea
sub
loop
in
xchg
inc
lods
sbb
jl
pop
cmpsl
mov
sahf
jb
push
addr16
pop
xor
jae
iret
push
dec
dec
outsl
mov
nop
sbb
nop
pop
aas
and
add
incl
add
add
ja
pop
sbb
cmp
call
call
push
jbe
int3
int3
nop
int3
int3
nop
nop
decl
jnp
outsl
xor
nop
jle
arpl
nop
nop
int3
int3
dec
arpl
add
add
nop
nop
nop
es
decl
add
add
and
int3
int3
nop
int3
add
nop
add
inc
xor
jnp
add
add
dec
dec
add
add
add
in
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movb
movl
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
and
sub
mov
and
add
mov
mov
sub
cmp
je
mov
sub
sub
mov
jmp
mov
and
xor
mov
lea
mov
lea
add
dec
sub
inc
mov
sub
mov
movl
movl
jmp
mov
sub
mov
cmpl
jle
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
add
xor
mov
sub
mov
jmp
mov
sub
sub
mov
jmp
mov
sub
sub
sub
mov
jmp
mov
sub
sub
mov
mov
cmp
jne
mov
mov
lea
cmp
jb
mov
mov
lea
mov
mov
add
sub
mov
mov
cmp
jne
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
add
xor
mov
sub
mov
jmp
mov
sub
sub
mov
jmp
mov
sub
sub
sub
mov
jmp
mov
sub
sub
mov
mov
mov
lea
cmp
jne
xor
mov
mov
lea
mov
jmp
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
mov
lea
mov
cmpl
jne
jmp
mov
and
mov
lea
cmp
jne
mov
and
xor
mov
lea
mov
mov
cmp
jne
jmp
mov
sub
sub
mov
jmp
mov
sub
mov
mov
and
sub
cmp
jle
mov
add
sub
mov
pushl
mov
and
sub
cmp
je
mov
sub
mov
and
sub
mov
jmp
mov
and
mov
lea
mov
mov
add
mov
and
sub
mov
ret
movl
jmp
mov
add
mov
cmpl
jge
mov
cmp
jne
jmp
mov
mov
lea
mov
cmpl
jne
jmp
mov
mov
lea
cmp
jne
mov
and
mov
lea
mov
mov
cmp
jne
jmp
mov
sub
sub
mov
jmp
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
add
mov
adc
xor
mov
cltd
add
adc
mov
movl
mov
sub
sub
xor
sub
sbb
mov
mov
push
push
lea
push
push
mov
push
push
push
call
movb
mov
sub
mov
mov
and
mov
sub
cmp
je
mov
and
sub
sub
mov
jmp
mov
and
mov
lea
mov
movl
mov
and
add
xor
mov
sub
mov
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
mov
and
test
jne
mov
xor
mov
sub
mov
sbb
xor
mov
cltd
add
adc
mov
cmpl
ja
cmpl
jbe
mov
add
mov
jmp
mov
add
mov
mov
add
mov
adc
mov
and
cltd
add
adc
mov
movb
jmp
movb
mov
and
cmp
jge
mov
sub
mov
mov
and
not
mov
jmp
mov
and
not
mov
mov
sub
mov
mov
sub
sub
xor
sub
sbb
mov
mov
mov
sub
sub
xor
mov
mov
mov
add
mov
mov
jmp
mov
and
cltd
mov
sub
mov
sbb
xor
mov
cltd
add
adc
mov
mov
and
mov
lea
mov
mov
sub
sub
mov
and
sub
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
add
sub
mov
mov
sub
cmp
je
mov
sub
sub
mov
jmp
mov
and
mov
lea
mov
movl
jmp
mov
add
mov
cmpl
jae
xor
mov
mov
lea
mov
push
push
mov
push
mov
push
call
add
mov
sub
sub
mov
jmp
mov
sub
cmp
jbe
mov
add
sub
mov
mov
mov
lea
mov
movl
jmp
mov
add
mov
cmpl
jae
mov
sub
sub
sub
mov
push
push
mov
push
mov
push
call
add
mov
sub
sub
mov
jmp
mov
add
sub
mov
mov
mov
lea
cmp
jb
mov
mov
lea
mov
mov
push
call
add
mov
sub
sub
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
movb
movw
mov
mov
mov
and
sub
mov
and
sub
sub
mov
mov
and
push
call
add
mov
mov
and
mov
and
sub
cmp
je
mov
and
sub
mov
and
sub
mov
jmp
mov
and
mov
lea
mov
mov
sub
mov
and
sub
mov
mov
and
add
sub
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shlb
add
es
add
daa
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
daa
inc
add
add
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
daa
inc
add
daa
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
dec
sub
push
sub
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
in
inc
add
sub
hlt
sub
cld
sub
add
inc
add
inc
add
inc
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
inc
sub
dec
sub
pop
sub
insb
sub
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
push
cltd
mov
push
push
mov
push
mov
call
mov
add
adc
mov
mov
movzbl
inc
jmp
cmpl
mov
jne
neg
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
mov
ret
mov
cmp
jbe
xor
ret
push
mov
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
mov
push
pop
mov
cmp
jne
inc
inc
mov
cmp
je
test
jne
cmp
jne
inc
inc
jmp
cmp
jbe
inc
inc
cmpw
ja
mov
test
je
cmp
jbe
ret
push
mov
push
xor
mov
test
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
test
mov
jne
push
call
pop
mov
cmpw
je
push
push
call
mov
pop
inc
cmpw
je
lea
push
call
test
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
cmpw
lea
jne
pop
pushl
call
andl
andl
pop
pop
movl
pop
ret
push
mov
push
push
push
push
mov
push
push
push
call
mov
mov
mov
cmpw
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
shl
push
call
mov
add
test
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
mov
push
andl
cmpl
movl
mov
je
mov
addl
mov
push
pop
cmp
jne
mov
add
push
pop
cmp
je
test
je
incl
test
je
mov
mov
add
mov
add
jmp
incl
test
je
andw
add
cmp
jne
add
jmp
push
pop
incl
test
je
mov
mov
add
mov
add
cmp
je
test
je
cmp
jne
test
jne
sub
jmp
test
je
andw
andl
cmpw
je
mov
cmp
je
cmp
jne
add
jmp
xor
cmp
je
cmp
je
mov
addl
mov
mov
incl
movl
xor
cmpw
jne
add
inc
jmp
cmpw
jne
test
jne
xor
cmp
je
cmpw
lea
jne
mov
jmp
mov
xor
push
cmp
pop
sete
mov
shr
mov
dec
test
je
inc
test
je
movw
add
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
mov
add
incl
add
jmp
test
je
andw
add
incl
jmp
mov
pop
pop
cmp
pop
je
mov
mov
incl
pop
ret
push
mov
push
mov
push
push
xor
xor
push
mov
test
jne
call
mov
test
je
movl
jmp
call
mov
test
je
movl
jmp
cmp
jne
test
jne
call
mov
test
je
xor
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
pop
test
jne
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
jne
test
jne
call
mov
test
je
cmpb
mov
je
push
push
push
push
push
pushl
call
test
je
push
add
call
cmpb
lea
pop
jne
inc
mov
lea
push
call
mov
pop
test
jne
push
call
xor
pop
pop
pop
pop
pop
ret
cmpb
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
pushl
call
test
je
push
call
push
lea
call
cmpb
pop
pop
lea
jne
andw
jmp
push
call
pop
xor
push
call
mov
jmp
mov
push
push
push
mov
push
mov
test
jne
call
test
je
movl
jmp
call
test
je
movl
jmp
cmp
jne
call
jmp
cmp
jne
call
mov
push
mov
push
push
push
push
pushl
call
mov
test
je
lea
push
call
mov
pop
test
je
push
push
push
push
push
pushl
call
test
jne
push
call
pop
xor
pop
pop
pop
pop
ret
mov
jmp
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
mov
cmpw
je
inc
inc
cmpw
jne
mov
push
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
push
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
pop
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
inc
add
inc
add
dec
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
dec
inc
add
inc
add
inc
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
rorb
add
dec
inc
add
dec
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
dec
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
push
inc
add
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
cmpl
jne
cmpl
jge
push
push
jmp
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
push
pop
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
push
mov
cmpl
push
push
mov
push
je
mov
mov
movb
inc
neg
adc
neg
jmp
mov
mov
mov
xor
push
pushl
push
push
call
mov
xor
push
pushl
push
push
call
mov
mov
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
andb
dec
mov
mov
mov
mov
mov
dec
inc
cmp
mov
jb
pop
pop
pop
pop
ret
push
mov
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
cwtl
and
add
add
pop
and
add
xor
add
sbb
add
cmp
add
dec
and
add
add
insb
and
add
add
mov
add
sahf
and
add
add
enter
and
add
and
add
and
add
add
and
add
and
add
add
data16
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
mulb
add
out
add
fsubl
add
int3
and
add
add
xor
dec
add
add
add
add
push
lock
inc
insl
out
pop
mov
adc
out
cltd
div
mov
dec
push
cwtl
xchg
mov
and
and
and
and
sub
cmp
test
stos
cmp
push
insl
xor
xchg
cmp
or
std
mov
insb
sbbl
decl
and
mov
xchg
es
ret
cmpsl
hlt
shrl
dec
mov
sub
push
dec
adc
aam
mov
das
pop
sub
push
rclb
int3
lcall
aas
and
cs
or
roll
or
enter
xchg
jle
out
sub
jbe
mov
adc
loopne
dec
or
mov
stc
lahf
pushf
mov
jb
mov
int3
add
add
add
add
add
cmp
add
bound
mov
aam
fdivs
pop
jg
int3
add
add
add
add
ja
mov
push
or
inc
cmp
xchg
vcomisd
cmp
sbb
fimull
jp
dec
or
jmp
mov
inc
out
pop
stc
ss
cwtl
jp
das
mov
scas
jge
cmpsl
inc
shr
lcall
not
or
ret
mov
jo
xor
mov
in
sub
fildll
sub
xchg
pusha
insl
hlt
pop
cltd
cmp
cs
add
add
add
add
xor
fwait
in
sub
mov
hlt
pop
mov
ret
in
mov
int
pop
push
icebp
inc
cmp
cmp
push
mov
mov
adc
xchg
mov
jmp
pop
in
pop
xchg
adc
cmp
fcmovnbe
insb
cmp
iret
mov
into
shl
dec
sahf
xor
lahf
mov
cmp
addr16
fcmove
jecxz
cmp
cmp
or
mov
icebp
mov
pop
sbbb
cmp
push
fildl
pop
push
fdivs
das
stos
cmp
jecxz
outsl
loope
sub
cld
aas
cmp
dec
mov
xchg
xlat
inc
mov
mov
dec
or
sbb
push
mov
es
mov
mov
xor
sbb
xlat
test
mov
lret
push
cs
and
push
cs
test
cmp
fists
enter
fsubs
rolb
int3
sub
xchg
out
push
xor
loopne
stos
mov
pushf
mov
xor
pop
mov
cmp
and
outsb
loope
dec
repnz
jnp
cmp
icebp
ss
call
mov
cmp
sub
fldenv
cmpsb
test
iret
sub
iret
testl
jp
repz
and
add
pop
and
outsl
sub
add
inc
mov
add
pop
add
add
add
add
pop
test
in
jne
xchg
out
push
mov
into
mov
mov
push
cmp
out
loopne
outsl
nop
pushf
pop
push
and
mov
shl
xor
push
outsb
push
fldenv
and
loop
addr16
dec
sarb
pop
nop
inc
daa
movsl
cld
std
xor
pop
outsl
mov
ss
pop
push
ljmp
fsubrs
shlb
fsubrl
sub
outsl
add
add
add
cmc
lcall
nop
call
out
push
mov
and
mul
jae
pop
mov
andb
jne
or
in
sub
stos
cmp
mov
inc
push
jno
movsl
add
add
add
add
add
add
add
mov
cmp
cmp
xlat
lds
jecxz
aad
push
mov
fisttps
sub
mov
icebp
in
dec
addr16
fisttps
or
sbb
jb
insl
add
add
add
add
add
add
add
mov
and
dec
in
mov
push
pop
pop
or
push
jg
sub
adc
cld
adc
sub
cmp
xor
push
jmp
add
push
repz
fbstp
sbb
pop
jl
fwait
and
ljmp
xchg
mov
push
mov
lret
mov
jno
repnz
push
icebp
mov
out
push
aaa
cli
and
dec
jno
aaa
pop
fidivrs
and
inc
aaa
pop
cli
add
add
rol
fsubrs
shll
pop
stos
pop
ja
sub
mov
in
xchg
jo
pop
lahf
mov
jp
filds
jge
jp
mov
bound
inc
loope
clc
mov
test
outsl
mov
mov
dec
xlat
mov
push
adcb
ss
sbb
addl
jo
int
shlb
push
or
cmpsl
andb
bound
jmp
sub
lret
fwait
mov
dec
addr16
fldenv
lods
jns
sub
lcall
sub
or
or
or
add
add
add
inc
out
adcb
xchg
shll
inc
icebp
ficoml
dec
lret
imul
jne
shr
rcrb
pop
pop
pop
adc
pop
pop
out
pop
mov
das
and
jp
bound
push
clc
and
fcmove
mov
std
jge
fisttpll
pop
xchg
icebp
jmp
mov
xchg
mov
cmp
add
push
pop
addr16
nop
add
add
scas
or
jmp
loop
cmp
mov
mov
add
out
mov
adc
xor
aaa
mov
test
sub
xchg
sub
pop
shll
popa
pop
cmp
int
add
inc
mov
push
mov
int
test
lea
add
mov
sarl
jg
into
into
std
mov
inc
add
push
call
mov
cmpsb
sbb
stc
pop
in
push
add
add
add
push
pop
xor
hlt
cmpsb
cmp
movsl
and
lret
shlb
and
lret
and
sbb
inc
pop
lock
xor
idivb
sbbb
jecxz
fwait
xor
push
std
and
sub
mov
dec
add
stc
add
add
add
add
add
add
jecxz
jne
or
mov
xchg
dec
dec
addr16
dec
fistpll
xchg
jb
ja
xor
add
pop
cmp
repz
mov
pop
jnp
aad
fnstsw
cli
insb
fsts
add
add
add
leave
pop
test
add
pop
mov
jo
push
out
and
add
hlt
int3
fiadds
mov
dec
push
inc
fs
imul
xchg
loop
sbbb
aam
mov
push
mov
adc
mov
or
int
loopne
fs
rcrl
fs
dec
add
xlat
adc
dec
jmp
enter
push
test
sub
xchg
into
push
mov
xor
faddp
jmp
idivb
add
add
xor
add
ljmp
adcl
add
in
mov
or
mov
negb
test
pop
adc
mov
popf
xchg
and
into
jne
fwait
pop
add
add
mov
out
jno
lahf
mulb
jae
loopne
movsl
out
mov
neg
inc
stos
sarb
icebp
xchg
aas
or
insb
stos
mov
mov
arpl
xor
stc
movsb
dec
adc
cmp
adc
mov
sbb
cmp
mov
push
test
mov
nop
add
jmp
test
call
icebp
inc
or
sbb
push
push
out
ret
cmpsl
fwait
inc
cld
or
mov
inc
hlt
pop
jbe
xor
lret
push
dec
xlat
movsl
pop
jp
jge
sub
js
or
pop
in
lret
dec
add
lods
and
movsl
lcall
xor
and
scas
add
lret
ds
pop
push
in
adc
adc
add
add
sbb
adc
test
ds
mov
pop
call
enter
xchg
outsl
rcr
or
ret
not
fistpl
ret
in
or
lcall
into
mov
icebp
adc
lock
cmp
fcoms
and
stos
int3
loopne
mov
stos
xchg
xor
xchg
daa
push
rcll
jle
sub
test
xor
cmp
mov
jb,pt
jno
outsb
cs
imul
out
stos
rorb
icebp
int
cmp
aam
divps
outsl
fsubrs
xor
dec
push
outsl
sub
xlat
insl
pop
dec
ret
inc
call
add
add
add
add
add
add
xchg
dec
push
iret
xchg
in
cmpsb
popa
pop
hlt
push
push
cs
push
push
xor
mov
in
ret
mov
mov
jmp
push
and
cli
inc
or
das
sbb
xor
cwtl
int3
mov
lock
insl
mov
add
and
nop
add
add
add
shrl
lds
scas
in
pop
adc
pop
add
test
sbb
jae
xor
shrl
rcll
or
clc
lock
sahf
call
cs
sub
cmp
inc
stos
imul
xchg
cmp
std
add
into
mov
test
pop
cmp
std
push
pop
repnz
js
outsl
jmp
out
test
jbe
loop
rorl
add
imul
inc
andb
jl
add
cmp
push
pop
pop
test
out
mov
nop
ss
mov
add
jmp
lcall
xchg
in
imul
add
jae
jno
push
inc
cmp
push
rolb
dec
jns
in
mov
aas
lds
cmp
loope
dec
add
add
add
add
add
add
and
pop
mov
popa
sub
sbb
fucomip
aam
pop
cmp
fcomps
dec
subb
lea
fldt
sub
lret
add
add
add
add
or
mov
daa
mov
negl
push
push
movsl
pop
cwtl
repnz
adc
push
fs
fistps
js
push
sub
out
pop
call
cmp
imul
jmp
cld
sbb
je
ffreep
adc
dec
mov
loop
or
gs
loope
es
lods
fwait
push
loope
dec
push
cmpsb
dec
rcrl
push
int3
pop
jae
mov
sbb
or
jo
inc
call
mov
xchg
inc
fstps
dec
xchg
aam
nop
add
mov
shl
push
inc
pop
jbe
inc
mov
or
sub
push
lods
mov
fstpt
or
rol
leave
sub
js
fxch
fwait
sbb
inc
cmp
mov
outsl
cmp
lahf
ret
mov
sbb
inc
and
mov
outsl
cmp
push
mov
bound
and
fmull
loop
sub
sub
and
and
and
and
and
and
and
inc
scas
adc
mov
push
jnp
pop
mov
xchg
mov
cmp
adc
mov
es
add
dec
dec
lock
sbb
xor
adc
call
mov
cmp
inc
stos
jns
xlat
xor
push
cmp
std
pop
inc
jb
add
add
xor
sahf
sbb
rorb
mov
mov
cmp
dec
arpl
add
add
add
add
add
add
add
mov
inc
sub
inc
std
dec
adc
mov
or
popf
ds
add
cmpsb
into
in
xchg
ds
mov
xorb
orl
sbb
pop
cmp
es
jae
and
aas
sahf
jno
and
loop
orl
add
add
lret
or
xchg
out
add
sub
out
scas
enter
ljmp
data16
pop
and
ret
movsb
dec
xchg
jns
jp
rolb
pop
fdivl
in
call
xchg
mov
add
add
add
add
push
pop
or
mov
daa
xchg
test
pop
arpl
pop
lods
bound
lret
out
scas
and
xor
push
or
test
sbb
mov
pop
cmp
leave
roll
push
cltd
cmp
cmpl
adc
jl
jno
jns
jbe
mov
pusha
imul
or
int3
add
add
subb
mov
push
or
xlat
lods
popa
rcl
sub
dec
mov
ja
mov
and
iret
fs
movsl
push
lcall
fs
lods
out
xor
mov
fidivl
or
mov
mov
and
sbbb
ljmp
add
add
add
add
xor
add
insl
sub
cmp
sbb
push
data16
xchg
and
test
add
add
add
mov
cmp
aad
push
fnstcw
jmp
enter
jnp
stos
dec
in
jl
push
filds
out
into
push
in
xor
mov
stos
pop
pop
fdivs
inc
cltd
js,pt
mov
jecxz
mov
mov
shlb
push
pop
add
push
cmp
addr16
pop
sub
adc
es
inc
pop
out
push
shll
xor
arpl
lock
lods
inc
mov
stos
ljmp
sub
mov
outsb
in
pop
xor
and
int3
jae
dec
mov
add
add
add
add
add
add
out
scas
test
push
shl
scas
add
or
enter
ret
enter
sbbl
mov
leave
data16
add
add
add
add
dec
out
std
push
xchg
pop
pop
jnp
lcall
or
and
sbb
cmc
mov
jmp
hlt
scas
rol
xchg
aaa
pop
ds
pop
mov
and
dec
movsb
fucomi
xor
add
add
mov
push
xchg
cmpsb
pop
xchg
sub
push
sub
je
sbb
lea
ljmp
cmp
rcll
add
pop
jmp
aas
leave
sbb
pop
in
push
movsb
dec
add
mov
push
repnz
sahf
adc
in
stos
inc
popf
repnz
rolb
rol
in
aad
pop
inc
pop
push
jle
xchg
aas
mov
cmp
mov
and
dec
jmp
mov
dec
mov
sbb
mov
push
xchg
pop
and
mov
xchg
sbbb
int3
add
add
and
and
cmp
data16
push
pop
cwtl
xorl
xchg
mov
inc
dec
mov
mov
jle
pop
inc
arpl
xor
mov
es
call
or
rol
dec
sub
dec
fidivrs
pop
roll
cmp
add
dec
gs
add
add
add
add
push
orb
rcrb
aaa
and
push
adcl
and
and
pop
dec
mov
lock
out
push
pop
mov
aam
xorb
push
xlat
test
pushw
inc
addb
fstps
aaa
rol
and
inc
xchg
and
ror
adc
mov
test
mov
flds
mov
pop
mov
jmp
or
sub
int
sarb
lds
xor
sbb
push
es
loope
inc
mov
leave
loopne
jecxz
imul
fwait
lods
sub
leave
and
dec
arpl
jbe
jmp
fistl
out
sbb
add
add
add
add
add
add
sti
loop
pop
aad
pop
dec
in
push
or
push
dec
pusha
sub
out
mov
rcrb
incb
mov
outsl
pcmpgtw
sbb
cmp
bound
push
push
mov
mov
adc
lods
dec
aam
movsb
push
fbstp
aaa
xchg
pop
fwait
test
and
dec
mov
movsl
ss
sub
mov
daa
inc
jnp
out
int3
daa
mov
out
pop
hlt
mov
daa
int
fnsave
push
push
stos
and
and
sti
ds
mov
add
jmp
out
push
icebp
mov
pop
loope
adc
insl
cmc
les
hlt
jo
lret
pop
pushf
sahf
adc
push
dec
lahf
jb
into
pop
aam
sbb
xor
outsl
add
add
imul
lods
add
add
mov
lds
mov
mov
adc
fisubs
rcl
jecxz
pop
fildl
insl
mov
jl
xchg
add
add
add
iret
pop
sub
test
insl
jg
repz
leave
push
jge
lea
rolb
shll
push
xchg
xchg
xor
fimull
jmp
ret
add
jecxz
add
into
call
add
add
cmp
scas
rcll
pusha
sub
cli
mov
sbb
pop
int
jae
sub
out
rorl
dec
fbld
lock
sbb
and
pop
add
xchg
data16
pop
nop
lods
sbb
cs
xchg
sti
dec
subl
jae
or
pop
xchg
addr16
daa
clc
decb
pop
test
shlb
dec
jl
idiv
jp
adc
jecxz
xchg
rcl
roll
ret
mov
pushf
cwtl
mov
push
fstpl
int3
add
in
int3
add
sbbl
inc
pop
insl
sub
clc
movsb
call
sbb
in
sbb
add
add
add
add
add
push
push
cld
inc
and
inc
cmp
and
and
and
and
and
into
ja
inc
jo
xchg
lret
ds
xchg
mov
xchg
add
enter
xor
or
int
mov
bound
inc
ljmp
add
add
mov
cmp
jae
test
pop
push
add
pusha
in
sti
pusha
cmp
loop
sbb
hlt
push
ret
push
sbb
movsb
int3
outsl
enter
mov
inc
xor
jns
loope
mov
out
clc
jle
inc
xchg
xchg
or
cmc
in
add
lret
jle
xor
pop
xor
xchg
cli
sbb
mov
push
xor
stos
push
bound
mov
test
xor
adc
mov
nop
add
je
pop
rol
fdivrl
jg
xchg
aam
cs
sbb
add
and
rcll
mov
jne
jb
sbb
add
inc
xchg
movsl
cmpsb
stos
xchg
pop
dec
adc
out
lret
mov
aam
int
xlat
lahf
or
mov
cltd
test
ss
cld
addr16
mov
stc
loope
pop
cmp
lret
cmpsl
push
mov
lods
push
ret
cmp
fwait
adcl
enter
das
adc
nop
add
add
mov
push
das
inc
mov
jg
dec
add
add
add
add
add
add
mov
test
push
jae
jmp
inc
adc
pop
push
shl
push
call
pop
into
or
push
ss
fnstsw
pop
scas
push
jp
int
aas
ret
mov
push
jecxz
into
cmp
jo
sbb
mov
jo
inc
std
jle
cli
xchg
imul
int3
add
add
add
add
add
push
cmp
adc
nop
loop
cmpsl
ficompl
mov
cmp
mov
push
adc
xor
btc
ret
sbb
pop
xor
out
das
stc
pop
insl
je
ret
fnstcw
fadds
mov
mov
cwtl
mov
mov
push
cmp
into
mov
dec
sub
cmpsb
lahf
mov
outsl
jl
adc
scas
and
imul
pop
stc
arpl
pop
jae,pt
jecxz
in
fistl
andl
mov
aad
and
nop
add
add
iret
jne
sti
into
fidivrs
stc
les
les
xlat
add
sub
test
pop
jb
sbb
pushf
pop
pop
cli
ret
add
ds
sbb
sbb
jge
out
dec
adc
cs
movsl
jo
into
add
sbb
mov
out
adc
jae
sahf
xor
xchg
cmp
jle
in
and
xor
cmp
scas
shll
in
sahf
imul
cmp
scas
arpl
loope
or
jl
aaa
cmc
aas
cmpsb
dec
out
scas
lcall
mov
mov
push
add
xchg
dec
jl
orb
push
push
imul
jmp
and
int3
add
jb
aaa
xor
jne
les
jb
aad
push
bound
push
es
jp
ficomps
mov
aad
push
roll
jp
mov
and
adc
arpl
clc
adc
xorb
insl
jge
add
add
add
add
mov
add
pop
sub
sbb
and
iret
mov
xchg
push
repz
in
cld
push
lea
imul
cwtl
test
mov
inc
leave
daa
jae
aad
int3
ret
jmp
leave
fs
mov
ljmp
mov
xchg
jns
into
or
lods
push
sti
xchg
sbb
scas
ljmp
cmp
and
and
and
and
and
dec
push
cwtl
in
adc
cmpsb
push
shrb
sbb
cltd
inc
mov
loopne
pop
filds
stos
adc
sub
add
lret
or
sbb
add
add
add
add
mull
sub
and
stos
cs
jae
addr16
push
xor
and
and
inc
pop
jge
pushf
jne
js
popl
lods
jmp
add
and
int
jl
jl
shl
fdivrl
andb
push
in
xor
push
arpl
push
stos
mov
push
jl
rcrl
pop
test
fstl
push
lds
std
and
mov
cld
xchg
jmp
fs
jbe
scas
mov
out
and
push
arpl
mov
mov
xor
imul
add
add
sub
cmp
add
inc
and
rolb
push
adc
sbb
sbb
push
cltd
enter
xlat
mov
push
fsubrl
rolb
ficompl
adc
pop
shll
jnp
adc
sub
add
mov
cmp
je
push
jb
loop
sbbb
in
out
xchg
lcall
jo
xor
cmp
bound
cmp
cmp
mov
test
pushl
pop
xchg
lods
fnstenv
inc
push
repnz
cmpl
pop
lods
mov
sbb
add
mov
fmull
mov
out
mov
add
add
add
add
add
divb
or
mov
push
movb
add
aad
add
leave
fdivl
in
push
pop
mov
adc
sub
push
out
bound
fbstp
mov
mov
out
rorl
sti
sbb
pop
mov
pop
push
lds
fimuls
dec
sub
sub
pop
aaa
popf
out
rolb
imul
ja
jns
mov
cmp
add
add
mov
mov
scas
sti
mov
hlt
xchg
test
cmp
and
aaa
sbb
mov
fwait
sub
mov
in
inc
aas
bound
dec
inc
adc
cli
mov
in
js
loope
mov
cmp
sbb
push
jmp
loopne
jnp
sarl
jmp
movsl
sub
sub
stos
test
mov
aas
pushf
push
inc
cmp
jb
cli
loopne
jl
lahf
mov
dec
cld
jmp
jns
push
out
ljmp
jnp
iret
nop
int3
es
repz
sbb
aas
popf
push
push
jno
or
insb
xor
and
add
add
add
add
add
add
add
fistpll
lds
lds
aam
sub
adc
test
sbb
icebp
mov
mov
add
enter
mov
pop
insb
push
out
mov
scas
mov
out
mov
pop
or
sub
js
fdivrs
xchg
mov
inc
mov
sarl
out
cmpl
add
in
repnz
dec
push
sub
popf
or
xor
xchg
add
imul
imul
sbb
and
shlb
jle
fwait
into
ds
shll
imul
ss
fldt
in
lret
add
add
add
push
inc
call
push
jg
xor
insb
add
rcll
fwait
stos
ja
inc
cmp
push
mov
or
fwait
out
mov
adc
mov
subb
xchg
scas
stc
mov
xchg
pop
xlat
pop
idiv
cmpsb
rorl
adc
cld
jno
xchg
out
movsb
and
out
sti
insl
mov
sbb
push
jge
jge
fisubl
enter
sti
shrb
std
cltd
sbb
in
xchg
inc
mov
mov
add
add
push
push
adc
aam
mov
loopne
dec
cmp
add
push
push
pop
leave
mov
or
in
insl
jg
movsb
pcmpeqw
push
cmp
repnz
into
mov
icebp
jae
sub
rcr
add
push
pop
popf
movsb
mov
or
mov
clc
andb
mov
cwtl
mov
xchg
dec
inc
push
pop
cmpsb
mov
dec
sbb
sbb
xchg
pop
gs
jb
and
pop
dec
and
mov
stc
clc
pop
aas
mov
cld
inc
in
mov
imul
add
add
add
loope
fdivs
cmc
rcrb
inc
std
movzwl
sub
in
mov
outsb
push
xor
or
dec
cmpsl
push
sub
subb
push
fisttps
cmpsb
movsb
dec
inc
jmp
push
movsl
sbb
cmpl
nop
adc
xor
add
mov
xor
pop
cmp
scas
xor
fistpll
xchg
push
lcall
incl
incl
incl
incl
incl
incl
mov
pop
adc
sbb
pop
enter
int3
add
add
add
add
and
ret
xchg
cld
pusha
and
rcrl
lds
mov
movsb
push
jo
scas
sahf
dec
xor
and
mov
inc
roll
dec
ja
xchg
or
jbe
dec
cmpsb
adcl
or
dec
dec
gs
mov
jl
out
mov
frstor
inc
xor
adc
repz
push
lock
xchg
cmc
ret
lock
xchg
out
les
or
jb
and
mov
sbb
mov
mov
call
lret
xchg
push
sbb
and
cmc
lcall
and
ss
jb
loope
cs
in
and
ret
nop
add
out
dec
and
and
push
push
in
or
sbb
dec
mov
add
pop
cmp
cs
sbbb
push
mov
in
stos
mov
sahf
jmp
outsb
and
sbb
clc
adc
fists
cli
mov
xchg
add
data16
add
add
add
add
add
in
jb
add
les
push
cld
sub
cli
jl
adc
push
inc
xor
int3
std
out
xchg
adc
mov
fldt
mov
adc
inc
repnz
inc
sub
push
nop
dec
int3
dec
push
pop
xchg
imul
imul
aad
bound
aad
xorl
jne
and
fbld
nop
pop
cwtl
push
cmpsb
mov
pop
icebp
lods
jge
in
mov
or
lds
sarl
aas
pop
push
dec
inc
xor
int3
add
add
add
add
add
mov
test
xchg
lcall
jg
andl
int3
add
aas
xchg
in
add
add
add
add
add
sbb
mov
jo
pop
cltd
lock
jnp
or
fs
cld
push
loope
ss
pop
xor
cwtl
inc
mov
and
stos
lea
xchg
and
lods
loop
pop
dec
js
jle
push
adc
mov
xchg
scas
rorl
inc
xchg
in
lahf
jb
adc
std
adc
mov
and
fcoml
movsl
out
incl
pop
pop
xchg
inc
pop
mov
call
and
popa
mov
mov
in
mov
xchg
or
leave
pop
inc
in
pop
mov
mulb
sub
sub
or
or
and
and
sti
leave
iret
outsb
adc
jge
sbb
fstps
int3
mov
int
jge
fdivl
sbb
sti
xor
inc
mov
sti
fldt
jae
jnp
das
mov
test
test
lock
mov
xchg
adc
push
mov
subb
xchg
push
push
dec
pop
out
out
fsubrl
sub
jno
xor
mov
ret
mov
inc
cmp
ja
idivb
pusha
dec
mov
mov
js
inc
jo
test
xchg
and
or
dec
mov
cli
add
and
and
and
and
and
and
and
mov
in
add
in
ds
xor
pop
cmpsb
dec
mov
jns
les
push
mov
jno
aaa
scas
out
cltd
gs
pop
push
jne
stos
mov
push
push
add
aaa
pop
aaa
lods
jb
aam
add
cmp
inc
mov
ret
adc
int
aas
js
cld
fwait
adc
in
ret
jp
call
jp
push
push
jle
mov
movsb
scas
dec
fwait
sub
test
xchg
icebp
cmp
mov
sarb
jecxz
jmp
cli
test
mov
loope
jmp
jecxz,pt
cmp
outsb
mov
jo
shl
xchg
in
dec
pop
outsl
jb
inc
pop
lret
xchg
test
cmpsl
fucomip
das
sub
xchg
add
add
cmc
mov
repnz
aad
loop
sbb
mov
shrl
rorb
or
addr16
sbb
stc
ret
out
scas
in
loope
jmp
mov
jge
dec
mov
std
dec
js
adc
xchg
mov
push
cmc
mov
ljmp
subb
pop
jle
sarb
push
cmp
mov
xlat
bound
test
jmp
cmp
rcrl
fldcw
das
mov
push
add
mov
sub
and
add
es
adc
add
call
dec
insb
cmp
shl
push
jmp
mov
sbb
xor
aaa
lods
mov
imul
xchg
and
enter
xchg
mov
adc
xchg
bound
dec
xchg
jb
idivb
adc
es
push
loope
push
nop
lods
jae
push
shr
xor
cmp
sub
pop
push
icebp
or
xchg
mov
and
and
and
pop
addl
sbbb
cld
pusha
cmp
xchg
mulb
mov
mov
mov
mov
pop
mov
cvtps2pd
push
out
imul
sub
movsl
sti
mov
jmp
sub
mov
sub
mov
dec
cmpsb
notl
cmc
leave
lcall
sbb
jle
loope
fiaddl
std
int
les
and
and
and
and
loope
mov
pop
inc
sahf
daa
repz
lea
lahf
xchg
arpl
cltd
mov
add
es
mov
mov
mov
in
shl
in
jmp
imul
or
test
add
xchg
shll
lcall
or
inc
cltd
out
add
add
add
add
add
add
add
hlt
xor
pop
and
lcall
dec
add
push
test
dec
fidivrl
rolb
arpl
test
int3
ret
pop
mov
dec
repnz
cs
mov
cmp
xchg
rcrb
mov
and
mov
adc
inc
dec
adc
lods
xchg
add
or
mov
insb
je
or
jge
daa
dec
test
js
std
outsb
insb
and
add
add
fbstp
daa
movsl
cmpl
testb
sbb
jb
out
and
pop
mulb
dec
sub
arpl
rclb
add
add
add
add
cmp
push
cltd
adc
or
mov
xchg
je
std
in
in
ret
iret
dec
gs
cmp
fwait
push
inc
je
jbe
sub
jecxz
cwtl
xor
loope
out
mov
out
nop
add
add
xchg
sub
mov
fidivrs
fsubs
sub
pop
mov
mov
shll
sbbl
outsb
mov
dec
js
add
loopne
and
rorl
fisubrl
fisubl
xchg
and
rclb
sbbl
sbb
cmpsb
or
mov
aas
and
cmc
das
lods
in
shll
adc
jae
push
insl
lock
shr
adc
sbb
stc
mov
mov
movsl
filds
std
push
inc
push
xlat
pop
pop
mov
xorl
add
add
add
sbb
lret
mov
dec
mov
test
adc
aad
call
lahf
inc
jl
lret
into
inc
insl
inc
orb
sub
fstps
iret
setg
sbb
inc
icebp
movsl
lea
cmpsl
push
lods
enter
mov
xchg
dec
shll
mov
xchg
cli
push
inc
inc
mov
popa
push
and
ds
fisttps
ret
pop
push
in
sahf
jge
sti
sbb
mov
add
repz
repnz
repnz
pop
jnp
xchg
jnp
jns
jmp
jecxz
test
pop
cld
mov
lcall
mov
xchg
push
es
outsl
cmp
jbe
adc
bound
int3
add
add
add
add
add
push
jbe
repz
mov
push
iret
pop
xor
pushf
sbb
mov
rol
leave
pop
ss
loopne
in
inc
sahf
shlb
fcoms
dec
dec
ret
shll
cs
push
xor
adc
push
cmp
lret
mov
mov
sub
test
add
add
add
je
xor
es
fdivrs
cmp
mul
dec
ficoms
mov
fisubs
xor
jg
nop
add
in
sarb
sub
test
aad
ds
movsl
sub
inc
popa
and
pop
es
pop
inc
jge
jmp
data16
push
jb
sub
in
test
push
rcll
lock
js
test
shlb
lock
cmpsl
pop
and
inc
jg
mov
mov
in
xchg
push
pop
pusha
fcoml
lahf
sbb
mov
icebp
js
bound
cli
test
dec
and
push
pop
jns
je
test
sub
or
test
xchg
mov
jmp
imul
xlat
das
stc
mov
add
add
add
add
add
mov
mov
xlat
popf
inc
pop
mov
insb
sti
stos
xchg
int
call
jbe
test
mov
insb
popf
lahf
scas
mov
xchg
fcoms
jle
xor
fisubs
xor
mov
loopne
outsb
rcl
in
or
mov
int
rcrl
push
lret
lcall
pop
cmpsl
jge
loope
xor
pop
aam
adc
orb
add
lahf
mov
inc
aad
jns
stc
imul
jae
and
test
and
in
shl
int3
loopne
lock
test
add
add
movsl
lods
sub
pushf
mov
adc
mov
inc
lods
icebp
in
xchg
push
adc
xor
in
cmp
or
add
jns
xlat
loop
sbb
mov
jb
ret
jmp
pop
outsb
mov
stos
es
xlat
pop
mov
add
mov
insb
lea
mov
xchg
aam
add
movsb
push
aaa
bound
repnz
push
add
add
add
add
add
add
add
movsb
in
in
mov
stc
nop
jo
mov
lahf
pop
inc
divb
movsl
lret
lods
rorb
ss
mov
mov
rcrl
test
mov
ss
ja
out
cmp
or
rcrl
into
fstps
daa
sub
rolb
shlw
insb
rcrb
mov
es
adc
ret
mov
jmp
sub
and
xor
enter
sarb
aaa
or
and
mov
ret
movsl
xchg
push
adc
xor
mov
add
add
add
add
add
xchg
pop
sbb
int3
add
dec
les
pop
xor
or
sbb
call
fwait
mov
mov
aam
mov
mov
dec
xlat
cmpsl
mov
cmp
pop
pop
mov
stc
iret
sbb
pop
adc
lods
imul
mov
lods
fsubr
nop
das
ficomps
sahf
inc
mov
aaa
add
add
add
add
add
mov
cmp
sbb
mov
mov
mov
lcall
push
lcall
int
add
int3
add
add
add
add
std
sbb
jo
or
shll
and
gs
shlb
mov
mov
mov
xor
pop
pop
repnz
add
es
rcrb
cld
or
pop
in
mov
lock
fisttpl
add
add
add
jnp
add
jg
rorb
sbbl
jmp
pop
add
push
fnstsw
popf
xchg
adc
mov
dec
sub
and
or
adc
stc
jno
and
aam
les
xchg
in
add
add
add
add
add
add
adc
addr16
pop
jno
push
jno
dec
or
xchg
push
rcr
pop
fsubrs
clc
xlat
cwtl
adc
or
js
lcall
lcall
jb
int3
mov
nop
jecxz
jnp
out
scas
xor
inc
fimull
xchg
jnp
xchg
sbb
mov
inc
std
arpl
and
cmp
dec
mov
sbb
inc
inc
jecxz
rcrb
out
jb
repz
das
mov
mov
lcall
in
imul
loopne
and
test
std
sub
xchg
sti
jne
xchg
push
stos
fidivs
adc
pop
jo
sti
cmpsl
cmp
mov
cmp
les
pop
mov
and
int3
dec
andb
and
and
and
and
and
and
cmp
add
inc
push
sub
sbb
pop
xor
fsubl
adc
push
jnp
leave
repz
mov
push
dec
adc
test
cmc
jg
sub
insl
mov
ljmp
inc
jl
ficoms
fs
and
shrb
popa
mov
ljmp
stos
in
dec
loop
scas
jmp
push
and
inc
jmp
cli
daa
int3
repnz
pop
push
mov
lods
jo
adc
test
mov
mov
cltd
add
jmp
lods
repz
shll
imul
in
push
in
push
sub
xor
lret
pop
sub
je
mov
daa
orl
or
dec
fidivrs
mov
fisttps
inc
mov
jno
cmp
cmpsl
jnp
cmp
lcall
mov
fwait
addr16
imul
inc
orb
jno
add
testl
push
jl
and
cwtl
mov
mov
and
xor
lds
xchg
xor
int3
add
add
dec
mov
sahf
inc
pop
pop
push
jbe
push
pop
das
scas
shlb
dec
push
xor
fsubrl
daa
rclb
mov
xor
xchg
lcall
dec
push
data16
add
add
add
add
add
add
cmp
xor
add
les
push
sahf
lods
scas
jp
push
bnd
xchg
xchg
loopne
in
scas
imul
mov
loopne
loop
scas
in
mov
and
pop
mov
sarb
inc
fs
mov
mov
dec
mov
mov
jno
sub
xor
popf
xor
aas
call
movsl
outsl
mov
mov
dec
insb
mov
sub
adc
mov
sbb
mov
mov
lret
dec
pop
push
jl
inc
iret
addr16
test
out
push
das
inc
xchg
jg
int3
add
dec
push
adc
add
adc
mov
and
rorl
mov
jo
shll
cmpsl
sub
fcmovne
int
push
out
jge
fildl
mov
gs
nop
add
add
xor
jp
inc
clc
xor
jns
jno
fidivl
scas
pop
pop
aas
aas
sub
or
mov
pop
or
sbb
sbb
pop
icebp
jbe
xchg
jp
fimuls
xor
shll
leave
out
fxch
hlt
jmp
mov
add
add
add
add
add
add
add
rcll
sub
in
incb
jbe
std
in
mov
imul
lds
mov
sub
or
jb
sub
pushf
lods
xor
jns
jae
shrl
outsb
cmp
inc
adc
sbb
inc
mov
and
and
outsl
dec
sahf
dec
data16
xchg
mov
push
mov
ret
lea
mov
cmp
test
add
add
add
add
add
insl
jnp
mov
sub
cmp
sbb
inc
inc
aam
push
scas
nop
test
and
and
or
and
jnp
sub
jge
dec
aas
lock
push
adc
xor
sti
xchg
mov
and
mov
push
mov
and
inc
stos
push
leave
inc
jb
out
repnz
jno
and
adc
int
mov
push
add
or
dec
pop
pop
sbb
sbb
jnp
jmp
dec
test
push
or
cmp
mov
roll
lret
xchg
xor
imul
loopne
mov
push
adc
add
faddl
shll
pop
adc
mov
add
andl
pop
cmp
aas
cmp
xor
mov
lret
lcall
enter
leave
mov
xchg
cmp
test
mov
push
adcl
sarl
paddw
adc
fistps
pop
and
xchg
mov
in
jo
lret
and
and
and
and
and
and
and
push
shll
add
sti
sbb
aaa
addr16
arpl
jmp
adcb
or
xor
xor
jge
jnp
scas
stos
jnp
mov
les
cld
scas
cmpsl
dec
and
pushw
pop
iret
mulb
cltd
pop
popf
add
ficoms
jae
and
frstor
sahf
stc
das
mov
xchg
cmp
cwtl
jp
sbb
clc
dec
test
push
popa
loop
sub
and
and
and
add
xor
push
lods
push
and
mov
jp
rcr
sbb
pop
outsb
stos
push
push
and
xor
dec
mov
clc
pop
jne
mul
ret
xchg
imul
decl
jge
jle
cmpl
add
imul
mov
jmp
add
add
shl
adc
sbb
bound
xor
cld
adc
dec
sbb
fistps
mov
adc
scas
inc
and
sarl
in
cli
gs
pusha
xchg
int3
push
push
ja
pop
pusha
push
inc
dec
cmp
xchg
leave
push
sub
int3
std
int3
out
popa
add
jb
push
out
jne
popf
lret
add
cmp
fcomps
sbb
dec
mov
scas
outsl
insb
sbb
adc
mov
enter
push
aas
mov
xchg
mov
in
cld
inc
sub
add
add
add
add
add
stos
and
cld
loop
shlb
and
xchg
nop
aas
cmp
adc
mov
sbb
mov
inc
xchg
mov
stc
xchg
mov
aas
inc
into
and
jns
std
mov
adc
popf
xor
call
mov
dec
nop
int
and
int
mov
punpckhdq
ds
add
pop
ret
scas
lods
mov
pop
dec
mov
sbb
popf
push
xchg
ja
add
add
push
mov
les
push
sub
pop
xchg
add
dec
shll
cli
insl
jecxz
pop
stc
insb
test
sub
das
int3
cld
mov
xor
cmp
ljmp
test
sub
inc
out
push
leave
mov
ss
dec
sbb
push
inc
pop
pop
roll
push
xchg
sti
test
ds
pop
jae
movsb
movsl
out
inc
rclb
sub
sbb
inc
xchg
cmp
iret
mov
mov
add
add
mov
jbe
aaa
push
clc
xor
fdivrs
cmp
sahf
andl
lods
mov
or
push
mov
mov
and
sbb
mov
dec
setnp
ljmp
popa
enter
iret
int3
out
cmp
push
mov
mov
bnd
push
inc
jno
lcall
mov
mov
pop
jp
or
dec
aam
movl
jge
lret
lods
pop
stos
les
add
mov
jp
ret
sub
pop
insl
test
data16
cmp
mov
pop
into
lds
lcall
nop
outsl
lcall
pop
loope
lods
sub
dec
mov
sub
xchg
lods
sub
decb
arpl
pusha
das
repnz
pop
clc
in
push
popa
stc
push
test
je
insb
pop
sti
movsl
dec
rcrb
cli
mov
fsubrs
out
out
inc
int
cmpsb
xchg
pop
sbb
push
int
scas
mov
and
and
and
stos
pop
imul
jmp
popa
push
fwait
mov
repz
daa
out
push
data16
adc
sti
out
js
adc
mov
das
loop
jae
cmp
add
das
or
mov
add
movsl
mov
test
xchg
jne
xlat
stos
add
andb
nop
add
add
mov
lret
xor
push
in
daa
push
or
in
imul
fcmovbe
mov
imul
push
std
aaa
imul
std
mov
push
sti
popa
pop
push
and
push
mov
clts
data16
fdivr
cld
out
dec
cmp
dec
inc
add
add
xor
or
shr
aas
mov
out
adc
dec
fiaddl
and
and
and
and
mov
iret
pop
loopne
cs
inc
mov
vmovupd
add
sbb
dec
mov
or
pop
cmp
out
xlat
shrl
add
add
add
add
xor
in
jmp
add
das
lret
je
sub
adcb
push
jle
test
dec
ds
mov
scas
iret
daa
rolb
out
or
mov
data16
das
outsb
mov
add
add
add
add
aas
pop
ret
jo
inc
scas
or
aas
inc
addb
xor
fwait
xor
cld
adc
inc
xor
lret
lods
cmpb
test
pop
test
in
push
mov
sahf
cli
call
inc
popf
push
push
out
jbe
loop
xchg
icebp
aaa
hlt
pop
adc
in
aam
dec
push
hlt
mov
aad
pop
ret
cld
sbb
jg
lea
pop
cmp
mov
sbbl
in
repz
sahf
sub
push
jbe
sbb
js
jl
sbb
adc
lcall
adc
push
testl
and
and
and
and
xchg
xor
xchg
mov
ja
lods
iret
pop
pop
and
sub
and
das
loop
cmp
loope
mov
in
add
xchg
sbb
xor
pop
sbb
mov
test
pop
mov
out
ret
ret
adc
add
mov
push
loopne
movsl
das
notl
jecxz
neg
adc
inc
pushf
pop
das
shlb
xor
lahf
sub
adc
mov
push
shl
pop
shl
xor
jmp
mov
mov
and
sti
mov
add
add
and
jbe
mov
mov
pushf
pop
daa
jnp
insb
int3
dec
dec
cmp
push
icebp
fiaddl
int3
out
or
dec
test
mov
add
mov
loopne
das
jg
inc
aam
dec
xchg
jne
cmpsb
dec
ja
repnz
mov
data16
in
nop
add
add
add
push
jnp
movsl
sub
jp
cwtl
xchg
out
mov
cld
popa
dec
mov
leave
add
push
pop
lds
imul
outsl
mov
dec
and
dec
cmp
enter
mov
popaw
pusha
xor
mov
outsb
mov
inc
xor
add
jge
dec
mov
flds
and
pause
add
add
maskmovq
mull
mov
xor
or
pop
mov
mov
mov
sbb
push
jb
pop
mov
pop
dec
jmp
lret
movb
add
add
add
add
add
inc
and
test
xchg
pop
mov
outsb
jge
fsubr
fsubl
enter
cmp
xchg
mov
push
orb
or
jl
mov
mov
lds
flds
shlb
insl
or
es
outsl
jne
push
fwait
jmp
test
lods
push
int
add
sub
idiv
push
adc
out
ret
fstpl
jmp
xchg
dec
enter
xchg
hlt
adc
xor
adc
mov
scas
or
adc
test
out
pusha
jne
sbb
jmp
data16
xor
inc
push
imul
mov
push
imul
nop
add
mov
ljmp
mov
outsl
pop
aas
add
or
mov
mov
pop
push
cmpsl
cmp
inc
stos
aas
mov
xor
push
movsb
fmull
push
jg
or
add
add
add
xchg
jbe
push
jb
stos
dec
cli
sub
data16
fildl
push
pop
or
cltd
lret
adc
mov
adc
mov
arpl
arpl
lods
sub
add
lea
js
adc
sub
pop
inc
lods
mov
mov
xchg
pop
dec
movsl
and
xchg
pop
xor
scas
xchg
mov
jmp
add
loopne
inc
pop
xchg
mov
adc
xchg
mov
incl
incl
incl
incl
incl
incl
xor
aas
sub
pop
xchg
int
addr16
in
sub
xchg
rcll
lds
gs
xchg
jne
lret
movsl
out
xchg
jnp
ss
loope
cmp
pop
out
push
imul
mov
xor
xchg
pop
cld
adc
pop
and
xor
stos
and
sub
div
cmp
lcall
sha1rnds4
out
push
int3
stos
mov
fwait
mov
inc
jge
add
cmp
add
add
add
add
add
add
popa
add
mov
lods
jmp
nop
rcrb
aam
and
xor
loope
and
das
pusha
inc
jno
xchg
cmpsl
lock
sarb
mov
ja
mov
push
dec
mov
dec
add
movsl
add
adc
nopl
jbe
inc
or
outsl
movsl
std
push
fimull
xchg
push
fsubrl
pop
ss
scas
aam
stos
adcl
test
lods
sbb
mov
jae
jo
jp
ljmp
lret
stos
int
sti
loop
inc
or
daa
pusha
cs
loope
lods
out
jecxz
ljmp
inc
into
dec
xchg
je
je
dec
push
mov
mov
stc
or
jecxz
and
and
and
and
and
and
and
xchg
sti
jle
shl
fstpt
cmc
aaa
jbe
je
aaa
sbb
lcall
setge
pusha
fidivs
pusha
mov
push
xchg
mov
mov
add
fnsave
jl
jg
repz
add
inc
xchg
cmpl
mov
out
lea
push
or
nop
add
add
imul
scas
pushf
pop
lods
sub
adc
jae
cmpsb
loopne
mov
lahf
mov
lock
or
ds
movsl
pop
pop
popl
jge
inc
mov
jb
arpl
mov
jo
stos
daa
cmpb
ja
sub
mov
mov
aaa
loopne
inc
jns
pop
je
clc
addr16
pushf
ss
xor
adc
add
mov
sbb
jb
repz
pusha
fisttpll
jnp
add
add
xor
fwait
ds
pop
lret
es
int3
add
add
add
add
add
mov
mov
pop
arpl
jge
scas
cmpsb
add
outsl
cmp
and
jl
jge
push
aad
dec
sbb
or
stos
insb
loop
jle
jbe
std
das
insb
mov
mov
in
jecxz
addr16
nop
cmpsl
lahf
movb
mov
mov
das
fidivs
das
in
cmpsb
stos
inc
xchg
ss
fwait
popf
cmpsl
pop
nop
dec
sbb
adc
fisubrl
inc
inc
xor
sub
or
daa
pop
lcall
sbb
call
push
push
aam
aas
cwtl
outsb
aaa
movsl
sub
sbb
push
cmpsl
push
loopne
nop
add
loope
popl
jecxz
movsb
fucomp
out
in
push
nop
dec
mov
aas
cmp
push
mov
mov
enter
mov
loopne
push
test
cmp
in
fstp
aas
mov
cmp
fcomip
mov
idivl
inc
inc
std
jbe
inc
and
scas
mov
mov
scas
sub
cmp
lahf
push
repz
int3
in
dec
lret
jle
pop
ljmp
xor
adc
movsb
xor
cmc
cmp
fsubs
std
xlat
loop
mov
testl
xor
sbbb
lods
dec
xchg
rcrl
fldt
arpl
sbb
and
cmp
jno
sbb
in
shll
and
push
in
and
and
and
and
scas
adc
movsb
and
inc
outsb
stos
jno
sub
sub
xor
mov
inc
aaa
movsb
mov
mov
hlt
adc
cld
mov
fwait
je
mov
mov
call
xchg
mov
in
enter
popa
or
jl
ja
and
sahf
ljmp
mov
shll
fsubs
mov
mov
fstp
shlb
lods
cld
push
adc
sub
out
or
je
fnstsw
insb
jnp
mov
imul
rcrl
jb
frstor
int3
sti
sub
add
add
add
add
add
add
inc
jle
int
xchg
shrb
mov
divb
jle
aam
add
insl
sbb
filds
inc
push
inc
subl
or
mov
push
cmp
iret
repz
out
pushf
outsb
sarl
aaa
or
loope
dec
aas
xchg
mov
sbb
mov
adc
and
and
and
and
and
and
ss
jecxz
test
daa
mov
mov
std
xchg
push
xor
or
cmpsl
roll
bound
dec
rcr
inc
dec
in
pushf
aas
pop
arpl
adc
cmpsl
sbb
into
fmuls
inc
insl
and
inc
pushf
cmp
add
add
add
add
inc
mov
xchg
mov
je
or
loop
rclb
jne
jp
test
and
clc
push
das
popa
jb
and
mov
in
ret
push
roll
push
or
and
and
and
and
and
and
and
frstor
aad
dec
std
popf
sbb
cs
cld
lret
push
jg
adc
add
add
add
popf
or
sbb
ja
jb
jmp
test
lea
pop
fxch
sbb
xlat
sbb
shlb
xor
popf
cltd
fdiv
pop
loope
or
pop
out
xchg
push
jae
jno
repz
fdivs
pop
ljmp
cmpsl
imul
sub
push
push
pusha
int3
nop
add
add
add
and
mov
cmp
dec
popa
jmp
jecxz
aaa
mov
add
add
lret
fistps
xchg
popa
inc
mov
lods
outsb
lea
cs
in
push
mov
mov
or
mov
in
fsubrl
push
stos
imul
ljmp
popa
imul
push
ljmp
dec
xor
inc
pusha
out
mov
mov
sbb
pop
in
mov
pop
loop
push
and
movl
sbb
sub
sbb
mov
out
rclb
push
push
mov
mov
mov
xchg
repnz
incl
incl
incl
incl
incl
lcall
fstl
call
daa
popl
mov
inc
clc
inc
aam
fs
sarb
in
or
jp
test
xchg
into
sbb
xchg
in
mov
scas
hlt
mov
add
movsl
test
xor
sub
out
push
addr16
sub
je
add
shrb
jno
rcl
push
ljmp
or
mov
ret
loopne
mov
je
jae
mov
repz
and
and
dec
xchg
outsb
out
roll
test
int3
aad
pop
dec
mov
mov
testl
add
xlat
inc
popf
fisttps
cltd
pushf
sub
stos
fcom
imul
pop
jo
fiaddl
sub
xor
or
out
mov
pusha
xlat
pop
jl
cmp
sti
mov
lods
daa
xor
cmpsl
rcr
xchg
xor
stos
sub
daa
mov
out
xor
mov
das
pop
iret
jns
std
rcrl
cmp
loop
xlat
xchg
sub
incl
incl
incl
incl
incl
call
mov
xchg
xor
push
fists
mov
lcall
mov
sbb
popa
pop
jecxz
in
mov
add
or
adc
jno
shll
xchg
sbb
mulb
push
xchg
loop
jne
adc
and
popa
in
and
das
mov
jl
mov
xchg
adc
push
mov
dec
dec
dec
cmpl
mov
or
in
cmc
xchg
fbstp
insb
push
inc
rol
mov
or
add
je
ja
ret
xchg
popa
mov
xchg
ss
mov
and
and
and
and
and
and
mov
jne
test
dec
js
xchg
sub
in
jnp
test
clc
mov
ds
xorl
inc
sub
add
fldenv
inc
cmpsb
push
lds
std
popf
in
xchg
xchg
test
cmc
dec
mov
sbb
push
mov
jmp
loope
shll
mov
adc
pop
ret
fidivrs
push
jo
pushl
mov
out
into
jmp
dec
stos
mov
add
cmp
xor
lock
and
adc
mov
rep
pop
jp
stc
push
sub
mov
mov
mov
fstps
add
dec
lret
mov
or
pusha
or
add
ffree
inc
push
shrb
xorl
jne
cmpsl
sub
negb
cli
add
mov
stc
dec
pslld
adc
out
call
and
add
add
add
add
add
add
adc
sbb
fiaddl
jp
lods
push
or
cmp
in
shlb
push
iret
xor
push
push
out
clc
cltd
ja
into
int
pop
test
pop
decb
testb
add
add
add
add
mov
mov
mov
jg
inc
pop
fmuls
repnz
movsl
push
inc
xchg
push
cmp
movsl
add
xchg
mov
out
pop
repz
movsl
fsubr
dec
loopne
mov
arpl
div
sbb
ljmp
ja
jmp
jbe
vpackssdw
sub
cmp
and
lods
mov
lods
stos
inc
push
or
sub
jmp
adc
push
mov
jnp
mov
jb
mov
mov
add
jae
bound
jb
cli
or
pop
mov
daa
jp
bnd
incl
incl
incl
incl
incl
incl
push
imul
jne
xor
sub
sbb
in
mov
fs
daa
leave
popa
mov
and
mov
xchg
int3
xchg
in
cmc
sub
sbb
pop
jne
mov
lds
repz
jae
mov
into
hlt
pop
adc
xchg
push
lds
pop
cmp
fidivs
sbb
push
stos
push
jecxz
jp
getsec
mov
xchg
cwtl
int
cmp
xor
gs
cmp
adc
mov
push
es
les
shl
mov
orb
int3
sub
or
in
stos
mov
out
out
push
loop
add
test
push
push
movsl
arpl
xchg
mov
movsb
pop
sti
aas
push
sbb
sub
xchg
negl
enter
fmulp
and
movsb
andl
int3
add
add
add
add
test
aaa
xchg
orb
mov
mov
cs
xlat
sub
int3
sub
xor
add
in
in
jle
mov
mov
mov
jae
sarb
incb
mov
fdiv
mov
test
arpl
add
add
add
add
add
ret
daa
arpl
rcrl
mov
fwait
adc
jb
jge
mov
arpl
push
xchg
cmp
xlat
cld
sti
push
mov
scas
mov
pop
lds
sbb
mull
ja
cmpsb
orl
fldcw
mov
clc
sbb
outsl
pop
jl
push
xor
inc
iret
jecxz
pop
mov
push
mov
mov
inc
jo
daa
vpshlw
pop
cmp
repnz
mov
adc
fdivrl
rcr
movsl
dec
imul
and
and
and
and
and
fildl
cmp
ja
sub
cmp
dec
popf
mov
push
je
cmp
jle
nop
dec
jp
aad
pop
pop
loop
lods
jge
ds
jecxz
and
adc
pop
aad
inc
sub
mov
movl
shlb
mov
jne
sub
sub
cmc
shl
iret
mov
ds
xchg
jbe
das
loopne
scas
mov
dec
dec
loopne
aam
mov
or
aaa
lods
pop
sbb
ficompl
and
pop
mov
pop
mov
and
inc
pop
xlat
xchg
mov
movsb
mov
add
add
add
add
add
enter
cmpsl
and
sub
add
pop
into
icebp
push
pop
and
outsb
insb
insb
push
mov
add
aam
ds
push
pop
mov
jne
int3
stc
fsubrl
jns
ja
test
enter
inc
mov
jns
icebp
loop
repnz
fs
dec
xlat
rolb
int3
add
add
add
add
das
fstpl
inc
pushf
pop
rolb
ljmp
fcmovbe
add
jo
xor
add
add
add
add
idivb
jp
mov
aaa
jecxz
adc
daa
into
jbe
lcall
sub
in
clc
mov
pop
sbb
call
sbb
mov
sbb
mov
add
ret
xor
push
fidivrl
xor
gs
sbb
push
xchg
addl
ret
data16
mov
mov
es
gs
sbb
sbb
pusha
pushf
or
arpl
push
or
loopne
inc
rcll
adc
inc
and
arpl
rcl
in
and
and
push
dec
popa
sub
mov
repnz
ljmp
loopne
push
stos
pop
ret
jecxz
mov
push
pop
push
nop
scas
xchg
movsb
push
gs
jmp
inc
xchg
fldenv
icebp
js
jno
leave
sub
outsb
daa
call
jb
mov
mov
xlat
adc
repnz
in
cmp
shr
imul
adcl
and
jg
lret
std
pop
mov
in
add
negl
jbe
in
in
pop
jno
cmp
daa
pop
imul
and
and
and
dec
inc
mov
imul
or
not
xchg
pop
fwait
push
jnp
leave
jno
mov
jne
xor
push
ljmp
push
push
sbb
jle
aam
es
jge
or
inc
into
xor
test
repnz
popa
jo
inc
mov
and
mov
sub
jmp
mov
test
xor
enter
sbb
mov
push
sub
leave
xchg
mov
push
imul
and
cld
insl
imul
jnp
int
sti
imul
shl
and
and
pop
mov
stos
dec
xor
xchg
inc
and
add
add
fnsave
mov
jb
or
sti
sub
repz
leave
addr16
in
jmp
popa
cmc
mov
inc
xchg
sbb
sti
adc
push
pusha
mov
nop
add
add
lods
or
movsb
testb
es
cmp
pop
mov
or
inc
cld
testb
aad
xchg
jno
in
or
lods
mov
imul
xchg
cld
es
or
test
mov
adc
int
cmpl
xchg
inc
pop
sbb
fcmovb
adc
push
loope
adc
pop
sahf
push
jnp
lock
std
leave
ss
cmp
nop
imul
fistl
jae
sub
add
add
add
das
xchg
jge,pn
inc
es
ret
pop
ja
inc
es
test
fs
inc
fcmovnu
mov
popa
sbb
es
imulb
push
lcall
xor
cmpsl
mov
daa
in
mov
lods
lret
mov
mov
rorb
sub
repz
inc
add
scas
jl
or
ret
pop
mov
or
or
mov
lods
cmpsl
and
hlt
sbb
js
and
add
divl
sbb
pop
pop
cli
push
ret
jb
aad
orl
out
jmp
push
out
rclb
xchg
xchg
and
test
cmpl
xchg
shll
xor
xchg
aas
lock
push
and
and
and
and
and
and
popa
pop
pop
shl
cmp
ret
stos
pop
mov
scas
mov
add
cld
jbe
insb
and
imul
test
stc
cld
test
dec
std
sub
divl
jo
or
or
sub
mov
and
sbb
fwait
mov
xchg
xor
ret
jb
pop
mov
mov
ja
jge
push
mov
aad
and
pusha
pop
sub
sti
in
sbb
outsl
jne
xor
inc
or
push
stos
push
mov
and
jmp
push
popf
xchg
out
adc
in
push
fs
sub
int3
lcall
jl
jg
outsw
sub
xchg
out
in
mov
jne
int3
add
add
add
adc
je
pop
enter
jge
jno
repnz
push
mov
sbb
daa
mov
push
jle
or
xchg
lret
loop
xor
jb
ljmp
adc
aam
jne
lods
incb
lahf
into
jg
pop
insl
xchg
mov
jns
jne
cmp
movsl
shll
pop
xor
aam
sbb
sbb
cwtl
cs
add
add
jle
cmp
adc
enter
pop
push
cmpl
push
sub
shrl
inc
inc
repz
xor
or
in
pop
xor
fmull
inc
test
xchg
inc
ret
mov
jnp
mov
mov
push
int
ffree
into
hlt
xchg
aas
lret
mov
add
in
mov
xor
xor
aam
xor
and
int3
push
sub
pop
loop
fwait
sub
nop
add
loop
mov
inc
cmp
pop
adc
cmp
mov
sub
repnz
push
divb
out
xchg
mov
insl
fwait
testb
ret
test
iret
scas
test
mov
lahf
pop
dec
and
dec
or
and
pop
fisubrl
sub
mov
sub
scas
pop
inc
shlb
cmp
add
mov
and
jp
fs
cli
push
lret
lcall
sti
jns
or
mov
add
add
jecxz
repz
xchg
lahf
xor
fs
sbb
out
int3
add
add
add
add
add
add
das
shlb
int
leave
scas
jbe
push
push
fbstp
xor
sarb
jg
xchg
pop
xchg
mov
in
xor
mov
jp
lods
push
mov
fbstp
xchg
icebp
mov
xlat
cmp
or
push
pop
leave
jl
outsb
push
sarb
es
mov
jmp
add
rolb
cmp
push
lcall
lds
xor
clc
sbbl
sbb
aad
and
mov
cmp
adc
pop
shll
sub
and
and
stos
lods
sbb
jb
inc
repnz
int3
xchg
pop
mov
lahf
into
cmp
js
cld
inc
or
pushf
mov
or
jp
sbb
xchg
imul
add
add
add
add
jg
mov
das
test
or
cwtl
inc
mov
mov
cmpsl
jp
sbb
pop
das
inc
mov
cmc
push
and
adc
push
add
push
les
adc
cmp
and
xor
fidivrl
jp
or
ret
in
pusha
cmp
movsl
cmp
pop
sub
imul
xlat
pop
fisttpll
addb
add
add
xlat
xchg
repnz
fmul
repz
cld
jp
lret
mov
adc
sbb
int
jg
popl
inc
nop
stc
sbb
mov
gs
push
inc
aam
or
dec
inc
sbb
addr16
in
pop
fcmovnu
lods
xchg
addr16
pop
jno
int3
xor
ror
les
movsb
push
insb
stos
in
add
add
add
add
add
cmp
aad
xchg
jo
mov
cli
mov
leave
jns
enter
mov
xchg
popf
or
ror
mov
bnd
xchg
fidivrl
xchg
push
xor
shr
dec
fnstenv
in
adc
mov
or
jmp
push
mov
loope
scas
rcll
pop
dec
jl
or
in
ret
lods
xor
stc
jbe
dec
shll
test
lds
cmp
add
add
add
add
decb
xchg
into
cwtl
movsl
stc
aam
and
cmpsl
repnz
pop
loope
mov
xor
cltd
decl
cmp
sbb
push
lahf
inc
add
mov
dec
imul
xor
test
and
test
aas
cltd
jg
pop
push
stc
dec
sub
push
dec
addr16
shlb
xchg
mov
mov
cmp
mov
dec
push
ret
aad
xor
das
jg
iret
std
mov
rcll
sub
cmpsl
movsl
test
outsb
movb
cmc
dec
push
in
xor
dec
mov
movsl
repnz
add
add
xchg
int3
sti
rcll
out
dec
or
xchg
lret
dec
or
rclb
mov
sub
sub
xchg
inc
movsl
out
or
mov
aaa
arpl
and
inc
cmp
jge
in
mov
daa
insl
add
add
add
add
add
add
add
push
xor
ljmp
and
inc
shrl
xor
add
aaa
jmp
push
sub
mov
sbb
lret
mov
or
addr16
or
xchg
push
xchg
mov
stos
mov
pop
pop
mov
dec
jle
nop
loope
sbb
mov
movsb
into
lcall
add
add
add
add
add
stc
sbb
ja
aas
dec
pop
imul
iret
pop
xchg
pop
aaa
testl
and
add
dec
repnz
mov
adc
jle
sarl
pop
pop
gs
lea
clc
adc
adc
mov
dec
sub
aaa
xor
dec
cmp
xor
sub
addr16
inc
adc
push
jae
aam
fdivr
xlat
or
mov
stos
mov
icebp
sti
shll
pop
mov
dec
aaa
sbb
push
add
and
nop
cmp
jg
jecxz
jb
mov
ret
mov
in
and
pop
addr16
fisttpl
adc
enter
outsb
test
mov
out
jl
push
aaa
dec
mov
mov
fwait
dec
or
loop
or
inc
jbe
push
sbb
loopne
dec
jl
test
add
xchg
add
js
loop
jb
sti
test
jbe
cmp
jge
push
repz
mov
dec
adc
out
call
sub
pop
loopne
mov
and
jo
sub
xor
out
in
cli
xchg
inc
jb
mov
ja
or
xor
add
fistl
cli
jge
pushf
push
xchg
pop
test
inc
lods
and
mov
fdivr
add
add
add
negb
inc
cwtl
mov
xchg
jns
jge
xor
out
fisttpll
clc
lret
pop
mov
cmpsl
pop
jo
popf
gs
adc
pusha
popf
add
cmc
jns
jns
unpckhps
mov
fnstsw
xor
int3
inc
mov
dec
pop
nop
sbb
test
rcrl
cmpsl
xchg
push
jmp
inc
cmp
push
subb
lods
sub
or
xor
enter
xor
out
pusha
xlat
subb
inc
lret
and
loop
cmc
xchg
lcall
in
pop
out
shrl
adc
scas
dec
pop
lret
sub
data16
add
and
and
and
and
add
jb
shrb
testb
mov
mov
sbb
outsl
xor
mov
and
add
mov
vpshld
xor
je
mov
dec
mov
fcmovne
fistpll
add
sub
add
rorl
jo
frstor
movsl
clc
push
orb
xchg
or
fistpl
inc
inc
clc
xor
fdiv
stos
sahf
ljmp
daa
icebp
movsl
and
pop
jns
sub
push
fldt
lds
mov
sub
mov
add
add
add
mov
cld
push
hlt
mov
jno
mov
repz
and
xor
push
pop
pop
cmp
rcrl
or
popf
lods
cmpsl
cmp
loop
in
and
test
push
sbb
mov
shl
out
movsb
insb
in
test
pop
sahf
jecxz
xchg
dec
jbe
daa
fs
pop
das
movsb
inc
adcb
outsb
add
popa
jle
dec
cwtl
and
lahf
mov
icebp
dec
pop
fisubl
clc
in
and
mov
cmp
scas
jge
xor
mulb
cld
or
fldl
or
hlt
sbb
daa
xor
mov
mov
cmp
push
roll
mov
jo
daa
xor
ja
stos
out
mov
inc
popa
outsl
sub
mov
lea
xlat
sbb
cmp
push
test
test
mov
stos
sbb
cmc
hlt
outsl
call
test
xchg
xor
pop
add
ja
stos
icebp
lods
sarb
clc
fwait
je
int3
add
add
add
add
add
add
mov
lret
or
dec
aaa
and
sub
daa
and
hlt
test
jmp
pop
push
movsl
test
adc
in
div
sub
fwait
gs
mov
jecxz
cs
or
pop
xor
out
and
xor
sahf
mov
into
ja
add
add
add
add
add
add
and
cmc
or
sbb
and
movsb
mov
adc
repnz
adc
xorb
in
popf
pusha
xor
sub
jbe
out
and
cmc
push
pop
push
inc
lcall
fs
mov
das
mov
rorl
rolb
icebp
loopne
add
cmp
sar
repz
jle
add
lea
pop
pop
sbb
cli
mov
inc
adc
pop
inc
test
fwait
inc
mov
push
mov
ret
mov
int
nop
add
add
pop
cmp
jl
cltd
xchg
rorb
xlat
subb
push
sbb
add
daa
cmc
outsb
add
sbb
stos
jb
cltd
dec
add
sbb
xchg
xchg
cmpb
add
add
add
add
add
mov
test
cld
dec
cmp
fadds
pusha
lods
and
loopne
dec
xchg
xor
aas
dec
and
jmp
ret
dec
jg
aas
stos
in
xor
jno
loope
xor
sbb
imul
test
lret
mov
pop
cmp
in
inc
mov
pop
icebp
mov
or
lods
cmpsl
nop
shrb
adcl
pop
je
test
outsl
sub
add
add
test
push
fs
inc
arpl
sub
sub
dec
adc
push
es
fcompl
aad
jge
dec
xor
adc
test
dec
cltd
push
pop
pushf
jp
das
dec
cmc
cli
dec
mov
and
cs
out
repz
int3
jb
iret
fstpl
mov
mov
dec
push
xor
sbb
aam
mov
sub
test
in
sti
and
pop
out
lahf
or
jmp
out
pop
sub
lfs
out
push
or
or
xor
popf
or
imul
xor
mov
mov
mov
push
push
and
gs
std
outsb
cmp
jno
insb
mov
add
add
add
add
add
add
add
mov
push
andl
scas
and
xorl
shll
add
lret
dec
mov
push
in
mov
push
pushw
dec
movsl
scas
fwait
mov
lret
sub
mov
cmp
xchg
push
les
popf
mov
inc
out
cmpsl
mov
rclb
jne
fidivrl
jno
xor
out
js
push
punpckhwd
sbb
or
xor
jmp
sub
dec
clc
sub
les
or
jle
das
mov
and
push
shrb
pushf
push
push
jnp
push
psubq
les
shl
jnp
mov
inc
pop
loope
bound
mov
in
or
push
mov
lock
jnp
in
shrb
pop
rolb
lahf
cmc
mov
out
icebp
or
sahf
mov
daa
xchg
or
shl
es
add
add
gs
cmp
and
and
add
and
add
mov
cmp
adc
cmp
adc
cmc
ljmp
jl
mov
cwtl
add
shlb
mov
jl
dec
cmp
aad
out
mov
and
inc
mov
cmovno
bound
js
iret
mov
fwait
dec
nop
pop
sub
inc
and
shl
mov
sbb
lds
loop
pop
mov
mov
xor
inc
inc
mov
int3
add
mov
push
subps
inc
cmp
mov
xchg
sarb
ret
ror
sub
movsb
shrb
xlat
sbbb
lods
fcom
sub
mov
dec
add
add
add
add
add
dec
pop
jns
xor
clc
movsl
mov
or
mov
or
sbb
inc
addr16
xchg
jno
dec
xchg
push
movsl
idivl
and
or
cwtl
and
cmp
iret
out
cli
repz
std
pop
les
addb
cmp
mov
gs
push
pop
push
jbe
jl
lret
call
sbb
push
mov
outsb
lret
dec
shr
jmp
pop
lcall
test
out
cld
pop
cmp
hlt
lret
pop
xchg
adcl
int
enter
fisttpll
mov
push
fimull
lahf
imul
nop
daa
sub
insb
cmp
mov
int3
add
add
add
add
add
mov
fildll
mov
dec
and
enter
sbb
shll
in
add
stc
pop
mov
idivl
lret
insb
sar
adc
mov
ficoms
mov
aad
dec
mov
mov
fmuls
dec
test
cld
das
lds
nop
add
add
out
cmp
movsl
sysenter
aam
xchg
add
mov
incl
sub
pop
add
sbbl
mov
ja
inc
mov
roll
sahf
popa
adc
pop
std
xchg
push
in
leave
lds
loope
lods
mov
stos
sub
ss
les
in
add
and
and
and
and
and
mov
inc
sub
test
outsl
or
fisttps
mov
stc
fs
decb
mov
sub
aas
insl
into
xchg
jecxz
xchg
lret
pop
pop
dec
in
add
adc
dec
lret
add
add
add
add
or
aas
leave
sub
aad
mov
aam
sahf
dec
sbb
sbb
notl
mov
addb
jne
jae
cmp
dec
xor
push
push
in
add
add
add
aad
adc
and
mov
mov
leave
fmuls
mov
rcrb
fwait
adc
cmp
sahf
xchg
sub
or
outsb
mov
sahf
test
pop
mov
cmp
lods
aam
loopne
and
jg
and
stc
bound
repz
pusha
cmc
adc
lock
inc
mov
inc
sub
mov
xor
mov
and
and
and
and
aas
sbb
popa
fs
out
mov
mov
push
icebp
notl
mov
dec
sbb
cmc
lret
jno
iret
sub
insb
pop
ficomps
xor
fidivs
sub
pop
mov
adcl
pop
and
cmc
ret
push
jae
mov
mov
add
sub
sbb
and
and
and
and
and
and
insb
and
add
dec
mov
xor
dec
push
jmp
add
add
add
add
sub
scas
clc
out
adcl
jae
inc
movsl
cltd
dec
add
xor
sbb
and
popa
inc
xor
cmp
ret
lahf
je
sbb
addr16
cmc
sbb
inc
jl,pt
adc
pop
lods
sbb
inc
into
pop
nop
pushf
pop
or
fimull
xor
cmpsb
insb
jecxz
rclb
enter
out
add
sbb
in
add
add
jle
test
icebp
adc
mov
out
push
lahf
loop
mov
mov
clc
scas
in
xor
dec
mov
out
rorl
xor
iret
stos
sti
shll
cmp
xor
push
push
scas
inc
outsl
rcl
cmp
push
scas
cs
enter
lcall
add
add
add
add
add
add
push
pop
aaa
sbb
xor
dec
adc
rcl
cwtl
aad
pop
ret
scas
mov
hlt
cli
xchg
inc
xchg
scas
ljmp
adc
leave
loop
leave
sbb
loopne
incl
incl
incl
dec
or
testb
loop
shl
arpl
int3
jmp
mov
ja
aas
out
mov
es
and
stc
mov
incl
cmpsb
popl
or
rcl
or
push
in
and
pop
dec
xor
fsubs
sub
sbb
push
sbb
in
xchg
cmc
nop
add
add
xlat
jp
and
cwtl
repnz
sahf
sub
and
add
add
add
add
add
add
add
movsb
imul
lcall
mov
shll
sbb
jno
adc
sub
fstpl
and
xor
push
adc
push
fmull
pop
clc
sub
fcomps
lahf
and
scas
out
jne
imul
test
cs
xor
add
fisubrs
out
out
lret
fildll
push
sbb
lea
add
add
or
pop
sub
or
mov
mov
imul
pop
into
mov
push
outsl
dec
stos
fmull
insl
jo
inc
jle
sti
stos
jo
aaa
fisubs
cmp
sub
fisttpl
cmp
xlat
test
lret
jmp
dec
loop
in
mov
dec
incl
sub
bound
and
fs
add
and
shll
xor
or
inc
mov
sub
inc
mov
adc
push
arpl
cltd
cld
jmp
fisubrl
add
add
add
add
add
add
leave
push
mov
ret
sub
inc
mov
dec
popf
shlb
mov
add
mov
decl
or
add
xchg
mov
adc
push
movsb
add
je
xor
jle
adc
je
xchg
jns
into
movsb
pop
sub
or
insb
pop
stos
or
cmpsl
imul
mov
test
repnz
jae
fstpl
arpl
dec
cli
insb
pop
and
push
jg
push
icebp
cmp
push
add
cld
cmp
aas
repnz
pop
fsubl
fidivrs
xchg
incl
incl
incl
ljmp
xchg
xchg
cli
gs
and
ret
scas
rcll
clc
popf
add
push
out
xor
adc
xor
add
test
xchg
mov
data16
stos
scas
fyl2x
push
cltd
dec
or
nop
cmp
xor
fstpt
jge
clc
lods
cmp
and
cwtl
jns
push
add
mov
stc
jo
aas
mov
lcall
ret
add
add
add
add
add
add
or
mov
int3
jge
add
cli
into
and
jo
ret
fcomp
xor
mov
dec
cmp
add
dec
inc
in
int
insl
cs
mov
enter
mov
loope
mov
jp
mov
out
dec
sbb
ds
or
add
inc
mov
mov
and
popl
jmp
jno
xchg
pop
sub
fdivrp
push
ss
xchg
push
lock
je
mov
lcall
cltd
xchg
mov
lcall
sbb
mov
les
jecxz,pn
jbe
jl
pop
inc
in
jg
lcall
clc
and
jo
in
sub
sarb
sub
xorl
pop
xchg
inc
jmp
bound
je
push
adc
jns
sbb
mov
pop
mov
mov
pop
mov
mov
int3
add
jp
xor
insl
das
leave
rcrb
mov
adc
repz
mov
js
xchg
adc
jp
fnsave
jge
jbe
lods
pushf
xchg
mov
inc
stos
xor
xor
add
push
pop
xchg
mov
cmp
mov
push
adc
xor
jl
mov
es
xchg
push
push
cmp
dec
jp
dec
insb
lea
sub
cmp
js
mov
imul
mov
cvtps2pd
sbb
fwait
xor
jl
les
push
fadd
notb
fidivrl
popf
mov
lea
es
push
repz
and
jns
arpl
enter
daa
xor
jecxz
fimuls
rorb
data16
leave
inc
cmp
dec
fidivs
push
push
cmc
or
push
loop
mov
cmp
in
pusha
xchg
or
add
add
add
add
add
add
repnz
jecxz
outsl
pop
cwtl
cs
cmc
les
adc
int
xor
mov
cmp
fdivl
xchg
pop
lahf
jb
sbb
pusha
push
das
imul
push
incl
and
and
and
or
out
push
mov
jnp
cltd
incl
imul
mov
in
fldcw
int
pop
fisubl
dec
add
pop
cmpsb
cli
cmp
je
hlt
xchg
pop
mov
mov
std
sub
pop
stos
lock
jecxz
mov
or
mov
dec
push
shll
loope
loop
and
xor
in
xchg
mov
xchg
mov
cmc
cmp
and
or
jg
mov
ja
movsl
mov
push
pop
cwtl
xchg
sahf
pushf
inc
movsb
and
aaa
daa
nop
pop
movsb
sub
push
fmuls
push
and
cmpsl
add
pushf
jbe
dec
mov
ret
enter
out
rep
xchg
aaa
lret
jecxz
lods
repz
inc
sub
clc
mov
pop
and
js
mov
cmp
sub
add
mov
test
mov
pop
js
pop
push
mov
dec
xor
out
mov
ss
dec
mov
inc
sub
mov
dec
add
add
stc
sub
call
add
mov
repnz
dec
roll
xchg
ljmp
xor
cmc
sub
mov
pop
cmpsb
ljmp
clc
mov
inc
enter
mov
pop
test
insb
insb
loope
or
ljmp
jge
push
outsb
lods
int
and
cmp
add
add
add
add
add
cs
inc
out
js
mov
cs
adc
lahf
push
out
pop
adc
mov
xor
xchg
fisubrs
xlat
in
popa
fisubs
movsb
pop
aam
add
aad
cmp
add
add
add
add
pusha
vmovups
sbb
cmp
arpl
fsubp
sahf
and
stos
jns
sub
sub
addr16
out
mov
sub
pop
mov
jne
sbb
loop
xor
ret
into
xor
pop
adc
sbb
xchg
cmp
add
add
add
add
add
add
lret
push
xlat
xor
sbb
lahf
addl
inc
pop
mov
into
sti
imul
pop
adc
sbb
and
xchg
jmp
adcb
dec
add
jne
sbbl
nop
bound
inc
adc
add
add
add
add
add
addb
cmp
pop
rcrl
lock
fldl
cld
shrl
aas
fcompl
frstor
inc
insl
dec
cwtl
or
jge
jle
mov
outsb
jg
cmp
fistps
push
das
test
jl
mull
out
mov
or
call
fistps
insb
lcall
mov
cmpsb
inc
sub
sbb
xorb
clc
adc
and
popf
fidivl
add
add
add
add
sub
je
pushf
leave
sbb
aas
mov
and
and
and
and
and
and
and
mov
out
cmpsb
pop
dec
jb
ficompl
ss
hlt
mov
sub
mov
mov
add
xchg
frstor
shrl
setge
inc
lret
sub
icebp
scas
push
mov
scas
cmpsb
rcl
cld
roll
and
and
and
and
and
and
sbb
iret
cmp
mov
cmp
inc
cmp
push
add
mov
out
fisubl
mov
jno
xorb
ret
jno
outsb
mov
mov
out
xchg
es
std
jle
fbstp
cmp
das
mov
bound
cmp
roll
nop
es
popf
cmp
mov
mov
mov
mov
test
cld
and
and
and
and
and
and
and
and
sbb
test
inc
push
add
decl
pop
and
jnp
adc
fcoml
add
push
push
jae
adc
lcall
lds
in
mov
stc
loope
xor
dec
out
mov
lds
insb
hlt
popa
xchg
cmp
sbb
stos
shr
pushf
daa
add
adc
shrb
imul
lahf
into
push
xchg
testb
pop
xchg
sbb
stos
fdivl
out
insl
inc
xor
push
out
hlt
roll
and
mov
mov
and
pop
das
addl
sbb
cmpsl
movsl
ud2
ds
adc
sub
and
and
and
and
and
in
xor
les
mov
adc
xchg
insl
es
sub
push
pop
dec
jno
dec
xchg
and
hlt
add
cmp
jno
pop
mov
dec
fidivl
cli
jbe
shll
in
out
cwtl
hlt
in
adc
and
shlb
icebp
call
add
add
add
add
add
add
xor
das
fisubrl
imul
sub
leave
ss
push
je
imul
push
out
fcompl
and
lock
in
incl
and
or
or
hlt
pusha
mov
xor
rclb
and
stos
push
mov
cmp
mov
xor
dec
lock
mov
add
add
ja
jmp
pop
jne
and
daa
cmp
mov
mov
xor
xchg
ja
cmp
jnp
mov
or
push
movswl
out
dec
jge
hlt
xchg
and
dec
enter
mov
jle
pop
push
jno
arpl
xor
mov
inc
stc
in
jne
bound
mov
or
int3
clc
jge
or
inc
mov
mov
xchg
add
jnp
int
xchg
testl
hlt
addr16
cltd
push
push
nop
add
add
or
outsb
repz
rep
ret
movl
lods
add
lods
sbb
sub
xchg
imul
mov
add
add
cmp
xchg
cltd
std
pop
mov
jne
push
mov
ljmp
pushf
lods
loopne
jl
push
das
movsl
dec
cwtl
xchg
ret
adc
jmp
sub
aaa
shlb
bound
pop
xlat
data16
adc
jns
mov
xor
scas
pop
inc
movsl
mov
mov
icebp
jnp
jae
imull
xor
add
cltd
clc
mov
sti
dec
leave
push
or
mov
mov
or
or
lcall
loop
out
bound
aam
movsb
add
lea
test
stos
es
jae
inc
add
fdivrl
mov
push
icebp
in
sbbl
xchg
push
add
add
add
cmpsb
push
push
ret
scas
jne
sbb
shl
std
adc
pop
adcl
xchg
std
ja
sahf
mov
sbb
sbbb
add
dec
and
into
es
sub
cld
mov
das
cmpsl
scas
lods
jl
addr16
and
mov
cmp
mov
sbb
dec
enter
xlat
jns
xorl
sbb
out
inc
dec
xor
jno
xchg
fs
jmp
fstl
iret
hlt
scas
test
dec
daa
pop
fldenv
or
push
mov
push
sub
add
add
add
add
add
add
push
xor
jns
xor
popa
push
fisubrs
xchg
mov
inc
les
out
dec
push
rorb
notl
dec
lods
push
mov
add
mov
mov
xor
nop
add
sub
movsl
xor
dec
mov
fsubrl
aas
icebp
cmp
out
jmp
pop
stc
aad
incb
and
or
sub
sub
jg
cmc
dec
fwait
rolb
out
mov
jg
pop
loope
enter
test
mov
adc
add
sub
outsb
pop
or
in
addb
add
add
add
add
add
add
push
mov
sub
or
dec
adc
inc
pop
and
add
adc
inc
adc
adc
xchg
imul
or
repnz
pop
in
addl
int3
add
add
cmp
xchg
cwtl
stos
sbb
fbld
nop
pop
stc
fsubs
xor
lahf
sub
aaa
inc
ds
mov
dec
loopne
and
jno
jno
cs
mov
inc
mov
in
lods
xor
push
pop
xchg
or
cmpsb
outsb
pop
test
mov
not
sbb
mov
cmp
shrl
xor
and
stc
mov
cli
pusha
das
outsb
dec
add
add
add
add
cmp
dec
sbb
aam
stc
jge
int3
inc
cmp
ja
inc
stc
xchg
test
pusha
and
sub
jg
enter
mov
clc
adc
lcall
sahf
jge
popf
ffree
dec
mov
push
aam
pop
inc
inc
in
sub
cli
push
pop
mov
pop
pop
mov
pop
add
push
cltd
arpl
mov
add
outsl
mov
mov
pop
xchg
xchg
faddl
jne
outsl
shl
adc
or
sbb
xchg
inc
dec
add
add
add
xor
jo
cmp
sbb
push
add
fldcw
pushl
jg
mov
lods
outsb
es
sub
adc
imul
lcall
dec
bound
lcall
xchg
jne
push
mov
push
int3
dec
lods
and
daa
outsb
jmp
inc
add
add
add
add
add
add
pusha
es
pop
mov
mov
jle
insb
inc
shrl
pop
fadd
mov
aam
push
jo
sbb
frstor
pop
clc
data16
stos
sub
out
inc
and
and
mov
shrb
mov
xor
jns
inc
hlt
fmul
cld
mov
arpl
pop
sbb
pop
cmp
adc
mov
leave
jl
adc
sub
lcall
adc
pop
jg
push
push
testl
incl
incl
incl
incl
aas
sub
lock
loopne
mov
cmpsb
sbb
fnstenv
or
jno
sub
push
xor
jp
xor
lods
rcr
stc
dec
xlat
loopne
out
jnp
add
test
jge
pop
stc
jmp
enter
mov
sub
out
sahf
push
vmovddup
sbb
roll
sub
mov
cmp
rorb
xlat
test
loopne
sbb
mov
mov
in
push
dec
mov
or
scas
lds
inc
push
shll
cld
mull
inc
je
sub
daa
xchg
push
ret
aam
movsl
jno
add
dec
loop
rolb
call
imul
push
cmpl
lcall
or
shl
in
jbe
je
xor
jae
fisubl
xlat
or
fstl
push
fcoms
inc
pop
int3
cmp
popa
inc
loope
xchg
jae
lahf
hlt
pop
mov
sbb
hlt
test
xchg
inc
iret
aas
xchg
in
loope
push
xor
sbb
pusha
xor
int
sub
dec
dec
scas
pop
in
sbb
popa
rcrl
cmp
sbbl
add
add
add
add
incb
cwtl
cmp
gs
dec
add
pop
mov
in
jnp
jge
fmuls
sbb
ss
in
incb
mov
jbe
addl
or
es
inc
inc
adc
or
sub
add
add
add
mov
jl
lods
cmpsb
xchg
jp
mov
mov
add
add
ljmp
cmp
ja
sub
xchg
pop
cli
mov
or
jp
loope,pn
movsb
clc
fidivs
hlt
xor
ficoms
dec
fsts
lock
fimuls
repz
sub
mov
add
add
loope
xor
fimuls
jecxz
cmp
mov
in
cmpsl
add
dec
mov
add
mov
mov
mov
pop
xchg
add
mov
xor
mull
fisttpl
insl
repnz
adc
fdivrl
fwait
or
sub
xchg
andb
fs
cmpsl
cs
arpl
idivb
and
and
and
rolb
das
roll
loopne
mov
push
cld
push
cmp
jmp
pop
rcll
cli
in
jnp
add
add
add
and
in
mov
pop
jb
pop
mov
mov
stos
pop
xchg
adc
fwait
out
ret
addr16
sarb
sti
test
dec
jg
lds
in
mov
pop
cmp
icebp
and
dec
movsb
sub
mov
cmpsl
mov
aad
push
test
xchg
cmc
out
cmpsl
sub
add
add
add
add
aad
jne
mov
je
out
cwtl
inc
cmp
mulb
fistl
push
mov
insb
sub
mov
mov
lods
movsl
arpl
lea
cmpsb
or
jge
sbb
and
inc
xor
jl
adc
jmp
pop
cmp
xchg
dec
stos
out
xor
and
mov
mov
fistpll
jecxz
add
add
fstpl
enter
and
iret
jecxz
sbb
ret
fs
vcvttsd2si
mov
adc
je
sbb
add
fcomps
mov
into
out
push
dec
mov
je
data16
lods
push
lea
sub
aaa
jno
testl
cmpb
sub
push
sbb
imul
call
xor
xchg
push
dec
outsl
pop
fistl
mov
sbb
sub
cmp
jne
push
adc
int
xor
jle
sbb
test
pop
xor
dec
xchg
ret
icebp
pop
add
add
add
add
sbb
pop
pop
shlb
and
int
add
dec
dec
adc
ljmp
cmpsb
in
pop
lock
neg
sahf
pop
int3
daa
fistpl
add
movsb
pop
es
dec
jmp
push
shll
outsl
rcll
and
repz
add
add
add
movsl
cmp
not
mov
icebp
add
out
xorl
ja
push
and
dec
repz
ljmp
mov
add
add
add
lret
push
dec
popa
inc
loopne
inc
nop
movsl
mov
sti
cli
test
pop
dec
xor
mov
cmpsb
or
dec
jmp
xchg
push
jns
ds
scas
cltd
imul
lods
stos
mov
push
insb
mov
dec
repz
je
and
cmp
and
mov
insb
jbe
mov
enter
nop
inc
test
movsl
adc
clc
pop
iret
fs
mov
and
pop
adc
xchg
xor
fcoml
add
sub
mov
sbbl
cmpsl
sub
xor
incl
incl
imul
add
rorl
iret
popa
aam
stc
clc
mov
inc
inc
aad
jno
jmp
push
xchg
in
inc
jmp
fdiv
scas
lock
insb
xlat
inc
movsl
repnz
xchg
movsb
loope
popl
shll
orl
pushf
inc
sub
pop
sbb
scas
inc
mov
es
outsl
pusha
out
pop
cmp
std
and
mov
mov
lods
inc
mov
lret
pusha
ret
xlat
gs
rcl
push
adc
push
insl
rcr
mov
int3
fdivs
enter
dec
repz
add
add
add
add
add
add
mov
xchg
jbe
sub
adc
into
pop
fnstcw
outsl
popf
sti
mov
pop
push
jmp
cmpsb
inc
dec
and
push
addr16
push
movsl
jb
fs
jae
lret
lahf
dec
imul
ljmp
call
and
jmp
mov
repz
adc
call
cwtl
sbb
and
in
inc
xor
add
mov
push
or
daa
adc
sbb
cmpsl
inc
push
mov
repnz
and
pop
out
dec
stos
popf
sub
in
pop
rol
lods
test
dec
add
add
sbb
or
dec
mov
sbb
add
cmpsb
push
jo
push
sub
mov
cmpb
daa
adc
dec
pop
inc
mov
adc
das
cmp
loopne
jl
adc
add
popa
addb
pop
popa
adc
sbb
aam
stos
mov
push
xchg
xchg
fcmovnb
fistps
dec
loop
dec
ret
mov
jnp
pushf
sub
mov
jp
cltd
cld
insb
xchg
cld
jno
jae
pushf
or
sub
lea
cmp
rcrl
push
push
loope
lret
fstps
ljmp
stc
adc
test
inc
out
iret
mov
jecxz
jns
mov
inc
scas
inc
mov
es
sub
add
cmp
pop
cmpsb
xchg
or
push
and
test
cmc
ds
mov
xor
outsb
divps
or
inc
and
mov
loope
pop
ss
dec
jae
leave
mov
insb
jge
mov
aam
mov
adc
je
int3
add
add
add
add
addr16
icebp
lea
fcmovbe
and
mov
inc
inc
or
pop
gs
cmc
jo
pop
js
icebp
pusha
adc
in
jmp
lods
cmp
jno
dec
xchg
jmp
pop
cmpsb
fdiv
add
aaa
sub
jp
fnsave
insl
shrl
inc
add
jecxz
test
aad
cmpsl
dec
push
pop
movsl
dec
mov
lock
daa
jnp
pop
faddp
lahf
and
shll
adc
nop
test
ds
add
cmp
jecxz
xchg
ja
adc
inc
pop
xor
leave
xchg
dec
ret
fstp
mov
dec
inc
lcall
sub
and
jae
mov
add
mov
xchg
incb
add
add
mov
hlt
adc
es
ss
fisubrl
push
in
js
jne
jl
mov
in
call
outsb
stc
scas
sbb
inc
clc
xor
dec
sbbl
add
add
loopne
xor
dec
sbb
ljmp
pop
push
lret
inc
inc
inc
mov
cs
mov
sub
mov
adc
mov
ds
mov
jmp
dec
cmpsl
icebp
xchg
scas
push
scas
push
sub
mov
insl
xchg
fimuls
ja
jle
hlt
loope
sbb
inc
and
repnz
or
xorl
incl
incl
decl
out
daa
out
lret
pop
scas
pop
sahf
mov
mov
ljmp
sti
std
popf
sbb
inc
sbb
mov
push
lods
ret
lcall
mov
jno
sti
xor
mov
imul
into
je
mov
dec
loope
push
push
mov
je
and
pop
inc
stos
arpl
out
cmpsb
sbb
int
xor
loopne
arpl
add
jns
push
ljmp
dec
into
push
push
call
mov
cmp
or
adc
add
adc
add
and
and
fisubrl
sub
rol
in
hlt
xor
cwtl
cmpl
inc
push
xchg
mov
stc
sub
lods
jg
test
or
sub
mov
movsb
pop
adc
clc
lret
xchg
mov
jnp
mov
jge
push
das
xchg
mov
int
pop
in
lds
cwtl
xor
dec
add
jno
mov
adc
imul
scas
mov
lods
mov
gs
out
pop
push
loop
pushf
flds
testb
int3
add
cmp
fdivl
loope
inc
cmp
stc
sub
out
icebp
gs
sbb
mov
xchg
les
dec
dec
jb
and
xchg
lods
aaa
mov
icebp
xchg
cwtl
enter
jp
ljmp
lods
jl
in
xchg
fwait
pop
out
sbb
mov
jbe
bound
jl
xorl
sbb
sub
inc
pop
mov
dec
das
or
subb
movsl
shl
daa
insb
pop
jle
loope
movsl
xorl
in
mov
mov
push
sahf
pop
adc
popa
fmuls
add
mov
nop
add
xor
jmp
jnp
add
scas
fiaddl
sbb
jl
adc
lret
je
jae
adc
or
add
in
addr16
std
aam
xchg
xor
shll
xchg
and
and
and
test
mov
ss
scas
xchg
es
ss
outsl
ret
leave
addb
ret
cmc
daa
dec
movsl
cmpsl
gs
outsl
addr16
dec
push
cmpsb
gs
and
repz
jg
xor
faddl
dec
aad
test
add
fimull
mov
pusha
dec
mov
dec
je
add
out
sub
sub
fdivrs
push
lds
adc
lret
pop
shll
inc
inc
nop
and
or
pop
lods
loopne
fstps
ds
lret
pop
movsb
push
or
ret
mull
out
pop
stos
dec
loopne
mov
push
insb
xchg
shrb
push
pushf
dec
bound
and
and
and
and
and
and
and
mov
adc
or
xchg
mov
cmpsb
xchg
adc
pop
add
mov
lods
sub
jmp
fwait
jno
mov
outsb
fdivl
jmp
cmpsb
push
mov
sbb
add
add
call
sbb
repnz
dec
cmp
cmp
and
scas
std
jl
cmp
inc
cmp
push
lds
pop
ficomps
fnstsw
imul
mov
dec
add
push
cmp
lret
test
cli
int
mov
lahf
adc
jns
sbb
mov
and
int3
add
add
add
add
mov
add
lea
or
xor
aam
or
sbb
sub
das
sbb
mov
enter
and
jno
mov
add
or
loope
aad
rorb
push
push
dec
jno
or
pop
sbb
and
popa
mov
add
icebp
hlt
sub
fbstp
jp
outsl
cmp
pop
mov
fs
lea
add
adc
outsb
es
xor
and
and
and
add
sub
lret
push
nop
add
jmp
adc
movb
cld
mov
ja
push
dec
cmp
sub
lods
add
add
add
add
aas
data16
cli
out
ficoms
push
dec
jno
not
scas
shll
ret
mov
icebp
xlat
sahf
xor
iret
into
loop
push
sarb
sub
inc
lods
cmpsb
fs
int
add
mov
add
addl
in
or
std
mov
cmc
mov
mov
out
ret
movsl
jo
mov
jp
push
sub
xor
add
xchg
fists
add
frstor
jle
std
int
testb
jns
push
rolb
popa
add
call
add
ss
xchg
orl
cltd
pop
jne
cld
ds
and
and
and
and
xor
loop
push
sub
aas
inc
jbe
shlb
jge
stos
out
out
pop
idivl
xchg
sbb
adc
js
aas
mov
loop
inc
and
jecxz
pop
dec
and
mov
mov
cli
adc
mov
push
mov
inc
inc
and
pop
mov
lea
cmp
movsb
popf
out
xorb
mov
xchg
sbb
add
add
add
push
inc
mov
xor
mov
or
lret
cmpsl
or
mov
add
add
shlb
inc
jns
mov
mov
dec
es
mov
gs
sub
lahf
push
jb
inc
sub
movsb
pop
inc
cmovbe
xchg
adc
jmp
fs
dec
sbb
test
int3
mov
sbb
addb
dec
push
cmpsl
notb
mov
mull
outsb
adc
and
mov
cli
add
or
repz
mov
push
jle
jae
mov
mov
enter
rclb
das
inc
or
dec
lret
test
and
inc
daa
pop
insb
mov
int3
add
ss
mov
xchg
bound
int
mov
jnp
imul
mov
popf
out
adc
push
std
or
int
inc
mov
mov
pop
test
pop
jb
pusha
sub
lret
or
lods
nop
pop
xchg
jmp
mov
pop
imul
insl
jns
mov
cmp
mov
out
arpl
xor
rclb
add
orl
push
out
jmp
add
add
pop
xchg
sbb
leave
pusha
inc
add
add
jge
pusha
cmpl
out
mov
aaa
xchg
pusha
pop
scas
sbb
xchg
jne
lahf
fildll
enter
jl
mov
xchg
cmp
and
jno
xchg
lret
lret
sarb
cmpb
loopne
mov
xorl
cmpsl
ret
cmpsb
sub
xor
adc
jae
push
outsb
xlat
cmp
loopne
sub
ror
and
adcl
mov
int
outsl
push
lds
dec
repz
cmp
sbb
repnz
push
aaa
add
stos
dec
lea
incl
incl
mov
mov
push
imul
inc
lods
cmpsl
xchg
aam
les
xchg
test
jp
cmp
cwtl
icebp
jmp
arpl
sahf
ss
int
add
sbb
lret
inc
bswap
aaa
mov
andb
mov
pop
push
add
push
repz
loopne
cmp
loop
dec
jg
xchg
stos
mov
pop
out
jns
mov
mov
ljmp
xchg
lods
aas
add
sub
pop
jge
jecxz
rolb
xchg
mov
stos
pop
mov
adc
push
mov
adcb
dec
out
sarl
mov
add
add
jge
in
lods
inc
call
test
sub
sub
inc
adc
cmp
lret
call
loope
fimull
aaa
push
jb
icebp
xchg
adc
mov
cmp
dec
push
push
push
adc
pusha
cmpxchg
ret
or
cmp
xchg
popf
mov
cmp
push
jecxz
enter
ret
cwtl
outsb
rcrb
sub
pop
xor
push
addb
add
add
cmpsl
push
lret
aaa
pop
pop
aaa
shl
jecxz
daa
test
gs
leave
push
ret
fcmovb
sahf
fsub
bound
testb
sub
inc
pop
pop
sbb
test
xchg
xor
mov
out
xchg
add
movsb
and
sub
adc
push
dec
jge
push
mov
fadds
add
dec
mov
icebp
jle
shlb
repz
xchg
loope
stos
aas
fldcw
jecxz
mov
aam
sahf
adc
aas
mov
imul
jb
ss
lcall
cwtl
cli
adc
push
popf
cmpsl
in
jnp
insb
sbb
stc
jl
arpl
repnz
call
adc
add
add
add
add
shl
test
mov
push
mov
xchg
pop
xchg
ljmp
cmp
enter
test
xor
jbe
or
out
jae
mov
xbegin
nop
add
int
fs
ljmp
cmp
lea
movsl
daa
pop
xchg
mov
aaa
insl
pop
cltd
bound
aad
xchg
inc
cmp
sub
adc
xchg
sub
int3
add
adc
mov
dec
fsubrs
push
stos
rclb
jmp
scas
jp
ds
pop
lea
test
and
out
loop
adc
ljmp
xor
repnz
cmp
xchg
stos
adc
std
cmp
ret
loope
dec
sub
sbb
out
loopne
inc
sub
push
add
out
loop
cmp
add
add
add
add
add
scas
movsb
push
or
and
fucomp
enter
loop
sti
es
addr16
xor
mov
cld
mov
filds
or
shrl
and
insb
push
push
jnp
dec
pop
cli
pop
aad
cmp
int
lea
loope
sbb
pop
ds
lahf
mov
or
xchg
inc
sub
mov
cli
daa
cmp
cmpsb
rol
jbe
hlt
mov
mov
ret
nop
add
add
or
lods
mov
scas
jmp
daa
xlat
cmp
scas
sub
push
mov
pop
pop
ss
push
dec
dec
or
push
test
pop
decl
sub
dec
jle
and
xchg
test
xchg
xor
cld
test
into
sub
push
imul
jl
in
lahf
inc
xlat
lods
lock
add
push
adc
mov
jns
jl
add
xchg
sbb
xor
in
mov
jmp
push
out
fildl
incl
incl
incl
incl
incl
outsb
cmp
je
lret
sbb
fmull
int3
shll
mov
jae
int
jo
cmp
and
stos
add
cli
xchg
add
sbb
imul
fmulp
push
test
add
add
add
add
test
adc
mov
pop
inc
movsb
not
in
sbbl
mov
push
inc
aaa
pushf
cltd
xchg
mov
addr16
adc
cltd
cmp
jns
std
testb
and
test
stos
mov
jb
outsl
or
xor
adcl
dec
jmp
mov
arpl
out
shl
test
xor
iret
pop
jnp
or
and
xchg
mov
inc
mov
adc
aam
icebp
fildl
cli
xchg
xchg
in
aaa
add
add
pop
pop
movsb
addr16
repz
popa
outsb
xchg
push
std
pop
pushl
loopne
inc
add
inc
scas
xlat
cwtl
frstor
cmp
jge
loopne
push
and
outsl
loope
pop
dec
stos
and
xchg
lods
lock
bound
js
test
pop
mov
mov
xchg
pop
dec
mov
lods
scas
mov
scas
dec
jb
clc
pop
outsl
mov
lret
mov
mov
jl
xor
mov
and
and
stos
pushf
jge
xchg
mov
and
mov
jns
ja
mov
pop
sbb
lret
fadds
cli
mov
and
inc
push
jge
cmpsl
movsb
pop
add
add
add
add
add
add
add
xchg
lret
and
cwtl
lret
push
dec
div
xchg
cli
cmpsb
dec
cwtl
or
push
jmp
fnstcw
cmc
aas
mov
incl
incl
incl
lcall
pop
cmp
outsl
and
fists
lahf
inc
out
push
adc
aam
sar
sbb
lods
dec
flds
dec
lods
leave
jmp
jecxz
xor
jp
adc
ret
mov
jle
pop
sti
adc
pusha
mov
mov
push
sbb
add
out
int
and
lret
jo
pop
cmp
and
inc
push
dec
push
mov
ret
xor
in
incb
ljmp
add
mov
popa
cmpsl
mov
xchg
stos
test
in
push
aas
add
jb
sbb
imul
sub
pushf
cmp
xor
cmpsl
addb
add
add
add
add
add
add
or
gs
insb
jecxz
sbb
fbld
lcall
fistl
dec
push
dec
js
sti
mov
mov
pop
xchg
mov
ds
int
loop
push
jle
sub
pop
addr16
or
sbb
pop
inc
sub
lods
mov
dec
mov
jno
xor
and
test
cmc
xlat
sti
scas
clc
mov
add
xchg
ret
or
ret
loopne
outsb
sub
loopne
mov
jg
xor
xor
jecxz
cltd
xorb
dec
sbb
cmp
jb
pop
fwait
nop
add
add
push
jns
das
jecxz
push
adc
inc
add
add
imul
jns
es
leave
jne
cmpsb
xor
enter
imul
inc
movsb
jno
cltd
bound
loop
adc
mov
cmp
sahf
loop
scas
push
pop
jbe
lods
sbb
cmc
bound
aas
movsl
js
scas
cmc
pop
inc
sub
mov
push
movsb
sbb
jno
jb
adcb
insb
call
adc
xchg
jl
push
sbb
xchg
ljmp
arpl
ljmp
lret
pop
jecxz
test
shll
sbb
mov
cli
ficomps
test
incl
incl
incl
incl
xchg
jecxz
scas
out
adc
cmp
mov
les
addr16
mov
je
xlat
xchg
cs
lcall
add
into
jecxz
filds
movl
lret
jl
sahf
sbb
scas
es
mov
mov
adc
sub
and
ja
pop
and
push
add
incl
incl
incl
lcall
movsl
xor
cmp
popf
pop
dec
test
add
and
mov
fimuls
data16
sbb
dec
mov
les
imull
fldcw
push
jne
sub
or
and
pushf
and
mov
pop
push
aas
lods
scas
rcrb
jg
call
leave
mov
mov
and
insb
jge
sbb
mov
rcrl
lret
mov
in
rcl
mov
sbb
gs
popa
push
or
leave
icebp
imul
pop
push
add
add
add
add
add
add
cmp
xor
mov
incb
jne
mov
jmp
fnsave
push
scas
leave
ret
roll
rolb
and
and
and
and
and
and
daa
ljmp
mov
pop
xor
out
add
add
add
add
das
cmp
ljmp
mov
cmp
loope
lods
mov
push
inc
or
add
sbb
fnstsw
push
xchg
sti
adc
in
mov
addl
jne
aam
xchg
in
mov
repnz
ret
shll
lahf
icebp
adc
in
faddl
sbb
dec
adc
pop
call
xchg
inc
insb
xchg
cmp
xchg
inc
lods
std
addr16
jno
pop
insb
inc
jge
insb
popa
mov
fistpll
jg
inc
loopne
int3
add
add
add
add
add
push
les
adcb
adc
or
call
mov
add
jle
popa
xor
ljmp
push
xor
fs
call
pop
sbb
and
and
rclb
stos
jecxz
adc
inc
mov
cmp
push
lock
mov
or
pusha
mov
pop
out
insl
mov
aas
in
sahf
sbb
arpl
rcl
test
nop
add
add
stc
lret
aaa
cmp
dec
xor
aad
push
aaa
mov
dec
cld
ljmp
add
fbstp
and
repnz
stos
xor
jbe
pop
or
mov
dec
fstps
inc
scas
stc
xchg
or
xchg
mov
add
mov
pop
lahf
lock
mov
or
push
pop
mov
adc
mov
jmp
dec
mov
xor
and
and
and
sub
mov
push
adcl
cmp
push
inc
jae
jo
mov
jmp
ljmp
inc
sub
and
ret
data16
leave
mov
sarb
cltd
test
jl
insb
adc
iret
shlb
test
js
cmpl
mov
jecxz
into
sti
frstor
sub
das
fiaddl
mov
outsb
ja
lahf
sub
fisubrs
mov
or
mov
lock
es
mov
ret
inc
xchg
cmpsb
mov
call
das
je
xchg
pop
fstpl
int3
inc
orl
dec
sub
pop
sub
incl
incl
sub
into
pop
mov
gs
push
mov
inc
pop
fisubrl
inc
pop
scas
mov
gs
imulb
mov
xchg
enter
cwtl
sbbb
dec
test
loop
sbbb
idivl
xchg
and
dec
inc
add
add
add
add
add
addr16
sbb
xlat
sub
ja
jge
aaa
jge
loopne,pt
popa
stos
mov
fbld
jg
pop
addr16
cmp
jle
fmuls
push
push
lea
jnp
repz
fxam
xchg
inc
ror
jne
fld
sub
inc
fwait
push
jbe
cld
jle
cmp
mov
push
push
xchg
jg
cmp
scas
or
adc
repz
mov
adc
pop
gs
or
es
lds
adc
dec
and
jne
dec
jle
dec
addr16
xchg
sub
push
fdivr
movsb
es
inc
fwait
sub
mov
add
ficompl
aaa
int3
add
or
in
ds
insl
loop
dec
xchg
pop
push
jmp
addr16
scas
or
inc
jge
js
ds
aaa
pusha
or
add
and
cmp
loope
pop
outsl
rorl
stos
fildll
enter
jmp
or
orb
or
inc
pop
fldenv
inc
inc
mov
inc
cmp
dec
add
fmull
subl
mov
sahf
shll
mov
pop
sbb
mov
das
popa
add
add
push
ds
pop
mov
lock
push
jg
xchg
stos
scas
lahf
mov
dec
push
pop
pop
cli
mov
dec
sahf
sbb
jnp
push
cld
int3
incb
jecxz
and
icebp
push
ljmp
outsb
bound
cmp
les
mov
push
cltd
outsl
insb
push
insb
cwtl
daa
cmpsl
leave
std
mov
xor
in
push
ja
gs
xlat
in
add
add
add
add
add
add
subb
shl
std
xlat
hlt
mov
imul
sub
in
js
rclb
push
mov
xchg
xor
mov
repnz
ret
cmp
cli
shl
ret
outsl
lods
and
cs
push
sbb
cmpsl
cmpl
es
cmc
lcall
push
scas
mov
movb
fnstenv
xor
cmc
jb
push
xchg
push
xor
inc
sub
pop
test
divl
popf
inc
xor
fs
adc
cmp
jmp
jne
jecxz
rorl
jae
les
push
fmull
jp
cmc
ja
mov
inc
nop
add
add
mov
cmpsb
pop
push
cmp
mov
jmp
gs
lcall
das
jg
dec
aam
mov
pop
dec
sub
outsb
inc
cmp
mov
adc
dec
insb
sbb
cwtl
dec
lcall
int3
push
int
stos
jl
lods
inc
lods
xor
fisttpll
cli
xor
dec
mul
mov
mov
out
roll
pop
xchg
outsl
xchg
cwtl
arpl
dec
dec
jne
nop
scas
mov
hlt
jmp
inc
pop
test
hlt
and
popf
xchg
xchg
scas
mov
pop
lahf
popa
mov
icebp
outsl
pop
xchg
jp,pt
sbb
cli
bound
add
xor
lds
xchg
xchg
lret
pop
ljmp
nop
add
add
test
xchg
jle
push
in
test
data16
insb
add
adc
mov
or
fsubrp
popa
test
les
xchg
cld
dec
and
dec
mov
div
xchg
push
jge
ret
mov
shr
cld
enter
rorb
push
pop
out
inc
pop
rolb
pop
imul
mov
push
adc
fwait
inc
jns
out
stos
loopne
cmpsb
and
xor
ja
push
test
stc
xor
xchg
dec
or
mov
out
inc
les
fwait
addb
add
add
push
xchg
mov
mov
out
push
das
std
jbe
mov
call
incl
incl
cmp
sub
pop
iret
mov
sbb
lea
mov
push
adc
xchg
mov
lock
jge
test
cld
popf
dec
mov
add
add
mov
enter
adc
xchg
inc
mov
sub
xor
xor
xor
subl
fwait
lea
les
lcall
lcall
jg
sub
les
rorl
sahf
xchg
test
fiadds
cmc
cs
rolb
dec
jno
out
xchg
xor
xchg
or
inc
add
bound
xor
cmp
pop
fs
les
fnstenv
xor
mov
leave
xor
das
test
pop
bound
movsb
movsb
in
pop
mov
jns
jp
mov
arpl
push
pushf
jmp
push
or
outsb
and
sbb
push
aas
push
add
jp
cwtl
sbb
pop
add
add
add
add
add
dec
adc
test
cltd
jge
mov
aaa
sbb
rcr
insl
nop
jae
inc
cld
insl
and
lods
ljmp
ja
cwtl
dec
dec
lret
push
int3
inc
push
imul
stc
add
xor
cmp
imul
movsl
push
ja
pop
xchg
and
push
jbe
jl
int
orb
es
push
cmp
pop
xor
dec
sub
add
out
mov
fwait
xchg
or
cltd
push
cltd
xchg
fdiv
aaa
aam
mov
hlt
jb
add
pop
sbb
popf
jp
add
mov
mov
sub
adc
push
aam
push
das
rol
movsl
push
in
mov
sti
outsb
out
adc
sti
in
stos
lahf
sbb
es
add
add
add
lods
cmpsl
ret
jo
sub
sub
jecxz,pt
stc
xor
xor
fisttps
cmpsb
cmp
stos
add
push
cmpsl
lret
add
lock
xor
ror
and
aaa
test
cmp
cmp
fs
sbb
dec
mov
xor
mov
or
dec
testl
push
push
cmp
imul
fdivrp
mov
mov
mov
dec
fstps
push
cwtl
cltd
add
aad
xchg
mov
cld
cmp
jo
push
add
and
ret
arpl
hlt
and
faddl
add
add
mov
data16
sarb
and
xor
call
pop
sub
rcr
lret
jne
mov
inc
pushf
in
out
push
cli
adc
fsubrs
xchg
jg
push
and
ja
pusha
jo
fdivr
addr16
mov
xlat
xchg
clc
imul
xor
xor
popf
xchg
jp
sbb
mulb
mov
mov
outsb
hlt
cltd
out
shrl
in
push
imul
push
daa
xchg
lds
in
cli
mov
mov
aas
pop
add
cwtl
insl
pop
loope
mov
xorl
mov
inc
ljmp
imul
pushf
mov
js
das
bound
add
cmpsb
push
add
dec
adc
push
add
add
std
rcrl
fcmovbe
mov
bound
push
fsubrs
test
aas
pop
negl
dec
ficomps
mov
outsb
js
ds
mov
mov
shlb
outsl
stos
adc
sarl
mov
add
lret
sub
jb
bound
sbb
and
pop
dec
add
sbb
aaa
int
push
inc
sti
xchg
and
mov
dec
cmp
mov
mov
pop
add
xor
cmp
jbe
cld
cmp
imull
and
and
scas
int
inc
das
jg
into
orl
imul
inc
sub
aad
cmp
cmp
push
js
lret
cmp
push
ja
iret
pop
inc
or
movsl
sbb
push
mov
lods
lods
out
lcall
cmp
xchg
push
adc
mov
pop
pop
push
xchg
or
aad
daa
cmp
add
loop
mov
cmp
sbb
idivl
pop
pushf
outsl
push
xchg
and
push
loopne
cmpsl
lret
gs
stc
test
inc
std
pop
jp
fnstsw
cli
into
repnz
js
inc
clc
leave
cli
shll
lds
mov
pusha
push
sbb
test
add
add
add
add
add
dec
mov
or
pop
das
movsb
popf
pusha
out
mov
enter
lret
into
addl
add
mov
inc
stos
add
add
add
add
pop
loop
xchg
repz
inc
pop
jb
add
push
mov
cmpb
mov
outsl
cmp
xchg
cmc
movsl
and
or
sbb
adc
out
stos
aad
cmpsb
mov
or
sbb
leave
iret
mov
fs
loopne
idivl
int
adc
adc
call
push
or
mov
insb
data16
inc
xchg
lahf
fildl
jl
xchg
add
add
addr16
push
mov
ret
or
dec
outsb
adc
ja
out
xor
add
mov
cli
and
lock
inc
jne
movsb
xchg
enter
cmp
jmp
loop
fmuls
xchg
mov
mov
xchg
insb
mov
inc
insb
fisttpl
mov
sti
movsb
js
gs
ficoms
popa
jbe
xchg
mov
sub
mov
movsb
sub
add
outsl
stos
xchg
cltd
jnp
cmp
stos
sub
in
aas
mov
rcrb
pop
sub
fdiv
inc
dec
aas
out
js
lret
cld
or
shlb
sbb
pusha
push
pusha
jmp
int3
testb
jmp
int3
add
add
adc
mov
mov
lahf
pushf
sbb
imul
repz
scas
lds
xor
into
scas
loopne
push
sbb
leave
shlb
adc
ror
add
xor
xchg
loop
inc
jp
loope
cmp
data16
fiadds
xchg
les
fs
sbbb
and
push
xchg
cmp
outsb
sbb
xchg
fs
notl
in
xor
pop
mov
sub
pop
push
jmp
cmpsl
lods
mov
jbe
xchg
sub
loopne
out
adc
pop
lock
add
clc
jb
mov
movsb
mov
scas
mov
and
jne
clc
add
add
add
mov
jb
outsb
call
cmp
xor
testb
xchg
test
movsb
sbb
pushf
subb
insl
int3
dec
int3
int
push
lea
jb
xchg
xor
nop
add
add
push
ljmp
sub
stc
std
jmp
mov
imul
pop
adc
andb
jne
pusha
jns
push
jge
and
clc
scas
or
ss
js
cmp
jecxz
out
decl
rorl
mov
or
iret
sbb
aad
pushl
loope
mov
bound
inc
fisubrs
in
xchg
aas
fdivp
inc
cmp
and
test
push
stc
cmc
sbb
add
add
add
add
add
add
outsl
jno
shll
dec
pop
cld
cmp
in
cwtl
adc
push
mov
xor
jp
loop
xchg
out
dec
cmp
sbb
inc
pop
icebp
pandn
add
or
push
and
fmuls
pushl
cmp
push
roll
push
inc
cmp
push
into
sbb
inc
cld
sub
and
inc
jnp
loopne
fwait
lds
push
sub
arpl
pop
jmp
repz
xor
push
rorl
das
cmp
repnz
inc
rclb
xchg
mov
xchg
bound
repz
cwtl
mov
fdivrs
add
xor
pop
push
add
add
sub
fsubrs
pop
div
mov
repz
lret
ljmp
addr16
mov
lock
mov
dec
push
hlt
enter
shr
mov
pop
lock
out
mov
xor
cmc
add
lds
xor
fwait
sub
sarl
sti
ja
xchg
mov
cmp
in
push
sahf
jecxz
ret
push
jmp
or
ds
in
loope
dec
in
stos
inc
sbb
add
fs
pop
ja
cmpsl
sbb
into
ljmp
sub
das
icebp
add
add
add
add
add
add
xchg
mov
cltd
subl
fsubs
int3
push
pop
stc
cli
and
adc
adc
mov
lds
sbb
into
outsl
push
push
mov
lods
adc
lret
sti
mov
clc
fst
mov
imul
filds
cmp
sub
adc
clc
paddw
dec
mov
mov
mov
cltd
pop
pusha
xchg
and
incl
incl
incl
incl
dec
sub
lea
dec
cmpsb
sub
inc
dec
cmp
mov
inc
push
dec
popf
or
xor
mov
sbb
xlat
xor
sub
push
sbb
test
sub
pusha
and
jns
mulb
es
insl
and
notb
sub
pop
out
or
sbb
mov
fnstsw
push
and
stos
in
sub
int3
add
mov
scas
test
repz
outsl
xchg
outsw
sbb
add
jg
lods
adc
dec
stc
sti
out
sub
mov
jne
out
aaa
xchg
ljmp
scas
inc
jns
add
push
test
xor
int3
add
add
sahf
adc
fwait
lret
ret
xor
push
pop
mov
mov
add
das
add
sarl
jp
repnz
popa
into
pop
lds
mov
xchg
mov
inc
call
pushf
pop
out
ljmp
sub
cmp
sbb
jne
cmpsb
mov
negb
out
xlat
mov
repnz
inc
jecxz
test
dec
nop
mov
pusha
cmpb
xor
lret
adc
aad
inc
daa
lret
data16
je
outsb
inc
fists
push
lods
lret
leave
cmp
xor
cmp
sub
div
movsl
mov
dec
or
incl
incl
incl
incl
incl
incl
fldcw
or
cs
pop
mov
cmp
bound
xor
cltd
adc
rorb
inc
or
fists
sahf
jle
mov
ret
push
jecxz
movsb
ja
outsb
neg
int
pop
xchg
repz
adc
sbb
xorl
insl
jg
sbb
or
sub
in
aas
test
sub
not
mov
popf
shrl
xchg
pop
stos
rolb
jnp
out
pop
out
pop
test
mov
sbb
lahf
ret
ljmp
add
add
add
add
add
call
push
popf
cli
xchg
xor
call
dec
cltd
loope
popa
adc
jle
xchg
std
jnp
jnp
daa
or
test
filds
insl
movl
and
cmp
shrb
mov
mov
mov
or
and
jp
pop
xchg
xor
xor
push
fiadds
sbb
jo
push
in
sub
not
popa
lds
int3
add
add
add
add
add
loopne
pop
fwait
pop
xor
daa
fwait
cmp
addr16
ja
inc
push
inc
shlb
dec
js
xchg
out
imul
cmc
sar
movsl
xor
xor
xchg
mov
pop
pop
leave
stc
fisubs
inc
fwait
pop
push
sbb
pop
pop
out
mov
lcall
je
push
pop
notb
or
ret
mov
inc
pop
push
lock
lock
test
das
add
data16
adc
xchg
rol
aam
shlb
sub
movsb
jae
je
add
or
add
fcmovu
aaa
cmc
adc
outsb
sahf
push
mov
sbb
mov
testb
scas
dec
bound
mov
pop
adc
aam
pop
mov
hlt
ret
pop
cmpsl
test
fisubrs
gs
out
stos
xor
pop
dec
fldt
xor
repz
fcomi
and
push
clc
push
xchg
mov
or
dec
adc
and
mov
movsb
xchg
dec
jl
mov
mov
pop
mov
call
jmp
dec
cmp
inc
xor
inc
int3
or
dec
lcall
xlat
pop
push
lahf
stc
xchg
cmp
dec
and
cs
mov
push
cli
lea
jmp
nop
add
add
fidivl
mov
add
xor
fistps
sub
movsl
mov
std
cmp
add
add
fsubr
lahf
pop
inc
je
leave
fldl
xlat
iret
mov
cmp
xchg
xchg
out
sbb
fs
xchg
pop
js
fldl
in
and
and
and
and
and
dec
and
push
mov
mov
xchg
lcall
nop
daa
mov
stos
push
dec
add
add
mov
and
loope
cmp
cwtl
pop
imul
mov
out
std
arpl
fwait
les
xchg
pop
or
ljmp
xchg
lods
repnz
les
orb
shl
jne
bound
and
jle
ret
add
sub
aam
sub
std
mov
pop
imul
adc
xchg
pop
insl
sub
mov
dec
lock
add
add
add
add
add
add
inc
mov
lret
fld
test
out
repz
jae
cmp
adc
sti
data16
jmp
adc
add
add
add
add
mov
imul
hlt
mov
sub
arpl
mov
cld
movl
mov
fsqrt
std
push
sbb
sbb
ficomps
outsl
dec
add
es
mov
fisubl
xlat
xchg
push
push
mov
sbb
sub
xchg
icebp
fidivl
cmp
adc
push
jmp
pop
mov
int
adc
sbb
mov
and
bound
push
push
push
jo
xchg
loopne
jnp
mov
fstpl
sub
lods
push
fwait
into
fs
pop
lds
test
out
sbb
insb
sbb
push
inc
test
add
add
add
add
add
add
add
ret
add
int
movsb
jne
jge
mov
mov
movsb
cmp
fwait
inc
push
jae
add
es
push
sub
mov
mov
add
add
add
add
add
add
push
call
fsubrl
pusha
and
and
and
addb
les
push
inc
xchg
add
dec
sarl
xor
sub
adc
push
push
push
call
dec
ja
movsb
inc
mov
bnd
iret
pop
adc
jnp
xchg
sahf
nop
jne
fdivs
pop
test
lds
jl
gs
scas
addl
scas
push
and
add
aad
mov
outsl
sarb
xchg
in
test
fs
push
lret
fstps
push
and
mov
xchg
or
push
jno
mov
outsl
movsl
in
jl
xor
mov
push
movsb
adc
aaa
je
hlt
add
add
add
or
mov
and
and
and
and
and
and
push
rorb
sub
dec
sbb
rcrb
push
cmp
mov
je
sub
mov
xchg
sbb
lods
cmp
insl
shlb
popa
xchg
or
test
push
js
jecxz
mov
add
add
add
add
add
add
add
mov
xchg
fnstenv
xor
dec
dec
jne
je
jno
cltd
dec
ss
mov
into
enter
aas
fcom
dec
scas
jl
lods
sbb
add
lea
mov
inc
xchg
dec
sbb
jno
test
xchg
push
push
mov
pusha
aaa
cli
xor
pop
pop
clc
stos
in
mov
mov
lcall
outsl
shlb
sub
bound
xor
inc
push
dec
je
push
sbb
inc
xlat
aad
pushf
sbb
rorb
cwtl
and
les
and
and
and
and
and
and
and
cs
xor
pop
jne
push
hlt
out
sub
sbb
movsb
cltd
adc
mov
test
es
cmpsl
adc
mov
in
sti
insl
add
add
jecxz
test
jmp
pushf
cmp
bound
xchg
fdivrl
scas
add
or
imul
push
test
push
sbb
addr16
sub
test
sub
jl
stc
push
xchg
adc
mov
jmp
cwtl
fnstenv
xchg
jo
adc
and
or
xor
out
mov
pop
mov
push
dec
adc
mov
fisttps
dec
push
shll
inc
fcomps
xchg
mov
packssdw
cmp
and
loopne
in
lahf
xchg
lods
stos
mov
mov
pop
insl
ja
dec
jmp
and
jmp
les
and
and
and
and
and
lret
aaa
psllq
cmp
and
mov
out
in
cmp
jmp
test
sti
jge
xor
mov
xchg
cmc
cmpsb
or
sub
jmp
mov
xor
mov
sbb
sub
add
sbb
aad
xchg
add
add
test
dec
shl
sbb
mov
mov
mov
loopne
jl
and
and
adc
mov
decl
cmp
push
dec
xor
add
mov
int3
cmp
pop
adc
or
cmpsl
mov
mov
inc
adc
xchg
leave
sti
outsb
test
or
in
pusha
in
aam
inc
xlat
call
sbb
mov
in
sti
clc
fldcw
jge
cmc
push
jmp
add
dec
movsb
sub
inc
out
and
push
cwtl
add
adc
div
in
adc
jmp
mull
dec
cmpsl
pop
jmp
add
jne
xor
mov
and
and
and
and
and
xchg
cs
mov
call
xchg
cld
push
mov
scas
outsb
iret
mull
mov
jl
mov
pop
adc
lret
sub
mov
rcl
xor
sub
xor
jno
ret
cmp
mov
imul
xor
lret
push
push
hlt
cmp
inc
enter
ss
pop
loop
push
lcall
ds
and
mov
adcl
mov
aas
fsub
pop
pop
insl
in
mov
push
mov
push
cmp
js
pushf
jg
test
mov
and
and
bound
sub
bound
scas
xor
or
cmp
fldcw
pop
nop
mov
cmp
xor
lds
cmp
loop
filds
incl
incl
incl
incl
incl
out
movl
bound
mov
mov
notl
and
cmpsb
mov
dec
cmpsb
xchg
mov
adc
add
push
and
mov
loopne
jae
in
lds
inc
and
sbb
shlb
stos
pop
cmp
inc
add
sbb
ds
ds
mov
fs
ret
test
int3
add
add
add
add
add
cmp
movl
jnp
mov
addr16
add
add
add
add
jb
mov
repnz
out
mov
pop
add
mov
leave
aas
inc
cmpsl
cmpl
popf
outsb
pop
or
mov
xchg
mov
stos
push
or
test
lahf
fstps
add
add
add
add
add
add
add
xchg
das
mov
cmp
aaa
or
inc
sub
and
and
sub
fidivl
std
xchg
push
fistpll
cmpsb
and
and
mov
lcall
sahf
cs
out
into
xor
test
ret
test
shlb
mov
insl
mov
outsl
icebp
pop
push
mov
nop
add
xor
scas
pop
stc
imul
fucomip
mov
cmpsl
pop
add
add
add
rcr
icebp
mov
pop
push
mov
stc
repnz
jb
arpl
dec
xchg
aaa
daa
mov
adc
lods
stos
jl
leave
stos
js
fidivrs
sahf
pushf
arpl
push
dec
push
cmp
lods
mov
xor
enter
push
inc
push
lea
nop
jl
fwait
push
fistpll
or
jmp
lahf
jnp
mov
adc
xchg
push
popf
jne
pop
pop
jbe
aam
mov
or
dec
and
jecxz
daa
xchg
scas
jno
xchg
je
test
mov
and
and
and
and
and
and
sub
mov
mov
jp
outsb
lock
scas
bound
jg
push
scas
push
sbb
add
repz
mov
cs
lea
sbb
pop
mov
rcrb
movsb
pop
xor
in
fs
adc
jb
cld
ret
test
inc
jge
add
into
arpl
pop
lock
fstpt
jns
lret
cmpb
cwtl
and
mov
lret
or
jle
xchg
mov
sub
cmc
or
push
jno
cmp
outsb
pop
addr16
push
fs
inc
outsl
jmp
or
lds
sbb
es
adc
sub
aam
inc
sbb
add
out
and
into
ja
adcl
pop
insb
call
pop
pop
fisttps
je
shlb
sub
xor
out
aad
jns
addr16
out
dec
add
add
sarl
inc
push
lods
push
jae
test
xlat
mov
add
or
fimuls
dec
loopne
je
cmpsl
dec
mov
push
imul
sar
cmpsl
imul
mov
aad
loop
xchg
push
xor
inc
sbb
scas
ss
push
rorb
cwtl
pop
push
inc
iret
cli
xorl
mov
sub
push
mov
sti
nop
add
fistpl
sub
sbb
push
mov
xor
std
aas
sar
call
pop
std
loope
imul
xchg
nop
add
mov
mov
xchg
sbb
sbb
add
add
add
add
add
pop
stc
inc
int
popf
sti
lods
dec
push
dec
aam
sahf
adc
push
or
insb
pop
dec
push
sub
jbe
push
dec
dec
lret
xor
aad
outsl
repz
iret
cmpsb
sarb
xchg
popf
fidivrl
stc
cmc
lret
fs
seta
pop
xchg
int3
aas
jmp
mov
lret
sbbl
xor
addl
add
add
add
add
add
popa
add
mov
mov
int3
pusha
movl
jg
lahf
mov
fwait
add
add
jno
lods
sbb
mov
mov
ret
xchg
rolb
cwtl
pusha
popa
fldl
jbe
inc
mov
jbe
pop
mov
xor
cmpl
adc
sub
out
cltd
iret
push
xchg
adc
mull
pop
sbb
in
cmp
loope
sub
adc
cmpsb
sub
sti
mov
int3
xchg
outsl
sub
dec
add
sub
mov
hlt
cmp
icebp
mov
out
add
add
add
add
add
daa
movsb
lret
les
loopne
add
fsubrp
dec
icebp
shrb
pusha
mov
cmp
mov
repnz
and
aas
lret
cld
inc
ret
or
inc
sbbl
pop
mov
in
push
sub
sub
test
pop
sbb
xchg
aas
cmp
and
cmp
dec
fidivrs
ret
int
leave
aad
adc
pop
jae
daa
and
jne
ja
lret
ror
inc
mov
sub
testl
outsl
add
or
lods
mov
xlat
sub
shl
ja
fildll
test
arpl
jo
and
std
cwtl
push
cmp
adc
sbb
add
pop
jmp
iret
pop
adc
pop
sub
stos
xchg
or
aam
dec
iret
daa
pop
out
cld
sub
ljmp
call
mov
cmpsl
call
shll
sub
sub
mull
ja
stos
adc
and
shlb
je
and
or
stos
dec
enter
out
clc
outsl
int
enter
mov
in
sar
mov
xchg
int3
pop
adc
inc
mov
cmp
cld
sub
sub
dec
mov
aaa
cmp
mov
cmp
mov
xor
out
dec
jg
and
pushf
dec
dec
push
or
push
mov
cmpsl
leave
lcall
jne
cmc
or
fadd
mov
nop
js
mov
inc
jae
add
add
mov
push
fwait
les
popa
in
push
in
mov
stc
out
movsl
or
adc
inc
jo
xor
test
testb
out
mov
pop
scas
mov
mov
sub
push
inc
cltd
popf
mov
sub
out
test
stos
push
jp
push
fs
pop
jg
pop
mov
loopne
nop
add
add
icebp
and
adc
out
in
or
add
in
mov
push
cmp
jecxz
rcr
cld
movsl
sub
incl
incl
incl
incl
incl
lcall
or
pusha
andb
jecxz
pop
insb
iret
mov
sti
xchg
les
ja
add
add
sub
push
xor
push
popa
pop
in
scas
sbb
ret
mov
cmpsb
mov
adc
mov
inc
call
mov
lahf
add
ds
jbe
je
mov
jne
test
dec
cltd
add
into
pop
insl
ret
add
loop
aas
data16
cmp
jp
lret
cmp
or
jne
xor
pop
mov
xor
mov
in
pop
sbb
and
and
and
and
ja
dec
dec
movsl
andb
jmp
stc
jg
notb
das
scas
fildl
mov
jns
lea
clc
or
je
clc
xchg
iret
out
imul
fwait
inc
pop
xor
pop
cmp
sbb
push
lahf
push
sub
sbb
push
test
movsl
mov
cmp
push
out
out
sbb
fdivl
inc
push
js
push
mov
pop
or
sub
mov
jmp
ljmp
pushf
ss
add
out
cmpsl
adc
dec
pop
pop
push
pop
lret
dec
ror
sub
add
push
stos
xor
lods
ret
ret
ss
les
je
sub
popf
mov
sti
movq
mov
sti
shl
mov
add
add
add
xchg
loope
ljmp
icebp
iret
out
mov
or
push
xorb
inc
push
repz
rcrb
lahf
lret
pop
xchg
shl
or
adc
pop
dec
ja
test
adc
xor
sahf
insl
jno
sbbl
jo
pop
xchg
fisubl
imulb
pop
popf
lret
cmp
aad
and
call
jecxz
cmpsb
psrlw
ljmp
shl
lds
aam
jns
rolb
out
add
test
add
arpl
mov
sbb
sarb
jno
push
dec
scas
insb
push
iret
mov
outsl
add
jno
ret
add
add
add
add
add
add
addl
mov
popf
insl
and
rcrb
lods
or
push
mov
scas
stos
scas
scas
and
or
push
fsub
enterw
push
movsb
xor
sbb
lods
add
sahf
pop
mov
cmp
and
rolb
xchg
push
cmp
daa
jl
xchg
je
cld
imul
leave
fisttps
add
add
add
add
add
inc
imul
cmpsl
xchg
or
xchg
xor
mov
mov
call
add
iret
mov
push
mov
or
stos
cwtd
mov
mov
stc
cmp
stc
mov
sub
ljmp
aam
out
sub
mov
cmpsb
inc
sub
sbb
add
add
add
add
add
add
dec
cmp
imul
in
stos
dec
stos
enter
incl
incl
incl
incl
incl
dec
sarl
jne
test
lret
sub
sbb
sti
cmp
pushf
jmp
mov
sbb
cs
fcomi
xor
dec
xor
inc
negl
mov
sbb
jl
add
add
add
add
add
add
add
lock
data16
push
lods
sbb
negb
repz
into
pop
enter
fs
stos
adc
insb
and
pop
pop
sub
test
cmp
cs
ss
or
add
aas
movsb
mov
scas
jns
js
jnp
cli
or
add
jl
mov
ret
jecxz
or
fdivl
cmp
jle
and
sti
enter
sti
orl
pop
jle
dec
add
add
dec
js
jno
push
and
and
jne
sub
or
lock
in
pop
test
push
out
add
add
add
cmp
add
in
cmpsl
cmp
jb
xchg
divb
ret
fdivrp
inc
dec
pushf
add
add
add
add
add
add
add
mov
push
inc
mov
jmp
or
mov
lcall
jp
jb
hlt
add
inc
jp
insl
imul
push
cmpsl
bound
lret
or
mov
push
sbb
xchg
loope
scas
inc
stc
in
fdivl
loop
sbb
inc
subb
mov
inc
xchg
jl
sub
cmp
sbbl
sbb
jge
xor
rdpmc
xchg
jb
imul
nop
add
repz
stos
sbb
mov
int
mov
scas
inc
sbb
lea
mov
adc
bound
scas
lea
shrb
decb
sub
insl
jo
dec
inc
xchg
fnsave
sarb
jnp
xchg
adc
lods
fnstcw
or
push
lret
jle
jmp
movsb
movsb
jns
or
mov
rorl
dec
insb
mov
push
outsb
and
mov
imulb
cmp
mov
dec
mov
or
add
add
add
add
add
add
pop
xchg
neg
or
xlat
or
sbb
popf
and
sbb
xorb
in
sti
and
adc
into
xchg
fs
xor
jo
or
mov
mov
rcrb
or
mov
cmp
adc
lahf
imul
or
pop
cmpsb
xchg
sub
shrl
jns
push
sbb
pushf
pop
or
and
sub
pop
pusha
add
add
add
cmpsb
xlat
lods
and
mov
xchg
or
ss
lretw
aas
jnp
push
jmp
lcall
sbb
dec
jnp
shr
ficoml
sbb
or
xlat
mov
bound
pop
lcall
popf
int
xor
jl
pop
lret
inc
frstor
movsb
out
adcb
dec
sbb
lea
out
adc
xchg
cld
push
out
add
add
xor
dec
fisubl
or
push
or
mov
sarb
or
dec
xchg
mov
or
xchg
cmp
pop
sbb
xor
sub
les
out
call
loopne
aad
mov
iret
popf
cmp
ficoms
push
dec
mov
movsl
inc
inc
lret
in
jb
push
sub
ja
pop
cmp
int
movsb
outsl
cmpsb
sub
fstpt
or
jp
or
pop
sbb
pop
pop
or
jl
test
sbb
das
aas
mov
jnp
in
je
mov
fdivl
jbe
fs
in
scas
lcall
pop
xor
fildl
int3
add
test
jle
es
push
dec
or
sbb
or
test
sbb
mov
iret
jl
mov
pop
cltd
dec
pop
lahf
mov
out
std
shr
and
push
jle
ds
mov
icebp
incb
int3
add
add
das
loope
xchg
or
test
jne
lahf
pop
dec
mov
int3
push
lods
mov
test
loope
sub
aaa
bswap
sbb
mov
xor
inc
pop
shll
xor
jo
mov
mov
push
out
out
sub
xor
scas
fs
mov
imul
add
out
jle
pop
jno
sbb
stos
stos
cmp
loope
xchg
mov
popf
cmc
push
subb
xchg
xlat
fnstenv
out
add
add
add
add
ljmp
movsl
stos
enter
jp
js
cwtl
cmpsl
cmp
fldl
popa
jle
add
xchg
daa
cmp
or
fwait
xchg
xor
push
sub
cld
sub
loope
or
out
jae
inc
xor
sbb
push
dec
stos
inc
push
mov
and
adc
ds
cld
dec
insl
mov
xlat
inc
adc
mov
pop
aaa
pop
pop
cwtl
aas
push
fildll
pop
scas
into
mov
sbb
xor
std
mov
dec
mul
jge
fwait
divb
les
je
popw
add
xchg
push
jmp
cwtl
lods
loopne
cli
lea
int3
add
add
add
add
add
add
dec
sub
or
mov
mov
mov
push
xor
outsb
mov
data16
push
ss
xlat
popf
xor
ret
roll
int3
add
pop
xchg
xor
and
pop
jp
pop
dec
mov
icebp
outsl
cmp
ficoms
adc
inc
in
dec
cmp
mov
fimuls
es
adc
mov
stos
lret
loop
xor
scas
dec
iret
pop
mov
les
pushf
and
mov
out
cltd
or
mov
push
xchg
jno
push
insb
adc
scas
pop
out
cltd
rcr
mov
data16
add
data16
jmp
jmp
ds
and
sbb
imul
shlb
divb
repz
aam
in
or
mov
pop
dec
push
push
and
out
mov
ret
js
fcompl
sub
dec
je
sti
aas
insb
add
and
and
and
and
mov
mov
insl
sub
daa
pop
lods
dec
arpl
adc
push
movsb
hlt
leave
sahf
jl
adc
lcall
and
and
and
or
sbb
xchg
cmp
icebp
sub
jp
dec
stc
xor
and
xchg
cmpl
call
xchg
push
lahf
add
stos
bound
pop
xchg
jns
int
push
inc
fidivs
fiadds
fs
stos
push
push
outsb
out
les
popf
xor
sahf
xlat
mov
into
movsb
jae
lret
lret
or
jns
fs
add
add
add
add
xor
xchg
add
and
test
inc
xor
arpl
mov
adc
or
pmulhw
insb
mov
push
jnp
xchg
cmc
cmp
cmp
or
xchg
cwtl
fsubrs
les
sbb
outsb
dec
add
add
add
add
aad
sbb
adc
dec
subb
sub
push
repz
sti
mov
sbb
inc
test
sbb
jno
mov
cmp
call
push
pop
push
adc
andl
movsl
testl
mov
push
stc
push
leave
xchg
adc
icebp
mov
dec
icebp
add
cmc
mov
insl
inc
push
push
sbb
imul
push
jae
daa
dec
fs
mov
arpl
sub
aad
push
push
fistpl
push
js
sub
xlat
insb
fdivrs
push
adc
mov
add
lods
incl
jecxz
and
imul
pusha
aas
test
test
adc
xchg
dec
in
ret
es
cmp
mov
push
repnz
push
jo
test
cli
inc
rclb
es
push
and
call
mov
out
nop
and
dec
mov
into
dec
dec
push
push
xor
jae
push
jl
push
inc
aas
aas
mov
mov
sub
lds
mov
into
mov
outsb
xor
and
and
and
out
inc
and
jo
dec
popf
mov
fwait
popf
xrelease
icebp
scas
xchg
negb
push
les
outsb
arpl
sbb
jnp
into
in
jle
jge
dec
dec
cld
push
cld
jne
jle
cli
jnp
outsl
mov
inc
add
add
add
add
xchg
loop
sbb
repnz
cmpb
xchg
mov
mov
dec
cmp
jnp
mov
cmp
pop
inc
mov
fnstenv
and
pop
cli
into
jno
push
std
inc
pop
xlat
cmp
and
jecxz
push
imul
int3
add
add
xchg
aaa
xrelease
dec
sbb
and
nop
jg
sub
inc
xor
inc
lcall
lret
popa
mov
jle
or
fdivrl
push
ss
push
mov
xor
sub
sbb
lea
clc
mov
out
out
mov
jne
mov
les
aaa
pusha
es
pop
icebp
faddl
xchg
dec
jbe
push
mov
add
test
push
gs
adc
mov
notb
jns
mov
scas
nop
aaa
jp
mov
push
and
movsl
pop
mov
or
adc
pusha
inc
insl
sbb
scas
scas
movsl
mov
mov
les
ja
inc
push
lret
popf
mov
sub
out
ret
rcrl
or
sub
insl
sub
outsb
pop
negb
clc
pop
mov
mov
pop
out
mov
sbb
inc
and
cmp
imul
out
mov
mov
or
sarl
add
add
mov
jnp
mov
cld
lahf
fisubs
in
pop
sub
push
or
mov
shl
jno
xchg
add
and
mov
icebp
inc
insb
mov
dec
mull
xor
andb
jmp
lods
stos
mov
out
pop
cmp
std
test
lahf
cmp
loop
jae
or
lds
cmp
cld
or
push
fsubrs
add
or
subl
adc
es
nop
ljmp
mov
inc
ds
add
add
add
add
add
add
add
push
mov
mov
movsl
inc
imul
aaa
or
cmpsl
insl
push
pusha
jnp
jg
addr16
mov
hlt
test
mov
and
cmpsl
cwtl
or
push
jg
fadds
shr
jl
adc
test
arpl
sbb
sbb
adcb
mov
imul
aaa
and
mov
add
aam
negb
cmp
pop
subb
cmp
ret
in
daa
mulb
movsl
pop
xchg
dec
sbb
mov
push
push
fs
push
hlt
add
clc
js
int
decl
out
or
pop
movsb
fisttpll
das
outsb
lahf
mov
jne
lods
xorl
incl
cmpl
repnz
jle
dec
ret
pop
nop
mov
fdivrs
jmp
jmp
scas
mov
gs
cmp
mov
fwait
sar
dec
or
jp
mov
dec
pop
xor
cmp
push
xchg
arpl
imul
cmc
dec
shrl
dec
add
add
add
add
add
add
add
or
and
repz
stos
pop
repnz
jg
int
sub
inc
jmp
flds
mov
dec
fldenv
mov
aad
dec
and
mov
add
add
add
add
cmp
movl
in
add
pop
mov
add
outsl
js
fs
arpl
add
pop
gs
imul
jb
add
push
add
data16
data16
jae
add
add
add
call
inc
add
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
ljmp
dec
inc
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
in
and
add
pusha
add
andb
add
add
xchg
pusha
add
cwtl
and
add
add
pop
and
add
xor
add
sbb
add
cmp
add
dec
and
add
add
insb
and
add
add
mov
add
sahf
and
add
add
enter
and
add
and
add
and
add
add
and
add
and
add
add
data16
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
mulb
add
out
add
fsubl
add
int3
and
add
add
add
add
mov
inc
gs
jb
imul
imul
inc
outsl
jb
popa
je
gs
popa
addr16
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
popa
add
jne
push
jb
outsb
je
jb
push
add
inc
gs
outsl
bound
sbb
inc
insb
outsl
jae
push
jb
outsb
je
jb
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
dec
jo
outsb
push
jb
outsb
je
jb
add
push
dec
dec
push
push
dec
dec
dec
cs
push
push
add
mov
je
jb
arpl
jae
pop
add
insl
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
push
add
popa
jo
jb
add
adc
dec
gs
jo
insb
insb
outsl
arpl
jg
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
push
je
jb
jne
dec
outsb
outsw
push
add
add
je
gs
imul
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
inc
popa
fs
jb
je
push
je
add
push
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
testl
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
je
dec
popa
outsb
fs
add
add
je
imul
mov
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
insb
push
outsb
ja
outsb
add
gs
imul
je
outsl
fs
gs
imul
add
mov
push
je
imul
inc
add
mov
push
je
imul
push
add
mov
push
jb
arpl
fs
jae
add
push
add
fs
imul
dec
adc
add
add
fidivs
jecxz
inc
out
pop
test
cmpsl
out
jmp
xchg
mov
sub
addb
xor
push
cltd
mov
pusha
mov
push
xchg
mov
aaa
std
imul
sbb
cmpsl
mov
add
jo
adc
adc
in
dec
aaa
sub
pop
fwait
in
stc
cmpsb
fxch
lcall
shl
pop
js
sub
push
mov
testb
pop
sarb
add
test
enter
mov
pop
pop
and
test
and
or
add
test
shrb
cld
lods
mov
fdivrl
pop
gs
sahf
outsb
push
fbstp
adc
push
adc
ds
dec
lret
lods
cmp
push
mov
sub
popf
xor
aam
pop
daa
sub
xor
or
fldcw
movsl
cs
push
fnstcw
out
mov
pop
mov
xchg
xor
sti
imul
add
scas
cmpsl
or
dec
dec
sub
test
sub
dec
cld
xor
imul
aam
sahf
mov
repz
xor
sub
daa
loop
in
xlat
mov
adc
jbe
mov
adc
lods
out
test
jp
scas
fisubl
and
jge
mov
sub
inc
dec
shlb
icebp
push
push
cmp
orl
loop
out
in
pushf
mov
xchg
int3
ss
dec
jbe
inc
clc
pop
add
sti
cmp
enter
imul
cmpsl
mov
fsubs
fisttpll
fisttpll
mov
incb
xchg
mov
sahf
cmp
aad
sub
dec
pop
mov
js
in
jnp
lret
jo
outsl
in
pop
js
push
xor
mov
imul
dec
mov
jl
imul
addb
andb
mov
mov
cmp
roll
je
cwtl
jae
enter
add
xchg
inc
mov
inc
xchg
jae
mov
xor
push
div
mov
int3
inc
sub
out
lahf
jae
test
push
add
inc
xor
jne
cmp
inc
and
mov
add
test
mov
imul
or
pop
and
movb
push
cmp
jns
mov
clc
mov
aam
fsubs
subl
mov
xchg
js
lahf
out
loopne
push
adcb
cmp
xor
mov
push
push
xor
mov
testl
leave
push
jle
addr16
push
xchg
adc
lock
sti
push
lods
test
mull
or
ljmp
and
je
int
push
fisubl
stc
jae
adc
aam
xchg
inc
sub
dec
pushf
loope
adc
movsb
cmpb
je
inc
repz
ret
adc
incb
aaa
add
pop
cmpsl
or
cmp
or
push
pusha
push
arpl
pop
xchg
pushl
and
inc
test
ja
jnp
dec
cmp
inc
mov
or
imul
daa
daa
jno
xchg
xor
cmp
loope
dec
test
push
mov
test
push
jne
jmp
pop
adc
push
test
lods
mov
test
popa
inc
fstl
push
jno
aaa
inc
dec
mov
mov
dec
scas
add
mov
inc
fmul
std
pop
wrmsr
push
inc
jae
push
push
sbb
lcall
int3
jl
jbe
js
xor
and
push
pushf
stos
test
pushl
push
xchg
pop
xor
mov
push
or
add
and
int3
inc
jle
push
imul
mov
outsl
mov
fidivs
xchg
xchg
jle
jo
cli
sbbl
fldenv
inc
push
adc
cwtl
and
movb
lahf
fstpl
orl
pop
movsb
test
outsl
push
fidivrl
out
jne
int3
or
mov
mov
lds
xchg
inc
add
xchg
mov
leave
frstor
mov
mov
subps
push
or
fcoml
into
dec
xor
cmc
cmp
in
jno
inc
adcl
jns
mov
lahf
lret
inc
rcll
pop
jne
mov
jge
xchg
addl
and
iret
aad
jns
mov
js
nop
stos
cltd
jle
dec
jno
dec
pop
bound
test
stc
push
int3
jnp
sub
inc
lock
push
mov
pusha
or
iret
push
test
shrl
faddl
inc
enter
jb
and
shrb
and
idivl
clc
ljmp
not
push
push
xchg
mov
xchg
pop
mov
adc
hlt
xchg
jbe
sbbl
push
xor
clc
popf
xor
lods
cmpb
out
sarb
jnp
cli
jmp
push
test
mov
iret
dec
sub
jle
movsb
in
cmp
and
add
rcr
xor
mov
ja
inc
xor
nop
add
mov
stos
js
ret
roll
mov
add
dec
jae
adc
pusha
ja
int3
or
std
in
dec
fsubs
pop
or
sbb
cmc
ja
adc
ja
outsb
incl
xor
cmp
inc
insb
gs
push
adc
in
pop
mov
mov
cmp
pop
lahf
pushf
aaa
inc
flds
outsb
inc
mov
scas
jae
pop
test
outsb
push
jge
fcomps
stos
and
push
into
and
cmp
fsubrl
xchg
popa
dec
add
or
mov
inc
das
cld
std
test
mov
lods
push
or
pop
sub
repnz
jno
inc
xchg
js
int3
ljmp
xchg
jne
cmp
sbb
cli
js
push
xchg
test
or
ficomps
std
xchg
mov
cld
sbb
push
push
in
inc
mov
xor
pusha
add
mov
js
ja
fcoms
dec
leave
push
daa
inc
mov
push
rclb
iret
mov
push
lods
mov
dec
sbb
roll
xor
mov
pop
pop
and
cmp
std
cs
not
inc
add
ret
xchg
dec
dec
mov
enter
mov
sbb
adc
jecxz
jmp
out
sbb
lret
and
add
test
sub
sub
out
hlt
or
jbe
dec
ja
pusha
or
arpl
and
adc
dec
mov
rcll
pop
xor
cmp
popf
push
scas
pop
in
dec
mov
je
push
cwtl
xchg
and
test
hlt
stos
fcoml
clc
cltd
jae
std
lahf
and
or
mov
ss
or
xlat
push
inc
mov
sbbl
sbb
scas
xchg
mov
push
pop
xchg
js
out
mov
mov
nop
js
loop
xchg
bound
out
cmpsl
xchg
js
daa
jno
mov
push
fcompp
mov
aas
out
sbb
push
xchg
shrl
aad
cmpsl
add
std
pop
lds
push
xchg
inc
add
into
mov
mov
out
js
arpl
pop
int
subl
mov
cmp
adcl
cmp
call
mov
cli
add
add
add
fcomp
test
fcoms
inc
inc
mov
push
jl
pushf
jns
imul
dec
jns
jecxz
adc
lods
sub
jbe
imul
adc
ss
stc
test
inc
or
addr16
xor
insl
hlt
ds
pop
pushf
sbb
push
mov
push
es
cmpsb
fldcw
mov
and
ss
sub
xor
aam
arpl
push
inc
mov
roll
adc
cmp
or
xchg
stc
mov
imul
sbb
mov
push
xor
fdivl
fstl
sub
mov
push
xchg
add
add
test
das
push
lret
lock
sub
shlb
push
call
mov
adc
push
mov
in
lcall
in
addl
aam
mov
xchg
aas
sub
js
pop
int
ret
and
ficomps
inc
jo
cld
sbb
je
hlt
push
rcl
fistpl
lea
shlb
adc
cwtl
ss
pushf
inc
sbb
push
jmp
sbb
jmp
sbb
cmp
jmp
cmp
incl
incl
incl
incl
lcall
and
push
nop
shl
popa
iret
sub
data16
pop
add
add
add
add
mov
sysret
sti
out
xchg
les
dec
jmp
jno
jo
addr16
movsb
out
inc
inc
sub
mov
pop
mov
outsl
mov
cmpsl
xor
popl
dec
sbb
mov
ljmp
test
pop
lahf
inc
mov
fcomi
mov
jmp
pop
ret
mov
outsb
xor
add
lods
and
cli
adcb
jae
in
and
inc
lret
cmp
in
testl
stos
jg
sbb
jle
ret
cmp
inc
push
sbb
cmc
jae
fsubrs
imul
dec
in
cli
push
mov
mov
pop
xor
or
cmp
push
mov
in
lea
pop
out
movb
push
loopne
mov
push
push
fcmovbe
push
sub
xbegin
lret
add
pushf
adc
mov
adc
ror
sbb
inc
arpl
cld
enter
mov
jg
rcr
mov
add
add
add
outsb
sbb
add
shrb
ss
ds
test
cmpsl
mov
xchg
inc
dec
sbb
movsb
xor
out
fdivrp
pop
jbe
cmp
das
push
cmp
dec
mov
bnd
pusha
push
outsb
ja
cmc
or
jo
cmp
dec
sub
sbb
mov
pusha
inc
xor
insl
xor
adc
dec
xchg
push
adc
repnz
pop
xchg
or
loop
sbb
jl
outsb
out
adcb
push
jmp
cld
stos
mov
or
or
dec
sbb
test
insl
ja
sbb
js
fld
les
push
push
test
jecxz
lahf
or
add
add
add
adc
ljmp
mov
jl
in
adc
incb
add
scas
daa
adc
push
adc
lret
popf
cld
into
bound
push
call
add
add
add
add
mov
or
hlt
addb
sbb
add
aam
fsubs
jle
sbb
add
push
mov
and
pop
jae
out
mov
cld
pop
test
in
sub
or
bound
mov
mov
push
arpl
out
mov
js
pop
or
adc
jg
aam
mov
cmp
jge
mov
add
add
add
icebp
push
add
call
or
iret
mov
jge
sbb
or
loop
mov
adc
in
and
cmp
pop
or
rorb
push
inc
mov
xchg
xchg
mov
stos
and
orb
and
cld
fdivrl
clc
rorl
lods
jae
pop
aam
adc
push
xchg
pop
addb
pushf
movhps
outsb
in
lock
rcll
inc
mov
pop
pop
and
jae
in
add
aas
adc
mov
ss
pop
mov
sub
inc
push
insb
mov
push
sti
jbe
fld
and
pop
jecxz
pop
nop
in
mov
lods
mov
or
stc
push
and
es
add
add
add
add
add
add
jb
jb
jp
daa
push
inc
push
sahf
int3
pop
inc
pop
ficompl
or
imul
por
jae
add
pop
ja
fs
stos
pop
pop
mov
sbb
jle
test
shll
loope
xorl
jns
and
into
test
mov
jmp
add
add
add
add
add
add
out
cli
mov
aaa
mov
or
mov
xchg
sub
int
cmpb
mov
mov
in
lock
inc
sahf
popf
push
clc
jmp
test
mov
aam
jno
cltd
sub
mov
ficoms
xlat
sub
aad
lcall
arpl
lcall
loope
int3
add
add
fstpl
mov
jae
int
cmp
cmpsl
xchg
pop
notl
sub
add
rcrl
out
and
icebp
add
iret
popa
pop
stc
loop
and
xchg
loop
jp
test
add
add
add
add
push
push
scas
insl
jns
xor
cmc
add
mov
test
lds
test
sbb
adc
jae
xchg
mov
es
arpl
pop
mov
inc
sbb
mov
js
pop
test
sbb
sub
adc
push
roll
incl
incl
incl
incl
incl
incl
mov
xchg
sub
lcall
xchg
outsl
lock
add
arpl
in
repnz
inc
js
sbb
ja
std
mov
xchg
and
push
sub
stc
inc
es
and
xorb
insl
into
mov
mov
std
and
inc
cmp
insl
popa
jmp
mov
ds
jmp
bound
andb
stos
mov
sar
adc
les
test
lds
mov
jno
and
cmpsb
sahf
in
imul
int
mov
add
xor
pop
sub
add
repnz
jb
lahf
lds
fidivl
mov
mov
xor
int3
andl
and
and
and
pop
lock
cmp
in
push
sbb
pushf
loopne
and
lods
mov
lods
jge
xor
int3
call
inc
mov
pushf
jmp
movsl
dec
pop
sub
sbb
lret
dec
mov
xchg
push
lods
stos
test
stos
sub
pushf
xor
pop
imul
sub
in
inc
cmp
sbb
jno
lea
lock
pusha
dec
lds
pop
xchg
mov
pop
daa
inc
push
jo
and
xchg
in
inc
es
test
adc
mov
or
stos
pop
add
add
add
add
add
mov
mov
ja
add
imul
or
cwtl
lds
stc
orl
jecxz
mov
pusha
ljmp
movsb
in
roll
inc
cmc
push
pushf
in
dec
cmp
fcomps
xchg
adc
pop
aam
imul
lea
shlb
popa
push
xchg
out
std
dec
jbe
jo
aaa
mov
out
call
jp
les
mov
cmpsb
cmp
mov
repz
fwait
rorb
and
and
and
and
and
and
and
pop
mov
hlt
sub
and
sbb
inc
pop
cmp
or
pop
in
fisttpll
mov
and
sub
sub
scas
movsl
add
lret
inc
call
cmpsl
jno
shll
in
in
add
inc
fisubl
pop
mov
pop
mov
cmp
mov
push
push
and
test
pop
fstl
xlat
daa
sub
scas
popa
dec
out
pop
jmp
cli
xchg
xor
pop
xchg
fnstenv
repz
adc
xchg
cmpsb
cmp
ficoml
in
imul
cmpsl
or
jge
mov
dec
pushf
push
enter
gs
ds
pusha
mov
add
mov
mov
mov
ret
jmp
and
and
and
and
and
and
scas
push
imul
push
mov
inc
stos
cs
pop
add
jmp
mov
sub
mov
sub
pushf
out
mov
mov
cs
test
jb
or
xlat
notl
and
mov
int3
add
add
loopne
jo
insl
mov
test
popf
ret
push
inc
js
arpl
xor
inc
xchg
fsubp
push
inc
stc
inc
icebp
aam
sbbl
lods
aas
jno
out
add
lret
sub
push
ja
push
push
inc
push
inc
sub
enter
cmpsb
xchg
push
mov
pop
outsl
sbb
mov
lock
enter
test
mov
push
shl
jno
outsb
scas
outsb
hlt
mov
xchg
push
int
imul
inc
sbb
mov
mov
ss
cltd
inc
mov
add
aaa
push
arpl
add
add
sbb
test
jmp
add
shr
add
push
sti
and
loope
mov
pop
sub
punpcklbw
adc
clc
nop
or
xchg
dec
cmpsb
mov
add
movsb
rclb
aaa
mov
pop
sub
cmp
adc
loopne
xchg
loopne
xor
jl
cmp
jno
add
sub
out
adc
daa
shll
insb
in
dec
lock
add
add
cld
sub
or
loope
jp
dec
pop
call
arpl
insb
sub
add
pop
test
ljmp
dec
ljmp
dec
sub
loope
push
xor
test
push
add
add
add
push
xchg
xchg
hlt
lods
hlt
mov
and
testl
adc
in
mov
or
pop
ret
xchg
leave
int
jle
lods
stos
adc
inc
or
insl
sbb
dec
pop
jmp
mov
outsl
addr16
push
or
push
mov
mov
int3
add
add
add
add
mov
dec
mov
push
cltd
sahf
pusha
fisttpll
jbe
jne
lfs
add
add
add
add
push
mov
fistps
cmp
jne
test
iret
ret
mov
movsb
sbb
jo
sub
shrl
ds
outsl
dec
mov
push
pop
push
insb
xchg
inc
inc
or
xchg
pop
jge
lods
or
lcall
sbb
xor
cli
and
inc
push
clc
push
pop
xor
push
and
popa
and
push
sbb
mov
outsl
imul
int3
mov
sub
xor
add
mov
int3
clc
or
mov
lahf
int
les
xchg
cli
scas
cmp
cwtl
iret
xchg
add
add
add
add
add
add
add
mov
lret
xor
add
add
add
jp
fwait
pop
fnstcw
xchg
mov
or
push
inc
test
pop
lcall
repnz
mov
jp
mov
xor
and
in
cmp
icebp
push
and
mov
mov
dec
or
sub
inc
mov
xchg
add
add
mov
pop
mov
cmp
pop
outsl
adc
pop
add
bound
xchg
das
fnstenv
add
xor
fcoml
add
jmp
dec
bound
in
cmp
orl
jne
dec
mov
lret
jo
mov
cmp
aas
pop
fwait
xor
pop
ficomps
test
dec
subb
popf
jecxz
xor
fcmovnu
sbb
incl
incl
incl
push
mov
orl
test
out
aam
in
xorb
repnz
mov
push
add
add
add
add
mov
pop
mov
aaa
repz
orb
xor
push
ficomps
xchg
ret
sbb
dec
leave
mov
hlt
fnstsw
lahf
lret
cmpsb
loopne
pop
push
ja
repnz
adc
mov
sarb
aas
fcompl
mov
mov
dec
scas
jns
insl
rcll
push
cmpsb
dec
jno
xchg
mov
pop
sbb
mov
pop
adc
nop
add
add
jp
inc
jecxz
imul
mov
mov
jmp
pushf
cs
lds
mov
adc
movsl
nop
lahf
adc
mov
xor
or
sub
dec
out
xchg
cmp
mov
jle
rclb
fwait
mov
ljmp
cltd
loopne
repnz
sbb
sti
stos
lods
mov
jp
inc
and
adc
ficompl
outsl
int3
sahf
sub
scas
sbb
sub
sub
pushf
jns
mov
rcrl
jge
jle
sub
inc
mov
add
add
add
add
add
add
add
sub
pop
adc
ljmp
test
sbb
sub
mov
jg
loop
bound
push
push
adcl
push
addr16
xchg
imul
jg
mov
aad
cmc
popf
xlat
hlt
repz
test
lahf
jge
xchg
add
dec
fbstp
mov
xchg
in
nop
add
clc
dec
subb
mov
addl
repz
and
jmp
or
ret
mov
fwait
sbb
cli
cmp
arpl
add
fisttpl
pop
ss
jbe
mov
jae
popf
or
and
sbb
int
xchg
pop
jbe
adc
jle
out
mov
mov
mov
ss
jns
mov
jnp
dec
xor
test
mov
jg
lea
lea
loop
call
push
add
jmp
outsb
add
add
add
add
shl
mov
sarl
dec
into
test
mov
jno
out
mov
mov
xchg
pop
aas
push
loope
imul
mov
jns
cmc
mov
push
test
push
cltd
mov
add
mov
int
push
rolb
dec
lret
outsl
adc
push
add
add
dec
pop
xchg
sbb
push
jg
jno
and
sub
lcall
fs
adc
jp
inc
mov
ror
ficomps
js
pop
lcall
cs
daa
arpl
cmp
dec
jne
lcall
enter
cvtdq2ps
pop
mov
fadds
movsl
out
fnstsw
andl
jb
out
push
mov
sahf
dec
cltd
and
pop
orl
inc
cmpsb
aaa
add
mov
jnp
cmpsl
cs
repnz
cmp
add
add
add
lods
or
cmpsb
lds
rcl
ljmp
ss
pop
adc
add
add
out
sbbl
daa
push
xor
loope
jge
in
jl
mov
push
mov
ret
lahf
xlat
testl
movzwl
inc
jl
push
lods
shlb
repz
push
xchg
jno
pusha
outsl
lcall
scas
cmp
into
pop
mov
xor
mov
in
in
out
cltd
hlt
sub
inc
xor
movsl
cwtl
jl
mov
xchg
pushf
cmp
and
and
and
and
pusha
out
jle
hlt
ret
adc
inc
leave
dec
repnz
pop
cli
sti
cmp
jnp
cs
or
sbb
js
mov
call
aaa
pop
loop
mov
jmp
testb
mov
mov
lahf
and
lret
push
xor
push
pushf
mov
out
pop
mov
push
mov
lock
push
mov
into
and
cmp
cltd
mov
jl
sysenter
pop
outsb
jg
lock
xor
movsb
shrl
in
loopne
cltd
iret
xor
xor
mov
aas
clc
sub
incl
incl
incl
incl
incl
incl
decl
push
xchg
fistl
clc
jmp
insb
mov
dec
jl
push
subl
pop
sbb
dec
mov
loop
cmpsl
push
pop
push
dec
inc
inc
lods
mov
addr16
int3
push
mov
dec
inc
cmp
pop
inc
mov
xchg
dec
push
adc
jl
loopne
mov
pop
jp,pn
stc
cmp
lods
std
fidivrs
xchg
xchg
mov
imul
mov
icebp
movsb
xor
add
add
jnp
subl
mov
pop
imul
fidivl
outsb
mov
sbb
xor
lcall
aaa
fwait
lea
add
add
add
into
addr16
or
or
add
pop
jle
mov
mov
ds
inc
int
push
outsb
mov
sbb
sub
add
dec
xchg
xchg
push
out
inc
jo
ss
and
dec
imull
test
cwtl
cmp
sarb
dec
sub
test
or
out
mov
add
adc
lock
and
out
sub
arpl
push
inc
imul
mov
das
in
mov
jg
push
arpl
or
cmp
and
mov
or
ljmp
sub
sub
mov
jns
scas
mov
add
add
jnp
add
bound
jmp
jae
lock
lea
test
mov
movsl
xor
movl
iret
cltd
nop
cmc
mov
mov
loop
in
arpl
sbb
add
bound
push
rorb
inc
test
shll
jns
mov
mov
cmc
shll
pop
cli
add
add
push
cmpsl
les
icebp
mov
testl
mov
popf
ja
xchg
mov
addr16
xchg
mov
into
sub
and
int
fwait
lods
and
fistpll
pop
jge
add
add
mov
lea
pop
jecxz
and
cmp
inc
jl
mov
pop
mov
faddl
in
jns
cmp
push
in
xlat
pusha
mov
aas
dec
ret
jecxz
sub
inc
lods
das
sahf
pop
jp
cs
ja
dec
lahf
ljmp
xchg
or
sub
dec
or
cwtl
push
aas
xchg
jns
cmpsl
and
and
ret
cwtl
scas
ja
js
jecxz
push
or
mov
scas
jp
in
bound
cmp
orl
xor
jl
das
adc
jno
movsb
dec
pop
adc
cmp
stos
daa
add
shrl
push
fisubrs
push
or
dec
mov
xchg
sti
out
inc
add
add
add
add
add
add
xchg
dec
or
dec
or
btr
xor
lods
movsb
fwait
ret
cmpsb
fldt
or
pop
into
stc
jae
shlb
xchg
adc
push
scas
clc
sbb
call
push
call
jecxz
into
stc
add
add
add
add
pop
shrl
pushf
cmp
cld
mov
mov
mov
ja
loopne
jg
dec
fimuls
cs
adc
ss
jb
fisubl
jns
ljmp
scas
or
das
dec
or
pop
add
add
add
sub
nop
inc
mov
xor
mov
js
dec
mov
es
xchg
movsb
mov
inc
jp
adc
jle
insb
gs
test
test
int
push
mov
cmp
cmpw
pushf
add
sbb
xor
insb
jmp
aad
fsqrt
ljmp
addr16
scas
mov
int3
add
add
add
add
add
add
data16
arpl
les
push
xchg
push
test
dec
in
popa
add
subl
mov
jecxz
fwait
jl
push
scas
push
add
and
insb
jbe
adc
repnz
in
aas
movsb
pop
aam
add
add
add
add
add
add
add
fldenv
cmpsl
sbb
fs
gs
data16
insl
add
inc
and
mov
shr
sbb
xor
pop
add
adc
inc
cwtl
stc
pop
pop
gs
inc
pusha
cwtl
adc
ja
incl
cs
and
xchg
mov
jae
stc
jno
mov
pop
int
sti
scas
mov
outsb
xchg
fsub
or
rorb
or
xchg
in
repnz
push
paddq
enter
notl
xlat
fstpt
imul
xchg
out
ljmp
hlt
ficompl
mov
repnz
jae
cltd
jnp
xchg
inc
mov
add
xor
add
cmpsl
repnz
fdivl
fmul
nop
xchg
cmp
jbe
movsl
mov
ja
cmc
xor
jb
ljmp
lods
scas
popf
sub
neg
aam
into
hlt
add
pop
dec
rorl
andl
insl
push
add
add
add
add
mov
dec
test
mov
cmp
inc
insb
mov
lods
mov
in
or
rcrb
nop
add
add
sbb
jecxz
fcoml
inc
mov
inc
mov
js
cmp
pop
cmpsl
jge
dec
jne
ja
or
movsb
dec
shrl
hlt
cmp
mov
sub
sub
les
xchg
cmc
mov
fildll
xchg
lock
loope
push
inc
xchg
pushf
xor
aas
sbb
fsubs
inc
movsl
ret
addl
xor
inc
mov
push
int
pop
xchg
mov
sbb
and
push
enter
imul
into
sub
movlps
mov
add
add
add
add
add
add
pop
mov
bound
push
jecxz
enter
cli
mov
insb
push
sbb
ljmp
dec
mov
mov
add
out
movsl
push
ret
and
rcll
and
cs
in
jne
mov
je
sbb
push
hlt
fs
lahf
ficomps
out
inc
dec
add
enter
outsb
pop
or
jge
cmc
leave
aas
out
jmp
jns
mov
nop
pop
insl
sub
outsl
fwait
out
sbb
cs
xchg
sahf
gs
mov
and
repz
xor
test
xchg
lahf
outsl
fisttpll
sub
fisttpll
cli
add
mov
mov
mov
mov
fbstp
stc
or
pop
cmp
push
ret
ljmp
inc
movsl
push
sub
repz
add
add
add
mov
jl
adc
inc
add
lock
das
adc
cmpsl
jnp
hlt
mov
mov
xchg
push
stc
es
push
cmpsl
ss
cltd
mov
dec
add
aas
mov
dec
jae
inc
data16
enter
fwait
pop
sub
push
push
inc
lret
mov
jecxz
mov
loopne
mov
sbb
mov
ja
pop
mov
cmp
mov
jg
jno
test
bnd
ljmp
outsb
rcrl
xor
pop
push
xor
orb
pusha
mov
int
sbb
push
pop
push
sub
adc
ret
add
add
add
add
add
add
add
cmc
or
loope
push
hlt
movsl
rclb
jp
fsts
cwtl
sub
sbb
mov
jb
add
mov
daa
test
movsb
sbb
orl
bound
adc
mov
add
add
add
add
add
jle
jae
xor
jle
sbb
dec
mov
clc
or
jbe
dec
pop
xlat
mov
int
or
dec
inc
faddl
xchg
xchg
push
outsl
xor
pop
mov
mov
repnz
fstpl
jecxz
add
outsl
mov
jae
push
jg
sbb
xor
push
popa
jae
xchg
sub
nop
into
sub
stc
xchg
inc
insb
mov
test
and
and
and
and
and
xchg
ret
dec
fildl
adc
mov
adc
jne
adc
test
test
xchg
dec
sub
add
and
inc
out
pusha
inc
fnstenv
lods
scas
out
sbb
out
test
sbb
movl
sub
icebp
jo
cmp
pop
out
cmp
mulb
leave
add
xor
lock
adc
sbb
clc
sbb
mov
fldenv
add
add
mov
nop
iret
jns
pushf
mov
mov
pop
add
js
mov
or
addr16
xchg
repz
pop
iret
lea
fdivrp
cmp
popf
xor
push
xor
adc
dec
and
pop
adc
das
stc
push
cmpl
pushf
call
jae
and
incl
incl
incl
incl
rclb
add
stos
mov
out
inc
outsl
stc
sbb
fldcw
lea
mov
jle
inc
dec
popa
pop
xor
movl
lock
cmp
sub
incl
incl
incl
incl
incl
incl
and
clc
clc
push
pushf
cmp
and
xchg
xchg
das
rol
mov
push
lds
push
pushf
inc
rcrb
adc
insb
adc
outsl
ror
sbb
cmp
dec
xchg
add
add
add
add
add
adc
lret
pushf
ret
cld
pop
push
inc
cli
dec
bound
aas
xchg
jmp
pushf
loope
fwait
aas
xor
test
jmp
push
inc
and
lds
xor
ret
clc
jmp
cmpb
add
add
add
sti
sbb
inc
push
adc
aad
sbb
sub
or
jmp
cs
xor
xchg
jne
pusha
cltd
cmp
xchg
adc
fdivr
sbb
ja
lahf
mov
mov
adc
ss
mov
jne
mov
test
mov
je
xor
iret
call
mov
outsb
mov
movsb
jecxz
lcall
cs
inc
stos
out
addb
mov
jg
int
add
add
adc
inc
fwait
mov
xchg
call
push
push
adc
cmp
scas
popl
cmp
jae
add
dec
int3
out
mov
clc
sbb
cli
insl
rcrl
sub
stos
ljmp
mov
divb
movsb
inc
inc
das
ficoml
pop
xchg
mov
in
xchg
movsl
xchg
iret
pop
jne
cli
add
lret
je
imul
sub
jnp
lahf
mov
jp
jg
or
mov
push
les
push
inc
jmp
push
int3
lock
lock
rorb
or
insb
test
cwtl
add
add
add
add
add
add
les
mov
and
ljmp
insb
add
sbb
dec
roll
test
mov
mov
cmc
or
in
dec
mov
push
call
dec
mov
sahf
mov
add
jb
ja
stc
lret
pop
ljmp
xchg
jle
das
push
jecxz
jmp
fidivrl
mov
jp
sub
mov
test
aas
cmp
jl
inc
je
iret
add
aad
xchg
ja
adc
repz
xchg
ss
sbb
movsl
pop
in
xchg
jne
push
pop
insb
add
add
add
add
add
add
jb
pop
or
aad
outsl
ret
je
sub
les
in
push
add
add
cs
xchg
xor
push
dec
std
gs
adc
in
lods
jle
or
ja
xchg
cltd
fmulp
jae
inc
fs
aam
mov
cs
enter
imul
les
sub
andb
ret
cmp
sub
mov
movsl
sarb
pushf
mov
out
mov
mov
jb
movsb
stos
mov
inc
repz
pop
clc
andb
mov
jbe
and
xchg
imul
nop
mov
fnstcw
mov
pop
test
lods
inc
and
or
bswap
ds
xchg
cmpsl
nop
add
add
or
fucomip
cmp
test
out
shll
mov
scas
data16
mov
add
es
cld
outsb
addr16
out
add
sub
push
aas
push
aam
iret
insb
xor
in
cmp
inc
sub
xchg
or
push
mov
jge
enter
sbb
hlt
lods
arpl
mov
push
jbe
loopne
push
mov
addl
add
and
inc
insl
push
shr
stos
imull
enter
inc
test
mov
inc
hlt
xor
adc
adc
xlat
mov
cmp
xchg
add
sub
add
jl
sub
pop
mov
insl
insl
mov
sub
xor
sub
mov
cmp
jae
sub
icebp
and
shll
ret
icebp
insb
pop
inc
cmp
into
sahf
int
les
lods
nop
shrb
cmp
es
and
pop
icebp
push
jmp
pop
xlat
fcoms
mov
and
and
and
and
lds
cmpsb
or
xorl
ja
jge
adcl
ja
aam
jmp
out
repnz
test
roll
out
adc
mov
or
fxch
test
aad
shr
xor
imul
arpl
fisubl
lock
outsl
pushf
mov
add
nop
jnp
mov
push
inc
add
add
add
add
add
add
add
fistl
js
jne
shr
mov
dec
or
cmp
push
xor
rcrl
fadds
ret
jno
shl
stc
mov
pusha
fistps
movsb
cs
scas
cli
mov
push
icebp
ljmp
imul
bound
sahf
cmpb
cmp
jp
lods
cmp
jns
repz
mov
popl
bound
or
and
jmp
pop
xchg
xor
das
mov
mov
sbb
push
shrb
insl
arpl
sbb
push
mov
cmp
jg
push
sub
push
jbe
dec
add
adc
jno
cmc
pop
cwtl
js
movsb
out
inc
mov
nop
add
test
stc
mov
sti
movsb
pushf
outsl
xor
ret
xchg
dec
les
dec
xchg
jne
sub
imul
cmp
pop
mov
inc
aam
inc
pop
int3
inc
clc
cmp
or
add
pop
je
jg
sbb
stos
fstl
add
lea
and
fcmovne
mov
out
cmp
cmc
std
jne
adc
sti
mov
jae
add
cmp
lock
loope
sarl
dec
sub
and
and
leave
ss
xor
fcmovnu
mov
dec
in
cli
or
mov
jmp
dec
or
fmul
mov
xchg
rcrb
loopne
cli
test
adcl
pop
add
add
add
add
add
add
add
lcall
sub
insl
imull
xor
fstl
lcall
arpl
movsb
nop
cmpsb
stc
pop
cli
hlt
cmpps
popa
cmp
stos
test
mov
sahf
lea
sahf
mov
and
and
and
cmp
sti
hlt
add
out
out
bound
xor
in
mov
mov
push
cmp
mov
data16
cmp
mov
fbstp
adc
loopne
sbb
es
inc
imul
xor
rcll
das
mov
mov
xor
mov
and
adc
or
insb
sub
ds
inc
push
jno
fwait
mov
sub
ja
shrd
dec
daa
xchg
das
jbe
cmp
xor
mov
lcall
insb
insl
jl
out
in
push
pop
mov
popf
ss
jle
movsb
lods
aas
xor
jae
adc
mov
pop
incb
int3
jnp
int
outsb
outsl
out
mov
pop
pop
cmpsb
push
lcall
push
adcb
fcmovnu
add
cmp
sub
and
and
lea
sub
into
and
sahf
fbld
sar
mov
and
nop
add
add
add
push
imul
lods
add
in
fdiv
popf
lea
cwtl
xor
inc
call
push
cld
ja
pusha
jl
sub
out
dec
push
dec
nop
add
add
fmuls
mov
sbb
jg
test
mov
gs
fs
mov
push
xchg
jbe
test
pop
test
repnz
leave
out
inc
fldl
jns
jge
and
lods
sahf
pusha
std
ljmp
lret
mov
mov
inc
sub
sub
nop
mov
outsl
lds
popa
divb
push
lret
paddusw
mov
test
push
rclb
es
fildl
sub
pushf
mov
push
xlat
mov
and
sub
or
lds
xchg
rolb
mov
ja
jmp
bound
and
and
and
and
and
xor
fwait
in
sub
mov
xchg
outsl
sahf
ret
aas
ljmp
fxch
stos
out
inc
daa
push
fcom
movsl
out
popa
ja
or
aaa
dec
mov
les
mov
sbb
mov
xchg
scas
out
jl
lock
jle
clc
aad
daa
loope
rcl
push
jnp
aad
subb
add
xchg
aad
loope
xchg
pop
and
add
fisttpll
sbb
into
inc
mov
sub
mov
sbb
mov
and
and
and
and
or
mov
cmpsb
or
or
into
aad
cli
ja
push
arpl
sbb
or
mov
mov
jb
mov
mov
push
cmp
aad
ret
fstl
mov
int3
mov
rsm
outsl
ror
addr16
mov
aas
out
lock
mov
pop
mov
nop
fs
in
xchg
in
in
stos
shl
and
rolb
jg
dec
jo
into
cmp
jb
mov
rsqrtps
xchg
inc
adc
and
and
push
dec
rcrb
outsb
jge
pop
es
leave
xor
test
xor
and
ja
sub
mov
das
mov
loopne
std
dec
jbe
sbb
xchg
xlat
out
jl
dec
gs
inc
addr16
pop
hlt
loope
les
rorb
mov
xor
or
mov
movsb
mov
cwtl
scas
sbb
lahf
neg
sub
out
push
aas
test
out
cmp
sbb
jge
jo
xorb
test
pusha
insl
jge
loopne
int3
add
add
sbb
inc
mov
ret
std
push
pop
pop
je
lret
xchg
addr16
fdivs
lret
xor
psubusw
dec
mov
mov
ret
icebp
int
movups
mov
and
and
and
and
fdivs
xlat
xchg
jae
lods
inc
or
daa
jp
xchg
lds
and
xchg
fistps
fistpll
aas
pop
hlt
jnp
and
and
and
and
and
and
lret
dec
ss
aad
sbb
aad
add
cmp
cmp
out
sahf
fidivl
divl
sbb
adc
es
cmp
sti
sub
out
mov
and
mov
lock
rclb
dec
scas
popf
xchg
in
fcomps
inc
iret
int3
aaa
scas
pop
out
jns
clc
jmp
xlat
cli
test
in
divps
nop
jg
sbb
cmpsl
outsb
xor
in
mov
mull
aam
push
or
repnz
shrl
mov
pop
mov
jmp
arpl
ss
adc
or
shl
aaa
fsubrp
aam
xchg
jecxz
loop
and
sbb
add
add
add
add
add
add
adc
ja
das
cli
inc
ficoms
and
sbb
mov
repnz
xor
add
xlat
loopne
jbe
dec
pop
add
es
jb
add
add
add
add
mov
std
mov
and
push
out
aas
outsl
pop
orb
inc
cli
jno
in
jp
jl
lret
xor
dec
inc
and
inc
mov
out
sbb
popf
aam
cld
outsb
imul
sub
incl
incl
incl
incl
incl
and
ret
test
xor
and
and
and
and
and
and
cli
add
xchg
test
sbb
jo
xchg
jne,pn
bound
out
sub
add
add
arpl
hlt
pushf
sub
lods
nop
xchg
bound
lahf
cmp
mov
or
imul
fcoms
fcmovnu
test
push
sbb
imul
push
xor
mov
cmpl
pop
dec
in
xchg
add
and
and
and
and
push
stc
in
cmpl
outsb
jecxz
mov
fdivl
je
xor
pop
add
add
add
add
add
add
in
xor
outsl
mov
shrl
rcll
xchg
inc
lret
hlt
pusha
testb
enter
xchg
out
add
and
and
and
and
and
and
and
es
idivb
int3
jnp
enter
or
cmpsl
popa
pusha
mov
xchg
mov
dec
dec
lret
mov
cmp
scas
insl
mov
pop
rcl
test
jl
jo
inc
jle
jne
cmp
xor
dec
cwtd
adc
insl
call
testb
movsl
sbb
and
mov
xlat
fcomps
jecxz
mov
mov
pushf
int3
fnstenv
mov
outsb
inc
ljmp
push
cmp
mov
cmp
fsubp
test
sub
adcl
in
ret
push
push
gs
mov
pop
xchg
jp
imul
sbb
ds
int3
add
add
add
add
mov
mov
mov
mov
mov
bnd
lahf
mov
xor
sub
mov
pop
add
jbe
jbe
adc
scas
push
inc
adc
add
insb
lock
js
xchg
pop
dec
xor
fisttps
inc
jg
dec
in
fs
hlt
sbb
mov
xor
int3
add
add
add
test
aad
lahf
inc
stc
pop
dec
jno
push
push
testl
mov
lea
sbb
iret
es
inc
test
jb
dec
jecxz
cmp
xor
sbb
pop
hlt
inc
lods
adc
incl
incl
incl
incl
incl
sbb
and
mov
xchg
inc
lret
loopne
and
jg
bnd
fcom
lea
neg
addb
popf
pop
movsl
jmp
shlb
imul
or
lahf
test
mov
clc
cmpl
mov
add
add
add
add
add
add
pusha
jecxz
xchg
mov
jno
pop
lds
lds
cld
test
into
pop
lea
and
out
movsb
roll
js
push
inc
add
push
xor
sti
add
sub
xchg
xchg
popf
stc
test
dec
push
addl
jp
pushf
jp
fcompl
xchg
pop
sbb
sbbb
adc
cwtl
pop
push
out
sahf
xchg
add
xor
adc
loopne
sarb
test
jg
xchg
xor
sbb
insb
imulb
incl
incl
incl
mov
adc
push
cs
stos
lret
and
clc
inc
js
adc
outsl
leave
rcrb
inc
sti
jle
rol
push
sahf
ret
jp
addr16
cmpsl
mov
enter
inc
dec
cmp
loope
push
sbb
jo
bound
das
mov
fisttpl
adc
bound
or
pop
jb
cmpsb
mov
ret
sub
jecxz
xchg
jbe
and
mov
neg
std
cmpsl
mov
lea
movsl
sub
mov
and
add
add
add
add
add
add
lahf
test
bound
rcll
jge
xor
push
insb
cmp
dec
jle
dec
push
fadds
cmp
push
pop
gs
leave
clc
insb
mov
adc
in
inc
add
add
fsubrl
pop
fstpt
fsts
lret
add
jmp
jmp
test
ljmp
std
stos
test
rorl
add
adc
lret
aad
loopne
cld
iret
mov
jno
push
jecxz
jle
dec
cmpsl
xchg
hlt
xchg
xchg
dec
cmp
shll
fisubrl
cmpsl
cld
orb
outsb
mov
in
and
cmpsb
fisubrl
sar
cmp
movsl
leave
out
lods
mov
sub
pop
inc
jbe
add
mov
test
gs
fisubrl
pushf
lock
lds
arpl
xor
jmp
dec
les
int3
add
add
add
mov
and
adc
adc
add
mov
mov
sbb
jmp
pop
mov
cltd
inc
xor
push
jl
popa
fmulp
push
repz
sub
mov
movsb
aas
cmc
insl
push
cltd
fwait
cltd
dec
add
jae
ror
into
adcb
push
clc
in
and
rol
jmp
in
adc
push
sub
movsl
hlt
add
pusha
negb
loope
das
jbe
mov
and
cmp
or
add
pop
sti
aaa
popa
mov
cs
sar
mov
int
out
adc
sbb
xor
mov
add
pop
sub
cli
dec
adc
outsb
jl
inc
insb
or
aaa
xchg
pop
lds
sahf
mov
jns
jns
mov
mov
mov
into
push
inc
add
add
shl
out
mov
sub
into
add
out
int3
add
add
add
mov
add
lods
push
lods
jle
jmp
cmpsb
cli
sarl
testl
jp
ljmp
and
ljmp
or
cli
cmpsl
lret
jnp
cmp
mov
mov
int
cmp
sbb
jl
dec
ljmp
inc
in
and
loop
add
jg
jo
adc
cmp
jmp
ljmp
push
movsb
ljmp
sub
test
jmp
test
cmp
cmc
mov
in
sbb
addr16
js
cmp
sbb
mov
mov
pop
add
mov
lods
mov
xchg
xchg
jae
jl
push
daa
fnstsw
mov
add
add
add
add
add
add
push
add
int3
xchg
jo
xlat
xchg
inc
fldenv
pop
mov
mov
les
push
rorl
lds
sub
or
loop
xor
popa
stc
jle
push
lret
xchg
pop
push
add
add
add
add
add
add
and
dec
clc
ss
lahf
ja
push
jmp
sbb
add
ds
clc
int
jno
shlb
fildl
loopne
jge
rolb
scas
cli
imul
push
je
add
push
sbb
sbb
daa
xlat
mov
mov
imul
lock
adc
das
cld
mov
mov
add
add
add
add
add
add
add
jecxz
enter
in
push
ljmp
dec
cmp
sbb
dec
arpl
mov
push
push
sarb
mov
ret
std
add
sbb
add
pop
aam
cmp
mov
sbb
jmp
push
jns
and
imulb
jnp
ficomps
sub
repnz
xor
inc
dec
fdiv
inc
scas
popa
outsb
repnz
or
pop
cmpsl
or
dec
fucomip
cmp
pop
dec
shr
movsb
lods
mov
cmpsl
mov
loopne
je
add
and
add
addr16
mov
imul
inc
mov
or
ret
dec
mov
outsb
pop
fnstenv
int3
add
add
add
add
add
mov
push
push
xor
and
popf
or
aas
frstor
jnp
push
cmpsb
lea
sbb
in
dec
or
nop
add
fdivr
adc
inc
fsubrs
scas
incb
inc
loop
mov
jle
mov
insl
inc
push
arpl
sbb
push
clc
mov
imull
sbbb
push
shlb
adc
in
cmp
xchg
xchg
xchg
sahf
push
mov
or
daa
inc
mov
leave
xchg
push
inc
std
stc
in
and
jle
xor
fisubrs
sbb
adc
in
rcll
mov
out
es
test
lods
push
jno
scas
push
addb
jno
aam
lods
sub
js
xchg
add
add
add
add
add
add
add
jl
enter
iret
and
mov
adc
xor
jmp
xchg
jp
jo
and
add
cmpsl
cmpsl
stc
mov
ljmp
lret
pop
cld
push
sbb
push
or
xchg
stos
push
into
in
data16
jg
dec
cwtl
add
insl
lret
hlt
mov
mov
out
sbb
in
mov
pop
sub
mov
sbb
inc
lcall
clc
push
lods
push
mov
inc
dec
mov
sbb
mul
fimull
imul
and
mov
and
mov
sub
mov
mov
rolb
lret
addr16
xchg
sub
test
das
and
mov
or
dec
popf
addr16
es
cmpsb
jnp
and
xlat
mull
jl
ret
test
test
int3
add
test
cltd
or
mov
movsl
cmpsb
and
ret
and
shr
jno
das
js
in
sub
sub
fists
add
add
add
add
add
add
add
lods
push
xorb
jl
in
xor
jg
mov
pop
and
cli
and
nop
fldl
xor
adc
xchg
sbb
jecxz
popa
arpl
dec
das
loop
cmp
mov
xchg
cltd
sub
out
mov
and
pop
jl
lods
inc
sub
rcll
jp
dec
ds
jne
arpl
out
nop
fsubr
scas
fdivl
ljmp
adc
dec
xor
inc
int
aam
outsl
loop
jo
sarl
test
add
rorb
adcb
dec
jno
jne
aam
sub
pop
lcall
cmpsb
int
add
add
add
add
add
add
mov
mov
inc
and
scas
and
les
arpl
xchg
sbb
cmpb
jae
ja
push
jno
pop
push
aas
lock
pusha
xchg
clc
xor
test
pushf
test
movsl
mov
adc
cs
cmp
inc
lds
pop
fsubl
test
cltd
insl
and
mov
mov
mov
lret
sub
out
adc
mov
testb
add
pop
and
cld
or
lods
sbb
aam
out
mov
fbld
xchg
cmpsb
xor
jmp
shrl
cmp
ja
aad
fwait
enter
mov
jmp
push
adc
and
mov
add
add
lret
sbb
filds
and
and
and
push
xor
jl
xor
inc
mov
mov
mov
sub
sbbb
clc
notb
test
les
dec
lea
ds
xor
mov
push
mov
repz
insb
loopne
push
mov
jo
jno
adc
add
outsl
adc
rolb
jl
xchg
rcrl
mov
fcompl
mov
cmp
sub
push
fcomi
and
imul
lods
lea
inc
push
jnp
bound
ffreep
pop
orb
or
or
cltd
pop
xor
testb
mov
mov
hlt
test
fwait
pushf
xor
pop
push
fadd
jp
clc
add
sub
fs
icebp
or
aam
inc
inc
mov
es
and
sbb
daa
icebp
ret
add
add
add
add
add
add
pop
outsl
jmp
pusha
lods
add
icebp
push
gs
repnz
pop
xchg
push
lock
frstor
mov
nop
add
cld
cmpsl
arpl
lcall
push
clc
or
cmp
push
jl,pt
sarb
ljmp
data16
jmp
pop
ficoms
test
mov
dec
dec
movsl
clc
sbb
call
push
int3
add
add
add
add
add
add
adc
jmp
data16
push
das
xor
bound
fstps
jge
add
rcrb
cmpsb
repz
scas
arpl
pop
sbb
mov
insl
icebp
sbb
and
sahf
hlt
hlt
cmpsb
adc
imul
stos
mov
push
jl
adc
arpl
pop
mov
loopne
inc
test
lahf
mov
and
push
or
incl
dec
cmp
aas
jge
adc
test
mov
mov
leave
fisubs
out
dec
push
cmp
iret
movsb
mov
stos
add
sub
cmpb
or
mov
cmp
and
jno
mov
xchg
les
and
daa
cmpsl
add
imul
add
xor
clc
out
inc
push
sbb
pop
mov
push
dec
stos
mov
lret
ja
pop
ss
push
cmp
xor
test
imul
xchg
xchg
aas
sub
sub
popa
jbe
mov
jae
rcl
add
test
jecxz
push
movsl
shll
xlat
pop
popa
mov
mov
mov
jp
and
cwtl
jl
add
cwtl
fsts
dec
lcall
ret
cmpsb
cmpsl
sahf
xor
or
lret
scas
mov
lahf
ret
mov
xchg
loop
or
rcll
icebp
out
or
scas
mov
aaa
pop
fstps
add
add
add
add
sub
mov
jno
cmpsb
mov
pop
ret
loop
loop
mov
out
and
push
loop
lret
add
add
xor
lock
pop
idivl
add
add
add
add
imul
and
sahf
jne
inc
jp
lock
rclb
mov
mov
imul
in
jle
popa
scas
jbe
cmp
outsb
repnz
add
sub
lds
xchg
testb
fcompl
jnp
aad
repnz
out
imul
lock
orl
cmp
adc
mov
add
add
add
add
add
add
add
mov
cmp
cmc
mov
sub
add
add
inc
inc
sbbb
addl
ret
inc
dec
add
movsb
mov
lock
jmp
add
add
xchg
add
inc
lahf
xchg
jl
sbb
xor
in
jp
inc
xchg
sbb
mov
adc
test
sbb
cmc
dec
daa
jmp
xor
push
sbb
push
xor
pop
aas
mov
dec
mov
add
add
add
mov
inc
js
call
cmpl
repnz
repz
cmpsl
and
mov
add
add
add
add
outsb
mov
outsl
jo
daa
cmp
push
push
nop
stos
add
jge
sbb
mov
xchg
dec
loopne
mov
dec
push
pop
out
jno
cmc
add
adc
int3
scas
cmp
insb
push
ljmp
push
daa
loop
repz
or
cmp
mov
daa
xchg
movsl
cmp
pop
lcall
icebp
mov
or
adc
outsl
or
push
xchg
cmpsl
dec
push
and
lret
pushf
shll
add
add
add
ds
sub
test
mov
and
notl
push
jae
pop
int3
add
add
fsubrl
iret
and
push
lahf
add
jmp
lret
xor
cld
rcl
lods
icebp
lret
sbb
jbe
adc
fisubs
pop
dec
or
roll
test
ror
cltd
mov
hlt
push
ja
jg,pn
pop
test
dec
dec
sbb
pop
nop
add
add
shll
or
fsubs
push
cltd
imul
pop
push
add
add
stos
out
xchg
mov
jmp
jo
push
shr
scas
push
or
mov
repnz
add
gs
mov
sub
leave
cs
push
mov
mov
dec
cmp
and
dec
push
mov
les
jmp
cmp
inc
insb
daa
notl
les
fmulp
outsb
imul
xor
jmp
add
add
cs
push
xor
cmp
push
cs
cmpsb
push
fdivr
sbb
xor
orl
cltd
cmp
les
inc
imul
sbb
push
cmpsb
push
outsb
adc
add
add
push
das
inc
scas
mov
xchg
jl
sahf
mov
enter
pop
push
xchg
and
lea
inc
lds
jno
push
out
jmp
iret
lret
fs
aaa
and
loop
outsl
ficomps
push
aaa
jl
inc
pop
je
iret
or
sarl
ret
adc
sub
call
loope
jmp
insb
jne
jecxz
and
xlat
mov
addr16
or
jge
push
ret
push
loope
pusha
loope
pop
clc
xchg
out
sbb
pop
stos
add
ds
in
mov
mov
testb
addl
mov
adc
int3
add
add
add
add
add
insb
repz
sti
mov
sahf
fimuls
mov
xchg
pop
push
stc
insb
dec
fs
fadds
xchg
and
add
rol
int
mov
in
js
cmpsl
hlt
bound
mov
mov
stos
outsb
icebp
and
sbb
sahf
sub
or
add
aad
sbb
sar
or
push
scas
stos
jne
pop
xor
mov
out
lret
xor
imul
mov
scas
and
aaa
inc
pop
fisubrs
iret
or
push
sub
rclb
cld
push
dec
jne
pop
adc
lret
lcall
and
and
and
and
and
and
dec
jno
add
inc
add
add
es
pop
movsl
lret
xchg
xor
js
in
rorl
inc
xor
aad
dec
icebp
test
and
insl
adc
sti
mov
and
and
movsb
mov
and
and
and
and
and
and
in
mov
push
add
add
add
add
add
add
hlt
jge
xchg
jne
dec
fistpll
imul
add
add
add
add
add
add
add
inc
filds
jnp
jecxz
adc
push
test
xlat
and
dec
ljmp
mov
add
mov
mov
mov
incb
clc
or
data16
scas
pop
incl
incl
call
cld
jle
hlt
jge
nop
notl
and
adc
lods
inc
lcall
mov
pop
lahf
push
adc
repnz
dec
mov
push
mov
daa
cmp
inc
or
fwait
pop
push
in
add
jmp
mov
out
xchg
pop
mov
stos
and
imul
bound
cwtl
repz
aas
dec
imul
mov
or
ja
imul
hlt
dec
nop
bnd
sub
loope
mov
mov
add
call
push
push
xchg
pcmpgtw
dec
movsl
push
mov
sbbl
sbb
xor
je
pusha
ret
jge
and
inc
xchg
cmp
nop
addr16
popl
xchg
sbbb
push
add
add
add
jg
cld
dec
mov
and
aad
outsl
mov
mov
movsl
mov
pop
rorl
jmp
push
sbb
cmpsl
shlb
aas
dec
mov
and
in
jo
lock
js
pusha
mov
inc
xchg
movsb
mov
push
std
lock
js
inc
mov
mov
sub
push
adc
scas
ss
or
inc
mov
das
in
repnz
aaa
sbb
add
push
pop
loopne
jae
mov
test
or
and
cmp
and
repnz
in
xchg
cmp
sub
mov
repz
adc
jecxz
loop
fcoml
ret
bound
cmp
xlat
iret
dec
adc
test
mov
sbb
btr
inc
dec
push
jne
fisttps
and
jmp
fs
jge
cmp
jnp
ret
xor
inc
rcrb
mov
jp
jb
inc
into
shr
pop
das
mov
or
jmp
cmp
sarb
mov
and
pop
shlb
aas
inc
adc
xchg
popa
mov
sub
rorb
popa
dec
add
orb
daa
push
push
icebp
fcmovnbe
nop
ficompl
add
sub
cli
shrb
rclb
add
and
add
imul
push
jle
js
xor
enter
std
hlt
icebp
nop
jns
sti
push
mov
arpl
call
fldl
pusha
shlb
adc
inc
dec
shl
cs
push
jo
in
sti
xchg
jbe
orb
xor
pop
int3
xor
loopne
rcrl
rorl
or
test
testb
sarb
lahf
jo
lock
push
ror
aas
and
pop
mov
ret
mov
imul
dec
push
sti
inc
push
insb
hlt
mov
leave
nop
cmpl
mov
out
in
add
or
movsb
adc
add
stos
and
or
loopne
fwait
sbb
sbb
sub
out
lea
sti
mov
sbb
lods
xchg
inc
arpl
insb
test
rorb
mov
movsl
sarb
jle
pushf
mov
and
pop
dec
inc
xchg
inc
test
inc
lds
lea
push
out
mov
dec
lret
std
into
or
and
xor
lahf
dec
ret
lret
jb
mov
jb
push
jne
jge
and
inc
out
cs
jl
out
decl
jbe
cmp
test
sub
xlat
cmp
aas
sbb
jecxz
mov
jecxz
bound
mov
lcall
cltd
repnz
scas
ljmp
xchg
imul
jns
cwtl
inc
adc
xchg
inc
in
arpl
jge
mov
out
xor
adc
pop
sub
sub
mov
fldt
mov
mov
xor
fildll
aam
sbb
fdivrs
stos
rorb
push
sbb
sub
jmp
js
dec
call
out
lds
test
imul
push
fstpl
jae
or
and
pop
aaa
adc
dec
push
jp
popa
es
roll
in
stos
ljmp
mov
repz
mov
jnp
andl
repnz
aas
inc
push
je
cmp
rolb
das
xor
push
scas
adc
dec
ds
xchg
scas
inc
ss
imul
aas
push
mov
pop
add
xchg
aam
jbe
in
jmp
mov
das
mov
addr16
inc
sub
pop
mul
lret
cmp
pop
ret
into
out
xor
cmovnp
dec
pop
cmp
fisubl
pusha
cmpsl
sarl
inc
push
fwait
push
int
pop
cmc
push
in
mov
and
inc
push
mov
scas
cmp
in
mov
adc
shrb
sbb
movsb
sub
jae
push
jne
mov
push
fisubrl
in
and
mov
repnz
and
mov
push
cmpsl
fwait
lea
or
cmpsl
dec
jne
lds
mov
xchg
jl
dec
inc
xor
subb
adc
or
sarb
xchg
inc
add
mov
cli
fists
adc
adc
dec
inc
cmp
das
jge
cwtl
jnp
cld
insl
sbb
sub
sbb
cs
sub
adc
xchg
xchg
jbe
push
lds
or
repz
add
fwait
jp
test
dec
xchg
sbbl
jb
jle
call
inc
sbb
cs
mov
and
sbb
das
scas
mov
in
and
adc
pushf
mov
mov
rclb
cmp
movsl
jns
daa
aaa
jecxz
and
xchg
in
out
and
adc
lcall
ret
cltd
test
icebp
mov
fwait
inc
jl
rcr
shrl
jge
xor
stos
pop
popf
cmp
adc
movsb
mov
andb
and
add
in
sub
sub
jne
xor
lahf
lea
adc
push
add
adcl
mov
sahf
lock
sti
out
movsb
repz
fisttps
rolb
or
mov
pop
lds
inc
scas
push
shl
or
rcl
movsb
outsl
push
or
lcall
push
pop
icebp
dec
inc
dec
repnz
fldenv
cli
inc
daa
pop
xor
fsubs
xlat
leave
fs
sahf
mov
sub
into
lcall
mov
scas
mov
xor
mov
stc
pop
and
lock
cmpl
xchg
mov
xor
ja
pop
sub
jne
cmpsb
fadds
xchg
jo
add
mov
pushf
cmp
push
mov
lods
flds
sub
fstl
ret
dec
sbb
negl
mulb
and
decl
jo
nop
or
fistpll
es
out
sbb
idivb
aaa
cli
pop
push
xchg
cmpsb
push
lahf
rorb
push
push
adc
xor
les
jnp
stos
mov
dec
movl
pop
jns
ror
cmp
pop
mov
std
add
iret
dec
ljmp
dec
and
js
incl
das
fld
in
dec
aam
ret
and
aam
pop
jnp
xor
sbb
ret
ljmp
icebp
and
pop
sbb
cmp
mov
lret
xchg
inc
xorl
rorb
imul
and
iret
aad
aam
jno
dec
imul
mov
inc
jne
insl
xchg
cmpsb
mov
test
push
fcoms
sub
xchg
pusha
xchg
ljmp
mov
inc
or
sub
les
iret
pop
add
mov
ret
push
dec
mov
xchg
fiaddl
aam
jp
call
scas
mov
inc
arpl
shlb
and
int3
fstpt
das
gs
adc
lcall
movsl
mov
jne
scas
xor
inc
mov
out
dec
add
into
push
or
ljmp
out
add
add
outsl
sub
lret
test
push
add
xchg
bound
inc
lret
mov
outsl
int3
mov
les
jno
into
movsl
pop
jmp
cltd
or
cmpsb
mov
pop
mov
sub
dec
bound
mov
mov
sbbb
and
jp
mov
fs
ss
or
sarl
test
pop
mov
stos
xchg
out
mov
je
inc
insl
outsl
or
pop
aas
jns
ds
push
dec
test
fdiv
mov
sbb
mov
pushf
or
xor
mov
mov
add
lock
pminub
inc
ss
and
test
adc
lods
mov
addr16
inc
sahf
mov
sub
cmp
fldt
and
cmpsl
sahf
sub
cmc
shlb
inc
sbb
dec
mov
scas
add
cmpsb
popf
icebp
add
les
sti
adc
hlt
in
insl
inc
xchg
in
test
xor
mov
scas
mov
sbb
icebp
aad
gs
adc
out
mov
xor
push
mov
jge
repz
sbb
dec
xchg
popf
ret
in
xor
push
push
cmp
mov
in
push
cmp
jb
inc
inc
xor
push
hlt
jmp
es
aaa
mov
fsub
inc
pop
das
dec
mov
dec
popf
pop
mov
xor
shrb
sub
mov
xor
cmp
cld
rcl
cmp
lods
adc
jecxz
outsl
out
imul
xor
dec
hlt
cmc
push
adc
mov
shrb
mov
cmp
xchg
mov
xor
cmpb
jle
pusha
addr16
into
mov
les
lcall
wrmsr
add
cmp
loopne
add
adc
pop
jb
inc
add
sub
sub
or
scas
lods
iret
addr16
mov
lods
jb
jnp
jb
mov
cmp
sub
sbb
lock
out
mov
mov
jnp
mov
xchg
test
xchg
sahf
sbbl
jl
jg
cmpb
push
xor
adc
sub
repnz
call
add
je
insb
test
outsb
cmp
in
jle
sbb
imul
jl
call
jb
push
aad
pcmpeqb
mov
pop
xchg
sbb
mull
pop
imul
jmp
lret
cli
out
xchg
mov
les
movsb
rol
testb
pop
int3
mov
fdivl
movsl
sbb
dec
or
arpl
sbb
or
dec
cmp
xlat
mov
xor
xorl
push
lock
loopne
jnp
daa
sbb
xchg
int
loop
mov
dec
cmp
sbb
and
push
cmp
cwtl
aas
ud1
and
sbb
faddl
dec
les
dec
jmp
jge
ja
sbb
sbbb
call
sub
aam
inc
call
xor
cli
sub
repnz
sti
or
fsubl
in
adcl
push
sub
push
mov
aad
pop
test
out
ss
pusha
test
in
cmp
data16
lret
or
xor
sarl
mov
inc
fdivs
add
xor
sbb
mov
and
inc
sub
mov
fisubrs
xchg
mov
in
pushf
add
cli
test
push
mov
and
cmpsl
in
lock
add
add
jbe
and
cli
cmc
jg
sbb
popa
shll
ficomps
push
in
stos
add
out
in
or
add
cltd
enter
cmp
jecxz
sbb
pop
pop
shlb
inc
add
cmpsl
sbbl
enter
shrb
loop
je
sub
push
dec
xchg
xor
loopne
rclb
mov
lock
lods
bound
mov
adc
aaa
daa
lahf
loopne
and
nop
jnp
xchg
pusha
stos
das
fisubs
xchg
sbb
mov
out
lds
fst
jg
mov
sub
movb
aam
add
sahf
xor
aas
cli
xchg
xorb
mov
adc
push
mov
loop
mov
sahf
and
mov
and
out
std
cwtl
dec
jb
and
das
out
cmp
imul
andl
test
dec
sub
sarl
outsl
mov
jns
shrl
mov
sbb
rcr
and
in
ss
jp
clc
add
ds
sti
xlat
pop
ljmp
fistpll
cmp
imul
sub
mov
and
jp
scas
cmp
dec
mov
mov
aam
data16
cwtl
push
and
shl
test
cmp
jg
inc
cs
lret
adc
notb
push
xchg
outsb
stc
mov
and
test
popf
or
xor
xchg
sti
jns
jle
add
popa
sti
mov
nop
dec
leave
rorb
cmpsl
hlt
sti
mov
or
cld
jle
shll
dec
mov
test
xchg
pop
insb
inc
mov
in
pop
push
xchg
mov
mov
mov
jge
aas
jnp
aas
ss
pop
gs
and
repz
call
lret
dec
push
mov
aam
je
pop
push
fnstenv
std
xchg
sbb
xor
cmp
jae
mov
rcll
mov
arpl
or
jmp
mov
fcomps
dec
cmpsl
ja
xchg
stos
mov
xor
push
notb
ss
sub
int
push
fidivrs
cmp
repnz
lret
cmp
decl
cwtl
push
pop
pop
in
jo
enter
pop
mov
shrl
cmp
leave
cli
notl
rcrb
iret
xchg
frstor
push
mov
inc
lahf
sub
jecxz
mov
mov
inc
adc
xchg
pop
push
cmpsb
cmp
jmp
leave
aam
shll
das
iret
jne
js
push
mov
jmp
sbb
stos
xchg
and
push
mov
call
sarl
add
test
out
inc
xor
loop
dec
xor
lock
andb
adc
sbb
lret
test
jmp
and
adc
nop
repnz
sbbl
mov
jle
bound
xor
cwtl
add
pop
mov
xchg
cmp
rorb
sti
cmpsl
push
popa
test
js
pop
or
repz
jmp
fidivrs
addb
test
fdivs
ljmp
push
popf
test
dec
xlat
js
mov
and
addr16
mov
aam
lahf
cmp
pop
stos
std
out
pop
fwait
dec
arpl
mov
js
out
or
sahf
in
test
lahf
inc
cmc
popa
in
adc
mov
in
or
in
pushf
aad
xchg
mov
aaa
dec
jne
cmp
nop
lret
mov
adc
adc
cmp
xchg
in
and
lret
inc
in
repz
ljmp
mov
cmpsl
lcall
cmp
mov
arpl
pop
mov
jl
add
enter
cltd
std
and
mov
cmp
lods
jnp
sub
jbe
push
leave
push
cmp
les
add
add
sbb
sub
pop
in
mov
jmp
xor
mov
and
loopne
and
xchg
pop
lret
dec
ljmp
push
insb
das
jecxz
les
lea
xchg
leave
jmp
xchg
sbb
mov
test
je
pop
and
inc
lods
push
push
les
lods
repz
inc
fcmovnbe
and
sti
pop
decb
mov
outsl
push
imul
or
sbb
dec
sbb
cmpsl
pushf
vfrczpd
mov
lret
icebp
or
jnp
jl
push
adc
int3
jecxz
mov
mov
jmp
out
jp
push
push
xor
jge
ret
ficoms
pusha
movsb
mov
mov
sub
sarb
les
jae
inc
subl
adc
and
dec
fmull
pop
jns
ds
fbld
shll
lods
cwtl
in
lea
xor
jmp
sub
jecxz
mov
inc
xchg
xchg
jae
mov
jmp
std
je
lahf
and
mov
mov
testl
adc
in
loopne
les
mov
dec
mov
insb
add
enter
push
mov
adc
jno
aam
adc
sahf
sarl
jge
pushf
mov
lcall
std
or
or
mov
push
and
aas
pop
cmpsb
jmp
xor
push
loop
dec
sbb
mov
les
insl
and
lock
insl
add
repnz
add
jne
cmpl
sub
ret
test
mov
shrb
xchg
arpl
sbb
hlt
lahf
repnz
inc
repz
jnp
jb
xchg
lret
xchg
out
mov
les
pop
cmp
inc
cmp
cli
mov
mov
imul
push
mov
popa
jge
adc
cmp
stos
jge
or
sbb
cld
test
ja
imul
testb
lods
shrl
pop
cmpsb
insl
push
cltd
addr16
adc
int3
adc
adc
test
push
daa
ss
inc
dec
lea
mov
and
jmp
jbe
imul
out
and
addb
push
testb
adc
cmp
dec
fdivrl
lods
popa
movsl
icebp
ss
fwait
jae
pop
addr16
ret
xchg
adc
repz
sbb
cmp
and
sahf
add
adc
xor
fldt
insb
and
aaa
loop
add
cld
mov
mov
mov
dec
clc
mov
cli
xor
cmpsb
or
int
inc
xchg
lret
xchg
cs
sti
inc
insb
xchg
sub
out
ja
call
test
pop
jns
out
push
pop
jno
lcall
mov
outsb
jae
nop
and
add
jbe
shll
loopne
mov
push
mov
mov
push
dec
cli
sub
jg
jge
pop
pop
xchg
addr16
add
dec
inc
mov
clc
cwtl
push
fs
cmp
insb
iret
sbb
jge
xchg
mov
sub
jmp
and
loope
mov
push
xchg
pop
hlt
and
inc
sbb
mov
gs
adc
test
movsl
mov
test
pusha
andl
loopne
and
xchg
adc
insl
fildll
popf
fdivrl
or
dec
repnz
mov
stc
or
sub
xchg
cwtl
cltd
mov
mov
jp
addr16
std
pop
push
pop
lea
movsb
rcr
fs
xor
int3
cmp
or
jmp
jo
or
or
xchg
mov
dec
addr16
add
jmp
cwtl
loopne
dec
cmp
xchg
dec
test
lcall
test
cmp
sub
jbe
cs
mov
mov
adc
jmp
push
mov
add
rcll
xor
dec
es
add
int
pop
sub
inc
or
fistps
ficoml
lods
jmp
pop
push
jno
ja
out
out
fsubr
inc
xchg
add
inc
adc
loope
sub
push
popa
jbe
cmp
ss
jp
movsl
int3
call
jle
ret
int3
popl
mov
je
addr16
mov
lret
insl
dec
pop
nop
push
in
clc
xchg
mov
not
frstor
into
xchg
dec
cmp
mov
ret
sahf
jo
xchg
dec
inc
inc
daa
push
jmp
xchg
cli
jae
lods
leave
in
dec
test
roll
loop
xchg
insl
and
mov
lock
inc
xchg
cwtl
nop
cmp
add
and
mov
inc
loope
imulb
fnstsw
int
loope
call
cwtl
in
outsl
inc
lea
hlt
pusha
mov
pop
pusha
push
leave
xor
imul
ss
stc
clc
mov
xor
loopne
lcall
inc
ret
sub
dec
ror
out
fucomi
push
ss
lret
push
xchg
push
jne
mov
or
cmp
jns
inc
mov
call
sub
cmp
lds
movsl
imull
insl
insb
sti
cmc
jne
cltd
lods
sub
imul
add
cmp
scas
fldt
and
sub
pop
je
mov
loope
and
mov
leave
test
lahf
insl
test
adc
mov
cmp
add
enter
filds
mov
mov
mov
fs
lods
dec
rorb
popa
testl
lds
inc
test
jecxz
adc
push
lock
inc
lea
push
mov
cmpsl
dec
cs
out
ficoms
arpl
add
pushf
cmp
add
imul
jl
cwtl
fisubrl
imul
xchg
lds
adc
cmp
mov
inc
in
outsb
test
call
negl
push
mov
and
js
pop
mov
inc
mov
shrb
or
and
dec
lcall
stos
jmp
lods
jno
and
adc
xchg
int3
mov
cmc
je
inc
ss
mov
adc
scas
pop
iret
lea
add
sbb
jnp
int
insb
adc
mov
jge
xchg
out
outsb
pop
or
jg
push
enter
das
push
imul
int3
test
pop
sar
call
ret
xor
add
inc
icebp
xlat
aam
out
subl
jge
in
jo
dec
cmp
add
and
xor
adc
mov
mov
hlt
jp
dec
or
pop
inc
stc
push
lret
xchg
xchg
lcall
repz
pop
inc
mov
ficoms
inc
sub
loop
mov
push
adc
cltd
loop
clc
repz
pushl
pop
xor
aad
pop
cmp
lods
lahf
in
mov
aas
push
jne
xor
dec
add
add
mov
or
pop
push
shrb
xor
pusha
cs
ja
mov
or
fdivr
fucomip
stc
sbbl
notl
cld
aaa
jb
xor
push
or
inc
push
xchg
nop
xchg
in
adc
xchg
jge
arpl
shll
jne
aad
xchg
faddp
and
popf
jno
fdivl
mov
add
adc
or
sti
stos
or
pop
cld
push
xor
stc
mov
inc
rcr
imul
fistpl
cmp
js
adc
mov
adc
adc
push
lea
lret
add
dec
mov
clc
shrl
dec
jae
sub
mov
cld
adc
sbb
cmp
pop
inc
push
push
push
cs
ds
test
sub
cmp
push
cmp
jg
xchg
push
jbe
push
jge
inc
mov
xchg
jecxz
test
cld
xor
pop
push
cmp
leave
and
jmp
js
fisttpll
pinsrw
jmp
mov
loope
and
je
mov
or
xor
sbb
stos
pop
cld
add
mov
outsl
int
test
xlat
jle
inc
shrb
sbb
xchg
sub
xchg
mov
sbb
sub
shll
popf
xchg
mov
jge
inc
inc
lods
pop
jg
lock
xorl
mov
adc
push
xor
scas
dec
and
pop
cltd
xchg
mov
xchg
sub
stos
stos
je
and
fisttps
ja
xor
cli
lods
xchg
into
sub
dec
out
mov
and
and
sub
ficompl
loope
les
xchg
xchg
imul
push
leave
fiaddl
rorb
adc
inc
sub
adc
adc
jae
mov
cmpsl
repz
adcl
jae
cmp
std
outsb
dec
pusha
xor
push
jp
lods
movsl
push
jp
cmpsl
ret
pop
movsb
mov
rcrb
test
movsl
scas
aad
fisttps
mov
jp
addl
mov
pop
andl
adc
sbb
push
popa
cmp
mov
cmp
sub
adc
xchg
xor
lret
test
insl
push
test
aas
add
dec
clc
or
lret
movsb
fistl
adc
scas
xlat
push
loop
lcall
mov
cld
mul
loopne
mov
lods
int
inc
and
sub
cmp
ror
icebp
loope
or
mov
inc
jb
cmp
cmpl
fcmovne
and
stc
fdiv
lds
cmpl
mov
and
imul
push
push
in
xchg
sub
sbb
out
lds
push
cwtl
cmp
jno
xor
adc
lret
mov
push
cld
sub
push
shl
in
fwait
ljmp
inc
std
fdivl
mov
imul
pop
lahf
rcll
jbe
mov
inc
or
lret
icebp
push
mov
fnstenv
sbb
js
inc
adc
adc
inc
xchg
scas
call
loop
push
jns
push
lcall
insb
sbb
insl
outsb
outsl
ret
add
imul
mov
into
leave
fsub
add
pop
xor
pop
out
or
xor
mov
jp
dec
sbb
rcr
std
push
inc
xlat
pusha
ds
inc
add
adc
pop
xchg
adc
cmp
add
loope
out
sub
dec
sbb
subl
inc
lahf
addb
push
sbb
mov
std
or
scas
sub
outsb
and
and
or
add
repnz
mov
decl
jmp
into
mov
leavew
cmpsb
mov
test
aas
ret
icebp
or
adc
mov
lret
adc
or
dec
pop
je
andl
mov
mov
xor
jne
sbb
jne
sbb
or
pop
xchg
mull
lods
nop
fdivrs
or
adc
cltd
jg
mov
ret
call
cmpsl
mov
subb
pop
aaa
jmp
movsb
ficoml
sbb
dec
push
and
jbe
stc
icebp
test
les
fs
fnstsw
xor
ret
push
pop
cmp
repz
xlat
pop
push
and
pop
pushf
cltd
dec
mov
sub
loop
bound
int3
mov
daa
adc
imul
fdivrl
out
mov
rcll
nop
loopne
test
push
ljmp
gs
movsl
inc
jecxz
out
test
sub
lret
pop
jle
jo
fldcw
add
test
inc
test
rolb
mov
mov
pushf
jb
xchg
call
idivl
pop
xchg
adc
in
dec
cli
jp
mov
in
daa
hlt
sbb
sub
push
inc
and
in
mov
testl
add
pop
cltd
out
jmp
or
arpl
sub
aas
adc
out
add
icebp
mov
pushf
cmpsb
and
or
out
xchg
sub
adc
outsb
cltd
aas
sub
test
cld
pop
and
in
jnp
mov
push
gs
lcall
fistpl
and
cwtl
mov
sbb
xor
xchg
mov
inc
aas
pop
popf
inc
xchg
cmp
pushf
addr16
jnp
pusha
jbe
lods
jge
or
es
lds
cmpsb
ret
mov
shlb
jecxz
xchg
xlat
js
int3
mov
arpl
mov
push
hlt
movsb
xchg
mulps
ds
cmp
xor
and
out
sub
mov
mov
adc
test
insl
lods
pop
fsubrl
insl
mov
lds
sbb
mov
aas
subb
bound
pop
cld
pusha
pop
cmp
test
mov
and
mov
inc
pop
sbb
nop
and
jl
divb
or
aam
push
dec
jbe
mov
out
cld
jge
out
jno
jns
test
aad
fs
jne
jle
xchg
ja
mov
int
out
lods
pop
adc
adcl
cmp
fsubs
or
insl
mov
and
xchg
rcr
inc
subl
cmpxchg
lcall
sub
mov
int3
mov
xor
or
fsts
pop
sti
ret
mov
cld
test
std
xchg
sbb
sbb
mov
adc
fwait
dec
insb
jge
xchg
add
out
cwtl
mov
addr16
mov
enter
xor
mov
inc
scas
addr16
das
sub
push
aam
mull
fisubrs
fnstcw
push
ss
gs
sbb
mov
popa
xchg
mov
add
mov
notl
mov
xchg
dec
and
xchg
int3
aad
adc
xchg
or
scas
cmpsb
pop
mov
loop
dec
stos
cmp
push
sbb
jnp
icebp
or
add
sbb
test
jle
pop
and
fbld
scas
xchg
std
xchg
adc
pop
hlt
push
sbb
test
xchg
push
xor
cmp
adc
pusha
mov
add
pusha
mov
imul
dec
jb
shl
lea
aaa
aas
repz
mov
ljmp
mov
out
jae
inc
jne
je
js
jnp
icebp
cmpsb
lods
popa
cs
xchg
mov
fisttps
sub
fs
out
and
enter
xchg
mov
lods
push
xor
sbb
pop
aas
jg
jne
mov
cmp
stc
sub
lods
js
pop
adc
jmp
sti
and
leave
push
cwtl
repz
push
push
inc
push
daa
mov
and
sahf
push
pop
lock
sbb
push
or
mov
xchg
js
aas
cs
cmp
sti
decb
jp
push
aaa
xor
push
icebp
sub
dec
add
push
mov
sub
pushf
jle
lcall
cmp
ror
movsb
cmp
test
xchg
div
pop
mov
add
lods
cmp
or
add
jnp
sti
jp
pusha
ret
add
mov
loop
call
cltd
pop
shlb
pop
push
imul
std
adc
inc
sti
les
rcrl
cmp
and
xor
and
jae
lods
ljmp
movsl
sub
jae
in
ficoms
bound
jg
pop
sbb
popa
out
fisttpl
and
insb
fdivrp
stc
xchg
add
in
cmp
out
jo
mov
xchg
js
divb
adc
arpl
out
or
inc
sub
test
fwait
imul
cld
mov
jae
push
roll
stc
mov
lahf
testl
jg
pop
loop
push
xchg
inc
sub
xor
pop
xor
int
jge
outsb
out
mov
mov
popa
cld
jo
out
mov
lock
stos
sbb
pop
lret
mov
xchg
stc
xchg
inc
cmp
xchg
push
call
or
popf
fldenv
pop
lds
push
lds
jge
inc
pop
fiaddl
push
sahf
cmpsl
add
lea
mov
out
mov
pushf
loopne
cltd
xlat
lock
in
cmpsb
adc
dec
mov
jl
fldl
aam
cmpsb
xchg
mov
stc
fsubrl
loopne
sti
inc
dec
push
ds
mov
fistl
stos
sbb
mov
adc
inc
sti
les
inc
xchg
popa
fldenv
xchg
mov
mov
sbbb
pop
mov
out
mov
daa
dec
pushf
push
aas
inc
mov
cmp
mov
scas
adcb
rcrl
sti
add
daa
dec
data16
xchg
fisttpll
lfs
mov
push
nop
add
pop
movsb
mov
cld
xor
sub
jnp
cmp
xor
out
xchg
les
and
pop
cmc
xlat
mov
leave
in
test
rcl
pushf
sub
push
das
mov
xchg
cmp
out
sahf
pop
add
xor
cmp
pop
and
outsl
mov
dec
sub
adc
and
in
inc
fsubs
push
pop
mov
sbb
fadds
int3
jg
mov
sbb
call
movups
jl
jge
call
inc
add
and
mov
push
adc
outsl
mov
addl
ds
adc
ss
jmp
push
enter
pop
fwait
push
mov
dec
mov
mov
mov
or
daa
sub
mov
cmpsb
adc
push
and
out
fmul
in
pop
mov
and
orl
repnz
sbb
jl
std
xchg
insl
add
cwtl
and
sbb
jno
mul
add
inc
js
add
daa
jns
mov
aam
popa
jge
adc
mov
mov
mov
fs
stos
jecxz
imul
dec
les
push
dec
imul
add
sub
push
cs
jnp
add
sub
js
or
lret
dec
lar
cmpsb
and
scas
jle
mov
jo
bound
dec
pop
jg
mov
pop
test
adc
ja
xlat
dec
adc
test
mov
shr
les
sub
cmp
mov
outsb
jg
jb
inc
jne
addr16
jbe
loop
adc
hlt
sub
lahf
loope
in
fsubs
cs
scas
push
repz
add
adc
xchg
rorb
out
cmc
fwait
les
sub
pop
adc
loope
pop
shrl
pop
lcall
idivl
fs
mov
out
bound
dec
scas
pusha
popf
jge
int
and
dec
xchg
sbb
xchg
push
sub
jae
insl
pop
inc
inc
inc
xchg
test
icebp
mov
int
int
xchg
ljmp
dec
aas
cmp
int3
in
rolb
aas
mov
inc
sbb
pop
cld
lock
inc
and
xor
push
stc
fistps
mov
fistpl
lds
fsubs
popa
pop
sub
fnstcw
xchg
or
test
stos
shrl
push
mov
pop
mov
xchg
jbe
adc
test
inc
lods
adc
andl
jp
iret
push
pop
and
in
shr
or
sbb
test
clc
mov
add
lcall
nop
cmp
and
sub
lret
jmp
mov
sti
jecxz
jecxz
icebp
addr16
mov
lds
sahf
cli
pop
xchg
push
movsl
aaa
ss
add
cmpsb
or
xchg
lods
pop
jnp
idivl
mov
xchg
mov
movntps
test
sub
daa
push
je
adc
aaa
or
jae
mov
jp
test
push
ja
push
add
rolb
xchg
call
lret
shll
push
sahf
xlat
data16
mov
jae
and
out
call
inc
movb
push
and
cltd
jns
repnz
dec
jl
in
cmpsb
loope
pop
ss
aad
mov
mov
sarl
bound
fxch
pop
mov
cmpsb
lahf
cltd
xchg
les
into
into
inc
addl
test
jmp
lea
fcmovnu
fists
xor
loop
mov
mov
xchg
ret
scas
aas
dec
adc
shlb
std
shr
push
dec
add
pop
insl
inc
mov
or
mov
in
dec
stos
ja
sub
mov
xor
jmp
pop
cmp
mov
and
clc
adc
sub
jne
arpl
data16
lds
ret
fs
clc
lahf
xor
shrl
test
push
and
pop
adc
fcoml
xchg
dec
mov
icebp
dec
or
aam
or
mov
sahf
gs
sarb
pop
sub
fildll
fisubl
jns
lea
sub
jge
mov
and
push
into
nop
les
in
jbe
cs
std
cmpsl
or
add
loope
js
gs
add
dec
xchg
mov
mov
jmp
xor
insl
mov
cmp
dec
out
hlt
jno
xchg
adc
das
jmp
mov
mov
ljmp
sti
fdivr
inc
shll
adc
adc
adc
sbb
test
mov
loope
scas
int3
fbld
fisubrl
add
dec
lret
repnz
les
sbb
lahf
mov
sbb
cmpsb
in
sahf
fidivrl
mov
mov
xchg
mov
jle
or
mov
ss
mov
pop
pop
in
mov
xchg
testl
sbb
cltd
mov
inc
flds
xor
mov
ds
divb
aas
or
sub
mov
and
jl
push
or
and
cs
inc
push
jae
mov
data16
dec
popa
cmpsl
iret
inc
jle
daa
mov
pop
out
out
out
inc
add
iret
js
out
mov
add
jb
xor
out
mov
xor
add
mov
ljmp
aam
mov
dec
cmp
test
test
pop
and
and
cltd
push
xchg
out
inc
inc
fs
and
mov
rcll
arpl
xchg
mov
mov
test
scas
sbb
push
mov
out
out
popa
pop
adcb
repnz
xlat
mov
push
popa
adc
sbb
test
orb
leave
outsl
shll
int
rcll
jmp
sub
pop
negl
mov
sahf
inc
inc
dec
sub
inc
mov
dec
xor
stos
and
in
push
push
xchg
insl
outsl
lods
pushw
cmp
xor
into
xor
fwait
movsb
pop
out
pop
shrl
sbb
cli
pop
das
dec
xor
mov
scas
cwtl
sub
xchg
dec
or
fisttpll
jo
shrl
cmp
nop
pop
cmc
jmp
push
iret
cmp
mov
push
stos
inc
or
pop
push
xchg
pop
out
lcall
lea
call
dec
stc
xor
imul
mov
bound
rolb
mov
aaa
bound
pushl
rcrl
inc
add
dec
fwait
pop
aad
jae
dec
leave
or
mov
or
mov
mov
stos
sarl
xlat
iret
rclb
push
dec
aam
cmp
mov
xchg
jg
test
pushf
push
and
je
cli
icebp
mov
pop
out
cmp
jle
and
mov
lret
loope
or
imul
inc
xchg
mov
les
push
scas
sub
enter
call
arpl
pop
jbe
shll
or
push
push
dec
mov
imul
and
sub
push
lds
sbb
sub
pop
fisubl
pop
in
or
in
fldt
mov
popf
inc
scas
leave
sti
lea
sub
test
stos
sbb
jmp
daa
orb
fisubl
sar
scas
in
sahf
or
loope
jo
test
popa
movb
cmp
pop
les
inc
fiadds
lods
lahf
add
cmpsl
in
lods
mov
jp
push
mov
mov
sbb
mov
fs
fstpt
ret
int
xchg
push
aad
lds
jno
mov
insl
stos
insl
sbb
pop
xchg
enter
jl
pop
mov
aas
mov
or
dec
push
dec
jg
leave
dec
jns
jnp
or
vpaddb
cltd
hlt
mov
orb
push
bound
dec
and
cmp
daa
jg
or
mov
inc
or
test
xor
test
leave
clc
inc
inc
int3
cmp
test
test
and
push
mov
mov
mov
xor
dec
push
call
dec
cmp
cmp
pushf
ljmp
inc
ret
shll
int3
mov
mov
add
push
push
pop
cmp
jle
shrl
mov
ret
mov
mov
test
unpcklps
fmull
inc
dec
in
repz
je
push
es
insl
jbe
lcall
add
test
pop
mov
mov
jbe
andb
out
add
leave
sub
fsubrl
scas
or
mov
fs
hlt
fnstcw
inc
ret
and
aam
mov
jl
ss
jl
inc
aam
pushf
push
in
fidivrs
sbb
push
cmpsl
xor
pop
inc
xor
add
add
mov
or
aas
in
cmp
push
test
ljmp
ret
push
adc
insb
fdivs
dec
push
loopne
and
push
std
fsubrs
pop
lds
jnp
pusha
sbb
pop
mov
iret
and
sbb
jno
pop
pushf
scas
cld
push
int3
inc
mov
adc
fiadds
cmc
orb
jle
jg
lret
in
icebp
stc
sbb
and
mov
push
aaa
and
mov
testl
rorb
inc
adc
cmp
pusha
outsl
mov
nop
pop
mov
cmp
outsb
fldl2e
int3
cmpsl
or
lods
or
jle
rcrb
mov
pushf
incl
mov
dec
mov
addl
push
out
clc
aaa
xor
inc
inc
test
rol
add
mov
incl
ljmp
aas
mulb
push
jmp
ficoms
push
in
dec
in
mov
addr16
xorl
test
sub
cmp
jo
repnz
mov
xor
ja
mov
inc
xchg
xchg
mov
jmp
enter
and
lock
add
lea
mov
arpl
sub
adc
pop
outsl
shl
aad
cltd
test
inc
data16
rcl
cmp
lret
lahf
mov
jbe
dec
ds
cmp
adc
cmp
je
cmp
scas
fmul
jg
xor
jmp
inc
cmp
fdiv
aam
adc
xchg
and
inc
les
mov
add
push
cmp
ds
sub
push
sub
addr16
mov
and
mov
sti
cmpsb
cwtl
fs
lret
ret
dec
dec
in
rclb
fidivrs
inc
dec
cs
movsb
cmp
cmp
out
mov
mov
jno
mov
es
pop
ljmp
jne
aad
aad
adc
add
sbb
daa
inc
sbb
ss
jg
mulb
push
movsb
clc
jl
mov
mov
push
xchg
pop
inc
popf
xor
out
fnstcw
pop
mov
ret
out
sbb
lret
fidivrl
lds
stc
mov
xchg
push
sub
test
cmpsb
xchg
in
push
push
cltd
sbb
ficoml
inc
movsb
das
dec
mov
jl
popf
jae
sub
and
cwtl
cmp
mov
iret
call
popa
inc
data16
cmp
and
jns
push
dec
xchg
jbe
add
pop
and
scas
je
jae
push
push
aad
push
ds
inc
mov
sbb
fmull
sahf
adc
cld
fsubrl
sub
jg
jo
cld
stos
jg
jmp
jp
cmp
jbe
lods
mov
jnp
jmp
jne
out
movsb
pop
iret
pop
cmpsl
pop
mov
or
adc
lods
add
sub
imul
mov
pop
xchg
mov
gs
sti
jmp
push
sbb
jbe
jb
jnp
pop
mov
cs
data16
cli
inc
mov
dec
enter
insb
xchg
cmp
mov
mov
pop
ret
push
fsubrl
cwtl
sbb
or
lret
adc
xlat
jbe
mov
cmpxchg
rcl
mov
push
or
rorb
add
sbb
lds
in
xchg
push
aad
ret
push
fisubs
mov
ja
push
mov
leave
test
pop
adc
cwtl
adc
push
pop
hlt
jmp
popa
mov
sbb
test
mov
mov
lret
jge
hlt
jbe
ljmp
mov
mov
negl
jne
lcall
mov
loope
push
dec
push
int
mov
outsl
xchg
lcall
test
fstl
jnp
or
mov
xlat
push
xchg
mov
adc
ret
mov
ss
ja
jecxz
mov
in
jb
iret
mov
cld
gs
setne
sub
aad
mov
jo
ljmp
and
dec
das
inc
pushf
add
push
outsb
fwait
cmc
mov
xchg
pop
repz
push
mov
insb
mov
sub
dec
idivb
sarl
sub
mov
ljmp
dec
or
sub
jno
xchg
pop
jmp
aam
cli
fst
popa
sbb
outsl
out
test
or
addr16
cmp
xor
mov
dec
ja
or
push
sti
leave
icebp
inc
sbb
dec
pop
fidivrs
arpl
xor
data16
cltd
cmp
dec
mov
mov
pop
adc
aam
aaa
arpl
jns
jmp
xchg
fistpl
dec
fsub
mov
xchg
jnp
inc
lods
dec
fnstenv
pop
out
sbb
inc
xchg
cmc
or
push
jg
mov
shrb
call
push
xor
mov
in
lods
stos
aas
pop
sub
xor
out
add
push
inc
ljmp
jge
aaa
ret
mov
xchg
loop
mov
test
cmp
in
or
cmp
mov
mov
mov
sbbl
idivl
inc
cld
pop
xchg
lods
ja
and
add
out
in
and
cld
int3
jp
fstps
pop
sbb
leave
repnz
test
inc
fwait
int3
in
sbb
or
add
pop
xchg
xchg
cs
push
xchg
sbb
mov
mov
and
call
stos
std
push
or
stc
mov
mov
xor
xor
add
dec
popa
loop
xor
cltd
dec
sub
pop
adc
mov
cmp
xchg
subb
adcl
sbb
xchg
dec
lret
not
lods
out
cld
movsb
pop
int
or
xor
movsb
push
mov
call
jb
popa
in
push
mov
cli
add
jnp
adc
push
sub
fwait
ja
dec
sbb
push
inc
xchg
imul
sbb
sti
fidivs
add
add
test
test
lea
repnz
fwait
jle
ja
out
sbb
fldl
lock
aaa
jno
adc
sbb
jge
stos
jnp
mov
jp
pop
and
xor
inc
jle
das
ret
mov
sbb
add
pop
hlt
push
sti
and
std
jmp
mov
out
xor
scas
push
vmovntps
add
xor
mov
pop
jmp
lods
pop
ds
cltd
sub
adc
lret
mov
fistps
xchg
orl
mov
in
js
jmp
xchg
add
dec
bound
roll
jnp
xor
jge
cltd
dec
cltd
xchg
daa
stc
movq
movsl
stos
lock
mov
out
divb
fwait
daa
jle
dec
ss
iret
loopne
pop
xchg
or
loop
jns
sbb
dec
in
mov
pop
rorl
fldlg2
movsb
call
mov
inc
lods
cmpl
out
das
aaa
cmp
jmp
cmp
pop
sub
or
sbb
xor
xor
mov
cmp
jne
jnp
mov
jne
into
clc
out
cwtl
outsb
sbb
mov
dec
add
cmova
shll
test
ret
sub
lock
out
mov
std
jmp
ss
xchg
mov
push
mov
xchg
outsl
bound
adcb
or
aad
int
repnz
ds
mov
pushf
mov
sbb
ja
cwtl
fsubp
jmp
andb
add
les
insl
add
inc
scas
jg
ljmp
scas
adc
sbb
cmp
or
push
mov
xchg
movsl
movsb
xor
dec
xchg
movl
stc
inc
and
imul
push
cmpsb
xor
mov
cmpsl
into
cmp
cmp
dec
sub
cmp
mov
scas
fwait
rorl
mov
pop
incl
dec
popf
out
jp
jg
xor
ljmp
mov
adc
sub
imull
mov
mov
cmp
cmp
int3
gs
or
adc
xor
adc
jo
bound
test
mov
sub
js
clc
in
xchg
mov
push
jno
inc
insl
ret
inc
cwtl
lcall
or
sub
fmuls
inc
js
push
ja
lea
shll
jle
int3
dec
fisubrl
subl
mov
push
in
jne
test
and
insb
fstpt
jo
out
xchg
ja
pushf
xor
js
or
ja
lea
inc
aas
imul
mov
and
or
pushl
fisttpll
icebp
popf
mov
push
pop
xlat
inc
xlat
or
pop
lods
ficompl
test
divb
xor
jne
std
mov
lods
enter
and
and
pop
ss
adc
psrld
pop
xor
je
subl
movsb
stc
test
mov
mov
ja
sub
mov
pushl
lock
cmpsb
into
int
pop
call
cmpsb
jno
inc
icebp
and
jp
in
jne
cmc
add
fwait
jge
mov
imul
jns
mov
jno
fs
test
mov
cmp
sbb
repnz
sub
pushf
imul
test
push
in
lock
push
lahf
mull
fldenv
push
pop
add
arpl
gs
out
insb
pop
in
jg
shlb
jnp
xor
push
pop
cmp
loop
fstps
mov
jno
repz
test
adc
stc
fistpl
imul
shrb
pop
mov
mov
sahf
popf
mov
std
xchg
jb
and
stos
adc
push
push
or
xor
push
daa
lret
sub
xorb
cmp
je
push
movsb
mov
jle
gs
adc
mov
dec
leave
mov
fwait
mov
dec
mov
daa
and
inc
aas
fidivs
jg
andl
repnz
sub
sbb
cmc
sbb
call
and
pop
fnstcw
pop
pop
mov
fcoms
xchg
cwtl
notl
pop
jge
or
xlat
jg
push
popf
mov
in
cmc
imul
cmpsl
or
test
jmp
pop
sub
cwtl
add
shlb
push
xchg
movb
xor
pop
sarl
scas
inc
adc
stos
mov
ljmp
rolb
pop
popf
push
pop
cmpsl
imul
mov
hlt
mov
pop
lahf
sub
xor
sbb
shl
mov
insb
adc
add
xor
dec
jge
inc
cmpsl
mov
cld
adc
int3
inc
mov
lock
xor
out
and
mov
and
cmpsb
lcall
call
jl
lods
outsb
jge
or
pop
jg
mov
or
cld
cmp
xor
sarl
loop
cmpsl
divl
pop
mov
adc
jl
xor
xchg
pop
pop
pop
mov
addr16
int
fucomi
in
pop
pop
cld
push
cmp
loopne
jno
out
xor
loope
push
pop
cli
les
xchg
insb
sbb
mov
xchg
loopne
pop
fimull
jb
scas
and
gs
ja
ljmp
or
push
jb
int3
into
push
mov
test
mov
lahf
cmp
mov
add
pop
xlat
xor
fdivs
inc
xchg
call
pop
cmp
fdiv
arpl
push
jo
imul
dec
mov
es
and
shll
ror
in
leave
push
or
and
push
imul
je
pop
fwait
add
orb
pop
fwait
jnp
cmp
add
in
out
enter
xlat
pop
sbb
fisubrs
lea
sbb
sbb
jl
pushf
sti
les
loope
mov
sub
sbb
pop
mov
mov
push
push
insl
loope
mov
cmpsb
sbb
jne
nop
push
stos
ja
dec
jbe
clc
inc
stos
sub
ret
jo
idiv
arpl
fstps
xchg
ss
popa
fsincos
jle
out
scas
data16
adc
jmp
mov
pop
xor
add
into
int3
inc
or
mov
dec
sub
cmovno
fldenv
scas
icebp
add
jo
lea
aam
out
andb
sarb
ret
iret
loopne
add
in
mov
aad
pushf
mov
add
enter
push
in
cmp
add
cs
fimuls
inc
mov
mov
push
jl
jae
sub
repz
pop
adc
dec
pop
scas
or
pop
push
lcall
pop
mov
pop
inc
xchg
adc
xor
in
push
hlt
aas
jb
fwait
xchg
leave
fldcw
and
xor
pop
in
loopne
sbb
or
sub
test
xchg
repz
and
daa
das
and
xchg
loope
inc
inc
and
lods
jae
mov
mov
in
mov
mov
xor
mov
jl
pushf
cmp
outsb
sbb
unpckhps
or
lret
cmc
mov
jle
jns
xchg
push
pop
insl
xchg
test
int
int3
loopne
lods
dec
imul
mov
lret
cmp
es
xchg
inc
or
sub
add
dec
pusha
stos
xor
bound
jb
mov
int3
iret
in
enter
rcl
shlb
pusha
fsts
mov
jbe
aad
notb
shr
pop
cmp
xor
mov
add
mov
negl
std
addb
push
cmp
mov
push
jp
fs
push
dec
pop
mov
pop
repz
lods
mov
mov
and
es
inc
icebp
xchg
daa
leave
in
leave
fadd
clc
cld
adc
jnp
mov
pusha
xchg
addr16
imul
insb
fsts
sti
nop
rcrl
mov
xchg
xchg
out
into
das
lcall
scas
lods
das
cld
jb
iret
xorb
xor
push
xchg
in
stos
adc
push
fdivrp
sarl
test
mov
push
cmpsl
jge
xor
cmp
push
inc
mov
mov
ljmp
in
jae
dec
sbb
mov
repz
jbe
adc
mov
imul
pop
xor
je
mov
gs
cmpsl
add
outsb
pop
mov
lret
xor
xchg
jl
mov
icebp
cmp
stos
xorb
sbb
and
pop
lods
push
test
ljmp
repnz
out
aas
push
sub
std
jb
int3
lods
and
xchg
enter
loop
clc
out
mov
fwait
mov
fsubrs
std
data16
sti
ljmp
jp
das
addl
adc
ret
addr16
sbb
lcall
aas
out
and
lds
addb
mov
adcl
sub
jecxz
data16
shlb
add
in
pop
pop
jae
mov
jg
xor
jle
inc
decl
xchg
arpl
out
adc
imul
nop
xor
icebp
sub
out
pop
mov
out
adc
mov
ss
popf
push
incl
into
adc
xor
jb
and
loopne
setno
mov
mov
add
push
xor
and
popa
out
xchg
xchg
push
mov
movsl
push
cltd
lret
and
xchg
les
mov
imul
jns
fldt
mov
iret
sub
mov
mov
aad
ljmp
jae
mov
repnz
cltd
jl
dec
xchg
clc
xlat
inc
test
sub
lods
dec
ljmp
push
or
fst
jnp
aad
jo
dec
dec
fildll
mov
cmp
arpl
stc
pop
outsl
loopne
fldl
mov
mov
jg
pushf
xchg
cwtl
hlt
cmp
mov
js
in
jne
mov
push
lret
jbe
xor
inc
stos
out
mov
inc
pop
in
cpuid
cmpsb
inc
xchg
into
add
cmpsb
es
sbb
or
daa
pop
mov
and
hlt
test
call
sbb
mov
xchg
pop
rorl
fwait
cmp
fists
xchg
aas
or
cmp
test
push
mov
dec
in
repnz
insb
gs
fstpl
std
outsl
enter
shlb
pusha
inc
leave
out
xchg
addr16
sbb
mov
lea
inc
xchg
push
dec
insl
xchg
or
clc
xchg
jbe
cwtl
sub
fisttps
jno
and
adc
cmp
xchg
mov
mov
jl
lret
clc
and
sbb
push
shll
jmp
jle
cld
inc
mov
sahf
fsubrs
cmp
push
or
or
test
cmpsb
adc
inc
aaa
or
call
dec
jo
cmpsb
and
sahf
cs
movsb
mov
add
pop
sbb
push
das
jnp
mov
push
bound
loopne
jecxz
aam
sar
loope
sub
dec
mov
mov
movlps
sahf
mov
jge
sub
xchg
bound
mov
cmp
add
xchg
repnz
loope
adc
xor
push
mov
test
test
cltd
inc
sub
pushf
idivl
hlt
sbb
jbe
cs
inc
cmpsb
ljmp
or
and
iret
je
cmp
js
xchg
cwtl
push
and
inc
inc
sub
sbb
mov
shlb
in
xchg
cmpsb
xchg
cmp
idivl
or
lahf
fnstenv
icebp
mov
sbb
push
sbb
jl
mov
in
mov
das
adc
adc
mov
fstl
lds
lods
xor
flds
stos
loop
ficoms
rorb
roll
pushf
cli
dec
fsubl
push
xor
pop
clc
and
inc
mov
xchg
es
iret
mov
mov
pop
add
add
decl
arpl
add
jno
shl
mov
loop
imulb
shrl
in
aad
iret
xor
dec
jge
jnp
jp
sti
xor
mov
dec
mov
add
ljmp
cld
and
jo
imulb
idivb
js
hlt
push
push
sub
add
jg
pop
data16
fcmovu
inc
adc
hlt
adcb
lods
lcall
cmp
xor
mov
into
or
cmp
xchg
adc
sahf
ljmp
add
mov
mov
and
popa
push
andb
in
dec
mov
jmp
fs
cmp
repz
rcrb
or
jle
push
fsubs
push
das
cmp
pop
or
stos
dec
push
nop
aam
cwtl
mov
cmpsl
in
push
stos
sub
pop
or
dec
imul
fdivrl
adc
imul
inc
xor
fmull
jbe
sbb
jp
mov
mov
inc
jg
popf
mov
xchg
mov
lret
mov
cld
enter
and
adc
xor
jnp
jmp
push
int3
dec
incb
sbb
mov
inc
sbb
mov
sbb
pop
inc
xor
or
sub
and
inc
insl
imul
sahf
adc
out
sub
stos
adc
lcall
shr
push
in
repz
add
and
xchg
cmp
daa
mov
out
lock
dec
sub
aaa
cwtl
pop
xchg
jno
xor
ja
xchg
scas
jecxz
iret
mov
rcll
ljmp
xchg
inc
insb
pushf
cmp
scas
mov
loopne
adc
jb
mov
sbb
mov
adc
fldt
lret
sub
jp
js
mov
sbb
inc
mov
pop
mov
dec
fwait
xor
call
adc
jl
into
lods
mov
scas
cmpsb
sbb
mov
cmp
cmp
idivb
mov
lods
xchg
mov
push
add
xor
jns,pt
cmp
add
in
add
mov
ret
les
xor
push
imul
icebp
cmp
mov
lock
repnz
inc
jne
daa
push
imul
ljmp
sbb
loopne
fistpll
out
shrl
aad
mov
addr16
xlat
sbb
xchg
mov
icebp
xchg
pop
mov
mov
sbb
lahf
scas
adc
mov
mov
mov
fsubrs
push
std
stos
jb
sbb
scas
or
jno
push
xor
ficoml
dec
sbb
fiaddl
xor
cmp
dec
lahf
inc
adc
jno
lods
dec
arpl
les
movsb
frstor
rclb
sub
lret
lea
cmpsl
mov
loope
pop
sarb
mov
lret
fs
inc
insb
and
and
hlt
xchg
sub
jge
cmp
addb
mov
sub
pusha
cltd
and
lahf
sbb
xor
adc
mov
into
push
rcll
es
aaa
push
lret
cmp
dec
push
add
jg
cs
stos
andl
out
cmp
jo
mov
or
movsb
mov
inc
push
or
pop
dec
inc
repnz
pop
inc
nop
pushw
leave
in
lds
out
sbb
mov
add
mov
pusha
pop
gs
repnz
cmpsl
cltd
cmpsl
test
cmc
sbbb
cmp
dec
cmp
out
jne
test
and
xchg
add
xor
ljmp
test
sbb
mov
int
xchg
fnstsw
lea
out
popf
pushf
jne
ja
es
addr16
shrl
inc
js
test
sbb
pop
xorb
cld
outsb
pop
mov
test
mov
shrl
mov
cmc
adcb
mov
lods
outsb
pop
mov
or
xchg
sub
mov
mov
fwait
cmp
pop
xor
lods
sbb
arpl
sub
out
ja
fcompl
lret
lahf
icebp
neg
pop
int
aad
ret
test
gs
rcrl
fsubrs
xchg
es
dec
fldenv
leave
dec
ss
mov
pop
jbe
cwtl
pushf
loope
cld
or
fcompl
mov
add
push
mov
xchg
mov
jae
out
rclb
mov
pop
pop
cwtl
jge
push
mov
data16
mov
sub
cwtl
lcall
jno
lea
mov
test
out
mov
jl
ja
cwtl
loop
fnstenv
or
dec
gs
outsl
stc
jp
pop
jns
pop
je
push
pop
sahf
test
popf
xor
cmpsl
ja
adc
test
inc
repz
shl
adc
ret
enter
add
stc
les
aam
push
fwait
hlt
add
scas
mov
imul
rcrl
in
pusha
jmp
movsb
mov
movsb
seta
mov
mov
scas
xor
idivb
fisubrs
jo
popf
jmp
xchg
sbb
nop
inc
das
push
pushf
and
fistl
sub
aam
mov
cmovs
nop
popa
pop
testb
orb
jecxz
dec
icebp
add
cmp
or
popf
jne
xchg
lret
out
test
ret
or
divl
iret
push
movsb
mov
test
fs
mov
or
push
jp
mov
sub
adc
push
es
test
xor
push
mov
add
mov
aam
fildl
pop
mov
pop
add
sbb
psubb
sbb
inc
xchg
inc
mov
aad
xchg
jmp
sub
mov
test
push
push
pop
push
imul
in
push
fdivs
in
repnz
mov
int
jmp
or
movsl
xchg
rorl
sbb
scas
push
jecxz
xchg
xor
aaa
bound
mov
test
mov
leave
add
rcr
fs
sbb
loope
inc
and
adc
int
mov
lods
movl
xor
lcall
scas
shll
sbb
mov
je
roll
sti
into
ljmp
mov
pop
test
cs
sub
fs
pusha
dec
xchg
insb
inc
fsubrs
mov
mov
movd
scas
inc
je
mov
sub
mov
insb
sub
loope
stos
mov
xchg
idivb
push
daa
adc
repz
cmp
push
inc
or
push
dec
shl
sub
xor
mov
sbb
sbb
aam
lods
fdivr
push
xorl
mov
je
mov
xchg
add
popa
lds
in
and
outsb
xorl
pusha
and
testb
inc
sti
or
sub
sbb
das
arpl
icebp
lods
movsb
sahf
out
ss
jb
sub
sub
inc
test
sbb
addr16
pop
rcrb
jb
bound
hlt
and
jae
sub
sarl
lahf
lods
lock
rorb
or
sbb
jmp
push
and
rorl
daa
lahf
out
adc
dec
lods
inc
aaa
jno
mov
mov
int3
jle
sub
jns
daa
cmp
fisttpl
lods
loope
fcoms
push
mov
shll
les
fsubl
push
pop
out
inc
popa
jo
pop
jge
cld
loop
stc
scas
jne
subb
pop
mov
mov
mov
in
imul
lcall
sbb
mov
ljmp
repnz
scas
cmp
sub
and
pop
repnz
inc
mov
out
stc
test
or
imul
push
inc
jmp
mov
inc
xchg
lock
mov
sub
in
in
push
insb
daa
mov
cwtl
add
dec
lods
mov
les
popa
sbb
movsl
pop
jp
call
bt
les
imulb
testb
scas
or
repnz
pop
xchg
mov
jmp
xchg
dec
aad
outsl
pop
aas
pop
arpl
ud2
dec
adc
fsts
xor
push
outsl
xor
les
pop
jnp
and
andb
mov
lahf
lret
and
cmp
fistpl
mov
or
pop
leave
mov
xchg
ret
and
js
js
nop
enter
cmp
loopne
test
repnz
scas
sub
add
test
xchg
ss
leave
push
repz
dec
sub
out
xchg
out
mov
pop
adc
insl
sbb
mov
pop
aas
mov
mov
test
out
cmp
pusha
mov
fcmovnbe
iret
inc
xor
imul
scas
mov
sub
jae
jo
stos
xor
mov
mov
clc
push
pop
sarl
pop
cmc
movb
cmp
shl
add
repnz
sub
dec
cmp
aam
or
jbe
inc
aaa
inc
ja
jne
sarl
jno
std
je
jmp
lds
xchg
adc
dec
std
pop
or
lds
hlt
int3
dec
scas
cmc
aaa
xchg
test
inc
pop
cmp
or
xor
call
sarl
lea
jmp
xchg
pop
call
cmpsb
mov
jecxz
push
inc
in
lret
outsb
test
mov
clc
sbb
pop
int
dec
mov
popa
scas
mov
add
dec
push
push
adc
cltd
push
xlat
mov
jp
cmp
adc
rcl
xchg
mov
mov
pop
xchg
out
test
push
push
pushf
gs
sbb
inc
dec
mov
sbb
nop
pushf
jns
xlat
insb
cld
push
jmp
adc
daa
test
or
dec
sub
into
inc
ljmp
or
ja
mov
fcmovu
dec
inc
daa
shrb
les
add
pop
mov
int3
call
icebp
bnd
outsb
inc
gs
sbb
dec
push
inc
cmc
push
or
push
fsts
inc
push
test
divl
das
and
add
lret
lret
pop
jo
sahf
sub
ja
out
adc
pop
xchg
jmp
ds
push
not
mov
push
ss
ret
outsb
and
adc
mov
mov
push
mov
popf
cmp
sbb
jnp
mov
int3
mov
push
rcr
movsb
xchg
clc
lcall
sahf
cmp
stc
add
stos
outsl
sbb
mov
dec
popa
xor
ljmp
mov
or
mov
loop
pushf
test
inc
sbb
inc
add
sub
pop
cmp
fisubl
insl
jp
inc
cmp
or
shlb
subb
and
test
mov
repnz
sarl
das
fucomip
cmp
cld
mov
clc
jb,pn
sub
dec
into
cs
test
pop
or
jl
add
dec
inc
sub
pop
jecxz
pusha
push
jnp
insb
sbb
sbb
add
lea
popf
push
sbb
pop
outsl
call
mov
or
add
loop
ja
mov
sub
sahf
and
jl
stos
inc
pop
adc
jl
ds
scas
insl
sub
call
movsb
ja
mov
fsubrl
mul
push
es
std
fisttpl
push
lret
hlt
jmp
push
loop
mov
pushf
xchg
cli
shrl
add
adc
or
lds
and
ret
xor
mov
cmp
sbb
pop
fmuls
and
or
test
sbb
mov
fists
les
lahf
loopne
std
and
xlat
ljmp
or
pop
dec
sbb
xor
in
fistpll
call
inc
sub
pop
pop
jl
push
cmp
fdivrs
mov
jl
pop
cld
sbb
stos
mov
inc
xlat
mov
mov
jg
mov
cmp
mov
mov
jmp
add
jle
into
push
ss
dec
lds
repz
mov
pop
imulb
sbb
es
cli
fdivs
and
and
dec
pcmpgtb
iret
loopne
popf
xor
mov
mov
and
ljmp
daa
xchg
stc
repz
sbb
jns
push
mov
out
fdivrp
xchg
fidivrs
test
pop
xor
and
loopne
jo
mov
daa
push
lock
mov
push
insb
imul
shr
pop
add
lcall
pusha
call
jle
mov
lret
push
fxch
inc
out
mov
sbb
pushf
mov
scas
stc
mov
and
xchg
push
int3
sbb
inc
cmp
lahf
insb
int
cld
ds
sub
movsb
fdivs
cltd
xchg
cmc
das
imul
and
outsl
ficompl
vmaxps
adc
int
add
push
test
loop
mov
out
mov
adc
add
xchg
clc
in
jns
cltd
test
mov
out
test
jns
mov
adc
xchg
das
jmp
xchg
or
xchg
das
loope
sub
sub
or
inc
jne
xchg
mov
fsubs
je
cli
add
mov
in
popa
xchg
jmp
shlb
int3
xor
dec
repnz
in
loop
in
lret
pop
popf
pop
jno
sub
lcall
mov
les
stc
popa
jbe
mov
push
pusha
pop
pop
pop
xorl
mov
icebp
stos
pop
jle,pn
jns
push
xchg
jecxz
push
jmp
push
shlb
test
mov
jb
fimuls
js
dec
push
insb
inc
lret
iret
enter
mov
add
sbb
movsb
mov
sub
cltd
andb
out
bound
sub
stos
pop
mov
hlt
fdivrs
or
sub
inc
sahf
add
out
xor
mov
jnp
xchg
in
mov
push
xor
loop
sarl
outsl
adcl
negl
jp
xor
jle
out
and
aaa
data16
out
pusha
sti
ds
inc
or
mov
push
inc
mov
cld
jnp
scas
hlt
xor
rolb
push
pop
mov
frstor
mov
and
shlb
jge
adc
testb
and
ljmp
pop
loope
fisubrl
inc
xchg
je
sub
ds
sub
cltd
mov
ret
adc
out
inc
xor
inc
mov
sub
jbe
loopne
addr16
ljmp
inc
ljmp
xchg
cmp
inc
pop
gs
add
es
lea
adc
dec
hlt
jb
sbb
imul
adc
sub
dec
pop
jp
loopne
inc
cmovne
xchg
pop
repz
or
jae
xchg
subl
shll
ja
mov
cmc
mov
adc
jbe
ljmp
stos
jbe
or
jo
lcall
aas
cmpsb
inc
jge
das
fcoml
xor
add
repnz
stc
js
jae
in
cmp
pop
xchg
xchg
sub
pop
out
outsb
mov
sub
shrb
add
jnp
mov
or
pop
out
push
movsb
jp
andl
cmpxchg
mov
enter
push
pop
inc
adc
mov
sbbb
mov
inc
push
inc
dec
cmpsb
sar
mov
jp
inc
mov
movsl
jle
dec
int3
pusha
test
ljmp
in
aam
decl
and
push
adc
test
inc
or
inc
mov
dec
ja
adc
dec
inc
inc
shlb
cli
faddl
outsl
out
sub
push
repnz
mov
in
or
cmc
dec
dec
push
insl
clc
das
pop
mov
add
pop
mov
test
add
mov
clts
rol
or
stc
xlat
les
adc
mov
pushf
mov
inc
in
jg
push
in
mov
pop
adc
mov
pop
cld
fwait
cmp
mov
and
mov
arpl
mov
andl
out
dec
ret
idivl
in
outsl
mov
addl
repz
lcall
jmp
xchg
jne
and
cmp
mov
xchg
insl
pop
push
scas
jg
iret
cmp
imul
xor
addl
int
mov
test
mov
dec
xchg
incb
adc
add
mov
es
push
loope
pop
sbb
cli
push
or
lods
sub
out
jne
dec
xor
mov
lock
dec
sti
and
add
mov
pop
pop
shll
cmpsl
mul
lahf
xor
into
cltd
mov
push
outsl
pop
add
aaa
cwtl
cli
and
jae
das
cwtl
lea
and
sbb
inc
adc
fimull
mov
stos
inc
cmpsb
pavgb
inc
xchg
outsb
mov
loop
fs
jne
insl
jp
and
pop
push
cli
pop
mov
test
ret
xchg
fwait
xor
and
inc
add
pop
addl
movsl
cmp
ror
xchg
fcmovnu
fsts
int
pop
dec
stos
sbb
aam
pop
ds
in
frstor
sbb
aaa
pop
jecxz
or
dec
adc
adc
mov
push
sbb
mov
inc
mov
dec
dec
int
dec
pop
shlb
inc
and
stos
data16
adc
jo
push
or
scas
test
fs
cwtl
cmpl
mov
sbb
stos
inc
add
cmpsl
lds
mov
int
push
test
aad
popf
loope
dec
xor
nop
and
in
dec
out
arpl
popf
ret
sub
jp
shrd
pusha
lock
xchg
insl
enter
shll
adc
icebp
sbb
dec
in
inc
jmp
iret
das
lret
mov
roll
cwtl
fcmovb
hlt
add
test
in
pop
or
and
lea
out
push
xchg
popf
out
jecxz
xchg
inc
mov
lods
xchg
es
je
sahf
sub
div
aas
cmp
push
mov
sub
xor
lret
add
popa
test
loopne
fidivs
ficompl
pusha
out
mov
xor
xchg
cs
xchg
dec
sarl
inc
pop
sub
in
xor
pop
sub
lcall
adc
adcl
fadds
mov
outsb
dec
push
fildl
inc
in
inc
jno
addb
out
movsb
pop
lods
fildll
mov
xorl
adc
sbb
aaa
cmp
add
pop
and
fwait
stos
fidivs
test
dec
pop
shl
adc
push
movsb
mov
sub
sub
add
jb
adc
addb
and
test
ds
das
mov
ret
xchg
and
xor
pop
push
cmp
inc
int3
mov
jb
test
ret
scas
sub
enter
movsl
mov
leave
movsl
imul
js
scas
push
cmp
cld
fldt
test
outsb
mov
xor
mov
pop
push
sahf
mov
inc
insb
or
subb
popf
sbb
pop
jg
sub
push
fldenv
sti
sbb
fnstenv
lcall
cwtl
xchg
mov
sub
je
add
inc
inc
dec
lret
bound
inc
cli
ss
sub
orl
cmc
stos
mov
movsb
mov
sbb
rol
addr16
aad
lret
xor
push
scas
cmpsl
icebp
test
adc
lock
dec
pop
adc
jae
fwait
jge
test
andl
lcall
push
or
pop
sbb
mov
mov
xor
xchg
push
call
mov
outsl
jne
rorb
imul
xor
adcb
imul
stos
fwait
mov
and
call
lret
and
out
jecxz
insl
je,pt
call
sub
outsb
rcrl
cmp
rcrl
outsl
sarl
inc
cmp
call
sahf
fcoms
int3
push
jecxz
sbb
sbb
notl
and
xchg
mov
leave
mov
add
mov
sub
into
sub
inc
adc
enter
dec
dec
sbb
shlb
stos
push
dec
sahf
mov
popa
movl
xchg
mov
inc
enter
sti
jl
push
orl
stos
lret
out
data16
ror
mov
enter
hlt
adc
add
cmp
insl
or
mov
arpl
pusha
jnp
ja
insl
mov
inc
mov
popa
jae
clc
push
xchg
xchg
int
adc
cmp
mov
outsb
mov
sub
ret
mov
dec
mov
dec
ja
in
mov
jp
hlt
stos
and
cmp
jb
cmpsl
je
psubsw
fnstsw
or
pop
mov
fadds
call
push
ret
loopne
jl
pusha
in
inc
decb
cmc
or
das
iret
push
shlb
test
outsl
sti
and
jns
jg
mov
cld
cmp
xor
xchg
call
mov
mov
jne,pt
dec
gs
popa
add
xchg
cmp
push
bound
fldenv
mov
popa
out
mov
stos
cld
dec
fsubl
out
mov
sti
cmp
and
into
sub
push
movsb
cli
stos
out
cmp
cs
je
mov
cmpl
xor
ret
jno
or
insl
xor
in
fbld
xor
addl
pop
xchg
dec
xchg
sub
xchg
cmp
xchg
fsub
sub
jl
or
cmp
adc
test
pop
pop
repnz
add
fwait
inc
stc
ljmp
pop
add
mov
sbb
mov
ficoml
mov
xchg
testl
push
xchg
sub
inc
stos
jecxz
lcall
orb
data16
fisubrl
mov
inc
and
mov
enter
cld
das
fs
test
dec
dec
outsl
mov
dec
pop
xchg
mov
dec
fildll
pop
ret
pop
stc
mov
or
push
dec
addr16
add
insl
lock
dec
outsl
test
fsub
repz
xchg
sbb
movsb
adc
dec
into
hlt
push
rcll
sub
dec
loopne
dec
or
iret
add
mov
dec
jo
push
popf
adc
ss
xor
pop
sub
cmp
mov
or
in
lret
sbb
and
lahf
imul
push
lds
ja
cli
into
push
ret
aas
mov
pop
mov
fcmovne
imul
movsb
cld
insl
pop
dec
pop
xchg
sbb
dec
rolb
mov
rol
cltd
movsl
es
sbb
mov
rcrl
dec
movl
dec
call
loope
lock
lock
lods
adc
lods
sahf
dec
dec
lds
inc
push
cwtl
or
adc
adc
push
scas
cmp
out
ljmp
xcrypt-ecb
cmpsl
dec
xchg
cmp
movsl
adc
xchg
jg
xor
mov
cmp
sarb
dec
push
movsl
sahf
jnp
push
inc
lods
sub
sub
or
cmp
or
aaa
je
roll
inc
xchg
add
cli
sarb
add
pop
jge
repnz
in
fs
sbb
jge
je
mov
out
stos
mov
mov
pop
popl
loop
call
inc
or
push
shrl
cmp
sbb
xor
aad
int3
aam
jne
xor
insb
inc
cwtl
sarl
lea
aas
mov
mul
scas
rcr
aad
mov
xchg
or
jl
aam
sbbb
pop
xor
mov
xor
into
int3
adc
mov
mov
fistps
pop
int3
repnz
mov
sbb
nop
lea
popf
cmc
rclb
enter
dec
adc
data16
inc
xor
jmp
mov
xchg
mov
pop
sbb
mov
xchg
fcoms
sbb
rclb
lahf
mov
mov
cs
scas
add
pop
je
or
push
into
jg
gs
addr16
xlat
mov
out
sbb
data16
insl
cmpsl
jmp
je
repnz
fldcw
aas
lret
movsb
cltd
insl
int
cwtl
into
ret
fst
pushf
addr16
xor
or
lahf
daa
mov
sub
adc
lret
test
mov
mov
out
cmp
fwait
dec
loope
sbb
mov
gs
out
xchg
push
andb
push
loope
js
sbb
in
test
or
cmp
lahf
dec
loopne
add
pop
or
addr16
bnd
shll
popf
cltd
push
adc
ret
sub
add
dec
aam
push
or
xchg
movsb
flds
cli
data16
movsb
int3
sub
inc
jg
cmp
xchg
ds
fldenv
push
arpl
mov
and
out
icebp
nop
rcll
ror
xor
call
inc
hlt
dec
scas
adc
or
cwtl
xor
sub
ljmp
add
andl
out
xor
cmp
push
fwait
push
out
cmpsb
xor
mov
stc
cli
jecxz
es
daa
xchg
pushf
add
scas
mov
test
mov
lods
out
mov
xor
ucomiss
pop
mov
dec
lock
call
mov
pop
xchg
sahf
insl
xlat
adc
scas
or
dec
std
not
xor
pushf
mov
addl
rclb
filds
std
inc
dec
adc
xchg
sub
adcb
mov
inc
repz
pop
jge
aad
cld
popaw
call
xchg
lods
bound
sbb
movsb
ret
sbb
ljmp
in
or
cmp
mov
or
jle
cld
stos
out
or
jns
sub
or
mulb
pusha
dec
test
cmc
aad
add
pop
leave
cmpsl
popa
imulb
mov
insl
in
scas
or
in
xor
sub
imul
lds
ss
sub
rcrb
aad
pop
mov
js
or
repz
fnstsw
adc
xchg
cmp
aam
jo
dec
sub
adc
and
sbb
jmp
pushl
jp
pop
pop
out
pop
hlt
sbb
dec
xor
adc
sbb
imul
fwait
push
test
add
pop
loope
mov
rcll
jl
mov
jge
neg
data16
icebp
cmp
or
pop
or
mov
int
adc
popf
sbb
in
push
imul
cmpb
mov
je
pop
mov
push
push
or
and
xchg
aaa
adc
adc
popa
sahf
and
fucomp
push
push
mov
xchg
dec
adcl
into
or
clc
inc
add
imul
lea
or
sub
dec
pop
mov
out
int
jecxz
int3
xor
push
sub
push
incb
push
or
mov
addr16
int3
mov
and
dec
ret
in
inc
adc
movsb
std
dec
dec
push
out
movl
or
push
rolb
mov
xchg
stc
pop
sbb
pop
outsb
in
sbb
scas
push
lds
cltd
gs
leave
xchg
push
jno
lods
mov
push
mov
popa
inc
stc
shr
jmp
call
adc
or
sbb
jmp
loop
iret
shlb
inc
xchg
cmp
lahf
mov
xlat
adc
test
mov
fiadds
inc
movsb
lods
dec
mov
xchg
mov
fidivs
popf
dec
cmovg
jae
push
fcomps
jmp
xor
add
push
cmpsl
jnp
ss
lahf
sbb
inc
popa
aaa
out
jo
push
inc
cmp
jbe
lcall
push
push
push
xchg
or
scas
mov
jb
pop
sbb
mov
aaa
mov
aas
roll
xor
sbb
test
pop
fwait
lret
pop
dec
testl
push
xor
lret
dec
cmc
pop
inc
sbb
rolb
add
scas
hlt
push
lret
aaa
adc
ja
repz
cmpsb
xor
out
sub
cltd
jne
xor
fcomp
mov
xchg
push
aaa
loopne
cmp
mov
lea
push
pop
mov
outsl
push
jb
call
mov
dec
jb
mov
sbb
int3
pop
not
inc
mov
idivl
sbb
call
test
repz
scas
jno
outsl
mov
xchg
or
shrl
inc
xlat
xor
loop
mov
jle
cmp
xchg
std
sub
sti
pop
push
neg
shlb
push
leave
and
mov
in
outsl
cli
mov
gs
or
cmpsb
push
aad
cli
adc
fmulp
scas
inc
and
popf
cmp
popf
jb
orl
mov
popf
or
gs
add
pop
mov
movsl
outsl
adc
leave
or
pop
andb
sub
repnz
or
sub
loope
std
or
xchg
fs
out
adc
mov
inc
je
xor
and
sbb
mov
push
xor
push
pop
cmp
fwait
xchg
push
xchg
jns
sub
or
shll
iret
dec
push
enter
scas
out
inc
add
test
sub
icebp
dec
jb
arpl
mov
sbb
repz
inc
pop
mov
loop
fs
lcall
dec
mov
rcll
punpckhdq
mov
int3
sbb
lds
xchg
icebp
inc
sub
cmpsl
xlat
or
mov
pop
or
ret
roll
add
int3
scas
xor
and
loope
ss
adc
shl
adc
jl
xor
mov
adc
fdivs
flds
fsubl
sbb
mov
out
imul
idivb
inc
cmpsl
or
das
fndisi(8087
hlt
lods
rclb
cmpl
les
imul
loop
iret
jle
cld
cld
push
cltd
cli
lret
ret
jecxz
loopne
cmc
imul
psubd
lock
add
jo
or
adc
fnstcw
add
adc
xor
notb
mov
push
dec
aas
fistps
sub
xorb
lock
adc
inc
sub
add
or
mov
add
push
rcrb
push
cmpsb
pop
shl
pushf
out
ja
cs
mov
and
sbb
addr16
pop
mov
ja
xchg
xor
xchg
aas
test
orl
dec
icebp
popa
xchg
mov
push
adc
int
rclb
add
mov
or
insl
push
add
sbb
inc
negb
adc
dec
in
scas
outsl
repnz
frstor
nop
push
mov
gs
or
mov
pop
mov
xor
scas
xchg
push
stc
lock
out
sahf
jecxz
stc
and
leave
movsl
jge
or
sarb
stos
inc
add
push
xchg
or
ss
add
mov
push
icebp
cs
or
loope
dec
xchg
ffree
jmp
push
test
pop
cmc
lret
leave
inc
into
dec
cmp
push
adc
rcll
int3
adc
and
in
dec
adc
ret
jg
push
push
imul
lahf
test
test
jo
mov
push
push
push
xor
mov
outsl
xchg
das
enter
leave
sub
xchg
jns
pushl
outsb
cmpsl
mov
mov
xchg
hlt
cs
pop
mov
adc
xlat
push
leave
lds
subl
inc
lret
scas
inc
sub
pop
push
inc
aaa
addl
gs
insl
lea
es
popf
xor
scas
loope
dec
push
jns
test
dec
test
xchg
pop
in
sahf
jmp
out
sbb
mov
sbb
jae
lods
xchg
fs
mov
or
mov
and
test
scas
sbb
or
sub
push
pop
push
scas
addl
xchg
or
movsb
mov
in
push
xor
mov
and
inc
scas
outsb
cwtl
div
jecxz
inc
xchg
pop
cmc
jmp
xchg
js
sub
cmpsb
push
mov
das
loop
jbe
pushf
movsl
scas
fnsave
cs
std
xchg
or
fidivs
or
adc
std
mov
dec
mov
pop
fdivrl
cltd
lret
stc
cld
das
jo
fsubrs
leave
inc
cmp
fs
inc
cmc
lock
es
xchg
ret
addr16
jge
aas
push
mov
inc
mov
pushf
jb
nop
ds
fstpl
scas
fstl
sub
iret
dec
in
arpl
nop
or
insl
fcomps
push
sti
mov
or
and
out
out
xlat
repz
fildll
sbb
das
xlat
sbb
mov
mov
outsl
push
lahf
add
cwtl
jne
mov
pop
adc
mov
scas
sub
mov
ficompl
je
sbb
aaa
ja
jns
vphadduwd
jg
jb
cltd
inc
out
push
push
mov
cmpsl
pop
dec
cmp
aaa
test
cmp
les
pop
xchg
mov
pusha
dec
xlat
mov
clc
inc
popf
shlb
out
rorl
cli
cmpsl
loop
sbb
jo
insl
stc
xor
js
dec
ficomps
cmp
or
iret
push
ret
sub
pop
lahf
nop
xor
leave
cmpsb
fstps
testl
iret
orl
rorb
cld
je
jg
sarb
stos
int3
jbe
add
popf
lods
in
inc
xor
sbb
add
dec
mov
cmp
pop
loopne
jo
pop
ja
aas
cmp
int3
and
cmp
push
pop
xchg
sub
cmp
repz
xchg
imul
lcall
in
sub
cmp
pusha
and
lods
cmp
inc
xchg
imul
jnp
push
mov
cmp
fbstp
cmp
adc
or
mov
or
sbb
test
in
jnp
test
aaa
mov
jle
fcomps
jge
outsl
test
ss
dec
cld
int3
push
xchg
jle
jg
loopne
dec
popa
mov
push
das
sbb
scas
adc
push
pop
movsl
push
ret
rcrb
push
mov
push
sahf
or
and
jg
pop
outsb
xchg
dec
mov
xchg
cmp
push
roll
leave
out
adc
xorl
mov
inc
lock
popa
outsl
cs
xchg
mov
fstpt
sarb
and
xor
xor
repz
mov
mov
xor
add
mov
sub
pop
testb
jno
adc
jb
sbb
push
rcrl
push
xchg
pop
mov
sub
ret
fwait
in
mov
xchg
sub
xchg
in
mov
loope
pop
mov
scas
push
adcb
call
inc
cmp
mov
into
jno
xlat
rorb
sub
test
mov
mov
jecxz
xlat
jmp
mov
sbb
cmp
mov
mov
fs
or
out
add
cli
pushf
cmc
stc
xorb
xor
imul
ret
fwait
out
popf
or
inc
add
arpl
add
ret
sub
add
add
push
loopne
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
shlb
inc
add
add
add
add
js
inc
add
add
add
add
add
add
and
adc
add
clc
pop
inc
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
inc
add
add
add
pop
inc
add
add
add
push
inc
add
add
mov
inc
add
add
mov
add
add
add
add
add
add
add
add
add
