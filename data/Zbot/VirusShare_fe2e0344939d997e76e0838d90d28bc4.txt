add
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
shlb
pop
add
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
mov
mov
push
mov
addl
pop
sub
xor
push
pop
cmp
je
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
add
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
jo
add
and
add
and
add
and
add
and
add
add
call
and
add
and
add
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
add
add
add
xor
add
pushf
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
dec
and
add
add
add
add
and
add
and
add
and
add
and
add
add
call
and
add
and
add
add
and
add
and
add
and
add
and
add
add
cwtl
and
add
add
add
add
add
xor
add
pushf
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
fs
imul
add
lock
imul
jb
je
arpl
movb
gs
jne
jb
outsb
je
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
imul
je
imul
push
add
adc
push
gs
insl
gs
push
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
add
outsb
fs
je
insl
inc
add
add
popa
jo
jb
add
aad
inc
gs
gs
inc
imul
insb
jae
gs
popa
insb
jne
add
popa
je
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
mov
jo
outsb
fs
push
add
add
je
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
jb
arpl
jae
gs
imul
gs
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
je
jb
jbe
je
push
jb
imul
push
add
push
dec
inc
dec
xor
cs
insb
add
or
inc
push
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
je
jo
jo
outsb
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
inc
inc
inc
push
push
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
xor
add
or
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
or
add
addb
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jp
jnp
lods
lods
lods
add
test
push
mov
mov
mov
ret
leave
lret
int3
int3
int3
rcl
in
rcl
shl
rcl
shl
int3
int3
into
hlt
mov
out
mov
in
mov
mov
stos
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
lret
leave
not
rcl
cld
xlat
xlat
std
xlat
fdivr
xlat
xlat
aad
aam
rcl
iret
dec
int3
int3
aad
aam
rcl
sar
ret
std
mov
mov
scas
iret
movsl
movsb
movsl
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
lods
lods
sbb
mov
jnp
mov
mov
dec
lret
ror
sar
aam
xlat
xlat
fdivr
call
dec
int3
int3
dec
int
call
aad
int3
int3
into
inc
rol
mov
mov
scas
std
cmpsb
test
ljmp
push
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
or
or
sbb
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
leave
leave
dec
int3
int3
call
rcl
fcom
call
fcomp
call
aad
dec
int3
int3
dec
lret
lret
int3
int3
inc
sarb
pushl
cmpsl
cmpsl
jmp
cltd
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
imul
pop
pop
pop
fs
sbb
push
sub
push
push
xor
aaa
aaa
aaa
cmp
cmp
adc
pop
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
inc
enter
rcl
call
aam
aad
aam
rcl
sar
enter
ret
mov
mov
scas
scas
scas
jmp
sahf
popf
xchg
xchg
cwtl
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
outsl
xor
jle
jle
jg
jb
jb
popa
arpl
push
push
dec
xchg
cmp
lea
inc
mov
outsb
outsb
outsl
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
leave
lret
lret
dec
leave
enter
ret
mov
mov
ljmp
movsb
mov
call
xchg
xchg
xchg
cwtl
xchg
lcall
lahf
aas
cmp
push
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
jo
pop
pop
pop
or
jnp
nop
lea
incb
jnp
idivb
jl
jo
jo
push
push
jne
jge
jle
jns
jns
gs
inc
cmp
sbb
sbb
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
nop
incl
addl
xchg
xchg
xchg
mov
mov
cwtl
mov
js
js
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
cmpl
sahf
fwait
sahf
in
mov
mov
addl
mov
xchg
jle
jo
jo
jne
jae
jge
jg
test
xchg
data16
cmp
es
push
jle
jle
lcall
shrb
stos
lods
sti
lods
lods
lods
stos
stos
stos
test
movsl
movsb
std
cltd
lcall
xchg
jge
jp
js
jl
jns
mov
xchg
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
femms
or
dec
imul
test
leave
lcall
out
lcall
std
mov
mov
mov
mov
lea
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
scas
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
sahf
pushf
pushf
std
movsb
mov
mov
in
nop
xchg
in
xchg
push
jne
or
add
inc
es
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
lea
call
mov
test
lods
test
pushl
cmpsl
lods
mov
xchg
test
roll
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
les
pushf
incl
mov
call
xchg
xchg
xchg
popf
sahf
pushf
movsb
mov
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jno
jne
jl
jg
test
mov
mov
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
ss
mov
jbe
mov
movsl
mov
mov
mov
lods
lods
stos
mov
mov
add
pop
pop
adc
mov
ljmp
pushf
decl
xchg
call
xchg
xchg
call
xchg
cwtl
lcall
sahf
lahf
sahf
movsb
movsl
mov
stc
cwtl
cwtl
lcall
xchg
xchg
les
cltd
in
xchg
cwtl
out
lea
stc
xchg
test
std
xchg
jae
fwait
push
cmp
push
cmp
inc
jnp
mov
jp
mov
jae
mov
outsl
ljmp
pcmpgtw
lods
or
ljmp
jle
mov
mov
stos
pushf
movsb
movsl
movsb
and
add
shll
xchg
xchg
jge
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
popf
lcall
popf
popf
call
xchg
cwtl
call
xchg
xchg
call
xchg
cltd
cld
cltd
cltd
popf
stc
lahf
cltd
mov
cld
pushf
mov
xchg
insb
xchg
xchg
push
jg
xchg
dec
jp
fwait
cmp
imul
and
lahf
pop
jmp
ljmp
pcmpgtd
lods
pcmpgtw
scas
adc
mov
push
mov
push
mov
insb
mov
fwait
scas
mov
lods
lods
scas
movsl
movsl
movsl
sub
movsb
movsl
movsb
add
pop
pop
adc
mov
ljmp
sahf
call
sahf
popf
jmp
movsl
movsl
jmp
mov
decl
mov
mov
xchg
jbe
fwait
jb
fwait
arpl
call
cs
decl
pop
call
add
pop
lcall
pop
pop
ljmp
sbb
mov
insl
pushl
pop
outsb
mov
and
and
shlb
inc
inc
test
ret
mov
scas
lods
mov
sahf
lahf
lahf
add
add
add
add
mov
scas
add
pop
adc
lods
mov
mov
lcall
movsb
movsl
movsl
jmp
cmpsb
cmpsb
ljmp
test
lcall
orb
mov
decl
sub
mov
pop
incl
add
incl
add
lea
pop
call
add
lcall
jmp
push
outsb
pushl
sub
mov
sub
inc
sub
jge
leave
xor
dec
inc
mov
scas
mov
mov
lret
movsb
dec
mov
movsb
movsl
add
push
push
adc
test
ljmp
popf
jmp
test
ljmp
lods
lods
pushl
scas
lods
jmp
mov
xchg
arpl
test
push
incl
pop
push
incl
push
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
cmp
inc
cmp
into
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsb
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
sahf
jmp
scas
lods
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
test
push
incl
add
lea
push
call
add
sahf
add
add
cmpsb
add
stos
add
jb
ret
cmp
dec
inc
call
inc
call
dec
mov
dec
xchg
fmuls
fisttpl
fistl
call
test
std
mov
mov
mov
sahf
mov
add
dec
dec
adc
jp
movsl
sahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
nop
sbb
lea
decl
or
add
nop
add
xchg
add
popf
add
add
add
test
add
ja
int3
dec
call
push
xchg
call
push
lcall
push
fwait
ficomps
jmp
pop
pushf
jmp
pop
mov
jmp
pop
lahf
fadds
mov
cmpsb
jne
sahf
mov
add
inc
inc
adc
js
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
call
and
xchg
and
xchg
pop
arpl
xchg
sbb
xchg
or
decl
add
fwait
add
mov
add
lods
add
mov
data16
mov
xor
call
pop
lcall
bound
jmp
cmpsb
jmp
data16
jmp
cmpsl
call
addr16
ljmp
dec
mov
mov
mov
lahf
sahf
add
inc
inc
adc
jp
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
cmp
sub
fwait
xor
fwait
xor
xchg
sub
xchg
pop
callw
add
lcall
jmp
add
mov
pushl
adc
rolb
fldt
jmp
outsb
stos
jmp
jno
jmp
jb
ljmp
in
jne
out
je
out
jbe
in
jb
jmp
mov
mov
test
lcall
mov
add
add
add
jg
cmp
insl
insl
js
mov
pushf
lcall
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
xor
mov
cmp
sahf
xor
fwait
push
call
add
sahf
add
movsb
add
test
add
mov
fs
mov
sbb
ficoml
jmp
jbe
jmp
jge
in
jg
in
cmpl
push
test
push
cmpl
inc
mov
stos
cmpsl
sahf
pushf
sahf
daa
sahf
sahf
sahf
add
add
add
pusha
add
cmp
pop
pop
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
rol
pushl
insl
mov
cltd
cmp
movsb
inc
jle
movsb
inc
jle
movsl
aaa
ja
cltd
pop
arpl
xchg
add
pushf
add
add
test
pop
ljmp
add
mov
add
iret
daa
cmp
movsb
call
mov
push
mov
push
nop
sar
nop
xchg
stc
xchg
clc
mov
out
mov
fidivl
lods
stos
mov
popf
sahf
xor
pushf
sahf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
mov
jle
lcall
cmp
movsb
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
movl
mov
out
mov
out
xchg
ret
push
cltd
enter
push
cltd
push
fwait
leave
push
pushf
leave
clc
sahf
lret
sti
popf
int3
cli
popf
int3
cld
cltd
leave
push
xchg
ret
jmp
mov
dec
mov
rcrb
popl
lcall
add
ss
or
cmp
outsb
dec
dec
dec
jecxz
pusha
decl
mov
mov
mov
mov
inc
enter
mov
mov
ljmp
push
xchg
movsl
sub
fwait
push
pop
lcall
add
add
mov
arpl
mov
add
leave
add
rorl
jne
fiadds
in
lea
push
movsl
int
mulb
int
cld
test
sti
movsl
iret
cli
test
iret
stos
iret
test
push
popf
jmp
mov
dec
lret
mov
mov
lahf
lahf
sahf
dec
xchg
xchg
xchg
add
cltd
fwait
add
add
add
xor
add
sub
or
inc
bound
pop
xlat
je
jno
mov
mov
ret
mov
inc
ret
inc
enter
rol
mov
test
mov
push
mov
lods
dec
test
mov
add
movsl
add
lods
add
mov
mov
add
into
add
add
fists
jl
out
pop
cmpsb
push
sahf
leave
sti
lods
sar
cli
scas
sti
mov
cld
mov
std
mov
mov
cld
mov
std
mov
std
mov
mov
push
movsl
jmp
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
add
sbb
ss
outsl
mov
aad
fsubr
aad
fdiv
rcl
sar
lret
dec
leave
lret
dec
lret
lret
leave
lret
inc
enter
mov
mov
scas
push
mov
lods
jle,pt
lahf
punpckldq
mov
add
mov
fs
mov
add
roll
outsb
fadds
jb
fiadds
jne
call
jno
sti
lods
sar
cld
mov
mov
mov
std
mov
fdivr
std
rcr
mov
int
call
leave
int3
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
loop
call
call
loop
fucom
fcmovu
xlat
fcmovbe
cli
aad
xlat
std
int
iret
mov
push
test
stos
sub
mov
add
mov
popa
mov
add
leave
add
aam
jb
fldl
jne
jecxz
js
in
xor
cli
mov
std
ret
loopne
inc
loopne
std
fdivrp
std
fdivrp
inc
fdivrp
inc
fdivrp
dec
fdivrp
dec
fdivrp
dec
loope
sti
mov
enter
sar
mov
mov
xchg
adc
add
add
incb
incb
std
incl
repnz
or
out
in
pop
in
in
out
sub
out
out
dec
jmp
ljmp
jecxz
out
fucomi
ret
mov
xchg
cmpsb
cmp
mov
add
test
add
mov
add
int
insl
call
add
add
ljmp
sti
mov
jecxz
std
lret
loop
dec
out
std
int
dec
loop
dec
loope
std
int
dec
in
std
shl
std
shl
std
shl
cld
fcos
in
mov
xlat
inc
ret
out
cmpsl
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
incb
std
std
add
stc
testb
repnz
add
repz
in
icebp
out
pop
out
lock
cmp
out
out
pop
fsubp
loopne
mov
xchg
sti
sahf
and
pop
jmp
add
mov
gs
add
leave
add
roll
jb
flds
jne
in
jnp
in
push
jl
cmc
pop
test
sti
mov
shl
std
iret
in
shl
call
call
call
out
out
call
jmp
fucomi
std
std
iret
loop
hlt
ret
in
leave
lret
leave
repz
xchg
xchg
and
xchg
cwtl
add
std
sti
add
cld
stc
add
cli
stc
add
div
or
aam
xor
jb
negb
add
cmpsl
add
scas
add
mov
add
leave
add
add
fildl
jbe
out
ja
out
sbb
cli
loopne
fsubr
fucomi
fucomi
std
fldl2e
std
fucomi
fucomi
std
fsubr
std
fsubr
std
loopne
std
fsubrp
jmp
jmp
aam
push
aad
out
ror
sar
lods
lods
stos
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loopne
add
mov
xchg
repnz
and
sahf
add
cmpsl
add
mov
mov
add
int
outsl
call
add
fiadds
jne
call
sub
cld
aam
fsubrp
std
fucomi
std
fucomi
call
call
cld
shl
cli
shl
sti
shl
stc
into
fdivrp
test
in
mov
jmp
rcr
call
fcom
sti
mov
mov
fwait
cltd
fwait
cmp
fwait
add
aad
ror
adc
lods
mov
lcall
add
mov
mov
add
rolb
outsl
call
add
loop
jp
ljmp
cld
cwtl
enter
loopne
cli
lret
cld
clc
mov
aam
repz
sar
repnz
into
ljmp
call
ret
sar
jmp
fndisi(8087
cmc
fsubrp
mov
mov
xchg
add
add
add
int3
lret
add
rol
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
dec
pop
jno
rorl
jbe
fistl
ja
loop
cmp
jmp
scas
int3
ljmp
std
loope
scas
cli
enter
leave
ljmp
iret
fsubp
rcl
shl
fcmovb
out
loope
in
in
test
out
lock
jmp
leave
lret
lods
lods
adc
cmpsl
cmpsb
test
sahf
mov
roll
popf
lods
aam
dec
cmp
sbb
cmpsb
sbb
scas
and
jns
mov
inc
test
ret
stc
lret
test
mov
out
mov
mov
enter
lret
rcl
int
iret
shlb
rcl
jg
fcmovu
jb
fnstsw
gs
in
out
call
xor
div
mull
lock
sbb
fcmovnu
or
mov
into
add
add
add
rolb
rolb
mov
test
fwait
cmc
mov
jbe
ljmp
mov
sarb
stos
mov
ret
mov
cmpsl
leave
mov
mov
enter
int3
into
addr16
rcl
push
rcl
rorb
aad
aam
aam
aam
xlat
daa
fcomp
ficompl
fstl
fsubp
loope
loopne
jecxz
out
jmp
add
cli
cmc
add
sti
add
incb
incl
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
ret
kandw
leave
xor
int3
leave
daa
int3
ror
and
aad
sbb
aam
rcl
rorl
rcl
push
rcr
fadds
fcmovnu
add
add
in
add
in
jmp
add
std
incl
mov
mov
add
rol
ret
sub
mov
mov
push
ret
or
mov
add
int
add
roll
rcl
add
aad
aad
aam
aad
add
xlat
loop
aam
add
loopne
add
add
in
add
lock
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
ret
mov
mov
mov
ja
stos
test
test
xchg
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
rcl
iret
jmp
rcl
cmc
aam
sar
ror
iret
cli
int
lret
stc
lret
int3
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
into
xlat
call
xlat
dec
rcl
dec
iret
int
lret
mov
mov
lods
icebp
cwtl
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
je
jae
fs
inc
inc
dec
cmp
sub
sub
ss
xor
dec
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
int3
lret
rcl
call
rcl
dec
int3
lret
inc
mov
rol
pushl
test
lahf
lahf
sahf
cwtl
xchg
xchg
jmp
outsl
jo
pop
adc
add
add
add
add
add
cmpl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
push
insb
insb
insb
push
pop
pop
cmp
cmp
pop
jo
jo
mov
scas
pop
mov
mov
mov
mov
mov
ret
mov
inc
mov
mov
ljmp
pushf
fwait
call
xchg
xchg
cltd
cltd
cltd
out
test
dec
adc
wrmsr
add
add
add
add
add
pop
fwait
fwait
cltd
add
popf
xchg
lcall
addb
jnp
jl
js
jns
jnp
jnp
jnp
jns
jae
jae
push
push
push
cmp
jne
sahf
popf
sahf
mov
scas
scas
repz
lods
lods
sti
scas
scas
scas
std
test
sahf
popf
call
xchg
call
mov
lods
jmp
lods
scas
leave
movsb
cmpsb
movsb
cltd
jae
jae
adc
adc
add
add
add
add
outsb
insl
outsl
pop
xchg
mov
mov
test
std
nop
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
outsb
jo
mov
cwtl
cwtl
cwtl
cltd
repnz
xchg
xchg
std
mov
call
pushf
popf
ljmp
test
mov
mov
mov
xlat
cmpsb
mov
addb
add
add
add
add
pusha
or
lods
mov
cmpsl
mov
mov
mov
mov
cwtl
xchg
xchg
std
popf
sahf
mov
negl
addb
push
push
pop
outsl
insl
outsb
outsb
xchg
subl
xchg
lock
nop
lcall
mov
pushl
pop
mov
jge
mov
scas
lods
insl
test
add
add
add
add
pusha
or
mov
in
mov
nop
call
cwtl
call
lcall
pushf
popf
pushf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
xchg
jbe
notb
jg
pushf
dec
jp
movsl
inc
jns
lods
aaa
js
scas
sub
mov
outsb
pushl
sbb
mov
mov
scas
scas
jle
mov
add
add
add
pop
pusha
pop
or
mov
in
movsb
test
cwtl
cwtl
cwtl
lcall
mov
mov
decl
addb
xchg
jno
cld
cwtl
pusha
test
xchg
dec
jp
nop
cmp
xchg
sub
xchg
sbb
adc
sahf
push
ljmp
sbb
mov
outsb
pushl
push
jb
mov
pop
nop
mov
lods
lods
xchg
lahf
lahf
sahf
adc
add
add
pop
pusha
pop
or
lods
mov
stos
mov
lahf
jmp
stos
stos
ljmp
xchg
cltd
decl
cmp
mov
decl
adc
xchg
pop
decl
add
call
add
or
pushl
sub
jl
les
jge
leave
das
cmp
leave
pop
cwtl
inc
test
mov
test
test
pop
popa
popa
or
cmpsb
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
cwtl
lahf
decl
adc
mov
push
incl
add
push
decl
add
lahf
add
cmpsl
add
mov
insl
inc
cmp
into
inc
call
inc
call
inc
xchg
call
popa
lahf
inc
cmpsl
mov
mov
mov
movsl
mov
incb
add
add
pusha
popa
popa
or
lahf
mov
ljmp
mov
pushl
mov
stos
call
pop
popa
call
adc
pop
call
add
lahf
add
cmpsl
add
lods
add
mov
dec
xchg
fsts
ficompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsb
mov
ret
movsl
xor
add
add
dec
pop
jle
jnp
fwait
xchg
lcall
scas
scas
pushl
mov
mov
jmp
sub
lcall
and
xchg
adc
xchg
add
lahf
add
test
pusha
pushl
or
lret
fisubl
jmp
insb
test
in
lods
call
jo
in
jno
jmp
jns
call
test
std
mov
test
addl
dec
dec
pop
outsl
outsb
push
mov
xchg
ljmp
mov
mov
mov
je
lcall
cmp
pushf
sub
xchg
or
lcall
add
stos
add
mov
fs
or
call
inc
xchg
jmp
js
jmp
mov
in
test
push
xchg
push
mov
mov
test
push
fwait
lcall
sub
push
push
push
dec
pop
imul
test
mov
mov
mov
mov
mov
xchg
ljmp
sub
fwait
push
pop
jmp
add
mov
arpl
mov
push
jbe
loopne
mov
push
xchg
cltd
push
cwtl
stc
lcall
clc
xchg
jmp
lods
inc
mov
lods
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
xchg
test
ljmp
and
add
jmp
add
mov
add
fisubl
cmp
mulb
sar
clc
test
cld
test
sar
cld
stos
sar
stc
test
jmp
mov
dec
rol
test
pushf
popf
or
add
add
dec
push
dec
aaa
je
je
test
int3
into
out
int
cmc
lret
int3
lret
lret
lret
leave
leave
mov
pusha
mov
stos
inc
jg
mov
add
mov
gs
add
iret
add
flds
je
jmp
xchg
sti
mov
cld
mov
fdivr
std
mov
xlat
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
loop
loopne
loopne
fcmovnu
fcmovnb
fcmovnu
aam
out
shll
test
je
cmpsb
push
popa
ljmp
add
lret
call
add
in
jnp
repnz
mov
std
loopne
std
loopne
inc
loopne
dec
loopne
dec
loopne
std
lret
loopne
std
fdivr
out
mov
lret
mov
xchg
popf
pushf
sahf
sbb
add
add
incl
incl
jmp
in
sbb
in
in
xor
loop
loop
mov
mov
mov
add
mov
arpl
roll
dec
add
faddl
je
jmp
insl
mov
sti
ret
std
shl
shl
std
shl
std
shl
std
aad
call
out
std
shl
push
fdivr
fcmovne
sar
mov
mov
add
incb
incl
std
std
incb
aam
push
mov
pop
mov
sahf
or
stos
add
mov
fs
add
rolb
outsl
jmp
add
in
pop
mov
clc
mov
shl
fldl2t
fldl2e
std
fsubr
cld
sti
fsubr
std
cld
aam
push
fdivr
loopne
xlat
sti
mov
sahf
popf
das
add
add
int
into
or
bound
ljmp
gs
add
aam
jb
loope
ja
out
xor
sti
int
clc
lret
fdivrp
cmc
hlt
repnz
out
sar
out
out
jmp
shl
in
fsubrp
enter
stos
test
incl
aad
push
mov
jb
push
addr16
mov
imul
sbb
int3
and
aad
test
ficoms
in
mov
out
jecxz
leave
jmp
fidivrs
lret
leave
loopne
iret
mov
jecxz
ficompl
in
call
rorl
mov
add
lods
stos
lods
add
xchg
movsb
les
pop
xchg
mov
xchg
fidivrl
andb
int
mov
sarl
leave
jge
int3
insl
aad
into
pop
aam
iret
dec
xlat
cmp
das
jecxz
fisubs
loop
lock
in
in
or
std
incl
std
std
incl
mov
mov
outsb
scas
mov
scas
data16
mov
mov
mov
xor
enter
rcl
aam
mov
rcl
or
loope
or
int3
int3
add
std
incb
std
std
add
add
add
int
pinsrw
or
int3
int3
int3
add
std
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
rol
enter
leave
mov
ret
rol
mov
scas
scas
insb
stos
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
int
int
mov
mov
sarl
gs
sbb
add
add
add
add
add
add
add
add
jb
jae
data16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
aam
aam
int
iret
inc
mov
ljmp
lahf
sahf
sti
mov
das
push
add
add
add
add
jae
je
test
adc
outsb
jo
arpl
mov
data16
outsl
insl
outsb
jb
popa
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jae
daa
and
add
add
add
jae
je
fwait
xchg
fwait
mov
test
xchg
mov
test
addl
push
dec
push
inc
mov
pushf
into
movsb
mov
mov
decb
mov
fwait
lcall
mov
mov
ret
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
cmpsb
cld
mov
xchg
xchg
xchg
cld
sahf
popf
sahf
cmc
cltd
cwtl
lcall
push
push
imul
jge
mov
xchg
testl
mov
mov
jo
mov
mov
stos
lods
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
lcall
xchg
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
je
out
xchg
bound
std
fwait
inc
jbe
cmpsb
ss
scas
sub
pop
jo
mov
insb
pushl
popf
lods
lock
mov
imul
into
add
xchg
pop
lods
movsl
lods
test
lahf
pushf
sahf
jmp
movsl
call
imul
inc
jb
mov
imul
sbb
call
or
or
scas
sbb
jne
mov
sub
lds
inc
lcall
stos
stos
stos
or
add
add
popf
lahf
test
cmpsl
cmpsl
test
mov
mov
mov
mov
mov
sub
mov
pop
incl
add
decl
pop
jmp
adc
shll
call
inc
mov
aam
mov
push
xchg
dec
cwtl
mov
mov
mov
movsb
movsb
movsl
push
add
add
push
push
test
mov
scas
pushl
mov
movsb
call
arpl
mov
pop
call
add
mov
add
mov
push
xchg
fistpl
loopne
mov
jmp
cmpsl
call
pushf
mov
test
cmpsl
cmpsl
pop
add
add
arpl
adc
pushf
fwait
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
call
add
stos
add
mov
xor
jmp
jo
call
jnp
out
jge
out
jge
fstps
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
jmp
inc
jle
sahf
and
add
jmp
add
ret
pop
outsb
fimull
out
mov
push
xchg
push
xchg
enter
enter
mov
movsb
sub
inc
aas
aas
adc
push
xchg
mov
mov
inc
sarl
stos
dec
cmp
movsb
add
mov
gs
add
aad
ja
in
insb
scas
push
test
cli
stos
iret
cld
lods
sar
cld
scas
sar
cld
scas
sar
ljmp
fldenv
std
incl
xor
xor
inc
mov
mov
aam
mov
aad
rcl
out
lret
leave
lret
xchg
jmp
add
ret
call
add
out
test
clc
mov
std
mov
std
ret
inc
cld
ret
out
mov
ret
in
test
addb
add
add
in
jmp
out
out
jmp
in
outsb
fcomp
mov
add
mov
add
fldl
cld
mov
std
int
dec
out
std
shl
call
out
std
shl
push
enter
int3
in
scas
scas
scas
popa
addl
add
std
std
std
add
std
push
lret
int3
shrl
lahf
sbb
lods
add
mov
add
loop
jns
cmc
push
cmpsb
cld
loope
cld
aad
cld
aad
cld
aad
std
aam
sti
aam
push
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
add
mov
push
jne
fistps
jg
ljmp
cli
out
mov
into
bnd
ret
shl
in
rcl
call
fcmovu
scas
lds
cltd
fwait
add
mov
pushf
lods
xchg
dec
and
shlb
int3
jbe
mov
xlat
mov
int3
adc
into
outsl
xlat
int
pop
fst
xlat
dec
in
loope
out
call
sbb
mov
mov
cmp
mov
scas
push
mov
mov
lds
ret
sbb
fstp
bswap
int3
int3
or
aam
push
std
incb
jg
addb
std
incl
lods
std
incl
mov
incb
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
push
sbb
popf
mov
lods
jbe
aaa
dec
or
jo
ret
xchg
lahf
mov
aas
cwtl
mov
sub
cmp
mov
push
das
adc
arpl
xchg
xor
imul
mull
into
sub
in
jno
es
add
rorb
xchg
psubw
lret
shll
adc
pusha
push
lahf
aaa
testb
movsb
adc
aaa
aaa
loopne
jno,pt
scas
mov
out
test
aad
mov
pop
inc
push
add
sbbb
shll
push
mov
sub
lods
cmp
lock
pop
cmpsl
ret
push
pop
ficoml
int
xchg
loope
out
xlat
std
add
xchg
daa
scas
jl
ret
insl
sarl
test
int3
aad
add
incl
sbb
ljmp
xor
push
sub
adc
mov
xchg
cmpxchg
fisubs
stos
andl
cs
mov
mov
xchg
add
mov
jecxz
xchg
sub
sub
decl
loope
pushf
cli
fs
xor
js
popf
gs
pusha
mov
mov
push
add
sahf
dec
test
imul
dec
insb
inc
fidivrs
mov
xchg
jecxz
pop
add
push
pop
cltd
inc
pop
dec
imul
int
adc
add
pop
rclb
jb
sbb
roll
cmc
jo
xor
sub
stos
sub
xchg
cmp
cmp
lods
sbb
sbb
or
sub
mov
into
push
push
xchg
insb
or
pop
push
pop
push
stos
ss
pop
inc
inc
pop
sub
pushf
fwait
mov
popf
out
in
push
cli
jb
sub
mov
add
mov
repnz
xorb
cmpsb
pop
ss
pusha
xlat
sub
and
push
popa
cmpsb
cmp
int
aad
add
addl
mov
addr16
dec
push
and
and
dec
mulb
dec
mov
mov
pop
dec
addr16
xor
aam
cmc
xorl
into
lods
push
lcall
inc
jg
lds
fs
faddl
enter
and
loopne
outsb
shll
out
imul
ss
cmpsl
icebp
mov
pop
adc
int
lret
rorb
ret
push
lret
scas
mov
or
out
insl
cs
ret
xchg
shll
or
fs
dec
jle
or
outsb
jmp
xor
ss
ret
xor
fists
loopne
or
jecxz
or
aas
sti
loop
andl
push
add
inc
adc
lcall
cmp
xchg
inc
add
pusha
in
xchg
in
mov
mov
testb
test
push
adc
clc
loop
icebp
ja
in
mov
jne
aam
add
pop
inc
adc
push
test
push
xchg
inc
je
loopne
sub
jbe
xor
jne
insl
roll
or
divb
push
test
cs
jmp
pusha
repnz
in
js
in
sub
add
xor
adc
cli
idivb
pop
test
and
jecxz
sbb
loope
ds
int
fisubl
mov
mull
adc
pop
dec
pop
push
test
and
in
mov
scas
es
pop
adc
test
loope
insb
iret
push
ja
js
inc
and
mov
cmp
lcall
in
lods
mov
ret
inc
sbb
inc
jb
lock
pop
testb
mov
jecxz
cltd
xchg
test
xchg
sti
mov
scas
xchg
fidivl
sbb
dec
push
repz
or
stos
add
mov
es
xlat
mov
and
pop
outsb
aam
dec
mov
fldl
cli
inc
jmp
xchg
sbb
push
mov
ret
add
mov
fwait
cmpsb
dec
sbb
mov
scas
enter
cmp
pop
mov
push
sarl
repnz
xor
mov
sub
hlt
fstpl
out
xchg
pop
test
push
test
cmp
pusha
fistpll
cmovp
test
pop
jnp
cwtl
ficoms
inc
inc
or
popa
jecxz
xchg
test
orl
lcall
out
lret
fdivrs
jp
jae
jno
adc
in
in
dec
ja
jns
arpl
or
in
lcall
lods
xor
int
inc
and
jp
sub
sub
pop
fidivl
or
push
or
inc
mov
or
fsub
push
jecxz
dec
fsts
adc
fs
cwtl
aaa
data16
cmp
push
sbb
jae
jo
in
outsb
pop
jmp
ljmp
ss
mov
cmp
ret
jmp
jg
notb
xor
leave
scas
incb
jge
or
imul
lods
int3
dec
xchg
hlt
dec
lods
aad
mov
cld
cmp
js
inc
mov
iret
push
les
jg
cmpsl
in
lahf
xchg
popa
push
int3
jo
rclb
or
or
jge
psrad
aaa
xchg
mov
mov
sbb
mov
ficompl
test
cmc
test
sarl
dec
loopne
adc
out
mov
push
cmp
mov
mov
pop
push
lods
jmp
jns
mov
enter
sahf
mov
push
idivb
mov
subl
sub
les
push
jge
jns
icebp
imul
push
aam
scas
lds
sbb
inc
or
dec
pusha
out
test
mov
stc
rolb
mov
es
leave
shrb
rolb
aad
add
stc
les
ljmp
adc
jmp
jl
and
std
sub
stc
or
icebp
or
scas
add
pop
jno
ss
roll
pop
inc
outsb
std
xor
dec
bound
pop
fnsave
adc
add
cld
popa
insl
jl
test
daa
out
jp
mov
inc
sbb
mov
pop
sub
push
sub
pop
add
mov
mov
imul
pop
mov
mov
xor
xchg
xlat
xor
mov
sbbl
lahf
adc
arpl
jmp
fcomps
ss
cli
jl
nop
mov
in
jecxz
dec
loop
push
cli
cmp
fdivrp
add
sti
adc
push
out
test
sbb
out
pop
icebp
sub
les
sti
das
aam
ja
cmp
dec
sbbb
xor
pmulhuw
dec
fsubrs
jp
mov
mov
sub
pop
gs
jp
add
imul
call
mov
das
or
inc
push
mov
test
stos
sahf
mov
insl
sub
mov
aaa
ja
lret
cli
add
fwait
pushw
test
jnp
pop
jle
out
lret
inc
sbb
xchg
pop
mov
test
fidivrs
jne
sub
push
out
fnstenv
aas
adc
out
inc
or
mov
xlat
movsl
jmp
aaa
int3
cwtl
arpl
icebp
mov
adc
add
cs
rcrl
dec
jecxz
jns
jbe
xor
std
xchg
mov
or
ficoml
popf
pusha
sub
and
mov
int3
data16
inc
flds
in
test
or
stos
js
shrb
inc
fdivrp
push
mov
ds
xor
jno
jns
pop
stos
xchg
mov
ficoml
lods
or
add
pop
jb
mov
cmc
filds
adc
xor
bound
nop
pushf
addl
je
outsb
add
loopne
push
adc
jle
xor
xor
push
inc
xchg
ja
arpl
fucomi
orl
xor
jo
mov
push
add
lods
pop
neg
loop
push
adc
jle
xor
pushf
xor
fwait
push
inc
int
pop
mov
and
out
je
stc
mov
add
and
mov
stos
ret
aaa
into
inc
adc
push
in
xchg
addr16
or
mov
xchg
sub
or
mov
mov
fimull
mov
clc
loope
jmp
xor
sbbl
add
pop
mov
and
shrb
xor
ficoml
pop
jbe
jmp
std
xchg
mov
mov
div
cmp
adc
sub
fldcw
popf
mov
fisttpl
mov
inc
mov
rorb
mov
jg
pop
lahf
loope
mov
shll
xor
sbb
pop
repnz
mov
adc
mov
xchg
cs
or
mov
scas
pusha
std
xchg
xchg
rcl
push
mov
mov
and
mov
cmp
aaa
jbe
cmpsb
cmpsl
pop
pop
out
mov
sub
or
dec
std
xchg
sub
insl
push
lahf
push
mov
add
pop
repnz
cmpsl
ds
imul
test
lds
dec
or
jp
jecxz
in
fwait
sub
int3
or
dec
fildll
pusha
xsha256
cmpsb
xchg
push
push
call
jecxz
je
aam
dec
loopne
mov
xor
xchg
shlb
test
jmp
push
fidivs
cli
jne
sub
int
inc
dec
jo
aas
pop
repz
push
mov
es
andl
jae
or
mov
je
mov
sbb
ds
scas
dec
xlat
outsb
fwait
sarb
sub
aad
sub
sahf
mulb
out
fbstp
or
hlt
xchg
fwait
xchg
sub
dec
cs
mov
push
dec
loope
ror
mov
mov
push
shr
test
dec
and
fcoms
fnsave
mov
jmp
sti
xchg
mov
and
and
adc
roll
sbb
out
les
lahf
mov
push
in
mov
outsl
push
enter
inc
jmp
inc
fldcw
adc
cmpl
arpl
clc
cs
and
mov
fnsave
leave
into
jns
imul
add
arpl
gs
xchg
repz
repz
lcall
push
sub
dec
xchg
sub
add
push
call
cwtl
das
push
mov
cmpsb
cli
xlat
dec
sbb
adc
and
mov
hlt
inc
mov
sub
inc
mov
lds
dec
loope
js
or
or
add
std
pop
inc
ficoml
mov
fldenv
sahf
mov
xor
push
add
int
jg
pop
rolb
outsl
xchg
dec
loope
nop
lcall
and
adc
mov
jo
enter
cmp
ret
pop
xor
dec
xchg
pushf
xor
jo
mov
repnz
xor
cmc
mov
mov
xchg
loope
lret
bound
mov
xchg
cs
les
mov
ret
sub
push
and
lock
jp
sti
lcall
sub
add
or
sbb
pusha
sarb
arpl
mov
aas
pop
out
inc
fadds
mov
sbb
cmp
leave
pusha
jle
pop
sahf
cmpsb
lahf
adc
push
xor
mov
lds
mov
sbb
test
xchg
mov
sbb
adc
outsb
add
mov
call
add
push
xchg
stos
inc
lds
sub
test
mov
or
repz
imul
push
icebp
popa
clc
loop
testl
sbb
adc
pushf
loope
cmp
mov
pop
sahf
push
scas
inc
inc
fcmovu
jo
gs
mov
lcall
imul
cmpsl
ds
pushf
and
mov
inc
push
out
jl
es
dec
push
lds
mov
and
test
mov
xlat
insb
cwtl
in
or
fidivl
insl
inc
fstps
cmp
mov
loopne
add
data16
inc
or
cs
in
dec
iret
mov
ss
fwait
gs
ret
mov
arpl
xchg
xor
xchg
iret
data16
clc
mov
das
dec
ret
pop
cmp
fsubrs
pop
mov
dec
sahf
insl
ret
ret
pusha
fs
arpl
aas
loop
imul
xchg
lds
loope
sbb
xchg
adc
cld
xchg
lods
mov
cwtl
fmul
pop
cmc
mov
loopne
and
sbb
roll
push
fwait
sbb
stc
ja
stos
inc
out
cwtl
lock
xchg
or
popf
imul
xorb
sub
inc
sbb
cmpb
jo
and
mov
jbe
imul
or
out
sbb
xor
mov
pop
inc
fnstcw
adc
sarb
pop
cmc
inc
fcmovnbe
outsb
push
push
gs
out
jnp
insw
lret
bound
pusha
xor
dec
xchg
aaa
lahf
ss
mov
and
or
inc
inc
fstpt
int
and
pop
push
out
stos
mov
insb
std
xchg
pop
jbe
cmp
std
xchg
pop
xchg
jmp
push
or
mov
cwtl
stos
adc
sub
mov
inc
and
push
adc
xchg
cs
out
sub
iret
sub
repnz
mov
aam
sbb
cmp
cwtl
cmp
dec
loope
shlb
fcomip
jecxz
dec
aad
es
call
or
jnp
out
test
testb
das
outsl
push
mov
ret
push
jmp
sti
aad
cmp
mov
pop
neg
jae
cld
test
cwtl
das
in
dec
mov
jge
cmpsl
jg,pt
sbb
adc
fsubrs
xor
mov
mov
int3
arpl
ljmp
sbb
test
std
js
out
aad
sar
adc
cwtl
sbbl
jecxz
loopne
stos
inc
cmpsl
xchg
push
mov
fcomi
mov
cmp
xor
filds
sahf
xchg
add
jno
adc
cmp
clc
pop
mov
es
out
int3
pop
lock
and
cmp
pop
lcall
jno
cli
cli
in
test
daa
mov
push
pop
mov
cmc
mov
jns
push
movsl
cmp
into
lods
inc
add
push
rorb
jb
int3
arpl
push
into
gs
hlt
cmp
in
xor
adc
sbb
jecxz
dec
loop
lea
lock
push
stos
inc
mov
in
andl
incl
aas
xor
xchg
push
fcompl
and
in
mov
mov
push
mov
fnstenv
inc
cld
xchg
xor
jl
cmp
sub
push
lods
icebp
push
mov
ret
jnp
or
data16
movsb
mov
decl
dec
jbe
repnz
mov
pop
and
inc
jg
cmp
test
mov
mov
push
inc
fimull
and
mov
cmp
adc
shrl
cmp
test
lret
mov
faddl
int
mov
add
push
daa
mov
jae
in
test
xchg
cmp
push
movsl
jmp
xlat
daa
push
in
pop
clc
or
and
add
cmpsl
push
push
adc
mov
inc
xchg
push
and
mov
jp
aaa
loopne
pop
rorl
add
cmp
fs
pop
sar
adc
leave
sbb
out
mov
dec
dec
mov
mov
ja
mov
fadd
pop
int
cmpsl
sub
push
cmp
add
fidivs
xorb
inc
cmp
loop
dec
pusha
lock
push
fwait
sbb
test
in
and
push
push
lret
call
mov
sub
push
lods
enter
cmp
inc
testb
xchg
in
dec
dec
loop
adc
add
movsl
inc
inc
push
pop
mov
cld
jne
mov
enter
and
in
adc
cmp
cmp
push
inc
mov
mov
in
rclb
xor
sub
push
pusha
rclb
out
jecxz
mov
out
sbb
loopne
nop
inc
std
add
jne
xchg
lods
and
loope
sbb
fidivl
xchg
inc
mov
movsl
mov
sub
popa
rolb
fs
adcb
fidivrs
cmp
cli
or
in
pop
cld
insl
mov
pminub
iret
mov
xchg
inc
jb
push
call
aas
fwait
sti
call
arpl
lcall
stos
int
imul
out
jb
inc
bound
mov
sbb
mov
mov
push
inc
inc
mov
jae
xchg
fnsave
cli
xchg
call
jmp
pop
rclb
bound
dec
adc
scas
dec
outsb
mov
mov
loop
aas
mov
adc
pop
add
inc
mov
repnz
xchg
outsb
lock
push
loopne
push
adc
mov
divl
and
lahf
xchg
outsl
out
dec
mov
mov
push
lods
pop
testb
adc
enter
js
xor
lret
mov
andl
or
mov
les
cmc
gs
ficoms
mov
cld
call
or
in
pop
mov
and
loope
lods
inc
xchg
add
jbe
mov
popa
in
std
xchg
xchg
jmp
mov
pop
pop
sahf
mov
cmp
sub
out
jge
inc
fisubrl
lahf
jne
xchg
icebp
lods
ljmp
pushf
cli
dec
jge
inc
mov
mov
pusha
insb
inc
push
sbb
xor
sub
sahf
pop
cmp
mov
pop
out
xor
paddusw
mov
int
inc
lods
mov
push
jne
lods
jmp
xchg
rol
lea
repnz
push
inc
inc
jge,pn
add
inc
push
push
sbb
xor
fs
aaa
and
inc
mov
fiaddl
fdivl
popa
popa
clc
xchg
in
cli
xchg
push
mov
push
out
sbb
cmp
mov
jmp
scas
fidivl
xor
stc
nop
xor
pop
scas
test
scas
inc
or
cs
arpl
push
ljmp
jno
jge
or
shll
es
and
inc
fldt
int3
stc
std
cwtl
jmp
sbb
pop
sahf
sbb
lahf
ja
add
cmpsb
sub
sysret
iret
hlt
loopne
es
mov
jp
lods
inc
jbe
sbb
int3
xchg
xchg
and
mov
or
cmp
dec
enter
mov
xor
sbb
xor
or
sti
xchg
insl
sub
imul
xor
lods
jae
iret
imul
arpl
sahf
push
test
jbe
jp
fidivrl
or
in
cld
sub
dec
or
cmpsb
or
rolb
stos
sub
aad
ss
inc
inc
rcrl
and
rclb
lods
mov
push
sahf
sub
push
in
sub
test
mov
xchg
lret
test
sbb
aas
lahf
xlat
inc
fistps
lea
mov
and
mov
pusha
xor
dec
jns
cmpsb
add
mov
and
out
cwtl
insb
ds
and
pop
js
jae
cli
popa
outsb
test
data16
scas
sahf
cld
ret
inc
cmp
andl
xor
add
loope
es
push
cmpl
xchg
test
xchg
sbb
iret
fisubrl
fcompl
ds
sbb
ds
or
add
xor
inc
jno
popa
lea
movsb
add
fnstcw
mov
gs
adc
popf
pop
mov
fsubrs
add
add
cmp
xchg
clc
scas
mov
pop
pop
dec
sbb
adc
daa
xor
scas
inc
test
outsl
add
fldenv
mov
pop
stc
out
xchg
jp
cmp
sarb
ror
fnsave
ljmp
lods
cmp
add
pop
lods
add
das
ret
test
jecxz
sub
pop
pop
imul
stos
xor
cli
nop
cld
test
scas
push
fsubl
cmpsl
xor
pop
lds
cmc
and
mov
push
dec
in
orl
cltd
xor
mov
sub
lods
adc
jae
int
jecxz
fs
xchg
xchg
pop
insl
add
inc
add
xor
and
add
inc
fldt
add
push
pop
imul
das
sub
pusha
cmp
pop
lea
rclb
pop
out
inc
sbb
adc
mov
sti
xchg
loopne
loop
sti
movsl
les
mov
movsb
arpl
jle
cmp
cmpsl
ds
dec
fsubrl
aaa
xlat
jmp
int
imul
stos
cli
xchg
sbb
rcrb
shll
repnz
xchg
sub
ret
frstor
push
ja
inc
jb
icebp
arpl
stos
inc
in
fs
test
dec
loop
pop
icebp
mov
repnz
push
xchg
push
pop
repz
mov
decl
das
and
jb
sbb
mov
push
cmp
xor
dec
mov
daa
and
jne
dec
loopne
daa
xor
loopne
push
inc
fldl
cmpsb
xchg
les
sti
pusha
test
pop
ret
push
ljmp
xor
and
pop
dec
insb
or
cmp
imul
xchg
jl
shlb
ficompl
xchg
jnp
int
jecxz
out
mov
adc
push
test
and
cld
mov
test
dec
xor
dec
call
inc
stc
je
fs
sub
push
stc
jnp
popa
fsubr
sub
mov
or
es
and
cmp
cmpsb
mov
mov
mov
mov
xor
ret
fwait
jecxz
add
mov
test
or
insl
mov
fsubrs
pop
movsl
cmp
xchg
mov
add
cmc
mov
sub
mov
mov
shrl
fdivl
into
inc
jbe
jns
jno
sbb
dec
lcall
and
xchg
pop
ret
inc
xor
aaa
pop
push
out
xchg
cmp
add
add
mov
push
fs
aaa
mov
loope
lcall
pusha
in
sbbl
cmp
xchg
ja
pop
and
mov
pop
cli
icebp
mov
cmp
mov
mov
sbbb
push
mov
adcl
mov
mov
mov
or
cmc
mov
out
test
dec
jecxz
xchg
push
hlt
pop
inc
sti
xchg
cwtl
mov
rcrl
test
es
xchg
pop
mov
push
jmp
inc
sbb
pop
pop
or
inc
outsb
push
out
gs
mov
jns
cmpsl
push
push
popa
clc
xchg
ja
mov
mov
fldenv
sub
dec
push
lods
pop
adc
mov
push
mov
mov
pop
out
rcrb
arpl
stos
repz
rorb
dec
filds
dec
loop
popa
cmc
mov
or
mov
inc
fcomps
adc
icebp
or
jg
sbb
incl
sti
xchg
pusha
or
mov
xchg
add
mov
xor
ljmp
push
pop
mov
push
ljmp
push
call
js
ss
lret
and
aam
jle
leave
inc
cli
inc
xchg
xorb
scas
inc
repnz
or
pop
mov
push
sti
insl
mov
sti
popf
jg
xchg
inc
sbb
test
dec
sbb
xchg
inc
mov
scas
push
jp
test
insb
add
cmpsb
ret
pop
into
and
outsb
mov
ret
mov
fistps
mov
adc
push
movsl
mov
push
call
enter
out
cwtl
mov
or
mov
in
and
sbb
mov
cli
pusha
pop
repnz
sbb
add
outsb
loopne
mov
sar
mov
jl
sbb
push
out
dec
mov
cmp
pushf
xor
outsb
xor
pusha
push
cli
xchg
mov
push
xor
stc
fcompl
cmp
les
popf
rcrl
fcoms
sbb
push
add
push
xchg
inc
testb
adc
data16
adc
mov
adc
dec
mov
mov
imul
shr
dec
dec
xor
or
sub
push
sbb
and
mov
sub
sub
adc
aad
outsb
push
in
es
push
jmp
dec
mov
push
cmpsl
mov
jmp
xchg
das
shll
negb
sub
fdivrs
test
cmp
cmpsl
adc
or
out
es
mov
iret
inc
sbb
dec
or
jmp
xchg
cmpsl
mov
mov
mov
mov
in
xchg
call
adc
stos
push
imul
imul
mov
pop
add
mov
mov
int3
mov
cmp
popf
sub
inc
and
jl
jbe
movsl
dec
daa
jno
xchg
pop
in
mov
leave
sub
and
loopne
in
aaa
push
cmpb
sbbl
inc
mov
jle
insl
mov
ss
sub
jbe
cmp
fucomp
cmp
sbb
aad
ficompl
popa
imul
xchg
adc
pop
add
mov
mov
fprem1
or
arpl
lahf
push
fisubl
mov
sub
clc
in
clc
fisttpll
je
into
add
incb
das
lock
adc
outsb
add
sbbl
xchg
xor
push
movsl
orl
jg
or
pop
mov
add
pop
mov
and
or
dec
mov
dec
dec
cltd
sub
iret
mov
mov
push
jbe
or
shrb
addr16
pop
testb
out
adc
sti
loop
add
enter
sahf
imul
pop
pusha
dec
jae
in
fsubrs
mov
mov
xor
ljmp
sbb
ret
daa
cmc
push
jbe
sub
pop
popf
xorb
xor
push
daa
mov
enter
inc
dec
out
xchg
inc
sbb
addr16
adc
mov
sbb
push
pop
das
mov
mov
jmp
scas
jb
mov
or
stos
js
loope
push
clc
cwtl
int
add
mov
adc
push
or
das
push
sbb
fistl
dec
and
cmp
adc
inc
shl
jnp
adc
aaa
cltd
fs
pusha
push
mov
lret
test
mov
enter
lret
sub
mov
sbb
push
test
push
adc
pop
cltd
push
lret
sub
shrl
es
test
mov
push
hlt
sub
in
xchg
arpl
pushf
push
into
das
xchg
push
loop
insl
sub
dec
movsb
dec
in
mov
mov
cs
cmp
sbb
cld
cmp
sahf
mov
jo
jne
push
aam
pop
jne
sub
pop
fs
xchg
inc
mov
jmp
pop
add
cli
lcall
pop
icebp
mov
mov
xor
xchg
cmpb
mov
cwtl
das
mov
cmc
dec
in
sbb
xor
movsl
xchg
mov
shrl
popa
clc
das
add
in
mov
adc
out
inc
ljmp
out
lret
push
mov
loop
pop
lret
orb
mov
pop
xchg
sub
push
dec
sub
cmp
ja
xchg
sbb
das
fdivs
imulb
ss
movsb
adc
inc
jl
cli
xchg
fisubrs
vmovupd
lods
filds
mov
jnp
sti
mov
or
fs
xchg
xchg
add
out
add
xchg
xchg
ret
xchg
or
pop
push
into
aam
sbb
cmp
xor
add
add
sub
pusha
xchg
popf
pop
rcrb
mov
shl
jge
arpl
aas
dec
nop
mov
sub
sarl
sub
jae
nop
int
cmp
pop
jle
xlat
fdivl
xchg
lret
inc
xchg
sub
xchg
sahf
mov
inc
mov
sub
fsubrs
cmpl
cmp
jmp
fldenv
xor
repnz
lea
mov
loop
xor
xchg
hlt
push
in
cmpsb
cli
pop
stc
mov
pop
mov
mov
stc
lods
push
in
xlat
fnstenv
mov
shll
ja
xchg
and
xchg
lock
or
ja
add
push
call
cltd
inc
fucomp
imull
and
cwtl
idivl
mov
inc
pop
sub
outsl
adc
scas
sbb
outsb
pop
mov
xchg
inc
scas
hlt
nop
rclb
ja
js
push
insl
sbb
lahf
jecxz
cmpsl
adcb
hlt
push
or
leave
out
repnz
pop
dec
xchg
fdivr
into
aad
xchg
mov
cmp
fcomip
mov
jo
or
mov
cwtl
hlt
pop
enter
xor
push
jae
cmp
mov
inc
roll
pop
out
stos
lock
or
jnp
or
movsb
shll
or
dec
ja
pop
ja
push
adc
gs
add
inc
fcmovne
mov
mov
cmp
inc
popa
push
or
cmp
jg
xchg
mov
mov
filds
movsl
adc
fidivrs
insb
mov
fdivrl
rcrl
mov
mov
xchg
rorb
pop
repnz
inc
icebp
rclb
daa
in
scas
fadds
sbb
and
mov
push
aaa
into
clc
outsb
bound
ds
shll
repnz
cltd
ljmp
pop
stc
dec
cld
inc
fbld
outsl
push
fwait
push
push
xor
jp
sub
outsl
sbbb
dec
jb
xlat
insl
jo
push
xchg
popw
xchg
sbb
adc
push
adc
fdivrs
cmp
jge
sub
cli
insb
xchg
pop
sub
leave
xchg
or
sarl
lahf
xchg
mov
dec
stos
mov
adc
mov
test
insb
ret
cld
std
loop
aaa
js
jecxz
xchg
mov
ror
cltd
repnz
xchg
pop
mov
lods
stc
shlb
scas
pop
push
in
dec
iret
aam
sbb
shlb
out
mov
xchg
xchg
pop
test
push
stos
lahf
ljmp
aam
leave
pop
pusha
call
in
jo
push
movsl
mov
add
pop
daa
lock
mov
fmuls
in
and
and
ret
test
test
inc
and
mov
xchg
pop
xchg
lret
mov
loopne
out
loope
movsb
leave
adc
clc
jecxz
jle
xor
and
jecxz
cmpsb
mov
mov
sbb
cmpsb
lods
mov
jne
jo
in
mov
loope
pop
adc
popa
clc
sbb
aaa
sbb
add
lods
add
or
push
jo
test
lods
clc
jb
jbe
addl
mov
std
cmp
int3
scas
jg
pop
cmp
aaa
mov
test
mov
popa
in
insb
mov
insl
jbe
lcall
xor
sahf
cmp
mov
hlt
loop
out
add
mov
rcrl
stos
out
loopne
mov
outsl
lods
push
sti
test
loop
and
outsl
add
sub
push
outsl
sub
es
sti
sub
and
and
in
inc
dec
push
and
repz
mov
push
jns
ficoml
outsb
mov
mov
andb
cmp
cmp
xchg
inc
adc
std
sbb
repz
pop
cli
pop
in
insl
adc
mov
xchg
aas
pushf
int
or
rcrb
inc
push
cmp
sti
das
mov
xchg
lds
popa
cli
out
or
out
or
adc
pop
shlb
movsl
push
out
xlat
pop
mov
cmpsb
mov
hlt
fiadds
xchg
scas
je
or
jnp
fstl
cld
or
inc
scas
mov
push
push
iret
jnp
bound
ljmp
xor
sub
sbb
es
adc
jl
sub
insb
psubq
jns
fs
addr16
mov
inc
mov
push
test
fdivrl
mov
xor
and
iret
std
sbb
orb
nop
out
in
fnstenv
push
ja
mov
pop
pop
mulb
or
inc
mov
inc
loope
mov
js
enter
fcmovnb
mov
cwtl
mov
js
out
ret
xchg
mov
popf
or
jb
adc
ds
cmp
jbe
aad
lds
mov
jmp
add
xor
scas
cmp
xor
lcall
push
or
xor
sti
jae
sub
or
jp
std
shlb
fsubr
mov
push
adc
stos
add
xor
pop
daa
cmp
sbb
mov
dec
xchg
lcall
and
jo
or
in
sahf
xor
mov
rorb
shrl
dec
lret
sub
cli
in
inc
stos
ljmp
sbb
jg
pop
ds
mov
and
jg
lds
sub
xor
jge
jl
fstpt
xchg
aas
cmpsl
retw
sbb
dec
outsl
arpl
xchg
jae
insb
lcall
jge
leave
pusha
dec
sahf
jg
sarl
push
sahf
in
aam
test
outsl
fidivrl
pop
add
out
mov
sub
mov
cmp
xchg
js
adc
testl
add
into
add
sub
pop
xchg
or
pop
idivb
and
push
fnstsw
loope
or
cmp
test
stc
stos
lods
lahf
arpl
mov
shlb
fistl
call
mov
fstl
loop
jg
clc
cmpsl
shrl
dec
fstp
push
pop
cmpsb
aam
movsb
lret
repz
push
aam
add
daa
cmp
push
push
inc
scas
ja
bound
mov
inc
in
pop
les
std
mov
les
cmp
stc
and
push
aam
sahf
lret
stc
sahf
cld
or
in
ds
dec
loope
xchg
jne
cmc
sbb
add
lret
leave
dec
loopne
inc
mov
cld
dec
push
mov
out
stc
jae
jo
jne
sbb
or
jbe
rcll
add
insb
lret
and
xor
sub
repz
adc
les
jne
pop
movsl
and
pop
lret
and
ljmp
mov
adc
add
inc
mov
mov
sub
lods
xchg
cmp
in
fisubrl
cmpsb
fcmovbe
inc
in
les
xor
sbb
imul
xchg
sub
pop
cmpsb
cmp
loope
and
int
jns
push
mov
xchg
cmp
loope
vstmxcsr
mov
or
das
loop
xchg
aam
outsl
sbb
adc
fsubrp
outsb
insb
jo
cmp
int
and
push
and
das
lea
out
mov
pop
stos
lods
jl
jnp
sub
lds
popa
xor
xor
pop
gs
jns
jg
loop
cmp
add
call
mov
push
mov
cs
pop
jp
sbb
add
jae
into
adc
pop
js
hlt
in
push
xchg
stos
addr16
mov
mov
fistl
test
pop
adc
fstpl
sub
inc
mov
int3
imul
xchg
stc
push
shlb
sub
sbb
pop
pop
dec
xchg
ds
nop
push
popf
sarl
mov
ja
lock
dec
inc
push
push
int
cld
divb
lea
test
cmc
out
mov
mov
sbb
xchg
test
aas
xchg
cmp
test
in
mov
out
mov
gs
xchg
insl
pop
pop
mov
cmpb
sub
ja
pop
leave
cmpb
test
cli
loope
sub
pop
stos
mov
sbb
dec
mov
lahf
lret
sarl
lods
fmul
js
leave
add
andb
lods
iret
add
inc
push
arpl
dec
subb
in
rcrl
inc
ljmp
test
xchg
test
pop
sti
adc
xorb
adcl
mov
arpl
mov
mov
push
lods
dec
add
push
xchg
inc
mov
lds
mov
je
sbb
mov
aad
lds
sarb
pop
or
test
add
rcrl
dec
loop
mov
sub
pop
cmpsb
cs
inc
int3
jle,pn
iret
subb
mov
out
shlb
mov
cmp
ja
loope
xchg
inc
dec
adc
pusha
pop
jecxz
adc
jmp
and
iret
inc
cld
xchg
inc
cmpsl
or
cld
inc
jo
outsl
mov
xor
ds
outsl
sub
mov
mov
imul
and
dec
std
cmp
mov
add
mov
pop
mov
xchg
jnp
mov
push
push
xchg
pop
push
mov
ret
xor
adc
imul
mov
mov
aam
popa
xor
push
cmp
pop
testb
pop
and
mov
rorb
inc
repz
xchg
xchg
xor
fldt
push
rcrl
cmp
mov
aaa
sbb
mov
lret
pop
sti
fdivrs
cli
adc
cmp
fxch
mov
push
push
xor
cltd
bound
stos
cmpsl
in
add
mov
mov
and
push
in
out
movsb
mov
inc
adc
jecxz
adc
ljmp
pop
push
fistpll
repz
lock
sub
sahf
cmp
sbb
mov
inc
aad
lds
rcrb
jb
cmp
movsl
push
aam
inc
out
inc
icebp
and
xor
cltd
pop
mov
sbb
add
out
cld
xor
adc
mov
xor
push
stos
aad
scas
mov
add
movsb
test
mov
mov
sbb
jl
adcl
inc
fldcw
testl
rcll
sub
mov
or
push
jg
add
popa
cmp
sbb
loope
push
fwait
lahf
ss
fnstenv
out
call
pop
push
out
bound
xchg
sub
push
mov
psubsb
popf
or
or
lods
inc
push
lock
in
or
mov
xchg
mov
and
in
test
insb
mov
push
inc
fisubrl
in
mov
mov
addl
xchg
mov
call
jbe
stos
inc
sbb
mov
in
shrl
mov
idivl
lds
dec
shll
shll
mov
decl
aam
enter
dec
jmp
clc
push
xlat
fidivl
jno
mov
cmp
mov
pusha
inc
pop
shlb
xor
ss
cmp
dec
sub
pusha
pop
imul
push
jecxz
rclb
fidivs
mov
in
adc
outsl
push
ret
ss
cmpsb
in
pop
pop
enter
xchg
mov
test
jg
sub
or
dec
fbstp
inc
jns
cmp
shrl
cmp
lods
and
ret
jns
pop
adc
push
mov
loope
cmp
or
fistpl
pop
imulb
sbb
mov
fsub
jns
int
mov
enter
in
mov
mov
aas
movsl
shrl
xlat
shl
mov
add
mov
jns
xor
mov
fildll
ror
shrl
out
cmp
lret
jnp
cmp
inc
fnstsw
fbstp
in
pop
mov
cmp
jae
xchg
pop
hlt
mov
add
fisubl
outsl
push
inc
sti
add
xchg
sbb
cld
xchg
out
fdivl
ja
sub
push
adc
pop
cmp
cli
xchg
mov
and
imul
rorl
sub
or
mov
mov
inc
add
es
inc
loopne
add
xor
mov
push
add
mov
fsubrl
or
cs
loope
test
stc
push
into
gs
ret
mov
mov
scas
push
aaa
into
jge
lock
jp
les
dec
test
call
mov
jmp
cmp
std
in
je
pop
inc
fistpl
mov
fidivs
sbb
dec
pop
fsubrs
and
push
inc
cld
xchg
cmp
cld
xchg
jp
sbb
cmc
test
and
mov
sahf
loope
cmp
fisttpll
popf
xor
cltd
int
or
inc
aad
inc
sbb
imul
add
cld
test
rcr
mov
cmp
fimull
and
xchg
gs
fists
mov
dec
fists
adc
cli
pop
xor
dec
test
push
popf
inc
pop
mov
out
mov
cwtl
add
ja
mov
lahf
and
shlb
notl
xor
fs
jg
loope
and
mov
lods
outsb
inc
and
pop
inc
mov
cmp
xor
jmp
inc
fistl
push
bnd
daa
arpl
fnsave
scas
inc
add
lea
arpl
and
repnz
testb
sti
fs
nop
pusha
ds
aas
jge
out
dec
push
and
pop
lock
and
in
shrl
ja
mov
mov
mov
fdivl
cwtl
cmpsb
jl
xchg
adc
nop
mov
dec
cltd
out
leave
pusha
lock
popa
mov
hlt
sub
test
mov
dec
pop
test
daa
addr16
pop
popf
out
aas
add
cmp
jo
add
mov
adc
mov
imulb
jle
pusha
rcrb
es
mov
aas
jmp
enter
and
dec
cmpsb
clc
jmp
pusha
int3
mov
lods
pop
mov
adc
ret
pop
sub
add
in
jl
jne
loop
and
icebp
fidivs
arpl
xor
dec
jb
inc
dec
dec
mov
addl
dec
mov
out
sbb
sub
or
std
lock
jg
out
xchg
cmp
push
mov
mov
dec
or
add
sub
icebp
mov
or
mov
loope
jmp
leave
push
arpl
jns
or
jae
jl
jo
xchg
push
cmp
lret
jno
mov
mov
inc
jp
dec
push
adcb
and
inc
xorb
bound
dec
dec
push
ss
mov
pushf
sub
or
push
fnop
inc
xchg
in
jno
filds
add
mov
pop
jbe
xor
pushf
mov
adc
sbb
pushf
mov
push
test
sub
or
orl
call
pop
sub
lret
sbb
outsl
pushf
insl
push
sbb
mov
inc
xchg
cmc
iret
in
mov
jo
jp
stos
js
sbb
insl
add
testl
scas
out
repnz
loope
loope
insl
xchg
sub
xor
push
daa
mov
inc
lea
adc
dec
xor
mov
xor
insb
mov
cltd
in
push
or
subb
mov
mov
jne
sahf
mov
cmp
lods
add
imul
cli
dec
or
lods
lock
sbb
mov
dec
pusha
sarb
jbe
iret
adcb
sbb
xchg
sub
push
xor
jo
mov
loope
or
push
fcomps
out
pxor
pop
xchg
dec
mov
push
mov
sbb
jg
out
sahf
xchg
xor
jnp
dec
mov
icebp
testb
ja
jns
mov
lods
inc
mov
and
std
xchg
jecxz
rclb
in
adcl
lods
inc
jmp
lret
inc
and
jmp
jae
or
push
jge
repnz
mov
mov
cmc
lea
mov
lods
or
push
jne
dec
mov
imul
mov
pop
cmc
pop
mov
scas
pop
cmp
add
mov
mov
adc
push
sub
lds
ret
push
in
hlt
popf
lods
inc
iret
adc
stos
sbb
cld
addr16
mov
inc
stos
in
call
cld
xlat
jb
push
dec
aam
test
pop
mov
dec
movsb
imul
fsub
inc
scas
pop
xor
jns
je
cmpsl
and
and
pop
scas
or
sbb
xchg
pushf
insb
and
mov
xchg
testb
adc
inc
cltd
aad
push
in
mov
lods
stos
xchg
jnp
jmp
nop
ret
subl
mov
cld
inc
mov
lret
ret
orb
add
repnz
xor
mov
out
push
push
add
cmpsl
jbe,pt
icebp
sbbl
adc
lret
jns
cmp
test
cli
xor
xor
lods
hlt
mov
ret
ficoms
test
xchg
inc
pop
mov
fnstsw
pusha
or
sbb
shrl
add
cltd
outsl
out
stc
xor
xchg
sub
dec
cmp
in
xor
push
mov
fidivl
or
test
cmc
add
es
xor
add
jl
mov
inc
xlat
sbb
adc
mov
loopne
loopne
push
ljmp
xor
js
adc
add
arpl
mov
ficoml
cmpsl
in
xor
sti
push
sbbl
sbb
xlat
cmpsb
mov
inc
sub
nop
repz
pop
mov
jecxz
inc
lods
cmp
cli
adc
shlb
les
aad
jl
add
sub
nop
jge
idivb
bound
loopne
stos
popa
out
testb
or
push
xchg
dec
jecxz
je
cmp
mov
pop
dec
in
pushf
pop
hlt
xor
pop
mov
xor
in
mov
mov
mov
jmp
lods
inc
fcomp
lahf
jb
sub
cmp
mov
fbld
mov
stos
sti
inc
fmul
int3
out
fldlg2
cmp
mov
loopne
fdivl
sarl
rcl
mov
out
mov
movsl
fwait
xor
std
sub
int
fbstp
out
daa
mov
adc
stc
shll
adcb
mov
gs
jmp
xor
add
or
push
pop
icebp
mov
mov
sbb
sahf
mov
xchg
icebp
stos
inc
shll
test
lods
mov
stos
inc
mov
dec
loop
shll
jmp
or
fstps
jno
add
shl
xor
mov
add
or
push
mov
sub
jg
stc
mov
fmull
lahf
or
jbe,pn
je
loopne
or
mov
jp
xor
jbe
jne
ljmp
or
fs
fstl
add
xor
jnp
nop
xchg
lock
inc
xor
add
cwtl
push
lds
cmp
jle
pop
cmp
xchg
adc
sar
fidivs
sbb
xchg
sub
xchg
sub
adc
sub
fbstp
dec
xchg
sub
push
jl
fldt
into
pusha
idiv
mov
push
push
fst
outsb
shrb
lock
ror
repz
cmpsb
xor
out
inc
push
sub
pushf
cwtl
cmpsl
dec
loop
mov
imul
cmp
pop
pusha
testl
bnd
pop
and
popf
xor
push
movsl
cmp
xchg
mov
pop
fnstenv
cld
loope
inc
mov
rclb
pushf
jmp
outsb
add
dec
in
push
cwtl
cmp
xchg
insb
roll
jl
fsubs
cmp
lds
repz
data16
or
push
jne
xchg
sub
inc
pop
push
push
out
inc
test
sub
repz
adc
test
or
test
add
push
imul
pop
or
xor
cmp
xchg
cmp
sbbl
dec
mov
test
and
sbb
notb
mov
pop
mov
test
push
push
daa
cmpsl
in
pop
pop
pushf
dec
jnp
das
cmpsb
sahf
insb
cmpsl
fcomi
test
xor
pusha
or
push
add
sub
lret
enter
dec
repz
xchg
xor
or
lahf
jne
out
adc
add
jge
sbb
ret
jp
in
lret
cmp
mov
lret
mov
out
add
repnz
leave
mov
stc
jge
out
outsb
lea
mov
lea
les
pusha
stc
push
mov
in
lahf
mov
sahf
std
fs
xor
mov
xchg
call
mov
lret
popf
cmp
addb
sti
mov
clc
imul
or
xchg
daa
aas
push
xchg
push
mov
ja
sbb
lock
and
out
and
add
inc
imul
insl
dec
mov
popa
cmp
movsw
stos
call
scas
outsb
jne
mov
movsb
sarb
daa
repnz
pop
pop
das
mov
mov
test
cmp
and
xor
push
sub
je
mov
or
mov
lods
inc
cmp
sahf
mov
push
cmp
sub
xchg
test
sti
xchg
add
in
test
mov
jp
mov
sub
lret
mov
sbb
mov
nop
add
mov
insb
jne
xchg
xchg
cmpsl
mov
inc
aad
rcrb
rcr
cmp
fs
imul
xlat
es
arpl
dec
xchg
jge
into
scas
lahf
adc
icebp
jno
and
push
scas
and
stc
sbb
es
aam
shl
out
es
xor
inc
gs
addr16
ret
pop
aam
pop
dec
ret
push
dec
xchg
popa
mov
fsubrs
lea
and
dec
in
clc
stc
jle
fisubrs
sti
movsl
cmp
jbe
stc
fs
xchg
cmp
es
loopne
jl
dec
adc
push
pusha
mov
dec
dec
jno
or
and
adc
sub
test
std
int
jmp
fs
and
jle
or
or
or
jb
loop
loopne
js
or
gs
jmp
insl
js
into
dec
pop
add
call
stc
popf
dec
jecxz
sbb
out
add
inc
inc
cwtl
add
test
cs
sub
push
push
std
or
dec
ds
sub
jecxz
sub
or
cs
je
scas
or
addr16
xchg
inc
aaa
mov
cmp
pop
inc
fimuls
loop
jnp
shlb
nop
faddl
jge
in
or
push
ficomps
or
test
std
sub
push
push
outsb
xchg
jecxz
gs
fbstp
jecxz
and
mov
cmp
inc
cmpsl
inc
mov
ficoml
mov
jo
sbb
ds
xlat
es
and
cmpsb
dec
in
hlt
fs
mov
ret
sbbb
mov
mov
pop
mov
or
je
repz
mov
sub
cltd
dec
fwait
or
lcall
jnp
shrb
lret
lret
rolb
dec
adc
adc
andb
cwtl
call
dec
pop
and
mov
mov
dec
xchg
cmp
sarl
inc
pop
inc
mov
lret
imulb
push
lods
movsb
mov
fisttpl
sub
sahf
scas
fwait
xor
cmp
cmpsl
mov
in
inc
sti
and
cmp
int3
sub
push
xchg
lds
dec
dec
adc
xchg
sar
test
fcomip
dec
pop
testl
gs
cld
sbb
jecxz
jmp
xchg
js
mov
movsb
inc
das
jns
mov
fwait
jb
and
xchg
and
jg
inc
inc
in
sbb
jo
out
mov
cmp
andl
in
jl
sub
faddl
mov
lret
cld
lahf
mov
sbb
stc
adc
adc
jae
add
clc
addr16
inc
jnp
fcoml
or
jo
ljmp
push
add
ret
mov
xor
cmp
pop
jg
mov
bound
int3
loopne
bound
mov
add
pop
fcompl
shufps
dec
or
sub
popf
xor
sub
clc
sub
xor
insb
cli
add
mov
and
incl
lods
mov
mov
and
jne
xor
or
mov
sub
mov
sub
mov
test
in
jns
fwait
daa
popf
pop
mov
outsb
imul
push
mov
or
scas
jmp
ljmp
jp
sub
aaa
fldt
jl
push
jb
xchg
sbb
orb
sbb
stos
in
addr16
stc
push
mov
orb
dec
cwtl
sahf
dec
mov
mov
lea
xor
insl
fidivs
adc
mov
fmull
push
fidivl
add
adc
clc
push
xor
lods
pop
test
cwtl
mov
fincstp
push
mov
test
stos
sahf
xor
push
cmp
push
pusha
xor
mov
mov
mov
push
loopne
mov
and
push
push
pop
test
xor
jne
das
lea
mov
adc
clc
and
jg
popa
mov
xchg
or
mov
ja
dec
aaa
fnstcw
arpl
xchg
stos
js
jne
ret
mov
mov
lea
xchg
xchg
sub
mov
mov
addr16
data16
cld
lcall
mov
sbb
sbb
sub
xlat
idivb
fidivrl
fdivrl
pop
aaa
aam
adc
sbbl
subl
mov
sbb
je
rclb
inc
pop
mov
push
faddl
dec
mov
push
addl
push
pop
test
xchg
incl
and
mov
jbe
aaa
or
xor
mov
addr16
cld
sub
jno
mov
sbb
mov
adc
es
inc
arpl
addr16
cwtl
xchg
xchg
pop
mov
nop
push
jmp
pop
inc
addl
das
cmpsb
shll
inc
mov
pop
test
fldenv
hlt
dec
call
aas
std
insb
enter
lea
add
adc
mov
lds
pop
cmp
xchg
mov
mov
jne
xchg
clc
in
aam
inc
push
mov
xor
jnp
push
mov
out
sti
dec
out
mov
xor
xchg
mov
cmp
mov
out
or
mov
mov
fisubrl
scas
inc
sbb
into
outsl
leave
xor
shlb
inc
mov
mov
out
cwtl
xchg
lahf
in
add
inc
xor
insb
jmp
mov
cmp
inc
fnstcw
leave
pushf
cmpsl
sbb
fs
sbb
mov
jo
das
adc
and
lea
xchg
xchg
loopne
fwait
mov
add
push
inc
pushf
dec
jne
icebp
cld
daa
push
push
jl
dec
subl
inc
xor
stos
mov
push
push
loopne
pop
divb
cmpsl
sbb
scas
sub
lea
and
arpl
jb
cmpl
repz
addr16
inc
ljmp
and
dec
adc
lcall
cwtl
insl
xchg
je
jge
test
xchg
xor
icebp
adc
movsb
jne
xor
cmp
bound
fldenv
stos
jne
sbb
push
ret
pop
pop
aas
dec
les
jmp
push
or
es
jbe
jl
ss
xlat
call
orl
xchg
xchg
ret
fwait
lods
hlt
cmpsb
xlat
call
and
rcr
icebp
push
xor
adc
inc
ds
cmp
jae
dec
imul
rol
sub
push
push
xchg
mov
jg
fisttps
mov
pop
movsb
and
add
add
xchg
rcll
push
out
jne
cltd
dec
clc
mov
stos
hlt
daa
mov
leave
roll
arpl
jg
cltd
sti
lahf
push
mov
and
es
stc
mov
add
stos
lcall
sbb
inc
and
aaa
jecxz
imul
or
sub
jmp
or
cmp
out
aad
lds
cmp
mull
in
into
pushf
xchg
cmp
jecxz
or
test
pop
dec
cmp
jg
cmc
mov
push
ljmp
jno
std
imull
xchg
mov
push
sbb
out
test
mov
mov
jg
adc
jnp
fwait
rcrl
rorb
and
mov
sahf
cli
sbb
cwtl
cmp
pop
rcrl
dec
mov
js
lods
push
sbb
jns
bnd
imul
sub
dec
xchg
push
sub
into
mov
in
dec
mov
add
push
mov
insb
in
sbb
shll
pop
int3
arpl
ret
jg
ljmp
mov
xor
add
push
inc
fcompl
scas
sbb
cmp
popa
dec
lret
dec
scas
testb
mov
add
repnz
add
shrb
sbb
inc
jecxz
mov
push
or
ja
rolb
sahf
xorb
mov
mov
xor
jecxz
mov
xlat
cld
push
mov
fldl
pop
push
into
dec
out
adc
sbb
std
dec
and
pushf
in
xchg
jge
lds
and
and
cld
outsl
hlt
subl
push
int
cmp
punpckhdq
jmp
inc
push
jbe
pop
jae
dec
add
jo
loope
mov
push
adc
test
insl
repz
out
ret
ja
and
cwtl
pop
push
aaa
dec
and
mov
shl
or
xchg
jge
fnsave
add
xchg
test
sub
cs
mov
movsb
add
gs
subl
insl
jp
sti
sbbl
out
sbb
ret
hlt
push
inc
fldl
sub
in
aam
fnsave
incl
xor
push
in
adc
cmovbe
je
lock
int
lds
jmp
sahf
pop
and
int3
loope
loopne
mov
popl
cmp
idivl
shll
rcr
add
or
pop
out
push
pusha
jbe
data16
sub
add
mov
rcrb
movsb
lods
mov
pop
mov
sub
pushl
add
loop
enter
repz
aam
std
push
dec
in
push
cwtl
pop
xor
push
in
es
leave
arpl
dec
jae
pop
subb
lea
mov
pcmpgtb
mov
aam
dec
outsb
outsl
cli
loope
aam
adc
addr16
mov
sbb
sub
ja
pop
lret
cmp
and
aas
jmp
xor
sub
mov
cmpl
or
sbb
daa
xchg
jb
pop
mov
inc
int3
lret
clc
push
push
sbb
mov
cmpsb
lcall
jp
int3
sub
std
adc
adc
add
xor
xor
mov
stos
or
adc
add
xchg
pushf
aad
sub
lahf
ret
mov
pop
int
enter
pop
add
cmp
mov
clc
or
inc
xchg
fsubrl
pop
addr16
dec
testb
inc
push
movsl
xor
gs
jge
pop
pop
jecxz
sbb
cmp
imul
cmpsb
inc
add
pop
cmp
pop
cltd
xor
pop
push
gs
sbb
and
push
outsl
sbb
in
xchg
xchg
adc
mov
out
xchg
mov
lret
jae
test
mov
arpl
lods
jmp
add
inc
fmull
movsl
and
into
sub
add
push
sahf
stos
cwtl
push
mov
enter
ret
fstp
dec
mov
pop
xor
fwait
lods
pop
jno
nop
into
dec
test
push
repnz
or
sbb
rol
and
jb
add
xor
fistpl
xchg
and
in
call
add
faddl
pushf
out
mov
xchg
fcompl
inc
lret
rorb
sbb
mov
mov
sub
repz
cmp
scas
nop
and
dec
iret
popa
sub
sub
cmpsl
inc
xchg
cmp
fadd
sbb
cmp
mov
stc
pop
ret
pop
dec
or
inc
inc
loope
lea
mov
push
mov
shll
int3
call
mov
mov
mulb
jmp
inc
cli
push
hlt
jg
cs
push
popl
call
adc
aas
imul
pop
inc
pusha
cmc
and
lahf
lods
inc
out
dec
cmp
mov
jae
stos
or
sbb
xor
ja
dec
movsb
xchg
cwtl
faddl
ret
fsubrp
int
sub
dec
lret
cmp
mov
sti
jle
sub
call
lods
jp
or
sub
test
ds
inc
push
push
mov
mov
sti
add
shl
and
cwtl
stc
mov
inc
das
inc
fldenv
push
icebp
and
cld
mov
outsb
ficomps
outsb
pop
cmpsl
push
movsb
into
xor
inc
or
pushl
daa
lcall
adc
mov
jne
popa
lods
testb
inc
sub
jo
movsb
loopne
mov
push
mov
lods
xchg
out
xchg
push
popf
jp
clc
cmp
jno
out
pop
aam
mulb
aas
setne
cwtl
jle
popa
add
jbe
adcb
mov
dec
cs
jmp
fistpll
jo
pop
daa
sbb
movsl
mov
cmp
xchg
rcrb
jmp
repz
and
jb
cli
cwtl
pop
sarb
adc
mov
jge
lcall
jo
xor
test
rol
cmp
insl
imul
adc
in
in
push
mov
sbb
jae
xlat
daa
xor
outsb
cmp
dec
sbb
imul
lock
shlb
and
cmp
outsl
adc
fs
xchg
mov
mov
dec
mov
inc
test
jno
and
and
jo
sub
ljmp
lods
ljmp
sub
dec
lret
outsl
xchg
push
loope
or
mov
or
sbbl
pop
or
jns
dec
push
jae
mov
mov
push
cmp
out
add
mov
pop
outsb
jp
mov
mull
sub
ret
add
xchg
mov
dec
and
ret
sub
sti
notb
in
gs
mov
xor
fs
fstpt
push
cmp
xchg
push
notb
pop
jmp
mov
jge
loope
sub
mov
ss
cmp
xor
jnp
fwait
xchg
adc
or
imul
jp
outsl
xchg
dec
jge
js
pop
lcall
dec
fwait
lock
fmull
mov
sbb
sbb
cli
sahf
sub
cltd
je
out
cmp
push
fsubrs
insb
and
aam
nop
loope
inc
lds
xor
scas
std
add
int3
andl
movsb
popf
imul
addr16
or
adc
ret
sbb
xchg
nop
push
fsts
ret
repz
mov
mulb
lock
add
and
xor
loope
sbb
fwait
lret
xor
out
fxch
xor
jg
fbld
lock
xchg
adc
mov
bound
cmp
je
dec
mov
frstor
pushf
fstl
paddd
fildll
clc
ds
stos
out
jp
daa
out
mov
test
imul
inc
stc
cmp
ds
add
xor
xchg
add
cmp
jnp
mov
xchg
xor
dec
inc
loop
stc
inc
xchg
mov
push
sbb
push
xchg
mov
sbb
sbb
xchg
fs
aas
cmc
cmp
push
sbb
cmp
out
cmp
imulb
out
inc
pop
lods
jl
ss
inc
sub
lea
push
xchg
mov
in
in
std
lret
xlat
hlt
sbb
loopne
icebp
sbb
stos
pop
mov
inc
fwait
cmpsb
and
negb
mov
push
pop
adc
out
sub
jne
push
test
cwtl
testb
jb
mov
sbb
push
cli
sbb
pop
sbbl
into
or
std
adc
dec
arpl
dec
aam
push
shl
sbb
ss
pushf
cmp
out
insl
test
xor
fwait
cld
fcoms
jmp
pxor
push
cwtl
enter
stc
and
mov
xchg
add
adc
push
mov
pop
xor
jg
jbe
cmp
loop
xchg
add
aas
sub
lea
mov
icebp
mov
sarl
rol
or
es
dec
fnstenv
mov
xchg
outsb
mov
and
cmpsb
les
js
dec
jg
mov
insb
test
pop
idivb
shl
sbb
in
push
lds
aam
adcb
add
out
and
jne
inc
fwait
stos
push
and
ret
les
or
and
mov
out
adc
imul
aaa
out
inc
ret
mov
int
mov
test
insl
jg
test
pop
cmpsl
ret
jle
stos
inc
aas
adc
add
push
sbb
xor
repnz
rorl
mov
vmovntps
sub
dec
xlat
mov
movsl
mov
data16
rorb
es
dec
lahf
cli
cmp
lods
inc
imul
lea
dec
gs
sub
lahf
mov
mulb
pushf
add
push
xor
inc
push
loop,pt
or
add
es
cltd
xor
mov
adc
leave
aam
jp
shlb
jo
popf
push
xchg
fnstenv
cwtl
das
repnz
push
mov
sbb
cmpl
jg
sahf
hlt
aam
mov
pop
movsb
sub
into
lret
jae
ficompl
into
imul
and
jo
std
in
xchg
xchg
xor
ret
push
aad
jmp
or
dec
mov
ret
pop
mov
loope
out
dec
xor
cwtl
das
stc
mov
push
pop
imul
jno
js
les
outsb
ret
into
in
test
inc
repnz
pop
psubd
repz
xchg
sahf
mov
ds
jmp
aam
push
or
cltd
xor
cltd
push
rorl
imul
xorl
lea
jl
sbb
mov
cmp
out
lahf
ss
popf
xor
movsl
rolb
outsl
push
lods
lahf
jp
or
xchg
lods
inc
mov
ret
lret
adc
mov
and
mov
jmp
and
cmp
popa
in
js
mov
pop
je
cmc
mov
test
push
adc
and
xchg
jge
ret
outsb
fdivrp
jae
add
mulb
lret
std
std
inc
xor
xor
jmp
mov
lcall
gs
and
pushf
sub
mov
outsl
pop
imul
mov
repnz
rolb
into
sub
or
lods
mov
pop
daa
mov
lds
clc
xchg
aam
mov
arpl
dec
into
xchg
test
xchg
or
or
mov
mov
sub
jo
scas
loop
js
orb
add
cmc
fmuls
lcall
and
mov
insl
stos
in
in
ja
sbb
xchg
xchg
cmpsl
cs
in
adc
fidivs
into
fcompl
jge
push
sub
xchg
lods
mov
jnp
insw
scas
jae
mov
push
dec
cmp
xchg
iret
fistpl
push
xor
jle
dec
jecxz
and
or
xchg
mov
push
mov
imul
dec
push
cwtl
adc
dec
inc
mov
in
std
int3
sub
cmp
sub
imul
xchg
push
inc
cmc
jnp
and
das
jl
add
cmp
or
inc
arpl
pop
push
popa
mov
movb
out
jno
pop
lret
int3
hlt
push
jmp
rclb
das
pop
fnsave
out
in
ss
fsts
cltd
pop
mulb
psubd
xlat
pop
insl
hlt
gs
in
test
xchg
add
ficomps
aad
jp
cmp
push
repnz
test
xor
leave
shlb
xchg
mov
push
movsl
lods
dec
nop
push
fnsave
and
and
daa
aad
popf
lods
add
dec
arpl
inc
andb
adc
mov
jbe
inc
add
xchg
and
pushf
xchg
sbb
push
dec
mov
and
popf
iret
inc
stc
sbb
mov
out
xchg
cmc
int
push
mov
mov
cli
test
cmp
add
mov
addb
mov
add
xchg
pop
cmp
jae
add
xchg
pop
jecxz
adc
push
cltd
lcall
shlb
push
adc
jno
or
scas
and
mov
mov
nop
mov
imul
pop
push
pop
shrl
arpl
push
insb
in
mov
xor
in
sbb
pop
aas
roll
call
ljmp
rol
xor
loop
mov
les
push
std
pop
mov
mov
fdivl
pop
push
fwait
push
cmpb
jnp
jae
rclb
jp
movsl
imul
xchg
fs
divl
mov
jo
jo
cmp
addr16
cmp
xor
aaa
outsl
loop
dec
pop
jge
jle
cli
daa
add
nop
lods
mov
mov
cli
shll
outsl
stos
sbb
adc
andb
scas
ds
stos
xchg
xor
lds
inc
add
jmp
aad
es
mov
mov
lds
movl
mov
mov
faddl
fmull
sub
decb
adc
inc
push
bound
cmpsl
sub
clc
shlb
fs
leave
je
sti
push
in
cmp
ficoms
jo
or
push
mov
sub
das
sbb
dec
dec
cmp
jne
jb
in
pop
mov
sub
pop
div
push
jbe
sbb
inc
jp
mov
fstpl
adc
test
sbb
setp
dec
imul
push
jne
mov
and
xor
or
daa
jne
cmpsb
mov
dec
leave
test
jbe
cmpsb
fs
mov
fs
sub
mov
mov
or
fildl
stos
xchg
sbb
add
enter
leave
sub
fldenv
das
mov
in
xchg
jnp
mov
dec
subl
mov
push
cwtl
movsl
jg
mov
xor
rorb
mov
in
and
mov
call
sub
pop
movsl
mov
aaa
pop
mov
mov
rcll
mov
out
jmp
scas
bound
enter
inc
popa
out
aas
adc
fildl
or
sub
test
dec
hlt
roll
push
jl
into
mull
mov
out
aam
clc
ret
cmp
shlb
repnz
ret
sbbb
and
jl
popf
mov
hlt
mov
call
shll
xchg
adcb
cmpb
adc
pop
pop
push
xor
mov
into
fisubs
jnp
dec
das
iret
jecxz
out
mov
or
or
ljmp
shrb
ficoml
out
daa
xchg
add
push
lods
std
ljmp
movl
mov
fcmovne
ret
mov
pop
lahf
cs
jae
xlat
add
fsubrl
shl
jb
mov
add
push
test
lock
sbb
cmc
lahf
idivl
push
dec
cmpsb
jae
fnsave
lcall
push
ljmp
in
insl
sbb
xchg
into
aad
pop
ljmp
movsb
pop
dec
and
inc
pop
test
fidivs
inc
shr
add
mov
or
ds
adc
and
push
jne
add
push
jmp
xlat
insl
xchg
xchg
out
sbb
pusha
aas
repnz
imul
shl
sub
cmp
lcall
mov
pop
fidivs
mov
xlat
xor
daa
mov
testb
test
jbe
xor
cld
out
leave
and
or
jp
inc
icebp
or
jno
in
add
jae
cli
xchg
push
adc
push
add
cmp
fisubs
pop
sahf
xor
mov
mov
push
mov
std
jg
andb
xor
sbb
and
es
aad
lcall
mov
enter
inc
loop
mov
lock
mov
dec
cmpsl
rcl
test
hlt
adc
and
mov
cwtl
xchg
test
mov
push
out
push
mov
inc
pop
pop
iret
and
mov
stos
cld
push
lahf
testl
mov
jmp
sarb
pop
call
inc
lcall
jle
sub
xor
jne
test
pop
out
inc
in
jno
repz
fcoms
nop
inc
jbe
push
ss
mov
insl
rep
xor
lcall
sarb
test
aad
imul
jno
cmp
fidivl
or
out
stos
mov
inc
dec
lret
shrb
xchg
xor
scas
xor
cmp
call
push
daa
sbb
pop
js
jp
sahf
jmp
adc
cmp
addr16
xchg
pushf
lea
xchg
cmpsl
cld
push
mov
push
cltd
fcoml
sub
push
pop
fsubr
xor
test
mov
mov
loope
adc
mov
testl
dec
adc
jo
les
testl
bound
push
aaa
xorl
fsubrl
add
lods
pop
mov
aaa
add
sti
pop
sub
dec
in
push
mull
mov
out
pop
cld
bnd
jno
cmc
sbb
and
addr16
cmp
pop
jns
aad
jge
mov
cmpsl
adc
das
inc
enter
lret
lret
cs
sti
cmpsb
in
push
lret
outsl
mov
adc
add
pop
push
scas
ss
shlb
dec
fs
sbb
jmp
mov
mov
push
push
xchg
add
fbld
push
push
jbe
movsb
jnp
fldt
inc
popa
push
test
push
jl
lods
add
call
cltd
sub
fwait
pop
cmp
je
mov
xchg
test
jno
js
addr16
repnz
inc
enter
jmp
aas
iret
test
dec
dec
mov
lds
sti
stos
hlt
pop
in
cmp
lcall
sub
push
movsb
loope
rcrl
test
push
popa
out
inc
sbb
mov
std
or
es
add
mov
xchg
ljmp
adc
xchg
adc
fmul
call
jg
dec
mov
mov
push
dec
outsl
loop
stc
jnp
push
jno
adc
daa
cmp
xor
and
fstpl
push
sbb
sbb
jg
imul
jo
fisubl
pop
sbb
call
jge
jne
sbbl
inc
ds
push
fstl
daa
push
sbb
hlt
inc
movsl
in
mov
dec
repz
adc
leave
inc
imul
pop
cmp
sub
addr16
in
or
jae
push
dec
test
loop
fstps
call
jns
mov
xor
orl
push
pop
xor
mov
insl
fwait
int
and
out
jl
pop
xor
pop
push
int3
gs
sahf
int
imul
ja
jge
and
pop
ficoms
jmp
jae
cmc
int3
cmc
lcall
je
je
add
xchg
add
pop
mov
and
cmp
scas
add
cmpsb
nop
leave
pusha
stc
pop
sub
call
insl
dec
and
and
mov
sub
in
addl
cmp
mov
pop
jmp
pushf
or
and
mov
shll
xchg
sarb
mov
loope
cmp
jb
lea
call
mov
in
jecxz
imul
test
fsubl
pop
or
cltd
roll
inc
decl
decl
pop
dec
jns
loope
lock
inc
inc
scas
xchg
sti
jb
jle
sbb
or
shl
pop
push
mov
inc
mov
aam
push
js
mov
idivl
add
xchg
jo,pt
enter
shl
dec
jae
call
in
fidivrs
mov
mov
imul
cmp
cmp
push
cmp
jo
mov
cli
xchg
div
mov
sub
ljmp
xchg
vpunpckldq
lcall
je
dec
repnz
xchg
pusha
mov
xchg
sub
ljmp
leave
inc
push
fbstp
mov
fs
mov
mov
adc
test
jne
stos
ss
dec
pop
and
mov
xor
nop
push
xchg
push
lds
xchg
pop
test
jl
sbb
xchg
sub
cmp
lods
xchg
nop
xchg
rorb
ret
movsl
cmp
sahf
jno
dec
lea
shll
in
test
ret
dec
pop
mov
bound
sbb
push
repz
ja
nop
test
adc
inc
cli
insb
xor
inc
fwait
shll
arpl
push
dec
push
mov
xor
jnp
mov
push
addr16
xchg
jo
sarb
test
mov
add
pop
in
call
aad
inc
push
mov
dec
inc
ret
je
mov
add
imul
xor
aad
or
adc
push
push
and
fldenv
fmull
out
js
aam
jo
fcmovnb
xchg
fidivrs
pop
test
dec
arpl
iret
in
adc
flds
pushf
adc
into
arpl
jo
mov
popf
jg
or
ret
add
and
jae
add
cmp
and
jg
pop
dec
mov
stos
sbb
cmp
push
ret
mov
mov
daa
xor
cli
xchg
xor
aad
push
setp
or
mov
test
mov
adc
test
lcall
int3
mov
mov
sahf
pop
int3
int
mov
cmp
push
xor
out
adc
xor
push
mov
inc
pop
mov
lcall
into
ja
mov
test
aas
lds
mov
lods
out
insb
decl
mov
push
xchg
rcr
dec
mov
push
hlt
dec
and
push
push
in
mov
inc
in
in
add
push
sub
and
add
divl
loope
imul
cmpsb
cmp
sub
xor
lds
shrb
enter
pop
jmp
mov
ficompl
xor
cmpsb
pop
xor
nop
or
sbb
xchg
push
or
ja
in
lahf
in
stos
int3
int
sbb
push
and
insl
data16
xchg
dec
pusha
out
loop
xor
mov
dec
lea
cld
mov
cmp
cld
gs
enter
sub
mov
mov
cmpsb
clc
fcmovnu
push
popf
or
inc
fucom
sub
dec
adc
mov
bound
mov
xlat
fsubrs
mov
setno
jnp
jae
jle
dec
repz
pop
jmp
sbb
mov
adc
int
sub
jecxz
imulb
std
xor
test
jge
adc
out
lcall
sti
pop
mov
jge
aas
dec
enter
rcrl
arpl
jbe
stos
xor
push
movl
push
es
adc
mov
repz
in
out
aaa
enter
inc
mov
fxch
pop
jae
das
cmp
stos
add
ficoms
mov
addr16
fcoml
sub
js
mov
shlb
inc
fmull
in
xor
sbb
add
inc
xor
pop
xchg
sub
sti
mov
sub
mov
dec
nop
popa
dec
data16
adcb
xor
fisubs
sbb
and
ljmp
sbb
cmpsl
dec
out
cld
xchg
cmp
cmp
xchg
pop
jns
in
mov
or
or
pop
call
mov
negl
pop
push
inc
xchg
subb
cltd
std
cmp
mov
push
in
inc
jecxz
mov
outsb
aaa
stos
jnp
in
nop
xchg
mov
aas
and
cmp
movsl
lods
and
fdivrl
mov
stos
mov
adcl
andb
xchg
jg
cmp
add
cmp
inc
fstpl
push
mov
sub
imul
aam
mov
mov
std
xchg
cwtl
push
ljmp
rorl
fs
and
orl
lret
mov
push
fimull
or
dec
dec
xchg
xor
lahf
sub
sbb
mov
xor
inc
idivb
mov
out
cld
push
push
inc
imul
das
pop
dec
pop
xchg
sub
xchg
jae
cmpsl
daa
psubusw
fsubrs
sti
pop
lahf
sub
xor
loope
sub
add
and
sub
mov
pop
test
add
test
sbb
pusha
out
pop
mov
and
lcall
idivb
pop
adc
fs
loopne
sub
and
xchg
xor
sahf
xor
dec
mov
pop
push
adc
push
cmpsb
repz
mov
imul
loop
imul
imul
cmp
adc
mov
xchg
daa
sub
push
repnz
pop
mov
pop
xchg
out
inc
cmp
ds
inc
xor
push
outsl
imul
push
mov
leave
add
cld
aaa
or
cmp
push
sub
push
or
nop
adc
cmpsb
fisubrs
sub
mov
arpl
xchg
jo
cmp
mov
push
ljmp
in
or
or
imulb
mov
scas
mov
dec
ss
loop
or
mov
add
jecxz
test
fisttps
fisubrl
mov
addl
or
repnz
test
mov
jle
add
sbb
addr16
lret
dec
inc
jmp
test
pushf
outsl
into
fcmovne
xor
ret
cwtl
xchg
in
enter
and
dec
add
mov
int3
xor
push
mov
or
mov
push
sub
cld
jnp
xor
mov
aam
js
or
repnz
mov
mov
xchg
adc
clc
inc
in
arpl
enter
fidivrs
shl
enter
aas
or
mov
dec
in
dec
and
cli
fmull
aaa
cmp
mov
arpl
mov
jp
mov
fwait
addl
test
add
mov
mov
ljmp
incb
ljmp
or
fs
mov
sub
in
mov
xlat
popa
inc
mov
and
dec
mov
nop
leave
mov
arpl
out
ret
sub
sub
xchg
jnp
stos
inc
stos
mov
xor
cmp
cmc
push
jne
adcl
push
inc
and
in
stos
inc
lret
fistpll
add
stos
lods
mov
and
lock
sub
xchg
mov
ret
pop
cmp
and
push
cmc
mov
les
jg
jbe
je
jns
sti
inc
nop
test
inc
ss
pop
lret
xor
push
inc
cld
xlat
xchg
lret
mov
or
out
test
ret
fiadds
jmp
jl
jae
ja
call
or
shrb
movsb
xlat
mov
lds
in
arpl
lock
aaa
daa
cmp
push
movsl
add
mov
jnp
lcall
aas
adc
jl
mov
xorl
dec
pop
dec
jae
testb
mov
push
mov
sub
mov
sub
pop
lock
es
jb
mov
mov
xor
pop
pop
repnz
das
es
test
mov
jecxz
scas
mov
into
into
test
jl
fnsave
sub
loop
adc
pop
repnz
add
dec
loopne
mov
push
mov
fdivr
js
in
nop
imul
sbb
outsl
push
cwtl
daa
dec
add
cli
loope
dec
and
orl
and
cld
negb
roll
stos
jge
imul
icebp
cmp
push
ss
xchg
lret
jp
mov
jno
push
int3
pusha
xorb
push
in
ljmp
xchg
add
jne
pushf
arpl
fidivs
inc
xchg
jno
inc
mov
call
mov
aaa
daa
mov
jle
inc
fmul
lahf
dec
scas
cli
das
jbe
fcoms
inc
test
cmpsl
es
leave
pusha
popa
inc
mov
xchg
push
jno
cmp
push
jg
aaa
jecxz
out
adcb
jmp
enter
and
push
in
cmp
push
fdivl
call
xchg
sbb
popf
xor
test
jb
pushf
shr
int
add
lret
aam
sbb
scas
in
mov
dec
jo
mov
cmp
jmp
in
pop
xor
mov
arpl
shll
mov
inc
mov
call
adc
adc
dec
mov
aad
and
mov
dec
xchg
aam
dec
imul
aas
and
stc
push
pop
jge
pop
into
jle
shrl
shlb
xchg
pop
mov
pop
xor
outsb
xchg
push
mov
mov
adc
pop
xor
push
push
mov
and
mov
dec
jb
add
push
inc
push
mov
scas
mov
cmp
jle
cmpsl
popf
sbb
add
mov
mov
mov
movsb
aaa
int3
mov
jp
daa
mov
jnp
in
xor
arpl
cli
imul
pop
jp
cmc
sbb
divl
mov
pop
test
out
ror
mov
mov
xchg
xchg
add
xor
and
lcall
sti
xor
mov
add
inc
clc
fistpl
push
xchg
fs
enter
test
adc
xchg
inc
loopne
dec
pop
data16
jmp
shrb
mov
dec
roll
mov
add
add
jg
ljmp
xchg
mov
mov
pop
movsb
cmpsb
mov
loop
cltd
outsl
xor
loop
pop
rcrl
iret
movsb
dec
mov
push
out
xchg
imul
shl
into
repnz
cmp
mov
out
fcmovnu
jne
and
adc
out
data16
pop
mov
pop
movsl
mov
mov
into
jno
adc
xchg
mov
or
lcall
sti
data16
xchg
sbb
insl
data16
lret
mov
lds
out
pop
sub
mov
mov
cmpsl
pop
test
inc
jne
add
mov
push
in
cmc
sbb
rcrb
xchg
dec
jae
xorl
or
mov
sub
lcall
and
hlt
cs
nop
pusha
adc
xlat
xchg
mulb
sub
cmpsl
ds
jb
mov
nop
xchg
mov
in
push
lcall
rcr
adc
mov
xor
in
xor
out
or
mov
outsl
push
jl
xchg
cmp
mov
fnstsw
add
pop
dec
or
xor
arpl
hlt
lods
push
addr16
mov
xor
inc
testb
xchg
icebp
imul
dec
mov
adc
leave
dec
mov
xor
jb
rclb
mov
jne
jne
cld
fwait
adc
inc
addr16
mov
jecxz
sbb
cltd
pop
dec
cmp
mov
ss
pusha
scas
push
shr
lods
inc
fnsetpm(287
jns
icebp
rclb
lds
mov
sti
adc
cltd
popa
dec
in
jbe
mov
pop
fsubl
sub
cmp
idivb
scas
pop
mov
xor
xor
push
jno
dec
push
mov
mov
outsb
dec
popa
mov
test
loope
pop
inc
outsb
add
mov
cmpsl
mov
scas
out
xchg
jg
xchg
mov
pop
ljmp
xlat
pop
jmp
jp
pop
xchg
jg
cs
loopne
pop
xchg
je
fdivrs
jmp
adc
xor
adc
inc
pop
jnp
jns
arpl
jge
in
pop
movsl
in
push
cmpsb
inc
fisubl
or
mov
push
out
sub
adc
pop
mov
sbb
nop
daa
insb
das
test
jle
dec
pop
pop
push
scas
ret
xor
sbb
dec
or
mov
lahf
ja
pop
test
out
popa
loopne
xchg
push
adc
dec
pop
adc
js
std
out
pop
repnz
pusha
popa
std
jg
ja
jge
loop
cli
enter
sub
fdivrl
mov
sub
or
mov
dec
out
xchg
dec
sbb
or
rolb
mov
sub
add
insb
pop
inc
sbb
pop
push
adc
and
mov
cwtl
mov
fcmovb
fimull
sbb
inc
inc
fcomp
jae
out
dec
jb
mov
sbb
lret
push
pusha
imul
pop
test
ret
ss
sub
mov
aas
and
imul
mov
in
fxch
rol
and
push
ret
pop
jg
int3
std
aam
mov
les
add
scas
add
loopne
lock
inc
cmpsb
cmp
and
fsubp
pand
inc
add
adc
pop
sub
lcall
sbb
or
sbb
aas
sahf
in
jb
nop
inc
push
inc
popa
adc
adc
icebp
jbe
xor
repz
roll
outsl
mov
pop
push
jg
lcall
lret
push
push
icebp
mov
and
insl
sub
mov
or
fadd
add
cmp
cmpsb
or
sub
ret
sbb
pop
lds
sbb
popa
mov
mov
adc
gs
test
pop
or
rcll
sub
lcall
push
jmp
or
dec
mov
shl
addr16
cltd
sbb
cmpsb
add
fistps
adc
movsb
pusha
pop
pop
adc
mov
add
enter
movsl
in
jo
cwtl
fstpl
pop
xchg
xchg
loop,pt
xor
push
and
enter
xchg
scas
shrl
jae
test
mov
inc
mov
sub
inc
lret
adc
into
xor
vaddss
insl
dec
mov
loope
aas
insl
in
cs
mov
inc
sbb
out
mov
cmp
xchg
jecxz
adc
xlat
xchg
sbb
imul
xlat
es
movb
jmp
jmp
fistpl
mov
and
test
cld
daa
lret
and
adc
sbbb
shll
scas
insb
adc
addl
sub
mov
fbld
xchg
lret
inc
push
add
mov
adc
out
scas
pusha
lcall
aas
xchg
xchg
or
or
testl
jbe
imul
out
fistpl
mov
dec
sbb
cltd
dec
in
sahf
jmp
pop
inc
cmp
xor
dec
adc
sub
imulb
cli
or
push
scas
inc
add
bound
cltd
xchg
pop
adc
mov
lds
cmpsb
js
sbb
outsl
outsl
pop
sbbb
xchg
pop
mov
outsb
fwait
je
jl
rcrl
rep
fwait
bnd
insl
leave
std
xchg
packssdw
fdivrs
xor
pop
cmc
sub
addl
add
stos
push
adc
vpshlb
xorl
dec
in
sub
pop
sub
mulb
or
filds
pop
cld
scas
nop
rcll
mov
std
inc
sub
lcall
mov
jae
push
and
and
repz
jae
pop
movsl
dec
loopne
jo
popa
xor
push
push
and
jmp
rcr
dec
add
cmp
pop
orb
pop
outsb
dec
test
pop
dec
mov
cmpsl
movsl
cld
cmpsb
andb
add
and
repz
dec
pop
xchg
fcoms
adc
pop
fwait
sti
lahf
es
cltd
push
push
and
adc
and
clc
addr16
cmp
iret
sbb
mov
hlt
add
scas
cli
rorb
loopew
clc
mov
or
shll
push
cmc
mov
shll
or
inc
cmp
and
fnstcw
xchg
cmp
ja
lea
adc
push
cmpsl
shrb
icebp
ljmp
fnstenv
cmp
dec
pop
les
add
push
add
stos
dec
or
mov
and
xchg
jg
dec
in
mov
inc
or
inc
loopne
lret
and
add
sbb
addr16
pop
sbb
mov
and
push
jno
pop
adc
push
push
scas
xor
icebp
sbb
xlat
or
inc
sbb
jmp
data16
cmp
sub
pop
pop
add
loope
movsb
and
xchg
inc
out
popa
xor
stc
pop
add
push
das
add
ja
rcrb
ds
adc
pop
xchg
mov
sbbb
fwait
mov
iret
es
push
or
or
lods
and
mov
lock
in
movsl
jmp
iret
movl
xchg
xor
push
xorb
aam
mov
icebp
xchg
sub
outsl
lods
xchg
push
incl
sub
and
jno
addb
mov
and
addr16
rcrl
loope
mov
adc
aam
outsb
xchg
rorl
jle
or
cmp
sbb
scas
push
scas
lret
mov
popf
fwait
addr16
pop
lahf
std
push
jb
mov
xor
and
mov
sub
cltd
insl
jb
cmp
mov
movsl
mov
or
add
clc
iret
xchg
and
pop
adc
icebp
das
mov
mov
les
xor
andl
lea
sbb
fsubrl
mov
pushf
xor
sarb
ret
jno
adc
rcr
jb
ja
cwtl
mov
sub
pop
add
add
mov
shr
pop
fwait
and
sahf
sti
cmpsb
icebp
out
xor
pop
jae
sub
cmp
cmp
xchg
inc
in
lcall
jne
adc
sub
xlat
nop
mov
ret
sub
bound
jle
mov
mov
ret
xor
pop
sub
pop
movl
mov
rcll
cmp
rclb
push
adc
mov
sub
sbb
mov
xor
movsb
mov
rcll
imul
cltd
mov
loop
mov
test
cmp
cmpsb
mov
mov
out
cmpsl
adc
inc
cmpsl
lock
adc
jle
arpl
in
xlat
outsb
push
out
rcrb
jnp
sbb
push
xor
jmp
aas
loope
in
andl
mov
dec
mov
push
or
jbe
addr16
push
ret
es
lret
xchg
test
dec
clc
bound
ja
aad
jmp
lea
mov
mov
mov
xchg
mov
pop
stos
sub
es
adc
iret
movsb
cs
cli
pusha
xor
addr16
in
inc
cmp
push
imulb
shrb
sbb
cmp
sbb
and
jb
push
inc
aaa
loopne
cmc
in
mov
adcb
mov
jecxz
add
xor
adcb
sbb
pop
jns
and
notb
bound
xchg
mov
test
inc
lret
stos
into
stos
pop
in
sub
xorl
add
icebp
mov
bound
jl
push
cmc
or
push
add
cmpl
or
dec
cld
adc
sbb
mov
insl
and
lods
xchg
outsl
and
mov
ret
push
push
xchg
jmp
aaa
repz
sbb
loope
jge
add
pop
pop
add
add
jp
inc
lods
dec
jmp
add
inc
fstpl
inc
out
andl
inc
das
dec
mov
fs
and
outsb
clc
cltd
in
vmread
inc
stos
outsl
cltd
xchg
imul
jno
dec
shl
cmp
icebp
mov
testb
in
jne
add
lcall
stc
mov
les
mov
cmpsl
call
cmp
adc
scas
add
cmpsb
popf
jo
repz
mulps
fidivrl
lea
mov
rclb
and
push
push
mov
inc
in
add
and
sbb
xchg
add
les
pusha
and
dec
ljmp
and
sbb
ds
test
les
xor
andl
xchg
push
fnstsw
out
fmul
decb
or
rcl
mov
mov
pop
add
pop
addl
add
in
add
jecxz
or
or
lret
test
inc
jbe
stc
testb
sahf
leave
jecxz
outsl
sub
std
lea
sub
xchg
xchg
mov
pop
jo
icebp
movsl
pop
ja
mov
andl
movsb
imul
mov
and
enter
mov
dec
adc
in
xchg
scas
mov
mov
ljmp
outsb
sbb
mov
xor
inc
mov
popf
cmpsl
xor
mov
aas
push
test
pop
push
xchg
scas
les
outsb
ret
pop
mov
dec
loope
in
and
push
imul
filds
js
mov
addb
or
sbb
ds
loop
sbbb
sbb
lret
cld
jl
cs
into
enter
stos
orl
int
sahf
mov
push
inc
mov
push
mov
xor
mov
mov
sub
arpl
iret
fstpt
mov
out
cld
add
xor
ljmp
ss
pop
dec
test
cmp
xchg
pop
ret
and
xchg
sub
das
stos
js
mov
inc
jmp
push
mov
out
lahf
sbb
xchg
cli
sub
add
push
xlat
xchg
xchg
mov
jno
aaa
push
stos
xor
push
and
jg
inc
mov
jae
mov
push
inc
xchg
add
xor
xor
inc
in
out
xchg
mov
xchg
lahf
idivl
fsubrl
inc
mov
es
imul
insl
and
mov
jle
adc
mov
inc
fisttpl
shll
xlat
cmc
sbb
mov
sbb
cmp
mov
sub
jl
pop
loop
cmp
inc
fldt
cmp
pop
and
fwait
outsb
dec
adc
test
pop
cmpsl
jo
lea
mov
stos
inc
xor
cs
cmp
jo
push
mov
pop
outsl
ds
xlat
sbb
fs
add
sbb
jmp
aaa
push
xchg
shlb
rorb
test
cmc
push
add
aam
sbb
jp
fldl
pop
adc
push
call
cmp
fldt
and
div
outsb
xchg
mov
or
jp
call
clflush
stc
scas
out
fcomp
adc
cmp
imul
sbb
shll
mov
jg
ret
mov
jns
push
popf
cli
lcall
dec
push
dec
in
in
into
fisubrl
insb
je
int3
movsl
jmp
mov
out
xchg
sub
cmp
dec
leave
lods
add
jo
push
mov
in
int
xchg
sub
xchg
jns
jmp
cmp
jecxz
cmp
mov
dec
in
fcom
push
scas
dec
xor
into
pop
idiv
cld
loop
or
sbb
insl
jmp
ss
repnz
cmp
mov
jp
push
mov
jg
cltd
xor
mov
js
aaa
iret
mov
jbe
sarl
cli
adc
popf
cmp
mov
sbbb
in
xchg
or
dec
call
loopne
mov
sti
dec
fistl
ret
mov
shlb
and
lock
shrl
mov
icebp
sub
cs
or
dec
pusha
add
cmpsb
sbb
push
es
dec
sarl
loop
mov
ud2
rolb
pop
mov
pop
ja
pop
imul
xchg
test
in
hlt
addr16
inc
add
mov
adc
out
popa
dec
negl
jl,pt
stos
xor
sbb
mov
and
mov
or
mov
add
aas
dec
mov
push
inc
mov
pop
cld
add
mov
cmp
xchg
js
cmp
mov
ret
sbb
lret
push
push
jo
mov
jns
sub
mov
sub
mov
adc
imulb
pop
push
jne
popf
cmpb
addr16
out
cmp
clc
and
mov
add
iret
pop
into
sbb
testl
enter
pusha
and
mov
ja
inc
or
pushf
shr
inc
lret
or
std
arpl
js
fisubl
cs
mov
cmp
into
sti
add
pushf
sbb
xor
lods
inc
or
daa
mov
jg
ret
xchg
mov
push
push
pop
fisubl
loop
mov
sbb
xchg
xlat
insl
aad
lcall
and
into
leave
xchg
inc
cld
push
bound
int3
mov
or
push
leave
sbb
xchg
pop
int3
cmp
das
imul
int3
cmp
cmpb
test
insl
xor
xchg
jp
fistpll
xchg
and
clc
adc
sahf
stc
js
push
adc
lret
popa
cmp
flds
xchg
cmp
inc
jmp
mov
xor
data16
mov
insl
jge
aas
push
movsb
pop
addr16
fistpl
scas
pop
outsb
mov
dec
jp
popa
or
inc
fbstp
or
cmp
lea
mov
xchg
cmp
mov
pop
sbb
xor
sbb
sarl
pop
mov
mov
stos
xchg
loop
push
je
leave
mov
xorb
dec
or
imul
sbb
add
outsl
jo
fidivrl
jb
cltd
shl
add
in
xorb
jno
test
call
jmp
adc
jae
div
aam
fsts
je
call
push
lea
push
je
es
imulb
movsl
push
push
les
imul
pop
lcall
out
in
sub
jge
aaa
add
out
xor
fwait
xor
movsb
jnp
cmpsl
test
adc
hlt
test
mov
ja
cmp
push
mov
fidivs
xor
sub
pop
fadd
xchg
arpl
or
test
cli
pop
insl
sub
xor
bound
aam
orl
xor
addr16
jle
test
cwtl
push
shrl
fwait
mov
sarb
inc
and
pop
mov
xchg
sbb
mov
loop
js
cltd
fs
sbb
in
push
push
jge
xor
dec
loopne
test
shll
addr16
push
lds
scas
mov
movsl
mov
fwait
clc
or
rcll
cmp
add
loop
mov
mov
xchg
dec
in
xchg
into
arpl
cmp
pop
sbbl
fmuls
mov
inc
stc
fs
stos
jge
test
jge
sbb
mov
or
adc
add
rol
pop
dec
xchg
dec
mov
lret
pusha
push
rclb
stc
shrb
aas
insl
sbb
orl
dec
mulb
pop
movsb
pop
or
sub
add
cmpsb
cld
push
addr16
sub
push
jecxz
push
adc
jne
push
int3
pop
je
inc
in
mov
fwait
in
add
push
mov
sub
out
insl
jge
or
mov
in
imul
pop
icebp
push
mov
js
dec
add
add
inc
cmpsl
fcomps
mov
std
jnp
insb
jb
dec
add
pop
jmp
pop
icebp
xchg
inc
cld
xchg
adc
jne
dec
sbb
cwtl
or
shll
add
inc
adc
pop
sbb
or
rcll
fldl
jp
mov
ljmp
mov
add
icebp
jno
jp
fidivrl
inc
pop
in
iret
shll
mov
cmp
add
adc
jbe
inc
jp
cs
mov
mov
inc
jecxz
rorb
xor
gs
add
in
insl
add
fnsave
inc
shlb
cld
cmp
jae
pusha
imul
mov
lds
sbb
jmp
shll
cmc
out
mov
popf
xor
into
mov
shrl
loope
les
shrl
mov
les
testb
add
mov
ffreep
jno
xor
pop
mov
adc
or
ret
push
cmp
out
movsb
pop
xchg
test
pop
fidivl
fsubrl
jmp
sub
xlat
scas
iret
in
jge
mov
jp
sbbb
push
dec
popa
leave
insl
mov
jmp
xor
jb
add
daa
nop
daa
pop
stos
jg
pusha
icebp
scas
inc
and
inc
gs
cmp
imul
jle
add
add
test
and
mov
daa
loop
cmp
in
js
mov
jne
or
cmp
shl
adc
pop
shll
sub
adcl
gs
fs
lret
mov
iret
xchg
mov
add
xchg
push
loopne
push
jns
divl
push
lods
sbb
xlat
inc
imul
aam
data16
inc
jne
ficompl
fcmovu
xor
rcrb
add
lds
cltd
mov
fcompl
push
adc
push
pop
das
mov
inc
js
and
pop
push
lods
mov
aas
outsb
xor
in
test
insl
test
adcb
out
jnp
loope
sahf
insl
add
repz
and
dec
lea
les
mov
in
jb
sbb
push
scas
lods
pusha
mov
lret
lret
into
minps
out
push
jmp
mov
or
push
inc
cwtl
sbb
xor
jne
out
arpl
jns
xor
arpl
xchg
lea
xchg
or
or
cmp
adc
cmp
dec
add
and
imul
nop
gs
mov
mov
sbb
int
mov
addb
jmp
out
lock
fmull
in
loope
sahf
xor
cmp
cmp
lahf
ja
jno
fsubrl
xor
clc
mov
popf
in
rolb
pop
jg
mov
sbb
or
and
pop
adc
jl
gs
mov
adc
sbb
jno
pop
xchg
adc
cld
cltd
push
dec
mov
add
lret
test
into
gs
dec
mov
pop
in
inc
stos
inc
aam
ja
int
xchg
mov
pop
mov
and
xchg
add
repz
scas
mov
adc
sbb
sarl
mov
pop
push
add
lcall
cmp
jb
inc
lods
cld
sbbl
fidivrl
ret
mov
ret
adc
pop
test
sbb
rclb
das
bnd
mov
xchg
push
movsl
cmp
mov
or
jmp
dec
add
int
out
inc
inc
in
adc
push
xchg
repz
les
xor
push
jle
outsl
pop
mov
lds
jns
xor
scas
dec
xor
push
pusha
xorl
jb
out
rcrb
aaa
jle
mov
push
or
nop
mov
jle
repz
push
addb
outsl
mov
stos
shll
aas
jae
popa
dec
jmp
arpl
imul
pusha
outsl
ret
jns
cmc
es
add
shrb
outsl
or
lss
adc
xchg
lret
pop
test
jno
pop
xor
dec
aaa
cmp
cmpsl
call
mov
xchg
mov
xchg
sub
arpl
xchg
mov
cmpl
mov
mov
mov
shlb
outsl
or
jp
aad
add
test
out
data16
xchg
xor
mov
ret
movsb
xlat
cmp
fdivl
sbb
pop
stos
scas
inc
repz
popl
nop
imul
inc
sarb
mov
jg
cwtl
mov
out
lcall
scas
sbb
push
popf
out
xor
or
pop
je
fs
inc
fisttpl
lock
inc
sub
pop
ds
xlat
cmpb
aad
fsubrs
scas
int
scas
fdiv
repnz
jnp
adc
movsb
mov
mov
std
lock
xor
xchg
pop
dec
mov
inc
adc
cmc
sbb
mov
inc
xchg
into
push
sahf
mov
jl
pop
leave
mov
or
adc
sarb
lock
mov
ret
or
or
mov
sbb
and
xchg
pop
repz
int
in
ss
out
ret
xor
outsb
stc
das
push
lea
cli
push
mov
nop
daa
addr16
cmp
dec
xchg
sub
ljmp
ret
xor
movntq
pop
fwait
or
call
movsb
xchg
imul
icebp
insb
mov
insl
stos
test
test
dec
jne
loopne
jmp
test
scas
jns
xor
cmp
inc
imul
daa
pop
sti
insl
or
mov
inc
insl
sbb
xchg
test
push
call
sarb
test
roll
jo
sti
push
fldt
test
lret
or
shrb
add
fnstsw
mov
in
call
adc
psrlw
aaa
xchg
repz
mov
call
setp
jbe
jno
push
xchg
mov
and
pop
outsl
dec
sbb
dec
jno
add
jo
aad
xchg
scas
xor
inc
push
ljmp
and
fstpl
out
jle
divb
jp
xorl
je
iret
add
mov
leave
cmp
mov
test
jbe
bound
inc
test
push
addr16
outsl
je
cmp
xchg
aad
scas
ds
outsb
push
add
loop
dec
or
mov
hlt
fs
out
nop
jns
inc
jne
mov
notb
ret
sub
pop
add
xor
test
push
mov
sub
daa
xor
nop
jmp
das
out
ss
stc
mov
mov
adc
iret
bound
pop
sti
push
xchg
test
ret
push
pusha
in
cmp
fsincos
stc
pop
mov
enter
pop
push
jae
lcall
adc
xor
lock
push
mov
rorb
adcl
arpl
xor
xchg
incb
repnz
fimuls
pop
and
dec
pop
mov
loopne
add
jp
mov
fnsave
dec
sub
sarb
pop
sbb
stc
lcall
push
sbb
arpl
in
pop
adc
cmpl
cwtl
das
arpl
fisubrl
jg
mov
mov
in
dec
pushf
jne
pop
cmpsl
mov
xor
cmpsl
enter
pushf
or
rorl
mov
xchg
xor
mov
clc
jp
push
add
xchg
leave
pusha
adc
mov
jae
adc
push
mov
push
xor
nop
daa
rorl
insl
xor
mov
mov
int3
nop
outsb
ja
jge
cs
or
lcall
mov
mov
mov
jmp
iret
in
addb
push
in
movsl
push
cmpsb
jge
insb
out
mov
cmp
fdivs
sbb
jg
xchg
cmp
in
xchg
movsl
jl
pop
sub
cmpsl
jl
cmp
mov
xor
jecxz
dec
lods
push
in
mov
xchg
je
mov
adc
pop
cmp
clc
lret
outsl
loopne
pop
ljmp
push
cmp
int3
xorl
mov
cmp
mov
shl
add
sub
pop
in
jb
and
jno
mov
adc
inc
lods
mov
adc
mov
mov
outsl
fstpl
push
xchg
pop
ljmp
mulb
jbe
out
lcall
mov
mov
mov
jns
mov
jge
out
jne
cmpsl
sbb
and
mov
adc
dec
pop
dec
xchg
lds
jg,pt
in
push
push
rolb
into
gs
jb
pop
repz
push
sbb
pop
stc
pushf
jl
inc
in
movsb
ljmp
outsl
cmpl
lret
xchg
mov
sub
mov
mov
pop
mov
mov
mov
outsl
mull
int
subl
xlat
mov
popa
cmp
xchg
repz
push
out
add
orb
adc
mov
xorl
or
repnz
data16
lea
js
adc
inc
xorb
mov
pop
scas
or
sub
les
mov
dec
mov
movsl
in
push
mov
mov
sarb
lods
xchg
dec
fmul
jbe
pusha
mov
pop
es
push
adc
push
adc
inc
jbe
inc
popf
mov
int
push
in
test
mov
jo
pop
addb
pop
hlt
mov
es
jbe
mov
adc
stos
cmp
in
int3
inc
ljmp
cwtl
das
fmuls
sbb
andb
jmp
mov
loope
add
push
lock
ds
outsl
or
mov
xchg
es
or
pop
adc
mov
xchg
sub
cmp
mov
push
neg
push
xchg
adc
aas
loop
sbb
sub
mov
loopne
loopne
ret
push
pushf
mov
ret
das
loope
push
xor
cmp
and
fldcw
pushf
addl
mov
test
jnp
xchg
fnstenv
mov
fisubs
popa
add
sbb
cmp
out
iret
sbb
jno
in
sbbb
nop
pop
incl
and
test
sub
xchg
scas
loope
iret
sar
adc
mov
mov
ds
adc
scas
movsb
mov
leave
lods
test
sub
sbbb
dec
shll
aad
xor
rcrb
imul
dec
add
jnp
out
cmp
scas
jnp
cmp
xchg
jns
mov
rclb
les
jb
jo
fwait
jmp
cwtl
cmpsb
sbb
adc
xchg
sub
cli
cmp
aas
mov
pop
aad
popf
push
pop
dec
loope
jge
xchg
daa
push
mov
out
fisttpl
cmp
pop
repz
rol
jge
mov
jle
xor
inc
stos
jle
cmc
push
gs
sti
xchg
sahf
pop
jg
jge
sbb
add
push
push
jl
dec
insb
jb
mov
testb
cmp
jns
mov
dec
xchg
mov
js
adc
int
mov
lods
leave
scas
and
sti
movsb
xchg
mov
cmpsb
inc
xor
mov
fsts
mov
dec
ss
mov
add
adc
stos
and
scas
dec
xchg
add
aaa
rcrb
mov
out
jno
test
jmp
jmp
out
jae
lret
ds
push
out
mov
movsl
jmp
insl
jge
stc
cmp
dec
xchg
mov
xchg
sub
and
mov
jle
inc
mov
mov
pusha
mov
pop
lods
jl
push
ret
fmul
bound
dec
lahf
ljmp
mov
fdivrp
xchg
mov
sbb
out
loopne
idivb
inc
push
dec
push
popf
test
jb
jnp
and
aaa
movsl
insb
fisubrs
or
dec
and
aam
pop
rcl
imul
sti
dec
hlt
jmp
sub
call
aaa
jno
cmp
add
xor
testb
scas
sbb
jg
xor
ss
mov
xor
lods
jge
aam
xchg
mov
push
test
jb
sub
add
in
jle
int3
clc
fidivrl
lods
lret
lret
into
movsl
sub
insb
ret
xor
inc
sub
test
mov
xor
mov
and
test
xchg
shll
ss
imul
mov
cld
push
inc
xor
sbbl
cmp
mov
jns
dec
daa
loop
jb
imull
rclb
adc
cmc
xchg
pop
push
test
mov
mov
sbbl
pushl
sbb
xor
test
or
imul
mov
add
sbbl
inc
cmc
dec
stos
lods
mov
mov
out
lock
mov
mov
nop
sbb
sbb
push
jne
push
and
stc
nop
enter
cmp
decl
mov
mov
and
push
pop
jo
lds
jl
in
adc
outsb
sbb
pop
mov
xchg
aad
lea
jns
in
and
pop
push
cmp
push
cmp
mov
push
mov
sbb
xor
in
pop
pop
in
mov
loop
popa
jg
add
sbb
ret
mov
insl
jmp
pop
insl
add
sbb
inc
adc
imul
adc
test
ret
cwtl
dec
fstl
cmp
xchg
daa
ficomps
cmovs
sahf
insb
add
cmp
dec
arpl
pop
stc
or
aad
sbb
pop
rcr
sub
enter
adc
jg
and
pop
das
pop
xchg
sti
sub
mov
jne
inc
bswap
xchg
cmp
pop
sbb
push
mov
loop
pop
inc
sti
push
pop
arpl
shl
jnp
stos
repz
cmpsl
in
jns
mov
jecxz
push
cltd
subb
aad
inc
in
pop
jb
loope
sub
ds
out
stc
mov
dec
loopne
rcr
imul
xchg
jno
push
test
lea
mov
enter
mov
into
adc
imul
or
add
dec
jecxz
orb
xor
xor
mov
xlat
addr16
cmp
imul
testb
cmp
mov
add
cld
jmp
and
dec
sbbl
shl
daa
sbbb
shll
cld
jbe
fisubrs
push
mov
push
cmp
jnp
jo
fildll
inc
aad
xor
mov
popa
pop
mov
cli
or
or
pop
jl
add
stc
cli
loope
ss
repz
pop
mov
or
pop
push
mov
movsb
push
push
shll
mov
pushf
sti
pop
ss
lods
pop
adc
inc
mov
sbb
mov
and
lods
or
gs
adc
imul
in
or
pop
push
add
jmp
push
imul
addr16
int3
shlb
mov
mov
adc
sbb
nop
and
imul
xor
testb
sar
addb
push
shl
inc
and
sub
mov
imul
adc
sbb
cli
stos
mov
sbb
push
icebp
pop
dec
adc
mov
fcmovbe
add
fcomps
lahf
int3
cli
pushf
subl
sti
out
sbb
lret
bound
nop
dec
test
jmp
popl
pop
cmp
add
iret
xchg
cwtl
push
pop
call
scas
sbb
daa
adc
and
icebp
xchg
lock
push
lret
fs
lds
test
addr16
cmp
xor
or
xor
stos
sbb
mov
push
mov
adc
scas
push
lret
notl
xor
rolb
loope
jae
pop
imul
mov
lea
into
gs
int3
adc
fwait
in
pop
sbb
rorb
fisttpll
sub
bound
xor
or
cmp
mov
repz
imul
repnz
sbb
dec
sub
jg
cmp
popa
pop
mov
repnz
ja
mov
stc
scas
inc
sub
jae
aam
cltd
xor
idivl
cld
add
push
sahf
out
test
decb
mov
and
or
sub
loopne
or
jb
dec
iret
insl
ja
mov
movsl
stc
sbb
ret
jg
mov
push
int3
lods
dec
outsb
shl
xchg
jg
lock
adc
aaa
sub
adc
hlt
dec
add
ficompl
pop
addr16
add
adc
leave
sub
and
hlt
setl
jle
mov
lahf
push
icebp
lock
cld
outsl
sub
mov
movsb
mov
pop
jmp
push
stos
in
mov
mov
jmp
ficomps
jge
movsb
mov
vmovaps
lret
sti
xchg
std
cmp
imul
jo
jp
pop
push
int
out
jge
xchg
push
push
mov
fimull
je
test
mov
add
mov
enter
imul
ja
imul
lock
subb
jns
push
rcrl
jle
jns
fcoml
push
jno
ja
sbb
jb
push
in
lahf
stos
les
sbbb
movsl
adc
xchg
and
aad
push
ds
scas
ret
push
add
pop
adc
test
xlat
movsl
push
jne
fidivs
pop
popf
adc
jae
imul
sbb
and
xchg
hlt
js
or
lcall
in
lock
shrb
out
add
adc
out
pop
stos
lahf
jno
js
mov
fidivrl
stc
jge
cmc
clc
inc
int3
stc
popa
push
lret
mov
xchg
inc
push
adc
rolb
pop
jnp
push
and
fisubl
dec
and
adcb
xor
fs
in
in
loopne
fucomi
jb
std
shl
pop
dec
jmp
xchg
punpcklwd
sti
sbb
jg
fld1
mov
and
jg
addr16
popf
cld
and
pop
loopne
sahf
scas
sbb
lahf
mov
pop
dec
popa
add
add
jmp
inc
push
clc
cs
xor
shrl
mov
jno
test
pop
adc
sub
lea
mov
add
push
fdivl
mov
push
mov
pop
test
xorl
fcoms
je
mov
dec
fcmovne
out
or
sbb
ficomps
ret
push
addr16
loope
inc
jmp
aas
jno
enter
iret
cltd
push
enter
jnp
test
mov
inc
cltd
fdivs
pop
pop
sbb
lea
jle
std
adcb
inc
fsts
out
imul
lret
jb
mov
add
lds
mov
mov
vmovupd
imul
mov
aad
push
int3
add
mov
fbld
add
les
push
pop
inc
in
mov
subb
adc
cs
insl
lods
cmp
and
aas
mov
fisubs
lret
lcall
jno
hlt
mov
ret
cmp
out
or
mull
dec
enter
sub
int
adc
mov
fldlg2
push
or
in
dec
in
lods
sbb
mov
push
mov
aad
cltd
clc
or
and
dec
pop
stos
add
imul
fcomi
stos
cs
jl
pop
fwait
popf
dec
icebp
dec
cli
jle
aaa
rorl
call
sbb
repnz
xor
call
or
loopne
mov
daa
lock
fwait
inc
cmp
scas
out
bound
mov
push
out
adc
mov
movsl
jmp
sub
lods
push
rcrl
out
ja
iret
pop
push
lods
stos
jecxz
xchg
adc
cmp
sub
gs
addl
popa
xchg
xor
and
call
mov
push
fidivl
call
xchg
pop
mov
mov
mov
lcall
adc
jmp
into
out
loope
daa
mov
push
mov
loopne
sbb
insl
push
pop
icebp
orb
call
push
dec
outsl
ret
lods
xor
pop
gs
orb
repnz
int3
outsl
rol
add
xor
jb
daa
pop
negb
js
test
jg
fnsave
lcall
ss
test
test
test
scas
aaa
orb
mov
les
sbb
sub
push
scas
adc
sbb
sti
mov
xchg
repnz
repnz
push
sbb
push
test
insl
add
pop
lea
mov
sbb
iret
fisttpl
sub
je
and
jns
ds
pop
adc
cmp
data16
mov
fdivrl
int3
jns
push
scas
sub
loopne
dec
adc
add
les
inc
jle
mov
pusha
or
inc
enter
xchg
jle
ret
leave
pop
cmc
cwtl
add
inc
pop
jae
sub
push
xchg
cs
pop
sbb
push
out
mov
cltd
xor
cmp
xor
push
add
mov
mov
mov
lea
add
popa
dec
and
icebp
mov
fisubrs
and
dec
dec
lret
mov
shr
pop
xchg
jno
ret
inc
xlat
outsb
mov
adc
xchg
dec
push
aad
call
jp
and
fstps
pop
call
leave
mov
shl
push
push
sub
iret
lock
ja
inc
add
shlb
pop
dec
sti
sbbb
inc
arpl
cli
into
cmpl
add
stos
push
sub
sub
sub
or
mov
mov
scas
call
xchg
sahf
fst
mov
mov
mov
sbb
xor
jl
mov
dec
pop
jle
insl
mov
enter
mov
cli
mov
mov
int
scas
push
negl
pop
shl
add
scas
sub
push
or
pop
adc
leave
push
adc
and
sti
hlt
push
ss
data16
xor
ret
dec
sbb
mov
jo
testl
out
add
clc
sbb
xchg
into
dec
loopne
jecxz
outsl
and
jmp
push
test
lds
flds
repz
sbb
mov
fldcw
testb
sbb
mov
cmc
xchg
pop
repnz
nop
aas
js
aaa
insb
popf
divb
add
iret
xchg
outsb
sub
add
call
push
shll
in
xor
inc
push
hlt
xor
stos
pop
cmpb
mov
cmpsl
rol
xchg
cmpsb
int
pop
mov
jp
mov
enter
addr16
jnp
mov
jbe
inc
cli
icebp
stos
cmpsb
mov
addr16
mov
into
dec
icebp
movsl
out
adc
cmpsb
lret
mov
and
je
jecxz
xchg
add
add
mov
xchg
lods
movsb
push
scas
xchg
rcr
mov
mov
rcl
hlt
loop
ds
out
fistl
sub
mov
inc
loop
mov
clc
aam
or
fsubl
aaa
pop
mov
movsl
loopne
inc
mov
out
aad
lahf
push
data16
cmpl
dec
popa
sahf
and
xor
xchg
loopne
mov
cmp
dec
xlat
xchg
pop
out
test
mov
fmulp
cmpsl
das
addr16
fildl
in
adc
imul
aam
movsl
mov
mov
insl
add
pusha
dec
xor
fwait
gs
mov
xchg
insl
decb
mov
add
adc
push
xor
xchg
sbb
xchg
test
imul
pop
lock
int
push
inc
leave
or
insl
icebp
out
dec
add
es
or
add
les
push
addb
jne
mov
loopne
push
adc
daa
sbb
faddp
dec
mov
jnp
jno
add
loopne
jnp
rol
sub
xchg
or
cmp
jmp
push
aad
sbb
adc
ret
lods
mov
fidivrl
xchg
cli
imul
shll
gs
mov
push
loop
pop
adc
sti
fwait
or
mov
inc
out
scas
divl
lock
xlat
outsb
pop
mov
dec
aad
fimull
aam
xchg
or
sub
push
xor
mov
loope
jae
mov
aaa
dec
mov
mov
push
jp
das
lret
es
fildl
inc
fnsave
movsb
cmp
sub
fs
dec
pop
and
sub
ljmp
loop
mov
adc
imul
fstpt
cld
aas
push
ret
movsb
and
mov
push
js
add
out
rol
aas
and
add
push
mov
call
vpmaxub
in
lock
push
push
adc
dec
jecxz
xor
lds
rcll
pop
in
fidivrs
rorb
mov
and
iret
and
jmp
cmp
lods
js
adc
in
jne
loop
inc
sbb
dec
lret
arpl
lahf
xchg
mov
xlat
in
mov
jae
push
and
xor
pop
loop
mov
xchg
stos
xor
mov
test
inc
aam
icebp
cmpsl
xchg
pop
dec
out
jle
sbb
pop
push
jl
xor
iret
mov
dec
mov
ret
sar
insl
mov
ss
pop
aaa
lret
mov
push
and
fidivl
popf
stc
mov
sbbl
push
movsl
inc
into
mov
pop
icebp
lods
movsl
pop
icebp
inc
les
xor
cmp
fnsetpm(287
push
out
ds
mov
sub
das
jle
loope
mov
stos
jl
mov
xchg
xlat
lcall
addb
dec
mov
ss
cmp
xchg
sub
inc
lods
inc
in
popf
aad
divl
push
popf
sti
aam
pop
es
and
mov
sbb
hlt
rclb
movsb
movsl
push
mov
bound
neg
push
int
loopne
jge
jecxz
mov
xor
test
fldcw
sbb
clc
jo
xchg
and
iret
and
dec
test
ret
push
fdivrl
shl
jmp
mov
jae
and
push
insl
ret
inc
nop
daa
jae
je
icebp
sbb
dec
adc
inc
negl
sub
push
add
ljmp
popf
repz
ds
and
iret
cs
jnp
imul
pushf
jbe
xchg
mov
mov
ljmp
push
xor
fs
jne
popf
cwtl
and
mov
shll
shrl
mov
out
xor
pusha
push
ficomps
arpl
jns
push
adc
jge
leave
pop
lahf
xor
mov
mov
adc
xchg
pushf
repz
add
xchg
aaa
insb
xorl
push
xor
jp
dec
jo
idivl
dec
push
out
dec
cmpsl
pop
dec
pop
push
enter
iret
adc
xor
mov
into
gs
repnz
das
in
in
sbbl
mov
sbb
daa
pushf
adc
inc
stc
cltd
call
mov
in
je
cmp
inc
ja
jecxz
jns
xchg
inc
lods
dec
mov
insl
nop
adc
lretw
insl
test
pop
nop
xor
jne
mov
jge
ds
jle
test
fnsave
or
cltd
sub
movsl
fucomp
and
aaa
pop
ss
jmp
sbb
add
jecxz
push
fisttps
inc
mov
sbb
stos
lret
aam
lea
in
jge
in
out
lea
in
xor
inc
add
mov
pusha
sbb
lock
xor
shl
mov
and
mov
cltd
push
dec
addb
pusha
pop
xchg
adc
xor
add
in
dec
pop
pusha
mov
adc
lods
cs
cmp
enter
data16
xchg
xor
mov
add
jmp
leave
pusha
aas
pusha
ret
and
mov
sbb
inc
mov
sbb
rcr
ljmp
int3
daa
outsb
jg
icebp
mov
lods
test
mov
pop
jl
pop
repnz
aam
jb
punpcklbw
call
dec
addr16
cwtl
xchg
jg
fnsave
jl
or
std
cli
push
xor
pop
dec
cld
popa
pop
cmp
and
add
pushf
xchg
loopne
xchg
popf
pop
in
mov
outsl
sbb
jno
jo
and
mov
adc
mov
jb
fisttps
mov
cs
or
mov
in
test
test
addr16
lea
fsubl
test
test
xchg
xchg
sbb
loop
mov
out
inc
mov
aad
rclb
xchg
cmc
pop
hlt
fidivrl
mov
testb
xor
add
mov
adc
stos
lds
scas
cltd
jns
sahf
mov
in
mov
sbb
push
sbb
inc
push
divb
ljmp
call
xchg
test
cmp
cbtw
fcoml
jge
cvtpd2dq
fadds
out
test
xchg
push
xor
cli
xchg
jne
jle
lcall
mov
or
clc
push
ret
pop
inc
std
jle
or
out
xorl
aas
add
mov
lods
and
aad
dec
pop
adc
ja
and
cmp
pop
lret
cld
sub
lret
aaa
fdivl
mov
test
cli
shl
js
loope
xchg
sub
lahf
pop
movsb
cmp
faddl
into
push
ret
jle
data16
jne
xchg
in
jle
je
outsb
cmpsb
outsl
add
xchg
jmp
fiadds
nop
push
adc
adc
fidivl
or
xchg
fimull
add
int3
lods
pop
stos
repz
adc
out
shlb
ret
push
lods
inc
je
stos
mov
xchg
lret
leave
xchg
sbb
inc
jmp
inc
test
inc
lods
mov
dec
cmp
mov
inc
adc
cmp
jo
fwait
in
lds
mov
push
pop
call
adc
roll
ljmp
jns
les
adc
lea
mov
push
in
push
xchg
out
xor
das
dec
jnp
sti
lods
push
sub
jne
dec
cmpsl
xor
fwait
xchg
lea
add
mov
pop
and
push
and
int3
mov
call
push
mov
xor
jmp
scas
sbb
jo
adc
mov
mov
push
lahf
sub
dec
es
data16
mov
and
imul
and
mov
inc
mul
mov
leave
adc
notb
ss
add
in
mov
xrelease
mov
jns
adc
and
lds
mov
es
lock
cmp
sub
adc
inc
outsb
jno
imul
xchg
cmc
cmp
in
mov
cmp
sub
test
pop
jne
int
mov
stos
adc
in
outsl
outsl
sbb
pop
decb
testb
repnz
hlt
lret
jl
jmp
hlt
xor
sub
xor
clc
jl
repnz
loop
aaa
fisttpl
test
cld
mov
jge
mov
pop
dec
loop
mov
pop
jae
fs
xchg
and
xchg
xor
xchg
inc
xlat
jp
ret
pushf
pop
cmc
int
push
mov
fdivp
xor
in
adc
outsb
add
movsl
imul
cwtl
das
xchg
daa
sub
clc
arpl
mov
repz
jb
outsb
movsb
and
push
pop
jle
or
xchg
sub
shr
mov
sbb
das
insl
test
daa
cmp
jmp
mov
cmp
mov
push
dec
loopne
gs
aas
push
mov
mov
or
in
fnsave
cmp
sbb
inc
mov
push
inc
int
ror
stos
push
push
loope
push
cld
push
mov
mov
add
pusha
jns
adcl
inc
mov
dec
dec
shlb
nop
outsb
ficoms
aam
dec
loope
ljmp
cli
xchg
scas
sbb
mov
sbb
adc
les
popa
addr16
mov
mov
mov
fnstsw
mov
or
scas
jl
sub
stos
and
mov
popa
jg
xchg
mov
inc
push
jb
jecxz
inc
popa
sbbl
cli
dec
jo
push
jb
jl
pushl
mov
fldt
cmp
pop
cld
cmpsb
sub
cmp
cmp
ljmp
icebp
mov
push
loop
push
imul
xchg
dec
mov
dec
loopne
dec
xchg
and
mov
aas
and
imul
cwtl
pushf
cmpl
mov
mov
jl
hlt
mov
cmp
mov
push
pop
repnz
adc
aam
repnz
mov
lock
cmpsb
out
xor
shlb
mov
sbb
call
mov
int
hlt
dec
cld
add
int
subl
jno
and
sbbl
cmpsb
mov
test
push
mov
daa
lcall
adc
push
jecxz
fdivr
repz
mov
sbb
dec
fnstcw
adc
ds
sub
adc
addr16
lds
mov
push
mov
fwait
lahf
outsb
cmp
lahf
mov
push
jns
ret
cmpsl
mov
fdecstp
test
shll
xor
mov
ret
outsl
lock
mov
repz
adc
mov
xchg
call
leave
sbb
and
mov
mov
xchg
call
jecxz
js
and
fwait
xlat
insl
stc
orb
sbb
xchg
jp
pop
stos
addr16
scas
adc
icebp
outsl
and
cmc
insb
pop
mov
imul
dec
ja
mov
daa
inc
rclb
mov
pop
xchg
xchg
popa
dec
sub
imul
and
hlt
dec
push
bnd
and
loopne
mov
in
iret
adc
sbb
xchg
pop
jbe
cmp
push
cld
loope
jge
push
mov
sub
fisttpll
mov
lock
loopne
cmpsb
js
mov
cmpsb
cmp
aam
mov
jno
inc
and
mov
or
test
test
xor
push
xor
imul
jp
repz
mov
cmpsb
sbb
into
pavgb
shrb
leave
fwait
mov
push
out
repz
dec
nop
sbb
bound
mov
insl
hlt
mov
ss
xor
adc
pop
aam
jb
sub
push
jge
std
xchg
cs
dec
test
icebp
inc
out
insb
in
mov
adc
fcmovnu
jb
mov
stc
nop
xchg
pop
pusha
shrl
lret
pop
test
shlb
pop
daa
outsl
mov
mov
push
jbe
pop
shrl
mov
sub
mov
das
cmp
lret
bound
push
movsl
rcr
fldcw
repz
jbe
cli
pop
and
pop
jl
pop
cmp
jle
mov
fidivs
mov
rcrb
adc
inc
dec
sub
cmp
shlb
insb
jp
int
xchg
jnp
mov
or
shll
es
scas
ret
mov
mov
mov
ret
aad
insl
shll
icebp
push
arpl
and
xchg
test
xor
ds
ja
addl
sub
ret
les
cli
xchg
dec
out
stc
mov
inc
es
xchg
in
popf
stc
inc
mov
lock
lea
mov
add
pop
push
sar
jg
leave
pusha
mov
aad
jle
jb
mov
lds
xchg
in
xchg
dec
je
sbb
insl
xchg
fwait
or
sbbl
es
ja
push
jns
xchg
stos
xor
mov
dec
cmpsb
div
ds
cmp
movsl
sbb
fldcw
lds
xor
popa
cwtl
fstl
push
jmp
fbstp
into
ss
jns
push
mov
jnp
push
iret
test
xchg
sub
roll
hlt
or
daa
pop
adc
in
mov
inc
jecxz
dec
sbb
leave
int
pop
jns
into
sarb
ret
test
push
out
adc
xor
fstpt
add
mov
cmp
repz
or
lds
jp
push
jp
push
xchg
adc
call
jo
orl
pop
cmpsl
decl
pop
cmp
aad
les
pop
aaa
or
daa
or
sub
jge
mov
aam
mov
mov
insb
xchg
sub
hlt
lret
pop
sub
inc
mov
pop
int3
scas
in
ret
outsl
lret
lret
insb
xchg
add
ljmp
enter
sahf
fsubrs
rolb
sbb
mov
mov
sar
cs
push
or
push
inc
pop
icebp
dec
xchg
loop
pop
imul
inc
int
adc
ficoms
mov
lea
rorb
mov
xor
or
push
lods
inc
inc
add
mov
sub
cltd
mov
xchg
mov
push
adcb
and
push
fptan
dec
or
xchg
add
stc
cltd
xor
mov
mov
inc
push
ds
icebp
ljmp
dec
mov
test
stos
lods
ss
das
mov
lret
jg
sahf
xor
clc
mov
mov
stos
sbb
aaa
and
pop
stos
jb
jp
ficoml
xor
lret
add
pop
mov
sub
scas
mov
out
ja
sub
mov
dec
xchg
mov
mov
dec
mov
inc
mov
and
lea
mov
xchg
cld
sbb
leave
or
ds
repz
and
inc
fldpi
movsl
jb
mov
dec
and
lahf
loop
cld
xchg
aaa
sbb
mov
sbb
lret
addr16
sbb
mov
xchg
loope
nop
push
xchg
addl
adc
add
and
in
and
jnp
pop
push
push
pop
mov
dec
out
push
test
inc
loopne
sub
push
popf
xor
scas
mov
mov
xchg
test
outsl
adc
jnp
lahf
ss
shrl
lock
loop
adc
dec
sti
fdivl
iret
pop
shrl
sub
data16
pop
sti
test
scas
int
xor
mov
gs
in
ret
cmp
mov
inc
fcmovnb
je
in
gs
mov
ljmp
pop
icebp
test
and
add
jo
loopne
fnstenv
sub
push
cltd
nop
daa
or
stos
inc
loope
icebp
mov
lret
xchg
mov
fbstp
out
mov
loopne
addr16
adc
iret
inc
call
inc
fsubl
das
xchg
sub
je
nop
dec
mov
aas
jne
pop
fidivs
dec
ss
cmpsb
push
jmp
aam
push
lods
jl
lret
mov
addr16
aad
inc
fidivrl
sbb
roll
fistl
xchg
jo
lds
add
xchg
jb
lahf
ss
inc
test
scas
push
sbb
ficomps
iret
imul
inc
xchg
imull
jge
jae
loop
mov
aam
xchg
and
das
popf
add
inc
push
cmp
xchg
xor
nop
mov
or
sbb
pop
lods
and
rorb
and
jns
mov
aad
jnp
xchg
or
stc
jl
and
in
inc
imul
sbb
jae
cmp
push
cmpsl
in
sbb
mov
mov
popf
repnz
pop
out
add
push
sahf
sbb
pusha
mov
push
jmp
add
in
jne
push
out
xor
mov
aad
out
out
inc
aas
into
gs
mov
fldenv
add
sbbb
fst
addr16
fnstenv
pop
push
out
popa
gs
push
or
sarb
mov
int
xor
push
lds
cmp
pop
icebp
aad
mov
cld
inc
mov
popf
and
pop
icebp
into
std
mov
jge
aaa
lahf
ss
jno
mov
pop
dec
in
mov
jmp
jl
add
add
and
test
lock
jl
adc
inc
repz
ds
divb
or
add
out
push
je
mov
dec
push
rorl
out
push
or
nop
mov
push
push
mov
insl
test
popa
pushf
mov
ret
add
xchg
cmc
or
in
mov
push
call
sub
xor
pop
rolb
iret
lea
imul
push
pop
ja
xchg
sub
inc
int3
dec
loope
enter
int3
dec
sub
out
lock
lret
push
andl
pop
scas
sub
dec
push
mov
fs
bnd
in
cmp
mov
in
mov
lcall
pop
cld
int
pop
fxch
out
sbb
push
pop
imul
adc
pop
mov
lahf
pop
repz
mov
inc
cmp
pop
gs
pop
test
xchg
test
daa
mov
or
es
mov
sbb
insl
xor
mov
cmp
mov
push
mov
inc
ret
sub
xchg
sbb
inc
mov
jo
pop
je
insb
mov
fisttps
mov
data16
pusha
fdivs
lea
push
push
and
jno
cld
lds
adc
mov
dec
and
inc
sbb
adc
jle
psllq
int
popa
mov
aam
pop
mov
jp
xchg
jno
cmp
mov
stc
nop
mov
sbb
mov
inc
and
sti
mov
insb
add
and
aam
rcl
hlt
push
push
hlt
jp
dec
call
stos
inc
fdivl
fldcw
mov
add
popa
xchg
mov
mov
mov
jnp
rclb
inc
scas
iret
insb
dec
stos
daa
pop
out
sub
jnp
sbb
pop
sub
mov
fwait
stos
inc
int
sbb
pop
gs
pusha
xchg
jle
add
mov
lods
loopne
mov
and
push
mov
cmc
ss
ss
mov
test
insl
jge
xor
mov
sbb
pop
rcrl
jg
xchg
ret
jnp
mov
cld
es
adc
std
pop
insl
mov
mov
adc
adcb
faddl
pop
test
ljmp
packssdw
pop
mov
jne
dec
push
sub
aas
xor
dec
loope
xchg
push
cmp
sbbl
pop
and
aam
jge
push
enter
jp
jmp
in
adc
push
pop
lea
mov
and
fstp
shrl
fistpl
test
cmp
adc
inc
sub
movsl
pop
adc
loopne
inc
sbb
out
push
notb
lahf
sbb
movsl
dec
ss
in
sbb
sub
stos
scas
push
pusha
cmp
mov
jg
xchg
inc
inc
shl
cmp
mov
and
fcompl
or
jle
pop
outsb
mov
addr16
leave
mov
and
mov
or
jmp
add
in
and
mov
stos
xchg
rorb
mov
push
adc
je
dec
fidivrs
subl
mov
dec
pop
aaa
jg
outsb
or
mov
pop
ret
push
push
push
in
into
data16
xor
lock
ss
cmpsl
sbb
loope
scas
adc
mov
adc
decl
gs
out
pop
cli
mov
xchg
and
xor
sbb
lahf
stc
or
cmp
mov
pop
cmp
push
aad
mov
push
push
xchg
xor
and
and
mov
dec
mov
mov
insl
or
jle
test
test
push
rcl
mov
xchg
sti
pop
fnstsw
add
xchg
push
push
lods
in
psrad
test
xchg
fnstcw
popf
jo
nop
mov
inc
mov
jb
aas
outsb
add
les
mov
dec
in
jmp
push
xor
or
stos
jg
fcompl
or
stos
in
addr16
arpl
ret
jge
mov
mov
jecxz
testl
mov
adc
push
mov
or
push
pushf
mov
ds
lods
sbb
sub
leave
nop
divb
mov
sbb
sar
xchg
add
push
push
rcll
push
inc
push
fwait
hlt
sbbl
shll
into
and
or
jbe
jno
mov
push
mov
cmc
fnstcw
or
stc
adc
fnsave
imul
mov
cmc
and
or
and
es
pop
mov
aas
std
lcall
shl
pop
call
mov
pop
repnz
pop
jns
xchg
stos
outsl
xor
dec
mov
insb
fmulp
pushf
scas
repnz
mov
adc
lahf
popa
mov
or
sub
inc
add
loope
leave
or
je
int3
loopne
sbb
fisubs
lods
dec
popa
cmpl
fidivl
ljmp
addr16
cli
adc
lahf
into
mov
adc
in
hlt
jne
js
add
jge
or
nop
xor
test
inc
leave
pop
sub
scas
inc
fistps
mov
cmp
jo
dec
push
in
imul
xor
sub
mov
mov
sub
insl
jmp
jp
add
mov
lea
adc
das
xchg
or
arpl
sub
cwtl
in
or
js
fidivrl
inc
scas
sbb
or
neg
push
hlt
adc
movsl
xor
inc
mov
push
aad
aam
sahf
sub
adc
inc
imul
push
outsl
push
test
inc
mov
inc
pushf
orl
dec
js
lahf
dec
push
shll
inc
movsw
adcb
aad
arpl
ficoms
push
mov
push
movsl
cmp
pop
add
or
in
lds
jb
pop
dec
add
xchg
push
movsl
xorb
mov
mov
sbb
mov
std
cltd
xchg
mov
lods
lods
jl
test
inc
inc
pusha
push
dec
dec
dec
js
loop
jecxz
push
pop
adc
mov
add
sub
and
mov
push
outsb
loope
ljmp
popa
add
inc
mov
lcall
and
and
outsl
adc
mov
in
std
lahf
push
sub
add
push
bnd
mov
stos
lret
les
push
iret
inc
lock
das
add
repnz
cmpsl
jmp
xchg
out
mov
fnstenv
adc
mov
push
data16
fmull
xor
aam
outsb
mov
pop
fsubrs
lcall
xor
shrb
xor
and
dec
out
xor
aad
dec
pop
push
divb
jno
xchg
mov
popf
roll
popf
and
in
xor
out
bound
ret
lea
ss
iret
ss
fimuls
rorb
push
add
rcrl
or
repz
out
xchg
clc
daa
push
repz
or
pop
std
jo
nop
xchg
in
adc
ret
in
stos
out
dec
movsb
mov
cmpsl
sub
fadd
add
cmp
ljmp
push
mov
int
cmp
divb
lcall
and
in
fs
jbe
inc
xor
push
loop
and
push
cmp
and
xor
xchg
pop
mov
ret
loopne
int3
xor
and
sub
lods
lock
cmc
mov
push
adc
mov
and
and
and
inc
outsb
add
adc
push
push
outsl
stos
add
test
lret
int3
or
mov
xchg
insb
inc
pop
imul
sarb
ljmp
lea
scas
mov
test
leave
cwtl
jae
mov
sub
dec
imul
cmpsb
add
xchg
sub
flds
scas
in
xchg
jno
push
imul
test
sbb
in
cmpsl
sub
int3
mov
int3
sub
add
sbb
dec
cmp
cmp
ret
ljmp
and
push
rol
arpl
loop
fbld
dec
in
std
xchg
push
mov
mov
les
jae
push
das
mov
sub
cmp
outsl
dec
jno
add
scas
jb
lcall
adc
cmpsb
jmp
adc
cltd
xor
test
pop
insl
out
adc
or
mov
push
mov
jmp
fidivl
js
ja
sub
je
and
cmpl
xchg
dec
shlb
jl
std
fs
xor
outsl
mov
or
popa
sbb
into
call
scas
jg
ror
lds
bound
dec
popa
or
xor
out
jg
lods
and
sub
rcr
and
lods
into
shlb
or
ss
pop
rolb
mov
fs
add
seto
cmp
jbe
add
fnstenv
rcrl
sbb
sub
ss
in
jmp
mov
insb
ss
cmp
xor
cltd
sbb
lcall
xor
push
inc
adc
mov
dec
loopne
pusha
mov
cmp
dec
loope
push
adc
add
pop
mov
cmp
jae
out
jne
jbe
mov
push
push
ljmp
cmp
in
popl
lahf
or
sub
mov
push
sub
adc
push
out
pop
add
mov
in
inc
cltd
ret
lock
cmp
nop
push
cltd
mov
lcall
mov
rorl
xchg
insl
jne
loope
xchg
pop
out
jne,pn
aam
insl
sbb
jle
hlt
mov
shr
or
or
dec
and
xor
mov
cmp
push
pusha
out
out
inc
lret
pop
dec
inc
ret
lods
push
mov
push
ficompl
imul
nop
out
orb
adc
mov
cwtl
push
adc
dec
push
incl
stos
push
sbb
jne
sub
push
xchg
outsl
push
jnp
jae
jb
push
mov
adc
sarb
jbe
or
mov
inc
sahf
shrl
mov
adc
pop
cld
test
movsl
cmc
je
add
std
xchg
pop
push
sub
sub
icebp
imul
or
push
js
adc
dec
outsb
mov
lds
rcrl
mov
cmpsl
ror
lock
jecxz
popf
and
cmp
cmp
out
sbb
and
sarb
pop
fadds
je
out
lods
mov
push
test
or
jg
mov
ss
inc
cwtl
dec
jns
mov
push
scas
push
cmpsb
out
xor
shufps
cmpsb
pop
mov
ds
cmp
fcompl
and
mov
shlb
shr
sbb
jbe
cs
and
and
cld
xchg
lods
jns
call
lea
and
jns
push
adc
pavgb
out
cmpsl
dec
rcrb
mov
mov
cwtl
cwtl
out
lret
sbbl
cltd
dec
cmp
int
lahf
inc
lahf
push
rol
repz
div
pop
jno
les
aam
adc
into
lret
or
arpl
add
inc
fimull
ljmp
das
pusha
mov
cmp
and
or
push
in
xor
mov
sbb
cmpsl
mov
cmp
aas
push
fisubs
test
ret
cli
sub
iret
and
add
cltd
mov
ret
outsl
push
and
lds
aaa
xor
bound
dec
mov
push
pop
fsts
sbb
jnp
mov
jmp
add
push
or
lret
sbb
or
cmp
pop
movsl
ja
adc
and
lret
sbb
rcrb
sub
loopne
insb
pop
sub
imul
jl
or
adc
sti
aas
gs
xchg
repnz
inc
lock
mov
daa
clc
mov
rolb
inc
in
insb
shrb
insb
mov
sub
cmp
push
scas
sbb
lret
cli
xchg
dec
lods
enter
sbb
adc
mov
xor
inc
fistpll
in
lahf
add
adc
in
dec
fistps
mov
movsl
xchg
popf
rol
dec
fs
xchg
outsb
dec
push
sbb
xor
add
shr
testb
rcrl
test
mov
jbe
sahf
out
cmc
aaa
push
inc
lret
sahf
gs
and
subb
icebp
sbb
xchg
add
dec
mov
nop
mov
add
aad
ds
mov
mov
mov
inc
popa
mov
lods
sbbl
scas
push
jne
push
movsb
not
and
or
inc
icebp
sub
mov
and
jns
mov
fs
subl
add
add
cmpsl
push
or
das
mov
addr16
mov
or
add
sbb
insb
push
jmp
mov
cltd
xlat
lds
xchg
ror
mov
jb
test
adc
pop
fnstenv
mov
aaa
scas
xor
lods
popa
push
ja
sbbb
nop
cmp
fdivrl
push
arpl
pop
sbb
xor
out
movsl
jb
mov
mov
xlat
sbb
add
adc
fdivrp
arpl
lds
cmp
stc
dec
mov
mov
add
into
loop
outsl
jg
mov
mov
jae
jo
test
jmp
jo
mov
jecxz
mov
aas
dec
test
xorl
sub
test
stos
les
cmpsb
insl
nop
xlat
xchg
add
les
dec
repnz
xchg
and
push
push
jne
icebp
xor
jle
adc
movsb
push
movsb
cmpsl
ret
test
xor
add
xchg
shll
fdivl
push
fdivs
cmp
jne
push
clc
push
mov
cld
mov
fbld
push
ret
aam
xor
loopne
rcrl
lods
adc
das
xchg
pop
mov
addl
jae
xlat
out
add
push
outsb
push
and
mov
jge
inc
scas
repz
add
scas
add
fmul
movsb
mov
xor
xor
cmp
xor
gs
cmpsl
sbb
and
bound
int
leave
mov
xor
aaa
pop
pusha
cmpb
xchg
adc
sbb
push
xor
lret
sti
add
int3
mov
add
daa
jmp
inc
pop
repnz
cwtl
outsb
adc
mov
push
lds
inc
fsubrs
inc
mov
push
push
mov
mov
cmpb
lret
pushf
sub
int
push
mov
xlat
xchg
cld
jno
or
jecxz
add
loopne
mov
ja
add
mov
jae
jbe
shrb
pop
mov
xrelease
aam
sub
nop
in
push
jae
pop
scas
lret
xchg
mov
mov
push
scas
pop
xor
and
test
mov
mov
adc
pusha
adc
xor
jae
push
test
decl
lods
pop
sbb
ret
fucomp
and
xor
or
popf
push
jmp
into
testb
and
and
mov
or
pop
inc
popa
push
outsb
lret
pop
add
shrb
vcvtsd2ss
mov
aad
pop
xchg
in
je
test
in
rolb
cmp
mov
jmp
xchg
dec
mov
sub
mov
mov
test
aad
inc
pop
pop
mov
xchg
mov
inc
aam
repz
addr16
fadd
cld
push
sbb
test
mov
ljmp
mov
test
and
push
xchg
das
fidivs
out
mov
rcrb
cmp
and
push
jne
std
ja
loop
stos
push
adc
sbb
push
push
inc
jbe
inc
adcl
js
in
push
push
outsl
in
cltd
dec
cmp
xor
orb
test
push
sub
lcall
mov
enter
jns
mov
nop
mov
in
orl
sub
mov
adc
mov
scas
xchg
add
stc
imul
inc
mov
loopne
inc
divb
or
jmp
sub
pop
cmp
mov
mov
ret
push
jne
pop
cmp
xchg
mov
fdivs
push
ja
daa
das
pop
cwtl
fdivrs
mov
cmp
loope
and
out
shll
dec
enter
jno
sbb
loopne
xor
test
cld
mov
lock
nop
aas
xchg
inc
int3
jne
adc
popf
sub
frstor
rorl
jbe
das
iret
mov
jg
and
adc
inc
mov
int
cwtl
cmpsl
push
xor
outsl
mov
enter
mov
sub
out
dec
push
push
aas
xor
mov
cli
push
xchg
inc
cwtl
pop
out
mov
pushf
mov
pop
popf
in
cld
fcmovnu
or
mov
or
or
aam
pop
scas
mov
lods
inc
cmp
inc
jl
jbe
insb
push
xchg
popf
fs
xchg
pop
mov
jle
and
jmp
mov
jo
jecxz
sbb
pop
cmpl
inc
scas
pop
fdivl
rolb
std
sbb
mov
call
mov
imul
popf
sti
loop
test
fs
fisubl
jge
xchg
add
xchg
ss
cmp
jbe
loope,pt
adc
out
xchg
das
jl
sbb
sbb
push
mov
push
shlb
aad
mov
sbb
out
xchg
xor
addr16
inc
push
fdivr
test
or
or
push
mov
push
scas
mov
andb
xor
jle
hlt
and
and
xchg
cmp
mov
rcrb
iret
push
or
loope
daa
mov
cwtl
xor
mov
mov
test
fwait
call
shl
faddl
pop
mov
xor
movsb
enter
push
test
call
xlat
out
ret
and
std
fwait
jnp
sbb
and
nop
cmp
mov
fs
scas
mov
or
movsl
data16
push
popa
xorl
xlat
negl
hlt
rclb
mov
fwait
xor
xchg
inc
push
mov
inc
xor
call
lock
pusha
and
or
jge
dec
mov
and
stc
xchg
xor
adc
mov
sbb
aad
xor
jne
dec
xchg
dec
jl
jo
iret
data16
into
xor
ds
in
test
sub
fs
mov
stos
clc
and
stos
sbb
or
add
stos
adc
fs
cmpsl
jno
jnp
arpl
pop
mov
jno,pt
lahf
imul
sbb
mov
nop
lods
add
inc
xchg
loope
add
jo
push
rclb
insb
imul
cmp
stos
inc
data16
in
lods
mov
jecxz
fwait
sarl
or
bound
decl
mov
iret
lret
movsl
pop
movsb
dec
push
enter
mov
outsb
jl
stos
fiaddl
test
or
ret
outsl
mov
dec
and
jle
pop
mov
and
out
les
sahf
xor
in
mov
mov
rcll
ret
jne
repnz
out
aam
in
pcmpeqd
test
mov
sti
push
pop
sbb
xchg
dec
dec
flds
or
jecxz
cmp
add
or
notb
lret
xchg
add
dec
je
int
sahf
insl
cmc
cli
xchg
adc
stc
xor
sarb
push
sbb
xchg
lahf
in
push
icebp
hlt
hlt
mov
out
cs
cltd
xchg
pop
push
scas
mov
add
jnp
inc
dec
xor
hlt
int
fs
mov
jo
push
std
lods
inc
arpl
fistpll
test
bound
popf
push
push
xchg
out
cmp
dec
cmp
in
adc
lock
in
mov
outsb
add
mov
and
add
fsubr
and
sarl
inc
dec
mov
mov
sub
inc
fxch
xor
pop
jmp
xor
imul
sbb
cmpsl
dec
cltd
lods
clc
mov
mov
fldl
or
mov
lock
aam
push
movsb
aaa
fistpl
xlat
test
and
inc
fst
inc
addr16
in
es
mov
mov
decb
lret
stc
data16
iret
add
push
sub
push
cmp
movsl
dec
scas
inc
sahf
rclb
cmp
mov
mov
adc
cmp
mov
pop
add
mov
les
stos
cmc
lock
inc
mov
enter
mov
xchg
add
sbb
rclb
inc
dec
push
cld
arpl
cmpsb
add
pop
jns
pop
cmp
cmp
scas
and
inc
icebp
nop
std
mov
sub
xchg
insl
dec
outsl
js
mov
hlt
and
test
leave
inc
aaa
test
jae
rcll
cmp
mov
fwait
loop
int3
xlat
lods
sbb
sub
cmp
and
sbb
mov
rolb
adc
mov
mov
aad
in
add
popa
dec
jecxz
xor
leave
pop
inc
repnz
and
lds
ss
out
dec
fs
mov
sbb
adc
inc
call
cltd
aam
dec
push
mov
aas
push
orl
cmpsb
stos
sub
lret
repnz
or
pop
cs
jp
pop
pusha
mov
push
xchg
inc
inc
enter
cmpsl
ljmp
adc
mov
jnp
lds
dec
mov
imul
jo
pcmpgtd
mov
iret
inc
mov
sbb
scas
pusha
mov
pop
mov
bound
jno
and
sbb
sub
mov
dec
mov
xchg
inc
push
scas
jg
hlt
int3
push
fimull
mov
xor
pop
inc
test
and
push
dec
mov
loop
cmpl
mov
jnp
lods
and
xor
outsb
test
cmp
jae
shl
push
and
divl
pop
sub
pop
enter
cmp
fsubrp
push
adc
les
mov
inc
lret
ret
and
lret
ficomps
mov
ret
out
loope
data16
int
out
mov
scas
sub
adc
add
mov
leave
jg
jae
mov
and
or
call
sub
sbbl
pop
fildll
gs
add
in
icebp
dec
pushf
mov
lret
sar
push
and
add
adc
xchg
mov
daa
lret
adc
pop
adc
fcoml
fldt
jae
scas
xchg
lret
or
in
in
push
xchg
sbb
fstps
out
ret
call
or
es
jle
mov
adc
lret
or
stos
outsl
push
sbb
decb
mov
sti
push
lea
testl
lret
pop
cmp
inc
dec
cmp
push
btr
mov
adc
nop
imul
mov
je
sub
divl
test
mov
in
adc
mov
inc
mov
and
loopne
mov
jns
xchg
fdivrs
incl
mov
cmp
test
int
ret
add
cmp
orb
sbb
leave
add
jne
pop
scas
jns
sbb
fdivrp
xchg
sbb
sbb
push
mov
aam
test
int3
adc
int
ss
out
push
test
mov
jmp
pop
repz
and
out
addl
mov
adcl
mov
adc
ror
jne
sarl
popa
call
sbb
pop
or
lods
stc
daa
inc
pop
call
xchg
add
ficoml
cld
jbe
jp
lcall
or
push
jp
cmc
jno
ret
shrl
test
xor
rclb
ret
fcmovnbe
xchg
ljmp
add
pusha
aaa
mov
pushf
push
outsb
dec
fmul
and
push
inc
jmp
mov
mov
cmp
shrb
je
dec
into
mov
popf
sbb
ljmp
inc
imul
jp
xchg
pop
iret
xchg
pop
mov
lea
les
pop
and
pop
push
adc
lds
mov
dec
mov
out
adc
call
xchg
or
dec
jns
mov
adc
xchg
shrb
add
imul
xor
fs
cmp
test
cltd
xor
mov
pop
je
in
insl
lret
mov
xlat
nop
std
cld
xor
and
mov
stos
mov
push
cltd
mov
int
mov
call
jecxz
jno
popl
movsb
push
orb
stc
inc
enter
and
rcrb
cwtl
fsubs
jne
call
test
add
stc
nop
jo
jl
add
movsl
mov
ret
mov
cmp
or
aam
xchg
dec
push
call
lds
jmp
sbb
out
push
pop
and
push
push
jns
push
ds
jo
xor
stos
push
xchg
xor
dec
mov
fisubrs
cmp
or
pop
push
jge
pop
mov
leave
pop
xchg
fucomp
hlt
jb
jmp
mov
jae
fnstenv
push
jge
jmp
and
mov
and
test
lret
addr16
jne
iret
fs
adc
es
push
cmc
jns
iret
shrb
cmc
jmp
mov
pop
outsl
ljmp
negb
call
mov
and
push
sub
fnstcw
shrl
stos
mov
inc
test
leave
fiaddl
jbe
mov
xchg
pop
mov
adc
insb
add
jns
inc
mov
loopne
and
ficoml
insb
cltd
fstpl
stos
aas
xchg
sub
lret
xchg
popa
and
sub
xor
in
mov
fcoms
fiaddl
mov
dec
mov
mov
pop
mov
loop
jmp
lds
inc
ja
xor
push
fwait
movsl
test
stos
jnp
testb
adc
and
rcrl
sbb
sbb
leave
popf
jnp
jns
movsl
mov
scas
jge
xchg
adc
scas
sbb
mov
aaa
push
pop
push
stos
inc
cmp
lods
mov
mov
nop
out
aam
test
mov
pop
push
outsb
ljmp
xor
pop
int3
in
sbb
jb
lret
cltd
xchg
daa
push
imul
push
push
cld
mov
or
icebp
dec
push
adc
jne
out
xchg
insl
xchg
in
pop
int
mov
push
jb
and
movsb
lcall
mov
mov
mov
icebp
mov
and
lret
push
cmp
dec
insb
jae
enter
xchg
push
jns
pop
and
sbb
xor
or
ds
dec
mov
pop
ud0
adc
test
aad
lea
insl
sti
jl
imul
test
stc
iret
or
adc
clc
lods
fmuls
xor
ret
add
push
mov
jl
int3
shrb
mov
dec
push
and
rcrl
xchg
pop
outsb
dec
push
dec
into
jl
inc
cmp
ret
sub
in
jle
shr
and
test
mov
popa
aas
push
cwtl
push
push
inc
je
adcb
cwtl
decl
js
and
dec
insb
xor
pop
push
fwait
fs
out
cltd
or
sbb
and
mov
in
inc
dec
loop
sti
lret
test
adc
lds
loope
jg
inc
hlt
js
push
movsl
sarl
mov
cmpsb
std
scas
ret
push
and
stc
lods
fsubr
shll
xchg
sub
push
lock
or
and
test
jmp
push
jecxz
test
not
mulb
cmpsl
sbb
push
inc
and
insl
out
mov
data16
cwtl
pop
push
mov
jne
adc
jg
adc
inc
and
paddusw
repnz
pop
movsb
pop
adc
mov
xor
mov
xchg
add
test
in
aad
loop
cmpsb
jg
aad
jg
mov
or
dec
xor
out
mov
cmpsl
sub
daa
subb
xor
popf
xor
mov
dec
fnsave
out
jns
loope
inc
dec
cmp
movsl
dec
pop
sub
adc
je
out
sbb
mov
daa
pop
shlb
cwtl
in
mov
fldl
sub
int
popf
divb
dec
jne
stos
out
xor
cmp
sub
add
xchg
sub
decl
ljmp
add
ret
cmp
int
and
stos
movsl
cs
and
pop
mov
in
aad
lock
sarb
out
jg
dec
sbb
sbb
jl
repnz
xor
imul
js
xchg
xchg
sbb
sub
ret
mov
ret
or
pop
or
cmp
cmpsb
push
pop
mov
into
in
scas
mov
mov
in
xchg
das
in
xchg
aaa
stos
mov
jne
mov
adc
mov
cltd
repnz
stos
fsubr
push
clc
inc
je
mov
xor
xchg
adcb
adc
mov
sub
jns
sbb
lock
pop
addr16
cmc
add
xor
lock
dec
pushf
cltd
outsb
add
and
mov
ljmp
pop
bound
adc
pop
pop
adc
cli
and
sbb
rcl
jae
pop
cmp
push
sub
movsl
in
insb
jno
outsb
outsl
jo
scas
mov
dec
add
cmp
mov
cld
test
stos
dec
adc
int3
push
sti
pop
repnz
imul
jns
aad
mov
fcmovne
jo
and
or
fisttpl
popf
insb
lds
loop
mov
sbb
jge
test
dec
jecxz
cmc
data16
cltd
mov
popa
out
popa
aas
aam
sub
fcmovne
cwtl
andl
clc
adc
cltd
fldcw
push
movsl
inc
dec
fistpl
cmp
jecxz
cmp
jo
mov
mov
imul
js
dec
inc
out
pushf
and
fnstenv
push
adc
std
lret
and
cmp
sbb
nop
or
xor
push
add
xchg
mov
xchg
dec
xchg
dec
lcall
inc
gs
mov
jmp
or
and
std
xor
out
sbbb
pop
jle
nop
hlt
pop
dec
or
outsb
xchg
add
mov
mov
jne
pop
in
cmp
lock
mov
fildl
nop
fisttps
pop
sub
add
add
mov
negb
andb
ret
hlt
popa
dec
call
push
xor
outsl
sub
cld
push
rclb
pop
cmpsb
jge
lds
dec
ja
bnd
fwait
xor
imul
enter
inc
fsubs
cmp
das
xchg
pop
aam
dec
sbb
das
js
lods
mov
adc
xor
cwtl
gs
pop
push
xor
mov
imul
mov
movsb
mov
in
jno
aaa
out
mov
test
mov
fs
test
movsb
mov
mov
outsb
jp
push
outsb
cmpsl
ret
fcomps
add
dec
and
and
mov
pushf
or
js
jbe
push
or
lods
xchg
mov
push
data16
adc
lods
inc
shll
lret
xchg
or
sub
jp
in
hlt
xchg
adc
shr
test
into
xorl
js
daa
stos
lods
adc
sbb
out
ret
adc
lret
pop
cwtl
addl
in
scas
dec
cs
inc
xlat
xchg
push
test
sahf
cmpsb
xchg
cmp
dec
pushf
jbe
sub
push
sbb
mov
mov
test
adcl
outsb
imul
aam
jg
push
lret
inc
ret
sbb
mov
mov
xchg
push
xchg
sbb
aad
pop
mov
mov
and
outsl
cmp
sbb
jne
dec
cmp
xor
lret
sub
clc
jnp
mov
test
push
jns
push
insl
repz
fcomip
xchg
dec
shlb
mov
sbb
in
and
xchg
movsl
nop
out
pop
out
cmpsl
inc
cmpsl
push
in
add
cmc
sbb
test
dec
popf
in
inc
push
pop
aaa
ficompl
popa
pop
dec
mov
sbb
pushl
or
cmp
pop
or
out
xchg
pop
cmp
sub
push
rclb
cmp
out
and
adc
in
push
adc
push
mov
mov
aas
xchg
pop
fistl
adc
scas
shrl
mov
icebp
shrl
sub
repnz
add
cmp
test
ja
scas
and
pop
and
or
sbb
cmp
insl
stos
sub
pop
cmpsb
cltd
add
sbb
outsl
ja
aaa
xchg
das
test
iret
and
pop
imul
cmp
test
push
mov
xor
in
push
ljmp
lock
mov
in
mov
lods
sub
lret
sub
add
adc
inc
dec
repz
in
scas
cli
push
loopne
loopne
iret
jmp
push
inc
pusha
mov
ds
out
add
repz
in
pushf
sbb
ret
pop
setne
scas
in
push
sbb
rorl
add
imul
out
addr16
fbld
pop
or
pop
inc
testl
sbb
mov
jmp
dec
dec
xchg
mov
mov
lods
sbb
pop
dec
sub
jns
sbbl
jns
add
mov
mov
test
dec
mov
mov
inc
jmp
lret
mov
mov
mov
xchg
cli
and
sti
mov
pop
gs
xchg
push
mov
add
dec
jmp
shl
push
ss
pop
lcall
or
xor
in
shl
mulb
sbb
cmpsb
imul
int3
dec
jecxz
mov
xchg
ficompl
xchg
inc
fmul
loope
push
inc
pusha
pop
std
lcall
aad
jge
mov
je
insl
cmpsb
call
and
or
scas
es
cmpb
xor
jmp
bound
lods
inc
pop
inc
test
out
mov
jecxz
ret
sub
fadd
xor
data16
aaa
dec
mov
sub
inc
fscale
scas
dec
mov
pop
in
fcoms
cmp
inc
mov
dec
xchg
popa
roll
repz
xlat
jmp
fistl
push
scas
fwait
jmp
cmp
pop
add
xchg
iret
push
bound
pop
cmp
add
pop
call
sbb
and
add
repnz
dec
stos
xchg
dec
xor
dec
mov
mov
xor
fst
repnz
mov
stos
testl
aas
je
pop
scas
imul
insl
push
sahf
mov
daa
stos
jno
jp
test
dec
mov
je
mov
xchg
xchg
or
fildl
cltd
cli
ret
inc
xchg
rcrb
push
cld
out
pushf
mov
adc
scas
jbe
xchg
pop
shlb
xchg
std
ret
mov
call
cld
mulb
fcom
out
dec
jae
loop
int
jge
cmc
cmp
mov
lret
and
pusha
push
cmc
jecxz
scas
mov
ljmp
xor
cli
or
xchg
mov
jl
mov
add
mov
pusha
mov
fbld
sti
xchg
inc
inc
das
mov
mov
dec
int3
mov
imul
jge
xor
shrb
cmpsl
call
mov
aad
enter
jecxz
enter
test
sub
test
lret
jb
jg
cld
mov
daa
lcall
es
ljmp
ljmp
adc
fldcw
ds
mov
push
sbb
loope
imul
jo,pn
ljmp
idivb
lds
push
fs
dec
jle
jne
outsl
inc
inc
push
and
jp
dec
jb
sarl
test
pop
push
inc
int3
mov
shlb
ror
leave
dec
xchg
test
lock
and
hlt
or
daa
or
pop
sub
mov
mov
shll
aad
pop
stc
hlt
jno
ljmp
jbe
aam
or
inc
xor
sub
push
aam
lods
inc
testb
pop
leave
pop
mov
xchg
xchg
daa
mov
pushf
sub
es
push
in
mov
push
inc
cltd
dec
test
and
add
sub
jp
push
pop
notb
sub
sahf
bound
xor
push
movaps
jnp
or
repz
dec
jp
push
mov
loopne
jge
sub
push
rcrb
in
push
xor
aam
mov
xchg
xchg
sub
les
call
cmc
adc
adc
pusha
arpl
push
into
add
in
daa
addr16
or
inc
adc
lea
call
mov
fnstsw
sub
mov
xchg
out
and
inc
pop
fs
popf
popa
jg
and
shlb
sbb
sub
inc
test
mov
mov
pop
insl
xor
in
cmpsl
dec
in
jae
sti
movsb
cmp
add
xlat
mov
mov
outsl
adc
rorl
and
scas
push
fnstcw
nop
sbb
xor
adc
dec
sbbl
popa
mov
add
pop
imul
inc
lahf
sahf
scas
fnstsw
jo
iret
test
or
aaa
mov
jge
scas
sub
pop
dec
jb
xchg
sub
hlt
loop
add
sub
shl
js
lods
jg
mov
fstps
push
add
lods
aad
or
add
add
call
mov
and
or
pop
jmp
bound
hlt
xor
loope
in
test
pop
daa
xchg
and
bound
rcrl
mulb
xchg
lea
jle
adc
xor
inc
push
pop
ja
insb
test
insl
add
repz
dec
sbb
adc
mov
and
in
sub
mov
stos
cmp
bound
inc
jle
xchg
pop
sbb
xchg
clc
dec
jo
mov
outsl
adc
adc
xor
js
or
into
jl
or
outsl
mov
mov
stc
scas
shll
dec
loopne
inc
stc
pop
push
jg
les
shlb
ret
int3
xlat
arpl
pop
dec
in
jecxz
push
mov
fsubr
push
add
inc
push
pop
shl
lahf
dec
repz
and
or
sbb
adc
dec
sbb
test
dec
add
iret
sub
push
outsb
icebp
test
and
in
cmp
std
mov
xor
xlat
fs
in
lock
fisubrs
aaa
sbb
pop
mov
add
bound
test
hlt
out
arpl
pop
std
or
adc
dec
and
xor
fxch
or
and
ja
adc
sbb
adc
add
jge
scas
add
outsl
sub
fists
fnstenv
push
push
in
repz
aam
sub
add
pusha
pop
xchg
jnp
dec
leave
pop
mov
jbe
mov
js
mov
std
movb
push
jns
das
sub
inc
dec
push
push
push
add
jmp
test
jb
xor
rcl
test
xor
or
pushf
dec
leave
sbb
sbb
push
inc
mov
popa
loop
sbb
ds
push
sbb
jge
ficoms
mov
cmp
iret
cmp
movsb
fisttpll
pop
mov
arpl
lahf
shrb
dec
push
sahf
movsb
pop
and
mov
fwait
push
ja
lret
lods
inc
adc
pop
mov
je
sub
lods
popf
xlat
add
mov
pop
cli
cli
pop
in
pop
lea
mov
xchg
xor
xchg
sub
jg
jnp
cmp
adcb
aas
lcall
mov
loopne
addr16
inc
jge
mov
ret
mov
add
push
iret
mov
sbb
or
gs
pop
push
mov
mov
cmp
or
je
adc
sbbb
mov
adc
in
dec
cmc
mov
push
sub
aas
mov
iret
mov
sarb
xor
shl
xor
push
pop
repz
test
jp
test
lret
cmp
cmp
or
test
cld
or
out
inc
clc
in
nopl
fs
data16
jnp
scas
outsb
sub
push
xchg
jnp
mov
movsb
pop
and
lret
adc
pusha
mov
je
int3
loope
ds
mov
aam
xchg
lcall
out
or
iret
fistl
jle
out
scas
sub
pop
pop
xor
ja
xor
dec
dec
xor
mov
cmp
cmpsl
mov
lock
imul
jns
mov
aam
xor
xchg
push
call
cmp
jge
pop
aaa
push
lods
cmpsl
rclb
pop
push
mov
fidivrs
pop
lds
dec
incl
orl
nop
decb
shrl
adc
push
outsb
divl
push
sub
shrl
ljmp
jp
in
jp
pop
adc
icebp
sahf
das
ds
mov
inc
int
sahf
inc
dec
dec
stos
mov
xchg
into
movhps
shrb
xor
push
mov
jecxz
imul
xchg
lods
xor
push
push
mov
ds
sbb
ss
in
jl
pop
leave
int
pop
dec
adc
adc
xchg
in
xor
stos
test
pop
xor
push
jno
push
sahf
sbb
lcall
inc
arpl
xchg
mov
pop
and
test
and
lcall
mov
inc
inc
mov
sub
push
push
dec
push
jb
ljmp
mov
xor
add
rcrl
fisttpl
pop
int
sbb
jns
mov
xchg
jle
fdivl
xlat
fstpt
push
clc
dec
in
addr16
mov
jmp
add
jb
dec
or
sarl
nop
daa
mov
fsub
sub
cmpsl
fsts
addb
popf
pop
cmp
nop
aas
dec
add
cmp
orb
mov
mov
adc
push
inc
inc
enter
scas
mov
loope
int3
adc
dec
sub
aad
dec
sub
jp
and
daa
arpl
fwait
xchg
dec
cltd
std
out
mov
and
pop
xor
cmp
lahf
push
xor
push
or
push
vpperm
or
in
add
add
cmpsl
xor
xchg
fsubrs
jmp
notb
orb
mov
xorl
ljmp
xor
xor
hlt
mov
fmuls
test
mov
mov
push
insl
aad
cmp
and
inc
sub
jg
cmp
adc
bound
int
dec
inc
inc
ret
je
jp
push
inc
pop
loop
and
xchg
pop
push
outsb
inc
js
adc
push
xor
jle
je
sub
or
ss
sub
sbb
fadds
inc
xor
adc
mov
add
and
clc
aaa
pop
sub
and
shlb
stos
inc
dec
adc
push
or
xchg
pusha
xchg
fcmovb
sbb
icebp
add
adc
or
cmp
in
dec
loope
subl
cmp
nop
aam
mov
insb
ja
pop
mov
and
lods
mov
popa
push
lods
inc
dec
mov
fsubr
sbb
jae
mov
jle
mov
push
out
leave
aad
pop
mov
add
add
mov
pop
les
mov
sub
xchg
jp
jl
fwait
sub
xchg
mov
xor
sub
inc
cltd
or
cs
fsub
psubsw
sbb
inc
pop
jbe
add
xlat
jg
shr
xor
fwait
jb
and
stc
add
mov
sub
cmpsl
rclb
push
gs
mov
pushf
popf
mov
and
stos
ret
icebp
and
arpl
add
pop
lods
inc
mov
ret
cld
sahf
stos
or
mov
jg
je
popa
push
xchg
sbb
out
into
gs
cmpsl
dec
nop
sbb
mov
sub
call
add
loop
push
mov
add
dec
mov
ret
repz
or
or
mov
clc
and
enter
pop
and
dec
out
les
lea
out
loope
imul
add
popf
gs
inc
outsb
add
and
lea
arpl
lret
lds
add
adcl
jae
mov
mov
cmc
dec
aaa
rcrl
and
cmpsl
dec
jecxz
mov
mov
xor
test
iret
mov
cld
push
cmpsl
xor
clc
insb
mov
int
jg
pop
out
jmp
loop
jno
jbe
daa
xchg
adc
sbb
std
sbb
jae
pop
sub
sahf
stos
jg
pop
and
iret
je
loope
ja
mov
pushf
adc
leave
mov
lods
test
pop
xchg
mov
dec
bound
xchg
sub
xchg
add
loope
and
add
adc
pop
jge
cmp
movsl
dec
xchg
stc
icebp
lret
jb
sbb
cmp
cmp
fcmovnu
icebp
xor
std
rolb
mov
adc
addr16
sahf
xor
aaa
int
or
push
xor
xchg
mov
dec
aas
mov
mov
loopne
mov
adc
rolb
lret
mov
or
rclb
lcall
into
mov
mov
popf
sbb
xchg
xlat
inc
lods
mov
push
ss
addr16
lret
shr
cld
in
inc
test
lods
test
idivl
stos
rorb
pop
add
inc
emms
and
push
mov
out
cmp
movsl
xchg
clc
loope
ret
pushf
cmp
outsl
add
bnd
jbe
add
fadds
push
icebp
shlb
int
negl
mov
add
sbbb
push
sub
sbb
sbb
and
js
addr16
cs
xor
nop
push
lgs
lods
mov
mov
push
sbb
lea
fdivp
insb
or
sbb
mov
inc
jne
mov
rorl
adc
inc
repnz
out
sbb
out
imul
pushf
inc
out
jb
sbb
sub
push
xchg
inc
add
cwtl
loope
mov
mov
shrb
jo
ret
xorl
insb
sbb
mov
mov
gs
andb
cld
lods
mov
int
mov
xchg
mov
lahf
ss
insl
test
mov
fmull
and
sbb
xor
int3
fs
outsl
xchg
and
jmp
mov
pop
adc
pop
adcb
fildll
fs
push
adc
push
dec
mov
aam
or
push
cmc
mov
out
in
push
in
rol
dec
cmove
je
shlb
push
pop
int
xor
je
outsl
adcb
adc
out
imul
adcl
mov
jne
sbb
push
mov
xor
cmpsl
xchg
cmp
adc
movsl
xor
and
std
mov
enter
fucomp
add
xchg
idivb
jecxz
cmpsl
out
dec
and
sbb
xlat
mov
mov
mov
arpl
push
xor
or
and
and
mov
jge
das
out
dec
add
popa
dec
repz
and
xchg
es
loope
inc
jecxz
aas
fidivrs
push
cmp
pop
cmpsb
icebp
movsl
mov
in
dec
aaa
and
jno
mov
ret
adc
push
ds
ret
push
call
loop,pn
mov
pop
addb
xlat
and
sbb
lret
mov
fnstenv
shrl
out
or
cmp
fnstsw
aad
aad
dec
iret
pop
mov
or
fs
push
sbb
enter
xor
loop
dec
les
fwait
pop
jecxz
push
push
xchg
sub
add
add
and
mov
ja
rcll
mov
ffreep
popa
arpl
repnz
push
cmp
pusha
pop
xor
adc
jae
pop
and
xchg
add
mov
clc
sahf
or
test
test
push
mov
icebp
inc
xchg
mov
adc
xor
or
jg
je
sbb
or
ja
js
lcall
pop
in
inc
cmp
xchg
lcall
cmc
loopne
and
dec
pusha
sti
jns
mov
add
ss
pop
idivb
push
jge
and
jb
and
cmp
fmull
cmp
popfw
cmp
mov
jb
insb
mov
sbb
inc
loope
add
leave
pusha
sahf
cmp
loope
jb
dec
sub
adc
sub
sbb
or
sbb
sbb
mov
mov
sub
add
icebp
imull
repnz
stos
fdivr
xchg
dec
call
sbb
ss
lods
push
arpl
jp
pop
cltd
ljmp
pop
popf
in
int3
adc
movsl
daa
and
cmpsb
add
sbb
in
pop
mov
add
aam
sub
loop
push
sbb
lret
xchg
into
cltd
pop
repnz
out
cmpsl
out
cmp
cmc
xor
cmp
test
sbb
dec
outsl
sbb
pop
scas
xor
shl
repnz
mov
fs
xchg
sub
xorb
mov
leave
pop
mov
dec
imul
aas
mov
xchg
sub
aad
inc
pop
xchg
xor
iret
dec
jb
in
sub
jmp
data16
clc
aas
sub
lahf
xor
incb
inc
jmp
sbb
ja
pop
rcrb
andl
jmp
cmp
fs
leave
xor
push
movsl
lea
iret
lea
clc
stos
gs
ret
xchg
sub
mov
mov
add
inc
mov
inc
fimuls
leave
ljmp
fsubs
mov
enter
sub
cmp
pop
lock
sbb
sub
jns
push
dec
mov
movsl
sub
fldcw
jmp
aad
rorb
inc
pushf
jb
push
inc
stos
aas
clc
es
int
ror
sub
mov
fcoml
jno
mov
lret
fnstenv
jo
iret
add
je
sti
xor
call
lods
popf
sbb
pusha
lahf
push
inc
in
loopne
fstps
xor
xor
sbb
mov
dec
pop
sbb
sub
push
cmc
adc
ds
pop
inc
xchg
std
pop
dec
fisubrl
ror
loop
nop
lret
notl
add
pop
adc
xchg
push
mov
mov
sub
or
leave
es
inc
leave
pusha
pushl
fsubl
dec
arpl
jle
push
mov
sbbb
outsb
aad
xchg
mov
imull
cmpl
dec
rep
or
ret
fists
inc
push
push
aaa
iret
xsha256
cmpsb
pop
mov
sbb
push
jb
mov
jb
das
stc
nop
pop
add
add
movsb
cmp
sti
adc
cmpsl
inc
xlat
cmpsl
mov
out
ficoms
xorl
fucomp
andl
xlat
cmp
ds
sub
ss
adc
lds
xchg
int
clc
push
rcrl
insl
mov
xchg
xchg
push
fucomp
xlat
or
and
sub
or
adc
push
sub
sbbb
jmp
int
fdivrs
inc
out
hlt
push
out
in
mov
cli
dec
mov
cmc
aam
pop
nop
push
insb
das
ret
dec
and
addl
gs
rorb
out
ja
repz
jmp
inc
and
test
bound
mov
cmp
out
mov
xor
jne
cmp
out
in
lcall
loop
add
ss
cmp
push
and
cmc
mov
inc
in
or
dec
notb
sbb
add
xchg
mov
test
adc
add
mov
adc
repz
aad
repnz
cmc
cld
jle
insl
mov
dec
xor
in
stos
jge
daa
inc
jecxz
movsb
add
mov
push
repnz
mov
xchg
mov
push
sbb
lock
rorl
cwtl
jbe
aam
fs
pop
out
add
in
mov
adcb
aad
icebp
inc
pop
and
sub
adc
aas
inc
cmp
pusha
jge
xchg
movsl
mov
xor
mov
imul
pusha
sahf
pop
insl
cmp
les
ficompl
jae
ja
stos
test
fdivp
cs
xor
cld
dec
add
imul
loopne
jne
testb
dec
mov
mov
cltd
loopne
pop
adc
in
mov
mov
sub
push
ljmp
jno
push
sbb
push
push
cmc
call
sbb
inc
xchg
daa
xchg
shll
fcomp
test
mov
icebp
aad
addr16
mov
add
mov
or
idiv
gs
push
scas
insb
fnstcw
jecxz
mov
xchg
add
sbb
sbb
lahf
jae
lahf
icebp
cmp
adcl
cld
in
das
aas
pop
aam
fsub
dec
sbb
outsb
in
or
sub
push
inc
lds
mov
scas
rol
cld
sbb
into
ja
jne
ds
adc
jnp
gs
pop
cmp
in
adc
stos
pop
or
cmp
aas
push
inc
cmp
push
xchg
mov
push
jmp
out
pop
pop
cmp
mov
std
mov
test
jne
mov
cmp
mov
sub
xor
xor
push
mov
ret
sbb
mov
cmp
inc
imul
lret
xlat
movsl
cld
xchg
in
adc
das
pop
mov
sbbb
add
jle
lea
repnz
jnp
cmpsb
cwtl
dec
iret
inc
adc
imul
lock
shll
imul
int
sub
push
xor
push
mov
arpl
popa
insb
mulb
pushf
sub
mov
dec
or
std
test
xchg
dec
inc
fldcw
or
je
mov
stos
push
in
xor
push
mov
mov
in
or
jecxz
fldenv
add
mov
mov
xchg
int
push
loop
add
push
mov
cmc
cmp
inc
adc
mov
xor
andl
ret
sbb
sub
cmp
shl
sahf
mov
dec
loop
jno
cmp
xor
out
lock
jns
flds
inc
push
and
jmp
inc
push
je
xor
jl
cmpsl
out
out
jp
inc
imul
fld
out
jmp
pusha
add
inc
sti
cmp
or
sti
adc
lcall
push
out
nop
repz
adc
sbb
insl
pop
mov
bnd
sub
aam
jle
adc
ret
shl
xchg
push
aas
push
cs
or
in
add
and
sub
mov
xchg
inc
pop
dec
pop
lret
out
lret
arpl
add
or
or
lock
inc
xchg
addl
insb
pop
push
mov
push
int
aas
sub
and
add
daa
pop
lods
test
fidivrs
cmpsb
sbb
test
jge
pop
xor
sahf
add
pushl
movsb
or
sub
ret
hlt
jmp
cmp
mov
push
loope
lret
addr16
fwait
popa
pushf
hlt
addr16
sbb
cmp
push
xor
push
mov
bound
sbb
dec
aam
jle
ror
mov
mov
cld
shlb
inc
jecxz
xor
popa
sbb
mov
call
dec
pop
add
sub
or
mov
cmpsb
jle
add
mov
sbb
imul
cwtl
fs
jle
test
jp
ss
adc
mov
pushf
das
rcr
dec
es
loopne
mov
push
sub
test
lods
add
push
es
sbb
out
or
sub
sti
inc
aam
jbe
fiadds
addr16
mov
movsl
js
mov
jle
jnp
fnsave
add
fiadds
lods
das
es
shrb
lods
and
fsubrl
inc
data16
gs
out
jmp
and
fwait
pop
dec
xor
xor
fwait
sub
fwait
ret
ficompl
cld
std
dec
adc
xchg
cmp
push
aam
fisubrl
pop
sbb
push
bound
popa
fwait
inc
data16
push
cs
pop
sbb
test
test
mov
fwait
mov
ljmp
insl
jmp
add
jle
insb
arpl
mov
adc
add
adcb
out
mov
xor
insl
fdivl
hlt
mov
or
adc
cltd
scas
pop
and
push
ss
mov
dec
test
and
xor
inc
inc
inc
je
mov
xchg
adc
out
and
mov
fdivl
lret
aas
sub
xchg
cs
inc
pusha
rclb
mov
jmp
sahf
roll
push
mov
pop
repnz
jno
pushf
push
movsl
mov
das
lods
mov
mov
cmpsb
stos
leave
int
sub
mov
add
inc
push
stos
inc
add
mov
push
jb
jmp
aam
incl
jb
sub
arpl
mov
xchg
fimuls
push
add
xchg
inc
sub
pushf
scas
or
enter
xor
xor
adc
jne
pop
jmp
mov
addr16
add
stos
cmc
rolb
aad
jge
mov
inc
pop
aas
repz
or
or
push
loop
dec
clc
arpl
mov
dec
gs
and
into
cltd
sub
shll
mov
and
pop
out
pop
inc
imul
out
jg
stc
out
daa
in
aas
or
arpl
sub
daa
das
cmpsl
mov
lock
pop
movsl
daa
mov
cmpb
lea
sbb
leave
fs
iret
in
popa
into
popa
cmp
lea
aas
pop
add
cmp
mov
scas
and
mov
ja
jecxz
mov
pop
gs
jecxz
ficoms
pop
dec
jmp
inc
push
std
mov
pop
seto
lcall
cmp
dec
pop
pop
popa
clc
push
movsl
decl
dec
sahf
scas
jmp
out
popa
xor
repz
and
fnstsw
xor
bnd
test
fstpt
mov
cli
jo
inc
xchg
in
lods
jmp
sbb
jecxz
adc
cltd
jle
cmpsl
xchg
mov
mov
lods
dec
cltd
pop
push
ds
icebp
xchg
fimull
push
cltd
pop
mov
mov
aaa
push
arpl
into
test
cmp
mov
pop
out
xchg
test
add
jmp
addl
sub
mov
fistps
xor
jecxz
leave
adc
push
fdivl
popa
leave
sbb
data16
mov
inc
cmp
jp
sbb
add
pop
ret
arpl
aas
xchg
jno,pn
outsb
ds
pop
xor
or
rorl
push
fildl
xor
imul
cmpl
push
dec
pop
xlat
outsl
xchg
outsb
push
and
xchg
inc
je
mov
pop
inc
fs
test
pop
sub
aam
or
and
ja
push
dec
mov
cltd
push
pusha
push
in
push
test
cs
stos
xchg
xlat
jne
pop
into
pusha
idivl
in
add
testb
xchg
xchg
notl
mov
scas
dec
test
jl
loope
popa
xchg
rclb
xchg
sbb
xor
data16
clc
popf
add
add
xchg
fwait
scas
cld
shl
xchg
jo
inc
sub
xchg
mov
test
outsb
in
mov
adc
outsb
sub
dec
lds
inc
insl
dec
neg
loop
inc
adc
mov
test
xchg
nop
sbb
cwtl
or
leave
repz
fdivp
int
add
arpl
ror
xchg
enter
insb
cmp
cs
push
fisttpl
loop
loope,pt
ds
jo
jp
popf
cltd
stos
jo
mov
out
sbb
cs
popf
sbb
inc
pusha
jecxz
dec
lahf
sbb
ss
icebp
sbb
shrb
pop
cltd
mov
mov
inc
call
and
test
jle
pop
or
inc
add
inc
fs
pop
jmp
lret
das
pop
or
cmp
lock
decb
adc
repz
sub
aas
shr
popa
shlb
fdivs
stos
xchg
and
and
push
push
scas
xor
inc
cmpl
shll
movsl
movsl
and
jle
lods
inc
shrl
jnp
data16
cltd
mov
movsb
xchg
xor
inc
in
mov
xchg
daa
aad
test
inc
fdivp
arpl
sub
icebp
mov
adc
jnp
cmp
mov
std
push
jmp
xchg
fcoms
fldcw
mov
push
orl
andb
mov
mov
scas
gs
jge
cmp
mov
inc
dec
adc
xor
in
dec
cmp
push
or
pop
sti
andb
sbb
mov
pop
shrb
jne
mov
lds
cmc
mov
jne
inc
dec
push
push
push
xor
xor
sti
inc
pusha
or
dec
mov
mov
icebp
and
cmpb
imul
jle
int3
out
mov
fistl
mov
lcall
push
std
icebp
stos
inc
and
inc
leave
loope
enter
jns
jbe
inc
pop
nop
xchg
add
jmp
shlb
aad
jg
dec
es
repz
push
jl
lcall
cld
fnstcw
fistpl
js
and
test
xchg
pushl
jge
les
test
daa
outsl
push
mov
loop
xchg
fadds
lret
gs
push
subb
scas
xchg
js
iret
inc
outsl
or
xlat
mov
lods
pop
or
andl
adc
jo
rcrb
pop
jns
jg
jl
jp
adc
and
pop
imul
cwtl
pop
xor
shlb
enter
add
xor
popf
xor
stos
inc
sbb
enter
fstpt
inc
pushf
leave
xor
push
or
ljmp
sahf
std
ss
mov
adc
sbb
pop
and
adc
jb
clc
adcl
in
rorb
leave
mov
mov
cs
scas
addl
push
sub
pop
cld
shlb
mov
fcompl
adc
loop
and
ds
inc
mov
or
mov
jge
inc
fsubrs
inc
repz
sahf
mov
mov
lods
inc
cmp
test
inc
inc
cmpsb
or
std
addr16
cmp
jl
jb
ret
pop
inc
xchg
stos
inc
or
cmp
or
cld
in
cmpsb
cmp
call
adc
mov
inc
scas
pop
adc
adc
test
push
and
aad
push
fsubp
ja
jmp
add
scas
js
adc
pop
outsb
mov
dec
pop
pushf
add
xor
fstps
iret
mov
mov
dec
movsl
fnop
pop
pop
push
push
lods
xchg
sub
imul
orb
iret
lods
pop
repnz
rolb
sub
mov
and
lea
nop
pop
enter
imul
enter
lret
push
cld
or
jae
mov
hlt
xchg
out
pusha
cmp
int3
xchg
xlat
out
sub
jge
dec
mov
xchg
es
jp
ljmp
sub
aas
mov
dec
dec
pop
jb
repnz
fcoms
mov
or
fisubrs
lret
std
popa
aad
push
xchg
inc
fiaddl
and
xchg
mov
pop
push
stos
loop
stc
pop
stc
scas
mov
js
lret
add
fidivrl
adc
das
cwtl
ret
add
or
icebp
dec
outsb
test
fwait
sub
adc
adc
enter
inc
or
push
test
fwait
jmp
icebp
test
sub
sub
daa
mov
inc
push
inc
test
cmp
mov
xor
lcall
push
inc
mov
push
aaa
fsubr
data16
sub
stc
nop
push
nop
clc
cmpsl
nop
cmpsb
pop
scas
xlat
xchg
jno
adc
mov
test
push
aam
in
adc
addr16
push
loopne
push
jle
or
xor
pop
adc
or
leave
adc
pop
loopne
or
mov
in
inc
push
sub
lret
mov
insb
fstp
mov
fisubrl
test
pop
mov
ret
mov
push
add
jno
sbb
and
mov
ljmp
pop
divb
arpl
inc
enter
cmp
push
pop
lds
int3
jo
cwtl
test
shll
sbb
popf
dec
jb
std
mov
push
mov
lds
inc
mov
cs
and
and
mov
push
mov
pop
mov
fsubl
jp
popf
dec
adc
pop
add
pop
jmp
mov
or
leave
les
loopne
sbb
int
dec
fs
clc
iret
pop
fwait
daa
cli
inc
inc
inc
pop
ss
mov
mov
push
or
pop
sbb
mov
bound
adc
outsb
int3
dec
dec
out
notl
nop
jl
sbb
dec
sbb
pop
dec
jge
xor
fistps
pop
xor
pop
lcall
or
jmp
pop
mov
rolb
mov
adc
inc
hlt
mov
lret
cmp
lds
cmp
in
jecxz
pop
push
aad
pushf
dec
stc
sahf
xor
cmc
dec
or
mov
push
inc
outsb
movsb
push
aam
cmp
sti
mov
dec
fdivl
ds
std
iret
sub
std
ljmp
scas
rcr
and
pop
imul
mov
pop
and
sub
pusha
mov
andl
cwtl
out
jmp
cmp
push
loop
clc
sub
ficompl
xchg
xor
fsubr
fimull
xchg
mov
inc
movl
dec
fs
popf
fucomp
into
mov
and
mov
int3
and
push
out
mov
cmp
insl
cli
inc
aad
pop
adcl
mov
cmpsl
ds
popa
push
and
and
movsb
pop
dec
pop
jp
dec
dec
adc
fimull
inc
ret
mov
lahf
test
cmp
sub
es
les
insb
mov
outsb
cmp
add
ret
xor
ret
hlt
adc
int3
mov
sarb
jo
and
out
pushf
xchg
into
jnp
out
inc
das
and
loopne
out
xchg
sbb
xchg
and
pminub
xchg
sub
scas
jle,pn
adc
pop
scas
sbbb
pop
shlb
inc
xor
fldl
loopne
popa
loope
leave
pusha
push
jbe
pop
jecxz
lret
cmpsl
test
cmp
cmpsl
out
push
xchg
ror
js
pusha
out
test
mov
ss
mov
dec
les
popf
dec
mov
xor
add
dec
cmp
popf
jbe
xchg
mov
jae
mov
insl
jne
lahf
xor
test
xchg
scas
in
xchg
sbb
ret
les
das
icebp
adc
lods
outsl
cli
add
cltd
xor
xor
cmp
sahf
mov
scas
out
jge
scas
pop
add
test
mov
call
push
sbb
mov
imul
pop
jno
cmp
out
and
pop
in
je
stc
xor
mov
sub
xchg
daa
or
mov
cmp
sub
push
shlb
and
cli
arpl
into
es
mov
dec
cmp
dec
aaa
divb
push
push
out
add
outsb
fisubl
sbb
add
in
jb
pop
cli
or
les
jp
mov
stos
xchg
shlb
fdiv
cs
ds
shll
push
or
mov
addr16
js
jmp
or
or
ja
and
push
xchg
dec
inc
shll
adc
pop
test
test
mov
dec
lea
sti
test
sbb
xchg
mov
dec
mov
mov
aas
cs
dec
loopne
xor
lret
gs
xor
jg
push
and
sbb
sti
xchg
je
fwait
es
sbb
aas
dec
addr16
aad
outsb
enter
push
loopne
sbb
jle
add
inc
sub
out
xchg
xchg
fisttps
inc
xchg
popf
cmpsl
and
and
jno
mov
xchg
push
mov
push
mov
adc
es
add
in
das
push
mov
into
je
cltd
cmpsl
cwtl
and
std
insb
rorb
aas
sub
fdivl
fsubp
test
fdivrs
sub
dec
arpl
arpl
inc
aad
inc
inc
inc
jg
jo
and
cld
lahf
addb
adc
ss
push
hlt
push
incl
mov
or
popa
mov
mov
or
sub
jnp
call
ret
incl
sbb
cmp
pop
cmp
shl
dec
push
popf
cmpsl
pop
bnd
bsr
mov
adc
lret
ss
xor
and
dec
mov
lock
add
aad
dec
pop
lds
mov
inc
mov
imul
sub
shll
push
inc
mov
pop
cmp
jns
shrl
mov
dec
ds
testb
push
push
pop
mov
mov
mov
mov
ljmp
pop
mov
int3
mov
leave
inc
fstpt
pushf
in
xchg
cwtl
sbb
inc
mov
ja
or
cld
imul
or
aam
popf
push
cmc
cmp
mov
mov
or
gs
push
adc
aad
mov
stc
shll
xor
dec
imul
mov
xchg
aad
fimull
pop
adc
dec
jns
jo
pushf
sbbb
fiaddl
pop
adc
cmp
fcomps
popf
add
mov
mov
jg
xchg
shld
cli
inc
mov
dec
cmpsb
mov
fistps
inc
jno
sbbl
ja
in
sub
push
or
icebp
mov
dec
mov
or
xchg
cmp
insl
push
clc
popf
mov
cmp
xor
imul
divl
mov
in
dec
adc
xchg
push
dec
mov
dec
mov
or
arpl
push
xchg
add
add
pop
outsb
mov
dec
out
testb
jle
mov
int3
lcall
sbb
movsl
or
mov
fdivrs
xchg
push
insl
jae
int
jno
stos
shll
jmp
push
push
in
repz
and
jno
or
cmp
push
das
mov
or
push
push
pusha
inc
pop
xchg
xor
inc
dec
or
add
jmp
mov
fldcw
scas
adcl
notb
in
add
mov
movsb
lock
test
jno
imul
scas
sub
ds
add
dec
bnd
dec
imul
test
pushf
into
dec
push
in
jo
dec
mov
adc
and
ja
add
sbb
stos
es
ja
push
jmp
cld
cwtl
das
jl,pn
aam
adc
roll
sti
cwtl
mov
sbbl
mov
popf
outsb
repnz
dec
push
test
addr16
pop
jae
arpl
and
pop
mov
and
pop
push
clc
cmpsl
and
test
mov
inc
or
pushf
fcoml
cmp
std
and
pop
cmpl
clc
mov
icebp
cmp
pop
add
pop
cmp
mov
repnz
out
push
roll
sbb
sbb
jnp
jge
or
push
bound
addr16
lods
pop
push
pop
ja
in
jnp
ds
push
cli
dec
gs
gs
push
add
dec
or
xor
mov
mov
jl
pop
mov
stos
mov
lret
sbb
push
mov
mov
mov
rorb
dec
scas
pop
imul
or
adcl
sub
int
sbb
dec
jle
ret
pop
dec
decl
es
ret
lods
pop
in
insl
loopne
cmp
movsb
and
push
ljmp
ljmp
xor
mov
inc
orl
js
scas
lret
mov
pop
fwait
test
mov
movsl
lock
dec
jp
sub
mov
popf
pop
into
mov
out
jns
pop
cmpsl
xchg
dec
push
cmp
xchg
jnp
aas
and
pop
mov
pop
mov
mov
mov
int
outsl
xchg
scas
and
jns
daa
mov
das
dec
inc
xchg
cmc
dec
es
add
lea
jnp
fwait
mov
add
scas
sbb
jne
scas
in
push
popf
sbb
or
aaa
lods
stos
mov
lock
jns
loope
out
xchg
inc
and
and
out
dec
cs
cmpsl
sbb
leave
sahf
sti
push
fcoms
cld
lret
repnz
and
clc
andb
adc
cmp
addr16
lock
fwait
aaa
into
int3
jns
jbe
push
push
lcall
jns
int3
sbb
popa
test
dec
and
leave
call
out
nop
out
test
mov
popf
xor
fwait
push
adcb
fisubs
cmp
mov
jne
gs
call
pop
mov
xchg
mov
push
aam
outsl
or
jl
cmp
outsl
xor
shl
jge
gs
jp
fsubrs
jne
mov
in
push
push
fildll
enter
jae
xchg
mov
leave
adc
nop
sarl
cmp
leave
pop
leave
jmp
mov
xchg
mov
and
dec
cmp
sbb
sbb
pushf
lods
dec
dec
sar
sub
sub
repnz
aaa
sub
push
xchg
iret
add
bound
add
cmp
mov
jno
insl
scas
or
jne,pn
pusha
xor
pop
inc
dec
or
jle
and
iret
sub
add
fbstp
cwtl
aas
lret
sti
xchg
push
lock
inc
movsl
mov
rol
stos
mov
ret
adc
adc
subb
arpl
lea
clc
inc
xchg
cltd
andb
call
js
hlt
addr16
adc
popa
fisubrs
call
aam
inc
std
xor
stos
and
mov
stos
xchg
mov
lods
enter
ret
in
add
in
xor
jnp
pxor
pushf
ja
or
cs
add
adcb
shll
mov
xor
fisttpl
xchg
or
mov
xchg
sub
enter
add
push
fstps
dec
mov
insl
cmp
test
or
cmp
jl
xor
xor
jo
push
sub
outsb
test
cmp
stos
outsl
dec
sub
dec
mov
jecxz
cmpsl
sbb
fbstp
shr
dec
icebp
fs
sub
mov
test
and
push
insb
aaa
cmp
insl
out
pop
adc
adc
lret
hlt
out
xor
test
out
xchg
js
test
pop
sbb
movsb
xchg
and
mov
lahf
out
jbe
mov
bound
or
rorl
ret
pusha
and
sub
out
pop
sahf
sub
sub
pop
xor
add
mov
cwtl
fisubrl
das
incb
or
sarl
mov
stos
in
pop
lahf
mov
cmp
ds
jo
xchg
sbb
xor
push
insb
push
fldl
mov
lret
pop
arpl
sbb
enter
mov
adc
sbb
fcomip
int
mov
dec
push
adc
mov
xchg
in
push
adc
add
outsb
je
jae
mov
in
stos
repz
dec
mov
popf
mov
shl
cmpb
out
test
lret
cld
cmp
pop
outsl
push
adcb
jno
pop
sahf
cld
xchg
loope
test
ret
aaa
dec
iret
repz
mov
xor
lret
sub
sub
jno
mov
cmp
js
popf
mov
jmp
out
add
jmp
cmc
xchg
cs
jae
xchg
or
test
pop
sub
fwait
push
push
and
push
or
pop
adc
sbb
pop
mov
les
jb
dec
mov
cmp
push
outsl
movsb
cmp
adc
inc
push
loope
cwtl
ss
push
out
in
repnz
and
cmpsb
jmp
les
call
dec
popf
xchg
mov
ret
mov
lcall
in
dec
arpl
adc
mov
push
movsl
xor
pop
push
fistpl
cmp
shlb
divl
mov
dec
lock
mov
and
dec
fucomip
ljmp
gs
fs
adc
cmc
mov
clc
and
adc
jb
mov
push
adc
iret
mov
mov
aaa
jle
pop
in
sti
outsl
das
inc
enter
call
ja
and
daa
cltd
push
ljmp
call
xor
add
hlt
push
icebp
imul
subb
jle
orl
or
lds
mov
xchg
cmc
int3
cmpsb
and
inc
push
inc
mov
xor
xchg
bnd
sbb
jno
gs
push
pop
cltd
sbb
aam
stos
out
sti
sahf
adc
scas
xchg
fmuls
pushf
mov
fldl
mov
shrl
mov
shrl
mov
fidivl
pop
jne
dec
mov
add
pop
pushf
and
cmp
add
push
loope
es
adc
sbb
mov
icebp
or
xchg
mov
in
lods
mov
mov
xchg
add
ret
inc
mov
ja
jnp
scas
push
loope
fadds
mov
out
pop
repz
stos
pusha
stos
sub
lret
mov
js
and
dec
add
pushf
inc
out
jbe
cmp
cwtl
cmpsb
incl
shl
sahf
lea
lds
in
mov
ret
adc
xor
mov
inc
paddb
and
mov
jl
dec
fdivrs
and
into
mov
inc
mov
push
xchg
cmpsl
xchg
adc
xchg
pop
inc
scas
xor
xor
daa
adc
inc
dec
mov
and
adc
adc
aam
mov
lret
mov
fdivrl
sub
aad
xchg
add
xor
and
into
std
xchg
add
out
shll
js
movsl
test
inc
sub
jae
pop
outsb
stos
xchg
iret
push
dec
add
out
in
lea
or
push
mov
lds
mov
pop
xlat
mov
sbb
mov
in
loope
ret
push
dec
cmp
aad
xchg
xor
jmp
aam
scas
add
mov
clc
stc
jo
mov
rclb
aas
adc
push
pop
xchg
xchg
push
insb
iret
adc
lods
fldcw
jb
pop
cli
in
push
aam
xchg
push
sub
popl
jnp
xchg
enter
mov
pushf
mov
jae
add
fdivs
mov
ficompl
inc
dec
push
fidivl
aam
add
loop
and
adc
movsl
pop
fmuls
test
inc
mov
stos
das
ucomiss
clc
mov
outsb
loope
and
push
mov
or
lds
jae
lret
xlat
pop
xchg
add
cmc
inc
ret
call
aad
int
inc
mov
je
jmp
int
dec
xor
adc
pusha
mov
movsw
add
and
dec
mov
mov
lods
out
xchg
test
std
xchg
ret
mov
xor
cltd
push
sub
mov
shl
inc
xor
daa
jp
xor
mov
xor
xor
psadbw
jo
stos
pop
mov
xor
pop
sbb
push
lahf
adc
cwtl
out
xor
scas
adc
push
insl
cmpb
adc
inc
cltd
or
shlb
icebp
test
inc
ss
cmpsb
cmp
xchg
in
pop
sbb
add
mov
jns
mov
jns
cmpsb
and
rcrl
ficompl
shl
daa
in
add
inc
xchg
jp
ret
lcall
xorl
sbb
roll
insb
fildll
rcrb
in
cltd
push
xor
fidivrs
push
fcoms
dec
adc
inc
lret
pop
mov
arpl
cli
pop
mov
in
das
jbe
stos
repnz
pop
std
xor
scas
pushf
lea
cld
or
cmpsb
stc
and
int3
insl
loopne
and
lds
sti
push
jmp
pop
push
jo
pop
mov
jle
repnz
xchg
inc
repnz
add
clc
adc
lds
lods
test
jp
lahf
pusha
dec
dec
push
rorl
jle
lds
test
fsubr
mov
mov
dec
sub
jno
pop
push
dec
addr16
jns
jmp
cmp
cld
or
pop
repz
dec
lret
lret
loope
enter
sbb
ss
pop
pop
push
cmpsb
mov
mov
loopne
nop
arpl
dec
pop
repz
mov
mov
fs
sub
inc
pop
cmpsb
jge
jecxz
inc
adc
mov
lock
insb
push
xor
aad
pop
enter
mov
int3
or
mov
push
fcomps
push
push
or
pusha
sbb
pop
fdiv
movsl
sub
sub
cmp
dec
mov
cmp
and
mov
ret
push
test
jb
pop
mov
scas
jge
lret
and
sti
sbb
dec
mov
lret
jo
sarb
jge
mov
fwait
movl
jno
bsf
cmp
scas
xor
xchg
fwait
xchg
pop
and
sti
paddsw
dec
jbe
cmpxchg
fs
lock
js
sub
xchg
cmp
cs
sbb
clc
ret
shrl
loope
jbe
add
aas
loope
fdivrl
push
and
aas
jb
outsb
jge
ja
xchg
sub
sub
inc
or
incb
lret
jb
lea
shlb
sbbl
dec
enter
mov
cmp
fs
mov
or
xchg
xchg
cmp
bound
lret
loopne
bound
xchg
lods
xchg
sub
sbb
mov
xlat
mov
divl
adc
nop
xlat
jo
xor
jnp
cmp
cwtl
lods
ds
das
adc
add
es
subl
ret
sbb
push
dec
mov
int3
gs
repnz
arpl
popf
jg
add
test
popa
xchg
call
std
pop
lods
call
push
std
mov
fmuls
fs
mov
hlt
mov
int
lret
xor
loopne
push
stos
loop
pushf
mov
clc
hlt
push
js
dec
fdivs
pop
mov
aaa
fsts
mov
stc
test
out
mov
xchg
mov
push
sbb
test
sub
sbb
cmpsb
lock
imul
mov
push
hlt
mov
mov
js
pushf
pop
ljmp
lret
lcall
pop
mov
inc
adc
add
fistl
call
xchg
pop
push
push
dec
inc
es
cmc
data16
not
xchg
int
in
add
sbb
subb
sub
push
push
scas
iret
mov
out
xor
dec
or
sub
test
in
nop
movsb
sub
xchg
pushf
fmuls
mov
jae
sub
mov
fcomps
scas
mov
sbb
xchg
xchg
push
or
cmp
dec
int3
fadds
dec
or
pop
xchg
loop
mov
lret
xor
idivb
jns
push
addr16
cmp
imul
inc
mov
dec
pop
in
jecxz
repnz
mov
imul
les
jno
pop
xchg
inc
jmp
push
mov
cmp
xchg
and
sub
xor
xchg
jns
inc
jne
xchg
pop
push
stos
scas
dec
shll
adc
push
ss
inc
jl
add
sbb
push
scas
call
sbb
cmc
ret
inc
jne
mov
pop
addr16
dec
dec
aaa
inc
fnstenv
int3
in
addr16
dec
push
cli
stos
mov
cmp
pop
pop
out
lret
xchg
adc
jns
popf
bound
adc
dec
pop
addr16
pusha
fisttpl
sub
adc
jp
orl
ret
fsts
mov
movsl
inc
scas
insb
ljmp
push
or
inc
fldl
sarb
test
cmc
testb
into
adc
dec
fwait
push
and
jg
add
dec
test
sbb
lahf
popf
ja
cld
aas
adcb
sbb
sahf
mov
fisubl
or
dec
xchg
insl
cs
add
les
filds
mov
cmp
iret
addb
dec
adc
inc
lods
js
in
dec
iret
and
dec
insb
mov
and
in
inc
icebp
sub
jle
out
sbb
sbb
inc
mov
mov
mov
mov
rorb
sbb
cs
pop
cmp
pusha
outsb
adc
out
mov
jl
stos
inc
mov
aad
sbb
add
and
movsb
popf
outsl
lcall
jne
xor
push
loop
jmp
test
push
shlb
push
push
call
pushf
add
fldcw
repnz
push
fcmovu
cmp
and
sub
scas
inc
pop
lock
inc
stos
ret
loop
push
fs
gs
enter
jbe
inc
jp
push
stos
pop
dec
scas
xor
jl
or
shll
and
sub
scas
jbe
cltd
ja
adc
pushf
jg
mov
cwtl
pusha
pop
imul
clc
mov
je
shlb
adc
sbb
clc
jno
sub
call
or
cli
test
clc
push
lret
loopne
cmpb
dec
xchg
mov
add
push
xchg
fisubl
inc
xor
dec
lahf
movsb
cli
shrb
dec
fdiv
or
inc
popa
add
sbb
cmp
xor
test
and
push
inc
sub
lcall
sahf
mov
imul
pusha
jae
loop
mov
in
xchg
aaa
xchg
sub
and
sub
xchg
ret
notl
sbb
xor
mov
in
xchg
addr16
dec
in
hlt
out
jg
in
clc
loop
push
out
add
testl
rcrl
cmpsb
sbb
adc
jle
sti
jge
lret
das
icebp
sbb
outsl
dec
push
gs
lods
jb
fbstp
ljmp
push
imulb
jae
cmp
sarb
jg
jbe
ja
pop
xchg
xor
adcb
fsubr
add
ret
in
out
test
cwtl
jno
scas
xor
inc
or
enter
test
adc
nop
adc
dec
clc
les
gs
adc
sti
imul
jo
jne
push
xlat
insb
fdivr
roll
inc
pop
xchg
or
xchg
daa
push
push
mov
addr16
out
push
add
les
and
mov
xchg
cltd
out
sbb
sub
movsb
pop
xorl
mov
add
mov
int3
xchg
shll
in
xor
inc
mov
add
jp
testb
std
sahf
cmp
std
and
adc
dec
push
ret
mov
pop
cli
out
lret
lret
insl
mov
jge
lret
inc
mov
pop
xchg
mov
rcrb
sub
pushl
xchg
xchg
jp
push
test
mov
int3
arpl
ret
stos
outsl
out
dec
into
orl
sbb
mov
out
jbe
mov
mov
mov
or
stc
mov
jbe
iret
add
stc
push
jle
jno
imulb
xor
push
cmp
xchg
jmp
lods
sbb
push
jb
mov
xchg
fadd
jno
jg
push
inc
xor
testb
pusha
insb
jg
rorl
pusha
dec
inc
pop
repz
fcomps
frstor
dec
in
adc
mov
imul
adc
xor
xor
add
sub
ret
pop
adc
pop
sub
dec
lea
inc
iret
sbb
push
and
popl
pop
stos
mov
insb
xor
push
pop
fldcw
xor
sbb
or
inc
shlb
push
loope
jo
shrb
arpl
loope
xchg
and
ret
daa
sub
pop
xchg
mov
inc
xor
and
cmp
fcomps
lahf
xor
call
dec
addr16
movsb
aam
push
push
push
ljmp
inc
shr
jmp
push
cmp
or
jecxz
dec
movsl
gs
mov
cmp
inc
movb
add
pop
sub
repnz
mov
cltd
and
aas
gs
mov
pop
dec
pop
mov
cmpsl
popa
adc
ret
sti
xor
cmp
jg
sbb
lcall
jle
xor
orb
mov
or
xor
and
addl
lahf
cs
inc
popf
xor
lods
cmc
mov
or
and
push
testb
mov
jg
xor
adc
lock
movsl
int
inc
sub
dec
and
out
jo
xorb
add
jbe
pop
push
dec
in
test
or
xchg
sahf
inc
sub
sbb
inc
cltd
cmpsl
push
insb
jne
mov
js
scas
aad
cs
jae
pop
movsl
mov
add
jb
es
cmp
aas
xchg
ljmp
rorl
jl
in
xor
sbb
push
mov
push
rcrl
movsb
in
mov
stos
push
xchg
xor
mov
pusha
into
and
cmpsb
jp
push
xor
fs
jbe
or
call
fs
or
fists
mov
mov
jae
add
dec
add
icebp
jp
cmp
lret
mov
shl
aam
add
mov
adc
rorb
push
xchg
mov
xor
sahf
cwtl
loop
inc
mov
stos
adc
sti
das
call
jle
jg
and
xor
sbb
lahf
push
imul
xor
push
popf
mov
adc
jmp
sarb
mov
add
sub
shl
dec
mov
xlat
rorl
pop
mov
out
ret
insb
pop
xor
in
pop
mov
mov
fidivrs
fbld
jnp
mov
dec
andl
psubd
or
loop
push
sbb
loope
leave
addr16
je
scas
fnop
pop
push
adc
in
test
mov
xchg
test
push
sbb
fs
push
insl
lea
mov
xchg
out
or
fidivrs
lahf
test
icebp
inc
cltd
stos
ja
addl
dec
dec
push
notb
repz
rorb
inc
call
jno
loop
push
and
jns
dec
jne
push
aad
xor
mov
mov
inc
jl
sub
divl
mov
in
sub
pop
insb
xchg
and
cmp
xchg
shrb
push
pop
jle
push
mov
mov
mov
cmp
push
adcb
add
cmc
shlb
inc
out
mov
pop
call
mov
dec
lea
cmp
ljmp
pushf
or
jae
adc
dec
out
xchg
sub
in
insb
jp
dec
icebp
fdivrl
outsl
push
out
dec
sub
jnp
les
aas
push
jnp
mov
mov
cmpsb
loope
iret
ret
xchg
mov
scas
push
mov
add
mov
pop
fstpl
mov
and
dec
dec
or
mov
jg
and
addr16
push
add
cmp
out
outsl
shrl
add
stos
scas
inc
jne
cld
sbb
pop
push
cmp
shrl
jb
sub
inc
ret
jae
pop
ffreep
loop
imul
jle
mov
xchg
sbb
fwait
mov
les
xchg
inc
test
mov
inc
into
enter
int3
sbb
dec
mov
adc
mov
rorb
add
insb
xchg
xor
test
jnp
push
sahf
xor
add
dec
mov
aad
jne
in
sub
movsb
xchg
mov
push
cmp
adc
inc
dec
scas
sub
test
out
adc
ficompl
jns
mov
ljmp
int3
arpl
sbb
cld
imul
push
sbb
or
addb
divb
fsubl
out
daa
push
sbb
mov
xor
xchg
test
mov
xor
pop
mov
dec
ja
mov
and
push
xchg
sarb
js
mov
js
inc
fldcw
shrb
in
fwait
mov
dec
mov
andl
jecxz
shrl
pushf
xchg
adc
cld
jg
gs
lds
stos
jb
push
dec
int3
jae
insl
fidivs
cld
cwtl
mov
inc
cld
sub
pop
ds
lods
stos
cwtl
and
sbb
lahf
xchg
jo
dec
pop
cs
xor
dec
loope
into
daa
leave
push
push
in
add
add
and
mov
stc
nop
popa
rcrb
rolb
push
and
out
icebp
leave
pop
mov
push
jmp
pop
jns
icebp
ret
sub
jge
adc
movsb
sbb
push
shrb
imul
xchg
pop
ja
rcrb
cwtl
mov
sbb
push
dec
movsb
pop
inc
stc
sub
out
ljmp
cld
push
cmp
jge
add
push
cmp
jae
pop
xor
data16
es
lcall
jmp
adc
inc
push
xchg
dec
cmpsb
sub
pop
jb
add
push
fisttpll
outsb
repnz
je
xchg
in
add
jecxz
int3
mov
pop
leave
int
lret
push
or
lahf
mov
or
lcall
into
cmc
in
mov
push
mov
jmp
and
fst
cmp
xlat
adc
dec
lret
outsb
fwait
or
gs
divb
inc
lods
or
addl
cltd
fwait
movsb
nop
cltd
sub
mov
pop
dec
fisttps
push
rcr
sub
sti
or
cmp
pop
movsb
fsts
or
leave
es
and
movsl
xor
filds
fistl
cmc
xchg
xchg
cmpsb
insl
add
jp
in
or
pop
mov
adc
and
add
fdivl
mov
push
mov
cwtl
push
cltd
movups
xchg
sti
jbe
mov
cmp
mov
test
mov
pop
lcall
fidivs
jo
mov
sbb
punpckhbw
pusha
dec
incl
inc
mov
sub
int
fnstcw
add
fildl
into
xchg
ja
mov
out
mov
adc
pusha
add
inc
lret
loopne
dec
push
hlt
mov
push
sbb
inc
mov
push
test
int
std
std
mov
or
mov
cmpsb
sub
nop
dec
iret
repz
pushf
popa
ror
xorl
movsb
loopne
mov
xor
xchg
arpl
out
lds
in
xchg
data16
or
xor
fimull
lea
pushf
in
orb
push
or
test
cltd
int
pushf
outsl
xchg
je
loope
rclb
mov
ja
push
lcall
call
or
xor
cld
pop
dec
fmull
push
and
dec
push
inc
out
gs
cmpsl
out
sbbl
push
pop
mov
adc
imul
or
repnz
imulb
dec
lret
daa
jne
add
int
cmp
jmp
xlat
xchg
pop
fisubl
jns
jp
sub
xchg
out
cmpsl
je
in
andb
pop
xchg
sub
mov
and
push
add
xor
mov
or
push
adc
xlat
sbb
out
sbb
jnp
rcrb
pop
scas
mov
seta
jnp
shrl
popf
adc
jne
add
mov
pop
hlt
ja
mov
xchg
inc
cmp
jne
mov
andl
out
fcmovbe
dec
adc
jle
inc
leave
lret
sti
pop
xor
jmp
out
mov
div
mov
fnstcw
or
les
jg
mov
xor
pop
outsb
enter
stc
ljmp
jnp
lods
xchg
xchg
lea
cmc
add
aas
xchg
xchg
insl
shrl
mov
push
call
sub
into
mov
nop
std
xchg
aad
mov
mov
sub
pop
test
repnz
mov
stos
add
cltd
rcrb
adc
mov
in
mov
pop
sbb
inc
jnp
sub
cmp
sbb
xchg
push
addl
cmp
xchg
aam
setp
sub
jns
xor
push
dec
cltd
inc
or
xor
inc
aam
int3
and
int3
pop
in
aaa
fisubrl
inc
rcrl
push
push
fwait
call
loopne
addr16
popf
cwtl
xchg
jmp
leave
pop
stos
es
das
or
arpl
je
andb
sbb
insl
mov
xor
addr16
adc
aam
cli
add
inc
add
imulb
loope
decl
jns
mov
pop
adc
in
pushf
push
test
sbb
dec
fs
mov
imul
mov
push
fildll
push
ficoml
pop
cmp
jbe
sub
cltd
cmp
scas
and
ftst
jnp
adc
add
gs
inc
xchg
std
clc
das
adc
xchg
push
aam
out
sti
mov
out
ja
push
lcall
sub
mov
dec
mull
in
jbe
add
push
stos
and
cli
aam
xchg
mov
push
jg
pop
adc
clc
sbb
outsb
fcom
pushl
fsubs
jb
and
xor
inc
pop
mov
mov
dec
jl
movsl
xor
call
ret
push
out
jle
pop
jb
aas
push
mov
xor
inc
jmp
test
rep
in
inc
testb
add
mov
ja
loopne
dec
add
lea
jnp
mov
or
add
xor
jno
in
shl
dec
add
mov
dec
gs
lret
cmpsb
andl
sub
xor
inc
inc
lret
push
jp
push
or
sbb
dec
inc
jecxz
sti
jo
or
or
cmp
fildll
aas
cmp
push
sub
sbb
cmp
inc
or
xor
mov
inc
aad
cwtl
xor
sub
ret
in
pop
fdivrs
xor
ficoml
dec
cs
push
in
cli
test
adc
cwtl
jae
addb
jg
sarb
int3
fimuls
xchg
jbe
pop
in
jns
int3
fs
mov
pusha
jne
jne
push
scas
sub
ds
enter
lods
jl
mov
sbb
ret
jnp
jae
mov
shlb
xchg
daa
adc
mov
je
pop
cmpb
lret
add
je
ficoml
and
nop
mov
pop
movsl
cmp
mov
ret
cmc
lea
outsl
mov
js
and
jecxz
adc
loope
sub
adc
and
mov
into
in
dec
pop
test
arpl
pop
ss
sbb
cld
fsubl
insl
orl
clc
pop
inc
ret
push
loope
or
push
movsb
punpcklwd
xor
in
mov
notb
mov
xor
enter
xor
test
adc
xchg
inc
lahf
jb
lret
fucomp
inc
in
stc
or
imul
xor
add
mov
or
out
pop
pop
xlat
inc
orb
ret
ficompl
push
pop
adc
out
test
mov
mov
add
sahf
xor
sbb
sbb
xchg
mov
dec
out
insl
pushf
in
cmp
and
int
insb
ret
mov
out
sub
inc
lock
mov
dec
and
xor
fbstp
sbbb
mov
push
push
fsub
mov
data16
faddl
jb
scas
fwait
push
adc
xor
mov
int
sar
sub
jno
and
out
pop
or
nop
xorb
loop
mov
mov
xor
fs
aas
add
test
sbb
adc
jo
push
ja
mov
sbb
imul
test
test
repz
lret
lock
psrlq
ja
xchg
test
cpuid
mov
sbb
inc
out
mov
and
in
pop
jo
cmp
ljmp
mov
cmpsl
jecxz
js
in
adc
iret
dec
aad
jecxz
imul
sbb
pop
movd
addb
mov
in
test
inc
mov
jge
add
adc
jne
xchg
sbb
rcll
pop
lret
outsb
adc
adc
push
outsl
arpl
push
jg
mov
mov
std
xor
sbb
shl
lret
and
pop
sub
insl
scas
out
rclb
clc
inc
jns
mov
jb
mov
loop
in
add
inc
in
mov
dec
xchg
pop
adc
aad
clc
xchg
jge
cli
std
mov
sub
add
stos
popf
test
lcall
dec
mov
icebp
dec
mov
xchg
cmpsb
in
je
mov
sahf
pop
out
fnstenv
jns
inc
ret
and
movsl
push
jecxz
test
ljmp
scas
push
and
test
inc
arpl
bound
or
inc
cmp
outsb
xchg
push
adc
jge
jb
xchg
inc
jecxz
jnp
xchg
or
cwtl
fisubrs
jns
push
std
dec
add
dec
and
js
sti
in
jns
les
ss
jns
jnp
mov
push
and
andl
hlt
aad
loop
movq
rcrl
dec
loop
cmp
repnz
xchg
sbb
xchg
xchg
imull
divl
cs
add
xchg
repz
shrb
inc
and
jl
xchg
mov
dec
sub
jecxz
sbbl
pop
jg
dec
push
and
inc
jnp
dec
clc
or
sbb
mov
xchg
call
or
shrl
loop
jb
mov
cmp
and
jo
fcmovnb
hlt
imul
mov
fsts
dec
adc
das
out
fs
and
and
and
mov
stos
jl
dec
mov
and
sub
icebp
lahf
inc
fidivs
pop
test
push
sub
mov
mov
incl
inc
sahf
and
jg
in
jnp
jecxz
pushl
push
sti
rcll
mov
les
sub
push
sbb
jne
cmp
test
sbb
jp
or
out
fwait
aas
aam
jecxz
xorb
mov
loop
sbb
pop
xchg
sti
pop
in
shlb
xor
out
test
adc
mov
pusha
mov
les
xor
rcr
push
mov
aam
fists
inc
fiadds
test
cmc
fyl2xp1
out
imul
loop
movsb
sub
mov
sti
dec
sbb
inc
rclb
jp
mov
xchg
mov
aad
cmc
test
adc
notb
hlt
lods
mov
push
and
adc
pop
bound
dec
mov
jge
xor
mov
incb
jbe
xchg
jb
aas
cmpsl
or
scas
cmp
pop
out
addl
cmp
sub
clc
hlt
mov
addr16
and
jnp
sbb
add
xorl
dec
mov
sub
sub
leave
xchg
sub
and
mov
push
aaa
lahf
push
xchg
add
mov
mov
addr16
add
bound
or
pusha
shld
stos
sub
mov
loopne
push
pop
sub
cmc
jle
cmp
movsl
jb
add
sbb
daa
shlb
jbe
sbb
mov
add
push
mov
and
jmp
adc
clc
push
fadd
inc
lret
lods
faddl
and
pop
mov
into
adc
insb
sbb
int3
ljmp
sarb
push
loope
lds
sbb
in
scas
mov
mov
inc
mov
jbe
jecxz
or
pop
into
pop
fwait
jbe
jg
shll
lds
cli
sbb
lret
ljmp
mov
out
popa
outsb
inc
hlt
loop
cs
fnsave
inc
push
push
mov
ss
ss
xchg
out
nop
daa
frstor
sti
pcmpeqw
pop
cmp
lcall
xchg
rcr
int3
loope
push
pushf
mov
xlat
lods
rcrb
rclb
imul
fstpl
mov
stc
sub
pop
push
xchg
push
xchg
notl
adc
in
or
call
or
jle
sub
jne
cmp
jae
les
push
push
imul
xchg
sub
aad
arpl
lret
jne
test
lods
mull
dec
je
cmp
sbb
xchg
out
lcall
pop
outsl
mov
clc
lods
mov
lods
popa
notb
xabort
cmp
push
je
push
out
or
inc
xchg
sub
iret
mov
add
and
iret
movl
jg
sub
mov
test
cld
shrl
mov
mov
or
sarb
andb
pushf
inc
cs
adc
and
das
xchg
cmp
sub
popf
fwait
bound
xor
outsb
std
inc
stos
cmpsl
insl
loop
push
dec
xor
sbb
and
dec
sbb
or
shll
xchg
scas
cmp
icebp
fcomps
adc
lods
subb
into
mov
mov
loope
ljmp
lock
test
lret
or
fnsave
and
and
mov
ret
pusha
xor
pop
ret
sub
icebp
aas
mov
ss
scas
sbbl
inc
push
jne
repnz
adc
mov
cltd
out
popa
cli
dec
or
push
mov
sbb
enter
pop
vsqrtpd
adc
dec
rcr
mov
push
cmp
pop
out
pop
mov
addr16
int3
push
sub
lock
decl
test
pop
ret
jnp
lds
popa
insb
lret
loop
mov
or
mov
pop
addl
das
mov
out
sti
xor
or
xchg
mov
addr16
dec
and
fcmovnbe
es
jmp
inc
inc
int3
jecxz
or
inc
pusha
push
cltd
js
inc
xor
dec
in
jae
xchg
int
lcall
sub
mov
sub
xorb
jo
push
out
rorl
rorb
jg
jecxz
mov
scas
out
int
movsb
imul
out
sbb
push
inc
int3
or
sub
ret
jl
push
outsb
lods
ja
and
test
sbb
repz
rcrb
mov
out
add
adc
pusha
scas
dec
bound
andb
pop
scas
jmp
sbb
jb
push
std
int3
into
sar
push
xor
dec
sbb
xor
push
jmp
pushf
pop
repnz
xlat
push
adc
je
repnz
loope
orb
jo
sub
sahf
xchg
mov
lds
lods
daa
add
mov
sub
icebp
mov
pop
roll
and
shll
dec
dec
mov
test
jne
aas
imul
aam
or
decl
xor
xor
dec
stos
add
dec
push
in
and
std
xor
add
dec
pminsw
xchg
cmp
subl
je
lahf
jmp
mov
push
divl
and
mov
pop
fsubrs
scas
mov
inc
cli
imul
clc
inc
in
pop
xchg
lods
add
inc
mov
cmp
in
and
pop
jmp
sahf
and
dec
mov
mov
dec
incl
iret
ja
add
adc
adc
pusha
mov
add
shrl
sbb
popl
jne
popf
mov
ljmp
dec
push
jbe
pop
pop
lods
inc
push
popf
popf
cmpsl
das
lret
mov
sub
mov
aas
cmp
into
insl
pusha
leave
test
mov
push
adc
mov
cmc
jb
es
adc
mul
add
rorb
call
jmp
sahf
mov
or
sbb
jbe
mov
push
jp
aad
pop
xor
adcb
in
das
xchg
int
mov
out
xchg
out
push
sbb
ret
je
js
pop
xor
cltd
fstps
testb
mov
fisttpll
lea
cmp
xchg
test
syscall
loop
jb
xor
je
push
subb
dec
adc
imul
mov
filds
push
inc
cwtl
and
loopne
popf
xor
stos
int3
pop
push
dec
mov
daa
mov
insb
mov
sahf
stc
pop
mov
stc
leave
inc
xlat
fisttps
adc
and
cmpsl
mov
in
int
add
testb
hlt
pop
mov
cmp
jb
in
fstpt
out
dec
mov
je
fwait
outsb
or
mov
push
mov
iret
stos
inc
xlat
push
push
mov
sub
lret
pop
add
and
hlt
dec
mov
repnz
int3
xor
push
cmpsb
and
inc
jecxz
push
imul
pop
out
sbb
ret
notb
stc
nop
xlat
jg
mov
jnp
sub
pop
pusha
outsl
stc
call
out
push
xchg
push
and
ja
xlat
call
or
pop
outsl
loope
jge
imulb
adc
inc
add
pushf
push
mov
jp
es
xchg
dec
mov
fucom
js
icebp
dec
add
movsb
call
mov
movsl
cmp
lahf
inc
test
cmc
shrb
add
dec
ror
dec
lret
popa
jae
sbb
jp
sub
ret
addl
sarl
push
sbb
popa
mov
mov
js
xchg
cld
mov
insl
jbe
leave
iret
jecxz
or
push
out
inc
fldenv
adc
xchg
jge
test
jmp
fmull
xchg
jno
test
movsb
xchg
push
les
push
mov
or
xor
out
shll
insb
ret
lret
aaa
stos
dec
int
jmp
jo
adc
cmpb
mov
or
insl
mov
movsb
hlt
sbb
xchg
add
add
mov
rorb
outsb
ja
stos
and
sub
mov
addb
jbe
lds
push
xchg
js
add
jl
mov
lea
dec
std
xchg
mov
jmp
mov
stc
nop
cmp
inc
mov
int
loop
adc
imul
xor
fsubrs
in
dec
mov
sbb
loope
int3
stos
inc
push
or
mov
mov
jmp
push
sbb
cmp
mov
add
jle
lret
lods
lret
shrb
or
jo
lds
fcompl
lret
xlat
sahf
repnz
hlt
xchg
mov
xor
and
mov
rcll
dec
mov
inc
shlb
xchg
sbb
out
mov
addr16
push
mov
sbb
ficoml
hlt
decl
in
ret
or
shlb
xchg
fistpll
jecxz
sbb
out
iret
aam
in
scas
jmp
scas
or
push
sbb
cmp
test
jae
jns
test
lcall
add
inc
les
lret
xor
xchg
cmp
lds
sub
mov
test
jg
arpl
xchg
pop
inc
popf
repnz
push
push
ds
ret
sti
pop
fistps
repnz
and
mov
cwtl
pop
rorb
fdivrp
je
jecxz
sbb
ret
sbb
and
push
outsl
nop
in
inc
mov
inc
cltd
inc
out
jnp
adc
out
xor
xchg
push
and
mov
xchg
add
ja
adc
dec
xchg
inc
jl
cltd
add
xchg
or
mov
lret
insl
jnp
or
inc
data16
mov
dec
leave
popa
add
xchg
adc
leave
lret
xlat
insl
inc
inc
push
mov
mov
incl
push
lea
movsb
cltd
xor
sub
out
aaa
cmp
push
pop
loopne
pop
jo
lea
aaa
pop
jle
lea
adc
in
xchg
jbe
or
or
lret
sbb
int
lods
mov
and
sbbl
mov
out
sti
push
dec
xlat
out
mov
jmp
xchg
and
jb
movsb
test
xor
mov
pop
push
xchg
add
mov
and
fsubrl
scas
sub
dec
mov
addl
mov
js
notl
arpl
mov
fcoms
jnp
cmp
jno
rolb
outsl
addr16
aad
stc
push
insl
shlb
imul
dec
std
ficomps
int3
xchg
sub
dec
pop
mov
mov
mov
mov
xor
cmpsb
jge
mov
xlat
jp
pop
cwtl
adc
pop
fstp
xchg
ret
repnz
add
and
cmc
xchg
pop
loopne
mov
add
out
push
outsb
pop
dec
mov
mov
shlb
pop
nop
dec
stos
lret
stc
popf
fs
sbb
or
xor
cmp
repnz
push
or
loope
clc
xchg
mov
popa
push
in
aam
cmp
and
arpl
dec
and
imul
adc
pop
ja
je
ljmp
push
mov
inc
xchg
or
arpl
pop
xchg
sti
out
mov
adc
add
out
push
fstpt
fisubs
push
mov
lock
inc
mov
dec
mov
repz
sbb
iret
adc
fsubrl
push
outsl
sbb
xor
mov
lea
add
cmp
inc
aad
ret
in
std
cld
lcall
hlt
mov
ret
sub
test
pop
hlt
jg
lea
in
jnp
xchg
add
mov
dec
loopne
xchg
or
xor
into
arpl
mov
pop
fdivl
push
xchg
xor
fs
xchg
jle
mov
lds
arpl
inc
push
dec
xchg
ljmp
mov
xor
push
sub
pop
xor
sub
filds
loop
add
mov
mov
xlat
jo
or
xor
push
or
push
imul
and
dec
or
int3
inc
inc
adc
pop
fsubs
out
bound
mov
add
xchg
sub
inc
test
cmpsl
out
adc
arpl
nop
lods
ljmp
adcb
pop
pusha
iret
jecxz
ss
jae
movsl
push
scas
mov
sbb
ds
jle
iret
pop
jmp
cmp
hlt
and
mov
cmp
mov
inc
pop
adc
gs
or
adc
imul
push
jmp
xchg
inc
sbb
mov
jb
insl
lds
es
push
sarl
subb
lea
adc
or
gs
and
cmpsb
mov
inc
sbb
jp
shlb
and
inc
das
out
lea
dec
or
cld
push
cltd
xor
jp
xor
into
addl
pop
mov
in
out
mov
pop
add
jnp
fidivrl
xor
add
dec
cmpsb
les
mov
xadd
inc
jno
js
imul
ss
pop
sub
inc
push
in
xchg
dec
aad
and
mov
pop
sbb
aas
inc
cltd
inc
jnp
iret
fstl
mov
cmpsl
sub
inc
mov
in
aaa
in
push
push
fs
and
fnstenv
cs
mov
jmp
or
mov
push
lahf
mov
push
pushf
cmpsb
mov
add
aad
mov
dec
gs
cmp
mov
mov
xchg
cmp
jecxz
xchg
mov
mov
or
mov
sub
pop
mov
push
mov
insl
int
add
xchg
or
lods
sub
sbb
add
and
and
lea
lcall
jle
into
mov
pusha
mov
das
seta
pop
sbbl
out
lahf
mov
add
fstl
loopne
inc
fnstcw
aam
gs
cld
xchg
loope
xor
mov
mov
imul
jge
das
add
add
ss
mov
cmpsl
mov
mov
aad
movsl
mov
and
adc
push
push
lret
mov
lods
push
movsl
sbb
or
push
xchg
pop
out
aaa
add
lods
cmp
adc
ljmp
pop
push
or
pcmpeqd
xor
mov
pop
pusha
mov
cli
insb
test
jge
fcmovbe
sub
sbb
subl
lret
enter
outsl
push
cltd
inc
ficoml
iret
adc
jbe
dec
call
mov
lock
inc
pusha
stos
mov
adc
jmp
addr16
outsl
ljmp
cld
out
loopne
mov
int
push
fsts
dec
loopne
mov
jle
pushf
shrl
mov
add
mov
mov
pop
andb
pop
stc
aam
inc
dec
jle
cmp
frstor
dec
add
mov
out
mov
or
mov
loopne
jg
ja
xchg
dec
pop
mov
mov
int3
arpl
push
mov
jno
cmp
pop
and
mov
imul
shr
cmp
xor
mov
loope
push
and
mov
fwait
js
cmp
idivb
mov
xchg
fs
gs
xchg
insl
sbb
mov
pop
mov
test
icebp
jb
cltd
je
xchg
js
lods
xlat
repz
into
push
out
bound
xchg
sub
repnz
lods
cmp
push
push
xchg
or
int
es
inc
vpmaxsw
add
and
imul
and
rcll
nop
ret
mov
gs
outsl
and
scas
inc
aam
inc
inc
xor
fiadds
repz
cltd
push
in
jl
daa
loope
pop
adc
inc
call
jae
cmp
orl
xchg
cs
dec
notb
daa
adc
aad
mov
and
repnz
fnsave
cmpsb
sbb
shr
mov
js
dec
sahf
inc
mov
mov
lea
sbb
mov
mov
rcrb
orl
mov
in
rolb
jp
sarl
popf
pslld
inc
jmp
inc
in
imul
mov
aam
ret
jecxz
les
push
ficompl
int
ds
out
jle
sub
pop
lahf
xor
sub
in
adc
push
into
data16
lock
pop
movb
sbb
les
shlb
rorl
push
in
push
int
add
jl
outsb
sub
in
push
shl
xchg
lds
add
xchg
pop
sub
jl
or
xor
sub
stc
sar
add
js
fildll
inc
data16
lods
inc
jo
sbb
add
sub
nop
pop
es
pop
jnp
push
lods
scas
pop
movsb
lret
sub
cmp
inc
cwtl
data16
testl
push
jp
cltd
add
mov
ja
and
out
xchg
inc
dec
and
in
outsb
mov
das
notl
les
xor
xchg
mov
mov
dec
call
sbb
mov
mov
test
cli
jns
jno
inc
xchg
or
xchg
bound
lcall
gs
pop
adc
xor
dec
nop
dec
loop
adc
push
cmpsb
or
and
jne
push
xchg
in
pop
mov
jns,pn
push
adc
fstpt
pop
mov
pop
cmp
out
cmp
dec
jnp
ficompl
loop,pt
decb
ds
lock
rcrb
loopne
and
sarl
ljmp
aas
push
int
ss
lods
jb
jmp
pop
cmp
scas
test
insb
into
sbbl
xor
out
lock
adc
mov
lea
mov
inc
push
sub
in
test
pusha
ret
mov
add
mov
std
and
test
sub
scas
xchg
sbb
addr16
andl
sub
or
or
cmp
lcall
cmp
mov
xlat
repz
mov
mov
adc
push
lret
sti
push
jb
add
stc
scas
mov
push
mov
mov
mov
repz
adc
mov
outsb
popf
pushf
scas
adc
mov
push
in
fwait
xor
ss
xchg
lea
mov
neg
xchg
in
dec
adc
xlat
test
lds
pop
cmc
lods
pop
jnp
add
out
add
cmp
movsl
mov
jo
scas
pop
sub
dec
stos
push
outsl
add
sbb
mov
stc
sarb
jne
jb
ret
mov
insb
dec
adc
enter
shl
hlt
in
test
inc
cltd
push
notb
fimuls
jmp
sbb
aas
test
jmp
into
fldcw
add
enter
lahf
add
dec
bound
jo
sbb
and
movsl
std
test
adc
fadds
pop
pop
push
mov
loopne
std
fdivl
in
cli
into
and
mov
jge
jmp
mov
in
inc
mov
rolb
shr
insl
test
pop
push
lret
sbb
cmp
sub
mov
add
lcall
adc
ficoml
dec
jge
das
cmp
sub
in
imul
push
mov
cwtl
sarb
rorl
enter
dec
test
jb
xchg
sub
add
mov
sbb
insl
test
jmp
fimull
dec
mov
dec
cmp
gs
push
repz
mov
stc
dec
fisttps
mov
sahf
push
sbb
pop
shl
cmp
test
fiadds
cs
fs
xorb
adc
fs
test
movsb
cmp
jmp
nop
das
loopw
es
mov
pusha
test
jbe
cli
jno
push
aaa
add
int
push
js
lods
fadd
adc
jl
in
cwtl
pop
cli
and
iret
loopne
sbb
xchg
jb
cmp
xor
mov
mov
inc
loop
ljmp
pop
imul
sub
jae
dec
push
push
fs
imul
scas
inc
add
std
sbb
mov
lods
cmp
mov
stos
pop
cmpb
out
push
les
cltd
jo
push
xchg
adc
jmp
lds
and
lea
stos
ret
lods
rorb
ret
pop
inc
hlt
jp
fisubl
or
adc
ret
shrb
pusha
fcmovnu
or
xlat
iret
sub
xchg
test
jge
or
and
fbstp
add
out
xchg
fs
mov
pop
movsb
cmp
daa
out
adc
ret
ss
push
push
shlb
or
aad
popf
aaa
sahf
jno
lret
ret
ret
fdivl
call
jg
jg
leave
mov
mov
dec
jecxz
xor
xchg
mov
dec
loopne
movsl
inc
push
mov
repnz
loope
mov
pop
andb
rol
pop
add
scas
in
and
jge
fs
xchg
call
push
adc
ds
jmp
out
popf
pop
add
push
mov
jle
mov
add
insb
or
addr16
xchg
mov
or
and
leave
das
ret
cmp
inc
fisttpl
mov
nop
jge
cmp
mov
fmul
aas
decl
sbb
mov
dec
and
xchg
fsubl
lods
xchg
jge
mov
imul
cwtl
push
pop
testl
mov
push
loope
insl
addl
xchg
xchg
mov
cmc
jbe
mov
out
movsl
cmp
int3
mov
sub
push
dec
nop
xor
add
adc
int
out
xchg
adc
bswap
mov
xchg
inc
ret
and
imull
hlt
add
pushf
addr16
adc
aaa
mov
inc
mov
mov
out
jl
loope
cmp
mov
clc
or
pusha
mov
jl
loop
mov
or
pushf
xchg
jbe
stc
aam
and
stos
aam
jge
sub
das
xchg
sbb
leave
and
sbb
mov
add
int
sbb
fistl
ds
dec
push
pop
sub
mov
mov
sub
decl
test
add
imul
xor
popa
xor
pop
xor
and
cltd
clc
jae
or
out
mov
iret
cmpsb
xchg
ja
inc
lret
sti
addr16
xchg
jb
mov
xor
ror
fdivr
int3
movsb
jecxz
std
adc
scas
imulb
in
sub
add
pop
cmp
hlt
xor
xchg
lret
gs
xchg
mov
add
imul
xchg
fidivs
jo
mov
xchg
sub
push
add
sub
inc
pop
decl
xor
mov
dec
stc
mov
out
and
mov
aaa
fs
bound
jnp
sbb
push
push
xlat
jle
push
daa
cmc
or
sub
jge
xchg
in
rcrb
adc
add
cltd
cmp
xchg
shr
popf
xor
repz
xor
xor
mov
out
loop
sbb
mov
shll
cmp
dec
cmp
out
lea
movsb
cmp
sub
pop
cmpsl
or
mov
xchg
jo
aaa
push
ja
sbb
xorb
fnstenv
rdmsr
xchg
mov
stc
cmp
push
fstp
push
lods
or
xchg
pop
xorb
aad
lock
testl
push
xor
outsb
test
in
cmp
cld
mov
mov
loop
dec
or
lock
pop
adc
movsb
sub
es
insb
and
into
test
push
aam
add
adcb
call
push
inc
adcl
push
mov
jg
es
sub
ds
lods
sub
repz
lds
mov
testl
stc
xlat
insl
ficompl
hlt
mov
jnp
sub
mov
dec
jmp
pop
rcrl
cmp
mov
test
push
xchg
cmpsb
mov
aaa
inc
jmp
loop
arpl
cmpsl
mov
sbb
mov
mov
shlb
jp
gs
xchg
mov
into
mov
jge
and
and
int
faddp
jno
dec
fldt
loope
in
sub
or
add
pop
movsl
push
add
sbb
push
es
stos
out
xor
jg
cmp
push
mov
fadds
mov
insl
pop
adc
mov
dec
rep
cmp
shll
or
dec
scas
icebp
xor
lods
sbb
or
cmpsl
fs
xorl
mov
inc
mov
push
es
xor
cli
das
imul
xor
imul
loopne
pop
ret
xchg
push
mov
arpl
adc
int
mov
cmpsl
repz
push
fs
mov
insl
inc
fdiv
mov
cmc
adc
fwait
inc
inc
fcompl
imul
out
rol
or
cld
outsl
push
shr
and
xor
cmp
sbb
push
push
popf
sub
bound
jp
loop
xor
mov
sub
dec
or
push
cwtl
xchg
mov
pop
pop
sahf
inc
mov
xor
xor
xor
arpl
mulb
rcll
and
xlat
fmull
shl
xchg
ljmp
fcmovne
popa
sub
pop
test
adc
int3
lock
mov
inc
insb
jae
mov
dec
mov
inc
xchg
fidivl
pop
testl
push
es
dec
jge
mov
xor
dec
call
mov
or
das
dec
bound
pop
jmp
pop
imul
jb
pusha
adc
sbb
sbbl
ljmp
pusha
sbb
jb
xlat
cli
jl
inc
decl
js
les
jge
fistpl
loop
push
cmpb
cltd
sub
mov
sbb
fisttpl
or
dec
inc
pop
ja
jecxz
lcall
jecxz
jnp
cltd
lahf
sarl
dec
cmp
adc
fildl
sbbl
mov
iret
mov
std
shll
push
fldt
sub
inc
pop
aas
cmpsl
inc
pop
fldenv
dec
push
clc
cmp
sub
aad
dec
adc
inc
arpl
arpl
xor
in
addl
cli
cmp
stos
lahf
jg
add
popa
enter
add
ficoml
xlat
xchg
insl
nop
dec
xlat
scas
rcl
imul
lock
icebp
jno
jmp
xchg
xor
sub
lcall
gs
call
inc
push
sub
out
shrl
in
sbbl
dec
jecxz
add
hlt
pop
push
or
call
dec
outsb
jp
add
ljmp
sti
adc
insl
loopne
mov
cmp
imul
ret
cmp
mov
push
in
push
jb
aaa
adcb
cmp
stos
jbe
fcomi
pop
stos
sbb
nop
ror
incb
lods
inc
sbb
dec
fdivs
lret
cltd
cmp
lret
clc
push
ja
enter
lds
mov
addb
mov
cmp
pop
pop
repz
loop
sti
lcall
and
gs
cs
movl
xchg
out
mov
jb
out
jno
aas
nop
or
pusha
dec
cmp
jg
icebp
jnp
dec
fidivl
out
cld
sbb
cmp
push
andb
icebp
insb
out
sub
jo
into
das
sbb
add
jnp
mov
jmp
flds
cmpsl
pusha
jl
scas
repnz
mov
push
cmp
into
cmpl
xorb
cmp
jb
pop
das
out
aaa
xchg
lods
inc
cmp
out
iret
jg
add
dec
aad
movsl
popf
push
dec
or
jbe
xlat
repz
lds
pop
sbb
pop
lds
xor
add
mov
stc
in
cmpb
xchg
dec
jne
stc
jo
dec
dec
shl
shrl
pushw
in
pop
sbb
test
sbb
lcall
in
jae
xchg
out
inc
lods
outsl
in
or
xchg
imul
dec
lock
loopne
scas
cmp
jle
cmc
pop
fdivrs
in
inc
fmull
cmpsl
arpl
cwtl
data16
out
mov
and
mov
rcrb
mov
cmp
hlt
pop
in
data16
sub
and
stos
jns
ljmp
in
outsb
sbb
xor
adc
popa
xchg
sbbl
scas
aas
mov
dec
popa
lret
jmp
and
scas
lret
fmull
out
push
sbb
icebp
dec
pop
fimuls
enter
aad
mov
pop
xlat
add
and
dec
push
es
std
xchg
data16
push
imul
test
cmc
stos
cld
inc
scas
idiv
and
les
movsl
mov
adc
pop
mov
add
mov
xor
inc
adc
xchg
xchg
sub
dec
sbb
push
mov
xchg
adc
in
mov
decb
jbe
int
xchg
fwait
aas
lock
out
jge
lods
mov
sbb
testb
add
push
mov
sahf
mov
in
dec
fsubl
pop
fcomip
jle
fnsetpm(287
push
popf
adc
jb
js
ja
adc
adc
lahf
adc
int
pop
outsl
mov
sbb
mov
jmp
dec
sub
xlat
mov
std
dec
imul
xchg
cmp
clc
mov
sbbb
js
fsubr
lret
sub
lods
push
fwait
pusha
add
cltd
mov
hlt
add
mov
pop
leave
cmp
sbb
sbb
or
fxam
pop
shll
push
mov
outsb
je
stos
sub
adc
loop
daa
fwait
cmp
inc
mov
mov
ret
hlt
subb
jns
xchg
adc
mov
sub
xchg
pop
dec
not
xchg
add
cmp
movsl
aam
lods
push
xor
sti
cmp
push
sub
cmp
and
out
push
fstpt
aas
shr
ja
outsb
sbb
ljmp
ljmp
pop
fcmove
fmul
popa
push
pop
shlb
out
fnstenv
adcb
pop
fidivrl
xor
adc
lcall
dec
and
mov
fisubrs
dec
xchg
mov
mov
mov
lods
fsubrl
nop
cmp
out
lds
jae
lock
loope
xor
ja
push
lods
mov
scas
fidivrs
jns
sahf
mov
cwtl
jnp
push
cmp
push
inc
mov
outsb
repnz
fcomp
dec
in
sar
and
mov
lock
mov
mov
lods
pop
shrl
inc
inc
pop
cmp
out
push
sbb
xchg
repz
add
jle
pop
cmp
push
sub
and
xchg
shlb
xchg
mov
into
pop
icebp
sub
cmp
es
or
adcl
pop
loopne
icebp
repnz
es
aam
nop
push
sub
cmp
mov
popf
pop
stos
inc
pop
popa
and
jmp
dec
xlat
mov
fisubrl
pop
nopl
fwait
cmc
or
out
loop
iret
adc
sub
imul
lods
push
rcll
and
inc
repnz
push
test
insb
int3
cli
std
fsubr
fstpl
adc
push
aam
icebp
mov
push
movsb
movb
lds
xor
mov
xlat
mov
loop
inc
daa
les
popfw
fs
cmp
jo
dec
cmp
jle
lods
rcr
or
add
cwtl
pusha
mov
sbb
mov
xchg
test
mov
sahf
js
dec
push
or
adc
push
loope
add
push
repz
pop
into
push
iret
test
ficoms
xor
scas
xchg
xchg
jbe
add
cmp
add
xor
scas
xor
std
and
outsb
push
sub
nop
pushf
push
push
imul
daa
xchg
mov
push
je
sbb
rcrb
inc
movsl
cld
mov
jle
insb
mov
mov
rclb
ss
lcall
arpl
cwtl
addr16
in
fsts
out
or
xor
scas
pop
cmc
frstor
mov
mov
fsubr
test
clc
dec
std
gs
int3
and
ficompl
lock
pop
mov
cmp
push
out
fiadds
mov
test
push
sbb
mov
out
or
xchg
js
mov
daa
in
add
in
cmpsb
jg
icebp
mov
insl
cwtl
pop
sbb
addr16
dec
in
and
sub
jecxz
nop
je
dec
movsl
sub
loop
movsb
add
xchg
add
xchg
push
mov
xchg
adc
pop
scas
xor
orb
xor
stos
jo
movsl
mov
cmpsl
xor
sbb
push
mov
mov
dec
enter
out
xchg
sbb
subl
sti
dec
test
cmpsl
jno
xchg
test
add
lock
dec
scas
ret
push
fdivrl
sub
sahf
sub
fcompl
dec
jmp
call
and
mov
add
fldcw
in
test
jmp
xchg
arpl
mov
rcrb
loopne
cmp
jp
je
fptan
jmp
sbb
lock
jge
push
lret
arpl
std
outsl
rep
xlat
adc
xor
xorb
xchg
in
mov
xchg
inc
enter
pop
dec
xchg
loope
mov
psllw
cmp
xor
xchg
ss
push
mov
dec
lods
outsb
cmp
adc
lds
mov
mov
inc
stc
sub
ret
xchg
shl
cmpsb
lea
push
fisubl
pop
stc
aam
xchg
insl
fcmovnu
cmp
mov
stos
xchg
es
and
mov
aas
sub
pop
lods
js
cltd
mov
or
jle
int
clc
sbb
into
lods
push
in
pop
in
xchg
xor
scas
fcmove
xchg
jb
lea
pop
adc
jne
cwtl
pusha
test
scas
inc
bound
fimull
mov
mov
and
filds
imul
testb
ss
xor
jae
mov
lock
cwtl
push
or
push
aas
loope
or
aam
jg
or
stc
cmp
icebp
dec
xchg
push
les
int
addr16
pop
repz
incb
inc
sub
dec
xor
out
ja
in
insl
popf
jmp
fbld
lds
mov
int3
sub
jnp
addr16
jns
aad
fwait
push
aad
shrl
and
xor
dec
sbb
pop
inc
insl
hlt
mov
xchg
xchg
je
sbb
or
cmp
shl
test
loop
fcomip
jp
dec
out
pushf
ret
js
test
inc
jecxz
loope
or
ja
loop
daa
out
outsl
push
mulb
add
push
mov
push
xor
push
xchg
test
dec
and
loope
sbbl
mov
jb
scas
xchg
sub
or
loopne
stos
testl
jge
in
sbb
push
lods
adc
xchg
mov
icebp
sbb
inc
sbb
arpl
xchg
test
jl
out
cmp
push
pop
dec
mov
lods
mov
pop
cmpsl
aam
cmp
clc
out
sahf
sub
dec
insl
rorb
inc
ficomps
push
gs
pop
sub
mov
jno
ret
iret
mov
and
test
jns
add
stc
popf
and
bndstx
movsb
xchg
mov
cltd
jle
sti
jp
sbb
mov
push
jl
mov
inc
xchg
scas
test
dec
sbb
cmp
outsl
ds
mov
xor
jb
in
jmp
or
push
call
out
loope
aas
adc
jmp
movsb
leave
or
js
sbb
bound
dec
sbb
push
push
mov
jo
sub
mov
cmp
xchg
stc
ficompl
out
stos
push
sbbl
sbb
js
lea
sbb
fmul
sbb
mov
cltd
mov
pop
and
lcall
xchg
ja
mov
xor
and
aaa
mov
push
mov
jb
imul
cld
btrl
repnz
aaa
push
sub
and
inc
sti
pop
inc
mov
mov
lret
jge
aad
roll
or
rcrl
mov
arpl
push
or
enter
sub
sbb
scas
in
sbb
dec
dec
ja
aad
mov
dec
inc
mov
dec
or
lods
popf
dec
mov
sti
add
push
test
push
fldl
mov
mov
jp
repz
fwait
repz
daa
addr16
cwtl
lods
call
bound
pop
cmc
lods
dec
mov
sahf
das
aad
fiadds
and
sbb
sbb
mov
pop
mov
loop
cs
out
loope
fwait
xchg
pop
xchg
sub
fidivrl
pop
pop
addr16
sbb
mov
out
addl
and
cmpsb
cmp
push
mov
lds
data16
lock
sub
or
pop
xor
xor
popf
sub
cmc
adc
dec
inc
orb
cmp
in
out
ret
insb
ret
scas
out
dec
nop
pop
fimuls
pop
into
cmp
ja
inc
push
mov
fidivrl
cmpsl
inc
sub
mov
mov
pop
icebp
movsb
inc
sub
pushf
add
ljmp
int3
sub
sti
sti
pop
loopne
stos
ljmp
lock
xchg
mov
fxam
xlat
push
mov
stc
loope
cmp
adc
cmp
push
in
mov
jp
mov
je
adc
push
inc
fcompl
jb
iret
inc
inc
xlat
adc
aaa
pop
add
inc
insl
xor
cmp
xchg
dec
mov
les
pop
jns
jno
sbb
dec
inc
fdivrp
mov
fcmove
imul
lock
jle
lret
push
imul
dec
mov
int
sub
divb
sub
mov
orl
adc
sub
hlt
or
ja
mov
das
cmp
mov
outsl
out
inc
adc
addb
testl
mov
repz
adc
lds
jg
fstpl
decl
adc
push
mov
xchg
add
cld
sbb
jmp
xor
cld
xchg
sbb
mov
jmp
iret
jbe
xlat
cltd
decl
das
push
mov
repnz
xor
imul
xor
repnz
pushf
mov
add
mov
sub
sbb
jnp
sbbl
xchg
push
test
sahf
pusha
xor
fldt
mov
push
js
je
push
and
pop
inc
pop
push
fsubrs
cmp
test
enter
xor
nop
jge
daa
cmp
popa
jg
xorb
loopne
movsb
cmp
jno
dec
mov
les
lock
jbe
add
mov
adc
es
je
jnp
or
mov
addl
dec
mov
sub
out
enter
xchg
mov
xchg
and
push
sbb
xchg
pop
cli
icebp
adc
jle
xlat
outsb
les
call
jnp
adc
add
push
out
inc
dec
and
scas
push
out
int3
push
stc
or
ror
pop
ret
xchg
decb
test
jne
push
mov
inc
inc
testb
cmp
aam
fisubs
mov
push
daa
or
fwait
lret
and
movsb
cmp
rorb
insl
or
jnp
add
jbe
popa
and
cmp
dec
test
pop
mov
fisubrl
jecxz
lds
jle
xor
mov
daa
push
aaa
or
ds
pusha
cmp
pop
push
test
pop
shll
mov
jecxz
rcrl
mov
test
xchg
icebp
pop
sti
fisubs
adc
jg
mov
ret
mov
pop
push
scas
repz
or
push
enter
cmc
pop
add
lahf
push
inc
xchg
push
in
ret
adc
enter
cmpsb
xchg
pop
dec
pusha
idivl
nop
jl
fstpt
inc
sbb
xchg
dec
aam
int
scas
sub
push
lret
cmpsl
in
pushf
mov
fisubs
jecxz
dec
and
cmp
mov
popa
dec
inc
fwait
pop
fstps
lods
mov
fucomp
fcomi
inc
push
aas
fistps
xchg
jp
movsb
scas
jb
ficompl
loopne
inc
mov
mov
dec
inc
pop
nop
dec
daa
in
push
pop
xor
mov
loopne
hlt
pop
mov
dec
ret
pusha
fneni(8087
in
lea
inc
dec
fs
pop
pop
jmp
fisttpll
pop
mov
ret
into
loope
xlat
in
and
popa
test
inc
sub
mov
xor
and
aam
ds
orb
scas
xchg
sbb
mov
test
mov
xorb
das
adc
mov
dec
ds
push
fld
aas
icebp
enter
sbb
dec
xchg
xchg
mov
fidivl
pop
hlt
mov
push
xor
mov
jl
sbb
out
sbb
jle
pop
inc
jo
pop
lret
push
jmp
data16
int3
loopne
jmp
cmpsb
dec
popa
adc
movsl
in
push
jne
sbbl
popf
into
push
push
addr16
push
add
jge
inc
test
xchg
shll
add
fsubl
mov
mov
lret
sarb
shll
xchg
out
imul
add
sbb
sub
push
mov
rorl
dec
push
js
pop
aas
mov
push
pop
fisubl
aaa
mov
add
iret
dec
jbe,pt
mov
test
mov
dec
pop
lea
or
pop
insl
int3
pop
sbb
es
and
adc
out
leave
inc
jge
jo
push
mov
sti
out
fidivs
mov
js
and
mov
add
mov
rcrb
dec
push
cmp
divb
rcrb
sub
mov
jno
fcomps
or
int
int
movsb
ja
cmpsb
outsl
adc
mov
xor
rcrb
jp
mov
sbb
dec
sarl
shrb
sti
aaa
cltd
and
stc
add
or
mov
mov
shll
lods
lea
xchg
fisttpll
sbb
and
mov
xor
in
push
outsb
fwait
push
imul
xor
pop
jae
cwtl
cmp
inc
scas
inc
jne
test
xchg
or
repz
negb
mov
scas
ret
xor
mov
inc
out
sub
inc
and
dec
xor
repz
sub
jns
loopne
pop
out
add
xorl
imul
push
ss
pop
cld
inc
sbb
out
popa
lds
test
and
dec
enter
loopne
and
mov
pop
out
and
inc
pop
lock
jne
mov
sub
cmp
fidivs
shlb
stos
shrl
mov
xorl
pushf
int3
aas
in
stc
sbb
xchg
mov
add
xchg
cmc
mov
push
mov
push
data16
jo
mov
sti
fwait
popf
jno
mov
aam
arpl
mov
insl
stc
add
add
push
aaa
clc
jle
stmxcsr
mov
aam
mov
fdivrs
adc
or
adc
test
mov
xor
xchg
xchg
test
or
add
sbb
loope
fdivrl
dec
xor
push
xchg
adc
jnp
pop
daa
lret
inc
mov
test
mov
sahf
sbb
shll
aad
ja
jbe
ss
mov
sub
inc
sar
sbb
int
mov
and
sub
jae
push
out
xor
pushl
push
add
jne
dec
loopne
call
jno
fsubrs
mov
out
aad
testl
mov
adc
es
lahf
mov
lret
out
push
add
mov
in
and
mov
fstpt
les
adc
pop
popa
in
mov
es
push
mov
mov
stos
adc
and
xlat
leave
fmuls
jo
jmp
or
pop
xchg
xchg
push
push
decb
dec
aaa
negl
sub
loope
icebp
push
icebp
mov
ret
xor
shll
lret
push
cld
fists
or
sub
fisttpl
mov
cmp
enter
insb
dec
scas
push
cwtl
inc
xchg
xlat
cmp
outsl
dec
out
out
icebp
pop
mov
xchg
daa
adc
jp
fistl
rcl
add
mov
or
push
mov
scas
push
incb
pop
cli
and
mov
and
adc
jg
jne
les
stos
xor
push
sub
sahf
mov
mov
mov
imul
dec
outsb
stc
mov
addr16
insl
imul
jecxz
jl
fiaddl
xchg
mov
push
mov
push
aam
in
popa
es
xchg
push
xchg
jl
cmp
xchg
mov
fstpl
or
lds
adc
push
shll
test
adc
pop
mov
or
bound
test
jg
mov
jnp
in
push
nop
push
xor
fdivl
inc
into
pusha
inc
ja
jmp
out
xor
out
ret
outsb
xor
dec
andb
dec
mov
sub
lea
and
xchg
nop
icebp
fwait
xlat
cmpsb
nop
repnz
stos
les
or
lret
fcompl
push
push
movsl
jle
lret
dec
jge
test
je
hlt
repz
je
push
and
ret
cmc
cmp
jecxz
in
and
xchg
or
mov
data16
add
fs
cmpsl
ds
mov
sahf
mov
cmp
push
adc
sbb
stos
sbb
mov
add
jp
imul
mov
xchg
cmpsl
jo
dec
pusha
lods
and
and
pop
movsl
arpl
jns
outsl
daa
and
ret
pop
in
sbb
dec
jbe
insb
into
rorb
fdivrl
xchg
clc
lahf
dec
adc
xor
gs
js
xlat
mov
imul
fidivs
int3
pop
xchg
inc
dec
inc
dec
lods
rcrb
mov
sbb
shl
cmc
bound
inc
mov
mov
fwait
dec
adc
cmp
jl
sub
adc
and
pushf
dec
lock
dec
imul
pop
add
dec
push
mov
dec
out
push
mov
cld
loope
cli
rolb
std
jecxz
xor
jae
lods
and
inc
mov
add
sbb
stos
sub
and
jns
scas
stc
push
lcall
outsb
mov
xchg
js
adc
scas
leave
stos
into
xchg
and
dec
pusha
sub
mov
popf
repz
xchg
xor
pop
not
add
das
ret
mov
cs
aaa
mov
and
cli
and
inc
shld
das
pop
rolb
mov
xor
pop
test
cmp
xchg
inc
mov
pop
addr16
push
jne
aaa
ret
push
mov
and
inc
decb
mov
dec
mov
sbb
mov
lcall
rolb
xor
adc
mov
sub
dec
jp
cmpsl
lcall
insb
jo
test
or
inc
jmp
iret
rcl
ljmp
mov
pop
mov
cmp
daa
add
xor
cmp
loopne
push
mull
hlt
push
sbb
lods
ret
sub
cmc
pop
scas
mov
addr16
jae
test
jnp
call
or
aaa
xor
add
mov
or
sbb
call
in
fdivrs
popf
in
jl
icebp
lds
jne
lahf
or
addr16
fisttps
lock
fimuls
fadd
mov
pop
lcall
cwtl
icebp
and
adcb
movl
mov
jg
push
fcoms
lret
stc
shr
mov
fucom
cmp
lds
dec
loop
daa
push
mov
in
icebp
std
arpl
filds
cltd
mov
jbe
push
lahf
adc
adc
popa
push
push
mov
push
aas
inc
incl
insb
pop
mov
pop
loope
inc
adc
subl
fisubl
out
mov
js
xchg
outsl
aas
push
dec
test
push
nop
mov
prefetchwt1
add
sub
add
rorl
clc
dec
dec
mov
shl
orl
sub
mov
scas
lock
out
shlb
push
xor
mov
lock
or
adc
call
xchg
push
mov
push
out
lds
xchg
mov
fistpl
sbb
push
xor
or
jecxz
xor
in
negb
push
inc
sbb
xor
push
inc
jle
in
gs
pop
dec
pop
jo
aaa
fsubrs
push
pop
xlat
ret
push
ret
sub
cmpsl
pop
lock
mov
pop
lahf
sbb
cmp
es
mov
fisttpll
and
psrad
inc
push
sti
fmul
ss
ja
sbbb
dec
mov
sahf
mov
xchg
mov
outsb
add
mov
sub
rcrl
push
push
dec
aaa
outsb
in
out
xchg
sbb
data16
in
inc
stc
pusha
cwtl
sbb
inc
ficoml
mov
add
imul
imul
jno
push
jg
sahf
mov
and
clc
adcb
push
aam
mov
bound
xor
mov
xchg
sub
insl
fdiv
sahf
movsl
rcrb
xchg
sub
ljmp
shr
inc
lea
in
std
mov
add
adc
lret
in
and
cmpsb
orb
push
cmpsb
push
push
adc
pop
stos
xor
sub
inc
ret
ror
in
lcall
inc
mov
test
out
iret
divb
lahf
inc
jmp
adc
fs
cld
push
pop
movsb
rclb
mov
lods
pop
jnp
mov
stos
push
sbb
or
pop
push
fcomps
adc
bound
sbb
cmp
push
pop
mov
inc
xor
lods
and
xchg
mov
mov
stos
jp
pop
cli
mov
testl
es
jge
and
cmp
ja
inc
aam
jae
int
pop
jnp
adc
fstl
ret
stos
enter
call
mov
push
mov
jno
inc
mov
iret
popa
js
repz
push
pop
imul
inc
jno
arpl
dec
add
or
xor
sar
xor
push
jmp
leave
jo
push
movsb
pusha
stos
xchg
jl
jp
int
stos
push
push
nop
jo
xor
and
dec
inc
cmpsl
sahf
push
add
movsl
add
mov
lret
addr16
test
lods
mov
jbe
add
test
pop
loope
pusha
popl
push
popf
or
dec
out
push
jge
pusha
xor
insl
stos
push
fsts
fdiv
dec
jbe,pn
jne
rcpps
pop
jge
roll
shlb
cmpsl
sbb
jae
lahf
jg
or
cmp
xchg
push
xchg
mov
rorb
idiv
test
xchg
inc
inc
mov
lods
insl
xor
lret
sub
inc
jmp
adc
and
or
sbb
xor
or
cmpsb
scas
sbbl
or
mov
sub
shrb
ficoml
lea
sub
push
jb
xchg
insb
rcrl
inc
xlat
bnd
lock
cmp
mov
sbb
daa
call
push
insb
in
xor
pop
lea
shrb
sti
cld
jb
jg
cmp
fistl
daa
mov
mov
in
das
hlt
mov
push
sbb
mov
push
xor
ljmp
data16
inc
popa
aam
je
push
fisubs
insl
mov
in
inc
and
gs
frstor
xor
shll
pop
mov
push
jbe
aad
jbe
mov
cmp
jg
cmovb
add
aam
mov
loop
jecxz
mov
cltd
lret
ljmp
jno
dec
in
mov
popa
mov
cli
test
adc
testb
and
cli
jle
inc
adc
inc
call
mov
push
pop
jbe
mov
hlt
cmp
vcmpsd
dec
loop
pop
and
enter
das
loope
lret
test
es
pushf
insl
or
shrb
cmc
dec
enter
jb
bound
lret
jno
xchg
incb
sbb
jbe
ret
iret
ret
outsl
push
adc
cmp
repz
mov
mov
or
mov
or
rcrb
in
cltd
icebp
rolb
enter
fildl
and
mov
lds
cs
enter
cmpsl
jmp
dec
dec
stc
pop
inc
xchg
add
paddsb
pop
mov
xor
stos
ss
cmp
mov
pop
ret
push
xor
in
enter
jmp
inc
fwait
arpl
hlt
pop
push
push
cmpsb
ds
cmp
mov
js
fadds
xchg
gs
ja
jo
mov
xlat
jl
les
sbb
std
cmp
ficompl
out
xchg
sbb
sahf
inc
subl
subb
push
roll
push
jae
jns
dec
jo
popf
test
sbb
dec
lea
push
pop
xchg
daa
mov
xchg
cmp
dec
mov
jmp
into
mov
ja
sub
aam
cli
into
fmul
adc
and
cmpsl
cmc
adc
mov
xchg
adc
ss
xchg
int3
dec
pop
cwtl
test
andl
pop
je
add
jmp
cli
jmp
sbb
cmpsl
dec
iret
sub
sub
lret
or
into
outsl
and
test
movsb
test
lret
push
jmp
mov
dec
in
repz
int
and
stos
jl
and
xchg
mov
xor
popf
addr16
dec
pop
push
mov
mov
stos
shlb
das
clc
fstps
mov
sbb
sub
cmpsl
jb
xor
movsl
jg
negb
dec
data16
outsb
adc
cmp
jbe
shl
stos
jne
inc
lds
jno
xchg
fs
adc
mov
and
add
rclb
push
repz
stos
pop
imul
in
cld
mov
mov
xor
jg
out
les
xchg
pop
xchg
and
jno
out
sub
inc
andl
fdivrp
test
xchg
negl
add
add
or
popf
dec
inc
int3
ljmp
cmp
xchg
ja
sbb
push
pop
out
inc
int3
sbb
and
mov
lret
mov
dec
repnz
in
jg
shlb
fwait
jg
js
add
sbb
adcb
mov
sahf
out
adc
fsubr
sbb
cs
jle
movsl
jae
int
cli
aaa
add
icebp
ljmp
push
sbb
and
mov
mov
iret
ds
lea
add
loope
nop
cmp
sub
push
jge
inc
sub
inc
mov
add
sub
testl
mov
xchg
cmpsb
mov
lea
loope
xor
pusha
ss
push
stos
jl
stos
fsubs
rcrb
push
mov
mov
jae
imul
hlt
es
loope
inc
data16
or
popf
inc
sbb
inc
sbb
adc
cmp
loop
cltd
std
or
mov
lods
mov
xorl
and
xor
popa
sub
xchg
mov
push
xchg
in
cltd
push
testl
sub
sahf
adc
pop
or
cmp
imul
repnz
push
je
or
adc
add
mov
testl
idivb
fcoms
jmp
test
pop
mov
or
clc
aam
in
leave
sub
mov
sarl
or
mov
arpl
dec
shll
jns
mov
idivb
jge
nop
or
les
mov
mov
cli
xor
push
test
or
dec
push
dec
stos
jno
mov
mov
ret
movsb
dec
movsl
and
idiv
lods
outsl
push
xchg
mov
js
sti
lea
mov
or
call
jnp
add
mov
add
xchg
cmp
dec
add
nop
test
dec
cmp
popf
ljmp
jno
in
cmpsb
mov
add
pop
stc
inc
ss
lock
stc
pop
popf
cmp
xchg
xor
imul
xchg
fcompl
divl
andl
aaa
add
lret
iret
xor
mov
inc
jp
rcrb
add
push
or
mov
movsb
inc
ljmp
pop
xchg
test
pop
xorl
sub
jl
push
clc
sub
push
mov
psrlw
xchg
jp,pn
stos
lods
shll
pop
add
cmp
mov
clc
sub
fimull
adc
out
xor
pop
xchg
xchg
mov
fstp
pop
cwtl
mov
jmp
pushl
add
test
pop
and
pop
xor
into
jmp
sbb
cmc
int3
bound
sbb
mov
xor
xor
inc
pushf
and
in
test
xchg
cmp
shrb
imul
test
ljmp
ss
push
icebp
sbb
mov
mov
mov
pop
aaa
test
in
mov
iret
fidivs
lods
push
insl
adc
sahf
in
mov
mov
lods
test
sbbl
rcll
sub
dec
lret
xor
jno
lea
arpl
js
jg
scas
push
aad
mov
dec
or
js
xchg
sub
aam
mov
mov
and
fbld
xchg
inc
fmul
mov
arpl
fwait
cmpl
movb
cli
mov
and
dec
push
xor
shlb
xchg
jle
dec
mov
sahf
adc
jmp
mov
lods
test
fdivrs
test
sub
cwtl
sar
outsb
scas
inc
pop
add
cmpl
mov
lods
cli
lret
les
inc
not
lcall
fstpl
adc
lcall
iret
push
sub
ds
cli
in
ljmp
jge
or
daa
xchg
or
fwait
mov
pop
mov
test
cmp
sub
or
sub
dec
push
scas
push
popf
out
mov
jmp
lods
cli
pop
lock
mov
test
dec
repnz
pusha
adc
adc
add
push
sub
and
sti
mov
sbb
xchg
sub
cmp
dec
call
ret
and
adc
jb
shll
movsb
nop
xchg
jmp
sbb
xor
cs
stos
sub
inc
jmp
add
out
loopne
nop
mov
xchg
and
mov
sbb
shlb
outsb
fdivs
stc
add
mov
in
out
push
fstps
lods
and
das
and
or
inc
dec
in
jecxz
jl
loope
into
mov
ret
pushl
xorl
test
jb
or
push
dec
ret
aad
in
xchg
cmp
add
cmc
adc
add
scas
lcall
bound
cli
mov
call
test
mov
mov
addr16
xchg
mov
shll
sbb
jmp
test
icebp
lcall
xchg
ja
mov
aaa
jl
push
push
mov
pop
xchg
scas
or
ret
push
fistl
sbb
dec
cmp
int3
fbstp
and
mov
int
subl
sbb
jmp
inc
insl
imul
pop
push
push
and
outsl
ljmp
cmpl
adcl
jae
frstor
jmp
mov
lret
dec
cmpsb
pop
jnp
in
out
pop
insb
lea
push
xor
rcl
mov
mov
mov
push
inc
hlt
loop
sub
pop
mov
jl
cmp
add
adc
cli
fmul
cmp
std
inc
pushf
and
iret
sub
jmp
pop
cmp
mov
insb
test
test
dec
int
out
decl
push
arpl
mov
inc
dec
fs
cmp
inc
push
gs
or
cmp
out
xor
mov
xor
outsl
jnp
add
fisttpl
push
or
mov
faddp
dec
push
xchg
ret
fs
hlt
mov
arpl
and
jp
in
out
adc
or
xor
ret
fimuls
jbe
push
pop
mov
aam
aaa
test
adc
popf
mov
add
mov
jmp
imul
cli
rol
or
mov
mov
xchg
dec
adc
addb
push
xchg
and
ficoms
mov
mov
mov
xchg
lock
out
inc
adc
aas
imul
dec
cmp
add
inc
xor
incl
mov
add
and
in
mov
xchg
xchg
and
sbb
or
inc
insl
pop
icebp
pop
ja
into
dec
iret
add
xchg
insl
jo
pop
movsl
xchg
loop
fcomps
mull
gs
push
aam
push
mov
clc
aam
cmpb
xchg
mov
rcrl
mov
sbb
push
cld
fwait
jle
jge
rol
rolb
sbb
mov
cs
add
push
cmc
xchg
mov
stc
repnz
and
jl
adcl
arpl
xor
cmp
outsb
xor
xor
lahf
xchg
ljmp
cmpsb
inc
scas
mov
iret
mov
jg
dec
mov
sub
jle
fidivl
adc
call
jae
fstpt
or
dec
xor
cmp
mov
sbb
jbe
add
jns
or
jl
sub
xchg
jmp
adc
loop
js
mov
or
lds
mov
clc
dec
push
aad
xor
outsb
push
push
loopne
fidivs
aas
rolb
vmcall
xchg
xchg
xor
mov
shrl
ja
xor
je
mov
adc
mov
sbb
lock
jo
or
ds
aaa
test
add
ja
mov
loope
imul
dec
mov
andl
mov
sbb
iret
sub
push
ss
ja
mov
ret
outsb
adc
adc
and
roll
xor
lret
push
stos
aam
pop
jno
xor
jl
mov
and
xchg
sbb
insl
push
jl
dec
and
shrb
xor
fucomip
sti
adc
addb
stos
adc
mov
and
icebp
popa
shl
lret
aad
cltd
lock
mov
xchg
add
mov
jbe
pop
dec
xchg
or
je
mov
inc
lods
subb
and
mov
lcall
daa
jno
add
fdivrs
daa
or
bnd
test
test
xchg
push
inc
js
inc
inc
push
push
in
aad
jp
adc
inc
mov
jae
dec
mov
stos
out
add
into
pop
rcll
leave
repnz
jecxz
xchg
push
rcll
push
jne
inc
iret
test
lods
push
sub
pushf
sbb
test
pop
ljmp
or
ficoms
inc
push
and
or
idiv
ss
mov
inc
pop
or
dec
mov
movsl
add
cmpsl
test
je
ljmp
es
xchg
out
add
or
dec
xlat
lods
xchg
ljmp
and
cmp
adc
lea
pop
cmp
fimuls
sahf
and
orl
jae
xor
sub
jl
enter
pop
fs
cld
not
daa
lret
test
stos
inc
divb
jg
xor
push
dec
push
or
mov
mov
dec
add
jecxz
loope
xor
outsb
into
push
pop
mov
scas
jg
or
adc
mov
lahf
push
push
test
ja
cmovle
in
pop
loopne
je
aam
jnp
dec
loope
test
ret
adc
imul
xlat
mov
lods
out
push
push
repz
mov
lods
sbb
push
sbb
or
ljmp
mov
mov
adcl
adc
shrd
icebp
push
aas
aas
shlb
leave
pop
jne
mov
sbb
adc
fs
push
lods
outsb
loope
add
mov
xchg
js
add
out
popa
jmp
fists
lods
stos
and
xor
jp
fisubrl
fs
cmp
scas
xor
pop
mov
lret
push
push
sub
out
rcrl
das
rcll
out
push
call
aaa
bound
call
test
add
decb
cmp
mov
inc
dec
pusha
js
or
push
cmp
int
ss
les
and
nop
xor
cwtl
rorl
fistl
xchg
insl
cli
pop
jmp
jp
test
or
push
inc
push
adc
rolb
pop
cmp
cs
rclb
cld
repnz
xor
jo
mov
movsb
push
add
fcmovne
adc
addr16
mov
inc
mov
movsl
ficomps
fs
in
push
dec
xchg
pop
test
ss
jne
ret
jns
push
out
pop
cli
mov
outsl
xor
cmpl
mov
dec
mov
mov
imul
jg
sub
sbb
jp
stc
mov
insb
stc
into
sbb
nop
adc
movsb
cmp
imul
sbb
push
jecxz
or
jmp
lret
movsb
repz
rcrl
popf
push
mov
add
in
or
outsl
inc
add
cmpsl
pop
insb
sbb
add
sub
setb
shlb
jg
push
mov
sub
push
push
add
shrl
pop
mov
in
stc
loope
mov
jae
js
imul
xchg
lret
jno
inc
xchg
sub
ffreep
lds
nop
outsl
daa
mov
subb
lods
push
adc
dec
sbb
cmp
push
mov
jb
insl
stos
jno
xchg
xor
dec
in
outsl
adc
mov
stos
or
out
mov
adc
dec
pop
and
pop
fidivs
movsb
push
lods
aad
ja
pop
ss
push
dec
push
mov
arpl
jae
fs
pop
sub
lds
lods
imul
iret
xor
aad
xor
adc
xchg
inc
sti
popa
add
or
es
shll
les
aad
je
repz
cmp
test
mov
sbb
jae
pushf
mov
or
imul
js
mov
cmp
scas
jae
adc
jl
cmpl
inc
adc
inc
aam
adc
pusha
jp
lods
pop
push
sbb
stos
cltd
jo
mov
les
test
icebp
mov
pop
adc
inc
jge
push
dec
ss
inc
cs
fwait
out
sub
inc
in
insb
add
jno
mov
dec
cmove
dec
iret
fnstcw
int3
pop
sarl
pop
loop
jge
jle
aad
mov
mov
cs
adc
xchg
sub
lock
shr
adc
movsl
inc
xchg
push
hlt
pop
addr16
dec
shrb
and
and
cmp
aad
xor
pop
lahf
dec
pop
jo
aaa
call
dec
mov
les
dec
adc
mov
loop
and
push
daa
xchg
stos
fbstp
rcll
ljmp
out
call
or
push
pop
out
xor
adcl
mov
sbb
cmp
sub
adc
sti
ret
and
mov
adc
in
divb
cmp
lea
cmp
dec
jae
dec
push
inc
or
in
incb
mov
pushf
mov
and
pop
adc
mov
aad
ret
jmp
xor
loop
pop
repz
out
push
fucom
sub
fs
cmp
mov
outsb
outsb
and
xchg
lret
cld
mov
inc
or
jmp
in
sub
stc
addb
pop
ds
and
fisubs
mov
jnp
cmpsb
xor
xor
or
into
gs
xor
inc
in
push
jae
pop
xor
mov
aaa
cld
int3
arpl
stc
xlat
mov
ljmp
outsb
lods
inc
ret
add
testl
pop
xor
repnz
scas
mov
lods
mov
cld
scas
imul
stos
xchg
push
pop
icebp
jnp
or
mov
mov
push
mov
push
jno
movl
inc
cmc
mov
outsl
stos
lds
add
sub
sahf
xor
cmpsl
push
and
mov
cmp
ljmp
ja
jns
push
pusha
int3
mov
mov
push
add
push
popf
lods
filds
addr16
les
push
mov
in
das
movsb
push
xor
fisttpl
jecxz
call
movsl
icebp
sti
outsl
sub
adc
pop
xor
pop
stos
jmp
mov
jnp
in
sub
add
cmovae
push
push
les
call
mov
add
fs
repnz
cmp
pushf
ss
mov
stos
fldl
int3
in
js
scas
ret
rcrl
sub
fisubrs
push
fiaddl
popa
push
xchg
inc
push
add
xlat
sbb
inc
mov
std
sbb
xor
and
in
outsb
add
das
cltd
je
xchg
lds
mov
xor
add
repz
push
pop
cmp
cmp
xchg
cmpsl
xor
pop
inc
in
jns
mov
inc
flds
cmpsl
cmp
adc
jge
cmp
push
or
enter
in
and
adc
push
addr16
xchg
mov
mov
pop
pushf
jb
xchg
les
stos
jl
push
int
push
sub
push
js
fdivrl
dec
fstpt
cmp
inc
mov
int3
movsl
lahf
movsl
inc
pop
and
cmp
leave
xchg
cmp
inc
ja
repz
clc
and
push
push
sti
leave
sti
mov
inc
inc
jg
fsubrl
or
in
loop
int
aad
mov
jne
call
ds
insl
rcl
scas
add
int
jb
and
xchg
jl
add
cmpsl
popf
iret
sbbb
cwtl
push
inc
add
lret
inc
or
scas
gs
cmpsb
lods
int3
lret
dec
cmp
ljmp
sbb
sbb
sub
mov
xor
les
insb
out
cmpsl
mov
imul
test
adc
test
xor
lea
aaa
pop
jg
adc
out
or
xor
in
push
addb
jl
sub
cmp
adc
adc
ss
push
pop
jge
out
mov
mov
dec
pop
cmp
push
pop
shlb
jmp
or
xchg
cmpsl
dec
push
push
das
xchg
sub
repnz
aad
mov
mov
xchg
jns
sahf
xchg
outsb
jp
or
or
inc
mov
hlt
sub
leave
pushf
xor
daa
outsb
sbb
sub
stos
push
add
data16
imul
sbb
jp
out
jb
in
or
orl
inc
push
inc
pop
or
lahf
jnp
fstps
xchg
add
push
mov
mov
mov
mov
int3
std
inc
dec
fnstcw
mov
sub
xchg
popf
enter
mov
les
dec
fs
cmpsl
dec
test
cli
cmp
mov
repz
dec
aam
mov
pop
popf
adc
sbb
jns
ss
cmp
cmp
push
sbb
shrl
jle
lret
icebp
mov
pop
inc
dec
jo
fists
inc
arpl
mov
inc
sarb
xor
fidivl
dec
push
jae
pop
jg
mov
or
mov
push
out
out
sub
mov
inc
adc
jnp
pop
dec
ds
std
add
push
les
cmp
mov
xchg
pop
imul
dec
pop
sub
mov
movsb
in
inc
sbb
lds
adc
or
test
out
ror
push
jle
adc
xor
add
xor
pop
fbstp
sbbb
push
movsb
sbb
and
out
jo
xchg
push
sbb
mov
mov
jecxz
popa
insb
jle
fsubr
iret
or
mov
stos
andl
adc
or
roll
mov
or
sub
jge
mov
dec
rclb
sti
pop
cmp
adc
mov
add
out
movsb
xchg
sbb
sti
popf
mov
sbb
call
xchg
xchg
sub
hlt
scas
adc
jp
fsubrl
jae
add
adc
or
xchg
mov
adc
or
cld
pusha
imull
enter
cmp
push
push
lods
pop
or
lods
scas
xlat
scas
jno
or
stos
jge
sub
lahf
dec
test
popf
outsb
xor
stos
cld
je
in
inc
out
xor
and
outsl
sbb
inc
lea
add
or
or
lods
mov
push
mov
test
or
cmp
mov
je
dec
scas
adc
addr16
fdivrl
movsl
out
scas
xor
iret
cs
push
pusha
mov
ds
dec
pop
lret
or
dec
pop
pop
ds
jno
lods
orb
data16
cmp
insb
sti
add
mov
inc
fwait
or
int3
mov
jbe
xchg
sub
adc
dec
push
int
shl
fstpt
ret
inc
lret
push
test
jmp
icebp
mov
sarb
cmp
xorb
mov
shr
and
inc
fldt
les
stos
jmp
lock
xor
cmc
mov
push
test
sarb
xor
rcll
dec
or
inc
push
push
cmpsb
aaa
int
xor
xor
mov
insb
cmp
push
arpl
popf
pop
mov
mov
cmp
cltd
mov
out
mov
fnsave
ud1
and
mov
data16
outsl
movsb
cmp
int
or
push
clc
fcoml
xor
push
arpl
cltd
cmp
or
or
push
push
lods
inc
add
ss
and
dec
lret
mov
cs
mov
orb
push
adc
sub
jno
jle
cvtpi2ps
add
mov
fdivs
iret
and
mov
incl
mov
addr16
lods
push
jnp
popa
test
mov
xchg
add
out
or
mov
push
pop
mov
pusha
xlat
xor
jge
out
daa
mov
mov
popa
nop
ret
push
jge
repnz
addr16
ficoml
lock
push
lsl
cmp
into
add
hlt
push
dec
outsb
inc
call
xchg
xor
call
es
inc
into
xchg
mov
addb
mov
mov
pop
jle
mov
push
cmpsb
dec
lock
cmp
popf
jo
mov
lret
negl
push
push
call
cmp
xchg
cmpsb
dec
ret
mov
ret
jnp
mov
push
pop
lods
cmp
push
loope
movsl
mov
mov
xor
push
aam
in
cmp
ret
xor
cmc
lds
out
mov
inc
adc
sbb
data16
loop
or
sub
add
fsubs
and
cmpsb
fimull
xor
sahf
jae
out
rolb
add
popf
test
mov
cs
lea
in
aaa
or
push
aaa
fnsave
inc
add
insb
and
inc
inc
and
mov
xchg
sahf
sub
imull
popf
xor
outsb
outsb
or
sub
or
or
int
lods
icebp
xchg
test
mov
nop
and
cwtl
pop
xor
jecxz
jbe
push
inc
into
mov
scas
jg
jbe
adc
adc
pop
adc
push
inc
lcall
jb
dec
cmp
fs
mov
jno
push
adc
popf
insb
movsl
mov
mov
mov
mov
insl
clc
fstps
mov
je
adc
xor
jns
in
jge
fiaddl
jnp
pop
aas
xchg
adc
inc
cmp
adc
nop
into
int
add
and
fsubp
les
int3
or
es
sub
les
or
jmp
loope
cmp
and
ljmp
mov
push
push
adc
ljmp
in
stos
pop
sbb
stc
addr16
pop
iret
push
jno
les
jns
and
cltd
and
xchg
and
dec
jl
mov
jo
adc
mov
mov
arpl
sub
test
sahf
repz
nop
and
push
sub
dec
cwtl
aam
lods
jo
jno
cld
xchg
mov
pop
push
mov
aas
mov
or
jmp
cmpl
das
xor
imul
pushf
dec
ja
jle
sbb
in
ss
jmp
cmp
stc
xchg
and
mov
sbb
pop
sbb
decb
gs
jl
add
test
fisttpl
mov
inc
cmp
xor
loop
mov
pop
push
aas
and
rol
inc
andb
outsl
jge
popa
loopne
jb
cwtl
aad
jae
push
adc
jp
and
mov
mov
rcrb
adc
aam
sbb
jo
dec
ret
es
mull
stc
in
pusha
pop
inc
sub
int
jbe
mov
push
scas
or
js
sbb
daa
test
jge
mov
adc
imul
jb
lods
mov
popf
and
xchg
rol
icebp
ljmp
and
dec
call
nop
mov
and
push
insl
into
push
mov
pop
xchg
insb
jnp
and
push
mov
gs
xchg
sbb
decb
in
push
xchg
jbe
pop
xor
jns
cwtl
lds
mov
jmp
inc
sub
sub
pop
xchg
stos
sub
sbb
lahf
mov
pop
int
fidivl
or
inc
imul
fdivrl
adc
movsl
stos
adc
cmpsb
mov
bound
xlat
pop
cmp
outsb
mov
mov
sbb
lods
adc
dec
inc
stos
jno
or
push
sbbl
xchg
cs
jl
icebp
cli
mov
insb
xchg
lods
mov
inc
mov
mov
incb
adc
cmp
xchg
xor
shlb
fidivrs
add
cmp
out
test
in
daa
adc
push
pop
call
inc
out
mov
imul
pop
jle
or
cld
xchg
aas
mov
incl
cmpsb
les
push
add
jne
js
mov
mov
inc
sbb
sbb
test
imul
inc
loope
xlat
sbb
sub
xchg
pusha
scas
movsb
cmp
popf
ret
or
clc
or
lods
lret
push
in
scas
adc
stos
out
fs
xor
xor
dec
xchg
push
in
enter
imul
outsb
inc
std
jo
leave
add
scas
sub
fmul
xchg
out
int3
gs
mov
inc
out
add
lds
roll
flds
sub
jmp
aam
xor
adc
push
pop
jmp
pop
pop
cmp
push
and
mov
cs
arpl
aam
dec
rsm
cltd
cmp
push
arpl
xor
pop
pop
imul
icebp
inc
push
cmp
insl
push
lahf
or
pop
push
movsb
push
adc
dec
int
vmread
push
lods
rcrb
xor
xor
pop
sahf
and
mov
pop
fwait
in
sbb
push
icebp
insb
mov
stc
nop
clc
into
inc
test
sbb
sub
and
pop
lds
popf
and
dec
outsb
lret
pop
dec
dec
pop
orl
mov
ret
aam
int3
and
xor
sbb
push
outsb
out
add
add
or
adc
lret
cmpsl
sub
inc
dec
sub
xchg
adc
arpl
insb
sar
repnz
xchg
loopne,pt
cmp
pop
mov
shll
xchg
push
subl
adc
cwtl
bound
and
packuswb
inc
loopne
lds
inc
sub
in
push
cltd
test
popf
insb
negl
sub
push
pcmpeqd
cwtl
cmpsl
inc
xchg
test
repz
es
addr16
mov
cld
adc
mov
inc
out
test
push
or
ss
cltd
mov
mov
aaa
jp
ret
pop
pop
dec
mov
lods
jnp
cmp
and
stos
push
push
adc
xchg
push
mov
cs
push
cmp
outsb
lods
andl
movsl
test
mov
inc
and
cmp
dec
pop
mov
sbb
xorb
popa
sub
mov
xchg
sbb
jno
xchg
jne
and
mov
lock
mov
push
adc
or
xchg
fnstsw
xchg
popf
arpl
mov
xchg
repnz
push
pop
icebp
clc
mov
mov
arpl
inc
std
add
jne
xor
test
ficoms
popl
inc
pop
hlt
lods
int
mov
call
add
rcll
inc
inc
cli
shll
xchg
inc
arpl
mov
xchg
jne
in
movsl
mov
pop
adc
or
into
dec
and
movsb
push
inc
lea
push
pusha
cmp
ret
loope
out
sub
pop
sub
cmp
les
inc
push
in
mov
add
imul
arpl
insb
shll
mov
jnp
fcoms
xchg
mov
jg
and
ds
pop
mov
xor
cltd
xchg
mov
aad
mov
jb
xchg
xor
aam
mov
sbb
stos
push
shll
xchg
jbe
sub
popa
sahf
jl
mov
push
inc
in
insb
pop
push
fisttps
dec
rolb
in
push
gs
stos
je
int
scas
and
or
fldt
dec
push
mov
dec
pusha
aad
scas
mov
aaa
sbb
xlat
sbb
ss
jae
mov
pushl
cmpsb
ffreep
inc
outsl
fwait
outsl
sbb
mov
les
std
pushf
adc
mov
std
cmp
mov
out
js
lods
vmovntpd
cmpsb
cmp
mov
test
outsl
test
adc
scas
xchg
repnz
iret
fldt
popfw
xchg
lds
loopne
dec
cmpsb
test
pusha
das
xor
orb
adc
push
jp
dec
lods
dec
ret
sub
nop
pushf
bound
je
jp
mov
add
and
ja
jbe
push
jae
inc
jo
mov
sub
xchg
pop
aaa
fwait
mov
cmp
shlb
out
into
mov
and
in
aaa
xchg
pop
push
sub
and
pop
jmp
add
xor
and
sub
dec
es
jecxz
cmovbe
sub
adc
push
js
mov
outsl
test
jecxz
push
ret
imull
xor
int3
jg
push
outsb
xor
add
sbb
imul
std
stc
mov
cmpsb
int3
sbb
cmp
push
imul
jb,pn
push
pushf
jle
sub
imul
mov
pop
lret
jp
aad
scas
mov
dec
sarl
fidivrs
pop
mov
test
loopne
jae
mov
movsl
mov
adc
mov
mov
xchg
fsubr
repnz
jmp
divl
enter
lret
dec
out
pop
mov
mov
fsubrs
mov
ret
nop
add
mov
adc
into
push
xchg
cwtl
xchg
dec
jl
int
data16
out
push
enter
js
insl
mov
jmp
mov
daa
aam
jns
xchg
rcll
shlb
inc
cmpsl
iret
gs
xor
xor
inc
push
push
mov
jbe
mov
std
je
pop
push
repnz
test
call
and
push
repnz
rcl
shrb
lea
daa
or
pop
pop
hlt
repz
xchg
test
roll
clc
jae
pop
das
cmpsb
mov
add
pop
aad
out
and
outsl
js
movsl
pop
hlt
mov
in
lea
cmp
inc
movsl
in
sub
js
inc
xor
xor
lret
inc
fnsave
add
xchg
mov
jo,pt
xlat
outsb
lret
xchg
popf
sbb
enter
out
cltd
push
or
adc
push
mov
push
mov
popf
fcmovnb
cmpsl
mov
push
repnz
cmp
xor
test
inc
cmpsl
mov
push
mov
ret
sahf
addr16
adc
add
sub
cwtl
test
jle
pop
sub
insb
jle
ret
xchg
mov
shrl
dec
jns
repz
xor
jno
das
stc
ljmp
pop
inc
bound
and
das
mov
cld
inc
lcall
cwtl
test
cwtl
mov
pop
outsl
lods
cmpsb
les
jge
test
in
imul
push
js
lret
jns
or
hlt
inc
mov
lcall
test
adc
mov
movsl
push
rolb
ret
sbb
test
inc
and
and
push
mov
push
cmpsl
xchg
cmp
leave
pop
cmp
pop
mov
shrb
in
sub
push
pushf
xor
imul
popf
lock
and
sub
outsl
mov
adc
dec
mov
and
xchg
bound
jp
mov
mov
in
popf
pop
decb
mov
leave
inc
in
aam
jns
dec
out
lea
sub
repnz
in
fnsave
mov
jl
cmp
add
lods
leave
or
hlt
mov
and
mov
sbb
sahf
repnz
pop
inc
cld
mov
add
int3
pop
mov
fwait
test
cmpsb
icebp
mov
dec
mov
in
cwtl
push
pop
adc
cli
inc
xor
sbb
or
push
stos
push
jae
mov
sbb
lods
mov
and
iret
dec
mulb
stc
nop
push
xchg
xor
pop
sbb
jno
dec
push
jno
mov
xchg
mov
fwait
mov
push
dec
mov
jns
sbb
fists
jge
iret
stc
pusha
sub
leave
roll
test
or
xor
pop
adc
int
jge
fidivrl
fdivs
popa
or
pop
fdivs
xor
sub
testl
push
add
dec
xor
out
nop
mov
fstl
cltd
push
enter
addr16
test
xor
push
in
subl
es
or
xchg
push
xlat
dec
adc
mov
dec
scas
dec
aas
jns
adc
cmp
jno
loop
mov
stc
leave
imul
loopne
mov
xchg
push
lods
xchg
push
lahf
imul
cld
sbb
mov
stc
mov
or
fs
xor
bound
leave
xlat
push
jmp
adc
jo
inc
data16
sbbl
mov
push
mov
je
leave
js
jecxz
cs
sbb
dec
and
cmp
add
fwait
and
push
call
push
adc
jl
xor
xor
fiaddl
addl
rcrb
mov
pop
je
push
lods
fwait
fwait
mov
cmp
mov
bound
repnz
cs
rol
inc
and
sbb
rclb
lods
imul
xchg
clc
aas
mov
inc
push
xchg
out
sub
pusha
ret
enter
pop
and
push
popf
hlt
lret
dec
ja
scas
int
inc
out
xor
lea
mov
mov
aaa
rcrb
mov
stos
cmpsb
and
adc
scas
mov
out
lcall
cltd
xor
cwtl
imul
inc
out
sbb
jmp
stc
lea
loope
lock
cs
outsl
cs
sbb
int3
std
fidivl
lock
clc
and
imul
dec
fwait
mov
aam
pop
pop
mov
and
xor
jo
ljmp
and
lea
rclb
add
ds
pop
insl
pop
lret
adc
roll
push
jmp
aas
jle
cmpsl
scas
mov
fistps
add
jl
pop
add
mov
or
push
fs
mov
lret
push
mov
out
jecxz
mov
scas
scas
add
aaa
into
sub
pop
mov
xchg
shrb
filds
fsubr
jae
icebp
repnz
shrl
sarb
xlat
sbb
outsl
test
mov
jle
jle
orl
mov
add
cmp
leave
addr16
sbb
ljmp
shlb
pop
cmp
jns
cmc
ret
xor
pop
sub
movsb
fstps
mov
sbb
addb
pop
jb
leave
fs
dec
mov
ret
jmp
movl
clc
inc
mov
add
sbb
fmul
push
add
arpl
jmp
mov
xchg
jp
pop
mov
std
jp
inc
in
mov
int3
and
js
stc
mov
mov
or
mov
adc
shl
push
xlat
popa
clc
add
jg
das
xchg
xchg
sub
push
stc
test
push
sub
xchg
inc
fistl
mov
stc
out
cmp
inc
hlt
sub
fldcw
inc
test
lret
pop
mov
dec
cmp
jnp
mov
ficompl
ret
scas
scas
jmp
or
stos
push
jae
mov
hlt
enter
mov
ret
ret
lock
shll
or
or
pop
in
bound
loop
ds
call
jne
xor
ja
out
stos
push
rcll
or
out
sti
add
xor
mov
push
inc
jp
ja
je
std
sbb
addr16
add
inc
fildl
mov
decl
fnstenv
or
xchg
mov
pop
xchg
pop
inc
or
pop
sub
push
clc
fwait
mov
add
jb
cmp
notl
out
fwait
xor
int3
pop
sbb
fs
int3
mov
lods
mov
mov
sbb
mov
imul
cmc
mov
lds
mov
ds
fcmovu
ss
in
mov
dec
xchg
mov
inc
push
cs
inc
fbld
mov
adc
pop
cmpsl
jae
pop
and
sahf
or
std
sub
mov
fisubl
push
addb
repz
inc
push
movsb
dec
mov
mov
sbb
mov
push
loopne
and
outsl
loop
lret
cmp
js
xlat
xlat
cmp
or
adc
add
cld
xchg
xchg
xchg
jecxz
push
hlt
mov
cmp
aaa
into
out
insb
pop
popf
adc
andb
ljmp
pop
in
ret
cmpsb
xor
out
push
sub
pushf
lea
xor
in
stos
daa
rcll
sub
movsl
or
lds
movsb
stc
fucom
push
lock
pop
xor
xor
xchg
mov
mov
dec
mov
in
cld
notb
scas
arpl
std
sub
testl
ficoms
test
js
ljmp
inc
jnp
inc
fsub
and
pop
rorb
test
push
xchg
ja
pop
aaa
shrl
pop
cmpsb
and
jmp
mov
aad
mov
jecxz
xchg
subb
sub
lret
pop
xchg
jmp
sbb
aam
shl
sahf
jno
repz
rclb
or
icebp
cld
xchg
daa
ja
lock
sub
sbb
mov
pop
call
ftst
jnp
lock
icebp
jno
lds
cmp
rolb
or
outsb
jno,pt
dec
or
add
lret
cld
pushf
mov
mov
les
lods
dec
loop
xchg
clc
xchg
subb
push
jg
cmpb
mov
adc
aaa
mov
mov
push
lcall
cmp
push
loope
pop
fucomip
cmp
dec
and
inc
sub
mov
stos
adc
fdivl
rclb
loopne
cli
mov
mov
fidivl
ljmp
jno
js
mov
out
dec
test
jbe
daa
xor
mov
mov
ret
sub
int
rorb
mov
sub
mov
imul
sbb
ds
xor
add
jmp
dec
lahf
int
jle
clc
inc
stos
adc
cltd
and
scas
jmp
sub
enter
pop
jecxz
mov
mov
call
cmp
cld
adc
add
ficomps
hlt
cmp
pop
movsb
lods
dec
xchg
jmp
dec
lahf
insl
or
mov
cmpl
mov
mov
adc
rcr
mov
xchg
jg
mov
push
nop
mov
ret
adc
into
outsl
test
mov
ret
insl
jbe
imul
scas
cli
iret
mov
add
jns
andb
popa
dec
and
push
sub
jno
push
mov
jns
into
sub
jns
sub
repnz
call
cmp
rcrb
push
testb
inc
push
inc
inc
inc
and
cmpsl
push
push
mov
dec
repnz
mov
adc
repnz
xor
fldt
lret
rolb
pop
sti
inc
in
lds
scas
push
ficoml
iret
pop
in
jmp
out
cmpsl
xchg
testb
push
mov
fs
mov
inc
fs
dec
jmp
rcl
icebp
adc
in
jno
cmpsb
adc
push
adc
iret
pop
daa
adc
xor
sar
jle
mov
dec
loope
sti
pop
sub
test
loopne
pop
in
xchg
imul
push
cmpsb
mov
dec
sbb
movsb
dec
rolb
popf
add
fildll
sti
cltd
cmp
test
iret
mov
add
mov
adc
jge
mov
insb
int3
mov
insl
shlb
mov
pop
push
or
jle
lods
addb
out
je
pop
pop
mov
lods
pop
push
cmp
push
movsb
jecxz
je
mov
lds
mov
cld
sbb
xor
enter
popf
cmpsb
cmp
outsb
outsb
out
jno
and
nop
mov
inc
cmp
cmp
jbe
mov
hlt
add
flds
mov
push
lahf
inc
push
mov
sbb
jns
jno
and
pop
test
cmp
jb
call
adc
jno
sub
mov
into
pop
adc
sub
test
add
xchg
stos
sub
fisubl
subl
mov
lds
inc
adc
leave
lcall
inc
inc
sbbb
jbe
cmp
icebp
jns
hlt
pop
pop
aad
pop
xchg
mov
sbb
pop
int
jb
sub
push
dec
add
cmp
push
aad
sbbb
sub
lea
lcall
pop
mov
jecxz
negb
xor
daa
lods
aas
mov
or
scas
mov
jns
xchg
xchg
xchg
test
hlt
dec
fisttps
outsb
inc
inc
lods
inc
js
repnz
lds
icebp
sbb
push
mov
xor
lods
fadd
ds
mov
outsb
dec
cmp
lds
in
jnp
jp
daa
and
xchg
push
pop
mov
popa
dec
mov
dec
mov
fwait
xchg
stos
movsl
cmp
pop
lock
dec
fisttps
std
pop
les
lret
inc
pop
cmpsl
cmp
test
nop
sub
sub
es
in
pop
sub
cmp
mov
cmpb
sbb
ret
filds
leave
xor
lret
cwtl
out
adc
popa
pop
fisubl
vpmaddwd
push
dec
adc
fstpl
cmp
cmc
mov
push
dec
mov
ja
mov
pop
cmp
or
ret
sub
push
test
hlt
sbb
dec
jl
pop
insl
mov
jns
jle
cmpsl
push
mov
pop
xor
mov
adcl
pop
popf
xor
add
xchg
popf
inc
leave
push
dec
flds
rorl
push
rcll
cmpsl
xchg
int
or
mov
push
out
inc
in
or
cmp
xor
mov
int
pop
bound
push
or
and
fiaddl
push
push
sbbb
push
divl
outsb
rcrb
dec
aaa
ja
ja
std
iret
fistpl
cmpsl
mov
jge
arpl
es
in
dec
inc
mov
aam
inc
out
pop
aaa
repnz
lret
cmp
pop
dec
jle
jmp
in
jl
xchg
xchg
mov
mov
sti
pop
inc
mov
adc
pop
mov
addr16
mov
out
jecxz
out
mov
sub
sbbb
subl
mov
adc
cmpsb
fistl
xchg
popa
mov
lcall
sbb
daa
int
jae
dec
arpl
mov
inc
test
pop
xorb
mov
add
decl
scas
xchg
les
movsb
cmp
add
pop
add
xchg
pushf
and
mov
mov
lods
lods
push
sbb
rcrl
adc
xor
in
test
mov
nop
dec
jmp
dec
jecxz
imul
movsb
shrl
mov
enter
ret
addr16
adc
jl
pop
mov
aas
loopne
mov
pop
and
loope
aaa
outsl
ret
sub
rclb
imul
jnp
xchg
lret
bound
jmp
sub
push
test
mov
jmp
jns
dec
dec
lds
ja
loop
or
int
jge
mov
fsubl
sub
repz
cltd
and
push
ljmp
insb
leave
stos
or
push
inc
sbb
imul
push
sbb
jmp
pop
xor
dec
pop
imul
push
xor
mov
roll
insl
and
push
sbb
fstps
sbb
push
dec
lock
pop
repz
stos
dec
lahf
jb
push
mov
inc
es
lds
imul
jmp
and
nopl
fldenv
cwtl
mov
punpckhdq
adc
lcall
or
inc
cmp
outsb
aas
and
cmpxchg
inc
xor
jbe
xor
cmp
out
add
movsl
sbb
sub
lea
ljmp
push
dec
callw
xor
rcrb
fcoms
sbb
movsl
js
push
jns
xchg
push
sub
add
cmp
and
cltd
jge
loope
rorl
push
lcall
cmc
inc
imul
mov
dec
popa
clc
cmp
cmpsb
fists
push
jmp
mov
idivl
inc
aam
aam
mov
inc
aam
cmpsb
cmp
push
jnp
imul
std
fcomps
mov
lahf
push
mov
in
stos
xchg
aad
int
sub
pop
orb
imul
ficompl
scas
cmp
mov
out
add
cmp
scas
addb
xor
inc
pop
pop
inc
cmpsb
mov
orb
mov
add
andl
pusha
mov
and
into
push
adc
pusha
pop
mov
jle
inc
jecxz
cmp
stos
dec
sbb
ds
jmp
jnp
lods
sbb
pop
dec
arpl
inc
arpl
mov
sbb
push
push
shl
jns
pop
mov
lcall
push
testb
xchg
stos
inc
cmp
xor
in
imul
xchg
fwait
mov
ret
push
dec
mov
daa
outsb
jl
dec
xchg
add
sti
test
repnz
add
cmp
mov
sbb
subb
popf
ss
ror
ja
jo
test
xor
or
mov
or
enter
sub
not
adcb
sahf
and
jmp
push
out
adc
inc
fs
shr
clc
sub
mov
add
mov
xor
pop
movsl
dec
mov
inc
into
test
push
inc
stos
popa
ja
cli
jbe
int
sbb
mov
mov
outsb
adc
adc
jmp
shl
add
inc
or
stos
dec
andb
jl
andb
rcll
sub
cli
dec
xchg
jle
mov
jns
sbb
enter
test
mov
jnp
add
pop
inc
arpl
popf
scas
or
in
add
sti
stos
mov
push
add
rcll
xchg
out
cmpsl
cltd
movsl
gs
mov
xchg
inc
orl
inc
jns
jg
cmpsb
inc
enter
loope
jp
cmp
mov
jno
nop
dec
xor
divb
outsb
mov
gs
push
lods
in
inc
dec
call
stos
mov
xor
xchg
add
int
jo
out
leave
adc
add
mov
dec
xchg
inc
inc
xchg
aam
or
ljmp
sbb
lret
cld
test
mov
ret
out
mov
aas
testb
xlat
add
xchg
mov
ret
sbb
sub
ret
repz
or
repz
scas
pop
ret
mov
lahf
push
mov
jge
shrb
rcrb
icebp
dec
pushf
arpl
aad
mov
scas
mov
das
and
lret
scas
inc
and
dec
pop
das
ret
outsl
iret
into
jnp
push
test
in
push
adc
inc
push
js
mov
xchg
push
lea
mov
sti
sub
mov
cld
cld
xorb
dec
inc
cmc
mov
dec
test
ja
out
sub
pop
jno
mov
sbb
scas
mul
mov
jb
xchg
push
mov
jb
jge
inc
xchg
ret
out
xchg
sbb
call
add
jecxz
sahf
sbb
jno
push
xorb
mov
add
push
mov
push
insb
js
fcomps
cmp
mov
xorb
or
mov
dec
sahf
xor
dec
and
cld
and
jb
sbb
mov
pop
bound
scas
imul
jmp
adc
mov
jne
mov
push
sub
loop
setle
out
dec
ljmp
mov
stc
stc
nop
lds
rcr
in
mov
je
xor
push
sahf
mov
cli
das
or
fsub
mov
dec
arpl
adc
jb
iret
pop
lods
lods
add
mov
les
shll
sbb
pop
lea
and
xchg
sbb
call
movsb
ds
testb
xor
pop
ret
add
inc
lahf
into
push
data16
lods
ljmp
gs
pop
addr16
mov
or
lret
sbb
xor
cmp
cmp
repnz
mov
or
das
cmpsb
outsl
and
aam
add
mov
adc
mov
or
dec
ror
scas
lock
sahf
pop
in
test
dec
xchg
add
adc
sub
or
cvttps2pi
cmp
pop
jge
sbb
sbb
or
push
sbb
mov
sub
je
pop
dec
mov
in
jb
mov
adcb
leave
mov
lock
push
jbe
mov
into
xor
jmp
pop
fisubl
jnp
xchg
insl
pop
jne
pop
into
popf
or
outsl
push
cli
mov
push
pop
pop
call
cltd
sub
xchg
repz
ret
pop
xchg
jge
pop
sub
mov
xchg
out
fists
xor
jns
aad
sahf
push
pushf
xor
ss
xchg
cmp
jae
inc
jb
add
cwtl
pop
sti
and
xor
fbld
vmwrite
mov
imul
repnz
dec
das
dec
add
xor
lahf
jmp
adc
inc
dec
inc
in
mov
shll
xor
test
fnstcw
add
fisttpll
add
pop
outsb
mov
das
inc
idivb
and
movsb
or
mov
push
mov
or
mov
jp
dec
outsb
mov
sbb
clc
into
xchg
push
jecxz
mov
sub
imul
inc
incl
clc
mov
and
sub
sbb
xchg
xchg
hlt
cmp
scas
fidivl
mov
adc
fdivl
xchg
or
shl
adc
mov
jo
jns
stos
scas
icebp
lahf
push
scas
inc
xor
jne
stc
push
js
pop
mov
imul
xlat
int
mov
pop
into
hlt
pusha
mov
push
ret
push
in
repz
jne
rcrl
fbstp
push
sti
ja
jno
rorb
push
aas
dec
shlb
or
xchg
dec
test
in
or
add
lock
pop
testl
repz
cmpsb
mov
xchg
mov
or
outsl
shrb
arpl
mov
les
int
jl
cmp
cs
call
xor
pusha
mov
in
clc
mov
ds
ds
mov
sub
repz
in
loop
cmovge
mov
scas
mov
push
popa
int3
lret
mov
mov
sbb
jb
in
stc
js
xlat
sub
pop
pop
ss
es
ret
add
imul
dec
gs
sub
lret
cmc
adc
pop
movsl
xchg
dec
imul
push
inc
xchg
out
and
pop
push
ja
xor
mov
addl
ss
sbb
jp
mov
shl
push
shl
lea
sbb
pop
add
cmp
fwait
out
inc
mov
inc
pop
insl
imul
xchg
push
sub
enter
pop
icebp
leave
dec
add
das
jo
popa
imul
xchg
iret
pop
xor
dec
loope
inc
jmp
xchg
fadds
cld
daa
leave
xor
shlb
inc
mov
outsl
push
js
push
sub
mov
jl
add
pop
inc
scas
cmp
dec
pop
jl
lods
xchg
es
test
loopne
jle
mov
sbb
cltd
xchg
add
sub
dec
shll
ds
fcmove
fs
pop
jmp
in
push
inc
mov
ret
mov
dec
and
sub
aad
xor
jno
sbb
ret
mov
adc
testl
push
cmc
and
xchg
and
test
cwtl
js
pushf
stos
adc
inc
ja
or
subl
sub
rcrl
pusha
mov
cmc
jne
andb
lret
mov
outsl
push
push
int3
nop
push
ret
and
int
stc
inc
lods
pop
repz
insl
add
leave
sarb
or
pop
nop
imul
mov
push
push
out
xchg
lea
les
and
xor
adc
pop
adc
or
loop
and
aam
fdivr
inc
test
ljmp
in
mov
jnp
mov
jge
mov
loope
jle
cmpsb
fwait
popf
dec
and
push
jo
cmpsb
aam
jae
sbb
test
data16
das
pop
dec
dec
test
lcall
data16
pop
repnz
test
arpl
rorb
shll
mov
xchg
pushf
insl
sbb
movsl
cmp
push
cmp
inc
mov
mov
push
andl
data16
mov
mov
das
pop
stos
mov
inc
aad
cli
call
xchg
sti
nop
lcall
xchg
pop
cpuid
rolb
mov
test
xor
pop
cmp
lods
imul
cmc
into
fdivrl
fsubl
dec
mov
add
notl
or
push
sbb
outsb
pusha
mov
ljmp
out
bound
sti
jbe
and
sub
mov
paddw
pop
mov
les
iret
jne
mov
jns
cmp
xchg
pop
mov
adc
dec
in
xchg
push
jmp
mov
inc
popa
clc
jae
aam
jg
std
inc
dec
mov
pushf
scas
pop
enter
inc
pop
lods
incl
cmp
xor
jge
xchg
insl
push
sbb
cmc
adc
ds
stos
iret
data16
leave
and
scas
add
adc
outsb
xor
test
lock
and
setp
cmc
fwait
xchg
cli
subb
outsl
int
jle
cltd
stc
mov
lods
mov
mov
mov
cmpb
in
fucom
das
sarb
push
or
loop
in
pop
add
test
mov
mull
adc
hlt
lret
jg
jno
xor
and
jge
mov
fistpl
mov
xchg
cli
scas
inc
xor
aam
sub
ljmp
xor
or
test
push
adc
xchg
sbb
inc
cmp
sbb
mov
dec
aas
adc
mov
lds
mov
or
loopne
pop
fists
xor
call
jmp
xchg
adc
jb
lock
nop
sub
mov
insb
testl
lret
and
test
xchg
bndstx
mov
sbb
cli
xchg
out
sub
inc
pushf
xor
xchg
dec
add
in
orl
pop
popf
mov
adc
push
jecxz
icebp
inc
movsl
push
xchg
mov
cmp
and
loop
pop
mov
hlt
mov
popa
andl
ret
mov
mov
mov
leave
pop
lods
rcl
push
adc
ja
pushf
fs
mov
mov
lock
fcoms
mov
sbb
push
shlb
jne
aad
loop
jb
inc
fwait
xor
jbe
pop
xor
push
loope
lods
incb
and
out
xor
mov
imul
add
jae
scas
nop
jae
add
and
push
jne
mov
sbb
pusha
mov
pop
daa
es
jle
pusha
daa
ljmp
push
aam
shlb
inc
push
cltd
jno
loopne
cmp
lcall
inc
pop
or
or
aad
add
shrl
repz
pop
fldl
sahf
adc
pop
data16
xchg
cwtl
jle
outsl
mov
fiadds
sub
push
pop
cmp
and
adc
popf
and
stc
cld
outsl
out
dec
mov
jno
xor
inc
testl
in
push
in
insb
lds
insb
iret
enter
mov
into
outsl
xor
or
xchg
mov
inc
popa
fs
xchg
iret
popa
pushf
or
das
cltd
je
lcall
lock
rorl
into
jl
add
push
jae
inc
push
jae
jns
test
mov
and
cmpsb
fnstsw
cmpsb
int3
xlat
insl
ljmp
scas
lret
push
adc
arpl
mov
mov
pop
dec
aam
out
test
xchg
jl
loop
xchg
push
into
adc
xor
pop
inc
ficoms
mov
pushf
cltd
or
sbb
ljmp
ret
fimull
mov
sahf
add
xor
dec
inc
or
xchg
and
stos
aas
ljmp
adc
jle
mov
mov
pop
cmpsb
mov
loopne
leave
xchg
jns
mov
cmp
imul
xor
sub
fidivl
shl
jg
or
aad
xchg
push
in
sahf
or
jb
and
insb
add
idivl
test
pop
dec
dec
xor
mov
pusha
mov
testb
ja
push
xor
jmp
cmc
sbb
mov
sbb
enter
xchg
test
jb
bound
mov
popf
jg
outsb
xchg
cmp
loope
mov
outsl
nop
shrl
insl
jns
out
stos
mov
pop
arpl
sbb
adc
ret
insb
adc
mov
repnz
inc
cmp
pop
popa
popf
push
jb
in
sub
and
push
or
cmp
push
push
in
dec
push
pop
xchg
or
lahf
cmp
push
dec
push
insl
and
jle
clc
sub
pop
push
adc
cmpsb
les
rcrb
xchg
insl
ds
mov
jg
sbb
xlat
fldt
mov
mov
inc
scas
pop
lahf
fistl
das
sbbb
mov
negl
fs
and
cld
aam
test
lret
xchg
movl
push
lcall
cwtl
insb
adc
ja
push
push
xor
jne
sub
cltd
jno
xchg
mov
push
cltd
xor
mov
out
aam
or
sbb
jnp
and
popf
cmpsl
fiadds
jmp
mov
popf
xor
loopne
mov
mov
inc
insb
sbb
stc
add
fstpt
test
shr
jns
adc
push
jno
lock
test
inc
enter
sbb
inc
sbb
fstpt
scas
test
scas
imul
sub
ss
test
push
pop
je
filds
sahf
cmpsl
xchg
cmp
int
xor
push
mov
int3
cld
mov
cltd
add
das
push
xor
imul
jmp
cwtl
push
sbb
leave
mov
mov
inc
mov
cwtl
mov
push
jg
mov
mov
cwtl
add
adc
pusha
addb
clc
insl
lret
addr16
and
in
xor
mov
sbb
scas
push
and
push
mov
dec
mov
ret
pop
stos
sahf
mov
sar
outsb
scas
push
pop
hlt
jp
mov
aaa
dec
sub
jnp
leave
int
test
mov
sub
pop
repnz
cmp
test
test
negb
push
dec
push
and
mov
push
ljmp
xchg
ja
jl
mov
jne,pn
mov
xchg
xchg
lahf
sub
faddl
movsb
mov
xchg
mov
sub
outsl
xchg
push
in
push
shrl
js
cmpl
push
mov
stc
mov
shl
push
movsb
adc
mov
fidivs
lret
fnstenv
mov
int3
xor
adc
inc
insb
xchg
jl
ret
lock
push
add
ja
popf
popa
mov
iret
and
sub
or
es
pop
clc
mov
xor
stos
pusha
fildl
mov
ss
mov
pop
cmp
dec
fwait
lods
popf
mov
mov
fisubrl
push
mov
sub
xor
icebp
repnz
ja
das
mov
lahf
mov
push
and
cwtl
inc
xchg
iret
inc
imul
dec
dec
mov
pop
and
mov
out
xchg
inc
add
lret
mov
mov
in
mov
mov
mov
pushf
mov
bound
inc
idivb
pushf
loope
sahf
mov
xor
cmpsl
mov
icebp
dec
mov
pop
or
xchg
push
sbb
push
inc
mov
mov
fbstp
jns
ja
push
and
jecxz
shr
test
cmp
out
lods
push
mov
lods
mov
adc
in
push
lds
jg
cmpsb
imul
inc
pop
push
nop
mov
dec
aas
loope
cmp
mov
loopne
lret
adc
popa
lods
pop
shrb
pop
jb
ret
arpl
push
push
test
push
cmp
out
jl
in
stos
movsb
lods
hlt
stc
xor
movsb
lahf
pop
mov
jg
mov
push
sbb
fdivrs
xor
jl
push
add
lea
int
xor
cmc
dec
loopne
adcb
aam
lea
or
rcll
and
fucomp
mov
divb
xor
jno
imul
test
pop
mov
fbld
fidivl
out
movsl
cwtl
mov
or
bound
enter
mov
fdivr
pop
femms
repnz
insb
inc
jge,pn
in
repz
in
lret
sbb
cmp
pushf
mov
jle
gs
ds
inc
sarl
push
test
ret
lea
lret
stos
in
sarl
inc
push
out
addr16
inc
jle
mov
inc
pop
cmpsb
shrl
mull
dec
push
jp
jecxz
std
iret
inc
add
dec
mov
or
lea
cli
cmp
mov
push
dec
pop
jbe
push
test
insb
outsb
adc
and
pop
out
mov
scas
mov
fimuls
and
and
and
sbb
push
sbb
fmull
or
pop
mov
inc
mov
lds
out
mov
leave
out
daa
mov
aad
mov
pop
repnz
aas
dec
mov
add
jno
xor
jns
jle
aas
cmp
out
in
rorb
pop
jbe
fwait
dec
pop
sar
xchg
std
aad
pop
add
imul
int3
call
outsl
or
das
icebp
or
and
sbb
adc
fbld
lret
out
xor
lret
lahf
leave
xchg
adc
sti
enter
cwtl
icebp
pop
push
notl
xor
jl
xor
xchg
push
pop
xor
rcll
add
popf
xor
dec
xlat
and
incl
out
fldl2t
mov
shll
popa
jge
int3
and
scas
jg
push
or
sbb
pop
push
sbb
aad
push
push
fs
xlat
inc
mov
mov
sub
add
cmp
insb
adc
out
mov
adc
dec
sbb
jnp
jg
pop
pop
rorl
jne
insb
es
or
mov
sub
test
xchg
cmc
mov
aaa
or
mov
mov
sub
mov
je
push
gs
pop
je
shll
cli
pushf
dec
and
inc
into
sub
mov
push
fbld
push
cli
popl
repz
insl
fcoml
xor
jne
push
cmpsl
cmp
repnz
call
push
out
or
sti
call
repnz
jb
mov
out
ds
push
out
insl
dec
in
pop
xchg
sub
xchg
imul
and
sbbl
leave
dec
mov
aad
pop
into
push
pop
xlat
repz
xchg
mov
fs
adcl
cmc
testb
lret
leave
cmp
jnp
cmp
arpl
cltd
int
fs
jmp
push
fstps
sub
mov
data16
stc
fucom
mov
cmp
sub
mov
test
aam
sbb
out
test
outsb
inc
fcompl
cmpsl
out
cmp
or
in
xor
daa
mov
loop
lret
cmp
lock
int
jecxz
push
fwait
dec
adc
insl
push
sbb
mov
xchg
inc
sbb
mov
mov
aad
pop
out
addr16
jecxz
lret
inc
les
or
xor
inc
mov
xchg
or
mov
shr
sbb
pop
imul
dec
push
mov
inc
jp
or
nop
push
fistps
mov
cmpsb
rclb
cwtl
xor
and
push
cmpsl
mov
mov
imul
cld
out
popf
repz
cwtl
lods
push
aad
das
in
jb
ss
dec
bound
cmp
xor
pop
jo
xchg
in
pop
xchg
inc
xlat
test
lret
pusha
sub
std
rolb
jno
je
mov
mov
aaa
jae
inc
test
fwait
test
in
les
add
push
sbb
cmp
mov
ret
pop
lahf
add
push
jl
pop
xor
push
push
xchg
test
xchg
out
insl
cld
int
inc
pop
or
dec
inc
insb
xlat
mov
add
test
xchg
jb
sahf
faddl
add
imul
mov
mov
hlt
pop
and
inc
sbbl
fsub
ja
shrb
or
inc
xchg
icebp
ret
lea
mov
cmp
pop
movsb
daa
cmp
adc
pop
in
outsl
jecxz
pushf
or
cmp
mov
and
sbb
out
dec
iret
inc
pop
sarl
sbb
cmp
mov
and
or
mov
stc
ror
adc
in
lret
lock
adc
hlt
push
jmp
inc
ret
out
jmp
stos
sub
test
add
mov
mov
dec
sbb
jmp
or
in
sahf
das
xchg
mov
xchg
stos
fyl2x
roll
cli
dec
mov
cmp
and
jae
popf
stos
mov
xor
into
fs
pushf
out
sub
mulb
leave
fistl
lds
sbb
pop
shrb
sahf
mov
cltd
js
shll
adc
push
or
sbb
mulb
pop
jmp
lea
ficoms
loopne
and
pop
mov
cmp
xchg
sahf
or
les
jp
inc
test
xor
out
push
mov
fidivs
pop
mov
mov
arpl
jb
fnop
aas
andb
jge
mov
mov
lock
insb
imul
scas
adc
jp
sbb
rorl
fwait
sub
insl
mov
xchg
add
pop
mov
cmp
sbb
insl
cmp
hlt
push
mov
lret
andl
cmp
cmp
nop
stc
ret
mov
imul
mov
in
push
cmpsb
add
adc
mov
arpl
pop
push
mov
insb
mov
insb
outsb
jp
or
jbe
insb
test
sbb
xchg
adc
pushf
enter
add
jo
sbb
sbb
out
lock
sarb
movsl
in
push
mov
lret
scas
pop
jmp
and
mov
clc
mov
mov
addr16
out
add
cld
mov
lods
into
jbe
pushf
cs
push
test
enter
fwait
adc
lret
rcrl
pop
sbb
pushf
add
fnstsw
test
xchg
scas
fidivrs
xor
sub
test
push
mov
mov
pop
mov
mov
xchg
dec
xchg
aas
das
fidivs
and
dec
jno
xor
push
pushf
aad
shld
sbb
inc
lods
pop
mov
xlat
xchg
push
add
xorb
rcrl
fsubr
stc
and
inc
cmpsl
jecxz
inc
cmpsl
inc
cmp
movsl
mov
call
xor
adc
and
push
test
or
ds
add
adc
dec
leave
stc
outsb
push
push
loopne
xor
iret
mov
inc
inc
mov
out
data16
idivl
test
jge
daa
sarl
and
pop
cmp
dec
in
or
lahf
aad
repz
sbb
sub
shrb
rcrb
in
into
sbb
into
cmp
sbb
mov
and
jb
rcl
ret
jp
cs
cmp
inc
call
adc
stos
aas
pop
xor
push
sub
mov
daa
mov
jmp
mov
fxch
stc
lock
ret
push
jne
inc
push
mov
mov
mov
adc
iret
cmpsb
jb
sbb
scas
cmp
loope
push
test
cmpb
addr16
jp
fstl
ljmp
insb
stos
js
popf
xor
leave
sub
repnz
lds
mov
pop
mov
dec
lcall
decl
and
scas
sbb
out
imul
addr16
lahf
inc
les
test
lods
insb
in
inc
push
inc
adc
shll
push
mov
rcrl
sti
addr16
imulb
int3
fwait
pop
rcll
jb
popa
out
gs
mov
lahf
lds
sti
inc
imul
fisubl
and
leave
sti
sbb
jecxz
add
in
dec
call
test
sbb
shlb
out
sbb
test
cmc
xchg
dec
pop
jecxz
add
lret
mov
sub
mov
or
mov
repnz
out
adcb
mov
or
xor
out
movsb
popf
bound
sahf
jecxz
inc
icebp
mov
dec
jmp
rclb
icebp
pcmpgtw
insb
jp
int
movsl
adc
xchg
inc
xchg
loope
mov
shrb
pushf
jno
hlt
sbb
cmc
cmp
rcrl
xor
fwait
xchg
mov
pop
mov
in
jp
pop
sub
test
xor
sub
clc
dec
mov
xchg
cmp
test
andl
xchg
mov
lds
pop
adc
mov
mov
enter
push
fwait
imul
xsha1
cmpsb
int
pop
mov
xor
rcll
xor
add
adcb
je
divb
jae
clc
sbb
add
aas
mov
mov
sub
jp
mov
xor
pop
icebp
push
rolb
adc
movsb
fwait
gs
cmp
add
sbb
push
leave
and
cld
xlat
sub
iret
lods
fwait
hlt
pop
mov
and
and
sti
test
scas
jb
and
pop
sahf
push
je
inc
lods
push
rcll
pop
or
jno
xor
daa
jp
adc
fwait
scas
inc
int
cmc
mov
pop
dec
or
out
fmuls
xchg
sub
fwait
ds
xor
lods
inc
call
cmpsl
jbe
pop
mov
std
sbb
push
or
sarl
add
jnp
sti
in
mov
xchg
jae
jg
add
jo
sub
ljmp
inc
push
fmulp
fisubl
int
mov
jmp
loopne
clc
cmc
cwtl
sbb
push
inc
mov
mov
push
ljmp
jno
mov
xlat
jbe
mov
int
shrb
or
aam
cld
xchg
repnz
imul
pop
mov
sarb
rorl
ret
adc
jecxz
outsb
push
andl
popl
ret
mov
popf
adc
movsl
sbb
jle
push
cmpsl
jmp
pop
mov
lods
nop
and
scas
xchg
adc
xchg
inc
cmovnp
sub
js
lods
sub
mov
adc
das
pushl
sti
subb
ljmp
pushf
add
loope
mov
stos
lea
jns
xchg
xor
ret
jbe
mov
dec
adc
jge
and
pusha
inc
mov
jno
movsl
push
fdivrs
testl
jbe
lea
mov
fs
insl
jg
mov
adc
popf
xchg
mov
mov
pop
int3
cmpsl
insl
inc
fldln2
out
sub
lea
lcall
cmp
sahf
orl
insb
mov
sbb
and
jae
adc
imul
int
fs
sbb
mov
mov
dec
pusha
das
out
pop
xor
popf
dec
aas
stos
sub
shl
and
cld
and
ror
add
in
sbb
test
outsb
mov
mov
cmc
add
mov
mov
lret
adcl
adc
jecxz
jno
add
in
addr16
and
mov
push
or
push
aad
and
inc
sub
xlat
pop
xor
sbb
movsl
sbb
xchg
mov
jns
push
lds
cmp
xchg
mov
adc
pusha
pop
jecxz
lds
mov
mov
add
rol
sub
fmulp
pop
mov
cmp
xor
jo
jbe
frstor
icebp
arpl
pushf
cli
inc
add
pop
and
jle
sbbb
or
leave
aam
out
mov
fsubrl
pop
cmp
jecxz
fisubrl
in
pop
cmp
mov
lret
add
pop
test
pushf
xchg
cld
fldenv
test
repz
pushf
add
and
shll
jae
sbb
pop
xor
fst
and
mov
decb
xor
jp
mov
sbb
rorb
repnz
lods
dec
pop
adc
mov
xor
inc
add
pushf
popa
xchg
push
add
fidivrs
mov
jmp
inc
dec
add
ds
mov
jmp
adc
jg
dec
clc
push
push
xchg
dec
mov
fnstenv
push
cs
mov
andb
push
lds
xlat
adc
sub
cmp
cmc
mov
xchg
fisttpl
cmp
sub
push
lods
faddl
sahf
or
xchg
shl
inc
inc
cmp
mov
les
lret
ljmp
je
enter
fcoms
fs
stos
inc
xchg
jbe
adc
int3
cmp
add
dec
mov
xchg
cmc
lea
out
fcomps
rcrl
rol
cmp
shl
lea
xor
adc
ror
sub
loopne
or
jbe
fsubs
mov
mov
out
adc
sti
ja
shrl
test
lods
mov
cmc
mov
pop
int3
pop
pop
es
sub
es
sbb
mov
flds
out
and
ficoml
dec
insl
insb
ja
jecxz
fwait
mov
sub
shll
mov
scas
shrb
call
fbld
cs
push
out
push
mov
mov
imul
pop
ljmp
inc
inc
fwait
int
jmp
jg
sti
sub
jle
sbb
mov
jnp
je
test
xchg
cld
fxch
cmpsb
in
mov
mov
or
fnstenv
or
test
push
mov
push
imul
mov
jbe
scas
cld
mov
repnz
sbb
sbb
pushf
test
push
sarb
je
sub
sahf
call
xor
adc
lods
sub
sub
pop
cmpsl
pop
jg
xor
mov
mov
movsl
and
lods
fwait
xor
inc
inc
or
pop
fisttps
dec
iret
mov
sbb
flds
test
mov
lds
fiadds
sub
mov
out
push
sti
dec
or
fisubrs
xlat
mov
addr16
pop
dec
daa
push
adcb
inc
sub
test
fistps
sbb
lretw
push
or
and
xchg
movsl
or
xor
test
aas
fldt
mov
jae
arpl
and
popa
xchg
pop
pop
sahf
push
mov
and
jno
test
stos
adc
addb
ja
insl
pop
or
int
cmc
daa
test
xor
inc
push
js
seto
lods
leave
sti
push
std
mov
xorl
test
xchg
inc
cmp
enter
ljmp
jno
sbb
lea
cmpsl
xchg
pop
sbb
incb
xor
dec
jge
les
inc
xchg
lock
cmp
js
mov
push
mov
xor
jne
aam
xor
outsl
aad
jge
inc
out
dec
mov
cmp
lea
pop
movsb
lret
ljmp
lods
out
sbb
dec
push
or
incb
fistpl
ret
jmp
xor
cmp
pop
jge
sti
mov
dec
scas
adc
jmp
and
fsubrl
pop
sti
adc
mov
rcl
test
adc
dec
mov
repz
outsb
mov
pop
test
dec
jb
outsl
test
sti
scas
mov
and
add
and
mov
dec
aad
ss
mov
shlb
xchg
or
stc
scas
jae
pop
ret
cmp
cld
mov
shrl
pop
stc
xchg
dec
add
ljmp
or
int
loopne
stc
cmp
lods
jmp
addr16
pop
shll
xchg
lods
popa
jecxz
popf
xchg
push
or
test
inc
ficoml
les
lods
inc
cmc
push
shlb
out
arpl
lds
sub
popf
and
push
loope
or
xor
xsha256
cmpsb
adc
gs
aad
dec
mov
pop
sti
loope
sub
lahf
shlb
icebp
daa
stos
jae
cltd
into
adcl
cmp
push
xchg
mov
es
jbe
cmpsb
xchg
addr16
xchg
mov
jo
mov
xlat
mov
inc
enter
and
pop
adc
or
callw
pop
ljmp
pop
test
outsb
lods
lds
mov
lahf
xchg
mov
mov
pop
mov
pop
stc
test
xchg
rolb
sysexit
movsl
in
mov
dec
in
rorl
data16
sbb
mov
rcrb
add
pop
cmp
pop
pop
push
mov
testb
xchg
arpl
repnz
mov
js
push
test
adc
mov
jle
push
sub
pop
pop
jp
xchg
cmp
mov
pop
mov
idivb
cmp
sbb
mov
sub
adc
pop
push
inc
stos
cmp
leave
inc
dec
fsubrl
dec
push
inc
loop
ret
or
push
daa
dec
adc
push
mov
push
cmp
jge
fistpl
adc
loopne
popa
fnstenv
jmp
sahf
inc
mov
sub
out
jecxz
cld
aam
pop
push
xor
in
pop
sbb
inc
pushf
push
jl
xchg
int
jb
mov
xchg
lock
adc
mov
dec
arpl
scas
cmp
lods
xchg
adc
xor
push
bnd
movsl
mov
jl
popa
neg
lds
xchg
shll
out
popf
imul
or
jae
mov
fbstp
cld
dec
loop
mov
popf
stos
and
in
mov
rorb
out
pop
test
jmp
jp
mov
xchg
mov
sarb
xor
cmpsb
cltd
jg
push
lret
xchg
popf
xor
mov
cmp
mov
sbb
fnstenv
adc
rcrl
sbb
xchg
pop
ja
jbe
mov
push
addr16
ljmp
cmpsb
cwtl
das
sbb
sub
adc
pop
adc
lret
xchg
scas
xor
aas
data16
cwtl
fiaddl
das
push
or
stos
adc
test
iret
xchg
scas
jbe
bound
pop
aaa
push
push
nop
or
push
cmp
mov
sbb
pop
test
aas
subl
sahf
cs
mov
jge
int
les
add
aad
push
int3
idiv
inc
sub
out
sub
push
push
dec
push
sahf
shlb
push
push
pushf
cli
fdivp
xlat
mov
sbb
je
leave
xchg
inc
sub
cmp
outsb
ret
sbb
pop
jae
shrb
jae
enter
jb
rcrb
cmpsb
outsl
fsts
adcl
cmpsl
ds
and
loopne
lds
mov
std
xchg
mov
mov
int3
xchg
inc
fwait
mov
or
je
xchg
pop
and
jno
add
mov
cli
or
fsubr
es
lods
xchg
into
movsb
jmp
add
iret
fcoms
dec
lret
mov
cmp
jb
sub
inc
mov
jb
push
lds
pop
dec
test
shrl
and
xorb
sub
aam
xchg
jnp
mov
add
lea
outsb
add
icebp
xchg
push
or
sub
xchg
xor
add
jmp
push
inc
outsl
jmp
jae
idivl
mov
lds
mov
pop
in
rol
loope
mov
fdivrl
adc
rcll
test
loopne
aas
sbb
jo,pn
mov
add
addr16
fmull
xchg
sbb
in
test
jp
divb
push
xlat
sub
and
dec
push
inc
call
xor
stc
ja
xchg
or
std
arpl
mov
mov
pop
xor
push
imul
nop
push
bswap
pop
aaa
or
pop
jmp
push
subl
lret
add
jno
lahf
dec
cmc
pop
js
sub
cmpsl
test
pop
scas
test
lret
ss
cmpsl
and
pushf
fimuls
shr
fdivrl
jnp
gs
xor
mov
lcall
xchg
add
jg
std
cmp
push
lcall
jmp
cmp
out
call
in
inc
cld
loop
pop
ljmp
dec
cmp
lds
xchg
dec
mov
mov
movsl
inc
inc
mov
arpl
xchg
pop
loopne
fmuls
dec
into
jg
bound
outsl
xchg
inc
outsl
sbb
xor
int
mov
ds
leave
fnstcw
inc
cmp
pop
jo
mov
dec
stos
int3
or
mov
fnstsw
cmp
push
pop
sahf
out
mov
aad
or
outsb
cwtl
das
fs
aas
and
mov
aad
inc
or
adc
jp
adc
pandn
or
sbb
xor
cmp
mov
movsl
xorl
dec
cmp
sbb
sbb
addr16
push
push
jo
sbb
test
fisttpll
pop
mov
scas
jns
cld
mov
stos
stos
in
leave
shr
sub
push
mov
dec
pop
cmp
xchg
rcll
xor
inc
jne
xchg
mov
inc
loope
addr16
inc
dec
call
mov
push
stc
xchg
xor
leave
or
mov
cmp
hlt
fildl
sbbb
push
cmpsb
test
inc
test
stc
add
sub
add
pop
pop
and
stos
cmp
js
mov
jle
into
cmc
leave
adc
and
pop
adc
mov
push
add
or
and
mov
xchg
pop
add
stc
nop
and
add
sahf
pop
mov
dec
inc
aam
jb
rorb
lahf
sub
mov
mov
cmp
lods
fwait
mov
stc
xchg
mov
cmpsb
jnp
cwtl
je
lret
jne
std
jo
sbb
jae
sub
add
xor
icebp
insb
adc
test
jnp
je
int
shl
mov
out
rolb
int
outsb
mov
nop
fstpl
jmp
mov
mov
testb
jb
xlat
mov
mov
fbstp
addb
mov
or
xor
push
icebp
stos
mov
movsb
add
mov
pop
ds
imul
out
mov
lcall
fdivl
nop
jge
iret
sub
pop
ljmp
push
jne
inc
jl
mov
xlat
push
xor
data16
cwtl
test
mov
sahf
inc
sti
in
loopne
hlt
push
mov
insb
pusha
cmp
cli
xchg
mov
addr16
jg
mov
es
and
xchg
adc
mov
test
sbb
ds
mov
dec
adc
push
mov
test
sbb
mov
push
sti
sub
test
rclb
fistpll
andl
push
pop
movsb
sti
cltd
jae
jge
mov
int
aaa
repnz
test
adc
jo
repnz
or
mov
xchg
sbb
inc
pop
mov
xchg
negl
rcrl
pop
scas
ds
sub
mov
xor
xor
sub
lret
cmp
push
mov
xor
sbb
adc
mov
mov
dec
dec
aas
dec
cld
inc
cmc
adc
jp
mov
cld
xchg
insl
iret
push
ljmp
pusha
fldt
repnz
out
dec
scas
mov
cld
inc
mov
and
std
ret
jns
adc
pop
mov
xchg
daa
bound
outsl
aas
jns
pusha
cmp
and
and
xlat
xchg
dec
je
pop
call
xor
xorl
xor
je
divb
fsubl
mov
ds
lods
outsl
jne
and
and
inc
jge
arpl
stc
and
cmpsl
xchg
fistpl
xchg
dec
and
mov
fdiv
or
dec
cmp
daa
push
sbb
push
outsl
xor
loopne
sub
sbb
xchg
jl
sbb
test
push
scas
cmpsb
shlb
lcall
and
nop
push
push
xchg
pop
xor
adcl
adc
xchg
mov
repnz
pusha
mov
mov
iret
in
sub
rclb
fisubrs
int
dec
dec
in
icebp
pop
xlat
cmc
adc
pop
inc
rclb
hlt
sbb
jne
xchg
xor
ret
outsb
js
popf
lret
adc
and
pop
jns
insb
stos
dec
clc
js
sub
pop
loope
ret
stc
mov
enter
add
lret
inc
or
cmp
push
lods
xchg
pop
pop
cli
lea
jns
or
xchg
adc
push
mov
mov
and
adc
xor
iret
cmpsl
mov
inc
or
imul
pop
loopne
rcrb
dec
lds
data16
pop
mov
mov
cmp
pop
je
lahf
fisubl
push
loop
mov
test
push
test
bound
pushf
xor
jns
push
ds
cmp
mov
sub
shll
repnz
out
adc
outsb
call
clc
lret
in
inc
jns
inc
pop
pop
pop
loop
jns
jmp
cwtl
cmpsl
les
cmp
arpl
into
scas
inc
mov
test
pop
pop
divb
ret
or
or
or
sub
bound
dec
loop
loope
lods
es
stos
mov
dec
outsb
jg
mov
mov
loop
aam
jmp
jg
add
xchg
sbb
and
mov
add
test
insl
call
mov
insl
cld
repz
mov
mov
add
xchg
adc
sbb
aaa
jae
movsb
idiv
xchg
lods
mov
das
sub
sbb
out
cmp
shrb
adc
into
add
adc
inc
jmp
mov
call
test
mov
adc
lods
pop
jmp
mov
mov
popf
cmpsl
xchg
out
scas
not
mov
sbb
lods
and
add
sbb
decl
and
pop
mov
test
lret
cld
call
fdivrs
adc
ss
sbb
je
jl
xor
xor
iret
and
test
add
push
xor
xor
or
sub
sbb
or
dec
jae
jecxz
cmpsl
out
inc
sub
fisttps
dec
test
mov
fscale
inc
shrl
testb
scas
cs
insb
aas
inc
cld
je
subb
addr16
lds
inc
sbb
popf
add
mov
sbb
or
add
pop
adc
inc
lods
lret
loope
adcl
jg
jae
inc
es
push
in
roll
or
gs
xchg
and
add
data16
xor
outsl
cmp
leave
cmp
sbb
mov
movnti
bound
dec
or
test
pop
xor
sbb
cmpsb
add
xorl
pop
out
adc
inc
adc
arpl
sub
fld
jecxz
xor
dec
jp
jge
and
mov
pop
out
dec
in
xor
mov
ret
xlat
fstp
xlat
outsb
or
cmpsl
mov
int
dec
orb
sti
test
shl
out
es
loop
mov
mov
sbb
dec
inc
lret
jg
rclb
mov
enter
xchg
sub
test
insl
push
push
mov
popl
xor
shlb
push
push
and
mov
cli
xlat
lods
add
push
jnp
jnp
jne
dec
cmpsb
xchg
imul
outsl
rclb
sub
loop
push
cli
inc
dec
mov
inc
out
pop
sbb
push
iret
push
sbb
pop
testl
jno
xor
jo
sahf
add
mov
push
push
loop
shlb
ret
jbe
xchg
pop
nop
xchg
cmp
in
sub
push
add
cli
push
sub
negl
int3
repnz
clc
iret
mov
push
out
sarb
repnz
jbe
mov
incb
xor
out
loop
inc
pop
notl
sbb
mov
add
adc
xor
adc
add
outsb
mov
loopne
mov
call
in
scas
sbb
mov
ss
or
inc
mov
std
mov
or
sti
mov
mov
adc
in
or
mov
push
outsb
in
fwait
testl
inc
insl
mov
mov
aaa
mov
dec
dec
loope
dec
pop
popf
aas
cmp
jo
pusha
test
inc
pop
ds
add
mov
and
pop
cmp
adc
dec
mov
and
mov
aaa
addr16
pop
shl
out
and
xchg
add
xor
xor
adc
mov
sbb
movb
mov
leave
push
or
cmp
add
cmc
cmp
jbe
lods
add
aad
lahf
int3
rolb
mov
nop
sarl
cmc
aad
sub
mov
pop
mov
pop
pop
stos
scas
scas
xor
sbbb
outsb
jle
subb
mov
outsl
cmp
out
dec
xor
cwtl
daa
xchg
lock
mov
enter
jb
xor
cs
fs
mov
add
lods
cmp
push
fwait
je
psubsb
xor
or
cmp
jle
arpl
dec
cmp
mov
in
cmp
icebp
pop
xchg
pop
jnp
dec
add
add
fnsave
out
jae
jl
push
lods
inc
rol
icebp
vmovupd
pop
jmp
xor
xor
mov
aam
cld
outsl
in
push
outsl
cmp
cmc
mov
out
dec
push
aaa
int
std
xor
test
push
cmp
mov
inc
cwtl
mov
xchg
fs
jne
mov
sub
or
rcrl
dec
adc
and
jo
fbld
mov
sti
out
pop
icebp
xor
add
dec
loope
fiadds
cli
xor
add
push
jmp
inc
test
es
jbe
pop
ja
fidivrl
stos
pop
out
mov
mov
idivb
lahf
fldenv
test
fisubrs
mov
inc
aad
jae
clc
cmpsl
jge
mov
pop
es
jo
lret
dec
mov
addb
mov
pop
pop
cmp
ret
aam
outsb
xlat
xor
mov
mov
mov
cmp
outsb
xchg
les
or
jne
adc
sbb
jo
fsub
xchg
mov
xchg
mov
test
xchg
lret
jb
mov
lea
in
clc
insl
jmp
inc
out
sub
sub
cmp
push
mov
mov
and
push
ds
iret
in
pop
fcomi
decl
pushf
jmp
ss
cmpsl
imul
jnp
sbb
mov
jp
scas
inc
sbb
ja
hlt
jae
xlat
push
sub
jo
mov
push
and
outsl
ret
dec
ret
mov
out
sub
pusha
aaa
cmovb
dec
mov
mov
and
lock
dec
icebp
in
cltd
mov
add
ret
in
cli
sub
sbb
sbb
movsb
cs
test
push
lea
push
mov
imul
xchg
sahf
mov
mov
out
dec
add
and
cmp
imulb
rorb
ja
imul
mov
push
out
dec
mov
loope
call
and
mov
insl
jl
add
jae
out
sti
push
add
pop
dec
mov
mov
jl
lods
insb
test
add
sub
lods
jnp
hlt
stos
leave
popa
aas
jnp
popf
insb
aad
fisubrs
jo
mov
add
xchg
je
push
dec
mov
mov
pop
xor
sti
iret
mov
int3
dec
cmp
js
ficoml
daa
fisubs
fcompl
popf
and
cmp
leave
push
repnz
jb
jle
jns
push
pop
sbbl
mov
ds
adc
out
popa
cli
rcrl
sbb
jl
lret
lock
mov
mov
mov
or
aam
mov
jno
aas
adc
pop
cs
mov
mov
sbb
adc
scas
mov
loopne
test
add
mov
fisubrs
shlb
enter
mov
jle
inc
fsubrs
jno
add
inc
shll
scas
mov
call
insl
hlt
js
lcall
jae
fsts
test
outsl
push
and
sub
inc
shrb
dec
xlat
and
pop
push
fidivl
xchg
pop
sub
xor
cmc
xchg
prefetcht1
mov
xor
mov
cmp
add
mov
imul
and
mov
aad
push
pop
out
pushf
mov
dec
mov
adc
cmp
jecxz
pop
shll
subb
jo
in
jl
pop
cmp
addr16
pop
inc
mov
mov
test
cmp
mov
dec
in
scas
lea
or
std
test
leave
std
push
jno
xchg
aam
sti
push
or
flds
inc
imul
popa
cmpsl
in
xchg
dec
mov
stos
mov
div
mov
mov
shll
jae
sub
bound
mov
inc
or
sbb
mov
testl
rol
xlat
inc
cmp
add
fcmovnu
and
jmp
cmp
xor
cmp
nop
cmp
xchg
push
fistpl
test
lahf
jp
inc
sub
dec
repz
lods
shll
nop
aad
xchg
sahf
add
mov
aaa
dec
dec
cli
fwait
add
icebp
fisttps
cld
das
loope
popa
fstp
xchg
mov
popa
add
mov
or
cmpsb
sub
sbb
andb
inc
push
sarl
es
cmpsl
mov
lret
push
dec
jnp
mov
fcompl
and
lods
xchg
sarb
fldenv
add
cmpsb
cmp
mov
lods
mov
in
enter
stos
cmp
sub
out
pop
mov
add
mov
jbe
data16
inc
cltd
cld
add
shlb
lds
mov
mov
out
jle
cld
mov
stc
popf
in
pop
adc
ss
nop
xchg
dec
xor
dec
negl
movsl
push
or
jg
sbb
mov
insl
leave
in
pop
pop
add
cltd
sub
jne
cltd
std
jge
push
jne
jp
lret
aas
in
push
mov
fs
push
fstps
adc
adc
and
js
xor
aaa
push
mov
xchg
and
decl
popf
rcrb
jo
mov
movsb
sub
in
inc
cmp
stc
xchg
push
push
mov
or
inc
add
inc
dec
sahf
xor
stc
or
xchg
inc
jmp
sbb
repnz
mov
stc
sbb
call
jg
ret
sbb
lods
ss
xor
ljmp
stos
pushf
out
subb
adc
int
movb
jge
adc
pop
movsl
mov
out
inc
popf
inc
sbb
clc
mov
or
push
es
mov
popa
xor
cmp
fwait
out
imul
ds
mov
dec
fwait
or
fcos
out
xchg
push
ret
mov
or
stos
out
out
inc
xor
stos
fisttpll
addr16
sub
das
sbb
dec
shrl
xchg
movsb
clc
stc
push
fdivp
or
std
popf
xchg
sbb
loope
inc
jae
adc
xchg
dec
inc
sarb
daa
push
mov
lods
fwait
mov
test
sub
and
addr16
push
mov
push
xchg
sub
dec
cmp
mov
sbb
or
ret
push
in
pushf
call
mov
cmp
and
rorb
pop
lahf
pushf
lret
cltd
mov
loop
pop
pop
loop
aaa
in
js
jmp
subb
xlat
push
out
pop
push
sub
sbb
xchg
inc
fsubl
mov
out
es
int3
fdivrs
hlt
lea
mov
and
dec
movsl
incb
sub
sub
push
jae
push
gs
lea
stos
xchg
jmp
stc
addb
repz
pop
mov
pop
loope
or
icebp
mov
lret
in
mov
adc
scas
fnsave
jbe
incl
cmpsb
in
mov
bound
scas
pusha
lcall
xchg
sbb
scas
lret
bound
sbb
ds
xchg
sub
or
scas
lods
xchg
sbb
int
mov
sub
shrl
inc
inc
fidivs
pop
jecxz
jge
vpunpckhwd
jb
mov
gs
lea
xorps
pop
inc
ss
jae
ljmp
sbb
dec
and
mov
ds
aad
inc
pusha
and
inc
rolb
and
movups
or
bound
push
adc
test
jno
xor
insl
or
rclb
fldcw
movsb
cmp
lcall
loope
dec
and
enter
popa
sub
pop
adc
cmpsb
cmpl
fs
std
pop
sub
fcomps
imul
add
iret
xchg
sub
sti
popf
mov
add
inc
or
mov
mov
andb
sbb
mov
pop
mov
std
mov
fildll
dec
lock
mov
pop
mov
mov
outsl
push
cmp
lea
loopne
mov
pop
mov
cli
xor
aam
pop
gs
int3
xor
mov
adcl
pop
into
sbb
mov
mov
adc
loope
mov
jbe
jecxz
push
lret
lcall
jno
fisttpll
push
jg
mov
fistpl
cs
popf
fistpl
and
and
leave
clc
xor
mov
inc
and
push
mov
mov
stos
xchg
push
mov
dec
sub
jge
cmp
aad
cmp
add
loope
lahf
adc
shlb
shlb
mov
test
add
add
cvttps2pi
out
in
cltd
and
fs
adcl
cmp
shlb
mov
sahf
nop
mov
xchg
cmp
add
push
lods
std
mov
xor
adc
scas
xor
mov
pop
push
sarl
imul
ret
pop
insb
sbb
ret
in
fnstenv
into
fisubrs
call
in
mov
mov
aad
xchg
pop
mov
mov
test
lahf
mull
pusha
mov
rol
jl
fprem
jae
xchg
add
cmpsb
xor
dec
add
movsb
lahf
xchg
adc
rcr
add
add
mov
das
jno,pn
add
push
jecxz
cltd
popa
les
mov
call
into
add
arpl
jo
jecxz
lock
push
aas
ficoml
arpl
lahf
sbbb
adc
repnz
lea
test
imul
mov
fucomi
xchg
dec
es
lcall
pop
mov
ljmp
xchg
push
and
lret
call
cmpb
lods
xchg
mov
outsl
inc
nop
jns
outsl
push
out
mov
mov
dec
out
popa
repnz
loop
fsts
sbb
in
test
jle
xor
sahf
popa
filds
lcall
cwtl
and
push
sub
cld
jno
or
jbe
jnp
sbb
sbb
cli
lret
repz
ss
outsl
mov
mov
mov
lret
arpl
bound
xchg
data16
push
mov
push
imul
insb
xor
fidivs
inc
imulb
fs
xchg
xchg
adc
sarb
mov
mov
mov
data16
movsb
mov
push
stc
inc
in
push
je
xchg
sub
cmp
pop
add
test
movsb
lret
push
fcoml
xchg
orl
pop
cs
fistps
mov
adc
movsl
cmp
mov
ret
lcall
sbb
out
dec
mov
jnp
dec
add
pop
stos
inc
dec
sbb
jmp
xlat
cltd
mov
pushf
jg
mov
inc
or
ret
leave
test
outsl
notl
or
in
add
pop
ja
inc
pop
icebp
dec
jg
xchg
pusha
cs
out
jp
test
hlt
mov
and
mov
rcrb
stos
icebp
push
pop
mov
aaa
cmpsb
pop
fcmovu
add
lods
mov
popa
and
pop
mov
xchg
icebp
jp
and
enter
jne
mov
xchg
xor
mov
movsb
cli
jle
adc
sub
lret
and
inc
and
jmp
gs
call
jb
xchg
mov
sbb
movsb
cmp
jmp
aaa
addr16
xchg
mov
cli
lods
inc
and
outsb
lret
lods
sbb
and
push
nop
cmp
bnd
and
add
mov
xlat
sub
lods
cmc
xor
pop
mov
xchg
push
jno
cmp
pop
icebp
jl
sarl
sbb
inc
xlat
insb
cmp
or
xchg
jle
lret
fsubr
ja
pushf
xor
xchg
push
insl
dec
sarl
mov
fsubrs
cmpsl
push
imul
out
adc
outsb
dec
in
mov
jno
insl
insb
sub
push
pop
jno
and
push
pop
imul
movsb
pushf
pop
cmpsb
lds
insb
jns
mov
xchg
pcmpgtd
adc
xchg
inc
jae
jns
loop
rcll
jmp
adc
pusha
addr16
imul
and
test
cmp
or
into
xor
sub
fildll
xor
rolb
mov
adc
test
and
cmp
insb
popf
xlat
add
ja
test
fisttps
cmpl
inc
decl
inc
imul
pushf
inc
fsts
cmp
leave
xorb
push
loopne
sub
sub
xchg
dec
mov
loopne
xchg
notb
sbb
movsl
fidivl
add
jg
push
xorl
xor
push
mov
ds
pop
pop
hlt
pop
adc
fs
lahf
inc
lods
cltd
stos
xor
xor
xor
mov
mov
scas
and
xchg
fsubrl
sub
jns
push
or
sbb
or
xor
out
decb
aad
lock
sub
jl
jl
pop
hlt
cld
popf
sbb
or
sbb
xor
pop
nop
roll
mov
sub
push
adc
mov
or
dec
dec
and
xchg
cli
jmp
imul
leave
push
testl
adc
xor
dec
pop
mov
iret
popf
or
inc
aad
js
aaa
xorb
outsl
push
out
jge
xchg
cli
push
fistpll
test
xchg
es
inc
mov
test
clc
mov
fidivl
gs
xor
xor
test
pop
fdivp
xchg
pop
lock
mov
push
loop
mov
filds
mov
mov
xchg
mov
push
push
shrb
xor
add
lock
mov
add
lods
mov
jmp
push
sbb
inc
popa
pop
clc
mov
loopne
mov
rolb
pop
lret
loop
jno
inc
cwtl
mov
pop
repz
cmpsb
loopne
mov
lret
push
rcll
lea
cwtl
jecxz
lret
jg
mov
mov
fucomi
fsubrl
xchg
cld
movsb
jecxz
cmp
movsl
ja
rclb
rorb
push
pop
mov
and
jo
sub
push
outsl
mov
cmp
stos
jge
inc
dec
enter
repz
xchg
dec
jnp,pt
mov
inc
jnp
clc
cmpl
clc
mov
pop
movsb
ror
and
fidivrs
push
and
je
int3
jne
mov
pusha
movsb
repnz
adc
iret
add
mov
push
bswap
mov
js
scas
mov
loopne
xchg
xchg
loope
xor
es
out
sbb
mov
sti
jp
loop
mov
and
out
mov
pop
outsl
notl
out
mov
mov
push
es
sub
imul
daa
outsl
cmpsl
in
dec
and
sbb
sub
aas
lret
jns
fnstcw
ljmp
sbb
jnp
or
fwait
pop
jle
mov
jns
aam
cli
sub
sbb
push
jp
shrb
clc
fidivl
out
cld
iret
out
push
out
popf
xor
xchg
jl
sarl
ja
in
sub
addr16
push
out
outsl
nop
insl
loopne
or
and
aam
sti
push
rcrb
inc
cmpsb
daa
outsl
and
inc
mov
or
push
movsl
sbb
in
sarl
and
sarb
mov
adc
lds
sbb
mov
int3
mov
pusha
add
lcall
push
adc
out
xor
jbe
imul
dec
cmp
bound
xor
sahf
jmp
xchg
fucom
scas
xor
xor
aas
rolb
sbb
cmp
stos
push
enter
jecxz
insb
xchg
mov
adc
notl
jae
rcll
mov
shrl
out
test
sub
lcall
pop
js
aas
push
and
lret
xor
add
sbb
mov
ret
xchg
pop
aaa
and
test
mov
repnz
sub
clc
or
fsubl
cli
cltd
sub
mov
imul
add
loopne
pop
mov
test
aas
sahf
mov
dec
adc
sub
mov
scas
loope
xchg
push
inc
fcomip
dec
sbb
sub
sub
mov
hlt
add
adc
sub
je
sub
test
mov
dec
jnp
lea
cwtl
sub
push
shrb
scas
and
aas
aaa
mov
inc
fnstenv
test
test
into
lock
adc
xor
push
mov
into
push
mov
inc
jge
jle
cwtl
mov
inc
xor
xchg
mov
mov
pop
jecxz
push
sti
xchg
and
pop
sahf
adc
std
jbe
pushf
cmc
cmpsl
std
adc
ret
stc
jb
mov
mov
mov
jo
inc
sarb
push
in
mov
and
add
jo
psrad
popf
call
sar
inc
rorb
push
outsb
lea
idivl
sbb
mov
shl
dec
cld
sti
es
add
lods
movsl
mov
jnp
shr
cmp
or
mov
ret
pusha
adc
fstpl
dec
mov
enter
arpl
cmpsl
repz
dec
mov
mov
mov
xchg
sbb
pop
addr16
push
sub
test
xchg
add
sbb
mov
mov
jns
mov
add
push
sbb
dec
fcoml
arpl
xchg
out
inc
sbb
add
cmc
xchg
popa
inc
daa
inc
mov
mulb
repnz
movsb
cmp
js
mov
fisttpll
push
ficompl
and
enter
push
jo
pop
lods
incb
mov
sahf
mov
sbb
push
lds
ljmp
mov
add
push
or
mov
fwait
sbb
jb
je
sbb
outsb
daa
fwait
xchg
js
out
dec
shlb
clc
aas
in
shrb
cmp
pop
inc
in
pop
arpl
fs
mov
dec
mov
loope
cmpsb
fwait
and
aaa
insl
repz
les
ret
mov
in
pop
roll
mov
stos
push
jmp
test
xorb
jno
mov
push
xchg
inc
in
dec
fdivrl
cmpb
add
push
xor
icebp
mov
push
xor
popa
fs
movsb
daa
pop
ret
cmpb
pop
push
mov
pop
mov
adcl
movsl
sahf
sub
out
test
inc
aas
mov
lahf
mov
xchg
cmpsb
pop
fdivr
sbb
test
dec
inc
mov
fld
jp
lea
add
inc
stos
mov
call
and
imul
jg
fcomps
subl
sti
push
and
push
lock
inc
inc
ja
dec
adc
mov
pusha
je
idivl
aad
repz
bound
adc
mov
repz
cmp
add
out
dec
daa
lret
mov
fidivrs
out
push
ret
pop
test
imul
hlt
nop
lods
aas
addr16
rclb
add
lret
pop
cmpsl
pop
out
divl
arpl
mov
arpl
test
lret
imulb
lea
pop
mov
out
fadd
pop
mov
aad
dec
sbb
fld
mov
hlt
cli
pop
call
pop
je
ss
les
cmp
hlt
mov
dec
scas
jo
adc
add
pop
jmp
roll
arpl
xor
iret
fs
fidivs
sbbb
push
sub
out
cmp
jp
hlt
popf
jmp
cltd
mov
pop
vaddpd
lea
mov
sbb
fdivrs
fidivrs
leave
mov
stos
xor
or
mov
jo
pop
insb
add
inc
xlat
imul
pop
loop
sbb
insb
sub
fs
mov
ljmp
xlat
test
inc
daa
mov
lret
mov
orl
inc
fwait
pushf
jmp
cwtl
pop
cmp
je
add
mov
fneni(8087
sub
lods
push
repz
pop
xchg
or
insb
xchg
mov
jmp
push
xor
rorl
lock
out
mov
jg
add
and
nop
test
and
imull
mov
in
imul
out
jno
add
ret
fstpt
push
cltd
push
jl
inc
pop
movsb
in
push
and
pusha
jp
imul
jns
gs
or
add
sub
add
shrb
mov
push
pop
xchg
in
lret
mov
inc
fabs
jmp
xlat
add
pop
lret
gs
push
stos
mov
mov
fimull
xchg
adc
sub
aam
sbb
push
jbe
psubq
jb
push
xchg
test
insl
in
inc
in
int
jne
lea
cmpsl
push
loopne
sbb
sub
and
push
xor
popf
addb
jecxz
mov
sbb
mov
mov
lds
test
ja
movsb
aas
cmp
out
sub
lods
mov
out
imul
push
jbe
ret
jl
imul
inc
inc
scas
idivb
xor
fs
adcl
fdivl
rcll
fsubs
movsl
dec
cmp
push
notl
mov
mov
mov
loopne
shll
push
jg
inc
mov
jg
pop
push
fldenv
fistpll
sti
and
or
nop
adc
je
sub
dec
adc
add
aas
inc
stos
jecxz
push
lahf
inc
fcoms
pop
test
and
stc
lea
repz
insw
xchg
mov
push
shl
add
nop
pop
lret
lret
xchg
pusha
and
pop
mov
cmc
negb
inc
sub
mov
bound
jle
mov
jmp
cmc
cmc
add
ret
mov
enter
or
sub
sub
scas
adcb
dec
inc
mov
jae
dec
outsl
insb
add
fdivp
xchg
pop
stos
jne
add
jns
jge
imul
mov
sar
add
scas
sbb
xor
and
and
dec
cmp
jae
hlt
in
sub
sti
out
push
xchg
dec
fldl
mov
xchg
xchg
mov
mov
dec
jp
jl
or
adc
rorl
and
mov
add
andl
jb
test
mov
sbb
pushf
cmp
push
jp
imul
lds
ret
inc
mov
pop
cmp
xchg
shrl
mov
dec
lahf
xorl
mov
jl
dec
aaa
mov
and
das
shrl
rcll
pop
push
int3
ret
in
sti
push
inc
mov
insb
lret
mov
movsl
cmp
pop
stos
push
mov
fpatan
rcll
pop
test
jge
push
mov
push
dec
into
mov
xchg
loop
inc
int
xor
or
adc
popf
les
pushf
fists
ret
cmpsb
ret
das
addr16
lret
or
sti
sub
adc
sbb
xchg
jb
out
cmc
call
mov
lock
js
sub
stos
add
cli
jmp
lea
in
push
out
pop
push
cmc
mov
aad
pop
out
lret
xor
cmp
inc
or
jg
adc
mov
sbb
out
fwait
cmp
inc
cmpsl
dec
movsl
pop
inc
mov
out
jne
push
mov
xor
in
xchg
push
loope
push
xor
adc
pop
mov
push
arpl
fnstcw
cmpl
mov
sub
xchg
pop
xchg
mov
push
push
or
lcall
xor
adc
xchg
add
loop
and
push
lahf
push
mov
adc
dec
adc
popf
rolb
cwtl
add
call
xor
mov
adc
or
cmpl
adc
adc
cltd
push
pop
sbb
ret
mov
inc
ret
pop
les
in
dec
xor
mov
mov
sbb
scas
mov
mov
int
sub
jne
leave
and
fstpt
inc
fmuls
shlb
pop
or
inc
cld
or
loope
jo
pop
inc
js
jb
scas
jne
lahf
rorb
or
test
cmpb
xchg
add
xor
movsb
mov
lds
inc
add
ss
arpl
ja
mov
cli
xchg
ljmp
aam
repnz
and
fstpt
cmp
int3
arpl
lods
sarb
ljmp
add
lods
lcall
cwtl
fists
adc
mov
fdivrl
add
and
jp
insl
push
ret
push
xor
mov
frstor
in
in
stos
mov
jno
ret
push
sahf
xchg
loope
stos
adc
dec
adc
rep
adc
shll
mov
adc
mov
rcll
mov
test
cmp
pop
out
inc
xor
jbe
int3
inc
fs
jae
xor
aam
out
mov
jg
daa
mov
pop
imul
fwait
cltd
sub
dec
and
xor
jp
or
jp
add
jbe
dec
xchg
push
ja
shrl
stos
xchg
dec
movsb
dec
sbb
jl
pusha
pop
fisubs
lret
add
aam
pop
outsl
iret
cmp
andb
sbb
pusha
addl
insl
xor
insb
fistps
hlt
adc
push
mov
mov
add
scas
and
mov
mov
mov
pop
sbbl
int3
movsl
es
jne
jmp
cmp
cmpsl
pop
enter
mov
into
push
stos
mov
int3
xor
mov
adcb
push
sbb
pop
lock
mov
aas
fidivs
mov
loopne
or
nop
mov
fistl
adc
mov
movsb
push
cmpl
jnp
push
scas
std
les
adc
loop
lods
aas
stc
cld
push
popf
mov
and
xchg
jecxz
daa
push
mov
adc
out
pop
cmpsl
inc
scas
xchg
sub
gs
and
cmpsl
inc
fs
ficoms
pop
inc
clc
iret
sub
add
enter
sti
inc
xchg
int3
pop
or
repnz
popf
arpl
js
mov
incl
int3
movsl
xor
xchg
inc
jmp
xor
ljmp
cmp
bound
cmp
std
loopne
push
mov
int3
and
xchg
lret
mov
clc
pop
call
je
xor
push
mov
out
cmpl
and
stc
jmp
test
push
mov
sbb
mov
jp
pop
icebp
cld
nop
fisttpl
pop
stc
push
jno
out
push
ja
loop
pop
scas
inc
adc
in
inc
cltd
xor
dec
add
in
nop
sbb
mov
out
jbe
cmp
and
push
shrl
addr16
push
and
iret
cmp
sbb
mov
sarb
jecxz
pop
xchg
jle
gs
push
in
add
sub
sbb
pushf
mov
xor
dec
ss
inc
daa
ds
inc
ds
out
xchg
fwait
pusha
push
jmp
xor
cld
in
or
or
jg
testb
cmp
push
mov
mov
mov
movsb
cmp
sub
xchg
cmp
sbb
pand
push
inc
sbb
or
psrad
stos
inc
sub
repz
addr16
push
test
push
dec
jmp
shrl
aas
lahf
adc
mov
dec
rcl
jmp
or
mov
scas
push
jle
subb
frstor
and
out
xor
cwtl
je
dec
aad
jmp
rcr
in
mov
cltd
pusha
and
xorl
nop
jmp
stc
aas
sub
outsb
loope
ret
jnp
pop
outsb
mov
ficoml
cltd
das
out
pop
xchg
push
pusha
fildl
sub
cmp
xor
ret
inc
mov
and
cmpsb
test
loope
xchg
and
mov
ss
or
mov
test
movsl
push
jb,pt
jo
sub
push
fcmovb
faddl
jg
adc
jne
out
pop
mov
jnp
sub
cmp
inc
inc
das
jmp
fcom
dec
ss
cli
shll
pop
pop
push
or
lock
hlt
sub
es
call
and
push
push
lahf
lods
mov
pop
pop
lods
mov
cmpsb
rcpps
or
adc
mov
xor
cmp
dec
mov
dec
roll
divl
add
std
jne
frstor
dec
movsb
mov
lea
and
in
filds
in
push
push
call
jmp
or
push
scas
out
mov
arpl
inc
and
ljmp
pop
mov
in
push
mov
dec
push
push
inc
jns
ljmp
sbb
mov
scas
mov
or
lock
dec
adc
fwait
inc
shll
xchg
insl
gs
add
inc
and
xor
inc
stos
jmp
je
inc
jnp
imul
movsl
inc
push
sub
mov
mov
push
das
fbstp
addr16
jae
jb
fmull
mov
fwait
sub
scas
jns
dec
and
jecxz
in
lods
lock
dec
pop
inc
jb
ljmp
mov
jb
cmp
aad
ds
xchg
in
and
or
movsl
xchg
inc
bound
popa
xor
sbb
sub
lret
popa
add
sbb
je
cmp
into
sbb
xor
in
sbb
cmpsb
lret
push
sbb
loopne
repnz
push
cmc
mov
pop
jns
push
sub
cmpsl
sub
jl
inc
pop
std
sbb
shll
ss
inc
lea
inc
push
adc
inc
add
jno
iret
jo
rolb
jg
and
xchg
repz
push
not
sub
mov
push
mov
inc
aam
popf
mov
dec
test
mov
pop
jns
into
insl
repnz
dec
mov
sub
pop
dec
mov
call
push
xor
jae
push
lods
sbb
jnp
repz
xor
pop
pop
cli
sarl
jg
mov
ss
syscall
or
jb
mov
enter
test
sbb
negb
xor
fistpll
adc
mov
mov
mov
mov
and
push
mov
or
es
mov
xchg
lds
aad
dec
pop
pop
mov
cmpsl
sbb
imul
xor
sbb
pusha
inc
xchg
je
inc
fnstsw
adc
imul
pcmpeqd
adcl
cmp
rorb
je
inc
jmp
xchg
mov
jp
ja
mov
cwtl
ret
push
lret
cmpsb
addb
aaa
xor
ds
mov
clc
cmp
xchg
cmp
insl
repz
sub
fidivl
das
mov
mov
xor
jae
mov
lret
decl
push
xchg
lds
push
pop
ret
movsl
xor
sub
stos
repz
stos
hlt
cmp
cmp
and
test
push
or
jmp
xor
lea
xor
sbbb
mov
cmp
lret
and
ret
xor
lret
mov
scas
add
add
rcl
aaa
repnz
lods
dec
mov
adc
pop
push
adc
daa
lret
rorl
or
in
popf
mov
mov
daa
add
xchg
cmc
ss
sbb
mov
inc
mov
fisttpl
test
and
jae
popa
scas
dec
add
mov
dec
mov
aas
out
rorl
repz
call
scas
ljmp
pushf
jns,pn
movsl
push
lcall
add
lret
dec
aad
arpl
jnp
push
ret
push
jg
aam
push
inc
sub
or
cmp
push
cmc
loop
sbb
lahf
mov
xchg
xchg
cmp
jns
mov
int3
ret
shll
push
xor
jns
dec
xchg
ja
fmull
mov
call
pop
lret
xchg
xchg
int
jmp
adc
push
fisubrl
ss
cli
add
jne
pop
icebp
out
jp
negb
dec
and
cmp
sub
les
mov
dec
and
adc
in
cmp
mov
mov
shlb
sahf
imul
popf
sti
and
mov
mov
inc
fidivl
clc
jo
xchg
movsb
push
or
cs
cs
sahf
lods
addr16
push
std
lret
pop
xchg
ljmp
pop
and
les
xchg
inc
jno
jge
push
pop
or
jge
sbb
aad
xor
repz
mov
ljmp
imul
pop
sti
test
in
es
xchg
mov
adc
test
lock
in
sub
mov
repnz
aaa
gs
xor
nop
lret
mov
rcrb
scas
mov
js
cmpsb
test
jns
fldcw
scas
and
push
pop
es
xor
ja
lods
xchg
sbb
or
mov
pop
cwtl
gs
popf
outsb
inc
push
xchg
mov
repnz
adc
jns
xchg
or
subb
add
mov
andb
fsub
mov
cmp
xchg
mov
or
cmp
push
push
or
cmp
lods
fidivrl
fildl
sbb
adc
push
add
imul
jne,pn
cltd
rcr
sub
push
dec
filds
mov
inc
orl
fsubrs
sbb
aam
push
jp
push
dec
mov
xchg
adcl
shrb
add
jno
pop
mov
adc
cmp
inc
aas
lods
loope
push
popa
mov
cs
cmp
lret
andl
mov
ss
lcall
jno
mov
dec
loop
mov
nopl
jbe
inc
sub
sahf
inc
push
into
scas
or
aad
adc
and
stc
push
insl
jb
sbb
mov
ljmp
mov
push
mov
shrb
mov
sbb
mov
leave
mull
cmp
je
cwtl
inc
cwtl
testl
mov
loopne
mov
rol
subl
dec
fs
pop
shrl
adc
mov
cmp
mov
push
inc
cmp
shlb
xlat
ficompl
repz
outsb
mov
push
jle
ficoml
into
pop
inc
outsb
and
push
cltd
jmp
xchg
cld
mov
jne
xor
std
pop
cmpsb
cmp
addb
inc
sahf
mov
jbe
repz
xchg
adc
std
adc
xor
outsl
mov
ret
mov
add
and
xchg
jne
fildll
jle
push
data16
and
push
fildll
aam
outsb
xor
insb
ds
xor
decb
aad
xorl
mov
fmuls
mov
xchg
cli
cmpsb
dec
and
stos
xchg
xchg
or
mov
ret
jp
cmc
xorb
mov
mov
mov
and
rcrb
adc
mov
inc
mov
test
flds
xlat
aaa
in
adc
out
lfs
xor
mov
pop
aaa
cli
rcl
mov
dec
pusha
lods
mov
jmp
mov
data16
sub
xchg
ret
mov
pop
pop
and
dec
ret
fistpll
cmpsl
mov
jp
xor
into
popa
mov
mov
and
int
daa
cmpsb
icebp
loopne
and
out
pop
nop
dec
dec
inc
mov
aam
pop
pop
call
dec
in
lea
cmp
pop
ljmp
or
push
arpl
xchg
push
addr16
sub
jle
jo
or
inc
push
dec
mov
js
or
std
test
fldt
xor
push
scas
aaa
mov
ret
inc
in
mov
pop
test
loop
mov
mov
das
cmpsb
loope
jecxz
cmpsl
xchg
pop
es
mov
jecxz
mov
cltd
dec
xchg
lods
cmpb
dec
dec
push
jl
or
ror
sub
out
dec
dec
xchg
cmpsl
inc
aam
out
pop
fsubr
adcb
push
add
stc
adc
or
dec
pop
add
fst
jle
aas
pop
test
lret
insl
shll
enter
pop
je
popa
ficomps
xchg
jl
push
jp
or
js
sbb
inc
dec
inc
mov
xchg
sub
pusha
inc
sbb
iret
cs
add
in
adcl
add
test
sbb
rolb
xchg
xchg
sbb
pushf
and
push
dec
fists
jge
int3
aam
cmc
orl
out
lcall
or
lret
adc
es
loope
mov
scas
or
insb
int3
movntq
pop
mov
mov
repz
ret
fcomps
pop
icebp
pop
adc
fidivl
xor
add
or
sub
push
popf
call
bound
xchg
outsl
mov
ds
cmpsb
pop
inc
mov
and
scas
cld
pop
enter
ja
scas
icebp
lret
pop
cmp
shlb
data16
adc
cltd
lea
xor
pop
mov
cld
jnp
ret
fldenv
mov
add
push
clc
xchg
and
pop
push
negl
popa
jg
dec
jno
mov
add
repnz
mov
jns
pop
add
das
lds
hlt
jle
stos
stos
adc
pop
dec
jae
aaa
gs
sub
push
fdivrs
enter
sub
pushf
push
loop
je
jg
in
mov
pop
daa
cmp
xchg
mov
inc
and
dec
in
dec
mov
add
ficoml
sbbl
adc
xchg
mov
xchg
cmc
rcrl
mov
mov
or
fucomip
inc
pop
aad
jns
push
add
rcrb
popf
add
stc
in
pop
cwtl
loop
cmp
jecxz
movsb
addl
nop
outsl
mov
add
sub
ret
and
aam
mov
sahf
xchg
shlb
js
xlat
and
mov
jg
enter
and
cwtl
mov
mov
enter
xchg
pop
pop
sbb
jns
cmp
push
dec
and
sbb
inc
add
sbb
xor
orl
ja
repnz
xchg
ja
test
addr16
dec
ja
jecxz
push
sub
jno
stos
shlb
or
insb
add
xchg
pusha
call
rcll
pop
leave
mov
and
fsubrp
add
sbb
pop
push
xor
adcb
mov
push
jnp
in
mulb
lea
loope
adc
test
bound
or
jae
std
adc
pop
lcall
in
test
cli
repnz
pop
rol
loop
mov
testl
adc
popf
pop
inc
fs
fcmovb
int
xor
rcr
jmp
ret
jl
and
dec
sbb
mov
jno
mov
dec
repz
mov
sub
adc
xlat
jmp
push
mov
or
je
mov
inc
add
push
mov
and
cmpsb
test
mov
jg
push
push
std
and
adc
scas
mov
xchg
sbb
stos
lahf
ja
push
xchg
loop
xchg
jmp
aas
jbe
pop
inc
ss
mov
test
cmp
add
lahf
add
inc
std
into
xchg
out
mov
movsl
xchg
adc
xor
mov
sub
push
popa
dec
dec
lret
add
mov
push
lahf
mov
insb
js
xchg
jns
lods
jnp
pop
mov
inc
pop
inc
lahf
cmc
rcrb
adc
xor
xchg
push
push
xor
loop
and
decl
sbb
aas
or
fcompl
pop
xlat
jge
dec
push
add
lds
pop
out
sub
rorl
mov
jge
mov
loope
push
cmp
mov
clc
call
adc
int3
mov
fucomip
mov
xchg
dec
and
es
push
jmp
mov
push
mov
mov
sbb
mov
shl
add
stos
std
stc
nop
mov
pop
push
mov
lods
sti
sub
stos
push
test
inc
out
pushl
lahf
xchg
fistl
or
add
aad
out
shll
push
repz
incl
xchg
pop
pop
cmp
jge
xchg
lret
hlt
shlb
or
cltd
pusha
adc
inc
out
fwait
andl
pop
pop
xchg
push
push
int
add
cmp
pop
ss
dec
pop
add
shl
and
cs
sbb
inc
xlat
xchg
rolb
repnz
inc
pop
insl
stos
aas
push
jmp
and
insb
in
lea
rcrl
mov
negb
cmp
leave
cltd
fnstenv
in
adc
adc
call
pushf
cmp
and
jbe
frstor
mov
add
mov
xor
call
shlb
leave
jecxz
fcmovnb
int
popf
ss
or
clc
andl
sahf
sti
outsb
loope
mov
fsubrs
jg
hlt
mov
push
cmc
cmpsl
add
outsl
cmp
cmc
int3
xchg
pop
cmc
pop
add
and
xorb
xchg
test
shrl
xchg
cmpb
loop
fstl
and
popa
push
inc
pusha
out
fsubl
iret
inc
xchg
jp
imul
mov
adc
repnz
iret
das
test
mov
sub
stos
les
mov
jne
mov
fstl
push
loopne
add
add
jae
push
mov
or
cli
adc
or
inc
dec
out
xchg
mov
xlat
xchg
sub
and
add
fisttpl
imul
test
mov
add
mov
and
push
or
lods
dec
xor
mov
scas
sub
xor
gs
out
mov
movsb
cmp
in
mov
mov
jbe
das
inc
add
ja
out
js
in
decb
add
push
idiv
mov
mov
scas
icebp
dec
fucomip
sti
or
add
in
sub
pop
mov
jge
jb
in
inc
fwait
xchg
sbb
dec
pop
mov
shl
addr16
imul
or
out
jp
shr
leave
mov
xor
push
jl
inc
pop
dec
aas
mov
cmp
xor
outsl
rcr
cltd
std
push
rcrl
xchg
sub
lods
ljmp
pushf
scas
loopne
loopne
fldl
jbe
xor
or
addb
pop
or
jg
mov
stos
mov
jne
sbb
dec
jp,pt
pop
in
data16
fdivrs
stc
rcrl
pop
fcompl
loope
iret
pop
lcall
fcomip
sbb
xchg
xchg
sbb
lods
mov
icebp
movsl
sbb
and
xor
jmp
gs
push
lods
xor
sbb
mov
adc
lret
sbb
shll
push
xchg
fistps
lea
inc
scas
lock
jbe
push
push
in
shl
into
dec
aam
ds
and
addr16
cmp
or
je
mov
arpl
out
add
cltd
es
jns
pop
scas
or
daa
leave
scas
push
andps
and
jmp
jmp
pop
orl
outsb
cmp
cltd
shlb
out
insb
xchg
shlb
ljmp
popa
and
jno
cld
xchg
subb
jae
subl
sbb
js
sub
cld
xchg
push
and
xor
cltd
pop
jmp
bound
cmp
pmaddwd
mov
std
cltd
jecxz
out
test
adc
push
or
bound
aaa
out
mov
sbb
nop
movsl
add
jge
inc
pop
push
dec
out
or
sbb
and
mov
je
jl
jge
test
sbb
mov
ret
lahf
push
imul
bndstx
or
push
push
adc
mov
push
call
ret
cmp
add
fdivp
xor
lahf
xchg
repz
add
lock
xor
push
sub
clc
push
inc
cmp
stos
or
inc
out
int
mov
cmp
cwtl
test
and
inc
sub
jnp
leave
insb
xor
jp
pop
inc
push
xlat
push
dec
sbb
xor
arpl
dec
mov
mov
cmp
std
loop
in
mov
push
fildl
pop
sub
dec
push
xor
loope
pop
mov
inc
test
cwtl
insb
fisttpll
or
popf
pop
popa
mov
dec
into
inc
imul
int
bound
mov
lret
ds
fisubrs
fdivr
xlat
cmpsl
mov
mov
pop
xor
cmp
jmp
rcrb
mov
mov
int3
subb
sbb
jno
leave
jo
sbb
dec
push
icebp
sbb
js
dec
js
mov
lods
mov
mov
fldl2t
xchg
ss
sub
pop
loopne
jns
mov
cmp
push
mov
sarb
shrb
push
pop
or
inc
test
decb
fs
cld
inc
call
push
push
out
push
jl
pop
jmp
jne
mov
jl
mov
rcrb
push
ret
test
data16
sahf
mov
jb
pop
push
fcomps
cmpb
cmpsl
popa
into
in
dec
rcrb
push
call
mov
sar
jl
movsl
rcl
ret
pop
jns
outsl
cs
push
pusha
pop
mov
int
push
xchg
insb
in
pop
aas
dec
aad
sbb
jns
push
mov
sbb
clc
pop
xor
jg
sahf
jmpw
or
into
jb
hlt
jnp
adc
pop
ljmp
mov
cmp
push
adc
push
imul
nop
xor
lds
andl
popf
add
cmp
lea
push
test
lcall
jns
je
dec
cltd
and
push
in
test
and
adc
add
aaa
push
shrb
inc
test
xchg
jae
cltd
xor
fisttps
orps
inc
sbb
inc
push
aad
pop
pop
enter
mov
jl
xchg
add
test
shl
inc
fcmovbe
adc
ljmp
mov
shlb
push
stos
lock
cmp
cmp
add
sbb
mov
xchg
ficoml
xchg
aaa
dec
enter
imul
pop
or
icebp
mov
xlat
rcl
or
mov
rcr
pop
or
ds
cmp
addr16
insb
in
dec
repnz
mov
sbb
lock
lret
adc
and
gs
push
mov
lods
inc
dec
test
jae
jge
dec
loop
sbb
shl
push
xchg
push
cmpsb
xlat
jecxz
mov
mov
pop
fwait
and
inc
in
adc
xchg
aaa
mov
jae
sbb
add
xchg
inc
push
mov
pop
cmp
fwait
xchg
notb
scas
into
mov
sti
pusha
push
in
cmp
or
fcomip
dec
cmp
push
inc
mov
insl
push
lods
pop
insb
jbe
xchg
and
fsubs
add
mov
aaa
sti
mov
pop
out
les
jl
cltd
push
int
je
push
xor
jge
adc
and
imul
and
dec
or
pop
shrb
idivb
pushf
dec
in
sbb
dec
adc
push
inc
lahf
loopne
mov
mov
sub
in
jb
dec
pop
lock
jne
in
cmc
cltd
aam
into
fimuls
lcall
lods
popf
adc
adc
clc
xchg
dec
loop
dec
rorb
jl
shrb
fnstenv
sub
mov
lods
sub
adc
mov
sbb
inc
aam
cltd
cwtl
std
push
fsubrs
je
insb
mov
push
mov
jne
rcll
call
jae
pop
cs
incb
lret
std
outsl
inc
xor
mov
ja
insb
mov
fstpl
adc
pushf
ja
xor
push
mov
outsb
and
push
add
repz
outsb
mov
push
sub
cwtl
test
dec
iret
icebp
js
jbe
jmp
mov
jmp
push
call
cli
xchg
cmp
xor
jne
inc
das
or
iret
pop
mov
stc
sarb
pop
imul
push
pop
mov
movsl
xor
mov
pop
xor
out
scas
lea
test
push
fidivs
mov
push
jno
adc
rolb
stos
and
loope
mov
sub
mov
sub
jns
cld
sub
addr16
and
out
mov
addr16
pop
mov
lret
fisubrl
inc
les
out
dec
loop
mov
push
mov
call
call
and
enter
mov
push
cmp
insl
test
std
xchg
ja
dec
shll
sbb
inc
push
push
repz
jmp
outsl
pop
out
xor
pop
mov
ss
mov
call
jmp
push
pop
push
or
push
sahf
out
lock
ss
push
mov
cmp
cmp
pop
push
xchg
mov
xor
incl
stos
insb
int
jg
lea
jle
pushl
push
inc
push
js
add
inc
vmread
xchg
adc
pop
sahf
sbb
cmpsb
push
mov
xchg
sub
insl
push
movsl
arpl
out
daa
cmp
jecxz
jae
cmpsb
aam
in
cwtl
add
mov
or
lahf
cmp
cmc
push
lods
cs
stos
pop
inc
pusha
pop
add
inc
mul
shlb
push
and
enter
js
leave
lret
xor
in
jae
stos
in
insb
push
jo
repz
pop
cmp
sub
push
aas
das
incb
cmpsl
xchg
dec
rol
enter
pop
xchg
sbb
cmp
fbstp
push
leave
outsb
ret
cmp
hlt
jno
pop
out
shlb
leave
cmp
sub
daa
push
xchg
hlt
out
add
push
add
data16
ja
dec
test
sbb
aad
hlt
std
mov
xor
xchg
sub
push
cltd
std
fbstp
call
test
cmpsb
int3
inc
jmp
mov
ds
fwait
inc
push
cmpl
and
add
scas
jecxz
outsb
mov
mov
clc
or
xor
pushf
fadd
pushf
pop
rcl
hlt
shl
addb
test
pusha
lahf
addr16
fxch
ljmp
divl
adc
imul
cltd
sbb
cmp
jecxz
xchg
push
push
jge
fistps
les
cwtl
test
xor
cwtl
push
aaa
es
je
cmp
cld
mov
mov
sti
push
pushf
pop
aaa
ret
mov
fldenv
inc
sub
push
stos
lret
push
jnp
enter
inc
fs
sub
pop
jo
sbb
xchg
mov
lahf
outsl
sbb
push
cmp
ds
cmpsb
push
mov
mov
cld
lcall
jne
test
ja
push
movsb
shll
dec
add
dec
cs
rcrl
sbb
cltd
mov
dec
inc
push
call
dec
pop
clc
sahf
cmpsl
in
out
jle
jno
sahf
or
cmp
je
mov
jns
mov
cmp
lret
add
out
dec
mov
sub
mov
jns
push
decl
adc
jecxz
arpl
stos
inc
mov
inc
sbb
mov
pop
mov
jne
fmul
rorl
lods
mov
loop
push
jb
out
iret
les
sti
jbe
push
popf
xor
in
push
inc
and
out
sbb
jge
pop
and
sarl
push
movsl
loop
jae
es
lods
xchg
push
inc
lret
xlat
dec
je
cltd
lods
inc
mov
jb
insl
sbb
push
adc
cmp
leave
lcall
outsl
xchg
emms
mov
inc
out
fs
stc
test
xchg
and
adc
es
mov
add
stos
xor
outsl
stos
lea
out
mov
mov
pop
into
movsl
or
push
jmp
add
push
aaa
out
add
arpl
aaa
data16
popf
and
sub
icebp
and
add
xor
mov
push
faddl
push
add
lods
mov
data16
xor
data16
shlb
out
dec
pop
mov
pop
movsb
add
push
xor
pop
jo
ret
xchg
and
in
pop
push
imul
fs
add
out
adc
fsubr
push
adc
mov
popa
mov
jmp
and
cmp
imul
fistpll
xlat
lods
mov
xor
dec
pop
in
inc
adc
int
sbb
push
add
and
out
jp
lods
pop
jecxz
test
mov
mov
cmp
lret
in
dec
sbb
fwait
xor
jl
jg
je
xor
mov
jnp
sahf
bound
lret
push
inc
ror
xchg
bound
pop
shrb
movl
mov
push
in
dec
iret
dec
fmull
lcall
stc
and
pop
add
add
loopne
rcll
cs
mov
pop
dec
mov
scas
inc
inc
xchg
rclb
in
repz
add
popf
es
cmp
lcall
in
stos
jecxz
sbb
lock
movsb
cmp
xchg
and
or
or
xor
mov
cmpsl
or
and
pop
std
sbb
inc
ret
push
mov
movsb
lods
sti
mov
push
sbb
gs
xor
insl
cli
mov
out
xor
pop
and
push
cmp
push
scas
jno
pop
adc
mov
push
cli
jb
cmp
mov
xchg
sbb
add
push
ljmp
pop
mov
stos
push
stc
sbb
mov
sub
lods
inc
jno
ljmp
fcmovu
sub
cmp
dec
test
xlat
mov
jmp
loope
pop
adc
jl
lods
add
add
push
int
sbb
sti
insl
stc
cmp
sbb
sbb
jnp
xchg
data16
xchg
pop
inc
sbb
mov
movsl
adc
pushf
daa
hlt
test
test
mov
add
pop
add
lret
dec
aam
into
es
lret
add
rorb
fldt
cltd
and
icebp
fwait
fidivl
clc
push
jmp
jnp
cld
lea
into
jp
push
cmpb
cmp
mov
fistpl
sub
mov
cmc
mov
inc
flds
insb
flds
aas
add
outsl
iret
xor
sbb
inc
dec
cli
sub
ret
das
pop
mov
push
ja
incl
add
xchg
iret
jecxz
in
loop
or
subb
jle
dec
out
sub
popa
ss
outsl
push
mov
idiv
mov
fwait
rcr
push
shl
xor
incl
or
inc
in
imul
cmp
xchg
cli
fildl
dec
xor
inc
jge
shlb
ret
outsl
stos
jb
filds
fsubs
hlt
mov
ds
shll
sub
lock
fisttpll
daa
pxor
stc
xchg
pushl
pop
sbb
aad
adc
dec
mov
xor
in
std
icebp
out
adc
sarb
pop
call
es
sbb
rorl
lahf
stos
pop
sbb
fadds
lcall
pop
sarl
mov
out
cpuid
out
mov
in
push
lods
sub
sbb
xlat
shr
or
andb
push
dec
popa
inc
jle
je
rorb
mov
ret
insb
aaa
sub
stc
popf
xlat
push
sub
push
sbb
add
sbb
notl
mov
cmp
mov
jae
into
xor
ret
jo
inc
loopne
inc
xchg
pop
in
hlt
mov
add
xor
jecxz
dec
adc
jno
xchg
xor
cltd
sbb
jle
add
aas
shlb
mov
sti
mov
inc
in
adc
ds
es
outsl
push
test
shll
mov
mov
and
icebp
sbb
loop
mov
push
push
je
int
cs
jge
mov
pushf
arpl
addr16
mov
inc
push
and
loope
in
call
sub
shl
js
cli
add
sub
hlt
mov
adc
test
push
icebp
adc
les
or
mov
cmp
push
cmp
scas
dec
sahf
push
dec
mov
pop
mov
pusha
xor
shlb
mov
orb
hlt
or
sbb
push
xcrypt-ofb
cmpsl
push
push
aad
jnp
dec
dec
mov
repz
push
and
xor
jae
inc
pushf
xchg
mov
cwtl
cmpsl
cmp
aaa
xchg
sbb
or
imul
aaa
sbb
inc
into
jne
mov
cld
stos
notl
xchg
sbb
test
outsb
mov
jmp
ds
sarl
sbb
add
divb
dec
mov
mov
cmp
fdivrl
ret
hlt
sbb
and
push
pop
add
cs
sub
rorl
xor
push
ds
xor
orb
icebp
mov
in
and
xor
cmpw
loopne
lea
loop
sub
dec
fnstenv
fcoml
int3
int
and
cmp
xor
xlat
jmp
push
popf
pusha
cld
sbb
cs
jmp
adc
jo
adc
into
ja
mov
or
cli
mov
ficoml
ja
cmc
int3
or
aas
shl
mov
loop
mov
test
ljmp
inc
jecxz
pop
inc
push
fstpt
pop
jno
pop
je
sbb
test
mov
or
mov
fsubl
dec
jb
std
mov
pusha
jp
and
roll
pushw
icebp
ss
insl
dec
bnd
pop
mov
xchg
negl
sub
shlb
mov
repz
xchg
xor
sahf
addl
pushf
loope
pop
sahf
xor
dec
mov
aam
lods
nop
mov
adc
outsl
dec
ret
push
or
pop
insl
add
shrb
pop
aaa
mov
push
add
call
and
cld
fcmovbe
pop
mov
stos
jnp
push
les
xor
lahf
std
clc
bound
pop
inc
pop
inc
jmp
lcall
add
mov
mov
shrl
jae
repz
cltd
add
mov
pop
cltd
xor
xchg
test
lret
jp
jo
mov
arpl
mulb
push
pushf
andl
imul
movsl
push
decl
outsb
push
inc
jmp
mov
jae
adc
daa
xchg
test
jge
daa
mov
into
arpl
fcoml
xor
push
xchg
jb
dec
sbb
dec
cld
xor
call
inc
xor
into
fwait
mov
pushf
scas
mov
in
mov
adc
sub
xchg
jge
sub
in
add
adc
push
jb
imul
inc
in
aas
aas
push
repnz
test
add
aad
scas
xchg
std
cmp
pusha
stos
xchg
and
sbb
arpl
inc
nop
inc
pop
sahf
jne
std
xchg
test
sbb
sbb
push
or
lods
mov
jns
push
shll
sti
push
fimull
test
daa
lcall
adc
mov
in
sbb
mov
mov
gs
pop
addr16
rolb
jns
clc
and
inc
int3
subl
jge
sub
arpl
mov
insb
mov
ss
mov
mov
inc
sti
int
fmull
cmp
add
pop
out
push
divb
xor
mov
scas
adc
mov
jb
or
aam
sub
lcall
sub
mov
andb
cmp
push
mov
push
xchg
inc
fucomip
xchg
and
mov
push
xchg
adc
clc
jae
inc
ja
out
xchg
out
dec
stc
lock
jmp
or
xor
jbe
cmpb
fidivs
int3
dec
aad
xor
sbb
ret
xor
mov
fdivs
cmpsl
push
fcom
shl
mov
cmc
cmp
cmpsb
or
popf
and
pop
enter
mov
xchg
sbbl
out
sahf
out
loop
add
cmp
lods
adc
sbb
xchg
les
aaa
inc
sbb
cltd
pop
push
and
imul
mov
pop
push
mov
std
lret
adc
fidivs
outsl
mov
shlb
roll
js
xchg
adc
jmp
nop
push
sbb
call
fidivs
pop
das
dec
add
jnp
out
add
int
lret
pop
sub
mov
mov
in
into
inc
sub
fiadds
jle
mov
sarb
rclb
and
dec
test
repz
dec
pop
pop
xchg
jp
xchg
lods
daa
lock
cld
mov
test
clc
jge
or
mov
mov
enter
pop
push
mov
push
sahf
adc
cwtl
jg
lahf
lds
xor
movsb
cmc
adc
dec
inc
inc
arpl
es
test
push
lods
out
icebp
jp
adc
jle
repnz
adc
ja
lea
fistpl
adc
leave
shlb
jb
fldcw
in
xchg
add
insl
xchg
mov
jno
mov
imul
lret
lret
mov
daa
mov
leave
jne
stos
lds
lods
inc
ret
mov
testb
pusha
stos
inc
cmp
pop
pop
mov
pop
add
xchg
punpckhdq
sbb
pop
mov
and
lock
aas
stc
push
jns
sbbb
pop
lock
movsb
jne
cmp
cmp
dec
dec
aam
fisubl
mov
ds
gs
rolb
pop
inc
dec
lods
cmp
mov
and
xchg
aaa
imul
mov
je
leave
adc
add
xchg
lods
inc
movsb
pop
ret
add
fstpt
es
leave
int
testl
fsubrl
sbb
pushf
dec
movsb
mov
pop
sub
jg
cli
orl
neg
movsl
int3
or
mov
push
jo
popa
pop
mov
pop
lcall
xchg
int
push
test
xchg
in
adc
cwtl
sub
insl
mov
lahf
dec
outsl
in
mov
sub
inc
gs
cmc
jle
cmpb
cmpsl
pop
push
add
push
mov
cwtl
das
imul
mov
cmp
mov
int
sbb
mov
pusha
scas
scas
test
iret
bound
lret
or
std
xchg
clc
pop
mov
pop
aaa
out
xor
adc
dec
jnp
arpl
test
scas
aad
mov
pop
pop
mov
push
mov
jmp
jp
xorl
loopne
popa
scas
xor
mov
mov
or
ljmp
stos
dec
dec
bound
repz
xorl
outsl
or
lret
lret
jae
pusha
dec
lret
stos
inc
and
enter
cltd
xor
in
add
mov
shll
adc
add
xor
push
jns
jnp
push
pop
inc
cwtl
add
sbb
jne
sub
lods
inc
cmp
jno
icebp
lret
cmp
mov
lret
mov
jne
xor
icebp
dec
sarb
icebp
loope
jo
dec
iret
pop
addl
test
test
popf
push
lahf
push
fmull
mov
test
out
faddl
lock
inc
mov
lods
jne
outsl
inc
mov
push
subb
ja
xor
in
inc
cmp
xchg
cs
dec
cmp
and
xchg
in
aas
mov
ljmp
push
add
loopne
fcoms
mov
pop
mov
lods
mov
xchg
mov
jge
ljmp
mov
jno
jae
pushf
ret
adc
insl
in
xchg
daa
sub
scas
or
aas
push
pop
test
out
test
sti
sub
fmull
or
jbe
mov
stc
and
mov
enter
inc
xchg
mov
xchg
jb
enter
fs
jae
cmp
add
stc
adc
mov
lcall
fldt
movsb
jg
inc
xlat
xor
out
inc
popf
sti
popf
stc
fsubr
mov
xchg
push
xchg
pop
icebp
ret
cs
loope
shl
jns
mov
sbb
out
stos
mov
in
mov
mov
adc
scas
or
lods
adcl
adc
or
sbb
sahf
push
xchg
dec
test
push
fnstcw
call
nop
dec
or
cmpb
lcall
mov
popf
sbb
aad
jge
add
mov
shrd
scas
mov
mov
push
mov
xrelease
int
cli
arpl
fdivrs
movsl
and
push
rcrb
xchg
adc
neg
mov
jg
xchg
scas
xor
ljmp
mov
lahf
and
call
shll
or
cmpsb
cli
loope
sub
pop
shlb
movsb
aas
xchg
cli
push
popf
and
dec
sub
cld
jg
xchg
cmp
push
sbb
inc
push
xchg
hlt
pop
pop
cwtl
pop
push
test
fidivl
ficoml
test
jb
lods
mov
les
inc
or
out
xor
inc
fidivl
sahf
mov
jle
test
jle
ret
mov
stos
jmp
dec
dec
add
pushf
popa
sub
lds
ss
add
adc
out
mov
nop
pusha
mov
add
es
add
push
cmpsl
push
pop
and
jmp
or
inc
jns
jle
cmp
push
sub
fcomip
mov
imul
or
pop
mov
fisubl
inc
cs
push
out
mov
push
jne
int3
add
pop
jb
into
ss
icebp
push
mov
inc
cltd
push
sbb
imul
loopne
cwtl
inc
fnstsw
push
fs
xchg
fldl
mov
sub
or
out
mov
fisttpll
icebp
mov
cltd
add
lret
ss
aas
adc
xchg
add
xchg
addr16
pop
cmpsl
xchg
ror
fmul
or
mov
adc
jae
bnd
mov
add
and
popf
pop
mov
insb
mov
lcall
pusha
scas
mov
cltd
lds
insb
out
insl
and
dec
dec
js
fsubr
movsl
jge
sarb
xor
mov
in
add
cmpsl
mov
mov
int3
or
or
sbb
xchg
mov
daa
mov
jecxz
sub
push
xchg
sub
push
push
jmp
dec
insb
jmp
sub
sarl
clc
inc
aaa
outsb
inc
cmp
std
push
popa
inc
mov
call
push
inc
addr16
and
ss
push
je
mov
xor
mov
xchg
ss
faddl
gs
or
es
dec
sbb
cli
iret
or
scas
popf
jb
pmaxub
sahf
push
mov
cltd
decb
cmpb
inc
mov
gs
lods
mov
icebp
push
int
into
fwait
dec
inc
xchg
add
push
dec
lods
aas
and
jmp
or
notl
insb
dec
pusha
inc
adc
sarb
out
jle
test
inc
outsb
add
out
adc
and
adc
push
mov
sti
ja
lock
hlt
mov
imul
imul
inc
mov
ds
sbbb
in
sarl
sbb
pop
imul
cwtl
cwtl
inc
cld
and
cmc
shll
mov
inc
and
mov
aas
out
add
mov
dec
sahf
ljmp
adc
pop
xchg
mov
outsb
add
lret
mov
fs
mov
lods
ds
pop
outsb
push
add
adc
or
mov
lock
fsubrs
dec
lcall
bound
dec
imul
ret
add
mov
jb
cmp
dec
mov
es
shrb
inc
imul
inc
mov
xchg
arpl
movsl
lds
jp
lods
pop
mov
stc
dec
xor
jns
out
and
fiaddl
and
xchg
xor
int
xchg
dec
dec
loope
fbld
imul
scas
out
mov
jns
jno
sub
out
mov
dec
popa
stos
dec
push
xchg
shll
jbe
cmp
sub
std
pop
adc
xor
mov
adc
mov
aad
xor
imul
xor
mov
jmp
cltd
sbb
out
pop
push
lcall
inc
lahf
fisubs
jg
xor
and
lret
mov
jmp
and
nop
negb
movsl
xor
push
push
in
mov
je
xor
push
imul
adc
je
jb
inc
mov
xchg
les
shr
scas
or
pusha
mov
push
icebp
adc
lret
loop
and
jl
dec
inc
sub
cs
lahf
sbb
shrb
and
int3
loopne
xchg
xor
in
ret
inc
lahf
insl
jge
ja
jnp
inc
shlb
add
lss
mov
int3
out
pop
xor
mov
pushf
cmp
sub
cmc
sti
adc
repz
jg
lea
call
popa
or
push
clc
mov
leave
jg
testl
call
out
mov
push
mov
pop
dec
sti
inc
xlat
rolb
pop
pusha
repnz
sbb
xchg
and
dec
cld
or
cmp
sub
pop
sahf
push
test
xchg
pop
xlat
hlt
push
mov
stos
out
dec
xor
outsl
popa
dec
ljmp
mov
mov
pop
sahf
mov
sbb
lret
mov
rcrb
pop
scas
lds
pop
sub
das
fdivl
mov
data16
mov
lds
ja
sub
push
mov
sub
push
xchg
push
pop
cmp
loopne
xchg
out
inc
cmp
xchg
push
push
leave
adc
adc
fs
push
push
adc
pop
jg
or
pop
pop
jne
mov
clc
ja
movsb
test
imul
mov
pusha
nop
imul
and
adc
mov
push
popf
or
inc
cld
cld
adc
outsl
ja
inc
push
sub
repz
or
das
cmp
in
push
sub
sbb
sbb
jl
pop
or
cmp
int
lods
in
cmp
push
sbb
dec
push
insb
add
jne
lahf
loope
test
push
push
sub
push
cmp
add
mov
sarb
dec
dec
ret
into
movsb
jecxz
jnp
pop
lods
daa
adc
xchg
ds
mov
enter
arpl
cmp
push
lret
out
mov
or
or
mov
xor
addr16
mov
imul
clc
fcomps
insl
jb
mov
int
shrd
or
orb
aad
popa
leave
int
and
inc
push
mov
cmc
inc
into
test
jp
pop
inc
mov
test
les
ss
fists
das
cmpsb
inc
dec
fistl
cli
mov
mov
fisttpll
inc
adc
stc
add
xchg
lea
repz
sub
xchg
mov
cmpps
jns
add
ja
cli
xor
push
and
orb
lods
jb
pop
push
cmp
mov
sub
jmp
adc
ret
jl
bound
sbb
ja
pop
inc
in
andb
test
or
arpl
sbb
pushf
inc
sti
xchg
add
mov
test
or
xor
orl
cmp
int3
clc
rolb
test
cmp
lcall
push
dec
in
insl
or
push
pop
je
scas
es
cld
fldl2t
sub
xor
jb
imul
jl
xchg
add
mov
aam
sub
mov
pop
fwait
f2xm1
test
and
pusha
or
cltd
inc
aad
jnp
mov
mull
jle
repnz
push
mov
fstl
ret
mov
xor
mov
out
push
out
mov
xchg
and
dec
push
mov
fs
mov
cmpsl
and
mov
dec
andb
cmp
xor
push
pop
pop
and
or
dec
mov
rorb
shrl
movsb
jae
repz
xchg
cwtl
xor
mov
rcrb
in
enter
and
jge
int3
out
push
or
xor
ja
bound
stos
fwait
sti
rcrl
out
jp
clc
stos
mov
gs
movsl
daa
test
mov
cltd
xchg
mov
shrl
es
xchg
jp
adc
mov
adc
pop
and
int
mov
or
dec
or
pop
jo
dec
sarb
mov
xor
pop
cmp
mov
hlt
inc
xor
jnp
mov
push
orb
jl
xchg
mov
cmpsb
pop
loop
jne
pop
mov
scas
int
js
mov
jle
incb
mov
xchg
sbb
push
fidivrl
jge
aas
push
or
jl,pn
cmp
mov
lcall
filds
pop
lock
dec
movsl
les
or
xor
inc
ds
jge
mov
add
cmp
pop
jecxz
test
and
jg
inc
cmp
sbb
add
inc
clc
pop
mov
xchg
lret
aaa
jmp
sub
mov
mov
lahf
sub
push
add
xchg
inc
xchg
mov
cwtl
negb
fstpt
pop
or
push
xchg
add
test
das
lods
mov
inc
cmpsl
sbb
cmc
dec
mov
in
push
mov
ficomps
pop
nop
jmp
in
ljmp
hlt
pop
movsl
adc
rcl
add
shll
jecxz
mov
fimull
jmp
pop
lods
add
es
cmp
fldenv
in
clc
mov
xor
xchg
pop
in
mov
notb
mov
xlat
repz
dec
sbb
out
jl
mov
clc
add
sub
jnp
rcll
loop
jne
mov
movsb
mov
mov
push
or
add
cmp
sub
out
xor
fs
fnstenv
or
std
lods
repz
pop
dec
loopne
repz
xchg
xor
mov
jle
lock
and
or
iret
enter
lock
or
pop
cwtl
xchg
test
mov
xchg
int
inc
jecxz
jge
out
xchg
mov
cmp
sahf
out
inc
sahf
inc
lea
loop
ljmp
out
cmp
add
dec
movsb
addr16
negl
mov
or
adc
xchg
xor
add
in
mov
pushf
xchg
cmpsb
and
inc
push
push
inc
adc
push
sets
stc
hlt
adc
cmp
and
jne
xchg
cmpsl
daa
jns
add
inc
mov
push
xor
pavgw
aad
scas
sbb
inc
mov
or
movsb
xor
push
mov
fdivrl
int3
sbb
xor
mov
imul
and
popf
fsubrs
aad
sbb
jp
js
lcall
mov
mov
aam
pop
mov
cmp
add
aam
mov
jae
push
push
mov
test
mov
mov
rol
jmp
ss
in
pop
cmc
test
in
dec
jp
dec
stos
mov
cltd
rolb
add
dec
mov
mov
mov
fidivs
push
shlb
ss
out
sub
stos
dec
popa
pop
jg
mov
out
dec
mov
shl
pop
mov
out
fsubr
out
cltd
pusha
or
xor
inc
cmpb
jl
mov
inc
xor
enter
fadds
mov
dec
test
mov
mov
aad
inc
arpl
movsb
lock
aaa
jmp
and
sbb
test
mov
andb
jbe
lock
ficompl
fnstenv
sbb
jne
gs
in
pop
pop
mov
inc
mulb
dec
out
cmpsb
jle
bound
fwait
xchg
mov
jb
or
scas
jmp
add
sahf
or
mov
nop
mov
add
in
sub
rorb
sub
imull
xchg
call
and
stos
lcall
xor
jmp
stc
xchg
sbb
lods
sbb
das
adc
and
call
cli
jne
shrb
sub
mov
ret
subl
ja
js
stos
dec
leave
je
decl
in
push
shl
mov
les
ds
mov
insl
jecxz
pop
mov
ret
jecxz
call
cmp
or
mov
or
std
xchg
test
call
mov
xchg
adc
mov
xchg
shl
push
imul
mov
adc
push
add
lods
xor
cltd
test
jecxz
mov
mov
inc
fs
bound
daa
outsl
cmp
push
repz
vmaxps
je
lods
and
lods
dec
fstps
sti
scas
dec
jo
popf
or
cwtl
push
sbb
jmp
icebp
and
adc
xchg
add
xor
fdivrl
addr16
inc
arpl
mov
pop
sbb
sub
mov
push
shrb
dec
mov
cmpsl
ja
imul
popf
cmp
inc
icebp
mov
das
mov
mov
fbstp
jno
fstpl
sub
xorl
jne
std
add
xchg
call
xchg
mov
fisubrl
inc
xchg
out
sub
pop
hlt
aam
adc
push
mov
jnp
lcall
inc
xchg
mov
cmp
icebp
imul
sub
cmc
xor
or
jnp
adc
into
cwtl
mov
push
les
mov
dec
and
cmp
pop
rcl
sbb
loop
lret
add
shlb
pusha
fldt
and
cmp
dec
add
fstps
pop
movsl
lret
inc
or
adcl
cmc
pop
mov
xor
in
mov
sub
lret
lcall
cwtl
imul
ljmp
mov
je
jmp
jae
jle
lret
ds
inc
out
and
xchg
scas
mov
popa
call
packssdw
pop
movsl
fwait
divl
add
mov
push
inc
jecxz
xchg
inc
sbb
xchg
add
add
add
mov
subb
cli
jne
mov
mov
fucomi
jae
bound
dec
pushl
jno
and
pop
inc
test
loop
test
cwtl
repz
loop
fadd
pop
fisubrl
imul
ret
loopne
push
pop
jecxz
into
push
mov
or
and
pop
jge
mov
in
stos
push
leave
hlt
mov
cmp
xor
xchg
jg
inc
les
mov
fldcw
into
daa
icebp
cmc
dec
sbb
add
pop
cmpsb
std
cld
xchg
pop
outsl
int
ffreep
out
in
sti
fwait
mov
stc
popf
sbb
jo
shrb
inc
push
and
cmpsl
out
lcall
jle
loope
jle
pushf
scas
inc
or
xor
add
push
jmp
or
mov
das
add
jl
clc
dec
xchg
cmp
inc
stos
in
xor
jmp
mov
lret
nop
cltd
or
in
movsb
cmc
les
adc
pop
in
mov
xor
jno
jns
or
adc
in
or
jo
andb
mov
lds
sbb
push
or
les
clc
sbb
fisttpl
incb
or
movsb
add
pop
in
clc
ret
jge
fmuls
add
test
cld
cltd
dec
adc
cmc
cmpsb
xchg
push
and
mov
je
les
push
mov
push
sbb
ss
pop
insb
jmp
cmpsl
loopne
repnz
inc
adc
mov
fsubl
mov
push
jne
test
mov
lods
sbb
mov
jo
ffreep
insl
xor
mov
cmpsb
outsb
xor
test
scas
lods
jmp
test
popf
in
repz
xor
xchg
xchg
adc
mov
pop
inc
ds
and
fisubs
outsl
mov
push
inc
insl
pop
and
pushf
xchg
fldenv
inc
pop
popl
adc
mov
in
addr16
xor
push
mov
jo
in
ljmp
pusha
in
adc
mov
or
lret
lret
or
mov
repz
mov
subb
aad
ficoms
adc
in
mov
vcvtdq2ps
loope
and
mov
xchg
inc
nop
mov
and
sub
cmp
in
add
out
cmpsl
mov
neg
into
loopne
sarb
sbbb
hlt
mov
add
pop
adc
or
sub
adc
sub
ljmp
adc
and
pop
dec
into
test
mov
test
mov
fdivr
sbb
mov
in
and
daa
inc
cwtl
sahf
dec
scas
call
xlat
outsl
mov
push
jb
dec
dec
ja
inc
dec
dec
imul
fisttpll
pop
into
inc
xor
in
pmaxub
cmp
fs
lahf
fidivrl
lcall
dec
icebp
shrb
jns
dec
pop
arpl
imul
jge
in
dec
adc
ljmp
lods
pop
lret
lret
aad
inc
cmpb
sbb
in
lahf
jmp
adc
cli
daa
adcl
pop
xor
in
cld
cmc
pusha
and
jno
and
loop
push
push
or
dec
adc
adc
lcall
adc
aas
dec
daa
or
inc
in
out
jns
push
out
inc
add
leave
ss
xor
out
test
lea
sbb
outsb
and
jo
int3
mov
and
inc
test
ficompl
je
es
bound
leave
imul
pop
fdivrs
mov
shl
loop
add
jne
cld
nop
cwtl
or
xchg
inc
test
mov
clc
xorb
mov
imul
lock
jecxz
mov
pusha
xchg
sub
push
sub
repnz
cmpsb
adc
sbb
jbe
mov
push
sub
mov
lods
fadds
sub
mov
gs
test
ja
mov
insl
andb
inc
lcall
and
xor
xor
xchg
outsl
sbb
sbb
jp
fwait
repnz
sub
jge
cmc
fs
fnstenv
mov
cmpb
repnz
dec
xchg
mov
jl
and
xchg
mov
mov
outsb
int
pop
std
push
push
adc
clc
ss
mov
ljmp
sub
jnp
jno
cwtl
popf
sub
ljmp
fsts
jmp
xor
mov
jnp
and
jnp
jecxz
pop
ja
mov
loop
imul
movsb
test
sbb
sbb
mov
mov
lds
dec
cmc
loop
aad
lock
dec
mov
pop
add
aas
or
mov
pop
mov
mov
pop
xchg
mov
pop
push
mov
or
mov
outsl
add
mov
in
xchg
sahf
ds
fwait
scas
inc
int
sub
gs
or
enter
out
sahf
xor
aad
jle
icebp
testb
xchg
loope
lds
movsb
repnz
cmp
or
mov
das
movsl
ja
cld
jl
mov
sub
mov
jg
jo
fstl
adc
mov
aaa
sbb
scas
loope
sbb
mov
cmp
stos
pop
in
mov
aam
jp
pushf
lods
inc
in
ror
pusha
jmp
icebp
call
outsl
and
cmovg
jns
arpl
iret
cmp
pop
ds
dec
fiaddl
out
cmp
cs
iret
jne
clc
dec
stc
sub
movsl
stos
int
loopne
add
ss
out
jbe
adc
or
aas
or
or
nop
mov
sub
js
xchg
movsb
mov
mov
int
cmp
push
xchg
push
int
jae
inc
push
push
or
cs
icebp
lds
sub
sub
negl
pop
lret
lock
stos
rorl
jbe
mov
fs
mov
mov
or
enter
adc
and
mov
pushf
inc
push
sbb
jnp
or
ss
xchg
xchg
into
mov
out
idivl
mov
push
mov
pop
xchg
cmp
addb
orl
or
jle
test
inc
fcomps
add
cmpsb
sbb
ret
negb
mov
movsl
dec
push
mov
ljmp
push
mov
and
fldcw
sbb
aad
push
mov
lods
fnstcw
mov
inc
aas
dec
mov
shr
inc
mov
dec
jns
mov
pop
cmpl
rcrb
test
test
xchg
addr16
clc
or
data16
aad
push
movsb
sub
xor
push
or
adc
cmpsb
scas
or
xchg
jb
mov
into
xorl
mov
sahf
movsb
cmp
sahf
into
mov
je
lock
shll
nop
sub
lahf
pop
inc
push
pop
or
js
xor
lahf
push
dec
repz
cltd
xor
cltd
in
andl
jb
inc
adc
pushf
int3
data16
inc
pop
mov
pop
add
pop
inc
mov
rolb
mov
pop
mul
fcmovnb
imul
repnz
mov
push
mov
jmp
sbb
adc
inc
je
out
mov
je
pushf
push
and
int3
repnz
cmp
push
out
push
pop
or
sbb
mov
mov
pop
mov
bound
mov
into
inc
or
outsb
mov
push
mov
jnp
adc
sbb
lret
push
dec
or
lds
xchg
add
push
pop
lods
cld
fwait
mov
jmp
adc
xchg
xor
in
cld
out
cmp
pop
push
pop
femms
mov
out
in
cmp
in
mov
mov
jne
dec
and
subl
xchg
push
inc
movsl
call
movsl
push
ret
jge
and
adc
xor
je
loope
repz
aad
dec
jecxz
lock
push
dec
cmc
mov
daa
in
or
add
ljmp
setno
fsubp
lods
iret
or
cmp
imul
notl
vmread
sbb
push
adc
inc
xor
adc
lret
add
cmc
push
jo
jp
jbe
push
or
or
arpl
int
pop
test
iret
xor
shll
sbb
aad
fidivrs
loop
into
mov
ds
outsl
jne
mov
mov
or
fdivl
mov
sub
cmp
pop
roll
cmp
push
pop
icebp
mov
arpl
or
fstp
sub
sbb
sub
loopne
push
adc
mov
push
out
pushf
dec
rol
sbb
cmc
repz
shrb
fisttpll
jp
add
ljmp
wbinvd
cmpsb
aam
lret
cmc
sub
stos
ja
mov
sbb
jns
fidivl
pushf
pop
movsb
jmp
fnstcw
and
and
outsl
in
xor
cmp
sbb
push
aas
lods
out
out
mov
dec
push
add
bt
ja
lock
dec
cmpsb
pusha
scas
inc
xchg
imul
sbb
xor
jge
push
fstl
jmp
jno
xor
or
cmp
add
mov
rcll
inc
cwtl
bound
ret
mov
aas
push
testb
roll
adc
or
scas
pop
jbe
jae
and
sbb
mov
lods
pop
push
mov
pop
and
and
xchg
add
shrl
rcll
inc
popa
mov
loopne
int
dec
mov
add
aad
xchg
out
adc
lahf
loopne
xchg
mov
add
insb
subb
adcl
std
or
jg
jae
mov
ja
stos
jne
jb
loope
mov
lea
das
adc
rcrl
dec
lret
inc
push
imul
push
xor
and
jno
push
les
dec
negl
mov
addr16
lretw
imul
es
lcall
fbstp
repnz
push
fsubp
xor
adc
mov
fstpl
aaa
into
inc
inc
scas
xchg
fs
aam
inc
pop
bnd
pop
aaa
mov
addr16
inc
lret
mov
xchg
cli
movsl
xor
imul
test
mov
jns
mov
cmp
sub
sub
dec
iret
xor
push
addr16
in
dec
xchg
rcrl
getsec
xor
mov
dec
mov
insb
mov
adc
mov
pop
jp
into
je
mov
out
test
xchg
enter
push
addr16
mov
out
dec
add
lahf
lret
xchg
mov
mov
je
leave
iret
lods
inc
rcl
jge
and
and
jmp
add
mov
gs
xchg
sbb
jo
mov
scas
adcb
lahf
idivb
xor
jmp
cli
in
sub
xchg
ret
ret
nop
adc
aaa
pop
jecxz
cwtl
loope
inc
in
cmpsl
ds
jb
mov
pop
mov
or
xchg
lahf
pop
push
test
sbb
mov
xchg
pop
mov
aad
mov
xor
movsl
lock
mov
xchg
movsl
vpsubusw
lahf
cli
loop
rcr
xchg
stc
jno
aaa
push
jae
je
sub
mov
mov
inc
inc
xchg
in
sbb
mov
add
xor
cmp
bound
subb
pop
cld
icebp
inc
gs
int
rclb
lret
in
inc
inc
rorl
loop
fxch
jne
test
or
lret
pusha
fcmove
sbb
jo
imul
xor
mov
xchg
adc
stc
xchg
fwait
xor
mov
jl
ss
mov
push
sbb
xchg
adc
popa
movsl
mov
cmc
imul
or
push
ljmp
mov
add
xor
jle
sbb
lahf
fdivp
lea
repnz
push
mov
adc
push
adc
jne
xchg
testl
cld
les
negb
mov
dec
dec
das
mov
cmc
jp
hlt
icebp
inc
out
xor
cld
xchg
dec
jno
jmp
lods
pop
bound
repnz
inc
mov
into
inc
lock
ja
xchg
mov
push
lods
and
lea
xchg
not
xor
sub
pop
ljmp
and
sbb
adc
ss
pusha
mov
std
or
dec
jp
pop
dec
fdivrl
cmc
xchg
adc
adc
in
inc
repz
into
and
ret
andb
aas
scas
nop
pusha
push
mov
push
aaa
into
lods
pushf
pop
outsl
into
stos
aam
xchg
iret
push
sbb
popa
pop
cmova
sahf
xor
clc
jns
enter
insb
xor
sahf
or
pop
sbb
mov
mov
adc
sbb
ficoms
pop
cmp
adc
mov
das
inc
rol
ljmp
sarb
mov
cmp
daa
add
xor
jl
cmpsb
add
jno
push
insb
push
push
aad
popl
xor
jns
and
faddl
out
ficomps
in
xchg
mov
into
pop
insl
lret
mov
jl
cmp
and
or
outsl
loop
and
fcoms
out
push
arpl
inc
imul
lret
mov
pop
inc
scas
xor
mov
flds
rcrl
loope
adc
filds
jo
loopne
les
shll
in
js
push
adc
or
js
adc
loope
push
or
lea
mov
xchg
clc
insb
jle
icebp
out
add
out
mov
pop
cmp
loope
push
xchg
sbb
xor
mov
aad
inc
and
mov
push
outsb
shlb
pop
gs
jg
repnz
test
jae
mov
int
scas
mov
cmp
add
lea
sub
add
dec
or
jo
lret
inc
push
xorb
pop
and
mov
push
mov
mov
cmp
and
ljmp
lods
add
cmp
lret
into
adc
dec
mov
aaa
jo
adc
dec
pop
enter
in
push
and
lret
outsl
pop
sub
in
stos
push
sbb
outsl
lret
mov
std
nop
push
fucom
rorb
xor
mov
iret
pop
cli
push
insb
push
push
push
test
outsl
push
adc
xchg
insb
hlt
mov
add
scas
inc
pop
and
push
add
inc
push
lret
outsl
push
push
xor
xbegin
fdiv
mov
xor
popf
sbb
and
mov
sbb
arpl
es
push
scas
insl
loopne
push
mov
or
outsl
cmpsb
mov
dec
pop
sbb
mov
lret
adc
jne
xor
std
xchg
mov
adc
mov
push
jne
pop
xchg
pop
pushf
xchg
ja
call
and
in
ffreep
xchg
leave
cmpsb
jmp
into
mov
push
sbb
xorb
mov
das
pusha
xlat
jae
lcall
fidivrl
leave
je
inc
add
sti
aas
rep
movsl
xchg
test
outsb
add
loope
push
cs
xor
mov
xlat
dec
add
inc
loope
mov
pop
dec
xchg
and
loopne
fs
adc
add
xchg
dec
lcall
jae
pusha
aam
test
pop
daa
xorb
cltd
mov
inc
divb
dec
mov
mov
imul
dec
movl
mov
and
sub
aaa
or
popl
clc
or
test
jns
cmc
scas
in
rcrl
movb
call
sbb
ret
push
popf
mov
dec
pusha
jecxz
adc
xchg
add
jmp
imul
movsl
repnz
cmp
add
dec
out
jnp
insb
imul
cld
xor
js
dec
xor
jnp
rcl
pushf
dec
xchg
into
push
sbb
add
push
xchg
testb
xchg
pop
cltd
lock
cmp
stos
jle
xrelease
test
test
or
pop
inc
mov
sub
sbbl
ficompl
inc
pop
sahf
or
push
cmp
xchg
mov
push
loop
jns
subl
push
push
insb
adc
int
add
mov
cmp
sub
pop
xchg
lret
sub
xchg
shrb
add
mov
testl
imul
inc
shll
mov
int3
je
or
sbb
sbb
clc
push
sahf
sub
adcb
mov
jp
stos
sub
xor
pop
fidivrs
sub
mov
cmp
movsb
std
ds
add
repz
adc
test
popa
mov
xlat
sbb
mov
lock
addr16
pop
arpl
push
lods
inc
adc
in
and
sub
jge
in
test
rcrb
ds
cs
mov
pop
sbbb
ljmp
lods
mov
sbbl
jbe
test
hlt
lahf
pop
lret
xor
pop
rclb
stos
out
lds
adc
cmc
ja
aaa
into
aaa
js
sbbl
sbb
pusha
cwtl
lahf
sbb
rcrl
and
push
mov
cmp
ss
jo
mov
int3
idivl
iret
addr16
push
repnz
cwtl
mov
pop
pop
not
dec
adc
jbe
or
sbb
jb
lds
push
mov
jg
repz
cmp
push
fnstsw
outsl
fbstp
adc
jmp
scas
fwait
push
adc
add
cmpsl
push
mov
loope
cmpl
js
fdivrl
and
lock
ja
leave
and
inc
decb
sbb
dec
jge
fistpl
jl
push
ljmp
jne
adc
push
inc
loopne
aam
fcom
fsubrp
dec
je
mov
xchg
out
cmp
and
mov
data16
rcrb
xchg
dec
jae
sbb
jmp
repz
cltd
pusha
ss
insb
je
mov
mov
sbb
cmp
jecxz
jecxz
mov
je
jns
mov
pop
dec
stos
inc
cmp
jecxz
xchg
gs
imul
insb
pop
push
icebp
cmp
cmp
cltd
in
repz
leave
cltd
xor
mov
push
outsl
mov
cmp
scas
call
push
add
divb
cli
adc
mov
jge
push
rsm
fpatan
cld
mov
xor
sub
cmp
in
xchg
cli
jge
xor
in
cmp
imul
cmc
shll
ljmp
mov
call
mov
je
int
rcrl
mov
test
xchg
jge
add
mov
pushf
cmpsb
lea
mov
idiv
out
mov
and
pop
dec
into
push
ds
pop
decb
gs
sub
fiadds
jp
lret
inc
and
int3
pop
lret
add
mov
arpl
jg
arpl
adc
scas
add
xor
pop
int
xchg
add
adc
aad
test
jp
dec
movsl
dec
lcall
testl
out
addr16
mov
dec
inc
mov
cs
xchg
push
aas
pop
out
jo
cmp
xchg
dec
fadd
add
stos
sti
jo
add
adc
je
shlb
jp
jmp
xchg
pop
sti
fsubl
mov
stos
and
mov
inc
sbb
dec
pop
push
inc
test
xchg
xor
pushf
pushf
cli
vandnpd
stc
pop
push
outsb
fisubl
andl
and
push
adc
mov
mov
sbb
subb
scas
and
sti
imul
mov
arpl
pop
jb
inc
xchg
sub
cmp
rol
insb
pop
sahf
mov
pop
in
jb,pt
and
stos
xchg
cmpsb
sbb
int3
repz
push
insl
push
lcall
inc
xor
mov
stos
and
insl
loopne
notl
repnz
cvttps2pi
mul
cmp
pop
push
or
mov
jle
push
jmp
ret
add
icebp
lock
jo
mov
repnz
sti
add
jns
je
enter
stos
push
cmpsl
je
fs
xchg
xor
popf
inc
dec
loope
stc
fs
fs
bound
jnp
inc
mov
inc
popf
mov
stc
les
popa
std
xchg
repz
insl
sti
jns
mov
int
pop
jg
outsb
add
sbb
das
dec
hlt
cmpsb
jge
pop
push
cli
mov
jnp
in
mov
jg
enter
pop
xchg
xchg
cmp
jno
mov
insl
fmuls
hlt
mov
sbb
scas
movsl
xor
loopne
cmp
mov
pop
adc
add
iret
pop
sub
add
sbb
ret
and
mov
lods
adc
push
pop
outsl
or
shr
jo
sbb
repnz
ret
jnp
mov
xchg
xor
inc
cmp
rcrl
mov
stos
pushf
sub
faddl
jmp
aam
push
fsubr
cmpsb
leave
xor
xor
fimuls
push
dec
repz
daa
mov
lods
mov
int3
jnp
sbbl
mov
mov
jmp
and
cmp
xchg
cltd
arpl
and
shl
inc
mov
in
jmp
ret
pop
jecxz
jno
pop
sub
pusha
mov
je
clc
mov
cmp
test
loop
outsl
jns
test
ret
inc
out
cmc
loop
cmp
fnsave
jge
insl
sub
mov
dec
or
in
pop
and
dec
xor
gs
cmp
test
mov
dec
mov
loopne
xor
mov
push
nop
pop
int3
mov
and
aad
adc
sahf
cmp
cs
add
adc
push
lcall
ja
dec
icebp
addr16
jb
sbb
rcrl
sbb
dec
dec
pop
loop
xor
in
inc
mov
or
inc
enter
popa
inc
mov
test
push
sub
push
push
or
dec
inc
sub
mov
loop
inc
or
ja
and
aad
outsl
inc
iret
in
ds
mov
je
or
xchg
lock
xlat
mov
lahf
ret
lock
push
cmc
inc
test
call
cmp
das
mov
aad
inc
mov
xchg
inc
and
mov
push
add
xor
shll
adc
cltd
cmpb
jmp
sbbb
xchg
xor
xchg
inc
inc
cli
xchg
mov
xor
adc
out
scas
lea
jmp
pop
push
lods
or
out
xchg
mov
addl
sbb
aaa
add
mov
in
adc
mov
mov
fldcw
sar
sbb
ret
adc
dec
rclb
call
lods
mov
mov
add
add
sub
xchg
xchg
shrb
push
inc
push
inc
xlat
mov
inc
mov
repz
push
add
rcrb
push
daa
jns
mov
and
cltd
push
push
lret
sti
adc
add
sbb
mov
dec
aaa
dec
test
out
dec
inc
ds
dec
popa
ficomps
daa
and
inc
adc
decl
ds
cld
lcall
gs
lret
cli
lea
lcall
cmc
imul
dec
jne
aas
scas
cmp
or
in
xchg
lods
les
pushf
aas
je
jno
jp
ljmp
mov
jo
jo
mov
or
pop
adc
fucomi
push
popf
xchg
jns
jae
xor
add
dec
stos
push
sub
outsl
mov
push
sub
xchg
lods
jno
dec
mov
dec
in
inc
xchg
aas
cmp
scas
aad
jge
cmc
mov
push
test
adc
lret
aam
loope
popa
mov
das
popl
or
ljmp
or
xlat
jnp
lds
cs
or
sbb
pop
es
addr16
mov
loopne
test
cmp
rclb
mov
insb
popa
cli
aaa
jnp
jae
lcall
cmp
mov
cmc
jb
push
lret
push
fwait
das
cmp
mov
xchg
xchg
ja
repz
dec
popa
fcmovb
iret
ror
iret
inc
cmc
mov
xor
and
inc
xlat
sbb
imul
test
lods
das
int3
arpl
das
shr
sub
xchg
or
js
xchg
ja
add
orl
push
cmp
test
jg
xchg
sbb
das
jnp
roll
std
nop
addr16
pop
test
pop
scas
stc
push
ja
call
loopne
inc
inc
push
mov
inc
inc
lods
mov
enter
addr16
mov
push
cmp
sub
push
cmp
pop
inc
mov
fdivl
shrl
movsl
fcmovne
jne
xsaves
inc
cmpsl
or
mov
repnz
push
add
hlt
and
inc
lret
bound
inc
xor
mov
adc
lret
adc
xor
or
jno
cwtl
cs
xchg
mov
inc
push
repnz
int
fstp
and
and
sbbb
aam
repnz
cmp
mov
mov
movsl
hlt
mov
stos
xchg
cli
fwait
adc
pop
cmp
xor
out
cmpsl
mov
dec
adc
ja
xchg
jge
push
scas
and
xlat
outsb
test
jbe
out
cmc
ds
or
aam
fimull
add
es
loop
xlat
sub
sarb
sti
dec
mov
stos
movsl
mov
scas
ja
lods
dec
jle
jbe
add
jns
xchg
xchg
add
xor
and
sub
sti
shr
hlt
mov
test
lret
cld
mov
fidivl
inc
fnsave
pusha
std
push
lods
ja
adc
stos
xchg
mov
push
int
divb
enter
mov
mov
jge
cmp
test
dec
dec
popa
paddusb
mov
xor
xor
loopne
dec
adc
jg
sbb
fdivrl
sarl
lods
fisubs
push
out
lods
adc
test
mov
loopne
mov
and
hlt
movsb
aas
jecxz
call
cli
or
int3
shrl
mov
adc
or
lea
dec
stc
fisubs
sbb
jb
ss
lea
push
push
adc
das
jae
push
pop
or
mov
lret
cld
pop
imulb
mov
repnz
leave
and
jns
jo
pop
sub
sbb
in
adcl
adc
jns
ja
movsl
adcb
ja
xor
jecxz
je
xchg
sub
add
nop
data16
or
dec
pop
mov
cmc
dec
xchg
scas
xchg
imul
into
and
pop
xchg
adc
jo
insb
js
ss
xchg
adc
mov
daa
movsb
inc
popf
je
mov
sti
cmp
hlt
mov
out
sti
inc
add
jl
icebp
xchg
inc
adc
push
or
in
pop
jge
int3
nop
xor
enter
sbb
data16
fdivrl
xchg
sbb
sbb
out
xlat
inc
and
inc
pusha
cmpl
aaa
hlt
lret
xor
stc
aad
pop
adcb
xor
push
adc
sbb
inc
inc
mov
push
sub
cmpsb
cmp
ret
nop
inc
clc
jns
scas
add
fwait
inc
sahf
jmp
lea
xchg
and
test
inc
fxtract
fbld
adc
cmp
pushf
mov
mov
loope
lods
out
adc
test
jo
pop
add
aam
xor
or
pop
add
push
cltd
imul
mov
jbe
mov
cmp
cmp
cmp
aas
out
icebp
and
icebp
pop
mov
dec
xor
loop
jp
stos
mov
out
ss
fldcw
hlt
movsl
pop
divl
aad
push
pop
ret
out
test
adc
cmp
lea
mov
mov
out
scas
mov
lods
xlat
pop
test
inc
fcomi
pop
inc
es
dec
fwait
cmpsl
dec
dec
pop
jno
in
push
sbb
nop
inc
fs
xor
jno
out
mov
cmp
jb
sbb
dec
out
out
inc
xor
pop
enter
ja
sub
adc
mov
mov
sub
sbb
shl
xchg
jle
pop
fs
incl
testl
das
adc
lret
shll
jg
rcl
mov
xchg
jmp
fbld
into
sub
pop
pop
movsl
dec
adc
and
lds
arpl
imulb
dec
in
mov
push
pop
pop
add
loop
mov
movsb
pop
xchg
adc
mov
pushf
sbb
sub
loope
mov
gs
in
or
and
mov
out
jb
lret
jmp
pushf
pusha
imul
jb
bound
out
add
shl
add
xchg
dec
mov
adc
mov
jnp
and
sti
push
call
jmp
ds
pop
in
pop
mov
push
or
fmuls
fidivl
pop
adc
fsubrp
ds
fdivp
insl
subl
sbb
jnp
xchg
ds
es
aad
jle
mov
mov
loope
imul
sbb
sti
jnp
imul
dec
cmc
and
repnz
inc
lods
rclb
mov
ljmp
std
cmpsb
movsl
and
ficompl
ja
sti
lcall
cmpsb
out
pop
rcrl
popf
xchg
mov
pop
in
bound
xchg
adc
ja
or
rolb
and
xor
jo
aas
pusha
jne
add
jg
in
adcb
push
in
jb
sbb
shrb
cmp
test
imul
fs
fs
push
fcmovne
add
lds
stos
mov
pop
and
adc
push
insl
or
pop
repnz
or
shl
jns
cmp
enter
dec
lock
test
sbb
mov
mov
lcall
push
ss
inc
fsubl
mov
in
jecxz
cld
xchg
add
filds
dec
and
lods
and
leave
cmp
cli
sbb
mov
rorb
jle
inc
xchg
dec
add
sbb
and
fdivl
cmp
scas
inc
jecxz
dec
loop
jp
out
js
and
cwtl
push
pop
andl
cmc
pop
mov
cs
sbb
mov
scas
jae
fidivrs
mov
cmpsb
rcl
xlat
sbb
rcll
in
cmp
popf
pop
sub
and
push
pop
push
sbb
mov
and
popa
scas
lea
and
or
cmp
mov
enter
mov
pusha
or
adcb
push
pop
outsl
sbbl
mov
call
jge
out
jae
sub
mov
lcall
test
mov
push
les
lea
cmp
aas
xchg
inc
sub
js
inc
stc
clc
test
xor
sub
imul
xor
sub
sbbl
pop
mov
sub
iret
ret
ficompl
sbbl
popf
sub
inc
dec
jns
sub
cmpsb
adc
ret
pop
pop
jecxz
push
adc
ss
lods
cli
mov
inc
test
loopne
mov
jmp
loop
ljmp
test
or
jb
out
jle
fbstp
sbb
mov
pop
sahf
jmp
addr16
mov
cmpsb
mov
mov
std
cltd
add
pop
lret
cltd
test
pusha
dec
bound
iret
sub
sbb
cmp
lret
inc
sbb
ja
in
or
cs
outsl
mov
pop
cmpsb
clc
lods
xor
add
fmul
and
dec
push
ret
test
adc
mov
and
xor
and
and
xchg
nop
fldenv
lea
mov
fimull
out
adc
cwtl
imul
or
jmp
sbbl
xchg
xchg
add
push
xor
pop
cmpsl
in
lds
movsl
cmpsb
lock
sub
mov
jne
or
inc
add
enter
lahf
imul
adc
into
in
in
imul
adc
je
inc
push
scas
in
loopne
inc
sbb
mov
shr
cmc
std
push
dec
cmpsb
daa
push
mov
jns
nop
lods
jmp
clc
loope
add
pop
rolb
rclb
ret
insb
inc
ficoml
aas
push
xlat
push
add
xchg
movsb
add
sbb
sbbl
sbb
mov
leave
lock
mov
adc
sub
lods
adc
stc
sub
idivb
fdivl
rcll
push
xor
adc
fcmove
or
mov
sub
pushf
dec
movl
cmp
xchg
test
popf
in
sbb
push
mov
push
xchg
fmuls
out
xchg
out
adc
xchg
sarl
add
xchg
lahf
mov
scas
fwait
sub
fwait
test
mov
adc
xchg
hlt
outsb
inc
out
lds
mov
ds
inc
insb
xlat
stos
and
sub
add
inc
rol
xor
ret
jle
or
loopne
int3
cmc
mov
fisubl
xor
adc
mov
pop
mov
fprem
push
xchg
sbb
fnsave
notl
push
leave
inc
aam
jge
test
jbe
repz
out
mov
int3
mov
or
mov
ja
pop
cmp
xchg
jge
push
jae
sub
mull
movsb
lret
mov
push
pop
rcrl
cmc
push
fmul
lahf
cmp
jmp
mov
vmovd
mov
inc
bound
cmc
mov
xchg
in
xchg
mov
dec
shr
out
sub
and
out
push
lahf
aad
xchg
mov
pop
lds
jne
insl
notl
push
fldcw
mov
mov
xor
loopne
jg
insb
in
cwtl
and
and
xchg
cmp
jo
cli
pop
imul
adc
jp
sub
jle
pop
daa
cmp
roll
add
cs
xor
dec
mov
jge
xchg
lock
addl
mov
jbe
arpl
inc
and
js
sbb
add
add
rolb
mov
adc
inc
push
notb
stos
daa
jae
mov
cwtl
addb
mov
pop
adc
jne
mov
or
jns
xlat
xchg
mov
push
int
loope
cld
xchg
les
cmc
mov
add
lds
adc
sti
sub
arpl
cld
sbb
mov
stos
cmp
sub
add
xor
in
and
adc
mov
cltd
xchg
fsts
lahf
mov
jnp
shll
pop
jecxz
in
xchg
pop
pop
movsb
cmp
scas
ret
cld
xchg
out
test
shlb
inc
mov
jo
inc
mov
std
scas
ljmp
sbb
les
fisubs
add
ja
cmpsb
jo
decb
inc
cmc
inc
cwtl
arpl
mov
mov
jmp
ficomps
xorl
inc
adc
sub
dec
jecxz
rorl
lock
in
scas
ds
lock
xchg
imulb
pushf
push
filds
add
xor
ret
jle
insb
add
mov
adc
cmp
push
jle
add
sbbl
pop
sbb
jg
jecxz
jl
unpcklps
fldl
mov
inc
mov
out
test
xchg
inc
xchg
imul
push
mov
fsubs
ljmp
mov
add
inc
pusha
std
mov
jmp
adc
mov
idivl
mov
into
aas
mov
fldl
or
sub
add
ss
aam
or
adc
out
out
mov
or
insb
loop
outsb
test
mov
das
xor
jnp
jb
data16
repz
add
jge
mov
adc
out
push
sbb
and
or
movl
push
jp
push
lods
xor
sbb
adc
pop
je
cmc
test
roll
mov
rol
rcr
ret
sub
mov
xor
xchg
pop
sbb
dec
push
dec
mov
sub
pop
fmulp
dec
ret
fnstsw
mov
or
dec
ja
lahf
test
cld
outsl
dec
inc
dec
popa
out
push
sbb
mov
fcomip
pop
push
pop
adc
cwtd
insb
sub
mov
sub
inc
in
jmp
lret
lret
jg
fcomip
es
mov
es
inc
into
int3
mov
cmc
mov
shl
sbb
aas
sub
into
lret
rcrl
pop
shr
jg
fidivs
adc
fmull
sub
out
pop
mov
imul
ss
xchg
popa
inc
testl
mov
cld
push
stos
sbb
xchg
cmp
addr16
mov
test
aad
rclb
adc
pop
fstpt
in
or
testl
in
imull
add
jne
andl
or
push
pop
je
stos
adc
ret
mov
mov
jbe
iret
roll
push
xchg
pop
repz
dec
add
push
pusha
xchg
sub
push
testb
outsb
pop
cmp
mov
sub
inc
cli
scas
cmc
xor
xor
or
push
jae
xor
mov
jmp
shl
pop
addl
mov
xchg
add
xorb
fisubs
mov
push
insl
push
js
sbb
loopne
mov
in
fmulp
das
mov
ljmp
pop
xchg
push
mov
ljmp
pop
icebp
int3
fcomps
push
in
js
adc
pop
int
xchg
jns
mov
in
xor
lret
mov
scas
push
cmp
adc
ficoms
pop
test
cli
les
jo
jo
xor
cmpsl
fsubrl
sub
sbb
add
scas
push
rcrl
stos
mov
fwait
mov
mov
cld
scas
jle
outsl
jmp
shl
jb
cmp
dec
scas
and
cltd
push
das
xchg
stos
inc
dec
adc
push
outsl
cmp
mov
aam
clc
or
mov
sbb
ret
fists
ss
fistpl
mov
popa
jg
pop
repnz
mov
pop
xchg
movl
xchg
mov
push
and
test
dec
push
jmp
aad
and
sarb
popa
xor
clc
test
in
ja
jg
sub
sbbl
sbb
or
adc
add
jecxz
out
out
add
cld
xchg
daa
test
xor
fcomi
adc
jp
mov
push
and
sahf
xlat
cmc
stc
dec
mov
cmp
nopl
movsl
sbb
mov
xor
pushf
in
xor
test
add
es
and
xor
sbb
mov
add
test
mov
mov
jns
pop
es
push
out
daa
incl
dec
fsub
fdivs
mov
push
std
out
adc
lods
push
sub
cmp
cmp
stos
aas
fs
cltd
pop
lret
out
ja
divl
fidivrl
lods
and
cmp
dec
or
loop
stos
pop
enter
dec
jmp
sbb
pop
je
call
xchg
mov
push
or
or
jns,pn
xlat
gs
and
sub
data16
xchg
mov
xchg
lds
sbb
sbb
cs
dec
dec
pop
add
aaa
and
xchg
in
aaa
push
enter
test
fnstcw
fwait
ss
jnp
sub
in
test
lret
int3
test
fsubrs
addr16
sub
out
pop
sbb
ss
cmp
sub
mov
mov
mov
adc
mov
add
jecxz
jns
popa
call
sbb
dec
cmp
pop
das
fists
stos
fimuls
sbb
std
cmc
mov
pop
dec
outsb
sbbb
out
sahf
jmp
jle
rcll
pop
ljmp
push
push
inc
fwait
gs
int3
movsl
push
inc
test
cmpsl
pinsrw
jnp
or
ljmp
ljmp
inc
out
xchg
push
cmp
mov
fisubrs
mov
push
sti
xchg
clc
ja
xor
inc
sub
pop
pop
dec
movb
jno
sbb
inc
xchg
jnp
les
pop
jne
and
and
inc
or
and
dec
fucomip
xchg
and
xor
and
fisubrs
inc
rol
inc
dec
lds
sbbl
pusha
push
stos
push
add
inc
push
xor
jg
ss
adc
xchg
jl
cltd
std
xor
lock
inc
pusha
std
push
in
push
aad
in
cmpl
ljmp
xchg
add
xor
fldenv
mov
aaa
xchg
mov
or
inc
cmp
cmp
insl
jg
imul
push
addr16
inc
push
cmpsl
jnp
int3
push
jne
scas
or
mov
sbb
jae
add
fimull
in
push
sub
into
mov
pop
dec
sbb
scas
xlat
sbb
sbb
in
cmp
enter
mov
cmpb
xor
mov
cmpsl
les
aas
xchg
jo
push
sarb
out
sbb
cmp
mov
cld
fdivrs
popa
gs
and
loop
std
sbb
cmp
movsl
inc
push
ja
push
popf
fisubrl
cli
jecxz
pushf
scas
add
lea
stc
mul
sti
dec
adc
loope
add
jo
mov
fimuls
cld
jne
lods
xchg
jge
ret
shll
add
imul
mov
cmp
rol
cli
mov
mov
jmp
or
xchg
push
je
sarl
cmp
testb
cld
mov
aas
adc
sbb
jp
inc
lcall
and
inc
push
jne
clc
push
mov
mulb
outsl
fdiv
call
movsl
pop
mov
fldl2e
call
jno
and
cmp
jo
dec
mov
push
in
cmp
bound
icebp
push
sub
inc
lods
aas
pusha
xchg
cmp
add
adc
sub
dec
enter
rcll
test
test
cmp
mov
push
xchg
push
scas
pusha
cmp
push
or
icebp
movsl
out
fcoml
xor
pop
sbb
cmp
push
lods
sub
push
adc
mov
jne
enter
sub
fmuls
pop
xorb
sub
sahf
gs
dec
cmp
outsb
outsl
push
mov
cmp
sbb
sub
pop
mov
xor
jo
cld
dec
push
aam
mov
aad
test
lret
sub
inc
in
pushf
mov
into
out
enter
popa
fs
adc
pop
popf
xor
sub
mov
lods
adc
fiadds
aas
dec
inc
jbe
test
out
xorb
aas
mov
fcmovnb
out
stos
xchg
frstor
sub
push
xor
fisttps
addr16
add
xor
repz
add
dec
dec
testl
test
xchg
add
lods
mov
mov
sbb
inc
push
jmp
push
xchg
and
cmp
jno
jno
mov
pop
lock
adcl
test
data16
push
enter
in
pop
hlt
or
mov
or
mov
out
xor
mov
mov
jns
mov
jle
pushf
mov
sub
scas
lock
movsb
cmpsl
repz
scas
rcrb
popa
enter
push
je
mov
popa
subl
pop
lcall
lahf
stc
push
cmp
mov
es
test
int3
jle
cmc
inc
adc
test
inc
mov
aas
dec
rclb
jb
cmpsl
pop
fnstsw
sub
cli
mov
xor
sbb
stos
inc
test
fsubrl
and
roll
out
ja
push
cmp
addr16
enter
xchg
mov
fsubrs
sbbl
outsb
cmpb
dec
cmp
xchg
dec
dec
dec
ficoms
rcr
aam
jg
repnz
pop
into
lret
push
push
dec
nop
daa
loope
fwait
or
xchg
sbb
push
jmp
pop
nop
push
xor
testb
rclb
repz
sbb
rolb
or
mov
mov
push
cld
or
jbe
aas
cwtl
jnp
mov
xor
jae
xor
lock
add
pop
xor
and
fwait
cmp
xlat
mov
lock
test
out
add
test
fdivl
pop
dec
std
or
cmp
adc
rcrb
inc
sub
sti
sarl
xor
sbb
test
sbb
or
ds
daa
push
sub
add
std
scas
xlat
popf
in
xchg
cld
xchg
inc
xor
das
xchg
cmp
push
inc
aam
cmp
std
mov
jl
inc
test
je
lock
inc
pop
stos
fwait
shlb
push
adc
jnp
fstps
frstor
mov
fistpll
pop
inc
in
out
out
cs
aaa
mov
xor
test
bound
xchg
xor
xchg
jge
fs
ret
test
mov
imul
mov
sbb
lahf
pop
mov
or
test
inc
popa
and
push
mov
je
jge
mov
xor
frstor
movsb
push
add
or
jmp
jge
mov
pushf
mov
hlt
outsb
adc
in
pop
pushf
scas
jg
cld
mov
cmp
mov
test
sbb
scas
inc
add
es
les
push
mov
cmp
scas
mov
pop
cmc
xor
and
or
in
mov
push
push
aaa
sbb
mov
mov
loope
mov
pushf
leave
je
sub
push
or
loope
ss
mov
add
sub
es
mov
popa
popa
and
lods
push
jl
add
clc
ss
daa
iret
mov
push
andl
movsb
xorb
movd
imulb
cmp
mov
dec
adc
sub
mov
ds
ljmp
dec
xlat
loope
mov
mov
outsb
lock
push
mov
imul
cmc
arpl
mov
sub
cmp
stos
dec
leave
dec
in
pop
fsubrl
les
xchg
sbb
push
cmp
adc
jecxz
je
push
or
cltd
inc
push
aaa
cli
adc
insb
shll
dec
adc
int
ljmp
pop
ret
mov
jnp
sub
lcall
cmp
lods
mov
rcll
adc
mov
pop
xor
aam
xchg
pop
jae
mov
movups
adc
or
pop
mov
flds
push
xchg
xor
ljmp
pop
in
xchg
or
rorl
pop
jmp
pop
out
xchg
cwtl
add
int
repz
popf
data16
inc
mov
xchg
mov
adc
add
pushf
and
push
and
repnz
cmp
jecxz
or
das
or
mov
out
cmpsb
dec
mov
andl
jl
mov
psrlq
adc
and
clc
cmp
cmc
adc
fwait
pop
pop
dec
or
jecxz
out
adc
inc
rcrb
mov
pusha
inc
or
or
and
ret
roll
push
dec
dec
lea
add
jmp
xchg
push
insb
lea
hlt
and
out
mov
pop
cmp
jns
or
mov
xor
jmp
or
pop
cmpsb
je
pop
test
loope
jo
cmp
es
sbb
in
inc
test
xchg
and
movsb
cltd
lret
jmp
jbe
push
in
idivl
sub
ds
mov
aas
imul
insb
xor
mov
push
cmp
pop
orl
jge
pop
js
in
jge
inc
cmp
mov
in
xchg
mov
xchg
jg
xchg
add
js
jecxz
push
test
sub
out
push
xor
or
xchg
stos
subb
mov
adc
dec
loopne
shrb
xor
addr16
jecxz
and
mov
cmp
mov
in
pop
mov
inc
mov
fwait
inc
dec
test
in
jge
insl
cmp
or
repz
adcl
dec
pop
pop
scas
mov
pusha
xchg
sbb
sahf
mov
roll
std
pop
out
mov
mov
xlat
adc
jbe
call
jmp
enter
dec
add
jns
imul
int3
jge
adc
cltd
mov
outsb
hlt
aas
adc
dec
mov
fwait
fs
pushf
xchg
cmp
imul
jns
add
xor
dec
ds
jl
cmp
cmp
push
addr16
sbb
or
xor
mov
jg
and
sbb
and
mov
dec
call
dec
shll
mov
out
xchg
ja
mov
fnstenv
mov
mov
pop
adc
xor
fwait
mov
mov
sub
adc
daa
inc
adc
jae
xchg
xchg
cmp
adc
cmpsl
push
push
pusha
jne
ss
xchg
pop
mov
out
sub
push
js
inc
dec
sbb
dec
loopne
lds
push
in
push
pop
push
into
add
mov
mov
mov
stc
popf
pop
jno
and
add
mov
push
jmp
lds
mov
fstpl
adcl
pop
push
loop
sbb
mov
mov
movsl
cwtl
xor
aam
cmp
ds
dec
ret
mov
int
jnp
mov
xchg
nop
sti
cmp
mov
mov
call
pop
and
and
mov
push
iret
pop
add
in
jo
in
jl
adc
dec
jmp
add
xchg
cmp
mov
cmpsb
insb
mov
dec
dec
shrb
mov
pop
jne
adc
loope
sub
mov
xor
js
push
sbb
pop
jge
push
scas
and
pop
xor
jle
lret
cmp
cmp
popf
xchg
adc
xor
ds
push
mov
jae
add
cmp
mov
insl
add
adc
xchg
stos
loop
or
scas
pop
out
push
jne
es
pop
cmpsl
xchg
fnstcw
test
cmp
and
xlat
ret
rorb
adc
pop
test
ret
xchg
faddp
pop
repnz
xchg
shlb
negb
outsl
adc
xchg
ret
ljmpw
fldl
mov
dec
es
mov
cmp
add
and
fbstp
sti
jnp
repnz
inc
subb
push
sbb
dec
push
les
or
mov
xchg
mov
add
jno
cmp
mov
push
mov
lret
push
jns
xchg
movsl
fnstenv
out
and
insl
out
jno
mov
cmp
push
sub
mov
pop
dec
sysexit
xor
adc
cmp
imul
mov
pushf
lea
std
mov
aas
cltd
dec
int
sti
xchg
xorl
xor
imul
lods
sbb
jg
inc
lea
add
call
gs
inc
rcl
sti
jo
mov
adc
enter
sbb
dec
mov
mov
arpl
ds
das
inc
push
add
pop
cmp
mov
dec
mov
xor
test
andl
adc
insl
add
sbb
inc
xchg
pop
nop
daa
dec
inc
in
cmpl
insb
add
popa
sbbb
int
fld
pop
shr
pop
dec
loope
jae
adc
std
inc
mov
dec
dec
gs
imul
adc
mov
and
push
pusha
push
aaa
das
in
shr
repz
add
mov
dec
imul
pop
out
scas
push
daa
std
adc
fwait
xor
stc
mov
in
or
scas
dec
xor
adcb
inc
cmpl
popl
mov
iret
stos
cmp
push
les
outsb
pushf
aad
int
js
xor
and
jmp
cmp
mov
push
lcall
push
push
adc
outsl
shrl
rorl
adc
xor
bswap
mov
xlat
add
fdivs
test
mov
inc
xlat
pop
mov
pop
andb
dec
popa
jl
es
cmp
and
push
lahf
sbb
ret
stos
stos
loope
cmp
inc
inc
fcoml
cli
out
daa
push
lret
movl
sub
leave
pop
sbb
xchg
or
xor
or
xor
cmp
rcrb
sbbl
pop
xor
or
add
jge
imul
adc
sbb
inc
cmpl
outsb
inc
js
mov
dec
insb
jle
push
out
dec
mov
sub
test
jl
mov
sub
in
js
ja
imul
push
clc
lea
mov
sub
icebp
xchg
mov
mov
daa
xchg
jle
mov
clc
push
jl
dec
push
insl
jbe
repnz
rcll
in
daa
xor
pusha
fldcw
jl
mov
cmp
and
sahf
xor
cmpsl
and
sub
repz
daa
cld
repnz
outsl
daa
mov
jle
xchg
into
lods
inc
adc
adc
clc
mov
jne
int
ds
xchg
xchg
data16
addr16
lret
inc
fnstenv
stos
cmp
pop
popa
cmp
fwait
inc
vpminub
mov
cmp
cmp
mov
or
inc
mov
inc
ret
xchg
lea
out
into
out
frstor
dec
and
lock
mov
and
jno
push
outsl
mov
push
adc
int
mov
in
cs
fwait
xor
dec
repnz
jge
out
sub
xchg
std
notb
outsb
mov
shll
jo
inc
std
jbe
stos
mov
shlb
mov
add
cmp
loope
imul
push
ror
faddl
push
sahf
or
inc
pop
lret
popl
loope
mov
outsl
rorb
fs
mov
sbb
subl
inc
or
test
outsb
loopne
clc
or
insl
and
into
adcl
sbb
lods
ljmp
shrb
or
mov
push
and
pop
sbb
push
adc
or
jnp
push
pop
repnz
inc
in
push
sbb
jne
cmc
adc
lcall
dec
add
pop
xor
xchg
and
pop
fucomip
pop
das
cwtl
pop
dec
loope
mov
test
push
test
adc
iret
sti
popa
repnz
adc
inc
inc
fcomip
mull
enter
mov
vpunpckldq
pop
inc
pushf
pop
push
jmp
loop
lahf
pop
pminsw
popa
sahf
or
testl
call
xchg
dec
jle
mov
loopne
push
stos
xchg
sbb
xor
inc
fstpt
push
xlat
nop
push
icebp
jl
mov
mov
mov
mov
or
shrl
and
mov
mov
and
ret
stos
outsb
imul
int3
dec
stos
les
inc
inc
jge
cli
pop
jmp
iret
insl
mov
xchg
movsb
mov
mov
in
aas
adc
push
pop
mov
testl
test
mov
cwtl
xchg
mov
jmp
or
gs
test
insb
lods
and
push
xchg
mov
jnp
sahf
xlat
sub
lods
mov
test
iret
mov
divb
pop
dec
sbb
pop
add
xor
ss
and
add
adc
sbb
lea
push
mov
lcall
adc
adcb
push
dec
add
and
fdiv
xchg
xor
add
xor
icebp
and
lret
imul
xor
dec
mov
or
fildll
shll
xor
aaa
in
negb
xor
add
js
inc
mov
pop
xchg
push
adc
notb
clc
pop
jno
stc
mov
sub
xor
jns
cmp
jns
mov
bound
cmp
xor
jmp
dec
fstps
dec
add
push
pushf
es
mov
repz
mov
lea
fcoms
addr16
mov
cmp
or
shr
cmp
mov
and
fs
or
pop
cmp
das
cmp
lahf
daa
jne
cmp
lea
idiv
mov
dec
fldenv
push
mov
pop
add
insb
cmpsl
pop
xchg
xlat
test
mov
je
dec
push
add
add
xchg
ret
ljmp
rcrl
cld
sub
movl
cli
ds
push
xchg
rolb
movsl
btc
outsb
mov
dec
rcll
dec
lock
pop
pop
mov
mov
jmp
push
and
cmp
fstl
push
in
cmp
jmp
mov
jecxz
std
loope
cs
out
test
incl
xor
mov
sbb
clc
pop
call
mov
cmpsl
loop
fwait
xchg
jns
inc
das
mov
inc
pop
pop
xchg
or
ret
jmp
adc
mov
popa
xchg
add
mov
enter
inc
sahf
jl
sbbb
pavgb
mov
jae
insl
pushf
loopne
push
mov
das
gs
shlb
jge
lods
ret
movsl
mov
mov
push
cmp
movsb
push
in
adc
xchg
inc
sbb
int
out
jecxz
jecxz
rclb
outsl
sbb
sti
inc
int
inc
and
stc
in
mov
adc
stos
bswap
mov
cmc
bound
iret
sub
jne
push
xor
jnp
mov
push
shrb
repz
mov
sub
jae
pop
pusha
clc
jb
ljmp
xor
mov
cmp
out
push
mov
xor
push
mov
call
mov
pop
out
pop
outsl
cld
rolb
pop
mov
les
rcl
insl
popw
sbb
test
mov
jns
add
scas
push
ds
cmc
xchg
mov
jl
push
or
mov
cwtl
sti
shrb
ja
nop
popf
repnz
into
in
in
cmp
aaa
cmp
dec
ror
filds
outsb
movsl
rcll
add
sub
stos
cmp
xor
es
xchg
mov
in
mov
decl
pop
daa
orl
cmp
call
and
mov
lds
push
daa
addb
repz
push
dec
dec
test
outsl
fildl
out
icebp
sahf
pop
repz
in
inc
sbb
in
cmp
in
and
dec
mov
subl
and
fldcw
push
push
push
sub
sub
out
movsl
pop
xchg
aam
xchg
push
dec
ret
lock
outsb
fcom
jmp
stos
adc
mov
cmp
adc
jl
enter
vrcpss
fldcw
int
push
imul
aaa
iret
hlt
xlat
jge
pop
stos
rcrb
insl
push
sub
arpl
lret
mov
and
sbbl
add
mov
cmp
xor
test
push
inc
fdivl
aad
jecxz
sub
pop
loope
stc
jb
icebp
cwtl
push
imul
adc
xchg
enter
mov
sbb
mov
lahf
jp
inc
sahf
cli
je
ret
mov
fucomip
fisubl
ss
push
sbb
inc
fwait
les
in
xchg
shll
push
cmp
test
bound
pop
notl
mov
addb
jae
dec
or
push
clc
sbb
cmp
sti
push
dec
test
push
loop
fdivl
ss
jle
in
lock
pop
and
and
imul
loope
std
dec
inc
dec
mov
sti
adc
xor
push
mov
insl
dec
pop
lahf
pop
cmp
cmp
push
jno
rol
sub
dec
xlat
cmp
in
mov
ficomps
insl
mov
popf
pop
aam
adc
dec
pusha
jb
fdiv
mov
and
call
popf
test
and
xlat
int3
pop
push
sub
clc
mov
xchg
aad
clc
xor
lahf
dec
inc
lret
pop
popa
pop
jle
insb
add
popa
or
call
sbb
sbb
push
lods
sbb
ror
orl
outsb
nop
daa
mov
jp
mov
pop
push
inc
adc
sahf
movsb
xchg
inc
mov
jno
xor
mov
mov
inc
lods
push
imul
sbb
out
cwtl
pop
mov
or
movl
or
add
mov
or
cmp
and
dec
sub
sub
mov
fbstp
sub
jge
pop
leave
ljmp
push
or
lds
add
ljmp
loopne
aaa
lcall
xlat
inc
mov
imul
lods
sub
push
jns,pn
or
cmp
pop
imul
out
rcl
and
mov
icebp
jbe
inc
das
mov
pop
cs
pusha
jg
mulb
inc
mov
jns
lods
pop
ljmp
and
not
out
call
mov
mov
cltd
pop
out
push
xor
pop
test
inc
mov
and
xchg
xchg
xchg
add
cmp
out
cmc
push
sub
xchg
hlt
mov
scas
sub
xchg
sub
pop
pop
xor
adc
jbe
mov
in
lods
mov
int3
stos
xor
mov
pop
test
rcl
xchg
neg
ja
add
inc
shrb
push
je
xchg
mov
sub
mov
mov
lods
out
div
aas
inc
mov
ret
enter
in
roll
pop
mov
push
push
and
nop
mov
jb
nop
iret
cmp
in
xchg
les
xchg
mov
and
popf
mov
imul
roll
cmp
mov
popa
mov
int
cmpsl
arpl
push
adc
mov
fdivrl
out
mov
sub
scas
mov
inc
dec
xor
aam
lods
out
cmp
push
add
adc
adc
inc
push
pop
mov
ja
rdpmc
pop
shll
sub
fsubr
inc
testl
cmp
jecxz
popf
lcall
shlb
dec
into
push
int
inc
cltd
int3
pop
xchg
loop
out
xor
mov
xor
mov
mov
ss
xchg
fwait
jae
dec
mov
notl
insb
jns
nop
daa
icebp
ret
or
mov
scas
jno
jo
jo
xor
xchg
stos
leave
fstpt
adc
mov
xor
ret
cmp
mov
xor
xor
xor
mov
lahf
pop
push
or
es
xor
ss
xchg
xlat
push
aaa
pusha
cltd
mov
rorb
xor
jge
pop
ljmp
stc
sar
addr16
hlt
xor
icebp
jns
xchg
jne
into
adc
dec
xor
pop
dec
jnp
push
mov
jae
sub
pushf
sub
mov
add
push
ds
enter
popf
decl
lret
movsb
inc
xor
cmp
dec
in
pop
add
mov
dec
push
add
or
vcmpgess
sub
jbe
movsb
and
xor
add
out
sbb
lahf
push
dec
add
aas
loop
popf
repnz
ds
dec
addr16
pop
jp
mov
insl
push
stc
mov
icebp
xchg
adc
mov
rep
inc
in
stos
repz
aad
cmp
dec
fwait
push
dec
std
lea
arpl
cmpsb
int
cmp
lods
lock
inc
jp
test
mov
pop
inc
mov
mov
arpl
push
pop
sub
call
jge
and
and
pop
into
pop
jmp
pop
pop
shlb
ja
jg
cwtl
sahf
xchg
das
dec
fisttpll
int3
in
leave
and
push
cmp
xchg
adc
add
cmpsb
sbb
jmp
ret
repnz
xlat
pop
mov
fcmovnb
push
inc
lahf
sti
clc
into
rcrb
sbb
adc
cmp
hlt
mov
jno
adc
fsubrl
mov
sub
in
xchg
dec
notb
adc
mov
xor
mov
jo
rorl
lea
jnp
pop
stc
lea
jne
imul
lods
dec
xchg
jae
addl
and
test
xor
lcall
das
insl
sbb
jno
mov
insb
lea
insl
mov
inc
ljmp
icebp
xchg
pop
add
xchg
dec
add
jmp
test
stc
add
cmp
push
mov
mov
pminub
or
repz
sbb
or
ss
repnz
movsb
adc
xor
pusha
lcall
sbb
incl
movsb
mov
int3
or
out
insl
inc
fwait
sub
pop
pop
mov
push
sub
in
mov
jbe
ss
mov
enter
fsubr
mov
fistps
jb
fdivrs
mov
mov
mov
ja
fnsave
push
std
test
mov
ja
pop
jae
call
adc
out
cmpsl
pop
add
cmp
out
inc
inc
sbb
paddw
bnd
cs
xchg
int3
jb
mov
sub
nop
enter
test
fstpl
push
lret
jns
dec
mov
imul
dec
jg
sub
repnz
iret
pop
cmp
shr
les
dec
and
mov
lock
sub
fnstsw
ds
int
icebp
dec
jp
jp
stc
and
and
xlat
sub
repz
inc
and
mov
outsb
in
and
or
add
sbb
mov
push
jns
inc
sub
xchg
imull
outsl
testl
loop
pop
aam
inc
pop
add
cmpl
adc
in
in
call
xchg
outsl
daa
xchg
popf
daa
pop
aaa
pop
mov
js
sbb
xor
into
lcall
mov
pop
call
sbb
xor
sbb
dec
add
mov
xchg
imul
sub
sti
add
cs
mov
aam
lods
retw
add
rorb
push
fnstcw
call
mov
orb
clc
aad
and
decb
loope
test
in
loopne
std
push
aas
mov
fs
add
outsl
stos
pop
jb
movsl
hlt
or
jne
cmpsl
cmpsb
mov
daa
add
bound
adc
mov
push
add
sub
hlt
lret
fstpt
jle
jb
inc
push
mov
stos
inc
mov
xchg
add
push
inc
push
in
pop
test
pushf
call
pop
cld
out
loopne
cwtl
pop
pop
enter
push
popa
push
jae
push
or
orb
sub
fmul
int3
pop
test
imul
or
aaa
aad
incb
mov
cmp
test
and
aas
mov
mov
mov
das
cmp
test
jnp
sub
mov
push
sub
pop
in
xor
or
nop
lock
jge
xor
jae
fnsave
sub
clc
clc
jae,pn
fs
push
and
maxps
popa
dec
cmpsb
pop
jecxz
dec
arpl
xchg
xchg
sbb
sub
fsubrs
dec
iret
outsl
ds
shrb
mov
cmpsb
call
or
adc
and
adc
and
cltd
lea
sbb
shr
divl
jns
pop
in
out
fildll
adc
dec
and
hlt
lret
cmp
or
xor
test
sbb
repz
test
fisubs
ror
or
fstpt
inc
lock
xor
icebp
insb
sub
inc
imul
inc
icebp
add
lods
xchg
dec
in
push
pop
mov
aad
test
xor
mov
jge
sbb
mov
inc
idiv
xchg
out
pop
xchg
xchg
outsl
pop
aam
dec
negb
in
pop
mov
lods
inc
dec
push
dec
pop
adc
addl
push
dec
ljmp
xchg
mov
dec
outsb
or
addb
js
fbstp
out
adc
orl
bound
mov
push
adc
test
adcb
pop
lret
loope
aam
pop
out
test
leave
dec
loopne
jnp
adc
rolb
push
loopne
iret
rorl
xor
jle
mov
add
mov
mov
test
es
mov
sbbb
xchg
push
and
xlat
jbe
mov
test
pop
mul
mov
pop
add
cmp
sbb
lds
jo
jmp
bound
scas
push
les
mov
insb
add
cltd
xor
or
push
popf
ja
add
loopne
xchg
int3
inc
inc
xlat
xor
push
out
adc
bound
gs
pop
rorl
divl
cs
std
xor
inc
and
xor
rolb
inc
mov
sbb
pop
fidivrs
jbe
inc
xor
pop
cmp
mov
repnz
repz
in
les
sbb
scas
push
std
cld
icebp
js
in
jne
add
data16
dec
and
pop
cmc
sbb
addr16
stos
sbb
mov
mov
cmp
outsl
imul
dec
jne
testl
scas
ret
mov
out
fildl
mov
mov
and
push
icebp
shrl
pop
push
mov
pop
ss
inc
push
stc
mov
nop
insb
or
sbb
sub
sbb
dec
or
mov
les
sub
dec
or
xchg
push
rcl
lea
sub
mov
sbb
cld
pop
cmp
mov
jne
outsl
std
jl
mov
nop
cmpsl
add
fadds
mov
pop
adc
in
lds
xchg
fs
loopne
push
shll
jbe
mov
ds
jne
lcall
pop
cs
jbe
xchg
xchg
sub
into
dec
and
sbb
icebp
cmp
aad
aad
sbb
sub
ds
gs
lods
addr16
in
add
ret
sbb
mov
flds
int3
and
mov
lea
mov
out
packsswb
pop
aad
dec
dec
xlat
outsb
cmp
iret
data16
mov
push
inc
jle
aaa
mov
outsl
push
xchg
add
fdivs
test
mov
jbe
lock
leave
lcall
add
jecxz
inc
xchg
nop
mov
dec
lods
mov
xor
pop
fidivl
add
maxps
mov
sbb
rcl
mov
fdivl
mov
test
lret
ret
xor
xlat
sub
sub
xor
jg
push
cld
xor
add
aaa
fdivrs
pop
xchg
mov
pop
push
mov
mov
mov
clc
addr16
outsl
sbb
or
sub
das
jo
push
out
push
adc
sbb
aam
sahf
jb
mov
mov
jb
cltd
scas
stc
push
js
jb
jmp
test
inc
push
sarl
mov
fstpt
mov
add
add
insl
ss
in
dec
pop
out
js
fdivrl
std
dec
mov
daa
inc
inc
mov
xchg
xchg
sbb
cmp
icebp
ja
push
xor
dec
adc
jmp
mov
iret
mov
or
leave
int
adc
fs
pop
pop
mov
mov
out
mov
flds
or
shlb
inc
scas
pop
cltd
add
cmp
inc
mov
sti
xor
das
jge
cmp
jno
mov
jns
fistpll
lret
sbb
in
dec
std
xchg
cmp
dec
mov
fisttpl
and
iretw
or
add
pop
lea
and
push
enter
adc
roll
pop
mov
ja
cmc
pop
push
cmp
hlt
stos
in
cmp
inc
out
sbb
pop
dec
cmpsl
and
scas
outsl
push
icebp
ss
xor
ficoml
jp
xor
push
xor
xchg
pop
aaa
ficoml
dec
mov
xor
clc
dec
and
xchg
lahf
data16
js
dec
fists
sub
jo
addr16
jae
sub
xchg
addr16
in
cs
ficoml
shrl
pop
cld
jne
mov
pop
shl
inc
or
rol
pushf
test
xor
or
xor
out
dec
add
push
lock
xor
icebp
push
mov
test
or
out
or
fsubr
jo
mov
ficoms
das
dec
fnstenv
mov
mov
jl
lret
inc
cltd
icebp
orb
lcall
je
pop
hlt
in
mov
xchg
lods
cmp
out
mov
sub
das
inc
insb
sub
xchg
cli
scas
repz
mov
leave
aam
dec
and
xchg
sub
fisubrs
push
mov
or
pop
aas
mov
adc
aad
jge
and
fisttpl
pushf
and
sti
ljmp
dec
pop
mov
xchg
mov
dec
cmp
cmp
loopne
shr
sbb
pushf
xlat
adc
loopne
psllw
dec
push
out
add
outsl
cmp
cmpsl
ret
lret
std
iret
hlt
xchg
and
lea
xchg
xchg
sub
test
jne
mov
in
mov
jns
and
inc
mov
sti
test
fidivrs
xchg
mov
sti
pop
push
int3
dec
dec
int
in
out
jns
add
cli
movsl
arpl
pop
jns
decl
pop
adc
sub
ret
scas
shrl
mov
mov
add
clts
xchg
mov
mov
and
xchg
inc
enter
mov
lret
jbe
fists
stos
test
adcb
push
jmp
frstor
in
sbb
push
ljmp
mov
sbb
add
mov
int
sub
jne
movsb
push
sub
lods
jg
data16
push
sahf
cmp
dec
pop
dec
dec
jg
and
xor
jp
into
jl
jge
push
lcall
daa
fistps
push
push
movsl
inc
js
and
lret
rorl
mov
jmp
adc
lds
insl
jmp
push
aaa
dec
cmp
xchg
dec
ss
mov
xchg
mov
adc
mov
int3
out
clc
loop
pop
iret
pop
mov
movsb
in
repnz
into
dec
not
and
adc
mov
hlt
mov
sub
stos
aad
sbb
popa
pushf
outsl
sbb
loope
xor
scas
inc
push
out
clc
jl
movsl
test
inc
jns
mov
xchg
pop
xchg
pop
stc
imul
shlb
fcmove
mov
es
lret
in
jne
push
jnp
movsb
xchg
adc
mov
repnz
cltd
or
inc
lock
in
fcomip
lahf
add
fdivl
sub
mov
and
mov
jns
arpl
fildll
lahf
nop
movsb
cmp
jle
jne
outsb
cmc
je
jo
fldenv
jb
push
push
jecxz
push
mov
pop
mov
add
add
scas
lock
inc
fwait
mov
add
out
mov
inc
push
dec
cmp
frstor
out
in
aas
rol
and
rcrb
mov
ss
mov
push
jbe
sbb
ss
dec
or
cmp
jne
fcoml
test
mov
out
sti
xorl
stos
in
adc
lcall
mov
dec
loopne
fwait
out
jge
pop
sahf
lods
inc
cmpsb
add
lret
jmp
mov
push
fidivs
dec
sub
repnz
mov
jecxz
dec
xchg
pop
loopne
add
lret
add
mov
mov
subl
inc
insl
add
cmp
push
test
into
stos
push
lock
xor
fidivrs
sbb
push
insl
and
or
mov
mov
aas
cmp
inc
hlt
mov
cltd
clc
adc
scas
insb
jle
or
insl
push
in
ret
jmp
dec
push
push
es
dec
popf
cmp
popa
into
call
pop
loopne
adcl
mov
inc
jle
iret
pop
dec
sbb
mov
push
xchg
cmp
sti
call
fdivrp
dec
shrl
ret
fcomps
jbe
xor
ljmp
pop
inc
outsb
add
fiaddl
xchg
inc
test
loope
test
lock
dec
outsl
jne
imull
stos
rolb
enter
fildl
lea
in
jge
repz
push
push
mov
test
adc
and
mov
pushf
dec
lahf
pop
mov
sub
out
pop
cmp
jns
inc
lods
test
arpl
hlt
adcl
pop
fs
push
repnz
cmc
loop
lods
mov
mov
pop
jp
test
aas
insl
fcompl
cmc
fidivs
or
inc
pusha
dec
dec
push
out
in
pusha
jne
pusha
stos
mov
dec
cmp
call
test
sbb
cmpb
shlb
ss
arpl
sub
jae
js
adc
mov
js
cwtl
lret
dec
lret
push
out
lea
popf
aaa
je
popf
test
sbb
sub
inc
dec
out
cwtl
and
jo
inc
mov
test
inc
push
shll
aas
or
cmp
ret
movsl
test
popf
dec
popa
out
sub
add
shrb
sbb
mov
hlt
xchg
push
jmp
ljmp
pushf
in
sbb
shrl
mov
lock
mov
push
mov
das
out
inc
sbb
sub
aad
jo
mov
jb
jmp
cmp
pushf
hlt
pop
insb
inc
cmp
dec
in
mov
cmp
jnp
inc
cmp
jge
xchg
outsl
leave
pusha
stc
sbbb
mov
mov
out
lds
sbb
lcall
cmp
inc
xor
rcrb
cmp
inc
clc
ss
popa
jmp
and
push
adc
out
mov
fisttpll
cltd
test
sahf
adcb
mov
pop
jecxz
loop
shr
cmp
insl
pushf
pop
outsb
mov
mov
shrl
cltd
subl
sahf
stc
push
xchg
dec
cmpsb
lea
and
xor
push
fwait
pop
loop
lea
je
pop
mov
cmp
xchg
scas
aad
cmp
sub
in
and
mov
sbb
push
shl
orl
xchg
inc
dec
and
mov
pop
leave
dec
sub
push
sub
and
lahf
pop
push
xchg
pop
mov
gs
sbb
sbb
mov
out
enter
pop
insl
daa
jns
imul
or
dec
pop
sub
nop
dec
lret
sbb
ja
or
mov
dec
lods
insb
inc
fs
sub
idivb
jmp
neg
jo
orl
xchg
popa
jae
repz
neg
cwtl
mov
movsl
dec
add
lds
pop
fwait
xchg
mov
roll
call
test
pop
fildll
jg
sub
sbb
mov
and
mov
in
jg
fsubr
cmp
mov
or
cmp
cmp
rcrb
lea
fs
or
inc
and
js
sbb
pop
pop
imull
push
addl
mov
stos
ds
scas
lds
scas
cltd
sub
adcb
sbb
add
movsl
push
mov
push
adc
fsubs
mov
das
add
inc
aad
dec
fmull
jne
stos
jmp
mov
sbb
jg
cmp
scas
cmpsb
outsb
fdivrs
lods
jp
shrb
das
mov
push
cmpl
dec
lods
pop
repz
and
xchg
xchg
out
inc
out
leave
fwait
je
sbb
and
xor
jmp
add
sahf
orl
gs
stc
fbstp
rcrl
lock
push
nop
sub
notb
ljmp
mov
movsb
and
xor
mov
cmp
sub
fcmovu
jmp
std
mov
int3
pusha
fcmovne
xor
pop
stos
gs
push
mov
jp
js
cmp
add
jg
mov
mov
out
mov
leave
pop
xchg
and
inc
stos
jmp
test
lock
aaa
push
out
cli
or
insw
push
jmp
or
cmp
out
dec
int3
push
shr
inc
fstpl
sbb
or
pop
std
or
jg
pop
cmpsb
je
fdiv
stos
inc
pop
add
shlb
xchg
pop
jne
ret
inc
sub
cmc
sbb
cmpsb
ret
or
fnstsw
sbb
std
adc
inc
fdiv
repz
jo
arpl
leave
push
sahf
push
test
cmpb
sub
mov
cli
test
dec
insl
sarl
mov
or
pusha
out
xchg
mov
aas
loop
das
dec
loope
adcb
adc
cld
sub
xor
je
lods
subb
ffree
pop
jmp
imulb
sbbl
call
xchg
mov
in
mov
mov
dec
xor
test
fdivrs
lcall
mov
aam
mov
adc
sub
ds
jae
mul
cmp
pop
ret
add
pop
push
les
mov
xor
or
push
push
jns
popa
inc
insl
mov
cmp
pop
movsl
jg
testl
push
mov
jb
xchg
cld
outsl
or
popl
out
mov
testl
push
sub
inc
xchg
mov
hlt
xor
cmp
icebp
sbb
jnp
movsb
jb
sbb
or
int
dec
ss
push
adc
sub
push
adc
xchg
ss
sti
inc
fiadds
xchg
and
stos
adc
fsubrl
fnsave
testl
xchg
aad
push
stc
outsl
cwtl
lods
or
loop
pop
add
add
push
cmp
arpl
lcall
mov
jge
out
js
outsl
jge
xor
xlat
xchg
add
lea
sub
inc
add
decl
std
out
pop
dec
cltd
mov
sub
jo
fists
push
inc
xor
ret
inc
push
ret
in
pop
xor
inc
add
add
loop
or
fidivs
leave
mov
out
mov
cmc
cmp
call
dec
jl
jle
adc
push
popf
pop
jae
add
add
jno
js
or
scas
cmp
push
popf
xor
loope
fisttpl
mov
addr16
fldenv
imul
mov
aam
pop
jge
shlb
sbb
dec
fidivrl
inc
mov
insb
stc
ficomps
xor
movsl
jb
fcomi
jnp
mov
adc
addr16
xor
mov
outsb
psubw
and
out
xchg
daa
xchg
push
mov
sub
xchg
pop
push
mov
mov
movsl
and
mov
cmp
xor
pop
lock
ja
rol
sub
fcmove
xchg
or
loopne
clts
loop
mov
rol
aad
push
lods
xchg
mov
scas
adc
xchg
inc
cmpl
add
dec
std
mov
cmp
adc
orl
lret
jne
das
adc
subb
push
mov
add
jge
pop
aas
dec
call
pop
cmpb
cmpsb
cmc
sub
ds
pop
cmp
pop
xor
adcb
push
hlt
push
lods
sub
lcall
xchg
sub
push
jne
push
push
mov
test
shrl
popa
testb
es
cmp
push
jmp
out
sub
push
gs
jne
pop
insb
test
jnp
mov
test
addr16
fs
sub
xchg
shr
lret
arpl
out
sbb
aas
jae
outsl
push
test
stos
jbe
or
rorl
xchg
push
xor
loope
loope
sbb
mov
fmul
test
jl
xor
sub
or
into
jb
mov
inc
pop
int3
insb
loope
sbb
pop
mov
push
push
dec
filds
sub
pop
cmovge
mov
test
je
daa
test
mov
inc
int
sub
inc
mov
mov
clc
jbe
push
push
push
sarb
pusha
push
repz
sub
cmpsl
xlat
push
in
sbb
clc
cs
lods
jae
das
es
lcall
cwtl
lods
mov
ja
sub
xchg
add
dec
test
aaa
or
xlat
dec
sub
ljmp
out
inc
xchg
icebp
loop
es
lock
rcrb
repnz
lcall
jge
movsl
imull
xchg
std
push
dec
lahf
sgdtl
or
ja
xchg
in
inc
scas
cmc
aam
cmp
mov
push
outsb
arpl
psubb
movsl
pop
cmp
cmp
in
adc
mov
lret
and
hlt
loope
fs
xor
loop
jmp
sbb
xor
cwtl
pop
mov
ja
jo
add
ret
xchg
or
notl
idivl
cltd
test
jbe
adc
inc
fmul
int3
pusha
rclb
pop
imul
or
dec
sbb
data16
call
fidivl
push
mov
scas
inc
xor
shlb
or
xor
add
mov
jns
pusha
mov
inc
int3
fisubs
test
mov
mov
fadds
xlat
xchg
xor
test
jl
xlat
and
xor
cmp
lea
and
pusha
enter
jecxz
movsb
inc
cli
and
xchg
int3
jno
into
adc
ficoms
add
mov
push
add
cmpsb
cmp
out
pop
call
dec
lcall
incb
daa
dec
ret
cmp
add
pop
cltd
scas
out
mov
call
loopne
ret
dec
test
jnp
arpl
lcall
in
inc
push
das
push
push
dec
test
sahf
xor
xor
subl
lds
pop
int3
mov
bound
cmp
mov
mov
rorl
mov
test
cld
mov
nop
mov
enter
cmp
push
ja
mov
leave
test
test
rcll
popa
test
push
movl
inc
bnd
dec
inc
inc
dec
mov
push
lock
lods
icebp
in
aas
or
or
aam
or
stos
xchg
out
jmp
and
popf
sub
inc
fwait
jne
inc
sbb
inc
fimuls
and
mov
aam
and
sbb
mov
mov
and
mov
xchg
inc
sbb
js
inc
out
test
scas
fnsave
cmc
mov
sti
or
pop
scas
and
aam
cmpsl
scas
mov
adc
cltd
and
adc
mov
dec
add
jge
mov
sbbl
and
xor
loop
dec
ror
arpl
add
inc
movsb
cmp
notl
sbb
aam
mov
jae
cwtl
sbb
jnp
fisttps
sbb
xchg
aad
inc
push
mov
push
xor
or
push
stos
sub
fidivs
xchg
sub
push
cmp
nop
das
sub
jg
jmp
icebp
xchg
leave
jns
jae
stc
xchg
nop
outsl
jnp
mov
orb
icebp
andb
daa
jae
or
xor
inc
lcall
jno
cmp
insb
xchg
clc
sahf
mov
adc
or
xor
bound
dec
or
mov
xchg
mov
mov
or
rorb
mov
out
push
mov
subl
add
rorb
shlb
xorl
scas
repnz
lods
ljmp
ret
sub
push
icebp
pop
es
pop
shl
mov
sarb
cltd
jmp
lret
xchg
pop
scas
lret
sub
mov
hlt
lock
and
inc
loopne
inc
pop
in
in
pop
sbb
shl
in
rcl
rorb
scas
scas
ret
lret
lea
cmp
xor
out
sub
push
pop
cs
sahf
push
pushf
imul
sbb
sub
xchg
and
in
push
adc
cmp
jno
xor
pop
xchg
pop
out
mov
or
cmpsb
shll
iret
dec
fdivs
and
xchg
mov
and
jp
sub
movsb
shl
push
dec
pop
mov
scas
cmp
outsl
sub
addr16
cmp
in
xor
loop
push
call
fdivrl
cmp
pop
ret
hlt
nop
lcall
and
les
insb
pop
xchg
sbb
and
dec
mov
cli
add
pushf
orl
or
cmp
mov
jecxz
mov
pop
sbb
cmpsb
jo
ja
popa
push
jnp
mov
fstpl
mov
out
jl
mov
sbb
mov
fiaddl
adcb
push
xor
pop
addl
in
ret
push
or
or
lret
and
xchg
int3
cmp
pop
sbb
mov
nop
and
fimull
loop
pop
add
adcl
cmc
xchg
jae
mov
fstpl
sub
jg
sub
push
xlat
xchg
mov
xchg
jecxz
or
mov
out
adc
xchg
mov
aas
test
aad
mov
dec
mov
xlat
repz
test
mov
rorl
cwtl
ds
scas
dec
std
cld
outsl
mov
push
jno
js
popf
mov
in
es
jmp
scas
out
aam
std
mov
xchg
push
sub
jno
sub
sub
hlt
adcl
adc
out
leave
mov
cmc
fwait
pop
adc
ret
hlt
mov
popa
loopne
stc
push
loop
es
adc
or
xchg
iret
repnz
and
mov
popa
jbe
mov
cmpsb
inc
ficompl
cld
lcall
in
jmp
adc
rclb
in
fidivrl
mov
fnsave
mov
pop
out
sbbl
xor
cmp
mov
mov
shr
xchg
mov
pop
push
mov
pop
mov
and
popf
orb
mov
jb
jb
outsb
outsb
call
or
xor
mov
sbb
icebp
or
jle
push
mov
lret
pusha
aad
daa
push
popa
sub
sub
test
xchg
add
testl
mov
int3
or
or
mov
jno
mov
push
clc
push
or
andl
shlb
push
pop
ret
push
jno,pn
les
and
movsb
imul
xchg
dec
pop
xor
pop
push
ret
xchg
adc
add
in
mov
jno
mov
sbbl
repz
js
mov
dec
xor
or
cmp
adc
int3
fwait
xor
les
scas
xchg
data16
scas
rcl
jl
jb
pop
fildl
ss
mov
push
sub
xchg
push
xor
data16
mov
enter
test
pop
dec
mov
adc
mov
jg
and
scas
iret
loop
mov
dec
sub
mov
and
xor
and
in
fldl
push
xor
mov
or
mov
stos
je
fisubrl
mov
sub
ja
and
inc
push
cmc
fucomp
dec
in
sbb
je
into
insb
add
ret
mov
xchg
in
sbb
popa
dec
cmc
inc
aam
jae
loope
sbbl
mov
fs
mov
insl
dec
or
int
jne
push
arpl
push
pop
mov
push
sbb
cmp
xlat
sbb
and
mov
push
rorl
pop
movsb
lock
mov
lds
mov
loop
lret
mov
sub
pop
xchg
sub
fsts
add
negl
sub
in
sahf
push
das
hlt
push
insl
inc
push
call
xchg
popf
outsl
adc
stc
enter
shrb
and
test
stc
inc
fstpl
pop
mov
dec
adc
add
lea
mov
sub
push
outsb
ret
xchg
xor
sbb
lret
jge
mov
div
cmp
pop
lahf
mov
out
mov
cwtl
inc
and
pop
jmp
out
lret
mov
repz
cli
fstl
popf
fs
jb
jne
fdivrl
push
call
lds
adc
pop
push
icebp
fwait
aad
std
subb
test
cmp
ja
sub
fdiv
insl
lret
xlat
ret
sub
xchg
repnz
in
mov
mov
mov
arpl
fnstsw
pop
push
xchg
and
cmp
adc
roll
mov
inc
stc
and
and
xchg
cmp
sbb
xchg
hlt
out
rol
sub
fstl
xchg
test
mov
mov
mov
mov
xor
xor
xor
std
cltd
and
pop
or
ds
fiaddl
and
dec
loop
jecxz
push
lods
and
nop
pop
fdivrp
test
or
inc
pop
divl
jnp
dec
dec
loopne
or
mov
addr16
out
push
fldenv
mov
cmp
push
xchg
fldenv
cmpb
dec
lock
das
mov
jg
xor
xchg
ret
loop
dec
cmp
mov
mov
push
adc
cli
and
cmpsb
push
sbb
aam
mov
hlt
sahf
dec
and
das
loope
out
outsb
int
cmova
inc
fld
sub
lahf
daa
dec
lods
inc
xor
lret
xor
inc
std
seta
push
jb
fisubrl
push
mov
add
sbb
sbb
mov
add
pushf
ds
or
insb
adc
lds
xchg
add
mov
fdivl
or
push
mov
cli
movsl
ds
sub
arpl
dec
dec
xchg
ss
mov
xlat
adc
or
mov
js
dec
sub
out
jl
mov
sbb
enter
das
pop
mov
mov
popa
mov
mov
cld
xchg
pushl
outsb
xchg
jo
xor
lods
mov
add
or
or
mov
cwtd
in
stos
add
fnsave
pop
sarl
into
fstpt
insb
fistpll
pop
sbb
inc
or
jns
xor
in
pushf
pop
fidivrl
popf
arpl
push
jle
xchg
lods
inc
iret
pop
int
mov
jne
dec
pop
lahf
stos
test
inc
push
cmc
cmp
ss
push
xchg
les
sahf
dec
jo
jo
loope
sub
fldt
outsb
ljmp
jns
cmp
mov
out
cmp
push
jb
cmp
jecxz
inc
scas
xchg
fnsave
jno
jne
test
lock
mov
aad
mov
or
fbstp
sbb
pop
clc
sahf
sbb
xchg
stos
std
movsb
jae
add
test
rcrb
loopne
outsb
dec
jnp
sbb
inc
dec
mov
jl
sbb
jmp
sub
and
cmp
sub
cmp
jb
call
cmp
rorb
add
dec
insb
mov
pop
out
dec
and
clc
nop
sbb
cmp
mov
xchg
push
lcall
mov
mov
mov
push
fildl
in
loope
pushf
cltd
aad
icebp
pop
mov
inc
mov
dec
dec
mov
dec
mov
jno
and
fdivrl
loop
call
test
adc
sbb
fimuls
out
lods
jmp
shl
movsl
lret
aam
add
cs
lret
xchg
push
xchg
gs
sbb
call
jp
sahf
sub
and
cld
dec
subl
mov
mov
aas
rorb
sbb
jp
mov
or
pop
fsubrl
out
loope
lcall
add
movsb
dec
adc
call
mov
ss
add
sar
gs
scas
gs
fucomp
cltd
aad
int
jmp
ret
sub
icebp
pop
and
mov
out
pop
std
xchg
add
popa
and
iret
add
test
cmp
gs
adc
cmp
or
je
push
mov
jmp
push
test
jmp
and
dec
aas
pop
sbb
outsb
jmp
push
rcrl
mov
inc
pop
and
or
dec
movsb
or
push
out
imul
cmc
jecxz
adc
lahf
mov
pop
xor
inc
clc
clc
inc
loopne
scas
and
std
mov
popl
push
fstpt
bound
cs
adc
and
lods
adc
divb
sbb
push
ss
mov
lret
and
and
orb
loopne
stc
notl
in
inc
xchg
pop
aad
ss
pop
sub
jne
int
xchg
das
orl
xchg
lea
int3
out
popa
mov
push
add
js
rcrl
mov
int3
insb
aas
orl
mov
push
leave
cmc
mov
es
dec
and
jns
jns
outsb
and
in
or
push
das
mov
bnd
call
andb
mov
push
add
inc
iret
mov
ljmp
push
and
xor
mov
stc
mov
out
aas
push
fnsave
sbb
pop
in
cltd
pop
jg
cmp
sub
roll
repnz
mov
adc
sahf
sub
push
mov
fxch
movsb
sbb
sbb
incb
scas
add
xchg
sub
mov
mov
mov
das
adc
fsts
stos
or
add
stos
mov
xor
std
jo
add
and
push
pop
xchg
shrb
movsl
mov
push
mov
orb
xchg
sahf
cmp
repnz
cld
test
sbb
outsl
pop
jp
dec
or
sbb
mov
call
in
mov
push
ljmp
sti
fisubrl
addr16
rcll
jno
cs
xorb
call
repnz
shlb
adc
loop
mov
sbb
decl
outsb
inc
mov
test
sbb
les
push
inc
cli
jo
mov
xchg
lods
imulb
jecxz
ret
pop
shlb
and
fdivrs
mov
sub
dec
out
fwait
inc
mov
bound
sbbl
adc
dec
ret
pop
ret
pop
xor
loopne
cmpsb
ficoml
mov
fwait
and
cltd
arpl
push
and
ret
adc
pop
adcb
mov
jo
ljmp
mov
jnp
pop
mov
sbb
loop
cmp
or
jo
mov
ja
enter
inc
orl
mov
jg
scas
jmp
xchg
movsb
or
pop
rcl
push
pop
sub
popf
imul
cltd
jp
out
cmpsb
push
cli
push
xor
ljmp
push
sar
cmpsb
push
in
mov
icebp
fldt
int3
xchg
test
mov
mov
lds
sbb
add
sub
or
sahf
in
pop
sbb
cmp
jle
push
and
pop
sub
popf
fnstsw
movsl
mov
push
in
aam
ljmp
dec
leave
fnclex
dec
adc
pushf
out
js
leave
xchg
popa
enter
pop
mov
fists
rol
shll
pop
xor
fs
ss
xchg
sar
test
jl
cli
shlb
vpmulhw
orl
jge
push
xchg
bswap
xor
mov
cmp
pop
sbb
sub
push
or
cmp
mov
test
or
out
mov
cmp
stc
sarb
inc
ja
call
dec
adc
arpl
jae
int3
jg
sbb
sub
fsubrp
push
lds
repz
cmp
push
pop
push
mov
shl
jp
cli
xchg
mov
rcr
je
inc
mov
xlat
xchg
adc
pop
pop
int3
sub
repz
inc
shlb
mov
inc
je
pop
xor
daa
pusha
fstpt
call
push
xor
mov
xchg
data16
sbb
iret
and
mov
and
push
mov
and
repz
into
pop
dec
pop
xor
and
add
inc
xchg
push
sub
jl
fdivs
mov
xor
loop
xchg
adc
mov
outsl
sbb
mov
mov
jno
mov
push
das
decl
stos
test
shl
dec
xchg
sub
fsubrs
push
dec
mov
push
loop
inc
pop
dec
and
cmp
adc
scas
cmpsl
loope,pt
xor
aad
cmp
lret
mov
push
loope
sub
inc
int
iret
int3
mov
ficoms
cld
push
nop
push
or
xchg
iret
rcl
push
mov
push
pop
mov
xchg
mov
ljmp
call
orb
xor
bound
inc
out
adc
insl
inc
inc
and
add
mov
imul
scas
jmp
xlat
mov
mov
hlt
into
fisubs
mov
jno
es
addr16
sbb
sahf
mov
sbb
sub
dec
in
jp
pop
outsb
dec
in
pop
sahf
lods
lea
imul
nop
push
in
xchg
and
aas
jmp
sbb
loop
je
insb
test
cmpsl
gs
push
xchg
sub
cmpsb
mov
mov
add
or
bound
sbb
cmpsb
ss
inc
mov
insl
mov
fsubrp
pop
loope
push
pop
sub
shl
repnz
cs
pop
pusha
xlat
mov
sti
cld
sbb
sbb
stos
arpl
or
out
rcrl
lods
cmpsb
sbb
adc
dec
cmp
pusha
lcall
mov
add
dec
inc
sbb
aaa
jecxz
stos
stc
std
je
test
mov
jmp
aaa
stos
daa
enter
bound
mov
ss
test
lods
push
and
shl
jae
pop
push
or
inc
pop
ljmp
je
popa
adc
mov
mov
mov
rcrb
in
dec
iret
out
mov
xchg
mov
outsb
sub
dec
add
or
lock
imul
lock
jg
xor
in
xchg
pop
mov
cmp
mov
xchg
mov
pushf
mov
into
int3
sbb
in
inc
test
pusha
std
repnz
xchg
and
xchg
leave
sbb
dec
xchg
outsb
add
hlt
test
mov
jae
test
imul
iret
sbb
dec
cli
test
scas
sbbb
in
sahf
repnz
sbb
adc
loop
pop
or
jl
movsb
pop
les
push
mov
cld
or
outsl
xchg
std
call
adc
jl
cmp
ret
lret
aas
add
daa
movsl
push
inc
mov
pop
scas
iret
fisubrs
je
sub
mov
push
add
inc
ret
cwtl
pop
and
aas
adc
fucomip
add
mov
push
or
outsb
data16
pop
xchg
repnz
ljmp
rclb
sub
or
lret
mov
mov
add
pop
adc
mov
insl
mov
cmp
cmp
adc
aas
dec
jecxz
xchg
mov
sub
and
aaa
and
push
ret
dec
push
dec
mov
ret
adc
dec
dec
add
lea
xor
shrl
int3
mov
inc
pop
pop
ss
push
in
jno
mov
in
in
dec
or
out
inc
push
imul
filds
test
inc
popa
in
test
pushf
or
push
loop
xlat
jle
sub
inc
pusha
lods
jbe
fldpi
stc
cmp
sub
add
rcl
xor
pop
int3
mov
xchg
mov
in
insb
scas
inc
push
adc
out
push
jg
xor
subb
jno
add
xchg
and
ret
loop
fcoms
mov
arpl
arpl
cmp
insb
push
les
sarb
mov
sahf
push
outsl
int3
push
loop
inc
rcrl
add
sub
lods
jg
iret
pop
mov
insl
or
adc
jnp
sbb
out
jecxz
sbb
pop
xchg
sbb
mov
sbb
rorb
jnp
mov
inc
insl
icebp
mov
sub
popf
push
xor
jmp
jb
out
and
xlat
dec
add
scas
pop
xchg
jmp
jae
xchg
cmc
sub
jge
sbb
out
dec
inc
lahf
push
dec
push
sti
jb
sub
cmpsb
xchg
push
hlt
mov
dec
cmpl
dec
inc
adc
sahf
cmp
pop
gs
add
jb
xchg
mov
and
cli
and
mov
add
and
movsb
fisttps
ljmp
cmp
mov
adc
call
sub
es
inc
mov
push
loopne
inc
xchg
add
add
mov
add
fnsave
lea
xor
fnstsw
xor
insb
xor
cli
sub
mov
sbb
pop
cmp
lds
dec
shlb
lock
add
or
rol
jge
divb
xchg
cli
gs
push
call
mov
add
aas
mov
lock
mov
sub
push
in
repnz
cmpsb
cmp
ds
ja
and
dec
bound
lods
cmp
xchg
add
push
pop
xor
mov
into
inc
fisttpl
lret
mov
adc
or
push
leave
arpl
jne
ljmp
xor
xor
adc
inc
add
repz
test
jmp
push
sbb
ja
cli
dec
adc
enter
movb
out
insl
adc
jne
loop
dec
pop
gs
data16
ret
ds
pop
xchg
int
sahf
les
sarl
dec
gs
fnstcw
out
and
aas
push
adc
psubd
mov
jns
sub
sahf
dec
jle
jp
addr16
pop
popf
lods
xchg
or
jge
dec
inc
push
and
xor
popf
adc
jns
and
aam
dec
pop
xchg
cmp
ss
pop
out
je
stos
cmp
mov
inc
dec
inc
data16
adc
sub
cmp
or
mov
adc
sbb
add
pop
cmp
lods
out
mov
jno
sub
lcall
out
fdivr
inc
fdivp
xor
sti
mov
repz
mov
sub
and
adc
xchg
xchg
sbb
add
addl
subb
push
in
test
pop
adc
popa
xchg
and
sub
cli
mov
in
dec
cmpsb
movsb
adc
das
add
hlt
pop
les
adc
mov
cmc
xchg
sbb
or
js
std
jae
fistpll
mov
mov
fisttpll
pop
sbb
fiaddl
push
xor
cmc
mov
bound
scas
sarb
mov
fisubs
lds
push
outsb
pusha
jmp
xchg
and
xchg
jmp
aas
mov
cmp
jno
setne
add
sub
pop
ss
xchg
push
mov
lahf
cli
ljmp
jg
cmp
andl
test
sbb
push
iret
orb
mov
xchg
or
xor
scas
test
arpl
lods
pop
icebp
push
les
inc
inc
jo
dec
loope
xchg
shlb
jmp
clc
or
add
mov
sbb
mov
fcmovne
mov
subb
and
inc
in
lea
stos
cli
in
andb
inc
mov
clc
ret
gs
or
rdmsr
sub
fwait
jae
dec
jb
and
pop
scas
les
out
inc
xchg
ret
mov
jg
adc
inc
cmpsl
xchg
es
ret
sub
imul
push
adc
add
es
or
bound
sbb
scas
addb
mov
fwait
stos
int3
enter
outsl
dec
ja
in
int
imul
pop
out
ret
mov
arpl
push
movsl
jb
data16
mov
mov
mov
in
pop
jbe
mov
dec
in
dec
in
inc
ret
mov
push
inc
stos
sbb
pusha
insl
mov
andl
incl
ljmp
cmp
ss
jl
dec
xchg
mov
jno
jo
pop
sub
addb
push
hlt
movb
in
mov
add
aad
dec
add
push
out
dec
or
mov
jmp
pop
or
jl
js
dec
dec
mov
inc
fisttps
ja
fdivrs
in
lahf
stos
cli
int3
fsubl
ja
icebp
dec
pop
jne
movsl
stos
sub
mov
mov
and
jg
pop
mov
jge
lds
dec
and
sub
mov
mov
and
mov
test
rcr
xchg
sub
mov
cli
mov
ja
in
loope
out
jmp
mov
mov
mull
in
in
clc
stc
pop
mov
add
adc
cmpsl
xor
rolb
pop
fwait
xchg
lea
mov
xor
imul
test
or
repnz
call
dec
inc
pop
pop
sub
mov
xchg
test
sbb
add
cmpb
inc
dec
in
jle
rolb
fwait
sti
ja
shll
push
jmp
test
cwtl
loop
mov
sbb
push
fwait
mov
jbe
mov
mov
mov
out
push
xchg
cs
addr16
test
add
xor
mov
fldl
movsb
and
push
jl
jge
inc
sahf
push
xchg
frstor
xchg
mov
mov
inc
sbb
cli
inc
sbb
pop
cmc
dec
pop
pop
js
cmp
push
in
xchg
lahf
js
inc
lds
pop
jae
ret
jmp
dec
add
hlt
xor
add
cltd
pop
movsl
out
das
adc
popa
movsl
jl
aam
xchg
add
sbb
sbb
mov
popa
sbb
mov
movb
adc
mov
mov
loop
pushf
dec
xor
push
xor
jl
dec
mov
mov
jg
pop
cmp
lahf
pop
fsubr
fsubs
movsb
or
das
jmp
mov
mov
cmc
pusha
jmp
test
das
out
push
inc
fisttpll
rcr
mov
int
cli
movsb
repnz
jle
cmp
adc
repz
sub
jnp
dec
dec
and
enter
pop
out
or
push
xlat
insb
jmp
push
movsb
imul
or
sarb
imul
pop
loope
push
inc
mov
out
icebp
fisubs
nop
pusha
clc
xchg
add
or
cmp
sub
xor
dec
es
dec
pop
or
lods
xchg
jo
lea
cmpsb
xchg
int3
ss
notb
jge
movsl
push
pop
adc
loope
and
push
fisttpll
mov
stc
faddl
cmpsb
dec
push
enter
sub
daa
nop
iret
stc
xlat
mov
imul
ret
mull
fcomp
jecxz
sbb
pop
icebp
cmpsb
cmp
ret
scas
dec
test
rcl
mov
or
insl
adc
lods
pop
mov
enter
popf
ret
jl
sbb
mov
pushf
pop
pop
popf
shufps
cmpsl
lods
sbb
pop
enter
popf
dec
inc
xchg
mov
push
sub
jno
lock
dec
ja
pop
scas
aaa
mov
cli
sbbl
lods
cmpsb
pop
mov
or
or
mov
out
ja
inc
pusha
repnz
push
jns
ret
ss
outsb
xor
adc
push
int
insl
jb
in
jnp
sbb
int
lret
incl
negl
iret
jno
mov
mov
lret
stos
add
leave
and
mov
je
sbb
pop
lods
gs
lcall
adc
adc
imul
pop
stc
dec
xor
std
out
pushf
out
jp
sub
cli
flds
sbb
and
sub
int
int3
leave
sub
repz
pop
dec
mov
mov
pop
mov
push
enter
pop
je
cmp
loop
cmp
punpckhdq
shl
mov
jne
inc
adc
pop
mov
inc
jmp
stos
jmp
dec
test
sub
out
in
les
lods
fstp
mov
stos
cltd
xor
das
jnp
popa
loop
dec
adc
sub
add
mov
mov
cmp
notl
repnz
popf
sub
test
fdivl
pop
mov
dec
aaa
adc
cwtl
pop
dec
xor
inc
std
js
int3
lea
push
jo
fistpl
fnstsw
jnp
jl
sub
inc
mull
inc
sub
lret
loope
imul
jle
int3
fwait
sub
jle
mov
add
mov
daa
out
shll
lock
and
imul
repz
pushf
gs
add
dec
int
outsl
push
movsb
dec
data16
js
cmp
pop
nop
cmp
push
mov
inc
fmul
lods
in
dec
or
inc
es
imul
stos
pop
idivl
add
mov
ficoms
test
sub
mov
rclb
cli
inc
aad
and
fs
push
push
mov
add
pop
rcrl
insb
mov
setb
clc
add
out
or
fcomp
mov
test
int3
aaa
sahf
mov
fdivrs
shlb
pop
adc
and
testb
fsubr
mov
imul
mov
std
leave
xor
das
xor
sbb
add
mov
push
cmc
fisubrs
movsl
cmp
lods
xlat
jo
mov
jl
sub
or
adc
xchg
adc
fcmove
repz
cmp
cmp
and
in
mov
incb
aad
mov
cmp
call
inc
scas
cmpsl
mov
mov
roll
mov
popa
enter
mov
lea
test
mov
shrl
sarb
je
scas
out
sub
push
lea
fwait
xchg
xchg
in
mov
pop
push
movsl
adc
bound
in
sahf
aam
inc
clc
mov
shlb
mov
repnz
jo
jne
xor
outsl
jl
aad
jg
inc
lods
into
jl
loopne
mov
imul
mov
mov
scas
pop
pusha
lods
inc
sar
sub
aas
mov
ds
insl
cwtl
mov
mov
push
std
aaa
cmp
loop
lds
inc
data16
inc
stos
pusha
outsb
inc
rorl
pop
jns
adc
sub
insb
push
pushf
repz
cmc
pop
sarl
in
nop
cs
insb
add
pop
aas
push
andb
in
sbb
xor
fdivrs
cmp
push
movsb
in
push
mov
xchg
testb
inc
sbb
xor
sbb
push
jo
xchg
in
repz
fcoms
mov
jmp
scas
add
push
dec
jne
inc
sub
shll
sbb
push
or
mov
and
add
cli
shlb
lcall
and
pop
jge
pop
jmp
sbb
fiaddl
pusha
stos
sub
sbb
js
push
xor
rolb
sbb
xchg
push
mov
add
pop
jmp
xor
inc
inc
popf
mov
ja
in
push
sbb
jb
daa
pushf
mov
aad
jle
nop
dec
and
mov
adc
daa
pop
hlt
pop
dec
ja
dec
mov
mov
mov
rorl
lcall
imul
fucomip
push
mov
dec
cmp
lods
dec
decl
out
add
pusha
inc
popa
dec
outsb
dec
movsb
jg
mov
out
scas
mov
adc
ds
sub
cmpsb
cmp
cs
sbb
mov
clc
inc
mull
pop
aaa
push
js
lods
dec
add
lcall
cmc
cmp
ja
xor
jne
adc
mov
mov
cmp
sub
or
les
fwait
cmpsb
lahf
mov
dec
frstor
pop
mov
xor
mov
inc
loopne
and
inc
mov
js
dec
mov
mov
daa
orb
xor
aam
dec
mov
xor
sbb
lret
flds
mov
icebp
jne
bt
xor
cmp
test
push
adc
cmp
nop
sub
pop
xlat
sar
and
or
pop
data16
pop
xor
sub
rcll
test
sbb
sub
inc
outsl
daa
mov
call
dec
mov
fldcw
cld
jae
movsl
push
scas
sub
test
into
out
inc
jne
mov
inc
sbb
loop
xor
fs
mov
ret
outsb
repz
es
cld
lcall
aam
in
cld
aam
ljmp
mov
mov
jl
xchg
ja
add
repnz
hlt
and
adc
xchg
ja
adc
jne
adc
je
dec
and
mov
push
xchg
decl
loope
pop
push
mov
add
pcmpeqb
jecxz
xor
movsb
enter
in
mov
xchg
incb
adcl
cmp
lret
inc
cmpsl
adc
sti
and
orl
cmpsl
mov
mov
out
rclb
dec
pop
sbb
mov
leave
pop
aaa
lea
jp
xchg
dec
bound
adc
xlat
xor
fstps
push
mov
dec
xchg
lcall
call
push
dec
rolb
repz
xchg
rorb
ret
daa
mov
or
adc
ljmp
jl
jecxz
dec
cmp
cmp
jle
sbb
sti
adc
int3
into
pop
or
mov
adc
out
mov
push
cmpsl
cli
pop
dec
fcmovne
lcall
enter
xchg
sbb
push
cli
xor
mov
cmp
repz
xor
sub
data16
add
fiadds
fisttpll
mov
out
insb
push
adc
testb
into
sub
int3
cltd
inc
xchg
aad
cmp
clc
xchg
out
add
mov
push
movl
das
ret
push
adc
aaa
sahf
add
inc
lea
cmp
lret
xchg
aaa
fwait
xchg
lret
into
hlt
aaa
jne
out
sbb
in
aas
sbb
cwtl
negb
scas
hlt
jns
add
sbb
iret
dec
lds
jne
ret
fisttps
fucomp
lcall
ret
int3
arpl
pop
mov
or
mov
lods
aaa
pop
sub
adc
repz
mov
and
enter
pop
xor
ficoml
lds
jae
outsb
hlt
loope
add
out
mov
add
aam
jne,pn
jo
push
lcall
scas
cmp
out
movsb
mov
push
fs
inc
inc
int
testb
fildll
in
jge
jo
mov
adcl
inc
hlt
xchg
out
and
push
ret
dec
mov
add
push
ficoms
mov
pop
jb
jbe
xorps
and
push
mov
cmpsl
xchg
pop
pop
push
fcmovnb
and
dec
in
out
inc
pop
push
or
lret
cmpsb
cmp
fsubrp
sub
je
cmp
sti
xchg
mov
adc
std
jo
shr
jno
jecxz
push
xchg
mov
pop
ja
notl
out
lret
cmpsl
insb
dec
test
repz
mov
shll
rcrb
dec
enter
push
js
int3
cmp
lret
enter
adc
fcoml
sub
sbbb
out
insl
mov
sbb
sbb
stos
pop
sbb
jl
int3
lahf
es
js
in
push
mov
or
cmp
outsb
outsb
loope
inc
loop
pop
jns
mov
idiv
xor
sbb
daa
dec
pop
icebp
cmp
mov
mov
lock
outsl
add
dec
push
repnz
mov
xabort
mov
add
adc
add
sub
sub
inc
scas
and
ja
scas
inc
aam
mov
mov
mov
mov
imul
ret
fcoml
xchg
aam
in
adc
shrl
jg
es
rcll
mov
into
push
lahf
mov
or
popf
pop
pop
or
popw
inc
and
jne
out
adc
mov
inc
jecxz
push
sahf
cmc
cld
cs
idivl
jo
inc
lret
fbstp
shlb
mov
xchg
insl
test
les
loop
cmc
dec
leave
adc
iret
mov
or
mov
pop
mov
imul
jo
mov
jecxz
mov
outsb
push
pop
loop
dec
insl
mov
lahf
repnz
mov
dec
inc
arpl
gs
mov
jne
insb
hlt
pop
adc
push
sbbb
mov
mov
sub
in
push
xchg
jle
xchg
movsb
pushf
xor
and
push
cmpsl
cmpsb
sahf
cmp
adc
jmp
je
stos
lods
xchg
xchg
or
out
add
pop
push
inc
fdivs
lods
imul
dec
out
xchg
scas
adc
lods
addl
loopne
in
movsb
or
or
mov
adc
divb
adc
loope
ss
fnstenv
mov
arpl
push
xchg
call
pop
scas
mov
pop
jecxz
xchg
lods
push
call
pusha
pop
fcoml
or
cmp
jg
pop
dec
test
in
icebp
push
mov
leave
negl
daa
cmc
mov
and
call
xor
xchg
push
shr
sbb
fcmovu
xor
ficoms
jle
adc
mov
xorl
pop
imul
mov
dec
cmp
push
inc
add
lock
pop
es
xchg
dec
fisubrs
sub
sub
jb
loopne
dec
scas
sbb
push
jg
sbb
cwtl
dec
dec
into
sarl
push
outsb
jl
xchg
repnz
xchg
das
dec
imul
into
add
xchg
jne
mov
in
fwait
add
rcl
pop
mov
push
xchg
dec
dec
pop
pusha
aam
and
or
xchg
test
pop
mov
sbb
testb
pop
add
pop
mov
xlat
mov
jo
xor
out
scas
jnp
loope
adc
pop
and
adc
icebp
sbb
cmp
pop
loop
mov
test
sub
xchg
mov
add
xchg
sub
lret
ret
orb
ja
dec
out
out
inc
add
mov
sahf
pop
rcl
xlat
cli
test
adc
add
mov
pop
bound
jl
stos
movsb
sti
aaa
into
sub
mov
das
sub
outsb
sbb
cli
push
fsubrl
inc
das
mov
adc
popf
pop
lret
xchg
sbb
push
jmp
push
push
jge
adc
add
add
outsb
xchg
test
inc
roll
dec
out
inc
inc
pusha
es
jg
stos
mov
inc
vmwrite
jmp
and
pop
fdivrs
xchg
js
dec
arpl
insl
mov
mov
test
lahf
call
xchg
add
xchg
loope
or
out
lahf
push
adc
push
repnz
pop
dec
xchg
push
js
add
mov
fucomp
xor
xchg
insl
xor
movq
cli
icebp
jg
out
shlb
pop
pop
call
dec
orb
xor
dec
in
xchg
push
sbbl
mov
adc
rorl
pop
sarb
insb
fbld
push
daa
jnp
out
les
mov
je
or
adc
push
iret
pop
add
adc
in
ds
iret
in
add
pop
cs
dec
push
loopne
pop
insb
dec
cs
jnp
or
loope
mov
inc
ljmp
je
xchg
cmp
dec
push
std
sahf
ret
xchg
imul
sti
xchg
add
and
pop
insb
fs
mov
xor
mov
in
repz
pop
cmpsl
mov
shl
adc
mov
rolb
and
je
sub
bound
lea
mov
mov
lcall
mov
insb
or
testb
es
dec
daa
fcompl
pusha
adc
icebp
adc
adc
dec
mov
insb
xchg
addr16
pop
xor
push
lret
jmp
add
inc
inc
sti
stos
mov
cmp
xchg
fidivl
shl
and
and
push
cld
into
push
imul
xchg
xor
cmp
dec
inc
clc
sahf
cmp
es
sbb
std
or
cmp
cltd
and
scas
and
shr
adc
or
push
mov
or
mov
fdivrp
mov
and
inc
cmp
inc
stc
lahf
cld
and
sti
xchg
mov
push
out
mov
or
test
pop
push
test
lock
sbb
pop
cmp
jecxz
jo
pop
jbe
sbb
ljmp
jno
cwtl
push
stc
pop
lea
push
jmp
pop
jecxz
inc
pushf
iret
test
lret
xor
andl
inc
dec
daa
mov
je
cmpsb
lret
xor
out
inc
inc
xor
sti
sahf
or
int3
not
mov
pop
or
jmp
cld
sub
push
pop
mov
sbb
pop
shrl
adc
cli
inc
push
fstps
test
mov
div
mov
pop
add
dec
aad
sub
push
pop
pop
lret
ss
xchg
in
fistps
out
out
lea
mov
fnsave
outsl
sbb
lds
lods
xchg
pop
test
dec
stos
cmp
shlb
add
dec
in
popa
cmp
rcl
xor
pushf
loope
fwait
sbb
or
mov
sub
jns
cs
mov
in
mov
xchg
xchg
outsb
sub
jbe
push
cld
pop
cmp
sbb
jle
movsb
in
addr16
cmp
cmp
adcb
daa
pusha
test
ljmp
cld
ds
sbb
xchg
popa
hlt
mov
add
dec
ficompl
mov
and
scas
cmp
subl
iret
int
push
dec
mov
stos
xor
sub
scas
sbb
lahf
arpl
dec
push
inc
fcoml
xchg
sbb
fidivs
pop
xor
adc
aam
fistpl
sbb
or
cwtl
lcall
das
insl
mov
cmp
aas
ret
push
jno
sub
cmp
adc
add
mov
fstl
ljmp
jno
je
sbb
jle
subl
fstpl
icebp
cs
ret
fistps
adc
stc
js
sti
mov
aad
jns
ret
lcall
cmp
inc
and
and
mov
lock
es
sbbb
lret
mov
ret
mov
addl
inc
sti
in
add
sbb
sub
pusha
dec
cmc
jl
push
dec
dec
dec
pop
sbb
jecxz
dec
adc
pop
scas
loop
xchg
mov
aad
and
les
aam
test
js
aam
and
cmp
ja
movsl
test
dec
dec
scas
add
or
jns
pop
add
lcall
mov
mov
jbe
paddq
and
mov
adc
cli
sub
sbb
insb
mov
adc
lcall
fldl2t
mov
sub
enter
lock
inc
push
out
ficomps
or
xchg
sub
mov
and
cltd
mulb
and
pop
addr16
xchg
jle
dec
lods
and
adc
or
and
dec
psubw
xchg
insl
jmp
sub
lds
sub
or
mov
cli
sub
cwtl
call
cwtl
fiadds
aad
mov
sbb
xor
in
sbb
ret
mov
repnz
xchg
sub
add
nop
test
add
daa
inc
push
aam
dec
and
int
pop
scas
xchg
or
aad
mov
hlt
dec
push
push
sbb
and
push
sbb
fildl
jbe
mov
out
data16
cltd
jp
sub
cmp
mov
push
out
mov
repz
sub
cltd
push
adc
jbe
xchg
movsb
repnz
stos
lods
push
xchg
movsl
cmp
mov
or
frstor
push
adc
xor
stc
aad
xchg
pop
cmp
arpl
divb
mov
pop
addb
lods
add
cs
adc
fnsave
inc
fxch
push
in
jle
inc
inc
rol
int
sbb
scas
jmp
xchg
mov
fsubrs
lcall
mov
adc
jg
cwtl
stos
inc
pop
jp
mov
jge
mov
mov
hlt
xor
ljmp
repnz
call
xor
shr
mov
pop
dec
cltd
push
xchg
idivl
cmp
les
jp
mov
pop
mov
xor
repnz
add
fldcw
int
bound
mov
popa
sti
inc
cwtl
mov
lahf
sbb
sbb
dec
ds
push
insl
and
push
cmp
push
inc
sbb
je
lahf
ljmp
mov
aaa
dec
inc
mov
shll
pushf
dec
aas
jns
inc
bound
mov
add
test
xor
pop
adc
negb
enter
mov
ja
fstpt
xchg
daa
insl
push
xor
sbb
and
orl
ret
scas
jp
jg
sbb
mov
mov
mov
into
mov
shrb
js
xor
push
out
mov
mov
pop
xor
jg
clc
ss
gs
es
cmc
js
xacquire
add
andl
fnstenv
dec
daa
btc
push
pop
pop
cmc
and
aad
bound
mov
cmpsb
jge
mov
pop
mov
push
adc
cmp
inc
cld
clc
adc
inc
fnstenv
test
mov
sti
inc
jb
je
cmp
jle
test
scas
mov
das
fld
mov
lea
hlt
or
aad
cmpb
inc
pop
icebp
fildll
shrl
pushl
push
fisubs
cmpb
push
adc
mov
rolb
jno
add
sti
orl
jg
adc
dec
xchg
xchg
jl
and
mov
lods
jg,pn
xor
xchg
cmp
mov
dec
cmc
ljmp
pop
loope
icebp
mov
inc
sbb
negl
sub
sub
xor
sub
sub
mov
mov
mov
clc
or
jg
cmp
fs
or
cmp
int3
sahf
mov
cmpb
fs
dec
mov
lock
mov
jle
ret
jp
and
xchg
and
or
jp
sub
mov
mov
fisttps
xchg
cmpsl
lds
lds
lods
loop
jbe
gs
pop
jns
and
mov
cmp
inc
in
or
test
cmp
jmp
sbb
push
sbb
jecxz
mov
jo
dec
out
add
xchg
fdiv
jg
dec
pop
sbb
loop
xchg
adc
test
mov
jne
bound
mov
bound
xchg
xor
scas
addl
out
arpl
sbb
shlb
cld
mov
adc
push
xchg
out
sub
popf
jg
rolb
pop
add
out
jl
loope
adc
popa
mov
sbb
mov
mov
aaa
into
cmpsl
pop
jae
lcall
std
push
icebp
les
push
push
outsl
jge
popf
mov
orl
push
lock
out
in
out
cmp
pop
stos
xor
xchg
stos
sub
pop
push
iret
repz
push
ja
pusha
inc
add
mov
sbb
ss
repz
arpl
sub
adc
into
into
enter
sub
out
stos
daa
mov
inc
adc
cs
dec
jle
pusha
pop
insl
sbbl
lods
outsb
ja
out
mov
fs
push
out
xchg
and
scas
dec
inc
inc
test
and
sub
sbb
clc
jae
jno
xchg
mov
pop
mov
outsl
mov
pop
pop
in
ss
fadds
js
test
pushf
ds
loope
rcrl
rorl
push
insb
inc
add
push
add
xchg
hlt
fdivs
int3
rcll
inc
notl
repnz
scas
cmp
inc
or
jle
lock
and
daa
mov
add
out
dec
cmc
and
pushf
arpl
xchg
lahf
movsb
add
pop
out
stc
nop
and
inc
inc
add
loope
push
pop
adc
jmp
add
and
and
loopne
insl
js
or
adc
cmpsl
imul
sbb
or
fnstenv
and
aam
clc
inc
inc
icebp
inc
iret
stos
aaa
sahf
or
loopne
or
xchg
or
xor
cs
lds
add
das
mov
ljmp
xchg
mov
gs
pop
push
cmp
adc
cmc
into
mov
jns
lock
push
jmp
adc
pop
in
call
jg
xor
inc
add
pop
ss
popf
inc
cld
pop
sahf
arpl
or
cltd
rorb
mov
in
mov
sti
icebp
add
mov
xchg
dec
xchg
add
or
jae
mov
out
shl
xchg
and
out
outsb
sahf
mov
fmul
iret
push
ret
pop
mov
cmpl
out
pop
and
cmp
imull
aam
nop
pop
dec
std
xchg
jp
fwait
push
data16
in
loope
pop
sub
push
stos
shl
popa
lds
imulb
pop
cli
aam
fmulp
fsub
inc
pushf
out
mov
lock
push
in
call
sub
dec
xlat
pop
in
pop
push
adc
jbe
aam
imul
pop
xlat
enter
adc
push
rol
push
push
fidivrl
mov
add
mov
lahf
xor
xchg
push
pushf
dec
js
push
outsl
loopne
mov
ss
ds
jns
xor
dec
add
test
ret
mov
inc
mov
sub
mov
dec
mov
rorb
sbb
sbb
and
mov
xor
jo
test
mov
ret
push
cmpsb
adc
adcb
cmpsb
out
or
mov
and
dec
push
mov
fistpll
sub
pop
adc
pop
mov
pop
div
mov
add
jg
mov
aaa
jp
xor
inc
out
jp
call
test
mov
bndstx
out
popf
xchg
cmpb
aas
jno
push
push
cli
sbb
fwait
dec
rcrb
scas
mov
fsts
mov
push
jl
call
outsb
out
test
lds
mov
jmp
sarl
jecxz
movsw
inc
lahf
sub
jle
jno
push
pop
ja
test
adc
popa
or
xchg
sub
popf
xchg
stos
mov
testl
dec
xchg
jle
push
mov
int3
mov
cli
push
fwait
and
movsl
fwait
push
jecxz
xor
or
jl
scas
iret
xor
pop
rorb
addl
hlt
and
inc
mov
insl
mov
sbb
addr16
and
push
dec
cwtl
imulb
fcompl
lea
int3
pushf
cwtl
xor
mov
in
jg
jo
cmpsb
pop
mov
loop
cmp
inc
xchg
movsb
nop
cli
mov
push
in
pushl
notb
movsb
aam
adc
mov
push
or
shl
rorb
and
dec
push
ss
call
jbe
push
stos
jo
mov
push
roll
jg
outsl
pop
outsb
xchg
in
jl
call
mov
out
mov
movsb
sbb
call
push
hlt
jbe
push
je
cmc
repz
andl
xor
jo
xchg
out
icebp
xor
add
jbe
or
adc
xchg
cmp
push
mov
cmp
cmpsb
mov
sub
lds
mov
mov
push
insb
adc
stos
or
cmc
cli
pop
mov
sbb
icebp
fists
cmp
lods
add
push
loop
and
pop
imul
sbb
fidivrl
mov
mov
sbbb
jge
push
lods
jb
or
jg
aad
insl
loopne
dec
imul
nop
fwait
xchg
inc
out
or
add
jnp
mov
lods
xor
fisttpl
xchg
lcall
loop
jnp
out
sub
pop
add
jp
dec
adc
cwtl
push
lods
fwait
das
inc
popf
cmc
out
push
jg
sbb
ja
mov
dec
aam
pavgw
mov
xor
inc
xchg
out
pop
cmp
in
mov
push
aam
push
cmpb
lods
int
sbb
push
shrb
mov
shrb
mov
mov
xlat
mov
and
movsb
les
mov
cmpsl
je
add
arpl
in
ret
pop
or
pushf
adc
adc
fs
xchg
push
mov
inc
jns
cmpsb
les
adcl
jl
cmp
inc
jne
or
adc
loopne
add
cmp
std
lcall
in
mov
lock
mov
inc
out
dec
orl
sti
es
insl
ss
xchg
mov
mov
test
sub
test
mov
push
fldl
mov
repz
mov
rclb
push
test
push
mov
mov
rolb
cmp
sbb
cmp
filds
pop
test
jmp
repnz
lcall
ja
lds
adc
mov
jg
fiaddl
adcb
popf
std
inc
sbb
sub
pushf
push
arpl
dec
ljmp
mov
and
push
adcb
or
inc
inc
push
rol
pop
xor
xlat
arpl
jb
or
mov
stos
add
mov
xchg
pop
push
mov
repnz
dec
test
fcmovb
cld
arpl
int3
xchg
inc
mov
fucomp
jb
mov
lock
mov
ds
nop
inc
test
ja
out
xor
lods
dec
int3
cltd
jmp
pop
daa
push
sub
aas
nop
adc
ss
mov
fimuls
xchg
cltd
dec
fadds
xchg
push
ss
out
test
dec
negl
mov
mov
mov
ljmp
in
mov
pop
jnp
mov
lods
pop
lret
sub
in
pusha
mov
sbb
and
stos
outsl
push
outsb
cmpb
mov
nop
jno
pop
int3
andb
stos
icebp
mov
in
jno
jns
cs
mov
dec
pop
nop
aas
mov
mov
sub
adc
shlb
xchg
pop
dec
nop
jle
lods
fstps
imull
mov
ret
in
inc
jl
jmp
lock
sbb
cmp
arpl
inc
inc
fwait
dec
and
shrb
dec
cltd
nop
sub
or
daa
lock
sub
jnp
push
mov
and
lahf
push
push
movsb
xchg
test
mov
pop
or
pop
ds
sub
sbb
enter
adcb
sarb
mov
dec
and
cld
outsl
push
mov
mov
mov
jle
leave
je
xchg
cli
rcrl
xchg
adc
movb
pop
push
lahf
and
or
lret
ret
dec
movhps
shl
std
add
mov
and
cmp
jp
imul
dec
lahf
push
cmp
loop
jns
in
mov
adc
andb
sbb
les
mov
adc
xchg
cmp
mov
jbe
flds
adc
int
ds
out
inc
lods
jo
add
xchg
je
icebp
mov
jg
icebp
outsl
push
fnstsw
out
in
adc
lds
pop
in
fstpl
pop
int3
adc
fdivrl
andl
push
xchg
add
xor
pop
stos
jbe
jns
arpl
adc
lahf
jae
nop
jno
push
jno
adc
inc
cmc
out
dec
lret
xor
jo
adc
mov
or
je
pop
stos
lcall
jmp
gs
lret
xchg
ficoms
lock
fldenv
loopne
or
and
pop
mov
push
lods
pop
rorb
lea
lods
cmpsl
icebp
ss
dec
jae
testl
aad
inc
in
dec
mov
jg
repnz
jns
das
lret
push
xor
or
mov
push
jmp
sbb
mov
jnp
aam
and
rorb
push
push
fbstp
pop
inc
pop
cmp
xchg
pop
or
xor
leave
mov
mov
flds
repz
dec
cmp
or
add
jns
mov
inc
dec
mov
jbe
loopne
xlat
call
bound
fcoms
jmp
icebp
push
mov
pop
push
xor
add
pusha
add
test
test
ja
aaa
jbe
call
stos
sub
and
lods
or
mov
lret
cmc
imul
xchg
pop
sarl
cmpsb
vpand
add
lret
push
call
call
inc
cmpsb
mov
jbe
and
fsubrl
jp
xor
data16
rcrl
negb
cmp
sahf
insb
pop
push
ds
outsl
je
enter
pop
add
mov
lret
push
mov
lea
outsl
fnstsw
xor
into
gs
pushf
jnp
sbb
in
nop
pop
call
mov
fbstp
loopne
and
ss
leave
into
push
cmp
jne
idivl
repz
xor
mull
movsl
sub
ljmp
jno
dec
or
cmp
mov
push
test
push
aad
mov
xchg
js
jecxz
jno
test
in
lods
push
pop
mov
into
or
aam
xchg
dec
test
mov
inc
ud0
bnd
push
nop
cmpsl
sbb
fwait
inc
mov
imul
insb
ljmp
jp
jl
dec
outsl
push
addb
sub
push
dec
cs
xlat
repz
lock
inc
int3
les
jae
push
mov
nop
ret
mov
fs
adc
scas
jae
sbb
or
negl
jle
imul
jno
iret
or
pushf
dec
pop
mov
cmp
js
pop
xchg
mov
rorb
mov
xchg
jge
pusha
mov
inc
mov
idivb
push
addr16
shll
xor
fcoms
ficompl
bound
orl
xchg
jecxz
call
sbb
ljmp
xor
push
xchg
mov
sti
insb
lea
sbb
pusha
nop
cmp
out
pop
adc
lret
shlb
in
popa
mov
push
mov
fdivs
push
xchg
inc
push
fsubrp
out
lods
xlat
and
fwait
dec
lods
xchg
push
sbb
jg
add
jl
inc
arpl
dec
and
in
lods
and
dec
push
push
adc
or
pop
xor
ja
mov
dec
imulb
cmp
add
inc
cmp
aam
push
outsb
jo
cmp
arpl
ror
lret
sti
ljmp
push
mov
mov
popa
into
mov
and
lea
cmpsb
jo
and
xchg
sub
lods
cmp
sbb
ret
pop
andb
imul
jle
dec
mov
scas
push
inc
sub
fdivrl
sbb
adc
jg
scas
testb
pop
pusha
adc
sbbb
rcrb
or
xchg
mov
outsl
mov
sbb
or
incl
mov
in
loop
pop
dec
xor
pop
rcl
in
add
jnp
insb
sub
mov
or
adc
pop
loopne
xor
push
rcll
ds
mov
jne
inc
clc
sbb
pop
push
sub
xlat
push
mov
pop
xchg
addb
cs
jno
lret
js
and
test
dec
dec
xchg
and
xor
push
mov
pop
dec
es
and
mov
rorl
or
in
movsl
lds
cmc
dec
and
out
lods
inc
popa
inc
mov
and
xor
adc
mov
loope
xlat
sahf
stos
in
adc
mov
sub
cmpb
cs
pop
xchg
shlb
cmp
rolb
sbb
add
js
lahf
dec
sub
fwait
lods
xchg
add
xchg
js
xor
ss
cmp
int
loop
xor
or
jns
sahf
push
fnsave
adc
test
sti
xor
fstps
mov
mov
pushf
xor
add
adc
arpl
pop
cltd
mov
fidivrs
jnp
aas
shll
jg
and
loope
sub
adc
xchg
lds
xor
in
adc
sub
mov
les
jno
dec
pop
rclb
and
mov
dec
out
sub
aas
add
enter
mov
xor
lea
data16
enter
pop
movsb
mov
mov
adc
and
pushf
xchg
xor
mull
fistl
jp
pop
mov
fwait
sbb
inc
dec
sbb
sbb
inc
aam
lcall
xlat
mov
call
cs
pop
mov
sub
cmp
jp
bound
push
jbe
mov
adc
push
fwait
jmp
fimull
xor
xchg
inc
sub
push
cmpsb
pop
cmpsl
pop
test
shll
adc
out
popa
inc
int3
and
lahf
and
lock
addr16
test
sub
repz
cmp
les
add
arpl
pop
lret
lret
jae
jmp
pop
pop
adc
push
fwait
cs
call
out
jo
mov
push
out
fimull
aad
notb
pop
lock
pop
xchg
stos
scas
add
iret
jnp
repnz
adc
and
pop
push
push
mov
clc
jb
in
popf
xchg
jg
test
mov
insb
pushf
or
sub
pusha
cmp
and
lret
popa
mov
push
jge
or
push
jno
mov
dec
scas
arpl
cld
mov
cwtl
sbb
rclb
stos
adc
lahf
dec
mov
cli
mov
lret
loop
pop
lock
into
xchg
inc
cmc
ja
cmp
xor
push
shr
test
push
sub
mov
cmp
pop
add
jmp
jno
or
jnp
mov
adc
std
pop
loopne
inc
push
adc
jle
loop
xor
mov
inc
mov
cli
pop
cmp
mov
jb
jo
and
push
sub
push
ja
fldl
push
psrlw
sbb
pushf
gs
or
push
shll
adc
ja
and
aad
sbb
sbb
and
popa
leave
or
cs
jmp
mov
or
mov
pop
adc
sub
jnp
lock
cmp
mov
in
sbb
push
movsb
or
pusha
jae
fstpl
dec
lods
mov
iret
cmc
mov
cmp
insb
cmc
dec
enter
mov
sbb
es
gs
bound
inc
mov
adc
pop
out
cmpsl
shrl
iret
push
scas
push
mov
or
in
test
push
leave
je
lret
xchg
fstpl
mov
daa
bound
sbb
inc
inc
inc
cmc
inc
mov
fdivl
xor
mov
aas
mov
mov
pop
or
and
stos
sub
adcl
fmuls
iret
inc
test
call
pop
xlat
popfw
repz
sbb
mov
push
mov
lods
loope
or
push
movsb
movsb
jl
cmp
shr
fists
mov
push
mov
adc
inc
inc
xor
inc
in
test
mov
fcomip
xchg
fstl
mov
pushf
or
push
insl
call
insb
add
lea
leave
ja
movsl
lea
aad
into
lret
ja
adc
pop
or
adc
scas
push
aaa
iret
stos
mov
dec
out
shll
mov
and
xor
ja
jne
call
fwait
pop
push
ljmp
jno
adc
mov
xor
xlat
push
in
ja
idiv
fcomp
enter
test
pop
dec
fistl
lock
out
in
lds
fisubs
mov
cmp
cmpsb
js
xchg
lods
jae
jmp
out
dec
sbb
repnz
push
push
ds
push
mov
arpl
addr16
lcall
cmp
push
cmp
jecxz
dec
cmc
sbb
mov
icebp
cmp
inc
push
fsqrt
xchg
movswl
dec
clc
adc
repz
xor
test
fidivl
cmp
sub
sbb
xchg
fidivrs
cmp
int3
cmp
lods
stos
out
repz
fadds
sarl
ret
xchg
jp
hlt
and
nop
jl
push
testl
fwait
dec
add
or
sub
mov
sarb
jle
dec
out
pop
lahf
mov
mov
push
pop
push
gs
cmp
pushf
sbb
lret
push
loop
sbb
ret
dec
in
sub
sahf
loopne
pop
xchg
mov
pop
sahf
mov
push
test
mov
repnz
call
jo
ret
xor
das
in
in
shl
xchg
dec
enter
pop
pop
add
mov
mov
jns
mov
or
sahf
or
mov
subb
adc
rcr
mov
pop
je
xbegin
pop
addr16
mov
es
pop
xor
stos
and
cmpb
rcr
aas
mov
cs
fs
push
cld
cmp
in
cli
xor
bswap
into
faddl
push
lret
jg
pop
pop
repz
fisttps
into
sahf
pop
add
add
adc
orb
cmp
subl
roll
loope
pusha
lcall
mov
cwtl
outsl
add
sub
cmp
mov
dec
sahf
xchg
rorb
popa
or
incb
pop
jg
push
mov
jp
insb
outsb
pop
out
adc
add
test
cmp
or
add
and
mov
das
jbe
xchg
dec
test
mov
shll
sarl
add
cmp
out
out
xchg
rol
int
sbb
jl
outsb
add
mov
enter
sbb
dec
mov
lock
mov
mov
fstpt
shrb
cmp
out
sti
push
lea
movsb
movsl
out
shll
ret
cmp
loop
adc
hlt
inc
mov
out
adc
ss
insb
imul
pop
push
mulw
pop
add
mov
iret
rcl
xor
xor
aad
xchg
repnz
mov
out
add
push
ja
and
adc
cmpsl
mov
fisubrs
jne
fsub
jnp
sub
lret
add
out
jns
and
jecxz
lea
insb
xchg
dec
outsb
mov
lcall
in
mov
cwtl
fcmovnb
or
cmpsb
cmp
cmp
enter
subb
outsl
mov
aam
mov
fdivr
in
fwait
imul
daa
stc
and
dec
adc
idivb
ret
les
push
mov
sub
pop
cmpsb
pop
push
add
in
stos
ficoms
xor
aas
cmc
jge
test
into
pop
mov
lds
int
stc
push
fucomip
and
pop
ss
shll
xchg
mov
add
dec
or
pop
std
xor
inc
mov
and
xor
inc
or
lahf
cli
sub
pop
jmp
icebp
push
jmp
push
mov
pop
cmc
push
sub
adc
cmp
fwait
xor
rorl
adc
lods
xchg
lret
mov
add
pop
ds
js
mov
push
dec
sbb
outsw
cmp
mov
adc
js
sbb
das
out
sbb
movsl
inc
or
sub
fdivrp
jo
outsl
sbb
inc
hlt
xor
pop
fnstenv
sbb
xchg
sbb
xor
mov
arpl
sbb
pop
inc
stc
lret
ret
jge
push
lock
lods
lea
xchg
and
jge
fwait
out
sub
mov
sahf
hlt
lret
pop
push
sub
mov
iret
xor
mov
push
sub
mov
out
cmp
aad
xchg
mov
mov
mov
mov
shll
mov
stc
or
int
mov
div
mov
pop
aam
xchg
call
cmp
push
xchg
pop
stos
jne
jmp
dec
inc
xor
test
hlt
lds
test
push
push
shll
in
push
cld
push
jmp
movq
push
jo
push
rolb
ljmp
shl
aad
repz
sbb
hlt
sar
push
mov
mov
adc
jle
mov
cmpl
movsb
scas
and
push
loop
andb
int
addr16
fdivl
out
or
inc
jg
jg
test
fisubrl
fdivl
mov
jnp
jae
bound
shl
cmpl
jns
sub
mov
dec
repz
inc
incb
movsl
push
scas
aas
movsb
xchg
pop
add
aaa
repnz
mov
shr
xor
aam
es
push
adc
dec
cmp
push
xchg
dec
inc
push
jnp
add
mov
xor
mov
ret
popf
es
leave
movsl
cs
int
push
sbb
pop
and
sahf
sbb
gs
scas
rol
xorl
lods
pushf
movsb
mov
shl
mov
ret
mov
and
mov
push
rcrl
test
movsb
sub
test
sub
adc
xchg
aas
adc
es
dec
lds
inc
sub
dec
loop
jbe
dec
xlat
movsb
imul
sbb
mov
or
inc
inc
aas
fwait
jmp
fisubs
mov
data16
push
push
imul
ss
sbb
leave
fstps
scas
out
pushf
sbb
loop
push
es
or
loopne
inc
popf
cmp
stos
jmp
xchg
divl
jo
aad
repnz
xor
out
out
rcrl
jnp
lods
lods
pop
adc
int3
jg
mov
lret
mov
and
sti
inc
and
mov
push
jge
pusha
test
shll
and
aas
adc
js
xlat
cs
and
mov
jmp
std
jl
adc
pop
je
add
push
scas
pop
filds
mov
xchg
insb
fs
addb
das
mov
repnz
mov
pop
pushf
fisubl
adc
mov
jecxz
pop
icebp
jbe
fnstsw
xchg
xchg
repz
scas
aad
push
aad
dec
fiadds
imul
je
jg
or
imul
push
dec
adc
adc
cmp
or
fsubrl
int
movsl
sbb
mov
repz
cmpsb
out
loopne
pop
xor
xchg
sbb
daa
jns
sbb
push
push
int
mov
mov
aas
cmc
mov
xor
pop
jecxz
xor
jne
xchg
mov
xor
dec
cmp
sbb
inc
xlat
aad
int
xchg
dec
shll
push
fdivrl
lock
mov
pop
mov
xor
sub
pop
jp
lds
mov
sbb
outsl
cmp
adc
mov
lds
mov
cld
enter
mov
inc
pop
xor
and
mov
pop
mov
rclb
lahf
add
orb
cmp
jl
sarb
daa
push
jl
mov
orl
dec
dec
xor
push
mov
xchg
ret
stos
insl
jl
xor
mov
dec
sbb
negl
dec
repnz
fsubl
mov
cmp
ror
rolb
sbb
add
mov
mov
test
mov
in
popl
inc
jne
jbe
int
mov
sub
hlt
and
cmpsb
jbe
loop
dec
inc
sbb
fdivl
xchg
jp
orl
dec
pop
in
fildll
mov
xchg
sarb
mov
fstl
fnsave
lret
xor
daa
rcll
hlt
sarb
or
movsl
stos
mov
mov
pop
adc
inc
js
adc
xchg
dec
loope
or
jns
cs
icebp
out
push
cmc
mov
sub
mov
imul
pop
int3
jg
xor
adc
push
jp
cmpsl
cmpsl
push
lods
mov
jmp
mov
jno
mov
xchg
lods
jae
xchg
and
fistl
mov
sub
aas
into
jb
roll
aam
inc
sbb
and
pop
mov
xor
push
push
leave
nop
add
out
les
fldenv
andl
or
fldl
xchg
push
dec
mov
in
xor
pop
in
test
cmp
test
mov
iret
xor
xchg
les
sti
in
and
enter
dec
push
movsl
mov
mov
sub
push
xchg
sub
mov
dec
add
aad
cmp
cld
dec
mov
mov
add
sbb
stc
push
xor
fsts
popl
mov
pushf
cltd
inc
iret
xorb
es
cmpsl
pop
xor
pop
js
mov
inc
or
pop
dec
and
popf
ja
mov
shl
jnp
xchg
xor
in
cwtl
incb
push
xchg
adc
inc
sbb
push
in
gs
xor
repz
pop
cmpsb
add
cmpsb
push
push
out
inc
orl
je
mov
rorl
rcll
xchg
mov
dec
cmp
or
cmp
xchg
cli
inc
lock
adc
mov
test
sub
jb
xor
cmc
lea
mov
int
pop
cmp
or
jnp
cmpsb
cmpps
out
popa
dec
popa
lods
cmpsl
insb
cli
inc
push
aam
fimull
mov
dec
or
nop
dec
popa
roll
leave
pusha
cmp
andb
loopne
les
call
insl
ljmp
push
aaa
inc
inc
out
test
cmpsl
rcl
test
sub
das
adcb
dec
push
sbb
fisttps
arpl
push
fnsave
shrb
outsb
adc
xchg
insl
or
jecxz
dec
push
cmp
xchg
outsb
jp
pop
cmpsl
mov
jp
mov
jnp,pn
icebp
adc
ljmp
adc
and
dec
pop
aam
scas
and
ss
pop
lock
nop
adc
stos
test
or
mov
test
push
ja
sub
inc
std
ffree
imul
cwtl
sub
cli
ret
fbstp
shlb
mov
ss
sub
leave
add
or
mov
lds
lret
push
inc
stos
inc
js
push
mov
and
out
es
jle
push
pop
sti
sbb
ss
xchg
scas
mov
in
jg
jecxz
push
popf
xor
and
stos
aad
and
and
rcrl
lcall
imul
insl
repnz
aas
pop
insb
cmp
cmp
dec
movsl
jmp
daa
mov
mov
jg
add
inc
mov
mov
cld
in
pusha
ljmp
mov
pop
xchg
xchg
mov
xchg
pop
repnz
repz
sbb
iret
xchg
adc
lahf
cmc
mov
rcrb
sbb
fsubl
pop
insb
lahf
jp
cwtl
mov
pop
bound
jl
test
roll
sbb
mov
gs
xchg
dec
sbb
mov
imul
fadds
scas
out
sbb
mov
int
into
or
and
cmp
fnstenv
in
pop
cmpsb
sti
inc
pop
and
xchg
fistps
enter
add
repz
imul
sbb
je
dec
addb
jne
insb
pop
sarb
test
movsl
es
mov
mov
call
or
or
jb
in
xor
mov
ja
mov
xchg
dec
inc
aad
test
lods
fistl
lret
lahf
pop
imul
cmpsb
testb
insl
pop
shll
daa
cmpsb
dec
sbb
lret
adc
add
es
fs
mov
xchg
jg
dec
push
push
arpl
and
push
inc
sti
shr
jg
movsb
lods
and
cmp
test
js
jg
sahf
mov
jl
gs
sub
sbb
mov
jmp
or
xchg
xor
sub
xchg
pop
fsubrs
jne
lret
les
mov
aam
cmc
hlt
jcxz
dec
in
cwtl
lods
cli
pushf
sub
sub
scas
mov
add
aad
adc
xor
push
test
or
stos
test
adc
jne
push
lods
std
mov
scas
divps
lcall
or
xchg
out
sub
pop
adc
test
and
pop
dec
xor
mov
adc
paddb
sbb
ret
outsl
icebp
push
sbb
dec
shlb
fistps
roll
push
scas
xor
jecxz
in
lods
fistpl
mov
pop
xchg
movsl
fidivs
cwtl
punpckhbw
xchg
mov
ret
fcmove
movsb
mov
fidivrl
push
test
sub
inc
andl
scas
xchg
cmp
add
lods
stos
mov
cmp
insb
adcb
xorl
lahf
les
test
sbbl
cli
sub
jbe
movl
popf
fidivl
inc
out
movsl
mov
or
out
or
jns
and
pop
mov
inc
incl
and
fiadds
aas
inc
jg
int
out
les
gs
lcall
push
lods
sbb
sub
mov
les
jle
daa
stos
leave
test
inc
outsb
loope
cld
pushf
dec
mov
xor
lods
loope
cli
mov
pop
incb
ficoml
insb
hlt
or
sub
jae
cli
push
leave
out
cmpsl
sbb
insb
fildll
xchg
dec
mov
subb
jnp
cmp
inc
pop
scas
mov
movsl
cmp
les
ss
mov
cli
jg
sub
xor
ja
pop
dec
clc
int
push
cmp
leave
in
cmc
hlt
mov
loopne
pop
pop
xchg
adc
test
xor
sbb
aas
stos
jl
nop
fwait
mov
pop
lods
push
out
add
lods
xchg
jecxz
push
sub
testl
in
leave
or
scas
adc
inc
mov
adc
xchg
rolb
mov
lock
cmp
movsl
xor
push
sub
pusha
add
push
lcall
gs
and
or
mov
divb
mov
and
mov
inc
add
std
sub
imul
pushf
push
pop
ret
add
push
push
popf
jg
stos
mov
jae
cmpb
pusha
popf
stc
scas
pop
pop
or
push
in
pop
inc
arpl
ret
sahf
stos
sbb
mov
pop
pop
insl
sub
popa
bound
ja
sub
mov
les
mov
jae
push
sub
lds
lods
xchg
cmp
andb
cmp
fs
mov
mov
mov
and
loop
push
hlt
mov
sbb
inc
fidivs
sub
jbe
adc
adc
inc
and
dec
js
cmc
mov
dec
insb
lret
mov
rol
inc
faddl
dec
add
add
xchg
pushf
mov
adcl
push
loop
jp
pop
adc
das
lds
sub
sahf
mull
imul
pop
imul
into
mov
loope
mov
push
pushf
cmc
call
mov
icebp
mov
mov
js
jl
lret
add
pop
mov
mov
fisttps
cltd
std
xor
add
mov
mov
push
aam
mov
imul
les
lcall
lock
icebp
xchg
sbb
sbb
xor
rcrb
sbbl
inc
sti
adc
sub
xchg
mov
call
ds
sbb
jmp
pop
lods
fsubr
addr16
push
test
rol
test
inc
popa
repz
rcrl
fistps
sub
mov
addl
call
idivl
jnp
adc
fnstenv
xlat
pop
xchg
ror
push
pusha
in
fisttpl
js
lods
in
or
mov
inc
mov
sbb
gs
mov
mov
sbb
cmp
sub
cmp
ret
cmp
pop
ficoml
xchg
jbe
mov
jmp
and
mov
popa
xor
add
or
mov
add
sub
loope
sbb
mov
je
inc
cmpsb
icebp
cmp
inc
nop
xor
fsubrl
popl
das
jo
dec
loop
pop
lock
notl
xchg
ja
mov
adc
mov
fsubs
or
mov
gs
sub
call
in
dec
inc
and
rcll
sbb
mov
mov
orb
cmpb
aas
les
or
lds
sbb
ljmp
jbe
jle,pt
pusha
int
jl
push
imul
push
fsubrs
xor
sub
outsl
loop
ljmp
fwait
pop
stos
push
scas
or
mov
loopne
cmc
sub
xor
out
testl
orl
push
xchg
xchg
push
movsl
loop
pop
mov
cmpsl
ss
repz
xchg
cmp
add
nop
subl
mov
sbb
fwait
cwtl
sarb
pop
cmc
lods
loop
imul
lock
jbe
repnz
mov
pusha
leave
shlb
dec
xchg
inc
dec
cmpsb
dec
cmc
push
jb
or
mov
inc
jns
fsts
xor
sti
es
lods
xchg
call
cld
and
scas
cmp
mov
and
roll
pop
in
adc
subb
and
adc
or
inc
pop
in
or
xchg
cmpsb
mov
rcrl
pop
lea
popf
adc
or
pop
pop
out
sti
mov
xchg
pop
in
ds
cs
push
fstpt
or
shll
push
sbb
cmp
lcall
jmp
mov
pop
or
filds
cli
push
std
xchg
cmp
sbb
shr
leave
jmp
cmp
out
rcrb
ret
fists
pop
or
xor
sbb
inc
cmp
mov
push
xor
push
std
orb
sti
mov
lds
add
pushf
pop
shll
test
imul
adc
nop
sbb
cmp
mov
mull
dec
cwtl
out
test
fsqrt
jge
popf
lea
mov
sbb
lds
icebp
adc
sbb
mov
ss
push
lret
adc
push
hlt
clc
pop
arpl
sub
in
repnz
fs
sub
not
dec
stos
std
mov
push
jmp
pop
push
int
mov
int
jne
fisubrl
movl
xchg
pop
aaa
pop
xor
fs
ret
std
cltd
sub
cs
clc
in
pusha
outsl
in
sub
push
push
xchg
lcall
pop
and
pop
adc
jae
cwtl
clc
js
pop
ljmp
jns
xchg
cmp
sub
xor
loopne
add
cmpb
cwtl
pop
xchg
sub
adc
repnz
fdivrs
adc
jl
sti
xorb
cmp
fdivrl
mov
pop
mov
iret
mov
jnp
sub
subl
lods
mov
cmp
lret
xchg
adc
pop
sarb
pop
filds
push
jnp
and
inc
cltd
stos
xchg
push
xlat
pop
xchg
insl
andb
pop
sub
dec
mov
xchg
int3
sub
mov
pop
push
sub
mov
and
inc
push
dec
or
pop
in
cli
push
jnp
xchg
ret
loope
cmp
clc
cli
ss
push
mov
sbb
mov
test
les
addl
sahf
pop
pop
xchg
add
inc
int3
pop
hlt
cmp
mov
dec
arpl
lret
xlat
out
test
mov
pop
and
mov
int
movl
aam
inc
in
push
lods
xchg
pop
sbb
scas
xchg
pop
repnz
push
cltd
in
pop
mov
pop
and
aam
out
add
cmp
or
in
sub
stos
add
gs
in
int
ret
in
das
std
mov
cmpsb
iret
cmpsl
dec
or
xor
loopne
sahf
stc
adc
jle
mov
fisubrl
mov
jne
sbb
lret
arpl
push
push
adc
xchg
cmpsb
fisttpll
ja
std
scas
aam
mov
adc
stos
dec
mov
sbbb
cwtl
in
cltd
xor
cmpsl
lea
sub
cmp
mov
mov
clc
iret
out
mov
mov
pop
std
pop
mov
xor
stos
mov
jg
bt
popa
sbb
adc
add
push
xor
fnstenv
shll
and
pop
xor
add
adcl
push
adc
mov
insb
fldenv
and
bound
fs
push
push
jmp
and
jae
adc
lods
and
mov
test
sub
mov
pushf
sbb
into
je
lock
inc
ljmp
mov
add
mov
mov
cmpb
lahf
imul
xchg
add
shll
dec
popa
stos
cmpsl
nop
insb
enter
iret
push
push
fwait
sbb
icebp
pop
mov
and
mov
cmp
cmpsb
cmp
in
mov
fsubp
dec
mov
mov
cmp
cmc
xchg
add
ja
inc
and
lock
pop
jbe
inc
jle
dec
dec
xor
dec
es
shrl
data16
pop
imul
fwait
scas
cmp
fdivp
push
cmc
imul
icebp
into
jle
pop
dec
sbb
out
out
leave
xor
and
adc
xchg
dec
pop
mov
rcrl
cs
mov
test
insl
inc
fidivrl
mov
mov
mov
pop
loopne
mov
push
add
jae
daa
ljmp
ja
add
pop
movsl
in
sbb
dec
push
jl
ljmp
adc
jne
pop
inc
xchg
sbbl
sbb
mulb
fbstp
lods
pop
pop
repz
lahf
ss
rol
rorl
inc
inc
fistpll
mov
fstpt
shrb
mov
insl
clc
sahf
fisubl
movsb
jo
mov
xor
fildll
inc
sub
cli
and
add
xor
and
mov
jb
mov
push
ret
ret
add
jb
mov
jge
sub
sub
pop
jo
js
xor
pop
outsl
cmp
cli
pop
scas
and
cmp
adc
je
mov
std
inc
cmp
push
inc
push
mov
push
mov
jb
xor
scas
fdivl
idivb
dec
dec
jg
in
jp
mov
cmp
clc
pop
add
jge
jecxz
rcrl
popa
aam
mov
aam
sbb
in
dec
and
mov
pop
push
in
sbb
pop
hlt
lret
pop
pop
sub
lods
jl
test
adc
dec
pop
add
shll
pushf
jmp
test
xor
sbb
out
pop
push
lods
in
mov
hlt
push
or
es
fidivs
cmp
dec
lret
shlb
mov
pusha
adc
int
dec
les
xchg
xor
int
push
mov
fistl
scas
fmull
add
jp
hlt
mov
push
sbb
jecxz
lahf
test
jno
pop
jns
push
or
test
aaa
ja
cld
and
repz
sbb
aam
arpl
mov
outsl
dec
loope
aad
inc
test
leave
mov
pop
aam
and
mov
adc
push
cmpsl
adc
je
bsr
out
addr16
adcb
shlb
dec
loope
mov
xchg
les
cmpsb
pop
adc
or
or
and
xchg
cmp
fcompl
aad
xor
mov
sbb
je
xor
cld
fwait
mov
fs
cli
xchg
and
mov
push
lret
in
call
lcall
xor
push
out
add
pushf
push
and
stos
pop
sahf
fsub
pop
adc
mov
sti
int3
pop
cmpb
dec
mov
aad
push
sarb
shlb
jne
cmp
jb
addr16
lahf
push
shl
adc
mov
lea
dec
nop
dec
cmp
cmpsb
idiv
loop
movsl
sub
pop
jnp
inc
xchg
sbb
adcb
xor
std
test
xchg
testl
es
mov
xor
cmc
pop
cmpsl
mov
jg
push
pop
jl
int3
shll
mov
in
outsl
ljmp
pop
in
stos
mov
mov
jns
pop
loopne
push
idivb
pop
pop
les
lock
sarl
xchg
sub
addl
rcrl
out
popl
andl
clc
cmpsl
xchg
aas
fidivrs
iret
dec
ret
aam
loop
int3
dec
dec
adc
in
mov
es
and
outsl
out
mov
or
insb
ljmp
xor
stos
and
fidivrs
sbb
mov
mov
popl
ja
lret
sbb
pop
mov
imul
and
mov
xchg
lds
sti
jns
aad
lea
xor
mov
dec
int3
jmp
xor
xchg
lcall
gs
lcall
cmp
xchg
sub
pop
sub
rclb
arpl
dec
add
xchg
jg
push
adc
mov
jne
and
inc
xchg
push
scas
test
cmp
sbb
insl
pop
sub
push
and
sbb
mov
aam
mov
leave
out
pop
dec
sbb
jmp
dec
test
mov
inc
fldt
xor
push
in
push
mov
fstp
int
jp
fisubrl
push
mov
push
jnp
fstps
jecxz
icebp
xor
pusha
notl
out
test
cli
sbb
or
sub
xchg
mov
xor
jns
fs
sbb
outsb
js
or
imul
sbb
call
push
movsl
push
and
fiadds
and
push
outsb
cli
or
test
jbe
int
mov
mov
lods
ret
cmp
jecxz
adc
out
push
mov
adc
xor
testb
sub
push
inc
gs
mov
pop
gs
push
lcall
lds
jle
xlat
cmp
outsl
leave
adc
popa
lret
testl
push
mov
pop
int
scas
sub
outsl
addr16
popa
stos
mov
outsb
inc
andb
push
lcall
in
subb
and
rolb
outsb
cmp
mov
icebp
lods
sti
mov
sahf
pop
jmp
packuswb
and
enter
fsub
inc
bound
push
jbe
jo
enter
fstps
out
lret
lcall
push
mov
cmp
pop
jae
aad
xor
cmp
mov
popa
mov
test
pop
mov
and
mov
movsb
in
and
pop
push
fcompl
in
stos
leave
pop
cmp
inc
dec
data16
das
inc
mov
xchg
sub
xchg
and
push
scas
cld
jbe
outsb
push
mov
sbb
ficoms
pop
pop
sbb
ss
add
mov
mov
mov
xor
adc
adcb
jecxz
and
sub
enter
int
xchg
js
repnz
int3
rclb
mov
pop
lahf
or
xor
dec
outsb
leave
sub
push
sbb
and
cld
loope
repz
leave
stos
sub
push
arpl
xchg
pop
pop
out
aad
mov
idivl
mov
notb
das
imul
leave
mov
jno
push
movsb
repnz
xchg
add
add
inc
hlt
jg
or
cmp
imul
xor
call
xchg
pop
cmp
es
and
sub
xor
sbb
xchg
push
shll
call
inc
and
fcom
push
or
cwtl
dec
cmp
insl
or
pushf
rcll
sbb
lods
and
in
lret
cmpsl
out
repnz
mov
lods
mov
sub
sbb
push
out
dec
sub
mov
int3
ret
rorl
cli
pop
cmpsl
enter
sbbl
jp
or
in
iret
mov
cli
sbb
shrb
mov
xchg
pop
filds
and
or
ss
out
xchg
adc
ss
ret
push
popf
scas
and
jg
call
aas
sbb
shrb
inc
movsl
fadd
cmp
mov
push
push
and
lds
testb
cwtl
push
enter
pop
data16
pop
xchg
jbe
pop
jns
inc
loop
and
jg
ds
push
pop
pop
lds
xor
in
mov
mov
clc
imul
test
push
push
stc
inc
data16
icebp
iret
push
pushf
xor
mov
fsts
pop
adc
pop
mov
push
popf
adc
decl
mov
mov
mov
rorl
dec
lcall
mov
jne
mov
adc
enter
shr
adc
sub
iret
jo
cld
int
push
add
push
stos
scas
js
add
loopne
fbstp
push
inc
out
rcrl
into
xchg
xchg
adc
dec
repnz
addr16
scas
lret
mov
hlt
shrl
jns
nop
insl
push
xchg
adc
push
fxch
push
ret
push
fs
icebp
dec
cmpsb
push
and
cmp
clc
rol
ds
pop
push
or
loope
adc
fs
sti
int3
inc
insb
scas
jmp
mov
xchg
mov
loope
adc
test
cld
ds
xor
stos
mov
sub
xor
negl
sub
loopne
cmpsl
fiadds
mov
mov
rcr
xlat
adc
cli
add
sbb
adc
or
arpl
xlat
ljmp
scas
pop
lds
sub
je
or
lahf
mov
pop
movsb
jns
repz
loopne
sbb
idivl
jnp
es
adc
mov
xchg
out
xchg
dec
push
inc
aas
movsb
add
insl
scas
inc
ret
sub
xor
sti
jg
dec
inc
icebp
fwait
cmp
jb
xchg
mov
or
addr16
popf
cwtl
inc
xchg
mov
andb
fsubl
mov
push
pop
in
inc
and
out
mov
in
mov
stos
jmp
xor
adc
iret
fstpt
pop
sbb
negb
cmp
setp
daa
mov
cld
push
inc
sbb
movsl
lock
mov
mov
cmp
les
sbb
xchg
sti
xchg
sbb
es
jp
test
mov
idivb
add
in
mov
mov
push
xor
sbb
out
inc
fsubrs
add
cmp
fisubs
sbb
pushl
and
pop
out
and
xor
lods
movsl
sub
repnz
dec
fidivrl
push
mov
jl
in
mov
mov
imul
xor
mov
aad
fildll
std
dec
stos
lahf
xor
add
fldl
aaa
add
addr16
out
or
outsb
hlt
add
mov
addb
push
dec
lcall
push
lods
test
xor
ss
fdivrp
adc
int3
sbb
jmp
negb
cmp
push
in
lcall
pusha
in
or
mov
and
add
cli
xchg
push
fsubl
clc
sub
push
adc
sti
push
hlt
into
imul
jne
ret
push
js
addr16
faddl
data16
adc
sub
push
adc
or
enter
loop
or
test
sbb
lods
mov
adc
inc
iret
adc
popa
addl
push
out
sub
enter
xchg
ljmp
data16
mov
xlat
insb
gs
notl
cmp
pop
push
or
daa
sub
imul
cmp
mov
rol
pop
repz
push
aas
mov
and
pop
dec
out
icebp
push
cmp
movsl
dec
push
xor
subl
loop
cmp
stos
movsl
dec
jmp
inc
push
or
inc
ljmp
jle
pushf
and
add
cmp
push
mov
in
fs
cwtl
or
pop
rcrb
jl
mov
ret
cltd
cwtl
jmp
adc
lock
shl
dec
dec
pop
jcxz
jne
cmp
push
adc
movhps
leave
repnz
add
dec
dec
fwait
adcl
jmp
lret
sub
adc
mov
daa
inc
jbe
repnz
out
sub
xchg
sbbl
mov
outsb
movsb
and
mov
rclb
dec
mov
push
es
out
scas
inc
mov
fs
mov
add
ljmp
xorl
and
mov
cmp
rorl
jmp
xchg
in
ja
cmp
add
pop
call
into
bound
sub
shrl
fnop
jnp
movsb
nop
lds
cmp
inc
add
mov
jp
pop
lret
lret
xchg
adc
stos
ljmp
jmp
mov
popa
xor
sub
cmpsl
xor
inc
in
xchg
pop
cmp
mov
out
movb
sarb
pop
repnz
mov
scas
adc
pop
lock
lods
pop
inc
fcmovnb
imul
cli
imul
insl
mov
in
stos
cmc
jge
inc
cmp
inc
or
mov
mov
test
and
fstl
or
and
stos
incl
lea
cmp
xchg
shlb
jbe
or
lds
jns
or
in
push
test
lcall
sahf
sbb
fidivl
sbb
lret
push
push
mov
mov
xor
addr16
jle
mov
pop
mov
popf
jo
in
adc
push
mull
in
popf
out
mov
pop
mov
mov
outsb
ljmp
add
inc
imul
mov
pushf
push
jns
js
mov
mov
orb
pop
mov
sbb
push
mov
pop
mull
sub
push
mov
push
loop
sub
jmp
sub
mov
cmp
pop
mov
push
ljmp
inc
push
mov
cmp
into
push
pop
mov
int
sbb
insb
mov
ret
lea
aad
enter
pop
sub
dec
mov
pusha
ss
mov
in
test
push
sbb
inc
mov
add
in
add
sbb
cwtl
mov
pop
rcr
sub
cld
popl
repnz
int3
sahf
fnstcw
test
sub
or
lret
lods
mov
and
or
data16
das
xchg
xchg
lret
dec
sub
pop
pop
mov
dec
cmp
subl
mov
add
xor
mov
cmpsl
into
lds
add
mov
mov
imul
loopne
xlat
test
popa
or
clc
mov
cld
sub
push
xchg
xchg
aas
addb
pop
imul
cs
or
cli
in
jbe
pop
pop
jbe
mov
xchg
cmpsl
ds
mov
mov
mov
and
lret
in
fisubs
jp
popa
xor
and
sbb
int
fwait
lcall
mov
jge
jo
mov
push
xor
ret
insl
ret
outsl
or
add
add
pop
call
dec
popa
xor
or
test
sbb
and
sbb
and
and
dec
rcl
movsb
mov
pop
cmp
mov
adc
ja
pushf
xor
mov
dec
pusha
cmp
gs
push
adc
psubusw
cs
lcall
and
sahf
push
pop
scas
out
shl
mov
mov
test
or
xor
iret
aas
mov
mov
leave
test
testb
cwtl
mov
fs
jnp
and
xorps
insl
test
imul
insl
aad
and
ja,pn
into
sbbb
jg
movsl
jge
mov
jb
dec
xchg
sub
jge
add
dec
scas
jae
das
movsl
iret
shrb
or
cmpsl
mov
mov
add
jmp
scas
push
mov
mov
jle
clc
scas
ret
adc
and
push
cmp
mov
mov
fisubrl
pop
push
adc
aam
dec
in
mov
and
sub
loopne
sub
push
in
test
sub
jge
mov
mov
push
and
mov
jbe
jne
subb
rclb
mov
movsl
lea
lahf
sti
std
inc
fsubr
add
mov
scas
xorl
rcr
in
and
aaa
loopne
stc
loop
sub
scas
ret
inc
jbe
in
mov
cmp
out
mov
mov
pop
imul
and
cs
stos
iret
cld
pop
jo
adc
popf
inc
iret
ss
sub
mov
sbb
pop
and
push
and
into
gs
push
pop
std
loopne
fwait
adc
into
enter
inc
leave
xor
data16
dec
xor
fcmovu
es
mov
cs
xor
test
xchg
add
and
xor
add
aad
pop
in
and
pop
jne
test
mov
pop
sub
daa
mov
cmp
hlt
jae
lahf
jle
mov
push
pop
xlat
mov
int
adc
mov
mov
ret
push
out
add
pop
js
cli
ja
xchg
std
rol
jns
push
mov
cltd
or
xchg
push
call
and
xor
inc
call
shlb
pop
cmp
inc
xlat
std
mov
mov
dec
rolb
scas
dec
repz
outsb
call
or
icebp
stos
insb
dec
pusha
push
loop
ja
pushf
xor
test
xchg
js
mov
fisttpl
push
push
xchg
pop
inc
stc
popf
xor
mov
in
xor
sub
or
or
sub
stc
fnsave
jnp
les
sbb
lock
jl
rolb
and
stc
add
inc
and
jae
movsl
add
test
push
movups
aam
sub
insl
orl
sbbb
sub
movsl
ficoms
loop
ljmp
pop
or
je
jg
and
push
mov
cmp
popf
iret
mov
icebp
out
jmp
lea
dec
dec
loopne
xchg
xchg
popa
cli
test
mov
test
cmp
pop
mov
cwtl
shlb
mov
addl
lds
and
rol
int
and
xor
cs
cmpsl
inc
mov
inc
mov
push
sahf
scas
or
mov
and
mov
mov
mov
add
in
or
xor
mov
jae
in
xchg
ja
inc
test
mov
int
cmp
mov
test
mov
xor
adc
mov
js
pushf
test
fbstp
jg
sub
outsl
jp
xor
adc
lds
mov
orb
xchg
in
or
jne
inc
mov
mov
or
fsts
out
imul
xchg
rclb
movsb
xor
push
mov
mov
fildl
xchg
les
inc
insl
lods
push
in
or
outsl
mov
xor
adcb
inc
and
sarl
dec
jle
loop
inc
out
scas
inc
insl
xor
xor
fcmovbe
sbb
test
imul
iret
in
out
cmp
mov
adc
pop
inc
stos
jge
test
jnp
movsl
lret
or
jle
push
loope
xchg
add
scas
xlat
std
sbbl
clc
stc
pusha
xor
stos
xchg
mov
movsb
out
sub
out
mov
cltd
mov
jecxz
in
sbb
jno
add
or
push
lret
scas
lds
in
xchg
push
lret
adc
cmp
scas
inc
mov
adc
aaa
rcrl
cmp
lds
stos
jmp
mov
mov
fwait
xor
mov
andl
inc
fwait
mov
or
xchg
sub
pop
and
pop
lret
lds
stos
mov
stos
fwait
xchg
aas
adc
xor
ret
mov
xlat
jno
lcall
and
insb
sbb
movsl
icebp
stc
jae
inc
cmp
xchg
test
mov
jo
das
shll
test
arpl
xor
add
das
shll
inc
imul
pop
das
adc
lret
lahf
push
popf
or
movsl
out
shll
xchg
test
push
stc
out
stc
fimull
pop
andl
add
out
subl
xor
aam
add
ljmp
cmp
ja
sahf
cwtl
xor
out
xchg
fwait
xor
outsl
mov
int3
adc
push
rcl
xchg
xlat
mov
jl
les
and
jo
mov
test
repz
inc
ret
jbe
lahf
inc
cmp
sub
sbb
dec
pop
sbb
cld
in
pushl
imul
ja
mov
lods
in
adcl
jo
jg
repz
push
add
add
js
ficoml
fucom
sub
or
ss
rcrb
jmp
and
xchg
sbb
jp
and
out
push
mov
inc
jmp
jg
xor
xchg
push
jecxz
pushf
push
dec
movsl
into
test
and
pop
lret
sti
xchg
shrl
jo
lock
push
imul
lahf
imul
ret
es
mov
lock
scas
pop
adc
test
dec
and
adc
fwait
xor
sub
in
out
vmovlpd
xor
add
movsb
push
les
fstps
inc
jmp
cmp
loope
sbb
or
pop
fmul
fcoml
push
push
in
sbb
inc
into
sub
push
fistpl
jmp
cli
les
and
pop
adc
in
mov
push
adc
jns
xor
outsb
cltd
or
push
dec
js,pt
aad
ficompl
int3
orl
cmp
in
shl
inc
push
fwait
lret
lock
cwtl
cli
pushf
mov
addr16
rcll
shrb
stos
fdiv
mov
add
fwait
push
or
mov
movsl
inc
jmp
cwtl
das
in
dec
cmp
mov
mov
test
xorb
cmp
fcomi
mov
icebp
jbe
pop
clc
jns
dec
dec
xchg
xchg
dec
mov
or
cmpsl
or
push
cmp
sub
inc
xlat
ljmp
sahf
dec
lret
cld
outsl
and
jge
hlt
out
mov
nop
aad
shlb
push
cltd
repz
push
outsl
cmc
inc
into
push
jmp
push
xlat
fdivs
mov
jne
mov
xchg
arpl
jle
mov
lahf
mov
xchg
sub
mov
fs
jno
xor
jno
jl
dec
xchg
je
push
ss
xchg
xorb
psubq
lods
pop
loop
popa
inc
sbb
sbb
sub
jecxz
out
dec
xlat
sahf
clc
pop
inc
nop
and
jg
js
adc
cld
jg
call
pop
and
push
jbe
cmp
in
mov
fsts
and
sbb
sbb
inc
stos
mov
ret
mov
cli
scas
mov
fdivrl
cli
iret
ss
rcll
push
je
dec
cwtl
inc
in
adc
ss
insl
push
test
mov
jmp
bound
test
mov
jl
sbb
xor
cwtl
push
into
loope
add
push
pop
scas
call
daa
arpl
push
jecxz
pop
sbbb
shlb
jp
shlb
loopne
fildl
adc
notb
cmp
cmp
test
addr16
mov
movsb
in
mov
add
or
into
fstl
xor
lock
xor
push
fxch
fisttpll
and
push
outsb
inc
add
stc
inc
mov
subb
add
jne
push
movd
sub
icebp
dec
and
and
loop
mov
jl
jp
mov
lds
mov
and
lahf
jmp
xchg
push
pop
pop
pop
adc
notl
std
cmpsb
fdiv
in
fldenv
shlb
push
ret
jae
cmpsl
rcll
push
idiv
jb
add
fwait
fs
out
pop
push
inc
mov
gs
push
test
push
leave
cs
pop
mov
insb
test
lahf
test
sti
dec
je
in
dec
in
sbb
insl
sbb
in
pop
daa
ljmp
jae
jo
insb
sub
push
lahf
in
in
adc
bound
fstps
mov
mov
sub
decl
cmp
sbbb
dec
cmpsb
test
fmull
orl
gs
je
rolb
pop
cmp
test
mov
fisubl
sbb
inc
mov
xor
popf
cmpsb
nop
in
aad
xchg
popf
jmp
xchg
sub
lahf
mov
dec
out
jb
jbe
cltd
adc
ds
mov
lea
add
stc
js
insl
sbb
push
fbld
xor
ss
pop
test
mov
mov
imul
mov
fisubrl
pop
jg
mov
std
sbb
cmp
fisttps
fstl
aas
fiadds
sub
in
mov
push
in
lds
push
ss
leave
cli
popa
inc
xlat
push
or
adc
sbb
and
ja
lock
hlt
mov
mov
jp
xlat
mov
pop
repz
xor
out
jnp
sbb
aad
mov
repz
hlt
mov
mov
lock
test
scas
push
out
pop
xorb
sbb
mov
cmp
ret
nop
ja
inc
pop
scas
cmp
jae
dec
mov
jmp
sub
xchg
ret
jp
jle
jle
mov
or
fwait
pop
pushf
scas
sbb
out
jno
inc
fs
ss
jo
out
sbb
cmp
insb
sbb
xchg
or
es
out
inc
or
enter
leave
adcl
movsb
rcrl
dec
dec
in
push
mov
add
ret
iret
loope
add
push
inc
shrl
inc
mov
stos
xchg
iret
sbb
lods
dec
lods
dec
fistpl
mov
pop
rcrl
mov
push
leave
sbb
into
mov
pop
shrb
push
sub
fcmovbe
lock
push
aam
adc
orb
fcoms
cmovb
dec
mov
adc
jb
adc
fadds
or
pop
sbbb
jg
subl
pop
test
add
jnp
and
pop
mov
loop
fldenv
ljmp
je
sbb
push
ffreep
je
push
mov
sahf
pop
scas
ds
pop
jbe
loop
pusha
adc
repz
test
bound
mov
mov
mov
adc
jbe
jmp
popf
mov
jl
jb
cld
sub
popa
or
pop
addr16
or
and
mov
jg
les
sub
pop
arpl
jns
pop
add
lods
inc
push
pop
out
or
jo
movsb
mov
sbbb
xchg
jns
fs
arpl
pop
test
pushf
sub
lahf
cli
dec
ret
les
xor
outsl
out
test
mov
test
pop
subl
xor
mov
into
or
cs
inc
add
dec
cmp
push
inc
mov
lcall
sub
popf
mov
rorb
cmp
add
iret
fnstenv
cld
mov
and
pushf
adc
add
xchg
push
sbb
data16
cmpl
cs
outsl
lret
adc
pop
jns
lods
test
repz
adc
insl
fwait
mov
xor
test
mov
mov
cmpsl
mov
dec
dec
xor
rcrb
pop
test
dec
in
lret
push
adc
mov
fldenv
mov
and
iret
int
mull
inc
push
and
test
mov
cmp
dec
push
mov
stos
mov
sub
adc
mov
push
inc
cmp
hlt
icebp
push
in
push
xchg
adcb
je
xchg
lods
mov
ja
push
push
test
shrl
fwait
mov
cmp
imul
inc
push
ja
imulb
rcll
xor
enter
xor
push
pop
jbe
in
sub
add
lcall
jne
mov
cwtl
bound
fisubrl
inc
mov
xchg
sub
enter
add
jbe
imul
xchg
adc
inc
inc
pop
lock
inc
test
jae
lock
ficoml
cmp
rcll
movsl
sub
xbegin
xchg
push
popf
loope
or
rol
in
repnz
lock
jmp
gs
fldlg2
stos
repnz
cld
dec
mull
fnstcw
jg
pop
push
lods
jbe
pop
pop
lods
sbb
mov
mov
in
idivl
xlat
add
enter
sbb
xor
in
orb
push
dec
out
lcall
mov
lret
pop
lcall
xorl
in
popa
ret
scas
sbb
jno
std
cmpsl
loope,pt
cltd
sarb
cwtl
dec
push
stos
repz
les
mov
mov
lods
je
clc
fdivl
push
sarb
cmc
xchg
into
incb
add
dec
flds
test
test
dec
int
mull
inc
push
mov
sbbl
enter
pushf
jg
mov
sub
add
inc
das
arpl
sbb
cmp
xor
fxch
mov
outsl
pop
popa
lea
xchg
js
stc
xchg
cmc
xor
lcall
ja
cld
xor
out
movsb
xchg
sub
mov
sbb
popa
add
iret
gs
push
addr16
je
aam
arpl
adc
adc
int
lcall
inc
cmp
push
mov
mov
mov
xor
sar
dec
sub
sbb
xor
pusha
cmp
subl
dec
mov
dec
cmp
mov
push
xchg
sub
mov
sahf
xor
dec
outsl
out
dec
or
add
add
mov
jmp
lock
jl
pop
repnz
jp,pt
ja
pop
sub
and
pusha
mov
cmc
js
mov
mov
imul
ret
in
xor
insl
call
or
cmp
loop
inc
sbb
dec
mov
sub
shl
cltd
jns
or
dec
xor
sub
addr16
inc
lods
and
xor
in
and
inc
ljmp
out
popf
insl
in
or
into
adc
insb
sbb
test
adc
les
lods
inc
xchg
xor
xchg
cmp
lret
jmp
jp
pop
rorb
jge
ja
rorb
ret
lret
cmp
jb
xor
adc
mov
inc
bndstx
cmp
out
outsl
sbb
in
pop
pop
or
cmc
jo
adcl
xchg
es
stos
mov
sub
pushf
jg
pop
arpl
je
cld
push
out
mov
mov
loope
jno
call
cmp
ret
cmp
imul
out
mov
inc
bound
xor
dec
adc
insb
push
mov
jle
mov
jbe
or
in
dec
pop
cwtl
jnp
dec
icebp
push
dec
loop
jecxz
xchg
push
fstpt
fldcw
mov
jecxz
je
mov
icebp
push
mov
adc
mov
insl
les
data16
testl
rcl
and
pop
inc
negl
sub
ds
aam
mov
imul
inc
pop
stos
hlt
add
xor
cmpsl
cmp
mov
sbb
fldz
les
inc
fs
jne
mov
cmp
pop
mov
gs
sbb
mov
xor
jno
push
mov
lcall
sbb
inc
push
sub
movsl
icebp
shl
inc
mov
adcb
and
mov
inc
lret
aam
aaa
test
jno
pop
jo
xchg
mulb
or
dec
test
pop
push
loopne
dec
mov
inc
or
repnz
in
sti
adc
icebp
pop
std
push
add
cltd
insb
int
adc
outsl
dec
lea
jne
fimuls
repz
mov
fsts
popf
xchg
push
cld
rclb
movsl
imul
mov
inc
cwtl
fnstenv
mov
fmull
or
sbbl
mov
mov
fstl
shlb
adc
in
popa
arpl
dec
leave
lock
iret
jbe
xchg
dec
xor
pop
add
and
or
pop
mov
ljmp
pop
add
stos
lcall
lods
mov
mov
xchg
inc
sbb
push
ret
fcomi
cmpsb
in
std
lods
cmp
mov
data16
pop
mov
lods
push
insl
pusha
mov
scas
jnp
or
loopne
and
ljmp
adc
test
mov
or
sbb
pusha
cmp
fwait
pop
inc
arpl
xor
outsl
push
iret
and
or
xor
mov
mov
push
pop
lcall
std
push
xchg
mov
sbb
push
xchg
add
mov
push
fwait
rorb
out
mov
cmp
mov
mov
sti
das
inc
sbb
cmp
out
or
cli
lret
outsb
jl
enter
inc
mov
inc
inc
loope
mov
cmp
paddsb
in
movsl
or
and
cmp
inc
int3
xor
popa
push
xchg
scas
ss
out
pop
ret
sub
mov
dec
xor
cltd
call
mov
or
bound
fwait
ljmp
xor
outsb
dec
cmp
test
imul
rolb
dec
add
and
out
or
xor
inc
push
hlt
into
aaa
xchg
es
push
dec
dec
mov
mov
gs
out
xchg
inc
arpl
mov
mov
fildl
push
sub
mov
outsl
sti
mov
test
lcall
cmpsb
dec
int3
xchg
cmp
loope
sub
leave
fistpll
sub
jb
cs
add
lret
xchg
aaa
test
arpl
neg
popa
mov
aaa
add
shll
dec
fcomip
aas
pop
jno
shll
sbb
flds
adc
fdivl
inc
jecxz
out
fcoml
jp
xor
shlb
enter
xor
inc
sub
repnz
in
stos
jmp
inc
inc
and
negl
adc
insl
in
xchg
mov
lret
pop
cmp
mov
pop
dec
lock
fsubrs
pop
sub
pop
mov
push
call
push
mov
adc
mov
repnz
xor
mov
test
mov
lcall
cld
je
cmp
cmp
outsb
lea
push
ret
fcomi
push
pop
cmp
fistpll
mov
pop
mov
push
mov
fdivs
pop
popf
or
mov
nop
lods
mov
mov
dec
xchg
push
mov
sbb
insb
push
xchg
mov
test
xchg
xor
cmp
inc
dec
jbe
fnstenv
cmp
inc
pop
cmc
mov
or
xchg
jge
xchg
sub
mov
cmp
rorl
and
pop
insl
push
pusha
daa
jge
jb
xor
mov
cmp
fs
aad
ljmp
scas
int
loopne
mov
fsubl
mov
scas
push
xor
xor
xchg
sub
dec
pop
push
pop
out
jmp
dec
adc
mov
mulb
test
inc
pop
dec
fcomi
jno
daa
mov
xor
add
jecxz
ret
xor
ja
mov
subl
or
push
andb
xor
add
loopne
movsl
or
jnp
push
and
push
xchg
ss
fdivrl
test
aad
das
call
subl
sbb
jl
dec
scas
or
xchg
mov
sarl
aad
mov
inc
inc
aas
dec
je
lret
int
dec
and
push
shrl
jbe
mov
fldl
mov
jl
mov
mov
pop
and
out
fwait
inc
jbe
dec
push
jmp
inc
dec
cmp
in
mov
add
mov
lock
mov
mov
ret
or
sub
outsb
pop
xor
mov
dec
cmp
imul
mov
outsb
jo
ret
xor
xchg
jmp
inc
add
cmp
xchg
mov
push
cmp
fnstenv
lahf
add
imul
in
xor
repz
mov
roll
mov
dec
mov
pop
pop
pusha
xchg
shll
inc
pop
dec
inc
dec
cmp
stc
add
mul
jne
std
xchg
dec
ficoml
and
repz
inc
push
and
mov
lcall
leave
jbe
add
movlps
stos
cmp
or
sub
sub
lods
aam
jecxz
repnz
bound
test
cltd
adc
loope
mov
mov
mov
and
and
jle
mov
idiv
adc
mov
sub
bound
imul
pop
scas
jb
inc
mov
fwait
xor
out
rclw
roll
adc
lcall
and
pop
push
lret
faddl
lcall
sbb
xor
xchg
xchg
fs
sbb
test
subl
xchg
and
loope
mov
mov
mov
fcomip
mov
fsubrl
scas
ds
adc
and
fs
cmp
mov
cmp
mov
cwtl
and
mov
lock
add
push
xchg
es
into
mov
mov
out
push
jae
out
cmp
nop
mov
sti
jge
pop
cmc
in
ss
js
std
or
mov
outsb
jl
jnp
sti
and
mov
push
mov
or
jne
dec
fldt
sbb
in
icebp
aam
sub
jmp
clc
jg
aas
scas
adc
adc
leave
sarl
loop
jbe
cmpsb
shr
loopne
jl
jae,pt
or
jl
or
in
mov
inc
sub
out
mov
aaa
push
lods
push
jno
pushf
inc
sar
stos
mov
inc
arpl
mov
lds
inc
in
aam
push
mov
ret
ret
sub
sarl
sbb
loope
mov
out
and
jno
into
push
mov
cmp
lock
and
sub
mov
jmp
mov
mov
insl
je
pushf
cmp
lods
sbb
aad
add
ret
add
cmp
mov
dec
pop
aam
ja
call
push
call
cmp
cmpsl
movsb
aas
push
lea
push
mov
pop
cwtl
pop
pop
fisttps
les
decl
out
xlat
xchg
cli
shlb
dec
dec
sti
stos
js
xor
rol
sbb
pusha
div
jmp
ds
insb
daa
pop
loopne
je
xor
lcall
in
aad
mov
add
in
inc
inc
loope
inc
imul
dec
or
shl
lret
pop
loopne
pop
fbstp
push
repnz
cs
test
ss
pop
daa
jb
pop
jno
in
and
sbb
ret
sbb
add
and
push
jmp
sub
inc
icebp
hlt
shrb
cmp
fdivr
cmpsb
movsl
andb
test
lahf
pop
push
sbb
xchg
mov
inc
rolb
rclb
push
xor
test
dec
cmpsl
xlat
cmpsl
mov
push
cmp
test
cld
push
add
add
adc
mov
dec
xchg
outsb
int
sub
push
mov
in
add
jmp
test
fsubl
add
or
fwait
mov
pop
push
add
pop
jmp
mov
push
add
cmp
xor
lcall
mov
or
out
inc
fnstsw
jl
fbstp
mov
jne
cmp
inc
pop
int3
xor
aas
in
push
sbb
xor
stc
popf
push
cmpsl
cmp
aad
movsl
mov
cmpb
push
in
add
jno
jmp
scas
filds
cmc
dec
jns
lea
cmc
test
cmp
jns
inc
sbb
xor
xor
mov
popf
pop
insl
sub
xchg
in
xor
dec
call
or
and
mov
hlt
and
mov
mov
jmp
call
jns
sahf
xor
fiaddl
fldl
test
jp
das
ret
jbe
mov
mov
repnz
and
xchg
fcoml
add
data16
mov
push
subb
xchg
scas
mov
mov
nop
push
xchg
mov
sbbb
aaa
push
shlb
inc
lods
aam
inc
xor
or
push
sub
mov
out
sar
xor
ja
addr16
sbb
je
daa
sub
loop
lds
mov
cmp
popf
adc
xchg
pop
cmp
push
fsubs
iret
adc
incb
in
cld
push
inc
mov
pop
sub
jl
jge
mov
ja
in
mov
mov
enter
or
lahf
jge
xchg
cmp
xor
push
out
jmp
push
mov
sbb
push
jge
stos
and
int
out
sub
xor
ficoml
andl
mov
cld
je
push
out
lcall
call
fistps
loop
std
popf
mov
adc
adc
outsl
clc
adc
andb
jmp
ds
aam
cmpsb
nop
dec
sub
bound
mov
pop
cwtl
in
xchg
jnp
pop
inc
iret
xor
add
es
jmp
add
daa
push
xchg
push
cmovge
rorb
xlat
push
sahf
mov
and
mov
mov
clc
xchg
jnp
xchg
rcr
sub
aaa
jmp
inc
inc
aas
lock
repnz
pushf
mov
or
xor
adc
aaa
nop
mov
cmp
push
lahf
shll
sbb
imul
and
mov
xchg
jbe
and
and
mov
xor
cmp
std
js
push
inc
mov
test
lea
push
and
pop
fbld
fdivrl
clc
xchg
mov
dec
dec
dec
out
clc
adc
inc
push
jb
dec
pop
inc
bound
outsb
jg
gs
add
enter
in
in
stos
jmp
xchg
xchg
subl
cmp
cmpsl
sbb
push
out
rcrl
jbe
icebp
ja
push
jae
cmc
inc
dec
mov
jg
in
cmp
or
push
iret
data16
lcall
or
loop
add
int3
fidivrs
lds
push
jo
adc
test
jne
cmp
rcrb
ja
push
add
cwtl
test
imul
scas
ret
dec
insb
inc
cli
in
mov
lret
push
pop
repnz
pop
push
loop
roll
jmp
cmp
ss
imull
lods
clc
jmp
outsl
shll
cmpl
mov
inc
mov
fstl
and
call
push
ffree
jge
sti
cmp
icebp
or
add
outsl
cltd
xchg
jp
insb
out
mov
popa
fldl2t
jb
rcrl
arpl
fisttpl
or
mov
stc
jge
mov
push
cli
fildl
js
push
cmp
pushf
sbb
add
loope
decl
mov
dec
add
mov
jnp
out
je
mov
xor
fnsave
aaa
xchg
fcomps
cltd
in
push
ss
or
inc
movsb
push
dec
jb
decl
stos
jmp
test
sub
js
sbb
add
dec
lahf
dec
dec
xchg
mov
lds
arpl
loopne
in
pop
sbb
xlat
repnz
adc
repz
xchg
cmp
clc
test
pusha
fidivl
out
in
ficomps
aaa
pushf
jp
add
push
mov
xchg
jmp
push
mov
movsl
mov
jae
jnp
xchg
mov
hlt
aam
pop
jg
imul
mov
cmp
aam
mov
daa
fs
cmp
lock
xchg
rclb
adc
jle
shrb
cwtl
or
jecxz
jbe
or
subb
sti
loop
xor
push
cmp
insb
ss
out
test
test
cmp
setae
lds
sbbl
pop
cwtl
lret
add
push
jmp
gs
jo
dec
or
subb
mov
xchg
add
cld
xchg
adc
sbbl
gs
cs
dec
push
sub
dec
inc
in
inc
sbb
xor
ret
jnp
xchg
cwtl
les
aaa
cmpsb
leave
imul
pop
add
test
sbb
xor
sub
pop
ret
jp
add
fstpl
sub
pop
adc
mov
adc
ss
fs
icebp
xchg
sub
test
leave
pop
lret
lret
clc
scas
inc
dec
and
inc
cwtl
mov
add
sub
iret
sahf
aam
lods
pop
in
leave
ja
mov
or
popf
xchg
dec
lds
add
push
out
in
dec
inc
fistpll
jno
push
mov
cmp
gs
inc
iret
rcrl
imul
push
mov
jge
sub
xchg
loope
nop
aaa
repz
ds
mov
test
into
sbb
xchg
out
add
mov
sub
mov
sbb
jb
popa
imul
fwait
cli
cmp
adc
repz
adc
mov
mov
cmp
cmpb
out
add
dec
lea
add
dec
fnstcw
and
mov
jg
mov
add
inc
pop
and
popf
std
xchg
iret
inc
pushf
loope
outsl
adc
or
sub
lea
mov
movsl
cmp
enter
sub
mov
or
cmpsl
or
shrb
fs
arpl
inc
mov
dec
faddp
ja
adc
das
popf
jb
xor
mov
in
xor
push
cmp
shr
nop
imul
pop
shrb
cmp
aas
and
ss
mov
jl
popf
lods
stos
leave
sti
fwait
imul
mov
andl
lock
or
and
out
dec
int3
sub
fs
lds
dec
dec
nop
cs
nop
cmp
mov
arpl
das
pop
mov
aad
das
inc
add
pop
das
cmpsl
cmp
out
xchg
sub
sahf
push
mov
test
xchg
mov
or
push
mov
andl
pop
xor
or
and
cmp
pop
sub
xchg
push
mov
jmp
js
xor
cli
add
sub
lods
adc
fadds
cwtl
lock
stos
add
lcall
outsl
fstpl
ret
mov
dec
xchg
cmp
fs
or
or
push
pushf
xlat
cmc
shll
and
xchg
clc
mov
jle
jle
cwtl
scas
andl
cli
pop
mov
sub
cmp
sub
pop
ljmp
pusha
or
xchg
mov
fstpl
adc
pusha
jnp
movb
nop
sub
aam
mov
add
mov
es
xchg
mov
pop
dec
es
push
test
add
fidivl
mov
clc
adc
jno
cmp
lret
out
cmp
cmp
imul
inc
aas
fwait
jne
inc
aad
xor
imul
lcall
ja
arpl
out
insl
test
sarb
cmp
jae
in
mov
es
pop
mov
and
fidivl
inc
jbe,pn
cmc
push
dec
lcall
adc
or
loop
pop
lds
out
jns
adc
dec
sub
arpl
inc
loope
js
inc
stos
push
in
mov
jl
inc
push
mov
aad
add
hlt
xchg
jno
inc
leave
call
lock
dec
inc
push
add
addr16
adc
or
or
add
push
insb
test
xor
movsb
out
xchg
mov
sti
adc
mov
rcrl
test
lds
or
pop
nop
and
fisttpll
cli
cmp
cld
jp
jb
jo
sub
cmpsl
jecxz
pushf
or
mov
cmpsb
inc
loope
xchg
fistl
rorl
inc
pop
xchg
ret
sub
mov
dec
pop
inc
stc
shlb
sahf
dec
lods
jne
mov
or
dec
mov
xor
sub
sub
outsb
pop
sbb
stos
div
mov
adc
jmp
push
push
movsl
add
dec
cld
xor
jl
inc
and
dec
ljmp
ret
ljmp
xchg
lods
shrb
fbld
jle
pop
shll
out
mov
les
daa
outsl
daa
inc
lods
mov
dec
mov
les
fsubrs
mov
mov
xlat
testb
dec
test
and
jnp
lcall
xor
push
adc
popa
pop
int
push
xorb
jnp
andl
or
test
les
xor
shl
js
sbb
lret
mov
movsl
subb
icebp
xchg
adc
fiaddl
jbe
adcb
sub
push
ret
mov
sub
stc
adc
int
sbb
aaa
ja
push
sub
mov
mov
nop
mov
data16
ss
daa
imul
scas
cmp
inc
cmc
vmwrite
cmp
xor
push
cmc
and
adc
dec
sub
leave
mov
sbb
add
fisttps
cmpl
cmpsb
repnz
es
mov
xor
in
inc
or
ret
es
inc
add
fwait
bound
call
aam
mov
rolb
pop
lcall
push
sbb
loopne
rol
push
fnstcw
cltd
add
fisubrs
mov
aas
dec
mov
jp
xchg
test
jbe
push
inc
sahf
mov
inc
sbb
mov
lahf
mull
je
repz
add
dec
mov
movsl
movsb
lods
ljmp
popf
xor
movb
or
das
loope
add
push
adcb
call
mov
adc
repnz
xor
xorb
addr16
mov
outsb
aam
mov
and
cwtl
dec
jmp
loop
mov
mov
adcb
call
mov
xor
jmp
mov
sbb
add
inc
adc
mov
bound
jo
call
pop
mov
test
mov
clc
inc
mov
adc
pop
std
inc
in
mov
adc
out
mov
imul
sbb
push
xor
rcl
fcompl
push
mov
outsl
adc
jmp
fstpt
inc
adc
add
sarb
xor
cli
push
push
dec
gs
sub
fsubrs
cmp
in
mov
ffreep
sub
inc
push
stos
call
xor
and
fldt
adc
aaa
xor
in
xchg
dec
repnz
inc
test
cs
scas
adc
shlb
jbe
push
out
mov
mov
cmp
and
aaa
pop
fcmovnb
xor
inc
cli
icebp
jp
inc
and
jnp
lahf
movsb
sub
add
int3
lret
xor
adc
mov
mov
loop
hlt
push
shlb
pusha
sbb
add
leave
and
mov
test
cwtl
ljmp
pushf
test
out
xchg
mov
lahf
insb
sub
pushf
pop
das
push
mov
mov
outsl
dec
or
out
notb
cmp
sub
aam
xchg
aaa
add
cli
fucomi
outsl
cwtl
xchg
hlt
mov
mov
jg
xchg
testb
mov
stos
mov
outsl
fstp
fidivrs
xor
in
and
fs
mov
mov
movsb
xor
jmp
mov
insl
mov
ret
sub
aad
jo
sbb
adc
dec
add
xchg
out
lock
aad
pushf
xchg
pop
xchg
or
mov
cmp
rol
imul
xlat
add
nop
adc
loope
repnz
arpl
fwait
mov
addr16
push
test
dec
adc
ss
xchg
or
hlt
mov
mov
add
les
add
pop
iret
cmpsb
pop
aaa
lahf
insl
mov
xor
inc
xchg
shr
jnp
inc
dec
js
jo
pop
je
mov
test
jne
cwtl
mov
insb
sub
mov
mov
mov
and
dec
and
mov
add
mov
mov
pushf
negl
xlat
repz
add
dec
dec
mov
pcmpeqw
mov
sarl
popf
xchg
and
in
out
gs
adc
push
inc
adc
lret
inc
cmpsb
mov
push
int
imul
sub
fstpl
sbbl
add
cmpsl
aaa
push
inc
hlt
mov
jae
int
js,pt
aaa
xchg
fstp
ljmp
scas
clc
adc
sbb
lds
fdivrl
loop
shrb
mov
pushf
test
psraw
cmp
nop
mov
shlb
lcall
shlb
mov
push
divl
fdivrs
outsb
mov
dec
aaa
test
push
xchg
sbb
fadds
jl
or
stos
adc
aad
push
sbb
ret
int
jecxz
ljmp
insl
mov
ret
cmp
push
movsb
shlb
into
repnz
ret
xorl
pushf
insb
sub
push
cld
shll
inc
into
add
push
in
mov
in
jns
sti
xor
pusha
push
mov
add
cmpsb
fnstenv
inc
mov
das
addr16
sbb
lret
or
push
test
inc
data16
push
and
xchg
lods
clc
aad
jl
cs
outsl
out
lret
lret
out
mov
mov
sub
fsubl
and
or
pop
mov
inc
out
aaa
mov
leave
out
add
ja
mov
pop
jnp
and
mov
xchg
gs
pop
ret
mov
loope
lea
mov
dec
cmc
fdivrl
pop
outsb
out
mov
xchg
push
fmuls
and
fwait
inc
mov
jle
les
adc
add
loop
or
outsb
ljmp
xchg
push
mov
sub
pop
je
jns
insl
ds
and
mov
fistpl
test
jns
inc
out
jge
and
xchg
inc
jnp
mulb
dec
jae
ds
and
mov
popf
stos
lret
lods
in
fbld
add
jge
and
iret
push
mov
jmp
cmp
push
dec
mov
jg
adc
xchg
and
inc
jecxz
testb
mov
lret
call
or
add
pop
repz
in
sub
stc
adc
sub
mov
jae
call
nop
inc
inc
jge
sti
addr16
scas
cwtl
sbb
mov
sub
lret
jo
xor
mov
mov
pop
pop
dec
adc
repz
movlps
sub
sti
sub
add
cmp
imul
mov
jno
rcll
repnz
or
lods
adc
adc
ss
cmpsb
dec
mov
movsl
and
mov
lods
mov
dec
movsb
daa
fmull
rolb
xor
xor
es
xchg
jmp
int
jno
repz
mov
and
aas
sub
mov
adc
add
dec
mov
ljmp
pop
jb
divl
pusha
inc
sbb
add
push
fisubrs
loop
test
es
int3
xrelease
jno
dec
jecxz
xchg
data16
es
and
lahf
push
in
lret
es
movsl
inc
add
outsb
mov
mov
int
push
inc
sbb
pop
push
in
cmp
lahf
add
jae
and
dec
loopne
inc
pop
out
mov
addr16
mov
je
push
xchg
sub
mov
cmp
xchg
mov
xchg
arpl
insl
popf
sbb
mov
and
xchg
aas
out
js
dec
and
cltd
mov
xor
sbb
dec
cmc
shlb
mov
icebp
enter
mov
push
scas
adc
nop
add
shl
pop
xor
outsl
jbe
and
cmpsb
cmpl
std
mov
outsl
jl
mov
mov
adc
mulb
adc
out
adc
cli
xchg
out
cmp
int
xchg
push
int
push
ljmp
ss
inc
loopne
jl
mov
in
push
jb
ja
fistl
mov
sub
popf
repnz
mov
fistpll
mov
mov
jmp
inc
arpl
outsb
lods
clc
faddp
aaa
xchg
xor
dec
sub
loop
fcmovnb
lahf
jno
cmp
loopne
sbb
push
pop
jne
inc
sbb
jecxz
fstl
rorb
insb
xchg
mov
push
rorl
xor
dec
hlt
mov
jmp
mov
fs
xlat
mov
pop
insl
cmp
jo
pusha
out
and
mov
outsl
je
inc
push
sbb
sbb
jecxz
aam
jge
jmp
outsl
fwait
testb
xor
roll
loop
mov
xor
out
push
out
adc
inc
gs
out
mov
ds
inc
xchg
fldenv
pop
test
xchg
outsl
fld
mov
push
aam
iret
popa
jno
fbld
mov
sub
clc
inc
dec
rol
lcall
inc
ret
popf
in
sbb
popf
or
scas
or
sbb
out
je
jb
and
stos
inc
mov
ret
out
pusha
pop
sbb
adc
xor
inc
lret
pusha
divl
mov
pop
out
imul
add
clc
mov
dec
test
imul
jnp
cmp
jae
addb
or
in
jns
dec
andl
scas
fsubrp
sbb
jns
ficompl
cli
inc
arpl
mov
sub
jns
or
insb
xchg
cli
and
jl
lods
clc
sub
imul
mov
push
stos
pop
push
jo
inc
mov
jle
lods
arpl
pusha
sbb
lahf
jnp
mov
rcrb
iret
and
cmp
inc
sub
dec
xchg
jns
fnsave
or
sti
xchg
pop
xchg
jno
xchg
insb
sbb
shl
daa
subb
movsb
and
aad
popa
leave
js
jae
rolb
inc
jmp
mov
jge
pop
jbe
adcl
cmp
das
xchg
mov
cmp
test
jae
pause
imul
dec
movsl
adc
pop
jg
fcoml
jp
mov
test
cmc
or
lea
pop
adc
lret
jle
nop
sub
sbb
jno
pop
xchg
and
dec
pop
enter
inc
sbb
rolb
in
aas
lock
sbb
ficoms
or
add
jbe
and
xor
sub
jno
jl
in
sub
pop
or
inc
in
sbb
and
inc
pop
sahf
ret
in
adc
push
jo
andl
lea
outsb
test
xchg
pop
mov
aaa
test
jp
cld
xor
scas
adc
setp
sbb
sub
jno
fs
pop
inc
adc
cld
mov
sub
xor
clc
cmp
aam
mov
lahf
pusha
lods
dec
cmp
inc
scas
cwtl
inc
lret
movsl
xchg
stos
inc
jb
xor
xchg
leave
int
ret
mov
and
loopne
xchg
mov
ret
xlat
mov
jl
gs
inc
stos
mov
lret
lret
mov
lret
psubusb
je
dec
imul
dec
mov
pop
popl
and
pop
xchg
in
cltd
mov
mov
push
neg
leave
pop
fists
movsb
movsb
mov
sahf
lret
add
mov
incb
testl
inc
jp
shll
enter
test
jg
aad
jecxz
xor
inc
fimull
cmpsl
fidivs
or
call
cmp
pop
and
test
incb
movsb
hlt
fisttpll
clc
rorb
cwtl
jne
stos
subb
clc
sub
lods
vpmaxub
faddl
in
aad
mov
fldl
mov
arpl
adc
inc
faddl
lcall
jnp
sbbl
outsl
xor
nop
sbb
stos
xchg
mov
push
pop
jb
sti
out
hlt
and
push
mov
dec
sbb
jb
fwait
jecxz
ds
pop
add
jbe
jp
adc
shl
jne
ss
jbe
add
jne
movsl
inc
data16
add
inc
lcall
popa
in
cmp
or
or
aas
pushf
daa
mov
mov
and
inc
sbb
and
out
xchg
sbb
stos
mov
sub
orl
jp
push
and
int
adc
jmp
rclb
repnz
inc
test
lcall
pop
lahf
rolb
movsl
mov
sarb
scas
pop
int3
sbb
iret
js
mov
aam
ds
mov
repnz
aaa
jns
pusha
jnp
in
pop
test
je
imul
jne
push
clc
cmp
repnz
cld
cltd
in
test
sub
sbb
cmc
shrl
jmp
mov
pop
pusha
hlt
mov
enter
fs
cmp
nop
outsb
or
mov
cmpsb
icebp
xchg
cli
nop
stos
movsl
jb
aam
ljmp
out
mov
sub
dec
imul
mov
xchg
mov
pop
mov
data16
aaa
in
dec
out
insb
shll
xchg
out
movsb
mov
std
pop
lods
mov
sub
push
jmp
inc
ret
rolb
aad
stos
mov
mov
pop
and
test
xchg
mov
lods
loope
push
cmpsl
dec
in
push
cld
xor
lahf
sub
push
clc
aas
shld
xorb
sar
fwait
lock
jno
mov
jge
sub
stos
imul
mov
or
sub
or
dec
mov
subl
adc
hlt
int3
xor
jae
shll
xor
mov
outsb
in
cli
xchg
insb
push
testb
rcll
mov
cmpsl
ds
cmpsl
mov
jecxz
insb
shrl
dec
add
sbb
std
push
cmpsl
ds
xchg
int
mov
push
pop
cwtl
das
xchg
inc
push
lods
jp
adc
ror
pop
sbb
push
mov
jg
jge
test
jno
mov
sbb
les
and
ds
scas
inc
xor
mov
fldl
or
cmp
pop
scas
cmpsl
xchg
test
or
lods
xlat
pop
add
adc
je
jmp
or
or
in
pandn
add
jp
je
stos
fs
mov
dec
add
cmc
jmp
sub
lret
mov
jae
push
dec
dec
inc
mov
ja
lea
cmp
push
jo
and
mov
adc
sub
xchg
xchg
dec
push
sbb
xchg
jmp
sub
ds
jmp
js
adc
push
sub
rol
and
cmp
lods
cs
cmp
in
xchg
inc
sarl
repz
cwtl
decb
mov
add
lds
jg
loopne
fistpl
push
js
cmp
cmc
or
push
dec
jl
inc
jns
add
pop
loopne
lea
fiaddl
mov
int
loopne
scas
mov
mov
cltd
jg
mov
jge
out
decb
jae
movsb
fdivrs
xchg
and
dec
sbb
call
int
pop
hlt
roll
fs
mov
xor
jno
in
xchg
fimuls
jecxz
jbe
outsl
daa
nop
out
dec
clc
iret
push
nop
addr16
inc
lods
or
rcl
jg
sub
sub
mov
jns
xchg
lock
dec
push
dec
movsl
ret
cmpsb
lcall
or
jg
dec
jecxz
mov
push
aaa
push
add
pop
xor
xor
pop
mov
mov
add
into
mov
lcall
and
jns
aas
adc
mov
adc
add
mov
daa
mov
push
push
jmp
mov
push
push
scas
mov
jns
dec
add
aam
xchg
sub
xchg
cmp
mov
movsb
pop
outsb
in
mov
cmpsl
mov
mov
mov
aad
dec
jae
ret
jbe
pop
in
or
adc
xchg
stos
pop
add
inc
mov
or
lods
push
lods
lahf
sbb
or
xor
sti
ret
pop
sub
mov
repnz
pop
fnsave
out
add
adc
imull
mov
mov
dec
jecxz
cld
sub
pop
and
fs
jnp
xchg
jno
jmp
mov
rcrl
add
cmp
aam
lds
jne
fsubs
or
jecxz
mov
inc
jmp
xchg
dec
cld
nop
jns
xor
in
push
push
pop
nop
mov
and
xor
sbb
or
movsb
outsl
mov
push
sub
and
imul
outsl
cmp
pop
sbb
out
daa
cli
jns
out
mov
dec
in
test
xchg
jmp
cmp
push
psrlw
int
testb
in
movsl
fidivl
lods
xor
adc
pop
cmc
xor
lret
in
rcl
shl
jmp
add
out
sub
in
mov
mov
std
inc
daa
clc
cli
and
pop
repnz
aaa
fwait
jl
jae
rolb
mov
mov
das
add
xor
or
iret
es
xchg
jb
shrb
aad
push
andb
cmp
pop
pop
adc
lcall
and
imul
into
gs
xor
jo
inc
flds
push
xchg
push
push
push
pusha
push
or
rclb
scas
lock
pop
divl
adc
mov
sarb
pop
sti
nop
loop
add
les
cwtl
je
or
rolb
addr16
mov
rorl
pop
ds
cmpsl
dec
repz
insb
loop
fs
sub
sub
sets
loop
push
mov
or
jnp
lret
ja
sub
stc
mov
sub
sbb
sub
mov
ret
out
and
jns
inc
in
add
dec
fisttpll
popf
enter
xorl
in
sti
add
cmpsb
ret
rcrl
or
std
mov
fdivl
xchg
xchg
lock
bound
or
punpcklwd
mov
jmp
clc
jne
fisttps
pop
icebp
shrl
pop
into
cmp
clc
iret
or
ret
enter
mov
lret
sahf
adc
fldenv
inc
sbb
xchg
and
movsl
std
inc
sbb
aam
dec
pop
xchg
xchg
rol
cld
pop
psubusb
and
xor
fldcw
loop
test
fbstp
lods
or
fists
dec
pop
bnd
and
shrb
ret
jnp
mov
int3
scas
and
int
nop
fnstenv
sbb
fsubrl
enter
adc
mov
push
and
xchg
mov
cltd
lea
cmpsb
cmc
ficompl
sahf
sbb
xchg
inc
mov
iret
mov
in
subl
mov
cmp
inc
mov
jecxz
mov
jnp
insl
and
mov
fwait
mov
imul
dec
fistpll
int
je
leave
mov
inc
fistl
fs
stos
sub
mov
ds
mov
fnsave
scas
loop
lods
in
mov
je
popa
pop
jmp
fnstsw
lods
xor
fidivs
sbb
popf
add
fmull
sbb
push
leave
mov
cld
icebp
arpl
loopne
sti
and
dec
mov
fisubs
call
pop
out
aam
sbb
int
jbe
jg
jnp
cltd
mov
cwtl
cmpsl
push
in
and
pushf
iret
je
add
test
fdivrs
enter
inc
popa
pop
push
je
add
dec
cmp
loope
lahf
xor
shlb
es
inc
fdiv
and
adcl
xchg
popf
icebp
mov
jbe
outsl
jle
or
xchg
dec
shll
xor
push
jae
push
leave
hlt
lea
mov
pop
mov
test
dec
stos
insb
add
insb
mov
mov
cmpsl
js
xlat
or
lret
sti
lods
mov
imul
es
sbb
sbb
jp
ja
cmp
mov
mov
jbe
cmp
pause
jmp
push
mov
inc
push
push
mov
add
nop
sub
iret
and
dec
pop
scas
jg
mov
mov
sbb
push
push
stc
in
jmp
push
jmp
push
pop
popf
lahf
pop
cmpsl
cs
hlt
pop
enter
push
inc
pop
jbe
cmp
dec
cwtl
stos
in
xor
xor
inc
mov
in
cmp
jno
mov
push
in
push
add
in
inc
in
lock
cmpb
outsb
mov
mov
jne
fs
mov
iret
jo
ds
out
testl
mov
jg
out
test
aam
push
aas
inc
xchg
ljmp
jno
cmpsl
movsl
push
push
cwtl
lods
es
pop
pop
and
adc
or
hlt
stc
or
add
stos
mov
mov
lods
pushf
lret
sahf
outsl
je
out
mov
mov
aam
lds
aas
or
adc
imul
add
mov
lcall
pop
pop
push
xchg
mov
mov
arpl
pop
out
in
hlt
jno
es
adc
jg
js
stos
arpl
jge
mul
ret
repnz
popf
fwait
stos
into
mov
ss
sbb
popa
mov
stc
loop
sti
xchg
dec
test
imul
popl
pop
adc
outsb
pusha
push
mov
adc
outsl
jmp
lcall
fnstcw
push
mov
fbld
mov
int
xor
xchg
iret
and
xchg
jno
and
mov
pop
cwtl
or
out
mov
add
int3
sti
sbb
adc
jg
movsb
cmp
in
mov
jnp
in
xchg
imul
ds
popa
aad
and
pop
idivl
dec
pop
pushf
inc
sbb
pop
add
sbb
adcb
adc
int3
out
or
negl
pop
add
aaa
mov
pop
ret
outsb
popa
dec
adcb
xchg
push
and
daa
push
push
pop
outsl
cmpl
adc
lods
pop
fisttps
inc
loopne
out
xchg
popa
mov
xchg
out
xor
push
out
xchg
call
xchg
jno
out
test
dec
mov
mov
sbb
mov
mov
sahf
repz
int
add
jg
adc
xchg
jge
adc
addr16
lds
js
push
add
lcall
call
inc
and
dec
aam
jle
xchg
xorl
call
jecxz
test
testb
lods
or
jne
ds
outsb
ret
adc
in
mov
mov
xor
aad
leave
outsl
scas
aam
loopne
stc
xor
test
jmp
sti
xchg
xchg
mov
push
mov
jecxz
sbb
aas
ret
std
sahf
cmc
es
sahf
sub
nop
sarl
and
and
sbb
adc
dec
imul
je
or
sub
clc
add
push
stc
mov
out
lea
outsb
pop
pop
enter
fisubrs
scas
dec
cld
xchg
jge
stos
mov
or
xchg
jnp
dec
in
cmp
pop
cli
movsb
cmp
fstl
dec
ret
nop
pop
mov
push
in
xchg
lcall
cmp
cmp
mov
sub
add
daa
dec
fistps
ljmp
xor
xor
push
mov
xchg
adc
push
neg
aas
jecxz
icebp
inc
into
cmp
or
out
arpl
out
rcr
jns
mov
xor
add
sub
js
cltd
pop
sub
adc
adc
fiaddl
lods
push
repnz
adc
mov
cmp
cmp
cmp
jbe
inc
ja
xor
lret
fwait
inc
cmp
cld
lahf
lret
jb
adcl
pusha
fcmovb
ret
dec
test
stc
pop
lds
xchg
pop
cwtl
movsb
xchg
xchg
jmp
outsb
call
enter
nop
lods
sbb
les
mov
cmp
mov
sbb
in
dec
stc
cmp
mov
mov
mov
idivb
fildl
nop
dec
add
call
dec
add
push
jne
rcrb
mov
cmp
add
out
add
cmp
xchg
aad
outsb
jne
fildll
enter
xchg
jmp
mov
mov
ss
inc
cmc
ret
sti
sahf
sub
mov
stos
inc
fcmovb
js
xchg
jne
bound
mov
push
hlt
jne
es
jne
cli
inc
push
cmp
mov
xor
int3
arpl
pop
popf
jl
roll
iret
pop
add
jle
sub
push
frstor
pop
test
mov
push
jmp
cltd
or
loopne
jp
inc
mov
movsl
cld
add
and
outsb
jge
subl
jl
xor
lcall
and
fimuls
in
faddl
popf
int3
int
sbb
push
jmp
sti
subb
fmuls
add
pop
dec
and
dec
std
mov
xor
push
cmp
addl
out
adcb
mov
insb
aad
insb
mov
jle
rol
mov
jmp
outsl
leave
dec
out
ds
in
test
inc
mov
lock
iret
cmp
std
jecxz
dec
mov
mov
btr
mov
sub
fs
clc
mov
adc
push
int3
sub
push
into
xlat
outsb
mov
sarl
fsubl
inc
mov
add
test
xchg
sub
push
test
push
pop
mov
lea
jg
gs
data16
insl
ja
xchg
xor
adc
mov
xchg
adc
xor
push
xchg
scas
lea
mov
push
add
je
jge
xor
jne
sub
push
inc
mov
inc
sbb
pop
sbb
cmp
das
out
add
dec
iret
jecxz
popa
pop
jae
jbe
cmp
lret
or
inc
insb
sub
sub
pop
xor
adc
dec
push
outsl
mov
and
jb
gs
jne
push
aam
adc
clc
push
popf
es
push
jno
adc
sub
movsl
inc
xchg
sub
in
es
sub
push
adc
decb
sub
jo
sbbl
mov
push
arpl
add
in
sbb
mov
jns
dec
test
lcall
aaa
outsb
pop
ds
inc
scas
mov
xchg
xchg
sbbl
subb
and
and
lea
jne
scas
jmp
push
sbb
mov
lret
std
add
jbe
lret
bound
push
int
fs
xchg
int
movl
push
jne
leave
mov
outsl
lods
les
jge
jns
jns
inc
sub
lret
sbb
cltd
mov
jo
setl
dec
popa
decl
cmpsl
xor
xchg
icebp
aam
xor
pop
adc
adcb
pop
xor
inc
push
fabs
add
cmp
insb
sub
push
xchg
or
inc
cwtl
stos
mov
insb
cpuid
subl
xor
mov
shlb
pushf
imul
xchg
cli
les
add
popf
mov
data16
push
shrl
adcb
mov
icebp
mov
xchg
in
xchg
js
adc
mov
cwtl
xor
add
in
test
sub
push
xchg
lea
or
mov
sbb
pop
and
xchg
cmpsl
icebp
sbbb
lds
jne
sub
inc
jno
xchg
rcrl
lret
xor
mov
leave
pusha
stos
push
cwtl
aam
leave
xor
call
mov
cld
std
xchg
sub
lret
outsb
add
sbb
push
mov
ss
xor
mov
in
ret
mov
ljmp
es
decb
push
mov
ljmp
mov
mov
popf
and
dec
or
mov
and
sbbb
xchg
rorl
lods
mov
lret
xchg
sub
pop
jbe
inc
sbb
sbb
lds
imul
sarl
mov
cmp
jecxz
add
push
mov
arpl
mov
pop
arpl
fcomi
test
push
ljmp
insl
jnp
aaa
or
push
mov
sub
hlt
push
or
jns
jns
sti
and
arpl
mov
cmpsl
sub
add
movsl
push
push
in
adc
aad
js
aas
fwait
pusha
push
les
lea
and
fxtract
push
fldcw
jne
jp
cwtl
fldcw
inc
fdivr
xchg
or
stos
test
sbb
fwait
jb
scas
lahf
out
loopne
sub
lahf
sahf
mov
or
mov
fdivrs
inc
push
out
cmp
add
repnz
cs
dec
rolb
cmp
add
fdecstp
cmpsb
outsl
cmpsl
cli
test
inc
inc
mov
push
pop
mov
lret
and
mov
shlb
into
in
fisubl
rcrl
int3
dec
jns
lahf
pop
stos
outsb
inc
fidivl
inc
int
lcall
push
jne
and
mov
xchg
pop
pop
lds
das
insb
jle
aam
ds
sub
or
in
sub
or
out
lea
cmp
je
stos
push
ret
pop
jecxz
push
shll
test
sets
sub
jge
push
fidivl
or
and
mov
in
pop
mov
add
les
out
lret
scas
push
std
or
push
insl
xchg
arpl
and
iret
rolb
xchg
xor
sbb
sub
add
sbb
lods
roll
subb
mov
xchg
addr16
arpl
mov
or
in
fs
hlt
xchg
ja
inc
cs
loope
add
jne
into
xor
pop
in
cld
mov
mov
in
push
mov
out
cmpsb
jmp
mov
jb
sub
fnsave
sbb
adc
xchg
aam
adc
pop
cmc
mov
dec
movsb
inc
cmp
mov
lea
sub
xchg
popf
clc
addl
sbb
adc
movsb
aas
xor
add
mov
aaa
mov
mov
loop
ds
jns
sub
imulb
daa
pushf
test
xor
inc
scas
fisttpll
test
or
dec
dec
js
pushf
inc
lods
inc
cmp
movsl
dec
in
push
adc
jg
jbe
lock
or
xchg
jno
pop
xchg
pop
jne
jnp
pop
cmpb
jp
insb
hlt
int3
and
push
cmpsb
sbb
or
sub
adc
xchg
push
cltd
pop
addl
and
and
mov
cltd
mov
lcall
xchg
jne
adc
les
jl
cmc
cltd
int3
pop
leave
repnz
call
mov
or
or
pusha
xchg
xor
mov
jl
push
push
mov
inc
mov
cmp
in
rep
inc
imul
xor
shll
push
fsubl
lret
inc
pusha
imul
ja
mov
inc
inc
sub
jbe
xor
ficoml
dec
fildll
int3
data16
std
push
insb
xchg
adc
punpckhdq
cs
jl
and
dec
repz
inc
fisubl
addr16
jno
je
push
and
and
cs
hlt
je
cs
pop
push
jmp
pop
sbb
xchg
lods
cld
xchg
repnz
std
ljmp
mov
mov
popa
jo
movb
dec
add
inc
mov
dec
loop
cmp
in
nop
imul
jnp
jns
mov
shlb
lods
push
shlb
sbb
repz
jbe
sub
xchg
loopne
or
sub
push
cmp
push
clc
test
jae
or
mov
jb
out
jle
sbb
js
shll
dec
pop
hlt
or
dec
xchg
pop
aas
xor
out
dec
fidivrl
mov
push
jne
lock
js
fsubs
adc
jbe
outsl
jl
lea
xchg
mov
push
or
mov
addr16
xor
adcb
sub
jle
repz
jae
xor
dec
dec
mov
outsb
sub
pop
or
ret
shrl
ja
jnp
mov
sti
shl
jo
mov
or
cmp
insl
in
out
aad
aam
fstps
jno
nop
lods
push
inc
sbbl
call
hlt
inc
cmp
push
xor
adc
jmp
pop
cld
aas
negl
je
mov
inc
lahf
mov
aas
sahf
int3
lret
push
sbb
outsl
mov
loop
fidivs
xor
fstl
xor
mov
jns
in
test
ds
mov
dec
inc
lds
mov
mov
enter
mov
and
bound
popf
lret
inc
push
push
sbb
mov
ljmp
and
cmp
pop
insb
sub
movsb
fs
fmul
dec
adc
add
jne
pop
shrl
add
cltd
or
sbb
daa
inc
inc
jb
jo
fwait
call
gs
cmp
mov
jbe
pop
iret
xor
pop
ret
jbe
lods
push
xchg
in
sbb
lods
adc
dec
pop
xor
pop
out
lahf
ss
clc
scas
xor
aad
xchg
push
sub
sub
daa
or
or
mov
shll
and
ret
int3
xchg
dec
outsb
or
pop
loop
insb
add
sbb
dec
stos
xchg
jge
ret
mov
sub
add
cwtl
loop
push
loopne
mov
mov
sbb
pop
jno
fwait
xor
movsl
mov
mov
jne
push
push
push
dec
dec
andb
cmp
adc
daa
xor
rcrl
xor
inc
and
inc
pusha
xor
aaa
jg
xchg
stos
je
mov
mov
pop
push
lock
rep
add
int3
add
mov
dec
icebp
push
inc
popf
pop
add
xchg
xor
popa
stos
dec
xchg
sub
inc
outsl
nop
add
mov
push
and
xor
dec
test
ret
xchg
dec
or
mov
push
divl
imul
push
mov
fidivrs
cli
fmul
test
lcall
mov
test
dec
sbb
sarl
fldenv
adc
adc
shrl
xor
xchg
and
add
sub
out
pushf
movsb
int
shrb
gs
fwait
add
mov
push
adc
icebp
cltd
scas
jge
mov
mov
pop
leave
sbbl
or
js
mov
out
lods
rorl
mov
fucomi
stos
push
popa
adc
pop
cmp
sbb
dec
xor
dec
add
inc
dec
sub
imul
jns
cmpsl
rol
sub
shrl
jg
xor
push
shrl
lret
lahf
xor
dec
mov
stc
and
xor
and
fwait
pop
cmp
jnp
mov
jg
adc
mov
and
js
pop
mov
aad
or
pop
and
or
sub
jge
mov
sbb
xchg
adc
rcl
hlt
xchg
stos
sub
jecxz
adc
out
arpl
fsubs
pop
cmp
mov
dec
jae
dec
or
xchg
sub
lahf
enter
mov
xchg
pop
mov
push
pop
lea
inc
jl
adcb
adc
dec
shlb
dec
xor
imul
out
mov
jae
xchg
mov
cmp
xor
and
pushf
leave
nop
add
jge
sbb
jmp
in
iret
sbb
xchg
repz
jo
subb
das
xchg
push
lahf
out
in
iret
popf
xor
adc
push
jg
mov
inc
paddusw
push
adc
add
xchg
cmc
sbb
outsl
xlat
jns
adc
jecxz
fnsave
add
jmp
movsb
mov
and
mov
dec
enter
imul
jge
test
adc
adc
xchg
or
and
adc
add
cmp
dec
arpl
inc
test
bnd
std
xchg
lret
push
xorb
sbb
mov
fmuls
int
jmp
mov
in
xor
jle
loope
jge
dec
int3
fidivrs
jge
xor
jle
subb
adc
lret
stos
and
sahf
mov
lahf
out
push
mov
fnsave
iret
ja
fidivs
push
fimuls
dec
std
xchg
push
fisubl
xor
push
push
cmpsb
dec
int
mov
arpl
or
mov
mov
insb
dec
push
imul
mull
mov
cmp
adc
cmp
adc
in
push
bound
insb
cmp
in
mov
test
das
cmp
lretw
sahf
mov
or
push
and
in
xchg
pop
ja
adc
jg
test
adc
dec
mov
in
rorl
pop
repnz
push
leave
test
inc
icebp
int
sub
ja
pushf
push
hlt
add
ss
lods
scas
dec
sub
adcb
mov
mov
push
mov
lahf
movsl
addr16
pop
nop
and
dec
pusha
imul
popf
adc
iret
test
clc
or
daa
adc
pop
std
pushf
xor
push
lret
mov
mov
ss
xchg
xchg
push
das
dec
mov
js
nop
stos
cld
pushf
sbb
and
fdivl
mov
cmp
mov
pop
roll
cltd
in
nop
icebp
mov
jnp
dec
aam
xchg
imul
push
lods
loope
and
aad
lahf
push
and
push
clc
cmp
pushf
xor
and
push
stos
fs
mov
xchg
xor
push
mov
cld
inc
dec
test
stc
outsl
test
mov
test
jno
cmpsl
into
cmpsb
aad
pop
xchg
inc
sub
pop
gs
add
add
adc
sub
imul
sbb
lahf
ss
scas
inc
icebp
daa
data16
fwait
lahf
daa
lods
je
mov
arpl
sbbb
sti
dec
je
jle
je
testb
ja
dec
xor
addr16
stc
in
movsb
fs
lods
bound
iret
mov
mov
push
insb
or
lahf
add
mov
push
out
inc
pop
mov
pop
daa
ja
inc
les
jb
subb
fwait
and
jecxz
cwtl
xchg
loope
shl
adc
push
mov
subl
push
gs
cmp
cltd
sub
mov
cmp
sub
in
dec
nop
das
inc
jb,pn
push
dec
in
cmpl
ret
jne
fwait
mov
mov
std
push
cmc
pushf
cmp
test
mov
shl
pop
ror
xor
cmp
push
xor
popf
xor
pop
loope
push
and
inc
sub
rep
mov
mov
addr16
dec
dec
push
ss
mov
shll
aam
rcrb
xor
adc
ja
mov
sarb
or
pop
idiv
test
adc
xor
shrl
not
jnp
adc
xor
pop
cmc
push
jo
nop
into
xor
inc
out
inc
and
ss
shlb
xor
add
inc
repnz
lods
mov
rcll
pop
out
dec
out
lods
sub
repz
fxch
adc
mov
xchg
dec
xchg
fdivl
adc
or
inc
jo
jl
mov
es
or
and
mov
push
leave
pusha
je
scas
jno
xchg
jmp
xor
xor
lahf
xchg
call
sahf
gs
adc
and
mov
mov
out
xchg
or
sbb
lock
imul
pop
in
sahf
xor
fwait
push
xlat
sub
aaa
xchg
in
ja
ljmp
jecxz
adc
inc
test
test
mov
sub
hlt
rcl
push
decb
subl
insl
stc
jle
scas
int3
ret
call
adc
jmp
lods
xchg
add
das
stc
mov
mul
sbb
pop
dec
inc
jle
jne
loopne
mov
ret
add
into
aam
jae
push
out
aad
push
inc
jo
or
aam
jno
les
and
add
or
cmpsl
ret
negl
sbb
call
fildl
pop
or
jmp
loope
divl
inc
inc
push
inc
fidivrs
cmp
imulb
roll
leave
bound
mov
imul
xor
rcll
xchg
decl
sbb
aad
xcrypt-cfb
cmpsl
and
fdivs
inc
aas
jl
subb
xchg
orl
in
out
sahf
xor
iret
jne
call
mov
adc
xor
scas
xor
jp,pt
fs
scas
jp
leave
xlat
pop
pop
stos
add
dec
std
shlb
mov
lea
int3
dec
pop
dec
mov
lahf
jbe
mov
test
daa
jmp
or
subl
cmc
fistpll
rcll
sbb
ret
sub
scas
imul
xchg
adc
push
loopne
loopne
test
lods
mov
jp
push
dec
dec
aaa
xchg
add
push
sub
dec
pop
ss
push
movsl
push
mov
push
xorl
xlat
xchg
mov
lret
testb
jge
lds
push
mov
cmc
sbbl
add
imul
pushf
inc
fdivs
rclb
es
push
inc
test
callw
fimull
add
decb
stc
pop
adc
stos
sbb
inc
adc
das
repnz
pop
movl
lock
xchg
stos
push
scas
in
xor
out
push
mov
xchg
sub
testb
sbb
add
icebp
mov
push
push
lcall
xchg
repnz
add
xchg
jmp
les
nop
daa
sbb
in
adcb
cmpsl
insl
adc
push
push
sub
divl
mov
ljmp
int3
adc
int
cli
mov
lcall
pop
fidivl
out
xchg
sbb
js
das
test
shl
mov
push
push
pop
xchg
shrl
jg
mov
ja
xchg
sbb
mov
xchg
dec
fs
hlt
inc
adc
xchg
inc
xor
movsb
rcrb
mov
lods
in
shrl
test
in
adcb
adc
imul
xor
mov
ret
xor
aaa
idivl
lock
daa
cmp
dec
cs
xchg
je
inc
xchg
add
xor
lea
sub
mov
pop
sti
or
mov
dec
test
mov
add
test
xor
mov
or
pop
pop
arpl
sbb
aaa
imul
ljmp
xor
adc
out
sub
pop
cwtl
pop
adc
orl
insb
add
addr16
mov
loopne
mov
mov
adc
adc
mov
or
jnp
out
cmpsl
xchg
or
lret
ds
aad
lock
mov
shrl
or
mov
jge
mov
aam
jbe
sbb
sub
jno
pop
mov
addr16
cmpsl
shlb
jmp
sti
stos
call
push
push
xor
bound
fiaddl
mov
adcb
mov
iret
push
adc
xchg
cld
jbe
hlt
mov
jl
jge
out
in
das
dec
inc
sbb
roll
push
xchg
inc
xlat
jg
push
cs
or
mov
gs
jmp
ja
and
into
and
mov
push
out
inc
pop
loop
push
insb
rcr
es
add
outsb
js
jge
jp
mov
rolb
sti
jae
movsb
jno
aaa
loope
test
lock
bnd
daa
mov
iret
call
jg
je
aam
aam
int3
sti
push
ja
sbb
lock
ljmp
pop
lods
or
fld
cwtl
mov
sbbb
andl
jmp
fnstsw
mov
jbe
cmc
cs
jmp
push
mov
fisttps
add
aaa
push
rclb
das
repnz
jbe
push
xchg
dec
push
dec
mov
lods
cmp
cmpsb
adc
rclb
jg
sub
fisttps
pop
or
icebp
loope
popa
aaa
roll
mov
jge
daa
xor
testl
icebp
into
sbb
andb
mov
sub
sub
scas
xadd
dec
into
into
scas
iret
add
cmp
dec
movsb
pop
cmp
hlt
mov
dec
pushf
inc
inc
fmulp
je
push
test
dec
stc
faddl
xchg
ss
and
loop
aad
movsl
incl
scas
mov
fiadds
and
mov
movl
fildl
mov
sbb
inc
inc
ds
clc
xchg
mov
int3
push
mov
xor
cmp
pop
dec
cmp
inc
ret
pop
jbe
xor
pop
inc
pop
addr16
jae
jo
sub
xor
in
add
mov
hlt
or
xchg
test
rcr
or
incb
xchg
scas
xchg
test
jecxz
push
push
mov
mov
cmp
fwait
movsl
ret
sahf
mov
dec
or
add
lahf
inc
sbb
in
mov
stos
and
cld
push
imul
push
cmc
or
xor
shll
dec
adc
fwait
mov
adc
data16
cwtl
add
imul
add
xchg
aaa
pop
xor
divl
cmp
adc
inc
push
push
sub
in
pop
push
push
jo
or
ja
notl
std
ret
popf
inc
hlt
pushf
sti
test
sbb
cld
jb
and
pop
sbb
mov
divb
sar
arpl
pop
jmp
push
or
bound
int
movsl
or
jne
cli
outsb
std
fmul
add
std
test
loop
ror
das
dec
or
jmp
enter
ljmp
or
aam
adc
ja
in
adc
insl
sub
loop
mov
mov
shrb
movb
inc
sbb
push
inc
fsubrp
shll
jno
or
adc
mov
mov
cltd
icebp
out
cmpsl
or
inc
pop
repnz
leave
mov
pop
cmp
outsl
push
dec
out
int3
adc
dec
loope
movsl
pop
stos
adc
popa
test
add
addb
xchg
fsubl
adc
in
mov
jge
cmp
or
sub
test
push
jecxz
icebp
les
xor
inc
pop
test
sub
push
pop
jecxz
cmp
mov
cmp
sbbb
sbb
rclb
sub
leave
dec
repnz
mov
imul
sbb
test
jle
xchg
jle
inc
inc
add
mov
inc
ret
push
cmp
and
pop
nop
inc
inc
pop
pusha
and
jns
test
es
dec
popa
cltd
cli
pop
jae
cmpsb
in
fadds
shrb
jge
cmp
dec
mov
adc
adc
and
dec
inc
add
filds
jmp
enter
mov
adc
lock
xchg
and
loop
and
xchg
cmp
dec
in
lods
cli
push
xor
aam
mov
scas
sbb
out
imul
call
xchg
aam
cmc
sbb
xchg
ss
sub
adc
addb
jae
popa
mov
js
cmp
jl
and
xchg
push
push
out
sbb
pushf
js
sarb
add
cwtl
xchg
jno
lahf
movsl
sti
out
and
aad
push
mov
xchg
mov
in
int3
lahf
xor
out
mov
cwtl
fistpl
fnsave
into
gs
adc
pop
cli
sub
xor
rorb
xor
pop
je
movsl
aaa
adc
rol
mov
push
addr16
mov
out
test
nop
int
mov
lods
lods
ret
push
test
in
dec
push
xchg
mov
fnstenv
movsb
imul
xor
out
pushf
pop
cmp
jno
mov
pop
mov
xchg
lcall
jnp
cwtl
jno
push
inc
fisttpl
pop
mov
mov
adc
enter
pushf
sub
out
pop
mov
add
movsb
xchg
push
add
js
jb
jae
pop
bndstx
insl
pop
in
ljmp
shlb
or
popf
loopne
xchg
mov
idivb
mov
sub
repz
jmp
cwtl
xor
and
add
stos
jp
push
jae
push
idivl
addr16
push
cmc
enter
shrb
lret
xor
inc
fsubrp
or
pop
sub
faddl
repz
add
push
xchg
pop
or
mov
and
sub
xor
cmp
xchg
xchg
lret
imul
decb
dec
aad
sbb
lock
jle
mov
mov
js
dec
lds
lret
insl
aas
dec
lahf
out
inc
in
jg
mov
out
mov
loope
nop
or
dec
jp,pt
pop
ficomps
adc
loope
adc
sbb
data16
xchg
xlat
xor
pop
xor
cld
cld
jae
repnz
mov
lea
xchg
cs
stos
bound
daa
or
add
movsl
aad
pop
pop
mov
shl
sbb
popf
jno
pop
mov
dec
ret
pop
mov
in
ljmp
decb
adc
adc
sub
iret
fnsave
dec
mov
adc
xlat
jp
or
push
xchg
mov
adc
mov
cs
dec
loopne
and
xchg
dec
repnz
adc
xchg
iret
shrb
lock
and
out
ret
sbb
fisubs
aad
inc
inc
adc
stos
xlat
push
mov
mov
shlb
int3
arpl
fidivl
add
fnstcw
jecxz
sbb
mov
inc
dec
sbb
xlat
lock
push
clc
scas
mov
cmpsb
inc
outsl
test
imul
rcll
cmp
add
pop
jnp
adc
jmp
les
imul
jl
scas
mov
sbb
jg
and
jno
movsl
shrb
nop
inc
cmpsl
jmp
sbb
call
push
mov
shll
std
xchg
push
cs
pushf
xor
cmp
adcl
xchg
in
sbbl
mov
popf
xor
sbb
sti
aaa
dec
push
push
mov
outsb
mov
pushf
addl
sbb
gs
pop
icebp
enter
pop
sub
and
jmp
inc
lods
push
lods
pop
mov
loopne
push
cmpsb
jp
fdivs
int
pop
and
add
sbb
andb
ficoms
outsb
or
xor
pop
xor
cmp
shll
dec
sub
repnz
inc
fdivrl
arpl
das
xchg
jne
sbb
jb
jl
cmpsl
aas
popfw
add
xchg
test
pop
jge
mov
push
cmpl
loopne
call
ss
cs
jp
pop
fdivs
push
movsl
cmp
pushf
or
lcall
cmp
xor
test
inc
inc
das
push
jb
cs
mov
psadbw
and
into
sti
iret
imul
pop
les
pusha
out
insb
adc
popf
stos
and
adc
jno
shrl
shlb
testl
insb
movzbl
push
ljmp
repnz
dec
cmpsb
jp
popa
inc
dec
push
fwait
sub
pop
imul
xchg
jg
and
fadds
pop
jnp
add
movsb
jnp
scas
les
enter
lahf
inc
lahf
ss
xor
out
xchg
inc
cwtl
push
cmp
arpl
notl
imul
outsb
ljmp
xchg
stos
sbb
xlat
xorb
ss
push
je
pop
fisubrs
add
mov
std
jae
xchg
mov
mov
lret
out
cmp
orl
add
or
sbb
mov
dec
inc
mov
ds
inc
cmpsl
adc
call
out
jmp
mov
fldt
xor
xlat
daa
mov
push
dec
or
addb
je
sub
push
scas
dec
stos
push
bound
in
dec
push
fdivs
jb
pop
frndint
xchg
sub
cld
pop
rcrl
imul
push
aad
hlt
jnp
js
mov
mov
and
sbb
pushl
xchg
or
adcb
adc
popf
lods
cmp
sbb
inc
bound
scas
scas
test
push
sbb
and
dec
in
pusha
in
jl
imul
pop
mov
add
ss
hlt
shrl
pop
dec
sahf
fdivp
ret
sbb
cmp
jp
and
inc
push
cmpsl
pop
sbb
test
frstpm(287
add
jns
loope
ficoms
stos
mov
fnsave
pusha
jp
ja
mov
cwtl
or
leave
mov
push
add
mov
push
bound
mov
or
loopne
xchg
leave
pop
inc
adc
xchg
scas
aad
and
xchg
cmp
xorl
loopne
sub
add
push
aaa
jmp
mov
pop
fdivrl
cwtl
outsl
into
sbb
mov
lret
sub
jns
arpl
pop
sub
and
repnz
mov
mov
popf
lret
jg
je
push
mov
cmp
cs
insl
jge
cmp
jb
insb
cmpsl
mov
cmp
add
dec
jge
js
shll
add
pusha
scas
mov
xor
inc
xchg
rclb
push
fsubr
in
lret
sub
test
testb
aam
inc
imul
push
and
movsb
cwtl
jbe
inc
stc
inc
ret
xchg
cltd
sub
lret
jge
repz
mov
shrl
push
push
xor
mov
inc
stc
jno
ljmp
jno
jmp
popa
clc
pop
iret
push
jno
jge
lock
xchg
jb
add
das
notl
sub
arpl
push
mov
fnstenv
push
lcall
dec
sbb
fcos
jecxz
pushl
pop
popf
imulb
lods
loopne
cli
ja
and
inc
mov
orl
popa
jno
fwait
sbb
sbb
push
in
xchg
sbb
pop
icebp
lahf
das
mov
sahf
and
xchg
sub
or
push
and
xchg
add
mov
pop
inc
clc
adc
ja
mov
gs
inc
loop
xor
testb
push
and
mov
xor
int3
test
xchg
sub
and
lret
pop
lods
inc
push
loopne
nop
aad
and
mov
mov
xor
push
out
mov
cmp
jno
lods
jmp
and
push
popf
lcall
sbb
xchg
popa
xor
sbb
or
push
test
sub
arpl
test
sbb
push
lds
mov
push
pop
adc
and
addr16
std
aaa
adc
inc
xchg
pop
xchg
cmp
sub
jp
jo
imul
icebp
movsl
shlb
pop
mov
add
mov
xchg
push
fistpl
fisubl
mov
add
xchg
pop
sub
icebp
lret
xor
and
pop
aad
push
jbe
stos
fsubl
push
sub
and
and
lods
mov
adc
aas
pop
jb
cmp
sub
inc
fs
lcall
daa
jmp
sub
push
mov
int3
adc
cmp
xor
mov
adc
sub
aaa
mov
cmp
adc
jne
sbb
mov
shl
mov
mov
cli
int
xchg
sub
and
fistpl
jg
mov
negb
mov
fs
and
into
inc
int3
pop
in
jmp
lret
inc
adc
dec
movsb
cmpsl
mov
push
iret
push
movsb
stc
xchg
push
inc
nop
fwait
jmp
fnstenv
ljmp
xor
push
sub
pop
jmp
movsl
xchg
ja
das
test
mov
jno
jle
rol
pop
hlt
loop
negl
ds
aad
scas
jp
pop
loope
loop
push
inc
loopne
ds
mov
mov
filds
add
push
movsl
dec
orl
int
iret
xchg
or
outsl
fstpl
mov
xor
andl
mov
fwait
ds
and
and
inc
imull
mov
mov
jae
add
fimull
and
push
ret
notl
rolb
xchg
sub
fidivl
pop
mov
mov
mov
xchg
movsl
sbb
imul
or
push
and
dec
nop
xor
cli
inc
inc
fs
xchg
cmpsl
jecxz
icebp
sbb
pop
xchg
sbbb
pop
xor
fadds
push
ljmp
pusha
pop
mov
test
jne
or
cmpsl
stc
faddl
pushf
lret
dec
push
js
pop
and
out
and
nop
pop
adc
mov
aad
push
stc
cmp
aas
dec
mov
sbb
jcxz
psubb
pop
ja
lcall
adc
push
sub
mov
pop
loop
push
test
nop
push
stc
movsl
aad
xlat
sbb
cmp
add
sbb
mov
imul
or
scas
add
dec
test
mov
call
outsb
add
pop
jns
cmpsb
jnp
leave
and
sub
mov
cld
inc
fmul
mov
lcall
pop
mov
data16
loopne
mov
pop
add
mov
mov
inc
stc
popf
cwtl
push
jnp
aaa
mov
push
lcall
in
test
adc
xor
xchg
jae
int
mov
fsts
add
sarl
xor
push
data16
and
mov
xchg
sub
push
jl
lods
mov
mov
pop
cmp
jo
icebp
movsl
icebp
aas
xchg
pop
dec
sub
jl
pop
xor
in
adc
loope
mov
scas
jmp
mov
add
imul
jge
test
pushf
jge
int3
arpl
jns
mov
cld
ljmp
mov
cmpsb
mov
and
shll
mov
jno
cs
test
testb
lea
adc
rcll
sub
or
adc
mov
mov
aad
jmp
add
cld
sub
inc
lds
fstps
sub
dec
pop
ret
sbb
pop
cmp
imul
xchg
cmpsl
ds
repz
fstpt
and
inc
jae
adcl
pop
cmp
scas
sub
imul
mov
push
pop
xlat
test
stos
pop
test
or
test
or
inc
xlat
insl
cltd
mov
sub
popa
dec
sbb
daa
insb
aaa
sbb
mov
mov
and
daa
data16
pop
pop
testl
push
inc
pop
insb
jle
push
call
inc
add
movsl
or
cmp
or
or
fisubs
cli
dec
rcrl
jnp
sbb
repnz
jns
sbb
inc
jp
xchg
or
loopne
mov
ret
or
lret
stos
adc
mov
jmp
sub
shr
or
in
dec
and
mov
jbe
sti
xor
repnz
test
ljmp
sti
mov
push
mov
in
add
in
mov
pop
cwtl
cmpsl
std
fdivp
mov
sbb
jg
cmp
out
lds
je
add
lcall
inc
and
push
jno
lret
jmp
mov
popa
mov
xor
xchg
ljmp
dec
andl
push
aad
ss
push
mov
movsl
pop
push
inc
test
cmp
xor
imul
push
and
dec
xor
sti
shrl
mov
fisubs
push
sub
fnstenv
cwtl
and
cs
inc
push
mov
bound
add
xchg
jno
add
test
and
jns
xchg
sub
xor
inc
jge
dec
and
out
lahf
inc
dec
cld
cmp
insb
loop
or
mov
outsb
or
decb
addl
xor
insb
add
cwtl
outsl
jge
jae
fiadds
dec
ret
cmc
mov
call
sub
mov
bound
xchg
incb
mov
sti
mov
mov
mov
sti
mov
cmp
int
mov
lock
push
adc
mov
or
xchg
aad
sub
mov
or
es
mov
pushf
mov
adc
and
mov
and
lock
cmpsb
cs
cmc
inc
pop
mov
bound
loop
xor
les
xor
js
mov
dec
cmp
in
mov
and
cmc
cmp
mov
lods
popf
cmp
repnz
cmpsl
sar
adc
inc
sbb
repz
add
mov
mov
fists
mov
adc
inc
add
mov
add
cmpsl
mov
fs
es
scas
mov
push
std
aas
and
xchg
sub
adc
fs
mov
push
repnz
dec
mov
mov
xor
jp
sbb
mov
or
sub
inc
bnd
push
xchg
cld
lcall
in
cmp
or
push
lods
xchg
inc
insl
add
not
add
sub
cmpsl
pop
cli
test
pop
mov
sarb
pop
cmp
idivl
cli
adc
sbb
push
mov
cli
ret
sub
daa
cmpsl
fs
xor
loope
in
or
mov
or
sub
pop
pop
xchg
dec
mov
sarb
addl
jge
cltd
sub
sbb
or
xor
pop
sub
mov
in
lods
nop
xchg
sub
inc
sub
shll
in
add
addr16
pusha
pop
inc
push
pusha
push
xchg
and
pop
mov
add
add
cltd
sahf
xlat
mov
push
fdiv
lock
stos
or
lret
mov
push
jns
fstl
outsl
daa
pop
push
xchg
popa
or
pusha
jns
sbb
mov
fmull
sbb
es
repz
cmp
push
adc
jae
sbb
les
jle
stc
mov
ret
fs
push
sarl
jecxz
in
fwait
es
movsb
xor
ss
cwtl
pushf
xor
lock
fidivrs
rorb
dec
mov
sbb
add
les
push
imul
sbb
subb
sub
daa
dec
fs
je
xchg
xor
mov
stos
xor
pop
xor
or
stos
ret
cmp
or
push
adc
cmp
testl
and
sub
lods
xor
fiadds
pop
cmp
in
ret
xor
pop
mov
dec
inc
movsl
js
dec
shrb
mov
ja
inc
imul
fnstenv
dec
pop
sahf
cwtl
int3
cli
fnsave
jmp
inc
fwait
and
adc
inc
dec
dec
mov
push
or
inc
out
gs
push
neg
sub
pop
out
pop
dec
jne
icebp
rorl
fwait
mov
cmpsl
and
rclb
test
adc
mov
stos
jns
mov
loop
xor
dec
mov
adc
int3
sahf
and
cmp
adc
xor
xchg
or
out
rolb
xchg
cmp
adc
nop
dec
push
in
popf
mov
into
call
or
cmp
mov
jl
pop
xsha256
cmpsb
nop
sub
xchg
mov
pop
mov
xlat
and
nop
xlat
es
xchg
sarb
mov
xor
loop
mov
daa
scas
mov
adc
or
dec
xor
push
pop
in
jle
adc
data16
xor
pusha
jg
or
mov
add
repz
sbb
fidivrs
push
sahf
orl
push
mov
std
je
popf
addr16
mov
xor
scas
mov
pop
fisttpll
sahf
xchg
bound
xor
je
pop
cmpsb
or
and
inc
xchg
imul
pop
xchg
cmp
and
repnz
cs
fsubrs
xchg
push
scas
xchg
mov
outsb
or
mov
shlb
cmc
jl
dec
jecxz
out
jnp
shrb
adc
jnp
xor
outsl
sbb
fstps
pop
inc
cmc
mov
inc
add
jae
jecxz
inc
in
sti
inc
aaa
push
gs
data16
shr
adc
cwtl
addl
cld
out
dec
fwait
adc
stc
inc
mov
aad
not
std
or
cld
or
push
xchg
pop
cmc
mov
pop
rolb
test
stc
inc
sbb
std
dec
fs
and
lret
stos
push
mov
sub
mov
popf
test
popf
xor
mov
mov
pushf
mov
mov
je
jbe
inc
out
lahf
outsl
dec
pop
mov
sub
insb
cwtl
lahf
push
add
cmp
jne
jno
fs
adc
pop
inc
mov
repnz
mov
dec
jnp
clc
lret
cld
movsbl
in
sbb
push
popa
xor
push
ficoml
adc
into
dec
out
jne
lret
or
cmpsl
xor
or
aaa
imul
aad
push
inc
add
jp
outsb
xchg
jecxz
mov
inc
sub
gs
pop
cmpsb
or
jae
cmc
loop
imul
add
daa
add
sbb
mov
inc
fs
imul
ret
mov
popf
out
mov
mov
rcrl
and
adc
push
lods
cmc
add
fsubs
push
fdiv
insb
xchg
sub
test
iret
jnp
push
jmp
adc
or
jns
mov
mov
push
subl
ret
sbb
cmpsb
xchg
fsts
sti
jbe
clc
scas
mov
mov
mov
cmp
ds
dec
mov
call
sahf
test
mov
mov
inc
pushf
mov
jno
cwtl
mov
dec
adc
arpl
fsts
fdiv
mov
imul
cltd
pusha
loopne
jno
stc
mov
or
int
sbb
jecxz
dec
sub
sbb
sub
cmp
pop
adc
dec
sub
pop
push
lods
popa
das
bound
sbb
mov
xchg
push
scas
ja
dec
into
shlb
push
mov
add
movsb
fwait
loopne
jbe
cltd
lret
fdivp
loopne
loopne
outsb
adc
icebp
mov
cs
adc
jns
ds
adc
xor
and
addl
ja
push
loop
fiaddl
jb
xchg
outsb
cmp
aam
and
ret
imul
push
push
int3
pop
hlt
std
jbe
rcrb
fs
outsb
fsubrp
stos
hlt
jbe
les
leave
lahf
popf
pop
cmpsb
cld
xor
mov
inc
fbld
gs
push
inc
adc
das
push
popf
xchg
xchg
pushf
stos
fwait
clc
popf
mov
out
movsl
stos
clc
fldenv
inc
repz
pop
mov
dec
imul
sub
push
mov
pop
in
or
adc
inc
gs
fldz
js
test
xor
decb
pop
lahf
adc
mov
es
call
jno
jbe
icebp
imul
mov
fmull
out
mov
jns
pop
mov
aaa
jbe
mov
mov
inc
mov
js
mul
int
ret
cmp
out
jnp
mov
cmp
cmp
sub
in
adc
js
addr16
adc
xchg
xor
mov
scas
and
fsubrl
jmp
adc
xor
xor
or
int
cmp
cmp
inc
sbb
popf
jne
test
repnz
mov
cli
stos
xchg
dec
add
gs
xor
or
add
and
fstpt
sub
cmp
push
lahf
push
es
call
sahf
mov
sub
scas
push
out
loopne
cmp
jecxz
in
lods
cmp
sub
jb
repnz
enter
fucomip
mov
std
ret
lods
cltd
es
scas
mov
inc
mov
dec
lret
lret
mov
stos
loopne
xchg
push
in
mov
push
mov
sbb
mov
aam
cli
shlb
icebp
push
and
clc
adc
xchg
or
jne
ja
pop
repz
sahf
xor
js
fidivl
xchg
cmc
sub
push
stos
add
xchg
and
pop
cs
sti
pusha
ss
cmc
popa
ret
scas
push
push
pop
or
push
ljmp
jmp
cmc
xchg
cmp
ljmp
repz
stos
fwait
ljmp
gs
adc
int3
test
xor
cmp
mov
pop
arpl
out
sbb
mov
stos
inc
cli
dec
and
sub
lret
ret
repz
xchg
call
pop
cmc
call
cmpsl
bnd
jl
lret
xchg
std
in
sbb
ret
mov
jecxz
aas
add
dec
sbb
jae
mov
pop
stos
jp
push
loope
nop
nop
stc
nop
ret
es
es
xchg
mov
dec
hlt
fwait
es
jge
mov
mov
xlat
and
cld
out
cmp
test
dec
fsubrl
push
lds
out
inc
mov
ja
mov
aaa
mov
mov
gs
mov
xchg
addr16
jmp
dec
xor
loopne
ffree
stc
fldenv
leave
bound
cmpsl
into
jae
movsl
enter
movb
adc
xor
fidivrl
sub
jo
sahf
pop
sbb
cld
enter
add
xor
movsb
movb
xchg
and
gs
cs
push
dec
cmp
notb
nop
sbb
mov
xor
insb
adc
jp
imul
inc
sbb
test
push
xor
sub
cmp
push
mov
mov
andl
cmpsb
out
adc
sahf
imul
push
stos
jecxz
aam
push
popf
mov
sub
xchg
and
add
popa
or
ds
mov
pop
in
cmp
push
mov
and
popa
mov
clc
jmp
stc
jmp
andl
leave
push
testl
scas
sub
es
push
ljmp
cs
call
lret
je
sub
add
mov
pop
dec
adc
rcl
cmp
rol
inc
dec
mov
repz
lea
pop
or
push
add
adc
jmp
testl
push
popf
repz
movsb
mov
dec
mov
pop
xor
daa
into
mov
imul
movsl
push
xchg
jmp
rcl
mov
jmp
cmpl
jmp
mov
jl
xchg
mov
rclb
hlt
xchg
or
loopne
ds
sbb
shr
leave
bound
lods
cmp
inc
push
subl
arpl
xchg
ds
je
scas
gs
push
sbb
inc
rcrb
xchg
add
mov
and
fwait
mov
jg
in
sbb
sub
popf
pop
jmp
testb
sbb
jnp
pushf
sahf
scas
adc
push
mov
out
sub
aad
and
inc
popa
clc
ja
jge
and
cs
or
jne
cmpb
setge
mov
test
jno
xor
or
out
pop
xor
pusha
ret
iret
ficomps
or
lahf
sub
cmc
mov
cmpb
repz
ja
pushf
lret
stos
mov
mov
dec
movb
out
insb
and
jle
or
popa
test
sub
pop
push
mov
lret
xlat
cmovg
orb
xchg
mov
inc
lea
bound
aas
push
pushf
jecxz
jmp
sub
or
mov
sarb
push
sub
cmp
xlat
pop
or
daa
std
je
adc
xchg
add
dec
mov
inc
inc
add
mov
in
lods
cs
adc
test
je
mov
jge
movsb
cmp
cmp
dec
imul
enter
sub
jl
lds
addb
popf
mov
sbb
pusha
jae
mov
cli
adc
loop
push
adc
xor
and
jns
sub
sarl
fistpll
ror
mov
and
push
stc
sub
lods
mov
popf
xor
fcomps
push
xor
test
pop
and
iret
mov
add
jecxz
dec
stos
lods
clc
lcall
push
out
mov
es
bswap
xchg
lods
aas
data16
cmp
inc
insl
cli
ljmp
dec
mov
adc
jmp
andl
ljmp
stos
mov
push
jmp
mov
ljmp
lcall
stc
addr16
sub
lret
std
andb
add
and
or
push
inc
cli
adc
stos
mov
xlat
outsb
cmp
shlb
mov
mov
fwait
arpl
mov
mov
pop
sub
lea
aaa
add
inc
data16
and
push
mov
push
clc
mov
sub
add
fstps
testl
stos
xchg
inc
cwtl
dec
call
pop
filds
adc
scas
stos
sub
pop
repz
inc
es
mov
test
gs
mov
jmp
adc
xchg
xrelease
jbe
loopne
aad
or
clc
repnz
inc
push
dec
dec
jbe
mov
push
push
enter
out
sbb
sahf
imul
dec
lret
hlt
ret
outsl
insl
add
xchg
mov
pop
pop
adc
loopne
push
rclb
xor
sbb
cmp
notb
inc
pop
mov
inc
shlb
leave
aas
pop
sub
iret
add
je
sub
dec
loop
rcrb
push
icebp
int
int
test
dec
popf
mov
in
daa
pop
fstps
cmp
insl
cli
subl
and
stos
push
out
andb
mov
mov
push
ret
adc
insb
push
xor
inc
xstore-rng
in
push
xor
adc
ss
outsb
icebp
outsb
lahf
inc
jl
cmp
test
cmp
iret
xchg
adc
in
dec
xor
jg
xchg
je
movsb
sti
mov
movsl
push
mov
std
loope
push
ja
push
and
popa
add
inc
fsub
jne
xchg
xor
mov
cmc
es
pop
rolb
jecxz
mov
mov
clc
ljmp
pop
cmp
popa
mov
push
in
stc
or
call
out
cwtl
pop
and
shlb
ja
mov
jno
pop
daa
sbb
xchg
dec
push
std
int
sbb
pop
lret
jno
adc
clc
ret
sub
imull
inc
fdivrs
inc
inc
insb
lcall
std
or
pushf
outsb
call
std
adc
add
gs
jge
xchg
ja
sti
mov
push
jecxz
sbbb
insb
pop
add
fisubl
scas
pop
mov
mov
outsl
sbb
sahf
lea
fsubl
fdiv
jg
sbb
cmp
jb
cmovo
jecxz
inc
lcall
test
pop
pop
mov
lods
jl
pop
movups
xor
inc
xor
fcompl
out
sbb
lret
lcall
out
lods
mov
inc
mov
mov
test
push
call
daa
mov
lods
xchg
mov
xlat
divl
shrb
pop
pop
imul
pop
sbb
insb
jns
mov
jnp
pop
lods
roll
into
push
loopne
pop
neg
pusha
loopne
sbb
and
call
inc
in
push
inc
adc
xchg
cmp
in
sbb
pushf
test
lea
fistl
lret
xchg
mov
mov
notb
mulb
test
sub
clc
mov
enter
and
mov
movsl
dec
arpl
jp
mov
enter
or
in
sti
push
push
test
xchg
pushf
fnsave
add
dec
repz
push
xchg
dec
stos
fdivl
push
lock
mov
pop
dec
sbb
add
and
pop
daa
dec
push
inc
out
push
jne
rol
cli
aas
scas
stos
xchg
shl
lret
sub
rep
hlt
add
dec
pop
imul
xchg
jl
sub
in
mov
adc
pushf
xchg
xor
scas
aas
es
call
leave
bound
sub
test
push
add
push
popf
shll
stos
arpl
daa
addr16
pop
push
sub
jmp
cmp
inc
or
mov
call
lds
les
mov
cmpsl
cmpsb
inc
inc
cmp
ja
aaa
int3
mov
sbb
jbe
sub
lret
decb
xor
push
mov
insl
cmp
or
mov
or
push
add
jmp
cltd
test
add
test
jno
jl
lock
in
sub
add
sub
sub
jns
push
dec
pop
hlt
mov
test
shll
or
enter
pushf
adc
nop
je
daa
xor
mov
dec
dec
and
mov
gs
sarl
aam
mov
popa
cmc
lret
adc
fnstenv
in
push
inc
or
mov
aaa
test
pushf
out
ss
xor
ret
pusha
les
mov
bnd
add
mov
jne
in
fdiv
iret
dec
fwait
push
fstpl
jae
stos
sarb
loope
stc
jbe
cmp
cmp
xor
pop
push
jne
pop
repnz
rol
jl
jns
dec
dec
sbb
shld
mov
in
sub
scas
mov
sbb
xor
pop
scas
int3
arpl
add
stc
mov
int3
insb
add
add
inc
scas
mov
mov
pushf
xor
in
mov
cmp
adc
icebp
into
jne
push
cmpsl
stc
shr
and
scas
sbb
jbe
lcall
out
arpl
scas
rcrb
icebp
lahf
jne
in
push
sub
mov
xchg
out
mov
pusha
in
cwtl
sbb
dec
loope
movb
test
repnz
mov
out
mov
es
cmc
mov
xor
ret
lahf
mov
adc
dec
loop
sahf
xor
xor
add
cmpsb
pop
loop
fmuls
mov
aaa
jnp
adc
sbb
inc
es
stos
pop
sub
xor
lahf
bound
dec
xor
add
dec
add
cmp
das
mov
popa
dec
rcr
or
insb
outsl
hlt
fidivs
scas
mov
cltd
push
mov
jge
arpl
fs
dec
or
jl
mulb
out
nop
out
stos
dec
sbb
rcll
dec
bound
sbb
test
mov
subb
sbbl
scas
rorl
jbe
jg
push
mov
fidivrs
in
cwtl
lcall
jns
lret
mov
popa
les
xchg
lods
stc
insb
dec
jecxz
xchg
cltd
mov
mov
mov
jp
xchg
sbb
adc
mov
in
xor
jmp
aas
dec
sub
add
insl
pop
mov
xor
stos
inc
loope
std
or
enter
aam
mov
mov
and
pop
fimull
aas
mov
fnsave
in
out
ja
out
call
out
sbb
out
and
push
xlat
jne
add
dec
icebp
push
jmp
mov
lods
sbb
pop
sahf
lods
mov
xor
adc
js
leave
mov
pop
lret
fldl
push
jmp
cmc
fidivl
add
cmpsl
arpl
fcoms
out
push
jne
mov
rcl
arpl
dec
das
add
push
sub
sub
add
inc
mov
flds
mov
or
popa
xchg
sub
int3
pop
int
add
mov
xor
repnz
dec
stc
cmp
sub
jmp
push
daa
jo
clc
cmpsb
dec
lock
lahf
sub
xor
or
sbb
xchg
inc
jle
push
outsl
addl
sub
mov
daa
mov
lret
mov
mov
shlb
stc
adc
jg
xor
imul
arpl
test
add
in
xchg
dec
ret
je
jb
sbb
nop
sub
or
jl
fnsave
fs
dec
popa
add
lret
sbb
pop
push
mov
mov
int3
mov
mov
or
movsb
adc
and
mov
dec
lret
sbb
dec
jne
test
jg
sub
ret
jle
lret
dec
in
pop
add
pop
lcall
jae
ret
xchg
lods
divb
mov
sbb
push
or
jb
mov
xchg
out
loopne
push
inc
push
lahf
mov
pop
imulb
je
adc
into
dec
mov
notl
ljmp
dec
imul
aas
mov
dec
inc
push
lods
xchg
das
fsubrl
mov
call
or
inc
in
cmpsl
sub
fsubs
mov
add
inc
mov
jl
add
lods
inc
xchg
sub
iret
mov
inc
scas
mov
cs
insb
jne
mov
pushf
sub
out
daa
mov
imul
xchg
dec
lret
das
mov
dec
mov
sahf
lods
inc
cltd
push
inc
pop
fstpt
and
mov
mov
pop
leave
or
rol
dec
sub
xlat
pushf
mov
inc
cmpsl
pushf
cmpsl
aas
sub
push
pop
fistps
jge
mov
or
lds
xlat
repz
fsubrl
pushl
add
rcll
pop
sarb
ror
repnz
lock
mov
jmp
mov
psrlq
mov
clc
xor
push
test
jl
cmp
mov
in
and
dec
scas
inc
in
pop
mov
and
dec
in
test
sarl
cwtl
or
imul
dec
mov
dec
sub
loope
inc
stos
pop
adc
sar
mov
push
imul
movsb
inc
in
jmp
shrb
adc
sub
adc
add
and
cmc
jbe
cmpsl
mov
pop
or
stos
in
test
fst
cmp
lret
test
ja
and
fsubl
popa
gs
ficoml
inc
pushf
mov
push
sub
mov
ret
mov
sbb
cmpsl
dec
mov
inc
jns
adc
inc
scas
repz
mov
mov
gs
call
mov
mov
in
fucomp
ret
jmp
stc
movsl
add
sub
shlb
movsl
into
dec
bound
jl
aam
jns
sbb
orb
cs
xlat
icebp
dec
ret
hlt
sahf
adc
lock
jle
pop
sub
sarb
push
and
jle
and
add
movsb
push
test
lahf
ficompl
out
xchg
xorb
inc
lcall
ljmp
outsb
sbb
dec
fwait
xor
add
aad
sbb
pusha
mull
jle
stc
lahf
ss
xchg
mov
sbb
das
adc
cmp
cld
mov
in
jne
xchg
sub
dec
sub
pushf
ret
mov
mov
push
popf
fnstcw
in
stos
jae
call
lds
test
pop
ja
inc
push
fld
pushf
imul
sbb
mov
and
xor
fadds
aas
jb
shll
sbbl
mov
cmc
leave
int3
imul
xchg
add
pop
idivl
insb
xchg
mov
popa
mov
stos
outsl
sti
inc
out
test
cmp
dec
lods
adc
adc
loop
nop
push
push
or
stos
stc
inc
fs
inc
fcomip
inc
xchg
ljmp
hlt
sti
pop
sub
sub
add
call
sbb
lods
mov
dec
stos
xorb
cmp
repnz
and
sbb
fldt
xor
adc
push
sub
inc
pop
cmp
sub
ret
dec
jmp
jg
fbstp
mov
clc
and
pop
scas
and
pop
scas
jne
sbb
xchg
xlat
outsb
leave
out
cs
sbb
jno
xlat
outsb
gs
xchg
sarl
lods
fistps
adc
outsb
cmpsb
adc
scas
scas
fistl
add
sbb
scas
cs
push
in
repnz
insl
aas
mov
sbb
xchg
shll
lcall
jo
inc
push
test
xchg
pop
pop
and
push
xchg
and
sbb
fcomip
shl
rcrl
mov
push
shll
jl
sub
mov
dec
dec
sub
popa
out
xchg
mov
sarl
add
iret
stos
adc
loop
pop
fistpll
mov
pusha
adc
xchg
sub
push
out
cmpsl
es
lret
xlat
out
sbb
loop
adc
jo
fstpt
sbb
mov
inc
inc
mov
neg
ret
aaa
into
add
push
loopne
pushf
jmp
mov
jno
pop
fisubrl
daa
rcrl
fidivl
jg
aaa
mov
sub
or
shrl
ret
cli
pop
push
add
fidivrs
int3
fdiv
repnz
jb
sbbb
repnz
push
les
xchg
fwait
mov
inc
rolb
shl
scas
inc
mov
cmp
aad
push
call
push
or
cld
xchg
imul
cmp
je
pop
gs
ficompl
popl
in
test
xchg
jo
cld
jo
push
sub
and
addr16
shlb
jle
sysret
jle
add
mov
push
push
outsl
mov
dec
repnz
sbb
mov
imul
test
pusha
stos
push
movsl
cmp
add
push
lods
xchg
je
ret
aad
xor
cld
out
lret
sbb
ret
pop
inc
cmp
dec
retw
dec
jge
push
out
dec
jl
push
movsl
xor
std
xchg
jle
jnp
fcomps
data16
test
push
add
insb
jge
add
jne
ds
cmp
insl
clc
in
fidivs
push
bound
mov
push
push
dec
test
stc
inc
sti
xchg
or
cmp
mov
ficoms
adc
jne
imul
pop
sub
enter
jno
push
test
or
xor
cmp
mov
mov
xor
insb
scas
dec
jp
inc
dec
adc
push
jb
ja
and
jno
dec
jmp
iret
dec
and
ja
mov
stos
fidivl
insl
push
mov
or
lea
lahf
or
in
adc
lds
aas
jge
shr
popf
pop
ds
or
das
pop
pushf
sbb
pop
test
mov
jl
lret
pop
jecxz
pop
adc
pop
dec
pop
imull
cmp
js
aaa
fwait
push
lods
int3
push
std
xchg
mov
pushf
imul
jo
cmpsb
iret
pop
mov
addl
rcrl
pusha
push
jb
lret
outsl
dec
fnstsw
jle
gs
gs
mov
aas
cmp
mov
dec
and
dec
sarb
cmp
sub
aaa
mov
ret
jmp
jp
shrb
cmp
movsb
push
push
adc
nop
mov
lds
rolb
push
xchg
shr
lea
xor
jne
stc
or
ljmp
and
push
mov
mov
sahf
je
xlat
mov
and
sbb
sbb
xchg
push
fbld
sub
pop
cld
push
subb
push
mov
xchg
or
mov
mov
or
mov
jae
push
jbe
sbb
inc
cmp
dec
test
sub
push
and
mov
inc
rorb
mov
fisubrl
test
or
shr
sub
out
decl
cs
sub
cmp
jmp
push
divl
mov
push
sbbl
mov
and
fcmovbe
jbe
push
cld
stos
scas
cmpsb
popl
push
les
mov
push
sbb
and
or
xchg
cmpb
inc
or
cld
pusha
or
cmpl
repnz
mov
fcmovnb
mov
lds
lret
dec
adc
stos
lds
in
test
lock
aas
jl
das
mov
xchg
or
cmpsb
xchg
daa
fdivs
test
lahf
jnp
call
or
adc
jg
and
outsl
fimuls
insb
inc
insb
fbld
leave
add
stc
hlt
jge
scas
sbb
pop
sbb
shrl
mov
jo
cmp
xor
in
inc
or
out
aas
fldt
and
je
into
mov
dec
jmp
jl
xor
movsb
fcomi
fsubr
push
in
sbb
pop
mull
inc
add
and
push
jecxz
pop
adcl
out
cmpsl
bound
mov
test
xor
lea
stos
inc
fcmovnu
hlt
xor
push
in
jnp
adc
xor
jmp
imul
cmpsl
adc
sbb
imul
or
icebp
pop
xor
adc
adc
pop
inc
add
arpl
ljmp
ret
push
lahf
push
inc
dec
pop
or
frstor
andl
pop
or
ja
jmp
cmp
mov
ds
sbb
cmc
out
cld
add
push
addr16
insb
test
push
xchg
jb
into
loope
imul
in
add
aad
xchg
or
adcb
xorl
rcll
scas
add
pushl
dec
int3
arpl
fisttps
xorl
icebp
loop
sbb
dec
fnstsw
xchg
inc
test
dec
push
mov
and
das
in
fisubs
ds
adc
mov
jle
mov
and
loopne
mov
xor
arpl
insb
inc
jge
jnp
into
mov
sbb
iret
movsl
mov
xchg
mov
iret
outsb
mov
pop
outsl
into
lds
push
fdivl
insb
js
fsubl
dec
dec
arpl
jge
cmp
xchg
and
jo
xchg
leave
mov
pop
out
fldt
loop
jecxz
ss
cmp
xor
adc
out
adc
nop
hlt
nop
loop
xor
mov
xchg
sar
xlat
mov
sbb
mov
or
inc
push
in
or
xchg
lcall
push
addr16
neg
ror
pop
js
push
and
aaa
jecxz
sahf
andb
sub
push
mov
cmp
adc
mov
popf
jl
add
aaa
jne
jne
or
rcll
and
ja
jle
sbb
pop
cld
and
inc
xor
scas
mov
int
imul
lret
xor
mov
mov
int
xchg
add
gs
sbb
and
ljmp
test
mov
cmc
test
adc
mov
pop
lock
inc
fs
add
mov
jl
daa
repnz
std
pop
insl
lcall
cmpsb
inc
jle
stc
stc
nop
stc
fs
and
sbb
inc
call
push
cmpsl
test
cld
and
stos
cmp
pop
push
fsubrl
jge
sub
push
test
and
inc
jecxz
jbe
add
movl
aaa
lods
or
cmp
cmp
bound
jmp
ret
xor
pop
push
pop
out
addr16
cmpsb
inc
cmp
scas
mov
testl
test
std
loopne
stos
mov
fdivp
mov
mov
or
mov
outsb
ret
mov
aaa
imul
cltd
mov
std
sub
xlat
push
cmp
mov
and
cmp
mov
sbb
jp
imul
xor
push
xor
xor
aas
int
push
jge
xchg
xchg
jb
fs
mov
mov
shr
test
adc
cmpsl
addl
arpl
imul
jmp
fidivl
sbb
jg
clc
stos
cld
dec
and
xor
mov
push
scas
mov
rol
movsl
shrb
xorb
in
aam
pop
fdivl
pop
pop
and
daa
inc
mov
push
mov
fmulp
stos
sub
data16
inc
fisttps
pop
lods
daa
push
scas
imul
sub
loopne
movsl
or
lahf
xchg
mov
pusha
sub
out
or
imul
jg
push
xchg
out
or
mov
xchg
mov
mov
push
jp
or
push
addr16
test
test
pop
inc
mulb
adc
push
mov
and
cld
sub
mov
addr16
push
test
in
push
jno
sub
jl
inc
mov
fistpll
add
and
push
or
add
xor
sbbl
fldenv
fdivr
adc
jns
lahf
scas
ljmp
ljmp
cmp
jecxz
dec
dec
loopne
out
xchg
ficompl
push
xchg
mov
fldcw
in
cmp
sub
aas
xchg
mov
adc
and
mov
mov
aad
scas
test
subl
out
or
mov
rcrb
icebp
loopne
sub
add
cwtl
nop
addr16
jno
cmp
jo
arpl
mov
cmp
xor
xchg
sti
nop
sahf
push
jg
mov
mov
aad
out
push
inc
fnstsw
dec
adc
jle
pusha
sub
stc
push
push
addl
dec
call
fimuls
or
mov
push
push
aam
xchg
les
pop
jnp
mov
sbb
ret
repz
cmp
repz
xchg
pop
xorb
lea
xor
mov
pop
cmp
aaa
cmp
mov
push
xchg
lret
add
cmp
mov
dec
or
rclb
popa
adc
test
pop
dec
not
add
cmp
in
fists
ss
mov
dec
repz
xchg
add
cmp
fs
adc
addr16
xchg
lods
subl
int
lcall
out
popf
add
jns
popa
pop
ds
xchg
pop
test
sahf
xor
imul
out
pop
scas
out
push
inc
sti
lahf
ss
bound
ds
lods
adc
arpl
cmpsl
cli
stos
fadds
sub
cmp
jecxz
call
cltd
test
mov
mov
cmc
adc
jl
enter
insl
sbb
lds
decl
hlt
iret
hlt
push
dec
sbb
pop
mov
push
mov
lcall
sub
xchg
in
cmp
mov
incl
mov
mov
xchg
sub
mov
jo
pop
add
pop
repnz
adcl
cmp
addr16
and
repz
push
stc
sbb
out
xchg
jo
or
mov
repz
push
fisubs
push
xlat
movsb
cmp
xchg
js
sahf
in
shl
mov
pushf
xor
sub
xchg
mov
lods
pop
dec
xchg
cmpsl
xchg
dec
std
cltd
lcall
adc
mov
mov
outsb
daa
aas
scas
adc
loope
imul
push
out
rcll
pop
shlb
adc
jge
xor
mov
ljmp
add
mov
repz
adc
add
out
stos
inc
popa
stos
inc
rorl
fldcw
notl
or
out
xchg
lcall
and
pop
test
inc
or
or
jmp
inc
adc
loopne
dec
dec
cmp
fnstsw
dec
cmpb
pop
pop
in
add
sti
mov
in
sti
es
sti
mov
andb
lret
and
mov
mov
daa
xchg
xchg
andb
rcrb
scas
xchg
jae
decb
mov
push
fwait
or
push
call
dec
lcall
hlt
sub
push
sub
xor
mov
sub
jnp
in
stc
xchg
sub
cmc
mov
mov
lods
xchg
icebp
cmp
jmp
mov
mov
push
out
je
jmp
movsb
mov
jmp
decl
mov
in
movsb
insb
mov
push
mov
mov
push
bnd
aad
xchg
lahf
andb
mov
pop
jle
jb
or
rol
push
inc
imul
int
xor
cmp
bound
mov
mov
jbe
pop
addr16
sub
lret
rcll
gs
adcb
ds
mov
adc
movsb
jne
shll
fstps
out
mov
adcl
add
sbb
cmc
xorl
xchg
push
ss
in
mov
sbb
pop
scas
out
nop
sbb
dec
mov
lahf
and
pop
xorl
shll
pop
imul
sbb
mov
jge
fsubs
inc
out
enter
addr16
and
cwtl
xchg
add
ljmp
aas
cmp
insl
clc
adc
sub
mov
adc
jb
insb
movsb
lret
sbb
jae
sbb
sbb
pop
out
mov
rcr
iret
xchg
je
xchg
addl
push
push
aaa
xor
sub
lods
jo
aad
test
mov
inc
in
xlat
loop
pop
xor
test
sub
fildl
dec
add
jp
iret
and
std
pop
out
mov
fisttps
or
pusha
xor
mov
sub
sbb
jne
adc
cli
int3
xor
push
and
fcomi
dec
ljmp
mov
push
push
mov
test
inc
popf
push
jb
cmpsb
xchg
lea
jnp
pushf
aas
mov
or
mov
insl
insl
adc
insl
adc
outsb
mov
dec
out
test
repnz
xchg
pop
adc
jb
xchg
add
fs
loopne
ljmp
stos
mov
pushf
call
adc
stc
xlat
fadd
adc
pop
cmp
bound
shlb
in
add
int
and
out
sub
sbb
or
push
jp
stos
test
gs
pop
sbb
rclb
cwtl
stos
inc
int3
jae
xorl
shr
push
pop
in
jp
xchg
jmp
inc
js
mov
in
xor
test
xchg
adc
fcoms
mov
cmpsl
pop
or
mov
pop
stos
and
test
jmp
xor
scas
add
push
mov
outsb
insl
subl
ds
or
lcall
mov
scas
aaa
fdiv
int3
ds
push
push
inc
fildll
les
inc
dec
push
inc
stc
in
jne
loope
or
in
add
adc
jnp
stos
xchg
mov
push
leave
outsb
sub
jnp
xor
pop
movsb
xchg
and
jmp
call
jecxz
scas
and
sbb
ret
enter
sbb
mov
das
inc
xchg
lahf
test
loop
in
dec
xor
aaa
push
sub
mov
imul
imul
jl
inc
mov
ret
addr16
ss
inc
fsubl
mov
mov
lods
cs
popa
addl
js,pn
inc
mov
gs
and
testb
pop
mov
add
mov
push
mov
test
daa
mov
fwait
mov
orb
or
inc
les
add
addr16
cwtl
push
mov
ret
sub
imulb
and
in
jno
cmpsb
addr16
negb
dec
test
loop
jns
in
mov
lret
mov
mov
sub
xor
test
movsl
cmp
fwait
js
add
out
inc
dec
call
divb
mov
sbbl
ret
mov
and
fsubs
push
push
jecxz
add
push
ds
ljmp
popa
xor
ret
mov
or
aam
aad
mov
faddl
decl
cmpb
cmp
adc
pop
sbb
mov
sub
subl
inc
movsl
push
fisubrs
insb
ja
decb
fsubr
shl
cli
dec
dec
stos
sub
inc
push
add
mov
pop
aas
or
scas
xlat
jbe
stos
mov
lret
add
stos
hlt
jbe
mov
xchg
cmp
ret
repz
outsl
pop
imul
ljmp
repz
out
loop
cmpsb
aam
add
pop
loopnew
xor
sarb
imul
inc
hlt
fadds
cmc
sub
jae
int3
dec
xchg
imul
imul
insb
dec
loop
outsb
lea
mov
pop
imul
andl
hlt
icebp
xchg
stc
jle
add
xor
mov
jg
cmp
inc
pop
out
jb
push
je
mov
mov
hlt
fisttpll
lret
inc
neg
sub
int3
call
mov
dec
shlb
mov
ror
push
lcall
in
std
scas
repz
jmp
push
aam
pop
pop
arpl
es
jg
js
xor
dec
in
sub
inc
inc
mov
xchg
jle
mov
cld
xchg
xchg
inc
fs
in
js
in
fstl
aaa
shrb
out
cmp
gs
lahf
xchg
pushf
mov
scas
or
rcrb
out
and
xchg
inc
push
lahf
inc
xor
xchg
ss
cltd
mov
mov
into
std
int3
xchg
out
jbe
in
push
inc
cli
inc
xchg
mov
leave
and
xchg
shlb
shll
pop
repz
int
push
lcall
sub
cmpsl
fistpl
mov
jae
mov
push
je
sti
imul
imul
cli
movsb
push
test
or
subl
loop
rolb
and
test
rcrl
out
jnp
lods
ret
jne
addr16
out
mov
inc
and
in
sub
test
mov
outsb
hlt
mov
imul
cltd
or
adc
notl
add
dec
mov
push
cmp
inc
add
adc
je
xchg
das
push
fidivs
pop
jmp
push
dec
call
in
jl
out
lcall
sub
inc
testb
mov
das
add
push
stos
pop
xchg
xchg
add
std
popf
xchg
mov
push
imul
inc
cmp
aaa
fmuls
push
repz
daa
cli
mov
mov
pop
pop
sbbl
jecxz
add
pop
mov
jbe
daa
bound
mov
fsubr
orl
out
enter
or
and
jle
push
add
mov
icebp
setbe
adc
mov
pop
icebp
hlt
sti
xor
xchg
mov
xlat
lods
push
in
fnstsw
cltd
icebp
push
repz
jo
les
sbb
ljmp
fdivrp
mov
rcl
les
pop
or
sub
popa
cmp
cs
mov
adc
andb
sti
jnp
and
adc
sbb
in
mov
stc
or
int3
cmpps
pop
stc
xchg
das
mov
cmpsb
or
sbb
dec
imul
ja
addr16
movb
mov
test
mov
cmp
pop
jae
enter
in
shlb
and
push
mov
and
das
xchg
xor
inc
ljmp
cmp
cs
sub
dec
add
push
lods
lods
mov
sub
into
pusha
add
hlt
sarl
cmp
movsb
dec
sbb
xchg
test
inc
jmp
sub
mov
loopne
jecxz
mov
jbe
and
popa
adc
shrl
shll
adc
push
mov
sub
jbe
jle
add
mov
pop
scas
xchg
sbb
sbb
mov
sbb
adc
out
cmp
ds
cli
push
mov
insb
xchg
jmp
xchg
inc
int
cmp
lods
sub
xchg
jns
xor
fwait
xor
jecxz
inc
push
les
psadbw
ja
rcll
push
shrl
or
leave
mov
mov
scas
push
cmp
xor
mov
fwait
stos
loope
repz
cmp
fnsetpm(287
ret
dec
push
cmc
nop
mov
mov
lods
cmpsb
les
jg
pop
insb
mov
mov
mov
push
insb
adc
outsb
adc
push
outsb
movsl
inc
dec
cmpb
aad
dec
negb
push
stos
loop
imul
sub
sub
cmp
cmpb
loopne
frstor
push
sub
pop
loopne
cmp
popa
push
pop
lock
pop
jae
ds
popa
shlb
adcl
xor
jo
adc
arpl
popf
and
xchg
rclb
mov
push
addr16
nop
test
sbb
or
xor
and
or
adc
roll
jnp
stos
lods
gs
sub
jne
pop
inc
dec
jmp
xor
inc
ds
sub
xchg
pop
repz
lock
fcomps
push
push
jmp
fwait
pop
cmpsb
int3
adc
test
mov
hlt
cmp
pusha
mov
std
jo
xor
xchg
outsb
stos
cwtl
pop
xchg
dec
sbb
jns
lcall
add
lret
sub
jle
mov
pop
dec
or
add
xor
fcomps
sbb
ret
sub
imul
jle
fimuls
je
sub
rcl
ud2
sahf
pop
mov
enter
iret
jbe
stos
push
fwait
dec
lret
jb
lock
pop
xor
repnz
test
lods
pop
lcall
mov
ss
sub
inc
jnp
arpl
xchg
scas
pop
mov
std
sbb
cmp
adc
cmc
jge
mov
inc
nop
jbe
mov
dec
add
or
pop
fs
add
mov
adc
outsl
lcall
stos
dec
mov
xchg
add
jns
loop
andl
fsubrs
pop
insb
ljmp
addb
bnd
out
cmp
shrl
sub
aam
xchg
pop
les
call
sub
add
mov
pop
cmc
arpl
xchg
sub
fnstcw
lret
outsb
mov
xchg
add
sbb
add
arpl
sahf
and
mov
dec
cwtl
add
inc
ja
adc
cwtl
mov
enter
insb
add
fs
int3
sub
and
push
daa
mov
add
es
stc
ljmp
xchg
adc
scas
je
mov
outsl
pop
pusha
push
in
push
lret
xchg
std
jae
and
sub
jb
mov
adc
sbb
icebp
adc
cmp
fbstp
cli
testb
push
adc
jecxz
int
cmp
ret
repz
dec
sub
push
xor
mov
fistps
inc
dec
das
std
xchg
lahf
mov
sbb
xor
mov
lret
popf
xor
sub
pop
and
jmp
lahf
mov
mov
shl
jo
shrb
js
fildll
cmp
mov
ret
pop
cmp
mov
jbe
xchg
cmpsl
adc
popf
inc
enter
arpl
xchg
sub
jl
mov
cmp
cli
hlt
cld
xchg
es
icebp
dec
inc
xor
js
movsb
cmp
lret
ret
or
pop
inc
pop
lods
inc
push
jno
jbe
les
xchg
notl
stos
inc
inc
adc
ja
inc
cmpsb
xlat
push
jmp
cli
sub
pop
and
push
insl
fidivl
roll
sar
repz
dec
pop
out
xchg
mov
mov
push
in
psrlq
imul
push
in
push
xchg
in
test
or
das
push
lods
pop
xor
mov
insl
hlt
mov
rcll
repnz
inc
sbb
dec
jne
cmpsl
cmpsl
ret
testl
inc
adc
inc
je
dec
test
lret
insl
std
and
or
sbb
js
addr16
pop
xchg
fldpi
orb
in
ljmp
pop
xor
cltd
loop
jne
mov
cld
xchg
arpl
es
ret
testl
push
dec
and
outsl
nop
in
lds
add
inc
ds
adc
movsb
push
movsl
aad
fwait
xor
imulb
and
cmp
push
push
data16
mov
icebp
mov
ret
js
cmc
cld
mov
cs
dec
lock
push
mov
iret
in
dec
loope
or
cmpl
pop
ljmp
stos
pop
loopne
fdivl
add
out
inc
sbbb
push
sbb
enter
shr
loop
and
lds
ljmp
xchg
ljmp
jmp
insl
add
inc
xchg
jbe
shrl
cwtl
sub
int
iret
mov
jmp
or
push
push
testl
mov
and
or
jbe
outsl
sub
sub
jne
sub
int
in
dec
push
movsl
jl
shrb
xchg
rclb
je
cwtl
in
mov
sub
cmp
xchg
jo
mov
mov
imul
ja
mov
pusha
imull
sbbb
mov
shll
loop
xor
cmpsb
cmp
inc
addr16
xchg
fiaddl
adc
adc
pop
nop
fcompl
inc
mov
cmpsb
cmp
adc
and
mov
jp
jnp
adc
xchg
inc
jae
mov
or
mov
adc
inc
jbe
add
or
scas
adc
aaa
test
xsha1
cmpsb
or
test
ljmp
fcomip
xchg
jp
subl
sub
push
jp
sbb
jno
movsb
fstpl
jno
mov
mov
aam
sbb
and
add
testb
cmpb
mov
mov
test
push
subl
inc
outsl
jo
sahf
fists
test
adc
and
xchg
lea
movsb
cmp
jle
subl
sahf
xor
or
in
inc
outsl
into
gs
fisttpl
or
or
ret
sahf
shll
add
es
lahf
lret
lods
inc
cli
cmp
mov
jl
pop
outsb
loopne
lahf
push
out
mov
pop
data16
xchg
xchg
enter
nop
fs
les
hlt
mov
stc
rorb
add
mov
dec
pop
dec
jecxz
filds
or
sbb
xchg
dec
pop
outsb
add
push
mov
test
out
popf
ffree
pop
adc
popf
cmp
add
and
ljmp
icebp
mov
and
cs
dec
fbld
push
inc
fldl
xchg
or
sti
sbb
sub
add
xchg
cwtl
das
loop
adc
mov
push
movsl
xor
loope
jg
pop
es
xor
stc
nop
sbb
or
cmp
stc
sbb
or
aad
jmp
mov
out
insl
scas
je
fldl
sbb
and
or
shll
dec
loop
lcall
mov
dec
popa
and
push
push
inc
out
push
jbe
out
push
pop
xchg
xchg
sub
jge
and
in
lret
bound
shl
mov
inc
mov
lods
push
xchg
fcomip
enter
mov
enter
aas
mov
insl
sbb
push
mov
enter
sub
loope
dec
adcb
jo
bound
les
lret
gs
push
push
stc
inc
jbe
push
movsb
popa
mov
xchg
enter
mov
leave
loop
stos
inc
dec
add
mov
pop
pop
sahf
mov
scas
inc
fstl
sti
xchg
inc
stc
or
xchg
dec
rcrl
adc
rorl
sub
cmp
mov
in
cmp
fmuls
or
jle
inc
fmuls
xchg
gs
push
icebp
mov
fwait
xor
xchg
insl
add
dec
stos
inc
jle
cmpsl
lea
xchg
ret
loopne
pop
call
aad
cmpsl
ds
add
decl
fsubrs
push
lock
mov
jecxz
inc
or
cmp
push
jecxz
or
test
stos
mov
loope
push
aas
bound
xchg
push
lds
mov
jno
or
adc
pop
clc
xor
push
es
fildll
insl
test
sti
jno
xor
mov
cmp
cmpsl
std
xchg
aad
mov
subb
cmp
dec
sbb
addb
mov
sub
repnz
adc
dec
arpl
inc
mov
outsb
cwtl
cmp
lret
movsl
shr
mov
pop
cmp
push
lods
data16
xor
xchg
cmpsb
sbb
jg
or
cmp
insl
sub
pop
mov
fidivrl
loopne
clc
adc
aas
sbbl
adc
in
inc
xchg
in
mov
int
repnz
daa
cmc
mov
inc
fldl
popa
clc
lods
insl
inc
fistpl
mov
cmp
dec
cmp
insb
fcmovne
or
jle
push
and
pushf
xor
repz
mov
std
push
adc
testb
loop
imul
mov
mov
adc
jl
mov
cmp
cmc
mov
lcall
int
or
les
xchg
sub
mov
dec
stc
sbb
push
mov
ret
xchg
xchg
int3
lods
pop
popa
in
jle
in
ss
or
and
lcall
fidivrl
out
push
mov
lods
push
push
sub
jp
pop
inc
inc
push
push
dec
imull
popa
pop
gs
nop
and
sbb
mov
cs
push
out
dec
mov
insl
dec
cmp
cmpl
dec
mov
push
arpl
aaa
fwait
lock
pop
push
mov
inc
and
xchg
inc
inc
mov
mov
movsl
imul
push
mov
jecxz
int3
enter
inc
fildl
mulb
cmp
into
dec
jge
add
ss
xor
and
test
cld
inc
or
sbb
jle
call
dec
pop
mov
xchg
stos
jl
ds
int
insb
movsb
cmp
lods
push
cmpsl
sysret
add
xchg
pushf
dec
mov
and
std
jp
data16
jno
dec
shll
arpl
push
movsl
inc
leave
add
fdivl
xor
pop
xchg
and
and
insl
sbb
lods
addr16
sub
aad
mov
or
push
jp
inc
mov
cmp
js
shll
out
fisttpl
jne
mov
cmc
fs
mov
cwtl
int3
adc
stos
out
cwtl
das
adc
fimuls
gs
bound
stos
popa
lods
sbb
or
xchg
dec
lock
jno
std
cmp
mov
fdivp
sbb
into
cltd
movsl
inc
fcmovbe
out
inc
into
mov
push
mov
sbb
push
mov
lret
ss
mov
push
sarl
clc
sub
in
lods
mov
or
lods
pop
or
mov
test
mov
lock
sbb
lds
call
into
push
mov
xor
sub
mov
jp
and
repz
shl
out
int
les
ret
sbb
add
sbb
sarl
xchg
add
es
outsb
jne
lcall
fsubrs
repz
int3
ss
or
fsubs
repz
dec
adc
outsb
rolb
lock
and
pop
repz
mov
nop
hlt
out
shll
dec
fstpt
sub
ret
cmc
lds
in
add
lock
int
xor
mov
and
in
cmc
push
rcll
sbbl
addb
es
sarl
movsb
xor
jo
push
lret
dec
inc
adc
pop
inc
inc
fidivs
jl
loop
mov
sbb
iret
fmuls
adcb
dec
movsl
scas
ja
sar
jmp
loop
jecxz
stc
inc
leave
leave
rclb
cli
jmp
stos
fisubrs
xor
sub
jnp
jmp
test
and
inc
or
push
scas
inc
pop
popf
mov
fisttpll
out
stos
mov
adc
test
sarb
dec
sbb
fwait
mov
pushl
xchg
push
out
das
xor
mov
jb
add
scas
filds
mov
mov
outsl
mov
sbb
xlat
cmpsl
pushl
add
xchg
rorb
push
mov
mov
sarl
sbbl
cs
test
incb
stc
mov
out
push
rclb
adc
add
push
ljmp
inc
int3
cmp
inc
cwtl
mov
aam
inc
sub
popf
je
mov
xchg
je
xchg
mov
stos
or
fmul
repz
lock
fucomip
fiaddl
cld
loopne
xor
add
aaa
int3
ficompl
and
lahf
loopne
push
les
or
mov
out
loop
adc
std
addr16
push
loop
or
cld
or
xchg
xor
push
push
int3
mov
in
xor
mov
add
sarl
push
mov
mov
testb
cmp
adc
int
lods
aas
jge
arpl
subl
cmp
adc
popf
xor
out
fists
mov
lods
xchg
ljmp
decl
xor
aam
xchg
sub
push
repnz
push
mov
arpl
aad
daa
sarl
push
cmp
cwtl
hlt
loopne
lret
push
sbb
mov
and
test
aam
dec
outsb
test
shl
sub
dec
jg
ds
push
sub
leave
inc
xor
fwait
xor
lret
cmp
stc
and
fldl
inc
shlb
ror
out
cmpsl
pop
ret
cmp
shll
push
pop
icebp
mov
test
adc
cmpsb
test
ljmp
in
stos
xor
sbb
adc
leave
mov
icebp
sbb
loop
lock
ja
mov
cld
push
mov
and
pop
shl
popa
bound
enter
pop
into
or
dec
sbb
pop
aam
adc
cmp
pusha
sbb
and
dec
add
push
jo
dec
ss
out
ss
bound
test
xchg
pop
hlt
fsubrs
daa
fnsave
out
hlt
out
stos
gs
les
add
xor
sub
cmpsl
enter
fisttps
jb
cs
lahf
stos
inc
rcll
cs
aam
into
xchg
loope
xor
push
insl
mov
push
xor
mov
jae
outsl
dec
insl
xchg
push
pop
mov
or
mov
mov
fimull
notl
pop
testl
repnz
push
add
jg
out
imull
mov
lret
mov
adc
jp
push
fistl
shlb
shll
cmp
sar
mov
std
into
inc
in
loop
push
xlat
adc
movsb
popa
fnsetpm(287
xchg
ret
stos
data16
xchg
sub
out
es
dec
out
and
push
sbb
mov
test
mov
addr16
test
sub
jmp
es
imulb
add
iret
aaa
jmp
loopne
and
fadds
add
xor
jp
mov
lahf
xor
push
cli
xor
inc
xor
cmp
inc
cmp
retw
xlat
sub
movsb
mov
rcrl
mov
clc
icebp
sbb
negl
iret
pop
in
xor
push
push
shrb
outsl
jecxz
xlat
mov
and
test
shrb
pop
adc
add
imul
mov
test
mov
push
sub
test
iret
inc
xor
push
popf
pusha
push
cmp
jge
decl
adc
ss
xor
jmp
in
xor
scas
dec
ficoml
loop
jb
push
pushf
xor
lea
dec
add
pop
hlt
jb
inc
ret
out
dec
sbb
adc
lods
pop
sti
pop
std
xchg
mov
out
pop
into
dec
aam
sub
in
lds
inc
iret
adc
aaa
out
add
adc
cmp
mov
sub
sub
aas
loope
fs
stos
jg
push
or
into
and
dec
in
push
pop
jae
sbb
sub
je,pt
add
adc
movsb
popa
addb
stc
xor
mov
loopne
movsl
pop
aaa
jmp
clc
add
out
fcomip
push
fcomp
cli
inc
in
icebp
inc
in
test
mov
mov
sbb
and
add
inc
lahf
mov
mov
cltd
stos
lods
pusha
adc
movsl
ds
out
jae
add
ret
ds
pop
subb
insl
mov
fidivs
hlt
sbb
jne
inc
dec
stos
loope
sub
imul
and
xchg
jge
ss
test
mov
jo
xchg
xchg
pop
icebp
idivb
inc
ret
and
insb
ss
and
and
or
adc
fsubs
out
test
sub
xchg
std
push
fwait
shl
clc
mov
jns
ficomps
and
mov
in
cmp
mov
and
mov
lods
call
or
xchg
mov
sub
mov
pop
adc
mov
ficomps
mov
mov
loopne
add
addr16
decb
and
push
pop
mov
xchg
mov
aaa
mov
jecxz
inc
mov
loopne
inc
aam
sti
xor
cmpsl
lods
jne
scas
fdivl
es
pop
xchg
addl
sub
add
push
xchg
pushl
test
cld
leave
inc
rolb
inc
mov
xchg
mov
fisttps
jmp
ficoms
mov
mov
rcll
mov
ds
lahf
rcrb
inc
insb
shll
pop
mov
sahf
lods
das
mov
in
adc
rclb
ss
inc
mov
inc
mov
xchg
pop
dec
mov
pushf
sub
mov
push
fsqrt
lea
mov
mov
out
mov
sahf
pop
inc
xor
xor
push
jge
aam
jae
inc
cmp
sbb
outsb
add
pop
xchg
cs
sub
daa
jns
repnz
xchg
mov
ret
imul
and
test
xor
das
test
cmpb
mov
xchg
mov
insl
rcll
mov
mov
ss
mov
dec
aam
dec
sbbb
pop
pop
test
dec
push
push
call
cmp
lods
or
pop
lahf
xchg
or
mov
add
les
and
jbe
ja
adc
and
insb
sub
ss
cmp
pop
sahf
outsl
lods
imul
scas
insb
add
pushl
jmp
lret
data16
aad
mov
shlb
add
xchg
ja
sub
fcompl
xchg
mov
and
mov
testb
mul
sbb
shlb
sbb
add
mov
hlt
lret
bound
ja
add
rcll
xor
stos
inc
add
lea
lods
jbe
mov
sahf
xor
sbb
cld
lods
outsl
ljmp
dec
fdivs
fisttps
sbb
movsb
xchg
jns
xor
and
or
cmp
ret
fstp
loop
out
icebp
dec
fdivs
mov
mov
mov
filds
fldt
psllw
lods
pop
out
add
out
ss
add
rcrl
stos
jne
push
cmp
insl
push
jge
sbb
stc
xor
popl
dec
jmp
or
push
mov
in
xor
and
shlb
sbb
cmp
popl
dec
push
pop
imulb
out
cmp
in
dec
cwtl
subl
sti
lock
push
lods
bndstx
lea
dec
mov
in
arpl
idivb
dec
loop
pop
sbb
movsb
mov
icebp
sbb
jmp
mov
sbb
dec
fwait
gs
xchg
cli
mov
lods
sbb
dec
mov
jns
ds
lock
loop
in
out
idivb
push
pop
xlat
dec
xchg
test
mov
mov
dec
cld
add
cwtl
lret
ret
daa
in
push
lret
aad
or
inc
fcompl
xchg
jle
push
es
shll
rclb
bound
pop
ja
xor
je
jl
sub
pop
popf
push
scas
sbb
push
push
mov
repnz
lock
adc
out
fisttpl
out
add
cli
mov
loop
iret
mov
out
or
mov
mov
bound
lret
popf
cmp
call
push
popa
sub
ret
repnz
mov
xor
lods
and
repnz
mov
xchg
icebp
and
push
lcall
gs
mov
xor
push
cwtl
sbbb
imul
push
loope
int
inc
ret
push
cmp
test
mov
imul
add
das
add
movsl
insl
or
inc
repnz
mov
push
or
push
shll
jecxz
adc
mov
jecxz
push
int3
jb
sahf
inc
loopne
sbb
push
jle
arpl
pop
mov
mov
and
push
jmp
pop
sub
out
ja
imulb
cmp
pop
ficoml
dec
cmpb
lds
add
xor
cmpsb
imul
cwtl
test
sbb
fidivl
cmp
mov
mov
cmpl
jb
in
cmp
enter
pop
adc
sub
or
cmp
dec
adc
dec
movsl
dec
jmp
dec
or
daa
cmp
fiaddl
mov
xchg
push
dec
ljmp
xor
jmp
dec
push
in
or
jb
sub
push
rolb
and
pusha
outsl
xchg
cmp
je
mov
inc
gs
stos
xor
loop
adcb
sub
movsl
scas
cwtl
sub
sti
into
mov
lock
pop
loop
mov
mov
loope
sub
clc
fbstp
mov
jge
jne
jns
lds
jge
adc
es
lahf
jno
and
nop
xchg
imul
push
inc
adcl
push
imul
adc
mov
sub
xchg
dec
in
and
gs
leave
jns
push
in
xchg
xchg
cmp
dec
mov
mov
arpl
push
or
cwtl
push
adc
decl
fisubrs
cwtl
jp
daa
jno
std
push
imul
aaa
pop
ds
gs
rolb
jno
adc
fistpl
mov
adc
xchg
jl
clc
popl
lcall
inc
int3
js
sub
scas
pop
or
rolb
test
sub
icebp
mov
inc
mov
jae
loope
cmp
stos
mov
repnz
rcl
mov
sub
adc
xor
xor
jg
pop
rcr
pop
ret
cmp
sbb
loopne
lea
fdiv
cmp
loope
and
xchg
mov
cmp
mov
in
xchg
push
jmp
mov
inc
mov
sub
les
push
pushf
xor
xor
dec
push
and
push
dec
and
jo
sub
pop
cmp
or
sbb
jle,pn
xor
pop
aaa
loope
ja
sbb
outsb
and
xchg
push
pop
or
xchg
push
jne
sub
sbbl
dec
into
inc
push
arpl
addr16
mov
bnd
mov
xor
mov
cmp
push
sub
mov
fdivl
xor
jbe
xchg
ja
es
mov
int
jg
add
hlt
pop
rcll
stc
inc
add
cmp
or
imull
cld
and
fs
mov
xlat
jbe
mov
xor
lds
cld
sub
sbb
cltd
push
jmp
fldpi
test
cmp
out
mov
or
rolb
jecxz
repz
or
cmp
pop
jp
call
xor
dec
stc
mov
hlt
and
fnstcw
sarl
lret
inc
jmp
inc
into
mov
mov
fdivs
fimull
aas
cmp
xchg
mov
mov
adc
mov
sbbl
aam
movsl
loop
rorl
enter
scas
scas
jle
mov
je
ret
jl
mov
cmp
leave
fwait
push
xchg
imul
imul
out
dec
or
push
pop
shrb
mov
in
xor
mov
sbb
cmp
inc
fadd
insb
rorb
and
in
push
mov
push
mov
xchg
jnp
mov
adc
idiv
sub
insl
lds
cmp
dec
adc
mov
mov
lods
arpl
cltd
dec
rclb
sub
lods
mov
sub
sti
xor
mov
into
push
sbb
xchg
cmpsl
ds
pop
lret
add
push
shrb
out
cwtl
pop
scas
leave
les
fdivrl
cli
pavgb
rorb
lahf
out
sbb
movsb
sti
in
mov
dec
mov
sar
lods
lock
jecxz
fiaddl
or
cmp
repnz
loop
dec
xlat
call
sub
xchg
jl
dec
pop
pop
int3
inc
inc
pop
into
pop
and
mov
imul
ret
xchg
or
test
sbb
pop
out
jne
xchg
test
addb
subl
jbe
imul
aad
das
fists
cmp
pop
dec
in
cltd
mov
std
je
iret
je
dec
jns
push
push
sub
outsb
lcall
sbb
popa
mov
or
fwait
popf
xor
dec
push
cli
push
iret
push
mov
xor
aas
jne
jno
jecxz
mov
rclb
mov
rcrb
stos
mov
jmp
mov
dec
pop
jb
outsb
pusha
ljmp
jns
fs
push
cmpsl
cmovp
mov
xor
push
mov
mov
les
push
imul
repz
in
fdivl
test
sub
popf
insb
lahf
sub
je
cltd
aas
std
das
mov
xor
ret
mov
dec
mov
mov
mov
rcll
std
lods
pop
lret
ja
add
iret
mov
into
jp
push
inc
enter
push
fwait
xchg
mov
push
push
je
cmp
push
sahf
xchg
push
mov
ret
out
stc
mov
cmp
scas
or
or
adc
daa
mov
jle
cmp
sarl
jg
in
pop
ror
in
inc
fmull
fisubl
es
movsl
dec
nop
call
mov
shrl
mov
jecxz
pop
cwtl
push
shll
mov
leave
mov
fnstenv
in
mov
mov
mov
ret
lods
pop
or
enter
xchg
aad
or
add
in
popf
mov
or
das
leave
out
sti
imul
test
xchg
dec
or
mov
adc
inc
push
pop
inc
bound
push
push
sub
gs
bound
cmp
popa
mov
xor
fwait
inc
jbe
int
push
orl
orb
divb
jmp
mulb
jmp
pminub
call
push
push
cltd
cmpb
dec
mov
mov
add
and
mov
daa
out
xlat
mov
out
cmp
and
xor
lret
xchg
sbb
rcrb
aaa
into
cmpsb
fbstp
fcmovne
cmp
ljmp
and
ret
mov
orl
out
stc
add
jns
mov
repz
clc
popa
movsl
in
push
fsts
mov
lods
pop
jbe
add
pop
test
jmp
pop
fdivr
cmpsl
pusha
out
pop
or
mov
hlt
xor
push
fisttps
mov
ret
cmp
adc
or
insb
xchg
cmp
sbb
imul
fwait
lods
and
ljmp
lret
shrb
icebp
arpl
cmp
push
test
xchg
outsl
push
ljmp
pop
cli
repnz
jg
and
out
cmpsl
daa
std
add
test
fidivl
lock
lock
rcrl
push
inc
lret
push
and
push
mov
cmp
in
xlat
std
sub
loop
stc
in
xor
mov
jecxz
mov
adc
push
nop
push
lds
inc
fadds
ljmp
or
je
xchg
sub
int
xchg
psubw
js
int3
arpl
cmp
inc
test
sarl
or
or
aas
inc
out
and
mov
inc
sbb
cmp
lahf
cmp
add
lds
xchg
mov
or
xchg
push
push
jl
mov
sbb
jo
pop
fsubrs
aas
in
sbb
lea
sti
or
rol
push
ror
push
push
lock
mov
hlt
xchg
aam
push
add
sbb
inc
mov
cltd
xor
cmc
aas
ret
push
fcom
loope
lret
inc
mov
pop
ret
hlt
lds
sbb
jecxz
clc
daa
pop
lret
jp
testb
cmp
push
aas
icebp
inc
jb
adc
mov
jb
outsb
cltd
shlb
adc
lret
loope
fisttps
jecxz
nop
jns
mov
add
cltd
cmp
mov
xchg
mov
fmuls
sbb
test
out
popa
clc
pop
and
mov
fdivrl
fildl
fldenv
ss
int3
cmp
push
sbb
jne
leave
insb
scas
in
adc
jle
test
add
scas
xchg
rclb
lods
or
xchg
mov
mov
cwtl
cmp
or
mov
add
leave
test
inc
sub
leave
cmp
icebp
sbb
daa
addb
and
inc
xchg
xchg
cmpsb
pop
xlat
and
lds
pop
push
aad
mov
inc
in
clc
mov
dec
mov
and
lret
xchg
scas
fbstp
out
test
lods
mov
lret
outsl
sub
pusha
add
stos
scas
push
cltd
xor
cmpsl
mov
fldenv
push
out
cli
aad
sub
outsb
add
jg
mov
cli
mov
stos
inc
dec
repnz
and
pusha
mov
ret
hlt
xchg
imul
adc
mov
sbb
mov
outsb
mov
lds
popa
clc
cmp
pop
jg
xchg
xor
popf
xor
xchg
mov
add
cmp
jno
sub
pop
lods
clc
fidivrs
adc
rcll
lret
andl
aad
shrl
divb
sub
icebp
mov
dec
mov
dec
pushf
lods
inc
into
jo
lds
ret
dec
jecxz
inc
call
add
push
popf
push
and
sbb
fldcw
pop
inc
mov
mov
fnstsw
movzbl
cltd
out
pushf
xor
and
mov
aas
mov
fsubrs
lods
pop
hlt
fisubrs
testb
jge
stos
scas
push
cltd
xor
mov
fsubs
push
out
stc
aad
sub
cmpsb
dec
repz
mov
stc
lahf
adc
dec
icebp
das
and
pusha
mov
shl
repz
imul
adc
popf
inc
call
and
cwtl
cmp
fldl2e
mov
pop
rorb
clc
cmp
jecxz
adc
push
nop
xor
cwtl
gs
xor
xchg
mov
add
push
fdivrs
jno
sub
pop
stos
clc
fnstsw
scas
push
lods
das
rclb
lret
andb
dec
push
mov
shrl
cmc
jo
daa
lret
cld
dec
mov
dec
fwait
lods
inc
int
lds
ret
repz
call
add
push
popf
lds
and
and
sbb
pop
scas
imul
fsubrs
aaa
into
mov
sbb
insl
mov
push
jmp
mov
mov
xor
add
xor
lcall
sbb
inc
sbb
fidivs
cmp
sti
xlat
xor
in
test
jg
fwait
sub
int3
inc
push
popf
js
dec
loopne
lcall
negb
fmuls
stos
pop
icebp
fldt
xchg
fwait
stc
xchg
sub
mov
xor
es
addr16
inc
dec
loope
out
cld
sbb
sbbl
in
inc
lcall
and
ja
aas
or
sbb
mov
push
cmp
xorb
test
pop
mov
push
sbb
xor
daa
mov
sub
cli
es
and
cld
dec
lods
test
scas
or
push
test
addb
rcr
and
sbb
xorl
and
jnp
mov
mov
jae
cmp
pop
divl
sub
inc
pushf
mov
dec
je
jnp
pop
mov
cmc
inc
fwait
xchg
shl
xor
fdivr
out
and
fwait
loop
jle
jp
and
inc
insl
push
test
leave
xchg
pushf
add
inc
xchg
sahf
int3
stc
mov
rorb
iret
and
cwtl
or
pop
test
add
imul
test
dec
push
nop
xor
adc
popf
sub
sti
mov
sub
adc
sbb
jmp
stos
aad
push
iret
test
xchg
scas
xchg
cmp
push
xchg
or
movsb
push
pop
stc
jl
pop
popf
inc
add
mov
das
sbb
mov
lret
jne
push
sbb
fisubs
inc
repnz
xor
lahf
cld
sbb
loop
xchg
inc
lret
or
sti
dec
hlt
iret
mov
adcb
mov
or
js
out
inc
test
inc
mov
push
mov
and
jnp
cmpsb
mov
popf
into
insl
jmp
push
sbb
and
pusha
imulb
fwait
jo
js
outsl
filds
push
xor
lea
adc
scas
fdivrs
xchg
rsqrtps
jecxz
in
fstpt
sbb
pop
xorl
int3
out
sbb
jns
stc
push
sub
fs
xchg
cld
pop
out
aas
adc
cwtl
fcmovnb
push
mov
and
fidivrl
lret
mov
and
dec
lahf
out
loope
negb
imulb
jl
pusha
xor
xchg
mov
insb
xchg
xor
mov
cmp
add
mov
test
clc
lods
stos
mov
jle
rcll
test
inc
pop
push
add
add
fnstenv
dec
iret
jnp
gs
sarl
scas
dec
cmp
cmc
out
outsb
loope
test
push
and
sbb
faddl
repnz
sub
mov
jecxz
mov
or
sti
ss
cmc
and
repnz
mov
cmp
push
sbb
sbb
je
imul
das
cs
jo
inc
fnstcw
je
lret
jmp
and
cmc
dec
out
in
adc
sbb
outsb
fwait
push
ljmp
cmc
mov
mov
movsb
xchg
ret
mov
xchg
sub
inc
sbb
out
add
hlt
imul
pop
lcall
in
push
ljmp
sbbl
add
ret
pop
shrb
in
test
fbstp
add
adc
add
mov
adc
pop
js
mov
test
pop
pop
out
dec
or
xchg
jge
insl
out
push
mov
jecxz
mov
push
and
sti
xchg
pop
inc
movsb
xor
push
mov
push
and
in
icebp
pusha
and
lds
out
mov
imul
test
lock
outsb
ljmp
std
push
jno
int3
mov
outsb
adcb
mov
mov
sbb
pop
dec
loope
jp
jle
mov
jb
push
add
dec
sbb
loope
decl
or
adcl
imul
mov
adc
jo
dec
push
decl
shrl
sbb
push
decl
mov
lods
adc
jo
push
push
push
pop
adcl
ljmp
xlat
push
pushl
and
or
jge
push
push
out
xchg
add
sub
sbb
lods
push
or
adc
add
jp
out
push
xor
outsb
add
frstor
xlat
jle
xor
popa
call
add
sbb
push
dec
adc
add
dec
sub
addr16
and
orb
jecxz
icebp
addb
jmp
mov
out
out
and
mov
jmp
cmpsb
pop
add
push
sbb
push
jl
xor
in
xchg
push
cmp
outsb
jl
pop
mov
xlat
jl
mov
out
je
aam
hlt
mov
rorb
cmc
je
mov
test
dec
adc
jbe
std
sti
out
lods
pop
ljmp
cwtl
jnp
pop
mov
stos
loopne
jmp
sti
aad
stc
jecxz
mov
jmp
mov
hlt
outsb
hlt
leave
sti
jne
mov
lods
loopne
bound
xchg
loop
push
std
push
cmpsl
sub
rorb
jno
pop
mov
lods
loopne
loop
mov
std
mov
repz
mov
push
mov
xor
insl
mov
adc
xchg
jl
pop
jmp
ljmp
movsb
or
fldcw
dec
adc
repz
sub
push
in
jo
in
enter
inc
test
dec
adc
xchg
lods
pop
imul
loopne
lahf
inc
nop
neg
test
and
jae
ja
push
jmp
fs
repnz
sub
cmp
addr16
xor
ret
xchg
out
inc
jecxz
xlat
test
imul
rcl
cmpsb
jbe
push
cwtl
hlt
sub
push
xchg
out
lds
add
imul
jno
je
push
bound
movsl
xor
pusha
data16
inc
xchg
fistpll
sahf
adc
addr16
sub
cmp
jbe
sbb
mov
fistps
fdivrs
or
ret
sti
pop
in
gs
cld
pop
in
or
add
aam
jo
push
mov
int3
or
inc
lret
mov
sar
pushf
cmp
or
test
push
in
push
fistpll
cmpsl
nop
inc
aad
or
dec
adc
xchg
pop
jge
mov
mov
out
shl
outsl
fcomps
fwait
cmp
xchg
aad
addr16
lods
sarl
and
or
cmp
clc
jne
dec
push
insl
out
cwtl
xchg
inc
into
or
aad
fs
stos
daa
xlat
xorb
cmc
or
jne
mov
test
ret
lods
cs
xchg
test
cmp
jge
lods
cs
jne
mov
cmpsl
nop
inc
aad
lods
sub
xlat
andb
push
loopne
xor
sub
ja
out
or
pop
scas
cltd
adc
dec
mov
sub
iret
mov
cmp
arpl
sub
xorb
dec
fildl
dec
leave
jle
mov
arpl
inc
subb
cmp
in
mov
movsb
or
push
cmc
jle
xchg
xchg
pop
ror
xchg
int3
ret
imul
sbbl
push
iret
add
inc
push
pop
pusha
pop
sti
test
dec
pop
mov
movsl
loop
add
xchg
aas
cld
xchg
xchg
push
jecxz
stos
mov
xor
xor
or
jbe
lcall
fldl
jae
nop
inc
lret
imul
or
fmull
push
loope
rcll
out
sbb
rcll
inc
adc
dec
dec
or
inc
fbstp
rorl
push
in
insl
aas
push
or
jo
nop
inc
mov
adc
fmuls
inc
or
sbb
mov
mov
mov
adc
nop
inc
adc
lea
pop
mov
cltd
dec
add
xor
in
outsb
shrl
or
inc
test
mov
pop
pop
dec
or
test
dec
add
mov
repz
loop
lea
cli
inc
adc
insl
inc
adc
rorb
xor
xor
mov
mull
lods
and
xor
sub
call
cmc
sub
addr16
push
das
sbb
aas
jmp
dec
or
cwtl
js
and
jl
mov
cmpsl
adc
cld
sbbb
xor
adc
inc
or
fwait
in
test
stc
out
push
or
imul
xchg
lods
mov
fdivl
adc
adcl
cmp
sti
rcll
mov
aaa
mov
xchg
insb
jmp
clc
bswap
xor
sub
imul
adcb
arpl
xchg
outsl
mov
repz
fwait
push
add
scas
xchg
daa
cs
sub
sti
inc
pop
iret
fsub
or
pop
ss
push
out
push
xor
sub
adc
test
mov
and
out
xor
cwtl
xlat
inc
repnz
adc
inc
jl
mov
ja
add
push
mov
fs
mov
xor
sbb
out
jo
shr
jno
sub
cmpsb
iret
nop
push
mov
andb
cmp
sub
sub
cmp
bswap
dec
aas
je
and
mov
xor
cmp
nop
push
pop
add
enter
add
push
dec
jg
xchg
xchg
aam
icebp
lret
sub
movsl
add
inc
adc
pop
and
jnp
fstpt
arpl
jle
sub
pop
mov
iret
add
popw
add
faddl
cltd
aaa
cld
jo
loope
out
cli
inc
adc
inc
rolb
fnsave
popa
cmp
adc
test
mov
in
add
movsb
sub
sbb
adc
outsb
ja
imul
adc
adc
push
mov
push
push
pop
fnstenv
repnz
jno
fdivrs
imul
push
lahf
pop
clc
movsb
mov
scas
rorb
sub
rolb
lahf
fs
sbb
fnstcw
add
adc
repnz
dec
clc
pop
xor
loope
and
push
push
inc
lods
daa
movl
sub
sub
inc
je
movsl
das
inc
push
popa
pop
popf
lcall
pop
stc
pop
ss
add
push
mov
js
pushf
cmp
push
sub
or
push
arpl
cmp
jl
and
fwait
cmp
push
add
popa
cs
or
adc
je
loope
mov
push
repnz
aad
test
jle
inc
or
imul
cwtl
mov
test
mov
mov
cmpsb
sub
fstp
ret
repnz
inc
or
mov
shlb
leave
lea
int3
pop
repz
test
pop
mov
add
jmp
push
jmp
es
aaa
cltd
mov
inc
or
cmpsl
test
add
ret
mov
mov
outsl
out
std
xor
xchg
jno
xchg
imul
test
lret
cs
cmp
pop
xchg
mov
cmp
jl
inc
fs
cmp
js
xchg
addr16
inc
push
lds
int3
cmpsl
shrb
popf
inc
fcmovne
cli
addb
pusha
out
dec
add
xor
daa
jecxz
imul
mov
stc
inc
fistpll
out
fildl
test
mov
mov
das
xor
ss
in
and
xor
or
stc
push
xor
and
loopne
cs
mov
ret
ds
out
dec
arpl
mov
mov
mov
add
mov
mov
aad
push
aam
sub
mov
aam
xor
loope
mov
dec
lea
xchg
pop
fstl
loope
stc
lret
xchg
pop
xchg
loop
mov
je
push
mov
push
divl
xlat
jnp
std
stc
fs
into
xchg
add
leave
xchg
out
push
fwait
inc
mov
je
add
and
cmpsl
lea
scas
xchg
push
ds
pop
lret
pop
inc
enter
push
add
lret
cs
fdivrp
rolb
idivb
mov
sub
xchg
inc
add
mov
pusha
mov
jecxz
adc
popa
stc
popa
hlt
fnstsw
fadds
sbb
jmp
cmp
scas
or
and
pop
divl
popl
insl
jmp
lahf
cmp
ret
or
xchg
mov
mov
cmp
or
mov
fs
adc
arpl
das
dec
adc
inc
lea
pop
pop
decb
xorb
xchg
scas
inc
push
test
jge
orl
xchg
and
icebp
fs
xor
mov
cmpsb
sub
adc
testb
movsb
fs
aas
pop
mov
addr16
cwtl
aas
ret
or
adc
sbb
dec
test
test
ja
push
xchg
movsb
sbb
jno
mov
mov
jl
test
and
popa
mov
repz
call
in
test
push
call
mov
push
pop
add
jl
xor
addl
fdivrs
mov
xchg
divb
or
mov
les
aam
sbb
dec
mov
sarl
mov
and
jle
mov
filds
sub
rclb
lock
lret
sub
aam
sbb
in
negl
inc
or
aam
cmpsb
dec
fnsave
pop
stos
cs
adc
mov
ja
aam
rorl
std
gs
stos
lock
in
rorb
les
or
aaa
xor
in
ret
stc
cwtl
cmp
lock
push
mov
mov
repz
xchg
inc
xchg
inc
adc
cmp
pop
std
push
and
inc
dec
mov
add
xchg
pop
cld
pop
sbb
mov
arpl
xchg
mov
stos
and
mov
stos
outsl
icebp
fcomps
jae
and
jmp
aaa
test
lods
cmp
popf
or
mov
lret
fldl
insb
pop
movsl
sub
jge
mov
and
mov
lcall
in
dec
cmp
pop
into
dec
inc
adc
movsl
ret
fidivrs
mov
imul
cwtl
xor
dec
outsl
jecxz
push
xchg
cmc
xchg
mov
scas
int3
sbb
js
ret
mov
rolb
out
icebp
arpl
ret
adcb
repnz
and
mov
test
shll
sarb
push
andl
cmp
int
frstor
fstl
add
loopne
xorb
push
aas
xchg
jo
or
cld
jo
jmp
push
push
jecxz
mov
mov
adc
push
inc
mov
mov
stos
dec
mov
add
sahf
aas
adc
xchg
push
dec
jge
push
xor
adc
mov
mov
divl
inc
cmovge
cmpsb
cmp
xlat
in
insb
outsb
pop
lret
jge
jge
testl
mov
lcall
fwait
xchg
sbb
out
sbb
cltd
xor
cs
icebp
push
or
outsb
fisttpll
fnstcw
lcall
mov
test
hlt
mov
dec
loop
mov
and
or
xchg
sub
ret
lock
mov
mov
stos
adc
inc
scas
xor
inc
or
mov
mov
icebp
pusha
sub
mull
push
cmpsb
ss
outsb
or
dec
xchg
pop
loopne
les
lods
inc
popf
cmp
dec
out
cmc
out
cwtl
xchg
inc
adc
and
xlat
insl
fbstp
test
sbb
mov
je
jge
ret
insl
or
test
lea
outsl
repnz
hlt
push
les
mov
adc
mov
jnp
mov
sub
aad
xchg
inc
rorl
pop
std
hlt
or
sub
fdivrl
mov
mov
xor
movq
cld
cs
out
nop
dec
call
cmp
push
and
test
aam
pop
pop
pop
stos
test
xchg
inc
pop
or
test
int
not
xorl
or
mov
push
or
sub
mov
push
cmp
push
jbe
movsl
sub
addr16
popf
xchg
sub
pop
add
mov
mov
out
cld
xchg
jp
aam
mov
or
enter
push
adc
pop
mov
mov
rcll
popf
pushf
aaa
fmulp
and
xchg
adc
xchg
lret
or
sub
pop
movl
in
mov
ljmp
pop
mov
dec
inc
jl
ja
fiadds
lcall
loop
mov
cmp
pop
jmp
pusha
in
outsl
adc
movsb
sub
cltd
js
lds
pop
add
iret
add
fwait
sbb
mov
dec
or
rorl
pop
lock
push
shlb
movsl
xor
mov
lea
dec
xor
ja
adcl
xlat
outsb
popf
rcr
jno
mov
gs
and
add
mov
or
sub
push
xor
cmp
push
cli
out
xchg
cmp
testb
pop
sahf
aas
pop
loop
ja
xchg
sarl
jb
cmc
jecxz
fidivl
mov
push
loop
mov
test
inc
icebp
pop
mov
into
nop
stos
mov
add
lds
jmp
push
andl
jbe
mov
insl
test
andb
cmp
scas
sub
xchg
push
xchg
in
add
sbb
adc
fadds
xchg
cmp
cmp
repz
xor
cmpsl
andb
push
sbb
dec
inc
or
jnp
fldl
cmpsl
je
leave
push
mov
adc
mov
adc
mov
leave
xchg
or
in
pushaw
ret
mov
jae
mov
adc
add
out
pcmpgtw
imul
pop
add
mov
mov
xchg
push
aad
in
xor
xor
in
insb
add
xchg
inc
rcrl
xchg
cltd
or
lahf
dec
movb
cwtl
pushf
cmp
roll
mov
sub
push
lcall
gs
jmp
data16
lea
xchg
mov
and
pop
jne
ret
rorl
nop
cmp
inc
xchg
cmp
aas
aaa
dec
por
push
jle
je
test
shr
aam
dec
sub
rorb
mov
dec
dec
shlb
insl
cwtl
jge
lock
call
aad
pop
std
mov
cmp
add
pusha
mov
pop
pushl
adc
lea
sahf
cmp
pusha
adc
inc
iret
push
leave
sahf
xor
mov
movsb
mov
mov
mov
mov
fcompl
test
mov
cli
sbb
loope
push
inc
or
push
xchg
test
pop
fstpt
jge
call
and
mov
pop
aas
popa
hlt
or
mov
jmp
sti
repnz
call
add
out
xchg
mov
mov
movsb
adcb
pop
rorl
fadds
gs
mull
pop
sub
sbb
add
jp
nop
jne
stos
sub
insb
or
jb
xchg
inc
inc
insl
xlat
sbb
adcb
rolb
lods
xor
enter
adc
xchg
jg
push
lods
mov
sub
mov
ss
jne
pusha
divb
imul
pushf
sub
pop
pop
jge
fisubrs
mov
push
sti
xor
mov
add
mov
dec
cvtps2pd
or
loop
mov
inc
pop
loopne
std
les
sub
cmp
shl
sbb
mul
pop
add
jecxz
pop
call
add
out
lds
push
xor
imul
push
lcall
push
mov
jmp
fs
sbb
inc
mov
xor
pop
jne
test
mov
stos
sub
adcl
rolb
xor
sub
fwait
in
fmuls
mov
mov
es
aad
sub
leave
jbe
insl
mov
decb
push
sub
dec
andl
mov
pop
jmp
cli
add
add
adc
dec
pop
outsb
lret
mov
fincstp
es
hlt
or
adc
call
mov
inc
lods
xlat
notl
mov
mov
bound
mov
dec
lret
mov
das
lods
dec
jno
cmpb
push
add
mov
cwtl
adc
outsb
negb
mov
data16
iret
mov
inc
push
fiaddl
jb
inc
lods
out
into
mov
stos
daa
and
das
stos
lods
lods
daa
out
mov
sti
shl
dec
or
or
mulb
mov
adc
std
fldcw
sahf
je
cmpsl
push
imul
testl
iret
data16
add
xchg
movsb
mov
daa
sub
mov
movsl
fcomp
test
loopne
es
mov
ss
inc
jecxz
mov
add
xor
icebp
dec
arpl
push
out
fs
aam
in
outsl
inc
or
stc
and
sub
jle
pop
ds
xor
and
test
sarb
popf
adc
std
pop
or
lcall
imul
in
rorb
mov
jecxz
dec
add
sarb
enter
or
dec
out
in
xchg
xchg
gs
scas
sub
imul
dec
test
jle
mov
mov
rorl
enter
xchg
lcall
and
scas
mulb
mov
push
lods
add
pop
jmp
and
jecxz
add
jno
sub
loop
cmp
je
pop
fnstcw
loop
je
lahf
fs
iret
sar
xchg
add
push
and
test
mov
mov
jns
add
jbe
mov
inc
or
push
movsb
sub
icebp
push
mov
test
data16
mov
mov
push
int3
sub
xchg
sbb
cmpsb
sub
jle
sub
sahf
mov
mov
jo
pop
lcall
pop
jmp
pop
rorl
fs
mov
mov
je
aad
inc
push
add
push
test
js
sub
mov
dec
jnp
faddl
xchg
ret
xchg
cltd
pop
xchg
inc
dec
roll
arpl
pusha
cmc
sbb
xchg
jge
or
js
sbb
dec
mov
pushf
inc
fwait
pop
add
pop
mov
sti
pusha
adc
dec
jl
lods
push
fs
mov
test
ds
cmp
cmp
mov
lcall
data16
xchg
cmpb
das
push
aam
mov
mov
cmp
ljmp
mov
bswap
jecxz
push
mov
pop
popa
cmc
arpl
test
mov
flds
sub
jge
sbb
cmp
fscale
and
mov
into
fdivrs
push
xchg
push
fwait
jmp
cmp
in
mov
cmpsl
inc
frstor
xchg
xor
dec
push
scas
inc
or
popa
add
sub
lea
cmp
je
inc
mov
xchg
dec
hlt
mov
mov
jns
dec
test
je
fwait
insb
lock
mov
cld
popa
mov
lods
mov
ljmp
orb
mov
push
jns
and
fnstcw
jg
shrb
lret
push
or
outsl
add
nop
inc
sub
fnstenv
stos
mov
mov
sarb
in
test
sub
jp
mov
shll
or
pop
fnstcw
notl
or
push
popa
hlt
and
sbb
add
addr16
pusha
jp
ds
repz
pushf
xor
mov
xchg
dec
cmp
aam
and
aaa
xchg
aaa
rorl
xor
mov
lock
pusha
fisubrl
xchg
cmp
pop
xchg
cmp
mov
testb
mov
mov
movsl
cltd
cmp
lahf
fwait
cmp
nop
stos
mov
addr16
jns
out
stos
hlt
fwait
xor
sbb
or
dec
lahf
lahf
inc
mov
mov
scas
push
jb
das
test
mov
sbb
pop
ret
mov
mov
lds
xor
sub
cmp
cmpsl
and
sbb
mov
cltd
xchg
dec
adc
shl
pop
or
jo
adc
lret
cmp
jne
pop
and
out
adc
add
xchg
sub
ss
lock
insl
std
jmp
sbb
lds
shlb
push
and
stos
push
es
mov
testb
push
lahf
xchg
insb
out
fidivrs
and
push
arpl
je
jmp
xor
or
dec
or
cmp
and
push
test
sub
push
jns
mov
stos
dec
adc
popa
psrlq
sarl
add
cmpsb
stc
into
xchg
dec
mov
daa
ljmp
inc
mov
nop
cmp
movsl
push
incb
jg
out
sbb
stos
adc
test
shr
test
mov
mov
es
ret
mov
sub
jnp
mov
adc
leave
scas
dec
aad
sbb
lds
sbb
and
pop
add
sbbb
sub
cmp
sbb
js
out
lea
stos
lods
or
out
jae
jae
mov
add
pop
clc
pop
shl
adc
push
cmp
aaa
jp
repnz
mov
shll
outsb
push
push
sbb
xchg
adcl
mov
insl
js
subb
sbb
xchg
negb
add
jne
bound
jmp
cli
popf
inc
adc
add
and
cmp
mov
xor
xchg
mov
sarl
pop
mov
dec
loope
sarb
mov
insl
xchg
cmp
fidivl
rorb
xlat
and
popa
fcom
jg
jle
in
jecxz
imul
jecxz
cs
or
xor
sub
and
push
sar
inc
ret
jecxz
sub
fcoml
lea
push
sbb
call
jb
ss
or
addr16
in
sti
xchg
cmp
jns
mov
in
je
test
daa
lods
xchg
out
jae
insl
xchg
addl
in
and
mov
add
mov
arpl
fs
xor
rclb
rcll
in
or
inc
repz
push
test
aaa
xchg
xor
xchg
movsl
mov
sub
rorb
iret
call
icebp
lret
mov
mov
cmp
add
mov
push
inc
ljmp
rcl
popf
cmp
rcrb
scas
sub
in
sbb
xchg
mov
mov
dec
out
inc
pop
divb
insl
add
xchg
sbb
imul
cli
bound
cmpsl
jle
cmp
push
int
sbb
xchg
sarl
cltd
lds
add
pusha
in
incb
mov
test
mov
out
jmp
push
or
xchg
repnz
das
test
in
cwtl
ds
inc
stc
nop
jae
or
jno
lods
ss
stos
fiadds
adcl
lods
arpl
pop
add
jno
ds
repnz
rcrb
cs
lods
inc
push
movb
xchg
sbb
int
mov
sbb
js
popa
dec
adc
cmp
cmp
cs
mov
adc
and
gs
je
int
mov
sbb
push
sub
ds
adc
inc
or
inc
notb
jmp
in
std
fiadds
pop
xor
dec
adc
sar
les
push
cmp
arpl
jne
mov
negb
or
out
mov
or
inc
cmp
into
jle
xor
jne
shlb
inc
sbb
xchg
sbb
notl
push
aaa
out
in
or
mov
cmp
je
pushf
jo
cmp
lcall
adc
xor
fcmove
pusha
or
pop
icebp
std
out
das
adc
mov
inc
push
into
fwait
daa
je
call
cli
jmp
push
sbb
xor
mov
scas
adc
or
or
dec
push
adc
dec
xchg
and
data16
xchg
daa
jl
pushf
mov
aas
cwtl
mov
cmpsb
add
xlat
fnstenv
pop
and
rcr
add
pop
decl
shrb
mov
cmp
sbb
push
std
pop
dec
sarl
push
clc
mov
scas
cmp
shr
mov
icebp
or
in
iret
mov
aam
out
xor
mov
push
out
dec
nop
aaa
push
int3
cmp
sub
pop
mov
pop
jne
andb
sbbb
outsl
lock
dec
lahf
mov
dec
or
test
cmp
mov
xor
leave
test
sbb
push
cltd
loopne
lret
dec
in
in
xchg
push
fcomip
push
mov
add
data16
cli
bound
sbb
ljmp
add
in
in
jne
push
faddl
mov
cmpsb
xor
scas
shrb
test
mov
push
ljmp
dec
ljmp
sub
jmp
pop
pushf
mov
std
pop
sarl
call
es
inc
inc
adc
fsts
push
pop
sub
mov
xchg
out
fdivl
and
test
mov
xchg
pop
cmp
pop
xchg
insl
in
pop
enter
nop
lcall
mov
test
sbb
int3
sbb
mov
scas
cmc
fnstsw
fwait
por
cltd
pop
repz
mov
inc
jg
sub
js
pop
cmp
das
orl
lcall
ds
mov
mov
push
aad
enter
popf
sbb
fucomi
iret
cs
sti
negl
mov
int
or
fildl
outsl
mov
adc
xchg
push
jae
xchg
xor
sub
xor
dec
mov
jl
cli
popa
test
mov
mov
mov
sahf
rorb
xchg
sbb
pop
lret
lds
and
xor
loope
out
add
repnz
daa
int3
rorb
outsb
cli
pop
hlt
xchg
jae
je
sbb
dec
jns
and
inc
popf
cmp
popa
repz
cltd
jl
adc
mov
pop
lcall
cmp
sbb
adc
fwait
sub
sbb
jns
test
fwait
stos
js
scas
mov
pop
mov
cmpsl
push
pushl
jp
insl
in
into
mov
aas
pushf
and
out
fnstsw
inc
push
jnp
stos
sub
bound
int
or
cmp
mov
pusha
mov
add
lcall
sub
mov
jecxz
lcall
add
add
cmc
loop
xlat
sbbb
mov
aam
sub
fstpt
cmpsb
adc
pop
shl
inc
pop
add
aad
adc
call
divl
les
lods
and
shl
lods
sub
push
add
or
test
push
push
lret
es
pop
cmpsl
test
imul
inc
mov
mov
jge
xor
icebp
lcall
test
gs
pop
rolb
mov
int3
mov
fildl
in
mov
mov
and
xor
popa
push
jl
mov
push
fwait
inc
push
addb
dec
ror
in
pushf
jg
pusha
stc
xchg
cmp
xchg
leave
xchg
mov
stos
xchg
cmp
mov
mov
ds
pop
xchg
scas
jne
or
mov
mov
repnz
iret
gs
pusha
sbb
and
imul
dec
fisubrl
test
sti
pop
nop
mov
xor
rorb
push
cmc
fs
push
xchg
loope
scas
inc
sbb
dec
fistpll
xchg
and
leave
add
mov
adc
jle
jo
dec
dec
popa
test
sub
lods
out
in
ret
nop
xchg
add
movsb
sahf
int3
jp
test
dec
or
sahf
cmp
adcb
inc
adc
mov
xchg
inc
jbe
push
add
insb
inc
adc
cld
lods
sub
cmpsb
sbb
loop
ja
clc
cs
inc
mov
push
sub
lea
pop
cmp
adc
inc
in
pusha
mov
or
mov
add
add
jb
pop
cli
mov
cmpsb
pop
stc
dec
loopne
xor
cwtl
cmp
cltd
mov
inc
icebp
or
xchg
ds
cwtl
das
and
sbb
cmp
fstps
xchg
sub
push
add
aam
xchg
adc
enter
inc
jmp
dec
mov
lcall
cmp
out
cs
in
pop
inc
loopne
jae
jne
push
xchg
negb
cmpl
push
mov
in
fwait
xor
mov
pushf
push
mov
mov
sbbb
jmp
cli
mov
push
or
orb
push
jno
repz
cwtl
bound
xchg
leave
sub
add
push
popf
inc
test
cltd
inc
fstpt
adc
or
sahf
pop
or
cmp
dec
adc
aad
icebp
pop
fldl
lods
ss
mov
sbb
jae
pop
dec
xlat
jp
inc
dec
adc
mov
sahf
aad
inc
inc
jle
and
mov
and
and
inc
xchg
subb
pop
rcll
data16
les
sarl
lcall
cli
inc
leave
mov
lcall
andl
mov
inc
or
sarl
insb
movsl
andl
movsb
xor
aas
leave
mov
jo
push
adc
ljmp
xchg
daa
popf
inc
xlat
iret
call
repnz
testb
inc
in
sub
xchg
push
stc
cltd
sbb
iret
js
add
add
push
ret
push
iret
fstl
adc
dec
xchg
test
xchg
outsl
out
in
imul
mov
aam
push
add
or
mov
lret
int3
add
sub
jne
xor
mov
sbb
push
test
xchg
inc
push
in
and
into
stos
cs
out
mov
ss
jb
sub
jb
sub
mov
sbb
inc
adc
lahf
popa
mov
pop
rcl
jns
sbb
mov
daa
in
cmpb
cmp
fldl
das
mov
mov
mov
mov
mov
test
lret
addr16
das
int
jmp
cld
nop
cmp
xlat
sbb
adc
mov
lret
push
sti
pop
mov
mov
adc
das
mov
je
cmp
sti
xchg
push
nop
arpl
shrl
mov
loop
sbb
aaa
into
mov
lahf
ss
in
add
es
pop
jb
jp
sub
scas
inc
incl
into
gs
aam
int3
add
es
ljmp
jno
stos
sbb
rorb
es
imul
push
scas
inc
push
mov
int3
arpl
ljmp
pop
or
out
daa
mov
cmp
std
xchg
lea
sbb
xchg
add
shll
mov
aaa
in
pop
out
addl
or
mov
xchg
sub
lods
sti
xchg
fimuls
dec
jl
sbb
rclb
into
xor
test
movsb
push
in
aad
or
jne
jae
sub
xchg
sub
dec
fistps
popf
scas
inc
iret
cmp
insb
lock
and
jmp
jne
mov
mov
jmpw
sbb
inc
fsubrl
xchg
or
sbb
adc
lahf
ss
add
mov
or
jns
sub
int3
mov
incb
iret
push
shlb
test
or
test
sub
dec
leave
es
push
fistps
mov
int3
arpl
ret
hlt
popa
mov
mov
out
daa
mov
cmp
xchg
mov
fs
cmp
sbb
ficomps
sbb
mov
aaa
jecxz
pop
out
addb
mov
fnsave
xchg
sub
stos
sti
xchg
fisttpll
dec
jnp
sbb
iret
push
aaa
into
xor
push
in
aam
or
je
jae
daa
xchg
sub
dec
xchg
sub
dec
fistps
pushf
scas
inc
into
cmp
imul
and
jmp
je
mov
mov
gs
fidivs
cmp
imul
xchg
or
arpl
mov
filds
iret
mov
lahf
ss
add
je
push
jb
js
sub
lret
mov
std
jg
scas
mov
iret
push
shll
test
or
cmpsl
pop
sub
dec
enter
imul
dec
mov
int3
arpl
shr
repz
mov
mov
in
daa
mov
cmp
xchg
mov
fs
cmp
sbb
mov
aaa
loop
pop
out
addl
jbe
aam
fnsave
xchg
sub
stos
sti
xchg
fmull
dec
jp
sbb
into
dec
aaa
into
sub
test
mov
or
jae
jae
es
sub
movb
jns
dec
fistps
fwait
scas
inc
int
data16
push
int
and
xorb
cmp
xchg
or
fs
mov
mov
frndint
xchg
or
mov
fiadds
iret
mov
lahf
ss
push
in
add
je
push
fcomp
jb
ja
sub
lret
cld
jle
scas
scas
sbb
xor
test
les
mov
cmpsb
push
sub
inc
es
push
scas
inc
dec
mov
int3
arpl
shr
repnz
mov
mov
in
daa
mov
aaa
mov
fsubr
pop
xchg
mov
fs
cmp
sbbb
std
cmp
cs
mov
out
addb
push
xor
jbe
rcll
je
hlt
xchg
sub
test
mov
jns
sbb
int
aaa
into
jg
out
test
mov
or
jb
jae
and
inc
xchg
sub
dec
fists
lcall
imul
test
mov
fisubs
mov
arpl
daa
mov
mov
inc
fsubrl
cld
xchg
or
sbb
movd
iret
scas
xor
in
add
or
jb
jbe
sub
leave
mov
sti
jge
scas
scas
sbb
dec
iret
xor
test
ret
or
movsl
adc
es
addr16
fistps
mov
int3
arpl
mov
mov
mov
jecxz
daa
mov
ss
fsub
push
xchg
mov
fs
cmp
sbbb
cld
cmp
sub
dec
pop
out
jg
mov
or
xchg
xchg
sub
inc
mov
js
sbb
int3
dec
aaa
into
jle
out
test
mov
or
jno
jae
and
sub
les
sub
dec
fists
cltd
scas
inc
lret
aaa
data16
push
mov
jno
mov
mov
in
mov
mov
inc
fsubrl
cld
xchg
or
sbb
push
jge
iret
scas
das
lahf
ss
iret
push
in
add
je
push
jne
sub
enter
jl
scas
lods
sbb
dec
into
xor
test
rorl
bnd
or
nop
daa
mull
fists
mov
std
call
or
xor
mov
mov
loope
sub
xor
inc
fucom
push
xchg
xchg
gs
cmp
sbbl
cli
cmp
sub
pop
out
jge
rclb
jbe
rclb
jne
icebp
xchg
sub
cmpsl
cld
xchg
flds
jbe
sbb
lret
iret
jge
out
test
ds
outsl
icebp
je
and
xchg
sub
dec
fists
mov
lret
std
data16
gs
ds
xorl
cmp
rclb
sub
mov
inc
frstor
cld
xchg
pop
mov
sub
mov
fildl
iret
lods
mov
in
incb
jne
push
aam
jae
jae
sub
mov
clc
jp
scas
stos
sbb
addr16
int3
ss
insb
out
test
mov
jae
mov
ret
xchg
sub
arpl
xchg
push
mov
dec
mov
out
into
gs
pop
xchg
out
pop
movsb
cmp
ret
popa
sub
xchg
add
js
mov
fsubp
push
call
cmpsb
sbb
sbb
stos
mov
lock
rclb
ja
iret
push
fidivs
lock
sub
movsl
cld
xchg
xlat
inc
mov
jne
sbb
leave
dec
cmp
jnp
out
xchg
or
or
nop
sub
roll
je
dec
loopne
xchg
mov
enter
gs
test
cmp
subl
cmp
or
pop
loop
mov
mov
inc
frstor
std
xchg
push
xchg
daa
sbb
or
shrb
int3
push
out
std
jg
push
mov
jbe
push
rcr
jae
jb
sub
mov
idivl
scas
test
lret
sti
imul
popf
sbb
in
dec
mov
jae
mov
rcll
xchg
adc
inc
inc
mov
jmp
addr16
gs
push
xchg
cmp
movsl
cmp
or
ret
pop
ficomps
rclb
inc
fsubp
push
call
xor
push
test
mov
cmp
sub
pop
lock
rclb
ja
into
push
fidivs
out
xchg
sub
movsb
cld
xchg
inc
mov
je
sbb
enter
jp
out
xchg
pushf
push
in
int
or
or
sub
rolb
jae
dec
loopne
xchg
mov
xor
fs
test
cmp
subl
cmp
sub
pop
pop
loope
mov
mov
inc
frstor
xchg
add
sbb
or
shrb
lret
push
out
cld
jle
push
mov
jbe
dec
rcr
jae
jno
sub
les
scas
test
shrl
leave
ss
push
xchg
or
or
rclb
xchg
adc
jmp
data16
gs
add
in
sub
movsl
cmp
or
mov
fstpl
rorb
inc
fsubp
push
call
xor
sbb
sbb
test
pop
lock
rclb
ja
int
fidivs
out
xchg
sub
mov
mov
jae
sbb
dec
cmp
jns
out
xchg
fwait
push
in
int3
cmp
or
mov
ret
xchg
sub
dec
loopne
xchg
mov
xor
arpl
into
sbb
in
subl
or
rcrl
sub
mov
inc
frstor
std
xchg
add
fs
mov
sbb
or
shrb
lret
sti
jge
push
scas
sbb
or
add
sub
ret
mov
cmc
jbe
scas
cmpsl
push
shrl
enter
imul
in
dec
mov
jae
sahf
push
sub
aas
mov
dec
loope
adc
jmp
gs
gs
add
push
ss
movsl
cmp
or
mov
fcompl
rorb
inc
fsubp
push
call
xor
test
xchg
cmp
es
cmp
inc
pop
lock
rclb
ja
int3
dec
fidivs
in
xchg
sub
mov
mov
jb
sbb
movb
js
out
xchg
lcall
imul
or
lea
ret
xchg
sub
dec
loopne
xchg
mov
lds
addr16
out
sbb
subl
cmp
lea
mov
pop
fildll
mov
mov
inc
frstor
std
xchg
add
mov
sbbb
ja
shrb
leave
push
out
cli
jl
push
scas
sbb
dec
iret
fdivl
outsl
xchg
sub
ret
hlt
jne
scas
cmpsb
adc
ss
push
push
in
dec
mov
jae
popf
or
xchg
sub
pop
dec
loope
adc
jmp
fs
gs
add
sub
movsl
cmp
or
mov
fistpl
cld
loope
cs
inc
fsubp
dec
call
xor
test
test
cmp
and
inc
pop
lock
rclb
ja
lret
dec
fidivs
in
xchg
sub
mov
mov
jno
sbb
lds
iret
ja
out
xchg
cltd
push
in
lret
movsb
push
je
sbb
ds
sub
dec
loopne
xchg
mov
les
addr16
popa
in
gs
addl
push
mov
mov
pop
fisubrs
mov
scas
xor
popa
sar
xchg
add
sbb
pop
jbe
shlb
enter
jnp
push
lods
sbb
dec
into
fdivl
outsb
xchg
sub
shll
movsl
adc
push
mull
xchg
mov
jae
pushf
or
ret
cmp
pop
dec
loope
adc
jmp
arpl
gs
add
sub
movsl
cmp
or
mov
ficompl
rorb
dec
call
xor
test
test
cmp
and
mov
lock
rclb
ja
lret
jne
jmp
sub
mov
mov
jo
sbb
les
iret
jbe
out
xchg
cwtl
push
in
leave
cmp
or
sub
mov
fisttpll
push
xchg
mov
ret
das
addr16
pusha
in
gs
addb
imul
or
pop
mov
scas
das
inc
frstor
std
xchg
add
sbb
push
jne
shlb
push
out
clc
jp
push
lods
sbb
dec
int
jae
insb
xchg
sub
mov
sbb
inc
lds
into
mulb
xchg
mov
je
fwait
or
cmp
loope
cmpxchg
scas
push
xchg
add
test
push
movsl
cmp
or
cmp
sub
mov
loope
sub
call
xor
test
xor
shlb
movsl
mov
lock
rclb
ja
leave
dec
fidivs
ljmp
sarl
sbb
ret
inc
cmp
jne
out
xchg
xchg
push
in
enter
push
mov
ret
xchg
sub
dec
loopne
nop
mov
ret
pop
jecxz
gs
ss
subl
cmp
mov
mov
pop
fsubrl
mov
lods
cs
fstpl
std
xchg
add
sbb
add
mov
out
idivl
push
stos
sbb
dec
int3
fdivl
imul
mov
sbb
inc
les
into
cmc
fs
xchg
mov
movsb
call
or
cmp
dec
loope
push
mov
inc
lods
push
xchg
incl
test
push
movsb
cmp
ret
pop
sub
mov
loopne
sub
xchg
jge
data16
xor
test
xor
shll
movsl
mov
out
je
rclb
jbe
enter
jge
xchg
sub
lahf
cld
xchg
sarl
dec
outsb
repnz
ret
iret
jne
out
test
ss
addr16
sub
mov
fisttpl
or
mov
ret
std
pop
jecxz
gs
ss
subl
cmp
rclb
sub
lods
cs
fstpl
cld
xchg
incl
sbb
add
cmp
movsb
and
push
out
idivb
push
stos
pop
jbe
dec
lret
fdivl
push
sub
mov
out
jno
mov
adc
push
hlt
arpl
xchg
mov
movsb
out
je
cltd
or
cmp
dec
loope
or
push
xchg
incb
test
push
movsb
cmp
movsb
ret
pop
sub
mov
loopne
sub
xchg
jl
data16
das
sahf
sbb
iret
push
test
xor
shll
movsb
mov
out
jae
rclb
jbe
dec
fidivs
call
cld
xchg
sarb
mov
insl
icebp
sbb
roll
je
out
test
push
in
xor
je
sbb
xchg
sub
dec
fisttps
mov
shrl
pop
loop
gs
test
mov
in
andl
cmp
or
push
fldt
mov
stos
sub
cld
xchg
jg
sti
mov
sbb
add
shlb
les
cmc
ja
push
test
lret
cld
imul
out
jo
mov
psrlw
ret
repz
out
xchg
or
or
mov
dec
loope
or
dec
ds
push
xchg
std
xchg
in
movsb
cmp
mov
sub
mov
loopne
sub
xchg
jnp
data16
cs
sbb
into
dec
test
sub
mov
out
jb
rclb
jbe
dec
fidivs
out
sub
popf
cld
xchg
iret
cmp
mov
mov
rolb
jae
out
test
xchg
push
in
xor
mov
sbb
xchg
sub
fisttps
mov
std
pop
loope
adc
sbb
shll
mov
push
fisubrl
mov
stos
sub
fstpl
cld
xchg
std
jle
sti
scas
push
sbb
add
shlb
ret
push
out
hlt
jbe
push
test
jbe
inc
leave
fdivl
push
sti
xchg
dec
mov
sbb
inc
shll
repnz
out
xchg
mov
movsb
in
je
xchg
push
sub
aaa
mov
dec
loope
or
fistpl
xchg
cld
xchg
in
movsb
cmp
mov
sub
mov
loopne
daa
stos
dec
dec
xchg
jp
data16
sub
dec
test
sub
rcrl
mov
pop
out
jno
rclb
jbe
lds
jne
out
sub
pushf
cld
xchg
into
cmp
mov
shlb
inc
cmp
jb
out
test
xchg
push
in
lds
or
fs
or
xchg
shll
dec
fisttps
lea
std
pop
loopne
adc
sbb
shlb
mov
push
fldcw
mov
test
lret
cld
jge
sti
scas
sbb
sbbb
jo
shlb
ret
repz
push
cmpsl
adc
or
cli
addr16
sub
mov
sbb
aas
shlb
icebp
pusha
out
xchg
mov
movsb
in
je
xchg
add
xchg
sub
push
dec
loope
or
ficompl
data16
sti
xchg
jecxz
movsb
cmp
mov
sub
xchg
loopne
es
xchg
jns
data16
sub
sbb
int3
dec
test
jg
cmp
push
mov
pop
out
jo
rclb
jbe
les
jne
in
sub
fwait
cld
xchg
int
mov
push
sbb
mov
fucomip
test
xchg
push
in
les
or
arpl
je
pop
test
shll
dec
fisttps
mov
std
pop
adc
scas
xor
andl
add
rclb
sub
test
inc
fstpl
cld
xchg
sti
jl
sti
lods
sbb
mov
into
sbbb
outsl
cmp
mov
rcll
je
push
cmpsb
adc
inc
fdivl
xchg
sub
mov
sbb
ds
out
xchg
mov
movsb
jecxz
je
xchg
add
ret
xor
push
dec
loope
or
fstps
mov
xchg
loop
movsb
cmp
or
xor
ret
push
sub
xchg
loopne
and
inc
xchg
js
data16
sub
test
jle
cmp
sbb
ds
out
outsl
repz
jbe
ret
inc
fidivs
in
sub
lcall
imul
shlb
aas
cmp
jo
out
test
xchg
push
in
ret
xor
in
or
test
shll
dec
filds
mov
std
pop
fmulp
adc
sbb
into
mov
mov
push
xlat
sub
cmpsl
sub
pop
enter
jnp
sti
lods
sbb
mov
int
sbb
insl
cmp
sahf
and
out
lock
push
movsl
adc
inc
fnsave
xchg
sub
mov
dec
jmp
or
dec
jmp
xchg
loopne
dec
repz
les
pop
inc
mov
push
notl
pop
lret
in
sub
es
xchg
mov
add
push
std
inc
mov
adc
push
fists
loope
out
jnp
xchg
mov
test
call
xchg
cmp
arpl
dec
pusha
push
inc
repz
prefetchnta
mov
popf
push
xor
repnz
mov
inc
in
clc
lea
sub
xchg
jge
jmp
cmp
repnz
xor
shrb
mov
jecxz
movsl
mov
xor
jno
repnz
xor
jo
cmp
adc
jb
cmp
pushw
mov
push
into
call
push
fs
adc
hlt
ret
fiadds
pop
mov
push
pop
cmp
mov
push
sub
loope
push
push
jg
addr16
or
int3
daa
xlat
push
sub
xor
fs
xor
cwtl
adc
in
pushf
dec
push
adc
inc
lcall
pop
or
outsl
mov
inc
ret
int
movsb
out
sbb
pop
sub
in
mov
std
add
cmp
dec
mov
fstl
mov
iret
ja
xchg
icebp
leave
ss
push
mov
rclb
or
iret
ror
scas
jnp
pop
cmpsb
loop
out
sti
cmp
addr16
fs
enter
std
pop
jg
popa
mov
in
xor
mov
stc
lods
ljmp
andb
imul
xchg
sbb
das
add
xor
mov
or
adcl
mov
mov
add
xorl
in
sbb
jl
shlb
xchg
fildll
mov
sbb
loopne
repnz
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
inc
enter
loopne
jecxz
push
jecxz
mov
mov
jns
outsl
mov
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
jnp
push
mov
shlb
xor
outsb
pop
lock
call
cmpsl
mov
fdiv
pusha
clc
fmull
rolb
pop
lahf
andl
pop
xor
aam
loope
sbb
ret
sbbb
lods
dec
es
stc
popf
mov
push
push
cli
aas
in
rcrl
lahf
push
push
sub
jbe
inc
push
movsl
inc
dec
bnd
pop
mov
mov
dec
enter
jmp
inc
inc
mov
fstps
mov
sahf
arpl
imul
rcl
jmp
test
add
imul
xor
pop
jge
cwtl
and
call
add
fidivs
cmc
repnz
int
paddd
lods
sbb
mov
insl
ss
aaa
outsb
inc
mov
es
lods
jg
aas
fldl
fsubr
xor
lock
inc
push
mov
xchg
movsb
and
das
dec
hlt
jmp
dec
mov
xchg
pop
xor
sbb
inc
jg
test
imull
popf
or
fidivrl
iret
rcrb
ret
jcxz
lahf
mov
cmpsb
mov
ret
addl
mov
cltd
xor
and
gs
ret
sbb
movb
rcrb
into
lods
cwtl
daa
pop
push
push
add
fildll
fldl
pop
sub
pop
das
mov
xchg
dec
icebp
jle
sub
xchg
es
call
scas
repz
outsb
orb
pop
xorb
and
inc
inc
push
in
pop
lret
in
fidivl
out
or
cli
jmp
xchg
mov
mov
or
push
mov
imul
imull
adc
mov
mov
inc
mov
push
fcmovb
out
ret
jg
cmp
pusha
imull
mov
