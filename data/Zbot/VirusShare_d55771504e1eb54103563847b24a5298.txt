sub
add
inc
addl
add
add
push
addl
add
addl
add
add
add
addl
add
addb
and
add
add
add
push
addb
data16
addb
add
add
mov
addb
faddl
add
add
add
sbb
add
inc
addl
push
addl
addw
je
add
mov
add
cmpsb
addl
mov
add
add
mov
mov
pop
add
and
mov
sub
arpl
mov
pop
add
and
stos
aas
dec
mov
xlat
rcl
inc
add
mov
sub
inc
adc
xlat
inc
adc
inc
sub
mov
int3
lret
inc
enter
shr
sbb
lret
das
rolb
add
subl
xlat
xor
sub
in
inc
cmp
cmp
sub
adc
int3
das
sub
lock
inc
xchg
inc
test
mov
andl
cld
das
sub
dec
ss
sub
adc
and
cmp
or
xor
out
mov
mov
daa
add
sub
xlat
test
sub
sub
and
and
inc
add
enter
enter
sub
pusha
das
sub
inc
mov
out
sub
sub
mov
inc
inc
add
sub
mov
xor
xor
xor
aas
mov
comiss
add
das
sub
adc
fstp
xchg
jae
iret
mov
mov
add
mov
cld
xchg
sub
adc
push
das
sub
adc
mov
lret
inc
adc
mov
into
sub
and
sub
cld
push
sub
fcoml
popa
mov
cld
push
sub
aam
cmp
kandnw
fdivrl
kandnw
in
adc
mov
mov
xor
iret
fldenv
das
xor
lret
inc
add
sub
adc
inc
and
cmpl
xchg
inc
add
cld
sub
adc
inc
and
cmp
cmp
inc
movsb
mov
add
xor
sub
xor
test
sub
hlt
subl
mov
sub
mov
dec
xor
mov
inc
push
xor
xor
xor
inc
and
subl
sub
inc
or
subl
enter
push
xor
adc
xor
in
into
or
vcomiss
xor
inc
adc
mov
sub
subl
into
in
xor
add
jbe
sub
into
add
cmc
in
in
getsec
sub
adc
sub
xor
scas
cmc
in
pushl
out
sub
cld
cwtl
sub
sub
xor
adc
mov
inc
scas
das
inc
and
mov
popf
mov
sbb
in
aad
test
mov
and
cwtl
or
and
sub
cld
jg
sub
subl
sbb
adc
aad
inc
and
ds
mov
arpl
out
subl
cvtps2pi
inc
adc
adc
inc
mov
scas
in
cmp
sbb
mov
lds
xor
mov
xor
lods
xor
inc
add
add
sub
sub
jae
scas
repz
cmp
fs
dec
sub
cmp
jae
inc
ret
aad
scas
incb
mov
popf
ret
jae
adc
ficomps
add
sub
inc
add
mov
add
sbb
xor
jae
mov
inc
add
inc
dec
inc
mov
mov
lret
xor
aas
inc
lret
cmp
inc
mov
mov
push
lret
inc
aad
dec
lcall
sub
cs
jne
sub
into
adc
sub
mov
inc
add
add
sub
sub
xlat
ds
fcos
push
fistl
ds
ds
ds
call
fstpt
mov
ds
jmp
mov
sub
ds
ds
inc
mov
inc
inc
adc
sub
cld
add
sub
mov
sub
ds
ds
rep
pop
sub
sub
in
ds
inc
stos
mov
mov
inc
stos
inc
ds
inc
mov
inc
mov
inc
lds
and
adc
ds
sub
lods
dec
xor
das
sub
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
popf
inc
lds
mov
iret
inc
aad
inc
dec
pushl
sub
sub
sub
sub
das
lret
sub
arpl
and
and
inc
lret
jae
mov
sbb
mov
icebp
and
mov
leave
dec
cld
out
popa
sub
lret
inc
mov
inc
stos
pop
inc
sub
rcrl
ds
mov
mov
inc
and
inc
mov
inc
lret
jae
popf
popa
sub
lret
sub
xor
mov
mov
mov
inc
and
inc
mov
inc
lret
jae
pop
popa
sub
lret
sub
dec
ds
inc
mov
inc
sbb
lods
inc
aad
cld
xchg
popa
sub
lret
sub
inc
sbb
xchg
and
lods
ljmp
inc
aad
cld
popa
popa
sub
inc
adc
inc
push
adc
sub
cld
aas
popa
sub
lret
sub
lods
adc
sub
inc
lds
scas
bsf
adc
lds
mov
decb
and
lret
cld
mov
sub
mov
sub
cld
dec
xor
sub
sub
inc
mov
xchg
mov
leave
mov
iret
mov
sarl
mov
in
test
das
dec
cwtl
sub
sub
sub
cli
inc
mov
sub
adc
mov
inc
stos
stos
sti
or
lret
push
pushl
sti
sub
adc
or
mov
inc
stos
stos
shrl
lret
push
ds
mov
sub
sub
sub
sub
movsb
int
adc
xor
lret
inc
mov
lret
mov
sbb
mov
in
ds
cld
and
sub
sti
sub
sub
mov
inc
mov
inc
stos
stos
rcl
sub
pop
inc
mov
inc
stos
stos
sti
sub
sub
popf
in
adc
pop
inc
mov
inc
and
add
sub
inc
mov
sub
fwait
inc
mov
lret
inc
mov
inc
stos
mov
mov
and
stos
subl
inc
mov
sub
cmp
sub
mov
inc
stos
stos
sti
sub
sub
fldcw
lret
pop
jmp
aad
add
add
sub
sub
xlat
fcos
repz
maskmovq
idivl
mov
xchg
ds
flds
idivl
lds
in
idivl
lds
lds
lds
lds
lds
xchg
inc
inc
mov
lds
lds
lds
lcall
inc
mov
lods
idivl
lds
mov
jmp
mov
lds
ds
decl
pop
fcomi
ds
xchg
lods
xor
fsubrl
idivl
mov
inc
mov
idivl
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
inc
mov
inc
sbb
ds
inc
inc
mov
inc
mov
ds
ds
inc
inc
mov
inc
aad
cld
lret
sub
inc
popa
xor
mov
arpl
lods
adc
sub
sub
inc
mov
inc
stos
xchg
xor
adc
inc
mov
stos
stos
sub
jnp
push
das
sub
inc
sub
sub
inc
mov
sub
sub
inc
aaa
lods
dec
ss
das
sub
inc
cmp
mov
pushf
add
ds
pushf
push
sub
sub
idivl
lds
sahf
add
sub
idivl
lds
mov
cmp
idivl
lds
mov
inc
sahf
dec
sub
idivl
lds
sbb
lods
push
idivl
mov
pushf
ja
sub
idivl
mov
pushf
jns
sub
idivl
mov
pushf
cltd
insb
sub
idivl
mov
pushf
mov
sub
lds
ds
sahf
sub
sub
pushf
sbb
sub
mov
sub
idivl
lds
push
push
sub
sub
ds
stos
push
or
sub
inc
mov
lret
inc
mov
lret
ljmp
inc
mov
lret
inc
mov
inc
stos
inc
sub
aad
xor
outsb
aaa
pop
mov
std
lods
outsl
push
cmc
sub
pop
mov
inc
mov
xchg
sub
xorl
sub
or
sub
xchg
mov
sub
mov
xchg
mov
adc
inc
mov
ljmp
xor
pushl
lret
inc
mov
inc
stos
inc
sub
aad
inc
lds
faddl
or
sub
sub
pop
inc
mov
lret
inc
mov
xchg
mov
mov
sub
lret
inc
mov
shll
pushl
lret
inc
mov
inc
stos
inc
sub
aad
xor
inc
mov
xor
and
xor
lret
sub
jno
ret
lds
xor
sbb
inc
sub
aad
cmp
inc
lds
mov
inc
shll
xor
cs
sub
sub
xor
lds
aad
mov
sub
sub
sub
xor
aad
adc
inc
lret
cmp
aad
inc
aad
ds
inc
aad
dec
lcall
sub
lock
sub
aad
inc
push
and
sub
scas
add
mov
loopne
sub
or
sub
mov
inc
aad
inc
sub
push
pop
xor
inc
mov
inc
lds
mov
das
sub
adc
addb
sub
add
dec
je
sub
adc
mov
inc
lret
xor
aad
ds
rorb
or
sub
inc
mov
lret
inc
mov
xchg
mov
or
sub
sub
pushl
lret
inc
mov
inc
stos
inc
sub
aad
inc
mov
inc
sub
sub
and
lds
mov
sub
adc
in
inc
mov
xor
ds
inc
mov
inc
mov
inc
lret
xor
imul
mov
popl
inc
pop
mov
inc
fwait
xor
inc
mov
inc
dec
cmpl
mov
sub
inc
add
stos
xor
add
xor
aaa
sub
dec
xor
sub
sub
mov
sub
inc
cs
sub
lods
dec
xor
sub
sub
sahf
inc
sub
sub
xor
sub
sub
xchg
mov
sub
sub
cmc
or
inc
rolb
lret
inc
ds
lcall
mov
sub
inc
mov
cld
test
sub
sub
lea
sub
xor
adc
jno
xor
dec
lcall
xor
adc
inc
mov
lea
lods
inc
cmp
jno
xor
lcall
inc
sbb
inc
and
sub
aaa
inc
in
sub
sbb
inc
sub
cmp
and
dec
lcall
inc
lds
mov
xor
lds
inc
lcall
sub
xor
ds
aad
dec
xor
sub
sub
loope
lods
stos
add
xchg
lods
out
mov
inc
add
add
inc
shll
xchg
sbb
adc
xor
sub
sub
sub
sub
sub
sub
mov
lods
stos
imulb
sub
inc
aad
inc
inc
dec
lds
inc
sub
popf
or
sub
sub
dec
xor
ds
xor
add
or
cmc
sbb
inc
mov
xlat
sub
mov
lods
adc
xlat
sub
inc
ds
lods
adc
cld
xor
sub
adc
sub
jae
and
sub
les
mov
add
xchg
lods
ds
popf
cmp
iret
inc
sbb
add
mov
inc
inc
dec
inc
aaa
ss
inc
mov
dec
lcall
lret
cmp
dec
inc
aad
inc
shrl
sub
lods
adc
add
ds
sub
scas
in
das
inc
xchg
fwait
xor
mov
push
inc
aad
inc
lds
sbb
xchg
lods
popf
adc
lods
add
xchg
lods
out
mov
sub
inc
add
add
sub
mov
leave
mov
sub
sub
lods
adc
roll
xor
adc
inc
lret
xor
cmc
sbb
ds
rclb
fst
inc
aad
xor
mov
cmp
adc
inc
aad
dec
lcall
cs
sub
sub
and
adc
fsubrs
and
sub
or
loopne
aad
sub
sbb
xchg
popf
je
sub
adc
mov
lret
xor
aad
rclb
lods
stos
mov
inc
mov
inc
stos
xor
add
xor
dec
xor
sub
sub
inc
rorb
mov
pop
sbb
adc
cmpsb
sub
sub
sbb
adc
inc
out
xor
inc
daa
pop
xor
cmp
mov
lds
lret
ds
lds
add
inc
lds
push
adc
dec
lcall
popf
lds
sub
out
and
movl
push
adc
fwait
xchg
stos
ds
inc
mov
inc
stos
pop
sub
dec
sub
lods
adc
inc
stos
stos
fldcw
lret
inc
lods
adc
adc
inc
mov
cmp
inc
mov
inc
aad
sub
pop
inc
lds
popf
sub
mov
and
sub
movsl
sub
sub
mov
inc
add
add
inc
lds
rcr
xchg
sub
and
mov
sub
mov
sub
mov
sub
inc
fdivrl
sub
mov
das
sub
popf
and
das
sub
popf
and
das
sub
sub
lds
repz
sub
sub
sub
das
sub
inc
lods
mov
pop
popf
sbb
dec
xor
das
sub
inc
mov
inc
cmp
xchg
xlat
inc
or
adc
xor
sub
sub
pop
adc
ds
repz
mov
fcomi
ds
incl
fcomi
ds
idivl
mov
xchg
lods
inc
ds
cmp
call
ds
ret
repz
repz
mov
pop
adc
sbb
or
lods
mov
pmaddwd
mov
sub
xor
stos
inc
aad
iret
lret
sub
cmp
sbb
inc
inc
sub
sbb
mov
inc
lret
pop
ds
mov
sub
mov
mov
inc
sbb
into
mov
lret
pop
mov
shll
xlat
jnp
dec
ds
arpl
inc
fwait
mov
mov
inc
lds
push
adcl
jne
sub
sub
lret
fldcw
lret
arpl
roll
lret
cmpl
inc
mov
ds
inc
mov
sub
shrl
adc
xor
sub
mov
xor
dec
lcall
mov
mov
ds
inc
mov
inc
dec
inc
mov
mov
inc
fwait
inc
lods
sub
int3
jno
xor
lret
inc
mov
inc
stos
xor
mov
sub
inc
mov
inc
mov
push
int
mov
inc
stos
xor
xor
sub
inc
mov
sub
ds
dec
lcall
jo
xor
mov
inc
lds
push
adcl
jne
sub
inc
lds
or
arpl
lods
dec
xor
sub
sub
inc
mov
sub
lods
adc
lret
sub
lods
adc
inc
adc
sub
lods
adc
cld
jno
sub
lods
adc
inc
xor
mov
inc
lds
lds
or
arpl
jnp
mov
xor
xor
adc
sub
push
sahf
sub
sub
cmp
mov
sub
add
ljmp
sub
inc
lds
mov
inc
mov
ds
inc
mov
lods
jmp
sub
inc
add
lcall
rcr
xchg
sub
cmp
rclb
imul
popf
in
cmovae
cmp
fidivs
call
aas
xor
out
xchg
lods
jmp
sub
inc
add
add
mov
sub
pushf
lahf
sub
idivl
mov
xor
rcrl
inc
adc
adc
lods
mov
or
sbb
subl
insl
sub
xchg
sub
sahf
xorl
sub
mov
and
xchg
sbb
xor
sub
pushf
sub
sub
add
sbb
lcall
ds
xchg
sbb
lcall
ds
and
xchg
push
divl
and
popf
and
inc
and
divl
and
popf
and
inc
adc
and
xchg
push
notl
imull
cmp
inc
and
divl
and
popf
and
inc
and
divl
and
popf
and
inc
adc
and
xchg
push
notl
imull
cmp
inc
and
cld
adc
xor
cmp
add
sbb
xor
sub
lea
sub
inc
and
inc
movsb
daa
xlat
mov
testl
sub
mov
and
mov
testl
sub
xorl
xchg
lods
add
xchg
lods
stos
jmp
cmp
aad
add
testl
sub
testl
enter
sub
mov
sub
mov
mull
mov
sub
mov
mull
aad
inc
fldcw
xchg
sub
inc
inc
sbb
mov
das
sub
testl
ret
sub
sub
mov
lds
loope
push
sbb
sub
adc
mov
out
mov
inc
add
xlat
fnstcw
sub
test
or
sub
loope
sub
inc
sbb
cmp
dec
adc
inc
mov
sub
shl
inc
sub
testl
mov
mov
sub
mull
adc
xchg
push
inc
fcoms
xlat
mov
sub
xchg
jecxz
and
mov
mov
loope
sbb
sub
adc
scas
xchg
mov
xlat
mov
jmp
inc
add
xlat
mov
sub
test
or
sub
shrb
sub
testl
sub
add
sub
xchg
shlb
mov
mov
sub
mov
mull
adc
xchg
sbb
xchg
inc
inc
lret
xlat
mov
das
sub
testl
ret
sub
sub
mov
and
sub
loope
xor
das
xchg
lods
out
mov
inc
add
inc
mov
dec
lcall
sub
test
xor
sub
xchg
mov
sub
aad
mull
mov
xorl
idivl
aas
xor
dec
inc
lret
sub
xchg
sub
mov
lods
jmp
mov
out
mov
sub
inc
add
mov
inc
lds
lds
lods
adc
mov
xor
xor
dec
inc
cmp
in
inc
sub
inc
add
mov
inc
lds
lds
lods
adc
mov
xor
add
in
cmp
aad
add
add
xlat
mov
sub
mov
sub
inc
adc
sub
xchg
push
mov
xor
mov
imulb
sub
rcr
inc
mov
inc
mov
xchg
xorl
cmp
inc
mov
xchg
xorl
sub
inc
mov
xchg
scas
xor
dec
sub
sub
and
scas
xor
cmp
loopne
sub
xchg
scas
ds
ds
mov
mov
inc
in
xchg
ficoms
xlat
mov
and
fidivs
loopne
rcrb
adc
and
in
xchg
into
xchg
fiadds
pop
xlat
mov
and
fisubrs
mov
jne
sub
shlb
mov
aad
dec
mov
mov
inc
mov
xchg
scas
xchg
into
inc
xor
xorl
mov
mov
mov
inc
mov
sbb
inc
in
addl
xorl
jecxz
mov
faddl
and
scas
inc
xchg
aaa
xorl
adc
sub
sub
loope
mov
inc
add
add
mov
sub
inc
lds
lds
lds
aad
sub
subl
cmp
inc
lds
push
mov
cmp
inc
lds
push
subl
cmp
inc
lds
cmp
aad
add
add
rcrl
fnstcw
mov
mov
sub
ds
stos
adcl
sub
cs
sub
jl
sub
inc
mov
mov
sub
inc
mov
xchg
mov
mov
lret
cld
fildll
sub
mov
sub
cs
sub
fldt
sub
sbb
sbb
adc
adc
push
or
sub
and
sub
xor
in
mov
adc
xchg
jecxz
xchg
lods
popf
mov
movq
sbb
mov
jne
sub
adc
mov
aaa
xorl
mov
inc
or
scas
bsf
dec
inc
mov
xchg
mov
mov
or
mov
xchg
mov
add
mov
inc
mov
add
jecxz
xchg
inc
ret
inc
add
push
jecxz
scas
xchg
xor
inc
lds
lret
ds
mov
xor
faddl
cmp
mov
mov
inc
mov
inc
adc
sub
inc
mov
inc
mov
jne
sub
aam
ret
inc
add
push
jecxz
scas
xchg
mov
scas
inc
lds
lret
mov
adc
sub
dec
sub
inc
inc
mov
xchg
mov
mov
ds
inc
mov
xchg
mov
cmp
mov
sbb
sub
dec
ss
inc
mov
xchg
mov
dec
dec
xchg
sub
inc
mov
xchg
mov
cmp
mov
sbb
sub
dec
ss
sub
sub
in
inc
mov
xchg
mov
cmp
mov
sbb
sub
dec
ss
sub
jmp
inc
sub
inc
add
add
mov
sub
pushf
and
sub
ds
inc
lds
lds
mov
adc
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
ds
xor
or
sub
mov
ds
inc
mov
inc
lds
test
xchg
sub
xchg
enter
stos
xorl
mov
inc
lds
enter
mov
mov
sub
in
decb
sub
inc
lds
aad
xchg
mov
lds
mov
inc
mov
faddl
and
enter
scas
inc
lds
enter
inc
dec
xorl
cmp
sub
sub
add
lds
mov
xor
xchg
rcrb
push
inc
aad
xchg
fadds
inc
mov
mov
mov
ds
inc
mov
inc
mov
faddl
and
mov
inc
mov
inc
mov
mov
lds
mov
xor
inc
mov
xchg
mov
or
mov
xchg
mov
or
inc
mov
inc
mov
faddl
and
mov
xor
inc
mov
xchg
mov
or
inc
mov
xchg
mov
inc
mov
inc
mov
fcoml
xor
xorl
gs
mov
inc
mov
faddl
cld
xchg
mov
mov
xor
repz
sub
and
mov
sub
mov
xchg
mov
inc
mov
dec
xor
sub
sub
sub
cmpl
mov
xor
jmp
sub
inc
add
add
mov
sub
mov
sub
xlat
mov
sub
inc
mov
test
xchg
sub
xchg
mov
sub
scas
sbb
insl
mov
xor
sbb
mov
mov
sub
mov
sub
mov
sub
inc
aad
xchg
fdivs
into
sbb
insl
aad
xchg
mov
inc
mov
xchg
mov
cmp
xor
sub
inc
mov
xchg
mov
inc
dec
xor
sub
sbb
or
sub
cs
sub
jl
sub
inc
mov
ds
mov
sub
pushf
and
sub
ds
mov
sub
ds
inc
lds
enter
lds
lds
mov
mov
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
inc
mov
ds
inc
mov
ds
inc
mov
ds
inc
mov
inc
aad
cs
loopne
sub
fdivl
fiaddl
mov
sub
add
aad
xchg
enter
lret
aam
xorl
inc
inc
dec
cmp
pop
inc
lds
in
xchg
call
scas
xorl
ds
cmp
push
mov
sub
inc
in
inc
mov
in
xor
mov
loopne
sub
mov
inc
sub
mov
xor
inc
mov
dec
cwtl
lds
mov
cmp
pop
inc
mov
inc
mov
adc
dec
cwtl
lds
mov
jne
sub
pop
xor
xor
ret
xchg
mov
in
xor
mov
loopne
sub
lods
ds
xor
inc
adc
add
in
sub
subl
rol
xchg
mov
enter
xorl
scas
adc
inc
mov
xchg
enter
mov
fmull
cld
inc
mov
jne
sub
and
mov
adc
into
dec
ss
push
cs
sub
sub
sub
inc
lds
mov
xchg
mov
cmp
mov
fimuls
sub
dec
ss
sub
sub
jmp
sub
inc
add
add
das
sub
xlat
inc
or
sbb
flds
cmp
lods
adc
rcr
cld
adc
sub
inc
daa
push
inc
cltd
inc
faddl
fwait
inc
mov
cld
mov
inc
push
sbb
sub
cld
repz
sub
loop
inc
inc
ss
sub
cld
mov
adc
sub
lret
cld
mov
sub
lods
adc
xchg
mov
lods
jmp
xor
inc
mov
add
sub
sub
xchg
lods
ss
add
dec
test
idivl
push
mov
sub
sub
rclb
ds
mov
sub
sub
sub
sub
lret
inc
mov
cld
shrl
sub
inc
add
mov
xor
xor
mov
sub
lods
dec
xor
sub
sub
stos
imul
mov
xchg
shrb
sbb
xorl
sub
das
sub
lds
cmc
and
xchg
mov
mov
inc
nop
sub
xchg
or
lcall
inc
inc
negl
dec
lcall
mull
in
dec
lcall
test
cmp
and
dec
test
imul
xchg
sbb
mov
dec
jmp
inc
lds
popf
lds
test
aaa
sub
inc
adc
sub
lea
adc
xor
dec
dec
sbb
sub
xchg
lods
jmp
cmp
inc
lds
scas
sub
notl
mov
lods
add
aad
add
add
flds
inc
mov
adc
sub
sub
sub
inc
mov
inc
fldenv
mov
inc
cmp
sub
mov
inc
cmp
mov
inc
cmp
sub
sub
mov
inc
cmp
sub
sub
mov
inc
cmp
sub
ds
inc
cmp
mov
inc
cmp
sub
int3
inc
cmp
sub
aam
cmp
sub
mov
cld
hlt
sub
sub
inc
mov
int3
sub
ds
lods
dec
xor
sub
sub
mov
sub
daa
jae
arpl
imul
xor
and
xor
ds
ds
xor
in
xchg
loop
in
popf
in
pop
pop
add
inc
aad
inc
and
jmp
in
daa
push
adc
inc
arpl
aad
inc
mov
inc
aad
xor
xor
aad
mov
sub
ds
inc
aad
xor
mov
sub
sub
inc
lds
lods
adc
fwait
inc
mov
xor
add
aam
in
mov
in
mov
out
jmp
sub
stos
inc
mov
sub
inc
ds
mov
scas
inc
scas
mov
dec
int3
sub
push
xchg
xorl
sub
idivl
sub
mov
dec
lcall
mull
lods
idivl
sub
sub
loope
flds
inc
cmp
sub
cmp
mov
jecxz
scas
xchg
stos
scas
inc
aas
sub
dec
adc
inc
cmp
sub
jmp
cs
xor
sub
pushl
out
lods
fcos
cmp
jmp
aas
into
cs
imul
push
add
into
dec
adc
sub
sub
sub
fdivl
mov
aas
xchg
mov
sub
scas
cld
cmp
sub
scas
adc
mov
cs
sub
sub
push
inc
stos
xor
inc
mov
inc
or
inc
int
xor
cmp
sub
sub
adc
dec
inc
sbb
sbb
jno
xor
xor
mov
aad
xor
mov
xor
adcl
sub
add
sub
inc
mov
inc
adc
ds
cld
inc
or
sub
lods
adc
kandnw
inc
or
adc
stos
cmp
mov
fs
sub
lret
cld
dec
adc
sub
jbe
sub
sub
mov
sub
test
or
sub
adc
push
or
sub
adc
xchg
mov
sub
adc
jne
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
sub
inc
mov
ds
sub
mov
ss
sub
sub
xchg
ds
sub
inc
mov
pop
sub
or
lret
xor
ds
xor
dec
mov
lds
inc
lds
aad
xchg
fisubrl
subl
xor
dec
mov
ds
cmp
push
les
sub
inc
aad
inc
mov
in
xor
mov
loopne
sub
ss
sub
inc
cmp
xchg
fisubrl
xor
inc
mov
dec
cwtl
lds
xchg
mov
cmp
sub
sbb
inc
sbb
sub
xchg
mov
adc
dec
cwtl
lds
xchg
mov
jne
sub
sub
or
xor
leave
xchg
mov
in
xor
ss
sub
inc
dec
loopne
sub
lods
ds
xor
inc
adc
add
lds
aad
sub
subl
rol
xchg
mov
lds
lret
sub
xchg
mov
scas
adc
inc
lds
xchg
mov
mov
inc
mov
les
inc
mov
jne
sub
xchg
lret
dec
dec
sub
xor
mov
sub
sub
cld
leave
sub
mov
sub
sub
call
adc
lret
cld
mov
mov
inc
stos
mov
lods
adc
sub
push
inc
lds
sub
adc
sub
sub
sub
ds
push
or
sub
adc
xchg
mov
sub
adc
jne
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
sub
sub
fs
sub
inc
mov
ds
mov
ds
sub
sub
sbb
pop
sub
add
lret
xor
ds
xor
dec
mov
lds
inc
lds
aad
xchg
fisubrl
subl
xor
dec
mov
ds
cmp
push
pushf
mov
sub
inc
aad
inc
mov
in
xor
mov
loopne
sub
ss
sub
sub
inc
sub
mov
xor
inc
mov
dec
cwtl
lds
xchg
mov
cmp
sub
sbb
inc
adc
sub
xchg
mov
adc
dec
cwtl
lds
xchg
mov
jne
sub
sub
or
xor
leave
xchg
mov
in
xor
ss
sub
sub
loopne
sub
lods
ds
xor
inc
adc
add
lds
aad
sub
subl
rol
xchg
mov
lds
lret
sub
xchg
mov
scas
adc
inc
lds
xchg
mov
mov
inc
mov
pushf
mov
inc
mov
inc
mov
jne
sub
xchg
lret
mov
ret
dec
shrb
sub
sub
xor
xor
or
sub
push
inc
stos
mov
lods
adc
lds
sub
lods
sub
mov
cmc
push
sub
mov
mov
sub
ds
push
or
sub
adc
inc
mov
xchg
mov
sub
adc
jne
sub
mov
icebp
sub
xor
mov
xor
inc
mov
ds
sub
sub
cmp
shrl
sub
inc
mov
ds
sub
inc
mov
ds
sub
inc
mov
inc
lds
loopne
sub
or
rolb
sub
sub
sub
add
adc
mov
adc
xorl
inc
inc
lea
inc
aad
xchg
fisubrl
subl
xor
dec
mov
ds
cmp
mov
sub
inc
aad
inc
mov
in
xor
mov
loopne
sub
ss
sub
sub
inc
sub
mov
xor
inc
mov
dec
cwtl
lds
xchg
mov
cmp
sub
sbb
lds
xor
inc
mov
dec
cwtl
lds
xchg
mov
jne
sub
sub
or
xor
leave
xchg
mov
in
xor
ss
sub
sub
loopne
sub
lods
ds
xor
inc
adc
add
lds
aad
sub
subl
rol
xchg
mov
lds
lret
sub
xchg
mov
scas
adc
inc
mov
xchg
lret
dec
mov
aam
xor
lds
mov
jne
sub
sbb
mov
adcl
ret
dec
ss
sub
sub
mov
mov
ljmp
ljmp
sub
adc
sub
mov
cmp
cld
mov
and
sub
inc
mov
jmp
sub
inc
add
int
mov
xor
mov
sub
ds
inc
stos
xor
inc
pop
inc
mov
inc
stos
cmp
inc
mov
inc
stos
cmp
xor
inc
mov
pushl
sti
sub
lret
ljmp
sub
xor
sbb
ds
inc
mov
lods
adc
inc
mov
lret
shrl
adc
sub
ds
inc
mov
loope
lods
adc
inc
mov
inc
lds
ds
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
ret
push
mov
sub
mov
mov
and
mov
mov
sub
mov
movzbl
mov
sub
mov
leave
ret
push
mov
sub
movzbl
mov
sub
mov
mov
mov
xor
mov
mov
xor
mov
leave
ret
push
mov
push
push
movl
movl
cmp
mov
mov
adc
movl
mov
movl
addl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
mov
movl
cmpl
jg
mov
or
mov
mov
mov
pushl
mov
mov
pushl
lea
push
call
call
test
je
test
mov
movzwl
sbb
mov
mov
mov
xor
mov
addl
jmp
mov
mov
and
mov
mov
mov
mov
add
mov
mov
lea
mov
mov
add
mov
mov
mov
leave
ret
push
mov
push
push
call
mov
mov
sub
push
pop
push
call
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
mov
mov
test
jne
push
push
call
movl
cmpl
jbe
mov
push
push
lea
mov
push
pushl
pushl
call
add
mov
jmp
cmp
jne
call
mov
or
mov
pushl
push
push
push
push
pushl
pushl
call
add
dec
jne
pop
pop
ret
push
mov
sub
mov
movzwl
sub
mov
mov
add
mov
cmp
mov
mov
adc
mov
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
sub
movzwl
mov
xor
mov
leave
ret
push
mov
push
push
cmp
movl
movl
mov
jne
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
mov
xor
mov
mov
xor
add
leave
ret
push
mov
sub
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
movl
cmpl
jl
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
xor
push
mov
cmp
mov
adc
add
mov
mov
mov
mov
test
mov
sbb
push
pop
sub
add
cmpl
mov
mov
mov
pop
jne
mov
xor
add
leave
ret
push
mov
push
mov
mov
movl
cmpl
jg
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
add
mov
mov
push
lea
and
test
mov
sbbb
mov
mov
imul
imul
mov
mov
imul
lea
and
mov
or
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
jmp
cmp
jne
mov
mov
mov
mov
rorb
xor
xor
lea
cmp
lea
mov
mov
mov
sbb
xor
mov
imul
mov
and
mov
xor
add
mov
imul
lea
and
mov
or
cmp
jne
pop
leave
ret
push
mov
sub
mov
movzwl
or
movzwl
mov
sub
mov
mov
movzwl
xor
mov
leave
ret
push
mov
sub
push
call
cmpw
je
xor
leave
ret
movl
lea
movl
mov
call
movl
mov
lea
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
call
movl
cmpl
jle
mov
mov
mov
mov
mov
mov
lea
mov
call
test
je
call
mov
cmp
mov
mov
adc
mov
mov
mov
mov
mov
xor
mov
and
mov
mov
mov
add
mov
mov
jmp
movl
addl
push
call
push
mov
sub
mov
movl
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
subl
orl
push
movl
cmpl
jle
mov
orb
mov
push
mov
push
lea
mov
pushl
pushl
call
mov
mov
xor
mov
add
mov
add
cmp
je
mov
jmp
push
pushl
push
pushl
call
lea
test
lea
mov
mov
mov
adc
mov
mov
mov
add
mov
xor
mov
mov
and
pop
add
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
lea
movl
cmpl
ja
mov
mov
xor
movzbl
and
mov
xor
mov
push
movl
movl
pop
mov
test
jne
mov
add
mov
mov
xor
add
mov
inc
cmp
jb
push
push
mov
test
mov
movzwl
sbb
mov
push
mov
mov
xor
lea
mov
mov
mov
sub
mov
mov
mov
xor
mov
add
movzbl
or
mov
inc
movzwl
xor
mov
cmp
jne
mov
mov
mov
sub
mov
mov
test
jne
mov
mov
mov
cmpl
jne
movl
cmpl
jl
movzwl
movzbl
xor
mov
mov
mov
adc
lea
mov
mov
mov
sub
mov
mov
xor
mov
movzbl
xor
mov
mov
incl
shll
cmp
mov
movzwl
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
mov
mov
mov
mov
dec
not
cmpl
jge
movzbl
and
mov
jmp
mov
xor
mov
movzwl
rcr
mov
and
mov
mov
xor
mov
mov
lea
mov
mov
cmp
js
mov
adc
jmp
mov
add
mov
mov
rcr
mov
mov
mov
mov
sub
mov
xor
mov
jmp
mov
dec
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
sub
mov
xor
cmp
mov
jne
mov
mov
mov
mov
movl
jmp
cmpl
je
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
and
mov
mov
movl
cmpl
ja
mov
sbb
mov
addb
mov
xor
xor
add
add
xor
div
shl
mov
jmp
cmp
jne
pushl
call
jmp
cmp
jne
mov
mov
push
orl
pushl
mov
call
mov
jmp
cmp
jne
mov
mov
push
push
push
push
push
pushl
call
add
xorl
mov
lea
xor
mov
xor
lea
test
jne
mov
mov
xor
mov
xor
xor
xor
add
lea
div
shl
mov
pushl
pushl
call
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
inc
movl
cmpl
jl
xor
mov
mov
mov
cmpl
jb
mov
adc
jmp
mov
add
mov
xor
push
xor
pop
div
cmp
jbe
mov
xor
inc
xor
mov
cmp
jne
mov
mov
add
mov
pop
xor
pop
inc
pop
leave
ret
push
mov
sub
movzwl
movzbl
and
mov
mov
mov
and
mov
mov
movzbl
or
leave
ret
push
mov
sub
movl
movl
movl
movl
lea
mov
lea
mov
lea
mov
push
lea
push
mov
mov
mov
push
mov
movl
mov
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
call
mov
cmp
je
mov
cmpl
je
cmpl
jne
mov
jmp
cmp
je
movl
cmpl
jle
movzwl
dec
mov
mov
rorb
mov
mov
xor
mov
add
xor
cmp
je
mov
cmp
jne
mov
xor
mov
xor
add
cmp
jb
mov
addl
mov
cmp
jae
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
call
cmpl
jb
mov
movzwl
mov
dec
cmp
ja
cmp
jge
mov
mov
adc
mov
jmp
mov
mov
and
mov
mov
or
addl
mov
movl
cmpl
jb
movzwl
mov
or
movzwl
mov
add
mov
mov
or
mov
andl
mov
xor
mov
add
imul
movzwl
mov
lea
push
movzwl
sub
mov
mov
xor
add
mov
imul
mov
add
push
cmp
mov
adc
mov
pushl
mov
call
cmpl
je
mov
xor
inc
xor
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
call
mov
dec
mov
jmp
mov
mov
or
mov
mov
movl
cmpl
ja
mov
or
mov
mov
mov
add
xor
mov
mov
cmp
je
mov
cmp
mov
mov
sbb
mov
xor
mov
mov
mov
sub
mov
add
mov
mov
mov
xor
mov
imul
mov
mov
mov
mov
cmp
mov
adc
mov
imul
xchg
dec
dec
cmp
jne
mov
mov
mov
mov
xor
mov
mov
xor
lea
mov
add
mov
mov
add
dec
jne
jmp
mov
mov
rcr
mov
mov
call
mov
jmp
lea
mov
mov
mov
xor
xor
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
movzbl
sub
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
mov
movl
cmpl
jg
pop
div
cmp
je
cmp
je
push
xor
mov
mov
sub
mov
mov
pop
div
cmp
jae
cmp
je
push
xor
mov
mov
mov
sub
pop
div
cmp
ja
cmp
je
xor
mov
sub
mov
add
mov
div
cmp
je
cmp
jne
mov
movzwl
or
mov
mov
mov
mov
add
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
mov
mov
mov
movl
jmp
movl
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
cmp
mov
mov
sbb
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
sub
mov
xor
inc
xor
cmp
jne
pop
pop
ret
push
mov
sub
movl
lea
mov
movl
cmpl
ja
mov
mov
add
movzwl
adc
movzwl
or
mov
movl
movl
movl
movl
movl
mov
mov
movl
call
test
je
push
push
mov
mov
cmp
jne
lea
mov
jmp
cmp
jne
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
test
je
mov
mov
or
mov
mov
mov
add
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
jmp
mov
mov
imul
orl
mov
sub
test
mov
mov
adc
mov
or
mov
mov
shr
mov
mov
xor
xor
sub
sub
xor
cmp
jne
pop
pop
leave
ret
push
mov
sub
mov
movzwl
add
mov
mov
mov
sub
mov
cmp
mov
mov
adc
leave
ret
push
mov
sub
test
movzbl
mov
adc
mov
mov
add
cmp
mov
mov
sbb
leave
ret
push
mov
sub
mov
mov
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
movl
cmpl
jg
movl
mov
mov
cmp
mov
mov
adc
mov
push
push
mov
mov
xor
mov
neg
mov
xor
sub
test
mov
mov
sbb
mov
mov
mov
movl
lea
mov
mov
mov
and
mov
xor
mov
add
push
cmp
jne
mov
mov
adc
mov
jmp
movzbl
mov
or
mov
mov
mov
xor
mov
mov
mov
orl
mov
movzwl
or
mov
imul
mov
mov
movzwl
sub
mov
movl
addl
mov
mov
xor
lea
mov
or
mov
mov
mov
xor
cmp
mov
mov
sbb
mov
add
mov
xor
movzwl
add
cmp
ja
movl
mov
add
mov
add
mov
mov
test
mov
sbb
mov
xor
mov
or
mov
add
mov
movzwl
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
call
jmp
mov
movl
cmpl
je
mov
xor
add
imul
mov
mov
mov
push
call
test
je
mov
movzwl
add
mov
xor
add
movzbl
push
mov
mov
xor
add
imul
mov
mov
add
mov
mov
call
test
jne
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
movzwl
push
mov
mov
call
test
jne
lea
mov
mov
mov
sub
movl
mov
mov
xor
lea
mov
xor
xor
xor
xor
mov
lea
mov
add
movzwl
cmp
mov
jbe
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
cmp
mov
mov
adc
mov
movl
movl
cmpl
je
mov
cmpl
jge
movzwl
rcl
mov
jmp
movzwl
rcl
mov
mov
or
mov
mov
xor
xor
lea
mov
addb
xor
mov
xorl
mov
mov
xor
add
imul
mov
movzbl
mov
sub
xor
cmp
je
mov
mov
and
addl
mov
mov
cmp
je
andl
cmp
mov
sbb
mov
xor
sub
add
mov
mov
shlb
mov
imul
mov
jmp
mov
xor
sub
add
mov
addl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
test
mov
adc
mov
xor
add
cmp
je
xorl
addl
addl
jmp
mov
mov
xor
lea
mov
jmp
movl
cmpl
jg
movzwl
xor
lea
mov
mov
mov
or
mov
mov
xor
mov
cmpl
jb
mov
xor
mov
jmp
lea
mov
mov
mov
sub
mov
mov
and
mov
orl
mov
imul
mov
mov
and
mov
mov
xor
add
mov
add
xor
cmp
pop
pop
pop
je
cmp
movzwl
sbb
mov
mov
xor
add
mov
cmp
mov
jne
mov
xor
mov
rorb
mov
sub
add
mov
mov
mov
mov
leave
ret
push
mov
push
push
cmp
movl
movl
mov
not
mov
mov
jne
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
mov
mov
add
cmp
mov
mov
sbb
mov
mov
add
mov
leave
ret
push
mov
sub
mov
mov
xor
mov
cmp
mov
movzbl
sbb
mov
mov
mov
xor
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
add
mov
movzwl
mov
xor
mov
leave
ret
push
mov
sub
mov
mov
sub
mov
movzwl
mov
add
mov
movzbl
mov
or
mov
leave
ret
push
mov
sub
mov
mov
push
movl
cmpl
jle
push
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
cmp
mov
mov
adc
mov
xor
movl
mov
add
movl
mov
mov
mov
add
mov
mov
xor
cmp
lea
mov
mov
mov
adc
add
mov
mov
mov
lea
mov
mov
mov
or
mov
mov
mov
mov
test
movzwl
mov
adc
mov
mov
lea
mov
mov
mov
mov
or
mov
mov
lea
mov
mov
mov
lea
lea
mov
mov
mov
or
mov
mov
movzwl
mov
or
mov
mov
lea
mov
movzbl
mov
xor
mov
mov
mov
lea
mov
mov
pushl
mov
shr
mov
mov
mov
orl
subl
push
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
push
push
pushl
call
jmp
push
movl
cmpl
jbe
movzbl
adc
mov
mov
mov
sub
mov
mov
sub
lea
push
mov
mov
shrb
mov
mov
mov
movl
mov
cmp
andl
sbbl
pushl
pushl
call
mov
xor
mov
add
push
call
mov
mov
subl
mov
mov
xor
xor
lea
cmp
je
mov
mov
cmp
jae
mov
dec
mov
jmp
mov
mov
sbb
mov
inc
mov
xor
add
mov
mov
mov
mov
add
mov
mov
xor
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
mov
cmp
movzwl
movzbl
adc
mov
mov
mov
or
leave
ret
push
mov
sub
mov
mov
or
mov
movzbl
mov
and
mov
mov
mov
and
mov
leave
ret
push
mov
push
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movl
cmpl
jle
movzwl
add
movzwl
or
mov
mov
mov
and
pushl
mov
call
xor
inc
xor
cmp
jne
pop
pop
pop
ret
push
mov
sub
movl
movl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
cmpl
je
xor
mov
and
mov
mov
add
mov
mov
xor
mov
movl
mov
xor
add
mov
mov
movl
addl
mov
lea
push
mov
xor
add
mov
push
pushl
addl
andl
add
pushl
push
push
mov
subl
xorl
addl
mov
pushl
pushl
call
add
leave
ret
push
mov
sub
mov
movzwl
or
test
mov
mov
sbb
mov
mov
and
mov
leave
ret
push
mov
sub
mov
mov
xor
mov
mov
or
mov
mov
xor
leave
ret
push
mov
sub
movl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
movl
cmpl
jae
mov
mov
push
push
mov
xor
mov
ror
mov
mov
add
cmp
je
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
orb
mov
mov
mov
add
cmpl
je
mov
sub
pushl
pushl
mov
mov
pushl
call
mov
mov
mov
xor
add
mov
mov
addl
xor
add
mov
mov
jmp
mov
xor
movl
cmpl
jne
mov
add
mov
mov
add
pop
add
pop
leave
ret
push
mov
push
push
mov
movl
movl
cmp
jne
pushl
pushl
pushl
movl
andl
pushl
pushl
pushl
pushl
call
jmp
mov
cmp
jne
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jb
mov
movl
cmpl
ja
mov
or
mov
mov
addb
movzbl
add
cmp
mov
sbb
mov
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
call
push
jmp
cmpl
jne
push
pushl
pushl
pushl
call
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
sub
mov
mov
add
pop
cmp
jne
mov
or
jmp
mov
add
mov
mov
sub
mov
mov
mov
mov
xor
mov
test
mov
mov
adcb
mov
xor
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
ret
push
mov
sub
movzwl
mov
or
movzbl
mov
or
movzbl
mov
or
leave
ret
push
mov
sub
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
movl
cmpl
jbe
movzwl
xor
mov
sub
movl
movl
mov
push
cmp
mov
sbbb
push
mov
xor
mov
addb
mov
add
mov
movl
call
test
je
call
mov
mov
movzbl
sub
mov
mov
xor
cmp
mov
sbb
add
mov
mov
movl
mov
mov
sub
mov
movl
mov
mov
cmpl
jne
mov
mov
and
jmp
lea
mov
mov
mov
adc
mov
mov
add
mov
mov
xor
add
cmp
movzwl
sbb
mov
mov
mov
movl
cmp
mov
mov
adc
mov
movl
movl
movl
lea
test
mov
mov
adc
mov
mov
lea
mov
lea
mov
movzwl
or
mov
mov
lea
mov
cmp
jl
lea
mov
mov
mov
sub
jmp
mov
mov
sbb
mov
mov
or
mov
mov
mov
add
mov
and
xor
xor
mov
add
sub
mov
cmp
je
mov
mov
mov
add
mov
mov
xor
xor
add
cmp
je
mov
add
mov
jmp
mov
mov
add
mov
shrb
mov
add
imul
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
mov
movl
cmpl
jae
mov
sub
mov
mov
add
mov
xor
mov
mov
mov
xor
xor
add
add
imul
mov
mov
movl
mov
mov
movzwl
or
mov
mov
and
add
lea
mov
add
mov
mov
xor
add
incl
cmpl
jne
mov
mov
xor
mov
movzbl
xor
sub
sub
mov
and
mov
mov
mov
xor
add
cmp
jne
mov
movzbl
xor
lea
orl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
movzbl
xor
add
mov
jmp
movl
cmpl
jle
mov
sub
movzbl
rol
mov
mov
and
mov
xor
inc
mov
and
mov
lea
xor
imul
inc
mov
cmp
jne
mov
jmp
mov
cmpl
jnp
mov
xor
jmp
mov
or
mov
mov
xor
mov
xor
add
ror
xor
cmp
mov
mov
sbb
mov
mov
xor
lea
xor
mov
cmp
jne
mov
mov
xor
orl
subl
xorl
add
imul
xor
mov
mov
cmp
jle
movzbl
or
jmp
mov
and
mov
mov
not
mov
xor
lea
mov
xor
mov
xor
mov
xor
mov
sub
add
cmp
jne
mov
mov
sub
mov
mov
xor
movl
cmpl
ja
mov
mov
or
add
pop
pop
pop
leave
ret
xor
outsl
and
jb
insl
and
and
add
and
and
outsb
and
and
inc
xor
xor
add
inc
adc
sub
inc
add
addb
add
sbb
add
inc
addb
addb
addb
and
cld
dec
inc
add
inc
add
add
fxch
ljmp
add
cmp
add
or
add
cli
cli
fdivrp
sti
push
push
push
push
push
push
push
dec
incl
inc
add
inc
add
add
addb
add
add
addb
jns
add
fadds
inc
add
test
faddl
inc
add
addb
addb
addb
add
add
add
add
add
add
std
stc
decb
std
hlt
data16
idiv
xor
repnz
adc
std
enter
leave
aad
adc
xor
stc
decb
std
hlt
data16
idiv
xor
repnz
adc
std
enter
leave
aad
and
xor
stc
decb
std
hlt
cmp
lock
imul
stc
dec
aad
xor
inc
daa
inc
aaa
push
xor
decb
std
cmc
imul
cmp
int3
stc
dec
aad
inc
es
daa
push
aaa
pusha
xor
decb
std
cmc
imul
incb
std
int3
stc
dec
aad
push
es
daa
pusha
aaa
jo
ja
incb
std
stc
gs
hlt
cmp
lock
push
dec
aad
bound
jno
jo
xorb
idiv
pop
std
stc
gs
hlt
aaa
std
lock
push
std
repnz
stc
dec
aad
jb
andl
xchg
idiv
pop
std
stc
gs
hlt
decb
std
lock
gs
repz
stc
dec
aad
andb
daa
nop
aaa
mov
pop
std
stc
gs
hlt
decb
std
lock
imul
stc
dec
aad
xchg
mov
xor
stc
push
std
hlt
imul
idiv
aad
mov
aaa
shlb
aaa
shlb
xlat
cmc
ss
stc
adc
sti
decb
std
cmc
fs
repnz
stc
dec
aad
ret
daa
shlb
loopne
out
incb
add
addl
hlt
addb
test
popa
fs
add
pop
fs
push
sub
inc
add
jne
add
fs
push
add
or
add
ja
add
pop
jne
push
pop
push
add
gs
adc
cmpsb
adc
adc
push
adc
ss
adc
test
mov
adc
jl
adcl
adc
xchg
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
xchg
sbb
adc
adc
cmpsb
adc
adc
push
adc
ss
adc
test
mov
adc
jl
adcl
adc
xchg
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
xchg
sbb
adc
addr16
push
jne
inc
push
xchg
sub
pusha
adc
add
dec
add
add
dec
add
add
dec
add
add
dec
add
add
add
imul
add
add
inc
add
dec
add
push
add
add
add
add
inc
add
add
add
or
inc
add
out
jmp
test
icebp
out
pushl
inc
add
out
decl
inc
add
out
incl
fs
stc
incb
add
add
add
add
pop
add
jbe
add
add
sbb
sbb
sbb
sbb
add
stc
imul
adc
cmc
gs
idiv
pop
std
lock
std
icebp
stc
repnz
aad
adc
incb
add
xor
aaa
add
jae
imul
jae
add
add
jae
fs
push
add
gs
xor
add
add
add
dec
inc
add
jb
outsb
push
add
add
adc
add
adc
xchg
or
add
jbe
add
jo
add
imul
add
add
fs
push
add
popa
add
imul
add
add
add
inc
stc
js
incb
pop
lock
pop
int
pop
push
std
pop
mov
pop
sub
int
add
inc
pop
inc
add
arpl
insb
std
push
std
imul
std
push
std
insl
std
and
sub
stc
incb
add
std
adc
std
sub
stc
fs
adc
insl
std
pusha
std
sbb
imul
add
add
add
push
add
addl
add
jecxz
repz
xor
aaa
add
xor
cmp
cmp
sub
xor
jne
pop
xchg
xor
add
xchg
out
shlb
push
jo
popa
cmc
popa
cs
aaa
pop
ja
sbb
xchg
xchg
cmpsb
lret
arpl
out
xor
mov
jg
data16
repnz
int
mov
xchg
enter
and
push
outsb
pop
aas
push
and
pop
xor
push
add
xor
bound
add
jns
js
aaa
aas
add
dec
dec
jo
inc
and
cmp
xor
inc
xor
cmp
xor
imul
xor
jp
pop
jbe
xor
add
aaa
pop
data16
imul
add
add
dec
dec
dec
add
xor
xor
xor
inc
and
cmp
pop
popa
and
inc
arpl
xor
aaa
outsl
xor
xor
push
inc
fs
add
imul
jp
add
js
inc
xor
push
push
js
add
jno
and
add
jb
and
push
and
add
inc
bound
ja
sub
add
jne
push
inc
pop
xor
jp
add
add
insl
inc
pop
push
je
jo
inc
jbe
js
add
popa
cmp
and
xor
add
aaa
push
and
dec
jns
and
jno
add
cmp
xor
outsl
xor
js
add
xor
add
and
add
add
inc
sub
and
cmp
pop
ss
jno
push
imul
add
add
add
popa
xor
and
and
add
dec
and
xor
sub
xor
and
data16
pop
and
inc
xor
add
iret
lea
add
add
add
add
cli
lods
add
cli
xchg
add
int
xor
push
lahf
sub
mov
mov
leave
sub
cmp
mov
push
sub
mov
sub
lret
mov
mov
fndisi(8087
cltd
push
ds
pop
nop
push
ljmp
clc
imul
mov
sub
mov
je
adc
fwait
in
roll
adc
cs
or
aam
adc
and
ljmp
cmc
int3
aad
jns
add
clc
out
lock
xchg
sbb
sub
loopne
aas
push
xor
repz
ficomps
cltd
jecxz
inc
sub
scas
push
pop
fcmovu
ljmp
int3
pusha
and
sub
sub
mov
pop
dec
fmul
fs
jo,pt
test
xchg
outsl
andl
cmpsb
adc
jmp
mov
lods
add
jnp
sti
mov
mov
dec
cmp
call
and
movsl
ds
stos
addl
insb
inc
push
mov
xor
pop
pop
fisttpll
je
mov
out
nop
shlb
mov
push
cwtl
pop
inc
fdivr
sbb
mov
add
rorb
pushf
insb
xor
imul
dec
or
push
daa
mov
bound
in
add
lds
scas
mov
and
xor
sub
xor
xchg
mov
aaa
push
fmuls
pushf
sub
mov
fisttpll
icebp
insl
push
arpl
dec
sbb
mov
aad
xchg
inc
cmc
jb
in
scas
ror
or
cmpsl
or
les
ljmp
jbe
lock
push
ss
sub
movsb
jge
xor
mov
mov
imul
and
pop
xchg
adc
push
or
rcrl
int3
cmp
addb
lods
sbb
mov
dec
xchg
inc
push
mov
in
cmpsb
mov
rcll
sbb
push
and
lods
gs
test
jle
dec
dec
mov
and
cmp
add
test
adc
jbe
cld
aam
xchg
adc
or
aaa
xor
es
rcll
xchg
lods
cmp
movsl
dec
fisttpll
push
and
mov
cmp
pusha
fsubrs
jl
push
mov
or
adc
mov
mov
popf
sarb
cmpsb
sahf
sub
and
cmp
add
add
scas
push
add
les
repz
add
fbld
int3
sub
popa
dec
lahf
cmp
xchg
lods
and
jnp
outsb
ret
cmp
jg
lret
mov
push
mov
rcr
or
mov
ds
push
ljmp
push
mov
test
push
gs
or
xchg
cmpsl
je
sbb
sbb
fnstcw
push
cmpsb
int
jbe
pop
inc
rolb
sbb
call
sub
fidivs
xchg
stc
adc
jb
mov
push
jno
mov
or
xor
out
pop
fs
bound
and
mov
jg
mov
xchg
sbb
int3
cltd
cmp
bound
adc
test
cmp
mov
sub
outsl
cmp
mov
sub
std
jmp
cmpsl
jmp
sti
push
lahf
cmpsl
adc
insb
dec
sti
mov
pop
sbb
mov
cmp
fbld
lahf
adc
cmp
adc
fidivl
cmp
aad
xorl
popf
add
sub
sub
mov
jmp
sbbb
mov
andl
push
or
insb
in
test
or
mov
cld
xor
int3
out
mov
push
fcompl
and
xor
fadd
dec
gs
in
out
cmpsb
testl
sub
pop
arpl
daa
hlt
test
stc
into
xchg
xchg
sub
es
js
push
pushl
fsubr
mov
cwtl
mulb
fucomi
mov
mov
jecxz
push
int
xchg
jg
movsl
mov
ds
into
xor
and
cmp
cmp
pop
jnp
cwtl
inc
xor
inc
out
jecxz
cmp
das
xor
repnz
scas
inc
jmp
int3
imul
dec
outsb
and
dec
inc
sub
lds
lods
adc
or
scas
cmpsb
add
imul
xchg
movsl
lock
hlt
push
jne
cld
imul
sbb
movsl
adc
sbb
push
adc
inc
xchg
in
inc
repnz
jmp
inc
push
or
sbb
xchg
and
imul
adc
mov
push
push
mov
push
inc
ficoml
xchg
aam
pop
dec
cs
mov
add
aad
stos
push
fimuls
int
push
xchg
sub
sbb
pop
push
gs
and
mov
sbb
lods
insl
sbb
test
scas
xor
in
mov
push
lods
or
xchg
and
jo
or
call
test
testb
dec
sbb
add
inc
lds
xor
fnop
mov
in
add
imul
adc
lock
push
xor
cld
sti
lahf
mov
lcall
sbb
xchg
icebp
adc
xchg
xor
call
les
aas
mov
sbb
shrb
pop
and
lret
std
into
sub
in
xchg
xchg
sub
pushf
or
push
push
mov
and
andb
or
adcl
add
popa
sub
ret
mov
rorl
add
add
dec
xchg
mov
add
push
jns
dec
mov
xor
lret
mov
mov
scas
das
mov
shrb
inc
loope
xor
dec
and
mov
imul
cmp
mov
add
xchg
push
lea
and
ds
imul
aam
cmpb
jmp
lea
cs
sbbl
ljmp
inc
test
inc
adc
jmp
sbbb
adc
loope
or
push
clc
mov
fwait
or
jle
je
outsl
xor
sahf
insb
sub
sbb
mov
test
push
xchg
push
aam
jecxz
cmc
movsb
mov
ss
lea
jle
dec
mov
js
mov
jle
jo
or
scas
jmp
rcr
js
cld
rcr
call
jns
pop
xor
cmpsl
aam
cs
push
inc
sub
push
insl
xchg
outsb
pusha
fcoml
push
dec
call
ss
ja
mov
push
ja
out
mov
adc
movsb
dec
xor
popa
pusha
push
outsl
sub
dec
fsubr
inc
dec
addb
gs
fimuls
pop
scas
push
ror
rcrb
xchg
jbe
out
cmpsb
mov
imul
pop
pop
sub
inc
into
dec
pop
add
sbb
push
adc
xchg
cmpsb
push
js
outsl
or
stos
or
repnz
fldl
pusha
adc
cmp
cltd
cmp
push
adc
cmp
or
int3
jmp
nop
add
mov
mov
fcoms
ja
es
call
sti
xor
lret
popf
pop
lods
inc
adc
jnp
negb
pop
push
lock
fistps
idivl
test
mov
xchg
clc
clc
ffree
imul
pop
lods
into
andb
mov
daa
xchg
sub
jnp
inc
mov
mov
outsl
loop
enter
inc
repnz
xchg
xchg
cmp
cltd
add
in
push
push
outsl
cmp
pop
jne
mov
push
sbb
sahf
subb
repz
mov
lea
cmpl
lcall
into
insl
adc
and
push
sarl
addl
test
aam
cmp
mov
fmull
cmp
fcomip
jo
mov
movsb
or
mov
sbb
push
in
mov
jge
stc
dec
add
cmp
cmc
sahf
into
ret
icebp
xchg
cltd
mov
xchg
lret
jns
lahf
adc
fildll
dec
or
mulb
out
mov
clc
out
mov
stos
mov
inc
xchg
push
sbb
push
sar
xor
inc
cmp
pop
stc
inc
lahf
ret
movsb
popa
sub
or
popa
add
push
sub
or
mov
pop
dec
test
lret
cmp
lret
xor
scas
shlb
sbb
int
or
scas
je
lea
enter
scas
pop
jne
ss
icebp
dec
push
add
xlat
add
cmp
fisubs
inc
jmp
pop
jmp
mov
add
sub
mov
jae
out
add
adc
fwait
fistpll
or
out
and
outsl
ss
pushf
out
jnp
inc
jecxz
popf
cld
int
test
loopne
cld
stc
sub
es
xchg
mov
pop
mov
test
aaa
repnz
inc
leave
lret
adc
adc
in
push
pop
lods
iret
lcall
rcrl
into
popf
aad
mov
data16
mov
aas
jns
in
std
pop
xchg
icebp
hlt
jl
sub
ja
xor
shll
mov
ds
push
cmpl
mov
pop
mov
cmp
or
iret
cmpsl
mov
push
cmpl
xor
xchg
jb
pop
pop
aad
inc
outsl
push
sub
push
push
pop
add
cmp
xchg
inc
scas
xor
fcmovnb
subb
xchg
jge
push
jns
push
jp
push
lret
aad
xchg
push
lds
inc
cs
sub
into
xor
fnstcw
mov
pop
loopne
arpl
cmp
sbb
test
mov
inc
push
cmpsl
cmp
or
aas
jo
repnz
andl
stos
add
es
sbb
mov
rcr
mov
imul
sub
mov
inc
divl
jnp
lds
call
add
jo
test
sub
pusha
pop
out
sub
jbe
and
xorl
or
mov
and
mov
adc
das
mov
sub
inc
mov
or
in
mov
jbe
out
aaa
ja
cwtl
xchg
outsl
cltd
fcomps
aas
js
pop
out
test
mov
jne
mov
adc
je
lods
xchg
mov
dec
aam
jns
or
xor
movsb
inc
add
and
sbb
mov
mov
jns
addl
xlat
xchg
jl
inc
mov
in
push
aaa
hlt
mov
pop
and
cmp
xchg
div
xchg
and
shr
loope
mov
dec
push
in
mov
add
in
repnz
jo
sub
or
data16
je
push
faddl
pop
push
push
mov
gs
mov
stos
sub
cmp
js
pop
adc
inc
mov
jle
push
stc
notb
jne
setno
in
cmp
es
dec
cld
jmp
loope
and
or
or
stos
adcl
bnd
sahf
leave
fwait
iret
sarl
jg
pop
cli
addr16
pop
push
ss
ds
push
outsl
in
subl
jle
sarl
inc
cwtl
ja
loop
arpl
in
sub
cld
aas
into
fnstsw
jl
jb
loope
mov
xchg
sub
mov
xor
movsl
push
pop
rcrb
repz
rcrb
mov
jbe
fadds
cmp
cmp
xor
sub
rcr
cmpsb
int3
movsb
clc
push
cld
push
pop
les
lock
aaa
repnz
lds
addr16
into
cs
arpl
mov
es
fdivrl
or
dec
push
movsl
in
cld
js
jo
mov
push
std
sub
and
xchg
sarl
pop
and
pusha
stos
jo
add
mov
cmc
xorb
xchg
movsb
inc
insb
stos
int3
xchg
out
mov
mov
cmpsl
xor
scas
sbb
cmp
dec
dec
push
and
mov
js
aas
mov
out
and
in
inc
enter
mov
in
imul
cmp
in
lds
xor
pop
daa
mov
movaps
sub
mov
imul
mulb
mov
pop
aaa
sbb
add
inc
cmp
sbb
xchg
sub
pop
or
push
inc
movsb
lea
mov
inc
inc
push
adcl
mov
dec
imul
stos
js
loope
pop
ja
mov
mov
xchg
inc
mov
call
cmp
xor
jne
les
notl
mov
hlt
xlat
in
xor
cld
xor
repz
ret
mov
inc
pop
push
in
mov
add
fists
mov
pusha
adc
sahf
mov
dec
addr16
lcall
pop
inc
lret
add
mov
sub
mov
jmp
lahf
cmpl
in
adc
mov
mov
call
mov
mov
fdivl
cmp
rol
mov
mov
sti
cmc
repz
and
in
push
int
push
xor
out
push
cmp
push
add
or
mov
cmp
lods
and
sbb
iret
mov
loopne
loopne
mov
dec
ljmp
cwtl
insb
pop
mov
lods
loopne
or
mov
arpl
jne
imul
mov
mov
gs
aam
fwait
jno
int3
test
cmp
cmpsb
inc
and
rolb
ret
js
push
sahf
out
adc
mov
inc
test
mov
and
jge
imul
daa
add
xchg
out
popf
jmp
iret
dec
cmp
cmpsl
jns
loope
sti
mov
mov
jl
sbb
sub
in
int3
push
jne
mov
push
scas
out
inc
mov
nop
cwtl
lahf
icebp
sbb
and
cmp
and
inc
jbe
out
xchg
jae
rorl
notb
xor
enter
jo
outsb
push
add
inc
mov
lock
jl
mov
cmp
aad
push
mov
mov
sbb
sbb
dec
aaa
mov
sti
adc
ror
jge
lret
push
lock
js
adcb
test
ja
xchg
adc
test
cltd
push
push
into
stos
jno
lock
fcoms
lcall
mov
pop
sub
dec
fwait
inc
jp
lods
inc
bound
aas
in
dec
cmpl
in
lock
cmp
rcll
loope
add
sti
fst
inc
sub
cwtl
sub
stos
sub
pop
outsb
dec
fcom
fistpll
fnstenv
add
dec
je
cmp
daa
dec
lcall
xor
sbb
out
pop
push
ret
and
inc
inc
inc
ljmp
xlat
outsl
or
mov
lods
rol
or
sbb
xchg
adc
lcall
sbb
jae
rcrb
add
or
cld
das
lods
push
fidivs
sbb
jge
fidivrs
jmp
mov
sahf
aaa
cld
mov
imull
in
add
aas
out
sar
je
mov
lds
popl
ljmp
sbb
and
xchg
loopne
mov
sub
mov
jo
fidivs
mov
pop
pushf
pop
add
push
xchg
sub
out
nop
adc
push
mov
inc
adc
sub
ja
xor
lods
fcomp
imul
decb
stos
or
mov
js
push
std
lcall
lahf
and
or
xchg
dec
test
jmp
test
cltd
adc
sbb
shrb
pop
mov
pop
movl
cmp
rol
cmp
cmp
jecxz
stc
mov
popa
outsl
jmp
jne
icebp
pop
popf
mov
jmp
pop
repnz
lret
aas
sbb
sahf
icebp
fdivr
mov
xor
mov
xchg
outsb
cltd
out
xbegin
jns
jae
cld
cmp
scas
dec
add
stos
xchg
inc
mov
inc
cltd
addb
mov
stos
pop
push
movsl
cmp
lods
pop
inc
popa
mov
imul
cli
rol
mov
inc
or
mov
pushf
mov
lret
adc
xor
iret
ret
sbb
push
cmpsb
sbb
sar
pop
xchg
xor
xor
shlb
fldl
stos
jecxz
cmp
rorl
lcall
mov
cld
inc
lret
jge
scas
jno
cmpsb
ret
scas
xor
xchg
stos
jae
dec
dec
jns
mov
push
or
sub
cmp
sbb
pop
out
fbld
addb
inc
fistpl
outsl
fimuls
jg
mov
mov
cmp
mov
dec
lea
mov
push
jnp
loop
test
mov
dec
jno
aas
jbe
into
cld
jg
push
das
adc
sub
lcall
and
adc
insl
dec
mull
pop
outsl
push
pop
rorl
stc
xchg
sbb
adc
fisttps
icebp
imul
test
testb
or
rorl
shrl
adc
in
test
sub
hlt
out
sbb
sub
cmpb
movsb
pop
sub
jnp
pop
mov
call
mov
push
jnp
into
mov
sub
push
les
ret
loope
jl
repnz
sbb
push
clc
xor
push
idivb
stos
leave
icebp
mov
adc
fld
mov
jmp
adcb
jae
or
sub
dec
inc
ficomps
add
and
jecxz
inc
sub
loop
popf
cmp
iret
loope
and
scas
pusha
cld
mov
mov
push
inc
movsb
clc
cli
sub
shl
aam
mov
add
mov
jno
test
dec
pop
stos
sbb
or
out
mov
nop
jle
jl
sbb
pop
and
mov
cmpl
xchg
test
aad
mov
fsubrs
fisttps
orb
cmp
jne
cwtl
fstps
insl
mov
xchg
andl
and
fdivrp
cmp
shl
hlt
add
mov
les
idiv
jl
lret
mov
add
add
dec
insb
movsb
loopne
roll
hlt
pop
pop
scas
int3
mov
cmp
push
add
adc
nop
jns
lock
divb
dec
mov
mulb
stos
inc
xor
xor
movsb
mov
mov
dec
mov
sbb
add
je
sbb
ret
xchg
sti
sub
dec
or
jae
cmpsb
dec
mov
std
mov
js
push
or
sbb
js
mov
xorb
add
and
sbb
ret
jp
cltd
loope
inc
mov
addb
pusha
sbb
lret
and
lods
dec
rcrl
repnz
and
mov
inc
add
xlat
jl
xchg
jns
cli
leave
inc
lods
dec
fxch
faddl
xchg
aaa
xchg
aaa
addl
loope
lret
mov
inc
addl
cltd
movsb
push
leave
dec
scas
test
xor
pop
and
mov
dec
lret
fwait
push
push
xchg
mov
lea
cmp
stos
lods
fs
lock
adc
or
incb
ljmp
pop
add
or
cmpsl
and
iret
sarb
cltd
orb
pop
jns
mov
les
aaa
adc
inc
jl
mov
montmul
cmpsb
add
pop
loopne
dec
xor
mov
jl
dec
mov
leave
jecxz
test
pop
dec
insl
lcallw
fsubr
mulb
adc
orb
mov
sbb
or
cmp
cwtl
outsb
add
lahf
es
mov
mov
cli
scas
popa
push
je
mov
xlat
pop
xor
aad
pop
bound
ds
pop
and
push
cmp
mov
repz
push
dec
inc
shrb
cmp
lret
aam
call
stos
aad
clc
lret
jmp
or
sbb
inc
sti
pop
lret
ret
mov
adc
push
xchg
adcb
push
xchg
pop
add
or
push
shlb
fwait
das
sub
rcr
push
cmp
jle
cmp
jae
jle
xor
jl
sti
dec
mov
xor
shl
ja
lods
dec
sub
sbb
sbb
pop
inc
mov
ret
hlt
lea
fs
inc
mov
jle
add
mov
cld
cmp
out
inc
mov
pop
lods
jno
hlt
mov
xor
mov
sub
insl
fnstsw
sub
mov
aaa
inc
hlt
pop
cld
cltd
xchg
movq
dec
call
sbb
mov
sub
dec
cmp
andl
enter
sbb
repnz
shlb
mov
dec
push
pusha
out
xor
int3
test
jb
int3
lock
test
cmp
xchg
orl
adc
ljmp
pop
cld
shll
mov
pop
lds
js
ret
or
pusha
dec
xchg
jns
jp
stos
xlat
test
add
rolb
mov
lods
in
pop
addr16
mov
cmpsl
ret
fistpl
stc
xchg
xchg
jne
jne
testb
dec
or
scas
mov
movsb
dec
test
jg
xor
sbb
jnp
mov
xchg
sub
call
cltd
data16
xchg
sahf
sbb
aas
jns
fldl
cmp
lfs
cmp
jns
sbb
dec
adc
and
hlt
mov
jns
test
scas
push
test
mov
or
loop
xor
sub
and
imul
push
mov
mov
bnd
and
pushf
jle
aad
adc
mov
into
cltd
mov
xor
fiadds
dec
cmp
push
stc
cmpsl
divl
dec
mov
adc
xchg
nop
cmp
fisubs
std
jo
into
pop
xchg
out
jge
das
arpl
push
test
mov
cmp
out
mov
dec
sub
movsb
push
dec
cmpsb
push
out
stc
or
sub
cli
fldl
divl
sti
aas
push
lret
faddl
cs
jns
push
in
cmp
movb
cmp
push
adc
lret
into
adcb
mov
mull
cmp
aas
sbb
xor
add
sub
or
or
push
cli
ret
repnz
lahf
mov
mov
aaa
adc
dec
mov
les
adc
xor
or
dec
or
loope
xchg
scas
pop
push
ret
outsb
adc
or
fisubrl
fildll
inc
cmc
cli
lds
jnp
cmpsb
daa
sbb
add
popl
cmp
roll
sub
push
and
xchg
gs
in
aaa
push
mov
insl
adc
pop
xor
mov
pop
inc
pusha
je
push
dec
sub
jp
xor
xchg
mov
cmpsb
mov
out
or
and
cmp
xor
in
sub
loope
fcmovb
repz
xchg
loope
or
push
pop
shll
mov
mov
pop
int
cld
xlat
std
outsb
cmp
sbb
sbb
xchg
cmpsb
xchg
xchg
pandn
gs
stos
int3
test
lret
and
cmpsl
mov
mov
in
not
pop
rcrl
dec
pushf
xchg
xor
and
scas
pop
xchg
call
push
data16
adc
adc
test
xchg
mov
insb
and
mov
repz
addr16
mov
inc
das
sub
xor
nop
xorl
in
bound
in
movsl
and
aad
sbb
push
pop
and
push
inc
pop
dec
mov
int
jbe
push
push
movsb
ss
lcall
xchg
cmp
inc
jle
fisttpl
xchg
xchg
stos
add
cmp
cld
sub
inc
adc
ja
cld
xor
xlat
add
mov
and
mov
jo
pop
out
aad
push
mov
jbe
faddl
xchg
ficompl
into
sbb
outsb
clc
jmp
sub
or
sub
test
loope
lods
ja
idivl
int3
adc
xor
sbb
mov
push
jp
xchg
mov
fwait
out
or
incb
cmp
or
ljmp
out
in
push
jg
mov
es
negl
clc
mov
sbb
aas
nop
lods
bound
fists
xchg
loopne
mov
push
loopne
mov
inc
push
dec
call
xlat
aaa
mov
push
ss
rorl
cli
sub
xchg
jmp
int3
popf
push
jp
mov
jmp
jo
pop
mov
loopne
cs
jo
inc
lock
or
pop
jno
dec
shll
ds
arpl
and
mov
push
sub
jmp
shr
inc
outsb
ret
dec
outsl
dec
or
aad
cmpsb
fisubl
mov
into
repnz
ljmp
xchg
ja
addl
and
imul
mov
in
lahf
mov
jbe
dec
xchg
jno
test
jbe
popa
dec
fst
push
popa
jnp
out
xchg
inc
cmp
repz
mov
cmp
mov
in
fdivl
jmp
fildl
mov
mov
fwait
sbb
add
adc
sbb
dec
rolb
enter
out
test
pop
mov
push
mov
sub
mov
mov
add
repnz
dec
lahf
test
lcall
lret
rcrb
pushl
loop
cli
aas
test
js
loope
imul
in
and
add
xchg
and
pop
push
cmp
je
jae
pop
into
xchg
mov
sub
adc
inc
add
addb
fcompl
xor
dec
adc
out
xchg
lar
pushf
cmpsb
and
cmpsl
sub
cld
mov
out
xchg
or
push
xchg
and
xchg
mov
lahf
or
scas
mov
push
push
xorl
push
mov
movsl
enter
int3
sbb
mov
cmp
clc
repnz
mov
sbb
jmp
sub
pop
jae
xchg
xchg
pop
daa
cmp
jo
xor
gs
ret
imul
testb
pop
or
clc
lret
cltd
push
mov
dec
adcb
les
loopne
jno
mov
rcl
adc
fbstp
and
das
mov
xor
in
cwtl
pop
mov
cwtl
pop
pop
cmp
popf
adc
scas
mov
cmc
mov
bound
cmp
cmp
cld
mov
jne
or
dec
fdivrl
lret
pop
test
in
negl
sub
push
out
popa
cli
push
loopne
and
cli
dec
das
jne
adc
mov
add
mov
fwait
aam
icebp
imul
jbe
mov
inc
mov
mov
popf
int
aam
mov
pop
insb
out
iret
movsb
in
push
jns
mov
add
inc
shll
pop
xor
cmp
pushf
xor
popf
inc
pop
jns
adc
or
add
nop
add
add
add
push
add
add
add
add
add
add
add
add
movsb
add
faddl
add
popl
add
loop
add
add
add
add
cltd
add
add
add
add
add
add
add
add
add
add
add
mov
add
imul
add
add
inc
add
add
add
add
and
add
add
add
jge
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
popl
add
add
mov
adc
add
dec
roll
xchg
add
in
add
fadds
add
add
movl
push
add
mov
neg
add
insb
fadds
add
call
xor
outsb
ja
imul
and
pop
adc
mov
jno
add
arpl
add
adc
in
adc
and
add
and
add
jp
add
das
adc
fs
add
pop
adc
xchg
pop
adc
inc
and
add
xor
add
adc
inc
movups
xchg
pop
adc
dec
xor
add
add
adc
out
adc
test
adc
inc
dec
adc
add
add
arpl
add
add
adc
jg
adc
das
jb
add
outsl
adc
cmp
adc
scas
xor
add
adc
daa
imul
xor
adc
lock
adc
sbb
add
xor
add
adc
cltd
sbb
adc
mov
adc
pop
dec
adc
shll
adc
jp
adc
wrmsr
adc
sahf
pop
adc
cmp
add
adc
jg
adc
pop
pop
adc
push
aas
adc
pop
or
add
imul
dec
add
add
adc
xchg
and
add
pop
adc
jbe
dec
and
and
dec
aaa
arpl
add
inc
cmp
cmp
je
jp
and
imul
inc
and
jne
jae
add
inc
pop
and
jae,pn
pop
and
ss
push
push
jns
jae
xor
and
bound
jb
xor
dec
xor
pop
add
xor
and
xor
jns
xor
je
xor
push
xor
and
add
dec
dec
push
outsb
xor
jbe
add
aaa
dec
dec
data16
outsl
pop
push
popa
and
jne
inc
cs
and
xor
dec
and
insl
xor
push
push
and
pop
and
dec
outsl
insb
jne
dec
ss
arpl
dec
push
jb,pn
and
xor
aaa
and
and
add
xor
xor
cmp
jp
pop
xor
popa
imul
insb
jne
jno
and
adc
inc
add
test
add
test
add
test
add
test
add
test
add
test
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
inc
add
test
inc
add
dec
xor
dec
dec
inc
add
pop
xor
pop
push
xor
push
add
dec
xor
inc
xor
push
add
xor
dec
inc
aaa
xor
push
add
cmp
ss
ss
dec
add
xor
pop
push
inc
aaa
pop
xor
inc
dec
cmp
dec
cmp
pop
dec
dec
ss
push
add
xor
dec
inc
xor
inc
add
dec
pop
inc
pop
pop
inc
xor
dec
add
dec
pop
inc
xor
cmp
dec
cmp
inc
push
pop
xor
dec
push
dec
pop
xor
pop
inc
add
dec
pop
cmp
aaa
add
inc
pop
xor
xor
add
inc
pop
inc
pop
push
pop
dec
inc
add
xor
xor
dec
add
inc
aaa
pop
pop
cmp
pop
push
push
push
pop
dec
add
inc
aaa
pop
xor
inc
pop
xor
cmp
push
dec
inc
pop
inc
inc
push
dec
xor
dec
dec
dec
add
dec
pop
dec
xor
cmp
push
pop
inc
add
dec
pop
inc
inc
xor
cmp
add
cmp
push
add
dec
add
xor
add
add
dec
add
xor
add
xor
inc
inc
add
add
pop
add
dec
add
inc
add
inc
add
pop
add
add
push
add
add
cmp
xor
inc
add
cmp
xor
pop
add
dec
add
add
add
add
aaa
inc
add
inc
add
pop
add
add
pop
add
add
add
pop
add
pop
add
add
push
inc
add
add
xor
cmp
inc
inc
add
add
add
dec
add
xor
cmp
xor
pop
dec
add
pop
add
add
inc
add
inc
dec
add
add
inc
add
inc
add
pop
add
add
add
add
cmp
inc
add
xor
pop
add
add
pop
add
push
add
xor
xor
xor
add
add
add
add
inc
push
xchg
pusha
fwait
mov
inc
orb
ret
inc
and
mov
cmp
push
inc
fs
dec
pop
jbe
arpl
inc
pop
pop
inc
jae
pop
ja
js
jb
jne
pop
push
je
jp
jo,pn
bound
ret
push
divb
inc
xchg
outsl
cmp
test
sbb
rcll
and
cmp
pop
xchg
insl
mov
pop
mov
jno
das
jb
insb
xor
mov
jp
or
and
lret
push
mov
pop
fwait
iret
adc
incb
cmpsl
sub
add
mov
xchg
outsl
adc
outsb
mov
jmp
stc
rclb
pop
daa
cli
adc
and
add
inc
dec
pop
icebp
out
fmull
lods
sub
cmp
repnz
out
into
popa
lock
dec
cltd
in
xchg
push
sub
pop
jae
inc
repz
add
popl
push
inc
in
scas
ja
cmpsb
mov
xchg
dec
sbb
dec
xchg
daa
je
push
dec
and
sbb
cli
dec
lret
sbb
inc
xor
or
jl
dec
xor
test
xchg
shrb
push
push
lds
mov
loopne
sub
mov
xchg
add
push
dec
jno
in
cmp
loopne
addr16
fs
xor
or
mov
xlat
out
lods
mov
and
ficoms
inc
fidivl
test
popa
in
sub
shll
and
xchg
test
inc
push
cmp
std
add
fsts
jp
pop
imul
test
adc
ficompl
mov
leave
shlb
imul
pop
dec
or
lcall
pop
insl
or
sti
xchg
mov
mov
add
jp
dec
stos
mov
mov
addl
shlb
push
int3
jbe
push
sub
rol
cmp
jp
test
sub
and
subb
xchg
je,pt
push
je
ss
loop
rcrl
mov
jl
mov
fwait
jno
mov
in
nop
or
add
push
cmp
data16
fcmovu
mov
movsb
mov
sub
jg
or
push
iret
int
or
push
enter
push
cmp
lcall
or
dec
xchg
negl
pop
into
call
neg
push
aas
out
push
fidivl
addr16
cmp
ret
test
mov
pushf
xor
into
inc
sbb
shl
ja
mov
popa
sbb
xor
mov
xchg
addr16
shll
rolb
adc
jne
leave
or
sub
and
jge
mov
sbb
pop
pop
int3
add
scas
jle
sub
sti
mov
inc
cld
or
cmpsl
mov
outsl
das
inc
insl
mov
xchg
ret
cld
shl
mov
mov
imulb
mov
es
pusha
addr16
inc
jo
cmpsl
ljmp
and
mov
test
arpl
hlt
dec
call
push
adc
imul
xor
mov
or
mov
add
insl
shlb
xlat
xchg
enter
enter
fstl
das
das
sbb
lcall
sub
adc
movsl
popf
add
stos
mov
in
in
mov
jge
aaa
sbb
push
popf
dec
insb
outsl
std
lahf
dec
adc
xor
arpl
sbb
push
fdivr
outsb
pusha
adc
jno
pop
test
cmp
mov
int
dec
lahf
lods
xchg
jno
add
mov
cld
movsb
pop
call
cmc
popa
add
inc
fwait
mov
sub
inc
inc
and
call
or
shlb
dec
mov
sub
sub
pop
jnp
imul
xor
shll
sub
cli
sti
adc
push
sub
stos
dec
out
int
loope
sub
loop
push
inc
sbb
fcomp
jne
and
sub
mov
loopne
shll
mov
add
pusha
call
xchg
insb
xchg
aam
sbb
aaa
cltd
xor
icebp
and
cmc
aaa
shl
xchg
pop
cmc
add
je
andl
aam
xor
jmp
aaa
jns
popf
outsb
mov
stos
stc
repz
lea
xorb
push
leave
mov
sti
fwait
cmp
push
loope
add
lods
add
mov
sub
cltd
mov
icebp
xchg
iret
cmc
cmpb
xchg
pop
pop
fisttpll
xchg
les
in
and
sbbl
cmp
popa
mov
or
jae
loope
pop
cld
add
fwait
mov
sbb
lock
out
or
xor
xor
or
in
dec
mov
adc
addr16
mov
das
ja
repnz
pop
jl
add
repnz
jnp
cmp
icebp
or
es
push
dec
es
mov
sbb
jae
test
outsl
mov
xchg
inc
sbb
adc
sbb
decb
sbb
jecxz
stos
pop
inc
lea
sbb
cmp
cwtl
loope
inc
stos
aad
mov
mov
xor
adc
loop
clc
add
adcb
jo
xchg
enter
icebp
xor
add
jl
push
mov
dec
fcmovbe
pop
add
adc
pop
inc
fisubrs
addr16
add
cmpsl
cld
in
ljmp
ror
test
das
mov
adc
rorb
cmpsb
push
or
push
sub
dec
pushf
push
sbb
mov
cmpsb
dec
dec
inc
add
repz
fcoml
mov
popf
mov
enter
dec
jne
jl
and
es
and
into
les
pop
test
mov
cmpsb
into
fldt
push
pop
or
stos
add
test
adc
mov
jle
loope
pop
sbb
jnp
mov
imul
out
xor
mov
jp
xchg
add
push
insb
sbb
pop
push
sahf
fistps
jno
ljmp
stc
or
enter
scas
ret
pop
xor
adc
nop
mov
lea
lret
cmp
fwait
or
jno
in
mov
andb
inc
test
xor
inc
adc
out
jne
mov
push
mov
stc
xchg
pusha
mov
testb
cltd
mov
movsl
lret
lahf
sub
aas
stc
cmpsb
cmpsl
sub
outsb
inc
xor
popl
mov
jnp
mov
notb
les
pop
les
leave
sbb
sti
xchg
cmpsl
add
xchg
shrb
dec
lahf
fildll
insb
or
or
inc
iret
mov
lods
cli
gs
jae
cld
fisttps
dec
mov
sub
pusha
push
sub
in
and
roll
test
and
mov
mov
das
les
lods
and
js
fiaddl
mov
cmpsb
sub
xchg
push
movsb
xchg
inc
jle
iret
and
ret
push
daa
pop
divb
mov
xor
in
mov
mov
sub
data16
mov
aam
movsl
xor
mov
test
xlat
jl
mov
sarl
sub
push
jo
lcall
mov
outsb
repnz
aaa
push
bound
mov
outsb
divl
in
lea
aaa
push
push
mulb
inc
data16
pop
movb
mov
mov
test
repnz
mov
movb
cli
dec
loop
test
dec
fwait
cmp
cmp
lea
inc
ds
mov
sub
mov
ljmp
jl
les
add
adc
fcomps
mov
inc
stos
loop
lods
inc
jb
or
xchg
push
sbb
add
jmp
sub
pop
jle,pn
ja
mov
andb
lea
scas
dec
test
or
dec
mov
add
adc
repnz
fistl
loop
or
push
pop
aas
cmpsl
and
je
popf
sbb
outsl
inc
sub
pusha
xor
ret
jo
cmp
mov
stos
enter
pop
sub
dec
mov
cmpsb
mov
xlat
loop
test
mov
sub
test
out
push
dec
fldt
pop
fsts
dec
ds
fiadds
popf
inc
or
filds
mov
xor
sbb
lahf
add
pop
movq
loope
xchg
mov
push
push
test
loope
inc
or
bnd
sub
in
into
mov
pop
imul
xchg
call
xchg
pop
adc
xor
int3
xchg
inc
mov
pop
add
std
cmp
push
scas
or
sbb
cmp
xchg
and
sbb
sbb
std
into
daa
and
cmp
or
and
lret
and
and
aaa
mov
loopne
jb
dec
nop
pop
nop
xchg
adc
jne
std
pushf
nop
xor
dec
out
sbb
pop
jbe
bound
cmp
xor
sbb
mulb
in
mov
mov
xor
push
jle
mov
pop
pop
in
cmp
ret
lock
dec
mov
repnz
jno
dec
fisttps
addr16
sbb
adc
push
inc
inc
std
mov
jle
pusha
pop
mov
push
andl
fs
rorl
and
test
sub
lret
sbb
pop
or
cmc
xchg
jmp
gs
out
aaa
mov
dec
in
jmp
push
adc
jl
sbb
mov
xor
or
mov
mov
jge
and
in
or
dec
jbe
leave
je
adc
popf
mov
sbb
lret
test
inc
dec
dec
push
adc
xor
mov
xchg
or
push
ss
pop
mov
xchg
adc
icebp
push
icebp
sbb
les
jbe
outsl
or
push
fimuls
or
iret
pop
test
test
and
cmc
xchg
push
clc
shlb
gs
lods
rcrb
mov
sub
stos
inc
je
cmp
and
pushf
aas
aaa
cli
out
or
fdivrl
xchg
adc
repz
push
outsl
sub
fs
mov
mov
out
dec
jg
in
dec
lds
mov
movsb
xor
and
pop
test
inc
arpl
xor
jl
das
mov
or
push
inc
mov
dec
pusha
cmpb
cld
xchg
out
add
je
lea
test
aaa
dec
mov
jecxz
fwait
xor
js
adc
mov
xor
fbld
mov
dec
pop
in
push
or
out
pushf
xchg
lcall
push
mov
add
sub
ds
push
sub
mov
mov
xchg
aam
dec
imul
pop
mov
mov
ljmp
test
inc
aas
ror
fistl
ror
inc
jns
xchg
xor
loope
add
mov
mov
movsl
adc
or
adc
pop
push
cmp
icebp
mov
test
cli
mov
mov
fs
add
mov
jo
jns
pop
and
fcmovnbe
mov
jecxz
xchg
xchg
lds
xor
push
lock
xor
std
ficoml
inc
frstpm(287
jne
push
mov
cld
pop
div
cmp
iret
push
fbld
or
addr16
mov
dec
fadds
cmpsl
loop
icebp
sub
jns
fwait
addr16
mov
sub
and
in
in
jle
push
jg
mov
stos
rclb
jno
push
cmp
add
rorb
scas
cmp
mov
fsubp
push
xchg
jb
cmp
arpl
fwait
lahf
das
outsb
mov
xor
vpsubb
clc
sbb
leave
outsb
arpl
inc
cmp
aaa
jge
jle
fiadds
test
or
add
adc
jbe
testb
mov
idivl
shlb
push
or
xor
pop
lret
sbb
icebp
cmp
sub
imul
and
cmp
dec
mov
icebp
mov
mov
or
cmpsb
jbe
push
test
loope
xchg
int
leave
or
jo
jl
add
rorb
stos
data16
fcmovnu
push
pop
hlt
repnz
ret
add
call
iret
int3
pop
sub
js
pop
pop
jmp
sbb
add
ss
das
out
mov
xor
std
pop
sub
out
enter
out
inc
dec
decb
repz
fsub
enter
jo,pn
xor
mov
dec
movsl
imul
push
jle
outsl
push
fstps
arpl
adc
fcomip
dec
sahf
mov
movsl
cmpsb
adc
sti
int3
dec
pop
rolb
mov
scas
xchg
jp
in
xchg
mov
pop
sbb
ret
mov
lret
add
leave
mov
lock
pop
xchg
mov
bound
incl
out
sti
jne
pop
adc
jmp
pop
fbstp
lcall
push
xchg
push
mov
mov
loope,pt
sbb
pop
cmp
add
inc
fcomi
and
xor
outsb
push
push
out
jno
fs
jle
scas
adc
push
sub
and
mov
js
jge
xor
rorb
test
insl
add
cmc
shll
lahf
pop
jne
enter
cmp
or
lds
scas
jb
incb
testl
inc
popl
xchg
aaa
fnsave
jns
push
jbe
int3
aam
cmp
adc
jg
dec
scas
pop
adc
xchg
dec
enter
jnp
insl
pop
cmpsb
xchg
push
rorb
xchg
xor
sbb
mov
cmpsl
jb
mov
inc
fldcw
das
pusha
sub
std
dec
movl
adc
repnz
dec
dec
mov
push
sbb
push
aas
add
out
lahf
xchg
dec
pop
aam
mov
insl
push
xchg
jle
in
cmp
add
add
sub
inc
adc
lods
push
sub
lds
adc
jo
mov
fdivrl
bound
dec
add
mov
push
jmp
xor
call
out
out
fiaddl
pop
and
lock
xchg
ds
xchg
aad
imul
jae
mov
fidivrl
cwtl
ficomps
int3
sbb
pop
addr16
add
clc
pop
xchg
jg
xchg
aam
clc
jne
inc
fistpll
mov
in
outsb
cmp
dec
add
mov
sub
std
sub
pushf
cli
pushf
cmp
ret
test
aam
lds
pop
stc
jmp
mov
sti
inc
xlat
inc
jns
rcll
ret
add
stos
xchg
bound
adc
mov
xchg
push
sarb
xlat
pop
ja
into
leave
je
pop
pushf
in
cltd
xor
mov
sub
dec
cs
dec
popa
xchg
pop
mov
fistl
sarb
dec
push
cmp
in
jae
aam
scas
mov
lret
add
dec
xor
cwtl
push
icebp
sbb
fistps
ja
daa
push
fcompl
sub
jp
jg
xor
xor
int
inc
push
cs
stos
icebp
ret
cmp
aas
jl
jae
sbbl
mov
in
jecxz
cmp
sub
mov
xor
adc
pop
pop
ficomps
cld
stos
xchg
push
cmp
ret
pop
xor
sub
sbb
xor
inc
sub
add
pop
shll
inc
scas
clc
iret
ret
xchg
xor
loop
lock
cmp
push
mov
nop
xor
pop
pop
fbstp
pop
xlat
xorl
mov
sub
xchg
inc
push
add
and
mov
xor
fildl
lcall
test
xor
mov
out
sub
test
jecxz
fcompl
and
fiadds
out
adc
push
mov
sbb
in
cmp
push
and
push
hlt
in
bound
jecxz
fs
xlat
cld
pop
and
pop
cmpsb
xor
xchg
movsb
mov
cmp
push
and
mov
xor
testl
xor
movb
es
ds
push
iret
dec
imul
mov
mov
leave
imull
mov
int3
mov
mov
xlat
sub
test
lea
xchg
xor
sti
rolb
jl
sbb
xor
jl
push
idivb
dec
xor
sbb
adcl
and
into
scas
cmp
add
test
shr
idivb
xor
mov
loopne
sti
fidivl
push
popa
clc
inc
daa
inc
xchg
sub
out
push
icebp
inc
inc
mov
movl
xor
out
push
inc
mov
and
mov
sub
cmpsl
imul
sbb
inc
out
jne
jno
mov
jle
test
xor
mov
ret
cmp
shr
jge
or
std
mov
mov
test
sbb
sub
xor
popf
cmp
jecxz
outsl
xor
xor
test
pop
dec
inc
adc
or
xchg
dec
out
in
mov
aad
lds
pop
and
mov
lea
fistpll
push
jmp
sub
pop
or
rcl
add
add
jbe
test
cltd
fcoms
loope
je
cltd
pop
outsl
pop
sub
outsl
dec
shlb
jp
sbb
lock
pop
ljmp
pop
loopne
sbb
mov
and
pop
imul
xchg
nop
push
int3
les
pminsw
iret
ds
stc
xchg
jge
cltd
xchg
ret
cmpsb
ficompl
mov
faddl
xor
je
pop
inc
and
ljmp
push
mov
inc
lea
push
icebp
in
cmp
add
rol
je
lods
insl
mov
movsb
shll
lret
add
flds
outsb
inc
pop
aam
iret
inc
outsb
or
fs
cltd
adc
clc
jo
outsb
sbb
outsl
adc
jecxz
adc
push
jmp
jnp
jo
push
or
ret
mov
movsb
ljmp
idivl
add
or
mov
rcrb
out
popf
jle
and
mov
push
mov
lods
fs
cmp
mov
dec
movsl
xlat
js
xlat
jp
out
push
test
pop
in
test
mov
dec
testl
cmp
ss
fldz
imul
add
in
repnz
mov
out
sub
add
and
fidivrs
mov
in
mov
push
in
out
push
sub
jp
jge
xchg
mov
xlat
add
push
test
cs
jl
enter
push
or
jg
fisttpl
adc
movsb
das
xchg
sti
sub
insl
lods
mov
call
scas
adc
xchg
aas
xor
lret
arpl
cwtl
leave
and
xchg
int
xlat
adc
jne
outsl
and
in
sub
sbb
jne
mov
jecxz
push
lcall
outsb
mov
xchg
stos
nop
jp
ljmp
xchg
push
loop
into
les
mov
imul
inc
test
dec
or
enter
addl
jmp
imul
std
out
sbb
jbe
fistpl
cmp
rclb
inc
sub
test
xor
mov
mov
les
mov
push
mov
fisttpl
lret
lods
adc
jp
cmp
xor
je
stos
dec
in
movsl
lcall
cmp
inc
push
neg
outsl
sti
or
aaa
shll
in
repz
add
adc
push
stc
aad
ret
inc
mov
cmp
push
je
jmp
add
dec
and
jne
je
and
mov
mov
cmpsb
pop
popa
js
daa
loopne
add
jne
cli
stos
lds
and
nop
into
subl
cmp
mov
ljmp
sbb
pop
mov
sub
push
pop
in
or
in
scas
dec
adc
sub
xor
jg
push
sub
sti
negl
mov
std
and
sarl
and
fs
aam
outsb
pusha
pop
addr16
push
pop
sbb
pop
or
cmp
popa
or
fadds
dec
out
mov
loope
popf
int
add
rcrb
dec
jp
jge
jge
adc
xor
clc
jb
sub
add
enter
adc
cmp
cs
adc
sti
sub
lock
icebp
dec
xchg
jmp
add
pushf
sbb
dec
pop
jne
lock
cmpb
mov
cmp
dec
pop
cs
cmp
lret
push
nop
inc
mov
push
add
mov
scas
cs
mov
sbb
mov
xchg
mov
insb
or
outsb
lds
push
sub
ret
repnz
sti
out
loopne
inc
sar
lods
shl
je
dec
mov
in
aas
jb
xchg
and
xchg
aam
ret
cwtl
loope
jge
xchg
outsb
ret
xchg
sub
adc
fidivs
or
xor
dec
out
je
fldenv
inc
mov
add
test
xchg
stc
scas
mov
and
rcll
mov
dec
and
inc
fnstenv
pop
cmp
adc
push
jnp
pusha
mov
ret
jmp
cmp
mov
lock
xor
pop
imul
xchg
adc
mov
imul
and
or
mov
pop
sub
push
cmp
dec
les
outsl
pop
loope,pt
sub
push
mov
sub
push
loopne
sub
ss
sub
push
mov
shlb
std
mov
clc
adc
xchg
fstl
ss
lahf
les
mov
jmp
push
mov
pop
or
out
pop
pop
mov
mov
pop
jmp
mov
aad
or
push
in
xchg
iret
mov
push
fisubrs
cmp
outsb
loope
scas
pop
popa
scas
or
xchg
fildl
push
in
lods
sbb
mov
pop
add
pop
movsb
push
imul
xchg
in
ss
dec
cwtl
psllq
fwait
xchg
fimull
out
dec
mov
iret
mov
dec
ficoml
mov
mov
mov
sub
or
fstl
fwait
aam
ret
push
mov
or
sbbl
adc
ja
push
je
adc
test
and
lods
pusha
call
xchg
das
xorl
lods
inc
sub
adc
fwait
int
mov
jle
insl
mov
mov
sbb
pop
jp
cltd
push
popf
sbb
add
push
cmp
pop
mov
cmp
ss
xor
pop
jnp
cld
inc
and
fiadds
jne
push
or
add
jle
cmp
clc
aas
repz
fnsave
mov
fstpt
pop
push
imul
inc
jmp
fwait
or
loope
or
sqrtps
cmp
imul
test
shl
jge
adc
adc
mov
popa
out
into
adc
push
sti
pop
jp
lods
mov
jb
sub
xchg
sbb
sbb
jle
push
inc
dec
popf
sub
imul
mov
hlt
call
xlat
fidivrl
sbb
imul
mov
jae
popa
or
cs
icebp
loop
jbe
add
inc
cmp
add
mov
testl
jl
xchg
stos
jmp
ja
adc
sub
mov
xor
popa
je
pop
add
jns
cli
sub
in
pushf
cs
inc
ds
sbb
add
mov
outsb
push
push
cmp
mov
pop
adc
mov
stos
adc
scas
jb
shll
add
testb
and
movsl
adcl
xor
mov
mov
add
xchg
xchg
jo
repnz
in
in
sub
xchg
fstps
xchg
sbb
into
sub
outsl
cs
pop
pop
jg
imul
int3
add
sub
dec
int
les
mov
adc
push
ficoml
sub
jae
sbb
addr16
push
in
xchg
add
cmp
jl
mov
mov
cmp
add
popa
mov
or
fmuls
daa
mov
gs
lcall
mov
pop
lods
mov
fildl
and
push
scas
jmp
in
dec
sarb
push
test
or
aas
mov
adc
call
push
sbb
int3
enter
nop
mov
bound
scas
int
inc
bound
or
pop
sar
insl
mov
sub
jl
hlt
sub
mov
push
jle
cmp
nop
and
jbe
dec
addr16
dec
int
into
daa
aam
mov
add
testb
mov
aad
sbb
aas
sub
stos
lds
adc
jg
dec
hlt
fucomp
xchg
mov
sub
adc
insl
mov
mov
add
jae
pop
insb
aam
icebp
sbb
mov
push
mov
push
in
shlb
mov
and
or
in
scas
inc
ja
sbb
and
xlat
push
add
adcl
xlat
lret
inc
ds
incl
cld
or
xchg
popa
ret
enter
dec
push
dec
insl
rcr
rcll
pusha
or
clc
fsubrs
cmp
stos
push
mov
mov
mov
and
mov
sti
adc
loop
ds
fs
pop
cld
lret
scas
test
das
dec
mov
or
mov
fsubr
push
aas
inc
mov
xchg
aad
in
xor
fisubrs
sub
and
imul
mov
sti
mov
lcall
data16
sbb
pop
loopne
repz
sub
cmp
sbb
jmp
in
lods
mov
insb
mov
or
adc
movsl
xchg
ja
push
sbb
in
mov
sbb
or
mov
ds
cli
mov
push
or
popf
dec
adc
dec
ret
cmc
in
jo
addr16
mov
mov
call
loop
std
push
into
fwait
sbb
jo
es
xchg
and
mov
inc
rcr
inc
mov
loop,pn
jle
jo
sub
sbb
fimull
adc
sub
aaa
push
sub
cld
ds
mov
push
jbe
test
fwait
push
dec
ss
daa
ror
insb
jo
shll
cmc
and
or
mov
jmp
pop
scas
out
es
cli
roll
jnp
and
pop
insl
pusha
push
mov
out
add
jae
mov
imul
mov
hlt
pop
add
sub
dec
cmpsb
inc
jb
sbb
and
mov
inc
mov
lahf
cs
insb
inc
xchg
insl
stos
jge
scas
xor
or
jno
jl
ss
dec
ret
cmc
fidivrs
clc
repnz
lea
cmpsl
insl
sub
pop
repz
lds
mov
and
sub
pusha
push
dec
dec
pop
xor
pop
inc
mov
sbb
inc
adc
jle
mov
pusha
sub
mov
addr16
test
repnz
lretw
into
daa
xchg
insl
test
push
clc
pop
popf
add
pop
ja
xorl
mov
jb
gs
jns
inc
aam
fstps
or
mov
int3
pop
and
mov
cmp
subl
cwtl
addr16
ja
stos
push
test
in
fsubr
mov
ret
cmp
pop
test
arpl
jbe
mov
jp
loope
insb
and
lret
lods
ss
adc
mov
lahf
cwtl
or
push
lret
pop
in
mov
push
mov
insb
pop
lret
fnstsw
inc
js
subb
in
push
in
rorl
in
push
loopne
mov
mov
frstor
ret
movsl
xlat
add
push
jecxz
mov
pop
push
jno
xchg
out
dec
mov
mov
mov
inc
out
xchg
out
add
mov
clc
push
outsb
dec
dec
out
sbb
sti
and
sub
lea
add
leave
je
cmp
test
and
shlb
adc
inc
bound
in
or
mov
xchg
and
sti
fwait
add
loope
add
out
pop
test
add
xchg
int3
fistpll
mov
mov
out
stos
mov
loope
inc
cmpsl
jle
pop
mov
jo
sqrtps
call
fs
dec
subl
adc
inc
shlb
adc
dec
sti
mov
stos
loopne
test
adc
mov
stc
scas
test
roll
mov
mov
cmp
test
outsb
jg
sbb
adc
stos
cmp
repnz
sti
mov
not
nop
aam
sub
pushf
cwtl
mov
jne
in
lea
push
je
jns
mov
mov
lds
add
lea
jmp
jo
xlat
stc
mov
addr16
les
mov
mov
std
pop
xchg
daa
jmp
xchg
pop
imul
shl
call
fdivl
dec
add
and
rcrb
mov
subb
jae
lods
orl
push
testb
sub
cmpsb
pop
pop
scas
mov
jne,pt
push
or
mov
jge
xor
sub
clc
inc
sbb
adc
addr16
dec
add
xchg
mov
cmc
repnz
push
push
movsl
inc
adc
pop
inc
dec
test
lods
pop
test
insl
adc
cmp
ljmp
mov
push
mov
mov
add
xchg
or
ljmp
cmp
xchg
lret
xor
or
cs
push
hlt
add
fldl
jl
mov
daa
or
add
mov
jns
lock
jecxz
and
fucomi
in
cld
mov
xchg
pop
dec
arpl
push
xchg
push
imul
pop
push
pop
xor
sbb
scas
rol
xor
jg
cmp
mov
cmp
mov
dec
adc
test
ljmp
push
cwtl
out
cmp
xor
or
das
push
jmp
pop
and
jecxz
add
or
xorl
addr16
mov
add
xchg
cmp
push
mov
nop
sbb
or
sub
rcl
inc
enter
xor
cmp
ffree
jbe
xor
icebp
push
test
mov
push
push
aas
ss
sti
mov
into
push
test
jmp
sbb
sub
inc
fnstcw
cld
aad
js
fldt
dec
outsb
inc
iret
or
add
sbb
call
and
popa
stc
imul
jmp
sub
jmp
push
cmp
lock
mov
cltd
adc
lret
jmp
jecxz
scas
or
add
adc
fcoml
pop
ret
imul
dec
inc
popa
fbstp
inc
testl
mov
je
add
jne
lds
dec
leave
clc
ret
lcall
sub
xlat
test
aam
aam
pop
test
adc
arpl
pop
add
mov
inc
test
push
pop
jge
mov
jecxz
mov
imul
adc
ret
jne
pop
pop
into
pop
pop
sbb
addl
mov
ljmp
xor
pop
mov
xchg
test
mov
fidivl
add
add
or
add
add
add
add
add
add
cmp
mov
arpl
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
push
add
add
add
add
add
add
cwtl
add
add
add
sub
add
add
add
mov
add
add
add
lcall
pop
xchg
in
and
mov
cli
sub
mov
gs
div
lods
jge
data16
cli
sbb
push
cltd
psubusw
ret
mov
mov
nop
lret
xchg
lods
out
movb
inc
mulb
dec
jo
xchg
push
addr16
inc
mov
dec
sub
jp
jl
adc
mov
les
lods
adc
pop
lcall
ficoml
rcll
and
lock
or
mov
into
lret
mov
idiv
mov
jo
jns
dec
mov
inc
fcmovu
mov
and
loope
adc
popa
push
or
rclb
xchg
jns
pusha
jne
cltd
mov
dec
ja
mov
lea
fcmovu
mov
mov
mov
sub
sbb
cli
rcrb
inc
pop
and
cmp
call
sbb
sbb
clc
xor
orl
and
negl
jecxz
leave
cwtl
dec
xchg
mov
hlt
sti
dec
xor
outsb
dec
push
repz
stos
add
mov
push
xor
jns
pop
adc
aad
jmp
pop
stos
ja
inc
pop
mov
mov
fwait
mov
push
or
cmp
sbb
xchg
dec
movsl
mov
dec
or
aad
lods
nop
pusha
fsubrs
ret
push
lods
mov
sahf
sbb
adc
and
jno
lds
pushf
and
int
fisttpll
or
xchg
jecxz
lods
sub
ret
mov
filds
jle
push
xchg
mov
cmp
mov
adc
fisttps
nop
cmp
adc
mov
loop
mov
lret
xchg
test
lcall
inc
enter
popa
pop
sub
adc
jecxz
cmpsb
inc
out
adc
cmp
in
stos
push
xchg
add
pop
mov
js
ret
lahf
fidivrl
or
inc
ss
divb
test
es
mov
sub
and
scas
mov
sub
pop
ret
mov
or
mov
pop
lret
lods
testl
inc
cmp
push
add
insl
inc
adc
mov
cli
inc
dec
inc
xchg
push
or
dec
test
xor
and
mov
mov
dec
push
mov
sahf
addr16
shlb
fstp
push
xorl
mov
adc
fwait
in
loopne
xlat
cld
xchg
ret
jno
add
xchg
or
out
pop
jo
dec
xor
cld
push
dec
imull
and
or
pop
stc
xchg
jecxz
subl
faddp
jg
insl
add
push
shlb
mov
andl
mov
or
mov
leave
outsl
fisttpl
and
lea
sti
lcall
mov
add
jb
dec
sub
sti
pop
outsb
pop
mov
lea
movsl
and
xchg
push
mov
movsl
adcl
adc
rolb
mov
add
dec
outsl
jno
xor
pop
adc
mov
push
dec
pop
xchg
xor
mov
or
pop
cld
cwtl
cltd
es
lods
fisttpl
lods
bound
sbb
add
mov
ss
notb
cmp
movsl
jecxz
xor
rcrl
test
pop
jae
dec
or
push
mov
outsl
push
lea
push
insl
sti
mov
jmp
daa
fistps
les
ja
testb
jne
ret
lret
pop
cmp
add
mov
mov
pop
pop
or
mov
sbbl
sbb
nop
movsl
push
shl
fcomp
ljmp
and
mov
jnp
les
sbbb
dec
movaps
lahf
mov
sub
fwait
jmp
jns
mov
cmp
inc
sbb
push
jno
adc
test
call
shl
xchg
gs
push
pop
cmp
addr16
xchg
adc
sbb
imul
and
push
and
clc
in
mov
cmp
push
and
aam
inc
push
xchg
movsl
scas
mov
jmp
nopl
cmp
test
lea
ja
and
mov
or
faddp
xchg
int3
call
xchg
outsb
lret
sbb
popf
out
pop
aad
pop
cmc
outsb
cmp
in
cmp
scas
adc
loop
or
out
xor
xchg
cwtl
mov
repz
jno
stc
mov
popa
jmp
fmuls
sbb
push
mov
stos
inc
out
jno
in
cmp
inc
mulb
xor
push
add
jo
insb
iret
sarb
ds
inc
and
mov
stos
int3
jmp
inc
dec
test
dec
mov
cltd
xchg
or
pop
sbb
mov
ss
daa
scas
xor
nop
mov
repnz
movsl
je
jg
add
and
mov
ds
fcmove
shlb
push
adc
or
add
cld
adc
sahf
push
iret
pop
xchg
pop
lret
enter
iret
ja
mov
dec
insb
push
mov
inc
push
popf
test
or
mov
and
imul
xchg
repnz
xlat
aam
repnz
lods
push
cmp
and
notb
jae
mov
movsb
outsb
pop
dec
xchg
sbb
adc
cmp
cmp
mov
xchg
cwtl
addb
scas
mov
push
jnp
adc
xorb
add
pushf
dec
xchg
sub
ljmp
xchg
lods
addr16
out
and
mov
xlat
mov
call
xlat
shll
add
jnp
sarl
out
pop
push
repz
pop
sub
or
fcompl
in
mov
mov
mov
in
or
jae
xchg
pop
out
insl
adc
idivl
sbb
mov
aaa
fsubs
cmpsb
stos
sub
add
or
clc
test
aaa
add
imul
or
and
mov
mov
inc
push
ret
mov
clc
lahf
addr16
mov
pop
fs
fmuls
xchg
leave
or
dec
sbb
mov
fmull
jmp
lods
and
or
mov
cmp
fildll
pushf
enter
and
loop
movsl
imul
push
nop
and
mov
jmp
mov
jno
out
xorb
or
mov
mov
and
jnp
push
ljmp
dec
clc
xchg
shll
sarl
and
lret
dec
fcmovnbe
sbbl
jp
movsl
dec
add
cmp
lods
sbb
aas
fistpl
sub
inc
fs
mov
clc
gs
arpl
dec
or
pusha
lea
fadd
sbb
in
subb
cmp
push
inc
filds
lret
cmp
push
sbb
outsb
or
repnz
subl
mov
sub
cltd
sub
add
mov
pop
faddl
xchg
mov
sbbl
mov
repz
push
stos
push
and
outsl
or
negl
sub
fidivl
repnz
mov
sub
mov
lea
das
and
jle
inc
dec
stos
mov
dec
fsubrl
xor
xor
jl
mov
push
jns
fwait
push
jecxz
pop
or
push
inc
nop
les
or
fcompl
das
or
mov
roll
js
xchg
cwtl
sub
push
test
push
push
xchg
dec
pop
insl
push
stc
xor
dec
or
decb
mov
push
neg
enter
lock
push
mov
inc
and
idivl
sub
xor
notl
ret
into
js
int3
test
xor
mov
push
push
adc
enter
add
nop
enter
mov
in
out
insb
cmpsl
xchg
insl
scas
cmp
xchg
adc
push
mov
notl
inc
and
addb
push
lock
xchg
cmp
adc
out
jno
pop
lods
stos
das
jmp
mov
dec
push
sbb
lods
and
icebp
aas
pop
sbb
or
arpl
xchg
or
sbb
jmp
xchg
push
pop
xchg
xchg
sbb
aam
mov
cld
test
cmp
inc
xchg
scas
loopne
sbb
push
hlt
into
movsl
icebp
lret
fdivrs
data16
add
xor
cli
punpckhwd
out
pusha
and
mov
fsubr
inc
fdecstp
push
inc
call
cmp
push
push
inc
popa
test
mov
xor
dec
mov
mov
cmp
imul
lock
jne
scas
nop
xchg
sbb
jns
rcrb
push
dec
push
pop
adc
xor
inc
dec
push
pop
mov
pop
mov
and
mov
insb
roll
xchg
adc
repz
xchg
pop
sbb
int3
repnz
sbb
and
sbb
arpl
cmp
gs
loopne
adc
adc
sbb
sti
cmp
stos
ja
jle
repz
js
add
fisubrl
dec
aam
push
ja
sub
xchg
jne
push
fnstenv
ja
jbe
call
push
mov
fimuls
or
jbe
enter
push
loop
addl
lcall
dec
lea
sarb
pop
or
lret
and
mov
cmp
ljmp
popf
push
xlat
pop
adc
inc
ret
push
jl
repnz
sbb
and
pop
pop
fldt
mov
fsubs
pop
and
mov
mov
xor
mov
jns
inc
out
mov
jmp
jns
in
ljmp
push
icebp
lock
movsl
jmp
sub
push
mov
aad
jecxz
inc
or
xor
movsl
push
loop
xor
jbe
shll
push
pushf
mov
xchg
pop
sub
sarl
lods
add
cmp
dec
pushf
mov
push
xlat
push
mov
fisubs
daa
pop
jge
sbb
mov
loopne
loope
aaa
add
popf
cli
int
pop
pusha
popf
cmc
sbb
jle
jnp
fcompl
lods
adc
enter
xor
mov
xchg
scas
push
nop
sub
icebp
mov
jl
cmp
loopne
cmp
sub
test
sahf
es
in
xchg
inc
sub
cld
mov
ret
pusha
jae
xchg
insb
int3
popf
pop
clc
js
sbb
fmull
test
or
mov
push
repz
loopne
add
sbb
add
ss
les
mov
popf
mov
jno
in
jne
cli
push
inc
cmpsb
and
adc
sub
pop
test
dec
das
inc
ret
dec
iret
lret
repnz
sub
xchg
sbb
add
xchg
out
in
push
jecxz
mov
popf
cmp
mulb
aas
cmp
fiadds
add
nop
insl
mov
aad
inc
inc
int
xor
and
mov
cld
pop
dec
jbe
or
aaa
or
daa
xchg
popf
inc
dec
add
inc
insl
aas
pop
sbb
xchg
jecxz
sub
xchg
movsb
mov
iret
inc
xor
push
nop
cwtl
cmpsl
das
sbb
mov
cmp
loope
test
scas
sbb
adcb
dec
sub
jge
dec
js
negb
mov
gs
jb
adc
or
dec
lahf
push
inc
insb
jne
cld
enter
adc
mov
mov
je,pt
flds
cmpsb
mov
push
das
mov
add
lods
cmp
out
pop
sub
nop
inc
inc
mov
adc
inc
repnz
push
stos
shrl
push
push
lea
dec
push
mov
push
mov
push
loop
sbbl
clc
je
rclb
lret
mov
cmc
xchg
xor
mov
aam
push
xor
push
inc
cli
sub
stos
int
jg
jnp
enter
enter
inc
bound
xor
sbb
test
cli
adc
mov
xchg
push
scas
ret
scas
adc
sahf
and
dec
xchg
lcall
xchg
aaa
mov
cli
adc
mov
mov
je
xchg
leave
ss
test
call
xchg
in
sub
pop
aas
std
imul
mov
scas
repnz
add
das
jns
fs
sbb
adc
jecxz
call
add
iret
xor
sbb
movsl
xchg
subl
out
mull
stc
stc
sbb
cmc
daa
mov
in
xchg
test
stos
les
popa
fsts
jnp
sbb
xor
add
add
dec
cs
js
in
mov
xchg
dec
inc
mov
add
lea
or
out
notb
out
outsl
into
push
mov
subl
push
fldcw
and
adc
dec
jge
mov
cmp
dec
inc
add
clc
inc
ljmp
and
popa
xor
push
lret
rcll
lcall
mov
movl
insl
sub
pop
rorl
mov
jo
sbb
aaa
cmp
pop
leave
xchg
xor
cmp
in
hlt
cld
lret
clc
or
imul
and
mov
mov
inc
aaa
or
ficomps
and
or
rcr
fucomip
pop
mov
call
scas
pop
sbb
sbb
xchg
inc
rorb
push
nop
mov
xor
fsub
and
data16
inc
shlb
cmpsl
and
dec
push
or
popa
sti
dec
mov
arpl
dec
and
push
loop
lcall
inc
jno
dec
ss
test
jns
xorb
in
sbb
push
inc
pop
cmp
mov
cs
test
push
sbb
mov
mov
jg
cs
fcmovnu
stos
sbb
dec
dec
adc
lods
movsl
gs
cmpb
push
shr
dec
out
add
test
pop
mov
sub
bound
mov
ljmp
push
jnp
sbb
enter
lock
aad
and
es
rorl
and
push
push
rcrl
sub
mov
ljmp
ljmp
lods
stc
outsb
inc
inc
lods
sbb
ljmp
pushf
ljmp
shrb
mov
mov
pop
imul
enter
mov
or
mov
cmc
adcb
push
dec
sahf
lea
into
mov
pop
inc
pop
push
fwait
shrl
bound
je
push
out
xor
mov
xchg
mov
mov
bnd
int
xchg
pop
movsb
xchg
into
push
movb
jecxz
cs
outsb
mov
int3
sub
jbe
mov
mov
mov
fcmovnu
ret
xor
xchg
cwtl
cmp
mov
test
js
lods
popf
test
pop
adc
xor
sbb
xchg
fnstcw
js
hlt
xor
mov
fisubrl
mov
xor
repz
fldcw
fcoml
cmp
xchg
loopne
jnp
dec
sbb
call
sub
cmp
cmp
mov
mov
mov
movsb
xchg
push
scas
mov
mov
mov
das
dec
cwtl
mov
pop
insl
or
enter
aam
pop
inc
adc
inc
lods
adc
int
mov
mov
and
out
out
or
xchg
test
int
or
pop
mov
fnstsw
gs
cmove
adc
dec
mov
pop
mov
push
leave
sbb
fldenv
inc
jb
ds
test
es
push
lods
call
add
push
sub
stc
inc
pop
or
cmp
xchg
sbb
mov
jnp
cmp
push
in
rorb
nop
mov
roll
into
int
xchg
in
push
pop
dec
xchg
addr16
subl
xlat
cs
stc
dec
lods
xlat
repz
jo
xor
pop
out
out
out
dec
pop
push
les
and
xchg
push
loopne
mov
jae
popf
filds
mov
out
ficompl
xchg
mov
outsb
icebp
arpl
or
cltd
fnstcw
xor
cmc
jne
aas
pop
adc
fsubrs
xchg
popf
cmp
mov
cli
fcomps
repz
ja
cmp
pop
sub
xor
aam
or
outsb
stos
add
scas
aad
cmpsl
pop
movsl
cmpsb
in
sbb
xchg
mov
das
leave
int3
loop
aam
jnp
sub
and
cmpsb
cltd
lea
add
mov
sub
and
or
inc
and
lcall
xor
test
adc
rcl
pop
out
test
ret
lock
lcall
mov
gs
fwait
lods
and
enter
lods
mov
mov
inc
xor
push
dec
or
adc
les
leave
xchg
ljmp
inc
outsl
jns
jl
wrmsr
ret
cmp
xlat
orl
and
jno
sub
xorb
out
pusha
sub
mov
neg
mov
lea
stos
xor
adc
iret
ret
insb
xchg
add
add
lret
xchg
push
imul
xchg
adc
daa
andl
mov
aaa
sti
pop
adc
jns
dec
and
or
push
lcall
cmpsb
adc
fnstenv
xchg
xor
int3
int
jo
mov
lcall
push
pop
push
cmp
mov
sub
cmp
cmp
cmp
mov
sbb
test
jl
iret
aam
enter
cli
xchg
popa
inc
mov
mov
aaa
pop
xlat
lods
jne
cmp
leave
popf
call
and
shll
push
and
aas
xor
jnp
loopne
fldcw
js
cmp
or
fldl
stos
adc
push
xorl
inc
add
xchg
iret
dec
mov
mov
pop
pop
dec
cs
pop
push
jno
std
mov
cmp
fstpl
loop
mov
ljmp
stos
fcom
imul
jns
clc
sub
std
xchg
mov
out
lds
xchg
out
dec
sbbl
and
lods
or
jg
jmp
inc
stos
lret
xor
cmp
pop
push
jmp
stc
push
inc
out
xchg
inc
shll
sub
sub
scas
push
mov
into
aam
add
pop
movsb
cmp
daa
or
xchg
pop
add
sub
cld
xchg
jb
lods
mov
scas
movd
xchg
pop
sbb
cmpsb
adc
jg
into
ss
lea
push
stos
ds
add
and
dec
mov
jp
js
iret
mov
sbb
aam
push
aad
mov
inc
ss
imul
adc
mov
push
inc
jge
adc
insl
push
pop
add
outsb
loope
movsl
push
push
imul
xchg
movsl
dec
jno
mov
inc
xor
outsb
jbe
adc
jmp
sbb
test
test
xor
and
jmp
aas
sbb
call
mov
incl
test
mov
cmp
outsb
and
std
pop
sahf
cmp
adc
cwtl
pop
stos
jmp
cmp
pop
mov
dec
insl
pop
sub
sarb
add
and
pusha
incb
rolb
mulb
pop
stos
cmp
sub
movaps
jmp
adc
sub
stos
shlb
orb
mov
icebp
or
lahf
mov
mov
jnp
adc
stc
jl
hlt
pop
aaa
nop
xor
adc
imul
lret
setns
in
inc
stc
aad
mov
push
stos
xor
arpl
dec
int
out
scas
mov
cmc
add
cmp
mulb
mov
push
mov
adc
lock
scas
sbb
fidivs
jb
mov
jno
push
ja
pop
mov
in
stos
in
aaa
or
in
jmp
jp
fldl
mov
into
cmp
push
lods
icebp
inc
adc
mov
sbb
push
inc
out
outsb
repnz
fnsetpm(287
mov
lret
mov
loope
std
addr16
inc
dec
movsl
aad
in
in
movsl
or
iret
fidivrl
call
addr16
xchg
daa
mov
cmp
push
in
int3
sub
cmpsb
adcb
in
push
jnp
je
pushf
or
pop
daa
jno
add
mov
mov
pop
rcrb
xchg
lea
das
in
test
in
jbe
stos
unpckhps
aam
cmp
lret
out
xor
fnstcw
dec
rep
push
push
or
sahf
nop
scas
mov
addl
inc
or
sub
dec
xor
sub
sbb
das
sub
loop
lcall
stos
scas
mov
out
sub
or
jge
leave
jae
cli
mov
outsl
ss
mov
or
pop
adc
add
out
xor
je
or
push
push
sub
mov
adc
addr16
push
cmp
aas
pop
shl
mov
pcmpgtd
int
cmc
je
mov
push
and
aas
call
lret
aas
cmp
sub
sub
out
sub
adcl
inc
jnp
outsb
leave
rcrb
fstpl
push
mov
dec
cmp
lret
mov
push
sub
into
leave
test
xchg
xchg
insb
mov
das
out
xchg
sti
xchg
push
xchg
mov
inc
push
addr16
inc
add
pop
dec
je
cmp
mov
out
cltd
mov
fwait
stc
mov
sub
out
out
push
adc
xor
push
mov
sub
sti
inc
mov
in
mov
mov
test
out
ljmp
xor
mov
mov
scas
sbb
ja
push
unpckhps
je
cs
fwait
xchg
ja
xchg
push
push
dec
add
repnz
loopne
mov
in
xor
sbb
push
lret
pop
mov
scas
pop
xlat
aam
cmp
or
xor
addr16
hlt
popa
imul
inc
jae
lcall
fwait
movl
leave
push
push
std
pop
rcrb
pop
cmp
dec
cltd
or
push
mov
xchg
lea
flds
push
stos
mov
cld
je
mov
in
aam
cli
cmp
or
inc
mov
sahf
rcrb
jae
jg
ljmp
test
cmp
scas
xor
mov
nop
xlat
jmp
or
jno
ds
pop
imul
push
lods
ret
test
dec
es
jl
xchg
hlt
ror
dec
and
inc
subb
aaa
dec
cmpsb
or
sub
daa
pop
sbb
push
cmp
daa
dec
push
xchg
insb
mov
aam
jnp
mov
and
ljmp
movsl
jmp
add
jl
in
inc
inc
and
mov
cli
xor
pop
icebp
mov
cs
ficoms
push
es
pop
fldenv
icebp
ret
pop
cwtl
addb
cmp
iret
fldcw
xor
and
inc
add
sbb
leave
push
inc
inc
mov
sbb
fldt
lock
out
ret
ret
and
inc
and
pop
jge
in
pop
inc
fdivl
das
mov
enter
or
jne
clc
mov
mov
popf
fdivrl
fildll
pop
dec
lock
jmp
call
int
pop
jl
popf
mov
pop
pop
je
xchg
or
iret
add
and
adc
mov
iret
std
lea
cmp
lcall
shr
sbb
cmp
sbb
fidivl
aam
or
inc
stos
push
xor
pop
loopne
push
push
add
sub
stos
adc
cs
out
les
or
pusha
pop
inc
rcll
out
lahf
push
insb
xchg
dec
lret
inc
xor
inc
mov
dec
ret
dec
int3
mov
push
jb
mov
sbb
mov
movsb
dec
push
dec
adc
aad
jae
xchg
jno
sbb
xchg
call
inc
sub
dec
shlb
cltd
and
mov
test
repnz
or
mov
mov
pop
xchg
call
pop
xor
pop
xorl
and
sub
cld
lock
fimuls
push
jns
xlat
push
outsl
fstl
push
addb
aad
outsb
cs
data16
js
push
jl
stos
and
outsb
or
addl
aaa
iret
or
enter
lock
push
pop
cmpsb
dec
or
sahf
test
xor
cmp
popa
mov
je
pop
cmp
or
xlat
jo
fisubs
jno
mov
and
lods
dec
jnp
adc
dec
lahf
pop
xchg
out
out
dec
pop
daa
hlt
add
mov
add
and
rcll
or
out
ljmp
ret
cmovnp
mov
mov
cmp
xchg
jmp
push
xchg
push
cwtl
push
js
and
cld
jo
sub
xor
jp
int3
lahf
sub
push
je
cmp
rcrb
mov
sub
adc
push
push
enter
lods
je
repnz
out
sti
fucomi
fdivrl
leave
mov
addl
xchg
insl
int
or
or
and
xchg
cmp
inc
in
clc
dec
aam
inc
cmpsb
push
outsb
jns
cmp
movsb
dec
cmp
loopne
loopne
fwait
mov
pop
sbb
ss
mov
shr
das
jp
lea
cmp
sbb
sbb
ficompl
or
imul
fiadds
inc
xor
lcall
mov
add
bound
jmp
push
xor
or
call
cmp
mov
ret
push
movsb
pusha
mov
add
jnp
imul
push
mov
mov
sti
xchg
cld
mov
test
hlt
pop
add
rorb
jmp
xlat
in
push
aas
insb
inc
cld
mov
fstpt
jne
lahf
pusha
mov
test
xlat
jg
stos
les
into
dec
add
data16
sarb
mov
aad
sub
sbb
std
call
fwait
cmpsl
fnstenv
outsl
daa
add
sbb
out
mov
push
iret
fnstsw
cmp
cmp
inc
in
mov
and
flds
in
repnz
sbb
into
push
lret
popf
mov
out
mov
fsubrp
test
dec
mov
int3
fimull
sub
inc
jp
push
jbe
je
sbb
sub
out
pop
add
jne
pop
mov
mov
mov
pop
sahf
dec
leave
cs
into
add
lret
pop
mov
jp
add
repnz
loopne
ljmp
mov
int3
lds
pop
and
sbb
mov
nop
scas
and
and
jns
fwait
cmpsl
in
repnz
push
sub
test
fxch
movsb
sbb
pop
int3
mov
inc
push
test
mul
and
jge
xorl
add
or
inc
sti
enter
cmc
rorl
lret
fadds
and
sub
test
fdivl
push
das
add
rcr
dec
int
cmpsl
jo
push
or
xchg
jb
lcall
lds
adc
pop
repz
jns
cwtl
sbb
jne
mov
outsl
arpl
mov
adc
mov
fmul
xor
cmpsb
sbb
test
sbb
cmp
pop
push
in
loope
sub
test
outsl
push
in
fwait
mov
cltd
mov
lods
cli
and
inc
mov
insb
fwait
repz
push
arpl
in
jp
push
jl
xchg
dec
or
not
pop
insb
clc
adc
push
popf
lock
jns
mov
filds
pop
data16
mov
jo
cld
pop
mov
adc
pop
sbb
jno
add
roll
fs
std
mov
nop
fidivl
xchg
fistpll
jp
call
in
mov
cwtl
add
mov
cs
ret
xlat
cmc
xchg
mov
dec
or
imul
push
imul
jne
jp
lahf
mov
dec
add
and
lock
jg
fcoms
je
call
shlb
fmull
jae
mov
dec
adc
fisttpl
pop
pop
comiss
inc
mov
xchg
pop
iret
adc
pop
es
aad
xchg
arpl
movsl
in
lret
cmp
pop
fwait
mov
cmp
cli
push
lds
adc
and
repz
xchg
inc
jge
hlt
dec
imul
add
pop
push
lods
test
xchg
mov
push
cmpsl
pop
nop
and
xlat
fldz
adc
jmp
shll
mov
int3
xchg
dec
sbb
push
lahf
or
pop
out
adc
pop
and
std
mov
rolb
repz
movsb
pop
scas
jne
cwtl
sti
inc
cld
cmp
add
inc
dec
push
inc
out
imul
shlb
sbb
call
and
mov
jnp
push
popa
and
mov
xchg
mov
mov
mov
sub
mov
mov
mov
dec
inc
ljmp
xchg
iret
jbe
call
ret
xchg
push
xlat
mov
outsl
rcr
movsl
or
lret
lds
adcl
mov
xchg
pop
dec
sub
pop
shlb
aas
add
in
jnp
cltd
mov
jne
add
adc
cmpsl
stc
xchg
mov
pushf
xchg
pop
stos
sub
and
fwait
je
cwtl
push
lret
cmp
jp
cmp
sub
fdivrl
repz
add
jge
add
push
xchg
inc
roll
call
or
mov
scas
push
ret
sbb
xchg
dec
fstp
cmp
mov
mov
push
or
jle
daa
testl
and
fnstcw
fnstcw
push
aaa
sub
jb
in
push
jne
iret
cmpsl
cmp
jl
hlt
mov
dec
das
cmpb
inc
in
dec
mov
and
add
sub
cld
sbb
cmp
aas
and
jae
stos
pop
mov
cmpb
fdivl
pop
cmp
and
in
nop
mov
rorb
cwtl
mov
adc
outsb
mov
or
aam
jp
jmp
fisubrs
dec
stos
iret
imul
mov
mull
push
jae
mov
std
movsl
mov
sbb
into
notl
adc
in
cwtl
push
stos
add
bnd
push
or
jnp
cmpsl
pop
ss
int
js
mov
adc
xor
ret
add
movsb
mov
mov
jge
dec
pop
mulb
imul
jb
sub
xchg
xchg
js
nop
jge
inc
nop
lods
mov
andl
add
add
add
add
add
xchg
add
add
add
add
add
add
add
int3
add
add
add
lret
add
add
add
and
add
add
rolb
add
add
mov
add
add
add
add
add
sbb
add
add
add
add
add
jg
add
add
add
cmp
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
lods
xchg
add
add
add
add
dec
add
faddl
add
add
add
ret
push
add
add
outsb
add
add
mov
add
add
add
add
add
add
jge
add
adc
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
aas
mov
dec
and
out
mov
test
aaa
sbbl
jbe
mov
mov
orl
or
add
int
es
pop
dec
add
xchg
lea
pop
or
ret
and
adc
inc
test
sub
adc
dec
call
mov
fnstenv
jl
mov
push
mov
hlt
sbb
orl
mov
pushl
loop
xor
push
mov
hlt
lret
call
lahf
into
sbb
or
int3
mov
adc
dec
jecxz
mov
jecxz
sub
lcall
xchg
push
rcr
pop
shlb
xor
and
aam
test
push
test
nop
mov
add
cmp
mov
mov
xchg
movsw
lcall
imul
movsb
dec
cltd
ja
scas
xchg
cmp
fnsetpm(287
inc
fimuls
push
push
jnp
cmp
arpl
pop
lods
push
cmpsl
cli
iret
rolb
push
pusha
stos
jns
clc
inc
and
xchg
mov
pop
xchg
es
push
mov
cmp
mov
movsb
mov
imulb
ja
pop
cmp
pop
mov
and
ret
insl
jle
cmp
fildl
ret
xorb
adc
ss
insl
fisubs
stos
jnp
ret
add
out
mov
arpl
orb
outsb
xor
cmp
rep
test
loopne
es
test
fs
clc
cmpsl
pop
adc
repz
lss
cld
lret
push
xlat
mov
lcall
jp
repz
aas
out
hlt
sub
xchg
push
jge
pop
dec
xchg
dec
sbb
movsl
push
push
mov
dec
test
cmpsb
lock
sub
sub
mov
or
mov
fbld
lods
lcall
idivb
ret
adc
arpl
movsl
mov
push
inc
shrl
inc
mov
adc
and
es
jns
pop
push
push
pop
push
js
sub
mov
cli
push
xor
test
dec
mov
and
clc
push
icebp
ds
rcrb
push
pushf
repz
mov
push
frstor
mov
mov
fst
jb
jbe
or
mov
in
xchg
mov
and
out
sbb
aaa
xchg
inc
imul
out
out
push
popa
mov
sbb
jnp
fiaddl
push
jle
xor
fsubrl
pop
andb
xchg
mov
mov
cmp
mov
sub
jmp
stc
addr16
lods
cwtl
push
ds
push
int3
pop
lods
rcll
mov
loope
cmp
mov
insl
ss
stc
fcmovu
fnsave
ljmp
stos
les
mov
je
xchg
xor
sub
fbld
iret
insb
divb
sbb
testb
test
shrl
cmpsb
dec
jne
shlb
cwtl
daa
fisttpl
fistl
xchg
jecxz
xchg
push
mov
xor
or
jae
lds
pop
cmp
mov
push
rclb
cmp
cmp
push
dec
xchg
mov
and
xchg
fadd
idivl
inc
adc
mov
jne
mov
rclb
mov
hlt
loop
test
and
rclb
xor
stos
xchg
jno
push
mov
sti
dec
push
mov
stos
inc
fcoml
cmp
pop
imul
imul
mov
imulb
sahf
setge
outsl
decb
test
pushl
dec
into
xchg
cmpl
adc
jbe
sarb
inc
xlat
sbb
xchg
xchg
xchg
mov
sub
int3
mov
test
scas
aaa
cld
sbb
add
adc
cmpsl
xor
imul
cs
in
stos
cmp
hlt
mov
imul
out
out
cmp
loope
call
mov
pushf
pop
push
aas
rcrl
add
hlt
adc
das
mov
adc
inc
xchg
jmp
or
cwtl
imul
adc
insb
cmc
cmp
xchg
xchg
mov
sbb
sub
arpl
dec
insl
sbb
repnz
fildll
pusha
cmp
mov
stos
adc
imul
popa
push
adc
xchg
jo
sub
jns
daa
pop
push
sbb
cmpl
stos
outsb
push
xchg
outsb
loope
pop
inc
inc
inc
in
xchg
sti
xchg
test
inc
imul
loop
sub
test
lods
pop
sbb
les
test
fcompl
and
push
dec
dec
into
pop
aad
and
cmp
push
imul
fnsave
push
dec
repz
mov
addl
and
push
test
test
popf
mov
popf
jo
orl
sbb
fwait
mov
sbb
pop
mov
jae
cmp
xor
sbb
dec
push
xor
jmp
pop
xor
test
pop
es
shrb
mov
and
sti
testb
aam
mov
add
push
aam
jbe
pusha
orb
jo
movsl
popf
les
sbb
sbb
sarl
lcall
fidivrl
repnz
or
pusha
xchg
lsl
icebp
push
jle
aad
pop
scas
mov
dec
cmpl
mov
xchg
fs
inc
push
mov
mov
stos
inc
push
out
in
pop
jae
mov
lock
and
pop
cs
ret
shlb
ret
dec
push
jo
sbb
push
cli
repz
push
fisttpll
loope
adc
sbb
dec
push
int3
mov
rorb
sbb
sub
sub
or
add
lds
movsl
mov
add
add
add
add
add
add
add
cmp
or
add
add
data16
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
mov
add
add
flds
add
mov
add
add
add
fiadds
add
add
push
add
add
movsl
add
add
pop
add
add
add
cmp
add
add
add
add
dec
popl
add
add
add
add
add
add
add
mov
add
add
cwtl
add
loop
add
add
add
add
add
add
aas
add
add
add
lods
jge
add
add
add
add
add
add
add
movl
add
add
add
add
repz
add
add
add
add
push
add
add
add
ljmp
add
add
add
add
add
add
add
or
aad
lea
mov
lret
mov
insb
repz
das
int3
inc
test
pop
popa
mov
sub
xorb
clc
out
push
mov
repnz
aam
test
out
xchg
or
mov
je
push
push
test
fists
mov
pop
dec
aam
jns
fbstp
outsb
pusha
dec
push
sub
fwait
enter
dec
js
lret
andb
adc
cmpl
jnp
xor
out
cmp
adc
cmpsl
inc
aas
push
andl
and
inc
jl
and
loopne
test
pop
out
lods
aaa
test
sti
popf
xorl
ret
mov
jno
mov
leave
mov
ds
jmp
adc
clc
out
xchg
mov
sbb
and
push
popa
icebp
jge
sub
loopne
jmp
nop
dec
mov
movsl
ret
rcrb
mov
lahf
lcall
cmc
cmp
movsb
movsl
mov
jmp
jl
or
add
jb
or
scas
add
lea
mov
fwait
pop
dec
rcrb
xor
xor
or
cld
mov
push
xor
dec
movsb
jge
cmp
mov
mov
mov
mov
lret
push
mov
push
mov
push
cmpsl
or
es
insb
repz
mov
out
pop
daa
test
and
pop
insl
xorb
fwait
pop
cmp
sbb
mov
xor
inc
inc
imul
leave
dec
inc
in
add
rcl
sub
xor
enter
sub
push
sub
mov
xor
lods
int
pop
mov
inc
push
in
dec
jmp
int3
scas
in
out
jl
jp
or
inc
int3
cmpsl
xchg
sbbb
mov
je
lods
ljmp
shrl
mov
nop
adcb
idivb
iret
fisubrl
pusha
test
lcall
mov
ja
xor
add
lea
stos
push
and
fwait
pop
dec
iret
mov
or
jae
std
popf
xchg
push
xor
mov
push
sub
xchg
xchg
adc
popf
push
lcall
fs
pop
das
repz
jp
cmp
cmpsb
sub
cmp
repz
mov
pusha
sbb
rolb
repz
mov
in
adc
xor
mov
or
adc
mov
stc
ficomps
adc
mov
clc
mov
call
adc
shlb
push
lods
fnstsw
jle
imul
jg
jge
pop
or
cmp
xchg
jl
out
call
add
push
gs
jmp
dec
dec
leave
fidivrs
mov
dec
push
loopne
iret
push
ret
shr
jo
mov
and
mov
mov
jmp
and
mov
fwait
jle
in
xchg
std
hlt
pushf
jge
sub
inc
mov
inc
add
sub
stos
mov
pop
pop
dec
or
xchg
scas
push
mov
mov
jle
mov
into
mov
insb
cli
adc
stc
mov
mov
inc
es
mov
popf
xlat
pop
mov
cltd
inc
ja
inc
jb
or
std
and
lds
xchg
jnp
inc
mov
dec
out
popf
ds
xchg
stos
and
ret
xchg
dec
cmp
and
outsb
adc
js
mov
push
pop
insl
orb
sub
dec
fstpl
faddl
bound
cwtl
push
pop
incl
cltd
div
testb
fsubrl
add
out
xlat
push
pushw
fcomp
addl
jb
lret
inc
adc
movsb
push
or
push
cmpsb
mov
or
popa
and
push
mov
lods
sbb
loope
xchg
out
orb
mov
add
and
repnz
out
sti
jg
inc
inc
fld
repz
pop
outsl
shrl
xor
es
and
xor
dec
addr16
add
and
push
xor
mov
jno
mov
out
push
inc
stos
in
je
test
sbb
sahf
push
pop
test
popf
lods
je
cltd
jbe
cmp
xor
cs
dec
mov
xchg
mov
jae
pushf
shrl
ficoml
inc
lret
cmp
mov
es
jecxz
hlt
jmp
xor
inc
lahf
dec
add
push
xchg
sub
and
sbb
jg
or
nop
push
push
mov
fs
jbe
adc
mov
std
icebp
dec
mov
fs
pop
shll
int
cltd
insb
popf
cmp
mov
scas
dec
xchg
pop
mov
dec
nop
dec
cmp
cmpsl
out
mov
jp
push
xor
push
in
inc
add
mov
js
ja
cmpsl
cmp
push
sub
jo
sub
sub
cmp
sub
aam
add
adc
stos
es
stos
sti
xor
adc
sbb
aad
dec
shlb
das
clc
notb
xchg
sbb
icebp
test
hlt
iret
pushf
xchg
or
add
add
jmp
fwait
sub
pop
ret
xor
sub
test
mov
dec
in
jp
xor
cmc
mov
pop
xchg
aas
loop
out
mov
jo
je
push
js
jno
out
inc
jbe
xchg
js
aam
popf
jp
iret
stos
loopne
jo
test
enter
mov
push
fwait
sbb
sub
xor
adc
fwait
divb
cmp
push
dec
inc
dec
sbb
xchg
clc
push
shlb
movsb
in
out
inc
pop
sbb
dec
sbb
adc
sub
push
xchg
jo
cmpsb
and
clc
lret
shlb
push
mov
insl
das
mov
mov
lods
mov
dec
push
insl
mov
mov
popf
mov
mov
adc
scas
adc
jle
scas
pop
sub
add
movb
xchg
ljmp
call
js
sbbl
jbe
mov
insb
mov
stos
ja
xlat
lods
mov
mul
cmpsl
pop
xchg
sub
adc
subl
add
cmc
rorb
in
das
cmp
clflush
sbb
pop
movsl
adc
sbb
pop
fstpt
xchg
push
xlat
push
jbe
mov
faddl
lods
call
push
fsubrs
inc
arpl
sub
fmul
and
mov
fisttpll
mov
pusha
popa
aas
jl
inc
fsubl
or
sub
fidivrs
enter
insl
sbb
outsl
pusha
cs
jl
repnz
xchg
fwait
xchg
stc
roll
pop
inc
sub
jo
lock
inc
test
fs
xchg
or
mov
stos
inc
cmp
clc
arpl
inc
data16
mov
cld
mov
mov
cmp
pop
je
pop
sbb
inc
subb
xlat
js
push
bound
adc
mov
xchg
enter
scas
xchg
ss
jne
inc
scas
mov
aam
nop
inc
xchg
pop
jg
pop
popf
rcrl
fsubr
movsl
insl
mov
or
adc
lds
pop
stc
repz
xchg
shr
or
adc
sbb
cmp
adc
push
mov
lock
sbb
mov
call
pop
pop
xchg
inc
xchg
pop
cmp
popf
imul
mov
out
cld
sbb
xchg
rcrl
adc
cli
pop
sbbl
int3
push
push
call
sbb
jo
outsl
lds
pop
mov
sbb
movsl
repnz
faddl
jecxz
orb
mov
pop
pop
jp
in
out
mov
add
xchg
into
aad
sbb
movsb
xor
jnp
test
and
je
rcll
xchg
ds
movsl
push
cmpl
push
mov
imul
mov
push
lret
mov
and
movaps
mov
leave
stos
jg
jmp
lock
cli
jecxz
pop
dec
pop
leave
jmp
cmpsb
fldenv
dec
inc
cmp
push
pop
jnp
xor
pop
push
daa
cltd
leave
iret
insb
push
dec
scas
lods
xor
lret
cmp
repz
jl
leave
mov
bound
jae
adc
mov
paddw
mov
sub
push
xchg
popa
cmpsl
dec
push
mov
sbb
push
jne
adc
fcomp
xchg
xchg
dec
sub
pop
lock
ljmp
sbb
imul
pop
sbb
ja
adc
xor
mov
leave
daa
sbb
rorl
shlb
xor
aaa
push
xorb
push
out
arpl
or
cld
jne
roll
mov
push
neg
jle
fwait
push
iret
sub
int
insb
pop
adc
out
pop
and
jno
fs
or
mov
shll
inc
sbb
and
fldenv
mov
clc
stos
xchg
adc
popa
dec
ds
mov
push
dec
cmp
sub
mulps
aam
das
shlb
mov
cmpl
imul
rcl
cmp
dec
xchg
mov
mov
and
js
cli
add
retw
stc
ret
and
jb
adc
jecxz
sbb
xor
push
mov
and
sbb
and
or
lcall
jb
mov
ror
sub
stc
lock
dec
ret
xchg
jno
nop
sub
pop
test
icebp
icebp
adc
popf
in
popa
out
fdivrl
or
movsl
fildll
aaa
ror
push
scas
fwait
push
inc
ds
loopne
mov
rcll
fisubl
dec
pop
xor
xlat
loop
jmp
in
test
gs
xchg
mov
push
pop
daa
daa
ret
mov
mov
push
pop
cli
in
push
fs
orl
sub
dec
pop
mov
fdiv
jne
mov
lret
std
and
lock
fnstenv
mov
stos
sub
sbb
xchg
fiaddl
in
xchg
cmp
mov
lea
inc
xchg
adc
dec
xchg
xchg
loope
test
inc
mov
pop
mov
cmp
sub
add
mov
jmp
inc
adc
xchg
inc
or
arpl
je
adc
mov
inc
fistl
jns
ds
jo
test
sti
dec
cmp
cmp
inc
and
mov
cmc
mov
cmp
scas
inc
pop
push
cmp
loope
mov
loop
dec
insl
and
sub
push
inc
mov
cltd
mov
ret
cmp
mov
push
std
mov
or
cmp
stos
dec
call
mov
repnz
je
imul
iret
ja
lds
popf
cmp
hlt
fisttpl
lret
jge
pop
enter
fs
mov
sti
ret
in
fbstp
in
pop
in
push
jno
addr16
pop
push
mov
sbb
jmp
mov
sub
add
push
sbb
outsb
sub
rorl
jge
sub
lods
mov
in
ja
aaa
jnp
scas
clc
add
xor
jns
cmp
pop
push
cmpsb
lods
mov
in
ret
sbb
pop
lcall
test
fsubs
test
mov
movsl
test
mov
push
jge
mov
xchg
ss
xchg
cmc
sbb
and
cmpsl
mov
les
in
adc
dec
or
mov
shrb
lahf
or
cs
inc
xor
sbb
cmp
dec
out
mov
or
jae
push
xor
push
fisubrl
push
mov
test
xchg
ret
mov
dec
xchg
push
stc
pop
jg
or
xchg
xor
lahf
push
andl
filds
out
sbb
shll
in
push
adc
jnp
mov
pop
ss
roll
enter
repnz
inc
aad
pop
or
fmul
jecxz
dec
test
in
mov
insb
sbb
xchg
add
mov
push
js
lods
mov
iret
xchg
mov
loope
fimull
test
fistps
jp
mov
jl
mov
out
sbb
push
mov
out
mov
loope
rol
call
xchg
mov
sbb
daa
cmp
sub
fistps
or
pushf
testb
and
jo
aas
imul
xchg
nop
sarl
xchg
sbb
lret
adc
loope
adc
outsb
mov
jl
dec
lahf
aam
shlb
popf
imul
adc
sub
jno
lret
jmp
aam
pop
cld
sbb
add
inc
in
inc
jb
sub
add
inc
push
xor
ds
sahf
cmp
stos
ficoms
push
test
and
das
sub
jae
adc
or
inc
inc
inc
xor
inc
sub
jns
push
sub
inc
aas
ljmp
mov
cmp
xchg
mov
in
dec
cwtl
dec
aam
xor
pushf
push
ss
rolb
imul
sub
lock
fldenv
mov
cmp
mov
push
aas
loope
pop
fsubl
sub
mov
lea
mov
mov
jp
movsb
cltd
pop
push
mov
sub
roll
pop
or
pushf
or
xchg
push
jg
ja
cwtl
add
sbb
cmp
pop
sub
into
cli
and
out
ffreep
sbb
mov
and
inc
pop
fs
fdiv
stos
repz
cmpl
popf
mov
or
adc
xlat
cs
lcall
daa
sbb
bound
sub
jp
jbe
pop
mov
pop
scas
jmp
push
mov
jno
out
jp
jp
bsr
pop
push
cmc
cmp
jbe
fsubl
ja
aaa
call
xor
mov
ss
and
add
cmp
or
inc
mov
push
sahf
mov
xor
mov
cmp
xchg
inc
aad
ret
andl
stc
fldt
movsl
enter
cwtl
icebp
push
pusha
or
sub
push
and
pop
stos
fcoml
pushf
pop
push
out
bound
in
gs
jge
jmp
mov
sbb
fsubs
add
jle
mov
dec
imul
cli
stos
mov
pop
jnp
dec
sub
negb
adc
jnp
mov
lock
push
ja
dec
shl
or
notl
je
pop
sub
mov
mov
add
aas
lret
aam
lds
cmpsl
clc
call
ret
jge
lret
jmp
lret
sar
pop
add
in
aas
sti
shlb
xor
sub
mov
das
jae
andl
jp
mulb
sahf
sub
mov
jns
lahf
cmpl
leave
ds
add
arpl
adc
fwait
test
push
int3
or
sub
cld
add
std
pop
cmp
mov
cmp
ret
adc
xchg
add
into
rcl
jle
sahf
mov
pop
imul
jbe
mov
test
test
lret
sbb
scas
push
or
adcl
xchg
scas
dec
into
pop
shr
jmp
jmp
xor
adc
repz
xchg
dec
mov
dec
mov
loop
lods
aas
jno
loop
rclb
mov
dec
sbb
inc
cmp
ja
ja
lret
and
cmp
dec
imul
pusha
mov
sub
xchg
mov
jae
int3
inc
movsl
cmpsl
pop
addr16
mov
push
fisttpl
add
and
ljmp
inc
mov
lds
scas
in
dec
cltd
leave
out
sbb
pop
cli
popf
xchg
mov
imul
jbe
xchg
lahf
mov
cmp
scas
mov
and
andnps
subb
aaa
popa
test
movsb
mov
iret
subb
int3
cmp
pop
push
jno
pop
in
in
pop
mov
mov
ja
insl
add
cwtl
insb
inc
mov
sbb
fiaddl
fcmovb
pop
fsubr
dec
fnsave
push
adc
mov
jge
fiadds
jl
sbb
in
xor
imul
push
lods
scas
movsl
dec
push
sub
mov
std
ret
push
mov
inc
loope
xchg
psllw
movsb
xchg
loope
xlat
cmp
lock
scas
stos
mov
fisubl
cmp
xchg
or
in
add
push
mov
push
mov
test
ret
sub
stos
popa
imul
push
xchg
pop
icebp
jbe
xchg
js
xor
sub
iret
push
clc
jb
lods
rclb
mov
jmp
fst
mov
pop
add
jno
in
inc
ljmp
inc
push
xor
test
int
mov
mov
push
mov
xchg
xor
mov
xlat
mov
jne
cmpl
cmc
jne
jnp
pop
stc
mov
push
repz
test
inc
jns
sub
or
into
sbbl
psrlq
shlb
cmpsl
adc
imul
mov
pop
add
insb
shrb
mov
jns
popa
mov
dec
or
pop
adc
mov
test
shrb
icebp
les
call
jae
imul
ret
jns
cmp
inc
imul
push
dec
mov
je
scas
push
xlat
mov
sbb
fidivs
out
aaa
mov
pop
mov
xchg
movsl
xchg
adc
stos
clc
ds
or
pop
push
in
test
dec
cmpsb
cmpl
dec
xchg
xchg
lds
push
cmova
js
xchg
and
outsb
inc
or
cmpsl
test
rol
mov
sbb
mov
lea
outsl
fsubrl
push
mov
xor
add
scas
sbb
cmc
aad
cmp
and
test
stos
out
ficomps
push
xchg
mov
mov
adc
fnsave
xchg
and
dec
pop
cmp
andb
cmp
into
mov
add
mov
sbb
adc
sbb
pop
mov
sbb
mov
loop
jb
cmp
sub
add
cwtl
and
adc
imul
dec
push
jbe
jb
mov
pop
adc
push
mov
mov
inc
in
or
jecxz
or
movsb
inc
push
out
lahf
es
pop
std
xchg
add
jmp
pop
mov
mov
pop
sbb
jne
or
pusha
mov
jle
or
push
shrb
pop
jp
push
sahf
call
inc
sti
loope
xchg
add
or
test
xor
icebp
xchg
jle
ret
ljmp
std
shl
dec
mov
arpl
mov
loope
shl
pop
cmp
idivl
js
out
mov
js
movsl
movsl
enter
adc
xchg
lods
in
push
test
sarb
mov
inc
dec
adc
and
outsb
mov
test
lret
adc
and
stos
lock
push
dec
pop
ss
cltd
cmp
or
enter
jmp
mov
jmp
arpl
dec
lods
dec
xor
ret
jp
loop
pop
fistpll
sbb
jae
mov
and
or
testl
pop
push
jnp
test
stc
adc
or
dec
cmovp
mov
lock
cli
je
or
inc
jo
shr
hlt
xor
ret
das
add
xchg
fisttps
iret
mov
cmp
or
push
sub
jbe
cmpsl
inc
sbb
loope
pop
and
nop
popf
lret
jb
inc
out
jo
jmp
lahf
fisubrl
pop
mov
pop
or
test
fdivp
icebp
rcrb
movsl
push
cmp
popa
jb
cltd
test
cmp
shrl
repnz
xchg
adc
xor
inc
jns
mov
pushf
sbb
mov
repnz
lcall
sub
push
cs
push
sub
fistpll
imul
xchg
push
push
mov
xchg
mov
pop
xor
cmpsb
movb
cmp
shrl
cmp
inc
dec
ja
loope
stc
jb
ret
fisttps
sub
jno
mov
adc
popa
je
mov
leave
xchg
mov
call
dec
in
in
jns
jbe
mov
xchg
cmp
sbb
jae
loop
push
jecxz
ret
mov
rclb
js
ljmp
xor
mov
arpl
mov
push
lods
popa
or
sbb
flds
sub
in
jae
jo
pop
int
setge
jl
lahf
loopne
xchg
aad
or
inc
jg
sbb
xchg
arpl
mov
scas
repz
sar
xchg
add
iret
nop
xchg
test
leave
jbe
gs
aam
pusha
pop
int3
fisubs
cmp
adc
std
fs
xor
add
jo
jo
mov
pusha
cmp
rcl
adc
sbb
and
add
pop
mov
outsb
popf
adc
sub
cmpsl
sbbl
mov
cmp
subl
out
test
scas
int3
into
mov
imul
orl
push
add
lretw
jecxz
in
cmp
lods
and
int3
lods
imul
lcall
push
mov
dec
test
sti
mov
cltd
or
scas
dec
aas
outsl
mov
cwtl
sub
add
sbb
push
in
andb
and
test
lret
sbb
jecxz
mov
sahf
cmp
testl
idiv
sub
push
and
imul
pop
xchg
adc
mov
js
stc
sbb
es
sub
adc
or
jo
mov
mov
scas
loope
xor
popa
push
aad
aam
mov
fcmovbe
pop
push
xchg
loopne
ret
test
adc
xorl
and
mov
mov
xor
ljmp
out
mov
repz
sbb
adc
push
mov
cli
loop
enter
xor
movsb
or
cmp
and
mov
sbb
dec
xor
lods
and
xor
pop
jno
lret
mov
aas
pop
in
stos
sar
test
push
mov
push
pusha
pop
adc
or
insb
mov
inc
push
scas
stc
dec
cwtl
rol
dec
sub
pop
cwtl
or
jmp
mov
dec
aam
mov
jae
sub
push
add
inc
or
cmp
fisubl
xchg
sub
stos
add
sub
add
inc
cmp
sahf
jmp
jle
mov
xchg
sarl
shlb
clc
loop
adc
ds
jae
icebp
or
cld
mov
lods
pop
ss
ja
sti
xchg
or
and
inc
and
push
fsubl
xor
cltd
data16
jne
sbb
dec
aam
in
cmp
out
jo
mov
scas
and
gs
cmpsl
lahf
jb
aam
stos
xor
sbb
fs
mov
xchg
xor
testb
int3
subl
jl
push
mov
stc
sbb
pushf
push
cwtl
shl
enter
and
mov
std
inc
icebp
sbb
fimull
daa
add
arpl
mov
pop
pop
imul
xor
and
lds
jno
mov
sub
mov
fbld
imul
push
pop
or
mov
inc
inc
call
cmpsb
xor
mov
sbbl
movsb
imul
pop
lea
sbb
out
lods
mov
leave
sub
test
daa
cmp
decl
sub
xlat
push
hlt
flds
push
scas
stc
rcll
outsl
push
pop
adc
cwtl
dec
mov
sbb
dec
fisttpll
or
xor
sbb
and
adcl
sub
add
push
mov
icebp
movsb
fwait
xor
pop
cmp
ficomps
test
and
or
or
mov
jge
mov
push
mov
ret
outsb
nop
dec
aas
and
addr16
ljmp
rcr
add
xor
sarl
outsl
dec
loopne
loopne
mov
mov
aas
ret
movsl
test
dec
xchg
jmp
aam
adc
testb
or
mov
out
ret
mov
xchg
repnz
add
dec
mov
mov
sti
dec
lds
and
insb
mov
dec
push
lock
fs
push
xchg
cmc
aad
ds
jge
in
loope
inc
jle
loope
pop
xchg
sbb
mov
orb
mov
stos
pop
cmp
add
icebp
mov
pop
in
lret
icebp
jge
fildl
pop
adc
dec
mov
loopne
mov
ror
cmp
xchg
mov
and
imul
rcl
pop
cld
fbld
jle
icebp
cmpb
and
jecxz
daa
jae
lods
sub
dec
js
sbb
aam
das
fwait
pop
sub
ss
subl
repz
pop
call
pusha
dec
pop
mov
mov
jb
add
pop
adc
adc
sbb
bound
daa
pop
mov
int3
ja
adc
add
dec
std
lea
mov
adc
lcall
ja
fistpll
mov
jns
in
xor
pop
xor
addr16
xchg
daa
sub
xlat
jne
into
test
int3
not
jbe
aaa
and
cli
cmpsb
fists
pop
cmpsl
push
stos
inc
test
pop
or
lods
pop
insb
setae
pop
data16
add
rcrl
sbb
in
jnp
je
add
dec
ljmp
and
shrl
push
and
nop
subb
fwait
add
jae
adc
clc
rorb
cmp
cwtl
pop
je
jp
out
je
mov
mov
dec
jb
call
outsb
pop
adc
jo
sub
inc
addr16
push
dec
jmp
dec
sahf
sti
cli
sahf
subl
sub
rorl
xor
or
lods
dec
lret
sbb
and
andl
xchg
xchg
cmp
in
add
insb
jo
sbb
adc
loopne
cmpsb
int3
fisubs
pop
aam
mov
add
mov
es
sbb
adc
adc
in
jb
test
out
jge
lods
cltd
popf
test
mov
lcall
les
add
or
ficoml
stos
sub
cmpsb
iret
jecxz
lock
int3
inc
test
or
inc
jbe
cli
testb
inc
fwait
fwait
jo
and
fildl
rclb
fldenv
fstpt
ss
lcall
lea
and
mov
repnz
sarb
shll
orl
xchg
pushf
xchg
xor
movsb
mov
fistps
mov
dec
test
cmp
jecxz
negb
das
int
dec
xchg
push
insb
cmpsb
inc
sahf
pop
jno
xor
mov
inc
lock
test
test
adc
mov
fcompl
mov
push
divl
scas
or
pop
outsb
mov
jns
sub
xchg
aas
cmp
cmp
dec
cmpsb
lahf
clc
lock
mov
fidivrl
inc
test
sbb
jb
cmpsl
iret
lock
xchg
adc
pop
pop
iret
cltd
ss
cwtl
xchg
pop
jmp
or
scas
cmp
jae
pop
mul
adc
push
jb
orb
add
test
mov
pop
and
inc
ds
fidivrs
mov
cmp
pusha
push
addr16
in
or
jg
shrb
mov
in
pop
add
adc
lahf
mov
mov
lcall
arpl
cld
stos
mov
jb
push
ljmp
call
insl
lret
scas
cmp
inc
jbe
imul
or
pop
int3
sahf
inc
js
mov
xor
mov
xchg
cmpsl
aad
xor
push
sub
sbb
jle
mov
pop
orb
add
lods
bound
dec
leave
push
femms
loopne
js
sbb
shll
das
shl
in
push
push
add
adc
fs
test
mov
fwait
xchg
push
inc
fs
in
fcoml
mov
fistpl
ret
les
in
inc
int3
jns
repz
xor
and
push
in
sbb
cli
out
loope
es
dec
pop
mov
rorb
sbb
mov
test
daa
add
cmp
xor
add
xchg
in
lcall
inc
inc
repz
or
xchg
xor
xchg
fdiv
mov
cwtl
int3
sub
lret
fcoms
push
sbb
imul
pop
xchg
repz
js
pop
test
pop
cmp
mov
mov
enter
cmpsl
ljmp
out
mov
jl
lahf
dec
cmp
inc
mov
shrb
fcomps
push
jp
arpl
xchg
mov
loopne
and
imul
jle
jge
inc
mov
movsb
sbbl
push
dec
movsb
fcoml
adc
mov
and
ror
sub
daa
adc
icebp
xchg
int3
mov
push
add
push
nop
inc
roll
xchg
dec
jnp
mov
jns
mov
add
sbb
xchg
popf
int
and
xor
and
outsb
test
push
pop
call
cmp
test
dec
lahf
dec
jbe
jnp
or
std
das
and
push
sub
icebp
jl
inc
jb
add
int
dec
mov
jnp
jnp
aaa
adc
ficoml
inc
mov
sub
lock
rcrl
mov
sbb
push
mov
shll
xchg
cwtl
push
push
mov
aaa
shr
loope
xchg
pushf
jnp
push
mov
xor
jge
dec
scas
sbb
call
popf
imul
mov
mov
xor
out
cmpsl
in
fdivs
cwtl
jmp
add
add
add
lret
add
add
pop
mov
add
add
test
dec
sarl
in
es
mov
ljmp
mov
push
into
imul
mov
icebp
std
arpl
decb
test
shl
inc
int
mov
mov
pop
jl
ret
sub
jmp
xchg
adc
sahf
call
orl
inc
out
mov
lret
mov
iret
bound
out
adc
imul
incl
jecxz
xlat
dec
cmp
cmpsl
cmpsb
testb
adc
loop
mov
xor
cli
cmp
push
fs
jno
popf
or
test
inc
push
cmp
adc
add
push
je
in
rcll
mov
mov
call
out
cmp
rorl
out
andl
xor
arpl
test
or
jno
sub
dec
scas
mov
sbb
sbb
fldcw
int3
outsl
push
andb
addb
and
xchg
sub
jmp
outsl
add
inc
xor
jecxz
icebp
xor
orb
faddl
stos
cmp
or
hlt
adc
or
and
xor
fs
xchg
push
aaa
arpl
or
inc
xchg
and
rcrb
add
stos
xlat
leave
and
mov
divl
out
in
mov
pop
imul
xorb
shlb
mov
mov
xchg
add
adc
mov
rorl
sub
psllq
push
mov
dec
mov
sub
scas
sarb
inc
pusha
popa
pop
hlt
into
mov
jnp
mov
loopne
mov
jnp
mov
aam
push
mov
push
add
add
sbb
fdivrl
push
inc
jl
repz
lds
add
insl
jne
lret
stc
stos
scas
sub
mov
test
test
fstps
test
dec
push
bnd
sub
call
inc
adc
mov
xor
das
stos
lcall
and
jle
cmp
call
cmp
rolb
xchg
out
mov
js
pop
mov
jmp
and
out
mov
jb
lret
cmpl
ficompl
xlat
aas
push
mov
xchg
mov
int
sbb
jbe
shll
into
out
cmc
sub
pop
fistps
sbbl
mov
pop
jl
push
int
lahf
adc
mov
cmp
push
adc
bnd
dec
pop
add
cmp
cwtl
outsb
and
movsb
adc
shll
ljmp
cmp
add
sub
cltd
ljmp
jecxz
je
mov
scas
aam
ja
hlt
lea
push
js
or
xchg
xchg
mov
jb
in
es
cmp
shll
cmp
pop
lret
sub
xor
pusha
inc
adc
adc
aad
loop
dec
cmp
jae
outsb
jmp
adc
daa
aad
mov
es
pusha
inc
sbbb
inc
jae
xchg
enter
in
mov
adc
ja
sbb
cmp
rorb
jmp
mov
sub
loopne
inc
mov
loopne
clc
inc
adc
test
fildll
or
fcomp
ret
mov
stos
push
jl
ret
push
push
fwait
cmp
cmp
mov
pop
pop
lret
mov
mov
mov
ret
into
sti
repz
adc
pop
sti
fs
jp
pop
push
inc
dec
popf
pop
xadd
or
sbb
cmp
cltd
xor
sbb
divb
aaa
xor
xor
xor
pop
subb
adc
jp
dec
xchg
inc
pop
pop
mov
hlt
outsl
je
adc
adc
imul
lcall
popf
orb
inc
je
or
in
imulb
out
push
jmp
inc
sbb
and
jle
movsb
cwtl
cmp
pop
cmc
mov
mov
dec
lock
imul
lock
dec
inc
and
mov
sub
jmp
ds
hlt
lret
rcrb
bound
loop
sbb
call
dec
inc
out
jge
and
cmc
or
shlb
xlat
xor
or
data16
popf
mov
call
sbb
push
js
cmp
mov
test
mov
jmp
mov
call
adc
inc
sub
pusha
cwtl
mov
mov
mov
sar
test
mov
in
test
mov
pop
mov
test
loopne
idivl
push
sbbl
repnz
sti
push
movsb
loop
rclb
aad
out
pop
xchg
pop
lods
mov
lret
sbb
out
insb
pusha
int3
cmpsb
pop
sub
cmc
or
sub
inc
cwtl
test
inc
fstps
lods
ja
and
pop
aam
xor
test
mov
lret
or
fstps
mov
gs
mov
jno
ss
inc
dec
pop
mov
test
jp
dec
sbb
lods
push
outsb
xchg
inc
xchg
dec
cwtl
popf
mov
cli
push
daa
add
ss
pop
popf
scas
inc
fs
int
and
test
int
pushf
cmpsl
xchg
inc
iret
stc
xor
cwtl
mov
sub
sbb
and
add
test
incl
imul
inc
xchg
add
fcompl
insb
pop
nop
aaa
sbb
test
rcll
adc
insl
outsb
mov
out
adc
pop
xchg
ss
icebp
jno
clc
lahf
jmp
mov
pop
sub
nop
pop
test
cs
mov
rcr
rsm
inc
xlat
in
xchg
or
leave
sbb
mov
cmp
in
adcb
or
sub
call
mov
xchg
scas
into
mov
add
pop
test
mov
jae
in
push
ja
addb
sub
push
daa
jb
add
std
ret
dec
sbb
pop
pop
test
jbe
push
or
mov
inc
lock
ret
and
mov
je
out
sub
add
ljmp
faddl
loope
mov
repz
pushf
add
inc
dec
xor
xchg
out
ret
fadds
test
in
fildll
inc
stos
imulb
and
insb
mov
inc
sub
mov
cmpsl
shr
fadds
jmp
add
or
cmp
sbb
mov
push
lods
js
pop
insb
lock
daa
adc
in
mov
out
cmp
arpl
pop
into
adcl
pop
add
fbld
sub
fldenv
push
sbbl
sbb
jecxz
divb
popa
out
pop
push
in
outsl
fwait
in
jbe
sbb
daa
aad
dec
xchg
mov
jae
lods
negl
pop
jnp
jno
cmp
or
sbb
pop
cwtl
and
sub
nop
jecxz
je
xchg
and
xchg
push
enter
jmp
mull
xor
sahf
cld
std
popf
sti
mov
shl
scas
push
push
rclb
mov
and
ss
stc
insl
mov
add
popf
mov
sbb
jbe
pop
mov
mov
push
push
mov
sbb
fidivrs
xchg
push
add
mov
mov
xor
sarb
mov
jb
std
xchg
jno
lahf
xor
scas
xor
push
test
mov
lods
stc
pop
push
mov
daa
leave
sbb
pop
popa
and
inc
jge
adc
insl
arpl
gs
mov
out
cs
jns
inc
sub
pop
js
and
xlat
inc
repz
fidivl
mov
pop
int
in
stc
in
push
mov
nop
or
popa
push
adc
clc
xor
ljmp
or
sbb
cltd
inc
add
pop
sub
mov
xchg
xor
scas
cmp
cmp
cmpsl
cmc
mov
sbb
cmp
inc
dec
fidivl
xor
adc
add
push
push
cmp
push
int3
repz
sub
dec
repz
xor
dec
int
adcb
mov
push
jl
push
and
in
mul
adc
stos
aam
push
in
sub
ss
mov
fsts
dec
push
mov
les
sub
ljmp
push
lods
jl
es
sbb
xlat
mov
fcomps
push
ds
inc
push
lret
sti
mov
call
rolb
push
scas
stos
push
dec
jge
push
call
and
xchg
fwait
popf
gs
lret
loop
push
nop
popf
mov
sbb
icebp
movsb
inc
sub
ret
jle
mov
push
stos
das
jecxz
xrelease
mov
std
sub
jbe
cli
mov
loop
cmpsb
nop
push
dec
sarb
mov
lods
jp
ja
insb
push
adc
popf
pushl
mov
mov
and
sti
hlt
mov
out
mov
inc
fnstcw
and
jo
repnz
jg
stos
in
out
and
push
cmpsl
mov
fmuls
sub
call
sub
dec
xor
or
cmpsl
mov
push
and
dec
sbb
inc
sti
in
push
andb
int3
sub
dec
mov
push
js
movsb
mov
in
sbb
add
outsl
sub
cld
mov
jle
jnp
dec
adc
mov
shrl
mov
int
jmp
cwtl
in
inc
das
cmpsb
dec
shrl
in
and
lea
push
inc
mov
stc
sbb
xor
cmp
xchg
pop
movsb
pop
add
ret
fwait
push
lods
inc
or
fiaddl
dec
sub
outsl
xor
mov
aas
adcl
push
add
mov
sub
sbb
jmp
mov
mov
jb
ja
xor
sti
cmp
sbb
imul
mov
dec
pop
mov
clc
and
xchg
fwait
dec
or
sarb
inc
ljmp
notb
pusha
popf
lahf
lret
add
cmp
mov
fiadds
in
incb
ja
loopne
mov
repnz
and
jp
or
fcmove
cwtl
dec
fs
push
leave
push
xor
or
jp
shl
add
xchg
ja
inc
jne
or
xchg
fsub
inc
ljmp
xchg
inc
and
mov
aas
cld
adc
adc
lret
flds
mov
pmulhw
push
add
cld
inc
sbb
dec
inc
jae
mov
out
in
dec
mov
js
inc
inc
int
fwait
cmpb
cwtl
repz
fdivrs
clc
ljmp
push
push
jbe
ljmp
or
mov
add
fstps
xor
fs
ret
xor
inc
into
xchg
scas
mov
ret
pop
fcmovnb
ljmp
add
pop
fildl
fsubs
mov
fs
ret
xor
dec
push
fdivrp
movsb
je
lret
inc
jne
cmpsl
mov
or
pop
pop
add
mov
inc
adc
js
ds
sahf
jle
popa
xor
jge
sub
mov
in
fbstp
lret
scas
int
aas
int3
inc
sbb
jg
rcrb
je
test
push
push
das
fiadds
mov
push
lds
cmp
and
pop
and
sbb
sub
dec
pop
fs
mov
sti
mov
dec
jp
mov
js
loopne
xorl
inc
xor
dec
je
or
adc
mov
or
sti
std
sub
scas
enter
mov
in
cmp
insb
cmpsl
clc
outsl
roll
dec
xor
jg
fsubrp
add
sar
lea
ss
jo
outsb
out
aaa
imul
dec
aad
in
rcrb
and
daa
cld
and
lret
adc
repnz
and
jnp
inc
mov
dec
repnz
fidivs
in
ja
in
xlat
into
fiadds
mov
imul
or
dec
xor
jecxz
fwait
sbb
fsubr
fs
jg
lods
jl
repz
pusha
ss
loope
xchg
adc
or
in
mov
mov
push
addr16
mov
add
outsl
mov
pop
inc
mov
out
xchg
rorb
popa
jle
inc
adc
pop
add
scas
mov
data16
mov
dec
stc
lret
mov
popa
cmp
inc
xor
jg
sbb
mov
and
mov
xchg
and
scas
xor
pop
jge
lahf
das
mov
inc
mov
adc
sar
inc
lret
lcall
cmp
lret
dec
int
add
xor
data16
xor
jle
jp
or
mov
mov
shlb
add
sahf
push
cwtl
sar
cmp
adc
cmc
movsb
xchg
and
jb
lret
cld
mov
jno
ljmp
cmp
mov
jmp
les
ficoms
mov
adc
arpl
es
insb
mov
leave
cmp
and
rorb
jmp
lea
mov
pop
das
sub
mov
out
mov
or
sbb
sub
pop
pop
xlat
push
loope
iret
fisubs
adc
adc
mov
pop
cld
sub
sbb
dec
xor
cmp
stc
les
push
jae
pop
lods
rcll
out
fcomps
dec
movsb
mov
mov
and
xchg
xchg
dec
push
jg
stos
pop
mov
xchg
pop
cwtl
fs
loope
or
gs
lahf
mov
cmp
adc
adc
sbb
or
daa
dec
dec
ds
inc
pop
ret
inc
push
cmpsb
pop
cmp
dec
sahf
sub
cmp
cwtl
das
push
stos
fildll
jmp
and
insl
lods
xchg
dec
fisttpl
ljmp
cmp
insl
in
imul
out
stos
arpl
out
add
jge
lods
hlt
inc
or
stos
lret
sbbl
dec
lds
fwait
sbbb
stc
sbb
ja
sub
shll
jnp
rol
stos
push
sbb
out
ror
sbb
repnz
jmp
mov
fmulp
stos
pushf
cld
mov
push
iret
out
jnp
jno
dec
gs
test
inc
ret
nop
pop
scas
dec
and
cwtl
adcl
or
xchg
test
popa
xchg
pop
add
orb
sub
jle
pop
and
pop
push
out
nop
inc
pop
insl
jmp
sbb
pop
dec
dec
add
lcall
jne
push
sbb
and
mov
pop
shlb
xor
and
add
dec
aaa
fstl
or
inc
movsl
fisttps
fcomps
clc
insb
xchg
push
and
popf
outsb
ficoml
addr16
lret
xchg
gs
inc
out
and
add
fwait
xchg
push
movsl
nop
cld
mov
aad
lahf
inc
cmp
or
adcl
in
sub
pop
mov
mov
test
and
sbb
fidivs
cmp
jp
movsb
mov
notl
test
push
stc
push
or
cmp
mov
fidivrs
imul
call
dec
out
testb
inc
sub
xchg
fbstp
movsl
jge
lahf
sbb
pop
shr
or
mov
mov
scas
pop
xor
mov
lahf
inc
int3
sbb
enter
jae
ficoml
add
fs
cmpsb
xchg
cli
arpl
sti
jns
xchg
xchg
push
cmpsb
mov
std
or
movsl
cmp
aas
xor
loope
xor
popf
adc
mov
test
xor
fbstp
fcmove
dec
sbb
fidivrl
dec
sbb
and
mov
jl
loop
jae
mov
ljmp
es
adc
or
pusha
xor
or
repz
pop
fstps
jae
push
sbb
and
dec
imulb
incb
jmp
push
cmp
stos
adcl
xor
out
cmpsl
inc
jecxz
push
sbb
inc
push
sbb
push
fwait
popf
test
stos
add
xchg
movb
adc
sbb
jns
xchg
push
icebp
lret
push
jne
nop
cmpsb
jp
add
cmp
shlb
outsb
add
xor
push
in
jne
xor
mov
or
rcrl
mov
jl
pop
lods
loop
iret
repz
mov
and
mov
js
or
jecxz
and
mov
enter
test
cmp
cmp
rolb
xor
js
in
jg
cmpl
and
add
pop
aaa
sbb
mov
lahf
cmp
jo
in
and
push
in
jo,pt
xor
sbb
inc
aas
pop
mov
lret
shrb
jb
int3
pop
jg
aas
xor
and
mov
pushl
imul
int
push
sub
and
hlt
cmpsl
xchg
cmp
cmp
mov
push
lock
fucomp
and
test
mov
and
rol
into
ror
inc
add
cwtl
jne
icebp
call
mov
push
adc
jmp
dec
sahf
leave
adc
pop
xor
inc
or
outsb
jno
adc
push
mov
shlb
mov
mov
cltd
scas
xor
mov
mov
xor
popf
sti
sub
int3
icebp
lods
cmp
arpl
sub
inc
enter
movhlps
pop
popf
repz
adc
sub
aam
cmp
aaa
mov
push
or
xchg
mov
and
fucomp
imul
into
jmp
jmp
adcl
cwtl
in
aam
adc
mov
mov
jae
xor
ja
mov
push
xchg
pop
lret
mov
outsl
or
mov
mov
nop
fdiv
mov
nopl
mov
aaa
xchg
adc
fsubrs
dec
test
mov
pop
repnz
pop
jno
mov
or
iret
int
sub
lods
jmp
mov
into
movl
pop
outsl
push
icebp
scas
bnd
into
pop
dec
pop
cwtl
aad
push
and
sbb
or
ret
je
ret
and
hlt
sub
insl
outsl
out
sub
pop
mov
xor
mov
inc
out
popa
sub
sub
sbbb
test
dec
mov
fwait
jg
fstl
or
jp
push
pop
cli
lret
xchg
dec
xchg
cwtl
sub
xor
sub
adc
sbb
int
or
mov
insb
lcall
pop
dec
jge
inc
ds
jbe
pop
mov
pusha
ret
aam
lret
les
lahf
ja
ss
mov
aas
dec
push
xchg
sub
mov
bound
bound
cmp
sarl
sub
xchg
fdivs
addr16
xchg
scas
std
ljmp
pop
je,pn
in
fbstp
pop
mov
or
inc
outsl
xchg
in
loopnew
jnp
pop
rorb
movsb
iret
fstps
or
std
cmpsl
inc
leave
push
pop
mov
jle
cmp
fiadds
xorb
lods
adc
jb
pushf
mov
push
jae
fs
mov
cmp
dec
sbb
inc
stos
ret
sub
and
popa
jp
jmp
adc
and
out
push
dec
data16
jnp
mov
mov
inc
out
mov
push
in
aam
adc
enter
test
inc
out
pop
dec
fdivr
mov
push
rcl
test
cmp
push
jle
or
push
icebp
sti
add
mov
movsl
scas
pop
hlt
mov
sbb
mov
and
and
dec
and
pminub
mov
das
cld
jmp
xor
int3
add
pop
dec
mov
imul
aaa
sbb
scas
in
xor
or
std
cs
loope
loop
or
pusha
and
out
sahf
cmc
or
lock
adcl
mov
jg
jns
mov
into
scas
popf
inc
jp
clc
lods
xchg
sub
push
or
loop
in
enter
into
cmc
dec
and
cltd
mov
pushf
dec
mov
stos
divb
imul
and
mov
sub
mov
js
add
mov
fs
inc
aas
cmpsb
pop
std
hlt
adc
dec
and
stc
mov
and
ss
popf
push
cmp
push
dec
xor
pop
mov
xchg
dec
xor
pop
stc
xchg
repz
jecxz
movsl
call
decl
xor
adc
int3
jp
test
fs
into
cmp
xor
imul
addl
pop
fisttpll
adc
insl
loop
push
sbb
test
push
int
test
movsl
imul
arpl
sti
xor
mov
jecxz
pop
mov
add
add
mov
cmp
dec
mov
icebp
ret
mov
aad
and
jbe
adc
xorb
sarb
mov
aad
outsl
int3
mov
cli
cmp
or
lahf
aad
mov
imul
dec
adc
loope
sbb
pop
dec
out
jl
mov
jae
and
jno
cmpsb
add
fistl
in
xor
sbb
xor
pop
nop
out
loopne
inc
jecxz
in
push
xor
aam
jae
mov
dec
aad
fs
push
adc
sbb
push
fs
mov
or
js
push
dec
mov
mov
loop,pt
adc
inc
push
sub
rcll
shlb
loopne
push
jmp
dec
mov
cmpsl
and
or
jnp
nop
mov
push
int3
and
xor
mov
pop
lea
imul
icebp
push
in
push
js
mov
push
jbe
push
xor
insl
pop
cmp
mov
lea
jecxz
fdivrp
test
leave
xchg
xchg
or
imul
and
push
pop
stos
adc
cmpsl
outsb
test
pusha
std
or
sbb
je
sub
jmp
int
or
imul
mov
mov
fwait
jnp
push
fidivs
pop
aad
and
xor
or
lock
push
scas
scas
test
xor
test
cs
sbb
pusha
gs
test
hlt
mov
das
daa
sub
or
daa
lahf
sbb
push
dec
sbb
stos
sbb
testl
cli
jmp
clc
push
in
ds
call
jmp
inc
mov
mov
fdiv
ds
jae
int3
int3
je
call
into
dec
jno
inc
in
push
inc
jno
enter
hlt
ds
cmp
add
gs
adc
ss
loopne
inc
stc
pop
adc
int3
mul
ljmp
cmp
dec
in
js
mov
int
mov
mov
sbb
pop
and
aas
inc
jne
sbb
inc
pop
inc
rorl
add
scas
mov
imul
loop
mov
mov
sub
loop
adc
xchg
add
sbb
add
adc
fidivrs
popa
jne
es
adc
test
ret
inc
es
mov
fwait
test
mov
sbb
inc
cld
adc
cmp
orl
push
dec
notl
enter
jl
xor
rcrl
std
jb
pop
das
adc
in
clc
sbb
mov
fildl
cmpsl
xor
lea
xor
pop
and
dec
sti
inc
shl
and
xchg
cli
nop
les
mov
popf
push
push
ret
aas
je
out
xor
mov
add
xchg
lret
push
or
stos
sub
mov
iret
sub
leave
leave
cltd
or
dec
jg
cmp
mov
pop
xchg
in
inc
pop
sub
fs
inc
cmp
sub
dec
xor
xchg
and
xlat
jg
jl
notl
dec
clc
fsubr
sub
cmp
aaa
fdiv
out
push
dec
in
scas
and
or
pop
and
shlb
cmc
test
pop
cmp
pop
insl
pop
sti
incb
pop
aad
push
in
or
ret
add
std
lds
mov
enter
mov
lret
shlb
negb
test
arpl
mov
aad
popa
sti
sar
fcompl
mov
cmp
jle
push
add
push
sub
ljmp
add
and
xchg
push
mov
mov
lea
pop
push
sub
clc
pop
mov
cmp
out
push
jge
xchg
hlt
inc
pop
add
insl
les
fs
mov
xchg
push
mov
stc
gs
cmp
stc
mov
pop
inc
mov
xor
int
sti
or
mov
and
bound
into
jbe
xor
lahf
sub
dec
cwtl
push
and
jns
cmpsb
or
hlt
icebp
push
mov
outsb
out
in
leave
mov
je
jno
mov
sub
mov
mov
mov
sbb
mov
sub
pop
mov
aam
xor
les
call
push
jg
cmp
sub
xchg
lods
shlb
ficoms
repnz
and
ss
sub
and
sub
sbb
sub
cmc
in
push
and
filds
cmp
push
incl
js
out
push
loop
subb
subb
xchg
jae
jle
adc
shr
pop
fsubrs
repz
xor
aam
and
mov
mov
pop
std
das
mov
ficompl
mov
stc
arpl
imul
lods
lods
mov
push
ja
js
insl
pop
xor
cld
ja
inc
and
daa
dec
mov
or
cmc
mov
movsl
hlt
orl
push
jmp
cmpb
adc
rcr
mov
mov
or
test
push
and
lret
les
imul
jmp
dec
shrb
pop
adc
push
push
push
cwtl
or
pop
mov
add
ret
in
cmpsl
lods
insb
and
xor
cmp
jbe
stos
into
jle
push
sbb
pop
push
shrb
mov
sub
push
jg
push
into
stos
repz
inc
outsb
adc
push
test
dec
jmp
mov
icebp
test
xchg
arpl
xchg
incb
daa
mov
insl
ja
xor
adc
cmpsl
inc
aaa
mov
sub
lods
pop
cmovg
rcrb
ret
jmp
jl
xor
lods
out
cmc
loope
cmp
mov
sbb
pop
int3
mov
mov
iret
xor
pop
jnp
or
xchg
pusha
stos
mov
and
xchg
cmp
ret
mov
mov
mov
mov
mov
dec
scas
xlat
cwtl
icebp
sub
push
push
sbb
pop
mov
aaa
and
cld
lods
adc
jnp
arpl
out
data16
pushf
pusha
mov
jge
xchg
adc
out
cmp
out
stos
ficoml
loop
sahf
inc
add
shr
aaa
jg,pt
push
mov
addr16
dec
dec
inc
adc
addr16
loop
gs
hlt
enter
mov
repz
push
add
movsb
nop
xchg
pop
cmpsl
sbb
sahf
or
dec
int3
cmc
adc
bound
fldl
xchg
mov
inc
cmpsb
dec
inc
and
xchg
xor
jmp
out
jne
lea
inc
popa
push
push
out
clc
arpl
stc
xor
sbb
scas
add
sti
pop
ss
pavgb
and
mov
lret
inc
add
in
adc
cmpsl
and
scas
dec
jnp
lock
cltd
test
sbb
fstps
mov
jmp
out
inc
add
mov
lock
add
mov
testb
rcl
jg
inc
lret
mov
or
add
lret
or
pop
cli
repnz
enter
out
add
fmuls
test
add
out
cli
or
push
push
jnp
or
jle
subb
int3
fildl
mov
mov
mov
lods
mov
aam
or
cwtl
push
subl
xchg
rorl
mov
add
xor
mov
icebp
out
ss
lret
rolb
xchg
sub
and
adc
nop
aaa
sbb
jne
add
fistl
or
push
push
and
fimull
lret
sbb
xchg
xchg
mov
sub
push
sbb
negl
mov
jmp
mov
cltd
dec
adc
jbe
pop
add
fbstp
mov
inc
call
outsb
lcall
mov
add
imul
add
mov
sbb
sbb
icebp
mov
clc
cmp
jecxz
scas
popf
push
bound
addl
pop
and
aad
lcall
out
mov
dec
insl
aam
insb
pop
lahf
cmp
cltd
dec
dec
pop
push
into
push
adc
lds
push
and
test
nop
pop
cmc
test
loop
inc
add
push
stos
idivl
imul
adc
mov
test
add
jns
insb
jns
cmp
adc
xor
out
fadd
mov
dec
xor
mov
outsl
data16
mov
xor
mov
jns
push
push
push
arpl
inc
cld
insl
rcrb
and
ljmp
mov
xor
inc
dec
inc
push
outsl
or
das
cmp
and
in
mov
add
add
cwtl
fiadds
inc
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
sldt
add
add
add
mov
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
add
add
add
add
add
add
add
add
add
add
add
sbb
aam
cmp
push
in
push
mov
xchg
jbe
inc
leave
mov
scas
imul
sub
sahf
xor
lds
leave
push
xor
and
dec
xor
mov
push
lea
insb
mov
dec
xor
push
test
push
imul
dec
lret
push
or
push
cmp
cmp
lahf
lods
pop
out
hlt
aaa
dec
das
scas
fdivs
xor
pop
mov
repnz
mov
aas
jbe
clc
mov
or
sbb
pop
jae
mov
inc
rorl
pop
lea
pop
xchg
loope
sub
add
sbb
les
cmc
enter
mov
dec
inc
mov
nop
xor
dec
cli
pop
mov
verr
icebp
jle
dec
adc
cmp
out
xlat
aad
cli
fbld
in
pop
jl
xchg
cmp
fstps
test
jb
mov
mov
stos
push
inc
fstl
xchg
je
dec
je
in
pop
mov
ja
ret
xor
push
scas
repz
jb
loopne
dec
les
shlb
jg
sub
mov
sti
fisubrl
jge
cli
xor
or
packuswb
or
cmp
jbe
add
clc
cmp
ror
inc
repz
mov
in
jp
fisubrl
sbb
fisubrl
sub
or
mov
test
or
dec
and
dec
sub
adc
add
mov
out
in
scas
jp
icebp
mov
lcall
push
shlb
cmc
cmp
mov
into
arpl
mov
sbb
jge
dec
ret
std
insl
jns
pop
std
sub
fisttpll
dec
dec
lock
loope
lds
jo
loop
and
mov
mov
cmp
pop
test
and
push
cmpb
or
ljmp
js
outsb
dec
push
les
mov
inc
xor
cmp
mov
stc
pop
push
pop
lea
xchg
lret
and
or
mov
ljmp
jne
cmp
xchg
cmpsl
add
shl
sarl
sbb
adc
pop
adc
fldenv
xor
movsb
dec
fimuls
cld
ficompl
cltd
in
shrl
inc
dec
aas
popf
and
cwtl
mov
jb
or
jl
jp
sub
cs
subb
into
push
lsl
sbb
int
jmp
into
subl
cmp
adc
cmpsb
sbb
xchg
cmp
jmp
loopne
jg
fnsave
addb
or
enter
std
pop
dec
inc
in
inc
mov
jl
and
mov
movsl
movsb
inc
shlb
push
and
push
cmpsb
test
mov
mov
inc
ret
aad
inc
decb
jns
cmp
push
mov
es
xchg
push
shlb
sbb
sub
xor
std
arpl
inc
add
jno
ret
rorl
clc
sbb
addr16
lock
xchg
out
sub
mov
inc
test
push
push
mov
jne
adc
leave
mov
nop
jecxz
pusha
xor
int3
mov
pop
add
add
cld
inc
jb
movsb
fsubrs
cmpsb
cli
sbb
aam
int3
stc
dec
jnp
mov
sub
das
stc
lods
insb
mov
mov
dec
outsl
inc
adc
lds
pop
cmp
push
or
push
lods
jle
out
xor
xchg
movb
pop
push
lea
dec
jle
cmp
mov
push
bound
sub
imul
sbb
rorb
movl
test
lds
or
lds
dec
es
daa
jnp
pop
dec
rol
dec
push
xchg
imul
add
and
cmp
mov
in
mov
xorl
sbb
test
daa
les
xor
mov
xchg
pop
sarl
adc
sbbl
inc
add
mov
mov
divl
pop
scas
shr
loop
bnd
cmp
stos
cmp
scas
xor
mov
movsl
adc
shll
js
lret
orl
push
test
or
into
mov
loop
pop
push
sarl
aas
mov
test
adc
pop
jmp
mov
cmp
mov
xchg
jo
xor
pop
in
and
in
dec
insl
test
aaa
sahf
test
lret
jge
sub
je
test
sbb
test
pop
push
push
adc
sub
int
cli
or
push
and
aam
jbe
mov
imul
cmpsl
int3
adc
push
in
movsb
outsb
dec
mov
mov
pop
movsb
test
jl
mov
cmp
sbb
mov
add
ret
repz
js
push
jge
ljmp
or
nop
inc
xorl
xchg
fcoms
inc
pop
ja
dec
inc
ja
fwait
dec
cmp
lds
pop
xchg
subl
pop
adc
popf
cltd
mov
fldl
mov
rolb
dec
das
jg
pop
cmp
lea
out
das
into
aaa
imul
dec
cld
cld
jbe
dec
sub
cmpsl
mull
add
lods
cmpsb
push
or
insb
jns
add
les
mull
add
xchg
bound
stos
addr16
mov
xor
adc
pop
jmp
and
mov
arpl
insb
icebp
dec
dec
jns
arpl
out
xchg
cmp
mov
sbb
out
fnsave
into
lcall
fildll
stos
mov
mov
cmp
in
adc
loopne
js
iret
push
or
lods
mov
add
mov
in
pop
adc
jge
pop
gs
movsl
rcrl
mov
or
xchg
xchg
sbb
jno
ss
jns
lds
adcl
add
pop
in
sbb
scas
and
mov
test
add
add
rolb
cli
jnp
cmp
pop
pop
addr16
add
imul
and
sbb
dec
ss
cmp
out
mov
nop
fidivs
lock
jg
into
es
rcrl
mov
adc
and
inc
jns
mov
repnz
pop
jmp
push
imul
add
cwtl
sbb
dec
shll
and
and
out
movsb
inc
pop
pushf
push
fidivl
push
adc
mov
xchg
or
lret
mov
dec
mov
leave
lcall
push
inc
cltd
pop
adc
and
rolb
int3
fldl
push
jo
sub
jl
insl
fdiv
jecxz
in
bound
xchg
xchg
sbb
cld
push
arpl
push
and
mov
push
sahf
loope
mov
adc
insl
sbb
jns
inc
shll
mov
mov
cmc
ja
or
cmpsl
dec
fnstcw
icebp
fwait
jmp
mov
test
out
fiadds
cltd
mov
mov
jbe
mov
cltd
jmp
and
pop
into
lods
jecxz
int
dec
dec
sub
iret
jecxz
das
flds
sahf
es
pop
fcompl
push
leave
cmpsb
stc
stc
mov
pop
dec
nop
sbb
sti
sbb
and
mov
xlat
sbb
mov
mov
lds
movsb
daa
popa
xchg
add
jb
in
sbb
decl
mov
add
shll
movsb
xchg
push
testl
daa
mov
mov
aad
and
mov
loope
dec
js
fs
ret
push
fists
dec
fimuls
jbe
cmp
lcall
test
fsub
pop
add
not
adc
pop
gs
faddl
int
xchg
mov
lret
ja
mov
push
sbb
int3
mov
out
xlat
xor
in
xchg
cmpsl
fcmovne
jge
mov
ds
mov
cli
lods
outsb
flds
vpaddb
fcmove
outsb
pushf
push
notb
out
iret
fld
and
jae
out
add
loop
or
cmpsl
jo
push
jo
cmpsl
inc
rolb
out
inc
add
jmp
cmpsb
xor
loopne
xchg
mov
xor
jb
dec
ljmp
and
dec
ret
mov
daa
jnp
cmp
rcll
vpextrw
lahf
jmp
xorl
mov
sbb
or
stc
sub
xor
fiaddl
rcr
sbb
adc
cmpsl
es
mov
dec
lea
fwait
adc
pop
iret
pop
mov
mov
lds
imul
adc
popa
popf
arpl
add
sub
push
pop
inc
mov
cwtl
mov
in
inc
adc
shl
js
jl
and
sbb
inc
xchg
xor
fcomps
repz
comiss
lahf
cmp
jmp
sbb
int
xor
xor
addr16
xlat
sub
les
mov
shlb
into
jge
je
push
shl
mov
lahf
push
sub
inc
xor
mov
push
push
jne
out
ficoms
xor
jne
shl
je
inc
in
mov
pushf
pop
or
fidivrl
cmp
ret
test
sub
sbb
out
adc
lds
dec
ret
jle
xchg
jno
movsb
sbb
mov
xchg
cli
rcl
xchg
mov
inc
mov
mov
cmp
cld
pop
push
cmp
mov
orb
addr16
inc
pop
cmp
call
sbb
ljmp
add
add
rcr
std
push
sbb
mov
add
popf
pop
adc
mov
push
push
or
rcrb
lret
sub
sbb
and
xchg
lods
mov
cli
push
xchg
inc
add
cmp
fcomps
sbb
dec
lret
pop
adc
mov
imul
stos
dec
jp
xchg
test
xchg
lods
inc
jmp
gs
mov
js
fwait
ret
xchg
stc
cmpsb
dec
lea
fldt
out
jmp
sbb
pop
or
bound
jno
and
adc
mov
jns
inc
xchg
xor
negb
xchg
mov
rclb
cwtl
sahf
or
dec
xchg
pop
pop
jnp
or
ja
push
push
mov
insl
cltd
jg
mov
fidivrl
out
dec
movsl
push
cld
push
aam
sbb
xor
mov
push
clc
inc
xchg
loop
sar
enter
sti
xor
not
mov
sbbb
arpl
pushf
aad
or
push
punpcklbw
cwtl
push
dec
dec
ss
cmp
popf
pop
pop
mov
jae
mov
jae
dec
cli
leave
or
movsb
je
outsb
movsl
shll
mov
and
test
push
inc
push
push
cmpsb
and
loop
enter
ret
dec
xor
xor
pop
xor
mov
mov
cmc
hlt
jmp
shll
arpl
cmp
lcall
cltd
test
and
sub
ja
int
xchg
mov
sahf
cmp
in
jb
xorb
ss
push
push
rclb
add
xchg
scas
xor
daa
inc
cltd
popf
cmp
icebp
and
jmp
dec
xchg
das
push
xchg
lcall
ljmp
dec
lret
mov
mov
scas
or
popa
ja
es
sbb
hlt
jge
add
stc
cmp
fisttpll
mov
lahf
xchg
xchg
xchg
pop
add
outsb
das
int
jle
push
jns
lea
gs
mov
jle
sub
lret
shlb
pop
pusha
aad
ljmp
scas
outsl
mov
adc
loopne
fildl
bound
mov
mov
loope
data16
and
push
adc
and
andl
inc
add
into
mov
adc
aaa
inc
test
adc
xchg
mov
xchg
xor
sbb
adc
jl
je
lds
stos
dec
dec
cmpsb
rcrb
dec
lock
movsl
ljmp
std
rcl
mov
popf
and
das
lea
pop
inc
adc
mov
out
adc
adc
and
je
add
popf
testb
lods
sbb
mov
cltd
dec
sahf
pop
mov
push
sti
jno
and
frstor
mov
xor
xchg
xchg
pusha
xor
mov
jp
sbb
out
aam
lds
in
sbb
sti
xor
cltd
sub
sbb
ljmp
fdivrl
rol
mov
je
into
inc
ss
outsl
or
loop
mov
loopne
sbb
daa
addr16
push
int
lahf
mov
push
pushf
jns
ss
jnp
push
mov
shlb
mov
jne
mov
shr
lret
in
jmp
out
pop
aaa
mov
inc
rorb
cmp
lock
lds
imul
add
je
pop
pop
mov
sub
lea
sub
xchg
stos
mov
lds
xchg
jl
addr16
dec
push
or
sub
lea
and
mov
or
dec
push
or
rclb
xor
pop
dec
push
fcmove
and
pop
xchg
adc
push
or
and
push
scas
loopne
dec
scas
mov
int3
stos
pop
adc
mov
loope
cli
jb
fs
mov
push
pop
leave
repnz
fisubrl
push
cs
or
rcrl
dec
sbb
push
testb
stc
jbe
jmp
mov
sbb
inc
mov
dec
imul
aaa
sub
sbb
scas
clc
stos
sbb
inc
cmp
call
rcr
sbb
jle
insl
cmpl
or
outsb
dec
sub
inc
loopne
sarb
xchg
mov
imul
fstl
rcrl
push
das
insl
cmpsb
cmp
aaa
popa
pusha
push
roll
mov
xor
or
jne
iret
inc
sbb
and
loope
dec
lahf
pop
pop
scas
xor
in
mov
xchg
jecxz
outsl
aas
sti
mov
jae
nopl
cli
sbb
jge
rcrb
sub
cmp
imul
jl
stos
xchg
loop
lret
push
in
cmp
mov
mov
lds
movsl
sbb
leave
inc
cmpsl
pop
adc
mov
sbb
push
ljmp
sub
cs
mov
loop
out
sub
jb
jbe
in
orb
stos
rcll
and
jmp
jge
xor
popa
lcall
sbb
jmp
sbb
jmp
sub
nop
inc
push
cmp
nop
sbb
pop
push
cli
shll
sbb
cmc
jg
enter
je
or
sti
ljmp
jmp
xor
bound
test
aam
stos
push
imul
repz
cmc
rolb
xchg
and
mov
pop
adcb
jno
fwait
push
push
loopne
ds
mov
jbe
pop
ss
fdivr
jne
movsl
sbb
iret
xchg
mov
nop
rorb
sub
dec
scas
mov
jge
sbb
arpl
ret
inc
in
jmp
cmp
jb
xlat
fistl
or
lds
sub
adc
jne
arpl
repz
subb
or
fistl
mov
pop
popa
add
popf
call
and
pop
pop
xor
cmp
fcmovbe
or
pushw
fstpl
mov
jo
pop
jg
adc
dec
jb
jno
xchg
or
add
movsb
clc
and
clc
sbb
xchg
test
stc
addr16
lods
cmc
and
popa
int
mov
jle
fcomps
subl
pop
push
fwait
mov
stos
repnz
or
mov
mov
loop
inc
add
sar
mov
movb
outsb
hlt
or
call
data16
push
out
mov
sub
mov
sub
or
aas
das
push
mov
pop
cmpsl
les
repz
pop
and
in
push
js
jae
and
add
jl
inc
sub
sbb
das
jmp
or
add
cmpsb
jnp
out
jno
push
xchg
mov
mov
fnstsw
incl
movsl
adc
fldenv
loope
icebp
mov
cltd
push
into
packuswb
pushf
mov
das
push
popf
mov
addr16
xor
adc
js
aam
xchg
fs
inc
in
add
mov
cmc
push
or
stc
lahf
mov
rcll
jg
outsb
arpl
test
xchg
repz
out
fmulp
cmc
sub
in
adc
ja
xchg
int3
test
mov
inc
test
scas
or
sbb
test
ds
stc
xor
pop
lods
repnz
add
loope
and
jno
jp
add
aam
jns
cmpsl
mov
inc
fucompp
testb
mov
dec
mov
call
adc
or
or
ljmp
xor
ljmp
inc
scas
imul
mov
fxch
jae
cmc
mov
jns
in
jg
in
mov
aas
xor
xor
push
jns
pushf
rorb
jae
popf
pop
mov
fwait
leave
decl
sti
xlat
int
cmp
faddl
pop
addr16
and
aad
in
pop
in
sti
jno
xchg
dec
mov
mov
jb
popa
cld
mov
bound
xor
inc
ret
inc
push
xchg
pushf
push
add
mov
lcall
mov
loope
cmpsl
in
mov
rorl
icebp
jg
movsl
mov
add
insb
add
pushf
mov
mov
cmp
enter
mov
add
and
scas
dec
dec
jbe
mov
inc
jns
or
pop
or
push
xchg
jp
add
add
xor
filds
insl
lret
add
loopne
jecxz
mov
into
out
mov
push
pop
arpl
xor
sbb
andb
mov
sbb
fistl
pop
xchg
out
sub
xchg
js
dec
sbb
and
insl
add
sti
inc
js
jbe
mov
lds
out
aas
pop
imul
mov
inc
pushf
les
sub
adc
arpl
cmpsl
test
cmp
lods
aam
jae
jecxz
sbb
inc
repnz
pop
je
xor
fcmovnbe
cmp
dec
push
pop
fcoml
inc
fs
sub
aaa
aad
add
xor
or
mov
pushf
pavgb
es
out
daa
dec
sub
add
and
or
or
ltr
je
xor
int3
dec
jg
test
jns
sbb
bound
iret
fiadds
les
rorl
mov
xor
push
gs
lcall
pop
cmpsb
add
enter
dec
xorl
mov
jo
xlat
or
mov
inc
lea
xor
dec
push
out
cmp
pop
pusha
push
nop
push
mov
cmc
das
test
cltd
inc
add
les
out
scas
cmp
and
xchg
xchg
bound
test
xchg
xor
jg
sbb
mov
dec
jmp
pop
sub
or
rcrl
inc
mov
and
movsl
inc
insb
outsb
push
in
adc
xchg
popl
mov
xchg
adc
ret
aas
dec
pop
in
lret
xor
push
es
cmp
sar
test
lods
pushf
out
mov
imul
sub
adc
jo
cmp
nop
dec
mov
fs
hlt
push
fucomp
mov
adc
out
pop
xlat
jno
adc
data16
jno
add
aad
push
inc
or
add
cmp
xchg
or
sbb
lods
pop
lret
stos
xor
or
jge
inc
sub
je
popa
cmp
lods
clc
jmp
test
lahf
mov
sub
push
jle
andb
cmpsl
insl
mov
fdivrl
test
pop
shl
scas
stos
xchg
cmpsl
mov
mov
outsb
out
fwait
push
insw
sbb
ror
mov
loop
enter
nop
sub
imul
sahf
inc
shlb
int3
cwtl
cwtl
jno
popf
adc
mov
into
aad
in
inc
insl
imul
mov
mov
xchg
or
aad
adc
std
adcb
mov
mov
or
push
add
pop
imul
add
mulb
sub
pusha
stos
frstor
xchg
mov
mov
dec
xlat
gs
cmp
lds
movq
xor
xchg
gs
gs
cmp
xchg
push
mov
es
or
cld
sarl
dec
pop
sbb
in
and
rcrb
and
in
fcompl
rol
mov
mov
pop
pop
jge
dec
dec
push
jle
ljmp
in
sbb
dec
jmp
ljmp
xchg
xor
cmp
or
mov
mov
fs
test
sbb
stos
ret
movnti
cld
mov
sarl
push
lret
fcmovnb
lods
cmp
mov
cmp
mov
push
iret
cli
add
jns
add
mov
push
inc
inc
push
out
jge
mov
fadds
mov
gs
mov
cmpb
icebp
inc
inc
push
decl
test
stos
and
rclb
sahf
inc
mov
lods
dec
push
pop
and
xchg
sbb
iret
mov
sub
sahf
or
or
xchg
cmp
jmp
add
lret
lds
jo
and
les
push
and
fnsave
shlb
pop
pop
aad
subb
adc
push
adc
jmp
mov
sbb
xchg
jne
pusha
lock
jge
lret
add
pop
add
fisttpl
jbe
insb
pop
mov
mov
outsb
jns
loop
cltd
out
andb
stos
adc
fnstsw
adc
cmp
jge
jnp
mov
adc
dec
xor
sbb
aam
stos
and
js
mov
ret
call
dec
and
adc
lock
sub
add
xor
jnp
movsb
sar
shl
sbb
repnz
sub
popa
scas
mov
cld
sub
mov
xchg
jecxz
mov
pop
add
sub
push
push
cwtl
aam
xor
dec
cmc
pusha
sub
inc
add
js
pop
gs
out
push
mov
pusha
movsb
jne
rorl
cs
cmpsl
int
jbe
mov
inc
pop
dec
pop
cwtl
pop
and
jge
and
fisubrl
xor
lret
mov
in
cmp
mov
and
jns
cli
push
xchg
push
sub
adc
pusha
mov
jae
cmpsb
sub
mov
in
movsb
and
ret
jg
lock
sub
ds
jecxz
pusha
bnd
fwait
push
roll
lds
and
cwtl
inc
cmp
adc
fbstp
ret
xchg
push
or
mov
and
addr16
jp
add
hlt
sub
inc
neg
pushf
inc
sub
rcll
dec
jge
dec
lods
sub
sub
dec
add
push
mov
sti
subb
stos
cmp
cmp
xchg
cmpsb
cmp
cmp
sub
mov
clc
ds
ret
cmp
lcall
bound
pushf
scas
xor
cmp
or
sub
pop
stc
sbb
xchg
mov
dec
sbb
and
and
js
cltd
mov
mov
call
addr16
icebp
inc
dec
jle
ret
ficompl
les
lcall
sti
cmp
xor
xchg
repnz
cmp
sub
sub
dec
dec
jno
mov
insl
addr16
lods
pop
das
jle
ljmp
xchg
test
mov
out
push
jp
clc
out
pop
jmp
jae
or
xor
adc
faddp
mov
das
jb
mov
sbb
fsubrl
daa
cltd
mov
jne
shll
and
jbe
out
nop
enter
inc
mov
in
sti
mov
stc
mov
ret
jno
cs
mov
in
mov
repz
xor
pushf
jmp
ja
icebp
call
cmc
or
cmpsb
mov
jl
mov
cmp
enter
mov
aaa
push
pop
lea
fnstsw
xor
mov
mov
sarl
inc
cmp
int3
xchg
pop
ja
dec
xchg
xor
inc
lahf
xchg
je
iret
add
sub
or
fidivrl
add
pop
fsubp
cmp
scas
pusha
repnz
adc
mov
roll
minps
dec
sbb
clc
push
scas
pop
imulb
xchg
xor
cmp
mov
fdivrp
sub
sub
loope
es
xchg
addr16
pushw
jg
std
or
cwtl
lcall
out
cli
jg
push
push
jp
cmp
push
test
mov
inc
call
push
loop
push
push
adc
fsubr
inc
xchg
pop
sbbb
adc
push
sti
and
mov
into
pop
jl
daa
test
mov
mov
fnsave
pushf
std
and
sbb
fwait
nop
lds
inc
pop
pop
test
das
cmpsl
adc
shlb
aas
fsubl
inc
xor
jl
je
lods
jp
xor
fwait
out
dec
scas
sti
push
jp
pop
loop
cld
scas
adc
in
and
dec
lods
sub
leave
sarb
rol
insb
inc
mov
fstl
xchg
scas
clc
or
cmp
mov
jl
add
mov
scas
in
mov
popf
mov
scas
lods
fisttpll
jnp
mov
add
xor
inc
push
jmp
pop
pop
sti
jo
fcompl
add
dec
and
cmp
push
adc
mov
push
insb
jnp
loopne
lea
jb
sbb
test
popf
mov
mov
xor
pop
mov
jl
stc
pop
mov
push
push
scas
lods
and
mov
ds
jbe
dec
mov
dec
jno
bound
push
fistpl
movsl
mov
xchg
dec
dec
mov
sub
or
xchg
jnp
xchg
or
sti
add
ret
rcr
inc
inc
iret
roll
mov
in
push
subb
adc
dec
xor
mov
into
mov
push
inc
push
inc
sbb
mov
mov
sbb
dec
stc
aam
repnz
test
rol
das
repnz
fidivl
test
out
mov
sbb
sub
popf
ja
mov
negb
ret
jne
mov
mov
mov
jp
push
fucomip
pop
pop
push
sbb
leave
jle
fcoml
es
in
inc
dec
ja
pop
popf
xchg
dec
jle
xchg
cmpsb
xchg
loopne
xchg
fsubl
int3
inc
aad
inc
jno
lret
inc
andl
jecxz
outsl
jb
int3
stos
mov
leave
addl
rcr
mov
in
in
sbb
add
xchg
add
inc
nop
mov
shll
mov
inc
push
lcall
mov
scas
mov
dec
push
aad
mov
inc
gs
outsl
fstl
sub
sbb
mov
push
aaa
sti
pop
jmp
out
fcomip
cmp
test
jg
fcmove
sbb
jbe
mov
mov
pop
mov
or
fcomps
push
sub
mov
pop
std
or
movsb
mov
mov
out
pushf
lods
add
cwtl
mov
hlt
fs
pop
call
adc
mov
fwait
dec
push
pop
shlb
aas
or
fistl
inc
adc
and
pop
and
sahf
cmpsl
push
inc
push
lock
ret
adc
inc
sub
stc
push
mov
out
daa
clc
push
pusha
cmp
cld
sbb
cwtl
jge
jle
insb
push
and
loope
ja
xor
cmp
or
adc
xchg
inc
inc
mov
sbb
mov
xchg
jmp
ret
sbb
xor
jge
lea
xor
jnp
scas
dec
mov
inc
addr16
inc
fiadds
fwait
sbb
cli
push
lcall
cmpsb
push
movsb
inc
repz
shrl
inc
pop
les
jecxz
orb
inc
repz
jecxz
push
stc
inc
mov
outsb
pop
fsubl
and
stos
pop
inc
fisttps
add
and
sbb
dec
int3
adc
push
in
out
xchg
es
lret
adc
mov
adc
lods
adc
cmp
lret
lahf
jb
aaa
inc
push
mov
pop
jae
jo
push
xchg
sub
adc
icebp
arpl
adc
ret
mov
pop
sub
and
ret
mov
add
add
and
hlt
sub
scas
data16
lods
cli
jnp
scas
cld
xchg
dec
insl
pop
pop
or
insl
ljmp
out
sub
push
mov
outsl
fmuls
in
mov
in
ja
xchg
mov
push
jle
push
add
add
add
add
jge
add
aas
add
movl
add
add
add
add
add
add
add
add
add
add
data16
add
add
add
add
add
add
movsb
jae
add
add
jbe
filds
add
mov
cltd
add
add
mov
icebp
add
add
add
add
add
push
add
das
xlat
lods
add
add
add
add
add
xor
add
add
or
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
mov
add
scas
repz
push
cld
mov
or
or
mov
mov
push
stos
mov
add
iret
inc
fldl
in
mov
dec
add
pop
cmp
xchg
fnstcw
lret
jbe
aam
fimuls
fistps
push
jg
cmp
mov
push
mov
xor
movsl
into
stc
jecxz
pop
setne
sahf
pop
cmp
out
jg
mov
aas
stos
push
loop
mov
cli
int
mov
push
aaa
xchg
jns
mov
mov
call
ficompl
dec
and
cmp
daa
push
es
sub
sbb
mov
adc
mov
arpl
dec
movsl
adc
adc
or
ja
add
mov
jae
ftst
sub
pop
in
mov
aaa
cmp
lcall
cmp
enter
std
out
test
push
movsb
ror
ja
sti
test
pusha
push
or
cmp
and
into
or
in
dec
rcll
inc
mov
sub
lahf
outsl
mov
mov
cmp
mov
sbb
into
psllw
dec
mov
lods
hlt
dec
lock
sbb
lret
scas
subl
and
gs
mov
pop
sbb
jge
dec
roll
push
sub
lcall
mov
or
lea
inc
xor
adc
add
sub
incl
mov
dec
popf
sbb
xor
adc
xor
push
or
cmpb
les
in
in
and
cmp
sbb
dec
js
push
sub
inc
pop
mov
adc
int
int3
fwait
or
xlat
loopne
add
or
xchg
jne
inc
hlt
movsl
xchg
in
call
out
mov
xor
call
call
nop
and
outsl
iret
xlat
push
sub
jbe
pop
popa
jae
outsl
cmp
nop
add
mov
xor
mov
add
jnp
xor
clc
cli
bound
jecxz
push
jge
jnp
mov
imul
cmpsb
test
inc
xchg
lahf
clc
jnp
aas
faddl
jb
cmpsb
lret
mov
popf
popa
lcall
xlat
je
inc
je
and
rclb
je
in
jmp
add
inc
pop
clc
scas
sub
std
das
in
and
lds
xor
inc
mov
mov
mov
and
and
xchg
ljmp
test
cmp
loop
loopne
dec
fiadds
das
cmp
push
lea
pop
mov
adc
inc
data16
jno
xchg
cmpsl
mov
pop
data16
mov
das
pop
ja
dec
dec
dec
mov
mov
mov
push
jmp
xchg
add
gs
cli
cmpsl
push
dec
daa
std
mov
dec
xchg
inc
or
mov
mov
cmovne
movsl
sub
dec
repz
and
and
imul
dec
in
jb
mov
scas
jg
andl
mov
inc
add
stc
jbe
imul
adc
inc
add
inc
and
or
fsts
jg
pop
pop
sbb
cli
pop
out
xor
or
sub
add
scas
mov
pop
push
cld
data16
shr
xchg
das
xchg
fsubl
jns
or
add
jl
xchg
fdivrs
inc
aas
adc
xchg
rclb
ss
inc
jp
stc
fldcw
aad
ret
or
movsl
xchg
sub
es
icebp
test
out
pop
mov
loopne
repz
daa
scas
cwtl
test
ds
fwait
popa
push
xor
mov
imul
sarl
call
xchg
ret
jl
fsubrl
mov
arpl
std
cmp
xchg
sarb
into
push
stc
sahf
loop
stos
jmp
mov
pop
leave
divb
js
cs
pop
mov
jl
xchg
inc
in
movsb
sub
mov
scas
dec
pop
and
stos
in
adc
repnz
js
lods
rorl
mov
sahf
or
clc
mov
or
jle
fcmove
enter
arpl
aad
jnp
cs
add
jecxz
mov
js
notl
dec
nop
into
shrl
sub
mov
lret
faddl
cmp
fistl
mov
mov
ret
loop
scas
inc
pop
insl
pop
rorb
imul
or
jecxz
or
xchg
iret
jmp
push
sahf
dec
mov
scas
mov
sti
bound
jecxz
stos
jb
push
jg
lods
test
or
mov
add
bound
jae
mov
cmp
iret
xchg
std
rcl
xlat
sbb
data16
ret
mov
lret
arpl
fwait
or
ret
xchg
mov
icebp
mov
mov
mov
or
xchg
leave
pushf
les
dec
pop
sub
jno
xor
push
jle
cmpsb
hlt
fmul
repz
iret
sahf
mov
ret
lods
xchg
not
mov
mov
pop
mov
push
sub
imull
xor
push
adc
mov
inc
mov
adc
jp
mov
in
stc
pop
adc
xor
adc
mov
push
ja
jge
enter
lahf
arpl
jnp
pop
mul
sahf
cmp
jp
imul
and
scas
pop
enter
imul
shrl
mov
adc
enter
ret
mov
dec
xor
dec
cmp
xchg
lea
enter
fisttpll
sbb
dec
and
mov
sbb
dec
pop
mov
mov
add
and
dec
into
adc
mov
in
xchg
dec
push
iret
ficoml
outsb
aas
adc
adc
inc
inc
xlat
xchg
inc
sti
jle
icebp
sar
fimuls
or
jmp
push
adc
mov
push
popa
pop
xchg
gs
stc
arpl
or
test
xor
cmp
xchg
push
dec
ljmp
nop
and
pop
cmovno
jne
andb
sbb
xlat
inc
jecxz
cld
mov
adc
xchg
ljmp
cmpsb
lret
aam
pop
orl
cmp
mov
repz
loopne
mov
leave
leave
iret
push
out
call
enter
cmp
es
std
arpl
mov
outsl
stos
scas
mov
fucomip
cmc
mov
mov
jge
pop
or
or
lahf
mov
adc
mov
sbb
loope
ficoml
mov
mov
mov
dec
ds
xchg
lret
xorl
push
push
pop
movb
cmc
mov
cmp
jns
add
stos
clc
outsl
jecxz
lock
mov
push
movsb
jg
xchg
repz
and
lret
push
lods
movsb
jmp
hlt
push
jo
and
lods
add
lahf
femms
lahf
sarl
inc
mov
adc
into
out
fcoms
repz
mov
and
je
loop
mov
xchg
and
sarb
popf
xchg
and
mov
in
inc
cwtl
stc
outsb
int3
mov
andl
mov
shlb
sti
xchg
or
dec
xchg
sbb
out
and
lea
or
popa
and
sbb
punpckhdq
ret
lret
adc
mov
add
out
testb
arpl
out
sbb
adc
and
and
call
outsb
inc
pop
push
cld
movsl
and
sbb
jg
push
pop
loopne
push
jl
scas
dec
leave
aaa
test
push
adc
or
cmp
rolb
fs
cmp
cmpsl
fs
or
mov
jb
jbe
pushf
mov
push
aam
jb
adc
xchg
dec
pushf
lock
fcomip
mov
lds
scas
xor
add
jg
gs
dec
mov
clc
enter
lcall
jl
fadd
pop
adc
mov
xchg
iret
test
ror
ss
int
add
jmp
sub
sub
mov
xor
sub
cmp
out
ljmp
push
movsl
xor
lods
stc
dec
pop
xchg
cmp
int
bound
inc
mov
cmp
xchg
pop
mov
or
jge
imul
push
push
dec
inc
push
dec
dec
in
hlt
test
filds
jnp
dec
sbb
xlat
jbe
lret
ja
in
pop
in
sarb
jne
inc
enter
jb
push
pop
lahf
xchg
or
insl
mov
movq
fbld
iret
inc
dec
sub
jmp
rcrl
inc
and
mov
ja
fnstcw
adc
jbe
mov
cwtl
into
mov
repz
and
subl
fmuls
rorb
rcrb
pop
mov
jb
loop
imul
xchg
fwait
dec
xchg
inc
aad
in
repnz
sbb
and
adc
outsl
imulb
or
sahf
aad
mov
pop
int
mov
or
dec
idiv
mov
xchg
fcmove
jno
push
fisubs
out
xor
xor
movups
mov
les
pop
repnz
iret
mov
insl
and
xchg
rol
loope
mov
inc
jo
loopne
xchg
cli
dec
popa
in
pop
clc
test
pop
loope
xchg
clc
xlat
cmp
ret
in
bound
cmpl
pop
sub
mov
and
aas
sbb
stos
in
aad
lcall
pop
jmp
pusha
ljmp
pop
or
lcall
cmc
mov
xchg
gs
push
out
rorl
xchg
mov
and
mov
fadds
dec
add
loope
pushf
sbb
xor
add
sub
test
push
sbb
das
ror
pusha
cmp
jg
cltd
xlat
add
lods
dec
jo
sbb
mov
out
jge
ret
adc
ret
aaa
cmc
mov
dec
fldl
mov
in
cmpsl
jnp
push
xor
aad
js
ficompl
lods
insb
xor
pushf
xor
add
and
sahf
lcall
sbb
xchg
and
rolb
and
ss
leave
mov
jnp
xor
xchg
out
jne
ja
jle
xchg
jo
mov
nop
cli
lock
add
ds
or
ret
xchg
sbb
out
enter
flds
idivb
push
rorb
inc
leave
roll
fbld
pop
inc
inc
dec
xchg
out
cmpsb
pop
inc
lret
mov
or
leave
xchg
sti
lods
xchg
stos
clc
mov
cmpsl
dec
xchg
iret
mov
add
adc
lret
push
das
lcall
xchg
xchg
loope
cli
icebp
mov
lret
dec
or
cmp
loopne
add
adc
in
icebp
jae
in
out
xor
pop
icebp
jmp
mov
pop
lock
jle
pop
push
aas
dec
out
sub
flds
cli
insb
movsb
push
pop
or
shlb
sub
jge
jnp
jo
mov
int3
push
ret
loope
mov
lret
jge
cld
dec
xchg
shl
negb
js
fs
mov
cmpsl
fidivs
push
xor
push
jle
push
inc
scas
mov
std
in
fildll
add
insb
loop
pop
out
cmp
nop
fucomp
icebp
fidivrl
aam
inc
push
sar
in
cmp
xor
push
mov
xchg
adc
popa
jge
cltd
enter
mov
mov
xor
mov
mov
fs
add
mov
cmp
jb
xor
cmp
daa
test
mov
mov
xchg
adc
scas
aad
lret
mov
xchg
cmpsl
pop
rcl
or
je
pop
test
mov
out
ret
pusha
sub
add
xchg
mov
cld
sarb
in
mov
add
sti
xchg
add
pop
mov
cmp
xor
add
inc
pop
mov
mov
sub
adc
mov
fdivrs
je
sbb
push
lods
pop
shlb
pop
hlt
test
pop
fimuls
loopne
sub
out
call
xchg
jl
inc
mov
out
sbb
mov
popl
fsubl
pop
and
ficompl
fistpll
fisubrl
int3
mov
cli
aam
dec
in
xor
xorb
jmp
dec
mov
or
cli
cli
pop
jno
ret
mov
or
xchg
test
push
jns
cld
mov
cmpsb
mov
mov
cmp
cmp
sbb
push
xchg
mov
add
add
and
cld
xor
jne
push
jo
pop
enter
inc
jbe
dec
mov
push
call
mov
ja
sub
cmpsl
das
mov
pop
in
mov
inc
pop
lods
shr
mov
dec
mov
inc
nop
xchg
jnp
add
leave
mov
sub
xchg
jmp
das
in
loop
inc
adc
push
bound
mov
sub
int3
enter
aad
inc
push
fldcw
xor
into
mov
subb
inc
pop
aad
or
insl
adc
mov
daa
and
pusha
nop
popf
sbb
shrl
mov
push
mov
jl
out
cmp
adc
fwait
inc
and
sarl
insl
mov
push
test
ds
inc
and
cmova
fidivrs
subl
sti
jnp
cmpsl
mov
xlat
and
and
xchg
andb
xchg
cmpl
or
jge
popf
in
dec
icebp
xchg
ja
ret
enter
push
dec
mov
sub
jae
punpckhdq
nop
sbb
dec
adc
dec
inc
lods
dec
or
cmp
mov
daa
or
mov
push
jmp
sub
xor
jnp
fsubl
fcmove
int
andl
icebp
into
fsubrp
incl
xchg
xor
popf
arpl
pop
push
add
lahf
adc
fs
outsl
into
jne
mov
adc
imul
shl
iret
mov
mov
jno
roll
mov
inc
xor
mov
out
subl
movsb
lds
sbb
dec
gs
mov
pop
inc
not
pop
mov
loopne
outsb
inc
add
xor
pushf
lods
pop
and
or
das
mov
push
ret
fs
dec
mov
mov
sub
push
in
insl
icebp
movsl
cltd
sar
or
xchg
and
outsl
ds
add
mov
pop
jbe
cmp
cmp
jecxz
fildll
arpl
push
xchg
jo
daa
out
subps
and
or
sbb
pushf
outsl
mov
fstpt
fisttps
dec
dec
shll
into
mov
sbb
int3
xor
push
test
cltd
mov
shl
hlt
mov
shlb
pushf
into
clc
outsl
out
arpl
mov
filds
pop
add
cli
push
adc
lock
punpckhwd
dec
mov
sub
clc
lods
xchg
mov
fimull
jo
mulb
pop
insl
jmp
icebp
sub
jl
mov
xor
std
ficoml
sbb
in
xchg
insl
jl
sbb
xor
aad
testl
xlat
mov
inc
mov
push
aas
ficoms
cmp
fidivrl
in
daa
cli
push
cmpsb
add
das
fs
stos
int
xlat
push
popl
sbb
ss
sbb
inc
aaa
outsb
dec
aas
sbb
nop
push
aaa
call
adc
test
push
mov
push
cs
mov
xchg
test
ja
jno
loopne
sarl
mov
xchg
fldenv
mov
sub
or
jb
mul
or
or
or
ds
push
mov
xchg
and
std
stos
pop
push
scas
push
add
ss
mov
pop
cmpb
fmuls
sti
fwait
movsb
mov
mov
mov
jne
and
ret
fiadds
or
lcall
stos
ret
and
rcrb
movzbl
push
bound
sub
adc
sbb
add
xchg
mov
lock
call
dec
inc
mov
mov
adc
popa
mov
cmp
and
aas
sbb
das
mov
push
in
cs
dec
cs
lods
jae
and
pop
mov
repnz
xor
xchg
xor
fisubrl
daa
mov
in
cwtl
cs
in
mov
incb
sbb
mov
jne
lea
inc
shll
mov
mov
pop
sub
les
test
sbb
arpl
inc
aad
cmp
jbe
dec
push
push
imul
add
add
jmp
outsl
inc
sub
push
mov
xchg
push
cltd
iret
flds
xor
or
int
nop
push
aas
add
leave
pop
pusha
jmp
int3
xchg
jle
addr16
jb
lahf
pop
mov
xchg
sbb
add
push
mov
xchg
mov
sub
and
xchg
pop
and
test
cmp
ret
mov
mov
mov
mov
daa
inc
jmp
fs
xchg
mov
sbb
sub
call
fs
imulb
je
sub
xchg
ss
inc
cs
xchg
repnz
das
jb
and
jp
mov
add
push
adc
not
fistl
xor
inc
loope
or
sub
adc
cmp
inc
aas
xor
push
push
push
insl
pop
dec
push
gs
cld
aad
insl
mov
mov
xchg
mov
sahf
add
jmp
stc
ss
ljmp
mov
inc
out
add
jo
repnz
shl
mov
sub
test
pop
sub
add
push
xor
pop
ss
nop
mov
fildl
mov
rdpmc
xor
aam
aam
arpl
iret
push
xchg
or
cmp
hlt
cmpsl
add
imul
sbbb
fs
xor
cmp
mov
mov
lea
mov
imul
sti
dec
in
dec
mov
and
mov
pop
sbb
dec
lret
push
movsl
push
aaa
xor
std
cmp
xor
push
fimull
or
and
mov
cmpsl
cwtl
movsb
inc
pop
jp
div
test
ss
jg
clc
add
mov
and
xor
pop
pop
mov
bound
xor
mov
das
iret
jo
arpl
sub
out
mov
xchg
xchg
jmp
or
mov
fistl
or
mov
js
add
dec
and
mov
pushf
popf
stc
adcb
and
dec
pop
aad
xchg
imul
mov
or
xorb
scas
out
and
or
mov
mov
adc
lock
sub
lcall
mov
xor
push
popf
sarl
fidivrl
xorb
popf
push
out
das
pop
pop
std
mov
cmp
cmpsb
lods
sbb
add
jb
cli
xchg
pop
nop
and
mov
fnstcw
mov
push
stos
enter
imul
or
adc
adc
addr16
mov
mov
dec
ret
jne
xor
lea
xor
adc
dec
sub
movb
inc
lods
cmp
mov
xor
hlt
mov
lahf
pop
xor
movsb
stc
mov
cmp
xor
fisubrl
sbb
loope
testb
inc
shrb
stos
lods
je
ds
enter
pop
dec
sbb
pop
imul
mulb
imul
mull
incl
imul
sub
push
sub
arpl
mov
xchg
test
fisubrl
mov
lahf
ds
sbb
lahf
pop
arpl
xchg
pop
scas
popa
jmp
ret
int
icebp
or
xchg
lret
fisubrs
jo
sub
rcrl
and
enter
add
fildl
pop
icebp
push
arpl
gs
xor
jae
inc
lret
sbb
and
repnz
and
pushf
ljmp
adc
xchg
repnz
std
adc
pop
enter
mov
mov
sub
enter
fcmovnb
daa
popf
nop
arpl
es
in
xchg
lods
xchg
scas
cmp
movsl
mov
mov
call
cmp
mov
push
or
lret
out
adc
sbb
scas
aam
xchg
sar
es
mov
or
lahf
dec
xor
mov
imulb
pop
xor
push
jno
aaa
dec
jo
out
enter
inc
lea
pop
loopne
mov
aaa
push
dec
xlat
push
sub
out
call
ds
fs
insb
xor
das
es
and
test
cmpsb
inc
mov
scas
mov
hlt
rorb
add
add
jae
mov
mov
xor
shrl
daa
mov
cwtl
adc
fwait
stos
add
inc
mov
add
jb
xchg
jne
je
popf
into
lcall
add
inc
arpl
pop
out
lds
out
adc
out
stos
out
in
mov
mov
jbe
in
mov
inc
adc
fdivs
popf
les
pop
gs
add
mov
dec
pop
out
jg
xor
arpl
je
sbb
or
dec
jbe
imul
or
mov
push
insl
int
loope
xor
stc
cltd
dec
pop
xor
lods
jns
in
cmc
cmp
fstpt
cli
imulb
ret
rcll
pop
fnstcw
negb
loope
enter
fdivrl
xchg
xor
push
push
aaa
cwtl
mov
sbb
mov
lds
gs
xor
push
push
adc
inc
mov
or
int
iret
push
pop
ljmp
pop
pop
pop
mov
jbe
inc
or
push
push
fucom
iret
mov
and
cli
sti
cli
movsb
dec
cmp
mov
movsb
xor
or
sub
cmp
cmc
and
hlt
xchg
xlat
outsb
test
divl
inc
daa
mov
mov
fmull
aas
sub
mov
xlat
sti
insb
lods
popa
dec
inc
outsb
cmpsb
push
aad
pop
flds
leave
ja
adc
xchg
mov
es
mov
jbe
sbb
pop
iret
xor
insb
pop
sub
jns
enter
xlat
lcall
xchg
cmp
mov
pushf
adc
inc
movsl
lock
sub
int
lds
int
rcrl
testl
jmp
mov
jo
sub
xchg
les
mov
jns
push
aas
sbb
shll
into
mov
or
scas
js,pt
dec
mov
and
pop
loopne
push
jae
nop
imul
push
xchg
mov
outsl
and
push
ret
mov
pop
pusha
mov
test
movsl
jae
out
mov
imul
push
add
xchg
mov
ficomps
add
mov
aam
xchg
icebp
mov
popf
mov
ret
inc
pop
or
push
fwait
movsl
cli
lods
stos
or
fadd
lret
push
out
mov
or
ja
out
xchg
jmp
or
lahf
pop
pop
popf
or
inc
mov
iret
mov
movsl
sub
mov
test
or
test
xor
cs
movsl
mov
mov
out
and
pop
inc
mov
loop
mov
jecxz
and
ficomps
movsl
rcrl
push
jle
mull
xchg
hlt
sub
mov
and
ficoml
sub
jmp
or
mov
jnp
jmp
sbb
jo
add
cmpsl
mov
mov
mov
sbb
and
cmpsl
clc
xchg
or
pop
dec
loope
stos
test
fisubl
pop
jecxz
loopne
jae
out
ss
inc
stos
inc
fnsave
jns
iret
call
push
jo
xor
mov
js
fwait
sbb
stc
xor
inc
stos
jecxz
out
rorl
es
dec
xchg
mov
loopne
or
pushf
push
in
scas
aas
out
mov
mov
xor
lahf
sub
clc
iret
scas
imull
xchg
mov
cld
scas
popa
sbb
lea
roll
mov
sbb
xchg
out
adc
dec
negl
mov
xchg
aad
je
add
call
pop
jmp
mov
dec
cmp
add
mov
test
mov
sahf
mov
lret
lods
jnp
fsubr
lret
lret
stos
xchg
cmp
jmp
inc
scas
enter
xor
bound
inc
cmpsl
imul
mov
cmp
lds
push
push
test
jnp
ja
xorb
push
aaa
pop
sbb
jl
hlt
loop
outsb
mov
lods
cmp
push
sbb
xor
out
outsl
andl
sbb
stc
xor
in
xor
mov
idivl
ret
es
jb
js
adc
std
jne
movsb
and
push
icebp
push
fwait
hlt
repnz
mov
fmuls
jno
or
add
sub
mov
icebp
xchg
sbb
sub
adc
sub
push
shufps
cli
pop
rorl
ljmp
popa
sti
inc
daa
sub
mov
push
pop
mov
je
jge
fdivr
mov
nop
paddusb
lds
es
adc
jl
cmp
adc
cmp
xchg
mov
xchg
inc
call
adc
jp
cli
lret
aas
mov
and
mov
xor
iret
sbb
xlat
pop
dec
into
push
mov
into
jae
pushf
xor
ret
xor
std
xorb
stos
pop
cmp
mov
sbb
pop
popa
dec
adc
mov
lret
repnz
xor
dec
iret
idiv
pop
fdivrs
cmp
mov
sbb
cltd
jl
loope
lock
inc
pop
bound
mov
lock
cmc
bound
mov
mov
xor
mov
in
popf
lcall
xlat
and
lret
outsb
sub
imul
loopne
inc
jnp
lea
sub
or
jae
sbb
loop
pop
inc
mov
pop
adc
es
dec
mov
fidivs
add
sub
push
lds
cmp
mov
aas
sbb
out
ja
hlt
sub
rorl
xchg
cmp
movsl
adc
jl
inc
pop
test
mov
loopne
sti
mov
stos
fistpl
dec
cltd
faddp
dec
leave
aaa
pop
jge
pop
pop
aad
push
mov
sbb
push
out
mov
dec
sbb
out
lahf
jg
dec
or
mov
cltd
inc
adc
in
sbb
mov
das
lock
cld
mov
popa
mov
jmp
and
sbb
imull
xlat
and
push
add
dec
mov
lahf
jecxz
std
fidivrl
lods
out
pushf
out
lret
stos
jb
pop
xchg
pop
jmp
add
jo
pop
ss
mov
cmpsl
ja
push
repz
jno
add
inc
pop
push
movsl
inc
ret
outsb
xchg
mov
push
mov
clc
inc
test
out
inc
xchg
push
jbe
cmpsl
adc
and
and
dec
inc
mov
loopne
pop
repz
dec
fst
mov
and
popa
addb
es
sbb
inc
sahf
int
ja
icebp
or
push
jo
shl
sub
add
insb
std
adc
aaa
pop
xchg
push
inc
cld
aas
xchg
sub
insb
fstpt
adc
in
pop
popf
lret
or
imul
pop
push
xor
mov
dec
dec
and
jg
or
push
fcmovu
cmp
dec
inc
add
loope
lcall
dec
adcb
xor
insb
jnp
inc
lock
out
inc
fidivrs
jae
xchg
pop
jge
test
hlt
movb
fucom
mov
mov
mov
xchg
add
dec
mov
out
cmp
stc
push
or
lds
or
mov
push
sbb
aad
adc
cmp
sub
pop
jg
jp
cli
xor
xchg
je
inc
add
sbb
lods
push
into
shll
aam
cmp
dec
pop
push
mov
clc
rolb
push
pushf
lss
popf
xchg
aas
out
mov
or
sub
int3
mov
inc
inc
jno
adc
cmpsb
dec
pop
mov
and
pop
mov
xchg
imul
push
xchg
xor
xor
ljmp
call
mov
mov
aam
dec
aas
push
repnz
add
mov
sti
pop
pusha
add
mov
insb
out
rclb
push
mov
pop
mov
xor
in
dec
xor
scas
add
cmpsl
mov
nop
xchg
jmp
jne
inc
fcmovne
arpl
pop
mov
out
add
xchg
jnp
ret
sub
dec
lahf
in
pop
aas
es
mov
stc
mov
push
push
and
inc
in
dec
cwtl
outsl
jbe
jl
jae
dec
cmp
push
imul
push
lods
sbb
mov
mov
mov
sbb
push
aad
dec
shrl
xlat
dec
jne
xchg
inc
inc
in
out
lret
xor
in
and
dec
add
jns
test
push
imul
cmpsb
movsb
hlt
pushf
push
lcall
mov
mov
pop
mov
out
loopne
mov
inc
jae
sub
xor
add
gs
mov
jne
inc
inc
into
and
add
inc
loop
shrb
movsb
add
shrl
xchg
and
mov
roll
mov
inc
jge
out
sub
lods
xlat
mov
mov
inc
sbb
test
and
insb
sbb
push
dec
mov
testb
stos
bound
test
aam
jp
cmp
mov
dec
lods
addb
rcrb
mov
xor
mov
lds
xor
scas
test
xlat
push
and
pop
subl
subb
scas
sbb
jmp
js
test
icebp
cld
and
clc
cwtl
pop
ljmp
lods
mov
addr16
cltd
mov
or
in
aad
pushf
lahf
push
int
test
outsb
movsb
jmp
lea
out
sub
in
push
jg
cmc
int
xchg
sub
jmp
adc
jl
shl
test
add
add
add
add
add
add
add
imul
add
pop
cmpsb
add
add
into
add
add
add
add
add
add
or
add
add
roll
add
add
add
lcall
add
das
add
add
add
add
add
and
hlt
add
add
add
add
add
jno
add
add
add
rolb
cli
mov
add
add
add
add
sldt
add
add
add
add
add
add
add
out
add
and
add
add
add
into
add
add
add
xchg
add
add
and
add
add
add
add
add
add
add
mov
add
add
lahf
add
add
stc
add
add
add
and
add
add
fadds
add
add
add
inc
adc
add
add
add
mov
add
cmpsl
add
add
mov
add
add
add
dec
addl
add
add
add
add
add
adc
add
add
add
add
add
addl
add
add
add
add
add
add
sub
add
rolb
add
add
add
repnz
inc
adc
add
addb
movb
add
add
inc
addl
add
add
push
addl
add
addl
add
add
add
addl
add
addb
and
add
add
add
push
addb
data16
addb
add
add
mov
addb
faddl
add
add
add
sbb
add
inc
addl
push
addl
addw
je
add
mov
add
cmpsb
addl
mov
add
add
add
xor
push
popa
je
inc
imul
dec
popa
insl
gs
add
add
jb
outsl
dec
outsb
je
add
dec
push
inc
push
dec
cs
insb
add
push
popa
addr16
gs
jo
insb
addr16
add
inc
push
inc
outsl
outsb
je
add
inc
gs
popa
jbe
inc
imul
add
arpl
fs
xor
cs
insb
add
sub
dec
insl
popa
addr16
imul
dec
popa
jae
gs
add
popa
addr16
imul
ja
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
inc
push
dec
xor
cs
insb
add
inc
add
jb
popa
je
push
arpl
outsb
add
push
gs
insb
imul
je
add
adc
inc
gs
gs
inc
js
outsb
je
outsl
imul
and
dec
outsb
je
jb
arpl
imul
stos
add
push
fs
xor
push
add
dec
xor
cs
insb
add
insl
push
gs
jne
arpl
jns
gs
add
clc
add
popa
imul
je
jo
gs
bound
arpl
add
je
push
add
repnz
je
imul
roll
jae
jb
insl
jo
add
cli
add
inc
popa
fs
je
imul
add
inc
gs
je
dec
popa
outsb
fs
add
incl
dec
jae
inc
inc
push
dec
gs
fs
jns
add
inc
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
dec
inc
dec
xor
cs
insb
add
jae
inc
gs
imul
pop
inc
gs
popa
jb
outsb
je
and
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
popa
insb
insb
push
imul
outsl
arpl
xchg
add
inc
push
jo
popa
inc
add
hlt
add
je
popa
jb
je
insb
imul
add
pop
dec
outsl
popa
fs
jne
jae
jb
add
or
jae
push
push
dec
gs
popa
addr16
add
mov
inc
jb
ja
je
je
push
add
xlat
push
inc
outsb
jne
push
imul
test
ja
outsl
arpl
push
arpl
push
inc
imul
outsl
ja
js
add
inc
push
xor
cs
insb
add
push
dec
cmp
and
addr16
outsl
aaa
insl
xor
add
xor
xor
addr16
and
pop
dec
push
insb
push
xor
addr16
push
jno
insl
and
xor
push
dec
sub
dec
and
and
and
ss
add
push
add
xor
ss
xor
xor
pop
popa
dec
dec
dec
inc
add
push
xor
and
and
pop
ja
inc
sub
cmp
push
jno
imul
add
iret
lea
add
add
adc
add
adc
add
addb
or
add
cmpsb
insb
add
insl
jae
add
add
add
pop
insb
add
lock
add
add
add
add
dec
add
sbb
scas
jae
add
add
mov
add
xor
dec
add
cmp
add
je
add
lea
add
movl
add
pop
xchg
add
add
dec
xchg
add
add
addl
add
faddl
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
dec
popa
pop
addr16
xor
gs
add
dec
inc
push
bound
inc
dec
dec
pop
dec
push
pop
push
pop
inc
inc
push
inc
pop
inc
pop
dec
inc
pop
add
dec
push
inc
jo
jbe
jno
pop
jne
jbe
pop
insl
dec
inc
inc
pop
inc
inc
inc
inc
pop
add
dec
pop
outsb
pop
js
je
outsb
jbe
inc
pop
inc
push
inc
inc
dec
push
inc
dec
inc
pop
add
pop
pop
push
pop
je
push
dec
push
inc
pop
dec
inc
dec
pop
arpl
imul
dec
inc
inc
inc
pop
add
pop
outsl
pop
imul
inc
inc
pop
inc
push
inc
inc
push
inc
inc
inc
pop
add
je
insl
pop
addr16
pop
pop
pop
jns
addr16
insb
jne
dec
inc
inc
pop
inc
push
inc
dec
inc
inc
inc
pop
add
inc
inc
fs
gs
arpl
outsb
pop
inc
pop
pop
inc
inc
pop
inc
pop
push
inc
inc
inc
inc
pop
add
imul
addr16
pop
inc
inc
pop
inc
inc
push
inc
dec
inc
pop
add
jne
pop
push
pop
dec
push
dec
inc
pop
dec
dec
push
inc
inc
pop
inc
inc
push
inc
dec
inc
pop
add
je
pop
inc
push
push
pop
inc
inc
push
dec
push
push
inc
push
inc
inc
pop
inc
dec
inc
dec
inc
pop
add
jbe
push
dec
pop
pop
push
inc
pop
inc
push
inc
inc
dec
inc
pop
add
imul
dec
dec
push
inc
dec
push
push
dec
pop
push
push
dec
fs
inc
inc
pop
inc
pop
dec
pop
dec
inc
pop
add
push
dec
dec
inc
push
pop
dec
dec
inc
dec
jo
inc
inc
inc
pop
inc
inc
dec
inc
pop
add
pop
gs
pop
pop
pop
inc
pop
push
dec
push
pop
push
je
jbe
jo
gs
inc
pop
inc
inc
dec
inc
pop
add
pop
pop
dec
push
inc
jno
pop
jb
jns
pop
jbe
jno
gs
imul
push
inc
inc
inc
pop
add
pop
push
inc
dec
inc
dec
pop
pop
pop
pop
push
popa
addr16
inc
inc
pop
inc
push
inc
inc
push
inc
dec
inc
pop
add
push
push
push
jb
push
push
dec
pop
pop
jae
inc
inc
pop
inc
push
inc
inc
push
inc
inc
inc
inc
pop
add
push
and
and
outsb
imul
je,pn
jo
pop
and
cmp
and
dec
jbe
jne
push
xor
sub
and
pop
xor
fs
aaa
cs
cmp
inc
inc
arpl
and
push
cs
push
add
fs
add
cmp
dec
and
push
jno
sub
outsw
js
dec
xor
jae
push
jp
dec
aaa
imul
and
xor
pop
ja
.byte
xor
add
add
add
add
add
add
and
add
dec
add
addb
add
add
add
add
add
add
add
std
push
add
jo
add
mov
add
mov
add
add
add
add
add
add
add
adc
add
mov
add
add
add
xor
add
call
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
pusha
xchg
add
out
add
in
add
add
add
dec
xchg
add
add
add
add
add
add
add
add
jp
add
in
add
add
add
hlt
cltd
add
incb
add
in
add
add
add
hlt
lcall
in
add
add
add
and
add
in
add
add
add
inc
dec
out
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
daa
cmpsl
pushf
fbstp
out
cmpsl
pushf
fbld
imul
cmpsl
pushf
fbld
fbld
fbld
filds
add
cmpsl
pushf
fbld
fbld
fbld
fbld
filds
shll
fbld
cmp
add
in
les
imul
cmpsl
pushf
fcomip
lods
out
pushf
fbld
into
mov
fbld
add
add
fbld
int3
cmpsl
pushf
fistps
shll
fbld
out
pushf
fbld
fbld
filds
add
cmpsl
pushf
fbld
fbld
fbld
fbld
fbld
fbld
mov
add
aam
les
jge
js
cmpsl
pushf
fbld
fbld
or
cli
cmpsl
pushf
filds
sbb
scas
add
add
cmpsl
pushf
fbld
fbld
imul
cmpsl
pushf
filds
jb
pushf
fbld
fbld
filds
add
cmpsl
pushf
fildll
or
push
pushf
fisttps
fists
popf
cmpsl
pushf
fisttps
fbld
fbld
add
fbld
daa
addr16
mov
fbld
fists
cmpsl
pushf
fbld
pop
and
roll
add
inc
dec
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
jnp
push
mov
jg
leave
cltd
jnp
push
jnp
push
fldz
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
mov
ret
jnp
push
jnp
push
jnp
push
bound
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
sub
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
sub
ret
push
jnp
push
adc
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
negl
xor
sub
pop
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
adc
jnp
push
jnp
push
jnp
push
fistl
pop
mov
jnp
push
jnp
push
addl
push
cli
jnp
push
or
cmpb
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
lods
dec
push
mov
and
push
jne
pop
jnp
push
jnp
push
mov
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
lahf
inc
push
jnp
push
jnp
push
jnp
push
jnp
push
dec
faddl
pop
push
jnp
push
jnp
push
inc
sub
add
arpl
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
or
test
pop
push
xchg
jnp
push
jnp
push
cmpl
pop
push
jnp
push
jnp
push
jmp
push
jnp
push
jnp
push
push
mov
jnp
push
jnp
push
jnp
push
jnp
push
jnp
push
sub
test
pop
push
jnp
push
and
add
push
jnp
push
jnp
push
jnp
push
jnp
push
fadds
push
inc
inc
dec
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
mov
xchg
mov
cltd
mov
xchg
mov
stos
mov
xchg
push
mov
cltd
cmp
mov
xchg
mov
movsl
mov
xchg
mov
xchg
mov
xchg
mov
xchg
add
jno
ljmp
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xor
pop
outsl
adc
arpl
lock
xchg
mov
xchg
push
pop
loope
ljmp
xchg
lret
fiadds
pop
das
mov
add
mov
xchg
mov
xchg
iret
cmc
add
ljmp
lods
cmc
stos
cltd
mov
xchg
and
lahf
mov
xchg
or
mov
xchg
mov
xchg
arpl
mov
ljmp
xchg
mov
add
stos
fdivrs
mov
xchg
mov
jmp
ljmp
xchg
jg
push
imul
ljmp
xchg
mov
lods
mov
xchg
mov
xchg
daa
jecxz
aas
mov
ljmp
xchg
add
add
mov
idivb
mov
sub
ljmp
xchg
mov
xchg
mov
xchg
mov
xchg
inc
mov
mov
sahf
mov
cmp
mov
sldt
add
mov
xchg
mov
push
mov
xchg
repz
mov
xchg
mov
fcomi
xchg
ljmp
xchg
xchg
stos
inc
jmp
mov
cli
mov
mov
aas
mov
add
xlat
arpl
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
dec
mov
mov
aaa
mov
xchg
mov
xchg
mov
xchg
mov
cwtl
mov
xchg
add
add
jae
ljmp
inc
mov
xchg
mov
xchg
cmp
cmp
jge
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
clc
push
mov
stos
mov
xchg
mov
xchg
add
add
mov
xchg
mov
jno
ljmp
xchg
mov
xchg
xchg
roll
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
jmp
xor
mov
xchg
add
add
sub
in
pop
inc
mov
xchg
mov
xchg
sti
jg
xor
ljmp
adc
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
add
add
xor
pushf
mov
xchg
mov
xchg
mov
xchg
mov
out
ljmp
sbb
xor
mov
repz
xchg
add
mov
xchg
movsb
xchg
mov
ljmp
xchg
mov
xchg
mov
xchg
mov
pop
fldt
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
or
add
mov
lods
add
dec
xchg
sti
fs
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xchg
mov
xor
mov
xchg
mov
xchg
mov
xchg
mov
add
add
adc
inc
add
outsl
add
push
ja
jne
insb
add
jns
push
add
jb
jbe
jb
arpl
insb
add
add
bound
je
js
bound
jne
popa
add
jns
data16
add
insl
add
outsb
add
data16
inc
add
push
jno
data16
imul
add
imul
add
insb
add
arpl
add
js
jno
add
add
imul
imul
add
insl
add
add
imul
add
arpl
ja
jbe
adc
inc
add
popa
add
imul
jne
push
insl
add
data16
arpl
bound
insl
add
ja
adc
push
add
add
jne
bound
add
add
insl
add
jbe
jae
outsb
add
jns
add
push
inc
add
add
sldt
add
popa
add
js
bound
jne
insl
add
ja
arpl
insb
add
imul
add
outsb
add
add
bound
jae
ja
jne
push
add
add
popa
add
add
push
insl
add
add
add
outsb
add
outsb
add
add
push
bound
jbe
ja
jbe
outsl
add
jp
jno
popa
add
je
outsb
add
add
insb
add
imul
add
data16
ja
js
outsb
add
js
jns
jp
jb
imul
add
add
jo
push
add
ja
add
jne
je
jbe
outsl
add
insl
add
add
jp
popa
add
jo
data16
imul
add
add
add
arpl
ja
add
je
jbe
add
js
jae
je
bound
adc
dec
add
push
add
add
insl
add
arpl
jb
data16
bound
insb
add
add
js
add
arpl
imul
outsb
add
insl
add
jne
je
add
bound
jo
insl
add
data16
adc
push
add
je
ja
insb
add
add
add
data16
je
push
add
add
adc
inc
add
jno
jne
imul
add
jae
je
je
jne
push
add
imul
ja
adc
push
add
jp
insb
add
add
jae
insb
add
push
add
jns
add
jp
adc
dec
add
outsb
add
jbe
js
push
add
popa
add
insb
add
imul
dec
add
bound
bound
jno
data16
arpl
insl
add
outsl
add
je
popa
add
adc
push
add
add
imul
add
je
add
add
add
jo
popa
add
bound
popa
add
adc
add
jne
jp
jbe
data16
jae
data16
jp
jp
outsb
add
arpl
js
add
add
adc
inc
add
jns
add
jo
insl
add
popa
add
add
popa
add
insb
add
push
add
jae
push
outsb
add
js
jo
ja
jb
bound
bound
push
jno
popa
add
ja
outsl
add
bound
popa
add
push
adc
dec
add
jb
bound
imul
add
data16
outsl
add
jo
je
imul
outsb
add
add
jne
js
add
insb
add
add
jbe
jns
arpl
popa
add
jae
outsb
add
outsb
add
adc
dec
add
jb
jno
outsb
add
ja
js
jp
ja
jb
jns
jne
jns
jno
jne
data16
jp
popa
add
add
insl
add
jb
outsb
add
add
push
outsb
add
jns
js
jne
jne
imul
jns
push
add
add
add
add
add
add
add
add
cmp
cmp
adc
sbb
push
cmp
sub
cmp
cmp
dec
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
scas
cmp
out
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
inc
cmp
push
cmp
push
jo
js
mov
pushf
cmp
mov
push
ds
ja,pt
cmpsl
ds
les
into
ds
aas
cmpb
aas
pushf
aas
mov
aas
loop
cli
aas
add
add
add
add
add
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xorl
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
push
xor
xor
xor
jae
xchg
mov
nop
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
lret
ss
jnp
ss
shlb
fdivs
loope
add
or
and
dec
aaa
mov
pop
cmp
push
cmp
pop
cmp
outsl
cmp
lcall
cmp
xor
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fstpt
in
mov
cltd
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
enter
push
ds
ds
ds
movsl
ds
fdivrl
pop
aas
pusha
aas
mov
cmc
aas
cld
aas
add
add
add
add
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
jg
xchg
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fs
mov
xor
stos
ss
or
es
cs
adc
sub
das
cmp
les
add
sub
xor
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
and
ds
ds
sarb
jecxz,pt
std
add
pop
aas
or
aas
mov
les
sarl
in
jmp
add
add
add
xor
xor
xor
xor
xor
push
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
xor
xor
dec
xor
push
xor
xor
jl
test
mov
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jnp
xorl
fwait
xor
jmp
and
ss
ss
fbstp
in
sub
aaa
imul
mov
mov
xchg
aaa
popf
aaa
cmpsb
aaa
lods
aaa
adc
dec
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
jle
xchg
cmp
cmp
dec
cmp
imul
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
sarb
loopne
add
dec
imul
movsl
add
add
add
sub
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
sbb
sbb
and
and
sub
sub
xor
xor
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
clc
aaa
cld
aaa
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
push
cmp
pop
cmp
data16
outsb
cmp
jbe
jp
jle
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
