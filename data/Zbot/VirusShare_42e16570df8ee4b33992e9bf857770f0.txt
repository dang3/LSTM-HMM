push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
pushl
shlb
pop
add
call
add
call
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
jmp
ret
mov
xor
add
mov
mov
shl
mov
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jle
mov
popf
dec
call
add
in
sbb
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
add
cmp
je
add
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
call
stos
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
call
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
.byte
.byte
mov
add
mov
and
add
add
sbb
add
add
add
js
add
add
add
pop
and
add
add
push
and
add
and
add
and
add
add
mov
add
in
and
add
and
add
and
add
and
add
add
add
and
add
add
shlb
add
add
in
add
cli
and
add
add
jl
add
mov
add
insb
and
add
and
add
and
add
add
add
add
jo
add
pop
and
add
add
add
add
nop
and
add
add
add
and
add
and
add
and
add
add
and
add
add
mov
add
add
add
add
and
add
add
add
add
mov
and
add
and
add
and
add
add
sbb
add
add
add
js
add
add
add
pop
and
add
add
push
and
add
and
add
and
add
add
mov
add
in
and
add
and
add
and
add
and
add
add
add
and
add
add
shlb
add
add
in
add
cli
and
add
add
jl
add
mov
add
insb
and
add
and
add
and
add
add
add
add
jo
add
pop
and
add
add
add
add
nop
and
add
add
add
inc
gs
je
imul
inc
add
aad
inc
gs
gs
inc
imul
outsl
popa
fs
imul
add
repnz
imul
jb
je
arpl
add
roll
dec
gs
jo
jb
add
push
add
outsl
jae
dec
popa
outsb
fs
add
dec
outsl
arpl
dec
outsl
arpl
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
gs
je
dec
popa
outsb
fs
add
xchg
add
je
jne
jb
outsb
je
push
add
dec
add
insb
outsb
inc
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
je
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
dec
jo
outsb
dec
jne
gs
add
rolb
dec
gs
jo
gs
jb
jns
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jb
jbe
push
jns
gs
add
inc
imul
insl
gs
insb
outsl
jae
add
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
outsb
push
push
popa
je
add
push
imul
gs
add
add
je
push
outsl
outsl
insb
add
xor
jae
push
push
popa
je
add
jle
inc
gs
imul
gs
add
addb
jae
push
arpl
add
inc
gs
push
outsl
insb
outsl
jb
jns
inc
gs
push
jns
push
imul
insb
outsl
jae
push
push
popa
je
add
add
ja
push
popa
arpl
jb
jne
add
gs
push
gs
dec
gs
imul
jb
ja
push
fs
push
dec
inc
dec
inc
cs
insb
add
inc
gs
jbe
imul
imul
add
push
push
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
push
inc
push
dec
xor
fs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
sub
add
movsl
pop
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jp
lods
lods
stos
add
cmpsb
test
mov
mov
mov
ret
ret
leave
leave
lret
int
rcl
shr
rcl
shl
rcl
shl
into
int3
int
leave
leave
repz
vpmulhuw
mov
mov
lods
lods
lea
fwait
fwait
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
mov
lret
lret
rcl
sar
fcomp
std
xlat
fcomp
xlat
fdivr
aam
aad
rcl
sar
int
int3
aad
rcl
sar
mov
mov
scas
iret
movsb
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
stos
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
rcl
sar
aad
aam
fcom
fcomp
xlat
call
aam
dec
int3
int3
dec
into
int3
call
aam
dec
into
into
inc
rol
mov
mov
scas
std
test
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
call
rcl
fcomp
fdivr
fcom
fdivr
aam
aad
into
into
int
lret
lret
lret
int3
into
inc
sarl
pushl
cmpsb
cmpsb
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
inc
sbb
or
push
xor
aaa
ss
cmp
cmp
and
and
pop
pop
pop
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
ret
dec
enter
ror
call
aam
call
aam
call
rcl
dec
leave
inc
mov
mov
mov
ljmp
movsb
mov
cwtl
cwtl
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jno
jg
jle
jle
jle
jo
jo
popa
arpl
push
push
push
xchg
cmp
inc
inc
mov
jo
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
lret
dec
enter
ret
mov
mov
ljmp
movsl
movsb
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
xchg
fwait
fwait
fwait
in
test
ds
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
outsb
jo
pop
pop
pop
or
pusha
mov
incb
jp
idivb
jl
outsl
jo
out
addr16
fdivs
ret
jle
jp
jp
gs
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
lcall
xchg
incl
addl
xchg
xchg
xchg
sahf
sahf
mov
ficomps
xchg
jle
jns
pop
xor
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
mov
addl
mov
xchg
jg
jb
jb
jne
jae
jg
jg
addb
xchg
data16
cmp
and
and
jge
jge
lcall
shrb
lods
stos
sti
stos
lods
stos
stos
lods
lods
stos
stos
test
std
cltd
lcall
mov
jle
jns
jns
jnp
jns
xchg
cwtl
movsl
mov
mov
mov
mov
mov
mov
mov
scas
scas
stos
test
push
adc
add
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
incl
xchg
lea
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
push
push
rdmsr
inc
inc
inc
dec
imul
xchg
leave
cltd
fistps
cltd
fwait
stc
xchg
nop
nop
std
mov
decl
mov
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsl
mov
jl
scas
cmpsl
stos
add
pop
adc
scas
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
pushf
popf
pushf
std
mov
mov
xchg
in
nop
in
test
push
jne
cmovp
or
inc
daa
daa
sub
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
lea
call
lahf
lahf
jmp
test
pushl
cmpsb
scas
mov
xchg
test
std
ret
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
pushf
cwtl
fwait
decl
mov
call
xchg
xchg
xchg
xchg
xchg
sahf
popf
pushf
movsb
movsl
movsl
test
test
movsl
movsb
mov
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
pusha
arpl
je
mov
jg
orl
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
lahf
pushl
imul
mov
xor
jbe
mov
movsl
mov
mov
mov
lods
stos
stos
mov
mov
add
mov
pop
pop
adc
mov
ljmp
pushf
decl
xchg
nop
call
xchg
xchg
call
xchg
xchg
lcall
lahf
mov
mov
stc
cwtl
cwtl
cltd
out
xchg
xchg
nop
nop
xchg
les
fwait
in
xchg
xchg
out
lea
xchg
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jnp
mov
jnp
mov
jb
mov
outsb
ljmp
adc
lods
or
lods
or
pushl
mov
mov
pushf
movsl
movsl
movsb
and
add
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
popf
pushf
jmp
popf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
cltd
cld
xchg
cltd
pushf
stc
sahf
fwait
sahf
stc
lahf
xchg
pushf
cld
sahf
mov
xchg
push
xchg
push
jge
cwtl
dec
js
lcall
pushf
push
imul
movsl
push
jmp
ljmp
adc
stos
adc
lods
adc
mov
push
mov
push
mov
insb
mov
cltd
scas
mov
scas
lods
scas
movsb
movsl
movsb
sub
movsl
movsb
mov
add
add
add
pop
pop
adc
mov
ljmp
pushf
call
sahf
sahf
lcall
mov
mov
call
mov
decl
jge
xchg
ja
lcall
xchg
dec
jp
xchg
jo,pt
xchg
cs
decl
adc
or
pop
call
pop
jmp
adc
lods
sbb
mov
outsb
pushl
push
outsb
mov
and
mov
and
roll
ret
xchg
lods
mov
scas
scas
mov
lahf
sahf
mov
add
pop
pop
adc
lods
mov
shll
pushf
popf
popf
jmp
test
jmp
stos
stos
ljmp
fwait
sahf
decl
pop
ja
mov
decl
sub
mov
pop
incl
add
incl
add
mov
push
decl
add
fwait
add
sahf
add
cmpsl
or
mov
outsl
pushl
sub
mov
sub
ret
inc
sub
dec
das
jg
cs
inc
mov
enter
sarb
lret
mov
add
add
add
add
add
push
push
adc
cmpsl
lods
ljmp
sahf
jmp
test
ljmp
stos
stos
pushl
lods
scas
jmp
mov
mov
push
incl
or
test
push
incl
add
mov
push
decl
add
xchg
add
lcall
jmp
adc
mov
aaa
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
sahf
fwait
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
decl
add
popf
add
mov
add
lods
add
pushl
cmp
int3
inc
mov
rolb
call
dec
fmuls
call
dec
xchg
fimull
fisttpl
ficoml
call
test
std
mov
mov
movsl
movsl
movsb
arpl
mov
add
add
add
fwait
xchg
cltd
add
inc
adc
jp
movsl
lahf
mov
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
mov
pop
call
sbb
lea
pop
decl
add
nop
add
xchg
add
pushf
add
add
cmpsb
add
test
add
js
into
inc
mov
aam
cltd
fcoms
ficoml
fcoml
ficomps
jmp
push
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
cmpsl
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
js
lahf
lcall
mov
stos
lods
pushl
mov
mov
mov
mov
ljmp
inc
je
xchg
pop
call
push
call
or
call
add
fwait
add
mov
add
stos
add
mov
data16
mov
xor
fbld
fisubs
in
test
jecxz
cmpsl
call
push
ljmp
fldl
mov
test
mov
lahf
lahf
add
inc
inc
adc
jp
xchg
cltd
call
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
cmp
sub
fwait
das
outsl
lcall
sub
xchg
push
call
add
lcall
ljmp
add
mov
pushl
movq
roll
fsubrl
jmp
outsl
stos
jmp
jo
jmp
jo
ljmp
in
jae
in
jne
out
jbe
in
jb
jmp
mov
mov
cmpsb
cmpsl
lcall
sahf
add
jge
ds
insl
js
lea
sahf
lcall
mov
mov
mov
mov
mov
mov
cmpsl
scas
lcall
jo
sahf
aaa
jbe
mov
xor
cltd
push
call
add
lahf
add
mov
add
mov
pushl
add
sbb
fsts
jmp
js
ljmp
jmp
mov
out
cmpl
push
xchg
push
cmpb
mov
inc
mov
test
daa
lahf
sahf
sahf
add
add
add
popa
add
ss
jne
jge
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
sarb
rol
pushl
insl
mov
fwait
cmp
movsl
inc
jge
movsb
inc
jg
mov
pop
call
pop
jmp
add
scas
add
mov
fs
mov
add
iret
es
jmp
mov
repnz
push
pop
push
xchg
ret
push
xchg
ret
clc
xchg
push
mov
out
mov
fnstenv
clc
lods
lods
stos
mov
pushf
popf
xor
pushf
popf
add
add
add
add
xor
push
inc
inc
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
jge
lcall
cmp
dec
cmp
xor
pusha
lcall
add
test
pop
ljmp
add
add
roll
dec
add
call
xor
mov
out
xchg
push
lcall
repz
push
fwait
lret
lcall
sti
popf
int3
cli
sahf
int3
cli
lcall
loopne
lret
dec
mov
mov
mov
sahf
mov
nop
add
add
add
das
das
or
cmp
dec
jecxz
pusha
decl
mov
mov
mov
sar
ret
ret
mov
leave
inc
mov
lahf
jmp
dec
xchg
lods
push
xchg
mov
pop
pop
lcall
add
lods
add
mov
popa
mov
add
movl
je
fiadds
in
mov
push
movsb
int3
push
movsl
into
clc
cmpsb
iret
cld
cmpsl
sar
cld
cmpsl
iret
cli
cmpsl
sar
std
test
iret
cld
cmpsl
sar
negl
lret
dec
enter
mov
into
mov
xchg
xchg
add
cltd
fwait
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
je
jb
mov
mov
ret
mov
ret
ret
ret
ret
inc
inc
enter
rol
mov
cmpsl
jmp
mov
scas
dec
test
mov
add
mov
add
mov
arpl
mov
add
int3
add
xlat
add
fists
jnp
out
pop
cmpsb
push
sahf
leave
sti
scas
aam
cli
mov
cld
scas
sar
cld
mov
cld
mov
cld
mov
std
mov
mov
std
mov
std
mov
push
movsl
mov
call
lret
mov
mov
lahf
lahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
outsl
outsb
mov
fcom
fcom
jmp
xlat
xlat
test
int3
int
leave
leave
lret
lret
leave
lret
lret
enter
mov
mov
scas
push
mov
stos
cmp
lcall
add
lods
add
mov
mov
add
rolb
outsb
call
add
loopne
je
ljmp
cli
lods
aam
mov
fcos
mov
fdivr
mov
mov
fdivr
inc
std
mov
lret
jmp
mov
call
lret
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
mov
pop
out
call
test
jecxz
leave
fstp
fsubp
fcmovu
fdiv
xlat
cli
aad
fdivr
int3
ror
mov
imul
jmp
add
mov
mov
add
lret
add
add
faddl
jne
in
ja
in
xor
cli
mov
std
ret
inc
loop
std
inc
std
inc
fdivrp
dec
loopne
dec
fdivrp
dec
cli
mov
lret
lret
into
mov
mov
xchg
adc
add
add
incl
std
incl
incl
hlt
div
or
out
in
pop
jmp
out
sub
out
in
dec
call
call
jmp
aad
jmp
mov
xchg
cmpsl
cmp
movsb
push
jmp
add
mov
fs
mov
add
int3
add
xlat
add
loopne
jbe
ljmp
sti
mov
loop
dec
jecxz
dec
in
std
int
dec
loop
dec
loope
dec
loopne
dec
loop
dec
loop
std
shl
std
shl
cli
ret
out
mov
inc
cmpsb
cmpsl
mov
xchg
cwtl
add
add
add
incb
incl
div
testb
repz
repnz
out
lock
pop
out
icebp
lock
in
in
pop
loop
lds
xchg
sti
mov
push
pop
jmp
add
mov
data16
mov
add
roll
jo
fiaddl
jbe
in
jns
in
push
pop
stos
cli
mov
cld
iret
in
dec
jecxz
shr
shr
call
in
call
call
std
xlat
out
std
fucomi
fld1
shl
push
ret
aam
in
lret
lret
test
test
and
xchg
xchg
add
std
cld
add
clc
add
sti
stc
add
div
or
aad
xor
mov
xchg
negb
add
cmpsb
add
lods
add
mov
add
lret
call
add
fildl
jbe
call
sbb
cld
fld1
fucomi
fucomi
fsubr
fucomi
fucomi
fsubrp
fsubrp
fucomip
std
shl
push
ret
aam
out
rcl
iret
clc
stos
stos
lods
lods
xchg
xchg
xchg
jo,pn
jo
xchg
xchg
xchg
add
loop
add
mov
xchg
lods
jge
repnz
and
sahf
add
cmpsb
add
mov
popa
mov
add
int3
add
add
fiadds
je
ljmp
cld
nop
shl
std
fsubrp
fucomi
std
fldl2e
std
fldl2t
xlat
call
std
shl
cli
shl
cld
shl
clc
iret
clc
int3
fdivr
cmc
ret
xlat
in
mov
fcos
fcom
sti
mov
mov
lcall
add
add
add
xlat
xlat
add
mov
subb
push
lahf
add
ljmp
add
mov
add
iret
add
xlat
add
add
ljmp
sti
xchg
cld
lret
cli
int3
jecxz
cld
stc
mov
aad
hlt
mov
sar
repnz
int3
call
mov
sar
jmp
vmaskmovdqu
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
into
int3
add
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
dec
push
jno
rorl
jns
loopne
cmp
dec
cwtl
jmp
scas
lret
mov
out
enter
ret
cld
loopne
cli
fnsave
lock
int
fmul
iret
iret
aad
loopne
fcmovb
call
in
test
out
out
popf
call
lret
leave
push
lods
lods
lods
adc
cmpsl
cmpsl
cmpsl
add
ret
mov
sahf
lods
aam
dec
cmp
test
insb
lods
and
mov
js
mov
dec
test
ret
push
mov
lret
arpl
hlt
rorl
mov
mov
enter
int
ror
int
aam
shlb
xlat
rcl
jg
fcmovu
jb
fnstsw
gs
in
out
jmp
xor
div
mulb
icebp
repnz
fcmovnu
or
mov
int3
add
add
add
rol
mov
mov
les
push
lock
sbbl
mov
test
mov
pushf
lret
mov
enter
int
addr16
rclb
rcl
dec
xlat
aad
aam
xor
daa
fcomp
ficompl
fstl
fucom
loop
in
call
repnz
add
cld
cmc
add
std
sti
add
incb
std
std
incl
mov
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ror
xor
int3
lret
daa
int3
rcl
and
rcrl
rcl
rclb
rcl
rorl
rcr
push
rcr
add
fcmovnu
add
add
jecxz
add
in
jmp
lret
aam
std
std
std
add
mov
add
rol
ret
mov
rol
sub
mov
mov
push
ret
or
enter
leave
enter
lret
add
aad
add
fcom
add
fcom
add
fcom
add
aam
add
fsub
add
fiaddl
fnstsw
loop
fiadds
in
call
add
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
lds
mov
mov
mov
stos
stos
stos
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
scas
mov
adc
sarb
iret
into
shr
aam
aam
rcl
sar
iret
ror
cli
lret
int
stc
lret
hlt
mov
mov
iret
stos
lods
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
ror
iret
xlat
aad
call
aad
call
ror
dec
int
dec
lret
lret
mov
mov
cld
stos
stos
stos
icebp
xchg
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
jne
je
data16
dec
inc
inc
cmp
sub
sub
ss
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
call
rcl
call
rcl
dec
lret
int3
inc
mov
rol
pushl
test
sahf
xchg
xchg
cwtl
jmp
jo
xchg
pop
push
push
dec
add
add
add
add
add
add
cmpb
jnp
jnp
addl
aam
imul
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jo
jno
scas
scas
mov
mov
mov
mov
mov
mov
rol
mov
mov
mov
test
fwait
pushf
call
xchg
fwait
lcall
dec
dec
dec
dec
adc
wrmsr
add
add
add
add
add
pop
lcall
pop
pushf
cwtl
cwtl
fcoml
addb
jge
jge
jp
js
jns
jp
jnp
jns
jb
jb
push
push
push
cmp
aaa
popf
popf
popf
mov
scas
scas
repz
scas
scas
sti
scas
scas
scas
std
test
sahf
sahf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
cmpsb
cmpsb
cltd
je
je
adc
adc
add
add
add
add
outsb
outsb
insl
pop
lods
movsl
stos
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsl
jo
mov
cltd
lcall
std
mov
call
pushf
sahf
ljmp
test
std
mov
mov
stc
mov
mov
cmpsb
mov
addb
add
add
add
add
pop
or
scas
mov
cmpsl
lahf
movsl
decl
decl
cwtl
xchg
std
popf
sahf
sahf
sti
mov
lcall
push
push
push
jo
pop
pop
outsl
insl
outsl
insl
xchg
subl
mov
std
xchg
mov
ljmp
jle
pushl
pop
mov
jge
mov
scas
lods
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
movsb
test
xchg
nop
call
xchg
lcall
lcall
fwait
sahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jg
sahf
dec
jnp
movsb
inc
js
lods
aaa
jbe
mov
je
mov
outsb
pushl
sbb
mov
mov
mov
scas
scas
jle
mov
add
add
add
pusha
pop
pop
or
mov
call
lahf
sahf
jmp
mov
xchg
decl
addb
xchg
jb
cld
xchg
pusha
test
xchg
dec
jp
xchg
cmp
xchg
sub
xchg
sbb
cltd
adc
lahf
punpcklbw
test
sbb
mov
insb
pushl
sbb
je
mov
test
scas
xchg
sahf
sahf
lahf
adc
add
add
popa
pusha
popa
or
mov
stos
movsb
cmpsl
jmp
cmpsb
cmpsl
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
push
mov
decl
adc
test
push
decl
add
xchg
add
fwait
add
or
mov
jb
mov
das
jle
ret
das
jg
leave
xor
lret
dec
pop
xchg
inc
stos
mov
mov
mov
test
add
add
add
add
popa
or
movsb
stos
in
mov
cmpsl
ljmp
mov
pushl
cwtl
mov
decl
adc
xchg
push
incl
add
nop
add
xchg
add
sahf
add
cmpsl
add
mov
insl
inc
ss
int3
inc
mov
iret
inc
mov
rolb
call
inc
xchg
fiaddl
call
popa
lahf
inc
cmpsb
mov
mov
mov
movsl
mov
std
add
add
add
popa
or
lahf
mov
ljmp
mov
mov
mov
stos
call
sbb
pusha
decl
or
call
add
sahf
add
cmpsl
add
lods
add
jbe
iret
dec
xchg
fcomps
fcompl
ficomps
jmp
pop
mov
fisubrs
dec
test
cld
mov
mov
cmpsb
stos
cmpsb
xor
add
add
dec
pop
jl
jnp
popf
xchg
cltd
jecxz
mov
mov
mov
mov
mov
mov
mov
sahf
data16
xchg
cs
sub
and
xchg
cvtdq2ps
xchg
add
sahf
add
test
pop
ljmp
or
int3
xor
jmp
insl
test
in
lods
jmp
jo
in
jno
jmp
test
std
mov
cmpsl
test
addb
add
dec
pop
outsb
outsb
imul
test
fwait
lcall
mov
mov
mov
jmp
cmp
lahf
cmp
pushf
sub
call
add
movsl
add
lods
add
mov
inc
or
aad
xchg
jmp
js
jmp
mov
out
test
push
xchg
fisubrl
mov
push
cltd
cltd
lcall
sub
push
push
push
dec
pop
addr16
xchg
mov
mov
mov
rol
ret
ret
mov
xchg
jmp
sub
cltd
pop
pop
jmp
add
mov
arpl
mov
adc
mov
push
xchg
cwtl
xchg
stc
cltd
lret
pushf
lret
push
xchg
jmp
stos
inc
mov
stos
popa
mov
add
add
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
inc
ret
ret
pushl
push
xchg
lods
dec
test
mov
add
pusha
pushl
addr16
add
and
push
movsb
int
clc
test
cli
test
iret
std
stos
sar
lods
sar
stc
cmpsb
lret
jmp
mov
inc
rol
stos
test
sahf
or
add
add
dec
dec
dec
aaa
jb
je
stos
stos
test
out
into
lret
cmc
lret
sti
leave
lret
mov
mov
stos
bound
jmp
add
mov
gs
add
into
add
flds
ljmp
std
mov
cld
mov
fcos
std
mov
fdivr
std
mov
sar
jmp
rol
scas
scas
scas
mov
add
add
add
add
or
rcl
dec
loopne
loope
loopne
fstp
fcmovnb
fcmovu
fcmovu
xlat
xlat
out
shll
test
pop
pop
ljmp
add
leave
add
add
in
jp
icebp
push
mov
sti
loopne
inc
loop
inc
std
leave
std
leave
loopne
dec
loope
std
fdivr
out
mov
leave
divb
pushf
sbb
add
add
std
add
incb
jmp
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
fs
add
int
outsl
fldl
jne
ljmp
cld
fdivrp
sti
shl
shl
std
shl
shl
call
call
shl
push
xlat
fcmovne
sar
mov
mov
add
incl
incl
cld
cld
cld
pop
aad
aad
mov
pop
mov
lahf
or
stos
add
mov
gs
add
rolb
jo
loopne
jbe
out
and
std
shl
fld1
fsubr
fldl2t
std
xlat
out
fld1
std
shl
push
fdivr
loope
xlat
sti
mov
sahf
lahf
das
add
add
int
int3
or
arpl
ljmp
add
enter
aad
jb
loope
ja
out
xor
cli
lret
loop
clc
lret
loopne
cmc
fsin
hlt
xlat
icebp
ret
std
lock
aam
in
in
aam
jmp
shl
in
fsubr
mov
test
incb
aad
aad
mov
jae
or
mov
imul
sbb
int
jnp
xlat
sub
pushf
clc
loop
mov
out
in
lret
jmp
fnstsw
lret
leave
loopne
iret
mov
jecxz
ficompl
in
jmp
rorl
mov
add
lods
lods
stos
add
xchg
movsb
les
pop
xchg
mov
nop
fidivrl
andb
into
mov
les
rol
int
ror
into
pop
ror
rorl
fcomp
cmp
das
in
fisubs
in
icebp
adc
in
in
or
std
std
incl
std
incl
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
xor
enter
rcl
rclb
rol
adc
rcl
or
loope
or
into
int
stos
stos
stos
add
std
incl
incl
fwait
lcall
vshufps
int3
int
stos
stos
stos
add
std
std
add
add
add
add
add
lock
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
enter
mov
mov
scas
mov
insb
stos
stos
stos
xor
jne
add
add
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
enter
sar
aam
std
rcl
sar
into
iret
into
std
mov
stc
mov
test
andb
push
add
add
add
add
add
add
add
add
jno
jae
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
aam
dec
into
iret
dec
enter
mov
lcall
mov
push
add
add
add
add
jae
jne
test
adc
outsl
outsb
ret
popa
mov
push
outsb
jb
bound
pusha
pop
pusha
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jae
daa
es
add
add
add
add
jb
jae
fwait
xchg
lcall
test
clc
xchg
or
addl
push
push
push
inc
mov
pushf
into
mov
mov
xchg
decb
mov
fwait
fwait
pushf
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
lods
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
pushf
pushf
pushf
cmc
cwtl
cltd
cltd
in
addl
imul
jge
xchg
aam
lea
pushf
mov
pushl
xchg
mov
test
lods
push
stos
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
fwait
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jbe
out
xchg
fs
push
jl
lcall
ljmp
pop
outsl
pushl
cmp
popf
scas
lock
mov
imul
into
add
xchg
pop
scas
movsb
lods
test
sahf
pushf
popf
jmp
cmpsb
call
push
decl
inc
je
mov
imul
push
arpl
xchg
adc
cwtl
or
mov
sbb
je
mov
sub
ret
ds
rcrl
subl
je
push
mov
mov
cmpsb
ljmp
mov
lcall
sub
decl
or
mov
push
decl
add
mov
adc
shll
dec
ds
roll
call
inc
mov
push
xchg
dec
lcall
mov
add
add
push
cwtl
xchg
xchg
test
lahf
movsb
cld
lods
scas
scas
pushl
mov
movsl
call
decl
pop
push
call
add
stos
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
movsw
call
fwait
mov
test
cmpsl
cmpsb
pop
add
add
arpl
adc
popf
fwait
pushf
cld
mov
mov
mov
mov
scas
lcall
xor
lcall
lcall
add
mov
xor
call
jnp
out
jle
push
jle
fistpl
mov
and
add
add
dec
adc
imul
mov
mov
mov
rol
mov
arpl
lcall
add
pop
pushl
or
fimull
in
mov
hlt
xchg
push
cwtl
leave
stc
xchg
enter
mov
movsl
sub
inc
aas
inc
adc
push
xchg
xchg
mov
inc
sarl
test
sbb
movsb
add
mov
fs
add
vmwrite
jmp
scas
push
cmpsl
int
stc
lods
iret
sti
lods
sar
cld
scas
sar
std
lods
iret
jmp
lret
mov
cmpsb
ds
std
add
xor
add
mov
mov
aad
aam
aam
aad
rcl
shr
leave
lret
mov
mov
jmp
add
les
imul
out
xchg
clc
nop
mov
fdivr
std
ret
inc
std
rcr
lock
shl
test
dec
addb
add
in
or
jmp
out
outsb
movsb
and
pusha
mov
add
faddl
jne
out
cmp
std
into
in
dec
out
shl
call
in
std
shl
push
aad
into
in
lods
scas
scas
popa
addb
add
std
incb
std
push
lret
int
sub
lahf
sbb
stos
add
mov
add
loop
jns
repz
cmpsb
inc
loop
jmp
std
aam
std
aad
sti
shl
push
fdivr
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
ret
ret
mov
cld
lods
add
push
iret
push
je
fstpl
jg
jmp
lods
cld
out
mov
shl
jmp
rcl
out
shl
out
aad
jmp
fcmovu
scas
ret
lds
cltd
lcall
add
add
sahf
lods
xchg
dec
and
push
mov
ret
int3
int3
jbe
mov
fdivrs
lret
int3
outsl
fmul
rcrb
rcl
dec
in
loopne
out
out
in
out
in
sbb
sarb
cmp
mov
lods
push
mov
mov
ret
les
int
fisttpll
int3
into
int
aad
push
incb
addl
add
stos
std
incb
sarl
add
std
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
jecxz
pop
mov
std
and
jns
in
mov
inc
mov
sub
ficoms
pop
pop
push
pop
negl
pop
inc
inc
or
or
xacquire
xor
imul
lods
sub
outsb
fucomip
mov
xchg
xchg
mov
xor
or
and
inc
sbb
xor
or
jo
sahf
mov
bound
mov
call
adc
test
jmp
push
icebp
xor
adc
fbstp
iret
ss
mov
and
jmp
insb
lea
sub
add
adc
stos
pop
lods
call
mov
in
xor
mov
mov
imul
bound
mov
push
fsubr
sub
cmp
ret
out
sarl
mov
repz
push
fdivl
popa
repz
xor
cld
popf
out
push
sub
rcl
addr16
sti
loopne
cmp
das
iret
lahf
rcrb
pop
pop
std
repnz
adc
mov
add
xchg
out
and
fmull
insl
sbb
mov
and
jno
xchg
cmpsb
int3
push
mov
popa
cmpsl
mov
les
adc
pop
push
popf
fwait
stos
loop
out
dec
mov
std
jmp
pop
imul
jp
cli
cs
dec
ss
pop
xchg
test
lahf
jo
aaa
mov
lock
xchg
jns
fistl
xchg
cmpsb
xor
daa
unpckhps
sti
arpl
rcll
lock
data16
inc
sahf
inc
int3
jl
mov
dec
push
fisubrs
mov
fdivs
fdivrs
cmp
ret
mov
movsl
sub
jo
lock
sub
test
testb
loop
xchg
cld
push
movsl
arpl
leave
bound
xchg
cs
inc
mov
je
es
inc
or
adc
and
ljmp
fisttpll
je
aaa
adcl
push
iret
hlt
arpl
adcl
mov
jo
or
movsb
sarb
push
nop
push
cmp
mov
in
push
pop
inc
aam
sti
cmpl
pop
scas
cli
xchg
inc
xorb
sar
jg
test
popa
push
cmpsl
mov
push
mov
loope
js
push
movsb
xor
adc
nop
inc
mov
out
pop
lods
movsb
xor
repnz
rolb
dec
mov
sahf
roll
cwtl
push
ss
stos
xlat
jnp
xchg
rorl
clc
cmp
cmp
jnp
ss
popf
inc
cs
das
repz
lcall
hlt
fildl
fnstenv
fldl
shrl
mov
aam
movsb
roll
mov
fwait
jnp
das
jo
mov
jae
adc
xor
mov
fs
iret
addr16
sbb
into
into
icebp
adc
mov
mov
or
sub
out
out
adc
mov
push
dec
fwait
sub
in
push
sbb
sti
pop
push
dec
cmpsl
xor
inc
call
into
adc
push
leave
cwtl
mov
jns
mov
lret
jae
inc
outsl
repnz
sahf
mov
lods
icebp
inc
adc
mov
dec
call
dec
es
cmpsl
pushf
paddb
pop
inc
test
inc
xor
push
cmovns
push
icebp
data16
pop
sbb
out
dec
dec
or
xor
cld
mov
cmpsl
adc
add
cmp
fisttpll
xlat
test
adc
data16
test
jp
fildll
sbb
inc
push
outsb
add
adc
fldcw
das
adc
mov
outsb
xchg
sub
sbb
sbb
push
push
insb
dec
les
cmpsb
repnz
mov
push
pop
inc
fdivrp
pushf
scas
jno
jecxz
clc
sbb
cmp
sbb
jae
insb
cmp
out
movsl
jmp
mov
mov
xor
push
call
outsl
sbb
dec
xchg
fnstenv
inc
push
lea
jo
push
test
inc
mov
roll
lds
icebp
pop
pop
or
daa
aaa
aaa
in
hlt
cmp
mov
adc
mov
mov
mov
mov
cmpsl
pop
lock
jl
sbb
gs
pop
ss
mov
nop
and
mov
push
sti
mov
lcall
mov
xor
inc
xchg
jp
sahf
adc
sbb
cmp
push
cwtl
and
xchg
jl
stos
pop
ja
or
mov
fisubs
leave
mov
daa
popa
out
fcompl
nop
dec
jae
and
shll
xlat
or
push
mov
xchg
jmp
push
fwait
inc
pop
jl
push
loop
or
in
or
mov
in
insb
and
or
jbe
pop
jmp
shlb
xor
xlat
push
loope
adc
arpl
pop
cmp
mov
cmp
fstl
cmpsl
jg
dec
fisubrl
inc
jle
push
sbb
sahf
rorl
je
cmp
nop
dec
cmp
fucomip
push
pop
push
dec
out
scas
sti
mov
arpl
jmp
or
or
or
test
cmc
push
push
cmp
sub
push
pop
mov
shl
idivl
xor
data16
sbbl
or
dec
jg
cmp
mov
or
cmpsb
imul
int
stos
inc
dec
xor
ror
push
daa
add
cwtl
das
movsl
out
loopne
in
fidivl
lcall
and
lods
ja
push
sub
add
in
subl
mov
ror
mov
inc
lret
pop
add
ja
xchg
or
scas
les
iret
mov
cld
push
movsl
je
ja
sub
or
icebp
sbb
and
sub
shl
jns
xchg
je
shr
cli
fstpt
jae
lods
mov
inc
daa
xchg
out
aam
xor
inc
cmpsb
add
js
aad
mov
sub
xor
out
adc
jno
jne
mov
mov
mov
mov
stos
xor
push
pushf
out
xchg
mov
push
movsl
dec
paddsw
outsl
sbb
out
shll
repnz
inc
adc
inc
arpl
or
mov
rorb
and
aas
inc
std
mov
mov
sbb
fwait
lds
cmc
aam
xlat
push
cmpsl
fisubs
loope
dec
lret
mov
add
xlat
mov
fstl
jb
adc
aad
add
jo
lea
xchg
push
jl
add
add
mov
and
ficoml
xlat
xchg
gs
sub
pop
cmc
sbb
jl
sub
mov
xor
mov
dec
roll
je
hlt
insl
es
sti
xchg
int
hlt
mov
sbb
int3
inc
aaa
into
jno
xor
push
xchg
push
in
les
dec
in
in
or
xchg
insb
add
cmp
and
mov
aas
push
int
adc
stos
bound
insl
iret
and
mov
fists
int3
lret
or
cs
popf
repnz
jmp
push
jecxz
stc
dec
adc
mov
or
fstpt
test
add
cltd
sub
mov
dec
in
push
out
xor
pop
std
pop
cwtl
and
insb
push
dec
mov
out
sbb
cmp
bound
or
movsb
mov
fwait
jnp
jge
mov
jmp
mov
sub
xchg
fstpt
mov
adc
push
popa
clc
aas
lcall
push
xchg
push
mov
test
insb
xlat
pop
mov
mov
pop
fidivl
dec
adc
loopne
das
into
add
scas
xor
dec
in
push
xor
add
push
ljmp
jno
sub
cmpsl
sbb
jle
lds
lods
inc
rorl
lret
bound
add
js
pop
mov
cltd
pop
sahf
lret
aam
jmp
icebp
inc
imul
xor
lods
mov
fmulp
es
es
icebp
ret
mov
add
mov
js
xor
bound
inc
xchg
sub
sub
inc
jns
jp
loop
and
inc
sub
xchg
mov
inc
icebp
mov
addr16
or
into
inc
outsb
add
mov
inc
fdivl
imul
pop
sbb
outsb
loope
pusha
and
out
stc
and
mov
pop
xor
mov
test
pop
pop
leave
pusha
dec
sti
xlat
outsb
xor
and
testb
and
adc
lahf
subl
xchg
movsb
mov
push
xor
jmp
pusha
leave
imul
inc
fcoml
out
lock
mov
mov
insl
je
inc
fidivrl
pusha
cltd
xor
inc
addr16
js
push
call
cmp
sti
xchg
fisubrl
add
sbb
pop
fidivl
data16
jae
xchg
testl
pop
mov
mov
sbb
aas
jo
mov
fdivl
sarl
lds
es
lods
clc
mov
ljmp
test
push
popf
gs
push
mull
mov
mov
ret
mov
std
rcl
mov
jnp
jmp
pop
cmc
sti
mov
push
inc
push
fnsave
pop
sahf
mov
leave
pusha
std
xor
dec
cmpsb
pushf
pop
scas
xor
jo
jne
inc
add
ficomps
push
movsl
inc
pushl
adc
adc
cmpsb
stc
nop
sbb
test
cmp
stos
cltd
es
mov
fucomip
xchg
dec
outsb
add
in
xor
insb
add
es
xchg
in
or
jns
sub
cmp
push
adc
jno
fistl
movsl
inc
je
ss
in
adcl
pop
jne
and
es
mov
cwtl
cli
mov
stc
mov
push
out
push
cwtl
xchg
aas
or
xor
fcmovb
cmc
xor
xchg
mov
stc
call
or
mov
pushf
call
adc
mov
xchg
mov
cmp
nop
ret
pop
enter
fs
push
in
xor
frstor
and
mov
in
mov
fdivl
xor
push
jmp
mov
or
jnp
dec
in
mov
in
add
jae
xchg
cs
int
push
test
mov
push
jnp
jne
fdivl
and
sub
inc
pop
xor
push
in
fwait
xor
jb
dec
fs
nop
out
call
idivb
sub
fstps
and
scas
clc
gs
xor
pop
cmc
ret
stos
adc
sahf
xor
ljmp
mov
pop
xchg
sub
orl
mov
mov
ret
mov
mov
xchg
and
fldenv
orl
mov
lret
sub
pusha
lahf
jl
adc
pop
scas
mov
lds
stos
mov
insb
add
xlat
stos
inc
leave
jne
xchg
scas
ljmp
jb
das
out
sbb
ret
lock
mov
outsl
push
add
movsl
cmp
stos
sub
mov
mov
xor
cwtl
data16
add
or
mov
add
fisttpll
xchg
fnsave
push
jmp
sub
adc
das
inc
mov
push
inc
in
popf
adc
push
mov
sbbb
gs
mov
dec
add
scas
sbb
clc
lea
jne
or
inc
inc
xchg
sub
out
das
hlt
push
sub
gs
lods
push
imul
pusha
ja
sbb
cmp
rclb
js
aad
lret
bound
jp
fldt
inc
testb
ss
sub
xor
aas
jl
mov
add
aaa
into
xlat
and
push
cmpsb
mov
mov
dec
lret
bound
xor
pusha
push
pop
mov
dec
stc
iret
sbb
sbb
mov
rcrl
stos
inc
loop
test
lea
jbe
push
mov
lret
lods
daa
pop
hlt
cmp
dec
loop
fadds
lcall
test
repnz
pop
scas
mov
xchg
sub
leave
pusha
jg
cmc
mov
adc
cmp
shll
int
mov
adcb
push
fidivs
fwait
shrb
fs
pop
lods
jbe
add
testb
das
jl
jo
out
test
scas
test
repnz
inc
xor
and
loopne
push
and
mov
dec
int3
inc
fadds
imul
into
jle
out
bound
pushf
nop
jmp
out
push
and
xchg
in
cld
sbb
inc
fcmovu
dec
or
cmp
test
pop
testl
pusha
cmp
or
add
adc
je
enter
cmpsl
xchg
sub
iret
cmp
mov
mov
and
jle
pop
hlt
iret
packsswb
cmp
inc
fabs
lret
shrl
add
mov
add
mov
sub
cltd
inc
das
xchg
mov
dec
loopne
dec
es
adc
test
shlb
ja
fs
pop
test
imul
sub
xchg
stos
lds
dec
in
cmp
ja
rolb
xor
enter
neg
jo
mov
jo
jnp
movsb
cmp
cmp
or
loope,pn
mov
rcll
outsb
aam
add
push
push
mov
out
daa
fldlg2
and
in
mov
std
in
or
adc
lds
mov
movsl
xor
mov
les
cltd
data16
and
enter
dec
jmp
je
ds
and
or
lret
bound
mov
inc
fst
xor
lods
inc
mov
push
insl
jnp
adc
xchg
dec
in
testb
ljmp
shl
push
lods
xor
or
or
add
test
lret
mov
fisttpll
into
dec
mov
adc
cmp
push
mov
into
sub
flds
call
cmpb
mov
jle
inc
fdivr
pushl
into
lock
stos
jo
sbb
test
lret
lock
sar
in
push
lods
or
push
push
xchg
mov
fidivl
fadds
fnstsw
cs
gs
loop
add
mov
inc
fnstenv
push
ljmp
cmp
fidivs
sub
lret
adc
sub
mov
mov
scas
das
icebp
lods
pop
out
adc
cmp
mov
push
in
sahf
scas
or
jecxz
push
out
jae
xor
adcl
std
cmp
xchg
sub
jg
cmp
clc
mov
cmp
ret
pop
mov
les
iret
adc
inc
fidivl
loopne
cmp
movsl
cmp
push
cmp
outsl
xor
push
pop
jno
sub
xchg
in
xor
ss
sbb
inc
adc
jbe
iret
cmc
or
and
sarl
or
lret
xchg
ds
in
jl
push
call
popf
xor
cmp
lods
push
ljmp
adc
xchg
cmp
shrl
or
aad
mov
cmp
xchg
sub
dec
imul
in
in
mov
or
xor
test
xchg
sub
adc
loop
jecxz
imul
mov
adc
ljmp
rclb
in
pop
bnd
push
push
movsl
aaa
in
adc
aam
bound
fcoms
add
mov
test
mov
jg
push
xor
xchg
and
and
out
xchg
sub
cmp
mov
andb
or
and
lds
adc
sbb
xchg
xor
adc
jb
adc
scas
add
cld
rcll
lods
notb
dec
stos
push
int3
fistpll
adc
push
jp
ljmp
xor
cmp
lds
or
std
popl
cmp
jno
mov
loope
sbb
sub
rclb
dec
mov
test
loope
xchg
adc
arpl
jnp
inc
sbb
neg
je
cmpb
sub
int
mov
outsl
loop
adc
or
outsb
fwait
outsl
pop
test
and
in
cmp
add
lock
and
push
aas
stc
cmp
subl
sbb
cs
mov
cmp
add
sbb
push
push
cmp
xor
fsubrs
dec
or
jbe
in
push
cmpsl
inc
je
inc
adc
ficoms
sbb
movsl
icebp
jge
mov
xor
mov
pop
mov
adc
adc
mov
orb
mov
cmp
or
jnp
out
sub
shlb
xchg
push
xchg
jp
sub
dec
dec
add
jp
pop
movsb
dec
inc
arpl
aas
inc
push
in
jae
xor
popa
popf
adc
add
leave
jnp
and
andb
mov
cltd
xor
nop
adc
pusha
mov
add
xor
cmp
mov
mov
push
lods
adc
test
nop
scas
pop
cmc
mov
nop
negl
and
jl
pop
repz
popf
xchg
pop
js
dec
imul
cmp
in
dec
loop
push
xchg
sub
int3
add
nop
leave
add
xor
sub
in
push
outsb
add
cwtl
je
popa
inc
mov
scas
inc
cmp
xor
scas
pop
mov
in
fnsave
inc
fsts
mov
movsl
cmp
or
cmpsl
stos
and
data16
push
in
mov
loopne
mov
push
sti
push
jmp
je
adc
mov
test
push
out
cli
xchg
sub
incb
das
xor
js
push
jnp
xorb
pop
push
xor
shll
in
jl
sub
mov
xchg
sub
aam
or
and
sbb
jo
mov
push
les
mov
mov
hlt
cmc
mov
push
rcrl
call
pop
aas
jne
mov
push
cmp
aad
jne
mov
sbb
xor
orl
sub
or
push
arpl
push
ljmp
shrl
sbb
inc
cmp
cmpsb
dec
lret
outsl
pop
repz
mov
bound
fsub
js
imul
and
sahf
xor
sub
int
call
xchg
mov
mov
ret
and
lods
inc
or
in
adc
shrl
mov
xchg
xchg
pop
iret
rclb
dec
loopne
jmp
ljmp
clc
mov
mov
pop
cmp
dec
xor
and
hlt
xor
mov
lods
test
iret
fs
filds
lods
cmp
or
mov
mov
fmulp
scas
inc
push
shrl
add
sahf
jno
jnp
jle
xchg
int3
adc
dec
pop
int
push
fisttpll
mov
mov
outsb
popf
xor
xor
cmc
mov
gs
dec
mov
ret
outsb
or
pop
js
lea
iret
lock
ret
mov
mov
sbb
or
mov
cmp
pop
fwait
pop
aad
dec
cwtl
std
xchg
or
fidivs
outsl
lods
inc
popa
jle
jmp
inc
sbb
aaa
dec
or
or
cmpsl
lds
jmp
cmp
mov
mov
mov
ljmp
rcrl
and
sti
push
outsb
add
clc
jmp
jae
sarl
popa
pop
scas
or
test
sub
xor
xlat
inc
leave
popa
cmp
cmp
lods
inc
adc
stc
pop
xchg
mov
les
fbstp
and
or
mov
aad
mov
inc
mov
mov
or
mov
pop
pop
fsubrs
add
adc
ss
in
clc
pop
cmpsl
loopne
add
pop
push
and
mov
int3
arpl
popa
adc
into
pop
dec
loop
out
out
lret
xchg
fwait
mov
fistpll
add
mov
mov
ret
out
and
movsl
pop
cwtl
das
test
lret
jmp
or
sbbl
addr16
flds
mov
insl
aam
xlat
xlat
mov
stc
sub
int
pop
sahf
out
xor
or
inc
xor
gs
adcb
push
in
cmp
mov
mov
push
in
dec
sub
or
dec
fwait
jb
xor
stos
cmp
popl
movsb
jb
stc
xchg
and
in
test
jno
push
jl
enter
mov
movb
inc
hlt
rclb
gs
xchg
in
jne
mov
mov
jecxz
loopne
imul
lcall
sub
pusha
mov
addl
and
bound
cmp
shlb
pop
xchg
sub
sahf
xor
aam
int
push
cmc
lcall
dec
into
gs
xchg
scas
inc
sarl
jae
hlt
testl
lods
cmc
call
jmp
insb
add
or
ficompl
mov
shrb
or
mov
mov
inc
mov
xor
js
push
insl
xorl
xchg
or
mov
mov
stc
icebp
xlat
sbb
arpl
dec
in
test
pop
rclb
aam
out
mov
push
in
out
in
or
daa
mov
or
out
fbld
daa
mov
jle
and
push
sub
call
outsb
fwait
and
icebp
cld
sbb
cwtl
andb
push
push
xor
stos
dec
sti
xchg
sub
int
xor
sub
mov
jns
push
insl
sub
loopne
and
add
cmpsl
and
gs
pop
dec
out
and
jae
imull
shr
jle
mov
rcll
or
xchg
sub
fs
push
shrl
dec
xchg
sub
movsb
cmp
in
jl
out
jp
fwait
xor
mov
js
shl
jns
cmc
xchg
cs
push
cwtl
das
mov
aaa
dec
or
jnp
pop
into
push
popa
jge
xor
mov
shr
jle
push
xrelease
add
cwtl
andb
jmp
or
cmpsl
imul
mov
mov
fisttps
xchg
dec
filds
pop
mov
orl
xor
movsb
jne
cmp
mov
cwtl
loop
cmp
mov
sub
fnstenv
add
xchg
jb
or
in
xlat
fildl
and
and
sahf
xchg
push
outsb
pop
inc
addr16
ss
jle
outsb
add
in
aam
and
sbbb
inc
lret
sahf
fdivl
shl
js
and
dec
push
shr
sub
std
xchg
mov
push
out
rolb
loope
jno
mov
or
add
inc
arpl
mov
rcr
pop
icebp
in
icebp
cmpsb
cmp
stos
in
iret
data16
sub
cwtl
das
negl
mov
test
mul
out
mov
and
sbb
jae
aas
mov
clc
fsub
shrl
and
jp
outsb
shrb
jle,pn
mov
rorl
popf
adc
push
inc
mov
ljmp
or
pop
stc
rorb
mov
insl
scas
dec
sbb
pop
cli
adc
cmp
xchg
and
dec
or
jne
sub
inc
aas
jle
jno
popf
xor
inc
int3
sbb
lahf
jecxz
std
ss
clc
xchg
aam
insl
in
lret
scas
jmp
adc
addb
lret
into
shlb
inc
repnz
int
ret
mov
fcomip
ds
pop
test
popa
push
mov
std
out
test
cli
dec
lds
push
loopne
mov
daa
cli
push
cwtl
jnp
pop
repnz
and
mov
push
or
popa
clc
and
xor
xchg
mov
mov
add
or
pop
dec
xchg
add
lods
mov
cmpsl
sub
push
out
push
dec
imul
xor
sbb
hlt
hlt
xchg
jne
aam
xchg
sub
sub
jge
imul
rcrb
popf
in
mov
lods
hlt
jge
es
dec
rcl
push
push
loopne
repnz
clc
or
inc
mov
adc
aad
repz
shr
addl
aas
xchg
jge
and
in
jecxz
xchg
inc
cmpsl
shlb
hlt
inc
test
call
movsl
loop
xlat
orb
aad
and
mov
int
icebp
xchg
and
sbb
cli
xchg
int3
xchg
sahf
test
lret
ljmp
jmp
push
dec
shrb
xor
ljmp
jmp
jnp
add
or
aam
test
inc
enter
pop
sarb
icebp
dec
les
jle
negl
sarl
test
loopne
in
xchg
xchg
xchg
stos
loopne
or
jns
lcall
loope
repnz
mov
xchg
int3
mov
sub
cld
and
xchg
jle
or
ret
push
mov
jecxz
cmp
mov
adc
sbb
insl
push
jl
sahf
pop
repnz
and
xchg
out
sbb
mov
lret
fbstp
inc
sbb
xchg
add
sub
jle
jl
stos
mov
jp
stos
pop
neg
enter
pop
repnz
cs
lock
mov
or
imul
push
shlb
outsl
xchg
jbe
sub
jnp
addb
or
stos
out
out
rol
repnz
iret
inc
mov
push
out
movl
adc
and
and
jae
pop
in
lret
xor
les
mov
sub
push
or
adcb
es
in
mov
push
cmp
pop
push
imul
jg
sbb
dec
jo
shll
lds
jmp
xchg
push
mov
mov
imul
scas
or
cmc
dec
sub
pop
outsl
sbb
lahf
jo
and
pop
aaa
js
je
adc
dec
cmp
xchg
fldl
xor
mov
inc
dec
push
mov
addr16
pop
mov
jbe
ja
jp
fists
push
in
outsl
shrd
and
inc
jns
mov
xor
repnz
sub
and
dec
and
pop
push
test
pusha
cltd
cs
mov
lcall
dec
dec
inc
xchg
sub
pop
cmp
mov
imul
sub
enter
mov
inc
add
push
fcoml
sub
add
pop
aas
mov
pop
scas
into
das
add
jecxz
lea
dec
rclb
inc
fdivs
lret
ds
mov
stc
nop
mov
push
jecxz
xlat
cmp
pop
mov
xor
xor
add
mov
int3
arpl
jns
lret
jb
jmp
dec
test
jns
pop
jl
and
sub
in
cmp
inc
inc
sbb
sbb
int
cmp
pop
and
mov
lock
cmp
cld
test
sbb
lret
mov
push
iret
xor
cli
outsl
pop
repnz
mov
stos
incl
add
in
sbb
jb
fnstsw
fstpt
insb
testb
div
pop
sbb
mov
stc
sub
push
mov
movsl
pop
add
push
adc
pop
mov
mov
xor
add
push
ljmp
mov
xor
imul
sub
dec
repnz
mov
scas
enter
and
popa
cmp
stos
inc
add
call
jl
inc
jmp
leave
lods
sub
gs
mov
out
fsubl
out
call
shl
das
xor
mov
pop
fsubl
jge
int
push
xchg
fadds
popf
movsb
lods
add
mov
dec
call
mov
mov
fcmove
inc
jmp
mov
pop
loop
sub
pop
or
mov
les
das
sbb
bts
and
fbstp
inc
je
jae
repz
dec
mov
adc
sbb
hlt
ljmp
pop
push
inc
cmp
repnz
sub
daa
mov
push
mov
jg
daa
insb
stos
mov
jne
insb
and
dec
dec
lods
leave
out
out
jmp
and
loope
cmpsb
in
test
test
iret
mov
pop
and
mov
xor
into
cmp
jbe
lods
cmpsl
mov
push
mov
sub
xchg
inc
scas
mov
mov
dec
dec
dec
gs
js
sub
pop
jno
pop
lea
pop
jecxz
bound
sub
iret
pop
lock
sub
repnz
insl
cmc
mov
dec
mov
js
mov
je
in
add
xchg
ss
xchg
cltd
rol
enter
pop
popa
clc
dec
fsts
jl
int
dec
jecxz
mov
cmp
mov
cmp
inc
mov
sub
insb
jns
loopne
push
adc
jbe
sahf
sarb
jbe
movsb
rcr
cmp
mov
rol
mov
imul
out
or
sbb
push
popa
gs
xchg
aas
pop
ljmp
outsl
push
mov
jne
out
push
mov
pop
xchg
cmp
jmp
dec
lods
ds
scas
sbb
and
push
mov
out
and
sbb
mov
or
sub
or
ror
inc
jnp
aad
fcomps
dec
pop
es
fcom
pop
pop
dec
xor
xor
std
mov
popa
ret
faddl
lods
pop
movsb
sub
jnp
add
jmp
bound
repz
mov
fidivrs
xchg
clc
loop
xchg
push
xchg
dec
mov
jmp
loop
xor
add
pusha
push
ret
jno
push
in
fwait
lret
clc
in
dec
out
adc
fadd
fmul
ljmp
jno
cmp
dec
xchg
xor
mov
add
popa
sti
in
mov
pushf
push
stos
int
xor
pusha
jmp
push
shll
cld
jp
je
nop
insb
jo
jb
sbbb
xchg
push
xchg
pop
cmp
push
mov
sbb
mov
adc
mov
hlt
mov
jne
pop
pop
mov
mov
fcmovnbe
xchg
adc
inc
sbb
scas
dec
inc
fldl
leave
pop
add
mov
sbb
inc
lahf
cmp
stc
test
lods
inc
adc
jno
push
push
out
pop
in
out
ja
xchg
sbb
test
mov
push
sbb
std
xchg
in
dec
fstpt
mov
mov
jl
pop
test
cmp
mov
mov
jl
loope
xlat
mov
dec
or
sbb
adc
orl
sbb
push
mov
cmp
lret
enter
mov
cli
fucom
out
mov
push
lea
sti
insl
movsl
loopne
mov
jnp
test
push
push
popf
inc
sarl
or
mov
adc
cs
or
push
divb
adc
imul
push
lahf
sbb
hlt
cmp
pop
xor
and
pop
test
add
xchg
and
cmovno
push
add
mov
testl
jle
push
mov
stos
or
mov
add
test
mov
js
pop
add
mov
jl
push
in
xor
and
leave
std
or
sbb
pop
leave
push
popf
ret
fs
xchg
mov
jo
movsb
scas
pop
xchg
imul
cmp
pop
out
test
add
pop
gs
mov
inc
sub
xchg
cmpsb
mov
sbb
out
lea
cmp
ss
push
call
pop
mov
sbb
cli
push
pop
dec
push
cmpb
push
iret
int3
cld
cmpsl
bswap
cmpsl
std
rorl
add
sti
sub
mov
cmp
int
mov
or
push
jo
cmpsl
fisttpl
jno
dec
xchg
lahf
jns
shll
push
lods
cltd
mov
imul
icebp
pop
and
data16
pusha
xchg
sub
or
shlb
sub
sbb
popl
dec
jno
aaa
into
js
jno
scas
or
imul
adc
push
xor
iret
mov
lahf
lret
and
sub
lahf
pop
repnz
sub
popf
int3
sub
subb
lahf
jno
out
mov
addr16
shl
fldt
adc
nop
push
jno
lods
arpl
xchg
into
test
out
mov
sub
pop
repz
pop
adc
dec
push
mov
test
int
fimuls
addb
inc
dec
imul
leave
mov
ret
repz
sti
aas
mov
dec
outsl
sub
lcall
jmp
idivl
xor
icebp
stc
test
inc
pop
add
mov
leave
es
sbb
adc
inc
xor
in
xchg
cmp
sbb
jmp
mov
insb
leave
xchg
js
ljmp
dec
jmp
push
rolb
addr16
jbe
scas
jl
or
mov
inc
push
xchg
mov
mov
and
in
push
sub
pop
mov
pop
sub
enter
pop
movsb
xor
idivb
lret
jmp
icebp
out
pop
stc
ja
mov
icebp
divl
int3
sub
sbb
fwait
mov
pop
lcall
je
clc
mov
cmp
lds
popf
loop
mov
cmc
lret
jbe
sbb
or
fidivs
mov
jnp
aaa
mov
imul
xchg
fwait
icebp
rorb
scas
pop
mov
mov
scas
cs
jns
xlat
or
call
sbb
xor
loopne
scas
pshufw
pusha
jb
fisubrs
call
ret
pushf
nop
popf
and
jmp
mov
jp
adc
stc
pop
out
lahf
out
je
into
xchg
sub
and
daa
cli
push
dec
mov
inc
mov
fmulp
inc
fcmovnbe
outsb
mov
int
insl
out
sarb
in
mov
dec
iret
push
mov
call
pop
nop
cmp
cmc
inc
cmpsb
cmp
movl
das
push
xchg
sub
loopne
sbb
mov
inc
push
insb
sbb
cmpl
pop
mov
das
and
shr
test
add
push
pushf
fs
mov
pop
sub
popf
sti
nop
scas
jb
loope
ljmp
sbb
cltd
loop
mov
scas
adc
jo
outsb
jae
cmpsb
fnstcw
mov
add
cwtl
mov
fldcw
pusha
iret
xor
arpl
and
subb
mov
iret
xchg
cmp
dec
cs
xchg
and
ret
cs
imul
shrb
pop
push
sub
outsb
push
out
stos
xchg
nop
mov
in
sub
jns
dec
dec
lahf
mov
ljmp
pop
aaa
sub
push
xchg
or
das
adc
inc
inc
mov
in
in
addl
xor
lock
je
jmp
in
xchg
les
adc
fmulp
pop
in
icebp
cmc
jne
or
xchg
test
mov
mov
jo
jbe
in
jp
andb
shll
cli
pushf
inc
or
add
insb
and
jo
lock
jb
addb
inc
fistpl
imul
dec
dec
mov
inc
in
sahf
out
jecxz
rclb
in
hlt
push
pop
adcl
dec
mov
ficomps
loopne
fadd
xor
enter
add
mov
nop
mov
rclb
jnp
dec
addr16
jmp
dec
xor
int
or
add
in
cmpl
add
roll
push
mov
sub
dec
leave
dec
sub
lods
faddp
push
aam
clc
xor
pop
add
and
test
xchg
iret
in
cmp
xor
dec
jae
cmc
push
movsl
lret
jle
test
xchg
idivb
cmp
ss
mov
ds
mov
xor
nop
aas
in
jno
inc
outsb
out
sbb
and
fwait
sbbb
xchg
push
or
pushf
inc
in
arpl
sub
pop
xchg
mov
push
sub
and
inc
inc
pop
cli
imul
nop
push
pop
arpl
and
lock
and
cwtl
leave
inc
roll
add
insb
mov
or
dec
jl
stos
pop
fucomi
dec
lahf
fdivl
es
popf
mov
push
fs
notl
inc
xchg
jns
call
mov
fbstp
mov
pop
sbb
xchg
lahf
add
les
dec
mov
dec
inc
mov
mov
jle
cwtl
adc
cmp
push
jmp
or
aaa
or
cli
mov
mov
cmp
pop
mov
mov
push
outsb
leave
pusha
mov
sarb
xor
gs
add
xor
mov
push
and
adc
pop
push
repz
push
sahf
or
push
in
fucomi
add
jo
jp
movsl
push
adc
cld
mov
pop
xchg
mov
xchg
xchg
icebp
mov
rcrl
sbb
aas
cmp
pop
or
icebp
imul
adc
mov
inc
in
or
cmp
rcpps
mov
nop
daa
test
mov
xchg
mov
pop
mov
adc
xchg
aam
ficompl
dec
lods
sbb
dec
int
cmc
push
frstor
pop
lcall
cmp
pop
jmp
nop
mov
mov
cltd
push
pop
xor
les
sahf
cmc
idivb
fdivrp
fstps
add
loop
jle
and
pop
ja
bound
dec
xchg
lods
pop
lds
jle
call
stc
ret
pop
dec
in
jns
das
outsl
enter
fwait
sbb
ljmp
in
daa
fidivl
incb
jno
insb
cltd
mov
mov
mov
dec
nop
daa
jg
push
testb
inc
mov
xor
xchg
mov
fldcw
fnsave
lods
xchg
lea
or
cs
cmpsb
daa
stos
repnz
inc
dec
mov
ja
insb
mov
xchg
add
insl
sbb
or
add
push
jmp
stos
pop
adc
jb
push
filds
ja
mov
push
or
xchg
fdivl
xchg
loop
cmp
in
mov
xchg
pop
mov
aas
or
mov
pop
movsb
inc
pop
cmpsb
stc
rol
inc
push
dec
push
in
jmp
lcall
rcll
lahf
add
xor
xchg
rep
pop
and
mov
mov
scas
xor
iret
outsl
xchg
out
push
sbb
nop
mov
mov
inc
xor
sbb
ljmp
lahf
ss
jb
push
int3
mov
inc
aaa
fcoms
inc
cmp
push
inc
xlat
mov
cmp
jp
shl
mov
adc
and
push
hlt
lret
bound
fyl2x
in
mov
cld
loop
mov
push
inc
xlat
out
mov
xor
jo
addr16
sub
jg
jns
or
sub
adc
sub
xchg
in
scas
adc
xor
mov
xor
dec
fadds
or
daa
push
ds
and
inc
pop
clc
in
scas
pop
bound
xor
int
movsl
cmp
sbb
xchg
push
jne
sbb
jne
add
pop
and
jo
jge
jp
stos
lret
inc
jne
lock
ljmp
mov
mov
rclb
mov
lahf
or
cmpsb
lahf
mov
jle
outsl
cmp
jb
jae
cmp
push
add
sbb
ret
aad
test
inc
insl
xor
dec
push
push
cmp
pop
cwtl
movsl
sbb
mov
fs
and
dec
jnp
xor
mov
movb
jb
xor
jmp
sub
sbb
sbb
cmp
out
xchg
pusha
jne
mov
daa
movsl
push
mov
add
imulb
xor
lds
pop
repz
arpl
or
mov
adc
pushf
dec
in
pop
outsb
mov
loope
jp
call
or
arpl
adc
dec
dec
pop
cmpsl
mov
jg
xor
addr16
push
jmp
cmp
xor
or
daa
xor
aad
or
dec
sbbl
lea
add
cwtl
dec
adc
dec
xchg
fwait
xchg
ljmp
xlat
das
xor
fnstcw
inc
mov
pop
or
mull
xor
loop
cli
loope
jbe
mov
popa
stc
stc
sbb
mov
mov
dec
add
and
mov
pushf
lods
jno
ja
orl
cmpsl
movsl
jo
cmpb
sarb
rclb
fcmovb
pop
push
mov
int3
xor
in
dec
loopne
add
or
mov
into
das
jmp
jp
out
fiaddl
pop
sub
lret
xchg
cmpsb
flds
pop
mov
mov
push
insb
addr16
jno
ret
shrb
pop
pushf
icebp
adc
add
mov
out
dec
sti
sub
shl
xchg
ret
std
xchg
cmc
mov
inc
and
pop
lods
call
mov
aas
out
cmp
daa
in
cmp
ss
jne
jb
imul
out
dec
daa
test
loope
jg
cmpsl
adc
cld
bound
mov
gs
cmc
es
dec
adc
stos
hlt
stos
andb
loopne
lahf
repnz
iret
mov
inc
xor
lahf
mov
jle
and
nop
dec
loope
ret
mov
or
and
push
fld
or
loope
out
ds
out
sbb
mov
loop
dec
aad
mov
or
in
cli
mov
xor
into
lahf
je
ror
or
mov
aam
repnz
push
mov
call
shr
xor
mov
loop
mov
call
insb
in
mov
mov
notl
stos
sub
pop
mov
dec
xor
jp
cmp
out
lods
pop
repnz
insl
add
add
xor
and
cwtl
das
test
mov
fsub
pop
sbb
aam
sub
in
insb
dec
repnz
popf
mov
cmpsl
lock
dec
jecxz
dec
arpl
stc
xchg
push
mov
sub
pop
pop
out
fcmovnbe
outsb
push
mov
xlat
repz
addr16
mov
mov
push
dec
mov
popf
add
cmp
cmc
pop
divb
sti
stos
mov
sti
aas
xor
mov
mov
cltd
out
cld
jmp
adcl
std
stos
cmp
add
loop
pop
add
xchg
lods
pop
daa
or
iret
and
in
test
cmpsb
inc
dec
mov
dec
fdivl
xor
outsb
mov
jmp
cltd
jg
inc
sbb
in
loope
test
dec
ficoml
xor
fwait
shrb
aas
push
fdivrs
orb
fimuls
mov
push
mov
cmp
add
mov
push
xor
sti
scas
les
push
hlt
add
push
int3
and
xchg
scas
outsb
in
xchg
icebp
in
lock
adcl
inc
pop
dec
and
ljmpw
fsubrl
ret
into
jmp
aaa
sbb
jae
mov
sub
xor
inc
int
gs
push
mov
sti
mov
pop
hlt
sbb
lret
jns
inc
pop
pop
pusha
jecxz
add
fidivrs
movsl
test
jg
ds
inc
pop
icebp
pop
es
das
and
loopne
sbbl
xor
mov
shrl
out
mov
dec
pop
mov
xchg
mov
mov
ret
or
or
mov
xchg
pop
loopne
mov
and
or
pop
mov
stos
roll
sbb
movsb
rorb
sbbb
pop
aad
cmp
and
push
ss
mov
imul
or
ret
stc
cs
add
cmp
push
adc
mov
push
cmpsl
call
xchg
pusha
xor
mov
cli
hlt
mov
fsubs
inc
inc
sbb
and
sbb
jle
mov
xorb
mov
add
inc
or
rcrb
fbld
cmc
in
lahf
sbb
ret
push
icebp
adc
imulb
or
daa
movb
dec
jo
jle
xor
push
fnstenv
xor
mov
test
lods
xchg
negb
imul
xchg
mov
je
add
testl
std
cld
mov
cmp
push
push
rcr
mov
fsubrl
rorb
push
out
xor
cmp
inc
mov
bound
cwtl
fwait
lock
mov
test
or
out
insl
adcl
es
movsb
dec
lock
subb
out
mov
sbb
mov
andb
adc
add
fisttpll
and
movsb
pop
adc
push
cmp
sbb
shrb
xor
jne
jno
push
addr16
sbb
mov
shlb
les
scas
sub
or
cmovs
aas
data16
push
and
sub
lea
push
outsl
adc
in
xchg
jecxz
jae
add
cmp
mov
insl
out
lahf
out
and
mov
mov
sbbl
pop
or
loope
mov
cmpsb
cmpsb
add
testb
and
fadd
push
inc
idiv
pop
imul
mov
push
lock
mov
or
int3
icebp
inc
lret
pusha
jl
stos
mov
aaa
out
push
sahf
ds
and
dec
xor
xchg
scas
jo
cmp
or
sbb
sub
in
lret
or
and
outsl
addr16
inc
movsl
mov
lret
xor
dec
sub
and
incl
xor
clc
jae
xchg
shld
jmp
dec
xchg
pop
push
sub
insb
nop
loopne
rclb
outsb
jl
push
out
xchg
out
cmp
mov
pushf
mov
lahf
and
ss
xchg
and
push
ret
aaa
cmp
adcl
cmp
jo
cs
sub
and
sbb
ret
add
popa
lret
int
test
dec
mov
mov
imul
imul
mov
adc
aaa
sahf
sbb
movsb
push
ret
lods
xchg
adc
mov
xchg
repz
popa
aad
sbb
dec
pop
cld
mov
push
stc
ss
sub
xlat
icebp
dec
ret
je
cld
stos
setbe
cwtl
lds
aas
mov
mov
xlat
mov
and
ljmp
imul
nop
or
adcb
and
push
das
fs
mov
lock
and
scas
scas
dec
sbb
pushf
cld
pextrw
clc
push
out
aas
sbb
inc
sbbl
inc
popf
sahf
push
sbb
and
add
sbb
push
mov
cmp
inc
cmp
in
and
fisttpll
test
fwait
sar
push
inc
mov
cs
jecxz
mov
mov
in
fwait
mov
mov
xchg
jno
push
cs
mov
adc
add
insb
test
stos
pusha
outsb
xlat
subb
mov
xchg
xor
xor
shll
movl
lahf
into
fadd
pop
in
mov
dec
jmp
mov
cmp
cld
rcrl
testb
pop
ljmp
push
test
adc
outsl
ret
adc
repnz
inc
pop
movsl
lds
cmpsl
pop
pop
pop
add
lods
mov
call
adc
mov
fwait
xor
mov
push
arpl
mov
sarb
in
push
mov
aad
xchg
cmp
aad
pushf
sar
add
ljmp
std
mov
push
dec
add
xchg
sub
aad
adc
mov
bound
mov
push
in
mov
or
lret
xchg
stos
pop
das
leavew
shll
xchg
dec
lods
je
daa
dec
sbbb
in
adc
stc
push
sbb
je
aaa
pop
inc
push
push
sub
popa
loope
ret
hlt
xchg
sbb
fisttpl
jl
adc
or
sub
xorb
jae
shll
bound
xchg
outsl
insb
pop
mov
cwtl
sub
or
fdivrs
mov
stc
je
ret
iret
fldt
mov
jecxz
jnp,pt
add
xlat
add
sahf
test
mov
dec
jnp
or
jecxz
rcll
loop
pop
scas
pusha
add
imul
loope
and
outsl
enter
test
ret
mov
and
cmp
mov
pop
or
popf
push
mov
cmpsb
sbb
lret
jnp
cs
jb
dec
lock
sub
jmp
dec
movd
adc
pop
jo
repz
cmp
mov
leave
icebp
mov
lods
and
mov
add
pop
push
push
mov
xor
mov
mov
je
jecxz
dec
adc
cmp
mov
xchg
jns
les
rolb
cmp
loop
test
int
punpckhdq
and
mov
dec
add
and
fs
jae
push
jmp
and
fcomip
mov
pop
jae
add
mov
push
fstl
and
jmp
adc
xor
mov
imul
or
fdivl
cld
jg
mov
adc
cld
test
cmp
or
pop
bound
shrl
imul
das
or
inc
pushf
add
into
fs
add
xchg
stos
xchg
mov
movsb
mov
insl
mov
ret
push
out
inc
or
sub
enter
pop
xchg
lods
sub
shr
dec
jns
stos
pop
sbb
xor
stos
inc
test
data16
test
mov
ficomps
mov
test
inc
and
inc
lret
mov
int3
test
jle
lods
addr16
test
inc
cmpsl
xor
arpl
mov
push
dec
and
pop
icebp
lahf
mov
js
add
int3
leave
insb
mov
mov
lods
and
xchg
subb
rcrb
dec
mov
imul
mov
mov
cmp
int3
mov
add
adcl
dec
sbb
xchg
imul
cltd
cmp
dec
jecxz
shrl
aas
bound
jmp
fisttpll
fimuls
jo
cwtl
in
adc
movsb
or
xchg
inc
data16
xchg
or
push
divl
out
mov
in
cmp
hlt
sbb
adc
movsb
les
mov
fs
sbb
sahf
dec
inc
iret
data16
in
insb
and
fs
aaa
jno
dec
mov
pop
aam
mov
pop
xlat
mov
mov
push
jne
adc
movb
das
or
push
pop
pop
mov
add
cmp
mov
lcall
daa
scas
cmp
mov
rolb
dec
loope
add
xor
dec
or
push
cmp
inc
push
repz
cltd
jmp
adc
and
stos
jp
shll
mov
rcrl
mov
lahf
sub
clc
shl
mov
sbb
add
lret
pushf
data16
mov
dec
sub
lret
enter
std
and
and
jp
jmp
and
push
push
popf
test
lret
pop
mov
pop
pop
movsl
cmp
loop
arpl
add
add
sub
pop
pushf
out
into
lock
fdivr
sahf
xchg
arpl
in
test
mov
cmp
ret
shl
push
nop
popl
es
mov
lds
leave
idivb
je
cwtl
mov
test
mov
stos
inc
shrl
xor
repz
sbb
fmul
xchg
mov
stc
mov
iret
xor
fsubr
cmc
push
push
in
test
jae
pop
pop
mov
mov
xchg
movsb
movsb
and
or
ret
pop
hlt
nop
fcmovnb
dec
ret
in
cmc
jns
sub
add
cltd
jo
mov
mov
std
inc
test
sbb
mov
push
mov
mov
into
fadd
in
pop
pop
int
idivl
mov
ja
outsl
inc
mov
movups
and
add
aad
mov
mov
lds
idivl
mov
cmp
push
pop
inc
sbb
mov
loope
cmp
add
in
mov
pop
jne
aam
inc
push
inc
and
movsl
mov
mov
shrb
xchg
stos
in
repnz
pop
push
cmpsb
lcall
neg
jo
push
push
stc
test
lret
in
ja
aaa
enter
addl
lods
inc
lock
insl
cmp
hlt
mov
and
inc
adc
mov
xchg
xlat
cmp
adc
out
xor
and
adc
jae
pop
jp
in
outsb
fidivs
sub
sahf
and
je
jl
mov
and
stos
inc
jns
add
jmp
mov
sti
test
lods
mov
cmp
jbe
adc
dec
lds
xchg
ret
stos
mov
mov
cmp
push
cmp
mov
sti
inc
cmp
jno
pop
scas
mov
push
aas
lds
adc
insl
inc
int3
lret
gs
pop
sub
push
fisubs
xor
mov
imul
jle
mov
dec
sbb
xor
fsubs
sbb
jb
xor
dec
jb
add
sti
cwtl
push
ja
in
xor
sub
jmp
and
cmp
mov
aam
pop
cwtl
arpl
popa
ljmp
andb
and
stc
test
hlt
pop
mov
movsl
mov
mov
sub
leave
sub
and
mov
ret
inc
clc
mov
xor
xorl
pop
ficompl
jb
jb
push
sbb
in
cmp
outsl
xchg
xor
fsubrs
inc
pop
outsb
mov
push
aaa
into
repnz
sbb
dec
adc
leave
xchg
pop
adc
out
mov
or
sub
in
push
and
cmp
push
pop
in
mov
ja
inc
cld
add
gs
pop
mov
into
cmp
xchg
dec
hlt
mov
aam
sbb
push
enter
fdivs
int
and
cmp
adc
push
lock
sub
cmp
sub
jbe
jno
sub
jno
fsubl
mov
mov
and
iret
out
xchg
or
jno
push
xchg
mov
xor
js
int3
das
push
fcomps
push
fmulp
mov
pop
mov
xchg
lret
std
cs
xlat
test
in
out
cmp
mov
cmp
sub
mov
negl
loopne
dec
mov
push
mov
xchg
fiadds
mov
jmp
dec
xchg
test
xchg
sarl
shlb
popf
push
inc
rol
mov
fdivs
in
popf
cli
cs
mov
fisubl
fyl2x
push
rep
xchg
xor
aad
iret
jbe
or
sbbb
push
loope
xor
cwtl
pushf
push
push
cld
xchg
loopne
bound
dec
cmp
sub
aaa
cmpsl
jp
mov
push
cmp
in
sub
jle
aad
sub
inc
stos
data16
std
mov
mov
fidivl
push
add
adc
cld
dec
js
push
mov
bound
aam
in
clc
jae
inc
bound
scas
cmc
adc
out
push
pop
clc
outsl
push
cmp
cltd
daa
add
pop
xor
sti
fs
arpl
push
pop
push
rorl
movsl
pop
ds
push
test
inc
fldt
xlat
mov
arpl
mov
je
mov
mov
mov
sub
xchg
adc
aas
cmp
fnsave
pushf
in
das
into
pop
ljmp
iret
fldl
aaa
mov
push
pop
xor
mov
scas
loopne
mov
testb
xchg
inc
xlat
gs
xchg
mov
dec
sbb
or
mov
jp
test
xchg
das
pusha
out
pop
push
stc
dec
mov
or
pusha
lret
push
rolb
and
jbe
jno
mov
hlt
mov
xchg
xchg
sbb
movsb
mov
inc
inc
push
out
mov
and
std
jne
adc
mov
hlt
inc
int3
lcall
mov
inc
mov
xchg
les
push
jl
adc
into
outsl
and
sub
and
push
sub
cmc
and
cmp
lock
inc
jg
xchg
outsl
inc
mov
out
xchg
or
cmpl
push
or
dec
mov
jns
call
sbbl
cmp
push
jae
mov
pop
xor
push
lods
inc
test
add
lods
addr16
fsubrp
sti
push
xchg
pop
sbb
subb
insb
or
lock
xor
inc
out
inc
ret
jb
addr16
add
mov
and
mov
sahf
stos
dec
cmp
mov
push
or
jle
fisubrl
or
pop
jb,pt
sbb
pusha
cmpsb
stos
push
xor
push
rorb
and
sbb
xor
add
leave
push
jne
dec
adc
mov
inc
push
add
sbb
cmp
sub
call
inc
or
mov
cmp
mov
pop
pop
std
jo
cmc
subl
lock
lds
jp
fnstenv
pushf
outsb
shlb
push
popf
outsl
int3
mov
mov
lods
sbb
fists
sbbb
leave
pop
imul
int
sahf
mov
imul
xor
cmp
je
push
dec
mov
xor
ja,pn
push
dec
pop
push
adc
stc
rclb
cmp
movsl
xor
cs
leave
add
enter
lods
inc
inc
call
into
and
mov
or
cmp
stos
cmpl
js
aas
sbb
jo
cmp
cltd
mov
mov
sbb
mov
cwtl
pop
inc
fcoml
cmp
insl
and
in
push
out
scas
imul
jo
sub
lea
jge
mov
loopne
sub
mov
cmp
dec
cmp
in
insl
jbe
and
pop
scas
add
xor
lret
xor
lds
adc
in
jge
arpl
cmp
sahf
test
mov
stc
push
cmp
testl
mov
lea
test
nop
add
arpl
mov
js
xchg
jne
add
and
dec
push
sub
xchg
clc
mov
cmc
lds
xchg
dec
test
in
or
lods
sbb
daa
cli
bound
js
sub
icebp
xchg
jecxz
leave
adc
or
leave
pusha
inc
or
xchg
stc
jmp
scas
inc
sub
movsl
outsb
dec
jecxz
in
nop
xor
jle
cs
jl
xchg
push
cmc
pop
mov
and
push
pop
fcomps
lock
xchg
push
clc
mov
scas
and
popf
mov
push
mov
sbb
push
shrl
add
es
divb
pop
cmpsl
adc
daa
mov
xchg
call
push
outsl
push
loopne
xor
xor
inc
fdivl
push
push
sub
inc
pop
lock
push
bound
ja
mov
pop
adc
or
or
sub
pop
xor
pop
movsb
xchg
pushf
add
xchg
jg
xor
push
cmp
jecxz
pop
iret
add
stc
sub
ficompl
sub
xchg
inc
mov
arpl
ljmp
stos
lcall
or
push
inc
test
cmp
popa
and
out
daa
pop
lods
inc
push
les
fs
bound
jmp
mov
sub
inc
xor
fcompp
push
fisttpl
cli
data16
shrl
scas
mov
out
test
add
inc
mov
fcmove
lret
adc
cs
mov
fs
arpl
cmp
aam
pop
sbbl
inc
mov
daa
mov
popa
sub
cwtl
mov
and
iret
fcmove
mov
stc
pop
pop
mov
pop
imul
pop
fistpl
in
test
nop
sbb
xchg
inc
jo
ss
dec
pop
mov
pop
mov
enter
add
shll
or
cs
pop
pop
aam
mov
pop
movsb
test
mov
lds
aaa
pop
push
pusha
aaa
or
int3
pop
and
aam
rorb
inc
jmp
jp
ds
gs
cmp
add
jns
xchg
aas
movl
call
lock
mov
lcall
cli
test
pop
add
pusha
das
push
mov
mov
push
add
pop
inc
iret
or
mov
int
xor
fistl
icebp
dec
sahf
push
push
mov
sub
push
pop
xchg
icebp
aas
xchg
mov
adc
push
xor
fisubl
mov
fwait
ljmp
push
add
sub
xchg
mov
outsl
mov
scas
insb
push
subb
daa
arpl
pop
lcall
jecxz
inc
std
movsb
inc
fidivl
hlt
mov
adc
data16
adc
in
int
fistl
push
pop
adc
push
icebp
jge
cld
mov
cmp
or
mov
inc
inc
call
test
sbb
and
stc
mov
stc
inc
xor
movsl
cltd
cmp
mov
and
pop
leave
sub
stc
lret
push
fldt
rorb
xchg
loop
cltd
mov
outsl
cmp
mov
xchg
xchg
fstpl
or
pushf
cmp
or
mov
pop
movsb
insb
lret
add
movsl
jbe
push
xor
nop
fcmovu
sti
push
test
pop
mov
neg
and
cmp
cmp
sar
dec
and
cmp
lret
cmpsl
ret
push
mov
adc
and
mov
and
jne
test
xchg
out
dec
sti
jae
outsb
pop
ret
cwtl
xor
push
mov
orl
stos
movsb
aad
shlb
test
loop
daa
imul
xchg
sbb
shlb
cmp
add
imul
mov
sbb
rcll
mov
into
pop
mov
movnti
mov
sbb
lds
mov
or
sbb
sbbl
incl
or
ljmp
jno
fwait
xor
ljmp
ljmp
pop
rorl
xchg
popf
inc
aas
mov
dec
scas
push
popa
aas
add
lods
ret
icebp
out
scas
add
sbb
adc
sbb
sarl
stos
dec
mov
jb
cmpsl
xchg
mov
subb
lahf
pop
adc
into
lahf
popf
pop
aad
adc
fs
les
pop
in
pop
lea
xor
or
ret
iret
mov
jl
stos
mov
aas
repz
sub
std
fildl
cmp
ss
xor
mov
loope
test
mov
inc
arpl
cld
and
fistpl
and
fs
dec
repnz
outsl
mov
lock
jnp
sbb
jno
je
clc
int
rcr
in
loope
fwait
aam
rolb
cmp
pop
xor
xlat
arpl
rcll
ds
in
mov
pushf
loop
add
iret
mov
xor
or
push
and
push
test
stos
lahf
fcmovu
xlat
arpl
imul
inc
add
sbb
lds
and
fisubs
pop
adc
mov
out
sbbb
lods
xchg
inc
sbb
mov
imul
fwait
popa
cmp
xchg
mov
pop
xor
cmp
dec
fucomip
lahf
jg
xor
or
lds
fmull
test
mov
inc
adc
xchg
fisubs
cmp
or
clc
sbb
sbb
stos
xchg
xchg
adc
enter
jnp
cmc
dec
push
mov
push
testb
mov
cltd
or
cmp
ret
pop
scas
cmp
das
pop
ret
dec
stc
int3
push
mov
xor
popa
es
loopne
rorb
aas
out
xor
insb
mov
push
icebp
mov
sbb
or
xlat
and
jmp
fisubl
inc
ja
cmp
xchg
sub
jle
in
xor
add
push
repnz
push
cltd
lods
negl
jmp
into
mov
mov
insb
xchg
pop
mov
test
lods
cld
push
dec
xor
jl
sbbl
repnz
icebp
adc
sub
pop
or
bound
mov
das
enter
shll
bound
movsl
adc
xor
cli
xor
mov
cmpsl
insl
pop
adc
or
stc
mov
and
fsubs
rcrl
inc
out
xchg
pop
jg
repz
outsl
push
test
jle
inc
daa
adc
mov
jmp
test
stc
cmp
or
inc
test
jecxz
xchg
jae
xchg
jp
xor
loopne
fucom
fdivl
sub
push
fs
stos
jge
or
mov
notl
inc
bound
stc
insl
sbb
cld
enter
push
out
popf
pop
lock
dec
dec
fdivl
xchg
enter
mov
out
enter
mov
pop
jae
sub
std
popa
nop
mov
xchg
enter
xchg
idiv
and
pop
mov
sbb
add
adc
movsb
lds
adc
or
mov
or
incl
test
lret
mov
insl
adc
fiadds
or
jmp
jb
in
lods
mov
fsubp
addb
mov
push
jo
add
popf
repnz
call
jb
iret
das
fsubrs
xor
adc
cld
xchg
scas
inc
addl
push
jae
mov
int
mov
push
loopne
les
xchg
scas
or
inc
lret
pop
imul
ljmp
outsl
add
adc
aaa
mov
out
aad
scas
or
sub
fwait
mov
xor
sub
lahf
test
sbb
jae
movb
fisubs
aam
pop
inc
cmpsl
jg
sbb
cld
fwait
shll
push
sub
es
xchg
int
pop
icebp
cmp
test
xchg
std
fucomp
cs
out
dec
imul
jbe
aas
outsb
dec
pop
icebp
mov
fs
lret
or
xchg
sub
jb
sbb
jle
in
mov
sbb
or
jmp
dec
xchg
stos
cmp
ftst
aas
mov
imul
adcb
mov
vpunpckhdq
add
xor
fwait
and
add
xchg
xor
xchg
repz
cli
js
push
pop
push
xor
mov
in
mov
mov
sub
lods
cmp
jno
clc
push
adc
jmp
add
int3
ds
je
mov
xor
mov
in
outsl
sar
imulb
cmpsb
ljmp
data16
push
jbe
fldcw
and
push
adc
dec
xchg
jno
jae
or
add
popf
aam
lret
jb
adc
jno
xchg
loopne
xor
and
lahf
pop
pop
std
cltd
mov
mov
std
scas
dec
add
stos
iret
inc
sbb
jne
pushf
and
rcll
or
add
loop
adc
push
div
push
mov
xchg
add
push
add
nop
cmp
mov
popa
cmp
idivb
dec
pop
dec
repnz
arpl
loop
adc
sbbb
ja
sub
dec
scas
jecxz
repz
stc
jno
out
push
xchg
sub
adc
inc
mov
jb
std
mov
push
inc
adc
leave
mov
hlt
push
jmp
lret
je
ds
pop
cwtl
ret
das
mov
inc
in
mov
lods
ret
adc
insl
mov
das
pop
dec
dec
mov
jns
push
sub
lcall
rcrl
repnz
cmp
insb
jmp
stos
inc
push
xchg
add
dec
sbb
xchg
mov
imul
xchg
push
sub
jecxz
pop
dec
mov
in
or
dec
cmpsl
out
pop
imul
insb
dec
pop
mov
insb
subl
dec
mov
into
lods
mov
iret
je
sti
rorl
mov
lret
ret
pop
lods
inc
mov
ljmp
notl
sub
or
add
adc
pop
les
push
xchg
repnz
inc
mov
xchg
clc
cmp
add
adc
ret
outsl
and
cli
arpl
sbb
inc
lods
inc
xchg
jmp
cltd
dec
testb
mov
bound
cld
cmc
mov
inc
pop
jmp
or
xor
cltd
std
sub
fsubr
cmp
mov
aas
scas
sbbl
or
push
fdecstp
mov
sbb
sahf
dec
scas
and
cmpsb
loop
arpl
jp
movsb
inc
sub
mov
cwtl
hlt
xchg
xor
jl
outsl
jnp
loopne
cmp
cmp
clc
mov
pop
jg
xchg
push
mov
xchg
movsl
rorb
dec
mov
andb
pop
adcl
arpl
popf
int
testb
adc
dec
lds
and
aam
push
out
cli
sub
cmp
push
fstl
pop
sbb
js
push
or
sarb
add
js
dec
mov
insb
int3
mov
ret
je
mov
push
jnp
cmp
jbe
dec
fistpl
sub
xchg
in
pop
fwait
in
jnp
in
and
loop
cmc
dec
xchg
inc
add
and
adc
or
or
cmp
into
adc
rcrb
inc
mov
dec
lods
ljmp
mov
cmpsb
sub
jns
pop
adc
aam
mov
stos
popa
les
imul
sub
jb
push
scas
fsubrl
shrl
dec
push
sub
sub
inc
mov
mov
rcll
sub
xchg
fs
mov
push
sti
fsubs
scas
inc
dec
xor
or
push
test
sub
sub
ss
sbb
stos
pop
mov
lret
xor
or
jnp
xchg
sub
mov
xchg
ficoml
jmp
daa
incl
xor
fbstp
enter
scas
mov
or
xchg
lods
loopne
add
out
mov
and
cmpsb
inc
fistl
and
cmp
xchg
in
xor
lods
push
pop
xor
iret
pop
sahf
jb
lea
and
and
pop
jnp
lea
stc
nop
xchg
mov
pushf
and
iret
xor
or
xchg
lods
cmp
or
sarb
dec
es
mov
sub
in
movsl
push
inc
icebp
push
je
dec
stos
jmp
xor
in
inc
pop
inc
lcall
pop
outsb
dec
jecxz
push
adc
push
gs
sub
rorl
iret
mov
xchg
repnz
repnz
mov
lods
mov
fwait
movsb
popa
mov
jmp
jb
jnp
xchg
and
dec
hlt
cmpsb
lock
imul
btr
lea
add
loope
sbb
mov
rolb
push
lods
sbb
mov
dec
sub
mov
cmpsb
jmp
cmp
pop
cmp
cmp
ret
sub
in
cltd
stos
add
cs
add
repnz
add
mov
cmc
and
cmp
or
inc
xor
out
xchg
or
fnstenv
loopne
adc
cmpsb
mov
call
mov
xor
insb
push
testl
fstl
mov
cmpsb
and
push
aam
cmpl
push
in
lcall
inc
std
add
and
push
add
pusha
push
cwtl
mov
mov
imul
push
movsl
test
add
push
mov
outsl
sub
mov
or
insl
aam
mov
inc
mov
pop
loop
cmpsl
adc
fbstp
jl
daa
outsl
andb
jmp
lret
cmp
add
lcall
push
in
pop
dec
call
js
mov
call
or
xchg
xchg
arpl
popa
push
repnz
aas
lods
xlat
dec
cmc
adc
ret
sahf
jb
cmp
jnp
mov
cmp
ja
enter
sti
inc
mov
lock
std
mov
leave
arpl
xor
cltd
ljmp
mov
push
addb
dec
inc
ljmp
or
mov
in
sub
out
pushf
dec
dec
es
hlt
ds
aas
clc
lcall
pop
vpaddw
jo
xchg
popf
or
sub
stos
pop
sbb
mov
call
test
mov
sbb
pop
pushf
popa
push
or
call
fistl
jne
mov
cmp
dec
imul
insb
push
popf
les
pop
sub
xor
aad
sahf
mov
dec
lods
xchg
dec
dec
bnd
lea
and
pop
push
sbb
xor
pop
mov
xor
iret
rclb
subl
and
fistps
push
fldl
in
mov
fldl
in
push
mov
addl
lds
loop
sahf
jo
push
iretw
sub
dec
add
in
xlat
push
pushf
and
and
pop
in
lar
mov
mov
adcb
popa
dec
repnz
jae
call
lret
push
push
lock
xchg
lods
adc
xor
dec
cmp
loop
movsl
sbb
nop
faddl
or
je
ss
pop
insl
xorb
aaa
cld
xchg
movsl
mov
sbb
aas
cmp
dec
fldl
xor
sub
insl
fwait
je
lret
mov
hlt
outsl
pop
sbb
enter
arpl
and
sti
pop
sbb
add
jmp
lds
mov
pop
ss
cld
mov
lock
sub
mov
mov
fnstsw
xchg
xor
mov
push
or
jbe
xchg
das
push
add
inc
jbe
dec
test
or
sub
sub
dec
leave
fiadds
ljmp
pop
ja
cmpsb
mov
jge
mov
pop
hlt
mov
jmp
repnz
xchg
and
rol
push
call
xorb
pop
pop
in
xor
mov
mov
jl
lahf
mov
mov
xchg
in
or
or
cmp
push
lahf
dec
jb
clc
push
jmp
sbb
or
sbb
shrb
mov
pop
cltd
xor
stos
fnstenv
in
loope
and
pop
in
sbbl
outsl
lock
xlat
pop
out
call
xorb
add
push
repz
mov
mov
xchg
xchg
cmpl
stos
rclb
mov
push
cmpsb
mov
and
push
test
inc
sub
push
mov
inc
subb
adcb
shrl
or
xor
ljmp
daa
inc
inc
test
cli
jne
inc
cmpsl
sbb
push
add
jne
and
push
in
xchg
sub
insb
mov
dec
fdivl
shrl
pop
sahf
sti
or
hlt
inc
movd
shrl
hlt
aad
adc
mov
std
rcrl
inc
push
js
ss
add
jae
adc
call
loopne
sbb
loope
iret
lea
call
addr16
fdivrl
fwait
arpl
adc
dec
repz
and
sarb
dec
pop
xchg
jge
cld
fstpl
push
jmp
jmp
aaa
mov
ss
adc
xorb
pop
mov
stos
dec
dec
xchg
pusha
fsubl
cmp
xlat
iret
idivl
lods
inc
iret
adc
cmp
sub
sub
xor
pop
dec
mov
cmp
into
popa
xor
jne
push
jno
xchg
nop
lods
mulb
negb
fs
sbb
cmpsl
ds
sub
mov
sbb
jmp
cld
rcrl
mov
in
push
xor
pop
cmp
nop
imulb
and
jge
into
scas
add
or
pop
or
and
or
and
push
les
lret
inc
xchg
mov
sub
js
sbb
arpl
dec
pushf
jne
dec
pop
shl
and
cmpsb
pop
outsb
shlb
add
popf
inc
fwait
or
mov
xor
fstl
fsubs
and
mov
test
inc
aaa
fwait
in
mov
loop
je
mov
mov
xlat
mov
and
lea
xor
arpl
ljmp
mov
lahf
jecxz
iret
loop
inc
mov
ss
int
sbb
push
imul
aaa
repnz
loop
push
push
data16
add
test
or
dec
fsubp
scas
xchg
lret
xchg
xchg
mov
ret
mov
les
cmp
adc
adc
movsl
cmp
daa
cmp
es
test
jp
sbbl
cmp
filds
adc
leave
movsb
push
mov
sub
cmpsb
inc
xlat
xor
int
aam
inc
inc
cmp
call
scas
inc
adc
int3
in
mov
jbe
pmaxsw
mov
ljmp
fstpl
mov
push
and
xchg
jl
repz
repnz
fildl
jbe
dec
in
movsl
dec
repz
lcall
add
pop
jmp
mov
es
rolb
jp
lcall
lods
sub
es
jnp
int
sub
bound
or
adc
xchg
pop
cltd
fwait
push
mov
inc
stos
add
scas
dec
pop
subl
pop
sbb
cmp
std
adc
jnp
jb
cmc
fwait
ss
sbb
lcall
scas
fnstsw
fs
sbb
mov
imul
scas
inc
push
push
mov
jno
cmp
adc
xchg
lock
cmp
add
jne
outsb
call
into
lods
push
push
icebp
or
pop
adcb
mov
xchg
inc
clc
sahf
jbe
xchg
mov
mov
jle
insl
js
sti
pushf
xor
out
mov
xor
mov
jl
push
ljmp
jno
add
xchg
ja
and
mov
add
xchg
add
inc
mov
sub
movsb
out
lock
mov
sti
rclb
xor
pusha
mov
xchg
fidivl
mov
pop
dec
clc
iret
cli
jle
fs
inc
pop
mov
cmpsl
mov
sbb
cmp
mov
mov
mov
jle
fdivs
xchg
rcrb
sub
mov
lahf
das
mov
mov
dec
cmp
addr16
mov
mov
mov
lahf
cli
inc
mov
dec
lock
mov
lret
es
xlat
push
dec
adc
lods
jo
jne
pop
xor
iret
aam
out
and
mov
or
hlt
jp
dec
lock
mov
in
sti
cs
sub
pop
test
adc
sub
inc
dec
movsl
lret
cmpsb
ljmp
pushf
xor
fwait
cltd
std
int3
and
adc
outsl
sub
movb
add
jbe
mulb
ds
add
sbb
jb
add
add
pop
shl
fs
push
cmp
cld
mov
daa
aad
dec
shlb
lods
cmp
and
and
sub
out
fstl
lahf
rorl
out
jb
and
les
mov
in
sbb
pop
cmp
pop
mov
xor
dec
jbe
ljmp
fnop
push
cmp
fcoml
roll
scas
inc
dec
fadd
pop
into
mov
out
fsub
cmp
xor
ret
adc
loope
stos
orb
sbb
inc
roll
mov
add
mov
lods
mov
inc
pop
add
adc
sub
xchg
sub
sub
add
sub
js
sbb
or
lods
inc
xchg
test
sbb
int3
pop
dec
in
add
imul
pop
hlt
jbe
add
test
test
daa
std
int
leave
lock
sub
pushf
push
fldenv
in
inc
fstp
adc
inc
cmp
sbb
push
push
mov
data16
adc
sahf
jg
les
dec
mov
dec
ret
insb
xor
cmc
stos
cmp
test
xor
fnsave
dec
ss
into
dec
mov
push
hlt
aam
fwait
xor
out
add
imul
dec
gs
lahf
jno
mov
fsubrs
int3
pop
imul
mov
push
mov
mov
pop
pop
test
mov
adc
sub
fists
lods
das
cwtl
inc
call
or
xchg
ret
outsl
xor
and
jo
repz
inc
mov
test
cld
negb
outsb
dec
fbld
dec
popl
mov
push
aas
add
imul
and
push
shll
or
cmp
push
loopne
lcall
lods
call
dec
add
sbb
lret
fmuls
mov
out
dec
adc
xchg
inc
leave
and
jae
push
jne
sbb
les
sub
push
mov
icebp
js
mov
addb
pop
xchg
shlb
and
and
inc
fidivs
pushf
sahf
or
or
lock
push
out
sub
jne
pop
pop
addr16
xlat
and
lcall
pop
repz
xor
mov
inc
into
xchg
add
cwtl
xor
dec
mov
ljmp
jne
push
negl
dec
jl
je
add
ror
dec
and
sbb
pusha
inc
adc
and
push
ss
insl
stos
inc
mov
nop
push
movsl
rorl
add
dec
shlb
or
imul
jg
stc
ja
fwait
xor
bound
jno
das
push
mov
cmpsl
mov
jmp
ds
out
mov
jle
jb
ljmp
fildl
mov
data16
pop
lock
ret
hlt
add
jle
stc
scas
fcmovnbe
pop
add
iret
in
lea
inc
sbb
xor
pop
mov
dec
cwtl
pusha
stos
cwtl
outsb
shlb
mov
rol
scas
cmp
in
repnz
rclb
adc
xor
mov
sub
push
dec
mov
or
pop
cmp
mov
fists
das
fiadds
mov
mov
or
lock
in
and
mov
mov
or
fsqrt
mov
movl
and
pop
sub
push
arpl
out
pushf
inc
std
mov
dec
pop
mov
loop
pop
cld
shrl
outsb
sbb
inc
jp
push
inc
shlb
rol
xchg
movsb
divl
pop
fs
gs
test
rorl
mov
sbb
jno
in
idivl
mov
adc
stos
add
pusha
ds
shlb
clc
adc
mov
dec
sbb
pop
outsl
jnp
push
scas
or
jge
jle
rorb
mov
leave
sbb
out
push
mov
ds
jae
and
push
lea
mov
ljmp
fisubrl
xor
ja
fwait
push
notb
push
popf
dec
insl
imul
je
fiaddl
xchg
daa
repnz
es
mov
cmp
sub
in
xor
jns
adc
outsb
pop
pop
cmp
ror
lock
push
push
lds
cmp
jo
sti
or
lahf
stc
nop
roll
movsb
aas
mov
dec
cmp
repz
fidivl
sbb
insl
fildl
push
mov
adc
cmp
test
sub
or
sahf
jno
dec
repz
aam
push
rorl
pushf
in
stos
xorl
jge
sbb
test
mov
xor
sub
dec
ljmp
adc
cmp
jecxz
mov
mov
inc
lods
sub
cmp
imul
call
in
ret
jle
dec
out
stos
ljmp
xor
cmp
lods
xchg
pop
sub
sbb
hlt
enter
lcall
jno
ds
mov
or
fmuls
inc
sarb
jae
xor
and
or
sarb
ret
shll
cmc
jo
mov
push
cwtl
je
pushf
inc
loopne
and
mov
hlt
jl
xchg
adc
dec
lea
iret
cwtl
dec
loope
inc
push
push
or
ror
pop
aas
imul
add
pop
pop
shlb
jne
pop
or
inc
push
add
cli
js
inc
mov
pop
push
cmpsl
push
divl
inc
xchg
fsts
xchg
icebp
dec
adc
or
sarb
dec
pop
sub
push
stos
pop
shl
pop
push
stc
xor
xchg
push
ds
insl
fcoml
call
test
jo
cmp
adc
mov
es
loopne
cmp
add
xor
pushf
or
movl
rcrl
sbb
sbb
incb
inc
mov
mov
mov
fistpll
cbtw
icebp
or
fldt
cltd
xchg
xchg
and
xor
fs
aam
addl
sbb
or
rol
aad
pop
or
pop
dec
in
popf
xor
arpl
decl
rolb
pop
ss
cmp
or
test
push
adc
jbe
subl
fidivs
mov
xchg
cmp
fnstenv
pop
mov
jnp
aam
das
ret
jae
dec
jmp
out
stc
mov
mov
mov
mov
mov
or
mov
mov
cmp
aad
fnsave
andb
jnp
inc
mov
push
mov
imul
repnz
enter
jmp
sub
mov
xlat
sbb
dec
inc
test
movsb
add
adc
mov
je
mov
cmpsl
aam
mov
jns
scas
stos
shrl
mov
jg
push
pop
mulb
enter
jne
ja
cmpsb
add
cwtl
xchg
pop
lea
push
dec
lret
sti
lods
adc
fnsave
mov
or
jecxz
clc
int
push
mov
jle
lods
mov
rcl
adc
out
inc
lgs
leave
jae
jmp
ljmp
fcoms
pop
xchg
es
popa
xor
cmpsl
ja
adc
pop
je
xchg
in
rcll
mov
inc
pop
insl
jge
int3
inc
fidivrs
mov
and
cmp
clc
xchg
lahf
fimull
cmpsb
cmpsl
loope
roll
xchg
call
stos
ret
fwait
cs
fnstenv
fs
cmpsl
sub
inc
inc
ljmp
insb
inc
dec
das
shlb
pop
sub
loopne
mov
xor
or
shrl
into
pop
je
sbb
xchg
or
cmpsl
cmp
lods
push
jp
dec
cld
and
adc
mov
sub
jmp
outsl
pop
fisubrl
xor
in
pusha
mov
incl
cmp
and
out
cmc
jo
adcb
mov
mov
outsl
xchg
fidivrl
mov
mov
mov
xor
push
sarb
mov
das
lds
pusha
and
mov
into
daa
xchg
cs
repz
xor
cmc
mov
test
cmp
lods
cld
push
fiadds
adc
xor
lock
stos
out
jns
inc
fildll
xorl
pop
sarl
lock
aaa
rcrb
or
test
lods
xorb
into
loopne
add
pop
lret
mov
lock
shrb
jp
orb
test
add
push
fs
bound
andb
inc
pop
lahf
movsb
fwait
dec
out
mov
and
inc
mov
jg
push
mov
fldenv
fists
xor
jl
mov
ljmp
pop
in
mov
jo
cmc
imul
mov
sub
gs
sub
repz
in
fwait
mov
ds
test
xchg
repnz
jnp
or
gs
xchg
in
pop
data16
sub
repz
pop
jbe
adc
push
cwtl
out
lret
adc
lahf
daa
mov
cmp
xchg
test
repnz
mov
or
out
pop
sub
xor
stos
divl
push
sbb
mov
xchg
iret
push
pop
cmp
inc
in
lea
mov
inc
nop
adc
push
sub
test
outsl
hlt
ljmp
adcl
scas
fdivrs
pop
stc
je
dec
cmpsb
sbb
sub
push
mov
fwait
xchg
addr16
sub
cmpsb
mov
je
mov
fwait
add
dec
cmpsb
and
dec
mov
adc
test
inc
xor
or
pushl
xlat
outsb
arpl
dec
fisubrs
insb
in
lods
fdiv
or
and
sub
sub
rcl
and
xchg
lods
inc
vpackuswb
jbe
decb
fcmovbe
insb
sbb
fdiv
cmp
nop
jg
imul
push
pop
aas
sahf
test
repnz
sub
nop
daa
adc
pop
ret
pop
dec
jecxz
stos
inc
out
push
mov
icebp
icebp
stos
lock
push
sbb
cmpsl
mov
fbstp
rorl
out
inc
pop
pop
loopne
or
leave
push
mov
sahf
push
xchg
pop
int
fisubs
and
fildll
int
scas
ds
push
sub
sbb
pop
in
or
inc
lods
ds
pop
stc
inc
mov
call
inc
bound
mov
and
pusha
outsl
or
lret
adc
add
push
push
stos
mov
fisttpll
xor
stos
ja
push
jmp
jb
sub
add
mov
lods
in
xchg
repnz
lea
addr16
jno
aam
sbb
push
in
cmp
or
in
push
push
insb
cmp
das
inc
pop
insl
sub
dec
xchg
push
popf
les
xchg
xchg
in
outsl
lock
js
out
mov
jp
xchg
lret
loop
shrl
rcl
repnz
mov
cmpsb
loope
add
sarl
add
mov
dec
rorl
xlat
jno
sub
in
arpl
add
and
mov
hlt
add
fnstcw
inc
iret
xchg
icebp
cltd
cmpsl
enter
add
push
test
pushf
push
lods
mov
sbb
dec
push
inc
fildl
mov
and
ja
push
repz
push
cmpsl
popw
inc
lret
inc
frstor
inc
and
inc
jl
out
sbb
int3
arpl
subl
icebp
mov
ret
pop
outsb
insb
pop
insl
imul
xchg
push
or
xchg
cmp
cmpsb
sbb
lods
ja
fidivs
xor
dec
mov
push
lret
or
jecxz
imul
sbb
daa
xchg
imul
rol
cmp
dec
in
ss
add
insl
mov
stos
js
dec
stos
or
jp
lods
add
pusha
js
mov
cmp
sub
mov
jp
sbb
int
sub
mov
pop
icebp
rcrl
mov
jns
mov
xchg
cli
lret
gs
notb
in
clc
xchg
push
or
enter
xchg
and
divb
xchg
jbe
sbb
or
mov
leave
outsb
push
rorl
loop
inc
hlt
fnstenv
sbb
sub
add
mov
mov
iret
cmp
repz
push
dec
repz
icebp
or
push
pushf
pushf
xchg
xchg
push
cmpsb
dec
es
push
ss
into
sub
dec
add
outsb
adcb
test
add
push
mov
sti
rorb
sub
ja
adc
mov
mov
iret
das
pop
add
push
jbe
rorb
enter
clc
sub
inc
sbb
pop
xchg
sbb
adc
mov
sahf
mov
scas
jl
stos
lds
xlat
outsb
mov
ret
insb
jle
mov
outsw
sub
xchg
add
movsb
cmp
lea
test
ljmp
mov
movsb
pop
ss
lahf
das
lcall
in
add
mov
sbb
aas
push
in
adc
je
in
cmpsb
test
fdivs
add
cmpsl
adcl
push
leave
jae
into
test
cs
inc
adc
jns
mov
dec
xor
add
cmp
jne
insl
push
icebp
cmp
ja
rclw
push
push
xchg
adc
rcll
inc
add
xlat
cmp
and
clc
mov
in
addr16
adc
test
icebp
xchg
mov
sub
imul
add
mov
jmp
mov
push
jns
dec
push
add
les
cmpsl
sub
add
cmp
cmp
mov
push
pop
push
jecxz
fcmovb
inc
lods
jge
rcl
inc
pop
outsl
push
dec
inc
lods
aaa
xchg
cs
cli
add
pop
lock
pop
test
ja
repnz
icebp
enter
pop
js
mov
gs
daa
jle
ror
dec
andb
mov
push
adc
jp
sti
aam
sub
sbb
lea
xor
lahf
mov
xor
lock
add
lret
cld
add
das
lcall
es
sub
bound
out
popf
inc
inc
jg
outsl
push
out
ficoms
push
jmp
mov
ja
shrl
or
addr16
imul
and
sub
sbb
dec
mov
xchg
pusha
pmulhw
pop
cmp
outsl
loop
shl
xchg
jne
icebp
adc
xchg
push
mov
sbb
es
lret
sbbb
inc
test
xchg
lock
jo
jnp
or
gs
xchg
inc
cmp
aas
cmp
pop
int3
pop
mov
dec
je
orb
outsb
gs
or
sbb
sbb
xchg
out
out
negl
sbb
cltd
ret
cmpsb
and
xchg
sahf
xor
sbb
cltd
sub
cwtl
xor
arpl
pop
lock
out
sub
mov
dec
imul
mov
popa
adc
push
ret
mov
loopew
push
cmp
lret
xchg
xchg
stos
jbe
and
inc
mov
add
xchg
cmpsl
orb
sub
out
int3
arpl
or
sahf
dec
cwtl
inc
xchg
arpl
mov
stos
je
sub
int3
mov
dec
rcrb
gs
rorl
test
mov
xor
stos
movsl
popa
shl
xchg
lock
sbb
adc
jmp
int
sbb
xor
or
sbb
and
shrb
pop
psubb
lcall
lock
dec
pop
jl
cwtl
lcall
and
mov
mov
push
mov
mov
rcrl
jns
sub
sub
test
jne
mov
rorb
jno
pop
mov
cli
mov
inc
mov
fcmove
and
mov
fidivrl
adc
popa
test
cmpsl
cmpsl
jnp
sbb
shr
pop
mov
mov
dec
fwait
jb
daa
or
push
mov
shlb
cmpsb
repnz
add
js
xlat
pushf
test
test
rolb
into
jbe
inc
push
mov
outsb
iret
pop
mov
fistpl
pop
stos
add
adc
mov
mov
pusha
dec
lret
lea
stos
lahf
mulb
push
scas
mov
or
int3
gs
push
in
addl
cmp
mov
jbe
dec
push
pop
mov
pop
jl
stc
pop
int
scas
add
and
push
jnp
fildll
fildl
or
in
jne
inc
stos
sub
sbb
add
cwtl
add
xchg
stc
mov
ds
dec
sti
xchg
jle
and
in
lret
jbe
sbb
push
mov
mov
icebp
movsb
and
adc
scas
xlat
stc
je
dec
pop
ficoms
fmull
xchg
jne
jmp
test
push
inc
add
inc
cmpsb
jbe
cmp
lret
outsb
mov
cld
loop
hlt
mov
fldl2e
das
imul
stos
fisttpl
or
shrl
fimull
daa
lret
out
inc
sbbb
nop
mov
jmp
cmp
filds
xor
lds
adc
lcall
arpl
jns
push
out
lcall
in
imul
out
sbb
or
shlb
xor
lcall
adc
repnz
in
fs
popf
add
scas
sub
inc
repz
mov
int
ds
jl
sbb
addr16
loopne
mov
mov
shr
ds
adc
push
add
mov
add
inc
fwait
cs
adc
pop
sti
mov
sbb
mov
imul
pusha
and
add
and
cmpsb
mov
dec
dec
loop
cli
mov
sbb
mov
push
ds
jns
xchg
sub
fildl
jp
scas
fistps
sub
xchg
stc
int
xor
loop
lea
iret
xchg
sbb
fstps
jge
nop
jno
lods
loop
das
add
repz
repz
in
cmp
loopne
mov
mov
sub
cmp
xchg
xor
shl
inc
jno
std
dec
and
sar
pop
xor
cmc
sarb
xor
and
mov
lods
jg
or
mov
or
or
cmpsb
push
insl
ja
mov
mov
jl
and
mov
pcmpeqw
inc
out
pushf
dec
and
out
mov
mov
sub
mov
sbb
rcrb
adc
in
or
dec
scas
in
js
mov
test
mov
add
inc
inc
mov
insb
cmp
mov
mov
lods
jle
fmull
and
dec
pop
lahf
aaa
jmp
std
adc
out
xchg
sbb
fbld
add
mov
cmp
inc
ficoms
sbb
jg
mov
push
jge
add
cmp
int3
xchg
int3
sarl
imul
hlt
lods
lds
ss
icebp
and
jbe
or
inc
jae
out
inc
bound
add
iret
xor
loope
add
js
sahf
in
and
pop
xor
nop
cwtl
cltd
test
sbb
mov
xchg
jmp
mov
ss
test
or
jno
xchg
jbe
add
test
repnz
ljmp
rcrl
lret
sub
mov
sub
and
insb
popa
enter
test
cmpsl
adc
jge
dec
push
jb
jle
adcb
pop
mov
dec
xchg
add
fsubrl
cwtl
das
xchg
lods
xchg
jne
pop
sub
fdivs
xchg
call
sub
lock
cltd
sub
cwtl
in
loope
mov
mov
mov
jge
sub
and
add
inc
xchg
mov
xor
or
or
pop
jne
xchg
pop
sbb
push
jle
sbb
dec
nop
repnz
sub
roll
sahf
adc
mov
das
lods
push
and
dec
cli
xchg
insl
jmp
or
icebp
or
xchg
icebp
dec
or
mov
pop
jbe
or
inc
sbb
push
sub
inc
cmp
push
icebp
shll
inc
fnstcw
fwait
mov
nop
stos
mov
stc
cmp
notl
sub
and
mov
test
bound
cmp
test
or
call
xlat
push
xlat
rcll
mov
test
imul
out
jmp
jle
repnz
add
js
insb
aaa
mov
jo
dec
lock
jae
movsb
lcall
jp
add
push
jne
ljmp
lods
cmpsb
mov
insl
mov
rcrl
fcoms
jg
mov
add
jp
lods
stos
inc
out
sti
jno
repz
test
cmp
push
cmp
dec
scas
jmp
mov
iret
test
test
push
repz
inc
and
mov
pop
mov
sarb
add
lds
mov
pop
mov
gs
into
xchg
cmp
enter
in
sbbl
scas
fbstp
fsub
dec
dec
daa
sbb
icebp
cmp
xor
lahf
lods
test
cmpsl
xchg
sub
and
icebp
stc
addl
mov
stc
xchg
out
stc
push
rcr
bndldx
inc
std
pop
dec
xor
xchg
pushf
adc
adc
fimull
adcb
imul
jno
scas
ret
mov
mov
hlt
xchg
push
jmp
cmp
cmpsl
lods
dec
add
clc
icebp
adc
imul
jge
adc
jno
cmp
mov
aas
push
mov
int
outsl
das
xchg
dec
mov
mov
sub
pop
int
je
mov
mov
sbb
cs
dec
dec
pop
cwtl
outsl
xor
bound
notb
iret
pop
scas
jne
in
mov
inc
push
ret
and
xchg
push
test
mov
mov
dec
xchg
fs
push
out
cltd
push
lods
ljmp
add
out
fsubrl
pop
divb
jbe
dec
mov
and
aad
rol
loopne
add
mov
push
or
xchg
mov
or
push
pop
shl
in
dec
mov
add
cwtl
sub
lret
int3
test
aaa
outsl
push
into
loopne
add
fisttpll
iret
mov
push
cmp
outsl
jge
fisubrs
sbb
xor
movsb
std
push
push
ljmp
data16
cmp
lock
cmp
push
iret
jb
test
js
mov
or
scas
adc
test
mov
fiaddl
push
rcrl
hlt
fdivrl
cli
push
push
inc
push
xor
ljmp
sarb
out
int3
test
lods
xchg
xchg
test
ret
push
scas
imul
insb
dec
cmp
ret
sbb
mov
imul
stos
push
inc
fistps
lret
sub
bound
pop
lods
out
pop
and
test
add
pop
add
cmp
or
mov
ljmp
test
lret
notl
cmpsl
outsb
popa
xor
inc
jb
jle
mov
outsl
adc
repz
mov
dec
mov
pop
jp
jecxz
rcr
mov
inc
jp
ds
js
scas
cmp
fdivrs
dec
outsb
stc
jnp
cs
aad
std
mov
loop
fidivs
lret
mov
dec
push
pop
push
xchg
push
insb
xor
push
xor
lret
xchg
imul
jl
repnz
pop
icebp
jp
cmp
sar
shlb
ja
es
and
test
xchg
faddl
std
jg
lods
testl
adc
cmp
fiadds
push
xlat
jmp
jg
mov
lahf
ret
mov
rorb
ret
scas
xchg
enter
std
xor
pop
out
add
mov
add
dec
shl
outsb
aam
movsb
sbb
sub
push
cmc
sub
icebp
cmp
jb
adc
and
out
cmp
sbbl
jmp
test
inc
lock
add
push
add
subl
adc
push
dec
sbb
mov
add
add
mov
mov
push
mov
fimull
testb
not
cmp
lea
ret
cmp
ret
jb
push
push
imull
scas
jno
mov
jb
lds
addl
and
dec
mov
xchg
test
fwait
hlt
jmp
and
or
out
test
shlb
outsl
mov
inc
js
mov
repz
push
hlt
and
arpl
cmpsb
xchg
sub
dec
lret
and
pop
imul
push
fwait
je
aad
stos
sbb
mov
cltd
cltd
and
aad
int3
in
test
mov
pop
sub
jo
mov
sbb
jo
mov
or
push
enter
movsb
decb
mov
pushf
pop
inc
mov
xchg
dec
mov
push
xchg
sahf
adc
dec
jge
xchg
pop
cmp
jg
repz
stos
lods
lret
jae
adc
popf
arpl
sti
inc
mov
shlb
jg
fs
push
mov
rclb
rol
xor
or
push
dec
xor
push
es
incl
lcall
sbb
fdivrs
cmp
in
jmp
push
insl
sbbl
or
insl
mov
scas
push
pop
xor
bound
sub
push
sub
push
sbbb
insl
sbb
mov
fsubrl
xchg
jmp
ds
ret
aas
shll
shll
inc
or
and
cli
sbb
sbb
sbb
aad
dec
dec
loope
add
and
and
and
and
xchg
shl
mov
std
sbb
das
mov
lods
nop
dec
out
add
mov
jno
dec
dec
les
ret
call
scas
stos
cs
std
in
xor
add
dec
test
mov
adc
add
adc
ss
pop
pop
hlt
mov
testl
orb
mov
xchg
jo
outsl
insl
jae
lahf
mov
adc
or
out
mov
pop
mov
mov
movsl
lods
mov
push
or
pop
int
cltd
sbb
lret
xlat
push
scas
mov
dec
aad
int3
adc
push
cltd
js
lret
jne
pop
and
leave
sbb
pusha
cmp
mov
xchg
lret
push
jnp
addb
rcl
or
mov
pop
in
add
jecxz
jno
mov
in
sbb
cwtl
dec
stc
shlb
sub
insb
mov
push
in
sahf
dec
fadd
arpl
in
mov
dec
mov
shrb
pop
fsubs
lahf
sahf
jg
mov
sub
cmpsb
enter
les
jno
dec
in
addr16
sbb
add
jbe
add
inc
xchg
js
cs
mov
test
in
fwait
imul
xor
sub
ds
addr16
xchg
and
push
xchg
outsl
insl
or
cmp
mov
mov
xor
in
or
sbb
std
add
sub
das
les
and
xchg
ror
fnstcw
sub
dec
and
or
jno
pop
mov
inc
xor
inc
pop
lret
xor
andl
rol
push
sub
andl
xlat
into
lret
data16
mov
imul
js
jl
sbb
add
pop
mov
add
mov
test
pop
daa
icebp
movsb
call
cmp
pop
jg
outsl
aam
insl
loopne
mov
insl
inc
jmp
or
sbbl
cmp
hlt
ret
enter
push
adc
frstor
dec
fs
jg
icebp
enter
repnz
push
in
adc
xor
fs
lcall
add
xchg
pop
mov
mov
mov
push
lret
sbb
into
stc
xor
push
les
sbb
or
mov
adc
push
sbb
ja
addr16
cwtl
xchg
stos
call
call
ret
out
sbb
mov
enter
repz
jnp
fcmovbe
arpl
loop
loopne
inc
mov
push
mov
push
xchg
clc
popl
cmp
jmp
ss
xor
sub
dec
loope
mov
orb
in
pusha
or
jmp
stos
xchg
aam
into
scas
cmp
loopne
lods
cmp
inc
shrb
std
pop
inc
cs
lock
cmp
loopne
dec
adc
pushf
subb
xchg
imul
adc
fidivs
test
pop
inc
ret
clc
xchg
add
sbb
stos
adc
sub
inc
scas
int3
cmp
out
fsts
mov
out
imul
int3
or
mov
bound
add
arpl
pop
dec
sti
test
scas
push
mov
das
pusha
daa
pusha
pop
addl
dec
cmp
test
xchg
sub
inc
or
call
push
jo
je
adc
and
pushf
jne
lea
sub
daa
xor
mov
pushl
mov
nop
push
xlat
repz
adc
cli
dec
xchg
cmc
mov
inc
mov
gs
das
jnp
scas
inc
test
lret
shr
jnp
out
icebp
sbb
add
and
outsb
test
and
out
lods
repz
lods
jae
inc
ja
jb
push
or
sbb
jbe
mov
xchg
sti
fwait
lahf
inc
sub
test
push
ss
xor
mov
into
adc
enter
add
sbb
cmpb
sbb
push
andb
call
aad
call
lret
stc
or
xchg
std
insl
ret
popa
clc
hlt
mov
xchg
and
sbb
cltd
add
push
pop
das
jbe
cmp
movsl
dec
xchg
xchg
mov
inc
add
xchg
or
sbb
fnstenv
push
pop
loope
fwait
push
xchg
inc
mov
repz
loopne
adcb
out
outsb
sub
mov
imul
lahf
add
js
push
dec
dec
jb
adc
les
outsb
orb
pop
and
leave
fldl2e
jnp
mov
add
fbstp
xchg
jo
dec
lods
mov
adc
or
push
in
adcb
adc
pop
and
mov
cmpsb
or
pop
sbb
int
dec
iret
xchg
mov
orb
jecxz
jmp
add
inc
outsl
dec
mov
jecxz
jg
mov
addb
ret
push
xlat
test
loope
test
push
jp
int
jo
insb
mov
fmulp
aaa
push
fbld
std
fldenv
jl
adc
fildl
xor
sub
inc
outsb
enter
dec
test
arpl
pushf
jns
push
aaa
lahf
outsl
ret
leave
or
shrb
jno
add
pop
cmpsl
or
jg
mov
cmp
mov
in
mov
cwtl
mov
mov
xchg
clc
sbb
or
inc
cmpb
lret
mov
pushf
bound
ss
cmpsl
pop
jo
into
fdiv
pop
mov
xlat
cmp
or
out
jno
or
sbb
xor
int3
repnz
push
jns
sbb
push
aad
shlb
xchg
adc
cmpb
dec
push
cwtl
jnp
push
or
pusha
pushf
push
push
fneni(8087
mov
loope
mov
sbb
clc
fbstp
inc
sbb
and
jmp
es
xor
jecxz
lret
fldl
imul
mov
push
rclb
lods
add
dec
mov
bound
mov
push
dec
push
push
test
adc
xchg
inc
fdivrs
mov
clc
lahf
and
xchg
mov
add
les
push
adc
roll
xor
push
dec
filds
inc
and
clc
or
xchg
and
adc
mov
fsubrs
jbe
add
push
or
icebp
jo
dec
movsl
xchg
pop
pop
xchg
sub
orb
mov
imul
imulb
mov
shr
inc
cmp
cs
jecxz
in
movsl
jnp
mov
fdivs
sbb
scas
andl
iret
aam
ror
xchg
pop
lret
xlat
aas
and
ret
sbb
add
pop
mov
push
push
scas
addr16
push
dec
mov
or
sub
divl
cmp
jns
pop
mov
scas
fadd
sbb
repz
jle
dec
nop
repnz
repz
push
je
in
ds
add
xor
fs
sbb
into
mov
sbb
add
mov
daa
lods
leave
mov
cmc
sub
or
fidivrl
outsb
sub
jecxz
add
push
cmp
in
test
jae
inc
int
pop
pop
cmp
mov
add
rcrb
ds
lcall
xchg
xor
adc
ret
outsl
stos
fs
fdivl
mov
ret
sub
out
inc
mov
add
es
fstp
pop
mov
scas
push
inc
div
enter
push
jmp
fs
jo
adc
mov
stos
lcall
stc
insl
xchg
sub
popf
jne
inc
fidivs
push
adc
inc
fdiv
jns
adc
mov
fdiv
lahf
or
push
in
inc
adc
sub
mov
inc
enter
stos
out
fcompl
mov
cmp
int
cmpl
ljmp
leave
leave
scas
xchg
jmp
jle
stos
add
lahf
scas
mov
jno
mov
and
in
mov
aaa
mov
into
in
add
insb
add
gs
push
test
xor
add
and
inc
movsl
push
jbe
dec
push
inc
jmp
sti
inc
fldcw
insl
adc
sub
jno
aam
js
push
adc
inc
inc
xor
add
mov
cmpsl
std
test
fisttpl
jmp
mov
adc
int
mov
imul
dec
inc
mov
out
out
mov
pusha
mov
loopne
xor
inc
inc
inc
adc
in
add
and
imul
loop
pushf
div
push
sub
xor
mov
and
daa
mov
movsb
bnd
inc
dec
fidivs
or
leave
out
ja
jnp
call
inc
inc
mov
dec
inc
cmc
fucomp
mov
sbb
pop
lahf
or
cmc
out
stc
test
pop
mov
mov
and
gs
xchg
aas
dec
int3
xor
pop
out
or
or
in
mov
pop
scas
inc
or
mov
hlt
data16
sub
rcr
cli
push
test
inc
xchg
mov
stc
nop
jae
jge
adc
movsl
in
xor
sub
mov
pop
sti
xor
sub
pusha
mov
cmpsl
imul
mov
lds
mov
call
lock
outsl
mov
enter
mov
rcrl
lahf
mov
pop
in
sarb
mov
cmpsb
xor
lea
fcompl
lret
add
stos
test
mov
mov
into
mov
add
lock
xor
or
imul
add
mov
xor
mov
adc
aaa
pop
ds
xchg
outsb
mov
pop
cmc
mov
clc
test
sbb
push
lods
lods
pushf
cli
xchg
mov
xlat
mov
das
out
icebp
mov
movsb
js
mov
mov
mov
popf
or
fmull
test
aas
sub
add
push
mov
orl
jno
rolb
fldenv
mov
aaa
mov
int3
and
scas
add
push
aas
lea
cmp
jbe
out
mov
fs
xchg
sub
inc
enter
sub
push
mov
test
add
leave
mov
std
sub
push
pop
push
mov
sbb
push
push
std
xor
push
call
movsb
dec
in
in
jp
mov
negb
stos
inc
xchg
subb
jb
jo
popf
push
cmp
xchg
imul
cmpsl
ds
jns
cmc
mov
arpl
outsb
pop
adc
nop
addl
movsb
jl
mov
jbe
xor
shll
lret
mov
rcll
jns
sbb
push
push
in
data16
pop
xchg
or
sub
jnp
imul
inc
jno
mov
ret
out
xor
cmp
xchg
sahf
clc
divl
mov
dec
adc
hlt
std
xchg
sub
push
xchg
outsb
inc
mov
outsl
push
scas
mov
outsb
xchg
lods
mov
adc
test
or
push
popf
imull
std
js
popf
lods
pop
pop
adc
push
testl
les
movsl
negl
xchg
loopne
stos
adc
cltd
xor
lret
mov
movsb
push
sbb
xchg
jne
dec
clc
cmp
jmp
and
and
or
fcom
lods
and
jbe
jmp
pop
mov
or
stos
jl
push
add
or
cmpsb
jae
ss
jge
dec
jb
ret
jmp
lods
test
movsb
pop
dec
and
lock
mov
push
add
stos
xor
pop
mov
int3
daa
shll
std
in
xor
mov
pop
mov
dec
sbb
cli
or
sbb
pop
push
dec
mov
shl
sbbl
scas
ss
dec
addr16
sub
fldenv
xlat
sbb
es
mov
fldpi
add
daa
or
inc
inc
loope
fucom
sub
loop
daa
clc
sbb
cmp
dec
pop
mov
rclb
out
imul
lods
in
addr16
cwtl
fisttpll
fisubl
pushl
or
jmp
push
xchg
xorb
mov
xchg
pusha
mov
and
outsl
mov
and
mov
aad
imul
sahf
fwait
dec
jecxz
scas
jns
in
adc
dec
inc
int
inc
cmp
sbbb
or
sub
scas
ljmp
cltd
clc
dec
dec
ds
and
adc
imul
sbb
cmp
fistps
add
pop
push
pop
jae
scas
mov
les
test
out
xor
inc
out
cmp
dec
mov
jae
lahf
or
jb
sbb
and
std
dec
cmpsl
inc
iret
lock
cmp
jns
xchg
call
lock
adc
stc
cmp
icebp
movsl
and
jmp
mov
jb
dec
adc
sub
mov
les
dec
jmp
sbb
mov
nop
sete
shrl
pusha
cwtl
push
push
movsb
cmp
pop
in
cmp
imul
push
rcrb
xchg
mov
adc
mov
cmp
in
les
mul
jne
sbb
mov
and
jmp
push
sub
sbb
mov
fists
bound
push
negl
pop
pop
inc
cmp
mov
dec
gs
jnp
fucomp
daa
or
lods
negl
jmp
sub
mov
mov
mov
je
cmp
xchg
out
xchg
frstor
enter
adc
mov
fnstsw
add
push
fwait
sub
push
cli
mov
lcall
dec
in
pop
pop
pop
cwtl
stos
cmp
int
or
dec
loop
mov
xchg
lea
adc
push
in
nop
daa
push
jb
dec
int3
imul
inc
push
xor
jne
or
filds
cwtl
dec
jbe
mov
je
test
mov
xor
mov
mov
test
and
xor
rol
lds
push
inc
adc
inc
fsubrl
inc
das
or
mov
repz
ljmp
sbb
insl
xor
or
and
iret
inc
in
stos
in
pusha
pop
adc
mov
add
inc
push
outsb
loopne
mov
insl
adc
mov
shl
push
aas
inc
push
lahf
sbb
inc
shlb
insb
push
cmpsl
add
and
or
iret
push
jecxz
cmp
ljmp
mov
sahf
inc
pop
shlb
adc
jno
xor
arpl
mov
or
push
sub
loopne
mov
rorl
mov
outsb
je
test
cmpb
push
test
inc
movsb
hlt
shl
lcall
es
cmc
xchg
dec
stos
in
movsl
imul
rcrl
sbb
inc
fisubrl
sbb
loop
cmpsl
mov
inc
adc
push
int3
out
xorb
jb
shrb
mov
addr16
nop
iret
inc
fdivr
aad
shlb
fcmovu
xor
ficoms
xchg
scas
sbb
mov
lods
data16
rcll
sbb
inc
pop
and
arpl
lods
iret
rol
iret
xchg
sub
jne
dec
pop
add
mov
fs
jbe
mov
jns
xchg
or
stos
dec
imul
lret
cld
ja
and
mov
adc
adc
push
xchg
and
dec
test
and
jmp
xorl
stos
push
sub
cld
xchg
push
scas
aas
rorb
in
test
sub
sahf
repnz
arpl
pop
outsb
out
ficoms
test
cmc
stos
xor
mov
stos
subl
and
jmp
stos
sub
inc
into
mov
hlt
addr16
daa
add
xor
aas
jecxz
test
pop
call
sbb
jb
adc
jo
and
les
ret
inc
pop
jmp
inc
frstor
pop
pop
pop
pop
loope
push
cmp
mov
movsl
in
adc
aad
sub
push
xchg
aas
add
push
xchg
mov
in
sbb
sbb
fcomi
jno
aas
aam
dec
sbb
pop
sahf
insl
int3
xor
jmp
scas
jno
inc
clc
sahf
dec
stc
fdivl
push
dec
inc
into
out
inc
fidivl
jb
js
adc
mov
fnop
pop
pop
adc
inc
add
pop
cmpsl
cmp
lods
insl
mov
or
insb
mov
ret
call
test
inc
out
pop
les
or
in
pop
and
and
gs
xlat
loopne
pop
mov
shlb
inc
fstps
xchg
or
push
pop
push
addr16
ret
fmul
and
jge
adc
sti
dec
push
sub
movl
sub
and
jb
imul
pusha
push
cld
mov
push
adc
leave
and
push
aas
mov
out
sub
cmc
mov
icebp
mov
lret
adc
lret
mov
pop
jno
adc
mov
js
mov
and
jg
mov
sub
stos
icebp
jp
lods
jae
and
test
mov
sbb
js
insl
or
test
sbb
mov
dec
dec
push
xchg
adc
dec
jp
inc
and
cmpsl
jns
inc
stos
popf
push
sub
fistl
push
inc
jecxz
sbb
inc
in
jbe
out
es
add
out
repnz
sub
push
xchg
scas
xor
push
push
fmull
cmp
cmpsl
sbb
sbb
or
cli
xchg
xchg
jp
push
mov
push
sbb
and
and
inc
mov
pusha
and
ret
repz
inc
and
or
es
in
push
jo
pop
insl
roll
mov
movsl
in
add
xor
stos
cmp
xchg
ds
ficoml
add
sbb
decl
jbe
stos
shll
mov
movsl
fidivs
mov
xchg
sub
ja
add
mov
xchg
mov
pushf
lds
sbb
mov
jecxz
push
pop
jns
rolb
jb
fisubrl
mov
nop
push
stos
mov
cmp
jno
mov
sub
mov
dec
mov
movsb
dec
or
cmp
pop
cmpsl
lock
and
jmp
imulb
addl
lahf
in
test
add
sub
push
sbb
scas
add
xor
pop
pop
inc
xor
dec
xor
and
imul
sbb
in
ret
xor
mov
cmp
test
mov
clc
rcrb
imul
add
jge
jl
into
lods
notb
sub
xchg
sub
jbe
cmc
push
jne
pusha
stos
cvtpi2ps
out
cmpsl
out
enter
lahf
loopne
dec
and
mov
mov
daa
sbb
xlat
ljmp
cmp
add
jnp
rep
inc
fstp
clc
adc
int3
lcall
test
sbbl
or
out
mov
lahf
bound
fxch
xor
sub
xor
lret
mov
int3
fsubs
xor
popa
adc
push
jl
out
std
icebp
sbb
stc
push
ja
inc
add
xor
cmp
add
ret
bound
mov
or
push
lea
lds
jnp
scas
inc
adc
mov
and
mov
loopne
xchg
sbb
movsl
fs
pop
jne
mov
push
add
push
movsl
out
test
sub
std
loope
xchg
daa
shll
pop
jne
and
mov
imul
call
xchg
lret
lret
incl
in
push
jmp
div
push
sti
aad
loop
arpl
pop
out
push
mov
es
aad
aad
clc
mov
in
gs
push
in
inc
imul
xchg
push
or
sub
rcll
pop
das
pop
fiaddl
adc
sub
inc
maxps
pop
jns
mov
in
pop
sub
or
adc
mov
pop
loopne
xor
adc
push
pop
sub
daa
push
mov
fiaddl
xor
inc
test
cmp
cmpsb
jge
int3
xlat
negl
cmpsb
ds
cmp
sbb
into
jnp
mov
cwtl
outsl
dec
movsb
ja
mov
fistpl
inc
mov
push
add
sti
test
and
add
sbbb
jbe
or
pop
push
push
or
xlat
jb
mov
jp
jb
ss
aad
int3
push
mov
adc
pop
les
ljmp
scas
mov
mov
lcall
inc
inc
xchg
ret
rcrb
mov
mov
das
mov
push
ret
mov
mov
pop
sbb
insl
sarl
cmp
mov
repz
and
jne
jl
stos
jmp
xor
cmp
loop
push
ljmp
call
push
nop
and
xor
jns
mov
push
cs
push
aad
icebp
movsl
or
dec
inc
push
in
je
push
xor
cmc
adc
inc
leave
cltd
test
loopne
inc
stos
add
or
cltd
add
mov
les
xor
sbb
or
mov
add
inc
fsubrs
pop
idiv
loop
mov
stc
or
lahf
mov
jle
jle
push
add
lock
pop
pop
addb
xor
lret
mov
repz
andb
xchg
scas
dec
cltd
sahf
or
dec
jge
adc
lods
mov
pop
cltd
negl
addl
jle
lcall
adc
gs
ja
or
push
test
push
mov
and
mov
and
or
hlt
add
in
call
inc
inc
jmp
std
mov
fcmove
mov
adc
xchg
mov
mov
pop
sub
or
mov
or
sub
mov
icebp
pop
sbb
and
insb
in
rcrb
mov
adc
popa
jo
jle
xlat
rcll
and
pop
repnz
mov
in
sbb
mov
and
mov
inc
adc
popw
dec
ret
sbbl
test
xrelease
repnz
in
add
lds
sub
aaa
in
in
dec
inc
icebp
sahf
mov
xchg
jo
gs
sub
mov
rolb
or
push
push
jns
or
jo
lret
push
or
or
cmp
jl
adc
ss
mov
jp
shrb
aaa
sub
inc
lock
mov
cmp
sub
sarl
sbb
jnp
and
pop
push
fmull
rclb
stos
push
cmp
rcrl
lret
mov
sti
pop
or
ds
shll
pop
jne
adcb
les
loope
inc
stos
mov
fistpl
push
add
jp
pop
lods
ljmp
icebp
leave
cmc
push
int3
scas
push
ljmp
push
in
and
pop
idivl
cmp
sarb
imul
pop
sbb
cmpsl
jp,pt
mov
xchg
or
sub
inc
xchg
jno
jmp
jae
xor
dec
mov
add
add
mov
cltd
cmp
mov
cmpsb
sbb
xor
enter
cmpsb
ljmp
sbb
jg
cmp
insb
fcom
sbb
push
adc
iret
xor
shrl
cli
lret
cltd
les
xchg
push
cmp
in
lds
ficoml
sbb
add
inc
cmp
and
mov
loopne
pop
and
mov
xor
xchg
or
scas
shl
mov
lods
loope
cmp
jb
pop
jle
cmpsb
cmpsl
aam
mov
mov
dec
loope
push
pop
iret
cli
push
dec
scas
xlat
outsb
std
lea
pusha
movsb
xchg
mov
movsb
ret
mov
ss
sub
outsb
mov
add
jno
xor
popa
test
fldt
push
leave
ljmp
out
int
fwait
sub
lods
dec
mov
push
jmp
jne
and
aad
inc
inc
mov
dec
pop
mov
mov
sub
mov
mov
cmp
sarb
mov
shrl
mov
int
jno
sub
adc
push
push
mov
in
pop
sub
test
imul
pop
inc
mov
add
sbb
dec
inc
jl
xchg
les
dec
mov
cs
clc
inc
push
xor
inc
loope
cmp
out
scas
leave
pusha
mov
js
cmp
mov
mov
pop
movsl
mov
stos
ja
sbb
jg
or
pop
push
lret
int
lss
ljmp
sub
or
mov
mov
xchg
outsl
mov
rorl
leave
fmuls
sub
mov
inc
push
iret
lds
std
aam
and
cs
test
lods
mov
push
orl
decl
in
push
out
in
mov
stos
dec
jne
cmp
in
loope
int3
fiadds
jbe
arpl
inc
insl
pop
fstps
jge
xor
xchg
cmc
push
sub
cmp
sbb
int3
pop
hlt
std
shrl
mov
fidivrl
aam
sub
fdivs
je
outsl
sub
cmpsb
cmp
sub
inc
fdivl
dec
call
mov
out
xchg
int
movsb
sahf
push
sub
push
dec
in
ffree
mov
imul
and
mov
jecxz,pt
nop
push
dec
xchg
cmp
mov
sbbb
jecxz
cmp
push
nop
mov
mov
es
loope
lret
push
pop
fdivs
pop
mov
mov
insb
push
mov
inc
xor
inc
bound
mov
iret
cmpsb
or
pop
or
insl
and
outsb
or
add
dec
hlt
out
and
fiaddl
or
insl
xor
add
inc
xchg
aaa
push
jbe
xor
arpl
sti
or
cmp
inc
fstps
cmp
push
adc
decl
cmp
sbb
sahf
int3
mov
stos
mov
mov
xorl
mov
popf
ss
inc
pop
xlat
mov
stos
out
jp
jb
push
arpl
push
test
xchg
pop
lods
loopne
push
mov
cmp
insb
cmp
lods
lahf
xor
lcall
push
jae
fdivl
popf
sub
mov
fstpl
adc
rcrl
cmp
nop
cli
pushf
jmp
scas
push
in
cmp
push
mov
and
pushf
aas
shlb
mov
sub
jne
jae
in
cmp
fsqrt
xchg
or
leave
test
stos
sbb
in
ficoms
jae
pop
mov
mov
mov
daa
mov
insl
sub
mov
mov
lret
popa
shlb
inc
stos
adc
lea
sbbb
push
or
adc
sub
cmp
lods
lods
iret
pop
outsl
repnz
jae
aad
mull
pusha
sbbl
jp
out
dec
loope
mov
popf
cmp
popf
jo
sbb
lret
inc
in
sbb
jle
fsubr
je
outsl
out
pop
push
xchg
inc
push
fbld
outsl
add
int3
shll
cwtl
and
dec
loope
dec
cmp
test
mov
sbb
aas
mov
popa
mov
fwait
imul
pushf
or
sarl
cmp
popl
stos
mov
test
sub
mov
xor
inc
jns
pop
lret
add
in
or
mov
andl
bound
inc
xchg
mov
push
lods
mov
cmp
mov
pop
lret
enter
enter
clc
push
mov
sar
jl
fistpl
movsb
fs
xor
dec
out
xchg
push
in
into
xchg
cli
cmp
fs
and
into
imul
sbb
xchg
push
cltd
sbb
aaa
cltd
push
movsl
mov
in
decb
stos
jmp
mov
out
es
mov
push
popf
and
mov
hlt
lock
leave
cwtl
cmc
aaa
cld
cmp
jnp
and
out
rol
in
and
ret
xchg
sbb
fildll
fs
pushf
stc
nop
iret
adc
movsl
cmp
insb
adc
fsubr
out
mov
dec
test
sbb
pop
mov
cwtl
xchg
xchg
pop
cmp
movsl
jle
jg
aas
dec
movsl
sahf
add
aam
cmp
jns
push
sbb
pop
lret
sub
insb
dec
outsl
xlat
push
les
pop
pop
testb
mov
pushf
cli
push
xchg
cld
inc
nop
es
movsl
cmpsl
mov
mov
push
gs
outsb
pop
out
mov
mov
sbb
xlat
fcompl
and
push
ja
dec
jne
xchg
sub
pop
cmpsb
add
call
fninit
js
fisubrl
leave
add
cwtl
push
push
leave
ja
mov
pop
int3
sub
jg
int
ds
jp
fidivs
cmpsl
sub
dec
push
popa
loope
test
dec
dec
pop
dec
and
mov
imul
into
gs
ss
insb
dec
add
test
into
sbb
jmp
push
fstps
pop
xor
cli
xlat
mov
jge
mov
rcll
stos
sub
push
pop
pushf
sti
jnp
mov
adc
mov
sbb
cmp
mov
jge
mov
push
sbb
rcrb
es
inc
icebp
pop
aaa
sub
les
cltd
inc
in
jl
jmp
test
inc
int3
fsubrp
stc
shrb
movsb
xor
pop
push
push
cmp
mov
or
push
lea
adc
bound
idivb
scas
in
xor
xchg
dec
loop
adc
push
repnz
jg
jmp
out
repz
movsb
dec
xor
nop
sarl
pop
in
or
fwait
int
or
xor
xlat
testl
jge
xor
bound
push
cmp
adc
fnsave
shl
lahf
push
sti
jne
cmpsb
mov
es
fildl
les
pop
dec
inc
sbb
pushf
mov
lods
movsb
inc
jno
jbe
mov
and
jge
mov
in
xchg
jecxz
cmp
or
xchg
pop
add
sub
dec
push
sbb
pop
jecxz
adc
ret
test
xchg
inc
sub
popf
xchg
orb
xor
fists
dec
inc
shr
pop
stos
mov
int
cs
cmp
rol
fmull
ret
lds
cld
and
fnstcw
pop
or
arpl
adc
xchg
rclb
stos
insb
mov
or
mov
jl
cmc
xchg
adc
push
fisttpll
xchg
jnp
adc
sbb
cmpsl
dec
adc
push
inc
push
xor
lods
add
mov
or
popa
xchg
stos
jmp
or
es
or
and
sub
shll
inc
xchg
pop
inc
mov
xchg
mov
fwait
cmp
lret
push
mov
sbb
imul
inc
fidivs
jge
dec
mov
decb
insl
sub
pop
shlb
inc
xchg
jnp
insb
test
inc
ljmp
repz
stos
aam
pop
sbb
mov
jae
pop
pushf
pop
lret
jnp
xchg
iret
or
pop
cmp
pop
fisubrl
inc
outsb
sub
jnp
add
push
lahf
loopne
int
xor
jmp
sbb
cmp
stos
dec
lahf
stos
jg
sub
repnz
mov
imul
fsts
std
pop
and
sbb
in
lret
xorb
ret
push
insl
push
movsb
cmp
lds
mov
jns
add
add
sbb
or
mov
sub
inc
int3
rolb
add
xchg
add
data16
in
jae
bound
movsb
jbe
pusha
push
int
inc
cmp
mov
pop
sbb
mov
sbb
pop
imul
cmpsl
stos
repz
sub
xor
mov
pusha
push
ja
fcoml
xchg
stos
and
mov
jo
xchg
mov
cli
inc
mov
mov
mov
comiss
push
mov
dec
cld
mov
stos
jo
lods
gs
jb
or
fimull
out
call
outsl
fistpl
dec
cli
mov
fdivr
bnd
scas
shll
shll
mov
pop
js
jle
dec
push
mov
stos
push
andl
sbb
sub
bound
sbb
xchg
sub
fimull
push
fimuls
aam
test
jl
pushf
bound
std
add
mov
jno
aas
pop
pop
or
lods
xchg
pusha
ret
dec
add
outsb
shrl
repnz
lds
jl
in
dec
mov
clc
or
aaa
stc
cli
shrl
and
dec
cmp
movsb
sbb
loopne
ja
sbb
dec
cmpsb
repz
jmp
repz
xor
and
ja
mov
sub
mov
mov
pop
dec
mov
pop
idivb
add
cld
and
mov
arpl
push
cltd
decb
jae
insb
pop
push
in
sub
cmp
push
xchg
pop
aaa
adc
aad
jmp
inc
lahf
dec
aaa
icebp
sbb
out
out
fstp
popf
inc
adc
sbb
sub
or
ss
frstor
subb
pusha
subb
fmuls
out
vmovdqa
ja
int3
sub
sbb
fimuls
xlat
in
arpl
mov
sti
cld
xchg
daa
lret
notl
jno
iret
sub
xchg
in
std
sub
aad
push
jne
mov
js
push
xchg
sbb
jl
test
dec
mov
mov
aaa
lods
mov
sub
shrb
mov
xchg
rcrb
push
nop
fucomip
adc
insb
sub
fcmovnb
popa
push
testb
test
add
outsl
pusha
sub
es
pop
push
xchg
test
aad
jne
inc
and
adc
lock
jmp
jnp
in
stc
inc
cs
imul
mov
data16
mov
dec
shrl
cmp
movsb
and
mull
mov
inc
clc
and
add
dec
push
push
out
andl
cmp
adc
cmpsl
sbb
xor
mov
mov
out
mov
das
insb
adc
daa
jo
pop
lds
adc
pushf
jg
xor
mov
adc
js
test
cmp
ret
xchg
mov
or
add
lea
scas
mov
jns
pop
ret
or
andb
std
and
push
xor
mov
jp
mov
lea
stos
pop
out
sbb
jp
or
and
iret
ss
fnsave
bound
sarl
fdivs
push
xor
mov
loop
jge
mov
dec
push
and
es
hlt
push
daa
cmp
or
jp
push
test
mov
xchg
mov
inc
pop
push
dec
mov
aaa
divl
mov
pop
inc
lock
cmpsb
fistpll
test
pusha
adcb
push
sub
mov
mov
sub
push
jecxz
nop
push
mov
das
cmp
jle
aas
sbb
jno
inc
or
xor
insb
addps
popa
pop
adc
dec
sub
cmp
in
cmpsl
mov
fucomip
testb
leave
aas
rcll
in
test
cmp
add
aaa
fiaddl
outsb
jo
stos
pop
and
iret
inc
into
popa
adc
mov
xor
jmp
xchg
cs
xlat
stc
or
jecxz,pt
dec
jl
cwtl
enter
push
fucomi
ss
aas
cs
and
leave
int
cli
mov
inc
cmp
and
jns
push
push
shrb
ret
xor
xchg
cmpl
mov
fsubrl
stos
dec
pop
mov
add
shrb
fcmovnu
dec
mov
je
mov
cld
data16
test
xchg
mov
pop
repnz
shl
push
dec
push
mov
jne
cmp
cmp
aad
cmpsl
ss
and
shl
popf
push
mov
sarl
lods
adc
mov
mov
jge
xchg
jl
subb
jmp
daa
lret
je
inc
mov
mov
jle
ret
pop
rcrl
mov
rclb
push
pop
test
popa
stc
je
mov
adc
out
inc
push
mov
sub
mov
sub
xor
push
hlt
jmp
addb
fistps
bound
push
and
push
iret
outsb
jl
mov
pop
jne
inc
mov
sub
mov
mov
inc
in
mov
sahf
sub
sbbl
xor
inc
mov
lret
push
lahf
xor
mov
inc
push
pop
outsl
inc
enter
jl
icebp
popf
scas
cmp
mov
cli
push
xor
adc
jmp
and
test
mov
mov
imul
cmp
inc
mov
dec
imul
repz
jno
mov
lods
test
mov
lret
call
mov
fsubs
cmp
or
push
lods
pop
out
cmp
pop
div
or
jnp
inc
movsl
sarl
imul
xchg
adc
adc
ss
addr16
shrb
push
jmp
mov
scas
xchg
pop
aam
rorb
inc
andb
repz
cmpsb
sub
cmp
jno
sub
out
std
loopne
jmp
fdivr
and
cmpsl
mov
mov
and
out
cmp
enter
adc
mov
iret
dec
nop
repnz
push
or
pop
repnz
pop
pop
mov
out
xor
mov
pusha
in
es
test
sti
pop
mov
popa
jae,pn
outsl
mov
nop
push
scas
mov
dec
push
xor
insl
mov
mov
rolb
and
into
pop
or
jno
mov
and
idivl
cmpl
rorb
inc
mov
fisubl
xchg
lahf
lods
int3
xor
fsubrl
inc
loopne
xor
into
adc
push
clc
mov
ds
xor
pop
scas
cmp
mov
cmp
dec
mov
mov
push
xchg
shlb
jmp
dec
and
and
mov
scas
inc
loopne
ds
fimuls
inc
push
out
mov
jmp
popa
inc
es
repz
jbe
jnp
js
nop
lds
shll
in
aaa
adc
fiaddl
mov
mov
push
sub
mov
fwait
lods
aam
mov
clc
xor
fucomp
popa
add
adc
push
inc
and
fstpt
sbb
xor
add
out
dec
dec
rorl
add
sbb
stos
js
or
push
xchg
out
add
adc
sub
ljmp
push
mov
movsb
push
aas
fwait
int
mov
dec
and
and
mov
xlat
loop
push
xchg
adc
pushf
xlat
xor
daa
pop
mov
jmp
out
imul
and
jae
sub
fprem
cmp
sub
add
mov
and
imul
adcb
pusha
inc
mov
out
popa
or
dec
stc
and
cmpsl
cmp
fnstenv
paddd
decl
add
xchg
pop
xchg
pop
les
filds
test
add
movl
jle
pop
mov
cmp
fmuls
jle
arpl
and
fnstsw
pop
repz
xchg
jb
in
mov
into
movsl
fsubs
push
or
aaa
lret
xchg
bound
inc
ss
shrb
push
sub
add
cmp
xchg
stos
shll
lock
jecxz
mov
inc
jns
stos
mov
jg
iret
push
imul
in
enter
pop
add
gs
xor
mov
mov
dec
pop
lock
jnp
dec
adc
fistpl
movsl
jp
outsb
xor
out
mov
jle
fsubrl
adc
inc
repz
inc
mov
mov
sbb
push
scas
mov
add
or
mov
cmpb
adc
push
jne
out
fxch
pop
imul
in
daa
or
jge
cwtl
xchg
jb
push
mov
cld
movsb
outsl
xchg
shlb
mov
dec
adc
cs
xchg
pop
or
xchg
dec
lret
and
add
sub
ljmp
inc
jo
lods
and
iret
addr16
jmp
je
sbb
mov
xor
mov
adc
pop
fiaddl
xor
vpackssdw
push
pop
lret
adcl
sub
jo
mov
and
or
xchg
popa
xchg
dec
and
jge
stos
mov
inc
mov
push
mov
clc
inc
mov
push
fimull
and
cmpsl
mov
jge
aas
pop
in
push
add
outsl
jo
js
out
in
stc
dec
mov
popa
mov
shll
pop
out
jb
mov
cmp
or
xchg
jmp
dec
cmp
filds
insb
mov
or
nop
pop
fsubrs
sahf
mov
jo
jbe
push
scas
insl
mov
ss
cmp
enter
cmp
test
rcr
loop
cmpsl
adc
dec
xor
sub
lock
das
enter
pusha
mov
sub
adc
ljmp
popf
cld
aas
or
decl
ss
sub
mov
jns
push
push
mov
ja
pusha
fisubs
push
push
in
das
cmp
aad
out
push
orl
sbb
jbe
leave
push
xchg
imul
lret
sbb
pop
stc
ret
inc
int
xor
pop
testl
add
push
xor
outsl
inc
lcall
movsb
jmp
movl
fs
inc
int
lods
cmp
cmpsb
std
push
std
mov
jge
cmp
ds
fimuls
lahf
cld
jbe
mov
fstl
out
and
jne
ja
mov
xchg
xchg
sub
in
xor
js
clc
sahf
push
cltd
add
mov
push
bound
stos
add
and
jo
in
cld
jae
inc
sahf
mov
fs
adc
mov
cltd
sbb
mov
dec
and
loop
or
loope
idivl
shl
mulb
das
leave
ret
loope
in
test
inc
sbb
div
cmp
pop
scas
sub
clc
scas
jg
xchg
mov
pop
mov
xor
cmpsb
rorl
cmp
repnz
fiadds
lret
lds
cmc
xchg
andb
adc
cmpsb
fmul
rcl
xlat
insl
pop
jno
iret
call
push
mull
scas
mov
sti
cld
daa
cli
adc
pusha
enter
jp
jecxz
rcrb
jae
xchg
pop
add
adc
ja
add
or
push
idivl
adc
jne
cli
mov
jbe
cmp
imul
mov
lret
call
out
adc
out
test
movl
test
notb
adc
adc
xor
or
xchg
jbe,pt
outsl
mov
jbe
mov
sahf
iret
xor
add
pop
push
jg
inc
jnp
pop
shrl
arpl
outsb
or
es
adc
clc
js
jb
fstps
push
jne
push
mov
or
mov
aaa
cmp
pop
cld
xchg
pushl
xchg
mov
cmp
notl
mov
cmp
mov
push
subb
push
cwtl
fs
mov
aam
adc
push
sub
sahf
sub
aad
iret
lea
test
pusha
sub
mov
pop
outsb
call
xchg
add
call
cwtl
idiv
rcll
flds
lcall
mov
push
andb
arpl
xor
and
outsb
add
mov
js
adc
into
cmpsl
jp
push
out
fiadds
adc
repz
mov
dec
mov
pushf
sahf
lock
rclb
mov
inc
pusha
les
rorl
shll
or
aas
inc
aaa
stos
arpl
js
mov
sbbb
movsb
jecxz
pusha
cmp
jl
arpl
sbbl
fwait
push
jp
into
ret
icebp
xchg
mov
jecxz
out
popf
cld
cmpsl
inc
sub
int3
stos
xchg
int3
scas
mov
push
add
push
lret
mov
sbb
jnp
xor
and
xchg
mov
addr16
fs
js
sbb
push
clc
and
addl
or
push
sbb
aad
or
in
xchg
sub
adc
out
xor
lret
fnstsw
pushf
inc
mov
jecxz
mov
pop
mov
into
and
rcrl
inc
mov
loopne
push
gs
pop
mov
repz
pusha
cmpsl
das
gs
push
jno
sbb
cmp
mov
das
xchg
pop
push
inc
addr16
aad
mov
fbstp
in
jecxz
cld
addr16
sbbl
cmpsl
xchg
test
mov
loop
jae
inc
sbb
inc
sbb
push
mov
mov
stc
add
jmp
ret
push
or
pop
mov
insl
sub
scas
out
pop
ljmp
lock
dec
adc
mov
movsb
jnp
cmpsl
out
cmp
jno
adc
cmp
jnp
popf
push
lea
cli
jb
insb
dec
push
fdivrl
pop
mov
mov
cld
jp
adc
lods
idivl
test
xchg
xor
jmp
ret
test
dec
aad
dec
cmp
cmp
xor
cld
push
insb
insb
int
movsb
leave
mov
sti
out
cmpsl
and
pop
fiaddl
mov
jle
push
sub
or
es
iret
fiadds
movsb
movb
orb
popa
push
mov
mov
push
in
cmpsl
mov
das
cs
ss
jl
and
mov
push
push
inc
clc
xor
sbb
or
jmp
sub
movl
cmpsl
push
pop
adc
adc
xor
mov
jge
adc
in
inc
mov
lock
iret
mov
orl
xchg
dec
mov
push
leave
cmp
repz
sub
iret
outsb
sub
mov
mov
ljmp
adc
xchg
jecxz
adc
filds
jge
rol
sub
mov
inc
jb
mov
jmp
lret
sar
adc
pop
int
popf
fidivl
cwtl
push
in
sub
pop
xor
jae
sbb
out
or
adc
stos
inc
push
fnstcw
and
xor
gs
pop
mov
xor
push
imul
stc
rcr
arpl
daa
jge
push
dec
fdivrl
push
sbb
or
sbb
dec
and
pop
sbb
pop
out
outsl
insb
sub
into
out
jle
and
jnp
cmp
fists
mov
dec
lret
adc
xchg
xor
js
fs
dec
sbbb
mov
aaa
fisubrl
mov
and
ret
insb
xchg
test
out
cmp
mov
mov
pop
and
fs
mov
jmp
insb
cmp
xchg
movsl
mov
pop
lea
xchg
rcr
int3
add
pusha
mov
push
out
inc
adc
clc
push
sbb
jns
sub
insl
and
add
pop
cmpsb
lock
cld
iret
scas
outsl
daa
jnp
adc
lret
sarl
sti
adc
push
sbb
jae
sbb
or
inc
or
add
enter
movsb
jmp
xchg
lods
jae
fsubs
xchg
xor
mov
xor
popf
add
xor
or
push
and
cmpsb
xchg
dec
test
test
inc
jae
xchg
pop
sub
fucom
scas
nop
outsb
stc
and
xlat
icebp
stos
mov
lods
add
mov
and
push
sbb
fidivs
aas
xchg
fidivrl
test
cld
sbb
nop
sub
pop
insb
aad
out
loop
push
or
pop
repz
jp
lcall
lahf
jle
rorl
sbb
push
jp
mov
test
and
out
cmpsl
repz
fwait
pop
clc
pop
cmp
lds
orb
pop
test
bound
movsl
adc
cmp
hlt
fisttpll
adc
or
mov
lock
inc
mov
fcmove
clc
add
push
sbb
outsb
add
and
mov
sbb
cwtl
stos
inc
xchg
pop
sub
ds
fstps
cmp
mov
sahf
das
inc
scas
sbbb
pop
xchg
adc
adcb
test
popf
lret
data16
mov
loope
shrl
arpl
mov
inc
pop
jbe
int3
sbb
cmp
rcll
data16
in
jnp
in
test
mov
bndldx
xchg
pop
loopne
int3
aaa
sub
arpl
xchg
bnd
popa
add
sbb
adcl
cmpsl
inc
popa
mov
push
adc
jb
test
dec
adc
aam
sbb
dec
mov
stc
mov
jp
mov
jo
leave
out
dec
loope
sbb
cmp
push
lods
inc
xor
xchg
fmul
int3
inc
cmp
adc
xchg
arpl
add
insb
cmp
mov
ds
cmp
jl
xchg
push
cmp
cwtl
in
jmp
mov
jnp
mov
xchg
xchg
test
jmp
test
dec
loop
addl
xchg
sub
fisttpl
jle
mov
loop
dec
or
push
jle
fdivs
sbb
sti
pop
testl
lock
shll
sub
xchg
sub
pop
fld
xor
mov
pop
int
cmpsl
arpl
xor
lds
inc
inc
jmp
pop
ret
or
sub
sbb
push
lock
int
or
mov
jne
mov
jg
icebp
cmpsb
cmp
mov
inc
sbb
loope
xor
les
adc
stos
mov
jl
sbbl
mov
testl
cltd
push
nop
out
pop
sbb
dec
mov
dec
mov
push
xchg
sbb
call
imul
or
and
pop
or
add
das
add
scas
xor
jg
dec
loope
std
or
jbe
and
shrl
es
mov
dec
loop
cmpsl
ds
add
popf
cmpsb
nop
inc
jno
dec
xchg
adc
pushl
adc
fdivs
mov
mov
popf
xor
divb
scas
inc
add
pop
sub
rcrl
xchg
cmp
xchg
push
rcl
adc
arpl
adc
sbb
adc
repnz
cmp
cmc
mov
add
enter
mov
pop
fisubrl
mov
sbb
inc
pop
adc
jno
andl
ljmp
dec
sbb
repnz
mov
or
mov
movsl
loop
pop
arpl
xchg
pusha
clc
add
pop
xchg
andl
lock
mov
sub
pop
mov
lock
adc
mov
or
cmp
sub
scas
pushf
mov
push
insb
stc
call
movsb
lea
sub
sbb
fsts
ja
add
add
call
push
sub
outsb
adc
cld
push
jmp
scas
cmp
xchg
jmp
mov
outsl
mov
imul
ret
pop
orl
imul
ljmp
call
fstpl
jl
jbe
xlat
xchg
add
sbb
in
scas
or
loopne
ljmp
addr16
rolb
mov
cmc
push
add
jl
push
js
ficoms
push
js
scas
pop
mov
cli
hlt
pop
insb
xchg
cmp
repnz
cs
mov
push
cmp
cmpsb
cmp
repz
cmp
icebp
cmp
xor
sbb
cmc
pop
add
mov
mov
fcoml
sub
jl
push
mov
aaa
aaa
add
int
sub
fistps
sbb
cwtl
inc
pop
xchg
arpl
outsl
sbbl
out
test
push
pop
movsl
inc
shll
cmp
orl
jo
jp
inc
out
mov
jno
adc
xchg
sbb
das
int
fcomps
xchg
dec
jl
and
loop
in
adc
int3
js
cmp
insb
out
push
ja
aaa
adc
or
sbb
xchg
addb
cmp
jne
push
or
xchg
adc
mov
scas
clc
jae
imul
mov
adc
cmpsb
inc
sub
jle
pop
adcb
mov
rcll
pop
jl
add
pop
outsb
gs
mov
dec
xorl
outsb
lock
fdiv
mov
repz
inc
cmpl
std
rolb
pop
adc
cltd
mov
fstpl
ss
xchg
repz
fadds
dec
fisubl
out
call
mov
mov
filds
mov
fs
xor
jl
push
mov
cli
pusha
cmp
push
xor
jmp
pop
je
lds
inc
cmp
push
sub
int
test
xor
dec
dec
icebp
pop
mov
aad
cmpsl
mov
push
pop
lock
sbb
xchg
pushl
dec
xor
addb
loop
test
lock
cmp
xchg
inc
add
scas
rcrb
in
and
daa
adc
sbbl
xor
int
loope
pushf
mov
ja
jnp
adcl
adc
in
push
rcrl
test
xchg
ds
pop
hlt
xor
pop
mov
mov
push
mov
pop
subb
cmp
inc
fwait
xchg
cmpsl
mov
or
mov
out
dec
loopne
call
pop
adc
jbe
xor
stc
inc
xor
lock
pop
js
cmp
cmc
nop
popa
pop
int
lods
mov
jmp
into
or
xor
or
scas
push
ret
pop
rolb
rolb
sub
xor
out
out
xchg
lahf
daa
fcoms
and
inc
cwtl
lock
sar
rolb
and
mov
clc
sub
mov
into
inc
and
push
insl
fldl
cmpsl
and
cmp
xchg
xchg
sbb
or
add
and
or
inc
aam
cmp
testl
mov
pop
stos
outsb
xchg
adc
xchg
push
movsl
push
push
xchg
dec
mov
mov
inc
mov
push
imul
das
or
popa
into
insb
sub
mov
dec
or
lret
xlat
inc
cmpsb
imul
cmpsb
pushf
push
push
rorl
leave
jmp
daa
aas
inc
pop
loopne
dec
pop
mov
lea
dec
call
fisubs
mov
mov
aad
mov
imul
xchg
mov
push
out
cld
mov
rcrl
sub
pop
dec
push
mov
push
daa
or
dec
pop
cmp
mov
cmpsb
outsb
and
lea
cmpsl
cwtl
dec
inc
xor
outsl
pop
ja
mov
adc
dec
sbb
inc
loopne
xor
mov
stc
mov
or
mov
pop
or
ret
ret
ljmp
cmp
enter
stc
adc
inc
rorl
mov
outsb
sbb
ja
sbb
in
fucomp
test
mov
add
lods
lret
fdivl
mov
add
xor
mov
roll
aas
sub
outsb
jns
movsl
cltd
cmpsl
push
jmp
xchg
sub
pusha
jno
push
lahf
lds
xchg
hlt
add
pop
bound
shrl
inc
pop
inc
lret
cld
and
add
jae
stos
pop
imul
fdivp
adc
cmpsb
cld
add
inc
rclb
leave
push
inc
xchg
in
xchg
je
fidivl
jae
insl
pop
xor
or
pop
inc
test
push
sbb
das
cmpb
pop
pop
repnz
sub
sbb
jge
dec
xchg
xor
fwait
dec
in
loop
movsb
inc
testb
push
std
lret
xchg
push
inc
lret
add
out
pop
pop
mov
dec
and
call
push
sbb
fildl
in
scas
orb
and
and
popf
ja
adc
xchg
stos
inc
cli
lea
fcmovu
push
in
cld
mov
jne
orb
add
and
mov
fisttpll
lcall
scas
pop
add
xchg
call
ss
imul
in
sbb
add
cmp
jbe
sub
inc
rorl
jmp
add
cmp
es
mov
pop
out
std
imul
into
push
cmc
fsubl
add
inc
scas
cmpsl
ficomps
aaa
aas
clc
cltd
cmp
adc
or
bound
cs
inc
leave
int
int3
data16
xchg
jae
lcall
mov
in
push
add
nop
mov
daa
outsl
rclb
inc
outsb
pop
mov
ljmp
ret
jns
push
pop
mov
or
dec
js
loop
add
xchg
enter
mov
imul
loopne
test
jb
xor
incl
dec
dec
test
xchg
insb
mov
cmp
shlb
les
lea
lea
mov
fisubrl
mov
clc
sbb
ret
scas
inc
push
sub
insb
das
lahf
cmp
adcl
xchg
sub
sub
fsubrl
and
cli
sub
jo
mov
adc
and
stos
mov
sub
dec
adc
test
mov
dec
cmp
jo
imul
scas
sub
pop
adc
stos
les
inc
in
test
lods
push
call
mov
lock
inc
push
popa
jg
sarl
shrl
inc
cmpsb
jg
dec
mov
fstpl
pop
fldcw
mov
ffreep
xchg
ss
jmp
xchg
sub
jecxz
ret
sbb
mov
push
cmp
imul
pop
inc
sub
jbe
into
enter
icebp
mov
or
inc
lret
fistpll
inc
scas
ret
cmp
test
xor
fbstp
hlt
je
repz
sbb
cmp
insb
sbb
dec
inc
mov
mov
hlt
adc
jne
adc
cmp
fsubrs
xor
sub
xor
sahf
lods
mov
sub
push
stos
leave
jae
ja
in
mov
ffree
xor
dec
fnstcw
adc
xchg
outsb
add
add
sbb
sub
sub
inc
pop
fs
enter
mov
cmp
sub
jnp
push
andb
jp
add
rcrb
ja
dec
cmpsb
clc
gs
mov
add
xchg
cs
movsb
mov
dec
pop
xchg
mov
jnp
iret
movsb
shr
jbe
loope
adc
push
jbe
add
mov
popa
xchg
push
jne
sub
xchg
test
and
and
inc
popa
repnz
push
rorl
scas
int3
pop
pop
pop
jbe
or
xor
aas
outsb
add
lahf
pop
cli
daa
inc
jno
jge
xor
jg
aaa
add
mov
adc
inc
fsubl
mov
xchg
andps
cmp
and
scas
or
stc
sub
out
sbb
sub
adc
jle
sub
lahf
inc
dec
and
fldcw
jbe
xchg
dec
push
and
adc
pop
sub
test
testb
mov
sub
shrl
add
dec
icebp
adc
add
xor
pop
adc
cmp
lret
addr16
pop
xchg
xchg
in
jmp
imul
fs
xor
xchg
dec
xchg
fbstp
scas
out
fldenv
dec
dec
lods
cmp
inc
xchg
movsb
leave
scas
inc
sti
vdivsd
lret
fidivs
loopne
pusha
ficomps
mov
fstl
lods
adc
and
pop
pop
xor
push
test
pop
pop
and
inc
and
jne
stos
jbe
xchg
into
jne
call
test
dec
bound
insb
pop
outsl
push
mov
std
mov
pop
negb
loope
push
out
outsl
or
inc
mov
inc
push
outsl
mov
cmp
mov
push
ljmp
xor
lcall
rcrl
push
push
jo
test
es
xchg
jae
rcll
pop
or
ds
jbe
out
ret
cmp
dec
jmp
add
imul
add
arpl
mov
xchg
add
enter
and
ja
outsl
cmp
mov
pop
fbstp
sbb
out
in
jne
or
divl
gs
gs
ret
hlt
cmp
dec
xchg
leave
iret
sbb
jl
mov
cld
inc
xchg
insl
and
out
or
adc
lret
lar
jl
adc
lds
or
inc
rol
jmp
fcmovb
stc
push
pop
ja
push
cmp
in
shll
les
cld
jl
xchg
cwtl
in
lret
pop
add
lods
and
rcrl
iret
shr
and
lcall
mov
sti
pop
hlt
xchg
adc
rcrl
dec
and
inc
stc
popf
inc
mov
loop
dec
addb
cmp
push
xchg
out
push
xor
mov
ja
adc
out
and
repnz
mov
out
test
mov
and
add
pop
dec
xor
into
mov
push
test
mov
and
loop
shrl
mov
fnstenv
jecxz
fistps
aad
jge
jo
mov
and
fistpll
push
sbb
loop
je
xlat
repz
xchg
int3
hlt
fwait
lock
mov
sbb
pop
pushf
xor
xor
test
mov
js
rolb
adc
dec
icebp
dec
add
fxch
jae
sub
sub
inc
popf
sub
bnd
push
sti
pusha
xchg
mov
pop
ja
cmpsl
pop
jge
add
mov
xor
lods
or
test
cmpsl
push
mov
xchg
and
pop
arpl
mov
decb
sub
popf
cs
in
push
inc
dec
mov
fadds
push
popf
orl
sahf
sbb
nop
pop
lods
jbe
push
jg
aas
popa
outsl
je
lods
jle
subb
push
mov
mov
and
adc
aaa
sbb
push
fwait
mov
lret
push
sbb
lcall
cwtl
sbb
mov
or
push
movsb
aas
in
in
xchg
pusha
imul
pop
ja
cmp
mov
xor
leave
mov
xchg
jno
iret
aad
dec
dec
pop
out
fbstp
test
ds
xlat
push
hlt
adc
cmp
or
xchg
pop
push
dec
shll
or
sarl
pop
xchg
and
pmulhw
jnp
cmp
fs
test
popa
movsl
jbe
and
shrl
ret
decb
inc
les
mov
sbb
into
mov
mov
jno
jmp
mov
and
icebp
jo
push
das
xor
inc
popa
push
enter
ljmp
pop
fmuls
jge
cmp
loopne
icebp
sbb
pop
iret
push
cltd
and
out
inc
js
push
mov
test
jnp
fldl2t
aam
push
push
jns
pop
mov
aas
in
adc
push
daa
and
mov
cmc
sub
adc
adc
adc
pcmpeqd
adc
subl
xchg
lock
fsubrl
or
jge
ja
rcr
xchg
add
mov
ss
sub
or
mov
adc
lret
cmp
ret
add
ror
xor
xchg
imul
repz
sahf
sahf
cli
insl
ds
outsl
mov
aam
scas
jg
cs
inc
xor
cs
jae
inc
push
jle
dec
popf
inc
xlat
cmp
sub
outsb
and
frstor
call
in
dec
pop
dec
or
mov
xchg
shlb
cmc
pop
cmpsb
sarl
mov
jbe
gs
sbb
jp
pop
cmp
jae
push
dec
notb
mov
add
js
outsb
imul
cmp
outsb
imul
loopne
or
loop
pop
lcall
loop
mov
pop
xor
fcmovnbe
adc
mov
jns
incl
mov
cmp
stos
aad
rclb
das
dec
nop
stos
clc
push
fidivs
xor
sub
hlt
cld
xchg
es
sub
pop
sbb
jp
mov
cmp
sarl
mov
sbb
fbstp
arpl
inc
and
std
test
in
push
pop
adc
scas
mov
pop
repnz
shrl
insl
sub
dec
divb
cmc
jb
xor
mov
adc
cmp
mov
inc
mov
clc
jae
inc
adc
inc
mov
cli
jbe
or
jae
les
or
mov
test
mov
test
scas
cs
jbe
in
jecxz
aam
inc
lock
sbb
in
xchg
adc
repnz
add
mov
inc
fs
add
ds
scas
jbe
addr16
enter
xor
test
lea
mov
div
inc
ficompl
ds
clc
outsl
mov
shll
cld
mov
fnstcw
in
and
inc
stc
ljmp
add
stos
test
flds
cmpb
jne
cmp
shl
cwtl
or
shll
jmp
and
leave
push
and
lods
mov
push
in
iret
loopne
stc
or
inc
rcl
mov
dec
mov
aad
icebp
lock
das
inc
jmp
sub
inc
inc
pop
fcompl
ret
adc
loopne
jbe
add
fxch
sbb
jne
or
es
xor
push
sbb
adc
push
dec
jecxz
stc
icebp
lds
push
int
push
cmpl
ss
data16
orb
and
cmp
pop
mov
cli
loope
or
jo
ror
jle
adc
or
pop
cmp
xor
outsl
in
jno
clc
xchg
mov
orb
add
jge
lret
push
popf
mov
sub
or
subl
fs
mov
out
mov
mov
cmpsl
xchg
add
out
imul
adc
dec
inc
xchg
cmpsl
inc
sbb
insb
mov
leave
fcmovnb
xchg
add
jno
das
fsubl
cmpsb
sub
stos
pop
pop
cli
push
dec
je
lea
lock
sub
adc
pushf
icebp
icebp
push
inc
loope
pop
idivl
icebp
add
cmp
mov
sub
stos
cmp
fisubs
or
mov
arpl
enter
icebp
and
loop
daa
pop
mov
insb
lods
mov
xchg
xchg
fiaddl
movsl
pop
fsubrs
leavew
xor
xchg
or
dec
call
mov
jnp
and
mov
call
gs
arpl
arpl
push
stos
repz
pushf
and
sbb
repz
jmp
or
loop,pt
cmp
pop
mov
pushf
adc
sbb
aaa
cld
sbb
add
push
fs
mov
jbe
int3
mov
mov
insb
sbb
adc
iret
or
jns
gs
xchg
or
addr16
adc
adc
mov
pop
sbb
outsl
inc
adc
imul
xchg
int
dec
add
xchg
mov
push
mov
imul
nop
call
js
nop
test
stos
std
addr16
fs
mov
inc
fcmovnbe
xor
scas
mov
pop
xchg
lea
lods
adc
jmp
les
or
jge
jne
nop
add
cmpsb
mov
stos
push
iret
or
add
std
xlat
sbb
mov
push
pushf
add
rcl
mov
or
pop
jle
add
insl
dec
pop
outsb
cwtl
scas
fldl
iret
subl
subl
pop
push
mov
xor
cmpsb
mov
loop
in
pop
cmp
jb
fildll
push
aas
push
repnz
adc
or
int
inc
adcb
xchg
mov
ret
iret
inc
aas
xor
loop
inc
cmc
xchg
cmp
loop
cmc
test
imul
xchg
jp
jmp
xor
xchg
rorl
cli
gs
shlb
mov
dec
movntq
push
dec
adc
aaa
stos
ret
dec
sbb
clc
pop
fidivs
test
mov
jbe
sub
jno
sub
loopne
add
insb
mov
mov
imul
lcall
and
sahf
push
sti
mov
mov
inc
stos
jp
sub
push
nop
xor
mov
insb
pop
frstor
sbb
lahf
mov
cmp
adc
popa
xchg
cmpl
add
add
dec
xor
push
sbb
mov
imul
popa
fcoml
cmp
in
stos
push
sbb
jbe
fsubrl
push
filds
or
stos
inc
inc
mov
and
lods
adc
es
incl
nop
sub
icebp
pop
mov
and
mov
xchg
pop
int
xor
push
mov
add
inc
xchg
rol
fwait
xchg
scas
int3
jecxz
loope
push
mov
pop
mov
das
out
sahf
pop
imulb
jge
jae
sbb
mov
cmp
mov
pushf
add
cld
cmp
hlt
mov
insb
std
in
mov
fdivl
fstl
imul
and
push
sub
mov
repnz
pushl
and
jbe
push
stc
xchg
mov
mov
js
mulb
pop
xor
pusha
sti
and
push
cmp
loopne
add
popf
xor
xchg
es
mov
and
cltd
mov
sub
jmp
xorb
dec
daa
loopne
cli
shrb
loopne
push
popf
or
fisttpll
and
inc
dec
xchg
dec
in
aam
push
sub
inc
adc
add
sub
adc
mov
cmc
mov
bound
lock
fistps
adc
movsl
dec
sub
cwtl
gs
or
pusha
xor
xor
sbb
inc
lret
dec
outsl
loop
in
pop
xor
popa
cmpps
mov
gs
sub
or
std
dec
in
mov
outsb
and
and
pushf
mov
push
or
jp
and
int3
lea
jns
ret
rcll
xor
pop
pusha
inc
pusha
push
repz
gs
es
popa
jmp
fadd
js
mov
mov
je
scas
sub
push
mov
inc
mov
jno
int3
jbe
mov
mov
mov
testl
cmp
xchg
sub
cmp
jae
mov
les
aam
pop
cld
inc
adcb
test
push
jbe
inc
mov
ss
loopne
add
and
fiadds
or
loope
ss
inc
jg
push
test
jp
jmp
jge
xchg
fbstp
xlat
mov
jo
dec
sub
jecxz
mov
cmp
in
push
rol
inc
fisubs
and
xchg
xor
fs
mov
sbb
push
sub
sub
in
sub
andb
push
insl
add
pop
in
xchg
imul
testb
xchg
outsb
clc
fmuls
test
shr
jp
inc
popf
mov
push
and
icebp
loop
or
cmpl
mov
add
jge
test
mov
popa
clc
dec
call
or
lahf
adc
lods
xor
jp
mov
js
push
push
jbe
sub
in
insl
mov
mov
jne
and
cmp
fst
lds
jae
arpl
inc
aas
enter
jecxz
jo
les
cmp
add
in
push
sbb
mov
mov
add
iret
mov
in
xchg
out
inc
ret
xor
in
mov
jne
ret
xor
mov
sti
xchg
out
test
cwtl
call
and
mov
leave
divps
aas
lock
xor
pop
int
mov
pop
in
jns
lea
cmp
fwait
pusha
inc
lock
xor
outsb
mov
popa
ret
push
jnp
push
pop
push
aas
iret
cmp
fwait
mov
maskmovq
divl
mov
ret
lcall
lcall
adc
mov
leave
movsb
andl
jp
stos
in
and
cld
rclb
neg
cmp
push
cs
mov
mov
add
lock
repnz
loope
shl
or
mov
push
negb
mov
lock
push
nop
jle
lcall
sbb
aas
repnz
or
xlat
pop
addr16
mov
jl
mov
pcmpgtw
xchg
cmp
cmp
push
shlb
dec
bound
bndstx
mov
fidivrs
jp
into
movsl
xor
inc
push
ljmp
out
lea
repz
bound
pop
mov
sub
popf
in
test
mov
fs
xor
push
push
cltd
xchg
jle
and
cmc
adc
leave
jae
gs
mov
shll
push
fcoml
test
adc
and
xor
jbe
add
sbb
cmp
repz
repz
jle
dec
nop
outsb
sub
push
xlat
mov
cld
xchg
pop
imul
mov
cmpsl
push
push
mov
mov
call
mov
sub
xchg
cld
cmp
xor
pop
inc
lcall
imul
pop
pushf
nop
ficompl
movsl
enter
data16
xchg
pop
and
fwait
cltd
push
mov
jmp
and
sahf
lock
test
lret
addl
daa
adc
aad
push
sub
dec
sbb
jg
cmp
lahf
xchg
jbe
cmp
movb
jo
cmp
ficompl
ret
testb
lods
pop
xchg
mov
rcrb
mov
cmp
pop
addr16
sbb
cs
jmp
xlat
xlat
inc
in
pop
test
sbb
outsb
ja
xchg
lcall
sub
push
shrl
dec
push
push
aam
mov
sbb
mov
es
dec
xlat
jbe
das
jg
sbb
inc
imul
and
iret
addr16
inc
cwtl
xor
xor
popa
adc
in
std
adc
adc
jb
and
fmull
cmp
push
pop
cwtl
cmp
dec
push
and
mov
and
or
mov
testb
cmp
jae
fsqrt
lods
fidivs
mov
mov
pushf
pop
mov
and
push
mov
popf
lahf
stc
xchg
inc
loope
xor
xchg
xor
add
mov
pop
in
nop
scas
or
push
lcall
mov
add
sbb
out
dec
stc
ffree
testb
imul
push
mov
push
push
aad
pop
loope
iret
push
dec
pop
jns
and
or
dec
lret
mov
scas
dec
in
fldt
into
testl
jbe
mov
mov
inc
sub
lret
or
mov
pushl
int
lret
push
aaa
cmp
addr16
std
mov
fsubl
ja
pop
mov
mov
in
in
push
pop
and
sub
jp
jns
mov
movsl
fisttpl
hlt
shll
dec
add
mov
add
and
mov
push
in
push
add
xchg
dec
pusha
cmp
sti
outsb
lret
mov
xchg
adc
dec
jecxz
fcoml
test
mov
loopne
inc
push
cmp
add
test
or
sub
and
xchg
ja
scas
sub
fs
or
loope
push
mov
pop
mov
lret
jnp
popf
sbb
and
xchg
rcl
daa
pop
sub
std
adc
cmp
pop
jno
adcb
mov
lock
fnstsw
pop
mov
pop
adc
adc
and
push
mov
cmpsb
mov
insl
sahf
daa
cmp
adc
cli
ret
arpl
cmpsl
xchg
scas
clc
xor
cs
jnp
cmp
dec
cld
jg
rorl
and
fsts
adc
in
mov
je
in
cmp
xor
addr16
xchg
mov
dec
in
arpl
loopne
lret
or
sti
aam
in
xlat
ljmp
cwtl
or
stos
xor
push
xor
xor
stos
sarb
loop
xchg
fwait
xchg
imul
or
aad
repz
movsb
inc
fnstcw
and
pop
sahf
pusha
lret
dec
insl
pop
sub
mov
daa
mov
negl
cmpl
fwait
inc
sbb
add
loopne
sub
mov
dec
outsl
pop
push
in
aad
shrb
push
and
jmp
sbb
add
dec
ret
push
jmp
insl
jg
stc
dec
es
mov
push
cmpsb
adc
mov
cmp
xor
les
push
mov
iret
out
fisubrs
in
lods
push
movb
push
leave
in
adc
in
fwait
xchg
dec
pop
push
cmp
and
stos
cmp
mov
add
adc
enter
mov
pushf
insb
das
mov
sbb
fbstp
out
dec
mov
sbb
pmuludq
xor
in
cld
mov
aad
add
xchg
addr16
xchg
adc
clc
and
mov
xchg
je
mov
sbb
push
and
push
add
dec
in
andb
adc
or
cmp
cmc
adc
scas
iret
loop,pt
dec
outsb
loope
add
xor
adc
dec
ret
jl
adcb
mov
sbb
loopne
stc
in
fs
add
enter
inc
cwtl
insb
fdivrl
xchg
push
imul
push
daa
setg
bound
in
mov
out
mov
or
in
ret
cmp
sbb
icebp
xchg
or
add
push
jecxz
pop
adcb
sahf
or
lods
jp
sbb
or
in
mov
sub
shll
and
xorb
fnstenv
mov
xchg
cs
mov
lea
into
add
int3
insl
out
jnp
in
movsb
adc
pop
adc
or
lods
mov
stc
mov
cmp
inc
dec
leave
dec
jle
rolb
dec
mov
jp
out
cld
and
lods
in
outsb
loope
mov
mov
or
push
movsl
xor
pushl
mov
popf
or
cmp
fs
inc
shlb
dec
daa
dec
notb
cmpl
or
jbe
xchg
aas
cltd
stos
fwait
jecxz
push
cmc
loopne
jmp
test
dec
add
pusha
mov
cmpsl
jge
leave
scas
or
push
cmpsl
sarb
insb
inc
pushf
subb
repz
lahf
insb
add
cmp
sarb
je
adc
jle
mov
andl
leave
push
sbb
mov
lcall
jl
xor
add
imul
mov
xor
cmp
test
jg
mov
xchg
int3
jo
icebp
pop
sahf
loop
xor
mov
test
mov
fidivrl
gs
xor
test
and
mov
push
xor
ljmp
mov
lock
dec
and
sub
and
and
cmp
pop
dec
cwtl
add
adc
pop
mov
pop
test
mov
pusha
hlt
lea
lcall
shl
lret
adc
and
dec
das
or
push
cmp
xchg
lret
xor
lea
loop
adc
insl
mov
pop
shrb
imul
rorb
outsb
adc
cmpsb
or
fdivr
test
xor
dec
jmp
dec
rcrl
cmpsl
fs
xchg
pop
jo
lret
sub
mov
dec
enter
mov
les
cmpsl
fmull
or
sub
stos
out
adc
add
mov
cmpsl
cmp
push
loop
jle
xor
xchg
mov
stc
push
out
pop
cmp
test
faddl
mov
sub
cmpsl
out
xor
dec
jle
xor
stos
cmp
xor
shlb
or
daa
mov
mov
sti
add
mov
or
je
inc
into
pop
inc
loop
push
xchg
aam
leave
in
or
cmp
in
imul
inc
leave
or
sub
inc
push
xor
rcll
dec
imul
xlat
jecxz
pop
cwtl
lds
test
fucomip
pop
insb
cli
mov
cmp
mov
nop
imul
push
mov
les
rcll
or
adc
andb
ja
fwait
repz
insl
jge
cmp
adc
push
repnz
cmpsb
xchg
scas
jns
mov
mov
inc
insl
xchg
inc
xor
popf
out
dec
fmull
movsl
int
repnz
ljmp
pop
popa
push
sub
ljmp
jno
inc
jnp
mov
push
mov
leave
mov
cmp
in
jl
inc
dec
push
add
add
stos
ljmp
aaa
sbb
mov
xor
push
jle
loopne
push
fisubl
pop
loope
sbb
int
sub
xchg
cmp
ss
shlb
repnz
adc
loopne
jno
mov
mov
mov
add
push
pop
aad
and
fsubr
mov
rolb
dec
pop
testl
xlat
dec
daa
dec
or
cmp
call
dec
mov
lea
pop
xchg
dec
les
or
out
cmp
lcall
in
xor
sub
push
mov
mov
mov
movsb
adc
sbb
cmp
xor
pop
lret
cwtl
push
xlat
jbe
rcll
inc
shrb
ret
cmp
mov
loope
inc
jecxz
hlt
mov
push
pop
int3
inc
inc
inc
jmp
push
out
aam
mov
pop
xor
mov
xor
and
xchg
pop
call
loopne
pop
stos
rcl
pop
mov
fnsave
sti
inc
sahf
sbb
outsb
xlat
mov
sti
fwait
mov
insb
xchg
int3
popf
xchg
test
hlt
fdiv
jno
pop
mov
fwait
sti
and
sub
push
jge
mov
xchg
inc
pop
popf
mov
and
sub
lcall
aad
jbe
je
ds
bound
cli
push
mov
jne
push
mov
gs
xchg
jmp
push
into
mov
xchg
xchg
aam
test
xor
sub
mov
mov
cmpsl
mov
nop
adc
or
mov
cwtl
add
and
or
loop
inc
push
adc
fistpll
test
inc
pop
inc
push
push
jle
push
lods
jle
fidivl
cmp
shrl
dec
test
sahf
std
xchg
mov
mov
das
cmp
test
dec
xchg
xor
push
sub
mov
outsb
xchg
sub
push
andb
je
mov
loop
ss
aad
jne
sub
ss
jbe
or
in
aas
jl
andb
or
pushf
and
and
mov
test
imul
scas
ds
mov
outsl
dec
pop
lret
xorb
add
std
xchg
pop
jo
sub
sbb
inc
inc
fstp
mov
es
arpl
mov
iret
movsl
mov
pop
push
push
xchg
push
aaa
mov
mov
popa
mov
jno
and
lret
cld
lock
xchg
sub
arpl
std
sub
pusha
das
faddl
arpl
cmp
mov
shl
mov
jns
test
pop
ficoml
and
stos
ja
fstl
and
xchg
adc
fs
fdivl
popa
ds
arpl
xchg
sub
xor
bound
mov
xor
mov
mov
scas
pop
push
sbb
mov
xchg
mov
push
inc
push
fistpll
mov
pop
popf
mov
inc
xchg
inc
pop
shrl
dec
in
cli
movsl
ret
daa
mov
mov
jmp
mov
cmp
jnp
jno
mov
mov
jns
add
cmp
ror
out
lock
aaa
add
rorb
test
inc
stos
mov
jl
ret
mov
xlat
mov
mov
add
push
nop
sahf
and
push
adcb
mov
in
std
jo
mov
ss
mov
cltd
xor
loope
std
in
mov
mov
and
mov
dec
mov
pop
test
daa
mov
popf
dec
ret
xor
lret
stos
add
repnz
dec
sahf
push
idivb
push
aas
inc
popa
jno
xor
mov
popa
dec
mov
cmp
xchg
xchg
mov
popa
xor
mov
xchg
outsl
push
les
lea
aaa
xor
jne
fsubl
and
enter
rcrl
or
dec
push
mov
cmp
repz
mov
push
movsl
cmp
xchg
sub
shlb
and
mov
adc
in
adc
xor
push
fwait
xchg
fidivrl
std
mov
clc
das
sub
cmp
pop
aad
add
mov
pop
repnz
sub
jg
hlt
inc
add
out
andb
stc
mov
test
sti
push
jo
lods
daa
add
fucomi
or
xchg
sub
sub
jb
les
testb
stos
mov
scas
inc
jne
sub
push
xchg
int3
dec
push
sub
cmc
jge
or
ret
rcll
push
dec
sub
ret
pop
sub
pop
pop
push
lahf
pop
lcall
cwtl
das
js
xor
fisubs
andl
mov
out
lods
hlt
cmp
mov
add
jno
popa
ficomps
sbbb
loop
and
sti
popf
test
daa
sbb
mov
out
mov
sti
stc
lods
inc
sub
mov
xor
nop
daa
sub
adc
insb
xchg
push
stos
cmp
xor
mov
inc
in
adc
test
popa
js
sahf
push
xor
mov
cs
push
test
or
cmpb
mov
jbe
enter
and
dec
lret
test
arpl
sub
rorb
jle
out
fwait
imul
test
pop
dec
dec
mov
xchg
fdivrl
sbbl
addr16
xchg
push
leave
ljmp
add
in
push
shl
or
out
fwait
xor
push
mov
mov
xorb
jo
xchg
add
arpl
lahf
push
sub
and
lods
cld
lret
inc
mov
inc
jbe
aam
int
shlb
jnp
push
and
xchg
lods
push
pop
andb
ss
jl
mov
jle
sub
insl
sbb
adc
and
js
lret
imul
data16
sub
jns
ljmp
notb
and
push
pop
out
jns
sbb
xchg
addr16
mov
in
adc
into
andw
xor
cmp
lods
cmp
in
xchg
dec
ret
stos
fwait
pop
fstl
pop
imul
fldt
inc
xchg
xor
push
loop
or
es
inc
dec
in
fidivrl
pusha
fsubr
test
mov
fs
scas
notl
addb
mov
xor
xor
and
or
repz
test
inc
sub
mov
jno
cwtl
sub
mov
in
iret
lahf
test
add
sbb
adc
in
lods
mov
andl
and
or
and
iret
sub
inc
enter
xlat
aam
cmp
or
repz
jo
xchg
push
fidivs
shll
pop
xchg
inc
cmpsl
clc
xor
divl
jo
pop
mov
inc
adc
sti
insl
jne
subb
adc
ret
outsb
frstor
jb
loop
testb
dec
push
fidivrl
jge
push
jp
add
shr
scas
insl
aaa
lds
inc
into
push
mov
in
loopne
aam
add
mov
mov
adcb
mov
inc
dec
ret
lods
pusha
cmp
pushf
inc
scas
add
std
sub
pop
shrb
in
add
daa
adc
mov
mov
pop
repz
add
mov
or
push
xor
in
loopne
ret
mov
cmpb
dec
mov
xor
insb
add
adc
sti
int
mov
mov
loopw
iret
xor
jae
cmp
insb
push
sub
mov
xchg
pop
or
dec
outsl
lods
jg
arpl
pop
push
cltd
mov
dec
shl
dec
cmp
inc
push
nop
cmp
lcall
sub
hlt
sbb
xor
sbb
fbstp
or
jne
xchg
aaa
dec
outsl
or
faddl
aas
je
jmp
pop
lahf
lret
pop
pop
std
pusha
sahf
lods
out
shll
inc
sub
jmp
adc
cwtl
jae
in
ss
sbb
sbb
mov
or
mov
or
jmp
cmpl
imul
pop
inc
add
add
cmp
mov
outsl
out
jge
ret
filds
mov
in
lods
inc
lret
iret
adcb
xchg
fs
and
out
cmp
cmp
dec
and
xor
pop
mov
divl
jmp
fsubs
mov
or
adc
or
outsl
rcrb
or
outsb
add
dec
mov
mov
test
add
les
xchg
je
jl
mov
pop
shl
int
in
pop
xor
or
in
xchg
ljmp
bound
test
mov
lock
js
test
push
mov
sti
add
xchg
cs
fbstp
pop
xchg
inc
gs
xlat
lock
int
xchg
pop
mov
jmp
ja
xchg
jns
adc
xor
xlat
fs
mov
lcall
mov
scas
sarb
aad
into
pop
dec
xor
add
jmp
flds
mov
int3
push
xor
sbb
cmp
or
add
sub
cltd
jb
inc
jge
jne
shll
mov
fnsave
mov
sysexit
push
jnp
nop
sarl
ffree
bound
scas
xchg
call
mov
mov
mov
xchg
mov
push
mov
fldt
lods
lret
mov
adc
fistpl
and
nop
mov
dec
push
sbb
insl
imul
out
xor
fiaddl
xchg
dec
jns
sub
ss
mov
lds
test
cmove
stos
in
jge
cmp
test
daa
dec
out
xchg
push
mov
xchg
sbb
shll
fisubs
sbb
ja
inc
nop
sbb
xchg
out
xchg
cmp
lods
jb
fisubrs
xchg
orb
nop
inc
stos
cmpsb
and
sahf
add
sbb
pushf
jne
jne
and
fdivrs
dec
fcomi
pop
pushf
mov
loopne
cmp
inc
stos
js,pn
mov
add
ja
repz
bound
xor
xor
inc
out
jmp
sbb
mov
ficomps
data16
shll
lahf
cmp
rorb
pusha
xor
insb
js
mov
lock
sti
adc
test
pop
pop
ja
loop,pn
add
test
in
loop
in
push
ja
add
xchg
mov
mov
cmp
inc
data16
inc
or
lret
daa
xchg
pop
repnz
jecxz
adc
insb
aaa
push
xchg
mov
sub
adc
or
sub
lods
in
jp
outsl
cmp
popl
jno
push
leave
push
cld
cmp
mov
insb
pop
and
das
add
xchg
mov
fwait
inc
add
out
and
adc
adc
inc
xorl
scas
sahf
inc
push
fistl
in
lahf
cltd
pusha
data16
inc
xor
or
cmp
push
lcall
xor
sub
sar
leave
sbb
cmp
mov
idivl
jge
dec
cmpsb
xchg
ja
jg
cmp
shll
dec
hlt
mov
dec
and
mov
add
lret
jl
icebp
inc
or
sbb
std
shlb
lock
sub
stos
jb
mov
ljmp
je
adc
push
jno
jne
jb
adc
icebp
paddq
test
sbb
mov
test
dec
fsubrl
pop
dec
lods
lea
lods
cmc
push
das
or
gs
add
inc
xchg
jg
out
cmp
fmul
mov
popf
div
fwait
scas
mov
negl
aaa
je
mov
xorb
imul
mov
adc
jns
adc
sub
out
shlb
fisubrs
mov
push
dec
ds
sbb
into
dec
pop
inc
push
or
pop
icebp
xchg
out
sbb
add
cs
mov
push
rcrb
iret
fs
lds
movsb
loope
loopne
outsl
flds
add
mov
orl
sbb
inc
in
pop
sbb
aas
in
mov
call
ss
hlt
mov
adcb
pop
stc
lds
cld
push
data16
add
loope
cmp
cmp
adc
cmp
xchg
je
sub
xchg
mov
push
and
out
int
in
scas
movsb
push
std
push
cld
push
sbbb
pop
inc
rolb
adc
mov
es
popa
mov
jp
and
add
pop
mov
outsl
call
mov
pop
xor
mov
loop
or
loop
gs
ljmp
call
cmpsb
pop
inc
lods
jo
sti
sub
pop
mov
sbb
cmp
loope
cmp
jbe
xor
lcall
loop
mov
and
jb
jecxz
pop
add
mov
repnz
xchg
xor
data16
cmp
adc
clc
ss
adc
cmc
xlat
push
popf
pop
jg
cmpsb
arpl
ret
icebp
xor
cmpsl
mov
push
popf
shrl
sbb
sub
in
xchg
xchg
push
shrb
xchg
cmovg
sbb
pop
iret
mov
mov
push
fs
adc
test
xchg
xor
jne
xor
mov
sub
mov
ja
mov
xlat
jmp
dec
int
jae
aad
test
adcl
cld
jnp
call
jle
pop
inc
mov
push
repz
mov
add
out
jle
fidivs
test
mov
cs
jp
push
or
scas
inc
jns
lahf
xlat
jns
dec
loop
mov
mov
js
lcall
jne
mov
add
in
pop
or
je
sbb
sub
xor
pop
or
decl
lret
inc
xlat
js,pt
insl
cmp
jae
cltd
stos
or
pop
mov
mov
mov
aad
fwait
dec
pushf
inc
inc
sub
mov
fdivrl
jg
stc
scas
and
pop
xchg
sub
push
jns
nop
mov
fsubl
xor
and
inc
mov
mov
xchg
dec
stc
mov
jb
jl
mov
pop
fbstp
xor
mov
jle
sub
ss
mov
adc
pop
pusha
cli
adc
jl
daa
cmp
outsl
push
mov
pop
outsl
adc
mov
les
imul
xlat
testb
jecxz
dec
and
mov
push
cli
pop
loope
inc
jge
jae
sub
imul
insl
fisubl
es
mov
adc
pop
mov
dec
mov
dec
xchg
sbb
xor
lea
stc
nop
fsubrl
jmp
jae
imul
ss
and
sub
push
dec
dec
lods
and
fnsave
pop
movsb
cwtl
repnz
sti
xchg
lret
ds
cmc
mov
cs
sub
inc
pop
jae
push
or
icebp
xor
fwait
push
je
pop
mov
add
repz
jne
mov
mov
xchg
cmp
xor
movsl
pop
daa
into
pop
xchg
outsb
mov
aam
jmp
and
cmp
mov
mov
or
dec
popa
clc
jae
lods
pop
lcall
fsubs
les
movzwl
adc
fistps
loope
jb
adc
addr16
xchg
xchg
hlt
jl
cmp
cmp
add
negb
scas
jp
rcrb
add
xor
or
shl
ja
cmp
xchg
mov
adc
scas
push
roll
dec
push
cmpsl
push
pop
lahf
inc
movsb
stos
in
and
shrl
push
pop
frstor
pop
adc
pop
aad
fs
dec
call
imul
add
pusha
inc
js
dec
pop
push
push
push
cmp
xchg
mov
sbb
xor
cli
push
and
fdivrs
fisubrl
mov
xchg
adc
dec
mov
addr16
fsubrs
cmp
das
sub
jno
gs
cs
aam
jne
add
pop
addr16
add
pop
sub
pop
pop
outsl
cmp
xor
add
les
push
test
mov
sub
adc
negl
mov
mov
test
enter
lcall
push
mov
shl
movsb
mov
sbb
inc
push
out
jl
arpl
mov
pop
repnz
lods
inc
pop
fidivrs
mov
popa
movsb
mov
je
push
jno
xchg
xchg
jle
repz
dec
std
or
cmp
push
shrl
les
xchg
adc
rolb
cltd
daa
sti
loopne
push
cmp
outsl
mov
dec
and
adc
cwtl
pop
in
cmp
mov
pop
hlt
mov
push
fs
push
sub
push
sub
push
arpl
adc
and
jl
cmpb
pop
ret
adcb
cmp
js
and
jbe
push
shl
stos
mov
xor
push
mov
rclb
ret
jmp
decl
pop
cmp
int3
jne
mov
pop
sarb
xor
push
stos
inc
jbe
call
push
lcall
popa
jmp
out
sub
mov
push
icebp
leave
mov
jge
pop
out
movl
int3
add
mov
cmp
sub
cli
std
sub
aaa
dec
repnz
aas
cmp
jge
sbb
rcll
pop
cwtl
mov
and
fisubs
adc
movnti
pop
mov
xlat
cmp
mov
mov
cmp
push
or
sub
fdivrl
pushf
inc
xchg
mov
ret
faddp
in
or
cmp
dec
aaa
ret
mov
arpl
stc
xor
mov
xor
cwtl
adc
jb
enter
mov
mov
xchg
dec
popf
mov
popa
mov
in
xchg
sbb
rorl
jae
xchg
fisubrs
sub
fisttpl
lds
ret
sbb
ds
dec
repz
fisttpl
jp
add
dec
in
adc
test
mov
add
stos
jg
cmc
mov
jg
fsubrs
adc
adc
push
mov
and
push
imul
negl
andb
dec
mov
mov
fwait
mov
and
or
mov
fnstenv
and
push
pop
mov
pushf
scas
dec
shlb
dec
aaa
or
adc
sbb
out
cmp
fstl
cwtl
pop
call
loope
mov
int
and
xor
loop
clc
pop
js
scas
std
int
pop
loopne
loop
insb
mov
jp
repnz
pop
andl
clc
loop
imul
les
jns
mov
ret
movsb
lods
xorl
jg
push
test
jns
jecxz
push
movsb
push
into
out
xchg
out
or
jns
mov
sbb
xchg
inc
or
nop
xor
mov
outsb
test
jns
push
scas
incl
or
push
movsl
sbb
std
jno
jp
cltd
mov
add
iret
fsub
sub
scas
ret
in
aaa
shlb
push
hlt
jae
push
xchg
cmp
loopne
outsl
pop
lods
mov
push
xchg
adcl
and
cli
push
rol
xchg
xchg
sbb
imul
or
cs
add
add
pop
mov
jo
arpl
pop
test
loopne
adc
sbb
gs
test
notb
xor
loop
sbb
xchg
ret
test
sub
add
adc
mov
add
pusha
jb
jb
sub
rcrl
or
inc
adc
sahf
fbstp
int3
lahf
stos
adc
cmpsb
cmp
xchg
sbb
lahf
stc
mov
cmp
rcrb
jbe
ret
pusha
loop
aad
adc
push
imul
shlb
loopne
dec
lret
stos
aad
leave
xor
push
pop
shr
xlat
cmp
icebp
or
inc
out
or
xchg
mov
xor
fidivs
or
jge
ss
xchg
pop
xor
jge
dec
daa
mov
cmp
je
es
rorb
xchg
sub
loope
out
inc
pop
mov
add
jge
adc
mov
add
cmp
lahf
jl
lods
rolb
inc
dec
add
sub
sahf
clc
cmp
push
je
xchg
or
push
add
pop
mov
cmp
imul
outsb
je
clc
popf
or
and
pop
aaa
scas
inc
mov
loope
fsub
push
adc
sub
test
pushf
dec
add
jecxz
pop
ja
and
mov
add
and
push
xchg
and
sbb
mov
cmp
sti
pop
add
loope
movsl
pop
shrl
pop
in
popa
shlb
jecxz
pop
outsl
incb
mov
xlat
test
fs
lods
mov
push
mov
jbe
dec
or
xchg
mov
mov
mulb
test
adc
insl
test
add
je
popf
enter
add
cmp
jecxz
push
adc
sbbl
mov
stc
pop
dec
sbb
jmp
outsb
mov
dec
mov
loopne
inc
fidivl
add
stos
lods
mov
aaa
push
dec
mov
pop
iret
jbe
popf
push
iret
pusha
out
cltd
cmpsb
addr16
inc
cltd
add
inc
mov
fxch
pop
pusha
hlt
nop
daa
es
pop
neg
mov
jle
das
test
mov
aas
add
push
pop
shld
lods
and
jbe
arpl
cs
fstpl
and
sbb
mov
repz
jle
push
daa
nop
or
loopne
or
xor
and
iret
lret
mov
or
push
mov
push
fsubrl
fistl
cmpl
and
std
lahf
daa
shr
rclb
daa
mov
gs
testb
xor
mov
push
xor
fwait
or
inc
lock
dec
pop
in
gs
jne
jo
incl
fcoml
mov
push
add
cmp
mov
outsb
out
adc
pop
hlt
fidivs
stos
cld
sub
stc
pop
fldl
mov
fwait
jb
subl
dec
pop
test
je
mov
sbb
out
jg
push
fisubs
pop
push
jl
mov
or
inc
mov
xchg
xor
repz
popf
xchg
cs
xor
fsts
mov
ret
sbb
or
iret
cmp
fidivrl
leave
testb
xor
adc
adc
adc
addr16
in
dec
push
sub
xor
push
xchg
push
std
push
cmp
xlat
outsb
jle
dec
scas
pusha
dec
cmc
mov
xlat
js
pop
inc
test
adc
push
push
stos
push
add
fcomps
xchg
in
jo
jns
cmp
pop
mov
jnp
movsb
and
jnp
out
fistps
hlt
and
jnp
loope
je
push
aam
xchg
lahf
les
mov
pop
xor
sbb
push
addr16
jo
lea
mov
dec
loop
les
test
add
inc
lahf
pop
mov
int
jle
enter
xchg
jns
sub
jg
dec
and
xchg
pop
loope
daa
daa
insl
hlt
inc
xchg
cld
js
into
sahf
ret
xchg
xchg
jmp
popl
out
outsl
cmp
inc
rcrl
insb
jle
icebp
jg
cmp
pop
mov
shr
fwait
add
pop
jg
sbb
sbb
stc
and
mov
push
sub
adc
test
js
sahf
or
inc
xlat
sub
popa
iret
ret
push
adc
add
mov
cld
out
mov
rol
adc
fisubrl
mov
sbbb
add
int
mov
loopne
mov
insb
idivb
jae
push
cmp
lret
fbstp
int
in
xlat
lcall
mov
lret
stos
pusha
bound
mov
mov
or
repnz
adc
sbb
or
push
repnz
das
jo
aad
xchg
mov
vmovd
cmp
jno
jno
lret
mov
push
fsubl
xchg
jge
sub
lret
sahf
daa
into
xchg
not
sub
mov
adcl
xor
fs
outsl
mov
into
push
add
fsqrt
adc
mov
sub
mov
lock
pop
ret
repz
arpl
out
dec
cmp
repnz
push
ljmp
jno
cmc
test
outsb
fstps
repz
dec
adc
bound
inc
add
mov
ljmp
sahf
call
fnsave
jmp
sti
pop
movsl
push
pusha
jns
mov
and
aas
das
mov
ret
dec
cmp
jecxz
xchg
sub
sbb
in
add
sub
fwait
sti
mov
int
cld
mov
jp,pn
mov
pop
mov
dec
cmp
insl
in
mov
jge
sti
fwait
mov
repnz
or
push
jmp
hlt
lahf
add
xor
xchg
test
repnz
loopne
es
inc
mulb
ja
cmp
mov
jns
lea
lret
repz
cmp
pop
fstpl
dec
and
pop
aaa
int3
mov
ficoms
mov
or
stc
mov
xchg
add
mov
or
dec
xchg
mov
fisubrs
cwtl
sahf
cmpsb
out
mov
sub
and
pop
out
leave
lea
cltd
stos
mov
enter
sbb
push
inc
cwtl
loopne
and
insb
push
or
dec
dec
xchg
mov
not
rcrl
lret
lret
pop
sbb
adc
movl
push
in
sti
fdivr
icebp
popa
repnz
cmp
mov
cmp
inc
fisubl
std
lods
xor
jns
push
xor
pop
scas
sbb
arpl
xchg
adc
dec
shll
sub
sbb
je
sbb
leave
jo
add
stc
sti
push
mov
lods
stc
inc
pop
sbbl
add
push
or
xchg
mov
mov
mov
lret
ljmp
push
scas
mov
jp
into
xorl
fsubs
fwait
in
fnstenv
xchg
cmp
sub
dec
or
or
adc
shll
or
xor
dec
xchg
fildll
push
lods
nop
xlat
push
leave
adc
push
xor
adc
lds
cmc
out
cwtl
imul
hlt
fwait
out
das
add
daa
call
decb
jno
mov
orl
xor
gs
rcll
pop
mov
nop
ret
movsl
or
adc
adc
push
fcomps
mov
jae
mov
sbb
test
cli
xor
outsb
out
dec
push
xchg
pushf
lods
in
and
fcomip
sbbl
xchg
lret
add
fcmove
xorb
add
js
arpl
lods
in
pop
dec
fnstsw
mov
mov
inc
test
jb
in
jecxz
jle
adc
push
mov
add
bound
adc
pop
jbe
lds
mov
ljmp
hlt
les
sbb
or
push
pusha
lds
mov
push
sbb
test
loope
outsb
cs
adc
mov
stos
xor
and
jl
add
flds
mov
cmpsl
cs
je
or
std
add
mov
mov
mov
fildl
movsl
adc
sbb
in
or
xor
xlat
neg
jp
or
in
jnp
mov
daa
insb
inc
nop
jl
or
push
mov
outsb
outsl
or
cmp
imul
in
sbb
xchg
mov
xorl
mov
push
sbb
sbb
aam
loopne
mov
in
fwait
mov
popa
push
lods
xchg
mov
int
outsb
or
cmp
lock
in
cmp
jae
cmc
cmpps
pushf
cmp
imul
sub
mov
dec
or
and
outsl
mov
pop
cltd
test
mov
rol
add
or
push
sti
jbe
add
xor
insl
mov
jno
inc
sbb
mov
push
and
dec
leave
xchg
call
and
fwait
jmp
das
push
mov
shl
dec
push
je
inc
andb
popf
jne
cmpsl
sub
inc
pop
enter
dec
cmp
push
pop
movsb
repnz
push
xchg
js
mov
lds
mov
mov
int
mov
mov
pop
in
ss
adc
xor
jne
roll
adc
cmpb
xchg
adc
in
test
shl
test
mov
mov
cmp
je
xchg
dec
aad
push
dec
or
icebp
mov
push
or
adc
lret
andl
pop
outsb
scas
in
add
nop
jmp
or
mov
stc
nop
int3
cmp
adc
dec
adc
mov
jecxz
mov
dec
out
aaa
dec
in
setl
loope
inc
idivl
mov
inc
mov
xchg
shr
lea
mov
arpl
mov
out
push
lods
xchg
fcomps
test
sbb
mov
jl
nop
mov
fistl
popf
andb
mov
mov
mov
fbld
mov
push
or
icebp
sahf
subl
aaa
les
push
jno
test
adc
popf
aad
jecxz
sub
mov
jge
sbb
pop
adc
popa
sahf
inc
sbb
cmp
and
xchg
sbb
push
loopne
fistps
dec
jns
lea
dec
push
inc
insl
ja
fstl
stos
enter
out
push
mov
pop
pop
lods
and
mov
mov
or
or
cs
notl
mov
cs
aam
jae
in
scas
pusha
pop
xorb
pop
mov
dec
xchg
inc
push
ljmp
jg
fs
pop
cli
xlat
pop
sahf
or
pushf
pop
jbe
adc
push
sbb
sbbl
out
test
subl
add
testb
sub
pop
stc
stos
rep
lret
add
jno
push
sbb
mov
orl
repnz
loop
cmpsl
dec
ljmp
jp
shrb
fbstp
ss
xchg
push
jmp
test
mov
push
sub
and
sbb
inc
sbb
pop
mov
or
sub
lods
pusha
sub
addr16
das
pop
dec
push
cld
xor
inc
fmul
lock
or
adc
nop
push
jecxz
addr16
add
sbb
rcr
aas
lods
inc
jno
push
aas
push
push
jne
pop
sti
dec
rolb
sbb
push
pushf
das
imul
rolb
jnp
loopne
sub
mov
jbe
test
lret
jo
repnz
arpl
insl
pusha
jp
dec
mov
sti
pop
inc
ret
cli
nop
push
jle
mov
cmpl
fcom
cld
prefetch
xchg
sub
rorb
dec
repz
jb
insb
sbb
loope
mov
orl
xchg
aaa
jg
stc
mov
and
xchg
pop
lret
sti
stos
adc
fistpl
out
inc
loop
xchg
outsl
test
fldenv
cwtl
das
vcvtpd2dqx
mov
dec
push
ljmp
scas
scas
in
out
mov
jle
xor
dec
stc
add
adc
inc
pop
xor
int
cmp
and
pop
pushf
pop
or
dec
les
sbb
push
cltd
mov
mov
out
mov
ret
xchg
fildll
push
mov
cmpb
sahf
dec
pop
ret
loop
xchg
arpl
sbb
jnp
inc
mov
cltd
das
stos
mov
aaa
int3
mov
push
mov
mov
push
jl
pop
loope
lcall
cltd
sub
dec
pop
out
push
mov
pushf
add
pushf
xchg
stc
adc
ret
outsl
pop
mov
cli
add
test
push
std
cltd
pop
jno
lret
add
in
adc
inc
adc
push
dec
mov
mov
inc
xor
add
outsb
dec
mov
adc
iret
movsb
mov
sub
shrb
testb
jge
aad
les
testb
mov
push
jnp
test
sarb
out
xor
cwtl
pop
add
xchg
mov
pop
or
or
and
xchg
push
insb
xor
mov
cmpsb
ret
aad
addps
movsb
pop
push
mov
test
mov
sbb
add
mov
pop
mov
mov
adc
xchg
sub
notl
daa
push
pop
bnd
daa
pop
icebp
cwtl
pop
add
and
push
mov
pop
jmp
test
aaa
xchg
adc
mov
mov
dec
sbb
mov
rolb
jmp
fsubs
es
std
xchg
sub
xor
mov
sbb
cmp
sahf
repz
cmp
xor
lahf
mov
call
outsl
and
push
sub
sub
fisubrs
xor
movsb
imul
mov
pusha
clc
jae
int
cmp
fucomip
and
dec
ljmp
pop
or
rcrb
mov
push
sbb
add
enter
xor
cmp
sarl
inc
sub
rorl
cs
mov
sub
adcl
data16
push
sti
setp
xchg
lods
jle
out
stos
push
jb
mov
inc
arpl
or
test
iret
mov
inc
jb
xchg
adc
xchg
leave
pusha
sbb
jb
pop
inc
xorb
fisubrs
ljmp
test
inc
das
rcrb
jbe
ds
dec
addl
jns
cltd
sub
ret
ljmpw
mov
test
or
jecxz
add
push
sub
sbb
add
lock
scas
and
xchg
dec
jecxz
mov
pop
int3
or
lcall
stos
inc
xchg
fnstenv
in
int3
sbb
xchg
xor
jo
or
push
add
cld
add
push
lea
arpl
cmpl
js
jge
in
in
fdivrl
mov
fwait
je
mov
xchg
shr
mov
sbb
std
ja
mov
xlat
pop
mov
roll
repz
js
mov
in
jne
jecxz
jno
stc
cmp
loope
clc
out
mov
in
out
xor
rol
mov
cmpsl
ret
pop
mov
popa
rclb
or
test
push
xlat
or
push
jns
faddl
xchg
jp
cmp
dec
adc
inc
sub
push
adc
mov
cwtl
std
into
mov
jecxz
mov
imul
sbb
add
fisubl
mov
mov
repz
jle
clc
lods
popf
mov
pop
dec
pop
test
out
outsl
jecxz
mov
rcrl
inc
and
loope
cmpsl
int
es
jo
inc
subb
xor
or
cmp
push
sub
les
out
mov
outsl
repnz
ret
pop
xor
rorl
enter
inc
and
shll
sti
dec
cmpsl
insb
mov
sbb
mov
sbb
cwtl
roll
fwait
inc
jge
lock
repnz
paddq
sbb
adc
add
push
fnsetpm(287
pop
test
add
inc
sbb
adc
and
icebp
stos
inc
aad
gs
push
fisubl
test
xchg
shll
fs
lcall
mov
hlt
mov
popf
out
cs
and
icebp
in
push
lcall
sbb
mov
inc
in
aam
popl
rcll
ret
gs
test
adc
inc
clc
jmp
out
xchg
lea
cwtl
addr16
add
fwait
popa
mov
cmp
iret
jns
loop
pop
cmpsl
cld
push
scas
nop
add
test
ja
imul
mov
mov
in
clc
dec
shr
fsubrl
dec
lods
lea
xor
loopne
rcl
jo
xchg
jle
ja
icebp
add
push
sub
cwtl
pop
ss
lahf
in
pop
jo
cmp
cmp
js
sarb
dec
loop
aad
mov
sub
addr16
dec
fwait
add
iret
dec
lods
lds
mov
cmpsb
bound
lcall
sbb
stos
or
out
mov
jp
lea
mov
aam
rclb
scas
mov
js
push
jmp
clc
adc
sub
pop
loope
dec
push
push
hlt
icebp
mov
sbb
gs
push
mov
lcall
cmpsb
lea
fisubl
sub
stc
aam
dec
sarl
mov
lds
scas
fs
stos
aad
lds
xchg
cmc
mov
sbb
mov
movsb
cmp
pushf
test
fcoml
or
push
xor
pop
adc
daa
xlat
aad
mov
and
repnz
imul
call
dec
sub
push
fisubl
jne
loopne
in
inc
add
cld
mov
xchg
add
lods
pushf
lret
jmp
lret
cld
mov
orb
or
arpl
push
xchg
xor
mov
lret
xor
std
lahf
mov
inc
lret
or
scas
cmp
pusha
mov
lods
cwtl
sub
je
adc
sub
stc
shll
mov
inc
cmp
push
pop
test
rcr
test
xlat
icebp
mov
nop
fnstsw
sbb
ret
aaa
rdpkru
iret
pusha
xor
push
inc
jecxz
inc
lcall
and
mov
repz
in
out
mov
js
lock
adc
imull
mov
push
push
imul
imul
aam
push
or
mov
sbbb
jbe
push
je
lds
iret
int3
sub
out
aas
xor
js
loop
int
cs
mov
test
mov
push
fistl
ret
cmp
test
xchg
mov
imul
call
add
jg
rol
lahf
pop
dec
push
daa
sbb
sbb
pop
adcb
jne
in
repz
out
add
inc
aad
sbbb
fildl
imul
aas
aam
loope
or
shll
out
ret
or
popa
pop
cmp
add
or
fcompl
ljmp
mov
pop
xor
push
sbb
pop
jp
test
mov
rclb
and
jg
rol
cmp
std
in
mov
xchg
test
push
cmp
jmp
mov
lcall
add
fs
imul
pop
sub
adc
pop
add
sub
sbb
lods
sub
mov
lahf
lret
bound
arpl
sbb
inc
fcomps
mov
scas
add
or
ja
xchg
sub
or
inc
mov
xchg
loope
movsl
loopne
inc
lds
jbe
xor
xor
adc
sbb
fcmove
popa
shlb
movsb
icebp
and
xor
dec
cmp
cmp
std
cwtl
xor
xor
subb
fstpl
pop
xor
jmp
lods
sbb
and
jb,pn
jo
mov
or
pop
mov
jg
arpl
andb
andb
jne
out
enter
shlb
movsl
mov
pop
push
xor
aam
xchg
sub
daa
dec
add
sub
or
and
push
pop
mov
std
cmp
adc
xchg
aad
mov
call
push
jb
dec
testl
jp
push
xchg
inc
jnp
jbe
out
sbb
les
decl
add
iret
push
popf
add
add
and
inc
sahf
into
enter
aad
hlt
add
pop
cmp
ds
ljmp
fs
adc
push
mov
repz
sub
sar
aas
cltd
test
and
and
add
or
jnp
adc
sub
into
fnstsw
int3
fidivrs
jg
mov
insl
mov
out
push
mov
jnp
ja
imul
add
mov
mov
cmp
loope
jecxz
fadd
int3
mov
fdivrs
aas
shll
lods
fldcw
and
rcrl
pop
inc
pop
xor
out
cmp
sbb
jbe
filds
adc
xchg
lret
mov
cmp
and
xor
jo
jnp
mov
ljmp
data16
in
imul
arpl
test
adc
test
js
add
out
cmp
call
hlt
or
pushf
call
push
adc
xchg
adc
mov
test
and
jnp
call
cwtl
sub
cmp
leave
stc
mov
inc
inc
jmp
outsb
stc
xchg
cmc
mov
andb
bound
ficoml
xlat
lret
ljmp
adc
testl
inc
jbe
xchg
in
lods
push
mov
pop
gs
sbb
jmp
cmp
imul
jno
or
pop
sub
and
mov
lods
inc
pusha
scas
mov
popa
test
out
sub
add
ja
ds
bound
lahf
xchg
lret
imul
scas
inc
inc
in
pop
in
test
mov
mov
cmp
inc
sbb
fsubl
icebp
jmp
or
sarl
cmp
pop
and
sarl
sub
ss
push
pop
cli
xor
jmp
int3
das
sub
repz
sub
gs
adc
lds
testl
and
sub
lds
sbb
lret
jg
in
imul
lret
xor
sti
fmul
or
sub
mov
xchg
mov
sbb
cmc
es
inc
add
xchg
lods
dec
and
divb
pop
hlt
mov
and
cmp
inc
or
fistpll
mov
jne,pt
jl
cwtl
stos
mov
adc
test
hlt
jecxz
fistl
and
push
push
je
push
push
subl
aad
popa
clc
mov
cld
jnp
xlat
xlat
pop
add
mov
cmp
divb
in
sbb
outsb
mull
or
push
pop
scas
push
int
je
jl
stos
dec
fs
xchg
push
movsl
sub
jg
cmp
int
out
mov
jb
add
cmp
inc
cmp
cmc
lcall
gs
lcall
test
cwtl
stos
and
addr16
cmp
adcl
popa
rcr
jnp
shlw
mov
jae
fwait
movsb
clc
je
sub
and
cli
les
xor
adc
test
leave
push
and
jne
cli
and
mov
mov
sbb
mov
pop
mov
add
les
cmp
jecxz
shrl
dec
cmc
add
test
loopne
mov
ret
std
arpl
sti
les
dec
lods
out
std
imull
xchg
mov
and
inc
imull
iret
pop
xchg
notl
ret
jl
mov
or
xchg
jno
ljmp
fsts
cmp
xchg
fwait
and
aaa
xchg
in
aad
mov
mov
adc
mov
aas
outsb
add
icebp
push
lea
adc
inc
jno
test
lock
lods
jge
sub
sbb
test
mov
out
insb
xchg
aaa
sbb
mov
sbb
lea
leave
push
push
inc
sub
aad
inc
sbb
loop
lret
add
jg
sbb
aaa
mov
xlat
repz
xchg
jbe
mov
cmp
sti
fs
ja
test
in
out
ja
sub
jns
movsb
in
ficoml
xor
arpl
mov
stc
cld
push
icebp
pop
adc
mov
push
outsb
sub
testb
ret
repz
xchg
leave
int
pop
in
mov
ror
jb
push
push
cwtl
in
pop
ret
xor
scas
pop
mov
cmp
das
and
hlt
inc
and
adc
mov
cld
inc
and
pop
mov
addr16
cmpsl
inc
or
xor
or
mov
jle
fnstsw
cli
or
mov
aam
popa
mov
sbb
inc
fdivrs
test
test
adc
iret
insl
addb
mov
xor
mov
mov
jne
cmpsl
push
adc
addb
dec
es
leave
mov
jnp
push
adc
xchg
add
dec
mov
add
jl
xchg
pop
sbb
adc
fiadds
adc
orl
rclb
push
jp
sub
lcall
lea
mov
push
fidivl
or
xor
mov
mov
insb
adc
pop
cmp
repnz
mov
test
xchg
lret
andl
outsb
icebp
std
aas
mov
das
out
scas
or
adc
aaa
enter
ljmp
jae
rcl
adc
hlt
dec
fidivrl
popf
mov
roll
and
and
cmpsb
xor
faddp
pop
or
bound
mov
sbb
mov
cmpsb
mov
cmp
lea
push
pusha
and
out
mov
mov
push
jae
jae
out
fcoml
xchg
dec
test
mov
loopne
dec
cmpsb
mov
addr16
in
jne
or
inc
dec
lds
jno
sbb
es
dec
fst
mov
pop
test
test
cmp
pop
mov
std
xchg
sub
lods
inc
lods
inc
push
pop
or
xor
cltd
cmp
lods
loope
in
add
mov
mov
push
add
repz
fcomi
ficoml
cmp
iret
ret
sub
aad
pop
dec
dec
dec
jp
in
test
mov
testb
adc
xor
inc
xor
sub
xchg
and
push
mov
mov
sub
lret
popa
fsqrt
jne
mov
add
cmovne
pop
lds
inc
int
bound
push
xor
and
je
lcall
and
es
xor
xchg
das
rclb
outsl
std
xchg
into
ffree
je
sbb
cltd
addr16
xchg
push
test
inc
mov
lods
fists
xchg
xchg
jnp
mov
mov
adc
xchg
push
cmp
fidivrl
fdivs
or
enter
scas
pop
out
cmp
cltd
cmp
test
mov
inc
fidivs
fs
cmp
and
jg
aad
ret
inc
popf
xor
cld
test
int
popa
jmp
sub
ret
jnp
mov
ljmp
mov
les
std
shrl
and
push
inc
lret
mov
fwait
test
repz
daa
scas
sar
enter
negl
sarb
add
cmpsb
or
fmuls
in
repz
mov
sti
jge
sub
mov
sbb
add
jno
jb
lret
adcl
cmp
ljmp
test
or
push
inc
sahf
inc
jb
cmpsl
test
rorb
bound
leave
cmp
lods
setne
movb
out
js
rcl
hlt
andl
ljmp
mov
inc
dec
mov
sarb
adc
add
das
test
mov
cwtl
dec
inc
bound
push
je
test
rcr
xchg
movsb
gs
mov
lahf
clc
shrb
pop
xor
dec
pop
mov
xchg
stos
mov
lock
and
dec
xlat
arpl
outsl
inc
inc
loope
jge
loop
jno
ds
cmp
push
dec
adc
adc
lods
and
mov
sbb
loopne,pn
cvtps2pi
aas
test
jg
lds
push
sub
cmpsb
jecxz
pop
pop
aaa
mov
bound
inc
pop
arpl
mov
andl
pop
sbb
loop
push
mov
adc
mov
mov
jns
hlt
fsubs
pop
sub
dec
clc
sarl
dec
mov
cmp
int3
xchg
xor
inc
test
mov
fs
mov
in
jno
loopne
in
adc
xor
lahf
mov
jb
dec
mov
dec
insl
jl
jo
jmp
and
movsb
xchg
mov
sub
jmp
mov
add
cmc
mov
std
xchg
test
bound
cs
pop
icebp
stc
xor
xor
js
xor
inc
mov
test
push
pop
dec
insb
sarl
dec
lock
pop
sahf
aas
ret
out
and
sbb
cld
jmp
mov
push
ljmp
xor
jnp
jl
es
loopne
jns,pn
push
lock
mov
int3
loope
ret
add
pushl
stos
sub
fdivrl
aad
stos
in
sbb
andl
pop
sbb
loopne,pt
xchg
fisttpl
cmpb
hlt
dec
and
fsts
cli
xchg
loopne
cmp
test
rcll
sahf
stos
mov
scas
popf
into
jne
sbb
test
mov
mov
ret
sub
jns
and
push
fwait
mov
push
lock
mov
sti
xchg
xchg
push
or
sbb
sbb
loopne
ret
mov
insl
push
dec
scas
fbstp
inc
das
cmpsl
popa
jg
pop
ljmp
cltd
or
xor
or
ljmp
add
movsb
xor
arpl
andl
ret
mov
es
mov
and
imul
insl
sbb
bnd
and
or
sbb
and
cmp
add
jmp
inc
iret
inc
bound
lahf
xchg
adc
es
insb
repz
aad
sti
cmp
pop
repz
enter
sub
sbb
lahf
hlt
mov
xor
jecxz
xchg
in
dec
test
add
xchg
stos
inc
mov
repz
stos
lret
sbb
jns
dec
es
inc
xchg
cmp
dec
push
xor
bound
push
mov
iret
push
ret
loop
out
inc
sub
sub
and
inc
arpl
in
jno
mov
mov
in
dec
add
mov
pushf
dec
add
shl
out
and
push
into
movsl
xchg
mov
dec
gs
dec
loope
mov
cmp
fsubl
jle
xchg
daa
xchg
lods
inc
jbe
dec
ss
lret
sub
cmpsb
ds
dec
adc
push
lds
fdivr
adc
or
or
out
push
inc
jecxz
mov
out
in
push
call
xor
mov
mov
cmp
inc
xchg
adc
das
mov
mov
jb
inc
mov
nop
mov
inc
clc
aad
inc
ficoms
add
sbb
adc
xorl
pushf
popf
in
ret
repnz
sbb
iret
xor
mov
sbb
cmp
lea
add
adc
aaa
push
out
push
and
push
mov
jmp
and
push
mov
xchg
mov
scas
adc
inc
iret
cwtl
jl
jbe
mov
movsl
pop
fdivs
adc
jo
mov
testl
and
sub
lret
mov
iret
cmp
popf
xchg
pop
push
in
sarl
je
imul
dec
mov
and
add
insl
insb
outsb
fwait
xchg
xor
push
shlb
jg
popa
adc
jnp
xchg
les
push
xchg
out
jo
add
stos
inc
mov
shrb
outsl
xor
xlat
clc
ds
xor
mov
or
rclb
jo
mov
pop
das
jp
push
jae
xchg
cmp
repnz
and
aas
std
inc
cltd
insb
add
rcll
cmp
fldcw
push
out
jo
dec
push
xor
ds
pop
mov
mov
addl
lahf
push
sub
enter
lcall
mov
pop
shrl
lahf
jne
inc
push
lahf
pushf
leave
es
jbe
es
or
xchg
cmpb
jae
data16
pop
xlat
inc
cli
xchg
pop
inc
pop
hlt
mov
sbbb
in
xor
mov
test
pop
inc
dec
add
cmp
imul
movsb
lods
mov
xor
push
push
repz
notl
scas
rcrl
push
repnz
iret
mov
scas
sub
pop
fists
and
push
cltd
add
inc
mov
insb
cmpsl
xchg
bound
pop
nop
jo
push
add
pop
cmp
sbb
dec
jbe
and
dec
pop
cli
lret
xor
daa
cmpsb
cmp
sbb
lds
sub
loope
scas
orb
push
stc
in
add
and
sub
xor
cld
sti
xchg
mov
jge
cld
mov
test
sub
mov
popf
std
sbb
repnz
outsl
imul
jbe
push
mov
loope
push
movsb
xor
mov
lcall
jecxz
dec
bound
cmp
cmp
int
jge
inc
sub
xchg
stos
jle
add
test
cltd
xor
dec
jle
inc
mov
lret
mov
ja
xor
sub
in
ret
pop
push
xlat
push
mov
je
inc
push
pop
push
cs
lcall
mov
popf
aas
je
movsb
xor
aaa
insl
orb
pop
jg
push
unpcklps
sbb
and
mov
fsubs
add
stos
inc
in
loopne
insl
xchg
mov
mov
mov
and
mov
cltd
out
sub
and
outsl
pop
add
dec
scas
push
jge
xlat
lock
mov
pop
jle
cmp
dec
and
mov
adc
pop
fnstcw
inc
xor
jecxz
adc
repz
push
sti
adc
sbb
mov
pop
push
push
clc
fnsave
js
cmp
lods
pop
imul
mov
scas
movlps
or
ljmp
fildll
lret
testl
shll
pop
icebp
mov
cmp
adc
mov
imul
in
dec
mov
mov
xor
push
xchg
xchg
cmp
popl
lock
xchg
xchg
movsl
mov
jns
movsl
gs
mov
in
xorb
lods
clc
rcll
jle
mov
cld
sub
mov
fistl
aad
add
shrl
lds
fistps
jno
in
movsl
cmp
cmp
xor
mov
dec
into
mov
and
lods
in
cld
sarb
pop
jno
pop
imul
aaa
sub
out
pop
mov
add
lret
outsl
daa
enter
push
fbstp
jbe
loopne
sub
jb
iret
push
scas
icebp
lods
jle
or
lods
cwtl
hlt
mov
imul
loopne
mov
cmp
mov
std
sub
xor
add
aad
mov
mov
inc
rorb
push
jo
ljmp
or
xchg
loop
cmp
es
jno
lock
mov
movsb
loope
aam
insb
add
in
xor
popl
std
xchg
insb
mov
cmpsb
mov
add
lock
sbb
jg
pop
mov
sarb
jb
and
adc
mov
js
test
fwait
das
pop
inc
cs
add
xchg
outsb
out
fidivrl
fstpt
mov
dec
xor
lret
fsubs
cmp
stc
xor
addr16
ficompl
cmp
je
imul
dec
hlt
and
rorl
aas
aam
cmp
mov
repnz
mov
lds
ss
push
lsl
xchg
leave
jmp
or
or
rclb
cmpsb
xchg
out
std
sbb
mov
push
test
mov
or
add
xchg
or
and
pop
movsb
dec
jecxz
mov
outsb
scas
jecxz
sahf
push
or
sub
pop
xor
lock
pop
add
loopne
mov
jl
ss
lea
or
mov
popf
xchg
add
adc
xor
test
xor
out
test
in
jnp
sti
inc
jo
cltd
cmc
repz
xchg
mov
fcoml
and
or
cmp
jae
dec
fs
int3
or
ret
lcall
adc
xor
cmpsl
ds
xchg
pop
push
fs
add
push
xlat
inc
xorl
mov
ficompl
xor
jmp
add
push
cltd
data16
pop
jle
cltd
gs
fsubs
lds
insl
or
push
inc
push
insb
inc
mov
outsl
mov
lret
adc
fcomi
inc
imul
rclb
jo
cmpsl
clc
sub
add
dec
andb
call
addr16
jns
adc
add
arpl
xchg
and
jecxz
callw
cmp
fmul
cmp
push
pusha
fldcw
int
mov
xor
outsl
sbb
fcomip
btl
jg
iret
pop
jge
and
xor
mov
dec
in
fcmovnu
loop
adc
dec
pop
and
das
mov
inc
dec
mov
mov
ficoms
test
xorl
jo
fmuls
dec
pop
inc
in
jbe
xchg
cwtl
rorb
jl
aam
popa
jl
adc
push
xchg
inc
pop
jmp
cmp
ficomps
jb
out
mov
pusha
popf
jg
in
ror
mov
xchg
jmp
in
add
lea
jp
lods
jmp
out
test
sub
icebp
or
pushf
xor
cmp
in
lcall
and
repnz
lods
imul
fistps
cld
mov
add
cmc
mov
sbbl
int
hlt
sub
movsb
push
imull
dec
sbb
cmp
test
cld
mov
nop
xchg
xor
js,pn
add
adc
js
call
loope
repz
gs
dec
imul
es
pop
xchg
cli
mov
pop
cmp
sbb
ds
and
sub
jge
fcmovne
pop
add
sub
mov
add
rcll
mov
dec
sub
notl
pop
jne
ja
lods
shlb
movsl
xchg
repnz
jle
sti
scas
mov
mov
ss
fidivl
sahf
and
push
int3
decl
or
push
mov
cmc
mov
or
pop
cmp
jns
into
addl
xor
pop
inc
fs
xlat
insl
popa
mov
sbb
mov
sub
outsb
inc
cmp
popa
mov
fsts
imul
das
lcall
push
enter
out
sub
shlb
dec
or
repz
movl
sbb
mov
pusha
xchg
outsb
sbb
shrl
pop
nop
mov
arpl
jmp
imul
lret
in
cmovno
scas
mov
jns
adc
daa
sub
stos
push
cmp
ljmp
xlat
mov
add
mov
lcall
jnp
fdivrs
in
jecxz
rorb
jmp
call
add
imul
daa
dec
rcl
stc
inc
mov
out
xchg
mov
filds
add
stc
sbb
xchg
and
test
lods
cwtl
or
inc
into
fdivrl
sub
adcl
mov
mov
loope
cld
popf
addr16
push
add
inc
mov
orl
inc
loope
xor
pushf
shr
in
inc
mov
mov
mov
push
mov
rorb
imul
jp
inc
or
mov
les
movsl
cmp
shr
sub
pop
add
pop
mov
mov
movsl
cmp
mov
mov
aas
and
mov
pop
fldcw
cwtl
popa
mov
and
stos
xchg
mov
in
sub
scas
hlt
cmp
mov
mov
clc
mov
ret
pop
add
loope
in
inc
mov
jp
test
inc
cli
fwait
add
mov
push
mov
faddl
shrl
jg
and
xchg
ret
in
stc
mov
in
sub
lret
scas
pop
lcall
mov
cwtl
dec
test
ds
jae
test
lds
subb
xorb
or
movzwl
mov
or
icebp
or
mov
rcll
and
or
cmp
popa
mov
dec
je
push
pop
ret
mov
xchg
shl
test
cmp
mov
or
jo
fcmovbe
hlt
aas
sub
in
shll
cmp
inc
loop
out
shll
lahf
cmp
push
stos
je
cmp
push
cld
lcall
jns
add
adc
adc
test
in
jae
pop
add
push
in
sbb
clc
sbb
data16
sbb
das
call
push
xor
pushf
mov
mov
dec
std
xchg
jge
mov
sbb
andb
sbb
dec
xchg
insb
jae
fisubrl
cmpsl
pushf
stos
es
dec
sbb
lods
add
or
js
xchg
mov
pop
outsl
push
push
or
cmp
pushf
xor
xchg
sub
dec
mov
shrl
mov
aaa
sbbl
cmpsb
cmp
inc
dec
add
jbe
sbb
sbb
fmuls
xor
sub
mov
fnstcw
pop
enter
adc
cld
shrb
or
cmpsb
cwtl
sbbl
pusha
mov
push
or
pop
test
or
mov
xchg
xor
into
ficoms
mov
jmp
push
nop
jno
lret
das
addr16
mov
dec
xor
mov
mov
enter
pusha
inc
mov
sub
dec
xor
mov
loop
unpcklps
neg
clc
or
sub
sbb
or
cmpsl
cmp
and
mov
push
orb
in
in
test
fsubl
pop
add
inc
arpl
xor
ret
mov
sub
cltd
test
pop
mov
loopne
inc
mov
incb
add
mov
fcmovnbe
testb
inc
sti
jl
jge
push
xchg
outsl
ficoms
mov
fsubl
adc
je
outsl
decb
push
lods
push
int3
gs
fsubl
mov
outsb
stc
push
mov
push
and
pop
xchg
dec
mov
decl
mov
or
push
adc
addb
aad
in
rol
cmpsl
xchg
test
mov
loop
into
subb
ret
mov
push
leave
aad
sahf
cli
enter
xchg
xor
rolb
pop
and
xchg
xchg
jne
dec
out
loopne
mov
inc
ficoms
xchg
mov
sti
hlt
je
test
mov
inc
lahf
push
repz
dec
cwtl
lret
inc
dec
imul
and
mov
in
sub
push
aad
add
ret
mov
loope
in
pushf
add
jo
mov
stos
xorl
inc
fisttpll
fbstp
mov
stc
jmp
or
pop
sar
divl
cli
xchg
into
or
dec
jle
cltd
cmpsl
std
arpl
test
lret
lock
pop
pop
js
scas
and
adc
mov
ja
out
pop
repnz
sarl
popf
orl
jb
adc
or
pop
lds
ret
lods
and
loope
dec
xchg
scas
mov
jno
scas
or
pop
testb
sbb
aam
gs
out
cmc
and
sbb
mov
mov
nop
stos
fwait
repnz
shr
mov
cli
or
popa
adcl
push
popa
bound
jne
aam
push
mov
mov
lds
rclb
push
jle
je
inc
xchg
push
add
aam
xchg
adc
mov
add
xor
sbb
dec
les
pushf
inc
or
pop
mov
jno
lds
lea
jmp
pop
sbb
xchg
je
repz
pusha
xlat
push
andb
scas
fdiv
shl
dec
arpl
leave
mov
aad
lret
sub
sti
addb
addb
cmc
push
xor
test
mov
inc
mov
out
mov
add
lea
mov
xorb
sbb
dec
jae
das
or
sub
fsubrp
ret
mov
pop
ror
fsubr
int
flds
lret
ja
cld
loopne
xor
loopne
sbb
insl
mov
fldl
repz
adc
iret
imul
push
dec
dec
loopne
inc
push
roll
xor
aad
mov
and
into
add
es
inc
or
xchg
mov
push
jg
ficoml
inc
sbb
cs
jnp
decl
movsb
scas
cwtl
incb
cmc
xor
and
xchg
xchg
les
idivb
int
sub
add
xchg
jbe
repnz
sahf
push
movsb
movsl
loopne
sbb
outsl
dec
ret
jns
mov
arpl
add
call
cmp
ficomps
xchg
data16
inc
lcall
and
mov
std
mov
imul
xchg
inc
lds
add
lret
decl
filds
int
pop
lret
pushf
insl
push
jl
mov
pop
insl
adc
cltd
and
bound
test
xchg
dec
cmp
mov
pop
aam
pop
dec
mov
xchg
jg,pt
sarb
pop
ret
mov
mov
dec
xchg
fdivr
mov
mov
mov
pop
nop
ljmp
cmp
sahf
cmp
and
ds
repz
cmp
push
pop
decl
inc
jae
sub
pop
mov
int
mov
fxam
fidivl
loop
inc
xchg
cld
adc
push
sub
cltd
xchg
dec
push
negl
mov
xchg
add
pop
mov
jmp
out
xor
rcl
add
cmpsl
sub
fidivrl
stc
sbb
cltd
lds
mov
test
in
cltd
mov
bound
adc
incl
xorb
push
test
adc
xor
cli
jbe
scas
out
lcall
inc
std
inc
imul
adc
sub
movsb
cld
adc
push
sahf
xor
fidivs
dec
mov
ret
cs
cmp
jb
repz
xor
inc
or
xlat
jnp
cmpsb
leave
cmp
mov
mov
add
arpl
push
sbb
imul
adc
and
pop
cmp
sbb
adc
jecxz
test
cltd
mov
cmpsb
inc
pop
cmc
out
jns
mov
movsb
mov
lahf
cli
sbbb
lcall
lahf
sbb
stos
addr16
xlat
sub
mov
outsb
jmp
divb
movsb
mov
dec
test
pop
jge
call
jne
and
mov
mov
enter
je
cmp
pop
dec
push
push
add
test
or
cmp
leave
fsts
lcall
popa
jmp
adc
cltd
or
and
scas
addl
pop
cmp
pop
mov
daa
and
xor
and
jno
inc
lea
inc
ret
add
mov
lea
cmp
sbb
ja
lcall
or
aas
ds
cmp
and
into
out
add
sbb
adc
jns
subb
cmpsb
cmp
orl
adc
adc
mov
fcoml
stos
in
roll
mov
sub
jp
or
sbbb
in
pop
aaa
mov
push
mov
mov
dec
insb
jl
or
inc
dec
inc
lods
mov
je
inc
cmpsb
xor
lahf
ss
mov
pop
sbb
add
jno
sti
mov
xor
lods
xchg
sbb
xor
mov
mov
std
clc
cli
inc
inc
aaa
sub
push
mov
inc
js
mov
fucomip
pop
cld
gs
fisubs
and
out
add
psadbw
shll
xchg
je
outsb
lahf
adc
xor
popf
pop
pop
jp
das
les
xchg
mov
lcall
sbb
rolb
xor
test
lahf
mov
icebp
mov
push
cmp
stc
or
mov
lock
sub
cmpsb
sub
fldenv
stc
or
dec
jg
ja
xor
gs
pop
fdivr
sarl
fsubrl
call
xchg
mulb
cmpsl
out
mov
ret
cmpl
jbe
and
pop
or
lcall
pusha
pop
xchg
test
or
in
push
insb
aam
ss
out
inc
mov
mov
mov
in
negl
out
je
sbb
insl
lret
mov
pause
std
and
and
popa
jg
push
pop
mov
gs
in
xor
mov
ljmp
jno
out
orl
addl
mov
loope
mov
sub
pusha
sub
xchg
je
int3
mov
mov
cmp
je
test
pop
inc
mov
arpl
dec
sub
or
jmp
pop
xor
push
inc
loop
sub
insl
adc
jnp
dec
decl
cli
adc
cmp
lcall
call
or
outsl
jmp
sahf
mov
push
cmp
mov
imul
cmp
mov
movsl
call
icebp
jnp
cmp
add
dec
xchg
mov
cmp
or
and
push
jmp
subl
das
cwtl
xchg
sbb
clc
adc
shrl
add
and
mov
push
adc
aad
js
into
sbb
test
cmpsl
das
mov
rolb
sahf
insl
xchg
mov
sub
loop
cmpsb
xchg
cmp
mov
test
out
test
pop
sub
sarl
out
sbb
sbb
mov
sub
pop
ja
ja
xor
inc
inc
sbb
xchg
jae
cltd
lahf
pop
clc
xchg
lea
xchg
mov
into
sub
popa
popw
adc
adc
popf
in
cmp
fstpl
stos
and
sub
in
push
lock
ret
cmc
mov
jne
cltd
xor
add
in
dec
daa
scas
add
loopne
shll
in
inc
aas
outsl
out
cld
shl
dec
push
mov
cld
jecxz
xor
fnsave
pushf
pop
dec
ret
jecxz
fwait
cmpsl
jg
ret
loop
mov
push
mov
mov
lock
sbb
mov
jb
cld
dec
xor
jmp
sbbl
add
bnd
mov
enter
xchg
push
inc
jns
idivb
ds
ljmp
sbb
cwtl
dec
mov
faddl
mov
std
imul
sub
rcrl
stos
mov
mov
lcall
lahf
push
ja
std
push
jb
stc
or
sti
or
into
mov
mov
push
js
mov
pop
push
or
push
mov
stos
and
xchg
xchg
and
adc
dec
cwtl
cmc
adc
pop
icebp
stos
inc
mov
movswl
fidivl
loopne
add
mov
fwait
xor
add
fcompl
mov
data16
jno
fwait
lds
sub
aas
cmpsb
jo
pop
pop
jo
adc
cmpsb
xchg
push
scas
lcall
je
and
pushf
or
sbb
cmpsb
or
lret
daa
cmp
notl
bound
test
int
popa
jmp
stos
sbb
call
pop
enter
repnz
stos
sub
sbb
xchg
imul
jnp
fimuls
adc
inc
hlt
lea
ret
lret
hlt
gs
rclb
in
sub
fwait
clc
test
push
out
das
int
sub
in
cli
push
dec
pop
insb
in
mov
push
cmc
cmp
and
movl
adc
or
jno
mov
xchg
pop
mov
ret
stos
xchg
sub
callw
cmp
or
imul
ret
xchg
jbe
xor
fidivrl
or
mov
jae
cmp
fisubrs
xchg
adc
add
and
data16
jae
fdivr
inc
sarl
rolb
clc
push
fcomp
insl
fisubs
ljmp
cmp
rorl
mov
cli
lock
ficoml
stos
push
icebp
mov
popl
dec
sar
push
mov
addr16
fs
int
sub
stos
out
xchg
add
ja
lahf
cmc
pop
mov
idivb
sub
hlt
and
xchg
dec
in
rcl
imul
dec
mov
clc
xchg
mov
add
and
dec
mov
xchg
lahf
daa
adc
pushf
mov
std
xchg
jae
fstpt
rcl
lret
cmp
cli
mov
mov
or
or
loop
fidivl
dec
rol
in
clc
dec
inc
cmp
ret
adc
mov
mov
dec
mov
imul
mov
dec
test
cs
aam
pushw
rol
mov
sub
jg
pop
cmp
cwtl
jbe
lcall
es
xor
sub
in
push
pop
daa
stos
push
or
mov
jge
sub
pop
cmp
lds
cmp
repnz
sub
in
mov
jmp
jae
add
ljmp
mov
xor
arpl
xor
dec
shlb
sti
cmp
rorb
adcb
xor
mov
fadd
hlt
fisttpll
notb
xor
gs
aas
push
dec
bound
enter
push
xchg
rcl
mov
cmc
test
push
dec
cmpsb
or
fdivl
or
cli
inc
pop
sub
es
sti
jp
inc
push
sbbl
mov
xchg
mov
cmc
adc
fidivl
pop
dec
je
out
xor
add
pusha
push
mov
cmp
sub
pop
sub
cltd
inc
jge
outsl
jp
sbbl
add
cmp
or
sub
out
lret
test
push
dec
fs
jbe
sti
xchg
scas
sub
mov
mov
call
adc
fstl
call
mov
sub
push
xchg
push
xlat
std
mulb
cmpsl
adc
inc
aas
dec
inc
adc
test
in
sbb
push
mov
push
cld
mov
push
scas
and
ret
leave
rclb
sbb
or
sub
mov
add
pop
ret
xor
fnstenv
and
dec
js
xor
mov
sub
or
and
push
mov
mov
adc
push
fldenv
jbe
jmp
add
scas
jb
push
sub
pushf
icebp
lds
ret
clc
std
mov
add
in
mov
outsb
fs
out
xchg
mov
insl
or
rclb
add
and
movsb
pop
dec
mov
jp
shrb
repz
decb
fdiv
aaa
out
out
sub
lods
jne
jns
ja
fstpt
jl
int3
xor
cltd
push
xor
adc
xchg
cmp
clc
testb
mov
mov
into
loop
jbe
int
lahf
stos
mov
xchg
cltd
fisubrs
push
xchg
adc
cwtl
stos
out
sub
rorl
mov
ret
and
jl
insl
shrb
imul
xchg
or
push
xchg
xchg
xor
cmp
inc
popf
push
mov
idivb
lods
lea
mov
in
xchg
push
das
push
sbbb
dec
push
cmp
cltd
sbb
bnd
mov
add
lret
xchg
cmc
js
imul
and
adc
jns
call
cmc
aas
dec
not
inc
pop
jae
dec
xchg
add
call
mov
adcl
fidivs
xor
mov
ljmp
jns
lock
stc
ja
cmp
clc
test
scas
adc
out
adc
jle
sbb
cmp
fstl
mov
sub
adc
lcall
xchg
xchg
push
iret
outsb
mov
jae
cmovnp
mov
xor
mov
clc
and
divl
test
lods
jbe
ret
imul
and
push
js
mov
mov
xchg
push
enter
mov
sbb
scas
jns
lods
pop
sbb
push
leave
fwait
mov
mov
inc
pop
sub
add
mov
jb
mov
lea
jne
scas
bound
push
lret
aam
adc
stc
repnz
leave
imul
jno
loopne
das
jecxz
add
cmp
fdivrl
sbb
cmp
push
pop
arpl
cmpsl
jns
shll
jne
adc
cmp
add
lods
int3
ss
push
cmpl
jne
xchg
imul
add
xor
movsl
jecxz,pn
call
jge
cmp
and
adc
push
mov
in
out
push
cmp
fs
sbb
adc
sub
and
movsb
movsl
sub
cmp
imul
mov
sbb
cmpsb
rorb
mov
faddp
cmp
mov
fldt
sub
mov
ljmp
and
lea
aaa
adc
je
orl
mov
dec
mov
push
fs
adc
fildll
sub
cmpsl
inc
dec
pop
fadds
adc
dec
rcll
sbbb
and
push
cmp
or
and
imul
sbb
pop
xor
or
cmp
mov
jmp
testb
in
sbb
cmp
arpl
xor
fildl
inc
push
cmp
xlat
xor
or
xchg
das
sahf
add
dec
js
xor
push
lock
ret
shld
test
xor
sub
rcll
inc
es
cmpsl
lods
repnz
xchg
sbb
mov
out
out
das
movsb
inc
jmp
mov
lods
mov
addr16
add
icebp
test
aad
inc
lds
cld
xchg
fiaddl
daa
pop
pop
shll
lcall
lcall
into
xchg
testb
dec
adc
imull
test
jno
fmul
outsb
jo
jmp
xchg
jo
aam
sbb
mov
std
fs
sub
cld
dec
and
and
push
negl
int
cmp
mov
mov
sar
push
jo
repz
and
out
lds
das
fldt
xlat
mov
push
jecxz
shrl
or
ret
sub
mov
sub
adc
pop
popf
pop
packsswb
in
jmp
loop
and
mov
push
mov
mov
das
push
cmp
js
push
and
jno
das
mov
mov
fisubrl
inc
gs
push
push
popf
loope
aas
lock
jbe
subb
sbb
jnp
shl
adc
mov
adc
pop
push
lods
je
pop
divps
mov
mov
mov
pop
adc
mov
and
loope
adc
loopne
xor
mov
push
cmp
xchg
ljmp
jle
add
jne
outsb
jmp
es
loopne
inc
mov
cli
or
repz
xor
shrb
subl
sbb
or
lahf
pop
aas
insl
lds
sbb
out
pop
add
aaa
inc
sahf
sbb
lret
push
leave
jo
xchg
mov
scas
jo
test
pushf
pop
sbbl
push
push
xor
cmpsb
sti
push
nop
jbe
and
daa
dec
lahf
dec
sub
xchg
lods
adc
jle
mov
dec
in
push
stc
dec
adc
add
mov
in
pop
mov
sti
add
or
xor
stc
gs
orl
mov
push
hlt
imul
or
dec
loope
aad
sarb
push
movsl
loopne
push
add
or
push
iret
adc
xchg
jp
mov
in
adc
mov
cmpsl
pop
jb
scas
test
fsubs
gs
sahf
push
xor
fsubp
dec
mov
loop
and
sahf
cmp
iret
xchg
adc
mov
jno
mov
loope
test
addr16
mov
in
mov
xor
jnp
lea
rcr
in
lret
sbb
sbb
outsb
push
cwtl
push
mov
popa
mov
arpl
inc
lds
add
mov
jno
cmpsl
lods
cli
nop
pop
ss
lock
idivb
mov
jg
or
ficoms
jne
add
jecxz
dec
dec
push
mov
push
lcall
mov
mov
jp
push
out
cmp
nop
xor
push
imul
ds
or
ds
repnz
ret
xchg
mov
nop
stos
push
fidivl
and
add
enter
cmpsb
in
push
fistpll
jecxz
stos
mov
sbb
mov
in
fisubl
lods
mov
pop
cmc
das
pop
xor
mov
clc
pop
sub
pop
or
stc
es
mov
enter
xor
xchg
push
inc
or
inc
in
clc
jbe
test
in
dec
dec
jl
jns
dec
adcl
fnstsw
imul
loope
outsb
adc
testb
adcl
push
stos
enter
aas
call
jnp
mov
pop
xlat
mov
sahf
xor
mov
mov
into
stos
add
aas
and
cmp
pop
sub
push
cmp
sbb
xchg
jmp
fiadds
xchg
jg
dec
dec
dec
push
sbb
jecxz
pusha
shlb
xchg
sub
adc
test
push
stos
outsb
mov
jb
insb
xor
inc
add
or
cmp
loopne
inc
mov
loope
adc
aaa
push
cs
or
cld
lret
js
leave
dec
ret
or
jbe
scas
mov
or
xchg
ret
nop
daa
xchg
inc
mov
pop
push
outsl
push
pop
test
leave
test
cmpsl
push
rorb
jge
fisubrl
adc
outsb
or
cmpsb
dec
mov
addr16
cmp
rcrl
push
sub
test
xchg
fnstsw
imul
xor
cld
or
xchg
test
push
cmp
sub
test
xchg
xor
mov
js
mov
inc
inc
jg
lcall
in
aam
in
movsb
jecxz
push
out
test
ja
repnz
ja
fcoms
sbb
mov
aad
lahf
testl
dec
testb
adc
loopne
add
outsl
fmuls
mov
fwait
sahf
cmc
dec
push
fstpt
cltd
push
mov
sbb
push
lods
rorb
test
xchg
dec
pop
xor
cld
add
jno
mov
popf
rol
nop
stc
loope
sahf
jo
movsb
push
inc
mov
test
or
adc
xlat
data16
xor
jle
in
pop
das
js
cwtl
xor
mov
notl
jmp
push
mov
sub
cmp
addl
and
loop
imul
push
mov
cmp
mov
out
mov
add
xor
jns
push
or
pop
je
or
loope
cmp
daa
dec
mov
push
popf
mov
lea
cwtl
jnp
mov
ljmp
jno
stos
pop
inc
in
jbe
jno
or
stc
dec
xor
jecxz
outsb
mov
jge
jbe
out
popa
sbb
inc
gs
mov
push
xor
out
fnstenv
loopne
jne
adc
adc
int
arpl
mov
notl
frstor
xor
pop
bound
cmpsb
test
out
mov
fs
xor
sub
fstpl
aas
fs
inc
stos
repz
sarl
mov
lock
cli
movsb
insb
mov
in
pop
rolw
mov
scas
push
cmp
add
jno
shrb
lods
adc
imul
mov
fucom
pop
daa
push
jmp
mov
rcr
mov
jecxz
mov
mov
fisubl
dec
lds
xchg
sbb
fwait
cmc
mov
jp
hlt
outsl
popa
adc
jne
mov
hlt
adc
aam
mov
push
xlat
rep
stos
stc
pop
mov
ds
shl
sub
es
imul
mov
adcb
xlat
cmp
jl
sbb
mov
iret
lahf
cmp
test
xchg
mov
js
int3
cmp
rcrl
ja
mov
cmpps
fldl
mov
pop
andb
push
mov
stc
data16
mov
inc
test
cmp
mov
arpl
arpl
pop
jno
dec
lret
repnz
fxam
addb
jae
xchg
movsb
dec
js
fcom
lahf
stos
add
out
dec
or
cmp
push
cmpsl
mov
test
repnz
movsl
mov
add
push
sbb
ret
pusha
enter
xor
fcmove
lret
popa
jnp
pop
mov
inc
in
fxtract
repnz
test
push
mov
mov
pop
mov
loopne
add
ds
popf
xor
pop
lds
push
sarl
jle
mov
push
stos
call
popf
andb
dec
jbe
jo
mov
add
ss
and
sbb
fisttpll
cmp
dec
out
mov
inc
mov
mov
cmp
push
les
dec
lcall
mov
cmpsb
ret
dec
mov
call
insl
loopne
push
addl
dec
pop
int
fcmove
lcall
adc
ficompl
xchg
jg
popf
mov
xor
addr16
sub
cli
scas
loop
jmp
sub
or
bound
testb
sbb
ds
movsb
dec
out
test
test
gs
and
loope,pn
xchg
ss
jecxz
add
movsb
sbb
mov
je
dec
cmp
addr16
fcomi
mov
test
loopne
outsb
pop
mov
mov
hlt
cmc
mov
and
mov
jbe
inc
fistpll
or
mov
dec
mov
rclb
out
mov
ror
sub
sub
pop
insl
test
and
xchg
data16
pop
cmp
popa
xchg
sti
mov
or
movsl
jg
pop
lret
outsb
adc
lods
add
lods
jg
into
scas
xor
push
pop
ficoml
push
lcall
and
mov
pop
out
push
jbe
in
bnd
loop
sbb
fstpt
cmc
mov
jle
inc
mov
loopne
insl
stos
fisubrl
sub
mov
and
aad
pop
out
mov
jnp
and
mov
add
test
push
pop
mov
dec
test
xor
mov
jmp
shrl
jno
stos
mov
xchg
sbb
push
inc
inc
or
pop
int
xchg
pop
jns
movsb
push
cs
xorl
aam
mov
sbb
or
jle,pn
sbb
sarb
repz
imul
mov
mov
inc
jecxz
pop
inc
sbb
pop
leave
and
hlt
or
addr16
int3
cmp
push
mov
jo
aas
imul
adcb
out
mov
test
jbe
rorl
shr
sbb
pop
cmp
lret
call
adc
lds
sub
push
pop
lret
and
aad
sbb
jns
mov
cmp
mov
aam
in
pop
fisubs
add
subl
and
add
cld
xchg
mov
sbb
pop
in
inc
lods
jmp
and
aad
scas
int3
inc
fnsave
icebp
adc
push
inc
fmuls
and
xchg
pop
idiv
jae
inc
fisubrl
adc
xor
fimuls
push
imull
cltd
sbb
push
sbb
imul
add
call
ds
inc
arpl
lret
stos
mov
push
pop
xchg
decl
jae
or
cmp
subb
xchg
add
mov
jo
pop
dec
les
outsb
imulb
adcb
shrl
rcl
mov
xchg
lock
popa
nop
fnstsw
dec
inc
mov
add
into
cmp
mov
xchg
jbe
loop
insb
push
add
sbb
mov
or
pop
divb
lea
lods
inc
loopne
je
gs
ds
movsl
in
sahf
into
gs
push
xchg
popa
paddw
xchg
icebp
das
xchg
ret
cmc
add
mov
mov
inc
inc
cmp
dec
xchg
cmp
sahf
dec
xor
test
mov
pop
xchg
cmpsb
dec
cmp
subb
or
adc
aaa
dec
mov
incl
lret
inc
jp
dec
insb
mov
mov
adcl
subl
lea
call
bound
push
in
inc
cwtl
add
repz
xor
push
jmp
add
cmpb
push
in
addr16
mov
fsubp
add
rcl
repnz
adc
push
outsl
push
test
adc
mov
and
in
rcll
insb
repnz
sub
mov
stos
jnp
out
lods
jmp
sub
repnz
xor
pop
sub
inc
lock
jns
cmpsl
sbb
fsubrs
dec
rorb
pusha
fisttpl
and
pop
sub
std
rolb
mov
or
xor
leave
adcb
insl
leave
aad
loopne
popf
cmp
lods
rclb
hlt
cmpsb
inc
mov
test
and
into
leave
pop
in
outsl
jns
fstl
sub
lods
fistpl
es
outsb
loope
shl
fcoml
or
mov
xchg
subl
sbb
xlat
adc
pusha
lret
pop
movsl
xchg
sbb
xchg
push
mov
jns
sbb
xor
pop
lcall
inc
mov
jno
jo
fstps
fiadds
ljmp
pop
in
cwtl
adc
or
aaa
and
xchg
sub
ret
mov
dec
pop
push
jle
subb
cmp
dec
dec
insb
aad
mov
movsl
es
jne
dec
inc
popa
orl
lods
xlat
test
repnz
scas
mov
adcl
jle
mov
fldl
sub
imulb
test
sbb
ret
adcb
xchg
inc
hlt
popa
adc
sbb
pop
loop
add
cli
inc
inc
les
cld
or
popa
fwait
adcl
xchg
iret
aaa
lods
addr16
lock
movsl
dec
gs
rcrl
xchg
push
xchg
mov
mov
mov
xor
inc
imull
ja
lea
add
dec
jae
arpl
jmp
pusha
js
pushf
cltd
ss
jmp
adc
ret
in
test
mov
adc
test
inc
fwait
jb
mov
sub
insb
cmp
fstpt
fiadds
enter
ss
or
sub
ds
or
dec
rorl
mov
cmp
insl
iret
pushl
adc
inc
xchg
push
pop
repnz
ds
lret
insb
inc
mov
push
cmp
xlat
pop
sbb
sbb
sub
push
mov
inc
push
aam
mov
xor
mov
ss
mov
jns
mov
push
into
mov
cmp
pop
std
movsb
mov
xlat
jo
es
loopne
inc
adc
lret
xchg
shlb
mov
out
fadds
test
ret
cli
push
jmp
dec
add
jbe
stos
addr16
loope
mov
add
addb
jnp
sarb
cmpsl
xchg
pop
cmp
cmp
cld
addr16
inc
xlat
add
jecxz
inc
into
sbb
mov
push
sub
mov
push
icebp
ja
sbb
andl
loopne
cmp
imul
pop
adc
hlt
jo
xchg
add
mov
sub
sbb
ljmp
xor
mov
push
and
iret
jecxz
dec
jae
stos
movsb
fdivs
and
mov
mov
or
adc
xchg
test
xor
fsubrs
push
dec
adc
in
sbbb
in
pushf
loope
das
pop
mov
test
fdivl
sti
xchg
negl
sub
cmc
outsl
in
cs
jl
pop
cmp
lock
push
ja
jae
sbb
add
jl
iret
and
push
and
rcrl
adc
imul
mov
out
cld
into
sub
pop
outsl
cld
xlat
sub
xchg
test
scas
inc
into
lods
pushl
gs
test
and
xchg
adc
and
flds
sti
push
xchg
jmp
sbb
pushf
cmp
arpl
jbe
inc
rclb
fstl
jo
push
je
sarl
mov
outsb
jp
jbe
test
xchg
mov
das
cmp
cmp
sbb
nop
inc
scas
jl
xor
daa
vunpckhps
in
daa
lret
or
pop
int
into
push
mov
add
and
out
std
pop
and
outsl
pop
inc
or
inc
cld
pop
lock
mov
mov
inc
pushf
jbe
and
fwait
dec
aas
out
dec
call
lds
add
mov
or
sbb
cvtpi2ps
arpl
dec
mov
pop
hlt
lahf
mov
andb
test
jecxz
enter
jb
push
and
scas
and
dec
xchg
cmpsl
addr16
mov
das
fcomps
pop
cmp
inc
jle
cmp
jg
loop
outsb
cltd
jge
imul
xlat
rol
fs
das
adc
adc
jmp
and
arpl
pop
loop
xchg
sbb
xlat
outsb
pop
or
mov
jecxz
xchg
andb
or
and
test
push
adc
xor
jne
fldcw
jbe
inc
mov
pop
aas
rclb
add
je
inc
sub
cld
push
js
add
xchg
push
fstpt
cltd
pushf
outsl
inc
sub
ljmp
std
jl
inc
addr16
test
xor
data16
out
sbb
outsl
dec
mov
ss
xchg
mov
add
cmp
sub
das
mov
and
ret
jp
int3
loopne
rcl
sbb
push
pop
ljmp
xchg
pop
imul
or
ja
mov
or
lcall
andb
adc
sbb
rclb
lds
aam
test
mov
inc
ret
loopne
mov
dec
sub
pop
cmpsb
or
lods
std
and
or
addb
xchg
imul
je
add
test
popa
mov
sbb
inc
push
xchg
in
jg
fidivl
jecxz
sti
addr16
out
jg
pop
leave
test
push
imul
rolb
sub
jne
push
dec
sarb
test
and
add
ds
dec
loopne
fstpt
adcb
pushfw
imul
jmp
ret
pushf
inc
arpl
cld
cmp
inc
stos
lods
cmp
and
in
and
inc
je
js
inc
lea
sahf
pop
repz
cmp
add
sbb
jb
mov
out
int
cwtl
sarb
pop
shlb
fsts
je
xchg
arpl
cwtl
nop
mov
mov
dec
jno
xorb
sarl
movsl
jl
or
pop
jg
mov
sub
jecxz
and
mov
jmp
shll
and
xlat
xor
popf
je
aam
cmp
jb
les
and
jge
std
jle
xchg
pop
ljmp
jecxz,pn
pop
loope
popf
mov
adc
cli
push
popa
insl
sbb
cmpsb
test
mov
sbb
lods
arpl
add
decb
icebp
or
popa
scas
test
insl
add
stc
rcll
outsl
outsl
jnp
es
jmp
xchg
and
and
testb
icebp
cmpl
fwait
loope
outsl
add
mov
lea
aaa
scas
xchg
and
stos
dec
mov
ret
mov
les
outsl
insl
pop
add
adc
testl
jp
lret
mov
add
mov
add
scas
push
adc
inc
adc
fisubs
imul
std
jbe
andb
icebp
fadds
mov
mov
in
int
cwtl
mov
subl
lock
je
pop
cmpsb
or
loopne
xchg
popa
out
xchg
mov
lds
xchg
cmp
enter
shrl
outsl
or
das
adc
clc
and
cmp
or
dec
pop
mov
shr
push
fistps
jecxz
xchg
sub
pop
loop
jns
sub
fsubl
or
add
push
pushf
subb
stos
mov
sbb
bound
add
lock
mov
lcall
les
notb
movsl
sub
or
jg
jl
add
pop
dec
enter
gs
add
hlt
jbe
jno
les
mov
call
add
push
ret
imul
mov
leave
lcall
ret
sub
cmp
mov
movhps
aaa
xchg
sbb
sbb
loope
xchg
mov
dec
mov
xor
pop
mov
xlat
mov
fs
outsb
cmpsl
xchg
aam
cmp
mov
pusha
in
lds
or
cld
inc
pop
js
pop
sub
aad
shl
out
push
in
rcrl
xchg
or
mov
stos
dec
out
js
add
sbb
mov
imul
lcall
out
test
jp
das
sub
dec
leave
mov
sbbb
icebp
push
les
data16
add
mov
push
ljmp
jno
adc
sub
adc
notb
into
mov
mov
xor
jge
out
pop
popa
iret
testb
xor
jno
cmp
scas
jmp
imul
and
jge
repnz
xor
ja
in
shrl
lods
outsb
sub
icebp
ja
outsb
pop
std
push
lea
adc
stos
in
lods
hlt
jg
int
fwait
mov
pop
sahf
pop
push
popf
mul
mov
jbe
es
enter
jbe
arpl
rcll
in
mov
sub
add
mov
lret
mov
mov
fcoms
clc
test
pop
lods
ljmp
or
popa
insl
xchg
movsb
sbb
imul
xchg
sarl
inc
xor
daa
sti
mov
scas
bound
lds
or
popa
xchg
xchg
loopne
xchg
push
lds
jecxz
mov
inc
imul
jno
adc
clc
cmpsb
scas
cmp
sarl
lret
push
scas
test
mov
ljmp
bnd
sub
shl
push
popa
mov
cltd
jo
jle
clc
and
dec
cmp
dec
mov
pop
cmp
outsb
xor
xchg
jg
or
and
enter
sbb
inc
mov
cmc
addr16
out
clc
lret
mov
sub
jno
out
xchg
test
or
stos
call
ja
adc
jno
pop
in
test
cmpsl
loopne
mov
jl
or
dec
in
incb
xchg
in
cmp
push
stos
sbb
xchg
cmp
add
push
popf
mov
jmp
xchg
jbe
scas
mov
xor
stos
imul
out
jle
add
lret
ret
jmp
aaa
fimuls
dec
jae
jge
push
lret
shlb
popa
pop
pop
loop
xchg
cltd
inc
into
movsl
push
mov
subb
jecxz
mov
ret
fbld
sarl
rolb
popa
and
mov
sub
xorl
push
insl
inc
in
and
stc
pop
cmp
push
and
sbb
jns
test
pop
insl
cmp
push
adc
xchg
mov
mov
inc
or
movsb
mov
add
xlat
ds
mov
dec
cld
xchg
jno
mulb
into
ja
cld
test
dec
mov
fstps
mov
pop
pusha
adc
mov
cmp
or
dec
repnz
das
add
jp
mov
mov
lahf
sbb
loopne
push
fiadds
mov
adc
push
push
pushf
imulb
daa
lods
sub
pop
or
dec
out
xor
ret
lcall
cld
sub
cmp
lret
movb
pop
sahf
imul
gs
add
jb
pusha
mov
inc
aas
cmp
inc
loop
fprem1
sahf
andl
cmp
inc
sbb
dec
ljmp
and
or
out
dec
and
movsl
push
outsb
inc
inc
imul
cmp
sub
sarl
mov
sarb
icebp
sbb
not
repz
dec
bound
sbb
push
sbb
es
shll
test
outsb
or
mov
repnz
cs
std
push
pusha
clc
movsb
cli
jg
sub
jg
mov
les
adc
pop
mov
mov
jg
mov
pop
repnz
es
xor
cmpsb
negl
into
adc
push
mov
xlat
sub
mov
fcoml
lods
js
fnstsw
or
sub
inc
push
adc
mov
cwtl
in
pop
adc
aad
jns
ss
sub
test
addr16
mov
dec
std
mov
iret
sub
test
ffree
daa
mov
test
cwtl
mov
cmc
xchg
je
fbld
movsl
lods
xchg
loope
xor
mov
sbb
hlt
push
mov
ja
pop
inc
mov
adc
ss
mov
rcrb
dec
cmpsb
pop
jg
loopne
inc
ja
jb
in
pushl
popa
test
ja
arpl
out
addr16
mov
push
mov
in
cmpb
or
mov
pop
scas
inc
cmp
push
jmp
inc
xor
push
cltd
in
adcl
or
leave
xlat
test
mov
and
and
xchg
pop
mov
loop
pop
inc
std
insb
mov
push
sub
shl
dec
nop
mov
repnz
mov
mov
push
ljmp
push
pop
adc
in
ljmp
fidivrs
mov
je
xor
pusha
lods
push
sub
clc
sbb
mov
ret
cltd
pop
mov
orb
adc
sarb
mov
mov
add
cmp
fwait
loopne,pt
in
rcrl
dec
dec
push
lds
cli
jge
ret
rolb
push
xchg
repz
cmc
loopne
xor
out
mov
xor
mov
sub
aad
call
pop
outsl
je
fidivl
add
pop
insl
sub
das
dec
dec
adc
cs
push
shll
add
shll
stc
outsl
stos
sbb
mov
push
fbld
fisubrs
xor
lret
insl
add
and
xor
push
and
daa
movl
or
mov
mov
dec
pop
jb
push
xor
xchg
mov
daa
adc
or
into
das
add
fwait
aas
stos
adc
inc
lea
mov
aam
adc
push
fnstsw
mov
mov
and
xor
insl
int
in
dec
pushf
xlat
int
add
adc
lahf
xor
test
icebp
aas
fimull
insb
xorl
push
mov
adcl
or
cmpsl
out
adc
out
add
js
stc
jno
inc
pop
movsl
sbb
and
xorb
mov
pop
mov
mov
jbe
sbb
je
fidivrl
mov
outsb
or
jo
in
sbb
test
jb
std
cmpsl
mov
rorb
mov
pop
outsl
adc
adc
jle
push
xor
sub
shrb
sbb
es
fs
lock
or
jae
pop
xchg
lcall
mov
test
adc
add
cmp
sub
mov
call
add
and
mov
fisubrl
cs
nop
pusha
sub
imul
ljmp
push
and
and
and
hlt
aad
les
in
addl
adcb
rol
lret
jb
sub
inc
ficomps
fistl
in
cld
jb
fnstenv
mov
orl
call
adc
xchg
and
mov
inc
mov
es
int3
and
push
ficomps
lods
fisttpl
fdivl
dec
ds
loope
adcb
mov
lods
push
or
mov
sbb
lret
push
jecxz
shl
xchg
icebp
loop
xor
xchg
jmpw
mov
push
popa
xor
inc
int3
mov
jbe
pushf
adc
lcall
push
mov
out
dec
in
jb
shlb
pop
pop
loope
push
pushf
test
hlt
cli
mov
jnp
and
xor
dec
pushf
cwtl
icebp
xchg
sbb
aad
loop
dec
mov
push
out
imul
mulb
fdiv
add
repnz
out
pushf
sub
jbe
dec
idivl
inc
adc
mov
adc
sahf
fsts
leave
insl
scas
sub
push
jno
xchg
stos
cwtl
out
and
pop
or
jo
pop
inc
fnsetpm(287
jp
jno
pop
xor
fxch
ljmpw
and
xor
or
pop
ss
add
push
pop
jne
jae
sub
in
xchg
rcll
loope
mov
xor
pop
pop
lcall
stc
nop
rolb
lret
jge
mov
imul
push
push
movsl
rorb
mov
cmp
xchg
clc
sub
mov
std
adc
sarb
and
adc
jp
loope
sub
push
add
or
rcrl
loop
adc
iret
mov
xchg
sbb
inc
lods
bnd
outsb
mov
fbstp
jne
insl
adc
lahf
lret
in
stos
leave
shlb
jne
ja
or
inc
aas
mov
cmpsb
jl
sub
in
push
cs
push
subl
pushf
in
sbb
pop
dec
mov
jne
out
add
xchg
hlt
pop
mov
sbb
or
imul
aad
sti
inc
mov
jp
cwtl
data16
test
movsb
cmp
mov
dec
jl
sub
insb
sbb
cltd
js
scas
inc
insb
lcall
xorl
daa
push
loopne
ss
std
push
fwait
in
push
daa
fwait
mov
xchg
popf
inc
scas
jb
mov
fnsave
pop
into
arpl
cld
push
cmp
fnstcw
or
pop
cmpsl
fwait
or
in
mul
pop
ds
insl
add
fdivr
jb
movsl
mov
sbb
cs
mov
fnsave
push
in
out
mov
hlt
adcb
sub
pop
mov
arpl
and
loopne
add
or
jno
pop
lcall
and
pop
xchg
mov
repnz
xor
mov
fdivrs
pop
ret
outsb
stos
jb
push
inc
mov
sbb
mov
mov
mov
push
push
fsubrp
std
popf
in
sahf
out
cli
sub
pop
aaa
into
lea
push
cwtl
repnz
daa
stos
mov
xchg
imul
or
mov
mov
adc
xchg
jns
jb
jae
sbb
shr
mov
push
in
int3
test
ljmp
ljmp
sub
pusha
test
and
sarl
mov
inc
loope
addr16
shlb
adc
shrb
sbb
dec
loop
mov
push
xor
aam
push
pop
stos
inc
xchg
lock
imul
mov
lods
pop
mov
jge
xchg
mov
shl
pop
out
mov
add
stos
and
aam
mov
out
inc
pop
pop
scas
test
cmpsb
mov
sbb
push
fwait
ja
movsl
pop
mov
pop
into
lahf
push
dec
jae
es
xchg
js
dec
mov
jns
test
push
mov
fcmovne
fldl
adc
and
cmpsl
clc
dec
pop
mov
int
pop
out
iret
or
or
cmp
xchg
int3
xor
fdivrs
leave
aas
outsl
mov
cli
les
sbb
pop
dec
scas
mov
les
xlat
cs
add
mov
push
hlt
es
daa
nop
adc
push
push
cltd
xor
cltd
pop
decl
mov
xor
lahf
test
fcmovnb
pop
pop
movsl
aad
frstor
mov
out
sbb
adc
mov
pop
out
xor
fcompl
hlt
sbb
lds
mov
addr16
jne
mov
adc
pushl
mov
mov
ret
sub
test
fucomip
jae
ja
and
push
and
push
rcrl
dec
fs
call
in
lcall
add
pop
popa
movsb
mov
sahf
dec
pop
inc
fcoms
out
test
fstl
in
xchg
adc
popf
push
imul
lea
dec
adc
in
sti
xor
mov
scas
mov
sub
ficoml
mov
out
and
cmc
test
fcomip
mov
rorb
cmpsb
and
sub
cli
cmp
das
clc
push
clc
enter
dec
leave
push
inc
popf
push
mov
in
xor
cld
mov
insb
push
adc
push
inc
sbb
dec
jge
outsl
inc
stc
test
fwait
push
mov
clc
sbbb
outsl
int
mov
mov
mov
or
jge
lock
test
jnp
xor
out
pop
stos
addr16
mov
sahf
mov
insb
mov
jge
mov
outsl
jo
jl
aad
out
add
push
add
insb
xor
loop
inc
sub
jns
ret
ret
addr16
sbb
fisubl
bts
inc
inc
imul
and
loopne
mov
outsl
mov
inc
out
daa
call
aas
cld
push
push
daa
outsl
fstpt
popl
jno
jnp
pusha
mul
aam
jecxz
mov
sbb
imul
ja
inc
stc
cmp
cmp
mov
and
and
out
push
mov
notl
or
add
sti
popf
dec
cmp
sbb
xor
mov
fldcw
xchg
push
xor
daa
push
or
inc
mov
jnp
js
xor
pop
or
fists
mov
pop
sbb
out
imulb
in
jp
cmp
pop
fbstp
lcall
mov
xchg
xlat
scas
leave
push
aad
cld
scas
inc
jge
les
sbb
orl
into
int3
sbb
and
mov
movsl
pop
lahf
mov
xor
loope
push
cld
pop
mov
push
les
mov
mov
xor
dec
nop
jns
dec
pushf
inc
ret
pop
and
insl
rcl
inc
push
or
mov
mov
add
sbbl
mov
fucomi
in
xor
sbbb
icebp
adc
rcrb
push
xor
stc
fs
popa
xor
sub
ljmp
xor
stos
es
mov
mov
nop
push
fistpl
inc
mov
pop
xor
mov
inc
or
push
mov
push
cltd
sbb
inc
jecxz
inc
push
jge
mov
xorb
and
jae
andl
sub
mov
popa
dec
out
mov
insb
add
orb
shll
push
mov
iret
fldt
push
jae
cwtl
sbb
jne
xor
insb
cmp
mul
addr16
sub
ljmp
inc
not
mov
cs
les
pop
dec
xchg
jae
inc
movsl
dec
mov
shlb
adc
sub
es
lahf
hlt
and
scas
es
out
xchg
or
and
mov
fimuls
adc
jo
dec
outsb
pop
insb
inc
push
leave
push
add
sub
push
inc
mov
mov
cmp
jo
adc
mov
dec
adc
jmp
mov
xor
clc
cli
test
mov
jmpw
out
cmpsb
cmc
insl
jp
nop
out
fwait
repz
sbb
mov
add
or
ja
imul
insl
icebp
jae
repnz
and
aaa
add
cmp
imul
cmp
data16
cmpsl
cmpsb
adc
sub
sahf
out
xchg
sub
shrb
shll
mov
cmpsb
adc
mov
sbb
mov
enter
jno
xlat
mov
mov
mov
pop
xchg
sub
xchg
sub
lods
jae
cmp
das
xchg
mov
sbb
in
adc
ja
sub
jns
mov
push
push
inc
inc
pop
enter
inc
std
lret
or
scas
js
xchg
aad
out
xorl
sbb
mov
push
inc
cmpsb
fwait
inc
and
mov
test
and
scas
adc
push
push
imul
iret
into
push
sbb
out
into
sub
adc
xor
xchg
push
inc
aam
call
out
xlat
mov
dec
addr16
jae
mov
lcall
inc
loopne
cmp
dec
cmc
dec
adc
mov
js
mov
test
lods
mov
mov
sbb
cld
inc
or
dec
in
std
or
sub
psadbw
fs
sub
imul
inc
imul
aam
cmpsl
add
inc
push
cli
inc
into
dec
pop
fwait
imul
loopne
or
cmp
imul
fnstsw
iret
sbbb
xchg
cmp
jmp
out
dec
loop
push
in
add
inc
in
lea
and
inc
sbb
push
xor
out
in
cmpsb
pop
lret
imulb
mul
pop
movsb
adc
mov
mov
add
in
int3
sbb
push
xchg
mov
out
fistl
mov
and
mov
cmp
mov
inc
inc
push
mov
sub
ret
iret
sbb
ljmp
inc
rcrb
shll
pop
cmpsl
daa
add
mov
pop
add
addr16
pop
sarl
push
jnp
out
mov
pushf
fldl
mov
loopne
fcoml
xchg
out
xor
xor
mov
adc
fldt
add
mov
or
lods
xchg
and
movsl
ljmp
hlt
pop
and
push
das
jg
shrl
mov
or
push
es
or
mov
cmp
out
ds
pop
sbb
rcr
mov
xchg
mov
cli
dec
out
insl
mov
roll
mov
sbb
mov
jg
sbb
or
das
cmp
mov
add
das
sub
xchg
push
ffreep
xchg
pop
stc
add
fcompl
push
pop
jbe
pop
and
inc
xor
adc
jge
lret
pop
jb
fwait
jae
mov
adc
dec
xchg
insb
ret
iret
lea
dec
lock
push
cmpsl
stc
push
mov
movsl
xchg
in
sbb
xlat
xor
clc
cli
add
and
jae
mov
stos
inc
push
adc
dec
fsubr
jp
cltd
xor
scas
cmp
cwtl
int
cltd
mov
in
xchg
cmp
in
pop
jg
lds
cmp
mov
mov
cmp
lret
shlb
push
or
out
push
lahf
loope
add
jge
es
xor
fs
test
sbbl
inc
sub
add
mov
mov
jg
sub
fildl
push
mov
dec
mov
scas
fstps
adc
mov
push
insb
rcr
add
inc
fcmove
mov
popa
testl
cmpsb
dec
xchg
aam
popw
jmp
xchg
fsubrp
icebp
out
daa
divl
std
rcrb
ret
jp
mov
into
negl
mov
negb
mov
subb
xor
cmpsb
dec
gs
xchg
outsb
mov
jmp
imul
test
mov
inc
shll
or
inc
mov
push
loope
test
fcmovnb
in
xchg
out
lcall
lcall
push
xchg
insl
mov
ja
bound
fs
or
push
dec
lret
xor
fsubs
push
daa
sub
stos
jbe
lret
rolb
jno
mov
or
jl
inc
mov
mov
arpl
in
mov
push
jns
mov
pushf
inc
fstpl
push
pop
cwtl
andl
sbb
jle
push
add
xchg
sub
sub
imul
lahf
out
test
js
cmp
or
sbb
testb
rcll
jno
lret
xchg
or
cmp
mov
cli
out
lahf
xor
push
jo
inc
andb
loope
xchg
shr
pusha
adc
in
inc
push
stos
cmp
call
inc
cmpsl
cmpsl
pop
call
mov
sub
stos
imul
jne
add
inc
stos
loope
stos
in
adc
mov
cwtl
inc
pop
cltd
fwait
hlt
jno
scas
sub
dec
xchg
dec
mov
clc
dec
dec
xchg
ret
xchg
and
push
dec
sub
xchg
mov
leave
stc
cmp
cmp
js
jne
jmp
out
fists
push
xor
jl
add
xlat
mov
jp
pop
fwait
mov
fistpl
push
pusha
jp
cmp
aam
aas
inc
loopne
int3
pop
imul
or
cmc
popf
jecxz
popa
cmpsb
pop
push
mov
sbb
rorb
xor
js
add
push
imul
sbb
add
enter
pop
cmpsl
cmp
inc
fnstenv
adc
cltd
xchg
cmp
stc
nop
std
movsl
xchg
shrb
sbb
jmp
xchg
bound
cmpsb
clc
popa
sbbl
inc
or
frstor
and
stos
test
adcl
cmpsl
cmp
add
mov
mov
mov
ds
jb
lods
jbe
and
mov
sbb
adc
int
cmc
pop
push
jmp
and
pop
push
pop
pop
add
fwait
mov
jbe
cmp
and
or
adc
iret
mov
test
mov
dec
movsb
enter
pop
mov
push
sub
pop
jb
push
pop
xor
pop
das
xchg
in
push
xchg
sbb
xchg
jp
xor
int
clc
lret
pop
and
aam
mov
fsubs
vmread
ret
addl
cmp
and
dec
adc
lcall
movsl
sbb
mov
xorb
data16
inc
push
sbb
jmp
push
scas
jns
jo
rorb
jge
mov
sarl
arpl
mov
loopne
icebp
adc
insl
ss
outsb
test
pop
jb
cmpsb
mov
fsubrl
add
sbb
les
adc
mov
mov
out
pop
mov
mov
daa
arpl
mov
push
xchg
test
sti
push
mov
xor
add
mov
adc
or
test
gs
fildl
nop
in
fisubs
xchg
hlt
test
jns
inc
push
leave
cmp
scas
mov
jb
pop
fidivs
cmp
decl
mov
or
sub
decb
cmp
push
push
pusha
inc
iret
fnstenv
xchg
lcall
fsubrs
mulb
mov
push
popf
and
aam
cmp
push
clc
and
adc
js
push
leave
adc
shlb
mov
add
call
outsb
xchg
sub
fwait
push
notl
mov
mov
cli
insl
pushf
and
adc
jb
stc
mov
ja
adc
push
adc
in
lock
adc
mov
in
ljmp
pop
jbe
nop
xchg
push
xor
outsl
mov
lcall
ljmp
repnz
sar
sub
xchg
mov
lahf
les
lock
and
pop
cmp
aas
scas
xchg
dec
pop
mov
les
inc
cmpsl
icebp
cmp
mov
aaa
pop
loope
jnp
mov
cmp
int3
jl
jp
dec
pop
adc
push
mov
in
or
jnp
std
add
sub
daa
mov
mov
push
lcall
popf
pop
push
xchg
dec
fisubl
push
mov
cmp
cmp
and
loop
mov
lds
mov
lods
adc
mov
dec
lret
xchg
adc
or
inc
push
xchg
cmp
and
sarb
pop
mov
adc
fsubrl
lahf
fucomp
shlb
imul
in
jg
js
pop
push
xor
aam
adc
and
add
lods
ss
pop
imul
sahf
sub
in
andl
add
cmpsb
dec
fnstenv
rcrb
addl
sbb
sub
push
xchg
dec
idivb
sub
sbb
je
inc
cmpsb
push
arpl
jb
inc
nop
mov
cli
jp
in
sbb
lock
push
rcrl
push
add
sub
cmp
and
push
jne
dec
xor
xor
add
xor
jle
inc
mov
cmp
sub
lods
xor
dec
fmull
dec
dec
mov
jns
iret
cmp
pusha
and
push
out
insb
jmp
insb
adc
scas
xchg
mov
cmp
jle
scas
push
mov
mov
aad
xchg
lods
scas
call
mov
hlt
xor
jecxz
push
or
shll
mov
cmpsb
scas
out
push
loopne
dec
xor
xchg
or
or
mov
inc
scas
inc
js
sahf
xlat
mov
hlt
negw
cmp
sahf
jge
sub
out
xchg
jbe
push
mov
cmp
scas
test
xlat
int3
int
lea
out
push
jle
push
adcb
mov
pop
insl
and
sbb
jmp
orl
push
fnstcw
xchg
jbe
dec
rcrb
inc
notl
popf
insl
jmp
push
xor
sbb
lahf
idivl
push
popl
mov
sbb
imul
shlb
cmp
mov
and
inc
add
jae
pop
je
fmul
das
add
test
cmpsb
test
pusha
ret
out
fwait
loopne
movsb
lock
jp
jl
ss
xchg
mov
adcb
das
ret
mov
add
enter
cmp
dec
adc
dec
popa
mov
and
jb
pop
mov
mov
loopne
pop
fwait
adc
mov
stos
out
mov
jmp
das
sar
pop
or
sbb
xchg
aam
and
dec
pop
jle
jmp
mov
sub
push
xchg
adc
fisubrs
das
test
testl
cmpsb
nop
dec
mov
in
addr16
sub
jae
pop
movsl
push
mov
push
cmp
imulb
pusha
and
push
sbb
les
test
dec
dec
fstl
cmc
fstl
mov
cmpsl
sbb
mov
sbb
mov
mov
sub
sbb
push
xlat
pop
and
jle
xchg
je
fwait
mov
mov
or
xor
push
ljmp
cmc
jns
loopne
test
xchg
insb
arpl
hlt
mov
xlat
dec
push
lret
adc
ja
rcrb
dec
mov
cmp
sbb
outsl
mov
jbe
ret
xor
repz
xor
dec
ficoml
movsl
inc
sbb
jo
icebp
scas
push
dec
scas
inc
out
out
bound
sbb
xor
inc
mov
aaa
call
jmp
xor
popl
xchg
inc
push
scas
clc
and
imul
add
mov
cmpsl
mov
test
fsubrl
lret
cld
xchg
dec
mov
hlt
jbe
jp
push
das
std
mov
out
out
or
sbb
jb
sbb
cmpsb
fdivrl
sub
out
fstp
mov
paddw
pop
mov
iret
sub
push
sti
xchg
dec
and
dec
subb
orb
adc
mov
inc
fists
mov
lret
and
cmpb
iret
mov
xor
cmpsl
sub
mov
push
jle
adc
lret
testl
pop
shrl
sti
bound
add
and
pop
daa
les
mov
push
je
xor
dec
add
xchg
test
les
shrl
bound
loopne
push
adc
cmp
daa
mov
hlt
insl
pop
dec
data16
imul
daa
cmpsb
sbb
jmp
in
sbb
out
cld
in
mov
loop
pop
lcall
add
mov
pop
xor
inc
jle
mov
stc
add
mov
mov
sbb
or
jge
enter
into
sub
scas
xor
xor
scas
fsts
add
ss
cmpsb
push
cld
cmp
sbb
jp
fsubrp
popf
xchg
lods
scas
mov
jmp
cli
aas
andl
xchg
cli
test
and
test
repz
inc
pop
ficoms
pop
mov
lock
mov
cmp
adc
add
fbstp
or
or
call
scas
jmp
mov
push
stos
mov
in
pushf
sub
jle
sub
popf
pusha
push
mov
lods
shll
and
pop
fcomps
decl
das
scas
mov
lret
ret
pop
jb
mov
in
subl
cmp
xlat
clc
xchg
and
inc
lahf
in
cmpsl
pop
imul
sub
out
pop
in
test
arpl
movsb
test
out
mov
or
fcompl
outsb
stos
cmp
in
jle
xchg
inc
xor
ja
mov
lcall
loopne
pushl
push
mov
movsb
test
inc
movsl
ror
daa
outsl
cli
jp
and
jmp
iret
into
jb
cmp
xchg
int3
pushf
fmul
xchg
xchg
hlt
cmp
in
lret
into
mov
scas
sbb
aam
mov
enter
inc
out
lds
loopne
cmp
movsb
stos
add
mov
jns
data16
out
fdivl
push
sbb
js
mov
fisubs
js
and
cltd
push
add
xor
push
fs
mov
stc
mov
movsb
mov
adc
inc
jns
loopne
inc
out
xchg
jl
cmp
ret
xor
inc
push
jns
xchg
mov
jne
push
aam
into
popf
shlb
adc
mov
pushf
cli
sub
add
aaa
loope
mov
mov
push
std
cmp
cwtl
fnsave
jg
pop
stos
or
or
iret
popa
xor
mov
in
cmp
scas
adc
inc
mov
xchg
jp
arpl
inc
or
cli
mov
pop
cmpsl
pop
fs
pop
stc
pop
lds
ja
inc
lods
shll
xchg
fnstcw
and
push
fstpl
mov
shl
inc
mov
xchg
pop
imulb
push
xchg
xchg
loopne
jg
outsb
mov
sahf
jns
das
ljmp
push
in
fidivrl
imul
loopne
cmp
ss
xchg
addr16
mov
xlat
jb
aam
arpl
or
mov
or
mov
sbb
jnp
mov
cmc
mov
mov
push
jmp
xor
pop
cltd
scas
push
jge
push
jb
cmp
in
insl
mov
push
mov
lea
mov
xlat
jg
montmul
cmpsb
add
je
lret
mov
mov
jle
jl
in
shr
leave
aad
add
out
sbb
xorb
pop
xor
shlb
cltd
daa
xor
mov
sub
bsf
in
outsl
push
pop
push
lods
jmp
repz
loopne
sub
inc
gs
push
mov
or
imul
pop
lds
stos
and
push
ret
adc
in
mov
into
mov
adc
mov
es
adc
mov
sti
es
cmpsb
mul
sub
and
inc
mov
mov
sbb
add
sbb
cld
data16
push
jbe
lea
andl
dec
dec
cmp
cs
frstor
push
fucomi
enter
stos
xchg
pop
push
test
dec
dec
and
pop
sub
xchg
pop
mov
lods
icebp
out
add
fstps
sub
stos
sbb
int
rep
sbbl
fistps
fidivs
sbb
fldcw
cmp
lods
jge
cwtl
adc
adc
sub
lret
pop
enter
adcb
mov
push
divb
xchg
out
add
call
mov
or
inc
popf
mov
out
test
mov
pop
jl
adc
sbb
cmpsb
jecxz
sub
pusha
notl
mov
jb
shll
je
out
es
pop
pop
add
movsl
sub
fstpl
dec
mov
ficomps
icebp
mov
mov
cmp
push
ds
xor
cs
dec
cmpb
pop
aas
and
mov
loop
aaa
sbb
mov
push
mov
pop
cltd
mov
push
mov
roll
cmp
mov
mov
cmp
dec
sub
fists
ret
daa
adcb
rcl
scas
out
in
dec
clc
lds
loopne
subl
push
les
leave
mov
test
fcoml
push
xchg
mov
push
cmp
sbb
pop
pop
aad
jne
cmpsl
pop
push
mov
cs
xor
or
outsb
jecxz
pop
pop
out
stc
pop
cmpsb
mov
cwtl
sbb
out
lds
mov
sti
cmp
divb
scas
push
mov
inc
faddl
pop
push
mov
stos
inc
leave
pop
out
loop
roll
add
inc
adc
mov
sub
dec
shl
push
sti
jns
dec
and
inc
outsb
jl
inc
ljmp
psubusw
cs
push
pop
mov
push
and
loop
mov
jle
push
mov
das
sarb
jno
rorl
add
fistpl
popa
icebp
or
lret
stc
cld
ret
push
push
mov
shl
btr
pop
stos
jo
and
mov
rclb
mov
outsb
mov
xchg
pop
xlat
xchg
sub
test
and
subl
outsl
push
lods
out
inc
fidivl
or
cmp
and
sub
xchg
fistps
add
inc
sbb
sbb
sti
in
out
ret
or
and
dec
test
fcmovne
insl
cmp
mov
push
pop
pop
dec
push
cmp
mov
in
mov
xor
jnp
xor
dec
jb
mov
adc
xchg
add
lcall
sahf
clc
orl
mov
adc
insl
jge
ss
jae
adc
cltd
pop
pop
push
dec
ja
mov
lods
mov
imul
shll
flds
push
mov
jmp
cld
pop
sahf
mov
and
push
vrsqrtps
lods
pop
jbe
xor
sbb
xchg
ja,pn
shlb
mov
inc
insb
js
sbb
push
imul
jno
mov
sbb
inc
and
mov
neg
arpl
push
cltd
popa
fmull
test
pop
mov
imul
jno
popf
stc
gs
cmp
ret
xchg
push
roll
pop
loope
mov
pusha
pop
ret
pop
in
out
insl
add
sub
jb
jge
imul
push
cs
mov
jbe,pt
iret
fstpl
vcvttsd2si
sbb
push
int3
insl
jl
les
mov
pop
cmovb
inc
pop
and
mov
inc
mov
gs
mov
in
pop
or
mov
jns
outsl
jno
ret
sub
pop
sub
stos
push
xor
pop
jmp
push
add
sbb
pop
inc
sahf
add
inc
xlat
imul
outsb
or
dec
jno
dec
cmp
sahf
or
jbe
jge
lock
lds
sbbb
cmpsb
jge
in
dec
adc
repz
imul
xor
mov
or
inc
sbb
imul
pushf
push
insl
inc
pop
mov
rcr
pop
aad
scas
push
ret
cmp
cmp
pusha
insb
fst
ret
shr
jo
int
out
loop
call
xchg
sub
push
mov
das
fdivrs
dec
jmp
cltd
xor
ss
mov
enter
mov
xchg
gs
clc
xchg
mov
and
xor
adc
pop
shr
int
adc
or
mov
in
lods
out
or
mov
sub
faddl
cli
push
cmpsb
mov
nop
pop
call
call
or
jnp
or
mov
iret
mov
sti
incb
xchg
and
or
push
mov
shl
jns
insb
cmp
pop
insb
call
push
pop
mov
std
push
and
pop
cmp
jns
testl
mov
fsubrl
movsl
leave
lds
mov
sub
andl
lds
xor
sbb
pop
jne
sbb
movsb
lds
sub
in
cmp
sbb
andw
outsb
cmc
jno
lods
inc
adc
test
cmp
ret
in
fisttpl
push
cmpb
imul
adcl
jae
mov
add
aam
loopne
sbb
dec
movsb
out
mov
push
and
lds
subb
repnz
subl
mov
and
test
fbstp
sub
fldpi
mov
and
ret
cli
mov
sub
xchg
inc
gs
out
xor
add
pop
jmp
into
pop
in
sti
or
out
mov
dec
push
aad
xchg
add
cltd
mov
stos
mov
js
jne
sub
push
cs
sbbb
jnp
cmp
fnsetpm(287
aas
andb
call
in
or
xchg
dec
xchg
lcall
sub
pop
mov
test
cmp
bound
pop
dec
out
jecxz
cmc
or
loope
add
jl
push
lods
rcrb
repz
mov
adc
add
pop
push
inc
cmp
in
test
popf
xchg
pop
notl
jbe
fs
cmc
push
jae
jle
scas
jl
sbb
mov
mov
dec
push
adc
or
cs
mov
cli
stos
sbb
adc
xor
arpl
aaa
out
sbb
jmp
mov
xchg
jns
loope
mov
push
leave
cwtl
outsl
loop
ljmp
mov
sub
pop
fbstp
add
inc
adc
fldl
out
in
das
ljmp
push
mov
loope
mov
adc
stos
and
in
inc
xor
test
lods
popa
gs
enter
in
negl
call
pop
inc
and
add
popa
push
sub
je
test
clc
pushf
rolb
xor
je
xchg
mov
xchg
add
movsb
les
fiadds
and
fbld
scas
clc
adc
push
mov
mov
push
mov
jle
jl
ljmp
xchg
stos
bound
sub
push
jno
jg
enter
add
pop
out
inc
add
insl
ja
xchg
in
stos
idivl
mov
inc
loop
cli
adc
clc
cmp
fsubrs
push
shrb
lods
aaa
pop
shlb
cld
inc
push
cs
in
push
adc
mov
add
push
pushf
ret
and
mov
pop
stc
adc
ret
call
jo
inc
mov
cmpsl
ret
jmp
xchg
sbb
insl
loope
sbb
jecxz
push
movsl
xor
mov
aam
jmp
into
mov
inc
jno
sub
jg
fs
leave
leave
dec
xor
mov
lds
outsl
insb
push
ljmp
dec
pusha
adc
mov
add
test
cmp
sbb
mov
loopne
cmp
pop
rclb
mov
jo
cmp
push
outsl
cwtl
sbb
jnp
mov
jl
shr
push
gs
mov
cmp
stos
cmp
movsl
js
out
mov
pop
mov
xchg
cmp
jmp
jl
mov
or
ja
xor
sbb
ds
cmp
stos
sbb
daa
add
xchg
sub
adc
pop
push
dec
sahf
ljmp
mov
into
cs
movsb
out
cmp
lods
xor
dec
cli
jl
inc
divb
inc
jmp
dec
cli
test
cld
pop
jle
xchg
mov
mov
ljmp
sbb
add
sub
push
iret
pop
xor
jnp
xlat
shl
and
jecxz
add
add
popa
movsb
mov
dec
mov
loopne
xor
dec
jae
mov
in
cmp
mov
adc
xchg
and
lcall
repz
pop
ficompl
clc
dec
dec
xor
jae
and
pop
addr16
loopne
fdivs
pop
scas
inc
lea
iret
jns
xchg
inc
pop
cmpsl
pop
adc
add
ret
jne
and
les
cs
scas
leave
pushf
cld
inc
mov
mov
mulb
pop
mov
add
insb
mov
or
mov
xorl
imul
xor
imulb
or
popa
out
xchg
and
sub
test
repnz
jo
ret
rol
adc
push
push
gs
pop
cld
es
mov
xchg
js
dec
cmpsl
dec
in
jl
or
fistps
dec
jmp
sub
and
sarl
cmp
imul
cld
xor
lahf
xchg
jp
mov
sub
je
xlat
sub
roll
lods
data16
jmp
jne
mov
loopne
xor
xchg
or
pop
jecxz
cmp
iret
cmp
pop
lret
sub
add
clc
jl
lret
xchg
sbb
repz
xor
sarl
jmp
push
sbbl
out
sbb
jbe
scas
cmp
sti
add
inc
addb
cld
mov
xchg
hlt
out
out
xchg
popf
pop
sub
push
mov
out
mov
xor
jne
add
jae
mov
je
jp
jecxz
sub
leave
dec
loopne
inc
imulb
lret
lods
and
int3
int
mov
in
aas
sti
mov
cli
push
xchg
mov
jg
clc
push
push
pop
loope
xchg
stc
cld
cmp
in
lcall
and
dec
inc
dec
push
stos
mov
adc
jno
pop
and
pop
lahf
and
bound
loopne
xor
mov
dec
jecxz
mov
mov
cmp
cs
dec
sbb
loop
cmp
mov
or
mov
movsl
fistpl
xor
lcall
jecxz
pop
js
outsb
in
notb
cmp
cmpsb
inc
cwtl
push
inc
testl
xor
test
popf
or
mov
or
das
fwait
cmpsl
add
xor
jmp
dec
in
dec
pushf
testb
pop
sbb
lret
add
icebp
push
mov
fdivl
nop
push
scas
stos
mov
adc
ss
inc
out
jp
cmp
adc
mov
movsb
mov
fldln2
repnz
fsubs
lock
ret
cld
scas
jns
call
in
xchg
aas
push
int
xchg
rcrl
outsl
in
sbb
aad
arpl
fwait
pop
loope
mov
hlt
xor
imul
jbe
push
pusha
imul
loope
push
call
popf
jg
lea
or
pop
push
packsswb
mov
sbb
out
xchg
test
lods
push
fstps
or
jo
fmuls
fs
cmp
insl
lds
insl
mov
pop
jo
jbe
inc
mov
mov
xor
pushf
pop
mov
test
cld
jle
cmp
jmp
and
or
cli
lret
inc
mov
mov
pop
push
jo
xor
xchg
mov
mov
stc
fs
movsb
sbb
repnz
pop
out
int
out
cmp
leave
sbb
into
int
cmp
iret
data16
outsl
in
adc
faddl
clc
jne
loopne
mov
dec
push
push
sbb
mov
pop
and
addl
adc
cmp
call
test
xchg
cmpsb
jae
sarb
jp
jl
loop
xchg
dec
ja
cmp
sbb
ret
mov
mov
and
inc
and
xchg
and
cmp
jbe
mov
cmc
or
sub
test
mov
mov
in
mov
pushf
in
int
mov
lcall
jb
adc
leave
jle
fsubrs
fdivl
push
sub
lods
daa
sahf
or
jns
xor
push
mov
and
pop
pop
mov
add
dec
mov
popf
pushf
sub
int
test
jne
inc
out
aaa
lds
lea
pushfw
push
iret
pop
add
andl
push
das
jecxz
sbb
lahf
push
scas
clc
insl
sub
popf
mov
mov
cli
xchg
sbb
ljmp
imul
xchg
dec
or
leave
mov
pop
add
into
arpl
imul
adc
outsl
mov
mov
in
scas
out
sub
inc
pop
inc
fbld
jne
push
push
fstpt
clc
inc
pop
pop
and
cltd
sbb
mov
movsb
popa
dec
loop
pushf
scas
imull
test
xchg
jo
cwtl
cmp
and
jle
clc
cmpsl
or
push
movsl
mov
popa
hlt
sbb
or
xchg
mov
jne
jle
lret
mov
add
mov
pop
sub
ds
dec
xchg
mov
mov
fsts
lds
aad
faddl
xchg
loop
stc
push
add
ficompl
push
ljmp
mov
aas
xorl
xchg
jno
enter
pop
fst
sub
sub
sahf
add
out
sti
sub
movsb
mov
push
jl
dec
and
dec
or
push
call
and
jo
inc
aaa
mov
xchg
out
mov
mov
push
in
add
stos
cmp
bound
lods
mov
aaa
jl
lods
xor
mov
fisubrl
cmp
lahf
xor
fs
pushf
and
pusha
pop
lret
ljmp
inc
xor
jb
stos
ds
adc
outsl
jl
fwait
mov
out
dec
cs
and
sbb
clc
jo
add
inc
cmp
outsl
add
sbb
mov
adc
test
mov
mov
in
in
and
and
outsb
psllq
cmp
inc
aam
in
and
xor
sub
insl
xchg
nop
and
add
fdivl
pop
das
adc
xchg
shrb
dec
cltd
dec
dec
inc
fldt
cmpsb
jecxz
lods
add
dec
fyl2x
jg
mov
jae
stos
push
pop
cmp
popl
pop
lods
xor
xor
and
jl
popf
lahf
mov
popw
lret
xor
ficoms
xor
and
cld
xchg
ljmp
out
add
test
push
jne
ljmp
push
adc
xchg
sub
roll
mov
bound
add
addr16
and
inc
in
insb
sbb
push
int
lods
adc
movl
stos
loope
dec
movsl
pop
mov
dec
add
adc
in
or
pop
push
psubsb
adc
dec
pop
xor
or
sub
mov
mov
stc
test
sub
ds
movsb
pop
outsl
iret
pop
inc
decl
lock
adc
scas
jo
push
add
dec
or
mov
insl
inc
out
popa
fs
aam
lods
or
or
idivl
test
leave
cmp
lds
loop
hlt
inc
mov
push
aam
and
sub
fs
push
mov
sbb
sbb
push
add
push
psubq
xchg
fsubrp
cld
imul
addr16
and
inc
ret
call
mov
int3
stc
movsb
ret
dec
jns
mov
adc
cmp
cld
sub
xchg
sti
jns
pusha
xor
int3
mov
popl
cmp
dec
shrl
out
mov
enter
xor
xchg
push
inc
ficompl
mov
fmuls
std
mov
inc
in
mov
inc
add
xor
pop
scas
inc
nop
sub
subb
arpl
icebp
or
icebp
ljmp
aaa
inc
paddusb
pop
jae
into
test
xor
inc
dec
shl
jp
fimull
inc
fildll
out
popa
jg
mov
adc
pusha
fisubs
xor
pop
mov
sti
shl
push
mov
push
adc
fcoms
dec
aam
jns
mov
and
mov
scas
sarl
out
xchg
inc
push
popf
xor
mov
out
push
lcall
out
or
lret
dec
jecxz
pop
test
addr16
mov
lds
rcrl
push
mov
nop
ss
add
lods
daa
out
test
orl
or
test
lds
popf
pop
cltd
adc
mov
jmp
cmc
sarb
xchg
mov
orl
pop
jno
add
ror
loopne
into
je
in
sbbb
gs
repz
loopne
aaa
sbbl
js
out
cltd
push
or
int3
test
cwtl
lret
jecxz
cmp
jbe
loope
and
mov
inc
pop
pop
push
jmp
add
in
scas
sub
sarl
push
dec
je
add
testl
jnp
and
push
add
shrb
dec
out
cmpb
jae
pop
call
adc
ljmp
pop
pushf
subb
or
lods
aas
cmc
or
jl
or
loope
pop
cld
fucomi
pop
or
pop
in
jno
pop
pop
sub
nop
mov
xchg
scas
xlat
sub
cwtl
sar
lock
decw
je
ss
inc
and
xor
aam
mov
push
and
push
mov
test
rorb
jne
sub
dec
adc
loope
jp
test
fs
lds
mov
fldenv
das
jmp
lahf
bnd
es
or
inc
push
test
adc
inc
push
xor
inc
xlat
stos
orb
lret
pop
not
jns
adc
and
fs
xor
dec
mov
fstpt
repnz
mov
out
mov
or
insl
test
fcomip
dec
pop
push
nop
push
rolb
iret
out
cmp
pop
adc
jnp,pt
xchg
pop
or
jbe
test
lahf
sbb
or
andb
out
jbe
xor
xor
aas
mov
and
aam
mov
cmc
outsl
sub
imul
dec
hlt
addr16
flds
xchg
incb
leave
sub
shlb
loopne
inc
pop
pop
add
aaa
add
cmp
inc
cli
and
call
push
inc
pop
mov
cmp
jle
mov
push
cwtl
popa
adc
jbe
sbb
ljmp
mov
jb
adc
iret
push
rclb
in
pop
or
in
push
sarb
mov
xor
xor
xchg
fwait
jecxz
inc
dec
jb
cld
and
call
lcall
es
fbld
mov
mov
insl
inc
mov
xor
shl
in
xchg
pop
mov
mov
xor
xor
jg
or
in
in
push
push
jns
pop
bound
mov
cs
sbb
in
jg
stos
xchg
xchg
lcall
xor
scas
add
jge
mov
or
push
xchg
rcrl
jne
std
sbb
inc
jecxz
xchg
or
mov
movsb
stos
xlat
dec
lahf
or
add
mov
imul
jecxz
push
mov
in
xor
outsl
mov
mov
xor
sbb
andb
or
jp
addr16
out
movsl
out
inc
mov
xor
fsubr
enter
jg
mov
pop
push
movsl
mov
lods
xchg
scas
lock
mov
movsl
pop
clc
cmp
jbe
out
mov
pusha
js
pop
mov
lea
shl
pop
xchg
cmp
fadds
int3
xor
sub
push
push
addr16
jno
xrstor
stos
stc
cmc
ret
pop
cmp
dec
les
outsb
pop
or
leave
shl
jmp
pusha
mov
repnz
aas
push
lcall
test
mov
dec
mov
inc
fnstsw
pop
push
leave
fisubrl
jbe
sub
insl
xchg
or
mov
test
mov
xchg
jg
xor
jnp
lret
call
mov
iret
lret
and
es
adc
inc
adc
sti
les
loop
lods
addr16
fidivs
xor
add
stos
ss
xchg
lods
dec
jae
inc
sbb
dec
inc
sbb
shll
out
cmpsl
add
loopne
adc
mov
jmp
dec
mov
xor
mov
test
xchg
aam
ja
stos
mov
jbe
mov
mov
xchg
adc
sti
xor
je
fs
adc
pop
inc
mov
pop
out
lods
adc
fsubp
test
dec
int3
sub
mov
or
bound
sti
dec
dec
dec
pop
in
repz
roll
mov
pop
icebp
orl
inc
xchg
xchg
sbb
out
out
and
mov
mov
adcb
mov
push
lods
add
cmp
incb
cwtl
dec
nop
push
out
insb
and
mov
pop
jle
jbe
out
mov
sbb
addr16
pop
out
pushf
ret
outsb
sub
adc
scas
loop
push
fcom
pop
push
dec
ss
push
sahf
shrb
lret
lods
mov
mov
bound
pop
sub
and
cmc
jg
scas
mov
pop
xchg
mov
xchg
daa
lea
fstps
dec
sbb
outsl
inc
mov
insl
or
push
fwait
add
mov
jbe
ds
lret
jns
dec
add
jl
stc
and
sbb
lods
xlat
cltd
push
in
stos
xchg
fistl
movsl
add
daa
lods
sub
ror
cmp
mov
call
scas
mov
clc
adc
cmpsl
les
lds
in
dec
dec
test
mov
dec
jecxz
add
inc
mov
rcrl
add
insl
outsb
push
jae
lock
in
sarb
add
mov
aas
fcomps
xchg
imul
inc
popa
mov
pop
sar
mov
lds
hlt
push
rclb
mov
repnz
xchg
dec
fdivp
test
mov
mov
hlt
mov
call
push
xor
mov
inc
push
subl
and
inc
sbb
mov
and
dec
jae
and
inc
xchg
mov
pusha
mov
mov
fninit
jp
loop
ret
imull
int
scas
jge
sbb
inc
dec
cmp
fnstsw
push
cmc
les
stos
subb
add
repz
sbb
cmp
lods
mov
jno,pt
mov
mov
dec
shr
shlb
lea
fdivrl
jae
inc
dec
push
xor
aas
push
loop
std
xor
call
cmp
scas
inc
int
mov
frstor
adc
sub
aaa
testl
xor
loopne
mov
pop
call
mov
inc
sahf
jno
scas
push
and
shlb
push
push
call
test
lock
add
mov
dec
xchg
mov
xchg
mov
imul
pushl
xchg
xor
push
sub
dec
mov
dec
loope
lods
mov
pop
out
icebp
mov
and
sbb
add
je
cmp
cld
pop
outsl
subb
ds
hlt
cmp
call
mov
push
stos
mov
loopne
xchg
mov
mov
mov
sbb
mov
insb
sub
push
roll
jl
call
xor
and
aad
and
lret
fdivrl
dec
imul
push
inc
adc
inc
or
pop
sbb
mov
dec
jnp
push
mov
movsl
aaa
outsl
jg
sbb
scas
push
hlt
jle
add
sbb
orb
or
repz
scas
sarb
adc
rcrb
mov
jbe
mov
jle
xor
sub
lods
fwait
push
fidivrl
adc
and
jecxz
cs
popf
push
push
pop
out
inc
jo
pop
push
es
jno
mov
xor
mov
push
dec
in
sahf
fisttps
dec
jb
lret
lret
adc
lds
dec
das
lock
fwait
pop
add
out
xor
pop
test
lods
outsb
jmp
sahf
call
test
push
ret
add
push
xor
xor
fsts
cmp
add
pop
adc
gs
dec
pop
repnz
fbstp
popf
add
sti
ss
cmp
or
add
adc
dec
sub
call
mov
fldt
xor
push
dec
pop
mov
dec
inc
dec
fwait
jb
aam
inc
inc
stos
stc
je
in
fsubrs
xorl
add
in
test
adc
cmp
mov
int3
push
mov
movb
sbb
ret
dec
fists
test
clc
nop
loope
xor
cmc
lds
push
mov
and
adc
aad
mov
addb
fdiv
mov
fstl
sub
inc
sbb
jmp
mov
sarl
sbb
std
jo
into
nop
sbb
mov
mov
xchg
and
movsl
xchg
call
pop
adc
fdivrs
shrb
dec
fbld
sbb
dec
or
mov
insb
mov
jo
adc
add
inc
cmp
push
jg
fidivrl
mov
sub
mov
sahf
es
std
push
jp
or
push
icebp
lods
or
dec
in
lret
push
lock
popa
xchg
daa
aam
add
inc
lahf
cmp
lret
fucomp
arpl
cmpsb
test
lds
pop
stos
ljmp
jp
cmc
sub
jmp
pop
xchg
clc
push
lahf
push
pop
or
add
mov
fldt
mov
insb
mov
mov
push
jp
gs
fisubl
ljmp
or
push
cltd
f2xm1
jle
sahf
in
in
les
cmpsb
aaa
pop
popa
dec
mov
or
push
mov
popf
pop
stc
push
das
enter
lods
adc
add
out
inc
int3
dec
mov
push
fistps
clc
ja
xor
push
push
or
iret
mov
dec
fwait
dec
lods
cmc
mov
movsb
insb
iret
ja
int3
rolb
in
popa
stos
adc
cs
inc
shll
mov
and
mov
xchg
es
imul
nop
rcr
adc
cmp
sub
mov
jmp
rorb
ss
movsb
sub
adc
or
arpl
ja
xchg
js
xchg
mov
or
push
cli
mov
cmpb
das
push
pushf
or
mov
ret
and
repz
arpl
ljmp
stos
jle
fdivr
push
sub
inc
cmp
xor
aam
fwait
cmpl
bound
sbb
daa
sqrtps
in
je
lcall
push
mov
enter
mov
xchg
xor
lret
ret
mov
and
mov
ljmp
sub
adc
popa
imul
pop
xchg
insl
lret
lcall
and
inc
sahf
push
inc
adc
dec
mov
cmp
mov
movsl
inc
fwait
xlat
addr16
pop
pop
push
jne
bound
jbe
and
dec
shl
je
dec
push
mulb
in
je
sbb
cltd
cmp
lret
ds
adcl
jo
fwait
xchg
jb
cwtl
xor
in
repnz
cmc
js
and
cwtl
xor
movsl
pop
mov
or
scas
mov
mov
xchg
mov
imul
pop
int
or
or
sahf
pop
mov
incb
xchg
push
sbb
dec
push
add
lcall
fdivrl
sub
and
wbinvd
sbb
dec
shl
in
loopne
popf
jbe
loope
test
mov
loope
jbe
inc
popf
inc
cwtl
push
adc
adc
outsl
loop
add
lret
fisubrl
mov
in
into
fldenv
ror
push
negl
mov
add
pop
int3
inc
and
dec
fnstcw
or
sub
push
pop
rep
inc
fidivrl
andl
insb
xchg
jmp
pop
pop
out
push
cmp
pop
loopne
lea
in
xchg
loop
add
dec
pop
push
call
mov
or
add
xor
push
enter
dec
icebp
insb
xor
xchg
dec
enter
cmpsl
call
sub
and
inc
into
pop
cli
les
mov
repnz
addb
pop
cmp
lds
add
xchg
mov
arpl
push
sbb
jb
mov
xlat
nop
sub
push
movsl
imul
xor
in
mov
xchg
adc
cltd
xor
dec
popa
or
mov
jecxz
out
or
jmp
pop
sbb
add
xor
shl
pop
xlat
dec
es
jno
outsl
mov
cld
into
and
push
insl
mov
sarb
ret
pop
push
ds
outsl
xor
dec
mov
enter
dec
dec
jns
cmpsl
inc
adcb
xchg
lock
int3
call
lock
testl
std
leave
mov
je
sti
cs
push
rcll
jmp
ja
inc
inc
in
mov
out
or
cmp
jmp
fists
xchg
js
sti
cmp
outsl
insl
mov
jnp
fsubrs
mov
pop
cs
insb
jecxz
lock
push
sti
inc
cmpsl
lds
xchg
jne
xor
xor
inc
data16
mov
and
sub
or
into
icebp
mov
ss
repz
inc
jp
js
mov
mov
not
aad
fwait
xchg
and
and
push
sub
insw
dec
fmul
inc
push
dec
pushf
push
pop
xchg
jge
ljmp
call
shlb
aad
arpl
mov
ret
inc
lock
push
in
jle
xlat
ss
loope
dec
adc
inc
insb
notl
xchg
scas
movsb
jecxz
mov
pop
jmp
and
mov
adc
inc
les
dec
lret
lods
xchg
xor
out
xor
jo
fisttpll
dec
pop
and
hlt
pcmpgtw
adc
add
sub
sub
push
add
mov
mov
or
daa
or
arpl
out
and
pusha
subl
or
sub
scas
aad
ficoml
pop
sbb
int
bound
or
dec
xlat
sti
dec
xor
cmc
cmp
popa
or
jae
popf
aaa
adc
xor
mov
faddp
mov
loop
imul
stos
jmp
jno
cmp
inc
push
call
cli
repz
or
adc
mov
xor
out
cmpsl
das
push
mov
jle
jg
and
lock
fpatan
ret
xor
pop
jns
stos
jns
and
ret
ret
jo
mov
pop
xchg
lea
arpl
dec
into
jne
inc
fwait
or
fwait
adc
pop
dec
inc
push
dec
in
and
mov
out
xor
dec
push
inc
pop
jo
lret
es
xor
sbbl
mov
jmp
mov
mov
cmp
sub
and
inc
mov
push
xor
out
stos
daa
xor
out
lock
xor
outsb
dec
icebp
adc
iret
mov
cmp
les
or
sub
pushl
aad
fsubrl
mov
out
xchg
mov
mov
push
stos
les
shl
ss
pop
ret
sbb
cmpsl
mov
xor
fstpl
or
lret
lret
lret
inc
imul
leave
inc
inc
scas
sub
xchg
add
xlat
sti
dec
imul
por
or
cmpsb
stc
int
or
adc
sub
imul
jg
and
stos
pop
mov
hlt
xor
lea
adc
idivl
subl
xor
lret
scas
add
out
iret
inc
push
ljmp
push
inc
lods
lds
and
mov
loopne
xchg
pop
mov
adc
lods
add
mov
int3
shrl
cmp
adcl
in
pop
or
sahf
jecxz
repnz
int3
mov
aam
mov
mov
fsubrl
leave
dec
pop
mov
or
stc
and
inc
insb
adc
push
sub
test
jno
xadd
ja
add
sbb
dec
in
inc
pop
xor
add
sahf
jnp
push
mov
inc
mov
scas
arpl
push
out
and
mov
adc
pusha
cmp
insb
shlb
push
lods
sbb
loop
sahf
jno
and
sub
dec
jb
or
popf
push
xchg
sub
mov
sub
jl
test
setle
and
and
imull
ljmp
mov
inc
mov
arpl
mov
fbstp
adc
sub
and
inc
xchg
inc
mov
data16
adc
xchg
jae
insb
sbb
out
xchg
xchg
dec
out
or
inc
jo
std
jecxz
mov
imul
rorb
stos
lods
stos
enter
cmp
lds
cwtl
push
add
dec
mov
popa
leave
pusha
push
stos
data16
fsubrl
test
test
jae
and
stos
stos
adc
cmp
rclb
add
pop
jnp
aas
xchg
mov
mov
lcall
and
pop
test
sbb
fadds
sub
hlt
lret
mov
testb
pop
cmp
jb
lret
cld
sub
arpl
jns
clc
jle
and
lahf
inc
nop
sarl
jge
repnz
cmp
xlat
ret
pop
test
push
jg
cmpsl
jecxz
pop
and
ljmp
das
ja
roll
or
mov
cmpsl
jp
dec
jno
imul
das
pop
pop
sub
and
scas
or
mov
sub
int
test
push
push
idiv
xchg
cwtl
fimull
scas
sub
cwtl
das
je
adcl
mov
push
jno
jnp
test
inc
nop
stos
sub
popf
lret
pop
jecxz
shll
mov
sub
adc
inc
sub
xor
or
stos
sahf
mov
adc
mov
fdivrs
sbb
and
test
jmp
jg
mov
dec
rcrb
out
call
sub
lcall
stos
mov
fsubl
sbb
pop
sbb
jns
mov
iret
ja
dec
fiadds
inc
ds
jae
loop
mov
in
sub
fsubr
daa
xor
pop
and
gs
out
leave
push
add
mov
mov
test
outsb
mov
and
sbb
pop
aad
jl
daa
scas
fldcw
pushf
inc
imul
pushf
and
call
das
mov
ffree
dec
jnp
jl
mov
aam
pop
xor
repnz
and
sub
cld
xchg
mov
mov
dec
dec
jb
add
sub
lcall
cmc
sub
xchg
mov
mov
fnclex
iret
xor
inc
dec
jb
pop
xlat
xchg
aaa
pop
in
cmpsl
sbb
in
shlb
shrb
js
fstl
xor
test
mov
inc
mov
and
or
into
and
mov
lods
ljmp
call
cmpsl
sbb
inc
pop
xor
pop
das
cmp
ljmp
cmpsl
mov
adcl
popa
je
mov
xchg
and
leave
clc
pop
push
movsl
lds
leave
mov
inc
push
and
into
loope
bound
sbb
stc
xlat
and
xchg
add
push
mov
cmp
and
call
test
pop
xor
and
cld
mov
rclb
cli
pop
inc
sbb
sbb
push
scas
rorl
ja
cmp
and
push
mov
out
xor
push
jmp
push
popf
add
nop
xbegin
fstps
es
push
repz
jb
add
sub
or
mov
cmp
fsubs
and
mov
dec
add
cltd
pop
sbb
sbb
pop
cmpsb
lea
int
cmp
in
bound
inc
sub
xchg
lcall
mov
cmc
lea
mov
sti
nop
test
pop
lods
mov
insb
fwait
sbb
test
and
sarl
xchg
mov
in
js
sbb
movsl
jle
jl
pusha
jnp
out
stos
push
fwait
adc
int3
jbe
decb
mov
xlat
cmc
ret
mov
test
jmp
cli
test
sub
dec
pop
pop
lock
lods
inc
outsb
cld
js
movsb
and
mov
and
test
pop
das
jbe
stc
cmp
jge
xchg
mov
push
das
call
sbb
sbb
jae
insb
mov
pop
or
sti
add
call
pusha
xlat
and
mov
sub
fs
sbb
test
jns
insb
subl
sbb
push
dec
jo
jl
rcrb
out
into
cmp
stc
popf
cmp
sahf
add
push
xchg
and
add
fsubs
lahf
test
popa
popl
mov
fistl
jmp
pop
mov
mov
jbe
jne
hlt
mov
pop
add
xor
ds
insb
orb
enter
sub
and
sbb
ret
adcl
adc
js
or
out
mov
in
mov
fstpl
ficoml
push
xchg
lods
pusha
test
out
sbb
in
sub
mov
sbbl
hlt
jnp
push
icebp
sbb
clc
ja
out
sahf
clc
stos
mov
cmp
rclb
popa
pop
outsl
pushf
pop
jge
arpl
and
loope
xchg
idivb
cli
push
jno
pop
outsl
mov
leave
sbb
ljmp
inc
jo
cmp
mov
sub
sbb
cmp
enter
in
adc
out
rorl
lods
lea
mov
mov
add
in
jl
mov
into
pop
add
sub
pop
add
jp
sahf
inc
jno
lcall
jmp
or
push
mov
mov
xor
mov
ret
sub
push
push
and
cmp
jo
test
cmp
inc
leave
pop
in
in
mov
repz
or
mov
sub
int3
mov
dec
push
jg
in
xlat
insl
push
inc
inc
je
and
or
and
iret
cmp
add
xor
cmpsl
aas
ljmp
test
mov
test
fwait
cli
inc
enter
faddl
lds
arpl
xchg
and
fwait
decl
lahf
mov
lcall
in
fwait
dec
sub
jae
inc
and
std
mov
jge
jp
xchg
pop
push
xchg
adc
cli
int
mov
cmpsb
adc
cmp
adc
cltd
fdivs
or
mov
loope
xchg
shll
jmp
ret
cmp
jmp
pop
test
neg
fdivl
xchg
add
add
out
xchg
adc
in
iret
dec
cwtl
out
rorl
lret
mov
adc
in
iret
movsl
cld
notl
cs
pop
sbb
pusha
in
popf
lcall
jecxz
mov
movsl
addr16
mov
jnp
cmp
mov
and
aad
sub
scas
sti
test
test
xchg
jbe
mov
sub
cmp
cs
sbb
js
mov
jp
push
aam
jo
sub
cmpsl
daa
call
test
out
mov
lea
movsb
pop
xor
mov
cli
iret
cmp
imul
daa
psrad
fwait
push
cmp
bound
rclb
loopne
push
shl
sar
cwtl
mov
int3
pushf
sahf
rcrl
mov
sub
rcll
sbb
sbb
call
adc
mov
addr16
pop
arpl
into
das
inc
sub
or
fdivl
inc
lods
or
xor
movsl
cmp
rcr
xchg
xchg
and
pop
out
pop
xlat
mov
ret
adc
rolb
mov
outsl
lret
inc
or
push
es
dec
test
popf
xchg
jge
leave
mov
push
pushf
mov
push
jo
lahf
lea
mov
in
mov
jb
cmp
pop
aas
loop
int
ljmp
addps
push
push
sub
popa
aas
inc
subb
repz
gs
and
xchg
xor
add
aaa
mov
sub
and
jmp
jbe
testb
pop
jb
test
into
jge
jbe
mov
jne
sub
iret
adc
inc
icebp
mov
jae
leave
xchg
inc
sub
insl
mov
sub
mov
mov
xchg
adc
sbb
das
arpl
inc
outsl
ret
mov
mov
in
test
imul
and
jp
je
ret
jp
xlat
bound
adc
inc
ljmp
fprem
mov
aaa
bound
icebp
mov
popa
cs
jmp
cltd
cli
mov
popa
mov
imul
jb
push
mov
push
gs
stos
shlb
jns
test
mov
iret
lcall
jae
and
mov
gs
mov
dec
je
mov
andb
mov
je
xor
repnz
adc
fs
int3
pop
pop
cmp
loopw,pt
loop
jne
push
push
pop
cwtl
push
negb
test
sti
loop
stos
add
lret
push
or
iret
mov
adc
adc
mov
pop
sbb
jne
aaa
fcmovne
sub
pusha
mov
shrb
and
adc
outsl
cmp
xor
jmp
or
test
push
aad
cli
xor
push
pop
shll
mov
dec
gs
jmp
aam
sahf
mov
out
mov
jg
stos
jns
sarb
popa
cli
xlat
and
dec
mov
je
mov
add
and
inc
hlt
jae
es
popa
test
lret
jns
cmpsl
jns
dec
aas
int
adc
lea
mov
add
pop
orb
mov
sbb
pop
sub
adc
and
scas
push
push
rcrl
jnp
scas
or
sub
push
cmp
lea
cwtl
sub
mov
cwtl
jno
xchg
xor
shlb
push
mov
push
mov
jae
xor
add
lods
dec
and
jge
mov
sbb
inc
hlt
in
and
pop
insl
dec
test
lods
pop
jnp
lea
scas
ljmp
das
out
mov
and
push
loope
adc
fs
jl
pop
cmpsl
mov
sub
cmp
jg
repnz
iret
pusha
or
repz
call
mov
sub
xor
fistpl
bound
sub
inc
fidivrl
test
daa
fmuls
adc
cmc
push
aam
mov
clc
scas
push
mov
insl
mov
sbb
pop
stc
fldenv
mov
push
cmp
andl
std
push
js
mov
push
dec
movsl
lds
cli
inc
mov
jbe
sbb
cld
push
and
sub
std
or
iret
mov
add
add
sbb
sub
and
mov
jne
push
jecxz
xchg
mov
in
mov
dec
imul
es
cmp
bound
mov
lea
sub
xor
shl
sub
cmc
mov
scas
jmp
or
mov
mov
mov
mov
sbb
das
adc
je
or
mov
jo
sahf
or
clc
sahf
daa
mov
hlt
std
shld
mov
sti
unpckhps
xchg
mov
jb
addb
sbb
pop
adc
push
inc
jmp
scas
mov
aad
std
lods
mov
pop
sahf
hlt
fadds
fstl
add
pop
pop
je
iret
mov
call
out
mov
aad
or
imul
dec
dec
out
and
xchg
xchg
cmp
lods
out
lea
lcall
daa
adc
sub
mov
sbb
out
adc
jmp
outsl
add
inc
jg
inc
cld
test
cmpsl
popa
leave
fs
mov
out
cmpsl
fnsave
repnz
cs
pop
mov
in
mov
jg
repnz
sbb
cmp
adc
jb
xchg
xor
cli
lds
gs
sbb
int3
cld
or
mov
adc
adc
cmp
ja
clc
mov
mov
mov
ret
xor
movsb
loopne
add
pop
cmp
inc
ss
sub
test
mov
pop
pop
out
cmp
stos
out
mov
xchg
sbb
xchg
add
js
negb
mov
das
movsl
lock
imul
xor
xchg
pop
test
sti
mov
mov
je
test
mov
imul
aam
adc
cmpl
outsb
mov
cwtl
cmpsb
sbb
mov
xchg
mov
fstpt
jecxz
push
xchg
mov
out
jle
aam
lahf
add
pop
es
andl
sub
lock
or
xor
jge
cwtl
pusha
stc
sahf
in
loopne
mov
sub
ja
mov
mov
adc
push
push
ret
cmpsb
xor
je
outsb
sahf
movsl
movsb
mov
xlat
xchg
popa
add
out
jno
and
mov
add
stos
addr16
jae
test
in
xchg
icebp
dec
fwait
add
adc
jbe
clc
dec
inc
dec
testb
es
add
dec
cs
mov
xchg
cmp
sbb
fdivs
cmp
popa
fnsave
sbbb
into
lods
addl
push
cmpsl
and
mov
xor
mov
push
ficoms
lds
pop
sub
lahf
jbe
in
fwait
xchg
and
out
les
test
loop
xor
leave
mov
sub
sub
inc
jmp
int3
movsl
movsb
cmp
out
imul
ret
in
shlb
sub
mov
mov
repz
xor
mov
into
movsl
jo
mov
inc
mov
mov
cmpsl
call
out
push
out
and
in
inc
aad
aas
hlt
ds
xor
jnp
sub
das
mov
inc
insl
inc
pop
aam
jne
mov
roll
xor
xchg
xchg
shrl
mov
ret
fimull
lret
jb
dec
inc
push
jnp
jge
jno
and
xlat
fisubs
test
sbb
jb
movsb
push
movsl
in
in
push
pop
ja
sbb
mov
pushf
aad
inc
mov
jns
push
push
xor
arpl
fdivs
xchg
push
inc
jbe
push
jo
and
dec
xchg
les
mov
ljmp
sub
inc
mov
and
in
or
jb
sbb
fimuls
or
jmp
push
ss
fsubr
aad
mov
call
test
ds
push
or
subl
or
lods
aam
out
jecxz
and
arpl
shrl
mov
push
jp
fsubl
cmp
das
push
in
addl
es
xor
icebp
inc
fldt
movsb
inc
pop
xchg
faddp
ret
and
jb
sbb
data16
out
add
es
sbb
mov
or
daa
test
xor
xor
xlat
leave
add
movsb
fwait
icebp
movsl
pop
cld
daa
inc
push
push
pop
lahf
jb
mov
daa
out
or
add
cmpsl
bound
or
pcmpeqb
pop
xchg
dec
mov
cmp
imul
pushf
dec
repz
decb
outsl
mov
addl
xchg
xor
pop
sub
jnp
dec
lea
fistpl
adc
in
loopne
je
aaa
push
cmp
arpl
sahf
cmpsb
in
scas
movsb
popa
and
scas
inc
jae
arpl
xor
cld
aad
mov
fisttpll
loopne
sub
fisubs
ret
add
cmpsb
cmp
fldl
lret
or
sub
add
sub
pop
cmp
push
stos
mov
dec
xor
mov
lahf
enter
ljmp
stc
adc
fsubs
lahf
in
pop
roll
or
inc
insl
roll
mov
sub
sub
loopne
repnz
fdivs
pop
in
add
jne
shrl
jns
rorb
mov
xchg
xor
fisubrs
in
cmp
loop
imul
das
jmp
test
lds
sub
lock
mov
cltd
scas
mov
iret
in
cmp
sub
add
mov
lods
xor
pop
sar
xchg
inc
push
stos
test
loopne
std
nop
mov
jmp
xchg
xor
jbe
fldenv
shr
add
cmp
js
imul
flds
enter
or
push
push
jb
cwtl
in
push
ds
push
out
add
mov
sbb
xchg
inc
sbb
push
lods
mov
mov
aad
xchg
mov
in
xchg
ljmp
lods
sbb
dec
dec
int
sbb
sbb
subb
jg
inc
popf
sub
push
call
adcl
loop
mov
xlat
rcl
dec
adc
sbb
mov
cmpl
xchg
cmp
inc
cwtl
sub
sbb
or
adc
add
out
xchg
sub
jg
fsubs
lods
inc
add
pop
in
xor
bt
pop
ja
adc
xchg
adc
ljmp
push
nop
stos
xor
loopne
dec
push
push
insl
and
inc
jae
add
test
cmpb
in
hlt
das
fcoml
ss
mov
adc
or
cmp
aad
inc
pop
fwait
and
mov
testl
out
imul
ss
repnz
cmp
mov
jae
adc
gs
jg
mov
fnstsw
jg
dec
in
sbb
push
ret
add
arpl
clc
adc
ss
in
mov
sahf
mov
and
push
push
sbb
aaa
lret
icebp
xchg
cmp
mov
test
es
loop
dec
pop
adc
xor
mov
cmp
mov
fcmovbe
push
ret
inc
push
jb
icebp
or
mov
cltd
gs
je
pop
mov
outsb
je
out
shlb
add
dec
dec
add
setb
inc
sbb
lock
xchg
xor
jmp
cmp
pop
xor
int3
mov
mov
flds
jo
iret
xchg
bound
ret
stos
fucomip
aam
inc
inc
fnsave
jle
xor
imul
or
stos
cmpsb
push
insl
or
lds
sahf
mov
push
jmp
add
ss
push
inc
push
repnz
or
mov
in
mov
imul
imul
jns
shlb
pop
popf
adc
ljmp
or
jl
jp
cwtl
mov
push
jmp
pusha
shll
iret
mov
dec
loop
mov
jecxz
lock
mov
call
scas
mov
cmovns
mov
lea
mov
daa
or
scas
mov
jp
mov
into
inc
loopne
pusha
push
jbe
leave
jb
push
cmp
inc
insl
aas
push
repnz
mov
xchg
pop
lcall
inc
sbb
sub
ds
mov
xchg
fdivp
sarl
adc
icebp
fbstp
add
cld
outsl
push
push
pop
mov
dec
sub
inc
ljmp
outsb
cmp
lds
mov
mov
in
je
push
lods
cs
and
lcall
lock
orl
stos
pop
icebp
insb
xchg
inc
push
pop
cmp
stos
inc
mov
cmp
ror
sbb
divl
push
mov
aam
lahf
scas
fnstsw
gs
xchg
sub
je
fucomi
xchg
mov
inc
fistpl
cmp
movsl
cmp
lds
mov
xor
dec
in
shll
sub
add
stos
nop
and
jbe
or
cmp
and
jne
sub
jge,pn
aad
xchg
rcrl
pop
add
pop
insb
fbld
inc
or
dec
push
ja
out
xchg
iret
fwait
mov
inc
mov
lock
cmp
aam
push
lret
aas
xor
mov
cli
std
test
les
cmpb
xlat
lods
or
jno
jmp
push
sbb
outsb
add
in
mov
push
fcmovu
jno
bound
dec
mov
jmp
std
add
cwtl
outsl
pop
inc
xor
dec
notb
lods
in
out
in
hlt
ret
pop
lds
pop
push
outsl
aad
ds
flds
mov
dec
and
aaa
lods
cmp
scas
rorl
ja
aad
mov
xchg
shl
jg
mov
cmp
sbb
jg
sbb
and
ja
inc
mov
jns
pushf
adc
pushf
gs
jae
mov
and
jp
xor
xchg
data16
lahf
mov
in
push
movsb
add
insl
clc
cmp
bound
decb
jns
pusha
test
in
icebp
rcrb
adc
imul
push
add
insl
fldcw
mov
popa
ja
ljmp
mov
adc
add
push
xchg
cs
fdivl
adc
mov
fdivs
into
addr16
test
add
xor
fst
icebp
mov
jmp
and
inc
bound
xor
inc
data16
mov
xchg
lea
push
inc
fidivs
imul
adc
push
lock
adc
xchg
mov
js
mov
dec
jp
popa
les
adc
add
add
push
testb
arpl
andl
mov
orl
scas
popa
xsha256
cmpsb
xchg
adc
je
sub
fisubs
sbb
lds
rolb
aad
jnp
cmpsl
lds
stos
xchg
xor
mov
xor
mov
xchg
stos
xchg
ret
mov
sub
push
sub
xchg
dec
inc
enter
int
cld
jne
gs
inc
push
pop
add
out
insb
sbb
jge
or
jne
mov
add
cmp
mov
shll
shlb
sahf
test
push
popf
std
mulb
pop
imul
push
xchg
inc
movsl
cmp
bound
push
inc
cltd
add
movsb
flds
pop
fsubs
aam
and
pop
repnz
pop
xchg
popa
sahf
sub
dec
or
inc
push
add
xchg
add
or
mov
cmp
xchg
dec
dec
mov
cmc
cmp
das
pop
test
sbb
or
jne
sub
sarb
sbb
iret
xchg
xchg
out
loop
and
popf
xchg
inc
push
stos
stos
push
in
sbb
fbstp
push
clc
insl
cmp
mov
mov
sub
adc
jb
das
andl
stc
neg
daa
loopne
dec
sbb
mov
shlb
loop
inc
into
sbb
stc
or
pusha
add
into
and
or
jno,pt
push
out
or
cmpsl
jne
sbb
adc
pop
sahf
mov
into
movsb
sbbl
insl
jle
sahf
mov
ret
fistpll
lods
and
push
mov
mov
xchg
in
cs
cli
cmc
cwtl
lret
in
cld
cld
mov
test
test
addr16
lret
adc
aaa
xor
push
mov
cmpl
cs
enter
popa
sub
xor
mov
mov
out
mov
xchg
sub
pop
mov
scas
imul
mov
jae
lret
fisttpll
into
fdiv
js
insb
add
cwtl
mov
mov
cmpsb
mov
xchg
inc
add
out
lea
cmpsb
add
sub
cmp
fucomip
cmp
cmp
stos
mov
fistpll
push
lods
xor
and
dec
inc
push
call
cmpsl
jno
push
mov
adc
or
inc
jle
fs
push
hlt
fs
push
push
pop
push
xchg
insb
mov
push
bound
inc
or
xor
fsts
xchg
cmp
jg
add
or
enter
pop
jle
inc
mov
ja
in
pop
lret
bound
in
outsl
ljmp
inc
loope
cmp
imul
je
clc
jne
fidivrs
dec
mov
shrl
cmpsl
ds
or
push
mov
pop
comiss
lea
lods
sub
flds
mov
adc
adc
ds
dec
repnz
test
enter
inc
icebp
cmp
rcrb
push
sbb
popf
test
mov
popf
das
sbb
movsb
fcmovu
add
lds
shl
sub
stos
add
pop
lock
enter
push
pop
and
and
jecxz
in
insb
inc
fwait
xchg
ficoml
aas
rcll
jbe
add
adc
xchg
inc
mov
repnz
aam
mov
or
lods
inc
xlat
xchg
sub
sbb
les
adc
dec
push
mov
ret
adc
icebp
xchg
push
inc
movups
ljmp
jb
fstp
pop
cmp
dec
adc
xor
je
push
loop
adc
dec
enter
outsl
push
dec
loopne
mov
pop
mov
notl
push
cli
aam
pop
xor
outsl
inc
lret
sbb
jecxz
test
and
test
inc
cs
mov
push
ss
call
mov
pushf
xor
leave
add
jmp
ss
lods
mov
inc
mov
arpl
mov
in
add
popf
pop
pop
dec
inc
inc
inc
js
xchg
add
scas
add
dec
ljmp
mov
xchg
subl
in
inc
dec
mov
bound
jp
imull
sub
push
popl
pop
jmp
jp
xchg
mov
dec
enter
adc
push
cwtl
xor
jl
shld
sbbl
pusha
mov
xchg
sub
sbb
in
pop
pushf
aam
push
cmc
and
adc
push
int3
aas
or
out
fisttpl
push
adc
inc
sbb
shrl
jnp
shl
sbb
out
xchg
jmp
roll
int
push
aas
movsb
aad
int
push
popf
punpckhbw
xchg
popa
popf
xchg
mov
or
inc
add
or
imul
imul
fwait
inc
xlat
mov
in
pop
call
adc
out
mov
sub
mov
push
movsl
sub
rorb
and
test
jp
adc
xchg
mov
or
bnd
add
mov
sub
inc
clc
mov
pop
imul
cwtl
inc
push
sahf
sahf
jb
sti
ss
jl
test
or
es
into
movsb
xchg
sub
xchg
jae
mov
inc
push
mov
das
addr16
pop
leave
cmp
push
call
cmp
cmpsl
sbb
push
mov
std
xchg
sub
inc
dec
mov
popa
mov
loope
notb
cltd
repz
cwtl
xor
js
std
sarl
dec
addr16
cmpsl
xchg
icebp
hlt
cmp
adc
mov
and
std
mov
insb
adc
rcrb
repnz
and
movsb
hlt
lods
dec
xchg
inc
divl
sti
mov
rorb
dec
fmull
and
jbe
jbe
add
cmp
mov
rcrl
aaa
fs
test
das
pushl
inc
xchg
add
push
ficomps
clc
push
sub
sbb
xor
xchg
repnz
lods
roll
pusha
je
aaa
and
scas
dec
inc
imul
and
sub
stc
xor
loopne
hlt
jns
in
push
inc
jecxz
xchg
js
stc
mov
ljmp
cmp
mov
sahf
mov
sbb
xchg
jmp
lret
ret
hlt
cmc
sbb
aas
scas
shl
or
andb
loope
sbb
jle
cmp
sbb
jno
push
aaa
stc
mov
ss
jge
and
cld
call
push
inc
jmp
aaa
repnz
ds
and
jp
xor
test
inc
pop
std
movsl
mov
adc
fidivs
shl
jmp
mov
lds
test
push
mov
cld
cs
repnz
in
sub
dec
or
es
mov
sti
xchg
enter
aaa
jnp
xchg
lea
add
mov
ja
out
cs
xchg
dec
cs
gs
xchg
gs
shrb
cltd
cli
mov
push
ja
outsb
cmpsb
mov
mov
fstpl
add
ds
or
mov
xchg
adc
push
xchg
sub
call
sahf
cmp
out
fcomip
adc
jmp
dec
sub
repnz
xlat
cmpsb
xchg
add
std
adc
adc
in
xor
inc
mov
pop
and
push
leave
xchg
add
mov
movsl
sti
push
cmp
aad
dec
int3
ljmp
icebp
cmpsb
sub
jle
cmp
pop
enter
push
jmp
je
addr16
lcall
pop
loop
popa
add
or
push
cmp
negl
cmp
cs
aam
adc
and
ja
dec
xor
mov
and
adcl
out
add
jnp
arpl
inc
dec
push
imul
fldcw
daa
fisubrs
shl
data16
jg
fisubrs
testl
sarl
adc
nop
out
cmp
dec
outsl
shrl
jae
push
lcall
jbe
add
std
js
inc
in
les
cli
mov
notb
sahf
xor
das
lret
cmp
pop
pop
push
jl,pn
pop
push
sub
andl
add
and
inc
inc
cwtl
mov
sbb
sbb
mov
int3
mov
ljmp
push
jnp
lea
popf
xor
into
popa
jg
cmp
or
sub
lods
inc
push
insb
xchg
push
xor
dec
cs
dec
fwait
das
mull
lods
inc
pop
mov
mov
nop
push
in
add
cmp
das
gs
hlt
jbe
shl
repnz
mov
pop
push
sahf
and
iret
dec
stos
inc
test
pop
rcr
pop
repnz
bound
shlb
enter
xchg
das
call
shrb
movb
lahf
imull
mov
shr
mov
cli
mov
sahf
mov
or
sub
mov
insb
inc
loopne
adc
cwtl
gs
sarl
arpl
jp
sbb
test
les
inc
dec
or
into
icebp
fldl2t
sub
xor
adc
and
jo
xlat
neg
movsl
jge
shl
mov
mov
seta
inc
daa
xchg
test
iret
dec
inc
push
jecxz
push
mov
xchg
mov
bound
dec
jb
inc
add
cmp
shl
xchg
daa
pop
out
clc
sub
xor
inc
in
hlt
dec
jecxz
shr
jmp
lea
aas
mov
call
xchg
xor
fisttpl
push
sub
aam
inc
xchg
sub
in
les
data16
jg
sbb
fstl
cs
aas
fisttps
stc
nop
fiaddl
fidivrl
inc
jmp
test
sbb
stos
or
pushf
in
xchg
inc
fidivs
mov
popf
push
mov
fstps
mov
outsl
in
in
jae
xlat
outsb
dec
pop
lea
cmc
or
xchg
lret
vmovups
push
xor
inc
outsb
pop
mov
aad
mov
jecxz
jb
mov
fmuls
scas
rcll
adc
repz
cld
cmp
mov
cmp
test
jnp
pop
cltd
mov
pop
add
ja
data16
jne
cmp
test
mov
mov
sub
rcr
or
mov
push
shrl
sub
dec
fmulp
out
imul
mov
std
push
aad
xlat
push
js
inc
mov
pop
add
testb
xchg
cmp
lea
inc
es
arpl
jo
iret
mov
ret
shll
rcrl
sub
dec
jnp
out
cmpl
es
xlat
push
inc
sarl
jp
xor
jmp
addl
xor
imul
fstps
xor
sub
js
dec
idivb
pop
rorl
cwtl
inc
push
cltd
jg
add
inc
repz
xor
dec
andb
pop
adc
add
fisubrl
mov
movsl
xorb
jbe
scas
jns
mov
dec
pop
xchg
iret
pop
sub
pop
pop
or
jne
enter
imul
mov
sbb
dec
xchg
out
push
dec
cmp
pop
roll
gs
notb
cld
jp
adc
push
and
jo
mov
data16
fadds
sub
rcr
mov
jno
hlt
dec
add
pop
cld
outsl
dec
mov
pop
sbb
insl
lods
adc
imul
jo
add
jp
aam
and
cmpl
add
lock
dec
mov
or
xchg
adc
data16
jne
sub
orps
outsb
jle
insl
mov
jg
ret
and
mulb
jge
shrl
std
sub
dec
loope
mov
inc
add
call
or
fsubr
sbb
xor
into
mov
es
sub
icebp
fmulp
mov
cmpb
push
push
or
daa
rorl
out
in
jnp
mov
jae
out
movb
push
mov
adc
fistpll
pop
test
enter
sbb
cmp
xchg
and
add
je
mov
adc
add
add
jecxz
outsb
stc
adc
mov
sub
pop
push
mov
xorb
mov
push
in
pusha
mov
add
repz
mov
stos
cmp
les
fmul
or
stc
sub
popa
mov
jnp
dec
insl
xor
insb
and
sbb
lret
dec
push
pushf
dec
insb
rcrl
jmp
sbb
lahf
push
adcb
cmp
sbbb
nop
pop
rcl
mov
and
lock
stc
sub
jmp
xor
add
cld
loopne
fstpl
pop
xor
mov
adc
sbb
ja
movsb
xchg
cwtl
push
inc
push
xchg
sub
xchg
sbb
mov
dec
cmp
and
sub
adc
aam
sub
push
addr16
sbb
mul
outsl
out
ficoml
cmp
or
out
out
cmp
or
inc
int3
ret
cltd
cmp
cld
mov
xor
mov
mov
mov
jge
cmp
xchg
cmpsb
pop
scas
or
xchg
fnstcw
add
lods
lods
add
adc
orl
cmp
test
push
shll
imul
pop
xchg
fs
push
mov
sbb
cwtl
popf
clc
mov
mov
les
int3
cmp
push
lea
sub
aad
rcrb
out
aas
dec
and
data16
negl
fmuls
xchg
iret
inc
cmp
inc
or
stos
bound
movsb
cmp
fbstp
mov
shl
cmpsl
add
and
lret
mov
cli
or
mov
test
sti
popa
clc
sub
scas
mov
loopne
dec
pop
push
ja
lds
dec
test
pop
repnz
and
rcrl
mov
inc
mov
pop
inc
or
adc
push
mov
insb
add
mov
int3
out
cld
mov
adc
mov
and
sub
push
push
fwait
xor
xchg
bound
fstpt
decb
in
lret
mov
mov
call
cmpsb
mov
rol
push
andl
lds
adc
pop
push
dec
adc
dec
sbb
mov
js
sahf
clc
jmp
sbb
inc
pop
cmp
inc
cmp
push
aas
xor
mov
ret
hlt
add
cmp
out
lret
jle
cmp
lock
xchg
add
es
sahf
sti
and
cmpsl
add
adc
pop
or
insl
mov
fidivl
cltd
xchg
mov
stos
cmp
jge
sar
pop
js
dec
out
aas
xchg
pop
push
int3
fnsave
out
or
test
lock
fists
or
push
pop
lcall
xor
call
mov
mov
pop
mov
call
js
sar
pop
sub
cmp
clc
nop
pop
or
movsl
leave
adc
xchg
inc
daa
iret
xorb
and
xchg
orl
lods
clc
mov
shll
shrl
out
mov
inc
mov
xchg
aas
inc
clc
mov
fisubrs
pop
inc
add
sbb
leave
fnstenv
popl
push
stc
mov
mov
mov
sub
fistpl
sbbl
jns
test
popa
or
sub
xlat
daa
sub
inc
loop
in
sub
or
pusha
dec
cmpsb
sub
imul
lds
dec
push
mov
push
in
cmp
or
add
or
idivb
inc
xchg
ret
mov
lock
push
out
arpl
movsl
or
movzwl
push
and
mov
jp
fwait
or
mov
incb
lret
adc
jno
sub
mov
gs
imul
sti
in
cmp
fldt
cmp
mov
lcall
clc
in
jne
mov
rorb
xor
sub
arpl
divb
dec
dec
mov
cmp
in
and
inc
ret
test
cmp
das
jb
int
xor
pop
xor
sub
mov
cltd
push
outsl
dec
movsl
adc
cli
dec
testb
xchg
pop
dec
xchg
add
pop
andl
mov
rcll
pop
jb
xorl
movsb
mov
adc
inc
sti
sbb
mov
aad
stos
lea
adc
into
push
sub
in
push
push
adc
stos
push
bound
test
xchg
mov
xchg
insb
ljmp
iret
daa
add
add
je
jecxz
inc
lcall
add
push
xrelease
adc
aam
inc
fcompl
ficoms
test
inc
loop
loopne
mov
mov
fcmove
bound
jo
std
out
aaa
mov
mov
bound
orb
pop
test
push
mulb
xchg
fcmovnbe
mov
shlb
in
pop
inc
incb
xlat
ret
pop
or
pop
pop
jl
divb
pushf
add
loopne
mov
daa
out
jge
mov
sub
aad
lcall
or
outsl
aaa
or
cmp
sbb
sbb
fisubs
cmp
cmp
cmpsb
idivb
jnp
push
stos
inc
mov
push
jno
push
sub
arpl
dec
mov
fsubl
inc
push
idivb
shl
dec
push
jb
or
mov
shl
mov
pop
aas
loope
mul
mov
lret
push
push
push
fnstsw
clc
ljmp
or
stos
stos
mov
mov
xor
inc
fiaddl
out
movsl
js
or
jp
jecxz
in
jg
cld
aam
xor
aad
mov
xor
pop
outsl
jg
push
jnp
in
jae
subl
mov
aad
dec
in
jne
jmp
imul
pop
scas
ret
cmpsl
push
lea
mov
jp
mov
test
sub
push
jg
outsl
stc
pop
out
ud1
mov
insl
add
or
mov
mov
jle
mov
adc
xlat
aas
mov
dec
insb
add
call
push
cmp
test
adc
mov
xchg
nop
into
in
jl
mov
repz
test
fcoms
rorb
mov
push
jl
pop
mov
insl
add
inc
repz
call
dec
push
stos
or
add
inc
push
xor
xchg
outsl
dec
lock
inc
xlat
and
mov
and
mov
fidivl
dec
mov
sbb
mov
fldl
push
xor
xchg
pop
mov
repz
jns
arpl
lret
lods
add
in
sbb
stc
ja
fwait
rclb
xchg
mov
mov
addb
jmp
pop
sarl
xchg
adc
addl
sti
cmpsl
ret
add
lods
xor
lret
sub
add
shl
js
outsb
mov
lea
outsl
inc
aas
jmp
out
pop
mov
imul
repnz
in
inc
les
push
lods
movsl
push
outsb
in
seta
loope
mov
xchg
test
in
mov
jle
dec
call
insl
in
mov
nop
inc
pop
pushf
clc
lahf
sub
out
and
adc
ja
fs
mov
jmp
adc
leave
pop
jae
fidivs
cmc
gs
xor
push
pusha
jmp
loopne
sti
or
dec
data16
icebp
sbb
and
xchg
adc
cwtl
sub
jp
and
push
jne
es
xchg
xchg
enter
xchg
repnz
mov
xchg
dec
lds
cmpl
insl
xchg
xchg
into
mov
insl
push
mov
cmpl
loopne
lahf
pop
sub
jle
push
dec
add
lds
sahf
fwait
xor
es
stos
push
mov
sub
cmpsb
cmc
test
push
mov
jg
add
xlat
movsl
hlt
test
add
sbb
frstor
loop
orb
adcl
mov
out
mov
call
lods
outsl
outsl
jmp
loopew
mov
push
adc
pop
pop
lahf
add
push
stos
lcall
mov
cwtl
testl
mov
mov
in
test
sbbl
or
rcrb
rorb
sub
in
sub
dec
adc
jl
pop
out
xor
mov
lret
ja
movsb
test
popa
add
sbb
push
movsb
jecxz
pop
mov
subl
aaa
popa
xchg
sub
aaa
stos
xchg
outsb
ds
pusha
sbb
test
gs
pop
icebp
mov
jb
adc
mov
inc
pop
jl
rol
mov
push
movb
pop
loop
lahf
fs
subb
cmc
call
pop
mov
mov
popf
pop
mov
adc
jg
lods
adc
push
call
or
push
sbb
add
inc
jns
sbb
fld
addr16
fwait
pop
loope
or
call
pop
inc
movsb
pop
xor
hlt
and
mov
jp
jae
into
fwait
test
xor
jl
inc
ret
mov
aad
sub
jl
dec
sti
inc
and
xchg
pop
jmp
rclb
inc
in
xor
pop
jp
xor
dec
ret
lcall
popa
add
jl
adc
push
sbb
ss
xor
or
pop
jb
xor
mov
aas
inc
mov
jb
das
cmpsl
ds
iret
xor
nop
enter
int3
hlt
mov
mov
cmp
adc
dec
sub
jns
cmp
dec
push
out
pop
adc
lea
inc
stc
test
testl
divl
test
cmpsl
fs
push
pop
into
pop
lret
incl
out
fisttps
mov
xchg
adc
dec
mov
mov
enter
stc
nop
sbb
dec
les
cmpsl
loop
xchg
es
loope
jle
jae
lret
jns
mov
leave
inc
aaa
pop
cli
jecxz
sub
loopne
inc
and
into
and
sti
jp
mov
ret
or
mov
in
outsb
fwait
mov
jnp
or
cmp
stos
inc
repz
scas
mov
push
rolb
lcall
lods
jg
jnp
cmpsb
insb
loop
lret
imul
add
les
dec
scas
scas
cld
jecxz
and
adc
sbb
inc
pop
dec
jmp
cmp
cmpsb
mov
add
leave
or
adc
mov
or
adc
sub
out
xchg
cs
xchg
cmp
mov
sub
call
lock
rcrb
clc
jnp
cwtl
jb
mov
dec
daa
cmp
movsb
loop
jmp
rolb
mov
outsl
stos
mov
and
xchg
sub
inc
xor
dec
bound
push
insb
addr16
je
fisubs
pop
xor
std
loopne
shll
and
push
cmpsb
sahf
xor
lods
jnp
daa
loop
lods
ljmp
sub
clc
pop
inc
fisttpll
out
frstor
push
push
test
xchg
ucomiss
adc
addl
notl
add
xchg
cs
shlb
or
imul
push
jmp
push
xor
lea
xlat
and
scas
or
aas
leave
hlt
shrl
stos
ret
push
inc
pop
cmp
jnp
popa
in
sbb
jl
cmp
mov
rol
push
or
rol
xlat
xor
push
fnstcw
sbb
jnp
inc
pushl
in
imul
xor
jno
aas
push
jne
ret
xlat
fucom
fcomip
sbb
mov
cmp
cltd
sub
dec
mov
movl
dec
dec
iret
push
shll
imul
mov
mov
inc
mov
mov
cmpb
sub
and
add
push
stos
mov
xor
lods
and
imul
shr
xchg
call
mov
daa
popa
aam
iret
pop
rcl
std
insb
mov
adc
cmpsb
sbb
xorb
adcl
add
inc
insb
sbb
mov
inc
nop
cli
mov
test
add
fwait
dec
and
ja
loopne
sbb
inc
icebp
in
icebp
dec
sub
stc
mov
lret
jnp
jg
imul
bound
jecxz
lret
dec
jge
shlb
jb
pop
pop
sub
and
xchg
mov
ljmp
lcall
in
arpl
jg
or
cmpsb
xor
pop
add
movsb
mov
sub
xor
sub
or
or
out
inc
and
push
and
dec
movsl
push
std
loop
jnp
movsl
insl
sub
pop
mov
mov
out
ror
push
fisubs
mov
mov
sahf
clc
in
in
jae
adc
xlat
xchg
lcall
shrl
inc
xor
popl
mov
mov
xor
je
insl
lock
cwtl
pop
push
xchg
insb
in
adc
sub
rolb
stc
pop
data16
fimuls
add
jl
push
dec
loopne
push
arpl
sbb
cmc
bound
popf
or
ficoml
mov
scas
aaa
cmp
test
mov
pop
sub
fldcw
popa
cld
adc
fcomi
lea
cmpsb
dec
cmp
dec
push
shlb
jmp
and
mov
cwtl
fdivrs
inc
xchg
icebp
cmpsb
bound
ja
xchg
pop
gs
and
repnz
xor
xchg
mov
dec
gs
jo
mov
out
in
cmp
aam
mov
push
repnz
loope
icebp
notb
dec
dec
inc
pop
js
jge
xchg
scas
sahf
xchg
rcll
or
or
daa
mov
out
dec
sbb
lods
insb
jno
out
insb
jno
stc
ret
mov
and
loop
hlt
iret
fs
bound
xchg
lret
repz
sarl
sub
jo
subb
sub
adc
loop
and
jge
clc
mov
icebp
jnp
and
out
xor
ds
insl
jo
jl
ja
mov
inc
dec
adcb
data16
insb
mov
sub
mov
in
cmp
and
add
push
movsl
pop
fidivl
shll
sar
mov
loope
fwait
dec
arpl
add
xchg
mov
sti
push
out
sub
cmp
rcrb
cmp
mov
dec
mov
mov
div
cmp
cli
jg
sub
mov
hlt
jecxz
test
int3
add
mov
rcll
sub
subb
es
in
mov
xchg
sub
push
xchg
dec
push
add
push
loop
scas
mov
rcll
add
outsb
push
sub
push
inc
mov
lea
inc
mov
dec
outsl
push
cmp
mov
jo
testb
jecxz
cmp
scas
mov
pop
daa
out
inc
pop
insb
mov
inc
fidivs
and
xchg
push
gs
adcb
mov
push
mov
push
stos
mov
pop
sub
ja
mov
out
out
mov
xchg
mov
hlt
clc
jbe
add
jg
pop
mov
insb
and
xchg
pop
cmp
aaa
dec
loop
cmp
sbbb
mov
leave
fnstcw
je
jae
mov
mov
sub
xchg
cwtl
add
xor
pusha
add
stos
or
push
aas
mov
arpl
pop
arpl
daa
inc
sub
jle
and
xchg
push
inc
jno
fxch
mov
jnp
push
mov
add
inc
fadd
and
or
mov
enter
sub
sbb
mov
add
arpl
xchg
movsb
cmpsl
pushf
add
pop
aaa
loope
hlt
pop
fisttpll
add
out
test
and
push
out
mov
cbtw
enter
mov
xor
mov
movsl
adc
pop
jnp
fisubl
mov
fs
mov
xchg
mov
call
in
sbb
xchg
sbb
mov
aam
and
sbb
push
loope
cmp
stc
and
push
jp
and
shll
popa
xor
xchg
push
leave
inc
cli
jg
sub
inc
mov
lea
fistpll
pushf
ss
addr16
mov
add
popf
popa
int3
mov
and
cltd
and
inc
in
adc
and
enter
cmp
leave
out
jge
or
std
arpl
dec
push
imul
imul
pushf
cmp
jne
fildl
mov
jg
sbb
xchg
dec
out
xchg
dec
ret
call
sub
xchg
divl
push
or
insb
popa
cmp
dec
addr16
mov
adc
scas
add
fstps
push
mov
lea
pop
seta
push
lcall
es
pop
xor
imul
stos
sub
cmp
aas
cli
or
rorb
inc
dec
loope
stos
mov
push
test
cld
aaa
xchg
mov
icebp
jle
jecxz
lds
push
inc
insl
roll
pushf
int
cmc
or
shl
jo
inc
fdivp
adc
loopne
inc
and
into
xlat
scas
sbb
rol
dec
lahf
add
lods
data16
loope
andb
fwait
sub
and
inc
jle
mov
and
out
inc
outsl
sbbb
mov
lea
es
icebp
out
dec
and
mov
dec
add
pop
sarb
mov
xlat
and
fisubrs
dec
inc
das
sbb
int3
fcmovbe
addr16
push
loope
fstps
mov
push
push
lret
xor
in
jo
lcall
sbb
call
test
lret
xchg
incb
out
mov
stos
adc
and
lret
dec
adc
xor
xor
push
add
aad
imul
push
fisubrl
pop
cmp
jp
lds
dec
push
call
inc
xor
in
cmp
push
xor
mov
push
jae
lods
dec
movsl
in
scas
mov
aad
adc
sahf
sbb
xor
push
and
xor
call
dec
xchg
cmpsb
pop
fdivs
ret
shlb
ds
or
stc
mov
sahf
test
inc
mov
push
lods
pop
cli
cld
inc
mov
fsubr
incb
les
and
or
out
cld
mov
mov
xorb
and
mov
push
out
jno
jb
sub
add
aad
pop
mov
adc
stos
leave
cmp
scas
mov
fnstcw
cs
insb
sub
and
jl
mov
xor
flds
pop
sub
adc
aaa
xchg
pop
out
aaa
in
ds
add
cmpl
inc
push
in
mov
or
dec
jecxz
icebp
mov
cltd
popa
adc
test
and
mov
inc
mov
rorb
adc
sub
and
mov
loope
imul
pushf
inc
addr16
dec
fldcw
sbb
imul
ss
ret
pop
les
imul
add
pop
mov
fnstsw
cli
add
cmp
dec
int3
mov
mov
gs
mov
add
add
rcl
push
mov
sbb
inc
mov
shlb
add
cmp
cmpsl
inc
or
enter
xlat
stc
jno
jbe
call
xchg
rolb
mov
bound
jl
icebp
sub
lcall
dec
andl
aas
in
test
lock
or
cmp
inc
iret
out
test
lods
push
mov
test
xchg
test
popf
sub
sahf
mov
mov
or
in
jge
in
outsl
ja
shlb
cmp
pop
push
sarl
mov
sbb
pop
inc
mov
ds
gs
adc
ss
pusha
ficomps
jo
mov
in
adc
outsl
jecxz
roll
sbb
sti
mov
adc
das
mov
popa
or
loopne
xlat
cltd
repz
jae
push
sub
adc
jbe
dec
out
xchg
in
lds
add
inc
pop
and
mov
inc
pushf
lcall
mov
mov
mov
mov
je
inc
cmpsb
lahf
cmp
shlb
inc
pop
mov
pop
test
idivb
pop
or
mov
inc
fsubr
fstp
lcall
sti
in
rcrl
pop
ljmp
movsb
push
jo
xor
fnstsw
adc
inc
arpl
int
sbb
dec
addr16
xchg
pop
rolb
pop
add
insl
cltd
punpcklwd
mov
adc
test
mov
push
jb
xchg
cmp
xchg
mov
aam
js
and
out
inc
movsb
inc
inc
call
jns
das
ja
daa
adc
addr16
pop
out
xor
test
pop
jp
sbb
rorl
lods
mov
sbb
or
out
mov
cmp
test
mov
notl
lcall
cmp
divb
add
es
test
ss
rcll
mov
sbb
xor
pop
das
mov
ja
hlt
push
or
and
inc
dec
jmp
or
jmp
xchg
and
push
movsb
push
popf
es
test
jge
or
push
ljmp
jno
mov
or
ja
xor
push
lea
es
pop
imul
in
jb
jnp
xchg
sbbb
xchg
test
rclb
pop
mov
fcmove
pop
add
cld
adc
sub
stc
lods
sti
cmc
push
cmp
add
inc
clc
push
inc
sub
fs
aad
cmp
pop
and
and
loope
mov
lcall
and
inc
inc
hlt
ljmp
inc
in
pop
repnz
fildl
pop
sbb
lods
ljmp
pushf
xor
jge
sbb
ds
mov
sbb
adc
push
ret
or
mov
sub
add
fbstp
xor
subb
lahf
pop
pop
in
sbb
mov
xchg
pushf
add
fiadds
in
shl
dec
cmp
inc
sub
sahf
je
xor
cltd
xchg
es
std
jmp
xchg
cmp
es
push
les
sti
out
pop
push
cld
std
cmp
les
imulb
shrb
repz
xchg
mov
inc
adc
or
mov
jmp
fs
jecxz
inc
cmpsb
lock
jne
xor
sbb
and
xor
testl
adc
mov
cmp
mov
mov
cmp
clc
cmp
out
ret
add
xor
or
stos
push
adc
mov
ret
imul
das
push
aas
push
cmp
mov
xor
mov
jp
push
fnsave
in
push
sti
fwait
push
nop
mov
xor
stos
cmp
pop
cmp
fisttpl
or
pop
add
pusha
aaa
push
scas
mov
enter
mov
adc
add
outsb
nop
cltd
mov
mov
jg
movsl
pop
cmp
scas
xchg
sahf
cwtl
ret
xchg
mov
int3
call
ficoml
cmp
pop
jmp
loopne
push
dec
pushf
cmc
mov
xor
add
push
mov
aas
loopne
dec
and
xchg
push
inc
movsb
xchg
or
xchg
cmp
lods
inc
cs
and
test
iret
mov
push
nop
ljmp
adc
addr16
mov
scas
pop
mov
imul
cltd
pop
sub
movsl
out
jbe
or
mov
mov
inc
cli
lret
cli
lcall
mov
pop
sarl
test
add
push
lahf
cmp
pop
and
sub
inc
sub
fisubrl
xchg
sub
xor
inc
push
push
jno
bswap
lret
cld
jmp
cs
or
mov
sbb
sub
mov
push
clc
pop
subb
shrl
inc
xor
inc
push
fucomi
test
loop
movsb
or
add
inc
pop
cmpb
jp
xchg
les
lret
mov
pop
scas
int
sbb
xchg
data16
mov
or
int
mov
or
jg
xor
jmp
mov
xlat
push
in
ficompl
jbe
mov
inc
rorl
inc
push
aas
inc
cld
push
in
roll
je
and
xchg
xchg
add
mov
jle
adcl
mov
jae
jne
or
pop
adc
cmp
pop
iret
sbbl
dec
inc
stos
sub
mov
movl
and
xchg
or
jb
push
neg
dec
loop
mov
inc
ret
ds
lret
push
dec
cmpsb
sbbb
xor
cmp
push
lock
repz
aaa
mov
orb
push
mov
push
repnz
adc
cs
mov
cld
adc
mov
jge
lods
pop
sahf
xor
mov
mov
xchg
aam
lds
movsb
imul
push
or
mov
insl
pushf
fmulp
xchg
push
aam
fidivs
je
out
test
dec
cmp
repnz
pop
ja
mov
pop
mov
and
rolb
sub
fbstp
jg
clc
daa
std
je
mov
jg
xchg
mov
ljmp
and
lock
bound
jns
push
lods
sub
roll
je
sahf
in
mov
push
in
sub
and
insb
add
imul
push
push
adc
test
and
hlt
push
sar
subl
lcall
cmp
stos
les
adc
pop
insl
pop
cmp
sbb
push
pop
pushf
jae
xchg
mov
jnp,pt
sbb
dec
movsl
jl
xlat
outsl
adc
lahf
add
lds
pop
jne
mov
pop
cmp
adc
leave
roll
ss
add
fs
int
mov
mov
inc
ja
jp
and
push
xchg
roll
sarl
xor
xchg
popa
cs
ret
push
mov
push
jno
xchg
add
mov
repz
pop
and
mov
push
mov
imul
xor
js
leave
mov
cltd
repz
push
icebp
cmp
jmp
xor
in
sbbl
jbe
shrl
xchg
jo
in
insb
out
lahf
push
iret
stos
mov
lods
jmp
mov
adcl
push
jno
or
bound
xchg
pop
cmp
into
ret
aaa
xchg
ret
xor
loope
mov
andb
imul
cld
dec
xor
fldcw
mov
mull
pop
cmp
in
inc
cltd
das
out
ret
andl
jae
mov
dec
push
daa
loopne
gs
sub
sti
rcrb
into
mov
or
mov
jmp
daa
push
jno
inc
xchg
pusha
mov
sbb
inc
cltd
mov
xchg
and
mov
xchg
push
jns
pop
xchg
xor
int
loope
cmp
shrl
test
cmp
mov
mov
ljmp
jno
push
ljmp
pusha
jecxz
lcall
and
js
xchg
addr16
jp
pop
cltd
nop
out
inc
loop
loope
and
lret
sbb
pop
push
cmpsb
jnp
jo
jae
jb
xlat
adc
dec
add
pop
mov
stc
sub
inc
cmp
jl
mov
fmull
xchg
insb
les
jecxz
repz
sub
iret
and
push
inc
pushf
push
mov
or
and
fs
jg
sub
pop
mov
fs
adc
mov
fwait
jo
cmp
pop
dec
cld
push
mov
fdivs
push
pop
fnsave
aas
insb
mov
xchg
jl
sbb
lret
jmp
add
icebp
cmp
push
lcall
sbb
in
mov
cmp
mov
xor
fcompl
pop
sbb
sti
outsb
lods
xor
lret
sub
jle
jb
insl
jne
aad
cld
in
xchg
leave
mov
in
or
push
lret
call
jecxz
jmp
jge
mov
add
push
fstpt
adc
popa
push
repz
cwtl
jno
mov
iret
lds
push
stos
push
jp
xor
xor
fs
sbb
push
test
js
xchg
test
mov
mulb
adc
inc
call
cwtl
jno
adc
xor
mov
scas
fdivs
mov
sbb
dec
inc
mov
aad
push
sbb
mov
int
rcrl
cmp
mov
cli
popf
jbe
cmp
inc
adc
push
outsl
fstpl
das
call
adc
xor
cmp
icebp
push
sbb
stos
xchg
fldenv
sarl
daa
mov
ficomps
adc
jne
sqrtps
andl
rol
loope
push
jle
pusha
outsl
cmp
imul
xor
xor
xor
jns
sbb
adc
fxch
int3
jne
jbe
test
jnp
mov
push
cmp
jp
xor
mov
jnp
clc
inc
cwtl
dec
jecxz
setns
mov
inc
mov
subb
xchg
xlat
sub
cmp
add
mov
and
out
cmp
inc
inc
scas
ja
dec
test
aas
dec
out
daa
stc
push
loopne
not
xor
pop
aaa
jae
cmc
add
mov
mov
adc
sub
or
push
mov
lret
mov
push
outsl
loop
sub
dec
imul
or
xchg
dec
cmpsl
or
mov
mov
imul
cmp
mov
imul
iret
mov
xor
fnsave
sub
pop
jo
push
lods
mov
inc
pop
and
sbb
mov
sub
mov
dec
or
shrb
push
stos
lds
out
push
sbb
push
jne
popf
inc
test
mov
mov
dec
in
push
insb
jl
jg
add
or
mov
cld
cltd
inc
loopne
cltd
and
int
test
xlat
shl
das
es
dec
push
dec
icebp
xchg
int
in
shrb
loope
cmp
mov
lds
push
dec
push
jge
pop
adc
adc
or
cmpsb
repnz
fcomps
popf
inc
mov
mov
lock
and
mov
clc
aam
std
xchg
in
cmpsl
in
movntps
cs
les
cmc
dec
adc
push
loope
and
rolb
and
lock
scas
test
xor
sbb
popa
stos
cmp
jns
lods
inc
cmp
pop
lret
in
or
cmpb
jg
mov
jge
adc
fwait
cmp
mov
les
movsb
xchg
jl
sub
mov
adc
fwait
test
jbe
mov
add
add
repz
arpl
rcrb
ja
mov
std
push
scas
inc
lock
push
in
je
into
loop
and
mov
xor
int
push
call
imul
ret
cs
jecxz
dec
cli
dec
mov
cmp
aad
pop
push
mov
aas
pop
mov
and
clc
xor
mov
in
out
ficomps
shll
enter
xor
mov
out
es
mov
push
xor
add
and
in
sub
dec
inc
xlat
pop
pop
out
decb
lret
icebp
cmp
adc
ror
adc
pop
jl
adc
imul
jmp
fwait
xchg
mov
pusha
nop
ret
cmpb
push
mov
pop
mov
shr
sub
scas
lock
jbe
sbb
sbb
out
pop
int
insb
push
dec
stc
sub
outsb
fldenv
jmp
sub
pop
adc
mov
icebp
xchg
std
jle
das
cmp
ror
scas
inc
imul
sub
add
and
dec
scas
dec
pop
scas
jg
push
pop
jne
ss
xchg
push
or
int
pushf
dec
adc
repz
add
loopne
loope
sti
fiaddl
mov
pop
shrb
mov
loope
test
iret
outsb
adc
inc
and
push
insl
test
es
mov
bnd
dec
mov
lds
pop
cli
inc
testb
sub
out
pop
cmp
lea
push
cs
or
shlb
mov
lock
push
mov
or
cmp
add
in
mov
cmpsl
and
jb
insb
jl
mov
std
shrb
lods
adc
or
push
hlt
and
lret
jmp
mov
fstl
fildl
das
fldl
push
pop
fdivr
data16
sub
jbe
mov
testl
loopne
out
xchg
sub
fisttpl
inc
fs
xchg
cltd
test
inc
icebp
les
lods
push
add
sarl
mov
in
mov
add
or
xchg
adc
aas
repnz
sub
ja
loope
pop
xor
insl
nop
pop
outsl
int
mov
imul
inc
popa
mov
mov
mov
push
push
les
mov
add
test
adc
call
sbb
mov
adc
mov
cmp
sub
pop
mov
mov
shr
aad
les
outsb
daa
and
cmc
pop
add
rorb
mov
xor
mov
mov
sbb
rcr
or
fcomi
or
xchg
dec
cmp
jnp
mov
out
rorb
rcl
xor
data16
outsb
cwtl
inc
mov
mov
pop
dec
popa
scas
mov
inc
fdivrs
and
jmp
shll
cltd
xchg
adc
adc
test
insl
mov
jne
fstps
or
mov
mov
push
jmp
mov
xor
jae
cmp
stc
mov
sbb
mov
repnz
stc
ret
sub
xchg
sub
loope
arpl
mov
aad
dec
lea
call
adc
dec
inc
nop
shlb
dec
in
xchg
fildll
ret
xor
add
aaa
inc
rcll
fwait
lret
ja
mov
cmp
test
test
inc
push
xor
push
cs
enter
inc
insb
cs
dec
gs
jp
mov
jb
lret
lret
cld
sahf
jno
sbb
in
std
pop
inc
shrl
mov
sar
lcall
in
cmp
jbe
and
pop
lea
pop
and
lahf
ss
subl
mov
nop
sahf
mov
test
call
test
mov
xor
aam
sub
ja
pop
xor
jge
push
mov
repnz
int
push
adc
jae
data16
pop
outsl
inc
gs
fsts
xchg
jecxz
push
and
fsub
mov
sub
mov
pop
jns
sub
in
mov
cwtl
das
lock
jmp
sbb
cld
mov
inc
xchg
fs
dec
sbb
daa
adc
xlat
lret
jns
push
stos
pop
pop
clc
mov
or
cli
push
mov
and
aas
data16
psrlw
and
lods
rclb
pop
xor
mov
loopne
aad
imul
sarl
inc
cmc
push
sub
lret
jbe
cld
and
stos
push
mov
sub
into
xor
aad
addb
jp
dec
pop
rorl
arpl
sub
cli
insl
shlb
mov
cmpsl
aaa
insb
push
mov
scas
push
and
cld
mov
nop
sarb
xor
xchg
and
pop
js
movsl
dec
sahf
scas
jb
outsl
push
or
es
xor
mov
lret
xchg
cmp
stc
cmp
push
inc
and
mov
adc
loope
mov
stc
mov
sbb
push
test
mov
xor
call
xor
mov
or
jne
mov
iret
jmp
cs
mov
faddp
dec
sub
jge
gs
pop
jp
xchg
and
cmp
ret
fwait
outsb
mov
push
mov
popf
mov
out
and
mov
mov
cli
xchg
adc
or
insb
push
xchg
cmp
flds
lock
cmpsb
sbb
jg
int3
fmulp
sarb
jno
mov
cmpsb
and
out
nop
sub
sbb
mov
inc
leave
imulb
into
shll
xchg
lods
mov
mov
push
mov
pop
icebp
scas
adcl
sub
in
test
dec
lock
lcall
testb
fnstcw
push
push
ret
mov
aas
std
outsb
mov
push
sub
fs
es
sub
lds
pop
ljmp
outsl
push
cltd
icebp
xor
pop
xchg
mov
dec
movsl
fidivrs
out
pop
push
test
repnz
dec
or
xor
mov
adc
xchg
lds
insb
repnz
fwait
add
xchg
daa
adc
push
sub
xchg
xor
leave
fs
aad
adc
add
je
jmp
pop
push
jnp
dec
and
ds
dec
lret
inc
push
lret
xor
in
arpl
mov
xor
imul
aas
push
push
push
sahf
mov
xlat
sbb
or
add
push
xchg
loop
les
adcl
inc
and
sbb
out
clc
stos
add
cmp
js
mov
ds
daa
push
loope
xor
add
mov
popf
enter
aaa
pop
decl
jg
fldcw
pop
mov
daa
cs
fsubp
push
nop
adc
shl
push
jge
adc
cmp
fstps
fsubs
cmp
loopne
rol
dec
mov
sub
ja
and
push
mov
ds
rcr
rcrl
jle
pusha
lds
js
or
into
insb
clc
push
pop
popa
push
fstps
sub
push
shrb
test
jmp
push
xchg
push
sti
jbe
jbe
xor
push
stc
je
xlat
mov
pop
or
sub
xor
jo
inc
xchg
sub
test
mov
daa
pop
in
xor
ret
cltd
out
out
push
imul
jmp
jns
mov
rcrb
aad
fucom
ds
push
inc
jge
adcb
fidivs
cmpsl
fiadds
add
scas
in
push
jnp,pt
pop
jne
aam
cmp
stc
push
xchg
mov
add
lods
icebp
mov
jae
test
outsb
pushf
push
popf
cli
pop
jne
outsl
popf
popa
mov
pushf
jno
loop
mov
fcoml
and
mov
cmpsl
xor
lds
xchg
lret
push
in
cmp
inc
cmp
pop
int3
pop
xorb
mov
fdivl
ficoms
enter
sbb
xor
xchg
or
fimuls
popf
or
test
mov
sub
out
pop
pop
test
das
mov
pop
ret
cltd
fdivr
and
cmp
mov
in
mov
loopne
popf
push
mov
inc
loop
sbb
enter
repz
jnp
addr16
popa
pushf
push
add
je
mov
or
mov
jge
inc
sbb
jne
lock
lcall
push
arpl
scas
or
and
outsl
addr16
mov
adc
push
jne
mov
lds
add
insb
jmp
add
rorl
scas
loop
cltd
adc
lods
or
inc
lods
adc
js
push
test
cli
hlt
mov
stos
push
sbb
lret
cmp
cmpsb
cwtl
and
mov
mov
mov
ficoms
adc
add
push
xor
pop
repz
inc
cld
mov
push
sbb
mov
and
xor
mov
pop
inc
je
out
ljmp
fidivrl
sbb
inc
or
inc
loope
sub
movsb
push
sbb
rcrl
xor
sbb
xchg
fisttpl
loope
pop
pusha
and
arpl
movsl
repz
sub
and
mov
pop
std
hlt
outsb
icebp
adc
out
hlt
test
add
adc
pop
divb
and
jle
dec
rep
mov
dec
jbe
push
nop
push
sbb
ret
and
mov
and
fwait
lock
fidivs
sbb
cmpsb
xchg
jae
movsb
pop
in
sub
ret
push
jnp
clc
mov
rol
imulb
jmp
sbbb
dec
mov
iret
shl
add
inc
fidivl
fsubrl
cwtl
icebp
inc
pusha
insl
testb
faddl
mov
hlt
aas
bound
jns
ficoml
cmc
mov
inc
fwait
xor
pop
movsb
bound
jmp
leave
dec
cs
xchg
je
mov
push
push
leave
xlat
mov
stos
and
sbb
xor
lods
pop
ljmp
addr16
add
xchg
cli
jp
int3
ljmp
push
movsb
adc
aad
sbb
jmp
push
popf
xor
jns
dec
jecxz
mov
lcall
mov
popf
jecxz
xchg
xor
or
cmp
mov
into
pop
adc
jo
cmp
pop
test
in
les
aaa
in
aas
out
push
aaa
adc
mov
rorl
mov
push
fadds
or
rorb
int
cmc
pop
mov
out
dec
leave
push
jge
jp
or
jne,pn
cmp
test
sbb
out
pop
in
fistpl
jl
cld
std
cltd
xor
psrad
xor
cs
adcl
int
xlat
mov
jp
sti
xchg
sbbb
pusha
fsub
pop
loope
scas
inc
stos
lea
mov
push
mov
mov
dec
in
imul
fdiv
jnp
cmp
outsb
add
scas
sar
cli
push
jo
mov
jno
dec
push
jo
adc
push
xor
mov
out
insl
inc
and
ficompl
jp
aam
jecxz
aad
adc
cli
test
aam
pop
insb
sub
je
sub
mov
push
inc
sub
mov
adc
iret
push
cmpsl
mov
repz
sbb
insb
imul
sbb
rolb
repz
jbe
enter
fs
fnstcw
jge
je
outsb
sub
test
push
mov
lcall
stos
push
jo
adc
xor
xor
sbb
xor
stos
xchg
or
gs
cs
xchg
cmp
sbb
arpl
xor
mulb
out
sub
push
pop
adc
and
and
xor
push
scas
cmpsb
adc
mov
out
lods
inc
adc
mov
bnd
sub
arpl
addl
xor
jle
inc
push
test
test
push
cli
jne
and
subb
sbb
sub
iret
adc
out
pop
xchg
js
push
lea
mov
leave
cmc
jnp
mov
insb
jle
add
pop
cs
scas
inc
lea
andb
xchg
mov
inc
mov
fdiv
stos
clc
xchg
jae
idivl
dec
lahf
xor
lock
lods
into
pusha
pop
cmp
loopne
adcb
or
mov
push
inc
jne
pop
shr
mov
jne
ds
in
pop
or
cmp
mov
out
ret
dec
mov
popf
movsl
lret
xchg
pcmpgtd
mov
das
cltd
cmp
or
mov
lock
aam
adc
sub
rcr
mov
pushf
xor
cmpsl
std
lahf
cmp
xchg
mov
adc
cmpsb
xor
jg
cmp
mov
idivl
sbb
outsb
aad
push
xor
cwtl
jb
or
or
scas
push
int
imul
xor
push
aas
pop
or
inc
out
sbb
scas
outsb
lock
ret
xlat
data16
cli
push
adc
xchg
in
sbb
out
imul
test
sar
dec
imul
add
pop
movsb
cmp
or
sbb
pop
shlb
test
inc
out
xor
imul
cs
pusha
cmp
adc
adc
out
sub
lock
adc
dec
and
mov
repz
sub
ret
loop
dec
mov
fldt
mov
mov
rol
scas
mov
jl
pop
int
leave
mov
ja
mov
fnstcw
and
movsb
sbb
ss
mov
sbb
mov
pop
mov
popf
jp
pop
fidivrl
fwait
mov
push
push
rorl
dec
in
mov
jl
insb
test
cltd
hlt
mov
pop
out
sahf
ds
sbb
adc
jns
pushf
xor
fneni(8087
lahf
repz
out
lock
cltd
std
sti
sub
cmpsl
dec
mov
js
outsl
and
pop
adc
sub
popa
xchg
int3
lods
or
adc
jno
jg
stos
lret
clc
fbstp
xor
fists
leave
jecxz
jo
std
push
pop
jno
mov
push
out
imulb
mov
dec
adc
jno
push
cmpl
mov
sbb
sbb
jnp
xchg
sub
push
in
push
dec
sbb
mov
cmp
shlb
cmpl
bound
lret
gs
clc
xor
cld
movsbl
loop
arpl
add
pusha
jo
shlb
push
xchg
test
aam
cmp
jno
sub
or
mov
xor
pusha
push
mov
jo
mov
shl
idiv
ljmp
mov
mov
inc
and
ss
loopne
aas
push
loopne
pop
jae
ror
mov
cmp
mov
int3
in
dec
jnp
push
push
push
jno
das
cmpsl
push
jb
aam
dec
and
mov
xchg
jecxz
loopne
cmp
dec
scas
psrad
std
sub
sbbl
lret
int
aam
ret
cmc
and
sbb
in
movb
sbb
ficomps
or
mov
and
sbb
aas
dec
mov
push
stos
jge
add
xor
fiadds
popf
add
les
mov
sahf
mov
xchg
jl
mov
call
and
addr16
cmp
iret
or
sbb
fsubl
mov
movsb
pop
and
orb
jbe
lret
mov
outsb
adc
xchg
mov
sbb
int3
les
xchg
mov
insb
adc
mov
mov
xchg
scas
dec
adc
and
outsb
fs
jo
test
leave
ljmp
mov
adc
inc
sbb
lret
xor
sbb
fcomps
cmc
fadds
stos
xchg
push
xchg
imul
cmpsl
cmc
dec
iret
cmpsb
lods
sbb
push
outsb
or
mov
cmp
mov
cmp
js
loop
dec
fwait
mov
int
sbb
lcall
lret
xor
fbld
push
dec
jb
popf
xchg
nop
sbb
add
xchg
xchg
inc
sub
mov
lods
sahf
jno
subb
pusha
cld
cmp
push
fnstenv
adc
out
or
test
in
cmp
aad
or
stc
xor
mov
pop
aad
cmpsl
and
in
repz
sar
and
js
push
leave
out
cmpl
shlb
dec
dec
add
mov
shl
add
pop
cmp
mov
inc
hlt
lods
cmpsl
mov
ret
xor
dec
push
out
mov
jp
out
jmp
pushf
popf
add
into
mov
sbb
mov
inc
xor
int3
push
push
inc
push
ja
arpl
or
subb
jnp
repnz
xor
cmp
stc
jl
dec
movsl
xor
stc
je
fisubrl
cmp
rclb
add
nop
jne
mov
dec
lods
inc
dec
pop
imul
popf
mov
mov
in
push
sub
push
daa
push
jecxz
test
mov
aas
push
rclb
cmpsb
xchg
inc
cli
je
dec
add
outsb
gs
sbb
shl
cmp
cmp
pushf
dec
xchg
push
jl
xlat
mov
repz
rorb
cli
movsl
and
mov
fistpl
push
xchg
shll
sub
mov
shlb
loopne
cmpsb
les
test
cmp
loop
testb
fisubrs
sub
inc
dec
ljmp
sub
pop
lahf
mov
loope
add
mov
divl
aas
rcl
pop
insb
mov
popa
push
mov
mov
inc
lcall
inc
cltd
les
inc
or
mov
jecxz
sti
test
xor
popa
jnp
push
mov
ret
cmc
icebp
jle
and
adcb
add
dec
mov
push
sbb
mov
stc
pop
inc
mov
cwtl
loop
fdivs
aas
mov
pop
subl
scas
enter
movsl
inc
arpl
mov
aas
adc
lcall
pop
jmp
lahf
cs
pop
aaa
jo
dec
pop
lock
fisubrl
popf
xor
sbb
out
pop
pop
push
outsl
push
negb
clc
or
lret
cld
jmp
inc
fistps
push
outsl
inc
lret
cli
outsb
shlb
push
test
pop
lahf
xor
xchg
bound
cwtl
lahf
scas
cwtl
pop
frstor
mov
cmc
adc
push
sub
sub
mov
ss
nop
cwtl
dec
xchg
inc
mov
cmp
fwait
jge
adc
dec
roll
mov
subl
int3
inc
gs
cmpsl
cmp
inc
mov
arpl
dec
jno
in
std
mov
movsl
adc
rcl
push
pop
movsl
cmc
cmp
arpl
movsl
xchg
inc
das
addr16
scas
lcall
or
sarl
pusha
mov
or
jge
out
mov
xchg
cmp
negb
sub
lret
aaa
pushf
adc
jecxz
mov
fwait
out
shll
mov
scas
dec
mov
lea
dec
cmp
pop
stc
popf
xlat
cmp
cmp
negb
scas
pop
hlt
inc
into
push
inc
pextrw
mov
movsb
aas
lods
lret
sbb
sbb
dec
inc
hlt
repnz
in
cmc
sbb
xor
ja
mov
pushf
test
inc
jecxz
jecxz
mov
movsl
dec
inc
xlat
jne
or
xchg
pop
or
ret
cmpsl
push
sub
pop
inc
sbb
adc
sbb
xor
pusha
mov
popa
add
inc
nop
dec
push
test
scas
mov
in
int3
push
shlb
test
test
jne
imul
dec
inc
push
out
adc
mov
mov
stos
call
cmp
or
xor
mov
xchg
xchg
jae
daa
into
testl
stos
fisttpl
jbe
xchg
fidivl
add
leave
xchg
subl
add
add
push
inc
jne
push
and
mov
push
sbb
aaa
int3
into
fs
call
sub
out
xor
xchg
outsb
sub
andl
je
sahf
jecxz
notl
in
ror
pop
mov
mov
lahf
add
mov
pop
arpl
or
gs
daa
pop
repz
sub
mov
sub
lea
sub
addr16
xchg
adc
dec
loope
sub
fldl
mov
test
add
jg
cltd
pushf
sbb
test
xchg
int
inc
lds
imul
adc
jge
das
cmp
outsl
call
jbe
fmuls
sbb
xor
jecxz
repnz
cmpl
stos
inc
ss
or
fsubrl
mov
jb
cmp
sti
repnz
outsb
xlat
mov
push
insb
lock
daa
test
or
int
rcrl
leave
enter
std
push
clc
ret
js
aam
mov
sub
xchg
gs
mov
iret
je
xor
das
imul
dec
lock
mov
out
insb
dec
mov
test
jl
sub
mov
iret
mov
and
sbb
push
mov
sti
sbb
popa
sub
xchg
ret
mov
std
je
mov
xor
nop
aas
insb
negb
xor
xor
ja
xchg
push
in
mov
out
pop
xlat
cmc
flds
or
data16
aas
es
nop
mov
push
test
push
push
add
shrl
adc
dec
xor
or
in
test
ficoml
jp
js
sbb
jge
imul
sub
lahf
aas
in
mov
mov
gs
xlat
jb
push
fstpt
jbe
jl
test
jg
outsl
loopnew
cwtl
xchg
or
jae
xor
sahf
push
out
roll
push
jno
jne
jbe
stos
out
insl
inc
fstpl
jg
ja
pop
subb
push
test
andl
scas
add
jmp
stos
sahf
cmp
dec
sbb
xchg
jecxz
mov
xchg
mull
bound
mov
adcl
add
jmp
or
es
mov
push
fs
inc
mov
ss
jg
xor
pop
push
out
ds
imul
iret
sahf
js
aaa
xchg
fistl
xor
sar
jl
cltd
std
ficoml
test
outsl
out
mov
or
imul
into
imul
dec
lcall
stos
enter
mov
aam
pushf
loope
fidivrl
add
iret
fcomps
sbb
dec
addr16
cmp
pop
add
mov
inc
or
xlat
jge
nop
repz
shrl
mov
jae
rcrl
pop
ds
nop
daa
call
or
mov
je
cmp
and
ret
jp
aam
jb
and
ljmp
fists
roll
mov
inc
xchg
pop
jne
fldenv
fnstenv
fwait
mov
subb
sbb
fs
push
add
or
sub
add
mov
fmulp
mov
sub
xor
dec
rorb
xor
inc
inc
mov
sarb
fcmove
test
dec
es
stos
sbb
ret
rorl
mov
add
dec
mov
clc
add
push
dec
mov
jecxz
cltd
and
enter
xor
daa
mov
lret
fadds
sti
mov
dec
xor
sar
add
fbstp
fisttpl
mov
mov
lret
and
test
lods
imul
xchg
jno
scas
and
cmp
inc
pop
test
mov
cmpb
cmp
pusha
mov
sbb
scas
and
pop
jmp
into
xchg
cmp
imul
int
xlat
jmp
inc
les
out
and
insl
or
pop
cmp
sub
add
inc
ret
loope
pop
xor
add
xchg
add
test
and
cmp
sbb
add
xor
or
xor
out
adc
mov
stos
rcl
adc
mov
xchg
push
aad
icebp
or
cmp
es
lret
clc
sahf
and
jno
std
xchg
icebp
inc
push
jo
pop
cwtl
das
nop
xchg
ja
add
mov
scas
mov
cld
lds
push
shlb
stc
and
and
xor
pop
adc
subl
xchg
mov
jno
call
ljmp
jle
mov
lods
mov
mov
decl
clc
sahf
dec
add
xchg
pop
in
outsl
adc
inc
in
xchg
scas
and
adc
inc
ljmp
fwait
push
and
mov
repnz
mov
mov
jb
mov
dec
test
jp
push
lret
fldt
jge
insb
and
rcr
hlt
hlt
movsb
loop
mov
idivb
jecxz
aad
sub
sbb
arpl
adc
jl
adc
out
pop
push
mov
les
mov
pop
outsl
inc
pusha
enter
in
sbb
rcr
mov
and
int3
cmp
cmpsl
pop
mov
inc
add
push
cmp
push
sti
pop
jno
into
les
ljmp
fwait
xor
add
mov
adc
adc
and
xlat
insl
or
fidivs
shrl
push
scas
push
popf
negl
pop
ss
lcall
add
es
imul
popa
mov
test
push
fidivrs
fimull
inc
inc
insb
mov
in
clc
push
js
hlt
outsb
sbb
push
leave
pop
mov
insl
pusha
subb
jge
test
ss
fmull
in
jo
jge
jne
es
fwait
ror
lock
lea
fiaddl
into
je
jl
mov
xchg
sub
push
loopne
enter
cmp
cltd
js
lret
push
repnz
dec
cltd
xor
mov
or
mov
sarb
pop
lock
mov
js
test
ret
mov
mov
mul
pop
movsl
stos
push
in
fcmovnb
sbb
adc
call
iret
ljmp
lea
ret
jecxz
mov
pop
mov
sahf
lret
add
sarb
inc
push
dec
insb
mov
push
add
mov
stc
loopne
cld
fstl
daa
mov
dec
cmpsb
inc
sub
nop
ret
cltd
sub
or
xlat
ljmp
push
aam
mov
cmp
ja
insb
and
dec
push
dec
dec
cmpsb
icebp
daa
loope
test
scas
push
adc
daa
inc
sahf
cltd
iret
push
fisttpl
je
test
lods
pop
imul
cmp
in
jno
jbe
push
mov
int3
aaa
insb
sbb
mov
ja
push
cltd
test
out
jae
cwtl
mov
jnp
mov
inc
cmp
imulb
aas
pushf
cmp
cltd
mov
jns
movsl
xchg
shl
leave
pusha
bnd
add
jle
adc
jecxz
loopne
and
fcmovnu
aad
fldl
jbe
and
sub
sar
push
xor
iret
imul
dec
fs
add
ss
test
repz
std
adc
adc
sti
pop
dec
pop
int
loop
aas
dec
mov
cmp
cmpsl
bound
push
test
out
jecxz
loopne
mov
push
mov
lds
push
out
xor
inc
pusha
sti
mov
push
pop
pushf
xchg
xor
xlat
mov
lcall
sub
inc
outsl
pop
stos
mov
fldcw
lods
stc
rorb
aad
gs
adcb
das
mov
add
addr16
call
test
push
mov
stos
xor
insl
test
bound
jle
xchg
pop
bound
in
icebp
pop
outsl
push
cmp
add
imul
ret
inc
mov
xor
xor
mov
ss
xlat
repz
mov
sub
es
xor
insl
add
in
jmp
arpl
stos
pop
cmp
std
bound
insb
mov
or
cmp
ss
xchg
pop
adc
cmp
bound
movsl
in
hlt
inc
not
cmpsl
lods
insb
out
lea
mov
cmpsb
cmp
sbb
fidivrl
mov
andb
and
xchg
mov
in
mov
xlat
rcrb
sub
movsb
popf
mov
sbb
out
jg
mov
das
xor
mov
dec
inc
xchg
sub
dec
mov
add
daa
mov
sub
fs
dec
adc
xorl
xor
lret
sub
jge
sbb
rcl
rcrl
inc
js
push
pop
jae
adcb
jo
push
test
push
or
mov
lea
xchg
sbb
cli
add
hlt
les
xchg
outsl
push
shrb
cmp
test
inc
stos
add
scas
sub
add
lock
dec
sub
loop
repnz
ljmp
sub
ror
xor
dec
in
mov
insb
sub
xchg
nop
sbb
or
xchg
and
sbb
xchg
mov
xchg
add
xchg
xor
fldcw
adc
js
and
sub
xor
mov
inc
adc
bound
lret
leave
sbb
imul
cmp
adc
fnstcw
inc
imul
adc
or
add
into
fistpll
lods
inc
mov
push
and
stos
out
js
push
lcall
xchg
or
cmc
adc
sbb
popa
xor
cs
push
jo
out
add
adc
push
hlt
jns
jno
ret
ja
ja
mov
mov
xchg
push
inc
jl
inc
fwait
dec
movsb
inc
mov
cmpsl
or
fidivl
pop
xor
lret
xor
shr
xor
lea
repz
dec
adc
jb
repnz
lahf
add
out
jp
sti
mov
insb
sub
jp
daa
leave
pop
dec
outsl
mov
sarb
adc
call
rcll
ret
stos
mov
jae
dec
aaa
inc
aam
int
out
pop
xor
aad
push
fsubl
mov
or
icebp
mov
mov
dec
lods
rcr
addl
enter
sub
test
cmp
dec
clc
or
xor
fistps
sbb
sti
push
das
pop
mov
test
icebp
movsl
icebp
aas
inc
mov
pop
push
aaa
clc
xchg
sub
push
jns
xchg
xchg
test
sbb
rcrb
sub
or
xor
mov
test
addr16
stos
or
gs
mov
mov
jp
cmp
push
popa
and
subl
jl
dec
movsb
xchg
insl
pop
arpl
pop
into
sub
xchg
add
int3
insl
test
int3
jae
sbb
mov
hlt
shrb
icebp
lret
pop
mov
inc
mov
pop
sub
sahf
inc
push
xor
lods
or
lret
popf
daa
pop
dec
mov
stos
out
mov
sub
jg
dec
enter
in
ret
fucomip
subb
mov
loop
sub
int3
sub
incb
mov
popa
or
xor
enter
in
adc
lcall
movsl
sahf
mov
insl
icebp
adc
xlat
int3
fiadds
push
dec
adc
rcrb
xor
add
ret
adc
jge
ljmp
jg
mov
fdivs
pop
or
jo
and
pop
add
push
cs
fwait
pop
hlt
int3
mov
in
mov
cmc
dec
pop
jo
stc
fwait
shrl
sti
pop
call
aam
outsl
cmp
test
cmp
and
aaa
and
sub
hlt
lret
mov
xchg
adc
and
rcl
enter
inc
push
mov
mov
and
jle
and
pop
arpl
adc
scas
cld
cmp
adc
cwtl
xor
jl
sarb
dec
add
add
mov
mov
jo
push
cmp
cmpsl
inc
push
mov
push
and
rcr
xchg
or
ret
dec
ret
sbb
sub
cmp
into
imul
push
das
xor
call
rolb
xlat
push
and
inc
roll
shll
test
testl
xchg
imul
xchg
aam
outsb
jge
bound
and
inc
adc
js
inc
push
mov
jmp
and
pop
dec
push
inc
fisttpl
das
bound
stc
adc
test
clc
push
or
add
sbb
sti
mov
lds
data16
jecxz
call
dec
dec
test
ja
shrb
push
in
push
xchg
outsb
daa
push
push
pusha
test
iret
dec
inc
arpl
adc
inc
leave
fwait
pop
sub
cmp
ret
hlt
add
cmpsb
stc
add
es
push
dec
pop
outsb
jg
jno
call
or
xor
fs
imul
xchg
push
sub
pop
dec
jp
mov
push
mov
shrl
push
mov
lret
outsb
add
push
xor
mov
jmp
jns
test
jns
sub
loop
stc
loop
in
std
add
mov
inc
js
lret
jno
fcoms
or
mov
pop
and
mov
pop
jecxz
or
xor
ficoms
inc
fstp
add
cmp
push
xor
aas
loop
or
pop
mov
jbe
repz
ss
jp
jmp
mov
and
sti
mov
and
or
xchg
jne
or
mov
or
and
cmc
dec
jae
push
stc
subb
xchg
pop
sub
sub
icebp
pop
sub
add
nop
mov
xchg
jp
rcrl
pop
jbe
xchg
aad
mov
jecxz
jae
adc
int
ja
pxor
and
jno
cmp
inc
idivb
shr
add
mov
pop
dec
sub
push
filds
lcall
mov
mov
xchg
xor
adc
jle
jb
loop
popa
repnz
cmp
jg
jge
out
fcmovu
pop
push
mov
sarb
lcall
push
not
add
hlt
or
cmpb
loope
dec
adc
daa
arpl
pop
lret
je
sub
fwait
xchg
xchg
repz
sbb
lahf
and
jb
sahf
sbb
out
mov
and
fwait
aaa
rcrl
ljmp
xchg
mov
cmove
push
jno
ret
xchg
fnstcw
cmp
movsb
imul
xchg
mov
mov
in
loop
jmp
lds
test
lret
cld
or
cmp
xor
jns
mov
pop
lcall
scas
sbb
shrb
aam
orl
ja
mov
lods
stc
push
pusha
fnstcw
filds
negb
mov
stos
cmp
sbb
pushf
popl
outsl
es
jmp
inc
pop
fistpll
dec
adc
mov
mov
adc
xchg
das
insl
mov
adc
ret
out
cs
xchg
js
sub
pop
jne
jg
loop
mov
lds
xor
push
jg
add
xchg
or
les
push
leave
and
mov
add
es
insl
or
das
mov
das
jnp
aad
inc
lods
cmp
sub
add
pop
xor
fbstp
adc
aam
mov
shrb
jb
xchg
inc
push
and
or
sub
mov
enter
push
popa
inc
scas
aaa
mov
sbbb
js
andb
jmp
shrl
pop
sub
lods
sbb
lods
jg
lcall
mov
ret
mov
or
or
xchg
xor
push
mov
aas
adc
pop
jg
jno
aaa
jecxz
xor
lds
dec
adc
and
inc
pop
int
push
dec
fdivs
nop
push
out
or
rclb
mov
inc
inc
das
nop
jmp
std
cmp
pushf
jae
jmp
push
adc
int
out
roll
mov
push
cmpl
adc
push
movsl
pushf
outsl
add
cmp
divl
insl
aaa
sbbl
cmpl
jl
push
test
or
xchg
imul
push
or
add
les
dec
add
add
mov
or
mov
stos
inc
xor
push
rclb
inc
ror
ror
stos
and
jb
pop
loopne
or
xor
jle
mov
gs
pop
fldl
sbb
push
movsb
aas
jbe
out
and
fdivrl
icebp
out
jp
repz
jnp
outsl
or
sbb
clc
jecxz
or
add
jne
sahf
fs
inc
inc
in
ficompl
sti
add
xor
insl
cmpsl
adc
pop
push
xchg
cmp
dec
scas
rcr
push
xchg
filds
or
sub
pusha
mov
out
adc
in
push
pop
scas
add
fmull
push
fdivp
mov
mov
cwtl
jp
sbb
xchg
pop
loope
lea
loopne
or
mov
pop
jnp
into
lods
cmp
xchg
pusha
insb
dec
rcrb
orl
xchg
pop
jle
xchg
adc
je
mov
add
mov
jnp
push
pop
iret
pop
mov
fadds
or
jmp
and
lods
aam
sub
xor
mov
in
sbb
xchg
loope
jecxz
scas
mov
xor
fsts
mov
out
mov
int3
or
in
xor
inc
ds
rolb
dec
jmp
aaa
cmp
push
mov
ret
loop
lret
aam
out
jl
fmull
xchg
jbe
xor
adc
nop
pop
pop
lock
ds
lcall
push
jae
pusha
xchg
sub
mov
pop
jle
iret
lahf
hlt
xchg
fiadds
mov
adc
pusha
int
fwait
ja
js
push
test
jb
sbb
in
jl
sub
cli
and
lahf
rorl
stc
inc
and
inc
mov
fstpt
mov
push
fwait
mov
mov
insb
das
adc
test
cs
stos
in
or
out
adc
mov
jmp
mov
push
test
fwait
mov
adc
or
rorl
and
popa
inc
xchg
dec
or
lods
fstps
pop
rorl
push
mov
dec
inc
incb
sub
push
xor
mov
cltd
repnz
int
arpl
push
mov
push
fidivl
cmpsl
das
pop
pop
jl
adc
or
jg
mov
pop
cmp
xchg
das
loop
addr16
iret
sbb
pop
cmpsb
inc
push
and
loop
inc
lret
and
les
or
push
xchg
sbb
pop
cmpb
rorl
or
shll
add
loop
shlb
cmp
inc
fwait
test
add
cmp
sub
inc
leave
outsb
loope
cli
adc
mov
ret
mov
mov
decl
xor
fbstp
cli
outsl
or
jo
popf
push
mov
sbbl
fnstenv
out
into
stos
andl
js
loope
rclb
jle
ds
sbb
dec
mov
mov
mov
and
es
or
fidivs
sub
jle
cld
pop
mov
add
dec
imul
push
repz
add
inc
mov
xchg
xchg
adc
mov
iret
cli
mov
enter
adc
in
pop
xchg
push
stos
mov
es
lds
movsl
shll
jmp
mov
je
pop
cmpl
jmp
cs
pop
adc
sbb
out
ret
jle
dec
jns
in
icebp
pop
xor
push
mov
push
pop
ja
or
or
fdivrs
test
into
inc
sarb
push
cwtl
xchg
xor
ljmp
push
sub
cmp
cmc
iret
sbb
rorb
mov
cld
hlt
aad
es
mov
js
dec
dec
xchg
cmp
adc
jl
jl
pop
pop
mov
movsl
jl
sahf
xor
mov
jmp
ja
dec
dec
loopne
fdivl
les
or
cmp
lods
gs
sbb
je
adc
test
pop
popf
inc
lods
daa
jo
adc
pusha
imull
dec
fs
mov
cmpsb
jp
imul
test
scas
cld
data16
xor
sbb
sub
add
xor
mov
lahf
adc
rcr
mov
xor
cmp
iret
dec
xor
ljmp
jecxz
xorl
cmp
and
popf
aad
and
ret
inc
adc
and
mov
push
sbb
stos
dec
mov
sti
jne
cs
cld
add
mov
sbb
nop
mov
xchg
daa
jb
pop
sub
add
dec
mov
dec
xchg
pop
mov
sbb
cmp
movsb
xor
pop
jbe
pop
mov
push
loop
xchg
sbb
loopne
mov
imul
lret
xor
mov
sahf
or
iret
les
divb
jmp
subl
xchg
data16
hlt
xchg
sub
mov
mov
pop
aad
pop
or
lcall
cld
or
sub
cmc
in
mov
add
push
out
and
adc
lret
mov
lods
jo
xchg
or
dec
gs
repz
adc
lret
xchg
stc
push
rcrl
fnstenv
adc
shrl
cmp
mov
jae
adc
in
je
or
shrl
test
fistpl
punpckldq
or
nop
jecxz
dec
fsubrp
outsb
mov
mov
repnz
scas
add
xchg
js
pop
scas
in
mov
stos
pusha
adc
ror
add
mov
outsb
clc
add
out
fisttpl
and
mov
aaa
jg
imul
and
test
push
jmp
and
xor
lods
test
fistpll
push
popa
push
popa
in
add
daa
in
es
shrb
jo
nop
jmp
add
pop
sahf
sti
bound
mov
es
and
insb
cli
cmp
insl
sbb
dec
in
sub
shll
test
rol
jge
pop
xorl
mov
int3
adc
fldl
xlat
addl
jne
dec
and
rorl
scas
stc
pop
pop
mov
or
cmc
adc
sub
add
std
add
mov
inc
pop
cmpsl
std
xchg
pusha
das
int
push
jnp
xchg
lods
sub
ret
stos
jb
icebp
dec
les
insb
jnp
shrl
dec
imul
test
or
imul
clc
enter
arpl
push
dec
sbb
mov
testb
jns
roll
mul
dec
in
xor
lret
inc
pop
xchg
jb
fsubr
test
sub
gs
sub
andl
mov
pop
push
les
data16
adc
les
mov
fimull
loopne
test
fsubrs
pop
cld
imul
stos
push
call
jb
gs
cmp
dec
adcb
pop
mov
sbb
sub
dec
xor
push
sti
push
add
jbe
jge
dec
lods
jg
out
mov
jecxz
and
sbb
xchg
adc
fwait
mov
fstl
push
push
addb
jb
or
jnp
lcall
xor
push
sub
mov
loopne
push
imul
fldl
cli
or
daa
sbbl
cmp
cmpsb
das
icebp
jae
out
shr
rcl
mov
mov
jne
sahf
mov
dec
mov
and
sbb
pop
ss
jbe
xor
shlb
lods
dec
inc
test
mov
jbe
pushf
cmp
cmp
aam
push
pop
ja
ljmp
jns
jo
fsubl
cmp
sarl
call
in
int3
fdivrl
pop
mov
jno
pop
ja
scas
add
jns
les
mov
iret
call
insb
int3
lret
aaa
adc
es
test
neg
sbb
data16
inc
xlat
ss
mov
pushl
dec
lahf
xlat
and
fs
outsl
xorl
inc
jp
std
movsb
xlat
jns
int3
add
push
dec
or
subl
nop
das
adc
pop
pop
ja
push
push
sbb
cmp
xor
mov
mov
mov
ret
xchg
push
lcall
jmp
aaa
sbb
mov
in
test
repnz
insl
xchg
popa
adc
std
dec
push
sbb
mov
pop
je
adc
or
jle
sbb
mov
sbb
and
nop
jne
inc
and
ljmp
adcb
nop
xchg
inc
movsb
sahf
sub
sbb
xor
popf
lock
pop
das
popf
and
es
jge
adc
repz
leave
int
adc
push
push
outsb
inc
push
fnstcw
push
jae
or
or
movsb
mov
shrl
pop
repnz
mov
mov
dec
xor
mov
jecxz
ret
loop,pt
push
dec
dec
dec
dec
cwtl
aas
cltd
addr16
rcr
cmp
sbb
push
mov
mov
stos
les
push
dec
stos
rorl
inc
lods
fldcw
inc
pop
jne
and
inc
push
cmpsl
in
out
adc
add
cmp
scas
cmp
sub
pop
dec
add
dec
in
sbb
fwait
sub
mov
pushf
or
std
xchg
jmp
or
mov
lret
hlt
sbb
pop
scas
add
mov
iret
dec
leave
aas
addr16
push
dec
jle
sbb
sbb
and
jg
cmp
stos
movsl
iret
mov
popa
jnp
hlt
stos
jns
jmp
loope
push
icebp
mov
rcrb
push
jbe
inc
outsb
mov
cmpsb
xor
pop
adc
jge
push
inc
mov
mov
push
dec
sarb
mov
sbb
xor
mov
icebp
xor
and
es
jnp
repnz
adc
std
pushf
adcb
jb
dec
aam
cmc
aam
ret
stc
mov
movsl
mov
mov
insl
loope
das
sbb
aam
insb
cmp
and
cli
jbe
shrl
adcl
adc
xor
test
lods
and
test
mov
cltd
dec
lahf
inc
repnz
jmp
imul
xchg
popf
and
cmc
and
and
lret
into
int
ss
ret
jbe
xor
stos
lret
sbb
jno
add
pop
lds
xor
test
cmp
test
xbegin
int3
jecxz
sti
sub
outsl
loop
adc
dec
hlt
mov
ret
cmp
insl
sub
lcall
push
jb
imul
xor
clc
or
sti
int
or
dec
mov
xorl
jno
or
and
xchg
xchg
sbbl
int
and
out
mov
inc
test
mov
and
cmp
mov
mov
notb
sub
pop
stos
ds
cmc
loopne
jmp
mov
movsl
mov
cmp
shll
mov
cmpsb
or
cwtl
pop
xor
imulb
mov
jb
sub
hlt
mov
loopne
adc
iret
cltd
sbb
mov
sbb
mov
adc
cmpsl
repz
pop
fwait
push
fistps
mov
clc
lret
add
sub
or
push
push
es
mov
shl
dec
mov
fcomip
mov
or
inc
loop
in
mov
xchg
imul
or
shll
stc
cmp
rorb
mov
inc
push
cwtl
ret
and
adc
addl
push
pop
mov
cmp
jp
inc
out
push
xchg
lret
sub
cmp
inc
fbld
les
movsb
push
shlb
loope
cltd
imul
repz
in
mov
mov
sbb
adc
cmpb
mov
adc
fsts
pusha
scas
ficompl
or
push
jne
cmp
fisttpl
xchg
mov
and
daa
add
lods
lods
iret
mov
je
push
xchg
nop
jb
movsl
cmp
and
scas
decl
push
mov
lea
popa
clc
add
jg
fstl
repz
or
jb
ljmp
push
mov
add
aas
fimuls
xchg
and
pop
jmp
rolb
data16
cld
push
xchg
push
shrb
inc
xor
mov
sub
lock
inc
sbb
stc
pusha
sub
scas
pushl
mov
arpl
xor
add
aam
cltd
stos
inc
or
movsb
nop
sbbb
pop
lret
iret
enter
push
xchg
mov
scas
cltd
pop
fwait
mov
inc
arpl
aaa
push
bound
insl
push
insl
mov
mov
mov
orl
dec
fists
jge
out
mov
sahf
push
pop
es
adc
loop
jg
add
repz
push
sub
rol
pop
push
enter
sub
inc
xlat
movhlps
pop
cltd
sub
cmc
cmp
fisttps
mov
cmc
dec
dec
fsubs
loopne
cmpsl
pop
push
sti
mov
inc
gs
fadds
sub
adc
mov
push
cmc
leave
mov
sahf
and
add
inc
adc
out
cli
push
fldl
js
fcmovnb
dec
jmp
loop
andl
jns
jb
clc
cmpsl
inc
push
and
jp
jg
into
movsb
cld
inc
pop
add
xchg
xchg
dec
dec
lret
pushl
ja
xchg
mov
sub
jb
loop
cmpsl
xchg
sub
sbb
mov
arpl
pop
shlb
jle
and
or
xor
ja
int3
and
repz
aam
sbb
or
nop
pop
jg
cmpsb
mov
dec
pop
hlt
mov
sub
cmc
dec
leave
and
push
scas
add
sub
sbb
aas
clc
fiadds
push
mov
inc
xchg
add
std
incl
mov
scas
inc
loopne
pop
xchg
outsl
loopne
mov
mov
shll
push
imul
sahf
xor
cmp
push
lcall
in
out
xlat
lahf
or
add
ss
inc
adc
or
cmp
and
pop
cmpsb
inc
push
xchg
mov
addr16
imul
dec
fidivl
leave
mov
aad
sarb
inc
mov
mov
or
sbb
enter
test
inc
jo
aas
jne
push
mov
shlb
ja
jp
shr
pushl
orb
loope
cltd
inc
popa
adc
push
subb
pushf
pop
sub
stc
dec
out
out
and
and
xchg
ja
sub
inc
lods
mov
mov
mov
jo
jne
stos
xchg
mov
add
stos
aad
aam
jbe
clc
xor
fmul
cltd
sbb
ljmp
mov
xchg
mov
lret
fld
mov
hlt
repnz
mov
outsl
xchg
movsl
xor
ret
add
and
or
cmpb
jae
xchg
fimuls
inc
pop
pop
inc
xor
pop
sub
adc
cmp
jge
and
jae
movsb
addr16
outsb
daa
and
sbb
fdivs
rorl
pop
mov
cmpsb
cld
je
sub
stos
dec
test
jge
push
sub
sahf
xor
mov
push
fwait
test
xor
fdivrs
jns
pop
jne
int
sbb
sbb
shll
push
push
xchg
adc
inc
xchg
loope
cmp
int3
push
sbb
add
shl
repz
out
mov
add
xlat
add
and
jae
jg
fldenv
fiadds
int
xchg
dec
mov
aam
out
scas
call
or
daa
out
jecxz
inc
in
cld
xor
mov
fildll
leave
ret
insb
and
ret
je
lcall
dec
in
fdivrs
movsl
popf
xor
or
mov
clc
pop
xor
lods
mov
andl
popa
push
or
push
es
sbb
or
mulb
xor
ljmp
xor
fwait
ljmp
ds
cmp
cmp
je
or
xor
push
iret
in
into
push
rclb
sbb
fcomip
icebp
outsl
push
in
dec
loop
cmp
pop
jae
cltd
pop
and
mov
xchg
adc
scas
call
cmpsb
or
dec
push
cld
fcoml
fdivrp
stc
mov
add
gs
and
or
je
jns
lret
test
push
mov
or
test
int3
inc
pop
negb
jmp
cmp
jns
mov
test
pushf
sbb
mov
mov
aam
rol
adc
mov
pop
in
scas
xchg
mov
ret
pop
lahf
add
jge
dec
and
mov
insb
lahf
sub
stos
inc
out
adc
cmpl
mov
jno
scas
sbb
dec
mov
dec
data16
push
repnz
das
mov
mov
pop
call
mov
insl
icebp
inc
pop
adc
push
jne
push
mov
adc
dec
cmp
aad
sarl
dec
fmulp
xchg
sarb
gs
fcom
jne
mov
test
mov
fldenv
pop
and
stos
push
jl
les
or
cmp
test
shll
lcall
fwait
mov
adc
inc
sarl
push
dec
popa
popl
sbb
xchg
xor
repz
test
sbb
pop
cmp
jecxz
ret
and
pop
inc
dec
cmp
push
xchg
add
shlb
nop
rcll
lret
jno
js
cmp
sub
or
daa
sbbl
dec
cmc
mov
and
shll
push
lahf
repz
xchg
outsl
repz
enter
mov
mov
sub
fisttpll
pop
mov
addr16
inc
leave
and
xchg
cmpsl
push
inc
sub
jmp
jl
stc
add
fisttpl
add
nop
and
add
int3
imul
arpl
pusha
imul
xor
mov
mov
shll
dec
enter
push
cmp
pop
add
dec
inc
mov
inc
cwtl
lahf
xor
int3
add
shlb
pop
lock
jecxz
arpl
test
cld
idivl
fwait
mov
test
xchg
or
test
adc
xchg
lock
xor
jle
lcall
out
mov
outsb
dec
push
sbb
add
and
xchg
cwtl
push
bound
and
cmpsb
rcr
fsubs
xor
push
fiadds
xor
xor
sbb
in
pop
and
fwait
xor
inc
sbb
pop
repz
mov
xchg
popa
add
pop
pop
movsb
pop
pop
into
imul
out
xchg
mov
dec
lahf
outsl
and
jl
dec
xchg
pop
icebp
into
nop
lock
pop
repnz
cmp
jl
cs
fucom
dec
setns
mov
adc
pop
inc
std
arpl
adc
xor
dec
jb
out
cld
jle
jnp
xor
inc
mov
cmp
fsubl
mov
fnsave
int3
xor
inc
dec
std
out
mov
dec
movsl
sub
cwtl
cmpsl
inc
sub
movsl
sti
adc
mov
pop
lods
lahf
fisttps
pop
and
subb
nop
loopne
sbb
fwait
mov
mov
cmp
pop
xor
adc
rolb
ds
mov
insl
inc
dec
ret
fs
sbb
push
sub
adcb
cmp
cltd
pop
popa
xlat
and
mov
filds
or
add
or
pushf
cmc
loop
daa
cli
out
cmpsl
push
xor
cmp
push
inc
sahf
cmpsb
cmp
add
vcvtdq2ps
mov
hlt
in
loope
adcb
sbb
sub
bound
xchg
dec
lcall
mov
ss
add
and
in
add
dec
aam
jb
loopne
fstpl
adc
dec
jecxz
xlat
or
mov
loopne
ss
movsl
fisubrs
lret
mov
pop
mov
leave
push
xchg
inc
jecxz
cmp
enter
popa
xor
jno
push
xchg
sahf
push
clc
mov
push
lret
push
push
dec
movsb
das
rclb
cmp
sub
sub
insb
pop
out
stos
int
xor
mov
push
jge
out
or
cmp
clc
stos
jno
gs
repz
stos
stos
or
imul
mov
shr
gs
adc
inc
stc
shrl
cmpsb
js
pop
fists
mov
leave
popf
hlt
lea
sbb
notl
jmp
or
fnstcw
fsts
cmpsl
hlt
inc
in
cli
adc
pop
dec
mov
int3
das
test
add
lods
aaa
jnp
cmp
xor
lret
inc
lcall
push
lea
aaa
push
shll
jne
xchg
sti
xchg
das
xor
cmovns
mov
dec
orb
nop
push
jecxz
dec
imul
in
inc
stos
jmp
push
mov
sub
das
and
bound
xchg
add
dec
cmpsb
ret
int3
and
add
ljmp
jno
add
adc
js
lods
mov
movsb
push
and
lret
bound
pop
xchg
pop
aaa
out
in
push
repnz
in
lret
divl
sbb
lcall
push
out
inc
sbb
inc
adc
mov
or
popf
mov
in
xor
pop
gs
ja
mov
scas
cltd
xor
std
pop
mov
mov
adc
aaa
cltd
je
inc
jne
mov
sti
popl
mov
inc
idiv
mull
mov
dec
imul
cmpsb
cmp
gs
adc
insb
out
dec
cmc
xchg
pop
daa
push
mov
cmp
cmp
popa
mov
leave
loop
inc
int
call
lock
mov
cmp
push
std
in
sahf
xor
in
or
and
mov
outsb
movsl
sti
cmp
in
sbb
sbb
pop
xor
pop
gs
and
hlt
fdivp
sub
push
out
dec
fsub
cli
insb
ss
test
add
test
push
popf
cmp
rcrb
pop
and
push
mov
push
xchg
cld
xor
imul
sbb
ljmp
sub
sbb
mov
insl
loopne
sbbb
mov
arpl
aaa
mov
fs
mov
daa
inc
lret
add
ds
ja
push
inc
or
js
xchg
aad
iret
push
mov
cli
cmp
jecxz
xor
inc
jg
xchg
jmp
mov
rorl
aaa
int
mov
std
call
test
ret
ds
xor
in
cmpsl
dec
call
xor
leave
dec
enter
sub
xor
dec
jbe
jmp
loope
mov
lds
mov
or
pop
sub
jb
lea
inc
fnstsw
andb
lcall
lahf
js
scas
inc
inc
lods
lahf
and
leave
xor
sbb
xchg
dec
mov
jbe
mov
and
aaa
push
int3
inc
pop
enter
or
jmp
pop
jne
sti
ljmp
rcrl
add
mov
ds
sbb
lods
push
mov
fidivs
jae
arpl
ret
shlb
hlt
pushf
add
jnp
pop
rorb
mov
and
arpl
xchg
dec
sbb
jmp
inc
imul
add
stc
inc
mov
or
es
mulb
test
mov
ficoms
movsl
sub
lods
mov
sub
mov
sbbb
insl
hlt
shlb
or
repz
popf
xor
mov
mov
loopne
rorl
pop
adcl
pop
into
cmpsb
cmp
push
cmp
js
jne
lea
lock
mov
repz
adc
repnz
and
and
or
pop
hlt
jmp
add
cmp
lret
add
pop
push
test
mov
and
xor
mov
inc
inc
lods
mov
sbb
pop
hlt
push
lods
jo
mov
pop
rolw
aam
repnz
insb
mov
mov
loopne
mov
int
push
int3
xchg
jno
sub
scas
test
or
or
fbld
sub
sti
repz
test
iret
xchg
mov
popf
negl
jmp
mov
sbb
mov
xchg
popf
jo
push
pop
xchg
pop
lcall
and
xchg
pop
jg
dec
scas
das
ja
xchg
inc
fisttpll
mov
and
xor
jns
inc
xor
scas
pop
loop
xlat
push
and
xchg
bound
pop
shrb
cmp
lahf
incb
mov
or
pop
mov
sub
sub
imul
mov
mov
test
push
mov
pop
push
mov
push
cmp
scas
pop
fnsave
sbb
mov
rcrl
xor
add
pop
lds
mov
lahf
xor
cmpsl
stc
jbe
repnz
dec
in
cli
xchg
lret
in
dec
lock
mov
test
filds
loope
rcll
int3
push
sbb
fs
in
mov
fimull
pop
jl
mov
notl
or
dec
and
xchg
stc
pop
pandn
push
jbe
push
mov
stos
push
es
pop
push
test
scas
cvtps2pd
gs
pop
imul
scas
iret
test
push
flds
into
jne
mov
jno
dec
iret
aam
in
pop
jns
push
jb
sti
xchg
fstl
sbb
jb
add
ret
dec
pop
insb
sahf
pop
and
lcall
pop
jne
xchg
ds
lret
shll
lock
ret
dec
ret
pop
cmp
mov
repnz
mov
daa
lcall
mov
sbb
nop
dec
xchg
xchg
mov
mov
daa
or
lahf
mov
mov
in
mov
ljmp
and
ret
test
dec
lock
xchg
flds
test
movsb
jno
loopne
repnz
scas
inc
call
int
push
imul
cld
jno
jge
stc
rolb
xchg
add
iret
fisttpl
cmp
sub
les
sti
addl
adc
faddp
add
mov
fsts
mov
xchg
or
pushf
xor
into
cwtl
xchg
mov
sub
mov
fstpl
cmpsl
imul
rcrl
scas
fs
aad
ss
adc
push
mov
mov
mov
sub
pop
in
test
mov
inc
imul
int
cs
sbb
inc
jecxz
push
movsb
out
jle
outsb
test
mov
inc
pop
insl
lods
jne
or
push
inc
leave
std
stos
hlt
test
dec
xor
mov
movsb
and
shll
test
mov
in
movsb
mov
sub
xchg
pop
dec
dec
or
daa
es
push
sahf
lret
aas
push
and
pop
pushf
scas
lea
mov
xor
add
jnp
jns
cmc
and
sti
xchg
dec
icebp
or
fisttps
sbb
jge
shrl
jnp
sub
dec
loope
sub
jle
cmp
push
insl
movsb
pop
pop
lods
imul
nop
jno
mov
cltd
les
pop
xor
cmc
push
out
fdivrp
ljmp
dec
adc
fstl
inc
lret
and
sahf
sbb
pop
adc
inc
jnp
add
xchg
je
push
push
ds
jge
scas
scas
add
cmpsb
jno
xor
or
sbbb
arpl
jno
and
ja
mov
push
pop
mov
and
xchg
pusha
lret
adcl
dec
out
mov
cmp
pop
clc
xchg
clc
movb
add
das
fsubrl
or
push
imul
shll
dec
add
mov
test
fadds
enter
inc
mov
push
jbe
xchg
push
jg
xor
inc
push
negl
iret
mov
or
mov
loope
popa
icebp
loope
xchg
push
int
mov
cmc
sbb
es
dec
push
xchg
ds
jl
inc
push
push
xchg
mov
mov
jge
mov
clc
add
jl
cmp
push
pop
xor
jle
xchg
xchg
jno
mov
adcb
mov
fucomip
pop
sbb
cmp
inc
cli
xlat
cwtl
mov
xchg
jo
pop
stos
jg
fsubs
ret
push
jge
and
and
sbbb
jl
sbb
fcmovbe
shlb
jmp
jl
add
shl
pop
pop
bound
sub
xchg
jg
movb
xchg
adc
imul
pop
arpl
ficoml
loopne
add
mov
cmp
js
pop
outsl
loop
mov
sbbl
loope
jo
lds
xchg
jae
jecxz
push
dec
cmp
xor
cltd
push
mov
dec
inc
bound
xchg
adc
push
mov
push
mov
inc
mov
mov
test
imul
mov
mul
mov
mov
test
fidivs
add
push
movsl
out
adc
loopne
xor
mov
stos
mov
sub
xchg
or
pop
cmp
push
pop
mov
fldcw
ret
ret
test
lea
leave
or
clc
cmpsl
xlat
push
je
xchg
imulb
hlt
rclb
mov
in
cmpsl
pop
sahf
repnz
leave
xchg
idivl
jle
scas
sbb
cmp
dec
mov
aas
jl
mov
fwait
mov
lret
lcall
sahf
gs
mov
rcr
divb
shll
pop
mov
or
cmpsl
dec
shlb
inc
ja
mov
test
pusha
ficoml
jmp
out
mov
sbb
xchg
mov
cmpsl
or
dec
mov
rcrl
mov
icebp
call
xlat
xor
mov
ja
jmp
xor
ss
pop
stos
push
mov
add
popf
xor
mov
mov
push
sub
push
jmp
nop
inc
jo
ja
sub
cmpsb
lret
mull
dec
mov
jb
xor
shrl
icebp
pop
imul
sbb
mov
mov
dec
lret
lret
jge
xor
out
mov
loope
clc
push
and
inc
xchg
fnstenv
inc
add
shlb
jae
cmp
sti
das
mov
cmpsb
cltd
sub
xchg
fbld
push
fcomps
leave
push
std
or
inc
fxch
mov
jge
iret
dec
add
leave
fidivl
loopne
jecxz
sub
cmpsl
sbb
dec
icebp
imul
add
adc
xchg
xor
lds
jmp
cs
dec
push
push
add
xorl
adcl
repnz
pop
sub
fnstsw
pop
jo
adc
rclb
jg
add
jge
or
and
dec
stos
outsb
cmp
mov
ret
xchg
test
or
jne
in
into
xchg
stc
mov
dec
in
es
sahf
mov
inc
pusha
popa
ja
inc
jne
mov
push
adc
mov
insb
loope
xchg
sar
jnp
loopne
sbb
pop
mov
psubw
pushf
fisubs
inc
cli
gs
cmp
mov
loopne
sub
inc
lcall
xchg
iret
mov
shrd
out
cmp
push
pop
cmpsl
jp
and
cmp
negb
sbb
les
xor
repz
nop
test
lret
sbb
shlb
inc
aad
cs
mov
fisubrs
lret
rorb
mov
cmc
in
scas
cmpsl
xorb
fcomi
fsubr
sub
jg
lock
cmpsb
mov
rclb
lods
imul
scas
cmp
in
mov
outsb
scas
jmp
dec
mov
push
mov
test
mov
loop
cli
enter
push
data16
lods
xchg
aas
add
les
mov
repz
mov
shll
insl
push
jnp
and
add
arpl
cmp
lret
sahf
xor
xor
inc
or
in
pushf
push
mov
mov
xor
test
decb
jo
popa
lods
rcrb
insb
add
push
xchg
xchg
pop
pop
insb
sbb
fcomps
cs
movups
clc
adc
fstpl
das
pop
jne
lock
hlt
xchg
add
pop
les
pop
push
bnd
cli
lds
insl
or
cs
sub
adc
cmp
sub
aas
shl
aam
lods
test
cmp
inc
push
push
mov
rcr
test
jmp
dec
and
push
inc
cld
arpl
test
mov
cmp
test
sahf
pop
jle
cli
es
cltd
cmpl
push
xor
test
push
push
pop
mov
jne
cli
jne
and
addr16
add
ss
add
rolb
in
repnz
jno
out
push
mov
in
sbb
xchg
adc
shll
pop
in
inc
fwait
xor
pop
lahf
out
adc
mov
xor
push
mov
das
mov
shll
mov
inc
or
or
jnp
decl
sub
xchg
in
call
in
stos
add
fisttpll
inc
mov
js
popa
jg
jge
pop
ja
mov
and
or
inc
add
xchg
push
out
jg
push
xchg
addr16
push
out
xor
lret
nop
cmp
rorl
push
push
mov
fs
add
push
mov
and
std
xor
mov
movsl
aad
mov
cld
out
or
fxtract
mov
cmpsb
cli
jge
scas
lret
sti
iret
jo
or
insl
adc
cmpsl
xor
push
cmp
jmp
dec
adc
xor
push
mov
push
aad
mov
cmp
cwtl
jae
inc
int3
clc
sti
adc
out
lret
data16
jb
add
fdivrl
outsb
jp
cltd
jnp
out
dec
jle
sahf
lret
cmpsl
fisttpll
xchg
stos
cmp
fadds
or
imul
or
bound
repnz
aam
push
sbb
inc
or
mov
stos
call
outsl
cmc
sbb
aam
inc
push
jae
or
sbb
lds
jmp
insl
scas
xchg
ret
dec
or
dec
lock
mov
pop
shlb
cmp
jl
arpl
nop
outsb
cmc
in
js
jns
push
lea
pop
in
xchg
adc
add
mov
mov
jmp
in
inc
or
mulb
sti
adcl
pop
mov
xor
stos
jo
inc
dec
stc
cli
fldt
jecxz
push
cmp
jmp
mov
add
hlt
push
jnp
jo
cmc
addr16
jle
pop
enter
bnd
ss
out
loop
pop
aam
test
popf
dec
cltd
inc
dec
dec
sbb
xchg
aas
int
dec
fiadds
out
daa
lahf
sub
stos
daa
scas
popf
popf
adc
ljmp
mov
and
sbb
mov
call
cmp
ds
sub
testb
into
lret
call
pop
jbe
sbb
andl
fwait
xchg
sbb
mov
movsl
xchg
push
fsts
mov
or
test
push
aam
cmp
addb
je
shl
inc
pop
jbe
ficoms
test
sub
mov
or
mov
rolb
cmp
sbbl
push
out
cmp
cmp
cmp
cmc
and
aas
pop
mov
xchg
aam
xchg
mov
mov
jmp
jne
mov
pop
js
add
rol
ret
ljmp
ljmp
adc
dec
xchg
daa
jle
pop
repz
mov
inc
and
dec
out
xor
and
js
ret
xchg
shlb
repz
add
nop
mov
sub
cltd
jo
inc
repnz
test
dec
push
jecxz
xchg
and
mov
arpl
rcrb
jmp
fdivl
xlat
or
pop
nop
movsl
test
int
mov
xchg
cmpsl
dec
adc
mov
movsl
sbb
and
sbb
sub
out
cmp
dec
or
in
and
mov
shlb
test
sbb
cmp
arpl
repnz
dec
add
shrl
jno
fdiv
fidivs
cmpl
out
sahf
mov
enter
or
loop
xchg
ret
dec
xor
loop
enter
mov
pop
shl
lods
popf
rcrl
int
jge
pusha
mov
outsb
add
je
jge
or
add
xor
es
inc
inc
test
in
mov
fisttpll
sub
jmp
ss
cmp
or
fsubrs
imul
shl
insl
or
addps
dec
fwait
cmp
dec
add
sahf
mov
sbb
les
add
sub
pop
jne
dec
fs
mov
cwtl
fnstsw
xchg
fisttpll
test
test
or
xchg
add
fisttpll
mov
divb
test
cmp
icebp
mov
das
aaa
sub
push
mov
popa
jecxz
dec
dec
ljmp
xchg
cld
daa
xorb
sbb
push
mov
insl
popa
sub
aam
or
iret
retw
jnp
mov
test
mov
clc
lds
pop
cmp
add
pop
pop
or
xchg
adcb
andb
js
ret
ficoms
pushf
out
lcall
fsubl
fnstenv
dec
pop
xchg
lods
and
lods
fwait
sbb
jae
xor
xchg
fs
stc
or
flds
sub
and
test
divb
pop
lods
pop
jge
jns
xor
out
inc
fldcw
cld
cmpsl
into
adc
jbe
cltd
pusha
mov
repnz
inc
and
popf
xchg
out
adc
adc
sbb
aam
cmp
cmp
and
stos
push
call
out
dec
xor
stos
out
adc
push
stos
cmp
push
inc
into
and
mov
test
fs
leave
adc
out
ljmp
xchg
ljmp
push
cmp
jge
mov
adc
movsl
clc
test
stos
out
mov
jg
inc
mov
dec
fstps
pop
mov
jge
call
fcoms
stos
insb
inc
mov
sub
add
lret
cmp
push
cmp
rcr
insb
jle
xor
inc
ljmp
xor
outsl
mov
xchg
push
test
or
inc
mov
je
cmp
dec
cmpsb
ljmp
inc
pop
insl
in
pop
cmp
lret
mov
push
stos
mov
sbb
dec
pop
xor
lea
imul
lds
inc
mov
pop
pop
ja
sub
jg
mov
sbb
out
in
cmp
xchg
lods
imul
dec
je
clc
jmp
jb
or
fnstsw
pop
bound
mov
mov
pop
jl
xchg
jg
jp
or
push
insl
pushf
movsb
les
adc
popf
sbbb
sub
lock
jecxz
int
sub
xchg
dec
test
mov
mov
fisubrl
inc
fiaddl
fsubl
or
test
adc
ss
call
ret
xor
push
lcall
sbb
inc
mov
dec
xor
inc
in
imul
call
pand
or
ret
mov
jne
inc
lds
pop
dec
mov
movsb
inc
sahf
pop
dec
cli
sar
xchg
inc
fimull
mov
popa
jl
idivb
sub
jns
lret
pusha
in
clc
popa
data16
inc
cmp
push
repz
mov
je
int
or
bound
stc
out
add
sub
lret
cld
stos
sub
sahf
loopne
sbb
cmp
test
xchg
outsl
mov
jmp
out
inc
rcl
out
mov
shr
jne
shrl
adc
mov
out
fdiv
pop
pop
ds
lahf
lods
divb
push
in
fcomip
adc
and
inc
ffree
sbb
sub
shld
cmpsb
cmp
cmpsb
cmp
ja
cld
or
sbb
stc
jle
cmpsb
add
cmp
fsts
sub
rorb
je
pop
xorb
push
aad
mov
jle
inc
adc
add
in
cmp
testl
int3
cmp
loop
or
cmp
subl
dec
data16
in
push
testb
sub
divl
push
or
inc
pusha
divl
lock
mov
adc
scas
mov
xchg
fwait
je
movsl
mov
in
mov
mov
push
cld
sti
nop
outsb
push
xor
sbb
mov
jmp
xor
inc
mov
jno
call
add
inc
das
or
pusha
out
fists
loop
push
xchg
mov
sub
adc
pop
jno
jmp
xor
test
sbb
sbb
xor
les
add
jge
gs
xchg
repnz
pop
sub
in
pushf
push
or
lcall
cltd
add
add
rorl
push
mov
les
dec
addr16
sti
clc
mov
fsubl
cmpsl
out
xor
les
out
inc
shll
push
daa
push
cwtl
pop
inc
dec
jmp
andb
adc
and
out
loop
daa
dec
in
inc
icebp
pop
fidivrs
add
and
scas
xchg
nop
xchg
mov
data16
test
xchg
pop
lds
xchg
dec
push
mov
xchg
mov
loopne
cmp
test
sbb
add
loop
pop
xor
shrb
adc
push
scas
addr16
mov
ss
jg
aas
push
jecxz
jbe
mov
ret
stc
xchg
sub
jecxz
ret
dec
sub
data16
jmp
mov
sbb
pushf
jp
sti
xchg
ror
xchg
add
sbb
cmpb
mov
and
lods
pop
ror
shll
fidivl
ret
gs
and
stc
aaa
movsb
imul
test
pop
subl
xchg
bound
xor
mov
rclb
pop
push
inc
fsubs
mov
fimull
mov
dec
pop
sub
xchg
adc
ja
lret
test
mov
mov
push
shrl
scas
mov
xor
mov
fmuls
jne
int
jnp
pop
and
or
cmp
jl
fwait
sti
cld
popf
mov
mov
sahf
xchg
into
cmp
dec
pop
fcoml
outsl
or
fsub
loop
fidivl
lcall
loopne
mov
jmp
inc
sbb
inc
aad
lcall
jne
jns
cmp
sbb
adc
negb
adc
loope
mov
cmp
aad
fs
lock
mov
adc
test
sbb
stos
out
fcompl
fdivr
and
dec
fdivl
fsubr
ljmp
shll
and
pop
sahf
rcl
xchg
mov
movsb
jle
inc
int3
lods
push
mov
fldl
sbb
adc
add
ja
sub
and
xchg
or
in
cltd
test
push
es
mov
iret
push
dec
iret
push
addr16
push
icebp
outsl
pushf
sub
and
dec
insl
jecxz
ret
shlb
or
in
cmp
fistpll
cmc
cmp
pusha
outsl
add
pushf
mov
into
incb
cmp
xchg
mov
in
sub
pushf
add
adc
out
loopne
jbe
sub
rcl
cmpsl
in
mov
addr16
xchg
out
imul
mov
arpl
sub
sbb
dec
loope
pop
icebp
pusha
push
pushf
cmp
int
es
and
pop
xor
push
adc
rcrl
mov
out
lahf
mov
push
mov
test
mov
and
pusha
jle
popa
stos
sbb
pushf
push
gs
push
cld
inc
std
out
leave
xchg
test
pop
call
rcrb
lock
xor
fwait
sti
in
stos
pop
stos
cmovle
inc
fsub
test
dec
dec
sub
push
jns,pn
mov
jne
push
loop
leave
idivb
jo
pushf
xor
enter
adc
shll
dec
popa
inc
lret
lret
xchg
adc
andl
js
loope
sub
insb
pushl
and
pop
push
int
mov
fidivrl
dec
fadds
lahf
call
cld
ljmp
mov
or
daa
in
push
outsb
dec
push
test
add
stc
cld
mov
jge
sub
push
mov
lea
or
or
jg
and
cwtl
les
sti
fwait
jmp
testl
mov
jle
int3
fmull
lea
ljmp
or
inc
mov
mov
or
cmp
leave
out
push
jg
into
or
icebp
insb
dec
push
fsubp
pop
mov
insl
jge
or
pushf
pop
mov
push
loopne
mov
movsb
jecxz
dec
xchg
jmp
bound
cmp
sub
call
mov
xchg
jne
in
std
dec
jb
cs
mov
jp
push
cli
icebp
adc
xor
mov
and
test
fnsave
jle
mulb
je
pop
sbb
xchg
push
jb
leave
stos
adc
cmp
jp
pushf
fdivr
dec
fmul
iret
gs
xor
das
fwait
adc
je
gs
sub
jns
mov
add
xchg
xchg
adc
pop
jg
ljmp
sarl
mov
jno
mov
and
movsl
pop
pushf
stos
jnp
or
popf
xor
inc
dec
fwait
test
xor
jbe
nop
in
or
incb
jg
push
push
xor
outsl
sub
cltd
mov
push
fwait
popw
lcall
inc
xchg
mov
add
mov
push
jge
stc
daa
jb
fs
nop
mov
inc
aam
mov
adc
data16
outsl
mov
mov
mov
ret
push
push
mull
inc
mov
in
ficomps
cmp
dec
or
test
inc
test
pop
inc
test
cli
sbbb
lahf
mov
rcll
sbb
pushw
lahf
and
mov
inc
jb
cmp
and
dec
mov
and
je
push
sbb
dec
lcall
and
jmp
inc
dec
frstor
push
ljmp
es
lea
sarb
jo
imul
sbbl
stos
inc
adc
dec
or
push
lea
push
push
mov
bound
int3
inc
xor
js
rorb
in
xchg
cmp
js
pushf
popa
cmpsl
xchg
inc
popa
hlt
ja
mov
sbb
ljmp
test
mov
sub
inc
cwtl
loope
out
stos
pop
adc
mov
xchg
sbb
push
int
in
push
bound
dec
sbb
or
jl
es
cmpsl
arpl
out
xor
mov
xor
in
sbb
cmp
sub
sbb
icebp
cmp
out
push
cmpsb
jg
and
or
fidivrs
rcrl
in
push
icebp
popa
dec
and
rolb
hlt
loopne
test
sub
out
inc
or
mov
gs
pusha
sti
or
scas
xor
cmp
shrl
inc
add
shr
xchg
or
shl
ret
mov
jg
xor
ret
pushf
cli
imul
jbe
mov
sub
and
and
stos
inc
test
jbe
dec
sub
popa
add
or
xchg
xchg
mov
or
lds
out
outsl
ret
ret
pop
es
gs
mov
ja
test
stos
sub
mov
aas
out
xchg
out
push
cmp
pop
imul
mov
sbb
add
std
jno
hlt
push
xor
fwait
jge
sub
scas
divb
push
push
insl
pushf
xor
xor
jne
and
inc
jno
stos
insb
jmp
pop
pop
cmp
sahf
loope
cmc
pop
sbb
into
int
fnstsw
push
xor
aad
loop
out
shrb
add
ds
aam
in
notl
jp
in
imul
pop
push
jge
inc
scas
dec
pop
loopne
in
pushl
lahf
sbb
mov
sub
sbb
jne
psadbw
outsb
popa
mov
adc
jmp
stc
lahf
mov
pop
cwtl
in
in
aad
ljmp
sbb
xchg
sub
xchg
jo
stos
dec
popl
xchg
gs
out
jmp
inc
xor
aad
jae
xchg
cmp
subl
in
xchg
jb
cmpsl
push
aad
jg
dec
add
lods
ljmp
pushf
cmpb
pop
or
xor
sahf
sbb
fcomip
lahf
pop
not
xchg
shld
dec
add
movsl
mov
aam
cmp
mov
pop
out
rorb
fnstsw
lahf
xchg
inc
fistpll
lock
cs
pop
pusha
jnp
les
out
xlat
adc
insb
sahf
or
dec
xchg
mov
psrad
clc
aaa
adc
rolb
and
or
mov
in
xchg
jge
ja
stc
iret
imul
push
movsl
mov
mov
mov
cwtl
push
std
into
popf
loope
push
mov
test
jg
insb
in
xchg
test
push
hlt
or
dec
sbb
pop
les
stos
in
sbbl
das
enter
cmp
aad
add
ret
mov
int
cmp
outsb
mov
es
jmp
iret
adc
push
push
roll
pop
outsb
ret
or
cmp
push
out
out
inc
scas
mov
cmp
ljmp
ret
jbe
cld
push
outsb
adc
xchg
pop
dec
sbb
mov
xchg
mov
jne
ss
cmp
adcb
mov
mov
push
jnp
sub
adc
movsb
pop
pop
outsl
mov
or
xor
jp
popf
and
das
sahf
push
sbb
push
pop
popa
xchg
adc
outsb
rcrb
pop
in
adc
test
xor
std
jmp
repz
and
stc
cwtl
testb
lea
dec
inc
cmp
lret
pop
popf
cmp
push
cmc
out
pop
mov
pop
mov
xor
js
mov
dec
pop
fstp
in
add
add
adc
mov
lds
ret
dec
loope
mov
xor
mov
push
out
and
lcall
adc
mov
fwait
and
cmp
test
mov
fdivl
xchg
sub
stos
in
nop
push
pop
int
cmc
or
lcall
je
adc
lret
insl
pop
dec
rcl
mov
mov
aam
jge
push
inc
fistl
push
mov
mov
sahf
xchg
in
daa
mov
out
sbb
insb
pop
aas
fsubs
sub
push
sub
jl
and
sbb
or
push
movsb
bnd
mov
xchg
jno
jae
fldenv
lret
cld
push
jne
pop
adc
and
jg
shll
xchg
jp
sbb
sub
mov
enter
fistpll
loop
pop
data16
mov
das
push
adc
loop
push
inc
fiaddl
popa
xor
in
pop
push
cwtl
ror
dec
dec
jae
pushf
mov
cmp
lods
cwtl
inc
inc
fldenv
xor
inc
mov
test
fidivs
mov
fidivl
pushf
mov
or
jnp
push
imul
xlat
dec
fistpl
loopne
scas
call
mov
xorb
repz
sub
and
adc
mov
fistpll
hlt
lcall
xchg
stc
xchg
test
rorb
sahf
and
xor
and
jnp
dec
and
cmpsl
inc
pusha
iret
int3
arpl
and
popa
fnstenv
orb
and
inc
arpl
scas
cmp
xor
pop
jle
cmc
clc
jge
mov
inc
inc
adc
mov
cmpb
add
mov
dec
cltd
or
sbb
negb
jge
cltd
add
movsb
mov
push
pusha
aas
out
dec
jno
dec
int3
aaa
mov
dec
rolb
pop
adc
pop
cmp
lea
in
sub
imul
outsl
push
xor
fsub
pop
stc
cld
jl
push
imul
enter
cmovb
xchg
pop
loop
adc
inc
mov
mov
mov
dec
flds
cmpl
repz
addb
pop
mov
fisubs
sbb
aas
test
lret
int3
mov
aas
xchg
pop
test
push
mov
pop
or
xchg
jle
inc
arpl
push
mov
sbbl
pop
fsubrs
cmp
cmp
lea
cmp
add
cmp
xlat
mov
xchg
test
fimuls
cs
lahf
rcrb
xchg
xchg
leave
into
lcall
popa
sbb
mov
sub
icebp
enter
negl
daa
std
imul
addr16
push
lods
mov
insl
mov
or
cmp
lea
loopne
mov
scas
inc
out
mov
divl
sbb
loop
or
sbb
pop
sub
fsubs
pop
xor
scas
mov
pop
divl
push
test
daa
out
lret
addr16
test
mov
lds
dec
popa
pop
movsl
mov
mov
insl
sub
sbb
push
pop
xor
push
lds
mov
push
inc
and
mov
mov
loopne
and
jg
dec
test
jp
xchg
and
mov
sbb
repnz
sub
and
clc
movsl
jae
popa
ss
rcr
push
adc
adc
jo
aam
into
shl
popa
daa
movsb
mov
xchg
add
jne
clc
fidivrs
pop
mov
adc
aaa
nop
cwtl
sbb
aad
call
push
and
push
pop
hlt
out
cmpsb
adc
inc
mov
adc
ja
add
clts
jae
cmp
add
sub
movsl
inc
mov
sbb
dec
sbb
insb
lcall
cmp
cmp
fcompl
sbbb
subl
cmp
sbb
mov
cltd
out
add
test
and
jno
inc
mov
mov
pop
push
insl
push
add
sahf
add
ret
push
and
fwait
adc
imul
adc
jmp
mov
outsl
sbb
jbe
ss
xchg
add
jmp
test
into
pop
insl
or
outsb
add
cmpsl
push
insb
mov
lret
out
shrb
ret
fsubrs
stc
test
es
loope
shlb
add
or
fisubrs
insl
push
out
adc
xchg
subb
or
cmpsl
cmp
xchg
sahf
or
sub
inc
cmc
mov
pop
push
lods
mov
aad
sub
scas
add
mov
ljmp
daa
xchg
push
insl
inc
fs
or
xor
cmp
stos
xchg
jg
fmulp
enter
shr
aam
icebp
movsl
inc
push
enter
lods
fs
pop
mov
dec
mov
push
aad
mov
jecxz
pop
cwtl
xor
push
mov
jmp
mov
js
adc
iret
cld
sub
sbb
shlb
fwait
and
push
adc
jg,pt
repz
cmp
pop
lea
mov
dec
stos
push
and
xchg
cld
pushf
addb
lds
loop
int3
mov
incb
scas
inc
dec
pop
into
ss
xchg
push
in
in
stos
pop
cmp
jae
fstl
mov
jl
adc
jle
jg
jmp
xchg
mov
push
js
jno
push
je
xchg
add
mov
or
sbbb
pop
data16
jno
outsl
adc
mov
cmp
or
int3
xchg
push
pop
and
push
insl
xor
and
pop
jecxz
sbb
nop
pop
inc
in
jo
jbe
outsb
push
jmp
mov
leave
add
hlt
xchg
in
std
push
es
xchg
inc
push
add
stc
popf
cli
inc
test
or
mov
es
add
jae
push
sub
cmpsb
jo
pop
repz
mov
or
stos
lea
lret
or
add
add
xchg
out
ret
test
mov
leave
push
sub
adc
movsb
push
or
int
lret
fsubrs
lds
dec
es
into
sbbl
sbb
out
adc
jne
adc
in
and
imul
or
or
xchg
dec
vcvtss2si
cwtl
mov
jmp
push
xor
scas
xor
xchg
pop
jl
jp
sub
test
into
xchg
push
mov
sbb
cmpl
cmp
jge
pushf
imul
dec
test
movsl
push
jp
jae
jbe
add
pop
mov
mov
in
jge
pusha
mov
cmpsl
cs
aas
add
int
fsubrs
fucomp
stos
mov
sbb
js
gs
out
mov
jns
jo
sub
scas
add
pop
push
add
jmp
enter
xchg
repnz
stos
addr16
sbb
adc
daa
pop
loop
pusha
stc
mov
xor
jle
int3
out
add
fs
jb
adcb
out
adc
sub
xor
stc
shlb
fmuls
pop
pop
xchg
sub
mov
mov
mov
adcl
sub
subb
aad
pop
frstor
ret
mov
adcb
pop
sub
scas
and
out
jae
popa
in
in
test
ljmp
ret
andb
cmp
jp
fldt
movsb
imul
pop
jecxz
adc
in
mov
push
adc
push
mov
xchg
movsl
stos
or
cmp
pop
test
mov
sbbl
cltd
mov
pop
xor
and
add
jl,pn
das
mov
leave
adc
mov
adc
fldl2t
xor
cmp
out
pop
xor
imul
mov
js
subl
addl
daa
js
scas
cs
push
movsb
mov
mul
jge
nop
shll
adcb
xchg
stos
push
jae
es
lret
std
xchg
jmp
out
fmuls
stc
jbe
sub
mov
xchg
mov
andb
popa
nop
out
inc
adcb
or
pop
cmp
mov
loopne
mov
inc
lods
mov
adc
dec
ja
jmp
js
inc
stos
xor
add
loope
mov
in
ds
pop
pop
insb
and
fldl
xchg
fs
pop
scas
mov
std
rolb
call
and
mov
add
jno
mov
das
lret
mov
insb
mov
jp
xchg
cmc
mov
sub
add
les
jae
inc
lods
ja
les
cmpsb
mov
in
dec
pop
sbb
xlat
cmpsb
popa
and
ret
xor
cmp
cmpsl
rol
mov
cmp
popf
stc
pop
cltd
push
push
mov
pop
leave
int
cltd
xor
out
lret
ljmp
or
inc
jl
cmp
pop
mov
push
pushf
sti
push
leave
adc
xor
mov
test
std
push
or
ss
sbb
test
fdiv
or
out
dec
cmpb
xor
negb
dec
dec
jp
push
mov
and
cmp
cs
inc
outsl
cld
fbstp
sbb
mov
sbb
sub
gs
jno
iret
jmp
xor
mov
gs
sub
xchg
mov
mov
shrb
jno
fwait
imul
sahf
mov
or
aas
test
js
xchg
jecxz
xchg
dec
in
movsl
aad
clc
popf
sub
jns
adc
jmp
push
icebp
mov
mov
sub
sarl
and
aam
mov
dec
cmpsl
or
sbbl
or
insl
aas
sbb
add
xlat
hlt
sahf
addr16
cmpsb
and
cmp
mov
xor
adc
ds
adc
mov
mov
call
in
ss
xor
pop
in
js
lds
out
push
add
mov
int3
movsl
jecxz
add
push
stos
nop
pop
out
pop
and
loope
ljmp
xchg
test
frstor
add
sti
loop
or
leave
pushaw
xor
rolb
jnp
inc
push
inc
inc
sub
jmp
mov
fildll
dec
push
out
jmp
push
jb
or
arpl
ljmp
shlb
sarb
out
popf
dec
lcall
mov
push
xchg
cmpsb
xchg
pushf
xor
dec
sbb
cmpsb
pop
mov
jae
mov
add
test
dec
jnp
repnz
imul
xor
push
lock
jg
sub
jg
push
xor
push
mov
xchg
push
cmp
mov
testb
push
mov
aad
rolb
xchg
push
sbb
jmp
fistl
stc
inc
shll
movsl
xchg
push
rcr
shlb
or
cmp
cld
loope
xor
jle
jbe
add
mov
push
xchg
or
lds
adc
push
movsl
cld
add
jo
xchg
call
or
xchg
jb
sub
mov
jo
loop
jne
sub
out
push
sub
out
mov
int3
cwtl
into
dec
in
loope
jo
stos
jns
sub
and
sub
pop
inc
dec
data16
stos
inc
mov
testb
dec
or
out
popf
push
loope
adcb
sub
inc
ljmp
sti
in
or
mov
sarl
lcall
jo
inc
cld
pop
jbe
clc
mov
mov
jge
lods
imul
dec
std
cltd
xchg
pop
mov
out
mov
adc
push
adc
out
mov
push
test
inc
lea
inc
push
cmpsb
cmp
inc
or
dec
cld
xchg
repnz
pop
or
push
push
ret
subb
jl
push
roll
lcall
push
cmp
mov
pop
rolb
jns
adc
lret
fbstp
movsl
mov
mov
mov
sbb
add
nop
daa
inc
imul
inc
pop
out
jecxz
call
mov
fcompl
inc
nop
pusha
inc
fmulp
xor
mov
and
out
mov
lock
popa
adcb
out
movsb
cli
xchg
mov
xor
pop
sbb
cmp
stos
out
mov
or
cmpsb
dec
push
jnp
cmp
andb
xchg
rcl
dec
cwtl
stos
rclb
mov
or
mov
mov
test
lcall
mov
xchg
stos
int
mov
pop
cld
sahf
cmpb
dec
aad
ljmp
loopne
repnz
push
sti
push
or
cmp
enter
sub
cmpsl
imul
mov
mov
cmp
inc
negb
shll
aas
mov
dec
shlb
jae
sub
xchg
sar
pushf
pop
pop
jp
pop
mov
cld
pop
cld
shrb
iretw
mov
or
sub
shl
popf
inc
andl
loop
push
dec
enter
jle
pop
mov
push
inc
fmul
scas
jno
loope
inc
mov
inc
lods
pop
or
mov
adc
pop
lret
movsb
add
and
jnp
sbb
andb
add
sub
test
mov
lahf
xchg
cmp
pushf
ret
pop
repz
mov
adc
push
leave
adc
cwtl
das
sti
cmp
jo
aas
mov
cmpsl
adc
mov
les
pop
xchg
test
in
ss
int3
xlat
inc
fprem
or
add
les
mov
jnp
jecxz
adc
mov
lahf
or
jecxz
lods
sub
inc
das
add
inc
fdiv
cmpsb
cmpsl
daa
mov
fs
mov
aam
or
repnz
add
punpckldq
lcall
xchg
aad
jp
jg
xchg
mov
cmc
adc
lret
nop
mov
sar
cld
add
pop
fdivrl
mov
int3
les
int
jno
cmpl
stc
cmpsl
mov
repz
into
arpl
loope,pn
inc
adc
pop
pop
mov
xlat
rolb
les
add
push
inc
push
loop
mov
test
mov
mov
mov
fists
add
fstl
loop
mov
adc
dec
sub
push
pop
push
sbb
xor
xchg
cmpsb
testb
pop
push
jbe
adc
aaa
test
out
mov
or
fdecstp
mov
jbe
xchg
fmull
sub
into
outsl
mov
or
imul
or
xchg
mov
mov
in
test
sbb
inc
pusha
add
or
pop
test
call
int3
push
cmp
mov
inc
stos
mov
sbb
mov
sbb
es
push
in
push
repz
in
insb
push
adc
sub
add
mov
mov
test
push
dec
fnstcw
scas
mov
fsubl
movb
or
mov
inc
test
hlt
add
ss
mov
das
in
add
lods
push
mov
mov
mov
movsl
jle
pop
sub
dec
out
cmp
outsl
push
fwait
insl
add
jmp
or
add
enter
mov
xor
cli
xchg
add
insb
or
xchg
loop
mov
mov
pop
daa
negl
inc
popf
mov
cld
fdivs
stc
xlat
cltd
aaa
sahf
clc
sbb
cltd
test
add
lretw
test
fcmovb
pop
cld
dec
frstor
jbe
mov
imull
je
lea
ret
ss
out
in
rcll
dec
mov
push
jno
ret
aad
mov
xor
loopne
pop
std
pop
mov
and
fs
enter
add
mov
out
jae
inc
shl
mov
cmp
dec
xchg
ret
pop
ret
imul
xchg
sub
sbb
in
mov
cmp
insl
aad
cmp
push
adc
ja
sahf
out
popf
lret
adc
cmpsl
inc
mov
test
inc
pushl
out
mov
shrl
adc
icebp
movsl
push
jg
cltd
mov
dec
dec
jecxz
xor
adc
int
xor
xor
push
mov
add
mov
mov
cs
call
sbbb
repnz
fstpt
xor
iret
frstor
cmp
dec
scas
out
mov
add
cmp
adc
stc
sub
mov
out
orb
cmp
div
xchg
ret
inc
es
jge
push
add
popa
xor
adc
nop
je
lods
inc
or
lret
xchg
out
popf
mov
fnstenv
adc
orb
mov
sub
and
call
jo
es
test
mov
stos
mov
rcll
ret
sbb
xor
mov
shr
decl
pop
cld
inc
sbb
addl
mov
std
add
imul
dec
orl
adc
in
xor
inc
insb
xchg
les
test
das
insl
shlb
add
mov
inc
js
xor
aam
cmp
pop
data16
xchg
mov
fnstenv
aas
push
in
rcll
xchg
add
out
aaa
sbb
cmp
mov
or
adc
cmpsl
dec
cmp
add
xchg
adc
aam
addb
xchg
je
ja
pushf
jo
xchg
xchg
push
sbb
pusha
mov
sti
popa
nop
xor
addb
fldenv
imul
cmp
pop
push
repnz
jno
sbb
mov
pop
aam
mov
adc
mov
loope
and
lahf
cld
jmp
dec
sbb
mov
repz
xchg
call
fucomp
add
fdivrp
inc
inc
pop
jae
aas
clc
inc
fcomps
sbb
scas
enter
loopne
repnz
xor
incb
mov
aaa
popa
cmp
aas
aam
in
aam
inc
movsl
loopne
and
les
fidivrs
sbb
jecxz
xchg
mov
and
clc
pop
pop
jnp
stc
lret
bound
mov
mov
loopne
cmp
es
fwait
pop
inc
xor
nop
mov
dec
pushf
xor
in
ret
js
mov
les
inc
mov
mov
popa
jnp
sbb
adc
push
movsl
sub
gs
addl
inc
and
inc
mov
in
sub
test
lcall
mov
lret
fmuls
ss
push
xor
pop
mov
jle
sbb
add
les
xchg
and
ljmp
adcl
inc
inc
inc
xor
mov
push
test
push
adc
addr16
sub
xlat
rcrl
ja
jg
pop
stos
mov
test
xchg
pop
imul
aas
and
cmp
stos
cltd
mov
adcb
and
enter
push
lods
push
jmp
scas
mov
inc
xor
pop
xchg
mov
popa
sar
adc
fscale
rcrb
sbb
lret
or
frndint
into
test
pop
pop
xor
push
shl
mov
outsb
mov
leave
lods
cli
mov
fdivrs
inc
in
out
cmp
mov
ljmp
pusha
sub
aas
enter
mov
out
psubsw
sbbl
sbbb
cmc
addr16
pop
pusha
movsl
pop
pop
out
aaa
hlt
seta
jbe
push
rcrl
xchg
je
lds
sbb
pop
test
stos
in
popa
js
push
les
out
xchg
sub
push
bnd
adc
mov
jle
push
xchg
xor
scas
adc
cmpsl
jg
and
andb
into
jae
pop
rcll
mov
or
movsl
notb
jo
xchg
sub
insb
push
xor
test
stc
cmp
push
mov
sub
out
or
cmpsl
mov
inc
push
xchg
test
mov
xchg
outsl
pop
out
mul
dec
fcomps
dec
pusha
imul
daa
push
and
sbb
add
adc
dec
insb
mov
adc
ljmp
jbe
stc
int
sub
out
mov
cld
jbe
mov
dec
fisttpl
sub
push
jl
je
mov
push
jle
xchg
sarl
aam
andb
lcall
lret
mov
pop
mov
mov
dec
mov
push
or
imul
push
sub
mov
sbb
dec
xchg
loope
jns
pop
mov
pop
pop
cwtl
jg
pop
add
sbb
sbb
lahf
or
inc
dec
inc
mov
imul
aam
xchg
pop
shll
pop
in
stc
gs
xchg
dec
out
imull
call
insl
mov
cltd
xorb
cmpsl
std
mov
xor
add
cmp
mov
fcos
lcall
in
mov
stc
cmp
inc
add
mov
push
loop
jecxz
gs
pop
sub
stc
cmp
insl
packssdw
sub
cltd
inc
sub
leave
in
jo
inc
sbb
scas
jle
push
movsb
imul
popf
xchg
mov
sbb
push
jl
stos
std
pop
or
fsubr
negb
inc
movsb
stos
into
mov
cltd
pop
lds
clc
adc
xchg
aad
inc
sti
hlt
pop
inc
push
add
mov
mov
mov
fnsave
mov
push
jle
in
scas
push
icebp
sbb
cmp
fs
inc
lods
dec
mov
loope
dec
mov
or
cwtl
cld
rolb
dec
call
cmp
pop
adc
in
xlat
in
ret
test
aas
into
mov
adc
ja
aam
mov
pop
jne
call
or
jg
das
mov
jno
push
stc
xchg
das
mov
lret
pop
int
jns
mov
aaa
xchg
push
test
dec
int
mov
rcrl
mov
arpl
lcall
pop
js
int
mov
lret
popa
dec
xchg
int
dec
adc
std
cmp
jg
or
mov
push
je
fisubrs
negl
push
pusha
jl
aad
cmp
lret
loop
push
adc
pop
adc
mov
mov
imul
aaa
and
xchg
subl
mov
lcall
xchg
lret
fnstenv
rcrl
jb
fsubs
dec
adc
mov
mov
mov
cmp
mov
xor
fwait
adc
xchg
sbb
cld
and
add
sarl
out
mov
push
fnstsw
movsl
lds
sbb
push
lods
pop
adc
std
xchg
sbb
lea
sub
pop
std
inc
push
and
dec
push
mov
andb
data16
and
mov
aaa
call
or
iret
outsl
sub
rorl
push
icebp
subl
xor
nop
add
mov
dec
xor
stc
loopne
in
push
outsb
jmp
data16
icebp
xchg
xor
int
push
repz
or
xor
rcll
shrb
mov
popa
mov
jg
cs
loop
add
sub
rcr
in
mov
ret
sub
call
pop
mov
scas
xchg
xor
adc
lahf
sbb
and
stc
bound
lret
cli
insl
loop
aad
bound
pop
jg
push
and
cmpsb
pop
cmp
repz
sub
fldenv
or
imul
add
das
ss
out
or
out
add
cmp
mov
mov
loopne
sub
dec
insl
jp
lods
and
xor
pop
outsb
out
sbb
out
imul
nop
repnz
xchg
mov
mov
bound
ret
mov
sub
test
push
cmpsl
fucom
popa
les
mov
pop
push
loope
in
jp
rol
sti
or
sub
out
dec
xchg
sahf
rcrb
sbb
xchg
loop
inc
lcall
mov
xor
int3
xor
jecxz
xchg
aad
inc
xlat
pop
adc
jnp
inc
cwtl
lods
inc
pop
adc
jnp
jns
pop
mov
mov
mov
je
jae
pop
inc
add
pushf
jno
dec
sarl
xchg
pop
pop
xchg
pushf
push
lock
mov
push
and
popf
or
ret
sbb
and
int
mov
fstps
loop
mov
repz
negl
mov
out
into
dec
dec
mov
push
cmp
imul
xlat
ja
mov
aaa
push
lds
mov
dec
cmpsb
xchg
add
mov
imul
or
inc
sahf
add
scas
xchg
mov
cmovp
and
cld
test
enter
lods
inc
shrb
add
inc
xor
lods
jg
push
dec
loop
cld
cli
or
and
fidivl
aam
xchg
ljmp
dec
cmpsb
cmp
push
ret
mov
int
lds
jbe
lahf
pop
cmp
push
in
sbb
mov
inc
test
ds
cmp
xlat
mov
pop
add
pushf
adc
lds
mov
aad
push
add
mov
dec
pop
xlat
idivl
dec
cwtl
cld
adc
xchg
in
loope
cli
push
flds
cmc
dec
cld
mov
xor
push
xchg
xchg
pushf
ss
pop
xchg
jmp
adc
sub
mov
xchg
andb
or
add
outsb
push
lods
adc
in
sbbl
jb
push
aam
movl
out
shl
sub
xor
jae
jg
inc
jnp
js
mulb
add
pop
inc
movsb
sbb
lcall
cli
std
mov
rcl
push
push
ja
dec
dec
adc
push
out
mov
jmp
lahf
outsb
std
repnz
pop
adc
or
dec
mov
dec
stos
loope
sub
sbb
or
xchg
fwait
test
loope
icebp
enter
iret
mov
pop
negb
pop
and
mov
mov
inc
jp
out
in
into
mov
scas
adc
or
daa
test
pop
negl
pop
pop
pop
pushw
in
pop
or
movsb
out
sub
add
mov
xchg
stos
xor
jb
arpl
add
scas
fdivl
push
jbe
lods
mov
jp
scas
mov
mov
cmpsl
cmp
mov
out
into
cld
ds
xor
push
sbb
adc
dec
cmpsl
popa
clc
fsubrs
cmp
loope
mov
sbb
sahf
sub
les
stc
std
bound
sbb
cmc
enter
sbb
loope
fldcw
cmpl
aas
cmp
ret
sub
dec
iret
push
ljmp
fsubrs
sub
das
addr16
shll
fdivs
sub
fwait
jne
int
lret
in
mov
ljmp
and
aaa
push
xchg
sub
mov
test
je
shrl
test
jo
dec
pop
jg
imul
xor
shrb
push
push
mov
mov
adc
dec
mov
movsl
adc
ds
add
sub
mov
mov
in
xlat
popf
xor
pop
andl
ret
call
test
loope
test
xchg
mov
push
and
fwait
outsb
mov
sub
fsubrl
in
roll
xor
dec
mov
out
mov
lcall
ss
xor
fidivs
shll
mov
fiadds
in
out
adc
push
or
lret
call
leave
cmp
das
or
pop
cmp
and
icebp
xor
loopne
jbe
sub
stos
xchg
decb
lret
add
cmpsl
fnstsw
lahf
xchg
mov
or
hlt
insb
fucomip
rclb
mov
jge
add
mov
sbb
out
push
mov
ljmp
movsb
pop
pushf
mov
and
xchg
inc
push
into
scas
mov
jmp
cmp
cmc
mov
lahf
jmp
xchg
adc
or
adc
pop
add
mov
and
xchg
lds
and
rolb
movsl
sub
mov
aaa
leave
push
je
imul
in
shr
xchg
inc
std
lcall
fbld
jecxz
ss
and
mov
mov
loop
minps
hlt
dec
lds
ret
lret
inc
out
jge
jne
lea
ss
cmp
int3
fwait
rcl
in
jb
xchg
stc
inc
call
pop
inc
jae
xchg
je
sahf
in
cltd
enter
xchg
push
inc
dec
out
fstps
ret
dec
add
cltd
ja
pop
inc
aas
or
push
test
sub
dec
scas
inc
loopne
cmp
outsb
stos
pushf
and
mov
pop
push
jg
aas
dec
jge
jb
imul
mov
in
mull
adc
aam
daa
inc
fstps
cmc
inc
xor
or
std
rcrl
mov
pop
jge
fdiv
frstor
mov
and
or
es
and
cmp
ds
add
mov
push
or
out
xor
subb
mov
adc
addr16
popa
xor
roll
lcall
pop
in
bound
xchg
sub
dec
mov
subb
imul
mov
mov
inc
or
out
daa
mov
add
sbb
dec
bound
data16
aaa
sub
stc
bound
push
sbb
push
and
adc
pop
xchg
stos
fs
imul
sub
mov
jo
jne
mov
insl
mov
xchg
pop
loop
mov
repnz
mov
sar
pop
imul
mov
sub
xchg
dec
mov
imul
jb
outsl
push
shrl
sub
inc
pop
mov
mov
fdivl
dec
push
inc
lahf
sti
push
ret
out
jmp
xchg
cmp
xor
jns
sub
dec
loopne
shlb
loop
iret
ss
mov
sub
lods
enter
xor
push
cmc
rorb
popa
fistpl
gs
xchg
fs
pop
je
bound
xchg
rcll
je
cmp
lock
es
shlb
mov
js
popa
pop
in
dec
push
fdecstp
sub
jl
test
mov
mov
lods
add
mov
popa
add
jo
daa
ret
dec
cmpsb
xchg
push
mov
or
filds
mov
sahf
out
in
mov
pop
lcall
hlt
sbb
ds
lods
mov
not
xor
rcrl
or
mov
js
sarb
adc
shrl
bound
inc
int
jmp
dec
mov
jo
pop
lock
jmp
sti
add
ja
mov
jmp
subb
testb
xchg
shl
xorb
dec
bound
scas
fisttps
lds
imul
sbb
mov
mov
adc
cmpsl
mov
and
push
jne
icebp
ja
push
in
push
mov
insb
faddl
push
inc
out
test
jp
into
aas
dec
mov
jl
std
aam
xchg
shll
dec
jg
mov
jb
jecxz
outsb
fwait
shll
jae
xor
dec
es
push
cwtl
push
and
jbe
push
xchg
loop
xchg
lcall
pop
or
xchg
call
xor
cmc
cwtl
cmpsb
dec
push
add
sub
adc
in
stos
xor
call
jg
add
xchg
mov
adc
in
mov
jecxz
ja
mov
dec
arpl
adc
sub
xor
pusha
notl
in
bound
js
mov
sbb
adc
push
sub
mov
dec
jecxz
adc
sub
mov
mov
pushf
test
dec
push
fildll
and
or
scas
rolb
sub
inc
in
out
push
sbb
or
aam
outsb
xchg
shrb
mov
test
jo
mov
shrl
rcrl
push
in
rclb
dec
adc
inc
xchg
repz
cli
pop
stos
cmpsl
xchg
das
shl
or
cli
dec
sub
repz
mulb
jnp
lods
dec
inc
jbe
sub
and
test
mov
lods
sbbb
and
test
inc
jl
ss
inc
lock
xchg
adc
dec
ja
add
and
test
add
clc
cmpsb
and
rolb
mov
in
lds
cli
xchg
add
push
xor
push
fdivs
or
cmpsl
lds
notb
xchg
fs
lret
repz
add
lret
and
test
ds
sar
jns
cmp
push
inc
or
and
cmpsl
xchg
pop
cmc
mov
scas
ja
sub
xchg
dec
rol
movsl
repnz
jmp
mov
in
xchg
sub
dec
pop
xor
push
out
ss
imulb
jl
or
hlt
mov
jnp
or
push
mov
fwait
adc
inc
inc
cld
in
das
pop
out
je
xor
jg
dec
out
and
leave
cmpsl
out
stc
cmp
scas
push
inc
inc
sahf
adc
leave
xchg
andb
mull
inc
push
aad
sub
xor
std
dec
lahf
and
cli
fwait
xor
adc
rcl
mov
push
lcall
sti
xchg
add
movsl
pusha
cwtl
stos
mov
lods
add
test
add
xor
mov
popf
hlt
dec
pop
es
sti
popf
out
jmp
push
sub
cld
mov
divl
scas
test
test
in
jb
and
andb
and
leave
mov
dec
push
out
addr16
movsl
imul
aaa
inc
mov
jge
jns
xchg
sub
pop
xchg
mov
lds
fdivp
outsl
shrb
cs
push
mov
mov
movsl
daa
cmpsb
add
aam
jmp
xchg
clc
bound
adc
adc
sbb
ret
enter
pop
rcl
cmc
or
dec
cmp
jnp
dec
filds
push
add
mov
mov
push
lds
movsb
add
stos
lods
and
icebp
pop
pcmpeqw
js
xchg
jmp
cmpsb
ds
xchg
mov
jae
repnz
and
xor
pop
shlb
sub
aam
sbbl
push
and
pop
nop
mov
dec
lds
std
mov
mov
lahf
jb
jbe
pop
daa
insl
loopne
mov
mov
mov
fucomip
dec
mov
xor
movsb
or
ljmp
mov
pushf
fwait
sbb
leave
sbb
jnp
arpl
sbb
mov
clc
mov
fsubrs
fcoml
lea
push
adc
lds
sbb
out
push
dec
pop
cltd
addl
mov
mov
aad
pop
mov
push
js
test
inc
ficoml
out
subb
pop
in
pop
add
mov
sub
mov
inc
add
mov
mov
lock
jb
lods
add
pop
lea
mov
fidivrl
or
loop
mov
hlt
filds
add
xor
cwtl
inc
add
js
xchg
pop
inc
imul
pushf
pop
adc
adc
adc
xor
pop
ljmp
scas
lods
pop
shll
or
and
frstor
push
adc
adc
movsl
sub
mov
push
lahf
cmp
cmp
pop
xor
cmp
xor
add
movsb
dec
dec
or
stc
outsl
aad
mov
ja
xchg
pop
mov
and
xchg
mov
sub
push
out
or
pop
outsb
pusha
aaa
xchg
pop
dec
gs
xor
lret
addr16
in
adc
mov
jae
pop
mov
mov
adc
cli
rorb
dec
jecxz
mov
fistpl
push
pop
cmp
mov
mov
lcall
nop
sbb
insl
xchg
cli
loope
movsl
popa
fsubrl
sbb
lahf
jb
pop
xchg
add
rcr
outsl
cmp
test
sti
mov
dec
mov
stc
out
mov
lret
addr16
pop
idiv
xchg
rcr
add
or
test
jge
jmp
icebp
pop
xor
sub
dec
push
lods
sub
and
jmp
mov
loope
pop
out
or
sarb
aad
push
push
xchg
pop
and
jbe
adc
or
xlat
and
mov
loopne
inc
icebp
sbb
fbld
jge
sub
mov
fistpll
shrb
movsl
cld
in
and
or
xlat
lock
rcll
inc
adc
in
insl
mov
sub
ljmp
jp
lret
xchg
inc
fs
mov
mov
lds
jb
xor
lods
fstpt
data16
jmp
and
cld
cmp
xchg
mov
adc
adc
lods
push
pop
mov
cli
xchg
hlt
mov
pop
mov
popf
mov
dec
in
or
push
inc
fcomp
js
and
inc
or
mov
mov
lret
ret
mov
aas
push
push
fs
dec
jp
out
pop
cmpsb
cmp
data16
jmp
jo
jns
dec
inc
push
testl
lds
outsl
sub
stc
fdivs
outsb
jl
push
push
enter
lcall
lods
sarb
dec
clc
pop
mov
mov
push
jecxz
enter
das
gs
mov
hlt
pop
lock
dec
ja
dec
mov
xchg
data16
stos
pop
cmpsb
ret
arpl
cmp
clc
es
mov
mov
fiadds
add
dec
mov
and
movsb
mov
lods
into
sbbl
cmpsl
divb
cli
cmp
int3
mov
add
pop
cmc
es
je
fsubs
jg
andl
mov
jo
dec
shrl
or
rol
mov
frstor
imul
outsl
rclb
pop
addw
adc
mull
popf
gs
lcall
cld
addr16
pop
ret
lcall
inc
sbb
add
add
pop
push
int3
mov
ljmp
test
cmp
pop
repnz
adc
adc
repz
and
test
pop
stos
dec
jbe
mulps
icebp
mov
pop
sbb
in
sbb
je
jecxz
or
into
pop
push
test
gs
pop
insl
mov
mov
scas
inc
mov
adc
sahf
inc
std
mov
sahf
and
and
popa
inc
bound
add
jmp
mov
mov
xor
testl
adc
insb
std
subl
xor
pavgb
stos
andl
aas
add
and
push
repz
push
pop
scas
inc
dec
jbe
aaa
jbe
mov
add
jnp
clc
stos
inc
jnp
arpl
xorl
mov
clc
adc
mov
loopne
jns
or
loope
jg
clc
or
push
sub
xchg
aad
lock
mov
ret
mov
loop
pop
clc
orl
or
js
faddp
inc
add
and
pusha
adc
sbb
sub
iret
inc
out
inc
hlt
pop
hlt
andl
adc
sahf
xor
fadds
or
cmpl
jmp
cltd
or
cmp
and
sub
mov
cmp
add
mov
pop
imul
ja
jp
add
int
test
pop
out
cld
rorl
add
mov
rcr
mov
mov
in
mov
xor
lcall
or
cmp
outsl
or
jge
iret
sub
popa
faddl
mov
add
mov
loopne
out
mov
nopl
mull
bnd
or
dec
arpl
lock
jge
cmp
insb
sbb
cmp
cmp
adcb
mov
test
xlat
imul
xor
imul
data16
and
inc
test
insl
mov
mov
sbb
mov
push
fistl
mov
xorl
xor
out
cltd
push
sub
leave
pusha
clc
sbb
add
ljmp
pop
inc
data16
das
mov
mov
adc
or
sbb
inc
push
push
shrl
and
hlt
mov
cmp
sub
insl
rolb
sarl
mov
xchg
or
inc
bound
scas
bnd
rclb
loopne
jg
jne
ret
adc
xchg
add
std
clc
sbbl
mov
leave
test
add
mov
mov
cmpsl
outsb
cwtl
data16
mov
testl
pop
push
xor
call
test
fdiv
inc
incl
push
sti
mov
cpuid
frstor
std
xchg
insb
test
cmp
cs
pop
sbb
popa
xchg
aad
std
xorb
test
dec
sti
mov
sub
mov
inc
leave
lea
lea
jmp
outsb
mov
lcall
jns
jne
int
jmp
xorb
or
or
lea
movsb
cmp
mov
jp
pop
sbb
loopne,pt
in
imul
rol
insl
adc
mov
es
xchg
pop
adc
out
jnp
inc
ret
scas
pop
cmpsl
or
test
movsb
ja
push
cs
xor
mov
push
xchg
pushf
or
cmp
cmp
addr16
xchg
dec
in
lock
jp
and
inc
sub
sub
push
sbb
out
lods
lret
and
movsl
push
adc
dec
in
cmc
pop
dec
xchg
push
enter
push
sbb
sbbl
imul
xchg
lods
aad
adc
sti
movsl
ljmp
and
jae
dec
lods
std
xor
pusha
incl
mov
movsb
mov
jecxz
mov
dec
mov
or
and
push
add
jne
decl
xor
loopne
adc
popaw
mov
cs
cmp
cmp
lock
pop
inc
loope
mov
sub
dec
out
push
aad
inc
data16
fnstcw
fidivs
movsl
inc
mov
jmp
enter
lret
sub
xchg
ja
das
fildll
test
add
stc
jmp
mov
mov
pop
insl
cmp
lret
xchg
in
lcall
popa
loop
add
xor
popf
dec
and
lods
mov
pop
and
fs
mov
mov
lods
orb
je
cltd
movsl
test
and
in
ret
loop
loope
or
push
ss
mov
mov
fwait
xor
pop
xor
mov
sbb
es
sbb
clc
pushf
xor
add
lcall
mov
mov
adc
jae
pusha
xlat
iret
sbb
ffree
pop
xchg
xchg
popa
cs
movsl
push
or
sub
xchg
sub
and
icebp
fists
add
inc
mov
push
out
sahf
in
dec
add
outsl
and
fmuls
mov
cwtl
je
jbe
xor
inc
jp
loop
mov
fidivl
add
cs
mov
add
mov
dec
repnz
mov
dec
fsubrp
xchg
push
cmpsl
fs
ljmp
mov
fidivs
adc
popf
lret
sub
sbb
mov
jnp
leave
mov
pop
fimull
sbb
xor
out
aas
mov
pop
sbb
insb
fstp
dec
fidivl
xchg
xchg
popf
xor
sbb
xchg
dec
dec
mov
mov
pop
out
mov
push
inc
sti
xchg
adc
movsl
lds
cltd
sbb
in
fidivl
ret
mov
and
add
xor
mov
mov
push
jnp
je
pop
jae
push
outsb
mov
imul
xchg
jbe
pop
imul
outsb
test
arpl
leave
pusha
xlat
push
daa
or
je
sahf
cmpsb
cmpsl
data16
and
mov
cmp
testl
rcrb
push
popf
dec
repz
or
xchg
add
push
inc
jne
xchg
mov
std
cltd
adc
popa
orl
fistpl
inc
sbb
ljmp
push
stc
in
rcll
push
repz
fisubrs
ja
sub
inc
popw
mov
jb
shrb
xchg
cs
jo
xchg
jmp
aad
jmp
adc
arpl
inc
add
jno
adc
xlat
adc
and
ss
stos
in
sub
loope
int3
lods
mov
rdpmc
nop
adc
or
dec
data16
cmpsl
inc
or
dec
dec
sub
fsubs
es
jg
and
lods
inc
cmpsl
adc
xchg
pop
sbb
lret
xchg
xor
add
jl
fildl
lcall
and
dec
mov
mov
pop
fsubr
cmp
not
cltd
jbe
dec
ret
outsb
sti
mov
lock
inc
push
cld
jno
add
or
daa
mov
cld
lcall
and
jp
cmpsb
inc
dec
movsl
loope
fildll
mov
xor
push
push
push
add
fdivs
push
sarb
mov
sbb
mov
pushf
test
inc
and
loope
mov
or
lahf
sbb
lods
mov
lcall
cmp
repnz
pop
rcrb
aad
loop
loop
sub
nop
add
rcl
insl
cmp
movsl
push
or
xchg
shlb
mov
and
add
into
data16
jl
cmc
pop
cwtl
pop
xor
into
sbb
lds
popa
data16
imul
lret
and
std
xlat
outsb
sub
pusha
je
adc
mov
pop
add
mov
adc
lds
shrb
repnz
rol
out
inc
add
cmpsl
int
inc
cmc
call
sbbl
inc
insb
add
cmp
andl
jns
out
pop
cmp
sub
ret
cmp
inc
or
sbb
xchg
out
push
lds
mov
fldenv
int3
in
loope
mov
push
sub
cltd
scas
push
mov
mov
inc
pop
sub
jle
cmp
lcall
mov
outsl
iret
mov
mov
iret
xchg
lods
mov
or
les
mov
cmpb
hlt
sub
jl
push
cltd
pop
mov
mov
add
pop
and
and
jae
inc
xor
stc
pop
push
pop
cmp
cmp
xor
dec
shrl
fs
xchg
arpl
iret
popf
sub
out
repz
xchg
call
or
pop
gs
mov
mov
into
addl
sbbl
dec
mov
scas
pop
push
or
and
imul
xchg
data16
mov
call
mov
cwtl
mov
mov
outsl
rcll
pop
and
mov
fcomps
je,pn
inc
mov
into
jg
loope
push
xor
adc
cmp
enter
je
data16
mov
lods
pop
popa
pop
inc
orl
das
pop
popf
rcrb
icebp
fwait
repz
xor
xorl
subl
lods
jb
pop
dec
es
lods
xor
rclb
lcall
sbb
and
cmp
sub
out
ljmp
push
fxch
push
pop
jg
inc
and
xchg
xchg
inc
push
lods
test
dec
repz
push
hlt
lret
nop
mov
sub
mov
test
pop
divb
mov
xchg
insb
icebp
ss
or
cmp
jae
xchg
cwtl
mov
imul
test
daa
shl
xor
scas
aas
push
stos
rol
inc
xlat
jae
mov
imul
cs
xor
jnp
je
aad
ja
add
lods
sub
test
pop
scas
mov
ss
fdivl
rep
mov
xchg
push
xchg
movsb
sub
arpl
xchg
test
sbb
add
shlb
xor
andb
sbb
sti
jg
dec
pop
loopne
adc
ja
aaa
lcall
xchg
and
xchg
ds
xchg
in
pop
movsb
cmp
nop
cmp
push
out
popf
mov
fistpll
mov
sbb
mov
popf
sub
mov
add
inc
nop
cltd
or
mov
adc
rcrb
nop
jne
adc
lods
push
aaa
testl
inc
js
mov
jmp
or
add
mov
or
mov
insb
loop
xor
cmp
add
outsl
push
cmp
popl
mov
dec
movsl
jle
mov
add
imul
jo
lret
out
push
imul
pop
or
cltd
sub
dec
xchg
popa
dec
aam
mov
mov
cmp
lahf
ljmp
hlt
jne
sub
lcall
iret
inc
and
gs
int3
inc
decb
fisubrl
loopne
jnp
sbb
addb
jmp
out
icebp
mov
lcall
ja
in
push
jp
icebp
daa
cmp
in
sahf
pop
xor
mov
add
add
push
mov
int
push
leave
movsl
mov
add
repnz
push
xchg
inc
mov
sub
rolb
cmp
mov
std
jns
shlb
jae
stc
nop
jecxz
jnp
jbe
mulb
xchg
adc
rcrl
pusha
jmp
cmc
mov
sarl
out
sbb
xlat
cmp
movsl
jg
dec
dec
sbb
add
sarb
aaa
pop
sub
inc
outsl
sbb
js
outsl
adc
sbb
inc
leave
add
or
jnp
jge
test
xor
popf
add
in
insl
inc
mov
or
or
outsb
je
cmp
lahf
push
sub
out
dec
push
iret
out
jge
inc
cmpsl
mov
arpl
lods
hlt
jecxz
lret
adc
xor
and
hlt
mov
orl
adc
push
pushf
xlat
or
aas
push
out
pop
cmc
pop
adc
xchg
mov
lcall
jl
pop
pop
or
test
push
xchg
cmpsl
ficomps
data16
xor
push
je
leave
stos
jbe
add
pop
mov
test
cmp
push
ss
sub
icebp
ljmp
int3
sub
shr
jns
lcall
push
xchg
daa
adc
rcll
xorb
or
inc
enter
inc
bound
fcmovnbe
in
adc
dec
mov
ret
rcrl
mov
mov
push
popa
pop
sti
lcall
and
bound
lock
inc
sahf
dec
adcb
and
sbbb
cmpsb
je
adc
adc
mov
or
std
xchg
sub
hlt
mov
mov
inc
push
cmp
xor
rorb
jle
push
in
out
or
cmpsl
aam
cld
inc
mov
iret
imul
cli
xchg
cmpsl
mov
push
dec
sbb
xchg
cmp
aad
inc
jnp
jmp
cltd
cmpsl
sbb
lods
pusha
lock
pop
and
pusha
pop
mov
mov
in
test
jo
orl
decl
lcall
jno
push
out
sbb
pop
repnz
lret
iret
push
dec
cli
loopne
into
aad
inc
mov
push
mov
insb
test
cld
xchg
jmp
aas
dec
mov
lahf
fisttps
jns
mov
push
or
pop
inc
lahf
stos
jne
popa
loope
fsub
cmp
rcl
or
mov
pushf
ds
pop
shrb
jb
es
fbld
fs
inc
sbb
repnz
jmp
lret
dec
out
cmpsb
xor
aad
pop
cmc
andb
pop
outsl
jnp
cli
stos
jle
jecxz
push
fstpt
loop
and
dec
pop
xchg
sarb
inc
push
adc
test
ja
shl
sbb
xor
orl
js
inc
mov
dec
sbb
xchg
adc
mov
in
add
xchg
cmp
rclb
test
mov
dec
jb
fwait
mov
add
test
jg
in
std
aam
jle
xchg
fadds
int3
push
mov
push
pushf
jmp
lahf
arpl
fcomps
stos
outsl
adc
jno
add
iret
sub
pushf
sub
adc
out
out
dec
aas
in
xchg
sbb
inc
lahf
divl
inc
in
imul
jecxz
sub
dec
mov
subl
icebp
mov
cmp
rcrl
cmp
sbb
mov
outsb
sbb
pop
stos
push
mov
mov
xor
ds
sahf
xor
xor
ror
push
movsb
pop
imul
and
loope
xor
ret
das
dec
cmp
push
or
popf
imul
jnp
dec
cmpsb
jbe
int3
cmpsl
enter
jecxz
ja
dec
in
jbe
xor
xchg
inc
movsl
dec
lret
xchg
call
into
push
jne
sub
scas
jmp
or
cmp
add
sbb
jo
cmp
sub
push
lods
cmp
lods
mov
out
js
dec
or
leave
sub
ljmp
cmpb
push
outsb
ret
add
or
imul
adc
mov
and
dec
mov
in
sti
pusha
xchg
jnp
dec
inc
inc
mov
push
xchg
mov
push
ss
fisttpll
mov
popf
lods
out
push
dec
aad
test
or
fcomi
mov
mov
dec
sbbb
push
inc
inc
loopne
clc
fcmovnu
jb
sahf
aas
leave
inc
mov
aam
mov
fwait
mov
mov
hlt
mov
in
popa
scas
and
mov
call
lock
fs
xorb
adc
jbe
jbe
pop
or
cmp
dec
cmp
or
inc
push
xchg
aaa
mov
loopne
ss
aad
inc
xchg
stos
sahf
mov
inc
cmpsb
imul
mov
or
dec
mov
jno
push
fdivrs
jg
movsl
scas
rcrl
xchg
xchg
mov
decl
sub
pusha
movsl
imul
scas
dec
movntq
add
mov
or
repnz
sub
inc
xchg
pop
jo
mov
cmp
sti
or
inc
mov
push
int
cltd
iret
sbb
and
jns
sub
mov
jecxz
repnz
fcoms
push
stos
test
popa
mov
sbb
setnp
adc
xchg
add
xor
pusha
fstps
pusha
divl
data16
inc
sub
ret
sbb
std
lahf
shlb
sub
sti
dec
pop
movsb
aam
clc
iret
data16
pop
ret
xor
fsubrp
dec
arpl
mov
pop
in
xor
cld
aam
cmp
xchg
jb
push
jle
cmpb
mov
lret
div
sub
adc
stos
xchg
ja
inc
subb
mov
call
rclb
add
insl
xchg
fwait
push
jae
hlt
addr16
scas
mov
rorl
mov
out
testl
inc
in
outsb
gs
pop
icebp
sahf
xchg
mov
and
mov
jne
adc
test
mov
push
out
rcl
push
cli
mov
sub
dec
fiaddl
adc
out
dec
or
hlt
in
add
aas
fstpt
fistps
addr16
ja
loop
mov
lds
insb
call
jecxz
add
sbb
sbb
mov
add
sbb
rorb
loopne
repnz
imul
xchg
sub
cmp
sahf
add
mov
push
fnstcw
mov
push
lea
shlb
aas
mov
ret
pop
mov
cmp
nop
or
jnp
xor
loopne
xchg
inc
in
and
adc
pop
jne
inc
pop
jno
aam
repnz
bound
xchg
fcomi
mov
jg
stos
mov
or
push
stc
sbb
add
icebp
shll
lret
adc
mov
pop
imul
cmpsb
lcall
fbstp
ljmp
sub
and
mov
dec
pop
or
lret
mov
push
pop
aaa
mov
in
mov
dec
cmpsl
stos
pop
sahf
mov
lods
and
sahf
hlt
stos
adc
or
aad
jnp
clc
loop
out
daa
data16
mov
xor
push
popa
push
dec
loop
add
inc
test
adc
je
push
xor
push
mov
sbb
add
lock
adc
cmp
push
rorl
mov
jbe
jmp
xchg
rcrl
cld
out
xchg
cs
mov
dec
out
mov
ret
outsb
imul
jp
cmp
xchg
in
aaa
mov
in
dec
sub
ds
add
jl
movsb
mov
sbb
mov
int3
imul
lret
mov
push
push
enter
adc
sbb
push
pusha
test
fnsave
mov
push
lock
mov
add
ficompl
gs
retw
xchg
pop
je
mov
jb
test
and
push
push
leave
adc
inc
ljmp
loope
outsl
in
mov
xchg
push
mov
insl
ja
pushf
jmp
pop
sbb
das
cli
subl
or
popa
daa
mov
loop
xchg
and
and
cmpsl
xor
adc
sbb
jo
stos
xor
lahf
rcrb
inc
xor
mov
mov
mov
jmp
sub
test
ret
sub
dec
ds
iret
stos
adc
mov
sub
fcomip
sbb
xchg
inc
cmp
cli
mov
xrelease
fsub
cwtl
into
ret
jecxz
sub
pop
jbe
push
das
filds
popa
mov
aas
arpl
xchg
xor
push
movsl
insb
andb
or
out
jbe
shll
out
test
sarl
xor
push
fbstp
jnp
lods
aas
sub
cld
fwait
lods
mov
mov
out
aad
adc
aas
push
outsb
and
negl
sbb
loopne
adc
jnp
out
loope
seto
aam
jnp
mov
stos
inc
loop
mov
andb
adc
mov
dec
cmp
clc
inc
stos
inc
cmp
mov
adc
xor
sbb
xor
hlt
insb
add
push
mov
popa
insl
push
dec
imul
xor
out
cmpsb
ret
into
mov
dec
pop
jle
inc
lods
mov
fbld
cmpsl
adc
xchg
dec
xchg
mov
stc
add
jb
and
shll
add
push
outsb
cmpsb
mov
lahf
jle
ss
dec
push
call
add
fs
lahf
or
mov
cmp
and
loopne
mov
in
mov
inc
loop
jno
pop
iret
push
aad
mov
or
fsubs
hlt
mov
std
xor
data16
adc
jbe
out
cmp
icebp
push
mov
adcl
dec
xor
pop
cwtl
call
mov
cmc
aam
fildl
and
mov
mov
push
cwtl
mov
imul
add
sbb
aas
mov
icebp
stc
pop
cwtl
and
inc
cld
jg
or
data16
push
test
mov
jbe
pop
mov
xchg
fs
dec
xor
js
or
mov
iret
jecxz
cld
int
jo
scas
xchg
inc
inc
jecxz
mov
adc
inc
or
cmp
push
je
pop
push
jg
ljmp
addr16
fcmovnb
in
mov
test
enter
imul
xchg
lods
cmp
loope
xlat
sbb
mov
mov
and
ljmp
inc
data16
cmpsb
imul
jno
xor
jae
call
lods
addr16
je
lods
scas
and
repnz
and
mov
cld
js
addr16
jge
jmp
out
out
nop
pop
sbb
mov
push
mov
dec
fidivl
xchg
ret
inc
scas
push
cld
cmpb
sub
fbld
mov
push
cwtl
test
push
jbe
out
out
mov
jecxz
or
push
xlat
adc
dec
scas
push
cmp
push
scas
push
cmp
jb
dec
jecxz
cltd
push
mov
dec
fld
mov
ljmp
imul
loopne
mov
movsl
lds
pop
jle
or
dec
xor
rcrl
rclb
or
cmp
outsb
jg
lret
mov
repz
sbb
jnp
lods
xor
outsb
rcrb
lock
push
lods
cmp
inc
aas
loop
out
maxps
das
addr16
in
loop,pt
iret
imul
dec
ds
add
outsb
addr16
mov
jecxz
in
lcall
call
nop
data16
stc
adc
mov
pop
mov
aas
mov
test
adc
test
int3
mov
inc
adc
cmp
xchg
cmp
daa
push
jo
lcall
or
imul
popl
xchg
call
mov
jno
mov
mov
xchg
fs
insl
inc
ljmp
addr16
push
sub
push
push
enter
addl
rcpps
dec
adc
mov
cwtl
pop
fisubrl
xchg
pop
xor
xchg
mov
sub
add
pushf
sbb
fwait
or
out
pushf
aam
xchg
add
dec
pusha
mov
test
mov
pop
xor
push
fs
imul
and
mov
ficompl
dec
dec
sub
addr16
imul
mull
inc
jge
pop
insb
add
xchg
mov
xor
jle
sub
sti
adc
mov
jl
sub
out
subb
and
inc
sbb
lods
pushf
cmp
pop
mov
cmp
enter
or
lcall
sub
stos
mov
pop
push
jecxz
add
es
pop
outsb
dec
arpl
mov
pusha
into
jb
test
fbld
xchg
rorb
xlat
ds
addr16
cld
pop
stc
sub
pop
orb
sub
imull
mov
or
lret
orl
inc
mov
inc
cld
xor
add
lahf
push
clc
seta
shrl
je
xchg
ror
mov
outsl
xchg
ds
xlat
scas
les
js
imull
stos
xchg
test
mov
les
lret
mov
or
stc
mov
jmp
mov
lahf
and
pop
xorl
mov
pop
leave
leave
pusha
sti
jle
addr16
adc
aaa
sub
and
mov
jno
dec
aam
cmpsb
or
jo
fsubrp
stos
pop
and
dec
inc
xor
lret
fwait
in
aas
push
insl
adc
jae
sbb
inc
push
sub
xchg
inc
test
repz
lods
addr16
addr16
xor
dec
fstpt
sbb
mov
jo
mov
mov
jmp
dec
jbe
jle
lcall
mov
xcrypt-cbc
cmpsl
xchg
fdiv
lret
movsl
jnp
mov
lea
add
adc
xor
jmp
in
cmp
jno
or
mov
sub
jmp
push
fstpt
xor
dec
jmp
dec
fcmovne
mov
dec
je
scas
test
insb
add
ret
iret
xlat
sub
pop
push
lods
push
sub
hlt
xchg
test
xor
add
fisttpl
data16
lcall
insl
mov
xor
icebp
lahf
test
and
ret
sbb
push
and
and
sarl
xchg
dec
push
fmull
enter
jno
cmp
pop
jecxz
in
cmp
ja
pop
aas
jnp
push
dec
ror
add
adc
mov
decl
aad
sbb
dec
les
leave
loop
jne
pop
cltd
and
test
xchg
mov
adc
fildll
push
stc
cmpl
bound
xor
ret
mov
rcrl
lret
stc
adc
mov
inc
jno
push
in
push
xchg
dec
repz
sub
test
push
adc
adc
pop
test
stos
sub
pusha
mov
push
jnp
pop
cmpsb
jp
into
stos
movb
std
jno
insb
movsl
stos
inc
push
test
or
clc
adc
bound
xchg
sub
push
lods
les
dec
cmp
pop
fdivp
pop
out
mov
xchg
gs
scas
shl
pop
cmpsb
scas
xchg
lcall
dec
sub
sub
lea
icebp
mov
rcl
ljmp
push
fdivrs
adcb
loop
lods
in
adc
shlb
dec
sub
dec
arpl
fwait
mov
test
mov
insb
add
stc
push
mov
in
xor
inc
mov
data16
in
xchg
icebp
mov
push
and
mov
out
arpl
jl
inc
xlat
and
shll
notl
dec
hlt
les
add
fwait
cmp
dec
dec
sub
mov
push
sub
insb
stos
mov
sub
insb
or
add
or
xor
mov
sub
outsb
adc
into
adc
mov
jo
iret
outsb
andb
sbb
lods
mov
xchg
adc
dec
scas
mull
stos
cmp
bound
movsl
xor
stc
or
shr
push
rcrb
lea
movsl
mov
daa
ja
aam
cli
push
sar
shll
jb
inc
ljmp
sbb
mov
std
ret
xchg
or
add
scas
orl
fnstcw
push
push
out
inc
mov
adc
mov
sub
jge
push
mov
pop
push
xchg
push
sbbb
mov
add
push
sub
xchg
push
test
add
pop
cli
enter
or
in
pusha
dec
mov
push
push
or
adc
bound
test
fimuls
stos
sub
mov
push
test
sub
inc
jb
push
sub
fwait
repnz
xor
lds
push
cltd
mov
push
and
je
inc
jecxz
adc
sahf
add
leave
mov
and
cmpb
push
and
imul
int3
sbb
psraw
add
jmp
mov
fsubrs
lcall
or
shlb
or
add
mov
imul
rolb
rcrl
pop
loope
hlt
pop
mov
sbb
scas
xchg
out
popa
clc
sbb
mov
aad
push
iret
push
lds
repz
pop
adc
mov
lcall
inc
push
sbb
and
popa
xchg
int
testl
cmpsb
not
into
mov
add
and
mov
and
add
jae
rep
lret
mov
loop
in
iret
mov
bound
sahf
push
xor
leave
fdivrl
push
ss
xor
pop
cli
popf
xor
xchg
fdiv
lret
push
loope
jmp
sbb
roll
mov
fbstp
scas
les
ret
ja
fwait
orb
mov
outsl
out
push
sti
pushf
cmp
jo
push
in
jl
push
adc
in
sub
aad
lahf
jno
daa
xchg
pop
int
mov
dec
iret
cwtl
pusha
mov
jp
pop
sti
and
dec
das
jnp
dec
stos
and
cmp
les
in
adc
sbb
repz
xchg
cld
inc
push
push
mov
int
lret
sbb
out
je
dec
mov
pop
push
mov
das
loop
sbb
push
movsl
aaa
dec
out
inc
or
or
adc
sub
inc
push
leave
hlt
push
dec
es
fildll
adc
mov
and
sbb
testl
pop
sarb
shrl
sti
pop
outsb
sub
jns
dec
cmpsl
aas
int
add
fldcw
cmp
jge
aaa
das
push
cmpsl
sbb
mov
in
mov
daa
gs
xor
popf
scas
cmp
outsl
jmp
lcall
in
adc
pop
or
fistpl
aad
sti
push
mov
or
lods
fcoml
mov
int
in
inc
aad
push
repz
pop
testb
jp
repnz
fsubrl
das
xchg
xor
cltd
lock
sahf
mov
lcall
jae
sbb
mov
into
add
sub
and
mov
cmc
xchg
fcoml
add
mov
inc
mov
ljmp
inc
mov
xchg
xor
lcall
xor
jg
sbb
adc
push
cmp
sub
adc
adc
and
mov
mov
adc
decl
inc
daa
jae,pt
jnp
sbb
dec
cmpsb
sub
pusha
cs
ror
mov
repz
jle
jns
jp
push
mov
or
sub
repnz
iret
insl
add
jae
adc
mov
inc
scas
popf
std
pusha
fidivrs
lea
add
dec
inc
bound
testb
loope
imul
dec
pop
mov
es
aas
insl
dec
dec
popa
xor
sub
shll
xchg
cmp
insb
pop
xchg
sub
and
ds
jbe
int
test
dec
mov
jecxz
push
pusha
clc
inc
lret
std
iret
jns
andl
mov
btr
movsl
ss
shll
add
movsb
pop
xchg
rorb
iret
daa
jp
and
pop
imul
xchg
push
fidivs
and
into
les
lea
stos
pop
pop
cmp
shlb
inc
mov
ja
cmp
stc
test
mov
pusha
in
push
aas
or
cmp
cs
ficompl
daa
roll
sub
cmpsl
mov
fidivl
pop
sar
xchg
add
jne
xchg
test
and
mov
mov
push
lret
push
inc
int3
pop
mov
mov
inc
enter
cmpsb
outsl
inc
mov
push
lods
cmp
fistl
push
sub
imul
jmp
stc
mov
enter
lahf
pop
stos
inc
mov
sub
inc
inc
xchg
jl
lods
cld
lds
fcoms
push
push
nop
loopne
add
adc
add
enter
loopne
mov
cmp
hlt
shlb
jmp
movl
add
add
sub
sbbl
xchg
loopne
in
testb
sbbl
dec
inc
mov
pop
aas
int
cmp
push
scas
mov
pop
sub
inc
xchg
jle
test
add
or
insl
xchg
xchg
add
jnp
mov
int3
or
gs
sti
dec
sahf
xchg
and
cmp
mov
or
sbb
leave
fidivs
iret
mov
ret
push
xlat
mov
testb
adc
ret
hlt
jno
int
lahf
jmp
inc
into
or
dec
loope
xchg
and
mov
cli
mov
out
arpl
inc
xlat
fcomps
fs
jno
inc
jmp
mov
and
pushf
aad
jae
sti
ret
aad
mov
push
test
int3
push
push
test
insl
or
hlt
leave
sbb
sub
xchg
fwait
int
cmpsb
push
xchg
or
cmp
mov
test
scas
call
bound
mov
add
push
cmp
jne
adc
pushf
movsb
sbb
lods
cmc
dec
bound
shlb
cmp
push
mov
xor
cmp
fidivrl
pop
mov
jl
or
loopne
mov
jl
xor
cmp
enter
jns
mov
sbb
nop
dec
or
je
push
cld
sti
popf
lods
and
adc
and
mov
sbb
es
rcrb
in
mov
imulb
pop
pop
mov
push
jecxz
and
push
sbb
mov
es
dec
ds
mov
jns
cmp
mov
fidivl
shrb
test
aam
pop
push
sbb
daa
mov
jne
cmp
xchg
icebp
stc
inc
jb
cld
mov
inc
xlat
pop
loopne,pt
out
xchg
sub
mov
inc
in
ficompl
cld
pop
xor
or
and
ret
bound
fsubrp
inc
addr16
and
dec
xchg
add
enter
mov
jle
pop
ret
pushf
scas
xorb
addr16
fdivrp
jp
mov
xchg
out
stos
loopne
mov
int
mov
insl
xchg
adc
inc
xor
xor
lods
adc
je
ja
sbb
mov
adc
arpl
in
cmp
inc
std
enter
sub
pop
push
sbb
xor
icebp
testl
cmpsl
loopne
mov
lcall
mov
jae
xchg
movsl
inc
add
mov
imul
leave
rcll
sbb
int3
jecxz
mov
push
cmp
jmp
lcall
outsl
sbb
inc
sahf
in
call
or
pop
cmp
sbb
sti
ja
inc
add
sbb
fsubl
lds
add
leave
popa
into
pop
mov
sub
or
cmpsb
mov
ret
sub
or
ret
pop
adc
mov
mov
mov
mov
mov
iret
clc
lret
loope
cld
adc
xchg
adc
xor
add
pop
xchg
stos
inc
add
jp
adc
jmp
rorb
mov
fisttpll
xor
cli
jmp
ret
xor
cwtl
push
rcrb
jg
out
stos
call
mov
fiadds
mov
std
test
insl
dec
mov
das
bnd
mov
cmp
aaa
mov
jle
mov
push
fistpll
mov
xlat
mov
dec
and
sbb
dec
sahf
dec
pusha
push
sub
scas
lahf
in
lods
repnz
xchg
adc
negl
xchg
cmpsl
pop
aaa
pop
sbb
push
stos
add
sub
push
inc
xchg
mov
shl
jne
dec
jo
test
std
sahf
sub
mov
mov
xor
add
aas
dec
jne
movsl
fs
jne
mov
dec
andb
mov
in
inc
in
cmp
divl
dec
mov
loop
das
xchg
data16
sub
xor
pusha
iret
rcrl
lds
lods
mov
loope
addr16
pop
mov
pop
outsl
dec
fwait
ljmp
pop
out
iret
xchg
push
cmp
andl
fcoms
out
sbb
jbe
cltd
js,pn
popa
cmp
popa
sub
push
test
test
out
das
xchg
xor
mov
mov
out
inc
xlat
sbb
or
push
leave
adc
sbb
push
lock
pop
cmp
cmp
dec
mov
dec
sub
fstpt
loop
daa
cmp
add
xor
outsb
adc
sahf
gs
stos
sbb
sub
dec
push
into
or
and
push
xor
ss
sub
dec
daa
sub
ljmp
push
cmpsb
sbb
mov
mov
inc
lcall
sahf
adc
and
cld
lcall
jmp
jge
xchg
test
rcrb
sub
repnz
adc
inc
ljmp
push
xor
fbstp
and
mov
andl
push
fstpt
push
xor
aad
fimuls
nop
mov
cli
adc
iret
dec
fwait
repz
xchg
dec
in
enter
cltd
mov
ja
cmpsb
addr16
pop
pavgb
adc
add
loopne
push
sub
jbe
xor
push
cmpsl
sub
pop
aas
test
ja
fcmove
mov
push
mov
adc
cwtl
pop
push
test
punpcklbw
lcall
dec
xchg
mov
aam
xchg
sbbl
xchg
or
and
aam
repnz
out
arpl
orb
jns
inc
jno
pusha
cmpsb
or
mov
mov
fisubrs
xchg
cmp
ficoml
add
aad
pusha
popf
pop
shll
icebp
aas
loope
xor
mov
movsb
inc
sbb
mov
shrb
stos
xchg
shlb
cmp
push
movd
or
xchg
jecxz
mov
push
mov
sbb
or
into
dec
and
mov
hlt
cmpsl
lret
xchg
cwtl
and
push
es
cmp
dec
sti
fs
std
loop
lock
rep
call
cli
dec
sub
mov
xchg
popa
mov
push
movsl
inc
push
mov
xor
ja
or
lahf
jbe
stc
lods
faddl
sbb
inc
xlat
xchg
test
inc
stc
aam
sub
jle,pt
push
repz
pop
inc
testl
lock
xor
rcrb
rorb
push
dec
and
ss
bound
xchg
int
lahf
cltd
sbb
les
mov
data16
out
xchg
rorl
popa
xor
pop
popa
dec
bound
je
hlt
xchg
adc
and
pop
loop,pt
fmul
xchg
or
andb
pop
out
xor
sub
ret
shll
enter
add
daa
jmp
push
dec
cmp
inc
mov
xchg
das
cmp
leave
int
lock
fs
mov
jae
addr16
mov
fistl
mov
sub
les
ljmp
mov
sbb
sbb
mov
xchg
sub
icebp
test
xchg
adc
leave
inc
je
movsl
test
test
dec
dec
sub
in
repz
aas
pop
mov
cmpsl
sarb
aam
push
lds
rcrl
fsubp
test
mov
sti
insb
inc
ficomps
xchg
lods
jmp
or
sub
pop
lock
das
stos
jo
mov
stos
in
out
out
jp
mov
popa
or
stc
lea
xor
rol
mov
jns
fisubrl
das
xchg
ret
ljmp
lods
xchg
lret
mov
fdivs
pop
std
cmp
leave
mov
or
mov
pop
int3
push
xchg
xor
in
ds
clc
mov
and
adc
inc
or
add
sti
leave
test
mov
or
sub
jp
push
aas
xor
stos
shll
fs
mov
pop
mov
sbb
dec
mov
sub
push
mov
xchg
fnstcw
fdivrl
push
stos
add
cmpsb
mov
or
and
fnsave
push
xorb
xor
ret
sub
fidivrl
ds
cmp
mov
sub
or
push
sahf
mov
out
loop
mov
stos
jmp
fidivrs
push
xchg
fwait
xor
lea
mov
mov
pop
cmc
lea
or
lods
inc
push
loopne
filds
adc
xor
scas
xchg
sub
xchg
xchg
das
lods
jmp
jmp
popf
push
push
mov
jbe
daa
shr
or
das
push
insl
fstpt
imull
pop
xchg
sahf
pop
repz
inc
cmp
xor
add
jno
inc
xchg
xchg
dec
std
xorl
lock
jl
fwait
mov
push
stc
test
add
sub
pushf
add
sahf
andl
fisubrl
hlt
or
addl
int3
jns
test
popf
pop
adc
adcl
and
es
mov
fiaddl
push
lods
aas
movsb
adc
mov
call
mov
cltd
nop
push
cwtl
in
fbld
stos
movsb
stos
in
mov
rcll
rcr
xchg
bound
cmp
add
push
outsl
mov
and
pop
enter
fdivs
pop
test
in
data16
pusha
ss
pop
insb
repnz
out
mov
pop
mov
sbb
enter
mov
xchg
clc
nop
mov
clc
mov
icebp
mov
sbb
lods
aas
pushf
loop
adc
popa
clc
in
dec
jecxz
xor
jne
push
jp
mov
jbe
rclb
jo
pop
cli
pop
icebp
jmp
cmp
subb
sahf
xor
out
daa
mov
cmpsb
sti
mov
jmp
jmp
arpl
jg
mov
mov
cmpsl
jae
test
aaa
test
push
sbb
and
jl
loop
inc
mov
and
repnz
loop
out
test
es
mov
stc
dec
sbb
std
xchg
loope
xor
lahf
inc
fmuls
dec
hlt
mov
sbb
int3
aad
shrb
popa
call
movsb
xchg
fcompl
xlat
testb
ss
mov
in
je
xorl
cmp
in
pop
mov
adcl
je
lock
dec
aam
xor
pusha
mov
cmpsl
or
mov
and
sbb
push
leave
cwtl
cmp
jns
inc
fstpt
jns
sub
into
push
je
out
cli
gs
inc
dec
in
clc
or
les
xor
pop
dec
lock
cmp
mov
or
cmpsl
add
icebp
leave
pop
pop
flds
mov
or
mov
mov
mov
fsubrl
xchg
mov
or
aas
xchg
xor
mov
sarb
dec
adc
mov
and
int3
dec
sbb
stc
cmp
imul
movsb
push
movsb
addr16
mov
scas
in
mov
repz
shlb
sub
mov
jge
push
outsb
popa
sub
mov
mov
neg
rol
fistl
int3
fs
push
test
stos
xor
mov
ja
sub
add
and
pop
fiaddl
fdivrl
mov
call
lcall
mov
mov
mov
nop
sub
inc
fiadds
cli
mov
lods
filds
xor
sub
jmp
and
popf
in
pop
mov
out
mov
cmc
xchg
adc
shrl
es
cmp
adc
out
inc
push
hlt
jnp
mov
js
xchg
mov
fdivl
int3
pop
or
dec
push
pop
repz
shll
cwtl
shlb
inc
push
dec
mov
ds
mov
push
aaa
clc
push
sub
mov
std
or
xor
xchg
xchg
enter
mov
fwait
and
push
lahf
inc
iret
pop
test
sbb
popf
dec
mov
and
and
cmp
daa
repz
andb
lock
cmc
jne
icebp
and
and
add
fcmovb
pop
adc
adc
dec
xchg
and
ret
dec
jp
fistl
mov
lret
mov
int3
jg
dec
dec
sbb
scas
mov
orl
mov
mov
or
leave
cmc
xchg
sbb
xchg
jmp
shlb
mov
loope
pusha
repz
cmp
pusha
sbb
mov
lds
repz
and
lock
push
daa
aam
cmp
ja
call
enter
inc
mov
lret
lahf
test
pop
mov
enter
lock
or
sub
mov
dec
mov
mov
dec
jecxz
push
lret
or
sbbb
ja
push
push
add
iret
nop
imul
push
push
and
test
shll
cmp
mov
fs
shrb
dec
pusha
lret
test
ja
insl
jnp
fs
insl
inc
sbb
jl
stc
cwtl
adc
xchg
icebp
dec
psubb
push
cli
jl
fs
sub
hlt
push
ljmp
in
cmp
dec
and
cmp
sbb
inc
or
push
sbb
cmp
mov
lods
scas
cmp
in
test
mov
and
arpl
cltd
fldcw
push
js
dec
pusha
add
test
aad
mov
dec
stos
push
jns
shll
pop
je
call
scas
fucomp
mov
add
icebp
sbb
loope
push
movsl
aad
add
fldcw
das
inc
add
out
sbb
adc
xchg
xor
mov
sbb
out
and
mov
or
mov
enter
push
gs
inc
int3
jmp
push
mov
test
icebp
movsl
fcoms
sarl
jle
ds
lock
cmc
xchg
adc
mov
cmp
jge
jno
cmc
adc
lds
xor
mov
mov
pop
cmp
jae
push
call
pushf
push
jae
test
xchg
out
fldt
cmp
andl
outsl
shrl
xchg
outsl
mov
cli
jno
mov
adc
jns
adc
insl
add
mov
dec
inc
pop
sbbb
mov
ret
or
mov
in
jne
addb
pop
or
in
cld
cmp
scas
adc
fisttpl
dec
mov
jecxz
pop
cmp
jecxz
les
inc
int3
cmp
xchg
jmp
in
and
and
push
push
pop
mov
jg
hlt
fbstp
jle
cs
ss
fisttpll
push
cmpb
test
das
add
cwtl
stos
subl
nop
daa
push
fsubrs
addl
sub
out
inc
fsubs
pop
xor
xchg
or
fs
repnz
sbb
mov
sbb
imul
stos
popa
call
push
loope
mov
out
leave
inc
dec
lret
call
dec
adcb
sbbl
inc
adc
jmp
jmp
dec
iret
fisttpl
fwait
repnz
ja
push
adc
rcll
movb
or
jmp
movsl
sbb
mov
jp
icebp
stos
repz
xlat
add
pop
aad
imul
lret
push
mov
fildl
cmp
mov
cmp
aad
cmp
pop
push
ret
les
out
popl
loope
sub
fidivrl
jmp
push
or
loopne
push
pop
ret
inc
xchg
gs
mov
jne
mov
test
push
push
into
pop
inc
sti
test
push
and
jae
xor
rorb
shl
inc
pop
mov
iret
xchg
adc
jns
mov
sbb
adcl
mov
in
fldcw
insb
pop
dec
lcall
push
in
cmc
incb
lock
dec
cmp
stc
nop
stos
test
mov
mov
std
mov
dec
push
test
add
jb
aaa
mov
rol
sbbl
int3
loopne
repnz
xchg
mov
in
mov
repnz
ljmp
xor
testl
das
jle
stos
fnstcw
adc
lock
leave
nop
fcmovu
nop
mov
stos
pop
out
loopne
mov
repz
sahf
in
sarb
sarb
xor
imul
iret
jbe
dec
clc
in
push
xlat
sbb
or
loop
add
add
aam
pushf
data16
mov
fs
lea
pop
bound
adcl
or
popf
ljmp
add
xchg
pop
movsl
in
push
jecxz
pop
adc
mov
dec
mov
pop
loopne
add
dec
pop
loop
out
scas
out
imull
adc
or
jecxz
add
aas
push
scas
aas
add
cmp
xor
jmp
jne
jne
rclb
jne
xor
or
in
loope
out
dec
add
das
mov
mov
add
mov
sbb
add
mov
pop
sub
sti
movsl
cld
stc
imul
sub
adc
fimuls
mov
jge
das
xchg
mov
sahf
fwait
xor
xchg
imul
dec
adc
push
pop
and
testl
andl
inc
sbb
loope
mov
test
movsl
lea
aaa
pop
out
xor
inc
mov
sti
fwait
sarb
ja
cmp
or
inc
fists
mov
sbb
call
jae
sub
jp
sub
inc
jmp
cld
push
outsl
push
dec
fbstp
stc
jo
and
mov
sbbb
inc
imul
loope
mov
xor
sbb
and
xor
stos
das
jp
mov
inc
repnz
sub
dec
sub
mov
int
pusha
paddb
push
pop
pushl
jmp
or
cmpb
or
jle
ret
dec
lods
clc
aas
inc
xlat
jo
xor
outsl
push
jecxz
jp
out
mov
mov
rorl
popl
adc
ret
add
movsl
or
and
jb
jmp
fsubr
mov
mov
mov
mov
inc
hlt
gs
test
add
push
lods
aad
shrl
testb
std
mov
push
cmp
test
inc
fs
outsb
xlat
jbe
mov
mov
into
and
sarl
pop
pop
jmp
rol
daa
inc
push
jb
add
xor
js
int
ja
mov
xchg
mov
ficompl
sub
aad
sbb
cmp
cmp
sbb
hlt
out
add
repnz
in
inc
lods
xchg
sub
jae
jno
sub
arpl
jge
jmp
out
sbb
xchg
dec
and
dec
lcall
jg
rcr
dec
sbbl
outsl
out
mov
push
cmp
mov
cmp
mov
testb
cmp
ss
out
data16
leave
bound
dec
lock
jmp
or
aas
jbe
inc
lret
push
cld
outsb
inc
cmp
jb
aad
icebp
pop
and
add
and
and
add
adc
rol
pop
add
and
dec
mov
jns
lea
adc
iret
xchg
sbb
pop
add
add
ljmp
xchg
das
mov
ret
imul
xor
cwtl
dec
mov
repnz
and
lock
add
cs
jecxz
jnp
outsb
lods
imul
iret
test
sub
push
xchg
mov
inc
xor
bound
lcall
cwtl
pop
inc
das
enter
gs
sbb
insb
add
dec
idivb
rolb
adc
fmuls
enter
pop
lock
clc
sub
popf
inc
dec
faddp
cmp
subl
or
mov
imul
js
push
pop
scas
jns
loopne
pop
repz
mov
jmp
pop
adc
testl
cmp
lods
add
push
mov
enter
jno
sti
push
sahf
xchg
or
fucomp
mov
xor
mov
cmp
mov
inc
inc
adc
cmpsl
lahf
into
pop
sbb
cmp
sbb
aaa
sbb
int3
xchg
popf
sbb
inc
mov
pop
lock
pop
js
inc
adc
mov
fldenv
bound
push
dec
xchg
mov
leave
push
inc
push
mov
jle
or
and
loopne
push
mov
shlb
or
or
xor
iret
xor
fucomp
dec
out
xor
inc
int
pop
mov
sub
loopne
xor
push
push
sub
mov
mov
or
pusha
mov
pop
lahf
in
sti
sub
or
mov
cmp
cwtl
scas
pop
lret
sub
push
xchg
mov
in
iret
rcl
ret
in
cli
aaa
pushl
js
xor
stos
mov
out
mov
fmul
mov
aad
mov
add
and
adc
leave
idivb
mov
adc
mov
cltd
cmpb
mov
ss
cmp
shl
sub
pop
negb
aam
jg
push
adc
int3
jne
jg
mov
jnp
push
sbb
mov
ja
out
std
inc
sahf
cmpsb
push
add
mov
rolb
mov
int3
loopne
fucomp
test
xchg
popl
popf
clc
jbe
clc
mov
push
push
inc
icebp
insb
xchg
jnp
jecxz
stc
push
jge
fistpl
sar
mov
cs
mov
sub
insb
call
aaa
push
js
push
add
adc
xchg
jp
sub
std
aam
imulb
cli
lods
fldenv
sub
gs
mov
aas
dec
xchg
or
ds
fmuls
mov
arpl
mov
jne
outsb
push
pushl
daa
out
jne
ret
xchg
cld
jnp
xor
sti
push
pop
adc
in
dec
ja
pop
mov
and
rcll
loop
push
jmp
mov
mov
cmpsl
fdivrl
lods
jg
std
outsb
inc
stos
loop
jp
dec
rcll
ret
repz
repnz
inc
fnstsw
test
mov
gs
xor
andl
fldl
in
xlat
xchg
les
aam
les
xor
pop
shr
mov
fdivrs
or
inc
add
inc
xor
dec
test
pop
lods
cmp
aam
adc
xchg
or
pop
test
sahf
dec
shlb
jg
adc
xchg
fld
lock
shll
int
pop
jle
xchg
push
cmpsl
xlat
jno
pop
dec
call
xchg
pop
std
jne
mov
popf
bound
push
imul
outsl
and
cmc
gs
int3
aad
jge
jno
or
in
add
packssdw
lods
pop
scas
xchg
cmp
dec
icebp
rorl
int3
add
cmp
stos
pusha
aas
test
loopne
jns
push
ja
stos
shl
jnp
or
jne
stos
xor
mov
mov
or
mov
aaa
push
out
push
rorl
pushl
clc
dec
push
and
fstp
xchg
fiadds
repnz
lods
mov
std
cmp
idivb
xor
je
lea
dec
inc
scas
inc
cltd
out
movsb
out
adc
add
popa
push
sub
sbb
cld
call
and
lahf
dec
loop
cmp
adc
push
inc
popa
mov
cwtl
pop
sbb
lret
xor
pushf
inc
jne
js
push
mov
mov
fstpt
mov
push
jno
xchg
insb
ret
xchg
ds
clc
adc
decb
pop
pop
popf
sub
enter
mov
inc
loop
pop
dec
out
xchg
aad
lret
loope
dec
ss
push
shll
or
xchg
sub
push
mov
ljmp
sub
xchg
push
mov
pop
mov
xchg
sbb
jl
cmp
jmp
xchg
icebp
jo
cld
out
repnz
jmp
adc
xor
sub
and
mov
and
cltd
movsl
xchg
pop
orb
subb
rorl
pop
or
xchg
mov
add
test
in
pop
int3
jmp
or
jl
dec
imul
jg
lcall
jbe
gs
out
xchg
in
mov
adc
sbb
or
pop
pusha
icebp
or
pop
pop
es
jl
movsb
addr16
sbb
xor
xor
call
sub
xorps
and
jge
push
add
push
cli
mov
inc
pop
lret
and
lods
mov
fisubrs
cmpsb
xchg
jecxz
xor
mov
data16
xchg
mov
popa
cmp
rcrb
mov
jp
sti
push
cmc
pop
fildl
xor
ja
adc
xchg
and
sub
push
sti
fildl
mov
mov
pop
out
ret
and
addr16
shll
add
pop
jae
adc
out
pop
loopne
aas
cli
xchg
mov
pop
clc
call
mov
idivb
inc
mov
xchg
add
push
dec
jmp
xor
mov
xchg
out
mov
mov
pop
jae
int
cmp
es
ljmp
inc
push
jbe
pop
ret
xchg
pop
dec
cmp
fsubrs
push
in
divps
dec
insb
cmpb
push
mov
pop
test
cmpsl
scas
pop
pop
addr16
out
sbb
movsb
mov
movsl
inc
imul
icebp
xchg
test
loopne
dec
adc
pop
ss
popa
lret
fdiv
cmp
mov
and
jmp
test
std
mov
cmp
js
xor
pushf
imull
xchg
jmp
ret
sbb
fimuls
ret
dec
sbbl
add
xchg
cwtl
es
sbb
mov
pop
or
push
cmpsl
sub
or
add
sbb
inc
dec
addr16
adc
clc
or
pop
mov
inc
iret
dec
xchg
sub
popf
mov
fs
fisubl
inc
add
and
or
lods
ljmp
ret
xchg
bnd
fnstsw
out
cmp
pushf
lahf
out
xchg
add
xor
ja
das
or
loope
lods
fcoml
roll
or
je
das
adcb
push
insb
mov
out
or
adc
movsl
out
test
in
stos
mov
dec
fidivs
adc
popf
or
clc
dec
daa
lea
repz
shlb
bound
ja
jo
lret
jg
xor
inc
mov
xor
sbb
shl
dec
push
push
aad
mov
bound
jecxz
scas
data16
pop
add
arpl
pop
add
pop
xor
add
rcl
push
imul
clc
das
mov
adc
fcmovu
and
jbe
insl
xchg
clc
stc
adc
idiv
push
lods
inc
pop
push
sub
push
and
mov
fidivs
stc
sbb
sti
inc
add
pushf
sub
addr16
pop
idivl
push
pop
adc
add
lock
rorl
outsl
lea
jmp
pop
mov
xchg
cwtl
and
call
cmp
out
sbb
movsb
lds
sub
out
das
pop
hlt
jge
pop
xchg
popa
aaa
mov
jb
xor
dec
shll
sub
cli
das
push
lcall
push
test
lret
sbb
mov
cs
mov
jle
sub
test
pop
mov
jo
mov
idivl
jne
jo
mov
aad
cmc
adc
dec
or
jge
jg
jle
and
push
cltd
mov
push
jl
clc
adc
ficompl
sti
cwtl
pop
cmp
lahf
dec
and
mov
xchg
push
mov
ja
jnp
imul
negb
sub
fistl
and
xor
leave
xorb
popf
fmul
dec
sarl
add
lret
js
inc
push
jle
mov
cwtl
rol
mov
imul
push
addr16
or
sub
sbb
or
cmp
mov
shrb
xchg
pop
imul
jecxz
inc
xor
pop
push
mov
aam
testb
scas
fidivrl
pop
ret
cltd
sub
out
xor
in
push
sub
mov
inc
addr16
pushf
lock
movsl
pop
jae
jmp
xchg
dec
pusha
mov
pop
loop
xlat
cmpsl
ds
adc
push
xchg
frstors
push
lds
push
ss
ds
and
scas
cmp
inc
jecxz
mov
adc
bound
xchg
xor
inc
aam
xchg
outsb
fs
push
int
cmc
cltd
mov
push
into
enter
addb
movsl
mov
fdivs
shll
push
repz
sarb
dec
mov
jbe
addr16
mov
mov
fdiv
mov
mov
jne
jb
loope
lea
mov
out
stos
xor
jbe
xor
rclb
xchg
call
sub
inc
int
mov
pop
adc
inc
lret
into
movsl
jb
pop
inc
inc
mov
and
cmp
les
int
pop
mov
inc
scas
sbb
dec
loop
xlat
pop
out
shll
inc
or
rcl
stc
mov
lcall
pop
mov
ljmp
mov
roll
fcmove
pop
or
in
and
and
jns
jbe
sbb
xsavec
and
pop
aam
sti
dec
aam
mov
jmp
cmp
pop
in
jmp
and
dec
pop
sbb
lods
ljmp
pushf
push
mov
fistps
insb
pop
loope
xor
pop
loope
stos
in
add
ja
std
movsb
sub
push
pop
je
pop
mov
lret
dec
mov
push
stos
icebp
xchg
jge
insl
stos
mov
and
add
cs
xchg
add
imul
loop
inc
mov
mov
or
ss
imul
fildl
je
dec
jno
repnz
shll
xchg
jmp
xchg
aad
push
nop
xchg
cmc
xchg
in
repnz
mov
sarl
sub
call
cs
pushf
in
sbb
pop
sub
insl
fwait
insl
adc
xchg
xorb
cltd
mov
testb
xchg
mov
add
loopne
cmp
rclb
or
xor
inc
pop
jb
mov
sbb
add
xchg
xchg
mov
adc
in
jge
lahf
in
mov
in
and
and
sub
movb
push
dec
add
addr16
xchg
cmp
mov
bound
int
dec
sbbl
idivb
in
jl
int3
add
shrl
xchg
lea
movsb
ret
xor
mov
push
mov
mov
mov
jnp
fldl
jmp
in
jne
xchg
imul
mov
shll
bound
fistps
mov
in
das
jno
fldl
leave
and
lret
dec
je
jle
call
jne
fimuls
in
insb
shll
jnp
or
and
jge
push
xor
pop
movsl
push
arpl
lahf
scas
jp
fpatan
or
lock
adc
pop
sbb
jmp
jg
aaa
sbb
xor
sub
int3
pop
rorb
hlt
push
insb
arpl
mov
loop
je
mov
hlt
xchg
iret
data16
push
pop
call
pop
lds
adc
insl
push
inc
popf
mov
xchg
testl
push
xor
push
rcr
adc
pop
add
mov
jae
or
outsb
xor
lret
int
and
pop
les
push
aas
mov
jl
cmc
outsl
rolb
mov
mov
enter
sub
clc
ficompl
jg
sbb
loop
loopne
pop
fcmove
rolb
popa
mov
pusha
and
leave
sub
sti
nop
pop
sub
std
pop
xchg
xor
add
jb
cltd
jo
rorb
xor
bound
push
inc
dec
popa
xchg
sub
jmp
cli
xchg
aad
dec
in
ss
and
mov
test
shrl
fldcw
pop
sbbl
lret
test
xor
sbb
xor
fiaddl
jne
fnstsw
in
ficoml
mov
arpl
mov
mulb
push
and
or
inc
lods
ret
hlt
push
ret
lods
rol
mov
inc
mov
cmp
loopne
int
test
push
fwait
insb
mov
pop
ljmp
out
int3
outsb
test
in
insb
push
mov
pop
lahf
shrb
xchg
push
push
xlat
pop
ret
js
jecxz
scas
pop
jb
cmp
cmpsb
xor
inc
loopne
cmc
ljmp
dec
xor
pop
mov
faddp
out
loopne
adc
push
lods
insl
insl
add
es
xchg
inc
fadd
jmp
fbstp
mov
sub
pop
jnp
or
mov
inc
daa
sti
dec
mov
mov
inc
mov
ret
sbb
movsb
cld
push
xchg
jecxz
scas
call
cmc
sbbl
xchg
out
or
dec
ja
aaa
mov
cmp
sub
ja
in
addl
rcrl
or
xchg
in
hlt
push
mov
dec
or
and
repnz
cmp
sub
cmp
sub
and
test
lahf
jbe
clc
rorb
sar
out
into
jne
lds
addr16
jns
jmp
push
inc
push
cltd
out
das
aam
push
mov
sbb
cmpsl
jp
mov
push
adc
in
inc
mov
mov
pop
adc
jp
xor
in
gs
xchg
add
movsl
sbb
mov
mov
clc
cld
bound
add
jge
dec
and
jmp
les
stc
cmpsl
jae
jmp
and
mov
test
jl
jge
subl
outsb
stc
or
add
and
xchg
add
push
call
sbb
insb
pop
xchg
enter
mov
pop
xor
mov
aaa
xchg
int3
sbb
in
dec
les
jb
xlat
and
mov
jb
mov
std
and
hlt
sbb
jnp
iret
xchg
ret
movsb
cs
mov
stos
clc
int
int3
push
pop
test
in
into
fidivs
xchg
jge
adc
sti
mov
fs
mov
push
inc
ficoms
std
in
cmp
in
jo
insb
sub
cmp
mov
bound
imul
aad
mov
adc
mov
pop
repnz
push
xlat
or
adc
pop
mov
cmp
fldcw
cmp
adcl
dec
loope
mov
xchg
fdivl
add
jne
sbb
daa
and
cmc
imul
cmp
dec
lock
adc
cmc
jne
les
add
push
mov
cli
subl
icebp
xor
insb
pop
jle
inc
mov
shrl
xor
push
mov
adc
inc
cwtl
test
das
shll
add
jae
mov
inc
mov
scas
push
and
into
gs
push
pop
scas
lea
loop
dec
icebp
mov
lods
sub
sbbl
fisubs
jle
jecxz
xor
inc
adc
xor
int
xchg
jb
das
popa
add
jb
lahf
xchg
lods
fs
xor
idiv
and
shld
aad
cmp
lret
ljmp
out
ds
stc
scas
jb
imul
rcrb
loope
ret
gs
xor
std
movsl
and
sub
push
mov
mov
mov
xor
push
hlt
mov
lods
cs
jne
stc
sub
jle
ror
dec
add
lock
inc
ret
sub
int
xorb
or
adc
mov
divl
lret
bound
xchg
xor
cmp
mov
scas
sbb
lahf
frstor
je
inc
dec
cmp
imul
pop
or
dec
icebp
cmc
cmp
lods
cmpsl
dec
aas
pop
dec
sbb
popa
xchg
add
push
js
xchg
addl
sti
clc
sub
push
xchg
dec
shl
in
xchg
std
loope
ljmp
pop
fwait
dec
dec
cltd
cmp
loopne
int3
or
xchg
push
mov
aas
mov
xor
add
push
xchg
mov
les
ret
pop
adc
sbb
iret
fs
dec
jecxz
xor
jno
cmp
mov
ljmp
sub
dec
cmp
adc
jg
mov
push
and
jae
mov
pop
xchg
loopne
das
ret
sbb
lea
pop
xor
cli
xchg
out
inc
lret
adc
jae
out
inc
pusha
test
sub
push
imul
xor
inc
xlat
jmp
sub
sahf
xor
test
in
enter
nop
push
lret
mov
out
adc
js
xchg
sbb
daa
insl
leave
aaa
ror
clc
movsl
addr16
lea
rcrb
lock
jno
mov
push
push
arpl
jmp
mov
test
sbb
cli
inc
fucomi
ja
imul
mov
orb
adc
xlat
divl
lock
jb
mov
ja
add
std
cltd
ja
pushf
jo
test
adc
outsb
inc
xchg
stos
jbe
mov
xchg
cmp
jl
sub
xchg
xor
xchg
push
fimull
mov
and
sti
test
arpl
int3
xor
jne
mov
pop
add
mov
gs
dec
aas
xchg
popa
int
mov
test
mov
push
mov
mov
mov
imul
sub
sub
insl
pop
out
loope
mov
hlt
jg
or
push
mov
lods
test
mov
lret
push
pusha
in
sbb
shlb
cld
ds
mov
adc
aad
push
pop
pop
mov
mov
inc
call
cmp
stos
cwtl
xor
mov
jle
add
pop
pop
lea
fimull
or
push
sti
pop
test
mov
mov
adc
sbb
scas
or
inc
cmp
aas
mov
adc
push
cmc
sahf
subb
mov
ja
push
pop
dec
jb
mov
push
mov
daa
pop
dec
fidivs
mov
fists
push
sub
mov
lret
jmp
stos
in
jo
pusha
test
pop
mov
push
out
ds
fists
jne
jns
test
mov
les
loope
jne
jb
xchg
stc
mov
sbb
jle
lcall
cmp
mov
xchg
lea
cmp
addr16
in
xchg
push
cwtl
lods
xor
ljmp
fmul
cltd
jnp
adc
sti
pop
adc
or
inc
push
xchg
dec
lods
mov
inc
imul
data16
adc
xchg
ret
popf
notb
mov
mov
adcl
push
push
push
enter
mov
dec
pop
and
lds
out
loopne
lcall
xchg
out
data16
shll
shr
pushf
mov
test
rcr
fbld
pop
fisttps
shl
addb
adc
mov
in
push
cli
les
shlb
aaa
mov
je
ret
lods
cli
lods
add
push
rep
and
cmpsl
out
cmp
in
cmp
fcomps
jmp
loop
std
cld
dec
es
fimull
inc
rorl
lret
inc
jnp
and
pushf
ret
mov
sub
and
into
xchg
mov
fimull
int
lods
cmp
xchg
inc
inc
stos
cmpsb
std
je
in
std
mov
fdivs
insb
in
cltd
and
dec
mov
push
and
or
movsl
icebp
inc
idivb
inc
mov
std
and
mov
xchg
mov
popa
or
cmpl
mov
frstor
dec
add
clc
adc
push
cmp
lahf
jmp
or
dec
push
pop
les
sbbl
mov
popf
jle
fiadds
sbb
push
push
ret
test
add
xor
and
push
sub
sbb
pop
out
icebp
loop
and
cmp
mov
insb
add
leave
ret
push
or
xor
sub
sbb
sbb
push
sub
imul
jg
adc
push
sbb
xchg
mov
xchg
xor
xor
cmp
add
cmpsb
xor
fists
adc
xorl
stos
and
xchg
xlat
loop
or
addr16
fdivl
fxch
jo
ljmp
sub
or
call
cltd
jmp
sbb
inc
or
mov
lock
cltd
fwait
test
fisubrl
pop
adc
xchg
aam
push
ret
call
out
pushf
push
ds
lods
cli
xor
lods
daa
add
sarb
inc
mov
loopew
idivb
pop
out
imul
das
cmp
cld
dec
popf
bound
shl
mov
jmp
mov
or
mov
adc
scas
cli
xchg
inc
push
jb
mov
test
addr16
ljmp
imul
dec
dec
jmp
mov
and
mov
sti
sub
push
jge
shrb
sbb
iret
insl
hlt
popf
in
stos
dec
lods
and
push
jle
cmovbe
add
in
lods
mov
test
repz
xchg
pusha
push
sbb
repz
jecxz
idivl
add
es
lods
mov
dec
aaa
ret
mov
inc
orl
push
sbb
fldcw
or
out
cmp
push
sti
popa
test
xchg
fwait
and
push
sbb
daa
loope
movups
jo
ljmp
in
sbb
rolb
dec
pop
xor
bound
jle
cmp
xchg
pop
inc
shrb
inc
sbb
inc
les
add
insl
inc
jp
shrb
and
add
inc
lock
adc
shrb
or
mov
es
in
or
push
shrb
or
pop
out
inc
xchg
inc
xchg
sbb
jecxz
dec
sar
in
add
sub
faddl
xchg
dec
cmpb
cli
rorl
adc
adc
mov
testb
sahf
out
movsl
push
mov
fwait
jmp
orl
xor
ljmp
pushf
and
or
in
push
repnz
dec
push
cmpsl
popf
mov
mov
push
test
test
pop
stos
push
jge
sub
pop
sti
outsb
aad
cmp
sub
fwait
push
jbe
inc
or
dec
mov
push
call
mov
xchg
fstpl
cmp
jae
push
int
cmp
push
cs
outsb
jmp
fadds
adc
push
jecxz
mov
imul
mov
cli
smsw
jmp
or
dec
adc
mov
mov
mov
or
call
sti
shrb
lds
mov
mov
rcr
pusha
aaa
pop
loop
inc
fdivrl
sub
orb
cmp
or
inc
rcr
pop
jecxz
cmove
sti
xchg
adcl
int
movsb
sbb
inc
and
stc
dec
inc
fadd
sahf
sti
fsubp
pop
js
cs
pop
das
ja
xchg
repz
push
sbb
das
sub
jmp
repz
and
leave
jmp
je
int
les
pop
or
mov
and
sbbl
and
cltd
std
das
data16
outsl
cltd
xor
jp
adc
push
sbbl
sbb
testb
rorb
pop
outsb
scas
mov
sbb
add
in
jmp
mov
and
cltd
cmc
mov
mov
cmp
push
stos
fwait
insb
sbb
test
dec
nop
jnp
leave
and
inc
mov
test
ja
cmpsl
push
add
jbe
fucomip
es
scas
lahf
divl
sbb
xchg
iret
mov
add
or
aad
xor
push
incl
jne
xchg
out
adc
in
adc
xor
sub
shl
mov
mov
test
mov
xchg
scas
mov
movsb
cmp
int
loop
ret
inc
and
cli
mov
xor
shlb
shl
and
and
push
mov
adc
sub
mov
jne
outsl
xor
jno
jl
rol
sti
cmpsb
fsubrl
pop
mov
out
xchg
aam
dec
bts
mov
and
paddusb
xchg
into
xchg
jge
pop
sti
mov
cmp
lods
mov
test
cmc
lret
inc
jns
shlb
mov
mov
lret
jge
pop
mov
adc
cmc
fwait
aaa
daa
mov
jno
xlat
filds
test
leave
inc
addr16
les
jb
nop
sub
cmp
ja
jo
imul
call
pop
xchg
pop
dec
add
into
xchg
out
mov
sbb
dec
lahf
adc
sbbl
scas
mov
jnp
mov
popf
movsl
push
insl
repz
scas
jno
mov
fldt
imul
dec
cmp
inc
cmpsb
lock
nop
jb
or
lds
clc
test
or
test
add
outsb
testb
inc
mov
test
iret
push
andl
push
jl
lcall
lcall
xor
jecxz
or
xchg
pop
sbb
xchg
pop
imul
movsb
cmp
arpl
dec
nop
inc
jae
shl
or
inc
adc
cmpb
jno
lds
xorl
push
cli
xchg
cmc
cltd
mov
dec
push
sbb
imul
cmp
insb
test
ret
jb
sub
cmp
out
add
mov
inc
ficoms
mov
push
mov
inc
fcmove
dec
arpl
push
les
lods
movsb
loop
mov
mov
incl
xor
mov
inc
mov
and
mov
xchg
mov
enter
enter
aaa
or
mov
fsub
ja
loop
mov
xlat
movl
cld
enter
cwtl
gs
leave
mov
popf
push
cmpl
add
inc
es
push
or
popa
out
fmuls
cmp
lods
les
aas
mov
fidivl
in
cmpsl
popf
inc
clc
jbe
ret
and
push
xorl
movsl
add
jo
je
jno
adc
popa
jnp
push
andb
js
mov
jns
push
test
icebp
mov
xchg
sub
repz
sarb
dec
flds
iret
data16
rorb
mov
mov
jns
adcb
sbb
dec
cmc
out
dec
incl
out
jg
cmc
mov
fcomip
stos
jmp
inc
loop
xchg
lahf
out
in
hlt
jmp
mov
xor
and
les
dec
xorb
out
icebp
mov
xchg
pushl
cltd
nopl
pop
cmp
iret
clc
out
repz
fs
adc
sub
cwtl
das
xchg
addb
shl
repnz
inc
jno
xchg
adc
mov
jmp
or
out
xchg
dec
jno
andl
addr16
mov
sbb
push
sbb
xchg
insb
add
sub
test
pushf
jb
in
enter
and
lcall
fldenv
push
arpl
addl
xor
dec
fcomps
and
in
testl
inc
aad
cmc
or
adc
xchg
pop
fcmovne
fidivrs
pop
fmulp
mov
add
fidivs
movsl
xchg
cld
shlb
pop
iret
sub
cmp
pop
insb
xchg
fnstenv
sbb
cld
or
clc
subl
cwtl
das
sbbl
push
mov
fcmovu
jne
sti
and
movsl
out
clc
std
xchg
push
sub
adc
push
jae
cltd
or
sbb
mov
or
cmpsl
jae
jae
xchg
xchg
out
mov
push
insl
jl
and
mov
dec
addr16
and
mov
test
xchg
mov
jbe
mov
stos
outsl
cmp
jb
dec
in
push
gs
and
lahf
xchg
in
mov
mov
xchg
insl
fmuls
add
test
imul
add
push
jmp
shr
or
sbb
cmp
jg
dec
jmp
and
mov
sbb
mov
cli
rorl
jecxz
mov
jmp
test
das
adc
movb
jbe
cmpb
daa
daa
mov
mov
ffree
push
mov
mov
orb
aaa
dec
mov
xchg
pop
mov
adc
mov
push
adc
lock
fs
push
cmpsl
lds
rorl
insb
sti
adc
pop
mov
and
dec
adc
notl
pusha
mov
popa
add
mov
mov
xlat
les
fcmovnu
jo
arpl
jno
clc
push
fmull
push
iret
incb
xor
ljmp
fbld
int
into
xchg
cmovns
jb
icebp
mov
mov
in
cmp
in
adc
add
cmpsl
mov
add
mov
mov
lods
out
sbb
dec
cltd
mov
cmp
mov
mov
dec
rcrb
inc
fld
jne
lods
movsl
call
xor
divl
fistpll
pop
xor
mov
dec
jmp
jp
out
stos
cli
adc
push
inc
pop
jp
xchg
sub
bound
cmp
hlt
mov
shlb
lds
fsts
js
fisubl
add
lret
pop
outsb
mov
sub
xor
mov
mov
mov
xor
or
jle
mov
adc
lods
sub
dec
xor
mov
lret
jne
cld
xor
in
fwait
lock
dec
lret
xchg
add
push
outsl
sbb
sbb
xor
fnstenv
bound
or
cld
xchg
movhps
dec
out
mov
xor
mov
addr16
mov
pop
js
jmp
cltd
mov
hlt
jmp
rclb
ja
jg
and
call
mov
cmpsb
mov
stos
or
xor
adc
and
pop
out
push
inc
or
ja
jmp
int3
js
jp
test
sbb
loop
add
push
data16
inc
or
xchg
aaa
jl
jae
cmp
arpl
stos
mov
and
jmp
out
test
ljmp
cmp
xchg
jmp
insb
aad
pop
nop
mov
fidivl
test
mov
in
in
xor
inc
cmp
lret
dec
xchg
fs
xchg
dec
add
cwtl
mov
add
push
mov
xor
pop
or
cltd
xor
enter
mov
mov
sbb
clc
jp
cmc
pop
hlt
pop
or
fmull
ds
mov
xchg
jmp
xchg
adcl
sbb
inc
pop
imul
and
xchg
cmp
inc
push
jecxz
leave
cmpsl
popl
stos
shlb
pop
jmp
dec
mov
jae
jb
inc
inc
test
fst
mov
xchg
es
pop
xchg
push
nop
gs
inc
or
andb
cltd
mov
sub
xor
pop
pop
stc
aam
jmp
inc
mov
mov
lods
mov
sarb
ud0
and
inc
fdivr
gs
scas
cmp
mov
cmp
out
vminsd
sbb
lcall
push
push
xor
and
pop
rcll
adc
inc
in
xchg
mov
adc
and
fwait
adc
adc
idivl
shlb
xchg
add
inc
gs
xchg
jecxz
adcl
xlat
lods
and
dec
xor
push
shrl
pop
cmpsl
rcrb
es
sbb
and
negl
xchg
insl
sub
cmp
clc
inc
negl
imul
fbld
mov
jae
fnsave
sbb
mov
insl
adcb
mov
add
imul
jno
ret
pop
cmpsb
xchg
cmp
mull
add
rol
adc
pop
dec
pop
adc
loopne
pop
mov
inc
push
mov
or
iret
sarb
mov
cmpsb
mov
jnp
sub
mov
dec
push
fnstenv
loopne
jnp
adc
mov
xchg
cli
ror
xor
arpl
xor
mov
mov
inc
pop
pop
fidivrl
lret
jns
sahf
jg
xchg
dec
jns
rcl
add
jmp
fldenv
cwtl
xchg
adc
leave
mov
les
outsb
or
lret
ljmp
or
stc
and
push
jo
int3
ficoml
in
lret
stos
jge
add
push
fs
shll
pop
dec
cmpsl
jne
sub
in
in
or
pop
mov
loope
jl
repz
xor
aaa
es
ret
xlat
jo
stc
in
lds
fdivrl
iret
or
imul
aam
cmp
lahf
dec
fsts
jecxz
mov
add
add
leave
xchg
fdivs
adc
push
fadds
js
dec
mov
testb
xchg
idivl
mov
and
test
scas
data16
mov
arpl
aaa
lret
mov
ficoml
cld
pop
mov
out
adc
mov
sbb
adc
mov
fcoms
leave
and
mov
cli
and
push
fsts
adc
cli
xchg
or
sbb
adc
loopne
xchg
or
hlt
sbb
testl
and
mov
cmpsl
mov
in
nop
pop
pusha
stos
lds
repnz
cmpsl
and
xor
xchg
in
adcl
sbb
inc
xor
inc
pop
mov
cmc
aam
sub
lahf
movsl
sub
jo
and
mov
mov
sub
and
push
xor
add
adc
sbb
sbb
out
in
add
inc
xor
clc
ljmp
mov
je
insb
sub
cwtl
or
call
xor
sahf
and
xor
mov
dec
mov
loopne
in
push
loopne
cli
pop
sub
push
stos
jnp
push
sbb
adc
les
or
xchg
sub
inc
pusha
cwtl
fisttpll
int3
loope
xor
xchg
rep
jne
mov
aam
xor
sub
rcl
add
nop
fs
cmc
adc
mov
adc
shlb
jne
dec
iret
pop
lahf
add
xchg
sbb
pushf
pop
adc
repnz
call
hlt
sbb
pop
pop
adc
fwait
std
xor
jmp
sbb
movsb
in
pushf
mov
and
mov
mov
adc
int
push
mov
sub
inc
aaa
pop
sbbl
aam
test
and
aaa
fldt
cld
adcl
sub
ljmp
sub
in
pop
in
outsl
std
pop
in
or
iret
ljmp
dec
fwait
xchg
dec
aam
loopne
pop
push
or
cmp
jmp
mov
sbb
mov
lods
insb
js
mov
mov
push
std
jp
or
dec
dec
mov
inc
cmp
cmp
xor
mov
and
jno
mov
mov
mov
fwait
mov
icebp
fisubrl
rorl
push
dec
sbb
sbb
js
clc
fmuls
mov
sbb
sti
dec
push
cmpb
fnstcw
xchg
xor
push
int3
dec
cmp
push
xor
add
int
jmp
sbb
stc
je
fwait
or
mov
call
mov
mov
mov
fistl
fbstp
cltd
mov
push
lock
popa
loopne
inc
cmp
add
test
xchg
cmc
jecxz
pop
sbb
jo
xor
fimull
mov
push
scas
test
sbb
mov
test
sub
mov
fsub
jne
dec
inc
ds
out
xor
lret
jb
mov
adc
jp
cmc
pop
jne
sbb
adc
push
in
cmp
xchg
xlat
mov
jae
adc
inc
or
scas
clc
jp
scas
jb
jle
test
xchg
das
pop
loope
scas
jl
sbb
in
sbb
sub
fwait
inc
mov
cmp
dec
movsb
repnz
xchg
out
jmp
jae
push
or
mov
xlat
mov
insb
jecxz
imul
mov
mov
or
or
call
or
dec
or
fisubs
mov
xor
inc
aam
push
out
mov
mov
mov
xor
cwtl
inc
mov
xor
js
sti
sahf
or
pop
jno
or
jnp
mov
cmp
subb
jnp
and
xchg
sbb
mov
iret
fidivs
jg
loopne
and
aam
lcall
inc
adc
sbb
xor
xor
sub
mov
xor
mov
ljmp
gs
push
add
push
push
push
bound
addb
outsl
lock
or
sub
jns
lret
into
movl
adc
mov
add
sub
out
gs
movsb
fs
push
rcrb
adc
and
jae
push
push
call
xor
inc
aad
mov
bound
lahf
lea
les
aaa
cmc
mov
jbe
ds
xor
xchg
pusha
out
enter
stos
loope
cli
pushf
pop
movsl
cmpsl
movsl
inc
mov
ja
mov
scas
aad
fwait
fs
cli
pop
inc
mov
mov
mov
xchg
add
and
int3
ret
outsb
loope
sub
ja
xlat
sti
pop
cmovl
in
lea
mov
or
loope
hlt
sarl
insb
pop
in
xchg
mov
xlat
int
fcmovb
shl
clc
iret
jecxz
fdivs
lock
sbbb
lcall
pusha
stos
std
pop
sbb
adcb
and
push
out
add
pop
dec
pop
les
jmp
sub
push
cmp
mov
add
fs
mov
lcall
inc
xor
inc
lcall
mov
mov
popa
mov
int
les
jmp
and
outsb
pop
fidivl
mov
or
mov
popa
xor
mov
dec
dec
cwtl
daa
mov
mov
int3
insb
sub
xor
in
insb
pop
mov
mov
into
pop
cmp
push
clc
pop
test
cli
push
mov
pop
in
les
lds
mov
pop
in
xor
sub
push
rcrb
lock
xchg
inc
insl
push
mov
adc
cmp
int3
or
jbe
add
cld
nop
fldl
sub
ret
enter
outsb
pop
and
lods
push
mov
sbb
es
sbb
xor
pop
into
enter
sub
movb
loop
inc
cld
mov
sbb
xchg
xor
es
testl
mov
sbb
inc
insb
adc
addr16
jne
or
and
jmp
fcompl
xor
sahf
or
test
lahf
ret
xor
lea
out
add
cli
or
test
cmpsb
xor
int
mov
scas
mov
daa
inc
adc
lea
arpl
sbbb
neg
daa
sbb
enter
test
fbld
sub
or
xor
and
std
clc
inc
dec
mov
mov
pop
mov
gs
scas
loopne
sbb
aaa
cmp
cld
pop
cs
popf
leave
cld
push
into
popa
inc
and
rclb
lahf
fisubs
or
xchg
insl
mov
jp
ficoms
pop
inc
addr16
xor
sarl
fldcw
cli
lret
dec
outsl
les
sbb
stc
cmp
out
lods
push
adc
pop
lock
fs
cmp
mov
xchg
mov
push
inc
jmp
scas
std
xor
rcrb
bswap
mov
jge
xor
pop
or
ss
fiadds
sbb
nop
add
pop
mov
mov
push
cmpsl
out
sti
push
nop
aaa
fcmovbe
jae
imulb
pop
jg
push
aad
rclb
jns
rcl
mov
je
ja
or
fisttps
adc
sbb
fwait
and
in
loope
jmp
dec
pop
mov
cmp
pop
std
sub
or
cmpsl
rcrl
sbb
add
loopne
ja
jnp
push
rclb
js
bound
fimull
push
sub
dec
mov
lock
mov
mov
pop
xchg
jp
cld
sbbb
pop
stc
rolb
lahf
sbb
repnz
push
and
and
pop
cmp
ja
add
or
out
ss
call
lret
mov
repz
jb
daa
in
mov
push
iret
data16
xor
insl
in
orb
adcb
mov
pop
rcrl
cli
loopne
es
push
jecxz
aas
adc
sti
and
push
push
loopne
and
ret
mov
ljmp
pop
insb
fsubrl
outsb
xor
adc
push
frstor
cmpsl
into
xchg
sub
fldt
dec
in
shll
add
jle
jbe
mov
iret
cmp
mov
inc
sub
cli
fcmovbe
insl
or
arpl
imul
daa
repz
and
and
mov
dec
gs
jb
inc
dec
inc
sub
outsl
xchg
sahf
cwtl
and
mov
test
or
test
lret
inc
in
jle
xchg
iret
sbb
mov
push
es
jmp
jb
push
and
jne
xor
flds
push
adc
or
sarl
adc
pushf
aaa
jge
mov
pop
or
fsubs
pop
sbb
mov
dec
jae
shl
push
push
jecxz
stos
inc
sub
stc
mov
push
cli
popa
adc
or
add
jbe
lods
test
insl
pop
hlt
pop
xchg
mov
ret
xchg
push
xchg
rcll
mov
dec
mov
mov
int3
insl
adc
outsl
daa
shlb
dec
jno
or
imul
push
stos
imul
mov
sub
stc
pop
mov
jbe
lcall
enter
fstpl
jbe
and
jg
outsb
xor
addb
scas
fstpl
or
call
aas
mov
inc
arpl
popl
or
std
or
mov
fnstenv
add
testl
sbb
test
outsl
outsl
push
mov
or
int
adc
stos
jmp
inc
jge
cmp
in
mov
sub
stos
fwait
jbe
xchg
push
xor
xor
jle
push
cmp
jg
mov
push
xor
fisttpll
adc
xor
std
aas
dec
loopne
or
aam
xchg
cmp
mov
jmp
mov
mov
fdiv
sti
pand
jle
inc
lock
inc
pop
int
mov
xchg
mov
std
insl
fcomps
inc
mov
dec
call
add
rorb
jl
nop
dec
add
in
xor
mov
stc
neg
ret
sbb
cmp
xchg
pop
push
in
mov
hlt
aaa
push
iret
ds
xor
in
test
inc
fidivrs
mov
repz
fwait
imul
mov
sbb
scas
jle
sub
xor
jmp
fstps
test
mov
xlat
lret
into
mov
icebp
adc
aaa
push
mov
hlt
push
shll
gs
jb
or
xor
inc
sbb
loop
xor
mov
pop
jle
or
dec
nop
xchg
dec
mov
inc
decl
and
sub
push
xorb
inc
xchg
movsb
xlat
xorb
cmp
repz
sub
or
jge
mov
rorb
daa
push
jns
fdivrl
fistpll
cmc
and
out
das
js
add
add
jne
mov
mov
rcl
fstps
jb
outsb
inc
ret
js
divl
sbb
hlt
inc
arpl
divb
rcrb
shrl
adc
mov
clc
ljmp
add
fldt
or
icebp
movsl
lods
or
mov
xor
gs
bound
inc
lret
daa
adc
fidivs
enter
cmpsl
mov
fdivl
push
data16
mov
ficoml
cli
pushf
sbb
int3
mov
lods
jle
loopne
loop
int3
inc
aaa
sub
inc
fucompp
inc
sahf
xchg
sti
xchg
lea
lret
lds
inc
ljmp
pop
out
loop
outsl
mov
cmpsb
rclb
adc
addr16
test
repnz
in
mov
out
stc
xchg
rcr
inc
imul
fs
jmp
cltd
cwtl
mov
jb
movsl
pop
and
pop
or
sahf
dec
shll
pop
mov
out
imul
mov
mov
cmp
lcall
xchg
adc
cmc
cmp
shl
cmc
mov
repz
cmp
stos
in
mov
outsl
jbe
jb
or
add
inc
rorl
into
enter
out
sti
inc
sub
add
mov
clc
ja
sbb
adc
xchg
gs
xchg
mov
adc
pop
fldt
lds
dec
lret
mov
xchg
adc
mov
xor
mov
fdivrl
mov
mov
push
in
stc
jae
movsb
test
jecxz
mov
inc
out
lods
add
xor
sbb
sbb
fstpl
pop
imul
push
pushf
xor
push
xlat
testl
mov
push
sub
fiaddl
xchg
mov
mov
push
addr16
cwtl
cmp
and
out
iret
xor
pop
or
lea
mov
mov
mov
mov
or
xorl
mov
sub
popa
or
mov
mov
fsubrp
jg
outsl
addl
jno
and
mov
fsub
add
mov
int
or
pop
lods
dec
push
clc
xlat
andl
inc
mov
dec
test
jo
mov
push
lock
mov
add
pusha
clc
fdiv
aas
sbb
lret
push
sarl
cld
xchg
and
das
pop
cmp
inc
mov
dec
stc
jge
mov
dec
add
jb
ja
dec
dec
mov
push
insb
lcall
hlt
add
inc
add
pop
xchg
mov
jne
xor
test
inc
and
pop
sub
test
cmp
popf
dec
sub
loop
xor
out
test
pusha
lret
lahf
bound
pop
pop
in
jne
mov
push
test
ret
mov
inc
add
xchg
xor
je
ss
push
inc
mov
push
inc
cmpsl
inc
mov
add
shll
fwait
stos
xlat
add
dec
xchg
cmp
shrl
inc
push
sar
push
push
dec
xor
adcl
or
incl
sub
mov
cwtl
adc
scas
inc
mov
sbb
mov
je
sub
cwtl
in
shrb
in
in
jno
cmp
mov
push
mov
or
xor
stos
mov
sarl
push
mov
leave
sbb
mov
push
mov
inc
sbbw
lcall
inc
xchg
in
enter
xchg
add
mov
orl
xor
sbb
jmp
ret
ja
hlt
mov
fisttpll
aas
pop
popf
jae
sti
cmp
jmp
fwait
dec
insl
rorl
lret
pop
sbb
mov
xchg
mov
sub
push
nop
cmpsl
test
mov
jg
in
fsubs
fidivl
dec
adc
out
mov
xchg
mov
xor
lcall
adc
mov
mov
mov
lock
jne
cmpsb
insl
sbbl
mov
pop
in
daa
fs
mov
mov
cmp
inc
push
sahf
push
dec
sub
imul
and
mov
dec
pop
mov
xchg
cli
pushf
testb
out
add
shll
out
out
imul
mov
in
mov
into
jae
xchg
aaa
das
out
cmp
push
lahf
jg
and
cmp
data16
sub
push
xor
fcomps
in
nop
mov
dec
dec
rol
repnz
xor
das
sbbl
sbb
mov
push
push
mov
das
xor
sarl
jns
rcll
adc
adc
or
dec
mov
lcall
cltd
test
mov
addr16
mov
ljmp
outsl
rcr
into
test
imul
and
int3
pop
push
ds
icebp
mov
xor
fildl
mov
stc
fldt
sbbb
js
out
push
out
adc
mov
mov
xor
jecxz
jb
mov
setp
dec
push
cmp
pop
imul
dec
movsl
or
add
mov
lahf
lret
xchg
adc
pusha
and
dec
test
jge
lret
xchg
js
mov
int
iret
jecxz
outsl
repz
test
or
cs
or
mov
or
mov
xor
dec
jecxz
std
or
sbb
dec
push
mov
pop
inc
mov
mov
push
loope
inc
push
xor
jmp
cmc
and
sub
pop
push
jg
inc
leave
xorl
mov
dec
push
test
inc
sbb
fbstp
mov
dec
dec
subb
mov
push
inc
out
cmpsb
xchg
call
add
adc
cs
sbbl
add
xorb
xor
out
mov
add
clc
sahf
pop
test
dec
pusha
xchg
or
sub
test
insb
dec
jnp
mov
out
sbb
push
das
push
arpl
inc
cli
bound
push
xchg
enter
mov
call
movsl
std
mov
es
arpl
mov
cmp
add
dec
push
jmp
cmpsb
cmp
movsb
mov
aad
mov
test
mov
scas
xchg
ds
lahf
pop
adc
js
mov
dec
adc
mov
lret
fcos
jb
xlat
jne
les
fs
and
gs
jge
mov
cmpb
mulb
and
inc
push
icebp
add
pop
push
lods
sbb
aaa
dec
stos
xchg
lock
dec
mov
add
loope
push
jecxz
pop
mov
iret
push
sbb
pop
lock
xchg
cld
jecxz
das
lods
in
pusha
and
call
mov
mov
mov
add
in
das
movsl
loop
out
mov
scas
xchg
ret
rcl
rcrb
scas
push
push
dec
adc
mov
adc
rcrb
mov
popf
or
mov
ljmp
cmc
lret
adcl
jae
jo
add
xchg
loope
jg
add
pop
scas
mov
mov
mov
mov
stos
inc
popf
je
std
out
lcall
bound
jl
loop
enter
jbe
lea
punpckhbw
ja
jnp
mov
mov
sub
push
cmp
popa
es
add
push
incl
stos
icebp
fimuls
mov
xor
leave
aas
dec
push
push
inc
jnp
sub
rorb
cmc
scas
inc
xlat
outsb
xchg
clc
int3
xor
mov
cwtl
andl
or
lret
ret
scas
daa
jo
sarl
sub
pop
clc
mov
arpl
mov
cmp
dec
adc
in
or
xor
and
mov
or
xchg
or
mov
push
mov
and
gs
dec
imul
movb
cltd
adc
sub
xor
ret
call
and
out
test
data16
cwtl
and
push
mov
popa
push
js
mov
pop
cmp
inc
hlt
pop
icebp
jecxz
xor
daa
adc
xor
mov
nop
ret
call
pushl
mov
out
int3
cmc
fisttpll
cltd
jne
inc
sbb
or
push
xchg
icebp
or
sub
aad
hlt
enter
pop
cmp
movsl
and
movsb
dec
cltd
pop
notl
scas
lahf
inc
fildl
push
andb
mov
popa
jge
sbbl
mov
movsl
xor
push
mov
movsb
cmp
lock
fdivr
sbb
inc
lcall
clc
popl
xchg
mov
je
jmp
jmp
faddl
and
push
and
adc
mov
mov
jp
xchg
pop
out
gs
push
rorb
adc
sahf
lods
pop
mov
pop
out
sbb
cmp
dec
mov
sbb
push
mov
addl
inc
imul
fdivrs
imul
cmpsb
clc
mov
or
aad
xor
loopne
fucomip
mov
imul
aam
push
dec
fs
das
or
insb
mov
sbb
adc
mov
xor
push
ss
pop
sahf
out
repnz
inc
outsb
inc
xchg
bound
fcoms
sub
fidivl
cmpl
loopne
sarl
pop
das
xor
sar
and
lcall
jle
ljmp
fistl
jecxz
push
jp
cmpl
mov
adc
push
cmp
aas
loop
add
cmp
mov
sarb
cmpsb
imul
mov
adc
mov
shll
add
scas
sbb
sub
out
or
xchg
cmc
aaa
das
mov
stc
push
es
fisubl
rorl
bound
mov
fnstenv
in
inc
mov
sub
pop
fldenv
andb
es
insb
pop
pop
or
lock
and
out
mov
je
mov
lock
sti
and
sub
rcl
xor
loop
lret
pop
fistl
jle
cmp
sti
leave
add
pop
mov
inc
cmp
mov
mov
lret
enter
sbb
mov
nop
loopne
add
mov
pushf
pop
jno
dec
cmp
sbb
andl
mov
addr16
mov
sub
add
loopne
insb
xor
add
cmp
add
hlt
adc
and
rcrb
daa
scas
fs
je
and
dec
mov
inc
push
popa
icebp
push
fdivs
loop
dec
clc
mov
xchg
xchg
mov
mov
test
adc
or
mov
fstpt
xor
imul
mov
or
cs
and
or
das
mov
pop
movsl
and
mov
jo
mov
push
dec
add
stos
or
mov
fisubl
aas
lret
inc
pop
inc
pop
test
mov
popf
or
cltd
imul
add
and
dec
and
ficomps
les
and
push
mov
fcoml
xor
add
outsb
sub
dec
call
shlb
mov
out
cld
adc
mov
xchg
scas
stos
aad
push
jp
daa
inc
or
dec
dec
xor
mov
mov
loopne
addr16
jnp
or
cmp
aaa
push
fsubp
add
inc
movsb
pop
orl
xchg
stc
adc
or
mov
or
xchg
lret
shlb
cli
jb
imul
les
pop
jno
pop
test
insb
push
hlt
insl
loopne
add
xchg
test
cmp
ds
in
loop
mov
test
cli
adc
mov
jmp
mov
push
sbb
out
jnp
cld
das
shll
test
and
dec
popa
add
and
test
bound
dec
shlb
or
test
shlb
jo
mov
mov
push
repz
or
adc
jl,pt
clc
mov
into
lds
cltd
imul
in
mov
push
pop
xorl
lcall
inc
sub
mov
xor
dec
cltd
pop
imul
push
cmp
subb
fdivl
arpl
xlat
push
out
pop
sub
fwait
pushf
or
pop
and
mov
pop
jg
lahf
inc
xlat
sbb
xor
iret
cltd
stc
popf
jecxz
add
cmpsb
mov
lods
fdiv
imul
adc
or
or
mov
insb
movsl
lds
leave
cmp
dec
sbb
adc
cli
sahf
and
mov
or
hlt
adc
and
push
out
int3
iret
push
inc
aam
std
ss
out
test
mov
mov
in
sbb
mov
push
movntq
aad
xlat
rolb
out
out
push
mov
dec
jmp
or
rolb
mov
jo
inc
cmp
sahf
mulb
call
add
insl
fucomp
xchg
mov
mov
rclb
dec
loopne
and
xor
ss
adc
es
ret
aam
fnstenv
es
loopne
loope
pop
dec
data16
jbe
mov
nop
popa
stc
adc
les
iret
movl
adc
mov
out
jne
in
jnp
jmp
fcompl
sahf
clc
jns
daa
mov
adc
andb
notb
adc
sbb
xor
and
rcll
mov
lret
lret
push
in
dec
mov
xor
fistpl
lock
inc
cmpsl
jge
jb
inc
shrb
pusha
jmp
cs
add
int
popa
push
jne
mov
gs
push
test
mov
andb
sahf
mov
jb
mov
subb
mov
repz
cmp
cmp
dec
fstpl
loopne
test
push
pop
xor
fdivrs
dec
aas
mov
push
mov
andl
add
mov
push
out
jne
cmp
cmp
pop
sbb
rorl
jnp
jg
lret
test
ficompl
xor
inc
push
adc
ret
add
push
inc
fisttpl
rcll
cmpsl
js
movsl
mov
xchg
stos
lahf
testl
into
shlb
and
add
jg
mov
mov
cmp
js
fimull
xchg
in
add
les
fisttpll
out
aam
aas
or
fsubs
loop
inc
jmp
and
mov
loopne
adc
or
lret
xor
mov
xchg
loop
push
popf
aad
cmpsl
inc
cmp
mov
sbb
pop
jae
sbb
inc
test
xorb
xchg
sub
or
dec
fs
xchg
push
sub
mov
inc
sbb
xlat
cmp
pop
scas
jl
sub
stos
xchg
inc
into
aaa
and
enter
jbe
pop
cmpsl
aaa
ficompl
xor
ds
mov
cmp
cmc
inc
out
sub
mov
adc
in
les
push
push
and
push
fdivp
fnsave
pavgw
repz
mov
cmp
adc
or
aad
jp
iret
sti
sub
sub
inc
xor
jl
sub
setle
out
xchg
adc
int
jmp
test
shr
orb
cmp
out
shrl
iret
and
or
rcl
outsl
outsl
out
sbb
popa
loop
test
ret
jns
mov
in
fisttpll
popa
or
mov
fdivrs
add
popl
mov
inc
push
lods
or
cmp
add
jge
dec
xchg
into
pop
push
bound
fimuls
das
and
add
dec
bound
adc
xor
cwtl
xor
cli
rcr
or
mov
imulb
addr16
xor
testl
pop
jae
gs
or
ret
and
in
fdivp
xor
in
xchg
pop
into
dec
pop
xor
fildl
arpl
sbb
test
decb
mov
out
cmp
and
add
xor
xchg
sub
mov
popf
push
mov
inc
push
std
push
inc
int3
sub
negb
jbe
inc
std
push
cltd
std
add
je
iret
idivl
sarb
aad
in
cltd
xor
fbstp
pop
inc
das
pop
fdivrp
cmpsl
mov
pop
icebp
call
fldl
sbb
sbb
push
jmp
add
cld
outsb
add
xor
test
mov
stos
xorb
test
dec
xor
dec
loop
insl
sahf
xchg
add
sti
sub
dec
bnd
sub
roll
fisubs
jmp
jae
push
rcrb
bnd
add
adc
mov
outsl
mov
iret
pop
repz
push
and
mov
mov
dec
lds
jg
test
test
xchg
cli
aam
dec
push
fldt
push
ret
out
jne
out
std
xchg
xchg
mov
shlb
push
mov
mov
fnsave
test
cmp
pop
loopne
scas
and
xchg
cld
adc
jo
pop
mov
mulb
in
push
add
ds
notb
dec
push
in
sbb
mov
jg
push
popa
xor
push
mov
movsb
subl
xor
fsts
push
mov
inc
rcr
jne
cmp
add
xchg
flds
mov
fisttps
nop
push
inc
stos
mov
test
aam
sub
test
clc
mov
and
xchg
popf
ror
repnz
es
andb
into
lret
push
dec
xchg
imul
loope
jl
decb
pop
dec
test
lods
pushf
aad
xchg
sbb
jnp
clc
lds
or
jb
dec
mov
and
push
outsb
mov
das
js,pn
mov
hlt
enter
mov
ficoml
arpl
scas
ret
scas
mov
cld
sbb
stos
inc
test
xor
testl
dec
xchg
outsb
cwtl
je
in
inc
daa
outsl
mov
mov
mov
mov
dec
repnz
psadbw
adc
leave
xor
leave
test
mov
xchg
fldenv
cwtl
dec
bound
fists
test
sub
jle
cwtl
mov
push
cli
adc
inc
fcmovne
fdivrp
push
push
jl
xor
loop
test
pop
fsts
outsb
ret
arpl
xor
movsl
mov
mov
or
ljmp
add
bound
stc
or
sbb
lret
out
adc
sbb
xchg
mov
xchg
xor
adc
mov
mov
in
ds
or
xchg
adc
pop
ja
xor
jo
popa
xchg
push
mov
pusha
std
das
sbb
pusha
popa
in
sbb
cmp
ss
push
xor
pop
lock
lret
sbbl
xchg
sub
hlt
mov
dec
jl
cmp
stos
sub
push
pop
popa
insb
popf
xchg
fstpl
in
and
imul
inc
fcmovb
jmp
movl
lods
cmp
aad
scas
call
fstpt
shr
add
jo
enter
pop
jmp
xchg
xchg
aaa
adc
out
add
push
jo
jns
mov
out
aad
aaa
adc
mov
sub
sub
pop
dec
jns
mov
pop
cmp
leave
mov
imul
repnz
mov
sti
jg
cmc
aam
andb
jbe
dec
call
test
mov
scas
add
or
dec
or
xchg
mov
insl
jecxz
test
movsb
adc
pop
sbb
cmp
cmp
das
push
popa
or
imul
test
hlt
shlb
xchg
dec
xor
jl
and
loope
fcomi
cmpsb
push
lods
push
cmp
push
dec
aam
pop
cld
mov
add
pop
repz
xor
mov
daa
cmp
fisubrs
les
add
punpcklbw
pop
mov
pop
loopne
insb
popf
jae
out
in
fmuls
aaa
dec
mov
bound
dec
lds
lods
or
xor
or
xor
push
jmp
fidivrl
push
inc
fnsave
mov
inc
sbb
adc
mov
sbb
sarb
and
dec
sbb
fidivl
lea
call
mov
gs
shll
fadds
in
inc
movsb
inc
xor
or
push
clc
and
loope
aad
movsb
sub
mov
ja
pop
into
jge
mov
aad
out
ds
add
push
in
mov
or
push
jb
aam
jbe
gs
adc
orl
cld
adc
or
out
lahf
ss
push
movsb
or
xchg
lds
cwtl
js
sti
jno
test
lods
mov
xor
stc
int
in
outsb
sub
lods
faddl
negl
cmp
sti
cmp
sbb
push
out
lcall
cwtl
das
and
std
pushf
in
shlb
xchg
insl
xor
inc
out
enter
sbbb
adc
lods
call
add
sahf
mov
imul
pop
movsb
repnz
cli
lret
sub
xor
inc
adc
fildll
inc
xchg
adc
jbe
in
xlat
icebp
xor
mov
fsubp
mov
inc
loop
sti
mov
ss
icebp
dec
das
nop
cltd
std
mov
cmpsb
adc
jns
jp
inc
jle
test
pop
into
out
out
outsl
push
pop
bound
je
pop
test
sub
test
inc
mov
mov
xor
jmp
inc
and
add
add
push
fs
sbb
insb
rcrb
out
or
adc
add
xchg
xor
or
lds
sub
sub
xor
es
jbe
mov
add
inc
gs
add
mov
pop
out
test
and
and
inc
push
add
and
mov
ret
pop
xor
out
aas
sqrtps
pop
or
shrb
dec
stos
and
jbe
xchg
out
fsts
add
xchg
jb
mov
shlb
ja
inc
cld
dec
leave
insl
in
ret
push
hlt
xchg
enter
jbe
in
mov
rorl
repnz
stos
pop
or
enter
int
mov
mov
jecxz
cmp
cmp
aas
xor
jmp
mov
jge
push
jecxz
xchg
out
mov
jl
das
push
ficompl
adc
cmp
int
into
stc
mov
outsb
and
adc
ret
fwait
sti
cmpb
in
and
addr16
and
pop
mov
std
outsb
pop
loop
pop
fucomip
jg
movsb
push
mov
xor
jno
pop
and
cmpsb
ds
arpl
aad
mov
add
cmpsl
pop
and
cmpb
test
cld
mov
sbb
add
cwtl
cmpsl
cmp
pop
into
shlb
test
rol
pop
lds
fbld
push
sahf
fs
jg
jl
mov
xor
std
cmc
mov
leave
adc
cli
xor
stos
test
or
test
dec
dec
movsl
push
and
push
jp
ret
imul
bnd
int
je
cmp
lods
sub
adc
push
dec
xor
in
fisubs
std
xor
fdiv
push
xor
cmp
in
mov
adc
jmp
shlb
popa
stos
ljmp
lahf
xor
mov
cmpb
xor
lcall
xor
insl
cli
pop
aad
cltd
inc
in
stc
mov
pop
jmp
popf
ljmp
inc
push
imul
ret
mov
pop
push
xchg
jmp
test
loope
in
xchg
xlat
xchg
call
mul
test
mov
jae
lret
or
jo
push
jns
inc
mov
dec
sub
repz
int
add
xchg
out
pop
jne
and
sub
fs
loop
mov
out
add
push
cmp
xchg
dec
xchg
jl,pn
push
scas
popf
mov
mov
daa
xchg
jmp
popf
jl
rorb
mov
inc
movsl
loope
fld1
xchg
inc
clc
pop
std
fnstcw
pop
fs
jns
mov
push
mov
lcall
sbb
mov
jb
in
leave
out
je
pop
jg
out
mov
cwtl
pop
pop
sahf
mov
pushf
xor
and
cmp
enter
push
pop
xor
jbe
neg
fdivs
xlat
imul
cmpsb
das
rclb
adc
lcall
and
cmp
xchg
xchg
sbb
jecxz
ja
or
inc
arpl
lock
lods
xchg
xor
xorl
repz
call
mov
adc
xchg
pop
lds
adc
fisubs
fimull
imul
add
push
sahf
addr16
or
inc
push
ljmp
or
cltd
cmp
sbb
loope
je
lds
mov
pop
and
sti
into
in
xor
ljmp
icebp
or
mov
and
mov
cmp
adc
faddl
es
stos
mov
loopne
mov
inc
stos
pop
jo
pop
and
adc
mov
xor
shll
ret
or
gs
xor
add
scas
add
in
aad
add
jmp
repnz
dec
sub
jb
es
cmp
aam
ret
in
adc
popaw
jb
dec
mov
je
jae
push
in
xor
pop
xchg
mov
push
mov
jge
daa
cld
mov
sbb
jle
mov
ret
dec
movsb
jns
adc
cmp
lret
pusha
mov
push
sub
enter
xchg
jmp
out
cmpsl
and
mov
and
or
enter
and
sbb
push
icebp
mov
fmull
lea
decl
sub
push
in
lods
inc
mov
add
or
nop
stos
shlb
ds
xchg
pop
repnz
call
jne
int
inc
int3
adc
add
pop
jae,pt
adc
stos
lods
dec
and
outsb
aad
aaa
xor
les
mov
lret
cltd
in
jns
sub
jecxz
mov
push
push
test
mov
push
pop
and
xor
push
movsl
jge
and
add
lods
xchg
test
mov
inc
aas
in
nop
jno
mov
subb
mov
mov
sub
outsl
rcrl
popa
repz
insl
mov
mull
call
loope
call
je
cltd
sbbl
cmp
sbb
cmp
sarb
loope
and
sub
pop
lahf
in
mov
xchg
push
sbb
xlat
inc
jmp
fdivrl
imulb
test
cmp
sbb
add
pop
mov
hlt
and
push
js
push
js
pop
jmp
push
jecxz
sbb
adc
lret
data16
dec
in
stc
stc
testl
or
das
int3
pop
adc
dec
in
mov
pop
in
insl
mov
jmp
shrl
jecxz
cmp
xor
cltd
cli
fwait
jmp
dec
adc
inc
pop
adc
cli
test
outsb
fwait
stos
jg
mov
popa
aad
js
out
mov
and
pop
je
xor
out
jg
xor
lds
add
in
inc
aam
lods
jge
and
cmp
inc
fst
test
cltd
test
pop
lock
sbb
flds
cli
or
mul
ja
stos
push
jno
push
mov
and
lods
cmp
or
pop
jo
movsb
sahf
lods
mov
cmc
jmp
jae
cmpsl
xchg
add
inc
adc
inc
add
inc
pop
iret
pop
das
jl
inc
and
xchg
fnstsw
arpl
test
rclb
ja
and
dec
push
or
xor
popf
pop
addr16
xchg
mov
sbb
pusha
push
sub
cld
mov
ret
and
pop
shl
add
nop
adc
test
push
test
inc
mov
jnp
adc
leave
out
mov
je
mov
sahf
adc
or
adc
movsb
movb
and
nop
or
popa
cmp
inc
inc
lret
mov
mov
rolb
sbbl
mov
sub
xchg
int
dec
xor
clc
sub
xor
dec
stc
pushf
cmp
xor
xor
lea
into
out
xchg
fnstenv
in
aaa
push
adc
or
pop
mov
push
data16
arpl
es
pop
cmp
std
inc
imul
inc
fisttps
jb
ljmp
push
push
loopne
add
int3
push
inc
test
push
das
in
lret
sub
test
int
jb
shlb
mov
sub
pop
and
outsl
push
pop
inc
jecxz
hlt
in
imul
jb
mov
pusha
test
and
dec
dec
jp
shlb
fwait
rol
xchg
ljmp
fmul
clc
mov
std
lcall
fs
test
sbb
mov
test
pop
test
jg
jl
std
movsl
aam
dec
inc
lods
out
in
inc
into
cmp
jg
inc
popa
adc
stos
cmp
sahf
adc
mov
mov
call
aaa
cmc
adc
dec
pcmpgtw
frstor
dec
imul
adc
xchg
mov
jns
movsb
loope
rclb
cmp
sarl
cmpsb
out
dec
xor
clc
add
sbb
mov
mov
sbb
mov
push
das
daa
fists
orl
shl
loop
cmp
aad
negl
icebp
rol
data16
push
mov
add
stos
jle
pop
out
loope
or
mov
out
sub
add
and
scas
sbb
fs
mov
push
fdivrs
cld
jle
aam
fdivs
inc
jns
adc
xchg
sub
aad
cmpl
mov
xor
ror
rorl
and
daa
aaa
shll
leave
push
scas
aas
loope
xor
lods
xchg
cwtl
xchg
dec
and
inc
and
sub
iretw
ret
pop
inc
rcll
imul
jge
test
and
add
and
mov
test
sub
adc
xor
sbb
jmp
mov
fldt
inc
fisttpl
cmp
mov
outsb
test
mov
int3
bound
dec
pop
mov
fbstp
xlat
pop
cmc
inc
fists
push
call
repz
jnp
iret
or
jne
xchg
cld
test
mov
shll
lds
imul
lods
jno
cmpsb
mov
cmpsl
xor
mov
push
ds
lods
inc
add
mov
sub
roll
pop
cld
cmc
lret
jno
pop
bound
push
rorl
push
leave
and
leave
push
ljmp
pop
mov
adc
cmp
aaa
dec
mov
imul
test
adcl
push
pop
push
inc
adc
pop
xor
mov
cmp
out
pop
adc
out
adc
add
mov
faddl
shll
rcrb
arpl
arpl
mov
mov
jmp
mov
push
fcomip
pop
inc
test
in
sbb
push
fucomi
nop
push
aaa
pop
icebp
movsb
xchg
jae
movsl
add
pop
mov
popa
shll
fnsave
jp
subl
pop
ret
gs
add
mov
or
and
push
inc
lret
enter
mov
clc
fnsave
gs
movq
fsubl
jo
fisubrs
clc
movsb
imul
dec
push
loop
pop
cmp
adc
mov
mov
sub
adc
or
mov
sbb
repz
lcall
out
lods
inc
or
scas
inc
rclb
dec
sbb
repz
arpl
lcall
cld
or
aas
imul
add
icebp
mov
imul
lds
call
insb
sub
iret
repz
out
and
imul
jns
movsl
cmp
pop
aad
inc
mov
xor
xchg
or
and
sahf
es
inc
sub
enter
push
cmc
mov
push
mov
das
pop
test
aas
jne
cmp
pop
sbb
mov
mov
mov
dec
cwtl
je
adc
ja
decl
add
adc
lret
popa
test
test
out
mov
mov
sbb
fstl
add
cs
and
mov
divb
adc
outsl
ds
dec
pop
lret
pusha
cmp
mov
fcmovne
iret
stos
sub
add
sbb
and
inc
jge
ljmp
or
and
mov
dec
push
mov
bnd
push
lcall
and
rclb
leave
das
xor
push
popf
mov
adc
inc
sbb
sbb
sbb
push
std
insb
jno
lds
sbb
pop
and
xchg
mov
arpl
fsub
rol
dec
inc
adc
and
outsb
out
xchg
ret
decl
rcrl
xor
push
rcrl
sbb
in
inc
fcomps
or
jbe
lea
lahf
adc
adc
test
xchg
jb
jbe
stos
rcrl
mov
jno
add
mov
leave
cs
imul
mov
or
aam
sbb
cmc
rcrl
cltd
call
in
mov
lcall
push
mov
and
ret
jnp
test
leave
push
icebp
aam
pop
sbb
jecxz
or
orb
xor
add
movb
and
std
aam
mov
cli
or
jb
inc
sub
imul
les
std
jmp
sub
cmp
xchg
xchg
mov
add
sbb
xchg
xorl
mov
or
or
flds
push
icebp
sbb
shrl
std
xor
insb
mov
or
ja
loop
push
ss
int
mov
mov
push
int3
xor
lods
cltd
inc
mov
in
insl
inc
fiadds
push
push
and
cmp
aam
leave
and
inc
pushf
mov
adc
xchg
cmp
pusha
fyl2x
push
and
inc
flds
ret
shll
enter
mov
push
in
mov
popf
scas
fdivs
wrssd
sbb
xlat
mov
dec
dec
loop
call
cmp
push
xor
mov
jl
movsb
jns
pusha
aaa
ds
xchg
push
outsb
sbb
lock
push
add
mov
pop
icebp
in
cwtl
pop
mov
fucomp
fwait
inc
lock
cmpsl
xchg
lods
aad
std
push
inc
dec
out
or
push
aam
mov
int3
outsl
cmp
scas
enter
xchg
cmp
idivb
xor
rcrb
add
add
in
out
inc
dec
andl
int3
cltd
dec
enter
std
clc
mov
cmp
mov
fstpl
xor
dec
xor
sub
fsts
lock
cmp
jecxz
mov
sub
add
xor
mov
js
cmpsl
sub
pop
or
lret
xor
outsb
jl
cmp
loop
rcr
arpl
gs
sahf
or
dec
mov
xchg
in
adc
bound
cmp
mov
jmp
in
sbb
test
lods
hlt
dec
cmpsl
mov
ret
cmpsl
movsl
pop
or
fnstenv
cld
xchg
dec
and
xchg
lret
movsl
stc
jle
mov
out
arpl
adc
shrb
mov
aam
fcompl
cmp
adc
mov
push
cltd
idiv
add
pop
cltd
mov
fdivs
lea
lods
adcb
dec
mov
cli
mov
xchg
jmp
cmp
in
push
cmp
leave
repz
mov
imul
test
out
adc
push
push
inc
ja
jg
sbb
test
das
mov
out
test
into
cs
iret
stos
push
push
lods
inc
or
lods
fstpl
xor
cli
cmpsb
jb
adc
testl
xchg
sti
push
dec
add
scas
loop
or
cmp
pop
pop
int
fdivrs
sbb
mov
sbbl
ds
xor
cs
or
iret
ja
adc
out
repz
jbe
push
aam
mov
and
mull
add
out
push
sbb
in
add
push
shrb
sbb
aas
sar
stos
cvtps2pd
test
cmpsl
test
inc
ss
icebp
lock
lds
cmp
xchg
scas
dec
dec
sbb
popa
dec
dec
push
cmc
push
add
pop
cmp
inc
and
mov
xor
sub
leave
aam
popa
inc
xchg
clc
test
cmp
fisubrl
cmp
shll
pop
add
or
cmp
dec
loopne
repz
stos
sub
mov
mov
outsb
cmp
xor
inc
bound
sbb
mov
hlt
or
mov
push
ljmp
imull
inc
dec
dec
jmp
in
aas
push
push
jo
insb
stc
inc
fidivs
loop
adcb
es
repz
xchg
mov
aaa
inc
dec
fisttps
add
fbstp
pop
adc
xchg
sub
cmp
out
jecxz
dec
cmp
push
inc
test
enter
dec
pop
rol
add
sbb
in
out
dec
lahf
mov
rsm
xor
dec
cmp
pop
mov
mov
jmp
adc
adcl
add
push
and
add
pop
fwait
jne
and
or
jecxz
stc
nop
stos
xchg
xor
int3
pop
std
jmp
mov
pushf
mov
aam
clc
add
es
lock
in
adc
cmpsb
std
andb
movd
out
lea
jmp
mov
mov
cld
in
lock
jg
xor
dec
fcomps
dec
push
cmpsl
cli
mov
stos
stos
scas
jno
pop
adc
xor
stos
fcomps
push
xor
sub
insl
lret
shl
cld
mov
and
or
fsubrl
mov
xchg
mov
and
sbb
mov
insb
jg
lret
sahf
pop
aam
orb
jmp
lcall
mov
pop
inc
js
inc
idivl
in
ss
xlat
in
les
jb
add
push
jb
stos
adcl
out
sub
in
call
jo
insl
adc
outsb
sahf
adc
adc
fistpl
jae
xchg
inc
testb
inc
dec
push
sbb
and
push
cmc
mov
or
outsb
xchg
icebp
push
cwtl
cmp
outsl
jmp
rcrb
push
and
xchg
push
mov
cmpsb
lods
mov
icebp
ds
inc
pop
sub
cmp
shlb
leave
xchg
push
mov
data16
repz
xlat
jle
dec
xor
jmp
jmp
jb
rclb
sti
xor
push
insl
push
or
xchg
stos
outsl
sti
inc
test
dec
sbb
ja
and
xchg
push
call
mov
outsl
jnp
stos
sbb
mov
sarl
ror
cmp
daa
jmp
or
inc
push
push
scas
xchg
dec
subb
out
notb
jb
add
adc
sub
mov
sarl
mov
add
and
pop
jmp
dec
mov
lods
enter
pop
out
pop
jle
shl
mov
std
scas
push
movsl
das
stc
incl
or
xchg
dec
inc
loop
cmp
out
loope
repnz
jno
mov
or
mov
adc
mov
rclb
adc
or
jb
mov
push
mov
xchg
cmpsb
es
test
daa
sbb
into
out
inc
shll
mov
test
or
gs
inc
push
ret
loop
pop
mov
scas
push
jae
xor
or
repz
xchg
mov
popa
in
les
aaa
aaa
sahf
mov
sbb
or
lods
cmpsb
push
ss
lret
sbb
push
jb
nop
inc
ffree
lahf
jnp
or
gs
and
mov
es
xor
in
mov
cltd
or
xchg
cmp
test
pop
jb
cmp
scas
xor
push
jg
out
dec
sbb
in
repnz
ds
mov
and
xlat
cmc
xor
sbb
adc
jg
bound
fstpl
push
sbb
jl
adc
xchg
jp
jbe
movsl
and
jge
dec
and
add
inc
xchg
jmp
je
sbbl
aas
or
xchg
cmc
es
jbe
imul
jg
std
pop
rol
adc
mov
data16
and
xchg
push
adc
mov
xor
fdivrs
out
mov
add
das
es
xor
inc
cmp
pop
push
lret
rol
pop
sbb
aad
cltd
aas
xlat
xchg
ret
dec
and
lahf
rol
and
xor
ficoml
bound
pop
out
inc
add
add
es
cmpsl
pusha
call
pop
jp
fsubrl
sbb
ret
lahf
and
push
jb
sub
and
out
push
cmp
push
insb
out
mov
sarl
mov
mov
ds
xchg
lahf
pushf
pop
xor
pop
sub
jbe
int
push
fidivl
cmpsb
pop
xor
xlat
sub
out
sub
decl
outsl
push
jmp
cld
movsl
push
or
stos
in
push
mov
xchg
jne
cmp
inc
jbe
xchg
aad
sahf
out
adc
pushf
xor
pop
in
into
insl
xor
ds
sbb
stc
inc
jp
frstor
inc
pop
and
mov
jnp
sub
push
sbb
in
inc
inc
fidivs
cli
or
gs
pop
icebp
or
and
lahf
cwtl
and
sub
test
and
or
sbb
add
mov
in
arpl
mov
fs
mov
cmpsl
outsb
jmp
mov
mov
fstp
je
mulb
mov
out
das
xchg
dec
das
icebp
xor
bound
push
and
icebp
lret
cmp
pushf
lahf
cmpsl
mov
fnstcw
das
add
pop
imul
lods
inc
sub
pusha
pop
dec
mov
add
mov
in
xchg
inc
out
xchg
mov
je
imul
inc
fcompl
push
pop
repz
fisubs
leave
inc
jp
cli
push
cltd
hlt
leave
fisttpl
add
lods
mov
mov
aam
adc
mov
icebp
and
loop
push
adc
pop
cmpsl
mov
fidivs
pop
stos
stc
adc
orb
in
and
mov
jnp
inc
pop
insb
ja
repnz
jne
mov
leave
mov
add
xchg
call
sub
dec
pop
addr16
jmp
insl
sub
push
call
xlat
scas
clc
cmp
out
fildll
in
push
jno
add
cmpsl
inc
inc
dec
inc
dec
push
in
es
ficoms
cli
movsl
xchg
mov
xchg
pop
sub
sbb
inc
inc
std
mov
daa
ret
or
jg
xchg
adc
mov
jnp
out
xlat
pop
jbe
test
inc
push
sbb
push
mov
xchg
icebp
inc
pop
std
test
out
jg
mov
or
outsb
mov
inc
add
pop
inc
int3
dec
mov
pop
mov
ss
cmp
jnp
add
lcall
sub
xchg
push
hlt
jge
xchg
sub
add
arpl
in
ja
notb
inc
sbbl
jl
insl
push
xor
mov
test
mov
push
adc
lock
pushf
pop
jb
in
std
xchg
and
and
aas
adc
stos
mov
adc
push
sbb
les
jp
test
fucomi
orb
jle
lcall
movsl
fucomp
mov
inc
push
in
jmp
fstpt
sbb
jb
pop
dec
cmp
repnz
sbb
mov
ret
mov
sahf
dec
loope
lret
add
rcrl
and
xchg
jl
movsl
mov
dec
out
fisubs
jmp
stos
cmp
sarl
nop
dec
into
scas
inc
addr16
and
xchg
pop
mov
pusha
jl
nop
mulb
jns
iret
jecxz
imul
adc
scas
call
xor
pop
icebp
arpl
push
adc
adc
adc
adc
mov
mov
lret
lahf
lret
hlt
dec
jno
pop
mov
test
lcall
dec
mov
mov
clc
cmpsl
jp
ja
out
push
outsb
mov
clc
xor
sub
out
cs
push
data16
rcrl
xor
out
call
or
cmp
data16
data16
mov
decb
xchg
mov
inc
sub
fimuls
and
xor
and
mov
mov
lods
mov
loopne
xchg
stos
mov
and
test
sbb
and
mov
jno
in
xchg
sbb
in
sub
ret
aam
pop
cmp
sub
test
out
jle
sti
cmpsb
mov
push
jge
ficomps
arpl
dec
xchg
adc
pop
and
inc
jb
mov
add
mov
jge
xorl
add
pop
sahf
mov
add
push
nop
sahf
popa
fs
in
movsb
icebp
dec
push
xchg
lods
pop
outsb
out
sbb
lock
mov
sbb
add
sub
aas
popf
bound
pushf
xor
adc
dec
mov
jg
mov
pop
aam
mov
lret
push
aam
test
into
sub
aas
xor
fidivs
in
jne
adc
push
xchg
cli
adc
mov
and
sub
fistpll
mov
imul
mov
jge
adc
pop
gs
int3
fdivs
aad
bound
xchg
pop
and
ficompl
jp
push
test
shlb
xchg
mov
and
push
popa
ja
test
jae
std
cltd
or
clc
sahf
lods
cltd
imul
cld
gs
js
mov
pop
stos
pusha
sub
adc
bound
jg
insb
fdivrs
and
jne
sub
cld
lcall
mov
mov
pushf
xchg
ret
test
inc
aad
fistpll
ret
mov
call
cmc
mov
xchg
sub
add
add
jnp
adc
adc
aas
rclb
repnz
in
mov
out
mov
rorb
jg
jno
std
mov
mov
mov
xchg
add
sbb
jbe
pop
cmpsl
addr16
mov
in
iret
loope
les
jp
mov
cmp
cmp
xchg
in
ret
fstl
mov
jle
inc
insb
sub
rorl
jo
dec
and
xchg
insl
cmp
je
dec
mov
push
mov
out
jns
jmp
and
sti
mov
cli
push
insl
add
adc
inc
or
lret
mov
push
mov
xor
xor
idiv
loope
jnp
scas
rcl
data16
push
int
jmp
mov
push
ror
lret
pop
int3
dec
dec
out
stc
movsb
mov
lea
push
icebp
jne
inc
ret
aad
lcall
and
ljmp
call
decb
out
push
xlat
pop
sahf
mov
lcall
cld
rcll
sub
push
fsubp
or
cmp
loopne
add
mov
sbb
jno
filds
inc
add
and
push
dec
outsl
cli
mov
addl
pop
inc
pusha
and
rcr
sub
pop
mov
push
jne
stc
xor
movsb
jg
mov
mov
mov
push
push
cmp
push
mov
pop
cwtl
loopne
ret
and
jecxz
push
js
jl
or
mov
aad
test
xor
lcall
and
es
pop
dec
jecxz
and
les
sub
dec
mov
mov
push
xchg
xacquire
mov
rcll
inc
in
jnp
nop
movsl
mov
in
inc
loope
cmpsb
mov
aaa
push
mov
push
pop
sub
loope
dec
pushf
sbb
lcall
cwtl
gs
ret
outsl
jae
sub
xchg
into
xor
push
out
je
ror
cmp
adc
icebp
das
inc
data16
inc
inc
movsb
push
imul
cmp
inc
out
icebp
loope
mov
fs
sbb
lcall
push
out
mov
pop
jl,pn
ret
dec
mov
adc
mulb
in
pop
out
inc
cmp
xchg
loop
in
dec
cmpl
aas
fsubr
sbb
push
sbbb
or
pop
push
jns
push
test
out
cmp
cmc
test
adc
inc
jg
jbe
lcall
pusha
pushf
sti
data16
outsb
in
dec
stc
inc
stc
push
stos
push
jne
pushf
lods
rcl
pop
fwait
lret
push
dec
rcrb
dec
jnp
lock
idivl
jle
icebp
imul
jns
mov
stc
cmpsl
jmp
dec
mov
sbb
adc
testl
sbb
dec
mov
jge
shrl
sbb
addr16
icebp
mov
call
popf
test
int3
cld
xchg
call
jp
and
mov
cmovne
adc
xor
push
out
call
mov
xchg
movsl
out
sub
sbb
fisttpl
and
in
stc
shl
jmp
jle
adc
or
mov
ds
jbe
mov
iret
pop
insb
mov
lcall
cmpsb
sbb
ret
push
cmpsl
mov
lds
das
dec
arpl
jle
jmp
sbbb
jb
pop
mov
scas
mov
pop
push
out
sbbl
jmp
call
jns
outsl
push
out
lcall
hlt
cmp
xor
sbb
lods
pop
mov
fisttpll
push
popf
movsl
add
pop
mov
add
mov
adc
push
mov
xchg
xlat
mov
sbb
dec
popf
jg
cmc
or
adc
pushf
xchg
ja
sub
sub
push
dec
adc
inc
pop
lea
bound
push
mov
hlt
adc
cmp
mov
xchg
cs
lret
and
sub
jb
cmpsb
test
or
or
push
inc
or
fsubrl
insl
pop
xchg
fdivl
mov
pop
jns
sbb
mov
ja
fldcw
xchg
andb
push
pop
repz
bound
add
mov
mov
mov
cmpsl
mov
or
dec
and
and
sar
imul
adc
fnstenv
fstps
fnsave
std
mov
inc
test
jbe
pop
mov
sub
jmp
add
data16
loop
mov
movb
idivb
call
jle
dec
cmpl
xchg
aam
pop
dec
jnp
mov
pusha
inc
push
sahf
pushf
xor
push
lcall
in
mov
mov
xchg
out
push
mov
xchg
lea
pop
sti
scas
pop
addr16
rorl
mov
pushf
out
popf
not
adcb
fcmovnu
or
mov
imul
xchg
loope
push
stc
test
cs
fwait
loopne
pop
stc
and
out
imul
movsb
ret
aas
xor
clc
js
or
xchg
xor
dec
xlat
ret
test
cmp
movsl
loope
mov
cmp
cmc
shll
int3
dec
xor
lret
push
mov
loope
fcmovb
shlb
fwait
add
or
jo
xor
and
mov
pop
stc
pop
mov
hlt
jle
pop
mov
and
mov
orl
enter
les
cmp
push
jno
orb
lahf
test
ds
inc
pushf
lock
ja
xchg
out
leave
aam
fnsave
fbstp
sbb
sbb
inc
js
fs
loopne
push
adc
std
cltd
inc
mov
leave
sub
jnp
mov
pop
jge
bound
xchg
loopne
mov
orb
mov
sbb
mov
or
xor
mov
and
pop
mov
mov
popa
scas
in
dec
lahf
jbe
xchg
push
jmp
je
mov
push
adc
loopne
insb
mov
dec
iret
mov
bound
outsl
scas
cmp
pop
mov
jo
and
push
fcmovnbe
mov
mov
xor
or
pop
clc
adc
imul
and
decl
sarl
stos
and
loopne
ja
inc
pop
aam
xor
push
mov
bound
sbb
mov
fstpt
inc
cmp
xlat
lcall
enter
mov
dec
jge
push
mov
or
cmpb
icebp
mov
enter
mov
lock
je
xor
or
std
cmp
mov
add
addb
insb
xor
or
adc
insb
inc
xchg
shll
out
jae
jmp
incl
hlt
iret
ret
push
das
mov
adc
sub
cmpsb
cmp
in
fs
outsl
fdivs
mov
ret
inc
fwait
out
pusha
pop
xchg
inc
and
inc
xchg
add
fcoms
add
mov
or
and
out
popa
pop
and
xor
mov
and
inc
pop
popa
mov
xor
jnp
push
inc
pusha
push
popl
mov
outsl
sahf
pop
mov
cli
lcall
cmp
xor
cmpsl
mov
mov
sbb
push
xlat
mov
iret
inc
outsb
jae
sbb
pop
sbb
jae
fimuls
mov
xor
outsb
cmp
in
test
dec
notb
jnp
imul
fsubrs
mov
scas
sti
xlat
call
insb
lods
fwait
add
popa
xchg
add
mov
inc
out
xchg
xor
cmp
add
fs
leave
call
or
cmp
dec
lock
out
pushf
out
push
ss
shlb
in
xchg
pop
int
out
pusha
sbbb
dec
movsb
mov
js
sbb
push
mov
mov
mov
shrl
or
mov
and
sub
push
push
jo
push
dec
push
xchg
stc
xorb
mov
int
sub
test
mov
jb
pop
or
jnp
movsl
das
inc
shlb
int
push
int3
inc
out
test
jmp
or
or
mov
sub
outsl
add
push
es
outsl
mov
inc
xchg
sub
push
pushf
mov
scas
out
das
dec
scas
mov
repz
or
push
mov
and
push
es
fildll
fidivrs
inc
addr16
pop
bound
xchg
pop
testw
pop
lods
ja
cltd
test
pop
movsb
pop
jecxz
hlt
xchg
scas
loop
sub
popf
xor
in
fs
test
data16
je
push
push
xor
and
or
and
mov
inc
lock
mov
lret
ret
rcrl
shrb
jecxz
mov
fstps
imul
imul
inc
push
jae
fcmovbe
scas
mov
sbb
or
lds
movsb
pusha
and
mov
mov
push
xchg
cmp
cld
dec
testb
arpl
mov
jl
mov
jg
mov
mov
push
dec
in
std
push
cmc
mov
bound
push
xchg
add
dec
imul
sbb
movsb
mov
fsubrp
loop
push
sub
ljmp
cld
in
xchg
das
cli
mov
adc
push
popf
inc
faddp
fadds
cmpsl
jecxz
sbb
ds
int
pushf
xor
fdivrl
aaa
ljmp
xchg
inc
cmc
jle
lods
in
sbb
stos
loop
movsl
clc
pop
add
cmc
ja
rcll
stc
fwait
mov
inc
lret
or
or
jne
ljmp
das
inc
es
adc
es
outsb
test
cld
xchg
int3
sub
add
dec
stos
jecxz
mov
out
sbb
out
test
ret
sbb
jmp
stc
inc
lods
repnz
dec
push
pop
test
mov
das
dec
sti
nop
je
and
jae
mov
mov
aaa
aas
fwait
sbb
subl
mov
fidivrs
and
not
mov
add
insb
jbe
imul
or
fdivp
fcoms
sub
cs
rorl
push
faddl
test
adc
push
push
jae
mov
push
inc
bound
mov
or
dec
mov
lahf
rcrb
add
int3
sub
cld
inc
sbb
and
or
push
into
movsl
mov
enter
mov
cs
xchg
pop
ds
fbstp
pop
dec
sbb
repz
mov
jp
mov
mov
pop
xor
dec
push
inc
adc
mov
adc
fidivrs
into
inc
fiaddl
ss
add
and
add
scas
jb
loope
mulb
decb
add
pop
add
sarb
push
stos
pop
push
inc
iret
js
mov
int3
imul
jb
mov
push
push
adc
pop
data16
or
scas
aad
insl
dec
ss
stc
ljmp
cmp
nop
bound
sub
fnsetpm(287
jle
mov
fwait
or
cmp
mov
xchg
jle
mov
ljmp
repnz
enter
jp
push
inc
frstor
dec
xor
mov
jecxz
rcr
jmp
cmp
stc
xlat
cmp
cmp
and
push
pop
xor
sbb
cmp
call
push
sbb
rcl
popf
stos
shld
popf
push
test
ja
push
fsubs
out
movsb
mov
in
addb
lret
cld
pop
rolb
aam
lea
xchg
out
shll
adc
cli
mov
ds
insb
jle
cli
scas
lea
inc
shll
sbb
mov
imul
movsb
mov
test
mov
pop
mov
int
xor
add
repnz
sbb
sahf
into
es
or
mov
mov
sub
mov
fdivl
and
stos
xchg
stos
cli
or
movsb
xchg
jmp
push
sti
mov
daa
scas
xchg
sub
loope
mov
das
test
fbld
repnz
push
mov
dec
mov
xchg
das
sub
xchg
cmpsl
lret
ds
out
aas
xchg
xchg
ljmp
pop
std
xchg
push
ret
mov
sub
out
icebp
sbb
addr16
push
push
enter
cli
fdivs
mov
lock
mov
jge
sbb
int
inc
cmpsl
sbb
int3
cmpsb
lret
adc
sub
aam
pop
inc
and
negb
xchg
mov
aas
pushf
cmp
jle
sti
cmp
sub
lcall
div
sbb
xchg
sbb
inc
fdivl
rorb
data16
cmp
insb
shlb
adc
hlt
lcall
jge
sub
inc
pop
jge
subb
aaa
bound
pop
jecxz
mov
lcall
std
fwait
dec
ret
in
shll
rcrb
jmp
add
sub
ss
jp
or
xor
mov
imulb
in
iret
jno
sub
shrb
jo
dec
lret
push
imul
enter
push
repz
xor
inc
mov
leave
add
out
jo
cwtd
cmpsl
xor
dec
jo
xchg
leave
mov
daa
leave
popa
cmp
pop
jo
jle
cmp
xor
cmp
xor
bound
add
fbstp
ret
cmpsl
ds
je
xor
mov
or
scas
into
out
add
jae
xchg
mov
cmpsl
mov
sahf
fs
sbb
inc
pop
insb
cmc
sbb
test
test
inc
push
pusha
pushf
neg
out
push
scas
jno
and
cwtl
inc
or
mov
fimull
les
cmpsb
popa
lds
jno
addr16
jbe
mov
mov
inc
test
leave
sub
das
stos
stos
mov
mov
jb
mov
andb
dec
call
in
cmp
sub
cmp
mov
and
inc
fsubrs
rcrl
int
xchg
adc
shlb
cwtl
subb
or
jne
sti
movsl
imul
cmpsl
rol
cmp
es
arpl
stos
push
movsb
add
arpl
fldt
sub
je
fisubrs
cmp
mov
ret
mov
mov
xor
cli
movsb
push
lret
je
dec
clc
adc
sbb
xchg
dec
lea
nop
lahf
sbb
lret
cld
fs
pop
int
adc
lods
adc
jl
inc
mov
outsb
lods
inc
add
scas
jne
xor
ss
stc
pop
addl
cmp
scas
stos
or
mov
loopne
nop
fcomps
call
sub
icebp
movsl
aad
lcall
inc
pop
and
mov
or
lret
sti
or
dec
in
scas
imul
cmp
jl
mov
mov
mov
shll
xor
lahf
jmp
fists
cmp
add
pusha
repz
pop
xor
ja
sbb
cmp
lret
cmc
jp
mov
cmpsb
inc
mov
lahf
xchg
adc
adc
out
push
call
or
in
pop
xor
inc
lods
mov
es
add
inc
mov
in
or
in
pusha
out
jle
and
adc
outsb
loope
in
push
jae
int3
inc
mov
test
cs
mov
mov
out
cltd
insb
add
imul
adc
mov
lods
lock
push
add
nop
jbe
add
mov
add
push
mov
xchg
cmp
fcomp
jbe
cmp
push
fwait
cmpsl
adc
imul
stos
fnsave
std
or
adc
inc
test
lret
lret
push
jle
xor
xchg
sbb
cmp
int
loopne
fistps
int3
add
sub
shl
push
lret
mov
iret
data16
call
and
clc
xor
jge
mov
imull
lds
mov
xchg
sub
cltd
mov
sbb
cli
push
jge
adc
insb
cmp
call
idivl
cmp
scas
in
cmp
dec
jae
testl
fcmovne
jecxz
clc
adc
loopne
mov
jg
popa
push
lahf
stos
arpl
test
xchg
lahf
orb
mov
add
sub
xor
push
movsl
push
repnz
and
dec
jb
jp
mov
popf
xor
fildl
dec
and
and
push
push
push
testb
shll
es
js
pop
out
cmp
dec
rcrb
pusha
pusha
notl
adc
jg
xchg
fs
dec
das
jp
js
mov
mov
and
aad
clc
pop
negb
push
fiaddl
add
es
lods
mov
pop
mov
pop
cmp
and
inc
nop
mov
sub
bound
fcomps
mov
push
mov
pop
mov
push
inc
ljmp
outsl
mov
test
inc
jnp
cld
out
pushf
mov
rorb
iret
xlat
sldt
mov
adc
insb
jnp
dec
push
mov
cltd
mov
push
cs
adc
inc
gs
fsts
lea
clc
pop
out
fwait
lds
mov
or
inc
mov
jnp
add
loop
icebp
and
inc
fs
mov
jne
xor
jmp
dec
cld
cmp
ds
pop
xor
jmp
cmpsl
adc
mov
cli
insl
mov
xor
jo
mov
and
rcrb
jo
jb
icebp
movsl
mov
dec
repz
cwtl
outsb
ja
adc
inc
je
imulb
xor
mov
aas
inc
test
aaa
into
or
lret
sub
arpl
jae
or
jl
out
pop
sub
aam
cwtl
nop
aaa
mov
daa
mov
inc
cmpsl
xor
pushf
arpl
popa
mov
xchg
jecxz
sbb
inc
mov
pop
sti
mov
mov
sbb
call
jge
mov
push
jl
stos
pop
inc
push
ljmp
mov
jge
xchg
fisubrs
jno
rolb
test
pushf
push
mov
and
ds
movsl
mov
xchg
mov
test
aam
shr
xor
lea
shll
stos
add
xor
xchg
or
push
lods
in
jno
push
iret
fdivs
test
fwait
popa
pushf
adcl
outsl
pop
imul
lods
cld
and
inc
test
hlt
cmp
sbb
iret
and
pop
data16
push
pop
cltd
test
sbb
mov
imul
imul
push
out
imul
adc
xchg
xor
insb
mov
imul
mov
andb
push
mov
push
punpcklbw
push
cwtl
pop
js
idivb
push
ljmp
mov
and
dec
sbb
adc
push
push
push
fwait
out
cmpsb
sahf
xor
sub
mov
imul
fptan
jge
out
push
jmp
or
addr16
std
stos
fistpll
fstpl
test
mov
mov
sti
add
pushf
xor
jg
dec
jne
xor
and
int
inc
pop
xor
aaa
adc
inc
repnz
push
addr16
push
jae
cmp
lret
mov
pushf
ds
or
xchg
xchg
or
mov
sub
roll
in
pop
sbb
push
sbb
jl
jg
andb
popa
add
aad
cmp
dec
shrl
scas
push
gs
nop
aaa
xor
sub
mov
insl
les
xchg
xchg
push
xchg
mov
ja
in
jno
push
clc
or
or
std
xchg
loope
rorl
sbbl
inc
adc
cmp
lret
inc
pusha
ljmp
push
mov
jmp
lock
mov
add
sbb
test
cmp
ljmp
out
or
and
lcall
and
movsl
mov
mov
mov
jne
leave
shlb
jbe
pop
bound
stc
xchg
or
aaa
ret
add
cmpsl
cmpsb
movsl
push
pop
in
or
cwtl
sub
xor
dec
outsb
mov
dec
mov
mov
sbb
or
ljmp
jne
aad
mov
inc
cwtl
or
and
cmp
je
sub
fsubs
stos
ss
xchg
js
mov
rorl
or
xlat
shlb
adc
jns
out
xor
fwait
and
test
pop
mov
or
das
cmp
cmpsb
inc
lcall
dec
ficoml
add
mov
jge
rclb
test
push
outsb
mov
or
fs
and
inc
sbbb
push
fidivs
mov
in
cld
pop
jbe
xchg
push
jb
xor
fildll
incl
nop
sub
ret
xor
mov
js
movsl
push
adc
jbe
mov
test
sbb
push
cmpsl
push
data16
inc
call
adc
testl
pop
outsb
cmc
cmp
cmp
mov
inc
xchg
test
mov
arpl
jmp
inc
popf
push
dec
and
outsb
mov
dec
ret
xor
in
xorl
sahf
std
bound
cmp
add
and
loop
sbbb
psrlq
pushf
aaa
mov
push
in
std
test
inc
ficompl
mov
outsl
cwtl
sti
pop
sahf
sub
cmc
jp
ret
es
sub
mov
mov
dec
aam
xor
jno
mov
mov
cmp
and
push
dec
insl
shl
icebp
ljmp
add
in
cmc
incl
pushf
push
add
popa
lcall
mov
in
lcall
in
addl
adc
jecxz
arpl
mov
ret
out
test
xchg
dec
jns
adc
inc
mov
outsl
and
dec
dec
adc
movb
pop
and
mov
aad
stc
nop
mov
movsl
lds
addb
cmp
notl
stos
cmp
sub
leave
mov
int
int3
daa
and
cmp
inc
push
sub
addr16
sbbl
sub
dec
cwtl
pop
dec
je
movsl
xchg
sub
sub
iret
cld
xchg
add
aas
fldl
ja
sub
ja
addr16
pop
out
push
sub
jns
and
adc
shlw
fdivrs
adc
xchg
sub
xchg
pop
push
cmc
jecxz
jle
icebp
mov
icebp
xor
pop
scas
imul
mov
outsb
mov
inc
fsubrp
push
or
xor
fdiv
clc
push
data16
adcl
cli
dec
sbb
jl
cltd
push
sub
or
rclb
or
scas
stc
and
adc
dec
loop
inc
insl
add
daa
call
dec
pushl
mov
ret
outsl
and
cmpsl
scas
stos
sbb
push
iret
ss
ja
push
jno
inc
popf
xor
pop
fmull
stos
inc
stc
lods
xchg
fistps
das
jl
sbb
aas
mov
fdivl
das
rolb
cmc
xchg
cs
pop
cmp
fcoms
cli
and
jbe
jmp
sbbl
outsb
add
lods
add
mov
push
dec
fs
das
sbbl
jmp
sbb
mov
pop
mov
pop
loope
dec
adc
subl
popf
sub
lds
mov
xlat
jno
cmc
jns
or
add
cmp
mov
pop
jne
sub
pop
test
pop
jo
je
cmpsb
dec
mull
pop
scas
ss
loopne
ret
add
lret
sub
out
and
rcrl
inc
fucomp
je
pop
repz
inc
in
hlt
push
push
inc
shr
addb
jp
insl
cpuid
pop
jp
mov
in
pop
or
es
fs
jb
lods
xor
sbb
nop
lret
arpl
in
sbb
sbb
lret
cmpsl
aam
cmpsl
ljmp
mov
pop
push
lret
sub
sub
cmpsb
cmpsl
ret
or
das
clc
sarl
cli
ljmp
inc
mov
shl
mov
add
add
mov
push
sahf
sbb
add
cmp
daa
cmc
push
subl
mov
cmp
mov
xor
add
cli
insl
sub
add
inc
lret
jmp
fiaddl
sahf
adc
ss
cwtl
clc
sbb
in
push
sti
pop
push
imulb
jns
arpl
jne
add
xor
xchg
nop
cmp
mov
call
pushf
out
add
mov
sarl
in
jne
das
out
or
pusha
inc
inc
dec
pop
xchg
jb
fsubrl
mov
cmp
pop
pop
lahf
xchg
add
dec
lcall
lea
xchg
xor
push
adc
test
outsl
push
fdiv
pop
sub
mov
mov
dec
pop
aad
xor
gs
mov
repz
inc
mov
loopne
test
gs
ret
jae
dec
adc
xor
push
ds
int
pop
insb
and
xor
hlt
out
inc
xlat
aaa
push
dec
sbb
push
pop
push
inc
packsswb
sti
out
dec
in
and
jg
es
push
dec
mov
jp
daa
mul
repz
pop
xor
sub
xor
mov
insb
fdivs
sub
call
or
or
mov
movsb
cmp
lods
and
push
fstpt
sbb
or
jb
mov
or
in
iret
and
or
testl
jno
inc
int
adcl
sbb
ret
add
into
mov
imul
inc
sub
aam
shll
sbb
test
shrb
mov
es
adcl
dec
and
xchg
mov
imul
pop
in
in
imul
das
leave
lahf
pop
cmp
mov
xor
mov
xlat
bound
jge
lods
push
jo
push
fisubl
mov
dec
inc
cmp
xor
jle
pushf
cmpsb
cmp
jmp
push
lea
adc
or
stos
daa
and
jmp
jle
jmp
or
adc
lds
je
adc
sbb
add
pushf
and
andl
mov
ret
out
lcall
dec
lock
and
cld
add
filds
inc
in
enter
lret
mov
pop
rcrb
inc
xchg
xchg
pop
dec
stos
cs
sub
mov
mov
dec
push
xchg
rcl
sbbb
lods
xchg
add
sub
pop
jns
lock
rcrl
mov
add
xchg
xchg
mov
mov
jns
hlt
stos
adc
je
sub
adc
inc
push
xchg
and
mov
adc
or
mov
dec
aam
adc
jnp
mov
mov
or
hlt
xor
pop
popf
pop
jne
cmp
int3
pop
mov
push
push
push
out
sti
adc
popf
imulb
pop
out
dec
adc
std
lret
movsb
je
sub
xchg
dec
lret
jmp
imul
or
mov
inc
xor
mov
leave
push
bound
xchg
mov
cmpsl
cmc
mov
pop
repz
int3
push
les
in
and
rcll
cltd
mov
sbb
mov
push
lahf
jmp
xchg
es
xlat
pop
lret
ja
jmp
aad
xor
sbb
dec
push
cmp
pop
rcl
std
mov
pop
rcr
xor
into
xlat
movsb
cs
add
inc
popa
adc
dec
dec
dec
mov
shrb
psraw
ja
cmp
lahf
lahf
decb
shrl
mov
push
fidivrl
push
gs
aaa
add
xchg
or
int3
jbe
rep
stos
loop
pop
rolb
subb
adcb
inc
push
push
inc
rolb
imul
inc
jecxz
hlt
sbb
ljmp
pop
sarb
add
dec
das
xchg
xchg
xor
push
shrl
push
cmp
sub
cmp
sarl
lds
jno
mov
push
mov
loopne
inc
or
jmp
and
or
pop
mov
push
in
aaa
sbb
sahf
adc
call
cmp
xchg
inc
iret
data16
sbb
test
mov
lcall
pop
mov
sub
mov
adc
mov
push
and
mov
lret
xor
scas
ja
cwtl
das
and
add
pop
popf
sub
shl
cmpsl
dec
mov
clc
or
mov
in
iret
xlat
fcmovb
in
mov
sub
sub
andl
pop
cltd
sub
dec
mov
jl
gs
fwait
sti
mov
inc
mov
mov
mov
jae
das
imul
fistps
xchg
jbe
cmp
xchg
es
mov
fstp
stc
andb
cltd
ljmp
push
aas
push
lds
jp
inc
out
xor
mov
pop
lea
cmp
outsb
enter
repnz
sbb
mov
addr16
pop
fs
xchg
sahf
insb
das
xor
out
jge
sti
aas
aad
sarl
push
adc
or
mov
push
dec
xchg
push
ljmp
xchg
cmp
add
inc
clc
fldcw
out
loop
sbb
push
test
imul
mov
int
cmp
cld
sub
imul
arpl
mov
lahf
pop
dec
bound
ds
out
mov
test
lds
or
je
push
daa
xorl
lret
shrb
adc
fmull
pop
inc
pop
sbbl
fnstenv
dec
lods
lret
xor
adc
ficompl
stos
adc
repz
ret
addb
pop
loopne
imul
push
or
sub
push
cmpsl
mov
push
cs
mov
sbb
repnz
cmc
lcall
pop
sbb
loopne
out
xchg
adc
sub
dec
fwait
outsl
and
stc
xor
jge
inc
lahf
lea
addr16
mov
add
push
mov
sbb
and
mov
jp
push
lcall
mov
loop
jns
xor
mov
out
push
jl
xchg
inc
mov
cld
mov
sbb
mov
xchg
dec
ffree
clc
add
sbb
pop
into
orb
je
mov
hlt
fdivrs
lret
jae
and
push
xor
xor
mov
xor
repnz
mov
test
fcmovnbe
cwtl
addr16
sub
sbb
jne
cmp
or
stc
or
shlb
es
lock
lds
notb
daa
lret
imul
pop
bound
loopne
dec
sti
orl
mov
imul
std
mov
mov
mulb
push
fbstp
shl
ja
ljmp
sub
sub
icebp
jle
inc
pop
repz
outsb
cmpsl
dec
in
into
lcall
pop
das
cmp
lcall
addl
and
adc
adcl
push
or
pop
divb
pusha
push
daa
sbb
aam
cmp
aad
push
lcall
fwait
mov
divl
xchg
dec
fisubl
decb
movsl
jl
sub
idivl
data16
or
shll
xchg
adc
jg,pt
mov
mov
inc
cmp
jno
mov
or
add
cld
push
in
mov
push
repnz
and
jl
jno
mov
test
xchg
das
inc
ret
stos
movsl
mov
scas
pushf
cli
inc
bound
xor
inc
sti
mov
push
imul
mov
dec
push
push
es
push
jo
pop
cmc
push
dec
mov
push
mov
rcr
icebp
inc
cmp
imul
mov
mov
sbb
cmp
enter
ret
int3
int3
sbb
sbb
mov
mov
pop
sti
js
sahf
push
les
jmp
rcrb
adc
push
inc
nop
sbb
or
inc
push
pop
xchg
xchg
pop
popf
xor
mov
mov
mov
push
popf
cltd
push
xchg
scas
mov
loopne
jmp
jle
xchg
xor
test
sub
pop
mov
lods
pop
push
xor
xchg
inc
mov
add
add
mov
or
dec
or
icebp
sbb
lahf
push
inc
lds
and
adc
xchg
mov
clc
mov
cmp
adc
xchg
stos
jmp
imul
std
cmp
and
iret
sub
int
and
lea
cmc
mov
into
push
pop
xchg
adc
mov
sub
mov
std
in
cmpsb
and
adc
inc
popl
push
clc
fdivr
jg
aam
mov
repz
loope
cmpb
test
rol
sub
mov
and
repnz
mov
or
jo
inc
cmp
cmp
mov
lcall
cmp
test
rorb
in
xor
insb
dec
xchg
sub
icebp
lcall
add
or
enter
mov
mov
pop
push
ljmp
jno
push
stos
fists
xorb
leave
pusha
jbe
sti
into
enter
imul
imul
das
jg
fwait
mov
jle
inc
mov
lock
mov
xor
mov
in
imul
or
repnz
loop
dec
mov
in
popa
stos
jge
or
xchg
andb
mov
dec
loop
sub
cli
insb
add
lock
scas
or
loopne
daa
repnz
adc
add
and
jb
jb
decl
sahf
sbb
inc
ret
dec
lods
push
add
ret
mov
xor
push
mov
fcmovnu
insl
push
inc
fsts
inc
cmpsb
and
jecxz
mov
xor
insb
xchg
push
adc
or
leave
shlb
out
mov
adc
idiv
push
add
in
push
jns
addr16
or
insb
inc
shl
ret
inc
add
sub
int
or
das
out
push
xchg
push
sbb
lods
push
inc
outsl
adc
push
arpl
push
mov
cmp
sbb
sub
xchg
stos
push
sahf
sub
sbb
in
inc
adc
push
pop
xor
andl
dec
pop
mov
rep
call
or
pop
je
xor
repz
scas
stos
sub
lcall
in
and
sti
adc
pop
lea
and
mov
std
mov
cmc
push
test
sahf
mov
pop
icebp
arpl
incb
mov
jge
jnp
out
test
aam
jbe
push
sub
dec
je
mov
outsl
outsl
dec
dec
out
shrb
sub
fldl
cmp
shrl
jo
insb
dec
jo
and
xor
lods
mov
push
in
sbbl
adc
push
outsb
ret
xchg
nop
clc
test
xchg
mov
sbb
adc
test
ja
gs
rcll
mov
and
call
scas
push
jo
mov
or
insb
daa
jge
in
and
sbb
inc
pushf
and
jg
inc
pop
fs
inc
pop
rcl
add
nop
stc
mov
xor
fwait
xor
mov
mov
in
cmp
mov
mov
mov
mov
cmc
xchg
pushf
jo
inc
mov
lods
shlb
adc
daa
mov
ret
in
ror
and
and
mov
cmp
xchg
and
mov
fcompl
and
enter
jbe
pop
cmpsl
aas
dec
pop
cmpsb
cmp
aas
outsl
out
xchg
scas
test
test
mov
addr16
jl
jae
xchg
lods
mov
sbb
add
insb
jbe
push
testb
mov
pop
int3
and
pop
insl
fsubs
mov
adc
stc
mov
loope
adc
cmp
sub
aad
ffree
cmp
ss
sahf
rcrl
in
dec
dec
sti
jecxz
out
out
pop
pop
push
sub
sti
cmpsl
inc
int3
mov
pop
jne
or
xor
imul
lods
push
or
lret
ss
test
stos
lcall
in
testb
hlt
stc
xchg
mov
mov
out
movb
or
mov
add
scas
sub
es
jg
cs
push
pop
jmp
xlat
pop
cwtl
add
pusha
mov
lods
jbe
mov
fistpl
push
cmp
in
clc
ja
push
dec
lret
shl
xor
ss
lret
adc
push
nop
xor
lahf
hlt
mov
out
ds
shrl
bnd
dec
push
fwait
je
fimuls
jp
push
dec
mov
ret
or
mov
aad
mov
in
mov
mov
decl
xor
std
sbb
dec
dec
rcrl
xor
fidivs
into
mov
stos
jl
push
mov
fs
mov
data16
test
mov
and
mov
push
pop
sbb
pop
push
mov
mov
sbb
xor
sbb
scas
orb
movsb
and
xlat
daa
jno
js
push
arpl
in
fstpl
add
or
xor
dec
sub
mov
mov
jne
enter
test
pop
push
dec
add
sbb
mov
sbb
aas
rcr
pop
movsl
lds
ficompl
lock
mov
cmc
xchg
inc
loope
rcrb
dec
xor
scas
push
mov
mov
mov
into
shl
add
mov
push
pop
pushf
xchg
push
adc
aad
sahf
push
push
in
testl
or
pop
scas
jae
clc
push
dec
fdivl
enter
push
ret
repz
inc
pushf
shrl
and
push
fucomip
adcb
push
cmpl
mov
hlt
stos
cltd
and
arpl
pop
jno
add
testl
mov
xor
ss
mov
inc
sahf
nop
mov
pushf
jg
mov
ret
and
andb
lods
and
sub
push
inc
lock
arpl
xor
jbe
mov
aad
push
pop
inc
pop
xchg
jno
or
ficomps
sbb
enter
adc
push
movsl
mov
cmp
or
das
fnsave
out
dec
push
and
scas
push
lcall
mov
pop
jle
movsl
aas
push
sbb
mov
jb
pop
mov
insb
test
les
mov
aas
sub
and
test
inc
lods
push
addr16
add
popa
add
lock
adc
adc
pop
sbb
jmp
and
mov
call
xchg
sub
add
pop
rorl
scas
mov
movsb
in
stos
in
adc
jle
adc
mov
jno
ret
mov
ja
inc
ffreep
adc
sub
data16
mov
or
mulb
int3
xor
or
cs
repz
inc
pop
dec
pop
sahf
jl
int3
arpl
and
faddl
sarl
inc
gs
sbb
adcl
data16
ss
xor
movsb
add
xchg
fldt
dec
dec
or
cmc
jl
xchg
data16
inc
inc
mov
xlat
cwtl
push
scas
fnstenv
xor
dec
adc
jge
lahf
xor
push
jbe
not
insb
bound
out
test
out
inc
cli
inc
arpl
adc
jnp
gs
lahf
pop
cmc
movsb
add
jno
mov
xchg
dec
loop
push
xor
add
fwait
cmpsl
sbb
std
jmp
daa
mov
mov
sahf
pusha
xstore-rng
cmpsl
xchg
cmp
jmp
nop
daa
ja
daa
out
loopne
scas
ror
imul
in
popf
mov
loopne
mov
adc
xor
cmp
stos
arpl
mov
xchg
ss
repnz
in
rclb
cmp
bound
das
add
dec
xor
jo
or
mov
cli
bound
xchg
sbb
cltd
mov
mov
cmpsb
mov
mov
jge
inc
dec
pusha
mov
dec
fidivrl
inc
cli
nop
in
nop
fidivl
nop
iret
fwait
dec
lahf
mov
inc
enter
jle
xchg
sub
sarl
cmp
cmp
les
pusha
and
sbb
pop
pop
gs
dec
mov
jnp
scas
nop
jl
add
xlat
aad
adc
dec
lret
rolb
imul
pop
cmpsb
and
mov
mov
outsl
push
xor
dec
loope
adc
orb
lret
xchg
fadds
push
or
out
pop
xchg
sbb
sub
jmp
adcb
test
add
incb
arpl
lret
sbb
jmp
and
test
cltd
adc
mov
pop
mov
pop
xchg
jecxz
pop
sbb
rcrl
testl
sti
mov
iret
fnsetpm(287
imul
ret
aaa
mov
cmp
push
into
leave
dec
mov
lret
imul
pop
cmpsl
ficompl
in
js
push
movsl
pop
sbb
pushf
xchg
sub
xor
sahf
arpl
sti
add
ds
mov
push
push
sub
push
or
fisubl
lcall
fiaddl
mov
hlt
push
movl
mov
mov
jo
out
cs
xchg
jo
and
jl
add
ja
add
adc
sbb
lret
add
xor
sub
xchg
adc
subl
pop
and
nop
ss
int3
pop
xor
jmp
sbb
sbb
cli
mov
jne
add
adc
lret
fiadds
sahf
punpcklbw
mov
sbb
xchg
adc
loop
pop
fstl
sbb
sub
mov
stos
jge
sahf
in
xchg
or
sub
or
xchg
nop
mov
imull
xor
jle
mov
hlt
leave
int
idivl
push
nop
adc
mov
mov
sti
cmp
sbb
push
push
dec
call
fidivl
mov
adcl
notb
loopne
rcll
sti
sbb
aas
inc
into
mov
mov
pop
or
fldl
mov
fcomip
jl
loope
out
sarl
jecxz
ss
por
jnp
pop
jo
insl
push
adc
xor
fnstsw
inc
mov
pop
xor
fwait
sbb
mov
call
bswap
mov
outsl
mov
out
xchg
or
push
ror
push
adc
dec
sbb
mov
ja
dec
and
dec
xchg
xchg
scas
inc
leave
loope
fstps
xor
and
cmp
test
cld
lret
mov
les
sbb
popf
push
sub
rolb
imul
int3
jbe
dec
mov
fldt
in
xor
popa
add
mov
add
xchg
pop
daa
xchg
cmpsb
fisttpl
les
loope
loop,pt
push
jnp
add
sarl
add
aad
cmp
jp
adc
dec
pop
je
daa
outsb
popa
lods
pop
pop
fsubs
out
insb
pop
jo
gs
inc
adc
es
rcll
jno
mov
cmc
push
adcb
ds
sub
push
test
mov
test
cltd
xor
pop
fdivrl
inc
sub
in
test
inc
xlat
js
in
inc
dec
in
enter
ret
add
out
dec
aam
mov
jecxz
adc
loop
icebp
sbb
adc
xlat
or
dec
sub
fistpll
jle
and
sbb
and
fisubl
push
push
add
loop
dec
mov
sarb
psubusb
and
xor
fs
sbb
sbb
pop
popf
ja
cmpsl
jno
add
popa
push
lods
pop
xchg
add
add
mov
jmp
lods
iret
mov
test
stos
scas
add
dec
jmp
jmp
addl
scas
pop
jge
fisubrl
dec
inc
fidivrl
cmc
mov
adc
mov
push
pusha
stc
xlat
push
sbbb
jge
scas
sbb
ss
mov
test
fs
add
xbegin
decl
xchg
jne
inc
nop
push
inc
jecxz
cmp
popa
sbb
shrb
mov
sub
jns
stos
data16
dec
popf
js
mov
or
xchg
scas
mov
xlat
cmc
or
xchg
inc
add
cmpsl
adc
iret
cli
es
or
stc
mov
jmp
fs
addr16
stc
arpl
adc
push
mov
testl
hlt
sti
cmp
inc
mov
lahf
xchg
pop
jmp
imul
sub
cld
push
pop
outsl
fsubrl
mull
aad
pop
or
sbb
rolb
xchg
cmpsb
lock
xchg
sub
sub
sub
cmpl
mov
xchg
out
jle
sahf
daa
or
fsubrp
repnz
sub
xor
inc
fisubrs
dec
pop
test
or
lods
push
test
and
jg
add
push
push
es
outsb
aas
mov
aad
adc
divl
mov
nop
stos
pop
adc
enter
movsl
jmp
mov
mov
insl
mov
xchg
bound
iret
pop
outsb
pop
inc
leave
pop
sub
out
aaa
sbbb
stos
and
sbb
or
mov
in
aaa
fstl
jnp
fbstp
or
jns
sub
into
loopne
mov
sbb
inc
pop
cltd
xlat
or
aaa
clc
and
ret
inc
sub
int3
mov
test
into
test
test
movsl
push
insl
jae
stos
xchg
int3
pushf
xor
fstpt
loop
push
push
sub
inc
mov
ds
out
push
loopne
adc
bswap
jmp
jl
enter
in
ss
fwait
adc
arpl
inc
fstpl
sbb
push
scas
fs
adc
and
loop
sbbl
inc
add
cld
pop
lods
and
fidivrs
dec
pushf
lret
mov
add
inc
mov
test
dec
xchg
aas
insl
ret
insb
rcrl
shll
pushl
sub
mov
insl
or
cmp
mov
fstl
xchg
jge
test
imul
fistl
mov
pop
sbb
loope
jge
shll
and
or
pop
dec
push
cmpsl
jg
mov
dec
in
mov
xchg
mov
testb
loope
and
dec
rcrb
or
mov
pop
xchg
mov
adc
add
arpl
fidivrl
lock
testb
faddl
daa
into
arpl
rcl
sub
lods
push
inc
push
dec
je
cltd
fsubs
cltd
xor
or
pop
cmp
jo
loope
fucomip
ds
xor
adc
gs
jp
sbb
rorl
loop
std
out
das
and
cli
rcpps
or
notl
out
fwait
subl
nop
cmpsl
cmp
sbb
shrl
and
bound
mov
inc
mov
sbb
mov
aad
iret
pop
shlb
add
push
ljmp
notl
add
ret
shlb
mov
mov
jl
das
out
mov
and
mov
xor
or
jae
aaa
mov
push
inc
cwtl
mov
fwait
xrelease
mov
mov
out
in
mov
xchg
pusha
push
daa
and
ret
fldl
jg
mov
mov
cltd
ja
mov
dec
mov
xor
sti
inc
dec
enter
inc
pusha
xchg
clc
lods
add
mov
xor
sub
in
pusha
idiv
add
sbb
popa
xlat
cmp
pop
imul
jp
push
lods
aaa
dec
cwtl
stc
iret
insb
push
xor
cmp
mov
iret
xchg
jp
pop
test
cwtl
fnstcw
push
inc
sahf
shrb
mov
mov
mov
aas
push
outsl
xchg
xor
shll
pop
lahf
shr
mov
add
pop
stc
xchg
inc
mov
fiadds
dec
shrb
jl
mov
dec
lcall
iret
mov
pop
sbb
inc
rcrb
sub
stos
jge
inc
mov
xor
mov
ljmp
lcall
popf
stc
mov
out
xor
pop
sub
mov
jno
inc
fs
in
stos
xchg
aas
cmc
jne
mov
rol
shl
jle
jecxz
pop
imul
mov
dec
pushf
cli
jmp
push
in
insb
xor
jns
jae
mov
lods
push
add
mov
cs
lock
in
add
cltd
xor
lret
aas
cs
dec
fnsave
fs
sahf
xchg
dec
pop
push
pop
sahf
movsl
pushf
dec
loop
stc
movsb
cmp
ss
imul
out
loop
xchg
dec
in
mov
or
dec
and
cmpsl
jns
sbb
lret
and
adc
xor
mov
stc
or
in
fcoml
pop
xor
in
inc
into
xor
pop
jle
lds
outsl
jg
aad
or
mov
jmp
push
test
pop
flds
jbe
loopne
mov
dec
pop
push
aad
sahf
insl
mov
js
lods
cmpsb
fstpl
mov
jo
popf
addr16
imul
mov
add
xor
mov
lods
int3
arpl
push
hlt
xchg
pop
jle
sti
sub
xor
fcom
insl
or
lahf
adc
jae
jnp
cli
lods
mov
or
cmp
cmp
in
and
or
lds
cmp
pop
dec
lds
push
subl
test
or
ficompl
mov
or
in
int
jno
sub
sbb
popa
cmp
sbb
jle
mov
cmpsb
dec
out
out
cwtl
fdivl
push
out
mov
arpl
inc
xor
pop
mov
cmp
fidivs
gs
iret
sbb
add
cwtl
das
xor
mov
loop
daa
push
sub
arpl
sahf
mov
std
jne
lahf
cli
rcrb
jne
inc
mov
dec
lods
and
in
jno
bnd
imul
or
ret
xor
std
popa
and
hlt
inc
std
xchg
sbb
repnz
xchg
push
adcl
push
add
gs
xor
cwtl
xor
clc
aas
adc
sbbb
lahf
mov
jno
andl
dec
notl
testb
pop
sti
pop
rolb
and
cmp
mov
je
pop
mov
test
stos
pop
jmp
or
and
pop
cwtl
sub
jo
or
jae
insb
sub
and
out
outsb
jl
fisubs
xchg
pop
inc
mov
sub
dec
pop
out
mov
xor
add
adc
push
sub
dec
rcrl
shlb
push
push
aad
mov
popa
ror
shll
lods
or
ds
in
js
gs
jo
pop
insl
add
dec
mov
in
inc
cmp
push
lods
out
and
pop
lret
cmp
je
pop
imul
jnp
mov
inc
fldt
mov
jo
cli
add
ljmp
mov
or
push
movsl
sub
xor
int3
lods
or
add
movsl
cmp
rcr
mov
sahf
xor
test
das
adc
test
and
xchg
adc
test
mov
cmp
imul
push
movsl
inc
fwait
jmp
mov
stc
inc
mov
out
push
jbe
xor
mov
in
mov
cmpsb
repz
shrb
push
stos
sbb
fdivl
fistpl
js
sbb
cld
out
mov
sub
inc
jae
fsubp
xchg
inc
faddp
inc
or
aad
int
push
dec
sbb
cmpsl
mov
pushf
sub
push
jb
lods
iret
mov
jo
int
jg
adc
push
cltd
scas
aaa
out
in
in
std
xchg
fnstcw
test
xchg
pop
scas
push
xchg
fcmovu
pop
add
inc
cmp
ret
daa
stos
mov
repnz
jne
jo
fwait
cs
inc
in
inc
push
call
jecxz
adc
push
jecxz
arpl
movsb
jns
push
cmpsl
adc
push
or
sbb
xchg
or
adc
add
sbbl
iret
push
jne
mov
push
adc
mov
movsl
add
and
ficoms
inc
aad
shrl
ljmp
mov
enter
fdivrs
stc
mov
lea
out
aad
test
leave
loopne
mov
cld
test
and
dec
or
xor
xor
mov
mov
ficoml
stc
or
lods
push
jecxz
addr16
push
out
test
nop
lret
andl
dec
mov
inc
inc
out
and
sarl
mov
inc
ficoms
xor
rol
arpl
or
imul
mov
xlat
xor
or
adc
xlat
or
add
dec
dec
int
addr16
out
rclb
push
mov
icebp
movsl
or
sub
mov
fisubs
or
xor
push
sbb
push
dec
inc
dec
in
xchg
js
testb
insb
mov
shl
push
call
push
add
sarb
arpl
and
mov
inc
jne
js
insl
mov
hlt
dec
add
mov
dec
and
mov
inc
cmp
mov
inc
out
cmpsb
and
shrl
sub
mov
mov
xor
mov
stc
je
dec
inc
xchg
fsubr
lds
mov
lea
daa
popf
cmpsl
fcom
dec
enter
insb
mov
sub
push
cli
push
mov
outsl
xor
pusha
mov
cmpl
lods
ret
jnp
pop
mov
std
push
inc
push
mov
int3
jl
xchg
adc
and
xchg
daa
popf
lods
adc
jnp
int
out
incb
loopew
or
pushf
fists
adc
dec
add
shr
mov
xchg
repnz
jne
sahf
lds
sbb
jnp
sub
insb
pop
iret
ja
std
dec
sti
xchg
aas
std
test
xor
lcall
andb
jb
movsb
mov
adc
xlat
aam
ljmp
jnp
push
mov
ljmp
or
inc
cmpsb
adc
inc
or
cld
sub
or
fstpt
sub
repnz
loope
adc
dec
dec
ret
andw
sub
ljmp
push
dec
adc
jge
icebp
mov
jne
js
inc
mov
call
sub
mov
or
sub
jmp
jecxz
mov
jg
hlt
nop
call
test
jae
neg
int
or
pop
xchg
pop
jbe
mov
shrl
aam
out
out
dec
add
aas
fisubrl
pop
mov
mov
pushf
cmc
mov
cmp
rcrb
cmp
adc
xchg
aas
iret
cmp
pop
lcall
sub
data16
sub
xchg
stos
repz
push
add
adc
scas
out
int
addr16
lcall
jo
jnp
cmpsl
mov
adc
or
in
addl
or
shll
sub
lock
movsl
cmp
push
stc
nop
cmp
mov
push
mov
shr
jns
movsl
addr16
sahf
mov
dec
cmc
sbb
daa
jo
xchg
out
scas
mov
clc
xchg
jnp
es
pusha
cli
mov
lods
cmp
dec
jl
shl
adc
into
sbb
push
nopl
dec
cmpl
mov
lds
push
shrl
jo
pusha
int
xchg
and
lret
dec
int
inc
pushf
popa
add
addr16
imul
int
ret
sbb
out
loop
in
sbb
je
in
aaa
pop
xchg
je
stos
cltd
inc
lahf
test
ret
push
jne
fldenv
mov
push
in
cmpsl
sbbb
push
insb
add
test
repz
xor
jmp
pusha
lods
adc
out
out
sti
inc
int3
xchg
push
out
or
hlt
xchg
mov
jne
push
cs
and
movsb
es
lahf
lods
iret
inc
fsubrl
xchg
dec
pop
xor
sbb
les
stc
sub
jo
xchg
or
cmp
mov
jno
int
call
subb
aam
pop
xchg
adc
mov
jmp
inc
fwait
out
mov
push
inc
stos
or
aad
jp
xor
adc
loop
and
pop
push
pushf
mov
or
hlt
lock
pop
xchg
repz
xchg
sub
and
mov
jmp
add
jp
mov
or
xchg
add
push
popa
cwtl
cmpsl
sbb
jne
xor
cltd
dec
andl
adc
sub
inc
xchg
mov
lret
fwait
and
mov
xor
xor
pop
incl
mov
cmp
mov
ficomps
push
sbb
jbe
in
jne
jmp
xchg
orl
mov
xchg
scas
xchg
mov
inc
jnp
getsec
scas
jo
xchg
fst
lock
mov
mov
inc
mov
clc
imul
popf
sbb
inc
add
add
imul
out
into
fs
test
test
xor
xlat
add
into
jae
xchg
adc
inc
adc
shlb
jns
push
push
fs
xchg
enter
call
jl
jecxz
or
cli
js
sub
mov
jmp
mov
mov
mov
inc
xor
andb
in
xchg
in
shr
sub
cld
ja
hlt
pop
sub
lea
pop
lods
cmp
jb
push
sbb
int3
add
mov
and
pushf
into
jbe
repz
push
cmp
pushf
out
push
sbb
inc
bound
into
pop
pop
jne
mov
stos
xchg
in
fwait
add
xchg
sub
add
mov
jo
mov
rclb
pop
lcall
arpl
loop
in
lcall
popa
mov
pop
cmp
pusha
mov
xor
mov
xor
lods
rcrb
xchg
push
dec
int
mov
sub
pushf
fucomi
mov
rorb
iret
je
xchg
xlat
sbb
pop
mov
or
lret
sub
inc
cli
jne
scas
cmpsl
stos
push
out
jns
fisubrs
or
cmp
fistpll
aam
clc
or
jnp
out
jmp
cmp
push
pop
xchg
cwtl
push
mov
arpl
in
and
xchg
call
addr16
add
mov
sti
loopne
sub
pop
and
cmp
stos
inc
decb
xor
arpl
push
mov
push
aad
push
mov
mov
cmp
sub
adc
mov
xchg
mov
movups
push
daa
adc
mov
jb
add
cmp
inc
and
in
jmp
push
mov
dec
inc
push
sbb
aam
loopne
mov
pop
cmp
out
andl
fisubrl
or
dec
loopne
imul
sub
aam
daa
cmp
cmc
jae
in
test
and
filds
stos
jbe
mov
dec
xchg
lcall
imul
xchg
jp
movsl
cmp
lahf
add
and
sub
dec
mov
and
shrl
dec
imul
pusha
inc
popf
dec
js
xchg
jg
and
lcall
data16
wbinvd
nop
xor
mov
es
xchg
fsts
or
repz
mov
pop
es
in
or
es
xor
stc
pop
pop
fwait
mov
out
xor
dec
jge
dec
scas
outsl
dec
mov
pop
pop
repz
add
shlb
setl
arpl
aaa
jmp
dec
adc
dec
in
and
cmp
pop
add
andl
cmc
lcall
sbb
lret
sbbl
ret
sub
out
cmp
imul
and
insl
popa
notb
push
rcll
mov
test
je
dec
inc
mov
shrb
and
ret
push
sbb
push
test
mov
rep
adc
or
sahf
lods
lret
das
imul
jmp
sub
lretw
inc
aas
call
rol
cmp
pop
ds
jo
leave
aam
sub
push
in
xchg
mov
mov
jae
aas
cmc
xchg
push
movnti
mov
cli
jbe
mul
jb
and
dec
dec
sbbl
and
mov
movsl
jge
xchg
lock
sub
loopne
adc
lea
mov
jbe
test
dec
cmpsl
dec
and
inc
iret
push
clc
outsl
cmp
jl
ror
jb
out
sub
ljmp
lea
fsubl
mov
movsl
dec
ret
sub
sub
xchg
rcrl
pop
outsb
pop
repnz
fstps
hlt
sbb
loopne
cmp
mov
jl,pn
dec
scas
pop
cld
or
add
addr16
nop
or
lock
add
insb
fistpll
jg
orb
xor
loope
es
fdivrl
rclb
inc
xchg
push
mov
fnstenv
fs
outsb
push
in
aaa
xor
push
loop
mov
cli
push
jo
ljmp
repnz
test
add
stos
arpl
dec
daa
jl
clc
aaa
and
mov
or
test
lret
inc
mov
jp
loope
push
mov
jp
mov
popf
cmc
fidivl
inc
pop
aaa
stc
cmp
js
pop
lds
or
mov
sti
sbb
cmp
cmp
dec
aaa
loopne
in
pop
test
movsl
mov
mov
mov
push
and
clc
dec
hlt
push
sbbb
mov
int
out
add
ret
xor
fistps
or
lahf
ss
mov
ss
push
leave
je
push
xchg
imulb
lcall
aam
push
out
or
movsb
pop
dec
sub
push
pop
cvtpi2ps
sub
cmp
dec
into
or
ret
sar
pop
repnz
add
pop
fmuls
xor
and
adc
movsl
popa
andb
lahf
insb
add
push
mov
sbb
lods
aas
mov
dec
mov
mov
jl
lret
mov
shl
leave
out
jae
jnp
jnp
fldcw
daa
and
test
je
pop
movsb
jb
dec
mov
or
sbb
push
cmp
inc
outsl
push
jns
addb
or
cwtl
cmc
sbb
scas
shld
bound
and
cmc
cltd
incb
xchg
pop
shlb
push
mov
dec
mov
sub
or
dec
jecxz
sarb
lds
mov
add
mov
xlat
pop
cmp
xchg
sbb
pop
es
fcompl
pop
pop
inc
mov
push
jno
lcall
nop
push
mov
pop
cmp
shrl
sbb
sub
pop
sbb
xor
xchg
ret
push
movsl
adc
add
cmp
les
xor
xorb
sbb
cmp
pop
cltd
sub
cmc
sub
jle
sbb
les
jge
mov
rorb
mov
dec
xor
in
push
and
inc
out
rcr
in
adc
mov
cmp
cmp
push
incl
mov
and
mov
nop
leave
test
mov
mov
rcrl
ljmp
fmuls
sbb
loope
test
stos
mov
lret
imul
cli
fisubl
test
shlb
sti
inc
or
sbb
fdivs
mov
sub
adc
aas
adc
lret
or
xchg
movsl
cs
pop
pop
jbe
outsl
stos
aad
or
dec
pop
and
test
sub
push
jmp
inc
mov
popa
clc
push
pop
jg
aam
test
testb
arpl
lock
gs
aaa
inc
mov
sub
add
push
std
and
mov
int
inc
lods
imul
xchg
add
pushf
iret
mov
out
xchg
mov
inc
or
mov
into
push
dec
mov
cli
lcall
orb
push
mov
pop
jge
push
cwtl
cltd
mov
fldcw
push
adc
and
adc
stos
fcmovnu
insb
jl
mov
inc
add
rclb
pop
jmp
pop
ljmp
and
movsb
lret
outsl
xchg
aam
or
je
mov
sub
popf
add
mov
imul
or
or
popa
dec
cmp
out
pushf
jns
fisubrl
mov
data16
cmp
cmp
dec
loopne
dec
cmp
push
cwtl
adc
icebp
xor
mov
xor
aam
cltd
and
inc
int3
cmp
bound
ds
xor
xchg
push
outsl
cmp
out
and
dec
mov
jne
mov
cmp
adc
push
jne
dec
clc
push
in
clc
addr16
mov
cltd
add
and
push
lret
jecxz
repz
add
fdivl
cmpsb
cmp
xorl
pop
test
mov
push
or
lahf
gs
inc
mov
les
clc
mov
lahf
adc
cmc
scas
pusha
adc
lock
mov
int
lret
push
pop
test
repz
mov
xor
aad
jb
adc
mov
xlat
outsb
mov
add
adc
and
cmp
cld
sbb
cmp
xchg
loop
pusha
lods
nop
lea
cmp
popa
in
mov
jmp
dec
sub
leave
sbb
icebp
loopne
lcall
imul
add
mov
adc
dec
cmp
rcl
outsl
or
test
cwtl
jecxz
test
iret
jecxz
das
sbb
scas
push
xchg
cmc
data16
cld
or
push
sub
test
leave
sub
dec
push
out
mov
repz
cli
out
xchg
jg
adc
mov
loopne
xchg
add
mov
dec
aaa
inc
mov
in
aaa
popf
pop
xchg
mov
or
push
mov
iret
adc
aas
add
sbb
mov
inc
pop
lret
js
lds
dec
cmc
adc
jmp
int3
outsl
add
push
and
add
out
xor
pop
pop
push
jne
and
pop
scas
inc
inc
andl
or
sbb
add
and
test
and
hlt
mov
xchg
mov
push
mov
repz
clc
mov
loop
mov
in
mov
incl
mov
mov
sahf
les
sub
sub
lock
movsl
sub
fidivl
pop
movsb
mov
push
push
and
pop
sub
xchg
pusha
jo
add
xor
out
push
ret
test
imul
or
xor
popa
sbb
in
mov
into
jb
cmp
loopne
iret
add
ret
cmp
add
aaa
mov
arpl
test
cmc
test
mov
dec
mov
lea
inc
xor
mov
arpl
test
fst
pop
fs
in
jmp
pop
jnp
mov
test
jns
pop
loope
test
adc
jne
out
orl
roll
stos
mov
shll
mov
mov
mov
mov
xor
imul
inc
shrb
repnz
mov
gs
cmp
movsb
in
jmp
xor
mov
in
ja
popf
sti
adc
aad
fxch
push
xor
lods
test
inc
scas
inc
xor
push
xchg
jecxz
pop
adc
dec
daa
jo
lock
dec
inc
popf
sub
mov
cmpsb
or
sbb
lret
cld
sbb
cmp
outsb
lds
movsl
pop
out
insb
stc
or
mov
or
insl
inc
push
push
push
js
mov
adc
cmp
iret
ljmp
push
xchg
sub
mov
ret
pop
lock
mov
mov
das
cld
fbld
jle
rol
mov
jmp
call
out
add
push
lods
insl
mov
xchg
dec
lods
inc
sub
xor
fldt
shll
fcompp
gs
fdivs
cltd
sub
dec
jno
mov
mov
and
repnz
dec
add
scas
or
cs
pop
notl
jl
pop
test
mov
jns
fsubl
test
aaa
cmp
test
jno
frndint
push
push
mov
adc
xchg
pop
test
cmc
aad
fimuls
test
dec
fnstcw
mov
adc
into
gs
inc
xlat
stc
lods
std
in
sub
pop
jae
rorl
iret
fstps
bound
jl
les
lea
push
inc
les
insb
loopne
jl
mov
and
pop
inc
loop
je
lods
push
mov
mov
jg
push
cld
mov
pop
test
add
dec
mov
push
out
xchg
stos
mov
into
aas
xor
cmpsl
dec
push
push
imul
rorb
pushf
add
mov
jne
cmp
xchg
repnz
lcall
arpl
pushf
xor
test
mov
xor
arpl
ss
xchg
in
test
pusha
inc
lods
mov
sub
imull
movsl
gs
push
icebp
xor
mov
es
xor
mov
jbe
mov
fcoms
mov
jae
dec
adc
lret
cmp
mov
dec
jae
xlat
dec
in
push
pushf
mov
xor
scas
inc
arpl
sbb
jge
stc
repz
out
enter
mov
pop
das
xchg
inc
out
xchg
pop
popa
add
inc
mov
movsb
lcall
data16
clc
xchg
xchg
test
cmpsb
mov
outsl
mov
cmp
nop
pop
cmpsl
dec
sbb
shlb
xchg
or
cmpb
pop
sub
cwtl
mov
test
movsb
adc
pop
sub
pop
pop
mov
lret
insb
cli
repnz
shrl
scas
arpl
fstl
xor
cmp
pop
clc
push
imul
sub
cmp
inc
in
mov
call
xchg
outsb
jl
cmpsl
aas
push
pop
insl
mov
mov
add
pop
pop
leave
roll
add
mov
mov
ljmp
lret
xorl
mov
std
out
mov
jne
mov
gs
hlt
adc
js
movl
int3
xlat
cli
or
xor
lret
jnp
and
mov
and
sbb
jge
rcll
cmp
pop
cmp
daa
aaa
push
inc
stc
addr16
xchg
imul
scas
outsb
imul
add
jp
repnz
aad
cmc
cmpl
or
inc
fcompl
je
loop
xchg
dec
popa
push
cld
addr16
imul
sub
decl
pop
les
inc
jnp
in
mov
dec
js
cmc
data16
cwtl
pop
adc
xor
pop
jne
inc
push
out
insl
fdivl
test
cmp
pop
cld
sbbl
into
das
mov
outsl
dec
inc
bound
pop
hlt
mov
outsl
push
pop
jnp
nop
movb
pop
je
scas
jmp
addl
adc
pop
repnz
xor
pop
jns,pt
mov
ffreep
loopne
push
mov
fldcw
mov
test
jne
outsb
lods
and
dec
adc
negb
or
movsl
in
into
insl
sub
mov
inc
sub
insb
and
add
into
and
jns
loop
inc
in
mov
dec
mov
pop
fldenv
add
sbb
scas
bound
jg
xchg
test
shl
test
es
push
sti
mov
pusha
and
je
mov
ret
fsubrp
push
and
icebp
dec
mov
xchg
aad
mov
js
push
pop
shll
add
scas
jb
bound
ficompl
or
shlb
push
sbb
rol
mov
dec
fistpll
sbb
sub
pop
loopne
out
mov
pop
cmp
ljmp
ja
mov
pop
addl
ljmp
mov
insl
sub
pop
pop
pushf
adc
xor
fisttpll
fwait
stos
and
push
fists
dec
mov
das
aad
lods
jbe
popf
mov
push
out
xor
arpl
lods
fisubs
outsb
stos
and
add
lods
push
andb
outsb
fsubl
daa
fsubrp
js
push
stos
minps
nop
dec
fs
pop
mov
subb
xchg
icebp
andb
addr16
adc
imul
js
mov
mov
idivl
mov
inc
lcall
cwtl
pop
cmc
mov
prefetcht2
mov
jecxz
out
push
bound
or
inc
xorb
jbe
mov
inc
mov
mov
addr16
js
pop
adc
mov
mov
addr16
xchg
mov
xor
adc
int3
faddl
fidivl
and
addb
push
dec
and
xor
stos
inc
fcomp
add
out
mov
iret
inc
in
int3
and
or
hlt
push
jbe
je
mov
je
sub
xor
test
jbe
pop
shrb
sub
sub
push
xor
mov
sub
dec
mov
dec
mov
adcl
ftst
arpl
mov
xchg
adc
sub
or
mov
xchg
insb
mov
sbbb
imul
mov
dec
arpl
call
mov
movsl
stos
es
pop
test
rcll
loope
sub
or
pop
dec
incl
mov
pop
lcall
lea
std
adc
sub
mov
movsl
dec
xor
outsb
pop
inc
inc
popf
aaa
mov
mov
inc
pop
xor
bound
test
das
or
mov
or
mov
cmp
ficompl
push
fldt
dec
sub
mov
ja
jo
push
lahf
mov
call
mov
mov
mov
xor
jnp
mov
test
jne
insb
xchg
sbb
add
mov
push
aad
inc
outsb
jl
aad
pop
mov
lret
adc
add
push
mov
popa
enter
dec
mov
xor
jecxz
push
inc
fldl
stc
or
fdivr
or
int3
jne
faddl
popw
outsb
lahf
jnp
inc
mov
jne
xchg
xchg
add
mov
mov
add
jmp
mov
lret
leave
fmul
jo
adc
xchg
xor
ljmp
hlt
dec
loop
cmpsl
bound
adc
push
jnp
xchg
and
in
inc
lods
cmp
mov
lea
pop
adc
inc
sub
jmp
jl
or
cmp
inc
pop
nop
pop
mov
int
lret
cld
mov
out
sbb
inc
add
sub
bound
cmp
fwait
mov
aas
ljmp
int
sub
out
cld
pop
xor
aas
ss
in
bound
and
cs
jne
movsl
mov
leave
fistl
test
arpl
ffree
out
iret
outsl
mov
cmp
das
cli
dec
cli
cmp
jl
aad
push
lret
and
adc
xor
xor
pop
test
sarl
outsb
insl
xor
jns
push
outsl
leave
mov
add
jo
lock
je
add
mov
imul
mov
push
mov
lcall
mov
sti
lcall
in
mov
mov
mov
stos
scas
and
clc
inc
ja
out
imulb
mov
jmp
aaa
insb
add
fisttps
lahf
stc
mov
jae
jmp
mov
push
movsb
sahf
pop
push
jmp
mov
in
cmp
inc
repnz
pop
test
es
repz
dec
dec
jecxz
loope
lcall
nop
repz
in
clc
adc
aaa
sub
mov
mov
int3
rcll
sbbb
push
iret
dec
dec
pop
and
dec
mov
inc
sub
lods
sub
inc
xor
jne
dec
pop
push
push
sbb
jne
out
hlt
repz
sub
test
lret
cmp
fmuls
or
aas
and
fsts
popf
add
jnp
adc
xor
cs
ja
js
sub
or
adc
cmp
mov
ret
repnz
test
pusha
mov
aam
pop
mov
push
das
adc
inc
data16
xor
outsl
inc
ss
aam
aad
das
rorb
les
out
adc
jne
mov
add
lods
or
cld
fwait
pop
sbb
push
mov
cmp
pop
cwtl
lcall
mov
outsb
std
mov
cmp
aam
scas
cmpsb
cmp
adc
pop
pop
adc
and
imul
cld
mov
jne
sbb
andl
idivl
dec
jo
jne
out
inc
sbb
cmp
in
fmuls
lea
dec
or
adc
pop
push
add
rorb
xor
push
repz
shrb
dec
mov
pop
movsb
cmp
fldl2t
popf
dec
and
sarl
pushl
aad
movsb
pop
xchg
push
jle
cmp
subb
cmc
mov
add
cs
adc
sub
xor
xor
testl
push
insl
std
insb
fwait
cmp
pop
ret
fistpll
sbb
push
or
sbb
out
xchg
sub
mov
fcom
ficoml
stos
fstpl
or
outsb
outsb
imul
cmc
inc
imul
test
xor
push
sub
lods
mov
shr
xchg
in
dec
jno
cmp
cmp
lds
sbb
loopne
std
push
in
cs
mov
mov
std
mov
cmpsb
fwait
in
mov
ret
hlt
cltd
pop
sahf
out
mov
mov
add
cli
nop
xor
aam
pop
loope
fabs
pop
mov
aas
lods
sub
fidivl
gs
idivb
inc
sbb
push
fsubrl
stc
movl
mov
xchg
in
outsb
and
fsubr
cli
nop
inc
cld
xchg
insl
loope
mov
cmp
inc
insb
in
or
mov
xor
fadd
sub
imul
shrb
inc
int3
and
addr16
pop
cwtl
adcl
dec
fisubrs
jae
out
popa
lahf
ss
daa
pusha
pop
aam
ret
jbe
arpl
stos
shll
sahf
rcr
sub
push
dec
and
shll
rcll
mov
mov
pusha
sub
rcr
xor
ja
and
std
out
add
outsl
pop
lods
testl
das
std
lahf
lods
xchg
pop
pop
mov
xor
in
pusha
jno
lret
pop
imul
dec
cli
pop
mov
int3
lahf
sub
pop
in
mov
add
mov
and
ds
in
pusha
dec
in
jg
popa
xor
leave
cmpsl
cld
inc
inc
out
and
rcrl
or
cltd
iretw
dec
loopne
in
repnz
scas
mov
mov
mov
icebp
into
cmp
mov
jne
ret
cmc
cmpsl
add
push
les
cmc
repz
inc
fs
insb
add
xor
fldt
push
jbe
daa
outsl
pop
fwait
or
xchg
and
fs
imul
shll
inc
test
jl
lea
or
fnsave
mov
and
iret
iret
aaa
xchg
ds
nop
dec
push
test
icebp
mov
or
ret
aad
cld
imul
inc
iret
cmp
stos
fwait
mov
mov
rorl
test
iret
xor
arpl
mov
rclb
push
xchg
mov
adc
cs
jne
cwtl
das
add
dec
push
mov
mov
push
loopne
pop
in
out
dec
insl
ja
mov
xchg
mov
jmp
push
gs
push
or
cld
xchg
js
imul
fsubl
decb
lea
adc
cmp
push
fidivrl
pop
xchg
dec
lea
in
daa
lret
mov
testb
mov
mov
pop
pop
test
das
or
test
add
inc
xor
je
stos
jbe
jno
in
in
fcomi
add
outsb
pop
scas
xlat
sub
hlt
mov
int
in
cmpsb
push
fwait
int3
movl
out
sahf
and
aad
pop
add
insl
mov
mov
jge
call
ljmp
jno
pop
aam
jg
push
push
pushf
sbb
sbb
inc
adc
ds
jno
cmp
rcrb
mov
testl
or
push
pop
in
fildll
stos
rcrb
or
push
rep
fnsave
daa
rorl
out
mov
fnstsw
imul
test
psadbw
push
jae
repz
xchg
aam
lret
das
les
pop
adc
scas
fistpl
add
movb
sar
mov
adc
inc
mov
push
sbb
insl
sub
jp
mov
lea
movsb
adc
aad
cmc
mov
imulb
daa
lock
jp
cmp
test
xor
daa
pop
out
push
sbb
pop
imulb
xor
jno
nop
daa
mov
mov
neg
fbstp
leave
adc
daa
je
mov
neg
enter
daa
mov
mov
negb
xor
gs
daa
sub
repz
out
cmp
jecxz
pop
dec
fwait
mov
xchg
shlb
pop
mov
cmpsl
ret
leave
adc
inc
xor
dec
faddl
shl
and
cmpsl
add
test
ret
jp
jnp
mov
push
push
call
enter
or
lods
call
push
jmp
sbbl
cltd
sub
xchg
xchg
cs
pop
gs
pop
or
insb
int
fcmovnbe
add
and
adc
lea
je
cmp
sti
loope
jb
lods
cli
data16
dec
adc
popf
ret
add
negl
int3
sub
mov
out
ss
rcr
test
jb
jge
push
aad
call
jecxz
or
cltd
xor
sub
lret
xlat
cmp
fbld
adc
push
xchg
inc
mov
rorb
inc
leave
cmpsb
pop
in
mov
ds
add
cmp
ficompl
cvtps2pi
jae
ret
mov
in
dec
aam
out
add
xchg
adc
das
sti
xor
and
leave
push
repz
cld
xchg
leave
and
sbb
fnstenv
stc
clc
sub
mov
jmp
pop
inc
jo
dec
and
clc
dec
lret
in
addr16
imul
push
out
and
and
fidivl
movsl
mov
shlb
test
mov
cmp
mov
fildl
fdivrp
test
stos
jl
lods
fsubl
pop
add
xor
pop
sub
push
and
orb
leave
ficoml
xor
int3
fs
ficoms
adc
in
int3
push
inc
aas
jbe
mov
and
out
lret
cltd
stos
cmc
jl
cmp
jne
pushf
ss
jmp
leave
fs
mov
jge
jge
rorl
jmp
xchg
pop
pop
es
adc
sbb
lds
out
and
mov
push
xor
call
and
sbb
sbb
mov
mov
fld
jae
sbb
iret
adc
ja
or
aam
xchg
jnp
ret
jmp
push
in
push
cmp
cmp
in
ret
hlt
push
pusha
xor
push
gs
jno
push
mov
popa
pop
push
mov
aaa
xchg
inc
jb
in
and
push
lret
jne
sti
xor
mov
sbb
in
cmp
cmp
inc
gs
jl
or
xor
cld
mov
les
pmovmskb
mov
popa
testb
cmp
outsl
push
cmc
popl
mov
xchg
popf
roll
mov
clc
popf
stc
cmp
xor
adc
mov
push
test
das
jecxz
xchg
orl
js
mov
push
ja
jo
sahf
mov
fwait
test
add
mov
dec
add
jl
stos
mov
cmp
inc
popa
les
jecxz
add
mov
mov
mov
dec
pop
and
xor
sub
mov
push
scas
and
push
xchg
jo
lret
in
pop
mov
popf
jae
sbb
mov
rcl
jg
adc
sbb
mov
iret
int
mov
xor
iret
jl
lahf
pop
push
aaa
stos
sbb
push
pop
xor
sub
or
pop
mov
inc
loop
call
test
cmc
adc
pop
jmp
hlt
mov
mov
in
int
mov
mov
ss
jecxz
sub
sbb
in
leave
shr
mull
fistps
or
sti
pop
xor
fwait
and
adc
adc
xchg
mov
or
push
cld
data16
mov
mov
aam
pop
es
sub
iret
jecxz
outsb
add
cmp
std
or
sub
fdivrs
int
pop
ljmp
in
inc
fwait
mov
sub
mov
pminsw
loopne
add
sbb
cltd
je
lret
inc
cld
rorb
mov
mov
inc
arpl
lea
lods
push
sbbb
in
outsb
sbb
cmp
pushf
mov
into
add
pop
push
inc
adc
fnstsw
ja
jl
and
mov
out
dec
gs
cmc
sbb
add
out
fldt
data16
shll
push
or
sub
xchg
std
bswap
or
adc
movsb
jno
test
sub
add
jl
xchg
jmp
movsl
inc
push
faddl
andb
jnp
lcall
loop
push
adc
adc
or
adc
and
mov
mov
mov
in
push
sbb
add
out
jmp
in
sbb
inc
fdiv
pop
push
mov
insb
mov
xlat
jbe
fistpll
mov
xor
testb
push
mov
inc
popa
sbb
inc
gs
data16
in
fisttps
out
int3
fstpl
mov
push
out
sti
pop
mov
xchg
dec
cwtl
lcall
inc
ja
dec
mov
jo
pop
pop
aas
mov
repz
clc
loopne
and
xchg
sbb
shrl
jo
pop
or
or
pop
repz
and
xor
cmc
pop
mov
mov
sbbb
lods
or
pop
cmp
mov
mov
pop
cmp
dec
call
stos
stc
sbb
aas
adc
mov
add
mov
fwait
test
and
sbb
aas
into
imul
fadds
or
es
call
mov
test
data16
es
xchg
bound
and
nop
aaa
dec
pop
and
mov
outsl
stc
xor
cmpsl
or
mov
pop
and
xchg
inc
roll
dec
daa
nop
xor
jle
cmp
or
xchg
pop
das
and
stos
push
sbb
sub
lock
mov
icebp
mov
push
xlat
lret
arpl
or
ss
testb
mov
push
xor
xor
sbb
call
fwait
jb
lret
mov
std
and
cmp
int3
adc
inc
or
gs
fisttpll
lcall
add
subb
lods
or
push
dec
loop
je
subb
insl
mov
fdivr
rcrb
dec
lcall
xchg
and
add
xor
ljmp
mov
scas
imul
sbb
lds
and
pop
fwait
sbb
sbbl
cmc
shl
sbb
cmpsb
ret
aaa
sbb
fidivl
lods
mov
mov
pop
mov
cmpsl
in
push
jne
in
adc
mov
outsl
lret
push
cmpsb
jae
shlb
ljmp
sub
mov
sbb
flds
nop
ds
decb
and
push
mov
orl
stc
fsubr
fcomp
adc
popa
push
add
inc
movsb
pop
mov
or
dec
cmp
cmp
jp
lret
shrb
jb
xor
pop
insb
jle
test
mov
addr16
pop
scas
xor
fldt
popa
rclb
arpl
cmp
pop
push
aaa
jl
stos
ja
adc
inc
push
mov
je
and
arpl
jnp
ja
cmp
mov
pop
repnz
insl
cmpsl
sahf
imul
push
mov
push
in
push
insl
je
movb
inc
pop
push
int3
out
push
jmp
mov
dec
inc
in
xor
mov
enter
call
inc
call
or
xor
dec
pop
test
dec
in
mov
aam
jge
in
cmp
push
pushf
scas
pop
out
pop
loope
fucomp
cwtl
mov
xor
xchg
inc
sub
sbb
std
dec
cmpsb
cmp
cltd
pop
out
xchg
sub
xchg
lds
pop
es
in
push
adc
shl
push
push
dec
pop
jo
subb
lea
in
push
mov
ret
or
lahf
fiaddl
sub
call
lss
inc
pop
jle
cmp
popa
aaa
into
xchg
jmp
mov
js
mov
mov
sahf
cmc
mov
mov
adc
jp
gs
lds
sbb
call
rorb
ret
pop
lods
imul
loopne
fstl
shlb
adc
adc
je
str
push
lods
jmp
fidivs
or
or
lret
aam
clc
mov
mov
inc
movsb
jl
xchg
sbb
or
mov
sub
out
arpl
repz
popf
in
test
jb
dec
inc
scas
jb
in
rol
shlb
ret
shll
sbb
ret
sbb
and
mov
mov
das
mov
dec
mov
cmp
adc
js
movsl
lods
push
push
mov
mov
adc
ss
std
cltd
cmpsl
pop
cli
and
movsl
mov
idivl
pop
ds
xchg
or
shr
shr
adc
sub
mulb
mov
cmpsb
dec
repz
in
ja
and
or
daa
outsb
shl
shrb
add
mov
insl
push
dec
dec
inc
pusha
cmp
push
inc
in
leave
enter
imulb
aam
adc
xor
loope
mov
jmp
xchg
loope
icebp
dec
pop
aas
hlt
icebp
mov
xor
subl
mov
push
imul
pusha
lock
mov
and
pop
push
jns
sahf
push
movsl
iret
sub
mov
and
stc
aad
push
inc
inc
imul
iret
data16
pop
and
sub
pop
dec
dec
ret
jns
pop
cmp
and
xchg
fcmovbe
sub
dec
add
repz
mov
sbb
outsb
paddusw
push
dec
mov
lea
cmp
xchg
lcall
add
jb
jge
andl
loope
xchg
xchg
pop
andl
xorb
xchg
xchg
movsl
ret
movsl
mov
imul
push
inc
into
pop
leave
fiadds
aas
xchg
jp
rclb
adc
cmpsl
cmpsb
arpl
fmul
fnsave
push
jo
xchg
and
and
xor
lahf
andb
arpl
add
and
in
push
stc
loopne
data16
cli
int
lret
xchg
mov
mov
fistpll
push
rorb
cmp
lcall
loop
sbb
sbb
mov
push
xor
adc
fs
pop
and
arpl
inc
sub
mov
sub
mov
pop
ret
sbbl
js
data16
mov
aad
out
inc
movq
mov
dec
xchg
mov
leave
inc
cmp
cltd
cmp
and
add
cmp
jno
pop
iret
ja
clc
test
jecxz
sub
sti
adc
sbbb
scas
pop
cs
push
orb
stc
add
sub
outsl
push
jecxz
jge
iret
pop
xor
out
lock
fimuls
push
jg
and
cli
mov
rcll
into
cmp
pop
pop
leave
aad
imul
push
dec
pushf
sub
movsb
or
loop
mov
inc
mov
clc
ds
lods
pusha
in
test
lock
cmpsb
scas
mov
sub
clc
in
in
int3
dec
aas
adc
js
in
data16
sbb
sahf
pop
jb
imul
sub
mov
js
sub
iret
push
repnz
andl
xchg
aam
mov
icebp
mov
inc
iret
add
push
or
inc
mov
pop
ds
jne
cli
sahf
sub
or
xor
data16
fwait
cs
or
pop
out
scas
call
jle
pop
clc
rolb
aam
xchg
mov
clc
andl
dec
bound
cvtpi2ps
inc
mov
loop
and
xchg
mov
pop
adc
iret
loope
insb
sbb
push
mov
xlat
dec
fwait
cmpsl
mov
and
adc
std
mov
push
aam
sbb
in
dec
xchg
in
hlt
arpl
xchg
sbb
pop
sub
sub
incl
dec
mov
je
pop
push
jo
daa
dec
push
movsb
and
sub
inc
xchg
das
out
dec
inc
clc
mov
outsl
jae
aas
push
popf
lods
cmpsb
xor
add
into
push
mov
push
push
sbb
push
jno
mov
push
scas
mov
mov
dec
or
mov
pop
push
test
fld
mov
ss
loopne
adc
cmpsb
mov
test
je
jno
xor
sbb
loop
jecxz
sbb
and
adc
outsb
mov
lret
std
xor
push
inc
movl
into
scas
loope
push
into
inc
jle
mov
bound
fwait
mov
stos
int
xor
loope
xchg
sub
jno
xor
mov
jb
fwait
addr16
data16
cltd
jne
flds
roll
xor
mov
fwait
std
sub
and
sbb
push
mov
jns
fdivl
arpl
jg
jb
int
push
xlat
adcb
cwtl
or
cwtl
icebp
jo
rcll
jae
jb
pushf
xor
mov
mov
shll
imul
mov
xchg
jmp
loope
cld
stos
push
mov
jns
dec
arpl
xor
jbe
shll
xchg
dec
dec
mov
sbbl
fcoml
out
mov
xchg
es
xchg
je
mov
mov
lds
ret
jge
test
adc
sbb
daa
jl
cmp
mov
imul
mov
dec
sub
jb
sub
xorb
xor
repz
add
mov
enter
loopne
leave
and
mov
pushf
icebp
movsl
cwtl
in
mov
adc
dec
jns
ret
dec
mov
popf
roll
dec
mov
jl
sub
or
ret
outsl
pop
in
xchg
pop
mov
fucomp
dec
repnz
in
push
inc
out
inc
sbbb
repnz
popf
cli
jg
mov
xlat
add
stc
push
clc
sub
lahf
push
mov
mov
out
and
mov
jae
xchg
mov
rolb
repnz
ret
pop
in
gs
out
test
rorl
lds
mov
push
sbb
aam
cmpsl
aaa
pop
cmp
mov
sbbl
cmp
pop
jne
in
js
push
pop
or
adc
jp
push
mov
and
pusha
pop
jmp
fdiv
es
getsec
sbbl
inc
pusha
xchg
movsb
aaa
adc
dec
fxam
out
loop
lret
mov
push
lahf
ss
loope
lods
dec
shll
and
ret
loope
rclb
int
cmc
pop
sub
out
fcompl
mov
bound
push
loopne
sbb
adc
and
hlt
gs
pop
xchg
xchg
push
mov
push
sbb
cmp
pop
jecxz
clc
cmpsl
imul
out
sahf
sbb
jmp
jb
cli
adc
mov
jns,pt
xchg
fwait
cmp
cltd
sub
shrb
push
test
sub
das
fs
add
out
mov
mov
in
xchg
outsb
outsl
add
rorl
out
daa
jo
xchg
mov
sub
push
and
cmc
mov
jecxz,pn
sbb
mov
sahf
xor
dec
push
jecxz
insl
test
mov
daa
xor
or
mov
jb
dec
fucomp
pop
push
and
icebp
and
xchg
stos
shl
ja
or
push
mov
fcmovnu
xor
stos
pushf
or
lea
pop
outsl
push
inc
xchg
mov
test
mov
xchg
adc
lods
jg
imul
adc
loop
fsubs
scas
inc
push
cld
push
je
mov
and
jae
xor
pop
adc
sub
icebp
or
mov
cltd
sbb
dec
cmp
mov
jecxz
xor
aas
dec
nop
aaa
aam
sub
lock
or
dec
cmp
inc
lahf
cmp
add
movsb
repnz
push
call
cmc
sub
mov
test
pop
cmp
adc
inc
loope
jmp
test
scas
mov
cwtl
mov
sbb
and
sbb
pop
mov
dec
jnp
test
or
add
mov
not
add
jecxz
pop
cs
xor
cld
xchg
jle
leave
jle
xchg
pop
mov
xor
push
add
xorb
xlat
pop
loopne
sbb
out
jecxz
leave
push
xchg
ds
and
sahf
sti
xchg
rcrb
mov
and
jge
or
or
push
in
mov
sub
mov
sbb
js
clc
cmp
mov
sahf
cli
fwait
xchg
xchg
cmc
pop
inc
jp
in
aas
addr16
pop
out
cld
addl
stos
jl
std
push
notl
cwtl
shrl
pop
push
cmp
sub
scas
inc
mov
jne
mov
push
movsl
fsubrl
jbe
es
push
aaa
roll
dec
in
lcall
out
cmp
fimull
sti
stc
lock
xor
push
add
mov
inc
mov
xchg
sbb
outsb
inc
stos
insl
loope
mov
fildll
lea
cli
cwtl
test
xchg
lea
push
pusha
stos
iret
lret
mov
sub
lcall
lock
add
aad
cld
das
insb
rcl
sbb
mov
xchg
leave
jle
mov
push
icebp
movsl
fldcw
jne
stos
and
in
pop
fldt
adc
lods
fnstsw
and
sti
xchg
in
fsub
mov
ljmp
inc
and
lds
mov
sbb
cwtl
push
insl
dec
inc
xor
jcxz
inc
dec
mov
sbb
imul
lcall
xor
cmp
or
fwait
jno
stos
es
sbb
xchg
sti
push
mov
mov
cld
adc
mov
push
je
mov
cmpsl
or
rep
std
pop
inc
movsl
jmp
lods
mov
iret
push
gs
call
movsb
gs
cmp
bnd
dec
push
out
cmp
addr16
insl
ret
rcll
and
adc
mov
test
and
inc
repz
inc
mov
std
sub
or
jne
shlb
andb
or
nop
mov
notb
adc
xor
add
in
jl
dec
in
lock
mov
aam
xor
inc
and
xchg
sbb
negl
mov
adc
jmp
xchg
inc
pop
clc
push
xorb
mov
mov
cmp
jp
test
mov
xchg
inc
bound
xchg
ficoms
adc
push
inc
sub
pop
negb
add
cs
sub
pop
mov
jnp
and
inc
lret
mov
jb
cmc
jg
jl
mov
pusha
inc
sub
xor
lods
cmp
movsl
dec
pop
adc
dec
jae
iret
cs
stos
daa
data16
mov
dec
jae
pop
adc
jmp
repz
leave
sbb
scas
mov
mov
mov
shrb
cli
leave
aad
loop
loopne
aad
mov
std
lcall
push
std
into
push
and
inc
lods
or
push
add
sbb
fs
dec
mov
dec
out
in
ja
cli
fcompl
jns
mov
xchg
push
scas
mov
test
cli
loopne
add
loopne
int3
loop
xchg
sub
and
push
inc
mov
out
int3
call
lahf
test
sti
imul
mov
outsl
cltd
mov
shrb
lds
stos
dec
pusha
popf
into
lcall
jmp
fdivrs
xor
mov
add
push
inc
and
push
push
xor
and
push
inc
loopne
dec
add
int3
int
outsb
int
in
clc
frstor
adc
cmp
bound
pop
ljmp
jmp
mov
test
xlat
fcoms
addr16
adc
loopne
adc
dec
inc
fdivrs
push
movsl
add
loop
insb
and
xor
and
cmp
jo
stos
inc
out
cmpsl
out
xor
cmpsl
in
test
pop
fdivrl
jo
mov
or
push
sub
cs
pop
pusha
clc
and
bound
movsl
cmpl
push
cmp
or
push
or
push
push
adc
mov
fwait
sub
ss
in
cmp
cli
pop
push
outsb
ret
loopne
or
mov
dec
insb
mov
add
repz
lods
cmp
adc
cltd
dec
push
push
ljmp
or
daa
push
sub
aaa
dec
pop
in
xchg
rcrb
adc
jl
scas
pop
movsb
sub
scas
jp
rolb
mov
mov
sbb
push
sbb
sub
or
test
insb
lretw
xchg
in
enter
shlb
lcall
push
adc
push
adc
inc
sbb
adc
add
inc
add
fwait
pushl
leave
in
lods
fwait
sti
xchg
test
ss
mov
das
insb
stos
or
sbb
sub
cmp
jp
or
lds
push
mov
lret
pop
push
mov
pop
xchg
rcrl
insb
adc
and
loope
std
dec
test
inc
ds
sub
pop
insb
repnz
call
iret
add
mov
push
jl
loope
cwtl
jae
fdivs
add
test
push
fisttpll
pushf
mov
ljmp
jns
cmp
rclb
jns
and
loopne
xor
adc
fstps
cs
sbb
or
std
push
in
cwtl
adc
xchg
mov
and
out
aad
in
fisubrl
mov
mov
sub
outsb
ss
aaa
mov
mov
xor
jg
icebp
lret
or
xor
lcall
push
cwtl
mov
lret
lret
mov
jmp
push
outsb
popa
negl
jecxz
es
cmp
negl
and
xchg
loope,pt
cmp
rorl
aaa
into
adc
mov
inc
cld
lahf
aaa
into
xadd
int
ret
pop
mov
popa
sub
push
pop
call
xchg
jns
cltd
imul
addr16
push
lods
arpl
fnstsw
dec
mov
pop
inc
fimuls
iret
push
outsb
gs
sbb
sub
xchg
sub
mov
pusha
and
mov
push
mov
dec
adc
outsb
repnz
xor
sbb
popa
pusha
cmp
jnp
mov
add
enter
mov
int
int3
arpl
pop
inc
fimuls
xchg
test
add
std
dec
sarb
test
jae,pn
mov
pop
or
movsl
xchg
out
add
mov
mov
ret
fisubl
pop
jns
mov
insb
sub
xchg
jbe
or
call
cmp
pop
inc
test
mov
imul
movsb
mov
push
inc
insb
dec
jne
inc
scas
jae
pop
lds
adc
inc
sbb
dec
test
cwtl
enter
scas
fidivl
xor
bound
stc
nop
xor
ja
sbb
adc
addl
lahf
xchg
ss
cmpsb
push
popf
adc
pusha
inc
mull
sub
cltd
cmc
out
daa
stos
add
mov
sti
and
je
xchg
and
out
push
call
push
inc
outsl
push
jae
push
call
mov
aaa
into
add
repz
and
push
sbb
dec
arpl
and
mov
pop
in
test
imul
repnz
and
lds
pop
je
test
test
mov
lahf
ss
xchg
pusha
sub
int
xchg
mov
enter
or
shrl
sub
add
xchg
inc
fcmovnb
mov
stc
adc
aaa
out
imul
aam
ljmp
and
jmp
fldcw
or
push
pop
testb
loop
xchg
adc
fbstp
xor
hlt
mov
repnz
push
inc
fdivl
xor
or
mov
pop
cld
inc
fldt
and
push
jmp
test
jo
loope
dec
loope
add
add
jno
sbb
cmp
or
sbb
xor
fsubrs
out
dec
loope
fidivrl
xor
add
push
fyl2x
mov
in
sbb
and
fsub
jnp
push
add
inc
out
xor
push
bound
pop
push
jmp
adc
mov
fwait
or
sbb
pop
dec
out
and
testb
push
out
adc
mov
loop
rcll
fidivrl
or
imul
adc
es
pop
hlt
adc
pop
inc
or
pop
cmp
xor
or
ja
sub
xchg
pop
stos
xchg
sub
scas
add
push
cld
pop
ret
pop
mov
das
dec
lods
adc
in
mov
xchg
dec
mov
jnp
jle
dec
pushf
mov
lret
arpl
shl
repz
ja
std
xchg
dec
cwtl
sub
push
or
add
dec
xchg
fs
inc
pop
jns
dec
xchg
jp
addr16
fcoml
xchg
insb
mov
cmp
clc
pop
hlt
xchg
sub
cmp
mov
mov
data16
loope
inc
fcoms
test
mov
insl
gs
lahf
ds
xor
sarb
xchg
jo
push
xchg
std
xchg
leave
les
aad
pop
sub
pop
mov
mov
cmp
jbe
movsb
cmp
imul
mov
fbstp
cmp
insb
xchg
mov
mov
or
dec
insb
xchg
out
enter
ljmp
or
jmp
jno
ds
outsl
lcall
jmp
jg
ds
lcall
in
pop
cmpsl
ds
cmp
mov
cmc
in
imul
lcall
hlt
mov
push
mov
imul
jns
pushf
cmp
push
imul
out
pop
lea
xchg
lea
mov
adc
pusha
jmp
subl
pusha
imul
jo
jle
cmp
push
icebp
mov
jge
mov
bound
testb
addr16
fs
mov
mov
mov
imul
lcall
pusha
rcrb
imul
jle
fisubs
mov
xchg
das
mov
add
pushf
mov
mov
sub
and
pusha
in
xchg
lds
testl
call
decl
xor
arpl
jbe
lods
lods
inc
loopne
daa
mov
fs
xchg
sub
lods
les
dec
daa
mov
pop
nop
pop
lock
shr
addl
or
sbb
sbb
sub
pop
in
mov
dec
add
jne
and
jle
ds
sbb
and
dec
dec
push
lods
jge
and
into
mov
dec
fistps
aas
xchg
sub
mov
xchg
jb
shll
lods
adc
sub
pop
fnstenv
xchg
popa
mov
xor
imul
push
mov
ret
aaa
pop
pop
pop
jo
add
mov
out
ret
insb
xchg
mov
adcb
xchg
sub
enter
lcall
stc
mov
pop
scas
shrb
in
lcall
dec
mov
popa
jbe
xchg
push
dec
out
mov
xchg
mov
push
icebp
mov
pushf
push
call
fwait
dec
sub
jge
es
into
push
inc
fiadds
sahf
sbb
loope
pop
ret
pop
lea
and
enter
or
jle
adc
inc
pushf
outsl
push
rcr
fidivl
dec
call
dec
movsb
pop
scas
fcom
lods
inc
add
jp
sbb
out
lods
addr16
loopne
insl
cld
cmp
pusha
insb
and
inc
fsub
js
stc
lods
add
cmp
pop
out
lcall
mov
and
push
scas
lods
inc
fdivl
nop
movsb
add
in
push
xchg
sub
mov
fidivs
add
data16
repz
fwait
xor
aad
dec
sahf
das
iret
imul
jb
mov
push
insb
jne
mov
cmp
pop
push
imul
hlt
or
cmp
lahf
jo
xor
xchg
adc
cld
push
mov
mov
inc
mov
xor
dec
filds
mov
pop
mulb
mov
and
fbstp
adc
adc
fs
cs
and
jo
jbe
mov
push
cwtl
or
lret
jns
jmp
int
jnp
push
lods
cmp
in
addl
pop
mov
push
in
inc
adc
shll
fdivl
cmp
cli
inc
aam
inc
add
bound
mov
leave
pusha
cmpsl
xadd
enter
ror
popa
add
or
dec
cmp
out
daa
loope
pushf
adc
addr16
sub
fdivl
idiv
xchg
daa
loop
sub
cli
jnp
sub
jnp
aas
cmc
sbbl
popa
fwait
xor
mov
mov
inc
and
int
xor
dec
jns
ss
lcall
mov
clc
push
or
out
movsl
push
fcomip
mov
rolb
popf
sub
xchg
pop
pop
test
push
sbb
mov
lock
rol
inc
push
call
sub
sub
push
jecxz
sub
push
mov
adc
cmp
and
out
adc
add
xor
xor
or
xor
sbb
je
and
mov
aaa
sahf
pop
test
and
dec
xchg
stos
gs
mov
jnp
push
lcall
adc
arpl
imul
pop
pusha
pushf
cmp
testb
sbb
push
add
jl
ds
push
sub
and
jns
jp
inc
pop
scas
or
or
push
jb
cmc
xor
cwtl
xchg
sub
mov
insl
lahf
jns
cmpsl
pusha
dec
xor
popa
aas
fwait
xchg
lcall
subl
stos
mov
mov
in
stos
adc
xor
push
fbstp
cld
adc
shll
push
insl
int3
push
pusha
sub
out
lea
mov
addb
fnstenv
pop
nop
jg
push
cmp
cmp
popf
test
push
scas
rclb
jo
jmp
inc
mov
pop
test
or
daa
fists
and
inc
mov
inc
sub
mov
push
pop
adc
pop
out
push
cs
cmp
dec
xchg
outsl
xor
pushl
lcall
and
and
ja
iret
das
sarl
arpl
pusha
hlt
mov
mov
pop
adc
inc
xchg
leave
push
adc
xchg
mov
cli
inc
or
bound
in
popf
jg
test
lahf
repnz
xor
fwait
xor
xor
jmp
daa
rolb
lods
xchg
stos
fisttpl
mov
cmp
mov
cmp
push
inc
stos
arpl
rcll
inc
frstor
jecxz
sti
enter
outsl
fistl
stos
cld
nop
ljmp
xchg
ret
dec
sub
aad
jno
pop
or
jne
call
cwtl
and
gs
call
or
test
mov
ret
jmp
lods
jge
adc
jge
push
negl
cmp
shll
and
xchg
aam
rorl
imull
cmp
rorb
shrb
mov
cmp
inc
mov
mov
jae
jnp
sub
and
cmp
push
fs
ja
inc
xor
jl
dec
mulb
xchg
js
mov
mov
jnp
popa
xchg
lea
dec
mov
adc
adc
mov
sarb
fucomp
ss
sub
push
push
fld
inc
call
lods
xchg
js
in
fiaddl
mov
mov
fsub
jne
arpl
mov
stc
or
andb
call
sbb
stos
inc
insl
lds
or
and
shll
popf
jno
and
test
jle
imul
inc
inc
mov
push
sub
jle
cmp
inc
popf
push
adc
xchg
dec
loop
or
jmp
inc
jnp
pop
add
bound
add
xchg
xor
lcall
std
add
push
push
rclb
lock
in
cmpsb
loop
inc
rolb
push
add
mov
test
mov
mov
scas
xor
inc
mov
scas
inc
push
aam
jecxz
inc
adc
cmp
jnp
dec
shll
xchg
test
xchg
and
mov
jecxz
xchg
js
lea
insb
mov
inc
xchg
ja
and
xor
js
into
pop
pop
xchg
pop
pop
dec
xor
pusha
dec
aas
pop
cs
sbb
sti
xor
and
push
cld
in
cmp
pop
int3
inc
cmp
xchg
fs
pop
scas
mov
xor
push
jo
mov
les
lret
pop
xlat
xchg
mov
pop
xlat
push
popa
aaa
jmp
jb
and
jno
inc
xlat
insb
ss
mov
adc
push
leave
test
mov
fidivrl
jo
mov
jns
gs
andl
mov
pop
xor
mov
mov
es
inc
test
or
or
insb
movsl
outsb
ss
call
js
mov
xor
pop
bound
scas
imul
rorl
and
cmc
push
xchg
inc
cmp
mov
mov
fcomip
push
pop
out
daa
out
sbb
cs
popa
movsb
popf
insb
rorl
pop
push
aad
fwait
mov
sbb
sub
mov
mov
adc
ss
sbb
sbb
xchg
pop
clc
xor
std
sub
loop
mov
loopne
sub
mov
insb
in
xor
push
movsb
addr16
mov
cltd
xchg
pop
mov
test
cmp
lahf
cmpsl
and
out
leave
imul
into
call
inc
inc
pop
lds
pop
or
xor
jb
jmp
ja
pop
leave
daa
daa
fidivs
xchg
sbb
in
pop
adc
inc
faddl
lahf
out
xor
sub
cld
xor
mov
cmpsl
icebp
pop
mov
in
bound
cmc
jmp
rorb
movsl
dec
or
lods
inc
sub
in
sub
jns
xor
or
mov
jb
popf
add
addr16
cmp
lea
fs
out
and
cs
loope
fucomp
and
shrl
sbb
sbb
or
lcall
test
lret
data16
enter
lcall
test
lret
in
jge
inc
les
sub
sub
xchg
imul
nop
lea
or
sahf
xchg
sti
pop
inc
ret
insl
mov
pop
cmp
mov
pop
rol
lods
or
cmc
movsl
sub
std
sbb
mov
repz
mov
push
inc
mov
inc
divb
pop
push
dec
aad
cmp
inc
mov
adc
mov
lea
lcall
sub
inc
mov
enter
aaa
xchg
js
lret
adc
xchg
mov
xchg
popf
hlt
orl
jns
popa
js
test
pop
dec
sbb
in
cmp
jns
and
add
scas
push
aam
loopew
push
shlb
popa
jecxz
lea
mov
jbe
lret
jp
std
push
jae
add
pop
mov
or
enter
xchg
jl
test
lea
ret
outsb
or
sti
lods
jbe
repnz
fdivrl
fsts
icebp
sub
loop
push
mov
fcmovu
and
push
push
dec
push
aaa
pop
cmc
jne
scas
je
xchg
imul
xchg
je
pop
shl
es
inc
mov
sub
push
mov
stos
jl
jle
leave
push
add
pop
xchg
mov
negl
xlat
cmp
scas
mov
out
ficomps
mov
jno
xchg
jns
ret
cltd
jnp
or
das
push
cltd
mov
jle
popf
ja
add
mov
xor
jno
js
mov
loopne
add
push
out
mov
push
xchg
pop
outsb
push
sub
orl
repz
movsb
outsb
ljmp
sub
int3
sbb
xor
add
sbb
mov
push
or
pop
int3
mov
mull
mov
mov
sahf
arpl
push
stos
jne
clc
jl
pop
mov
cmc
xor
shll
adc
push
inc
and
sbb
add
incb
adc
adc
xor
idivl
std
xor
or
and
sbb
inc
stos
jae
mov
mov
rcrl
jo
cld
xor
mov
xlat
adc
xchg
shrl
loope
addr16
and
or
loop
lahf
sbb
and
adc
or
incb
pushf
pop
inc
sbb
dec
and
jae
add
cmp
sbb
adc
mov
and
daa
int3
arpl
jecxz
inc
jnp
jb
push
add
push
mov
cs
lahf
xchg
testb
dec
lds
pop
jnp
cmp
jns
push
cmp
push
mov
je
data16
xchg
orl
mov
jmp
adc
aas
rcr
jno
popa
pusha
inc
mov
jnp
cwtl
xchg
ja
sbb
jne
jmp
mov
pop
mov
push
cmp
addr16
aam
jo
dec
out
xchg
mov
xlat
imul
mov
stc
sub
adc
lret
stos
adc
pop
sti
sub
lds
and
je
add
les
sub
sub
lds
push
push
sbb
fistl
pop
push
lea
and
xchg
lds
xchg
mov
cld
sbb
jle
enter
add
test
aad
test
jmp
pop
lock
jno
daa
mov
jle
push
xchg
cltd
pop
xchg
mov
popa
subl
mov
sub
outsl
dec
dec
mov
pusha
jle
in
xor
lods
pop
jnp
out
inc
sub
inc
xchg
dec
sbb
mov
movsl
cmp
sub
jmp
subb
sbb
shl
sbb
popa
loop
dec
scas
sub
sub
lods
in
loopne
mov
pop
lret
test
sbb
xor
int3
cmp
das
mov
loop
ficoms
int3
cmp
jmp
loope
shrb
aam
mov
icebp
leave
inc
mov
jmp
sbb
xlat
cmpsb
pop
call
cmpsb
mov
cmc
mov
sbb
or
xchg
xor
push
xor
mov
push
push
arpl
xchg
mov
sub
sarl
jg
in
dec
cmp
dec
clc
jae
pop
pop
push
and
test
popf
jno
addb
inc
mov
jge
jp
xchg
mov
stc
dec
fistpll
fnstenv
jmp
ret
mov
loopne
repnz
aaa
fmull
or
jno
add
mov
imul
int3
add
jbe
sbb
sarb
out
xchg
popa
fdivs
lcall
test
mov
stos
inc
sbbb
cli
imul
dec
jecxz
call
test
sbb
ja
jno
add
push
pushf
cmp
sub
call
rorb
mov
addl
pop
out
jge
pop
int
sub
sub
sbb
daa
flds
in
xchg
mov
aas
fimuls
in
jp
lods
das
adc
jns
in
lret
fadds
call
frstor
xchg
in
push
push
rcrl
fimuls
loopne
sbb
testb
mov
repnz
jle
lret
fnstenv
ljmp
hlt
jne
leave
xchg
sub
repz
mov
cs
std
and
stos
test
xor
and
adcl
jecxz
nop
int3
inc
hlt
cmp
scas
lds
aas
aam
out
mov
call
testb
cmp
sbb
jo
pop
cld
jne
fsubl
pop
daa
or
addb
and
neg
aas
out
and
aas
and
xchg
int
enter
cmp
inc
mov
cmp
push
ret
jmp
call
cmpsb
sbb
scas
add
out
popf
std
cmp
mov
sub
imul
pop
cld
cltd
enter
add
mov
sti
jg
jmp
mov
stos
popa
push
insb
jbe
xor
jg
push
push
test
push
inc
push
aad
pop
nop
jg
push
xchg
ja
mov
xchg
mov
sahf
mov
sub
adcb
cwtl
or
inc
mov
cmc
cmpsl
ds
insl
cmp
pop
lock
mov
push
fs
mov
call
pop
ljmp
sbb
or
xchg
inc
mov
addr16
mov
orps
push
fwait
imul
xchg
pop
sub
inc
dec
dec
mov
lea
cli
sub
push
stos
test
decl
push
iret
popf
pop
sbb
fldt
pop
jecxz
fs
sbb
rcrl
adc
lea
or
mov
xor
cwtl
fsubs
sbb
icebp
sub
sarl
dec
dec
jecxz
pop
xor
push
mov
xor
test
xorb
add
xchg
jae
mov
xchg
imul
cwtl
ds
repz
daa
in
adc
orl
addl
adc
and
mov
cmp
or
xchg
rcll
sbb
xor
ds
insl
lods
loop
pop
and
roll
xchg
mov
popf
pusha
out
pop
jne
insb
cmpsb
xchg
decl
lock
jno
xor
addl
and
mov
cmp
inc
shll
ja
adc
std
movsl
push
push
testb
imul
add
pushf
cmpsb
pop
and
ja
cmp
nop
enter
aad
add
jns
rorl
loope
stos
pop
das
mov
loopne
mov
dec
popl
ljmp
lock
push
lods
cltd
insl
cmp
iret
or
scas
mov
or
adc
jle
jmp
test
jmp
and
xchg
adc
cmp
lret
pop
mov
pop
cld
mov
inc
jl
push
int3
cs
pop
aad
addr16
icebp
inc
mov
icebp
adc
hlt
pop
subl
add
leave
jae
mov
fimull
cwtl
sbb
cmp
shrl
pushf
mov
push
sbb
jmp
negb
push
sbb
cmp
add
mov
inc
and
mov
push
mov
dec
ret
pop
imul
cmc
addr16
filds
sub
movsb
pop
push
mov
push
jge
lods
ds
mov
loope
mov
or
mov
add
add
rorl
dec
lds
fsts
mov
xor
movsl
leave
int3
dec
int3
lds
fidivs
push
hlt
mov
out
and
mov
jb
outsb
call
mov
das
shlb
or
sub
out
addb
jb
stc
inc
repnz
gs
push
leave
aas
push
jle
lcall
and
pop
sub
mov
mov
or
inc
mov
and
imul
testb
xor
dec
mov
sub
dec
std
pop
dec
aas
mov
sub
test
jbe
cmp
fs
mov
and
cmp
xchg
mov
insl
xchg
mov
aaa
or
test
daa
xchg
dec
cmc
fs
sub
jne
jb
xor
inc
xchg
insl
adc
mov
xchg
ret
fsubrl
add
std
cld
sub
push
iret
sbb
cli
xor
mov
leave
cmp
adc
add
insl
in
inc
jmp
lcall
push
adc
jbe
clc
xor
xchg
mov
inc
jle
mov
pop
stos
inc
jle
cld
xor
lea
xor
cmp
arpl
cs
jge
xchg
sub
sahf
mov
push
or
mov
jo
out
int
enter
pop
cmpsb
cmpsl
pop
repz
jp
cmp
imul
pop
xor
inc
fldl
xor
pop
test
mov
xchg
test
mov
mov
insl
cltd
xchg
dec
loope
popa
fwait
push
into
sub
in
and
push
lods
or
negl
pcmpgtb
cld
sub
push
jmp
movsb
adc
jae
ljmp
fdiv
xor
jns
out
inc
loopne
sub
ss
fidivs
push
xchg
mov
idivb
xchg
lock
xchg
int
outsb
add
mov
cli
jo
int3
inc
test
jp
jb
pop
cmp
jae
inc
jo
addr16
fsts
pop
push
addl
pop
dec
mov
insb
es
sub
nop
ja
pusha
repnz
cmp
pop
jg
cmp
xchg
inc
or
and
adc
inc
mov
fidivs
adc
test
inc
into
stc
cmp
or
mov
sub
scas
sbb
inc
int
cmp
fldl
in
mov
pop
add
mov
and
rorl
xchg
insl
movl
or
fmuls
lods
pop
xchg
jecxz
sub
dec
insl
aam
ss
popf
xor
jp
jb
mov
in
push
lea
enter
push
iret
jp
out
xchg
das
ucomiss
xchg
push
sub
mov
es
cmp
sti
xchg
mov
data16
std
inc
pop
scas
cmp
subl
adcb
adc
jle
dec
pushf
popl
mov
or
xor
aas
push
out
jp
pop
fstl
adc
inc
push
mov
scas
and
sahf
xchg
lea
aam
pop
imul
jg
or
pop
scas
subl
jle
push
sbb
push
jl
xchg
cmp
mov
push
mov
inc
icebp
push
aam
push
stos
inc
mov
daa
or
adc
test
pop
sbb
sub
lret
mov
add
stos
push
hlt
rcrl
and
js
test
lds
pop
pop
cmpsl
bound
into
jmp
imul
lret
inc
inc
add
insl
pop
and
and
sbb
aaa
pushf
das
mov
aaa
mov
ret
add
aas
movsb
jecxz,pt
xchg
jmp
mov
pushf
jg
mov
ret
xchg
or
hlt
push
xor
pop
pop
movsb
addl
mov
cld
xor
aad
jmp
mov
ljmp
iret
out
lea
sub
jp
xlat
jo
in
ret
push
clc
inc
mov
lret
or
or
adc
mov
out
jb
ds
jg
sbb
pop
jae
xchg
lds
cmc
fldenv
xchg
outsb
mov
and
ljmp
in
push
mov
cmp
cmp
pop
or
pop
xchg
adc
clc
and
stos
sub
gs
push
shlb
sub
out
test
inc
mov
les
out
mov
sbb
push
jbe
or
adc
outsb
and
lcall
pop
mov
inc
or
cmp
divl
pop
sbb
testb
and
inc
pop
cmpsl
pusha
pop
inc
mov
aaa
dec
mov
jne
pop
pop
mov
xchg
in
dec
xchg
mov
or
dec
jno
jl
sbb
popf
popa
cmpsb
and
cld
xorb
ss
jp
fcmovbe
lock
mov
in
cld
pop
mov
sub
nop
xchg
jle
and
mov
aam
notl
ret
idivb
in
inc
push
add
in
cs
and
hlt
fiadds
xor
jno
mov
lret
ja
xchg
cs
push
into
sbb
xchg
inc
les
icebp
add
loopne
mov
cmp
scas
sub
rorl
mov
test
xchg
scas
push
sahf
andl
dec
out
shll
in
icebp
xlat
mov
clc
push
rcrl
adc
xchg
inc
fcoml
adc
notb
or
clc
lea
add
fidivrl
loopne
inc
int3
cltd
mov
xor
mov
pop
lds
in
out
xor
movsb
xchg
mov
or
std
jnp
das
movsb
lret
inc
adc
je
popa
inc
pop
mov
dec
cltd
lea
mov
and
mov
cmp
addr16
cmp
pop
addb
pusha
insl
lcall
pop
mov
sbb
or
bnd
dec
inc
std
pop
lods
fsubl
jno
fidivrl
or
cmpsb
pop
pop
sub
push
in
push
or
mov
call
out
test
insl
movsl
mov
out
push
mov
sbb
cmp
sbb
jg
lea
sub
mov
lahf
xor
sub
fs
insb
pop
bound
out
mov
loope
out
xchg
or
sub
popa
cmc
xchg
imulb
jnp
ja
loopne
add
push
stc
cmp
sbb
push
call
sbb
xchg
inc
ret
cs
jb
mov
mov
movsl
xchg
lock
xor
add
xchg
mov
dec
sysret
pop
cmc
cmp
push
push
cmp
sbbl
orl
and
adc
and
call
ficoms
inc
pop
leave
pop
inc
lods
pop
push
push
das
out
dec
push
les
dec
adc
push
pop
mov
pop
pop
pop
popf
aaa
jl
xchg
ss
lods
cmp
mov
jp
push
cmp
popf
xor
sarb
add
mov
xor
fidivl
js
push
stos
push
clc
popl
test
lods
fstps
testl
mov
les
lret
jo
rclb
push
jmp
and
pop
fwait
inc
lods
inc
jbe
mov
leave
shrd
call
bound
mov
subb
hlt
mov
cmpsl
ds
fisubs
lds
jns
insb
imul
mov
loopne
mov
sahf
je
and
mov
xchg
outsl
dec
gs
andl
or
mull
loopne
dec
clc
dec
out
jo
cwtl
shl
add
adc
sub
xor
test
roll
testl
rcrl
les
hlt
stc
and
inc
adcb
add
leave
ja
cmc
mov
les
jne
icebp
scas
sub
js
add
insl
lock
lods
adc
cmc
dec
dec
repz
and
inc
mov
insb
stos
cmpsl
add
fxch
repz
packsswb
lahf
xchg
xor
mov
es
mov
in
dec
fnstenv
stos
and
inc
aaa
mov
or
repz
iret
mov
stos
sbbb
fldcw
icebp
xchg
mov
and
xor
ret
or
add
push
stos
js
jae
je
dec
mov
out
cmc
lahf
popa
rorb
and
xchg
es
push
pop
mov
push
mov
dec
adc
pushf
outsl
adc
es
les
icebp
dec
xchg
les
sti
call
sahf
or
mov
sub
sbb
les
fwait
sahf
orb
xchg
jge
jnp
jne
push
testl
or
xchg
or
int
mov
repz
insb
insb
enter
add
movsl
enter
das
jle
push
jl
add
insb
aad
adc
cmp
xor
cmpsb
add
rcl
sbbl
ja
out
inc
push
mov
dec
sub
hlt
rcll
ljmp
dec
ss
push
mov
add
bnd
dec
in
lea
or
sub
inc
sahf
cmp
fisubs
sahf
push
xchg
mov
stc
test
xor
shlb
mov
push
mov
dec
and
inc
adc
in
lock
int
lret
fwait
cmpsb
mov
es
inc
das
fs
sbb
sub
test
jge
repnz
dec
and
cld
mov
ljmp
mov
mov
cmp
add
jno
fildl
push
add
stos
xchg
addr16
lahf
mov
insl
test
testb
loope
xor
adc
inc
xchg
shlb
jp
push
sbb
gs
test
push
cmc
and
dec
fs
pushf
jnp
mov
outsl
dec
and
lods
add
push
or
and
fidivrl
cmpsl
or
clc
lock
sub
stos
xor
mov
xchg
mov
jb
lds
mov
pop
enter
jne
in
inc
in
sahf
xchg
clc
adc
and
mov
push
cmp
aad
xor
roll
pop
xor
push
int3
sub
mov
out
outsb
flds
insl
add
xchg
push
in
push
push
testl
fnstsw
inc
fidivl
arpl
mov
pop
fnsave
lods
inc
xchg
icebp
aaa
into
loop
push
lods
cmpsl
andl
cmp
add
sbb
scas
pop
mov
cmp
jno
popf
xor
adc
sbb
push
iret
push
push
call
ret
adc
push
test
mov
scas
mov
adc
insl
test
iret
rcrw
test
adc
jae
loop
adc
xchg
lcall
ret
push
jno
jno
test
sub
fistl
sub
outsl
sbb
stos
and
fidivrs
cmp
xlat
addb
ret
outsl
loopne
in
fnsave
enter
push
mov
shr
jle
scas
sub
bound
ret
imul
pop
add
xchg
and
call
rcll
movsl
rolb
cmp
outsl
sbb
hlt
sub
push
out
les
lods
aaa
sahf
push
xchg
dec
adcb
push
jno
mov
xchg
push
pop
inc
ret
outsl
xchg
das
mov
jg
or
lds
stos
push
jp
dec
dec
leave
mov
lcall
popf
lcall
mov
mov
pop
lcall
or
mov
lahf
adc
movsb
outsb
into
mov
mov
popf
jb
hlt
dec
rol
mov
sahf
pop
int3
inc
or
filds
arpl
pop
add
dec
adc
push
inc
or
setno
inc
adc
movsb
fnstsw
int3
pslld
jbe
ret
dec
xlat
ret
xchg
cltd
movsb
inc
jnp
sbb
xlat
faddl
fwait
aas
outsl
iret
xchg
mov
call
fstpl
in
jo
mov
lret
xchg
repz
dec
adc
loopne
imul
sbb
mov
scas
add
inc
pop
orl
xchg
cmp
adc
lods
sub
lret
insb
and
popa
nop
jl
pop
jb
faddl
data16
pop
add
cmp
clc
fs
xor
fstps
lret
hlt
pop
cmp
movsl
daa
pop
sub
dec
push
movsl
call
cltd
inc
fildl
pop
lahf
push
ljmp
jae
pop
popa
scas
nop
cmp
xor
and
ja
int
fstl
vminps
dec
paddsb
adc
cmp
sarb
xor
pop
dec
icebp
pop
xchg
mov
add
call
test
ret
xchg
cltd
js
out
sub
ss
pop
xchg
sbb
imul
loop
mov
call
je
imul
outsb
jle
mov
imul
test
jno
cmc
arpl
das
arpl
mov
cmpsb
in
xchg
shll
cmp
aas
popf
pop
and
pop
mov
cmp
jge
outsb
or
mov
jge
mov
mov
clc
pop
aas
push
cmp
std
mov
mov
stos
fdivrs
aam
fidivs
mov
mov
int3
clc
pop
cli
push
cmp
jge
outsb
or
mov
fdivrs
sarl
mov
mov
lret
mull
push
cmp
in
out
mov
pop
iret
mov
xlat
jge
xor
iret
mov
xor
imul
addr16
aaa
or
xor
rolb
scas
test
add
mov
sar
jecxz
popa
cltd
in
mov
xchg
mov
cli
pop
inc
and
mov
repnz
jp
out
lods
daa
sub
xor
xchg
cmp
cmp
xor
jge
xchg
popa
repnz
loop
pop
test
add
into
xor
ljmp
mov
stos
test
push
lret
into
xchg
pop
mov
ret
pushf
popa
lea
ret
jbe
mov
cmpsl
sbb
popf
jmp
mull
mov
xchg
aas
fwait
xchg
push
iret
mov
or
inc
xlat
mov
sahf
sahf
aaa
pushf
jl
test
ret
push
add
mov
lahf
aaa
xchg
adc
mov
xchg
inc
rcr
adc
in
push
lods
repz
cmpsl
test
roll
dec
xchg
movl
add
mov
in
in
lea
int
inc
addr16
mov
push
add
pop
idiv
lcall
dec
mov
ret
xchg
mov
movsb
cmp
pop
pusha
repz
pop
mull
push
mov
cmp
and
jne
sahf
mov
pushf
out
mov
les
add
adc
pushf
mov
lock
mov
xchg
les
or
hlt
bound
ret
gs
dec
sub
mov
sahf
in
mov
ret
gs
hlt
xchg
aad
pop
mov
dec
test
mov
mull
cld
cmc
in
jae
in
xor
loop
scas
xor
rcll
nop
rcll
push
clc
mov
mov
push
icebp
outsb
cmc
outsb
das
xor
das
sahf
xor
ljmp
test
cmp
jp
in
push
into
shlb
lds
cltd
mov
gs
in
stos
push
dec
adc
in
pop
and
add
lea
div
ret
cmp
loop
push
cmp
aaa
mov
flds
mov
insl
imul
fdivrl
pop
into
aam
and
mov
adc
movzbl
imul
or
pop
inc
pop
cmp
fidivl
push
mov
pop
fcompl
rorb
psrlq
sub
arpl
cmpsb
sbb
mov
lret
pop
pop
fiadds
add
rorl
cmp
fdivs
sub
mov
aam
clc
mov
or
rcr
repz
movsb
add
jno
scas
add
mov
mov
fiadds
or
or
push
test
jb
fistpll
and
aad
sti
fcmovu
and
leave
mov
test
sbb
scas
xchg
and
mov
sarb
fidivrs
into
test
mov
or
mov
test
call
ret
inc
or
inc
js
xlat
mov
mov
aaa
movsl
cs
jg
cmp
jne
mov
outsb
fistpll
dec
dec
push
xchg
dec
fdivrl
lret
sub
pop
test
mov
cmpsb
sbb
fdivrl
inc
dec
push
repnz
sub
outsl
fstps
fcomps
jp
adc
lea
dec
mov
push
jle
jbe
sub
aaa
jae
push
mov
mov
cmpsl
std
pop
sub
aaa
les
xchg
xlat
insl
in
xchg
ror
mov
fdivrs
lcall
jnp
xor
mov
mov
cli
pop
adc
sbb
xchg
pop
ds
jno
out
imul
cmp
inc
adc
test
mov
fs
add
mov
adc
es
or
adc
push
add
dec
js
cmp
leave
lea
lret
push
mov
pop
mov
cmp
cmp
push
enter
and
jecxz
pop
pop
dec
insb
add
jns
sahf
sarb
and
pop
addr16
into
xchg
jle
out
jbe
outsl
xor
pop
arpl
add
jae
bound
loopne
xor
xchg
daa
add
insb
sbb
adc
jb
xchg
fsubs
mov
in
pop
cmc
fildl
inc
push
pusha
mulps
mov
scas
push
mov
jbe
leave
mov
leave
xchg
push
into
arpl
in
fstpt
iret
push
add
je
call
shrb
mov
movsl
jecxz
xor
push
add
dec
push
andl
test
cltd
mov
xor
andl
jle
push
inc
push
outsb
orb
pop
jp
ja
dec
pusha
jo
les
in
fistpll
std
or
mov
xor
jae
mov
mov
mov
pop
int
cmp
cmp
addr16
jae
loop
lods
xor
popa
in
aad
je
cmp
aad
lret
lods
inc
shl
pop
cmp
das
das
mov
mov
mov
mov
inc
loop
and
or
negb
ret
das
mov
movsb
pop
add
jle
push
fwait
stos
cli
insb
icebp
or
push
cmp
ror
and
mov
pop
cmc
pop
sbb
loop
and
xchg
inc
fiadds
pop
int
fsubrs
mov
repnz
in
sbb
add
pop
in
insb
ret
mov
mov
mov
sub
movsb
lods
test
fildl
mov
add
popf
push
add
sbb
xchg
popa
mov
fnstcw
ds
mov
aad
pop
mov
shr
xchg
add
ret
xor
aas
aam
mull
cmp
loopne
xchg
dec
jo
sbb
or
mov
loop
or
adc
adc
xor
sub
adc
loope
mov
jbe
fldt
and
push
fmuls
fiadds
pop
cs
lahf
inc
outsl
inc
loopne
mov
stos
cmp
inc
jp
mov
jo
js
sbb
mov
adc
js
dec
inc
pop
mov
imul
div
std
popa
inc
loop
xchg
and
leave
int3
out
pop
sti
insl
push
xchg
aas
pop
jne
cmp
and
daa
inc
fidivrl
cmp
pop
cli
lahf
sbb
pop
add
rcll
sti
pop
ret
cli
sbbb
fstpt
inc
and
test
mov
fiadds
push
pop
stc
sub
mov
ss
jge
aad
inc
arpl
mov
mov
fwait
and
mov
jge
mov
das
outsb
data16
aas
jnp
in
negb
mov
pop
adc
cmp
lds
roll
xor
dec
adc
push
mov
lahf
xor
sbb
jmp
mov
scas
loop
sub
call
ja
push
lret
mov
adc
aad
sbb
add
loop
in
pop
std
push
add
sub
fstpl
mov
lods
movsl
inc
adc
add
sahf
test
push
pop
or
jmp
pushf
int
pop
lock
or
imul
fcompl
iret
iret
xchg
inc
inc
iret
xchg
ljmp
or
inc
mov
cmp
sbb
xchg
stos
add
cmpsl
fnstcw
lret
cmp
sbb
mov
jle
fildl
xchg
sbb
pop
clc
adc
cmc
orb
sbb
pop
mov
jmp
hlt
xor
mov
push
add
mov
lods
fdivl
outsl
push
ss
push
push
fldl
int3
ja
xor
cmp
adc
stos
xor
jb
mov
lods
fs
jno
jb
repz
clc
or
mov
jb
pop
std
shlb
ds
pop
inc
pop
roll
test
push
fiadds
ljmp
in
imul
iret
lea
xchg
inc
mov
mov
roll
push
out
imul
out
lock
inc
out
fistpll
sahf
or
daa
test
ds
mov
or
in
addr16
dec
or
iret
mov
push
xor
mov
icebp
dec
push
add
icebp
pop
mov
pop
loope
aaa
popa
dec
xchg
inc
in
outsl
out
sti
call
testl
jnp
inc
lods
lock
bound
inc
cmp
lcall
xchg
push
adc
call
sub
sarb
cmp
mov
mov
leave
in
aad
mov
fwait
cmpsl
scas
xor
add
popa
xchg
and
rcrb
mov
repnz
rorb
fistps
les
fwait
incl
sub
fnstsw
out
pop
fdivrl
negl
mov
xchg
int
daa
dec
int
in
push
xchg
dec
or
mov
movsl
cmpsl
xor
pop
xchg
inc
outsb
cmp
imul
mov
adc
push
push
test
mov
jo
insl
push
sar
xchg
stos
jecxz
push
shlb
xchg
inc
aad
lock
push
popa
es
push
push
jl
les
scas
ret
pop
dec
add
into
xor
ret
mov
ret
pusha
shlb
je
psllw
loope
pop
out
aas
mov
scas
jns
push
fistps
lods
xchg
daa
test
mov
cmpsb
sub
cld
pop
jecxz
sub
push
inc
jae
popa
add
jae
inc
pop
pushf
cmp
mov
fbstp
adc
lret
pop
fst
jle
push
cmpsb
sub
rclb
mov
lahf
jb
pushf
pop
int
push
rorl
clc
les
dec
nopl
dec
lar
adc
fnstcw
cwtl
mov
push
push
cmpb
dec
push
std
sub
cs
adc
jnp
int3
push
cld
imul
xlat
pop
add
movb
fnstsw
mov
sbb
into
jle
inc
xlat
push
lahf
sbb
leave
add
lcall
das
scas
xor
sub
stos
xor
and
pop
lret
mov
mov
push
dec
inc
adc
mov
mov
pop
cld
mov
mov
popl
mov
into
gs
mov
outsl
mov
mov
imul
push
mov
inc
shlb
jecxz
xchg
mov
test
cmp
test
dec
adc
out
jno
fwait
fwait
inc
icebp
push
negb
out
pop
or
negb
pop
xchg
cmp
and
subl
xlat
inc
loopne
xchg
and
cmp
cli
adc
mov
lcall
sarl
ret
mov
cmp
loope
das
mov
cmpsl
loope
adc
std
pop
mov
in
imul
insb
out
cwtl
cld
leave
mov
lds
mov
call
clc
mov
mov
jns
mov
jnp
fs
mov
scas
jno
xchg
xor
mov
add
or
cmp
and
lret
dec
push
lret
pop
in
dec
pop
fwait
inc
jmp
add
inc
mov
jle
jp
stos
sub
inc
addb
dec
out
cmp
pop
std
ret
mov
xor
mov
and
cmc
pop
fidivrl
add
ret
loope
into
xchg
add
pushf
imul
cmc
pop
dec
mov
mov
mov
test
cwtl
inc
and
pushf
mov
mov
outsb
fnsave
orb
push
cld
adc
inc
or
imul
rorb
das
jo
in
adc
loop
mov
xlat
dec
enter
xchg
mov
lds
mov
push
push
fstp
leave
rorb
inc
xchg
jl
loop
icebp
pop
jo
xor
shll
cmp
in
sti
xchg
mov
pusha
and
xchg
mov
xchg
je
pop
inc
sub
and
xchg
inc
inc
nop
pop
stc
ficompl
dec
or
fs
out
outsb
cmpl
or
pop
lods
sub
cmpsb
mov
lds
mov
xchg
clc
push
rcl
je
fimull
or
js
pop
inc
fimull
cmp
imul
scas
pop
jl
orl
dec
mov
jae
or
imul
pop
in
jb
cmpsl
xchg
cmp
mov
ljmp
cli
sbb
andl
sahf
cmp
pop
jecxz
sti
jmp
jno
pop
popa
scas
sub
sahf
cmp
aaa
mov
pop
mov
mov
push
adc
xor
lds
movsb
nop
ds
lds
lock
lock
jnp
add
mov
pop
bound
add
push
mov
es
rcll
fidivrs
je
jo
les
cld
daa
mov
call
mov
clc
xor
iret
ss
jecxz
push
call
pop
test
xor
and
loope
insb
inc
cmp
les
sub
sbb
test
inc
cmp
pop
aas
negl
mov
push
xchg
push
les
rcll
mov
test
xchg
cmp
out
popf
inc
sbb
insb
icebp
rorl
imul
push
mov
adc
ljmp
mov
ds
jb
pusha
negb
outsb
mov
scas
jae
cmpsb
cmp
mov
mov
jns
arpl
or
fwait
inc
pop
cltd
iret
nop
sub
xor
sbb
mov
loope
lea
clc
inc
or
lods
mov
stos
scas
mov
xor
cmp
mov
push
stc
mov
pop
adc
mov
xor
arpl
pop
mov
cmpsb
loop
nop
imul
into
add
sti
xchg
repnz
push
in
and
std
or
in
pop
mov
sub
bound
mov
into
xchg
and
loopne
sbb
dec
popa
jmp
and
add
xchg
xor
push
push
sub
lahf
cmp
mov
addr16
mull
outsb
mov
jmp
cmc
sbbl
pop
call
jno
inc
dec
clc
bound
out
jb
cli
pop
sar
push
lret
xchg
sarl
repnz
mov
mov
adc
roll
aas
jb
cmp
sub
lds
rclb
cmp
cmpsl
fwait
or
mov
imul
fnstenv
xchg
insl
or
adc
add
push
cmp
mov
je
daa
mov
add
ss
das
push
roll
in
cmp
clc
aad
xor
lock
cmp
xchg
cmp
cmp
nop
push
sub
adc
cmp
jp
inc
or
imul
je
cmp
push
cs
psrlq
imul
arpl
test
scas
xor
stos
out
jae
xchg
imul
jns
xor
dec
add
sub
cmp
data16
jecxz
pop
add
ljmp
hlt
cmpsl
sub
movsl
sub
cmp
xchg
adc
jg
in
jle
cmp
xchg
cmp
ret
outsl
out
dec
adc
jl
jne
dec
mov
outsl
loopne
mov
jge
out
nop
cmp
pusha
aad
xchg
pop
mov
call
js
ss
xor
cmp
inc
or
aad
js
xlat
adc
scas
outsl
mov
xchg
dec
pop
jnp
mov
push
adc
lds
lret
jnp
adc
xchg
lods
out
dec
arpl
aaa
mov
sbb
iret
lret
inc
dec
push
jb
mov
dec
pop
sub
and
ja
sbb
test
adc
popa
mov
mov
mov
mov
inc
std
fs
icebp
adc
jnp
push
mov
scas
sbb
xchg
push
into
xchg
mov
mov
lret
fnstenv
cwtl
nop
sbb
data16
ret
mov
mov
or
add
sbb
int3
aaa
dec
adc
xchg
dec
mov
sbb
or
jge
or
ret
cmp
cs
adc
stos
sub
adc
dec
jns
jge
xchg
sub
sahf
push
daa
pop
aad
cmpl
fcoml
pop
repz
pop
jp
nop
fdivrl
add
aad
adc
cld
popaw
xchg
xchg
aaa
jmp
incb
subb
imul
and
jb
and
out
ljmp
sahf
xor
sbbb
cld
bound
jo
mov
push
out
jo
mov
in
jb
adc
aam
aad
adcb
orb
cmp
xor
cli
imul
cmpsb
jge
push
push
mov
mov
or
sbb
pop
add
orb
cld
bound
and
lock
xor
test
mov
rcrl
xchg
std
test
les
bound
fsubl
out
jo
or
sub
push
push
dec
or
jge
jge
fs
inc
inc
daa
cwtl
aaa
fcomps
cmp
cmp
xchg
inc
in
and
movsl
mov
movsl
dec
dec
popa
loopne
rclb
xor
xor
out
outsb
in
repz
and
xchg
cmp
ljmp
jbe
lcall
fiaddl
aas
pusha
mov
pop
hlt
jb
jns
test
xor
xchg
cmp
xor
imul
lds
mov
pop
add
xchg
jmp
push
add
cmp
cmpsl
stos
adc
and
xchg
cmp
insb
lret
or
and
repz
loopne
jmp
xor
pop
xchg
inc
mov
mov
xchg
inc
ret
sbb
lods
adc
or
sub
dec
mov
pushf
inc
mov
sub
imul
call
cld
xor
and
xor
leave
lcall
pop
cli
jne
mov
cmp
adc
std
popa
sti
jb
fs
in
js
in
xor
enter
sub
mov
cmp
adc
push
xchg
dec
push
jb
movsl
mov
xchg
pushf
and
or
inc
or
nop
cmp
int
dec
fnstcw
sub
fdivrs
jl
sub
mov
or
xchg
fnstcw
cmc
pop
sub
push
pop
aas
icebp
pop
fwait
mov
adcl
dec
addl
add
push
push
leave
sbb
push
les
cmp
dec
sub
iret
sbb
cmp
sub
sub
cmp
rcll
lock
test
xchg
jns
jae
lret
es
jl
in
mov
aaa
movsl
jecxz
outsl
in
in
popf
cmp
xchg
inc
add
cmpsl
xor
pop
rclb
inc
mov
int
out
insb
mov
dec
or
iret
mov
int3
mov
fs
sbbb
fdivp
gs
xor
loop
mov
cmp
test
ret
idivl
dec
sbb
jp
sahf
sbb
adc
dec
adc
clc
bound
mov
push
aam
js
mov
movsl
or
insl
lods
mov
es
jp
enter
test
mov
loop
sub
mov
xchg
jne
or
sti
arpl
inc
mov
movsb
daa
mov
les
dec
adcb
jmp
mov
sarl
das
arpl
push
jl
inc
push
mov
mov
cmp
arpl
outsb
and
push
jb
mov
les
pop
cmp
ss
sub
aad
cmp
mov
cld
pop
mov
test
sbb
scas
data16
fidivrs
and
mov
mov
pushf
sbb
and
cli
xor
lock
sti
sbb
out
push
push
pusha
out
sbb
inc
into
dec
mov
stc
pop
lret
lea
mov
pop
imul
mov
push
mov
fnstsw
enter
add
dec
repz
push
pmaxsw
iret
andl
test
lea
mov
rorl
inc
data16
or
pushf
push
pop
shll
push
aam
outsb
or
xchg
cmp
shlb
lahf
out
sbb
add
mov
cmp
adc
jg
pop
xor
push
xor
xchg
imul
sbb
inc
mov
popf
ss
fstpt
and
xchg
mov
mov
adc
dec
jecxz
add
int3
hlt
pop
xor
nop
int
or
int3
les
cmp
cmp
lcall
outsb
mov
dec
mov
xor
flds
lcall
jno
xor
push
aad
pop
inc
add
and
xchg
cmc
negb
mov
sub
mov
aad
or
push
add
out
dec
pop
xor
push
xchg
adc
jo
xchg
inc
pop
imul
in
sbb
out
movsl
xor
jno
cmp
cli
push
es
orl
adc
dec
scas
sub
push
enter
filds
or
mov
pop
pop
add
push
xchg
and
ds
movsl
sub
and
pop
xchg
insb
out
sbb
jne
movsb
adc
mov
mov
out
insl
daa
sar
pop
aam
or
std
dec
xor
cwtl
fmul
mov
mov
sbb
lds
insb
hlt
push
imul
xor
xor
xor
dec
test
dec
adc
fimuls
iret
test
push
sti
add
add
cmp
and
mov
or
jp
es
fs
mov
call
icebp
js
sub
fbstp
and
mov
adc
xor
dec
push
es
pop
cli
pushf
cmp
xchg
xchg
ret
jmp
adcb
mov
push
dec
rorl
int3
push
xchg
out
mov
cmpsl
das
rclb
xchg
sbb
fildl
jmp
sbb
or
rorb
rcll
negl
add
dec
inc
and
mov
lock
mov
jbe
cltd
test
sub
lret
mov
xchg
dec
or
leave
xor
add
jns
and
jae
cmp
jb
jae
fsubrl
imul
push
aas
mov
add
push
jl
aaa
dec
cwtl
cmp
mov
sbb
xchg
daa
rclb
pop
mov
shr
push
in
mov
adc
clc
fnstcw
sub
mov
aad
out
imul
dec
or
pusha
outsl
jmp
xor
mov
es
mov
adc
mov
pop
dec
mov
sbb
fld
xchg
daa
or
sub
daa
outsb
outsl
ljmp
inc
adc
xchg
xchg
adc
sti
pop
cli
dec
adcb
mov
int
mov
sahf
adc
xchg
sbb
dec
addl
cwtl
adc
cwtl
das
add
cmpsl
or
and
mov
repnz
xor
sahf
in
or
into
les
cmpsl
jmp
mov
mov
xor
outsl
xchg
cmp
lret
sbb
test
adc
push
rorl
xlat
or
test
fdivrl
test
sbb
dec
and
mov
xchg
cli
out
pop
lahf
loop
cmp
testb
cmp
mov
roll
insb
leave
mov
scas
gs
rcrb
mov
push
sub
or
push
jg
mov
lods
sub
lds
repz
cmp
shlb
add
orl
arpl
fisubl
in
jae
or
stos
les
add
adcb
pop
sbb
mov
mov
fs
imul
iret
pop
adc
adc
mov
mov
cmp
mov
sub
jae
jbe
ficompl
mov
push
int3
and
push
sbb
out
es
inc
or
or
xchg
daa
jbe
jno
daa
mov
xor
mov
cmp
pop
add
popf
xor
mov
push
sub
cmpsl
ss
cmp
enter
cmpsl
inc
adc
adcl
cmp
arpl
fidivrl
jl
sbb
cmpsl
mov
movsl
or
fistps
dec
adc
push
jae
cmp
lods
call
hlt
cli
pop
or
in
jle
insl
repz
mov
cmp
movsb
xor
inc
movntq
ret
popl
sahf
cmp
fwait
sub
shll
adc
sbb
mov
decl
mov
and
sub
or
pop
pop
jbe
or
leave
xchg
fwait
mov
pushf
gs
cmpsb
js
bound
out
jb
test
xor
jns
jecxz
negb
clc
add
mov
arpl
gs
movsb
pop
in
jo
mov
pop
fdivrl
jbe
or
pop
mov
movsl
gs
or
push
add
mov
mov
sub
sbb
pop
cmpsb
dec
clc
iretw
mov
lahf
ret
sbb
mov
sbb
scas
inc
out
insb
adc
sub
cmp
mov
mov
dec
push
inc
dec
pop
cld
adc
out
push
jg
int3
push
fsub
jne
nop
xor
adc
int3
arpl
push
and
sahf
inc
xchg
mov
push
outsl
mov
gs
mov
stos
push
cli
sbb
mov
cmpsl
dec
inc
or
push
jno
shlb
mov
les
adc
mov
push
ret
dec
jns
ficoms
adc
cli
or
add
mov
popf
cmp
movsl
and
jecxz
cmp
mov
mov
mov
push
xchg
dec
xchg
ds
pop
in
or
jmp
out
test
out
pusha
jne
repnz
movsl
daa
xor
rorl
adc
das
sub
cmp
dec
or
jno
push
ret
repnz
sbb
adc
pop
xchg
mov
or
cmp
fs
xchg
mov
lret
cmp
cld
and
in
pop
lea
mov
mov
clc
bnd
ret
out
in
dec
int3
idivl
and
cmp
jno
gs
notl
roll
xchg
andl
int
dec
out
inc
and
test
push
add
push
adc
stc
lea
mov
jle
mov
gs
push
jg
push
icebp
push
roll
insl
push
aam
add
pusha
lret
pop
loopne
aas
adc
mov
jg
mov
movsb
jmp
jg
mov
jge
inc
paddsb
ja
repnz
es
mov
imul
jp
mov
imul
aad
cmp
mov
xchg
sub
jg
mov
mov
test
sub
push
or
lds
aad
lds
lahf
sbbb
sub
add
adc
xor
xchg
les
sbb
fstps
addr16
xchg
dec
dec
adc
mov
add
mov
in
hlt
stos
sub
rcrl
xchg
cmc
mov
std
inc
xlat
das
pop
adc
mov
mov
jl
mov
dec
fdivs
sahf
je
pusha
call
add
filds
mov
stos
orb
out
jae
loopne
mov
xchg
aas
adc
pop
and
inc
mov
sbb
cld
cmpsl
jns
cmp
cs
xlat
jns
mov
jno
dec
sbb
jns
adc
fnsave
stc
orl
mov
scas
mov
sub
cmp
mov
or
pop
fldl
pop
sbb
ja
cmpsb
daa
mov
and
jns
cmpsl
mov
ja
sub
dec
icebp
pop
jl
dec
adc
outsb
shll
dec
mov
mov
inc
mov
sub
push
aam
xor
add
inc
pop
cltd
adc
test
clc
addr16
enter
imul
fnsave
xor
xchg
inc
aad
enter
push
and
mov
in
xlat
mov
cltd
mov
mov
jle
mov
rcll
stos
add
xor
push
sarb
add
dec
out
and
insl
add
js
dec
stos
sbb
std
outsb
stos
inc
mov
ror
repz
test
adc
jle
ret
das
hlt
addr16
in
mov
insb
add
mov
pusha
testl
pusha
pop
xchg
add
jl
push
mov
fwait
aaa
test
jo
pop
and
sub
dec
adc
cmc
mov
jl
xor
lcall
idivb
and
dec
insl
jnp
stos
inc
push
popf
hlt
mov
aas
leave
pusha
jno
adc
lds
jae
add
in
cmp
mov
sbb
mov
insb
fstpl
push
mov
adc
loope
pop
adc
in
data16
mov
cltd
mov
fisubl
mov
jge
mov
rclb
stos
add
repz
xor
push
sarl
add
out
and
das
push
insl
add
ja
dec
test
lret
cld
insl
stos
inc
lahf
sbb
enter
adc
inc
ret
repz
adc
in
mov
insb
add
mov
pusha
testl
pop
pop
xchg
add
jl
push
mov
fwait
cmpsl
fnstenv
push
and
sub
inc
xlat
fisttpl
lods
jle
pop
cmc
sub
dec
jl
xor
call
aam
outsl
push
jbe
mov
and
dec
insl
jp
stos
inc
sbb
ds
pusha
jo
adc
les
jb
add
in
aaa
and
sbb
mov
imul
testb
jge
pusha
loopne
pop
adc
in
gs
push
pop
xchg
cltd
mov
fldenv
mov
jl
mov
iret
adc
scas
and
enter
adc
je
out
and
add
jbe
dec
test
mov
dec
leave
aam
sti
insb
stos
inc
sahf
sbb
mov
enter
adc
inc
shrl
repnz
in
mov
mov
xchg
or
cmp
pusha
testl
pop
nop
add
jl
push
mov
fwait
xor
push
and
sub
adc
cmc
sub
xor
rorb
adc
push
call
roll
push
jne
mov
and
inc
insl
jns
stos
inc
sbb
hlt
mov
cmp
adc
ret
inc
xor
jno
add
in
and
pop
mov
mov
fistpl
or
test
mov
ffreep
pop
adc
in
fs
push
push
xchg
cltd
mov
xlat
outsb
pop
fsubs
mov
jnp
mov
into
adc
lods
and
leave
push
into
jp
add
out
and
add
cmpsb
sbb
imul
stos
inc
popf
sbb
mov
pusha
lock
adc
inc
mov
push
popf
xchg
adc
inc
mov
mov
xchg
or
cmp
popa
clc
mov
test
push
ficomps
mov
popf
xor
mov
jl
push
mov
fwait
xor
fnstenv
push
and
sub
adc
cmc
sub
jl
jle
push
call
rolb
push
je
mov
and
inc
insl
js
stos
inc
sbb
leave
pusha
outsb
in
adc
ret
jo
add
in
xor
insb
add
mov
mov
ficompl
or
jge
pop
faddp
pop
adc
in
arpl
mov
cltd
mov
xlat
outsb
pop
xlat
and
lods
sub
aad
int
stos
jnp
rep
pop
xor
push
int
adc
jno
out
and
add
movsl
push
lea
aad
clc
imul
pusha
out
insb
adc
inc
mov
push
popf
xchg
adc
inc
mov
mov
xchg
push
inc
fidivl
mov
and
pop
popa
clc
mov
stos
inc
cmp
enter
popf
xor
scas
out
loope
mov
pushf
xor
and
sub
adc
imulb
pushf
xor
int
jge
jge
push
call
roll
push
jb
mov
and
inc
xlat
outsb
ja
stos
inc
sbb
leave
pusha
insb
in
adc
sarb
enter
pushf
adc
and
adc
mov
push
mov
adc
ffree
pop
movd
jl
sarl
lcall
and
stos
sub
pop
lret
adc
stos
sbb
jnp
outsl
push
out
pop
lcall
jb
dec
movsb
adc
and
mull
inc
cltd
sbb
mov
leave
pusha
in
imul
pushf
or
xor
out
pusha
push
popf
xchg
movmskps
inc
mov
mov
xchg
add
fidivl
push
popa
clc
xchg
stos
inc
cmp
leave
pusha
mov
popf
xor
scas
out
loopne
mov
popf
xor
and
test
testl
js
pusha
imull
lcall
jl
push
call
sarb
outsl
push
jo
mov
and
inc
fsubrs
in
inc
pop
cwtl
testb
jmp
stos
sbb
out
mov
filds
out
xor
mov
adc
inc
fdivs
pop
testb
stos
inc
mov
fmul
pop
push
jl
xor
iret
mov
fwait
mov
xlat
outsb
push
aad
mov
test
inc
xlat
pop
leave
adc
stos
sbb
leave
dec
lret
jl
std
insl
push
out
push
fwait
xor
outsb
add
mov
xlat
outsb
mulb
inc
xchg
pop
testb
push
stos
fwait
or
jg
mov
push
popf
push
push
call
loope
outsl
push
xchg
add
xor
popa
clc
test
lods
inc
cmp
lret
stc
popf
xor
lods
call
push
jle
pop
sahf
xor
and
mov
adc
clc
sub
jg
jnp
push
call
iret
cmp
push
outsb
lock
and
inc
fnstenv
jecxz
inc
adc
ss
pusha
push
mov
jle
cmp
lret
add
call
pusha
loope
push
adc
lea
aam
testb
jge
pop
fcmovne
pusha
or
cs
pusha
int
push
incl
fsubrs
shll
mov
cmpsb
and
adc
clc
ja
imulb
leave
jge
sti
imul
sbb
xor
outsl
push
out
outsl
mov
and
hlt
arpl
inc
mov
popa
call
or
cmpb
xor
jmp
pop
sahf
lea
jmp
fistps
pop
nop
add
mov
and
addl
push
lret
bound
stos
jmp
push
jl
pop
sahf
das
sahf
fidivl
push
and
and
push
lods
jne
popa
clc
es
xor
enter
jns
push
jmp
int
jo
insl
out
mov
and
jae
lods
inc
adc
testl
sbb
xor
imul
popf
or
cs
pop
fildll
adc
lea
shll
add
stos
inc
mov
fxch
pusha
or
xor
int3
mov
pushf
mov
fnstenv
shll
mov
movsl
and
push
adc
mulb
jge
stc
push
jmp
dec
mov
mov
es
rcr
repnz
mov
lret
out
adc
cmpl
pop
or
cmp
jo
mov
inc
mov
and
addb
inc
xor
push
lret
bound
stos
jmp
push
jnp
pop
sahf
cs
fidivl
dec
and
and
push
lods
je
popa
clc
and
inc
jg
js
push
jmp
int3
cmp
insb
in
mov
and
jb
lods
inc
adc
popa
out
lods
sbb
xor
push
push
popf
or
push
call
pop
fisubrs
adc
lea
shlb
add
jle
push
fmul
pusha
or
xor
lret
mov
pushf
scas
push
fnstenv
shlb
mov
movsb
and
push
lds
mulb
jge
clc
imul
dec
mov
mov
es
mov
lods
inc
xchg
adc
mov
out
adc
cmpl
pop
or
cmp
pop
incb
scas
mov
addl
adcb
push
lret
bound
test
mov
sahf
sub
dec
and
and
push
lods
jae
popa
clc
and
xor
movb
ja
push
jmp
lret
cmp
imul
push
push
lea
jo
loopne
inc
adc
lret
out
lods
pop
xchg
jg
cmp
lret
push
popf
or
and
pop
movq
mov
lea
shll
add
adc
or
xor
lret
cld
jge
pushf
scas
sbb
and
mov
les
mulb
jge
imull
jmp
dec
mov
mov
es
mov
lods
inc
xchg
adc
mov
lret
in
adc
cmpl
pop
or
cmp
jo
mov
inc
fldt
scas
mov
addb
inc
xor
lret
bound
test
sbb
mov
sahf
sub
fidivl
dec
and
and
push
lods
jb
popa
clc
and
push
jbe
push
jmp
lret
pop
push
mov
and
jo
lods
inc
adc
lret
in
lods
push
xchg
jg
aaa
xor
push
mov
mov
fsubrl
push
jle
fldcw
shlb
add
jle
push
leave
pusha
or
xor
leave
mov
pushf
lods
sbb
jo
into
and
mov
ret
repz
mull
les
mulb
jmp
dec
mov
mov
es
pop
lods
inc
nop
adc
popl
lret
arpl
lods
xchg
add
xorl
push
or
cmp
jno
mov
inc
fldt
stc
jle
scas
inc
xor
int3
arpl
cmpsl
ljmp
cli
or
lret
dec
es
push
lahf
inc
fcmovnbe
aas
push
lods
jo
stc
and
adcb
in
jmp
leave
ss
push
mov
jno
ret
xor
popa
in
lods
adc
ss
xlat
push
popf
or
and
pop
or
mov
incl
jg
push
aam
popa
push
je
xor
daa
call
push
stc
jp
popf
stos
sbb
jno
int3
and
std
insl
clc
lahf
push
inc
fimull
push
lods
icebp
jo
clc
mov
ret
hlt
fs
ljmp
jno
call
or
jno
pop
scas
inc
mov
stc
nop
inc
scas
int3
arpl
popa
pop
scas
xchg
add
xorb
int3
in
or
cmpsl
daa
mov
mov
inc
fsubrl
stos
nop
daa
fisttpll
cli
jl
scas
inc
xor
int3
arpl
movsl
ljmp
clc
or
lret
mov
sbb
ds
scas
outsl
out
stc
and
adcb
jecxz
ljmp
jno
addr16
es
fsubrl
pop
das
lret
bound
push
lods
adc
xor
gs
pop
sahf
pop
xchg
mov
fnstenv
or
fisubrl
popa
clc
jg
inc
mov
adcb
ror
popa
add
sahf
xor
push
mov
popf
test
lret
sti
insb
stc
nop
sahf
sbb
fimull
pop
scas
lock
popa
clc
lahf
adc
int
sarb
arpl
adc
or
mov
or
jno
pop
scas
inc
lea
nop
ds
int
loopne
pop
scas
nop
add
xorl
xor
mov
xor
sub
xchg
inc
test
fs
jnp
scas
inc
cs
sbbb
dec
int3
arpl
mov
mov
lahf
daa
xchg
fdivl
dec
es
sbb
inc
fcmovne
cmp
stc
push
nop
ss
aas
adcb
loop
jmp
xchg
sahf
xor
data16
push
sbb
fidivl
fldt
mov
loopne
lods
adc
xor
arpl
or
mov
es
or
fldt
int3
stc
std
jge
inc
scas
push
sbbl
add
movsb
and
jg
lds
popf
cmpsl
sbb
jae
enter
imul
popf
sbb
dec
mov
popa
clc
popf
adc
into
inc
mov
push
in
xchg
adc
or
fs
sub
mov
jno
pop
mov
mov
stc
nop
cmp
into
fistps
scas
mov
in
test
scas
xor
mov
xor
jb
test
inc
fisubrs
cmpsl
nop
daa
cld
jp
scas
inc
sub
sbbl
dec
int3
arpl
mov
adc
hlt
or
enter
ja
sti
xchg
sbb
sbb
sbb
aaa
into
sarb
in
adc
jae
gs
push
push
xchg
jno
fisubrl
mov
ficoms
lods
jno
xor
popa
aam
mov
mov
daa
mov
pop
jns
fsubrl
lret
arpl
cld
jnp
inc
lods
sbb
lret
jno
aaa
mov
les
popf
movsl
pop
fnsave
and
imull
xchg
pushf
sbb
dec
mov
popa
clc
fwait
inc
mov
push
in
xchg
setle
in
mov
sub
mov
jno
pop
mov
mov
stc
nop
cmp
scas
mov
in
test
scas
xor
mov
xor
or
nop
daa
fmuls
cld
jns
scas
inc
sub
int3
arpl
mov
adc
repz
movl
xchg
sbb
sbb
sbb
adcb
loopne
in
adc
jae
fs
push
adc
fidivl
fldcw
mov
fstl
lods
push
sub
mov
xor
pusha
rorl
mov
mov
daa
mov
push
js
fsubrl
lret
sti
jp
inc
lods
sbb
sbb
lret
outsl
mov
adcb
push
hlt
jae
sahf
movsb
adc
and
xchg
lcall
mov
imul
ds
push
in
nop
push
lahf
ss
mov
or
popa
mov
sub
mov
jb
push
mov
mov
cli
xchg
cmp
sbb
das
lods
ss
push
or
xor
jb
xor
fisubs
movsl
nop
daa
xlat
inc
gs
js
scas
inc
sub
int3
arpl
mov
adc
repnz
movb
out
xchg
sbb
sbb
sbb
adcb
fists
adc
jae
arpl
mov
sub
fsubrs
mov
fcoml
lods
or
cs
pop
rorb
mov
mov
daa
mov
add
mov
cli
jns
inc
stos
sbb
popa
outsb
mov
adcb
push
repz
sahf
mov
les
xchg
cltd
push
inc
fildl
sbb
cltd
or
iret
cmp
pop
push
in
or
je
loop
mov
sub
push
mov
mov
cli
xchg
cmp
sbb
lods
ss
dec
or
das
mov
jb
xor
fisubs
inc
gs
ja
scas
inc
sub
int3
arpl
cmp
sahf
ljmp
icebp
or
lds
mov
sbb
sbb
sbb
pop
insb
ficoms
jle
jae
test
jno
xlat
scas
inc
or
out
xor
jne
mov
pop
push
icebp
push
cmc
mov
sbb
cmp
rcl
ret
fs
imulb
push
xchg
popa
enter
mov
pop
hlt
and
lea
shrb
out
jp
idivl
repz
xlat
leave
sbb
lahf
pushf
dec
scas
ljmp
mov
arpl
movsl
test
mov
orl
lock
adc
sahf
mov
add
or
adc
xchg
mov
icebp
push
mov
cmp
xchg
mov
in
push
mov
cli
mov
test
adc
call
inc
push
shll
inc
mov
xorb
cwtl
mov
cmpsl
cmp
js
xor
sbb
mov
and
push
paddw
xor
fwait
lds
ja
addr16
mov
push
rolb
push
push
ljmp
mov
sbb
cmp
sti
adc
cmc
pop
mov
aam
or
cmp
jbe
push
les
jmp
cmpsl
inc
out
shl
imul
and
or
movsb
dec
scas
mov
pop
cmpsb
push
fwait
out
xchg
add
sub
andb
lahf
mov
mov
pop
fiaddl
xchg
fidivs
mov
lret
rolb
mov
or
pop
sub
add
sbb
leave
idivl
or
xchg
lcall
nop
outsb
inc
cmp
mov
cmpl
or
mov
inc
les
xchg
push
loop
mov
aam
iret
xor
dec
fidivrs
ds
sarb
aaa
gs
add
inc
cs
and
icebp
pop
jnp
mov
cmp
inc
js
cmpsl
adc
jo
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
subl
pop
pop
lcall
push
ja
mov
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
jecxz
test
inc
cmpl
or
repnz
sti
repnz
push
das
decb
add
or
pop
and
gs
mov
xchg
jmp
add
test
jnp
pusha
int
clc
imul
testl
add
int3
sahf
sbb
call
inc
imul
mov
loope
daa
add
repz
sbb
pop
inc
enter
adc
jb
std
rorb
repz
cld
add
popl
lcall
stos
lahf
loop
inc
jbe
imul
mov
and
lock
repz
mov
adc
push
push
mov
xor
lret
ss
adc
jle
dec
pop
movsl
push
adc
mov
dec
push
lock
xor
or
or
push
imul
xchg
rorl
cmpsb
repnz
inc
fldenv
repnz
sbb
incb
sbb
scas
inc
pop
outsl
jl
imul
xchg
in
jp
ja
mov
pusha
fstpl
jp
mov
push
lds
mov
or
daa
ja
xchg
loop
and
iret
mov
insb
push
ljmp
jmp
dec
call
out
mov
adc
xchg
lahf
in
cmpsb
icebp
in
in
hlt
xchg
or
mov
mov
in
jp
int3
icebp
mov
roll
cmpsl
sar
xchg
pop
fmuls
sbb
cmpsb
and
mov
das
push
aaa
sbb
sbb
pop
sbb
xchg
popw
or
jb
lret
xor
out
xor
pop
cmp
pop
push
cs
mov
cmc
add
xchg
daa
add
push
in
xor
adc
inc
loop
sub
jmp
lea
andl
or
lret
adc
clc
sbb
xchg
adc
add
sub
imul
dec
rorb
sub
rorb
inc
sbb
