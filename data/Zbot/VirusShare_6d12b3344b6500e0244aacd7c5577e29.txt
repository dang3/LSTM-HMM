sbb
add
xchg
insb
inc
sbb
ss
sub
leave
inc
mov
and
rcr
push
and
cmp
rclb
jns
rcll
xchg
test
jae
mov
xor
fisubl
outsb
cwtl
pop
and
mov
pop
cli
sub
stos
jae
mov
dec
jle
int3
dec
xchg
push
ljmp
ljmp
loope
push
in
pop
movb
pop
stos
nop
cmpsb
or
sbb
daa
jnp
dec
outsl
std
stc
and
filds
xchg
adc
fistps
mov
fbstp
lret
bound
add
push
sarb
mov
js
adc
rol
jnp
adc
inc
sub
lcall
fst
icebp
xor
jmp
cltd
adc
cmp
and
xor
sbb
mov
push
data16
xchg
in
imul
push
adcl
mov
movsl
shl
adc
push
adc
movsl
loope
inc
dec
pop
fcompl
adc
inc
xchg
mov
pop
inc
sub
cli
sbb
mov
dec
mov
xor
cmp
sarl
inc
subb
mov
test
xchg
jbe
je
and
cmp
shlb
push
loopne
mov
add
push
frstor
dec
push
pop
je
pop
xor
xlat
out
lret
fsubr
pop
cs
call
xor
lcall
test
loope
dec
les
dec
mov
pop
ret
adc
inc
aaa
pop
lahf
sti
out
stos
mov
andb
jge
sbb
xchg
jl
pop
test
jle
sub
sbb
sahf
inc
sbb
cmc
test
lret
and
fwait
pusha
shlb
jecxz
gs
mov
dec
xchg
loopne
mov
rcrb
scas
or
aad
pop
xchg
scas
mov
std
jle
dec
jbe
imul
push
pop
jae
subb
enter
ja
movlps
adc
fdivrp
sub
clc
stc
sub
adc
stos
aas
fadd
jge
inc
sub
mov
test
aam
fnstcw
dec
lcall
int
and
xchg
sbb
fwait
push
dec
out
xchg
add
fisubrs
sbb
cmp
xor
imulb
pop
cltd
mov
and
cmp
in
dec
sub
and
mov
mov
cmp
ret
push
xor
jno
dec
data16
fs
or
popf
js
jl
push
mov
imul
mov
dec
pop
aas
sahf
lcall
mov
das
cmp
mov
sub
cmp
leave
xchg
mov
jb
mov
sub
cmp
stos
cmpsb
add
dec
ret
ret
stc
mov
dec
pusha
jno
xchg
nop
adc
aaa
mov
lret
inc
sub
xchg
lea
arpl
das
mov
push
test
mov
mov
std
sarb
mov
data16
nop
in
das
sub
pop
ja
out
jne
pop
repnz
or
popf
pop
or
decl
imul
cmc
inc
xchg
test
enter
cmp
pop
jo
loopne
xor
ljmp
xor
cli
push
add
xor
lds
addr16
std
dec
mov
and
xchg
les
xor
mov
jg
push
mov
das
cmp
repz
out
into
loop
add
dec
in
vprotw
xor
sbb
inc
inc
mov
daa
mov
lret
and
lret
into
rol
das
ret
test
or
dec
mov
mov
xchg
out
jmp
mov
stos
sub
jg
jns
insb
mov
mov
xchg
addb
or
jo
pop
jns
out
movsb
sub
jg
je
push
jecxz
arpl
adc
mov
xor
adc
in
arpl
jge
aam
xchg
sbbl
push
test
dec
stc
lahf
mov
mov
negb
pop
sti
mov
repnz
in
xchg
shlb
dec
pop
inc
shrd
push
xor
sbb
mov
stos
and
mov
or
and
notl
or
mov
mov
movsl
dec
mov
adc
pop
mulb
cmp
and
or
lods
imul
or
jbe
data16
dec
sarl
pushf
repz
fdivr
sbb
mov
stos
mov
les
imul
jg
push
inc
mov
push
scas
push
mov
jle
addr16
int
orl
outsb
clc
lcall
jno
in
add
xchg
loopne
shll
mov
jo
in
inc
push
mov
in
push
mov
out
repz
push
dec
pushf
cs
scas
iret
fisubrs
rolb
sahf
sub
out
cmp
push
hlt
aas
jne
xor
add
or
mov
rcl
in
pushf
mov
idivb
sub
sub
xchg
add
mov
push
jmp
scas
adc
sub
insl
xchg
nop
outsb
sub
push
adc
xchg
add
call
hlt
popa
bound
clc
and
mov
mov
or
in
pop
fsubr
sarb
and
dec
loop
neg
dec
xchg
roll
test
lock
add
dec
push
pop
jo
mov
pop
pop
push
lods
stos
jbe
xor
jns
push
clc
mov
sti
enter
loop
pop
or
bound
sub
mov
aad
pop
push
sahf
cld
jnp
mov
add
add
out
idivl
inc
and
and
add
jb
call
cld
loop
roll
fnstenv
xchg
jl
repz
loopne
xor
lods
dec
mov
mov
pop
outsl
jp
mov
jge
push
sbb
aad
push
xor
call
sbb
or
xchg
shr
pop
int3
imul
lcall
xlat
das
cmpsl
dec
xchg
shll
xor
nop
inc
jo
test
int3
adc
jg
or
rorb
mov
jo
push
iret
sbb
jno
adc
push
xor
lds
sub
adc
cmpsl
lds
xchg
jg
mov
inc
push
or
xor
arpl
bound
pusha
mov
cltd
or
cs
jge
add
in
fprem1
aam
xor
fwait
in
insb
jecxz
sub
or
push
arpl
sarl
pop
xchg
fidivrl
adcl
scas
testl
es
pop
out
inc
push
xchg
inc
push
mov
ja
fmul
js
mov
or
int3
add
mov
rclb
ljmp
dec
inc
sti
or
insl
mov
push
inc
push
xchg
inc
adc
iret
cmpsl
xchg
xchg
push
jmp
fwait
cmpsb
sahf
int
pop
cvtdq2ps
jge
and
cmpsb
xlat
aam
mov
pop
jnp
lock
sbb
sbb
fcoms
int
dec
icebp
popf
data16
arpl
xchg
scas
sbb
lahf
cmp
mov
push
dec
xor
jg
fadds
xor
fldenv
inc
cmpsb
sahf
in
lret
loop
add
test
dec
pusha
inc
mov
lret
cmpsl
loopne
jmp
inc
repz
adc
cld
add
jnp
mov
mov
adc
movl
xchg
mov
push
mov
addr16
aam
gs
jle
mov
push
xchg
cmp
cwtl
scas
or
js
insb
cmp
sbb
xor
stos
dec
mov
push
sub
mov
push
adc
cmpl
pop
sub
rcrb
jae
gs
dec
add
jle
cmpsl
scas
fisubrs
push
std
outsb
add
push
xchg
push
inc
xchg
aam
ljmp
loopne
add
mov
mov
xchg
into
mov
imull
cltd
lea
dec
xor
cmpsb
addr16
and
xor
jmp
mov
mov
ret
pop
ret
into
mov
mov
test
adc
mov
mov
in
mov
aad
mov
aam
cmp
lcall
lea
sbb
pop
jle
add
mov
fmuls
sbbb
mov
cmp
loope
movsl
cmp
ret
icebp
mov
dec
imul
jge
cmp
push
shl
adc
mov
ret
add
cmpsl
xor
aaa
test
js
dec
icebp
loope
cmp
pop
js
sbb
int
rcl
sbb
cmpsl
adc
pop
adc
neg
imul
enter
push
stc
mov
push
inc
inc
rol
testb
xor
call
fstps
push
cmp
pop
pop
xor
mov
fstps
dec
leave
inc
fs
xor
sbb
cmp
sbb
add
or
xor
testl
jmp
push
xchg
xchg
loope
cmc
rclb
mov
into
sbb
jo
je
ret
cltd
jmp
xchg
mov
xlat
dec
dec
sub
cmpsb
dec
and
and
lret
xor
xchg
fwait
loope
daa
imul
inc
cmpsl
jb
stos
push
shl
sbb
fucomp
mov
push
jae
or
scas
mov
flds
mov
xor
cli
jmp
or
add
ret
in
sbb
pop
ss
je
push
inc
cmc
sarb
stos
loope
jae
sub
in
push
jb
inc
ja
leave
mov
cmp
dec
push
add
in
xchg
or
pop
push
fimuls
xchg
and
sbb
sbb
iret
ss
mov
mov
xor
jmp
pushf
mov
dec
push
xor
ja
add
loope
push
in
mov
aas
pop
or
add
aaa
dec
stc
aam
mov
inc
or
push
outsl
rclb
fcmovnu
adc
sub
xchg
fadds
sahf
aam
xlat
and
xor
jne
jne
int3
add
mov
jp
add
aaa
mov
mov
sbb
push
mov
cmpsl
jae
leave
add
add
out
daa
pop
sbbl
mov
and
jo
jl
iret
std
push
mov
mov
test
negb
jp
lret
dec
cmc
add
es
jecxz
and
int3
mov
mov
lret
cwtl
fldl
dec
pop
push
cmp
int
dec
mov
jl
pop
push
mov
sbb
pusha
fsubr
pop
xor
inc
pop
loope
sub
cmp
push
adc
jecxz
movsb
push
insb
cld
sbb
sub
add
pop
roll
movsbl
xor
jle
pop
pop
mov
inc
cltd
mov
mov
jle
inc
ja
sbb
rcrb
inc
sti
cltd
cmp
push
mov
inc
mov
mov
or
data16
jo
jle
dec
test
dec
add
dec
or
sbb
mov
enter
xor
out
icebp
jno
dec
and
lods
iret
add
ds
fiaddl
jmp
mov
ret
lea
aam
icebp
fisubrl
jge
xor
pushf
mov
mov
push
insb
jb
cwtl
lock
cltd
repz
outsb
lcall
into
push
outsl
sub
mov
sbb
cmp
rorb
sbb
dec
mov
push
pushf
out
jle
or
dec
andl
test
stc
scas
adc
add
mov
int
les
sub
movsb
sahf
rcll
dec
imul
xlat
mov
int
bound
mov
mov
dec
jmp
mov
and
dec
mov
push
xlat
dec
in
push
sti
add
add
pop
mov
sub
ds
decb
dec
lret
test
movsl
cmp
popl
leave
fldt
jmp
loope
icebp
pop
mov
xchg
testb
pop
inc
push
cmpb
stc
dec
les
js
loopne
movsl
fildl
push
inc
inc
xor
mov
push
fs
pop
or
js
lock
int3
movsl
dec
or
cmp
xor
mov
out
fmul
imul
bound
inc
or
adc
dec
xor
cmp
dec
stc
lcall
sub
jne
shll
rcr
cwtl
xlat
pushf
das
or
pop
addr16
dec
aad
or
pop
sbb
and
fcompl
adc
data16
fxch
mov
sbb
jo
adc
adcb
mov
jp
jo
dec
in
mov
hlt
das
cwtl
cmp
cmpb
cwtl
es
sahf
adc
into
sbb
push
jp
mov
lret
adcb
push
lods
pop
fisubl
mov
or
lahf
jns
xchg
clc
enter
loopne
push
push
adc
test
aad
mov
xchg
cs
cli
mov
inc
pop
sbb
sbb
roll
cmpsb
mov
sbb
cmp
iret
sub
flds
pop
arpl
int3
xor
adc
cwtl
movsl
add
sub
jo
enter
mov
aas
mov
lea
stos
pusha
loop
dec
push
xchg
mov
cmp
and
dec
imul
add
sub
add
pop
jo
mov
pushf
adc
sbb
popf
jp
mov
dec
testb
push
sbb
fwait
dec
rcr
insb
jb
nop
sbb
std
inc
and
repz
in
lods
cltd
mov
add
sti
cmp
dec
stos
or
test
js
gs
lea
pushf
mov
mov
add
adc
sbb
orb
or
scas
inc
sbb
popf
movsl
or
pop
push
pop
dec
cmp
xorl
push
call
popa
out
jmp
scas
gs
pop
scas
inc
outsb
pop
pushf
fwait
xchg
mov
sbb
and
xor
sahf
addr16
sbb
cld
xchg
xchg
mov
rcrl
xchg
push
dec
lcall
mov
dec
and
daa
push
jns
out
and
and
ret
mov
or
lret
ljmp
lret
sti
mov
int3
xchg
test
jne
cmpsl
loopne
stos
jns
dec
pop
rorb
pop
add
test
pusha
les
insl
les
leave
xchg
shrl
in
pop
test
xadd
sub
cmp
jo
jp
and
sbbb
mov
lahf
push
dec
out
and
sbb
fistps
ss
mov
jns
je
mov
push
mov
ss
cmp
pushf
xlat
mov
movsb
sbb
push
sbb
mov
dec
dec
mov
ficompl
aaa
loope
pop
and
add
xlat
xlat
mov
cmpl
mov
jge
sub
mov
or
mov
mov
or
shlb
lahf
loope
mov
mov
mov
mov
faddl
push
mov
and
fwait
leave
mov
cmpsb
fstl
jl
in
mov
push
and
fiaddl
sbb
into
push
cmc
cld
pop
in
icebp
jno
mov
test
bound
pop
inc
mov
and
lock
rcr
imul
icebp
inc
xchg
popa
sarb
sub
or
test
cld
add
push
push
cwtl
mov
and
call
xor
push
imul
ljmp
sbb
mov
mov
inc
push
sub
pop
jecxz
in
and
push
mov
hlt
xchg
and
inc
aad
mov
test
aas
add
jno
mov
repnz
mov
rcrl
rcll
cltd
xchg
push
inc
js
mov
push
aaa
xor
jae
mov
mov
data16
mov
fwait
orl
cmp
and
jg
ss
or
push
mov
js
std
cwtl
jl
jns
jle
outsl
xchg
pop
fdivl
shll
movsl
lcall
mov
aaa
aas
or
lock
sub
sub
lods
aam
mov
popa
sahf
mov
xor
sbb
daa
orl
cmp
push
call
movl
cmp
outsl
js
ss
cmpsb
ret
jbe
insb
aam
pop
jg
loope
pop
imul
sub
mov
pop
xchg
mov
xor
and
stc
fists
push
dec
cli
mov
dec
pushf
jae
push
inc
mov
mov
test
cmp
xchg
mov
or
shll
jecxz
mov
loop
push
popa
cmpsb
arpl
je
jns
repz
push
pop
cmp
mov
test
enter
xor
jnp
shrl
cmp
lds
bound
jecxz
adc
pop
cmp
add
mov
daa
aaa
pop
xchg
fistl
add
add
sbb
and
fistpll
push
lret
and
imul
inc
ret
jmp
jo
mov
mov
in
cmp
stos
test
imul
lahf
sub
inc
gs
jle
jp
pusha
push
stos
cltd
cmp
test
lods
test
jl
or
test
push
mov
sub
mov
clc
mov
aad
mov
sub
fs
xor
nop
aam
movsl
xchg
and
adc
and
rcll
mov
ljmp
out
shlb
xor
loope
out
sub
call
je
sub
gs
add
adc
mulb
movsl
sbb
xlat
jge
outsl
movsl
sub
lahf
clc
mov
popl
movsl
cmp
and
fdivs
mov
lock
push
leave
pop
or
adc
mov
lahf
dec
xchg
hlt
jmp
test
lret
push
je
mov
and
pop
fdiv
in
shlb
insl
call
sub
and
pop
xor
mov
lahf
or
das
test
lcall
dec
mov
sbb
rcrl
xchg
mov
cmp
test
das
pusha
loopne
jmp
xchg
pusha
into
addr16
add
jl
push
sub
pushf
adcb
push
pusha
inc
daa
push
mov
dec
jge
mulb
xchg
repz
dec
daa
dec
pop
add
jno
in
mov
loope
cmp
subl
int
add
add
cltd
mov
lods
movsl
jnp
pop
test
movsl
mov
lahf
mov
ja
es
cld
adc
daa
mov
adc
xor
pop
inc
rclb
adc
mov
fucomip
movsl
scas
popf
cmp
mov
pop
xor
imul
add
movsb
mov
nop
scas
movsl
iret
and
fimuls
inc
or
mov
in
data16
rcll
fsts
addr16
jnp
cwtl
xchg
or
repnz
sbb
jne
inc
mov
add
mov
loopne
adc
insl
push
out
in
add
sti
in
mov
sub
jmp
xlat
jno
addr16
inc
mov
jnp
js
in
mov
sub
in
add
or
wrmsr
push
mov
nop
das
lahf
es
jns
out
pusha
sbb
dec
sub
js
mov
jbe
mov
cld
movsl
mov
xorb
out
sub
stc
lret
stc
xor
xchg
jmp
rorb
es
sub
or
fwait
inc
ret
call
push
xor
es
inc
insl
shll
xchg
daa
mov
cmp
add
ret
add
aas
aad
ja
stos
fisubrl
js
dec
in
gs
repz
insb
xor
je
fidivs
sbb
sub
mov
insb
xchg
pushf
dec
mov
rclb
mov
or
dec
jg
loopne
lcall
movsl
jmp
cld
inc
sub
lret
xchg
add
mov
ljmp
mov
mov
fwait
sub
add
mov
ret
adc
lahf
fisttpll
sbb
ljmp
in
mov
mov
dec
cwtl
repnz
adc
in
les
ret
lods
pop
in
lea
mov
stc
popa
cwtl
mov
mov
sub
cmp
movsb
sub
mov
xor
adc
in
out
or
in
sti
pop
loop
add
add
dec
lret
movsb
aam
xlat
arpl
popf
into
push
icebp
xchg
jae
jp
pop
dec
mov
xor
xor
pop
subl
lock
adc
adc
adc
fdivrp
xor
imul
movsl
inc
xlat
push
inc
pop
out
leave
and
repz
lea
xlat
mov
cli
cmpsl
stos
mov
or
je
cld
pop
push
mov
mov
mov
lods
insl
ret
iret
adc
adcl
outsl
rcll
xchg
int
mov
push
pop
jle
scas
scas
or
cmp
sbb
jns
rorl
insl
mov
xchg
loop
inc
inc
dec
adcb
mov
and
int
orb
push
aam
jo
push
add
out
fidivrl
call
ss
loopne
mov
jg
mov
stc
fldt
sbb
les
pop
add
loope
jns
adc
fists
xor
inc
adc
hlt
mov
arpl
stc
mov
inc
sub
fwait
adc
fildll
sub
in
mov
fdivrp
imul
mov
nop
test
pop
sub
nop
dec
aas
std
pop
inc
fdivl
lret
cmp
lods
rcr
add
cmp
mov
mov
aaa
xchg
dec
nop
sbb
add
or
int
xchg
das
bound
mov
notl
dec
ja
faddl
test
inc
les
lret
pop
adc
mov
in
adcl
adc
out
mov
and
add
std
lret
jo
sbb
pop
pop
mov
pop
ljmp
fdivrs
cwtl
sbb
imul
push
mov
push
xor
adcl
addr16
sub
imul
movsl
sbb
cmp
jle
xchg
stc
add
mov
sbb
or
and
outsb
gs
mov
es
xchg
aam
test
sbb
push
nop
movsl
mov
inc
insb
dec
adc
bnd
lods
mov
mov
mov
dec
mov
pop
fs
daa
inc
xor
push
sbb
imul
mov
jne
inc
and
nop
inc
add
pushf
mov
mov
mov
mov
push
jl
xchg
jg
sahf
mov
dec
int
mov
dec
aam
aas
push
bound
mov
inc
xlat
lods
sub
mov
repz
imul
jns
ljmp
jno
mov
mov
inc
test
cltd
xchg
in
jns
add
mov
lds
hlt
jp
or
xchg
mov
mov
push
sarl
sub
push
xchg
mov
xchg
mov
lea
add
lea
ja
loopne
loope
dec
mov
aaa
scas
add
xchg
sub
inc
push
out
roll
inc
mov
or
adc
cmpb
les
inc
mov
popf
dec
mov
mov
mov
mov
xor
pop
js
pop
jecxz
cltd
xor
mov
jp
cmp
mov
cli
xchg
fsin
xor
xchg
sahf
pop
add
stos
cmpsl
addl
fsubs
inc
outsl
push
dec
mov
hlt
adc
push
in
in
jne
inc
push
push
int3
mov
enter
and
cmp
gs
sti
or
nop
pop
addr16
mov
xor
mov
es
mov
jecxz
cld
insb
mov
stos
dec
jge
dec
pushf
or
mov
xchg
jns
fnstcw
pop
and
je
pop
pop
cltd
push
ljmp
xlat
pop
or
mov
leave
movsl
stc
cwtl
pop
xor
inc
and
adc
jecxz
fsts
popf
arpl
xor
pop
mov
test
push
fimuls
push
pop
cmp
imul
sub
popa
mov
stos
sub
add
inc
push
mov
or
fidivrs
or
jne
jo
add
xor
xchg
dec
pop
shl
gs
call
xchg
test
jl
lret
sbb
mov
lahf
push
gs
xor
adc
in
xchg
sbb
popf
icebp
imul
xchg
mov
xor
call
mov
and
nop
sbb
dec
mov
jle
dec
test
mov
jmp
xor
adc
cli
rcll
xchg
and
adc
sub
outsl
rclb
jno
aam
insb
xchg
xor
lret
add
dec
push
jmp
pop
xchg
add
or
test
fistps
cmp
xor
and
enter
cmp
lcall
mov
pop
std
inc
inc
mov
inc
bound
test
jb
or
out
lcall
jmp
scas
lcall
cwtl
pushf
xchg
pop
push
in
lods
mov
cmp
in
je
pop
gs
xchg
sbb
pop
xlat
cli
push
loope
and
lahf
adc
mov
jecxz
mov
andl
lahf
mov
add
insb
jb
cli
fwait
mov
and
cmp
iret
sub
cwtl
inc
cmp
scas
mov
or
cli
or
daa
int3
push
add
cmp
and
popa
dec
std
or
push
add
push
hlt
je
inc
sbb
mov
mov
inc
push
xchg
mov
movsb
jmp
jne
shlb
mov
dec
out
jmp
iret
push
mov
pop
push
cltd
pop
sti
int
repz
lock
or
rclb
xchg
into
jecxz
adc
pcmpeqd
or
stos
out
mov
hlt
ds
mov
mov
xchg
ds
sti
and
add
sbb
fildll
push
dec
xchg
dec
aas
jbe
push
inc
xor
repnz
mov
jle
and
divb
cmp
mov
lret
xchg
mov
jns
mov
lock
lods
in
mov
push
orb
xor
jae
add
xchg
fs
test
shll
jmp
lods
cmp
push
and
jmp
movsl
mov
sub
pop
std
jae
inc
pop
xchg
xlat
jecxz
mov
je
addb
std
mov
aas
loope
dec
and
inc
scas
add
mov
loope
xchg
stc
jns
loopne
sti
cmp
out
fidivrs
in
inc
test
sub
inc
ds
xlat
jns
xor
int3
hlt
cmpl
or
jnp
movsl
mov
dec
fistl
mov
sti
and
fcomps
mov
lods
xchg
sbbb
hlt
xor
les
lret
push
bound
xor
push
push
jbe
push
jns
out
mov
or
mov
sbb
clc
ljmp
lret
bnd
fmuls
sub
xchg
pop
and
jnp
dec
call
inc
repz
mov
fwait
jle
mov
aas
push
stc
push
mull
mov
and
dec
shlb
imul
push
lock
call
ljmp
cs
lods
push
inc
stc
and
insl
aam
adc
insb
push
pop
test
in
sbb
jo
fldt
push
mov
test
sub
shll
in
mov
mov
mov
aaa
xchg
inc
sbb
popf
insl
mov
pusha
enter
aaa
ljmp
pop
daa
ss
stc
int3
out
cmpsb
cmp
add
shr
xchg
pusha
mov
daa
jmp
dec
call
jp
decl
jp
movsl
aaa
push
in
mov
lret
aaa
bound
lea
std
inc
hlt
mov
lahf
inc
jl
scas
mov
inc
sub
jnp
test
ja
pop
sbb
cmp
mov
pop
cmp
outsb
mov
mov
lods
insb
add
mov
jmp
nop
lret
notl
mov
push
dec
loopne
mov
adc
mov
ja
pop
imul
pop
jbe
je
decb
or
addr16
mov
movsb
add
xor
lret
add
pop
cmp
sar
inc
pop
loopne
lea
int3
filds
fstpl
mov
mov
push
xlat
test
icebp
idiv
mov
test
sub
aaa
lock
inc
inc
xchg
sahf
cmpsl
stos
mov
adc
clc
jns
add
loop
enter
and
sub
jnp
pop
lods
mov
inc
mov
notb
adc
in
dec
jle
lea
aad
push
cmpsl
mov
rolb
jle
jmp
dec
inc
in
lea
lods
mov
push
and
pop
xchg
inc
pop
test
aam
jno
or
dec
sbb
clc
xor
or
jle
es
je
pop
xor
adc
hlt
mov
push
adc
xchg
icebp
jmp
pop
test
add
popf
outsl
mov
pop
cmp
out
xor
xchg
sub
or
inc
push
pop
bnd
fcompl
fwait
inc
sbb
mov
pop
fldt
pop
pop
sub
xor
pop
add
dec
xchg
les
push
adc
fstl
jle
jl
xor
loope
into
gs
fsubrl
sahf
adc
lcall
movsl
cmp
fnstcw
xor
sbb
loope
test
dec
pushf
fidivrl
jg
lods
ret
push
dec
push
cwtl
xchg
lret
pop
cmp
sub
jb
jle
imul
mov
jno
repnz
sbb
xor
jnp
pop
mov
das
test
cltd
sbb
pop
int
les
sub
icebp
enter
and
sbbb
mov
inc
push
cmp
mov
inc
inc
and
cwtl
pop
inc
adc
sbb
mov
push
sub
add
dec
mov
pop
jno,pt
sbb
in
mov
addr16
jne
sti
loope
fcmovb
inc
cmc
or
sub
cwtl
mov
cmp
insb
jecxz
or
sti
xchg
mov
pop
aad
mov
fcmovb
mov
mov
outsb
adc
fbstp
mov
xor
or
mov
inc
shlb
test
pushf
into
loop
popf
sbb
jae
outsl
les
add
jnp
or
fcompl
sbb
jg
loop
xor
jecxz
push
inc
mov
dec
add
shlb
stos
push
jmp
mov
aas
lcall
mov
hlt
int
fisttps
out
nop
mov
cmpb
mov
int
adcl
xchg
dec
std
icebp
js
mov
fisubrs
or
and
lret
pop
and
push
cmp
clc
sbb
out
push
jp
pusha
fldcw
or
xchg
in
popa
mov
cmc
mov
dec
pushf
push
adc
add
xchg
aad
repz
pop
enter
cmp
fstpt
repz
int
mov
pop
icebp
cwtl
scas
inc
test
sub
shl
mov
sbb
das
xchg
dec
mul
inc
xor
pop
addr16
push
mov
loopne
sbb
sbb
pop
push
inc
mov
jp
cwtl
sub
mov
pop
rol
test
roll
fcmovnb
lcall
testb
xchg
iret
cltd
loop
jno
jp
sti
ret
mov
xchg
xchg
and
stos
fstpt
sub
adcl
ret
sub
pop
push
out
dec
xor
mov
or
jns
push
jns
out
imul
shlb
mov
adcb
push
insb
xor
cmpsb
dec
lock
sub
push
clc
aad
out
dec
xchg
cmp
adc
xlat
lahf
mov
lahf
adc
fdivr
mov
int
and
jg
push
fisubl
out
sbb
fisttpl
mov
mov
inc
xor
cmc
rorl
mov
mov
inc
jne
sbb
rcrb
xor
and
sbb
out
pop
mov
jne
xchg
icebp
adc
insl
cmc
stc
push
cmp
push
cmp
movsl
lahf
dec
inc
jmp
aad
dec
stc
popa
lds
lahf
mov
cmp
pusha
lret
out
call
xor
add
jg
xor
adc
lock
aas
push
inc
mov
lret
in
or
sub
fs
ss
push
inc
xchg
test
lds
cmp
negb
push
lcall
jbe
cmp
push
std
mov
sub
jle
jl
rorb
xchg
in
push
loope
dec
outsb
push
scas
sub
cmp
jae
adc
popf
pop
adc
cs
out
adc
mov
nop
lea
add
mov
iret
jb
aaa
mov
fcmovb
add
pop
add
idiv
and
test
clc
adc
lock
push
sub
dec
das
or
leave
cld
mov
mov
mull
sub
bound
mov
xlat
jg
jg
mov
popf
movsb
jb
inc
lods
xlat
shlb
out
mov
enter
or
popa
subl
inc
and
inc
cmp
mov
in
jl
jecxz
add
jo
pop
jno
or
sbb
pusha
aam
imul
movsl
push
add
mov
stos
fwait
dec
ret
xlat
add
xchg
pushf
pop
mov
icebp
in
ljmp
xchg
xchg
sahf
shl
xor
sbb
jo
inc
mov
ror
inc
jl
sti
pop
inc
mov
outsb
xor
mov
pop
push
push
sbb
mov
push
xor
stc
ret
test
xchg
or
mov
mov
mov
jb
or
subb
jno
fwait
push
mov
fwait
mov
or
arpl
jl
push
movsl
hlt
dec
call
sub
pop
cwtl
les
adc
stc
sbb
dec
mov
inc
pop
mov
sahf
pop
xchg
loop
mov
dec
xchg
out
pop
bound
int3
mov
test
dec
mov
sbb
test
movsb
mov
cs
jae
pop
jmp
jns
insb
js
xor
mov
dec
sbb
fwait
push
test
mov
icebp
in
jecxz
rolb
addr16
push
xchg
iret
pop
imul
sti
insb
xor
out
out
mov
mov
mov
dec
fstpl
repnz
sbb
faddl
popa
fmul
and
stos
gs
test
jae
and
mov
mov
xchg
imul
jg
mov
mov
xchg
fistl
shrb
jo
add
out
pop
add
stc
andl
sub
fsubrs
int3
cmp
jge
repnz
mov
fistpl
outsb
mov
std
loopne
jno
xor
loop
leave
add
pop
ret
arpl
in
mov
lret
fs
cmpsb
dec
xor
push
or
adc
mov
mov
jge
les
sbb
sbb
sbb
jmp
rcl
insb
jns
push
repz
cmp
sbb
xor
fwait
xlat
andl
scas
cmp
sahf
push
mov
daa
adc
adc
sbb
in
jbe
xor
dec
add
jecxz
ljmp
add
pop
int3
mov
dec
xchg
or
or
outsl
loope,pt
push
mov
adc
stc
out
outsl
int
inc
mov
or
fsubrp
aad
cmpsb
out
sub
xchg
push
mov
lods
aam
int3
bnd
inc
fnstcw
xor
mov
insl
cltd
xor
jl
arpl
push
sub
pop
mov
xlat
out
fcomip
ljmp
fldcw
mov
inc
sub
orl
inc
xor
adc
cli
stos
adc
cmc
pop
or
or
stos
mov
cmp
pop
push
push
ja
int
pop
fstps
sbb
xor
xor
out
xchg
cmp
mov
pop
add
jnp
stos
ror
jge
insl
leave
movl
pop
mov
loopne
xchg
ficoms
inc
push
loop
pop
dec
test
shlb
mov
mov
jge
lea
pop
push
dec
add
jp
sub
pop
push
scas
adc
movsl
or
sub
arpl
lcall
out
xor
cltd
pop
push
jmp
mov
out
or
mov
aas
mov
xchg
repz
xor
bound
inc
in
icebp
xor
lds
add
cmc
mov
jnp
aam
dec
hlt
xor
mov
lods
adc
bound
mov
into
xchg
pusha
aad
xchg
shll
xorb
adc
mov
adc
inc
xchg
popa
ds
cmp
push
or
fdiv
jo
test
adc
pop
rol
fimuls
mov
sbb
sub
sahf
xchg
inc
insl
sar
cmpl
aaa
push
adc
insl
ret
repz
ljmp
sub
pop
inc
push
sbb
sub
mov
and
ret
stc
lcall
jnp
lret
or
icebp
adc
sbb
cwtl
inc
pop
push
bound
xor
pop
cli
or
loope
inc
fwait
imul
xchg
nop
pop
popa
aam
mov
insb
in
pop
in
pushf
inc
idivl
pusha
pop
mov
out
pushf
add
inc
inc
mov
shlb
ds
and
xor
pop
pop
dec
xor
xchg
pop
ret
popf
fstpt
js
pop
orl
push
mov
inc
cmpsb
adc
push
andl
jno
int
sub
push
cld
je
push
lret
mov
jg
inc
in
mov
sbb
sbb
mov
out
sub
ret
movsl
lea
xchg
ljmp
ss
divl
mov
inc
imul
cwtl
int
popa
or
pop
cmp
inc
dec
inc
sub
cltd
jge
inc
add
sbb
movsl
push
sarb
or
orl
fimull
push
js
dec
mov
mov
cmp
jns
jge
test
out
xlat
push
roll
jne
imul
push
mov
push
jae
sbb
arpl
cwtl
dec
adc
mov
ljmp
scas
cwtl
addb
cmp
and
int3
loop
mov
xor
jnp
out
cli
or
pop
in
xchg
fpatan
inc
lods
mov
inc
xchg
fiaddl
dec
mov
dec
mov
stos
xor
add
sahf
repnz
gs
push
stc
push
lahf
xchg
repz
into
sub
xchg
repz
insl
dec
shl
in
and
pusha
popl
and
inc
dec
lods
pop
lea
in
mov
inc
loopne
dec
push
jo
stos
mov
ss
fldl
add
test
shl
jle
in
sahf
ficomps
push
mov
and
outsb
in
mov
movsl
idivl
cmp
gs
icebp
push
jo
pop
dec
or
dec
mov
jle,pt
out
inc
and
sub
cmp
ficoml
call
pop
sti
fwait
cmp
int
or
int3
mov
xor
dec
insl
sti
lea
adc
bound
mov
pop
sbbl
inc
inc
cmp
pop
pop
push
push
popf
ja
jae
push
jle
lcall
cltd
stos
sbb
pop
jae
out
cmpsb
jmp
fldcw
pop
daa
jno
sbb
add
insl
scas
pusha
divl
scas
inc
sbb
cmpsb
xchg
xchg
decb
aas
repz
add
imulb
mov
xlat
popf
cmp
std
mov
arpl
nop
sahf
xor
xchg
arpl
pusha
and
in
dec
out
jb,pt
xor
mov
push
xchg
add
into
and
adc
into
pop
ss
push
and
adc
sbb
fidivrs
dec
stos
pop
sti
sub
and
or
in
inc
mov
ljmp
sarl
cld
mov
data16
adc
pop
repz
xchg
pushf
int
pop
sbb
jnp
test
or
loope
sbb
les
shll
aad
mov
push
daa
or
push
pop
mov
cmp
mov
jb
dec
pop
sub
inc
test
mov
mov
je
push
sub
cmpsb
xor
push
mov
les
mov
push
lods
mov
pushf
mov
jns
add
cld
sbb
push
push
jl
iret
xor
cs
aad
and
pop
add
inc
jmp
jo
addr16
xchg
jns
push
cmp
mov
in
mov
pop
sub
adc
adc
testb
sub
bound
movsl
and
pop
das
inc
xlat
cmp
mov
inc
lods
insb
adc
and
xchg
xchg
loope
inc
incb
sub
dec
jne
push
push
mov
ret
stos
cmpsl
lahf
pop
int3
mov
sbb
xor
mov
in
es
push
sub
jns
lcall
cmpsl
mov
fidivrs
bound
insb
fs
mov
adc
sub
mov
xor
xor
popa
daa
inc
leave
xorb
rcrl
mov
rorl
notl
sbb
lock
add
sbb
lods
pop
xchg
or
stc
mov
aas
jb
mov
neg
add
sbb
jae
dec
sarb
popf
rclb
out
das
leave
adc
mov
sub
in
pop
setae
or
std
cmp
and
sub
lods
sub
testl
inc
cmc
jl
jns
xor
sarb
jle
jnp
pop
cld
and
jae
sbb
ljmp
cmp
pop
out
push
cmp
cmp
cltd
test
call
and
mov
std
adc
jb
lds
xchg
into
xor
sub
xor
cli
mov
xchg
out
adc
jge,pn
daa
add
cmp
sbb
pop
cmpsl
jl
or
push
push
outsb
rol
daa
mov
sub
mov
xor
push
push
and
scas
jnp
lea
jbe
repnz
enter
jge
inc
add
and
or
stos
xchg
outsl
int3
or
adc
dec
jae
or
xor
pop
fisttpll
xchg
dec
add
jne
shrb
pop
adc
data16
adc
and
fstp
mov
push
cmpsl
cmp
std
cmp
and
jmp
sub
mov
jno
adc
movsb
push
sub
jnp
and
call
popf
in
xor
xchg
imul
into
scas
mov
stos
fcomip
mov
jae
mov
xchg
or
add
inc
pop
in
sbb
not
xlat
decb
jbe
mov
adc
inc
rcll
pop
bound
ds
pusha
lcall
fwait
cmp
in
mov
push
sub
clc
jmp
ja
inc
xchg
sarb
mov
cltd
add
idivb
sub
popf
and
rolb
in
xchg
divl
mov
pop
bound
fs
xchg
cmpsl
push
jecxz
jmp
pop
adc
mov
repz
clc
cmp
jae
frstor
or
cwtl
mov
push
or
pop
mov
push
jecxz
sub
scas
mov
lret
pusha
or
xor
and
rorb
push
scas
mov
les
das
jl
pop
adc
pop
ljmp
xlat
int
fldt
pop
iret
push
add
inc
hlt
cmp
push
fisttpl
dec
aam
cs
adc
mov
xor
mov
out
fsubr
push
int
mov
inc
sub
icebp
jae
jg
push
sbb
pusha
lret
out
mov
cld
mov
ds
cmp
inc
mov
jmp
sbb
xchg
shlb
or
jo
sub
push
lods
add
call
push
cmp
movsb
xchg
sub
outsl
cmpsb
fsubl
out
push
sbb
fidivrs
jno
ret
sbb
sbb
icebp
frstor
dec
xor
test
stos
fucomip
sbb
int
adc
mov
ret
shrb
cmp
loope
fs
add
ret
cld
mov
aas
xchg
dec
push
mov
cltd
lods
add
scas
dec
vpaddsb
sbb
cld
pusha
pop
add
shrl
iret
xor
jb
cmp
aad
es
loope
sub
ljmp
pushf
pop
aam
xchg
ret
xor
push
aas
dec
inc
ret
fisubs
mov
cli
in
or
insb
lahf
stos
aaa
and
pushf
sub
xor
cmc
jg
std
xor
push
incb
loope
ja
mov
loop
pop
add
insb
push
sbbb
mov
sub
xchg
push
imul
into
cmc
outsb
and
bound
negl
int
into
mov
pop
popf
adc
mov
add
mov
sub
cltd
jle
lcall
push
push
cmp
cmp
push
fiaddl
cltd
jnp
movsb
cld
call
sub
inc
cwtl
dec
xor
pop
cmp
cmc
ja
inc
xchg
add
pop
push
adc
xchg
push
je
mov
outsl
lock
push
cld
dec
cmpsl
and
cs
mov
xchg
sbb
mov
mov
jmp
push
leave
inc
cmp
xchg
and
cmp
mov
into
add
mov
scas
mov
leave
enter
subl
pop
shll
int3
mov
xchg
divl
mov
test
roll
js
into
loope
pop
out
xor
shrd
pop
jne
sbb
push
repnz
repz
js
adc
jbe
xchg
dec
dec
call
hlt
insb
push
sub
xor
cli
sub
movsl
gs
pushf
repz
and
sbb
popa
dec
cmp
pop
lret
xchg
adcb
sar
inc
push
or
and
loopne
nop
sbb
pop
mov
arpl
push
and
outsb
lock
jmp
loop
or
repnz
loop
push
push
or
cmpsl
enter
pop
es
ja
pop
dec
push
pop
in
test
int3
cli
sahf
aam
popa
xchg
cmpsl
loope
fldl
cs
mov
in
cmpb
cmp
xor
jmp
inc
dec
fprem1
shl
jo
fwait
gs
inc
pop
or
jns
jg
adc
dec
sub
adcl
pop
push
pop
adc
dec
lods
test
cld
int3
aaa
test
push
ja
xchg
and
adc
mov
arpl
orl
pop
test
pop
add
xor
or
adc
adc
dec
mov
jecxz
inc
outsb
shll
jl
div
jecxz
cs
ja
push
push
add
dec
lahf
faddl
and
dec
cmpsl
outsl
std
jecxz
sarb
arpl
cmc
xor
idivl
addr16
jge
ja
push
dec
mov
mov
clc
adc
xchg
push
lea
mov
or
out
call
cmp
or
xor
push
incb
outsl
push
stos
sub
lea
mov
aaa
ds
pop
mov
add
sbb
fistl
in
mov
inc
and
arpl
into
inc
sub
stos
cmpsb
jp
test
imul
movsl
jp
sbb
loop
pop
lret
jge
sbb
cmc
cmp
inc
push
and
xchg
test
add
and
lahf
mov
popa
cld
ucomiss
outsb
xor
lret
imul
loop
cmpsl
xor
je
pop
jo
or
adc
out
add
popf
iret
add
push
inc
out
repnz
adc
sahf
movsb
sub
mov
add
dec
insb
repnz
inc
sbb
addl
fcompl
inc
fldenv
pop
int
cmp
jb
cmp
mov
xor
mov
pop
and
mov
xchg
or
xchg
jg
sub
arpl
and
adc
aaa
sbb
pop
lods
dec
scas
sbb
cmp
addr16
inc
cmp
dec
mov
dec
mov
addr16
adc
dec
cwtl
xchg
mov
cli
pop
dec
scas
cmp
icebp
push
jmp
imul
cltd
sub
ljmp
xchg
dec
lahf
inc
fsubs
push
cmp
adc
bound
pop
inc
push
in
or
adc
mov
lahf
jo
add
jg
loope
push
cli
bound
xor
js
fcompl
mov
and
sub
and
xchg
push
cwtl
iret
add
loopne
test
dec
les
xlat
lret
test
stos
shlb
pop
ja
mov
insl
aaa
or
inc
or
scas
sahf
clc
adc
sub
je
mov
pop
mov
mov
and
mov
mov
int
jnp
popf
or
sbb
jnp
lret
or
pop
and
je
adc
jg
cmp
addr16
test
popf
in
iret
lock
ret
dec
lret
into
sti
fwait
cmp
adc
cwtl
int3
lea
lret
out
imul
mov
pusha
stos
movsb
mov
std
aad
into
and
pop
pop
rcr
mov
aam
out
xor
lahf
fld
mov
call
aad
pop
in
fldt
xlat
xchg
int
dec
fistpl
insb
pushf
in
dec
or
mov
cmpsb
lods
lods
jbe
jmp
movsb
leave
lea
pop
icebp
push
in
xor
add
dec
and
xorl
xor
push
sub
pop
shll
pop
lcall
inc
bound
jmp
inc
mov
dec
movsb
jb
sub
cli
and
inc
mov
gs
dec
xchg
mov
mov
mov
add
fsub
sarl
out
pop
inc
xchg
js
and
adcl
mov
or
xchg
jno
mov
test
inc
xor
xchg
jnp
pop
stos
mov
arpl
ror
cwtl
mov
cwtl
fwait
aam
movsl
cltd
mov
cmp
and
imul
arpl
sbb
scas
sbb
xor
jnp
lahf
mov
sub
sub
pop
test
or
push
rcll
not
es
xchg
ret
test
pop
nop
cmp
aaa
cltd
test
lock
inc
jle
shl
sub
xor
or
mov
sarb
xchg
inc
jbe,pn
adc
mov
jae
mov
je
cmpsl
mov
dec
jnp
loop
mov
mov
dec
cld
cmp
je
xchg
in
mov
jbe
cmp
mov
int3
or
movsl
inc
arpl
sbb
jg
hlt
sbb
mov
int
dec
aam
jb
lds
mov
jne
pop
repz
jne
test
sub
xor
sbb
cwtl
sub
popa
jg
lcall
jbe
sbbb
adc
movsb
sbb
xor
fstpl
fildl
enter
or
movsl
pop
jp
jecxz
mov
test
jg
movsb
inc
pop
lret
in
mov
add
bnd
ficoml
insl
mov
push
push
add
lock
dec
jbe
jne
sub
popa
mov
jb
fsubs
xchg
in
adc
je
mov
stc
int
mov
lret
add
fsub
es
mov
fwait
cmp
add
lcall
lcall
xchg
pop
int3
sarb
sbb
pop
mov
js
pop
and
push
adc
or
cmp
mov
popl
nop
insb
dec
push
sub
fs
adc
jbe
mov
jp
imul
jge
mov
mov
popf
dec
mov
out
imul
xor
lea
dec
mov
js
adcb
mov
or
bound
and
lcall
mov
cltd
repz
rcrb
in
xor
test
into
mov
mov
mov
or
xchg
fldlg2
cmpl
inc
pop
scas
xchg
push
sub
jnp
dec
pop
adc
outsl
fistpl
dec
adc
test
jl
std
push
fwait
mov
dec
adc
out
addr16
imul
push
mov
jecxz
xchg
aad
dec
adc
inc
aad
pushf
add
icebp
mov
arpl
std
int
shlb
push
cmp
fwait
ljmp
pop
pop
inc
xor
inc
jbe
mov
pop
repz
outsl
aas
aaa
pop
xor
enter
outsb
in
jg
arpl
test
repnz
mov
mov
test
sub
outsb
dec
jmp
jle
mov
pusha
push
dec
cmp
subb
rolb
or
xchg
lds
mov
test
pop
mov
dec
outsb
test
or
sbb
fildl
push
adcl
in
jle
push
sub
aas
mov
out
sti
ljmp
sbb
pop
push
mov
xlat
pop
push
and
fs
sub
or
std
pusha
scas
and
mov
sub
xor
sarb
repnz
cli
jp
adc
ja
add
cwtl
push
xchg
rcrb
jp
inc
sbb
test
xchg
aam
cmp
stos
cld
pop
inc
sub
or
cmpsl
jae
xor
fsub
cld
ja
lcall
sbb
sarb
ja
or
js
repnz
mov
pop
cmc
mov
mov
sub
bound
loope
ja
dec
jbe
xchg
clc
movsl
xor
aaa
clc
xchg
xlat
cltd
cld
iret
pop
sbb
mov
jmp
sub
out
repnz
mov
cld
lds
adc
sbb
test
add
cmpl
call
outsl
movsb
sub
imul
jp
xlat
daa
daa
adc
jno
xor
or
fdivr
dec
bound
push
inc
jle
xor
push
mov
sti
cmovb
jne
shrb
loopne
rcr
fistpll
xchg
and
cmp
xlat
jle
jns
push
sbb
add
xchg
idivl
mov
jmp
out
xchg
push
out
sub
dec
subl
in
jmp
movsb
add
push
pop
lds
data16
out
and
das
adc
nop
bnd
dec
rolb
test
arpl
xchg
fistpl
int
sbbl
insl
xchg
loopne
movsb
popf
shrl
jmp
dec
xchg
fsubr
loop
pusha
sbb
aas
cmp
xor
mov
mov
inc
aaa
dec
addb
ljmp
out
sub
scas
aaa
push
sbb
stc
jae
movsl
iret
aam
mov
dec
and
push
mov
stos
fdivl
pop
inc
ja
adc
mov
cmpsl
pop
xbegin
retw
dec
jb
jge
pop
pop
sbb
rolb
or
fmul
dec
leave
jb
test
pop
inc
push
mov
orl
fisttpll
sbbl
test
push
push
jns
lds
sahf
xor
adc
sub
lds
sbb
scas
push
test
sbb
add
divl
jl
fistpl
inc
repnz
imull
xchg
lret
int3
arpl
test
enter
aas
cmp
mov
sbb
int
adc
jecxz
pand
fs
adc
adc
cmpsl
out
fdivrs
fsts
hlt
orl
test
add
dec
jno,pt
jecxz
adc
std
sti
les
mov
or
inc
xor
jl
pushf
inc
adc
sub
ss
cmp
pop
cmp
xchg
adc
inc
ret
xor
ret
sub
dec
shll
jle
push
fmuls
mulb
into
jnp
sub
lea
clc
pushf
xchg
add
jp
sti
xor
dec
lahf
xorl
xchg
popf
hlt
jne
add
push
es
leave
adc
ret
dec
ja
jmp
out
mov
outsl
sti
mov
insb
fs
fisubrl
push
shrl
andb
mov
loop
jne
jnp
std
aaa
push
or
js
aas
bound
xor
shll
pop
mov
mov
cmp
xor
dec
xchg
test
popa
jge
pop
sarb
sbb
pavgb
push
mov
js,pt
add
leave
inc
nop
pop
sbb
arpl
push
jns
fucom
sub
mov
lods
negl
and
addb
xchg
lret
icebp
imul
jmp
mov
out
notb
jl
pop
sub
popf
loop
mov
mov
mov
repz
fcomps
push
push
mov
js
push
pop
int
cmpsl
test
ret
lds
mov
mov
ja
jmp
dec
xchg
fmul
imul
iret
fadds
and
pushf
stos
xchg
icebp
add
inc
divl
ja
xchg
push
xor
popw
add
jb
add
push
out
lods
sub
icebp
push
fstps
in
lret
and
push
adc
hlt
jecxz
mov
lret
sarl
xchg
aam
cmp
pop
inc
sbb
daa
inc
adc
or
mov
xchg
mov
inc
insb
jne
popf
xchg
popf
outsl
xchg
pop
sbb
xchg
adc
ficoms
jno
inc
leave
hlt
push
ficoml
aam
and
sub
mov
dec
loope
add
or
xor
push
in
sub
test
xor
mov
cmp
push
pop
lea
inc
xorl
jnp
pop
jnp
bound
jmp
imul
xor
mov
dec
push
mov
mov
mov
ss
mov
push
je
mov
fwait
cwtl
adc
jno
push
cs
rcll
in
xchg
gs
xlat
dec
sbb
clc
popf
jle
dec
push
dec
in
rorb
fiadds
fucomi
push
mov
enter
sbb
test
and
jge
sub
jmp
dec
adc
inc
or
ds
stos
pop
mov
test
cmp
and
sahf
repnz
mov
stc
jne
adc
push
sbb
mov
lods
cwtl
popf
pop
loope
fwait
stos
xchg
pop
cmp
xor
add
pushl
mov
cmp
ds
jmp
push
cmpsl
hlt
mov
sahf
nop
xor
lock
dec
mov
adc
push
lcall
bnd
mov
inc
ss
inc
addb
clc
mov
fs
cmpsb
mov
popa
into
mov
popf
cmpsb
dec
dec
mov
mov
insl
dec
pop
scas
adc
insl
ret
cli
inc
cmc
insl
repz
insl
sub
aaa
test
iret
sub
or
and
jl
test
mov
fs
sub
dec
rcr
js
stos
xor
inc
std
push
pop
loop
jb
push
or
aas
push
or
sbb
std
subb
cltd
push
jnp
lahf
inc
add
jle
mov
fcomp
scas
mov
and
ret
dec
data16
addr16
shlb
and
mov
sub
scas
fisubl
push
mov
std
test
inc
call
mov
xchg
mov
nop
aad
xchg
mov
into
fsubrl
xchg
cwtl
push
and
divb
mov
shr
push
aam
nop
xchg
mov
or
sub
test
insl
cmp
add
push
je
and
outsb
fxch
adc
sub
jl
jg
fs
or
sbbl
adcl
insb
mulb
cmovs
mov
add
push
push
jae
xor
push
iret
xchg
jnp
xor
sbb
inc
cwtl
or
gs
repz
add
out
sub
out
fdivs
insb
ret
push
push
cmpsl
jecxz
insb
mov
xor
mov
dec
push
fistpl
ljmp
pop
cs
cmp
aas
add
and
push
ds
jge
mov
mov
inc
out
bound
jae
mov
aad
inc
pop
or
jb
icebp
adc
sbb
lods
ret
or
data16
ds
in
mov
iret
popf
pop
mov
scas
in
lock
push
inc
daa
xor
mov
addl
int3
lret
xchg
cmc
sahf
test
push
mov
jl
repnz
sub
and
adc
inc
out
aaa
cmp
rolb
xchg
lea
push
lea
sub
aam
outsb
test
cmp
pushf
nopl
xor
cltd
inc
mov
cmp
ret
repz
pop
mov
aad
mov
adc
loop
adc
cld
icebp
or
addr16
inc
adc
adc
pop
xchg
insl
pop
mov
cli
adcl
clc
cmp
lcall
jbe
cwtl
stc
pop
adc
xlat
mov
popa
sahf
pop
out
int3
gs
ja
add
push
mov
sub
adc
push
aaa
fisubrs
loop
xchg
in
and
and
cld
andl
add
or
popa
pushf
mov
loopne
lods
adc
jl
jge
orl
adcl
call
test
push
mov
xor
push
cld
or
ds
mov
cli
or
pop
ret
mov
nop
in
sub
xor
mov
ret
rol
lods
flds
mov
xchg
lret
dec
add
sbb
fstl
push
movsl
jno
mov
test
fldenv
inc
cmp
push
fbld
lret
dec
popf
fwait
and
add
dec
je
std
or
xchg
movl
pop
decb
ret
adcb
adc
dec
add
pop
xor
push
adc
imul
in
sbb
jne
push
and
cmp
push
xor
fidivs
and
insl
rcll
mov
test
dec
sbb
dec
addr16
pop
or
decl
adc
das
pushfw
jmp
mov
inc
ds
dec
add
add
push
in
pop
mov
pushf
fldenv
std
pmulhuw
mov
and
insl
fisttps
dec
out
outsl
idivb
mov
dec
das
in
leave
mov
fsubr
or
ljmp
pop
ss
testl
popf
mov
movb
loopne
les
adc
negb
pop
xchg
fdivrs
xchg
aad
popf
sub
sbbb
add
pushf
outsl
push
adc
xchg
and
sarb
sub
xchg
jecxz
std
out
cli
sbb
jg
stos
cmp
popf
add
outsb
jb
mov
or
push
stos
testl
xor
pop
jne
mov
loope
cmpsl
adc
mov
or
ret
stos
popf
xor
dec
add
lahf
or
dec
cwtl
cltd
mov
fwait
sub
push
sti
jo
mov
or
in
adc
jns
or
and
jbe
insl
sub
cmpsb
lock
push
mov
xchg
rcr
int3
je
inc
lahf
or
icebp
popa
or
mov
repz
push
adc
dec
xchg
clc
sbb
outsl
add
cmp
cs
add
cmp
push
xchg
scas
sti
and
cmp
push
fildl
inc
scas
or
xchg
xchg
pop
pushf
fs
inc
cltd
rolb
mov
cmc
mov
cltd
fs
push
fnsave
jmp
cs
adc
cmpsb
push
fdiv
dec
jg
mov
ret
xor
aaa
scas
daa
inc
push
pop
pop
cvtps2pd
jmp
nop
loop
testl
xlat
inc
and
mov
mov
push
xchg
cltd
arpl
cmpsb
push
repz
push
add
cmpsl
pushw
rcr
imul
gs
leave
popa
xorl
cmp
lods
cmp
imul
mov
xchg
adc
and
or
shll
rol
cmpb
xchg
leave
les
ljmp
insl
mov
jg
leave
rclb
mov
pop
add
dec
mov
xor
jg
ds
jmp
flds
xchg
out
call
pop
imul
pop
fdivrl
shlb
add
jb
sbb
and
ret
xchg
push
ret
mov
fwait
daa
or
and
in
xchg
pop
xor
or
ds
ds
pop
cmp
xor
push
in
sahf
test
jne
ljmp
push
mov
cltd
mov
test
add
int
or
pop
or
add
shrl
add
inc
in
push
stos
loop
or
sub
sub
out
cwtl
xor
xor
or
mov
ficoms
inc
xor
jns
cld
inc
add
stos
fdivrp
xor
and
cmp
jge
bound
push
pushf
jb
loope
sbb
add
push
and
mov
push
es
and
pop
xor
dec
cmp
or
cmp
mov
sub
jo
or
in
les
stos
fnstcw
aas
das
mov
popf
mov
lea
pop
mov
loope
inc
out
imul
imul
mov
push
cltd
stos
jo
pop
pop
dec
adc
xlat
sbb
cmc
jb
inc
stc
ds
jae
mov
clc
incl
mov
addr16
call
fistl
sbb
mov
sbb
dec
repnz
rep
imul
mov
cmp
sarl
pop
mov
pop
mov
lret
addl
adc
psrlw
inc
cltd
or
pop
std
sbb
add
sub
outsb
jl
iret
jmp
or
repz
and
andl
jno
cld
jne
ja
imul
cmp
stos
cmp
jae
imul
leave
imul
xchg
push
int3
test
xchg
sub
sub
dec
sbb
dec
cmp
jb
inc
xor
test
sub
repz
lea
insl
ret
add
int
mov
jp
jbe
lahf
rol
mov
ss
add
fcmovnbe
cli
fwait
dec
jns
stc
js
xchg
jbe
cmp
push
scas
stos
or
aas
jo
push
jb
pop
scas
mov
and
jo
jmp
xor
dec
ss
xor
xchg
dec
shrb
mov
lods
scas
gs
pop
jp
loopne
in
test
sub
out
jg
repz
leave
or
pop
mov
dec
xchg
ret
xchg
dec
mov
mov
test
stos
cmp
mov
rcll
mov
or
pop
xchg
test
in
lods
ljmp
ret
adc
movsb
fmul
push
xchg
adc
stos
arpl
bound
call
cmc
xorl
or
call
xchg
mov
fisttps
hlt
cli
add
mov
xchg
inc
lret
icebp
fwait
sarl
test
loop
adc
and
call
pop
mov
cmp
fsubrl
pop
xchg
jl
int
nop
push
fld
push
or
imull
insb
test
je
movsl
adc
jnp
xor
stc
push
loopne
das
cltd
in
dec
in
jnp
jnp
sbb
push
mov
rcrb
sbb
sub
sahf
sbb
hlt
dec
leave
loope
jl
scas
into
jmp
mov
dec
data16
les
add
push
in
sbb
ret
push
cmp
xor
cmp
std
fdivl
aaa
xchg
sbb
xor
add
iret
in
in
mov
xor
sahf
jnp
adc
mov
xor
mov
movsb
xchg
inc
xlat
jb
repnz
sbb
mov
push
xorl
fs
adc
xchg
pop
cvtpi2ps
mov
aad
push
push
movsb
test
cli
ss
cmp
fsts
pop
xlat
adcl
mov
outsb
inc
or
pop
and
add
scas
filds
jne
xor
pop
outsb
xchg
inc
lds
dec
mov
addr16
popa
rcll
shrl
das
dec
dec
out
sub
inc
fisubl
sti
push
push
pop
in
icebp
and
mov
dec
mov
lret
xor
cmp
popa
sti
fidivrs
in
cmpl
push
lret
xchg
mov
icebp
jle
sahf
xchg
scas
xor
cwtl
rcll
out
aaa
lcall
xchg
lret
jno
fucom
les
outsl
push
xor
cmpsl
cmp
dec
cmc
mov
js
push
mov
fadds
faddl
pop
push
leave
mov
sub
pop
repz
push
addb
jnp
mov
insl
xchg
push
test
lahf
scas
call
pop
scas
inc
paddusw
call
jbe
arpl
adc
pop
outsl
bound
sbb
inc
test
pushf
dec
shll
mov
pop
mov
cmpsb
dec
jb
inc
sbb
insl
mov
push
sti
shrb
inc
ror
aad
ret
je
add
ret
out
shl
rcll
sti
loop
and
xchg
in
stos
in
inc
cmp
js
sub
dec
std
or
cmp
rorl
mov
pop
icebp
push
or
lods
popa
je
test
enter
cmp
enter
xor
pop
sarl
jae
adc
sbb
out
xchg
loope
fld
popf
sub
and
test
or
int
adc
push
fstps
fwait
ret
icebp
cmp
jnp
idivl
es
push
outsb
imul
and
pop
add
dec
sub
and
and
push
gs
cmp
jne
test
mov
xlat
mull
push
mov
pop
sbb
pusha
sbb
mov
and
inc
push
mov
adc
scas
push
mov
pop
push
aaa
inc
cmp
cmc
int
shrl
cmp
or
pop
aam
push
in
push
outsl
inc
sub
ss
and
loopne
or
pop
fisttpll
lret
mov
pop
mov
pop
xchg
shl
in
sub
push
lea
and
mov
jmp
ret
sarl
fwait
jl
xchg
push
movsb
xchg
dec
mov
incl
cltd
dec
data16
les
mov
pop
jge
lods
mov
xchg
pop
rcrl
sub
fwait
push
pop
sahf
inc
pop
lods
dec
sbb
stos
bound
cmp
int3
insl
adc
push
push
dec
aad
jle
setge
push
clc
xor
jge
out
aaa
dec
xchg
sub
cld
mov
jecxz
mov
sbb
movsb
xor
xor
rorb
sub
mov
ds
insl
daa
fstl
cmp
adc
jbe
subl
jb
shll
xlat
mov
dec
or
clc
movsl
jns
xor
roll
inc
or
mov
jp,pt
inc
scas
add
aas
push
mov
int
xor
push
sbb
lods
aad
dec
pop
call
and
mov
gs
leave
mov
mov
mov
add
aam
mov
mov
divl
fs
jge
shll
dec
daa
pop
push
mov
cmp
imull
push
ficompl
cltd
stos
add
mov
pusha
pop
test
fidivrs
mov
mov
push
fdivrs
inc
xor
lods
outsb
in
out
pusha
imul
test
adc
sbb
sarb
cs
shl
mov
stc
ds
dec
push
jmp
or
or
cmp
xchg
clc
pushw
mov
test
jmp
rclb
movsl
xor
push
push
xchg
int3
or
je
add
sub
or
pop
dec
test
outsl
dec
add
inc
in
fists
sub
xor
mov
mov
loope
stos
pop
faddp
adc
test
notb
lock
or
sbb
ja
enter
mov
sbb
sub
push
mov
inc
mov
sub
jmp
mov
mov
jno
add
mov
sub
sub
fadds
mov
test
fidivrs
xchg
cmp
push
xchg
iret
in
test
clc
lods
ja
fstps
and
testb
and
inc
adc
cmpsb
cmp
inc
int
arpl
push
clc
adc
fcoms
jp
negb
mov
es
clc
into
adc
into
jmp
outsl
mov
pop
cmp
jno
xchg
sub
push
cli
jl
jno
sub
push
xor
sbb
loop
inc
loop
push
xchg
mov
push
xlat
mov
lods
sub
insb
jo
or
adc
test
je
scas
in
mov
idivb
mov
andl
lahf
ret
sub
fmul
pop
pop
out
xchg
or
mov
loopne
xchg
loope
push
pop
test
and
je
cmpsb
and
test
cmp
lcall
cld
out
dec
jp
ret
push
add
xor
push
xor
js
orb
fs
and
into
sbb
sbb
shrb
outsl
and
jo
out
mov
mov
popa
daa
push
jp
jg
inc
sub
push
inc
dec
shr
imul
fldcw
dec
mov
mov
fisttps
xchg
notl
pop
roll
hlt
imul
aad
push
adc
push
xchg
js
mov
add
in
insl
sbb
scas
addr16
dec
cs
pop
cmp
xchg
divl
pop
cli
pop
inc
call
push
pop
js
stos
inc
jno
pop
bound
addl
negl
ficoml
das
mov
sbbb
lds
fwait
push
or
in
fldt
mov
push
jge
cs
aaa
shrl
call
fildl
add
scas
mov
in
hlt
das
pop
jecxz
ja
mov
movsb
rcrl
movd
sub
xchg
fidivl
jb
push
and
mov
ret
mov
iret
fs
imul
mov
es
out
jl
sbb
pop
inc
sub
xor
in
jmp
stos
in
scas
add
add
xor
icebp
out
test
jns
mov
xchg
pushf
pushf
stc
add
pop
mov
dec
pop
fisttpl
jmp
lods
in
or
or
add
lea
jo
cld
sbb
or
mov
outsl
or
push
sub
jmp
adc
jo
imul
lock
jle
dec
xchg
dec
mov
shr
push
mov
mov
dec
ljmp
sbb
aad
sti
mov
pop
dec
cld
out
push
popf
xor
imul
sbbb
jo
jmp
jecxz
add
cmc
sub
rcrb
and
or
mov
into
sub
dec
mov
push
ds
sbb
dec
fwait
pop
xlat
fstpl
hlt
or
outsb
inc
imul
jmp
enter
jbe
test
push
cmpsb
add
jo
leave
sbb
and
and
pusha
cmpsl
mov
and
mov
das
cmp
roll
fld
xor
sub
push
jle
je
filds
sti
add
jmp
repnz
sub
dec
sahf
dec
out
imul
and
aad
pop
out
es
xor
cmp
ljmp
push
das
jg
xchg
fcoms
stc
jbe
ss
icebp
sbb
xchg
fists
insl
mov
pop
scas
pop
mov
mov
pop
lcall
lock
mov
adc
lcall
sbb
mov
shll
dec
cltd
jno
out
fiaddl
arpl
xor
movsb
aad
iret
fidivl
add
sub
jmp
cltd
insb
sbb
pop
enter
inc
into
ret
pop
icebp
lea
lock
lds
ret
mov
test
imul
dec
push
jecxz
pop
divb
jo
int
adc
aas
ss
adc
pop
inc
mov
aad
jnp
cmp
aas
mov
call
mov
jl
outsl
adcb
adcl
loope
mov
or
sub
xchg
fwait
lods
mov
sti
fimull
lock
fsqrt
decb
and
or
stos
bound
mov
test
sti
push
mov
mov
adcl
stos
jo
push
aad
inc
xor
popf
fsubr
mov
inc
subb
push
cmp
out
mov
std
std
lds
mov
aas
xchg
cmc
jecxz
and
enter
jne
iret
aaa
push
bound
sub
sbb
lock
pop
fists
xlat
int3
mov
jae
out
insb
mov
cmp
sbb
push
and
jno
jb
shll
insb
cld
push
mov
fists
rorl
rcll
aad
daa
clc
adc
pop
add
aas
mov
or
sbb
xchg
mov
or
cmc
sub
mov
pop
push
bound
push
xchg
inc
xchg
fimuls
mov
xlat
inc
xchg
in
push
outsl
pusha
push
loope
negb
sbb
push
popa
cmc
aad
fmull
xor
mov
mov
aam
dec
push
mov
push
inc
xchg
mov
mov
mov
lahf
outsl
sbb
push
fimull
push
imul
jo
insl
cwtl
std
and
pop
call
pop
inc
mov
inc
mov
dec
sub
sahf
aad
stc
js
xchg
dec
and
das
out
shll
dec
mov
ss
popf
in
arpl
les
dec
push
outsb
cld
sarl
mov
push
mov
cmc
clc
aaa
ja
mov
mov
lcall
jle
pop
inc
je
divl
aad
out
sub
pop
xlat
sbb
sub
lods
push
enter
test
movsl
daa
dec
lds
imulb
jb
daa
movsb
inc
push
insb
or
jg
into
pop
fadds
xchg
and
pop
ds
rcrb
mov
pop
jbe
lret
nop
je
sub
push
mov
push
fs
jecxz
cmp
cwtl
cmp
and
push
dec
scas
daa
aaa
hlt
adc
push
mov
out
push
push
outsl
jnp
inc
jmp
std
mov
mov
dec
dec
out
les
sub
ffreep
aas
daa
jecxz
stos
pop
lock
sbb
cwtl
outsl
fisubl
mov
bound
imul
sub
or
out
movl
push
pop
add
push
test
std
xchg
push
mov
sub
dec
push
cmc
lret
inc
mov
test
mov
sub
or
sbb
imul
pop
pop
xlat
sub
adc
xor
enter
mov
les
fimull
xchg
mov
bound
or
add
rcl
fisttps
push
pushf
movsb
adc
cmp
rcr
mov
cmpsb
mov
xchg
push
out
imul
push
push
inc
icebp
or
and
mov
loopne
inc
xor
add
sbbb
add
and
push
jno
pop
call
aad
sahf
cmpsl
insl
mov
cmp
fsubrl
jmp
test
pop
mov
add
pushf
aad
cmc
mov
iret
inc
xchg
mov
lds
inc
or
cltd
loop
push
out
adc
xor
xor
jmp
mov
mull
adcb
shrl
pop
loopne
ficoml
push
movsb
jb
sbb
and
pop
adc
sbb
jae
xchg
into
cmp
sub
inc
mov
jae
repnz
leave
xchg
xchg
or
mov
cmp
dec
lds
sub
fs
xor
data16
push
xchg
outsl
inc
leave
xorb
into
loope
movsb
leave
in
scas
fidivs
mov
fcoml
sbbb
inc
outsl
notb
adc
arpl
inc
or
push
out
pop
sub
nop
xchg
out
dec
xorb
cmp
jmp
aam
into
lea
pop
in
mov
inc
adc
lret
repnz
sbb
inc
and
sub
mov
bound
lcall
cmp
push
out
jmp
push
inc
adc
insw
shlb
inc
lret
out
dec
rcrb
sbb
jae
adc
rorb
movhps
iret
lahf
jnp
cld
adc
movsb
mov
adc
jp
inc
arpl
xor
cli
stos
mov
andb
mov
mov
xchg
sbb
imul
adc
leave
mov
and
stc
add
aam
push
pop
push
dec
xchg
mov
xchg
push
pop
add
addr16
lock
and
call
cmp
xchg
test
movsb
inc
int
fcompl
pop
cmpsb
mov
mov
mov
rclb
or
cmc
mov
int3
sbb
mov
inc
ret
cmp
mov
scas
xchg
inc
and
adcb
or
cmpsl
repnz
and
cmp
adc
out
push
push
jae
jno
movsb
jb
xchg
fldl
leave
orb
inc
mov
hlt
repz
ja,pt
adc
sbb
sahf
xor
inc
arpl
lcall
repz
jl
mov
lock
or
sbb
adc
pusha
popf
test
pop
sub
and
sub
imul
and
xchg
std
fcompp
mov
inc
sub
insl
push
imul
popa
lret
cld
sbb
dec
cmp
pushf
cmp
xchg
bound
hlt
bound
test
aam
adc
mov
stos
dec
mov
push
aad
mov
mov
add
in
jae
inc
mov
sbb
daa
mov
xchg
add
pop
lea
pop
xchg
lret
mov
adc
aad
aad
shll
xchg
das
push
xchg
test
cmpsb
and
xchg
xor
jmp
jno
idiv
jb
stos
pop
sahf
jl
fnstenv
adc
es
dec
inc
xor
inc
out
push
add
add
aam
out
xor
punpckldq
xchg
movsb
idivl
jp
fsubs
mov
jp
pop
andl
jecxz
dec
cmp
leave
mov
addr16
jae
jl
out
inc
test
jo
ds
mov
fs
mov
pop
nop
imul
adc
hlt
repz
xchg
adc
inc
xor
add
mulb
lods
push
mov
daa
jg
adc
xor
stos
jp
adc
adc
mov
add
movsb
cmpsb
mov
decl
ret
idiv
xchg
jno
jecxz
ds
push
mov
sbb
sbb
mov
orb
dec
insb
sbb
mov
mov
ror
xchg
add
pop
mov
inc
insb
pop
icebp
test
fnsave
aaa
cwtl
add
fisubrs
jmp
sahf
shlb
das
das
jmp
pop
pop
or
sbb
push
cmpsb
fwait
cmp
pop
test
xchg
pushf
aaa
addl
cli
xchg
loop
mov
call
sbbb
cmp
xchg
test
or
mov
xor
and
call
mov
pop
gs
lock
nop
movsb
mov
sti
insb
push
and
scas
movsl
iret
fstpt
push
pop
xor
cmp
repnz
sub
popa
push
int
ret
fs
mov
loope
sbb
inc
dec
jle
cmp
sbb
fsts
adcl
push
idivl
or
lods
mov
mov
shlb
aam
in
push
pop
out
shll
dec
lods
cmpsl
and
fldl
hlt
jecxz
std
push
jb
ljmp
xor
les
cmp
addr16
addr16
sub
mov
fildll
adc
hlt
imul
xor
out
push
scas
and
cmp
jge
and
mov
xor
jp
xchg
inc
pushf
andb
pop
repnz
bound
rclb
xchg
aaa
jmp
loope
push
adc
jne
mov
or
mov
mov
stc
test
aam
and
mov
cmpsl
test
hlt
push
lods
lahf
sbb
adc
jbe
jge
cmc
ss
es
lret
repnz
or
dec
or
lock
push
mov
gs
pop
fwait
cmp
push
inc
add
fnsave
jl
jb
xchg
aad
rcl
outsb
repz
jne
pop
and
cmpsb
ret
sbb
inc
mov
add
xchg
xor
int
fneni(8087
sbb
xchg
mov
inc
xchg
sub
dec
pop
push
pop
out
lea
lea
inc
into
addr16
lods
mov
mov
pop
fstps
fwait
sub
flds
mov
or
ficompl
shll
dec
push
push
mov
cs
idivl
pop
fwait
lea
mov
and
mov
xor
xchg
adc
icebp
and
push
stos
dec
adc
and
mov
jo
not
fucomip
push
imul
fs
pop
and
je
pop
repnz
les
enter
rol
idiv
xor
pop
cli
mov
mov
jg
or
mov
shll
aas
mov
sub
les
es
cmp
jmp
fisubrl
inc
neg
push
mov
mov
xchg
lock
iret
cltd
lahf
sbb
enter
pop
jae
xchg
in
cmp
daa
les
xchg
mov
out
xlat
or
in
bswap
loop
push
xor
or
mov
add
jle
les
inc
jb
movsl
test
pop
jp
push
push
xchg
mov
test
xchg
sbb
fwait
lret
dec
mov
ret
lock
sarb
fidivrs
popf
or
jno
or
rclb
es
mov
inc
cmp
rorb
jo
xor
jbe
stc
nop
and
cmc
test
imul
and
pop
dec
mov
mov
pop
rcrb
leave
lods
outsb
lahf
ffreep
inc
push
mov
insb
mov
nop
daa
mov
addl
cmp
lret
jmp
out
std
mov
inc
addl
inc
or
lcall
cs
shll
aas
push
push
outsl
and
test
sti
nop
lret
call
lds
dec
inc
mov
ss
add
or
cld
in
test
nop
and
std
cmp
dec
lea
stos
pop
cli
push
fisubrl
mov
jbe
adc
and
movsl
xchg
push
scas
adc
push
sub
jbe
sub
notl
insl
out
jp
add
push
push
cmp
stos
mov
sub
jns
idiv
xor
mov
daa
sti
aas
fistl
mov
nop
scas
imul
add
ljmp
insb
mov
jae
lret
inc
repz
inc
lds
imul
test
sub
add
andl
fimull
sub
xchg
ret
xchg
xor
pusha
jnp
dec
sub
push
pop
and
gs
adc
cmpl
push
mov
stc
mov
jno
data16
lahf
xor
in
std
in
or
pop
ss
mov
or
fisttpl
bound
adc
adc
loop
popa
cmpb
mov
pop
mov
add
in
inc
imul
cmp
xchg
fcomp
sub
mov
mov
cmpsb
out
sub
inc
xchg
or
sarb
xchg
add
dec
jg
cmp
negb
mov
imull
cmpsb
cmpsl
and
dec
jmp
inc
arpl
mov
iret
addr16
mov
sbb
andb
ds
pusha
lret
or
cmp
repz
popa
movsl
lock
or
mov
mov
mov
mov
pop
into
outsl
jecxz
cltd
cmpsb
ret
hlt
cmp
or
sahf
fimuls
sub
push
sbb
and
aas
ret
push
fcomps
loope
out
in
aaa
lcall
xchg
pop
pop
push
into
mov
inc
addr16
andl
lahf
test
push
pop
sarl
sbb
mov
adc
add
jmp
xchg
xchg
sbb
in
xlat
aam
or
xor
rclb
out
inc
adcl
pop
xchg
fimuls
jp
inc
mov
rclb
or
mov
cltd
mov
not
in
sbb
dec
push
sub
lds
and
imul
enter
rolb
xor
fs
sahf
inc
fcomps
mov
fidivs
cmp
or
andl
mov
popf
cld
mov
dec
fdivrs
call
icebp
add
mov
mov
pop
adc
ljmp
leave
adc
pop
test
mov
jno
fwait
or
push
mov
nop
sub
clc
mov
enter
sub
add
jns
lret
or
push
fstps
movsl
je
enter
jmp
dec
cmp
cmp
lock
je
xlat
rol
pop
xchg
dec
mov
mov
in
in
mov
ds
into
lret
in
aam
out
xchg
sti
inc
in
out
sbb
xchg
xor
aam
pop
popf
mov
cs
daa
adc
imul
int
pop
mov
out
sti
push
push
clc
in
sbb
fdivs
mov
sub
loope
cmp
lock
lock
fwait
jne
inc
jae
inc
orl
arpl
mov
mov
scas
and
pop
mov
dec
pop
cmp
jl
enter
xchg
lea
ficomps
out
sti
or
sub
xor
xchg
outsb
stc
iret
frndint
stos
adc
popa
lcall
pushf
jne
mov
movsl
imul
mov
sbb
adc
sub
sar
mov
xchg
adc
enter
lods
pop
sbb
es
pushf
cmpsb
dec
and
and
sub
adcl
fdivp
fisubs
jge
test
aad
xor
cmp
stc
mov
dec
mov
mov
rolb
aam
daa
add
ljmp
lahf
arpl
pop
mov
jae
pop
mov
cmp
fadd
add
icebp
lea
mov
mov
adc
mov
adc
dec
out
pushf
sub
nop
shlb
js
in
pop
jecxz
xor
or
or
js
or
inc
ret
push
leave
mov
push
scas
aas
sub
data16
xor
cmp
or
lret
lods
outsb
and
pop
jno
and
int
cmp
das
xor
addr16
jp
int3
sbb
mov
add
pop
shll
lret
cmp
mov
hlt
mov
xor
dec
out
push
das
nop
mov
or
ljmp
in
cmp
xor
repz
ss
adc
out
inc
sbb
lcall
imull
dec
icebp
aaa
lcall
xor
stos
das
mov
push
sbb
cltd
cmp
ljmp
cmpsb
jbe
decb
sub
pushf
sub
add
aas
jbe
fcmovnu
add
ret
aam
xor
mov
mov
ljmpw
out
jge
mov
xor
jo
pop
dec
pop
mov
cmpsl
push
mov
mov
sbb
into
lods
push
mov
push
icebp
add
inc
mov
into
imul
lret
or
sub
mov
in
sub
hlt
mov
sbb
sub
xlat
std
scas
sarb
sub
imul
pop
cwtl
mov
jb
scas
in
addb
cmp
aad
cs
push
sub
mov
dec
mov
sahf
mov
out
push
lcall
pop
imul
pop
add
into
addr16
pop
movsl
rclb
push
and
cwtl
dec
jno
rorl
scas
pop
mov
add
push
cwtl
js
jg
push
push
ja
cs
repnz
enter
aad
sti
xchg
popa
rep
fadd
test
sub
xchg
leave
mov
je
repz
add
testl
cmpsl
inc
das
pop
mov
sbb
sahf
mov
popf
dec
add
cmpb
sti
cmp
and
loop
dec
push
test
xchg
and
aas
lock
je
js
add
jne
xchg
enter
enter
fistpl
mov
push
sub
add
movsl
mov
movsb
sbb
out
xchg
cli
jbe
push
ret
rorb
mov
mov
push
dec
fs
in
jnp
pop
mov
pop
aad
adc
mov
popf
jno
dec
gs
jg
pop
xchg
repz
stc
call
mov
mov
pusha
push
test
add
cs
jle
int3
test
cmp
mov
imul
add
add
dec
data16
mov
jl
cmp
pop
lds
imul
test
sbb
pop
cld
rcrl
jge
and
int
cmp
mov
insb
shll
mov
insl
movb
mov
test
sub
xchg
adc
xchg
gs
pop
and
and
xor
add
das
cmp
dec
popa
mov
lcall
shlb
loop
sahf
xchg
xchg
lret
sub
inc
adc
jo
sti
stos
mov
movsb
or
sub
pop
jp
into
outsb
jns
xchg
js
popa
inc
pop
mov
movsb
jns
mov
or
add
adc
xor
sub
and
adc
hlt
jnp
jg
mov
pop
pop
mov
mov
leave
enter
jns,pn
sbb
push
jbe
push
or
sub
jecxz
and
xchg
and
sbbl
sbb
add
out
imul
mov
stc
mov
cli
ss
push
repz
dec
add
mov
stos
sub
sbb
imul
leave
xor
lods
xchg
cmp
and
stc
mov
and
ret
dec
loope
push
dec
mov
out
cmc
sub
test
or
xor
test
jbe,pt
insl
mov
popa
pop
xchg
pop
lods
cmc
xor
js
sahf
in
gs
pop
dec
push
sahf
je
or
push
adc
inc
scas
into
outsl
adc
cmp
lods
cmc
xor
push
mov
movsb
scas
dec
hlt
out
adc
orb
sti
sub
and
ljmp
xchg
sub
jg
jmp
mov
fnsave
cmp
sbb
lahf
out
repz
jle
stos
sub
sbb
ja
push
mov
cmp
aas
test
loopne
sysenter
in
sbbb
or
lcall
nop
js
mov
jge
cmpsl
xor
ficomps
xchg
adc
xor
jae
stc
cmp
sub
lods
jmp
and
or
cmc
in
fistl
scas
pop
scas
sub
cld
outsl
pop
sbb
jge
add
pushl
jno
lahf
xor
lcall
xchg
or
fs
dec
mov
test
pushf
push
push
stos
pop
aam
add
mov
push
fistpl
jnp,pt
pop
or
push
or
bound
vpcmpeqw
xchg
cmp
movsl
add
jl
and
push
adc
xorb
repnz
xchg
out
push
fistpll
lret
push
or
cmp
lods
stos
fistl
shll
andl
mov
sbb
hlt
arpl
stc
es
fistps
push
push
scas
in
push
fldenv
jmp
mov
xor
inc
aad
outsb
sbb
std
pop
pop
fwait
xor
out
in
and
push
pusha
jmp
push
fcmovu
jge
stc
sbb
mov
fldcw
hlt
sbb
mov
mov
cld
mov
xor
or
ljmp
xor
ret
out
dec
cmp
jle
into
scas
idivl
sub
jle
pop
dec
inc
and
and
push
das
lret
minps
and
inc
jl
daa
pop
lods
mov
inc
mov
cmp
sub
adcl
mov
xor
adc
js
pop
jo
pop
popf
jl
fldl
sbb
xchg
mov
int3
xchg
dec
push
xor
cmp
ja
icebp
mov
addl
fstpt
mov
daa
dec
push
jae
mov
mov
addb
jl
pop
lret
pop
loopne
or
lret
cs
push
inc
mov
xor
cmc
cmp
inc
inc
loopne
test
adc
sub
inc
xor
and
rol
jnp
xor
push
mov
out
adc
daa
pop
fcmove
ljmp
jp
cmp
inc
fmull
rolb
bound
mov
clc
out
idivl
xor
jae
int
xor
dec
pop
mov
insb
adc
fcomps
clc
dec
pop
cmp
cli
in
jge
or
sub
xor
jmp
daa
dec
mov
dec
cld
mov
push
push
cmp
mov
pop
pop
cmp
cmpsl
inc
and
in
and
sbb
ficoml
jno
mov
shl
test
aas
sbb
cmpsb
loopne
mov
sub
ljmp
lret
cmpsl
mov
clc
ljmp
xchg
push
sbb
out
fcomps
lods
insb
stc
mov
js
rcrl
lods
outsl
mov
cmpl
in
pusha
pop
pop
imul
popf
divl
stc
stc
mov
sub
sub
xlat
adc
xor
cmp
inc
pushf
xor
xor
jmp
mov
movsb
lods
sub
xchg
out
gs
lods
cmp
jle
mov
aam
inc
out
addr16
add
shll
lock
dec
push
sbb
mov
outsl
aas
insl
lods
out
inc
adc
cld
jecxz
jo
sbb
pusha
xchg
mov
lock
mov
pushf
daa
push
push
push
or
add
cmpl
cltd
jle
push
xor
divl
mov
jle,pt
iret
popa
fstps
mov
lods
ds
sarb
rcll
stos
rclb
push
popa
hlt
inc
jns
dec
lds
mov
in
xchg
jp
in
inc
ja
mov
mov
jno
cmp
adc
jg
pop
scas
add
mov
mov
rclb
hlt
sbb
scas
xlat
xor
jo
sbb
jge
or
jo
and
rclb
loop
imul
add
dec
xor
xor
xor
or
mov
sbb
out
fldt
adc
jecxz
nop
jecxz
pop
sub
and
cmpb
cmpsb
ss
add
push
ret
mov
pop
rorl
mov
and
jo
mov
lahf
pusha
imul
mov
outsl
test
adc
mov
cmc
adc
lret
and
out
push
inc
sub
jle
jb
movsb
xor
jns
mov
mov
xchg
dec
xor
inc
sbb
cs
pop
pop
outsb
inc
or
pop
loope
mov
outsb
adc
stos
int
je
aas
xlat
dec
cmp
add
jno
sub
jnp
movsb
lahf
shl
inc
shll
fistpl
fcmovnbe
dec
daa
jbe
imul
addl
mov
push
dec
in
es
dec
jno
sbb
xor
pusha
gs
pop
sbb
stc
imul
sbb
test
push
ljmp
cwtl
xchg
cmp
in
mov
or
lahf
mov
sub
xor
xor
push
les
in
sub
inc
ret
xchg
sbb
mov
enter
push
lea
cmpsl
es
scas
out
aaa
subl
adc
test
lock
sbb
sbb
push
cmpsl
dec
ret
xchg
jge
fwait
out
jb
jp
bnd
jge
xchg
inc
and
iret
ret
adc
mov
sub
or
mov
and
xor
pop
into
sbb
xor
and
iret
ret
fmulp
add
jbe
xchg
mov
mov
add
pop
test
lret
pop
cmp
icebp
cmpsb
mov
cmpsb
cmp
ret
inc
nop
or
xor
fwait
jo
xchg
xor
inc
dec
shrl
pop
inc
pop
rcrl
lcall
push
lea
in
flds
cmp
mov
cli
xchg
or
inc
out
sub
jl
mov
inc
test
fsubs
jmp
cmpsl
mov
xlat
push
rclb
ret
adc
jp
jo
xor
mov
mov
icebp
inc
mov
loope
call
rclb
jnp
inc
jp
pop
push
mov
add
enter
pop
idiv
jbe
sub
add
dec
and
pop
outsb
cmpb
repnz
pop
mov
push
mov
mov
jns
pop
sub
out
sahf
inc
and
adc
cmp
adc
and
pop
cmp
imul
gs
fistpll
adc
das
roll
jnp
cmp
xchg
movsb
push
in
pop
xor
orl
jp
in
and
cli
lea
jnp
fs
arpl
jbe
pop
push
add
int3
ja
mov
push
xlat
mov
bound
fbstp
pop
xor
sbb
stos
in
xchg
movsb
in
mov
xchg
sbb
pop
jp
or
add
add
mov
je
xor
sbb
dec
cmpsl
std
ja
xlat
dec
mov
ljmp
int3
mov
fs
lcall
ljmp
fisubl
adc
pop
dec
xchg
sub
xchg
jecxz
push
xchg
pop
mov
sub
pop
fucomi
jae
sub
les
cmp
rclb
adc
xor
stos
xchg
stos
jbe
loope
sbb
pop
stos
fnstenv
sbb
mov
imul
dec
sbb
test
push
and
repz
jnp
sub
cmp
xchg
and
das
xor
mov
and
jp
fnsave
jbe
xchg
lods
shr
out
ljmp
icebp
dec
jae
inc
shrb
cmpsl
mov
mov
lods
es
fldt
cmp
jg
inc
js
dec
adc
pop
pop
push
and
inc
rclb
int3
daa
and
enter
dec
insl
xchg
mov
xchg
jb
xor
add
fld
into
das
sub
pusha
fcomip
mov
and
xchg
pop
push
movsb
adc
and
into
cli
xchg
mov
sbb
pop
cmc
pop
xchg
xchg
sub
or
pop
repz
cmp
iret
call
jge
cmp
lret
jle
ss
imul
les
clc
andb
mov
in
xchg
int3
sti
xor
xchg
xchg
movsl
jno
roll
push
dec
test
adc
jle
jecxz
jp
add
xor
mov
adc
sub
cwtl
inc
cmc
ror
xor
push
addr16
jnp
xor
mov
sbb
pop
jno
je
cli
jecxz
mov
cmp
or
jb
das
shll
xchg
fbld
inc
aad
repnz
aad
rcrb
jl
sbb
sbb
orl
xchg
jp
xor
mov
push
out
dec
lock
imul
insb
dec
orl
leave
movb
test
cwtl
in
pop
push
jge
loopne
jo
insl
clc
shl
and
and
sub
and
xchg
shl
nop
sbb
mov
push
xchg
std
cmp
inc
mov
jnp
insb
push
mov
and
stos
dec
addl
hlt
testl
mov
or
mov
mull
xor
and
int3
cld
divl
dec
or
dec
stos
mov
push
push
xor
cli
pop
loope
pushf
mov
pop
mov
iret
ficoms
jns
cmp
fcoml
popa
pusha
ss
mov
shr
scas
bound
stos
push
arpl
sub
sbb
insl
outsl
fwait
lds
stos
sbb
mov
outsl
jl
sbb
test
fnstcw
mov
loope
dec
cwtl
or
insl
pop
xchg
cmp
cmp
mov
push
jne
pop
xor
loope
cmp
xchg
push
data16
sub
xchg
ljmp
jp
notl
das
inc
jl
daa
fidivrs
cmp
addr16
sub
out
dec
sub
cmp
gs
push
cmp
sub
inc
imul
inc
aam
pop
mov
out
idivl
sahf
cwtl
adc
enter
movsb
adc
imul
pop
hlt
sbb
cmpsb
xor
fimull
xchg
cmc
sar
jle
aas
cmp
repnz
push
xchg
or
lret
movl
lods
into
push
seto
inc
arpl
xor
hlt
pop
cs
jle
mov
mov
inc
jge
xchg
aaa
sub
out
mov
stc
hlt
aam
dec
xchg
ret
pop
and
sub
cmpsb
andl
shl
inc
push
sbb
mov
test
call
inc
and
movsb
ret
cmp
push
jl
pop
cmp
test
ljmp
fwait
mov
inc
shll
ds
popf
daa
ret
xor
jo
andb
data16
mov
push
mov
aam
adc
loope
icebp
outsl
inc
adc
dec
out
neg
fsub
js
inc
and
sub
mov
rorl
test
lods
aad
sub
adc
jp
outsb
iret
scas
cmp
push
shrl
mov
lcall
aam
std
jb
mov
std
mov
sub
jb
mov
inc
xchg
test
mov
adc
xchg
sbb
sahf
or
add
mov
cmpsl
fisubs
movsl
xor
mov
insb
jle
je
cmpsl
dec
mov
cmp
push
xchg
stos
fs
and
inc
aas
pusha
cmp
movsb
pushf
int
xchg
scas
jo
repnz
pop
adc
movsb
out
xchg
push
push
shl
push
sbb
pop
test
pop
int
push
pop
xchg
bound
xchg
add
mov
call
inc
dec
cmp
dec
lret
fldcw
push
push
mov
stc
fists
inc
mov
jbe
aam
adc
ds
lret
xchg
and
mov
add
and
rcrb
inc
add
mov
jbe
sbb
movsl
clc
addl
pushf
incl
fcmovbe
adc
fwait
in
stc
dec
dec
push
pop
inc
lret
lea
and
cmpsb
je
adc
aam
pop
xor
jns
dec
clc
test
xchg
push
lcall
es
and
out
cld
je
xchg
bound
sbb
lcall
push
lahf
leave
popf
jmp
mov
jle
mov
pop
fcompl
push
testl
fs
vfrczps
xchg
mov
or
pop
cmpsl
ljmp
sbb
loop
pop
and
cld
pop
dec
push
insb
in
icebp
cmp
out
pop
out
jp
mov
sub
adc
or
mov
lea
out
sbb
cmpsb
inc
jg
lea
mov
test
test
es
scas
clc
cmp
or
jmp
pop
bound
inc
lock
aas
fwait
xchg
mov
push
lcall
je
lret
jmp
mov
mov
outsl
stc
cmp
inc
pop
addr16
push
pop
enter
mov
loope
in
mul
xor
cs
push
sbb
hlt
cmp
cmpsb
push
sub
lahf
cmpsb
jnp
aam
cmp
movsb
xchg
repz
sbb
addr16
inc
mov
scas
mov
mov
aad
adc
gs
repnz
imul
jne
inc
into
mov
pushf
mov
jl
mov
fimuls
push
and
push
ret
sub
loope
mov
dec
rcr
jns
push
pop
inc
sub
sub
ret
dec
popa
xor
in
ds
lret
pushf
ret
jmp
je
nop
push
pop
mov
aad
xor
mov
imul
add
mov
jae
mov
out
bound
cmp
cwtl
sbb
and
mov
mov
push
or
and
xor
lret
imul
xor
or
push
mov
pop
fs
or
cld
add
sbb
mov
dec
mov
mov
imul
xchg
into
movsb
cmp
insl
add
mov
add
inc
dec
mov
in
adc
daa
xor
xor
neg
jb
cmc
ror
cmp
jmp
mov
filds
mov
cwtl
xchg
fbstp
push
xchg
jne
ja
aad
sub
rclb
loope
cmpsl
mov
sbb
inc
aad
inc
push
es
bound
packuswb
sub
sbbb
or
mov
jae
rcr
or
out
or
into
dec
jb
mov
push
xchg
mov
add
sbb
fmuls
xor
inc
icebp
and
mov
lea
mov
imul
cmp
lret
das
inc
lret
jbe
inc
sbb
jmp
les
shlb
sub
mov
jp
imul
mov
sub
mov
inc
or
adc
push
cmp
pop
xchg
xchg
test
int
cmc
sub
sub
hlt
xor
sbb
jmp
and
arpl
shrl
dec
jg
and
or
les
out
and
pop
pop
fadd
sti
xchg
pop
push
mov
jb
mov
adcb
enter
orb
data16
jg
loop
push
pop
cltd
daa
sbb
sbb
dec
stos
outsb
xchg
imul
lds
mov
mov
stc
ja
inc
inc
fildll
adc
xrelease
or
push
fbld
pop
jl
mov
fnstcw
mov
pop
inc
popf
pop
mov
xor
fstpt
sbb
xchg
add
mov
mov
ljmp
cmpsl
sbb
adc
mov
int3
sub
insb
into
sbb
jl
stc
outsl
mov
cmpb
sarb
call
fcomip
hlt
xor
push
dec
push
mov
jle
jg
in
mov
push
and
mov
sbb
xor
sbb
xchg
add
dec
daa
cmp
dec
aas
jb
cmp
push
lods
idivb
and
mov
out
sbb
push
inc
js
add
ss
pop
jnp
leave
xor
loopne
pop
loope
lret
adc
jge
xchg
cmp
std
xor
clc
ret
mov
dec
push
xlat
mov
sub
sub
out
pusha
repz
scas
popf
mov
xor
int
jo
cs
ror
in
and
jb
stos
inc
sub
inc
xchg
shlb
adc
pushf
rep
push
jae
ret
shlb
icebp
sub
loop
pop
xor
adc
push
push
sbbb
adc
leave
flds
xchg
imul
jge
mov
sbbl
mov
js
mov
fisubl
ljmp
add
loope
adc
es
mov
add
xlat
scas
int
aas
lahf
pop
inc
xchg
data16
or
add
rcrb
cli
xchg
xor
fisubs
dec
fisubl
add
out
fchs
stc
js
gs
sbbl
jl
pop
sub
mov
pop
jne
in
jno
push
sahf
jno
adc
scas
loop
movsl
mov
cmp
sbb
daa
push
push
xlat
xchg
aaa
testb
fsubrs
out
pop
xchg
inc
mov
push
sub
cmp
cmp
jo
imul
into
movsb
mov
sbb
mov
fldl
inc
adc
lcall
mov
xchg
and
xor
lds
sarl
lea
subb
das
shll
dec
dec
pop
jb
or
lahf
dec
ja
xchg
repnz
xchg
outsl
imul
pushf
xchg
jb
xchg
push
jmp
adc
or
jne
jecxz
aad
inc
pop
pusha
lods
ds
cs
push
fnstenv
sbb
lret
lods
sbb
out
test
clc
or
jb
mov
inc
popa
cli
test
in
repz
lret
aam
stos
arpl
inc
andb
inc
sbb
mov
mov
cmp
into
mov
aam
cld
pushf
es
push
cli
dec
std
je
in
sbb
ja
push
movsl
pop
mov
pop
pop
xchg
sub
adc
mov
pop
sbb
into
ss
jno
rorb
jbe
mulb
add
std
stos
test
and
cld
cmpsl
mov
sahf
mov
es
cmp
cmp
lods
movsb
sub
out
aas
cmpsb
xor
cmpsl
inc
and
mov
arpl
sbb
pop
ror
inc
js
xchg
out
xchg
pop
or
xchg
leave
bound
cmp
jbe
cli
nop
arpl
mov
int
lahf
mov
fstpl
loopne
inc
xor
mov
add
ret
adc
mov
rcrl
cltd
cmpsb
dec
fmull
jno
mov
fdivs
and
mov
stos
add
ret
jo
dec
adc
mov
imul
divb
or
fsub
xchg
push
push
test
jmp
and
ljmp
fnsave
movsb
push
jae
repnz
xchg
xor
in
ficoml
xor
push
sub
lods
jg
mulb
stos
xor
xor
ror
cmpl
cvttps2pi
dec
mov
add
dec
cmp
xor
mov
mov
and
sbb
cmp
dec
movsl
lcall
subb
rclb
repnz
push
push
or
xor
test
cld
mov
mov
daa
and
lret
sbb
fimull
lea
clc
adc
scas
testb
xor
mov
scas
jbe
mov
jns
adc
dec
mov
mov
lcall
dec
jge
icebp
pop
rolb
xchg
into
loope
icebp
and
mov
lods
sbb
or
xchg
xchg
mov
scas
out
in
sti
test
mov
loope
sahf
sbb
jl
or
stos
icebp
insl
push
mov
and
insb
jns
lock
push
pop
pmulhw
std
sub
out
xchg
push
out
rcrl
fistps
sbb
dec
fisubl
mov
enter
lods
mov
leave
adc
sahf
pop
lret
jle
imul
popf
ret
setns
mov
sub
and
sub
sub
xchg
xor
and
in
out
and
and
push
sub
fiaddl
sub
mov
in
xor
aam
or
adc
add
xchg
ljmp
mov
imul
jge
xchg
cltd
push
and
insl
dec
les
jbe
sub
clc
es
fildll
popf
aam
loop
out
mov
adc
in
es
mov
adc
js
cmp
dec
mov
movsl
pushf
aaa
xor
orb
call
fcomp
into
popa
fldl
pop
inc
push
imul
sar
push
rorb
fiaddl
and
mov
outsl
push
fidivs
cmp
adc
in
aaa
xchg
xlat
and
les
sub
jg
mov
push
loope
imul
fdiv
shrb
cmpsb
stc
popa
add
rorl
cmpsl
adc
pop
add
dec
ja
stc
dec
jo
in
pop
imull
pop
sub
imul
dec
sbb
cmp
jno
jmp
push
test
stos
cmc
cmpsb
mov
mov
lret
inc
es
sarb
adc
loop
arpl
jo
pop
pusha
imul
push
sub
or
shrl
xchg
lret
in
mov
test
inc
je
in
shlb
lods
or
push
xor
jecxz
fldenv
xchg
scas
sub
jge
xor
stos
punpckhbw
or
inc
mov
adc
sub
jae
dec
cwtl
xchg
adc
lock
pop
lock
cmp
pop
and
adc
js
fldenv
dec
sahf
mov
scas
leave
add
pop
mull
adc
insb
xchg
push
adc
sub
adc
sti
int
pop
in
daa
jl
xor
aam
inc
push
jne
into
dec
and
aas
and
cmp
bound
dec
and
push
jg
out
lret
mov
iret
out
push
aas
ret
and
shrb
or
loopne
leave
lret
loopne
sub
bnd
pop
mov
popa
iret
and
or
aaa
mov
aas
cmp
xor
mov
int3
mov
dec
xchg
and
das
or
add
fnstenv
ja
loopne
sub
enter
je
repz
lret
add
xor
mov
inc
xchg
and
sub
sbb
sti
pushf
inc
xchg
aas
xchg
adc
cs
clc
pop
in
call
lods
cmp
dec
in
dec
and
or
xchg
jb
push
adc
mov
and
pop
loop
vcvtsi2ss
pushf
xchg
cwtl
mov
movsb
call
adc
adc
lret
inc
cld
movsb
insl
rorb
test
mov
cld
inc
sti
icebp
or
ret
frstor
adc
out
mov
dec
mov
push
sub
and
lods
cs
fnsave
adc
std
bound
dec
cmpsl
fmull
dec
stos
and
scas
mov
dec
mov
stos
adcb
jbe
jge
aaa
cld
out
cmpsl
dec
sbb
dec
push
test
dec
lcall
mov
pop
aam
shll
sbb
mov
lahf
sub
dec
pushf
nop
insl
cmpsb
rcl
mov
or
bound
adc
pop
ret
jnp
inc
insb
dec
ds
cltd
pop
std
cwtl
es
into
push
cmpb
xchg
stos
sahf
out
sbb
inc
and
aas
mov
xor
sub
jne
cmp
les
jae
mov
inc
or
mov
dec
add
add
ja
das
insb
jmp
in
push
rclb
jae
pushf
outsb
mov
mov
popf
adc
xor
shll
mov
test
pop
add
pusha
inc
sbb
rorl
stc
xchg
ds
sahf
mov
cmovle
mov
sbb
loope
inc
or
add
das
xchg
popa
lahf
sub
jb
mov
lds
mov
lret
push
loop
out
int3
jbe
addr16
out
mov
mov
cmp
enter
es
pop
int
push
sbb
aad
cld
inc
test
mov
jecxz
les
push
dec
leave
mov
prefetchw
or
xchg
xor
js
or
lret
push
dec
push
cmp
in
pusha
int3
movsb
inc
push
dec
cmp
rcl
out
or
cmp
pop
ret
incb
popa
jecxz
xor
sbb
mov
pop
les
in
popa
imul
push
push
sub
sbb
scas
mov
push
mov
int
shl
xchg
sub
nop
jns
cwtl
pop
iret
dec
stc
xchg
push
dec
xchg
lea
insb
push
push
mov
mov
fistps
mov
pop
mov
mov
sbb
mov
jmp
in
dec
ror
sub
jge
movsl
jbe
add
out
sahf
int
or
rorb
jmp
arpl
pop
xorb
adc
adc
mov
sub
cmp
lock
mov
sbb
hlt
aaa
cltd
and
mov
or
xor
ja
mov
arpl
mov
mov
add
lret
dec
ficomps
ja
fs
mov
cmc
movsl
jl
or
adc
adc
push
in
dec
imul
jns
roll
mov
arpl
cmp
ficoms
and
xchg
fistl
lret
enter
pop
in
fsubl
fnstsw
pop
xor
mov
movb
ds
lods
xlat
jle
popf
rorl
adc
fstpl
cmpb
repnz
push
std
mov
and
jge
stos
xchg
outsl
outsl
in
jne
push
jmp
push
arpl
fwait
cld
push
xchg
sub
jnp
imul
mov
mov
movsb
adcl
jno
or
mov
fdiv
cmp
movsb
inc
add
push
push
insb
stos
in
xchg
push
mov
jno
ret
sbb
pop
push
outsl
push
imul
enter
cmc
pop
sub
idivb
stos
or
arpl
mulb
sbb
mov
inc
jmp
inc
pushf
pop
or
cmp
mov
jl
sub
jg,pt
mov
aas
cmp
mov
andb
pop
xor
test
push
lahf
jae
push
popa
gs
pop
inc
jae
aas
outsl
punpcklbw
cltd
sbb
leave
cltd
movsb
movsb
aaa
push
xchg
sub
adc
cmp
xchg
cmp
jne
cmpsb
dec
mov
dec
les
inc
fildll
pusha
and
orb
adc
test
fdivrl
cmpsl
divb
pop
loopne
mov
push
int3
negb
lret
mov
outsl
sbb
outsb
dec
cmp
and
clc
ja
pusha
xlat
add
mov
imul
ficompl
pop
sub
pop
dec
xchg
dec
movsl
cmp
dec
shrb
pushf
cmpsl
jg
mov
movsl
mov
aas
push
icebp
dec
lret
daa
jbe
lahf
jns
or
mov
icebp
adc
or
int
cmp
cmp
mov
jmp
jno
cmp
xchg
pop
clc
push
pop
out
xor
cmpsb
into
fiadds
and
push
inc
loop
cmp
xlat
sbb
call
cld
inc
ret
adc
js
daa
daa
mov
mov
push
adc
or
cmp
sbbl
aad
adc
add
mov
fsincos
lret
scas
mov
cld
call
pop
loopne
adc
pop
jno
adc
sbb
or
cmp
popf
ss
sahf
pushf
dec
sbb
dec
pop
dec
cmpsb
movsl
jno
stos
cmc
mov
inc
pop
fwait
stc
mov
lea
xchg
shlb
jns
pusha
pop
in
movsl
das
in
jno
popa
or
pusha
mov
lods
jl
les
and
sub
shll
ds
fadds
addb
aaa
clc
cmc
scas
xchg
dec
call
out
mov
jecxz
popf
sarb
iret
inc
inc
mov
mov
call
inc
inc
cld
ljmp
add
dec
rcrb
push
jecxz
bound
sbb
or
enter
dec
mov
xchg
inc
mov
xchg
mov
arpl
fcomps
cmp
ds
daa
jns
in
xor
in
xor
jle
lods
sub
add
jge
jb
sub
xorb
mov
bound
or
imulb
push
roll
sub
arpl
mov
js
subl
or
in
nop
test
mov
stos
cmp
lds
rorl
mov
arpl
sub
outsl
push
add
pop
popa
pop
mov
and
mov
xchg
jnp
loop
or
in
imul
das
xor
add
inc
movsb
lods
or
mov
pop
and
add
rcrl
js
mov
int3
cli
jecxz
insb
pop
mov
push
cmp
mov
sbb
sub
fisubs
scas
lods
or
inc
mov
es
inc
orl
ret
lret
jmp
movsb
cmp
cmp
xchg
pop
lds
hlt
dec
and
sbb
fs
dec
xchg
dec
push
push
pop
aaa
std
sub
cmc
leave
xorb
sahf
scas
divb
stc
inc
mull
pushf
pushf
sub
adc
mov
jle
add
mov
fwait
add
stos
repz
or
scas
jg
ret
pop
or
mov
aad
popf
xchg
xchg
nop
loope
adc
push
shrb
loop
lahf
iret
imul
sub
mov
push
rclb
mov
mov
push
ja
ds
cmc
mov
mov
fabs
or
out
scas
xor
in
pusha
or
rorl
mov
testl
pop
and
and
fs
mov
pop
push
in
cmp
push
into
lea
mov
mov
jnp
lret
inc
std
inc
aas
insl
fcoms
les
push
adc
mov
xor
aad
loop
sbb
shlb
adc
frstor
dec
xor
movsl
adc
or
push
out
cmp
lock
lret
lods
fprem1
outsl
xor
icebp
push
inc
cmp
scas
int
jo
sub
add
sub
inc
movsb
and
xor
push
enter
inc
arpl
sar
je
pop
mov
or
lea
pop
cmp
pushf
cld
out
out
mov
pushf
jmp
lock
sbb
aam
and
push
push
in
aaa
fcmovnbe
fstpl
mov
inc
sub
in
sub
ret
shrb
jmp
loope
push
xor
stc
lods
lcall
into
push
out
aas
sarl
push
aaa
add
movb
fnsetpm(287
dec
divl
out
xor
jb
shll
cmc
ja
mov
mov
jne
inc
movsb
mov
ja
mov
ja
aad
pop
imul
pop
xlat
lret
fnsave
dec
pop
push
jmp
movsb
in
dec
pop
dec
mov
mov
ds
mov
loope
jmp
xor
pop
mov
js
stos
push
xor
ljmp
ljmp
ss
mov
jg
pusha
adc
jmp
jmp
cmp
sti
sbb
mov
xchg
lret
test
mov
sbbl
in
push
cmp
push
nop
adcl
mov
repnz
loop
subb
dec
xchg
arpl
test
xchg
mov
test
testb
leave
push
sbb
mov
mov
add
rorb
push
jo
aaa
insl
jmp
and
and
push
outsl
negl
adc
sub
imul
xor
xor
adc
cwtl
movsl
hlt
aaa
mov
pop
leave
pop
pop
xchg
fbld
in
idiv
loope
xor
add
mov
pop
int3
mov
in
cmp
imul
mov
or
lods
lock
sub
mov
lea
push
or
int
jle
pop
sti
loop
mov
cli
adc
sbb
in
add
xor
pop
or
and
cld
adc
jle
and
rorb
out
scas
lahf
adc
jbe
inc
pusha
stos
aas
lea
adc
sti
sbb
insb
push
or
xchg
mov
aaa
push
jp
inc
or
call
inc
fiaddl
push
out
xor
xor
inc
push
stos
movsb
fcoms
mov
or
jmp
cmc
jb
mov
pop
sbb
pop
shlb
mov
std
mov
mov
jmp
jmp
jbe
stos
jo
jns
insl
push
inc
inc
sbb
push
add
or
ljmp
inc
cmp
sub
fsubrp
addr16
push
jno
fwait
into
add
sbb
outsl
sub
ja
push
inc
cmp
lock
cmp
outsb
jnp
push
imulb
orb
mov
aam
xor
mov
lcall
ljmp
lret
adc
popf
das
addr16
sbb
cmp
faddl
popf
outsb
mov
inc
push
nop
xor
movsl
or
mov
cmp
and
push
xor
fmull
xchg
mov
mov
xor
addr16
clc
cmp
into
pop
jle
test
test
inc
sbb
sbb
iret
jns
call
and
testl
cwtl
lods
pusha
rorl
or
shr
pop
leave
cmc
cmp
pop
rolb
mov
leave
jle
arpl
xorl
mov
adc
pop
push
stos
add
cmpsb
inc
jp
and
flds
and
push
push
jecxz
int
push
ds
dec
negl
sub
in
fnstenv
out
dec
ljmp
sahf
clc
xchg
sub
popa
pop
test
mov
push
pop
pop
push
je
mov
xor
pop
movsl
movl
add
rcll
jge
jno
mov
inc
lock
push
movl
or
fldenv
loop
inc
xchg
xchg
xchg
lcall
adc
pop
mov
out
shlb
out
cmp
popa
pop
push
xor
mov
push
pop
push
lods
mov
mov
hlt
mov
out
mov
loope,pt
dec
push
dec
pusha
popf
and
and
adc
andb
cmp
test
inc
push
add
adc
dec
lcall
testl
outsl
lods
or
or
aas
mov
ja
rclb
add
clc
stos
sti
dec
mov
icebp
cmp
cmp
loopne
into
aas
les
xor
insb
inc
loopne
sub
pop
cmpl
sahf
addb
loopne
adc
sahf
xchg
ret
loope
pop
dec
outsl
in
xor
lcall
jl
aam
ret
jns
pop
in
je
jmp
icebp
sbb
xor
aad
sub
xor
mov
daa
mov
fs
mov
int3
add
cmp
cmc
daa
lret
insl
xorb
sub
rcrl
jo
sub
iret
sub
lcall
cmc
call
js
adc
push
add
stc
fdivrs
jmp
jl
fcoml
or
dec
sbb
push
push
ds
sub
movsb
mov
jo
rorb
pop
aas
arpl
icebp
pop
pop
dec
addr16
push
pop
push
aam
shrb
mov
fnstenv
jno
stos
mov
and
jecxz
push
and
test
cmpsl
mov
mov
data16
jecxz
xor
adc
xchg
jge
mov
dec
cmpsb
insb
pop
push
mov
stos
in
xchg
sub
in
scas
mov
xor
adc
into
jmp
mov
imul
jbe
sti
rclb
pop
push
outsl
aad
popa
mov
lods
loope
mov
int3
xorl
jo
scas
pusha
pop
pop
dec
cmp
pop
mov
mov
fcomp
lret
dec
cld
or
dec
add
cmp
jmp
and
arpl
loope
shrb
imul
nop
jns
aas
xchg
addr16
cmp
cmp
jle
aad
imulb
ja
xchg
mov
adc
shlb
cmpb
push
in
xor
outsb
sbb
int
mov
push
shlb
pop
lea
ja
lds
cli
pop
cmc
jno
daa
enter
xchg
inc
imul
or
mov
mov
push
push
in
in
mov
into
jae
and
jo
test
and
hlt
mov
sahf
cmp
mov
les
outsl
cmp
mov
ljmp
fisubl
test
mov
inc
jbe
push
push
and
repz
add
inc
or
sbb
stos
out
push
dec
clc
mov
cmpl
jae
inc
mov
mov
xchg
iret
and
add
adc
lret
adc
in
sbb
inc
sbbl
ret
mov
add
and
pop
mov
out
push
dec
int
pushf
sbb
shlb
lahf
sub
sub
push
xchg
xchg
sub
lds
call
bnd
or
jmp
data16
ja
adc
jecxz
xchg
cmpsb
pop
scas
fmulp
in
sub
mov
jg
inc
mov
or
iret
push
mov
arpl
pop
mov
sub
mov
inc
push
int3
jbe
or
leave
rclb
mov
add
add
mov
cmp
push
data16
inc
inc
les
scas
add
lds
ja
lock
sub
lret
test
hlt
leave
dec
in
rcr
xor
push
jno
stc
adc
inc
insb
mov
pop
lcall
xlat
aad
mov
pop
test
mov
mov
sub
lret
into
aad
mov
mov
cmp
jmp
jae
xor
xchg
out
sbb
add
mov
sub
ljmp
xchg
ss
fistps
aas
mov
daa
mov
jp
loop
fiadds
test
push
lahf
inc
mov
lret
cli
and
or
cwtl
ss
sbb
aad
movsl
icebp
addr16
mov
push
cmp
mov
mov
mov
call
sbb
dec
add
dec
cmpsb
dec
test
data16
stc
mov
mov
sub
aam
fucomi
lret
popf
jae
xchg
insb
sahf
mov
cs
xchg
filds
inc
xlat
cmpb
negb
push
stc
adc
xchg
or
cs
mov
jecxz
dec
int
out
jl
add
push
stos
mov
jnp
adc
jne
test
xchg
inc
mov
test
stos
cmp
cmp
push
dec
mov
das
fwait
jo
test
add
mov
aas
cld
jns
dec
lret
aas
adc
or
xchg
add
repnz
leave
nop
push
cltd
mov
push
mov
movsb
fistpll
xchg
lret
jle
inc
dec
inc
and
dec
dec
jle
mov
mov
fdivrl
cmp
aaa
popa
shr
xchg
push
dec
jno
sub
mov
jae
or
testl
rcl
cltd
stos
stc
dec
loope
push
add
enter
repnz
fs
popf
bound
and
pop
cs
xchg
jnp
adc
jecxz
and
jmp
mov
subl
pop
fstps
push
pop
jo
jbe
mov
sub
or
mov
stos
push
pop
sub
pop
jg
shlb
cmc
xchg
sbb
pop
mov
sbb
jo
ljmp
mov
sub
lcall
test
xchg
call
mov
ja
in
sub
inc
enter
push
sub
out
push
xchg
aad
mov
pop
mov
fisubs
imul
push
cld
jle
xor
cmp
loop
int3
decl
sbbl
adc
inc
repnz
jae
fcompl
in
subl
mov
or
or
jnp
ret
pop
enter
shl
shll
cld
sbb
int
or
and
dec
rcr
sub
stc
or
xchg
or
lcall
dec
mov
cmpb
jno
and
out
out
pop
aam
ret
daa
mov
cltd
mov
into
dec
jg
xchg
inc
sti
xchg
xchg
je
sub
sub
cmp
loopne
adc
dec
scas
mov
xor
lahf
push
add
adc
nop
aas
sub
push
sbb
loopne
rorl
jmp
sarb
push
xchg
pop
adc
jecxz
nop
jle
xchg
cmc
adc
inc
idivl
pop
fcompl
mov
not
jmp
cmp
das
sbb
lahf
lahf
loopne
sub
mov
int3
push
inc
add
movsl
or
pop
add
or
decb
int
push
push
ficoml
andb
sub
jbe
mov
and
jecxz
cltd
aad
pop
or
stos
int
enter
push
jle
sub
sub
std
dec
pop
daa
repz
or
push
cli
dec
pop
jae
adc
cmp
pop
movsl
idiv
jmp
fcomps
ds
outsb
inc
xor
jle
xchg
sub
enter
mov
inc
mov
sbbl
pop
or
ret
sub
push
repnz
lcall
adc
xchg
push
das
ja
xor
or
sub
scas
fucom
sti
xchg
mov
push
les
test
push
ja,pt
sub
mov
ret
test
fisttpll
js
mov
loope
jbe
rolb
into
xchg
dec
movsb
jae
inc
js
jecxz
adc
pop
push
call
stos
bsf
mov
outsb
aaa
mov
dec
mov
jmp
sbb
aas
repz
ja
loop
sub
sbb
mov
or
pop
mov
call
nop
lods
add
iret
dec
add
add
cvtdq2ps
jp
xchg
mov
push
repnz
fldt
mov
xor
sti
enter
in
add
jne
lods
insb
test
in
xor
scas
mov
shll
mov
xorb
test
sbb
ret
sub
mov
sbb
add
int3
cwtl
imul
test
push
mov
mov
lock
cmp
xchg
imul
icebp
dec
inc
int
cmp
mov
lods
std
pop
lcall
fnstcw
mull
xor
mov
icebp
dec
cltd
fsubl
mov
pop
lcall
clc
lcall
mov
idivb
push
por
sub
xor
sbbl
or
or
ret
push
adc
jge
cmpsb
ljmp
push
dec
jge
icebp
mov
sbb
rorb
pop
and
cwtl
adc
in
jmp
pop
std
popf
ret
pop
rcrb
aaa
dec
int3
gs
test
int
mov
mov
lcall
stc
jge
sub
dec
cmc
xchg
mov
flds
xor
xchg
mov
and
mov
popf
les
ss
mov
push
test
mov
lea
imul
mov
adcb
shrl
mov
mov
dec
sbb
mov
inc
out
jmp
sub
and
aad
pop
rcll
push
cmp
sbb
push
pop
cld
cmp
mov
fsubrp
xlat
adc
data16
mov
jbe
and
bound
jno
inc
shrl
cmp
es
cli
and
insl
mov
decl
pop
and
mov
das
pop
aad
in
jbe
jne
xor
add
scas
push
popa
jge
xlat
cld
xchg
stos
cmpsl
movsl
pusha
scas
mull
cmp
or
cmp
cld
jno
push
fdivrl
mov
pop
push
inc
add
xchg
fwait
pop
sbb
push
ljmp
test
adc
notl
shlb
jle
jae
in
fwait
add
mov
lock
lds
lcall
mov
repz
popa
imul
clc
fwait
lahf
lods
add
jecxz
and
fisttps
add
ja
outsl
out
xchg
inc
cmp
aam
adc
pusha
mov
out
mov
mov
movsb
mov
out
fcomps
mov
inc
pop
jne
mov
das
mov
cltd
out
mov
sbb
jbe
cmp
cmp
xchg
push
mov
push
cmp
mov
and
sbb
pop
xor
movsb
dec
call
adc
mov
jmp
push
add
test
lret
loope
fistps
lods
ljmp
lods
jb
in
cli
pop
cmp
cmpsl
idivl
mov
push
cmp
rcrl
inc
xor
inc
adc
push
fwait
adc
jge
gs
mov
lods
sbb
cmpb
inc
cmpsb
enter
add
mov
pusha
ljmp
popa
pop
and
add
sub
int3
in
aaa
lods
int
cmp
dec
pop
fiaddl
int3
cmp
popa
fstpt
pop
mov
adc
fidivrs
ret
mov
mov
imul
sbb
jg
pop
repnz
xor
mov
dec
xor
xor
mov
ss
imul
ret
jl
pusha
js
dec
xchg
lods
xchg
pop
mov
dec
insl
xchg
jno
cwtl
adc
add
movsl
xor
cmpsl
adc
bndldx
xor
lods
pop
mov
pop
loopne
das
cmc
cmp
xchg
loopne
insb
lods
xchg
mov
loope
mov
out
in
cmp
xchg
bound
rolb
mov
imul
push
pop
les
das
dec
notb
pop
sbb
loop
mov
sbb
or
mov
fldenv
movsb
lods
sub
insb
lcall
dec
lods
aad
ret
loope
notb
or
lock
repz
in
sub
pushf
cli
jns
aaa
xor
mov
add
int
mov
push
pop
jl
fiadds
cmp
repz
fnstenv
fdivrl
lds
lcall
mov
cmpsl
mov
push
cmpsl
pop
movsb
mov
lahf
cltd
push
stos
test
fidivrl
mov
sub
pop
push
nop
fcoml
fwait
sub
cmpsb
mov
push
addb
stos
jp
aaa
inc
or
dec
jnp
movsl
xchg
fisubrs
jl
int
aad
fimuls
dec
mov
xor
or
roll
pusha
cltd
cmc
jo
inc
inc
sub
jb
fcomps
pop
ret
sub
imul
fstps
inc
popf
or
push
mov
mov
jmp
adc
adc
jbe
cmp
xor
fldl
sub
adc
xor
push
dec
adc
aaa
cwtl
hlt
fs
xchg
xor
rclb
xor
pushf
lea
shrb
or
aam
aad
leave
test
sbb
mov
insb
arpl
outsl
pop
xor
add
in
jnp
int3
mov
cli
fisubs
in
movsl
jmp
xchg
mulb
lret
or
cmpsb
js
push
pop
push
pop
out
push
dec
test
rolb
fiadds
pop
adc
faddl
in
dec
imul
arpl
cmc
sbb
jns
loopne
popa
sarl
cmp
js
mov
dec
mov
push
sti
inc
ret
mov
lock
adc
out
stos
and
dec
outsl
mov
pop
test
jno
stos
mov
sub
sbb
fs
imul
mov
clc
sub
push
rclb
les
dec
lds
idiv
outsb
pusha
rcrb
xchg
daa
lods
movsb
in
inc
fistpll
das
add
aam
das
cwtl
mov
xchg
negb
mov
fwait
outsl
scas
xchg
or
out
lahf
fiadds
dec
mov
jl
xchg
sbb
cmp
arpl
dec
sbb
adcl
and
jbe
test
je
imul
sub
stos
pop
imul
pop
arpl
mov
cmc
sbb
rcrl
mov
fcoml
icebp
mov
cmp
add
sub
lret
inc
sbb
pop
xchg
lcall
xlat
cmp
jle
sub
push
add
pop
adc
mov
rcrb
enter
fcomi
out
fsub
cmc
ljmp
call
cmp
loop
jbe
mov
cmp
addr16
fs
addr16
sub
fists
and
in
es
fildll
negb
jl
dec
mov
lret
gs
cmp
aaa
mov
mov
call
jnp
or
lcall
shlb
sub
cld
imul
mov
add
sbb
fisttpll
aas
shlb
mov
mov
dec
dec
pop
mov
adc
cmp
loopne
loope
imul
lret
cmp
fldt
cmp
fs
in
dec
cmp
sbb
lahf
pop
cmc
mov
mov
int
movsb
pop
ljmp
or
pop
mov
push
dec
lods
inc
out
fwait
leave
dec
jl
inc
cli
fwait
hlt
sbb
jne
setnp
icebp
cmp
notb
inc
clc
sub
push
sbb
hlt
xor
sub
shlb
sbb
xor
insb
sbb
dec
cmp
cmpsb
in
stos
add
cs
pop
add
pop
push
addr16
popa
mov
mov
loope
cmc
fiaddl
aam
cmpsb
cmc
xor
bound
pop
bound
ror
jecxz
mov
das
sarl
jl
mov
xor
push
rorl
inc
in
orl
mov
mov
and
pop
repz
mov
inc
mov
xor
sarb
fcmovnu
mov
or
outsb
movsb
push
pop
iret
out
fsubl
div
and
add
sub
add
xchg
pop
mov
mov
test
or
stc
xchg
xchg
loope
sbb
jo
std
fimuls
jecxz
shlb
sbb
push
js
add
imulb
scas
mov
add
pop
std
aam
fsubr
inc
orl
mov
pushf
xor
out
fdivs
pop
ret
aaa
movsl
arpl
cmp
outsl
dec
loope
aas
mov
jmp
out
cmp
xor
cmp
nop
mov
inc
imull
dec
mull
je
lods
mull
in
int3
scas
leave
or
jo
push
sub
test
repnz
push
icebp
xchg
in
sbb
loope
xchg
push
add
xor
adc
jno
and
pop
jbe
mov
jl
push
rolb
jno
add
pop
sub
pop
test
js
mov
cltd
lods
cmpsb
outsl
sbb
jge
jle
push
inc
adc
in
xchg
stos
pop
jle
test
mov
push
or
inc
bound
cwtl
xchg
out
out
setb
xchg
push
jge
mov
cmpsb
lahf
popa
filds
mov
xchg
cmp
cmc
or
dec
imul
mov
insl
shld
ficoms
push
lods
inc
add
xor
sub
adc
aaa
lret
clc
nop
imul
sub
pop
push
mov
adc
clc
pop
rorb
lahf
dec
nop
push
jl
je
stos
and
imulb
stc
sahf
sub
fcmovbe
gs
or
pop
lds
cmp
sub
cmp
popf
out
loop
enter
out
mov
fisubrs
fidivs
add
sti
mov
xor
cmp
lock
imul
les
arpl
pop
icebp
rcrb
fwait
into
push
jmp
xor
add
mov
orb
inc
push
pop
out
aam
or
cmp
add
sub
mov
push
pop
lcall
xor
cs
fdivrs
pusha
in
mov
mov
mov
sarb
or
cmp
push
dec
aam
dec
addr16
mov
iret
call
add
xor
ret
xor
out
fwait
gs
xor
and
and
xchg
add
mov
ss
sub
xlat
mov
jmp
xor
sbb
jmp
sahf
push
stos
fisubl
push
test
in
scas
inc
pusha
inc
dec
adc
or
sub
mov
sub
sbb
mov
and
fldcw
inc
iret
fildl
out
shrl
jnp
xor
lods
stos
popa
add
or
pop
inc
xor
clc
popf
repnz
mov
ja
xchg
pop
add
push
leave
add
lea
adc
inc
push
inc
mov
lock
loope
test
jecxz
and
xor
dec
mov
jmp
xor
mov
pop
mov
loope
gs
mov
cmp
mov
arpl
je
push
jo
sub
cmpsl
pusha
inc
add
jbe
or
aam
insl
loope
lods
or
pusha
mov
addb
mov
adc
push
mov
jne
stos
sub
mov
stos
jmp
pop
add
add
stos
lret
mov
xor
mov
lds
loop
cwtl
test
inc
cmc
cmpsl
es
loop
jge
pop
cmp
push
or
mov
pop
xchg
sbb
mov
out
or
lcall
pop
cmp
data16
mull
cs
xchg
sbb
lds
jmp
sub
into
dec
lea
inc
lahf
sbb
sahf
push
dec
rclb
aad
cmpsl
pop
xor
add
fstpt
sbb
add
es
xchg
ret
mov
adc
push
pop
cmpb
or
lcall
dec
sub
jo
fstpt
pop
and
rclb
mov
sahf
jecxz
iret
push
pop
adc
in
cmpsl
and
push
orb
xor
out
ljmp
mov
lea
je
sub
jae
xchg
mov
sti
cld
out
pop
cmp
mov
xor
lock
sbb
push
push
and
mov
add
cmp
enter
sbb
jne
icebp
in
dec
lret
ja
sarb
daa
and
mov
dec
adc
cmp
cs
mov
iret
es
mov
pushf
lret
or
add
xchg
cs
cmp
dec
test
ja
mov
fcmovnb
push
add
add
inc
lea
jno
cmp
adc
movsl
and
mov
push
sbb
cmc
es
js
push
and
inc
insb
sbb
mov
dec
aas
fwait
mov
dec
shlb
jecxz
fcoml
loop
mov
ret
pop
mov
xchg
jp,pn
popa
insl
fcomps
imul
imul
clc
insl
leave
jae
repnz
sub
xchg
popf
call
roll
aaa
jg
or
mov
addr16
adc
adc
lahf
cmp
test
stc
cs
sbb
cmp
xchg
loope
lds
imul
movsl
lock
and
add
fidivs
test
test
cmpsl
add
add
int3
cmp
mov
adc
ja
lea
xchg
fistpl
loop
pop
test
and
int
stc
in
adc
jbe
ss
aas
pushf
outsb
mov
jp
out
sbb
sbb
stc
and
or
sbb
ds
jno
outsl
test
addr16
cmc
or
dec
fcmovbe
ficomps
push
lods
jae
scas
int
mov
push
cld
jo
sub
cmp
ljmp
popa
push
sub
sub
mov
lret
lret
nop
popf
mov
fldl
add
in
push
mul
test
lods
lcall
mov
outsl
pop
sbb
dec
inc
mov
es
aam
icebp
xlat
xor
xchg
xor
imul
lret
add
out
inc
push
xchg
rcl
xor
push
mov
ljmp
xchg
or
push
imul
mov
movl
fisubrl
out
mov
jg
jg
or
pop
lcall
sbb
shll
push
mov
in
loope
pop
rol
and
pop
pop
sti
shl
xor
cs
test
loope
iret
out
cmp
cmp
mov
pusha
addr16
pop
iret
stc
test
cld
pop
push
cmpsb
mov
in
fisttpll
outsb
add
int
incl
out
outsb
sahf
fidivrl
mov
scas
mov
or
iret
or
js
mov
add
push
mov
inc
pop
sbb
mov
ljmp
cld
jnp
inc
icebp
add
sbb
push
jbe
nop
daa
mov
push
aam
push
or
imul
ljmp
dec
xor
mov
outsb
enter
enter
xor
fsubl
lret
pop
xchg
sub
fstpl
in
lret
data16
stc
mov
hlt
mov
fs
mov
sub
out
mov
pop
inc
ja
mov
stc
inc
or
adc
inc
xor
out
dec
mov
mov
out
movsb
xlat
push
inc
mov
or
popa
mov
xchg
jns
adc
add
fcomps
sbb
jbe
scas
stc
repz
add
jnp
xchg
shlb
jo
pop
shr
fwait
dec
mov
jne
sbb
aas
add
sbb
stos
mov
clc
push
or
ret
sub
ljmp
or
int
xor
adc
push
xchg
cmp
sub
sahf
jo
pop
or
inc
push
inc
ljmp
lret
scas
test
add
or
jbe
xchg
lret
dec
pop
dec
adc
int3
std
add
sub
lock
int
mov
jb
aam
mov
inc
add
dec
push
push
fs
sub
rcrb
xor
enter
in
jno
jbe
out
mov
xor
jns
flds
mov
push
movsl
pop
test
mov
jmp
pop
shrl
dec
pop
lcall
aam
and
call
jle
stos
push
clc
jno
pushl
incb
js
fiadds
mov
sbb
in
add
repnz
sbb
mov
mov
push
fstl
lcall
pop
aaa
xchg
repnz
inc
cmp
sarl
cwtl
rorb
popf
shl
dec
frndint
mov
xor
outsb
mov
sbb
bound
pop
jmp
ret
fs
mov
and
mov
mov
mov
std
cmp
loopne
hlt
out
stc
or
pop
add
sbb
mov
xchg
fcoms
fldcw
les
fnsave
adc
xor
mov
fisttpl
icebp
ds
or
xlat
popa
repnz
jle
jl
fnstsw
push
pop
std
fistps
and
shlb
scas
mov
and
sub
cmc
jae
lods
js
jge
mov
idiv
iret
or
jle
add
xor
iret
popl
cld
scas
nop
fwait
pop
push
ffreep
cs
add
and
jbe
aas
add
cwtl
pop
or
add
insl
js
shll
test
data16
movhps
rorb
adc
mov
adc
out
mov
pop
shl
or
rolb
stc
pop
ret
push
sahf
xor
fwait
inc
jb
test
add
dec
mov
lds
fnstsw
in
pop
fldl
jbe
mov
jne
xor
insl
mov
mov
clc
fs
xchg
js
mov
es
sbb
push
push
push
inc
dec
call
data16
mov
add
inc
sti
xchg
aas
push
pop
enter
sub
adcl
cmp
inc
adc
cmc
icebp
out
ja
nop
mov
jg
nop
mov
rorl
lret
mov
xchg
dec
sbb
mov
and
mov
fidivrs
mov
jmp
push
push
xchg
ret
push
pop
sub
xor
sbb
jo
das
sbb
in
ss
and
call
adc
mov
and
mov
fcomi
lods
add
jg
or
popf
inc
add
push
xchg
orb
shl
rolb
out
push
out
pop
add
add
cli
push
aam
xor
mov
xchg
mov
push
lods
cs
mov
aad
pop
lods
outsb
mov
mov
jnp
jle
xor
inc
cwtl
jmp
cmpsb
sub
out
ljmp
add
or
pop
cltd
xchg
ficomps
xchg
aam
mov
fwait
jge
xchg
jo
addr16
add
sbb
push
mov
and
sub
fistl
std
jae
decl
mov
mov
test
dec
jae
cltd
hlt
out
mov
jbe
mov
fwait
sbb
sub
mov
in
mov
jecxz
fdivs
sub
cli
sub
push
push
add
mov
fbstp
aaa
jnp
hlt
cmp
outsb
test
push
insb
loop
or
dec
aad
rcl
push
jbe
daa
popf
jae
jne
mov
je
mov
pop
xlat
icebp
jle
mov
mov
mov
int3
call
shl
add
jnp
xor
cwtl
movsl
xchg
outsl
jecxz
push
jnp
repz
sub
popf
add
lahf
jno
sarl
mov
lea
js
es
movsl
mov
xchg
mov
cld
shlb
inc
pop
loopne
pop
aam
cmpsl
insl
cmpsb
xchg
pop
movsl
jecxz
push
pop
pop
add
add
arpl
fsubrl
stos
push
adc
cltd
aam
push
iret
bound
lea
mov
into
or
je
ret
fsubl
dec
aad
pop
cmp
test
xchg
add
stos
mov
les
insb
les
pop
test
rcrl
jnp
lock
das
dec
adc
adc
sbb
mov
jno
xor
dec
lahf
stos
push
add
jns
aad
cmp
cmp
negb
test
add
repnz
or
push
out
inc
les
fisubrs
lea
lock
xchg
mov
adc
lods
fwait
hlt
sub
push
mov
xchg
xchg
icebp
mov
adc
mov
pop
or
mov
mov
lock
int
addr16
jae
popa
les
xlat
push
nop
xchg
arpl
scas
pop
enter
xor
xchg
push
cmpsl
stos
scas
mov
or
cmpsl
xor
mov
into
out
lods
mov
push
mov
mov
hlt
incl
mov
jg
stc
shll
std
lret
mov
adc
test
js
adc
dec
jnp
lret
les
add
ret
lret
push
addr16
clc
jmp
cli
out
push
adc
push
outsb
dec
out
xor
adc
sbb
mov
jae
mov
mov
sub
subb
dec
repz
xor
popf
mov
mov
and
rorb
push
ret
inc
stc
jecxz
mov
dec
sub
mov
ret
jbe
jl
pushf
fists
hlt
adc
hlt
mov
dec
out
xor
fcomp
aaa
shrl
push
arpl
and
les
nop
pop
or
pop
xor
dec
ret
int3
jnp
aad
cmp
sub
jp
ja
clc
jg
mov
cmp
subb
call
mov
cmp
lock
mov
xor
outsb
test
add
fsts
pop
mov
jge
sahf
lcall
imul
mov
and
dec
fnstenv
cmc
dec
rorl
xchg
fs
xchg
daa
mov
movsb
lds
jnp
or
in
xchg
cmc
out
push
iret
xor
clc
and
sarb
pop
mov
pop
add
repnz
xchg
xchg
popa
sub
mov
arpl
push
arpl
inc
test
ret
xor
nop
and
xor
mov
sbb
ljmp
pop
push
pop
adc
inc
sbb
xchg
loope
jge
adc
mov
lea
adc
les
mov
sub
lods
or
pop
push
mov
push
std
das
stos
inc
je
sbb
sti
push
lock
jae
mov
fsubl
test
pop
adc
orb
addr16
add
cs
aas
and
pop
pop
or
cmp
out
xchg
xor
pop
fidivrl
push
jecxz
dec
and
cltd
repnz
mov
out
ret
iret
std
pusha
push
xor
pop
stc
sbb
ret
cld
clc
sarl
loop
scas
add
pop
lods
lods
mov
mov
dec
pop
mov
push
or
jnp
mov
or
inc
or
lahf
cwtd
lea
ss
push
aam
sbb
adc
sbb
cwtl
orw
shll
add
pshufw
cmp
ret
mov
out
jmp
insb
cmp
data16
push
outsb
pop
sub
dec
mov
dec
mov
and
loopne
fwait
popf
call
addr16
out
mov
aam
movsl
addr16
xchg
fistpll
sahf
repz
adc
leave
mov
sbb
test
jnp
cmp
loopne
lods
jo
out
push
add
cmp
sbb
mov
test
clc
xor
mov
xchg
adc
jae
xlat
mov
fs
or
insl
out
sub
jb
mov
pcmpeqw
push
mov
sbb
sbb
push
cmp
push
insl
fisttps
cmp
pop
sub
sub
pop
repnz
sbb
xor
pop
sub
dec
lea
in
adcl
movsb
jg
test
bound
xchg
dec
mov
mov
mov
xor
rcrl
out
pop
rcll
pop
ds
pushf
pop
cmpsb
mov
jno
xchg
iret
cmp
insl
sbb
inc
outsl
call
cli
mov
setae
and
scas
into
dec
mov
jp
shl
daa
gs
test
cltd
sarb
cwtl
pop
mov
mov
cmpl
stos
incl
sub
ljmp
adc
xor
popf
outsl
lret
xchg
push
pop
ljmp
xor
cli
emms
out
inc
sarl
out
stos
jl
das
mov
mov
xor
aam
loop
inc
and
decb
cmpsl
mov
xchg
call
mov
jg
jae
cmpsb
addr16
ret
ljmp
enter
lods
into
xchg
pushf
ds
sub
push
dec
in
shrl
ret
jbe
popa
jae
cmpsl
shrl
stc
lods
aam
mov
pop
mov
jb
or
xor
jge
adc
lods
ljmp
scas
fidivrl
mov
leave
stc
xchg
pop
out
pop
pushl
xchg
lret
xorl
pop
xchg
mov
imul
mov
push
stos
inc
dec
rorb
mov
inc
nop
push
pop
repz
int3
pop
push
add
stc
jp
jne
pop
jge
cmp
js
mov
or
xor
pop
addr16
dec
or
dec
incl
enter
popa
push
fdivs
orb
push
and
out
and
jge
lret
xor
adc
mov
jge
incb
popf
ljmp
or
incl
sbb
pop
adc
sbb
dec
xchg
inc
mov
imul
xor
fs
mov
adc
clc
adc
mov
cmp
or
push
scas
push
inc
stc
call
movl
imul
inc
in
or
xcrypt-ecb
cmpsl
leave
lods
and
imul
lret
mov
inc
push
xchg
mov
inc
jge
mov
adc
lock
out
push
insb
subb
insb
mov
sub
dec
or
mov
call
les
inc
inc
pop
cs
es
ficompl
sbb
rorl
pop
ljmp
data16
clc
pop
and
push
int3
aam
mov
adc
mov
and
cwtl
adc
mov
push
sbb
add
xchg
sahf
pop
pop
cmp
fwait
mov
lods
mov
jnp
fsubl
inc
xchg
int3
mov
adc
sbb
push
mov
mov
mov
pop
mov
add
sub
paddb
icebp
adc
xchg
filds
xor
das
fst
mov
adc
add
pop
and
or
mov
and
fdivrl
gs
in
jns
adc
jne
data16
dec
data16
pusha
and
mov
inc
lahf
pop
cmp
in
push
dec
sbb
es
jp
movaps
dec
shrl
cmpsb
leave
sbb
inc
xor
inc
ss
enter
cmp
mov
repnz
das
sahf
stos
sbb
cld
aaa
mov
fidivrs
dec
das
outsl
pop
outsb
fisttps
jb
fwait
add
bound
xchg
mov
fsubp
sbb
pop
insl
stos
inc
arpl
cmpsb
cs
fiadds
push
mov
xchg
pop
repz
pushf
outsw
clc
pop
and
ja
pop
mov
lret
and
scas
or
les
push
mov
and
rcll
jb
inc
lret
add
xchg
das
cwtl
loopne
dec
jo
xchg
stos
jge
mov
mov
and
mov
mov
push
mov
in
loope
push
shl
das
or
mov
idiv
mov
rol
and
xor
pop
lds
pop
pop
lea
xchg
mov
mov
xchg
cld
scas
or
jno
or
add
xchg
pop
add
push
inc
jge
mov
imul
xchg
movsb
rorb
cmp
mov
add
das
and
lock
into
xchg
mov
out
sbb
cwtl
cli
mov
mov
push
mov
lahf
lcall
cmp
cmpsb
idiv
xor
mov
dec
cs
and
dec
test
pop
mov
jb
mov
pop
sbb
and
shr
xchg
push
aad
out
leave
push
push
fidivrs
aam
jg
fs
insb
repz
sbb
xor
xchg
jo
decl
lea
cmp
popa
stos
jle
pushf
sbb
jl
xor
adc
and
int3
rorb
cmpsl
mov
jmp
jnp
in
mov
dec
imul
and
sub
sub
pusha
aam
rcl
sub
mov
cs
push
rclb
arpl
or
shll
dec
or
dec
jns
out
fwait
ds
inc
xchg
cmp
pop
stos
insb
cwtl
into
push
shrl
jle
jb
mov
cmp
sbb
out
xchg
insl
pop
mov
pop
push
sbb
push
mov
popa
clc
movsb
cltd
and
out
movsb
clc
sbb
push
dec
mov
popa
lahf
add
adc
and
jmp
jp
shll
out
dec
jo
adc
dec
in
or
push
icebp
femms
add
sbb
pop
cmp
add
dec
or
xchg
mov
data16
ljmp
mov
inc
adc
into
addr16
jns
xlat
jnp
adc
cli
stc
aad
adc
dec
mov
addr16
xchg
scas
mov
pushf
mov
jp
pop
jbe,pt
jnp
jae
cmp
test
sbb
lods
lahf
mov
enter
test
xchg
mov
or
pop
mov
sahf
psrlw
push
fwait
outsb
push
pop
inc
dec
into
js
pop
int3
shll
pushf
stos
shrl
divb
loop
idivl
lods
popf
add
inc
in
out
sar
and
iret
sub
jb
arpl
sub
sub
and
repz
xchg
jbe
rolb
shll
gs
sbb
and
xor
add
sbb
push
mov
adc
add
push
lods
lcall
shr
hlt
aaa
sbb
adc
leave
mov
icebp
push
push
mov
cmpsb
leave
mov
rcrl
xchg
add
push
imulb
push
or
jns
push
pop
push
inc
or
movsb
movq
mov
push
mov
xor
popf
ret
sub
cmp
push
leave
pop
stc
mov
xchg
loopne
add
xchg
lret
xchg
lret
fidivl
mov
aas
dec
push
dec
arpl
in
arpl
enter
mov
pop
jbe
xor
xchg
int3
add
mov
push
xchg
inc
into
xchg
mov
cmpsb
and
sub
or
push
lods
dec
mov
xchg
and
xlat
sub
xlat
fsubrs
movsb
mov
cltd
cmp
lods
pop
out
loope
or
xchg
xchg
cmp
add
push
xrelease
push
clc
movsb
aaa
add
addr16
bound
js
inc
jle
cmp
and
or
out
ret
cmp
cli
ds
data16
or
addr16
sub
inc
dec
cmp
imul
sbb
cltd
sub
mov
or
dec
mov
jg
or
cmp
adc
xchg
lcall
pop
inc
mov
repnz
je
inc
and
xor
adc
insb
daa
mov
lret
loop
outsb
pop
fwait
or
sbb
ljmp
rcrl
sub
inc
sbb
dec
nop
adcl
cmpsl
test
ret
mov
mov
or
and
jns
ss
ss
mov
cs
jmp
ja
jp
sub
or
fwait
and
aam
icebp
popa
cwtl
sar
cmc
lret
mov
dec
test
push
pop
outsb
inc
fistl
push
fdivrl
scas
add
sub
push
fcoms
in
cld
push
fldl
je
and
icebp
pop
mov
and
inc
jecxz
pop
stc
aam
popa
testb
mov
addr16
or
inc
hlt
sbb
mov
and
lret
outsb
call
add
loop
mov
nop
jno
jns
es
or
pop
inc
or
mov
add
fmulp
pop
mov
jge
jp
and
add
in
lcall
mov
movsl
fwait
test
scas
ficoml
sbb
movsl
push
cmp
jbe
ss
jnp
stos
andps
out
test
mov
sub
in
and
mov
ljmp
in
cmp
in
mov
divl
jbe
jno
xchg
jno
mov
sub
mov
or
pop
add
jle
mov
fcoml
into
xchg
ret
aam
cmp
scas
xchg
mov
clc
push
xchg
inc
out
out
jbe
sbb
mov
mov
out
test
test
jmp
movsl
adc
fmuls
into
push
mov
aad
mov
pop
fistpl
dec
test
ret
test
jle
mov
std
inc
and
inc
cltd
iret
jbe
fdivp
xchg
adc
sub
and
jge
xchg
adc
xchg
xor
cmp
sti
mov
push
cwtl
mov
scas
cmp
pushf
push
je
inc
fcmovbe
enter
mov
std
or
push
pop
mov
pop
subl
mov
je
dec
pop
push
out
es
sbb
push
mov
fwait
add
xchg
scas
negl
shll
aaa
and
mulb
mov
nop
mov
sahf
xchg
pusha
cmpsb
divl
push
out
mov
push
icebp
inc
sub
cmpsl
or
stos
jbe
jle
fs
jg
inc
lahf
mov
mov
adc
add
fisttps
jg
xchg
cli
sub
push
xor
cmpsb
xor
mov
popa
daa
pop
loope
and
or
movsl
mov
mov
addr16
inc
fwait
xor
mov
mov
sti
stos
xor
repz
mov
mov
rcl
dec
call
sub
ficoms
mov
std
rolb
and
jg
inc
mov
insb
aam
sbb
imul
xor
ja
cli
lret
cmp
sub
cld
lods
pop
enter
pop
cmp
cmp
pop
das
bound
jmp
sub
xor
test
lahf
gs
or
add
push
mov
jp
cmp
popa
jg
das
mov
int3
xchg
sbb
mov
cli
fcoml
cmp
add
fs
dec
dec
or
and
mov
loop
cmc
std
jo
sbbb
cltd
inc
jl
nop
stos
cmpsl
std
ss
cmp
sub
lds
mov
sti
scas
js
mov
mov
out
sbb
and
and
xor
mov
jno
in
sbb
mov
inc
sub
cmp
and
mov
push
popf
xchg
xchg
pop
dec
cmpsl
adcb
cmp
je
xchg
movsb
xchg
fildl
dec
iret
sbbl
cwtl
fchs
out
inc
fdivp
push
sarl
pop
lods
mov
leave
ljmp
mov
mov
lret
scas
call
mov
sub
and
xchg
xchg
fisttpll
or
pushf
cmp
adc
fisttpl
xor
jo
pusha
push
shlb
mov
adc
shlb
push
sbb
dec
xchg
popf
dec
negb
outsb
imul
pop
ljmp
push
inc
mov
add
mov
int3
lret
fidivs
xor
cli
mov
adc
cltd
rcrb
adc
sti
addr16
in
lds
ss
cmp
imul
psubw
pop
jne
popf
nop
mov
imul
testb
or
xchg
ljmp
loopne
jae
mov
imul
pushf
mov
es
mov
mov
sub
push
cmpsb
daa
or
mov
dec
xchg
std
adc
pushl
mov
sti
lret
add
dec
inc
mov
mov
es
enter
fstps
pop
push
ja
push
push
adc
loope
dec
push
jb
shlb
sti
lods
out
stc
movsl
out
out
and
inc
adc
jge
pop
fdivr
fwait
xchg
jo
lods
fwait
xor
fisubrs
sbb
stc
push
rcr
xchg
rcrb
icebp
cmp
and
sbb
leave
sbb
xor
in
repz
lahf
push
test
mov
sbb
push
icebp
mov
ja
jp
rcll
and
mov
scas
sbb
test
adc
aam
mov
out
push
cmp
adc
dec
cmp
xchg
xor
mov
fwait
cmp
dec
insl
dec
xlat
xorl
cmc
shlb
mov
aas
ds
jge
jle
jb
out
or
and
mov
and
std
outsl
into
jle
xchg
push
cmpsb
push
aad
fnstsw
dec
mov
sub
scas
mov
or
add
dec
mov
pop
add
push
roll
or
in
rcrb
inc
idivb
das
lret
jns
imul
pop
jno
punpckhdq
jnp
adcl
cs
stos
xor
cmp
arpl
jno
push
jns
mov
bound
pop
ret
mov
xor
jns
lock
jecxz
pslld
aam
xchg
inc
xchg
sbb
jbe
lret
cli
movsl
bound
jl
mov
cmc
aas
mov
scas
bound
loop
push
test
xchg
or
jne
lahf
cmp
mov
mov
mov
or
mov
cmp
imul
frstor
xor
mov
mov
enter
cmp
xlat
aam
xchg
dec
nop
push
and
add
cmc
test
je
int3
clc
cmp
dec
in
les
je
mov
push
or
xchg
cmpsb
sub
sub
dec
lock
into
xor
cs
insb
es
adc
lds
insb
and
repnz
sbb
pop
mov
mov
sbb
push
js
jae
cld
lods
test
pop
outsb
cwtl
pop
adc
xor
mov
movsl
clc
sub
pop
out
push
or
loopne
rcl
sbb
inc
jecxz
dec
mov
sub
stc
or
mov
dec
push
mov
int
scas
and
mov
cs
aam
xor
cmp
fcoml
aam
das
ret
pop
xchg
sbb
or
inc
dec
nop
incl
jnp
adc
or
or
jg
push
sarl
xchg
and
loop
pushf
scas
and
add
jae
adc
adcl
repnz
jmp
or
imul
dec
fisubs
stos
sahf
xchg
add
pop
jge
adc
xor
aam
test
ficompl
fstps
jge
cmp
inc
sbb
pop
mov
imul
incl
and
fcmovu
jo
hlt
gs
mov
pusha
movsb
cld
pop
popf
insb
push
out
addr16
inc
adc
dec
icebp
cmp
into
sub
push
mov
adc
clc
loop
popa
lret
loope
cs
ficoms
sbb
mov
or
xchg
inc
and
nop
into
push
adc
push
imul
mov
push
cmp
xchg
add
pop
fldenv
shl
loopne
jge
or
mov
movb
insl
adcb
inc
mov
add
flds
mov
test
xchg
iret
add
push
push
fldl
jne
mov
mov
in
ss
insl
and
xchg
xor
fbld
inc
mov
leave
mov
mov
mov
leave
dec
ja
repz
ror
addl
pop
pop
mov
push
cmp
mov
inc
jnp
lds
faddp
call
add
jb
mov
dec
les
mov
dec
mov
dec
cmp
int
sub
jle
mov
dec
imul
lods
into
xorl
inc
push
test
mov
adc
incl
push
lock
pop
sbb
fwait
lret
repz
ss
std
dec
push
xor
jle
lahf
les
mov
stc
xchg
mov
jmp
xlat
test
ret
cmpsb
sub
xor
loop
sub
adc
and
xchg
mov
cmp
icebp
dec
sbb
mov
add
adc
cmovbe
fnstenv
insl
cmp
xor
jp
mov
out
inc
dec
pop
cwtl
hlt
scas
sbb
iret
or
mov
pop
cmp
sub
ljmp
xor
loope
arpl
aam
out
jmp
cmp
in
fistl
jg
dec
or
sbb
fbld
in
jnp
xor
lods
shr
ds
aaa
push
jp
sub
inc
cmpb
pop
pop
inc
sub
cmp
notb
das
cmpb
mov
jns
and
shrl
ficoms
inc
and
or
aam
aaa
iret
sub
and
ret
adc
mov
call
mov
pop
movsb
cltd
inc
mov
sbb
push
test
fidivrl
enter
pop
sbb
mov
mov
mov
dec
das
mov
or
in
sbb
out
popa
mov
jle
pushf
std
movsl
jbe
xchg
jle
imul
dec
mov
jb
xor
repnz
inc
mov
aas
pop
lahf
cmpsl
fisubl
sti
xor
sub
sbb
adc
sbb
enter
sbb
das
or
arpl
in
or
cmc
mov
fisubrs
dec
test
dec
or
xchg
stc
fists
add
rclb
lret
mov
loope
inc
addr16
in
or
or
in
pushf
xchg
comiss
sbb
sbb
add
xchg
ret
adc
roll
add
ja
push
or
pop
adc
inc
cltd
xchg
jge
mov
mov
mov
rclb
rorb
adc
cmp
pop
mov
cltd
out
bound
pop
call
cmpl
sub
out
xor
rcll
jp
mov
repnz
jb
outsl
xor
and
movsb
das
add
add
mov
mov
fbld
adc
mov
and
mov
jg
lret
mov
mov
in
ds
mov
or
test
inc
stos
insb
xchg
sbb
jne
stos
dec
cmp
les
and
mov
sti
mov
jno
add
pop
jne
cmp
xor
dec
pop
jmp
ja
sti
sub
push
adc
push
imul
push
jp
jl
cmpsl
in
mov
lcall
lret
orb
pop
xchg
jmp
not
push
xorl
push
loopne
push
jno
cmp
jmp
imul
sbb
cltd
jbe
mov
iret
jae
std
insl
out
fwait
cs
adc
sub
pop
movsb
movb
sbbl
mov
pop
add
insb
into
xchg
aad
leave
cmp
in
ds
popa
insl
fldenv
outsl
pop
add
jne
pop
subb
jo
aad
or
cwtl
andl
push
call
loope
cmp
lea
lods
test
movsb
jne
mov
lahf
fbld
daa
jns
add
fwait
or
xchg
cmp
popf
mov
clc
daa
aad
xor
pusha
lods
adc
xchg
xchg
pop
stos
add
mov
push
sarl
cmp
pop
inc
push
pop
dec
sub
bnd
add
sub
mov
xor
aad
fidivrs
push
inc
lods
lret
xor
imull
xchg
out
movsb
add
adc
mov
das
dec
mov
xlat
inc
inc
in
jle
inc
cwtl
cltd
xchg
and
fwait
sub
in
jb
imul
xchg
fsubr
mov
hlt
es
fcom
mov
cmpsb
inc
mov
ret
sbb
mov
fiaddl
sbb
call
jmp
lret
sbb
popa
int3
jns
sbb
xor
icebp
sbb
mov
add
and
sbb
leave
adc
dec
jmp
sarl
or
mov
test
movsl
xchg
pop
mov
pop
lea
jae
mov
daa
pop
mull
and
jg
mov
fidivrs
pusha
aaa
bound
xlat
or
sub
cmp
std
test
fcoms
inc
repnz
or
sbb
movsl
and
inc
test
out
cmp
test
cmp
and
inc
pop
push
dec
sbb
mov
negb
int3
testb
mov
cmp
loope
or
add
in
push
lahf
xchg
pop
push
sbb
or
lcall
and
fidivrl
gs
in
dec
les
jl
in
jo
add
push
xor
sub
mov
nop
ja
xchg
inc
push
inc
cmp
adc
add
cmc
pushf
fistps
mov
icebp
xor
popf
testl
jne
xchg
test
mov
in
push
lret
sub
add
shl
cmp
icebp
pop
arpl
dec
pop
mov
aas
pop
jbe
fwait
or
lahf
xor
movl
mov
lahf
mov
xchg
inc
lods
out
negl
xchg
clc
adc
add
adc
adc
push
push
lods
mov
icebp
or
mov
gs
test
jb
xor
and
adc
mov
ret
dec
dec
fchs
fs
out
cwtl
lcall
dec
arpl
fwait
leave
adc
or
repz
mov
shrl
mov
adc
push
xchg
addl
scas
inc
pop
sar
clc
lret
inc
outsl
loopne
arpl
pop
lods
aas
mov
xchg
mov
lea
loop
sbb
mov
adc
push
outsl
ja
mov
test
insb
aam
arpl
adc
sahf
movsl
cmp
mov
jmp
subb
clc
mov
add
mov
fcomi
or
xchg
in
push
jecxz
sub
mov
cmp
enter
mov
and
pop
push
mov
sbb
jle
cli
push
cmp
cmp
call
jne
or
outsb
push
jae
arpl
lret
cmpsl
dec
sti
fs
push
call
or
popf
adc
movsb
mov
sbb
ljmp
or
negb
lock
or
mov
add
or
inc
out
xor
movsl
fistpll
fldenv
mov
in
sahf
or
pop
into
fucomi
push
and
sbb
pop
pop
dec
mov
jbe
xlat
mov
sbb
inc
cwtl
mov
sub
xchg
iret
movsl
mov
add
inc
gs
cmpb
xchg
mov
cmp
mov
xorl
mov
out
repz
aas
nop
and
stos
pop
sbb
push
scas
nop
jmp
jno
mov
ss
arpl
mov
subps
pop
fld
test
dec
dec
mov
lock
pop
sbb
mov
fwait
into
fstl
xor
imul
divb
mov
or
sbb
mov
insb
icebp
inc
push
and
fisttps
cmc
adc
fiaddl
xchg
loope
scas
mov
mov
cltd
dec
call
sub
test
bound
sub
sub
shr
jl
mov
sub
ss
fistl
cmp
jecxz
jecxz
mov
fnsave
sub
xor
rorl
outsl
test
int
mov
ja
ljmp
cmp
sbb
adc
test
mov
xchg
jns
jb
imul
aaa
mov
iret
int
aaa
or
leave
test
mov
fs
ret
fildll
mov
mov
rcrb
mov
push
jo
pop
mov
nop
jp
jno
inc
push
cmp
repnz
dec
and
add
ljmp
pusha
mov
adc
shlb
pusha
sub
leave
pop
fwait
mov
enter
imul
testb
dec
jbe
dec
dec
xchg
push
and
add
ljmp
lret
jbe
out
sbb
lcall
pop
inc
sbb
and
add
out
sbb
pop
sub
mov
sbb
scas
ja
cld
jae
pop
lods
sub
shrl
lods
adc
push
jp
xor
adc
nop
in
or
subb
and
leave
pop
shll
cs
test
and
nop
repnz
enter
inc
cmc
test
adc
rclb
pop
es
cmpsb
sbb
lea
movsl
xchg
sbb
sbb
xor
and
rorb
xchg
mov
jns
jne
xchg
or
jne
neg
sbb
dec
repnz
dec
fildll
inc
sub
sbb
xchg
es
jno
in
mov
cwtl
xor
mov
adc
adc
adc
fstl
sbb
mov
pop
divb
push
ljmp
fnstenv
or
popf
adc
stos
imul
movsl
adc
inc
gs
pop
xchg
scas
fiaddl
cwtl
in
inc
push
imul
inc
gs
adc
aam
mov
mov
mov
lea
mov
inc
roll
out
add
mov
imul
pop
hlt
test
loop
insl
adc
xlat
xchg
add
ss
lods
stos
in
popf
add
push
stos
and
fs
cmpsl
mov
bound
adc
sbb
aam
jmp
mov
inc
xchg
je
fisubs
pop
cmp
cs
ja
out
mov
cmc
lds
sbb
int3
or
or
mov
push
insl
xchg
and
mov
mov
test
add
inc
inc
fldcw
imul
cmpsl
fsub
int3
pop
adc
popl
xor
push
hlt
sub
mov
fistps
shll
pop
sub
pop
sahf
add
rolb
stos
dec
lods
daa
icebp
mov
mov
fwait
inc
jno
xor
push
sub
out
and
mov
aam
cltd
arpl
push
mov
jae
ss
fidivs
ja
cmp
test
stos
fildll
xor
mov
cmp
stos
subb
pop
mov
xchg
adc
cld
rolb
hlt
sahf
imul
xchg
lahf
mov
xchg
pop
leave
mov
popf
fcmovnbe
test
jnp
mov
cld
jmp
inc
xor
ret
xchg
or
push
negb
jbe
and
pop
jge
movsl
cmp
mov
push
xlat
jae
repz
mov
jnp
and
les
jmp
rolb
xor
in
xor
pushf
aas
dec
into
add
leave
aad
ds
mov
add
cmp
sbb
scas
push
mov
pop
fsubrs
jo
push
stc
in
pushf
adc
and
outsb
sub
xchg
pop
fs
cmp
loop
mov
push
mov
xor
push
fdivl
stc
cwtl
mov
or
rclb
testl
xchg
mov
not
xor
lds
aam
adc
mov
ficomps
sub
or
inc
inc
mov
pusha
shlb
mov
sbb
shll
adc
daa
mov
mov
jmp
std
std
push
aam
pop
sahf
std
test
movsb
mov
fmuls
lahf
mov
pop
sbb
shlb
push
mov
fs
add
add
jnp
das
dec
pop
jae
dec
leave
pop
mov
daa
jmp
jge
inc
sub
or
arpl
cmpb
mov
les
cmpsb
or
aas
pusha
xor
fs
sub
mov
jg
mov
jbe
push
test
sub
outsl
inc
xor
or
pop
dec
ljmp
scas
adcb
jno,pt
cmp
xor
mov
dec
jns
add
pushf
mov
outsl
xchg
or
xchg
pushf
fmulp
les
push
jmp
lods
cld
mov
xor
test
into
aam
add
sbb
and
es
ret
in
cmp
pop
push
or
ret
aam
mov
shll
mov
in
cli
imul
ljmp
xor
push
fsubl
add
in
scas
rcll
icebp
nop
dec
das
dec
out
mov
xchg
in
cwtl
jbe
bound
or
popf
add
jno
ss
pop
xlat
mov
push
jmp
insl
mov
pushf
mov
addr16
mov
cmpsl
stc
jne
fisttps
ror
cmc
les
mov
or
test
int
outsl
sti
xor
lods
es
xlat
movsl
mov
in
push
cmp
movsl
lods
int3
inc
mov
cmp
mov
xor
push
popf
pop
inc
rcrb
outsl
inc
aad
or
jnp
notb
das
stc
mov
sbb
dec
push
lret
jbe
nop
pop
sub
insb
sbb
xlat
lods
in
jno
in
fsubrl
sub
push
mov
add
imul
sub
add
test
xor
test
sarb
inc
jae
sbb
aad
outsl
dec
mov
xlat
je
or
ja
leave
mov
loope
pop
inc
jle
movsb
ja
cmpsb
pop
in
inc
inc
lret
cmp
aas
addr16
daa
jge
sbb
push
andl
push
dec
mov
mov
stos
adc
jg
aam
in
out
movsl
mov
sahf
stc
mov
sarl
xchg
jb
scas
sbb
int3
roll
sub
mov
xlat
sbb
push
inc
push
mov
test
add
or
mov
bound
cli
movsb
lods
push
lods
mov
mov
repnz
lds
js
shll
fidivrl
cmp
mov
add
adc
lea
movd
mov
movsl
into
mov
jno
push
pop
mov
ja
ljmp
mov
pop
lods
incb
mov
lret
into
scas
mov
and
push
cs
jle
mov
and
jo
push
lret
or
lcall
pop
mov
xor
sub
pop
insl
repz
mov
sub
aam
mov
mov
iret
lret
pop
dec
aad
cltd
fidivrl
push
mov
xor
adc
dec
addl
mov
push
push
push
pop
lcall
cltd
scas
cmp
jns
jno
and
ret
pop
es
xchg
and
stc
mov
fstps
mov
rcrb
mov
adc
cmp
int
push
mov
iret
mov
sub
xchg
test
xor
scas
ss
mov
lods
mov
xrelease
jne
add
pop
jae
enter
inc
out
sti
sub
inc
jns
inc
xor
aad
jnp
mov
adc
lret
sti
sahf
lret
es
xor
sub
add
into
push
add
push
mov
es
into
jl
mov
inc
gs
dec
lock
push
out
dec
pop
mov
dec
daa
cli
gs
dec
sub
adc
jg
xchg
adcb
bound
inc
mov
pushf
mov
imulb
daa
loop
jno
mov
sbb
enter
push
popa
inc
cmp
lcall
mov
add
add
adc
movsl
in
cmpsb
das
sub
dec
shl
jge
sub
in
test
pop
pop
dec
pop
mov
lds
xor
pop
movsl
pop
mov
mov
sbb
into
shrl
xor
aaa
or
mov
inc
jbe
cs
fs
in
jp
mov
jge
insb
pop
sub
jbe
hlt
je
xor
imul
movsb
lea
out
das
mov
scas
int
ljmp
enter
rcrl
popa
cmp
js
jae
mov
popl
mov
xor
gs
cmc
and
int3
xor
jo
inc
fcmovnbe
cmp
imul
mov
sbb
mov
insb
sahf
jl
pop
add
aas
flds
mov
mov
or
dec
inc
cmp
sbb
push
notb
in
pop
fisubrs
rcll
mov
gs
ret
out
fbstp
xchg
stc
mov
icebp
jle
in
std
jp
rolb
ret
adc
test
fstl
inc
xor
pop
mov
inc
fnstsw
jns
clc
inc
mov
fnstcw
or
mov
mov
mov
lods
call
outsb
test
addr16
into
idivb
mov
xlat
hlt
mov
pop
gs
mov
sbb
jo
xor
movsb
insb
jp
aam
pop
lods
sub
mov
sbb
push
mull
pop
iret
subl
dec
cld
imull
add
jmp
sub
xchg
iret
inc
outsb
repz
popl
add
popa
loopne
mov
in
mov
fidivrs
mov
push
add
add
push
mov
insb
xor
cmp
lahf
adc
sbb
fldcw
mov
sahf
pop
das
fwait
je
adc
cmp
dec
mov
add
ss
roll
sub
movsl
or
adc
jae
jno
enter
leave
mov
xchg
syscall
push
movsl
pusha
sbb
das
pop
mov
pop
dec
mov
mov
loop
cwtl
dec
push
aas
aad
loopne
cmp
dec
jecxz
pop
or
xchg
dec
or
sbb
addl
mov
fwait
je
cmp
cli
out
ret
loopne
or
shl
xchg
add
hlt
xchg
xchg
push
dec
cmp
jbe
mov
ljmp
mov
js
jne
popf
lcall
ds
xchg
pop
fwait
mov
push
jmp
shl
imul
xor
dec
fs
inc
popa
adc
lret
sbb
jp
mov
inc
xlat
pop
push
jle
lods
mov
loope
leave
push
aam
pop
push
xor
push
addr16
inc
pop
enter
xchg
and
cwtl
js
mov
inc
rol
shlb
cmpsb
mov
jl
fsub
mov
movsb
mov
int
aas
repz
repnz
dec
jno
mov
outsb
cltd
pop
les
jo
xchg
mov
sub
sbb
cmp
mov
test
cs
and
or
ds
repnz
ss
subl
xlat
jp
out
sahf
je
add
and
daa
cmp
xor
call
pop
mov
clc
dec
push
cmp
mov
add
mov
clc
mov
jns
test
out
bound
jg
hlt
and
mov
sub
sbb
jns
loop
aad
cmpl
add
xor
jo
repz
mov
xchg
add
sub
flds
out
pop
mov
and
sti
repnz
addr16
xchg
cmp
outsl
nop
js
addr16
jp
push
test
dec
divb
xchg
push
or
imul
repnz
push
sbb
jmp
clc
sub
mov
shrl
lret
imul
stc
xor
xor
pushf
pusha
ret
cmp
fsub
mov
mov
test
movl
cli
shll
sub
dec
rorb
lret
mov
out
cmp
enter
lods
and
or
sahf
fs
push
fsubrl
push
lret
dec
ja
cli
ja
int
dec
jno
adcb
push
neg
jae
loop
imul
clc
cmpsl
adc
xchg
popa
js
mov
loope
mov
mov
jbe
xchg
jns
outsb
cmpsb
cli
pop
insl
push
adc
rcll
sub
jno
bound
loopne
cli
outsl
bound
sbb
dec
cmp
adc
cmp
xor
mov
mov
ret
ja
inc
cmp
mov
aas
mov
sahf
repz
aam
xchg
pop
inc
insb
mov
mov
mov
sub
push
test
mov
mul
mov
movsb
push
mov
sub
xchg
in
adc
mov
and
pop
clc
mov
pop
add
iret
loopne
jl
and
pop
lret
dec
in
or
imul
pusha
call
rclb
fwait
inc
pop
test
push
cltd
inc
xchg
mov
pop
loopne
or
mov
mov
stos
mov
iret
push
xchg
push
incl
lret
arpl
dec
add
scas
aam
lods
fsubl
cmp
arpl
adc
ljmp
test
shll
in
sub
pop
and
adc
mov
xor
cvtps2pd
sub
inc
or
sub
nop
jg
dec
cmp
inc
mov
stc
mov
pop
mov
sub
pop
repz
sbb
or
mov
xchg
outsb
jnp
and
std
bswap
or
call
adc
loopne
sbb
dec
xchg
mov
cli
cmp
xor
test
ds
or
testl
inc
js
mov
cmp
adc
mov
pop
ljmp
sbb
ss
sbb
sarl
dec
add
aaa
push
xlat
push
pushf
xor
test
adc
xor
shll
or
imul
pop
lds
ja
pop
sub
cmc
in
movsl
aad
in
loop
lods
jb
je
and
lret
inc
mov
popa
or
pop
cmp
mov
lea
pop
popl
jle
xor
aam
push
cmp
popf
mov
pop
outsl
add
mov
lcall
mov
insl
sub
cmp
std
add
stos
pop
push
stos
lods
mov
xorb
cmc
stos
enter
add
sbb
adcb
pop
cmp
idiv
addl
mov
ja
jno
cmp
mov
jns
xchg
jns
or
or
jne
in
and
or
out
push
mov
jmp
mov
call
adc
sub
pop
mov
cmp
mov
xor
lea
daa
inc
cmp
dec
push
mov
jnp
mov
push
pandn
cmpsl
jne
ret
sahf
into
cmp
pop
lock
ljmp
jns
leave
shlb
in
pusha
lret
clc
xor
popf
mov
mov
pop
mov
clc
negl
pushf
div
jne
jbe
mov
xor
xlat
push
repz
lods
aam
fdivrp
int3
and
incb
mov
or
sbb
lock
cli
lret
push
or
insb
or
mov
dec
push
test
pop
add
imul
cld
int3
rorb
iret
mov
nop
sub
or
push
addb
adc
icebp
pusha
and
pop
decl
clc
fisttps
push
dec
repnz
sbb
dec
mov
fs
lods
test
sub
add
je
test
ds
adc
shrb
cltd
ss
cli
cmpsl
dec
ss
cmpsl
sti
cmp
cmp
mov
cld
loopne
movsb
dec
lock
movsl
ret
cwtl
lods
in
loope
mov
aas
inc
sti
push
add
xor
inc
mov
pop
jp
in
jp
js
xchg
lahf
outsl
aas
std
in
lret
fs
outsb
cmp
jbe
into
xchg
out
out
jp
dec
cmpsb
or
js
add
iret
mov
and
mov
sub
lods
outsl
cmpsb
and
dec
mov
icebp
ret
jge
mov
add
sbb
push
mov
es
jne
push
and
subb
popa
fcoml
cmc
fistpll
jmp
movsb
jo
push
jno
shll
outsb
inc
andl
subl
mov
cmpsb
into
bound
in
cmpsb
insl
mov
adc
cltd
lock
popa
or
jmp
xlat
inc
mov
icebp
jnp
js
xorb
adc
in
inc
imul
mov
js
sahf
movl
imul
dec
roll
dec
ja
dec
pop
lock
xchg
sbbl
inc
mov
or
inc
cli
push
fwait
test
add
lods
inc
dec
aaa
imul
jecxz
add
fs
inc
adc
gs
dec
add
sub
adc
cmp
cmpsl
push
and
pop
ret
mov
xor
push
out
clc
pop
mov
shlb
pusha
cmp
cwtl
scas
das
loop
add
inc
fistl
mov
jne
mov
out
pop
and
cli
mul
sbb
dec
aad
mov
cmp
sti
dec
es
adc
and
sub
cmc
sub
push
ret
shlb
sub
bound
push
mov
mov
mov
mov
jnp
inc
inc
inc
inc
clc
push
xchg
nop
mov
cmpsl
pop
or
dec
jg
cltd
cmp
clc
xchg
mov
mov
movsl
push
sbb
mov
repnz
pop
cmp
xor
add
mov
out
out
test
adc
test
cmpsl
adc
shrl
ror
les
stos
imul
lcall
paddusw
movsl
cmp
fdivs
lods
add
pop
cmp
jae
mov
ret
sub
and
mov
in
inc
jl
sub
ja
test
pop
push
push
xchg
xor
enter
pop
mov
insb
icebp
sbb
clc
aas
push
pop
repnz
jp
sti
dec
fcoml
add
jno
mov
sub
jmp
push
mull
xchg
out
orb
mov
adc
mov
lret
sarl
mov
mul
popf
jmp
lods
xchg
leave
mov
push
data16
dec
and
test
lock
aas
push
in
pop
movsl
cwtl
clc
jle
lcall
or
out
mov
hlt
push
negb
xchg
mov
mov
iret
frstor
adc
push
pop
adc
cmpb
es
and
add
fidivs
dec
mov
mov
and
and
jmp
nop
fistpll
add
les
xor
jecxz
mov
into
std
sbb
ret
test
roll
popf
jecxz
retw
dec
mov
jp
add
out
mov
push
gs
dec
shrl
imul
dec
loope
dec
out
lods
fsub
mov
sub
add
repnz
aad
push
push
xlat
aaa
loopne
int3
add
lret
jp
orb
sub
leave
inc
sbb
adc
or
xor
adc
pushf
xchg
xorb
or
or
cltd
dec
mov
in
icebp
mov
xor
sbb
and
jbe
fistl
push
andl
test
pop
jbe
movl
xor
sar
inc
adc
push
mov
dec
fstp
lahf
dec
loop
movsl
adc
pop
adc
pop
in
ljmp
or
ja
sbb
pop
cmp
loopne
mov
inc
mov
fmuls
jbe
les
pop
xor
mov
bswap
bound
movsl
sub
fwait
ja
mov
dec
movlps
inc
popa
and
and
cltd
into
das
push
mov
adc
sub
xchg
lods
test
clc
dec
shlb
leave
adc
mov
leave
or
xor
insl
xlat
add
loopne
push
xchg
adc
mov
fldcw
dec
in
inc
push
xor
popf
cmpsl
inc
cmp
xchg
pop
shl
cmpl
lods
add
xor
mov
sub
xchg
stos
hlt
pop
nop
xchg
sub
frstor
jae
jns
mov
mulb
mov
sbb
call
arpl
jge
jno
push
or
xor
ljmp
dec
movb
jb
mov
icebp
jno
mov
movsb
movsl
jg
je
stos
cmp
lret
stc
and
jge
jp
mov
add
cmp
or
xchg
sub
add
sub
lds
pop
xor
xchg
or
es
push
push
cld
ficoml
insl
popa
mov
in
hlt
pop
rclb
clc
adc
sahf
outsl
aad
mov
jg
jns
out
fsubrs
or
ds
or
das
mov
xchg
xlat
je
push
mov
lock
mov
mov
call
loopne
rolb
inc
movsl
ja
subb
dec
iret
imul
movl
pop
inc
fsubrs
pop
hlt
cwtl
loope
sbb
push
out
imul
sub
int3
sbb
push
cmpsb
pop
lea
clc
sbb
out
test
rcr
push
nop
jne
sub
sbb
adc
push
or
lea
sbb
mov
pushf
aad
test
cs
in
mov
leave
stos
cmp
arpl
add
repnz
or
stos
sub
rolb
cmp
lcall
mov
ret
cmpsl
xchg
je
or
out
adc
je
push
or
movsb
icebp
or
daa
cmp
dec
mov
popa
xchg
test
push
cmc
jmp
xor
add
stc
pop
adc
mov
pushf
movsb
pop
inc
iret
fs
scas
faddp
fs
addl
or
scas
xchg
jbe
xchg
push
stc
adc
jb
jmp
adc
pop
std
lds
addl
push
fs
and
roll
mov
push
cmpl
sbb
pop
sbb
sbb
jp
inc
sbb
stos
cmp
mov
sti
add
std
xchg
push
outsb
jns
decb
jb
mov
pop
ret
sub
jmp
popf
mov
ja
int
hlt
add
cmc
sbb
mov
pop
arpl
pop
adc
add
sbb
out
pop
cmpsb
in
mov
mov
pop
nop
add
mov
test
mov
into
addr16
xchg
lahf
pop
in
xchg
cmpsb
imul
mov
ret
jo
repz
sub
rcrl
sar
xor
mov
les
sub
ss
addr16
test
dec
sub
and
pop
mov
sub
push
imul
sub
fcoml
and
adc
mov
std
push
scas
or
scas
sub
imul
xchg
inc
les
jle
rcrl
scas
std
aam
mov
xlat
js
xor
popf
in
divb
sbb
arpl
mov
sub
fcoml
sub
inc
cld
xchg
adc
cmpb
jecxz
cs
xchg
pop
or
icebp
dec
enter
lahf
test
mov
jnp
in
mov
in
or
lods
das
jo
cmpsl
ss
cmp
cmp
and
es
std
or
xchg
test
fcmovne
push
mov
scas
in
sub
and
cwtl
inc
or
or
xchg
cs
cli
insb
shrb
ret
adc
repz
bound
fiadds
test
push
jl
mov
mov
cmpsb
test
loopne
sbb
cmpl
fadd
aam
test
sbb
sti
cmp
jle
mov
or
mov
notb
sub
cmpsl
scas
dec
dec
inc
call
add
popa
jns
lahf
and
int
test
push
rclb
xor
cmpb
lds
jns
iret
jo
or
scas
sbb
mov
mov
or
mov
mov
mov
sub
xchg
inc
test
or
and
jp
mov
or
popa
cmpsb
xlat
push
mov
cli
aam
dec
lods
gs
mov
adc
dec
rorb
cld
dec
sub
push
out
pop
notb
mov
or
adc
inc
xchg
inc
adc
xlat
dec
inc
mov
scas
mov
bound
arpl
push
test
add
or
mov
imul
inc
lea
fisubl
out
and
fisttps
add
ss
fcoms
and
idivl
out
and
cli
rolb
sbb
aad
gs
cli
jo
xorb
pop
repnz
add
outsl
mov
in
mov
fsubs
lcall
dec
or
xchg
int3
lods
out
mov
cmc
push
cmpsb
cmpsb
mov
mov
repz
shr
fildll
lret
sub
or
popf
stc
stos
out
idivb
repz
es
adc
lret
pusha
into
push
pushw
mov
sbb
stc
imul
inc
mov
inc
push
lock
mov
fwait
daa
ret
lcall
rcrl
cmp
mov
jmp
lret
jnp
clc
sub
test
sub
popf
mov
and
inc
loop
mov
xchg
das
call
pop
jo
rcrl
scas
cmp
repz
xchg
xor
or
push
cmp
jae
imulb
mov
nop
hlt
in
lret
data16
dec
inc
sarl
lods
cmpb
sub
add
stos
mov
add
cmpb
insb
push
rclb
int3
in
inc
sahf
rcrb
in
or
fnstsw
sbb
popa
loope
push
xor
repz
xchg
fisubrs
fidivl
sub
adc
add
xchg
subl
aam
lock
iret
jne
adc
and
idivb
aam
sub
or
pop
sub
and
sbb
xor
mov
adc
popl
push
push
int
subb
scas
mov
bnd
jmp
lcall
aad
jnp
cli
jo
cmpsb
mov
sbb
insb
xor
std
aaa
outsl
mov
mov
push
jno
mov
fisttpll
ljmp
push
inc
mov
xor
push
xchg
and
mov
ret
xor
and
pushf
jo
xor
fwait
jbe
xchg
daa
pop
inc
jno
or
cwtl
cmpsb
xchg
mov
dec
stos
xchg
hlt
sub
rcll
sbb
loope
push
out
xchg
pop
icebp
rcll
in
pusha
mov
arpl
lods
cmc
dec
cmp
hlt
das
and
mov
adc
xchg
sbb
mov
test
jl
in
fsubl
jo
dec
pop
add
shrb
iret
sbb
xchg
lahf
jnp
clc
inc
popf
dec
ret
mov
cmp
filds
imull
dec
psubw
xchg
lcall
lock
cmp
push
push
sub
push
leave
sbb
inc
shll
inc
aas
aad
dec
lods
fcmovne
pop
fwait
scas
adc
xchg
cwtl
xchg
daa
push
repnz
cmp
cmpl
loope
or
fisttps
xor
add
push
push
scas
pop
enter
in
inc
push
das
adc
mov
sbb
out
xchg
stos
ret
fisttpl
jns
inc
and
cltd
sbb
testb
push
lods
or
push
idivl
rclb
test
sbb
fs
icebp
jp
cld
cld
push
movsl
scas
or
fprem
xor
cld
sarb
mov
mov
hlt
cltd
inc
mov
pop
sub
stos
out
lock
cmp
inc
stos
lock
xchg
dec
stos
sbb
pop
and
call
fsubs
mov
aaa
lcall
stc
test
push
ret
in
into
dec
lcall
mov
xor
in
xchg
in
test
cld
cmp
scas
mov
sub
xchg
shl
push
std
sub
sub
insl
popa
jl
ret
pop
int
mov
sbb
inc
into
ret
or
sbb
loop
push
add
push
das
jmp
lahf
outsl
test
xchg
fdivs
cmp
out
arpl
stos
pushl
adc
shrl
adc
test
jp
lret
mov
shrb
popa
lock
mov
pushf
xor
or
xchg
adc
cmpl
fisubrl
mov
mov
pusha
push
cmp
cmpsl
jns
icebp
shll
repz
jnp
data16
adc
out
cmp
or
pop
int
stos
xchg
stos
aam
mov
xchg
or
les
fsubrs
mov
jmp
sub
dec
fsubr
push
add
fistpll
add
push
in
orl
push
sarl
stc
xor
jl
push
repz
dec
jo
aas
jnp
imul
fucomi
jecxz
in
sbb
stos
leave
hlt
lds
into
jbe
dec
add
xchg
stos
xchg
mov
rorb
ja
cmp
push
jns
movsb
rcrb
xor
cmp
push
call
sbb
call
mov
push
cmp
icebp
aad
pop
loopne
gs
repnz
sbb
aaa
ret
in
sbb
pop
jno
outsl
inc
mov
leave
mov
xchg
movsb
int3
das
push
imul
push
jle
push
mov
daa
xor
outsb
ficoms
sarb
jbe
or
cltd
inc
leave
fwait
insl
sbb
inc
cltd
jae
and
or
shlb
and
cmc
mov
mov
push
mov
and
outsl
and
sarb
sbb
test
push
cmp
lret
xchg
inc
sahf
adc
iret
mov
push
push
rorb
data16
addr16
lahf
pop
je
test
imul
add
fdivrl
xor
gs
pop
sahf
jnp
stos
xor
aad
scas
push
data16
sbb
mov
arpl
enter
xchg
push
mov
lahf
pushf
sub
mov
lret
jnp
mov
aad
push
in
cmp
mov
jns
cmp
lods
enter
xchg
push
pop
imul
rolb
fildl
add
rcrb
cmp
jmp
cmpsb
ja
xlat
nop
push
mov
iret
cmpsl
insl
sub
push
jmp
or
push
lods
jnp
mov
jecxz
sub
pop
iret
xor
and
push
inc
inc
les
pop
sbb
in
pop
pop
add
xor
xlat
loop
ss
jnp
cmp
or
add
test
popa
dec
push
mov
mov
adc
fiaddl
jb
sub
mov
jmp
mull
ja
jmp
or
mov
outsb
roll
cmpsl
dec
ret
dec
into
faddl
cmpsl
imul
mov
shr
movsl
inc
fcoms
pop
scas
xchg
testb
scas
jmp
flds
filds
clc
mov
adc
mov
push
inc
es
sub
mov
mov
mov
adc
sbb
sub
lcall
fistps
mov
sub
xlat
lea
xlat
adc
scas
lret
xor
and
push
insb
sub
fists
jmp
aas
aaa
mov
push
rcrb
sub
cmp
lods
inc
popf
jl
in
mov
push
aas
sahf
aaa
inc
xchg
out
or
into
dec
inc
sub
scas
outsb
mov
xor
bound
fisubrl
mov
scas
cmovg
shlb
repnz
xorw
movsl
and
and
lods
in
inc
clc
cvtpi2ps
test
aad
xor
ds
mov
sbb
scas
addr16
xchg
inc
aas
and
adc
xor
pop
in
mov
sbb
lret
cli
rorl
out
jbe
inc
ljmp
pop
mov
out
icebp
lahf
leave
jge
lret
fs
mov
pop
out
inc
jne
xor
mov
imul
dec
add
cmp
and
movsl
lahf
ljmp
sbb
clc
add
icebp
push
push
ljmp
loope
sarl
inc
mov
inc
sti
pop
jmp
out
jge
mov
push
outsl
fisttps
out
and
incl
sbb
sahf
pop
adc
mov
fistps
scas
pop
xor
in
insb
push
cmp
adc
or
sbb
jmp
jno
adc
fnstsw
aam
mov
mov
sub
jbe
sarb
pop
cltd
xlat
aaa
int3
add
xor
into
pop
test
cli
push
mov
push
pop
repnz
xchg
mov
fcmove
dec
pop
movsb
or
sbb
inc
sbb
pop
cmp
jle
xor
ds
jb
lods
cwtl
adc
or
xchg
stos
outsb
shll
inc
adc
inc
sub
add
scas
test
lcall
mov
fdivl
pop
xor
rolb
or
sub
in
int
pop
cmp
mov
mov
lret
outsl
pcmpgtw
xlat
xor
adc
gs
adc
les
mov
xor
mov
adc
test
push
dec
mov
jle
and
adc
inc
in
jecxz
cmp
call
rorl
jl
sub
pop
lods
cmp
popa
sahf
adc
iret
fdivrs
cmp
mov
fs
add
adc
xchg
mov
lea
push
cmp
das
adc
jns
out
mov
stc
and
push
lea
push
and
sub
lret
in
aam
movsl
std
stc
dec
mov
xor
cli
mov
jle
int3
sti
sub
aas
mov
mov
mov
push
ret
test
push
insl
xchg
out
aam
nop
js
xchg
xchg
fldt
push
adc
subb
adc
add
je
rorl
shlb
mov
xchg
adc
sarl
and
test
cmpsl
in
pop
xor
loop
lret
out
fwait
jae
push
arpl
insl
dec
clc
es
cmpsl
and
xor
jecxz
cmp
pop
add
xor
cmpsb
or
add
pop
scas
inc
or
pop
push
pop
loopne
leave
cwtl
xchg
adc
mov
in
xor
xchg
mov
push
dec
repz
icebp
loopne
testb
adc
shlb
pusha
pop
or
inc
inc
cwtl
xor
nop
jno
xchg
mov
jb
enter
mov
xchg
ds
std
lods
rcl
sub
jbe
notb
and
lds
es
cwtl
jno
xor
ss
sbb
loopne
and
mov
ja
aam
xchg
push
outsb
adc
sbbb
scas
stos
adc
push
fstps
jae
leave
xchg
call
and
les
sbb
mov
scas
insb
dec
push
push
gs
sbb
cmpsb
mov
adc
outsb
out
xor
adc
xchg
xchg
cmp
pop
mov
pop
mull
push
xor
lds
jno
push
mov
fbstp
or
das
mov
stos
xchg
jb
in
movsl
mov
xchg
lahf
add
mov
loopne
out
jl
movsl
mov
jne
repz
xchg
push
out
loopne
adc
mov
push
mov
jecxz
test
addr16
jns
mov
ds
outsl
jnp
sbb
movsb
inc
les
fs
dec
push
int
jne
adc
popl
sbb
mov
sti
dec
clc
jmp
fld
sub
jnp
xor
add
pop
xor
call
cmp
mov
dec
and
je
lcall
movsb
push
sbb
mov
add
pop
lods
test
push
mov
in
push
lret
js
push
pushf
and
mov
cmpsb
push
divl
loopne
pop
mov
sahf
pop
mov
mov
mov
cmp
testb
pop
jnp
xor
mov
sub
push
cmpsb
sti
jle
pop
lods
xchg
mov
sub
fstpl
das
imull
out
push
mov
sub
sbb
fs
stc
mov
out
mov
fwait
insb
cld
dec
mov
push
enter
test
jns
in
scas
jns
pop
xor
jae
sbb
inc
and
gs
dec
inc
dec
arpl
dec
mov
mov
je
inc
daa
adc
xorl
dec
add
repz
mov
push
mov
aad
adc
dec
mov
xchg
icebp
adc
jbe
cltd
les
scas
xor
divl
lcall
outsb
xchg
add
je
push
shrl
jge
adc
xor
aas
ret
pop
cmp
pop
loope
jecxz
xlat
and
movsl
pushf
sbb
or
pop
imul
cmp
fcom
sub
ret
push
dec
repnz
dec
dec
push
cmpsl
mov
lret
shlb
dec
inc
push
pop
lds
xor
xor
lods
sub
jo
push
js
mov
mov
addr16
and
jl
call
sti
loop
jns
fs
inc
cld
pop
adc
adc
repnz
mov
add
cmp
popf
stos
test
inc
sub
pop
fbld
and
inc
xor
divl
cmp
sub
add
int
repnz
xchg
sbb
out
daa
stos
fs
leave
cmp
dec
push
test
stos
pushfw
push
cmpsl
int
cmp
xchg
ret
mov
pushf
jne
stc
lahf
cmpsl
dec
and
pop
imul
into
pop
jl
rcl
or
jo
and
xor
and
cmp
lcall
movsb
popf
inc
xor
mov
mov
jbe
jmp
outsb
sub
aam
add
push
popa
xor
ficoml
pushf
xor
call
jl
enter
jecxz
fcmovu
sar
sbb
out
and
nop
bound
cmp
and
ret
movsb
xorb
mov
es
dec
nop
mov
js
les
clc
insb
insb
mov
loopne
cmp
adc
ret
and
loopne
sbb
and
inc
cmp
enter
outsb
dec
and
iret
out
rcr
scas
loop
std
call
mov
dec
aas
test
or
jnp
mov
fsubr
jl
or
or
je
push
push
cs
push
cmpsb
mov
dec
shll
jecxz
pushf
jb
xchg
out
rcll
stos
daa
push
int
ja
pop
ret
or
push
or
mov
push
cs
push
adc
xchg
push
sub
mov
std
out
and
or
outsb
or
sbb
out
movsl
mov
sbb
rcl
xchg
mov
addl
mov
rcrb
ss
pop
mov
out
in
inc
sbb
aas
into
sub
cmpsl
sbb
js
je
mov
xor
xchg
roll
mov
dec
inc
scas
pop
es
push
cmc
and
push
adc
xchg
mov
xchg
sahf
xor
push
pop
or
or
and
gs
inc
xchg
xchg
mov
sub
cwtl
sub
ja
cmp
mov
mov
mov
jbe
pushf
jmp
push
sub
test
mov
cld
in
into
fidivrs
shrb
in
pop
addr16
mov
std
or
dec
xchg
sbb
mov
sbbb
mov
dec
in
jb
cmovl
out
gs
lret
imul
mov
xor
cld
or
push
xchg
xor
mov
lcall
adc
mov
mov
fwait
mov
int
je
scas
rcrb
loopne
add
insl
cmp
out
pop
cmpsb
pop
lods
out
insb
mov
ja
mov
dec
dec
xor
mov
xor
lcall
jge
repnz
inc
add
pop
sti
cmpl
mov
testb
pop
mov
xchg
mov
aas
outsl
mov
js
repnz
cmc
cmp
sbb
jl
mov
add
xchg
push
sbb
or
fwait
sub
movsl
ja
mov
adcl
fdivs
adc
fisttps
lods
pop
clc
dec
xchg
or
dec
test
fstpt
mov
gs
cmc
mov
inc
lods
test
in
cmp
outsl
push
fmuls
jne
sti
pop
adc
xchg
inc
stos
gs
std
outsb
inc
jno
jb
xchg
jge
fisttps
mov
mov
pop
test
lock
fwait
cs
xor
nop
mov
mov
dec
xor
sbb
mov
fisubs
push
shll
or
and
icebp
dec
popf
lods
std
test
lds
rcl
lea
bound
push
cmp
push
hlt
xchg
dec
mov
mov
inc
add
out
lret
push
call
popf
xchg
cmpl
dec
jbe
out
pushf
jne
hlt
lahf
pop
out
mov
out
int3
sub
and
loopne
pop
stos
cltd
loop
jno
out
cmpl
fucomp
test
xchg
add
movsb
inc
stos
add
adc
enter
cmp
mov
inc
lahf
sbbl
fcoms
outsl
fdivs
pop
jmp
mov
fdivrs
xchg
out
and
push
das
shrb
adc
add
icebp
xchg
repnz
cld
push
andb
aaa
jmp
push
cld
add
cld
mov
int
gs
pop
fcomp
adc
pop
loop
cwtl
jmp
int
cwtl
xchg
test
mov
dec
sub
movsb
pop
mov
dec
or
sub
mov
daa
adc
es
and
lods
pop
int
mov
fsubrl
cmp
testb
mov
insb
jae
jge
cmp
pop
jge
jecxz
sbb
cmpb
xor
shl
or
mov
popa
push
push
jp
in
icebp
jle
leave
push
fst
mov
aad
out
aad
dec
pop
dec
mov
pushf
xchg
push
enter
pop
add
popf
xor
data16
mov
pop
into
inc
lcall
sarl
out
jo
mov
jnp
sbb
std
loopne
mov
fildll
insb
outsl
jmp
mov
test
stc
xchg
dec
imul
hlt
call
stc
stc
out
xchg
popa
aad
lret
stos
loope
ds
inc
push
push
add
aas
faddl
jmp
cs
verr
mov
inc
call
aam
mulb
cmp
pusha
pop
inc
jmp
pop
stos
jno
xchg
inc
fistl
test
or
shll
hlt
dec
adc
sbb
dec
lea
dec
push
lds
hlt
pusha
popa
cmp
fidivrs
pop
fimull
outsb
push
xlat
mov
insl
icebp
adc
addr16
shlb
xchg
iret
cmp
mov
xor
scas
test
fs
aad
mov
pop
cwtl
cmp
lret
std
pop
jb
mov
inc
imul
pushf
movsb
adc
scas
decl
mov
js
cmp
je
xchg
push
in
shl
stos
mov
cmp
jno
pop
push
dec
test
push
xor
fadds
pop
sub
pop
xorl
jno
shll
mov
loop
and
cmpsl
sar
fldt
or
ss
and
hlt
jecxz
jmp
mov
xlat
push
popf
mov
sbb
dec
mov
icebp
adc
mov
idiv
and
mov
cltd
or
sti
aas
imul
push
or
imul
orb
data16
shlb
pop
arpl
fs
out
dec
inc
add
loope
dec
and
mov
push
std
adc
xchg
jle
lock
mov
fiaddl
mov
adcb
mov
addb
inc
insl
enter
mov
sti
idivl
mov
popf
int
ljmp
pop
mov
out
aaa
insb
enter
xchg
je
dec
xor
cltd
insl
inc
imul
fmull
lcall
and
or
popf
jno
lcall
ds
cmc
xlat
frstpm(287
fs
test
loopne
cld
mov
pushf
dec
mov
int
insl
and
jg
faddl
jmp
xor
jmp
mov
inc
test
sub
out
arpl
jbe
xor
inc
imul
inc
xor
les
dec
fwait
and
jbe
rorb
inc
inc
jge
cwtl
jo
cmp
jg
sub
push
imul
js
dec
adc
jbe
aad
sbb
repnz
sub
repz
mov
sub
and
aaa
fsubrp
cmc
pushf
xchg
mov
movsb
sub
adc
fsts
mov
fcomip
bound
pop
pop
stos
test
incl
adc
cmp
lcall
add
ja
shlb
popf
xor
mov
jle
imul
mov
test
xlat
cwtl
mov
imul
adc
xchg
adc
xlat
mov
loop
sub
insl
xchg
js
sbb
or
add
dec
iret
aas
jae
aaa
das
and
nop
xchg
pop
xchg
jge
cmp
leave
int
sahf
imul
push
push
push
adc
jmp
push
fyl2x
loop
xchg
jne
mov
jae
pop
sbb
dec
fdiv
call
push
arpl
or
daa
outsb
in
jmp
pop
pop
jb
xchg
mov
in
std
fcomps
jb
lock
dec
ljmp
insb
jle
out
mov
int
push
popa
push
pusha
dec
popa
sbb
inc
adc
sub
push
das
sbb
jp
daa
fldenv
mov
das
popa
sbb
dec
mov
adc
aas
and
repnz
outsb
fisubrs
scas
dec
xchg
push
pop
xchg
xchg
sub
mov
pusha
mov
movsl
insl
push
sbb
out
pop
jmp
loopew
hlt
aam
popf
dec
or
xchg
sarl
movb
mov
xor
pusha
mov
stos
mov
sub
int3
sub
push
sbb
sbb
ljmp
out
rcrl
repz
mov
mov
sub
add
test
shl
jb
cmp
and
pushf
stos
or
add
pushf
mov
movsb
and
xchg
fnstcw
adc
xor
in
mull
imul
scas
ja
mov
jle
sbb
fsubl
push
dec
dec
xor
into
jg
fsubl
pop
enter
je
ljmp
in
xchg
cmc
and
cs
adc
inc
insb
add
sub
xorb
pop
dec
push
divb
daa
sahf
sub
xchg
push
rcr
cmp
xchg
cli
pop
cmp
pop
xor
aas
popf
aaa
fidivrl
mov
insl
sub
jp
fs
aam
and
mov
lea
insb
out
repnz
xchg
movsl
movsb
and
in
jbe
mov
cmp
inc
sahf
lret
xchg
dec
insl
cwtl
mov
mov
lods
mov
clc
das
mov
jmp
fwait
lret
test
mov
jae
loope
sbb
mov
jmp
test
movsb
pushf
inc
cmp
cmp
adc
cld
push
xor
sbb
lock
int3
leave
sbb
in
or
js
sbb
adc
call
dec
jbe
pop
mov
negb
xlat
das
xor
cs
mov
mov
out
and
int3
mov
sbb
xchg
arpl
and
dec
cld
mov
rolb
jo
jp
and
cld
cltd
ret
nop
jno
jae
lods
ret
lds
push
or
rcr
leave
mov
xor
das
es
jb
pop
fwait
pop
out
nop
sbb
cmpl
jae
fs
or
sub
mov
jg
mov
or
ret
inc
insl
lahf
add
dec
inc
clc
xchg
clc
xchg
subb
sub
push
sub
inc
xchg
mov
add
divps
fdivs
push
imul
cli
repnz
in
jl
outsb
xchg
lea
fdiv
rclb
mov
xlat
pop
pop
aam
and
mov
mov
ficompl
repnz
scas
add
xchg
mov
sub
mov
negb
loop
cmpsb
out
push
sub
fdivl
pop
mov
outsb
push
and
dec
push
push
test
fcoml
mov
and
mov
inc
lret
inc
xchg
dec
adc
and
mov
lods
pusha
out
xor
and
cltd
pop
fstl
data16
xchg
add
lock
cmc
scas
in
mov
jb
jno
stos
testb
jmp
inc
pop
or
in
lea
inc
cmp
jo
aad
mov
push
or
pop
add
pop
push
pusha
call
jmp
fwait
mov
clc
loop
aad
ja
cmpsb
lock
ret
stos
dec
pop
or
daa
pushf
call
pop
jl
pop
add
clc
xchg
int
outsl
xor
hlt
addr16
pop
lods
xor
xchg
cmp
hlt
fprem1
popf
fldt
pop
push
sbb
rcrb
insb
mov
jmp
pushl
pop
and
dec
jno
and
mov
lods
push
out
jbe
mov
int3
clc
jl
fcmovnb
sbb
xor
push
imul
outsl
xchg
pusha
ja
jae
sbb
pop
test
and
and
mov
dec
sbb
push
push
aam
pop
or
or
jnp
cmpsl
pop
pop
ja
test
xchg
cltd
testl
call
sub
loop
push
push
repnz
ja
test
leave
movsl
cs
dec
out
mov
jae
xlat
jmp
mov
nop
mov
ljmp
outsb
test
lods
call
cmp
fs
push
xor
repz
cltd
cmp
int
push
pop
fstl
aas
sbb
adc
movsl
pop
lods
sub
sbb
vxorps
push
inc
mov
sbb
fstpl
inc
iret
jne
mov
mov
xchg
popa
outsb
lods
fdivl
mov
mov
lahf
cmp
lahf
jbe
jo
shl
pop
loop
mov
mov
xchg
fldcw
pop
and
js
and
pop
pop
sub
mov
sub
repnz
jae
xor
xchg
jno
fwait
cmp
punpckhdq
stos
aas
or
inc
or
pop
xorl
push
xor
pushf
push
fidivs
dec
call
fwait
shlb
sub
mov
out
xor
lods
mov
sub
mov
adc
daa
mov
mov
cmp
fs
mov
or
xchg
sbb
pushf
sahf
xor
stos
xchg
mulb
dec
daa
js
xor
aas
inc
mov
aas
cli
js
xor
into
push
pop
jnp
shlb
sti
je
sub
pop
notb
cwtl
lds
cmp
lret
adc
popl
cltd
js
lea
fbstp
popf
hlt
mov
in
xchg
outsl
jg
dec
dec
inc
xchg
push
test
push
push
push
int3
xchg
ficompl
or
inc
lea
mov
or
pop
shl
cmc
inc
push
jg
outsl
adc
pop
xchg
inc
sub
pop
fldenv
pop
jp
dec
call
int
adc
and
sub
fbld
mov
mov
xchg
sbb
mov
inc
mov
push
mov
cmc
call
push
mov
daa
sbb
inc
sti
dec
loope
mov
out
and
lds
fwait
sub
scas
mov
mov
ljmp
test
add
and
mov
lock
repz
dec
mov
xchg
addl
push
push
addl
cld
or
adc
test
and
cmp
ss
add
test
dec
jecxz
push
int
mov
xor
aaa
inc
lcall
arpl
mov
sbb
cmp
adc
and
lds
divl
outsb
lret
cltd
clc
lahf
in
push
inc
out
out
loop
mov
or
mov
lds
dec
sbb
flds
mov
sbb
mov
out
pop
mov
adc
push
add
push
jns
out
mov
or
test
jbe
xchg
inc
les
jb
mov
push
pushf
pop
sbb
lea
add
sbb
bound
xchg
insb
mov
dec
mov
pop
repz
imul
pop
xchg
dec
lret
pop
inc
js
pop
jo
add
adcb
stos
lcall
inc
in
jae
stc
cltd
jb
or
adc
xchg
mov
loope
mov
sbb
fsts
xor
cmp
or
cmp
mov
xor
adc
std
popf
repz
hlt
or
mov
aam
xchg
in
jbe
pop
stc
in
pop
pusha
pop
mov
mov
push
fmul
fcmovb
jg
pop
popa
mov
jbe
cmpb
inc
dec
popa
xor
inc
mov
das
jp
jp
mov
fdivrp
jmp
js
outsb
clc
fsubr
push
dec
gs
repnz
sahf
push
lods
in
or
inc
pop
fcoms
loopne
inc
sbb
inc
jp
aaa
dec
pusha
inc
sub
dec
dec
cld
sbb
addr16
push
mov
ret
cs
test
outsl
lods
movb
pop
add
push
movsl
repz
adc
aaa
mov
fsubl
ss
std
loope
xchg
fwait
out
repnz
das
ja
jmp
enter
mov
out
cs
test
jns
dec
sbb
pop
add
xchg
ja
mov
hlt
pop
inc
dec
inc
xchg
adc
out
cmp
or
daa
dec
jns
adc
dec
push
dec
leave
fildll
cmovno
cmp
divl
aas
mov
dec
xchg
hlt
adc
sub
xchg
hlt
neg
sbb
dec
sub
inc
popf
mov
testb
adc
xor
fdivl
lret
and
cli
add
out
or
shll
xchg
push
testl
sub
push
fcmovu
lahf
inc
in
xchg
jne
into
add
inc
lcall
mov
push
sbb
mov
push
adcb
sbb
jg
pop
push
insb
int
cs
cmc
or
sbb
pop
xchg
scas
mov
cmp
cmp
pop
cmp
hlt
xor
add
pop
mov
sub
xorb
test
xor
lret
icebp
xorl
sahf
mov
mov
sub
xchg
pop
popa
push
and
pop
dec
add
mov
divb
and
mov
jae
jne
movsl
adc
add
sub
ja
jp
inc
loopne
cltd
in
add
dec
into
ffreep
cmp
xor
fmuls
add
int3
ss
int
daa
mov
dec
xchg
out
xlat
leave
out
dec
adc
cmpsb
push
jl
ds
xchg
nop
out
push
xor
fmuls
add
push
subl
ficomps
lea
repz
in
fiaddl
jmp
add
scas
mov
leave
jb
outsl
rclb
in
neg
xor
and
adcl
sbb
push
cmp
fists
xchg
lahf
test
dec
cmp
adc
test
int
cmpsb
sbb
sbb
or
bound
mov
jno
addr16
pop
mov
jb
loop
mov
mov
xchg
popa
pop
and
inc
pop
in
push
mov
xchg
dec
xor
push
cltd
imul
adc
dec
jne
testb
icebp
pop
sbb
imul
repnz
xchg
arpl
pop
ja
shrb
xor
sbb
jg
jo
jecxz
out
jecxz
std
lods
pop
pop
inc
xchg
mov
mov
lods
stc
scas
push
push
ss
sbb
mov
dec
orb
out
pop
inc
lret
dec
or
jae
pop
xchg
jp
xchg
shlb
push
cmpsb
pop
dec
add
arpl
dec
xchg
scas
popf
mov
push
and
int
aam
cltd
ret
outsb
cmpsb
inc
das
xor
and
jl
dec
push
cmp
ret
and
xor
popfw
clc
push
pop
cmpsl
xchg
decl
dec
pushf
xor
mov
push
sbb
mov
push
mov
mov
loop
lret
mov
or
and
mull
mov
xchg
pop
cmp
pop
cltd
jno
into
dec
mov
aad
sahf
dec
xchg
arpl
push
sbb
dec
push
xchg
xor
push
and
mov
loope
xor
mov
add
jbe
or
jge
addr16
mov
aas
push
jp
and
pop
cmp
dec
ret
movsb
mov
shlb
jmp
pop
inc
lds
xor
sarb
jg
xlat
or
filds
and
xor
enter
out
sub
std
clc
test
std
sarb
xor
stos
test
cmp
pushl
push
mov
xor
mov
test
rcr
std
pop
lds
add
mov
or
mov
pop
rcl
mov
cld
pop
nop
lock
daa
fs
enter
jne
xchg
mov
mov
shr
push
add
fsubs
adc
fstpt
mov
cmp
sbb
imul
jmp
pop
pusha
jns
fisubl
lcall
mov
or
test
dec
movsl
or
mov
sbb
in
inc
int3
imul
or
sub
and
push
jmp
pop
xlat
es
test
sub
loopne
iret
adc
and
flds
sarl
dec
pusha
outsb
fmuls
rorb
icebp
int3
iret
pcmpeqb
imull
icebp
dec
dec
jmp
test
mov
addb
mov
sahf
cmp
adc
lret
test
xlat
ror
lret
sub
cmp
icebp
push
insb
daa
sub
push
das
subl
and
bound
movsb
insb
jg
push
sbb
test
pop
out
inc
mov
pop
mov
out
mov
leave
or
xor
cmp
jns
daa
imul
iret
mov
pushf
push
pop
and
mov
scas
pop
inc
cmpsb
xchg
std
arpl
out
pop
mov
hlt
out
pop
xchg
xor
ja
dec
mov
pushf
push
repnz
sbb
mov
push
push
insb
sub
sti
and
push
mov
mov
popa
sub
mov
es
cmp
rcr
adc
mov
pop
out
in
and
loopne
in
movlps
mov
in
leave
dec
ljmp
pop
fwait
mov
and
hlt
es
ljmp
nop
ret
adc
daa
ret
mov
andl
jns
js
push
cmp
scas
cmp
clc
subl
ret
sti
cmpsb
stc
mov
sub
pop
inc
push
hlt
xlat
daa
sbb
pop
fisubrl
test
fcmovne
sti
repz
mov
sbb
mov
mov
push
jbe
pop
mov
fistpl
or
psrad
std
sbb
inc
aas
dec
mov
cwtl
ret
ret
ljmp
pop
and
mov
cmc
cli
push
xchg
imul
mov
loop
jmp
std
lahf
or
daa
repz
push
mov
add
cli
inc
fstps
pop
ret
or
lret
and
fdivrl
and
pop
xchg
inc
sub
mov
sub
sub
inc
dec
mov
in
xchg
push
js
popf
pop
push
std
shlb
adc
mov
shll
lahf
test
or
aas
fdivrs
inc
or
cmp
outsb
movsl
xor
push
push
fistpll
call
mov
imul
cmp
add
fcmovnb
jl
adc
jne
push
lahf
inc
sbb
jp
rcl
jl
hlt
mov
pop
adc
pop
and
push
in
xor
fnsave
das
repz
jecxz
cmp
mov
cmpsb
loop
push
shrl
orb
in
pop
mov
out
mov
mov
out
push
hlt
icebp
pop
mov
inc
xor
adc
shr
bnd
lret
pop
mov
mov
mov
insb
mov
rcll
repnz
sbb
adc
jp
adcl
mov
cmpsl
outsb
pop
pushl
jb
rorl
jg
mov
pop
pusha
movsl
mov
lcall
adc
xchg
bound
bound
inc
mov
enter
push
outsl
ljmp
popf
fistpl
sbb
mov
fs
js
sbb
mov
mov
pop
jmp
loopne
addb
and
fwait
out
mov
cmp
jecxz
xchg
out
stos
shrb
ret
dec
xchg
add
sub
jle
cmpsl
mov
mov
insl
inc
push
fwait
lret
adc
and
test
stc
mov
jl
and
pushf
leave
loop
dec
push
lods
mov
inc
cltd
and
sbb
xchg
cmp
cmp
push
xor
mov
les
xor
das
jno
fcoms
and
stos
pop
leave
dec
pop
in
push
xor
test
ja
hlt
jmp
xchg
bound
cmp
fldenv
lcall
lcall
lock
sbb
pop
imul
fnstcw
sub
mov
aas
push
pusha
push
cmp
cmp
push
bnd
jb
rorb
fwait
jb
inc
lock
insl
mov
and
arpl
cmp
fisubrl
js
nop
push
loopne
adc
push
jge
push
dec
cmp
and
test
in
cmp
out
outsl
ljmp
jl
dec
or
lret
cld
testl
loopne,pn
jns
cmp
pop
loopne
sarb
lods
xor
and
sbb
mov
xchg
sub
out
cmp
and
imul
loop
sub
outsl
fldt
and
sahf
rcll
mov
mov
js
mov
dec
loope
decl
fiaddl
adc
or
and
js
dec
mov
adc
cwtl
add
pop
imul
ds
add
into
add
xchg
pop
fdivr
xchg
in
shrb
and
sahf
xor
push
lods
movsl
push
pop
add
fnstsw
cltd
push
dec
loope
sub
stos
add
and
ret
cmpsl
push
push
aas
add
sub
sarl
pop
xlat
insl
mov
xchg
xor
xor
xchg
jns
xchg
adc
ja
fildll
clc
cltd
nop
push
ret
pop
notb
jbe
mov
scas
sarb
aam
add
cltd
cmp
std
out
and
inc
insl
scas
lds
and
mov
mov
insb
lahf
mov
mov
scas
mov
xor
jne
arpl
addr16
sti
inc
lods
enter
rcr
scas
jb
ret
mov
jae
cmp
inc
fcmovnu
fistpll
mov
mov
mov
ret
xor
or
dec
iret
lds
loopne
mov
outsb
dec
ja
jle
jbe
popfw
pop
mov
loop
lds
sub
jne
mov
fs
sub
xchg
and
jecxz
xor
dec
jl
xchg
inc
push
fwait
pop
jp
insl
or
mov
jns
js
lcall
lcall
popa
mov
jno
into
dec
pusha
shl
repnz
cmp
sbb
jp
lcall
out
push
adc
push
dec
lds
jnp
cmp
add
mov
sbb
jo
jp
hlt
push
jns
cld
inc
cmpsb
testl
gs
sbb
fstps
sub
outsl
sub
popa
into
cmp
loope
shr
pop
ds
cmc
ds
pusha
in
pop
adc
fs
imul
push
adc
ror
sub
nop
mov
insl
pop
jp
sti
in
lods
movsb
imul
rorb
data16
cmp
sbb
adc
add
aas
inc
pop
outsb
xchg
push
dec
mov
lret
xor
sbb
mov
jo
aaa
cld
or
ds
sub
jl
xchg
jecxz
jle
xor
data16
shrb
stos
jp
stos
push
mov
shlb
mov
cmpsl
cwtl
adc
sub
sub
lods
sti
mov
dec
sbb
stos
sti
pop
mov
add
pop
adc
jb
shl
test
gs
shl
shlb
mov
lea
daa
inc
push
mov
push
aaa
lret
dec
aas
push
icebp
loop
movl
aas
cmp
lret
sbb
dec
out
popf
mov
aad
mov
loopne
testb
mov
or
jecxz
pop
daa
dec
or
jne
push
mov
and
pop
nop
lock
xchg
ja
jmp
xchg
fisttpll
xchg
outsb
sbb
adc
fldenv
add
dec
leave
lock
loopne
ret
stos
push
orl
gs
or
dec
idivl
repnz
sbb
sti
je
les
and
mov
mov
inc
cmp
xor
or
repz
and
pop
ljmp
fstpl
lods
sti
add
pop
push
addb
icebp
aam
xchg
pop
fprem
int3
mov
mov
movsb
cmpsb
xchg
cmp
inc
std
ret
cltd
jae
mov
lahf
mov
arpl
jmp
ja
dec
imul
pop
pop
pop
adc
mov
lds
xchg
loop
mov
fildll
std
adc
mov
shr
push
jb
xchg
push
inc
or
dec
lret
jmp
mov
jl
xchg
cmpsb
jno
into
or
nop
jge
in
dec
sbb
ret
loop
rorl
addl
jb
test
sub
xor
pop
sti
jb
imul
adc
sti
sub
sbb
mov
out
mov
orl
adc
sub
and
mov
insl
and
or
lds
hlt
xchg
and
cli
dec
pop
dec
sar
add
dec
arpl
mov
inc
mov
dec
jne
repnz
push
xor
push
repnz
sbb
push
loope
push
jmp
pop
xchg
fmulp
pop
mov
pusha
daa
arpl
addb
movsl
aad
pop
mov
lcall
sbb
push
push
inc
insb
sbb
lcall
cltd
inc
mov
dec
xor
cmp
rol
and
test
cmp
cs
repnz
cmpsl
jne
xor
pop
ja
cmp
rorb
sahf
push
sbb
or
cmp
aaa
adc
fisttps
mov
aas
xor
cmp
mov
ss
mov
dec
in
push
mov
inc
outsl
mov
dec
mov
jl
inc
mov
jp
push
or
fdivrs
pop
push
cmc
je
nop
test
sub
and
imul
cmpsb
sahf
popl
daa
movsl
mov
add
in
sub
push
jns
mov
cli
es
inc
fildl
push
sub
clc
es
std
fsubl
inc
xchg
inc
jl
shrb
jno
icebp
repz
jp
xchg
push
dec
lods
and
inc
cmp
fmul
cmpsb
mov
inc
mov
rorb
bound
adcb
outsb
sub
or
sub
int3
add
inc
or
stc
sbb
cmp
fcmovnu
jbe
pop
pop
enter
mulb
pop
nopl
mov
jmp
jp
ljmp
adcl
or
add
js
mov
jns
pop
push
icebp
mov
addr16
rclb
sbb
inc
mov
out
cmp
sub
fwait
inc
outsb
repz
push
insl
push
mov
ret
xor
insb
cs
jbe
inc
sub
aam
push
pusha
es
in
add
in
inc
pop
out
dec
mov
pop
xchg
arpl
mov
dec
add
xor
repnz
jae
je
cmpsb
hlt
nop
pop
jle
mov
movsb
std
adc
cmp
rcrl
and
lods
aad
sub
popa
pop
mov
push
lock
lods
jmp
add
orb
inc
sub
outsl
push
sbb
stos
and
push
add
out
mov
push
pop
mov
incl
out
or
cli
lds
xor
xor
dec
push
call
mov
insl
jne
add
sbb
mov
adc
ret
cltd
and
inc
push
sub
mov
mov
lods
push
gs
or
add
or
mov
dec
sbb
jge
aaa
mov
xchg
push
adc
gs
es
movsl
add
js
push
mov
mov
data16
out
sub
and
adc
xor
lret
imul
mov
add
sar
jbe
mov
ret
mull
lret
mov
adc
mov
sub
xchg
aas
sub
je
stos
xchg
shr
mov
sti
rcll
inc
xchg
pop
ja
ss
leave
mov
out
xor
outsl
xchg
mov
cltd
mov
cmp
jns
lret
mov
adc
pop
lods
imull
cmp
dec
lods
and
aas
movsl
xor
sbb
out
fisttpl
movsb
in
lods
ja
pop
bound
xor
xor
xchg
jb
adc
inc
inc
inc
xor
ja
push
std
and
push
or
lgs
xchg
lock
jb
sbb
mov
imul
test
push
push
or
cwtl
call
ds
add
enter
or
inc
push
call
cmp
shlb
nop
sub
mov
out
sbb
push
xor
xor
push
xchg
sysenter
pandn
pop
xor
inc
gs
mov
and
cmpsb
dec
push
arpl
loopne
sub
mov
and
fcmovbe
mov
dec
xor
pop
loopne
adc
sub
dec
stos
dec
mov
push
aaa
adc
or
xchg
or
xlat
fdivrs
out
std
or
inc
lods
add
test
in
imul
call
xchg
fdivl
mov
and
jg
add
shlb
nop
bound
je
push
ret
mov
test
popa
loop
pop
shl
sub
jp
pop
adc
movsb
jae
xor
cmp
jp
movb
popf
enter
and
mov
movl
inc
pop
arpl
mov
pusha
arpl
cmpb
inc
adc
xor
inc
pusha
dec
xchg
clc
incl
ret
push
out
frstor
roll
out
aam
mov
dec
inc
pop
ljmp
int3
adc
inc
lret
scas
sub
push
aas
and
popf
xchg
pop
push
ret
orl
in
jl
sarl
cld
mov
mov
cmp
adc
adc
pop
inc
fdivr
bound
bound
or
test
lcall
inc
pop
add
loop
cmp
mov
es
mov
jnp
xor
xor
and
int
adc
dec
imul
add
xchg
mov
mov
lds
xchg
in
sbb
push
out
and
lahf
adc
mov
ljmp
sub
mov
in
loopne
sub
jb
icebp
mov
xlat
fs
dec
mov
pop
in
dec
subb
xor
jmp
dec
into
je
aas
nop
xor
lret
push
in
lds
repnz
mov
repz
aaa
aam
mov
in
mov
daa
aam
xchg
dec
repnz
jbe
in
pop
pop
pusha
std
cld
jge
dec
jae
stos
inc
es
xchg
push
xchg
out
jnp
push
shrl
loope
cltd
xor
movsl
pop
mov
roll
es
aam
pushf
outsl
or
cmp
mov
out
push
pusha
testl
sarb
icebp
jmp
mov
inc
adc
andl
jle
fstps
rcrb
push
movsb
mov
and
xchg
jb
or
push
outsl
inc
adc
ja
adc
dec
nop
xor
push
push
outsl
inc
mov
jo
lea
sub
addr16
pop
sar
push
shl
fmull
rorl
dec
imul
and
enter
dec
cmp
push
and
mov
push
in
cmp
pop
inc
add
out
in
cs
ret
pop
enter
nop
sbb
mov
out
dec
cld
xchg
je
and
mov
cmp
dec
jecxz
push
sarb
inc
jg
sahf
popa
mov
bound
xchg
stc
add
xor
jae
cltd
push
rclb
leave
sbb
push
dec
ret
imul
stc
lcall
out
cmp
lret
mov
mov
push
cmp
or
repz
clc
push
xchg
call
cmp
fadds
or
lahf
mov
fmuls
jecxz
and
xor
sbb
out
fs
mov
mov
push
mov
push
add
lcall
outsl
cmc
daa
popf
test
push
inc
pop
cmp
xor
adc
xchg
in
cmpsl
xchg
push
jge
inc
in
lcall
mov
and
gs
mov
aas
jle
sub
aam
sarb
sbb
stos
mov
jg
mov
mov
jno
or
arpl
jmp
in
jns
icebp
jbe
sarl
sub
push
push
xchg
xor
mov
jmp
push
or
xchg
inc
fdivl
sub
push
or
push
sub
push
mov
sahf
pop
hlt
out
jecxz
fs
jo
dec
jno
xchg
jmp
push
or
pop
pop
inc
loope
daa
lock
inc
fs
cmp
int3
stos
lds
mov
xchg
sbb
or
mov
dec
jae
pop
xor
notl
pop
and
xchg
jle
out
add
daa
aad
leave
popf
loope
pop
push
and
jbe
lahf
sub
and
and
cmc
add
add
mov
xor
ljmp
in
inc
icebp
into
xor
or
in
popf
mov
push
cmp
fistpll
insl
inc
dec
lods
enter
fsubs
in
jge
cmp
inc
je
pop
inc
loopne
dec
mov
ja
pop
push
dec
push
jmp
je
fstpl
imul
push
pop
enter
les
and
cli
in
pusha
test
dec
addr16
mov
or
insb
xchg
pop
loope
sbb
mov
aam
jp
adc
cmpl
push
rcrl
or
jbe
sbb
adc
cwtl
sub
sub
cmpl
lods
std
pushf
icebp
fnsaves
sub
gs
fwait
mov
stos
stc
negb
or
bound
mov
jmp
inc
jle
inc
xor
adc
mov
addr16
repz
std
mov
dec
add
mov
je
push
push
stc
pop
sub
addr16
daa
loopne
mov
or
enter
in
xchg
sar
jg
sbb
push
inc
in
inc
add
fmuls
out
inc
mov
mov
xor
test
dec
mov
mov
or
dec
aam
in
outsb
test
inc
std
sub
sti
ljmp
fsts
lock
sbb
inc
pop
fsubrl
jo
push
cld
js
sbb
inc
cmc
inc
mov
mov
int3
ret
sub
jl
out
mov
add
shrl
or
push
mov
inc
loop
rclb
jne
hlt
popa
dec
push
jle
mov
ss
mov
ret
loopne
fstps
xor
push
not
std
push
sarl
xor
sub
push
cs
sub
or
mov
insl
sbb
repnz
lahf
or
pusha
int3
dec
adc
sub
inc
dec
add
jne
ficomps
cmp
mov
in
xchg
lea
inc
repnz
or
jae
lods
insb
mov
mov
addr16
jbe
adc
ja
stc
xor
inc
scas
adc
je
test
jne
es
movsb
daa
es
mov
dec
shlb
in
jmp
pop
mov
sub
cld
lahf
negl
jle
int
shl
cs
push
jae
mov
mov
testb
sub
and
pop
std
push
add
rcrb
pop
out
inc
and
mov
mov
xchg
pushf
xchg
push
leave
lea
xor
icebp
test
rorb
pop
stos
sbb
jo
and
pop
dec
mov
pop
lods
pop
cli
ret
cmp
lret
push
mov
xchg
repz
sbb
sbb
fcoml
and
stc
push
xor
out
or
lcall
ja
out
mov
les
rcl
std
adc
jge
stos
movsl
out
out
stc
popa
mov
mov
imul
jp
out
inc
gs
gs
inc
mov
leave
cwtl
jo
mov
pop
mov
lahf
push
jg
mov
cmpsl
inc
inc
test
fcmovu
decl
and
arpl
jnp
xchg
xor
inc
stos
fisttpl
jns
sti
outsb
push
xchg
femms
nop
inc
nop
push
in
sbb
outsb
mov
in
je
int
jle
inc
lock
call
ljmp
push
outsl
sbb
popf
inc
out
fs
jns
outsb
xor
sbb
and
push
adc
inc
mov
or
mov
stc
rol
mull
loope
inc
add
into
cmc
or
cmp
xor
cmpsb
adc
cmp
rorb
lahf
inc
mov
pop
push
push
inc
aam
mov
xor
ljmp
fsubrl
movsb
push
jmp
mov
sub
xor
xchg
cmp
daa
movsb
jb
ja
rorl
aad
into
insb
and
mov
dec
mov
lea
js
dec
gs
dec
arpl
mov
std
hlt
or
sub
nop
sub
dec
mov
loop
push
xchg
jg
mov
testb
and
sbb
ljmp
mov
jno
std
inc
cmp
sub
nop
dec
inc
lret
dec
xchg
pop
cltd
sub
and
sub
xchg
push
out
push
dec
enter
cwtl
xor
cmp
sbb
out
sub
mov
dec
xorl
pop
hlt
fstl
cmpb
loop
xchg
les
fdivrs
test
xchg
scas
mov
ss
movsb
sbb
andb
lret
out
inc
sbb
mov
push
insb
sbb
cmp
sub
in
mov
mov
xor
push
mov
maskmovq
les
out
pop
mov
cmp
xlat
mov
xchg
mov
xchg
leave
inc
lret
mov
lods
dec
rcr
clc
pop
add
jecxz
mov
cld
inc
pusha
dec
fs
mov
idiv
loop
jl
jp
idivl
out
sbb
jl
cltd
lds
nop
pop
xor
xchg
pop
les
divl
lcall
lcall
jae
mov
push
inc
imul
or
std
jg
movsl
push
mov
outsb
sbb
push
std
inc
sbb
sahf
idivl
mov
dec
arpl
jecxz
cmp
jmp
insb
movsb
mov
test
cmp
nop
rclb
les
xchg
mov
jno
xchg
insl
push
sub
les
push
mov
je
xor
es
scas
enter
aaa
nop
pusha
insl
fwait
rolb
gs
jne
push
popf
or
dec
int3
aam
or
mov
lock
jno
mov
idiv
xchg
mov
xchg
jae
xlat
mov
out
dec
add
dec
sbb
pop
mov
outsb
push
insb
cmovl
pop
xor
xor
cmp
repnz
add
sbb
and
test
hlt
out
and
add
stos
divl
pop
cmp
lock
push
mov
dec
fs
xorb
xchg
sbb
sub
inc
jecxz
jbe
jle
sub
jno
jl
or
dec
ss
in
aad
or
jle
movsl
xchg
mov
mov
jb
out
pop
jne
dec
or
mov
std
lock
in
cmp
into
sub
push
mov
ds
inc
into
add
xor
sbb
cmc
in
lret
repz
jbe
cmp
xor
arpl
push
popa
and
push
repz
xor
hlt
adc
mov
cmp
sub
ds
or
jl
aaa
imul
enter
sahf
mov
xor
sbb
pmulhw
addr16
mov
cs
loope
lods
stos
xchg
test
pop
inc
pop
in
cltd
xor
ja
into
inc
sbb
mov
in
dec
mov
sbb
sbb
cltd
add
push
jle
mov
sti
fidivs
fs
adc
mov
jbe
jl
or
or
jl
in
and
xor
in
call
push
push
lock
push
lret
and
rcrb
insb
pusha
push
push
pop
push
dec
push
xchg
rcll
push
push
mov
push
mov
repz
dec
call
or
fnstenv
cs
sbb
adc
sub
and
mov
lcall
push
clc
xchg
or
int
loop
fstl
cmp
mov
push
and
mov
adc
pop
mov
insb
and
push
jnp
gs
jbe
cmp
push
jnp
cmp
mull
pop
cmp
fisttpl
imul
repnz
xor
test
lret
imul
ret
pop
sbb
adc
cmp
inc
cmp
sub
out
jg
stc
in
push
sbb
ficoml
sub
ljmp
push
insb
mov
sarl
pop
pop
ret
lock
mov
cmpsl
pushf
inc
andl
adc
add
mov
pop
in
push
pop
std
xchg
fdivr
adc
leave
cmp
jmp
in
popa
push
mov
mov
pop
cmpl
andl
insl
aad
pop
int3
mov
cld
inc
cmp
and
das
out
jo
inc
push
das
jmp
push
cmpsb
mov
repnz
push
stos
int3
fwait
push
xchg
idivl
sbb
rclb
inc
xchg
fnstsw
xlat
cmpsl
enter
pop
out
outsb
in
inc
push
push
lods
push
cwtl
jnp
mov
sbb
std
in
imul
iret
fwait
sbb
push
add
notb
mov
shll
orb
leave
data16
outsl
insb
icebp
dec
and
mov
aam
or
jp
sbb
jns
mov
mov
cmp
aaa
or
icebp
rorl
inc
sub
cld
imull
loope
or
jl
xchg
sbb
dec
push
mov
xlat
inc
imul
jge
es
sbb
mov
pop
xchg
aaa
out
mov
sar
mov
push
dec
pop
loopne
adc
mov
mov
cltd
adc
insb
xchg
scas
lret
cmpsl
test
mov
fmull
push
xchg
cmp
test
cmp
xchg
adc
popa
sub
aad
or
mov
sahf
push
call
lea
push
sarl
iret
imul
ljmp
pusha
sahf
fdiv
sbbb
repz
jl
mov
cmp
or
mov
inc
dec
pop
sub
sub
mov
fstpl
dec
push
pop
mov
cmpsb
push
cmpsb
lcall
cmp
mov
xchg
push
iret
fdivrs
adc
aas
jg
mov
je
call
fbstp
push
mov
sub
inc
jmp
movsl
pop
mov
or
les
rclb
adc
pop
push
cmp
sbb
pop
mov
push
inc
push
cmp
add
cli
or
jmp
lret
dec
std
sti
mov
std
std
sub
mov
enter
mov
outsl
xor
fs
mov
js
pop
jno
out
icebp
mov
inc
hlt
sbb
out
inc
add
lret
and
add
push
cmp
je
jmp
fcomps
and
lret
mov
hlt
cmp
sub
fstl
add
lret
xor
and
dec
push
sbb
and
cmpsl
mov
jns
cmp
mov
mov
sar
inc
add
js
mov
jecxz
movsl
dec
subl
xor
sbb
mov
xchg
mov
push
sbb
sbbl
push
jb
shlb
mov
lret
movsb
jb
mov
int
aaa
cmp
les
rclb
jns
call
mov
fnsave
sbbl
aaa
out
pop
mov
jl
adc
fdivrl
fnsave
mov
dec
xor
insb
and
pop
sub
in
cmp
or
out
movsb
popf
nop
andb
inc
leave
dec
push
mov
bound
pop
jl
out
adc
cs
and
push
popf
sub
fists
xchg
ret
dec
xor
mov
or
mov
pop
scas
jne
push
lret
adc
push
loope
adcl
subl
mov
daa
aaa
adc
js
dec
dec
sti
insb
jns
mov
cmpsb
call
sti
pop
mov
mov
cmp
ja
out
les
clc
and
das
cli
mov
jmp
gs
mov
jmp
out
xchg
sbb
mov
cmp
push
push
out
mov
mov
or
std
dec
inc
fimull
xchg
mov
ss
loopne
out
adc
movsb
xor
addl
pop
sbb
adc
mov
mov
ljmp
ja
push
lcall
ret
mov
cmpsb
lcall
sbb
ja
xchg
add
sub
xchg
mov
and
jno
xor
sub
vaddsd
test
arpl
sti
pop
leave
mov
inc
inc
push
mov
mov
cmp
add
inc
cmovp
jecxz
call
xor
fmuls
adc
and
sub
adc
test
out
cmp
xorb
xor
das
out
stc
std
jmp
inc
cmp
xchg
jle
mov
jne
pop
xchg
sbb
movl
jge
mov
xor
add
dec
fldt
test
pushf
dec
push
mov
imul
sbb
jl
inc
hlt
shll
push
mov
clc
cmp
lcall
inc
cwtl
aad
mov
mov
push
repnz
lret
hlt
pop
jne
aad
xchg
mov
add
cli
jge
clc
fisubrl
push
pop
in
addr16
scas
jnp
xor
mov
xchg
outsb
add
add
inc
push
xor
add
add
jne
int
imulb
cmpsl
nop
data16
inc
dec
jge
ja
mov
jne
xorb
mov
adc
inc
in
push
sar
sahf
sbb
aaa
movsl
roll
push
add
mov
ljmp
mov
test
test
popa
jb
lahf
fbstp
enter
in
sub
std
popa
cmp
xor
push
pop
ficomps
jbe
and
jecxz
xor
jmp
mov
jge
repz
ficompl
push
pop
push
negl
adc
insb
fistpll
inc
loopne
xchg
int
xchg
repnz
cmp
cmpsb
aas
jl
and
push
lcall
scas
push
or
mov
mov
repnz
jecxz
inc
add
mov
jbe
dec
xchg
pop
fcos
out
jecxz
movsb
jnp
jp
adc
cmp
ror
jb
sub
add
pop
movsb
xchg
mov
andl
loopne
icebp
daa
jge
dec
ss
jmp
adc
pop
xchg
aas
imul
rorb
arpl
inc
imul
add
push
cmc
sub
mov
inc
jmp
and
cli
or
push
ljmp
rcll
aaa
sti
scas
lea
push
sbb
das
mov
je
xor
push
hlt
add
mov
sbb
outsb
imul
dec
sbb
and
xchg
jb
and
addr16
push
fmull
int
jae
xchg
adc
mov
mov
out
out
sar
sahf
clc
and
jecxz
shll
addb
sub
loope
roll
mov
sbb
scas
test
add
cmp
sbb
gs
cwtl
rclb
jl
mov
xchg
mov
xor
inc
mov
loop
pop
lds
dec
divl
mov
mov
mov
cltd
xchg
cmpsb
and
push
sahf
lahf
outsl
xchg
inc
sbb
imul
arpl
icebp
mov
push
inc
shl
aad
cmp
mov
scas
std
pop
inc
inc
scas
into
push
push
vcmpsd
icebp
push
cmpsl
mov
sub
xchg
add
dec
inc
and
addr16
sub
jle
or
jae
sbb
insb
pop
mov
adc
clc
inc
and
test
mov
call
pop
push
add
mov
dec
add
push
lods
sarb
notb
loope
je
addb
data16
mov
clc
dec
xchg
jmp
sub
minps
add
std
mov
pop
cmp
clc
iret
in
movsl
loope
sbb
repz
popf
mov
getsec
stos
mov
into
push
mov
cmpsb
fwait
sbb
jecxz
xor
sub
xchg
sbb
push
mov
mov
pop
add
popf
cld
or
rorb
mov
jb
jp
push
cmp
xchg
fisubrl
jg
cmp
jno
lds
data16
ss
test
sub
and
mov
scas
sub
or
sbb
sbb
addr16
jg
popa
jle
sbb
je
and
sahf
xchg
ss
repnz
jecxz
test
add
mov
cmp
das
dec
push
mov
cmpsb
popa
jns
cmp
clc
ret
xlat
pop
xor
outsb
loop
add
fildl
loop
and
sbb
add
enter
mov
push
push
in
es
or
int
xor
popf
sub
ljmp
mul
push
in
sbb
insl
scas
adc
js
xor
in
push
stc
jne
test
xchg
jmp
sti
ficompl
mov
fsubp
mov
jmp
int
sahf
add
xor
int3
pushf
add
addb
pop
shrl
lea
rcl
pop
lret
cmp
pop
pop
push
ror
test
ret
popa
nop
cmc
loope
aaa
cmpsb
push
jo
shll
pop
cmpb
bound
jge
mov
xchg
jl
sub
or
sbb
sub
jnp
xorb
pushf
xor
test
sub
pop
xchg
or
and
cmp
out
test
lds
mov
jbe
dec
push
xchg
arpl
cli
xchg
pop
imul
push
and
xlat
mov
pop
gs
imul
mov
push
lds
fcoml
push
pop
and
mov
int
add
push
sti
or
rolb
outsl
fsubl
stc
call
push
or
dec
pop
dec
je
js
push
sbb
xchg
ret
mov
push
push
dec
cwtl
fld1
lock
jl
xchg
nop
div
cli
jmp
xor
xor
stc
sbb
xchg
mov
js
pop
jae
inc
pushf
hlt
nop
movsl
pop
adc
inc
rcr
ja
movsbl
pop
pusha
loopne
pop
fwait
dec
loop
lea
adc
jnp
push
daa
xor
addb
jecxz
push
dec
fmulp
stos
cmp
in
xchg
inc
add
js
loop
ja
xchg
nop
push
mov
rcll
mov
fidivs
dec
xor
inc
in
push
sarb
sahf
and
xor
jmp
mov
fcoml
xor
jl
into
popa
fistps
ds
stc
jle
rol
fnstcw
push
xlat
cmpsb
loope
adc
bound
fdivs
push
out
pop
je
lret
or
inc
ljmp
arpl
lcall
push
inc
jns
movsb
pop
sbb
mov
mov
inc
fbld
xchg
adc
dec
cwtl
xchg
enter
faddl
or
jb
push
sbb
xchg
sub
cmp
xchg
lods
gs
pushf
cmp
rcl
lret
jp
pop
movsl
push
movsb
xlat
lods
dec
incb
mov
enter
pushl
das
pop
inc
dec
hlt
push
push
les
cmpsl
jp
scas
pop
mov
pop
inc
xchg
cmpb
pop
push
icebp
push
daa
mov
mov
cli
xchg
icebp
inc
aas
loopne
sub
and
fs
adc
call
sub
push
or
cs
jecxz
les
lock
test
mov
stc
cmp
sbb
cmpl
mov
jno
cmp
jno
add
stc
mov
jp
xlat
nopl
das
push
and
sbb
lods
add
push
and
fimull
out
sbb
sarl
mov
pop
daa
frstor
ret
into
mov
push
daa
mov
lret
inc
sbb
loopne
test
popa
and
push
int
hlt
pop
dec
loop
sub
incl
iret
cli
popa
mov
and
lea
mov
or
rorl
fwait
bound
sbb
xor
mov
or
jns
sti
push
clc
test
pop
push
stos
jns
in
or
shrb
int
test
push
mov
cmp
xor
loopne
jns
dec
popa
in
dec
cmp
inc
in
dec
fnclex
add
addr16
lods
mov
pushf
push
mov
andl
or
test
mov
cmp
cwtl
inc
lret
or
addr16
hlt
or
mov
xchg
popa
push
jne
loop
jmp
ret
xor
ljmp
and
lods
popa
js
sbb
push
aad
out
dec
aad
jg
inc
sarl
cmp
rcrb
mov
xor
js
jns
and
cltd
jecxz
rol
dec
lock
repz
or
lret
lock
xor
test
lret
mov
inc
repnz
sbb
es
or
mov
sbb
icebp
test
mov
sbb
ds
inc
mov
fsts
imul
push
iret
icebp
out
and
adc
movsl
clc
cmpsl
jle
mov
and
xor
cmp
mov
lahf
or
sub
inc
nop
insb
movsl
std
negb
pop
scas
dec
stos
lea
inc
popf
dec
cmp
arpl
inc
dec
fdiv
cli
or
ror
movsl
and
cltd
fwait
gs
mov
or
fidivrl
and
xchg
and
cld
fidivrl
and
enter
or
dec
add
sbbl
sub
inc
mov
in
repnz
mov
arpl
inc
fcomps
pop
adc
or
dec
xchg
and
pusha
adc
dec
adc
mov
or
lret
xchg
lods
hlt
jge
xchg
dec
pop
mov
fbstp
leave
leave
xchg
fwait
pushl
push
pop
jae
in
sbb
shrl
jnp
dec
mov
iret
daa
add
xchg
mov
pop
test
cs
out
xchg
sbb
pop
icebp
jl
popa
push
jmp
xor
push
push
sti
leave
sbb
xor
xchg
xchg
imul
push
dec
sti
mov
mov
mov
in
icebp
dec
loope
inc
jp
repnz
mov
sbbl
clc
or
add
stos
pop
mov
lahf
data16
push
xchg
nop
adc
xchg
mov
es
fadds
mov
xchg
xor
xchg
inc
jl
sahf
sub
xchg
loopne
and
fcmovnu
pop
loope
xchg
mov
dec
lds
cld
adc
xor
lea
xchg
sbb
adc
inc
sub
push
aad
dec
test
or
inc
inc
out
sbb
lea
and
outsb
outsl
aaa
push
ss
adc
sub
lcall
jge
xchg
push
or
into
cmp
xchg
dec
stos
add
pop
cmc
sbb
sbb
gs
in
nop
addb
and
cmp
and
roll
mov
push
pop
scas
es
test
mov
iret
rolb
pop
mov
push
out
pop
out
iret
add
or
mov
test
sub
mov
adc
sbb
xchg
sub
iret
or
jno
mov
popa
jns
cmp
sub
cmc
out
add
fs
mov
in
loop
cmp
insb
or
mov
stos
mov
sub
adc
push
sub
test
fidivl
xchg
xor
mov
cwtl
push
mov
push
push
fs
xor
adc
ret
movsl
aaa
and
adc
andb
nop
mov
fwait
imul
cmp
jns
decb
adc
fs
cli
cmp
rolb
bswap
pop
frstor
bound
xchg
xchg
dec
fbld
adc
or
or
push
jo
jo
push
mov
push
in
shrb
into
or
adc
mov
sti
in
mov
adc
jbe
sar
mov
adc
repz
test
xor
cmp
mov
push
nop
pop
push
in
sahf
push
lahf
pop
add
mov
loopne
or
adc
jnp
lcall
push
push
int3
ret
inc
and
es
clc
loopne
scas
mov
mov
ret
or
push
xchg
mov
inc
adc
sbb
aaa
repnz
call
sub
test
and
inc
pop
jg
pop
nop
jns
fs
fstp
fistpll
in
pushf
stc
dec
pop
jl
inc
insb
out
jne
repnz
jmp
xchg
arpl
clc
frstor
xchg
add
add
add
das
push
xchg
sbb
lcall
cld
shlb
fldcw
xchg
adc
add
dec
sbb
sti
loop
mov
rcr
out
rol
mov
cld
or
cmp
dec
jns
stc
lea
and
mov
cli
and
icebp
sbb
push
add
scas
pop
pop
push
mov
inc
and
mov
aaa
pop
cs
fsubrs
std
add
hlt
adc
push
addr16
jg
stos
ret
stos
sahf
lret
adc
pop
sub
mov
das
inc
mov
mov
inc
adc
jp
mov
stos
imul
jge
jmp
lcall
outsb
insl
or
arpl
aaa
adc
rolb
xor
ret
nop
rorb
xor
shrl
sbb
rclb
in
dec
sbb
mov
jp
das
lea
movsb
adc
jbe
jmp
icebp
mov
adc
sarl
pop
outsl
int3
push
es
pop
mov
sbb
movsb
imul
jle
arpl
push
jno
lea
inc
faddl
daa
jle
pop
mov
lret
jl
pusha
mov
insl
in
lods
adc
jno
lds
xor
lret
xchg
out
fisubl
ljmp
fldenv
in
stc
jo
and
mov
inc
inc
sbb
mov
in
add
insl
pushf
inc
enter
data16
mov
fadd
and
mov
scas
sbb
rclb
mov
cmpsb
addb
xchg
leave
xchg
pushf
mov
sub
scas
push
push
inc
dec
clc
mov
push
mov
mov
movsb
sbb
stc
dec
or
aam
xchg
orl
insl
pop
cmp
pop
xor
or
push
and
outsl
push
aam
or
jne
pop
xor
fidivs
sbb
and
data16
outsb
lcall
scas
adc
divb
bound
adcb
cmp
cmp
pop
lods
pop
icebp
nop
pop
je
and
out
xchg
ret
xor
jp
cld
mov
imul
fdivrs
pop
or
vmread
mov
mov
cmp
xlat
rolb
or
or
scas
xchg
xchg
daa
leave
xlat
outsl
pop
xchg
add
call
pop
gs
sub
jae
repnz
cs
sub
das
repz
cmp
xor
cli
mov
je
or
movsl
out
inc
movsb
jecxz
insl
into
xchg
cltd
jae
insl
push
fsubrs
jbe
cmpsl
cmpsl
sbb
mov
enter
das
dec
xor
test
movsl
xor
xor
aad
add
xchg
jno
inc
jbe
pop
aas
inc
mov
pop
jle
lods
jp
fimuls
mov
sub
fs
xchg
adc
xlat
jne
jbe
or
mov
dec
inc
xchg
ljmp
sub
hlt
xorl
sub
icebp
lds
in
mov
dec
and
jo
inc
sub
add
ja
test
cmp
sbb
stos
shrl
rcll
mov
xchg
cltd
sahf
imulb
stos
pop
stos
xchg
xchg
in
sbb
xchg
dec
mov
stc
sarb
lret
loope
movsb
xchg
movsb
ret
nop
mov
pop
xchg
push
call
dec
push
pop
add
ljmp
xchg
xchg
out
xchg
or
jno
cmp
push
ret
rcr
test
test
fs
les
mov
rol
stos
jns
mov
fistl
mov
fidivs
and
adc
xchg
daa
jl
inc
cmp
loope
repnz
aad
dec
shrl
cmpsb
jg
adc
sub
xor
mov
call
scas
ja
dec
lock
xor
jmp
push
push
jb
stos
loopne
daa
in
lods
jg,pn
mov
mov
mov
stos
lret
fisttps
jnp
pop
fwait
bnd
fildll
imul
sub
adc
mov
adc
xor
mov
jnp
out
in
and
rorl
mov
testb
and
lods
xchg
sti
mov
nop
sub
addr16
aas
sbb
push
jl
and
in
adc
outsb
stc
stos
sbb
pop
sbb
fdivp
push
add
out
insl
dec
mov
mov
inc
dec
and
aaa
dec
adcl
call
mov
addr16
aad
cmp
loope
movsl
movsb
inc
clc
or
dec
sub
mov
int
mov
stc
test
ljmp
cmpsb
push
cld
xlat
jle
movsb
pusha
and
xchg
push
sbb
fwait
in
jp
scas
scas
psubusb
repz
daa
and
pop
or
mov
push
cmp
shr
adc
xchg
mov
leave
push
pop
sub
dec
les
xchg
popa
xchg
pop
lea
sbb
incl
sbb
shlb
pop
in
daa
sahf
push
sub
push
mov
mov
mov
sbb
mov
data16
dec
and
dec
and
mov
and
and
dec
add
insl
pop
es
repnz
sahf
test
push
mov
in
lahf
mov
push
push
cld
fildll
dec
dec
sbb
dec
xchg
xor
jle
mov
and
push
mov
icebp
imul
test
in
std
cmpsb
cmpsl
bound
dec
shrb
cli
xchg
hlt
and
pop
sti
loope
stos
jecxz
mov
xlat
and
xchg
xchg
lret
mov
out
mov
jno
enter
mov
or
adc
or
cld
aaa
dec
arpl
js
or
bound
mov
hlt
popf
and
movsb
call
test
dec
push
cli
out
jnp
mov
xchg
cwtl
ss
cmp
popa
mov
hlt
loop
clc
dec
ss
clc
push
xchg
adc
rorb
mov
outsl
nop
fwait
xchg
sbb
aaa
pop
out
and
lea
call
cmp
dec
dec
sbb
mov
and
sbb
pop
jne
xor
push
pop
xor
sarl
dec
scas
jo
push
ja
push
out
xchg
and
aas
shrb
je
inc
or
fstps
test
movb
rolb
lret
mov
ljmp
ds
pop
cwtl
shll
out
pop
sbb
inc
inc
or
in
dec
jae
js
or
loopne
dec
aas
out
jb
sbbl
pop
mov
loop
in
xor
mov
cmp
lods
cmpsb
stos
lds
inc
sbb
js
lret
lcall
push
pop
shlb
add
pusha
clc
push
data16
or
sbb
rolb
mov
ss
loope
pusha
dec
mov
sub
push
outsb
test
in
inc
lds
dec
insl
mov
loop
imul
inc
lock
and
rcrb
xor
mov
xchg
cmp
xchg
test
jecxz
push
icebp
jp
xchg
push
ficompl
out
jl
push
inc
adc
sub
xchg
icebp
mov
insl
jmp
fs
inc
mov
daa
xor
mov
dec
mov
out
leave
jb
pop
fwait
lahf
adc
fcoml
js
out
out
in
aad
hlt
dec
ds
lds
fsubl
pop
sbb
inc
shl
sti
jp
add
stos
push
mov
ret
lret
cli
xor
fisubl
fwait
cltd
jle
inc
lahf
jns
lahf
movsb
aam
popf
mov
rcrb
push
push
push
inc
pop
xor
ljmp
and
cli
shlb
add
sbb
lcall
es
sub
out
mov
loop
xchg
mov
and
mov
and
cmp
add
mov
dec
mov
jecxz
mov
outsb
std
sbb
dec
and
cmc
mov
xor
orl
cli
mov
and
dec
mov
inc
jp
push
add
lods
int
adc
aam
js
pop
inc
repz
enter
in
mov
andb
mov
sub
inc
rol
sub
sbb
sbb
inc
inc
and
jne
rcrb
mov
pop
out
push
xchg
mov
add
cmp
aam
jne
fidivs
fisttpll
ds
and
cmp
sbbb
jbe
xor
leave
insl
rolb
es
les
sub
out
ret
lret
xor
ljmp
inc
xchg
stos
mov
cwtl
cmp
js
add
pop
jle
dec
ret
inc
sub
pop
stos
mov
lea
pop
push
or
push
mov
and
jg
fstpl
jge
pop
cli
popa
xor
out
es
repnz
stos
cmp
call
insb
out
movsb
inc
mov
sub
loop
gs
sub
sti
dec
imul
inc
adc
mov
inc
mov
int
jbe
xor
stos
push
rclb
mov
faddp
or
fsubrl
test
xlat
mov
push
subl
inc
cld
dec
dec
cwtl
out
jo
or
add
sbb
xor
cmpsb
repnz
cmc
push
gs
cli
ss
push
xchg
sbb
pusha
mov
scas
mov
jb
xchg
nop
imul
rorb
int3
mov
cwtl
xor
cmpsl
dec
adc
add
mov
inc
pop
and
cmpsl
xor
push
pop
cmpsb
mov
lods
inc
sbbb
fidivs
mov
mov
cli
xor
jmp
jmp
xchg
adc
int
lahf
in
pop
sub
add
cmpsb
scas
in
hlt
dec
nop
outsb
xchg
hlt
pop
mov
inc
inc
aas
test
pushf
fdiv
push
jb
mov
nop
fcompp
cwtl
stos
lods
sub
int3
sarb
mov
adcl
push
cmpsb
or
imul
mov
inc
outsl
sbb
lods
cmp
fnstcw
test
fxam
es
jb
cltd
fwait
in
outsl
xor
cmpsb
xor
scas
dec
jl
clc
mov
adc
lods
push
and
push
xorb
sbb
mul
pushf
mov
cmp
lods
loope
imul
or
arpl
cmp
popa
xor
fptan
jo
out
mov
lret
mov
shrl
out
mov
pop
incb
sbb
add
mov
add
sbb
jp
fimull
cmpl
xchg
jo
scas
cld
cwtl
push
leave
stc
adc
push
mov
adc
and
jmp
push
jae
pop
mov
mov
push
push
xor
ja
bound
sbb
or
pop
mov
pop
mov
test
inc
jge
repnz
inc
inc
mov
popa
and
cli
enter
jl
std
ret
cmp
in
in
movsb
mov
mov
mov
and
test
fwait
into
fprem1
or
jle
jnp
mov
rcll
dec
aam
push
test
inc
ret
test
shlb
leave
fmul
and
outsl
and
fimuls
je
cmp
cwtl
loope
push
lret
mov
test
or
ret
xor
dec
jno
or
bound
dec
outsb
stos
adc
stos
xor
xorl
imull
orb
scas
xchg
data16
mov
andl
adc
or
bnd
mov
pop
push
into
rolb
pop
mov
push
cmc
stos
pop
mov
aaa
pop
or
in
aaa
pop
les
rorl
jne
stos
ss
dec
cmp
push
fidivrs
mov
jp
adc
in
dec
rcll
pop
and
mov
jne
add
push
or
xchg
inc
push
test
lds
jmp
mov
jne
das
push
adc
xlat
cmp
mov
mov
mov
or
add
mov
in
ficoml
xor
aad
iret
cmc
sbb
test
fadd
or
in
mov
mov
inc
dec
mov
mov
mov
sbb
cmp
jmp
add
int3
cmp
les
jae
loop
adc
jnp
popf
cmc
adc
insb
int
sbb
insb
adc
cmp
sub
sub
repnz
ljmp
push
adc
cs
cltd
aas
loop
mov
js
jnp
rcrb
and
pusha
xchg
sti
test
fldcw
pop
mov
pop
push
dec
adc
push
mov
outsb
outsb
les
lods
adc
test
cs
out
cld
add
fdivl
jo
push
xchg
cmc
mov
and
popf
xchg
stos
js
mov
cmp
adc
jb
dec
in
sub
xor
lods
sbb
xchg
clc
addl
mov
push
dec
jge
pop
sub
test
mov
mov
xor
add
loopne
add
enter
inc
and
or
daa
je
jecxz
inc
and
pop
faddp
cs
adc
sti
or
andb
out
adc
mov
dec
pushf
test
fisubs
sub
in
clc
scas
inc
adc
and
push
stos
cmpsl
pop
sub
add
sti
out
loope
push
pop
gs
pushf
pusha
push
jl
cmpsb
mov
xchg
int
inc
add
xchg
movsl
and
mov
imul
xchg
xor
inc
push
mov
cmp
or
or
mov
adc
inc
sti
lods
jo
add
lahf
xor
sub
lds
pop
and
test
jp
inc
xorb
fmuls
sub
push
div
adc
js
fisubl
and
lods
xor
mov
aad
xchg
aaa
xchg
mov
jae
fs
push
ja
das
inc
mov
mov
sti
loop
mov
test
adc
pop
fwait
push
adc
gs
jnp
push
mov
and
ret
sysret
push
mov
lcall
push
nop
das
movsb
in
insl
decl
push
lahf
xchg
out
sbb
bound
jae
sarl
cld
push
test
push
push
sub
inc
mov
push
addb
push
push
sbb
mov
add
push
mov
std
into
fldenv
in
mov
js
or
icebp
adc
mov
dec
clc
rcrl
or
adc
repz
jnp
nop
sub
pop
enter
in
lcall
xlat
add
jo
mov
enter
jo
pusha
mov
inc
roll
push
sub
stc
xor
sbb
add
dec
dec
xchg
add
push
sub
and
add
sub
inc
xchg
push
loopne
or
and
lods
mov
dec
test
mov
ret
or
insl
dec
dec
fisubl
pop
dec
ds
jmp
jo
or
lods
lret
seto
add
lea
scas
inc
movsl
push
test
pop
xlat
lds
and
lods
sbb
int3
sarb
xchg
fcomps
xchg
sahf
jg
mov
movsl
and
in
aam
jns
adc
or
and
arpl
push
fs
and
test
xchg
xorb
ret
push
outsb
sti
xchg
daa
iret
rolb
int3
sbb
daa
jle
add
pop
or
jmp
xchg
fs
scas
fisubrl
xchg
push
sahf
or
xchg
test
stc
cmp
fwait
or
in
cmp
scas
repz
aam
sbb
push
jl
out
mov
xchg
ds
sbb
fbstp
jo
xchg
mov
aaa
cld
shrb
jmp
jmp
lea
movsl
dec
cmp
test
hlt
setnp
mov
cmpsl
adc
push
xchg
test
in
sub
scas
mov
js
sbb
fcomps
lods
mov
mov
jp
mov
inc
push
or
pop
add
pop
faddl
add
test
xchg
dec
ficompl
pop
rcll
pop
sbb
outsb
or
movsb
and
mov
stos
rcll
cmp
cmpsl
jmp
nop
leave
push
and
out
cmpb
ret
mov
adc
arpl
xchg
int3
push
dec
cmp
sub
push
add
push
sbb
pop
cmp
adcl
lods
xor
and
stos
movntps
aaa
mov
cwtl
cld
xchg
sbb
bound
jae
xchg
mov
movsl
pop
test
mov
icebp
in
jmp
add
push
sub
stos
loope
or
arpl
lret
lcall
xlat
negl
dec
push
stc
mov
cmp
add
cmp
mov
ljmp
dec
rorl
dec
adc
movb
mov
mov
pop
daa
inc
pop
ljmp
mov
cmc
pushf
loop
imul
and
xlat
dec
popl
mov
dec
ds
fnstsw
lock
sub
cs
scas
dec
dec
and
icebp
call
inc
sbb
inc
mov
decb
xor
andb
xchg
xor
repnz
add
cmc
push
cmpsl
push
dec
rcl
xchg
mov
cli
or
ret
in
out
cmp
mov
int3
pop
mov
adc
push
cmpb
dec
and
jns
push
in
xlat
and
jg
jge
andl
mov
push
push
test
mov
add
xchg
xchg
out
mov
inc
mov
sub
dec
sbb
sub
sub
scas
mulb
inc
ret
xchg
adc
xor
cli
in
aas
insl
movsb
in
pop
xchg
imul
call
ss
pop
in
out
and
pop
push
push
loope
inc
push
lods
dec
out
or
clc
add
fistpl
dec
inc
loopne
movsl
movsb
jmp
les
or
sub
xorb
pop
jne
ss
loopne
mov
ds
push
pop
andb
push
or
cmpsb
xor
push
xchg
js
and
pushf
enter
dec
sarb
add
sahf
dec
imul
orb
pop
ret
xchg
mov
stos
mov
mov
cmp
cmp
adc
flds
call
mov
mov
sub
lea
xchg
pusha
dec
push
pop
pop
fs
mov
cld
in
outsl
cli
addr16
jns
dec
lcall
push
imul
lcall
sbb
dec
xchg
aad
mov
jg
push
or
pusha
and
ffree
aaa
push
inc
sbb
and
cld
mov
jae
imul
cmpsb
pop
jae
push
xchg
imulb
sahf
sbb
pop
mov
outsl
sahf
inc
jne
scas
pop
sbbl
dec
sbb
pop
mov
repz
mov
lods
popa
int
xor
rcll
push
inc
push
out
fidivrl
inc
or
mov
int
xlat
ret
sub
scas
or
addr16
mov
test
or
xchg
out
neg
in
inc
cld
cli
cmpsb
inc
int
test
ds
mov
pop
adc
mov
mov
stos
push
pop
lcall
incb
lcall
sub
loopne
dec
data16
lock
movsl
out
mul
sbb
push
cmc
lods
pushf
adc
add
push
and
adc
dec
ds
mov
jmp
lock
push
ret
inc
mov
sub
aaa
std
inc
dec
stos
fldt
mov
push
out
mov
xlat
sub
xchg
lahf
aam
loopne
pop
into
lcall
push
add
repz
dec
hlt
push
jbe
jp
sub
pop
add
mov
mov
lret
ljmp
dec
dec
cmpsb
pop
ja
sub
xchg
sub
lret
lret
clc
pushf
mov
dec
shlb
iret
aad
movsl
shr
sub
dec
or
mov
jbe
and
fildll
ret
xchg
add
aaa
push
sbb
repnz
mov
es
jmp
pop
jns
rol
scas
jge
out
mov
or
jmp
ljmp
push
in
xchg
and
ljmp
enter
and
negb
mov
push
loop
mov
push
fcom
into
fcmovne
jnp
ret
push
and
pop
jg
pop
aaa
pop
lods
cmpsb
fsubrl
cmp
test
ja
loop
jmp
cltd
mov
push
popf
pop
mov
push
sbb
adc
push
mov
sbb
ds
jb
outsb
es
xlat
dec
lcall
push
js
add
out
jno
cmp
sub
pop
hlt
aam
cmp
es
mov
xchg
sahf
adc
mov
jg
sbb
mov
mov
aas
jl
add
outsb
xchg
xor
popf
xor
push
lods
nop
out
dec
inc
mov
inc
clc
paddusb
xlat
jg
cli
xchg
call
std
dec
cmpsl
jecxz
adc
mov
pop
outsb
dec
mov
test
mov
mov
sahf
mov
cli
inc
orl
pop
int
jp
mov
jo
mov
aam
lret
orl
inc
stos
adc
subl
mov
xor
adc
aad
das
lods
cld
sub
movsl
leave
lds
or
rcr
dec
int3
pop
inc
out
std
cmp
loope
aam
stos
xor
add
inc
xor
into
shrl
addr16
or
int
mov
xchg
mov
fs
gs
push
pop
dec
pop
ja
ljmp
mov
dec
pop
in
dec
jp
ds
test
into
mov
mov
in
dec
cmp
loope
dec
sub
lahf
out
cmp
sbb
inc
arpl
inc
jno
test
jnp
and
mov
fxam
cmpsl
gs
and
cs
or
mov
mov
outsl
and
andb
dec
push
gs
fisttps
adc
mov
add
mov
sub
xchg
ja
sbb
jb
int3
sub
mov
add
jp
pop
fldt
dec
fidivl
add
mov
and
xchg
clc
lcall
xchg
lods
jp
or
or
lods
sbb
decb
adc
enter
or
icebp
in
mov
loopne
scas
fists
xor
sub
mov
xchg
test
mov
cli
inc
repz
mov
in
test
cld
out
movsl
ret
scas
es
sahf
xor
mov
mov
cmp
or
ret
or
dec
mov
loope
std
in
cmp
aad
stos
mov
test
jbe
fiaddl
ficomps
or
dec
cld
mov
imul
pop
pop
pop
xchg
and
pushf
xor
stc
mov
mov
arpl
aaa
jmp
sarl
jp
leave
lcall
ljmp
leave
ffree
dec
outsl
fdivrs
int3
push
add
cltd
inc
sub
lahf
mov
inc
lds
cmp
mov
jbe
cmpsl
mov
rcll
sar
jg
orb
fnsave
jno
adcl
push
mov
inc
je
sbb
inc
jmp
test
xchg
pop
mov
xor
outsb
push
test
arpl
movsl
cmp
jl
cmp
out
sub
add
push
es
dec
add
andb
jecxz
push
fldenv
or
fwait
push
test
sub
sub
xlat
lods
insl
sbb
add
pop
adc
dec
add
mov
movsl
shll
sbb
aad
in
jmp
pop
or
inc
sbb
cmp
lock
or
pop
jne
and
push
mov
out
push
or
pop
jns
decb
xor
gs
xchg
not
add
loope,pt
sbb
enter
or
xor
lds
xchg
pushf
lret
fldt
cmpsb
ss
cs
test
rolb
inc
xor
pop
mov
add
rclb
adc
insb
mov
cltd
xchg
dec
stos
sbb
push
fstps
xor
int3
test
cmp
add
lahf
push
in
sar
mov
mov
arpl
shlb
insb
push
inc
mov
leave
xchg
insl
sarb
xchg
imul
enter
mov
xor
ds
int
add
mov
push
call
xchg
gs
push
and
data16
pop
out
mov
add
jmp
xor
mov
imul
inc
fucomp
xor
sub
sub
in
or
lds
loop
arpl
adc
inc
mov
jns
mov
mov
insl
jl
mov
and
subb
bound
cmp
push
inc
into
out
arpl
jge
repz
mov
pop
mov
and
scas
push
fs
cmpsb
aas
add
xchg
bound
test
lock
and
call
adc
add
mov
sub
and
repz
push
dec
sub
mov
dec
mov
xor
adc
sbb
mov
popa
ljmp
repnz
out
pop
clc
pop
inc
and
stos
dec
out
mov
cmc
fistl
xor
test
mov
xchg
mov
cmc
movsb
jmp
addr16
lods
lcall
jl
inc
mov
push
js
movsl
adc
mov
mov
sti
xchg
jecxz
cmc
cmpsb
stos
lds
mov
lods
fwait
mov
addr16
ljmp
xchg
mov
or
stos
fidivs
filds
pop
xchg
push
jnp
dec
lret
sbb
sbb
dec
jecxz
filds
push
xor
test
add
inc
mov
mov
xor
xor
test
push
int
fsubs
stos
in
adcb
pop
dec
fwait
mov
in
rcll
inc
dec
outsl
adc
inc
cltd
sbb
push
lock
cmpsb
jne
push
lea
or
mov
pop
push
aad
adc
push
pop
xchg
in
sti
xor
push
mov
pop
ficompl
out
inc
roll
je
jp
pop
xor
jecxz
mov
inc
aaa
inc
pop
fisttpll
push
rolb
sarb
lods
iret
rcr
inc
jp
stc
ret
test
cmc
pop
shlb
nop
or
add
call
xchg
or
in
shlb
push
or
pop
fs
push
popf
inc
jp
adcl
andl
jae
xor
rcll
jne
or
insl
enter
lcall
repnz
cwtl
sahf
dec
push
shll
into
into
cwtl
mov
mov
iret
mov
inc
dec
inc
jnp
cli
push
fnclex
scas
xchg
inc
rorb
add
jo
inc
or
mov
das
fstpt
xor
sbb
insl
adc
shl
cld
sub
jg
ficomps
clc
in
repnz
mov
outsl
popa
scas
and
inc
inc
lahf
xchg
xchg
lret
mov
in
out
push
testb
enter
sub
push
jp
mov
vpmulhw
scas
rcr
stos
xor
imul
sbb
dec
mov
imul
es
and
cmp
mov
ljmp
sbb
enter
push
pop
bound
adc
inc
mov
popl
popa
mov
add
test
in
push
jmp
lods
stos
and
cwtl
pop
push
xchg
adc
cmp
push
xchg
nop
invd
outsb
mov
jmp
pusha
pop
popa
fdivs
cmp
repnz
or
lret
insb
outsl
lret
dec
adc
clc
repz
inc
js
mov
outsl
mov
lahf
mov
add
int3
xlat
mov
aas
adc
ljmp
add
jns
push
cmp
jns
and
mov
mov
lods
aam
cmpsb
push
dec
mov
push
ret
jo
fldenv
testl
mov
or
pop
mov
sbb
xchg
faddp
dec
and
jo
ds
lcall
xor
mov
sub
into
xchg
in
and
sub
roll
add
sbb
push
xchg
xchg
ljmp
ds
add
jmp
pusha
out
mov
aas
adc
sub
and
and
test
mov
add
and
mov
inc
push
push
mov
loope
add
xor
daa
xchg
addr16
mov
push
std
mov
inc
adc
lea
mov
in
xor
scas
lcall
hlt
add
inc
cmp
lock
iret
ret
loop
cmpsl
add
mov
sarl
movsl
sub
mov
sbb
cmc
inc
ds
mov
pusha
pop
pop
xor
testb
add
cmpl
jge
adc
subb
fs
stos
stos
dec
xchg
insb
jge
sbb
sbb
fwait
cltd
add
inc
push
sub
mov
lods
cs
into
mov
das
shrl
sti
cltd
push
ss
mov
cmp
dec
fadd
inc
push
pop
adc
rorl
xchg
enter
add
dec
mov
lret
out
stc
dec
ljmp
xorb
ljmp
into
sbb
hlt
mov
icebp
jae
xchg
xchg
xor
mov
push
mov
idivl
mov
xchg
scas
stos
inc
test
push
inc
fildl
popf
inc
cld
mov
sbb
xchg
dec
stc
push
test
popf
lahf
insb
sub
sbb
xchg
ret
mov
bound
shlb
adc
xor
dec
adc
imul
cltd
xchg
pop
out
pop
das
std
imul
pop
js
insl
shl
fwait
std
mov
cmp
test
jbe
test
fwait
cltd
xchg
adc
mov
stc
jmp
cmp
sbb
js
inc
js
cs
mov
dec
inc
and
cmpsl
sbb
ffree
lock
cmp
add
ljmp
cmp
outsl
ds
int
imul
iret
jnp
push
pusha
jge
or
test
fnsave
jno
jp
rolb
mov
adc
jle
sub
bound
add
in
add
outsl
mov
int3
push
sbb
cmpsb
push
insl
xchg
xor
int3
inc
push
sub
cli
cmc
arpl
and
jb
dec
std
jle
test
fcmovb
dec
mov
or
in
mov
dec
sarl
test
mov
pop
ret
test
pop
mov
mov
std
pushf
cmpsb
es
rep
cmp
iret
push
in
xor
sub
cmp
cmp
mov
std
xor
stos
or
or
mov
clc
inc
in
cmp
adc
pop
lods
mov
arpl
call
mov
fidivrl
push
mov
minps
icebp
inc
pop
jb
mov
xlat
xor
icebp
adc
pop
imulb
in
and
sbb
add
cmp
jp
mov
mov
lahf
push
push
xchg
jns
sbb
mov
and
int
je
mov
adc
adc
scas
push
nop
cmpsb
fld
cmp
cli
sub
addr16
jbe
ficomps
xor
jno
jg
fcmovnb
inc
jnp
jl
inc
loop
rolb
add
loop
push
cmp
add
stos
stc
mov
in
fs
push
mov
dec
jnp
push
pop
pop
jg
mov
js
and
pop
movsb
out
sub
inc
mov
inc
ret
icebp
cwtl
pop
leave
xchg
out
sbb
jmp
xor
add
and
in
ss
sbb
sbb
jg
push
repz
dec
and
adc
lods
test
mull
and
into
mov
push
aaa
jle
lret
pushw
ret
nop
int
cmp
decb
lret
mov
fisubs
xchg
dec
shrl
jno
cwtl
mov
xchg
sbb
jae
sbb
mov
je
jae
incb
mov
add
imulb
sub
jns
stos
push
inc
mov
bt
add
cmp
in
mov
adc
mov
aad
pop
and
xchg
push
inc
sbb
inc
arpl
dec
es
mov
aad
mov
fcom
pop
cmpsl
stos
add
sbb
dec
test
pop
and
nop
je
ficoms
xor
xor
fwait
cli
sbb
pop
xor
sbb
fs
loopne
sbb
fdivrl
in
fnstsw
adc
inc
lret
pop
popa
test
scas
rorb
add
jbe
dec
add
ljmp
jae
outsl
out
loop
pop
sub
or
enter
xlat
sub
and
into
sub
jb
ljmp
into
jge
sbb
shl
sub
and
sbb
xor
push
xor
arpl
add
icebp
or
cmc
bnd
repz
xchg
or
sbb
test
test
jns
dec
stos
xchg
and
insl
sub
pop
test
push
inc
jns
loop
ss
test
stos
sbb
cltd
cmc
xchg
shlb
cmp
push
stc
adc
imulb
out
out
sahf
xchg
divb
fcompl
rcrl
mov
pop
mov
mov
mov
insb
jno
cmp
pop
push
or
in
movsl
ret
repz
dec
out
ret
lock
mov
mov
test
daa
or
ss
jae
sarb
or
adc
pop
jnp
sub
imul
aad
jg
pop
adc
xchg
sbb
cli
mov
adc
addr16
movsl
stc
les
adc
pop
and
gs
sbb
mov
aaa
mov
add
pop
rol
cli
je
ja
loopne
mov
rorb
cmp
std
cld
cmp
mov
repnz
mov
test
clc
cs
sti
loopne
mov
sub
add
sti
push
mov
insl
and
add
inc
ret
or
sbb
insb
push
push
push
cmp
aam
ret
mov
mov
inc
lea
lahf
enter
shll
mov
push
mov
sbb
stc
or
adc
xchg
cmp
adc
stos
or
add
sub
xor
fwait
ret
push
mov
adc
xorb
sub
add
stos
mov
pop
mov
push
adc
jmp
or
dec
xchg
fs
push
je
mov
loopne
es
or
ret
bnd
cmp
sbb
mov
jo,pn
or
movsl
xchg
pop
scas
jo
xor
aaa
adc
dec
leave
xchg
sub
pop
push
mov
movsb
hlt
lods
int
push
hlt
cli
mov
out
fistl
shlb
test
ret
xchg
ljmp
xor
jmp
test
cltd
inc
mov
jae
sub
mov
and
stc
mov
rdmsr
outsl
dec
adc
jno,pn
inc
dec
addb
ret
sahf
lcall
push
xor
push
je
push
xlat
ret
inc
push
or
push
aas
rep
cmp
xchg
or
lea
or
es
adc
lcall
mov
push
push
inc
vxorps
jno
jno
mov
inc
lock
sbb
lcall
cltd
cs
ljmp
cmp
lds
cli
or
inc
js
sbb
pop
scas
aam
mov
fs
dec
jge
lret
cltd
aaa
mov
incl
scas
xchg
sbb
nop
lcall
push
inc
gs
lods
pop
subb
roll
into
mov
iret
fldl
jo
push
fld1
test
loopne
dec
arpl
adc
in
cmp
sti
out
ds
lds
popf
inc
rorl
jle
stc
ss
add
roll
int
xor
hlt
jecxz
add
leave
add
aad
xor
push
movsb
lods
cld
or
jmp
test
adc
mov
das
or
dec
stos
ja
or
ljmp
idivb
xchg
out
movsl
jae
mov
fs
pop
jmp
scas
push
pop
push
into
add
xchg
outsb
xor
into
insb
mov
cld
jne
inc
ror
sbb
test
or
mov
es
std
stos
sbb
mov
lea
dec
lret
cmpsl
mov
pushf
lea
sti
pushf
add
mov
sub
and
cwtl
ss
mov
imul
xchg
dec
add
sub
add
mov
sahf
fldcw
sti
xchg
push
mov
imul
cmp
xchg
or
les
je
fs
cmp
inc
ja
jmp
sbb
fdiv
cmp
inc
push
das
jb
pop
add
movsb
and
or
test
outsb
call
sub
push
sub
sub
pop
xlat
aas
xor
adc
shl
sbb
inc
sbb
jp
or
mov
xor
push
sub
and
ret
cmp
inc
dec
fnstcw
jge
sbb
inc
xor
jae
ffree
aas
push
sahf
xor
insb
in
andl
adc
int3
js
sub
jae
mov
nop
int3
aas
jno
flds
dec
or
sub
adc
xchg
xchg
adc
and
hlt
pop
add
pusha
das
das
push
and
mov
cmp
rcl
xchg
loope
lods
movsl
xchg
pop
enter
mov
into
and
pop
pop
mov
movsl
sbb
add
mov
mov
cwtl
fcmovb
ljmp
pop
pop
push
hlt
push
dec
out
aas
sbb
fnstsw
cmp
xchg
lea
jmp
leave
mov
pusha
mov
sub
lock
push
jp
and
mov
rorl
and
sbb
dec
fidivrs
test
jb
stos
pop
jg
jnp
ja
mov
dec
jb
and
mov
inc
push
jle
xchg
es
fidivrl
push
imul
sbb
xor
out
je
inc
and
loopne
scas
lret
aad
xor
xchg
ror
jge
dec
xor
sti
inc
lret
xchg
pop
into
add
xor
cmc
shrl
lahf
and
loop
mov
lds
lods
and
mov
adc
enter
cld
pop
or
iret
hlt
mov
pop
aas
rclb
pop
cmp
jl
push
sbb
mov
push
rclb
rcl
cmp
mov
cmp
test
int
mov
pop
jecxz
mov
pushf
es
and
rcll
pop
aam
cmp
xor
lret
xor
xorl
lds
pop
pushl
mov
out
inc
sub
ror
hlt
inc
sarl
sub
mov
inc
dec
pop
jge
sub
push
push
cmc
xchg
fistpll
rcrb
push
repnz
decb
ja
inc
data16
in
sbb
lea
pop
aam
mov
mov
jno
sub
je
scas
scas
fbstp
mov
xor
mov
fwait
jmp
inc
inc
dec
test
aad
stos
aad
jg
and
dec
dec
outsb
or
paddb
add
sbb
nop
cld
pop
dec
shrb
and
mov
fildl
sbb
add
mov
sub
or
ret
fildll
das
mov
and
pop
mov
adc
in
or
push
movb
mov
ficomps
jae
xor
mov
mov
in
cmp
mov
push
test
sub
jns
dec
test
jae
lahf
sbb
xchg
ret
adc
xchg
iret
cmc
scas
loop
dec
clc
push
mov
sahf
stos
sub
xor
aas
ret
cld
pop
mov
fimull
adc
dec
push
test
cmc
movd
lds
jl
outsb
and
mov
sub
lret
out
scas
cmpsl
outsl
in
adc
mov
data16
push
add
inc
and
insb
je
pop
lahf
inc
daa
mov
fistpll
xchg
dec
out
fadds
mov
dec
jg
sbb
ret
lahf
xchg
outsb
xor
sub
dec
xor
adc
out
add
and
ss
lds
sbb
jge
popa
std
popa
into
iret
pop
cmp
cmp
shl
jmp
fstpl
ret
push
sbb
push
cmp
test
xlat
insb
and
jge
ss
into
dec
fdivrs
add
and
pop
xchg
or
xor
out
jne
call
add
fistl
sub
dec
xchg
xchg
sbb
mov
lds
lcall
lea
stc
test
dec
adc
fstl
stc
std
xchg
mov
pop
idivb
call
cmpsl
sti
test
jmp
inc
movsb
adc
arpl
test
lods
dec
ja
mov
call
fisttpl
fistps
push
mov
sahf
repnz
push
cli
scas
out
repz
gs
daa
push
jl
fstl
jns
popf
xor
js
jmp
xor
movsl
fucomi
rolb
lea
inc
xchg
pop
loope
push
adc
jno
scas
cltd
or
dec
push
pop
lds
ja
push
xchg
push
daa
or
xchg
mov
into
fists
mov
mov
add
flds
sbb
pop
arpl
xorb
bound
insb
jns
push
fwait
cwtl
outsb
lods
adc
movsl
mov
aas
lods
xchg
push
insb
cli
xchg
cmc
push
mov
pop
adc
push
mov
mov
mov
or
xchg
lret
fsts
insl
mov
jp
jl
sarb
sbb
loopne
out
xor
out
mov
std
and
mov
ret
fdivrl
leave
adc
movsl
les
aam
subb
js
adc
das
mov
ret
lods
pop
mov
outsl
cmp
or
mov
bndldx
mov
loop
cmpsb
nop
add
fsubrl
int3
jecxz
repz
in
mov
add
jb
sbb
and
jo
fsub
inc
hlt
int3
pop
sbb
loope
ljmp
test
lret
mov
ljmp
dec
xor
lret
stos
and
inc
add
sub
in
nop
int3
daa
pop
stos
pop
loop
xor
xchg
lahf
scas
mov
inc
adc
stc
and
inc
adcb
ds
in
ljmp
testl
and
pop
out
stos
sbb
ljmp
nop
pop
mov
push
jno
es
pop
cmp
inc
leave
cmp
mov
inc
mov
xchg
push
add
cmc
jns
sti
scas
fnstsw
push
shll
aaa
fbld
and
jne
inc
int
mov
xor
addr16
adc
pop
xor
push
repnz
mov
ret
dec
cs
dec
push
inc
mov
cmpsl
or
mov
xlat
fnstsw
mov
jg
push
jg
and
jle
jecxz
cmpsb
mov
cltd
popf
addr16
test
sub
lods
aad
fidivl
xchg
setne
cmp
movb
adcl
inc
clc
loopne
jg
jge
and
adc
mov
mov
cmp
xchg
mov
clc
js
adc
imul
scas
mov
dec
xor
fwait
imul
int
les
call
lds
cmp
adc
out
movl
lods
in
xchg
out
push
cltd
and
stc
xchg
jp
pop
mov
nop
imul
cli
scas
ja
xor
insb
push
pop
push
mov
clc
mov
jle
stos
push
notl
push
xor
stos
push
xor
fistpl
lock
repz
imul
sub
scas
push
inc
imull
cli
mov
mov
stos
push
or
cmp
divb
ficoml
xchg
loope
push
scas
bound
inc
repnz
mov
cli
mov
sbb
addr16
mov
jge
xor
jb
sbb
rcrb
add
xor
mov
movsb
insb
push
test
add
push
mov
flds
push
mov
fldcw
or
inc
loopne
inc
repz
adc
mov
movsb
imul
mov
jo
ss
cmp
mov
or
sbb
mov
or
cli
in
out
or
mov
popa
test
push
lret
jmp
lods
xchg
cld
mov
jae
push
hlt
sub
adc
dec
nop
lret
addr16
and
icebp
dec
inc
hlt
mov
pop
dec
in
mov
sbb
lcall
mov
loopne
xchg
mov
cld
mov
scas
sbb
lahf
mov
cmp
mov
arpl
push
jl
cmpsl
jne
push
sub
test
sbb
add
xor
jecxz
dec
in
and
sub
xlat
mov
pushf
adc
nop
in
cld
mov
fildll
mov
gs
jp
xchg
push
mov
rcrb
out
inc
xor
adc
jno
inc
scas
push
mov
jl
jg
jbe
xchg
lds
dec
or
repz
jbe
jmp
lods
xlat
popf
xchg
jle
xor
sbb
daa
cmp
aas
ja
or
sahf
jge
add
incl
push
lahf
sarl
and
out
test
pop
loopne
out
jb
int
fmul
adc
dec
mov
pop
push
lahf
pop
sti
dec
and
add
jo
ljmpw
push
arpl
loope
mov
shrb
mov
push
push
insb
sub
push
add
fs
jg
es
mov
dec
and
xchg
clc
and
inc
out
push
xor
inc
jecxz
push
ds
mov
pop
mov
jnp
mov
inc
jne
inc
sub
push
jecxz
data16
mov
std
xor
push
inc
insb
out
pop
mov
xchg
xchg
or
add
ljmp
mov
out
xchg
mov
or
lea
sti
test
lret
das
add
xchg
lcall
sub
dec
out
imul
hlt
or
xor
mov
jne
movsl
push
dec
jle
inc
insb
and
inc
push
adc
imul
ret
test
je
dec
cmc
loop
mov
pop
jno
pushf
aaa
pop
clc
mov
mov
test
mov
icebp
mov
pop
stos
xor
push
js
push
insb
mov
inc
test
fstp
bound
adc
test
imul
enter
inc
sbb
shll
out
fisubs
mov
data16
pop
pop
jb
je
jns
lcall
push
mov
mov
pop
jge
test
jno
xor
scas
mov
mov
arpl
movsb
cmp
jecxz
add
push
push
ret
dec
fisubrs
mov
jecxz
gs
cmp
mov
lea
cmp
fnstsw
jno
aaa
out
push
sbb
inc
cmpsb
fnsave
imul
or
movsl
shll
data16
and
rolb
repz
dec
dec
out
data16
in
sub
jae
notb
mov
mov
lods
xor
clc
dec
xor
xor
jg
push
repz
es
adcl
pusha
push
push
pop
lods
pop
inc
inc
pop
cmpsb
clc
xor
sub
or
cmp
adc
stos
jbe
adc
iret
inc
jle
shrb
imul
jnp
mov
sub
out
mov
test
xor
xchg
addr16
add
cmp
mov
inc
and
das
push
mov
rcl
jns
sbb
repz
repnz
pop
jno
test
push
jne
outsb
cmpl
cs
mov
mov
es
xchg
dec
cltd
push
mov
cmp
push
out
xchg
sar
roll
cmp
xorl
pop
rcrb
sbbl
clc
mov
adcb
jl
ret
mov
inc
add
out
mov
call
push
dec
gs
sub
xor
scas
stos
and
sbbl
sbb
pop
es
icebp
jno
ret
loop
lcall
mov
push
jg,pt
ljmp
push
in
and
or
int3
mov
scas
xchg
mov
lea
loop
push
imul
push
push
jle
mov
jg
int
jnp
mov
sbb
mov
jns
out
test
fwait
push
es
into
aad
adc
jecxz
and
sub
in
cli
cmpb
inc
outsb
loopne
decb
add
push
fdivrs
cvtps2pd
cmp
in
mov
shll
shlb
mov
xor
and
aas
imul
fldenv
les
and
and
xor
push
insl
mov
jecxz
adcl
rcll
mov
jnp
mov
jl
pop
mov
sub
sub
dec
sbb
mov
dec
call
inc
and
xor
mov
cmp
ret
jmp
and
mov
xorb
sbb
popa
mov
jl
das
mov
das
insl
or
vmovntps
imul
mov
cmpsl
enter
sub
out
mov
add
outsl
mov
sti
movsl
data16
clc
xchg
scas
xchg
outsl
call
mov
ds
dec
in
loop
je
clc
cwtl
xor
pop
jbe
incl
cs
rcr
test
cld
fsubs
jno
js
mov
sbb
int3
mov
out
gs
mov
jge
push
sbb
sbb
loope
clc
push
icebp
imul
sbb
pop
iret
aam
mov
pusha
inc
sbb
dec
jno
and
in
and
mov
dec
sub
mov
sti
sbbl
outsl
je
jle
dec
xor
orl
stc
inc
mov
sub
jp
push
jns
fsubrs
sbb
sti
adc
mov
push
push
fldcw
popf
data16
push
add
cmp
push
xchg
jne
jle
push
dec
cmp
inc
dec
inc
into
add
movsb
nop
inc
ljmp
cmp
cwtl
xchg
div
jo
push
into
pop
mov
psubsb
dec
or
xorw
xacquire
xchg
jecxz
mov
aaa
push
ds
mov
jge
inc
mov
and
fidivrl
das
mov
cld
arpl
fstpl
arpl
add
add
pop
lods
inc
sbb
icebp
ja
sub
pop
xchg
adc
inc
xchg
ja
mov
cmp
bound
cli
jmp
dec
push
rcrb
and
mov
pop
sub
push
xchg
xor
and
mov
push
in
int
out
mov
lcall
repnz
fs
pop
or
mov
jnp
mov
imul
add
push
pop
cmc
cli
add
or
sbb
jmp
pop
push
popa
sbb
in
fwait
cmpsb
test
movsl
popa
fsubr
sbb
sub
jae
aaa
jge
loop
push
sub
pushf
test
add
cltd
xor
js
out
dec
inc
int3
movsb
cmp
into
rolb
mov
fldcw
mov
cli
lcall
mov
push
inc
shll
mov
shll
loopne
popa
mov
mov
mov
loope
adc
gs
inc
rolb
clc
in
in
mov
fldt
cmp
add
ljmp
bound
pop
push
mov
adc
cs
push
aam
and
aas
pop
jg
das
bound
mov
push
mov
ljmp
jmp
inc
jmp
mov
dec
sarb
add
xchg
pop
sub
xor
add
or
sub
popa
into
sub
incb
fstl
xchg
js
cmp
add
push
xchg
xchg
push
sub
or
mov
pop
ret
cmp
scas
jp
mov
inc
daa
shrl
pop
ds
or
push
mov
mov
fst
dec
mov
loope
push
cli
mov
cmpsl
push
adcl
mov
xor
xchg
add
dec
addb
or
push
push
xor
jns
or
jns
pop
fstl
and
gs
dec
pop
int3
inc
adc
push
push
cmc
dec
outsl
or
mov
sbb
imul
es
sar
and
insl
sbb
sahf
into
pop
leave
sti
push
mov
inc
xlat
repnz
cmp
pop
jb
sbb
popa
and
int
mov
lcall
pop
pop
pop
imul
add
push
cs
lret
or
lea
fisubrl
mov
stos
pop
inc
out
clc
popa
pop
mov
hlt
inc
pop
add
xor
push
xor
fldenv
fbld
data16
dec
insl
mov
jmp
lock
sbb
mov
sbb
adc
inc
add
add
jl,pt
mov
jnp
into
xchg
xchg
leave
sub
ljmp
test
xor
or
pop
xchg
mov
icebp
xchg
xchg
lcall
inc
mov
pop
add
xchg
add
sbb
jmp
xchg
negl
repz
test
cltd
push
xchg
push
add
xchg
jge
mov
loopne
in
pop
fs
sbb
loope
inc
mov
fwait
gs
enter
cmp
mov
dec
or
adc
or
mov
inc
daa
jle,pt
jae
sbb
inc
sbb
push
push
xor
mov
test
test
dec
je
sub
sub
mov
into
dec
adc
add
adc
or
sbb
mov
clc
sub
ss
aas
loop
ret
jne
scas
and
out
lcall
int
sub
push
andl
inc
out
dec
clc
pushf
test
cmp
pop
push
mov
loope
xchg
mov
cs
push
lret
and
inc
daa
pop
lret
pop
leave
xchg
aad
popf
dec
xchg
pushf
mov
jmp
stos
xor
shr
add
cmc
in
sbb
pop
push
push
inc
xchg
roll
mov
mov
lods
decb
pop
pop
or
mov
xchg
stos
sub
clc
mov
loope
pop
inc
mov
dec
add
sbb
or
cltd
xchg
xor
fucomip
xchg
fidivl
or
lods
pop
sahf
insl
xchg
dec
mov
add
dec
scas
cltd
inc
scas
fisubrs
inc
shlb
ss
fwait
push
push
inc
mov
stos
jecxz
mov
and
aad
js
outsl
mov
enter
jo
shll
pushf
pop
or
jbe
xlat
out
dec
and
insb
in
mov
sub
stos
mov
push
sub
push
movsl
mov
insb
mov
add
addr16
call
repnz
mov
xor
sbb
shrb
inc
push
lret
push
jbe
jns
rclb
jge
mov
sbb
push
fcompl
pop
clc
aas
xlat
cmpsb
mov
add
add
or
inc
sbb
cmc
fnsave
mov
outsl
mov
and
dec
xchg
into
leave
dec
jo
mov
jbe
mov
fistps
pop
test
lret
jl
xor
mov
aas
inc
add
scas
mov
jo
add
jno
jmp
cli
dec
shrl
scas
stc
into
mov
iret
hlt
xchg
inc
ljmp
push
lret
dec
popf
rcl
xor
fwait
pop
sbb
cwtl
ret
fistl
push
xor
fstpt
xchg
xor
test
xor
jg
pop
int3
fldcw
fbstp
sub
dec
cmc
inc
addl
dec
std
leave
shrb
pop
jbe
flds
mov
push
push
push
rolb
aas
inc
dec
dec
pop
hlt
fbld
cltd
in
dec
dec
xchg
outsl
sub
sbb
das
mov
sub
js
jno
add
mov
daa
pop
and
sbb
add
sbb
shl
xor
lods
aam
push
mov
mov
mov
cmp
cld
inc
addr16
mov
cmp
sahf
inc
mov
out
jb
cmp
pop
lahf
xchg
pop
mov
pop
pop
and
mov
pop
adc
cld
roll
mov
and
cltd
into
sbb
sti
and
or
or
push
ret
inc
insb
dec
mov
jecxz
add
mov
mov
xor
std
movsl
cmp
ljmp
pop
bound
mov
or
fdivrs
jmp
rolb
movsb
push
loopne
data16
stos
pop
arpl
pop
xchg
mov
sub
inc
add
xchg
push
xor
add
dec
mov
gs
inc
sbb
dec
fidivl
out
mov
sbb
fdivs
push
push
out
pushf
ret
jbe
or
xor
imul
in
pop
fnstenv
bound
test
addl
sarl
arpl
sbb
mov
sti
std
inc
xor
mov
xchg
pushl
and
xchg
inc
imul
mov
pop
arpl
inc
push
mov
sahf
pop
sahf
or
leave
sbb
mov
xor
cmpsb
mov
enter
sbb
aaa
dec
sbb
push
lock
pop
sub
jbe
fcomps
test
sub
roll
xlat
cltd
jbe
mov
or
xchg
jae
cltd
push
mov
pop
and
stos
out
aad
sbb
out
mov
hlt
roll
add
aad
mov
aas
mov
cmp
jo
stc
add
sbb
sub
movsl
add
orl
sub
sbb
lahf
out
testl
jb
pop
and
add
jbe
insl
outsb
xor
adc
jns
sub
sahf
xor
lock
ret
or
fistl
xchg
pop
shrb
jl
jb
insb
pop
int
imul
lods
les
jb
inc
test
mov
lahf
scas
push
sbb
xor
stc
pop
mov
dec
adc
mov
int
aaa
fcompl
sti
jl
xchg
sarl
mov
xor
xchg
mov
cld
xor
dec
outsb
fwait
loope
sbb
and
adc
rcrb
xchg
sbb
xor
rolb
add
aam
lods
fnstsw
test
call
jb
icebp
adc
popf
lret
cs
int3
dec
xor
or
call
mov
shll
je
pop
and
pop
dec
xor
dec
sti
sbb
sbb
lret
mov
mov
int
daa
in
push
push
push
scas
jns
mov
les
xchg
scas
cs
cmc
or
lods
out
cmpsb
in
mov
loope
add
jmp
pop
pop
jecxz
pusha
mull
insb
insb
or
aas
in
insl
rolb
rcl
stos
or
shll
mov
mov
mov
adc
test
mov
pop
xor
repz
lock
int
fldl
fdivrl
xchg
lret
addb
mov
imul
imul
daa
inc
in
and
push
dec
or
lret
lret
pop
scas
ret
fldcw
mov
jo
int3
or
push
or
mov
xchg
add
xchg
mov
mov
xchg
imull
cmpsb
int
stos
mov
es
out
in
mov
jns
inc
jle
push
cmpsl
add
nop
sbb
jmpw
iret
sti
nop
into
sub
dec
lret
aaa
aaa
adc
out
popf
icebp
add
ljmp
dec
into
repnz
test
sub
movsl
stos
aas
ja
shlb
sbb
inc
jg
sbb
pop
sahf
loope
movl
mov
cs
mov
in
in
mov
mov
mov
out
adc
test
sub
fdiv
ljmp
cmpsb
pop
add
xchg
pop
sub
outsl
aad
imul
push
mov
mov
pop
sub
inc
sbb
orb
mov
push
out
mov
mov
pop
out
aas
pop
pushf
aad
jl
stc
pop
popf
fstpt
add
pop
idivb
scas
iret
rorb
cld
inc
out
add
push
fsubp
dec
add
fsts
subl
mov
test
jl
mov
xchg
pop
cmp
ret
sbb
movsb
and
mov
popf
cmc
inc
mov
psubsw
outsl
push
rcrb
ficompl
and
test
fstpl
mov
mov
xchg
xor
insl
scas
fmuls
aaa
cwtl
testl
stos
sahf
xchg
add
push
mov
pushf
lds
pushf
push
loop
mov
mov
pop
jno
push
xchg
cmp
jg
fwait
mov
xchg
notl
ss
ja
mov
rcrb
leave
push
mov
in
jp
add
push
or
subb
inc
mov
ret
imul
mov
add
jbe
dec
jo
vmaxps
cmpsl
add
out
out
movb
jg
leave
pop
mov
add
movb
pop
lret
push
cs
mov
dec
addl
test
daa
pop
mov
cld
push
sbb
leave
arpl
mov
outsb
cltd
dec
xor
test
icebp
mov
xorl
jecxz
xor
scas
or
dec
mov
mov
cli
fldenv
dec
orb
lods
mov
mov
mov
sub
and
mov
loope
cmp
pusha
popf
push
subl
fidivl
add
fisttps
ret
sub
pop
mov
jecxz
mov
js
pop
xchg
test
lock
xor
cmp
or
xchg
pop
xchg
pop
jg
lret
xorl
or
mov
jmp
dec
push
dec
in
jle
add
sub
out
cli
mov
xor
arpl
mov
out
mov
out
add
sub
mov
in
push
lock
cltd
pop
jae
vpmaxsw
pusha
popf
bound
test
push
push
popa
mov
sub
push
xor
xchg
xchg
add
mov
xor
bsf
push
mov
loope
dec
jge
push
push
mov
rorb
sub
mov
fsub
sub
mov
jecxz
inc
dec
cmp
sbb
popf
dec
dec
lods
push
gs
lea
mov
and
sbb
cwtl
lcall
mov
push
xor
push
into
xchg
out
pop
hlt
mov
or
stos
jge
mov
jmp
nop
testl
out
sbb
xor
repnz
das
lret
pusha
jp
fwait
sub
daa
mov
dec
mov
das
dec
cmc
mov
xlat
ljmp
push
mov
test
mov
test
nop
xor
test
enter
js
sub
lea
push
les
xorl
daa
popf
inc
nop
or
pop
mov
jbe
mov
mov
sbb
icebp
jne
and
jb
xor
mov
dec
push
ja
mov
add
lods
aas
xchg
and
mov
das
ret
cmp
les
push
adc
add
add
das
lret
inc
mov
idiv
and
xchg
fnstcw
xlat
call
inc
add
mov
xor
jg
mov
mov
mov
out
mov
mov
lods
lock
dec
push
inc
adc
shr
cmpsl
rcll
pop
dec
jecxz,pt
repz
sub
loope
mov
jg
out
cmp
addr16
sub
lret
test
ja
lahf
pop
dec
jmp
sub
add
pop
repnz
sbb
test
mov
imul
mov
lret
addb
push
add
rcrl
xchg
out
pusha
add
jmp
pop
mov
jecxz
push
fisubrs
in
mov
fnsave
testl
sub
add
or
je
pop
cltd
out
movsl
inc
int3
enter
add
mov
push
paddsw
sbbb
ss
pop
mov
adc
in
jnp
mov
mov
xchg
cmp
mov
enter
mov
ret
movsb
aas
hlt
add
hlt
cltd
inc
sub
sahf
jecxz
mov
ja
inc
int
test
sarl
push
lret
pop
cltd
sbb
mov
out
or
or
inc
pushl
and
imul
sbb
inc
fsubs
push
mov
cmpsl
push
or
or
push
mov
cli
jl
sbb
push
mov
movsl
sub
pop
rol
out
xchg
in
sbb
pop
push
add
stos
and
in
mov
mov
xchg
lods
in
xchg
xor
daa
or
push
mov
jb
cmp
sti
subb
inc
sub
pop
jns
clc
fisttps
push
rcl
stc
jge
shll
test
add
das
icebp
push
jge
sarb
pop
sub
ffreep
sub
shlb
and
leave
and
dec
mov
jmp
fstp
pop
jmp
fadds
adc
lods
sbb
pop
sbb
or
xor
mov
xor
push
subb
adc
fdivl
dec
loopne
cmp
push
inc
in
xchg
stos
mov
pop
ret
jecxz
push
inc
mov
lret
cmp
jbe
sub
mov
add
icebp
cmp
iret
dec
lret
imul
jge
icebp
jle
lret
and
dec
subps
push
mov
or
add
dec
sbb
iret
popf
inc
nop
sub
xor
and
loopne
test
fists
jl
sbb
test
andl
cmc
lds
ret
stos
xchg
addr16
xchg
mov
leave
fisubrl
xor
push
cmc
mov
iret
jno
and
jle
stos
or
push
loope
dec
dec
in
sbb
xor
or
add
dec
int
test
enter
cmp
pop
mov
push
or
sub
in
mov
leave
fs
inc
cmp
cmpsl
mov
mov
pop
mov
in
adc
dec
sahf
divb
jbe
inc
mov
lret
inc
mov
cs
add
fsubrl
xchg
or
mov
out
pusha
inc
and
out
adc
mov
mov
outsb
nop
cld
and
mov
inc
faddl
jmp
sbb
stos
insb
and
push
pop
push
pushf
mov
push
ljmp
lods
movsb
mov
imul
push
jle
loop
pop
inc
testb
in
loop
jmp
mov
sbbb
pop
and
push
rorb
fs
data16
push
aam
mov
sbb
dec
cmpsl
xor
popf
jno
fwait
addr16
mov
cmp
jp
mov
jle
in
pop
insl
imul
aaa
push
push
xchg
lods
addr16
gs
std
lcall
inc
cltd
mov
pop
popf
push
xlat
shl
xchg
inc
xchg
in
sbb
cmpsb
pop
add
mov
sti
push
jmp
dec
imulb
cmp
sbb
in
sbb
out
sahf
push
test
dec
outsb
xchg
pusha
cld
jp
outsb
enter
jge
mov
js
xchg
test
nop
sbb
push
adc
lea
jmp
xor
inc
popf
push
clc
test
outsl
push
xchg
notb
mov
aas
mov
dec
int3
jecxz
xor
and
pushf
sbb
rorl
jecxz
in
scas
les
xor
add
rcrl
sbb
push
xchg
jl
push
cmpsl
and
jle
cs
scas
aaa
mov
push
cld
pop
sbb
or
adc
sbb
mov
out
dec
pop
xor
xchg
das
xor
jp
icebp
in
das
fcompp
adc
lods
and
inc
stos
adc
arpl
cwtl
cmc
mov
cltd
cld
jge
xchg
or
jle
add
das
aaa
popf
not
dec
outsl
sbb
loop
dec
icebp
es
aas
cltd
cmpb
add
jmp
stc
lahf
lret
stos
cmp
xchg
pop
test
pop
popa
loope,pt
int3
jne
sbb
or
cmp
fld
cld
mov
push
out
lods
aaa
sub
push
test
lahf
out
jl
jl
scas
pop
mov
mov
call
fcmovnb
fs
loop
std
adc
stos
rolb
sub
rorl
cmp
adc
mov
mov
test
xor
fcompl
mov
dec
movsl
or
es
lret
mov
out
mov
mov
int3
jae
inc
out
loope
inc
shrb
rcl
xchg
aad
out
dec
cmp
scas
mov
sbb
mov
outsl
add
ja
jae
js
hlt
sti
adc
cmpl
xchg
call
pop
movsl
aam
xchg
test
scas
dec
fwait
aas
xor
lds
mov
cmp
mov
loopne
jns
lds
xchg
pop
es
sub
jno
addr16
fstl
leave
aas
or
jg
or
mov
stc
loopne
push
cmp
pusha
add
lock
xchg
inc
bndldx
fnstenv
jle
jecxz
testb
sarb
out
aas
ja
add
pop
jmp
addr16
hlt
jl
inc
mov
imul
mov
test
inc
jg,pn
mov
scas
adc
mov
pop
inc
dec
insl
sahf
cld
inc
scas
mov
sbb
add
push
sub
sbb
xor
cmpl
pop
dec
or
sub
cmp
ret
push
push
pop
mov
pop
pop
push
fwait
cmp
inc
add
lahf
arpl
sub
cs
mov
test
push
inc
fidivrs
cmp
sub
insb
lds
push
nop
mov
pop
fsubrl
adc
mov
test
int3
icebp
dec
pop
jl
shll
test
hlt
test
dec
movsl
mov
mov
int3
jecxz
xchg
dec
lods
je
mov
sahf
xchg
arpl
cmpsb
notb
xlat
pop
stc
push
push
mov
jo
stos
mov
cld
push
icebp
iret
mov
je
aas
cmp
insb
loop
sub
jns
lods
cmpl
adc
negl
sbb
loope
aas
dec
inc
inc
inc
in
mull
or
push
stos
pop
jmp
mov
pop
pop
insb
dec
jg
or
in
insl
xchg
and
or
fs
pop
jmp
inc
push
fmuls
mov
cmpsl
daa
push
mov
popf
pop
jg
and
mov
aas
pop
nop
movsl
xorl
test
lcall
repnz
jae
push
ljmp
mov
imul
push
fmull
lret
jo
or
aam
cmp
aaa
inc
test
fistpll
jo
add
jp
pop
pop
inc
and
jecxz
push
loopne
movsb
pushf
fwait
mov
scas
test
mov
ret
sub
loop
mov
mov
pop
iret
or
mov
add
insb
and
cld
int
pcmpgtw
inc
aad
dec
pop
pop
fs
xorl
cmpb
pop
jne
dec
loopne
cwtl
inc
popf
pop
subb
or
pop
inc
stc
das
rclb
nop
dec
loope
repnz
sub
imull
add
lcall
lret
sub
shl
pop
shll
push
ret
fmull
push
je
xor
sub
sub
inc
xchg
add
pushf
outsl
fldl
xor
adc
sbb
pop
jl
mulb
addr16
cmp
and
enter
pop
hlt
dec
movsl
sub
xchg
pop
test
sbb
jg
mov
lods
movsl
popf
out
cmp
into
dec
bound
inc
pop
push
hlt
jb
out
loopne
lds
sbb
mov
fs
iret
cltd
es
jg
jbe
dec
xchg
cmp
pop
add
dec
xor
shrl
inc
jp
or
sbb
lcall
cmp
pusha
cmp
cltd
xchg
mov
cmp
leave
mov
outsl
data16
mov
cli
dec
and
push
pop
sub
adc
jbe
sbb
xchg
imul
lcall
daa
mov
sbb
ja
fisubrl
in
xor
jg
out
xor
dec
xchg
lret
aad
xchg
into
inc
cs
mov
mov
add
lods
dec
movsb
stc
iret
jo
out
cs
addr16
sub
sbb
das
lods
leave
lret
xor
imul
sbb
ss
adc
aas
pop
ja
pop
xor
push
nop
xor
lock
mov
sbb
imul
dec
jmp
out
rcll
roll
testb
pop
mov
dec
push
test
mov
loopne
jns
mov
sbb
jno
jecxz
and
mov
cmp
rcr
test
dec
pushf
jge
cmp
rcll
loopne
inc
leave
xchg
mov
repnz
mov
pushf
xor
adc
int
jmp
jbe
fsubl
and
arpl
sub
ds
sbb
sti
outsb
push
cli
mov
insb
mov
add
loopne
sub
fcomps
or
push
add
mov
daa
adc
mov
cmpsb
adc
inc
lods
movsl
in
cmp
fisubs
in
mov
or
call
fistl
fst
mov
sbb
inc
insl
int
or
fimuls
icebp
jge
cmp
je
mov
push
sub
push
pop
in
push
call
xchg
movsl
or
test
cmpsl
xchg
or
in
sub
and
pop
movsl
bnd
arpl
cmp
loopne
les
loope
ss
test
push
repz
add
enter
jl
mov
sbb
jbe
push
scas
mov
mov
jns
cmp
ret
bnd
xchg
adc
dec
int3
dec
jl
pop
enter
sbb
xchg
pop
in
sub
pop
sahf
loopne
stos
lret
addr16
incl
sbb
mov
adc
int
popa
daa
pop
shll
fisttps
push
mov
pop
or
insl
fbld
sbb
jo
pop
aam
js
ret
xor
mov
repz
stos
lods
mov
xlat
inc
mov
scas
pop
xor
push
mov
or
clc
mov
loopne
and
out
or
inc
hlt
jno
sub
popa
shlb
out
xor
lret
push
push
in
sub
loope
pop
add
mov
ds
clc
xchg
cs
aaa
mov
or
movsl
frstor
mov
pushf
mov
push
cmpsb
mov
lcall
test
arpl
out
mov
or
nop
inc
js
pop
cmp
push
jecxz
pushf
mov
lds
xchg
push
fs
js
jecxz
cmp
xchg
xchg
cmpsb
mov
xchg
aad
add
sbb
adc
out
stc
sub
xor
jbe
outsb
push
mov
lods
cmp
jecxz
outsb
adc
dec
fdivs
stos
xchg
xchg
mov
add
pusha
mov
fmuls
inc
stos
push
std
jp
pop
fwait
int3
enter
cmpsb
jb
pusha
mov
pop
scas
dec
adc
outsl
jnp
outsb
or
imul
mov
xor
cltd
gs
mov
mov
jo
dec
sub
push
addr16
mov
cmp
xor
aas
cmp
push
pop
pop
in
mov
test
sahf
enter
lret
sbb
or
or
and
in
hlt
jl
cmp
pop
and
dec
xchg
jns
in
mov
lods
push
xlat
das
imulb
data16
stos
cli
sbb
jno
clc
push
loopne
pusha
push
in
sbb
or
pop
push
jne
scas
sbb
jo
and
add
pop
dec
and
push
push
push
pop
push
ljmp
cmp
cmc
into
lea
ja
and
sbb
mov
flds
inc
xchg
push
xchg
fisttpll
out
push
sbb
mov
imul
imul
enter
or
jae
shlb
sahf
es
xchg
lock
xchg
test
pusha
push
adc
add
mov
sbb
xor
lea
jno
mov
les
call
push
aad
cmc
cmp
lahf
scas
flds
icebp
mov
stos
mov
or
push
movsb
je
and
test
push
push
and
fdivs
cltd
mov
incl
cmp
push
add
sub
dec
xchg
out
popa
or
xchg
ss
mov
shl
imul
and
and
pushf
sbb
rolb
hlt
mov
xchg
clc
push
mulb
pop
es
mov
and
int
and
out
xlat
bound
fwait
pop
mov
repz
dec
cmpl
jmp
pop
cmp
ret
out
inc
xchg
test
push
pop
insl
aad
scas
jne
jge
test
movsl
fsub
or
in
leave
pop
cs
aas
jecxz
dec
xor
jno
pop
hlt
or
stos
cmp
jp
add
test
aas
sub
push
ror
mov
int
mov
and
lret
xchg
ljmp
les
mov
and
cmovae
sbb
inc
lcall
test
xchg
enter
pop
jge
jmp
mov
loopew
mov
and
fbld
shll
pop
rorl
data16
push
mov
dec
movsl
jmp
jp
sub
lods
adc
jp
push
js
mov
mov
mov
repnz
aad
stos
aam
inc
mov
inc
cmpsl
mov
dec
push
enter
adc
movsl
ds
sbb
in
add
insb
loope
pop
mov
mov
jnp
enter
pop
add
inc
popf
outsl
daa
ret
pop
loop
xchg
stos
jne
inc
rclb
sti
div
pop
imul
jmp
rol
pop
sub
das
mov
mov
test
stos
mov
imull
mov
or
sbb
and
adc
test
ret
loope
xchg
or
loopne
hlt
push
lcall
dec
je
mov
inc
in
jb
shll
push
mov
pop
getsec
fiadds
and
ljmp
test
out
int
in
mov
cmp
fcmovnbe
xchg
stos
mov
out
and
sahf
addr16
dec
shl
leave
and
pop
sbb
cmp
pop
xor
hlt
mov
or
fistps
push
dec
inc
adc
or
sub
movsb
std
clc
arpl
test
outsl
pop
mov
pushf
jno
xchg
mov
imul
fldlg2
sub
psubq
cmp
imul
pop
jecxz
xor
inc
call
pop
add
test
jne
or
mov
push
fadd
fucomip
imul
xchg
or
cli
incl
jno
dec
mov
daa
fisttpll
cmp
aaa
sub
fs
sbb
scas
repnz
cltd
xor
jbe
pop
xor
add
jecxz
in
inc
data16
xchg
sub
out
push
sub
cwtl
arpl
jnp
xor
xchg
mov
js
scas
push
and
inc
stc
jnp
adc
lock
je
mov
pushf
mov
rorl
inc
adc
test
insl
lret
incb
pushaw
xor
stc
mov
loop
inc
jnp
inc
mov
out
loopne
popf
aas
cs
push
test
cmpsb
inc
shlb
outsl
mov
cltd
dec
adc
or
pop
cld
pop
mov
data16
iret
mov
xchg
mov
gs
mov
xchg
and
fsts
insl
sbb
mov
ret
cltd
scas
inc
jmp
xchg
repz
shrl
loopne
inc
fdivl
out
jp
jl
orl
mov
add
enter
adc
add
incl
jge
or
popa
add
mov
dec
lea
leave
bound
mov
xchg
cmovg
sub
pop
add
pop
xchg
pop
pop
push
test
fwait
push
ljmp
dec
fisttpll
mov
dec
and
out
mov
adc
lds
sbb
push
sbb
mov
and
push
add
ret
inc
or
cmp
in
or
in
jp
pop
lret
push
rcrb
sbb
dec
and
mov
stc
cmp
xor
bound
ljmp
push
fiadds
ss
cmp
and
jno
pop
mov
inc
jno
into
xor
xchg
inc
sahf
js
insl
fs
cmpsb
aad
loope
mov
xor
mov
mov
inc
adc
dec
sahf
fisttpl
xchg
test
xor
mov
lds
in
jle
das
vpslld
lods
daa
popa
movsl
rclb
in
inc
mov
dec
inc
jnp
dec
jecxz
stos
xchg
pop
xorb
shlb
jne
sbb
shl
sub
push
xor
ljmp
add
outsb
test
cltd
mov
aad
adc
pop
imul
repnz
shl
lcall
clc
cmp
sarl
push
ljmp
roll
mov
js
or
pop
loop
mov
in
push
scas
call
xchg
add
js
mov
jnp
and
fisubrl
ljmp
inc
dec
clc
jno
notl
les
imul
and
mov
sub
sbb
add
lock
incl
push
cmp
sarb
push
pop
or
shlb
add
inc
adc
mov
push
mov
lea
lea
sub
and
or
mov
stc
jmp
enter
inc
call
mov
pop
and
sti
inc
jnp
fstpt
iret
test
repnz
sbb
fwait
jl
pushf
mov
xor
push
jle
adc
test
pop
scas
push
inc
add
adc
mov
idivb
ficomps
xchg
pop
test
cmp
int
lods
aam
dec
sub
fistpl
outsl
shrb
outsl
int3
daa
arpl
lret
jg
add
cltd
mov
adc
leave
sbb
repnz
sub
int3
ror
sub
leave
ljmp
and
xor
js
xchg
jg
pusha
mov
out
leave
sub
int3
nop
rcll
push
pop
sub
mov
testb
es
cmp
mov
sbb
add
cmp
jle
inc
sub
fs
sbbl
add
cmc
into
lds
mov
imul
in
pop
fcmovb
jge
xchg
popf
push
rcrl
jl
out
insb
dec
test
xlat
xor
jl
lds
mov
call
pop
test
repnz
push
movsl
test
icebp
cmpsl
fwait
mov
and
pop
jns
fwait
lods
fists
sbb
jns
fistps
xchg
mov
in
les
pop
pop
imul
mov
insl
mov
testb
push
push
xchg
jb
xchg
call
pop
lds
movsl
addr16
les
mov
push
sbb
cmc
mov
ljmp
push
pop
into
fmuls
cmpsb
loop
mov
int3
ljmp
sbb
mov
sbb
push
cmp
scas
and
cmpsb
sbb
out
jge
movsl
daa
push
jns
les
mov
fldcw
cs
sti
mov
std
ret
rorb
xchg
xor
loop
pushf
jbe
cltd
push
cli
enter
jg
out
shl
xchg
sub
shrb
int3
push
negl
cmc
push
lret
or
sub
negb
pop
xlat
pop
sub
xchg
push
insb
pop
mov
ja
push
stc
test
xchg
mov
or
push
sahf
imul
mov
xor
insb
mov
filds
jns
push
cmp
jnp
fisubrl
mov
add
xor
ficoml
out
adc
stos
pop
dec
jg
mov
xchg
loop
mov
mov
in
imul
invlpg
mov
sub
xor
fidivrs
cmpsb
nop
dec
xor
testb
or
jne
imul
shlb
mov
insb
sbb
inc
mov
sti
dec
xor
and
dec
daa
sbb
in
jbe,pn
inc
dec
add
or
xchg
es
xchg
mov
xchg
out
xor
xchg
pop
xchg
jge
std
pop
push
jo
stos
outsw
andb
xor
in
xor
mov
mov
fsubl
call
repnz
fsub
in
xchg
out
mov
in
xor
adc
xchg
shl
jmp
xor
mov
scas
test
das
jmp
push
leave
test
lret
xchg
aas
ds
ret
mov
lds
loop
je
lahf
adc
sbb
jno
scas
les
out
or
scas
testl
lods
scas
and
mov
and
pusha
pop
ds
sbb
pop
cwtl
es
lahf
out
xor
xor
je
repz
jp
stc
mov
adc
aad
pusha
sub
aam
pop
mov
mov
xchg
xchg
push
and
popa
dec
xor
jg
movsb
jmp
inc
outsl
scas
cmp
inc
mov
lahf
inc
xchg
stc
data16
pop
sub
sti
shrl
stos
icebp
ss
mov
or
pop
fadd
inc
rcll
cmpsl
pop
ja
lret
add
js
cmpsl
popa
xchg
sbb
aas
cld
push
pusha
jle
test
repnz
lods
sub
adc
add
mov
push
cltd
dec
cmpl
mov
sbb
out
pop
mov
cli
inc
int3
mov
ja
inc
mov
repnz
mov
jmp
repz
out
outsl
pop
lods
lcall
outsb
dec
mov
jno
fs
imul
les
xchg
int
or
jnp
jl
popa
sbbl
jge
neg
push
inc
adc
push
test
dec
lods
popf
xchg
adc
jp
sbb
mov
lahf
sbb
sbb
scas
jle
scas
lds
cwtl
ret
mov
push
mov
add
shll
push
dec
cwtl
insl
stc
fwait
test
xchg
icebp
ljmp
inc
adc
call
jno
add
mov
in
and
add
pop
mov
lods
or
dec
mov
test
popa
push
lods
in
les
jge
or
add
mov
adc
iret
add
ret
aaa
clc
nop
bound
loopne
icebp
div
cltd
iret
stc
add
fwait
lcall
sahf
xor
jge
fstpt
into
sbb
mov
jle
or
mov
mov
das
push
pop
pop
xchg
or
mov
fisubrl
push
mov
sub
dec
inc
fldl
lret
xchg
dec
inc
pop
iret
and
addr16
cmc
xchg
sub
xchg
sahf
cmp
lods
repz
sub
ss
xchg
lods
fmuls
pop
xlat
xor
je
adc
mov
arpl
sub
sbb
test
arpl
fwait
mov
pop
mov
subb
rcl
push
mov
fxch
sub
cmp
aam
mov
es
sub
lds
insl
fcom
int
inc
add
push
fidivrs
cli
jecxz
mov
popa
ja
xchg
pop
mov
mov
dec
dec
icebp
scas
jnp
std
fbld
or
push
in
fs
shll
js
repnz
cmp
shrl
push
pop
push
sbb
daa
push
lods
cmpsl
popf
or
sbb
mov
or
lret
hlt
pop
bound
sti
pop
out
imul
test
jae
mov
data16
cmp
in
pop
mov
mov
mov
mov
jno
pop
rclb
fldenv
pop
xchg
sbb
shlb
aaa
lret
subb
jne
mov
mov
ficoms
shrl
or
in
mov
int
sbb
lcall
jge
cmp
mov
xchg
mov
push
insl
xchg
dec
mov
push
incb
aad
mov
jne
cld
mov
pop
sbb
iret
inc
or
xlat
cwtl
shlb
add
ja
pop
ss
xor
fmuls
xchg
js
inc
xor
mov
and
lock
xor
or
push
pop
int3
add
aam
mov
xorl
ja
cld
daa
inc
fwait
jl
dec
iret
pop
xor
cmp
jne
mov
es
fsubrp
ja
jb
test
push
ret
addr16
xor
jo
lods
sub
stos
js
lret
rcr
cmp
mov
sub
or
mov
push
add
add
test
test
sbb
push
mov
mov
add
ret
iret
fchs
arpl
shl
std
vmulsd
sbb
out
int3
orb
lret
bound
std
pop
cmp
mov
dec
rorl
mov
into
mov
sbb
rorb
mov
push
subl
sub
dec
cmpsl
cltd
lds
iret
xlat
rclb
popa
jbe
mov
jae
jle
repnz
pushf
mov
iret
jp
sbb
sub
les
xchg
xchg
inc
sub
in
jno
repz
mov
pop
int
jl
leave
pop
adc
mov
mov
pop
inc
test
pop
stos
adc
stos
aad
jecxz
movsb
mov
mov
aas
in
dec
jge
cltd
xor
xor
gs
pop
dec
arpl
sub
enter
fnsave
jmp
xlat
orl
out
push
flds
faddl
fsubs
mov
push
popf
dec
xor
sti
ljmp
push
js
lods
rclb
push
arpl
ret
sub
ds
fmul
scas
mov
jb
mov
jp
xchg
insb
movsl
pop
fidivrl
jbe
xor
sbb
addr16
out
fldl
xchg
cmp
out
sbb
push
adc
mov
aam
pusha
aas
and
adc
je
aas
fcmovb
int3
imul
ss
arpl
imul
or
lods
sub
incb
pop
mov
adc
or
and
and
mov
shlb
mov
out
fcomi
dec
push
fdivrs
imul
xchg
mul
test
clc
loope
mov
ss
mov
xor
push
dec
sbb
cmp
cmp
movsl
pop
lock
jecxz
icebp
cmp
mov
fcomip
mov
lods
insb
lret
push
mov
ljmp
rol
cs
ret
test
cmp
in
jmp
push
sub
daa
lea
jecxz
fmull
stos
aad
das
das
mov
movl
push
pop
rcrb
cltd
int
cmp
shrb
pop
or
scas
rclb
das
aad
lret
jbe
lock
out
cmp
into
je
push
sub
cmp
push
mov
xor
mov
mov
xor
lret
loope
mov
in
pop
in
cmp
adc
inc
rcr
inc
and
lock
les
js
loope
add
ds
xchg
fldl
mov
push
lods
dec
into
add
cmp
leave
icebp
jge
sbb
sahf
xor
inc
mov
cmp
and
mov
dec
aad
daa
fmuls
xchg
pushf
mov
paddusw
or
push
pop
outsb
and
add
fimuls
pop
xchg
or
dec
imul
sti
dec
mov
aaa
out
in
rcl
orl
jg
jne
or
ret
mov
fwait
jle
push
jae
xchg
insl
mov
hlt
icebp
xchg
mov
aam
mov
or
mov
or
jecxz
rcr
lods
mov
fs
stos
sbb
inc
jmp
inc
inc
xor
cmpsb
jp
dec
mov
add
push
pop
bound
mov
ljmp
mov
sub
xchg
cmc
data16
cmp
or
scas
pushf
push
sahf
xor
pop
pop
cmp
fisubrs
enter
adc
inc
dec
add
repz
cmp
sub
lock
jb
movl
add
aaa
rcll
lds
mov
adc
pop
div
or
js
sarb
cmp
sbb
add
sub
js
sbb
in
sbbb
into
je
outsb
lar
cmp
aaa
out
icebp
jno
inc
mov
pop
adc
sbb
stc
and
lock
addr16
sti
or
mov
add
jae
cli
xchg
mov
inc
es
xchg
mov
jge
jle
lock
pop
jb
mov
push
out
xchg
pusha
dec
mov
iret
jo
movsb
movsb
push
stos
call
xchg
pop
icebp
xchg
js
rcrb
loop
inc
dec
mov
push
mov
jne
or
std
insb
into
xchg
aas
scas
cmp
insl
push
popa
push
inc
mov
push
mov
lods
jge
xor
mov
xor
xchg
lds
lods
xchg
inc
and
lock
dec
jl
cld
xchg
je
push
ljmp
es
enter
adc
lods
in
aam
in
daa
in
lods
fsubrs
adc
and
fisttpl
les
out
jbe
in
mov
jg
loope
and
ja
cmp
scas
adc
notl
sbb
inc
sti
insb
xchg
rcll
mov
mov
jne
mov
fsts
mov
ds
push
or
out
mov
jmp
xlat
fxch
lds
daa
adc
mov
cli
movsl
mov
or
lahf
out
cmc
jb
mov
mov
andl
mov
and
test
add
nop
popf
or
rcl
inc
popf
cmp
push
mov
dec
dec
sbb
mov
cmp
xchg
mov
shll
fisubl
into
cmp
lods
dec
pop
inc
test
pop
inc
adc
ljmp
in
inc
sub
addr16
jbe
push
mov
jmp
sti
mov
xchg
out
mov
imul
cli
mov
jge
into
cltd
and
mov
jne
inc
push
sub
stos
std
inc
jecxz
adc
push
pop
cs
subb
jl
or
jnp
push
lcall
mov
xchg
cmpsb
jb
mov
jae
pushf
mov
mov
dec
enter
jns
addr16
decl
push
pop
rolw
and
jecxz
mov
mov
lods
rcrb
jnp
xchg
add
mov
adc
sbb
dec
repnz
je
adc
orl
xor
mov
mov
jne
in
test
ds
out
aam
pop
pop
sbb
xor
shrb
mov
dec
and
add
shlb
sub
ss
xchg
rolb
mov
or
les
aas
and
enter
xchg
cmc
lret
mov
out
aas
ljmp
xchg
pop
outsl
mov
push
adc
and
roll
xor
add
fwait
sbb
out
mov
insl
js
and
cld
add
imul
mov
addl
or
mov
xchg
or
iret
jo
ret
dec
adc
inc
nop
inc
mov
xchg
int
fistps
push
je
imul
push
fs
bound
push
insb
ja
sbb
dec
mov
xor
pop
adc
aas
inc
pusha
rcr
dec
pop
and
scas
test
iret
xchg
mov
mov
fcmovne
sahf
push
iret
push
mov
lahf
pop
sbb
test
fmull
popf
jnp
mov
adc
xor
jns
negb
in
sub
adc
das
out
das
mov
cmpsl
adc
mov
aas
popf
roll
mov
es
or
mov
mov
pusha
lods
xchg
inc
push
cltd
shlb
in
repz
and
pop
imul
xchg
lods
addb
xor
pop
cmp
dec
out
ror
fidivl
mov
nop
aas
repnz
sub
jge
pop
mov
iret
dec
pop
push
pusha
mov
pop
fdiv
repnz
aam
mov
fwait
pop
xchg
test
in
out
inc
add
cmp
inc
jnp,pn
pop
ficomps
jge
mov
inc
out
mov
cmp
push
cltd
in
outsl
mov
push
push
pop
lret
push
xchg
adc
imul
rorl
lods
jb
insl
outsb
jle
ret
dec
lret
shrb
mov
add
add
xlat
testb
pop
in
inc
mov
outsb
dec
xor
inc
mov
cs
xor
sahf
lcall
xchg
adcb
fs
mov
call
and
or
out
pop
push
jle
jl,pn
icebp
enter
imul
mov
jno
lahf
add
sub
out
xchg
shll
or
pop
adcb
popf
cmpsb
xchg
jmp
cmp
jbe
mov
dec
outsb
in
jp
mov
cmc
imul
mov
and
insl
mov
sub
xchg
sub
pop
jne
sbb
push
cmp
mov
repnz
fs
sbb
mov
cwtl
sub
int
xchg
lret
inc
ret
into
jecxz
cmpsb
inc
insl
daa
xor
outsl
jmp
push
add
push
movsl
cmp
xchg
jle
test
es
mov
pushf
shrl
inc
xor
ja
or
dec
mov
mov
or
cmp
add
out
xor
sub
lahf
rorb
aad
repnz
xchg
scas
mov
jl
cwtl
pop
fdivr
lock
xor
into
or
not
cmpsb
push
popf
stos
jbe
xchg
push
sub
fadds
fs
sub
repnz
rclb
cli
je
jne
test
sbb
out
leave
js
inc
arpl
lock
push
in
push
test
cmp
and
or
jp
pop
adc
hlt
in
mov
nop
clc
push
jl
aaa
jl
add
std
in
cmp
fildl
inc
push
andb
jle
scas
pop
test
repz
in
cwtl
outsl
cmp
lahf
mul
das
bound
xor
push
ds
cmp
xor
pop
mov
in
negl
shrl
add
pop
add
incb
fsub
into
sub
pop
in
out
cld
pop
scas
mov
jp
adc
adc
adc
aas
xlat
and
test
les
imul
cld
or
imul
push
test
cmp
stos
mov
inc
xchg
nop
and
jno
aam
clc
pop
fwait
dec
pop
xor
imul
lret
push
aad
xchg
mov
iret
sub
fnsave
pop
or
xchg
mov
mov
and
xor
mov
jne
addr16
ja
mov
sbb
mov
int3
mov
jecxz
mov
rdpmc
pusha
push
push
flds
or
lret
les
addr16
jae
andb
pop
lods
push
loop
cltd
daa
dec
push
loope
lds
rclb
mov
leave
mov
in
mov
lock
xor
pop
adc
das
inc
add
mov
insl
add
bswap
das
xchg
rolb
push
in
out
in
pop
std
ret
mov
xchg
lret
push
jno
or
shrb
add
push
jbe
push
mov
cmp
loopne
shlb
ret
mov
xchg
cld
mov
mov
fldl2e
rcll
mov
jns
dec
lret
xor
fs
add
in
mov
movsb
mov
adc
icebp
jne
cmp
outsb
aaa
mov
mov
mov
jb
lret
or
jmp
add
jb
out
scas
sbb
out
dec
fs
repz
fwait
cmp
pop
xor
xor
scas
scas
mov
jae
push
outsl
rcrl
mov
rorl
cltd
pop
dec
xor
ja
mov
ficompl
jle
sbb
rorl
jo
adc
sbb
mov
lret
mov
aam
ret
jg
in
lahf
dec
ror
or
outsb
jae
cmp
xchg
mov
pop
mov
dec
stos
push
add
cld
data16
icebp
fcomps
jge
test
loop
popf
test
push
ds
cmp
ljmp
adc
adc
sbb
outsl
ds
mov
cmc
and
mov
sub
sub
adc
lock
scas
pop
jle
andb
stos
shlb
test
jnp
lret
daa
ret
inc
dec
sub
sarb
xchg
loope
mov
inc
mov
jae
es
shlb
mov
clc
inc
push
mov
stos
push
mov
inc
mov
jle
imul
mov
dec
popa
jge
push
jl
xchg
inc
pop
int
inc
imul
fildll
mov
sar
outsb
icebp
je
aam
pop
and
cmpsl
test
adc
jno
jg
stos
mov
push
pop
dec
xchg
std
es
call
or
mov
dec
dec
or
leave
sub
rol
xlat
ja
out
test
sbb
xor
imulb
mov
jb
inc
aam
push
and
pop
les
push
movsl
push
sub
loop
scas
xchg
inc
insb
inc
nop
out
xor
and
xor
push
gs
loopw
addb
out
add
mov
and
arpl
push
data16
cltd
push
xor
popf
imul
es
xor
mov
cmp
jecxz
filds
out
aad
dec
call
loopne
in
pop
lret
pop
mov
scas
or
mov
lret
cmp
pop
hlt
push
out
xor
xor
mov
aas
sbb
xchg
idivl
or
addl
ja
jmp
fldt
iret
pop
ss
mov
push
and
sub
pop
jb
mov
or
test
and
mov
mov
fs
add
aam
scas
push
mov
movsb
push
inc
mov
scas
in
cmp
cmc
adc
inc
je
sbb
inc
cld
ljmp
sti
push
pop
cmp
pop
insb
mov
sbb
sub
mov
dec
ss
mov
hlt
push
pop
add
fisubs
in
aad
sbb
ja
ja
pop
mov
mov
mov
aas
or
pop
fsts
mov
add
daa
push
add
mov
dec
xchg
daa
repnz
sbb
pop
jmp
aaa
lahf
inc
or
ja
negl
or
cmp
imul
loop
pusha
adc
dec
lret
xchg
int
pop
mov
xor
push
sub
push
adc
mov
popa
adc
divb
push
jns
push
ljmp
xor
dec
pop
fiaddl
jg
dec
push
jae
jmp
test
xor
mov
adc
push
dec
push
aaa
popf
cmc
repnz
in
pmullw
addr16
dec
sarl
dec
ffree
cmp
sbb
mov
mov
push
insl
jbe
test
jge
sub
hlt
repz
pop
and
and
or
and
sbb
jge
mov
lds
call
cmp
out
js
xchg
stc
sub
fisttpll
ljmp
notl
jbe
sbb
roll
pushf
and
daa
xchg
movsl
push
iret
icebp
jb
shlb
data16
popa
pop
mov
mov
xchg
lret
xchg
pop
ja
cltd
add
add
aad
rorl
mov
mov
sub
outsl
lods
test
jle
stos
shll
cmp
loopne
movsl
pop
or
sahf
xchg
cwtl
cltd
fsubr
repz
sub
loop
mov
in
sub
cli
bound
aas
xchg
jmp
xchg
xor
jmp
int
ja
movsb
popf
popl
ljmp
sub
fwait
cltd
dec
cmpsb
jbe
lods
rorb
imul
fdivs
push
cmc
mov
mov
dec
leave
pop
jns
pop
dec
add
or
andl
pop
adc
add
andb
loopne
scas
dec
inc
pop
xor
pushf
fldl
ficompl
add
daa
adc
les
cli
cmc
xchg
push
leave
dec
dec
push
push
xor
or
sub
adc
adc
scas
xchg
fcomps
js
add
pop
dec
imul
mov
pop
adc
lds
push
pop
and
xchg
jns
int
test
outsb
sarl
jbe
pop
loope
insl
jns
mov
lret
pushf
jns
rolb
imul
push
imul
jbe
js
sbb
adc
inc
or
xchg
ds
inc
xor
jge
adc
mov
rorb
sbb
pop
push
mov
mov
xor
xchg
xchg
add
pop
cmp
div
aam
andl
pop
pop
or
shrb
and
shrb
dec
aas
mov
cmpl
out
loop
imul
out
ja
mov
pop
mov
movb
cmpsb
mov
sub
cmp
addr16
push
rorl
cmpsl
dec
mov
sub
test
int
in
sbb
add
enter
xor
sahf
test
andb
pop
dec
pop
jnp
pop
mov
push
fwait
add
mov
sbb
in
mov
loopne
and
aaa
leave
sbb
hlt
mov
mov
aam
andl
push
andl
ja
xchg
int3
xor
out
cmp
lock
xchg
jge
jo
or
out
sub
or
add
out
and
in
ret
mov
sub
negb
sbb
dec
fldcw
stc
mov
sbb
or
cmc
or
jecxz
ret
jmp
add
mov
push
aas
rcrl
mov
or
mov
sbb
loope
repz
mov
lea
rolb
push
mov
jmp
inc
pushf
mov
and
movsbl
mov
mov
pusha
fsubl
cmp
dec
int
aad
mov
pop
dec
sub
jbe
mov
out
jle
push
lods
sbb
jnp
divb
cmp
call
dec
mov
repnz
pop
sbbl
mov
in
orb
adc
inc
mov
in
sub
out
clc
loopne
mov
or
mov
lea
add
sbb
stos
cld
jle
test
jmp
cwtl
jle
mov
xchg
pop
inc
cmp
mov
sbb
ljmp
in
xor
jmp
dec
js
lret
shlb
mov
fsubrl
mov
pop
rorl
lock
mov
adc
cmp
push
mov
xchg
and
cwtl
daa
or
cmp
push
push
andb
inc
add
and
lea
cmpsl
xchg
add
bound
rorl
or
arpl
jns
and
je
ds
je
std
mull
loop
push
pop
es
gs
cmpb
movsb
inc
jne
mov
das
test
pop
push
lahf
push
sbb
adc
shll
aam
aad
add
pop
loope
sbb
sub
adc
sbbb
out
sub
addr16
pop
push
mov
psubd
sbb
test
jns
lcall
hlt
and
xorl
or
nop
xchg
int
fs
inc
or
adc
int3
adc
pop
cwtl
imul
pushw
xchg
in
add
ficoms
mov
shrl
cmp
andl
es
repnz
std
rorl
xchg
fisubl
ficomps
in
mov
push
adc
xchg
pop
jnp
jnp
ret
jnp
je
popa
iret
in
cmpsl
mov
ret
ret
stc
jle
fldenv
shlb
sub
in
xor
mov
rcll
roll
rol
and
xchg
mov
mov
scas
adc
repnz
push
out
jns
pop
or
mov
jno
xchg
dec
andl
push
jno
fisttps
bound
and
add
inc
xor
pop
jno
mov
stc
pop
xor
lods
xor
dec
cwtl
mov
call
cld
cmc
cltd
cmpsl
insb
daa
mov
cmp
jecxz
aaa
enter
mov
adc
push
je
insl
mov
cmpsl
dec
adc
loopne
xchg
lods
lds
sti
popf
imul
loopne
push
dec
and
pop
pusha
xchg
xorb
cmpsl
push
xorl
imul
dec
icebp
in
loop
rclb
out
in
insb
and
or
out
mov
push
adc
adc
sub
loope
cld
cmp
jmp
test
insb
push
push
test
ljmp
hlt
repz
inc
dec
and
add
and
mov
xchg
jmp
lods
out
jo
inc
leave
mov
cmpsb
popf
pop
shrb
clc
sarl
push
mov
int
cmc
dec
cmpsb
pop
mov
jbe
mov
pop
cld
dec
hlt
shr
or
mov
cmp
xchg
mov
jne
lahf
push
loop
inc
arpl
mov
jne
or
popa
cmp
aam
clc
xchg
jp
in
add
jb
push
xchg
jnp
into
imul
adc
inc
xchg
push
out
in
jg
push
xchg
lea
ljmp
dec
loop
cld
es
loope
inc
loope
scas
sbb
cli
mov
pop
mov
mov
xor
pop
test
cltd
imul
lahf
mov
inc
ret
lahf
cmp
add
add
repz
outsl
pushf
sbb
push
mov
push
mov
jnp
xor
add
shlb
mov
jnp
shl
pop
mov
out
mov
test
mov
push
mov
rcll
ja
out
jle
out
mov
pop
lock
jbe
mov
inc
scas
push
lods
mov
jns
add
fdivs
dec
sbb
int
scas
mov
jp
cmc
inc
or
sbb
inc
or
rcl
push
gs
push
fisubl
mov
xor
jecxz
out
stos
mov
das
fisttps
repz
cmp
pop
fsub
repnz
loopne
and
xchg
inc
mov
jns
pop
hlt
sbb
or
sahf
mov
push
shlb
xor
sti
adc
mov
and
dec
or
mov
push
sti
jmp
lods
ljmp
pushf
xchg
xor
adc
dec
mov
xchg
sbb
jg
xchg
lods
orl
stos
pusha
sub
rorb
std
ffreep
push
imull
pop
stc
pop
xchg
cmp
fmuls
sbb
repnz
mov
fwait
and
std
adc
scas
in
aam
fildll
andb
dec
mov
dec
or
scas
outsb
pop
movsb
arpl
mov
add
jb
add
lret
stos
jbe
fs
lret
mov
es
cmp
repnz
cs
mov
inc
imulb
je
push
fcoml
push
int3
call
insl
insl
lcall
cmpsl
addl
es
insl
cmpsb
dec
cmpsb
jb
fcoms
add
dec
or
jmp
xchg
mov
cmpsl
xlat
int3
icebp
inc
in
xchg
add
xchg
xor
jb
sbb
dec
es
inc
push
or
cmp
inc
mov
sub
inc
xor
inc
outsb
clc
test
ror
lahf
sahf
ljmp
cwtl
repnz
les
repz
cli
mov
movsb
and
and
push
cmp
jno
lcall
jae
lret
mov
add
pop
pop
cmpsl
xchg
loope
test
mov
outsb
xor
ret
mov
mov
mov
xchg
jmp
pop
loope
inc
mov
hlt
inc
lock
cmc
push
mov
dec
data16
fiaddl
mov
jp
fidivs
xchg
mov
pop
lcall
push
in
les
jle
xchg
add
pop
lock
xchg
add
adc
insl
cmpsl
xchg
pop
cmpsl
mov
mov
ja
aas
icebp
dec
xor
or
subl
ds
fstl
dec
in
bound
test
into
jge
xchg
jmp
jge
dec
mov
mov
push
aas
addl
add
movsl
push
mov
cs
cmpsl
push
xchg
pushf
dec
popa
icebp
push
xchg
mov
lea
inc
jg
adc
sahf
adc
add
adc
mov
scas
rclb
in
lcall
fcmovnbe
inc
das
fiadds
sti
jg
cmc
cmp
xchg
xor
sbb
lods
adc
rcll
pop
cltd
or
sbb
dec
insb
pop
pop
fsubs
cmc
divl
mov
shrl
and
pop
xchg
ljmp
test
jns
mov
dec
scas
bound
aas
into
mov
test
gs
pop
repz
sarb
xor
mov
xchg
les
imul
scas
jecxz
and
add
and
jbe
sarl
cli
ja
ret
dec
popa
inc
sbb
mov
or
sahf
inc
leave
pop
sub
sub
cmp
sub
sar
sbbl
and
loopne
shlb
mov
js
xchg
icebp
push
mov
leave
sahf
in
xor
push
pop
stos
inc
lret
pop
pop
das
push
pop
jb
mov
aaa
xchg
xorl
lahf
mov
cld
xor
loopne
test
push
lret
or
push
ret
jne
scas
xchg
xor
push
push
inc
les
icebp
adc
lcall
mov
xchg
stos
xlat
inc
pop
cmpsb
sub
jo
add
ficoml
call
xorb
add
rclb
lahf
lock
mov
jecxz,pt
pop
repnz
je
add
push
pop
out
daa
sahf
scas
xlat
data16
mov
adc
mov
aaa
stc
pause
addb
ret
fdivrs
int
jp
push
fildl
out
or
push
xchg
dec
daa
aam
jb
outsb
dec
loope
xchg
dec
mov
in
inc
or
jnp
mov
and
push
outsl
lcall
mov
xor
daa
aas
leave
fs
sti
popf
in
test
jno
or
xor
test
pop
mov
rorl
fcompl
cs
int3
fmuls
int3
cld
jp
mov
and
mull
xor
pop
dec
into
sti
add
std
int
stos
bound
adc
sbb
stos
js
pop
cltd
addr16
arpl
pop
pop
pop
sbb
lods
test
xor
jge
sti
jmp
jae
lods
inc
mov
add
or
push
scas
sbb
xchg
movsb
add
es
jns
push
adc
and
test
push
or
and
pushf
push
sarb
push
push
xor
mov
ret
dec
paddsw
adc
and
popa
loope,pt
imul
mov
mov
mov
aam
or
movsl
into
push
out
inc
pop
fstpt
fdivrs
pop
xor
mov
add
repnz
mov
scas
add
addr16
adc
subb
mov
mov
pop
mov
jbe
hlt
dec
inc
lahf
fmulp
push
loopne
mov
orl
or
sbb
ja
cmp
jmp
std
xchg
jne
mov
and
mov
mov
pop
adc
jp
lea
pusha
stos
popf
sbb
scas
push
dec
outsb
dec
pop
shll
mov
jo
add
adc
pop
fisttps
or
scas
mov
xchg
and
pop
cmpsl
out
aaa
stc
or
sub
mov
in
xor
rcrb
dec
rcrb
mov
sarl
ret
lcall
sti
scas
jbe
add
inc
mov
and
pusha
jo
fs
add
dec
std
mov
cmpsb
dec
cmp
in
or
sbb
mov
jmp
push
rol
in
lret
ja
sub
pop
jne
adc
leave
lea
test
filds
pmulhw
push
ficoms
shlb
dec
sbb
in
push
cmpsb
sub
dec
and
call
sti
jno
loope
pop
push
aad
gs
mov
jecxz
test
insb
out
call
mov
stc
in
aam
arpl
mov
lahf
lods
pop
adc
xchg
incb
push
mov
test
pop
mov
add
cmp
inc
mov
xor
pop
xor
ficompl
dec
lods
push
jecxz
push
dec
mov
pusha
xchg
mov
lret
dec
aad
lock
scas
mov
pop
insl
pop
shrl
xor
int
dec
push
sub
js
pop
ret
inc
pop
addr16
mov
pop
sbb
jp
cld
push
movsl
or
lret
dec
jne
push
sbb
and
and
lds
sub
js
xor
cmpsb
pop
jo
dec
adc
cli
mov
cld
jae
out
pop
or
xchg
es
jecxz
push
jle
mov
subl
movsb
test
push
mov
sub
pusha
roll
push
jecxz
sub
sar
or
inc
cmc
jecxz
xchg
or
xchg
push
mov
mov
pop
call
call
aam
jb
and
stc
es
sub
xorb
xchg
movb
cmpl
pop
mov
sbb
pop
popf
dec
int
jmp
inc
fcmovb
rcl
adc
sub
stc
icebp
pop
lods
repz
repz
lahf
shll
cltd
mov
sub
cs
das
iret
les
std
insl
dec
dec
mov
jmp
xchg
mov
mov
adc
shr
loopne
mov
and
inc
xchg
cmpsb
fdivr
xchg
and
sbb
lret
push
fistpl
dec
push
xchg
in
mov
cmp
fimull
adc
jae
xor
lret
call
add
push
nopl
add
fs
fcmovb
fmuls
test
in
das
sub
daa
push
test
movsl
push
mov
sbb
loopne
xor
push
ror
es
xor
inc
cmpsb
aam
mov
mov
out
icebp
push
rcrb
bts
push
mov
mov
or
scas
xchg
mov
xlat
popf
inc
pop
pop
inc
iret
decb
xchg
test
xchg
cmc
shrb
pop
xor
push
sub
fistl
jbe
add
jb
sbb
cmpsb
in
xor
mov
sar
fcomps
cmp
pop
mov
rorb
in
popa
adc
jmp
pop
std
pop
or
push
test
mov
push
enter
fwait
insl
test
test
outsl
pop
in
sub
enter
xchg
push
jae
dec
into
dec
push
jnp
enter
lcall
cmpsl
pushf
imul
sahf
fs
pop
adc
rclb
jns
aam
loopne
cltd
je
fcmove
lock
or
das
cmp
sbb
in
jmp
mov
dec
push
mov
insl
hlt
cmp
cmc
lds
jo
fdivrl
and
and
popa
sub
ja
stc
xchg
addr16
out
cmc
enter
cltd
lcall
sub
pop
icebp
mov
fwait
cmp
idivb
and
push
xchg
or
pop
adc
xchg
pop
pop
imul
sub
daa
je
jge
aad
call
rolb
flds
pop
xchg
mov
shr
adcl
mov
in
add
psrad
dec
sahf
mov
dec
pop
in
inc
inc
mov
pop
and
call
cmpsb
jle
mov
sub
rcrl
ficompl
repnz
and
sbb
test
push
insl
ret
adc
lcall
dec
mov
sub
dec
lret
pop
sbb
pop
clc
pusha
bound
sbb
xor
int3
sbb
pop
dec
in
add
mov
sub
test
push
cld
xchg
stc
cmp
sub
push
arpl
cmp
lcall
dec
jno
push
icebp
cmp
mov
lods
mov
in
mov
lcall
rol
ds
cmp
push
cmp
mov
test
stos
ret
cmp
ret
add
add
adc
jp
xor
nop
xor
fisttpl
xor
es
mov
jbe
add
sarl
xorl
xchg
mov
arpl
inc
add
dec
imul
and
ja
shlb
xor
mov
lock
mov
pop
icebp
ja
in
int
mov
loopne
cli
rcll
ss
loopne
shll
lea
mov
in
ficompl
test
int
mov
inc
dec
aaa
clc
jecxz
das
push
or
movb
dec
rolb
or
shlb
xchg
mov
and
add
jne
mov
je
mov
lahf
add
adc
call
sub
cmp
push
inc
repz
adc
xchg
mov
mov
jb
rcrb
push
scas
shlb
daa
or
adc
or
and
data16
push
mov
pop
or
pop
sbb
xchg
cmp
jne
dec
call
gs
sbb
into
ficoml
cmpsb
lock
cmp
fmull
sarl
int
xlat
xchg
dec
pop
inc
jo
xchg
ret
pop
fisttpll
out
dec
sti
mov
cmp
push
iret
inc
mov
mov
pusha
inc
mov
mov
mov
pop
repnz
das
cmp
cmp
ss
mov
jmp
push
and
cmp
push
int
stos
push
out
jle,pt
pop
cmp
fcmovbe
push
fldcw
sub
shlb
popf
leave
test
icebp
and
into
mov
mov
and
push
dec
int
shll
mov
bound
test
leave
loopne
pop
icebp
aam
pop
mov
xchg
sbb
cmp
iret
imul
data16
aaa
xlat
or
inc
mov
out
loopne
and
sub
lock
ret
or
je
or
hlt
xor
jno
adcb
cmc
ja
sbb
lcall
xor
stc
xor
roll
and
cmp
add
shll
cmp
push
sarb
xor
into
daa
in
std
jg
negl
sbb
loopne
jns
adcl
sahf
dec
test
scas
jb
pop
bound
mov
jno
mov
out
clc
out
cwtl
mov
out
pop
es
jnp
and
pop
icebp
andl
cwtl
push
dec
inc
jle
push
and
into
popl
rcrl
sub
or
push
dec
mov
or
ret
add
scas
and
dec
mov
and
xor
popl
data16
pop
push
dec
add
pusha
scas
pop
dec
jo
dec
ret
push
mov
pop
xor
sbb
inc
jo
xchg
mov
repz
or
sub
std
cmpsl
adc
xchg
xchg
fs
call
sub
dec
stc
push
sub
sahf
and
cmp
int
dec
int
cs
fildll
dec
in
test
sbbb
sbb
hlt
pop
adc
mov
das
push
aad
mov
xchg
hlt
aam
jno
mov
mov
call
shll
lret
inc
sbb
lods
pop
add
lcall
stos
mov
scas
sbb
test
fcoms
dec
std
adc
scas
cmp
inc
pop
out
lods
or
adc
loop
fsubrs
inc
or
imul
xor
aaa
cmp
push
cmp
sbb
fcomp
mulb
mov
inc
fwait
stos
hlt
orl
add
out
daa
cmp
xor
les
pop
stc
pop
xchg
fwait
xchg
data16
icebp
jecxz
pop
mov
adc
std
fisttpll
loopne
add
mov
ficomps
jbe
push
scas
or
mov
push
jl
xchg
xor
mov
movsl
xchg
aam
sub
adc
jnp
mov
add
xor
mov
sub
addr16
mov
push
jo
xlat
jns
std
inc
xor
jecxz
inc
lods
rol
mov
popa
dec
lcall
mov
scas
mov
rorb
fisubrl
mov
mov
fnstenv
push
test
lea
cmc
push
jbe
loopne
cmp
mov
push
mov
mov
js
adc
movsb
adc
sub
mov
jmp
fisubs
xor
enter
pop
outsb
in
mov
repnz
push
rcrb
mov
test
and
jecxz
movsl
adc
mov
imul
in
mov
mov
sub
jg
push
idivb
push
mov
bound
out
ret
pop
loop
mov
cltd
cmp
cmp
mov
movsb
xchg
xor
insl
mov
push
inc
or
jne
mov
cli
shl
or
xchg
rep
adc
loop
aaa
push
inc
pop
inc
xor
pop
cmp
push
sub
add
mov
adc
dec
shlb
inc
dec
jle
outsl
rclb
jno
push
aam
hlt
xchg
adc
inc
cltd
add
sbb
pop
leave
lea
imul
inc
mov
dec
push
and
das
std
xor
or
or
out
push
sub
lods
lea
jge
mov
mov
cmp
cltd
dec
std
jg
mov
inc
xor
rorl
orb
inc
cmp
hlt
int3
or
inc
test
or
scas
andb
ljmp
fcoml
xlat
pop
lahf
clc
add
dec
daa
push
out
mov
int
jno
out
pusha
movb
or
pushf
add
push
jle
pop
addr16
jp
push
fwait
xor
push
mov
sbb
inc
sub
cmp
and
into
gs
ja
ss
loopne
and
sub
leave
imul
push
sti
incb
shrb
ss
jmp
cld
cwtl
out
cs
xchg
fsubrs
push
in
shll
iret
jae
xchg
lods
mov
in
mov
rclb
cwtl
sbb
loope
mov
and
dec
inc
jge
xor
mov
in
sbb
sub
into
dec
lea
adc
cmp
sub
inc
test
fwait
out
mov
mov
push
cld
loop
adc
mov
dec
addr16
cmpsb
movsb
adc
mov
lret
mov
xor
imul
or
pop
int3
nop
or
jecxz
cltd
cmp
outsl
mov
loopne
lcall
dec
loop
es
adc
inc
in
mov
jno
out
insl
xchg
pop
pop
mov
hlt
clc
das
insl
sub
dec
fisttpll
cmp
cwtl
out
data16
pop
mov
inc
js
sub
cltd
cmp
push
popaw
leave
cmpsb
jge
pushf
xchg
hlt
out
sub
pop
nop
xchg
orb
pop
clc
test
dec
sti
sbb
imul
test
dec
adc
xchg
fwait
jge
scas
cli
add
cli
adc
shll
ss
fsubs
mov
cmp
pop
sbb
iret
add
out
in
xchg
addr16
andb
ljmp
pop
sbb
cmp
cltd
xchg
pop
jno
push
das
mov
addr16
xor
cmc
daa
adc
inc
hlt
das
in
push
cltd
test
mov
pushl
xor
out
or
and
mov
sbb
jg
andb
adc
fbld
aam
fisubrl
lcall
inc
testb
dec
ret
lods
jecxz
push
ja
imul
mov
sub
jp
out
mov
int3
in
xor
mov
sbb
cld
push
aas
mov
cwtl
jge
test
out
into
lods
sbb
inc
push
decl
fst
sbb
xchg
inc
in
lahf
and
ja,pn
push
icebp
in
divb
pop
jne
clc
pushf
stc
rolb
imul
pushl
inc
sub
and
pop
je
fnclex
into
mov
inc
push
xor
in
mov
repnz
pushf
pop
jg
sbb
gs
add
xchg
popf
and
insb
xchg
push
imul
xchg
inc
adc
jecxz
mov
push
or
pusha
sbb
loope
rcrl
cmp
mov
sbb
daa
adc
aas
int
lods
push
imul
addb
arpl
pop
ret
cmp
js
mov
jecxz
lds
ret
cmc
nop
mov
test
sub
add
cltd
imul
ljmp
pop
lahf
cld
adc
mov
lea
cld
mov
mov
mov
shr
cmp
addr16
xchg
xchg
scas
mov
ret
lea
mov
xchg
test
mov
dec
subb
insl
pop
xor
pop
pop
arpl
jnp
sub
cmc
and
mov
mov
das
aam
fmul
notl
pop
pop
xchg
cmpsb
jns
insb
imul
inc
les
mov
or
cmpb
addr16
pop
rolb
inc
mov
dec
adc
mov
daa
sbb
rolb
xchg
inc
pop
scas
sub
pop
and
pop
iret
add
jl
mov
and
sbb
cld
dec
push
fisttpll
outsb
enter
xchg
adc
ja
in
pop
pop
gs
sbb
into
lahf
loope
test
imul
pop
ljmp
js
or
imul
mov
xchg
jb,pn
sub
stc
lret
div
imul
sahf
inc
lock
adc
notl
sub
insl
out
cmpsb
popa
lods
cmpsl
jne
inc
inc
insb
lods
out
xchg
in
fists
test
lds
fdivrs
inc
data16
adc
pop
dec
inc
out
call
xor
movsl
and
popf
xchg
pop
gs
jecxz
inc
cli
pop
jno
inc
jmp
adc
movb
mov
jno
insl
cltd
jle
into
mov
or
add
jne
mov
jnp
sub
and
push
sub
jo
fisttps
popa
jne
push
nop
pop
sub
xor
in
mov
iret
or
fldt
ds
mov
xchg
in
mov
insb
es
stos
jl
xchg
lds
dec
mov
shrb
push
lds
movsl
imul
dec
sub
cmc
cmpsb
ret
jns
icebp
hlt
mov
repnz
inc
adc
jnp
fidivs
out
sti
sarl
adc
cmpsl
and
fsubrl
xor
xlat
shrb
inc
popa
enter
out
fistpl
xchg
inc
out
aas
cs
xchg
mov
popf
push
or
mov
cld
mov
xor
mov
push
sbb
in
and
aam
insl
ja,pt
movsb
and
cmpsl
fildl
push
test
sub
inc
push
add
xchg
pop
or
and
arpl
mov
ds
push
pop
add
insl
inc
pop
insl
mov
pop
pop
shl
mov
lcall
mov
aaa
negb
arpl
inc
sahf
push
mov
lcall
xor
cmp
xchg
dec
imull
push
movsl
dec
sub
add
iret
fnstsw
lds
dec
mov
add
mov
je
enter
icebp
push
or
fstpt
ficoml
movsb
add
inc
mov
fdivs
push
pop
ret
add
jecxz
adc
in
jno
mov
adc
das
cmp
dec
dec
ljmp
sub
mov
pop
fisttps
cs
mov
xchg
ja
int3
push
jmp
fcoms
jmp
xchg
lods
cld
scas
mov
jg
pushf
cs
subb
jno
data16
or
insb
in
inc
add
sub
push
outsl
arpl
push
jle
sub
xor
je
aad
sbb
filds
pop
fptan
sbb
cmc
outsl
or
inc
push
sti
adc
jg
push
hlt
sub
mov
mov
add
dec
lcall
dec
jnp
adc
and
mov
cltd
repz
ljmp
pop
and
xchg
adc
mov
jecxz
dec
loopne
popa
arpl
mov
push
xchg
jecxz,pn
push
aas
ret
imul
loope
fldz
call
stos
inc
sarb
mov
out
lret
mov
add
mov
out
loopne
mov
imul
dec
pop
xchg
jp
adc
sub
mov
xor
clc
cmpsb
push
mov
or
lahf
daa
jg
dec
gs
adc
sbb
pop
xor
xor
dec
xor
loop
cmc
rcrl
aad
xorl
adc
inc
test
fwait
cmp
push
xor
decl
out
ss
pop
dec
test
icebp
nop
mov
testl
mov
movsb
add
into
sbb
mov
push
xlat
dec
sub
daa
out
jp
cmpl
adc
lret
cmpsb
jbe
test
dec
cmp
rcrb
sub
popf
dec
imul
dec
push
and
cwtl
or
push
or
jbe
fs
scas
leave
push
shrl
cmpsl
or
outsb
ss
pusha
jns
jbe
dec
jmp
popa
and
inc
test
push
cwtl
jnp
cmp
and
ds
and
inc
or
adc
scas
add
mov
sub
push
sub
jbe
and
mov
lods
add
orl
lds
or
or
rcl
pop
test
imul
jl
adc
push
mov
test
jne
in
sbb
sub
daa
xlat
repz
and
rcll
lods
icebp
js
mov
jb
adc
xchg
mov
xor
out
loope
lea
lahf
push
and
sub
pop
pop
filds
fneni(8087
mov
cld
lock
mov
into
xchg
lea
vcvtsi2sd
test
xchg
xor
es
sub
xlat
in
loope
xchg
scas
jbe
cmpsb
pause
jecxz
jp
sub
cmc
dec
push
push
xchg
xor
inc
pop
dec
inc
sarb
bound
shrl
and
repnz
push
push
pushf
pop
dec
and
cmp
mov
js
loope
icebp
dec
jb
das
push
push
movsl
xlat
into
arpl
popa
and
insl
leave
xor
repz
mov
dec
pop
fimuls
fs
push
pop
rcrl
loop
shrb
xchg
inc
xor
lds
xchg
mov
xchg
lahf
cld
cmp
lea
cwtl
xor
lret
clc
das
cmpsl
fldl
imul
outsl
dec
movsb
nop
push
cmpsb
cltd
dec
sbb
mov
inc
les
xor
je
fsubl
jae
cmp
add
sub
jno,pt
dec
sbb
or
sti
add
stos
ret
ds
jp
cli
pop
and
cmc
jecxz
xor
pop
jae
push
push
mov
add
shlb
in
adc
fwait
hlt
and
or
arpl
addr16
and
lock
inc
pop
mov
mov
aad
iret
jg
fnstsw
rol
inc
mov
sahf
push
inc
pop
out
lods
and
xchg
mov
or
dec
jecxz
dec
test
dec
icebp
xor
lods
in
ret
mov
dec
lods
pop
push
addr16
or
xchg
addr16
mov
gs
loopne
fisubl
cmp
pop
imul
jbe
out
insb
ret
dec
js
repnz
idivl
push
test
psllq
cmpsb
cs
mov
dec
dec
aad
add
shll
mov
xlat
fsubrp
add
aam
xchg
arpl
stc
add
pop
or
mov
and
imul
push
ficoms
pop
fnstenv
push
mov
repnz
jo
sbb
adc
inc
rol
xlat
out
jge
sub
pop
repnz
imul
fdivrs
jmp
sbb
jno
fidivrs
xor
inc
and
loopne
outsb
xchg
test
cmp
aad
pop
fs
xor
jne
pop
int3
imul
cmp
inc
cmp
xchg
popa
xor
call
pusha
sbb
dec
push
in
cmp
insl
icebp
clc
test
mov
mov
sub
mov
lock
test
xchg
lcall
hlt
loope
loope
jge
mov
dec
jnp
or
inc
jmp
dec
mov
cmc
cmp
outsb
inc
mov
pop
dec
stc
idivl
imul
jmp
addr16
test
dec
lret
imul
push
insb
insl
dec
xchg
adc
and
stos
int3
sub
sub
xchg
std
int3
push
adc
test
fsubl
push
addr16
or
hlt
scas
adc
lret
fucomi
dec
pop
or
xchg
sbb
loopne
pop
adc
hlt
hlt
add
add
sahf
clc
pop
je
xchg
leave
roll
pop
xlat
movsb
mov
les
push
inc
outsb
sbb
fwait
cmp
cmp
cmp
cmp
mov
or
test
xchg
mov
dec
stos
lahf
jnp
cltd
push
inc
inc
xchg
mov
add
xchg
xchg
mov
push
mov
dec
daa
sbb
sbb
pop
ss
daa
lcall
out
int
xchg
add
mov
push
push
mov
mov
fisubl
jle
xor
es
rcrb
test
fbstp
mov
lret
inc
mov
dec
mov
mov
xchg
add
hlt
push
shll
adc
inc
pop
lea
sub
inc
push
mov
adc
mov
inc
push
rolb
cmp
test
pop
fdivr
sbb
rolb
jb
cmp
cmc
cmpsb
fcompl
mov
mov
cmp
jae
mov
pop
mov
test
jle
lret
test
std
jmp
popa
jb
dec
daa
nopl
mov
jp
xchg
test
jno
in
lcall
xorl
add
mov
repnz
icebp
xchg
ss
int
jb
rcrl
pop
xlat
push
out
pop
mov
mov
adc
push
adc
mov
or
or
aas
or
adc
icebp
push
lahf
aad
jno
jle
adc
add
xchg
sub
push
push
fnstsw
jle
sub
add
sbbb
stc
inc
mov
int3
ljmp
and
xor
jg
pop
cmp
movsl
mov
daa
arpl
out
inc
jo
mov
push
cmpsl
sti
out
add
jge
popf
rolb
mov
sub
or
scas
inc
mov
aas
lds
fs
out
and
pusha
pop
add
mov
ja
sbb
lcall
jnp
lret
das
pop
ljmp
jl
jl
cmpsl
imul
mov
movsb
lret
cltd
fisubl
or
mov
ljmp
or
adcl
mov
xchg
jne
lret
inc
cmp
shrl
or
cmp
insl
insb
and
aad
xor
jg
sub
jb
in
ret
mov
lcall
push
pop
fmul
jns
lahf
xor
jne
in
or
out
mov
cmp
jbe
and
add
mov
xlat
in
aad
loop
sbb
add
repz
fisttpll
out
mov
faddl
testl
mov
insb
rolb
pop
aas
cmp
dec
loope
pop
movsb
push
idivb
std
cmpxchg
jmp
sbb
dec
fcmovbe
xor
or
cld
mov
adc
sub
mov
lret
js
jge
and
imul
pop
cmp
lcall
dec
sarl
jbe
add
cmpsb
add
push
lahf
arpl
mov
inc
xchg
xchg
sbb
imul
out
sub
dec
bnd
lock
or
je
xchg
jb
dec
stos
roll
mov
mov
sbb
data16
jae
add
rclb
repnz
divb
inc
push
jl
idiv
sbb
xchg
leave
aad
cmpsb
call
push
inc
add
xor
fmull
outsb
mov
mov
adc
xchg
jge
into
add
fstl
ret
iret
xor
andb
adc
jno
or
test
sbb
sub
cmc
inc
mov
mov
shrl
fsubrp
test
push
and
nop
xchg
clc
jnp
fldl
pushf
xlat
clc
inc
fiadds
scas
or
dec
shlb
popf
cmc
rcll
jmp
scas
xchg
nop
loope
dec
loop
push
shl
shll
pop
add
jnp
lock
sahf
mov
sub
es
cmp
jle
dec
and
inc
imul
mov
fst
cmp
xchg
js
ja
sbb
insb
mov
in
roll
movsl
les
popl
or
jns
mov
orl
lock
leave
lea
mov
push
call
and
adc
daa
sub
mov
fdiv
cmp
shll
sub
stos
inc
in
lock
jmp
scas
adc
mov
enter
iret
cmp
mov
imull
cmp
adcl
test
dec
or
push
xchg
jnp
jg
mov
jmp
mov
daa
xchg
sbb
leave
std
push
rcll
js
add
add
stos
shll
cli
in
push
adc
les
addr16
mov
test
imul
xchg
in
cmp
mov
push
sarl
incb
and
pusha
inc
imul
jge
icebp
loop
ud1
mov
jns
inc
adc
jg
sbb
fsubrs
shll
lcall
ret
xor
push
imull
or
mov
std
jns
das
les
je
loope
adc
pushf
sub
test
decl
test
xor
add
cmp
fistpll
mov
and
mov
sti
popa
aas
pop
lcall
lret
add
pop
std
xchg
sub
stc
cltd
cmpsb
sub
lcall
into
insl
cli
ds
inc
pop
mov
pop
mov
xchg
jne
jae
in
mov
mov
push
stos
dec
xor
fwait
sub
inc
and
inc
dec
fsubs
subl
sahf
or
loop
aam
and
sub
adc
movl
pop
out
cmpsl
dec
cmp
aas
pop
sub
neg
std
outsl
pop
dec
subb
loope
pop
aad
les
xor
frstor
loopne
or
sbb
mov
loopne
mov
pop
repnz
inc
lahf
cmpb
dec
lcall
jecxz
mov
add
pusha
push
fisubrs
cmp
xchg
ja
push
pop
jle
xor
add
push
add
insl
int
inc
or
mov
test
xor
hlt
cwtl
sub
pop
mov
mov
add
cmp
jmp
and
movsb
push
mov
lock
ss
mov
jae
and
out
xor
nop
lods
xchg
cmc
bound
jmp
adc
xor
addr16
adc
loope
or
ds
dec
aam
sub
aad
mov
or
jo
sub
and
lock
scas
pop
jnp
pop
adc
js
testl
push
cmpsb
push
add
call
dec
imul
dec
movsl
lcall
mov
mov
fucomip
mov
adc
add
imul
ja
popf
mov
xchg
pop
adc
jns
dec
xor
inc
std
push
sbb
lock
out
pushf
int3
rorb
fcoml
sbb
dec
lock
stos
mov
test
jnp
mov
jge
int
cmp
fs
fwait
or
sarb
mov
add
pop
leave
and
popf
push
cwtl
dec
shl
test
in
das
orl
push
dec
sbb
loop
outsb
pop
shrb
mov
mov
ret
jp
xabort
movsl
lea
ret
mov
cmp
pop
out
stos
sub
std
cmp
xchg
dec
sbb
mov
sub
xchg
push
insl
sahf
shl
add
int3
push
fwait
lds
mov
mov
xor
ret
andb
in
inc
cmpsb
nop
out
ljmp
xchg
fwait
mov
roll
sub
jmp
les
push
outsl
pushf
pop
inc
fstl
test
imul
sahf
or
push
hlt
sub
gs
push
pop
lds
fsin
cld
or
and
cmc
aad
mov
sub
push
push
sbb
cld
pop
mov
in
mov
push
test
sbbl
shlb
pusha
xchg
sub
aas
or
inc
test
insb
inc
mov
xchg
push
jg
jae
cmp
push
out
mov
lahf
inc
sbb
sbb
lahf
pop
pop
ds
jg
dec
aam
into
fwait
loop
sbb
mov
fcoml
jne
rorl
sub
iret
sahf
sub
mov
js
add
pusha
popa
jmp
scas
push
movsl
mov
push
pop
insb
and
les
data16
mov
push
popa
jle
nop
sbb
add
sub
sbb
cmp
xor
mov
dec
int3
icebp
shlb
cmpsl
jp
hlt
lods
push
pop
cmpsl
into
jbe
mov
mov
int
mov
out
sti
cmp
jge
inc
shlb
shlb
cmp
andl
scas
inc
ss
das
sahf
scas
lea
outsb
jp
xchg
push
stos
aas
outsl
mov
pop
popa
mov
pop
sub
fdivrl
pop
dec
sub
sub
addr16
mov
mov
sub
pop
fprem1
push
push
gs
cmp
scas
cmpsb
out
xchg
dec
mov
mov
js
out
shl
in
jbe
push
popa
mov
mov
arpl
inc
cmpsl
pusha
clc
test
dec
dec
pop
roll
add
add
mov
push
cmc
push
arpl
add
xchg
mov
or
dec
test
pop
mov
sub
repnz
pop
push
pop
movsl
push
ffree
and
mov
outsl
sbb
outsl
imul
push
and
gs
mov
xchg
popf
mov
add
pop
pop
sbb
add
add
mov
mov
jle
jno
repz
and
pop
lods
stos
mov
out
imul
movsb
data16
mulb
and
dec
js
ja
dec
dec
xor
mov
rcll
inc
into
aas
stc
es
jns
or
sbb
fldcw
movb
lea
das
pop
push
ret
add
push
dec
repz
fisttpll
push
not
push
data16
mov
pop
mov
jle
loopne
mov
leave
int3
mov
lcall
xchg
je
mov
or
cmpsl
dec
into
arpl
push
and
mov
testl
dec
and
sbb
in
dec
pop
mov
ja
or
stos
jo
lcall
scas
test
out
rcll
sub
add
call
mov
mov
lods
movsb
mov
stos
test
jge
testl
in
push
push
push
xor
push
cmpsb
xchg
mov
shlb
test
lahf
jle
sbb
mov
xor
stos
pusha
inc
mov
mov
or
shl
cpuid
xor
aad
setg
fs
shll
fs
bound
loopne
jp
or
or
ja
sbbl
popa
mov
lods
test
push
dec
cmp
pop
push
add
outsb
enter
testl
test
sub
andl
loop
push
faddl
jecxz
les
jne
cmpsl
and
in
mov
adc
inc
push
lret
jns
sbb
test
jg
ljmp
pop
cli
cmp
mov
cmp
jnp
jo
mov
xchg
clc
out
popf
into
sbbl
sbb
adc
call
int
loopne
sbb
jle
fldt
jle
jl
aaa
adc
out
cld
mov
jbe
pusha
cmp
movl
push
lret
sbb
jno
and
in
rorl
ror
pop
xchg
movsb
jp
inc
es
ret
mov
pushf
sbb
movsl
lods
leave
jecxz
pushf
enter
sbb
mov
pop
or
inc
ljmp
xor
insl
pop
mov
xlat
cmp
xlat
sub
add
in
jb
cmc
cs
arpl
dec
popa
outsb
clc
mov
dec
stos
andps
stos
or
rcll
cwtl
ljmp
js
dec
sbb
call
sahf
adc
sarl
dec
sbb
sub
jns
psubusb
movsb
fbstp
jmp
dec
cmp
sbb
mov
dec
hlt
mov
test
negb
sub
fsubrs
mov
jle
int3
outsl
insb
icebp
aad
repz
push
jg
in
rcrb
test
and
jns
test
lods
aaa
sbb
xchg
and
addb
outsb
lock
mov
adc
xchg
sbb
loope
shrl
pop
icebp
adc
in
fistl
inc
test
addb
test
jo
mov
jns
pop
mov
imul
clc
jp
call
int
jnp
jnp
cmp
adc
stos
sahf
xor
icebp
jbe
sub
in
push
rcll
xor
pop
inc
xlat
insb
or
rol
push
pop
dec
add
pop
push
clc
xchg
inc
pop
jge
push
dec
sti
outsb
mov
add
repnz
mov
pop
pop
mov
lea
or
dec
notl
leave
addr16
add
cmp
xor
int
mov
int3
test
jns
mov
fcompl
dec
out
mov
call
call
mov
js
or
insl
inc
jmp
arpl
mov
imul
and
loope
pop
scas
stos
loopne
jle
faddp
jo
shrb
popf
xor
jmp
sbb
stos
ljmp
fdivrs
ret
push
cmpsb
aas
xchg
lock
add
push
mov
fcmovne
aad
cltd
xchg
dec
insl
lock
mov
divl
enter
aam
xchg
jns
push
adc
lds
cmp
sub
pusha
in
rclb
testb
mov
dec
andb
mov
ja
push
xor
cmc
rcl
mov
xchg
inc
inc
shl
add
sub
mov
es
or
out
push
loop
mov
sarb
gs
or
add
cmpsl
outsl
jns
mov
mov
xor
push
push
hlt
jae
sbb
cmp
adc
inc
adcl
imul
sub
in
jge
add
test
pop
dec
add
push
fbstp
das
inc
fnstsw
adc
mov
enter
or
xchg
inc
or
jecxz
lret
jno
loope
push
les
xor
dec
jno
test
out
dec
call
inc
cmp
insl
push
xor
dec
mov
or
push
xor
sub
sbb
mov
sahf
fst
sbb
xchg
stc
orl
mov
jbe
xor
mov
jle
cld
leave
xor
cmpsl
sbb
inc
mov
add
loope
cmpsl
push
inc
mull
inc
sti
dec
insl
xor
mov
xchg
iret
in
xchg
push
je
test
stos
popf
sub
es
adc
fdivrl
data16
pop
xchg
std
nop
arpl
ds
sbb
shll
repz
mov
test
xor
and
add
pushw
cmpb
sbb
pop
or
mov
mov
adc
cs
cmpsl
inc
mov
daa
in
into
adc
insb
dec
pop
sti
xchg
mov
in
lods
and
or
mov
rcrb
fwait
ss
std
mov
clc
add
adc
sbb
pop
push
dec
pop
xchg
dec
lock
adc
sbb
hlt
jl
mov
xchg
pop
xchg
sbb
imul
call
mov
inc
cmpsb
loopne
xor
sbb
in
leave
pop
es
and
or
into
push
jg
cmpl
xchg
sub
rorl
mov
add
movsb
dec
ret
mov
push
fst
sbb
mov
ret
out
dec
ret
jle
adc
das
movsl
leave
fwait
jp
or
cmc
sbb
cmp
lods
je
fsubrs
push
lret
or
imul
orb
cmp
cmp
sbb
js
andb
push
mov
imul
inc
xor
push
xorl
repnz
mov
pop
push
xor
xor
es
js
out
sarb
mov
imul
inc
mov
or
mov
mov
hlt
push
mov
loopne
js
pop
hlt
repz
jg
xchg
mov
lret
inc
jle
ss
cmp
xor
pop
repz
icebp
insl
je
in
jmp
xchg
sub
roll
popa
or
pop
cmc
ljmp
cmpb
cld
dec
cld
add
mov
cmp
leave
add
sahf
and
mov
iret
adc
mov
pusha
cmp
sarl
sbb
loopne
cs
insb
pop
push
add
incb
mov
test
mov
jae
outsb
jge
or
xchg
icebp
sti
cmp
cmc
jnp
daa
fisttpl
aaa
mov
xchg
mov
push
push
stc
je
push
add
sub
push
dec
mov
xchg
sub
lret
adc
outsb
sbb
test
push
push
pop
mov
push
popf
mov
xchg
pop
out
xor
mov
adc
xor
test
mov
and
mov
add
ljmp
loop
sub
inc
push
rorb
inc
filds
fwait
lea
sbb
push
ret
sub
into
icebp
in
mov
out
push
sbb
push
pop
dec
ja
test
ret
mov
push
push
sbb
cs
inc
ficompl
sub
fists
push
stc
cltd
mov
sbb
in
xchg
sub
cmpsb
push
incl
mov
les
mov
int3
std
pop
xchg
lds
push
lods
cltd
pop
sqrtps
clc
sti
adc
sarb
sub
jns
imul
in
in
or
dec
scas
or
lods
or
mov
mov
pop
ret
and
mov
decl
mov
or
xor
stc
test
cmp
jmp
xchg
ljmp
pop
in
adc
mov
jae
cmc
test
jle
faddl
daa
and
shll
outsl
jb
lods
dec
daa
nop
aam
fcom
jbe
and
pop
aas
sbb
lret
rcrb
pop
pop
mov
rcrb
ljmp
pop
loope
fadd
sbb
das
inc
arpl
pop
ds
sbbl
es
mov
cmp
out
add
mov
jmp
fimull
or
jnp
rcrb
loopne
jae
xor
cmp
fcoms
out
mov
jb
addl
xor
jmp
fwait
xchg
pop
lret
mov
mov
iret
arpl
outsl
int
cld
dec
push
mov
cmp
arpl
and
xchg
cmp
fldcw
dec
popa
outsb
or
aam
sbb
fldl
sbb
dec
push
jp
adc
lea
fsts
mov
mov
addr16
shll
adc
pop
or
push
push
out
mov
sbb
pop
push
aas
jp
add
ss
adc
rorl
orb
leave
inc
mov
cmp
mov
jns
sbb
fisubrl
adc
std
cwtl
xchg
dec
jae
loop
sub
and
aaa
add
daa
aaa
ss
sbb
imul
inc
jg
test
jp
xchg
add
jnp
cmc
ljmp
aas
popf
daa
add
iret
dec
clc
push
xor
nop
xchg
push
aas
sub
movsb
lret
cld
int3
and
and
adc
sub
dec
jne
dec
xchg
aaa
push
sub
xchg
inc
push
push
mov
int
cltd
jge
mov
and
jbe
test
out
stos
jle
inc
mov
or
lahf
addr16
inc
pop
enter
std
pop
add
jne
dec
cmp
pop
mov
jecxz
pop
test
pop
xchg
arpl
insb
or
fdiv
add
xor
sti
in
enter
shll
mov
fisttpl
fists
out
xor
cli
test
sbb
fbstp
and
adc
jp
rcrl
bound
inc
sbb
incb
cmc
sub
aas
xorl
sti
mov
jnp
jne
xor
inc
dec
push
fldl
rcrb
xorb
mov
inc
add
imul
fdivl
inc
jne
xor
mov
les
jp
mov
mov
rol
bound
pop
mov
sbb
inc
fbstp
and
mov
clc
je
mov
fbld
adc
call
pop
sub
lods
scas
bound
rorb
xchg
dec
push
push
jp
mov
mov
add
and
xor
push
push
push
and
in
inc
or
movsb
cs
lcall
jno
inc
pop
out
lods
sub
push
push
jmp
xchg
dec
addb
or
scas
outsb
scas
cs
xor
mov
inc
push
fucomp
pop
out
icebp
into
int
ljmp
int
lock
loope
test
es
and
fxch
lret
ret
gs
xchg
pop
mov
in
xchg
xchg
mov
xor
or
loope
ret
rcll
pop
mov
sbb
add
imul
dec
mov
sub
into
add
jg
incb
mov
subb
lea
jns
test
aas
das
jecxz
push
outsb
aad
clc
mov
xlat
test
shl
jecxz
shlb
add
inc
ret
push
push
sub
xor
pop
fs
cmp
xor
and
or
xlat
cmc
leave
sub
mov
mov
int
xchg
je
cltd
and
jo
adc
push
loop
xor
insl
or
ljmp
push
push
cmpsl
mov
pusha
lea
add
jb
or
dec
int
das
add
lcall
shlb
lea
negb
sbb
imul
fildl
pop
pop
jbe
pop
mov
daa
or
dec
sub
sub
out
or
repz
cli
xor
add
jbe
stos
jnp
cli
or
pop
push
addb
aad
icebp
sub
loop
jge
loopne
dec
repz
pop
iret
stc
jmp
jmp
das
cmp
xor
jnp
mov
lods
cltd
mov
jnp
mov
das
in
mov
cmp
sub
adc
cmpsl
xchg
mov
cmovno
jg
add
sub
outsl
aaa
inc
cmp
xchg
fwait
or
or
sbb
push
add
mov
sbb
fdiv
jp
sbb
cwtl
jbe
or
mov
push
lahf
movsb
movsl
mov
cmp
pop
sub
xchg
outsl
add
sahf
pushf
imul
mov
add
popf
mov
pop
lahf
les
cld
movsb
jbe
dec
dec
imul
pop
in
push
enter
inc
push
inc
mov
enter
mov
xlat
jge
rcr
dec
daa
inc
mov
adc
dec
xor
sahf
inc
push
pop
jmp
ds
outsl
sbb
xor
sub
lret
add
jno
shll
and
adc
sub
addr16
xor
inc
add
mov
cmc
xchg
jecxz
jne
ja
mov
stos
ds
xchg
jle
repz
mov
mov
adc
insb
imul
inc
gs
aam
ret
movsb
xlat
stos
sahf
insl
in
sbb
cs
lret
fmull
push
test
out
mov
rorb
push
mov
cmp
clc
push
imul
mov
mov
divb
inc
pop
std
jl
cmpsb
in
pop
cltd
jbe
cmp
cmp
inc
dec
dec
scas
fildll
int3
jne
fs
int
inc
xlat
repz
sbb
mov
push
testb
xchg
xchg
adc
aas
push
xor
int3
jbe
jl
jecxz
sahf
nop
xchg
popf
push
xchg
xor
push
adc
pop
xlat
sbb
mov
xor
and
cmp
pop
add
in
cmp
mov
test
add
push
pop
add
pusha
ret
fists
xorb
les
fwait
mov
jecxz
inc
sbb
pop
push
and
mov
andl
or
fs
out
orl
sbb
xchg
push
jne
addr16
adcb
out
dec
inc
dec
call
cld
addr16
lock
out
jle
das
xchg
cli
imul
cmp
lret
jo
or
push
mov
mov
rolb
lods
cs
subb
mov
cmp
push
into
jne
add
pop
imul
jle
jae
je
sub
adc
add
nop
cmc
adc
es
adc
rol
or
out
push
es
xchg
hlt
mov
test
jp
push
jmp
xor
in
xchg
lea
lock
and
daa
imul
cltd
jl
dec
inc
add
lret
mov
into
xchg
lahf
inc
roll
push
mov
insb
sub
pop
mov
popf
popa
push
mov
jg
lret
adc
lods
pop
pop
mov
pop
es
addb
cltd
gs
cld
adcb
ljmp
clc
pop
mov
and
negl
dec
dec
out
jge
push
xchg
daa
and
dec
mov
test
imul
fsubr
pop
out
sbb
lcall
and
adc
popf
je
pop
lcall
mov
call
push
sbb
lea
xor
shlb
popf
lcall
lahf
imul
test
cs
mull
or
xor
rol
jns
dec
xchg
in
stos
test
aad
jno
add
xchg
test
lea
loope
aaa
in
cmp
fmull
pop
ljmp
xchg
and
xchg
fcmovnb
iret
xchg
sbb
aas
data16
jno
or
idivl
fs
adc
in
sub
dec
add
mov
inc
cs
cs
sub
popa
orl
push
fimull
insb
dec
stos
lds
add
aam
or
in
cmpsl
ss
int3
or
mov
sub
xchg
lahf
xor
adc
test
cmp
daa
jne
or
gs
dec
pop
lods
mov
lods
xchg
xlat
pop
enter
xor
push
sbb
mov
into
psubsw
out
out
add
push
dec
mov
mov
iret
cld
lods
push
popf
inc
dec
pop
fucomp
ss
fwait
push
aad
cwtl
inc
fisubl
fsubl
lods
and
adc
or
or
jae
sbb
cmp
lret
cltd
mov
mov
imul
and
xor
pop
shll
insl
inc
cmp
mov
adc
cmp
and
jno
push
js
fidivrs
dec
adc
fmulp
aas
jmp
jb
push
push
and
lods
mov
sub
pusha
ret
iret
cmpsb
cli
repnz
push
adc
jb
mov
xchg
pop
int
mov
cmc
roll
push
and
test
jae
aaa
lods
rorl
sub
fstl
push
adc
test
addl
sbb
divl
mull
in
int
sub
push
lods
bnd
sbb
jno
mov
mov
int
in
iret
clc
pop
incb
pop
mov
adc
pop
ds
loopne
xchg
xor
icebp
js
daa
cwtl
sbb
in
inc
pop
sbb
jne
je
mov
inc
call
movsl
sbb
enter
decb
scas
dec
cmp
jb
mov
push
fstpl
fstps
mov
sti
aam
insb
clc
and
sub
cltd
xchg
mov
repnz
jl
push
pop
clc
push
or
gs
jge
mull
inc
or
xchg
sub
pop
jmp
sbb
popf
lock
iret
cld
cmp
int
xor
mov
or
aas
cmp
sbb
jmp
pop
push
ret
mov
push
in
cmp
lcall
mov
test
jle
jne
adc
sarl
jae
mov
lcall
add
std
scas
mov
lock
mov
fdivrs
insb
outsb
ljmp
fldt
xchg
or
lods
pop
add
cs
jne
lahf
stc
loope
mov
popa
push
push
and
cmp
adc
scas
testl
jmp
xlat
lods
imul
pusha
lea
fbld
dec
sub
push
jecxz
add
test
sub
pop
rorb
xchg
jns
fdivr
mov
push
enter
xchg
dec
fdivs
jnp
sbb
and
adc
stos
pop
imul
call
inc
sub
inc
xchg
loope
loope
lret
out
daa
insl
mov
and
xchg
sbb
movsb
cli
and
add
ds
fiaddl
ret
int
mov
mov
mov
xchg
divl
mov
adc
out
mov
pop
jbe
inc
sub
mov
rep
insb
dec
stos
jo
xchg
xor
fcomp
dec
sub
cltd
and
outsb
fiadds
jecxz
push
mov
int3
lods
jle
inc
bound
jbe
mov
mov
imul
jecxz
cwtl
ljmp
push
aaa
adc
cmpsl
or
pop
pop
sub
movsb
loope
mov
mov
add
pop
mov
or
add
sbb
and
or
cltd
adc
xchg
lods
cmpsl
sbb
mov
fisubrl
in
xor
std
jne
push
and
xchg
sub
sub
inc
jnp
sub
inc
sbb
dec
int
mov
mov
popa
push
cmpsb
inc
mov
faddp
scas
or
adc
outsl
repnz
push
jmp
xor
pushf
insb
test
cmp
and
ds
mov
xorl
sti
subl
add
dec
adc
jl
mov
xor
call
mov
pop
mov
std
mov
into
adc
add
dec
int
daa
mov
repz
adc
ret
sbb
repz
icebp
testb
push
inc
and
testl
in
popa
les
mov
xor
and
jbe
lret
xchg
popa
pop
sbb
pop
mov
mov
pop
mov
je
test
cmp
pop
mov
mov
push
in
movb
mov
clc
xlat
loope
dec
push
jmp
je
lods
fidivrs
daa
out
jbe
aaa
imul
dec
rcll
pop
insb
or
add
pop
xor
sbb
fstl
cmc
roll
pusha
lock
adc
pop
inc
lock
shr
mov
les
jno
fmul
xchg
xor
ret
fdivs
adc
pop
das
mov
cltd
push
movsb
pop
scas
xor
pop
ja
sub
mov
sub
dec
push
sbb
xchg
rclb
xchg
das
add
xlat
cmp
cltd
bound
mov
sub
jge
fisttpll
lods
dec
push
mov
add
inc
mov
mov
outsb
xlat
xorl
lahf
or
rol
imul
mov
inc
xlat
ficomps
ds
roll
cltd
dec
add
xor
imul
lcall
jb
jp
popa
sahf
cmc
jne
inc
xchg
das
push
popl
leave
ror
xor
or
or
gs
xor
shrl
mov
ds
xchg
pop
movnti
mov
test
addr16
inc
fisubl
lods
into
add
testl
push
rorb
mov
push
sbb
pushf
mov
shr
repnz
mov
popf
push
mov
mov
data16
sarl
repz
jnp
bound
rcll
test
push
dec
fiaddl
imul
shll
in
dec
pop
jmp
js
jmp
hlt
sub
jno
pop
add
aad
ror
orl
popa
js
add
jmp
mov
or
movsl
cmp
mov
into
xor
sbb
hlt
mov
sbb
inc
enter
das
sub
cmpsb
sbb
push
pop
and
dec
pop
sbb
fnsave
adc
lds
dec
stc
cmc
jns
mov
js
cmpsb
movsl
mov
aam
mov
mov
dec
mov
jne
and
mov
dec
push
jle
pop
test
pushf
xchg
pop
repnz
mov
scas
push
sbbl
lods
insb
push
or
loopne
mov
aad
push
xor
sbb
push
pop
mov
inc
add
mov
xchg
orb
pop
les
roll
insl
push
pop
jmp
enter
push
imul
loope
xor
lds
jbe
sti
inc
cmp
push
mov
repnz
cmpsl
jns
movb
mov
es
ret
lods
mov
fdivrs
sub
sub
test
data16
repz
cltd
stos
jp
pop
add
jo
jnp
adc
add
pop
jp
jno
and
imul
sbb
pop
ljmp
add
push
or
mov
and
sbb
push
fsubl
fwait
int
fcompl
mov
xor
xchg
or
insl
jmp
and
sbb
or
dec
inc
mov
pusha
pop
jae
jno
mov
mov
xchg
xchg
adc
dec
xchg
mov
add
out
mov
dec
xchg
xor
pop
push
test
outsb
lret
xor
in
sub
jne
movsb
repz
xor
lds
loope
jae
pusha
sbb
bswap
pop
lcall
sbb
out
adc
cs
xchg
popa
fdivs
pop
int
or
notl
dec
push
mov
cmp
cmp
test
sti
ds
cwtl
jo
mov
stos
data16
xchg
pop
lods
xor
cli
dec
out
dec
sub
mov
shll
add
int
push
xor
jne
ficoms
inc
mov
inc
int3
adc
jne
cld
adc
gs
xorb
aas
testb
fimull
or
pushf
jns
push
jle
mov
lcall
or
and
int
inc
mov
stc
jbe
sbb
jns
outsb
adc
adc
jle
xchg
and
add
addb
dec
or
lret
data16
push
sub
lret
xchg
add
jo
xor
mov
xor
fucomip
push
cmp
dec
inc
sub
mov
sub
push
sub
jmp
fsubs
test
inc
repz
fsubp
sub
sarb
rclb
fldcw
pop
dec
mov
xchg
imul
sub
xlat
mov
dec
je
js
movsb
add
fildl
ss
out
mov
insl
mov
mov
stos
pushf
mov
out
or
push
aas
in
push
cmp
jno
aaa
lcall
xchg
push
mov
adc
xor
mov
dec
sbb
xor
lret
mov
adc
mov
jne
loopne
jmp
mov
pushf
addr16
ror
mov
jg
jb
test
clc
cmc
or
cmp
xor
in
lods
cmp
pop
mov
loope
sbb
call
in
adc
xchg
movsl
xchg
cmpsb
aaa
js
call
mov
push
xchg
into
fwait
aad
push
push
xor
sbb
xchg
dec
aaa
inc
mov
jmp
pop
mov
dec
shll
lods
mov
mov
cmp
lods
test
adc
roll
mov
or
hlt
fucomip
adc
shll
rcrb
arpl
xor
pop
ret
mov
push
mov
out
jle
mov
fcomps
dec
add
leave
outsb
negb
add
scas
cs
jo
xchg
inc
mov
call
nop
jb
push
jge
or
lock
mov
xchg
stos
sti
adc
mov
test
sbb
adc
jg
shlb
imul
sarb
inc
pop
add
ja
shlb
aam
aad
repnz
popa
pushf
mov
mov
jmp
aaa
stos
inc
cmp
push
mov
push
xor
lds
jnp
clts
push
push
push
mov
sbb
inc
in
call
sbb
loopne
adc
jo
mov
lea
popf
rcrb
adc
shll
test
add
cmpsb
xchg
cwtl
lock
aam
mov
pop
dec
aam
sahf
stos
jp
jb
icebp
mov
movsb
nop
sub
mov
std
pop
fwait
sbb
cs
jle
adc
mov
dec
imul
inc
push
loopne
adc
ret
dec
cmp
movsl
pop
in
jns
sub
outsb
fsub
jg
stos
cs
push
repnz
aad
mov
xor
outsl
jge
push
push
mov
sti
mov
out
in
test
lret
fimull
pop
sbbb
adc
jge
pop
out
lods
and
mov
nop
jle
jmp
cmp
call
bound
adc
into
int3
scas
cmp
adc
push
popf
adcb
add
rcrb
insl
mov
or
popf
cs
mov
mov
fwait
adc
sub
das
stos
pop
aas
adc
adc
mov
decb
das
jg
mov
shlb
not
pop
cmp
in
imul
je
mov
and
dec
stos
and
adc
sahf
test
arpl
stc
push
pop
jecxz
push
repnz
bound
fnstenv
shr
push
enter
out
sbb
xor
xchg
test
dec
out
add
mov
xlat
or
xor
aaa
push
mov
inc
cwtl
push
pushf
js
mov
pop
jo
loopne
fcmovnb
fiadds
adc
hlt
add
mov
outsl
ds
lea
push
rclb
mov
inc
fnstenv
sbb
mov
sub
mov
sbb
jbe
ficoms
insl
stos
xor
cld
jo
xor
cwtl
dec
lcall
ljmp
in
stos
adc
data16
stos
shrb
loop
adc
ss
add
bound
or
lcall
outsl
mov
add
mov
dec
push
push
mov
and
pop
std
adc
jmp
pop
ficoml
add
hlt
data16
out
jg
subb
and
aad
lret
mov
cli
push
push
xchg
ficoml
fcmovnu
lock
sar
inc
mov
test
sbb
add
pop
mov
and
fistl
jno
add
icebp
inc
dec
nop
pop
lods
js,pn
lahf
lock
repz
fimuls
sub
int
pop
rol
xor
xchg
mov
lret
scas
mov
pop
pop
ror
xchg
leave
xor
int
pushf
jbe
push
daa
add
das
cmp
xchg
xlat
push
test
jle
movsb
or
in
roll
sub
std
ret
adc
push
push
add
mov
or
out
sub
mov
aas
jge
mov
mov
push
mov
fidivrl
cmpsl
out
fnstcw
mov
imul
mov
xchg
or
std
ficoms
sti
xrelease
call
push
sti
in
pusha
andl
push
rcrb
pusha
shr
jbe
jo
pusha
mov
cwtl
push
jo
xor
mov
add
ljmp
insb
sub
fcoms
test
xor
fucom
xor
mov
cmp
testb
mov
jge
push
imul
jg
cli
adc
mov
sbb
mov
scas
xor
jge
subb
or
mov
les
ret
push
mov
leave
rcll
inc
inc
imul
aas
lock
sbb
mov
insb
popf
push
sbb
push
mov
dec
pop
push
mov
lcall
sub
dec
cs
je
pushf
outsl
test
sub
sbb
xchg
mov
test
dec
inc
int
adc
fidivrs
fcoms
inc
add
repnz
or
loopne
pop
xor
mov
xor
jno
cmpsl
dec
sbb
jne
mov
sbb
mov
dec
and
ljmp
pop
lea
xor
xlat
out
xor
sbbl
pop
jge
fs
dec
cli
cmp
add
inc
out
das
dec
scas
adc
mov
inc
mov
jo
fmuls
mov
inc
jo
lods
movsb
test
cwtl
cmp
stos
inc
shr
jo
lahf
cmp
sub
inc
and
and
mov
sbb
dec
in
xor
insb
inc
mov
inc
jecxz
jecxz
ljmp
cmp
pop
jp
test
imul
ds
add
sub
dec
adc
clc
push
out
cmpsl
jns
jbe
push
push
fcomps
mov
add
loopne
or
cltd
xchg
cmpsl
leave
push
stos
adc
xor
scas
xchg
dec
sub
in
push
icebp
cmp
push
mov
inc
fimuls
or
ficomps
les
jno
aaa
pop
inc
dec
push
sbb
cwtl
adc
fwait
and
out
and
push
fcmovne
andl
jb
push
shl
push
std
loopne
rcl
sti
jns
push
inc
icebp
xchg
add
sub
sbb
iret
inc
mov
xchg
stos
mov
dec
fcoms
mov
mov
cmpsl
xorl
inc
jns
lahf
sahf
in
pop
push
lret
pushf
cwtl
add
scas
cmp
out
leave
movsb
pop
add
inc
movl
xchg
or
mov
or
or
xchg
bound
inc
sti
imul
int
pop
imul
sub
mov
jo
xlat
out
in
dec
cli
scas
push
insl
mov
mov
and
arpl
ficoml
or
daa
sbb
fadds
adc
shlb
jle
ds
jle
lds
clc
setae
add
jge
jns
rolb
scas
pop
mov
push
and
lds
ds
ret
dec
out
mov
movsl
insl
pop
xor
mov
or
xor
pop
lahf
push
pusha
repz
cmp
cmp
scas
jg
ss
push
icebp
adc
ja
mov
cvttps2pi
ljmp
xor
pushf
sti
in
cmpsl
out
pusha
jle
ja
enter
out
xchg
hlt
mov
lock
mov
pop
cmp
into
xorl
sbb
lret
cmp
fisubl
jns
sti
call
test
fstl
sar
xchg
imul
lds
andl
in
push
push
test
pop
xor
iret
mov
movsb
xchg
inc
outsb
inc
adc
cmp
loopne
fs
dec
rcrl
enter
hlt
mov
dec
push
pop
mov
mov
pusha
leave
cmp
sbb
mov
xor
repz
or
icebp
in
rorl
bound
push
popf
jmp
inc
pop
dec
mov
sub
push
fcmove
aad
outsb
ss
dec
mov
inc
lock
mov
cmp
loop
int3
and
fwait
test
inc
into
pusha
cli
pop
sbb
roll
or
push
mov
push
pop
mov
xchg
popa
jns
pop
cmp
cwtl
call
pop
dec
fwait
call
cltd
xor
or
pop
nop
dec
js
iret
add
push
fwait
push
xchg
pop
cwtl
pop
add
jg
insl
movsb
sbb
ss
aaa
call
inc
sub
jge
in
es
lock
test
movsb
out
pop
jbe
les
xchg
aaa
mov
pop
adc
pop
and
ja
jmp
outsb
jl
repz
dec
mov
xchg
pop
mov
cltd
fildl
pop
adc
icebp
sub
fstps
cmc
and
cmp
daa
push
xor
cmpsl
pop
fstl
in
aam
lods
loopne
xor
scas
xchg
cmp
cmp
cltd
dec
mov
or
jns
xchg
cmp
jnp
mov
add
sub
pop
mov
xchg
daa
popa
sbb
aad
xchg
inc
or
imul
flds
sub
dec
inc
into
pusha
in
mov
inc
sub
add
jecxz
das
cmp
inc
adc
shlb
fwait
imul
fidivrl
xchg
dec
das
mov
call
adc
stos
mov
pop
push
xchg
and
ss
dec
js
insb
jo
imul
xchg
ficompl
flds
sbb
mov
mov
aaa
out
sbb
xorl
arpl
lret
add
js
sub
pop
xchg
je
ss
push
dec
jae
pop
or
push
cmp
cmc
jmp
mov
pusha
icebp
adc
mov
jl
lahf
dec
or
ljmp
dec
cld
inc
outsb
and
xchg
into
mull
add
dec
out
sbb
sub
loopne
imul
daa
cmpsl
jo
les
in
dec
sbbb
int
xlat
jle
repz
or
aas
inc
xchg
addl
mov
push
jbe
mov
movsb
fs
aas
dec
test
int3
xor
sub
stos
mov
neg
out
pop
add
aaa
push
mov
push
xchg
inc
in
call
sub
sahf
sahf
fmuls
imul
mov
je,pt
jbe
pop
loop
fs
loopne
loopne
cmpsb
in
push
shrb
aas
sbb
daa
popf
jg
shll
scas
inc
repnz
or
push
jmp
inc
fwait
sbb
dec
leave
and
and
jg
pop
mov
mov
test
jo
lahf
div
lea
inc
inc
repnz
or
mov
and
sbb
lcall
xor
and
inc
sbb
mov
mov
push
adc
lods
dec
pop
push
lret
sub
dec
lods
fistps
test
lods
inc
int
xor
lods
or
es
in
sub
test
fldl
pop
dec
arpl
daa
call
ljmp
xchg
lret
inc
movsb
pop
ja
mov
pop
scas
fists
mov
add
inc
xchg
adc
lock
mov
xchg
xchg
int
loopne
inc
pop
pop
lcall
outsb
cld
sbb
arpl
cmp
fcompl
sub
lret
xlat
ds
aad
mov
dec
add
cmpsb
popa
xor
fldt
and
iret
and
jge
mov
cmp
loop
pop
das
mov
sarb
cmp
dec
ret
push
mov
mov
mov
push
data16
stos
cmpsb
sbb
or
ja
inc
xchg
fxch
outsl
cmpl
mov
fwait
scas
mov
out
lahf
xor
xor
jecxz
jo
jmp
sub
mov
xor
mov
inc
jle
mov
loope
push
lret
mov
sti
push
mov
dec
mov
sub
adc
sti
dec
lea
add
jns
push
pop
data16
lret
lret
bound
popa
sbb
or
and
push
sbb
out
lahf
or
and
mov
fsubs
xor
mov
adcl
fs
dec
add
jecxz
inc
call
adc
sbbl
cmp
fwait
stos
dec
jecxz
enter
xlat
sbb
xor
ret
add
fidivl
push
xor
sbb
mov
inc
push
sarl
inc
dec
je
loop
scas
push
adcb
aas
into
xchg
dec
test
rolb
mov
lcall
bound
mov
fbld
xlat
mov
fwait
mov
repnz
imul
leave
xor
adc
sub
pop
ss
push
dec
mov
mov
sti
movsl
pop
daa
fimuls
mov
stos
lea
lea
mov
cmpsb
pop
rcll
dec
lcall
inc
dec
popf
repnz
mov
shll
add
lods
shlb
aaa
push
int3
xor
jg
and
out
in
xchg
test
imul
lcall
xor
xchg
lret
jbe
mov
lods
sarb
jecxz
adc
add
fsubs
push
pop
mov
fldl
mov
dec
fldl
nop
rcrb
loopne
mov
cltd
push
nop
lret
adc
add
out
jnp
or
xchg
push
test
hlt
subb
mov
js
sub
push
icebp
lds
arpl
ror
jne
hlt
jle
jecxz
aaa
repz
and
xor
cmp
aam
hlt
mov
push
inc
arpl
mov
loopne
stos
mov
gs
cwtl
xor
adc
ss
pushf
into
mov
xorb
adc
popf
cmp
popf
adc
sbb
gs
lret
cmpsb
jae
fwait
rol
lahf
in
shlb
repz
sarb
imul
fidivs
pushw
in
rcll
fistl
dec
ret
cltd
mov
push
stos
mov
loope
jmp
jnp
jae
xlat
ja
mov
mov
dec
adc
xor
call
outsl
mov
pop
mov
es
in
cmp
lahf
loopne
aas
frstor
fxch
sub
mov
cwtl
imul
pusha
lods
mov
ss
outsb
imul
jns
rol
lods
mov
mov
ja
pop
and
xchg
les
mov
sbb
push
xor
shll
cmc
jge
imul
cmc
pop
or
dec
out
movsb
xchg
dec
or
int3
insb
mov
xchg
mov
sub
xchg
bound
sub
add
cmp
pop
mov
inc
or
mov
push
adc
pop
jne
loopne
mov
addl
jns
jo
shll
cmp
pop
aam
sub
dec
dec
ja
cmpsb
jnp
mov
jb
jbe
lcall
shll
mov
in
enter
daa
or
cmp
xor
out
ret
jnp
daa
push
shl
inc
lds
adc
cmp
jmp
cmpl
jae
pop
push
jne
cmp
test
jb
ljmp
xor
mov
ja
adcl
jg
lahf
ds
push
dec
hlt
pop
xor
test
jge
mov
cld
rep
pop
adcl
outsb
inc
shl
out
loopne
outsb
mov
xchg
xor
xchg
push
imul
popf
fwait
hlt
shl
lret
pushf
sbb
pop
scas
lahf
mull
loopne
dec
cld
pop
out
pop
movsb
imul
lods
adc
das
sbb
add
and
mov
aaa
and
and
daa
scas
xlat
in
jno
and
xchg
and
cmp
ljmp
icebp
test
jecxz
stos
or
jmp
mov
xchg
ficomps
in
jbe
mov
aaa
in
cli
push
xchg
pop
mov
inc
loop
cmp
pop
push
mov
or
sbb
mov
push
cmp
insl
mov
jae
fistl
out
jg
arpl
adc
hlt
add
mov
push
inc
cltd
aam
mov
aaa
xlat
hlt
xor
ds
xor
pop
add
cmp
jmp
sbb
inc
mov
push
cmp
arpl
loope
gs
mov
xor
mov
pop
jne
test
cld
loopne
mov
in
dec
dec
nop
ret
out
sarl
inc
aad
aas
push
js
imul
push
repz
lods
jg
or
or
push
push
leave
enter
test
inc
dec
xor
push
adc
enter
jae
testb
cmp
stos
inc
insl
push
sub
xchg
adc
dec
lods
lods
sbb
mov
mov
dec
ss
inc
mov
inc
dec
loop
sbb
mov
daa
inc
shll
aam
mov
std
clc
jno
xchg
cs
sub
mov
test
cli
int
xchg
cmc
repz
push
cld
loopne
cmpsb
jle
mov
or
daa
das
idivl
adcb
pop
faddl
rcrl
mov
aad
jnp
hlt
sbb
xchg
sub
aad
cmp
insl
sbb
dec
xchg
pop
fsubr
cmc
mov
jl
cmp
xadd
or
stos
test
jge
push
and
push
add
push
inc
fwait
cmp
pop
xorl
sbb
and
int3
inc
addb
ljmp
pop
sbb
mov
loopne
jb
into
fdivrl
inc
xlat
mov
xchg
xchg
movb
pop
mov
jne
cmp
lcall
fdivs
pop
mov
leave
xchg
dec
fstpt
xchg
pop
add
or
notb
mov
js
push
jmp
pushf
dec
repnz
psraw
daa
adc
into
cs
mov
lfs
jo
mov
das
out
ret
dec
or
or
add
or
or
lock
mov
out
sbb
pop
mov
inc
icebp
out
or
leave
test
pop
xchg
adc
cli
outsl
dec
nop
mulb
cs
sbb
mov
add
icebp
push
jle
add
aam
push
add
mov
dec
jne
or
pop
hlt
sbb
std
jnp
xlat
push
add
mov
cmpsb
jle
cld
sti
mov
scas
repnz
cmpsl
xor
rcll
mov
push
clc
mov
pop
mov
clc
mov
push
dec
mov
ja
sbb
xor
int3
add
inc
push
xor
mov
inc
cli
mov
xchg
pop
cli
add
movsl
in
sbb
imul
mov
jne
jmp
shll
inc
push
mov
stc
mov
jp
ljmp
fiaddl
xchg
gs
jnp
mov
insl
push
clc
rorl
mov
push
mov
loopne
jg
push
push
loop
xchg
clc
ljmp
lods
dec
shll
adc
loopne
mov
mov
cmc
popf
inc
js
add
sub
int
inc
sbb
jp
sbb
xchg
cmp
out
dec
adc
aad
cmp
lahf
push
scas
das
inc
lds
or
push
push
lahf
xor
stos
sbbl
or
jb
lret
lock
mov
mov
sbb
test
jo
into
adc
daa
cld
xchg
js
xor
or
into
adc
out
in
cmp
pop
mov
lock
mov
hlt
sub
or
es
pop
sub
hlt
inc
std
in
in
mov
mov
mov
inc
mov
sbb
daa
xchg
aaa
xchg
fistl
ds
jge
fiadds
imul
mov
xchg
add
jmp
cltd
jae
pusha
lahf
xor
sbb
icebp
loop
gs
ret
aam
jno
cmpl
pushw
dec
call
idivl
aas
rol
add
sti
jns
pop
pminub
or
sub
sbbl
shll
adc
jae
xchg
adc
stc
sbb
and
ds
sbb
fiaddl
or
rclb
or
mov
push
xchg
mov
lahf
inc
sbb
mov
mov
jl
pusha
jmp
mov
jne
push
subl
push
inc
cwtl
icebp
cmc
mov
add
lock
daa
inc
mov
xchg
adcw
mov
enter
adc
mov
mov
loopne
jmp
daa
in
add
push
aad
sub
push
ljmp
ljmp
stc
int
pop
xor
adc
and
gs
fmull
insb
int3
cmp
arpl
jne
mov
movsl
adc
xor
icebp
shll
mov
push
lcall
pop
and
insl
test
fdivrl
leave
add
mov
insl
mov
bnd
in
movsl
push
cmc
movsb
rol
add
jns
add
movsb
mov
mov
mov
sbb
pop
xor
push
and
movsl
cmp
movsl
add
inc
pop
cltd
rcll
xchg
lret
rcll
ret
dec
cmpsl
aaa
lea
cltd
insb
testl
daa
stos
dec
jne
and
pop
xchg
in
sbb
pop
add
sbb
in
mov
pop
lret
dec
test
outsl
daa
icebp
aaa
jmp
pop
gs
fs
xchg
push
shrl
sarb
or
push
test
je
cmpsb
push
and
xchg
jo
pop
ss
pop
mov
xchg
sbb
mov
jns
push
or
das
xor
test
push
xor
adc
mov
dec
adc
push
pop
gs
sbb
mov
add
add
sub
into
aaa
cmp
inc
jge
pop
les
jns
mov
mov
hlt
hlt
std
pop
cmp
es
xchg
ret
fisubrs
xor
jl
pop
pop
inc
test
xor
cmp
aas
sahf
arpl
xor
cmp
sbb
pop
fwait
pop
jecxz
mov
daa
push
das
mov
lds
jmp
cmc
jno
adc
lock
cli
outsb
es
and
mov
mov
mov
insb
les
jo
sbb
lahf
test
roll
pushf
xchg
in
dec
in
shlb
cmp
and
nop
add
jg
push
add
dec
mov
mov
test
ret
subl
stos
jb
jno
nop
out
push
fcomps
movsl
pop
dec
lds
jl
fcmovbe
ret
pop
jne
add
ret
xorb
iret
dec
aas
cltd
loop
loope
mov
insl
jo
and
cmp
add
stc
cltd
stc
adc
and
insb
daa
mov
testl
pop
inc
xor
mov
or
and
inc
cld
cwtl
imul
popf
jg
gs
ds
push
pop
ljmp
scas
push
popf
xchg
outsb
fs
jns
lret
loopne
icebp
pop
mov
in
das
pop
and
sbb
aad
repz
xchg
movsl
ljmp
rclb
and
push
add
push
mov
into
adc
aad
ret
xorb
stos
or
outsl
mov
sub
rcll
into
jl
insb
xchg
jl
popf
add
jnp
xchg
mov
mov
or
insl
mov
mov
fiadds
test
fimuls
jl
cmp
add
mov
subl
outsl
ja
pop
cltd
push
or
cmc
jmp
and
loope
or
and
stos
adc
call
pop
je
pop
scas
pop
fldt
xchg
inc
adc
push
inc
inc
add
jns
out
jb
dec
cmp
push
pop
mov
aad
add
insb
in
and
and
fwait
movsb
cmp
xchg
lret
iret
sti
add
sbb
xor
adc
pushf
inc
movsb
inc
aad
scas
mov
cwtl
dec
push
fimuls
addl
adc
insl
jno
adcl
and
xor
jecxz
jae
xchg
sbb
insb
xor
sbb
movb
mov
fildll
push
xor
or
mov
test
leave
inc
or
pop
jmp
ja
mov
sbb
mov
pop
leave
push
test
sbbl
rol
mov
inc
xchg
mov
sbbb
xor
in
lods
mov
sbb
cs
lds
sti
mov
out
jp
out
dec
xchg
inc
inc
ficompl
pushf
in
xor
mov
adc
outsl
pop
ret
subb
or
aas
jnp
subb
sbb
cmpsl
hlt
jne
lcall
ret
mov
in
lret
scas
les
jl
enter
sbbl
mov
push
addr16
cmp
xchg
sub
scas
pop
pop
stos
dec
pop
fiaddl
imul
js
pop
cli
inc
lret
sbb
je
dec
sub
jae
ret
or
rcr
push
gs
aam
mov
ret
adc
mov
xchg
sbb
sbb
cmp
lock
mov
inc
mov
out
mov
movsl
shrb
mov
push
scas
push
and
pop
push
mov
sbb
stc
dec
gs
sub
fistpll
movsb
and
ffreep
pop
fwait
imul
hlt
cmp
cmp
test
mov
test
shlb
jmp
test
lret
daa
inc
xlat
jno
rorl
stc
into
ja
enter
adc
sbb
sbb
dec
movsl
subps
std
xlat
jge
sub
cmpsl
xor
sbb
cmc
cwtl
and
ret
jns
inc
out
lds
dec
sub
out
dec
inc
insl
lret
daa
lods
xchg
inc
cli
cltd
xchg
addr16
sub
jmp
adc
aad
stos
mov
lret
lcall
or
fstl
mov
xchg
clc
mov
cmp
mulb
out
sbb
lds
and
insl
cwtl
add
pop
inc
insl
push
test
aas
pop
repz
testl
dec
out
jae
test
and
test
xchg
iret
lcall
jecxz
sahf
dec
pop
push
add
int
mov
fcmovnu
movsl
mov
out
and
jg
adc
pop
pushf
xchg
and
push
leave
and
pop
or
dec
adc
ret
in
fistps
mov
push
mov
lahf
ds
clc
add
insb
outsb
addr16
xlat
shll
jmp
std
inc
call
fcmovnb
mov
push
stos
out
add
and
pushf
adc
sub
dec
fists
mov
es
test
xchg
test
sti
cmpsb
call
aad
incb
popa
mov
fwait
sahf
inc
or
test
mov
roll
js
xlat
lcall
stos
inc
push
shll
xor
or
repz
cmc
stos
cld
es
pop
iret
adc
or
cmp
xchg
mov
sub
xor
das
out
decb
int3
es
mov
andb
adcl
outsl
sti
xlat
push
inc
pop
loopne
icebp
sahf
xchg
sbbb
testl
lahf
daa
add
jo
icebp
lods
dec
decl
ret
fistps
inc
std
flds
cmp
add
fwait
popa
adc
add
dec
adcl
cmp
ljmp
sub
lret
insb
stos
push
popa
mov
test
lahf
jecxz
jecxz
test
mov
push
iret
in
jmp
rorl
sahf
rclb
mov
push
cmpsl
push
cli
lds
ds
pusha
or
jne
adc
out
cmp
push
or
roll
xor
sub
jo
xor
push
adc
dec
addr16
shrb
fstpt
shlb
sti
xor
test
xchg
push
mov
movb
fildll
cli
push
push
inc
sub
test
divl
pop
xchg
out
add
movsb
dec
dec
dec
push
lds
arpl
jae
pop
xchg
xor
add
dec
addb
shl
sbb
int
clc
imul
xor
and
ss
iret
mov
sub
std
pusha
sbb
xor
pusha
add
mov
arpl
fcompl
add
inc
lea
movsl
test
test
outsb
icebp
or
inc
sbb
adc
inc
jle
xchg
popf
dec
jle
inc
push
cmc
leave
cmp
dec
jl
mov
jp
xchg
push
mov
in
insb
imul
lods
lcall
mov
dec
movsl
fcom
adc
jno
mov
sti
rcll
inc
add
push
push
lret
xchg
mov
loop
jbe
rcrb
xchg
mov
push
dec
pop
pop
out
fsubr
pop
stos
lods
xor
imul
test
les
jg
iret
cmp
or
mov
adc
sbb
inc
dec
sub
mov
scas
xchg
mov
gs
cmp
and
add
adc
mov
sub
pop
pop
in
insb
mov
ret
dec
or
xor
push
jp
or
cmp
jle
lds
aaa
dec
ljmp
sbb
push
aad
xchg
out
out
mov
push
or
inc
sahf
jnp
or
lret
mov
cbtw
sahf
adc
mov
or
jbe
ja
cmp
lock
testb
jnp
loop
outsl
shr
push
adc
arpl
xchg
push
mov
pushf
cmp
inc
test
fsubrl
test
pop
aaa
incb
dec
xchg
lds
cli
pop
test
mov
mov
push
xchg
sbb
cmp
faddl
roll
fildl
jp
cwtl
test
mulb
jmp
std
enter
mov
pop
enter
push
cmp
in
jecxz
aaa
push
xor
jp
add
add
sbb
cmp
popl
push
outsb
in
cli
dec
cmc
dec
adc
pop
xchg
insb
in
sbb
push
ds
xchg
fmul
cmpsl
xchg
les
hlt
shrb
pushf
inc
clc
sti
loopne
lret
mov
test
je
imul
std
cli
jno
mov
data16
test
sub
sarl
pop
lret
outsb
je
popf
repz
sbb
bound
mov
push
sub
inc
sub
loop
and
add
mov
mov
xlat
movsb
shl
notl
cmp
mov
fisubrs
and
and
cmp
cmp
addps
jbe
and
push
mov
shl
mov
movl
rol
and
and
or
aam
ret
clc
in
out
mov
jmp
call
movsb
pop
push
ljmp
daa
bound
mov
scas
cmpsl
push
cmp
scas
xorl
mov
inc
push
cmp
inc
cmpsb
push
nop
insb
ss
jle
xchg
adc
lahf
pop
fs
cmpb
repnz
sbb
jae
mov
inc
ror
outsb
lods
add
dec
movsl
popl
sub
push
mov
mov
mov
fisttps
int
sbb
ror
in
sub
pop
orl
adc
sbb
call
insb
inc
xchg
push
std
lcall
std
cltd
adc
push
jmp
xor
js
incl
dec
dec
xchg
fildll
pop
cmp
mov
std
push
adc
ljmp
test
pop
daa
mov
and
mov
test
loopne
test
mov
lods
loop
jns
cmpsl
pop
shlb
sub
idivb
adcb
add
push
pop
std
jnp
aam
filds
std
jns
sbb
rorb
int
mov
pushf
xor
movsl
mov
mov
jno
push
mov
mov
dec
mov
nop
xchg
or
add
cli
add
jmp
loope
sbb
insl
dec
and
insl
call
mov
lods
in
jb
jnp
mov
mov
mov
icebp
lret
in
xchg
rcrb
sub
loopne
ret
pushf
push
adc
faddp
jno
movsb
aam
addl
aad
cmp
pop
mov
icebp
jbe
jg
test
out
stos
cmp
nop
pop
popa
jp
jbe
orl
out
cmp
sbb
in
xor
adc
ja
pop
pop
add
or
xchg
rcl
test
ror
adc
cmc
sbb
pop
xor
dec
ret
xchg
sub
mov
jle
xchg
sub
stos
pop
test
inc
inc
or
ret
repz
xchg
leave
push
idiv
arpl
adc
and
fidivl
cwtl
outsl
sbb
sbb
push
out
add
inc
xchg
sbb
dec
xor
repnz
sbb
sub
fists
push
das
jne
js
loop
cmp
mov
loop
mov
mov
dec
xchg
mov
rolb
pop
push
sbb
test
pop
cwtl
xor
or
and
add
jo
sbb
dec
notl
ficompl
jno
sbbl
sub
call
sbb
or
aas
fldenv
outsb
lea
frstor
mov
lcall
adc
pop
ret
mov
fisttpll
loop
out
shrb
mov
addr16
xor
jmp
mov
jmp
mov
mov
je
pop
js
jns
scas
loopne
mov
or
pop
out
pop
sub
fwait
cltd
repz
fsubs
hlt
movsb
xor
add
sahf
inc
adc
les
movsl
dec
stos
repnz
stc
mov
or
and
ret
insl
ficomps
push
jno
mov
push
data16
fsubs
xchg
or
das
add
cmp
mov
adc
insl
stos
xchg
fnstcw
sahf
test
aaa
shlb
fs
mov
xor
lret
aad
mov
lahf
and
movsl
insl
push
push
cmp
out
lea
push
icebp
pop
push
and
sbb
rolb
pop
mov
in
push
xchg
rcrb
push
pop
lock
hlt
lret
lcall
insb
ja
xor
or
std
cmp
inc
roll
daa
mov
jmp
icebp
hlt
pop
das
dec
dec
ljmp
enter
xor
push
shl
mov
icebp
sbb
and
stos
sbb
mov
stos
and
and
dec
out
mov
cmpl
sti
nop
pop
pop
and
adc
int
lahf
je
jmp
fsubrs
shr
insb
mov
in
jo
add
push
jle
or
aad
mov
mov
cltd
push
lock
xchg
mov
inc
imul
and
sti
cmc
insb
jae
loopne
push
mov
adc
push
clc
xchg
sbb
fldenv
neg
inc
cmpsb
adc
das
test
ds
in
xor
addr16
stc
dec
jp
xor
std
dec
push
mov
fdivr
fcoms
and
test
xor
sbb
in
cmp
mov
xor
rcll
test
outsl
push
inc
add
inc
xor
mov
mov
movsl
pop
dec
mov
pop
cwtl
mov
movl
and
mov
add
and
ds
hlt
mov
inc
jge
aaa
sub
insl
ss
and
sub
add
sbb
cmp
je
test
jmp
inc
push
mov
add
nop
push
stos
into
roll
in
in
sub
jnp
mov
cmp
faddl
leave
into
scas
jb
pop
push
xor
pop
cmp
add
pop
ds
or
cmp
jp
insb
ret
or
into
in
mov
sbb
fsubs
cmp
mov
push
iret
mov
js
and
cmp
jo
mov
test
lds
mov
add
mov
dec
dec
idivl
rorl
dec
add
mov
cmp
cmp
push
in
outsb
cmpsl
push
push
cmp
loope
adc
call
inc
cmp
jnp
pop
pop
mov
in
pop
jge
push
push
push
or
jne
xchg
data16
movsl
lock
cwtl
sub
xor
test
inc
gs
sbb
mov
or
movsb
test
adc
mov
xor
or
push
mov
int
shl
test
jge
incb
and
xchg
flds
push
xchg
jo
das
in
cmpl
in
mov
popf
sub
out
enter
cmp
rolb
mov
lahf
dec
lcall
jns
xchg
push
pop
lds
inc
or
mov
and
jle
or
mov
mov
ss
out
sbb
dec
stos
mov
mov
xor
ljmp
sbb
cwtl
jbe
pushf
push
icebp
sahf
fdivs
pop
mov
and
mov
sar
outsb
sarb
sbb
push
cmpsl
ds
lea
stos
sub
cld
xchg
pop
enter
push
cli
fists
xorl
push
adc
in
je
addr16
into
inc
or
push
inc
mov
jns
inc
mov
inc
or
jns
lcall
mov
mov
mov
mov
lods
dec
fimull
loope
sbb
add
xchg
dec
push
adcb
popf
aaa
cmp
clc
stos
aas
sbb
or
mov
mov
ficompl
cmp
inc
into
mov
sbb
out
fmuls
sar
jle
add
jae
xchg
push
idiv
das
jle
jp
lock
jecxz
mov
stos
dec
mov
lock
andb
pmaddwd
pop
aas
pop
mov
mov
sbb
adc
sub
inc
pop
loop
scas
roll
push
std
cmpb
rcrl
ds
mov
imul
sbb
roll
push
outsb
add
mov
dec
inc
mov
xor
out
or
loop
jne
movups
and
or
outsb
test
mov
fldcw
or
aad
daa
aaa
sub
sub
and
jno
insb
ljmp
cmpsl
jmp
push
or
push
cmp
jecxz
push
jle,pn
inc
mov
pushf
cmc
loopne
inc
dec
mov
sub
sub
and
dec
hlt
insl
out
enter
inc
or
and
sub
push
cmc
jmp
fisttps
xchg
aaa
arpl
add
jp
or
imul
in
cmpsl
pop
push
lea
mov
mov
or
hlt
fptan
push
call
xor
mov
cmp
jmp
inc
mov
pop
cld
sahf
xchg
dec
jp
mov
gs
repnz
push
mov
pop
mov
scas
pop
jno
loope
std
dec
imul
mov
dec
xor
and
mov
popa
popa
jmp
movsl
add
cmpsl
daa
add
or
add
mov
mov
pop
adc
jl
or
out
xchg
js
ss
lea
cltd
adc
dec
addb
mov
aam
jbe
in
les
shlb
dec
push
lcall
sbb
dec
push
mov
jecxz
sub
jae
into
pop
adc
or
in
pop
call
jmp
mov
xchg
xchg
mov
sub
popa
shll
add
lds
test
sahf
ret
sahf
pop
je
add
push
iretw
stc
gs
mov
or
mov
lds
or
jnp
pand
sub
add
leave
push
or
xlat
sub
fwait
je
fsubs
adc
addr16
out
bound
xchg
test
in
adc
dec
ret
int3
test
aam
jae
dec
int3
and
cmp
jb
jl
push
or
add
adc
mov
pop
jl
repz
bnd
pop
incl
cmpsb
sbb
popf
inc
call
push
jmp
test
rcrb
mov
mov
shlb
icebp
jns
mov
cmpb
mov
xchg
mov
push
enter
mov
fndisi(8087
enter
sub
not
adc
xlat
out
xor
icebp
sahf
lods
js
stos
push
aad
xchg
push
cltd
ja
les
aas
jp
jp
fs
ret
lods
adc
lods
test
sub
mov
jno
add
sbb
pop
je
mov
pop
loopne
xchg
add
xchg
out
push
pop
aaa
mov
inc
or
test
mov
sub
sub
jmp
je
cwtl
pushf
clc
imul
mov
pusha
stos
mov
mov
movsl
mov
cmp
sub
lods
push
gs
mov
push
cmp
aam
xor
jp
es
loop
or
filds
nop
in
pop
addr16
mov
inc
sbb
test
ss
lock
imul
scas
mov
stos
nop
repz
jl
cld
cmp
test
loopne
outsl
lret
mov
ss
push
sarb
add
mov
addr16
add
adc
out
mov
inc
push
dec
les
jo
jnp
pop
sub
fs
stc
sub
jbe
andb
mov
shrl
lcall
cmc
inc
js
adc
adc
call
jecxz
repz
cmp
cmp
jg
jecxz
insb
dec
or
aas
or
xchg
lret
fbld
jb
and
lahf
add
cmpsb
aam
loopne
cmp
mov
jg
lods
xchg
imul
xchg
jbe
mov
mov
jle
inc
inc
push
mov
rcrb
std
cmpsl
icebp
gs
das
fwait
movsl
inc
shll
fildl
dec
lods
sub
and
adc
loopne
scas
push
lock
and
add
lods
mov
push
pop
mov
outsl
mov
add
mov
and
sarb
add
adc
addr16
mov
insl
out
ret
xchg
subb
lods
or
push
jmp
fimuls
jae
fwait
cmc
ss
cmpsb
pop
or
sbb
cmp
adcl
pushf
cmp
or
and
pushf
fmul
pop
fisttps
icebp
fwait
in
jb
and
out
mov
test
aas
push
jecxz
icebp
inc
mov
sbb
mov
sub
jo
nop
cs
ljmp
add
cmp
jp
jp
push
daa
fs
adc
shlb
cmp
xchg
cmp
xchg
aam
ret
call
push
jno
cwtl
outsb
jbe
sbb
loop
daa
in
dec
testl
jge
mov
fsubl
pop
and
pushf
adc
sub
pop
pop
inc
cmc
jmp
adc
cmpsl
or
test
cli
dec
into
js
rcrl
xor
cli
mov
xchg
mov
pop
les
mov
pop
push
int
sbb
mov
mov
fsubs
fistpll
jmp
outsl
xrstor
pop
ret
outsl
mov
cmpsl
cmp
push
mov
pop
stos
pop
pusha
leave
adc
cwtl
add
fistl
pushf
out
stos
scas
push
add
lret
repnz
pop
sbb
inc
mov
dec
and
lea
outsb
jge
inc
test
insb
out
push
or
aas
mov
and
iret
push
add
int
pop
dec
push
pop
jge
incl
in
hlt
push
outsl
xor
test
int
pop
stos
out
stos
dec
popa
sub
mov
jmp
jle
loope
mov
ljmp
cmp
adc
ret
loopne
cmp
stos
stos
jo
dec
ljmp
outsb
xchg
fsts
jg
inc
out
das
sub
xor
adc
into
mov
je
push
lds
mov
mov
aad
lods
lret
ret
jmp
mov
js
adc
pop
lea
insb
adc
andb
or
add
or
fstps
dec
cmpsb
or
into
lds
add
les
in
adc
stc
addb
dec
in
push
cwtl
mov
xor
mov
addr16
pop
and
cwtl
dec
or
sti
pop
ljmp
jge
cs
mov
adc
outsb
or
loopne
pop
out
inc
lret
loope
mov
leave
js
jl
add
jbe
dec
sub
stos
imul
pop
push
in
les
mov
cwtl
scas
mov
stc
and
xchg
fchs
adc
clc
sbb
dec
in
sahf
sti
clc
and
adc
cmp
in
cmp
mov
out
test
loopne
inc
mov
and
aad
mov
enter
neg
fistl
iret
and
aam
xor
fiaddl
add
xor
push
incl
scas
andl
jmp
push
rorb
and
data16
or
pop
push
xchg
arpl
inc
mov
loope
test
jne
sbb
aam
jge
sbb
xchg
fimull
adc
movsb
in
jae
mov
dec
mul
loope
incb
outsb
sbb
and
jg
dec
and
sbb
orl
mov
imull
and
push
add
pop
inc
pushf
leave
sub
rorl
insl
jge
insb
mov
arpl
sub
fld
sub
xorl
les
push
shlb
mov
pop
mov
lret
mov
in
in
subb
jmp
js
pop
dec
rcl
dec
and
loope
aad
xchg
pop
daa
xchg
cmpsl
adcb
lods
cwtl
out
inc
add
sahf
xchg
sarb
and
mov
xchg
push
pop
rcll
dec
cwtl
jbe
add
and
es
mov
mov
mov
cltd
push
movsb
or
pop
xchg
dec
sub
sti
addr16
divl
mov
jae
xchg
cmp
out
daa
xor
inc
in
add
xchg
cmc
inc
in
xor
repnz
adc
leave
push
aaa
neg
add
lea
cmp
and
sbb
xor
xchg
mov
loope
cmpsb
sbb
insb
sbb
cmpsl
push
pop
cs
xlat
mov
aas
sub
sub
mov
push
xchg
mov
out
fcomp
shrl
fisubs
jmp
lahf
shll
data16
lcall
in
and
dec
pop
mov
adc
mov
mov
adc
jmp
xorl
into
cmc
stos
nop
enter
fistpl
cli
sub
push
sbb
mov
push
in
repnz
movq
fmuls
addr16
into
addb
jno
xchg
and
cmpsl
push
rcrl
sbb
gs
and
pop
das
das
push
icebp
outsl
mov
push
mov
imul
mov
cmpsb
fnsetpm(287
xchg
mov
outsl
add
cmp
mov
ffree
mov
add
add
les
sub
push
mov
add
mov
mov
push
jbe
outsb
out
in
sbb
test
pop
or
int3
cli
jg
fcoml
inc
cmp
test
dec
lock
add
fstpt
ljmp
xor
mov
call
push
mov
push
mov
sbb
jmp
shr
int3
imul
ja
insl
call
popa
ret
sub
mov
addr16
dec
sbb
jge
outsl
test
add
rcrl
xchg
cltd
rcr
pop
dec
sbb
testl
or
stc
scas
or
push
xor
pop
adc
loope
xor
mov
xchg
les
add
pop
subl
shl
xor
and
outsb
push
jne
xchg
jbe
cmp
outsb
push
jae
dec
fmul
aas
loopne
pop
add
inc
xchg
mov
jo
add
dec
mov
clc
pop
repnz
sub
sub
nop
sub
adc
add
xchg
ss
ffreep
movb
repnz
or
addr16
push
jle
pop
add
cmp
outsb
pop
cltd
or
mov
leave
decl
shlb
addr16
cwtl
inc
pop
adc
cwtl
cmp
int3
or
aaa
inc
jle
and
pop
push
inc
ffreep
xor
int
fisttps
int
add
or
and
cmp
mov
pop
push
js
jo
test
mov
push
sti
das
xor
xchg
mov
mov
jge
mov
push
fists
fwait
jg
fneni(8087
mov
or
lods
ljmp
clc
mov
movsb
xchg
cmc
cltd
pop
fidivrl
jbe
daa
or
xor
inc
dec
decb
cmc
xchg
xchg
and
mov
dec
cld
add
cmp
pop
mov
inc
ljmp
pop
fidivl
fstpl
sub
cmp
mov
faddp
adc
out
jnp
xchg
push
lcall
inc
mov
cltd
mov
jg
mov
mov
ja
aad
aam
dec
insl
inc
js
add
adc
lock
shlb
jle
mov
addr16
adc
fisttpl
aam
push
sub
add
pop
cmpsb
bound
rclb
popa
inc
clc
mov
sbb
repnz
frstor
jne
pop
adc
pop
cmp
jle
nop
pushf
jl
in
in
pop
mov
mov
call
arpl
push
mov
dec
lret
mov
testl
xchg
ret
push
cmp
add
mov
and
insb
xlat
xor
inc
imul
cmp
push
imulb
pop
jl
push
xchg
push
xchg
lret
jno
imul
mov
mov
jae
cmp
pop
mov
adc
dec
dec
dec
movsb
loop
mov
pop
js
push
push
int3
clc
inc
andb
add
adc
stos
mov
inc
gs
imul
sub
jl
adc
cmp
mov
xchg
xchg
add
test
hlt
mov
lds
adc
lret
cmpsl
fidivs
adc
rorb
sub
imul
sbb
mov
int3
mov
cmp
push
aaa
stc
jae
jmp
fs
mov
enter
stos
outsl
out
pop
jmp
xlat
or
dec
push
test
addr16
push
push
cmp
sbb
mov
mov
lret
inc
loope
mov
jno
dec
cmp
scas
mov
shll
pop
aam
xchg
pusha
jbe
lds
cld
jmp
hlt
outsb
pop
pop
pop
xor
inc
lret
and
mov
nop
aas
repz
pop
sahf
lcall
test
pop
dec
icebp
xorb
push
imul
stos
or
pop
pop
push
repz
jge
sub
jae
lods
mov
xchg
xchg
pop
pop
inc
mov
das
popf
inc
lret
dec
jbe
pop
scas
and
movsb
movsl
loopne
push
add
pop
push
push
mov
dec
loopne
out
movsl
nop
rolb
rorl
xchg
in
inc
adcb
xchg
cmpsl
fs
insb
xor
jg
rcr
adc
pop
in
loop
cmc
xor
aaa
es
bound
mov
mov
sub
jae
je
jecxz
jns
push
sub
and
lcall
xlat
out
sub
je
mov
and
or
call
jl
ljmp
or
and
mov
faddp
shrl
push
cmp
pop
outsb
jmp
mov
xchg
ret
popf
popf
cli
cmp
out
outsb
mov
push
push
fnstcw
push
inc
and
repz
push
in
flds
test
inc
inc
push
clc
movsl
inc
outsl
stos
icebp
not
jp
loop
add
or
test
adc
mov
out
cltd
cmp
ret
movb
push
aaa
lds
fcoms
sub
adc
jl
sub
or
and
popa
push
fwait
jae
mov
xchg
jae
sub
push
jecxz
sarb
pop
push
xor
outsl
pusha
push
push
inc
push
or
fsubrs
and
inc
xchg
daa
out
push
and
and
adc
cltd
in
lods
and
inc
rolb
adc
cmp
orb
mov
pop
repz
cli
enter
pop
or
add
mov
stos
and
aam
loope
inc
ss
sub
adc
roll
mov
pop
aas
or
icebp
bound
stos
push
scas
cld
cli
dec
popa
mov
push
andb
test
adc
push
aas
inc
addr16
leave
or
pusha
cmp
pop
adc
mov
leave
mov
cli
pop
ret
mov
cmp
ljmp
lods
adc
or
mov
fidivs
inc
adcb
aas
mov
roll
xchg
xor
add
fimull
push
and
pushf
push
or
cmpsb
in
dec
shrl
dec
and
dec
enter
stc
push
xchg
mov
sbb
mov
and
incb
jns
xor
test
iret
mov
fcmovbe
mov
outsb
push
mov
inc
clc
mov
pushf
vmptrld
add
dec
jg
and
adc
adc
loop
add
jnp
in
std
pop
stc
sbb
push
sbb
add
icebp
fst
dec
ror
iret
idivl
out
test
push
ret
cmp
jb,pt
mul
push
test
mov
push
jbe
pushf
push
jp
jb
jno
xor
pop
xor
jne
ljmp
mov
aad
dec
add
push
xchg
rcrl
pusha
popa
and
movsb
shlb
mov
inc
push
mov
loopne
xchg
mov
movsl
aad
sub
ret
insb
add
mov
dec
scas
lret
pusha
dec
adc
ret
mov
outsl
lret
xor
std
and
popa
jge
adc
add
mov
shrl
rcr
jo
lcall
cmp
xchg
sub
and
inc
mov
loopne
xchg
test
mov
mov
out
cltd
add
inc
sub
aaa
cmp
mov
xchg
jmp
adc
sahf
aas
adc
mov
outsb
add
xchg
ret
push
mov
cmpsl
pop
mov
pushf
push
pop
jae
gs
mov
sahf
dec
sahf
add
mov
jae
lock
push
gs
ds
cmp
dec
ss
xchg
sti
sbb
out
icebp
mov
pop
jnp
sub
xchg
push
pop
cltd
sub
mov
mov
sub
sahf
adc
pop
stos
jo
mov
ret
cld
popl
movsl
mov
xchg
lods
mov
mov
ret
jae
pminub
pop
in
ret
push
int3
ret
test
aas
test
jno
push
mov
push
imul
decb
lret
js
mov
add
inc
popf
leave
mov
add
and
mov
jnp
adc
add
imul
mov
adcb
mov
inc
int3
fucom
out
pand
call
popa
ffreep
les
jbe
inc
ret
rcl
daa
adc
orl
xchg
lds
adc
mov
xor
and
pop
das
enter
push
inc
xor
stc
cmpsb
movsl
in
lea
sub
lret
loope
test
sbb
pop
sub
xchg
lods
adc
xlat
mov
outsb
push
pop
mov
test
mov
xchg
ret
adc
sub
aad
dec
neg
sarb
and
dec
dec
sbbb
fiadds
mov
adc
jecxz
mov
mov
dec
dec
add
mov
lock
aad
dec
adc
cs
fadd
jne
out
xor
call
mov
push
push
loopne
inc
jae
jb
xor
adc
adc
mov
paddq
inc
out
sub
jp
sbb
jnp
fsubs
sub
pop
daa
sbb
jnp
rolb
jns
push
pop
out
mov
bound
aaa
jns
push
dec
jge
xor
incb
scas
push
fstpt
mov
daa
movsb
cmpsb
dec
or
jne
jae
and
pop
mov
lret
push
sbb
ret
jl
mov
aaa
pop
push
lret
and
jnp
ja
pop
in
xor
sub
out
test
lret
add
push
sub
push
out
mov
cld
jbe
jb
movsb
aas
mov
push
mull
xor
in
mov
mov
dec
inc
movsl
pop
mov
repz
push
inc
or
pushl
mov
dec
out
sub
insb
mov
stos
shlb
jle
xchg
les
pop
hlt
add
jbe
or
arpl
and
mov
call
scas
push
iret
add
lods
shlb
xchg
jae
jmp
outsb
mov
incb
lret
dec
loopne
mov
ljmp
fwait
divl
icebp
ja
ljmp
mov
sbb
enter
cmp
sub
ret
popf
bound
data16
xor
xchg
push
xlat
bound
adc
aam
repz
jbe
in
mov
shl
sbb
fiaddl
jne
lret
arpl
mov
repz
cmp
jbe
in
jne
xchg
mov
push
push
js
gs
inc
ljmp
pop
add
mov
mov
dec
jge
jnp
inc
lahf
repnz
fbstp
or
mov
inc
sub
pop
jns
adc
movl
cmpb
lods
out
pop
or
dec
xor
push
sbbl
jne,pn
adc
mov
sbb
cli
rclb
sub
int
cmpl
push
mov
add
sbb
cld
xor
push
ljmp
inc
jnp
dec
popa
sub
lods
jnp
inc
test
out
add
imul
push
test
stos
add
jae
repz
in
int3
push
inc
and
pop
add
inc
fwait
rcrl
push
outsl
fbld
xchg
pushf
mov
add
movsl
in
or
pop
dec
scas
pop
or
sbb
lcall
ss
movsl
or
mov
iret
lahf
xchg
mov
ret
rcrb
fisttps
loope
adc
in
mov
dec
or
scas
daa
sbb
mov
fstpt
imull
xchg
mov
or
push
loopne
lock
xchg
jp
lods
test
push
jl
cld
pop
pop
push
dec
push
add
and
push
rcrb
jg
scas
aad
inc
jae
push
fmull
int3
divl
das
popa
add
mov
mov
xor
xchg
jns
cmpsb
dec
xchg
mov
push
lret
int
mov
fidivl
jno
test
cmc
subb
dec
pop
inc
pop
lret
sbb
sbb
ret
stc
out
cmp
push
push
adc
lret
pop
aaa
int
jns
jmp
jb
rcrb
dec
faddl
adc
or
in
xchg
jecxz
or
or
aas
mov
cltd
fs
rcll
outsl
mov
divl
fadds
imul
dec
jle
jbe
fadds
adc
dec
jno
ja
cwtl
xorl
mov
add
pusha
out
add
rclb
xor
iret
sbb
sub
sub
sahf
adc
sub
out
adc
mov
loopne
sub
sbb
cwtl
call
adc
sub
into
mov
arpl
fiadds
inc
mov
flds
stos
hlt
add
xor
xor
div
mov
mov
addr16
jno,pt
add
adc
push
mov
repz
dec
mov
pop
cmpl
sbb
cs
jo
pop
les
ret
int3
xchg
lds
sub
cwtl
bsf
pop
test
jmp
loopne
mov
outsb
lret
frstor
and
leave
loop
or
pushf
mov
push
jne
mov
aad
pushf
popa
fwait
stos
inc
mov
jno
jbe
xchg
push
xor
outsl
cmp
mov
enter
inc
mov
icebp
xchg
adc
xor
insb
pop
call
les
add
cltd
gs
push
fcoml
pop
sahf
mov
cmp
dec
rolb
dec
ss
imul
aas
cmp
popf
lds
lea
fcoms
or
xchg
mov
mov
dec
inc
jp
xchg
inc
decb
adcb
stos
mov
testb
add
andb
loope
push
sbb
pop
add
movsb
ret
testb
add
or
scas
icebp
inc
xchg
insl
inc
popf
mov
sahf
pop
iret
inc
mov
xchg
pop
pop
cwtl
gs
in
fcmovne
push
push
mov
sbbl
jb
mov
mov
cs
test
xor
loopne
sbb
cmp
pop
push
xchg
movsl
nop
jmp
xchg
and
std
out
daa
mov
cmp
dec
cmp
loope
enter
cs
data16
cmp
out
call
cmc
movsl
jnp
subl
or
jmp
sbb
lret
push
pop
inc
movsl
push
stc
shr
inc
mov
outsl
in
dec
stos
orb
xor
xor
dec
out
mov
mov
scas
sub
sub
bound
adc
xlat
adc
adc
push
nop
gs
daa
cmp
sbbb
xchg
std
aad
loop
pop
push
outsb
iret
pop
repz
dec
repz
mov
movsb
jle
cmpsb
cmc
add
pop
insb
fisubl
mov
call
cmpsb
jno
mov
movsl
add
cmp
xchg
mov
and
cmp
pop
enter
das
stos
iret
ja
mov
jg
mov
cmc
xor
mov
in
and
or
add
in
inc
jbe
cmpsb
or
fcom
cld
and
jne
jbe
test
arpl
loopne
and
lods
jecxz
dec
and
leave
gs
sbb
iret
push
outsl
inc
shlb
dec
jp
xor
add
mov
sub
hlt
xchg
or
or
add
fwait
imul
or
and
dec
pop
pop
mov
daa
sub
js
xor
adc
mov
xchg
test
fcmovnb
inc
lock
xor
inc
ds
sti
rsm
inc
add
inc
in
fidivl
lahf
jmp
out
lea
lret
jmp
in
mov
daa
mov
sbb
stos
shl
xchg
add
add
xchg
inc
jne
pop
add
or
int3
push
cmpsl
sub
push
mov
cltd
pushf
lret
scas
in
add
ret
fbld
inc
cmpsb
sub
or
mov
addr16
fdivs
scas
pop
push
sub
or
dec
sarl
sbb
dec
dec
push
pop
mov
ret
ds
enter
pop
or
and
and
jns
xor
fldenv
inc
mov
mov
sub
testl
push
pop
repz
mov
loop
loopne
jl
lock
js
outsl
daa
roll
adc
and
in
xchg
shlb
xor
or
mov
aad
pop
mov
sub
sub
jnp
out
popa
setp
loope
out
dec
lods
nop
jnp
div
aaa
or
adc
lret
jg
dec
cmp
imul
out
jg
jno
mov
test
ljmp
add
std
sub
mov
pop
xchg
bts
xchg
rol
popa
push
iret
fs
push
jbe
in
mov
cmp
sub
fisttpll
ret
insl
scas
daa
inc
sahf
ret
inc
or
enter
inc
mov
xlat
mov
sub
jb
insl
mov
cmpsl
sbb
pop
mov
pop
mov
jmp
arpl
sub
jo
fidivrs
incb
ror
push
jmp
sbb
xchg
int
mov
mulb
cltd
xchg
movsl
jne
loopne
lret
je
test
mull
or
mov
leave
mov
aas
sbb
push
inc
xor
imul
idivl
and
subl
sahf
add
xchg
neg
fs
pop
cmp
sahf
pop
jnp
mov
bound
sbb
sub
and
es
pop
in
je
in
inc
loop
cld
cmc
sub
fcomps
popa
adc
ja
mov
ficompl
ss
or
out
ja
mov
in
push
divl
mov
dec
jb
lock
aaa
pop
dec
xor
jns
out
lock
nop
into
pusha
or
insl
aaa
xchg
jo
shlb
push
addr16
push
clc
cs
loopne
stos
dec
pop
in
or
push
clc
shr
in
push
dec
test
sub
pop
lods
iret
and
mov
lock
ret
das
xor
repnz
mov
in
inc
jg
out
add
cmp
sbb
or
loopne
lahf
orl
loop
cltd
and
mov
aam
fsubs
sub
loop
xor
ret
xor
pushf
or
mov
fildl
movsb
je
inc
es
jmp
mov
xchg
mov
mov
push
pop
rolb
xor
fstpt
xor
xchg
faddl
sub
sub
sbb
sub
mov
lret
pop
js
in
adc
xchg
sahf
lret
das
insl
cmp
mov
repnz
push
pushf
ficompl
adc
insl
fcoml
fistl
ja
and
and
fwait
fs
or
or
mov
jle
add
idivl
xchg
sbb
call
jl
push
ja
xor
sub
addb
push
sbb
mov
xor
mov
or
pop
aas
or
push
call
jns
fs
xor
sub
int
into
push
inc
sarb
icebp
in
ss
arpl
test
mov
and
mov
iret
sbb
leave
adc
jae
into
sbb
dec
sarb
push
ja
orb
ror
mov
add
ffreep
cld
sbb
jg
inc
xchg
cmp
shlb
mov
dec
mov
stos
mov
iret
sub
sar
sbb
mov
roll
jecxz
insb
xchg
in
xchg
sahf
mov
cmp
in
cmp
jp
or
fsubrl
pmaxub
jbe
clc
out
lahf
xor
mov
adcb
bound
jns
or
jae
incb
xor
jp
les
lret
imul
lock
add
ret
cmp
push
pop
out
popa
xor
add
outsl
xchg
das
sbb
adcb
push
movsb
scas
lret
cli
movsl
insb
and
mov
js
push
pop
lods
xlat
push
test
mov
jae
pop
popa
cmc
int
jmp
inc
push
in
jg
cld
xor
mov
scas
sub
out
scas
xlat
stc
fcoms
icebp
ret
sbb
in
lea
pop
adc
or
mov
xchg
shrl
stos
cmpsb
add
xchg
test
stc
test
mov
insl
pop
imul
repnz
idivl
xor
repnz
sub
ret
and
mov
cmp
repnz
pop
or
xchg
das
aad
sti
testl
or
adc
rclb
clc
in
jnp
adc
dec
mov
int3
add
cmc
adc
fisubrl
inc
jge
cmpsl
int3
sbb
cmp
jl
push
mov
dec
cli
xor
cmpsb
jae
scas
add
popa
lea
sub
mov
hlt
push
lds
or
out
shll
test
adc
cmp
xchg
aad
mov
cli
cmpsb
sub
stos
out
dec
fs
xor
icebp
push
loop
fsubrs
outsb
in
fxch
or
ds
hlt
sbb
cmpsb
inc
arpl
push
mov
test
mov
icebp
push
rclb
mov
push
dec
ss
rcrl
in
popa
pop
adc
lcall
sbb
push
shll
mov
movntps
xchg
jle
cld
cli
iret
ljmp
adc
out
pop
mov
push
add
xchg
lret
push
fcompl
adc
pop
cmp
xor
cmp
push
dec
dec
les
std
loope
mov
lret
jnp
adc
dec
lods
popf
xor
cld
fisubs
imul
xor
pop
adc
push
divb
jl
jae
push
pop
cmp
cmp
test
and
sti
mov
mov
mov
dec
mov
push
push
js
push
fsubr
psraw
sahf
mov
xchg
nop
add
jge
notb
nop
jmp
inc
iret
dec
ret
cmc
cmp
out
fldl
sub
orl
ret
pop
jge
or
scas
pop
mov
jb
mov
testl
test
xchg
or
xchg
enter
ficoms
mov
mov
pushf
cmc
mov
dec
lods
out
and
cmpsb
cmp
pop
shlb
xor
pop
iret
sub
in
rep
cmp
xchg
push
push
imul
xchg
icebp
or
imul
sub
push
jecxz
and
aaa
and
adc
mov
test
mov
fs
pop
xlat
lcall
mov
outsl
data16
jb
popf
sbb
sbb
dec
sbb
mov
fdiv
in
sub
cld
push
filds
das
cmc
add
xor
mov
in
outsb
gs
adc
loope
jnp
push
mov
mov
divl
jae
jg
pop
sar
loope
dec
test
push
add
cmp
add
in
jp
dec
push
inc
adc
mov
aaa
lods
loope
jbe
mov
imul
neg
jg
cmp
in
outsl
xlat
jl
gs
mov
pop
popf
adc
dec
scas
not
mov
inc
repz
mov
stos
cs
lret
cmc
push
lret
fldl
aam
fldcw
aam
repz
mov
jne
fldt
pop
and
ret
sbb
inc
das
dec
cltd
gs
push
jne
repnz
lds
adc
pop
in
movsb
xlat
cld
adcb
and
pop
shll
jo
pop
xor
pop
jp
sbb
nop
inc
movsb
and
cli
lahf
test
fstl
mov
jl
sbb
xchg
fdivl
xor
jb
inc
mov
inc
cmp
lcall
mov
push
jl
jl
aad
mov
into
shll
lret
xlat
or
lcall
aam
in
dec
imul
push
adc
adc
stos
ja
pop
xor
mov
insl
test
lcall
iret
stos
int
xchg
xor
sub
cmp
imul
jne
push
out
or
jecxz
stos
insb
outsl
loope
lods
pop
aam
into
fnstcw
js
push
mov
and
dec
jns
aad
lahf
jb
lret
cmp
inc
mov
popf
lods
mov
sbb
mov
jmp
sub
pop
leave
pop
push
repnz
xor
inc
xor
cmpsl
mov
jno
pop
jp
mov
push
ret
fisttpl
inc
test
addr16
adc
xor
jmp
lods
cmpsl
jno
fidivs
or
and
cmp
int3
adc
outsl
lods
sbb
pop
pusha
or
mov
rorb
mov
stos
clc
sti
adc
es
or
inc
outsl
dec
js
sbb
push
or
cmp
xor
mov
mov
push
or
mov
mov
mul
ds
loopne
push
in
cmpb
mov
mov
xchg
aas
cli
mov
and
pop
popf
push
test
and
inc
loopne
adc
pop
ja
loope
xchg
and
pop
test
mov
pop
ljmp
notb
dec
cwtl
xchg
jle
ret
push
lea
or
js
adc
imul
dec
movsl
pusha
dec
cmp
xor
dec
sub
push
cmp
mov
jo
shll
and
jecxz
jb
lods
add
je
hlt
or
jge
and
insl
mov
jns
cmpsb
jb
xor
dec
add
imul
pushl
jl
push
aad
push
xor
in
inc
dec
fsubs
rorb
add
and
push
js
sub
cli
jge
xchg
test
jg
enter
nop
cmp
mov
cmpsb
pop
add
rcl
ja
test
mov
arpl
sub
dec
xchg
imul
push
cmp
sub
loope
or
pop
mov
cli
icebp
fnsave
sbb
out
jge
aad
sbb
push
call
das
loop
jns
xchg
mov
cmpsb
jp
mov
sub
idiv
inc
xchg
jnp
add
mov
cli
rorb
adc
jo
push
insb
xchg
xor
push
mov
push
push
iret
sbb
jne
fiaddl
jge
xchg
cmp
std
pop
popa
mulb
into
add
sahf
push
mov
loope
inc
jp
xlat
test
rcrb
sbb
pop
add
stc
xchg
inc
fstps
xchg
aad
jno
loop
fisubs
rorl
push
add
insl
mov
sub
dec
jl,pn
adc
lret
imul
fldcw
cmp
mov
popl
out
sahf
xlat
and
pop
push
push
mov
fiadds
mov
push
mov
jl
mov
int3
sub
mov
fcomps
push
rcrb
jbe
call
jae
mov
out
movsl
inc
pop
add
mov
cli
and
lcall
test
adc
gs
cmc
movsb
pushf
out
scas
rcll
jl
jno
frstor
daa
xchg
imul
rorl
mov
adc
cmpsl
test
sub
test
jo
nop
insl
push
cmp
add
in
ljmp
mov
pushf
ljmp
shlb
push
aaa
out
mov
inc
push
rorl
cmpsl
rolb
std
test
add
jnp,pn
fnstcw
cmpsl
and
mov
jp
dec
xchg
dec
test
and
fadds
fcmovnbe
daa
jo
xor
xorl
adc
cld
inc
push
mov
ds
cmp
out
std
test
adc
mov
mov
mov
outsl
push
popa
mov
outsb
xchg
ret
mov
ss
mov
mov
cmp
pop
cmc
push
movsb
jne
xor
add
lea
dec
lret
fbld
stos
adc
push
outsl
iret
jmp
std
mov
imul
and
mov
fs
scas
inc
mov
lods
cmp
pushf
arpl
add
out
pushf
jl
xor
rorb
std
add
aas
ljmp
jecxz
xor
add
push
pop
jecxz
and
ljmp
jp
xor
pop
cmp
test
jmp
pop
mov
sbb
jp
jmp
fcoms
push
xchg
cmp
scas
push
jae
or
add
fldl
out
das
loopne
outsl
sub
inc
xchg
or
mov
sub
leave
cltd
fsubrl
jb
fbstp
cld
cmp
sbb
insb
sbbl
repz
loop
add
cmp
mov
jmp
mov
cwtl
test
aad
dec
xor
imul
cmp
mov
dec
das
push
mov
push
mov
add
xor
sbb
inc
daa
jbe
leave
popf
sub
lds
inc
jge
mov
rorl
push
push
adc
jno
mov
sub
jp
fistps
xchg
or
pop
loopnew
fstpt
jo
frstpm(287
loopne
int3
cmpsb
rcr
out
lds
xor
sbb
xchg
outsl
insb
in
xchg
in
ljmp
sbb
push
pop
jge
xorl
das
mov
sub
ret
sbb
les
enter
add
lock
mov
mov
int3
mov
add
sahf
lods
sbb
dec
sub
scas
add
mov
jmp
dec
in
and
adc
lahf
pop
xor
dec
pop
into
test
lods
fildl
fisttps
in
mov
sti
outsl
fdivs
pop
pushf
leave
aam
xchg
dec
or
push
iret
cmp
fwait
aaa
call
in
xor
adc
out
mov
mov
xor
nop
fmuls
add
outsl
pop
cmp
pushf
mov
sbb
test
mov
mov
cld
mov
sbb
cmp
int3
int
stc
jg
push
out
xchg
mov
loop
pop
xchg
es
inc
movsb
les
xlat
arpl
adcl
adc
mov
arpl
pop
adc
cmp
mov
pop
mov
sub
xchg
jecxz
and
loop
call
lock
jbe
pop
pop
push
add
cmc
lret
adc
in
mov
in
scas
movsl
add
out
mov
sbb
xor
push
inc
gs
rcl
lods
inc
and
scas
enter
adc
mov
rclb
movsb
dec
movl
rcr
sbb
pop
sbb
adc
int
and
movsl
adc
mov
xchg
repz
repz
repnz
aam
cmpsl
push
insl
pop
in
repz
sub
xchg
cwtl
cli
neg
adc
push
aad
push
mov
leave
xchg
and
adc
leave
xor
aas
lcall
sahf
sub
mov
into
popf
xor
or
rcrl
and
out
and
test
pop
push
cmp
lret
mov
outsl
mov
repnz
mov
push
cmpsl
cmp
in
mov
sub
inc
and
lret
push
dec
or
push
sti
loop
xor
push
mov
push
cli
and
xor
inc
pusha
leave
icebp
sub
stc
cmp
sbb
push
lahf
data16
dec
inc
sub
scas
adc
repnz
pop
fldln2
push
cmpsl
stos
lret
pop
lds
jns
jb
scas
iret
fcomi
orb
adc
popa
ret
mov
lret
lretw
mov
ret
sbb
jne
cli
nop
adc
inc
jbe
ret
pushf
fisubl
mov
and
out
dec
mov
into
dec
jle
sub
cltd
push
mov
or
mov
ret
pop
cmpsb
xchg
test
cltd
loop
stc
inc
add
jg
inc
push
mov
lods
stos
cmpsb
push
add
popa
popa
das
cmpsl
jnp
jnp
out
dec
das
mov
adc
js
xchg
sahf
dec
iret
mov
sbbb
dec
cmpsb
jns
cmp
call
jge
cs
or
adc
mov
adc
adc
jne
jb
dec
adc
aas
popa
mov
push
xor
ljmp
fistl
cmp
or
xor
and
int
jg
inc
movaps
rcl
ds
enter
ss
sbb
out
mov
mov
dec
addr16
jae
cmp
lret
sbb
scas
pop
std
push
or
push
xchg
mov
dec
push
jno
jno
sbb
jae
or
jecxz
cmp
xchg
fwait
push
or
movsl
repz
neg
mov
xlat
ret
mov
jecxz
cmp
in
in
out
dec
or
cmp
adc
jno
pushf
fcoml
mov
pop
xor
dec
push
sbb
xchg
mov
dec
xor
mov
dec
daa
lret
adc
pop
pushf
and
pop
sbb
cmp
leave
insb
lods
test
mov
push
sbb
mov
pop
or
dec
push
es
xor
xor
add
loopne
movsl
xchg
xor
test
mov
or
mov
cmc
pop
lock
enter
dec
push
xchg
jne
ds
das
push
jae
lret
dec
clc
clc
repz
dec
jmp
inc
in
rcrl
cld
cmpb
rorl
call
test
insl
out
lcall
lods
dec
cmp
cmc
hlt
pop
les
adc
outsl
movsb
xchg
sub
lock
hlt
jmp
out
add
popa
cmp
and
adc
sbbb
iret
iret
shl
fisubl
andl
loop
or
pop
sbb
into
test
shll
shrl
mov
lds
add
jbe
outsb
jle
adc
sbb
arpl
jl
or
and
lods
mov
insb
inc
push
ds
sbb
add
xchg
insb
inc
sbb
ss
sub
leave
inc
mov
and
rcr
push
and
cmp
rclb
jns
rcll
xchg
test
jae
mov
xor
fisubl
outsb
cwtl
pop
and
mov
pop
cli
sub
stos
jae
mov
dec
jle
int3
dec
xchg
push
ljmp
ljmp
loope
push
in
pop
movb
pop
stos
nop
cmpsb
or
sbb
daa
jnp
dec
outsl
std
stc
and
filds
xchg
adc
fistps
mov
fbstp
lret
bound
add
push
sarb
mov
js
adc
rol
jnp
adc
inc
sub
lcall
fst
icebp
xor
jmp
cltd
adc
cmp
and
xor
sbb
mov
push
data16
xchg
in
imul
push
adcl
mov
movsl
shl
adc
push
adc
movsl
loope
inc
dec
pop
fcompl
adc
inc
xchg
mov
pop
inc
sub
cli
sbb
mov
dec
mov
xor
cmp
sarl
inc
subb
mov
test
xchg
jbe
je
and
cmp
shlb
push
loopne
mov
add
push
frstor
dec
push
pop
je
pop
xor
xlat
out
lret
fsubr
pop
cs
call
xor
lcall
test
loope
dec
les
dec
mov
pop
ret
adc
inc
aaa
pop
lahf
sti
out
stos
mov
andb
jge
sbb
xchg
jl
pop
test
jle
sub
sbb
sahf
inc
sbb
cmc
test
lret
and
fwait
pusha
shlb
jecxz
gs
mov
dec
xchg
loopne
mov
rcrb
scas
or
aad
pop
xchg
scas
mov
std
jle
dec
jbe
imul
push
pop
jae
subb
enter
ja
movlps
adc
fdivrp
sub
clc
stc
sub
adc
stos
aas
fadd
jge
inc
sub
mov
test
aam
fnstcw
dec
lcall
int
and
xchg
sbb
fwait
push
dec
out
xchg
add
fisubrs
sbb
cmp
xor
imulb
pop
cltd
mov
and
cmp
in
dec
sub
and
mov
mov
cmp
ret
push
xor
jno
dec
data16
fs
or
popf
js
jl
push
mov
imul
mov
dec
pop
aas
sahf
lcall
mov
das
cmp
mov
sub
cmp
leave
xchg
mov
jb
mov
sub
cmp
stos
cmpsb
add
dec
ret
ret
stc
mov
dec
pusha
jno
xchg
nop
adc
aaa
mov
lret
inc
sub
xchg
lea
arpl
das
mov
push
test
mov
mov
std
sarb
mov
data16
nop
in
das
sub
pop
ja
out
jne
pop
repnz
or
popf
pop
or
decl
imul
cmc
inc
xchg
test
enter
cmp
pop
jo
loopne
xor
ljmp
xor
cli
push
add
xor
lds
addr16
std
dec
mov
and
xchg
les
xor
mov
jg
push
mov
das
cmp
repz
out
into
loop
add
dec
in
vprotw
xor
sbb
inc
inc
mov
daa
mov
lret
and
lret
into
rol
das
ret
test
or
dec
mov
mov
xchg
out
jmp
mov
stos
sub
jg
jns
insb
mov
mov
xchg
addb
or
jo
pop
jns
out
movsb
sub
jg
je
push
jecxz
arpl
adc
mov
xor
adc
in
arpl
jge
aam
xchg
sbbl
push
test
dec
stc
lahf
mov
mov
negb
pop
sti
mov
repnz
in
xchg
shlb
dec
pop
inc
shrd
push
xor
sbb
mov
stos
and
mov
or
and
notl
or
mov
mov
movsl
dec
mov
adc
pop
mulb
cmp
and
or
lods
imul
or
jbe
data16
dec
sarl
pushf
repz
fdivr
sbb
mov
stos
mov
les
imul
jg
push
inc
mov
push
scas
push
mov
jle
addr16
int
orl
outsb
clc
lcall
jno
in
add
xchg
loopne
shll
mov
jo
in
inc
push
mov
in
push
mov
out
repz
push
dec
pushf
cs
scas
iret
fisubrs
rolb
sahf
sub
out
cmp
push
hlt
aas
jne
xor
add
or
mov
rcl
in
pushf
mov
idivb
sub
sub
xchg
add
mov
push
jmp
scas
adc
sub
insl
xchg
nop
outsb
sub
push
adc
xchg
add
call
hlt
popa
bound
clc
and
mov
mov
or
in
pop
fsubr
sarb
and
dec
loop
neg
dec
xchg
roll
test
lock
add
dec
push
pop
jo
mov
pop
pop
push
lods
stos
jbe
xor
jns
push
clc
mov
sti
enter
loop
pop
or
bound
sub
mov
aad
pop
push
sahf
cld
jnp
mov
add
add
out
idivl
inc
and
and
add
jb
call
cld
loop
roll
fnstenv
xchg
jl
repz
loopne
xor
lods
dec
mov
mov
pop
outsl
jp
mov
jge
push
sbb
aad
push
xor
call
sbb
or
xchg
shr
pop
int3
imul
lcall
xlat
das
cmpsl
dec
xchg
shll
xor
nop
inc
jo
test
int3
adc
jg
or
rorb
mov
jo
push
iret
sbb
jno
adc
push
xor
lds
sub
adc
cmpsl
lds
xchg
jg
mov
inc
push
or
xor
arpl
bound
pusha
mov
cltd
or
cs
jge
add
in
fprem1
aam
xor
fwait
in
insb
jecxz
sub
or
push
arpl
sarl
pop
xchg
fidivrl
adcl
scas
testl
es
pop
out
inc
push
xchg
inc
push
mov
ja
fmul
js
mov
or
int3
add
mov
rclb
ljmp
dec
inc
sti
or
insl
mov
push
inc
push
xchg
inc
adc
iret
cmpsl
xchg
xchg
push
jmp
fwait
cmpsb
sahf
int
pop
cvtdq2ps
jge
and
cmpsb
xlat
aam
mov
pop
jnp
lock
sbb
sbb
fcoms
int
dec
icebp
popf
data16
arpl
xchg
scas
sbb
lahf
cmp
mov
push
dec
xor
jg
fadds
xor
fldenv
inc
cmpsb
sahf
in
lret
loop
add
test
dec
pusha
inc
mov
lret
cmpsl
loopne
jmp
inc
repz
adc
cld
add
jnp
mov
mov
adc
movl
xchg
mov
push
mov
addr16
aam
gs
jle
mov
push
xchg
cmp
cwtl
scas
or
js
insb
cmp
sbb
xor
stos
dec
mov
push
sub
mov
push
adc
cmpl
pop
sub
rcrb
jae
gs
dec
add
jle
cmpsl
scas
fisubrs
push
std
outsb
add
push
xchg
push
inc
xchg
aam
ljmp
loopne
add
mov
mov
xchg
into
mov
imull
cltd
lea
dec
xor
cmpsb
addr16
and
xor
jmp
mov
mov
ret
pop
ret
into
mov
mov
test
adc
mov
mov
in
mov
aad
mov
aam
cmp
lcall
lea
sbb
pop
jle
add
mov
fmuls
sbbb
mov
cmp
loope
movsl
cmp
ret
icebp
mov
dec
imul
jge
cmp
push
shl
adc
mov
ret
add
cmpsl
xor
aaa
test
js
dec
icebp
loope
cmp
pop
js
sbb
int
rcl
sbb
cmpsl
adc
pop
adc
neg
imul
enter
push
stc
mov
push
inc
inc
rol
testb
xor
call
fstps
push
cmp
pop
pop
xor
mov
fstps
dec
leave
inc
fs
xor
sbb
cmp
sbb
add
or
xor
testl
jmp
push
xchg
xchg
loope
cmc
rclb
mov
into
sbb
jo
je
ret
cltd
jmp
xchg
mov
xlat
dec
dec
sub
cmpsb
dec
and
and
lret
xor
xchg
fwait
loope
daa
imul
inc
cmpsl
jb
stos
push
shl
sbb
fucomp
mov
push
jae
or
scas
mov
flds
mov
xor
cli
jmp
or
add
ret
in
sbb
pop
ss
je
push
inc
cmc
sarb
stos
loope
jae
sub
in
push
jb
inc
ja
leave
mov
cmp
dec
push
add
in
xchg
or
pop
push
fimuls
xchg
and
sbb
sbb
iret
ss
mov
mov
xor
jmp
pushf
mov
dec
push
xor
ja
add
loope
push
in
mov
aas
pop
or
add
aaa
dec
stc
aam
mov
inc
or
push
outsl
rclb
fcmovnu
adc
sub
xchg
fadds
sahf
aam
xlat
and
xor
jne
jne
int3
add
mov
jp
add
aaa
mov
mov
sbb
push
mov
cmpsl
jae
leave
add
add
out
daa
pop
sbbl
mov
and
jo
jl
iret
std
push
mov
mov
test
negb
jp
lret
dec
cmc
add
es
jecxz
and
int3
mov
mov
lret
cwtl
fldl
dec
pop
push
cmp
int
dec
mov
jl
pop
push
mov
sbb
pusha
fsubr
pop
xor
inc
pop
loope
sub
cmp
push
adc
jecxz
movsb
push
insb
cld
sbb
sub
add
pop
roll
movsbl
xor
jle
pop
pop
mov
inc
cltd
mov
mov
jle
inc
ja
sbb
rcrb
inc
sti
cltd
cmp
push
mov
inc
mov
mov
or
data16
jo
jle
dec
test
dec
add
dec
or
sbb
mov
enter
xor
out
icebp
jno
dec
and
lods
iret
add
ds
fiaddl
jmp
mov
ret
lea
aam
icebp
fisubrl
jge
xor
pushf
mov
mov
push
insb
jb
cwtl
lock
cltd
repz
outsb
lcall
into
push
outsl
sub
mov
sbb
cmp
rorb
sbb
dec
mov
push
pushf
out
jle
or
dec
andl
test
stc
scas
adc
add
mov
int
les
sub
movsb
sahf
rcll
dec
imul
xlat
mov
int
bound
mov
mov
dec
jmp
mov
and
dec
mov
push
xlat
dec
in
push
sti
add
add
pop
mov
sub
ds
decb
dec
lret
test
movsl
cmp
popl
leave
fldt
jmp
loope
icebp
pop
mov
xchg
testb
pop
inc
push
cmpb
stc
dec
les
js
loopne
movsl
fildl
push
inc
inc
xor
mov
push
fs
pop
or
js
lock
int3
movsl
dec
or
cmp
xor
mov
out
fmul
imul
bound
inc
or
adc
dec
xor
cmp
dec
stc
lcall
sub
jne
shll
rcr
cwtl
xlat
pushf
das
or
pop
addr16
dec
aad
or
pop
sbb
and
fcompl
adc
data16
fxch
mov
sbb
jo
adc
adcb
mov
jp
jo
dec
in
mov
hlt
das
cwtl
cmp
cmpb
cwtl
es
sahf
adc
into
sbb
push
jp
mov
lret
adcb
push
lods
pop
fisubl
mov
or
lahf
jns
xchg
clc
enter
loopne
push
push
adc
test
aad
mov
xchg
cs
cli
mov
inc
pop
sbb
sbb
roll
cmpsb
mov
sbb
cmp
iret
sub
flds
pop
arpl
int3
xor
adc
cwtl
movsl
add
sub
jo
enter
mov
aas
mov
lea
stos
pusha
loop
dec
push
xchg
mov
cmp
and
dec
imul
add
sub
add
pop
jo
mov
pushf
adc
sbb
popf
jp
mov
dec
testb
push
sbb
fwait
dec
rcr
insb
jb
nop
sbb
std
inc
and
repz
in
lods
cltd
mov
add
sti
cmp
dec
stos
or
test
js
gs
lea
pushf
mov
mov
add
adc
sbb
orb
or
scas
inc
sbb
popf
movsl
or
pop
push
pop
dec
cmp
xorl
push
call
popa
out
jmp
scas
gs
pop
scas
inc
outsb
pop
pushf
fwait
xchg
mov
sbb
and
xor
sahf
addr16
sbb
cld
xchg
xchg
mov
rcrl
xchg
push
dec
lcall
mov
dec
and
daa
push
jns
out
and
and
ret
mov
or
lret
ljmp
lret
sti
mov
int3
xchg
test
jne
cmpsl
loopne
stos
jns
dec
pop
rorb
pop
add
test
pusha
les
insl
les
leave
xchg
shrl
in
pop
test
xadd
sub
cmp
jo
jp
and
sbbb
mov
lahf
push
dec
out
and
sbb
fistps
ss
mov
jns
je
mov
push
mov
ss
cmp
pushf
xlat
mov
movsb
sbb
push
sbb
mov
dec
dec
mov
ficompl
aaa
loope
pop
and
add
xlat
xlat
mov
cmpl
mov
jge
sub
mov
or
mov
mov
or
shlb
lahf
loope
mov
mov
mov
mov
faddl
push
mov
and
fwait
leave
mov
cmpsb
fstl
jl
in
mov
push
and
fiaddl
sbb
into
push
cmc
cld
pop
in
icebp
jno
mov
test
bound
pop
inc
mov
and
lock
rcr
imul
icebp
inc
xchg
popa
sarb
sub
or
test
cld
add
push
push
cwtl
mov
and
call
xor
push
imul
ljmp
sbb
mov
mov
inc
push
sub
pop
jecxz
in
and
push
mov
hlt
xchg
and
inc
aad
mov
test
aas
add
jno
mov
repnz
mov
rcrl
rcll
cltd
xchg
push
inc
js
mov
push
aaa
xor
jae
mov
mov
data16
mov
fwait
orl
cmp
and
jg
ss
or
push
mov
js
std
cwtl
jl
jns
jle
outsl
xchg
pop
fdivl
shll
movsl
lcall
mov
aaa
aas
or
lock
sub
sub
lods
aam
mov
popa
sahf
mov
xor
sbb
daa
orl
cmp
push
call
movl
cmp
outsl
js
ss
cmpsb
ret
jbe
insb
aam
pop
jg
loope
pop
imul
sub
mov
pop
xchg
mov
xor
and
stc
fists
push
dec
cli
mov
dec
pushf
jae
push
inc
mov
mov
test
cmp
xchg
mov
or
shll
jecxz
mov
loop
push
popa
cmpsb
arpl
je
jns
repz
push
pop
cmp
mov
test
enter
xor
jnp
shrl
cmp
lds
bound
jecxz
adc
pop
cmp
add
mov
daa
aaa
pop
xchg
fistl
add
add
sbb
and
fistpll
push
lret
and
imul
inc
ret
jmp
jo
mov
mov
in
cmp
stos
test
imul
lahf
sub
inc
gs
jle
jp
pusha
push
stos
cltd
cmp
test
lods
test
jl
or
test
push
mov
sub
mov
clc
mov
aad
mov
sub
fs
xor
nop
aam
movsl
xchg
and
adc
and
rcll
mov
ljmp
out
shlb
xor
loope
out
sub
call
je
sub
gs
add
adc
mulb
movsl
sbb
xlat
jge
outsl
movsl
sub
lahf
clc
mov
popl
movsl
cmp
and
fdivs
mov
lock
push
leave
pop
or
adc
mov
lahf
dec
xchg
hlt
jmp
test
lret
push
je
mov
and
pop
fdiv
in
shlb
insl
call
sub
and
pop
xor
mov
lahf
or
das
test
lcall
dec
mov
sbb
rcrl
xchg
mov
cmp
test
das
pusha
loopne
jmp
xchg
pusha
into
addr16
add
jl
push
sub
pushf
adcb
push
pusha
inc
daa
push
mov
dec
jge
mulb
xchg
repz
dec
daa
dec
pop
add
jno
in
mov
loope
cmp
subl
int
add
add
cltd
mov
lods
movsl
jnp
pop
test
movsl
mov
lahf
mov
ja
es
cld
adc
daa
mov
adc
xor
pop
inc
rclb
adc
mov
fucomip
movsl
scas
popf
cmp
mov
pop
xor
imul
add
movsb
mov
nop
scas
movsl
iret
and
fimuls
inc
or
mov
in
data16
rcll
fsts
addr16
jnp
cwtl
xchg
or
repnz
sbb
jne
inc
mov
add
mov
loopne
adc
insl
push
out
in
add
sti
in
mov
sub
jmp
xlat
jno
addr16
inc
mov
jnp
js
in
mov
sub
in
add
or
wrmsr
push
mov
nop
das
lahf
es
jns
out
pusha
sbb
dec
sub
js
mov
jbe
mov
cld
movsl
mov
xorb
out
sub
stc
lret
stc
xor
xchg
jmp
rorb
es
sub
or
fwait
inc
ret
call
push
xor
es
inc
insl
shll
xchg
daa
mov
cmp
add
ret
add
aas
aad
ja
stos
fisubrl
js
dec
in
gs
repz
insb
xor
je
fidivs
sbb
sub
mov
insb
xchg
pushf
dec
mov
rclb
mov
or
dec
jg
loopne
lcall
movsl
jmp
cld
inc
sub
lret
xchg
add
mov
ljmp
mov
mov
fwait
sub
add
mov
ret
adc
lahf
fisttpll
sbb
ljmp
in
mov
mov
dec
cwtl
repnz
adc
in
les
ret
lods
pop
in
lea
mov
stc
popa
cwtl
mov
mov
sub
cmp
movsb
sub
mov
xor
adc
in
out
or
in
sti
pop
loop
add
add
dec
lret
movsb
aam
xlat
arpl
popf
into
push
icebp
xchg
jae
jp
pop
dec
mov
xor
xor
pop
subl
lock
adc
adc
adc
fdivrp
xor
imul
movsl
inc
xlat
push
inc
pop
out
leave
and
repz
lea
xlat
mov
cli
cmpsl
stos
mov
or
je
cld
pop
push
mov
mov
mov
lods
insl
ret
iret
adc
adcl
outsl
rcll
xchg
int
mov
push
pop
jle
scas
scas
or
cmp
sbb
jns
rorl
insl
mov
xchg
loop
inc
inc
dec
adcb
mov
and
int
orb
push
aam
jo
push
add
out
fidivrl
call
ss
loopne
mov
jg
mov
stc
fldt
sbb
les
pop
add
loope
jns
adc
fists
xor
inc
adc
hlt
mov
arpl
stc
mov
inc
sub
fwait
adc
fildll
sub
in
mov
fdivrp
imul
mov
nop
test
pop
sub
nop
dec
aas
std
pop
inc
fdivl
lret
cmp
lods
rcr
add
cmp
mov
mov
aaa
xchg
dec
nop
sbb
add
or
int
xchg
das
bound
mov
notl
dec
ja
faddl
test
inc
les
lret
pop
adc
mov
in
adcl
adc
out
mov
and
add
std
lret
jo
sbb
pop
pop
mov
pop
ljmp
fdivrs
cwtl
sbb
imul
push
mov
push
xor
adcl
addr16
sub
imul
movsl
sbb
cmp
jle
xchg
stc
add
mov
sbb
or
and
outsb
gs
mov
es
xchg
aam
test
sbb
push
nop
movsl
mov
inc
insb
dec
adc
bnd
lods
mov
mov
mov
dec
mov
pop
fs
daa
inc
xor
push
sbb
imul
mov
jne
inc
and
nop
inc
add
pushf
mov
mov
mov
mov
push
jl
xchg
jg
sahf
mov
dec
int
mov
dec
aam
aas
push
bound
mov
inc
xlat
lods
sub
mov
repz
imul
jns
ljmp
jno
mov
mov
inc
test
cltd
xchg
in
jns
add
mov
lds
hlt
jp
or
xchg
mov
mov
push
sarl
sub
push
xchg
mov
xchg
mov
lea
add
lea
ja
loopne
loope
dec
mov
aaa
scas
add
xchg
sub
inc
push
out
roll
inc
mov
or
adc
cmpb
les
inc
mov
popf
dec
mov
mov
mov
mov
xor
pop
js
pop
jecxz
cltd
xor
mov
jp
cmp
mov
cli
xchg
fsin
xor
xchg
sahf
pop
add
stos
cmpsl
addl
fsubs
inc
outsl
push
dec
mov
hlt
adc
push
in
in
jne
inc
push
push
int3
mov
enter
and
cmp
gs
sti
or
nop
pop
addr16
mov
xor
mov
es
mov
jecxz
cld
insb
mov
stos
dec
jge
dec
pushf
or
mov
xchg
jns
fnstcw
pop
and
je
pop
pop
cltd
push
ljmp
xlat
pop
or
mov
leave
movsl
stc
cwtl
pop
xor
inc
and
adc
jecxz
fsts
popf
arpl
xor
pop
mov
test
push
fimuls
push
pop
cmp
imul
sub
popa
mov
stos
sub
add
inc
push
mov
or
fidivrs
or
jne
jo
add
xor
xchg
dec
pop
shl
gs
call
xchg
test
jl
lret
sbb
mov
lahf
push
gs
xor
adc
in
xchg
sbb
popf
icebp
imul
xchg
mov
xor
call
mov
and
nop
sbb
dec
mov
jle
dec
test
mov
jmp
xor
adc
cli
rcll
xchg
and
adc
sub
outsl
rclb
jno
aam
insb
xchg
xor
lret
add
dec
push
jmp
pop
xchg
add
or
test
fistps
cmp
xor
and
enter
cmp
lcall
mov
pop
std
inc
inc
mov
inc
bound
test
jb
or
out
lcall
jmp
scas
lcall
cwtl
pushf
xchg
pop
push
in
lods
mov
cmp
in
je
pop
gs
xchg
sbb
pop
xlat
cli
push
loope
and
lahf
adc
mov
jecxz
mov
andl
lahf
mov
add
insb
jb
cli
fwait
mov
and
cmp
iret
sub
cwtl
inc
cmp
scas
mov
or
cli
or
daa
int3
push
add
cmp
and
popa
dec
std
or
push
add
push
hlt
je
inc
sbb
mov
mov
inc
push
xchg
mov
movsb
jmp
jne
shlb
mov
dec
out
jmp
iret
push
mov
pop
push
cltd
pop
sti
int
repz
lock
or
rclb
xchg
into
jecxz
adc
pcmpeqd
or
stos
out
mov
hlt
ds
mov
mov
xchg
ds
sti
and
add
sbb
fildll
push
dec
xchg
dec
aas
jbe
push
inc
xor
repnz
mov
jle
and
divb
cmp
mov
lret
xchg
mov
jns
mov
lock
lods
in
mov
push
orb
xor
jae
add
xchg
fs
test
shll
jmp
lods
cmp
push
and
jmp
movsl
mov
sub
pop
std
jae
inc
pop
xchg
xlat
jecxz
mov
je
addb
std
mov
aas
loope
dec
and
inc
scas
add
mov
loope
xchg
stc
jns
loopne
sti
cmp
out
fidivrs
in
inc
test
sub
inc
ds
xlat
jns
xor
int3
hlt
cmpl
or
jnp
movsl
mov
dec
fistl
mov
sti
and
fcomps
mov
lods
xchg
sbbb
hlt
xor
les
lret
push
bound
xor
push
push
jbe
push
jns
out
mov
or
mov
sbb
clc
ljmp
lret
bnd
fmuls
sub
xchg
pop
and
jnp
dec
call
inc
repz
mov
fwait
jle
mov
aas
push
stc
push
mull
mov
and
dec
shlb
imul
push
lock
call
ljmp
cs
lods
push
inc
stc
and
insl
aam
adc
insb
push
pop
test
in
sbb
jo
fldt
push
mov
test
sub
shll
in
mov
mov
mov
aaa
xchg
inc
sbb
popf
insl
mov
pusha
enter
aaa
ljmp
pop
daa
ss
stc
int3
out
cmpsb
cmp
add
shr
xchg
pusha
mov
daa
jmp
dec
call
jp
decl
jp
movsl
aaa
push
in
mov
lret
aaa
bound
lea
std
inc
hlt
mov
lahf
inc
jl
scas
mov
inc
sub
jnp
test
ja
pop
sbb
cmp
mov
pop
cmp
outsb
mov
mov
lods
insb
add
mov
jmp
nop
lret
notl
mov
push
dec
loopne
mov
adc
mov
ja
pop
imul
pop
jbe
je
decb
or
addr16
mov
movsb
add
xor
lret
add
pop
cmp
sar
inc
pop
loopne
lea
int3
filds
fstpl
mov
mov
push
xlat
test
icebp
idiv
mov
test
sub
aaa
lock
inc
inc
xchg
sahf
cmpsl
stos
mov
adc
clc
jns
add
loop
enter
and
sub
jnp
pop
lods
mov
inc
mov
notb
adc
in
dec
jle
lea
aad
push
cmpsl
mov
rolb
jle
jmp
dec
inc
in
lea
lods
mov
push
and
pop
xchg
inc
pop
test
aam
jno
or
dec
sbb
clc
xor
or
jle
es
je
pop
xor
adc
hlt
mov
push
adc
xchg
icebp
jmp
pop
test
add
popf
outsl
mov
pop
cmp
out
xor
xchg
sub
or
inc
push
pop
bnd
fcompl
fwait
inc
sbb
mov
pop
fldt
pop
pop
sub
xor
pop
add
dec
xchg
les
push
adc
fstl
jle
jl
xor
loope
into
gs
fsubrl
sahf
adc
lcall
movsl
cmp
fnstcw
xor
sbb
loope
test
dec
pushf
fidivrl
jg
lods
ret
push
dec
push
cwtl
xchg
lret
pop
cmp
sub
jb
jle
imul
mov
jno
repnz
sbb
xor
jnp
pop
mov
das
test
cltd
sbb
pop
int
les
sub
icebp
enter
and
sbbb
mov
inc
push
cmp
mov
inc
inc
and
cwtl
pop
inc
adc
sbb
mov
push
sub
add
dec
mov
pop
jno,pt
sbb
in
mov
addr16
jne
sti
loope
fcmovb
inc
cmc
or
sub
cwtl
mov
cmp
insb
jecxz
or
sti
xchg
mov
pop
aad
mov
fcmovb
mov
mov
outsb
adc
fbstp
mov
xor
or
mov
inc
shlb
test
pushf
into
loop
popf
sbb
jae
outsl
les
add
jnp
or
fcompl
sbb
jg
loop
xor
jecxz
push
inc
mov
dec
add
shlb
stos
push
jmp
mov
aas
lcall
mov
hlt
int
fisttps
out
nop
mov
cmpb
mov
int
adcl
xchg
dec
std
icebp
js
mov
fisubrs
or
and
lret
pop
and
push
cmp
clc
sbb
out
push
jp
pusha
fldcw
or
xchg
in
popa
mov
cmc
mov
dec
pushf
push
adc
add
xchg
aad
repz
pop
enter
cmp
fstpt
repz
int
mov
pop
icebp
cwtl
scas
inc
test
sub
shl
mov
sbb
das
xchg
dec
mul
inc
xor
pop
addr16
push
mov
loopne
sbb
sbb
pop
push
inc
mov
jp
cwtl
sub
mov
pop
rol
test
roll
fcmovnb
lcall
testb
xchg
iret
cltd
loop
jno
jp
sti
ret
mov
xchg
xchg
and
stos
fstpt
sub
adcl
ret
sub
pop
push
out
dec
xor
mov
or
jns
push
jns
out
imul
shlb
mov
adcb
push
insb
xor
cmpsb
dec
lock
sub
push
clc
aad
out
dec
xchg
cmp
adc
xlat
lahf
mov
lahf
adc
fdivr
mov
int
and
jg
push
fisubl
out
sbb
fisttpl
mov
mov
inc
xor
cmc
rorl
mov
mov
inc
jne
sbb
rcrb
xor
and
sbb
out
pop
mov
jne
xchg
icebp
adc
insl
cmc
stc
push
cmp
push
cmp
movsl
lahf
dec
inc
jmp
aad
dec
stc
popa
lds
lahf
mov
cmp
pusha
lret
out
call
xor
add
jg
xor
adc
lock
aas
push
inc
mov
lret
in
or
sub
fs
ss
push
inc
xchg
test
lds
cmp
negb
push
lcall
jbe
cmp
push
std
mov
sub
jle
jl
rorb
xchg
in
push
loope
dec
outsb
push
scas
sub
cmp
jae
adc
popf
pop
adc
cs
out
adc
mov
nop
lea
add
mov
iret
jb
aaa
mov
fcmovb
add
pop
add
idiv
and
test
clc
adc
lock
push
sub
dec
das
or
leave
cld
mov
mov
mull
sub
bound
mov
xlat
jg
jg
mov
popf
movsb
jb
inc
lods
xlat
shlb
out
mov
enter
or
popa
subl
inc
and
inc
cmp
mov
in
jl
jecxz
add
jo
pop
jno
or
sbb
pusha
aam
imul
movsl
push
add
mov
stos
fwait
dec
ret
xlat
add
xchg
pushf
pop
mov
icebp
in
ljmp
xchg
xchg
sahf
shl
xor
sbb
jo
inc
mov
ror
inc
jl
sti
pop
inc
mov
outsb
xor
mov
pop
push
push
sbb
mov
push
xor
stc
ret
test
xchg
or
mov
mov
mov
jb
or
subb
jno
fwait
push
mov
fwait
mov
or
arpl
jl
push
movsl
hlt
dec
call
sub
pop
cwtl
les
adc
stc
sbb
dec
mov
inc
pop
mov
sahf
pop
xchg
loop
mov
dec
xchg
out
pop
bound
int3
mov
test
dec
mov
sbb
test
movsb
mov
cs
jae
pop
jmp
jns
insb
js
xor
mov
dec
sbb
fwait
push
test
mov
icebp
in
jecxz
rolb
addr16
push
xchg
iret
pop
imul
sti
insb
xor
out
out
mov
mov
mov
dec
fstpl
repnz
sbb
faddl
popa
fmul
and
stos
gs
test
jae
and
mov
mov
xchg
imul
jg
mov
mov
xchg
fistl
shrb
jo
add
out
pop
add
stc
andl
sub
fsubrs
int3
cmp
jge
repnz
mov
fistpl
outsb
mov
std
loopne
jno
xor
loop
leave
add
pop
ret
arpl
in
mov
lret
fs
cmpsb
dec
xor
push
or
adc
mov
mov
jge
les
sbb
sbb
sbb
jmp
rcl
insb
jns
push
repz
cmp
sbb
xor
fwait
xlat
andl
scas
cmp
sahf
push
mov
daa
adc
adc
sbb
in
jbe
xor
dec
add
jecxz
ljmp
add
pop
int3
mov
dec
xchg
or
or
outsl
loope,pt
push
mov
adc
stc
out
outsl
int
inc
mov
or
fsubrp
aad
cmpsb
out
sub
xchg
push
mov
lods
aam
int3
bnd
inc
fnstcw
xor
mov
insl
cltd
xor
jl
arpl
push
sub
pop
mov
xlat
out
fcomip
ljmp
fldcw
mov
inc
sub
orl
inc
xor
adc
cli
stos
adc
cmc
pop
or
or
stos
mov
cmp
pop
push
push
ja
int
pop
fstps
sbb
xor
xor
out
xchg
cmp
mov
pop
add
jnp
stos
ror
jge
insl
leave
movl
pop
mov
loopne
xchg
ficoms
inc
push
loop
pop
dec
test
shlb
mov
mov
jge
lea
pop
push
dec
add
jp
sub
pop
push
scas
adc
movsl
or
sub
arpl
lcall
out
xor
cltd
pop
push
jmp
mov
out
or
mov
aas
mov
xchg
repz
xor
bound
inc
in
icebp
xor
lds
add
cmc
mov
jnp
aam
dec
hlt
xor
mov
lods
adc
bound
mov
into
xchg
pusha
aad
xchg
shll
xorb
adc
mov
adc
inc
xchg
popa
ds
cmp
push
or
fdiv
jo
test
adc
pop
rol
fimuls
mov
sbb
sub
sahf
xchg
inc
insl
sar
cmpl
aaa
push
adc
insl
ret
repz
ljmp
sub
pop
inc
push
sbb
sub
mov
and
ret
stc
lcall
jnp
lret
or
icebp
adc
sbb
cwtl
inc
pop
push
bound
xor
pop
cli
or
loope
inc
fwait
imul
xchg
nop
pop
popa
aam
mov
insb
in
pop
in
pushf
inc
idivl
pusha
pop
mov
out
pushf
add
inc
inc
mov
shlb
ds
and
xor
pop
pop
dec
xor
xchg
pop
ret
popf
fstpt
js
pop
orl
push
mov
inc
cmpsb
adc
push
andl
jno
int
sub
push
cld
je
push
lret
mov
jg
inc
in
mov
sbb
sbb
mov
out
sub
ret
movsl
lea
xchg
ljmp
ss
divl
mov
inc
imul
cwtl
int
popa
or
pop
cmp
inc
dec
inc
sub
cltd
jge
inc
add
sbb
movsl
push
sarb
or
orl
fimull
push
js
dec
mov
mov
cmp
jns
jge
test
out
xlat
push
roll
jne
imul
push
mov
push
jae
sbb
arpl
cwtl
dec
adc
mov
ljmp
scas
cwtl
addb
cmp
and
int3
loop
mov
xor
jnp
out
cli
or
pop
in
xchg
fpatan
inc
lods
mov
inc
xchg
fiaddl
dec
mov
dec
mov
stos
xor
add
sahf
repnz
gs
push
stc
push
lahf
xchg
repz
into
sub
xchg
repz
insl
dec
shl
in
and
pusha
popl
and
inc
dec
lods
pop
lea
in
mov
inc
loopne
dec
push
jo
stos
mov
ss
fldl
add
test
shl
jle
in
sahf
ficomps
push
mov
and
outsb
in
mov
movsl
idivl
cmp
gs
icebp
push
jo
pop
dec
or
dec
mov
jle,pt
out
inc
and
sub
cmp
ficoml
call
pop
sti
fwait
cmp
int
or
int3
mov
xor
dec
insl
sti
lea
adc
bound
mov
pop
sbbl
inc
inc
cmp
pop
pop
push
push
popf
ja
jae
push
jle
lcall
cltd
stos
sbb
pop
jae
out
cmpsb
jmp
fldcw
pop
daa
jno
sbb
add
insl
scas
pusha
divl
scas
inc
sbb
cmpsb
xchg
xchg
decb
aas
repz
add
imulb
mov
xlat
popf
cmp
std
mov
arpl
nop
sahf
xor
xchg
arpl
pusha
and
in
dec
out
jb,pt
xor
mov
push
xchg
add
into
and
adc
into
pop
ss
push
and
adc
sbb
fidivrs
dec
stos
pop
sti
sub
and
or
in
inc
mov
ljmp
sarl
cld
mov
data16
adc
pop
repz
xchg
pushf
int
pop
sbb
jnp
test
or
loope
sbb
les
shll
aad
mov
push
daa
or
push
pop
mov
cmp
mov
jb
dec
pop
sub
inc
test
mov
mov
je
push
sub
cmpsb
xor
push
mov
les
mov
push
lods
mov
pushf
mov
jns
add
cld
sbb
push
push
jl
iret
xor
cs
aad
and
pop
add
inc
jmp
jo
addr16
xchg
jns
push
cmp
mov
in
mov
pop
sub
adc
adc
testb
sub
bound
movsl
and
pop
das
inc
xlat
cmp
mov
inc
lods
insb
adc
and
xchg
xchg
loope
inc
incb
sub
dec
jne
push
push
mov
ret
stos
cmpsl
lahf
pop
int3
mov
sbb
xor
mov
in
es
push
sub
jns
lcall
cmpsl
mov
fidivrs
bound
insb
fs
mov
adc
sub
mov
xor
xor
popa
daa
inc
leave
xorb
rcrl
mov
rorl
notl
sbb
lock
add
sbb
lods
pop
xchg
or
stc
mov
aas
jb
mov
neg
add
sbb
jae
dec
sarb
popf
rclb
out
das
leave
adc
mov
sub
in
pop
setae
or
std
cmp
and
sub
lods
sub
testl
inc
cmc
jl
jns
xor
sarb
jle
jnp
pop
cld
and
jae
sbb
ljmp
cmp
pop
out
push
cmp
cmp
cltd
test
call
and
mov
std
adc
jb
lds
xchg
into
xor
sub
xor
cli
mov
xchg
out
adc
jge,pn
daa
add
cmp
sbb
pop
cmpsl
jl
or
push
push
outsb
rol
daa
mov
sub
mov
xor
push
push
and
scas
jnp
lea
jbe
repnz
enter
jge
inc
add
and
or
stos
xchg
outsl
int3
or
adc
dec
jae
or
xor
pop
fisttpll
xchg
dec
add
jne
shrb
pop
adc
data16
adc
and
fstp
mov
push
cmpsl
cmp
std
cmp
and
jmp
sub
mov
jno
adc
movsb
push
sub
jnp
and
call
popf
in
xor
xchg
imul
into
scas
mov
stos
fcomip
mov
jae
mov
xchg
or
add
inc
pop
in
sbb
not
xlat
decb
jbe
mov
adc
inc
rcll
pop
bound
ds
pusha
lcall
fwait
cmp
in
mov
push
sub
clc
jmp
ja
inc
xchg
sarb
mov
cltd
add
idivb
sub
popf
and
rolb
in
xchg
divl
mov
pop
bound
fs
xchg
cmpsl
push
jecxz
jmp
pop
adc
mov
repz
clc
cmp
jae
frstor
or
cwtl
mov
push
or
pop
mov
push
jecxz
sub
scas
mov
lret
pusha
or
xor
and
rorb
push
scas
mov
les
das
jl
pop
adc
pop
ljmp
xlat
int
fldt
pop
iret
push
add
inc
hlt
cmp
push
fisttpl
dec
aam
cs
adc
mov
xor
mov
out
fsubr
push
int
mov
inc
sub
icebp
jae
jg
push
sbb
pusha
lret
out
mov
cld
mov
ds
cmp
inc
mov
jmp
sbb
xchg
shlb
or
jo
sub
push
lods
add
call
push
cmp
movsb
xchg
sub
outsl
cmpsb
fsubl
out
push
sbb
fidivrs
jno
ret
sbb
sbb
icebp
frstor
dec
xor
test
stos
fucomip
sbb
int
adc
mov
ret
shrb
cmp
loope
fs
add
ret
cld
mov
aas
xchg
dec
push
mov
cltd
lods
add
scas
dec
vpaddsb
sbb
cld
pusha
pop
add
shrl
iret
xor
jb
cmp
aad
es
loope
sub
ljmp
pushf
pop
aam
xchg
ret
xor
push
aas
dec
inc
ret
fisubs
mov
cli
in
or
insb
lahf
stos
aaa
and
pushf
sub
xor
cmc
jg
std
xor
push
incb
loope
ja
mov
loop
pop
add
insb
push
sbbb
mov
sub
xchg
push
imul
into
cmc
outsb
and
bound
negl
int
into
mov
pop
popf
adc
mov
add
mov
sub
cltd
jle
lcall
push
push
cmp
cmp
push
fiaddl
cltd
jnp
movsb
cld
call
sub
inc
cwtl
dec
xor
pop
cmp
cmc
ja
inc
xchg
add
pop
push
adc
xchg
push
je
mov
outsl
lock
push
cld
dec
cmpsl
and
cs
mov
xchg
sbb
mov
mov
jmp
push
leave
inc
cmp
xchg
and
cmp
mov
into
add
mov
scas
mov
leave
enter
subl
pop
shll
int3
mov
xchg
divl
mov
test
roll
js
into
loope
pop
out
xor
shrd
pop
jne
sbb
push
repnz
repz
js
adc
jbe
xchg
dec
dec
call
hlt
insb
push
sub
xor
cli
sub
movsl
gs
pushf
repz
and
sbb
popa
dec
cmp
pop
lret
xchg
adcb
sar
inc
push
or
and
loopne
nop
sbb
pop
mov
arpl
push
and
outsb
lock
jmp
loop
or
repnz
loop
push
push
or
cmpsl
enter
pop
es
ja
pop
dec
push
pop
in
test
int3
cli
sahf
aam
popa
xchg
cmpsl
loope
fldl
cs
mov
in
cmpb
cmp
xor
jmp
inc
dec
fprem1
shl
jo
fwait
gs
inc
pop
or
jns
jg
adc
dec
sub
adcl
pop
push
pop
adc
dec
lods
test
cld
int3
aaa
test
push
ja
xchg
and
adc
mov
arpl
orl
pop
test
pop
add
xor
or
adc
adc
dec
mov
jecxz
inc
outsb
shll
jl
div
jecxz
cs
ja
push
push
add
dec
lahf
faddl
and
dec
cmpsl
outsl
std
jecxz
sarb
arpl
cmc
xor
idivl
addr16
jge
ja
push
dec
mov
mov
clc
adc
xchg
push
lea
mov
or
out
call
cmp
or
xor
push
incb
outsl
push
stos
sub
lea
mov
aaa
ds
pop
mov
add
sbb
fistl
in
mov
inc
and
arpl
into
inc
sub
stos
cmpsb
jp
test
imul
movsl
jp
sbb
loop
pop
lret
jge
sbb
cmc
cmp
inc
push
and
xchg
test
add
and
lahf
mov
popa
cld
ucomiss
outsb
xor
lret
imul
loop
cmpsl
xor
je
pop
jo
or
adc
out
add
popf
iret
add
push
inc
out
repnz
adc
sahf
movsb
sub
mov
add
dec
insb
repnz
inc
sbb
addl
fcompl
inc
fldenv
pop
int
cmp
jb
cmp
mov
xor
mov
pop
and
mov
xchg
or
xchg
jg
sub
arpl
and
adc
aaa
sbb
pop
lods
dec
scas
sbb
cmp
addr16
inc
cmp
dec
mov
dec
mov
addr16
adc
dec
cwtl
xchg
mov
cli
pop
dec
scas
cmp
icebp
push
jmp
imul
cltd
sub
ljmp
xchg
dec
lahf
inc
fsubs
push
cmp
adc
bound
pop
inc
push
in
or
adc
mov
lahf
jo
add
jg
loope
push
cli
bound
xor
js
fcompl
mov
and
sub
and
xchg
push
cwtl
iret
add
loopne
test
dec
les
xlat
lret
test
stos
shlb
pop
ja
mov
insl
aaa
or
inc
or
scas
sahf
clc
adc
sub
je
mov
pop
mov
mov
and
mov
mov
int
jnp
popf
or
sbb
jnp
lret
or
pop
and
je
adc
jg
cmp
addr16
test
popf
in
iret
lock
ret
dec
lret
into
sti
fwait
cmp
adc
cwtl
int3
lea
lret
out
imul
mov
pusha
stos
movsb
mov
std
aad
into
and
pop
pop
rcr
mov
aam
out
xor
lahf
fld
mov
call
aad
pop
in
fldt
xlat
xchg
int
dec
fistpl
insb
pushf
in
dec
or
mov
cmpsb
lods
lods
jbe
jmp
movsb
leave
lea
pop
icebp
push
in
xor
add
dec
and
xorl
xor
push
sub
pop
shll
pop
lcall
inc
bound
jmp
inc
mov
dec
movsb
jb
sub
cli
and
inc
mov
gs
dec
xchg
mov
mov
mov
add
fsub
sarl
out
pop
inc
xchg
js
and
adcl
mov
or
xchg
jno
mov
test
inc
xor
xchg
jnp
pop
stos
mov
arpl
ror
cwtl
mov
cwtl
fwait
aam
movsl
cltd
mov
cmp
and
imul
arpl
sbb
scas
sbb
xor
jnp
lahf
mov
sub
sub
pop
test
or
push
rcll
not
es
xchg
ret
test
pop
nop
cmp
aaa
cltd
test
lock
inc
jle
shl
sub
xor
or
mov
sarb
xchg
inc
jbe,pn
adc
mov
jae
mov
je
cmpsl
mov
dec
jnp
loop
mov
mov
dec
cld
cmp
je
xchg
in
mov
jbe
cmp
mov
int3
or
movsl
inc
arpl
sbb
jg
hlt
sbb
mov
int
dec
aam
jb
lds
mov
jne
pop
repz
jne
test
sub
xor
sbb
cwtl
sub
popa
jg
lcall
jbe
sbbb
adc
movsb
sbb
xor
fstpl
fildl
enter
or
movsl
pop
jp
jecxz
mov
test
jg
movsb
inc
pop
lret
in
mov
add
bnd
ficoml
insl
mov
push
push
add
lock
dec
jbe
jne
sub
popa
mov
jb
fsubs
xchg
in
adc
je
mov
stc
int
mov
lret
add
fsub
es
mov
fwait
cmp
add
lcall
lcall
xchg
pop
int3
sarb
sbb
pop
mov
js
pop
and
push
adc
or
cmp
mov
popl
nop
insb
dec
push
sub
fs
adc
jbe
mov
jp
imul
jge
mov
mov
popf
dec
mov
out
imul
xor
lea
dec
mov
js
adcb
mov
or
bound
and
lcall
mov
cltd
repz
rcrb
in
xor
test
into
mov
mov
mov
or
xchg
fldlg2
cmpl
inc
pop
scas
xchg
push
sub
jnp
dec
pop
adc
outsl
fistpl
dec
adc
test
jl
std
push
fwait
mov
dec
adc
out
addr16
imul
push
mov
jecxz
xchg
aad
dec
adc
inc
aad
pushf
add
icebp
mov
arpl
std
int
shlb
push
cmp
fwait
ljmp
pop
pop
inc
xor
inc
jbe
mov
pop
repz
outsl
aas
aaa
pop
xor
enter
outsb
in
jg
arpl
test
repnz
mov
mov
test
sub
outsb
dec
jmp
jle
mov
pusha
push
dec
cmp
subb
rolb
or
xchg
lds
mov
test
pop
mov
dec
outsb
test
or
sbb
fildl
push
adcl
in
jle
push
sub
aas
mov
out
sti
ljmp
sbb
pop
push
mov
xlat
pop
push
and
fs
sub
or
std
pusha
scas
and
mov
sub
xor
sarb
repnz
cli
jp
adc
ja
add
cwtl
push
xchg
rcrb
jp
inc
sbb
test
xchg
aam
cmp
stos
cld
pop
inc
sub
or
cmpsl
jae
xor
fsub
cld
ja
lcall
sbb
sarb
ja
or
js
repnz
mov
pop
cmc
mov
mov
sub
bound
loope
ja
dec
jbe
xchg
clc
movsl
xor
aaa
clc
xchg
xlat
cltd
cld
iret
pop
sbb
mov
jmp
sub
out
repnz
mov
cld
lds
adc
sbb
test
add
cmpl
call
outsl
movsb
sub
imul
jp
xlat
daa
daa
adc
jno
xor
or
fdivr
dec
bound
push
inc
jle
xor
push
mov
sti
cmovb
jne
shrb
loopne
rcr
fistpll
xchg
and
cmp
xlat
jle
jns
push
sbb
add
xchg
idivl
mov
jmp
out
xchg
push
out
sub
dec
subl
in
jmp
movsb
add
push
pop
lds
data16
out
and
das
adc
nop
bnd
dec
rolb
test
arpl
xchg
fistpl
int
sbbl
insl
xchg
loopne
movsb
popf
shrl
jmp
dec
xchg
fsubr
loop
pusha
sbb
aas
cmp
xor
mov
mov
inc
aaa
dec
addb
ljmp
out
sub
scas
aaa
push
sbb
stc
jae
movsl
iret
aam
mov
dec
and
push
mov
stos
fdivl
pop
inc
ja
adc
mov
cmpsl
pop
xbegin
retw
dec
jb
jge
pop
pop
sbb
rolb
or
fmul
dec
leave
jb
test
pop
inc
push
mov
orl
fisttpll
sbbl
test
push
push
jns
lds
sahf
xor
adc
sub
lds
sbb
scas
push
test
sbb
add
divl
jl
fistpl
inc
repnz
imull
xchg
lret
int3
arpl
test
enter
aas
cmp
mov
sbb
int
adc
jecxz
pand
fs
adc
adc
cmpsl
out
fdivrs
fsts
hlt
orl
test
add
dec
jno,pt
jecxz
adc
std
sti
les
mov
or
inc
xor
jl
pushf
inc
adc
sub
ss
cmp
pop
cmp
xchg
adc
inc
ret
xor
ret
sub
dec
shll
jle
push
fmuls
mulb
into
jnp
sub
lea
clc
pushf
xchg
add
jp
sti
xor
dec
lahf
xorl
xchg
popf
hlt
jne
add
push
es
leave
adc
ret
dec
ja
jmp
out
mov
outsl
sti
mov
insb
fs
fisubrl
push
shrl
andb
mov
loop
jne
jnp
std
aaa
push
or
js
aas
bound
xor
shll
pop
mov
mov
cmp
xor
dec
xchg
test
popa
jge
pop
sarb
sbb
pavgb
push
mov
js,pt
add
leave
inc
nop
pop
sbb
arpl
push
jns
fucom
sub
mov
lods
negl
and
addb
xchg
lret
icebp
imul
jmp
mov
out
notb
jl
pop
sub
popf
loop
mov
mov
mov
repz
fcomps
push
push
mov
js
push
pop
int
cmpsl
test
ret
lds
mov
mov
ja
jmp
dec
xchg
fmul
imul
iret
fadds
and
pushf
stos
xchg
icebp
add
inc
divl
ja
xchg
push
xor
popw
add
jb
add
push
out
lods
sub
icebp
push
fstps
in
lret
and
push
adc
hlt
jecxz
mov
lret
sarl
xchg
aam
cmp
pop
inc
sbb
daa
inc
adc
or
mov
xchg
mov
inc
insb
jne
popf
xchg
popf
outsl
xchg
pop
sbb
xchg
adc
ficoms
jno
inc
leave
hlt
push
ficoml
aam
and
sub
mov
dec
loope
add
or
xor
push
in
sub
test
xor
mov
cmp
push
pop
lea
inc
xorl
jnp
pop
jnp
bound
jmp
imul
xor
mov
dec
push
mov
mov
mov
ss
mov
push
je
mov
fwait
cwtl
adc
jno
push
cs
rcll
in
xchg
gs
xlat
dec
sbb
clc
popf
jle
dec
push
dec
in
rorb
fiadds
fucomi
push
mov
enter
sbb
test
and
jge
sub
jmp
dec
adc
inc
or
ds
stos
pop
mov
test
cmp
and
sahf
repnz
mov
stc
jne
adc
push
sbb
mov
lods
cwtl
popf
pop
loope
fwait
stos
xchg
pop
cmp
xor
add
pushl
mov
cmp
ds
jmp
push
cmpsl
hlt
mov
sahf
nop
xor
lock
dec
mov
adc
push
lcall
bnd
mov
inc
ss
inc
addb
clc
mov
fs
cmpsb
mov
popa
into
mov
popf
cmpsb
dec
dec
mov
mov
insl
dec
pop
scas
adc
insl
ret
cli
inc
cmc
insl
repz
insl
sub
aaa
test
iret
sub
or
and
jl
test
mov
fs
sub
dec
rcr
js
stos
xor
inc
std
push
pop
loop
jb
push
or
aas
push
or
sbb
std
subb
cltd
push
jnp
lahf
inc
add
jle
mov
fcomp
scas
mov
and
ret
dec
data16
addr16
shlb
and
mov
sub
scas
fisubl
push
mov
std
test
inc
call
mov
xchg
mov
nop
aad
xchg
mov
into
fsubrl
xchg
cwtl
push
and
divb
mov
shr
push
aam
nop
xchg
mov
or
sub
test
insl
cmp
add
push
je
and
outsb
fxch
adc
sub
jl
jg
fs
or
sbbl
adcl
insb
mulb
cmovs
mov
add
push
push
jae
xor
push
iret
xchg
jnp
xor
sbb
inc
cwtl
or
gs
repz
add
out
sub
out
fdivs
insb
ret
push
push
cmpsl
jecxz
insb
mov
xor
mov
dec
push
fistpl
ljmp
pop
cs
cmp
aas
add
and
push
ds
jge
mov
mov
inc
out
bound
jae
mov
aad
inc
pop
or
jb
icebp
adc
sbb
lods
ret
or
data16
ds
in
mov
iret
popf
pop
mov
scas
in
lock
push
inc
daa
xor
mov
addl
int3
lret
xchg
cmc
sahf
test
push
mov
jl
repnz
sub
and
adc
inc
out
aaa
cmp
rolb
xchg
lea
push
lea
sub
aam
outsb
test
cmp
pushf
nopl
xor
cltd
inc
mov
cmp
ret
repz
pop
mov
aad
mov
adc
loop
adc
cld
icebp
or
addr16
inc
adc
adc
pop
xchg
insl
pop
mov
cli
adcl
clc
cmp
lcall
jbe
cwtl
stc
pop
adc
xlat
mov
popa
sahf
pop
out
int3
gs
ja
add
push
mov
sub
adc
push
aaa
fisubrs
loop
xchg
in
and
and
cld
andl
add
or
popa
pushf
mov
loopne
lods
adc
jl
jge
orl
adcl
call
test
push
mov
xor
push
cld
or
ds
mov
cli
or
pop
ret
mov
nop
in
sub
xor
mov
ret
rol
lods
flds
mov
xchg
lret
dec
add
sbb
fstl
push
movsl
jno
mov
test
fldenv
inc
cmp
push
fbld
lret
dec
popf
fwait
and
add
dec
je
std
or
xchg
movl
pop
decb
ret
adcb
adc
dec
add
pop
xor
push
adc
imul
in
sbb
jne
push
and
cmp
push
xor
fidivs
and
insl
rcll
mov
test
dec
sbb
dec
addr16
pop
or
decl
adc
das
pushfw
jmp
mov
inc
ds
dec
add
add
push
in
pop
mov
pushf
fldenv
std
pmulhuw
mov
and
insl
fisttps
dec
out
outsl
idivb
mov
dec
das
in
leave
mov
fsubr
or
ljmp
pop
ss
testl
popf
mov
movb
loopne
les
adc
negb
pop
xchg
fdivrs
xchg
aad
popf
sub
sbbb
add
pushf
outsl
push
adc
xchg
and
sarb
sub
xchg
jecxz
std
out
cli
sbb
jg
stos
cmp
popf
add
outsb
jb
mov
or
push
stos
testl
xor
pop
jne
mov
loope
cmpsl
adc
mov
or
ret
stos
popf
xor
dec
add
lahf
or
dec
cwtl
cltd
mov
fwait
sub
push
sti
jo
mov
or
in
adc
jns
or
and
jbe
insl
sub
cmpsb
lock
push
mov
xchg
rcr
int3
je
inc
lahf
or
icebp
popa
or
mov
repz
push
adc
dec
xchg
clc
sbb
outsl
add
cmp
cs
add
cmp
push
xchg
scas
sti
and
cmp
push
fildl
inc
scas
or
xchg
xchg
pop
pushf
fs
inc
cltd
rolb
mov
cmc
mov
cltd
fs
push
fnsave
jmp
cs
adc
cmpsb
push
fdiv
dec
jg
mov
ret
xor
aaa
scas
daa
inc
push
pop
pop
cvtps2pd
jmp
nop
loop
testl
xlat
inc
and
mov
mov
push
xchg
cltd
arpl
cmpsb
push
repz
push
add
cmpsl
pushw
rcr
imul
gs
leave
popa
xorl
cmp
lods
cmp
imul
mov
xchg
adc
and
or
shll
rol
cmpb
xchg
leave
les
ljmp
insl
mov
jg
leave
rclb
mov
pop
add
dec
mov
xor
jg
ds
jmp
flds
xchg
out
call
pop
imul
pop
fdivrl
shlb
add
jb
sbb
and
ret
xchg
push
ret
mov
fwait
daa
or
and
in
xchg
pop
xor
or
ds
ds
pop
cmp
xor
push
in
sahf
test
jne
ljmp
push
mov
cltd
mov
test
add
int
or
pop
or
add
shrl
add
inc
in
push
stos
loop
or
sub
sub
out
cwtl
xor
xor
or
mov
ficoms
inc
xor
jns
cld
inc
add
stos
fdivrp
xor
and
cmp
jge
bound
push
pushf
jb
loope
sbb
add
push
and
mov
push
es
and
pop
xor
dec
cmp
or
cmp
mov
sub
jo
or
in
les
stos
fnstcw
aas
das
mov
popf
mov
lea
pop
mov
loope
inc
out
imul
imul
mov
push
cltd
stos
jo
pop
pop
dec
adc
xlat
sbb
cmc
jb
inc
stc
ds
jae
mov
clc
incl
mov
addr16
call
fistl
sbb
mov
sbb
dec
repnz
rep
imul
mov
cmp
sarl
pop
mov
pop
mov
lret
addl
adc
psrlw
inc
cltd
or
pop
std
sbb
add
sub
outsb
jl
iret
jmp
or
repz
and
andl
jno
cld
jne
ja
imul
cmp
stos
cmp
jae
imul
leave
imul
xchg
push
int3
test
xchg
sub
sub
dec
sbb
dec
cmp
jb
inc
xor
test
sub
repz
lea
insl
ret
add
int
mov
jp
jbe
lahf
rol
mov
ss
add
fcmovnbe
cli
fwait
dec
jns
stc
js
xchg
jbe
cmp
push
scas
stos
or
aas
jo
push
jb
pop
scas
mov
and
jo
jmp
xor
dec
ss
xor
xchg
dec
shrb
mov
lods
scas
gs
pop
jp
loopne
in
test
sub
out
jg
repz
leave
or
pop
mov
dec
xchg
ret
xchg
dec
mov
mov
test
stos
cmp
mov
rcll
mov
or
pop
xchg
test
in
lods
ljmp
ret
adc
movsb
fmul
push
xchg
adc
stos
arpl
bound
call
cmc
xorl
or
call
xchg
mov
fisttps
hlt
cli
add
mov
xchg
inc
lret
icebp
fwait
sarl
test
loop
adc
and
call
pop
mov
cmp
fsubrl
pop
xchg
jl
int
nop
push
fld
push
or
imull
insb
test
je
movsl
adc
jnp
xor
stc
push
loopne
das
cltd
in
dec
in
jnp
jnp
sbb
push
mov
rcrb
sbb
sub
sahf
sbb
hlt
dec
leave
loope
jl
scas
into
jmp
mov
dec
data16
les
add
push
in
sbb
ret
push
cmp
xor
cmp
std
fdivl
aaa
xchg
sbb
xor
add
iret
in
in
mov
xor
sahf
jnp
adc
mov
xor
mov
movsb
xchg
inc
xlat
jb
repnz
sbb
mov
push
xorl
fs
adc
xchg
pop
cvtpi2ps
mov
aad
push
push
movsb
test
cli
ss
cmp
fsts
pop
xlat
adcl
mov
outsb
inc
or
pop
and
add
scas
filds
jne
xor
pop
outsb
xchg
inc
lds
dec
mov
addr16
popa
rcll
shrl
das
dec
dec
out
sub
inc
fisubl
sti
push
push
pop
in
icebp
and
mov
dec
mov
lret
xor
cmp
popa
sti
fidivrs
in
cmpl
push
lret
xchg
mov
icebp
jle
sahf
xchg
scas
xor
cwtl
rcll
out
aaa
lcall
xchg
lret
jno
fucom
les
outsl
push
xor
cmpsl
cmp
dec
cmc
mov
js
push
mov
fadds
faddl
pop
push
leave
mov
sub
pop
repz
push
addb
jnp
mov
insl
xchg
push
test
lahf
scas
call
pop
scas
inc
paddusw
call
jbe
arpl
adc
pop
outsl
bound
sbb
inc
test
pushf
dec
shll
mov
pop
mov
cmpsb
dec
jb
inc
sbb
insl
mov
push
sti
shrb
inc
ror
aad
ret
je
add
ret
out
shl
rcll
sti
loop
and
xchg
in
stos
in
inc
cmp
js
sub
dec
std
or
cmp
rorl
mov
pop
icebp
push
or
lods
popa
je
test
enter
cmp
enter
xor
pop
sarl
jae
adc
sbb
out
xchg
loope
fld
popf
sub
and
test
or
int
adc
push
fstps
fwait
ret
icebp
cmp
jnp
idivl
es
push
outsb
imul
and
pop
add
dec
sub
and
and
push
gs
cmp
jne
test
mov
xlat
mull
push
mov
pop
sbb
pusha
sbb
mov
and
inc
push
mov
adc
scas
push
mov
pop
push
aaa
inc
cmp
cmc
int
shrl
cmp
or
pop
aam
push
in
push
outsl
inc
sub
ss
and
loopne
or
pop
fisttpll
lret
mov
pop
mov
pop
xchg
shl
in
sub
push
lea
and
mov
jmp
ret
sarl
fwait
jl
xchg
push
movsb
xchg
dec
mov
incl
cltd
dec
data16
les
mov
pop
jge
lods
mov
xchg
pop
rcrl
sub
fwait
push
pop
sahf
inc
pop
lods
dec
sbb
stos
bound
cmp
int3
insl
adc
push
push
dec
aad
jle
setge
push
clc
xor
jge
out
aaa
dec
xchg
sub
cld
mov
jecxz
mov
sbb
movsb
xor
xor
rorb
sub
mov
ds
insl
daa
fstl
cmp
adc
jbe
subl
jb
shll
xlat
mov
dec
or
clc
movsl
jns
xor
roll
inc
or
mov
jp,pt
inc
scas
add
aas
push
mov
int
xor
push
sbb
lods
aad
dec
pop
call
and
mov
gs
leave
mov
mov
mov
add
aam
mov
mov
divl
fs
jge
shll
dec
daa
pop
push
mov
cmp
imull
push
ficompl
cltd
stos
add
mov
pusha
pop
test
fidivrs
mov
mov
push
fdivrs
inc
xor
lods
outsb
in
out
pusha
imul
test
adc
sbb
sarb
cs
shl
mov
stc
ds
dec
push
jmp
or
or
cmp
xchg
clc
pushw
mov
test
jmp
rclb
movsl
xor
push
push
xchg
int3
or
je
add
sub
or
pop
dec
test
outsl
dec
add
inc
in
fists
sub
xor
mov
mov
loope
stos
pop
faddp
adc
test
notb
lock
or
sbb
ja
enter
mov
sbb
sub
push
mov
inc
mov
sub
jmp
mov
mov
jno
add
mov
sub
sub
fadds
mov
test
fidivrs
xchg
cmp
push
xchg
iret
in
test
clc
lods
ja
fstps
and
testb
and
inc
adc
cmpsb
cmp
inc
int
arpl
push
clc
adc
fcoms
jp
negb
mov
es
clc
into
adc
into
jmp
outsl
mov
pop
cmp
jno
xchg
sub
push
cli
jl
jno
sub
push
xor
sbb
loop
inc
loop
push
xchg
mov
push
xlat
mov
lods
sub
insb
jo
or
adc
test
je
scas
in
mov
idivb
mov
andl
lahf
ret
sub
fmul
pop
pop
out
xchg
or
mov
loopne
xchg
loope
push
pop
test
and
je
cmpsb
and
test
cmp
lcall
cld
out
dec
jp
ret
push
add
xor
push
xor
js
orb
fs
and
into
sbb
sbb
shrb
outsl
and
jo
out
mov
mov
popa
daa
push
jp
jg
inc
sub
push
inc
dec
shr
imul
fldcw
dec
mov
mov
fisttps
xchg
notl
pop
roll
hlt
imul
aad
push
adc
push
xchg
js
mov
add
in
insl
sbb
scas
addr16
dec
cs
pop
cmp
xchg
divl
pop
cli
pop
inc
call
push
pop
js
stos
inc
jno
pop
bound
addl
negl
ficoml
das
mov
sbbb
lds
fwait
push
or
in
fldt
mov
push
jge
cs
aaa
shrl
call
fildl
add
scas
mov
in
hlt
das
pop
jecxz
ja
mov
movsb
rcrl
movd
sub
xchg
fidivl
jb
push
and
mov
ret
mov
iret
fs
imul
mov
es
out
jl
sbb
pop
inc
sub
xor
in
jmp
stos
in
scas
add
add
xor
icebp
out
test
jns
mov
xchg
pushf
pushf
stc
add
pop
mov
dec
pop
fisttpl
jmp
lods
in
or
or
add
lea
jo
cld
sbb
or
mov
outsl
or
push
sub
jmp
adc
jo
imul
lock
jle
dec
xchg
dec
mov
shr
push
mov
mov
dec
ljmp
sbb
aad
sti
mov
pop
dec
cld
out
push
popf
xor
imul
sbbb
jo
jmp
jecxz
add
cmc
sub
rcrb
and
or
mov
into
sub
dec
mov
push
ds
sbb
dec
fwait
pop
xlat
fstpl
hlt
or
outsb
inc
imul
jmp
enter
jbe
test
push
cmpsb
add
jo
leave
sbb
and
and
pusha
cmpsl
mov
and
mov
das
cmp
roll
fld
xor
sub
push
jle
je
filds
sti
add
jmp
repnz
sub
dec
sahf
dec
out
imul
and
aad
pop
out
es
xor
cmp
ljmp
push
das
jg
xchg
fcoms
stc
jbe
ss
icebp
sbb
xchg
fists
insl
mov
pop
scas
pop
mov
mov
pop
lcall
lock
mov
adc
lcall
sbb
mov
shll
dec
cltd
jno
out
fiaddl
arpl
xor
movsb
aad
iret
fidivl
add
sub
jmp
cltd
insb
sbb
pop
enter
inc
into
ret
pop
icebp
lea
lock
lds
ret
mov
test
imul
dec
push
jecxz
pop
divb
jo
int
adc
aas
ss
adc
pop
inc
mov
aad
jnp
cmp
aas
mov
call
mov
jl
outsl
adcb
adcl
loope
mov
or
sub
xchg
fwait
lods
mov
sti
fimull
lock
fsqrt
decb
and
or
stos
bound
mov
test
sti
push
mov
mov
adcl
stos
jo
push
aad
inc
xor
popf
fsubr
mov
inc
subb
push
cmp
out
mov
std
std
lds
mov
aas
xchg
cmc
jecxz
and
enter
jne
iret
aaa
push
bound
sub
sbb
lock
pop
fists
xlat
int3
mov
jae
out
insb
mov
cmp
sbb
push
and
jno
jb
shll
insb
cld
push
mov
fists
rorl
rcll
aad
daa
clc
adc
pop
add
aas
mov
or
sbb
xchg
mov
or
cmc
sub
mov
pop
push
bound
push
xchg
inc
xchg
fimuls
mov
xlat
inc
xchg
in
push
outsl
pusha
push
loope
negb
sbb
push
popa
cmc
aad
fmull
xor
mov
mov
aam
dec
push
mov
push
inc
xchg
mov
mov
mov
lahf
outsl
sbb
push
fimull
push
imul
jo
insl
cwtl
std
and
pop
call
pop
inc
mov
inc
mov
dec
sub
sahf
aad
stc
js
xchg
dec
and
das
out
shll
dec
mov
ss
popf
in
arpl
les
dec
push
outsb
cld
sarl
mov
push
mov
cmc
clc
aaa
ja
mov
mov
lcall
jle
pop
inc
je
divl
aad
out
sub
pop
xlat
sbb
sub
lods
push
enter
test
movsl
daa
dec
lds
imulb
jb
daa
movsb
inc
push
insb
or
jg
into
pop
fadds
xchg
and
pop
ds
rcrb
mov
pop
jbe
lret
nop
je
sub
push
mov
push
fs
jecxz
cmp
cwtl
cmp
and
push
dec
scas
daa
aaa
hlt
adc
push
mov
out
push
push
outsl
jnp
inc
jmp
std
mov
mov
dec
dec
out
les
sub
ffreep
aas
daa
jecxz
stos
pop
lock
sbb
cwtl
outsl
fisubl
mov
bound
imul
sub
or
out
movl
push
pop
add
push
test
std
xchg
push
mov
sub
dec
push
cmc
lret
inc
mov
test
mov
sub
or
sbb
imul
pop
pop
xlat
sub
adc
xor
enter
mov
les
fimull
xchg
mov
bound
or
add
rcl
fisttps
push
pushf
movsb
adc
cmp
rcr
mov
cmpsb
mov
xchg
push
out
imul
push
push
inc
icebp
or
and
mov
loopne
inc
xor
add
sbbb
add
and
push
jno
pop
call
aad
sahf
cmpsl
insl
mov
cmp
fsubrl
jmp
test
pop
mov
add
pushf
aad
cmc
mov
iret
inc
xchg
mov
lds
inc
or
cltd
loop
push
out
adc
xor
xor
jmp
mov
mull
adcb
shrl
pop
loopne
ficoml
push
movsb
jb
sbb
and
pop
adc
sbb
jae
xchg
into
cmp
sub
inc
mov
jae
repnz
leave
xchg
xchg
or
mov
cmp
dec
lds
sub
fs
xor
data16
push
xchg
outsl
inc
leave
xorb
into
loope
movsb
leave
in
scas
fidivs
mov
fcoml
sbbb
inc
outsl
notb
adc
arpl
inc
or
push
out
pop
sub
nop
xchg
out
dec
xorb
cmp
jmp
aam
into
lea
pop
in
mov
inc
adc
lret
repnz
sbb
inc
and
sub
mov
bound
lcall
cmp
push
out
jmp
push
inc
adc
insw
shlb
inc
lret
out
dec
rcrb
sbb
jae
adc
rorb
movhps
iret
lahf
jnp
cld
adc
movsb
mov
adc
jp
inc
arpl
xor
cli
stos
mov
andb
mov
mov
xchg
sbb
imul
adc
leave
mov
and
stc
add
aam
push
pop
push
dec
xchg
mov
xchg
push
pop
add
addr16
lock
and
call
cmp
xchg
test
movsb
inc
int
fcompl
pop
cmpsb
mov
mov
mov
rclb
or
cmc
mov
int3
sbb
mov
inc
ret
cmp
mov
scas
xchg
inc
and
adcb
or
cmpsl
repnz
and
cmp
adc
out
push
push
jae
jno
movsb
jb
xchg
fldl
leave
orb
inc
mov
hlt
repz
ja,pt
adc
sbb
sahf
xor
inc
arpl
lcall
repz
jl
mov
lock
or
sbb
adc
pusha
popf
test
pop
sub
and
sub
imul
and
xchg
std
fcompp
mov
inc
sub
insl
push
imul
popa
lret
cld
sbb
dec
cmp
pushf
cmp
xchg
bound
hlt
bound
test
aam
adc
mov
stos
dec
mov
push
aad
mov
mov
add
in
jae
inc
mov
sbb
daa
mov
xchg
add
pop
lea
pop
xchg
lret
mov
adc
aad
aad
shll
xchg
das
push
xchg
test
cmpsb
and
xchg
xor
jmp
jno
idiv
jb
stos
pop
sahf
jl
fnstenv
adc
es
dec
inc
xor
inc
out
push
add
add
aam
out
xor
punpckldq
xchg
movsb
idivl
jp
fsubs
mov
jp
pop
andl
jecxz
dec
cmp
leave
mov
addr16
jae
jl
out
inc
test
jo
ds
mov
fs
mov
pop
nop
imul
adc
hlt
repz
xchg
adc
inc
xor
add
mulb
lods
push
mov
daa
jg
adc
xor
stos
jp
adc
adc
mov
add
movsb
cmpsb
mov
decl
ret
idiv
xchg
jno
jecxz
ds
push
mov
sbb
sbb
mov
orb
dec
insb
sbb
mov
mov
ror
xchg
add
pop
mov
inc
insb
pop
icebp
test
fnsave
aaa
cwtl
add
fisubrs
jmp
sahf
shlb
das
das
jmp
pop
pop
or
sbb
push
cmpsb
fwait
cmp
pop
test
xchg
pushf
aaa
addl
cli
xchg
loop
mov
call
sbbb
cmp
xchg
test
or
mov
xor
and
call
mov
pop
gs
lock
nop
movsb
mov
sti
insb
push
and
scas
movsl
iret
fstpt
push
pop
xor
cmp
repnz
sub
popa
push
int
ret
fs
mov
loope
sbb
inc
dec
jle
cmp
sbb
fsts
adcl
push
idivl
or
lods
mov
mov
shlb
aam
in
push
pop
out
shll
dec
lods
cmpsl
and
fldl
hlt
jecxz
std
push
jb
ljmp
xor
les
cmp
addr16
addr16
sub
mov
fildll
adc
hlt
imul
xor
out
push
scas
and
cmp
jge
and
mov
xor
jp
xchg
inc
pushf
andb
pop
repnz
bound
rclb
xchg
aaa
jmp
loope
push
adc
jne
mov
or
mov
mov
stc
test
aam
and
mov
cmpsl
test
hlt
push
lods
lahf
sbb
adc
jbe
jge
cmc
ss
es
lret
repnz
or
dec
or
lock
push
mov
gs
pop
fwait
cmp
push
inc
add
fnsave
jl
jb
xchg
aad
rcl
outsb
repz
jne
pop
and
cmpsb
ret
sbb
inc
mov
add
xchg
xor
int
fneni(8087
sbb
xchg
mov
inc
xchg
sub
dec
pop
push
pop
out
lea
lea
inc
into
addr16
lods
mov
mov
pop
fstps
fwait
sub
flds
mov
or
ficompl
shll
dec
push
push
mov
cs
idivl
pop
fwait
lea
mov
and
mov
xor
xchg
adc
icebp
and
push
stos
dec
adc
and
mov
jo
not
fucomip
push
imul
fs
pop
and
je
pop
repnz
les
enter
rol
idiv
xor
pop
cli
mov
mov
jg
or
mov
shll
aas
mov
sub
les
es
cmp
jmp
fisubrl
inc
neg
push
mov
mov
xchg
lock
iret
cltd
lahf
sbb
enter
pop
jae
xchg
in
cmp
daa
les
xchg
mov
out
xlat
or
in
bswap
loop
push
xor
or
mov
add
jle
les
inc
jb
movsl
test
pop
jp
push
push
xchg
mov
test
xchg
sbb
fwait
lret
dec
mov
ret
lock
sarb
fidivrs
popf
or
jno
or
rclb
es
mov
inc
cmp
rorb
jo
xor
jbe
stc
nop
and
cmc
test
imul
and
pop
dec
mov
mov
pop
rcrb
leave
lods
outsb
lahf
ffreep
inc
push
mov
insb
mov
nop
daa
mov
addl
cmp
lret
jmp
out
std
mov
inc
addl
inc
or
lcall
cs
shll
aas
push
push
outsl
and
test
sti
nop
lret
call
lds
dec
inc
mov
ss
add
or
cld
in
test
nop
and
std
cmp
dec
lea
stos
pop
cli
push
fisubrl
mov
jbe
adc
and
movsl
xchg
push
scas
adc
push
sub
jbe
sub
notl
insl
out
jp
add
push
push
cmp
stos
mov
sub
jns
idiv
xor
mov
daa
sti
aas
fistl
mov
nop
scas
imul
add
ljmp
insb
mov
jae
lret
inc
repz
inc
lds
imul
test
sub
add
andl
fimull
sub
xchg
ret
xchg
xor
pusha
jnp
dec
sub
push
pop
and
gs
adc
cmpl
push
mov
stc
mov
jno
data16
lahf
xor
in
std
in
or
pop
ss
mov
or
fisttpl
bound
adc
adc
loop
popa
cmpb
mov
pop
mov
add
in
inc
imul
cmp
xchg
fcomp
sub
mov
mov
cmpsb
out
sub
inc
xchg
or
sarb
xchg
add
dec
jg
cmp
negb
mov
imull
cmpsb
cmpsl
and
dec
jmp
inc
arpl
mov
iret
addr16
mov
sbb
andb
ds
pusha
lret
or
cmp
repz
popa
movsl
lock
or
mov
mov
mov
mov
pop
into
outsl
jecxz
cltd
cmpsb
ret
hlt
cmp
or
sahf
fimuls
sub
push
sbb
and
aas
ret
push
fcomps
loope
out
in
aaa
lcall
xchg
pop
pop
push
into
mov
inc
addr16
andl
lahf
test
push
pop
sarl
sbb
mov
adc
add
jmp
xchg
xchg
sbb
in
xlat
aam
or
xor
rclb
out
inc
adcl
pop
xchg
fimuls
jp
inc
mov
rclb
or
mov
cltd
mov
not
in
sbb
dec
push
sub
lds
and
imul
enter
rolb
xor
fs
sahf
inc
fcomps
mov
fidivs
cmp
or
andl
mov
popf
cld
mov
dec
fdivrs
call
icebp
add
mov
mov
pop
adc
ljmp
leave
adc
pop
test
mov
jno
fwait
or
push
mov
nop
sub
clc
mov
enter
sub
add
jns
lret
or
push
fstps
movsl
je
enter
jmp
dec
cmp
cmp
lock
je
xlat
rol
pop
xchg
dec
mov
mov
in
in
mov
ds
into
lret
in
aam
out
xchg
sti
inc
in
out
sbb
xchg
xor
aam
pop
popf
mov
cs
daa
adc
imul
int
pop
mov
out
sti
push
push
clc
in
sbb
fdivs
mov
sub
loope
cmp
lock
lock
fwait
jne
inc
jae
inc
orl
arpl
mov
mov
scas
and
pop
mov
dec
pop
cmp
jl
enter
xchg
lea
ficomps
out
sti
or
sub
xor
xchg
outsb
stc
iret
frndint
stos
adc
popa
lcall
pushf
jne
mov
movsl
imul
mov
sbb
adc
sub
sar
mov
xchg
adc
enter
lods
pop
sbb
es
pushf
cmpsb
dec
and
and
sub
adcl
fdivp
fisubs
jge
test
aad
xor
cmp
stc
mov
dec
mov
mov
rolb
aam
daa
add
ljmp
lahf
arpl
pop
mov
jae
pop
mov
cmp
fadd
add
icebp
lea
mov
mov
adc
mov
adc
dec
out
pushf
sub
nop
shlb
js
in
pop
jecxz
xor
or
or
js
or
inc
ret
push
leave
mov
push
scas
aas
sub
data16
xor
cmp
or
lret
lods
outsb
and
pop
jno
and
int
cmp
das
xor
addr16
jp
int3
sbb
mov
add
pop
shll
lret
cmp
mov
hlt
mov
xor
dec
out
push
das
nop
mov
or
ljmp
in
cmp
xor
repz
ss
adc
out
inc
sbb
lcall
imull
dec
icebp
aaa
lcall
xor
stos
das
mov
push
sbb
cltd
cmp
ljmp
cmpsb
jbe
decb
sub
pushf
sub
add
aas
jbe
fcmovnu
add
ret
aam
xor
mov
mov
ljmpw
out
jge
mov
xor
jo
pop
dec
pop
mov
cmpsl
push
mov
mov
sbb
into
lods
push
mov
push
icebp
add
inc
mov
into
imul
lret
or
sub
mov
in
sub
hlt
mov
sbb
sub
xlat
std
scas
sarb
sub
imul
pop
cwtl
mov
jb
scas
in
addb
cmp
aad
cs
push
sub
mov
dec
mov
sahf
mov
out
push
lcall
pop
imul
pop
add
into
addr16
pop
movsl
rclb
push
and
cwtl
dec
jno
rorl
scas
pop
mov
add
push
cwtl
js
jg
push
push
ja
cs
repnz
enter
aad
sti
xchg
popa
rep
fadd
test
sub
xchg
leave
mov
je
repz
add
testl
cmpsl
inc
das
pop
mov
sbb
sahf
mov
popf
dec
add
cmpb
sti
cmp
and
loop
dec
push
test
xchg
and
aas
lock
je
js
add
jne
xchg
enter
enter
fistpl
mov
push
sub
add
movsl
mov
movsb
sbb
out
xchg
cli
jbe
push
ret
rorb
mov
mov
push
dec
fs
in
jnp
pop
mov
pop
aad
adc
mov
popf
jno
dec
gs
jg
pop
xchg
repz
stc
call
mov
mov
pusha
push
test
add
cs
jle
int3
test
cmp
mov
imul
add
add
dec
data16
mov
jl
cmp
pop
lds
imul
test
sbb
pop
cld
rcrl
jge
and
int
cmp
mov
insb
shll
mov
insl
movb
mov
test
sub
xchg
adc
xchg
gs
pop
and
and
xor
add
das
cmp
dec
popa
mov
lcall
shlb
loop
sahf
xchg
xchg
lret
sub
inc
adc
jo
sti
stos
mov
movsb
or
sub
pop
jp
into
outsb
jns
xchg
js
popa
inc
pop
mov
movsb
jns
mov
or
add
adc
xor
sub
and
adc
hlt
jnp
jg
mov
pop
pop
mov
mov
leave
enter
jns,pn
sbb
push
jbe
push
or
sub
jecxz
and
xchg
and
sbbl
sbb
add
out
imul
mov
stc
mov
cli
ss
push
repz
dec
add
mov
stos
sub
sbb
imul
leave
xor
lods
xchg
cmp
and
stc
mov
and
ret
dec
loope
push
dec
mov
out
cmc
sub
test
or
xor
test
jbe,pt
insl
mov
popa
pop
xchg
pop
lods
cmc
xor
js
sahf
in
gs
pop
dec
push
sahf
je
or
push
adc
inc
scas
into
outsl
adc
cmp
lods
cmc
xor
push
mov
movsb
scas
dec
hlt
out
adc
orb
sti
sub
and
ljmp
xchg
sub
jg
jmp
mov
fnsave
cmp
sbb
lahf
out
repz
jle
stos
sub
sbb
ja
push
mov
cmp
aas
test
loopne
sysenter
in
sbbb
or
lcall
nop
js
mov
jge
cmpsl
xor
ficomps
xchg
adc
xor
jae
stc
cmp
sub
lods
jmp
and
or
cmc
in
fistl
scas
pop
scas
sub
cld
outsl
pop
sbb
jge
add
pushl
jno
lahf
xor
lcall
xchg
or
fs
dec
mov
test
pushf
push
push
stos
pop
aam
add
mov
push
fistpl
jnp,pt
pop
or
push
or
bound
vpcmpeqw
xchg
cmp
movsl
add
jl
and
push
adc
xorb
repnz
xchg
out
push
fistpll
lret
push
or
cmp
lods
stos
fistl
shll
andl
mov
sbb
hlt
arpl
stc
es
fistps
push
push
scas
in
push
fldenv
jmp
mov
xor
inc
aad
outsb
sbb
std
pop
pop
fwait
xor
out
in
and
push
pusha
jmp
push
fcmovu
jge
stc
sbb
mov
fldcw
hlt
sbb
mov
mov
cld
mov
xor
or
ljmp
xor
ret
out
dec
cmp
jle
into
scas
idivl
sub
jle
pop
dec
inc
and
and
push
das
lret
minps
and
inc
jl
daa
pop
lods
mov
inc
mov
cmp
sub
adcl
mov
xor
adc
js
pop
jo
pop
popf
jl
fldl
sbb
xchg
mov
int3
xchg
dec
push
xor
cmp
ja
icebp
mov
addl
fstpt
mov
daa
dec
push
jae
mov
mov
addb
jl
pop
lret
pop
loopne
or
lret
cs
push
inc
mov
xor
cmc
cmp
inc
inc
loopne
test
adc
sub
inc
xor
and
rol
jnp
xor
push
mov
out
adc
daa
pop
fcmove
ljmp
jp
cmp
inc
fmull
rolb
bound
mov
clc
out
idivl
xor
jae
int
xor
dec
pop
mov
insb
adc
fcomps
clc
dec
pop
cmp
cli
in
jge
or
sub
xor
jmp
daa
dec
mov
dec
cld
mov
push
push
cmp
mov
pop
pop
cmp
cmpsl
inc
and
in
and
sbb
ficoml
jno
mov
shl
test
aas
sbb
cmpsb
loopne
mov
sub
ljmp
lret
cmpsl
mov
clc
ljmp
xchg
push
sbb
out
fcomps
lods
insb
stc
mov
js
rcrl
lods
outsl
mov
cmpl
in
pusha
pop
pop
imul
popf
divl
stc
stc
mov
sub
sub
xlat
adc
xor
cmp
inc
pushf
xor
xor
jmp
mov
movsb
lods
sub
xchg
out
gs
lods
cmp
jle
mov
aam
inc
out
addr16
add
shll
lock
dec
push
sbb
mov
outsl
aas
insl
lods
out
inc
adc
cld
jecxz
jo
sbb
pusha
xchg
mov
lock
mov
pushf
daa
push
push
push
or
add
cmpl
cltd
jle
push
xor
divl
mov
jle,pt
iret
popa
fstps
mov
lods
ds
sarb
rcll
stos
rclb
push
popa
hlt
inc
jns
dec
lds
mov
in
xchg
jp
in
inc
ja
mov
mov
jno
cmp
adc
jg
pop
scas
add
mov
mov
rclb
hlt
sbb
scas
xlat
xor
jo
sbb
jge
or
jo
and
rclb
loop
imul
add
dec
xor
xor
xor
or
mov
sbb
out
fldt
adc
jecxz
nop
jecxz
pop
sub
and
cmpb
cmpsb
ss
add
push
ret
mov
pop
rorl
mov
and
jo
mov
lahf
pusha
imul
mov
outsl
test
adc
mov
cmc
adc
lret
and
out
push
inc
sub
jle
jb
movsb
xor
jns
mov
mov
xchg
dec
xor
inc
sbb
cs
pop
pop
outsb
inc
or
pop
loope
mov
outsb
adc
stos
int
je
aas
xlat
dec
cmp
add
jno
sub
jnp
movsb
lahf
shl
inc
shll
fistpl
fcmovnbe
dec
daa
jbe
imul
addl
mov
push
dec
in
es
dec
jno
sbb
xor
pusha
gs
pop
sbb
stc
imul
sbb
test
push
ljmp
cwtl
xchg
cmp
in
mov
or
lahf
mov
sub
xor
xor
push
les
in
sub
inc
ret
xchg
sbb
mov
enter
push
lea
cmpsl
es
scas
out
aaa
subl
adc
test
lock
sbb
sbb
push
cmpsl
dec
ret
xchg
jge
fwait
out
jb
jp
bnd
jge
xchg
inc
and
iret
ret
adc
mov
sub
or
mov
and
xor
pop
into
sbb
xor
and
iret
ret
fmulp
add
jbe
xchg
mov
mov
add
pop
test
lret
pop
cmp
icebp
cmpsb
mov
cmpsb
cmp
ret
inc
nop
or
xor
fwait
jo
xchg
xor
inc
dec
shrl
pop
inc
pop
rcrl
lcall
push
lea
in
flds
cmp
mov
cli
xchg
or
inc
out
sub
jl
mov
inc
test
fsubs
jmp
cmpsl
mov
xlat
push
rclb
ret
adc
jp
jo
xor
mov
mov
icebp
inc
mov
loope
call
rclb
jnp
inc
jp
pop
push
mov
add
enter
pop
idiv
jbe
sub
add
dec
and
pop
outsb
cmpb
repnz
pop
mov
push
mov
mov
jns
pop
sub
out
sahf
inc
and
adc
cmp
adc
and
pop
cmp
imul
gs
fistpll
adc
das
roll
jnp
cmp
xchg
movsb
push
in
pop
xor
orl
jp
in
and
cli
lea
jnp
fs
arpl
jbe
pop
push
add
int3
ja
mov
push
xlat
mov
bound
fbstp
pop
xor
sbb
stos
in
xchg
movsb
in
mov
xchg
sbb
pop
jp
or
add
add
mov
je
xor
sbb
dec
cmpsl
std
ja
xlat
dec
mov
ljmp
int3
mov
fs
lcall
ljmp
fisubl
adc
pop
dec
xchg
sub
xchg
jecxz
push
xchg
pop
mov
sub
pop
fucomi
jae
sub
les
cmp
rclb
adc
xor
stos
xchg
stos
jbe
loope
sbb
pop
stos
fnstenv
sbb
mov
imul
dec
sbb
test
push
and
repz
jnp
sub
cmp
xchg
and
das
xor
mov
and
jp
fnsave
jbe
xchg
lods
shr
out
ljmp
icebp
dec
jae
inc
shrb
cmpsl
mov
mov
lods
es
fldt
cmp
jg
inc
js
dec
adc
pop
pop
push
and
inc
rclb
int3
daa
and
enter
dec
insl
xchg
mov
xchg
jb
xor
add
fld
into
das
sub
pusha
fcomip
mov
and
xchg
pop
push
movsb
adc
and
into
cli
xchg
mov
sbb
pop
cmc
pop
xchg
xchg
sub
or
pop
repz
cmp
iret
call
jge
cmp
lret
jle
ss
imul
les
clc
andb
mov
in
xchg
int3
sti
xor
xchg
xchg
movsl
jno
roll
push
dec
test
adc
jle
jecxz
jp
add
xor
mov
adc
sub
cwtl
inc
cmc
ror
xor
push
addr16
jnp
xor
mov
sbb
pop
jno
je
cli
jecxz
mov
cmp
or
jb
das
shll
xchg
fbld
inc
aad
repnz
aad
rcrb
jl
sbb
sbb
orl
xchg
jp
xor
mov
push
out
dec
lock
imul
insb
dec
orl
leave
movb
test
cwtl
in
pop
push
jge
loopne
jo
insl
clc
shl
and
and
sub
and
xchg
shl
nop
sbb
mov
push
xchg
std
cmp
inc
mov
jnp
insb
push
mov
and
stos
dec
addl
hlt
testl
mov
or
mov
mull
xor
and
int3
cld
divl
dec
or
dec
stos
mov
push
push
xor
cli
pop
loope
pushf
mov
pop
mov
iret
ficoms
jns
cmp
fcoml
popa
pusha
ss
mov
shr
scas
bound
stos
push
arpl
sub
sbb
insl
outsl
fwait
lds
stos
sbb
mov
outsl
jl
sbb
test
fnstcw
mov
loope
dec
cwtl
or
insl
pop
xchg
cmp
cmp
mov
push
jne
pop
xor
loope
cmp
xchg
push
data16
sub
xchg
ljmp
jp
notl
das
inc
jl
daa
fidivrs
cmp
addr16
sub
out
dec
sub
cmp
gs
push
cmp
sub
inc
imul
inc
aam
pop
mov
out
idivl
sahf
cwtl
adc
enter
movsb
adc
imul
pop
hlt
sbb
cmpsb
xor
fimull
xchg
cmc
sar
jle
aas
cmp
repnz
push
xchg
or
lret
movl
lods
into
push
seto
inc
arpl
xor
hlt
pop
cs
jle
mov
mov
inc
jge
xchg
aaa
sub
out
mov
stc
hlt
aam
dec
xchg
ret
pop
and
sub
cmpsb
andl
shl
inc
push
sbb
mov
test
call
inc
and
movsb
ret
cmp
push
jl
pop
cmp
test
ljmp
fwait
mov
inc
shll
ds
popf
daa
ret
xor
jo
andb
data16
mov
push
mov
aam
adc
loope
icebp
outsl
inc
adc
dec
out
neg
fsub
js
inc
and
sub
mov
rorl
test
lods
aad
sub
adc
jp
outsb
iret
scas
cmp
push
shrl
mov
lcall
aam
std
jb
mov
std
mov
sub
jb
mov
inc
xchg
test
mov
adc
xchg
sbb
sahf
or
add
mov
cmpsl
fisubs
movsl
xor
mov
insb
jle
je
cmpsl
dec
mov
cmp
push
xchg
stos
fs
and
inc
aas
pusha
cmp
movsb
pushf
int
xchg
scas
jo
repnz
pop
adc
movsb
out
xchg
push
push
shl
push
sbb
pop
test
pop
int
push
pop
xchg
bound
xchg
add
mov
call
inc
dec
cmp
dec
lret
fldcw
push
push
mov
stc
fists
inc
mov
jbe
aam
adc
ds
lret
xchg
and
mov
add
and
rcrb
inc
add
mov
jbe
sbb
movsl
clc
addl
pushf
incl
fcmovbe
adc
fwait
in
stc
dec
dec
push
pop
inc
lret
lea
and
cmpsb
je
adc
aam
pop
xor
jns
dec
clc
test
xchg
push
lcall
es
and
out
cld
je
xchg
bound
sbb
lcall
push
lahf
leave
popf
jmp
mov
jle
mov
pop
fcompl
push
testl
fs
vfrczps
xchg
mov
or
pop
cmpsl
ljmp
sbb
loop
pop
and
cld
pop
dec
push
insb
in
icebp
cmp
out
pop
out
jp
mov
sub
adc
or
mov
lea
out
sbb
cmpsb
inc
jg
lea
mov
test
test
es
scas
clc
cmp
or
jmp
pop
bound
inc
lock
aas
fwait
xchg
mov
push
lcall
je
lret
jmp
mov
mov
outsl
stc
cmp
inc
pop
addr16
push
pop
enter
mov
loope
in
mul
xor
cs
push
sbb
hlt
cmp
cmpsb
push
sub
lahf
cmpsb
jnp
aam
cmp
movsb
xchg
repz
sbb
addr16
inc
mov
scas
mov
mov
aad
adc
gs
repnz
imul
jne
inc
into
mov
pushf
mov
jl
mov
fimuls
push
and
push
ret
sub
loope
mov
dec
rcr
jns
push
pop
inc
sub
sub
ret
dec
popa
xor
in
ds
lret
pushf
ret
jmp
je
nop
push
pop
mov
aad
xor
mov
imul
add
mov
jae
mov
out
bound
cmp
cwtl
sbb
and
mov
mov
push
or
and
xor
lret
imul
xor
or
push
mov
pop
fs
or
cld
add
sbb
mov
dec
mov
mov
imul
xchg
into
movsb
cmp
insl
add
mov
add
inc
dec
mov
in
adc
daa
xor
xor
neg
jb
cmc
ror
cmp
jmp
mov
filds
mov
cwtl
xchg
fbstp
push
xchg
jne
ja
aad
sub
rclb
loope
cmpsl
mov
sbb
inc
aad
inc
push
es
bound
packuswb
sub
sbbb
or
mov
jae
rcr
or
out
or
into
dec
jb
mov
push
xchg
mov
add
sbb
fmuls
xor
inc
icebp
and
mov
lea
mov
imul
cmp
lret
das
inc
lret
jbe
inc
sbb
jmp
les
shlb
sub
mov
jp
imul
mov
sub
mov
inc
or
adc
push
cmp
pop
xchg
xchg
test
int
cmc
sub
sub
hlt
xor
sbb
jmp
and
arpl
shrl
dec
jg
and
or
les
out
and
pop
pop
fadd
sti
xchg
pop
push
mov
jb
mov
adcb
enter
orb
data16
jg
loop
push
pop
cltd
daa
sbb
sbb
dec
stos
outsb
xchg
imul
lds
mov
mov
stc
ja
inc
inc
fildll
adc
xrelease
or
push
fbld
pop
jl
mov
fnstcw
mov
pop
inc
popf
pop
mov
xor
fstpt
sbb
xchg
add
mov
mov
ljmp
cmpsl
sbb
adc
mov
int3
sub
insb
into
sbb
jl
stc
outsl
mov
cmpb
sarb
call
fcomip
hlt
xor
push
dec
push
mov
jle
jg
in
mov
push
and
mov
sbb
xor
sbb
xchg
add
dec
daa
cmp
dec
aas
jb
cmp
push
lods
idivb
and
mov
out
sbb
push
inc
js
add
ss
pop
jnp
leave
xor
loopne
pop
loope
lret
adc
jge
xchg
cmp
std
xor
clc
ret
mov
dec
push
xlat
mov
sub
sub
out
pusha
repz
scas
popf
mov
xor
int
jo
cs
ror
in
and
jb
stos
inc
sub
inc
xchg
shlb
adc
pushf
rep
push
jae
ret
shlb
icebp
sub
loop
pop
xor
adc
push
push
sbbb
adc
leave
flds
xchg
imul
jge
mov
sbbl
mov
js
mov
fisubl
ljmp
add
loope
adc
es
mov
add
xlat
scas
int
aas
lahf
pop
inc
xchg
data16
or
add
rcrb
cli
xchg
xor
fisubs
dec
fisubl
add
out
fchs
stc
js
gs
sbbl
jl
pop
sub
mov
pop
jne
in
jno
push
sahf
jno
adc
scas
loop
movsl
mov
cmp
sbb
daa
push
push
xlat
xchg
aaa
testb
fsubrs
out
pop
xchg
inc
mov
push
sub
cmp
cmp
jo
imul
into
movsb
mov
sbb
mov
fldl
inc
adc
lcall
mov
xchg
and
xor
lds
sarl
lea
subb
das
shll
dec
dec
pop
jb
or
lahf
dec
ja
xchg
repnz
xchg
outsl
imul
pushf
xchg
jb
xchg
push
jmp
adc
or
jne
jecxz
aad
inc
pop
pusha
lods
ds
cs
push
fnstenv
sbb
lret
lods
sbb
out
test
clc
or
jb
mov
inc
popa
cli
test
in
repz
lret
aam
stos
arpl
inc
andb
inc
sbb
mov
mov
cmp
into
mov
aam
cld
pushf
es
push
cli
dec
std
je
in
sbb
ja
push
movsl
pop
mov
pop
pop
xchg
sub
adc
mov
pop
sbb
into
ss
jno
rorb
jbe
mulb
add
std
stos
test
and
cld
cmpsl
mov
sahf
mov
es
cmp
cmp
lods
movsb
sub
out
aas
cmpsb
xor
cmpsl
inc
and
mov
arpl
sbb
pop
ror
inc
js
xchg
out
xchg
pop
or
xchg
leave
bound
cmp
jbe
cli
nop
arpl
mov
int
lahf
mov
fstpl
loopne
inc
xor
mov
add
ret
adc
mov
rcrl
cltd
cmpsb
dec
fmull
jno
mov
fdivs
and
mov
stos
add
ret
jo
dec
adc
mov
imul
divb
or
fsub
xchg
push
push
test
jmp
and
ljmp
fnsave
movsb
push
jae
repnz
xchg
xor
in
ficoml
xor
push
sub
lods
jg
mulb
stos
xor
xor
ror
cmpl
cvttps2pi
dec
mov
add
dec
cmp
xor
mov
mov
and
sbb
cmp
dec
movsl
lcall
subb
rclb
repnz
push
push
or
xor
test
cld
mov
mov
daa
and
lret
sbb
fimull
lea
clc
adc
scas
testb
xor
mov
scas
jbe
mov
jns
adc
dec
mov
mov
lcall
dec
jge
icebp
pop
rolb
xchg
into
loope
icebp
and
mov
lods
sbb
or
xchg
xchg
mov
scas
out
in
sti
test
mov
loope
sahf
sbb
jl
or
stos
icebp
insl
push
mov
and
insb
jns
lock
push
pop
pmulhw
std
sub
out
xchg
push
out
rcrl
fistps
sbb
dec
fisubl
mov
enter
lods
mov
leave
adc
sahf
pop
lret
jle
imul
popf
ret
setns
mov
sub
and
sub
sub
xchg
xor
and
in
out
and
and
push
sub
fiaddl
sub
mov
in
xor
aam
or
adc
add
xchg
ljmp
mov
imul
jge
xchg
cltd
push
and
insl
dec
les
jbe
sub
clc
es
fildll
popf
aam
loop
out
mov
adc
in
es
mov
adc
js
cmp
dec
mov
movsl
pushf
aaa
xor
orb
call
fcomp
into
popa
fldl
pop
inc
push
imul
sar
push
rorb
fiaddl
and
mov
outsl
push
fidivs
cmp
adc
in
aaa
xchg
xlat
and
les
sub
jg
mov
push
loope
imul
fdiv
shrb
cmpsb
stc
popa
add
rorl
cmpsl
adc
pop
add
dec
ja
stc
dec
jo
in
pop
imull
pop
sub
imul
dec
sbb
cmp
jno
jmp
push
test
stos
cmc
cmpsb
mov
mov
lret
inc
es
sarb
adc
loop
arpl
jo
pop
pusha
imul
push
sub
or
shrl
xchg
lret
in
mov
test
inc
je
in
shlb
lods
or
push
xor
jecxz
fldenv
xchg
scas
sub
jge
xor
stos
punpckhbw
or
inc
mov
adc
sub
jae
dec
cwtl
xchg
adc
lock
pop
lock
cmp
pop
and
adc
js
fldenv
dec
sahf
mov
scas
leave
add
pop
mull
adc
insb
xchg
push
adc
sub
adc
sti
int
pop
in
daa
jl
xor
aam
inc
push
jne
into
dec
and
aas
and
cmp
bound
dec
and
push
jg
out
lret
mov
iret
out
push
aas
ret
and
shrb
or
loopne
leave
lret
loopne
sub
bnd
pop
mov
popa
iret
and
or
aaa
mov
aas
cmp
xor
mov
int3
mov
dec
xchg
and
das
or
add
fnstenv
ja
loopne
sub
enter
je
repz
lret
add
xor
mov
inc
xchg
and
sub
sbb
sti
pushf
inc
xchg
aas
xchg
adc
cs
clc
pop
in
call
lods
cmp
dec
in
dec
and
or
xchg
jb
push
adc
mov
and
pop
loop
vcvtsi2ss
pushf
xchg
cwtl
mov
movsb
call
adc
adc
lret
inc
cld
movsb
insl
rorb
test
mov
cld
inc
sti
icebp
or
ret
frstor
adc
out
mov
dec
mov
push
sub
and
lods
cs
fnsave
adc
std
bound
dec
cmpsl
fmull
dec
stos
and
scas
mov
dec
mov
stos
adcb
jbe
jge
aaa
cld
out
cmpsl
dec
sbb
dec
push
test
dec
lcall
mov
pop
aam
shll
sbb
mov
lahf
sub
dec
pushf
nop
insl
cmpsb
rcl
mov
or
bound
adc
pop
ret
jnp
inc
insb
dec
ds
cltd
pop
std
cwtl
es
into
push
cmpb
xchg
stos
sahf
out
sbb
inc
and
aas
mov
xor
sub
jne
cmp
les
jae
mov
inc
or
mov
dec
add
add
ja
das
insb
jmp
in
push
rclb
jae
pushf
outsb
mov
mov
popf
adc
xor
shll
mov
test
pop
add
pusha
inc
sbb
rorl
stc
xchg
ds
sahf
mov
cmovle
mov
sbb
loope
inc
or
add
das
xchg
popa
lahf
sub
jb
mov
lds
mov
lret
push
loop
out
int3
jbe
addr16
out
mov
mov
cmp
enter
es
pop
int
push
sbb
aad
cld
inc
test
mov
jecxz
les
push
dec
leave
mov
prefetchw
or
xchg
xor
js
or
lret
push
dec
push
cmp
in
pusha
int3
movsb
inc
push
dec
cmp
rcl
out
or
cmp
pop
ret
incb
popa
jecxz
xor
sbb
mov
pop
les
in
popa
imul
push
push
sub
sbb
scas
mov
push
mov
int
shl
xchg
sub
nop
jns
cwtl
pop
iret
dec
stc
xchg
push
dec
xchg
lea
insb
push
push
mov
mov
fistps
mov
pop
mov
mov
sbb
mov
jmp
in
dec
ror
sub
jge
movsl
jbe
add
out
sahf
int
or
rorb
jmp
arpl
pop
xorb
adc
adc
mov
sub
cmp
lock
mov
sbb
hlt
aaa
cltd
and
mov
or
xor
ja
mov
arpl
mov
mov
add
lret
dec
ficomps
ja
fs
mov
cmc
movsl
jl
or
adc
adc
push
in
dec
imul
jns
roll
mov
arpl
cmp
ficoms
and
xchg
fistl
lret
enter
pop
in
fsubl
fnstsw
pop
xor
mov
movb
ds
lods
xlat
jle
popf
rorl
adc
fstpl
cmpb
repnz
push
std
mov
and
jge
stos
xchg
outsl
outsl
in
jne
push
jmp
push
arpl
fwait
cld
push
xchg
sub
jnp
imul
mov
mov
movsb
adcl
jno
or
mov
fdiv
cmp
movsb
inc
add
push
push
insb
stos
in
xchg
push
mov
jno
ret
sbb
pop
push
outsl
push
imul
enter
cmc
pop
sub
idivb
stos
or
arpl
mulb
sbb
mov
inc
jmp
inc
pushf
pop
or
cmp
mov
jl
sub
jg,pt
mov
aas
cmp
mov
andb
pop
xor
test
push
lahf
jae
push
popa
gs
pop
inc
jae
aas
outsl
punpcklbw
cltd
sbb
leave
cltd
movsb
movsb
aaa
push
xchg
sub
adc
cmp
xchg
cmp
jne
cmpsb
dec
mov
dec
les
inc
fildll
pusha
and
orb
adc
test
fdivrl
cmpsl
divb
pop
loopne
mov
push
int3
negb
lret
mov
outsl
sbb
outsb
dec
cmp
and
clc
ja
pusha
xlat
add
mov
imul
ficompl
pop
sub
pop
dec
xchg
dec
movsl
cmp
dec
shrb
pushf
cmpsl
jg
mov
movsl
mov
aas
push
icebp
dec
lret
daa
jbe
lahf
jns
or
mov
icebp
adc
or
int
cmp
cmp
mov
jmp
jno
cmp
xchg
pop
clc
push
pop
out
xor
cmpsb
into
fiadds
and
push
inc
loop
cmp
xlat
sbb
call
cld
inc
ret
adc
js
daa
daa
mov
mov
push
adc
or
cmp
sbbl
aad
adc
add
mov
fsincos
lret
scas
mov
cld
call
pop
loopne
adc
pop
jno
adc
sbb
or
cmp
popf
ss
sahf
pushf
dec
sbb
dec
pop
dec
cmpsb
movsl
jno
stos
cmc
mov
inc
pop
fwait
stc
mov
lea
xchg
shlb
jns
pusha
pop
in
movsl
das
in
jno
popa
or
pusha
mov
lods
jl
les
and
sub
shll
ds
fadds
addb
aaa
clc
cmc
scas
xchg
dec
call
out
mov
jecxz
popf
sarb
iret
inc
inc
mov
mov
call
inc
inc
cld
ljmp
add
dec
rcrb
push
jecxz
bound
sbb
or
enter
dec
mov
xchg
inc
mov
xchg
mov
arpl
fcomps
cmp
ds
daa
jns
in
xor
in
xor
jle
lods
sub
add
jge
jb
sub
xorb
mov
bound
or
imulb
push
roll
sub
arpl
mov
js
subl
or
in
nop
test
mov
stos
cmp
lds
rorl
mov
arpl
sub
outsl
push
add
pop
popa
pop
mov
and
mov
xchg
jnp
loop
or
in
imul
das
xor
add
inc
movsb
lods
or
mov
pop
and
add
rcrl
js
mov
int3
cli
jecxz
insb
pop
mov
push
cmp
mov
sbb
sub
fisubs
scas
lods
or
inc
mov
es
inc
orl
ret
lret
jmp
movsb
cmp
cmp
xchg
pop
lds
hlt
dec
and
sbb
fs
dec
xchg
dec
push
push
pop
aaa
std
sub
cmc
leave
xorb
sahf
scas
divb
stc
inc
mull
pushf
pushf
sub
adc
mov
jle
add
mov
fwait
add
stos
repz
or
scas
jg
ret
pop
or
mov
aad
popf
xchg
xchg
nop
loope
adc
push
shrb
loop
lahf
iret
imul
sub
mov
push
rclb
mov
mov
push
ja
ds
cmc
mov
mov
fabs
or
out
scas
xor
in
pusha
or
rorl
mov
testl
pop
and
and
fs
mov
pop
push
in
cmp
push
into
lea
mov
mov
jnp
lret
inc
std
inc
aas
insl
fcoms
les
push
adc
mov
xor
aad
loop
sbb
shlb
adc
frstor
dec
xor
movsl
adc
or
push
out
cmp
lock
lret
lods
fprem1
outsl
xor
icebp
push
inc
cmp
scas
int
jo
sub
add
sub
inc
movsb
and
xor
push
enter
inc
arpl
sar
je
pop
mov
or
lea
pop
cmp
pushf
cld
out
out
mov
pushf
jmp
lock
sbb
aam
and
push
push
in
aaa
fcmovnbe
fstpl
mov
inc
sub
in
sub
ret
shrb
jmp
loope
push
xor
stc
lods
lcall
into
push
out
aas
sarl
push
aaa
add
movb
fnsetpm(287
dec
divl
out
xor
jb
shll
cmc
ja
mov
mov
jne
inc
movsb
mov
ja
mov
ja
aad
pop
imul
pop
xlat
lret
fnsave
dec
pop
push
jmp
movsb
in
dec
pop
dec
mov
mov
ds
mov
loope
jmp
xor
pop
mov
js
stos
push
xor
ljmp
ljmp
ss
mov
jg
pusha
adc
jmp
jmp
cmp
sti
sbb
mov
xchg
lret
test
mov
sbbl
in
push
cmp
push
nop
adcl
mov
repnz
loop
subb
dec
xchg
arpl
test
xchg
mov
test
testb
leave
push
sbb
mov
mov
add
rorb
push
jo
aaa
insl
jmp
and
and
push
outsl
negl
adc
sub
imul
xor
xor
adc
cwtl
movsl
hlt
aaa
mov
pop
leave
pop
pop
xchg
fbld
in
idiv
loope
xor
add
mov
pop
int3
mov
in
cmp
imul
mov
or
lods
lock
sub
mov
lea
push
or
int
jle
pop
sti
loop
mov
cli
adc
sbb
in
add
xor
pop
or
and
cld
adc
jle
and
rorb
out
scas
lahf
adc
jbe
inc
pusha
stos
aas
lea
adc
sti
sbb
insb
push
or
xchg
mov
aaa
push
jp
inc
or
call
inc
fiaddl
push
out
xor
xor
inc
push
stos
movsb
fcoms
mov
or
jmp
cmc
jb
mov
pop
sbb
pop
shlb
mov
std
mov
mov
jmp
jmp
jbe
stos
jo
jns
insl
push
inc
inc
sbb
push
add
or
ljmp
inc
cmp
sub
fsubrp
addr16
push
jno
fwait
into
add
sbb
outsl
sub
ja
push
inc
cmp
lock
cmp
outsb
jnp
push
imulb
orb
mov
aam
xor
mov
lcall
ljmp
lret
adc
popf
das
addr16
sbb
cmp
faddl
popf
outsb
mov
inc
push
nop
xor
movsl
or
mov
cmp
and
push
xor
fmull
xchg
mov
mov
xor
addr16
clc
cmp
into
pop
jle
test
test
inc
sbb
sbb
iret
jns
call
and
testl
cwtl
lods
pusha
rorl
or
shr
pop
leave
cmc
cmp
pop
rolb
mov
leave
jle
arpl
xorl
mov
adc
pop
push
stos
add
cmpsb
inc
jp
and
flds
and
push
push
jecxz
int
push
ds
dec
negl
sub
in
fnstenv
out
dec
ljmp
sahf
clc
xchg
sub
popa
pop
test
mov
push
pop
pop
push
je
mov
xor
pop
movsl
movl
add
rcll
jge
jno
mov
inc
lock
push
movl
or
fldenv
loop
inc
xchg
xchg
xchg
lcall
adc
pop
mov
out
shlb
out
cmp
popa
pop
push
xor
mov
push
pop
push
lods
mov
mov
hlt
mov
out
mov
loope,pt
dec
push
dec
pusha
popf
and
and
adc
andb
cmp
test
inc
push
add
adc
dec
lcall
testl
outsl
lods
or
or
aas
mov
ja
rclb
add
clc
stos
sti
dec
mov
icebp
cmp
cmp
loopne
into
aas
les
xor
insb
inc
loopne
sub
pop
cmpl
sahf
addb
loopne
adc
sahf
xchg
ret
loope
pop
dec
outsl
in
xor
lcall
jl
aam
ret
jns
pop
in
je
jmp
icebp
sbb
xor
aad
sub
xor
mov
daa
mov
fs
mov
int3
add
cmp
cmc
daa
lret
insl
xorb
sub
rcrl
jo
sub
iret
sub
lcall
cmc
call
js
adc
push
add
stc
fdivrs
jmp
jl
fcoml
or
dec
sbb
push
push
ds
sub
movsb
mov
jo
rorb
pop
aas
arpl
icebp
pop
pop
dec
addr16
push
pop
push
aam
shrb
mov
fnstenv
jno
stos
mov
and
jecxz
push
and
test
cmpsl
mov
mov
data16
jecxz
xor
adc
xchg
jge
mov
dec
cmpsb
insb
pop
push
mov
stos
in
xchg
sub
in
scas
mov
xor
adc
into
jmp
mov
imul
jbe
sti
rclb
pop
push
outsl
aad
popa
mov
lods
loope
mov
int3
xorl
jo
scas
pusha
pop
pop
dec
cmp
pop
mov
mov
fcomp
lret
dec
cld
or
dec
add
cmp
jmp
and
arpl
loope
shrb
imul
nop
jns
aas
xchg
addr16
cmp
cmp
jle
aad
imulb
ja
xchg
mov
adc
shlb
cmpb
push
in
xor
outsb
sbb
int
mov
push
shlb
pop
lea
ja
lds
cli
pop
cmc
jno
daa
enter
xchg
inc
imul
or
mov
mov
push
push
in
in
mov
into
jae
and
jo
test
and
hlt
mov
sahf
cmp
mov
les
outsl
cmp
mov
ljmp
fisubl
test
mov
inc
jbe
push
push
and
repz
add
inc
or
sbb
stos
out
push
dec
clc
mov
cmpl
jae
inc
mov
mov
xchg
iret
and
add
adc
lret
adc
in
sbb
inc
sbbl
ret
mov
add
and
pop
mov
out
push
dec
int
pushf
sbb
shlb
lahf
sub
sub
push
xchg
xchg
sub
lds
call
bnd
or
jmp
data16
ja
adc
jecxz
xchg
cmpsb
pop
scas
fmulp
in
sub
mov
jg
inc
mov
or
iret
push
mov
arpl
pop
mov
sub
mov
inc
push
int3
jbe
or
leave
rclb
mov
add
add
mov
cmp
push
data16
inc
inc
les
scas
add
lds
ja
lock
sub
lret
test
hlt
leave
dec
in
rcr
xor
push
jno
stc
adc
inc
insb
mov
pop
lcall
xlat
aad
mov
pop
test
mov
mov
sub
lret
into
aad
mov
mov
cmp
jmp
jae
xor
xchg
out
sbb
add
mov
sub
ljmp
xchg
ss
fistps
aas
mov
daa
mov
jp
loop
fiadds
test
push
lahf
inc
mov
lret
cli
and
or
cwtl
ss
sbb
aad
movsl
icebp
addr16
mov
push
cmp
mov
mov
mov
call
sbb
dec
add
dec
cmpsb
dec
test
data16
stc
mov
mov
sub
aam
fucomi
lret
popf
jae
xchg
insb
sahf
mov
cs
xchg
filds
inc
xlat
cmpb
negb
push
stc
adc
xchg
or
cs
mov
jecxz
dec
int
out
jl
add
push
stos
mov
jnp
adc
jne
test
xchg
inc
mov
test
stos
cmp
cmp
push
dec
mov
das
fwait
jo
test
add
mov
aas
cld
jns
dec
lret
aas
adc
or
xchg
add
repnz
leave
nop
push
cltd
mov
push
mov
movsb
fistpll
xchg
lret
jle
inc
dec
inc
and
dec
dec
jle
mov
mov
fdivrl
cmp
aaa
popa
shr
xchg
push
dec
jno
sub
mov
jae
or
testl
rcl
cltd
stos
stc
dec
loope
push
add
enter
repnz
fs
popf
bound
and
pop
cs
xchg
jnp
adc
jecxz
and
jmp
mov
subl
pop
fstps
push
pop
jo
jbe
mov
sub
or
mov
stos
push
pop
sub
pop
jg
shlb
cmc
xchg
sbb
pop
mov
sbb
jo
ljmp
mov
sub
lcall
test
xchg
call
mov
ja
in
sub
inc
enter
push
sub
out
push
xchg
aad
mov
pop
mov
fisubs
imul
push
cld
jle
xor
cmp
loop
int3
decl
sbbl
adc
inc
repnz
jae
fcompl
in
subl
mov
or
or
jnp
ret
pop
enter
shl
shll
cld
sbb
int
or
and
dec
rcr
sub
stc
or
xchg
or
lcall
dec
mov
cmpb
jno
and
out
out
pop
aam
ret
daa
mov
cltd
mov
into
dec
jg
xchg
inc
sti
xchg
xchg
je
sub
sub
cmp
loopne
adc
dec
scas
mov
xor
lahf
push
add
adc
nop
aas
sub
push
sbb
loopne
rorl
jmp
sarb
push
xchg
pop
adc
jecxz
nop
jle
xchg
cmc
adc
inc
idivl
pop
fcompl
mov
not
jmp
cmp
das
sbb
lahf
lahf
loopne
sub
mov
int3
push
inc
add
movsl
or
pop
add
or
decb
int
push
push
ficoml
andb
sub
jbe
mov
and
jecxz
cltd
aad
pop
or
stos
int
enter
push
jle
sub
sub
std
dec
pop
daa
repz
or
push
cli
dec
pop
jae
adc
cmp
pop
movsl
idiv
jmp
fcomps
ds
outsb
inc
xor
jle
xchg
sub
enter
mov
inc
mov
sbbl
pop
or
ret
sub
push
repnz
lcall
adc
xchg
push
das
ja
xor
or
sub
scas
fucom
sti
xchg
mov
push
les
test
push
ja,pt
sub
mov
ret
test
fisttpll
js
mov
loope
jbe
rolb
into
xchg
dec
movsb
jae
inc
js
jecxz
adc
pop
push
call
stos
bsf
mov
outsb
aaa
mov
dec
mov
jmp
sbb
aas
repz
ja
loop
sub
sbb
mov
or
pop
mov
call
nop
lods
add
iret
dec
add
add
cvtdq2ps
jp
xchg
mov
push
repnz
fldt
mov
xor
sti
enter
in
add
jne
lods
insb
test
in
xor
scas
mov
shll
mov
xorb
test
sbb
ret
sub
mov
sbb
add
int3
cwtl
imul
test
push
mov
mov
lock
cmp
xchg
imul
icebp
dec
inc
int
cmp
mov
lods
std
pop
lcall
fnstcw
mull
xor
mov
icebp
dec
cltd
fsubl
mov
pop
lcall
clc
lcall
mov
idivb
push
por
sub
xor
sbbl
or
or
ret
push
adc
jge
cmpsb
ljmp
push
dec
jge
icebp
mov
sbb
rorb
pop
and
cwtl
adc
in
jmp
pop
std
popf
ret
pop
rcrb
aaa
dec
int3
gs
test
int
mov
mov
lcall
stc
jge
sub
dec
cmc
xchg
mov
flds
xor
xchg
mov
and
mov
popf
les
ss
mov
push
test
mov
lea
imul
mov
adcb
shrl
mov
mov
dec
sbb
mov
inc
out
jmp
sub
and
aad
pop
rcll
push
cmp
sbb
push
pop
cld
cmp
mov
fsubrp
xlat
adc
data16
mov
jbe
and
bound
jno
inc
shrl
cmp
es
cli
and
insl
mov
decl
pop
and
mov
das
pop
aad
in
jbe
jne
xor
add
scas
push
popa
jge
xlat
cld
xchg
stos
cmpsl
movsl
pusha
scas
mull
cmp
or
cmp
cld
jno
push
fdivrl
mov
pop
push
inc
add
xchg
fwait
pop
sbb
push
ljmp
test
adc
notl
shlb
jle
jae
in
fwait
add
mov
lock
lds
lcall
mov
repz
popa
imul
clc
fwait
lahf
lods
add
jecxz
and
fisttps
add
ja
outsl
out
xchg
inc
cmp
aam
adc
pusha
mov
out
mov
mov
movsb
mov
out
fcomps
mov
inc
pop
jne
mov
das
mov
cltd
out
mov
sbb
jbe
cmp
cmp
xchg
push
mov
push
cmp
mov
and
sbb
pop
xor
movsb
dec
call
adc
mov
jmp
push
add
test
lret
loope
fistps
lods
ljmp
lods
jb
in
cli
pop
cmp
cmpsl
idivl
mov
push
cmp
rcrl
inc
xor
inc
adc
push
fwait
adc
jge
gs
mov
lods
sbb
cmpb
inc
cmpsb
enter
add
mov
pusha
ljmp
popa
pop
and
add
sub
int3
in
aaa
lods
int
cmp
dec
pop
fiaddl
int3
cmp
popa
fstpt
pop
mov
adc
fidivrs
ret
mov
mov
imul
sbb
jg
pop
repnz
xor
mov
dec
xor
xor
mov
ss
imul
ret
jl
pusha
js
dec
xchg
lods
xchg
pop
mov
dec
insl
xchg
jno
cwtl
adc
add
movsl
xor
cmpsl
adc
bndldx
xor
lods
pop
mov
pop
loopne
das
cmc
cmp
xchg
loopne
insb
lods
xchg
mov
loope
mov
out
in
cmp
xchg
bound
rolb
mov
imul
push
pop
les
das
dec
notb
pop
sbb
loop
mov
sbb
or
mov
fldenv
movsb
lods
sub
insb
lcall
dec
lods
aad
ret
loope
notb
or
lock
repz
in
sub
pushf
cli
jns
aaa
xor
mov
add
int
mov
push
pop
jl
fiadds
cmp
repz
fnstenv
fdivrl
lds
lcall
mov
cmpsl
mov
push
cmpsl
pop
movsb
mov
lahf
cltd
push
stos
test
fidivrl
mov
sub
pop
push
nop
fcoml
fwait
sub
cmpsb
mov
push
addb
stos
jp
aaa
inc
or
dec
jnp
movsl
xchg
fisubrs
jl
int
aad
fimuls
dec
mov
xor
or
roll
pusha
cltd
cmc
jo
inc
inc
sub
jb
fcomps
pop
ret
sub
imul
fstps
inc
popf
or
push
mov
mov
jmp
adc
adc
jbe
cmp
xor
fldl
sub
adc
xor
push
dec
adc
aaa
cwtl
hlt
fs
xchg
xor
rclb
xor
pushf
lea
shrb
or
aam
aad
leave
test
sbb
mov
insb
arpl
outsl
pop
xor
add
in
jnp
int3
mov
cli
fisubs
in
movsl
jmp
xchg
mulb
lret
or
cmpsb
js
push
pop
push
pop
out
push
dec
test
rolb
fiadds
pop
adc
faddl
in
dec
imul
arpl
cmc
sbb
jns
loopne
popa
sarl
cmp
js
mov
dec
mov
push
sti
inc
ret
mov
lock
adc
out
stos
and
dec
outsl
mov
pop
test
jno
stos
mov
sub
sbb
fs
imul
mov
clc
sub
push
rclb
les
dec
lds
idiv
outsb
pusha
rcrb
xchg
daa
lods
movsb
in
inc
fistpll
das
add
aam
das
cwtl
mov
xchg
negb
mov
fwait
outsl
scas
xchg
or
out
lahf
fiadds
dec
mov
jl
xchg
sbb
cmp
arpl
dec
sbb
adcl
and
jbe
test
je
imul
sub
stos
pop
imul
pop
arpl
mov
cmc
sbb
rcrl
mov
fcoml
icebp
mov
cmp
add
sub
lret
inc
sbb
pop
xchg
lcall
xlat
cmp
jle
sub
push
add
pop
adc
mov
rcrb
enter
fcomi
out
fsub
cmc
ljmp
call
cmp
loop
jbe
mov
cmp
addr16
fs
addr16
sub
fists
and
in
es
fildll
negb
jl
dec
mov
lret
gs
cmp
aaa
mov
mov
call
jnp
or
lcall
shlb
sub
cld
imul
mov
add
sbb
fisttpll
aas
shlb
mov
mov
dec
dec
pop
mov
adc
cmp
loopne
loope
imul
lret
cmp
fldt
cmp
fs
in
dec
cmp
sbb
lahf
pop
cmc
mov
mov
int
movsb
pop
ljmp
or
pop
mov
push
dec
lods
inc
out
fwait
leave
dec
jl
inc
cli
fwait
hlt
sbb
jne
setnp
icebp
cmp
notb
inc
clc
sub
push
sbb
hlt
xor
sub
shlb
sbb
xor
insb
sbb
dec
cmp
cmpsb
in
stos
add
cs
pop
add
pop
push
addr16
popa
mov
mov
loope
cmc
fiaddl
aam
cmpsb
cmc
xor
bound
pop
bound
ror
jecxz
mov
das
sarl
jl
mov
xor
push
rorl
inc
in
orl
mov
mov
and
pop
repz
mov
inc
mov
xor
sarb
fcmovnu
mov
or
outsb
movsb
push
pop
iret
out
fsubl
div
and
add
sub
add
xchg
pop
mov
mov
test
or
stc
xchg
xchg
loope
sbb
jo
std
fimuls
jecxz
shlb
sbb
push
js
add
imulb
scas
mov
add
pop
std
aam
fsubr
inc
orl
mov
pushf
xor
out
fdivs
pop
ret
aaa
movsl
arpl
cmp
outsl
dec
loope
aas
mov
jmp
out
cmp
xor
cmp
nop
mov
inc
imull
dec
mull
je
lods
mull
in
int3
scas
leave
or
jo
push
sub
test
repnz
push
icebp
xchg
in
sbb
loope
xchg
push
add
xor
adc
jno
and
pop
jbe
mov
jl
push
rolb
jno
add
pop
sub
pop
test
js
mov
cltd
lods
cmpsb
outsl
sbb
jge
jle
push
inc
adc
in
xchg
stos
pop
jle
test
mov
push
or
inc
bound
cwtl
xchg
out
out
setb
xchg
push
jge
mov
cmpsb
lahf
popa
filds
mov
xchg
cmp
cmc
or
dec
imul
mov
insl
shld
ficoms
push
lods
inc
add
xor
sub
adc
aaa
lret
clc
nop
imul
sub
pop
push
mov
adc
clc
pop
rorb
lahf
dec
nop
push
jl
je
stos
and
imulb
stc
sahf
sub
fcmovbe
gs
or
pop
lds
cmp
sub
cmp
popf
out
loop
enter
out
mov
fisubrs
fidivs
add
sti
mov
xor
cmp
lock
imul
les
arpl
pop
icebp
rcrb
fwait
into
push
jmp
xor
add
mov
orb
inc
push
pop
out
aam
or
cmp
add
sub
mov
push
pop
lcall
xor
cs
fdivrs
pusha
in
mov
mov
mov
sarb
or
cmp
push
dec
aam
dec
addr16
mov
iret
call
add
xor
ret
xor
out
fwait
gs
xor
and
and
xchg
add
mov
ss
sub
xlat
mov
jmp
xor
sbb
jmp
sahf
push
stos
fisubl
push
test
in
scas
inc
pusha
inc
dec
adc
or
sub
mov
sub
sbb
mov
and
fldcw
inc
iret
fildl
out
shrl
jnp
xor
lods
stos
popa
add
or
pop
inc
xor
clc
popf
repnz
mov
ja
xchg
pop
add
push
leave
add
lea
adc
inc
push
inc
mov
lock
loope
test
jecxz
and
xor
dec
mov
jmp
xor
mov
pop
mov
loope
gs
mov
cmp
mov
arpl
je
push
jo
sub
cmpsl
pusha
inc
add
jbe
or
aam
insl
loope
lods
or
pusha
mov
addb
mov
adc
push
mov
jne
stos
sub
mov
stos
jmp
pop
add
add
stos
lret
mov
xor
mov
lds
loop
cwtl
test
inc
cmc
cmpsl
es
loop
jge
pop
cmp
push
or
mov
pop
xchg
sbb
mov
out
or
lcall
pop
cmp
data16
mull
cs
xchg
sbb
lds
jmp
sub
into
dec
lea
inc
lahf
sbb
sahf
push
dec
rclb
aad
cmpsl
pop
xor
add
fstpt
sbb
add
es
xchg
ret
mov
adc
push
pop
cmpb
or
lcall
dec
sub
jo
fstpt
pop
and
rclb
mov
sahf
jecxz
iret
push
pop
adc
in
cmpsl
and
push
orb
xor
out
ljmp
mov
lea
je
sub
jae
xchg
mov
sti
cld
out
pop
cmp
mov
xor
lock
sbb
push
push
and
mov
add
cmp
enter
sbb
jne
icebp
in
dec
lret
ja
sarb
daa
and
mov
dec
adc
cmp
cs
mov
iret
es
mov
pushf
lret
or
add
xchg
cs
cmp
dec
test
ja
mov
fcmovnb
push
add
add
inc
lea
jno
cmp
adc
movsl
and
mov
push
sbb
cmc
es
js
push
and
inc
insb
sbb
mov
dec
aas
fwait
mov
dec
shlb
jecxz
fcoml
loop
mov
ret
pop
mov
xchg
jp,pn
popa
insl
fcomps
imul
imul
clc
insl
leave
jae
repnz
sub
xchg
popf
call
roll
aaa
jg
or
mov
addr16
adc
adc
lahf
cmp
test
stc
cs
sbb
cmp
xchg
loope
lds
imul
movsl
lock
and
add
fidivs
test
test
cmpsl
add
add
int3
cmp
mov
adc
ja
lea
xchg
fistpl
loop
pop
test
and
int
stc
in
adc
jbe
ss
aas
pushf
outsb
mov
jp
out
sbb
sbb
stc
and
or
sbb
ds
jno
outsl
test
addr16
cmc
or
dec
fcmovbe
ficomps
push
lods
jae
scas
int
mov
push
cld
jo
sub
cmp
ljmp
popa
push
sub
sub
mov
lret
lret
nop
popf
mov
fldl
add
in
push
mul
test
lods
lcall
mov
outsl
pop
sbb
dec
inc
mov
es
aam
icebp
xlat
xor
xchg
xor
imul
lret
add
out
inc
push
xchg
rcl
xor
push
mov
ljmp
xchg
or
push
imul
mov
movl
fisubrl
out
mov
jg
jg
or
pop
lcall
sbb
shll
push
mov
in
loope
pop
rol
and
pop
pop
sti
shl
xor
cs
test
loope
iret
out
cmp
cmp
mov
pusha
addr16
pop
iret
stc
test
cld
pop
push
cmpsb
mov
in
fisttpll
outsb
add
int
incl
out
outsb
sahf
fidivrl
mov
scas
mov
or
iret
or
js
mov
add
push
mov
inc
pop
sbb
mov
ljmp
cld
jnp
inc
icebp
add
sbb
push
jbe
nop
daa
mov
push
aam
push
or
imul
ljmp
dec
xor
mov
outsb
enter
enter
xor
fsubl
lret
pop
xchg
sub
fstpl
in
lret
data16
stc
mov
hlt
mov
fs
mov
sub
out
mov
pop
inc
ja
mov
stc
inc
or
adc
inc
xor
out
dec
mov
mov
out
movsb
xlat
push
inc
mov
or
popa
mov
xchg
jns
adc
add
fcomps
sbb
jbe
scas
stc
repz
add
jnp
xchg
shlb
jo
pop
shr
fwait
dec
mov
jne
sbb
aas
add
sbb
stos
mov
clc
push
or
ret
sub
ljmp
or
int
xor
adc
push
xchg
cmp
sub
sahf
jo
pop
or
inc
push
inc
ljmp
lret
scas
test
add
or
jbe
xchg
lret
dec
pop
dec
adc
int3
std
add
sub
lock
int
mov
jb
aam
mov
inc
add
dec
push
push
fs
sub
rcrb
xor
enter
in
jno
jbe
out
mov
xor
jns
flds
mov
push
movsl
pop
test
mov
jmp
pop
shrl
dec
pop
lcall
aam
and
call
jle
stos
push
clc
jno
pushl
incb
js
fiadds
mov
sbb
in
add
repnz
sbb
mov
mov
push
fstl
lcall
pop
aaa
xchg
repnz
inc
cmp
sarl
cwtl
rorb
popf
shl
dec
frndint
mov
xor
outsb
mov
sbb
bound
pop
jmp
ret
fs
mov
and
mov
mov
mov
std
cmp
loopne
hlt
out
stc
or
pop
add
sbb
mov
xchg
fcoms
fldcw
les
fnsave
adc
xor
mov
fisttpl
icebp
ds
or
xlat
popa
repnz
jle
jl
fnstsw
push
pop
std
fistps
and
shlb
scas
mov
and
sub
cmc
jae
lods
js
jge
mov
idiv
iret
or
jle
add
xor
iret
popl
cld
scas
nop
fwait
pop
push
ffreep
cs
add
and
jbe
aas
add
cwtl
pop
or
add
insl
js
shll
test
data16
movhps
rorb
adc
mov
adc
out
mov
pop
shl
or
rolb
stc
pop
ret
push
sahf
xor
fwait
inc
jb
test
add
dec
mov
lds
fnstsw
in
pop
fldl
jbe
mov
jne
xor
insl
mov
mov
clc
fs
xchg
js
mov
es
sbb
push
push
push
inc
dec
call
data16
mov
add
inc
sti
xchg
aas
push
pop
enter
sub
adcl
cmp
inc
adc
cmc
icebp
out
ja
nop
mov
jg
nop
mov
rorl
lret
mov
xchg
dec
sbb
mov
and
mov
fidivrs
mov
jmp
push
push
xchg
ret
push
pop
sub
xor
sbb
jo
das
sbb
in
ss
and
call
adc
mov
and
mov
fcomi
lods
add
jg
or
popf
inc
add
push
xchg
orb
shl
rolb
out
push
out
pop
add
add
cli
push
aam
xor
mov
xchg
mov
push
lods
cs
mov
aad
pop
lods
outsb
mov
mov
jnp
jle
xor
inc
cwtl
jmp
cmpsb
sub
out
ljmp
add
or
pop
cltd
xchg
ficomps
xchg
aam
mov
fwait
jge
xchg
jo
addr16
add
sbb
push
mov
and
sub
fistl
std
jae
decl
mov
mov
test
dec
jae
cltd
hlt
out
mov
jbe
mov
fwait
sbb
sub
mov
in
mov
jecxz
fdivs
sub
cli
sub
push
push
add
mov
fbstp
aaa
jnp
hlt
cmp
outsb
test
push
insb
loop
or
dec
aad
rcl
push
jbe
daa
popf
jae
jne
mov
je
mov
pop
xlat
icebp
jle
mov
mov
mov
int3
call
shl
add
jnp
xor
cwtl
movsl
xchg
outsl
jecxz
push
jnp
repz
sub
popf
add
lahf
jno
sarl
mov
lea
js
es
movsl
mov
xchg
mov
cld
shlb
inc
pop
loopne
pop
aam
cmpsl
insl
cmpsb
xchg
pop
movsl
jecxz
push
pop
pop
add
add
arpl
fsubrl
stos
push
adc
cltd
aam
push
iret
bound
lea
mov
into
or
je
ret
fsubl
dec
aad
pop
cmp
test
xchg
add
stos
mov
les
insb
les
pop
test
rcrl
jnp
lock
das
dec
adc
adc
sbb
mov
jno
xor
dec
lahf
stos
push
add
jns
aad
cmp
cmp
negb
test
add
repnz
or
push
out
inc
les
fisubrs
lea
lock
xchg
mov
adc
lods
fwait
hlt
sub
push
mov
xchg
xchg
icebp
mov
adc
mov
pop
or
mov
mov
lock
int
addr16
jae
popa
les
xlat
push
nop
xchg
arpl
scas
pop
enter
xor
xchg
push
cmpsl
stos
scas
mov
or
cmpsl
xor
mov
into
out
lods
mov
push
mov
mov
hlt
incl
mov
jg
stc
shll
std
lret
mov
adc
test
js
adc
dec
jnp
lret
les
add
ret
lret
push
addr16
clc
jmp
cli
out
push
adc
push
outsb
dec
out
xor
adc
sbb
mov
jae
mov
mov
sub
subb
dec
repz
xor
popf
mov
mov
and
rorb
push
ret
inc
stc
jecxz
mov
dec
sub
mov
ret
jbe
jl
pushf
fists
hlt
adc
hlt
mov
dec
out
xor
fcomp
aaa
shrl
push
arpl
and
les
nop
pop
or
pop
xor
dec
ret
int3
jnp
aad
cmp
sub
jp
ja
clc
jg
mov
cmp
subb
call
mov
cmp
lock
mov
xor
outsb
test
add
fsts
pop
mov
jge
sahf
lcall
imul
mov
and
dec
fnstenv
cmc
dec
rorl
xchg
fs
xchg
daa
mov
movsb
lds
jnp
or
in
xchg
cmc
out
push
iret
xor
clc
and
sarb
pop
mov
pop
add
repnz
xchg
xchg
popa
sub
mov
arpl
push
arpl
inc
test
ret
xor
nop
and
xor
mov
sbb
ljmp
pop
push
pop
adc
inc
sbb
xchg
loope
jge
adc
mov
lea
adc
les
mov
sub
lods
or
pop
push
mov
push
std
das
stos
inc
je
sbb
sti
push
lock
jae
mov
fsubl
test
pop
adc
orb
addr16
add
cs
aas
and
pop
pop
or
cmp
out
xchg
xor
pop
fidivrl
push
jecxz
dec
and
cltd
repnz
mov
out
ret
iret
std
pusha
push
xor
pop
stc
sbb
ret
cld
clc
sarl
loop
scas
add
pop
lods
lods
mov
mov
dec
pop
mov
push
or
jnp
mov
or
inc
or
lahf
cwtd
lea
ss
push
aam
sbb
adc
sbb
cwtl
orw
shll
add
pshufw
cmp
ret
mov
out
jmp
insb
cmp
data16
push
outsb
pop
sub
dec
mov
dec
mov
and
loopne
fwait
popf
call
addr16
out
mov
aam
movsl
addr16
xchg
fistpll
sahf
repz
adc
leave
mov
sbb
test
jnp
cmp
loopne
lods
jo
out
push
add
cmp
sbb
mov
test
clc
xor
mov
xchg
adc
jae
xlat
mov
fs
or
insl
out
sub
jb
mov
pcmpeqw
push
mov
sbb
sbb
push
cmp
push
insl
fisttps
cmp
pop
sub
sub
pop
repnz
sbb
xor
pop
sub
dec
lea
in
adcl
movsb
jg
test
bound
xchg
dec
mov
mov
mov
xor
rcrl
out
pop
rcll
pop
ds
pushf
pop
cmpsb
mov
jno
xchg
iret
cmp
insl
sbb
inc
outsl
call
cli
mov
setae
and
scas
into
dec
mov
jp
shl
daa
gs
test
cltd
sarb
cwtl
pop
mov
mov
cmpl
stos
incl
sub
ljmp
adc
xor
popf
outsl
lret
xchg
push
pop
ljmp
xor
cli
emms
out
inc
sarl
out
stos
jl
das
mov
mov
xor
aam
loop
inc
and
decb
cmpsl
mov
xchg
call
mov
jg
jae
cmpsb
addr16
ret
ljmp
enter
lods
into
xchg
pushf
ds
sub
push
dec
in
shrl
ret
jbe
popa
jae
cmpsl
shrl
stc
lods
aam
mov
pop
mov
jb
or
xor
jge
adc
lods
ljmp
scas
fidivrl
mov
leave
stc
xchg
pop
out
pop
pushl
xchg
lret
xorl
pop
xchg
mov
imul
mov
push
stos
inc
dec
rorb
mov
inc
nop
push
pop
repz
int3
pop
push
add
stc
jp
jne
pop
jge
cmp
js
mov
or
xor
pop
addr16
dec
or
dec
incl
enter
popa
push
fdivs
orb
push
and
out
and
jge
lret
xor
adc
mov
jge
incb
popf
ljmp
or
incl
sbb
pop
adc
sbb
dec
xchg
inc
mov
imul
xor
fs
mov
adc
clc
adc
mov
cmp
or
push
scas
push
inc
stc
call
movl
imul
inc
in
or
xcrypt-ecb
cmpsl
leave
lods
and
imul
lret
mov
inc
push
xchg
mov
inc
jge
mov
adc
lock
out
push
insb
subb
insb
mov
sub
dec
or
mov
call
les
inc
inc
pop
cs
es
ficompl
sbb
rorl
pop
ljmp
data16
clc
pop
and
push
int3
aam
mov
adc
mov
and
cwtl
adc
mov
push
sbb
add
xchg
sahf
pop
pop
cmp
fwait
mov
lods
mov
jnp
fsubl
inc
xchg
int3
mov
adc
sbb
push
mov
mov
mov
pop
mov
add
sub
paddb
icebp
adc
xchg
filds
xor
das
fst
mov
adc
add
pop
and
or
mov
and
fdivrl
gs
in
jns
adc
jne
data16
dec
data16
pusha
and
mov
inc
lahf
pop
cmp
in
push
dec
sbb
es
jp
movaps
dec
shrl
cmpsb
leave
sbb
inc
xor
inc
ss
enter
cmp
mov
repnz
das
sahf
stos
sbb
cld
aaa
mov
fidivrs
dec
das
outsl
pop
outsb
fisttps
jb
fwait
add
bound
xchg
mov
fsubp
sbb
pop
insl
stos
inc
arpl
cmpsb
cs
fiadds
push
mov
xchg
pop
repz
pushf
outsw
clc
pop
and
ja
pop
mov
lret
and
scas
or
les
push
mov
and
rcll
jb
inc
lret
add
xchg
das
cwtl
loopne
dec
jo
xchg
stos
jge
mov
mov
and
mov
mov
push
mov
in
loope
push
shl
das
or
mov
idiv
mov
rol
and
xor
pop
lds
pop
pop
lea
xchg
mov
mov
xchg
cld
scas
or
jno
or
add
xchg
pop
add
push
inc
jge
mov
imul
xchg
movsb
rorb
cmp
mov
add
das
and
lock
into
xchg
mov
out
sbb
cwtl
cli
mov
mov
push
mov
lahf
lcall
cmp
cmpsb
idiv
xor
mov
dec
cs
and
dec
test
pop
mov
jb
mov
pop
sbb
and
shr
xchg
push
aad
out
leave
push
push
fidivrs
aam
jg
fs
insb
repz
sbb
xor
xchg
jo
decl
lea
cmp
popa
stos
jle
pushf
sbb
jl
xor
adc
and
int3
rorb
cmpsl
mov
jmp
jnp
in
mov
dec
imul
and
sub
sub
pusha
aam
rcl
sub
mov
cs
push
rclb
arpl
or
shll
dec
or
dec
jns
out
fwait
ds
inc
xchg
cmp
pop
stos
insb
cwtl
into
push
shrl
jle
jb
mov
cmp
sbb
out
xchg
insl
pop
mov
pop
push
sbb
push
mov
popa
clc
movsb
cltd
and
out
movsb
clc
sbb
push
dec
mov
popa
lahf
add
adc
and
jmp
jp
shll
out
dec
jo
adc
dec
in
or
push
icebp
femms
add
sbb
pop
cmp
add
dec
or
xchg
mov
data16
ljmp
mov
inc
adc
into
addr16
jns
xlat
jnp
adc
cli
stc
aad
adc
dec
mov
addr16
xchg
scas
mov
pushf
mov
jp
pop
jbe,pt
jnp
jae
cmp
test
sbb
lods
lahf
mov
enter
test
xchg
mov
or
pop
mov
sahf
psrlw
push
fwait
outsb
push
pop
inc
dec
into
js
pop
int3
shll
pushf
stos
shrl
divb
loop
idivl
lods
popf
add
inc
in
out
sar
and
iret
sub
jb
arpl
sub
sub
and
repz
xchg
jbe
rolb
shll
gs
sbb
and
xor
add
sbb
push
mov
adc
add
push
lods
lcall
shr
hlt
aaa
sbb
adc
leave
mov
icebp
push
push
mov
cmpsb
leave
mov
rcrl
xchg
add
push
imulb
push
or
jns
push
pop
push
inc
or
movsb
movq
mov
push
mov
xor
popf
ret
sub
cmp
push
leave
pop
stc
mov
xchg
loopne
add
xchg
lret
xchg
lret
fidivl
mov
aas
dec
push
dec
arpl
in
arpl
enter
mov
pop
jbe
xor
xchg
int3
add
mov
push
xchg
inc
into
xchg
mov
cmpsb
and
sub
or
push
lods
dec
mov
xchg
and
xlat
sub
xlat
fsubrs
movsb
mov
cltd
cmp
lods
pop
out
loope
or
xchg
xchg
cmp
add
push
xrelease
push
clc
movsb
aaa
add
addr16
bound
js
inc
jle
cmp
and
or
out
ret
cmp
cli
ds
data16
or
addr16
sub
inc
dec
cmp
imul
sbb
cltd
sub
mov
or
dec
mov
jg
or
cmp
adc
xchg
lcall
pop
inc
mov
repnz
je
inc
and
xor
adc
insb
daa
mov
lret
loop
outsb
pop
fwait
or
sbb
ljmp
rcrl
sub
inc
sbb
dec
nop
adcl
cmpsl
test
ret
mov
mov
or
and
jns
ss
ss
mov
cs
jmp
ja
jp
sub
or
fwait
and
aam
icebp
popa
cwtl
sar
cmc
lret
mov
dec
test
push
pop
outsb
inc
fistl
push
fdivrl
scas
add
sub
push
fcoms
in
cld
push
fldl
je
and
icebp
pop
mov
and
inc
jecxz
pop
stc
aam
popa
testb
mov
addr16
or
inc
hlt
sbb
mov
and
lret
outsb
call
add
loop
mov
nop
jno
jns
es
or
pop
inc
or
mov
add
fmulp
pop
mov
jge
jp
and
add
in
lcall
mov
movsl
fwait
test
scas
ficoml
sbb
movsl
push
cmp
jbe
ss
jnp
stos
andps
out
test
mov
sub
in
and
mov
ljmp
in
cmp
in
mov
divl
jbe
jno
xchg
jno
mov
sub
mov
or
pop
add
jle
mov
fcoml
into
xchg
ret
aam
cmp
scas
xchg
mov
clc
push
xchg
inc
out
out
jbe
sbb
mov
mov
out
test
test
jmp
movsl
adc
fmuls
into
push
mov
aad
mov
pop
fistpl
dec
test
ret
test
jle
mov
std
inc
and
inc
cltd
iret
jbe
fdivp
xchg
adc
sub
and
jge
xchg
adc
xchg
xor
cmp
sti
mov
push
cwtl
mov
scas
cmp
pushf
push
je
inc
fcmovbe
enter
mov
std
or
push
pop
mov
pop
subl
mov
je
dec
pop
push
out
es
sbb
push
mov
fwait
add
xchg
scas
negl
shll
aaa
and
mulb
mov
nop
mov
sahf
xchg
pusha
cmpsb
divl
push
out
mov
push
icebp
inc
sub
cmpsl
or
stos
jbe
jle
fs
jg
inc
lahf
mov
mov
adc
add
fisttps
jg
xchg
cli
sub
push
xor
cmpsb
xor
mov
popa
daa
pop
loope
and
or
movsl
mov
mov
addr16
inc
fwait
xor
mov
mov
sti
stos
xor
repz
mov
mov
rcl
dec
call
sub
ficoms
mov
std
rolb
and
jg
inc
mov
insb
aam
sbb
imul
xor
ja
cli
lret
cmp
sub
cld
lods
pop
enter
pop
cmp
cmp
pop
das
bound
jmp
sub
xor
test
lahf
gs
or
add
push
mov
jp
cmp
popa
jg
das
mov
int3
xchg
sbb
mov
cli
fcoml
cmp
add
fs
dec
dec
or
and
mov
loop
cmc
std
jo
sbbb
cltd
inc
jl
nop
stos
cmpsl
std
ss
cmp
sub
lds
mov
sti
scas
js
mov
mov
out
sbb
and
and
xor
mov
jno
in
sbb
mov
inc
sub
cmp
and
mov
push
popf
xchg
xchg
pop
dec
cmpsl
adcb
cmp
je
xchg
movsb
xchg
fildl
dec
iret
sbbl
cwtl
fchs
out
inc
fdivp
push
sarl
pop
lods
mov
leave
ljmp
mov
mov
lret
scas
call
mov
sub
and
xchg
xchg
fisttpll
or
pushf
cmp
adc
fisttpl
xor
jo
pusha
push
shlb
mov
adc
shlb
push
sbb
dec
xchg
popf
dec
negb
outsb
imul
pop
ljmp
push
inc
mov
add
mov
int3
lret
fidivs
xor
cli
mov
adc
cltd
rcrb
adc
sti
addr16
in
lds
ss
cmp
imul
psubw
pop
jne
popf
nop
mov
imul
testb
or
xchg
ljmp
loopne
jae
mov
imul
pushf
mov
es
mov
mov
sub
push
cmpsb
daa
or
mov
dec
xchg
std
adc
pushl
mov
sti
lret
add
dec
inc
mov
mov
es
enter
fstps
pop
push
ja
push
push
adc
loope
dec
push
jb
shlb
sti
lods
out
stc
movsl
out
out
and
inc
adc
jge
pop
fdivr
fwait
xchg
jo
lods
fwait
xor
fisubrs
sbb
stc
push
rcr
xchg
rcrb
icebp
cmp
and
sbb
leave
sbb
xor
in
repz
lahf
push
test
mov
sbb
push
icebp
mov
ja
jp
rcll
and
mov
scas
sbb
test
adc
aam
mov
out
push
cmp
adc
dec
cmp
xchg
xor
mov
fwait
cmp
dec
insl
dec
xlat
xorl
cmc
shlb
mov
aas
ds
jge
jle
jb
out
or
and
mov
and
std
outsl
into
jle
xchg
push
cmpsb
push
aad
fnstsw
dec
mov
sub
scas
mov
or
add
dec
mov
pop
add
push
roll
or
in
rcrb
inc
idivb
das
lret
jns
imul
pop
jno
punpckhdq
jnp
adcl
cs
stos
xor
cmp
arpl
jno
push
jns
mov
bound
pop
ret
mov
xor
jns
lock
jecxz
pslld
aam
xchg
inc
xchg
sbb
jbe
lret
cli
movsl
bound
jl
mov
cmc
aas
mov
scas
bound
loop
push
test
xchg
or
jne
lahf
cmp
mov
mov
mov
or
mov
cmp
imul
frstor
xor
mov
mov
enter
cmp
xlat
aam
xchg
dec
nop
push
and
add
cmc
test
je
int3
clc
cmp
dec
in
les
je
mov
push
or
xchg
cmpsb
sub
sub
dec
lock
into
xor
cs
insb
es
adc
lds
insb
and
repnz
sbb
pop
mov
mov
sbb
push
js
jae
cld
lods
test
pop
outsb
cwtl
pop
adc
xor
mov
movsl
clc
sub
pop
out
push
or
loopne
rcl
sbb
inc
jecxz
dec
mov
sub
stc
or
mov
dec
push
mov
int
scas
and
mov
cs
aam
xor
cmp
fcoml
aam
das
ret
pop
xchg
sbb
or
inc
dec
nop
incl
jnp
adc
or
or
jg
push
sarl
xchg
and
loop
pushf
scas
and
add
jae
adc
adcl
repnz
jmp
or
imul
dec
fisubs
stos
sahf
xchg
add
pop
jge
adc
xor
aam
test
ficompl
fstps
jge
cmp
inc
sbb
pop
mov
imul
incl
and
fcmovu
jo
hlt
gs
mov
pusha
movsb
cld
pop
popf
insb
push
out
addr16
inc
adc
dec
icebp
cmp
into
sub
push
mov
adc
clc
loop
popa
lret
loope
cs
ficoms
sbb
mov
or
xchg
inc
and
nop
into
push
adc
push
imul
mov
push
cmp
xchg
add
pop
fldenv
shl
loopne
jge
or
mov
movb
insl
adcb
inc
mov
add
flds
mov
test
xchg
iret
add
push
push
fldl
jne
mov
mov
in
ss
insl
and
xchg
xor
fbld
inc
mov
leave
mov
mov
mov
leave
dec
ja
repz
ror
addl
pop
pop
mov
push
cmp
mov
inc
jnp
lds
faddp
call
add
jb
mov
dec
les
mov
dec
mov
dec
cmp
int
sub
jle
mov
dec
imul
lods
into
xorl
inc
push
test
mov
adc
incl
push
lock
pop
sbb
fwait
lret
repz
ss
std
dec
push
xor
jle
lahf
les
mov
stc
xchg
mov
jmp
xlat
test
ret
cmpsb
sub
xor
loop
sub
adc
and
xchg
mov
cmp
icebp
dec
sbb
mov
add
adc
cmovbe
fnstenv
insl
cmp
xor
jp
mov
out
inc
dec
pop
cwtl
hlt
scas
sbb
iret
or
mov
pop
cmp
sub
ljmp
xor
loope
arpl
aam
out
jmp
cmp
in
fistl
jg
dec
or
sbb
fbld
in
jnp
xor
lods
shr
ds
aaa
push
jp
sub
inc
cmpb
pop
pop
inc
sub
cmp
notb
das
cmpb
mov
jns
and
shrl
ficoms
inc
and
or
aam
aaa
iret
sub
and
ret
adc
mov
call
mov
pop
movsb
cltd
inc
mov
sbb
push
test
fidivrl
enter
pop
sbb
mov
mov
mov
dec
das
mov
or
in
sbb
out
popa
mov
jle
pushf
std
movsl
jbe
xchg
jle
imul
dec
mov
jb
xor
repnz
inc
mov
aas
pop
lahf
cmpsl
fisubl
sti
xor
sub
sbb
adc
sbb
enter
sbb
das
or
arpl
in
or
cmc
mov
fisubrs
dec
test
dec
or
xchg
stc
fists
add
rclb
lret
mov
loope
inc
addr16
in
or
or
in
pushf
xchg
comiss
sbb
sbb
add
xchg
ret
adc
roll
add
ja
push
or
pop
adc
inc
cltd
xchg
jge
mov
mov
mov
rclb
rorb
adc
cmp
pop
mov
cltd
out
bound
pop
call
cmpl
sub
out
xor
rcll
jp
mov
repnz
jb
outsl
xor
and
movsb
das
add
add
mov
mov
fbld
adc
mov
and
mov
jg
lret
mov
mov
in
ds
mov
or
test
inc
stos
insb
xchg
sbb
jne
stos
dec
cmp
les
and
mov
sti
mov
jno
add
pop
jne
cmp
xor
dec
pop
jmp
ja
sti
sub
push
adc
push
imul
push
jp
jl
cmpsl
in
mov
lcall
lret
orb
pop
xchg
jmp
not
push
xorl
push
loopne
push
jno
cmp
jmp
imul
sbb
cltd
jbe
mov
iret
jae
std
insl
out
fwait
cs
adc
sub
pop
movsb
movb
sbbl
mov
pop
add
insb
into
xchg
aad
leave
cmp
in
ds
popa
insl
fldenv
outsl
pop
add
jne
pop
subb
jo
aad
or
cwtl
andl
push
call
loope
cmp
lea
lods
test
movsb
jne
mov
lahf
fbld
daa
jns
add
fwait
or
xchg
cmp
popf
mov
clc
daa
aad
xor
pusha
lods
adc
xchg
xchg
pop
stos
add
mov
push
sarl
cmp
pop
inc
push
pop
dec
sub
bnd
add
sub
mov
xor
aad
fidivrs
push
inc
lods
lret
xor
imull
xchg
out
movsb
add
adc
mov
das
dec
mov
xlat
inc
inc
in
jle
inc
cwtl
cltd
xchg
and
fwait
sub
in
jb
imul
xchg
fsubr
mov
hlt
es
fcom
mov
cmpsb
inc
mov
ret
sbb
mov
fiaddl
sbb
call
jmp
lret
sbb
popa
int3
jns
sbb
xor
icebp
sbb
mov
add
and
sbb
leave
adc
dec
jmp
sarl
or
mov
test
movsl
xchg
pop
mov
pop
lea
jae
mov
daa
pop
mull
and
jg
mov
fidivrs
pusha
aaa
bound
xlat
or
sub
cmp
std
test
fcoms
inc
repnz
or
sbb
movsl
and
inc
test
out
cmp
test
cmp
and
inc
pop
push
dec
sbb
mov
negb
int3
testb
mov
cmp
loope
or
add
in
push
lahf
xchg
pop
push
sbb
or
lcall
and
fidivrl
gs
in
dec
les
jl
in
jo
add
push
xor
sub
mov
nop
ja
xchg
inc
push
inc
cmp
adc
add
cmc
pushf
fistps
mov
icebp
xor
popf
testl
jne
xchg
test
mov
in
push
lret
sub
add
shl
cmp
icebp
pop
arpl
dec
pop
mov
aas
pop
jbe
fwait
or
lahf
xor
movl
mov
lahf
mov
xchg
inc
lods
out
negl
xchg
clc
adc
add
adc
adc
push
push
lods
mov
icebp
or
mov
gs
test
jb
xor
and
adc
mov
ret
dec
dec
fchs
fs
out
cwtl
lcall
dec
arpl
fwait
leave
adc
or
repz
mov
shrl
mov
adc
push
xchg
addl
scas
inc
pop
sar
clc
lret
inc
outsl
loopne
arpl
pop
lods
aas
mov
xchg
mov
lea
loop
sbb
mov
adc
push
outsl
ja
mov
test
insb
aam
arpl
adc
sahf
movsl
cmp
mov
jmp
subb
clc
mov
add
mov
fcomi
or
xchg
in
push
jecxz
sub
mov
cmp
enter
mov
and
pop
push
mov
sbb
jle
cli
push
cmp
cmp
call
jne
or
outsb
push
jae
arpl
lret
cmpsl
dec
sti
fs
push
call
or
popf
adc
movsb
mov
sbb
ljmp
or
negb
lock
or
mov
add
or
inc
out
xor
movsl
fistpll
fldenv
mov
in
sahf
or
pop
into
fucomi
push
and
sbb
pop
pop
dec
mov
jbe
xlat
mov
sbb
inc
cwtl
mov
sub
xchg
iret
movsl
mov
add
inc
gs
cmpb
xchg
mov
cmp
mov
xorl
mov
out
repz
aas
nop
and
stos
pop
sbb
push
scas
nop
jmp
jno
mov
ss
arpl
mov
subps
pop
fld
test
dec
dec
mov
lock
pop
sbb
mov
fwait
into
fstl
xor
imul
divb
mov
or
sbb
mov
insb
icebp
inc
push
and
fisttps
cmc
adc
fiaddl
xchg
loope
scas
mov
mov
cltd
dec
call
sub
test
bound
sub
sub
shr
jl
mov
sub
ss
fistl
cmp
jecxz
jecxz
mov
fnsave
sub
xor
rorl
outsl
test
int
mov
ja
ljmp
cmp
sbb
adc
test
mov
xchg
jns
jb
imul
aaa
mov
iret
int
aaa
or
leave
test
mov
fs
ret
fildll
mov
mov
rcrb
mov
push
jo
pop
mov
nop
jp
jno
inc
push
cmp
repnz
dec
and
add
ljmp
pusha
mov
adc
shlb
pusha
sub
leave
pop
fwait
mov
enter
imul
testb
dec
jbe
dec
dec
xchg
push
and
add
ljmp
lret
jbe
out
sbb
lcall
pop
inc
sbb
and
add
out
sbb
pop
sub
mov
sbb
scas
ja
cld
jae
pop
lods
sub
shrl
lods
adc
push
jp
xor
adc
nop
in
or
subb
and
leave
pop
shll
cs
test
and
nop
repnz
enter
inc
cmc
test
adc
rclb
pop
es
cmpsb
sbb
lea
movsl
xchg
sbb
sbb
xor
and
rorb
xchg
mov
jns
jne
xchg
or
jne
neg
sbb
dec
repnz
dec
fildll
inc
sub
sbb
xchg
es
jno
in
mov
cwtl
xor
mov
adc
adc
adc
fstl
sbb
mov
pop
divb
push
ljmp
fnstenv
or
popf
adc
stos
imul
movsl
adc
inc
gs
pop
xchg
scas
fiaddl
cwtl
in
inc
push
imul
inc
gs
adc
aam
mov
mov
mov
lea
mov
inc
roll
out
add
mov
imul
pop
hlt
test
loop
insl
adc
xlat
xchg
add
ss
lods
stos
in
popf
add
push
stos
and
fs
cmpsl
mov
bound
adc
sbb
aam
jmp
mov
inc
xchg
je
fisubs
pop
cmp
cs
ja
out
mov
cmc
lds
sbb
int3
or
or
mov
push
insl
xchg
and
mov
mov
test
add
inc
inc
fldcw
imul
cmpsl
fsub
int3
pop
adc
popl
xor
push
hlt
sub
mov
fistps
shll
pop
sub
pop
sahf
add
rolb
stos
dec
lods
daa
icebp
mov
mov
fwait
inc
jno
xor
push
sub
out
and
mov
aam
cltd
arpl
push
mov
jae
ss
fidivs
ja
cmp
test
stos
fildll
xor
mov
cmp
stos
subb
pop
mov
xchg
adc
cld
rolb
hlt
sahf
imul
xchg
lahf
mov
xchg
pop
leave
mov
popf
fcmovnbe
test
jnp
mov
cld
jmp
inc
xor
ret
xchg
or
push
negb
jbe
and
pop
jge
movsl
cmp
mov
push
xlat
jae
repz
mov
jnp
and
les
jmp
rolb
xor
in
xor
pushf
aas
dec
into
add
leave
aad
ds
mov
add
cmp
sbb
scas
push
mov
pop
fsubrs
jo
push
stc
in
pushf
adc
and
outsb
sub
xchg
pop
fs
cmp
loop
mov
push
mov
xor
push
fdivl
stc
cwtl
mov
or
rclb
testl
xchg
mov
not
xor
lds
aam
adc
mov
ficomps
sub
or
inc
inc
mov
pusha
shlb
mov
sbb
shll
adc
daa
mov
mov
jmp
std
std
push
aam
pop
sahf
std
test
movsb
mov
fmuls
lahf
mov
pop
sbb
shlb
push
mov
fs
add
add
jnp
das
dec
pop
jae
dec
leave
pop
mov
daa
jmp
jge
inc
sub
or
arpl
cmpb
mov
les
cmpsb
or
aas
pusha
xor
fs
sub
mov
jg
mov
jbe
push
test
sub
outsl
inc
xor
or
pop
dec
ljmp
scas
adcb
jno,pt
cmp
xor
mov
dec
jns
add
pushf
mov
outsl
xchg
or
xchg
pushf
fmulp
les
push
jmp
lods
cld
mov
xor
test
into
aam
add
sbb
and
es
ret
in
cmp
pop
push
or
ret
aam
mov
shll
mov
in
cli
imul
ljmp
xor
push
fsubl
add
in
scas
rcll
icebp
nop
dec
das
dec
out
mov
xchg
in
cwtl
jbe
bound
or
popf
add
jno
ss
pop
xlat
mov
push
jmp
insl
mov
pushf
mov
addr16
mov
cmpsl
stc
jne
fisttps
ror
cmc
les
mov
or
test
int
outsl
sti
xor
lods
es
xlat
movsl
mov
in
push
cmp
movsl
lods
int3
inc
mov
cmp
mov
xor
push
popf
pop
inc
rcrb
outsl
inc
aad
or
jnp
notb
das
stc
mov
sbb
dec
push
lret
jbe
nop
pop
sub
insb
sbb
xlat
lods
in
jno
in
fsubrl
sub
push
mov
add
imul
sub
add
test
xor
test
sarb
inc
jae
sbb
aad
outsl
dec
mov
xlat
je
or
ja
leave
mov
loope
pop
inc
jle
movsb
ja
cmpsb
pop
in
inc
inc
lret
cmp
aas
addr16
daa
jge
sbb
push
andl
push
dec
mov
mov
stos
adc
jg
aam
in
out
movsl
mov
sahf
stc
mov
sarl
xchg
jb
scas
sbb
int3
roll
sub
mov
xlat
sbb
push
inc
push
mov
test
add
or
mov
bound
cli
movsb
lods
push
lods
mov
mov
repnz
lds
js
shll
fidivrl
cmp
mov
add
adc
lea
movd
mov
movsl
into
mov
jno
push
pop
mov
ja
ljmp
mov
pop
lods
incb
mov
lret
into
scas
mov
and
push
cs
jle
mov
and
jo
push
lret
or
lcall
pop
mov
xor
sub
pop
insl
repz
mov
sub
aam
mov
mov
iret
lret
pop
dec
aad
cltd
fidivrl
push
mov
xor
adc
dec
addl
mov
push
push
push
pop
lcall
cltd
scas
cmp
jns
jno
and
ret
pop
es
xchg
and
stc
mov
fstps
mov
rcrb
mov
adc
cmp
int
push
mov
iret
mov
sub
xchg
test
xor
scas
ss
mov
lods
mov
xrelease
jne
add
pop
jae
enter
inc
out
sti
sub
inc
jns
inc
xor
aad
jnp
mov
adc
lret
sti
sahf
lret
es
xor
sub
add
into
push
add
push
mov
es
into
jl
mov
inc
gs
dec
lock
push
out
dec
pop
mov
dec
daa
cli
gs
dec
sub
adc
jg
xchg
adcb
bound
inc
mov
pushf
mov
imulb
daa
loop
jno
mov
sbb
enter
push
popa
inc
cmp
lcall
mov
add
add
adc
movsl
in
cmpsb
das
sub
dec
shl
jge
sub
in
test
pop
pop
dec
pop
mov
lds
xor
pop
movsl
pop
mov
mov
sbb
into
shrl
xor
aaa
or
mov
inc
jbe
cs
fs
in
jp
mov
jge
insb
pop
sub
jbe
hlt
je
xor
imul
movsb
lea
out
das
mov
scas
int
ljmp
enter
rcrl
popa
cmp
js
jae
mov
popl
mov
xor
gs
cmc
and
int3
xor
jo
inc
fcmovnbe
cmp
imul
mov
sbb
mov
insb
sahf
jl
pop
add
aas
flds
mov
mov
or
dec
inc
cmp
sbb
push
notb
in
pop
fisubrs
rcll
mov
gs
ret
out
fbstp
xchg
stc
mov
icebp
jle
in
std
jp
rolb
ret
adc
test
fstl
inc
xor
pop
mov
inc
fnstsw
jns
clc
inc
mov
fnstcw
or
mov
mov
mov
lods
call
outsb
test
addr16
into
idivb
mov
xlat
hlt
mov
pop
gs
mov
sbb
jo
xor
movsb
insb
jp
aam
pop
lods
sub
mov
sbb
push
mull
pop
iret
subl
dec
cld
imull
add
jmp
sub
xchg
iret
inc
outsb
repz
popl
add
popa
loopne
mov
in
mov
fidivrs
mov
push
add
add
push
mov
insb
xor
cmp
lahf
adc
sbb
fldcw
mov
sahf
pop
das
fwait
je
adc
cmp
dec
mov
add
ss
roll
sub
movsl
or
adc
jae
jno
enter
leave
mov
xchg
syscall
push
movsl
pusha
sbb
das
pop
mov
pop
dec
mov
mov
loop
cwtl
dec
push
aas
aad
loopne
cmp
dec
jecxz
pop
or
xchg
dec
or
sbb
addl
mov
fwait
je
cmp
cli
out
ret
loopne
or
shl
xchg
add
hlt
xchg
xchg
push
dec
cmp
jbe
mov
ljmp
mov
js
jne
popf
lcall
ds
xchg
pop
fwait
mov
push
jmp
shl
imul
xor
dec
fs
inc
popa
adc
lret
sbb
jp
mov
inc
xlat
pop
push
jle
lods
mov
loope
leave
push
aam
pop
push
xor
push
addr16
inc
pop
enter
xchg
and
cwtl
js
mov
inc
rol
shlb
cmpsb
mov
jl
fsub
mov
movsb
mov
int
aas
repz
repnz
dec
jno
mov
outsb
cltd
pop
les
jo
xchg
mov
sub
sbb
cmp
mov
test
cs
and
or
ds
repnz
ss
subl
xlat
jp
out
sahf
je
add
and
daa
cmp
xor
call
pop
mov
clc
dec
push
cmp
mov
add
mov
clc
mov
jns
test
out
bound
jg
hlt
and
mov
sub
sbb
jns
loop
aad
cmpl
add
xor
jo
repz
mov
xchg
add
sub
flds
out
pop
mov
and
sti
repnz
addr16
xchg
cmp
outsl
nop
js
addr16
jp
push
test
dec
divb
xchg
push
or
imul
repnz
push
sbb
jmp
clc
sub
mov
shrl
lret
imul
stc
xor
xor
pushf
pusha
ret
cmp
fsub
mov
mov
test
movl
cli
shll
sub
dec
rorb
lret
mov
out
cmp
enter
lods
and
or
sahf
fs
push
fsubrl
push
lret
dec
ja
cli
ja
int
dec
jno
adcb
push
neg
jae
loop
imul
clc
cmpsl
adc
xchg
popa
js
mov
loope
mov
mov
jbe
xchg
jns
outsb
cmpsb
cli
pop
insl
push
adc
rcll
sub
jno
bound
loopne
cli
outsl
bound
sbb
dec
cmp
adc
cmp
xor
mov
mov
ret
ja
inc
cmp
mov
aas
mov
sahf
repz
aam
xchg
pop
inc
insb
mov
mov
mov
sub
push
test
mov
mul
mov
movsb
push
mov
sub
xchg
in
adc
mov
and
pop
clc
mov
pop
add
iret
loopne
jl
and
pop
lret
dec
in
or
imul
pusha
call
rclb
fwait
inc
pop
test
push
cltd
inc
xchg
mov
pop
loopne
or
mov
mov
stos
mov
iret
push
xchg
push
incl
lret
arpl
dec
add
scas
aam
lods
fsubl
cmp
arpl
adc
ljmp
test
shll
in
sub
pop
and
adc
mov
xor
cvtps2pd
sub
inc
or
sub
nop
jg
dec
cmp
inc
mov
stc
mov
pop
mov
sub
pop
repz
sbb
or
mov
xchg
outsb
jnp
and
std
bswap
or
call
adc
loopne
sbb
dec
xchg
mov
cli
cmp
xor
test
ds
or
testl
inc
js
mov
cmp
adc
mov
pop
ljmp
sbb
ss
sbb
sarl
dec
add
aaa
push
xlat
push
pushf
xor
test
adc
xor
shll
or
imul
pop
lds
ja
pop
sub
cmc
in
movsl
aad
in
loop
lods
jb
je
and
lret
inc
mov
popa
or
pop
cmp
mov
lea
pop
popl
jle
xor
aam
push
cmp
popf
mov
pop
outsl
add
mov
lcall
mov
insl
sub
cmp
std
add
stos
pop
push
stos
lods
mov
xorb
cmc
stos
enter
add
sbb
adcb
pop
cmp
idiv
addl
mov
ja
jno
cmp
mov
jns
xchg
jns
or
or
jne
in
and
or
out
push
mov
jmp
mov
call
adc
sub
pop
mov
cmp
mov
xor
lea
daa
inc
cmp
dec
push
mov
jnp
mov
push
pandn
cmpsl
jne
ret
sahf
into
cmp
pop
lock
ljmp
jns
leave
shlb
in
pusha
lret
clc
xor
popf
mov
mov
pop
mov
clc
negl
pushf
div
jne
jbe
mov
xor
xlat
push
repz
lods
aam
fdivrp
int3
and
incb
mov
or
sbb
lock
cli
lret
push
or
insb
or
mov
dec
push
test
pop
add
imul
cld
int3
rorb
iret
mov
nop
sub
or
push
addb
adc
icebp
pusha
and
pop
decl
clc
fisttps
push
dec
repnz
sbb
dec
mov
fs
lods
test
sub
add
je
test
ds
adc
shrb
cltd
ss
cli
cmpsl
dec
ss
cmpsl
sti
cmp
cmp
mov
cld
loopne
movsb
dec
lock
movsl
ret
cwtl
lods
in
loope
mov
aas
inc
sti
push
add
xor
inc
mov
pop
jp
in
jp
js
xchg
lahf
outsl
aas
std
in
lret
fs
outsb
cmp
jbe
into
xchg
out
out
jp
dec
cmpsb
or
js
add
iret
mov
and
mov
sub
lods
outsl
cmpsb
and
dec
mov
icebp
ret
jge
mov
add
sbb
push
mov
es
jne
push
and
subb
popa
fcoml
cmc
fistpll
jmp
movsb
jo
push
jno
shll
outsb
inc
andl
subl
mov
cmpsb
into
bound
in
cmpsb
insl
mov
adc
cltd
lock
popa
or
jmp
xlat
inc
mov
icebp
jnp
js
xorb
adc
in
inc
imul
mov
js
sahf
movl
imul
dec
roll
dec
ja
dec
pop
lock
xchg
sbbl
inc
mov
or
inc
cli
push
fwait
test
add
lods
inc
dec
aaa
imul
jecxz
add
fs
inc
adc
gs
dec
add
sub
adc
cmp
cmpsl
push
and
pop
ret
mov
xor
push
out
clc
pop
mov
shlb
pusha
cmp
cwtl
scas
das
loop
add
inc
fistl
mov
jne
mov
out
pop
and
cli
mul
sbb
dec
aad
mov
cmp
sti
dec
es
adc
and
sub
cmc
sub
push
ret
shlb
sub
bound
push
mov
mov
mov
mov
jnp
inc
inc
inc
inc
clc
push
xchg
nop
mov
cmpsl
pop
or
dec
jg
cltd
cmp
clc
xchg
mov
mov
movsl
push
sbb
mov
repnz
pop
cmp
xor
add
mov
out
out
test
adc
test
cmpsl
adc
shrl
ror
les
stos
imul
lcall
paddusw
movsl
cmp
fdivs
lods
add
pop
cmp
jae
mov
ret
sub
and
mov
in
inc
jl
sub
ja
test
pop
push
push
xchg
xor
enter
pop
mov
insb
icebp
sbb
clc
aas
push
pop
repnz
jp
sti
dec
fcoml
add
jno
mov
sub
jmp
push
mull
xchg
out
orb
mov
adc
mov
lret
sarl
mov
mul
popf
jmp
lods
xchg
leave
mov
push
data16
dec
and
test
lock
aas
push
in
pop
movsl
cwtl
clc
jle
lcall
or
out
mov
hlt
push
negb
xchg
mov
mov
iret
frstor
adc
push
pop
adc
cmpb
es
and
add
fidivs
dec
mov
mov
and
and
jmp
nop
fistpll
add
les
xor
jecxz
mov
into
std
sbb
ret
test
roll
popf
jecxz
retw
dec
mov
jp
add
out
mov
push
gs
dec
shrl
imul
dec
loope
dec
out
lods
fsub
mov
sub
add
repnz
aad
push
push
xlat
aaa
loopne
int3
add
lret
jp
orb
sub
leave
inc
sbb
adc
or
xor
adc
pushf
xchg
xorb
or
or
cltd
dec
mov
in
icebp
mov
xor
sbb
and
jbe
fistl
push
andl
test
pop
jbe
movl
xor
sar
inc
adc
push
mov
dec
fstp
lahf
dec
loop
movsl
adc
pop
adc
pop
in
ljmp
or
ja
sbb
pop
cmp
loopne
mov
inc
mov
fmuls
jbe
les
pop
xor
mov
bswap
bound
movsl
sub
fwait
ja
mov
dec
movlps
inc
popa
and
and
cltd
into
das
push
mov
adc
sub
xchg
lods
test
clc
dec
shlb
leave
adc
mov
leave
or
xor
insl
xlat
add
loopne
push
xchg
adc
mov
fldcw
dec
in
inc
push
xor
popf
cmpsl
inc
cmp
xchg
pop
shl
cmpl
lods
add
xor
mov
sub
xchg
stos
hlt
pop
nop
xchg
sub
frstor
jae
jns
mov
mulb
mov
sbb
call
arpl
jge
jno
push
or
xor
ljmp
dec
movb
jb
mov
icebp
jno
mov
movsb
movsl
jg
je
stos
cmp
lret
stc
and
jge
jp
mov
add
cmp
or
xchg
sub
add
sub
lds
pop
xor
xchg
or
es
push
push
cld
ficoml
insl
popa
mov
in
hlt
pop
rclb
clc
adc
sahf
outsl
aad
mov
jg
jns
out
fsubrs
or
ds
or
das
mov
xchg
xlat
je
push
mov
lock
mov
mov
call
loopne
rolb
inc
movsl
ja
subb
dec
iret
imul
movl
pop
inc
fsubrs
pop
hlt
cwtl
loope
sbb
push
out
imul
sub
int3
sbb
push
cmpsb
pop
lea
clc
sbb
out
test
rcr
push
nop
jne
sub
sbb
adc
push
or
lea
sbb
mov
pushf
aad
test
cs
in
mov
leave
stos
cmp
arpl
add
repnz
or
stos
sub
rolb
cmp
lcall
mov
ret
cmpsl
xchg
je
or
out
adc
je
push
or
movsb
icebp
or
daa
cmp
dec
mov
popa
xchg
test
push
cmc
jmp
xor
add
stc
pop
adc
mov
pushf
movsb
pop
inc
iret
fs
scas
faddp
fs
addl
or
scas
xchg
jbe
xchg
push
stc
adc
jb
jmp
adc
pop
std
lds
addl
push
fs
and
roll
mov
push
cmpl
sbb
pop
sbb
sbb
jp
inc
sbb
stos
cmp
mov
sti
add
std
xchg
push
outsb
jns
decb
jb
mov
pop
ret
sub
jmp
popf
mov
ja
int
hlt
add
cmc
sbb
mov
pop
arpl
pop
adc
add
sbb
out
pop
cmpsb
in
mov
mov
pop
nop
add
mov
test
mov
into
addr16
xchg
lahf
pop
in
xchg
cmpsb
imul
mov
ret
jo
repz
sub
rcrl
sar
xor
mov
les
sub
ss
addr16
test
dec
sub
and
pop
mov
sub
push
imul
sub
fcoml
and
adc
mov
std
push
scas
or
scas
sub
imul
xchg
inc
les
jle
rcrl
scas
std
aam
mov
xlat
js
xor
popf
in
divb
sbb
arpl
mov
sub
fcoml
sub
inc
cld
xchg
adc
cmpb
jecxz
cs
xchg
pop
or
icebp
dec
enter
lahf
test
mov
jnp
in
mov
in
or
lods
das
jo
cmpsl
ss
cmp
cmp
and
es
std
or
xchg
test
fcmovne
push
mov
scas
in
sub
and
cwtl
inc
or
or
xchg
cs
cli
insb
shrb
ret
adc
repz
bound
fiadds
test
push
jl
mov
mov
cmpsb
test
loopne
sbb
cmpl
fadd
aam
test
sbb
sti
cmp
jle
mov
or
mov
notb
sub
cmpsl
scas
dec
dec
inc
call
add
popa
jns
lahf
and
int
test
push
rclb
xor
cmpb
lds
jns
iret
jo
or
scas
sbb
mov
mov
or
mov
mov
mov
sub
xchg
inc
test
or
and
jp
mov
or
popa
cmpsb
xlat
push
mov
cli
aam
dec
lods
gs
mov
adc
dec
rorb
cld
dec
sub
push
out
pop
notb
mov
or
adc
inc
xchg
inc
adc
xlat
dec
inc
mov
scas
mov
bound
arpl
push
test
add
or
mov
imul
inc
lea
fisubl
out
and
fisttps
add
ss
fcoms
and
idivl
out
and
cli
rolb
sbb
aad
gs
cli
jo
xorb
pop
repnz
add
outsl
mov
in
mov
fsubs
lcall
dec
or
xchg
int3
lods
out
mov
cmc
push
cmpsb
cmpsb
mov
mov
repz
shr
fildll
lret
sub
or
popf
stc
stos
out
idivb
repz
es
adc
lret
pusha
into
push
pushw
mov
sbb
stc
imul
inc
mov
inc
push
lock
mov
fwait
daa
ret
lcall
rcrl
cmp
mov
jmp
lret
jnp
clc
sub
test
sub
popf
mov
and
inc
loop
mov
xchg
das
call
pop
jo
rcrl
scas
cmp
repz
xchg
xor
or
push
cmp
jae
imulb
mov
nop
hlt
in
lret
data16
dec
inc
sarl
lods
cmpb
sub
add
stos
mov
add
cmpb
insb
push
rclb
int3
in
inc
sahf
rcrb
in
or
fnstsw
sbb
popa
loope
push
xor
repz
xchg
fisubrs
fidivl
sub
adc
add
xchg
subl
aam
lock
iret
jne
adc
and
idivb
aam
sub
or
pop
sub
and
sbb
xor
mov
adc
popl
push
push
int
subb
scas
mov
bnd
jmp
lcall
aad
jnp
cli
jo
cmpsb
mov
sbb
insb
xor
std
aaa
outsl
mov
mov
push
jno
mov
fisttpll
ljmp
push
inc
mov
xor
push
xchg
and
mov
ret
xor
and
pushf
jo
xor
fwait
jbe
xchg
daa
pop
inc
jno
or
cwtl
cmpsb
xchg
mov
dec
stos
xchg
hlt
sub
rcll
sbb
loope
push
out
xchg
pop
icebp
rcll
in
pusha
mov
arpl
lods
cmc
dec
cmp
hlt
das
and
mov
adc
xchg
sbb
mov
test
jl
in
fsubl
jo
dec
pop
add
shrb
iret
sbb
xchg
lahf
jnp
clc
inc
popf
dec
ret
mov
cmp
filds
imull
dec
psubw
xchg
lcall
lock
cmp
push
push
sub
push
leave
sbb
inc
shll
inc
aas
aad
dec
lods
fcmovne
pop
fwait
scas
adc
xchg
cwtl
xchg
daa
push
repnz
cmp
cmpl
loope
or
fisttps
xor
add
push
push
scas
pop
enter
in
inc
push
das
adc
mov
sbb
out
xchg
stos
ret
fisttpl
jns
inc
and
cltd
sbb
testb
push
lods
or
push
idivl
rclb
test
sbb
fs
icebp
jp
cld
cld
push
movsl
scas
or
fprem
xor
cld
sarb
mov
mov
hlt
cltd
inc
mov
pop
sub
stos
out
lock
cmp
inc
stos
lock
xchg
dec
stos
sbb
pop
and
call
fsubs
mov
aaa
lcall
stc
test
push
ret
in
into
dec
lcall
mov
xor
in
xchg
in
test
cld
cmp
scas
mov
sub
xchg
shl
push
std
sub
sub
insl
popa
jl
ret
pop
int
mov
sbb
inc
into
ret
or
sbb
loop
push
add
push
das
jmp
lahf
outsl
test
xchg
fdivs
cmp
out
arpl
stos
pushl
adc
shrl
adc
test
jp
lret
mov
shrb
popa
lock
mov
pushf
xor
or
xchg
adc
cmpl
fisubrl
mov
mov
pusha
push
cmp
cmpsl
jns
icebp
shll
repz
jnp
data16
adc
out
cmp
or
pop
int
stos
xchg
stos
aam
mov
xchg
or
les
fsubrs
mov
jmp
sub
dec
fsubr
push
add
fistpll
add
push
in
orl
push
sarl
stc
xor
jl
push
repz
dec
jo
aas
jnp
imul
fucomi
jecxz
in
sbb
stos
leave
hlt
lds
into
jbe
dec
add
xchg
stos
xchg
mov
rorb
ja
cmp
push
jns
movsb
rcrb
xor
cmp
push
call
sbb
call
mov
push
cmp
icebp
aad
pop
loopne
gs
repnz
sbb
aaa
ret
in
sbb
pop
jno
outsl
inc
mov
leave
mov
xchg
movsb
int3
das
push
imul
push
jle
push
mov
daa
xor
outsb
ficoms
sarb
jbe
or
cltd
inc
leave
fwait
insl
sbb
inc
cltd
jae
and
or
shlb
and
cmc
mov
mov
push
mov
and
outsl
and
sarb
sbb
test
push
cmp
lret
xchg
inc
sahf
adc
iret
mov
push
push
rorb
data16
addr16
lahf
pop
je
test
imul
add
fdivrl
xor
gs
pop
sahf
jnp
stos
xor
aad
scas
push
data16
sbb
mov
arpl
enter
xchg
push
mov
lahf
pushf
sub
mov
lret
jnp
mov
aad
push
in
cmp
mov
jns
cmp
lods
enter
xchg
push
pop
imul
rolb
fildl
add
rcrb
cmp
jmp
cmpsb
ja
xlat
nop
push
mov
iret
cmpsl
insl
sub
push
jmp
or
push
lods
jnp
mov
jecxz
sub
pop
iret
xor
and
push
inc
inc
les
pop
sbb
in
pop
pop
add
xor
xlat
loop
ss
jnp
cmp
or
add
test
popa
dec
push
mov
mov
adc
fiaddl
jb
sub
mov
jmp
mull
ja
jmp
or
mov
outsb
roll
cmpsl
dec
ret
dec
into
faddl
cmpsl
imul
mov
shr
movsl
inc
fcoms
pop
scas
xchg
testb
scas
jmp
flds
filds
clc
mov
adc
mov
push
inc
es
sub
mov
mov
mov
adc
sbb
sub
lcall
fistps
mov
sub
xlat
lea
xlat
adc
scas
lret
xor
and
push
insb
sub
fists
jmp
aas
aaa
mov
push
rcrb
sub
cmp
lods
inc
popf
jl
in
mov
push
aas
sahf
aaa
inc
xchg
out
or
into
dec
inc
sub
scas
outsb
mov
xor
bound
fisubrl
mov
scas
cmovg
shlb
repnz
xorw
movsl
and
and
lods
in
inc
clc
cvtpi2ps
test
aad
xor
ds
mov
sbb
scas
addr16
xchg
inc
aas
and
adc
xor
pop
in
mov
sbb
lret
cli
rorl
out
jbe
inc
ljmp
pop
mov
out
icebp
lahf
leave
jge
lret
fs
mov
pop
out
inc
jne
xor
mov
imul
dec
add
cmp
and
movsl
lahf
ljmp
sbb
clc
add
icebp
push
push
ljmp
loope
sarl
inc
mov
inc
sti
pop
jmp
out
jge
mov
push
outsl
fisttps
out
and
incl
sbb
sahf
pop
adc
mov
fistps
scas
pop
xor
in
insb
push
cmp
adc
or
sbb
jmp
jno
adc
fnstsw
aam
mov
mov
sub
jbe
sarb
pop
cltd
xlat
aaa
int3
add
xor
into
pop
test
cli
push
mov
push
pop
repnz
xchg
mov
fcmove
dec
pop
movsb
or
sbb
inc
sbb
pop
cmp
jle
xor
ds
jb
lods
cwtl
adc
or
xchg
stos
outsb
shll
inc
adc
inc
sub
add
scas
test
lcall
mov
fdivl
pop
xor
rolb
or
sub
in
int
pop
cmp
mov
mov
lret
outsl
pcmpgtw
xlat
xor
adc
gs
adc
les
mov
xor
mov
adc
test
push
dec
mov
jle
and
adc
inc
in
jecxz
cmp
call
rorl
jl
sub
pop
lods
cmp
popa
sahf
adc
iret
fdivrs
cmp
mov
fs
add
adc
xchg
mov
lea
push
cmp
das
adc
jns
out
mov
stc
and
push
lea
push
and
sub
lret
in
aam
movsl
std
stc
dec
mov
xor
cli
mov
jle
int3
sti
sub
aas
mov
mov
mov
push
ret
test
push
insl
xchg
out
aam
nop
js
xchg
xchg
fldt
push
adc
subb
adc
add
je
rorl
shlb
mov
xchg
adc
sarl
and
test
cmpsl
in
pop
xor
loop
lret
out
fwait
jae
push
arpl
insl
dec
clc
es
cmpsl
and
xor
jecxz
cmp
pop
add
xor
cmpsb
or
add
pop
scas
inc
or
pop
push
pop
loopne
leave
cwtl
xchg
adc
mov
in
xor
xchg
mov
push
dec
repz
icebp
loopne
testb
adc
shlb
pusha
pop
or
inc
inc
cwtl
xor
nop
jno
xchg
mov
jb
enter
mov
xchg
ds
std
lods
rcl
sub
jbe
notb
and
lds
es
cwtl
jno
xor
ss
sbb
loopne
and
mov
ja
aam
xchg
push
outsb
adc
sbbb
scas
stos
adc
push
fstps
jae
leave
xchg
call
and
les
sbb
mov
scas
insb
dec
push
push
gs
sbb
cmpsb
mov
adc
outsb
out
xor
adc
xchg
xchg
cmp
pop
mov
pop
mull
push
xor
lds
jno
push
mov
fbstp
or
das
mov
stos
xchg
jb
in
movsl
mov
xchg
lahf
add
mov
loopne
out
jl
movsl
mov
jne
repz
xchg
push
out
loopne
adc
mov
push
mov
jecxz
test
addr16
jns
mov
ds
outsl
jnp
sbb
movsb
inc
les
fs
dec
push
int
jne
adc
popl
sbb
mov
sti
dec
clc
jmp
fld
sub
jnp
xor
add
pop
xor
call
cmp
mov
dec
and
je
lcall
movsb
push
sbb
mov
add
pop
lods
test
push
mov
in
push
lret
js
push
pushf
and
mov
cmpsb
push
divl
loopne
pop
mov
sahf
pop
mov
mov
mov
cmp
testb
pop
jnp
xor
mov
sub
push
cmpsb
sti
jle
pop
lods
xchg
mov
sub
fstpl
das
imull
out
push
mov
sub
sbb
fs
stc
mov
out
mov
fwait
insb
cld
dec
mov
push
enter
test
jns
in
scas
jns
pop
xor
jae
sbb
inc
and
gs
dec
inc
dec
arpl
dec
mov
mov
je
inc
daa
adc
xorl
dec
add
repz
mov
push
mov
aad
adc
dec
mov
xchg
icebp
adc
jbe
cltd
les
scas
xor
divl
lcall
outsb
xchg
add
je
push
shrl
jge
adc
xor
aas
ret
pop
cmp
pop
loope
jecxz
xlat
and
movsl
pushf
sbb
or
pop
imul
cmp
fcom
sub
ret
push
dec
repnz
dec
dec
push
cmpsl
mov
lret
shlb
dec
inc
push
pop
lds
xor
xor
lods
sub
jo
push
js
mov
mov
addr16
and
jl
call
sti
loop
jns
fs
inc
cld
pop
adc
adc
repnz
mov
add
cmp
popf
stos
test
inc
sub
pop
fbld
and
inc
xor
divl
cmp
sub
add
int
repnz
xchg
sbb
out
daa
stos
fs
leave
cmp
dec
push
test
stos
pushfw
push
cmpsl
int
cmp
xchg
ret
mov
pushf
jne
stc
lahf
cmpsl
dec
and
pop
imul
into
pop
jl
rcl
or
jo
and
xor
and
cmp
lcall
movsb
popf
inc
xor
mov
mov
jbe
jmp
outsb
sub
aam
add
push
popa
xor
ficoml
pushf
xor
call
jl
enter
jecxz
fcmovu
sar
sbb
out
and
nop
bound
cmp
and
ret
movsb
xorb
mov
es
dec
nop
mov
js
les
clc
insb
insb
mov
loopne
cmp
adc
ret
and
loopne
sbb
and
inc
cmp
enter
outsb
dec
and
iret
out
rcr
scas
loop
std
call
mov
dec
aas
test
or
jnp
mov
fsubr
jl
or
or
je
push
push
cs
push
cmpsb
mov
dec
shll
jecxz
pushf
jb
xchg
out
rcll
stos
daa
push
int
ja
pop
ret
or
push
or
mov
push
cs
push
adc
xchg
push
sub
mov
std
out
and
or
outsb
or
sbb
out
movsl
mov
sbb
rcl
xchg
mov
addl
mov
rcrb
ss
pop
mov
out
in
inc
sbb
aas
into
sub
cmpsl
sbb
js
je
mov
xor
xchg
roll
mov
dec
inc
scas
pop
es
push
cmc
and
push
adc
xchg
mov
xchg
sahf
xor
push
pop
or
or
and
gs
inc
xchg
xchg
mov
sub
cwtl
sub
ja
cmp
mov
mov
mov
jbe
pushf
jmp
push
sub
test
mov
cld
in
into
fidivrs
shrb
in
pop
addr16
mov
std
or
dec
xchg
sbb
mov
sbbb
mov
dec
in
jb
cmovl
out
gs
lret
imul
mov
xor
cld
or
push
xchg
xor
mov
lcall
adc
mov
mov
fwait
mov
int
je
scas
rcrb
loopne
add
insl
cmp
out
pop
cmpsb
pop
lods
out
insb
mov
ja
mov
dec
dec
xor
mov
xor
lcall
jge
repnz
inc
add
pop
sti
cmpl
mov
testb
pop
mov
xchg
mov
aas
outsl
mov
js
repnz
cmc
cmp
sbb
jl
mov
add
xchg
push
sbb
or
fwait
sub
movsl
ja
mov
adcl
fdivs
adc
fisttps
lods
pop
clc
dec
xchg
or
dec
test
fstpt
mov
gs
cmc
mov
inc
lods
test
in
cmp
outsl
push
fmuls
jne
sti
pop
adc
xchg
inc
stos
gs
std
outsb
inc
jno
jb
xchg
jge
fisttps
mov
mov
pop
test
lock
fwait
cs
xor
nop
mov
mov
dec
xor
sbb
mov
fisubs
push
shll
or
and
icebp
dec
popf
lods
std
test
lds
rcl
lea
bound
push
cmp
push
hlt
xchg
dec
mov
mov
inc
add
out
lret
push
call
popf
xchg
cmpl
dec
jbe
out
pushf
jne
hlt
lahf
pop
out
mov
out
int3
sub
and
loopne
pop
stos
cltd
loop
jno
out
cmpl
fucomp
test
xchg
add
movsb
inc
stos
add
adc
enter
cmp
mov
inc
lahf
sbbl
fcoms
outsl
fdivs
pop
jmp
mov
fdivrs
xchg
out
and
push
das
shrb
adc
add
icebp
xchg
repnz
cld
push
andb
aaa
jmp
push
cld
add
cld
mov
int
gs
pop
fcomp
adc
pop
loop
cwtl
jmp
int
cwtl
xchg
test
mov
dec
sub
movsb
pop
mov
dec
or
sub
mov
daa
adc
es
and
lods
pop
int
mov
fsubrl
cmp
testb
mov
insb
jae
jge
cmp
pop
jge
jecxz
sbb
cmpb
xor
shl
or
mov
popa
push
push
jp
in
icebp
jle
leave
push
fst
mov
aad
out
aad
dec
pop
dec
mov
pushf
xchg
push
enter
pop
add
popf
xor
data16
mov
pop
into
inc
lcall
sarl
out
jo
mov
jnp
sbb
std
loopne
mov
fildll
insb
outsl
jmp
mov
test
stc
xchg
dec
imul
hlt
call
stc
stc
out
xchg
popa
aad
lret
stos
loope
ds
inc
push
push
add
aas
faddl
jmp
cs
verr
mov
inc
call
aam
mulb
cmp
pusha
pop
inc
jmp
pop
stos
jno
xchg
inc
fistl
test
or
shll
hlt
dec
adc
sbb
dec
lea
dec
push
lds
hlt
pusha
popa
cmp
fidivrs
pop
fimull
outsb
push
xlat
mov
insl
icebp
adc
addr16
shlb
xchg
iret
cmp
mov
xor
scas
test
fs
aad
mov
pop
cwtl
cmp
lret
std
pop
jb
mov
inc
imul
pushf
movsb
adc
scas
decl
mov
js
cmp
je
xchg
push
in
shl
stos
mov
cmp
jno
pop
push
dec
test
push
xor
fadds
pop
sub
pop
xorl
jno
shll
mov
loop
and
cmpsl
sar
fldt
or
ss
and
hlt
jecxz
jmp
mov
xlat
push
popf
mov
sbb
dec
mov
icebp
adc
mov
idiv
and
mov
cltd
or
sti
aas
imul
push
or
imul
orb
data16
shlb
pop
arpl
fs
out
dec
inc
add
loope
dec
and
mov
push
std
adc
xchg
jle
lock
mov
fiaddl
mov
adcb
mov
addb
inc
insl
enter
mov
sti
idivl
mov
popf
int
ljmp
pop
mov
out
aaa
insb
enter
xchg
je
dec
xor
cltd
insl
inc
imul
fmull
lcall
and
or
popf
jno
lcall
ds
cmc
xlat
frstpm(287
fs
test
loopne
cld
mov
pushf
dec
mov
int
insl
and
jg
faddl
jmp
xor
jmp
mov
inc
test
sub
out
arpl
jbe
xor
inc
imul
inc
xor
les
dec
fwait
and
jbe
rorb
inc
inc
jge
cwtl
jo
cmp
jg
sub
push
imul
js
dec
adc
jbe
aad
sbb
repnz
sub
repz
mov
sub
and
aaa
fsubrp
cmc
pushf
xchg
mov
movsb
sub
adc
fsts
mov
fcomip
bound
pop
pop
stos
test
incl
adc
cmp
lcall
add
ja
shlb
popf
xor
mov
jle
imul
mov
test
xlat
cwtl
mov
imul
adc
xchg
adc
xlat
mov
loop
sub
insl
xchg
js
sbb
or
add
dec
iret
aas
jae
aaa
das
and
nop
xchg
pop
xchg
jge
cmp
leave
int
sahf
imul
push
push
push
adc
jmp
push
fyl2x
loop
xchg
jne
mov
jae
pop
sbb
dec
fdiv
call
push
arpl
or
daa
outsb
in
jmp
pop
pop
jb
xchg
mov
in
std
fcomps
jb
lock
dec
ljmp
insb
jle
out
mov
int
push
popa
push
pusha
dec
popa
sbb
inc
adc
sub
push
das
sbb
jp
daa
fldenv
mov
das
popa
sbb
dec
mov
adc
aas
and
repnz
outsb
fisubrs
scas
dec
xchg
push
pop
xchg
xchg
sub
mov
pusha
mov
movsl
insl
push
sbb
out
pop
jmp
loopew
hlt
aam
popf
dec
or
xchg
sarl
movb
mov
xor
pusha
mov
stos
mov
sub
int3
sub
push
sbb
sbb
ljmp
out
rcrl
repz
mov
mov
sub
add
test
shl
jb
cmp
and
pushf
stos
or
add
pushf
mov
movsb
and
xchg
fnstcw
adc
xor
in
mull
imul
scas
ja
mov
jle
sbb
fsubl
push
dec
dec
xor
into
jg
fsubl
pop
enter
je
ljmp
in
xchg
cmc
and
cs
adc
inc
insb
add
sub
xorb
pop
dec
push
divb
daa
sahf
sub
xchg
push
rcr
cmp
xchg
cli
pop
cmp
pop
xor
aas
popf
aaa
fidivrl
mov
insl
sub
jp
fs
aam
and
mov
lea
insb
out
repnz
xchg
movsl
movsb
and
in
jbe
mov
cmp
inc
sahf
lret
xchg
dec
insl
cwtl
mov
mov
lods
mov
clc
das
mov
jmp
fwait
lret
test
mov
jae
loope
sbb
mov
jmp
test
movsb
pushf
inc
cmp
cmp
adc
cld
push
xor
sbb
lock
int3
leave
sbb
in
or
js
sbb
adc
call
dec
jbe
pop
mov
negb
xlat
das
xor
cs
mov
mov
out
and
int3
mov
sbb
xchg
arpl
and
dec
cld
mov
rolb
jo
jp
and
cld
cltd
ret
nop
jno
jae
lods
ret
lds
push
or
rcr
leave
mov
xor
das
es
jb
pop
fwait
pop
out
nop
sbb
cmpl
jae
fs
or
sub
mov
jg
mov
or
ret
inc
insl
lahf
add
dec
inc
clc
xchg
clc
xchg
subb
sub
push
sub
inc
xchg
mov
add
divps
fdivs
push
imul
cli
repnz
in
jl
outsb
xchg
lea
fdiv
rclb
mov
xlat
pop
pop
aam
and
mov
mov
ficompl
repnz
scas
add
xchg
mov
sub
mov
negb
loop
cmpsb
out
push
sub
fdivl
pop
mov
outsb
push
and
dec
push
push
test
fcoml
mov
and
mov
inc
lret
inc
xchg
dec
adc
and
mov
lods
pusha
out
xor
and
cltd
pop
fstl
data16
xchg
add
lock
cmc
scas
in
mov
jb
jno
stos
testb
jmp
inc
pop
or
in
lea
inc
cmp
jo
aad
mov
push
or
pop
add
pop
push
pusha
call
jmp
fwait
mov
clc
loop
aad
ja
cmpsb
lock
ret
stos
dec
pop
or
daa
pushf
call
pop
jl
pop
add
clc
xchg
int
outsl
xor
hlt
addr16
pop
lods
xor
xchg
cmp
hlt
fprem1
popf
fldt
pop
push
sbb
rcrb
insb
mov
jmp
pushl
pop
and
dec
jno
and
mov
lods
push
out
jbe
mov
int3
clc
jl
fcmovnb
sbb
xor
push
imul
outsl
xchg
pusha
ja
jae
sbb
pop
test
and
and
mov
dec
sbb
push
push
aam
pop
or
or
jnp
cmpsl
pop
pop
ja
test
xchg
cltd
testl
call
sub
loop
push
push
repnz
ja
test
leave
movsl
cs
dec
out
mov
jae
xlat
jmp
mov
nop
mov
ljmp
outsb
test
lods
call
cmp
fs
push
xor
repz
cltd
cmp
int
push
pop
fstl
aas
sbb
adc
movsl
pop
lods
sub
sbb
vxorps
push
inc
mov
sbb
fstpl
inc
iret
jne
mov
mov
xchg
popa
outsb
lods
fdivl
mov
mov
lahf
cmp
lahf
jbe
jo
shl
pop
loop
mov
mov
xchg
fldcw
pop
and
js
and
pop
pop
sub
mov
sub
repnz
jae
xor
xchg
jno
fwait
cmp
punpckhdq
stos
aas
or
inc
or
pop
xorl
push
xor
pushf
push
fidivs
dec
call
fwait
shlb
sub
mov
out
xor
lods
mov
sub
mov
adc
daa
mov
mov
cmp
fs
mov
or
xchg
sbb
pushf
sahf
xor
stos
xchg
mulb
dec
daa
js
xor
aas
inc
mov
aas
cli
js
xor
into
push
pop
jnp
shlb
sti
je
sub
pop
notb
cwtl
lds
cmp
lret
adc
popl
cltd
js
lea
fbstp
popf
hlt
mov
in
xchg
outsl
jg
dec
dec
inc
xchg
push
test
push
push
push
int3
xchg
ficompl
or
inc
lea
mov
or
pop
shl
cmc
inc
push
jg
outsl
adc
pop
xchg
inc
sub
pop
fldenv
pop
jp
dec
call
int
adc
and
sub
fbld
mov
mov
xchg
sbb
mov
inc
mov
push
mov
cmc
call
push
mov
daa
sbb
inc
sti
dec
loope
mov
out
and
lds
fwait
sub
scas
mov
mov
ljmp
test
add
and
mov
lock
repz
dec
mov
xchg
addl
push
push
addl
cld
or
adc
test
and
cmp
ss
add
test
dec
jecxz
push
int
mov
xor
aaa
inc
lcall
arpl
mov
sbb
cmp
adc
and
lds
divl
outsb
lret
cltd
clc
lahf
in
push
inc
out
out
loop
mov
or
mov
lds
dec
sbb
flds
mov
sbb
mov
out
pop
mov
adc
push
add
push
jns
out
mov
or
test
jbe
xchg
inc
les
jb
mov
push
pushf
pop
sbb
lea
add
sbb
bound
xchg
insb
mov
dec
mov
pop
repz
imul
pop
xchg
dec
lret
pop
inc
js
pop
jo
add
adcb
stos
lcall
inc
in
jae
stc
cltd
jb
or
adc
xchg
mov
loope
mov
sbb
fsts
xor
cmp
or
cmp
mov
xor
adc
std
popf
repz
hlt
or
mov
aam
xchg
in
jbe
pop
stc
in
pop
pusha
pop
mov
mov
push
fmul
fcmovb
jg
pop
popa
mov
jbe
cmpb
inc
dec
popa
xor
inc
mov
das
jp
jp
mov
fdivrp
jmp
js
outsb
clc
fsubr
push
dec
gs
repnz
sahf
push
lods
in
or
inc
pop
fcoms
loopne
inc
sbb
inc
jp
aaa
dec
pusha
inc
sub
dec
dec
cld
sbb
addr16
push
mov
ret
cs
test
outsl
lods
movb
pop
add
push
movsl
repz
adc
aaa
mov
fsubl
ss
std
loope
xchg
fwait
out
repnz
das
ja
jmp
enter
mov
out
cs
test
jns
dec
sbb
pop
add
xchg
ja
mov
hlt
pop
inc
dec
inc
xchg
adc
out
cmp
or
daa
dec
jns
adc
dec
push
dec
leave
fildll
cmovno
cmp
divl
aas
mov
dec
xchg
hlt
adc
sub
xchg
hlt
neg
sbb
dec
sub
inc
popf
mov
testb
adc
xor
fdivl
lret
and
cli
add
out
or
shll
xchg
push
testl
sub
push
fcmovu
lahf
inc
in
xchg
jne
into
add
inc
lcall
mov
push
sbb
mov
push
adcb
sbb
jg
pop
push
insb
int
cs
cmc
or
sbb
pop
xchg
scas
mov
cmp
cmp
pop
cmp
hlt
xor
add
pop
mov
sub
xorb
test
xor
lret
icebp
xorl
sahf
mov
mov
sub
xchg
pop
popa
push
and
pop
dec
add
mov
divb
and
mov
jae
jne
movsl
adc
add
sub
ja
jp
inc
loopne
cltd
in
add
dec
into
ffreep
cmp
xor
fmuls
add
int3
ss
int
daa
mov
dec
xchg
out
xlat
leave
out
dec
adc
cmpsb
push
jl
ds
xchg
nop
out
push
xor
fmuls
add
push
subl
ficomps
lea
repz
in
fiaddl
jmp
add
scas
mov
leave
jb
outsl
rclb
in
neg
xor
and
adcl
sbb
push
cmp
fists
xchg
lahf
test
dec
cmp
adc
test
int
cmpsb
sbb
sbb
or
bound
mov
jno
addr16
pop
mov
jb
loop
mov
mov
xchg
popa
pop
and
inc
pop
in
push
mov
xchg
dec
xor
push
cltd
imul
adc
dec
jne
testb
icebp
pop
sbb
imul
repnz
xchg
arpl
pop
ja
shrb
xor
sbb
jg
jo
jecxz
out
jecxz
std
lods
pop
pop
inc
xchg
mov
mov
lods
stc
scas
push
push
ss
sbb
mov
dec
orb
out
pop
inc
lret
dec
or
jae
pop
xchg
jp
xchg
shlb
push
cmpsb
pop
dec
add
arpl
dec
xchg
scas
popf
mov
push
and
int
aam
cltd
ret
outsb
cmpsb
inc
das
xor
and
jl
dec
push
cmp
ret
and
xor
popfw
clc
push
pop
cmpsl
xchg
decl
dec
pushf
xor
mov
push
sbb
mov
push
mov
mov
loop
lret
mov
or
and
mull
mov
xchg
pop
cmp
pop
cltd
jno
into
dec
mov
aad
sahf
dec
xchg
arpl
push
sbb
dec
push
xchg
xor
push
and
mov
loope
xor
mov
add
jbe
or
jge
addr16
mov
aas
push
jp
and
pop
cmp
dec
ret
movsb
mov
shlb
jmp
pop
inc
lds
xor
sarb
jg
xlat
or
filds
and
xor
enter
out
sub
std
clc
test
std
sarb
xor
stos
test
cmp
pushl
push
mov
xor
mov
test
rcr
std
pop
lds
add
mov
or
mov
pop
rcl
mov
cld
pop
nop
lock
daa
fs
enter
jne
xchg
mov
mov
shr
push
add
fsubs
adc
fstpt
mov
cmp
sbb
imul
jmp
pop
pusha
jns
fisubl
lcall
mov
or
test
dec
movsl
or
mov
sbb
in
inc
int3
imul
or
sub
and
push
jmp
pop
xlat
es
test
sub
loopne
iret
adc
and
flds
sarl
dec
pusha
outsb
fmuls
rorb
icebp
int3
iret
pcmpeqb
imull
icebp
dec
dec
jmp
test
mov
addb
mov
sahf
cmp
adc
lret
test
xlat
ror
lret
sub
cmp
icebp
push
insb
daa
sub
push
das
subl
and
bound
movsb
insb
jg
push
sbb
test
pop
out
inc
mov
pop
mov
out
mov
leave
or
xor
cmp
jns
daa
imul
iret
mov
pushf
push
pop
and
mov
scas
pop
inc
cmpsb
xchg
std
arpl
out
pop
mov
hlt
out
pop
xchg
xor
ja
dec
mov
pushf
push
repnz
sbb
mov
push
push
insb
sub
sti
and
push
mov
mov
popa
sub
mov
es
cmp
rcr
adc
mov
pop
out
in
and
loopne
in
movlps
mov
in
leave
dec
ljmp
pop
fwait
mov
and
hlt
es
ljmp
nop
ret
adc
daa
ret
mov
andl
jns
js
push
cmp
scas
cmp
clc
subl
ret
sti
cmpsb
stc
mov
sub
pop
inc
push
hlt
xlat
daa
sbb
pop
fisubrl
test
fcmovne
sti
repz
mov
sbb
mov
mov
push
jbe
pop
mov
fistpl
or
psrad
std
sbb
inc
aas
dec
mov
cwtl
ret
ret
ljmp
pop
and
mov
cmc
cli
push
xchg
imul
mov
loop
jmp
std
lahf
or
daa
repz
push
mov
add
cli
inc
fstps
pop
ret
or
lret
and
fdivrl
and
pop
xchg
inc
sub
mov
sub
sub
inc
dec
mov
in
xchg
push
js
popf
pop
push
std
shlb
adc
mov
shll
lahf
test
or
aas
fdivrs
inc
or
cmp
outsb
movsl
xor
push
push
fistpll
call
mov
imul
cmp
add
fcmovnb
jl
adc
jne
push
lahf
inc
sbb
jp
rcl
jl
hlt
mov
pop
adc
pop
and
push
in
xor
fnsave
das
repz
jecxz
cmp
mov
cmpsb
loop
push
shrl
orb
in
pop
mov
out
mov
mov
out
push
hlt
icebp
pop
mov
inc
xor
adc
shr
bnd
lret
pop
mov
mov
mov
insb
mov
rcll
repnz
sbb
adc
jp
adcl
mov
cmpsl
outsb
pop
pushl
jb
rorl
jg
mov
pop
pusha
movsl
mov
lcall
adc
xchg
bound
bound
inc
mov
enter
push
outsl
ljmp
popf
fistpl
sbb
mov
fs
js
sbb
mov
mov
pop
jmp
loopne
addb
and
fwait
out
mov
cmp
jecxz
xchg
out
stos
shrb
ret
dec
xchg
add
sub
jle
cmpsl
mov
mov
insl
inc
push
fwait
lret
adc
and
test
stc
mov
jl
and
pushf
leave
loop
dec
push
lods
mov
inc
cltd
and
sbb
xchg
cmp
cmp
push
xor
mov
les
xor
das
jno
fcoms
and
stos
pop
leave
dec
pop
in
push
xor
test
ja
hlt
jmp
xchg
bound
cmp
fldenv
lcall
lcall
lock
sbb
pop
imul
fnstcw
sub
mov
aas
push
pusha
push
cmp
cmp
push
bnd
jb
rorb
fwait
jb
inc
lock
insl
mov
and
arpl
cmp
fisubrl
js
nop
push
loopne
adc
push
jge
push
dec
cmp
and
test
in
cmp
out
outsl
ljmp
jl
dec
or
lret
cld
testl
loopne,pn
jns
cmp
pop
loopne
sarb
lods
xor
and
sbb
mov
xchg
sub
out
cmp
and
imul
loop
sub
outsl
fldt
and
sahf
rcll
mov
mov
js
mov
dec
loope
decl
fiaddl
adc
or
and
js
dec
mov
adc
cwtl
add
pop
imul
ds
add
into
add
xchg
pop
fdivr
xchg
in
shrb
and
sahf
xor
push
lods
movsl
push
pop
add
fnstsw
cltd
push
dec
loope
sub
stos
add
and
ret
cmpsl
push
push
aas
add
sub
sarl
pop
xlat
insl
mov
xchg
xor
xor
xchg
jns
xchg
adc
ja
fildll
clc
cltd
nop
push
ret
pop
notb
jbe
mov
scas
sarb
aam
add
cltd
cmp
std
out
and
inc
insl
scas
lds
and
mov
mov
insb
lahf
mov
mov
scas
mov
xor
jne
arpl
addr16
sti
inc
lods
enter
rcr
scas
jb
ret
mov
jae
cmp
inc
fcmovnu
fistpll
mov
mov
mov
ret
xor
or
dec
iret
lds
loopne
mov
outsb
dec
ja
jle
jbe
popfw
pop
mov
loop
lds
sub
jne
mov
fs
sub
xchg
and
jecxz
xor
dec
jl
xchg
inc
push
fwait
pop
jp
insl
or
mov
jns
js
lcall
lcall
popa
mov
jno
into
dec
pusha
shl
repnz
cmp
sbb
jp
lcall
out
push
adc
push
dec
lds
jnp
cmp
add
mov
sbb
jo
jp
hlt
push
jns
cld
inc
cmpsb
testl
gs
sbb
fstps
sub
outsl
sub
popa
into
cmp
loope
shr
pop
ds
cmc
ds
pusha
in
pop
adc
fs
imul
push
adc
ror
sub
nop
mov
insl
pop
jp
sti
in
lods
movsb
imul
rorb
data16
cmp
sbb
adc
add
aas
inc
pop
outsb
xchg
push
dec
mov
lret
xor
sbb
mov
jo
aaa
cld
or
ds
sub
jl
xchg
jecxz
jle
xor
data16
shrb
stos
jp
stos
push
mov
shlb
mov
cmpsl
cwtl
adc
sub
sub
lods
sti
mov
dec
sbb
stos
sti
pop
mov
add
pop
adc
jb
shl
test
gs
shl
shlb
mov
lea
daa
inc
push
mov
push
aaa
lret
dec
aas
push
icebp
loop
movl
aas
cmp
lret
sbb
dec
out
popf
mov
aad
mov
loopne
testb
mov
or
jecxz
pop
daa
dec
or
jne
push
mov
and
pop
nop
lock
xchg
ja
jmp
xchg
fisttpll
xchg
outsb
sbb
adc
fldenv
add
dec
leave
lock
loopne
ret
stos
push
orl
gs
or
dec
idivl
repnz
sbb
sti
je
les
and
mov
mov
inc
cmp
xor
or
repz
and
pop
ljmp
fstpl
lods
sti
add
pop
push
addb
icebp
aam
xchg
pop
fprem
int3
mov
mov
movsb
cmpsb
xchg
cmp
inc
std
ret
cltd
jae
mov
lahf
mov
arpl
jmp
ja
dec
imul
pop
pop
pop
adc
mov
lds
xchg
loop
mov
fildll
std
adc
mov
shr
push
jb
xchg
push
inc
or
dec
lret
jmp
mov
jl
xchg
cmpsb
jno
into
or
nop
jge
in
dec
sbb
ret
loop
rorl
addl
jb
test
sub
xor
pop
sti
jb
imul
adc
sti
sub
sbb
mov
out
mov
orl
adc
sub
and
mov
insl
and
or
lds
hlt
xchg
and
cli
dec
pop
dec
sar
add
dec
arpl
mov
inc
mov
dec
jne
repnz
push
xor
push
repnz
sbb
push
loope
push
jmp
pop
xchg
fmulp
pop
mov
pusha
daa
arpl
addb
movsl
aad
pop
mov
lcall
sbb
push
push
inc
insb
sbb
lcall
cltd
inc
mov
dec
xor
cmp
rol
and
test
cmp
cs
repnz
cmpsl
jne
xor
pop
ja
cmp
rorb
sahf
push
sbb
or
cmp
aaa
adc
fisttps
mov
aas
xor
cmp
mov
ss
mov
dec
in
push
mov
inc
outsl
mov
dec
mov
jl
inc
mov
jp
push
or
fdivrs
pop
push
cmc
je
nop
test
sub
and
imul
cmpsb
sahf
popl
daa
movsl
mov
add
in
sub
push
jns
mov
cli
es
inc
fildl
push
sub
clc
es
std
fsubl
inc
xchg
inc
jl
shrb
jno
icebp
repz
jp
xchg
push
dec
lods
and
inc
cmp
fmul
cmpsb
mov
inc
mov
rorb
bound
adcb
outsb
sub
or
sub
int3
add
inc
or
stc
sbb
cmp
fcmovnu
jbe
pop
pop
enter
mulb
pop
nopl
mov
jmp
jp
ljmp
adcl
or
add
js
mov
jns
pop
push
icebp
mov
addr16
rclb
sbb
inc
mov
out
cmp
sub
fwait
inc
outsb
repz
push
insl
push
mov
ret
xor
insb
cs
jbe
inc
sub
aam
push
pusha
es
in
add
in
inc
pop
out
dec
mov
pop
xchg
arpl
mov
dec
add
xor
repnz
jae
je
cmpsb
hlt
nop
pop
jle
mov
movsb
std
adc
cmp
rcrl
and
lods
aad
sub
popa
pop
mov
push
lock
lods
jmp
add
orb
inc
sub
outsl
push
sbb
stos
and
push
add
out
mov
push
pop
mov
incl
out
or
cli
lds
xor
xor
dec
push
call
mov
insl
jne
add
sbb
mov
adc
ret
cltd
and
inc
push
sub
mov
mov
lods
push
gs
or
add
or
mov
dec
sbb
jge
aaa
mov
xchg
push
adc
gs
es
movsl
add
js
push
mov
mov
data16
out
sub
and
adc
xor
lret
imul
mov
add
sar
jbe
mov
ret
mull
lret
mov
adc
mov
sub
xchg
aas
sub
je
stos
xchg
shr
mov
sti
rcll
inc
xchg
pop
ja
ss
leave
mov
out
xor
outsl
xchg
mov
cltd
mov
cmp
jns
lret
mov
adc
pop
lods
imull
cmp
dec
lods
and
aas
movsl
xor
sbb
out
fisttpl
movsb
in
lods
ja
pop
bound
xor
xor
xchg
jb
adc
inc
inc
inc
xor
ja
push
std
and
push
or
lgs
xchg
lock
jb
sbb
mov
imul
test
push
push
or
cwtl
call
ds
add
enter
or
inc
push
call
cmp
shlb
nop
sub
mov
out
sbb
push
xor
xor
push
xchg
sysenter
pandn
pop
xor
inc
gs
mov
and
cmpsb
dec
push
arpl
loopne
sub
mov
and
fcmovbe
mov
dec
xor
pop
loopne
adc
sub
dec
stos
dec
mov
push
aaa
adc
or
xchg
or
xlat
fdivrs
out
std
or
inc
lods
add
test
in
imul
call
xchg
fdivl
mov
and
jg
add
shlb
nop
bound
je
push
ret
mov
test
popa
loop
pop
shl
sub
jp
pop
adc
movsb
jae
xor
cmp
jp
movb
popf
enter
and
mov
movl
inc
pop
arpl
mov
pusha
arpl
cmpb
inc
adc
xor
inc
pusha
dec
xchg
clc
incl
ret
push
out
frstor
roll
out
aam
mov
dec
inc
pop
ljmp
int3
adc
inc
lret
scas
sub
push
aas
and
popf
xchg
pop
push
ret
orl
in
jl
sarl
cld
mov
mov
cmp
adc
adc
pop
inc
fdivr
bound
bound
or
test
lcall
inc
pop
add
loop
cmp
mov
es
mov
jnp
xor
xor
and
int
adc
dec
imul
add
xchg
mov
mov
lds
xchg
in
sbb
push
out
and
lahf
adc
mov
ljmp
sub
mov
in
loopne
sub
jb
icebp
mov
xlat
fs
dec
mov
pop
in
dec
subb
xor
jmp
dec
into
je
aas
nop
xor
lret
push
in
lds
repnz
mov
repz
aaa
aam
mov
in
mov
daa
aam
xchg
dec
repnz
jbe
in
pop
pop
pusha
std
cld
jge
dec
jae
stos
inc
es
xchg
push
xchg
out
jnp
push
shrl
loope
cltd
xor
movsl
pop
mov
roll
es
aam
pushf
outsl
or
cmp
mov
out
push
pusha
testl
sarb
icebp
jmp
mov
inc
adc
andl
jle
fstps
rcrb
push
movsb
mov
and
xchg
jb
or
push
outsl
inc
adc
ja
adc
dec
nop
xor
push
push
outsl
inc
mov
jo
lea
sub
addr16
pop
sar
push
shl
fmull
rorl
dec
imul
and
enter
dec
cmp
push
and
mov
push
in
cmp
pop
inc
add
out
in
cs
ret
pop
enter
nop
sbb
mov
out
dec
cld
xchg
je
and
mov
cmp
dec
jecxz
push
sarb
inc
jg
sahf
popa
mov
bound
xchg
stc
add
xor
jae
cltd
push
rclb
leave
sbb
push
dec
ret
imul
stc
lcall
out
cmp
lret
mov
mov
push
cmp
or
repz
clc
push
xchg
call
cmp
fadds
or
lahf
mov
fmuls
jecxz
and
xor
sbb
out
fs
mov
mov
push
mov
push
add
lcall
outsl
cmc
daa
popf
test
push
inc
pop
cmp
xor
adc
xchg
in
cmpsl
xchg
push
jge
inc
in
lcall
mov
and
gs
mov
aas
jle
sub
aam
sarb
sbb
stos
mov
jg
mov
mov
jno
or
arpl
jmp
in
jns
icebp
jbe
sarl
sub
push
push
xchg
xor
mov
jmp
push
or
xchg
inc
fdivl
sub
push
or
push
sub
push
mov
sahf
pop
hlt
out
jecxz
fs
jo
dec
jno
xchg
jmp
push
or
pop
pop
inc
loope
daa
lock
inc
fs
cmp
int3
stos
lds
mov
xchg
sbb
or
mov
dec
jae
pop
xor
notl
pop
and
xchg
jle
out
add
daa
aad
leave
popf
loope
pop
push
and
jbe
lahf
sub
and
and
cmc
add
add
mov
xor
ljmp
in
inc
icebp
into
xor
or
in
popf
mov
push
cmp
fistpll
insl
inc
dec
lods
enter
fsubs
in
jge
cmp
inc
je
pop
inc
loopne
dec
mov
ja
pop
push
dec
push
jmp
je
fstpl
imul
push
pop
enter
les
and
cli
in
pusha
test
dec
addr16
mov
or
insb
xchg
pop
loope
sbb
mov
aam
jp
adc
cmpl
push
rcrl
or
jbe
sbb
adc
cwtl
sub
sub
cmpl
lods
std
pushf
icebp
fnsaves
sub
gs
fwait
mov
stos
stc
negb
or
bound
mov
jmp
inc
jle
inc
xor
adc
mov
addr16
repz
std
mov
dec
add
mov
je
push
push
stc
pop
sub
addr16
daa
loopne
mov
or
enter
in
xchg
sar
jg
sbb
push
inc
in
inc
add
fmuls
out
inc
mov
mov
xor
test
dec
mov
mov
or
dec
aam
in
outsb
test
inc
std
sub
sti
ljmp
fsts
lock
sbb
inc
pop
fsubrl
jo
push
cld
js
sbb
inc
cmc
inc
mov
mov
int3
ret
sub
jl
out
mov
add
shrl
or
push
mov
inc
loop
rclb
jne
hlt
popa
dec
push
jle
mov
ss
mov
ret
loopne
fstps
xor
push
not
std
push
sarl
xor
sub
push
cs
sub
or
mov
insl
sbb
repnz
lahf
or
pusha
int3
dec
adc
sub
inc
dec
add
jne
ficomps
cmp
mov
in
xchg
lea
inc
repnz
or
jae
lods
insb
mov
mov
addr16
jbe
adc
ja
stc
xor
inc
scas
adc
je
test
jne
es
movsb
daa
es
mov
dec
shlb
in
jmp
pop
mov
sub
cld
lahf
negl
jle
int
shl
cs
push
jae
mov
mov
testb
sub
and
pop
std
push
add
rcrb
pop
out
inc
and
mov
mov
xchg
pushf
xchg
push
leave
lea
xor
icebp
test
rorb
pop
stos
sbb
jo
and
pop
dec
mov
pop
lods
pop
cli
ret
cmp
lret
push
mov
xchg
repz
sbb
sbb
fcoml
and
stc
push
xor
out
or
lcall
ja
out
mov
les
rcl
std
adc
jge
stos
movsl
out
out
stc
popa
mov
mov
imul
jp
out
inc
gs
gs
inc
mov
leave
cwtl
jo
mov
pop
mov
lahf
push
jg
mov
cmpsl
inc
inc
test
fcmovu
decl
and
arpl
jnp
xchg
xor
inc
stos
fisttpl
jns
sti
outsb
push
xchg
femms
nop
inc
nop
push
in
sbb
outsb
mov
in
je
int
jle
inc
lock
call
ljmp
push
outsl
sbb
popf
inc
out
fs
jns
outsb
xor
sbb
and
push
adc
inc
mov
or
mov
stc
rol
mull
loope
inc
add
into
cmc
or
cmp
xor
cmpsb
adc
cmp
rorb
lahf
inc
mov
pop
push
push
inc
aam
mov
xor
ljmp
fsubrl
movsb
push
jmp
mov
sub
xor
xchg
cmp
daa
movsb
jb
ja
rorl
aad
into
insb
and
mov
dec
mov
lea
js
dec
gs
dec
arpl
mov
std
hlt
or
sub
nop
sub
dec
mov
loop
push
xchg
jg
mov
testb
and
sbb
ljmp
mov
jno
std
inc
cmp
sub
nop
dec
inc
lret
dec
xchg
pop
cltd
sub
and
sub
xchg
push
out
push
dec
enter
cwtl
xor
cmp
sbb
out
sub
mov
dec
xorl
pop
hlt
fstl
cmpb
loop
xchg
les
fdivrs
test
xchg
scas
mov
ss
movsb
sbb
andb
lret
out
inc
sbb
mov
push
insb
sbb
cmp
sub
in
mov
mov
xor
push
mov
maskmovq
les
out
pop
mov
cmp
xlat
mov
xchg
mov
xchg
leave
inc
lret
mov
lods
dec
rcr
clc
pop
add
jecxz
mov
cld
inc
pusha
dec
fs
mov
idiv
loop
jl
jp
idivl
out
sbb
jl
cltd
lds
nop
pop
xor
xchg
pop
les
divl
lcall
lcall
jae
mov
push
inc
imul
or
std
jg
movsl
push
mov
outsb
sbb
push
std
inc
sbb
sahf
idivl
mov
dec
arpl
jecxz
cmp
jmp
insb
movsb
mov
test
cmp
nop
rclb
les
xchg
mov
jno
xchg
insl
push
sub
les
push
mov
je
xor
es
scas
enter
aaa
nop
pusha
insl
fwait
rolb
gs
jne
push
popf
or
dec
int3
aam
or
mov
lock
jno
mov
idiv
xchg
mov
xchg
jae
xlat
mov
out
dec
add
dec
sbb
pop
mov
outsb
push
insb
cmovl
pop
xor
xor
cmp
repnz
add
sbb
and
test
hlt
out
and
add
stos
divl
pop
cmp
lock
push
mov
dec
fs
xorb
xchg
sbb
sub
inc
jecxz
jbe
jle
sub
jno
jl
or
dec
ss
in
aad
or
jle
movsl
xchg
mov
mov
jb
out
pop
jne
dec
or
mov
std
lock
in
cmp
into
sub
push
mov
ds
inc
into
add
xor
sbb
cmc
in
lret
repz
jbe
cmp
xor
arpl
push
popa
and
push
repz
xor
hlt
adc
mov
cmp
sub
ds
or
jl
aaa
imul
enter
sahf
mov
xor
sbb
pmulhw
addr16
mov
cs
loope
lods
stos
xchg
test
pop
inc
pop
in
cltd
xor
ja
into
inc
sbb
mov
in
dec
mov
sbb
sbb
cltd
add
push
jle
mov
sti
fidivs
fs
adc
mov
jbe
jl
or
or
jl
in
and
xor
in
call
push
push
lock
push
lret
and
rcrb
insb
pusha
push
push
pop
push
dec
push
xchg
rcll
push
push
mov
push
mov
repz
dec
call
or
fnstenv
cs
sbb
adc
sub
and
mov
lcall
push
clc
xchg
or
int
loop
fstl
cmp
mov
push
and
mov
adc
pop
mov
insb
and
push
jnp
gs
jbe
cmp
push
jnp
cmp
mull
pop
cmp
fisttpl
imul
repnz
xor
test
lret
imul
ret
pop
sbb
adc
cmp
inc
cmp
sub
out
jg
stc
in
push
sbb
ficoml
sub
ljmp
push
insb
mov
sarl
pop
pop
ret
lock
mov
cmpsl
pushf
inc
andl
adc
add
mov
pop
in
push
pop
std
xchg
fdivr
adc
leave
cmp
jmp
in
popa
push
mov
mov
pop
cmpl
andl
insl
aad
pop
int3
mov
cld
inc
cmp
and
das
out
jo
inc
push
das
jmp
push
cmpsb
mov
repnz
push
stos
int3
fwait
push
xchg
idivl
sbb
rclb
inc
xchg
fnstsw
xlat
cmpsl
enter
pop
out
outsb
in
inc
push
push
lods
push
cwtl
jnp
mov
sbb
std
in
imul
iret
fwait
sbb
push
add
notb
mov
shll
orb
leave
data16
outsl
insb
icebp
dec
and
mov
aam
or
jp
sbb
jns
mov
mov
cmp
aaa
or
icebp
rorl
inc
sub
cld
imull
loope
or
jl
xchg
sbb
dec
push
mov
xlat
inc
imul
jge
es
sbb
mov
pop
xchg
aaa
out
mov
sar
mov
push
dec
pop
loopne
adc
mov
mov
cltd
adc
insb
xchg
scas
lret
cmpsl
test
mov
fmull
push
xchg
cmp
test
cmp
xchg
adc
popa
sub
aad
or
mov
sahf
push
call
lea
push
sarl
iret
imul
ljmp
pusha
sahf
fdiv
sbbb
repz
jl
mov
cmp
or
mov
inc
dec
pop
sub
sub
mov
fstpl
dec
push
pop
mov
cmpsb
push
cmpsb
lcall
cmp
mov
xchg
push
iret
fdivrs
adc
aas
jg
mov
je
call
fbstp
push
mov
sub
inc
jmp
movsl
pop
mov
or
les
rclb
adc
pop
push
cmp
sbb
pop
mov
push
inc
push
cmp
add
cli
or
jmp
lret
dec
std
sti
mov
std
std
sub
mov
enter
mov
outsl
xor
fs
mov
js
pop
jno
out
icebp
mov
inc
hlt
sbb
out
inc
add
lret
and
add
push
cmp
je
jmp
fcomps
and
lret
mov
hlt
cmp
sub
fstl
add
lret
xor
and
dec
push
sbb
and
cmpsl
mov
jns
cmp
mov
mov
sar
inc
add
js
mov
jecxz
movsl
dec
subl
xor
sbb
mov
xchg
mov
push
sbb
sbbl
push
jb
shlb
mov
lret
movsb
jb
mov
int
aaa
cmp
les
rclb
jns
call
mov
fnsave
sbbl
aaa
out
pop
mov
jl
adc
fdivrl
fnsave
mov
dec
xor
insb
and
pop
sub
in
cmp
or
out
movsb
popf
nop
andb
inc
leave
dec
push
mov
bound
pop
jl
out
adc
cs
and
push
popf
sub
fists
xchg
ret
dec
xor
mov
or
mov
pop
scas
jne
push
lret
adc
push
loope
adcl
subl
mov
daa
aaa
adc
js
dec
dec
sti
insb
jns
mov
cmpsb
call
sti
pop
mov
mov
cmp
ja
out
les
clc
and
das
cli
mov
jmp
gs
mov
jmp
out
xchg
sbb
mov
cmp
push
push
out
mov
mov
or
std
dec
inc
fimull
xchg
mov
ss
loopne
out
adc
movsb
xor
addl
pop
sbb
adc
mov
mov
ljmp
ja
push
lcall
ret
mov
cmpsb
lcall
sbb
ja
xchg
add
sub
xchg
mov
and
jno
xor
sub
vaddsd
test
arpl
sti
pop
leave
mov
inc
inc
push
mov
mov
cmp
add
inc
cmovp
jecxz
call
xor
fmuls
adc
and
sub
adc
test
out
cmp
xorb
xor
das
out
stc
std
jmp
inc
cmp
xchg
jle
mov
jne
pop
xchg
sbb
movl
jge
mov
xor
add
dec
fldt
test
pushf
dec
push
mov
imul
sbb
jl
inc
hlt
shll
push
mov
clc
cmp
lcall
inc
cwtl
aad
mov
mov
push
repnz
lret
hlt
pop
jne
aad
xchg
mov
add
cli
jge
clc
fisubrl
push
pop
in
addr16
scas
jnp
xor
mov
xchg
outsb
add
add
inc
push
xor
add
add
jne
int
imulb
cmpsl
nop
data16
inc
dec
jge
ja
mov
jne
xorb
mov
adc
inc
in
push
sar
sahf
sbb
aaa
movsl
roll
push
add
mov
ljmp
mov
test
test
popa
jb
lahf
fbstp
enter
in
sub
std
popa
cmp
xor
push
pop
ficomps
jbe
and
jecxz
xor
jmp
mov
jge
repz
ficompl
push
pop
push
negl
adc
insb
fistpll
inc
loopne
xchg
int
xchg
repnz
cmp
cmpsb
aas
jl
and
push
lcall
scas
push
or
mov
mov
repnz
jecxz
inc
add
mov
jbe
dec
xchg
pop
fcos
out
jecxz
movsb
jnp
jp
adc
cmp
ror
jb
sub
add
pop
movsb
xchg
mov
andl
loopne
icebp
daa
jge
dec
ss
jmp
adc
pop
xchg
aas
imul
rorb
arpl
inc
imul
add
push
cmc
sub
mov
inc
jmp
and
cli
or
push
ljmp
rcll
aaa
sti
scas
lea
push
sbb
das
mov
je
xor
push
hlt
add
mov
sbb
outsb
imul
dec
sbb
and
xchg
jb
and
addr16
push
fmull
int
jae
xchg
adc
mov
mov
out
out
sar
sahf
clc
and
jecxz
shll
addb
sub
loope
roll
mov
sbb
scas
test
add
cmp
sbb
gs
cwtl
rclb
jl
mov
xchg
mov
xor
inc
mov
loop
pop
lds
dec
divl
mov
mov
mov
cltd
xchg
cmpsb
and
push
sahf
lahf
outsl
xchg
inc
sbb
imul
arpl
icebp
mov
push
inc
shl
aad
cmp
mov
scas
std
pop
inc
inc
scas
into
push
push
vcmpsd
icebp
push
cmpsl
mov
sub
xchg
add
dec
inc
and
addr16
sub
jle
or
jae
sbb
insb
pop
mov
adc
clc
inc
and
test
mov
call
pop
push
add
mov
dec
add
push
lods
sarb
notb
loope
je
addb
data16
mov
clc
dec
xchg
jmp
sub
minps
add
std
mov
pop
cmp
clc
iret
in
movsl
loope
sbb
repz
popf
mov
getsec
stos
mov
into
push
mov
cmpsb
fwait
sbb
jecxz
xor
sub
xchg
sbb
push
mov
mov
pop
add
popf
cld
or
rorb
mov
jb
jp
push
cmp
xchg
fisubrl
jg
cmp
jno
lds
data16
ss
test
sub
and
mov
scas
sub
or
sbb
sbb
addr16
jg
popa
jle
sbb
je
and
sahf
xchg
ss
repnz
jecxz
test
add
mov
cmp
das
dec
push
mov
cmpsb
popa
jns
cmp
clc
ret
xlat
pop
xor
outsb
loop
add
fildl
loop
and
sbb
add
enter
mov
push
push
in
es
or
int
xor
popf
sub
ljmp
mul
push
in
sbb
insl
scas
adc
js
xor
in
push
stc
jne
test
xchg
jmp
sti
ficompl
mov
fsubp
mov
jmp
int
sahf
add
xor
int3
pushf
add
addb
pop
shrl
lea
rcl
pop
lret
cmp
pop
pop
push
ror
test
ret
popa
nop
cmc
loope
aaa
cmpsb
push
jo
shll
pop
cmpb
bound
jge
mov
xchg
jl
sub
or
sbb
sub
jnp
xorb
pushf
xor
test
sub
pop
xchg
or
and
cmp
out
test
lds
mov
jbe
dec
push
xchg
arpl
cli
xchg
pop
imul
push
and
xlat
mov
pop
gs
imul
mov
push
lds
fcoml
push
pop
and
mov
int
add
push
sti
or
rolb
outsl
fsubl
stc
call
push
or
dec
pop
dec
je
js
push
sbb
xchg
ret
mov
push
push
dec
cwtl
fld1
lock
jl
xchg
nop
div
cli
jmp
xor
xor
stc
sbb
xchg
mov
js
pop
jae
inc
pushf
hlt
nop
movsl
pop
adc
inc
rcr
ja
movsbl
pop
pusha
loopne
pop
fwait
dec
loop
lea
adc
jnp
push
daa
xor
addb
jecxz
push
dec
fmulp
stos
cmp
in
xchg
inc
add
js
loop
ja
xchg
nop
push
mov
rcll
mov
fidivs
dec
xor
inc
in
push
sarb
sahf
and
xor
jmp
mov
fcoml
xor
jl
into
popa
fistps
ds
stc
jle
rol
fnstcw
push
xlat
cmpsb
loope
adc
bound
fdivs
push
out
pop
je
lret
or
inc
ljmp
arpl
lcall
push
inc
jns
movsb
pop
sbb
mov
mov
inc
fbld
xchg
adc
dec
cwtl
xchg
enter
faddl
or
jb
push
sbb
xchg
sub
cmp
xchg
lods
gs
pushf
cmp
rcl
lret
jp
pop
movsl
push
movsb
xlat
lods
dec
incb
mov
enter
pushl
das
pop
inc
dec
hlt
push
push
les
cmpsl
jp
scas
pop
mov
pop
inc
xchg
cmpb
pop
push
icebp
push
daa
mov
mov
cli
xchg
icebp
inc
aas
loopne
sub
and
fs
adc
call
sub
push
or
cs
jecxz
les
lock
test
mov
stc
cmp
sbb
cmpl
mov
jno
cmp
jno
add
stc
mov
jp
xlat
nopl
das
push
and
sbb
lods
add
push
and
fimull
out
sbb
sarl
mov
pop
daa
frstor
ret
into
mov
push
daa
mov
lret
inc
sbb
loopne
test
popa
and
push
int
hlt
pop
dec
loop
sub
incl
iret
cli
popa
mov
and
lea
mov
or
rorl
fwait
bound
sbb
xor
mov
or
jns
sti
push
clc
test
pop
push
stos
jns
in
or
shrb
int
test
push
mov
cmp
xor
loopne
jns
dec
popa
in
dec
cmp
inc
in
dec
fnclex
add
addr16
lods
mov
pushf
push
mov
andl
or
test
mov
cmp
cwtl
inc
lret
or
addr16
hlt
or
mov
xchg
popa
push
jne
loop
jmp
ret
xor
ljmp
and
lods
popa
js
sbb
push
aad
out
dec
aad
jg
inc
sarl
cmp
rcrb
mov
xor
js
jns
and
cltd
jecxz
rol
dec
lock
repz
or
lret
lock
xor
test
lret
mov
inc
repnz
sbb
es
or
mov
sbb
icebp
test
mov
sbb
ds
inc
mov
fsts
imul
push
iret
icebp
out
and
adc
movsl
clc
cmpsl
jle
mov
and
xor
cmp
mov
lahf
or
sub
inc
nop
insb
movsl
std
negb
pop
scas
dec
stos
lea
inc
popf
dec
cmp
arpl
inc
dec
fdiv
cli
or
ror
movsl
and
cltd
fwait
gs
mov
or
fidivrl
and
xchg
and
cld
fidivrl
and
enter
or
dec
add
sbbl
sub
inc
mov
in
repnz
mov
arpl
inc
fcomps
pop
adc
or
dec
xchg
and
pusha
adc
dec
adc
mov
or
lret
xchg
lods
hlt
jge
xchg
dec
pop
mov
fbstp
leave
leave
xchg
fwait
pushl
push
pop
jae
in
sbb
shrl
jnp
dec
mov
iret
daa
add
xchg
mov
pop
test
cs
out
xchg
sbb
pop
icebp
jl
popa
push
jmp
xor
push
push
sti
leave
sbb
xor
xchg
xchg
imul
push
dec
sti
mov
mov
mov
in
icebp
dec
loope
inc
jp
repnz
mov
sbbl
clc
or
add
stos
pop
mov
lahf
data16
push
xchg
nop
adc
xchg
mov
es
fadds
mov
xchg
xor
xchg
inc
jl
sahf
sub
xchg
loopne
and
fcmovnu
pop
loope
xchg
mov
dec
lds
cld
adc
xor
lea
xchg
sbb
adc
inc
sub
push
aad
dec
test
or
inc
inc
out
sbb
lea
and
outsb
outsl
aaa
push
ss
adc
sub
lcall
jge
xchg
push
or
into
cmp
xchg
dec
stos
add
pop
cmc
sbb
sbb
gs
in
nop
addb
and
cmp
and
roll
mov
push
pop
scas
es
test
mov
iret
rolb
pop
mov
push
out
pop
out
iret
add
or
mov
test
sub
mov
adc
sbb
xchg
sub
iret
or
jno
mov
popa
jns
cmp
sub
cmc
out
add
fs
mov
in
loop
cmp
insb
or
mov
stos
mov
sub
adc
push
sub
test
fidivl
xchg
xor
mov
cwtl
push
mov
push
push
fs
xor
adc
ret
movsl
aaa
and
adc
andb
nop
mov
fwait
imul
cmp
jns
decb
adc
fs
cli
cmp
rolb
bswap
pop
frstor
bound
xchg
xchg
dec
fbld
adc
or
or
push
jo
jo
push
mov
push
in
shrb
into
or
adc
mov
sti
in
mov
adc
jbe
sar
mov
adc
repz
test
xor
cmp
mov
push
nop
pop
push
in
sahf
push
lahf
pop
add
mov
loopne
or
adc
jnp
lcall
push
push
int3
ret
inc
and
es
clc
loopne
scas
mov
mov
ret
or
push
xchg
mov
inc
adc
sbb
aaa
repnz
call
sub
test
and
inc
pop
jg
pop
nop
jns
fs
fstp
fistpll
in
pushf
stc
dec
pop
jl
inc
insb
out
jne
repnz
jmp
xchg
arpl
clc
frstor
xchg
add
add
add
das
push
xchg
sbb
lcall
cld
shlb
fldcw
xchg
adc
add
dec
sbb
sti
loop
mov
rcr
out
rol
mov
cld
or
cmp
dec
jns
stc
lea
and
mov
cli
and
icebp
sbb
push
add
scas
pop
pop
push
mov
inc
and
mov
aaa
pop
cs
fsubrs
std
add
hlt
adc
push
addr16
jg
stos
ret
stos
sahf
lret
adc
pop
sub
mov
das
inc
mov
mov
inc
adc
jp
mov
stos
imul
jge
jmp
lcall
outsb
insl
or
arpl
aaa
adc
rolb
xor
ret
nop
rorb
xor
shrl
sbb
rclb
in
dec
sbb
mov
jp
das
lea
movsb
adc
jbe
jmp
icebp
mov
adc
sarl
pop
outsl
int3
push
es
pop
mov
sbb
movsb
imul
jle
arpl
push
jno
lea
inc
faddl
daa
jle
pop
mov
lret
jl
pusha
mov
insl
in
lods
adc
jno
lds
xor
lret
xchg
out
fisubl
ljmp
fldenv
in
stc
jo
and
mov
inc
inc
sbb
mov
in
add
insl
pushf
inc
enter
data16
mov
fadd
and
mov
scas
sbb
rclb
mov
cmpsb
addb
xchg
leave
xchg
pushf
mov
sub
scas
push
push
inc
dec
clc
mov
push
mov
mov
movsb
sbb
stc
dec
or
aam
xchg
orl
insl
pop
cmp
pop
xor
or
push
and
outsl
push
aam
or
jne
pop
xor
fidivs
sbb
and
data16
outsb
lcall
scas
adc
divb
bound
adcb
cmp
cmp
pop
lods
pop
icebp
nop
pop
je
and
out
xchg
ret
xor
jp
cld
mov
imul
fdivrs
pop
or
vmread
mov
mov
cmp
xlat
rolb
or
or
scas
xchg
xchg
daa
leave
xlat
outsl
pop
xchg
add
call
pop
gs
sub
jae
repnz
cs
sub
das
repz
cmp
xor
cli
mov
je
or
movsl
out
inc
movsb
jecxz
insl
into
xchg
cltd
jae
insl
push
fsubrs
jbe
cmpsl
cmpsl
sbb
mov
enter
das
dec
xor
test
movsl
xor
xor
aad
add
xchg
jno
inc
jbe
pop
aas
inc
mov
pop
jle
lods
jp
fimuls
mov
sub
fs
xchg
adc
xlat
jne
jbe
or
mov
dec
inc
xchg
ljmp
sub
hlt
xorl
sub
icebp
lds
in
mov
dec
and
jo
inc
sub
add
ja
test
cmp
sbb
stos
shrl
rcll
mov
xchg
cltd
sahf
imulb
stos
pop
stos
xchg
xchg
in
sbb
xchg
dec
mov
stc
sarb
lret
loope
movsb
xchg
movsb
ret
nop
mov
pop
xchg
push
call
dec
push
pop
add
ljmp
xchg
xchg
out
xchg
or
jno
cmp
push
ret
rcr
test
test
fs
les
mov
rol
stos
jns
mov
fistl
mov
fidivs
and
adc
xchg
daa
jl
inc
cmp
loope
repnz
aad
dec
shrl
cmpsb
jg
adc
sub
xor
mov
call
scas
ja
dec
lock
xor
jmp
push
push
jb
stos
loopne
daa
in
lods
jg,pn
mov
mov
mov
stos
lret
fisttps
jnp
pop
fwait
bnd
fildll
imul
sub
adc
mov
adc
xor
mov
jnp
out
in
and
rorl
mov
testb
and
lods
xchg
sti
mov
nop
sub
addr16
aas
sbb
push
jl
and
in
adc
outsb
stc
stos
sbb
pop
sbb
fdivp
push
add
out
insl
dec
mov
mov
inc
dec
and
aaa
dec
adcl
call
mov
addr16
aad
cmp
loope
movsl
movsb
inc
clc
or
dec
sub
mov
int
mov
stc
test
ljmp
cmpsb
push
cld
xlat
jle
movsb
pusha
and
xchg
push
sbb
fwait
in
jp
scas
scas
psubusb
repz
daa
and
pop
or
mov
push
cmp
shr
adc
xchg
mov
leave
push
pop
sub
dec
les
xchg
popa
xchg
pop
lea
sbb
incl
sbb
shlb
pop
in
daa
sahf
push
sub
push
mov
mov
mov
sbb
mov
data16
dec
and
dec
and
mov
and
and
dec
add
insl
pop
es
repnz
sahf
test
push
mov
in
lahf
mov
push
push
cld
fildll
dec
dec
sbb
dec
xchg
xor
jle
mov
and
push
mov
icebp
imul
test
in
std
cmpsb
cmpsl
bound
dec
shrb
cli
xchg
hlt
and
pop
sti
loope
stos
jecxz
mov
xlat
and
xchg
xchg
lret
mov
out
mov
jno
enter
mov
or
adc
or
cld
aaa
dec
arpl
js
or
bound
mov
hlt
popf
and
movsb
call
test
dec
push
cli
out
jnp
mov
xchg
cwtl
ss
cmp
popa
mov
hlt
loop
clc
dec
ss
clc
push
xchg
adc
rorb
mov
outsl
nop
fwait
xchg
sbb
aaa
pop
out
and
lea
call
cmp
dec
dec
sbb
mov
and
sbb
pop
jne
xor
push
pop
xor
sarl
dec
scas
jo
push
ja
push
out
xchg
and
aas
shrb
je
inc
or
fstps
test
movb
rolb
lret
mov
ljmp
ds
pop
cwtl
shll
out
pop
sbb
inc
inc
or
in
dec
jae
js
or
loopne
dec
aas
out
jb
sbbl
pop
mov
loop
in
xor
mov
cmp
lods
cmpsb
stos
lds
inc
sbb
js
lret
lcall
push
pop
shlb
add
pusha
clc
push
data16
or
sbb
rolb
mov
ss
loope
pusha
dec
mov
sub
push
outsb
test
in
inc
lds
dec
insl
mov
loop
imul
inc
lock
and
rcrb
xor
mov
xchg
cmp
xchg
test
jecxz
push
icebp
jp
xchg
push
ficompl
out
jl
push
inc
adc
sub
xchg
icebp
mov
insl
jmp
fs
inc
mov
daa
xor
mov
dec
mov
out
leave
jb
pop
fwait
lahf
adc
fcoml
js
out
out
in
aad
hlt
dec
ds
lds
fsubl
pop
sbb
inc
shl
sti
jp
add
stos
push
mov
ret
lret
cli
xor
fisubl
fwait
cltd
jle
inc
lahf
jns
lahf
movsb
aam
popf
mov
rcrb
push
push
push
inc
pop
xor
ljmp
and
cli
shlb
add
sbb
lcall
es
sub
out
mov
loop
xchg
mov
and
mov
and
cmp
add
mov
dec
mov
jecxz
mov
outsb
std
sbb
dec
and
cmc
mov
xor
orl
cli
mov
and
dec
mov
inc
jp
push
add
lods
int
adc
aam
js
pop
inc
repz
enter
in
mov
andb
mov
sub
inc
rol
sub
sbb
sbb
inc
inc
and
jne
rcrb
mov
pop
out
push
xchg
mov
add
cmp
aam
jne
fidivs
fisttpll
ds
and
cmp
sbbb
jbe
xor
leave
insl
rolb
es
les
sub
out
ret
lret
xor
ljmp
inc
xchg
stos
mov
cwtl
cmp
js
add
pop
jle
dec
ret
inc
sub
pop
stos
mov
lea
pop
push
or
push
mov
and
jg
fstpl
jge
pop
cli
popa
xor
out
es
repnz
stos
cmp
call
insb
out
movsb
inc
mov
sub
loop
gs
sub
sti
dec
imul
inc
adc
mov
inc
mov
int
jbe
xor
stos
push
rclb
mov
faddp
or
fsubrl
test
xlat
mov
push
subl
inc
cld
dec
dec
cwtl
out
jo
or
add
sbb
xor
cmpsb
repnz
cmc
push
gs
cli
ss
push
xchg
sbb
pusha
mov
scas
mov
jb
xchg
nop
imul
rorb
int3
mov
cwtl
xor
cmpsl
dec
adc
add
mov
inc
pop
and
cmpsl
xor
push
pop
cmpsb
mov
lods
inc
sbbb
fidivs
mov
mov
cli
xor
jmp
jmp
xchg
adc
int
lahf
in
pop
sub
add
cmpsb
scas
in
hlt
dec
nop
outsb
xchg
hlt
pop
mov
inc
inc
aas
test
pushf
fdiv
push
jb
mov
nop
fcompp
cwtl
stos
lods
sub
int3
sarb
mov
adcl
push
cmpsb
or
imul
mov
inc
outsl
sbb
lods
cmp
fnstcw
test
fxam
es
jb
cltd
fwait
in
outsl
xor
cmpsb
xor
scas
dec
jl
clc
mov
adc
lods
push
and
push
xorb
sbb
mul
pushf
mov
cmp
lods
loope
imul
or
arpl
cmp
popa
xor
fptan
jo
out
mov
lret
mov
shrl
out
mov
pop
incb
sbb
add
mov
add
sbb
jp
fimull
cmpl
xchg
jo
scas
cld
cwtl
push
leave
stc
adc
push
mov
adc
and
jmp
push
jae
pop
mov
mov
push
push
xor
ja
bound
sbb
or
pop
mov
pop
mov
test
inc
jge
repnz
inc
inc
mov
popa
and
cli
enter
jl
std
ret
cmp
in
in
movsb
mov
mov
mov
and
test
fwait
into
fprem1
or
jle
jnp
mov
rcll
dec
aam
push
test
inc
ret
test
shlb
leave
fmul
and
outsl
and
fimuls
je
cmp
cwtl
loope
push
lret
mov
test
or
ret
xor
dec
jno
or
bound
dec
outsb
stos
adc
stos
xor
xorl
imull
orb
scas
xchg
data16
mov
andl
adc
or
bnd
mov
pop
push
into
rolb
pop
mov
push
cmc
stos
pop
mov
aaa
pop
or
in
aaa
pop
les
rorl
jne
stos
ss
dec
cmp
push
fidivrs
mov
jp
adc
in
dec
rcll
pop
and
mov
jne
add
push
or
xchg
inc
push
test
lds
jmp
mov
jne
das
push
adc
xlat
cmp
mov
mov
mov
or
add
mov
in
ficoml
xor
aad
iret
cmc
sbb
test
fadd
or
in
mov
mov
inc
dec
mov
mov
mov
sbb
cmp
jmp
add
int3
cmp
les
jae
loop
adc
jnp
popf
cmc
adc
insb
int
sbb
insb
adc
cmp
sub
sub
repnz
ljmp
push
adc
cs
cltd
aas
loop
mov
js
jnp
rcrb
and
pusha
xchg
sti
test
fldcw
pop
mov
pop
push
dec
adc
push
mov
outsb
outsb
les
lods
adc
test
cs
out
cld
add
fdivl
jo
push
xchg
cmc
mov
and
popf
xchg
stos
js
mov
cmp
adc
jb
dec
in
sub
xor
lods
sbb
xchg
clc
addl
mov
push
dec
jge
pop
sub
test
mov
mov
xor
add
loopne
add
enter
inc
and
or
daa
je
jecxz
inc
and
pop
faddp
cs
adc
sti
or
andb
out
adc
mov
dec
pushf
test
fisubs
sub
in
clc
scas
inc
adc
and
push
stos
cmpsl
pop
sub
add
sti
out
loope
push
pop
gs
pushf
pusha
push
jl
cmpsb
mov
xchg
int
inc
add
xchg
movsl
and
mov
imul
xchg
xor
inc
push
mov
cmp
or
or
mov
adc
inc
sti
lods
jo
add
lahf
xor
sub
lds
pop
and
test
jp
inc
xorb
fmuls
sub
push
div
adc
js
fisubl
and
lods
xor
mov
aad
xchg
aaa
xchg
mov
jae
fs
push
ja
das
inc
mov
mov
sti
loop
mov
test
adc
pop
fwait
push
adc
gs
jnp
push
mov
and
ret
sysret
push
mov
lcall
push
nop
das
movsb
in
insl
decl
push
lahf
xchg
out
sbb
bound
jae
sarl
cld
push
test
push
push
sub
inc
mov
push
addb
push
push
sbb
mov
add
push
mov
std
into
fldenv
in
mov
js
or
icebp
adc
mov
dec
clc
rcrl
or
adc
repz
jnp
nop
sub
pop
enter
in
lcall
xlat
add
jo
mov
enter
jo
pusha
mov
inc
roll
push
sub
stc
xor
sbb
add
dec
dec
xchg
add
push
sub
and
add
sub
inc
xchg
push
loopne
or
and
lods
mov
dec
test
mov
ret
or
insl
dec
dec
fisubl
pop
dec
ds
jmp
jo
or
lods
lret
seto
add
lea
scas
inc
movsl
push
test
pop
xlat
lds
and
lods
sbb
int3
sarb
xchg
fcomps
xchg
sahf
jg
mov
movsl
and
in
aam
jns
adc
or
and
arpl
push
fs
and
test
xchg
xorb
ret
push
outsb
sti
xchg
daa
iret
rolb
int3
sbb
daa
jle
add
pop
or
jmp
xchg
fs
scas
fisubrl
xchg
push
sahf
or
xchg
test
stc
cmp
fwait
or
in
cmp
scas
repz
aam
sbb
push
jl
out
mov
xchg
ds
sbb
fbstp
jo
xchg
mov
aaa
cld
shrb
jmp
jmp
lea
movsl
dec
cmp
test
hlt
setnp
mov
cmpsl
adc
push
xchg
test
in
sub
scas
mov
js
sbb
fcomps
lods
mov
mov
jp
mov
inc
push
or
pop
add
pop
faddl
add
test
xchg
dec
ficompl
pop
rcll
pop
sbb
outsb
or
movsb
and
mov
stos
rcll
cmp
cmpsl
jmp
nop
leave
push
and
out
cmpb
ret
mov
adc
arpl
xchg
int3
push
dec
cmp
sub
push
add
push
sbb
pop
cmp
adcl
lods
xor
and
stos
movntps
aaa
mov
cwtl
cld
xchg
sbb
bound
jae
xchg
mov
movsl
pop
test
mov
icebp
in
jmp
add
push
sub
stos
loope
or
arpl
lret
lcall
xlat
negl
dec
push
stc
mov
cmp
add
cmp
mov
ljmp
dec
rorl
dec
adc
movb
mov
mov
pop
daa
inc
pop
ljmp
mov
cmc
pushf
loop
imul
and
xlat
dec
popl
mov
dec
ds
fnstsw
lock
sub
cs
scas
dec
dec
and
icebp
call
inc
sbb
inc
mov
decb
xor
andb
xchg
xor
repnz
add
cmc
push
cmpsl
push
dec
rcl
xchg
mov
cli
or
ret
in
out
cmp
mov
int3
pop
mov
adc
push
cmpb
dec
and
jns
push
in
xlat
and
jg
jge
andl
mov
push
push
test
mov
add
xchg
xchg
out
mov
inc
mov
sub
dec
sbb
sub
sub
scas
mulb
inc
ret
xchg
adc
xor
cli
in
aas
insl
movsb
in
pop
xchg
imul
call
ss
pop
in
out
and
pop
push
push
loope
inc
push
lods
dec
out
or
clc
add
fistpl
dec
inc
loopne
movsl
movsb
jmp
les
or
sub
xorb
pop
jne
ss
loopne
mov
ds
push
pop
andb
push
or
cmpsb
xor
push
xchg
js
and
pushf
enter
dec
sarb
add
sahf
dec
imul
orb
pop
ret
xchg
mov
stos
mov
mov
cmp
cmp
adc
flds
call
mov
mov
sub
lea
xchg
pusha
dec
push
pop
pop
fs
mov
cld
in
outsl
cli
addr16
jns
dec
lcall
push
imul
lcall
sbb
dec
xchg
aad
mov
jg
push
or
pusha
and
ffree
aaa
push
inc
sbb
and
cld
mov
jae
imul
cmpsb
pop
jae
push
xchg
imulb
sahf
sbb
pop
mov
outsl
sahf
inc
jne
scas
pop
sbbl
dec
sbb
pop
mov
repz
mov
lods
popa
int
xor
rcll
push
inc
push
out
fidivrl
inc
or
mov
int
xlat
ret
sub
scas
or
addr16
mov
test
or
xchg
out
neg
in
inc
cld
cli
cmpsb
inc
int
test
ds
mov
pop
adc
mov
mov
stos
push
pop
lcall
incb
lcall
sub
loopne
dec
data16
lock
movsl
out
mul
sbb
push
cmc
lods
pushf
adc
add
push
and
adc
dec
ds
mov
jmp
lock
push
ret
inc
mov
sub
aaa
std
inc
dec
stos
fldt
mov
push
out
mov
xlat
sub
xchg
lahf
aam
loopne
pop
into
lcall
push
add
repz
dec
hlt
push
jbe
jp
sub
pop
add
mov
mov
lret
ljmp
dec
dec
cmpsb
pop
ja
sub
xchg
sub
lret
lret
clc
pushf
mov
dec
shlb
iret
aad
movsl
shr
sub
dec
or
mov
jbe
and
fildll
ret
xchg
add
aaa
push
sbb
repnz
mov
es
jmp
pop
jns
rol
scas
jge
out
mov
or
jmp
ljmp
push
in
xchg
and
ljmp
enter
and
negb
mov
push
loop
mov
push
fcom
into
fcmovne
jnp
ret
push
and
pop
jg
pop
aaa
pop
lods
cmpsb
fsubrl
cmp
test
ja
loop
jmp
cltd
mov
push
popf
pop
mov
push
sbb
adc
push
mov
sbb
ds
jb
outsb
es
xlat
dec
lcall
push
js
add
out
jno
cmp
sub
pop
hlt
aam
cmp
es
mov
xchg
sahf
adc
mov
jg
sbb
mov
mov
aas
jl
add
outsb
xchg
xor
popf
xor
push
lods
nop
out
dec
inc
mov
inc
clc
paddusb
xlat
jg
cli
xchg
call
std
dec
cmpsl
jecxz
adc
mov
pop
outsb
dec
mov
test
mov
mov
sahf
mov
cli
inc
orl
pop
int
jp
mov
jo
mov
aam
lret
orl
inc
stos
adc
subl
mov
xor
adc
aad
das
lods
cld
sub
movsl
leave
lds
or
rcr
dec
int3
pop
inc
out
std
cmp
loope
aam
stos
xor
add
inc
xor
into
shrl
addr16
or
int
mov
xchg
mov
fs
gs
push
pop
dec
pop
ja
ljmp
mov
dec
pop
in
dec
jp
ds
test
into
mov
mov
in
dec
cmp
loope
dec
sub
lahf
out
cmp
sbb
inc
arpl
inc
jno
test
jnp
and
mov
fxam
cmpsl
gs
and
cs
or
mov
mov
outsl
and
andb
dec
push
gs
fisttps
adc
mov
add
mov
sub
xchg
ja
sbb
jb
int3
sub
mov
add
jp
pop
fldt
dec
fidivl
add
mov
and
xchg
clc
lcall
xchg
lods
jp
or
or
lods
sbb
decb
adc
enter
or
icebp
in
mov
loopne
scas
fists
xor
sub
mov
xchg
test
mov
cli
inc
repz
mov
in
test
cld
out
movsl
ret
scas
es
sahf
xor
mov
mov
cmp
or
ret
or
dec
mov
loope
std
in
cmp
aad
stos
mov
test
jbe
fiaddl
ficomps
or
dec
cld
mov
imul
pop
pop
pop
xchg
and
pushf
xor
stc
mov
mov
arpl
aaa
jmp
sarl
jp
leave
lcall
ljmp
leave
ffree
dec
outsl
fdivrs
int3
push
add
cltd
inc
sub
lahf
mov
inc
lds
cmp
mov
jbe
cmpsl
mov
rcll
sar
jg
orb
fnsave
jno
adcl
push
mov
inc
je
sbb
inc
jmp
test
xchg
pop
mov
xor
outsb
push
test
arpl
movsl
cmp
jl
cmp
out
sub
add
push
es
dec
add
andb
jecxz
push
fldenv
or
fwait
push
test
sub
sub
xlat
lods
insl
sbb
add
pop
adc
dec
add
mov
movsl
shll
sbb
aad
in
jmp
pop
or
inc
sbb
cmp
lock
or
pop
jne
and
push
mov
out
push
or
pop
jns
decb
xor
gs
xchg
not
add
loope,pt
sbb
enter
or
xor
lds
xchg
pushf
lret
fldt
cmpsb
ss
cs
test
rolb
inc
xor
pop
mov
add
rclb
adc
insb
mov
cltd
xchg
dec
stos
sbb
push
fstps
xor
int3
test
cmp
add
lahf
push
in
sar
mov
mov
arpl
shlb
insb
push
inc
mov
leave
xchg
insl
sarb
xchg
imul
enter
mov
xor
ds
int
add
mov
push
call
xchg
gs
push
and
data16
pop
out
mov
add
jmp
xor
mov
imul
inc
fucomp
xor
sub
sub
in
or
lds
loop
arpl
adc
inc
mov
jns
mov
mov
insl
jl
mov
and
subb
bound
cmp
push
inc
into
out
arpl
jge
repz
mov
pop
mov
and
scas
push
fs
cmpsb
aas
add
xchg
bound
test
lock
and
call
adc
add
mov
sub
and
repz
push
dec
sub
mov
dec
mov
xor
adc
sbb
mov
popa
ljmp
repnz
out
pop
clc
pop
inc
and
stos
dec
out
mov
cmc
fistl
xor
test
mov
xchg
mov
cmc
movsb
jmp
addr16
lods
lcall
jl
inc
mov
push
js
movsl
adc
mov
mov
sti
xchg
jecxz
cmc
cmpsb
stos
lds
mov
lods
fwait
mov
addr16
ljmp
xchg
mov
or
stos
fidivs
filds
pop
xchg
push
jnp
dec
lret
sbb
sbb
dec
jecxz
filds
push
xor
test
add
inc
mov
mov
xor
xor
test
push
int
fsubs
stos
in
adcb
pop
dec
fwait
mov
in
rcll
inc
dec
outsl
adc
inc
cltd
sbb
push
lock
cmpsb
jne
push
lea
or
mov
pop
push
aad
adc
push
pop
xchg
in
sti
xor
push
mov
pop
ficompl
out
inc
roll
je
jp
pop
xor
jecxz
mov
inc
aaa
inc
pop
fisttpll
push
rolb
sarb
lods
iret
rcr
inc
jp
stc
ret
test
cmc
pop
shlb
nop
or
add
call
xchg
or
in
shlb
push
or
pop
fs
push
popf
inc
jp
adcl
andl
jae
xor
rcll
jne
or
insl
enter
lcall
repnz
cwtl
sahf
dec
push
shll
into
into
cwtl
mov
mov
iret
mov
inc
dec
inc
jnp
cli
push
fnclex
scas
xchg
inc
rorb
add
jo
inc
or
mov
das
fstpt
xor
sbb
insl
adc
shl
cld
sub
jg
ficomps
clc
in
repnz
mov
outsl
popa
scas
and
inc
inc
lahf
xchg
xchg
lret
mov
in
out
push
testb
enter
sub
push
jp
mov
vpmulhw
scas
rcr
stos
xor
imul
sbb
dec
mov
imul
es
and
cmp
mov
ljmp
sbb
enter
push
pop
bound
adc
inc
mov
popl
popa
mov
add
test
in
push
jmp
lods
stos
and
cwtl
pop
push
xchg
adc
cmp
push
xchg
nop
invd
outsb
mov
jmp
pusha
pop
popa
fdivs
cmp
repnz
or
lret
insb
outsl
lret
dec
adc
clc
repz
inc
js
mov
outsl
mov
lahf
mov
add
int3
xlat
mov
aas
adc
ljmp
add
jns
push
cmp
jns
and
mov
mov
lods
aam
cmpsb
push
dec
mov
push
ret
jo
fldenv
testl
mov
or
pop
mov
sbb
xchg
faddp
dec
and
jo
ds
lcall
xor
mov
sub
into
xchg
in
and
sub
roll
add
sbb
push
xchg
xchg
ljmp
ds
add
jmp
pusha
out
mov
aas
adc
sub
and
and
test
mov
add
and
mov
inc
push
push
mov
loope
add
xor
daa
xchg
addr16
mov
push
std
mov
inc
adc
lea
mov
in
xor
scas
lcall
hlt
add
inc
cmp
lock
iret
ret
loop
cmpsl
add
mov
sarl
movsl
sub
mov
sbb
cmc
inc
ds
mov
pusha
pop
pop
xor
testb
add
cmpl
jge
adc
subb
fs
stos
stos
dec
xchg
insb
jge
sbb
sbb
fwait
cltd
add
inc
push
sub
mov
lods
cs
into
mov
das
shrl
sti
cltd
push
ss
mov
cmp
dec
fadd
inc
push
pop
adc
rorl
xchg
enter
add
dec
mov
lret
out
stc
dec
ljmp
xorb
ljmp
into
sbb
hlt
mov
icebp
jae
xchg
xchg
xor
mov
push
mov
idivl
mov
xchg
scas
stos
inc
test
push
inc
fildl
popf
inc
cld
mov
sbb
xchg
dec
stc
push
test
popf
lahf
insb
sub
sbb
xchg
ret
mov
bound
shlb
adc
xor
dec
adc
imul
cltd
xchg
pop
out
pop
das
std
imul
pop
js
insl
shl
fwait
std
mov
cmp
test
jbe
test
fwait
cltd
xchg
adc
mov
stc
jmp
cmp
sbb
js
inc
js
cs
mov
dec
inc
and
cmpsl
sbb
ffree
lock
cmp
add
ljmp
cmp
outsl
ds
int
imul
iret
jnp
push
pusha
jge
or
test
fnsave
jno
jp
rolb
mov
adc
jle
sub
bound
add
in
add
outsl
mov
int3
push
sbb
cmpsb
push
insl
xchg
xor
int3
inc
push
sub
cli
cmc
arpl
and
jb
dec
std
jle
test
fcmovb
dec
mov
or
in
mov
dec
sarl
test
mov
pop
ret
test
pop
mov
mov
std
pushf
cmpsb
es
rep
cmp
iret
push
in
xor
sub
cmp
cmp
mov
std
xor
stos
or
or
mov
clc
inc
in
cmp
adc
pop
lods
mov
arpl
call
mov
fidivrl
push
mov
minps
icebp
inc
pop
jb
mov
xlat
xor
icebp
adc
pop
imulb
in
and
sbb
add
cmp
jp
mov
mov
lahf
push
push
xchg
jns
sbb
mov
and
int
je
mov
adc
adc
scas
push
nop
cmpsb
fld
cmp
cli
sub
addr16
jbe
ficomps
xor
jno
jg
fcmovnb
inc
jnp
jl
inc
loop
rolb
add
loop
push
cmp
add
stos
stc
mov
in
fs
push
mov
dec
jnp
push
pop
pop
jg
mov
js
and
pop
movsb
out
sub
inc
mov
inc
ret
icebp
cwtl
pop
leave
xchg
out
sbb
jmp
xor
add
and
in
ss
sbb
sbb
jg
push
repz
dec
and
adc
lods
test
mull
and
into
mov
push
aaa
jle
lret
pushw
ret
nop
int
cmp
decb
lret
mov
fisubs
xchg
dec
shrl
jno
cwtl
mov
xchg
sbb
jae
sbb
mov
je
jae
incb
mov
add
imulb
sub
jns
stos
push
inc
mov
bt
add
cmp
in
mov
adc
mov
aad
pop
and
xchg
push
inc
sbb
inc
arpl
dec
es
mov
aad
mov
fcom
pop
cmpsl
stos
add
sbb
dec
test
pop
and
nop
je
ficoms
xor
xor
fwait
cli
sbb
pop
xor
sbb
fs
loopne
sbb
fdivrl
in
fnstsw
adc
inc
lret
pop
popa
test
scas
rorb
add
jbe
dec
add
ljmp
jae
outsl
out
loop
pop
sub
or
enter
xlat
sub
and
into
sub
jb
ljmp
into
jge
sbb
shl
sub
and
sbb
xor
push
xor
arpl
add
icebp
or
cmc
bnd
repz
xchg
or
sbb
test
test
jns
dec
stos
xchg
and
insl
sub
pop
test
push
inc
jns
loop
ss
test
stos
sbb
cltd
cmc
xchg
shlb
cmp
push
stc
adc
imulb
out
out
sahf
xchg
divb
fcompl
rcrl
mov
pop
mov
mov
mov
insb
jno
cmp
pop
push
or
in
movsl
ret
repz
dec
out
ret
lock
mov
mov
test
daa
or
ss
jae
sarb
or
adc
pop
jnp
sub
imul
aad
jg
pop
adc
xchg
sbb
cli
mov
adc
addr16
movsl
stc
les
adc
pop
and
gs
sbb
mov
aaa
mov
add
pop
rol
cli
je
ja
loopne
mov
rorb
cmp
std
cld
cmp
mov
repnz
mov
test
clc
cs
sti
loopne
mov
sub
add
sti
push
mov
insl
and
add
inc
ret
or
sbb
insb
push
push
push
cmp
aam
ret
mov
mov
inc
lea
lahf
enter
shll
mov
push
mov
sbb
stc
or
adc
xchg
cmp
adc
stos
or
add
sub
xor
fwait
ret
push
mov
adc
xorb
sub
add
stos
mov
pop
mov
push
adc
jmp
or
dec
xchg
fs
push
je
mov
loopne
es
or
ret
bnd
cmp
sbb
mov
jo,pn
or
movsl
xchg
pop
scas
jo
xor
aaa
adc
dec
leave
xchg
sub
pop
push
mov
movsb
hlt
lods
int
push
hlt
cli
mov
out
fistl
shlb
test
ret
xchg
ljmp
xor
jmp
test
cltd
inc
mov
jae
sub
mov
and
stc
mov
rdmsr
outsl
dec
adc
jno,pn
inc
dec
addb
ret
sahf
lcall
push
xor
push
je
push
xlat
ret
inc
push
or
push
aas
rep
cmp
xchg
or
lea
or
es
adc
lcall
mov
push
push
inc
vxorps
jno
jno
mov
inc
lock
sbb
lcall
cltd
cs
ljmp
cmp
lds
cli
or
inc
js
sbb
pop
scas
aam
mov
fs
dec
jge
lret
cltd
aaa
mov
incl
scas
xchg
sbb
nop
lcall
push
inc
gs
lods
pop
subb
roll
into
mov
iret
fldl
jo
push
fld1
test
loopne
dec
arpl
adc
in
cmp
sti
out
ds
lds
popf
inc
rorl
jle
stc
ss
add
roll
int
xor
hlt
jecxz
add
leave
add
aad
xor
push
movsb
lods
cld
or
jmp
test
adc
mov
das
or
dec
stos
ja
or
ljmp
idivb
xchg
out
movsl
jae
mov
fs
pop
jmp
scas
push
pop
push
into
add
xchg
outsb
xor
into
insb
mov
cld
jne
inc
ror
sbb
test
or
mov
es
std
stos
sbb
mov
lea
dec
lret
cmpsl
mov
pushf
lea
sti
pushf
add
mov
sub
and
cwtl
ss
mov
imul
xchg
dec
add
sub
add
mov
sahf
fldcw
sti
xchg
push
mov
imul
cmp
xchg
or
les
je
fs
cmp
inc
ja
jmp
sbb
fdiv
cmp
inc
push
das
jb
pop
add
movsb
and
or
test
outsb
call
sub
push
sub
sub
pop
xlat
aas
xor
adc
shl
sbb
inc
sbb
jp
or
mov
xor
push
sub
and
ret
cmp
inc
dec
fnstcw
jge
sbb
inc
xor
jae
ffree
aas
push
sahf
xor
insb
in
andl
adc
int3
js
sub
jae
mov
nop
int3
aas
jno
flds
dec
or
sub
adc
xchg
xchg
adc
and
hlt
pop
add
pusha
das
das
push
and
mov
cmp
rcl
xchg
loope
lods
movsl
xchg
pop
enter
mov
into
and
pop
pop
mov
movsl
sbb
add
mov
mov
cwtl
fcmovb
ljmp
pop
pop
push
hlt
push
dec
out
aas
sbb
fnstsw
cmp
xchg
lea
jmp
leave
mov
pusha
mov
sub
lock
push
jp
and
mov
rorl
and
sbb
dec
fidivrs
test
jb
stos
pop
jg
jnp
ja
mov
dec
jb
and
mov
inc
push
jle
xchg
es
fidivrl
push
imul
sbb
xor
out
je
inc
and
loopne
scas
lret
aad
xor
xchg
ror
jge
dec
xor
sti
inc
lret
xchg
pop
into
add
xor
cmc
shrl
lahf
and
loop
mov
lds
lods
and
mov
adc
enter
cld
pop
or
iret
hlt
mov
pop
aas
rclb
pop
cmp
jl
push
sbb
mov
push
rclb
rcl
cmp
mov
cmp
test
int
mov
pop
jecxz
mov
pushf
es
and
rcll
pop
aam
cmp
xor
lret
xor
xorl
lds
pop
pushl
mov
out
inc
sub
ror
hlt
inc
sarl
sub
mov
inc
dec
pop
jge
sub
push
push
cmc
xchg
fistpll
rcrb
push
repnz
decb
ja
inc
data16
in
sbb
lea
pop
aam
mov
mov
jno
sub
je
scas
scas
fbstp
mov
xor
mov
fwait
jmp
inc
inc
dec
test
aad
stos
aad
jg
and
dec
dec
outsb
or
paddb
add
sbb
nop
cld
pop
dec
shrb
and
mov
fildl
sbb
add
mov
sub
or
ret
fildll
das
mov
and
pop
mov
adc
in
or
push
movb
mov
ficomps
jae
xor
mov
mov
in
cmp
mov
push
test
sub
jns
dec
test
jae
lahf
sbb
xchg
ret
adc
xchg
iret
cmc
scas
loop
dec
clc
push
mov
sahf
stos
sub
xor
aas
ret
cld
pop
mov
fimull
adc
dec
push
test
cmc
movd
lds
jl
outsb
and
mov
sub
lret
out
scas
cmpsl
outsl
in
adc
mov
data16
push
add
inc
and
insb
je
pop
lahf
inc
daa
mov
fistpll
xchg
dec
out
fadds
mov
dec
jg
sbb
ret
lahf
xchg
outsb
xor
sub
dec
xor
adc
out
add
and
ss
lds
sbb
jge
popa
std
popa
into
iret
pop
cmp
cmp
shl
jmp
fstpl
ret
push
sbb
push
cmp
test
xlat
insb
and
jge
ss
into
dec
fdivrs
add
and
pop
xchg
or
xor
out
jne
call
add
fistl
sub
dec
xchg
xchg
sbb
mov
lds
lcall
lea
stc
test
dec
adc
fstl
stc
std
xchg
mov
pop
idivb
call
cmpsl
sti
test
jmp
inc
movsb
adc
arpl
test
lods
dec
ja
mov
call
fisttpl
fistps
push
mov
sahf
repnz
push
cli
scas
out
repz
gs
daa
push
jl
fstl
jns
popf
xor
js
jmp
xor
movsl
fucomi
rolb
lea
inc
xchg
pop
loope
push
adc
jno
scas
cltd
or
dec
push
pop
lds
ja
push
xchg
push
daa
or
xchg
mov
into
fists
mov
mov
add
flds
sbb
pop
arpl
xorb
bound
insb
jns
push
fwait
cwtl
outsb
lods
adc
movsl
mov
aas
lods
xchg
push
insb
cli
xchg
cmc
push
mov
pop
adc
push
mov
mov
mov
or
xchg
lret
fsts
insl
mov
jp
jl
sarb
sbb
loopne
out
xor
out
mov
std
and
mov
ret
fdivrl
leave
adc
movsl
les
aam
subb
js
adc
das
mov
ret
lods
pop
mov
outsl
cmp
or
mov
bndldx
mov
loop
cmpsb
nop
add
fsubrl
int3
jecxz
repz
in
mov
add
jb
sbb
and
jo
fsub
inc
hlt
int3
pop
sbb
loope
ljmp
test
lret
mov
ljmp
dec
xor
lret
stos
and
inc
add
sub
in
nop
int3
daa
pop
stos
pop
loop
xor
xchg
lahf
scas
mov
inc
adc
stc
and
inc
adcb
ds
in
ljmp
testl
and
pop
out
stos
sbb
ljmp
nop
pop
mov
push
jno
es
pop
cmp
inc
leave
cmp
mov
inc
mov
xchg
push
add
cmc
jns
sti
scas
fnstsw
push
shll
aaa
fbld
and
jne
inc
int
mov
xor
addr16
adc
pop
xor
push
repnz
mov
ret
dec
cs
dec
push
inc
mov
cmpsl
or
mov
xlat
fnstsw
mov
jg
push
jg
and
jle
jecxz
cmpsb
mov
cltd
popf
addr16
test
sub
lods
aad
fidivl
xchg
setne
cmp
movb
adcl
inc
clc
loopne
jg
jge
and
adc
mov
mov
cmp
xchg
mov
clc
js
adc
imul
scas
mov
dec
xor
fwait
imul
int
les
call
lds
cmp
adc
out
movl
lods
in
xchg
out
push
cltd
and
stc
xchg
jp
pop
mov
nop
imul
cli
scas
ja
xor
insb
push
pop
push
mov
clc
mov
jle
stos
push
notl
push
xor
stos
push
xor
fistpl
lock
repz
imul
sub
scas
push
inc
imull
cli
mov
mov
stos
push
or
cmp
divb
ficoml
xchg
loope
push
scas
bound
inc
repnz
mov
cli
mov
sbb
addr16
mov
jge
xor
jb
sbb
rcrb
add
xor
mov
movsb
insb
push
test
add
push
mov
flds
push
mov
fldcw
or
inc
loopne
inc
repz
adc
mov
movsb
imul
mov
jo
ss
cmp
mov
or
sbb
mov
or
cli
in
out
or
mov
popa
test
push
lret
jmp
lods
xchg
cld
mov
jae
push
hlt
sub
adc
dec
nop
lret
addr16
and
icebp
dec
inc
hlt
mov
pop
dec
in
mov
sbb
lcall
mov
loopne
xchg
mov
cld
mov
scas
sbb
lahf
mov
cmp
mov
arpl
push
jl
cmpsl
jne
push
sub
test
sbb
add
xor
jecxz
dec
in
and
sub
xlat
mov
pushf
adc
nop
in
cld
mov
fildll
mov
gs
jp
xchg
push
mov
rcrb
out
inc
xor
adc
jno
inc
scas
push
mov
jl
jg
jbe
xchg
lds
dec
or
repz
jbe
jmp
lods
xlat
popf
xchg
jle
xor
sbb
daa
cmp
aas
ja
or
sahf
jge
add
incl
push
lahf
sarl
and
out
test
pop
loopne
out
jb
int
fmul
adc
dec
mov
pop
push
lahf
pop
sti
dec
and
add
jo
ljmpw
push
arpl
loope
mov
shrb
mov
push
push
insb
sub
push
add
fs
jg
es
mov
dec
and
xchg
clc
and
inc
out
push
xor
inc
jecxz
push
ds
mov
pop
mov
jnp
mov
inc
jne
inc
sub
push
jecxz
data16
mov
std
xor
push
inc
insb
out
pop
mov
xchg
xchg
or
add
ljmp
mov
out
xchg
mov
or
lea
sti
test
lret
das
add
xchg
lcall
sub
dec
out
imul
hlt
or
xor
mov
jne
movsl
push
dec
jle
inc
insb
and
inc
push
adc
imul
ret
test
je
dec
cmc
loop
mov
pop
jno
pushf
aaa
pop
clc
mov
mov
test
mov
icebp
mov
pop
stos
xor
push
js
push
insb
mov
inc
test
fstp
bound
adc
test
imul
enter
inc
sbb
shll
out
fisubs
mov
data16
pop
pop
jb
je
jns
lcall
push
mov
mov
pop
jge
test
jno
xor
scas
mov
mov
arpl
movsb
cmp
jecxz
add
push
push
ret
dec
fisubrs
mov
jecxz
gs
cmp
mov
lea
cmp
fnstsw
jno
aaa
out
push
sbb
inc
cmpsb
fnsave
imul
or
movsl
shll
data16
and
rolb
repz
dec
dec
out
data16
in
sub
jae
notb
mov
mov
lods
xor
clc
dec
xor
xor
jg
push
repz
es
adcl
pusha
push
push
pop
lods
pop
inc
inc
pop
cmpsb
clc
xor
sub
or
cmp
adc
stos
jbe
adc
iret
inc
jle
shrb
imul
jnp
mov
sub
out
mov
test
xor
xchg
addr16
add
cmp
mov
inc
and
das
push
mov
rcl
jns
sbb
repz
repnz
pop
jno
test
push
jne
outsb
cmpl
cs
mov
mov
es
xchg
dec
cltd
push
mov
cmp
push
out
xchg
sar
roll
cmp
xorl
pop
rcrb
sbbl
clc
mov
adcb
jl
ret
mov
inc
add
out
mov
call
push
dec
gs
sub
xor
scas
stos
and
sbbl
sbb
pop
es
icebp
jno
ret
loop
lcall
mov
push
jg,pt
ljmp
push
in
and
or
int3
mov
scas
xchg
mov
lea
loop
push
imul
push
push
jle
mov
jg
int
jnp
mov
sbb
mov
jns
out
test
fwait
push
es
into
aad
adc
jecxz
and
sub
in
cli
cmpb
inc
outsb
loopne
decb
add
push
fdivrs
cvtps2pd
cmp
in
mov
shll
shlb
mov
xor
and
aas
imul
fldenv
les
and
and
xor
push
insl
mov
jecxz
adcl
rcll
mov
jnp
mov
jl
pop
mov
sub
sub
dec
sbb
mov
dec
call
inc
and
xor
mov
cmp
ret
jmp
and
mov
xorb
sbb
popa
mov
jl
das
mov
das
insl
or
vmovntps
imul
mov
cmpsl
enter
sub
out
mov
add
outsl
mov
sti
movsl
data16
clc
xchg
scas
xchg
outsl
call
mov
ds
dec
in
loop
je
clc
cwtl
xor
pop
jbe
incl
cs
rcr
test
cld
fsubs
jno
js
mov
sbb
int3
mov
out
gs
mov
jge
push
sbb
sbb
loope
clc
push
icebp
imul
sbb
pop
iret
aam
mov
pusha
inc
sbb
dec
jno
and
in
and
mov
dec
sub
mov
sti
sbbl
outsl
je
jle
dec
xor
orl
stc
inc
mov
sub
jp
push
jns
fsubrs
sbb
sti
adc
mov
push
push
fldcw
popf
data16
push
add
cmp
push
xchg
jne
jle
push
dec
cmp
inc
dec
inc
into
add
movsb
nop
inc
ljmp
cmp
cwtl
xchg
div
jo
push
into
pop
mov
psubsb
dec
or
xorw
xacquire
xchg
jecxz
mov
aaa
push
ds
mov
jge
inc
mov
and
fidivrl
das
mov
cld
arpl
fstpl
arpl
add
add
pop
lods
inc
sbb
icebp
ja
sub
pop
xchg
adc
inc
xchg
ja
mov
cmp
bound
cli
jmp
dec
push
rcrb
and
mov
pop
sub
push
xchg
xor
and
mov
push
in
int
out
mov
lcall
repnz
fs
pop
or
mov
jnp
mov
imul
add
push
pop
cmc
cli
add
or
sbb
jmp
pop
push
popa
sbb
in
fwait
cmpsb
test
movsl
popa
fsubr
sbb
sub
jae
aaa
jge
loop
push
sub
pushf
test
add
cltd
xor
js
out
dec
inc
int3
movsb
cmp
into
rolb
mov
fldcw
mov
cli
lcall
mov
push
inc
shll
mov
shll
loopne
popa
mov
mov
mov
loope
adc
gs
inc
rolb
clc
in
in
mov
fldt
cmp
add
ljmp
bound
pop
push
mov
adc
cs
push
aam
and
aas
pop
jg
das
bound
mov
push
mov
ljmp
jmp
inc
jmp
mov
dec
sarb
add
xchg
pop
sub
xor
add
or
sub
popa
into
sub
incb
fstl
xchg
js
cmp
add
push
xchg
xchg
push
sub
or
mov
pop
ret
cmp
scas
jp
mov
inc
daa
shrl
pop
ds
or
push
mov
mov
fst
dec
mov
loope
push
cli
mov
cmpsl
push
adcl
mov
xor
xchg
add
dec
addb
or
push
push
xor
jns
or
jns
pop
fstl
and
gs
dec
pop
int3
inc
adc
push
push
cmc
dec
outsl
or
mov
sbb
imul
es
sar
and
insl
sbb
sahf
into
pop
leave
sti
push
mov
inc
xlat
repnz
cmp
pop
jb
sbb
popa
and
int
mov
lcall
pop
pop
pop
imul
add
push
cs
lret
or
lea
fisubrl
mov
stos
pop
inc
out
clc
popa
pop
mov
hlt
inc
pop
add
xor
push
xor
fldenv
fbld
data16
dec
insl
mov
jmp
lock
sbb
mov
sbb
adc
inc
add
add
jl,pt
mov
jnp
into
xchg
xchg
leave
sub
ljmp
test
xor
or
pop
xchg
mov
icebp
xchg
xchg
lcall
inc
mov
pop
add
xchg
add
sbb
jmp
xchg
negl
repz
test
cltd
push
xchg
push
add
xchg
jge
mov
loopne
in
pop
fs
sbb
loope
inc
mov
fwait
gs
enter
cmp
mov
dec
or
adc
or
mov
inc
daa
jle,pt
jae
sbb
inc
sbb
push
push
xor
mov
test
test
dec
je
sub
sub
mov
into
dec
adc
add
adc
or
sbb
mov
clc
sub
ss
aas
loop
ret
jne
scas
and
out
lcall
int
sub
push
andl
inc
out
dec
clc
pushf
test
cmp
pop
push
mov
loope
xchg
mov
cs
push
lret
and
inc
daa
pop
lret
pop
leave
xchg
aad
popf
dec
xchg
pushf
mov
jmp
stos
xor
shr
add
cmc
in
sbb
pop
push
push
inc
xchg
roll
mov
mov
lods
decb
pop
pop
or
mov
xchg
stos
sub
clc
mov
loope
pop
inc
mov
dec
add
sbb
or
cltd
xchg
xor
fucomip
xchg
fidivl
or
lods
pop
sahf
insl
xchg
dec
mov
add
dec
scas
cltd
inc
scas
fisubrs
inc
shlb
ss
fwait
push
push
inc
mov
stos
jecxz
mov
and
aad
js
outsl
mov
enter
jo
shll
pushf
pop
or
jbe
xlat
out
dec
and
insb
in
mov
sub
stos
mov
push
sub
push
movsl
mov
insb
mov
add
addr16
call
repnz
mov
xor
sbb
shrb
inc
push
lret
push
jbe
jns
rclb
jge
mov
sbb
push
fcompl
pop
clc
aas
xlat
cmpsb
mov
add
add
or
inc
sbb
cmc
fnsave
mov
outsl
mov
and
dec
xchg
into
leave
dec
jo
mov
jbe
mov
fistps
pop
test
lret
jl
xor
mov
aas
inc
add
scas
mov
jo
add
jno
jmp
cli
dec
shrl
scas
stc
into
mov
iret
hlt
xchg
inc
ljmp
push
lret
dec
popf
rcl
xor
fwait
pop
sbb
cwtl
ret
fistl
push
xor
fstpt
xchg
xor
test
xor
jg
pop
int3
fldcw
fbstp
sub
dec
cmc
inc
addl
dec
std
leave
shrb
pop
jbe
flds
mov
push
push
push
rolb
aas
inc
dec
dec
pop
hlt
fbld
cltd
in
dec
dec
xchg
outsl
sub
sbb
das
mov
sub
js
jno
add
mov
daa
pop
and
sbb
add
sbb
shl
xor
lods
aam
push
mov
mov
mov
cmp
cld
inc
addr16
mov
cmp
sahf
inc
mov
out
jb
cmp
pop
lahf
xchg
pop
mov
pop
pop
and
mov
pop
adc
cld
roll
mov
and
cltd
into
sbb
sti
and
or
or
push
ret
inc
insb
dec
mov
jecxz
add
mov
mov
xor
std
movsl
cmp
ljmp
pop
bound
mov
or
fdivrs
jmp
rolb
movsb
push
loopne
data16
stos
pop
arpl
pop
xchg
mov
sub
inc
add
xchg
push
xor
add
dec
mov
gs
inc
sbb
dec
fidivl
out
mov
sbb
fdivs
push
push
out
pushf
ret
jbe
or
xor
imul
in
pop
fnstenv
bound
test
addl
sarl
arpl
sbb
mov
sti
std
inc
xor
mov
xchg
pushl
and
xchg
inc
imul
mov
pop
arpl
inc
push
mov
sahf
pop
sahf
or
leave
sbb
mov
xor
cmpsb
mov
enter
sbb
aaa
dec
sbb
push
lock
pop
sub
jbe
fcomps
test
sub
roll
xlat
cltd
jbe
mov
or
xchg
jae
cltd
push
mov
pop
and
stos
out
aad
sbb
out
mov
hlt
roll
add
aad
mov
aas
mov
cmp
jo
stc
add
sbb
sub
movsl
add
orl
sub
sbb
lahf
out
testl
jb
pop
and
add
jbe
insl
outsb
xor
adc
jns
sub
sahf
xor
lock
ret
or
fistl
xchg
pop
shrb
jl
jb
insb
pop
int
imul
lods
les
jb
inc
test
mov
lahf
scas
push
sbb
xor
stc
pop
mov
dec
adc
mov
int
aaa
fcompl
sti
jl
xchg
sarl
mov
xor
xchg
mov
cld
xor
dec
outsb
fwait
loope
sbb
and
adc
rcrb
xchg
sbb
xor
rolb
add
aam
lods
fnstsw
test
call
jb
icebp
adc
popf
lret
cs
int3
dec
xor
or
call
mov
shll
je
pop
and
pop
dec
xor
dec
sti
sbb
sbb
lret
mov
mov
int
daa
in
push
push
push
scas
jns
mov
les
xchg
scas
cs
cmc
or
lods
out
cmpsb
in
mov
loope
add
jmp
pop
pop
jecxz
pusha
mull
insb
insb
or
aas
in
insl
rolb
rcl
stos
or
shll
mov
mov
mov
adc
test
mov
pop
xor
repz
lock
int
fldl
fdivrl
xchg
lret
addb
mov
imul
imul
daa
inc
in
and
push
dec
or
lret
lret
pop
scas
ret
fldcw
mov
jo
int3
or
push
or
mov
xchg
add
xchg
mov
mov
xchg
imull
cmpsb
int
stos
mov
es
out
in
mov
jns
inc
jle
push
cmpsl
add
nop
sbb
jmpw
iret
sti
nop
into
sub
dec
lret
aaa
aaa
adc
out
popf
icebp
add
ljmp
dec
into
repnz
test
sub
movsl
stos
aas
ja
shlb
sbb
inc
jg
sbb
pop
sahf
loope
movl
mov
cs
mov
in
in
mov
mov
mov
out
adc
test
sub
fdiv
ljmp
cmpsb
pop
add
xchg
pop
sub
outsl
aad
imul
push
mov
mov
pop
sub
inc
sbb
orb
mov
push
out
mov
mov
pop
out
aas
pop
pushf
aad
jl
stc
pop
popf
fstpt
add
pop
idivb
scas
iret
rorb
cld
inc
out
add
push
fsubp
dec
add
fsts
subl
mov
test
jl
mov
xchg
pop
cmp
ret
sbb
movsb
and
mov
popf
cmc
inc
mov
psubsw
outsl
push
rcrb
ficompl
and
test
fstpl
mov
mov
xchg
xor
insl
scas
fmuls
aaa
cwtl
testl
stos
sahf
xchg
add
push
mov
pushf
lds
pushf
push
loop
mov
mov
pop
jno
push
xchg
cmp
jg
fwait
mov
xchg
notl
ss
ja
mov
rcrb
leave
push
mov
in
jp
add
push
or
subb
inc
mov
ret
imul
mov
add
jbe
dec
jo
vmaxps
cmpsl
add
out
out
movb
jg
leave
pop
mov
add
movb
pop
lret
push
cs
mov
dec
addl
test
daa
pop
mov
cld
push
sbb
leave
arpl
mov
outsb
cltd
dec
xor
test
icebp
mov
xorl
jecxz
xor
scas
or
dec
mov
mov
cli
fldenv
dec
orb
lods
mov
mov
mov
sub
and
mov
loope
cmp
pusha
popf
push
subl
fidivl
add
fisttps
ret
sub
pop
mov
jecxz
mov
js
pop
xchg
test
lock
xor
cmp
or
xchg
pop
xchg
pop
jg
lret
xorl
or
mov
jmp
dec
push
dec
in
jle
add
sub
out
cli
mov
xor
arpl
mov
out
mov
out
add
sub
mov
in
push
lock
cltd
pop
jae
vpmaxsw
pusha
popf
bound
test
push
push
popa
mov
sub
push
xor
xchg
xchg
add
mov
xor
bsf
push
mov
loope
dec
jge
push
push
mov
rorb
sub
mov
fsub
sub
mov
jecxz
inc
dec
cmp
sbb
popf
dec
dec
lods
push
gs
lea
mov
and
sbb
cwtl
lcall
mov
push
xor
push
into
xchg
out
pop
hlt
mov
or
stos
jge
mov
jmp
nop
testl
out
sbb
xor
repnz
das
lret
pusha
jp
fwait
sub
daa
mov
dec
mov
das
dec
cmc
mov
xlat
ljmp
push
mov
test
mov
test
nop
xor
test
enter
js
sub
lea
push
les
xorl
daa
popf
inc
nop
or
pop
mov
jbe
mov
mov
sbb
icebp
jne
and
jb
xor
mov
dec
push
ja
mov
add
lods
aas
xchg
and
mov
das
ret
cmp
les
push
adc
add
add
das
lret
inc
mov
idiv
and
xchg
fnstcw
xlat
call
inc
add
mov
xor
jg
mov
mov
mov
out
mov
mov
lods
lock
dec
push
inc
adc
shr
cmpsl
rcll
pop
dec
jecxz,pt
repz
sub
loope
mov
jg
out
cmp
addr16
sub
lret
test
ja
lahf
pop
dec
jmp
sub
add
pop
repnz
sbb
test
mov
imul
mov
lret
addb
push
add
rcrl
xchg
out
pusha
add
jmp
pop
mov
jecxz
push
fisubrs
in
mov
fnsave
testl
sub
add
or
je
pop
cltd
out
movsl
inc
int3
enter
add
mov
push
paddsw
sbbb
ss
pop
mov
adc
in
jnp
mov
mov
xchg
cmp
mov
enter
mov
ret
movsb
aas
hlt
add
hlt
cltd
inc
sub
sahf
jecxz
mov
ja
inc
int
test
sarl
push
lret
pop
cltd
sbb
mov
out
or
or
inc
pushl
and
imul
sbb
inc
fsubs
push
mov
cmpsl
push
or
or
push
mov
cli
jl
sbb
push
mov
movsl
sub
pop
rol
out
xchg
in
sbb
pop
push
add
stos
and
in
mov
mov
xchg
lods
in
xchg
xor
daa
or
push
mov
jb
cmp
sti
subb
inc
sub
pop
jns
clc
fisttps
push
rcl
stc
jge
shll
test
add
das
icebp
push
jge
sarb
pop
sub
ffreep
sub
shlb
and
leave
and
dec
mov
jmp
fstp
pop
jmp
fadds
adc
lods
sbb
pop
sbb
or
xor
mov
xor
push
subb
adc
fdivl
dec
loopne
cmp
push
inc
in
xchg
stos
mov
pop
ret
jecxz
push
inc
mov
lret
cmp
jbe
sub
mov
add
icebp
cmp
iret
dec
lret
imul
jge
icebp
jle
lret
and
dec
subps
push
mov
or
add
dec
sbb
iret
popf
inc
nop
sub
xor
and
loopne
test
fists
jl
sbb
test
andl
cmc
lds
ret
stos
xchg
addr16
xchg
mov
leave
fisubrl
xor
push
cmc
mov
iret
jno
and
jle
stos
or
push
loope
dec
dec
in
sbb
xor
or
add
dec
int
test
enter
cmp
pop
mov
push
or
sub
in
mov
leave
fs
inc
cmp
cmpsl
mov
mov
pop
mov
in
adc
dec
sahf
divb
jbe
inc
mov
lret
inc
mov
cs
add
fsubrl
xchg
or
mov
out
pusha
inc
and
out
adc
mov
mov
outsb
nop
cld
and
mov
inc
faddl
jmp
sbb
stos
insb
and
push
pop
push
pushf
mov
push
ljmp
lods
movsb
mov
imul
push
jle
loop
pop
inc
testb
in
loop
jmp
mov
sbbb
pop
and
push
rorb
fs
data16
push
aam
mov
sbb
dec
cmpsl
xor
popf
jno
fwait
addr16
mov
cmp
jp
mov
jle
in
pop
insl
imul
aaa
push
push
xchg
lods
addr16
gs
std
lcall
inc
cltd
mov
pop
popf
push
xlat
shl
xchg
inc
xchg
in
sbb
cmpsb
pop
add
mov
sti
push
jmp
dec
imulb
cmp
sbb
in
sbb
out
sahf
push
test
dec
outsb
xchg
pusha
cld
jp
outsb
enter
jge
mov
js
xchg
test
nop
sbb
push
adc
lea
jmp
xor
inc
popf
push
clc
test
outsl
push
xchg
notb
mov
aas
mov
dec
int3
jecxz
xor
and
pushf
sbb
rorl
jecxz
in
scas
les
xor
add
rcrl
sbb
push
xchg
jl
push
cmpsl
and
jle
cs
scas
aaa
mov
push
cld
pop
sbb
or
adc
sbb
mov
out
dec
pop
xor
xchg
das
xor
jp
icebp
in
das
fcompp
adc
lods
and
inc
stos
adc
arpl
cwtl
cmc
mov
cltd
cld
jge
xchg
or
jle
add
das
aaa
popf
not
dec
outsl
sbb
loop
dec
icebp
es
aas
cltd
cmpb
add
jmp
stc
lahf
lret
stos
cmp
xchg
pop
test
pop
popa
loope,pt
int3
jne
sbb
or
cmp
fld
cld
mov
push
out
lods
aaa
sub
push
test
lahf
out
jl
jl
scas
pop
mov
mov
call
fcmovnb
fs
loop
std
adc
stos
rolb
sub
rorl
cmp
adc
mov
mov
test
xor
fcompl
mov
dec
movsl
or
es
lret
mov
out
mov
mov
int3
jae
inc
out
loope
inc
shrb
rcl
xchg
aad
out
dec
cmp
scas
mov
sbb
mov
outsl
add
ja
jae
js
hlt
sti
adc
cmpl
xchg
call
pop
movsl
aam
xchg
test
scas
dec
fwait
aas
xor
lds
mov
cmp
mov
loopne
jns
lds
xchg
pop
es
sub
jno
addr16
fstl
leave
aas
or
jg
or
mov
stc
loopne
push
cmp
pusha
add
lock
xchg
inc
bndldx
fnstenv
jle
jecxz
testb
sarb
out
aas
ja
add
pop
jmp
addr16
hlt
jl
inc
mov
imul
mov
test
inc
jg,pn
mov
scas
adc
mov
pop
inc
dec
insl
sahf
cld
inc
scas
mov
sbb
add
push
sub
sbb
xor
cmpl
pop
dec
or
sub
cmp
ret
push
push
pop
mov
pop
pop
push
fwait
cmp
inc
add
lahf
arpl
sub
cs
mov
test
push
inc
fidivrs
cmp
sub
insb
lds
push
nop
mov
pop
fsubrl
adc
mov
test
int3
icebp
dec
pop
jl
shll
test
hlt
test
dec
movsl
mov
mov
int3
jecxz
xchg
dec
lods
je
mov
sahf
xchg
arpl
cmpsb
notb
xlat
pop
stc
push
push
mov
jo
stos
mov
cld
push
icebp
iret
mov
je
aas
cmp
insb
loop
sub
jns
lods
cmpl
adc
negl
sbb
loope
aas
dec
inc
inc
inc
in
mull
or
push
stos
pop
jmp
mov
pop
pop
insb
dec
jg
or
in
insl
xchg
and
or
fs
pop
jmp
inc
push
fmuls
mov
cmpsl
daa
push
mov
popf
pop
jg
and
mov
aas
pop
nop
movsl
xorl
test
lcall
repnz
jae
push
ljmp
mov
imul
push
fmull
lret
jo
or
aam
cmp
aaa
inc
test
fistpll
jo
add
jp
pop
pop
inc
and
jecxz
push
loopne
movsb
pushf
fwait
mov
scas
test
mov
ret
sub
loop
mov
mov
pop
iret
or
mov
add
insb
and
cld
int
pcmpgtw
inc
aad
dec
pop
pop
fs
xorl
cmpb
pop
jne
dec
loopne
cwtl
inc
popf
pop
subb
or
pop
inc
stc
das
rclb
nop
dec
loope
repnz
sub
imull
add
lcall
lret
sub
shl
pop
shll
push
ret
fmull
push
je
xor
sub
sub
inc
xchg
add
pushf
outsl
fldl
xor
adc
sbb
pop
jl
mulb
addr16
cmp
and
enter
pop
hlt
dec
movsl
sub
xchg
pop
test
sbb
jg
mov
lods
movsl
popf
out
cmp
into
dec
bound
inc
pop
push
hlt
jb
out
loopne
lds
sbb
mov
fs
iret
cltd
es
jg
jbe
dec
xchg
cmp
pop
add
dec
xor
shrl
inc
jp
or
sbb
lcall
cmp
pusha
cmp
cltd
xchg
mov
cmp
leave
mov
outsl
data16
mov
cli
dec
and
push
pop
sub
adc
jbe
sbb
xchg
imul
lcall
daa
mov
sbb
ja
fisubrl
in
xor
jg
out
xor
dec
xchg
lret
aad
xchg
into
inc
cs
mov
mov
add
lods
dec
movsb
stc
iret
jo
out
cs
addr16
sub
sbb
das
lods
leave
lret
xor
imul
sbb
ss
adc
aas
pop
ja
pop
xor
push
nop
xor
lock
mov
sbb
imul
dec
jmp
out
rcll
roll
testb
pop
mov
dec
push
test
mov
loopne
jns
mov
sbb
jno
jecxz
and
mov
cmp
rcr
test
dec
pushf
jge
cmp
rcll
loopne
inc
leave
xchg
mov
repnz
mov
pushf
xor
adc
int
jmp
jbe
fsubl
and
arpl
sub
ds
sbb
sti
outsb
push
cli
mov
insb
mov
add
loopne
sub
fcomps
or
push
add
mov
daa
adc
mov
cmpsb
adc
inc
lods
movsl
in
cmp
fisubs
in
mov
or
call
fistl
fst
mov
sbb
inc
insl
int
or
fimuls
icebp
jge
cmp
je
mov
push
sub
push
pop
in
push
call
xchg
movsl
or
test
cmpsl
xchg
or
in
sub
and
pop
movsl
bnd
arpl
cmp
loopne
les
loope
ss
test
push
repz
add
enter
jl
mov
sbb
jbe
push
scas
mov
mov
jns
cmp
ret
bnd
xchg
adc
dec
int3
dec
jl
pop
enter
sbb
xchg
pop
in
sub
pop
sahf
loopne
stos
lret
addr16
incl
sbb
mov
adc
int
popa
daa
pop
shll
fisttps
push
mov
pop
or
insl
fbld
sbb
jo
pop
aam
js
ret
xor
mov
repz
stos
lods
mov
xlat
inc
mov
scas
pop
xor
push
mov
or
clc
mov
loopne
and
out
or
inc
hlt
jno
sub
popa
shlb
out
xor
lret
push
push
in
sub
loope
pop
add
mov
ds
clc
xchg
cs
aaa
mov
or
movsl
frstor
mov
pushf
mov
push
cmpsb
mov
lcall
test
arpl
out
mov
or
nop
inc
js
pop
cmp
push
jecxz
pushf
mov
lds
xchg
push
fs
js
jecxz
cmp
xchg
xchg
cmpsb
mov
xchg
aad
add
sbb
adc
out
stc
sub
xor
jbe
outsb
push
mov
lods
cmp
jecxz
outsb
adc
dec
fdivs
stos
xchg
xchg
mov
add
pusha
mov
fmuls
inc
stos
push
std
jp
pop
fwait
int3
enter
cmpsb
jb
pusha
mov
pop
scas
dec
adc
outsl
jnp
outsb
or
imul
mov
xor
cltd
gs
mov
mov
jo
dec
sub
push
addr16
mov
cmp
xor
aas
cmp
push
pop
pop
in
mov
test
sahf
enter
lret
sbb
or
or
and
in
hlt
jl
cmp
pop
and
dec
xchg
jns
in
mov
lods
push
xlat
das
imulb
data16
stos
cli
sbb
jno
clc
push
loopne
pusha
push
in
sbb
or
pop
push
jne
scas
sbb
jo
and
add
pop
dec
and
push
push
push
pop
push
ljmp
cmp
cmc
into
lea
ja
and
sbb
mov
flds
inc
xchg
push
xchg
fisttpll
out
push
sbb
mov
imul
imul
enter
or
jae
shlb
sahf
es
xchg
lock
xchg
test
pusha
push
adc
add
mov
sbb
xor
lea
jno
mov
les
call
push
aad
cmc
cmp
lahf
scas
flds
icebp
mov
stos
mov
or
push
movsb
je
and
test
push
push
and
fdivs
cltd
mov
incl
cmp
push
add
sub
dec
xchg
out
popa
or
xchg
ss
mov
shl
imul
and
and
pushf
sbb
rolb
hlt
mov
xchg
clc
push
mulb
pop
es
mov
and
int
and
out
xlat
bound
fwait
pop
mov
repz
dec
cmpl
jmp
pop
cmp
ret
out
inc
xchg
test
push
pop
insl
aad
scas
jne
jge
test
movsl
fsub
or
in
leave
pop
cs
aas
jecxz
dec
xor
jno
pop
hlt
or
stos
cmp
jp
add
test
aas
sub
push
ror
mov
int
mov
and
lret
xchg
ljmp
les
mov
and
cmovae
sbb
inc
lcall
test
xchg
enter
pop
jge
jmp
mov
loopew
mov
and
fbld
shll
pop
rorl
data16
push
mov
dec
movsl
jmp
jp
sub
lods
adc
jp
push
js
mov
mov
mov
repnz
aad
stos
aam
inc
mov
inc
cmpsl
mov
dec
push
enter
adc
movsl
ds
sbb
in
add
insb
loope
pop
mov
mov
jnp
enter
pop
add
inc
popf
outsl
daa
ret
pop
loop
xchg
stos
jne
inc
rclb
sti
div
pop
imul
jmp
rol
pop
sub
das
mov
mov
test
stos
mov
imull
mov
or
sbb
and
adc
test
ret
loope
xchg
or
loopne
hlt
push
lcall
dec
je
mov
inc
in
jb
shll
push
mov
pop
getsec
fiadds
and
ljmp
test
out
int
in
mov
cmp
fcmovnbe
xchg
stos
mov
out
and
sahf
addr16
dec
shl
leave
and
pop
sbb
cmp
pop
xor
hlt
mov
or
fistps
push
dec
inc
adc
or
sub
movsb
std
clc
arpl
test
outsl
pop
mov
pushf
jno
xchg
mov
imul
fldlg2
sub
psubq
cmp
imul
pop
jecxz
xor
inc
call
pop
add
test
jne
or
mov
push
fadd
fucomip
imul
xchg
or
cli
incl
jno
dec
mov
daa
fisttpll
cmp
aaa
sub
fs
sbb
scas
repnz
cltd
xor
jbe
pop
xor
add
jecxz
in
inc
data16
xchg
sub
out
push
sub
cwtl
arpl
jnp
xor
xchg
mov
js
scas
push
and
inc
stc
jnp
adc
lock
je
mov
pushf
mov
rorl
inc
adc
test
insl
lret
incb
pushaw
xor
stc
mov
loop
inc
jnp
inc
mov
out
loopne
popf
aas
cs
push
test
cmpsb
inc
shlb
outsl
mov
cltd
dec
adc
or
pop
cld
pop
mov
data16
iret
mov
xchg
mov
gs
mov
xchg
and
fsts
insl
sbb
mov
ret
cltd
scas
inc
jmp
xchg
repz
shrl
loopne
inc
fdivl
out
jp
jl
orl
mov
add
enter
adc
add
incl
jge
or
popa
add
mov
dec
lea
leave
bound
mov
xchg
cmovg
sub
pop
add
pop
xchg
pop
pop
push
test
fwait
push
ljmp
dec
fisttpll
mov
dec
and
out
mov
adc
lds
sbb
push
sbb
mov
and
push
add
ret
inc
or
cmp
in
or
in
jp
pop
lret
push
rcrb
sbb
dec
and
mov
stc
cmp
xor
bound
ljmp
push
fiadds
ss
cmp
and
jno
pop
mov
inc
jno
into
xor
xchg
inc
sahf
js
insl
fs
cmpsb
aad
loope
mov
xor
mov
mov
inc
adc
dec
sahf
fisttpl
xchg
test
xor
mov
lds
in
jle
das
vpslld
lods
daa
popa
movsl
rclb
in
inc
mov
dec
inc
jnp
dec
jecxz
stos
xchg
pop
xorb
shlb
jne
sbb
shl
sub
push
xor
ljmp
add
outsb
test
cltd
mov
aad
adc
pop
imul
repnz
shl
lcall
clc
cmp
sarl
push
ljmp
roll
mov
js
or
pop
loop
mov
in
push
scas
call
xchg
add
js
mov
jnp
and
fisubrl
ljmp
inc
dec
clc
jno
notl
les
imul
and
mov
sub
sbb
add
lock
incl
push
cmp
sarb
push
pop
or
shlb
add
inc
adc
mov
push
mov
lea
lea
sub
and
or
mov
stc
jmp
enter
inc
call
mov
pop
and
sti
inc
jnp
fstpt
iret
test
repnz
sbb
fwait
jl
pushf
mov
xor
push
jle
adc
test
pop
scas
push
inc
add
adc
mov
idivb
ficomps
xchg
pop
test
cmp
int
lods
aam
dec
sub
fistpl
outsl
shrb
outsl
int3
daa
arpl
lret
jg
add
cltd
mov
adc
leave
sbb
repnz
sub
int3
ror
sub
leave
ljmp
and
xor
js
xchg
jg
pusha
mov
out
leave
sub
int3
nop
rcll
push
pop
sub
mov
testb
es
cmp
mov
sbb
add
cmp
jle
inc
sub
fs
sbbl
add
cmc
into
lds
mov
imul
in
pop
fcmovb
jge
xchg
popf
push
rcrl
jl
out
insb
dec
test
xlat
xor
jl
lds
mov
call
pop
test
repnz
push
movsl
test
icebp
cmpsl
fwait
mov
and
pop
jns
fwait
lods
fists
sbb
jns
fistps
xchg
mov
in
les
pop
pop
imul
mov
insl
mov
testb
push
push
xchg
jb
xchg
call
pop
lds
movsl
addr16
les
mov
push
sbb
cmc
mov
ljmp
push
pop
into
fmuls
cmpsb
loop
mov
int3
ljmp
sbb
mov
sbb
push
cmp
scas
and
cmpsb
sbb
out
jge
movsl
daa
push
jns
les
mov
fldcw
cs
sti
mov
std
ret
rorb
xchg
xor
loop
pushf
jbe
cltd
push
cli
enter
jg
out
shl
xchg
sub
shrb
int3
push
negl
cmc
push
lret
or
sub
negb
pop
xlat
pop
sub
xchg
push
insb
pop
mov
ja
push
stc
test
xchg
mov
or
push
sahf
imul
mov
xor
insb
mov
filds
jns
push
cmp
jnp
fisubrl
mov
add
xor
ficoml
out
adc
stos
pop
dec
jg
mov
xchg
loop
mov
mov
in
imul
invlpg
mov
sub
xor
fidivrs
cmpsb
nop
dec
xor
testb
or
jne
imul
shlb
mov
insb
sbb
inc
mov
sti
dec
xor
and
dec
daa
sbb
in
jbe,pn
inc
dec
add
or
xchg
es
xchg
mov
xchg
out
xor
xchg
pop
xchg
jge
std
pop
push
jo
stos
outsw
andb
xor
in
xor
mov
mov
fsubl
call
repnz
fsub
in
xchg
out
mov
in
xor
adc
xchg
shl
jmp
xor
mov
scas
test
das
jmp
push
leave
test
lret
xchg
aas
ds
ret
mov
lds
loop
je
lahf
adc
sbb
jno
scas
les
out
or
scas
testl
lods
scas
and
mov
and
pusha
pop
ds
sbb
pop
cwtl
es
lahf
out
xor
xor
je
repz
jp
stc
mov
adc
aad
pusha
sub
aam
pop
mov
mov
xchg
xchg
push
and
popa
dec
xor
jg
movsb
jmp
inc
outsl
scas
cmp
inc
mov
lahf
inc
xchg
stc
data16
pop
sub
sti
shrl
stos
icebp
ss
mov
or
pop
fadd
inc
rcll
cmpsl
pop
ja
lret
add
js
cmpsl
popa
xchg
sbb
aas
cld
push
pusha
jle
test
repnz
lods
sub
adc
add
mov
push
cltd
dec
cmpl
mov
sbb
out
pop
mov
cli
inc
int3
mov
ja
inc
mov
repnz
mov
jmp
repz
out
outsl
pop
lods
lcall
outsb
dec
mov
jno
fs
imul
les
xchg
int
or
jnp
jl
popa
sbbl
jge
neg
push
inc
adc
push
test
dec
lods
popf
xchg
adc
jp
sbb
mov
lahf
sbb
sbb
scas
jle
scas
lds
cwtl
ret
mov
push
mov
add
shll
push
dec
cwtl
insl
stc
fwait
test
xchg
icebp
ljmp
inc
adc
call
jno
add
mov
in
and
add
pop
mov
lods
or
dec
mov
test
popa
push
lods
in
les
jge
or
add
mov
adc
iret
add
ret
aaa
clc
nop
bound
loopne
icebp
div
cltd
iret
stc
add
fwait
lcall
sahf
xor
jge
fstpt
into
sbb
mov
jle
or
mov
mov
das
push
pop
pop
xchg
or
mov
fisubrl
push
mov
sub
dec
inc
fldl
lret
xchg
dec
inc
pop
iret
and
addr16
cmc
xchg
sub
xchg
sahf
cmp
lods
repz
sub
ss
xchg
lods
fmuls
pop
xlat
xor
je
adc
mov
arpl
sub
sbb
test
arpl
fwait
mov
pop
mov
subb
rcl
push
mov
fxch
sub
cmp
aam
mov
es
sub
lds
insl
fcom
int
inc
add
push
fidivrs
cli
jecxz
mov
popa
ja
xchg
pop
mov
mov
dec
dec
icebp
scas
jnp
std
fbld
or
push
in
fs
shll
js
repnz
cmp
shrl
push
pop
push
sbb
daa
push
lods
cmpsl
popf
or
sbb
mov
or
lret
hlt
pop
bound
sti
pop
out
imul
test
jae
mov
data16
cmp
in
pop
mov
mov
mov
mov
jno
pop
rclb
fldenv
pop
xchg
sbb
shlb
aaa
lret
subb
jne
mov
mov
ficoms
shrl
or
in
mov
int
sbb
lcall
jge
cmp
mov
xchg
mov
push
insl
xchg
dec
mov
push
incb
aad
mov
jne
cld
mov
pop
sbb
iret
inc
or
xlat
cwtl
shlb
add
ja
pop
ss
xor
fmuls
xchg
js
inc
xor
mov
and
lock
xor
or
push
pop
int3
add
aam
mov
xorl
ja
cld
daa
inc
fwait
jl
dec
iret
pop
xor
cmp
jne
mov
es
fsubrp
ja
jb
test
push
ret
addr16
xor
jo
lods
sub
stos
js
lret
rcr
cmp
mov
sub
or
mov
push
add
add
test
test
sbb
push
mov
mov
add
ret
iret
fchs
arpl
shl
std
vmulsd
sbb
out
int3
orb
lret
bound
std
pop
cmp
mov
dec
rorl
mov
into
mov
sbb
rorb
mov
push
subl
sub
dec
cmpsl
cltd
lds
iret
xlat
rclb
popa
jbe
mov
jae
jle
repnz
pushf
mov
iret
jp
sbb
sub
les
xchg
xchg
inc
sub
in
jno
repz
mov
pop
int
jl
leave
pop
adc
mov
mov
pop
inc
test
pop
stos
adc
stos
aad
jecxz
movsb
mov
mov
aas
in
dec
jge
cltd
xor
xor
gs
pop
dec
arpl
sub
enter
fnsave
jmp
xlat
orl
out
push
flds
faddl
fsubs
mov
push
popf
dec
xor
sti
ljmp
push
js
lods
rclb
push
arpl
ret
sub
ds
fmul
scas
mov
jb
mov
jp
xchg
insb
movsl
pop
fidivrl
jbe
xor
sbb
addr16
out
fldl
xchg
cmp
out
sbb
push
adc
mov
aam
pusha
aas
and
adc
je
aas
fcmovb
int3
imul
ss
arpl
imul
or
lods
sub
incb
pop
mov
adc
or
and
and
mov
shlb
mov
out
fcomi
dec
push
fdivrs
imul
xchg
mul
test
clc
loope
mov
ss
mov
xor
push
dec
sbb
cmp
cmp
movsl
pop
lock
jecxz
icebp
cmp
mov
fcomip
mov
lods
insb
lret
push
mov
ljmp
rol
cs
ret
test
cmp
in
jmp
push
sub
daa
lea
jecxz
fmull
stos
aad
das
das
mov
movl
push
pop
rcrb
cltd
int
cmp
shrb
pop
or
scas
rclb
das
aad
lret
jbe
lock
out
cmp
into
je
push
sub
cmp
push
mov
xor
mov
mov
xor
lret
loope
mov
in
pop
in
cmp
adc
inc
rcr
inc
and
lock
les
js
loope
add
ds
xchg
fldl
mov
push
lods
dec
into
add
cmp
leave
icebp
jge
sbb
sahf
xor
inc
mov
cmp
and
mov
dec
aad
daa
fmuls
xchg
pushf
mov
paddusw
or
push
pop
outsb
and
add
fimuls
pop
xchg
or
dec
imul
sti
dec
mov
aaa
out
in
rcl
orl
jg
jne
or
ret
mov
fwait
jle
push
jae
xchg
insl
mov
hlt
icebp
xchg
mov
aam
mov
or
mov
or
jecxz
rcr
lods
mov
fs
stos
sbb
inc
jmp
inc
inc
xor
cmpsb
jp
dec
mov
add
push
pop
bound
mov
ljmp
mov
sub
xchg
cmc
data16
cmp
or
scas
pushf
push
sahf
xor
pop
pop
cmp
fisubrs
enter
adc
inc
dec
add
repz
cmp
sub
lock
jb
movl
add
aaa
rcll
lds
mov
adc
pop
div
or
js
sarb
cmp
sbb
add
sub
js
sbb
in
sbbb
into
je
outsb
lar
cmp
aaa
out
icebp
jno
inc
mov
pop
adc
sbb
stc
and
lock
addr16
sti
or
mov
add
jae
cli
xchg
mov
inc
es
xchg
mov
jge
jle
lock
pop
jb
mov
push
out
xchg
pusha
dec
mov
iret
jo
movsb
movsb
push
stos
call
xchg
pop
icebp
xchg
js
rcrb
loop
inc
dec
mov
push
mov
jne
or
std
insb
into
xchg
aas
scas
cmp
insl
push
popa
push
inc
mov
push
mov
lods
jge
xor
mov
xor
xchg
lds
lods
xchg
inc
and
lock
dec
jl
cld
xchg
je
push
ljmp
es
enter
adc
lods
in
aam
in
daa
in
lods
fsubrs
adc
and
fisttpl
les
out
jbe
in
mov
jg
loope
and
ja
cmp
scas
adc
notl
sbb
inc
sti
insb
xchg
rcll
mov
mov
jne
mov
fsts
mov
ds
push
or
out
mov
jmp
xlat
fxch
lds
daa
adc
mov
cli
movsl
mov
or
lahf
out
cmc
jb
mov
mov
andl
mov
and
test
add
nop
popf
or
rcl
inc
popf
cmp
push
mov
dec
dec
sbb
mov
cmp
xchg
mov
shll
fisubl
into
cmp
lods
dec
pop
inc
test
pop
inc
adc
ljmp
in
inc
sub
addr16
jbe
push
mov
jmp
sti
mov
xchg
out
mov
imul
cli
mov
jge
into
cltd
and
mov
jne
inc
push
sub
stos
std
inc
jecxz
adc
push
pop
cs
subb
jl
or
jnp
push
lcall
mov
xchg
cmpsb
jb
mov
jae
pushf
mov
mov
dec
enter
jns
addr16
decl
push
pop
rolw
and
jecxz
mov
mov
lods
rcrb
jnp
xchg
add
mov
adc
sbb
dec
repnz
je
adc
orl
xor
mov
mov
jne
in
test
ds
out
aam
pop
pop
sbb
xor
shrb
mov
dec
and
add
shlb
sub
ss
xchg
rolb
mov
or
les
aas
and
enter
xchg
cmc
lret
mov
out
aas
ljmp
xchg
pop
outsl
mov
push
adc
and
roll
xor
add
fwait
sbb
out
mov
insl
js
and
cld
add
imul
mov
addl
or
mov
xchg
or
iret
jo
ret
dec
adc
inc
nop
inc
mov
xchg
int
fistps
push
je
imul
push
fs
bound
push
insb
ja
sbb
dec
mov
xor
pop
adc
aas
inc
pusha
rcr
dec
pop
and
scas
test
iret
xchg
mov
mov
fcmovne
sahf
push
iret
push
mov
lahf
pop
sbb
test
fmull
popf
jnp
mov
adc
xor
jns
negb
in
sub
adc
das
out
das
mov
cmpsl
adc
mov
aas
popf
roll
mov
es
or
mov
mov
pusha
lods
xchg
inc
push
cltd
shlb
in
repz
and
pop
imul
xchg
lods
addb
xor
pop
cmp
dec
out
ror
fidivl
mov
nop
aas
repnz
sub
jge
pop
mov
iret
dec
pop
push
pusha
mov
pop
fdiv
repnz
aam
mov
fwait
pop
xchg
test
in
out
inc
add
cmp
inc
jnp,pn
pop
ficomps
jge
mov
inc
out
mov
cmp
push
cltd
in
outsl
mov
push
push
pop
lret
push
xchg
adc
imul
rorl
lods
jb
insl
outsb
jle
ret
dec
lret
shrb
mov
add
add
xlat
testb
pop
in
inc
mov
outsb
dec
xor
inc
mov
cs
xor
sahf
lcall
xchg
adcb
fs
mov
call
and
or
out
pop
push
jle
jl,pn
icebp
enter
imul
mov
jno
lahf
add
sub
out
xchg
shll
or
pop
adcb
popf
cmpsb
xchg
jmp
cmp
jbe
mov
dec
outsb
in
jp
mov
cmc
imul
mov
and
insl
mov
sub
xchg
sub
pop
jne
sbb
push
cmp
mov
repnz
fs
sbb
mov
cwtl
sub
int
xchg
lret
inc
ret
into
jecxz
cmpsb
inc
insl
daa
xor
outsl
jmp
push
add
push
movsl
cmp
xchg
jle
test
es
mov
pushf
shrl
inc
xor
ja
or
dec
mov
mov
or
cmp
add
out
xor
sub
lahf
rorb
aad
repnz
xchg
scas
mov
jl
cwtl
pop
fdivr
lock
xor
into
or
not
cmpsb
push
popf
stos
jbe
xchg
push
sub
fadds
fs
sub
repnz
rclb
cli
je
jne
test
sbb
out
leave
js
inc
arpl
lock
push
in
push
test
cmp
and
or
jp
pop
adc
hlt
in
mov
nop
clc
push
jl
aaa
jl
add
std
in
cmp
fildl
inc
push
andb
jle
scas
pop
test
repz
in
cwtl
outsl
cmp
lahf
mul
das
bound
xor
push
ds
cmp
xor
pop
mov
in
negl
shrl
add
pop
add
incb
fsub
into
sub
pop
in
out
cld
pop
scas
mov
jp
adc
adc
adc
aas
xlat
and
test
les
imul
cld
or
imul
push
test
cmp
stos
mov
inc
xchg
nop
and
jno
aam
clc
pop
fwait
dec
pop
xor
imul
lret
push
aad
xchg
mov
iret
sub
fnsave
pop
or
xchg
mov
mov
and
xor
mov
jne
addr16
ja
mov
sbb
mov
int3
mov
jecxz
mov
rdpmc
pusha
push
push
flds
or
lret
les
addr16
jae
andb
pop
lods
push
loop
cltd
daa
dec
push
loope
lds
rclb
mov
leave
mov
in
mov
lock
xor
pop
adc
das
inc
add
mov
insl
add
bswap
das
xchg
rolb
push
in
out
in
pop
std
ret
mov
xchg
lret
push
jno
or
shrb
add
push
jbe
push
mov
cmp
loopne
shlb
ret
mov
xchg
cld
mov
mov
fldl2e
rcll
mov
jns
dec
lret
xor
fs
add
in
mov
movsb
mov
adc
icebp
jne
cmp
outsb
aaa
mov
mov
mov
jb
lret
or
jmp
add
jb
out
scas
sbb
out
dec
fs
repz
fwait
cmp
pop
xor
xor
scas
scas
mov
jae
push
outsl
rcrl
mov
rorl
cltd
pop
dec
xor
ja
mov
ficompl
jle
sbb
rorl
jo
adc
sbb
mov
lret
mov
aam
ret
jg
in
lahf
dec
ror
or
outsb
jae
cmp
xchg
mov
pop
mov
dec
stos
push
add
cld
data16
icebp
fcomps
jge
test
loop
popf
test
push
ds
cmp
ljmp
adc
adc
sbb
outsl
ds
mov
cmc
and
mov
sub
sub
adc
lock
scas
pop
jle
andb
stos
shlb
test
jnp
lret
daa
ret
inc
dec
sub
sarb
xchg
loope
mov
inc
mov
jae
es
shlb
mov
clc
inc
push
mov
stos
push
mov
inc
mov
jle
imul
mov
dec
popa
jge
push
jl
xchg
inc
pop
int
inc
imul
fildll
mov
sar
outsb
icebp
je
aam
pop
and
cmpsl
test
adc
jno
jg
stos
mov
push
pop
dec
xchg
std
es
call
or
mov
dec
dec
or
leave
sub
rol
xlat
ja
out
test
sbb
xor
imulb
mov
jb
inc
aam
push
and
pop
les
push
movsl
push
sub
loop
scas
xchg
inc
insb
inc
nop
out
xor
and
xor
push
gs
loopw
addb
out
add
mov
and
arpl
push
data16
cltd
push
xor
popf
imul
es
xor
mov
cmp
jecxz
filds
out
aad
dec
call
loopne
in
pop
lret
pop
mov
scas
or
mov
lret
cmp
pop
hlt
push
out
xor
xor
mov
aas
sbb
xchg
idivl
or
addl
ja
jmp
fldt
iret
pop
ss
mov
push
and
sub
pop
jb
mov
or
test
and
mov
mov
fs
add
aam
scas
push
mov
movsb
push
inc
mov
scas
in
cmp
cmc
adc
inc
je
sbb
inc
cld
ljmp
sti
push
pop
cmp
pop
insb
mov
sbb
sub
mov
dec
ss
mov
hlt
push
pop
add
fisubs
in
aad
sbb
ja
ja
pop
mov
mov
mov
aas
or
pop
fsts
mov
add
daa
push
add
mov
dec
xchg
daa
repnz
sbb
pop
jmp
aaa
lahf
inc
or
ja
negl
or
cmp
imul
loop
pusha
adc
dec
lret
xchg
int
pop
mov
xor
push
sub
push
adc
mov
popa
adc
divb
push
jns
push
ljmp
xor
dec
pop
fiaddl
jg
dec
push
jae
jmp
test
xor
mov
adc
push
dec
push
aaa
popf
cmc
repnz
in
pmullw
addr16
dec
sarl
dec
ffree
cmp
sbb
mov
mov
push
insl
jbe
test
jge
sub
hlt
repz
pop
and
and
or
and
sbb
jge
mov
lds
call
cmp
out
js
xchg
stc
sub
fisttpll
ljmp
notl
jbe
sbb
roll
pushf
and
daa
xchg
movsl
push
iret
icebp
jb
shlb
data16
popa
pop
mov
mov
xchg
lret
xchg
pop
ja
cltd
add
add
aad
rorl
mov
mov
sub
outsl
lods
test
jle
stos
shll
cmp
loopne
movsl
pop
or
sahf
xchg
cwtl
cltd
fsubr
repz
sub
loop
mov
in
sub
cli
bound
aas
xchg
jmp
xchg
xor
jmp
int
ja
movsb
popf
popl
ljmp
sub
fwait
cltd
dec
cmpsb
jbe
lods
rorb
imul
fdivs
push
cmc
mov
mov
dec
leave
pop
jns
pop
dec
add
or
andl
pop
adc
add
andb
loopne
scas
dec
inc
pop
xor
pushf
fldl
ficompl
add
daa
adc
les
cli
cmc
xchg
push
leave
dec
dec
push
push
xor
or
sub
adc
adc
scas
xchg
fcomps
js
add
pop
dec
imul
mov
pop
adc
lds
push
pop
and
xchg
jns
int
test
outsb
sarl
jbe
pop
loope
insl
jns
mov
lret
pushf
jns
rolb
imul
push
imul
jbe
js
sbb
adc
inc
or
xchg
ds
inc
xor
jge
adc
mov
rorb
sbb
pop
push
mov
mov
xor
xchg
xchg
add
pop
cmp
div
aam
andl
pop
pop
or
shrb
and
shrb
dec
aas
mov
cmpl
out
loop
imul
out
ja
mov
pop
mov
movb
cmpsb
mov
sub
cmp
addr16
push
rorl
cmpsl
dec
mov
sub
test
int
in
sbb
add
enter
xor
sahf
test
andb
pop
dec
pop
jnp
pop
mov
push
fwait
add
mov
sbb
in
mov
loopne
and
aaa
leave
sbb
hlt
mov
mov
aam
andl
push
andl
ja
xchg
int3
xor
out
cmp
lock
xchg
jge
jo
or
out
sub
or
add
out
and
in
ret
mov
sub
negb
sbb
dec
fldcw
stc
mov
sbb
or
cmc
or
jecxz
ret
jmp
add
mov
push
aas
rcrl
mov
or
mov
sbb
loope
repz
mov
lea
rolb
push
mov
jmp
inc
pushf
mov
and
movsbl
mov
mov
pusha
fsubl
cmp
dec
int
aad
mov
pop
dec
sub
jbe
mov
out
jle
push
lods
sbb
jnp
divb
cmp
call
dec
mov
repnz
pop
sbbl
mov
in
orb
adc
inc
mov
in
sub
out
clc
loopne
mov
or
mov
lea
add
sbb
stos
cld
jle
test
jmp
cwtl
jle
mov
xchg
pop
inc
cmp
mov
sbb
ljmp
in
xor
jmp
dec
js
lret
shlb
mov
fsubrl
mov
pop
rorl
lock
mov
adc
cmp
push
mov
xchg
and
cwtl
daa
or
cmp
push
push
andb
inc
add
and
lea
cmpsl
xchg
add
bound
rorl
or
arpl
jns
and
je
ds
je
std
mull
loop
push
pop
es
gs
cmpb
movsb
inc
jne
mov
das
test
pop
push
lahf
push
sbb
adc
shll
aam
aad
add
pop
loope
sbb
sub
adc
sbbb
out
sub
addr16
pop
push
mov
psubd
sbb
test
jns
lcall
hlt
and
xorl
or
nop
xchg
int
fs
inc
or
adc
int3
adc
pop
cwtl
imul
pushw
xchg
in
add
ficoms
mov
shrl
cmp
andl
es
repnz
std
rorl
xchg
fisubl
ficomps
in
mov
push
adc
xchg
pop
jnp
jnp
ret
jnp
je
popa
iret
in
cmpsl
mov
ret
ret
stc
jle
fldenv
shlb
sub
in
xor
mov
rcll
roll
rol
and
xchg
mov
mov
scas
adc
repnz
push
out
jns
pop
or
mov
jno
xchg
dec
andl
push
jno
fisttps
bound
and
add
inc
xor
pop
jno
mov
stc
pop
xor
lods
xor
dec
cwtl
mov
call
cld
cmc
cltd
cmpsl
insb
daa
mov
cmp
jecxz
aaa
enter
mov
adc
push
je
insl
mov
cmpsl
dec
adc
loopne
xchg
lods
lds
sti
popf
imul
loopne
push
dec
and
pop
pusha
xchg
xorb
cmpsl
push
xorl
imul
dec
icebp
in
loop
rclb
out
in
insb
and
or
out
mov
push
adc
adc
sub
loope
cld
cmp
jmp
test
insb
push
push
test
ljmp
hlt
repz
inc
dec
and
add
and
mov
xchg
jmp
lods
out
jo
inc
leave
mov
cmpsb
popf
pop
shrb
clc
sarl
push
mov
int
cmc
dec
cmpsb
pop
mov
jbe
mov
pop
cld
dec
hlt
shr
or
mov
cmp
xchg
mov
jne
lahf
push
loop
inc
arpl
mov
jne
or
popa
cmp
aam
clc
xchg
jp
in
add
jb
push
xchg
jnp
into
imul
adc
inc
xchg
push
out
in
jg
push
xchg
lea
ljmp
dec
loop
cld
es
loope
inc
loope
scas
sbb
cli
mov
pop
mov
mov
xor
pop
test
cltd
imul
lahf
mov
inc
ret
lahf
cmp
add
add
repz
outsl
pushf
sbb
push
mov
push
mov
jnp
xor
add
shlb
mov
jnp
shl
pop
mov
out
mov
test
mov
push
mov
rcll
ja
out
jle
out
mov
pop
lock
jbe
mov
inc
scas
push
lods
mov
jns
add
fdivs
dec
sbb
int
scas
mov
jp
cmc
inc
or
sbb
inc
or
rcl
push
gs
push
fisubl
mov
xor
jecxz
out
stos
mov
das
fisttps
repz
cmp
pop
fsub
repnz
loopne
and
xchg
inc
mov
jns
pop
hlt
sbb
or
sahf
mov
push
shlb
xor
sti
adc
mov
and
dec
or
mov
push
sti
jmp
lods
ljmp
pushf
xchg
xor
adc
dec
mov
xchg
sbb
jg
xchg
lods
orl
stos
pusha
sub
rorb
std
ffreep
push
imull
pop
stc
pop
xchg
cmp
fmuls
sbb
repnz
mov
fwait
and
std
adc
scas
in
aam
fildll
andb
dec
mov
dec
or
scas
outsb
pop
movsb
arpl
mov
add
jb
add
lret
stos
jbe
fs
lret
mov
es
cmp
repnz
cs
mov
inc
imulb
je
push
fcoml
push
int3
call
insl
insl
lcall
cmpsl
addl
es
insl
cmpsb
dec
cmpsb
jb
fcoms
add
dec
or
jmp
xchg
mov
cmpsl
xlat
int3
icebp
inc
in
xchg
add
xchg
xor
jb
sbb
dec
es
inc
push
or
cmp
inc
mov
sub
inc
xor
inc
outsb
clc
test
ror
lahf
sahf
ljmp
cwtl
repnz
les
repz
cli
mov
movsb
and
and
push
cmp
jno
lcall
jae
lret
mov
add
pop
pop
cmpsl
xchg
loope
test
mov
outsb
xor
ret
mov
mov
mov
xchg
jmp
pop
loope
inc
mov
hlt
inc
lock
cmc
push
mov
dec
data16
fiaddl
mov
jp
fidivs
xchg
mov
pop
lcall
push
in
les
jle
xchg
add
pop
lock
xchg
add
adc
insl
cmpsl
xchg
pop
cmpsl
mov
mov
ja
aas
icebp
dec
xor
or
subl
ds
fstl
dec
in
bound
test
into
jge
xchg
jmp
jge
dec
mov
mov
push
aas
addl
add
movsl
push
mov
cs
cmpsl
push
xchg
pushf
dec
popa
icebp
push
xchg
mov
lea
inc
jg
adc
sahf
adc
add
adc
mov
scas
rclb
in
lcall
fcmovnbe
inc
das
fiadds
sti
jg
cmc
cmp
xchg
xor
sbb
lods
adc
rcll
pop
cltd
or
sbb
dec
insb
pop
pop
fsubs
cmc
divl
mov
shrl
and
pop
xchg
ljmp
test
jns
mov
dec
scas
bound
aas
into
mov
test
gs
pop
repz
sarb
xor
mov
xchg
les
imul
scas
jecxz
and
add
and
jbe
sarl
cli
ja
ret
dec
popa
inc
sbb
mov
or
sahf
inc
leave
pop
sub
sub
cmp
sub
sar
sbbl
and
loopne
shlb
mov
js
xchg
icebp
push
mov
leave
sahf
in
xor
push
pop
stos
inc
lret
pop
pop
das
push
pop
jb
mov
aaa
xchg
xorl
lahf
mov
cld
xor
loopne
test
push
lret
or
push
ret
jne
scas
xchg
xor
push
push
inc
les
icebp
adc
lcall
mov
xchg
stos
xlat
inc
pop
cmpsb
sub
jo
add
ficoml
call
xorb
add
rclb
lahf
lock
mov
jecxz,pt
pop
repnz
je
add
push
pop
out
daa
sahf
scas
xlat
data16
mov
adc
mov
aaa
stc
pause
addb
ret
fdivrs
int
jp
push
fildl
out
or
push
xchg
dec
daa
aam
jb
outsb
dec
loope
xchg
dec
mov
in
inc
or
jnp
mov
and
push
outsl
lcall
mov
xor
daa
aas
leave
fs
sti
popf
in
test
jno
or
xor
test
pop
mov
rorl
fcompl
cs
int3
fmuls
int3
cld
jp
mov
and
mull
xor
pop
dec
into
sti
add
std
int
stos
bound
adc
sbb
stos
js
pop
cltd
addr16
arpl
pop
pop
pop
sbb
lods
test
xor
jge
sti
jmp
jae
lods
inc
mov
add
or
push
scas
sbb
xchg
movsb
add
es
jns
push
adc
and
test
push
or
and
pushf
push
sarb
push
push
xor
mov
ret
dec
paddsw
adc
and
popa
loope,pt
imul
mov
mov
mov
aam
or
movsl
into
push
out
inc
pop
fstpt
fdivrs
pop
xor
mov
add
repnz
mov
scas
add
addr16
adc
subb
mov
mov
pop
mov
jbe
hlt
dec
inc
lahf
fmulp
push
loopne
mov
orl
or
sbb
ja
cmp
jmp
std
xchg
jne
mov
and
mov
mov
pop
adc
jp
lea
pusha
stos
popf
sbb
scas
push
dec
outsb
dec
pop
shll
mov
jo
add
adc
pop
fisttps
or
scas
mov
xchg
and
pop
cmpsl
out
aaa
stc
or
sub
mov
in
xor
rcrb
dec
rcrb
mov
sarl
ret
lcall
sti
scas
jbe
add
inc
mov
and
pusha
jo
fs
add
dec
std
mov
cmpsb
dec
cmp
in
or
sbb
mov
jmp
push
rol
in
lret
ja
sub
pop
jne
adc
leave
lea
test
filds
pmulhw
push
ficoms
shlb
dec
sbb
in
push
cmpsb
sub
dec
and
call
sti
jno
loope
pop
push
aad
gs
mov
jecxz
test
insb
out
call
mov
stc
in
aam
arpl
mov
lahf
lods
pop
adc
xchg
incb
push
mov
test
pop
mov
add
cmp
inc
mov
xor
pop
xor
ficompl
dec
lods
push
jecxz
push
dec
mov
pusha
xchg
mov
lret
dec
aad
lock
scas
mov
pop
insl
pop
shrl
xor
int
dec
push
sub
js
pop
ret
inc
pop
addr16
mov
pop
sbb
jp
cld
push
movsl
or
lret
dec
jne
push
sbb
and
and
lds
sub
js
xor
cmpsb
pop
jo
dec
adc
cli
mov
cld
jae
out
pop
or
xchg
es
jecxz
push
jle
mov
subl
movsb
test
push
mov
sub
pusha
roll
push
jecxz
sub
sar
or
inc
cmc
jecxz
xchg
or
xchg
push
mov
mov
pop
call
call
aam
jb
and
stc
es
sub
xorb
xchg
movb
cmpl
pop
mov
sbb
pop
popf
dec
int
jmp
inc
fcmovb
rcl
adc
sub
stc
icebp
pop
lods
repz
repz
lahf
shll
cltd
mov
sub
cs
das
iret
les
std
insl
dec
dec
mov
jmp
xchg
mov
mov
adc
shr
loopne
mov
and
inc
xchg
cmpsb
fdivr
xchg
and
sbb
lret
push
fistpl
dec
push
xchg
in
mov
cmp
fimull
adc
jae
xor
lret
call
add
push
nopl
add
fs
fcmovb
fmuls
test
in
das
sub
daa
push
test
movsl
push
mov
sbb
loopne
xor
push
ror
es
xor
inc
cmpsb
aam
mov
mov
out
icebp
push
rcrb
bts
push
mov
mov
or
scas
xchg
mov
xlat
popf
inc
pop
pop
inc
iret
decb
xchg
test
xchg
cmc
shrb
pop
xor
push
sub
fistl
jbe
add
jb
sbb
cmpsb
in
xor
mov
sar
fcomps
cmp
pop
mov
rorb
in
popa
adc
jmp
pop
std
pop
or
push
test
mov
push
enter
fwait
insl
test
test
outsl
pop
in
sub
enter
xchg
push
jae
dec
into
dec
push
jnp
enter
lcall
cmpsl
pushf
imul
sahf
fs
pop
adc
rclb
jns
aam
loopne
cltd
je
fcmove
lock
or
das
cmp
sbb
in
jmp
mov
dec
push
mov
insl
hlt
cmp
cmc
lds
jo
fdivrl
and
and
popa
sub
ja
stc
xchg
addr16
out
cmc
enter
cltd
lcall
sub
pop
icebp
mov
fwait
cmp
idivb
and
push
xchg
or
pop
adc
xchg
pop
pop
imul
sub
daa
je
jge
aad
call
rolb
flds
pop
xchg
mov
shr
adcl
mov
in
add
psrad
dec
sahf
mov
dec
pop
in
inc
inc
mov
pop
and
call
cmpsb
jle
mov
sub
rcrl
ficompl
repnz
and
sbb
test
push
insl
ret
adc
lcall
dec
mov
sub
dec
lret
pop
sbb
pop
clc
pusha
bound
sbb
xor
int3
sbb
pop
dec
in
add
mov
sub
test
push
cld
xchg
stc
cmp
sub
push
arpl
cmp
lcall
dec
jno
push
icebp
cmp
mov
lods
mov
in
mov
lcall
rol
ds
cmp
push
cmp
mov
test
stos
ret
cmp
ret
add
add
adc
jp
xor
nop
xor
fisttpl
xor
es
mov
jbe
add
sarl
xorl
xchg
mov
arpl
inc
add
dec
imul
and
ja
shlb
xor
mov
lock
mov
pop
icebp
ja
in
int
mov
loopne
cli
rcll
ss
loopne
shll
lea
mov
in
ficompl
test
int
mov
inc
dec
aaa
clc
jecxz
das
push
or
movb
dec
rolb
or
shlb
xchg
mov
and
add
jne
mov
je
mov
lahf
add
adc
call
sub
cmp
push
inc
repz
adc
xchg
mov
mov
jb
rcrb
push
scas
shlb
daa
or
adc
or
and
data16
push
mov
pop
or
pop
sbb
xchg
cmp
jne
dec
call
gs
sbb
into
ficoml
cmpsb
lock
cmp
fmull
sarl
int
xlat
xchg
dec
pop
inc
jo
xchg
ret
pop
fisttpll
out
dec
sti
mov
cmp
push
iret
inc
mov
mov
pusha
inc
mov
mov
mov
pop
repnz
das
cmp
cmp
ss
mov
jmp
push
and
cmp
push
int
stos
push
out
jle,pt
pop
cmp
fcmovbe
push
fldcw
sub
shlb
popf
leave
test
icebp
and
into
mov
mov
and
push
dec
int
shll
mov
bound
test
leave
loopne
pop
icebp
aam
pop
mov
xchg
sbb
cmp
iret
imul
data16
aaa
xlat
or
inc
mov
out
loopne
and
sub
lock
ret
or
je
or
hlt
xor
jno
adcb
cmc
ja
sbb
lcall
xor
stc
xor
roll
and
cmp
add
shll
cmp
push
sarb
xor
into
daa
in
std
jg
negl
sbb
loopne
jns
adcl
sahf
dec
test
scas
jb
pop
bound
mov
jno
mov
out
clc
out
cwtl
mov
out
pop
es
jnp
and
pop
icebp
andl
cwtl
push
dec
inc
jle
push
and
into
popl
rcrl
sub
or
push
dec
mov
or
ret
add
scas
and
dec
mov
and
xor
popl
data16
pop
push
dec
add
pusha
scas
pop
dec
jo
dec
ret
push
mov
pop
xor
sbb
inc
jo
xchg
mov
repz
or
sub
std
cmpsl
adc
xchg
xchg
fs
call
sub
dec
stc
push
sub
sahf
and
cmp
int
dec
int
cs
fildll
dec
in
test
sbbb
sbb
hlt
pop
adc
mov
das
push
aad
mov
xchg
hlt
aam
jno
mov
mov
call
shll
lret
inc
sbb
lods
pop
add
lcall
stos
mov
scas
sbb
test
fcoms
dec
std
adc
scas
cmp
inc
pop
out
lods
or
adc
loop
fsubrs
inc
or
imul
xor
aaa
cmp
push
cmp
sbb
fcomp
mulb
mov
inc
fwait
stos
hlt
orl
add
out
daa
cmp
xor
les
pop
stc
pop
xchg
fwait
xchg
data16
icebp
jecxz
pop
mov
adc
std
fisttpll
loopne
add
mov
ficomps
jbe
push
scas
or
mov
push
jl
xchg
xor
mov
movsl
xchg
aam
sub
adc
jnp
mov
add
xor
mov
sub
addr16
mov
push
jo
xlat
jns
std
inc
xor
jecxz
inc
lods
rol
mov
popa
dec
lcall
mov
scas
mov
rorb
fisubrl
mov
mov
fnstenv
push
test
lea
cmc
push
jbe
loopne
cmp
mov
push
mov
mov
js
adc
movsb
adc
sub
mov
jmp
fisubs
xor
enter
pop
outsb
in
mov
repnz
push
rcrb
mov
test
and
jecxz
movsl
adc
mov
imul
in
mov
mov
sub
jg
push
idivb
push
mov
bound
out
ret
pop
loop
mov
cltd
cmp
cmp
mov
movsb
xchg
xor
insl
mov
push
inc
or
jne
mov
cli
shl
or
xchg
rep
adc
loop
aaa
push
inc
pop
inc
xor
pop
cmp
push
sub
add
mov
adc
dec
shlb
inc
dec
jle
outsl
rclb
jno
push
aam
hlt
xchg
adc
inc
cltd
add
sbb
pop
leave
lea
imul
inc
mov
dec
push
and
das
std
xor
or
or
out
push
sub
lods
lea
jge
mov
mov
cmp
cltd
dec
std
jg
mov
inc
xor
rorl
orb
inc
cmp
hlt
int3
or
inc
test
or
scas
andb
ljmp
fcoml
xlat
pop
lahf
clc
add
dec
daa
push
out
mov
int
jno
out
pusha
movb
or
pushf
add
push
jle
pop
addr16
jp
push
fwait
xor
push
mov
sbb
inc
sub
cmp
and
into
gs
ja
ss
loopne
and
sub
leave
imul
push
sti
incb
shrb
ss
jmp
cld
cwtl
out
cs
xchg
fsubrs
push
in
shll
iret
jae
xchg
lods
mov
in
mov
rclb
cwtl
sbb
loope
mov
and
dec
inc
jge
xor
mov
in
sbb
sub
into
dec
lea
adc
cmp
sub
inc
test
fwait
out
mov
mov
push
cld
loop
adc
mov
dec
addr16
cmpsb
movsb
adc
mov
lret
mov
xor
imul
or
pop
int3
nop
or
jecxz
cltd
cmp
outsl
mov
loopne
lcall
dec
loop
es
adc
inc
in
mov
jno
out
insl
xchg
pop
pop
mov
hlt
clc
das
insl
sub
dec
fisttpll
cmp
cwtl
out
data16
pop
mov
inc
js
sub
cltd
cmp
push
popaw
leave
cmpsb
jge
pushf
xchg
hlt
out
sub
pop
nop
xchg
orb
pop
clc
test
dec
sti
sbb
imul
test
dec
adc
xchg
fwait
jge
scas
cli
add
cli
adc
shll
ss
fsubs
mov
cmp
pop
sbb
iret
add
out
in
xchg
addr16
andb
ljmp
pop
sbb
cmp
cltd
xchg
pop
jno
push
das
mov
addr16
xor
cmc
daa
adc
inc
hlt
das
in
push
cltd
test
mov
pushl
xor
out
or
and
mov
sbb
jg
andb
adc
fbld
aam
fisubrl
lcall
inc
testb
dec
ret
lods
jecxz
push
ja
imul
mov
sub
jp
out
mov
int3
in
xor
mov
sbb
cld
push
aas
mov
cwtl
jge
test
out
into
lods
sbb
inc
push
decl
fst
sbb
xchg
inc
in
lahf
and
ja,pn
push
icebp
in
divb
pop
jne
clc
pushf
stc
rolb
imul
pushl
inc
sub
and
pop
je
fnclex
into
mov
inc
push
xor
in
mov
repnz
pushf
pop
jg
sbb
gs
add
xchg
popf
and
insb
xchg
push
imul
xchg
inc
adc
jecxz
mov
push
or
pusha
sbb
loope
rcrl
cmp
mov
sbb
daa
adc
aas
int
lods
push
imul
addb
arpl
pop
ret
cmp
js
mov
jecxz
lds
ret
cmc
nop
mov
test
sub
add
cltd
imul
ljmp
pop
lahf
cld
adc
mov
lea
cld
mov
mov
mov
shr
cmp
addr16
xchg
xchg
scas
mov
ret
lea
mov
xchg
test
mov
dec
subb
insl
pop
xor
pop
pop
arpl
jnp
sub
cmc
and
mov
mov
das
aam
fmul
notl
pop
pop
xchg
cmpsb
jns
insb
imul
inc
les
mov
or
cmpb
addr16
pop
rolb
inc
mov
dec
adc
mov
daa
sbb
rolb
xchg
inc
pop
scas
sub
pop
and
pop
iret
add
jl
mov
and
sbb
cld
dec
push
fisttpll
outsb
enter
xchg
adc
ja
in
pop
pop
gs
sbb
into
lahf
loope
test
imul
pop
ljmp
js
or
imul
mov
xchg
jb,pn
sub
stc
lret
div
imul
sahf
inc
lock
adc
notl
sub
insl
out
cmpsb
popa
lods
cmpsl
jne
inc
inc
insb
lods
out
xchg
in
fists
test
lds
fdivrs
inc
data16
adc
pop
dec
inc
out
call
xor
movsl
and
popf
xchg
pop
gs
jecxz
inc
cli
pop
jno
inc
jmp
adc
movb
mov
jno
insl
cltd
jle
into
mov
or
add
jne
mov
jnp
sub
and
push
sub
jo
fisttps
popa
jne
push
nop
pop
sub
xor
in
mov
iret
or
fldt
ds
mov
xchg
in
mov
insb
es
stos
jl
xchg
lds
dec
mov
shrb
push
lds
movsl
imul
dec
sub
cmc
cmpsb
ret
jns
icebp
hlt
mov
repnz
inc
adc
jnp
fidivs
out
sti
sarl
adc
cmpsl
and
fsubrl
xor
xlat
shrb
inc
popa
enter
out
fistpl
xchg
inc
out
aas
cs
xchg
mov
popf
push
or
mov
cld
mov
xor
mov
push
sbb
in
and
aam
insl
ja,pt
movsb
and
cmpsl
fildl
push
test
sub
inc
push
add
xchg
pop
or
and
arpl
mov
ds
push
pop
add
insl
inc
pop
insl
mov
pop
pop
shl
mov
lcall
mov
aaa
negb
arpl
inc
sahf
push
mov
lcall
xor
cmp
xchg
dec
imull
push
movsl
dec
sub
add
iret
fnstsw
lds
dec
mov
add
mov
je
enter
icebp
push
or
fstpt
ficoml
movsb
add
inc
mov
fdivs
push
pop
ret
add
jecxz
adc
in
jno
mov
adc
das
cmp
dec
dec
ljmp
sub
mov
pop
fisttps
cs
mov
xchg
ja
int3
push
jmp
fcoms
jmp
xchg
lods
cld
scas
mov
jg
pushf
cs
subb
jno
data16
or
insb
in
inc
add
sub
push
outsl
arpl
push
jle
sub
xor
je
aad
sbb
filds
pop
fptan
sbb
cmc
outsl
or
inc
push
sti
adc
jg
push
hlt
sub
mov
mov
add
dec
lcall
dec
jnp
adc
and
mov
cltd
repz
ljmp
pop
and
xchg
adc
mov
jecxz
dec
loopne
popa
arpl
mov
push
xchg
jecxz,pn
push
aas
ret
imul
loope
fldz
call
stos
inc
sarb
mov
out
lret
mov
add
mov
out
loopne
mov
imul
dec
pop
xchg
jp
adc
sub
mov
xor
clc
cmpsb
push
mov
or
lahf
daa
jg
dec
gs
adc
sbb
pop
xor
xor
dec
xor
loop
cmc
rcrl
aad
xorl
adc
inc
test
fwait
cmp
push
xor
decl
out
ss
pop
dec
test
icebp
nop
mov
testl
mov
movsb
add
into
sbb
mov
push
xlat
dec
sub
daa
out
jp
cmpl
adc
lret
cmpsb
jbe
test
dec
cmp
rcrb
sub
popf
dec
imul
dec
push
and
cwtl
or
push
or
jbe
fs
scas
leave
push
shrl
cmpsl
or
outsb
ss
pusha
jns
jbe
dec
jmp
popa
and
inc
test
push
cwtl
jnp
cmp
and
ds
and
inc
or
adc
scas
add
mov
sub
push
sub
jbe
and
mov
lods
add
orl
lds
or
or
rcl
pop
test
imul
jl
adc
push
mov
test
jne
in
sbb
sub
daa
xlat
repz
and
rcll
lods
icebp
js
mov
jb
adc
xchg
mov
xor
out
loope
lea
lahf
push
and
sub
pop
pop
filds
fneni(8087
mov
cld
lock
mov
into
xchg
lea
vcvtsi2sd
test
xchg
xor
es
sub
xlat
in
loope
xchg
scas
jbe
cmpsb
pause
jecxz
jp
sub
cmc
dec
push
push
xchg
xor
inc
pop
dec
inc
sarb
bound
shrl
and
repnz
push
push
pushf
pop
dec
and
cmp
mov
js
loope
icebp
dec
jb
das
push
push
movsl
xlat
into
arpl
popa
and
insl
leave
xor
repz
mov
dec
pop
fimuls
fs
push
pop
rcrl
loop
shrb
xchg
inc
xor
lds
xchg
mov
xchg
lahf
cld
cmp
lea
cwtl
xor
lret
clc
das
cmpsl
fldl
imul
outsl
dec
movsb
nop
push
cmpsb
cltd
dec
sbb
mov
inc
les
xor
je
fsubl
jae
cmp
add
sub
jno,pt
dec
sbb
or
sti
add
stos
ret
ds
jp
cli
pop
and
cmc
jecxz
xor
pop
jae
push
push
mov
add
shlb
in
adc
fwait
hlt
and
or
arpl
addr16
and
lock
inc
pop
mov
mov
aad
iret
jg
fnstsw
rol
inc
mov
sahf
push
inc
pop
out
lods
and
xchg
mov
or
dec
jecxz
dec
test
dec
icebp
xor
lods
in
ret
mov
dec
lods
pop
push
addr16
or
xchg
addr16
mov
gs
loopne
fisubl
cmp
pop
imul
jbe
out
insb
ret
dec
js
repnz
idivl
push
test
psllq
cmpsb
cs
mov
dec
dec
aad
add
shll
mov
xlat
fsubrp
add
aam
xchg
arpl
stc
add
pop
or
mov
and
imul
push
ficoms
pop
fnstenv
push
mov
repnz
jo
sbb
adc
inc
rol
xlat
out
jge
sub
pop
repnz
imul
fdivrs
jmp
sbb
jno
fidivrs
xor
inc
and
loopne
outsb
xchg
test
cmp
aad
pop
fs
xor
jne
pop
int3
imul
cmp
inc
cmp
xchg
popa
xor
call
pusha
sbb
dec
push
in
cmp
insl
icebp
clc
test
mov
mov
sub
mov
lock
test
xchg
lcall
hlt
loope
loope
jge
mov
dec
jnp
or
inc
jmp
dec
mov
cmc
cmp
outsb
inc
mov
pop
dec
stc
idivl
imul
jmp
addr16
test
dec
lret
imul
push
insb
insl
dec
xchg
adc
and
stos
int3
sub
sub
xchg
std
int3
push
adc
test
fsubl
push
addr16
or
hlt
scas
adc
lret
fucomi
dec
pop
or
xchg
sbb
loopne
pop
adc
hlt
hlt
add
add
sahf
clc
pop
je
xchg
leave
roll
pop
xlat
movsb
mov
les
push
inc
outsb
sbb
fwait
cmp
cmp
cmp
cmp
mov
or
test
xchg
mov
dec
stos
lahf
jnp
cltd
push
inc
inc
xchg
mov
add
xchg
xchg
mov
push
mov
dec
daa
sbb
sbb
pop
ss
daa
lcall
out
int
xchg
add
mov
push
push
mov
mov
fisubl
jle
xor
es
rcrb
test
fbstp
mov
lret
inc
mov
dec
mov
mov
xchg
add
hlt
push
shll
adc
inc
pop
lea
sub
inc
push
mov
adc
mov
inc
push
rolb
cmp
test
pop
fdivr
sbb
rolb
jb
cmp
cmc
cmpsb
fcompl
mov
mov
cmp
jae
mov
pop
mov
test
jle
lret
test
std
jmp
popa
jb
dec
daa
nopl
mov
jp
xchg
test
jno
in
lcall
xorl
add
mov
repnz
icebp
xchg
ss
int
jb
rcrl
pop
xlat
push
out
pop
mov
mov
adc
push
adc
mov
or
or
aas
or
adc
icebp
push
lahf
aad
jno
jle
adc
add
xchg
sub
push
push
fnstsw
jle
sub
add
sbbb
stc
inc
mov
int3
ljmp
and
xor
jg
pop
cmp
movsl
mov
daa
arpl
out
inc
jo
mov
push
cmpsl
sti
out
add
jge
popf
rolb
mov
sub
or
scas
inc
mov
aas
lds
fs
out
and
pusha
pop
add
mov
ja
sbb
lcall
jnp
lret
das
pop
ljmp
jl
jl
cmpsl
imul
mov
movsb
lret
cltd
fisubl
or
mov
ljmp
or
adcl
mov
xchg
jne
lret
inc
cmp
shrl
or
cmp
insl
insb
and
aad
xor
jg
sub
jb
in
ret
mov
lcall
push
pop
fmul
jns
lahf
xor
jne
in
or
out
mov
cmp
jbe
and
add
mov
xlat
in
aad
loop
sbb
add
repz
fisttpll
out
mov
faddl
testl
mov
insb
rolb
pop
aas
cmp
dec
loope
pop
movsb
push
idivb
std
cmpxchg
jmp
sbb
dec
fcmovbe
xor
or
cld
mov
adc
sub
mov
lret
js
jge
and
imul
pop
cmp
lcall
dec
sarl
jbe
add
cmpsb
add
push
lahf
arpl
mov
inc
xchg
xchg
sbb
imul
out
sub
dec
bnd
lock
or
je
xchg
jb
dec
stos
roll
mov
mov
sbb
data16
jae
add
rclb
repnz
divb
inc
push
jl
idiv
sbb
xchg
leave
aad
cmpsb
call
push
inc
add
xor
fmull
outsb
mov
mov
adc
xchg
jge
into
add
fstl
ret
iret
xor
andb
adc
jno
or
test
sbb
sub
cmc
inc
mov
mov
shrl
fsubrp
test
push
and
nop
xchg
clc
jnp
fldl
pushf
xlat
clc
inc
fiadds
scas
or
dec
shlb
popf
cmc
rcll
jmp
scas
xchg
nop
loope
dec
loop
push
shl
shll
pop
add
jnp
lock
sahf
mov
sub
es
cmp
jle
dec
and
inc
imul
mov
fst
cmp
xchg
js
ja
sbb
insb
mov
in
roll
movsl
les
popl
or
jns
mov
orl
lock
leave
lea
mov
push
call
and
adc
daa
sub
mov
fdiv
cmp
shll
sub
stos
inc
in
lock
jmp
scas
adc
mov
enter
iret
cmp
mov
imull
cmp
adcl
test
dec
or
push
xchg
jnp
jg
mov
jmp
mov
daa
xchg
sbb
leave
std
push
rcll
js
add
add
stos
shll
cli
in
push
adc
les
addr16
mov
test
imul
xchg
in
cmp
mov
push
sarl
incb
and
pusha
inc
imul
jge
icebp
loop
ud1
mov
jns
inc
adc
jg
sbb
fsubrs
shll
lcall
ret
xor
push
imull
or
mov
std
jns
das
les
je
loope
adc
pushf
sub
test
decl
test
xor
add
cmp
fistpll
mov
and
mov
sti
popa
aas
pop
lcall
lret
add
pop
std
xchg
sub
stc
cltd
cmpsb
sub
lcall
into
insl
cli
ds
inc
pop
mov
pop
mov
xchg
jne
jae
in
mov
mov
push
stos
dec
xor
fwait
sub
inc
and
inc
dec
fsubs
subl
sahf
or
loop
aam
and
sub
adc
movl
pop
out
cmpsl
dec
cmp
aas
pop
sub
neg
std
outsl
pop
dec
subb
loope
pop
aad
les
xor
frstor
loopne
or
sbb
mov
loopne
mov
pop
repnz
inc
lahf
cmpb
dec
lcall
jecxz
mov
add
pusha
push
fisubrs
cmp
xchg
ja
push
pop
jle
xor
add
push
add
insl
int
inc
or
mov
test
xor
hlt
cwtl
sub
pop
mov
mov
add
cmp
jmp
and
movsb
push
mov
lock
ss
mov
jae
and
out
xor
nop
lods
xchg
cmc
bound
jmp
adc
xor
addr16
adc
loope
or
ds
dec
aam
sub
aad
mov
or
jo
sub
and
lock
scas
pop
jnp
pop
adc
js
testl
push
cmpsb
push
add
call
dec
imul
dec
movsl
lcall
mov
mov
fucomip
mov
adc
add
imul
ja
popf
mov
xchg
pop
adc
jns
dec
xor
inc
std
push
sbb
lock
out
pushf
int3
rorb
fcoml
sbb
dec
lock
stos
mov
test
jnp
mov
jge
int
cmp
fs
fwait
or
sarb
mov
add
pop
leave
and
popf
push
cwtl
dec
shl
test
in
das
orl
push
dec
sbb
loop
outsb
pop
shrb
mov
mov
ret
jp
xabort
movsl
lea
ret
mov
cmp
pop
out
stos
sub
std
cmp
xchg
dec
sbb
mov
sub
xchg
push
insl
sahf
shl
add
int3
push
fwait
lds
mov
mov
xor
ret
andb
in
inc
cmpsb
nop
out
ljmp
xchg
fwait
mov
roll
sub
jmp
les
push
outsl
pushf
pop
inc
fstl
test
imul
sahf
or
push
hlt
sub
gs
push
pop
lds
fsin
cld
or
and
cmc
aad
mov
sub
push
push
sbb
cld
pop
mov
in
mov
push
test
sbbl
shlb
pusha
xchg
sub
aas
or
inc
test
insb
inc
mov
xchg
push
jg
jae
cmp
push
out
mov
lahf
inc
sbb
sbb
lahf
pop
pop
ds
jg
dec
aam
into
fwait
loop
sbb
mov
fcoml
jne
rorl
sub
iret
sahf
sub
mov
js
add
pusha
popa
jmp
scas
push
movsl
mov
push
pop
insb
and
les
data16
mov
push
popa
jle
nop
sbb
add
sub
sbb
cmp
xor
mov
dec
int3
icebp
shlb
cmpsl
jp
hlt
lods
push
pop
cmpsl
into
jbe
mov
mov
int
mov
out
sti
cmp
jge
inc
shlb
shlb
cmp
andl
scas
inc
ss
das
sahf
scas
lea
outsb
jp
xchg
push
stos
aas
outsl
mov
pop
popa
mov
pop
sub
fdivrl
pop
dec
sub
sub
addr16
mov
mov
sub
pop
fprem1
push
push
gs
cmp
scas
cmpsb
out
xchg
dec
mov
mov
js
out
shl
in
jbe
push
popa
mov
mov
arpl
inc
cmpsl
pusha
clc
test
dec
dec
pop
roll
add
add
mov
push
cmc
push
arpl
add
xchg
mov
or
dec
test
pop
mov
sub
repnz
pop
push
pop
movsl
push
ffree
and
mov
outsl
sbb
outsl
imul
push
and
gs
mov
xchg
popf
mov
add
pop
pop
sbb
add
add
mov
mov
jle
jno
repz
and
pop
lods
stos
mov
out
imul
movsb
data16
mulb
and
dec
js
ja
dec
dec
xor
mov
rcll
inc
into
aas
stc
es
jns
or
sbb
fldcw
movb
lea
das
pop
push
ret
add
push
dec
repz
fisttpll
push
not
push
data16
mov
pop
mov
jle
loopne
mov
leave
int3
mov
lcall
xchg
je
mov
or
cmpsl
dec
into
arpl
push
and
mov
testl
dec
and
sbb
in
dec
pop
mov
ja
or
stos
jo
lcall
scas
test
out
rcll
sub
add
call
mov
mov
lods
movsb
mov
stos
test
jge
testl
in
push
push
push
xor
push
cmpsb
xchg
mov
shlb
test
lahf
jle
sbb
mov
xor
stos
pusha
inc
mov
mov
or
shl
cpuid
xor
aad
setg
fs
shll
fs
bound
loopne
jp
or
or
ja
sbbl
popa
mov
lods
test
push
dec
cmp
pop
push
add
outsb
enter
testl
test
sub
andl
loop
push
faddl
jecxz
les
jne
cmpsl
and
in
mov
adc
inc
push
lret
jns
sbb
test
jg
ljmp
pop
cli
cmp
mov
cmp
jnp
jo
mov
xchg
clc
out
popf
into
sbbl
sbb
adc
call
int
loopne
sbb
jle
fldt
jle
jl
aaa
adc
out
cld
mov
jbe
pusha
cmp
movl
push
lret
sbb
jno
and
in
rorl
ror
pop
xchg
movsb
jp
inc
es
ret
mov
pushf
sbb
movsl
lods
leave
jecxz
pushf
enter
sbb
mov
pop
or
inc
ljmp
xor
insl
pop
mov
xlat
cmp
xlat
sub
add
in
jb
cmc
cs
arpl
dec
popa
outsb
clc
mov
dec
stos
andps
stos
or
rcll
cwtl
ljmp
js
dec
sbb
call
sahf
adc
sarl
dec
sbb
sub
jns
psubusb
movsb
fbstp
jmp
dec
cmp
sbb
mov
dec
hlt
mov
test
negb
sub
fsubrs
mov
jle
int3
outsl
insb
icebp
aad
repz
push
jg
in
rcrb
test
and
jns
test
lods
aaa
sbb
xchg
and
addb
outsb
lock
mov
adc
xchg
sbb
loope
shrl
pop
icebp
adc
in
fistl
inc
test
addb
test
jo
mov
jns
pop
mov
imul
clc
jp
call
int
jnp
jnp
cmp
adc
stos
sahf
xor
icebp
jbe
sub
in
push
rcll
xor
pop
inc
xlat
insb
or
rol
push
pop
dec
add
pop
push
clc
xchg
inc
pop
jge
push
dec
sti
outsb
mov
add
repnz
mov
pop
pop
mov
lea
or
dec
notl
leave
addr16
add
cmp
xor
int
mov
int3
test
jns
mov
fcompl
dec
out
mov
call
call
mov
js
or
insl
inc
jmp
arpl
mov
imul
and
loope
pop
scas
stos
loopne
jle
faddp
jo
shrb
popf
xor
jmp
sbb
stos
ljmp
fdivrs
ret
push
cmpsb
aas
xchg
lock
add
push
mov
fcmovne
aad
cltd
xchg
dec
insl
lock
mov
divl
enter
aam
xchg
jns
push
adc
lds
cmp
sub
pusha
in
rclb
testb
mov
dec
andb
mov
ja
push
xor
cmc
rcl
mov
xchg
inc
inc
shl
add
sub
mov
es
or
out
push
loop
mov
sarb
gs
or
add
cmpsl
outsl
jns
mov
mov
xor
push
push
hlt
jae
sbb
cmp
adc
inc
adcl
imul
sub
in
jge
add
test
pop
dec
add
push
fbstp
das
inc
fnstsw
adc
mov
enter
or
xchg
inc
or
jecxz
lret
jno
loope
push
les
xor
dec
jno
test
out
dec
call
inc
cmp
insl
push
xor
dec
mov
or
push
xor
sub
sbb
mov
sahf
fst
sbb
xchg
stc
orl
mov
jbe
xor
mov
jle
cld
leave
xor
cmpsl
sbb
inc
mov
add
loope
cmpsl
push
inc
mull
inc
sti
dec
insl
xor
mov
xchg
iret
in
xchg
push
je
test
stos
popf
sub
es
adc
fdivrl
data16
pop
xchg
std
nop
arpl
ds
sbb
shll
repz
mov
test
xor
and
add
pushw
cmpb
sbb
pop
or
mov
mov
adc
cs
cmpsl
inc
mov
daa
in
into
adc
insb
dec
pop
sti
xchg
mov
in
lods
and
or
mov
rcrb
fwait
ss
std
mov
clc
add
adc
sbb
pop
push
dec
pop
xchg
dec
lock
adc
sbb
hlt
jl
mov
xchg
pop
xchg
sbb
imul
call
mov
inc
cmpsb
loopne
xor
sbb
in
leave
pop
es
and
or
into
push
jg
cmpl
xchg
sub
rorl
mov
add
movsb
dec
ret
mov
push
fst
sbb
mov
ret
out
dec
ret
jle
adc
das
movsl
leave
fwait
jp
or
cmc
sbb
cmp
lods
je
fsubrs
push
lret
or
imul
orb
cmp
cmp
sbb
js
andb
push
mov
imul
inc
xor
push
xorl
repnz
mov
pop
push
xor
xor
es
js
out
sarb
mov
imul
inc
mov
or
mov
mov
hlt
push
mov
loopne
js
pop
hlt
repz
jg
xchg
mov
lret
inc
jle
ss
cmp
xor
pop
repz
icebp
insl
je
in
jmp
xchg
sub
roll
popa
or
pop
cmc
ljmp
cmpb
cld
dec
cld
add
mov
cmp
leave
add
sahf
and
mov
iret
adc
mov
pusha
cmp
sarl
sbb
loopne
cs
insb
pop
push
add
incb
mov
test
mov
jae
outsb
jge
or
xchg
icebp
sti
cmp
cmc
jnp
daa
fisttpl
aaa
mov
xchg
mov
push
push
stc
je
push
add
sub
push
dec
mov
xchg
sub
lret
adc
outsb
sbb
test
push
push
pop
mov
push
popf
mov
xchg
pop
out
xor
mov
adc
xor
test
mov
and
mov
add
ljmp
loop
sub
inc
push
rorb
inc
filds
fwait
lea
sbb
push
ret
sub
into
icebp
in
mov
out
push
sbb
push
pop
dec
ja
test
ret
mov
push
push
sbb
cs
inc
ficompl
sub
fists
push
stc
cltd
mov
sbb
in
xchg
sub
cmpsb
push
incl
mov
les
mov
int3
std
pop
xchg
lds
push
lods
cltd
pop
sqrtps
clc
sti
adc
sarb
sub
jns
imul
in
in
or
dec
scas
or
lods
or
mov
mov
pop
ret
and
mov
decl
mov
or
xor
stc
test
cmp
jmp
xchg
ljmp
pop
in
adc
mov
jae
cmc
test
jle
faddl
daa
and
shll
outsl
jb
lods
dec
daa
nop
aam
fcom
jbe
and
pop
aas
sbb
lret
rcrb
pop
pop
mov
rcrb
ljmp
pop
loope
fadd
sbb
das
inc
arpl
pop
ds
sbbl
es
mov
cmp
out
add
mov
jmp
fimull
or
jnp
rcrb
loopne
jae
xor
cmp
fcoms
out
mov
jb
addl
xor
jmp
fwait
xchg
pop
lret
mov
mov
iret
arpl
outsl
int
cld
dec
push
mov
cmp
arpl
and
xchg
cmp
fldcw
dec
popa
outsb
or
aam
sbb
fldl
sbb
dec
push
jp
adc
lea
fsts
mov
mov
addr16
shll
adc
pop
or
push
push
out
mov
sbb
pop
push
aas
jp
add
ss
adc
rorl
orb
leave
inc
mov
cmp
mov
jns
sbb
fisubrl
adc
std
cwtl
xchg
dec
jae
loop
sub
and
aaa
add
daa
aaa
ss
sbb
imul
inc
jg
test
jp
xchg
add
jnp
cmc
ljmp
aas
popf
daa
add
iret
dec
clc
push
xor
nop
xchg
push
aas
sub
movsb
lret
cld
int3
and
and
adc
sub
dec
jne
dec
xchg
aaa
push
sub
xchg
inc
push
push
mov
int
cltd
jge
mov
and
jbe
test
out
stos
jle
inc
mov
or
lahf
addr16
inc
pop
enter
std
pop
add
jne
dec
cmp
pop
mov
jecxz
pop
test
pop
xchg
arpl
insb
or
fdiv
add
xor
sti
in
enter
shll
mov
fisttpl
fists
out
xor
cli
test
sbb
fbstp
and
adc
jp
rcrl
bound
inc
sbb
incb
cmc
sub
aas
xorl
sti
mov
jnp
jne
xor
inc
dec
push
fldl
rcrb
xorb
mov
inc
add
imul
fdivl
inc
jne
xor
mov
les
jp
mov
mov
rol
bound
pop
mov
sbb
inc
fbstp
and
mov
clc
je
mov
fbld
adc
call
pop
sub
lods
scas
bound
rorb
xchg
dec
push
push
jp
mov
mov
add
and
xor
push
push
push
and
in
inc
or
movsb
cs
lcall
jno
inc
pop
out
lods
sub
push
push
jmp
xchg
dec
addb
or
scas
outsb
scas
cs
xor
mov
inc
push
fucomp
pop
out
icebp
into
int
ljmp
int
lock
loope
test
es
and
fxch
lret
ret
gs
xchg
pop
mov
in
xchg
xchg
mov
xor
or
loope
ret
rcll
pop
mov
sbb
add
imul
dec
mov
sub
into
add
jg
incb
mov
subb
lea
jns
test
aas
das
jecxz
push
outsb
aad
clc
mov
xlat
test
shl
jecxz
shlb
add
inc
ret
push
push
sub
xor
pop
fs
cmp
xor
and
or
xlat
cmc
leave
sub
mov
mov
int
xchg
je
cltd
and
jo
adc
push
loop
xor
insl
or
ljmp
push
push
cmpsl
mov
pusha
lea
add
jb
or
dec
int
das
add
lcall
shlb
lea
negb
sbb
imul
fildl
pop
pop
jbe
pop
mov
daa
or
dec
sub
sub
out
or
repz
cli
xor
add
jbe
stos
jnp
cli
or
pop
push
addb
aad
icebp
sub
loop
jge
loopne
dec
repz
pop
iret
stc
jmp
jmp
das
cmp
xor
jnp
mov
lods
cltd
mov
jnp
mov
das
in
mov
cmp
sub
adc
cmpsl
xchg
mov
cmovno
jg
add
sub
outsl
aaa
inc
cmp
xchg
fwait
or
or
sbb
push
add
mov
sbb
fdiv
jp
sbb
cwtl
jbe
or
mov
push
lahf
movsb
movsl
mov
cmp
pop
sub
xchg
outsl
add
sahf
pushf
imul
mov
add
popf
mov
pop
lahf
les
cld
movsb
jbe
dec
dec
imul
pop
in
push
enter
inc
push
inc
mov
enter
mov
xlat
jge
rcr
dec
daa
inc
mov
adc
dec
xor
sahf
inc
push
pop
jmp
ds
outsl
sbb
xor
sub
lret
add
jno
shll
and
adc
sub
addr16
xor
inc
add
mov
cmc
xchg
jecxz
jne
ja
mov
stos
ds
xchg
jle
repz
mov
mov
adc
insb
imul
inc
gs
aam
ret
movsb
xlat
stos
sahf
insl
in
sbb
cs
lret
fmull
push
test
out
mov
rorb
push
mov
cmp
clc
push
imul
mov
mov
divb
inc
pop
std
jl
cmpsb
in
pop
cltd
jbe
cmp
cmp
inc
dec
dec
scas
fildll
int3
jne
fs
int
inc
xlat
repz
sbb
mov
push
testb
xchg
xchg
adc
aas
push
xor
int3
jbe
jl
jecxz
sahf
nop
xchg
popf
push
xchg
xor
push
adc
pop
xlat
sbb
mov
xor
and
cmp
pop
add
in
cmp
mov
test
add
push
pop
add
pusha
ret
fists
xorb
les
fwait
mov
jecxz
inc
sbb
pop
push
and
mov
andl
or
fs
out
orl
sbb
xchg
push
jne
addr16
adcb
out
dec
inc
dec
call
cld
addr16
lock
out
jle
das
xchg
cli
imul
cmp
lret
jo
or
push
mov
mov
rolb
lods
cs
subb
mov
cmp
push
into
jne
add
pop
imul
jle
jae
je
sub
adc
add
nop
cmc
adc
es
adc
rol
or
out
push
es
xchg
hlt
mov
test
jp
push
jmp
xor
in
xchg
lea
lock
and
daa
imul
cltd
jl
dec
inc
add
lret
mov
into
xchg
lahf
inc
roll
push
mov
insb
sub
pop
mov
popf
popa
push
mov
jg
lret
adc
lods
pop
pop
mov
pop
es
addb
cltd
gs
cld
adcb
ljmp
clc
pop
mov
and
negl
dec
dec
out
jge
push
xchg
daa
and
dec
mov
test
imul
fsubr
pop
out
sbb
lcall
and
adc
popf
je
pop
lcall
mov
call
push
sbb
lea
xor
shlb
popf
lcall
lahf
imul
test
cs
mull
or
xor
rol
jns
dec
xchg
in
stos
test
aad
jno
add
xchg
test
lea
loope
aaa
in
cmp
fmull
pop
ljmp
xchg
and
xchg
fcmovnb
iret
xchg
sbb
aas
data16
jno
or
idivl
fs
adc
in
sub
dec
add
mov
inc
cs
cs
sub
popa
orl
push
fimull
insb
dec
stos
lds
add
aam
or
in
cmpsl
ss
int3
or
mov
sub
xchg
lahf
xor
adc
test
cmp
daa
jne
or
gs
dec
pop
lods
mov
lods
xchg
xlat
pop
enter
xor
push
sbb
mov
into
psubsw
out
out
add
push
dec
mov
mov
iret
cld
lods
push
popf
inc
dec
pop
fucomp
ss
fwait
push
aad
cwtl
inc
fisubl
fsubl
lods
and
adc
or
or
jae
sbb
cmp
lret
cltd
mov
mov
imul
and
xor
pop
shll
insl
inc
cmp
mov
adc
cmp
and
jno
push
js
fidivrs
dec
adc
fmulp
aas
jmp
jb
push
push
and
lods
mov
sub
pusha
ret
iret
cmpsb
cli
repnz
push
adc
jb
mov
xchg
pop
int
mov
cmc
roll
push
and
test
jae
aaa
lods
rorl
sub
fstl
push
adc
test
addl
sbb
divl
mull
in
int
sub
push
lods
bnd
sbb
jno
mov
mov
int
in
iret
clc
pop
incb
pop
mov
adc
pop
ds
loopne
xchg
xor
icebp
js
daa
cwtl
sbb
in
inc
pop
sbb
jne
je
mov
inc
call
movsl
sbb
enter
decb
scas
dec
cmp
jb
mov
push
fstpl
fstps
mov
sti
aam
insb
clc
and
sub
cltd
xchg
mov
repnz
jl
push
pop
clc
push
or
gs
jge
mull
inc
or
xchg
sub
pop
jmp
sbb
popf
lock
iret
cld
cmp
int
xor
mov
or
aas
cmp
sbb
jmp
pop
push
ret
mov
push
in
cmp
lcall
mov
test
jle
jne
adc
sarl
jae
mov
lcall
add
std
scas
mov
lock
mov
fdivrs
insb
outsb
ljmp
fldt
xchg
or
lods
pop
add
cs
jne
lahf
stc
loope
mov
popa
push
push
and
cmp
adc
scas
testl
jmp
xlat
lods
imul
pusha
lea
fbld
dec
sub
push
jecxz
add
test
sub
pop
rorb
xchg
jns
fdivr
mov
push
enter
xchg
dec
fdivs
jnp
sbb
and
adc
stos
pop
imul
call
inc
sub
inc
xchg
loope
loope
lret
out
daa
insl
mov
and
xchg
sbb
movsb
cli
and
add
ds
fiaddl
ret
int
mov
mov
mov
xchg
divl
mov
adc
out
mov
pop
jbe
inc
sub
mov
rep
insb
dec
stos
jo
xchg
xor
fcomp
dec
sub
cltd
and
outsb
fiadds
jecxz
push
mov
int3
lods
jle
inc
bound
jbe
mov
mov
imul
jecxz
cwtl
ljmp
push
aaa
adc
cmpsl
or
pop
pop
sub
movsb
loope
mov
mov
add
pop
mov
or
add
sbb
and
or
cltd
adc
xchg
lods
cmpsl
sbb
mov
fisubrl
in
xor
std
jne
push
and
xchg
sub
sub
inc
jnp
sub
inc
sbb
dec
int
mov
mov
popa
push
cmpsb
inc
mov
faddp
scas
or
adc
outsl
repnz
push
jmp
xor
pushf
insb
test
cmp
and
ds
mov
xorl
sti
subl
add
dec
adc
jl
mov
xor
call
mov
pop
mov
std
mov
into
adc
add
dec
int
daa
mov
repz
adc
ret
sbb
repz
icebp
testb
push
inc
and
testl
in
popa
les
mov
xor
and
jbe
lret
xchg
popa
pop
sbb
pop
mov
mov
pop
mov
je
test
cmp
pop
mov
mov
push
in
movb
mov
clc
xlat
loope
dec
push
jmp
je
lods
fidivrs
daa
out
jbe
aaa
imul
dec
rcll
pop
insb
or
add
pop
xor
sbb
fstl
cmc
roll
pusha
lock
adc
pop
inc
lock
shr
mov
les
jno
fmul
xchg
xor
ret
fdivs
adc
pop
das
mov
cltd
push
movsb
pop
scas
xor
pop
ja
sub
mov
sub
dec
push
sbb
xchg
rclb
xchg
das
add
xlat
cmp
cltd
bound
mov
sub
jge
fisttpll
lods
dec
push
mov
add
inc
mov
mov
outsb
xlat
xorl
lahf
or
rol
imul
mov
inc
xlat
ficomps
ds
roll
cltd
dec
add
xor
imul
lcall
jb
jp
popa
sahf
cmc
jne
inc
xchg
das
push
popl
leave
ror
xor
or
or
gs
xor
shrl
mov
ds
xchg
pop
movnti
mov
test
addr16
inc
fisubl
lods
into
add
testl
push
rorb
mov
push
sbb
pushf
mov
shr
repnz
mov
popf
push
mov
mov
data16
sarl
repz
jnp
bound
rcll
test
push
dec
fiaddl
imul
shll
in
dec
pop
jmp
js
jmp
hlt
sub
jno
pop
add
aad
ror
orl
popa
js
add
jmp
mov
or
movsl
cmp
mov
into
xor
sbb
hlt
mov
sbb
inc
enter
das
sub
cmpsb
sbb
push
pop
and
dec
pop
sbb
fnsave
adc
lds
dec
stc
cmc
jns
mov
js
cmpsb
movsl
mov
aam
mov
mov
dec
mov
jne
and
mov
dec
push
jle
pop
test
pushf
xchg
pop
repnz
mov
scas
push
sbbl
lods
insb
push
or
loopne
mov
aad
push
xor
sbb
push
pop
mov
inc
add
mov
xchg
orb
pop
les
roll
insl
push
pop
jmp
enter
push
imul
loope
xor
lds
jbe
sti
inc
cmp
push
mov
repnz
cmpsl
jns
movb
mov
es
ret
lods
mov
fdivrs
sub
sub
test
data16
repz
cltd
stos
jp
pop
add
jo
jnp
adc
add
pop
jp
jno
and
imul
sbb
pop
ljmp
add
push
or
mov
and
sbb
push
fsubl
fwait
int
fcompl
mov
xor
xchg
or
insl
jmp
and
sbb
or
dec
inc
mov
pusha
pop
jae
jno
mov
mov
xchg
xchg
adc
dec
xchg
mov
add
out
mov
dec
xchg
xor
pop
push
test
outsb
lret
xor
in
sub
jne
movsb
repz
xor
lds
loope
jae
pusha
sbb
bswap
pop
lcall
sbb
out
adc
cs
xchg
popa
fdivs
pop
int
or
notl
dec
push
mov
cmp
cmp
test
sti
ds
cwtl
jo
mov
stos
data16
xchg
pop
lods
xor
cli
dec
out
dec
sub
mov
shll
add
int
push
xor
jne
ficoms
inc
mov
inc
int3
adc
jne
cld
adc
gs
xorb
aas
testb
fimull
or
pushf
jns
push
jle
mov
lcall
or
and
int
inc
mov
stc
jbe
sbb
jns
outsb
adc
adc
jle
xchg
and
add
addb
dec
or
lret
data16
push
sub
lret
xchg
add
jo
xor
mov
xor
fucomip
push
cmp
dec
inc
sub
mov
sub
push
sub
jmp
fsubs
test
inc
repz
fsubp
sub
sarb
rclb
fldcw
pop
dec
mov
xchg
imul
sub
xlat
mov
dec
je
js
movsb
add
fildl
ss
out
mov
insl
mov
mov
stos
pushf
mov
out
or
push
aas
in
push
cmp
jno
aaa
lcall
xchg
push
mov
adc
xor
mov
dec
sbb
xor
lret
mov
adc
mov
jne
loopne
jmp
mov
pushf
addr16
ror
mov
jg
jb
test
clc
cmc
or
cmp
xor
in
lods
cmp
pop
mov
loope
sbb
call
in
adc
xchg
movsl
xchg
cmpsb
aaa
js
call
mov
push
xchg
into
fwait
aad
push
push
xor
sbb
xchg
dec
aaa
inc
mov
jmp
pop
mov
dec
shll
lods
mov
mov
cmp
lods
test
adc
roll
mov
or
hlt
fucomip
adc
shll
rcrb
arpl
xor
pop
ret
mov
push
mov
out
jle
mov
fcomps
dec
add
leave
outsb
negb
add
scas
cs
jo
xchg
inc
mov
call
nop
jb
push
jge
or
lock
mov
xchg
stos
sti
adc
mov
test
sbb
adc
jg
shlb
imul
sarb
inc
pop
add
ja
shlb
aam
aad
repnz
popa
pushf
mov
mov
jmp
aaa
stos
inc
cmp
push
mov
push
xor
lds
jnp
clts
push
push
push
mov
sbb
inc
in
call
sbb
loopne
adc
jo
mov
lea
popf
rcrb
adc
shll
test
add
cmpsb
xchg
cwtl
lock
aam
mov
pop
dec
aam
sahf
stos
jp
jb
icebp
mov
movsb
nop
sub
mov
std
pop
fwait
sbb
cs
jle
adc
mov
dec
imul
inc
push
loopne
adc
ret
dec
cmp
movsl
pop
in
jns
sub
outsb
fsub
jg
stos
cs
push
repnz
aad
mov
xor
outsl
jge
push
push
mov
sti
mov
out
in
test
lret
fimull
pop
sbbb
adc
jge
pop
out
lods
and
mov
nop
jle
jmp
cmp
call
bound
adc
into
int3
scas
cmp
adc
push
popf
adcb
add
rcrb
insl
mov
or
popf
cs
mov
mov
fwait
adc
sub
das
stos
pop
aas
adc
adc
mov
decb
das
jg
mov
shlb
not
pop
cmp
in
imul
je
mov
and
dec
stos
and
adc
sahf
test
arpl
stc
push
pop
jecxz
push
repnz
bound
fnstenv
shr
push
enter
out
sbb
xor
xchg
test
dec
out
add
mov
xlat
or
xor
aaa
push
mov
inc
cwtl
push
pushf
js
mov
pop
jo
loopne
fcmovnb
fiadds
adc
hlt
add
mov
outsl
ds
lea
push
rclb
mov
inc
fnstenv
sbb
mov
sub
mov
sbb
jbe
ficoms
insl
stos
xor
cld
jo
xor
cwtl
dec
lcall
ljmp
in
stos
adc
data16
stos
shrb
loop
adc
ss
add
bound
or
lcall
outsl
mov
add
mov
dec
push
push
mov
and
pop
std
adc
jmp
pop
ficoml
add
hlt
data16
out
jg
subb
and
aad
lret
mov
cli
push
push
xchg
ficoml
fcmovnu
lock
sar
inc
mov
test
sbb
add
pop
mov
and
fistl
jno
add
icebp
inc
dec
nop
pop
lods
js,pn
lahf
lock
repz
fimuls
sub
int
pop
rol
xor
xchg
mov
lret
scas
mov
pop
pop
ror
xchg
leave
xor
int
pushf
jbe
push
daa
add
das
cmp
xchg
xlat
push
test
jle
movsb
or
in
roll
sub
std
ret
adc
push
push
add
mov
or
out
sub
mov
aas
jge
mov
mov
push
mov
fidivrl
cmpsl
out
fnstcw
mov
imul
mov
xchg
or
std
ficoms
sti
xrelease
call
push
sti
in
pusha
andl
push
rcrb
pusha
shr
jbe
jo
pusha
mov
cwtl
push
jo
xor
mov
add
ljmp
insb
sub
fcoms
test
xor
fucom
xor
mov
cmp
testb
mov
jge
push
imul
jg
cli
adc
mov
sbb
mov
scas
xor
jge
subb
or
mov
les
ret
push
mov
leave
rcll
inc
inc
imul
aas
lock
sbb
mov
insb
popf
push
sbb
push
mov
dec
pop
push
mov
lcall
sub
dec
cs
je
pushf
outsl
test
sub
sbb
xchg
mov
test
dec
inc
int
adc
fidivrs
fcoms
inc
add
repnz
or
loopne
pop
xor
mov
xor
jno
cmpsl
dec
sbb
jne
mov
sbb
mov
dec
and
ljmp
pop
lea
xor
xlat
out
xor
sbbl
pop
jge
fs
dec
cli
cmp
add
inc
out
das
dec
scas
adc
mov
inc
mov
jo
fmuls
mov
inc
jo
lods
movsb
test
cwtl
cmp
stos
inc
shr
jo
lahf
cmp
sub
inc
and
and
mov
sbb
dec
in
xor
insb
inc
mov
inc
jecxz
jecxz
ljmp
cmp
pop
jp
test
imul
ds
add
sub
dec
adc
clc
push
out
cmpsl
jns
jbe
push
push
fcomps
mov
add
loopne
or
cltd
xchg
cmpsl
leave
push
stos
adc
xor
scas
xchg
dec
sub
in
push
icebp
cmp
push
mov
inc
fimuls
or
ficomps
les
jno
aaa
pop
inc
dec
push
sbb
cwtl
adc
fwait
and
out
and
push
fcmovne
andl
jb
push
shl
push
std
loopne
rcl
sti
jns
push
inc
icebp
xchg
add
sub
sbb
iret
inc
mov
xchg
stos
mov
dec
fcoms
mov
mov
cmpsl
xorl
inc
jns
lahf
sahf
in
pop
push
lret
pushf
cwtl
add
scas
cmp
out
leave
movsb
pop
add
inc
movl
xchg
or
mov
or
or
xchg
bound
inc
sti
imul
int
pop
imul
sub
mov
jo
xlat
out
in
dec
cli
scas
push
insl
mov
mov
and
arpl
ficoml
or
daa
sbb
fadds
adc
shlb
jle
ds
jle
lds
clc
setae
add
jge
jns
rolb
scas
pop
mov
push
and
lds
ds
ret
dec
out
mov
movsl
insl
pop
xor
mov
or
xor
pop
lahf
push
pusha
repz
cmp
cmp
scas
jg
ss
push
icebp
adc
ja
mov
cvttps2pi
ljmp
xor
pushf
sti
in
cmpsl
out
pusha
jle
ja
enter
out
xchg
hlt
mov
lock
mov
pop
cmp
into
xorl
sbb
lret
cmp
fisubl
jns
sti
call
test
fstl
sar
xchg
imul
lds
andl
in
push
push
test
pop
xor
iret
mov
movsb
xchg
inc
outsb
inc
adc
cmp
loopne
fs
dec
rcrl
enter
hlt
mov
dec
push
pop
mov
mov
pusha
leave
cmp
sbb
mov
xor
repz
or
icebp
in
rorl
bound
push
popf
jmp
inc
pop
dec
mov
sub
push
fcmove
aad
outsb
ss
dec
mov
inc
lock
mov
cmp
loop
int3
and
fwait
test
inc
into
pusha
cli
pop
sbb
roll
or
push
mov
push
pop
mov
xchg
popa
jns
pop
cmp
cwtl
call
pop
dec
fwait
call
cltd
xor
or
pop
nop
dec
js
iret
add
push
fwait
push
xchg
pop
cwtl
pop
add
jg
insl
movsb
sbb
ss
aaa
call
inc
sub
jge
in
es
lock
test
movsb
out
pop
jbe
les
xchg
aaa
mov
pop
adc
pop
and
ja
jmp
outsb
jl
repz
dec
mov
xchg
pop
mov
cltd
fildl
pop
adc
icebp
sub
fstps
cmc
and
cmp
daa
push
xor
cmpsl
pop
fstl
in
aam
lods
loopne
xor
scas
xchg
cmp
cmp
cltd
dec
mov
or
jns
xchg
cmp
jnp
mov
add
sub
pop
mov
xchg
daa
popa
sbb
aad
xchg
inc
or
imul
flds
sub
dec
inc
into
pusha
in
mov
inc
sub
add
jecxz
das
cmp
inc
adc
shlb
fwait
imul
fidivrl
xchg
dec
das
mov
call
adc
stos
mov
pop
push
xchg
and
ss
dec
js
insb
jo
imul
xchg
ficompl
flds
sbb
mov
mov
aaa
out
sbb
xorl
arpl
lret
add
js
sub
pop
xchg
je
ss
push
dec
jae
pop
or
push
cmp
cmc
jmp
mov
pusha
icebp
adc
mov
jl
lahf
dec
or
ljmp
dec
cld
inc
outsb
and
xchg
into
mull
add
dec
out
sbb
sub
loopne
imul
daa
cmpsl
jo
les
in
dec
sbbb
int
xlat
jle
repz
or
aas
inc
xchg
addl
mov
push
jbe
mov
movsb
fs
aas
dec
test
int3
xor
sub
stos
mov
neg
out
pop
add
aaa
push
mov
push
xchg
inc
in
call
sub
sahf
sahf
fmuls
imul
mov
je,pt
jbe
pop
loop
fs
loopne
loopne
cmpsb
in
push
shrb
aas
sbb
daa
popf
jg
shll
scas
inc
repnz
or
push
jmp
inc
fwait
sbb
dec
leave
and
and
jg
pop
mov
mov
test
jo
lahf
div
lea
inc
inc
repnz
or
mov
and
sbb
lcall
xor
and
inc
sbb
mov
mov
push
adc
lods
dec
pop
push
lret
sub
dec
lods
fistps
test
lods
inc
int
xor
lods
or
es
in
sub
test
fldl
pop
dec
arpl
daa
call
ljmp
xchg
lret
inc
movsb
pop
ja
mov
pop
scas
fists
mov
add
inc
xchg
adc
lock
mov
xchg
xchg
int
loopne
inc
pop
pop
lcall
outsb
cld
sbb
arpl
cmp
fcompl
sub
lret
xlat
ds
aad
mov
dec
add
cmpsb
popa
xor
fldt
and
iret
and
jge
mov
cmp
loop
pop
das
mov
sarb
cmp
dec
ret
push
mov
mov
mov
push
data16
stos
cmpsb
sbb
or
ja
inc
xchg
fxch
outsl
cmpl
mov
fwait
scas
mov
out
lahf
xor
xor
jecxz
jo
jmp
sub
mov
xor
mov
inc
jle
mov
loope
push
lret
mov
sti
push
mov
dec
mov
sub
adc
sti
dec
lea
add
jns
push
pop
data16
lret
lret
bound
popa
sbb
or
and
push
sbb
out
lahf
or
and
mov
fsubs
xor
mov
adcl
fs
dec
add
jecxz
inc
call
adc
sbbl
cmp
fwait
stos
dec
jecxz
enter
xlat
sbb
xor
ret
add
fidivl
push
xor
sbb
mov
inc
push
sarl
inc
dec
je
loop
scas
push
adcb
aas
into
xchg
dec
test
rolb
mov
lcall
bound
mov
fbld
xlat
mov
fwait
mov
repnz
imul
leave
xor
adc
sub
pop
ss
push
dec
mov
mov
sti
movsl
pop
daa
fimuls
mov
stos
lea
lea
mov
cmpsb
pop
rcll
dec
lcall
inc
dec
popf
repnz
mov
shll
add
lods
shlb
aaa
push
int3
xor
jg
and
out
in
xchg
test
imul
lcall
xor
xchg
lret
jbe
mov
lods
sarb
jecxz
adc
add
fsubs
push
pop
mov
fldl
mov
dec
fldl
nop
rcrb
loopne
mov
cltd
push
nop
lret
adc
add
out
jnp
or
xchg
push
test
hlt
subb
mov
js
sub
push
icebp
lds
arpl
ror
jne
hlt
jle
jecxz
aaa
repz
and
xor
cmp
aam
hlt
mov
push
inc
arpl
mov
loopne
stos
mov
gs
cwtl
xor
adc
ss
pushf
into
mov
xorb
adc
popf
cmp
popf
adc
sbb
gs
lret
cmpsb
jae
fwait
rol
lahf
in
shlb
repz
sarb
imul
fidivs
pushw
in
rcll
fistl
dec
ret
cltd
mov
push
stos
mov
loope
jmp
jnp
jae
xlat
ja
mov
mov
dec
adc
xor
call
outsl
mov
pop
mov
es
in
cmp
lahf
loopne
aas
frstor
fxch
sub
mov
cwtl
imul
pusha
lods
mov
ss
outsb
imul
jns
rol
lods
mov
mov
ja
pop
and
xchg
les
mov
sbb
push
xor
shll
cmc
jge
imul
cmc
pop
or
dec
out
movsb
xchg
dec
or
int3
insb
mov
xchg
mov
sub
xchg
bound
sub
add
cmp
pop
mov
inc
or
mov
push
adc
pop
jne
loopne
mov
addl
jns
jo
shll
cmp
pop
aam
sub
dec
dec
ja
cmpsb
jnp
mov
jb
jbe
lcall
shll
mov
in
enter
daa
or
cmp
xor
out
ret
jnp
daa
push
shl
inc
lds
adc
cmp
jmp
cmpl
jae
pop
push
jne
cmp
test
jb
ljmp
xor
mov
ja
adcl
jg
lahf
ds
push
dec
hlt
pop
xor
test
jge
mov
cld
rep
pop
adcl
outsb
inc
shl
out
loopne
outsb
mov
xchg
xor
xchg
push
imul
popf
fwait
hlt
shl
lret
pushf
sbb
pop
scas
lahf
mull
loopne
dec
cld
pop
out
pop
movsb
imul
lods
adc
das
sbb
add
and
mov
aaa
and
and
daa
scas
xlat
in
jno
and
xchg
and
cmp
ljmp
icebp
test
jecxz
stos
or
jmp
mov
xchg
ficomps
in
jbe
mov
aaa
in
cli
push
xchg
pop
mov
inc
loop
cmp
pop
push
mov
or
sbb
mov
push
cmp
insl
mov
jae
fistl
out
jg
arpl
adc
hlt
add
mov
push
inc
cltd
aam
mov
aaa
xlat
hlt
xor
ds
xor
pop
add
cmp
jmp
sbb
inc
mov
push
cmp
arpl
loope
gs
mov
xor
mov
pop
jne
test
cld
loopne
mov
in
dec
dec
nop
ret
out
sarl
inc
aad
aas
push
js
imul
push
repz
lods
jg
or
or
push
push
leave
enter
test
inc
dec
xor
push
adc
enter
jae
testb
cmp
stos
inc
insl
push
sub
xchg
adc
dec
lods
lods
sbb
mov
mov
dec
ss
inc
mov
inc
dec
loop
sbb
mov
daa
inc
shll
aam
mov
std
clc
jno
xchg
cs
sub
mov
test
cli
int
xchg
cmc
repz
push
cld
loopne
cmpsb
jle
mov
or
daa
das
idivl
adcb
pop
faddl
rcrl
mov
aad
jnp
hlt
sbb
xchg
sub
aad
cmp
insl
sbb
dec
xchg
pop
fsubr
cmc
mov
jl
cmp
xadd
or
stos
test
jge
push
and
push
add
push
inc
fwait
cmp
pop
xorl
sbb
and
int3
inc
addb
ljmp
pop
sbb
mov
loopne
jb
into
fdivrl
inc
xlat
mov
xchg
xchg
movb
pop
mov
jne
cmp
lcall
fdivs
pop
mov
leave
xchg
dec
fstpt
xchg
pop
add
or
notb
mov
js
push
jmp
pushf
dec
repnz
psraw
daa
adc
into
cs
mov
lfs
jo
mov
das
out
ret
dec
or
or
add
or
or
lock
mov
out
sbb
pop
mov
inc
icebp
out
or
leave
test
pop
xchg
adc
cli
outsl
dec
nop
mulb
cs
sbb
mov
add
icebp
push
jle
add
aam
push
add
mov
dec
jne
or
pop
hlt
sbb
std
jnp
xlat
push
add
mov
cmpsb
jle
cld
sti
mov
scas
repnz
cmpsl
xor
rcll
mov
push
clc
mov
pop
mov
clc
mov
push
dec
mov
ja
sbb
xor
int3
add
inc
push
xor
mov
inc
cli
mov
xchg
pop
cli
add
movsl
in
sbb
imul
mov
jne
jmp
shll
inc
push
mov
stc
mov
jp
ljmp
fiaddl
xchg
gs
jnp
mov
insl
push
clc
rorl
mov
push
mov
loopne
jg
push
push
loop
xchg
clc
ljmp
lods
dec
shll
adc
loopne
mov
mov
cmc
popf
inc
js
add
sub
int
inc
sbb
jp
sbb
xchg
cmp
out
dec
adc
aad
cmp
lahf
push
scas
das
inc
lds
or
push
push
lahf
xor
stos
sbbl
or
jb
lret
lock
mov
mov
sbb
test
jo
into
adc
daa
cld
xchg
js
xor
or
into
adc
out
in
cmp
pop
mov
lock
mov
hlt
sub
or
es
pop
sub
hlt
inc
std
in
in
mov
mov
mov
inc
mov
sbb
daa
xchg
aaa
xchg
fistl
ds
jge
fiadds
imul
mov
xchg
add
jmp
cltd
jae
pusha
lahf
xor
sbb
icebp
loop
gs
ret
aam
jno
cmpl
pushw
dec
call
idivl
aas
rol
add
sti
jns
pop
pminub
or
sub
sbbl
shll
adc
jae
xchg
adc
stc
sbb
and
ds
sbb
fiaddl
or
rclb
or
mov
push
xchg
mov
lahf
inc
sbb
mov
mov
jl
pusha
jmp
mov
jne
push
subl
push
inc
cwtl
icebp
cmc
mov
add
lock
daa
inc
mov
xchg
adcw
mov
enter
adc
mov
mov
loopne
jmp
daa
in
add
push
aad
sub
push
ljmp
ljmp
stc
int
pop
xor
adc
and
gs
fmull
insb
int3
cmp
arpl
jne
mov
movsl
adc
xor
icebp
shll
mov
push
lcall
pop
and
insl
test
fdivrl
leave
add
mov
insl
mov
bnd
in
movsl
push
cmc
movsb
rol
add
jns
add
movsb
mov
mov
mov
sbb
pop
xor
push
and
movsl
cmp
movsl
add
inc
pop
cltd
rcll
xchg
lret
rcll
ret
dec
cmpsl
aaa
lea
cltd
insb
testl
daa
stos
dec
jne
and
pop
xchg
in
sbb
pop
add
sbb
in
mov
pop
lret
dec
test
outsl
daa
icebp
aaa
jmp
pop
gs
fs
xchg
push
shrl
sarb
or
push
test
je
cmpsb
push
and
xchg
jo
pop
ss
pop
mov
xchg
sbb
mov
jns
push
or
das
xor
test
push
xor
adc
mov
dec
adc
push
pop
gs
sbb
mov
add
add
sub
into
aaa
cmp
inc
jge
pop
les
jns
mov
mov
hlt
hlt
std
pop
cmp
es
xchg
ret
fisubrs
xor
jl
pop
pop
inc
test
xor
cmp
aas
sahf
arpl
xor
cmp
sbb
pop
fwait
pop
jecxz
mov
daa
push
das
mov
lds
jmp
cmc
jno
adc
lock
cli
outsb
es
and
mov
mov
mov
insb
les
jo
sbb
lahf
test
roll
pushf
xchg
in
dec
in
shlb
cmp
and
nop
add
jg
push
add
dec
mov
mov
test
ret
subl
stos
jb
jno
nop
out
push
fcomps
movsl
pop
dec
lds
jl
fcmovbe
ret
pop
jne
add
ret
xorb
iret
dec
aas
cltd
loop
loope
mov
insl
jo
and
cmp
add
stc
cltd
stc
adc
and
insb
daa
mov
testl
pop
inc
xor
mov
or
and
inc
cld
cwtl
imul
popf
jg
gs
ds
push
pop
ljmp
scas
push
popf
xchg
outsb
fs
jns
lret
loopne
icebp
pop
mov
in
das
pop
and
sbb
aad
repz
xchg
movsl
ljmp
rclb
and
push
add
push
mov
into
adc
aad
ret
xorb
stos
or
outsl
mov
sub
rcll
into
jl
insb
xchg
jl
popf
add
jnp
xchg
mov
mov
or
insl
mov
mov
fiadds
test
fimuls
jl
cmp
add
mov
subl
outsl
ja
pop
cltd
push
or
cmc
jmp
and
loope
or
and
stos
adc
call
pop
je
pop
scas
pop
fldt
xchg
inc
adc
push
inc
inc
add
jns
out
jb
dec
cmp
push
pop
mov
aad
add
insb
in
and
and
fwait
movsb
cmp
xchg
lret
iret
sti
add
sbb
xor
adc
pushf
inc
movsb
inc
aad
scas
mov
cwtl
dec
push
fimuls
addl
adc
insl
jno
adcl
and
xor
jecxz
jae
xchg
sbb
insb
xor
sbb
movb
mov
fildll
push
xor
or
mov
test
leave
inc
or
pop
jmp
ja
mov
sbb
mov
pop
leave
push
test
sbbl
rol
mov
inc
xchg
mov
sbbb
xor
in
lods
mov
sbb
cs
lds
sti
mov
out
jp
out
dec
xchg
inc
inc
ficompl
pushf
in
xor
mov
adc
outsl
pop
ret
subb
or
aas
jnp
subb
sbb
cmpsl
hlt
jne
lcall
ret
mov
in
lret
scas
les
jl
enter
sbbl
mov
push
addr16
cmp
xchg
sub
scas
pop
pop
stos
dec
pop
fiaddl
imul
js
pop
cli
inc
lret
sbb
je
dec
sub
jae
ret
or
rcr
push
gs
aam
mov
ret
adc
mov
xchg
sbb
sbb
cmp
lock
mov
inc
mov
out
mov
movsl
shrb
mov
push
scas
push
and
pop
push
mov
sbb
stc
dec
gs
sub
fistpll
movsb
and
ffreep
pop
fwait
imul
hlt
cmp
cmp
test
mov
test
shlb
jmp
test
lret
daa
inc
xlat
jno
rorl
stc
into
ja
enter
adc
sbb
sbb
dec
movsl
subps
std
xlat
jge
sub
cmpsl
xor
sbb
cmc
cwtl
and
ret
jns
inc
out
lds
dec
sub
out
dec
inc
insl
lret
daa
lods
xchg
inc
cli
cltd
xchg
addr16
sub
jmp
adc
aad
stos
mov
lret
lcall
or
fstl
mov
xchg
clc
mov
cmp
mulb
out
sbb
lds
and
insl
cwtl
add
pop
inc
insl
push
test
aas
pop
repz
testl
dec
out
jae
test
and
test
xchg
iret
lcall
jecxz
sahf
dec
pop
push
add
int
mov
fcmovnu
movsl
mov
out
and
jg
adc
pop
pushf
xchg
and
push
leave
and
pop
or
dec
adc
ret
in
fistps
mov
push
mov
lahf
ds
clc
add
insb
outsb
addr16
xlat
shll
jmp
std
inc
call
fcmovnb
mov
push
stos
out
add
and
pushf
adc
sub
dec
fists
mov
es
test
xchg
test
sti
cmpsb
call
aad
incb
popa
mov
fwait
sahf
inc
or
test
mov
roll
js
xlat
lcall
stos
inc
push
shll
xor
or
repz
cmc
stos
cld
es
pop
iret
adc
or
cmp
xchg
mov
sub
xor
das
out
decb
int3
es
mov
andb
adcl
outsl
sti
xlat
push
inc
pop
loopne
icebp
sahf
xchg
sbbb
testl
lahf
daa
add
jo
icebp
lods
dec
decl
ret
fistps
inc
std
flds
cmp
add
fwait
popa
adc
add
dec
adcl
cmp
ljmp
sub
lret
insb
stos
push
popa
mov
test
lahf
jecxz
jecxz
test
mov
push
iret
in
jmp
rorl
sahf
rclb
mov
push
cmpsl
push
cli
lds
ds
pusha
or
jne
adc
out
cmp
push
or
roll
xor
sub
jo
xor
push
adc
dec
addr16
shrb
fstpt
shlb
sti
xor
test
xchg
push
mov
movb
fildll
cli
push
push
inc
sub
test
divl
pop
xchg
out
add
movsb
dec
dec
dec
push
lds
arpl
jae
pop
xchg
xor
add
dec
addb
shl
sbb
int
clc
imul
xor
and
ss
iret
mov
sub
std
pusha
sbb
xor
pusha
add
mov
arpl
fcompl
add
inc
lea
movsl
test
test
outsb
icebp
or
inc
sbb
adc
inc
jle
xchg
popf
dec
jle
inc
push
cmc
leave
cmp
dec
jl
mov
jp
xchg
push
mov
in
insb
imul
lods
lcall
mov
dec
movsl
fcom
adc
jno
mov
sti
rcll
inc
add
push
push
lret
xchg
mov
loop
jbe
rcrb
xchg
mov
push
dec
pop
pop
out
fsubr
pop
stos
lods
xor
imul
test
les
jg
iret
cmp
or
mov
adc
sbb
inc
dec
sub
mov
scas
xchg
mov
gs
cmp
and
add
adc
mov
sub
pop
pop
in
insb
mov
ret
dec
or
xor
push
jp
or
cmp
jle
lds
aaa
dec
ljmp
sbb
push
aad
xchg
out
out
mov
push
or
inc
sahf
jnp
or
lret
mov
cbtw
sahf
adc
mov
or
jbe
ja
cmp
lock
testb
jnp
loop
outsl
shr
push
adc
arpl
xchg
push
mov
pushf
cmp
inc
test
fsubrl
test
pop
aaa
incb
dec
xchg
lds
cli
pop
test
mov
mov
push
xchg
sbb
cmp
faddl
roll
fildl
jp
cwtl
test
mulb
jmp
std
enter
mov
pop
enter
push
cmp
in
jecxz
aaa
push
xor
jp
add
add
sbb
cmp
popl
push
outsb
in
cli
dec
cmc
dec
adc
pop
xchg
insb
in
sbb
push
ds
xchg
fmul
cmpsl
xchg
les
hlt
shrb
pushf
inc
clc
sti
loopne
lret
mov
test
je
imul
std
cli
jno
mov
data16
test
sub
sarl
pop
lret
outsb
je
popf
repz
sbb
bound
mov
push
sub
inc
sub
loop
and
add
mov
mov
xlat
movsb
shl
notl
cmp
mov
fisubrs
and
and
cmp
cmp
addps
jbe
and
push
mov
shl
mov
movl
rol
and
and
or
aam
ret
clc
in
out
mov
jmp
call
movsb
pop
push
ljmp
daa
bound
mov
scas
cmpsl
push
cmp
scas
xorl
mov
inc
push
cmp
inc
cmpsb
push
nop
insb
ss
jle
xchg
adc
lahf
pop
fs
cmpb
repnz
sbb
jae
mov
inc
ror
outsb
lods
add
dec
movsl
popl
sub
push
mov
mov
mov
fisttps
int
sbb
ror
in
sub
pop
orl
adc
sbb
call
insb
inc
xchg
push
std
lcall
std
cltd
adc
push
jmp
xor
js
incl
dec
dec
xchg
fildll
pop
cmp
mov
std
push
adc
ljmp
test
pop
daa
mov
and
mov
test
loopne
test
mov
lods
loop
jns
cmpsl
pop
shlb
sub
idivb
adcb
add
push
pop
std
jnp
aam
filds
std
jns
sbb
rorb
int
mov
pushf
xor
movsl
mov
mov
jno
push
mov
mov
dec
mov
nop
xchg
or
add
cli
add
jmp
loope
sbb
insl
dec
and
insl
call
mov
lods
in
jb
jnp
mov
mov
mov
icebp
lret
in
xchg
rcrb
sub
loopne
ret
pushf
push
adc
faddp
jno
movsb
aam
addl
aad
cmp
pop
mov
icebp
jbe
jg
test
out
stos
cmp
nop
pop
popa
jp
jbe
orl
out
cmp
sbb
in
xor
adc
ja
pop
pop
add
or
xchg
rcl
test
ror
adc
cmc
sbb
pop
xor
dec
ret
xchg
sub
mov
jle
xchg
sub
stos
pop
test
inc
inc
or
ret
repz
xchg
leave
push
idiv
arpl
adc
and
fidivl
cwtl
outsl
sbb
sbb
push
out
add
inc
xchg
sbb
dec
xor
repnz
sbb
sub
fists
push
das
jne
js
loop
cmp
mov
loop
mov
mov
dec
xchg
mov
rolb
pop
push
sbb
test
pop
cwtl
xor
or
and
add
jo
sbb
dec
notl
ficompl
jno
sbbl
sub
call
sbb
or
aas
fldenv
outsb
lea
frstor
mov
lcall
adc
pop
ret
mov
fisttpll
loop
out
shrb
mov
addr16
xor
jmp
mov
jmp
mov
mov
je
pop
js
jns
scas
loopne
mov
or
pop
out
pop
sub
fwait
cltd
repz
fsubs
hlt
movsb
xor
add
sahf
inc
adc
les
movsl
dec
stos
repnz
stc
mov
or
and
ret
insl
ficomps
push
jno
mov
push
data16
fsubs
xchg
or
das
add
cmp
mov
adc
insl
stos
xchg
fnstcw
sahf
test
aaa
shlb
fs
mov
xor
lret
aad
mov
lahf
and
movsl
insl
push
push
cmp
out
lea
push
icebp
pop
push
and
sbb
rolb
pop
mov
in
push
xchg
rcrb
push
pop
lock
hlt
lret
lcall
insb
ja
xor
or
std
cmp
inc
roll
daa
mov
jmp
icebp
hlt
pop
das
dec
dec
ljmp
enter
xor
push
shl
mov
icebp
sbb
and
stos
sbb
mov
stos
and
and
dec
out
mov
cmpl
sti
nop
pop
pop
and
adc
int
lahf
je
jmp
fsubrs
shr
insb
mov
in
jo
add
push
jle
or
aad
mov
mov
cltd
push
lock
xchg
mov
inc
imul
and
sti
cmc
insb
jae
loopne
push
mov
adc
push
clc
xchg
sbb
fldenv
neg
inc
cmpsb
adc
das
test
ds
in
xor
addr16
stc
dec
jp
xor
std
dec
push
mov
fdivr
fcoms
and
test
xor
sbb
in
cmp
mov
xor
rcll
test
outsl
push
inc
add
inc
xor
mov
mov
movsl
pop
dec
mov
pop
cwtl
mov
movl
and
mov
add
and
ds
hlt
mov
inc
jge
aaa
sub
insl
ss
and
sub
add
sbb
cmp
je
test
jmp
inc
push
mov
add
nop
push
stos
into
roll
in
in
sub
jnp
mov
cmp
faddl
leave
into
scas
jb
pop
push
xor
pop
cmp
add
pop
ds
or
cmp
jp
insb
ret
or
into
in
mov
sbb
fsubs
cmp
mov
push
iret
mov
js
and
cmp
jo
mov
test
lds
mov
add
mov
dec
dec
idivl
rorl
dec
add
mov
cmp
cmp
push
in
outsb
cmpsl
push
push
cmp
loope
adc
call
inc
cmp
jnp
pop
pop
mov
in
pop
jge
push
push
push
or
jne
xchg
data16
movsl
lock
cwtl
sub
xor
test
inc
gs
sbb
mov
or
movsb
test
adc
mov
xor
or
push
mov
int
shl
test
jge
incb
and
xchg
flds
push
xchg
jo
das
in
cmpl
in
mov
popf
sub
out
enter
cmp
rolb
mov
lahf
dec
lcall
jns
xchg
push
pop
lds
inc
or
mov
and
jle
or
mov
mov
ss
out
sbb
dec
stos
mov
mov
xor
ljmp
sbb
cwtl
jbe
pushf
push
icebp
sahf
fdivs
pop
mov
and
mov
sar
outsb
sarb
sbb
push
cmpsl
ds
lea
stos
sub
cld
xchg
pop
enter
push
cli
fists
xorl
push
adc
in
je
addr16
into
inc
or
push
inc
mov
jns
inc
mov
inc
or
jns
lcall
mov
mov
mov
mov
lods
dec
fimull
loope
sbb
add
xchg
dec
push
adcb
popf
aaa
cmp
clc
stos
aas
sbb
or
mov
mov
ficompl
cmp
inc
into
mov
sbb
out
fmuls
sar
jle
add
jae
xchg
push
idiv
das
jle
jp
lock
jecxz
mov
stos
dec
mov
lock
andb
pmaddwd
pop
aas
pop
mov
mov
sbb
adc
sub
inc
pop
loop
scas
roll
push
std
cmpb
rcrl
ds
mov
imul
sbb
roll
push
outsb
add
mov
dec
inc
mov
xor
out
or
loop
jne
movups
and
or
outsb
test
mov
fldcw
or
aad
daa
aaa
sub
sub
and
jno
insb
ljmp
cmpsl
jmp
push
or
push
cmp
jecxz
push
jle,pn
inc
mov
pushf
cmc
loopne
inc
dec
mov
sub
sub
and
dec
hlt
insl
out
enter
inc
or
and
sub
push
cmc
jmp
fisttps
xchg
aaa
arpl
add
jp
or
imul
in
cmpsl
pop
push
lea
mov
mov
or
hlt
fptan
push
call
xor
mov
cmp
jmp
inc
mov
pop
cld
sahf
xchg
dec
jp
mov
gs
repnz
push
mov
pop
mov
scas
pop
jno
loope
std
dec
imul
mov
dec
xor
and
mov
popa
popa
jmp
movsl
add
cmpsl
daa
add
or
add
mov
mov
pop
adc
jl
or
out
xchg
js
ss
lea
cltd
adc
dec
addb
mov
aam
jbe
in
les
shlb
dec
push
lcall
sbb
dec
push
mov
jecxz
sub
jae
into
pop
adc
or
in
pop
call
jmp
mov
xchg
xchg
mov
sub
popa
shll
add
lds
test
sahf
ret
sahf
pop
je
add
push
iretw
stc
gs
mov
or
mov
lds
or
jnp
pand
sub
add
leave
push
or
xlat
sub
fwait
je
fsubs
adc
addr16
out
bound
xchg
test
in
adc
dec
ret
int3
test
aam
jae
dec
int3
and
cmp
jb
jl
push
or
add
adc
mov
pop
jl
repz
bnd
pop
incl
cmpsb
sbb
popf
inc
call
push
jmp
test
rcrb
mov
mov
shlb
icebp
jns
mov
cmpb
mov
xchg
mov
push
enter
mov
fndisi(8087
enter
sub
not
adc
xlat
out
xor
icebp
sahf
lods
js
stos
push
aad
xchg
push
cltd
ja
les
aas
jp
jp
fs
ret
lods
adc
lods
test
sub
mov
jno
add
sbb
pop
je
mov
pop
loopne
xchg
add
xchg
out
push
pop
aaa
mov
inc
or
test
mov
sub
sub
jmp
je
cwtl
pushf
clc
imul
mov
pusha
stos
mov
mov
movsl
mov
cmp
sub
lods
push
gs
mov
push
cmp
aam
xor
jp
es
loop
or
filds
nop
in
pop
addr16
mov
inc
sbb
test
ss
lock
imul
scas
mov
stos
nop
repz
jl
cld
cmp
test
loopne
outsl
lret
mov
ss
push
sarb
add
mov
addr16
add
adc
out
mov
inc
push
dec
les
jo
jnp
pop
sub
fs
stc
sub
jbe
andb
mov
shrl
lcall
cmc
inc
js
adc
adc
call
jecxz
repz
cmp
cmp
jg
jecxz
insb
dec
or
aas
or
xchg
lret
fbld
jb
and
lahf
add
cmpsb
aam
loopne
cmp
mov
jg
lods
xchg
imul
xchg
jbe
mov
mov
jle
inc
inc
push
mov
rcrb
std
cmpsl
icebp
gs
das
fwait
movsl
inc
shll
fildl
dec
lods
sub
and
adc
loopne
scas
push
lock
and
add
lods
mov
push
pop
mov
outsl
mov
add
mov
and
sarb
add
adc
addr16
mov
insl
out
ret
xchg
subb
lods
or
push
jmp
fimuls
jae
fwait
cmc
ss
cmpsb
pop
or
sbb
cmp
adcl
pushf
cmp
or
and
pushf
fmul
pop
fisttps
icebp
fwait
in
jb
and
out
mov
test
aas
push
jecxz
icebp
inc
mov
sbb
mov
sub
jo
nop
cs
ljmp
add
cmp
jp
jp
push
daa
fs
adc
shlb
cmp
xchg
cmp
xchg
aam
ret
call
push
jno
cwtl
outsb
jbe
sbb
loop
daa
in
dec
testl
jge
mov
fsubl
pop
and
pushf
adc
sub
pop
pop
inc
cmc
jmp
adc
cmpsl
or
test
cli
dec
into
js
rcrl
xor
cli
mov
xchg
mov
pop
les
mov
pop
push
int
sbb
mov
mov
fsubs
fistpll
jmp
outsl
xrstor
pop
ret
outsl
mov
cmpsl
cmp
push
mov
pop
stos
pop
pusha
leave
adc
cwtl
add
fistl
pushf
out
stos
scas
push
add
lret
repnz
pop
sbb
inc
mov
dec
and
lea
outsb
jge
inc
test
insb
out
push
or
aas
mov
and
iret
push
add
int
pop
dec
push
pop
jge
incl
in
hlt
push
outsl
xor
test
int
pop
stos
out
stos
dec
popa
sub
mov
jmp
jle
loope
mov
ljmp
cmp
adc
ret
loopne
cmp
stos
stos
jo
dec
ljmp
outsb
xchg
fsts
jg
inc
out
das
sub
xor
adc
into
mov
je
push
lds
mov
mov
aad
lods
lret
ret
jmp
mov
js
adc
pop
lea
insb
adc
andb
or
add
or
fstps
dec
cmpsb
or
into
lds
add
les
in
adc
stc
addb
dec
in
push
cwtl
mov
xor
mov
addr16
pop
and
cwtl
dec
or
sti
pop
ljmp
jge
cs
mov
adc
outsb
or
loopne
pop
out
inc
lret
loope
mov
leave
js
jl
add
jbe
dec
sub
stos
imul
pop
push
in
les
mov
cwtl
scas
mov
stc
and
xchg
fchs
adc
clc
sbb
dec
in
sahf
sti
clc
and
adc
cmp
in
cmp
mov
out
test
loopne
inc
mov
and
aad
mov
enter
neg
fistl
iret
and
aam
xor
fiaddl
add
xor
push
incl
scas
andl
jmp
push
rorb
and
data16
or
pop
push
xchg
arpl
inc
mov
loope
test
jne
sbb
aam
jge
sbb
xchg
fimull
adc
movsb
in
jae
mov
dec
mul
loope
incb
outsb
sbb
and
jg
dec
and
sbb
orl
mov
imull
and
push
add
pop
inc
pushf
leave
sub
rorl
insl
jge
insb
mov
arpl
sub
fld
sub
xorl
les
push
shlb
mov
pop
mov
lret
mov
in
in
subb
jmp
js
pop
dec
rcl
dec
and
loope
aad
xchg
pop
daa
xchg
cmpsl
adcb
lods
cwtl
out
inc
add
sahf
xchg
sarb
and
mov
xchg
push
pop
rcll
dec
cwtl
jbe
add
and
es
mov
mov
mov
cltd
push
movsb
or
pop
xchg
dec
sub
sti
addr16
divl
mov
jae
xchg
cmp
out
daa
xor
inc
in
add
xchg
cmc
inc
in
xor
repnz
adc
leave
push
aaa
neg
add
lea
cmp
and
sbb
xor
xchg
mov
loope
cmpsb
sbb
insb
sbb
cmpsl
push
pop
cs
xlat
mov
aas
sub
sub
mov
push
xchg
mov
out
fcomp
shrl
fisubs
jmp
lahf
shll
data16
lcall
in
and
dec
pop
mov
adc
mov
mov
adc
jmp
xorl
into
cmc
stos
nop
enter
fistpl
cli
sub
push
sbb
mov
push
in
repnz
movq
fmuls
addr16
into
addb
jno
xchg
and
cmpsl
push
rcrl
sbb
gs
and
pop
das
das
push
icebp
outsl
mov
push
mov
imul
mov
cmpsb
fnsetpm(287
xchg
mov
outsl
add
cmp
mov
ffree
mov
add
add
les
sub
push
mov
add
mov
mov
push
jbe
outsb
out
in
sbb
test
pop
or
int3
cli
jg
fcoml
inc
cmp
test
dec
lock
add
fstpt
ljmp
xor
mov
call
push
mov
push
mov
sbb
jmp
shr
int3
imul
ja
insl
call
popa
ret
sub
mov
addr16
dec
sbb
jge
outsl
test
add
rcrl
xchg
cltd
rcr
pop
dec
sbb
testl
or
stc
scas
or
push
xor
pop
adc
loope
xor
mov
xchg
les
add
pop
subl
shl
xor
and
outsb
push
jne
xchg
jbe
cmp
outsb
push
jae
dec
fmul
aas
loopne
pop
add
inc
xchg
mov
jo
add
dec
mov
clc
pop
repnz
sub
sub
nop
sub
adc
add
xchg
ss
ffreep
movb
repnz
or
addr16
push
jle
pop
add
cmp
outsb
pop
cltd
or
mov
leave
decl
shlb
addr16
cwtl
inc
pop
adc
cwtl
cmp
int3
or
aaa
inc
jle
and
pop
push
inc
ffreep
xor
int
fisttps
int
add
or
and
cmp
mov
pop
push
js
jo
test
mov
push
sti
das
xor
xchg
mov
mov
jge
mov
push
fists
fwait
jg
fneni(8087
mov
or
lods
ljmp
clc
mov
movsb
xchg
cmc
cltd
pop
fidivrl
jbe
daa
or
xor
inc
dec
decb
cmc
xchg
xchg
and
mov
dec
cld
add
cmp
pop
mov
inc
ljmp
pop
fidivl
fstpl
sub
cmp
mov
faddp
adc
out
jnp
xchg
push
lcall
inc
mov
cltd
mov
jg
mov
mov
ja
aad
aam
dec
insl
inc
js
add
adc
lock
shlb
jle
mov
addr16
adc
fisttpl
aam
push
sub
add
pop
cmpsb
bound
rclb
popa
inc
clc
mov
sbb
repnz
frstor
jne
pop
adc
pop
cmp
jle
nop
pushf
jl
in
in
pop
mov
mov
call
arpl
push
mov
dec
lret
mov
testl
xchg
ret
push
cmp
add
mov
and
insb
xlat
xor
inc
imul
cmp
push
imulb
pop
jl
push
xchg
push
xchg
lret
jno
imul
mov
mov
jae
cmp
pop
mov
adc
dec
dec
dec
movsb
loop
mov
pop
js
push
push
int3
clc
inc
andb
add
adc
stos
mov
inc
gs
imul
sub
jl
adc
cmp
mov
xchg
xchg
add
test
hlt
mov
lds
adc
lret
cmpsl
fidivs
adc
rorb
sub
imul
sbb
mov
int3
mov
cmp
push
aaa
stc
jae
jmp
fs
mov
enter
stos
outsl
out
pop
jmp
xlat
or
dec
push
test
addr16
push
push
cmp
sbb
mov
mov
lret
inc
loope
mov
jno
dec
cmp
scas
mov
shll
pop
aam
xchg
pusha
jbe
lds
cld
jmp
hlt
outsb
pop
pop
pop
xor
inc
lret
and
mov
nop
aas
repz
pop
sahf
lcall
test
pop
dec
icebp
xorb
push
imul
stos
or
pop
pop
push
repz
jge
sub
jae
lods
mov
xchg
xchg
pop
pop
inc
mov
das
popf
inc
lret
dec
jbe
pop
scas
and
movsb
movsl
loopne
push
add
pop
push
push
mov
dec
loopne
out
movsl
nop
rolb
rorl
xchg
in
inc
adcb
xchg
cmpsl
fs
insb
xor
jg
rcr
adc
pop
in
loop
cmc
xor
aaa
es
bound
mov
mov
sub
jae
je
jecxz
jns
push
sub
and
lcall
xlat
out
sub
je
mov
and
or
call
jl
ljmp
or
and
mov
faddp
shrl
push
cmp
pop
outsb
jmp
mov
xchg
ret
popf
popf
cli
cmp
out
outsb
mov
push
push
fnstcw
push
inc
and
repz
push
in
flds
test
inc
inc
push
clc
movsl
inc
outsl
stos
icebp
not
jp
loop
add
or
test
adc
mov
out
cltd
cmp
ret
movb
push
aaa
lds
fcoms
sub
adc
jl
sub
or
and
popa
push
fwait
jae
mov
xchg
jae
sub
push
jecxz
sarb
pop
push
xor
outsl
pusha
push
push
inc
push
or
fsubrs
and
inc
xchg
daa
out
push
and
and
adc
cltd
in
lods
and
inc
rolb
adc
cmp
orb
mov
pop
repz
cli
enter
pop
or
add
mov
stos
and
aam
loope
inc
ss
sub
adc
roll
mov
pop
aas
or
icebp
bound
stos
push
scas
cld
cli
dec
popa
mov
push
andb
test
adc
push
aas
inc
addr16
leave
or
pusha
cmp
pop
adc
mov
leave
mov
cli
pop
ret
mov
cmp
ljmp
lods
adc
or
mov
fidivs
inc
adcb
aas
mov
roll
xchg
xor
add
fimull
push
and
pushf
push
or
cmpsb
in
dec
shrl
dec
and
dec
enter
stc
push
xchg
mov
sbb
mov
and
incb
jns
xor
test
iret
mov
fcmovbe
mov
outsb
push
mov
inc
clc
mov
pushf
vmptrld
add
dec
jg
and
adc
adc
loop
add
jnp
in
std
pop
stc
sbb
push
sbb
add
icebp
fst
dec
ror
iret
idivl
out
test
push
ret
cmp
jb,pt
mul
push
test
mov
push
jbe
pushf
push
jp
jb
jno
xor
pop
xor
jne
ljmp
mov
aad
dec
add
push
xchg
rcrl
pusha
popa
and
movsb
shlb
mov
inc
push
mov
loopne
xchg
mov
movsl
aad
sub
ret
insb
add
mov
dec
scas
lret
pusha
dec
adc
ret
mov
outsl
lret
xor
std
and
popa
jge
adc
add
mov
shrl
rcr
jo
lcall
cmp
xchg
sub
and
inc
mov
loopne
xchg
test
mov
mov
out
cltd
add
inc
sub
aaa
cmp
mov
xchg
jmp
adc
sahf
aas
adc
mov
outsb
add
xchg
ret
push
mov
cmpsl
pop
mov
pushf
push
pop
jae
gs
mov
sahf
dec
sahf
add
mov
jae
lock
push
gs
ds
cmp
dec
ss
xchg
sti
sbb
out
icebp
mov
pop
jnp
sub
xchg
push
pop
cltd
sub
mov
mov
sub
sahf
adc
pop
stos
jo
mov
ret
cld
popl
movsl
mov
xchg
lods
mov
mov
ret
jae
pminub
pop
in
ret
push
int3
ret
test
aas
test
jno
push
mov
push
imul
decb
lret
js
mov
add
inc
popf
leave
mov
add
and
mov
jnp
adc
add
imul
mov
adcb
mov
inc
int3
fucom
out
pand
call
popa
ffreep
les
jbe
inc
ret
rcl
daa
adc
orl
xchg
lds
adc
mov
xor
and
pop
das
enter
push
inc
xor
stc
cmpsb
movsl
in
lea
sub
lret
loope
test
sbb
pop
sub
xchg
lods
adc
xlat
mov
outsb
push
pop
mov
test
mov
xchg
ret
adc
sub
aad
dec
neg
sarb
and
dec
dec
sbbb
fiadds
mov
adc
jecxz
mov
mov
dec
dec
add
mov
lock
aad
dec
adc
cs
fadd
jne
out
xor
call
mov
push
push
loopne
inc
jae
jb
xor
adc
adc
mov
paddq
inc
out
sub
jp
sbb
jnp
fsubs
sub
pop
daa
sbb
jnp
rolb
jns
push
pop
out
mov
bound
aaa
jns
push
dec
jge
xor
incb
scas
push
fstpt
mov
daa
movsb
cmpsb
dec
or
jne
jae
and
pop
mov
lret
push
sbb
ret
jl
mov
aaa
pop
push
lret
and
jnp
ja
pop
in
xor
sub
out
test
lret
add
push
sub
push
out
mov
cld
jbe
jb
movsb
aas
mov
push
mull
xor
in
mov
mov
dec
inc
movsl
pop
mov
repz
push
inc
or
pushl
mov
dec
out
sub
insb
mov
stos
shlb
jle
xchg
les
pop
hlt
add
jbe
or
arpl
and
mov
call
scas
push
iret
add
lods
shlb
xchg
jae
jmp
outsb
mov
incb
lret
dec
loopne
mov
ljmp
fwait
divl
icebp
ja
ljmp
mov
sbb
enter
cmp
sub
ret
popf
bound
data16
xor
xchg
push
xlat
bound
adc
aam
repz
jbe
in
mov
shl
sbb
fiaddl
jne
lret
arpl
mov
repz
cmp
jbe
in
jne
xchg
mov
push
push
js
gs
inc
ljmp
pop
add
mov
mov
dec
jge
jnp
inc
lahf
repnz
fbstp
or
mov
inc
sub
pop
jns
adc
movl
cmpb
lods
out
pop
or
dec
xor
push
sbbl
jne,pn
adc
mov
sbb
cli
rclb
sub
int
cmpl
push
mov
add
sbb
cld
xor
push
ljmp
inc
jnp
dec
popa
sub
lods
jnp
inc
test
out
add
imul
push
test
stos
add
jae
repz
in
int3
push
inc
and
pop
add
inc
fwait
rcrl
push
outsl
fbld
xchg
pushf
mov
add
movsl
in
or
pop
dec
scas
pop
or
sbb
lcall
ss
movsl
or
mov
iret
lahf
xchg
mov
ret
rcrb
fisttps
loope
adc
in
mov
dec
or
scas
daa
sbb
mov
fstpt
imull
xchg
mov
or
push
loopne
lock
xchg
jp
lods
test
push
jl
cld
pop
pop
push
dec
push
add
and
push
rcrb
jg
scas
aad
inc
jae
push
fmull
int3
divl
das
popa
add
mov
mov
xor
xchg
jns
cmpsb
dec
xchg
mov
push
lret
int
mov
fidivl
jno
test
cmc
subb
dec
pop
inc
pop
lret
sbb
sbb
ret
stc
out
cmp
push
push
adc
lret
pop
aaa
int
jns
jmp
jb
rcrb
dec
faddl
adc
or
in
xchg
jecxz
or
or
aas
mov
cltd
fs
rcll
outsl
mov
divl
fadds
imul
dec
jle
jbe
fadds
adc
dec
jno
ja
cwtl
xorl
mov
add
pusha
out
add
rclb
xor
iret
sbb
sub
sub
sahf
adc
sub
out
adc
mov
loopne
sub
sbb
cwtl
call
adc
sub
into
mov
arpl
fiadds
inc
mov
flds
stos
hlt
add
xor
xor
div
mov
mov
addr16
jno,pt
add
adc
push
mov
repz
dec
mov
pop
cmpl
sbb
cs
jo
pop
les
ret
int3
xchg
lds
sub
cwtl
bsf
pop
test
jmp
loopne
mov
outsb
lret
frstor
and
leave
loop
or
pushf
mov
push
jne
mov
aad
pushf
popa
fwait
stos
inc
mov
jno
jbe
xchg
push
xor
outsl
cmp
mov
enter
inc
mov
icebp
xchg
adc
xor
insb
pop
call
les
add
cltd
gs
push
fcoml
pop
sahf
mov
cmp
dec
rolb
dec
ss
imul
aas
cmp
popf
lds
lea
fcoms
or
xchg
mov
mov
dec
inc
jp
xchg
inc
decb
adcb
stos
mov
testb
add
andb
loope
push
sbb
pop
add
movsb
ret
testb
add
or
scas
icebp
inc
xchg
insl
inc
popf
mov
sahf
pop
iret
inc
mov
xchg
pop
pop
cwtl
gs
in
fcmovne
push
push
mov
sbbl
jb
mov
mov
cs
test
xor
loopne
sbb
cmp
pop
push
xchg
movsl
nop
jmp
xchg
and
std
out
daa
mov
cmp
dec
cmp
loope
enter
cs
data16
cmp
out
call
cmc
movsl
jnp
subl
or
jmp
sbb
lret
push
pop
inc
movsl
push
stc
shr
inc
mov
outsl
in
dec
stos
orb
xor
xor
dec
out
mov
mov
scas
sub
sub
bound
adc
xlat
adc
adc
push
nop
gs
daa
cmp
sbbb
xchg
std
aad
loop
pop
push
outsb
iret
pop
repz
dec
repz
mov
movsb
jle
cmpsb
cmc
add
pop
insb
fisubl
mov
call
cmpsb
jno
mov
movsl
add
cmp
xchg
mov
and
cmp
pop
enter
das
stos
iret
ja
mov
jg
mov
cmc
xor
mov
in
and
or
add
in
inc
jbe
cmpsb
or
fcom
cld
and
jne
jbe
test
arpl
loopne
and
lods
jecxz
dec
and
leave
gs
sbb
iret
push
outsl
inc
shlb
dec
jp
xor
add
mov
sub
hlt
xchg
or
or
add
fwait
imul
or
and
dec
pop
pop
mov
daa
sub
js
xor
adc
mov
xchg
test
fcmovnb
inc
lock
xor
inc
ds
sti
rsm
inc
add
inc
in
fidivl
lahf
jmp
out
lea
lret
jmp
in
mov
daa
mov
sbb
stos
shl
xchg
add
add
xchg
inc
jne
pop
add
or
int3
push
cmpsl
sub
push
mov
cltd
pushf
lret
scas
in
add
ret
fbld
inc
cmpsb
sub
or
mov
addr16
fdivs
scas
pop
push
sub
or
dec
sarl
sbb
dec
dec
push
pop
mov
ret
ds
enter
pop
or
and
and
jns
xor
fldenv
inc
mov
mov
sub
testl
push
pop
repz
mov
loop
loopne
jl
lock
js
outsl
daa
roll
adc
and
in
xchg
shlb
xor
or
mov
aad
pop
mov
sub
sub
jnp
out
popa
setp
loope
out
dec
lods
nop
jnp
div
aaa
or
adc
lret
jg
dec
cmp
imul
out
jg
jno
mov
test
ljmp
add
std
sub
mov
pop
xchg
bts
xchg
rol
popa
push
iret
fs
push
jbe
in
mov
cmp
sub
fisttpll
ret
insl
scas
daa
inc
sahf
ret
inc
or
enter
inc
mov
xlat
mov
sub
jb
insl
mov
cmpsl
sbb
pop
mov
pop
mov
jmp
arpl
sub
jo
fidivrs
incb
ror
push
jmp
sbb
xchg
int
mov
mulb
cltd
xchg
movsl
jne
loopne
lret
je
test
mull
or
mov
leave
mov
aas
sbb
push
inc
xor
imul
idivl
and
subl
sahf
add
xchg
neg
fs
pop
cmp
sahf
pop
jnp
mov
bound
sbb
sub
and
es
pop
in
je
in
inc
loop
cld
cmc
sub
fcomps
popa
adc
ja
mov
ficompl
ss
or
out
ja
mov
in
push
divl
mov
dec
jb
lock
aaa
pop
dec
xor
jns
out
lock
nop
into
pusha
or
insl
aaa
xchg
jo
shlb
push
addr16
push
clc
cs
loopne
stos
dec
pop
in
or
push
clc
shr
in
push
dec
test
sub
pop
lods
iret
and
mov
lock
ret
das
xor
repnz
mov
in
inc
jg
out
add
cmp
sbb
or
loopne
lahf
orl
loop
cltd
and
mov
aam
fsubs
sub
loop
xor
ret
xor
pushf
or
mov
fildl
movsb
je
inc
es
jmp
mov
xchg
mov
mov
push
pop
rolb
xor
fstpt
xor
xchg
faddl
sub
sub
sbb
sub
mov
lret
pop
js
in
adc
xchg
sahf
lret
das
insl
cmp
mov
repnz
push
pushf
ficompl
adc
insl
fcoml
fistl
ja
and
and
fwait
fs
or
or
mov
jle
add
idivl
xchg
sbb
call
jl
push
ja
xor
sub
addb
push
sbb
mov
xor
mov
or
pop
aas
or
push
call
jns
fs
xor
sub
int
into
push
inc
sarb
icebp
in
ss
arpl
test
mov
and
mov
iret
sbb
leave
adc
jae
into
sbb
dec
sarb
push
ja
orb
ror
mov
add
ffreep
cld
sbb
jg
inc
xchg
cmp
shlb
mov
dec
mov
stos
mov
iret
sub
sar
sbb
mov
roll
jecxz
insb
xchg
in
xchg
sahf
mov
cmp
in
cmp
jp
or
fsubrl
pmaxub
jbe
clc
out
lahf
xor
mov
adcb
bound
jns
or
jae
incb
xor
jp
les
lret
imul
lock
add
ret
cmp
push
pop
out
popa
xor
add
outsl
xchg
das
sbb
adcb
push
movsb
scas
lret
cli
movsl
insb
and
mov
js
push
pop
lods
xlat
push
test
mov
jae
pop
popa
cmc
int
jmp
inc
push
in
jg
cld
xor
mov
scas
sub
out
scas
xlat
stc
fcoms
icebp
ret
sbb
in
lea
pop
adc
or
mov
xchg
shrl
stos
cmpsb
add
xchg
test
stc
test
mov
insl
pop
imul
repnz
idivl
xor
repnz
sub
ret
and
mov
cmp
repnz
pop
or
xchg
das
aad
sti
testl
or
adc
rclb
clc
in
jnp
adc
dec
mov
int3
add
cmc
adc
fisubrl
inc
jge
cmpsl
int3
sbb
cmp
jl
push
mov
dec
cli
xor
cmpsb
jae
scas
add
popa
lea
sub
mov
hlt
push
lds
or
out
shll
test
adc
cmp
xchg
aad
mov
cli
cmpsb
sub
stos
out
dec
fs
xor
icebp
push
loop
fsubrs
outsb
in
fxch
or
ds
hlt
sbb
cmpsb
inc
arpl
push
mov
test
mov
icebp
push
rclb
mov
push
dec
ss
rcrl
in
popa
pop
adc
lcall
sbb
push
shll
mov
movntps
xchg
jle
cld
cli
iret
ljmp
adc
out
pop
mov
push
add
xchg
lret
push
fcompl
adc
pop
cmp
xor
cmp
push
dec
dec
les
std
loope
mov
lret
jnp
adc
dec
lods
popf
xor
cld
fisubs
imul
xor
pop
adc
push
divb
jl
jae
push
pop
cmp
cmp
test
and
sti
mov
mov
mov
dec
mov
push
push
js
push
fsubr
psraw
sahf
mov
xchg
nop
add
jge
notb
nop
jmp
inc
iret
dec
ret
cmc
cmp
out
fldl
sub
orl
ret
pop
jge
or
scas
pop
mov
jb
mov
testl
test
xchg
or
xchg
enter
ficoms
mov
mov
pushf
cmc
mov
dec
lods
out
and
cmpsb
cmp
pop
shlb
xor
pop
iret
sub
in
rep
cmp
xchg
push
push
imul
xchg
icebp
or
imul
sub
push
jecxz
and
aaa
and
adc
mov
test
mov
fs
pop
xlat
lcall
mov
outsl
data16
jb
popf
sbb
sbb
dec
sbb
mov
fdiv
in
sub
cld
push
filds
das
cmc
add
xor
mov
in
outsb
gs
adc
loope
jnp
push
mov
mov
divl
jae
jg
pop
sar
loope
dec
test
push
add
cmp
add
in
jp
dec
push
inc
adc
mov
aaa
lods
loope
jbe
mov
imul
neg
jg
cmp
in
outsl
xlat
jl
gs
mov
pop
popf
adc
dec
scas
not
mov
inc
repz
mov
stos
cs
lret
cmc
push
lret
fldl
aam
fldcw
aam
repz
mov
jne
fldt
pop
and
ret
sbb
inc
das
dec
cltd
gs
push
jne
repnz
lds
adc
pop
in
movsb
xlat
cld
adcb
and
pop
shll
jo
pop
xor
pop
jp
sbb
nop
inc
movsb
and
cli
lahf
test
fstl
mov
jl
sbb
xchg
fdivl
xor
jb
inc
mov
inc
cmp
lcall
mov
push
jl
jl
aad
mov
into
shll
lret
xlat
or
lcall
aam
in
dec
imul
push
adc
adc
stos
ja
pop
xor
mov
insl
test
lcall
iret
stos
int
xchg
xor
sub
cmp
imul
jne
push
out
or
jecxz
stos
insb
outsl
loope
lods
pop
aam
into
fnstcw
js
push
mov
and
dec
jns
aad
lahf
jb
lret
cmp
inc
mov
popf
lods
mov
sbb
mov
jmp
sub
pop
leave
pop
push
repnz
xor
inc
xor
cmpsl
mov
jno
pop
jp
mov
push
ret
fisttpl
inc
test
addr16
adc
xor
jmp
lods
cmpsl
jno
fidivs
or
and
cmp
int3
adc
outsl
lods
sbb
pop
pusha
or
mov
rorb
mov
stos
clc
sti
adc
es
or
inc
outsl
dec
js
sbb
push
or
cmp
xor
mov
mov
push
or
mov
mov
mul
ds
loopne
push
in
cmpb
mov
mov
xchg
aas
cli
mov
and
pop
popf
push
test
and
inc
loopne
adc
pop
ja
loope
xchg
and
pop
test
mov
pop
ljmp
notb
dec
cwtl
xchg
jle
ret
push
lea
or
js
adc
imul
dec
movsl
pusha
dec
cmp
xor
dec
sub
push
cmp
mov
jo
shll
and
jecxz
jb
lods
add
je
hlt
or
jge
and
insl
mov
jns
cmpsb
jb
xor
dec
add
imul
pushl
jl
push
aad
push
xor
in
inc
dec
fsubs
rorb
add
and
push
js
sub
cli
jge
xchg
test
jg
enter
nop
cmp
mov
cmpsb
pop
add
rcl
ja
test
mov
arpl
sub
dec
xchg
imul
push
cmp
sub
loope
or
pop
mov
cli
icebp
fnsave
sbb
out
jge
aad
sbb
push
call
das
loop
jns
xchg
mov
cmpsb
jp
mov
sub
idiv
inc
xchg
jnp
add
mov
cli
rorb
adc
jo
push
insb
xchg
xor
push
mov
push
push
iret
sbb
jne
fiaddl
jge
xchg
cmp
std
pop
popa
mulb
into
add
sahf
push
mov
loope
inc
jp
xlat
test
rcrb
sbb
pop
add
stc
xchg
inc
fstps
xchg
aad
jno
loop
fisubs
rorl
push
add
insl
mov
sub
dec
jl,pn
adc
lret
imul
fldcw
cmp
mov
popl
out
sahf
xlat
and
pop
push
push
mov
fiadds
mov
push
mov
jl
mov
int3
sub
mov
fcomps
push
rcrb
jbe
call
jae
mov
out
movsl
inc
pop
add
mov
cli
and
lcall
test
adc
gs
cmc
movsb
pushf
out
scas
rcll
jl
jno
frstor
daa
xchg
imul
rorl
mov
adc
cmpsl
test
sub
test
jo
nop
insl
push
cmp
add
in
ljmp
mov
pushf
ljmp
shlb
push
aaa
out
mov
inc
push
rorl
cmpsl
rolb
std
test
add
jnp,pn
fnstcw
cmpsl
and
mov
jp
dec
xchg
dec
test
and
fadds
fcmovnbe
daa
jo
xor
xorl
adc
cld
inc
push
mov
ds
cmp
out
std
test
adc
mov
mov
mov
outsl
push
popa
mov
outsb
xchg
ret
mov
ss
mov
mov
cmp
pop
cmc
push
movsb
jne
xor
add
lea
dec
lret
fbld
stos
adc
push
outsl
iret
jmp
std
mov
imul
and
mov
fs
scas
inc
mov
lods
cmp
pushf
arpl
add
out
pushf
jl
xor
rorb
std
add
aas
ljmp
jecxz
xor
add
push
pop
jecxz
and
ljmp
jp
xor
pop
cmp
test
jmp
pop
mov
sbb
jp
jmp
fcoms
push
xchg
cmp
scas
push
jae
or
add
fldl
out
das
loopne
outsl
sub
inc
xchg
or
mov
sub
leave
cltd
fsubrl
jb
fbstp
cld
cmp
sbb
insb
sbbl
repz
loop
add
cmp
mov
jmp
mov
cwtl
test
aad
dec
xor
imul
cmp
mov
dec
das
push
mov
push
mov
add
xor
sbb
inc
daa
jbe
leave
popf
sub
lds
inc
jge
mov
rorl
push
push
adc
jno
mov
sub
jp
fistps
xchg
or
pop
loopnew
fstpt
jo
frstpm(287
loopne
int3
cmpsb
rcr
out
lds
xor
sbb
xchg
outsl
insb
in
xchg
in
ljmp
sbb
push
pop
jge
xorl
das
mov
sub
ret
sbb
les
enter
add
lock
mov
mov
int3
mov
add
sahf
lods
sbb
dec
sub
scas
add
mov
jmp
dec
in
and
adc
lahf
pop
xor
dec
pop
into
test
lods
fildl
fisttps
in
mov
sti
outsl
fdivs
pop
pushf
leave
aam
xchg
dec
or
push
iret
cmp
fwait
aaa
call
in
xor
adc
out
mov
mov
xor
nop
fmuls
add
outsl
pop
cmp
pushf
mov
sbb
test
mov
mov
cld
mov
sbb
cmp
int3
int
stc
jg
push
out
xchg
mov
loop
pop
xchg
es
inc
movsb
les
xlat
arpl
adcl
adc
mov
arpl
pop
adc
cmp
mov
pop
mov
sub
xchg
jecxz
and
loop
call
lock
jbe
pop
pop
push
add
cmc
lret
adc
in
mov
in
scas
movsl
add
out
mov
sbb
xor
push
inc
gs
rcl
lods
inc
and
scas
enter
adc
mov
rclb
movsb
dec
movl
rcr
sbb
pop
sbb
adc
int
and
movsl
adc
mov
xchg
repz
repz
repnz
aam
cmpsl
push
insl
pop
in
repz
sub
xchg
cwtl
cli
neg
adc
push
aad
push
mov
leave
xchg
and
adc
leave
xor
aas
lcall
sahf
sub
mov
into
popf
xor
or
rcrl
and
out
and
test
pop
push
cmp
lret
mov
outsl
mov
repnz
mov
push
cmpsl
cmp
in
mov
sub
inc
and
lret
push
dec
or
push
sti
loop
xor
push
mov
push
cli
and
xor
inc
pusha
leave
icebp
sub
stc
cmp
sbb
push
lahf
data16
dec
inc
sub
scas
adc
repnz
pop
fldln2
push
cmpsl
stos
lret
pop
lds
jns
jb
scas
iret
fcomi
orb
adc
popa
ret
mov
lret
lretw
mov
ret
sbb
jne
cli
nop
adc
inc
jbe
ret
pushf
fisubl
mov
and
out
dec
mov
into
dec
jle
sub
cltd
push
mov
or
mov
ret
pop
cmpsb
xchg
test
cltd
loop
stc
inc
add
jg
inc
push
mov
lods
stos
cmpsb
push
add
popa
popa
das
cmpsl
jnp
jnp
out
dec
das
mov
adc
js
xchg
sahf
dec
iret
mov
sbbb
dec
cmpsb
jns
cmp
call
jge
cs
or
adc
mov
adc
adc
jne
jb
dec
adc
aas
popa
mov
push
xor
ljmp
fistl
cmp
or
xor
and
int
jg
inc
movaps
rcl
ds
enter
ss
sbb
out
mov
mov
dec
addr16
jae
cmp
lret
sbb
scas
pop
std
push
or
push
xchg
mov
dec
push
jno
jno
sbb
jae
or
jecxz
cmp
xchg
fwait
push
or
movsl
repz
neg
mov
xlat
ret
mov
jecxz
cmp
in
in
out
dec
or
cmp
adc
jno
pushf
fcoml
mov
pop
xor
dec
push
sbb
xchg
mov
dec
xor
mov
dec
daa
lret
adc
pop
pushf
and
pop
sbb
cmp
leave
insb
lods
test
mov
push
sbb
mov
pop
or
dec
push
es
xor
xor
add
loopne
movsl
xchg
xor
test
mov
or
mov
cmc
pop
lock
enter
dec
push
xchg
jne
ds
das
push
jae
lret
dec
clc
clc
repz
dec
jmp
inc
in
rcrl
cld
cmpb
rorl
call
test
insl
out
lcall
lods
dec
cmp
cmc
hlt
pop
les
adc
outsl
movsb
xchg
sub
lock
hlt
jmp
out
add
popa
cmp
and
adc
sbbb
iret
iret
shl
fisubl
andl
loop
or
pop
sbb
into
test
shll
shrl
mov
lds
add
jbe
outsb
jle
adc
sbb
arpl
jl
or
and
lods
mov
insb
inc
push
ds
jno
adc
push
inc
sub
scas
insb
adc
lods
repz
test
mov
pop
xlat
imul
aaa
test
inc
jmp
cmpsl
arpl
leave
push
test
mov
imulb
inc
inc
shlb
mov
out
or
pop
or
fcmovnbe
insl
testl
fs
addr16
test
cmpsl
sub
jns
mov
push
mov
push
insb
inc
sbb
or
enter
xchg
daa
ret
lret
pusha
cmp
sbb
adc
adc
add
out
mov
nop
scas
leave
and
fstl
stc
mov
pop
or
jecxz
fistl
mov
data16
popa
jo
mov
pushf
ss
mov
jecxz
jl
fs
mov
test
mul
push
sbb
pop
fs
rolb
sahf
push
mov
add
into
pop
push
lret
xlat
and
in
gs
out
rcrb
mov
stos
and
and
nop
insl
dec
inc
ss
les
inc
or
adc
cli
jnp
sahf
jmp
pop
push
rolb
clc
pushf
shll
push
mov
and
mov
test
pop
or
mov
mov
gs
pop
lret
paddusb
in
sub
inc
cmpsl
inc
add
into
and
sub
imul
xor
jo
sti
push
mov
or
pop
mov
ret
cs
loope
push
adc
and
dec
pop
rclb
mov
jo
scas
repnz
or
add
frstor
int
icebp
xchg
mov
iret
xchg
loope
iret
xor
out
mov
test
rcr
sub
jl
or
aaa
lret
mov
mov
lods
sub
xchg
mov
push
xchg
aam
out
mov
sbb
repz
push
mov
sti
xor
inc
or
inc
out
scas
sar
fwait
shl
scas
cmpl
test
fwait
push
enter
jg
lea
in
scas
aaa
pusha
movsb
not
in
ja
shlb
xchg
jbe
sub
mov
mov
out
jl
inc
scas
or
aas
mov
fwait
adc
mov
xchg
push
loope
fldenv
push
mov
aam
cmp
int
mov
adc
mov
mov
xchg
test
mov
pop
mov
rorb
ljmp
sub
and
leave
jmp
mov
inc
movsl
xor
push
test
cld
cli
cwtl
cs
xchg
fwait
push
cmpb
mov
push
mov
sbb
ficoml
aad
push
mov
xchg
mov
test
ss
in
lea
and
mov
mov
iret
cmpsb
and
sbb
mov
pop
or
mov
mov
aad
lcall
loope
gs
stos
cmp
sbb
addb
inc
inc
loop
pop
js
in
std
add
inc
mov
mov
mov
jmp
les
out
cmp
mov
ftst
scas
mov
cmp
shll
xchg
mov
xlat
jg
jecxz
xor
arpl
lock
xor
xor
lahf
mov
sub
adc
js
jo
adc
mov
std
into
mov
lret
and
mov
cmp
add
lret
cs
xchg
mov
lds
sub
sbb
mov
mov
jg
fsub
leave
xor
mov
test
addr16
es
or
test
pusha
out
push
test
push
aas
insb
fdivrl
in
repnz
jo
les
mov
cmpsl
sub
lds
and
and
ss
or
push
cmp
jmp
imul
gs
cmc
inc
mov
iret
inc
push
sti
mov
movsb
push
loope
je
jge
out
cs
rcl
out
dec
in
pop
xor
leave
rol
sbbl
mov
cli
fisttpll
das
adc
sahf
lcallw
cs
cli
inc
inc
pop
inc
rorb
inc
hlt
inc
dec
ret
hlt
and
repnz
or
and
lods
sbb
out
push
jnp
xor
int
dec
ret
movsb
lret
mov
xchg
push
mov
pop
sbb
enter
sbb
push
in
stos
ljmp
mov
sbb
test
lea
mov
add
add
scas
add
lds
icebp
xchg
inc
pushf
cmp
imul
test
lods
fsub
sub
cmpsl
rol
dec
sbb
and
shll
adc
push
cltd
pop
aas
lret
sub
sbb
add
aam
dec
sbb
loopne
loop
cmpsl
aaa
mov
push
push
fs
xchg
fldt
scas
leave
shrl
sbb
cwtl
dec
js
push
mov
and
outsl
jmp
aad
pusha
ret
stos
sbb
into
jns
jno
push
mov
inc
test
fwait
mov
push
and
cmp
inc
lea
jmp
imull
nop
mov
mov
cmpsl
imul
mov
inc
inc
jns
jo
iret
pusha
aas
cmp
adc
jne
dec
xchg
inc
das
dec
stos
and
pop
imul
outsl
mov
int3
pop
sbbl
pop
insb
pop
xchg
in
aas
ja
xchg
stc
lahf
into
jae
sbb
mov
push
fst
xor
or
lcall
mov
imul
pop
rcrb
es
or
push
and
shll
mov
mov
int
jmp
sti
pop
call
jns
fwait
dec
ffree
rol
aas
mov
mov
or
dec
pop
inc
jl
stos
jecxz
pushl
paddsb
push
sbb
push
add
sub
cmp
dec
cmpsl
ja
adcb
addl
adc
in
or
stc
mov
in
cmp
sub
push
sub
add
fisttpl
jb
mov
jge
movsl
adc
mov
add
mov
xchg
fimuls
cmp
sti
and
pop
dec
xchg
pop
inc
cmp
push
and
mov
jmp
ret
mov
or
mov
and
add
cltd
mov
shrb
xchg
mov
xor
popa
cmpsl
push
cmpsw
xchg
and
repz
jo
lret
sbb
and
jne
cs
cmp
pop
lret
add
or
dec
icebp
mov
popa
lds
push
lahf
cmp
add
or
pop
loop
aad
push
stc
jle
push
ret
jns
outsb
fldl
enter
fldl
mov
push
sbb
into
pop
rorl
pop
push
jae
mov
testb
fnstcw
dec
push
sahf
xchg
shll
stos
push
jmp
insb
mov
clc
xor
and
mov
adc
repnz
jno
les
jne
mov
rorb
xchg
fsubrl
sub
sub
xor
pop
xchg
mov
hlt
aad
call
xor
stc
cmpb
mov
lds
sub
cmpsb
js
push
jp
aaa
push
pop
inc
test
pushf
jl
arpl
sbb
jae
icebp
add
gs
ret
xchg
popa
mov
pop
cmpl
fisubrs
aad
xchg
imul
imul
mov
into
sbb
mov
and
lcall
out
mov
mov
testl
jnp
fsubrs
push
push
mov
cmp
cmp
mov
mov
std
mov
lahf
dec
fwait
mov
xor
fisubrs
xorl
ret
xchg
inc
mov
cmp
lods
dec
jae
adcb
ja
enter
push
orl
pop
jo
repz
dec
fildl
pop
dec
orb
aas
popl
lret
data16
cmp
sub
sub
insl
jbe
test
cmp
inc
iret
pop
cltd
test
sub
out
pop
rcll
filds
adc
and
hlt
mov
lock
xor
jp
lcall
hlt
fisubs
fcmovnbe
mov
mov
fidivrl
sbb
mov
out
scas
mov
pop
mov
cld
iret
sbb
mov
mov
adc
sarb
mov
fs
out
sbb
ret
sub
in
mov
xor
inc
sbbl
imul
fdivrl
loope
jno
pop
xchg
out
das
leave
xor
imul
or
push
add
mov
lahf
push
cmpsb
cmpsb
adc
sub
pushf
movsl
push
daa
push
sub
daa
shl
ja
cli
mov
mov
or
imul
outsb
pop
push
hlt
lahf
or
jmp
fnsetpm(287
test
jmp
ds
push
mov
cmp
insb
pushf
dec
xchg
mov
int
sub
ss
aas
cmc
adc
jecxz
mov
fidivrs
mov
loopne
sbb
lahf
cmpsb
aam
xor
jno
dec
lcall
pop
nop
int3
pusha
push
out
dec
sar
xor
pop
pushf
mov
dec
sbb
inc
int
mov
mov
jmp
cmp
inc
mov
stc
xchg
xchg
dec
jb
stc
xchg
cmp
lock
xor
loopne
arpl
push
jp
or
test
stos
test
fdivrp
jns,pn
cld
jae
sahf
sbb
pop
and
xchg
adc
mov
mov
stc
data16
imul
std
lret
mov
enter
dec
mov
je
xchg
adc
push
or
es
test
mulb
xchg
inc
mov
fwait
cmpsb
inc
es
add
mov
stos
and
mov
jne
roll
sub
sbb
dec
xor
fsts
dec
lods
jae
mov
or
jg
xor
ljmp
push
inc
adc
xchg
icebp
iret
xchg
adc
sub
xlat
cmp
mov
into
ret
loop
xlat
push
insl
ds
pop
mov
mov
loope
push
outsb
push
lods
aad
mov
mov
mov
stos
pop
inc
fwait
adc
sbb
mov
jo
xor
sahf
mov
clc
add
aas
inc
je
lock
add
leave
sub
mov
rcr
pop
jae
or
pop
lret
dec
pushf
mov
test
test
mov
out
lods
les
addl
addr16
cltd
pop
in
cmpsl
jmp
xor
mov
into
dec
mov
ret
push
in
xor
cld
add
and
cs
cmp
mov
cltd
jne
inc
ja
jne
jmp
adc
test
jg
sbb
sbb
daa
push
push
bound
rorl
add
arpl
push
stos
xor
mov
aam
mov
add
jb
mov
cmp
movsl
mov
or
test
push
mov
loop
lahf
cli
jno
jns
out
lods
clc
mov
pop
mov
test
in
xchg
in
xor
rcl
insl
xchg
sbb
push
push
mov
inc
shrb
arpl
mov
dec
outsl
out
fildll
xchg
dec
mov
xchg
je
rcrb
ja
subb
cld
aas
ss
mov
in
mov
sub
sbb
pop
cmpsb
and
xor
daa
and
pop
pop
fnstcw
xchg
sarl
in
mov
aam
mull
inc
out
pop
mov
lahf
jge,pn
push
push
loope
lock
scas
xor
aam
and
xor
push
sbb
lret
aaa
mov
jl
mov
jmp
into
or
nop
cmp
jmp
lret
jl
mov
lahf
add
inc
xor
lds
xor
mov
mov
bound
out
sbb
or
mov
push
inc
mov
sbb
jne
dec
or
inc
mov
jne
insl
fdivl
pop
pop
in
xchg
sbb
out
sahf
aam
rol
insb
sbbl
dec
outsl
jns
lds
push
shlb
rol
ffreep
dec
lahf
std
jnp
add
lahf
cmp
fistps
mov
fsubl
cld
dec
adc
mov
daa
pop
mov
cmpsb
jo
orb
fistpl
pop
push
fcoml
mov
loope
add
xor
push
sahf
shlb
dec
mov
shrl
sarl
sbb
xchg
daa
push
add
sahf
fucomp
cmpsb
jo
jnp
add
push
aad
pop
push
lcall
mov
sub
pop
cli
mov
fmulp
adc
or
mov
lahf
fs
dec
xchg
pop
xor
xchg
enter
push
lods
ljmp
pop
aaa
mov
inc
inc
cmp
pushf
das
add
jmp
mov
dec
cmp
cmp
xchg
cmp
jae
in
mov
mov
sbb
cli
xchg
mov
dec
inc
xor
dec
mov
pushf
push
sub
call
pushf
andb
popa
mov
leave
push
in
xchg
sub
lcall
cmp
mov
pop
mov
and
int
shll
repz
mov
stos
add
pop
cmp
lods
and
sahf
push
fwait
push
icebp
fistpl
adc
jge
orl
jp
and
sti
cwtl
jno
jmp
jne
sarb
mov
loope
inc
inc
fildll
cmovle
icebp
pushf
xor
inc
adcb
jl
std
and
imul
mov
jo
adc
addl
sub
icebp
ficompl
stos
cmpsl
cmc
sbb
gs
out
add
notb
fstl
mov
rorl
xchg
mov
inc
es
or
cmc
pop
cmpsl
sti
lret
adcb
repnz
fisttpll
cs
sub
mov
daa
mov
cmp
jno
int3
out
in
out
jge
clc
dec
rcrb
stos
sub
jae
pop
or
imul
add
mov
xor
adc
mov
je
cmpsb
loopne
xchg
lods
pop
jge
cld
mov
mov
les
aaa
push
aam
ss
add
loop
xchg
adc
dec
add
aas
mov
sbb
mov
aad
scas
inc
mov
jae
cli
int
jns
loopne
xor
push
xchg
lret
mov
fistpl
pusha
movsb
xchg
xchg
ljmp
imul
jg
and
or
and
in
repz
pop
test
jbe
clc
imul
push
inc
lods
loopne
popa
aam
pushf
mov
insl
push
cmp
jecxz
lea
fcomip
fcomip
js
aas
and
cmp
mov
cwtl
stos
cli
dec
jbe
cmpsb
cmp
push
jne
out
ljmp
inc
add
mov
insb
lcall
pop
pop
fisubs
ret
sahf
sahf
lea
mov
insl
mov
add
jo
repz
iret
xor
push
cmp
sub
jns
in
mov
pushl
inc
rclb
sbb
xor
lcall
es
enter
rsm
int3
inc
mov
stc
xchg
cltd
cmp
andb
lods
jmp
inc
jns
add
mov
mov
pop
repz
pop
cmp
cltd
ss
out
cmp
mov
lcall
xlat
mov
daa
xchg
push
fs
or
sti
xor
push
roll
or
ret
cmpl
pop
jns
enter
dec
sub
lods
xor
add
sbb
or
adc
decb
sbb
cmp
adc
adc
jle
out
lock
adc
xor
cmpb
mov
nop
xchg
sub
xchg
sbb
pop
rclb
mov
push
popf
popa
icebp
jns
mov
inc
mov
push
shl
lcallw
push
or
cmp
or
loope
sbb
loopne
jne
imul
dec
out
xchg
icebp
xorl
mov
sbb
cmp
fnstcw
cmovbe
fwait
sub
dec
mov
stos
adc
repz
rcl
loopne
mov
imul
mov
mov
inc
rcrb
fdivr
lods
adc
jns
loopne
js
fnstcw
push
scas
mov
movsl
adcl
ret
rcrl
or
inc
ds
std
daa
pop
jbe
insl
sbb
mov
and
jecxz
addl
or
shlb
test
mov
inc
addl
and
out
lahf
adc
xchg
mov
cmp
scas
ret
push
jne
pop
in
or
inc
ja
fidivs
jge
cmp
mov
xor
int3
shlb
lret
in
js
adc
outsb
fcmovnbe
dec
lret
jge
jbe
fsubr
pushf
jg
stos
popf
mov
and
repz
sbb
insl
sarl
add
lods
int
rclb
jge
out
jo
icebp
adc
cmp
shll
arpl
sub
lea
aas
or
pop
out
enter
jbe
mov
sbb
enter
lds
push
into
out
inc
ljmp
mov
jle
xchg
movsb
imul
inc
ds
mov
gs
xchg
insb
jle
aaa
out
sbb
jns
fidivs
les
das
xchg
add
mov
sbb
dec
lods
mov
pop
data16
mov
movsb
mov
xor
and
aas
push
sub
xor
popl
sbb
push
mov
sub
movsb
mov
imul
xor
jnp
jb
out
sub
int3
add
adc
mov
push
cmp
scas
iret
push
cmpsb
lea
stos
stos
loop
adc
out
mov
mov
sbb
daa
adc
shll
fwait
dec
and
mov
sbb
cmpb
jb
xor
mov
push
cwtl
je
fwait
mov
int3
mov
add
or
lea
cwtl
or
push
pop
xchg
gs
adc
inc
or
pop
mov
cmpsb
mov
jo
test
scas
icebp
pop
inc
insl
out
movsb
add
enter
mov
inc
add
push
into
mov
jne
pop
push
pop
mov
push
bound
fidivrs
mov
mov
js
pushf
mov
jmp
int3
cmp
xor
ficoml
push
jnp
add
fisubrs
mov
mov
adc
push
cmp
in
mov
ja,pt
mov
or
mov
xlat
repnz
fadds
cwtl
jno
mov
adc
xor
fsubl
dec
and
xchg
xor
mov
mov
in
or
xor
orb
sti
inc
addr16
movl
or
add
add
fisubs
data16
jno
push
or
mov
ds
pop
mov
cld
xchg
xchg
jb
xchg
adc
jmp
inc
jmp
popf
aad
mov
cwtl
orb
dec
scas
sbb
arpl
dec
mov
shlb
xchg
adc
outsb
div
out
in
loope
shl
insb
std
mov
test
in
scas
add
and
push
enter
or
dec
adc
popa
mov
add
jge
lods
add
rol
repnz
lea
lock
pushf
pop
mov
lock
mov
or
psrad
add
adc
adc
into
pop
stc
test
and
shl
jg
outsl
mov
mov
test
cmpsl
jecxz
fidivrl
in
push
jbe
xlat
insb
lahf
or
adc
jp
adc
mov
data16
jmp
lock
test
sbb
dec
jecxz
dec
sahf
cli
cmpsb
imul
inc
adc
or
stos
pushf
call
pusha
mov
or
adc
ret
mov
inc
xchg
mov
mov
movsl
inc
jle
das
aam
cld
pop
mov
aam
xchg
dec
or
cmc
lods
xchg
loop
jno
and
aas
dec
or
adc
loope
jno
jg
cld
pop
xor
scas
add
adc
or
inc
sub
int
mov
pusha
or
add
push
in
cli
testb
out
jb
aam
pop
xchg
jl
mov
test
repnz
xchg
and
iret
mov
out
dec
sub
add
test
fwait
hlt
stc
cmp
and
inc
mov
push
daa
pop
adc
cmc
jg
enter
mov
xchg
and
aas
dec
in
mov
mov
pause
cltd
push
cmp
fs
sbb
data16
std
insb
std
xchg
cli
dec
sub
popa
insb
cwtl
mov
sbb
out
shll
arpl
cmpl
mov
sbb
pusha
aas
jae
mov
cs
out
cmp
ljmp
inc
pusha
inc
cmpsb
cli
std
rorb
imul
push
ret
xor
sbb
cli
push
push
movsb
cmpl
jecxz
sti
addb
xchg
mov
nop
cltd
scas
cld
imul
fnstenv
js
inc
jb
jno
in
fildl
pop
mul
ret
clc
stos
aam
mov
and
inc
into
das
cmp
idivb
inc
cmovs
dec
pop
pop
loope
lahf
loop
dec
jmp
push
clc
pop
xchg
in
pop
outsl
dec
cld
add
mov
fistps
popl
loope
mov
mov
insb
sahf
lret
mov
xor
enter
fmull
mov
dec
mov
ljmp
cmp
stos
cld
jo
adc
xchg
pop
pop
imul
sbb
dec
repz
mov
and
sbb
push
sub
inc
xor
add
sub
or
aam
sub
std
adc
enter
inc
leave
loopne
aam
js
fs
adcl
sbbl
fldl
dec
in
scas
sahf
pop
push
ja
sub
cmpsb
mov
and
cmpl
push
jge
lds
pop
cwtl
gs
jo
pusha
sbb
int
push
mov
xor
jne
mov
shrb
int
or
stos
in
adc
dec
push
mov
mov
cwtl
data16
inc
add
ss
pop
lock
test
pushf
mov
xor
sub
aas
lahf
stc
xchg
jp
mov
cmp
adc
adc
pop
jns
ljmp
xlat
je
call
roll
jl
inc
pusha
jl
lea
outsl
or
cli
mov
sarl
add
sub
xor
rcrl
loopne
sahf
xor
test
out
inc
sbb
xchg
cmc
lds
cmc
mov
stos
mov
push
aas
jae
mov
ss
xor
lahf
mov
jae
mov
xchg
pop
std
xor
cs
mov
repnz
cmp
stos
pop
jnp
sar
mov
dec
call
nop
push
enter
shlb
shll
jno
cmp
add
sar
push
aam
jmp
xor
sub
filds
inc
push
lock
loope
je
test
int
cmp
ljmp
nop
sbb
in
fwait
je
dec
or
dec
leave
mov
out
or
adc
daa
add
repz
mov
movsl
dec
ret
mov
aas
imul
orl
jns
add
dec
cmpsb
into
xor
out
sub
push
mov
mov
jnp
shll
push
test
ret
std
lods
sub
mov
or
sbb
stos
lret
dec
aad
test
adc
repz
aad
pusha
push
adc
in
ljmp
and
test
sbb
stc
xchg
jbe
test
ret
iret
shl
aam
mov
mov
jae
popl
xor
and
push
daa
sub
cmp
faddp
add
in
bound
add
xchg
leave
push
fidivrl
mov
test
inc
bound
fwait
in
imul
out
sbbb
sbb
cmp
inc
sub
xor
add
jle
cmpb
bound
jne
jnp
gs
js
rcrb
mov
orb
movsb
add
rclb
mov
mov
cs
pop
adc
lods
rorl
pusha
mov
cmpsl
xchg
xchg
xchg
add
stc
incb
or
cmp
ja
fsts
xor
jp
mov
jnp
aam
lods
add
test
push
add
or
dec
or
xor
xchg
fnsave
jo
fisubrl
jl
dec
push
or
xchg
mov
xorb
aas
lahf
js
jg
in
loop
aad
dec
lea
push
shll
xorb
jno
xor
ja
test
test
jnp
push
dec
hlt
daa
dec
cmp
jae
out
mov
mov
jmp
popf
mov
dec
jge
repz
or
pop
adc
sarb
sarl
or
cmp
dec
rolb
and
mov
lock
and
pop
mov
push
icebp
xchg
pop
test
jle
jmp
movsb
in
pushf
fbstp
aas
test
or
adc
xchg
ret
js
xor
jg
lahf
cmpsb
fidivs
cmp
lods
in
pop
add
and
xor
and
icebp
add
xchg
popa
push
add
inc
mov
sbb
ret
cltd
andl
pop
sarb
xchg
clc
jmp
call
or
mov
fisubrs
pop
cs
lcall
insb
push
hlt
leave
pop
lcall
jne
rclb
aas
adc
adc
out
hlt
adc
aas
and
cmp
push
es
arpl
gs
dec
movsl
aam
sbb
xor
mov
mov
iret
pop
lcall
in
mov
jle
sbb
jp
loop
push
clc
mov
push
out
rclb
add
das
mov
outsb
mov
leave
cs
nop
or
pop
into
pop
pop
icebp
je
and
jno
andl
aad
ret
and
xchg
mov
imul
test
lret
dec
repz
mov
outsl
jne
cmp
test
inc
jmp
xchg
mov
scas
or
mov
or
mov
cmpsb
cli
shlb
cmc
testb
ds
aad
aad
sub
sbb
ja
cs
das
push
insb
mov
rorl
je
cmp
leave
sub
dec
mov
mov
aas
jae
lret
nop
jmp
mov
daa
pop
mov
int3
fiaddl
sub
mov
cmp
jne
jg
fidivrl
sub
jge
jnp
iret
divb
lods
outsb
sub
push
in
scas
mov
jo
fadds
outsb
xor
sbb
mov
iret
add
inc
mov
sub
fs
daa
sti
jmp
cli
mov
aaa
mov
mul
lods
cmc
stos
sbbl
ret
push
popf
dec
pushf
mov
test
mov
jo
mov
iret
pop
inc
push
mov
adc
xchg
mov
pop
adc
mov
lret
setl
xchg
fbld
cltd
push
lock
ret
leave
sub
jg
les
dec
push
inc
ljmp
ljmp
test
insl
xor
add
popa
sahf
aam
mov
not
pop
outsl
pushfw
dec
dec
in
mov
cld
sbb
rclb
sbb
adc
pusha
lret
iret
popf
das
ljmp
xor
or
test
adc
rorl
fmull
cld
push
inc
lret
test
sti
add
push
lcall
lret
and
jb
dec
dec
mov
stc
mov
inc
idivl
cmp
inc
test
lods
mov
push
ret
in
arpl
popf
jo
cmp
int3
mov
pop
dec
in
pop
outsl
outsl
dec
inc
and
es
rcll
mov
push
push
cmp
or
lcall
xor
jbe
lcall
push
mov
or
mov
mov
cmp
jb
stos
cld
cltd
ds
fsubrs
mov
xor
addr16
es
sub
xchg
add
fwait
test
in
dec
and
repnz
addr16
add
add
andb
push
stos
mov
lds
daa
leave
andl
bound
pop
xchg
inc
lock
sbb
cli
ret
pop
mov
mov
xchg
xorl
sbb
mov
data16
std
lds
inc
mov
sub
sarl
jo
pop
xchg
adc
divb
movsb
adc
lahf
sub
or
outsb
in
repz
dec
lret
test
call
fists
pushf
loopne
testl
repz
dec
push
fwait
mov
aas
add
int3
mov
mov
mov
faddp
push
xchg
dec
mov
mov
test
xor
roll
cli
lds
inc
cmp
sbb
adc
sti
inc
subl
cmp
pop
or
push
or
xchg
push
aaa
test
sub
mov
push
pop
cmpsl
and
sub
in
mov
adc
pop
dec
test
fbstp
in
jns
dec
jae
inc
xchg
movsb
adc
ret
je
mov
lods
pop
push
adc
push
xlat
inc
std
jb
pop
mov
sub
jg
mov
ljmp
out
mov
lret
in
pushf
inc
jbe
dec
movsl
jno
sbb
jle
jno
push
out
addr16
adc
mov
mul
adc
fcmovne
adc
adc
fisttpll
ret
inc
lahf
hlt
xor
imul
rorl
imul
or
adcl
pop
push
fcomps
rclb
cmp
and
test
sub
in
mov
pop
pop
js
scas
int3
push
movsb
cmpsb
mov
jp
imul
xor
test
mov
mov
outsl
shll
daa
iret
ret
jp
daa
sti
xchg
xor
adc
dec
add
imulb
mov
les
lcall
or
cmpsl
mov
add
cmp
aam
fsincos
frstor
popf
dec
call
jl
push
adc
out
stc
or
xlat
in
imul
aas
lds
lods
dec
dec
gs
xor
add
call
call
cmp
jo
xor
sahf
mov
addr16
in
fisubs
sarb
inc
xchg
xchg
jge
mov
lock
rcll
scas
dec
mov
test
je
shlb
lods
jnp
pop
lods
arpl
inc
sub
loopne
filds
ljmp
add
sbb
mov
test
mov
mov
pop
cltd
outsl
dec
dec
orl
adc
popa
add
aas
hlt
jmp
div
push
lds
jns
inc
mov
repnz
lcall
push
pop
push
inc
arpl
xor
sar
outsl
in
push
in
inc
ljmp
push
rorb
push
andb
aas
push
xlat
inc
nop
pop
jecxz
sahf
jmp
push
out
xor
mov
stos
loop
insb
mov
sbb
ljmp
mov
aaa
into
rorb
daa
xor
push
sub
cld
sbb
addb
mov
push
cmc
lods
inc
mov
jle
in
mov
sahf
ret
mov
fmuls
shrb
cmp
lcall
sub
bound
xorb
les
imul
push
push
cmpsl
arpl
cmp
ret
fmul
push
dec
daa
repnz
push
iret
mov
and
push
cmpsl
call
mov
push
lds
insl
in
int3
shrl
imul
and
testb
pushf
lret
pop
aaa
adc
movsb
push
pop
movsb
lea
inc
lret
nop
std
shl
xchg
idivb
popa
push
sbb
test
mov
je
mov
xchg
jp
inc
fistps
inc
ret
mov
xchg
mov
or
push
mov
insb
mov
mov
mov
sbb
cli
loope
scas
pop
cmpb
insl
repnz
pop
subl
in
mov
mov
loop
sarl
mov
mov
pop
into
inc
cmp
push
inc
rorl
pushf
xchg
fnstsw
cmp
and
in
xchg
es
outsb
push
cs
push
daa
pop
sti
adc
lods
dec
int3
jae
lds
mov
nop
sbb
inc
sbb
sbb
xchg
aas
movsl
dec
inc
insb
mov
jecxz
repnz
and
add
mov
lds
dec
pop
inc
xlat
int3
jle
cltd
mov
inc
sahf
test
test
xor
pop
xchg
sbb
jp
xchg
lahf
cmc
hlt
imul
jg
enter
jb
mov
rolb
in
xchg
sbb
push
mov
jno
cmp
xlat
out
es
add
pop
jmp
mov
mov
lock
nop
rorl
insb
insb
push
imul
out
pusha
push
mov
add
rorl
mov
or
add
cmp
int3
adc
scas
test
mov
pop
ret
inc
negb
clc
ss
fistps
and
outsb
xchg
or
loop
daa
loopne
aaa
stos
js
adc
aaa
pop
cli
push
add
addr16
dec
mov
pop
cmp
jne
mov
pop
mov
push
int3
clc
xor
sbb
fwait
js
sub
mov
daa
mov
fidivs
inc
inc
pop
pop
fs
mov
mov
mov
sbb
mov
add
hlt
cwtl
in
pop
mov
xchg
movsl
xor
adc
icebp
out
sub
pop
cmc
or
push
call
push
je
rcrb
and
cbtw
and
xchg
lods
xor
daa
mov
daa
cmp
test
loop
les
movsl
adc
cmp
jmp
int
push
and
stos
cmp
test
cmp
xchg
stc
shlb
repnz
add
roll
stos
inc
aam
push
shll
cld
in
cmpsb
inc
insl
std
enter
xchg
mov
sbb
add
faddl
mov
pusha
mov
cmpsl
xchg
cmpsl
repz
add
in
loop
mov
mov
pop
jns
push
sub
outsl
cmp
cmp
testl
jbe
popf
mov
cwtl
push
testb
inc
or
dec
aaa
xchg
fisubs
inc
aas
mov
lahf
lret
cmp
mov
or
and
in
aam
xor
test
mov
out
sub
mov
adc
das
aad
or
test
sahf
jle
lea
mov
or
shlb
mov
in
ss
adc
iret
pop
jmp
sahf
mov
sbb
cld
cmp
add
imul
pop
or
out
popf
subb
sbb
inc
repz
cmp
in
inc
add
pop
xorl
cmp
mov
and
sbb
jp
into
mov
push
jnp
mov
xor
adc
mov
or
dec
fcmove
hlt
push
inc
jmp
jnp
cmp
xrelease
or
aam
ds
xchg
scas
push
cs
sahf
cmp
mov
or
bound
hlt
out
xchg
gs
sub
jno
jae
inc
into
pop
shrl
jno
scas
mov
repnz
inc
or
arpl
mov
pop
ret
sub
cmpsl
test
sub
addl
aas
jl
sub
ja
shl
pop
sub
pop
pusha
jmp
push
cli
or
repz
mov
or
sbb
mov
fimuls
mov
mov
mov
xchg
iret
aad
xor
jmp
or
sbb
pushf
or
mov
lods
or
lock
lods
sti
jge
lods
insb
xlat
clc
idivb
daa
iret
in
xchg
mov
xchg
push
push
insl
mov
cli
or
addb
shr
testb
mov
scas
or
mov
sub
lahf
adc
fmuls
jns
jo
sbb
jmp
cli
jnp
jo
movsl
jecxz
sbb
inc
enter
xor
mov
mov
sub
jle
push
inc
outsb
jo
adc
shr
or
aam
cld
jmp
push
adc
jmp
dec
and
cli
mov
cli
inc
mov
in
es
js
mov
dec
push
pop
jg
push
es
lods
lods
cmp
push
lret
rclb
outsb
jmp
pop
test
ret
test
pushf
imul
lret
imul
int
xor
sbb
dec
xcrypt-ecb
cmpsl
lret
popa
andl
or
xorb
vandnps
jo
icebp
insb
jns
mov
addr16
adc
cs
sub
push
dec
xlat
inc
sub
in
sbb
add
xor
ja
mov
call
lods
add
push
into
add
push
ljmp
cld
inc
or
jmp
mov
add
shl
std
jns
mov
dec
insb
popa
xor
and
rolb
adc
adc
jge
imul
cld
ret
adc
std
pop
xor
les
ljmp
clc
out
stc
add
jmp
lods
xchg
dec
push
cmpsb
les
mov
scas
out
and
fldt
jle
xchg
hlt
cwtl
or
mov
cli
push
sbb
mov
mov
adc
test
cmp
mov
xor
mov
aaa
jb
dec
cmpl
xchg
jp
mov
in
data16
add
mov
sub
add
jns
sbb
filds
lods
add
sub
bound
sbb
xchg
jnp
clc
pop
cmp
aaa
rcll
or
jne
je
insb
call
xchg
es
push
out
ja
data16
and
imul
lods
cmp
sbb
lods
std
add
fwait
clc
lds
loop
xchg
dec
enter
gs
ficomps
cmpsl
sti
addb
imul
mov
push
cmpl
rorb
sbb
mov
roll
sbb
cli
stc
repz
jno
or
ret
and
push
pushf
inc
jns
or
insl
dec
jge
adcl
stos
inc
inc
mov
lods
bound
int
xor
shrl
mov
inc
dec
and
and
mov
int
add
arpl
pop
loope
in
repnz
cmp
fsubp
pop
dec
mov
repz
into
clc
pop
xchg
in
add
add
in
inc
scas
mov
push
push
sub
mov
mov
movsb
js
pop
inc
shl
xchg
fwait
jae
xbegin
int3
loopne
and
hlt
mov
popa
cmp
dec
xor
push
stc
mov
xchg
sub
dec
cld
testl
stos
sbb
fstps
xor
sub
test
inc
mov
in
addr16
adc
dec
lcall
cmpl
sbb
imul
cmpsb
out
arpl
xlat
shrb
stos
or
push
xchg
cmp
pop
ds
daa
mov
das
pop
movsb
cmp
and
adcl
mov
push
in
mov
daa
xchg
pushl
sbb
pop
arpl
and
arpl
and
das
ss
and
stos
xor
bound
dec
xchg
mov
mov
int
lds
xor
jae
lods
int
or
subb
sub
adc
push
lret
movsb
mov
gs
inc
scas
psrlw
dec
xchg
loopne
test
out
pop
bound
lret
pop
or
pop
push
sbb
mov
imul
ljmp
xlat
inc
fbld
xchg
lods
jl
hlt
sbbb
cs
stos
fcoms
fstps
shll
js
jbe
in
push
ror
pusha
jge
inc
sub
add
popa
scas
dec
jne
pop
jmp
and
mov
pop
fsubl
fisubs
movsb
sub
add
pop
int3
cwtl
in
jge
in
xor
loopne
mov
pop
fwait
test
fistpl
sbb
out
dec
mov
or
outsl
int3
mov
nop
sbb
pop
adc
cmp
adc
cmp
sti
xchg
adc
lds
lds
out
mov
mov
push
push
aaa
in
cmp
shll
cli
pop
xor
push
push
dec
mov
adc
bound
fs
mov
rcrb
mov
popf
pop
jbe
popa
sbb
xor
adc
jnp
and
xchg
bound
xlat
stos
xchg
into
sbb
xor
aaa
mov
dec
cmpsb
and
mov
cmp
jp
sub
fistps
divb
sub
cwtl
rcl
stos
dec
icebp
jmp
xchg
xor
adc
sub
adc
cltd
mov
repnz
fcomps
stos
xchg
test
jmp
sbb
out
movsb
test
mov
lret
test
repz
imul
das
js
dec
mov
lcall
into
imul
std
ret
adc
scas
faddp
cltd
aam
pushf
dec
lahf
inc
add
xlat
or
push
scas
xorb
dec
jae
jns
mov
lahf
insb
adc
gs
loop
dec
data16
shlb
push
sub
cmp
push
insl
xor
mov
outsb
int3
addr16
inc
xor
mov
adc
inc
test
push
mov
mov
sbb
push
stos
push
dec
mov
out
mov
stos
clc
stos
mov
pusha
sbb
movsb
and
xlat
pop
idivb
in
rolb
rcr
jne
js
fidivs
int
jb
push
pop
jmp
and
ja
sahf
fcmovne
adc
in
clc
loop
fistps
xchg
sub
hlt
dec
cwtl
loope
dec
outsb
fimuls
jno
xchg
outsb
inc
ja
xchg
xor
clc
stos
in
add
call
imul
repnz
mov
popa
or
cmp
or
cmp
xchg
or
xor
jp
les
int3
jl
mov
nop
lods
orb
push
sahf
xchg
adc
or
in
jp
pinsrw
out
fs
or
pop
repnz
ss
jl
mov
xchg
icebp
imul
add
mov
mov
jne
fisubs
cmp
ret
push
fwait
mov
inc
pop
loope
adc
push
xor
cmc
xchg
les
jne
cli
bound
add
ds
xor
adc
jle
pop
je
test
mov
inc
add
mov
pop
and
xchg
loope
xlat
jne
mov
call
filds
add
insb
nop
enter
sub
mov
fistpll
into
push
sti
dec
popa
dec
insb
dec
mov
pop
cmpsl
sbb
xchg
sbb
addr16
clc
scas
fnstsw
fstpt
out
pushf
mov
cmp
loope
push
fsub
adc
iret
jmp
ja
xor
gs
jae
push
jne
xchg
xor
js
and
sarb
mov
push
sub
loopne
lods
adc
or
lods
mov
push
lret
push
dec
inc
iret
flds
dec
sub
jg
dec
rorl
adc
test
mov
sub
out
xchg
push
out
jo
movb
or
xchg
jmp
or
inc
mov
or
pop
xchg
into
xchg
lods
push
pop
xchg
jno
mov
sub
ja
inc
mov
movsb
cmp
ljmp
lods
mul
cmp
xor
mov
lock
data16
test
loopne
pop
mov
icebp
xor
lret
xchg
loopne
aad
or
pop
lcall
out
adc
mov
das
xchg
and
faddl
push
sub
dec
mov
rorb
arpl
push
jae
mov
xchg
rclb
mov
sbb
add
rcr
lods
and
test
test
mov
mul
ja
iret
cmpsb
iret
push
xor
mov
jle
fldcw
int3
insb
jnp
mov
js
in
cmp
fs
pop
iret
xchg
out
cmpl
inc
dec
jno
xchg
xchg
test
sub
push
jmp
test
push
cmp
out
jbe
push
inc
aaa
push
mov
cwtl
lea
adc
cmpps
sub
ficoml
cmpsb
push
repnz
jmp
out
out
adcb
js
popf
sbb
loopne
push
cli
mov
in
xchg
fistpll
push
xor
mov
pop
mov
jl
leave
mov
or
out
aam
rcll
push
lcall
mov
aam
cmp
es
es
dec
sub
adc
and
dec
or
pop
xchg
adcl
cmp
into
lea
sub
shr
fdivs
push
imul
fwait
mov
sarb
mov
add
movsb
adc
dec
push
sub
call
fstl
cmc
and
sahf
jno
push
or
adc
ss
mov
aad
lods
add
movsb
sub
dec
cmp
stos
or
sbb
cmp
jmp
jns
ljmp
sbb
lea
sub
or
mov
clc
add
xor
pop
jmp
out
and
mov
pop
adc
das
pop
xor
scas
mov
push
mov
mov
push
jg
push
sarl
xchg
fs
pop
jnp
or
mov
push
adc
popa
aam
add
sbbl
xchg
sub
pop
cmp
jae
jae
out
jmp
fdivrs
jmp
outsl
bound
add
or
lods
or
inc
dec
mov
mov
scas
gs
cmp
roll
inc
fsubrl
sub
mov
or
int3
xor
loope
inc
dec
add
xor
stos
stos
sub
mov
sub
ss
cmp
mov
dec
adc
outsb
enter
fbstp
fsubs
mov
push
cld
xor
mov
sbb
add
adc
shrb
lcall
popf
or
jne
daa
jp
pop
mov
mov
lahf
sbb
int
jo
xchg
xchg
or
add
imul
negl
movhps
cmp
add
iret
mov
and
dec
fdivr
adc
outsl
mov
dec
sbb
jno
fnstsw
out
or
mov
cli
pop
xchg
xchg
fldl
nop
comiss
jb
std
pop
iret
adc
lret
mov
or
cli
aad
sahf
roll
ret
movsl
sub
mov
jp
rcr
cwtl
xchg
and
push
lods
jo
rep
fiaddl
jle
mov
insl
inc
imul
pop
imul
popf
cs
repnz
pop
jo
bswap
lods
cmp
aaa
push
xchg
pop
repz
mov
mov
or
and
pop
ja
push
pusha
and
mov
lods
call
andb
mov
out
cmpsb
lock
imul
shlb
pop
rcr
pop
sbb
xchg
dec
add
and
mov
inc
dec
scas
xor
add
mov
mov
movsl
jle
jbe
jae
gs
sarb
dec
dec
xchg
sbb
repz
and
loopne
jae
add
cwtl
cmpsb
into
jle
xor
lret
in
xchg
lea
xchg
or
out
push
xor
in
subl
pusha
and
dec
fcmovnbe
pop
pop
cs
iret
cs
scas
out
adc
and
call
loop
cld
inc
cli
mov
int
mov
xor
fnstsw
jb
xchg
dec
stc
jne
cltd
xchg
jl
dec
rcrb
sbb
push
dec
lods
sub
add
mov
jns
sub
mov
das
testb
in
xchg
adc
and
xchg
dec
mov
ret
into
test
adcb
das
mov
adc
iret
and
in
into
shr
leave
jno
push
imul
mov
xchg
mov
xchg
fs
pop
and
add
jae
xor
aam
dec
out
adc
or
push
jge
out
jo
adc
add
scas
addl
adc
cmp
lcall
mov
pop
add
aad
sbb
mov
lea
xlat
popf
mov
jge
xchg
js
mov
clc
xor
xor
cmp
xor
adcl
dec
rcrl
push
rolb
cmp
in
fists
outsl
sbb
fldt
hlt
mov
in
enter
test
aaa
push
shll
push
repnz
push
test
test
outsl
mov
mov
jbe
iret
enter
fs
jle
inc
addl
repz
clc
nop
cmp
jmp
ror
arpl
xchg
and
ds
push
insb
pop
push
cmp
ret
int
stos
mov
mov
cmp
xchg
mov
in
lds
inc
and
scas
mov
testl
mov
stos
pop
adc
mov
dec
add
adc
lds
sub
rol
sbbl
and
mov
mov
cmp
lret
int
inc
mov
sub
dec
or
ret
gs
es
mov
or
dec
mov
ret
xchg
and
dec
add
jno
imul
popa
stos
cmp
inc
sub
dec
xchg
pushf
repnz
cwtl
cmp
std
fwait
sbbb
jp
push
cmpb
jnp
nop
add
mov
xlat
cmp
push
xor
sbb
push
sti
dec
mov
inc
pop
ret
sub
xor
repz
pushl
faddp
not
adc
rcrl
fnstcw
jmp
xchg
fcom
repz
lods
push
rcll
mov
add
push
xor
adc
ljmp
mov
sub
int3
xchg
jne
dec
out
mov
scas
sub
test
pop
arpl
jb
rorb
xchg
pop
mov
and
and
idivb
cmp
push
jne
xor
push
mov
icebp
pop
sbb
xor
add
lcall
leave
cmp
addl
adc
and
fstpt
jo
into
adc
mov
jl
sbb
lea
jae
pop
rcl
cmp
scas
movsb
popf
jmp
jge
icebp
adc
xlat
test
add
sbb
stc
shll
sbbl
ret
pop
mov
out
jns
test
push
or
outsb
rorl
imul
dec
push
mov
sbb
stos
xor
hlt
inc
popa
punpckhdq
ljmp
hlt
sti
jae
pop
xchg
mov
sub
push
push
push
daa
push
orb
int3
ficompl
pop
mov
imulb
outsb
push
sbb
jmp
insb
xchg
push
clc
divl
sbb
fsts
or
cmp
xchg
mov
notl
outsb
adc
push
pop
div
push
pushf
adc
cwtl
xor
movsl
lea
clc
rolb
lods
mov
or
and
jge
lahf
mov
aas
mov
insl
cmpsl
xor
mov
out
dec
cmp
pop
lods
jl
mov
mov
mov
clc
pop
pop
leave
mov
rcr
mov
xchg
insl
jb
mov
mov
xcrypt-ctr
cmpsl
sbb
pop
call
push
inc
cmp
adc
xchg
xchg
cwtl
mov
dec
jp
sti
mov
xlat
pop
popf
mov
mov
xchg
out
and
loope
xor
sti
loopne
dec
mov
js
jp
push
popf
loop
enter
icebp
in
cmc
jg
pop
jmp
mov
sbb
cmp
sbb
or
xchg
or
jg
stos
xchg
mov
cltd
dec
outsb
push
imul
loop
jmp
jle
inc
imul
iret
add
ret
xor
cmp
sbb
mov
js
sbb
fsubl
add
inc
fcom
in
clc
cmp
jmp
or
dec
addl
cmc
dec
and
pop
cmc
or
shlb
hlt
jmp
insb
mov
loop
push
hlt
icebp
sbb
mov
xor
xchg
mov
je
sub
mov
mov
je
fwait
sub
pop
shl
cmp
cmp
mov
add
xor
mov
not
xchg
adc
rolb
popf
push
out
inc
lea
rep
dec
xor
nop
pop
cwtl
shl
mov
add
push
xchg
add
cmp
jl
inc
loop
scas
add
into
into
jmp
gs
xor
xor
jl
adc
push
scas
xchg
dec
ljmp
push
fcompl
pop
jnp
cmpsl
push
pop
es
fs
or
shrb
outsb
and
dec
insl
push
outsl
mov
push
dec
mov
loope
sbb
hlt
fisttpl
popa
loop
jp
inc
sub
jmp
xor
shll
mov
add
test
mov
test
mov
cwtl
mov
lret
pop
pop
mov
add
xor
sti
push
jle
in
xchg
jl
rolb
xor
addr16
mov
adc
shlb
sub
pusha
cmc
cmpsl
std
in
jb
mov
cmp
stos
mov
mov
jge
sbb
xor
insb
mov
cmpsl
and
jecxz
inc
in
jbe
ret
scas
push
jmp
xchg
repnz
lods
push
pop
push
push
or
xor
lds
or
aad
dec
push
pop
into
int3
dec
mov
lcall
cmp
push
popa
xorb
mov
inc
dec
jmp
jae
push
lcall
aam
push
jmp
ds
call
add
int3
adc
pop
mov
sbb
mov
aas
pop
outsl
aaa
jbe
lahf
push
push
ret
sbb
mov
cmp
mov
sbb
in
mov
clc
mov
fbstp
mov
sbb
nop
enter
or
push
dec
inc
test
mov
jbe
loop
iret
jg
mov
lods
popf
std
std
jge
in
mov
or
mov
xor
ss
mov
rcrl
clc
add
test
bound
pop
add
cmp
popa
sub
decb
and
movsl
sub
vpsraw
sbb
cltd
cmp
or
or
dec
mov
sahf
hlt
icebp
shr
mov
and
imul
sbb
mov
jns
xor
mov
lods
daa
jle
lds
xchg
movsb
push
loopne
add
cmp
in
sub
push
mov
mov
jo
fists
lret
lods
xchg
cmp
les
pusha
mov
and
fs
and
out
jnp
and
dec
aad
adc
insb
aam
out
add
jecxz
shlb
mov
mov
pop
call
cmp
in
xor
push
cmpsl
sbb
add
stc
roll
outsb
js
out
stos
fwait
mov
imul
sub
enter
add
out
bound
jmp
adc
pop
incl
imul
add
add
or
cmp
jle
in
cmpsb
mull
lods
pop
pop
cmpsb
mov
fsubs
jb
lea
mov
mov
push
lret
push
cmp
inc
xor
mov
lcall
mov
pop
jg
mov
or
mov
scas
push
sub
sbb
in
movsb
out
sub
or
loope
out
sub
sbb
xchg
jns
lock
sbb
enter
mov
sti
push
fwait
inc
idiv
and
mov
adc
sub
or
int
push
andl
push
ja
les
adc
dec
mov
sbbl
pop
push
cld
mov
sub
pop
mov
cld
xor
jle
lret
int
push
jl
pop
add
mov
out
into
push
adc
lcall
or
test
lahf
cmp
adc
push
jno
insb
mov
imull
xchg
or
pop
scas
je
fcoml
pop
pop
pop
xor
sub
stc
and
loope
xchg
enter
repz
iret
lahf
mov
in
push
push
fsubrp
cs
frstor
insl
outsl
xchg
imul
add
adc
out
jbe
mov
jns
mov
addr16
shlb
jnp
loopne
loope
xor
pop
outsb
lods
mov
out
add
inc
fnsave
inc
sub
pushf
pop
stos
lcall
sub
sub
je
inc
data16
pop
pop
lret
fistpl
scas
scas
xchg
repz
ficoms
jb
out
stos
fiaddl
icebp
add
test
mov
xchg
jmp
and
test
lock
jmp
popa
stos
add
iret
pop
pop
int3
decl
sub
pop
faddl
in
sub
fsubrl
push
pop
fsubp
sahf
jnp
push
sbb
sub
es
sbb
mov
push
rol
or
dec
mov
fistpll
push
jp
repnz
push
adc
lahf
cltd
pusha
movsl
js
movb
inc
scas
dec
test
hlt
add
sti
fsubs
sub
mov
cltd
push
imul
and
fsqrt
test
xchg
adc
adc
cmpsb
push
mov
adc
push
or
mov
xchg
cmp
jge
xchg
mov
repnz
rcrb
movsb
jns
pop
js
imul
add
fdivr
hlt
sub
call
bound
and
sub
sbb
ljmp
xchg
imul
dec
cmpsb
mov
bound
in
lds
rcl
mov
ret
loopne
outsl
pop
pop
mov
jae
and
mov
adc
add
dec
mov
cmpl
dec
cmp
add
inc
pop
sub
adc
mov
jnp
imul
test
ret
lahf
das
cmp
lcall
lods
ret
ljmp
push
mov
and
cltd
pushf
popaw
decl
mov
stos
mov
sbb
or
push
xchg
jmp
mov
movsb
xorl
mov
mov
sbb
out
in
pop
sbb
ss
push
inc
mov
popa
divl
test
int
test
add
jno
push
cmpsl
ss
divl
ret
mov
out
add
fstps
mov
call
pop
mov
fidivl
push
mov
fidivrs
enter
sub
repz
sbb
or
cmp
pop
and
mov
mov
jbe
aad
daa
and
fisubl
ret
gs
rcrl
mov
and
or
gs
jbe
mov
inc
add
add
sti
adcl
ja
inc
xlat
xchg
lret
push
imul
ds
outsb
outsb
and
xor
repnz
push
lea
lea
addr16
jle
mov
psrld
aam
xchg
fisubrs
jg
sub
push
mov
inc
test
bound
lret
bound
cmp
cmpsb
jno
sbb
int3
icebp
cmp
sbb
loop
xor
xor
into
sbb
lcall
add
movd
sub
adc
gs
jb
pop
adc
sbb
dec
sub
lock
movsl
pop
mov
or
and
aaa
jno
addr16
mov
xor
popf
fimuls
xor
adc
mov
and
imul
int3
inc
push
aad
dec
sbb
out
into
stos
jecxz
outsl
stc
sbb
movsb
mov
outsl
and
push
or
call
lret
dec
sub
push
clc
mov
pop
push
inc
inc
xchg
xchg
data16
mov
cld
lods
push
jecxz
leave
xor
sbb
cmpsl
pop
add
inc
cmp
jl
out
lock
xor
repnz
cmc
leave
fsubl
mov
loope
addr16
lods
daa
mov
xchg
mov
and
gs
jns
xchg
jle
icebp
daa
jecxz
and
nop
push
lods
sub
xchg
push
and
xchg
push
xchg
push
and
fldcw
mov
jl
pushf
mov
cwtl
jg
mov
push
push
sbb
les
xor
cmp
pushf
jl
jo
cmp
daa
int
inc
jbe
cltd
out
fs
xorl
stc
nop
fidivl
adc
push
sbb
or
xor
sahf
adc
sbb
mov
ret
das
int3
adc
sti
xchg
adc
gs
cld
or
pop
add
jmp
jle
sbb
adc
sbb
bound
rcr
fsubl
mov
sub
enter
nop
xchg
pop
inc
mov
cmpsl
xchg
cmp
insl
inc
sbbl
scas
mov
mov
push
mov
cmp
xchg
xchg
int
and
lock
lret
lds
sub
inc
sub
add
fs
adc
fisttpl
repz
pop
xorl
push
xor
fcoml
xor
ret
jne
sbb
addr16
sbb
xor
push
int
int3
xchg
mov
and
push
fdivrs
sub
pop
xchg
push
std
aas
ljmp
push
mov
pop
pop
and
cli
in
aas
out
test
arpl
cs
xchg
dec
sub
outsl
lock
fisttps
addr16
aad
rorb
ss
bound
repz
mov
inc
mov
xor
mov
sbb
jne
sbb
mov
fscale
pop
hlt
or
cmp
sub
or
std
cmc
cmc
mov
xchg
dec
movsb
fidivl
lods
lods
sbb
or
mov
andl
popa
jl
sbb
and
xchg
jnp
and
inc
mov
mov
sub
lea
pop
adc
or
cmpsb
sti
dec
rclb
insl
das
add
dec
xchg
sub
or
shl
add
dec
dec
repz
popa
movsl
mov
fildl
loope
sbb
das
sub
add
test
test
pop
cmp
sbb
add
push
inc
mov
xchg
jmp
sbb
ljmp
out
sbb
nop
adc
cmpsb
scas
or
dec
pop
and
test
push
add
stos
mov
push
daa
mov
and
jnp
test
addr16
or
jbe
fcoml
fdivs
movsb
mov
mov
cmpsl
jl
push
in
es
pop
aas
rolb
mov
aad
mov
push
pushf
mov
cli
dec
mov
mov
push
xor
or
dec
fistpl
ret
lea
sub
imul
cmp
pop
fsubrl
and
push
jne
fadd
jl
xor
jae
or
shlb
jbe
mov
inc
loop
scas
cmp
popa
adc
sahf
mov
cltd
loopne
push
repz
ljmp
out
pop
bound
cli
loop
imul
mov
test
scas
and
jmp
sarb
cmp
sub
or
cmp
push
xor
lahf
jp
lcall
inc
outsl
je
or
inc
test
add
xlat
popf
xchg
je
sub
mov
push
out
xor
in
inc
cmpsb
les
jnp
or
dec
ret
push
pop
mov
mov
fimuls
xor
test
out
or
mov
sbb
jns
xchg
jmp
sbb
mov
cmpsb
aam
mov
mov
adc
cli
mov
nopl
mov
dec
mov
cld
testb
icebp
aas
sbb
fsub
pcmpgtd
inc
sub
xchg
xor
mov
pushl
xchg
xchg
ret
movsl
int
lahf
pusha
movsb
push
cld
xchg
xor
sub
xchg
test
and
add
or
mov
mov
push
cmpsl
inc
jno
mov
push
sbb
lea
adc
clc
pop
call
in
jge
mov
lock
rcrb
adc
mov
or
fs
mov
sbb
push
hlt
ret
mov
dec
mov
faddl
imul
ret
mov
cmp
icebp
jae
daa
add
push
cli
aas
cld
pop
imul
jg
fstpl
lahf
add
inc
fisubrs
cmp
mov
sub
lahf
push
add
or
int3
imul
add
pop
push
adc
push
lea
xor
movsb
out
lds
mov
xor
dec
test
jns
dec
and
sahf
stos
sar
cmc
sub
lods
push
sub
mov
insb
pop
insb
pop
mov
stos
ds
push
mov
or
cmp
cmpsb
fists
add
leave
neg
jge
inc
into
mov
push
pop
bound
and
test
sub
and
cld
adc
loopne
and
push
cwtl
lods
fldcw
ret
pop
inc
aaa
mov
pop
shrl
mov
movntq
out
or
dec
sub
daa
mov
push
psubsw
mov
jge
bound
js
adc
inc
pop
or
cmc
fmuls
adc
into
cli
dec
sub
imul
mov
dec
push
push
add
rolb
xchg
add
jbe
sub
jecxz
xor
mov
pop
out
mov
adc
pop
sar
sbb
ret
popf
ds
int
bound
fidivrs
xchg
pop
mov
add
lock
push
sbb
xchg
xor
dec
shl
jl
add
pop
jo
jae
loopne
mov
and
xchg
ss
add
mov
ss
mov
xor
xchg
enter
mov
pop
jbe
cmp
insl
stc
add
and
sarl
imul
pop
addr16
mov
testl
cmp
fldenv
cmpsl
mov
ss
inc
imul
movsl
jmp
add
clc
repz
out
dec
pop
das
iret
sub
jne
lods
shrb
nop
inc
emms
inc
mov
push
outsb
cmp
pop
adc
mov
and
mov
mov
sbb
mov
mov
ss
lret
in
fs
lds
jecxz
sbb
arpl
mov
sub
int3
rcll
mov
es
adc
add
rorb
mov
adc
add
jnp
arpl
mov
dec
mov
push
dec
jl
inc
ret
cs
clc
jg
test
shlb
xor
mov
jae
sbbb
jmp
ss
and
je
cmp
mov
lcall
and
add
inc
fs
in
dec
cmp
xchg
cmpsl
mov
in
mov
mov
bound
or
xor
jnp
cwtl
aam
in
pop
or
sbb
rclb
stc
rcl
push
lea
inc
pop
in
aas
jo
gs
and
add
xor
mov
sub
andl
repz
push
mov
xchg
ret
pop
int3
add
loop
into
xor
xlat
jno
stc
insl
idivb
inc
iret
scas
sbbb
dec
les
mov
in
fsub
test
push
icebp
inc
cmp
mov
xor
loope
add
emms
test
xchg
popf
or
sarl
mov
mov
cmp
push
out
inc
aam
mov
or
push
lea
repz
movsb
sub
cwtl
mov
dec
pop
bnd
xchg
cmp
or
movsl
and
imul
les
cmp
cmc
xchg
push
dec
mov
push
add
addr16
adc
jge
leave
sbb
lock
lods
les
ud2
jg
adc
xchg
mov
and
push
mov
mov
pushf
in
push
ja
ret
addr16
shl
aad
int3
sbb
notb
mov
sarl
icebp
fimuls
shrl
js
inc
dec
sahf
jns
out
push
popa
lock
cmpsb
sbb
cld
cltd
mov
cmp
es
adc
imul
imul
pop
dec
mov
iret
xchg
jne
test
xor
pop
pop
test
icebp
daa
jne
outsl
pushl
mov
lahf
push
and
fisubl
stos
hlt
push
jp
hlt
mov
inc
jp
cmpsl
and
mov
push
dec
das
pop
scas
mov
adc
test
adc
push
pop
lret
ret
xchg
sub
inc
mov
aas
ja
dec
xor
pop
lods
sbb
dec
outsb
adc
inc
sahf
sub
mulb
fcmove
add
call
mov
pop
xchg
push
sti
movsbl
aaa
pop
arpl
ror
mov
push
aas
pop
lahf
xchg
adc
sti
push
xor
imul
or
inc
inc
shlb
and
mov
lea
call
in
std
or
xor
fbld
pop
and
adc
popf
cld
sub
rorb
cld
xor
xlat
lea
mov
pop
or
xor
jbe
std
dec
cmpsb
sub
inc
test
xchg
notl
outsl
or
cmp
mov
dec
arpl
leave
into
jp
jbe
in
mov
testl
ret
and
fisubs
jne
and
mov
cmp
in
fcompl
call
mov
pushf
pusha
mov
lds
mov
sti
mov
sahf
cmpsl
frstor
jecxz
sbb
stos
mov
pushf
add
add
adc
mov
mov
fstps
je
add
mov
mov
mov
push
sti
ljmp
and
call
pushfw
test
aas
or
pop
adc
add
es
pop
sub
mov
jno
mov
adc
sarl
sbb
je
jns
xor
pop
jnp
xor
jl
movl
ja
mov
pop
sbb
xor
or
mov
nop
sbb
xchg
imul
iret
mov
mov
cwtl
sbb
mov
inc
sbb
jmp
add
mov
mov
add
out
andb
dec
mov
sbb
out
xchg
jns
out
push
je
into
jno
stc
shrl
movsb
xorl
add
jnp
jge
hlt
js
sbb
or
adcl
shll
hlt
or
adc
stos
adc
ss
add
fsubrs
fs
loop
js
leave
sub
imul
lea
cmpsb
cmp
add
fldt
lret
icebp
inc
or
pop
mov
js
push
push
fnsave
in
adc
mov
out
jnp
sub
push
mov
push
inc
or
imul
pusha
xchg
sbb
push
test
inc
pminub
movsb
cmp
loop
xlat
mov
pop
aas
push
ud0
aam
mov
sbb
add
adc
push
fisubrl
push
lds
and
mov
pop
rcrb
and
xchg
xor
lock
and
call
push
dec
mov
pop
or
fldt
aaa
jecxz
xchg
mov
pop
out
pop
fsubrs
or
int3
adc
sub
fisubrl
or
rclb
inc
cltd
insb
inc
push
mov
sbb
mov
jge
js
mov
or
jnp
jg
pop
mov
scas
mov
cmp
addr16
idivl
inc
xor
imul
pop
fst
pop
push
or
sub
aaa
inc
iret
inc
jmp
int
scas
push
cwtl
fwait
ret
jno
jmp
aas
mov
jno
adc
jb
enter
and
test
or
mov
lahf
xor
add
xchg
mov
and
cld
inc
cmpsb
inc
xchg
jbe
ret
loopne
js
push
fs
pop
and
xlat
xchg
jo
adc
in
mov
push
push
movsl
fisttpl
add
jnp
loop
mov
jp
cmp
xor
xor
push
pop
and
xor
push
mov
xchg
push
push
arpl
sub
stc
sbb
mov
sbb
jae
imul
inc
push
adc
outsl
mov
mov
mov
jae
cmp
or
xchg
fs
adc
cmp
mov
aad
pop
inc
add
test
sarb
mov
xchg
cwtl
scas
xor
sub
jae
in
mov
or
or
pop
mov
test
hlt
popa
scas
push
sbb
icebp
gs
xchg
xchg
pop
dec
je
cmp
xchg
pop
sub
inc
pop
mov
sbb
lahf
out
mov
hlt
jle
dec
ljmp
pop
dec
adc
clc
dec
sbb
rcrb
in
sbb
ret
push
pop
std
out
mov
jge
mov
sti
mov
adc
or
jae
or
ret
or
adc
imul
dec
jno
mov
into
les
repz
imul
and
les
lods
mov
hlt
push
outsb
daa
jnp
sbb
loopne
fidivrl
or
in
add
ljmp
jbe
repz
aad
pop
jo
fcmovbe
xchg
movsb
cmpsl
pushf
out
shlb
loope
jb
sbb
scas
pop
pop
mov
fs
out
lret
push
data16
ret
stos
sbb
ljmp
outsb
push
jo
and
jo
arpl
test
jge
inc
lds
int
icebp
pop
mov
rep
xlat
or
push
scas
xchg
jg
sbb
mov
lock
imul
sbb
xchg
and
xchg
cmp
lret
xchg
les
incl
enter
sub
push
jne
outsb
iret
cmp
inc
dec
mov
add
imul
into
mov
data16
xor
jecxz
xchg
and
fistpll
and
and
fisttpl
mov
bound
subb
repnz
cmpsl
pusha
dec
xlat
out
popa
cwtl
in
cmpsl
xor
dec
or
dec
dec
fwait
test
fisttpll
out
push
lcall
or
mov
fsubs
jb
popa
pop
pop
in
pop
pop
jnp
popf
push
stc
mov
pusha
or
push
jbe
and
dec
push
lcall
jmp
into
push
xor
test
jne
je
xchg
mov
lret
xchg
mov
mov
rcll
and
inc
jo
add
sub
fcmovbe
and
push
daa
gs
mov
push
outsb
inc
out
and
add
daa
xor
cmp
pop
ds
jae
lds
mov
and
lret
aaa
adcl
xchg
pop
push
test
fadds
dec
xchg
shrb
pop
or
mov
jno
js
mov
loopne
test
imul
jge
dec
stc
sub
std
nop
and
jl
xchg
dec
std
jbe
jl
andb
jne
shr
test
stc
ffree
xor
jns
in
data16
aam
cs
pop
andl
nop
push
xchg
xchg
or
movsl
adc
in
xchg
push
notb
xchg
cmp
sub
jne
adc
push
xor
sub
push
movsl
sbb
fisubs
fstpt
shlb
cmpsl
adc
in
mov
test
ret
mov
fstpl
popa
test
jp
mov
jb
andb
dec
out
fidivrs
in
out
jecxz
pop
mov
sbb
arpl
dec
push
notl
xchg
sub
ror
push
or
cli
push
hlt
insb
stos
sahf
addb
movsb
sub
push
movsl
jns
phaddw
rcrl
jmp
push
test
cmc
jnp
clc
ret
push
psubd
inc
pop
cmpsl
fwait
dec
jnp
jge
and
add
jle
jmp
lret
hlt
pop
mov
sbb
iret
cmpsb
dec
sti
cmp
dec
adc
dec
sti
xor
nopl
incl
jle
ret
int
aad
out
mov
leave
stc
xchg
fstpl
add
add
pop
sub
mov
mov
in
cmp
cld
iret
xor
pushf
inc
xchg
push
inc
aas
sbb
out
out
mov
mov
in
add
dec
adc
scas
shlb
lahf
test
nop
pop
inc
mov
push
push
movsb
pop
mov
test
rcrl
fcoms
push
mov
es
adc
mov
xor
push
out
adc
fwait
or
subl
ss
sub
jbe
int3
test
sbb
daa
es
enter
lods
mov
fwait
test
jp
cmp
mov
fwait
pusha
push
in
outsb
leave
loopne
jns
jne
insl
and
ss
mov
add
jmp
pop
add
stc
sarb
sbb
stos
cmc
xchg
call
mov
or
xchg
lahf
push
add
fdivrs
xchg
aas
lahf
adc
adc
xor
repz
lcall
iret
push
sub
mov
pop
dec
call
mov
cmp
and
mov
xor
xor
cmpsb
mov
add
ja
icebp
cmp
mov
imull
btc
or
jno
mov
test
mov
popf
arpl
in
rep
call
dec
and
mov
lahf
cltd
push
sub
mov
das
addl
push
jmp
jns
jl
dec
pop
add
jmp
loop
test
leave
fistpl
pop
push
add
in
out
gs
dec
adc
jmp
into
stc
mov
fsub
call
in
xor
cmp
adc
mov
pop
add
inc
cltd
cli
sub
jno
jb
data16
mov
fprem
jp
js
inc
sub
test
out
movsb
jns
pushf
sbb
iret
inc
sbb
and
cmpsl
aaa
adc
nop
mov
push
das
stc
lea
xchg
jo
fiaddl
stos
add
les
addb
xchg
sub
mov
adc
out
xchg
jno
xchg
fwait
rcrl
fidivs
andb
insl
sbb
inc
push
xchg
andl
stos
pushl
mov
aad
xor
out
push
inc
mov
mov
scas
and
jl
mov
dec
adc
sbb
rol
ljmp
addr16
push
inc
push
mov
ss
fs
imull
mov
in
xor
sub
jnp
push
ja
or
xchg
mov
mov
lea
fdivrl
or
pop
inc
or
lret
inc
ljmp
adc
cwtl
data16
jl
outsb
dec
lock
xor
inc
sub
xor
in
divl
cmc
imull
in
push
cmp
mov
std
clc
jae
stc
add
or
fisubrs
mov
pusha
add
xlat
enter
movsl
push
and
push
adc
push
and
into
jmp
sbb
push
cli
bnd
lahf
mov
in
aam
or
jbe
push
sbb
into
roll
sbb
inc
shll
mov
leave
aas
mull
lret
das
adc
dec
cli
ret
mov
fs
or
add
pop
push
rorl
xor
xchg
dec
mov
subb
pop
jmp
mov
pop
dec
fidivs
mov
adc
into
ret
sub
arpl
push
dec
hlt
xor
push
and
leave
stos
clc
dec
ljmp
fdivs
sub
sub
mov
lret
rcrb
or
mov
xchg
mov
jp
pop
adcb
dec
or
sbbl
adcl
add
xchg
and
sbb
out
lcall
mov
addl
push
jnp
adc
pop
inc
inc
and
ss
jnp
mov
dec
inc
leave
arpl
insb
inc
aad
mov
adc
push
cmp
or
xlat
jg
in
flds
sub
test
sbb
decl
or
sbb
inc
xor
lds
dec
pop
sub
mov
adcl
xchg
andl
ret
mov
sbb
clc
das
aad
stos
mov
and
test
push
inc
pop
push
mov
push
inc
sbb
mov
lahf
xor
into
jo
mov
mov
bnd
mov
mov
sub
xchg
push
gs
adc
call
bound
hlt
sbb
addr16
adc
mov
out
xlat
scas
jge
loop
psubsb
lods
push
and
jmp
addr16
outsb
mov
xor
pop
lea
fidivs
mov
jge
xor
repnz
stos
mov
sti
hlt
add
fistps
mov
mov
mov
aaa
ret
outsl
sub
mov
jp
das
dec
mov
inc
adc
pop
cmpsl
hlt
lea
int
movsl
mov
pop
pop
inc
mov
cld
stos
stos
or
shll
dec
mov
outsb
fdivr
sub
std
and
test
dec
mov
ja
shlb
pop
cmpsb
sahf
in
dec
pop
repnz
sub
loop
rcll
xchg
jmp
cwtl
jp
sub
cmc
push
nop
dec
scas
sahf
arpl
fsubrl
mov
push
adc
sbb
jnp
push
arpl
sub
mov
adc
pop
xor
pop
push
push
fiadds
or
addr16
jo
cmpsl
xchg
in
bound
fs
sub
fsubp
mov
xchg
inc
mov
jmp
lret
int
lds
ljmp
dec
cmp
sbb
sub
fisubl
es
xor
test
cmp
nop
lahf
out
cmp
lcall
mov
cmp
xor
mov
icebp
daa
push
in
xchg
xor
iret
push
test
pop
jp
mov
ja
hlt
mov
cltd
push
insl
sub
test
sub
jl
insb
loop
fiadds
ficompl
pushf
das
js
mov
cmovb
pop
loop
fs
xor
mov
xlat
inc
lock
imul
out
cld
mov
push
mov
rorl
or
ret
mov
shlb
sbb
cmp
es
pop
sahf
mov
mov
or
lcall
xor
push
cs
sbb
ret
lods
hlt
cwtl
lcall
stc
sbb
sbb
xchg
cmp
cmp
rorl
mov
dec
xlat
iret
ljmp
fwait
cmc
fldl
pop
mov
mov
mov
rcrl
xor
clc
in
and
lods
scas
ret
jnp
cmp
outsb
and
aad
mov
cwtl
mov
mov
adc
inc
pop
sub
mov
cmp
mov
inc
lcall
push
mov
jae
in
ds
out
xor
add
mov
pop
enter
add
or
mov
repnz
mov
inc
test
repz
pop
push
add
jno
dec
loopne
ficoms
cwtl
sub
movsb
cli
bound
jns
xchg
mov
shr
cmp
inc
test
fldt
es
jl
lods
and
mov
mov
or
test
orl
xchg
aad
iret
adc
pop
mov
movsl
jle
mov
scas
lret
mov
aam
sub
test
inc
or
sub
stos
les
ror
mov
xchg
nop
cmp
inc
in
pop
sub
and
mov
andb
dec
fimull
outsl
fisubs
jns
rep
cld
cmp
or
push
dec
pop
mov
sub
dec
and
nopl
cmp
stc
filds
mov
sbb
inc
div
mov
scas
adc
adc
sahf
dec
sbb
inc
add
dec
inc
repz
mov
add
int
sub
mov
inc
mov
cmpsb
imull
cli
lret
push
or
outsb
lret
cmpsb
out
insl
pop
mov
jne
ret
inc
xchg
cld
xor
into
cltd
loop
lcall
pop
sbb
pop
jns
into
es
xor
jg
repz
int
fstpl
mov
cld
jp
das
pushf
movsl
test
sarb
incb
sbb
sbbl
lea
add
pop
loopne
std
push
xchg
lahf
test
pushf
aaa
dec
add
ja
jp
ja
shlb
popa
pusha
rorb
pusha
push
xlat
test
nop
test
inc
xchg
mov
daa
adc
ret
and
mov
cmc
mov
scas
xlat
test
icebp
data16
mov
push
pop
mov
sti
adc
cmp
jb
aas
cmpb
pop
insl
mov
xchg
xchg
cmp
insb
mov
and
add
imul
pop
pop
add
mov
xchg
pop
cmc
outsb
lret
enter
adc
leave
aam
int
or
xorl
mov
cmp
mov
fidivrl
std
adc
subb
mov
sbb
mov
sbb
or
xlat
out
cmc
leave
inc
imul
stos
imul
cltd
jmp
push
xor
insb
fnstsw
xor
inc
cli
adc
mov
stos
jne
jmp
jl
lea
nop
repnz
cmp
add
loop
int
testb
adc
jno
int
bound
cmp
rcrl
lahf
jne
xchg
cmc
ret
je
insb
adc
and
movsl
stos
in
loopne
fbstp
loope
push
out
cmp
mov
mov
arpl
mov
movsl
ffreep
cltd
out
cmp
mov
pop
fimull
or
or
push
and
xor
repz
cmp
shl
lods
movb
mov
cmp
jp
out
cmp
sbb
push
fs
jp
fisubl
jno
xchg
test
mov
roll
adc
add
insb
dec
and
inc
cmp
test
sub
pop
loopne
push
mov
and
dec
lret
inc
add
inc
fdivrs
ret
lahf
jnp
popa
flds
dec
ret
push
xchg
add
xchg
or
mov
jo
push
mov
outsl
push
inc
ficoms
push
sub
es
outsl
pusha
aaa
addr16
fists
scas
jmp
addr16
dec
testl
dec
inc
push
mov
inc
shl
add
ret
mov
fisubs
mov
mov
ret
leave
outsb
cmp
leave
mov
cmp
cmp
cmp
and
or
insl
cld
add
xor
jb
adc
inc
test
insl
jns
cmove
jp
jmp
rcll
stos
js
pop
pop
push
testb
push
push
aaa
lcall
mov
add
lahf
inc
loopne
lods
jns
mov
cld
clc
mov
adc
test
ds
cwtl
cltd
nop
add
out
jbe
outsl
cltd
mov
and
nop
inc
movsb
push
or
hlt
jne
push
in
int3
xchg
and
adc
sti
popf
cwtl
pop
int3
adc
loope
sbb
hlt
and
cmp
dec
sub
jb
jo
ljmp
cmp
cli
xor
daa
ds
dec
rcrb
outsb
fisubrl
cltd
mov
dec
sbb
les
jp
xchg
pusha
imul
adc
jle
push
cmp
aaa
cs
xchg
in
sub
push
sbb
push
cli
pop
jae
clc
adc
test
add
xor
xchg
jmp
notb
inc
mov
cmc
les
das
cld
sbb
in
in
stos
mov
addr16
inc
add
jbe
daa
xor
dec
test
push
cmovle
lea
push
or
popa
jno
movsb
subb
dec
jbe
sar
inc
add
cmpsb
cmp
and
push
mov
les
out
ljmp
add
fiadds
cld
pop
cli
das
sub
cmp
cs
cmp
jp
aas
dec
xor
jp
jo
lea
mov
jno
sbb
pop
js
ljmp
int
adc
push
sarb
push
sahf
lock
or
adc
insl
and
jns
ret
mov
or
pop
in
mov
cmp
xlat
sar
stos
add
ljmp
sub
ds
mov
jle
dec
pop
sub
pop
stc
lcall
sbb
jp
fs
outsb
cmpsb
ficomps
xor
shrb
push
and
xchg
stos
push
movsl
es
pop
stc
dec
fisubs
sti
adc
pop
dec
cmp
jp
rorl
pop
push
sub
repz
and
jne
popf
sahf
movsb
and
or
rorb
xlat
push
ret
sub
push
mov
loope
jns
mov
fisttps
push
mov
dec
idivl
js
std
pop
icebp
xchg
inc
outsb
div
xchg
getsec
pusha
movsb
lahf
faddl
iret
jmp
insb
cmp
testb
mov
xchg
push
std
dec
cs
lahf
or
sarb
add
or
in
add
repnz
mov
test
adc
cmp
lahf
dec
int
cmpsl
popa
mov
ret
cs
sbb
test
ja
xchg
stc
cltd
sub
cli
popa
arpl
sub
popf
lcall
xchg
or
jp
insl
das
ds
cmpsb
in
imul
xor
or
shl
xor
mov
push
adc
fsubrl
sub
sub
ror
sahf
cltd
bound
jle
pop
scas
pop
xchg
inc
push
xchg
cmpl
jl
test
sub
fstps
xchg
jo
dec
nop
iret
push
or
cmp
jo
inc
fwait
dec
push
ds
js
xchg
fiadds
xchg
dec
subl
es
jae
lds
pusha
cmc
popf
pop
in
out
cs
mov
inc
sti
xor
addr16
test
enter
clc
jbe
imul
xor
or
add
daa
fistl
test
cs
or
add
data16
aam
sub
pop
lea
je
cmp
jo
test
xor
je
outsb
idivl
stc
lret
je
sub
push
add
ret
fnstcw
xchg
push
std
test
stc
pop
rorl
loope
cld
inc
xchg
push
adc
mov
xor
clc
and
mov
push
pop
orb
cmc
cmp
jl
xor
fs
mov
test
shlb
inc
pop
paddusb
adc
add
dec
shlb
addr16
add
in
stos
pop
rorl
in
je
cmp
xor
js
or
inc
out
jge
sub
call
adc
mov
mov
sbb
lret
ss
cltd
aad
push
clc
lcall
xchg
inc
andl
cld
ficoml
and
shrb
repnz
push
adcb
in
test
sbb
jno
stos
sub
std
ss
or
pushl
mov
mov
add
xchg
add
test
gs
adc
mov
out
lret
mov
leave
sbb
ror
mov
push
out
mov
mov
in
or
out
jne
fwait
cli
xchg
or
fdivrl
jg
scas
sub
loop
insb
lods
movsl
test
mov
push
inc
lea
lahf
in
in
sub
aam
mov
xor
jbe
data16
into
mov
addb
insl
sbb
sbb
mov
sahf
and
mov
aaa
push
push
ds
int
xchg
popl
movsb
push
imul
fidivs
or
sbb
mov
out
aad
sub
xchg
loope
repnz
pop
cwtl
mov
pop
sbb
sub
arpl
sub
mov
push
add
push
cmp
mov
jmp
lds
dec
jae,pt
lret
dec
fildl
pop
ret
iret
inc
push
mov
ja
xchg
sub
xchg
shrb
mov
xchg
bound
pop
aad
out
and
or
push
inc
inc
pop
call
lret
inc
adc
inc
sbb
mov
lods
sub
pusha
sahf
xchg
mov
loope
cmp
add
add
ljmp
andl
pushf
inc
ds
pop
daa
jae
int
ret
jne
jno
jae
jp
dec
push
fmull
addr16
iret
int3
or
push
pop
inc
xor
sarl
movsb
or
push
xchg
andl
fnstenv
scas
daa
mov
test
mov
push
repnz
hlt
sub
fistl
leave
dec
mov
lahf
sti
jnp
mov
mov
push
cmp
insb
jno
jl
fistpl
jle
movsb
sub
rol
or
sbb
repnz
js
or
out
xor
enter
jns
push
or
mov
gs
pop
aam
cmp
in
mov
push
pop
or
push
loopne
cs
loope
mov
xchg
sub
push
add
push
fcompl
mov
jge
inc
into
movsb
mov
jge
mov
in
add
sbb
mov
jo
or
cmc
pop
clc
pop
adc
mov
lcall
cwtl
les
jbe
mov
mov
adc
or
jns
or
sbbb
lock
stos
aad
cmc
fcmove
pop
out
js
pop
inc
cmp
inc
jp
xchg
inc
data16
mov
repz
add
rcrb
fs
xchg
mov
out
stos
repz
mov
sbb
addb
push
mov
pop
adc
push
movsb
into
jg
dec
mov
fisubrl
jmp
pop
xor
rcrl
movsl
out
leave
xchg
push
push
sub
incb
sahf
mov
push
rcl
std
into
das
leave
inc
maxps
cli
pusha
pop
mov
mov
sbb
pop
jge
ficoms
imul
and
or
arpl
lods
outsb
mov
adc
add
bound
adc
lods
das
jne
sub
mov
push
jne
in
test
sbb
movl
add
test
add
test
shrl
repnz
jns
sub
lret
dec
imul
arpl
mov
mov
xor
test
cmpsb
cltd
int
sub
adc
ffreep
xchg
les
or
aaa
jmp
jmp
nopl
lea
lods
lock
js
mov
jecxz
negl
mov
xorb
subl
sbb
dec
xchg
nop
xor
aad
jge
or
mov
jl
xchg
xor
pusha
mov
mov
out
insl
lret
sbb
in
leave
or
inc
dec
mov
lock
sub
xlat
sub
scas
cmp
lret
mov
or
movsb
mov
adc
stos
orb
jecxz
dec
lock
mov
xchg
jae
or
stos
inc
mov
dec
gs
lock
ficomps
in
push
dec
ret
popa
repnz
loopne
imul
pushf
les
xchg
out
add
pop
sub
sub
mov
adc
mov
gs
pop
adc
ja
xchg
mov
jp
nop
fs
dec
mov
call
aaa
add
mov
jp
imul
shlb
stc
cmp
pusha
inc
cmpsb
pop
mov
push
test
dec
inc
pop
pushf
mov
out
ret
inc
rcr
or
dec
xor
testb
test
leave
mov
and
or
add
int3
fsub
jne
in
xor
pop
rclb
mov
sbb
js
fsts
repnz
cmpsl
repz
ret
into
pop
push
lock
jg
sub
xchg
roll
rcrl
mov
mov
sub
jmp
inc
fs
cmc
mov
push
repz
test
stos
xor
push
out
jecxz
push
movsl
imul
data16
fs
mov
ret
jge
mov
jecxz
pop
xor
div
sub
sbb
mov
mov
dec
ja
dec
aad
sahf
int3
out
cli
jl
cli
outsl
sub
mov
mov
in
popf
popf
clc
xchg
fnstsw
fisttps
xor
jg
repz
pop
adc
cltd
sti
mov
dec
loope
mov
and
add
cmp
rcll
push
jp
or
aam
pusha
mov
mov
cmp
push
aam
aam
sub
sbb
sahf
cmp
je
das
xor
lahf
xchg
inc
jg
rorb
or
mov
into
nop
das
inc
ret
dec
bound
in
out
mov
or
mov
in
sbb
adc
fld1
in
push
cmpsl
lahf
jecxz
pop
cmp
pop
mov
cmpsb
pmuludq
hlt
push
insl
loopne
aaa
sub
sbb
inc
xchg
sbb
pop
adc
sbb
insl
fsts
xrelease
inc
or
cmp
xor
jae
imul
jle
jmp
xchg
jge
dec
sbb
mov
xor
mov
pop
aad
mov
push
adc
push
rolb
mov
lea
sub
xchg
push
xor
xchg
xor
inc
mov
mov
sub
pusha
or
lock
inc
add
add
fnstsw
pop
pop
jl
adc
pushf
stos
jnp
mov
imul
cld
push
mov
push
inc
pop
int
xor
pop
lahf
out
movsl
or
push
pusha
insb
pop
add
or
xchg
sbb
arpl
mov
stc
sub
call
xchg
mov
je
push
jle
fst
dec
jb
jns
lahf
in
hlt
jecxz
fs
pop
sub
orb
pop
testl
cmp
leave
push
sub
xchg
inc
arpl
dec
nop
mov
adc
mov
add
ljmp
es
test
lock
push
pop
imul
inc
ljmp
push
sub
jnp
inc
jb
imul
test
subl
adc
push
fisubs
js
push
iret
xchg
xor
dec
out
dec
insl
js
mov
popf
inc
ja
lds
mov
sbb
mov
flds
dec
mov
lods
mov
sarb
fnstsw
scas
mov
lret
add
or
add
and
fsub
adc
sbb
mov
adc
call
mov
insl
jecxz
sub
pushf
or
inc
in
add
idivl
loopne
add
push
fdivrl
adc
xchg
adc
adc
jae
lret
or
push
mov
mov
fmuls
jge
leave
test
in
xchg
test
movzbl
adcl
cmpsl
fidivrl
xchg
mov
sbb
stos
test
in
mulb
popa
jo
push
rorl
push
cmpsl
cmp
jno
sti
mov
imul
and
inc
dec
in
xchg
loop
jo
cltd
push
adc
inc
int
xchg
or
lret
jae
jp
fidivrs
cld
orb
mov
pushf
adc
out
and
mov
dec
lret
xor
xchg
xchg
cmpsb
sub
out
push
repz
fisttps
sbb
push
clc
imul
cwtl
adc
loope
jge
rclb
mov
xlat
add
cmove
mov
repz
jo
loopne
cmp
push
lret
mov
ds
cmp
inc
inc
scas
push
sahf
ja
pusha
push
movl
ret
jg
push
mov
in
push
std
mov
icebp
add
adc
mov
cwtl
jne
mov
pop
cwtl
repz
and
fimull
add
mov
std
or
cmp
mov
pop
out
mov
push
int
neg
ffree
pop
jb
cmp
inc
and
ret
sti
mov
dec
stos
sarl
xchg
aam
ds
aas
mov
lods
sub
mov
cmp
jns
cli
popa
je
stos
jno
add
cmpsl
jb
ret
addl
std
aaa
push
mov
jne
pop
dec
jmp
pop
arpl
push
mov
adc
or
xor
push
das
and
jmp
jp
dec
cld
ret
fiadds
pusha
jmp
cmp
lea
and
lret
push
cld
movl
popa
or
outsl
push
jmp
mov
mov
push
ljmp
les
sbb
push
lea
fs
mov
push
pushf
mov
fbstp
jge
jnp
out
test
jae
pop
test
iret
outsb
mov
pop
out
ja
cld
shlb
rcll
xchg
xchg
mov
aaa
lods
mov
insl
lahf
stc
rcl
std
popf
lcall
lock
std
pusha
inc
xchg
add
push
mov
jo
push
sbb
or
iret
or
decl
mov
sub
xor
clc
or
dec
xor
and
xor
xor
aas
aas
cmc
push
call
call
add
cmp
mov
les
and
test
inc
sub
lea
scas
pop
inc
mov
ret
xor
dec
dec
out
in
fld
nop
aaa
nop
lret
add
data16
push
push
add
sti
push
outsl
aam
inc
leave
mov
inc
sub
cvtpi2ps
mov
pop
test
sub
bound
test
xchg
or
dec
and
fwait
sub
jne
sbb
in
dec
test
imull
cld
sub
cmc
and
rcrl
mov
xchg
lret
add
cmp
sub
div
cli
out
and
xchg
fistpll
cmc
pop
pop
jb
mov
data16
cs
cmp
adc
and
mov
or
outsl
fisubrs
dec
insl
xchg
stos
insb
pushl
sub
or
sub
hlt
dec
xchg
lcall
ffree
pop
adc
lods
lahf
push
mov
pop
movsl
sub
dec
test
inc
or
int
shlb
push
cmp
cmpl
push
xor
and
aad
sarb
and
xor
int3
insl
add
xchg
les
roll
out
add
adcl
mov
dec
testb
popf
inc
push
data16
call
insb
fs
push
fiaddl
mov
add
lea
fldt
mov
jns
dec
insb
fsubr
fs
mov
mov
sub
jecxz
sbb
push
adc
fcoml
mov
sbb
sti
and
fucomi
push
xlat
ljmp
xor
adc
pop
push
cmp
xchg
cmpxchg
ja
pop
pop
in
inc
xor
jo
mov
adc
pop
sti
sbb
fmuls
jae
imul
addr16
pushf
mov
mov
fcmovbe
sbb
setns
ds
inc
pop
sbb
pop
push
movsb
fcoms
js
hlt
subl
mov
in
hlt
aam
js
cs
out
ror
sbb
cld
cmp
dec
jbe
jb
cli
cmpsl
test
addr16
push
lds
loop
addl
mov
scas
cmp
in
iret
push
lahf
dec
in
movl
jmp
icebp
test
mov
outsb
add
mov
inc
insl
xrelease
imul
aam
pop
and
mulb
nop
sar
xchg
scas
jge
jns
lods
xor
mov
sub
or
mov
popf
xchg
adc
pop
cltd
test
ret
sbbl
shlb
cmp
dec
test
addb
fadds
xlat
xchg
mov
and
sub
sub
sarb
inc
ret
sub
xchg
inc
fdivs
rclb
into
gs
out
out
je
sahf
mov
shll
add
pop
cld
push
inc
add
int
mov
lds
pop
push
loope
dec
push
mov
divl
fisubrl
inc
pop
cmp
popa
insb
test
cwtl
cmpsb
fnsave
push
addb
xchg
hlt
stos
jl
inc
or
jle
lods
adcl
and
pop
push
mov
jp
out
loop
mov
xchg
jae
mov
jl
mov
jb
pop
or
dec
inc
adc
test
in
stos
cmpsl
add
or
or
dec
inc
sub
dec
adcb
sahf
ljmp
xchg
out
rorl
sbb
pop
cld
mov
out
stos
mov
push
repnz
sub
int3
add
xor
fldl
mov
mov
push
inc
cmp
cmp
jmp
gs
aam
in
lods
scas
lods
lock
push
bound
imul
cmp
stos
mov
cmp
mov
sti
fdivrs
lret
jae
sbb
aam
or
invd
lcall
enter
push
jae
dec
outsl
gs
scas
mov
pop
fisubrs
rcll
fistpll
mov
ret
add
ljmp
loopne
dec
les
pop
sti
mov
lock
insb
out
lock
pop
adc
sub
sbb
cmc
jae
sbb
xchg
sti
and
ds
scas
pusha
ret
lods
fisttpl
pushf
jbe
mov
mov
cs
jl
es
jo
lahf
cmpl
dec
imulb
jb
outsl
std
xor
cmpsl
mov
sbb
and
lret
sbb
jbe
dec
lret
sub
adc
insl
shlb
in
enter
je
in
pusha
jecxz
call
adc
loopne
rcr
push
mov
cmpsb
daa
sahf
sub
test
cmp
sbb
mov
lods
and
aaa
inc
sahf
jno
sub
pop
or
jns
pop
jge
xrelease
sub
mov
cmp
pushf
andb
mov
pop
sbb
and
vmread
mov
es
push
std
orl
out
mov
insl
sub
dec
add
inc
mov
jmp
xor
mov
cli
sbb
lahf
dec
dec
dec
push
sub
int3
fnsave
mov
fidivrl
popa
jg
mov
sub
in
dec
push
clc
lods
shll
xor
mov
jg
test
mov
mov
dec
xchg
jp
addr16
hlt
push
inc
lret
lea
adc
imul
sub
test
dec
in
lcall
mov
sub
dec
popa
testl
cmpsl
test
add
jb
jno
popl
aas
icebp
loopne
fnstsw
mov
pushf
clc
pushf
mov
lea
cld
mov
push
mov
push
outsb
dec
mov
int
and
or
sti
rcrl
or
pop
in
pop
adc
testl
cmp
jl
enter
cmp
xchg
push
inc
xchg
insb
dec
mov
sbb
popf
jge
lcall
lahf
dec
arpl
movsl
stc
inc
push
hlt
in
pop
aad
mov
jne
jnp
loopne
ret
cmp
outsl
and
int
fwait
std
lcall
push
xor
mov
mov
loope
popf
out
inc
decl
in
push
mov
popa
lret
aas
stos
sub
rclb
ds
cmc
imul
mov
icebp
sub
xor
shlb
mov
sub
jp
sub
sahf
outsl
inc
pop
les
and
pop
repz
cwtl
mov
sahf
dec
rolb
fsubrl
xor
mov
adc
push
pushfw
lock
cmp
inc
pop
es
lea
cmp
inc
jne
cs
jno
hlt
push
add
test
cmpsl
mov
scas
addr16
sbb
into
int3
bound
add
fisubrs
jns
inc
out
jnp
pushf
jp
fildl
nop
adc
in
inc
mov
insl
xchg
cmpsb
sbb
popf
mov
mov
mov
sarb
xchg
lret
pop
stos
mov
and
or
mov
hlt
bound
xor
pop
repz
mov
das
xor
jmp
jge
in
mov
dec
repnz
add
cmpsb
jge
sub
mov
mov
mov
push
sub
je
mull
loope
jb
outsb
js
imul
sbb
xchg
aam
out
lcall
and
jae
fistpll
adc
jnp
sbb
inc
test
shll
inc
push
inc
ds
sub
sub
xchg
fmull
int
mov
lock
mov
mov
mov
subb
or
pop
adc
sub
ret
push
loop
push
pop
push
sub
mov
xor
xchg
rcll
push
fistps
dec
mov
nop
frstor
xchg
pusha
push
shl
cmp
idivb
pop
test
xor
or
cs
sub
pushf
aaa
jecxz
stos
mov
lcall
into
push
out
jl
jle
inc
rorb
push
fs
ds
mov
mov
lcall
arpl
das
cmp
cmc
or
dec
pushf
xor
cmc
nop
push
jge
loop
sub
or
xchg
add
sbbl
xchg
inc
lds
add
popf
push
sbb
or
sti
stc
mov
jecxz
inc
or
movsl
repnz
ds
outsl
ficoml
cli
leave
iret
jge
rcr
in
shr
cmp
push
lcall
xor
shl
xchg
outsb
jl
cmp
outsl
mov
test
in
xchg
dec
jo
adc
sub
ss
mov
divl
shlb
and
jmp
popa
out
xchg
mov
enter
std
xchg
xchg
les
mov
mov
add
gs
lret
push
ss
sub
xor
dec
dec
mov
sub
int
adc
notb
clc
mov
cltd
mov
sar
fiadds
push
sub
or
adc
cmpsl
push
outsb
sbb
pop
mov
push
add
std
dec
test
mov
mov
and
mov
sub
jo
mov
out
sbb
dec
mov
out
test
add
xchg
pop
test
lods
int3
mov
sbb
xchg
loop
ds
cwtl
jne
data16
fdivs
mov
add
jl
xchg
push
jl
aas
adc
xchg
mov
test
clc
cmc
cmp
pop
mov
jbe
leave
out
in
pop
mov
arpl
mov
push
adc
fwait
dec
cmp
imul
jmp
fucom
daa
test
rcrb
jae
dec
xchg
lods
popf
sbb
stos
xor
push
rclb
fwait
mov
dec
test
sub
sub
popf
push
inc
pusha
cmc
imul
xlat
push
or
xchg
jb
stos
hlt
dec
jns
aaa
add
pop
jecxz
testl
pop
mov
aas
in
xchg
push
outsl
xchg
and
dec
cs
mov
rorb
fwait
dec
nop
push
adc
sbb
or
out
out
push
das
ja
adc
out
cs
pop
fadds
out
call
incl
mov
divl
rcrl
dec
pop
pop
sbb
in
cmpsl
mov
aas
mov
push
xchg
inc
or
dec
mov
cld
pop
inc
out
jnp
ljmp
cmp
lods
loopne
ret
andb
or
cltd
rcrl
cmp
or
aad
xor
sub
fsubrs
xchg
jg
lock
repnz
mov
fdivs
mov
in
dec
imul
incl
leave
or
sub
or
dec
mov
fwait
test
adc
test
mov
push
add
sub
jmp
inc
or
shlb
sahf
dec
pop
aam
inc
aaa
clc
pop
mov
aad
lds
push
push
aad
xor
pop
lea
cmpsb
fsubs
lods
xlat
repnz
xchg
shll
lahf
enter
jle
jae
lods
push
aad
add
pop
loopne
enter
mov
pop
idivl
int
sahf
dec
out
xor
jecxz
lds
test
js
jle
and
mov
or
es
popf
sbb
mov
js
adc
das
xor
cmp
leave
stc
jbe
inc
mov
push
aad
lcall
mov
inc
jg
fcmovnb
add
or
fldcw
test
call
lods
push
sub
cmc
xchg
xlat
lret
cmp
mov
xchg
push
cmp
shlb
iret
pop
in
xor
jmp
sub
popa
push
mov
cmpsb
add
xchg
jb
push
mov
enter
int3
sub
pusha
clc
movsl
dec
ss
std
aas
mov
ds
or
dec
dec
and
jp
jbe
sbb
mov
pop
rcr
dec
lret
jecxz
adc
xchg
scas
inc
cltd
fidivrl
ret
aas
add
or
out
sub
lret
dec
mov
mov
pop
lcall
adc
mov
in
sarl
in
and
mov
test
mov
cmp
sub
pop
xlat
insb
and
mov
repnz
out
mov
repz
insb
fdivrl
fisttpll
sahf
rclb
addl
xlat
inc
and
in
mov
add
int
mov
cs
or
inc
leave
mov
sbb
loope
mov
loopne
aaa
sub
loope
pop
or
jo
and
mov
mov
fstps
xchg
push
pop
stos
push
cmp
adc
xor
push
adc
push
and
stos
clc
aad
int3
ljmp
test
stc
push
xchg
enter
outsb
movsl
mov
inc
cld
cmp
push
lds
popa
orl
adcl
sbb
roll
mov
in
cmpsl
bound
and
sbbl
es
adc
movsb
in
cmp
cs
mov
sbb
cmp
es
addb
std
call
cwtl
movsb
mov
out
jp
enter
push
push
mov
aas
jno
xorl
shr
sub
dec
xchg
imul
out
or
mov
fcmove
cmp
dec
push
xchg
out
stc
jle
mov
lods
jg
outsl
xchg
and
int
cmpsb
mov
jmp
lods
stos
adc
shlb
dec
popa
push
sbb
cs
inc
mov
adc
cwtl
repnz
sub
jmp
adc
iret
neg
jle
gs
push
sbb
jbe
repnz
enter
mov
sub
imulb
pop
and
std
xor
xchg
jnp
pop
inc
mov
aam
push
xchg
xchg
or
add
jmp
fstps
push
adc
or
shll
mov
ret
dec
sbb
sub
addr16
stos
hlt
divb
sar
aad
lcall
mov
lds
pop
pop
jle
popf
lds
cmp
or
lret
rcl
jno
xorps
or
in
push
mov
ds
loope
shr
cmp
lods
xor
xor
jl
xor
jecxz
or
stos
ds
clc
test
out
ret
pop
add
cmp
xchg
shl
push
subl
rcrl
push
pusha
dec
dec
scas
pop
push
xor
xor
roll
inc
lods
pushf
mov
mov
mov
jnp
fcompp
gs
xchg
js
jg
scas
inc
inc
lret
popf
cmp
adc
cmpsl
mov
mov
push
sti
add
sub
push
enter
mov
ja
cmp
sub
fstl
xchg
push
inc
cmovle
push
pop
add
repnz
pop
mov
xchg
or
ja
nop
sti
insl
mov
dec
les
sub
movsl
lds
mov
in
mov
movsb
stos
cltd
nop
cmp
movsb
int3
loop
adc
mov
fsubrp
cs
ret
inc
dec
jg
addb
sub
loop
lcall
xchg
push
out
sahf
fsubr
bound
and
jl
js
loopne
sbb
sub
fsubs
push
divl
mov
or
inc
adc
or
repnz
cmp
xchg
js
jae
jnp
push
mov
lahf
fwait
aad
nop
repnz
cli
sub
xchg
aaa
sti
adc
mov
shr
gs
inc
pop
jno
sub
shrb
repnz
cs
push
pop
mov
inc
daa
mov
lds
repnz
aam
cmc
mov
arpl
loop
mov
sar
ret
mov
int
sbb
ret
jno
pop
rclb
insl
ret
insl
cs
xchg
adc
mov
test
dec
xor
stos
push
int3
popa
imull
cmpsl
repnz
sub
sub
or
aas
dec
mov
adc
push
adc
cmp
dec
jg
mov
cld
cs
cli
dec
lahf
xchg
pop
mov
dec
lret
sub
in
dec
cmc
push
fbstp
call
scas
cltd
and
pop
loop
xchg
cmp
xor
fisubrs
push
add
aad
ja
fldcw
jmp
movsl
outsb
pop
add
in
cmc
stos
lock
loop
mov
sbb
inc
adc
lods
aam
jle
lods
jg
dec
dec
fcoms
push
mov
outsb
jbe
imul
jb
sbb
push
cmp
gs
pusha
jbe
cwtl
jp
fcoml
xchg
in
mov
sbb
js
test
and
idivl
aad
pop
loopne
mov
nop
cwtl
cmc
pop
outsl
jne
adc
je
sbb
popf
insl
adc
mov
cltd
dec
lahf
iret
outsl
and
adcl
and
dec
dec
xlat
aaa
mov
xchg
sbb
xorl
sub
and
imul
sti
pop
pop
pusha
jecxz
movsl
add
dec
adc
arpl
jmp
jmp
dec
push
adc
rorl
test
mul
xchg
jae
insl
pop
xchg
insl
mov
shlb
pop
iret
sahf
les
cmp
cmp
gs
call
mov
xchg
lret
xor
enter
outsb
ljmp
mov
lret
scas
pop
sbb
sbb
movsb
test
loop
add
adc
add
jno
bound
sti
mov
add
mov
fucomp
jb
push
sub
repnz
adcl
int3
xor
xchg
das
test
cmpsb
mov
rorb
and
sbbb
push
bound
rcrb
or
mov
shll
adc
add
test
int3
int
mov
lods
inc
sub
das
je
movsl
dec
lods
add
dec
pop
sbb
mov
out
pop
out
inc
jl
jp
xor
fdivrl
sub
ljmp
push
mulb
clc
and
mov
sbb
test
cmp
adc
lock
xor
scas
mov
rcrl
mov
nop
clc
cltd
ds
and
inc
repz
sub
mov
test
icebp
and
shl
pop
pop
mov
jmp
sbb
jl
or
adc
repnz
push
mov
jecxz
push
mov
jp
cwtl
jle
and
out
push
mov
add
arpl
ss
mov
pushf
lea
adc
loopne
adc
pop
int3
je
xor
and
stc
xchg
add
lds
test
subb
cmp
add
dec
loope
push
outsl
pusha
mov
mov
mov
xchg
jle
push
pop
xchg
in
dec
pop
incb
jne
jmp
loopne
or
loopne,pt
dec
lea
jnp
and
cs
mov
adc
pop
ret
sbb
mov
pop
insb
rolb
test
pusha
shrd
cmp
cli
mov
rorb
adc
repz
mov
ret
inc
lahf
adc
inc
loope
mov
mov
inc
daa
stos
jmp
push
cmpsl
mov
cltd
sbb
rorl
loop
add
fs
jb
imul
xor
add
mov
pusha
imul
out
mov
mov
lret
jecxz
cmpsl
fsub
push
jne
sub
adc
sbb
jae
or
xor
daa
test
mov
test
pop
inc
mov
dec
outsl
dec
arpl
dec
sub
pop
aam
roll
add
daa
daa
rcrl
jp
mov
test
ljmp
pop
test
push
dec
fs
mov
cltd
pop
and
les
add
push
sbb
rcrl
xor
popa
js
and
out
jecxz
jbe
mov
pop
mov
adc
arpl
mov
dec
mov
loop
pop
mov
ret
cmp
xor
aaa
inc
inc
pop
repz
lret
packssdw
ljmp
test
hlt
mov
cmp
lock
sbb
mov
xchg
mov
test
cld
mov
call
sbb
push
bound
sub
addr16
into
das
mov
sbb
jle
jno
xchg
insb
pop
push
xchg
mov
jno
fstpt
or
lock
stos
adc
or
aad
in
dec
push
lahf
xor
roll
xchg
lret
test
pop
pop
cmovs
fs
insl
cmc
cmp
push
clc
push
push
pop
cmp
and
lret
lret
add
rcrl
mov
mov
bound
mov
lds
pop
inc
push
pop
addb
lods
xor
dec
out
cmpsl
inc
xlat
jp
sub
pop
testb
movsl
adc
cmp
fisubrl
mov
repz
fnstenv
mov
sub
add
out
arpl
les
mov
cli
push
fsubrs
mov
ret
push
lcall
test
aas
dec
sub
push
xchg
dec
jge
adc
mov
cmp
insb
cmp
shlb
and
adc
outsl
dec
ret
fwait
pop
mov
dec
mov
jno
jne
jno
xchg
daa
mov
popa
insb
loop
popf
les
out
cmc
stos
push
mov
fstpl
out
pop
in
pusha
dec
adc
push
sub
add
scas
les
xchg
push
cmp
into
cwtl
mov
jae
aaa
fmull
xor
jae
in
rolb
pop
jl
lret
cmpsb
xor
outsb
xchg
popa
dec
add
cmp
fimuls
std
popa
shrb
movsb
inc
dec
jbe
mov
sbb
out
pusha
int
pusha
popf
mov
nop
adc
pop
mov
dec
ret
subl
sbb
aas
sahf
mov
leave
push
es
int
fstps
mov
inc
mov
pop
sbb
pop
pop
or
push
xor
vpcmpgtw
icebp
imul
mov
test
mov
movsl
sbb
mov
xchg
mov
mov
and
push
add
inc
fwait
lods
adc
out
sub
push
out
popa
lahf
sbb
insl
outsb
nop
xchg
lods
inc
faddl
mov
not
fwait
jp
sti
jmp
nop
adc
or
stos
xor
das
sbb
decl
loopne
popf
sbb
sbb
mov
or
sub
mov
hlt
pop
aad
out
xchg
jne
pop
mov
aad
adc
push
int3
and
fstl
pushf
mov
aam
mov
out
je
adc
cmp
stos
xchg
stos
int
out
lahf
inc
inc
sbb
jge
push
enter
test
xor
or
jle
je,pt
push
mov
add
xchg
add
popf
orl
popf
loope
imul
movsl
sbb
push
cmpl
inc
dec
lods
xchg
inc
aas
shrb
jp
xlat
test
imul
mov
lret
inc
lods
pop
pop
repz
lret
in
shrl
data16
jl
mov
ret
push
aad
cld
adc
fldcw
sub
cmpsb
mov
mov
mov
mov
mov
adc
adcb
push
ret
sub
hlt
mov
outsl
loope
sub
mov
out
pop
bound
pop
cmp
jb
cmp
push
in
lret
in
dec
aaa
push
pop
arpl
dec
nop
push
pop
fadd
adc
icebp
push
push
movsb
icebp
jle
arpl
test
pop
jnp
stos
out
sahf
jp
inc
mov
and
std
mov
xor
das
ds
addr16
adc
lret
arpl
mov
popa
xchg
sbb
jg
out
cwtl
pusha
jl
or
adc
add
jge
pop
rolb
loopne
push
mov
mov
mov
pop
cmp
outsl
stc
cltd
orb
scas
shlb
pop
in
outsb
push
jns
fdivs
xor
popf
cwtl
adc
ss
out
cli
imull
aad
dec
cmp
pop
mull
frstor
mov
mov
int3
xlat
ror
cmpl
cli
inc
int
imul
pop
add
mov
lcall
sbb
popf
pop
leave
mov
out
scas
in
sbb
xchg
nop
pushf
adc
into
popa
les
das
xorb
inc
loopne
inc
data16
ljmp
pop
pop
rcr
adc
xchg
cmp
inc
push
loop
lds
shrl
pop
jle
jae
xchg
std
mov
cmp
xor
popa
pop
push
xor
adc
fists
sub
ljmp
pop
fstp
bound
jno
sbb
mov
mov
or
inc
mov
arpl
xchg
mov
jmp
xor
stc
and
or
bound
jecxz
std
in
mov
mov
add
loop
push
das
paddw
repnz
out
mov
mov
daa
outsb
idivl
cmpsb
aaa
arpl
xchg
rol
icebp
lret
cmpsl
inc
pop
push
ja
test
xor
test
pop
mov
mov
ss
gs
cmp
shll
sub
mov
lods
pop
arpl
push
or
pop
rorb
jb
sub
xor
push
idivl
push
inc
push
xchg
dec
cmp
mov
jbe
add
xor
mov
mov
mov
into
mov
push
push
movsl
sub
pushf
popf
test
mov
pop
dec
cmp
scas
push
idivl
shlb
cmc
cmp
cmpsl
sub
sbb
cmp
add
sahf
sub
adc
sbb
add
test
sarl
xchg
dec
mov
add
sbb
pop
cmpl
push
mov
cmp
out
aas
cmp
push
jge
inc
loope
jb
das
shrl
popf
sarl
fidivrs
dec
cmp
out
xchg
in
dec
pop
aad
push
int3
sti
jno
cwtl
in
mov
mov
sbb
pop
test
loope
adc
sub
push
lods
int3
inc
pop
inc
cmp
es
mov
xor
lea
cmp
push
inc
push
roll
lahf
mov
inc
jle
jo
lcall
mov
cmpl
mov
inc
sbb
rolb
nop
and
dec
loopne
sahf
fwait
push
pop
lcall
add
repnz
mov
iret
lret
cmp
add
mov
pop
fwait
rcl
add
dec
xchg
add
imul
mov
dec
adc
ja
dec
inc
jmp
sar
push
int
les
or
and
jbe
push
mov
shlb
mov
cmpsb
je
stc
jns
push
adc
xchg
dec
jp
cmp
add
xor
inc
ja
add
movsb
sbb
jns
mov
push
xor
aad
pop
inc
fstps
ret
sub
and
subl
sbb
pop
test
fiaddl
sbbl
xchg
cmp
and
pop
adc
cmp
mov
dec
mov
lea
pop
xchg
xor
mov
xchg
sarl
mov
xlat
sub
sub
dec
sti
stc
xlat
adc
add
sub
dec
xchg
arpl
push
mov
jg
and
insl
lods
adc
imul
fisubrs
out
gs
mov
pop
cli
repnz
jne
mov
es
js
add
imul
xchg
jmp
and
pusha
or
lcall
outsl
inc
lods
ljmp
mov
sti
sbb
nop
pop
mov
mov
roll
fucomp
shll
mov
in
mul
and
ljmp
loopne
adc
pusha
out
inc
fcmovnu
push
scas
dec
cmpsb
jge
xor
push
dec
outsb
mov
int
das
sahf
loopne
imul
jle
dec
cmp
cmpsl
sahf
lods
dec
push
nop
leave
sbb
lahf
scas
aad
into
jbe
inc
lods
loope
xor
jno
or
bnd
cmp
lret
ret
mov
jbe
push
fsubl
das
pop
pop
cmp
mov
fcmovnbe
cmp
add
pop
in
push
pop
fdivrs
stos
fs
mov
mov
jecxz
rolb
mov
pop
aad
and
adc
mov
jo
pop
mov
popa
shll
and
loopne
push
stc
orl
cmp
cmp
mov
jle
jbe
loopne
das
lcall
xlat
movsb
je
dec
sub
lcall
jns
adc
adc
scas
inc
ret
jo
mov
add
in
dec
inc
fwait
xchg
outsb
mov
cli
dec
cmc
nop
push
jle
clc
hlt
stos
sbb
jmp
popa
mov
bound
jmp
mov
xchg
jle
dec
sub
cmpsb
adc
mov
cmp
dec
mov
xor
add
pushf
or
jg
test
cmp
and
or
xchg
into
enter
dec
push
ljmp
fstl
rorl
insb
adc
lret
sbb
push
lods
sub
outsb
mov
jno
xor
adc
sahf
aam
jmp
xor
sbb
in
aam
inc
fnstenv
or
adc
or
mov
out
in
mov
sbb
cmc
mov
or
cmp
mov
mov
xchg
mov
mov
scas
clc
cmpsl
and
xor
and
fldcw
in
lods
xor
mov
jmp
add
mov
sub
adc
loope
inc
pushf
repnz
cmc
je
xor
jne
cmpsl
mov
mov
push
jno
pop
sti
sarl
addr16
aas
dec
out
or
fnsave
sub
sbb
mov
shlb
inc
ds
push
repnz
pop
incb
jno
into
xor
mov
aaa
inc
push
cwtl
dec
pop
iret
cmp
and
jns
add
lret
dec
push
lods
jns
adc
mov
ljmp
push
fwait
jp
jno
or
or
xchg
and
loope
test
sahf
sbb
adc
jo
leave
cmpsl
push
add
rcrb
push
and
loopne
js
sbb
cmp
pop
mov
xor
or
mov
xchg
cwtl
dec
les
push
mov
jl
inc
insl
dec
cmp
outsl
add
jl
and
int3
loopne
inc
scas
in
out
cltd
xchg
shrl
shlb
jbe
jbe
cltd
inc
enter
mov
pop
jg
cwtl
and
push
lret
shrl
insb
sbbb
aam
cmp
mov
es
and
add
mov
pop
jl
lods
dec
aad
sub
adc
or
dec
std
cwtl
test
and
aad
pushf
add
test
pop
push
push
roll
icebp
xchg
inc
mov
sub
inc
pop
sbb
pop
lock
mov
cli
and
repnz
jle
js
mov
add
sub
xor
or
xor
or
scas
inc
mov
addr16
test
test
sbb
std
xchg
dec
in
mov
insb
in
and
divb
jne
test
lock
pusha
sbb
pop
pop
xchg
loope
in
fstps
mov
mov
icebp
xor
pop
nop
and
mov
add
pop
jns
mov
jp
in
std
outsb
xor
pop
xrelease
test
and
cmp
push
hlt
clc
and
and
outsl
addr16
les
xchg
jne
and
push
mov
imul
add
cs
mov
xchg
inc
cmp
iret
xchg
jbe
scas
and
divl
push
pop
push
call
cltd
or
stos
inc
fs
push
mov
rclb
mov
fcompl
sahf
inc
jg
mov
lock
sub
mov
xchg
jg
inc
or
stc
ret
inc
sbb
pop
adc
adcb
ljmp
mov
stos
cs
hlt
ja
mov
or
jle
cmpsb
or
imul
fnstenv
orb
mov
and
nop
rcll
xlat
out
mov
jg
inc
sbb
jbe
imul
pop
mov
jbe
loope
fiaddl
or
aas
cmp
push
fidivrs
in
negl
subb
icebp
cs
es
add
ret
out
dec
xchg
or
lahf
stc
push
dec
in
xchg
mov
xchg
bnd
jns
sti
xchg
mov
scas
mov
pushf
xchg
cld
lea
lea
cmp
add
mov
mov
icebp
adc
dec
imul
cmpsb
mov
dec
ret
dec
xchg
or
lods
rcll
imul
add
adc
bound
stos
fdivs
add
push
popf
xchg
push
mov
pop
sub
sbb
faddl
fcmovnb
mov
jl
push
xor
sub
xchg
push
and
mov
pop
dec
push
jge
ja
or
pop
daa
int3
sbb
out
push
imulb
add
adc
pop
or
jmp
clc
mov
cli
pop
aas
jo
mov
lds
pop
pop
out
sbb
dec
test
mov
ljmp
xlat
or
data16
mov
mov
add
inc
aas
inc
out
inc
push
aam
fcomps
mov
sbb
xchg
add
mov
lret
rorb
sarl
aaa
jl
or
jmp
and
mov
in
lahf
test
mov
mov
dec
push
cmp
or
mov
scas
add
add
pop
into
outsb
or
jae
fisttps
adc
ss
loop
movsb
scas
aad
pop
push
jmp
inc
insb
jb
shll
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
push
nop
push
push
push
add
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
pusha
add
addb
add
add
add
rolb
add
mov
add
add
add
add
add
adc
add
loopne
add
push
push
add
nop
push
add
add
add
add
add
add
add
add
add
add
addb
add
or
add
out
add
add
or
add
add
add
add
xor
add
or
add
add
add
jmp
add
incl
add
xor
add
pop
add
xor
add
addb
sub
add
test
add
add
add
or
add
add
insb
ljmp
add
add
or
add
add
push
cmc
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
xor
add
sub
add
push
add
sub
add
js
add
add
add
or
add
add
add
add
add
add
add
add
add
hlt
and
add
add
add
add
add
add
fsubl
add
add
add
add
add
add
and
add
add
add
cmp
add
add
add
sub
add
push
add
sub
add
js
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
insb
xor
add
add
add
add
add
add
push
xor
add
add
or
add
xor
add
or
add
enter
incb
add
lock
sub
add
sbb
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
jo
add
cwtl
add
addb
add
call
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
cmp
add
add
or
add
cmp
add
add
or
add
add
add
add
add
add
add
add
push
add
sub
add
add
add
or
add
push
add
aam
add
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
add
or
add
xchg
add
add
add
add
add
add
add
add
add
push
add
hlt
aas
add
add
add
add
add
add
adc
add
add
add
add
or
test
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
or
add
or
add
add
add
add
add
add
add
rolb
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
lods
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jae
imul
add
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsl
add
imul
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
arpl
xor
fs
insb
add
je
jo
xor
cs
insb
add
gs
arpl
fs
insb
add
gs
xor
fs
insb
add
jb
imul
add
outsb
jae
popa
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
popa
arpl
gs
imul
inc
gs
imul
add
inc
gs
outsl
insb
gs
gs
push
add
inc
jb
popa
je
inc
popa
jb
je
add
push
gs
imul
inc
add
push
imul
outsl
outsb
inc
outsl
outsb
outsb
arpl
