jmp
arpl
lahf
jbe
jmp
insb
sub
pop
dec
xchg
shl
inc
mov
rcrl
xchg
pushl
dec
adc
insb
popf
mov
and
add
imul
outsl
inc
lret
mov
mov
push
or
jp
cmp
mov
loope
mov
subb
lret
xor
lcall
mov
ret
aam
icebp
sub
jb
push
add
shlb
xor
incl
add
fstp
mov
mov
int3
bnd
sub
jnp
add
push
call
icebp
xor
in
scas
adc
sub
lcall
jmp
push
sub
in
aad
lods
insb
adc
dec
and
lods
jmp
jmp
aad
pusha
shl
add
sbb
xchg
fildl
hlt
lahf
mov
xor
mov
call
in
jmp
int
inc
ret
enter
ret
add
sti
lods
jmp
cmp
jno
cld
push
mov
in
and
hlt
pop
mov
scas
sar
popf
sbb
mov
decl
aaa
mov
mov
je
mov
ds
ss
lea
fxch
dec
fistps
pop
jg
jmp
inc
sub
in
mov
addr16
push
pop
xchg
mov
push
into
push
shll
inc
les
ljmp
lock
cmpsl
inc
pop
mov
and
push
push
xchg
mov
jmp
mov
mov
and
jb
mov
xchg
sub
dec
xor
push
dec
lock
movsl
add
in
lahf
dec
inc
and
lcall
aaa
dec
into
xor
or
xor
nop
subb
in
mov
mov
mov
cmp
leave
push
adc
sarb
idiv
call
cmpsb
pop
jg
mov
add
cmp
xchg
std
enter
inc
pop
mov
xlat
shlb
std
dec
sti
scas
clc
or
mov
js
sbb
rcr
xlat
adc
sub
ljmp
shr
pop
adc
arpl
repz
inc
cwtl
movsl
cmp
push
fwait
sbb
pushl
test
mov
inc
jle
aad
insb
fistpl
jns
xchg
daa
pop
push
pop
adc
adc
mov
out
mov
push
adcb
and
mov
ljmp
call
add
inc
push
jl
bound
imul
mov
push
call
cld
push
sysexit
lcall
xchg
inc
xor
mov
loopne
or
inc
cmpsl
cmp
lods
jae
lea
faddl
cmpsb
sbb
decl
fbld
cltd
arpl
mov
adc
cmp
push
jbe
sbb
cmp
xchg
mov
sbb
into
mov
ja
xor
pop
sub
add
setne
jno
incl
inc
sub
mov
push
clc
test
mov
push
outsb
out
pop
dec
add
jge
lcall
dec
stos
jecxz
ret
pop
mov
xchg
popf
xchg
sbb
adc
sbb
mov
stos
lea
ljmp
push
xchg
mov
xchg
sbb
or
bound
and
xor
jle
call
add
cld
jle
mov
gs
cli
xlat
mov
dec
xlat
aam
pushl
loop
movsb
inc
mov
jge
lret
jnp
inc
sar
bound
dec
jle
xor
fld1
pop
addr16
jg
xlat
aas
shrl
lods
pop
pop
ja
or
shrb
int3
frstor
fcomip
ret
adc
inc
lret
test
arpl
push
scas
call
pop
lock
fsubp
repnz
jb
xchg
mull
mov
cli
fs
mov
cmpsb
pop
jno
cmp
ljmp
imul
cmp
test
xchg
cmp
mov
mov
adc
jo
imul
xchg
hlt
cwtl
and
mov
jne
jl
in
cld
dec
mov
cmpsl
decl
outsl
pusha
imul
mov
inc
fisubrs
fstps
lahf
add
dec
add
jmp
jle
clc
loopne
in
out
cmc
adc
movsl
dec
push
xor
aam
adcl
mov
dec
leave
xchg
aam
scas
subl
popa
push
das
mov
sbb
sahf
orb
mov
xor
subb
inc
mov
rcrl
lods
dec
out
cmp
les
call
adc
sub
mov
fsubrs
adc
aad
fwait
sub
jo
inc
call
pop
xor
pushf
push
jmp
mov
out
and
out
sahf
pop
outsb
and
adc
fstpl
or
je
push
js
inc
xor
testl
in
and
movsb
call
fisubs
imul
std
aas
insb
out
and
add
jo
mov
ljmp
and
pop
mov
test
push
shrb
cmpsb
in
mov
xor
out
movsb
data16
outsl
sub
push
insb
and
dec
dec
jo
xor
jmp
inc
pop
and
xchg
test
jae
jb
jne
and
incl
and
mov
mov
adc
shlb
dec
pop
mov
decl
sbb
push
mov
leave
lods
xor
adc
mov
sar
ljmp
mov
sub
jmp
jns
inc
xchg
xchg
xor
nop
scas
xorb
push
mov
mov
aas
push
dec
test
lods
fildll
sar
push
out
adcb
js
imul
add
pusha
inc
adcb
clc
xchg
aas
mov
js
das
jecxz
imul
pushf
or
sti
cmpsl
or
dec
adc
fistps
xchg
pop
fdivrs
js
int
add
das
fiadds
sti
cmp
addl
pushl
insb
mov
cmpb
lahf
jecxz
lods
adc
inc
or
xchg
push
cmpsb
fwait
mov
push
dec
cmp
into
sub
loope
fmuls
cmp
pop
sbb
sbb
pushl
push
lret
icebp
and
mov
mov
dec
lods
or
decb
dec
fistpl
jge
repnz
loopne
mov
xchg
or
sbb
jl
push
ljmp
push
mov
ret
add
push
dec
ja
pand
dec
fldl
push
popf
aas
fdivl
jecxz
mov
or
hlt
repnz
pusha
xor
insl
or
mov
jae
clc
fcomip
ds
hlt
lock
dec
and
rcll
xor
icebp
in
aaa
push
std
out
lcall
int
pop
xor
clc
std
push
shlb
jg
dec
mov
ljmp
jno
punpcklwd
aad
fcompl
jp
ljmp
jl
sbb
in
rcrb
addl
xor
sub
mov
jmp
jnp
push
sti
mov
data16
fnstsw
sub
jl
sub
ljmp
cli
jmp
rol
int3
fwait
mov
xor
cmpsl
dec
cmpsl
cmpb
int
and
movsb
leave
mov
in
cli
add
jp
shr
xor
xchg
orl
dec
iret
call
pop
cli
je
call
in
cmc
sar
mov
push
add
and
jmp
in
mov
in
clc
js
cmp
icebp
sbbl
or
lock
icebp
lcall
sbb
sbb
into
and
pop
js
fcmovnb
pop
addr16
adc
jnp
lcall
ret
mov
mov
popf
inc
jnp
add
iret
dec
jmp
mov
jecxz
or
lret
out
test
xchg
hlt
subb
pushf
scas
mov
mov
decl
jno
mov
mov
cmp
fnstenv
xchg
jb
jns
pop
mov
out
cmpsb
jp
test
fwait
or
and
push
loope
das
insb
xchg
jo
aas
insl
inc
aam
lea
aam
add
mov
stc
test
jns
jb
into
add
jmp
shll
imull
cs
and
pop
lea
call
cld
pop
pusha
pop
add
outsb
scas
aam
xor
stos
or
sub
in
rclb
call
sbb
lret
stos
in
push
cli
xlat
jb
mov
sub
lcall
ret
jmp
sbb
testl
inc
decl
add
pop
mov
mov
out
mov
mov
dec
mov
jnp
rcrb
jecxz
mov
inc
dec
loopne
push
cli
sub
out
out
pop
aas
jmp
sbb
fs
gs
push
setge
aam
aad
xor
mov
sub
decb
mov
call
sahf
in
lock
cmp
xor
mov
mov
sar
mov
bound
insb
data16
pop
insb
pop
mov
and
inc
test
pop
ljmp
or
or
sub
movq
cmp
outsl
lea
jg
sub
cmp
test
loop
lret
inc
repz
push
dec
mov
arpl
ljmp
xor
rol
je
xor
mov
outsb
insb
adc
scas
pop
repz
dec
adcb
jle
or
fidivrs
pop
or
sti
jl
lea
sarl
push
in
cld
mov
pushl
ds
jp
mov
xchg
xchg
repnz
mov
movb
call
lcall
pop
sahf
dec
test
aas
out
add
jp
push
sbb
add
and
sub
roll
ds
add
cmp
scas
stos
dec
mov
inc
push
mov
jns
push
push
add
sub
push
incl
jmp
dec
inc
hlt
insl
pop
jmp
icebp
push
xchg
std
xor
xorl
jmp
mov
jb
sub
ret
das
cmpsb
push
in
sub
lds
cld
mov
fisubrs
xchg
call
lret
mov
mov
pushl
ss
lret
and
add
jecxz
cmpsl
aad
negb
inc
inc
fcomp
stos
cmp
mov
xchg
lock
outsl
cli
push
repz
sbb
in
stc
cs
mov
jge
decl
jbe
lds
xchg
faddl
xchg
adc
sti
cmpl
in
pop
adc
cmp
repnz
jp
jge
daa
ret
pop
sbb
push
les
pushl
addb
adc
lret
xor
fwait
aad
das
sbb
enter
pop
aaa
call
xchg
dec
outsb
fs
cli
pushf
sbb
push
inc
inc
lods
shrl
push
mov
push
fcomip
call
xor
and
out
push
add
rorl
aaa
inc
cmpsb
jmp
sub
insb
mov
subl
jne
jno
adc
xchg
loopne
jge
lcall
mov
movsb
pusha
cs
mov
lcall
nop
push
lcall
jb
dec
mulb
nop
inc
lock
out
sysret
xchg
sbbl
xchg
insl
jmp
push
xor
pop
cmp
jecxz
push
xchg
pop
dec
mov
imul
jns
fcmovbe
stc
incl
cmp
push
and
mov
sbb
in
int3
lahf
mov
scas
or
cmc
sti
cld
jge
in
std
lcall
hlt
pop
mov
ja
or
adc
pushf
jle
adc
push
sbb
subb
rsqrtps
lds
xor
mov
pusha
jg
jmp
xor
icebp
and
adc
push
imul
and
or
loopne
lret
mov
fisttpll
adcl
hlt
sar
ljmp
aam
or
outsl
pop
xor
hlt
sub
jmp
jbe
pop
call
std
ret
es
inc
jne
std
sti
cld
into
testb
lods
mov
mov
imul
je
mov
xchg
fisttpl
xchg
or
and
jb
cmp
lret
iret
sub
cmp
data16
lock
push
and
insb
insb
js
shlb
js
decb
fcomip
insl
jb
in
nop
mov
stos
ret
lds
jo
fxtract
std
daa
pushl
movsl
push
mov
pop
rcll
scas
xchg
aam
aaa
push
arpl
sub
incl
mov
ret
addl
xor
push
pop
outsb
call
jmp
idivl
push
insb
inc
loopne
movsl
popa
jae
das
in
lahf
lcall
mov
mov
add
push
xchg
xor
push
mov
inc
push
pop
xor
mov
or
inc
subl
sarb
loopne
and
push
cwtl
stos
xor
jge
ret
call
add
sbb
sub
mov
mov
lock
jg
idivl
sti
pusha
and
mov
rcrl
push
dec
xchg
or
sub
fsubrs
jmp
pop
cmc
and
sbb
adc
cli
dec
or
mov
orl
fcoml
mov
xchg
rcl
mov
lea
arpl
push
mov
cmpps
popa
jb
mov
popf
sub
and
pop
push
push
dec
and
push
sar
fsub
pop
mov
xchg
jge
and
mov
push
jg
xchg
pop
push
sbb
inc
pusha
cld
mov
fs
xchg
add
stos
cmp
pushl
cmp
xchg
mov
pop
mov
xor
sarb
push
stos
xor
int3
mov
jns
xor
std
mov
sbb
mov
movsl
mov
push
loopne
rcrb
stos
loopne
sub
cmc
cwtl
xlat
ud0
mov
pop
push
sub
mov
pop
lret
popf
sbb
insb
imull
aaa
mov
in
int3
in
mov
cmpsb
mov
push
aad
test
push
dec
stos
arpl
jg
pop
xor
jnp
shll
dec
adc
dec
mov
fyl2x
scas
fsts
fdiv
mov
adc
xchg
inc
mov
ljmp
aam
dec
mov
movsl
aaa
dec
xor
mov
adc
sti
scas
xchg
decl
xor
pop
mov
mov
or
ss
roll
repnz
lret
in
push
push
and
xlat
pop
cmc
arpl
or
xchg
sbb
aaa
gs
mov
xor
sahf
cmp
sub
ror
arpl
xchg
jne
mov
sti
out
adc
push
push
sahf
ds
call
int3
out
cmp
fs
or
cmc
mov
iret
add
mov
pusha
adc
pmulhuw
jl
inc
cwtl
sti
packuswb
incl
shlb
js
sarb
rclb
fsubs
mov
sub
mov
and
popa
rclw
or
dec
stc
and
cmp
and
call
adc
loop
aas
insb
icebp
pop
cmpsl
fwait
enter
push
orl
fdivr
add
and
xchg
dec
add
xor
add
cmpsb
rorl
pop
mov
in
pushl
pop
stos
jbe
dec
mov
mov
clc
push
inc
pop
mov
dec
lock
push
movsl
push
cltd
and
sarb
xor
pop
cli
out
lcall
sub
ret
ljmp
sbb
popa
dec
sub
leave
ds
xor
ss
rcrl
pop
mov
or
lahf
and
jmp
dec
in
hlt
adc
call
insl
aas
pop
pop
mov
test
cmp
dec
jl
xchg
out
sub
out
jp
sbbl
inc
adc
insb
arpl
push
rclb
jb
add
or
mov
pushl
in
mov
fsubp
enter
inc
jns
clc
fwait
sub
push
add
pusha
lret
dec
or
decl
loop
movsb
addr16
mov
cltd
call
outsl
dec
mov
fld
lret
xor
jmp
insb
jb
outsl
xor
xlat
cmp
jne
cmp
mov
test
add
ljmp
or
outsb
rcrl
adc
push
mov
add
add
jno
loope
jg
lcall
pop
cmp
dec
dec
ret
xor
test
inc
xchg
mov
pushf
decl
mov
bnd
adc
lds
call
out
test
dec
dec
push
loopne
bound
sub
mov
xor
fnsave
inc
mov
in
das
popf
adc
clc
cmp
sbb
mov
mov
clc
test
or
push
pushl
popf
cmc
push
pop
push
ljmp
mov
pop
inc
add
shl
mov
hlt
mov
les
sti
xor
mov
push
insb
leave
andb
cld
dec
nop
test
inc
sub
or
lcall
mov
nop
pop
or
push
pushf
or
push
adc
es
or
cmp
bound
fsubr
xchg
dec
adc
sbb
mov
sti
lods
pop
adc
jae
stos
movsl
mov
inc
cmc
shl
jae
insl
ljmp
shlb
in
sti
imul
add
repz
xchg
xor
fdivr
cmp
fcoml
ljmp
sub
sub
int
xlat
enter
test
cli
leave
int
in
add
and
cs
call
shl
mov
movsl
jae
jbe
push
and
aad
bound
inc
mov
lcall
or
cmp
pop
dec
ret
mov
out
aaa
or
dec
or
repz
decl
andl
repnz
mov
les
roll
xchg
les
jecxz
sar
lcall
rcrb
bound
mov
xchg
out
cmp
je
lea
dec
push
lcall
adc
mov
jg
push
lret
push
loope
std
push
out
dec
repnz
cmc
popa
fs
dec
shlb
inc
shll
icebp
dec
xchg
arpl
pop
add
or
cmp
andl
pop
ja
push
stos
pop
pushl
xchg
push
gs
xchg
les
ja
repnz
inc
stos
aam
ljmp
hlt
pop
xchg
jl
lahf
or
arpl
cs
cmp
lcall
jmp
sub
call
lcall
push
inc
mov
mov
lcall
or
stc
mov
mov
jg
push
push
pop
sub
jmp
cmp
out
mov
add
dec
lret
loope
mov
cmc
cmc
scas
pop
insl
cmp
loopne
mov
push
dec
cmpsb
sub
fsubl
ret
sub
dec
outsl
mov
jl
rcll
jmp
jo
jno
cmp
sarb
mov
push
inc
or
pop
sub
insb
dec
and
lcall
pop
insb
mov
pop
lods
rorl
das
icebp
push
out
sub
and
adc
incl
jne
mov
push
shrl
jmp
jmp
or
popa
repz
mov
ljmp
cmp
push
lret
xlat
pop
mov
push
arpl
mov
cmp
aad
adc
ror
mov
and
sahf
inc
in
in
int
loope
and
fdivr
cmp
mov
mov
push
loopne
dec
mov
or
lds
sub
add
stos
cmp
mov
dec
in
in
roll
fstpt
mov
xchg
push
test
jbe
das
pop
enter
xchg
scas
inc
xchg
fstl
inc
fisubrs
mov
call
push
push
rclb
pop
stos
mov
mov
mov
cmp
movsl
jg
aam
rorl
stc
cli
lods
fucomip
movsl
popa
decl
mov
cmp
std
or
cmp
push
jns
pop
push
xlat
rcrb
lcall
xchg
inc
stos
bound
mov
dec
outsb
push
inc
and
imul
mov
push
outsb
cltd
cld
cmp
outsb
dec
jo
mov
or
ljmp
jmp
mov
aas
add
adc
sarb
sbb
mov
mov
sub
mov
mov
push
push
aam
inc
das
bound
or
scas
dec
outsl
inc
arpl
call
cld
dec
and
push
mov
in
sti
xor
jp
rcrb
xchg
enter
loop
ds
sub
mov
aas
popl
ss
pop
pop
pop
jp
mov
mov
pop
xchg
mov
mov
cmpsb
into
mov
xor
sub
mov
mov
rorb
mov
mov
xor
clc
sub
mov
mov
jg
and
lcall
std
sar
ljmp
xor
int3
pop
mov
dec
sub
mov
mov
testb
jmp
mov
mov
jns
push
adc
sub
sub
idivb
in
imul
inc
adc
and
add
xor
unpckhps
or
cmpsl
jge
imul
sub
jmp
inc
jmp
std
test
je
loope
lds
adc
lods
out
into
shl
push
cli
ffreep
sub
inc
xlat
xor
out
lds
out
rcl
pop
movsl
imul
mov
jle
imul
add
xor
adc
mov
xor
stc
leave
in
jne
mov
mov
mov
xorb
push
inc
dec
sbb
sub
mov
add
adc
shlb
aas
idiv
aas
push
push
adc
mov
cmp
add
ljmp
push
jg
incl
nop
add
nop
xlat
mov
nop
sub
ret
add
inc
stos
add
jg
mov
test
jne
jnp
and
loopne
outsb
rcrl
fisubl
call
xchg
push
enter
jnp
push
cmp
xor
scas
push
subb
add
cmc
adcl
test
call
xlat
mov
aad
sbb
push
sub
or
sbb
shlb
pushl
cwtl
cmp
inc
scas
sub
pop
sub
fdivr
dec
push
adc
ljmp
jne
dec
mov
or
jbe
cwtl
scas
mov
ljmp
mov
cmp
cmp
adc
sub
adc
or
add
int3
rcl
dec
scas
ficoms
cmp
xor
mov
xchg
sbb
pop
cmp
mov
imul
mov
decl
sub
js
stos
adc
lock
inc
pusha
lret
mov
js
xchg
les
xor
movsl
lcall
lcall
cmp
xor
sahf
sub
int
xor
pushf
fmull
call
jg
jmp
push
push
testb
inc
mov
ret
cmc
add
insb
mov
cmp
dec
cmp
sub
push
pop
inc
add
cmp
movsl
in
xchg
cmp
jg
repnz
sti
lret
jnp
clts
orb
pusha
call
call
push
push
jmp
mov
cmp
jge
sub
push
mov
xchg
into
sub
fists
pushl
clc
pop
aad
sub
sarb
stc
push
jne
jecxz
xchg
or
call
lahf
and
sbb
hlt
clc
push
pop
flds
dec
sbb
int3
mov
dec
lcall
mov
data16
enter
add
das
jb
xor
or
xor
jmp
pop
add
xchg
jo
popf
sti
sbb
lea
outsl
and
mov
incl
mul
and
fwait
dec
jecxz
pop
inc
ret
mov
or
cltd
es
jnp
cld
call
imul
test
ret
xchg
mov
and
enter
pop
repnz
mov
mov
clc
mov
fists
fisubrs
push
roll
decl
xchg
out
in
outsl
in
popl
clc
pop
push
add
mov
lods
dec
ret
sahf
bound
sub
cwtl
fstl
jge
inc
repz
push
xchg
aas
mov
int
jl
pushl
or
stos
add
push
insb
adc
xchg
inc
and
popa
insb
cmp
andl
jnp
lds
sbb
sub
mov
into
test
dec
jns
pop
fbstp
push
push
insb
mov
jb
aad
adc
pushf
push
dec
outsb
cmpsb
decl
lock
or
fnstcw
call
mov
or
addr16
inc
fcos
mov
clc
stos
into
mov
mov
pop
sar
push
out
loope
call
xchg
inc
cmpl
outsb
dec
sarb
movsl
fs
push
int3
int
test
jns
fisttpll
cltd
jb
sahf
daa
shlb
pop
mov
bound
in
xor
les
test
pushl
repz
dec
out
mov
mov
mov
jle
loop
jno
sub
incl
push
sahf
xor
scas
enter
xor
pop
sub
nop
pop
out
sarb
or
jge
frstor
loopne
sub
hlt
pop
and
add
xchg
mov
jg
ljmp
xchg
int3
mov
rcrb
inc
loop
dec
ficoml
notl
cmpsl
imul
jno
xlat
lock
sbb
sbb
insl
jl
inc
pop
xor
xor
clc
push
jmp
popa
test
aas
jle
fsts
xchg
or
inc
inc
int3
or
inc
jecxz
push
ljmp
cmp
xor
mov
nop
dec
rcl
xchg
xchg
sbb
es
movsb
mov
addr16
push
xchg
repnz
mov
test
test
and
jp
cmc
add
mov
in
push
jo
pop
sbb
mov
jg
and
xchg
test
mov
jae
fnsave
jnp
loope
inc
cmp
scas
insb
scas
push
jle
mov
push
lret
inc
and
mov
imul
int3
cmp
lea
xchg
inc
popf
cmp
scas
or
pop
mov
mov
sub
loop
cmpsb
sbb
pop
icebp
cltd
addl
jbe
and
mov
femms
mov
pop
rorb
ljmp
mov
inc
cli
inc
repnz
adc
ror
les
dec
ljmp
xchg
xchg
sbb
js
sbb
test
lcall
pop
cmp
dec
inc
or
xchg
jl
cltd
pop
cwtl
sub
push
jne
lret
mov
xor
pop
scas
cli
sub
inc
outsb
push
pop
cmpl
loopne
mov
lock
pushl
pop
movsl
jecxz
adc
loope
shr
ret
fcmovu
stos
lds
and
adc
aaa
std
ljmp
hlt
xchg
cmpsl
dec
fstpl
fisubrl
iret
dec
std
mov
add
mov
fiadds
ss
jb
in
popf
icebp
xor
xchg
xchg
pop
lcall
inc
hlt
dec
loop
or
incl
lret
test
or
outsl
call
push
enter
pop
add
jmp
xor
subl
mov
int
or
inc
sub
loope
ret
adc
jle
cmp
pushl
aam
adc
push
mov
jnp
mov
xchg
cmp
out
mov
out
clc
and
pop
mov
dec
fwait
cmp
mov
ret
rol
lcall
pushl
push
mov
std
mov
rcrl
aaa
mov
or
ja
out
test
jne
xchg
cmp
mov
inc
adc
sbb
icebp
xchg
fiaddl
pop
push
in
mov
popa
loope
hlt
ljmp
bound
cmp
cwtl
cmp
xor
addl
test
call
std
call
mov
insb
and
in
xchg
pushf
loope
movsl
mov
bnd
push
aad
fidivrl
incl
fwait
pop
out
fldcw
out
hlt
push
push
je
and
scas
insb
out
sbb
incl
dec
mov
pop
fiaddl
or
dec
add
inc
rolb
decl
aaa
xchg
add
daa
xchg
inc
movsb
enter
data16
inc
and
decl
lds
inc
mov
pop
cmp
jl
scas
sub
xorl
aam
mov
xchg
mov
push
outsb
fstpl
sub
cwtl
pop
cmp
jbe
mov
mov
fisttps
sahf
mov
es
jne
es
push
cmpsl
adc
and
outsb
test
dec
lds
ss
mov
push
bnd
add
xchg
jnp
pop
shll
cmc
jb
cs
xchg
arpl
pop
aad
cmc
mov
push
xor
cs
adcb
mov
repz
add
dec
sbb
lds
test
lcall
test
aas
imul
insb
mov
stos
xchg
stos
jmp
mov
out
xchg
sbbb
cli
xor
rcrb
and
aad
imul
and
cmpsl
in
mov
xor
xchg
mov
pop
call
imul
xor
jb
and
xor
dec
xchg
push
jmp
mov
jne
adc
xor
push
jo
decl
out
fwait
test
dec
mov
inc
mov
dec
je
pop
sbb
out
repz
mov
and
ret
pop
ljmp
inc
xchg
pop
mov
fcomip
mov
fcmovu
jbe
adc
mov
ds
out
jmp
cmp
in
mov
cmp
rorb
scas
jbe
push
imul
mov
mov
call
inc
das
addr16
inc
dec
jb
mov
jmp
enter
jle
inc
jmp
lods
cmp
adc
xchg
std
stos
das
clc
jmp
sub
pop
or
and
mov
cs
sbb
and
adc
enter
add
add
nop
inc
add
stos
dec
add
add
push
and
add
test
mov
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
or
or
and
cwtl
jge
cwtl
cmp
ds
mov
call
out
xor
gs
dec
sub
mov
add
inc
sub
push
lahf
jle
call
lds
xchg
gs
fbld
js
rcr
popa
lods
shll
ss
jnp
push
adc
mov
pop
outsl
fdivrs
jno
xor
xchg
xor
and
mov
mov
movsb
add
jbe
mov
mov
inc
rolb
pushl
mov
addr16
xor
repz
lds
mov
out
rclb
call
jg
cmpsb
add
push
ror
and
jecxz
loopne
inc
stc
movb
or
jnp
outsl
push
mov
fidivl
dec
repnz
clc
mov
jb
mov
daa
sahf
repnz
mov
mov
decl
mov
push
push
mov
cmp
hlt
pop
lods
jp
scas
xor
sbbb
call
jecxz
sbb
call
jbe
arpl
in
lods
insl
jle
or
cmp
adc
in
mov
sub
aas
fbstp
xor
sbb
mov
mov
adc
shll
data16
mov
adc
mov
stos
mov
repnz
pop
cmp
fcmovnu
in
sub
xor
sub
xchg
fstps
js
jg
dec
or
enter
xchg
ret
jp
loopne
jnp
popf
jb
pop
jae
dec
icebp
fucomi
idivb
xor
insl
push
lret
mov
mov
stos
or
and
and
lcall
imulb
cltd
bound
cmp
movsb
and
mov
mov
repz
mov
and
pop
idiv
loop
addr16
push
imul
push
pop
jo
sub
push
xchg
insl
sub
mov
add
adc
into
cs
popf
sbb
dec
jo
in
adc
jmp
adc
dec
ret
out
fdivs
mov
sub
outsb
popf
imul
xchg
leave
mov
mul
jbe
in
sbb
mov
es
pop
dec
cmp
sub
mov
loopne
adc
stc
aam
cmp
mov
or
xchg
rcll
jg
mov
push
mov
pop
cltd
outsb
inc
into
sub
pop
cmp
in
cmpsb
cmp
push
sbb
jbe
mov
das
jnp
xchg
in
imull
mov
push
or
mov
ja
xor
fisttpll
scas
adc
xchg
push
push
pushf
pushf
pushf
pop
sub
and
xchg
mov
add
adc
leave
f2xm1
jge
push
addr16
ljmp
lds
cwtl
popf
ss
sarb
in
jb
mov
push
fwait
jmp
lods
lret
addl
js
aaa
insl
fxch
ret
and
mov
pop
js
ja
jp
scas
mov
inc
xlat
setbe
cmp
add
int3
dec
movsl
inc
in
adc
cmpb
aaa
mov
dec
cs
setae
in
mov
sbb
mov
outsl
pop
pop
mov
mov
or
fisubrl
mov
pop
mov
dec
js
push
in
mov
or
cmpsb
mov
insb
inc
jns
cmp
add
cmp
stos
addr16
pop
xchg
cmpsl
shlb
lods
xor
sbb
cmp
leave
in
jbe
int
das
movsb
mov
sub
or
lods
mov
aas
cmp
shll
in
sar
in
jbe
flds
test
or
xchg
fcmovnu
and
adc
inc
jp
test
outsb
daa
add
push
adc
mov
mov
lock
outsb
mov
pop
xor
sbb
scas
fsubrs
nop
pop
jns
fstps
into
dec
dec
into
sysexit
dec
fimull
cltd
dec
lds
outsl
adc
sbb
movntq
out
out
insl
fcmovnb
icebp
jbe
popf
hlt
ja
aaa
unpckhps
pushf
add
mov
mov
pshufw
aaa
dec
jno
cmp
popf
sbb
decl
fwait
jmp
pop
cmc
mov
jno
out
lea
mov
les
xor
loopne
xchg
pushl
mov
mov
ficompl
iret
push
mov
adcb
jb
loopne
jnp
lret
jns
cmp
int3
lock
add
arpl
mov
push
lds
shll
in
leave
fldenv
pop
js
test
fldl
scas
pop
enter
dec
pop
popf
push
jp
mov
in
mov
ret
xor
insl
fbstp
jnp
xlat
jno
push
inc
insb
psrlw
sarl
outsb
js
sbb
das
in
imul
jp
sub
stc
mov
jo
sub
jecxz
mov
out
mov
outsb
mov
push
jp
ret
loope
jbe
jbe
pop
xchg
sub
xor
and
aad
inc
test
or
jmp
inc
mov
imul
dec
and
inc
dec
jo
sar
cld
cmc
or
mov
xor
lea
inc
cmp
outsb
mov
adc
inc
aad
pop
fmull
popf
idivb
pop
jne
scas
xchg
dec
into
aas
pop
out
mov
and
frstor
dec
ret
sub
cmp
fadds
pop
xor
jo
dec
loop
imul
xor
aad
ja
lock
sub
inc
sub
sub
in
jbe
mov
mov
pop
dec
dec
jo
adc
pop
repz
mov
mov
jb
mov
jg
sub
in
jbe
movq
lea
cmp
cmp
adc
mov
add
fisttpll
leave
cmp
fldcw
movsl
or
stos
add
sbb
adc
mov
push
mov
add
mov
mov
cmp
or
addr16
sbb
sbb
in
jbe
test
sbb
adc
xchg
xchg
mov
outsl
pop
mov
sbb
mov
inc
cs
mov
enter
outsl
sub
cld
ret
or
icebp
inc
jno
ds
loop
popf
sti
pop
xor
pop
mov
sub
mov
dec
sbb
xor
adc
mov
inc
jp
ja
xor
mov
lods
outsb
pop
pushf
pushf
push
cmp
jge
dec
data16
pop
mov
or
outsb
mov
or
sub
mov
fstp
adc
fstpl
xor
sbb
sub
leave
add
movsl
lcall
adc
addr16
mov
outsb
outsl
jecxz
xor
das
mov
xor
mov
xchg
dec
or
dec
pop
je
cmp
dec
call
or
push
test
in
ss
loope
push
dec
in
fneni(8087
pop
cs
jns
and
or
popw
or
mov
aaa
fdivl
cmc
sbb
loop
imul
add
cmp
sbb
neg
ja
mov
xor
fistps
jns
fldt
int
pop
rcrb
cltd
popf
mov
dec
lods
nop
push
or
sbb
xchg
mov
pop
xor
xchg
and
iret
dec
addr16
mov
dec
outsb
scas
cmc
jg
adc
sbb
sbb
xchg
js
int
sbb
ljmp
sbb
vmread
shll
decl
sub
push
and
lock
out
xor
fstl
popf
mov
scas
in
push
and
mov
adc
pushf
cmp
jg
or
in
pop
xchg
scas
cltd
or
inc
cs
test
lock
leave
lods
scas
cmp
aam
mov
mov
data16
leave
lret
inc
icebp
loop
sbb
xchg
pop
sbb
push
fsubrl
mov
jg
mov
outsl
fidivrs
or
rorl
push
lret
xchg
or
dec
sub
push
ljmp
sti
loope
int
fstpt
push
cwtl
dec
or
mov
test
inc
test
adc
jb
bnd
mov
outsb
ja
mov
mov
popa
ficompl
cltd
mov
lcall
push
and
xchg
int
in
xchg
es
mov
pop
out
jbe
sbb
test
sbb
mov
movsl
in
sub
jbe
pusha
or
xchg
cmpsb
pop
fstpt
pop
xor
cmp
xor
or
inc
movsl
jae
fcmovne
sbb
push
mov
lods
sub
roll
rcrl
call
fwait
pop
dec
pop
jno
dec
adc
mov
or
xor
int
pop
popf
mov
insl
popf
jmp
flds
jno
dec
fdivl
mov
sub
jns
insl
pop
ja
shld
test
pop
cs
sbb
sub
scas
jmp
inc
mov
js
sbb
sbb
js
jp
and
push
mov
outsb
mov
lahf
ja
jle
aas
std
adc
fsubrl
std
cmp
mov
mull
mov
ficoml
das
cmp
int3
outsb
pop
jae
das
pop
pop
sub
dec
into
das
or
jmp
xchg
divl
pop
fistpl
xor
shrb
push
mov
pop
or
stc
adc
aad
faddl
imul
in
out
xor
fwait
jno
outsb
mov
jmp
jns
mov
mov
pop
mov
fstpl
mov
cmp
popf
fimull
sbb
nop
lods
ror
and
xor
xchg
xchg
push
andl
lods
iret
mov
adc
ret
sbb
push
iret
aas
fistps
leave
adc
or
sbbl
aas
cmp
xor
pop
sub
push
add
outsb
mov
push
sub
subl
sbb
push
push
sbbl
xchg
ss
cmp
sti
dec
jo
loopne
imul
pushf
flds
insl
jbe
bound
stc
shl
loopne
int3
cmc
cmp
sbb
fwait
pop
ljmp
pop
lea
xchg
mov
jge
xlat
cmp
jbe
cmp
outsl
fsubl
fdivl
ret
dec
pop
xor
sbb
imul
cmp
jbe
loopne
aaa
leave
sbb
shlb
xor
jecxz
cwtl
pop
or
ss
fidivl
outsb
adc
data16
stc
inc
xlat
movsb
mov
pop
mov
xchg
fisubrs
jns
icebp
testb
mov
cmp
mov
xchg
lcall
insl
negb
mov
mov
stc
or
or
cmp
or
lock
sub
leave
in
int
ja
pushf
lea
add
das
xor
adc
in
jge
jl
fisttpl
jns
out
pop
cwtl
lds
shl
jge
pop
or
push
cmc
mov
push
int
popa
or
xchg
aaa
outsb
mov
pop
xor
push
mov
in
in
xchg
das
cmc
dec
repnz
mov
fdivs
mov
addr16
pop
add
lret
pop
aas
jno
mov
mov
aas
dec
outsb
outsl
ficoml
sbb
mov
xor
stc
popa
and
sub
outsl
pop
loopne
xor
inc
dec
cld
popf
cld
aam
mov
sub
mov
push
jnp
pushf
cmp
mov
mov
outsb
adc
dec
cmp
lds
fistpl
mov
in
mov
es
rorb
insb
pop
pop
and
mov
add
sub
and
outsb
daa
mov
cmpsl
sbb
insb
or
sub
stc
pop
fstps
xchg
pop
fcmovne
sbb
fcmovne
leave
in
push
js
dec
mov
in
adc
and
jecxz
fwait
sahf
mov
sbb
mov
mov
leave
sub
bound
jg
in
sti
ret
sub
xor
add
pop
test
fwait
dec
lods
xor
mov
jo
or
xchg
gs
lahf
or
jno
dec
das
xor
push
push
mov
scas
sub
add
xchg
sbb
push
fistps
pop
lods
fcmovne
xor
cmc
pop
insl
or
jno
test
frstor
lea
xorl
test
add
jo
stos
out
jmp
add
arpl
fwait
adc
aam
aad
fdivl
lret
sub
outsl
call
and
jmp
lods
fldenv
rcll
sub
pop
sub
out
cmpsl
adc
push
jecxz
sarl
les
outsl
in
push
insl
cmp
or
sbb
mov
sbb
jmp
or
and
pop
xor
jp,pt
sbb
loopne
fsubrl
cmpsl
in
pop
sbb
leave
cs
and
imulb
iret
test
in
in
jp
jge
gs
test
test
jo
sbb
movsb
pop
lock
mov
adc
pop
inc
xchg
lods
jmp
das
test
push
dec
out
or
jo
fnstsw
divl
or
jnp
fiadds
sub
sub
frstor
popa
cmpsb
sbb
xchg
das
daa
pop
mov
mov
dec
into
push
scas
dec
sbb
and
imull
fstl
das
pop
mov
xlat
aas
and
mov
test
pop
and
pop
loop
xchg
jae
sbb
jns
adc
add
pop
scas
pop
je
mov
fldl
outsw
int
js
idivb
xchg
mov
rcrl
add
sbb
cmpsb
jnp
jbe
das
das
cld
mov
push
popa
xchg
inc
or
ja
sbb
scas
mov
es
daa
insl
stos
enter
cmpsb
fstps
loope
mov
stos
sar
inc
push
lods
cmpsl
dec
xor
inc
pop
test
insl
mov
sbb
scas
or
inc
jb
adc
outsb
outsl
pop
imul
dec
pop
je
fisttpll
xchg
insl
pop
lea
daa
xchg
mov
ja
or
sbb
daa
jg
rcr
leave
in
inc
cmpl
insl
fistpll
mov
mov
mov
fwait
nop
and
insl
in
arpl
loope
insb
mov
sbb
mov
mov
sbb
xchg
fwait
pusha
insl
add
out
or
mov
dec
mov
adc
jns
lahf
inc
fistpl
mov
roll
fisttpl
mov
dec
jmp
xlat
mov
xorb
dec
aas
mov
cvttps2pi
loopne
in
adcb
imul
fisubl
xor
faddl
mov
jmp
aas
mov
fsubrl
xchg
loopne
or
xchg
lea
pop
loope
insb
fistpl
adc
es
fcmovnbe
in
fildl
sub
out
scas
cmp
out
pushf
pushf
cmp
adc
insl
ja
cmp
jne
lahf
daa
add
out
sbb
in
jge
sbb
mov
mov
or
mov
sub
cmp
jbe
jno
jno
xchg
dec
fmull
push
sub
pop
test
push
in
fisubl
pop
fmuls
cmp
or
mov
push
jbe
mov
iret
push
mov
xlat
jo
inc
lds
and
cmc
sbb
addr16
insl
in
repz
fdivl
or
stc
test
lods
mov
cltd
mov
sub
push
pop
test
pop
cmp
add
mov
jp
scas
leave
in
leave
out
jg
jg
movsl
mov
scas
sbb
daa
jns
push
bound
or
mov
outsl
rcrb
cld
es
and
repz
rorl
out
xlat
std
int3
ja
fwait
inc
loop
push
notl
pop
xlat
insb
add
mov
pop
cs
jo
mov
dec
mov
dec
test
pop
jo
daa
fldenv
test
into
xor
and
mov
mov
test
sti
fdivrl
or
xchg
push
sub
or
in
sbb
jbe
fmull
daa
inc
mov
outsb
pop
and
pusha
add
fldt
mov
leave
in
mov
mov
jo
mov
ret
aas
imul
pop
push
sub
into
enter
and
pop
pop
add
cmovne
jge
add
or
hlt
push
test
mov
iret
pop
mov
mov
jne
jp
fmuls
xor
fldcw
outsb
inc
xlat
lret
dec
jns
xchg
push
mov
lods
jno
aad
scas
push
or
les
shll
sub
int
out
sub
mov
in
ret
adc
insl
sub
shl
in
ss
leave
fimull
ret
das
cmp
insb
jns
fwait
sbb
out
push
aaa
or
outsb
jg
popf
out
ss
lea
insl
add
adc
jecxz
fucomi
popf
xor
sub
aas
fnstenv
or
cmp
iret
dec
push
pop
push
cmc
bound
sub
js
test
outsl
outsb
adc
repnz
push
outsl
sbb
adc
pushf
mov
loop
inc
std
inc
outsl
or
out
fsubrs
cmpsb
jge
pop
aad
in
loopne
ret
or
jg
mov
push
jmp
test
mov
and
xor
fistps
popa
mov
icebp
test
push
sbb
pop
push
xchg
loope
loope
sub
outsb
mov
cmp
mov
test
hlt
jp
xor
shl
sub
nop
inc
popl
adc
mov
dec
aas
xor
stc
xor
mov
xor
rcll
mov
es
ret
dec
pop
idivb
stos
adc
loopne
outsb
add
add
repnz
cmp
dec
adc
fsubs
adc
inc
popl
push
sbb
xor
cmp
add
js
faddp
in
dec
cmp
and
js
xor
xchg
ja
or
aas
jns
es
iret
cmp
pop
test
fcmovnb
lcall
pusha
or
mov
mov
jbe
stos
jg
int
adc
jo
mov
loop
mov
push
mov
jbe
std
jo
or
mov
xchg
pop
mov
cmp
xor
adc
or
fmull
sbb
emms
arpl
push
inc
jge
pop
lods
and
ja
mov
add
int3
fiadds
cltd
in
add
jp
mov
mov
pop
jo
and
or
sub
aad
maxps
xchg
pop
inc
cmp
lahf
xor
adc
pop
gs
cmpb
push
ljmp
aaa
dec
je
jne
neg
cmp
cmp
push
xchg
lret
jmp
inc
daa
daa
sub
jnp
push
mov
sbb
loope
addl
adc
insb
dec
cmp
add
outsb
pop
dec
pushf
jae
or
add
sbb
test
scas
decl
in
cmpsl
jmp
cwtl
cmp
add
and
add
adc
rcll
outsl
ret
dec
aad
shlb
mov
outsb
jmp
dec
inc
pop
adc
add
add
sahf
mov
int3
mov
push
cmp
pop
jb
cmp
imul
cmp
or
lret
fisttpl
xor
pop
sarl
jmp
ja
pop
popa
cmp
cmp
mov
mov
das
jmp
add
cmp
inc
pop
or
inc
addr16
fistl
pop
sti
jne
out
adc
in
cltd
mov
push
or
dec
js
aad
mov
or
addr16
cwtl
fcmovne
out
mov
mov
cmp
fdivrs
iret
stos
jno
rcrb
pop
inc
cs
jg
cltd
and
outsb
push
std
or
rorb
cmpsl
hlt
pop
andl
insl
mov
jmp
pcmpgtb
adc
push
sub
mov
pop
cmp
sub
or
lods
leave
mov
mov
dec
push
mov
pop
push
push
and
fnstsw
mov
mov
scas
cmp
cmp
test
gs
mov
add
sbb
xchg
iret
jp
xorb
ret
daa
add
add
mov
mov
and
or
or
js
push
loop
inc
xchg
sbb
add
aas
iret
pop
es
ss
mov
enter
rolb
cmp
jb
loope
lret
arpl
sub
int3
jg
adc
adc
shll
test
stc
adc
pop
pop
popa
mov
popa
mov
sbb
pop
pushf
pushf
addr16
xor
sti
fxch
adcl
mov
jae
mov
xchg
cwtl
loopne
rorl
fwait
mov
xor
sbb
leave
bound
mov
xlat
or
adc
mov
or
daa
mov
sbb
out
and
xchg
dec
and
fdivl
and
dec
dec
jno
out
mov
ljmp
pop
cmp
mov
bt
or
dec
rcrl
jle
mov
add
lcall
aaa
je
outsb
nop
push
ss
push
popa
xchg
mov
popa
and
in
fs
in
jmp
and
aad
enter
add
imul
mov
mov
mov
cld
pop
and
inc
das
cli
and
xor
bound
xor
or
es
jo
das
mov
in
mov
leave
pop
in
add
shlb
shr
cmp
pop
lds
inc
stc
jno
inc
and
and
jns
jo
jecxz
xor
jp
jecxz
inc
ja
sub
out
dec
cmp
cld
lret
mov
dec
pop
jo
add
jle
adc
mov
push
mov
xlat
push
test
xor
xor
jmp
xorl
sub
lods
mov
jmp
pop
lods
call
mov
mov
pop
stos
pop
pop
fcomps
inc
or
sub
add
or
aaa
je
push
mov
mov
inc
sbb
lds
popf
lcall
mov
inc
push
sub
pusha
fstpt
scas
or
cmp
pop
jae
mov
sbb
mov
popf
imul
roll
cmp
fwait
test
xchg
dec
mov
pop
or
scas
popf
mov
das
sbb
cs
add
jp
cmp
scas
pop
pop
pop
call
sbb
insl
das
in
xor
sub
stos
jns
icebp
ret
movb
jp
pop
and
sbb
je
xlat
mov
sub
or
mov
ficoms
rorb
sub
adc
ja
jg
pop
jecxz
add
mov
cwtl
pushf
notl
and
xorb
sti
add
adc
int
lea
pusha
xchg
lods
and
outsb
rdpmc
xlat
pushl
mov
cmp
jbe
mov
inc
xor
or
inc
mov
insl
dec
insl
pop
outsb
cltd
andb
and
sub
cltd
jne
scas
lods
stc
xchg
mov
adc
ss
mov
push
popf
pop
ss
sbb
adc
add
jp
dec
cs
sbb
sbb
ljmp
enter
inc
adc
in
jbe
mov
push
pmulhuw
sbb
prefetch
pop
or
jno
leave
in
ja
xchg
jge
cmc
lcall
xor
adc
movsl
fistpl
xor
add
fwait
mov
fistpl
dec
pop
popf
imul
inc
das
or
pusha
ror
cmp
jmp
aaa
out
scas
setb
lock
jns
mov
pop
inc
insl
ret
mov
aas
dec
pushf
test
mov
and
lea
pop
or
pop
xor
mov
fsubrp
movsb
push
dec
cmpsl
cmp
and
popf
jno
add
sub
adc
aaa
out
sbb
dec
daa
addr16
adc
mov
pop
scas
mov
mov
add
pop
jne
fisttpll
mov
jns
mov
stos
fwait
jg
xor
cmp
mov
xor
push
pop
mov
adc
cmp
pextrw
call
roll
sbbl
ja
push
and
jbe
maxps
in
and
cmp
xorl
push
popa
jecxz
cmc
inc
aad
adc
cmp
fildl
sbb
pop
xchg
mov
inc
pop
jbe
loope
xor
sbb
sub
mov
fabs
aad
rorl
js
stc
insb
fisubrl
push
in
lea
pop
or
fincstp
sbb
sub
movsb
jb
mov
sub
cmp
push
loop
test
sbb
pop
pop
mov
sub
fnsave
and
adcl
insl
rolb
pop
jmp
push
adc
popf
int3
aaa
and
movsb
mov
cmp
fisubs
test
scas
mov
inc
and
xor
sub
mov
and
pop
add
dec
pop
dec
ljmp
cmp
sbb
pop
lret
pusha
add
adc
jb
in
das
mov
test
cmpsb
mov
mov
push
jp
and
outsb
cmp
xor
mov
xchg
sub
inc
sub
xor
add
ss
outsb
adc
lea
mov
pop
dec
dec
dec
fstpt
cltd
loope
pop
fdivrs
jmp
jns
stc
pop
dec
cmp
sbb
pop
test
negl
push
sub
xor
sub
out
lods
arpl
pop
lea
cmp
mov
mov
loope
jbe
mov
xor
inc
lahf
mov
test
insb
fistpl
push
enter
adc
mov
mov
mov
cs
cmp
or
subl
mov
inc
sub
fisttpl
pop
jg
es
enter
xchg
jnp
pop
cmp
aaa
cwtl
ja
and
dec
add
movsl
ret
std
sbb
lods
in
add
imul
dec
in
out
and
adc
sti
cmpsl
pop
daa
mov
push
pushf
pushf
jno
mov
ja
mov
mov
jns
das
mov
mov
arpl
je
inc
and
dec
insl
daa
ja
sub
cmc
test
mov
cmp
dec
sahf
dec
adc
cmp
add
pushf
push
sbb
inc
mov
jno
push
xor
push
ds
push
jge
outsb
push
mov
in
into
out
pop
clc
ficompl
subl
cwtl
pop
xor
fstp
push
mov
sub
mov
sbb
adc
daa
jno
adc
adc
outsl
sbb
add
push
xchg
aam
es
adc
adc
jo
jae
lahf
loop
and
and
fstp
jo
sbb
insl
add
fildl
test
dec
fcom
ret
aas
test
dec
sbb
lret
popa
xor
insl
test
fwait
clc
xor
push
xchg
xor
dec
jle
lcall
mov
adc
pop
pop
xor
inc
xor
and
xchg
fcmovne
inc
insl
lret
out
test
xchg
cwtl
and
xor
jns
es
lods
rcr
sahf
cmpsb
inc
ret
aam
movsb
sub
enter
test
ljmp
test
sub
or
sbb
pop
mov
in
add
jg
out
rorb
popf
sub
and
insb
add
ret
inc
xchg
aas
adc
mov
je
push
sbb
mov
sbb
test
ja
xchg
and
jmpw
jae
push
inc
ja
stc
cmpsb
add
pushf
mov
cmpsl
jo
xchg
lea
es
dec
lds
lods
out
insl
add
or
repz
js
vmovaps
in
xor
jns
fists
fistpll
lcall
ljmp
jae
imul
icebp
xchg
imul
xchg
lahf
jo
in
iret
out
sbb
or
push
cmp
sbb
fdivrs
xor
popf
ja
in
push
pop
pop
fstpt
lea
jecxz
and
adc
lret
jp
lret
adc
cs
test
dec
inc
int
jne
sbb
sbb
mov
pop
dec
insb
sbb
loopne
sbb
pop
test
xchg
xorl
mov
mov
pop
or
xchg
cwtl
pushf
pushf
loop
adc
pushf
nop
xchg
adc
mov
mov
sub
pushf
jns
mov
or
adc
data16
loopne
lods
movsl
cmp
xor
jecxz
mov
pop
xor
xor
and
mov
pop
jo
lahf
mov
daa
fsubrl
sbb
xchg
mov
pop
cmpsl
fcomp
jno
dec
bound
cmpsb
scas
push
xor
loopne
cmc
sbb
or
arpl
lods
arpl
mov
fildl
pop
jno
push
leave
mov
sbb
into
dec
jg
push
pusha
mov
stc
push
jnp
movsl
aam
adc
scas
jne
xor
inc
and
mov
in
sub
pop
mov
leave
cmp
pop
mov
jno
mov
out
sub
repz
push
icebp
push
adc
pop
loopne
nop
lods
adc
sbb
repnz
xor
add
ds
push
dec
mov
mov
sub
pop
insl
insb
jmp
mov
xchg
aas
cmpsl
rorb
add
pop
dec
leave
inc
mov
adc
push
jge
mov
pop
cli
xchg
int
sarl
sbb
or
xchg
lds
mov
or
cmp
add
xor
ja
dec
popf
popf
mov
add
fcmovnu
js
pusha
ret
add
clc
add
pop
lods
lds
loopne
loop
or
cmp
or
pop
mov
in
in
das
jbe
sub
mov
fsubrl
ja
pop
or
and
pusha
xor
pop
jo
mov
stc
pop
aas
shrl
jne
icebp
jmp
push
stos
inc
fstl
inc
and
outsb
das
jmp
inc
mov
inc
xchg
adc
rcrl
and
cmp
jnp
xorb
fcoml
test
in
pop
loope
pop
mov
rol
cmp
cmp
in
gs
push
pop
aaa
pop
lea
inc
rcrl
ds
add
or
pop
ja
push
dec
cmp
or
insl
xor
stc
sbb
mov
lds
and
pop
cmpsl
outsb
mov
sbb
jmp
insl
punpckhwd
fadd
jbe
into
test
aaa
dec
fincstp
cmp
push
jmp
jbe
int
inc
lcall
push
add
and
adc
mov
adc
or
adc
push
in
mov
dec
scas
imul
lcall
or
aad
ss
outsl
data16
dec
outsb
add
lds
insl
adc
add
je
xor
jmp
outsb
repnz
in
adc
add
inc
pop
sub
push
pop
outsl
in
or
aad
orb
sbb
mov
daa
mov
pop
push
call
addb
jno
nop
add
jns
sbb
pop
mov
repz
pop
inc
pop
inc
fsubrl
cmp
mov
andl
jg
jp
pop
cmc
mov
xor
fisttpl
ret
insl
das
cmp
pop
movsl
gs
fcoms
push
dec
push
sti
pop
fidivrl
aad
loop
push
pop
jecxz
repnz
jg
bound
mov
leave
xor
in
aaa
lods
pop
lods
jae
xor
mov
out
popf
jp
sub
aaa
xchg
pop
pop
add
sub
movl
shlb
outsb
and
or
fmuls
inc
out
repz
pop
cmp
push
or
push
ret
xor
mov
push
jmp
lds
movsb
lea
fidivs
in
orb
lret
jmp
invlpg
imul
jo
pop
adc
jb
dec
push
cltd
icebp
or
push
jnp
pop
shl
and
outsb
pop
mov
push
ret
mov
std
mov
cmp
xor
sbb
mov
in
loope
aad
pusha
aaa
mov
imul
jnp
outsl
adc
jnp
insb
js
push
or
fwait
lods
lds
xchg
pop
xchg
icebp
mov
gs
add
fdivrs
ja
fdivl
fwait
stos
movl
out
in
cs
adc
jnp
push
adc
orl
stos
lea
adc
mov
xchg
fldt
decl
xchg
pop
pop
jne
bound
rol
dec
sbb
rorl
mov
mov
lahf
sbb
cs
mov
mov
pop
cltd
daa
rcl
inc
sbb
sti
jle
aaa
pop
or
test
push
add
popf
lret
push
jne
pop
cld
adc
fwait
inc
ror
mov
das
out
inc
fistps
movsl
test
push
test
fdivrs
xor
inc
fs
or
dec
or
inc
lods
cmp
pop
mov
sbb
pop
rorb
sub
add
sbb
cmp
les
mov
push
lahf
das
sbb
ret
enter
cs
or
dec
stos
fcomi
jp
in
inc
frstor
pop
jnp
cmc
pop
xchg
lds
adc
ja
push
or
js
push
add
and
push
pop
imul
daa
sbb
fdivrl
imul
fs
loopne
add
push
add
mov
enter
leave
pop
inc
gs
mov
cltd
jne
mov
jbe
jmp
inc
or
outsl
adc
clc
cmpsl
rcl
sbb
jg
sub
inc
xor
mov
mov
pop
or
setne
cmp
insl
mov
ja
test
in
mov
mov
repz
test
insl
ret
mov
pop
popa
in
or
mov
pop
lods
lea
out
pop
add
and
xchg
sbb
aam
jecxz
pusha
loopw
pop
xchg
icebp
mov
jne
pushl
pop
xchg
mov
fisubl
mov
imul
pop
inc
mov
jne
mov
jbe
cli
mov
jnp
lahf
cs
push
xlat
mov
pop
pop
loop
pusha
inc
pop
in
sbb
push
pop
ret
dec
cmpsl
or
xchg
imul
mov
popf
jbe
dec
out
loopne
dec
roll
jb
orb
sub
or
jb
push
sub
cmp
pop
mov
jmp
lcall
adc
clc
es
outsl
xchg
cmp
sub
popa
xchg
push
sub
cmp
push
es
and
sbb
fisttpl
xchg
mov
mov
fwait
outsb
mov
jmp
xor
adc
scas
cs
arpl
add
cmp
subb
inc
lcall
jmp
outsb
xchg
popa
pop
gs
dec
push
insb
push
flds
jnp
ret
lods
dec
int
xchg
mov
xchg
dec
fwait
push
push
or
mov
xor
sarl
orl
stos
push
shlb
xor
orb
outsb
add
sbb
cmp
mov
fisttpl
lods
or
sub
sub
jo
adc
pop
in
nop
sub
mov
mov
mov
mov
mov
cmp
daa
iret
cltd
or
jmp
pop
insl
pusha
mov
dec
test
mov
xlat
ret
adc
sub
sti
push
add
push
and
cli
add
adc
ss
jbe
xchg
mov
cmp
push
xchg
or
lcall
sub
adc
movsl
push
arpl
sub
cltd
push
xor
mov
adc
int3
test
dec
pop
adc
jge
inc
fwait
sbb
arpl
faddp
idivb
jmp
jmp
ja
fmuls
imul
hlt
sti
adc
out
sub
jg
jmp
sbb
dec
xchg
or
rcrl
das
sub
or
xchg
call
xchg
ret
mov
inc
sbb
scas
add
mov
in
mov
xor
push
pop
hlt
lcall
lods
lods
dec
mov
and
mov
sahf
cmp
mov
inc
filds
test
shrl
sub
out
test
out
cltd
xchg
ja
repz
xchg
call
das
xchg
cmp
sub
cs
test
xabort
xor
in
fcoml
lock
pushl
mov
in
cmp
mov
sub
cmp
ret
pop
lods
sbb
outsb
test
sahf
movsl
inc
aas
or
gs
jb
xchg
mov
cmp
inc
jecxz
sub
outsb
sub
dec
cmpsb
mov
sahf
sub
sar
cmp
mov
shll
mov
xchg
cs
mov
fildll
mov
fiaddl
andl
fcoms
cltd
cs
cld
cmp
mov
test
out
es
loope
sar
fcoms
mov
popl
mov
jb
mov
xchg
stc
rcr
cs
cmp
call
data16
or
insb
cmp
lcall
add
loope
lcall
mov
inc
fcmovu
call
jns,pn
mov
fs
sbb
inc
psrlq
jg
cli
cmp
cmc
pop
mov
fcomip
jne
stc
test
push
lcall
dec
cmovae
outsb
push
push
std
push
xorl
or
cld
lcall
jne
mov
fistpl
jmp
pop
xor
pop
jnp
mov
jmp
cwtl
test
xchg
jno
adc
cmpsl
mov
lcall
pushf
xor
xor
or
adc
clc
nop
sti
shlb
or
sub
pushf
repz
movsl
fiadds
mov
incl
stc
mov
cld
in
iret
iret
xor
bound
mov
and
daa
pushf
inc
into
and
decl
sub
mov
xchg
leave
push
lcall
xchg
pushf
ljmp
jmp
out
sbb
cmpsl
fs
mov
mov
dec
xchg
cmp
jne
sub
in
dec
scas
nop
or
stc
push
fwait
dec
adc
dec
cmp
inc
ljmp
xchg
push
jb
mov
cmp
shll
out
jns
lret
push
in
scas
gs
ret
adcl
incl
cwtl
mov
xor
ljmp
sbb
and
push
movsb
push
xor
out
lcall
nop
jmp
sub
fmuls
clc
adc
mov
mov
add
notb
rclb
dec
sbb
insl
mov
add
sub
cmp
mov
lock
fdivrp
mov
inc
aas
push
ficoms
daa
les
imulb
call
test
subl
aas
sub
mov
hlt
call
pop
sub
sbb
and
shlb
loopne
lods
fiadds
xor
ret
decl
dec
sbb
and
shlb
adc
jl
popa
ljmp
and
outsb
dec
mov
ret
xchg
mov
dec
pusha
ja
add
xchg
mov
loop
jmp
mov
in
jp
cmp
rcrb
call
pusha
xchg
test
mov
push
mov
cli
out
loope
push
add
adc
daa
je
les
negb
insb
jle
jno
push
jge
adc
jns
xchg
xchg
dec
jnp
add
mov
pushf
mov
xchg
or
lds
or
lcall
cmp
pop
push
pushl
adc
nop
add
and
and
sti
sbb
jl
pushf
ud0
das
clc
adc
mov
mov
cmp
hlt
shll
cld
cli
inc
nop
and
into
or
pushl
sub
lahf
icebp
dec
add
xorb
xor
popa
or
mov
xor
decl
mov
insb
push
xchg
shlb
loope
hlt
pusha
iret
jg
popa
dec
lods
sbb
movsl
fwait
lcall
shll
rcrl
mov
cmc
mov
int3
js
cltd
adc
push
lods
and
popf
jo
loop
call
mov
loopne
or
mov
jbe
and
dec
xchg
cmpsb
adc
inc
mov
mov
std
inc
adc
test
test
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
arpl
lahf
jbe
jmp
ljmp
mov
push
pop
dec
xchg
shl
inc
mov
rcrl
xchg
dec
adc
insb
popf
mov
call
outsl
and
add
imul
outsl
inc
lret
mov
mov
xchg
jp
cmp
mov
loope
mov
subb
lret
xor
mov
ret
aam
push
sub
jb
push
add
shlb
xor
or
xchg
add
fstp
mov
pushl
mov
int3
bnd
sub
jnp
add
push
push
push
icebp
xor
in
jmp
imul
adc
sub
lcall
add
sub
push
mov
insb
adc
dec
and
lods
jmp
out
pop
pusha
shl
add
sbb
call
jno
hlt
lahf
mov
xor
mov
jl
in
jmp
dec
roll
test
mov
lods
jmp
cmp
jno
mov
in
and
hlt
pop
mov
jmp
decl
sar
popf
sbb
mov
mov
mov
je
mov
decl
loope
cmc
lea
fxch
dec
fistps
pop
jmp
inc
sub
in
mov
addr16
ljmp
mov
pop
xchg
mov
push
into
push
shll
inc
les
dec
cmpb
lock
cmpsl
inc
lcall
jnp
and
push
push
xchg
mov
mov
mov
and
jb
mov
ljmp
xor
push
dec
lock
movsl
add
in
lahf
dec
inc
and
lcall
pushl
dec
into
xor
or
xor
nop
subb
mov
sub
sti
stc
jne
cmp
leave
push
adc
sarb
notl
cmpsb
pop
jg
mov
add
decl
cmp
xchg
std
enter
inc
pop
mov
xlat
shlb
clc
or
mov
js
sbb
fcomip
jp
rcr
xlat
adc
sub
into
shr
pop
adc
arpl
call
repz
inc
cwtl
movsl
cmp
push
fwait
sbb
lods
add
aaa
inc
jle
aad
sbb
fistpl
jns
xchg
daa
pop
push
pop
adc
adc
push
out
pop
hlt
push
adcb
icebp
jl
stos
and
mov
ljmp
iret
shrb
add
jl
bound
imul
mov
push
neg
insl
mov
xor
int3
and
incl
idivb
loopne
or
cmpsl
cmp
lods
jae
pushl
faddl
cmpsb
sbb
dec
xchg
fbld
cltd
arpl
mov
jmp
adc
cmp
push
jbe
sbb
cmp
xchg
sbb
into
mov
pushl
xor
pop
sub
add
setne
jno
inc
cwtl
inc
sub
mov
push
clc
ljmp
mov
push
outsb
out
pop
dec
add
jge
sbb
jecxz
ret
pop
mov
incl
pop
adc
sbb
mov
stos
lea
xchg
mov
xchg
sbb
or
jmp
int
sub
lret
test
xor
cld
jle
mov
decl
push
cmp
in
cli
xlat
mov
dec
xlat
aam
shl
movsb
inc
mov
decl
inc
sar
bound
dec
jle
xor
call
jg
xlat
aas
shrl
xchg
xor
movsl
lods
pop
pop
ja
or
shrb
int3
frstor
ret
adc
incl
jnp
test
arpl
push
scas
call
fsubp
repnz
jb
xchg
mull
mov
or
xchg
jne
fs
mov
cmpsb
pop
jno
subb
out
jmp
test
xchg
cmp
mov
mov
adc
jo
imul
mov
jg
decl
in
cld
dec
mov
cmpsl
or
outsl
pusha
imul
incl
pop
cmp
sub
lahf
add
or
dec
add
push
iret
clc
loopne
in
out
cmc
adc
movsl
dec
pushl
std
ljmp
out
mov
inc
adcl
jbe
aas
int3
dec
leave
xchg
aam
scas
subl
ss
adc
and
mov
sbb
outsl
mov
xor
cmp
ljmp
or
add
sbb
cwtl
jno
les
xchg
cmpsl
lds
adc
sub
mov
fdivr
ljmp
adc
aad
fwait
sub
jo
inc
push
cli
pop
xor
pushf
push
jmp
jmp
out
and
out
sahf
pop
outsb
and
adc
fstpl
or
je
push
js
inc
pushl
popa
fincstp
xchg
iret
dec
mov
dec
in
and
movsb
xchg
lahf
cwtl
es
fisubs
imul
mov
out
and
add
jo
mov
sbb
lcall
dec
push
mov
push
es
sub
xor
out
movsb
data16
outsl
lcall
ljmp
out
insb
and
dec
dec
jo
xor
movsb
pop
sub
inc
xchg
pop
inc
mov
mov
lock
repz
test
jae
jb
jne
and
push
pop
lret
xchg
icebp
pushl
mov
hlt
sti
shlb
dec
pop
mov
subb
xchg
fbstp
lods
xor
adc
mov
insl
xchg
mov
sub
jmp
jns
ljmp
clc
incl
xor
nop
scas
xorb
mov
aas
push
dec
test
call
mov
lods
fildll
sar
push
out
adcb
js
imul
pop
lcall
js
das
jecxz
imul
pushf
or
sti
cmpsl
or
adc
fistps
xchg
inc
pop
fdivrs
js
int
add
das
fiadds
sti
cmp
addl
std
xchg
insb
mov
cs
lcall
mov
outsb
lahf
jecxz
lods
adc
inc
or
xchg
icebp
cmpsb
fwait
mov
push
dec
cmp
idiv
dec
sub
loope
fmuls
cmp
pop
sbb
sbb
pop
add
lret
icebp
and
mov
incl
mov
mov
std
push
fdivs
fistpl
jge
repnz
mov
jb
xchg
or
sbb
jl
push
cs
mov
ret
add
push
dec
ja
fisttpll
fildl
dec
fldl
push
popf
aas
fdivl
jecxz
mov
or
lcall
hlt
repnz
pusha
xor
insl
or
mov
jae
ds
hlt
lock
dec
lcall
rcll
xor
icebp
in
aaa
push
and
int
jmp
xchg
and
jno
enter
cmp
lods
ljmp
ljmp
push
jno
punpcklwd
aad
fcompl
jp
jl
sbb
in
rcrb
addl
xor
sub
mov
inc
and
cmp
push
sti
mov
data16
jmp
fnstsw
sub
jl
sub
and
int3
fwait
mov
xor
cmpsl
dec
cmpsl
mov
jns
dec
int
and
movsb
leave
mov
mulb
shr
or
decl
jl
jmp
orl
dec
iret
cli
je
call
pushl
in
cmc
sar
mov
push
add
and
mov
in
clc
js
cmp
icebp
incl
call
jns
sbb
push
icebp
lcall
cmp
mov
or
dec
and
pop
js
fcmovnb
pop
addr16
adc
jnp
ret
mov
lock
dec
mov
les
popf
inc
jnp
add
iret
dec
cmp
pop
or
lret
out
test
call
xchg
hlt
subb
pushf
scas
mov
mov
jno
mov
mov
out
jnp
cmp
fnstenv
xchg
jb
jns
pop
mov
cmpsb
jp
test
fwait
or
lcall
sbb
inc
lock
loope
das
insb
xchg
jo
aas
insl
aam
lea
aam
add
mov
push
dec
sti
stc
test
jns
jb
into
add
cltd
sahf
imull
cs
ja
xor
pop
lea
les
pop
add
outsb
mov
ljmp
stos
or
sub
in
rclb
sbb
lret
stos
in
jmp
popl
pop
cli
xlat
jb
mov
sub
ret
jmp
sbb
shrl
and
xchg
xor
sarb
add
pop
mov
cld
mov
out
mov
mov
dec
mov
in
call
mov
incl
inc
dec
loopne
push
cli
sub
out
out
pop
aas
in
mov
fs
gs
push
ud0
lcall
ret
xor
mov
sub
decb
mov
sub
sub
sahf
in
lock
cmp
push
mov
mov
mov
shlb
mov
loope
pop
insb
pop
mov
and
inc
test
pop
ljmp
pop
or
pushl
sub
movq
cmp
outsl
lea
into
cmp
lcall
lret
inc
repz
push
dec
mov
arpl
mov
je
pushl
mov
outsb
insb
adc
scas
pop
repz
dec
adcb
movsl
or
fidivrs
pop
or
sti
jl
scas
call
lea
sarl
push
in
cld
mov
ds
jp
mov
call
in
push
movb
call
dec
test
aas
out
add
ljmp
jp
push
sbb
add
and
sub
roll
aad
add
cmp
scas
stos
dec
decl
xor
push
push
add
sub
ss
dec
inc
hlt
insl
pop
jmp
hlt
mov
xchg
std
xor
xorl
mov
jb
std
incl
sub
ret
das
cmpsb
push
in
sub
pusha
fisubrs
xchg
incl
pop
mov
mov
ss
lret
and
add
sub
or
inc
negb
inc
inc
fcomp
stos
cmp
inc
iret
mov
pushl
sbb
in
stc
cs
mov
jge
mov
push
push
jbe
lds
call
in
xchg
adc
sti
cmpl
cmp
repnz
jp
jge
daa
ret
pop
sbb
push
les
and
cltd
xor
stos
call
std
xor
fwait
aad
das
sbb
enter
pop
aaa
xchg
dec
outsb
fs
call
pushf
sbb
push
inc
inc
lods
shrl
push
mov
push
xchg
mov
lods
mov
fdivr
mov
add
rorl
aaa
inc
popa
das
sub
insb
mov
fcomip
std
subl
jne
jno
adc
xchg
loopne
lcall
xorb
ljmp
out
mov
lcall
nop
jb
dec
mulb
nop
inc
lock
mov
sysret
xchg
sbbl
xchg
insl
in
xor
pop
cmp
jecxz
push
xchg
lcall
mov
imul
jns
fcmovbe
stc
and
inc
cmp
push
and
mov
sbb
lock
inc
in
int3
lahf
mov
scas
or
cmc
sti
cld
jge
in
hlt
pop
mov
decl
or
adc
pushf
jle
adc
push
sbb
mov
cli
mov
lds
xor
mov
pusha
pusha
jmp
dec
adc
out
push
imul
and
or
loopne
lret
add
scas
sub
fstpl
mov
sub
adcl
hlt
rolb
mov
xor
call
outsl
pop
xor
hlt
sub
jmp
jbe
pop
out
std
ret
es
inc
pushl
std
sti
cld
into
testb
lods
mov
mov
fildll
inc
out
out
call
cld
xchg
xchg
or
and
jb
cmpl
dec
pop
cmp
mov
data16
lock
push
and
insb
insb
js
shlb
js
insl
jb
in
nop
mov
pushl
xor
jo
fxtract
std
daa
xor
movsl
push
mov
pop
rcll
lcall
scas
xchg
aam
aaa
push
arpl
sub
movsl
sahf
mov
ret
addl
sbb
push
pop
outsb
call
mov
mov
insb
inc
loopne
movsl
popa
jae
das
in
lahf
pop
lcall
movsl
movsl
add
incl
xchg
xor
push
mov
inc
push
pop
xor
mov
or
inc
cmp
ljmp
mov
and
push
cwtl
stos
xor
jge
rolb
sbb
sub
clc
decl
movsl
mov
mov
lock
idivl
sti
pusha
and
mov
mov
add
xchg
push
sub
fsubrs
inc
jo
pop
cmc
and
sbb
lcall
pop
cli
dec
or
mov
orl
xor
jne
mov
xchg
mov
mov
lea
arpl
cmpps
popa
jb
mov
sub
or
popf
sub
and
pop
push
push
dec
and
fsub
pop
mov
xchg
jge
and
sub
test
sbb
ret
xchg
pop
push
sbb
inc
pusha
fcomip
cld
mov
fs
xchg
add
stos
cmp
je
and
xchg
mov
pop
mov
call
xor
sarb
push
stos
xor
int3
mov
jns
xor
sbb
push
sbb
push
push
loopne
rcrb
stos
loopne
sub
cmc
cwtl
xlat
ud1
sub
mov
std
lcall
pop
lret
popf
sbb
insb
imull
aaa
mov
int3
in
mov
cmpsb
mov
push
aad
ljmp
arpl
jg
pop
xor
lods
shll
dec
adc
dec
mov
in
ljmp
icebp
scas
fsts
fdiv
mov
adc
xchg
inc
mov
pushf
aam
dec
mov
movsl
pushl
dec
xor
mov
adc
sti
scas
xchg
dec
pop
xor
pop
mov
mov
or
decl
ss
roll
repnz
lret
in
push
push
and
pop
push
or
xchg
incl
sbb
aaa
gs
mov
xor
sahf
sub
ror
arpl
xchg
mov
idivl
sti
out
adc
push
push
sahf
ds
out
cmp
fs
std
decl
or
cmc
mov
iret
add
shll
sbb
ljmp
in
jl
inc
cwtl
sti
packuswb
cmpl
movsl
pop
cmc
lcall
cmp
rclb
fsubs
mov
sub
mov
and
push
ljmp
cli
or
dec
stc
and
cmp
and
and
aam
mov
insb
icebp
pop
cmpsl
fwait
enter
decl
or
sti
add
and
jbe
xor
fcomip
popa
jmp
cmp
cmpsb
rorl
pop
mov
and
stos
jbe
dec
mov
stc
insl
mov
push
inc
pop
mov
lret
fnstcw
push
movsl
push
lcall
sbb
hlt
mov
cli
out
test
jno
ljmp
cmp
sbb
popa
dec
sub
leave
ds
rcrl
pop
mov
decl
lahf
and
jmp
dec
in
hlt
adc
xchg
insl
aas
pop
pop
mov
test
cmp
out
jno
dec
jl
xchg
out
sub
out
jp
sbbl
mov
and
ljmp
push
xchg
in
jb
add
or
mov
in
mov
fsubp
enter
incl
ss
fwait
sub
push
add
pusha
lret
dec
or
loop
movsb
addr16
mov
lcall
aas
outsl
dec
mov
fld
lret
xor
test
insb
jb
outsl
xor
call
popf
jne
cmp
mov
test
add
or
outsb
rcrl
decl
es
mov
add
add
jno
loope
cmp
sbb
ret
out
xor
test
inc
xchg
mov
pushf
outsl
push
ds
bnd
adc
popa
cmp
mov
call
test
dec
dec
push
loopne
bound
sub
ljmp
mov
xor
fnsave
inc
mov
in
das
popf
adc
sarl
clc
cld
or
aaa
loope
and
mov
push
imul
push
jmp
cs
mov
lea
inc
add
shl
mov
mov
sti
dec
std
pushl
push
mov
push
insb
leave
andb
cld
dec
nop
test
decl
jns
pop
or
call
in
push
adc
es
or
cmp
bound
in
xchg
dec
adc
sbb
mov
sti
lods
pop
call
imul
imul
shl
jae
insl
sub
shlb
in
sti
imul
incl
xchg
xor
fdivr
cmp
fcoml
test
sahf
psrld
or
adc
pop
xlat
enter
jmp
aam
js
cli
leave
int
in
add
and
cs
xchg
push
mov
xor
repz
mov
decl
jae
jbe
push
and
aad
bound
inc
mov
or
cmp
lcall
ret
mov
out
aaa
or
dec
or
repz
mov
inc
data16
dec
mov
ljmp
cmp
pop
xor
or
jecxz
rcrl
rcrb
bound
mov
jmp
loopne
push
ja
pop
lea
dec
push
scas
adc
mov
jg
push
dec
push
loope
std
push
out
dec
repnz
cmc
popa
fs
jb
and
dec
xchg
arpl
lcall
sbb
cmp
andl
pop
ja
push
stos
pop
decb
add
test
gs
push
xchg
les
ja
repnz
inc
stos
aam
test
mov
xchg
jl
lahf
or
jmp
dec
xchg
inc
adc
cs
cmp
lcall
in
push
push
sub
call
lcall
das
fistps
ficoms
mov
mov
xchg
or
stc
mov
mov
std
out
pop
xchg
push
push
pop
sub
jmp
cmp
inc
call
inc
dec
lret
ljmp
loope
mov
cmc
cmc
scas
pop
insl
cmp
loopne
mov
sub
fsubl
call
pop
ret
sub
dec
outsl
mov
jl
rcll
es
jno
cmp
sarb
mov
filds
push
inc
or
pop
sub
insb
dec
and
rolb
iret
push
pop
ljmp
outsb
xor
sub
jp
and
adc
inc
loope
and
mov
jg
incl
jmp
or
popa
repz
mov
ljmp
cmp
push
lret
call
pop
mov
push
arpl
mov
popa
jg
push
adc
ror
mov
ljmp
and
sahf
inc
in
in
int
loope
and
fdivrl
cltd
fcoms
mov
push
loopne
jmp
testb
daa
sub
add
stos
cmp
lcall
sbb
jle
pushl
insl
xchg
push
test
jbe
das
pop
enter
xchg
scas
inc
xchg
fstl
inc
fisubrs
mov
jmp
call
push
push
rclb
pop
stos
mov
js
mov
cmp
jmp
rorl
stc
cli
lods
fucomip
movsl
popa
mov
sub
mov
cmp
std
decl
lods
cwtl
fdivl
cmp
push
jns
pop
push
xlat
rcrb
addr16
xchg
fcomip
incl
inc
stos
bound
mov
dec
outsb
push
inc
and
stos
inc
mov
push
outsb
cltd
cld
cmp
lcall
decb
outsb
dec
jo
mov
or
loope
inc
mov
aas
add
adc
call
sarb
sbb
mov
mov
sub
mov
cmp
scas
pop
push
push
aam
lcall
das
bound
or
scas
dec
outsl
inc
arpl
cld
dec
and
push
mov
cld
jmp
push
sti
xor
jp
rcrb
xchg
enter
sub
mov
aas
popl
call
ss
pop
pop
pop
jp
mov
mov
pop
xchg
inc
mov
cmpsb
into
mov
xor
sub
mov
mov
rorb
mov
mov
clc
orl
lcall
ret
jns
mov
push
jmp
jg
icebp
pop
lcall
pop
xor
int3
pop
mov
mov
sub
mov
mov
push
mov
out
inc
mov
push
adc
sub
idivb
int
ljmp
inc
fisubs
mov
mov
in
fildll
into
or
adc
fldt
out
mov
mov
je
movsl
xor
lds
adc
fisubl
cli
ffreep
sub
das
out
cmp
pop
out
rcl
pop
dec
std
in
dec
stos
xor
sub
inc
xor
sub
dec
jnp
dec
xor
in
decb
lahf
out
push
mov
mov
repz
mov
push
inc
add
sbb
add
div
in
rcr
cmp
aas
push
push
adc
xchg
add
cmp
add
jg
mov
out
incl
nop
add
nop
mov
nop
sub
pop
mov
push
jne
pusha
and
mov
outsb
rcrl
fisubl
xchg
push
enter
jnp
push
cmp
xor
scas
ljmp
imul
add
cmc
adcl
test
xlat
mov
aad
sbb
dec
push
sub
or
sbb
shlb
das
jb
dec
inc
scas
sub
pop
sub
mov
dec
push
adc
ljmp
dec
mov
or
pushl
jbe
cwtl
scas
mov
ljmp
insb
xor
cmp
cmp
adc
ljmp
adc
or
add
int3
rcl
dec
scas
ficoms
fisttpl
cmp
mov
inc
es
imul
mov
sub
js
stos
adc
lock
inc
pusha
dec
mov
js
xchg
les
xor
movsl
pop
adc
mov
cmp
xor
sahf
sub
pushl
int
xor
pushf
fmull
call
bound
and
mov
mov
add
insb
mov
cmp
sbb
sub
push
mov
inc
add
cmp
movsl
in
xchg
cmp
inc
sti
lret
jnp
incl
xchg
mov
xor
in
xlat
push
push
jmp
mov
cmp
jge
sub
pushl
mov
xchg
into
sub
fists
mov
inc
scas
mov
sub
incl
jp
stc
push
jne
jecxz
xchg
or
cmp
jecxz
and
sbb
hlt
clc
push
pop
flds
dec
sbb
int3
mov
lret
scas
mov
data16
enter
add
jmp
ret
jp
push
xor
pop
add
xchg
jo
popf
sti
sbb
lea
outsl
and
mov
and
fwait
dec
jecxz
pop
inc
ret
mov
or
cltd
es
jnp
cld
adc
imul
test
ret
pushl
fcoml
lock
enter
pop
repnz
mov
clc
mov
ljmp
push
fisubrs
push
roll
mov
repz
in
outsl
in
popl
mov
pop
push
add
mov
lods
lret
bound
sub
cwtl
fstl
jge
inc
repz
push
xchg
aas
mov
int
jl
ja
or
stos
add
push
insb
adc
xchg
incl
or
push
cmpsl
popa
insb
cmp
andl
jae
aaa
sub
mov
out
clc
adc
jns
pop
xor
sbb
and
pushl
push
aad
adc
pushf
push
dec
outsb
cmpsb
mov
adc
ds
pop
test
cld
decl
inc
dec
addr16
inc
fldcw
jo
pop
mov
fistpl
pop
sar
push
out
xchg
inc
cmpl
outsb
dec
sarb
movsl
fcomip
fs
push
int3
int
test
jns
fisttpll
cltd
jb
sahf
daa
shlb
pop
mov
and
int
xor
les
test
cwtl
repz
dec
out
mov
mov
jno
shr
mov
jle
loop
jno
sub
sahf
xor
scas
enter
call
xor
pop
sub
nop
pop
out
sarb
frstor
loopne
sub
hlt
call
and
add
xchg
mov
jg
sub
sbb
dec
out
clc
int3
mov
rcrb
cmp
ficoml
notl
cmpsl
imul
into
sbb
sbb
pushl
insl
jl
inc
pop
xor
xor
clc
push
mov
popa
test
aas
jle
fsts
incl
inc
int3
or
inc
jecxz
push
ljmp
or
mov
call
xchg
xchg
sbb
es
movsb
mov
xchg
repnz
mov
test
dec
xchg
xchg
fwait
test
and
jp
cmc
mov
in
push
jo
pop
sbb
mov
cmpsb
aas
mov
xchg
test
mov
jae
pushl
jnp
loope
inc
cmp
scas
insb
scas
push
jle
mov
push
lret
inc
and
mov
pop
in
pushf
imul
int3
cmp
daa
inc
popf
cmp
scas
or
clc
lcall
ss
sub
loop
cmpsb
sbb
cltd
addl
jbe
and
push
cld
scas
xor
mov
femms
mov
pop
rorb
inc
test
mov
sub
inc
aad
push
or
adc
ror
les
dec
push
cmc
push
xchg
xchg
sbb
js
sbb
jg
shrb
lcall
pop
cmp
xchg
jl
adc
pop
cwtl
sub
push
jne
lret
mov
xor
pop
inc
outsb
push
pop
cmpl
push
std
aad
loopne
mov
lock
mov
push
xchg
cmp
jecxz
adc
jmp
test
out
jmp
fcmovu
stos
lds
and
adc
hlt
xchg
cmpsl
dec
fstpl
lcall
dec
std
mov
add
mov
ss
jb
in
popf
icebp
xor
sar
call
push
push
outsb
leave
mov
inc
or
jnp
test
or
outsl
call
jns
lret
push
enter
pop
add
daa
xor
subl
mov
int
or
inc
sub
mov
out
aaa
loope
ret
adc
jle
cmp
aam
adc
push
ja
decl
jnp
mov
xchg
cmp
out
mov
and
pop
mov
dec
lcall
mov
lcall
push
mov
std
mov
rcrl
aaa
mov
or
jmp
mov
cmpsl
jne
xchg
cmp
insl
inc
adc
sbb
call
dec
icebp
xchg
fiaddl
pop
push
in
mov
popa
loope
hlt
lods
sub
aaa
mov
or
mov
xor
cmp
xor
addl
test
fs
shrl
in
xchg
pushf
loope
movsl
mov
cmp
mov
ja
push
aad
fidivrl
mov
loopne
pop
out
fldcw
push
scas
out
hlt
push
push
je
and
scas
insb
out
sbb
mov
add
or
dec
add
sub
call
out
inc
or
clc
jg
hlt
aaa
xchg
add
daa
xchg
mov
movsb
and
enter
data16
inc
and
jae
dec
mov
iret
jno
mov
pushl
stc
jl
scas
sub
xorl
xchg
mov
push
outsb
fstpl
ljmp
ljmp
pop
and
inc
mov
mov
sbb
mov
jne
es
push
cmpsl
call
sub
iret
outsb
test
dec
lds
ss
mov
div
jae
add
xchg
jnp
pop
shll
decl
jb
cs
xchg
arpl
pop
aad
cmc
mov
push
xorl
cmpsb
mov
repz
add
scas
cli
fimuls
xor
outsb
loope
les
cmc
enter
int
in
nop
test
push
mov
stos
xchg
stos
jmp
mov
pop
mov
pusha
rcrb
and
hlt
call
call
loope
in
mov
xor
xchg
fnsave
jb
movsb
idiv
sbb
pop
shlb
lds
and
xor
xchg
push
jmp
mov
jne
adc
or
sbb
xor
dec
addr16
fwait
test
dec
mov
inc
lock
je
pop
sbb
out
rep
daa
and
ret
pop
outsl
clc
fucomip
out
mov
xchg
pop
mov
mov
fcmovu
jbe
adc
mov
idiv
mov
or
out
jmp
cmp
mov
cmp
rorb
scas
pushl
push
imul
mov
mov
inc
das
addr16
inc
dec
jb
mov
jmp
dec
test
inc
jmp
lods
cmp
adc
xchg
std
stos
mov
sub
pop
or
inc
mov
cld
and
mov
cs
sbb
xor
or
add
add
subl
inc
add
fs
test
pop
aad
or
test
add
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
push
add
aas
push
movsb
jae
mov
cwtl
jge
cwtl
cmp
ds
mov
out
xor
jmp
stos
dec
sub
mov
add
inc
sub
push
lahf
jle
rol
xchg
push
adc
incl
xchg
gs
fbld
js
rcr
popa
lods
shll
ss
jnp
push
dec
xchg
adc
mov
pop
outsl
fdivrs
jno
xor
xchg
xor
cmp
lcall
mov
movsb
add
jbe
mov
mov
inc
rolb
jbe
mov
addr16
pushl
xor
repz
lds
mov
out
rclb
dec
cmpsb
cmp
test
stos
mov
ror
and
jecxz
loopne
inc
stc
movb
or
push
mov
inc
aam
mov
xor
pop
clc
mov
jb
mov
daa
sahf
repnz
mov
mov
mov
decl
push
push
mov
cmp
hlt
pop
lods
jp
scas
xor
sbbb
call
jecxz
sbb
out
repz
push
mov
lea
or
imul
adc
mov
sub
aas
cmp
bnd
cmp
sbb
adc
jb
int
cmp
cmp
in
jbe
aas
lods
loopne
mov
mov
lret
enter
xor
mov
pop
or
popf
sbb
pop
sub
jnp
jb
xor
dec
or
and
sbb
xchg
ret
jp
loopne
outsw
mov
lods
pop
jae
dec
icebp
xor
jle
mov
mov
ss
or
and
and
pop
cmp
imulb
lahf
xor
fcomp
movsb
out
mov
pop
or
jbe
mov
and
pop
idivl
pop
mov
cmp
and
or
push
xchg
insl
sub
pop
jno
cmp
adc
movsl
mov
flds
imul
or
loope
or
mov
mov
dec
ret
mov
pop
hlt
xchg
jb
lds
inc
lret
leave
pushf
pushf
pop
jo
fdivrl
testb
dec
mov
daa
xor
jbe
add
jns
dec
cmp
xchg
cltd
lret
mov
stc
pop
pushf
pushf
loop
add
mov
jns
pop
sub
cs
insb
jg
fsts
mov
pop
xor
in
enter
mov
pop
cmp
scas
cwtl
fnsave
sbb
in
into
outsb
aaa
in
das
jnp
push
fnsave
das
mov
orl
popa
ja
xor
insl
mov
dec
xchg
aas
scas
adc
xor
je
push
in
push
pop
sub
out
adc
dec
cmp
roll
jge
jbe
cmp
das
lds
cwtl
popf
ss
sarb
mov
mov
iret
xchg
cli
aaa
fsubl
sbb
xor
cmpb
insl
fnstenv
adc
out
push
adc
mov
jp
sub
mov
setbe
cmp
jnp
andb
pop
jo
aaa
mov
ds
leave
add
or
scas
mov
insb
dec
mov
inc
sbb
movswl
shrl
xor
das
mov
jbe
cmovge
outsb
jb
stos
sbb
lahf
sbb
jbe
jns
cmp
pushf
popf
cmp
stos
or
in
or
pop
xchg
cmpsl
shlb
lods
dec
es
sbb
ror
cmp
movsb
mov
pop
or
lods
mov
aas
cmp
rcll
mov
cli
flds
mov
outsb
lret
test
cmp
mov
dec
and
divb
adc
inc
jp
idivb
cmp
in
add
push
adc
jbe
in
jbe
pxor
in
xchg
in
xor
sbb
fldln2
adc
adc
leave
fxch
leave
xor
and
rol
jge
outsl
adc
pop
xor
out
out
insl
out
fwait
cmp
popf
hlt
ja
aaa
btc
xchg
add
scas
movd
fdivl
mov
fwait
cmpsl
in
xchg
cmp
outsb
mov
orl
jmp
pop
jbe
fidivs
mov
rcrl
cmpsb
xor
pushl
mov
jo
ss
movsl
xor
xor
push
pop
sbb
fiadds
adc
lret
jns
cmp
js
mov
arpl
cmpsb
pop
push
lds
shll
jne
xor
pop
js
test
outsb
mov
fwait
into
mov
push
stc
mov
xchg
mov
ret
xor
fistl
xlat
jno
pop
mov
sarl
or
xchg
sub
popa
jp
mov
cmp
jns
mov
aaa
faddl
sbb
pushf
loopne
lds
mov
daa
adc
ret
loope
pop
into
scas
les
jge
and
repnz
inc
lods
out
sub
lcall
rorl
dec
inc
sbb
add
adc
add
fcmovne
or
cld
cmc
or
flds
cmc
fisttpl
js
cmp
addr16
jbe
mov
pop
jg
lahf
inc
dec
scas
mov
idivb
outsb
mov
scas
xchg
dec
into
aas
pop
out
and
dec
int
and
mov
cmp
fxch
add
xor
mov
loop
imul
leave
cltd
inc
mov
lock
gs
lds
cmp
fnstsw
mov
adc
dec
sub
pop
repz
out
das
pusha
dec
sti
dec
into
outsb
mov
fistpll
sub
and
fisttpll
jg
lea
leave
sbb
inc
ds
mov
and
mov
lret
adc
or
pop
jo
sbb
leave
sbb
mov
mov
mov
pop
add
insb
mov
idivb
or
loopne
sbb
sbb
test
mov
xchg
adc
fnstenv
inc
clc
outsl
pop
mov
call
lea
inc
pop
fildl
das
dec
sub
outsl
add
rcrb
sub
cld
outsb
mov
icebp
inc
jno
popf
lds
xor
dec
mov
sub
fsubrs
mov
dec
sbb
xor
mov
mov
mov
xor
pop
nop
or
test
adcb
cmpsl
pop
ror
scas
mov
or
sbb
jbe
cmp
lea
pop
fstp
adc
fstpl
or
lret
loope
cmp
lcall
adc
sbb
fnstenv
jecxz
xor
das
mov
insb
subl
ret
dec
or
dec
xor
and
stos
jmp
mov
test
add
push
dec
in
fneni(8087
jno
rolb
and
mov
shr
loope
mov
in
xchg
cs
sbb
or
push
add
or
mov
xor
cmp
fdivs
mov
mov
fistps
int
daa
out
push
jns
mov
roll
push
push
inc
sbb
pop
xor
jb
dec
addr16
scas
dec
jno
leave
cmc
jg
adc
sbb
and
inc
int
sbb
test
sbb
sub
je
inc
emms
add
es
or
xchg
frstor
sbb
pusha
jg
out
xor
add
sub
movsb
push
fnsave
sub
pop
xchg
pop
dec
leave
das
mov
sbbb
cmp
adc
or
sub
or
sahf
mov
pop
scas
push
mov
leave
lods
scas
cmp
leave
mov
imul
loop
pop
jo
xchg
pop
sbb
test
add
mov
and
js
or
int
fcom
imul
rorl
mov
dec
pop
sub
lahf
fwait
sti
fstpt
pop
mov
aad
cwtl
xchg
ret
dec
roll
mov
adc
cmp
jns
mov
mov
insl
fisttpl
das
mov
push
loope
dec
cltd
mov
fsubp
push
or
fs
fnsave
stc
sbb
jo
jmp
mov
pop
sbb
pushf
fsubr
adc
cmp
jge
imul
sbb
loopne
int3
outsb
adc
xlat
cmpsb
pop
fstpt
sub
or
mov
ret
in
movsb
loope
mov
lahf
sub
cmp
xlat
loopne
mov
subl
sub
push
xchg
sbb
lcall
ret
jo
test
cmp
pop
pop
or
dec
es
in
std
pop
popf
mov
mov
ds
mov
jno
dec
repnz
dec
xchg
mov
movsl
in
fmull
movsb
lcall
dec
rcrl
pop
sbb
jb
test
push
ret
xor
inc
das
js
mov
andl
das
jp
ret
leave
or
and
push
inc
lahf
insl
jbe
in
ja
jle
aas
std
adc
insl
mov
std
cmp
mov
jo
orl
movsl
xchg
das
cmp
fsts
pop
pop
sub
sbb
or
jmp
xor
xor
pop
imul
popf
shl
orb
je
sti
sbb
dec
push
stc
and
dec
mov
add
dec
dec
mov
imul
mov
mov
bnd
adc
fildl
das
pop
mov
rcrl
dec
adcl
in
and
jp
mov
ss
shll
mov
sbb
jo
mov
pop
in
stos
xor
iret
mov
mov
xor
pop
ret
iret
jbe
dec
sarb
sbb
lret
stos
xor
aas
imul
cmp
xor
xor
sub
push
sub
outsb
mov
pop
adc
and
sub
insl
sbb
pop
xchg
mov
sub
ret
jo
scas
xchg
adc
fcmovne
mov
or
imul
pushf
flds
mov
sub
pop
stc
int3
dec
ficompl
sbb
cmp
fdivl
fwait
pop
ljmp
fmull
jge
pop
jno
adc
pop
cwtl
fsubrl
cmp
outsl
fsubl
mov
cmp
push
adc
xor
insb
cwtl
jecxz
xor
jecxz
outsb
pop
pop
aaa
leave
sbb
and
jno
add
imul
mov
scas
dec
sbb
sahf
mov
insl
sbb
stc
inc
xlat
movsb
mov
loopne
sub
loopne
mov
fidivs
xchg
adc
das
fistpl
xchg
or
insl
jbe
add
negb
inc
stc
adcl
jb
test
in
in
jbe
cmp
or
lock
inc
js
enter
jge
jecxz
xchg
mov
add
das
xor
ss
xchg
jne
iret
iret
pop
xchg
out
in
mov
shl
jge
das
pop
imul
cmc
mov
int
popa
in
imul
aaa
shr
mov
das
out
mov
repnz
adc
mov
addr16
pop
mov
lret
pop
aas
mov
jbe
jg
push
ret
dec
jns
pop
ffree
mov
stc
popa
and
jbe
mov
jmp
pushf
jp
inc
dec
cld
mov
lahf
pop
mov
sub
bound
outsb
pop
mov
mov
push
adc
jno
insl
and
cmp
daa
cmpsl
mov
out
sti
out
sbb
pop
rorb
sub
out
push
mov
add
sub
in
in
sbb
insb
or
sbb
pop
fwait
cmp
xchg
test
lret
pop
icebp
push
js
cmp
cltd
lret
dec
mov
mov
scas
and
jecxz
sbb
mov
and
and
mov
xor
jae
mov
outsb
jg
in
sti
ret
fnsave
imul
xchg
in
sbbb
aad
je
jecxz
xchg
or
or
lahf
or
and
push
in
sub
inc
rol
adcb
test
jo
push
movsb
fistpll
xor
fistpl
xor
cmp
sbb
frstor
js
xchg
xchg
xor
ja
sub
or
mov
stos
out
jmp
loopne
and
js
stos
pop
or
aam
aad
lret
xchg
xchg
outsl
call
adc
les
cs
dec
pop
inc
dec
pop
sub
aam
sbb
adc
jnp
push
mov
daa
dec
lahf
fcom
fwait
dec
outsl
xor
lahf
aas
adc
or
adc
push
sbb
or
sbb
jmp
or
outsb
sbb
ret
jp,pt
add
test
cmpsl
cmp
xchg
in
pop
sbb
leave
fildl
or
xor
imul
jo
popf
pushf
inc
jge
gs
cli
cs
ret
ficoms
adc
clc
and
mov
jb
loop
sbb
inc
xchg
lods
jmp
loope
movsl
jo
add
mov
fnstsw
jl
imul
outsb
popa
rcr
xor
btc
sbb
and
int3
pop
bound
popa
add
mov
mov
pop
dec
mov
cs
push
pusha
leave
fldcw
sti
mov
inc
jbe
xchg
or
jmp
xchg
or
mov
aas
and
mov
fdivs
and
pop
and
xor
adc
ficoms
leave
add
pop
mov
adc
test
leave
in
ja
das
idivb
and
rcrl
scas
mov
sub
lock
je
fisubrl
das
cld
mov
enter
sub
sbb
xorl
and
mov
into
cmp
movsb
insl
stos
cmpsb
or
jns
aam
ss
stc
push
call
xor
cmp
jle
xchg
dec
add
dec
sbb
insl
fidivl
jg
fucomi
lods
imul
dec
pslld
pop
lea
loopne
in
mov
into
ja
sbb
insb
jbe
fcmovnu
sub
in
adc
into
xor
cmp
jmp
mov
sbb
inc
cmp
sbb
mov
sub
mov
cmpsb
jp
fs
aaa
pushf
pushf
dec
data16
adc
jecxz
sbb
cmp
movsb
sub
ret
push
int3
mov
or
xor
imul
jo
add
inc
fistpl
in
jbe
sbb
sub
dec
adc
xchg
mov
pop
jo
aas
mov
adc
lock
mov
jo
cmc
aam
daa
jbe
rolb
jmp
cmp
int3
sub
adc
shr
lea
fnsetpm(287
sub
push
adc
fcomps
fstpl
lds
cmp
out
lea
adc
pop
mov
and
loopne
out
sbb
in
jge
sbb
pushf
add
lea
or
inc
mov
adc
sub
cmp
rcl
cmp
xchg
dec
sub
or
mov
jne
sbb
add
pop
cmp
mov
sub
pop
iret
fisubrl
popa
out
sbb
inc
lds
push
pop
test
in
mov
sub
pop
mov
out
stc
test
mov
cltd
mov
sub
push
pop
lock
in
call
xor
mov
ret
xor
jg
movsl
in
add
adc
xor
mov
or
pop
mov
cld
ffree
mov
repz
cmp
xlat
std
int3
ja
outsb
push
dec
sbb
notl
pop
pop
out
lcall
sub
test
mov
dec
mov
jbe
test
cwtl
add
fldenv
test
leave
sbb
dec
mov
or
faddl
sti
or
rolb
or
push
pushf
sbb
ljmp
cmp
pop
dec
test
and
outsb
pop
or
scas
leave
jns
mov
push
xchg
xchg
loope
mov
inc
mov
ret
aas
sbb
jno
fwait
sub
push
call
pop
xor
mov
loope
test
inc
shl
xchg
sbb
add
or
hlt
push
test
mov
fcomps
divl
push
add
jne
jp
xor
inc
jne
inc
jbe
jnp
xlat
lret
dec
jns
xchg
ljmp
xchg
or
mov
loope
dec
shll
xor
in
mov
out
sub
push
int
and
cbtw
add
rorl
pushf
fimull
ret
push
cltd
loopne
daa
shr
insb
jns
cmp
jo
adc
loope
popa
movl
pop
out
mov
loop
jge
popf
frstor
xor
aaa
pop
mov
fnstenv
or
cmp
add
mov
or
sbb
cmp
mov
push
jnp
mov
out
push
outsl
pushf
mov
daa
clc
pop
daa
push
faddl
ja
cmpsb
loope
fisttpl
adc
mov
jg
push
mov
fsubr
subl
lods
fisttps
inc
lahf
jge
xchg
or
nop
cvtps2pi
sub
push
xchg
sub
fsubrl
sbb
and
mov
or
pop
bound
mov
cmc
movsl
sub
hlt
jp
cmc
or
es
sub
sbb
popl
adc
mov
dec
in
inc
into
stc
xor
jb
xchg
push
cmp
es
mov
std
dec
pop
testb
out
sub
lods
dec
das
mov
mov
mov
cmpsl
cmp
dec
imul
mov
mov
adcb
rolb
jecxz
popf
fistpl
push
loopne
and
and
push
or
fidivrs
icebp
lds
xorl
mov
inc
fadd
or
xlat
ja
push
mov
jns
jne
daa
insl
sub
fwait
pop
xchg
push
cmp
sbbl
cmp
fdivrl
int
mov
faddl
jo
push
push
inc
mov
aam
jbe
std
cmp
jns
fnsave
das
cmp
or
mov
or
or
xchg
sbb
paddsw
pop
inc
inc
jge
in
loopne
adc
insl
adc
xor
xor
add
jp
mov
or
adc
or
js,pn
or
sub
aad
maxps
xchg
lahf
xor
xor
fisubl
gs
andnps
jo
ljmp
in
xchg
cmp
pop
jno
xchg
lret
jmp
add
jae
jnp
rolb
push
sbb
and
inc
loop
add
loop
cmp
lods
lea
stos
mov
or
popa
cmp
mov
test
cmp
in
cmpsl
jmp
test
daa
add
or
add
adc
ss
leave
outsl
aad
pop
lods
leave
xor
jmp
rcll
jge
and
pop
outsb
pusha
add
sahf
cmp
adc
int3
mov
xchg
mov
pop
jb
fwait
jbe
xor
imul
cmp
loope
jb
outsl
sbb
es
and
ja
fldt
sub
cmp
add
add
xor
pop
je
loope
mov
jmp
sub
push
pop
or
jbe
cmp
sti
jno
loop
jne
out
adc
dec
pushf
fdivl
popa
repnz
js
js
aad
jecxz
fwait
xlat
addr16
cwtl
fcmovne
out
push
xchg
cmp
jns
adc
sbb
add
sub
dec
enter
in
ret
fs
or
pop
ja
xchg
add
pop
dec
aaa
jo
lds
imul
loopne
fstl
pop
lods
sub
fucomi
pop
cmp
jbe
test
gs
lods
jns
cmp
mov
push
mov
pop
mov
dec
insl
aaa
push
xlat
outsl
sbb
outsl
test
sub
inc
jns
adc
imul
outsl
adc
scas
mov
xorb
push
sbb
packssdw
xor
mov
insl
pop
icebp
adc
les
or
js
fildl
pop
xchg
sbb
jecxz
pusha
iret
pop
jmp
out
rorl
cmp
enter
sbb
lock
shrl
cmp
sub
int3
sub
add
jg
add
adc
roll
pop
jo
lret
ret
sbb
adcl
sub
fsubl
insb
xlat
stc
sbb
sbb
jnp
mov
pop
scas
inc
out
sti
fxch
fsubl
jo
pop
sub
jp
add
add
sub
push
inc
addr16
stc
dec
inc
cmp
mov
or
pushf
lret
mov
or
in
mov
sbb
out
and
fdivl
dec
and
lods
sbb
sbbl
mov
ljmp
pop
loop
cmpsw
sbb
mov
ffree
or
pop
jns
leave
dec
rclb
add
dec
mov
xor
aam
por
push
roll
int
mov
int3
jo
jno
popf
js
pop
ja
mov
jae
aad
inc
rolb
mov
lods
inc
mov
mov
add
call
pop
and
fldt
cli
and
sub
imul
adc
add
popf
pop
jo
pop
in
add
cmp
mov
mov
jno
and
add
inc
inc
jns
or
bound
sub
pop
call
pop
xchg
out
cmp
cld
inc
sbb
arpl
aaa
lods
xlat
stos
test
jle
sub
and
adc
outsb
aaa
xlat
push
test
insl
lods
push
scas
xchg
jmp
xor
dec
fldl2t
mov
jmp
js
adc
pop
sbb
mov
sub
adc
push
sbb
jbe
mov
in
pop
or
xor
mov
add
inc
push
pop
and
mov
and
fldt
or
icebp
or
or
mov
jae
cmp
adc
push
dec
mov
xor
add
roll
cmp
or
std
xchg
fwait
and
fiaddl
xchg
dec
mov
pusha
or
scas
popf
mov
das
sbb
fiaddl
jo
loope
pop
jp
cmp
dec
pop
pop
pop
call
sbbl
movsl
or
icebp
inc
inc
fdivs
dec
das
stos
fndisi(8087
cld
jp
popa
add
sub
orb
pushf
lahf
pop
jg
pop
shrb
xchg
sub
mov
stos
jg
pop
les
cmp
mov
add
das
sbb
leave
pop
movsb
flds
shlb
jg
add
mov
lea
push
push
xchg
lods
and
test
xor
sbb
push
int
jns
enter
xor
or
dec
mov
rorb
xchg
shrl
sub
xor
sbb
adc
xchg
unpckhps
leave
push
pop
fsubrl
pop
rolb
ret
or
mov
jp
jbe
leave
in
cmp
enter
dec
dec
sub
enter
push
adc
pushf
pushf
mov
push
sbb
cmpl
fstl
fwait
divl
push
xor
mov
aad
adc
dec
adc
mov
mov
xor
leave
and
sub
jbe
arpl
imul
inc
das
or
or
mov
jp
mov
aaa
out
scas
andps
sbb
dec
js
cmp
scas
sbb
sbb
test
test
dec
pushf
or
inc
insl
or
adc
inc
pop
fsubrp
cmp
mov
adc
popf
iret
jge
outsb
mov
mov
loopne
mov
ss
repz
in
scas
mov
sbbl
std
pop
jne
mov
andl
push
lods
or
xor
add
mov
pop
xor
add
jne
std
pop
mov
data16
jbe
sub
psubsw
and
outsb
pusha
push
or
rorb
and
cmp
sub
push
stos
and
mov
sub
and
inc
aad
js
adc
call
dec
add
xchg
mov
mov
adc
mov
fistpll
loope
and
or
insb
inc
fldt
mov
or
or
or
fincstp
sbb
and
push
xchg
cli
cmp
jp
push
or
dec
test
sbb
mov
push
push
movsl
xchg
aas
mov
arpl
dec
sbb
mov
pop
or
jmp
int3
jbe
addl
and
je
popf
push
call
push
dec
pop
test
scas
push
aam
inc
jmp
or
adc
cmp
and
add
and
adc
dec
pop
mov
insb
daa
out
sbb
pop
lret
sbb
or
mov
das
mov
test
shl
mov
push
jp
and
jb
mov
inc
out
xchg
sub
inc
sub
xor
mov
ss
loop
test
dec
popf
pop
dec
ret
ljmp
mov
jmp
ss
and
out
mov
and
xchg
mov
insb
sub
xor
fsubrs
sub
loope
xor
sub
out
lods
arpl
adc
and
xor
jns
popa
mov
fsub
pop
scas
rorb
inc
xor
adc
insb
add
imul
xchg
sub
xor
pushl
mov
pop
cmp
push
pop
and
sbb
sti
aaa
dec
sub
sbb
inc
sub
jnp
add
es
and
jnp
xchg
jmp
sub
cwtl
ja
push
add
dec
add
inc
std
add
shrl
ss
in
dec
mov
rcrb
mov
in
mov
jno
jbe
mov
jns
loop
mov
sub
pushf
push
stc
arpl
subl
mov
in
adc
test
es
inc
test
sbb
daa
lcall
fmuls
test
push
es
mov
sub
or
pop
ds
push
jge
fcmovne
rolb
in
into
cltd
in
or
iret
or
rorb
fisttpll
push
mov
movsl
jo
mov
adc
inc
fwait
xchg
inc
outsl
adc
mov
push
pusha
or
aam
fsubs
sbb
adc
leave
push
mov
jg
cmp
ljmp
lea
fisttpl
dec
fdivrs
sbbl
test
sub
xchg
sbb
xor
insl
daa
xor
clc
push
bound
mov
leave
ud0
or
pop
orb
inc
dec
or
jb
stc
test
or
adc
jno
pop
mov
mov
stos
cmpsb
add
in
test
fcompl
js
aam
adc
mov
fwait
nop
adc
sub
sarl
mov
subl
rorl
fcompl
push
sbb
mov
pop
or
insl
xchg
aas
ss
not
or
mov
xchg
outsb
pop
sub
mov
repnz
add
dec
jp
jns
jge
sub
fsubrs
jae
loope
dec
ja
stc
cmpsb
pop
stos
sbb
pushf
mov
jmp
adc
jmp
shl
daa
lds
test
jp
push
repz
js
scas
cwtl
cmp
bound
xor
or
aas
lcall
ljmp
sub
imul
push
xchg
imul
in
and
adc
out
sbb
outsb
fsts
cmp
sbb
dec
push
pop
daa
popf
ja
in
call
lea
lds
lret
adc
jp
imul
xchg
pop
cltd
test
pop
lret
loope
fildl
test
insb
test
insl
jbe
add
mov
cwtl
test
sbb
sbb
sti
lret
mov
nop
fadds
cmp
or
rclb
mov
insl
mov
dec
scas
xchg
adc
imul
mov
xchg
data16
pop
movsl
mov
sub
xchg
and
cmp
xchg
push
pop
lods
movsl
cmp
test
xchg
fmull
jecxz
stos
nop
adc
jg
mov
stos
out
adcl
loope
movsl
mov
pop
dec
or
cs
sbb
sbbb
cmpsl
or
aam
fcomp
jno
sbb
insl
stos
fst
aad
pop
adc
adc
mov
dec
arpl
lods
arpl
mov
hlt
jns
subb
leave
mov
jbe
stos
fisttpl
jg
stc
fadds
in
push
push
jnp
mov
shll
inc
ret
daa
mov
or
add
or
xchg
rorb
mov
dec
jno
jae
out
sub
stos
adc
mov
mov
adc
loopne
push
nop
lods
les
repnz
pop
inc
ds
or
cmpsb
stos
mov
mov
jbe
sub
mov
paddusw
loope
stos
lea
pop
popa
mov
rclb
pop
dec
xor
mov
loope
jns
cmc
shrb
mov
arpl
dec
lahf
int
rcrl
push
mov
cmp
jmp
xor
lds
push
pop
iret
sub
jo
cwtl
cmp
mov
mov
pushf
cmp
ja
ljmp
fcmovnu
js
or
sub
fmull
in
pop
pop
lods
lds
or
cmp
movsl
jne
mov
mov
adc
dec
push
dec
adc
sbbl
popa
sub
xor
in
orb
pop
aas
shl
sub
jmp
pop
stos
inc
daa
ss
inc
and
imul
cmp
inc
mov
or
fnsave
mov
sbb
cmp
jnp
subb
xchg
fldt
mov
lock
cmp
fwait
gs
push
pop
ljmp
rcrl
leave
inc
add
outsl
xor
inc
jmp
dec
cmp
or
es
xchg
jns
cmpsb
mov
cmp
inc
in
aam
mov
pop
sbb
bound
punpckhwd
into
fwait
sbb
out
test
cmp
loopne
sub
outsl
dec
push
int
pusha
adc
mov
ret
sub
and
sbb
sub
and
adc
sub
mov
jo
leave
sbb
push
push
mov
pop
lret
or
jns
ss
outsl
data16
dec
shrb
push
mov
ret
les
dec
push
xchg
jmp
rorb
adc
xchg
add
sub
mov
outsl
in
inc
mov
mov
aad
pop
jo
mov
add
aam
push
jmp
loope
sbb
daa
frstor
inc
push
lock
imul
adc
jns
fildl
xchg
repz
pop
stos
push
mov
mov
inc
and
rcr
or
jp
xor
mov
or
outsb
mov
out
jmp
push
jmp
push
sti
pop
or
pop
jecxz
repnz
jg
sub
dec
in
mov
mov
jne
jae
xchg
sub
out
popf
jp
pop
and
mov
or
mov
stc
sub
rol
ret
adc
dec
loope
jns
insl
in
mov
in
sbb
mov
sbbl
stos
cmp
dec
pop
sbb
lret
add
lds
mov
sbbb
sbb
sub
pop
xor
adc
jle
ds
jo
invlpg
imul
add
sbbl
stc
dec
in
cltd
icebp
or
jnp,pn
pop
shl
cwtl
test
in
mov
push
mov
mov
std
mov
xchg
mov
pop
xchg
xor
fstpl
orb
lods
adc
aaa
loopne
in
push
imul
jnp
loopne
ret
js
lret
aas
popf
jecxz
xchg
mov
xchg
pop
xchg
and
adc
shl
gs
fs
popa
mov
pop
push
sbb
movb
int3
and
vmovntdq
js
imul
insw
scas
push
adc
stos
jbe
and
lea
mov
xchg
fldt
decl
adc
pop
pop
jne
bound
or
cwtl
sbb
add
or
ss
sbb
add
jbe
or
jmp
daa
iret
cmp
test
imul
cmpsl
addr16
or
popf
lret
shrb
out
push
adc
fwait
inc
arpl
cmp
inc
fistpll
movsl
test
adc
adcl
or
das
insb
cmp
sbb
or
sbb
stc
add
pushf
ret
push
and
ss
or
jge
pop
mov
cs
push
lahf
das
addl
lds
arpl
fnsetpm(287
adc
add
fistpl
mov
fnsave
cmc
pop
xchg
lds
movsb
ret
ja
shlb
or
movsb
xor
dec
popa
xor
in
sbb
fdivrl
gs
pop
insb
cmp
xchg
int3
add
add
cmpsl
adc
lods
mov
and
stc
inc
cltd
cs
add
jp
mov
inc
cld
mov
adc
clc
cmpsl
jg
mov
cmc
push
test
movsb
add
mov
aaa
arpl
setne
push
or
cmp
int
ja
test
in
orl
pop
and
popa
in
jp
inc
mov
ja
pop
sub
mov
and
jnp
inc
pusha
aad
ja
rcll
and
xchg
sbb
mov
jecxz
pusha
addr16
dec
pop
aaa
imul
fldt
mov
and
mov
push
pop
fwait
xor
mov
pop
imul
mov
lahf
movsl
jne
cli
pop
fsubrl
lahf
mov
push
xlat
mov
pop
pop
loop
sbbb
enter
ret
je
inc
ljmp
pusha
movsl
imul
mov
or
mov
inc
add
movb
sub
mov
dec
scas
mov
aam
rolb
and
or
cmp
adc
xchg
movsb
call
jo
sub
cmc
clc
es
loop
jb
cmp
sub
mov
xchg
fldt
push
and
mov
push
mov
outsb
xor
pushw
jmp
xor
adc
scas
or
pushf
arpl
adc
cmp
cmpsb
adc
and
ja
and
mov
popf
mov
inc
and
dec
fldlg2
mov
rolb
lods
mov
pop
test
mov
push
repnz
mov
fdivs
fwait
push
bound
mov
xchg
pop
sarl
jp
adc
adc
dec
addr16
pop
or
pop
fmull
mov
test
mov
fldt
bound
sub
pop
dec
pop
fwait
sub
mov
pop
popa
addl
adc
mov
push
mov
mov
pop
pop
out
daa
iret
cltd
or
imul
sub
movl
jnp
xlat
pop
pop
pusha
or
sub
push
imul
adc
or
mov
jbe
xchg
push
xor
adcb
ret
movsb
or
call
jno
data16
movsl
push
arpl
sub
cltd
push
xor
mov
leave
int3
test
mov
adc
jge
inc
fwait
sbb
arpl
faddp
idivb
in
mov
mov
call
subb
bound
lret
or
sti
adc
out
sub
es
dec
xchg
ljmp
mov
pop
cs
sub
or
xchg
push
pop
xchg
ret
incl
inc
fldl
sbb
scas
add
mov
in
mov
xor
push
pop
cwtl
mov
testl
lods
dec
mov
and
mov
sahf
cmp
mov
inc
push
test
inc
lods
lcall
out
test
out
cltd
xchg
ja
repz
xchg
shrb
xchg
cmp
ljmp
cs
test
xabort
xor
in
fcoml
lock
ret
incl
or
cmp
mov
sub
cmp
ret
pop
lods
sbb
outsb
test
sahf
movsl
inc
aas
or
jmp
in
jb
xchg
mov
cmp
inc
jecxz
sub
outsb
sub
dec
cmpsb
mov
sahf
sub
sarl
jmp
mov
or
imul
sbb
cs
mov
fildll
mov
inc
xchg
andl
lcall
add
pop
jno
cmp
mov
test
out
es
loope
rcr
push
push
mov
decl
mov
and
mov
xchg
stc
rcr
cs
push
pop
data16
fsts
or
insb
cmp
lcall
add
loope
mov
cli
clc
incl
fucomi
mov
incb
jo
jmp
sbb
inc
psrlq
das
cmp
cmc
pop
mov
fcomip
jne
stc
test
push
orb
cmovae
outsb
push
push
std
push
xorl
or
scas
pop
add
jne
mov
fistpl
jmp
pop
xor
mov
call
jmp
cwtl
test
xchg
jno
adc
cmpsl
mov
pushf
xor
jmp
xor
or
adc
clc
nop
sti
shlb
or
sub
pushf
repz
movsl
fiadds
mov
loopne
mov
call
iret
xor
bound
mov
and
daa
pushf
inc
into
and
sub
lcall
cwtl
sub
xchg
leave
push
lcall
xchg
pushf
ljmp
and
mov
jmp
push
adc
addr16
sub
in
dec
scas
nop
or
dec
adc
mov
sub
jbe
insl
pushf
add
insb
jb
jb
pushf
js
cmp
shll
out
jns
lret
push
in
scas
gs
ret
adcl
dec
cwtl
mov
mov
lcall
enter
push
movsb
push
xor
out
movsb
cmp
call
xor
fmuls
clc
adc
mov
mov
xchg
or
push
adc
adc
sbb
testb
sub
cmp
mov
stc
lcall
mov
inc
aas
push
ficoms
daa
les
imulb
push
xchg
fcomip
push
movsl
sub
rorl
test
sub
mov
pop
sub
fwait
call
sbb
and
shlb
loopne
lods
fiadds
xor
ret
sub
decl
mov
and
shlb
adc
jl
popa
ljmp
ljmp
mov
ret
xchg
mov
dec
pusha
ja
add
xchg
mov
in
call
hlt
mov
in
jp
cmp
rcrb
xchg
test
decl
mov
cli
out
loope
push
add
adc
daa
je
les
negb
sub
call
adc
jns
xchg
xchg
dec
jnp
add
mov
pushf
mov
xchg
or
out
jmp
shlb
fcom
lods
jb
rcr
repnz
mov
imul
call
stc
nop
add
and
and
sti
sbb
jl
pushf
movups
mov
mov
incl
shll
cld
cli
inc
nop
and
into
or
ja
sub
lahf
push
dec
add
xorb
xor
popa
or
mov
xor
bound
pushl
shlb
loope
hlt
pusha
iret
jg
popa
dec
lods
sbb
movsl
fwait
pop
add
daa
sar
lcall
mov
cmc
mov
int3
js
cltd
adc
push
lods
and
popf
jo
adc
cld
jmp
jno
and
hlt
jbe
and
dec
xchg
cmpsb
adc
mov
cwtl
sub
push
xor
nop
push
add
pop
jmp
stos
or
sbb
push
mov
sub
ja
push
shll
inc
sub
inc
fabs
push
inc
sub
sbb
inc
pop
sub
sti
lcall
stos
sbb
sub
in
pop
and
or
push
push
xlat
push
int
int3
xchg
inc
inc
sub
stos
pop
jle
jbe
lock
int
mov
stos
inc
push
adc
jmp
enter
dec
inc
ljmp
add
cmp
sub
out
dec
add
add
sub
outsl
pushl
imul
ds
mov
sub
mov
add
pop
xchg
out
dec
decl
adc
mov
out
push
inc
clc
ret
testl
lds
push
pushf
in
and
adc
mov
out
ret
or
sar
outsl
xchg
cli
iret
insb
out
xchg
stos
sub
push
lods
bound
jg
leave
xor
in
ss
nop
iret
dec
add
inc
mov
std
ljmp
in
sbb
test
pop
testb
rolb
ss
mov
and
inc
mov
adc
ficoms
jle
into
push
sub
adc
rcrb
stos
negl
or
movsl
fsubrs
or
inc
xchg
push
dec
lcall
or
mov
incl
sub
mov
sub
call
ss
pop
inc
sub
pop
cld
cmpb
and
pop
std
fbld
inc
into
mov
pop
lock
inc
rol
push
pop
xlat
out
adc
pushl
mov
subl
stos
lcall
adc
dec
dec
fnstenv
in
sub
fisubrs
pop
fdivl
fistpll
lret
sub
stc
les
ficoms
dec
cli
std
mov
xor
or
add
shlb
mov
mov
mov
push
inc
lret
iret
sub
nop
ret
cmp
js
adc
cmc
inc
out
sbb
test
repz
out
leave
leave
iret
aaa
inc
repnz
std
into
int
pop
lock
xchg
adc
push
push
clc
jg
xor
dec
loop
sub
and
push
adc
jb
out
mov
pop
subl
sub
sti
iret
aas
cld
gs
or
xor
jnp
cs
sub
xchg
pusha
stos
ret
mov
clc
out
cs
jg
ret
ds
sub
test
lods
mov
mov
push
insb
inc
sub
mov
mov
pop
mov
lds
div
inc
shrb
inc
out
imul
mov
outsl
lods
sub
or
movsl
popa
sbb
xorl
popa
popa
inc
loop
jno
filds
sti
sbb
inc
lods
cli
insl
cli
pop
pop
shlb
cltd
imul
leave
pop
or
inc
in
adc
repz
movsb
jns
cli
roll
cmp
mov
cmpsl
fidivl
shlb
sti
inc
das
fdiv
or
int
mov
lods
orb
mull
pushf
xor
jg
inc
fdivrl
js
mov
sbb
add
or
int
mov
std
sub
stos
iret
lods
cmp
mov
dec
mov
enter
data16
decl
mov
mov
fildll
jg
scas
imul
fdivs
in
mov
outsb
test
mov
fists
adc
cmpsb
xlat
mov
mov
iret
jle
das
xchg
pop
xor
iret
pop
ljmp
std
cs
xchg
mov
and
frstor
jge
jl
xor
stos
pushl
jne
cmc
mov
xchg
out
mov
sub
shl
loopne
xchg
jmp
jg
fiadds
rcrb
push
mov
lahf
fbstp
adc
inc
dec
xchg
cltd
jp
rcrl
inc
popa
jnp
dec
sahf
iret
int3
inc
das
out
or
dec
hlt
decl
stos
push
outsb
dec
dec
mov
push
scas
scas
xchg
and
mov
mov
xor
clc
sub
int
or
add
mov
pushl
adc
cld
hlt
pop
fldenv
adc
cld
lock
jecxz
or
cld
cld
pop
in
and
cli
and
push
je
pop
push
push
jmp
leave
jno
push
mov
and
cltd
xor
jns
int3
xlat
sbb
push
push
test
mov
test
mov
std
incl
cld
test
mov
outsl
pusha
xor
and
jmp
call
mov
out
push
iret
and
jg
imulb
push
xor
outsb
fisubs
test
test
mov
sub
jmp
xlat
outsl
incl
jnp
and
and
and
popf
insl
add
imul
sub
cmp
rcrl
pop
icebp
mov
iret
jp
pusha
sar
xchg
sub
test
jbe
repz
sub
sub
dec
inc
ja
pop
pop
addb
mov
add
pop
jmp
mov
decl
aaa
xor
outsl
insb
jo
inc
adc
adc
sub
outsb
push
ret
jge
arpl
pop
movsb
cmp
pop
stc
out
and
lods
shll
jge
call
dec
push
icebp
dec
dec
push
loope
mov
inc
add
idivb
jle
stos
add
add
mov
sub
ss
stc
imul
pushl
push
push
cld
enter
iret
xor
push
pop
and
fistpl
pop
cs
pop
mov
negl
jb
imul
in
push
hlt
jg
lahf
push
out
fistl
inc
sbb
subl
xor
outsl
pop
hlt
neg
sahf
pop
ja
negl
leave
imul
addr16
push
mov
movsb
ficoms
jno
pop
dec
push
bound
push
inc
xor
push
ja
ss
ljmp
imul
inc
ss
xor
dec
ja
gs
in
inc
cmp
push
push
insb
xor
dec
push
dec
xor
push
dec
pop
inc
fs
push
inc
jae
ljmp
dec
push
pop
aaa
jp
jp
inc
inc
ja
push
push
outsl
inc
outsl
xor
xor
jae
gs
decl
inc
insl
js
fs
je
inc
bound
arpl
arpl
jo
aaa
push
inc
gs
incl
push
jne
dec
jne
outsl
inc
dec
js
dec
inc
push
inc
cmp
data16
push
xor
jne
pushl
popa
outsl
cmp
bound
jp
push
arpl
outsb
dec
jbe
push
xor
aaa
addr16
jp
outsl
mov
jmp
push
outsl
xor
dec
push
outsb
push
dec
js
push
dec
ja
jg
push
gs
push
xor
jp
inc
xor
xor
bound
ja
xor
jns
decl
inc
dec
push
cld
bound
push
inc
inc
je
dec
push
dec
dec
pop
push
or
jg
addr16
inc
inc
inc
imul
dec
insl
insl
jo
outsb
jg
pop
push
push
push
jae
dec
push
popa
inc
inc
jne
outsl
dec
out
dec
inc
outsl
or
outsl
gs
inc
pop
jo
xor
ljmp
dec
dec
cmp
pop
push
addr16
jno
inc
jns
push
push
xor
push
ss
call
mov
pop
insb
xor
dec
popa
xor
add
mov
xor
jb
insb
dec
gs
pop
dec
dec
dec
push
mov
subl
subl
inc
add
and
add
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
stos
test
cmp
in
mov
add
push
mov
cmp
repz
rcr
call
iret
repz
inc
push
fs
cmp
repz
mov
jns
enter
push
cmp
repz
pop
data16
iret
repz
cmp
rcr
lock
add
out
lcall
jns
out
dec
bound
test
jns
out
test
mov
sahf
loop
or
adc
cmp
repz
insb
jbe
stos
repz
repz
out
sahf
out
add
xor
sahf
out
sahf
jo
xchg
out
shr
hlt
push
add
sub
dec
pop
jb
repz
mov
sahf
cmpsl
stc
cmp
adc
cmp
sahf
out
dec
pop
jb
cmpsb
out
sahf
out
mov
repz
add
push
sub
push
jb
mov
repz
shr
push
or
out
sahf
out
ss
pop
fs
out
sahf
jle
xchg
mov
out
aam
clc
add
jle
sahf
out
sahf
sbb
cmp
sahf
out
push
sahf
mov
out
out
cld
or
iret
repz
and
cmp
data16
repz
lcall
repz
lock
or
cs
repz
push
insb
jbe
repz
repz
cmpsb
mov
cmp
mov
jbe
push
sub
repz
repz
dec
data16
iret
repz
xchg
mov
sahf
cmpsl
stc
cmp
add
adc
es
out
inc
pop
data16
out
sahf
out
mov
scas
jp
call
push
xor
sahf
out
sahf
dec
fs
mov
shl
cld
push
psllq
cmp
sbb
push
iret
repz
pop
je
cwtl
stos
les
clc
or
adc
jns
out
cmp
data16
jns
out
pushf
mov
ljmp
push
xor
inc
dec
cmp
repz
jb
mov
mov
loopne
out
sahf
out
adc
cmp
sahf
out
sahf
data16
xchg
cmpsb
sarb
adc
xor
cmp
repz
push
push
cmp
sahf
mov
sahf
out
lcall
jns
out
push
outsb
js
movsb
idivl
out
shr
cld
push
adc
jns
cmp
xchg
out
sahf
out
mov
repz
notb
push
sbb
push
cmp
repz
je
nop
stos
repz
repz
out
sahf
out
pop
xor
pop
sahf
out
sahf
push
ret
out
aam
add
fiadds
sub
out
sahf
inc
push
pop
je
cwtl
jns
out
mov
repz
out
push
sbb
sub
cmp
push
jo
movsb
mov
cmp
hlt
pop
sbb
push
iret
repz
cmp
pop
jb
xchg
cmp
repz
mov
lock
cmpsl
stc
or
and
pop
push
jns
out
sahf
test
fdivrl
jge
out
clc
adc
push
ss
out
sahf
out
insb
jle
xchg
lahf
out
sahf
movsb
mov
loop
push
sbb
adc
sub
push
or
iret
repz
or
mov
sub
xchg
xor
mov
adc
lcall
into
and
and
daa
ret
loopne
dec
in
lods
decl
orb
sbb
xlat
cmp
rcll
mov
adc
inc
lcall
push
dec
loope
std
or
mov
insl
sub
movsl
leave
jae
mov
push
or
outsb
lahf
decl
sub
call
pop
and
xor
imul
insl
mov
dec
outsb
sti
ds
test
incl
es
and
imul
xchg
jmp
fsubl
push
cs
adc
addr16
mov
pop
ret
fwait
out
or
js
inc
sbb
imul
lock
mov
incl
push
into
jmp
mov
mov
mov
cmpb
cwtl
repnz
xchg
ds
movsb
mov
decl
scas
iret
or
sub
jp
sbb
bound
xchg
shlb
mov
sub
push
rorl
pop
aaa
push
jnp
push
mov
adc
and
cmp
loop
push
cmp
cld
mov
mov
cmp
divb
sahf
and
mov
out
cmp
sub
stc
sar
popa
mov
fadd
jle
lahf
cli
cmp
lods
movb
decl
xor
sbb
xchg
sub
mov
scas
pop
movsb
push
ljmp
jmp
sbb
sbb
or
test
xor
test
mov
aaa
insb
sbbb
lcall
cwtl
pushf
data16
jae
mov
out
xor
lods
xchg
out
xor
int3
dec
inc
call
cmpsl
add
adc
addl
jae
adc
add
repz
adc
test
nop
enter
aaa
inc
enter
cmpsl
ss
xlat
sub
mov
test
push
jns
repz
xchg
xor
outsl
mov
notl
sbb
xor
out
pop
shll
clc
sub
fmuls
gs
clc
and
aas
int
push
lock
pop
lret
int3
mov
mov
xlat
pop
stos
stc
js
mov
mov
jmp
int3
aam
or
xchg
mov
sbb
sub
movsb
sub
jmp
lcall
inc
aas
scas
fadds
in
idivb
xorb
ret
orl
call
in
sub
sbb
mov
push
cmc
or
out
popa
push
pop
cmpsb
mov
jg
call
iret
aam
mov
dec
pop
jecxz
sahf
sub
idivl
or
inc
dec
movsl
mov
ljmp
lds
in
inc
sub
push
rorb
mov
in
fcoms
mov
mov
stc
pop
sbb
cli
shrl
cmp
hlt
filds
adc
push
pop
mov
mov
cmp
jmp
push
std
xchg
nop
aaa
cs
insl
mov
mov
mov
dec
int
or
lock
fbld
or
in
cmpsl
stos
sbb
adc
xor
add
xchg
stc
je
push
in
aaa
adc
sti
sub
aas
xchg
test
pushf
sub
das
cli
dec
mov
add
and
cs
or
mov
pop
pop
lcall
gs
adc
ljmp
mov
test
jp
loope
inc
mov
and
outsb
into
dec
inc
cmc
dec
jg
mov
adc
jbe
movsb
icebp
js
mov
ret
fs
outsl
mov
cmp
mov
or
lcall
xchg
add
lcall
rorb
ja
or
cs
je
add
ss
repz
xchg
sub
inc
jle
mov
popf
sbb
ljmp
shll
add
mov
int
dec
stc
cwtl
dec
push
inc
fsubrl
movsl
ljmp
cli
ljmp
js
into
xorb
into
mov
cmp
int3
adc
data16
xchg
xchg
int3
and
cmp
pop
mov
dec
push
loop
sbb
and
shr
movsl
cmp
pop
jnp
das
mov
xchg
push
mov
decl
shr
mov
xor
jb
xor
inc
sbb
and
je
dec
test
inc
mov
add
stos
dec
mov
fsubrs
insb
pop
push
das
repz
ljmp
mov
cmp
mov
inc
jmp
jp
test
jne
dec
mov
cmpsl
jmp
shrl
shlb
push
mov
mov
inc
divl
aad
lcall
gs
cmp
cmp
push
lcall
jne
decl
and
mov
add
push
and
adc
lret
sahf
fldcw
mov
stos
push
cmp
or
xchg
lcall
xor
pop
incl
out
inc
jp
int
leave
push
inc
mull
push
push
inc
and
cld
xchg
call
or
cmp
test
aas
xchg
xchg
popa
sti
mov
outsb
fistps
enter
addr16
pop
out
into
ljmp
lcall
cwtl
lods
lcall
mov
jle
jg
sahf
lcall
mov
fcmovnu
mov
and
int3
aas
push
ficompl
popa
icebp
icebp
jge
sub
xor
lcall
clc
mov
repz
inc
xchg
out
sbb
ja
jae
or
call
jg
subl
sub
imul
ds
loop
out
lea
mov
fdivs
add
aam
in
push
insb
cmp
data16
xor
or
xchg
sbb
pushl
cmpsl
add
cmc
dec
fstpl
adc
fidivl
add
sub
cmpsl
pop
sarb
cmp
dec
sbb
sbb
das
mov
in
and
enter
xchg
pop
inc
and
jp
pop
jnp
js
mov
xchg
jbe
sub
aas
push
xor
mov
scas
xor
adc
push
mov
xchg
pop
mov
cmpsb
push
mov
int
adc
iret
lret
into
in
dec
xor
cli
faddp
outsb
and
mov
jle
or
jp
inc
loopne
jg
xor
fstl
fisttpl
push
rep
add
in
xchg
cmp
pop
hlt
mov
lahf
add
xchg
cld
jno
push
loop
dec
inc
lods
popa
xchg
pop
xor
lcall
sub
enter
jbe
mov
ja
je
outsb
aaa
mov
ljmp
out
sbb
or
imul
and
into
and
xor
inc
xchg
mov
imul
sahf
enter
or
pushf
sbb
sti
fsub
inc
adc
call
dec
daa
and
jmp
jp
rorb
adc
stc
std
inc
sbb
icebp
leave
jmp
add
jns
decl
testb
dec
mov
mov
xor
mov
adc
add
decl
ljmp
inc
icebp
sub
mov
inc
lahf
jmp
loopne
ret
xor
inc
sar
inc
mov
pop
int3
mov
leave
pop
adc
outsl
lcall
jl
ret
mov
ljmp
rcrb
pop
cltd
sbb
cli
and
in
xlat
loop
or
lcall
jge
jge
shll
cs
push
xlat
mov
or
aam
fwait
adc
leave
pushf
xor
inc
push
cmp
mov
in
fs
pusha
insb
mov
ljmp
mov
xchg
mov
push
xchg
inc
jbe
mov
negb
scas
hlt
and
out
jmp
out
shll
out
mov
xchg
and
gs
add
dec
and
jecxz
jge
out
mov
aad
add
push
jge
sbb
imul
jnp
loop
loopne
loope
xchg
pop
scas
js
outsl
ret
or
stos
hlt
dec
push
xchg
xor
mov
call
stc
xchg
adc
pop
cmpb
dec
enter
stos
cmp
pop
mov
sar
lcall
push
cs
lcall
add
pop
cmp
cltd
movsl
add
jg
mov
mov
mov
jmp
rol
inc
xor
rol
ds
lock
jmp
dec
sub
xor
sub
sti
pop
arpl
decl
add
addl
aam
clc
and
xchg
fidivrl
xor
jge
cld
sub
push
cltd
cmc
push
int
outsb
testl
or
inc
xchg
push
xchg
int3
testl
mov
or
insb
pop
and
ljmp
pop
or
push
and
into
dec
xchg
jne
dec
mov
xchg
push
or
jmp
daa
add
aam
push
lods
jp
jecxz
loop
sbb
xchg
aas
add
sub
movsb
decl
jle
filds
notb
icebp
and
jnp
jge
xchg
lea
popl
push
jle
cmp
inc
loope
xchg
imul
mov
inc
jmp
adc
test
mov
push
pop
cli
jg
repz
or
fs
or
dec
call
mov
das
dec
mov
xchg
add
xor
dec
mov
call
cmp
pop
inc
jno
and
cltd
push
shrb
scas
adc
imul
fisttps
sbb
fs
push
sub
pop
mov
xor
addb
push
dec
cmc
mov
pusha
in
fld
fcomps
mov
push
mov
sbb
int3
pushl
add
and
cwtl
lock
and
iret
cmp
inc
psrlq
sar
lcall
sbb
jns
add
rorl
adc
mov
and
movsb
imul
es
rcr
pop
scas
add
jmp
push
sahf
daa
push
sbbl
jg
add
sub
or
notb
decl
push
mov
pop
xchg
dec
mov
subl
out
add
call
mov
pushl
mov
outsl
in
movsb
iret
out
lods
lcall
and
mov
jg
mov
cld
ja
ret
adc
sub
mov
jb
pop
aam
scas
xchg
cmpsb
imul
mov
rcl
xchg
dec
jns
jle
pusha
xchg
sub
add
lret
lahf
ljmp
incl
int3
jae
andl
cs
pop
jg
and
bound
cmp
push
clc
cmp
sbb
xchg
sub
cmp
test
popf
test
mov
push
cld
out
lret
adc
aaa
lods
incl
push
fldl
mov
arpl
sti
clc
ret
into
sbb
push
fmull
out
adc
jmp
loopne
fdiv
je
enter
xchg
test
push
ret
pop
jbe
pusha
xchg
mov
cmpsl
jb
js
inc
or
imul
decl
xchg
xlat
jae
cmpsl
mov
push
dec
sub
js
es
or
jnp
test
dec
jecxz
mov
add
outsb
dec
pop
lret
xor
jle
xchg
scas
sub
jp
incl
and
inc
frstor
inc
iret
pop
ds
aas
ds
lock
iret
lcall
jnp
out
xchg
jmp
mov
mov
imul
stos
mov
negl
xor
jge
cs
sub
xchg
cmp
cld
mov
adc
mov
lcall
mov
lods
add
mov
mov
in
push
or
addb
mov
mov
mov
cmc
pop
ljmp
les
call
cltd
xor
xchg
lods
ljmp
ret
sbb
sarl
sar
call
dec
pop
je
pop
lods
pop
jmp
sub
stos
pop
jne
js
je
lahf
stc
cld
scas
jg
jnp
lcall
and
push
add
xchg
test
push
movsb
cmpsl
mov
add
loopne
int3
xor
ljmp
pop
sub
shr
pushw
adc
ss
dec
push
sbbl
les
jecxz
push
lcall
adc
mov
or
jg
mov
stos
lea
jmp
mov
lcall
insl
test
int3
aas
pop
movsl
cmc
cmp
push
js
xlat
pop
stos
cld
jns
mov
incl
negl
mov
sub
aas
xor
push
sbb
xchg
repz
ljmp
addl
sub
clc
fidivrs
mov
es
pop
jg,pt
jg
jle
movsb
out
cmp
aam
adc
xor
pushl
cwtl
negb
rcrl
sbb
sub
sbb
xor
cli
mov
loop
xchg
jmp
loope
test
inc
adc
test
cmp
hlt
push
insb
clc
adc
lret
decl
lcall
out
daa
pop
je
sub
adc
push
mov
and
ja
jg
js
arpl
jns
push
in
cmp
loopne
pop
cld
fcomip
push
mov
stos
add
out
jae
sub
cmp
and
and
xor
pop
cltd
jmp
mov
lcall
xor
dec
lret
add
es
lcall
sub
popa
lock
loope
jne
cmpsl
std
jbe
mov
cli
fcmovne
cld
pop
dec
jg
jg
lods
pop
cli
mov
adc
jo
lahf
loopne
idiv
inc
sbb
std
pushl
loop
test
fmul
mov
cmc
aaa
or
cwtl
shl
ljmp
or
mov
fs
call
xchg
add
sysenter
adc
pop
dec
mov
mov
jecxz
dec
adc
lds
scas
add
jecxz
iret
add
mov
mov
test
sahf
xor
fidivs
jp
pushf
imul
mov
dec
xlat
rolb
mov
lret
or
push
lcall
imul
or
popa
adc
faddp
adc
adc
mov
ret
mov
rorl
fbstp
sbb
cld
hlt
test
inc
cmp
call
mov
pushf
repnz
adc
sbb
mov
cwtl
pop
divl
scas
xor
lcall
adc
jl
xor
mov
mov
jmp
lcall
cmp
xchg
inc
mov
insb
or
or
fnstenv
push
add
mov
setnp
shr
inc
mov
test
popf
iret
loope
pop
js,pn
dec
popf
shll
fcomip
icebp
rcll
jb
add
mov
xchg
push
pop
incl
mov
arpl
jmp
add
into
outsl
pop
es
leave
popf
pop
fcmovnb
dec
fldl
sar
incl
push
fistl
and
sarl
insl
sub
jl
hlt
ud0
fidivrl
test
clc
fmull
scas
sub
push
hlt
jnp
sar
and
icebp
pushaw
inc
mov
ret
fwait
movsl
hlt
clc
jge
or
add
roll
mov
adc
mov
inc
ss
push
pop
cwtl
pop
fisubs
cmpsl
mov
cmp
shrl
pop
mov
mov
cmp
mov
ljmp
pop
aad
shlb
cmpsb
and
jcxz
add
call
cli
pop
lahf
mov
and
cli
push
fcmovu
stos
loop
insl
ljmp
sar
fadds
xchg
lea
jb
push
js
loope
ljmp
fidivrs
inc
in
dec
jo
int3
mov
gs
sarb
jecxz
mov
jmp
push
dec
das
and
sbb
sbb
lret
push
xor
xor
jg
decl
mov
je
in
push
and
lcall
sbb
arpl
xor
xchg
enter
mov
stos
push
mov
pushl
mov
cmp
dec
popa
adc
aas
out
cmp
pop
or
out
cmpb
cmpsb
cmp
pop
add
rorb
enter
xlat
xchg
fnsave
insl
fwait
cmp
call
jne
xor
xchg
push
nop
dec
or
pusha
inc
mov
xor
mov
jmp
or
jbe
pusha
dec
hlt
ficoms
cld
std
xchg
imul
test
adc
out
nop
scas
fstpt
jmp
mov
fwait
xor
jne
pop
loop
int3
mov
mov
dec
loop
gs
call
insb
into
cmp
xor
in
add
jb
rcrb
daa
lea
cltd
ljmp
pop
std
adc
inc
divl
cltd
shrb
push
jmp
mov
or
mov
jmp
lahf
push
les
mov
mov
mov
xchg
adc
jmp
xchg
fxch
lahf
popf
sbb
je
cmpsl
movl
pop
hlt
incl
sbb
mov
and
aam
pop
loopne
js
sbb
out
jge
sar
jmp
cmp
in
addr16
ds
stos
test
or
lcall
add
inc
xchg
bound
jge
pop
pop
dec
and
test
xchg
jle
icebp
fistpl
sub
sbb
daa
mov
inc
cmp
sbb
insb
repnz
filds
xchg
jge
mov
mov
lret
lret
cmpsb
add
push
add
fmul
push
pop
data16
pushl
jg
fistl
xor
mov
lcall
push
outsb
inc
lret
sbb
lcall
mov
jb
mov
xor
cmpsb
addr16
lea
xor
mov
ljmp
cli
mov
loopne
mov
push
js
dec
fstl
and
pop
scas
push
cmp
jmp
ja
dec
loope
fiadds
popf
mov
out
ffree
add
mov
sbb
adc
movsb
movsl
bound
jo
stos
push
arpl
jnp
pop
loope
lahf
cmp
and
jmp
mov
fnstenv
and
addr16
and
adc
ja
pop
out
cwtl
ljmp
inc
lcall
loope
xchg
pushf
or
cmp
movsl
mov
xor
cmp
push
mov
jge
inc
add
lds
ret
adc
mov
pop
popa
sbb
push
or
decl
jecxz
fwait
pushf
fs
xor
ftst
xor
shl
das
and
outsl
mov
and
or
push
jmp
cmp
sub
jno
pop
in
mul
or
cmp
or
ret
or
mov
outsb
cmp
jle
add
ret
lds
xchg
sub
incl
ret
es
int3
in
dec
lds
ja
mov
xchg
push
repz
dec
cli
call
xchg
lahf
fs
sbb
dec
in
push
or
mov
jl
ljmp
mov
js
shll
add
shll
dec
movsb
inc
and
sbb
jp
inc
cmp
out
mov
add
pop
dec
push
pop
mov
adc
out
cltd
ror
aaa
sbb
call
push
shlb
int3
ljmp
and
mov
xlat
rolb
mov
xchg
incl
inc
aad
sbb
pop
and
outsb
jae
ja
mov
xor
and
pop
clc
pusha
xor
lcall
lods
push
mov
sbb
jnp
scas
lock
pop
std
dec
cmp
mov
add
aas
mov
psubsb
sub
test
push
fcmovnb
out
push
or
gs
out
ljmp
cli
add
fimull
or
xchg
loopne
fsubrl
lea
incl
mov
movsb
mov
lret
sbb
mull
test
sti
cmpsb
test
mov
call
xchg
inc
mov
cmp
std
cltd
fsub
gs
shrl
cmpsl
push
cmp
push
cmp
xchg
push
mov
addl
popa
sbb
pop
in
loope
loope
inc
pushl
fiaddl
sub
hlt
dec
ja
and
in
test
flds
or
call
push
cmp
sbb
leave
pushl
jg
inc
pop
ds
sbb
test
int
ljmp
int
std
in
jno
std
pop
ljmp
inc
pop
or
or
incl
add
mov
push
dec
mov
and
iret
adc
ret
push
xchg
decl
lret
data16
pop
je
fstcw
pop
gs
hlt
push
cmp
ss
dec
pop
lock
push
in
xchg
lcall
lcall
in
fldt
ljmp
cmp
std
dec
mov
leave
int
loopne
adc
cmp
call
and
push
or
jbe
lahf
pop
into
xrelease
mov
mov
stos
incl
mov
insb
and
mov
add
es
std
pushl
and
dec
sub
add
arpl
pop
test
lahf
in
in
mov
pop
ja
stc
incl
int
mov
je
sbb
mov
cmp
js
test
sahf
adc
call
or
pop
loopne
mov
or
pop
icebp
test
into
jns
jmp
cmp
ret
cmpsb
loope
fbstp
sbb
mov
sbb
mov
cmp
test
ret
call
sub
sub
mov
pushw
adc
pop
pop
setae
std
sub
jmp
jbe
mov
or
imul
mov
in
pop
mov
mov
gs
cmp
movsl
lods
push
daa
mov
xchg
out
in
cltd
or
cmpl
loopne
fistpl
je
ret
xchg
sub
mov
cltd
cmp
popf
inc
cltd
jmp
push
push
xchg
adc
call
mov
outsb
mov
ljmp
xchg
dec
add
dec
fmulp
loope
lcall
pop
adc
cmp
roll
add
dec
or
jmp
inc
vmovaps
or
jg
ljmp
je
sti
sub
xor
add
cmp
decl
cmpsb
inc
or
pop
imul
cwtl
in
mov
cmpsb
dec
sbb
lods
xor
dec
call
add
mov
mov
data16
sbb
xchg
cmp
mov
push
ljmp
lds
repnz
jnp
dec
popf
mov
cmp
jo
jecxz
xchg
cli
jp
fcoms
xor
out
inc
pop
mov
pop
jmp
adc
mov
incl
sbb
cli
or
cmp
xchg
inc
inc
out
outsl
nop
xor
cld
rorl
hlt
sti
and
scas
loopne
repnz
jmp
test
lahf
mov
fs
in
xor
jbe
adc
test
shr
in
nop
xchg
shlb
jl
insl
jno
jecxz
xchg
fldcw
aad
scas
cmp
clc
decl
and
pop
loope
jmp
pop
cmp
mov
or
jg
subb
xor
ja
sti
cmp
dec
jmp
test
sbb
jb,pt
dec
push
rcrb
scas
outsl
pop
shlb
roll
ljmp
aaa
icebp
jb
mov
movsb
mov
out
sahf
repnz
xchg
pop
lds
pushl
adc
hlt
in
in
push
sbb
mov
stos
add
mov
int
adc
fmulp
test
popa
repz
inc
loopne
fildl
add
push
leave
cmp
outsl
mov
dec
flds
jmp
test
adc
adc
jp
push
add
sbb
es
in
and
xchg
cmc
loope
dec
fmul
fld
sbb
fisttpl
jo
addr16
aas
fwait
jbe
test
cmp
jmp
mov
sti
dec
add
add
or
cmpsb
mov
call
scas
mov
dec
pop
shll
ficomps
mov
jno
mul
fisubl
add
dec
pop
decl
jl
in
cli
addb
mov
adc
and
adc
icebp
pushl
sti
push
xchg
repnz
sahf
xor
idivb
mov
fsts
mov
jecxz
int
je
lods
or
pop
adc
test
es
stos
xor
ljmp
psrad
jp
inc
jl
push
jge
movsb
pop
inc
lcall
pop
aad
mov
fdivr
jl
mov
add
out
and
loopne
xlat
dec
das
jp
cmpsb
mov
mov
push
sbb
pushl
push
cmp
test
cmp
lods
std
in
out
fs
push
dec
lcall
inc
fidivrs
push
scas
arpl
outsb
xchg
fnstenv
xor
addl
cmp
pushl
fdivs
insl
mov
inc
pop
mov
sub
mov
incl
xchg
cmp
cmp
inc
sbb
jp
movsb
pushl
cld
mov
adc
or
push
std
xchg
cmc
dec
ds
mov
add
add
cmp
fildll
sbb
inc
pop
or
pop
fidivrs
cmp
xor
inc
cmc
mov
loopne
mov
jecxz
push
insl
xchg
arpl
cwtl
bound
jbe
repnz
mov
cmp
outsb
test
xchg
mov
mov
pop
sarb
mov
push
mov
mov
jne
lret
ret
mov
ljmp
icebp
call
mov
dec
loop
lock
mov
fwait
ljmp
enter
test
icebp
cmpsl
lahf
mov
push
sub
mov
adc
pop
hlt
call
xchg
mov
sbb
xchg
or
pop
xlat
divb
lods
jge
clc
pop
cmp
fcmovnbe
add
push
xchg
inc
mov
aam
arpl
add
sub
mov
lods
mov
call
cmp
loopne
sbb
movb
or
lds
inc
jmp
xchg
orl
inc
mov
and
mov
aam
adc
sub
rolb
loope
mov
das
ljmp
inc
xchg
dec
cli
sub
scas
hlt
cltd
das
ss
out
xor
rcr
fsubrs
mov
adc
jnp
mov
repnz
push
iret
xchg
mov
fdivr
xorl
incl
loope
clc
and
js
data16
loopne
icebp
movl
movsl
fildll
repz
mov
mov
push
fisubrl
xchg
inc
lods
adc
es
sbb
ds
ljmp
mov
pop
stos
dec
cli
xchg
adc
and
addr16
sub
mov
sbb
fcomip
lret
shll
push
testb
pop
mov
int3
popf
sub
lcall
jecxz
cmc
sub
add
mov
xchg
add
xor
add
sbb
incl
mov
dec
testb
loop
pop
arpl
shlb
mov
shrb
mov
out
gs
mov
and
loop
and
mov
mov
ljmp
add
xor
lret
fwait
cmpsb
and
adc
nop
inc
ljmp
pop
cmp
mov
fstp
inc
mov
nop
in
jmp
les
inc
lret
pop
divl
jecxz
cltd
and
add
scas
int3
dec
xor
pop
imul
inc
subl
ja
mov
and
sub
loope
xchg
fwait
ljmp
cmpsb
call
inc
xchg
ljmp
shrb
test
pop
flds
xchg
les
jb
inc
sbb
icebp
sar
push
cld
jmp
pushf
call
aas
mov
cmp
jg
inc
push
test
jg
xchg
xor
in
mov
pop
sub
call
mov
xchg
rolb
decl
pushf
and
cmp
in
bound
dec
xchg
mov
dec
mov
rcrl
pop
or
mov
push
repnz
loopne
mov
mov
mov
call
popa
lss
pop
xor
rolb
mov
jmp
pop
ret
shlb
out
insl
rcrl
mov
nop
arpl
lods
bound
mov
mov
inc
into
negl
fwait
loop
fdivl
subl
add
in
cmp
fisttpl
pushl
sbb
addb
push
pushf
push
mov
pusha
fistpll
jp
jg
ret
testl
test
lea
adc
or
sbb
andb
imul
stos
imul
daa
negl
cs
aaa
lahf
scas
aaa
scas
adc
inc
inc
out
add
mov
or
inc
mov
xlat
decl
stos
pop
hlt
stc
out
add
cmpsl
sub
jb
loope
enter
adc
push
add
adc
out
ljmp
dec
int3
mov
negb
icebp
and
jge
ljmp
xor
pop
test
test
mov
insb
gs
mov
inc
inc
jne
lods
jg
in
mov
mov
ljmp
stc
cmp
loopne
xor
xchg
pop
mov
out
clc
mov
mov
popa
ljmp
adc
sub
fistl
or
cld
shlb
cwtl
mov
jne
jb
repz
insb
cmp
push
js
mov
mov
jo
movsl
cs
xlat
cmp
pop
das
mov
or
jmp
mov
lods
or
icebp
jno
cmp
rep
jb,pn
push
out
into
jg
pop
out
mov
push
ficoms
imul
mov
mov
lcall
xchg
push
mov
movsb
jne
js
cmpsb
dec
pushf
push
dec
inc
mov
je
sti
fdivs
decl
sahf
lds
xor
pop
repz
mov
je
mov
stos
mov
call
sub
fs
push
or
scas
sbb
dec
ficomps
jg
std
ffreep
mov
or
xor
push
iret
mov
pop
or
jmp
adc
mov
call
cli
mov
mov
imul
fdivs
std
adc
decl
rol
push
inc
scas
sbb
out
sbb
mov
xor
mov
mov
xchg
mov
sbb
iret
or
dec
decl
or
sbb
mov
jbe
dec
enter
jmp
decl
pusha
mov
pop
mov
ljmp
out
ja
mov
into
aam
incl
inc
mov
pushf
aaa
push
cwtl
testb
or
pop
and
fbld
loope
data16
test
std
lret
mov
cli
pusha
push
sarl
imulb
mov
sub
dec
push
mov
lcall
testb
scas
lea
out
xchg
mov
in
fnsave
sarb
call
xchg
into
test
cmp
rcrl
test
mov
mov
call
sbb
xchg
out
push
dec
fmuls
mov
inc
out
test
fists
mov
ljmp
icebp
or
adcl
jnp
mov
cmc
ds
out
add
xor
lcall
push
or
jo
fcomp
out
sbb
stos
xor
jnp
inc
sbb
pop
imul
outsb
mov
push
jne
sbb
sub
pop
and
nop
jnp
cli
xchg
cmpl
lcall
sbb
lds
mov
lcall
mov
in
mov
mov
mov
cmp
sti
movsl
cvttps2pi
sbb
jmp
pop
adc
ss
dec
dec
ss
jae
or
mulb
out
jmp
addl
mov
les
ljmp
ficomps
jae
push
fnstcw
call
loope
nop
add
xchg
xor
lea
hlt
cmp
xchg
sbb
sub
inc
in
decb
jbe
jno
jecxz
in
mov
sbb
cmc
xlat
mov
call
int
pop
aam
cmp
clc
cmp
xor
aaa
mov
adc
lock
jg
es
cld
push
cmc
mov
lret
or
ljmp
jle
xor
or
pop
sahf
es
jo
inc
xchg
pop
add
je
popf
scas
call
and
mov
call
xchg
jo
sti
scas
lret
nop
jmp
lahf
mov
or
jecxz
bound
enter
and
mov
cmp
xor
and
xchg
adc
push
push
testb
dec
idiv
sbb
mov
jle
cmpsb
loop
xchg
xor
xchg
push
into
frstor
jle
jg
pushl
jg
mov
and
je
imul
test
mov
ja
jb
lds
pop
je
or
inc
add
clc
jg
call
call
daa
mov
dec
popf
pop
icebp
cltd
cmp
mov
pop
call
movaps
sub
adc
cmp
jmp
mov
dec
fwait
std
cmpsb
jno
cltd
fcmovu
jb
mov
pop
pop
and
mov
std
mov
pushl
push
xchg
sahf
and
addr16
pop
insb
mov
jg
popa
cli
push
lock
push
push
pop
lcall
inc
inc
lahf
cmpsb
adc
scas
or
aam
sarb
popa
mul
aam
loope
adc
mov
mov
add
ret
shlb
aam
sbb
addb
movsb
mov
inc
call
cld
incl
cwtl
sub
jbe
sub
in
data16
outsl
stc
mov
dec
sbb
aad
mov
loopne
and
xchg
cmp
mov
fistpll
dec
ljmp
or
sub
inc
ret
push
jnp
std
ljmp
or
jns
add
loope
jbe
mov
jbe
int3
adc
mov
das
mov
jle
rorb
bound
hlt
mov
sub
fucomi
imul
mov
ret
movsl
sarl
xor
xor
call
jl
stos
mov
loopne
dec
movl
rorb
push
dec
in
leave
push
or
ret
mov
mov
mov
shlb
pop
in
pop
aaa
scas
mov
test
xchg
call
incl
rclb
xchg
stc
in
mov
out
xchg
icebp
pop
ljmp
dec
fsubrs
and
xchg
shlb
fdivrs
das
xchg
fwait
adcl
cli
repnz
movsl
lahf
lods
stc
cld
mov
push
push
aam
jge
mov
decl
adc
xor
test
jne
mov
stc
push
push
push
leave
sbb
adc
test
cmp
ljmp
lds
or
mov
pop
push
push
js
inc
test
jg
dec
popf
jne
adc
mov
mov
cltd
and
pop
jp
cmp
ljmp
mov
mov
cmp
inc
aaa
dec
jg
pop
xchg
mov
ja
leave
inc
add
mov
jecxz
loop
mov
push
je
pusha
idiv
xor
pop
sbb
mov
mov
jb
in
push
outsb
incl
xor
add
dec
sbb
leave
fnstcw
movsb
data16
add
dec
cmp
incl
push
pop
pop
fldenv
jecxz
shrl
add
fwait
dec
sbb
cld
ret
ljmp
ljmp
ja
mov
pop
mov
pop
je
xor
xchg
or
ljmp
jmp
inc
sbb
push
or
jne
das
fimuls
in
push
in
push
mov
push
pop
jns
sbb
call
testl
lret
add
subl
loop
fistl
scas
aam
push
sub
pushl
mov
nop
outsl
adc
xor
popa
push
mov
insb
outsb
xchg
loope
incl
mov
mov
jg
ret
jns
movsb
push
inc
aad
popa
mov
pushl
dec
pop
pop
cmpsl
adc
inc
jmp
cltd
incl
pop
jg
es
and
cli
jmp
mov
fimuls
xchg
add
leave
ss
mov
in
xor
roll
adc
push
cmp
sub
arpl
sbb
pushl
aam
lock
push
xor
repz
xor
arpl
aad
mov
xchg
mov
adc
push
lcall
gs
cmp
adc
push
adc
ja
rcrl
stos
es
iret
cltd
incl
xchg
dec
cld
jne
fildl
ss
rolb
data16
incl
mov
mov
dec
mov
inc
je
stos
pop
shl
mov
push
push
popf
lods
mov
adc
in
movsl
test
outsl
sahf
iret
loopne
xchg
fisubs
pop
fdivp
hlt
test
fwait
pop
mov
xor
cmp
insb
lds
xchg
xorl
xchg
ret
xchg
in
leave
inc
fstpt
xchg
dec
loope
out
xlat
mov
fistpll
ffreep
mov
fldenv
sbbb
lock
lods
mov
loop
mov
shlb
cli
dec
mov
lds
in
mov
sub
sbb
cs
repz
sub
push
divb
clc
jmp
shll
sar
jge
push
leave
sub
insl
leave
aad
adcl
or
aam
out
inc
rep
mov
scas
shrl
sub
stc
rorb
testb
pushl
xchg
loopne
int3
lods
mov
mov
lahf
sub
hlt
shrl
ljmp
add
jns
ret
jg
xor
jg
xchg
or
inc
add
xor
stos
pop
in
mov
into
dec
out
repnz
mov
xor
call
aas
loop
jno
mov
push
and
das
dec
test
xchg
and
push
cmpsl
popa
out
mov
add
sahf
sub
dec
mov
sbb
in
sti
add
das
cltd
dec
int3
pusha
mov
or
mov
ljmp
cli
mov
dec
jne
xor
fsubl
mov
dec
pushf
in
das
ja
add
les
idiv
or
fdivr
pushl
lcall
movsb
sahf
leave
stos
rorl
inc
outsl
inc
cmpsb
sbb
stc
pusha
ss
lcall
pop
ds
enterw
and
pushf
inc
add
out
pop
push
daa
dec
mov
incl
fpatan
mov
xchg
pop
inc
cwtl
cltd
int
pop
pop
xchg
test
xor
loopne
push
in
mov
decl
jmp
mov
add
mov
mov
iret
xchg
xlat
push
ljmp
rclb
test
mov
insl
pop
sub
gs
imul
pop
mov
and
ds
mov
movsb
ss
xor
dec
mov
addr16
ljmp
inc
mov
rolb
icebp
ret
dec
les
mov
cwtl
sti
mov
decl
mov
mov
cs
inc
test
xchg
sti
imul
mov
cmp
adc
mov
pop
mov
addb
sbb
cmp
lds
ljmp
jmp
jecxz
cli
in
fcoml
jg
and
je
in
mov
shl
mov
ljmp
out
sbb
or
cmpsb
mov
pop
adcl
imul
sub
pushl
sbb
xchg
addr16
mov
leave
ret
xchg
and
jo
fnstsw
xchg
jbe
adc
les
cmp
mov
sbb
inc
sbb
mov
dec
rcr
aas
mov
inc
xchg
test
icebp
sahf
das
mov
enter
push
lock
inc
clc
inc
xchg
and
push
scas
stc
ljmp
clc
mov
scas
orb
jae
xchg
jge
or
in
mov
icebp
in
out
cmp
dec
push
mov
nop
cli
aam
xchg
sub
cmp
paddsw
stc
or
fcomp
in
cmp
mov
mov
ljmp
shrl
cmpsl
mov
hlt
add
cltd
popa
imul
push
fcos
fwait
ljmp
sub
mov
hlt
loopne
roll
mov
and
icebp
dec
mov
pushl
stos
icebp
inc
sbb
cmp
cwtl
enter
mov
mov
xor
push
pushl
incl
pop
sub
imul
lcall
mov
fdivrl
es
dec
add
lea
mov
sub
sub
test
push
push
or
fidivrl
cmpsl
imul
mov
lcall
lods
fwait
dec
adcl
cmp
loopne
push
fbstp
or
lret
pop
jns
add
loop
inc
hlt
inc
scas
gs
pop
or
jmp
aam
popf
pop
mov
xchg
add
lock
repz
mov
adc
and
pop
rcll
pop
mov
das
fisubrl
mov
jg
decl
loopne
jmp
in
outsl
or
and
xchg
xchg
xor
out
repnz
mov
lcall
std
lcall
xor
sbb
and
xchg
fsubrl
mov
and
sbb
je
sbb
ljmp
shll
jmp
je
loope
sbb
icebp
xchg
cmp
cli
sbb
xchg
xchg
outsb
ljmp
dec
sbb
out
cltd
jle
fldcw
inc
lea
mov
pop
mov
aaa
inc
in
out
clc
ljmp
xorb
pop
push
pop
cmp
xchg
clc
cmp
mov
dec
cs
adc
sahf
sub
jmp
out
pop
or
lret
inc
and
sar
call
mov
int3
shl
repnz
aas
nop
popa
movsb
insb
push
pushf
rcll
dec
sub
out
rolb
and
ss
add
loope
das
jle
sahf
inc
mov
jae
mov
lcall
xor
std
dec
ficoml
adc
movsl
inc
fidivs
mov
cmp
cmpsb
add
cmp
sbb
pop
int
shll
add
decb
jmp
andb
shr
mov
fidivs
out
pop
mov
mov
xchg
cmpsb
inc
sub
push
popf
mov
in
ds
mov
iret
mov
decl
stc
sbb
bound
jg
popa
mov
add
repnz
and
or
insl
mov
pop
loopne
pushf
ljmp
push
mov
ret
imul
xchg
xchg
loop
add
hlt
jae
movsb
call
ljmp
jb
mov
inc
xchg
jle
nop
test
loop
loopne
aaa
fstpt
fbld
mov
icebp
pop
or
mov
mov
lret
push
cmpsl
nop
pop
cmp
ds
xchg
fwait
ret
mov
stos
jg
imul
lds
pushl
std
cld
pop
xorb
pusha
nop
sbb
cmp
mov
lea
fstpl
xchg
aad
incl
dec
or
xor
or
xor
pop
insb
dec
out
ljmp
jecxz
pop
lock
mov
pop
fistpll
sbb
xchg
movsl
xchg
push
and
push
fistps
pushl
fnstenv
clc
adc
sbb
ret
cwtl
in
push
and
sub
incl
cwtl
mov
rolb
aam
or
dec
xchg
in
sarb
das
cmp
popf
mov
inc
mov
mov
rcr
shlb
inc
jae
sbb
mov
aam
add
pusha
lcall
repnz
rolb
xor
dec
aam
xchg
insl
mov
xor
addr16
adc
lret
jae
mov
mov
push
arpl
mov
out
popa
cld
mov
mov
and
clc
mov
cmpsl
inc
imulb
mov
int
mov
ss
enter
dec
test
cmpsb
outsb
mov
dec
pop
ss
outsl
sbb
push
or
orl
xor
mov
outsb
xor
stc
loop
leave
xrelease
leave
push
into
rolb
or
mov
aad
or
dec
roll
jne
jle
add
jge
lds
mov
cmpsb
sar
lcall
mov
or
or
jle
scas
mov
outsl
leave
add
mov
mov
mov
aaa
jg
push
mov
fdivs
sbb
jmp
cmp
push
xchg
pop
movzwl
mov
mov
ds
push
testb
pop
jp
sbb
pushl
cmpsl
clc
mov
or
inc
ja
push
adc
loopne
adc
pop
out
push
jmp
idiv
call
mov
mov
and
push
enter
mov
jge
scas
mov
inc
jl
pushl
push
iret
mov
iret
inc
addr16
jne
inc
rcrb
jecxz
pop
or
mov
test
mov
cmpsb
out
es
cli
push
testl
sub
add
dec
jnp
lcall
jmp
hlt
xchg
lret
ss
in
cwtl
and
mov
inc
pop
sub
call
jl
and
data16
cmp
ds
js
cs
mov
ficoml
fildll
mov
ds
cmp
or
pop
imul
idiv
fbstp
xchg
andl
cmp
lds
cmpsb
inc
insb
sub
jle
fwait
xchg
fildll
loope
push
pop
cmp
out
sbb
in
or
sbb
push
xchg
ret
cmc
hlt
lahf
mov
xchg
sbb
test
icebp
pop
dec
xor
out
dec
and
xlat
ljmp
cli
add
sbb
sbb
mov
lea
cmp
or
stos
adc
jle
ret
mov
call
outsl
pusha
pop
jae
cmc
jge
push
cmp
in
cmp
dec
pusha
add
jmp
mov
pop
adc
dec
mov
xchg
loopne
mov
ret
incl
mov
loopne
out
lds
mov
lcall
sti
ljmp
xchg
xchg
cmp
loopne
rcrl
sbb
add
imul
cld
jmp
fstp
data16
mov
sahf
das
mov
sub
mov
loop
in
insb
inc
jbe
xor
add
lcall
mov
imul
jle
jns
mov
icebp
cmp
or
aad
lcall
ljmp
xchg
sbb
pusha
jne
ljmp
pop
rcr
push
dec
ficoms
or
dec
out
xlat
mov
pop
cs
out
xchg
rcr
ja
hlt
roll
sbb
adc
mov
add
push
ljmp
dec
decb
inc
inc
test
add
jecxz
sbb
xor
xor
mov
jl
adc
pop
fisubl
push
dec
add
adc
inc
sub
push
mov
int3
fcos
lcall
mov
iret
mov
pop
sub
adc
faddl
sub
dec
sbb
pop
xchg
mov
pushl
test
add
daa
rolb
add
out
shr
sbb
lret
cmp
push
call
addr16
mov
dec
cmp
fldt
xchg
out
jbe
jl
icebp
dec
inc
je
call
jmp
outsl
sub
and
mov
data16
push
loop
dec
lret
sub
inc
call
ljmp
sub
and
je
cltd
flds
imul
call
fdivr
and
push
mov
cmc
sahf
ret
push
mov
or
jne
iret
in
xchg
sbb
ret
in
inc
jbe
loope
clc
mov
ficomps
mov
xor
pop
and
je,pn
ljmp
or
in
repnz
orb
pop
shrl
jmp
shl
fwait
xchg
cmp
ljmp
out
jbe
js
pushf
mov
cli
dec
and
negl
int
jbe
inc
fdivrs
in
mov
mov
pushl
ja
movsl
popl
pop
and
stc
gs
jbe
fidivl
nop
jle
dec
cld
cmpsl
sti
sahf
jmp
adc
pop
out
arpl
insb
movsl
mov
cld
shlb
in
add
inc
or
cld
push
inc
hlt
mov
adc
mov
addb
in
lods
dec
mov
into
leave
icebp
sbb
mov
jnp
imull
add
lea
fstpl
lcall
adc
iret
subb
push
push
jp
dec
xor
inc
inc
sbb
gs
sub
lcall
call
stos
jp
test
out
scas
cmpsl
or
mov
jp
mov
cmp
mov
imul
mov
movsl
jg
dec
insl
push
add
push
sub
repnz
aaa
push
scas
push
push
inc
adc
fmul
loope
ljmp
inc
rclb
or
xchg
pop
aad
stos
push
adc
in
push
jo
mov
test
movsb
or
adc
inc
leave
aaa
shll
sbb
lods
ja
and
pushl
cmp
xor
call
repz
bound
and
pop
adc
jbe
mov
aaa
and
jg
sub
ss
fidivs
jmp
js
negl
cmp
dec
inc
push
push
leave
adc
popa
and
fs
jmp
sbb
jp
and
jge
sbb
and
adc
or
add
adc
pop
cmp
cmp
call
fcoml
lods
loope
xor
fistpl
orl
push
mov
hlt
dec
rorb
daa
into
sbb
aaa
adc
xlat
ss
mov
cld
rorl
clc
mov
jae
cmp
fwait
test
decl
jecxz
fdivrl
push
push
sbb
es
dec
iret
arpl
ljmp
cld
jns
icebp
inc
pusha
push
lods
dec
push
push
jns
mov
icebp
sti
loop
pusha
sub
in
lcall
sti
and
scas
dec
sbb
wbinvd
xor
in
dec
cmpl
call
aaa
int
cli
enter
jo
and
scas
addl
cli
scas
jp
mov
filds
add
mov
inc
mov
push
cli
repnz
and
mov
cmp
and
xchg
inc
outsb
in
push
jg
add
dec
pushf
sbbb
or
ljmp
hlt
and
jp
mov
sub
dec
loopne
dec
or
jmp
pop
int
inc
cmp
scas
pop
xor
ja
das
stc
inc
mov
call
cmc
adc
adc
cmpsb
mov
addr16
pushf
mov
jbe
pop
js
dec
int
push
push
sahf
in
ljmp
ja
idivb
fimuls
repnz
xchg
and
punpcklbw
dec
fucomip
pop
jno
call
jbe
sub
in
addr16
mov
sub
fwait
cld
cmc
aas
ret
add
aad
insl
lcall
jecxz
fldl
mov
enter
int
test
mov
clc
test
loope
nop
in
jle
aas
dec
popf
loope
mov
sbb
sbb
push
jb
fadd
pushl
push
outsl
rorl
in
push
in
xchg
mov
sarb
popa
out
leave
fmuls
hlt
inc
jno
cmpsb
pop
jecxz
dec
jg
and
test
add
in
push
dec
mov
mov
cmp
incl
or
mov
push
outsl
sub
inc
imul
fistl
sbb
mov
scas
out
fbstp
fcoml
lcall
xor
cmpsl
imul
jl
in
xlat
arpl
rolb
pop
nop
movsl
fldenv
jg
mov
sbb
pop
sub
mov
jb
pushl
outsl
fwait
cwtl
xlat
fcmovbe
cmp
pop
mov
jg
sub
call
jb
push
movsb
lds
sahf
rcl
scas
dec
cmp
pop
movsl
mov
push
dec
sub
jmp
xor
or
mov
js
jge
lret
dec
sbb
inc
push
test
inc
sub
xor
fistl
mov
shrb
mov
xorb
scas
jp
pop
mov
mov
adc
pop
decb
int
jae
les
jbe
dec
lcall
pushl
loopne
add
mov
xlat
adc
push
fsubs
incl
xchg
insb
fdivrs
rcrl
sub
push
mov
push
push
in
addl
xlat
sbb
scas
decl
lcall
sbb
push
and
push
out
insb
push
xor
lret
outsb
and
ljmp
outsb
and
pop
sub
xchg
and
inc
movsl
enter
in
in
aam
jmp
pop
xor
inc
xchg
in
std
jg
aas
fs
xchg
pusha
dec
cli
push
aaa
push
ljmp
mov
add
push
push
and
es
mov
dec
sbb
ljmp
not
xchg
sti
insb
stos
arpl
ret
mov
stos
push
xor
jno
insb
sti
iret
push
insb
add
aam
mov
aaa
xchg
incl
ljmp
test
cld
imul
jg
lret
sbb
lcall
scas
ds
adcb
pushf
mov
inc
fmull
dec
add
dec
mov
call
cmovne
ljmp
jmp
cmp
jae
sbb
mov
aam
xlat
decl
cli
fcoms
mov
cmp
dec
sbb
into
adc
xlat
test
inc
sbb
cmp
cmpl
dec
icebp
cmp
dec
nop
lahf
sub
cs
dec
xor
and
in
xor
dec
or
add
mov
jbe
mov
addr16
push
movsl
pop
mov
aam
fnsave
mov
lds
inc
int
fnstcw
mov
and
test
xor
out
add
out
cmp
pop
movsb
dec
push
jg
mov
out
jo
mov
pop
fisubs
lret
test
shrl
pop
stos
xor
icebp
jmp
adcl
push
into
pop
das
xchg
aam
and
cmc
loopne
inc
sub
out
pop
push
mov
push
and
lret
or
icebp
jmp
cmc
sahf
clc
imul
call
pop
mov
and
jne
dec
ffree
sbb
sbb
sbb
push
pop
call
rcll
mov
mov
es
mov
mov
xor
cs
mov
std
insb
dec
and
std
cmc
mov
call
and
push
scas
jnp
das
dec
push
adc
push
adc
cmp
decl
adc
es
xorb
dec
sti
push
push
ret
xchg
sbb
test
es
cmp
pushl
in
or
jo
and
jecxz
push
mov
ret
cmp
jb
repnz
incl
and
sub
std
adc
pop
cld
sbb
xchg
insl
vpmulhuw
das
xchg
mov
jmp
gs
loop
movsl
mov
lock
outsb
inc
mov
fldenv
gs
fstl
call
sub
iret
adc
mov
scas
lahf
mov
roll
jo
shll
sbb
outsl
cli
out
rorb
jg
out
lock
fldcw
fsubl
jo
movsl
ud0
call
mov
int3
sbb
xor
or
mov
add
pop
adc
lods
jae,pn
cmp
pop
lock
jmp
bound
xor
int3
push
jae
lods
pushl
or
shl
inc
cmpb
lcall
xchg
je
xchg
ljmp
push
jmp
inc
iret
fs
test
mov
aaa
inc
inc
fs
mov
das
mov
adc
jecxz
dec
test
sub
pop
mov
mov
in
cmc
fwait
into
mov
out
sub
sar
decl
repz
outsb
clc
add
incl
xor
je
adc
xor
sub
fcomip
call
lock
lret
mov
cltd
mov
jl
jmp
stos
inc
clc
ljmp
xor
dec
push
mov
ljmp
fisubrs
xor
in
mov
jge
xor
jne
je
mov
ret
sbb
pushl
das
adc
movb
cmpb
loopne
ret
out
or
call
icebp
push
call
cld
incl
cmp
dec
mov
aam
les
out
ljmp
es
xor
ficoms
mov
mov
mov
mov
lcall
xchg
jne
cmp
add
add
xorl
in
stc
enter
incl
notb
xor
jp
jecxz
and
cmp
add
inc
imul
xchg
dec
pop
jl
mov
push
addl
icebp
iret
ret
and
jmp
negb
jb
sub
cmpsl
cmp
enter
addl
clc
push
test
sbb
adc
mov
sub
mov
popa
out
les
dec
imul
lcall
push
sbb
fistps
or
lods
sbb
jle
jmp
lcall
jg
jnp
cwtl
inc
mov
dec
fwait
lods
inc
pop
je
cmpsb
and
cwtl
push
add
push
stos
icebp
ljmp
jb
mov
filds
add
sub
push
mov
mov
fisttpl
inc
lcall
mov
out
aas
push
out
or
lods
mov
jl
jb
call
cmp
push
lahf
subl
mov
int3
aam
push
mov
or
call
push
inc
pop
mov
cltd
into
outsl
xor
test
inc
xchg
leave
mov
and
sub
sar
jmp
jns
xor
fisubs
pop
mov
push
jnp
js
mov
pop
fwait
pop
jg
dec
clc
lcall
jae
ja
cmp
push
jae
xchg
jae
ljmp
into
pop
movsb
test
lahf
xor
dec
enter
cli
call
sarb
jns
jmp
xchg
inc
js
cli
cltd
pop
xchg
and
mov
mov
jbe
add
js
sbb
push
add
sbb
xor
mov
pop
sub
ficomps
int3
mov
enter
idiv
decl
or
sub
cmp
sbb
popf
xor
stos
jge
ljmp
lock
mov
mov
fptan
aam
mov
xchg
fcomip
call
adc
cld
sub
sti
pop
sub
mov
mov
ljmp
or
lods
mov
add
inc
out
and
xor
ret
cltd
dec
jmp
sub
xchg
cmpsl
cld
dec
mov
ficoms
mov
inc
inc
xor
mov
out
in
jne
cmpsl
push
iret
cwtl
inc
adc
add
subb
addr16
cmpsb
call
test
out
mov
mov
xor
adc
outsl
ja
add
mov
dec
inc
cmc
add
pop
cmpsb
adcb
adc
cmp
adc
sbb
rol
decl
or
dec
add
hlt
scas
pop
mov
xchg
add
call
pushl
xchg
in
cli
popf
jp
mov
shrl
cmp
lods
jle
fldcw
daa
in
lea
aas
test
xchg
xor
je
addr16
push
add
xchg
add
call
pop
fwait
test
push
in
mov
lea
inc
cmp
jp
mov
addl
mov
inc
rclb
sub
daa
into
sbb
sub
jno
stc
cmpsb
in
cs
outsb
clc
call
cmc
dec
insb
jle
cmp
mov
xchg
aam
cli
fwait
in
fildl
out
push
jg
sahf
xor
outsl
in
lret
aas
in
mov
lods
pop
mov
lcall
lock
xchg
lahf
int
pushf
xchg
adc
in
push
pop
in
fisttps
fsts
xchg
push
inc
call
xor
mov
inc
mov
mov
shlb
push
addb
mov
jmp
lods
cmp
pop
cmpb
xor
inc
push
adc
dec
imul
pushl
fmuls
sub
lret
sub
test
mov
and
pop
call
push
repnz
outsl
sbb
dec
sub
imul
xchg
fstpl
lret
xchg
sahf
mov
or
call
imul
cmc
mov
cwtl
dec
rcll
lcall
mov
xchg
sub
inc
pop
dec
dec
shr
xchg
jmp
data16
ret
xchg
insl
push
push
fisttps
push
pop
enter
gs
mov
sub
fs
push
test
call
fisttpll
pop
lcall
out
sub
sub
xor
popa
ljmp
call
jnp
mov
mov
lret
cltd
cmpsl
dec
inc
into
fmul
xor
xor
cltd
out
cmpsb
or
pushl
xor
jecxz
jbe
fisttpl
sbb
push
in
cmp
ljmp
push
pop
xor
sti
daa
cli
or
push
into
fnsave
mov
pop
divb
frstor
dec
sub
mov
fldcw
popf
stc
push
andb
dec
push
lahf
cmp
mov
js
ljmp
and
dec
add
pop
aaa
inc
cmpsl
roll
data16
push
in
clc
add
jmp
lods
inc
cs
clc
xchg
jecxz
repz
call
aaa
nop
out
repz
mov
sahf
inc
movsl
in
fstps
push
mov
aad
pop
xchg
and
test
fisttps
in
mov
ds
imul
dec
push
fldenv
and
and
mov
jle
je
ret
mov
pop
std
mov
lds
clc
sbb
inc
shrl
add
inc
inc
gs
mov
in
cmp
pushf
or
cmp
or
dec
sahf
push
scas
orl
rolb
nop
push
or
mov
cltd
pop
fimuls
mov
push
iret
jp
jbe
stc
dec
adc
sahf
add
pop
inc
lods
icebp
cmp
sahf
adcb
push
cmp
inc
dec
mov
add
sbb
and
fimull
rcrb
test
aam
sub
punpckhwd
decl
es
stos
mov
in
adc
mov
jge
cmp
mov
popa
imul
jmp
mov
jmp
andb
out
and
pushf
sub
subl
cmp
std
lahf
jae
test
hlt
fdivrs
sbb
jns
dec
test
into
push
orb
push
sub
cld
ja
mov
cmp
jnp
xchg
stos
pop
jg
pop
clc
int3
incl
ja
mov
decl
mov
inc
into
jns
sub
sbb
pop
stc
and
or
clc
mov
incl
out
dec
jg
mov
sub
inc
into
xor
sar
pop
mov
hlt
ds
push
ljmp
cmc
cmp
inc
adc
or
lock
mov
add
jmp
idiv
aad
mov
in
gs
jg
mov
insb
adc
push
shll
mov
mov
outsl
mov
repnz
jnp
sbb
popa
hlt
inc
jns
cmp
mov
pushl
stos
mov
add
pop
rorl
in
mov
jle
into
pop
daa
call
jmp
or
test
mov
in
js
in
and
push
mov
cmp
push
into
jle
enter
sbb
cmp
ret
std
jge
jge
pop
xchg
out
orl
fadds
clc
outsl
xor
inc
push
in
mov
pop
push
xchg
sub
mov
mov
and
or
mov
je
xchg
sbb
test
insl
incl
cld
add
pop
lds
out
add
mov
ds
mov
lcall
add
cmpsl
xor
xor
add
ret
dec
cmc
add
ja
call
push
icebp
filds
sub
fwait
mov
sub
and
xchg
dec
push
outsb
sbb
fs
push
mov
push
adc
fadd
in
mov
and
mov
xor
testl
cmpsb
ss
cmp
mov
int3
xchg
cmp
xor
cmp
pop
icebp
ljmp
sub
and
jae
adc
movsl
mov
xor
cs
lcall
out
rorl
pusha
jl
es
je
stc
dec
scas
test
ss
jmp
in
jecxz
cwtl
ja
cltd
les
jo
lods
mov
push
test
mov
cmc
mov
mov
mov
sbb
jne
stc
fistpl
cmpsl
jo
arpl
jmp
jmp
mov
lahf
lods
mov
sbb
xor
xchg
sub
sbb
lret
loop
dec
loop
and
mov
int3
adc
out
testb
inc
lods
in
jmp
daa
dec
and
xlat
mov
call
mov
popf
int3
scas
seta
scas
adc
adc
cmp
stc
sbb
pushl
jo
ret
call
aad
and
sahf
xor
sbb
decl
cld
imull
fsin
test
fisubs
lods
lcall
cwtl
fistps
out
pop
inc
std
and
push
sar
movsl
es
add
loop
nop
or
les
push
adc
add
jmp
out
cmp
les
movsl
ljmp
cs
push
aas
int3
push
stos
sar
add
mov
push
push
mov
add
mov
sub
add
incl
enter
lods
mov
inc
xchg
mov
xorb
lods
sub
filds
push
fisttpl
fistpl
aam
cmp
mov
imul
int
jbe
inc
and
add
xchg
mov
sbb
inc
call
push
cmp
out
jmp
adcl
jmp
mov
add
cmp
stc
xor
dec
test
mov
jb
push
dec
jge
jne
enter
arpl
adc
xlat
scas
clc
dec
cmpsb
xchg
lret
mov
jle
push
xor
cmp
mov
inc
push
xchg
outsl
loope
test
in
mov
cmpsb
enter
and
testb
adc
cs
cmc
jmp
adc
jg
fcmovnbe
dec
sar
popf
cmpsb
cwtl
inc
loopne
cmp
in
incl
and
inc
jl
push
mov
lret
jp
sbb
pop
push
mov
sbb
push
inc
mov
xor
daa
outsb
or
adc
fistpl
incl
jnp
shr
mov
jne
fadds
xchg
xor
popa
fcmovnb
mov
mov
sbb
outsb
call
inc
or
mov
mov
lahf
mov
bound
add
push
out
sbb
outsb
sub
lcall
sub
adc
sub
sbb
movsl
sbb
add
or
bound
hlt
les
mov
incl
mov
std
mov
jb
xchg
xor
cmc
or
stc
aam
xchg
rcrb
pop
cmp
cld
decl
mov
pop
pop
pop
pusha
lahf
push
jmp
and
mov
hlt
mov
call
sub
pusha
sub
push
int3
sbb
push
jno
sbb
mov
inc
sti
and
jmp
and
jl
dec
inc
leave
mov
xor
lahf
jge
int3
or
mov
pushl
stos
adc
push
xor
inc
push
push
xchg
mov
xor
push
xchg
ljmp
dec
cmp
mov
test
cmp
adc
in
call
retw
nop
btc
mov
mov
mov
fsubrl
xchg
pop
mov
lcall
mov
popl
cmp
xchg
les
aam
adc
xchg
jb
ljmp
lcall
pop
dec
fadds
or
mov
pop
fsts
adc
dec
pop
pop
call
cmp
lods
xchg
aaa
idivl
cmp
lock
sti
aaa
cmc
or
std
cmp
enter
xchg
subb
in
loopne
test
adc
adc
daa
add
call
push
and
mov
popl
ret
insl
xor
stos
xor
fldcw
dec
push
add
mov
jb
lret
jecxz
xor
nop
inc
popa
jl
push
dec
mov
lcall
flds
mov
sarl
pop
or
jg
mov
dec
pop
dec
test
inc
jmp
jns
push
mov
add
test
push
and
ljmp
xchg
dec
adc
out
sbb
xchg
dec
mov
jne
mov
incl
ljmp
lcall
pop
out
or
xchg
gs
fldenv
orb
add
ljmp
scas
add
mov
pop
cs
adc
fdivr
lcall
aam
testb
mov
or
lds
adc
iret
dec
rcl
shrl
mov
ret
pusha
or
loopne
inc
add
jae
jb
adc
cltd
pop
lcall
outsb
mov
aad
shrl
or
daa
rcr
aas
cli
jno
loope
shr
xchg
ds
call
pop
dec
insl
jne
ja
lock
jno
aam
inc
movsb
xchg
adc
ja
jmp
push
sub
popf
lcall
sahf
ljmp
cmp
dec
mov
pmaxsw
push
inc
leave
data16
into
ja
cmp
or
fdivrs
mov
ja
pushf
adc
call
xor
push
out
ret
fnstsw
jmp
insb
shr
int3
incl
out
addr16
and
xor
jo
mov
xchg
mov
ret
cmp
loopne
mov
adc
aas
mov
inc
cli
into
push
xchg
jns
mov
fadds
je
int
cmp
xor
push
movl
std
movsl
cltd
out
repnz
pop
iret
jnp
int
mov
scas
cmpsb
aaa
test
adc
push
lods
adc
sbb
loop
in
cwtl
and
in
movzwl
fistps
push
jle
cli
idivb
std
and
out
push
push
and
scas
aad
into
pop
stos
jg
jle
test
popf
cmpsl
sarl
movl
mov
loopne
ljmp
jnp,pn
rcrl
xchg
test
sbb
push
jae
sarl
in
xchg
mov
sahf
mov
outsl
mov
fmulp
jae
mov
mov
mov
inc
mov
cmp
cmp
inc
xchg
movsl
rcl
push
js
cli
decl
mov
jb
jmp
mov
cli
sub
into
pop
mov
dec
mov
xchg
or
ljmp
mov
jle
inc
push
push
outsb
pop
sub
xchg
dec
insl
or
subb
stos
hlt
icebp
call
mov
pop
pop
outsb
mov
lods
imul
aad
out
out
daa
xchg
pusha
mov
outsl
clc
filds
andl
cmp
xchg
mov
mov
xchg
dec
mov
cmp
in
dec
or
loopne
xchg
or
push
xor
sbb
stos
mov
jmp
jmp
xor
sbb
or
pop
aas
lcall
sbb
fildll
lret
mov
cmp
movsl
mov
pop
inc
ror
or
dec
mov
incb
fcompl
pushl
dec
or
jmp
call
in
mov
dec
stos
cmp
sbb
mov
sbb
rorb
jbe
jmp
sub
ret
out
into
and
daa
test
pop
leave
stos
mov
jno
xchg
fiadds
pop
es
pushl
push
sti
xchg
adc
sbb
and
or
call
mov
decl
sbb
ss
addr16
and
ljmp
mov
test
incl
insb
test
inc
js
shlb
aaa
push
in
push
add
std
pop
and
dec
incl
loopne
clc
lret
scas
std
mov
pop
jnp
inc
dec
or
sbb
push
ret
call
cld
mov
inc
push
sbb
mov
cmp
inc
xor
and
call
ret
imul
fsubrl
leave
aad
iret
loop
sub
push
pop
sbb
ljmp
incl
out
sub
sub
arpl
arpl
ret
mov
sarl
ljmp
mov
add
dec
movsb
scas
jae
lahf
ret
mov
lods
jbe
cmp
inc
jg
sbb
mov
hlt
lds
sub
je
mov
push
jg
jg
add
cwtl
imul
lahf
inc
or
xchg
ljmp
neg
lods
dec
jno
xor
ret
xchg
ds
ret
and
ret
xor
mov
inc
repnz
jne
pop
adc
add
inc
loopne
ss
lods
or
aas
mov
mov
add
mov
pushl
cmpsb
xorb
add
add
push
decl
mov
pop
mov
adc
pop
sbb
mov
fisttps
icebp
cmp
decl
push
xchg
dec
test
aam
imul
inc
add
jmp
ljmp
rolb
sub
int
loopne
push
lret
mov
cwtl
jge
adc
jmp
movsb
jnp
pushl
shlb
es
aam
les
dec
mov
add
mov
es
mov
xor
cmpsb
pop
hlt
jbe
sub
int
dec
sti
xlat
call
jle
cmpsl
jg
xor
or
mov
pop
cmp
out
mov
mov
decl
ss
mov
or
pop
fdivrs
jecxz
and
hlt
pop
inc
inc
xor
in
fisubs
cmp
dec
pcmpgtb
mov
inc
addr16
jg
decl
sti
mov
sbb
stos
push
push
or
addb
jae
sbbl
push
ja
fisubl
cmc
mov
xlat
pop
cli
repnz
stos
out
mov
orl
cmp
lea
fsubs
jne
insl
imul
cmp
leave
and
incl
adc
mov
in
push
cltd
scas
mov
mov
cld
fsubp
push
gs
out
sub
addb
and
std
xor
cld
lcall
call
xchg
lods
dec
sti
jmp
fwait
inc
sbb
pop
push
sbb
add
xchg
ljmp
add
lea
inc
dec
shll
mov
pushf
pop
pop
xchg
inc
pop
std
pop
loope
and
int3
inc
pusha
fcoms
loopne
test
int
int
pop
jo
inc
pushf
pop
push
sub
sub
push
std
clc
fsubr
cmp
push
or
daa
cmp
loop
pop
mov
push
or
mov
pushl
inc
jp
pushf
push
outsb
mov
outsb
xchg
ja
xor
fdivl
xchg
testl
pop
loopne
fnstcw
pop
xor
sahf
dec
fcomip
sub
add
dec
mov
shrb
insl
test
mov
in
pop
mov
pop
lock
js
loop
lret
sbb
daa
dec
das
cmpsb
sbb
xchg
or
mov
push
add
decl
les
push
push
addr16
jbe
std
jecxz
inc
ljmp
sbb
and
pushl
ret
fs
xchg
outsb
jo
lcall
cmp
pop
fidivrl
fistl
aaa
add
das
fsubrl
add
and
xchg
std
das
push
push
sar
pop
std
dec
out
leave
es
sub
lock
mov
test
cltd
jl
decl
or
mov
cltd
dec
enter
ss
lret
pusha
jl
aad
clc
aas
dec
pop
mov
roll
ret
mov
fnstsw
mov
stos
clc
mov
and
lds
fiadds
lcall
add
out
movsl
sub
sbb
sbb
xor
mov
mov
mov
scas
clc
xor
jb
pop
out
add
cs
sbbb
ljmp
ret
cmp
roll
ror
std
cld
sub
imul
cli
sbb
inc
sbbb
xor
mov
add
xor
fisttps
outsl
sbb
out
xchg
sub
out
xchg
fwait
sub
sub
mov
subl
sbb
stos
ljmp
and
or
movsb
jns
sahf
mov
dec
pusha
int3
repz
cmp
cmpsl
aaa
dec
ds
xchg
or
loopne
mov
ficomps
pop
popf
xor
clc
call
xorb
lock
data16
dec
sbb
scas
mov
incl
cld
out
mov
jno
rcl
clc
ret
jecxz
add
ret
fmull
fdiv
pushl
push
jge
pop
test
jg
call
loopne
add
repnz
jno
std
jmp
or
xchg
ret
inc
cwtl
push
les
enter
insl
xor
pop
and
fbld
fsubrl
insl
in
dec
sub
int
cmp
dec
cmp
pop
cmp
cmp
xor
or
decl
lret
sbb
mov
adc
dec
sub
or
les
out
lods
mov
or
adc
mov
adc
dec
nop
stos
pop
pop
arpl
jb
sti
pop
adc
popf
xchg
pop
subb
ljmp
shlb
xor
lods
movsl
pop
imul
xchg
adc
or
mov
rolb
int3
out
test
mov
test
xorl
jmp
inc
cmp
push
inc
popa
mov
repnz
add
xchg
loopne
call
repz
mov
cs
push
push
sbb
sbb
inc
lcall
hlt
out
mov
pushf
jmp
sub
shrb
ret
ret
xor
push
xor
call
xor
in
popa
test
lahf
jae
mull
mov
add
or
xchg
add
rcrl
mov
faddl
gs
decl
lcall
outsb
push
les
imul
dec
mov
test
push
push
xor
test
push
push
adc
sbb
mov
push
nop
fcomip
cmp
sarb
test
jg
movsb
shlb
mov
andb
xchg
js
and
ja
stos
gs
pop
jb
cld
lds
incb
or
cmpl
in
and
daa
dec
push
sub
dec
mov
out
dec
imul
xchg
sub
gs
jmp
lds
jo
pop
pushf
rorl
jae
inc
sbb
aas
or
rorl
xchg
mov
jmp
mov
movsl
sbb
pop
adc
inc
cmp
xchg
xchg
cmpsb
push
mov
mov
mov
sti
or
jno
mov
dec
xor
repz
rep
adc
rorb
or
lods
fdivr
test
inc
cmp
sbb
outsl
inc
jb
pushl
push
daa
sbb
bound
cltd
xchg
movsl
clc
mov
or
adc
pushl
jp
add
aam
out
dec
out
shr
mov
rolb
xlat
jge
pop
xchg
lods
insb
inc
ljmp
jmp
fcmovnb
maxps
nop
outsl
jo
in
jge
test
in
retw
cs
into
mov
ljmp
sti
leave
scas
inc
test
aad
das
out
pop
ja
push
xor
mov
push
bound
incb
push
jo
inc
out
neg
lahf
xchg
push
dec
cmp
into
adc
sbb
adc
loope
out
sub
lds
dec
aad
mov
mov
rolb
dec
pop
inc
or
xorl
or
js
pop
cli
incl
subb
into
dec
xchg
jbe
stos
cmpb
inc
mov
fcomip
out
sbb
or
out
xorl
cmp
and
sti
decl
aad
sub
imul
leave
sti
test
jge
mov
std
lcall
sub
int3
daa
or
adcl
dec
pop
inc
ds
idiv
pop
add
sub
sbb
push
jb
pmaddwd
popf
jge
scas
push
rolb
packsswb
imul
loop
mov
dec
or
mov
pusha
call
xchg
movsb
cmp
fcmovne
add
mov
mov
lcall
nop
scas
clc
pop
hlt
sbb
and
ret
popf
and
mov
incl
push
pop
subb
mov
push
icebp
pop
and
jecxz
loopne
fnstcw
and
pop
insb
mov
aam
outsl
mov
lock
cmp
fidivrs
aad
pop
or
decl
mov
mov
sahf
cmp
inc
ffree
stos
push
mov
add
mov
mov
outsl
push
adc
ror
add
test
jg
lcall
fsts
int3
dec
xor
push
cld
pop
push
push
cmp
or
push
outsl
lcall
xchg
popf
xchg
push
xchg
and
add
imul
decl
cmp
mov
mov
dec
repz
mov
mov
xchg
call
loopne
cmpsl
test
mov
pop
out
add
cmp
mov
mov
jo
jne
test
mov
dec
jecxz
ljmp
call
xchg
nop
dec
dec
adc
pusha
or
sbb
daa
std
cmpsb
int3
hlt
cmp
inc
popf
jae
adc
cmp
pop
pop
ljmp
leave
aad
mov
xchg
sub
cli
incl
push
mov
repz
pop
popa
xor
inc
divb
int
add
jmp
push
adc
aas
mov
adc
push
scas
push
lea
ret
jmp
adc
fsubl
pop
test
dec
gs
dec
mov
out
cmp
push
fs
ret
pushl
and
aad
fnsave
xor
imul
mov
mov
out
mov
jmp
lret
sub
xchg
pop
or
incl
aaa
lcall
adc
push
shrb
xchg
add
cmp
and
jg
xchg
mov
sub
dec
fadds
pop
sarl
push
mov
lcall
push
stos
xchg
adc
pop
mov
pop
mov
mov
push
and
in
xlat
mov
mov
push
cltd
popa
out
add
and
or
jno
jmp
fs
hlt
aaa
mov
pop
hlt
mov
cmp
sub
nop
insl
fcomip
mov
cmp
fsts
mov
loopne
test
pop
js
rolb
jmp
js
mov
pop
lock
fmuls
fistl
adc
ljmp
sub
inc
cmp
leave
pusha
xchg
call
std
xchg
repnz
push
stc
inc
les
loopne
dec
incb
add
adc
test
movsl
or
push
pushf
mov
xor
push
fcoml
jb
xor
cmp
imul
rol
fldl
fucomip
cli
shll
mov
inc
pop
mov
les
add
adc
add
inc
das
mov
out
cs
push
mov
into
lret
cmp
shll
mov
in
cltd
nop
fcoml
lahf
push
mov
shll
jo
stos
fldl
mov
fdivl
bound
xchg
rorb
nop
int
adc
lret
arpl
mov
data16
ret
pop
repz
cwtl
pop
rorl
in
and
mov
sbb
mov
push
jp
cmp
sub
jo
push
sahf
out
adc
call
inc
cmp
cmp
stc
pusha
scas
cld
add
pop
lds
cmpps
outsb
daa
aad
icebp
lea
pop
lock
les
call
test
shl
pushl
cld
pushl
jmp
inc
jmp
jb
cmc
bound
popf
mov
sti
cmp
cli
call
lahf
mov
inc
dec
dec
fidivrl
dec
cmp
adc
scas
aam
out
or
pop
add
xor
cmp
lcall
adc
pop
jecxz
es
inc
cld
mov
js
xchg
inc
pushf
mov
cmp
decl
decb
mov
les
cmpsl
and
cmp
push
pop
mov
inc
movb
push
mov
push
push
adc
dec
inc
popf
jl
lret
pop
cltd
mov
mov
mov
mov
jge
mov
jge
mov
sarl
cmp
decl
sub
int
dec
sahf
pushf
sub
sub
ret
pop
vmwrite
fidivl
cld
mov
sbb
movsl
cmp
or
scas
and
adc
dec
incl
cld
sub
popa
or
add
bound
sbb
pushf
ds
ljmp
mov
push
lret
repnz
shlb
push
aam
jb
decl
sahf
dec
dec
test
jmp
and
rcrl
in
adc
imul
incl
add
pop
push
pop
xchg
loopne
in
pop
xchg
mov
lcall
icebp
pushl
mov
lcall
sub
loop
js
outsb
cmpsl
stos
scas
call
mov
mov
in
stos
test
and
stos
pop
enter
cmp
jl
das
faddl
scas
and
leave
dec
shl
mov
notl
pop
and
fisubrl
mov
mov
sar
jmp
rcll
xchg
lahf
cltd
push
jp
movsb
andl
ret
push
inc
inc
lret
add
mov
fs
pusha
mov
lods
shrb
jg
dec
jno
xor
push
stc
decl
push
out
insl
outsl
and
adc
add
pushf
xchg
sbb
movsb
imul
pushl
xor
test
aad
js
jmp
popa
les
aaa
sahf
xchg
rcr
leave
insl
iret
decl
push
or
mov
icebp
push
add
lods
push
fldenv
stos
cmp
jmp
imul
inc
movsl
in
pushf
ss
sub
leave
rcrl
faddl
xor
decl
sub
mov
roll
mov
sub
sub
push
aas
push
nop
inc
test
inc
jmp
cwtl
jp
and
jge
jbe
pop
cld
jmp
hlt
cmpl
mov
les
scas
mov
jno
xchg
push
ficompl
pop
rcrb
mov
inc
in
iret
mov
bound
push
jg
jp
mov
insb
sub
test
mov
inc
outsl
shlb
lahf
mov
jno
test
push
test
testb
mov
cmc
sub
int3
aad
nop
mov
in
sub
sub
xchg
xchg
movsb
push
mov
pop
mov
loopne
sub
xchg
adc
fnsave
xchg
sbb
inc
in
into
das
adc
repnz
adc
mov
xchg
arpl
pop
push
es
addb
and
ds
sahf
xorl
push
xor
jne
dec
movsb
jecxz,pn
int3
ljmp
call
cmpsb
mov
xor
xchg
loope
cltd
out
push
mov
call
call
cmpsb
lock
lret
push
dec
ret
cwtl
addr16
push
in
xor
sbb
stos
xchg
fwait
imul
inc
cmp
std
cmp
cmp
repnz
rol
mov
xchg
lods
es
repz
pushl
int3
pop
in
ja
push
das
jbe
rclb
dec
aaa
mov
cmc
nop
pop
sub
adcb
sbb
stos
gs
mov
mov
adc
xlat
add
mov
in
hlt
cld
dec
or
jns
push
sub
hlt
aas
insl
and
mov
out
add
std
jb
push
lock
test
xchg
test
dec
test
shl
test
push
push
mov
incl
cli
pop
adc
add
ret
pop
fildl
aad
mov
push
mov
push
mov
out
mov
cmp
dec
daa
push
xor
xchg
dec
rcr
pop
sbb
cmp
or
stos
mov
add
mov
data16
add
adc
mov
adc
cs
pop
pushl
mov
push
loop
cwtl
jecxz
dec
push
into
push
adc
jmp
fcom
mov
call
push
xor
sbb
xchg
or
mov
inc
repz
stos
jne
mov
cld
nop
xor
pushl
imul
xchg
fdivl
insl
xchg
ret
dec
outsb
mov
push
xchg
ja
mov
out
mov
es
pusha
adc
clc
out
fistpll
imul
mov
dec
push
es
sbb
and
out
jg
hlt
cmc
fs
pushf
inc
out
inc
jnp
jo
cmp
pop
cwtl
ljmp
mov
outsb
sarb
jl
cli
repz
int3
push
outsb
outsb
xchg
and
stos
clc
adc
lret
mov
cmp
pop
int3
inc
xchg
rorl
loopne
decl
push
fwait
cli
push
dec
int3
ficomps
mov
mov
sarl
push
jmp
pop
les
jb
jmp
sbbb
mov
sbb
lcall
loop
dec
out
call
test
addr16
and
shll
decl
test
js
cmc
lret
mov
mov
int3
movsl
cmp
je
jbe
and
shrb
xchg
call
jns
mov
ljmp
mov
mov
xor
inc
mov
jle
add
inc
dec
es
or
add
iret
ljmp
hlt
xchg
sub
enter
and
ljmp
loop
push
dec
jl
cmp
sbb
pushf
out
inc
push
and
and
dec
shrb
and
mov
xor
cmpsl
das
xchg
xor
fsubl
push
lods
lods
pushf
sbb
jmp
xchg
mov
push
or
or
sti
mov
cwtl
into
mull
lods
inc
insb
repz
pop
mov
movsl
lcall
std
test
pop
loopne
cmp
add
stos
cmp
ljmp
out
arpl
or
int
push
push
xchg
fldl
mov
imul
decl
inc
insb
inc
test
mov
movsb
adc
decb
bound
cmp
lret
jl
ljmp
cld
lcall
push
sub
xchg
test
cwtl
mov
fstl
jg
mov
ljmp
cmp
add
das
adc
xchg
xchg
aaa
mov
jnp
fisttpl
stos
cmpsl
pop
push
lds
outsl
xor
aad
mov
test
mov
decl
add
pop
pop
into
or
xchg
sbb
hlt
cmp
xchg
outsl
sub
hlt
ret
push
cmp
out
out
mov
or
imul
push
hlt
add
inc
jo
outsb
imul
sub
ljmp
inc
fimull
and
pop
jno
and
sbb
jbe
iret
lret
pop
jb
popf
mov
incl
push
xor
mov
fmuls
out
or
roll
ds
ret
out
jg
jmp
lret
jmp
sbb
shrb
aas
lahf
fdivrs
call
idiv
inc
lods
cmpsb
or
fmull
scas
out
sbb
rorb
mov
push
mov
lea
ret
subb
lock
call
adc
xchg
cmp
popf
js
iret
pop
icebp
fistpll
sbb
lock
incl
insl
push
dec
push
mov
push
sub
mov
lods
jmp
inc
or
pushl
test
out
aam
push
aaa
jl
xor
inc
sbb
mov
in
ljmp
push
jecxz
fucomi
mov
movsb
les
jp
inc
ljmp
gs
lcall
sub
and
ja
insb
movsl
lds
push
lea
subb
in
cmp
lcall
or
out
pusha
shrl
dec
test
lds
aad
mov
incl
add
cmp
dec
scas
std
push
xchg
add
xchg
imul
decl
cmp
mov
mov
jg
inc
add
mov
pop
xchg
cmp
loopne
sbb
push
xor
inc
xchg
jns
sahf
ja
xchg
mov
adc
push
das
dec
ss
stc
pushl
cli
add
imulb
imul
ret
clc
int
jmp
push
repz
pop
call
pusha
jp
fldcw
mov
sbb
das
inc
int3
push
xor
mov
inc
cwtl
push
or
pushl
cli
xchg
mov
xor
int
js
lret
mov
jl
cs
mov
push
adc
fcoms
mov
push
push
repz
mov
mov
mov
jp
repnz
nop
cli
xchg
jge
xlat
loopne
shlb
sbb
pop
fsubr
sbb
mov
test
aas
push
cmp
cld
ret
dec
out
mov
jb
out
movsb
mov
aam
lods
cmpsl
push
pop
dec
add
ret
cmp
xor
lcall
fnstsw
cmp
jmp
xchg
sbb
out
incl
pop
out
out
or
ret
mov
pop
int
jecxz
int
and
cmp
cmp
test
sub
incl
and
add
sub
cld
or
in
push
jecxz
xlat
pop
jne
dec
inc
call
in
jg
jmp
fimull
sub
xor
enter
mov
jb
cld
cmc
jp
mov
cld
or
mov
inc
loop
je
cmp
mov
inc
ljmp
lcall
mov
xchg
icebp
gs
add
fcomps
xor
pop
std
addr16
mov
std
mov
mov
loopne
push
outsl
sahf
scas
divb
jg
xor
pop
sbb
inc
sub
loop
mov
mov
out
xor
mov
jl
pushl
and
icebp
lods
adc
das
enter
jo
lea
call
jb
out
sub
push
movsb
xchg
out
mov
push
sbb
adc
dec
inc
xlat
push
decl
mov
and
movsl
xor
adc
sub
mov
insl
ljmp
pop
mov
and
push
fimull
inc
ret
adc
incl
nop
mov
scas
pushf
and
or
pop
inc
jno
test
xchg
cmpsb
rclb
jmp
or
dec
rcrl
movsl
arpl
adc
jno
bound
data16
push
mov
jle
popf
and
clc
sbb
stc
xor
jge
sbb
jbe
incl
cld
incl
lds
or
push
in
ret
xchg
mov
lock
jle
ds
cmp
and
es
jb
pop
mov
mov
ficoms
mov
ljmp
xor
sub
test
fnstsw
mov
aad
in
ljmp
je
inc
push
sbbb
imul
lret
push
or
jmp
in
pop
pusha
loop
xchg
jecxz
cmp
pop
daa
dec
test
test
loopne
shl
cmp
or
stos
sbb
aad
aaa
icebp
cltd
add
aas
movsb
mov
clc
jle
loopne
dec
idivl
test
push
pop
mov
pop
mov
loopne
jmp
nop
lret
js
pop
lcall
pop
fdivrl
xor
jmp
pop
mov
call
insb
cmp
pop
call
movsb
stos
push
imul
adc
or
loop
jmp
jae
ss
test
in
push
das
jg
xlat
sbb
mov
add
stos
cmpsl
add
aas
sbb
cld
mov
pop
adc
loop
neg
xchg
jecxz
mov
lock
call
popf
clc
cmp
cltd
out
stos
jg
jmp
jns
adc
push
pop
cltd
imul
leave
inc
dec
xor
cs
incl
cmp
jnp
xchg
aas
lret
pop
int3
in
iret
into
insb
xchg
xchg
fcomps
fsubrl
imul
in
in
dec
loop
test
mov
in
decl
lock
add
outsb
scas
xchg
sbb
pop
pop
jecxz
cld
jns
addb
dec
int3
ljmp
push
iret
sarb
pop
push
dec
negl
aas
dec
dec
stos
jbe
jbe
adc
and
ljmp
rcrb
lock
xchg
mov
les
or
xchg
cwtl
shlb
scas
stos
sbb
out
mov
xchg
pop
mov
rcrb
mov
movsl
dec
bound
insl
dec
lods
jmp
out
adc
xor
cmpl
pop
std
and
and
ljmp
mov
xchg
dec
cltd
ret
gs
outsl
mov
dec
mov
aad
sar
adc
sbb
jle
pushl
cltd
mov
inc
push
loop
push
cmp
adc
dec
call
push
incl
outsl
dec
fcmovb
sub
aaa
cli
out
scas
mov
fwait
jle
pop
pusha
mov
ljmp
ljmp
jg
lahf
ret
adc
lds
push
inc
nop
jl
dec
dec
push
mov
outsl
mov
xchg
push
lret
xchg
iret
loope
jbe
mov
mov
test
adc
ljmp
mov
pusha
shll
test
push
sub
sbb
mov
push
std
aaa
cld
xchg
in
inc
imul
stos
fadds
xchg
jmp
push
mov
lods
dec
test
fists
jae
dec
arpl
cmp
in
insl
push
stc
cld
decl
es
xor
int
loopne
sub
lret
arpl
cli
sbb
push
nop
sbb
call
sub
add
jg
push
fcomps
out
push
rcr
shl
scas
jg
notb
popf
loop
mov
dec
fsubs
imul
adc
test
pop
pushl
add
and
test
cmc
mov
cmp
jp
jecxz
jmp
mov
pop
sbb
das
in
call
mov
mov
sti
sahf
inc
cmp
cli
xchg
or
jge
mov
push
decl
pop
ret
test
ljmp
jnp
outsb
mov
mov
addr16
inc
fwait
dec
stos
push
popf
push
push
mov
pop
scas
xlat
jl
roll
les
jno
mov
ret
mov
inc
and
repz
faddl
lcall
pop
pop
push
mov
cmp
jne
popa
mov
xchg
and
lcall
jns
in
nop
scas
add
mov
jae
orb
sub
jns
cmp
fists
movsb
jecxz
dec
imul
gs
fst
aad
cmp
out
cli
xchg
decl
jge
divb
out
pop
add
sarb
push
test
adc
lds
pop
fists
repz
or
ljmp
sub
sarb
push
xchg
mov
lahf
jmp
pop
lret
mov
mov
fistps
ss
jae
faddl
repz
mov
mov
cmp
pop
jl
pop
xchg
test
xlat
and
addr16
decl
decl
scas
xor
int
mov
mov
in
mov
push
push
pushf
or
mov
iret
iret
lods
jb
xor
jne
cmc
sbb
dec
rcl
push
out
test
ljmp
cmp
push
add
jecxz
call
subb
mov
sub
jg
push
mov
fstl
outsb
cltd
scas
ret
pop
fdivl
cmp
xchg
lods
in
and
jmp
sbb
inc
loopne
xor
lret
in
mov
stos
insb
ljmp
sahf
cltd
jecxz
xchg
test
mov
movsl
in
inc
cmp
cmp
aas
mov
ljmp
push
cs
mov
mov
mov
push
dec
mov
jno
and
xchg
sub
jmp
add
cmpl
push
movsb
insl
sbb
mov
sbb
orb
out
std
js
cli
push
cs
or
add
pop
or
insl
pop
outsb
mov
or
push
mov
decl
fidivrs
and
shrb
insb
cltd
in
mov
fsub
imul
mov
incl
insb
mov
aas
movsb
jb
push
cmp
pop
pop
adc
xor
gs
add
mov
daa
dec
xchg
ljmp
mov
and
dec
test
pop
inc
pop
dec
shl
xlat
inc
jnp
scas
test
popf
aas
ljmp
xchg
cli
xchg
push
fmuls
test
inc
xor
xchg
sub
ljmp
cmpl
ljmp
push
lret
jns
pop
stc
sub
sbb
mov
std
sbb
leave
inc
add
movsl
pop
push
add
pop
add
pop
or
ret
inc
dec
xor
test
addl
jmp
insb
int3
mov
shlb
jg
aad
fwait
stc
cmp
sub
ret
xor
outsl
clc
dec
adcb
loopne
jle
push
jl
cs
leave
pop
nop
sub
inc
pop
push
incl
inc
sub
mull
add
inc
jp
dec
mov
aad
jmp
fldcw
and
pop
adc
fbstp
gs
pop
mov
clc
pop
insl
mov
ss
decl
lods
xlat
inc
imul
aas
mov
jle
bound
push
xchg
cmp
movsb
xor
fldcw
int
jg
xor
sbb
mov
jmp
and
push
shrb
decl
push
cld
lret
mov
lods
or
lahf
xchg
and
popa
out
ljmp
jno
je
iret
push
out
cmp
fisubrl
inc
jnp
mov
idiv
pushl
push
inc
fisubrl
les
dec
cmp
pop
mov
inc
jae
and
out
cmc
pop
cmc
cwtl
mov
lret
cmpsl
adc
mov
mov
cmp
pop
push
mov
lock
push
outsl
std
loopne
test
inc
mov
adc
outsl
mov
jne
mov
out
add
cld
mov
jge
sbb
rcr
mov
add
ljmp
std
out
loope
stos
es
jg
repnz
adc
or
or
cmpsb
xor
je
lock
push
mov
sbb
rcl
scas
out
fcom
dec
addl
pushl
inc
into
xor
xchg
insb
dec
cmp
xchg
sub
or
and
mov
and
sbb
call
ds
add
pop
adc
ja
pop
push
ss
pop
bound
adc
adc
nop
jecxz
fdiv
test
jp
push
sarl
outsb
dec
imul
mov
push
sbb
gs
inc
inc
bound
sub
fsubrs
incl
fisubl
or
outsl
ficompl
sahf
ret
push
sbb
push
xchg
ja
sbbl
sbb
adc
sub
pop
loope
nop
loop
and
sub
inc
sbb
imulb
jmp
outsb
mull
rcll
inc
push
xor
jmp
ss
jg
xchg
mov
or
imul
loop
cmp
adc
xchg
rcl
lcall
cmc
dec
je
push
adc
jmp
pushf
jle
pop
dec
xor
sub
dec
notb
inc
jge
push
lods
cmpsl
jmp
mov
dec
mov
cmpsl
loopne
in
aaa
jl
jg
adc
push
xorl
dec
mov
call
movsl
mov
mov
std
sbb
jg
fmul
fimuls
cmp
cmpsl
dec
clc
mul
fstl
mov
call
push
jg
sub
push
lahf
push
xchg
xchg
mov
inc
pshufw
jmp
hlt
jnp
xchg
lret
dec
or
pop
xor
pop
jl
out
push
insb
aaa
mov
aas
lcall
insl
xchg
sub
bound
mov
pop
repz
cmp
mov
add
lcall
clc
cld
aaa
notb
xchg
aad
out
xor
add
andb
incl
mov
in
fisubs
sbb
push
xor
add
ljmp
scas
stc
inc
test
loopne
jmp
in
xor
scas
lds
aad
fnstcw
mov
sbb
pop
or
js
mov
insb
mov
jg
pop
cmpsb
adc
push
popf
mov
jne
test
add
push
loop
divl
jmp
adc
pop
pop
jb
iret
sbb
outsl
stos
jo
sbb
das
pop
add
mov
not
clc
push
jmp
lret
pop
adc
xchg
pandn
adc
ljmp
rcr
iret
xor
hlt
cli
lcall
add
and
pop
bnd
rolb
push
jns
push
jno
ja
out
xchg
mov
pop
incl
les
jnp
ja
adc
sub
pop
jg
pushl
mov
ret
push
lods
js
es
or
ja
xor
cli
xor
dec
lret
push
sbb
add
adc
out
test
fbld
mov
ljmp
ljmp
aas
inc
xchg
mov
adc
out
jno
pop
inc
cmp
incl
pop
test
add
mov
ret
loop
test
pop
inc
cmpsb
xchg
aas
adc
adc
sti
sbb
cltd
jno
adc
push
popa
popa
push
pop
stos
scas
mov
adc
je
mov
jbe
daa
dec
shlb
sti
push
loop
or
cltd
loope
rcl
aad
inc
clc
sbb
pop
dec
mov
mov
mov
pop
aas
xor
sbbb
call
pushl
pushf
jnp
dec
es
movsl
movsb
imul
inc
cmp
int
bound
xchg
and
decl
icebp
rolb
jo
push
pop
mov
mov
rolb
lock
push
stos
cld
pop
dec
mov
incl
mov
sub
and
out
pop
mov
es
loop
lock
push
push
pop
call
in
icebp
movsb
push
jmp
jmp
add
out
jp,pt
dec
decb
mov
lcall
inc
lcall
add
cmp
outsb
jns
aam
and
decl
mov
lahf
in
addl
test
imul
fs
in
mov
decl
cmpsl
outsb
jg
gs
data16
mov
jno
mov
mov
je
enter
incl
icebp
ja
mov
insl
dec
sbb
add
in
lds
incl
test
jne
scas
pop
int
and
inc
or
or
in
and
out
lcall
add
lcall
pop
or
or
clc
pop
inc
icebp
dec
mov
ja
push
inc
out
inc
add
mov
aaa
ror
xor
test
mov
cmpsb
pushl
cli
addl
cmp
jmp
sgdtl
sbb
cwtl
dec
out
mull
cmp
ljmp
mov
js
loope
jno
or
shlb
pop
xchg
mov
testb
aad
xchg
fs
ficoms
notl
sbb
ret
decl
fisttps
and
adc
sbb
inc
jbe
nop
or
fcompl
imul
lcall
or
mov
xchg
fsubrp
push
stos
fnstcw
sahf
xor
popf
inc
mov
fimuls
outsl
mov
or
aaa
jmp
or
js
lcall
in
xchg
leave
test
and
sub
jmp
pop
pop
sbb
or
out
lods
add
pop
cli
jmp
outsl
adc
push
mov
ss
and
popf
sub
sahf
hlt
cs
add
cmp
ja
scas
and
sbb
outsb
data16
repnz
sbb
pop
call
mov
aam
lret
inc
jns
invd
mov
push
inc
or
jns
xchg
dec
ljmp
test
cmp
push
xor
ret
ret
push
call
adc
arpl
adc
sbb
ljmp
andb
mov
cli
mov
jmp
add
in
mov
jmp
push
sbb
xor
xor
pop
or
xchg
jne
clc
fdivl
inc
mov
mov
test
mov
jnp
lock
and
lds
mov
add
jmp
loopne
ja
jb
push
pushf
mov
pop
mov
aam
or
out
jmp
xor
pushl
push
mov
sub
mov
cmp
inc
pop
cmpsl
adc
and
jl
push
repnz
clc
sbb
mov
ret
stos
or
xor
hlt
pop
xor
add
mov
or
leave
mov
cmp
ret
xchg
push
in
jl
jno
mov
arpl
out
xor
inc
xchg
push
dec
mov
fdiv
mov
cmc
call
jno
repnz
or
repz
pop
rclb
and
lcall
or
ret
data16
and
incl
in
jle
jmp
pushl
std
fst
cmp
sub
push
ds
fisubs
mov
test
mov
adc
push
outsl
in
in
lret
push
enter
or
push
mov
fsubrl
decl
mov
rclb
out
or
test
lret
cmc
in
pop
mov
push
mov
jg
je
or
mov
jb
aas
xchg
cmpsl
mov
decl
lea
fidivl
xor
mov
mov
lock
inc
sub
call
loopne
addr16
fwait
cmc
mov
xchg
cld
jp
adc
add
lret
arpl
push
insb
mov
push
mov
insb
mov
into
inc
sub
push
cmp
pop
mov
and
call
push
loopne
test
pop
or
mov
adc
push
pop
mov
scas
imul
es
and
jb
test
insb
push
push
js
call
jmp
enter
pop
jnp
and
mov
cmc
out
pop
test
lods
daa
cmp
jmp
roll
leave
add
pop
popf
jno
lds
mov
add
cld
int
in
repnz
adc
lods
ljmp
pop
and
jbe
fists
xlat
lock
and
inc
sar
cmp
iret
ret
pop
sub
ljmp
sub
mov
mov
adc
jp
test
andl
loopne
mov
clc
call
push
lock
cmp
lahf
dec
push
sub
sti
fwait
add
lcall
push
ds
iret
gs
insl
gs
in
adc
mov
addr16
xchg
imul
add
ljmp
sub
lods
rep
pushl
cld
call
pusha
jecxz
or
lret
int
ja
xchg
or
fcompl
xor
add
sbb
call
jb
push
mov
les
popf
ret
pop
mov
mov
ljmp
mov
js
add
lret
das
jl
or
stos
cld
aas
cmp
rolb
sbb
pushl
ljmp
icebp
enter
lret
mov
dec
xchg
out
aas
inc
into
xchg
popf
cld
pop
mov
jmp
rorl
xchg
cmp
jl
sti
dec
ss
nop
popa
insb
outsl
jmp
mov
push
xchg
iret
push
mov
mov
lcall
loope
mov
cmp
outsl
jb
or
je
rcrl
sbb
ljmp
dec
push
lea
dec
inc
sbb
or
xor
mov
sbb
inc
mov
bound
out
pop
push
xchg
enter
cli
push
inc
cmpsb
mov
mov
rclb
mov
xchg
sbb
jnp
add
add
incl
jb
movsl
int3
lahf
or
dec
sbb
push
dec
cmpsl
hlt
dec
xchg
pop
imul
mov
mov
jg
or
mov
out
lahf
pushf
out
mov
loope
sub
jg
jmp
xchg
add
jecxz
jo
ficoml
leave
in
imul
incl
ss
cmp
test
and
push
and
inc
pusha
jl
pop
call
inc
outsb
dec
xchg
lahf
incl
add
xchg
repz
int
ljmp
popf
add
ds
mov
fisubs
test
cmp
jbe
ljmp
pusha
test
stc
push
push
setae
sub
pop
or
testb
rolb
divl
call
fwait
dec
ja
outsl
jns
pop
dec
push
push
cld
hlt
hlt
mov
add
pop
fistl
mov
ljmp
cmpsl
ds
mov
jecxz
pop
inc
nop
div
add
or
faddl
mov
mov
xor
std
bound
push
mov
cmp
mov
cltd
pop
incl
xchg
mov
push
lret
xchg
push
insb
gs
mov
jg
add
lcall
movsl
fistps
pop
sbb
vandnps
mov
xchg
dec
dec
rcrl
cld
in
sbb
pop
mov
adc
and
in
cmp
rorb
xchg
cli
mov
mov
push
orb
fs
cmpsl
es
sbb
xchg
shlb
decl
sti
push
js
vptestmw
loop
lods
adc
mov
cmpsl
and
ljmp
lcall
xor
arpl
inc
adc
jg
call
fs
cld
lcall
push
orb
stos
cmp
outsl
jmp
push
add
aam
pop
xor
fisttpl
sbb
ror
add
ljmp
inc
add
adc
fwait
clc
ud0
lcall
xor
xchg
add
jns
das
mov
in
mov
loop
decl
pop
add
movsb
adc
lods
adc
ljmp
fwait
pusha
fs
mov
iret
iret
mov
imul
push
mov
inc
jbe
testb
adc
jecxz
shlb
push
mov
jnp
stc
jns
sbbl
xchg
loope
decl
and
push
push
jno
or
sbb
mov
jnp
enter
scas
ss
scas
aad
jno,pt
mulb
adc
jp
mov
dec
or
fcomps
icebp
aas
andb
call
orl
ret
stos
mov
ljmp
outsb
cmpsb
enter
ljmp
adcl
outsb
out
adc
cmp
lods
aam
jg
decl
dec
outsl
cmp
xor
pop
fcmovb
and
mov
or
call
or
and
push
lret
into
rcl
xor
adc
xchg
mov
lods
decl
and
adc
dec
shlb
adc
pop
lods
mov
fstenv
loopne
lcall
or
adc
adc
out
fistps
xor
popa
jp
call
incl
dec
test
jnp
sbb
repz
fs
lods
sbb
add
ret
decl
jb
std
cmp
mov
dec
inc
inc
repz
test
out
cmp
stos
incl
lret
mov
push
jge
xchg
icebp
ljmp
idiv
incl
shlb
inc
cmpsl
mov
or
fsubs
jns
cld
enter
mov
dec
hlt
fs
jmp
pop
std
sbbl
sbb
les
pmaddwd
loop
divb
xor
jmp
cwtl
data16
or
imul
xchg
fdivr
in
incl
jne
popf
icebp
rclb
xchg
mov
and
and
cmp
in
adc
xor
sbb
mov
sti
ret
dec
leave
adc
xor
lahf
adc
call
or
inc
jbe
andb
loop
dec
lcall
aam
out
inc
repz
fists
dec
testb
gs
inc
mov
push
cmpsl
add
popa
in
inc
cmc
mov
jne
call
decl
xchg
lcall
stc
sub
data16
ja
lcall
jle
hlt
out
inc
and
incl
push
pop
dec
xor
jmp
jge
push
iret
jcxz
stc
push
mov
clc
incl
and
add
push
dec
sub
mov
cmp
push
dec
ljmp
or
jl
mov
test
cmp
adc
sbb
mov
mov
ljmp
mov
mov
cltd
out
jo
aam
cmp
mov
mov
ljmp
incl
sbb
xchg
pop
mov
roll
lret
sub
sbb
enter
inc
or
adc
fsubp
cli
and
imul
mov
adc
push
sub
call
mov
out
jo
fldt
jb
mov
add
daa
int3
imul
mov
enter
xor
xor
jp
aaa
xor
jne
inc
aaa
pushf
xchg
cli
int3
lcall
into
adc
pop
call
push
mov
lcall
jb
jge
cmp
callw
jmp
pop
or
gs
jno
cmp
test
insb
xor
sub
mov
sub
push
rcrb
lretw
sbb
push
mov
sub
jmp
int
sti
stc
daa
std
pop
and
inc
jns
in
push
push
mov
lds
aam
jg
insb
or
hlt
sub
enter
popf
sub
pop
insb
or
inc
bound
test
cmp
inc
add
movb
ret
jmp
addr16
psllq
cltd
aam
lea
add
inc
xchg
loop
adc
sbb
add
jmp
sahf
pop
dec
repz
cmp
jle
sbb
sub
pop
or
mov
sub
adc
pop
jge
dec
push
jne
lahf
push
out
add
fxch
pop
xchg
lea
sar
pop
mov
loopne
aas
les
inc
int
jae
popl
pop
or
data16
ljmp
dec
fwait
mov
rcrb
dec
xchg
loopne
xchg
adc
outsl
jle
dec
jp
push
lcall
call
int
mov
je
xor
ja
mov
push
stos
cld
cltd
loopne
decl
inc
xchg
add
fbld
xor
rorb
adc
das
sbb
test
pop
out
ret
nop
add
mov
mov
jmp
or
mov
into
clc
lcall
xor
push
sar
call
pop
xor
inc
mov
mov
in
pop
aam
hlt
add
nop
filds
decl
bound
lret
repz
stos
test
push
lcall
sbb
dec
xchg
pop
lret
and
jb
cwtl
bnd
mov
jbe
repz
mov
incl
xchg
pusha
in
dec
cs
mov
xor
or
pop
mov
jb
mov
lods
dec
pop
push
loop
ljmp
adc
push
inc
fistpl
mov
or
sbb
movsl
add
add
adc
cli
out
clc
fsubs
pop
notl
push
decl
dec
adc
int
and
xchg
mov
clc
int
popf
mov
in
cmp
daa
test
cmp
cmpsb
inc
cltd
cltd
test
pushl
xchg
pop
or
out
lahf
jne
or
das
and
mov
mov
lcall
iret
dec
fcoml
dec
xor
gs
cmp
mov
cmp
movsb
and
incl
test
add
adc
xchg
xchg
mov
sbb
add
xor
aaa
ret
jg
incl
in
cmc
xor
loopne
mov
push
rorb
xchg
fstl
adc
mov
push
ret
imul
push
mov
pop
std
mull
inc
xchg
jb
jae
jmp
ret
test
sbb
add
mov
inc
cmp
mov
out
mov
lahf
cwtl
fstl
insl
jne
mov
dec
xchg
xchg
or
notb
dec
cmp
mov
lret
lcall
pushl
jnp
cmp
movmskps
jecxz
sahf
xor
neg
add
incl
pop
ror
sbb
stc
mov
fsts
push
add
pop
hlt
lcall
js
testb
repz
movsb
cmpsb
add
negb
jg
jmp
loopne
pop
lds
aas
lret
call
repz
xchg
std
jg
decb
jp
aas
sbb
push
jmp
sub
xchg
popa
mov
mov
call
subb
fists
outsl
lods
pop
pop
jb
and
mov
mov
pop
stos
clc
ljmp
daa
jecxz
sub
pop
xor
ficompl
lods
adc
ljmp
idivl
int3
hlt
push
push
out
testb
pop
iret
push
stos
cmp
xor
cmp
jg
push
test
je
das
insb
mov
xor
rcll
stos
iret
popf
jg
sub
call
lret
lahf
repnz
hlt
faddp
shlb
and
scas
aam
test
stc
mov
dec
lock
pop
add
and
xchg
lock
ja
lret
insb
out
ds
je
jp
jns
mov
adc
jmp
shlb
stos
add
int
add
xor
mov
or
loopne
cmpsb
push
pop
xchg
cltd
hlt
and
cmp
push
inc
nop
out
rep
cli
cmp
ds
das
xlat
les
dec
bound
lahf
dec
push
shrl
ja
test
js
push
dec
sahf
or
mov
sub
gs
push
ljmp
jp
mov
dec
divb
hlt
mov
testl
lret
jnp
pop
inc
push
clc
stc
mov
inc
fldl
xor
xor
clc
mov
movsl
lahf
mov
xchg
inc
xchg
adc
mov
add
decl
xchg
iret
leave
lea
sahf
pop
dec
outsl
loop
pop
mov
push
dec
shr
in
loope
call
aaa
mov
mov
jmp
xchg
popa
cmp
int
push
lods
icebp
jns
jp
mov
insb
clc
cmp
incl
mov
fwait
andl
jmp
cwtl
add
mov
pop
xchg
cli
xlat
addr16
cli
jmp
cwtl
bound
push
test
pop
in
lock
lret
push
lock
dec
push
out
pushl
dec
push
mov
out
loop
filds
loop
mov
mov
adc
add
outsb
push
push
test
loope
mov
pop
xchg
push
movsb
pop
xchg
test
in
insw
sbb
push
movsl
popa
outsb
jl
je
incl
xchg
inc
insl
fwait
mov
lret
pop
push
test
or
cmp
incl
ja
cli
aam
movb
scas
sti
test
leave
mov
xchg
aaa
loope
xor
cmp
xor
mov
and
jo
loope
jo
fbld
mov
add
jge
mov
addb
data16
inc
out
mov
sbb
cmpsl
ret
enter
incl
pop
mov
or
xor
mov
int
insb
xor
loope
adc
repz
pop
lcall
js
sub
in
mov
push
jl
test
outsb
mov
das
mov
incl
imulb
inc
pop
test
repnz
hlt
xchg
fsubr
jle
mov
add
pushl
cld
sahf
pop
jle
pushf
pusha
int3
cmp
push
dec
int
pop
stos
inc
sarb
insl
jg
lcall
dec
jns
cmpsb
call
xchg
xor
loope
ds
cmc
movsl
mov
jns
dec
imul
mov
stos
mov
lret
xchg
std
mov
jmp
xor
sbb
sti
xor
xchg
insl
mov
cmp
sbb
xchg
outsl
lods
xor
mov
push
ljmp
mov
lds
jnp
inc
mov
jno
sbb
sbb
pop
ficoml
call
mov
xor
decl
push
sbb
pminsw
inc
sub
push
xchg
mov
ds
jmp
adc
cmpsb
fbstp
pop
pusha
xchg
sub
push
mov
je
mov
out
rcrb
add
or
pop
jp
xchg
mov
jle
clc
pushl
mov
add
clc
pop
nop
sbb
push
popf
roll
call
loopne
int3
mov
mov
in
push
ljmp
icebp
mov
mov
cmp
je
xchg
lret
pop
ret
cld
dec
pop
cmp
decl
add
add
sbb
jp
pop
or
fists
out
int3
out
xchg
lret
pusha
and
or
mov
adc
pushf
xchg
mov
or
ljmp
icebp
fstpt
cmp
push
dec
sete
jns
sbb
sub
jns
jmp
les
ss
clc
adc
add
lock
jo
xor
dec
mov
or
add
mov
call
jmp
punpcklwd
stc
sar
sti
aam
inc
test
xor
stc
mov
inc
incl
ds
mov
jne
mov
mov
data16
and
cmp
jmp
pop
lahf
mov
inc
mov
sub
out
std
cmpsl
outsb
dec
jnp
in
std
or
sarb
popa
lret
or
andb
mov
fcoml
inc
xchg
dec
xchg
lahf
incl
add
sub
jl
in
jne
adc
mov
jg
jae
loopne
mov
jmp
pop
jg
and
jno
mov
outsl
notb
jge
dec
push
dec
paddusw
ljmp
cmp
mov
dec
push
mov
pop
test
xor
cmpsb
pusha
adc
ljmp
rcll
lahf
ret
xor
cwtl
aas
adc
dec
sti
imul
pushl
xchg
in
fistpl
sbb
sbb
mov
mov
movb
mov
jge
xor
dec
ljmp
mov
sbb
xchg
rolw
call
test
inc
push
loope
lret
jbe
movb
stos
test
inc
icebp
or
call
add
popf
rcrl
fidivrl
pinsrw
dec
fnstsw
inc
lahf
mov
inc
or
jmp
and
pop
mov
push
cmc
sbb
sub
pop
push
incl
stc
sarl
fcomip
jno
push
leave
popf
add
fidivrs
fs
sbb
aam
cs
mov
pushl
lods
shrl
rcl
push
mov
add
mov
ret
aas
les
sub
or
and
icebp
fwait
pop
xchg
and
insl
push
insb
pop
out
cli
push
cmpsl
push
fstpt
adc
inc
ret
test
xor
add
xchg
jns
outsl
lcall
mov
stos
pop
lods
loope
mov
cmp
jl
dec
pop
outsb
lods
lcall
incl
push
stos
in
mov
out
xchg
sub
cmp
pop
mov
sub
scas
pop
aaa
ljmp
mov
push
enter
mov
dec
sub
cmp
divb
cmp
pushf
stos
adc
clc
xor
insl
std
push
test
jg
imul
scas
pop
cli
push
adc
shufps
xor
pop
inc
sti
fstpt
iret
out
cli
push
cmp
xchg
sub
aas
ja
mov
xor
imul
fildll
and
pop
jbe
and
dec
pop
inc
mov
pop
cmp
inc
sbb
lret
push
dec
pusha
xor
xorb
aaa
mov
push
decl
lret
mov
ljmp
cmp
or
xor
mov
pushl
pop
mov
divl
jns
xor
inc
mov
jmp
movsb
push
incl
cld
sbb
inc
xor
lret
push
dec
movsb
pop
or
cmp
push
cmp
jmp
cmpsl
insb
xchg
stos
cmpb
jb
pop
pop
push
sbb
cmp
loopne
xor
les
rclb
ljmp
lret
rcrb
sahf
mov
fsub
add
pop
int3
rclb
jnp
nop
outsl
mov
mov
mov
dec
movhps
xor
and
xchg
xchg
js
cmpl
ljmp
inc
in
je
push
push
jnp
in
push
jne
movb
mov
mov
aas
pop
sub
call
pushl
in
sub
test
mov
out
cmpsl
nop
xlat
les
hlt
jg
popf
scas
adc
mov
cmpsb
adc
out
es
add
jmp
xchg
jne
sub
xchg
mov
adc
and
dec
rclb
push
call
loop
incl
cs
mov
mov
jae
mov
fscale
sbb
xchg
mov
adc
int3
mov
dec
mov
sbb
dec
incb
call
cld
lcall
loop
xor
outsb
rolb
jecxz
lahf
jne
lock
mov
rcll
call
dec
or
out
imul
sub
inc
nop
xor
sarb
jge
pop
pop
xchg
call
std
and
cmp
mov
je
insl
insl
ret
add
in
inc
clc
ljmp
js
push
jecxz
or
and
or
pop
test
out
bnd
adc
xor
inc
push
mov
and
movsl
aas
lcall
testb
call
imul
les
movsb
push
cmp
movsl
fcmovu
push
xor
decl
aad
xchg
xor
xor
cmp
repnz
xor
lcall
lcall
aad
ret
push
cmp
daa
ljmp
rorb
add
push
inc
inc
test
lcall
push
in
jg
rcrl
dec
xchg
bound
out
xor
sbb
mov
loopne
lcall
sub
push
xchg
jle
cmc
cltd
cmc
mov
cmpb
scas
xchg
pusha
add
rol
pop
xchg
mov
sarb
iret
movsb
pushf
xchg
cltd
in
notl
mov
cld
push
dec
xchg
adc
pop
push
sti
in
lods
fisubl
xchg
dec
sbb
or
call
loopne
and
pop
add
daa
or
in
push
mov
dec
lock
in
das
sarb
scas
pop
push
mov
pop
cmp
cld
mov
incl
dec
adc
add
xor
hlt
imul
sub
out
jne,pn
adc
es
cwtl
cld
decl
sahf
push
dec
xchg
sub
xor
leave
sub
and
or
add
xor
xchg
lret
pop
ljmp
fwait
addr16
insb
jg
jle
jmp
in
stos
fadds
jmp
ljmp
pushf
movb
mov
rcrb
dec
dec
add
lret
jmp
mov
mov
mov
lcall
inc
jmp
jo
incl
inc
and
shlb
push
cmpsb
nop
mov
fs
jp
pushl
inc
inc
mov
cmp
adc
loope
mov
dec
in
mov
cmp
mov
push
hlt
ljmp
xchg
ds
icebp
inc
ret
out
stos
mov
mov
sti
xchg
jecxz
dec
xchg
push
adc
testb
push
mov
dec
gs
cmp
popf
sahf
loopne
jg
xchg
adcl
xlat
mov
hlt
pushf
lcall
dec
lsl
cli
das
sub
xor
lcall
sub
fdivr
das
mov
out
cs
or
xchg
push
push
incl
dec
xchg
xchg
out
mov
hlt
sahf
sahf
mov
bound
push
cmc
inc
mov
incl
mov
test
in
inc
pop
loopne
mov
adc
mov
pop
incl
leave
mov
mov
shlb
arpl
cmc
add
adc
fwait
ret
aas
push
inc
jmp
pushf
fmull
ljmp
or
push
cmpsb
aam
outsb
call
xchg
inc
and
in
push
addr16
fldcw
mov
adc
push
repnz
mov
outsl
clc
pushl
leave
clc
add
add
lea
jne
mov
jecxz
pop
cmpsb
call
test
mov
aaa
mov
add
mov
gs
lret
out
inc
dec
int3
imul
call
aad
adc
dec
outsl
sahf
add
sbb
jno
mov
loop
test
mov
mov
mov
scas
push
mov
popf
lods
pop
or
dec
mov
add
cmc
xor
dec
or
mov
or
cmp
fisttpl
mov
mov
mov
push
ljmp
cmp
cmp
xchg
lock
das
sbb
scas
arpl
xchg
xchg
and
inc
mov
jg
lcall
mov
rol
mov
xchg
nop
movsl
roll
int3
jbe
xchg
mov
call
add
xchg
mov
sub
scas
rcll
jmp
sbb
mov
sbb
fs
sahf
mov
mov
outsl
or
rorb
dec
jnp
je
mov
incl
cmp
pop
or
inc
repz
mov
shlb
pop
hlt
flds
sub
pushl
and
sahf
xchg
mov
popa
xor
push
push
fwait
jbe
push
inc
mov
jae
jmp
pushf
fnstenv
cltd
xchg
fsubl
clc
xchg
jo
sarb
sub
ret
jmp
test
xchg
cmp
sbb
sub
insl
push
sahf
and
dec
mov
sub
decl
cwtl
xchg
fimull
cwtl
bound
xor
jne
push
pushl
xor
inc
popl
add
ret
sahf
cmp
push
dec
mov
mov
xor
imul
pop
daa
jg
fwait
lahf
dec
mov
outsb
hlt
mov
test
clc
jmp
dec
int
adc
call
inc
sbb
dec
stc
in
sahf
andl
pop
ljmp
ljmp
xchg
scas
jg
lods
inc
adc
adc
mov
adc
in
push
lcall
out
pop
cli
daa
jo
mov
not
dec
popf
scas
iret
lret
clc
or
dec
scas
lahf
mov
inc
jle
mov
mov
ret
xchg
push
imul
lcall
bound
xor
incl
les
loop
insl
les
dec
lock
flds
out
push
mov
decl
inc
push
lret
repnz
or
loopne
jno
jl
icebp
jo
sarl
jns
ljmp
or
out
in
fsubrs
or
leave
cltd
jp
xor
fsts
jl
cltd
fdivrs
add
dec
xchg
and
add
cmpb
adc
lods
scas
ljmp
in
fiaddl
js
jge
dec
adcb
cltd
test
lods
mov
inc
pushl
movl
test
es
test
adc
test
ja
decl
dec
sbb
dec
adc
push
push
xchg
ucomiss
inc
fs
mov
lret
cmp
call
repnz
repz
xor
aam
lods
ljmp
push
pop
in
loop
inc
cmp
call
loopne
pop
push
fisubl
push
xor
xchg
fidivs
js
aaa
out
popf
or
cmp
imul
mov
dec
sbb
xchg
mov
jle
push
fcmovne
adc
mov
or
sbb
ds
mov
jg
incl
inc
bound
pop
xchg
cmpsb
add
mov
lods
cmc
insb
or
inc
add
dec
imul
jmp
push
pop
mov
lcall
movsl
sbb
push
inc
jle
movsb
push
push
xchg
mov
in
mov
fdiv
inc
test
fcomps
mov
shlb
jmp
cs
jae
loop
dec
sub
cmc
incl
insb
sarb
idivl
mov
cwtl
enter
loop
int3
xchg
or
call
mov
xchg
mov
popf
pop
sti
jmp
stos
cmpsl
rcll
repz
inc
jl
inc
in
mov
int
xor
jg
mov
test
imul
mov
jno
xor
mov
popf
mov
aaa
sbb
push
decl
popf
pop
std
jb
sbb
cli
cs
mov
cli
inc
jae
inc
insb
cmp
lods
decl
adc
loopne
mov
xchg
ljmp
cmc
call
push
dec
insl
push
xor
jmp
xor
jae
insl
movsl
fstpl
pop
or
sub
jnp
push
into
mov
fildll
sbb
movsl
mov
pop
xor
mov
lea
jno
nop
pop
out
mov
sub
xor
sti
xchg
mov
rorb
scas
push
in
test
sub
lcall
mov
xor
in
enter
fmuls
sub
jle
adc
pop
cmp
and
pop
incl
imul
push
js
shrl
push
mov
push
jge
jno
insl
mov
mov
popf
push
push
sbbb
push
loopne
cmp
push
jnp
call
cwtl
stos
mov
stc
loop
test
and
ret
mov
call
test
shl
mov
mov
and
pop
leave
dec
arpl
jnp
clc
sbb
sti
mov
fmul
lods
and
sub
add
xor
inc
cmpsb
dec
rolb
test
daa
in
adc
mov
sarb
pop
js
incb
nop
call
add
adcl
push
adc
mov
jge
jg
hlt
aad
cmp
test
adc
sbb
and
int3
cmp
cmpl
ja
push
xor
xor
sub
stos
xor
or
mov
pop
pop
sub
add
pop
cmpl
mov
aas
jnp
in
dec
jmp
les
jmp
int3
aas
out
pop
jmp
js
cmp
mov
mov
lcall
dec
xor
aaa
push
jae
xchg
iret
xor
sub
add
dec
or
incl
add
sbb
lret
bound
push
call
jecxz
mov
repz
jmp
lea
lcall
mov
aad
and
sub
mov
push
sub
mov
mov
hlt
xchg
in
add
stos
ret
lcall
jns
xor
push
mov
jno
jecxz
xchg
or
mov
and
out
call
ret
insb
stos
dec
jbe
lahf
cmp
pop
sub
adc
mov
mov
lods
or
jmp
sarb
outsl
sti
insl
cmp
or
ss
mov
faddp
xchg
orl
jle
ljmp
fdivr
pop
lock
in
push
jecxz
fnclex
lahf
add
push
lds
aam
je
jne
cmp
ljmp
jae
out
mov
test
movsb
leave
outsb
xchg
lcall
xchg
mov
cmc
idiv
or
jmp
sarb
sub
push
lret
imul
mov
rolb
push
jg
jg
dec
je
or
mov
mov
stos
and
add
lcall
psllq
add
push
aam
add
dec
lret
lret
inc
in
repnz
incl
sahf
xchg
hlt
mov
je
into
push
hlt
xor
outsl
xchg
cmpsl
xchg
dec
cld
xchg
sbb
pushl
ret
adc
lret
jb
pop
popf
cmpsb
xchg
jnp
mov
xlat
dec
mov
and
jl
mov
iret
push
test
cmp
cmpsl
mov
and
in
pushl
rol
pop
xor
jle
push
pop
mulb
loope
fsub
inc
cmpsb
cli
aas
xchg
mov
inc
xor
xchg
test
inc
and
xchg
cmp
nop
dec
adc
inc
add
mov
dec
nop
and
shll
and
cmp
xchg
lcall
mov
cmc
mov
sbb
test
and
push
in
adc
sub
push
rcrb
adc
dec
lods
or
sarl
addr16
sar
push
dec
cmp
push
arpl
decl
sub
ds
dec
or
cwtl
lret
pop
jbe
jg
dec
lock
add
add
push
xor
jno
aas
jge
loop
push
pusha
cmp
push
jg
jg
dec
xor
lret
test
cwtl
int
out
jl
insl
xor
push
push
xchg
push
pop
call
mov
and
jg
arpl
xor
adc
mov
pop
sbb
iret
jbe
call
loopne
das
jns
jmp
hlt
fstl
or
sahf
xchg
fildll
mov
daa
mov
dec
mov
mov
shl
repnz
pop
lods
pop
hlt
ljmp
pushf
ja
sbb
and
push
fisttpll
xor
push
add
xchg
shld
in
jmp
pop
jmp
lods
andl
out
cmc
aad
and
add
dec
push
in
outsb
pushf
pop
cs
jp
ja
sbb
mov
pop
cmc
pushl
mov
jns
jae
test
pop
push
call
call
sarl
imul
mov
int
jns
push
fcmovne
movsl
adc
mov
movsl
push
jmp
xor
pop
mov
outsl
mov
lds
xchg
xlat
dec
call
pop
aaa
pop
js
sub
mov
lea
icebp
outsl
lcall
mov
out
mov
and
loopne
fcmove
scas
ljmp
cmpsb
or
add
stc
sahf
add
mov
lea
inc
idivl
xchg
stos
sub
add
int3
into
pop
shl
push
std
jb
sbbb
lods
gs
push
xchg
out
call
sbb
sbb
fdivs
mov
mov
dec
out
test
ss
call
mov
movsb
push
or
inc
out
xchg
jge
add
mov
mov
pushl
icebp
pop
pop
lods
jmp
mov
cmpsb
add
shlb
fs
push
std
filds
test
popa
mov
sbb
in
call
add
sub
idivb
fs
push
shl
mov
push
sbb
fwait
cltd
or
mov
or
fcomps
arpl
pusha
cld
enter
xor
incl
outsb
fdivrl
lahf
iret
divb
xchg
xchg
int
xchg
das
bound
lods
sub
mov
xchg
bsr
dec
lahf
sti
sub
mov
cmp
pop
jbe
inc
lcall
in
xchg
lret
div
ss
adc
mov
sub
or
push
xchg
add
pushl
insl
mov
inc
push
int3
iret
imul
and
sbb
dec
push
adc
push
lcall
add
lcallw
pop
xor
push
jo
push
cli
jmp
mov
test
dec
out
jbe
fbstp
cld
call
mov
and
mov
dec
and
mov
test
adcb
jg
int3
push
adc
or
push
sahf
jp
xor
push
addr16
mov
int3
add
jle
cltd
movsb
add
or
mov
or
push
icebp
sub
std
imul
inc
sub
add
enter
lea
jg
sbb
loopne
iret
jp
decl
outsl
fcompl
lahf
xor
mov
mov
ja
sbb
hlt
mov
adc
decl
and
movsl
ror
sahf
mov
leave
pop
aaa
aas
or
cmc
insl
dec
jo
cmpsb
mov
clc
xor
push
fdivr
pop
pop
add
inc
lea
movsl
sbb
jmp
adc
and
adc
es
jmp
lods
in
loopne
nop
mov
sbb
inc
imul
in
int
incl
cmp
add
dec
mov
xchg
lods
rolb
xchg
add
mov
test
stos
fcos
inc
xchg
movsl
out
cmp
mov
pop
xchg
inc
or
incl
jno
and
js
jecxz
sahf
out
ret
ljmp
or
mov
notl
push
in
icebp
decl
incl
push
xchg
fsubrl
sbb
ds
dec
loopne
fstpt
fcmovb
or
cwtl
add
mov
sbb
xorl
fldenv
inc
or
cwtl
add
inc
ret
stos
popa
insl
or
dec
cld
jno
mov
popa
lods
mov
jb
push
hlt
lods
loopne
xlat
call
pop
gs
jno
out
mov
es
repz
mov
fmull
in
mov
adc
andl
pushf
sbb
add
out
or
adc
orb
xchg
jecxz
imul
out
loopne
sub
lcall
insl
xor
lods
inc
negb
fsts
pop
mov
stc
std
mov
clc
outsl
arpl
insb
push
mov
pop
dec
arpl
mov
andl
jmp
and
enter
ud0
shlb
mov
movsl
push
adc
clc
cwtl
mov
loope
aaa
test
lahf
call
fisubrs
mov
push
mov
adc
push
pop
jae
imul
jmp
pop
cmp
inc
xor
ss
repz
negl
cmc
cmpsl
jecxz
mov
xchg
jmp
pop
cltd
jb
and
into
xchg
jno
jbe
inc
mov
jl
or
cli
or
fidivrl
test
add
xchg
shr
inc
fdivl
jge
ret
inc
repz
push
imul
call
cld
push
lret
lds
fdivrl
adc
popf
inc
mov
ljmp
inc
mov
pop
repz
sahf
lcall
ror
daa
js
ljmp
into
lea
fists
or
dec
mov
jmp
fimuls
les
push
sbb
push
cwtl
dec
gs
cmpsb
lcall
xchg
xchg
sbb
or
mov
mov
adc
testl
and
jo
out
adc
pop
pop
and
into
jno
ljmp
cmp
lcall
outsl
jecxz
adc
int
cmp
jp
imul
test
std
dec
packuswb
das
out
ss
xchg
fidivrl
dec
cwtl
pop
jp
mov
shll
fisttpll
mov
xor
jns
imul
test
cmp
je
xchg
fsubl
xchg
mov
pop
stc
fildl
cmp
or
sub
and
jg
ljmp
sbb
pusha
or
mov
xchg
fistpll
jne
sbb
decl
or
cmp
inc
mov
imul
cli
adc
arpl
stos
mov
mov
je
push
mov
pop
fs
icebp
in
in
mov
jg
mov
and
ja
mov
push
rcrl
push
jg
jmp
mov
pop
mov
xchg
pop
test
xchg
shll
jbe
add
jmp
sub
pop
mov
dec
loopne
and
add
mov
add
jbe
jge
pushl
xchg
mov
add
loop
imul
and
xchg
adc
xlat
test
je
cmc
inc
sbb
mov
jmp
ja
or
loop
cwtl
jno
fdivs
fwait
call
pop
xchg
outsb
push
dec
inc
or
imul
adc
push
cld
aam
pushl
in
xlat
lcall
inc
ljmp
or
je
lods
stos
and
loope
xchg
or
enter
mov
incl
and
xchg
mov
mov
pop
adc
pop
jae
icebp
adc
jg
jmp
xchg
mov
push
ret
shl
mov
int3
add
jne
ss
movsb
mov
scas
adc
dec
mov
arpl
pop
aad
ret
daa
sarb
call
fstp
fldl
lds
add
mov
int3
inc
movl
jmp
call
rolb
sbb
rcrl
out
inc
hlt
dec
adcl
rcl
call
sub
ds
and
sub
loop
lret
out
cmp
out
loopew
incb
insl
xor
subb
pop
bound
xchg
add
dec
lcall
testb
into
lret
dec
add
mov
test
mov
sub
leave
adcl
jb
add
add
xor
jno
ss
insl
lods
sub
jae
into
daa
stos
mov
call
lds
lods
push
mov
popf
enter
fimull
pop
jge
sahf
inc
decl
nop
jle
cmp
push
aas
aas
push
dec
push
adc
ja
lea
ds
or
sbb
decl
sub
push
jbe
test
adc
xor
adc
roll
mov
pop
jp
in
lcall
pusha
mov
or
sbb
fildl
pop
je
jne
hlt
in
push
pop
loope
mov
fwait
vpcmpeqd
sub
push
dec
fsubrs
xchg
imul
sbb
cmp
cmp
arpl
lods
test
push
sahf
lret
dec
jle
inc
jge
inc
mov
lret
xchg
loop
inc
movsb
mov
pusha
xchg
mov
push
fstpt
arpl
arpl
or
in
out
cwtl
pop
pop
jae
andb
lcall
mov
cmp
add
xchg
sbb
add
cli
push
aas
mov
fsubrs
iret
sbb
call
pop
sbb
fsubrl
ret
es
adc
in
and
imul
xchg
sbb
std
jmp
xlat
sub
jb
popl
xchg
push
scas
shlb
jns
ret
aaa
mov
jge
push
cld
decl
in
jnp
fwait
sub
add
fsts
popf
push
push
int3
adc
push
call
incl
loopne
lea
aaa
and
mov
jg,pn
ret
and
lods
in
push
pop
sub
call
loopne
rol
push
cmp
dec
jae
mov
dec
xor
lcall
in
inc
dec
xchg
cmp
mov
mov
arpl
sarb
cmc
push
push
ret
lcall
mov
inc
dec
repz
inc
push
out
ss
shrl
std
xor
xchg
in
xor
pushl
xchg
movsb
stc
push
add
mov
add
and
lea
incl
leave
fsubs
push
and
mov
jp
mov
addr16
lea
mov
pushl
std
mov
sbb
cmpsb
imul
mov
imul
inc
jg
sub
pop
cmc
push
jnp
cmp
dec
pop
loop
scas
incl
cli
pop
into
dec
add
pop
fwait
dec
push
and
out
dec
pop
dec
jbe
pushf
test
mov
inc
rolb
ja
clc
cltd
fmull
adc
decl
mov
into
cmp
aad
scas
jae
mov
dec
je
shrl
outsb
xchg
cmp
pop
push
mov
das
sar
sahf
sub
and
out
movsl
mov
sbb
dec
stos
xor
int3
jbe
adc
movsl
pop
xchg
lcall
jg
xchg
inc
bound
cmp
sub
xchg
cmp
mov
ds
fwait
xlat
nop
loope
mov
jae
fcomps
sbb
call
mov
mov
sahf
out
sub
das
add
outsl
cli
sbbb
push
jae
and
stos
in
jmp
lret
out
rorl
movsl
mov
mov
mov
mov
mov
imul
data16
sbb
or
ljmp
push
cld
jmp
push
ljmp
dec
adc
jnp
mov
add
sbb
pop
pop
lcall
cmp
movsb
push
mov
or
add
fmul
movl
test
in
rol
jns
mov
add
sbbb
insb
mov
fisttps
mov
lret
dec
sarl
inc
or
xchg
mov
ljmp
cld
ret
jno
adc
ss
ret
fidivs
push
shr
mov
stc
in
jmp
adc
pop
ret
xchg
xchg
test
push
decl
xchg
xchg
jne
pop
imul
xchg
mov
pop
test
cmpsb
iret
hlt
movsl
pop
into
lea
cmc
add
or
scas
aam
iret
hlt
decl
sbb
je
cmc
pop
jns
or
adc
and
jbe
add
lcall
inc
cmp
lret
jle
ja
dec
rcrb
jo
xchg
ret
lcall
add
stc
loope
sbb
fcoms
outsb
out
xchg
jg
pop
rcl
sbb
pop
je
adc
in
xchg
ret
mov
mov
insb
mov
in
int3
inc
mov
jp
movsb
dec
cltd
movl
je
jg
jmp
jle
mov
repz
out
test
scas
adc
mov
inc
mov
jle
cmp
jg
sti
push
aam
das
jnp
cmp
or
adc
ret
mov
jg
xchg
scas
cmp
inc
dec
and
mov
push
sbb
int3
imul
jmp
into
mov
mov
add
cmc
and
dec
data16
dec
jmp
and
jae
decl
test
imul
push
test
xor
sbbb
push
mov
data16
pushl
jbe
lcall
inc
aad
stc
adc
mov
push
sub
call
dec
and
cmp
mov
jb
jecxz
sahf
or
jns
adc
in
sarb
add
jl
sar
mov
dec
aad
and
lock
xor
add
lds
stc
dec
mov
and
enter
push
rcll
pop
jmp
jb
scas
adc
push
jmp
data16
movsb
xor
mov
jb
insb
cli
ds
lahf
addr16
icebp
sbbl
jmp
adc
xchg
cmpl
insl
pop
mov
ss
test
out
test
cmp
cld
sub
cmpsl
outsb
std
mov
sbb
in
xchg
inc
sti
jecxz
xlat
pop
push
popa
pop
cld
stc
push
add
add
dec
mov
add
pusha
push
leave
lods
popf
sarl
cld
mov
mov
into
les
data16
adc
xchg
das
lcall
xchg
cmp
xchg
mov
lds
ljmp
divl
jae
sti
fidivl
cmp
and
cmp
cltd
adc
xchg
dec
jae
mov
incl
lock
hlt
mov
mov
mov
jne
jae
pop
mov
sar
jg
mov
test
adc
les
mov
in
jmp
xchg
shr
cmp
push
sbb
int
pop
call
popf
lock
mov
lcall
dec
out
outsb
addr16
cmp
test
pop
getsec
in
gs
shlb
add
xchg
lds
pushl
push
das
sbb
test
adc
jb
cmp
sbbl
out
cmp
lods
pushl
sbb
jne
ret
or
cs
data16
int3
cmp
pop
outsl
ja
fistps
imul
insb
frstor
jnp
sbb
test
inc
push
xchg
mov
mov
mov
inc
xchg
stc
jne
cltd
push
xchg
dec
loope
add
pop
pushf
jbe
out
hlt
jg
xchg
push
dec
enter
push
xor
incl
adc
or
jne
je
jmp
sbb
icebp
movsl
sbb
or
mov
mov
push
or
shl
fs
jbe
fists
repnz
out
or
int
sbb
scas
inc
and
insb
mov
inc
imulb
mov
sti
jp
adc
stos
sub
jl
outsb
sbb
jg
jg
mov
xchg
loope
or
dec
out
lods
add
push
mov
xchg
incl
pop
call
xorb
sub
in
pop
pop
imul
pushl
movsl
insl
mov
adc
cli
dec
repz
arpl
xor
adc
or
test
movsb
xchg
mov
mov
lcall
lods
push
div
fsubs
dec
loopne
push
inc
jl
in
dec
jno
jae
mov
xchg
sbb
addr16
es
mov
pop
addr16
lret
and
mov
pop
popa
pop
xlat
pusha
and
xor
and
or
cmp
xor
xchg
imul
decl
hlt
jae
pop
mov
mov
push
test
xor
mov
gs
mov
int
decl
or
in
fdivr
push
jno
sbb
and
or
sbb
test
outsl
add
dec
add
jmp
je
inc
adc
xor
mov
jbe
les
pop
inc
daa
mov
sub
pushf
xchg
sti
mov
pushl
push
add
negl
lcall
cmpsb
andl
jno
cmpsb
ret
outsl
clc
decl
mov
imul
jmp
test
sahf
add
xor
ret
or
xor
cli
dec
cmp
lret
or
ret
hlt
or
xchg
cwtl
xor
dec
jmp
pusha
cmpsb
in
cmp
clc
imull
cmp
xor
jecxz
jmp
arpl
cmp
push
popa
rclb
push
mov
dec
cwtl
rcrb
mov
push
mov
movsb
popa
jg
jmp
stos
xchg
lods
and
daa
fimuls
jg
push
fldenv
stos
adc
scas
out
rcrl
inc
out
push
or
mov
decl
sbb
inc
lahf
enter
xchg
inc
xor
add
mov
lea
add
cmp
lock
cld
cmp
dec
bound
sar
push
inc
gs
inc
popf
lret
inc
fld
enter
incl
je
sbb
mov
xchg
xchg
insl
cmp
adc
push
stc
and
lcall
cld
scas
push
leave
cwtl
mov
jg
mov
lcall
cmpsb
jo
insl
jnp
jns
in
stc
sub
int
rcl
ficoms
push
lcall
sub
xchg
cltd
fxch
cmp
push
idivb
dec
and
sub
jno
dec
mov
push
test
mov
push
popf
pushl
adc
loope
and
lret
inc
dec
daa
cmp
cltd
test
std
cmp
incl
ret
dec
push
roll
mov
or
rdpmc
jl
int3
jmp
sub
push
cmp
das
cli
call
fistpl
insl
adc
sub
ja
push
mov
lea
out
adc
add
mov
or
push
push
xor
jmp
ds
dec
imul
pushl
jbe
mov
xor
loopne
pop
cmp
bound
inc
pop
xchg
xchg
ljmp
incl
clc
mov
sbb
push
push
rorb
aas
lods
cmp
pop
jmp
fldcw
pop
inc
nop
cli
mov
jmp
sbb
sub
pushl
sbb
leave
cmpsl
dec
cmp
pop
jne
pushf
scas
sahf
mov
into
mov
jge
mov
fisubrl
pop
lock
in
int3
push
lret
push
mov
andl
pop
std
decl
popa
jnp
add
jne
xor
xchg
out
cwtl
stc
cmpsl
ljmp
pop
call
adc
sti
iret
cmp
repnz
pop
push
leave
scas
cmc
fs
inc
stos
decl
inc
stos
sub
mov
sbb
iret
inc
cmpsb
sbb
mov
ljmp
scas
jp
nop
cmpsb
cmp
push
xchg
adc
xchg
jns
sub
add
cli
mov
loopne
scas
inc
jg
push
dec
imulb
xor
push
adc
rorl
fwait
ror
add
aad
ss
test
dec
mov
std
or
rclb
insl
gs
lcall
loop
dec
lods
cmp
xor
jnp
dec
lret
popa
inc
mov
xchg
xor
decl
sti
js
mov
mov
pop
fnstsw
xor
jg
shlb
mov
mov
fiaddl
incl
push
xchg
xchg
and
ds
pop
mov
jle
sub
or
cmpsb
jecxz
loope
aad
inc
and
incl
mov
mov
jg
cmp
mov
pop
pop
push
stos
mul
fmulp
rcll
cmp
xchg
sarl
cmp
xchg
shlb
jnp
adc
adc
sti
call
sbb
je
pop
and
fwait
jno
xchg
jbe
cmc
jns
sar
mov
cmp
aaa
cld
decl
push
xor
and
dec
iret
in
test
push
fildll
and
call
or
aas
inc
jo
jns
in
addl
inc
in
xor
pushl
clc
inc
call
pop
jl
fisubrl
pop
lods
mov
pop
gs
mov
dec
sbb
movsl
divl
mov
xchg
pop
rorl
inc
scas
outsb
cmpsl
lods
adc
add
pop
cmpsl
in
push
rorl
sbb
xchg
jmp
in
add
mov
dec
push
cmpsl
push
mov
push
cld
cmp
loopne
call
and
lods
push
test
icebp
jl
mov
loop
mov
out
pop
xor
xchg
lods
pop
pushl
std
lcall
jnp
sbb
test
mov
mov
imul
xlat
add
mov
push
testl
push
inc
in
fidivrs
jmp
push
pop
push
push
test
jmp
enter
cmp
xchg
mov
ds
mov
rcrl
add
sbb
call
cld
add
dec
jbe
movsb
push
mov
insl
sahf
call
aam
lahf
data16
ljmp
or
leave
bound
movsb
mov
sti
sbb
aad
cmp
loope
pushf
sub
jmp
dec
sub
ret
ret
aas
mov
pop
sbb
aad
call
jo
pop
cli
mov
mov
pushl
aad
sbb
mov
daa
test
jne
ret
sti
add
sub
push
inc
cs
lret
lods
push
std
ljmp
mov
movsl
add
cmp
lds
nop
bound
sahf
adcb
mov
cli
xchg
cs
jns
test
imul
cmpsb
arpl
into
aad
jg
adc
ret
sub
mov
mov
cli
mov
cmp
add
sub
mov
mov
jo
cmp
dec
sub
sub
call
out
popf
and
sub
pop
push
cwtl
mov
imul
or
add
subb
pushl
pusha
loope
jecxz
push
adc
jmp
add
aas
test
in
push
cli
xlat
gs
inc
and
pop
out
fincstp
movb
ss
in
testb
add
nop
sti
dec
xlat
sbb
call
mov
xlat
push
add
shrl
or
and
pop
call
out
clc
loope
fidivl
into
or
daa
sbb
adc
shll
in
movsb
sub
sti
xchg
xchg
add
inc
out
jecxz
sti
stos
idivl
pop
jae
cmp
fmuls
iret
outsl
iret
dec
inc
mov
inc
jge
sahf
add
xchg
jno
fwait
mov
cwtl
popa
jl
bound
fwait
test
mov
lods
scas
out
cmp
decl
cmpsl
imul
pop
pop
hlt
cwtl
daa
roll
shrb
int
jmp
ljmp
es
push
lret
and
jae
fsubrs
ja
clc
stc
cmp
aaa
mov
addl
inc
mov
pusha
cmp
jo
shrl
push
cmp
subb
iret
les
xor
shlb
call
stos
jo
push
fisttps
inc
insl
std
in
xchg
clc
pop
sbb
xor
or
out
pop
hlt
mov
mov
cmp
sub
sbb
dec
sub
jg
cmpl
outsl
popf
pop
imul
jge
pop
xchg
cmc
sbb
addr16
or
jg
dec
lcall
and
add
dec
test
adcl
ljmp
add
imul
sbbb
es
decl
push
jg
push
andl
and
orl
fwait
incl
jecxz
test
jmp
push
xor
aad
js
mov
scas
cld
into
sub
or
inc
cmp
outsb
mov
lcall
movsb
add
lods
fs
push
rolb
int
or
fistpl
cmc
pop
jb
or
ljmp
lock
out
pop
adc
xlat
ds
sbb
inc
xchg
mov
jmp
jp
adc
pusha
xchg
cmp
jg
iret
xor
icebp
or
lcall
or
xchg
and
filds
inc
and
xchg
mov
jl
mov
cmpsl
sbb
das
test
dec
xchg
adc
add
cld
xchg
cmp
adc
stos
lcall
cmpsb
lods
fnstenv
repnz
lods
cmp
cmp
and
test
popf
sub
jno
test
push
xor
cld
sbb
mov
loopne
inc
pop
xchg
xor
xor
hlt
sub
mov
mov
cli
shlb
inc
andb
incl
fcoms
lret
in
pop
pusha
flds
dec
and
mov
or
add
sahf
lret
ljmp
cmp
inc
add
out
lea
mov
jb
sti
addr16
xorb
aad
push
fisttps
pushl
das
xor
or
mov
push
sub
stos
enter
out
rcrl
sub
fistpll
and
adc
inc
sub
movsb
loop
imulb
and
xchg
repnz
or
dec
sahf
sbb
outsb
adc
nop
push
aaa
mov
jne
imul
mov
shlb
and
dec
sub
xor
into
fucomi
inc
mov
or
outsl
ds
aad
push
std
pop
jo
mov
lock
gs
lcall
repz
push
xchg
mov
mov
push
jnp
mov
and
or
lock
decl
pop
xchg
lea
enter
sub
lds
ja
lcall
add
or
sub
push
loopne,pn
sbb
int3
subl
inc
mov
stos
cmp
jns
push
inc
lcall
jmp
js
cmp
adc
jmp
mov
sbb
sbb
cs
bswap
xor
xchg
addb
mull
pop
cmpb
pop
sti
cmp
push
add
xchg
repnz
xchg
cmp
ljmp
jo
iret
aam
and
pop
push
fs
popa
pop
mov
test
aam
xchg
cmpsl
mov
repz
imul
addl
xchg
mov
clts
jb
push
insl
xor
int
push
xchg
stos
incl
inc
mov
and
push
xchg
jl
movsb
xor
cwtl
outsl
push
inc
mov
mov
jle
xchg
sub
mov
aas
and
inc
repz
mov
mov
mov
jl
loope
shll
dec
es
pop
jo
mov
sub
insl
push
mov
enter
push
mov
push
imull
push
xchg
jle
mov
out
loopne
incl
lock
bswap
test
cmc
jno
add
test
xor
popf
sbb
fwait
lods
in
adc
jb
in
sbbb
jb
add
in
sbb
jb
std
pushl
icebp
js
sbb
pop
jae
and
or
cmp
push
ljmp
jnp
xor
push
xlat
adc
sub
jbe
gs
push
out
sub
xchg
adc
push
ss
push
fstps
xchg
jmp
sbb
mov
ret
dec
jno
aad
sbb
mov
add
inc
push
or
lcall
mov
mov
leave
cmp
decl
std
outsl
imul
jnp
adc
stos
pop
dec
test
int3
sub
loop
outsb
pop
std
incl
cmpsb
out
mov
xlat
cli
ror
fmull
sub
pop
lcall
lock
cmp
test
jge
xchg
add
cltd
mov
lea
mov
cmc
fcomip
pushl
sbb
aas
data16
jg
subb
mov
jg
movsl
jmp
fists
addr16
pop
je
enter
daa
clc
addl
std
pop
cmp
clc
hlt
leave
sub
ja
dec
rol
pushf
into
jp
jae
dec
mov
lcall
mov
push
fs
sub
fcmove
call
popa
popf
sti
fimull
shll
sub
jmp
jmp
or
lret
push
psubsw
pop
arpl
repz
xor
cwtl
fldenv
call
sti
in
cmp
sub
xchg
shr
inc
jno
push
mov
out
test
repnz
sti
sub
incl
lcall
notb
push
xchg
push
jbe
pop
dec
cmpl
xor
call
sahf
mov
jp
pop
idivb
cmp
mov
lock
in
repnz
jo
cmpsb
lcall
jle
adc
push
xchg
add
jne
jne
inc
fdivr
push
arpl
and
in
sub
and
fwait
xlat
pop
aad
xchg
cmc
sti
cmp
clc
decl
data16
fwait
dec
test
fbstp
jge
dec
cmc
or
cwtl
rorb
decl
and
pop
xchg
loope
and
cwtl
pop
aaa
out
sub
in
jecxz
clc
dec
mov
inc
add
pushl
push
cmp
jne
sahf
inc
sub
aas
jbe
adc
in
mov
jns
lods
test
testl
cmc
les
cmpl
jg
dec
out
sub
ss
cmp
mov
xchg
and
call
rorb
cmc
sbb
negl
push
jnp
or
add
fwait
adc
pushf
lds
pop
lock
jmp
and
ds
xorl
and
lds
sub
dec
push
cmc
je
sub
inc
mov
and
sub
pop
aas
xor
mov
shr
hlt
add
jle
clc
call
daa
in
and
movsl
call
lahf
lret
push
pop
cmp
push
in
movsb
dec
test
xchg
lcall
push
push
pop
jne
shrd
and
insb
push
fadds
push
imul
rcr
mov
sbb
ret
sub
out
sti
ja
push
cmpsl
jl
dec
sbb
pop
xor
dec
stos
or
call
repnz
cmpsb
sbb
test
mov
mov
pop
sbb
or
dec
ret
inc
push
cld
fsts
ljmp
dec
stos
out
xchg
cmpsb
xchg
mov
fidivs
jmp
sbb
dec
stc
int
jno
mov
stc
xor
in
sub
sahf
dec
dec
mov
lcall
sub
mov
sti
xchg
mov
aam
notb
push
jnp
xlat
cmp
and
out
cmc
push
nop
push
arpl
pop
lret
cmp
leave
inc
xchg
sub
imul
cmp
and
ljmp
fs
sub
hlt
rorl
inc
lds
int
mov
cli
sbb
lcall
pop
mov
jnp
cmpsl
test
and
add
jmp
push
add
push
incl
inc
pop
push
stos
sub
mov
push
mov
jl
add
loop
call
xchg
mov
adc
test
bound
cmpsl
mov
mov
jmp
or
bound
push
enter
push
jle
push
xor
and
scas
pop
cld
mov
jecxz
dec
add
in
out
inc
popa
stos
cmpsl
dec
cli
call
stc
xor
inc
push
xor
movsb
cmp
push
mov
mov
jp
xchg
adc
cmc
xor
inc
out
lret
and
mov
cmp
cmp
test
fistpll
sub
iret
pop
cmp
daa
cmp
cmpsb
sar
jmp
ljmp
mov
add
inc
in
data16
xchg
lods
loop
mov
cmp
bound
nop
mov
inc
negl
mov
mov
jns
or
mov
popa
int3
mov
aam
mov
xor
loopne
mov
outsb
adc
test
adc
dec
out
cld
test
push
loopne
dec
cmp
es
dec
dec
pop
mov
incl
in
dec
add
imul
frstor
inc
lcall
pop
jmp
dec
xchg
mov
fisttpl
cmpxchg
jns
cmp
loop
jb
and
xchg
sbb
mov
pushl
jle
daa
enter
ja
push
xorb
mov
pop
fcoml
xlat
inc
lcall
push
push
repz
ret
push
jbe
jmp
fs
xchg
les
lds
test
rcrl
dec
lods
xchg
out
and
outsl
sbb
jbe
add
loopne
push
ret
outsb
mov
cmp
ljmp
xor
testl
js
sub
sub
pusha
movsb
js
sarb
sub
arpl
push
loop
shll
xchg
mov
jne
iret
stc
test
gs
jmp
test
enter
inc
sldt
xchg
adc
lcall
xor
movsl
jecxz
mov
xchg
jg
ja
incl
jp
add
fistpll
cli
mov
cmp
jmp
lret
or
and
iret
ljmp
imul
cli
inc
mov
pop
in
dec
inc
jge
mov
jecxz
aaa
in
clc
cmp
repz
push
fcomip
incl
mov
scas
push
cmp
mov
mov
ljmp
and
push
lods
hlt
mov
clc
in
ret
ljmp
enter
mov
inc
mov
mov
or
scas
jno
loop
jmp
mov
mov
adc
mov
lods
nop
sbb
std
call
sub
inc
js
cmp
xchg
cs
mov
mov
test
cld
in
dec
mov
mov
subl
loopne
icebp
push
jb
hlt
push
xor
sti
in
jae
mov
xchg
mov
xchg
fs
dec
cmp
pop
in
adc
fimuls
mov
or
mov
cli
sub
inc
xchg
and
stc
mov
movsl
or
outsl
jg
rcl
xor
scas
xchg
cmp
jg
loope
sahf
xchg
pop
cwtl
test
enter
or
out
movsl
stos
push
jge
int3
adc
adc
fiaddl
outsl
lcall
jmp
sub
rclb
and
push
loop
pop
xor
jae
mov
std
ljmp
jb
inc
jp
mov
cwtl
fildl
mov
pop
pushf
cltd
push
ljmp
orb
call
mov
adc
repz
lock
jmp
sub
pop
and
aam
aas
ljmp
mov
xor
sbbl
call
std
jg
sbb
mov
dec
or
and
daa
mov
pop
incl
xlat
dec
repz
and
pop
pop
pavgb
cmp
mov
mov
mov
fwait
mov
in
fisubrs
xor
ret
push
adc
mov
out
jnp
incl
sbb
insb
pushf
ljmp
cltd
mov
pop
call
pushl
and
scas
push
sub
and
xor
add
and
dec
ljmp
mov
mov
jne
aad
xor
dec
xchg
or
lock
lcall
in
or
mov
lock
popa
inc
mov
lds
and
lcall
lock
out
inc
mov
sub
aad
jbe
gs
push
jmp
ficomps
xor
push
cltd
and
std
call
aad
mov
fsubr
mov
mov
ss
mov
nop
and
push
push
les
inc
leave
dec
stos
arpl
ljmp
hlt
movsl
hlt
nop
push
out
pop
or
movl
sbb
inc
btr
das
ror
hlt
fwait
push
adc
jl
jbe
test
xor
incl
pop
ret
sub
es
push
adc
adc
sub
pop
test
roll
popa
push
sub
pop
adc
faddl
pusha
xchg
ret
pusha
and
jp
test
cmpsb
inc
ljmp
out
jp
js
fdivl
inc
int
sub
mov
mov
stc
pop
dec
inc
stos
lock
pop
dec
xchg
dec
mov
nop
les
pop
jle
out
push
push
mov
jbe
push
pushl
jmp
mov
das
and
or
iret
cmpsb
std
je
jl
lds
call
arpl
add
push
cld
xchg
loopne
jmp
adc
push
mov
sbb
jne
nop
rcr
out
mov
bound
mov
sub
mov
xor
xchg
fwait
imul
xchg
jp
scas
ss
outsl
clc
call
insl
subb
cmp
xor
mov
sub
xor
cmpb
inc
roll
fstpt
lcall
orl
xlat
dec
lcall
or
push
fcmovne
ret
cwtl
mov
movsb
sub
jmp
pushl
ldmxcsr
push
in
mov
mov
inc
int3
in
rorl
lcall
or
hlt
mov
xor
mov
ret
out
mov
inc
mov
cmp
jmp
insl
mov
or
mov
repnz
in
add
aad
mov
sub
sub
orb
jle
int
sub
mov
xchg
in
jl
mov
lock
push
hlt
dec
cmp
lcall
inc
add
test
pop
dec
int
mov
enter
inc
nop
das
xchg
hlt
rcrb
decl
leave
popf
jle
xchg
loop
mov
pop
mov
out
add
lcall
jmp
xchg
xchg
xlat
pop
dec
loop
mov
sarl
push
push
jl
loopne
jmp
nop
jmp
xor
jmp
jno
add
sbb
aad
incl
shr
mov
xchg
jg
jge
mov
push
stos
aas
push
fisubs
push
mov
ret
inc
call
cltd
mov
lret
jp
push
cmp
mov
xor
call
fisubrl
xchg
or
ds
jne
sub
adc
adc
cmp
test
popa
das
mov
decl
push
popf
imul
gs
sub
sbb
or
inc
xchg
pushl
cmp
inc
or
jae
xor
int
adc
add
and
ds
clc
jmp
jmp
daa
push
aaa
mov
xor
out
xor
imull
sub
jne
std
cmp
test
incl
jecxz
mov
lds
pop
aas
or
fildl
xchg
stos
and
stos
lret
and
lcall
adc
jno
fstps
mov
ret
hlt
idiv
ja
add
cs
pushl
cmc
pushf
push
stc
shrb
pop
in
mov
adc
jecxz
or
jne
adc
lock
call
imul
jle
mov
ficoml
push
ss
hlt
loopne
ljmp
mov
mov
fisubl
mov
push
iret
pop
icebp
push
push
sbb
add
data16
xor
nop
push
inc
decl
fadds
ds
lods
jb
push
lcall
mov
or
inc
push
dec
inc
inc
jg
pop
cwtl
or
and
pop
loopne
add
mov
jne
cmp
clc
mov
xor
dec
lcall
xchg
push
mov
and
push
xlat
stos
daa
fptan
fists
rol
pop
lods
int3
push
and
sti
call
push
sub
subl
inc
insl
into
mov
imul
ljmp
out
inc
insb
sbb
out
test
ret
mov
por
cld
bound
fdivrl
inc
sub
aaa
cs
adc
icebp
daa
xor
ret
sbb
inc
or
movsb
push
incb
cmpsb
dec
add
test
jl
mov
lods
rcr
push
mov
xor
and
mov
ja
mov
inc
mov
loope
dec
add
mov
mov
sbb
push
cmp
mov
insb
incl
mov
lods
mov
push
aam
jo
mov
mov
loop
pop
xor
ljmp
fcompl
adc
out
xor
mov
or
ret
jg
pop
enter
pop
mov
mov
popa
push
mov
ds
or
add
adc
jmp
out
repnz
pop
arpl
xor
mov
and
cwtl
mov
lcall
push
mov
mov
aas
jae
mov
adc
dec
fsubl
imul
cmp
jno
sub
lds
mov
xchg
into
popa
cmp
dec
loopne
jmp
push
sahf
cld
jg
bound
mov
insb
mov
popa
push
inc
shr
sbb
sbb
push
fbld
test
mov
popf
jge
arpl
pushl
inc
aaa
pushf
test
mov
adc
out
dec
push
mov
lock
cs
jmp
jmp
ja
inc
lret
mov
test
jno
in
aam
imul
cmp
xchg
push
in
sarb
dec
lret
cmp
cwtl
jae
xor
cs
imul
decb
out
mov
add
xor
mov
xor
int
enter
out
cli
jmp
out
imul
cli
iret
ljmp
mov
push
xchg
pushl
outsb
mov
lea
mov
pop
pop
sub
mov
mov
add
test
jbe
sub
stc
push
call
repz
fwait
lods
pop
or
pop
dec
mov
movsl
aaa
std
dec
mov
je
dec
mov
clc
adc
mov
add
and
pop
sub
lea
incl
rclb
and
daa
fdivrs
out
xlat
pop
jne
outsb
pushf
push
add
pop
aaa
ja
popf
jg
ljmp
add
nop
cltd
les
xor
cmpl
xchg
pop
jae
decl
insb
dec
dec
pop
xchg
fisttpl
and
dec
testl
inc
or
ljmp
mov
lea
dec
xor
pushf
js
adc
ss
dec
rorl
mov
mov
out
dec
add
lods
jl
jo
and
repz
push
int
and
mov
push
mov
mov
mov
xchg
add
call
stos
in
adc
or
sub
jge
test
mov
mov
insl
leave
dec
cmpsl
push
out
aaa
call
std
call
fmulp
push
push
loope
sub
loop
sbb
sub
in
add
scas
xchg
call
sub
hlt
sub
jo
hlt
adc
cmc
mov
cld
incl
sbb
lret
xchg
and
add
or
aaa
cld
add
mov
adcb
nop
ja
sbb
xchg
mov
cmc
call
xchg
rol
and
enter
int3
ficomps
pop
pop
out
inc
add
incl
pop
pop
ret
hlt
in
scas
hlt
xor
cld
out
xchg
aaa
ror
stos
pop
push
or
decl
cmpsl
andl
dec
aad
das
out
clc
fisttps
mov
jg
ljmp
adcl
mov
sbb
jbe
test
cmp
popl
mov
test
sub
lods
xchg
ljmp
jmp
cmp
nop
je
loopne
out
fs
sar
cli
and
cmp
ljmp
lods
sub
and
sub
add
fwait
push
or
call
xchg
mov
into
insb
xlat
jl
add
lods
cltd
mov
gs
mov
iret
testb
ljmp
nop
nop
gs
and
fs
add
mov
mov
test
dec
in
repz
out
add
call
add
out
lcall
xlat
xor
movsb
mov
jbe
jg
jne
out
js
push
out
xorl
xchg
test
notl
sub
mov
nop
cmp
cmp
mov
mov
push
rcll
fdiv
enter
xchg
jl
sti
mov
fs
rcrb
lea
push
sbb
cmpsb
mov
dec
lcall
jmp
sub
scas
mov
mov
jbe
adc
pusha
xor
lods
jmp
flds
jg
cmp
or
inc
out
jle
rcr
adc
incl
push
xchg
in
cmp
sub
sbb
dec
jno
and
jecxz
push
or
cli
dec
mov
jne
test
test
into
mov
loope
adc
cld
mov
call
xlat
clc
add
push
xor
mov
lcall
lret
sahf
add
mov
push
cwtl
loopne
out
sub
push
and
icebp
and
ljmp
push
cmp
int3
mov
inc
xchg
xor
ret
lds
xor
nop
repz
jb
mov
bound
mov
jg
cs
subl
pop
push
cmp
cmp
push
fildll
arpl
scas
adcb
mov
ljmp
es
fstpl
push
rcrl
jmp
or
aam
mov
xor
dec
pop
cmp
sahf
lahf
dec
sar
ljmp
out
xchg
fnstsw
sbb
popf
cmp
xchg
shll
or
lret
jmp
js
out
xor
push
dec
stos
clc
icebp
fwait
xchg
insl
cmp
das
icebp
decl
sbb
add
mov
dec
dec
cs
ljmp
ljmp
adc
fs
testl
movsl
addr16
lcall
incl
and
cltd
adc
xlat
out
jl
stos
sub
out
jbe
sti
movsl
jmp
push
xchg
adc
xchg
and
mov
xchg
add
gs
ljmp
cmp
mov
lcall
repnz
jbe
xchg
fcmovne
shlb
push
popf
jmp
out
mov
fwait
movsb
pop
pop
aas
inc
xchg
xor
add
int3
push
xchg
xor
xchg
aad
jg
cmp
out
gs
testl
and
int
pop
loopne
lcall
fstpt
scas
dec
call
fcomps
call
decl
xchg
mov
call
cld
repz
pop
gs
inc
mov
push
or
icebp
decl
inc
xchg
icebp
xor
xchg
xchg
sub
add
ljmp
sub
pushl
jge
cmp
movsl
sub
push
out
mov
jno
mov
xor
sbb
cld
jne
ljmp
lahf
cltd
stos
pop
mov
aam
inc
pop
dec
stos
rcrl
xor
jmp
call
push
hlt
enter
ds
mov
jl
fiadds
aad
adc
mov
sahf
mov
out
push
arpl
inc
mov
ret
cmc
inc
push
push
cmp
lods
lcall
pop
pop
pop
push
ds
add
lea
or
jbe
clc
add
mov
scas
incl
out
or
xchg
dec
ret
pop
in
lcall
das
sub
ficompl
decb
in
cltd
shlb
dec
imul
adc
ds
jno
jmp
push
push
bound
sub
cmp
lret
mov
mov
ljmp
mov
out
dec
jle
push
xor
cmp
cmc
pop
mov
ljmp
into
call
dec
push
add
jnp
loope
sbb
xchg
mov
xor
sti
stos
ja
rcr
cmp
cwtl
lods
mov
or
push
inc
adc
fstpl
pop
in
add
loop
pop
loopne
and
add
inc
les
pop
lcall
aam
adc
fstpl
pop
jo
jmp
xor
xor
adc
aam
div
je
sub
pushl
xchg
imulb
aaa
sbb
cmp
mov
fwait
xor
fisubrl
xor
push
sbb
adc
jmp
cmp
stos
and
add
push
gs
ljmp
sbb
ds
clc
out
loop
fldl
mov
negb
lods
cli
call
dec
and
xor
cwtl
rclb
incl
push
aaa
repz
ljmp
dec
mov
clc
mov
jg
xlat
scas
sbb
insb
xchg
sbb
fsts
inc
mov
das
fmuls
pop
inc
push
cmc
adc
add
mov
hlt
xchg
imul
repnz
push
iret
stos
mov
pushl
add
stos
cwtl
stc
push
jns
add
aam
pop
sub
sub
push
sbb
cltd
cli
mov
dec
imul
imul
outsl
jne
pop
sub
nop
inc
fidivrs
icebp
call
scas
bound
push
cmpsl
xchg
sub
ret
leave
fs
lret
fbld
testb
sub
sub
test
cmp
cmp
call
aad
xchg
into
arpl
loopne
mov
xor
add
jmp
mov
xor
jmp
loop
roll
cmp
loop
aas
subb
or
in
jb
jmp
mov
dec
sub
adc
and
jp
les
pop
xchg
repnz
lea
jg
jmp
fbld
stos
adc
out
popf
out
test
les
enter
decl
decb
sbb
inc
add
subl
cli
dec
jmp
addr16
sahf
popf
jp
mov
and
leave
dec
xchg
fists
aam
inc
xor
jl
add
in
push
cmpsl
fcomps
cmp
push
out
nop
and
jp
jns
imul
flds
and
mov
mov
call
inc
es
jp
mov
or
loop
sbb
mov
dec
pop
or
add
pop
out
clc
jmp
dec
adc
xchg
out
lret
imul
pusha
add
dec
in
pushf
xchg
pushl
pop
push
push
jb
shrl
mov
jle
js
mov
faddl
insb
jp
stos
sar
push
pop
jae
sbbb
dec
push
xchg
lahf
mov
movsb
lods
loope
shl
stc
sbb
rep
pop
push
cli
lock
mov
std
repz
sbb
dec
mov
xchg
int3
pop
or
ljmp
movsl
je
add
xchg
push
lods
dec
and
ljmp
out
cli
adc
mov
daa
xor
xlat
lods
pop
loopne
fsts
test
or
shr
mov
mov
repnz
and
ljmp
xchg
add
xor
jae
iret
sarl
jbe
call
ret
cs
std
jmp
mov
inc
ret
aas
loope
mov
sbb
push
popa
lar
pop
js
mov
dec
loopne
pushl
ss
push
movb
decl
js
fimuls
aam
fildll
loop
cmp
fidivrl
pop
std
lcall
inc
ficoml
int3
sahf
and
scas
xchg
shll
mov
ja
les
lcall
jp
vpaddsb
sub
mov
inc
add
das
fwait
ss
test
nop
jmp
lds
mov
inc
xor
or
inc
mov
adc
pushf
mov
cmp
xor
incb
lcall
sub
jge
adc
aaa
adc
push
ds
ljmp
lcall
pop
mov
mov
int
push
jp
incl
cld
add
adc
dec
loopne
arpl
sahf
or
jne
cmp
std
out
jl
and
add
and
loopne
decl
out
sbb
adc
push
roll
or
into
mov
fs
out
movsl
pop
loopne
jl
mov
mov
xor
popa
adc
sub
icebp
sub
mov
in
js
and
aam
push
fbstp
and
xor
inc
pop
mov
stc
push
iret
pop
xor
jmp
imul
push
jge
movsl
lret
push
fildll
decl
insl
lcall
sub
in
rorl
xor
in
scas
sbb
sbb
jle
fcomip
incl
mov
adc
cmp
or
je
or
test
push
pop
push
sub
popf
loope
out
jecxz
out
push
pop
jg
test
mov
cmp
mov
or
stc
in
and
fdivs
jbe
inc
test
dec
or
ret
ljmp
pop
xor
inc
add
mov
jnp
mov
sahf
shlb
in
sub
jle
mov
incl
repnz
mov
push
rol
shrb
mov
adc
loope
jle
lahf
push
mov
out
shlb
incl
add
fwait
aam
xor
subb
xchg
aad
sub
pop
jno
cmp
jmp
mov
movsb
dec
out
inc
repnz
lea
add
ret
call
out
loope
mov
sbb
and
mov
inc
add
lret
ret
mov
ljmp
ret
fdivr
insl
push
mov
cmpsb
icebp
push
fildll
inc
sti
or
call
lret
jns
and
dec
push
jns
xlat
push
and
adc
add
daa
cmp
xor
jbe
mov
pop
rorl
mov
mov
inc
test
lcall
push
clc
int
imull
lcall
or
inc
test
outsb
xchg
jns
jmp
dec
xchg
xchg
adc
mov
jno
gs
push
mov
and
sti
fidivrs
lcall
fwait
mov
popa
scas
push
sbb
pop
fldenv
inc
inc
popf
incl
in
sub
sysenter
jge
jno
dec
hlt
pop
lds
sub
imul
into
xor
ljmp
lock
xchg
dec
cld
fisttpll
jo
sub
fisubs
xor
dec
push
movsb
outsb
lret
sahf
ja
mov
mov
cs
xor
push
sarl
call
mov
inc
test
or
cmp
mov
fnstenv
or
push
inc
call
mov
in
pop
repnz
popa
jge
mov
pop
push
leave
pop
adcb
jno
mov
jnp
jl
int
fiaddl
repnz
push
or
lcall
cmp
rcl
sub
popf
mov
inc
push
jno
mov
ljmp
sbb
pop
insb
jl
dec
insl
out
ret
mov
inc
aad
decl
jo
sarl
push
rcll
scas
mov
cmpsl
dec
lock
jmp
sbb
or
cmp
iret
js
les
pop
xor
mov
adc
testb
aaa
xchg
xchg
xchg
or
adc
push
std
pusha
std
aam
repnz
jmp
push
outsl
jecxz,pn
popf
fisubrl
ret
dec
clc
fiaddl
cmp
lods
in
and
sub
xchg
std
ja
xor
sub
pusha
push
loopne
arpl
jp
fcomip
jmp
dec
shlb
imul
mov
arpl
jl
xchg
js
push
inc
mov
dec
jno
fldenv
xor
cli
and
pushl
add
pop
fisubrl
in
sbb
push
push
pop
inc
jno
call
dec
mov
mov
in
repz
in
loope
inc
lods
psrlw
xchg
xor
outsl
dec
push
mov
nop
add
test
sub
mov
sbbb
cmpsb
aam
pushl
sub
adcl
aad
out
jmp
loop
pop
add
mov
mov
lock
ljmp
sbb
cmp
nop
pusha
push
dec
sahf
push
in
push
popf
es
incl
les
sti
dec
cwtl
cmp
iret
xchg
push
leave
into
pop
pop
clc
scas
cli
jl
push
mov
in
dec
adc
popa
lods
and
popa
les
mov
cli
add
or
ret
sbb
and
fs
das
js
adc
dec
lea
aaa
test
mov
bound
jl
sub
into
jg
lcall
push
and
imul
test
lret
cmp
xor
cld
mov
movsl
push
ret
mov
or
sub
nop
lock
fsubp
jne
cmp
dec
arpl
aam
leave
pop
and
cmp
test
cmp
decl
rorb
pop
mov
xchg
movsb
inc
xchg
mov
repz
movaps
test
decl
cltd
adc
or
out
inc
xor
xor
arpl
inc
repnz
scas
jne
adc
cmp
fs
xor
loope
sbb
dec
sub
mov
mov
xchg
push
cmp
pop
cld
stos
mov
jle
jecxz
sar
stos
or
add
test
shl
sahf
jae
fwait
xchg
call
clc
adc
xchg
fwait
adc
int3
out
or
sbb
cli
jns
std
lods
xor
call
imul
jbe
andb
test
dec
mov
xchg
ret
jl
mov
push
sti
jmp
clc
out
sub
mov
and
cltd
loop
es
repz
pop
jg
pushf
lcall
mov
leave
sti
sbb
xlat
int3
jbe
sub
cmpl
incl
mov
add
ficompl
mov
and
out
loope
xor
adc
or
adc
mov
xor
lds
int3
ret
push
addr16
or
xchg
test
cs
inc
cltd
mov
dec
test
orb
aas
setle
loopne
jge
pop
push
mov
xchg
jns
mov
jbe
incl
loope
inc
xor
stos
fildll
jns
fisttps
dec
xchg
mov
sbb
cmp
push
or
pop
aas
mov
mov
jbe
imul
test
push
push
in
adc
arpl
nop
and
mov
call
or
call
popa
adc
repz
rcl
int3
dec
pop
gs
and
pop
stc
imul
out
mov
faddl
repnz
out
data16
inc
ja
stos
test
sbb
cmpsl
mov
inc
shlb
lcall
mov
int3
mov
icebp
xor
hlt
jge
subps
pop
xlat
xchg
mov
scas
or
jecxz
add
and
popf
outsb
push
pushl
or
fstps
lret
xchg
mov
iret
outsl
pop
jo
imul
cmp
xchg
mov
add
add
js
ljmp
mov
adc
push
fstl
mov
and
sub
nop
inc
xchg
aaa
ja
jl
pop
jecxz
cli
dec
push
jle
and
call
xlat
test
dec
sub
test
cld
xchg
mov
idiv
and
loop
lcall
std
or
sbb
cmp
outsb
or
fsubs
mov
hlt
test
scas
out
pop
sbb
in
xor
jge
incl
nop
add
mov
dec
pop
xchg
sbb
xchg
adc
test
mov
xor
jbe
pop
mov
xor
jle
repz
cld
cwtl
outsb
ss
loope
cs
lcall
enter
out
aaa
movsb
hlt
cmp
pusha
jnp
into
add
push
dec
fstps
loope
call
in
xlat
imul
jl
add
cwtl
orl
dec
test
xchg
movsl
adc
decl
adc
push
lock
andl
sbb
cmp
daa
idiv
jns
push
movswl
imul
test
std
fcompl
mov
xchg
and
sub
stc
rolb
incl
or
lock
inc
sbbb
shll
pop
inc
gs
pushl
sahf
sbb
jns
mov
cmp
add
xor
adc
jecxz
mov
jmp
incl
jno
lcall
add
pop
cmp
dec
shll
das
add
jg
mov
sbb
inc
dec
push
jecxz
adc
cmpsb
inc
xchg
pop
rcll
aam
out
call
mov
call
outsl
test
pop
fwait
sbb
int
push
clc
pop
add
inc
sub
addr16
inc
and
xchg
xor
stos
aaa
jle
mov
adc
nop
pop
dec
xchg
or
pop
lods
ss
xchg
push
push
aam
xchg
cmp
jmp
popf
ja
out
outsb
inc
loop
js
jns
jo
rclb
idivb
mov
dec
dec
xlat
or
or
popf
mov
sbb
addr16
fs
push
out
mov
sub
lret
add
shrb
call
clc
aaa
xchg
dec
inc
cmp
lret
cltd
movsb
push
popa
push
add
lea
jmp
inc
mov
inc
popa
sub
lcall
repnz
xor
xchg
testl
std
lcall
mov
jnp
xchg
ss
cmp
test
sbb
mov
stc
xor
and
aas
xor
and
ja
pop
aam
cli
sub
inc
fucom
mov
subl
dec
and
mov
push
dec
xor
stos
xchg
pop
bound
cwtl
push
dec
mov
incl
or
cmc
pop
push
insb
std
xchg
xchg
mov
fs
push
inc
lods
sbb
call
arpl
leave
into
lret
mov
iret
fwait
mov
leave
inc
dec
iret
sub
sub
xor
mov
lcall
movsb
or
push
pop
push
mov
ljmp
cmp
push
pop
pop
mov
dec
ljmp
ljmp
push
mov
inc
mov
mov
outsl
mov
cli
stos
cmp
jns
push
rcrl
call
scas
inc
cmp
lcall
imul
inc
mov
roll
pusha
push
test
call
int3
sbb
fwait
push
lret
int3
dec
and
loope
inc
in
sbb
sahf
cli
dec
cmpsb
cmp
fcomip
inc
jle
push
push
sti
js
iret
insl
rclb
ja
out
mov
sahf
arpl
sti
lds
mov
push
js
xor
cmp
lret
aaa
push
cmc
decl
adc
lahf
cmp
ret
lea
sub
xor
aad
adc
pop
lret
lock
ret
inc
test
inc
stc
or
lock
adc
fcomip
or
xchg
jne
mov
cmp
or
insl
push
and
test
pushl
add
pushf
cmc
sub
std
jnp
or
stos
mov
jg
ljmp
lock
jae
sbb
mov
loopne
jl
inc
sbb
xor
jmp
rcrb
bound
lods
cmpsl
push
mov
jecxz
dec
shrb
incl
pop
cld
in
pop
sti
push
pusha
jp
or
push
xchg
mov
aad
mov
mov
fxch
fsts
js
jle
jo
mov
or
push
fidivrs
push
cltd
sahf
xorl
in
fdivrl
cmc
ljmp
fistps
rcr
sub
jo
cmp
shrl
mov
daa
std
fs
cs
add
adc
insb
add
inc
xor
jmp
ds
xor
lret
push
cwtd
mulb
ds
decl
fwait
cmp
xor
or
add
out
je
bound
jge
or
inc
push
loopne
xchg
loopne
or
cltd
stos
in
mov
mov
jns
xchg
push
lods
push
enter
scas
je
data16
jle
lods
cs
in
call
jnp
cmp
inc
jg
dec
xor
incl
dec
scas
dec
lcall
lods
xchg
sahf
xchg
inc
movsl
jne
fdiv
sahf
cmp
out
lock
pushf
add
pop
push
clc
sbb
hlt
adc
cmc
and
lods
mov
sbb
ljmp
out
adc
inc
and
rclb
inc
inc
enter
or
push
push
clc
add
sahf
fistpll
cmp
ja
aad
cmp
incl
call
cltd
aas
mov
fisttpll
jge
push
in
xor
xor
push
cmp
icebp
lcall
sahf
mov
sti
or
jle
dec
push
das
adc
jnp
and
inc
fs
lcall
pop
jmp
sbbl
out
insl
fwait
test
sub
insb
adcl
cmp
cmp
push
std
and
out
jnp
mov
ds
or
jo
cmp
mov
sbb
jmp
loopne
enter
pushf
outsl
outsb
hlt
or
inc
ljmp
rcr
movsb
leave
mov
popf
xchg
out
sub
mov
cwtl
shl
cmp
cmp
xor
jbe
bound
andb
xchg
lcall
lods
push
and
and
incb
sbb
outsb
jl
jo
fld
imul
lcall
sarl
stos
insb
iret
and
inc
dec
pop
lods
inc
sbb
mov
gs
cmpsb
mov
imul
and
push
add
in
xor
adc
scas
clc
decl
je
xor
sub
add
push
cwtl
jo
add
cmp
incl
inc
push
lds
cmp
cmp
xchg
icebp
mov
ljmp
pop
loopne
xlat
cwtl
jle
jo
mov
and
xchg
pushf
cld
jl
cmpsb
xor
xchg
call
lcall
call
fadds
cmp
adc
stc
clc
sbb
and
dec
jmp
ds
mov
lcall
sub
outsb
aam
stos
sub
repnz
xor
sbb
int3
mov
addr16
fcompl
cli
ds
pushl
ss
jp
inc
lret
or
pop
loop
mov
stos
rorb
cmp
cmp
daa
mov
fmull
sbb
dec
gs
addr16
std
pop
dec
dec
push
cld
pop
std
jge
mov
xor
fnstcw
cmpsl
movsb
int
push
push
fisubl
pushl
cmp
and
push
mov
out
mov
sub
out
lcall
dec
sub
cld
inc
sub
mov
or
aas
out
pushf
out
in
push
jg
ljmp
ljmp
shlb
jne
xchg
incl
out
cmp
mov
lret
or
inc
ljmp
mov
aaa
xchg
incl
push
mov
jb
and
pop
push
mov
pushl
imul
sbb
dec
daa
adc
mov
adc
call
adc
lock
cltd
sub
add
and
inc
pop
jbe
jbe
push
xchg
dec
cmc
call
pusha
mov
inc
pop
dec
or
sub
mov
mov
pop
push
inc
aam
xchg
mov
pop
icebp
bound
movsb
xchg
cmpsl
jecxz
or
mov
mov
xor
mov
pop
stos
movsb
aam
cmp
fdivl
push
push
sub
sti
daa
mov
mov
jg
push
cli
mov
and
decl
xchg
test
adc
in
fnstsw
sarl
ljmp
jae
test
inc
jl
mov
scas
mov
test
stos
dec
in
or
pushl
adc
mov
les
fdivp
add
jg
mov
lock
pop
jmp
mov
sbb
iret
ret
lcall
dec
stos
xlat
pop
bound
in
or
inc
jbe
stc
push
mov
jg
cld
loopne
mov
ss
cwtl
sub
and
sub
jo
add
shl
lahf
icebp
xor
lcall
ja
dec
mov
push
fs
jbe
jo
cmpsb
xchg
inc
add
icebp
decl
mov
mov
and
scas
popa
mov
adc
pop
xchg
cmc
sub
jmp
xchg
push
mov
sbb
cmc
lock
xor
out
pushl
hlt
xlat
pop
push
arpl
pop
lret
mov
sub
mov
insb
std
jecxz
ffreep
cmp
decl
movsl
testl
addb
aas
and
or
jp
push
mov
mov
mov
xchg
sbb
lds
mov
push
xor
jg
cmp
mov
xor
sub
mov
nop
loopne
loopne
loopne
fdivr
jmp
dec
lods
lods
inc
test
cli
dec
dec
mov
push
dec
dec
cmpsl
repz
cmc
jmp
jle
lret
movsb
xchg
xchg
stc
pop
mov
mov
pusha
xchg
add
inc
fidivrl
push
fyl2x
jecxz
adc
subb
mov
fsts
jge
or
bound
and
enter
incl
mov
mov
xchg
outsb
lock
and
pop
jl
xchg
sar
call
scas
clc
ljmp
mov
sub
sub
popf
lods
push
xchg
xor
adc
incl
sub
push
push
aaa
adc
pop
dec
sbb
or
lock
xchg
sub
jmp
push
loop
fs
ret
mov
int3
or
jp
pop
push
mov
ljmp
lods
rorb
inc
outsl
pop
push
pushf
pop
pop
sub
adc
mov
cmp
inc
lea
push
xor
add
fbstp
stc
push
inc
xchg
xchg
fists
nop
and
dec
fsubrl
pop
iret
xchg
fdivr
call
imul
outsl
shl
dec
bound
in
xlat
aam
mov
adc
add
nop
pushl
loop
pusha
add
pop
mov
inc
add
push
sub
or
pushl
dec
mov
mov
dec
mov
and
lcall
cltd
pop
repnz
gs
jo
inc
sub
xchg
pop
cs
sub
ds
or
insl
ja
ljmp
xor
call
push
dec
and
or
shrb
int3
aam
pinsrw
adc
int
push
push
mov
pushl
adc
gs
shlb
push
push
sahf
aam
mov
incl
jno
sub
sub
pop
loop
icebp
cwtl
jge
in
repz
clc
aam
insl
pop
hlt
incl
pusha
fwait
out
mov
push
int3
fildl
mov
mov
jmp
mov
dec
cmp
icebp
jp,pn
outsb
and
int3
xchg
mov
lcall
adc
inc
enter
out
into
sub
or
data16
mov
mov
imul
mov
add
xor
and
dec
pop
lcall
and
inc
addr16
movsb
pop
lcall
jg
add
popf
mov
in
cwtl
movsb
ror
movl
sahf
or
cmp
lahf
repz
ja
xor
call
adc
push
call
push
inc
cmpsl
stc
icebp
std
gs
into
inc
in
test
mov
ljmp
jns
dec
sbb
movsb
jl
out
mov
lds
pop
repz
adc
inc
mov
mov
and
stos
repnz
inc
push
into
stc
mov
ret
or
sub
movsl
movsl
pushl
out
out
stos
cli
mov
cli
dec
push
incl
out
cltd
cltd
mov
mov
idivl
es
sahf
sub
call
mov
in
push
adc
jb
mov
out
bound
or
cmp
das
xchg
in
mov
daa
fidivrl
adc
sti
lahf
fwait
dec
int3
call
aam
xchg
repz
pop
cmp
pop
aam
out
mov
push
shl
inc
negb
mov
push
or
pushf
in
repnz
scas
in
xchg
insl
mov
lock
jg
ficoms
mov
nop
test
movsb
loope
stc
lret
stos
scas
clc
stos
incl
pop
xchg
or
pop
inc
pop
dec
and
mov
push
loopne
gs
loope
add
mov
push
and
aad
cmpb
mov
cld
call
rcrb
pushf
outsb
lret
pop
cmpsb
fdivrs
sbb
ljmp
dec
scas
dec
inc
in
xchg
mov
dec
xor
mov
lds
pop
inc
lahf
std
xchg
jge
mov
fiadds
lcall
xor
dec
xchg
in
sar
push
ljmp
xor
xor
test
dec
insl
lret
lea
xchg
aaa
mov
cmc
jmp
jg
outsb
dec
repz
lock
xchg
mov
lahf
lcall
aad
push
lret
pushl
pop
out
lea
mov
scas
adc
enter
push
gs
incl
rol
nop
daa
adc
cmp
xchg
aam
fisubrl
arpl
jbe
or
clc
ljmp
mov
jns
pop
cld
xchg
xor
clc
cs
mov
test
fs
push
pop
aam
mov
test
bound
leave
fadds
ret
ss
push
sbb
loopne
jmp
dec
js
into
mov
dec
repz
aam
daa
out
or
cmpsl
lcall
inc
and
test
call
insb
std
mov
dec
insl
inc
scas
add
sbb
js
das
or
mov
inc
mov
or
dec
xor
pop
int3
scas
repz
sbb
out
lahf
mov
push
push
xor
push
cmc
loopne
test
sub
scas
sub
aas
decl
xor
not
leave
and
fcmovbe
imul
repnz
je
addb
jmp
daa
xchg
mov
movsl
mov
adc
xor
add
incl
int3
jmp
rcll
daa
pop
testl
cmp
cmp
or
push
pop
hlt
pushl
pop
pop
bound
jo
orl
pop
imul
jg
loop
inc
pop
imul
xchg
bound
mov
sti
div
sahf
add
sbb
mov
aas
add
adc
lret
test
cmp
cmc
in
dec
ret
or
jmp
iret
xchg
cmp
loope
jae
add
inc
jns
test
push
repz
mov
add
fisttps
mov
mov
nop
sbb
jle
and
out
clc
out
je
insl
cmp
sbb
roll
mov
jecxz
pushl
imul
mov
cmpsb
jmp
icebp
mov
adc
add
jmp
fidivl
repz
mov
push
movsl
ss
stc
mov
subl
jne
and
mov
pop
int
loope
inc
sub
iret
or
outsl
adc
xchg
das
xlat
sbb
incl
adc
ret
mov
pop
mov
popa
ret
int3
push
xor
mov
decl
mov
inc
mov
insl
push
gs
add
es
xor
inc
xor
xor
jns
pop
std
sbb
loop
sbbl
mov
add
sub
lods
in
and
lahf
or
jb
cli
incl
hlt
jnp
push
add
ret
mov
lods
jp
outsl
std
and
movq
pop
imul
outsl
inc
push
in
push
push
dec
add
mov
flds
pushl
inc
fdivl
loopne
lea
mov
cmp
push
jp
mov
sbb
mov
jp
cli
adcb
mov
pop
cmp
lock
incl
mov
dec
stc
in
dec
xchg
push
push
in
xor
mov
add
call
cmpsb
clc
inc
push
aam
sbb
sub
cmp
dec
mov
adc
inc
mov
jmp
iret
push
cmp
and
add
rcrl
aam
push
sahf
xchg
jbe
test
cmp
push
std
cmpsb
cwtl
mov
jbe,pt
pushw
pushf
sbb
shlb
cmpl
sub
gs
push
in
jae
inc
mov
mov
mov
mov
push
push
in
add
movsl
mov
adc
mov
xchg
mov
sbb
test
inc
cwtl
lea
or
xchg
dec
js
ret
dec
sub
inc
pop
fs
xor
outsl
clc
jle
cmpsb
push
ljmp
sbb
popa
inc
imul
popa
mov
sahf
cwtl
and
inc
call
pop
out
out
pop
push
cmp
aam
ret
mov
ds
sub
ljmp
sbb
push
push
jmp
jp
cmp
mov
sub
mov
int
popa
mov
incl
out
ret
add
inc
jne
inc
loopne
xor
mov
pop
pop
cld
decl
xchg
iret
push
or
div
mov
cmp
fadds
xchg
aad
aad
jl
addr16
pop
pop
and
insl
adc
loop
insb
jae
call
xor
push
cmp
cli
ds
mov
mov
jmp
ljmp
stc
ja
xchg
xchg
and
xor
jae
int3
and
push
push
aad
xchg
mov
mov
pushl
std
inc
ret
xor
and
das
and
in
xchg
push
inc
cmpsl
or
pusha
fbstp
add
lcall
int3
nop
mov
push
data16
ds
out
xchg
in
fmul
andb
sahf
sub
inc
xor
add
inc
dec
cmpsb
icebp
sub
imul
pop
fisubs
into
in
das
aad
ljmp
dec
sbb
das
in
mov
mov
and
mov
ret
add
decl
and
addr16
inc
mov
scas
fbstp
pop
dec
ljmp
jmp
jmp
jle
jnp
fs
arpl
or
test
mov
mov
loopew
jno
lcall
popf
cmp
mov
mov
repz
into
mov
xchg
or
iret
cmp
icebp
out
adc
ljmp
mov
sbb
mov
cs
enter
sub
cltd
out
sahf
int
lock
lcall
repz
in
daa
or
ds
cmp
fisubrs
int3
jbe
mov
jo
ss
pop
inc
pop
inc
leave
dec
or
jmp
jb
push
push
hlt
mov
mov
inc
jp
lods
push
mov
mov
or
adc
push
loopne
dec
ja
incl
or
pop
inc
add
jecxz
les
ror
push
pop
xchg
push
lods
add
xor
mov
pop
xor
cmc
sahf
adc
decl
xchg
addb
jle
imul
das
popf
mov
out
mov
mov
ret
add
jle
sub
jae
push
sar
inc
sahf
gs
fwait
subl
add
cltd
test
cmp
or
fcomps
adc
pop
push
sbb
adc
push
cwtl
xor
dec
das
sub
push
or
fdivr
sub
pop
inc
repnz
jbe
mov
pop
lcall
std
lods
ret
nop
jns
jns
sub
sti
xchg
cltd
test
call
mov
insl
aam
mov
mov
xor
adcb
adc
mov
jg
ljmp
sbb
or
out
and
imul
sbb
cmp
jne
sbb
fwait
adc
lcall
ss
mov
adc
mov
js
aaa
pop
loope
push
push
jns
movsb
ljmp
xchg
call
fcmovnbe
pop
add
sub
psubd
jbe
xor
in
mov
mov
cmpsl
xchg
and
stos
dec
mov
dec
jl,pt
mov
and
addl
iret
scas
adc
or
incl
jne
cmp
icebp
or
push
sbb
mov
push
enter
jg
add
xor
fldenv
mov
mov
lods
ljmp
call
ds
das
xchg
cld
imul
xor
stc
nop
xchg
pop
jle
mov
stos
sub
lcall
or
cmp
ljmp
xchg
mov
jne
mov
lahf
xchg
pop
sti
testb
push
jle
mov
cltd
int3
sub
sbb
adc
loope
xchg
sub
pop
out
sbb
std
in
ljmp
mov
int
pop
ja
mov
movsl
sbbl
aaa
repnz
out
scas
pop
mov
ficoms
out
push
lods
inc
insl
rcrb
pusha
inc
incl
mov
xor
jnp
jg
repz
mov
cs
push
xchg
adc
incl
fstpl
mov
cmpsl
add
inc
push
push
idivb
pop
mov
inc
sub
jmp
mov
push
dec
rcll
je
gs
pmulhuw
das
cli
jmp
hlt
test
and
mov
sbb
rcrl
sti
lcall
rclb
xchg
sub
xchg
push
xchg
adc
xor
popa
cwtl
push
outsb
fwait
decl
sub
icebp
notb
dec
inc
inc
loop
stc
or
rol
les
pushl
add
jp
dec
fwait
dec
push
push
mulb
mov
movsb
es
ljmp
mov
ljmp
and
pop
inc
add
jmp
adc
mov
add
mov
fcmovu
testl
das
ficoml
scas
test
dec
lahf
and
dec
std
dec
dec
mov
adc
fisttps
mov
adc
xchg
test
clc
mov
lcall
adc
shlb
or
and
cmp
lcall
out
cmpsb
mov
movsb
movsl
and
je
ljmp
lret
divl
ja
jo
je
das
mov
jecxz
in
mov
mov
mov
add
int3
popa
test
and
mov
fdivr
jmp
lods
cmp
xchg
push
push
cmp
push
xor
lret
mov
popf
pop
jge
fdivrp
jmp
jge
xor
jecxz
jbe
aas
mov
ficoml
cmp
jg
push
jg
clc
call
out
loopne
sbb
cmp
repnz
adc
dec
adcl
stc
ficoms
imul
jb
aad
xchg
cmp
aaa
xchg
bound
shl
jmp
sti
dec
pop
push
pop
leave
js
lret
dec
adc
iret
xor
loope
imul
lcall
enter
in
outsl
stc
jae
stc
cmc
cmp
fcoms
cmpsb
testb
xchg
testl
add
push
mov
cmp
push
push
cmp
in
pop
inc
inc
sbb
cmp
fdivrp
data16
incl
inc
out
xchg
jns
ret
mov
xchg
mov
imul
push
mov
mov
sub
arpl
inc
ss
lret
cmp
lahf
jle
dec
outsl
pop
hlt
idivb
incl
inc
adc
cmpsb
push
pop
daa
dec
push
adc
call
push
dec
inc
add
jmp
stc
mov
mov
xor
sbb
imul
roll
imul
lahf
pop
inc
adc
incl
add
mov
dec
jge
adc
mov
aad
fdivs
pop
clc
mov
inc
pop
adc
inc
push
sti
bnd
adc
cmp
jnp
push
sahf
inc
pushf
jno
stc
mov
call
cli
hlt
adc
dec
lock
fstl
or
inc
dec
mov
jge
ss
jmp
in
out
mov
inc
jg
push
inc
lcall
inc
pop
xchg
cmp
je
fcoms
dec
push
push
xor
pop
or
daa
push
sbb
mov
mov
xor
mov
ljmp
pushl
mov
push
sub
out
or
cmp
push
enter
in
pop
ds
call
cs
inc
cmpsb
imull
mov
into
mov
inc
pusha
std
xchg
mov
mov
dec
scas
nop
lcall
jno
out
inc
daa
sbb
mov
test
pop
inc
test
sbb
bound
cmp
imulb
lods
push
inc
xchg
xchg
das
mov
in
mov
decl
lret
adc
ret
push
out
repz
stc
mov
popf
imul
xor
mov
pushl
inc
aad
sub
mov
mov
fmuls
incl
sbb
adc
xchg
in
roll
fcoml
pusha
inc
stos
xor
decl
outsl
cmp
xor
int3
pop
dec
hlt
testl
loopne
sbb
push
mov
push
scas
jge
sbb
cmp
cmp
or
xchg
xchg
or
dec
cli
ljmp
aad
int
cs
outsb
cmp
and
ss
adc
repz
ljmp
xchg
inc
popf
xor
mov
push
inc
in
icebp
mov
shlb
lcall
pushf
add
push
mov
test
test
xchg
xor
push
rcr
push
xor
clc
out
lods
cmpsl
pushf
inc
dec
mov
negb
jb
out
mov
push
adc
gs
pop
imul
jmp
aas
xchg
sub
mov
clc
xchg
pop
sbb
jp
pushf
mov
jae
pop
fisubrs
jl
pushl
das
mov
mov
inc
sbb
clc
mov
and
pushl
mov
and
push
xor
call
leave
sar
fisttpll
jg
std
xor
sbb
adc
test
mov
lods
out
sbb
decl
jp
scas
or
push
cmp
lret
ljmp
jecxz
jg
ljmp
mov
dec
inc
cld
push
or
fwait
je
jmp
mov
lret
xchg
test
push
adc
push
inc
punpcklbw
push
pop
lret
cmp
ret
dec
call
jne
ret
fs
repnz
aam
mov
or
mov
adc
dec
rolb
sbb
and
dec
test
in
test
inc
sub
mov
js
fistl
daa
inc
icebp
bound
ljmp
out
aaa
xor
scas
sbb
push
mov
outsb
add
cmp
or
iret
or
std
add
cmp
sti
cld
mov
jle
scas
nopl
jbe
lcall
dec
ret
lcall
int
push
sti
fucomip
cmp
xchg
jmp
dec
and
cmp
cmp
dec
scas
jl
movsb
adc
clc
sbb
sbb
mov
mov
dec
shll
cmp
and
mov
cld
mov
pop
jle
jmp
movsl
repz
incl
jbe
test
cltd
xchg
shrl
call
inc
xor
mov
add
fildll
mov
out
lret
xchg
mov
inc
movsb
test
mov
arpl
fimull
arpl
sti
hlt
enter
pop
sti
lds
jge
ret
ret
decl
cmc
fwait
mov
mov
movl
add
jl
sbb
add
lahf
mov
ljmp
pop
and
pop
lock
dec
sbb
stos
js
outsl
sbb
out
mov
sub
push
push
shrb
sti
sub
bound
int3
pusha
or
inc
mov
stos
or
mov
xchg
out
lods
aaa
mov
pop
icebp
dec
repnz
pop
or
fldz
jns
cmp
add
ficomps
and
pop
pop
outsb
lods
rorb
fwait
std
fucomp
sbb
inc
inc
aad
roll
mov
fldl
pop
cvtpi2ps
inc
jbe
lcall
add
lcall
ljmp
insb
adc
rcrb
inc
mov
bnd
int
and
mov
add
pushl
push
and
pop
inc
jecxz
pop
sub
insl
lea
xchg
and
adc
mov
push
push
pop
cld
cs
cld
addr16
lods
xchg
lcall
inc
stos
test
adc
push
pop
mov
cmp
clc
mov
pop
ljmp
mov
and
xchg
adc
stos
cld
imul
gs
pushl
sub
pop
fmuls
push
dec
add
out
add
mov
mov
push
xchg
fildl
jg
loop
call
bound
add
mov
leave
repnz
ljmp
cmp
data16
push
push
push
jae
icebp
repnz
decl
or
jecxz
mov
pop
loopne
movsb
cld
fisubl
ds
dec
repz
in
outsb
cmpsb
xchg
sbb
cmp
insb
imul
push
pop
ficomps
mov
fucomp
jge
jmp
mov
arpl
add
bound
scas
sti
xchg
pop
leave
cmp
aaa
pop
adc
popa
sbb
incl
fbld
daa
imul
lret
pushf
push
xchg
xchg
in
outsl
scas
les
in
sbb
pop
and
hlt
lock
gs
sbb
mov
outsl
mov
mov
mov
pop
je
sub
mov
loope
popa
out
ret
and
or
sub
sub
jo
ljmp
and
in
pop
bound
push
fisttps
shlb
psadbw
shl
adc
lcall
in
jmp
flds
xchg
call
lock
mov
fsubrl
adc
adc
jmp
xchg
inc
bound
mov
imull
sbb
mov
loop
cltd
xor
adc
aas
lret
bound
dec
push
jb
es
xchg
lcall
pop
shll
incl
or
pop
sbb
pusha
in
cmp
sub
xchg
mov
mov
call
cld
aas
xor
into
in
cmp
mov
inc
ds
ss
xor
ud0
push
dec
pop
push
or
mov
movsb
lods
push
or
push
call
stc
gs
int3
call
push
mov
xchg
or
push
cmp
pop
sbb
jbe
loope
enter
pop
fdivrp
lcall
adc
cmp
dec
pop
jne
fsts
xor
push
sub
ljmp
inc
lret
cmpsb
mov
dec
lcall
dec
or
negl
sub
ret
ret
lea
pop
out
cmp
cmc
popa
push
js
push
das
mov
cmp
ljmp
divb
xchg
sbb
dec
ret
xchg
hlt
push
not
ds
clc
lcall
popa
jns
cmpxchg
mov
insb
lahf
add
fisubl
addr16
cwtl
push
sub
incl
and
push
test
mov
out
inc
xchg
cmp
in
mov
xor
call
inc
and
push
leave
fbstp
lret
push
inc
pop
mov
out
and
sbb
mov
or
cmp
mov
adc
xor
inc
lds
test
dec
ss
inc
mov
xor
scas
incl
jne
sbb
jp
or
ret
xchg
repz
inc
inc
xor
cmp
xchg
mov
mov
sub
call
leave
icebp
lods
int
mov
popf
incb
adc
cs
pop
scas
jns
jns
mov
sub
pop
lcall
mov
out
daa
and
imul
outsb
pop
and
pusha
dec
aas
or
daa
cwtl
aas
xchg
push
pop
and
lds
dec
cwtl
add
dec
sub
decl
testl
mov
sahf
pop
jle
adc
push
decl
lock
addr16
jb
add
pop
pop
in
mov
int3
mov
add
ljmp
ds
jg
cmp
or
pop
idiv
shl
mov
call
imulb
imul
incl
inc
pop
pop
add
fucomi
mov
int
loop
or
leave
mov
mov
es
cmp
fbstp
xchg
pop
movsb
into
xchg
pop
mov
xchg
outsb
mov
adcb
sbb
inc
adc
inc
das
pusha
sub
pop
add
insb
jne
outsb
mov
lret
adc
mov
int
icebp
mov
jg
inc
jle
test
scas
jge
mov
lcall
into
repnz
fnstenv
mov
arpl
adc
pop
xchg
outsl
jbe
pop
sarl
jle
inc
mov
and
ss
adc
lods
and
inc
test
ficoml
mov
or
sub
out
pop
arpl
shlb
cmp
ds
out
xchg
ret
insl
adc
jmp
sbb
fstpl
stos
sti
sbb
pop
movsb
and
aas
inc
insl
rorl
xchg
jmp
or
std
int3
repz
in
cmp
lahf
dec
dec
pop
aas
inc
push
out
bound
add
mov
xor
clc
hlt
inc
push
inc
xor
jmp
jb
shl
enter
les
cmp
stc
int3
or
and
in
pop
and
mov
lret
sbb
cmp
pushl
cltd
add
sahf
add
xor
mov
decb
loopne
add
in
xchg
stos
iret
fidivs
in
jp
jecxz
ljmp
push
dec
sbb
sar
inc
add
mov
popa
add
ljmp
mov
aad
push
inc
out
dec
daa
xor
dec
aaa
mov
ret
bound
ljmp
lret
inc
sub
fsubl
mov
icebp
out
cmp
xor
lea
std
jl
xchg
das
pushl
mov
sub
jns
or
gs
das
aam
loope
jl
call
rclb
jecxz
cmp
pop
gs
and
sub
ja
call
jne
sub
dec
dec
ja
clc
mov
frstor
and
mov
decl
pop
xchg
sub
add
lods
cmp
mov
xor
dec
mull
xchg
jmp
add
cwtl
sbb
push
jge
std
mov
add
and
jmp
nop
insb
xchg
xor
push
sub
mov
cmpsb
mov
cwtl
stc
sbb
les
es
push
fisubrs
jmp
jp
out
ret
aas
jmp
call
xchg
data16
jge
call
or
push
inc
adc
mov
push
mov
iret
jp
ret
mov
mov
xor
popf
jmp
cld
dec
lods
mov
xchg
in
das
fiadds
faddl
fstl
cltd
int3
sub
cltd
cld
adc
test
fstl
pop
push
mov
pop
xlat
into
dec
pop
adc
jmp
add
popw
add
mov
lcall
clc
adc
mov
cmc
jnp
fildl
xor
pusha
pop
jmp
and
dec
ja
loop
or
mov
jg
jl
mov
xor
ljmp
aam
orb
mov
mov
jl
out
xchg
cmp
pop
in
inc
xchg
dec
inc
rclb
cmp
cmp
mov
leave
xor
fists
cmp
cmp
jecxz
push
notb
popf
sbb
push
cwtl
mov
sbb
ja
mov
cwtl
sbb
rcrl
adc
cltd
jg
pushl
test
rolb
add
test
mov
ret
aas
cmc
decl
ret
lret
scas
jnp
loop
stos
mov
aam
and
cmpsl
lcall
and
sbb
mov
out
or
mov
sbb
push
jp
out
lods
mov
incl
pop
or
add
dec
add
cmpsl
sbb
cmc
push
pop
daa
outsl
shl
push
imulb
or
test
sarb
push
repnz
add
jnp
lods
out
divl
call
jno
sbb
xchg
pushf
adc
jecxz
dec
repnz
incl
testb
in
or
jl
add
cmp
xchg
imul
jbe
mov
sbb
fdivrs
sub
shl
cmpsl
insb
int
sub
mov
or
cmpsl
out
adc
mov
imul
jo
xchg
cmpsb
sahf
inc
or
in
jl
in
dec
jl
push
ljmp
inc
sti
dec
jbe
rolb
cmp
add
inc
xlat
pop
sub
push
sbb
lcall
lock
push
xorb
xchg
fists
std
cmp
aaa
mov
xor
lods
and
and
loopne
aam
xorb
inc
rclb
ss
loopne
push
imul
mov
mov
loopne
cmp
cmc
daa
xchg
pop
xchg
stos
jb
pop
inc
call
and
mov
lods
push
xor
call
adc
int
je
ljmp
jmp
pusha
jns
mov
fwait
cmc
sub
mov
and
dec
jnp
mov
decl
js
mov
xchg
cmpsb
mov
push
inc
call
cmpsl
fisubrs
cli
loop
xor
fwait
call
cmp
xchg
mov
and
push
xchg
rcrb
xchg
push
cwtl
jl
inc
cmpsb
clc
inc
mov
mov
aad
mov
lret
or
sbb
cmp
mov
outsb
jmp
mov
enter
cltd
mov
call
xor
out
xchg
in
or
cmp
push
or
hlt
sarl
outsl
or
std
incl
outsb
add
test
xor
mov
sub
out
icebp
mov
roll
popa
outsb
js
mov
leave
and
ret
inc
dec
mov
sub
adc
sbb
out
decl
mov
mov
dec
aam
jecxz
jae
mov
imul
fdivrl
lahf
dec
jmp
xchg
mov
stc
aam
inc
cli
sub
inc
cmp
call
pop
jne
sahf
inc
jl
sub
mov
rorl
mov
mov
fistps
rolb
and
push
xor
stos
mov
inc
das
cmp
push
bnd
mov
sub
into
sub
in
mov
fnsetpm(287
int
and
movsl
mov
mov
mov
movsl
loopne
scas
add
or
sahf
popf
jae
decl
xchg
mov
jmp
pop
popf
sub
add
adc
lcall
adc
ljmp
clc
jmp
push
call
ljmp
xchg
not
xchg
or
xchg
call
aaa
mov
rcrl
arpl
sub
lcall
inc
pushl
sbb
out
pop
xchg
cmc
jp
movsb
add
out
repz
push
sub
mov
mov
arpl
sbb
mov
and
jg
mov
or
bndstx
mov
adc
test
ja
ss
ljmp
imul
jecxz
push
outsb
fwait
xchg
or
xor
mov
jmp
out
ficomps
pop
cmp
dec
fld1
add
cmp
cli
and
mov
pop
jmp
clc
inc
pop
mov
add
ds
aam
std
cmp
push
les
lcall
push
xor
dec
test
cld
data16
lret
rcll
call
out
xor
xchg
scas
repz
dec
rcrb
and
fisttps
aas
adc
cmp
push
outsb
mov
fcompl
bound
daa
mov
pop
std
fdivp
mov
mov
dec
fucomi
and
test
sbb
push
push
lods
or
jns
cmp
cmp
push
mov
mov
imul
mov
ljmp
icebp
incl
scas
dec
outsl
mov
mov
nop
lcall
test
jg
jbe
mov
in
inc
mov
outsl
mov
loope
sbb
push
shll
call
popf
addr16
and
arpl
sarl
pop
dec
jp
sbb
sub
jnp
lods
out
xor
test
xchg
mov
dec
rcll
ljmp
lods
pop
out
sub
sub
dec
sbb
xchg
dec
add
xor
dec
imul
hlt
incl
aas
inc
mov
std
push
hlt
cmpsl
adc
frndint
movsb
aaa
cltd
cli
fisttps
ljmp
call
into
in
test
sub
imul
fs
add
mov
jmp
insl
pop
js
out
movsl
pop
jge
add
lods
fisubs
mov
imul
decl
fidivl
adc
ror
cld
and
add
sub
mov
jecxz
jmp
cwtl
ret
mov
adc
cmpsb
pop
inc
sub
mov
inc
xchg
jp
stos
cmpsb
ljmp
add
xor
mov
dec
xor
pop
push
inc
push
dec
fcoms
or
lcall
in
data16
pop
pop
inc
push
xor
out
xor
mov
mov
pop
fisttps
insb
loopne
mov
cmpsl
pop
jnp
icebp
mov
insl
pop
call
inc
out
aad
xor
and
sahf
mov
mov
pop
push
js
out
cltd
add
lcall
dec
mov
mov
push
mov
daa
mov
push
inc
and
pop
test
jmp
sub
cmp
sub
xor
stc
loope
jp
jg
lret
mov
pop
add
mov
lcall
inc
sbb
icebp
mov
push
call
sub
xchg
mov
push
test
loopne
sub
cmc
jne
in
mov
pop
fstps
push
filds
loop
cld
jmp
inc
mov
cmp
mov
adc
ljmp
lcall
sub
sbb
leave
mov
mov
mov
orb
pushl
lods
dec
or
pop
push
pop
xchg
cmpsb
mov
ds
test
push
mov
aad
testb
mov
fcoms
std
jg
sub
sbb
dec
xchg
pop
jle
iret
fstpl
or
filds
add
aam
int
xor
pop
fucomi
cli
fcomip
cmpsb
mov
fistps
shl
sbbb
incl
mov
ja
int
popf
test
out
aam
shl
sbb
aaa
sbb
jnp
nop
aas
or
add
std
mov
lcall
push
push
stos
test
push
into
lcall
cmp
jge
mov
dec
mov
mov
and
push
mov
in
mov
pushf
mov
push
repnz
lcall
pusha
movb
int
les
mov
je
insb
dec
sub
cmp
xchg
insb
sub
daa
daa
mov
mov
lods
movsb
int3
fisttpll
cmp
sar
mov
or
fistl
fnsave
sub
loopne
scas
mov
mov
jns
ret
cmp
insl
mov
call
jne
cmpb
mov
mov
fdivl
ljmp
outsl
xor
decl
rclb
sub
insl
std
and
xchg
repz
pop
fcoml
test
shlb
decl
and
fadds
sub
stc
mov
in
in
out
jne
loopne
imul
fistpll
push
scas
shl
jns
repz
cmp
add
push
scas
add
idivl
lcall
in
addr16
mov
cld
test
ljmp
push
push
push
gs
sbb
add
idiv
call
cmp
adc
jle
lock
not
mov
pop
jne
pusha
mov
fcom
sbb
mov
int3
inc
cltd
and
test
dec
jb
dec
out
std
dec
inc
mov
lret
std
shll
jmp
mov
pop
clc
and
ljmp
inc
mov
fs
das
inc
push
call
adc
dec
pop
inc
pop
jne
inc
jbe
xchg
xchg
test
adc
das
sbb
popf
xor
in
test
pop
mov
lods
adc
addr16
scas
insb
add
bound
and
call
ljmp
jmp
sub
ret
and
dec
and
in
stos
jne
mov
mov
call
inc
out
cmp
mov
stc
adc
and
addr16
jno
call
push
sbb
mov
repz
clc
lcall
jmp
ja
mov
jmp
inc
push
lock
jo
jmp
fbstp
xor
mov
fldt
push
push
in
clc
enter
inc
leave
pop
push
sbb
pop
add
out
push
xchg
mov
out
jle
je
rolb
push
jmp
enter
hlt
stc
pusha
out
outsl
clc
call
sbb
cli
xchg
les
mov
test
push
out
das
cmp
decl
pop
adc
cli
addl
push
lock
add
repnz
mov
dec
push
lods
mov
in
add
out
in
rolb
sti
out
icebp
punpckldq
and
mov
jmp
inc
cmpsb
popa
dec
leave
pusha
mov
fwait
push
cmp
jns
mov
lods
xorl
mov
add
jg
clc
mov
and
add
dec
movsl
push
jl
sub
push
loopne
add
iret
mov
inc
adc
andl
add
gs
roll
pop
ret
lahf
adc
jb
pop
mov
incl
adc
inc
sub
mov
ja
xor
loope
mov
inc
push
push
or
fbstp
pop
call
xchg
sbb
inc
xchg
ret
lea
sbb
pushf
inc
fldln2
fmuls
test
add
call
cmp
lret
adcl
or
jg
inc
outsb
sub
out
add
ljmp
jbe
mov
cli
scas
adc
push
ret
shlb
dec
xlat
cmp
jg
arpl
mov
dec
dec
lcall
and
imul
jl
ja
lret
rcll
sbb
incl
xor
add
xchg
push
daa
lret
pop
add
andb
loopne
and
jbe
aaa
cld
push
sub
lcall
in
xor
sbb
jne
jmp
fcomip
pushl
jge
sub
jae
adcl
je
call
repnz
xor
decl
sub
pusha
out
mov
popf
mull
cs
fldt
lcall
xchg
dec
sbbl
mov
jb
or
mov
fstp
insl
jecxz
shlb
cltd
in
mov
fs
adc
pushl
inc
mov
ja
arpl
movsb
ja
sbb
cmp
in
orl
addb
incl
sub
lahf
fs
je
aaa
add
dec
inc
push
pop
das
es
adc
in
mov
push
jmp
mov
pop
cld
jp
aad
mov
test
sub
jmp
push
mov
jg
dec
jno
sahf
sbb
gs
stc
push
push
xor
call
or
arpl
mov
outsl
add
dec
scas
xchg
mov
repz
shll
mov
push
push
add
adc
jg
fldt
rolb
rcll
pop
mov
lea
decl
decb
jg
xlat
or
jle
add
sbb
xor
test
push
mov
call
rcrb
pop
mov
push
push
hlt
xchg
mov
mov
ret
hlt
call
inc
jp
jo
push
popf
sbb
outsb
mov
xor
fidivrl
jg
decl
fsubs
fsubrl
std
mov
dec
inc
aaa
cwtd
pop
xchg
test
mov
inc
jl
lret
add
xchg
jns
iret
in
js
jle
push
cmc
push
test
sbb
lock
pop
lock
testb
pop
decl
out
out
ljmp
cmp
call
lret
mov
mov
scas
sub
js
or
inc
mov
out
sbb
ja
es
pop
outsb
movsl
enter
mov
mov
lds
sub
adc
adcl
cld
sub
leave
sbb
jg
cmp
and
sub
sbb
imul
incl
mov
or
push
ja
fsubs
mov
into
adc
pop
jbe
jns
jmp
outsb
ret
fcomip
jmp
mov
rcrb
mov
ficompl
ret
xchg
add
fwait
and
mov
xor
xchg
cmc
notl
movsb
jno
and
or
adc
das
pop
lcall
fiadds
outsb
xor
xchg
sub
std
push
aam
cmp
jg
xchg
daa
ss
loopne
jmp
adc
xchg
jbe
test
iret
push
sbb
sbbl
stc
inc
sub
ror
mov
loope
jnp
mov
scas
jp
xor
enter
fistl
cmp
call
mov
icebp
jl
ds
jo
cmp
pop
xchg
dec
or
fildl
xlat
fldt
inc
fdivl
lds
and
xor
sub
mov
jmp
jge
movsl
add
or
fcoms
xchg
fbstp
std
xchg
add
xor
xor
incl
arpl
inc
roll
jbe
or
fs
cld
or
jae
stos
cmp
fisttpll
or
or
sbb
aaa
inc
inc
loopne
dec
xor
add
jb
jecxz
jnp
mov
fnstenv
and
push
loopw
jg
inc
mov
cmp
jb
insb
mov
repz
addr16
aad
bound
jmp
push
insl
adc
inc
pop
inc
call
in
andl
and
jmp
jg
pop
and
lock
lods
fstpl
lock
and
and
cmp
ljmp
fldenv
lahf
mov
loopne
loop
jecxz
or
cmp
adc
andb
out
mov
add
adc
sub
adc
inc
jp
cltd
sahf
sub
cli
pop
pop
sub
out
xor
xlat
pop
inc
xchg
add
push
iret
cmp
lea
jg
in
lret
out
xor
fscale
xchg
ja
adc
inc
call
arpl
call
push
inc
fcompp
mov
xchg
rcll
pop
shrl
jo
or
push
cwtl
fwait
inc
mov
jno
cld
adc
je
lcall
pop
imul
cmpsb
mov
xchg
add
dec
ljmp
ljmp
push
push
repz
jbe
out
add
and
mov
inc
fucomip
mov
popf
imul
jmp
pop
push
cli
pushl
loop
loopne
add
rorb
mov
out
xor
mov
pop
out
xchg
out
out
aas
aam
xor
dec
dec
fmulp
pop
and
fsub
nop
cltd
inc
arpl
pop
std
inc
mov
xchg
test
ds
sub
rcr
sbb
fmul
es
cld
mov
les
nop
pop
mov
insl
lgs
adc
andb
xor
lcall
adc
aad
pop
sbb
fidivs
lahf
andb
jb
mov
pop
out
daa
lock
pushl
mov
int
dec
sbb
xchg
sub
call
dec
push
jg
mov
push
mov
or
orl
cmp
inc
outsb
js
xchg
and
int3
jb
sbb
mov
fcoml
aaa
ret
push
mov
mov
push
popa
test
xchg
xlat
popf
ja
insl
sbbb
pushl
movsb
cwtl
fldcw
jb
cmpsb
xchg
jl
enter
and
dec
sti
mov
in
adc
mov
jle
jnp
hlt
lods
and
lcall
in
cmp
jp
jns
out
outsl
push
inc
mov
pop
pop
mov
jl
mov
enter
mov
adc
ljmp
mov
jno
lods
push
fsubl
or
sbb
pop
orb
fbld
jmp
out
lcall
loopne
push
xor
movswl
pop
fdivrp
icebp
or
add
or
add
jmp
push
adc
lahf
ljmp
cld
mov
cmp
ljmp
rclb
cs
in
mov
cmp
xchg
push
lret
das
cli
ljmp
inc
and
stc
xchg
or
out
dec
push
jae
xchg
cmp
jmp
cmc
test
sbb
fcompl
ds
xchg
out
in
sbb
add
mov
cmp
sar
lods
mov
jl
jne
xchg
stos
aad
inc
rcrb
dec
sub
jne
ret
into
xor
insb
mov
insl
and
adc
lahf
push
xor
sub
in
sbb
inc
inc
cmpsl
and
adcb
jg
sub
out
je
push
je
jmp
in
frstor
les
and
incl
das
xchg
pusha
mov
cli
xchg
test
test
stc
pop
mov
scas
pop
jmp
xor
in
out
aad
cmpsl
scas
xor
jns
sahf
mulb
jge
mov
test
xorl
sahf
mov
das
iret
sbb
dec
xchg
push
mov
lock
sub
mov
je
pop
insl
jmp
xchg
fdivl
push
mov
in
ds
fs
fwait
sbb
add
lods
aad
cmc
xchg
xchg
and
mov
stc
call
dec
or
xor
fwait
scas
jge
cmp
test
add
fcoms
out
jecxz
std
mov
dec
sbb
push
test
lret
popf
add
fcomip
lcall
push
test
cmp
in
push
test
adc
ret
ret
pusha
std
incl
mov
inc
fstl
mov
ss
mov
es
imul
inc
cli
aam
mov
jecxz
xlat
cmp
inc
popf
dec
jae
cmp
push
add
mov
jp
bound
ljmp
adc
adc
ljmp
mov
push
lcall
ret
decl
rcrb
sbb
inc
call
sub
cld
call
xor
shlb
lea
andb
pop
pop
push
dec
out
dec
pop
aas
ljmp
stos
inc
stos
sub
mov
jne
iret
jmp
pop
fidivrs
cld
sbb
fadds
lcall
mov
inc
les
xchg
mov
or
mov
ljmp
lret
mov
push
cltd
cmp
mov
test
out
out
cmpsb
cbtw
mov
lcall
movsb
es
lcall
cltd
and
sbb
testl
addl
push
jmp
or
je
es
mov
mov
cmpsb
jns
addl
loope
pusha
pop
loopne
out
clc
mul
sub
jbe
jb
jecxz
mov
xor
add
pusha
push
push
and
sbb
mov
push
ja
sbb
incl
mov
ficompl
mov
lret
jmp
xchg
gs
push
xchg
into
les
mov
mov
leave
pop
call
ljmp
mov
xchg
les
jb
in
jbe
outsl
lock
jmp
cmp
mov
push
pushf
pop
stc
cli
and
sub
js
cmpsl
xchg
jg
incl
imul
sbb
sbb
clc
xchg
sbb
pushl
addr16
push
adc
add
leave
and
dec
mov
or
mov
shrl
inc
cmp
mov
or
push
mov
dec
je
mov
loop
push
mov
movsb
pushf
movsb
les
movsl
push
aas
cmp
push
push
shlb
call
jo
cli
lret
sbb
mov
pop
mov
movl
sar
lcall
adc
shlb
int
mov
or
jmp
cmp
dec
mov
dec
cmp
sbb
scas
daa
mov
nop
bnd
cs
std
iret
ja
cmp
loope
decl
into
lods
mov
aad
xor
push
pop
mov
jns
inc
shr
mov
test
mov
xchg
ljmp
cs
aam
adc
jmp
insb
jle
sbb
lcall
gs
hlt
push
mov
in
adc
incl
mov
scas
add
pop
ss
sbb
loopne
popf
fisubrs
inc
mov
push
inc
pop
push
fldl
dec
mov
fwait
test
inc
sub
into
cwtl
ljmp
jmp
push
in
test
xchg
popa
jmp
out
inc
sbb
push
mov
sti
cli
cmp
ljmp
nop
sahf
arpl
add
sub
push
cmp
ljmp
xor
mov
pop
fs
pop
push
cmp
mov
sbb
pushl
sub
mov
add
stos
pop
mov
cli
test
mov
lret
fwait
jmp
aam
mov
xchg
push
addr16
out
push
jg
leave
adc
andb
inc
cmp
push
or
ss
pop
adc
pop
jg
xchg
inc
xchg
dec
or
repz
sub
cmpsl
mov
dec
push
ds
mov
and
movsl
jbe
pushl
pusha
daa
aas
fnstsw
inc
mov
mov
pop
mov
or
push
pop
push
pushl
rorb
mov
outsl
mov
mov
and
call
sbb
sub
xchg
xlat
pop
das
out
adc
dec
push
push
in
scas
sub
imull
imul
xor
xchg
jnp
popa
cmp
movsl
push
mov
divb
add
into
jmp
daa
xchg
cmp
sti
repz
fdivrs
add
cmp
fldcw
jge
xor
inc
loop
add
xor
inc
pop
xor
inc
inc
imul
push
sub
enter
lcall
in
pop
jmp
out
mov
movsb
ljmp
lods
jne
stc
int
movb
jo
dec
icebp
sub
mov
shll
ja
std
clc
mov
sbb
mov
es
dec
xchg
mov
fbstp
test
inc
pop
fxch
addb
in
arpl
inc
je
adc
lcall
adc
sbb
leave
cmpsl
sub
jl
push
or
out
testl
mov
clc
pop
dec
jmp
push
pop
jecxz
jmp
sbbl
push
mov
cmpsl
imul
addl
cmp
jle
cmpsb
add
push
int
push
andb
or
cwtl
test
call
or
mov
xchg
lcall
or
pop
repnz
repz
insb
in
or
imul
sar
jmp
fiadds
fistpl
jno
je
out
test
fdiv
mov
std
insb
and
adc
imul
ljmp
pop
pop
shll
leave
fsubp
sarb
pop
mov
sub
dec
jg
pop
xor
or
inc
mov
push
add
ljmp
sub
pushl
sub
xchg
subb
add
dec
or
rcrb
jmp
xor
lods
xor
incl
adc
pop
rol
inc
hlt
std
imul
xchg
xor
std
mov
es
call
xor
jbe
clc
fcmovnb
inc
push
sbb
adc
mov
jnp
fistl
mov
sub
ret
ficomps
jg
ror
push
or
xchg
xchg
les
or
mov
and
ss
jmp
jne
aas
inc
mov
arpl
or
mov
fstpl
mov
in
jl
popa
cmp
subb
stos
ljmp
adc
add
incl
inc
movsl
inc
cmp
cmc
or
testb
in
imul
jmp
rcl
imull
mov
sarl
leave
push
and
sbb
loopne
pushl
mov
ret
or
jl
mov
cs
mov
push
shl
sbbb
in
push
cmp
inc
lcall
dec
jmp
xor
ret
clc
push
jae
mov
popf
jecxz
test
es
dec
insl
movsl
and
jmp
mov
xor
jmp
push
negb
inc
inc
add
in
add
mov
lock
clc
decl
mov
es
and
pushl
ljmp
xchg
fisubs
sahf
loope
pop
sbb
cltd
call
das
ljmp
mov
roll
push
cli
push
and
aas
mov
dec
mov
out
enter
fsubrp
aam
sub
lds
dec
loopne
pop
incl
jb
bound
push
ficompl
pop
mov
mov
fcomip
pushl
mov
andl
sub
jecxz
pop
adc
lcall
and
popaw
mov
xchg
mov
js
cld
fsubrs
ficoml
loopne
ds
or
mov
mov
rcl
lret
mov
cmp
cmpsb
mov
incl
loope
data16
push
std
mov
or
mov
ja
in
xchg
dec
out
out
jmp
sub
push
stc
mov
jg
ljmp
repnz
mov
ss
shrl
inc
dec
lock
fwait
pop
out
push
pop
out
mov
ja
push
mov
ja
ljmp
cmc
daa
jecxz
fldlg2
mov
cmp
and
jl
inc
pop
mov
adc
js
xlat
or
cmp
ret
cwtl
add
jp
mov
mov
sbb
dec
cmp
push
int3
mulb
push
pop
addr16
repnz
lcall
jne
inc
add
inc
sarb
stos
lods
adc
pop
in
sahf
mov
push
jmp
call
mov
test
jp
push
insb
dec
dec
sbb
inc
sahf
inc
lahf
adc
call
jecxz
sbbl
and
arpl
pop
shll
popf
or
ret
insb
cwtl
lcall
ja
sahf
shl
mov
bound
inc
lcall
xchg
jmp
call
in
add
andb
pop
push
into
test
dec
xchg
jmp
mov
imul
push
add
lds
cmp
mov
and
cld
pushl
test
in
jmp
mov
adc
sbb
inc
add
fisubrl
xchg
dec
daa
mov
mov
cld
push
addb
sbb
sub
mov
lcall
lcall
cmp
leave
and
cmpsl
data16
lcall
jp
xchg
mov
decl
jl
inc
test
outsb
jle
pop
sbb
xor
in
ljmp
cli
push
sbb
test
pop
cmc
cli
fldenv
in
call
insl
xchg
fdivl
mov
dec
xchg
and
jp
ljmp
xor
jmp
add
fnstsw
sbb
and
lret
pushf
ljmp
jb
js
insl
xlat
mov
cmp
popf
mov
push
or
lahf
push
xchg
lcall
or
test
aam
cltd
clc
jb
scas
call
pop
mov
mov
test
sbb
mov
fadds
push
inc
orl
jb
call
addl
cli
fcomi
in
cmpl
jno
fstp
out
mov
jb
xchg
les
cmp
xchg
mov
or
mov
scas
mov
in
dec
dec
movsb
or
ret
xchg
mov
sbb
push
mov
notl
mov
pslld
leave
je
mov
cmpb
cmpsl
pushl
lods
into
insb
xor
mov
xchg
push
xor
popf
lods
or
mov
imul
mov
dec
lods
sbb
or
mov
decl
jnp
xorb
jle
or
and
loop
enter
test
or
addr16
push
mov
add
mov
sbb
fisubrl
mov
push
hlt
lea
jne
mov
ret
std
mov
sub
sub
call
push
inc
clc
pop
push
rcrl
xchg
inc
jae
stc
sbb
add
jl
jb
sub
dec
and
push
mov
jbe
aam
jp
ljmp
test
lcall
push
ret
mov
leave
mov
ficoml
cld
icebp
or
jmp
jno
mov
sub
dec
stc
jns
cmp
das
xor
test
and
push
push
xorb
addr16
nop
cmc
stos
inc
jo
lcall
dec
shrb
sbbb
jns
adc
fistpll
xor
imul
xor
adc
push
ljmp
and
and
jo
lcall
shlb
inc
push
inc
fdivp
lcall
or
mov
andl
add
xchg
mov
cmp
out
or
jae
stos
jne
sbb
jmp
cs
stc
stc
lods
and
jne
push
push
and
lcall
leave
mov
loopne
mul
xchg
sbb
mov
or
in
jecxz
mov
jmp
incl
aad
fstpt
popa
jecxz
cltd
ret
adc
mov
int3
lret
test
movsl
mov
mov
push
notl
out
outsl
incl
pop
mov
int3
cli
mov
mov
push
hlt
imul
ljmp
sbb
iret
in
mov
xchg
cld
add
pusha
add
mov
xor
dec
roll
xchg
adcb
outsb
es
jp
in
aaa
mov
sbb
xchg
incl
mov
pop
dec
out
mov
ja
fisubrl
aam
loopne
dec
ds
incl
dec
adc
xor
lcall
sahf
xchg
xlat
dec
mov
cmpsl
pushl
sbb
dec
xchg
stc
mov
sbbb
jnp
inc
pop
outsb
ja
in
xchg
xchg
adc
push
dec
repnz
mov
les
adc
mov
cmpb
mov
xchg
xchg
sub
imul
push
or
xor
pushl
outsl
dec
pop
push
mov
scas
mov
inc
call
xorl
scas
js
jg
pop
lock
mov
mov
js
icebp
mov
ja
dec
or
lret
mov
dec
mov
add
adc
call
or
movsl
bound
add
lcall
jns
decl
inc
push
insl
test
ret
and
subl
div
mov
mov
test
inc
jmp
inc
testl
or
into
adc
out
and
pop
rcr
fs
subl
cwtl
push
rorb
jnp
sti
cs
fs
decl
in
jns
rcr
out
icebp
fisttpll
in
sbb
hlt
fs
inc
cld
sbb
xor
out
xor
fucom
jp
sarb
pop
xchg
mov
mov
dec
movb
sbb
jmp
enter
mov
cmp
push
add
int
mov
adc
add
jmp
dec
stos
push
pop
cmpsb
out
jnp
out
arpl
punpckhdq
cmp
cmc
xor
pop
sbb
add
push
fimull
lods
cs
std
add
repnz
lds
inc
pushl
cld
call
addr16
outsb
adc
xlat
scas
stc
adc
jo
jbe
and
jl
fcos
inc
jmp
sub
mov
xchg
sub
enter
les
inc
ja
ljmp
push
fcompl
pop
cmp
add
pushf
push
sar
stos
mov
pushl
jns
push
mov
addr16
gs
xchg
mov
ret
jbe
inc
lret
pop
sbb
jns
lcall
ret
call
pop
imul
cmp
jb
inc
outsb
hlt
sub
iret
lret
xchg
jmp
add
outsb
xor
adc
jle
inc
fisubrs
adc
outsb
inc
leave
sti
mov
mov
call
scas
shrl
gs
cmp
or
int
adc
mov
test
mov
or
inc
push
data16
sarb
jae
icebp
repz
sub
hlt
sar
mov
xor
sti
pop
fwait
sub
inc
cmp
sbb
popf
es
pushl
or
inc
fimuls
lcall
adc
cmp
sti
out
incl
xor
mov
mov
out
inc
xchg
jle
jmp
testb
push
outsl
ljmp
push
nop
xchg
mov
shll
pusha
cmp
dec
cmp
test
mov
outsl
call
les
add
adc
fiadds
inc
mov
loopne
or
ljmp
jne
incl
das
icebp
mulb
add
push
clc
in
ficompl
pop
les
sahf
cmpsl
sub
add
inc
repnz
fdivl
mov
sar
incl
sub
dec
arpl
lods
cwtl
lcall
sub
mov
cmp
and
pop
adc
mov
dec
mov
jp
repnz
divb
pop
pusha
pop
repz
sti
fimuls
jns
cmpb
or
ja
jns
into
neg
xor
adc
dec
jne
mov
incl
aad
mov
pop
test
sub
add
add
pop
arpl
sti
mov
call
cmpl
testl
or
fdivr
loope
mov
jno
jle
outsl
mov
mov
fiaddl
es
or
out
mov
les
incl
add
enter
or
sbb
xor
jmp
adc
sub
jp
scas
mov
mov
insb
and
lahf
fucomp
repz
loopne
jno
pop
mov
call
out
arpl
nopl
faddl
js
pop
cld
xchg
xchg
movsl
xchg
xorb
psrld
movsl
dec
loopne
popf
data16
pop
imul
fildll
mov
push
int
xchg
mov
pop
int3
lcall
and
fwait
push
shll
pop
push
and
dec
sbb
cmp
call
adc
fdivrs
rorl
cld
mov
mov
jo
xchg
fisubs
sbb
jle
sbb
call
enter
inc
adc
aas
dec
ret
dec
lods
repz
incl
add
push
iret
scas
stos
shrb
cmp
inc
mov
pop
aaa
scas
testb
and
mov
and
mov
lock
jnp
add
jb
push
pop
push
aam
out
and
sub
push
mov
push
dec
shll
clc
push
dec
or
test
pop
or
mov
inc
std
mov
icebp
lods
mov
mov
sti
mov
or
adc
rep
cmp
gs
add
push
and
push
cmp
ljmp
xor
jmp
jo
cwtl
int3
mov
subb
xchg
xor
icebp
fcomip
jge
push
push
out
mov
xchg
pop
imul
cmp
lcall
or
clc
push
rcrl
dec
inc
in
jns
inc
jmp
ja
mov
out
out
clc
mov
fisubs
push
adc
test
in
pop
xlat
add
loop
out
mov
mov
incl
dec
or
shrb
scas
fiadds
cli
xor
mov
ljmp
call
mov
hlt
stc
fisubrl
fnsave
rcll
pop
xor
into
jecxz
inc
sub
cli
iret
sub
mov
decb
inc
mov
mov
imul
in
addr16
mov
in
test
jbe
push
push
gs
std
lcall
add
xor
roll
jae
loop
inc
clc
les
call
stos
pop
mov
ret
cs
repnz
cmp
lds
jp
dec
repnz
mov
dec
call
xchg
dec
movsb
into
dec
push
push
and
or
ljmp
adc
outsl
sub
mov
bound
lea
dec
pop
mov
sbb
jmp
mov
int3
subl
xchg
aam
cld
cmp
ja
inc
je
movsl
mov
shll
int3
bound
fmuls
mov
int3
loope
lahf
and
lcall
pop
cmp
rcpps
pushf
sbb
jge
jb
addb
in
call
loopne
icebp
pop
in
pop
ret
jb
add
test
push
dec
cmpsl
xchg
and
ljmp
xor
pop
fcmovbe
in
inc
xchg
adc
mov
arpl
data16
jp
pop
jg
rorl
mov
mov
sub
mov
loopne
push
es
icebp
fs
stc
inc
push
cld
call
out
sub
and
pop
and
movsb
push
mov
xchg
xchg
sub
pop
test
jne
mov
fdivl
fsts
pusha
shl
jge
cmp
push
or
into
pushf
push
insb
adc
mov
sub
push
jne
es
jns
fisttps
and
mov
rolb
xlat
lret
call
ljmp
push
aad
shlb
inc
cld
lods
push
stc
jmp
jge
sarb
adc
lcall
mov
outsb
push
mov
pop
lods
mov
xchg
insb
inc
jg
mov
movsl
incl
cmp
mov
out
jp
pusha
and
iret
mov
pop
imul
lret
push
test
inc
icebp
adc
jbe
imul
and
jae
inc
test
sub
jl
mov
push
sahf
pop
mov
inc
pop
sub
adcb
inc
xor
mov
ja
stos
mov
jo
adc
push
scas
sub
jg
adc
pop
xchg
shr
or
lods
sub
jo
or
fucomip
push
stos
ret
sbb
push
fnstenv
and
lcall
je
xchg
leave
hlt
lcall
xchg
adc
mov
mov
pop
sti
and
sub
sbb
je
and
lcall
fbstp
xchg
jae
and
mov
pushf
pop
or
pushl
rcl
dec
arpl
sbb
pop
inc
pop
mov
inc
xor
ret
in
fucomp
bound
inc
cmp
cwtl
lcall
jge
ds
call
sbb
mov
loopne
xchg
sbb
inc
mov
std
and
ret
outsl
rorl
jg
mov
lods
add
cmc
roll
clc
and
jecxz
inc
sbb
mov
je
fcoml
or
pop
push
les
daa
jmp
lahf
pusha
adc
and
xchg
hlt
iret
das
outsl
in
ljmp
pop
popf
leave
shr
out
lock
xchg
cltd
int
aaa
mov
in
or
jne
mov
clc
or
dec
notl
jne
mov
rolb
loop
dec
jg
mov
imul
decb
adc
aam
mov
in
mov
mov
jbe
aas
jmp
xchg
fsub
mov
and
test
and
pop
imul
jmp
jmp
outsb
add
test
adc
nop
xor
cwtl
jb
xchg
cli
pop
popf
cmpsb
test
xor
add
cmp
inc
and
xor
ret
push
xchg
icebp
sub
decl
or
dec
push
movb
jge
adc
js
and
scas
sub
and
mov
sbb
pop
jl
addr16
out
jbe
pop
jle
into
jbe
ljmp
mov
int3
xor
adc
push
add
cwtl
add
xchg
mov
pop
xchg
xchg
add
lods
sub
jg
mov
xor
into
jmp
push
repnz
call
add
push
out
push
ret
sub
es
int3
or
add
hlt
cmp
dec
jecxz
mov
ds
add
dec
clc
sub
sahf
stos
xor
ljmp
in
pop
pop
inc
dec
adc
pop
lcall
xchg
inc
imul
push
sbb
movsb
fwait
dec
lods
dec
sub
lret
jbe
fistpll
and
nop
sub
aam
xor
pop
mov
cmc
je
into
bound
sub
mov
jno
mov
imul
stc
dec
inc
push
ja,pt
jmp
fldcw
decl
out
arpl
popf
notb
test
sub
cltd
lods
pusha
scas
cmpsl
jp
out
push
push
aaa
jne
xchg
and
aad
pop
cmp
xchg
mov
shlb
jge
inc
mov
icebp
loope
call
sub
loopne
sbb
mov
or
incl
xchg
sbb
add
scas
lods
nop
divl
sub
adc
dec
and
xchg
sahf
ds
lcall
add
push
sub
out
test
jg
sbb
js
call
push
xchg
pop
movsb
mov
add
and
pop
sub
mulb
add
insl
jg
je
pushf
stc
std
je
sbb
ret
loope
leave
int
addl
jmp
ss
xor
lret
sti
mov
mov
jg
dec
addl
pop
popa
loop
pop
ret
jbe
sbb
loopne
fists
jbe
xchg
and
xchg
pop
dec
mov
push
xor
mov
sbb
in
aam
sti
or
push
dec
in
mov
xor
or
and
ss
xchg
or
call
fwait
aas
fwait
scas
pop
cwtl
pop
pop
mov
mov
and
mov
repz
inc
lcall
shll
out
outsl
ret
ret
bound
insb
xchg
data16
shl
test
xchg
das
mov
jmp
call
mov
and
data16
or
aad
lods
flds
mov
lcall
lcall
movsb
adc
lahf
inc
mov
add
imul
shll
jg
pushf
mov
iret
movsl
cltd
fbld
loope
fcmovnb
pushf
xor
jge
add
jae
jnp
outsb
adc
adc
adc
test
cwtl
ljmp
imul
inc
lcall
shrb
mov
pushf
sbb
je
cmc
movsl
jbe
test
dec
rcrl
adc
fcoms
lahf
push
fildll
ja
repnz
daa
mov
cmc
xchg
xchg
and
ljmp
sbb
sbb
cmp
repnz
inc
stos
pop
stos
dec
lahf
cmp
and
pop
mov
mov
sbb
test
mov
in
dec
dec
aam
dec
inc
mov
jnp
roll
aas
xor
dec
call
sbb
repnz
mov
pop
mov
jno
cmpsb
jmp
insl
jae
sbb
add
addl
jmp
les
lods
jb
ljmp
stc
cmp
ret
fwait
insb
insl
addr16
mov
arpl
iret
mov
fcmove
test
pushl
dec
out
inc
mov
sti
sbb
dec
push
fildl
sbb
ljmp
jg
loopne
mov
mov
iret
pop
fstps
incl
pop
stc
mov
sbb
call
add
mov
pop
and
inc
mov
outsl
mov
sub
xchg
ss
xchg
ss
mov
subl
jmp
jo
inc
jl
mov
pop
fnsave
mov
xor
aam
mov
push
es
jns
sysenter
pushl
fcompl
stos
psubsw
int3
imul
test
cs
stos
adc
inc
out
incl
dec
pop
push
xor
sti
add
mov
add
dec
outsb
add
push
cs
pushl
lods
dec
int
xchg
sbb
lds
test
sub
faddl
test
movsb
push
adc
cltd
inc
jo
test
pushl
pop
cli
sbb
push
lods
aas
in
jns
test
xor
decl
scas
mov
jbe
pop
sbbl
nopl
jmp
lcall
jnp
insb
stos
ss
sbb
mov
nop
mov
push
aad
jg
jmp
sbb
int
dec
mov
fistpl
decl
lods
mov
sub
in
xchg
inc
call
mov
mov
jo
out
out
js
cs
test
out
daa
ja
scas
lds
cmc
and
scas
out
aad
int3
js
mov
mov
mov
sahf
clc
push
add
jns
outsl
jmp
or
ja
clc
push
and
push
mov
js
rol
mov
inc
std
mov
pop
mov
pop
mov
xor
test
push
sar
cmp
dec
add
sub
adc
sbb
negl
mov
subl
push
and
dec
sbb
in
jmp
mov
push
call
mov
lcallw
xchg
mov
lea
adc
push
pop
xchg
shl
sbb
and
fs
stos
pop
jl
jnp
test
repnz
fsubl
insl
lods
add
pop
mov
jnp
cld
incl
cld
mov
enter
dec
mov
es
mov
incl
mov
fistpl
sub
outsl
into
adc
cmp
fwait
pop
pop
daa
call
and
cmpsl
add
inc
mov
pop
out
pop
pop
cmp
jmp
mov
mov
jo
sub
jle
loop
test
imul
addr16
sbb
inc
stos
out
test
popa
sbb
mov
arpl
iret
add
dec
mov
std
pushf
adc
inc
daa
cmp
clc
sub
incl
push
fs
xchg
mov
add
jmp
and
add
jnp
movsl
xchg
sub
divb
stc
jge
lods
xor
pushf
sti
sbb
push
add
sbb
jnp
inc
xchg
outsb
xchg
call
fdiv
fsub
jo
jg
pop
shrb
or
addb
fwait
stc
les
sub
call
jbe
xor
adc
mov
popf
add
addb
rcrb
mov
inc
or
aaa
sarb
cmp
pusha
fldenv
fsubs
decl
mov
pop
jg
mov
or
inc
imul
incl
and
cmp
inc
movsl
push
aam
mov
mov
inc
xor
jae
mov
clc
ljmp
pop
ret
mov
lods
sub
stos
lods
adc
pop
and
pop
jae
cmc
lock
in
stos
xor
or
mov
push
shlb
mov
ljmp
mov
pop
mov
jp
dec
hlt
dec
push
or
incl
push
xchg
adc
dec
jmp
add
out
push
cld
jmp
insl
mov
and
aad
cli
rol
jb
mov
lds
call
push
rcll
or
push
mov
nop
sub
push
xchg
mov
jp
loop
inc
stos
test
jae
xchg
cs
cmpb
jns
push
add
sub
and
push
sbb
and
fs
fimuls
dec
lcall
mov
xor
iret
ret
xchg
add
int
lcall
pop
mov
ss
sbb
cld
mov
jbe
adcb
add
mov
mov
mov
cltd
or
add
mov
cmp
push
jl
lock
add
je
sbb
scas
gs
xlat
sub
pusha
mov
loope
jnp
ja
les
xor
pop
pushf
sub
dec
cmp
sbb
repz
outsl
adc
push
fadd
test
jno
push
sbbl
xlat
dec
shrl
hlt
xor
popa
sbb
cmpsb
sbb
inc
sbb
ret
pop
sbb
fldenv
or
sar
jmp
sbb
sbb
adc
in
call
repnz
adc
or
push
jmp
mov
lret
rorb
fmull
loopne
sti
scas
or
daa
pop
pusha
sbb
hlt
js
and
push
dec
mov
inc
aad
cmpsb
js
cld
imul
mov
lds
arpl
xlat
movsl
aas
and
dec
jge
xchg
or
imul
stos
cltd
dec
sub
mov
lcall
das
out
loopne,pn
cltd
xor
out
ret
out
into
ja
cmp
and
xor
frstpm(287
mov
lcall
mov
sub
push
dec
sti
scas
lock
add
mov
mov
sub
lock
sbb
leave
sub
daa
loop
test
mov
xor
rcll
jg
pushl
add
lods
or
pusha
or
pop
stc
int3
jne
push
sbb
jnp
inc
cwtl
fisubrl
cmp
popf
bound
lret
daa
in
push
mov
out
jno
loopne
cmp
pop
into
or
jnp
std
xor
fcomip
jmp
cli
std
jl
sub
inc
xor
gs
sub
push
pop
in
mov
call
fcomip
rcrb
dec
inc
out
subb
repz
pop
adc
pop
cld
sbb
mov
jmp
mov
lret
fiadds
push
aas
mov
push
and
aam
out
pop
add
call
fisubrl
rclb
mov
out
push
push
sarb
outsl
inc
loop
push
push
mov
xor
mov
or
adc
push
pop
mov
decl
into
fildll
lods
dec
test
enter
leave
cmpsb
pusha
cmp
xchg
adc
pop
and
sub
movsl
flds
outsl
mov
jne
xor
fwait
in
mov
sub
jp
push
mov
mov
push
xchg
xor
sbb
push
jmp
cld
inc
hlt
adc
clc
mov
decl
mov
push
dec
loope
dec
jl
cwtl
in
inc
push
mov
jo
out
mov
or
lock
cmc
jns
iret
mov
sahf
sbb
scas
jmp
sub
out
add
or
xor
push
or
cmp
cld
aaa
pop
or
jo
mov
mov
or
enter
pushl
mov
loopne
or
nop
mov
jg
push
popf
xlat
pushf
call
mov
or
jge
add
in
nop
test
fwait
adc
es
mov
mov
mov
gs
lods
lea
divl
inc
jmp
test
jp
fs
movsb
movsb
mov
mov
js
sub
ret
sbbb
ss
decl
or
aad
inc
cmp
es
jb
loopne
pushl
pushaw
push
cmpsb
rcrb
shrl
int
push
jmp
std
push
jecxz
mov
cmc
rorb
mov
or
mov
pop
addr16
in
lock
sub
mov
call
ret
jno
inc
aaa
decl
mov
add
sub
inc
mov
fwait
testl
mov
sbb
outsl
push
lods
loop
push
mov
cmp
fs
call
out
dec
popa
icebp
pop
dec
xchg
popf
cmp
aaa
sub
jbe
dec
jmp
call
in
cli
ja
cmp
sbb
cmc
sbb
ret
mov
es
cmp
inc
cmpsl
jns
xchg
scas
sbb
rol
arpl
mov
jg
shrb
mov
call
sub
insb
and
cmp
jmp
sar
cmp
xor
jmp
push
js
lahf
sub
ret
in
or
iret
sub
jg
je
push
jae
jne
mov
cmp
stos
sub
inc
jecxz
loop
bound
xchg
outsb
std
shr
faddl
push
fnstenv
ljmp
sbb
ljmp
sub
jns
sbb
sbb
push
jno
loopne
mov
adc
daa
pop
mov
clc
stc
into
aas
scas
fnstcw
lret
subl
or
mov
es
adc
jp
and
inc
fdiv
jne
call
loop
sub
ss
inc
movsb
push
mov
outsb
inc
jle
lahf
jmp
sub
and
add
adc
bound
inc
mov
jne
mov
pop
out
clc
aaa
xor
xchg
lock
dec
das
arpl
jle
xlat
push
jp
xor
pop
cmp
ljmp
mov
lcall
dec
cs
cmp
mov
ja
adc
push
sub
adc
pop
call
mov
incl
lahf
adc
sub
fsub
popf
add
subl
mov
push
ss
incl
adc
loop
pop
sbb
adc
pop
or
daa
mov
aas
xor
clc
ljmp
stos
sahf
jae
pusha
fists
insb
adc
shl
test
inc
or
dec
call
jp
cld
das
sub
mov
scas
outsb
mov
jecxz
imulb
call
dec
sbb
out
inc
bound
inc
mov
sub
ljmp
adc
mov
incl
pop
insl
cmp
dec
xor
sahf
clc
xchg
fadd
push
pop
in
aaa
push
rol
inc
call
ljmp
push
fnsave
scas
push
ret
jne
addr16
and
fldl
xor
js
xchg
xchg
cmc
mov
call
std
pop
pusha
mov
ret
push
bound
stos
sbbb
mov
push
push
loop
inc
rorl
data16
sub
mov
scas
fstpl
out
cli
lahf
push
cltd
cli
or
jmp
test
add
out
push
mov
clc
test
xlat
sub
incb
mov
mov
inc
inc
lcall
sbb
cmp
xor
xchg
cmp
xchg
fst
xchg
lds
cli
or
lcall
lret
sbb
xor
gs
jno
push
adcb
cmp
or
pushl
jp
add
and
sub
pop
and
mov
clc
repnz
inc
push
cmp
adc
jecxz
hlt
popf
mov
xchg
orb
test
fidivrl
adc
rcll
adc
sbb
inc
ret
pusha
mov
or
out
inc
imul
shrl
insb
and
fsub
int
outsl
pushl
or
movsb
xor
push
fdivs
xlat
pop
sub
in
pushf
inc
pop
mov
xlat
movsb
pop
cmpsb
inc
inc
test
arpl
nop
std
outsb
hlt
add
pop
stos
ret
push
mov
mov
call
inc
rclb
mov
inc
add
hlt
add
sub
adc
mul
cld
std
jns
jge
xchg
loope
dec
cltd
or
je
mov
pop
dec
lret
lock
cmp
incl
cmpsb
add
out
mov
cld
into
mov
xlat
and
lods
mov
jmp
lret
rcrl
jmp
dec
fdivs
add
cmp
mov
mov
pop
cmp
xlat
shll
addr16
loope,pn
dec
cmp
jecxz
jle
and
dec
incl
fldl
lock
push
pop
clc
mov
lds
xchg
xchg
jle
lahf
jmp
sub
gs
sti
addr16
dec
imulb
adc
inc
enter
jmp
mov
mov
cmp
mov
dec
add
jge
repz
leave
iret
push
aad
pop
call
add
and
test
stos
aaa
or
cmc
xor
aad
cs
orb
dec
shld
jg
cmc
and
rcll
stc
in
jp
and
outsb
sbb
xchg
dec
jmp
lcall
in
mov
xor
and
sub
push
and
loopne
dec
sbb
push
xor
mov
int3
cmp
in
add
push
fdivs
ss
scas
rorl
call
fs
jbe
scas
cmpsl
outsl
push
and
ds
bound
jnp
call
add
inc
adc
xor
mov
inc
mov
das
repnz
lret
cmpsl
pop
imul
xchg
fimuls
in
xchg
pusha
mov
add
add
dec
xchg
inc
lcall
dec
jp
stos
subb
add
lcall
repnz
xor
pop
pop
xor
imul
pusha
xor
adc
or
jno
mov
lret
inc
mov
cld
cld
stos
pushl
mov
add
lods
mov
fisttpll
mov
jge
call
popf
inc
sub
mov
sub
inc
mov
jo
jbe
xchg
add
call
ljmp
inc
fadds
out
cmc
outsb
aad
inc
jg
mov
iret
mov
mov
imul
and
ja
fisttpl
xor
cmpsl
and
add
inc
addl
jle
mov
in
out
aam
hlt
fbld
jbe
roll
sub
push
xchg
loopne
pop
lcall
add
fistps
or
inc
sbb
mov
xchg
repnz
lods
decl
stos
push
es
orb
enter
fstl
imul
in
push
sub
jnp
stos
adc
decl
adc
sub
stos
jo
les
jle
fiadds
jle
dec
mov
xchg
dec
popa
add
movsb
loop
cmp
mov
fstps
mov
sbb
sub
das
adc
hlt
sub
push
repnz
test
dec
push
sbb
lcall
aaa
jbe
or
mov
xor
xor
scas
arpl
sub
adc
in
bound
cld
dec
mov
or
push
xchg
out
orl
bnd
cmp
ljmp
pushf
enter
fs
mov
pushf
test
imulb
pop
ret
pop
test
repnz
push
in
lcall
mov
fdivr
sub
push
stos
std
clc
lods
adc
and
and
cld
pop
mov
movsb
rolb
lcall
sahf
out
imul
addb
popa
push
or
clc
jns
xchg
pop
jns
mov
decl
scas
mov
out
roll
fadds
lcall
decl
xor
push
sub
rep
insl
int
pop
out
push
mov
pop
adcl
adc
jmp
and
pusha
mov
sbb
iret
jg
jbe
mov
popf
adc
jmp
jo
ljmp
aam
jo
or
enter
sahf
scas
aaa
add
loopne
push
fcoms
pop
mov
mov
divl
pusha
inc
lret
push
shld
add
jmp
pop
or
jno
pop
je
lcall
sbb
mov
sub
add
shlb
xchg
add
outsl
clc
lcall
fistl
pop
iret
or
adc
sysenter
or
das
cli
call
fwait
xor
sarl
push
pop
jbe
fbstp
xor
cmpsb
add
movsl
jns
cmp
lds
xchg
int3
bound
add
cld
rcll
movsb
vpandn
scas
pop
or
fimuls
mov
daa
stc
add
call
sbb
mov
dec
sbb
in
fs
and
filds
jg
and
outsb
stos
icebp
lret
jae
sub
mov
xor
arpl
xchg
into
mov
pop
inc
sub
adc
pop
pushl
sbb
inc
mov
sti
and
sbb
mov
or
call
fisubrs
pop
and
push
xchg
add
sub
andb
aas
pusha
fiadds
incl
mov
popf
and
lcall
mov
rcrb
inc
js
xchg
stc
fdivs
mov
in
sarl
scas
mov
out
and
test
hlt
lock
pop
in
and
mov
sbb
push
leave
inc
pop
das
jo
mov
dec
dec
inc
mov
in
xchg
out
jecxz
mov
jmp
ss
bound
ljmp
sbb
aad
imul
decl
js
fdivl
mov
pop
mov
iret
sub
mov
mov
mov
jmp
adc
and
into
push
sub
pmulhuw
sub
and
mov
mov
and
push
flds
sbb
fwait
xchg
addr16
jo
fwait
or
mov
xchg
call
std
pop
iret
nop
or
dec
and
lea
or
mov
dec
mov
pop
mov
out
fcoml
jae
ljmp
mov
jmp
cmp
leave
repnz
mov
in
jecxz
aam
push
push
inc
mov
inc
cs
imul
je
std
popa
xchg
mov
dec
aaa
mov
icebp
and
mov
gs
jmp
inc
or
fidivl
and
mov
out
lock
lcall
inc
leave
jg
popa
roll
xchg
mov
xor
sbb
xchg
std
test
decl
or
cltd
sti
ret
filds
sub
sub
xor
scas
jmp
repnz
or
decl
push
pusha
sbb
and
dec
scas
jmp
ret
add
dec
push
dec
call
sub
fisttpll
or
mov
fstpl
call
decl
or
scas
pop
pop
pusha
dec
neg
dec
int
movl
sbb
or
outsl
clc
inc
or
dec
pop
mov
dec
loopne
es
xchg
shll
popf
fwait
test
repnz
cli
mov
test
ljmp
jno
in
fwait
jno
aaa
push
add
mov
jmp
jmp
cmpsb
fmuls
dec
push
dec
ficompl
divl
scas
fisubrl
cld
addr16
cmpsl
push
and
sar
call
insb
and
ficoms
in
mov
jg
mov
insb
and
out
jg
jle
sarb
dec
fs
jae
sub
inc
loopne
fs
call
and
and
and
pop
into
or
add
fists
cmp
leave
xchg
int
cmp
movb
lret
stos
inc
mov
fists
popa
outsl
push
cmp
in
call
add
mov
or
push
xchg
add
push
je
mov
add
inc
mov
imul
inc
iret
adc
lahf
sahf
adc
adc
lock
xchg
jg
add
mov
jmp
ljmp
adc
adc
aas
loop
aad
ljmp
out
cmpsb
pop
repz
lcall
addr16
ds
xlat
sahf
jl
mov
inc
outsl
aam
test
ss
out
sti
mov
inc
insb
or
ja
mov
cmp
inc
pop
das
mov
lds
ret
in
inc
mov
call
push
push
jg
jle
or
push
mov
incl
aam
pop
xchg
lret
add
pusha
cmp
scas
sbb
add
call
loopne
cmpsb
mov
in
xchg
mov
mov
mov
int
es
incl
xchg
mov
cmp
rorb
rcrb
add
pop
dec
push
mov
ja
push
or
arpl
addr16
mov
xchg
loopne
sub
decl
test
sub
jb
mov
or
in
incl
std
adc
mov
in
jmp
aad
jo
cmp
dec
daa
sbb
js
xchg
sar
fcomip
jl
cmp
mov
xchg
or
idivb
xchg
lods
out
lods
loopne
in
inc
sar
pushl
jo
fdivrl
xor
cmp
mov
pushf
add
cld
daa
jmp
aam
adc
or
in
call
stos
cmp
dec
test
incl
xlat
jns
test
aam
mov
pop
jo
sarl
add
mov
mov
movsb
cmpsb
sbb
dec
int
and
cmc
mov
in
in
or
repz
icebp
jmp
lods
in
stos
push
jae,pn
iret
lea
je
cmp
aam
fucomip
add
daa
push
xor
iret
sti
xchg
lea
cmp
leave
inc
pusha
xchg
xchg
decl
mov
jae
out
inc
sar
cmp
dec
inc
cmp
jmp
jo
pop
mov
xor
paddusb
mov
mov
stos
lds
decl
and
adc
daa
mov
and
jae
cmpsl
icebp
stos
xchg
mov
test
dec
pop
mov
pop
jge
push
lret
jae
jnp
pop
jno
sub
stos
popf
ljmp
jmp
add
sub
mov
pusha
in
jne
shl
push
les
jmp
inc
mov
sub
lds
pop
add
or
and
inc
hlt
subl
dec
push
cmp
sub
stos
pop
jp
cltd
cwtl
cmp
ljmp
adc
nop
out
and
xchg
popf
hlt
mov
push
push
repnz
sbb
add
inc
pop
subl
incl
pop
sub
adc
scas
add
sub
loopne
add
jge
xchg
mov
mov
jb
lods
aaa
sbb
sbb
adc
or
out
sarw
xchg
imul
fstpl
loop
push
cmp
call
or
sahf
mov
push
mov
rcr
xor
pop
mov
enter
inc
and
aad
movsb
outsl
inc
sub
jnp
adc
addr16
push
andl
adc
pop
xor
mov
jo
and
out
cli
decl
outsl
pop
cmp
mov
cmp
int3
push
dec
inc
xchg
jmp
decl
scas
cmp
je
popf
jne
inc
sbb
jbe
sti
mov
mov
push
and
sahf
mov
push
jle
mov
aaa
ret
adc
test
test
test
aas
cmp
jg
std
xor
icebp
adc
inc
mov
test
push
xor
xor
mov
pushl
sbb
aaa
sbb
rorl
adc
mov
outsb
mov
gs
mov
mov
jae
fnsave
rorl
mov
shl
outsl
cli
pusha
es
xchg
mov
adcl
ficoms
cli
incl
pop
es
mov
adc
jg
push
decl
push
enter
dec
lea
add
jns
xchg
xor
pop
sub
mov
call
fcmovne
inc
push
cmp
fdivrs
xchg
inc
movsb
xchg
jno
mov
outsb
push
je
dec
inc
lods
test
js
mov
fdivs
in
jbe
outsl
dec
dec
pop
out
popf
adcb
xor
cli
lret
sbb
icebp
mov
repnz
js
push
push
sub
inc
sbb
jg
div
sbb
adc
push
lret
icebp
xchg
add
test
xlat
cld
xchg
lcall
and
sbb
dec
and
outsb
ret
push
mov
inc
jns
pop
jno
jg
xor
sbb
test
adc
inc
out
pop
imul
out
in
sbbb
ljmp
mov
jbe
imul
lahf
or
ret
js
sub
jnp
mov
pusha
call
test
gs
into
xor
xchg
jno
xchg
sbb
aam
dec
add
insb
aaa
jecxz
jg
xor
gs
clc
incl
xchg
cltd
xchg
push
inc
dec
push
sub
call
mov
fwait
push
cmp
add
ljmp
adc
mov
mov
sti
fbld
aad
mov
adc
jmp
pop
cmp
jl
pop
xor
popf
loopne
pop
pop
imul
cmpsb
decl
insl
enter
out
mov
push
out
les
xchg
pop
sti
dec
jns
push
jne
sbb
jmp
or
dec
jno
jo
std
outsl
stos
or
jge
popf
xor
les
jbe
scas
xchg
jg
test
enter
adc
cmp
jl
test
cli
or
push
stos
and
push
push
dec
mov
cmpsb
leave
insl
lret
sub
lret
and
mov
lcall
loop
int3
mov
xor
aas
sub
sbb
xlat
ds
pusha
adc
dec
decl
in
xchg
jmp
cmp
dec
rorb
mov
fcomip
test
decl
lock
and
inc
adc
scas
or
sbbb
dec
data16
jmp
mov
out
push
insl
xor
movsb
add
in
nop
lahf
insb
fstpl
insb
int3
data16
cmp
pop
in
dec
dec
inc
ss
push
and
imul
push
das
insb
add
adcb
add
loop
ljmp
or
test
push
cmp
jmp
fbstp
in
call
cmp
dec
push
adc
ljmp
aad
das
rorb
arpl
mov
jno
mov
ss
lcall
pusha
pop
cltd
push
and
dec
sub
mov
popa
aas
push
aad
sbb
pop
and
xchg
dec
lds
or
mov
push
dec
lret
dec
sti
fidivrl
test
inc
and
pop
hlt
dec
pop
or
lock
jno
stos
mov
jg
shl
mov
inc
cmp
je
mov
cmp
pusha
mov
out
and
or
bound
out
int3
mov
lcall
mov
cmp
sub
cmpb
scas
jb
jno
call
push
jle
jb
outsl
mov
call
orl
shlb
pop
out
mov
xchg
or
pop
adc
xor
push
mov
call
fwait
arpl
sbb
out
mov
mov
cmpsl
shlb
inc
or
fcoml
fiaddl
lcall
mov
sub
call
fs
into
pslld
jns
push
or
ds
ret
push
sbb
sbb
push
adc
icebp
call
out
lock
pusha
cmpsl
mov
cmp
xchg
mov
mov
add
ja
fwait
shrl
pop
das
cmpsl
aaa
stc
cwtl
push
movq
lods
fcomip
mov
sbb
ret
push
call
push
pop
mov
add
add
pop
test
pop
out
dec
or
movsb
jle
mov
jmp
push
jmp
jo
jl
xchg
insb
jb
hlt
mov
mov
cmp
imulb
call
cmpsb
jno
rorb
shrl
adc
xor
sub
add
call
cld
pop
mov
rorl
ss
push
clc
int
je
jge
ret
repz
add
mov
pop
fs
call
mov
jp
fsubs
push
mov
xorl
mov
cmp
jmp
gs
lret
sti
mov
push
mov
cmp
lods
scas
outsb
loopne
out
clc
ljmp
mov
js
xchg
jecxz
mov
sub
pop
jmp
cltd
cld
dec
jbe
lcall
cs
sub
mov
or
in
cwtl
stc
inc
mov
out
inc
sub
loopne
ljmp
adc
push
lds
call
outsb
imul
mov
sub
inc
or
or
movsb
fldt
int
ds
punpckhbw
notb
pop
insl
lock
jo
push
mov
inc
in
ljmp
inc
in
nop
add
vsqrtps
add
sbb
push
push
mov
jp
popf
sub
adc
sbb
shlb
xor
fiadds
fadds
jp
bound
je
hlt
xor
jecxz
sbb
jmp
sbb
fcomip
call
push
notl
out
sub
repnz
adc
addr16
les
jnp
cs
call
ljmp
lock
xchg
in
adcb
int3
roll
mov
mov
aam
mov
popa
dec
push
and
xchg
call
sbb
fidivl
jg
and
push
ret
hlt
int
ja
sarb
lods
ss
jg
das
call
push
in
data16
inc
push
pop
loope
pop
leave
push
lods
sbb
mov
sbb
ljmp
push
das
adc
sbb
push
cmp
lods
inc
mov
sbb
int
dec
dec
sub
xor
daa
jns
dec
bound
mov
js
loopne
sub
sub
fbstp
jg
cli
or
mov
mov
xchg
decl
adc
movsb
pop
sbb
pop
dec
adc
mov
mov
dec
sahf
int
cli
ret
out
xlat
incl
jge
jno
xchg
loop
adc
cmp
gs
pop
andb
xchg
jg
pop
xchg
xor
mov
pop
and
jl
lahf
xchg
mul
popa
dec
arpl
jge
inc
mov
es
incl
and
add
lock
cmp
ljmp
or
cmpsl
aam
pushw
clc
xlat
mov
inc
sub
mov
push
insl
cmp
incl
rcrl
add
push
ret
inc
outsl
popf
addl
lea
fsts
mov
dec
xor
fcoml
leave
xchg
fldenv
dec
inc
loop
daa
hlt
gs
addr16
ljmp
jp
mov
jecxz
rclb
out
negb
incl
shrb
out
mov
xor
lods
adc
les
cld
sub
xor
pop
inc
rorb
in
in
sub
das
sbb
jb
div
sub
ljmpw
loope
mov
mov
add
popf
mov
jns
loop
call
cld
iret
add
sti
mov
or
inc
aam
fcmovnu
shll
pusha
rcl
ss
leave
jmp
jp
cmp
sub
loopne
sub
jnp
das
inc
repz
pushl
cmp
testb
dec
xchg
add
cld
mov
and
mov
gs
in
out
sbb
pop
cli
pop
mov
adc
pusha
icebp
int
shlb
repz
or
mov
ja
jp
std
loop
out
mov
jns
lcall
int3
lret
jecxz
test
cwtl
pop
inc
add
imul
xlat
add
scas
mov
out
push
imul
shrb
inc
mov
inc
dec
sahf
lock
cmp
dec
pop
xchg
dec
cs
push
and
mov
pop
sbb
jp
decl
js
xor
arpl
dec
mov
shrb
add
jg
mov
pushl
or
scas
nop
stos
xchg
fdivr
test
or
sahf
cmp
jo
outsl
in
lcall
lcall
mov
aam
jbe
repnz
inc
ljmp
and
or
add
ss
mov
mov
outsb
dec
cwtl
jb
sub
pushl
movsl
movsl
lea
insb
xlat
jmp
push
pop
push
mov
test
rorl
push
incl
pop
outsl
lcall
sub
xchg
adc
fdivrs
call
add
add
xor
sbb
mov
ja
or
mov
fiadds
jmp
sub
movsb
dec
cli
cli
adc
mov
insb
rcll
cmp
adc
push
pop
test
adc
insb
push
pop
iret
orl
push
jnp
dec
add
sub
mov
mov
mov
iret
fisttps
push
out
jo
loope
push
push
jbe
add
in
xor
or
sub
jl
sbb
mov
inc
jne
push
sarb
fnstsw
dec
loopne
imul
push
lret
lods
jecxz
shlb
aad
dec
adc
ss
outsl
dec
sbb
adc
pop
jge
push
or
or
cmpsl
cmc
mov
cld
mov
xchg
mov
dec
stos
pushl
ljmp
cmp
in
jge
mov
pushf
hlt
jbe
mov
inc
sahf
fdivp
pushl
nop
xor
enter
pop
sub
adc
pop
ret
and
pushl
mov
inc
xchg
mov
loope
mov
addb
call
negb
lret
push
sbb
data16
pop
jnp
sbb
lods
lcall
loop
xor
pop
stos
fwait
rcll
aaa
mov
test
jmp
or
mov
incl
adc
test
ret
aad
mov
jns
pop
in
loopne
in
push
jb
in
ret
adc
mov
imul
cmp
jg
jbe
or
mov
mov
insl
and
mov
cmp
out
add
and
sbb
in
loopne
fstp
fidivrs
mov
pop
aam
fucomi
inc
jl
shlb
mov
jo
lock
mov
imul
lret
xchg
imul
lea
fcomp
mov
decl
jp
mov
roll
clc
cmp
cmpsb
add
add
mov
push
dec
movsl
add
add
add
arpl
dec
sub
decb
mov
daa
loope
call
jnp
cmc
lods
sbb
xchg
addr16
sbb
rcll
lods
push
jnp
adc
lock
incl
dec
stos
or
imull
lock
sbb
aaa
mov
ljmp
adc
movsl
sbb
jle
fildll
push
adc
scas
mov
stc
push
cs
jle
sbb
test
out
decl
clc
in
and
and
mov
xchg
icebp
xlat
imul
jmp
adc
pop
pushl
push
out
pop
cs
mov
sbb
adc
aas
loop
xchg
call
or
lea
mov
jnp
cmp
stos
dec
les
stos
mov
cmp
jecxz
cmp
fxch
jl
sub
cmp
xchg
mov
pushl
inc
xlat
sti
and
out
repnz
mov
cltd
lret
jg
ljmp
call
inc
xor
aam
outsb
inc
dec
add
mov
in
xchg
out
aad
jge
xchg
xchg
mov
daa
pop
aaa
and
push
test
mov
pushf
jns
cmpsb
push
sub
cmp
add
out
dec
jbe
cld
jb
daa
inc
mov
flds
jl
sbb
inc
ljmp
sbb
xchg
push
mov
mov
daa
lods
stos
sbbl
xor
add
pushl
pop
frstor
jb
xchg
jne
aam
leave
aam
push
jne
xchg
inc
repnz
add
ljmp
dec
cs
inc
loope
inc
icebp
mov
mov
jnp
mov
stos
aaa
stos
daa
jbe
rcr
hlt
jmp
mov
adc
ds
dec
pop
movsl
xchg
dec
fstl
push
xchg
das
cli
mov
ljmp
sub
call
loope
pop
inc
jle
adc
adc
xchg
xor
cmp
xchg
or
lret
add
loope
jp
incl
mov
sqrtps
push
push
into
cmpsb
test
movsl
xchg
idiv
push
adc
lods
scas
pop
xor
xchg
js
jg
icebp
add
mov
xchg
cmpsb
je
mov
das
ror
cmp
xor
call
pop
adc
push
fucom
mov
and
push
cmp
xor
or
pop
fldt
jl
push
dec
jo
loop
sub
popf
pop
pop
nop
jge
xchg
push
hlt
orl
mov
dec
popa
and
lcall
cmp
jns
cwtl
popa
lret
sub
sub
dec
add
pop
mov
fstps
mov
outsl
call
out
int3
enter
sbb
mov
popf
mov
adc
lcall
inc
pop
xchg
aam
outsb
and
dec
cwtl
xlat
push
ror
out
or
ret
mov
lret
pop
std
cmp
fmul
out
mov
test
and
mov
push
pop
add
add
sti
cld
add
or
sbb
lcall
fwait
iret
shrb
test
dec
sti
dec
subl
test
cmp
in
xchg
pop
inc
cli
popa
or
test
lcall
out
std
xchg
adc
xlat
mov
fcmovu
test
mov
jecxz
notb
lret
jmp
loop
dec
sahf
mov
cmp
dec
lock
push
pop
imul
enter
es
ljmp
mov
in
xchg
lret
daa
lods
cli
in
in
cs
in
hlt
flds
fsubrs
mov
mov
sbb
jl
jae
mov
inc
loop
test
sahf
bound
mov
sbb
sub
push
sub
inc
in
add
iret
xchg
jge
ljmp
xor
call
push
sarb
add
add
das
adc
inc
rclb
repz
shll
gs
cli
mov
incl
scas
repz
sbbl
ret
arpl
xchg
negb
enter
jg
lcall
mov
lds
mov
aad
fdivrs
call
push
popf
cwtl
pop
push
imul
mov
in
xchg
nop
ret
jle
sbb
pop
sub
fs
lcall
out
sbb
les
orb
cli
push
loopne
addb
sub
fidivl
shlb
mov
dec
pop
inc
mov
xor
rolb
cld
inc
loopne
cmc
lea
mov
or
xor
std
call
jg
cmp
add
icebp
fistps
ds
add
push
sbb
jae
cmpsb
push
cld
pop
icebp
pop
stos
sbb
pop
adc
std
push
and
jle
push
scas
decl
xor
push
push
mov
and
push
mov
sub
imul
outsb
ret
pop
jae
je
sar
incl
lcall
cmpsl
sbb
and
daa
fimull
jp
add
mov
incl
jg
xchg
cli
repnz
dec
and
inc
jl
jge
adc
jae
jmp
decl
icebp
sub
fcoms
mov
lret
mov
test
or
decl
out
outsl
out
leave
or
sbb
cmp
cmp
and
inc
or
xchg
das
push
pop
fistl
sahf
cltd
xchg
sub
lea
pop
nop
dec
push
cwtl
stos
adc
pop
lcall
ljmp
xor
lcall
mov
repz
mov
movsb
cli
mov
lcall
adc
jmp
lods
pop
xor
pop
dec
js
les
stos
dec
bound
clc
push
int
inc
jle
jl
inc
pushf
hlt
push
sbb
xor
mov
ret
lcall
cwtl
mov
repnz
fists
pushf
daa
adc
jb
sub
dec
bound
pop
stos
inc
imul
pop
je
call
fs
xchg
arpl
les
pushf
and
adc
repz
call
jp
mov
jg
stos
aam
xchg
lds
jecxz
add
lock
cld
jnp
cli
push
in
fsub
ret
scas
mov
adc
imul
jmp
ja
sub
arpl
adc
mov
rolb
outsl
cmp
mov
push
pop
hlt
mov
xor
lods
dec
jns
cmp
jae
add
inc
and
xchg
and
or
out
push
shrb
push
das
mov
dec
pop
mov
jmp
imulb
test
inc
xor
rcl
cltd
mov
jp
mov
add
dec
or
mov
incl
sahf
loopne
cmp
jecxz
sahf
stos
or
call
mov
sbb
incl
pop
push
imul
sub
test
pop
sbb
or
sarl
sti
lret
jmp
sarl
rclb
pushf
je
mov
mov
inc
cmpsl
pop
in
gs
mov
inc
mov
ds
mov
cmp
add
inc
aad
inc
and
adc
cmp
fcomip
jg
fdivrs
fidivrl
data16
insl
mov
gs
mov
adc
ljmp
mov
inc
dec
in
mov
test
lock
decl
push
and
push
cmp
lcall
mov
cmp
cmp
aas
xchg
mov
lcall
add
cmp
xor
xchg
fnstenv
mov
out
mov
roll
cli
jg
data16
jle
push
arpl
bound
icebp
jno
or
dec
insl
ret
outsl
xor
ljmp
clc
push
pop
ds
cs
imul
cmc
push
and
mov
incl
mov
das
mov
fdivrp
xchg
mov
xor
and
aad
jns
adc
movsl
dec
aaa
setae
roll
push
mov
pop
jecxz
in
dec
add
jmp
ja
xor
repnz
adc
inc
push
and
inc
mov
sbb
insb
sbb
add
cwtl
ds
cli
ja
push
lea
nop
cmpl
mov
incl
ljmp
add
or
lcall
jmp
inc
xor
dec
test
call
add
mov
rorl
fcmovb
enter
sbb
ljmp
xchg
mov
mov
push
dec
inc
push
jecxz
addr16
ljmp
int
sti
rolb
jge
test
mov
aaa
jo
outsb
loope
fsubl
cmp
mov
mov
inc
inc
cmc
dec
outsl
pop
inc
lods
in
call
mulb
cld
fbstp
cmpsb
cmp
push
mov
inc
mov
lock
roll
sub
lods
sub
ss
in
sbb
cmp
fdivrl
xor
decl
insb
mov
dec
xchg
aad
js
mov
mov
negl
dec
mov
mov
add
incl
lret
test
sti
popa
loop
aaa
push
and
lea
adc
sbbb
xchg
xchg
adc
decl
jbe
pop
in
stos
mov
jge
pop
rcl
mov
fsubrs
xor
pop
xor
push
pop
cmp
aam
fimull
mov
mov
pop
hlt
jmp
push
cmp
push
xor
insl
movsb
sbb
jo
filds
mov
xchg
not
add
addl
lret
sub
stc
cmc
ds
decl
pop
pop
sub
add
xlat
je
jecxz
xor
ret
or
aas
orb
xchg
push
dec
mov
loop
leave
popf
loope
adc
movsl
xchg
xor
push
shrl
fcoml
out
lcall
mov
xor
fwait
xchg
imul
loope
loop
out
adc
fsts
call
xchg
or
leave
aaa
add
and
mov
pusha
cmpsl
cld
or
pop
scas
or
push
mulps
jmp
xchg
jo
shrb
mov
jbe
jge
mov
cld
lcall
movsb
out
mov
stc
xor
lret
ficoml
leave
ja
cmp
aaa
sbb
xor
push
mov
or
test
or
ljmp
mov
and
out
les
lcall
push
and
aaa
call
mov
stos
jp
xchg
int3
hlt
lret
stos
lds
or
or
arpl
subl
mov
and
outsl
jo
or
xor
and
mov
test
mov
mov
lcall
fbstp
and
cmc
add
bound
or
push
push
xchg
frstor
jg
add
sub
cmpl
jbe
mov
add
xchg
fwait
mov
call
sbb
scas
lcall
aad
sarl
cmp
ljmp
es
jg
inc
inc
xchg
jnp
in
outsl
movsb
lcall
inc
adc
mov
je
iret
add
fisttpll
xchg
jnp
sbb
xchg
sub
sbb
push
clc
jmp
adc
jl
sub
pop
nop
aaa
fdivr
xor
lcall
decb
pusha
or
fistps
mov
cltd
lret
aam
dec
fcmove
xor
incl
icebp
arpl
or
push
xchg
fwait
push
sub
lods
dec
sub
stc
cmpsl
scas
lcall
add
ds
mov
inc
movsb
clc
mov
push
dec
dec
and
fcoml
inc
pop
push
js
xchg
mov
sbb
sub
mov
lahf
pop
roll
jg
pushf
xor
out
in
jo
mov
lds
xor
test
jb
ja
xor
mov
mov
decl
pop
push
ljmp
arpl
imul
mov
insb
xor
das
cli
push
jb
scas
cmp
jg
sub
lods
push
lret
sub
fadds
call
call
movsb
add
jb
loop
fiadds
mov
clc
lods
jecxz
push
cmp
inc
push
add
jmp
pop
and
stc
mov
call
ja
mov
or
dec
dec
mov
xchg
aas
or
dec
mov
insb
dec
inc
jmp
push
inc
or
xor
sbb
pop
mov
rcll
mov
xor
or
stos
neg
int
mov
call
call
xlat
xor
imul
xor
dec
rorl
inc
mov
mov
inc
lret
mov
bound
xchg
iret
test
mov
mov
mov
clc
fs
incl
mov
adc
mov
std
hlt
and
out
mov
iret
mov
sub
jae
sub
push
icebp
sub
adc
jg
jmp
xchg
dec
and
repnz
das
and
push
or
mov
jge
mov
loop
movsb
xorl
xor
rcrl
ret
call
sub
xchg
fdiv
cs
out
mov
push
cs
scas
iret
pop
hlt
jmp
sbb
fistl
sbb
pop
mov
mov
jmp
nop
cltd
adc
xor
dec
in
mov
cmpsl
es
inc
push
push
lods
cmpb
mov
sub
jmp
cwtl
push
scas
add
cmp
js
fmull
andl
decl
outsb
jno
enter
add
sbb
push
jmp
hlt
push
daa
aaa
jmp
roll
mov
sbb
sub
sub
mov
pushl
mov
jg
repz
add
xchg
xor
ret
pop
loop
popf
mov
push
stos
sbb
popf
sar
out
inc
popa
sbb
clc
jns
hlt
das
stos
push
clc
inc
mov
icebp
mov
push
pop
cmp
dec
je
pop
loopne
adc
int
mov
jmp
out
shrb
dec
push
xchg
xchg
push
push
dec
int
adc
cwtl
jmp
jg
ljmp
sub
xchg
arpl
add
push
xchg
push
das
xlat
dec
add
jl
call
lock
xchg
ljmp
sti
jo
sbb
jmp
jnp
mov
push
out
pop
icebp
jmp
xchg
lret
xor
fdivs
ljmp
in
inc
cmp
mov
das
xor
in
sbb
sbb
jg
sub
decl
in
pop
repz
dec
push
in
into
sti
daa
cmp
jmp
int
xor
mov
lcall
das
ret
fists
sbb
fadds
sub
push
xor
stos
mov
nop
mov
pop
stos
stos
jnp
add
xchg
insb
sbb
outsl
jmp
xlat
fdivrl
sub
inc
pop
lds
cmpb
push
sub
and
stc
test
icebp
decl
mov
mov
cmp
fmul
xorb
lcall
lcall
xlat
push
in
fiadds
out
mov
enter
cmc
jmp
dec
daa
and
or
movsb
jbe
fimull
stos
jmp
out
lea
ds
call
mov
xchg
out
sub
adc
incl
test
dec
das
jno
dec
and
lcall
mov
pop
lcall
fcomi
bound
inc
sub
jl
daa
pop
inc
push
lcall
into
roll
sub
jbe
enter
ret
decl
mov
sub
outsb
cmc
jo
pusha
pop
mov
pop
stos
xor
or
incl
xor
hlt
inc
out
inc
shrb
jecxz
sub
xchg
imul
scas
fwait
test
lcall
outsb
dec
fistpll
add
sbb
add
jbe
add
mov
adc
andb
ficoml
xchg
lods
jb
aas
jb
lahf
shrb
or
out
push
push
fldt
dec
dec
jnp
pop
cmpl
jmp
cmp
aad
lds
adc
testb
repnz
pusha
incl
cli
loope
leave
fs
push
xchg
add
inc
aaa
addr16
inc
ja
in
lcall
push
push
aas
mov
test
js
mov
sub
pop
mov
mov
add
ljmp
outsl
pop
sbb
imul
dec
nop
shll
jg
mov
popa
in
xlat
kmovw
stos
dec
hlt
cmp
call
push
and
call
xchg
addb
icebp
adc
shll
jecxz
push
xchg
decl
testl
xchg
mov
and
mov
jb
pushl
pop
mov
pop
inc
aad
aas
test
notl
mov
out
fsubrp
cwtl
mov
mov
jmp
adc
test
sub
mov
loop
sub
in
decl
push
jp
lahf
add
cmpl
int3
insl
cmp
jg
mov
sbb
jg
xchg
ret
push
or
out
ss
dec
imul
icebp
adc
jmp
lret
xchg
rcrb
adc
fnstsw
es
lahf
jp
insl
test
es
pop
add
ja
jnp,pt
jge
out
lds
rcrl
ljmp
insl
jbe
add
inc
sahf
xor
jl
idivl
push
jno
mov
inc
ljmp
rclb
mov
adc
xor
mov
jg
cltd
push
icebp
and
jge
dec
ret
jg
push
and
in
mov
pop
sub
imul
or
imul
fdivr
call
pop
rcr
testb
jge
lret
orl
dec
mov
cmp
jno
mov
mov
fmulp
inc
nop
cmp
dec
xchg
or
ljmp
pop
in
push
dec
or
sub
dec
gs
xorb
decl
push
ss
loop
sti
in
mov
loopne
xchg
fdivrl
add
jno
ljmp
loopne
dec
std
add
sahf
adc
dec
jbe
lret
adc
test
clc
push
mov
aam
ljmp
push
call
fwait
jnp
dec
rorl
sub
rolb
lds
push
xchg
cli
jb
call
mov
dec
jl
and
cli
pop
lock
pop
fmulp
outsb
movsb
mov
in
lahf
dec
xchg
pushl
int3
lods
xor
cli
ds
fdivs
xor
das
dec
std
je
mov
imul
add
dec
aaa
and
cmpl
inc
or
das
nop
pushl
in
xor
leave
bound
sbb
or
mov
scas
cli
sti
popa
cld
popf
and
push
and
xchg
push
test
std
aam
jle
inc
fisubrl
ljmp
jnp
test
fstps
mov
push
imul
icebp
int
call
push
mov
pop
out
sahf
das
sar
ffree
sub
sub
popa
inc
mov
inc
jmp
out
int3
adc
ljmp
outsb
inc
loope
add
repnz
sbb
int
pop
cs
aad
add
in
or
lcall
xlat
idivb
scas
adc
mov
bnd
push
outsl
jno
jle
push
mov
jmp
sub
cmp
pop
enter
dec
fdivs
fsubrs
negb
js
push
pop
in
lcall
mov
adc
jp
ret
in
insl
sbb
out
sbbb
and
jmp
and
push
mov
test
pop
in
daa
lahf
in
daa
aam
cs
sahf
sbb
ret
jp
sbb
decl
int3
ljmp
push
cli
mov
les
or
dec
push
mov
mov
int3
test
andb
mov
iret
scas
pusha
push
pushl
inc
sub
add
pop
add
sarl
cmp
test
pushl
cwtl
dec
scas
in
jle
xlat
mov
mov
shlb
outsb
and
clc
jecxz
movsb
dec
fsubrl
fidivl
divb
or
mov
lea
dec
and
inc
inc
dec
sbb
pop
inc
das
cli
mov
stos
call
xor
inc
jmp
add
mov
mov
ja
int
test
cmpsb
dec
ror
and
packssdw
cwtl
mov
loop
call
loop
movsb
mov
roll
int
idivb
cmpsl
xor
ljmp
jb
dec
mov
push
insb
fnstenv
mov
add
scas
mov
inc
ljmp
clc
mov
les
mov
jl
inc
mov
jg
mov
jle
push
dec
dec
into
outsb
push
push
sub
adc
inc
test
lock
mov
ds
pop
sti
pop
and
push
mov
lock
pop
adc
cld
mov
aam
ret
sar
and
jg
push
jle
into
movsb
repz
push
pop
loop
hlt
or
clc
push
imul
mov
adc
movsl
lahf
cmp
xchg
stc
xchg
scas
stos
insl
out
pop
xor
loop
and
pushl
and
mov
xchg
sub
jno
pop
dec
sub
xchg
out
jne
push
and
bound
pop
mov
inc
pop
rclb
test
mov
ds
jns
repnz
mov
mov
jge
clc
pusha
cltd
cmpsb
sub
jbe
imulb
and
outsb
dec
dec
sub
decl
divb
and
or
sbb
pop
adc
mov
ficoml
shr
push
imul
cmp
adcb
or
cmc
pop
sub
mov
lods
inc
pop
fistpll
popf
ror
aas
data16
sarb
xchg
mov
mov
add
scas
shrl
dec
jne
decl
in
popf
add
inc
jno
mov
sub
mov
mov
aaa
dec
pop
loop
into
cmpsl
push
cmp
aam
cld
clc
pop
pop
xlat
add
ljmp
je
insl
popf
and
daa
mov
cwtl
rcrb
inc
data16
imul
pop
int
mov
pushl
mov
sub
ja
mov
xlat
mov
movb
and
ss
push
adc
mov
or
jae
das
ret
lds
sub
xor
or
pop
incl
pop
imul
mov
or
lahf
xchg
xor
pop
data16
mov
mov
mov
into
cmpsb
movnti
xchg
cwtl
mov
push
mov
lods
js
or
push
call
std
and
cltd
jge
dec
mov
jle
fwait
imul
mov
repz
dec
push
decl
xor
xchg
shr
out
adc
lods
out
adc
js
adc
push
fnsave
popa
sbb
push
inc
testb
cld
fsubl
mov
lcall
cmp
xchg
dec
pop
mov
sahf
sahf
out
mov
jmp
lcall
rcr
inc
rolb
cmp
rorl
jecxz
pushf
insb
mov
xor
inc
loopne
lcall
js
cmpsl
jbe
xchg
fcmovb
ja
sub
mov
pop
into
fs
jbe
lock
js
pushf
insl
sub
lock
xchg
dec
xor
jbe
xlat
and
jl
jl
pop
pop
dec
lock
icebp
pusha
incl
pop
sti
inc
sub
dec
xor
adc
ljmp
stos
add
movsl
sub
stos
arpl
inc
cmp
cwtl
xchg
xchg
pop
and
push
into
jp
mov
mov
clc
pop
or
nop
jae
sahf
mov
dec
xlat
in
cmpsl
cs
sbb
cwtl
lods
inc
or
mov
inc
scas
pop
jnp
push
popa
inc
xorb
xor
cs
decl
cmp
sbb
push
push
jp
inc
cwtl
add
and
lea
push
mov
dec
rcrb
jnp
idiv
call
mov
adc
fisubrl
pop
and
adc
dec
test
jmp
test
or
loop
test
inc
add
aas
repz
cmp
ljmp
mov
testb
mov
jo
inc
sub
cmp
sub
jg
add
sub
adc
movsb
mov
inc
jno
pop
lahf
xchg
push
in
es
pushl
xchg
xchg
xchg
sahf
mov
jno
or
imul
mov
dec
mov
adc
clc
dec
xor
repz
pop
lret
and
inc
cld
arpl
idiv
out
lcall
or
and
jbe
sub
psadbw
xor
add
imul
in
adc
pop
cmp
pop
lock
fwait
popf
jnp
xor
jle
push
xor
mulb
cmp
test
inc
js
les
iret
movsb
cmp
cltd
xchg
mov
sub
fcomip
incl
flds
cmp
lods
enter
add
mov
mov
fildll
mov
sbb
call
jo,pn
outsl
mov
decl
push
std
into
out
in
std
cmp
mov
pop
das
jbe
cmp
sbb
jae
mov
xor
jnp
xlat
sub
push
xchg
sub
pop
or
and
pop
dec
hlt
cmc
mov
scas
call
lds
daa
sub
dec
sub
and
add
stos
filds
and
sub
jp
shll
sub
lcall
inc
jmp
cmp
inc
ds
mov
pop
lods
pop
mov
add
cmp
call
in
mov
shll
in
push
sysexit
mov
sbb
or
std
mov
pop
je
mov
scas
pop
mov
or
add
decl
pop
push
dec
rclb
inc
cltd
insb
and
test
lds
cmp
incl
jne
cmp
xor
subb
rclb
out
mov
and
ljmp
loop
adc
movsb
sbb
les
mov
jmp
scas
mov
jnp
test
lcall
out
sarb
xchg
jns
mov
sub
sub
adc
insb
ljmp
pop
pushl
leave
add
call
icebp
leave
aas
inc
fimull
cmpsl
jmp
cmpsb
pusha
scas
in
loop
push
pusha
bound
mov
dec
repnz
adc
repz
jmp
loope
rorb
test
jmp
cmp
jnp
sti
daa
and
sbb
xor
xchg
notb
pop
and
decl
aaa
pop
pop
inc
mov
movsb
adc
mov
incl
mov
jle
dec
xchg
xchg
mov
push
in
leave
fmull
sub
push
cmp
push
jns
sahf
fwait
and
jle
lcall
pop
xchg
xor
shll
cmp
lcall
or
pop
and
fsubrs
dec
ljmp
and
cmp
shlb
shr
mov
push
adc
ret
loope
es
nop
pop
sarb
mov
dec
ss
pop
pushfw
jle
inc
call
jl
sbb
call
int
lret
mov
mov
lcall
xlat
dec
xor
add
inc
pop
std
cmp
jp
inc
add
inc
out
leave
add
pop
mov
sbb
divb
sub
das
adc
ljmp
sub
cmp
xchg
or
xchg
dec
inc
and
negb
in
sub
sarl
inc
ret
mov
and
ljmp
inc
cli
fcomi
loopne
or
pop
int
jnp
das
adc
pop
lods
jmp
cmp
call
cmpsb
sub
lods
xchg
mov
xchg
jmp
test
sbb
movsb
jg
add
add
push
sub
push
mov
incl
adc
mov
sbb
orb
inc
mov
decl
xor
cmp
sbbb
jle
fcomps
pop
adc
add
jle
push
xchg
loope
cmp
rcl
and
mov
pop
push
into
in
das
repnz
scas
std
movl
inc
push
ljmp
sarl
in
js
jle
mov
repz
fwait
mov
or
call
ds
or
fimuls
inc
xor
adc
or
cmp
fs
lcall
add
sbb
imul
imul
clc
fcompl
lock
jg
call
call
call
and
aaa
ds
scas
jmp
add
mov
aad
mov
scas
sarl
cli
cli
inc
sub
mov
call
dec
cmpsb
loop
rcll
mov
aam
jae
lcall
aaa
cmp
inc
inc
sbb
cmp
xchg
popa
dec
fmuls
dec
int3
mov
push
jbe
call
lods
sub
inc
jg
xchg
cmp
xor
movsl
es
cli
clc
cmpsb
flds
in
decl
sub
adcl
inc
dec
mov
aad
jnp
mov
pop
aaa
fdivp
incl
lcall
movsl
cmc
pushf
lods
push
les
mov
mov
fildll
push
push
hlt
test
push
add
enter
in
sbb
jnp
adc
aaa
std
push
mov
adc
mov
hlt
jmp
pop
jae
and
cmc
add
dec
xchg
loop
mov
jno
lret
jmp
lret
cmp
dec
push
sub
sub
xor
mov
loope
ret
mov
aas
xchg
mov
dec
sub
sub
jo
mov
movzbl
ror
decl
jecxz
mov
lahf
scas
daa
add
pop
cli
inc
xchg
ds
cli
testl
movsl
add
or
cli
fadds
cmpsl
lea
test
dec
sbb
mov
push
jle
jae
pop
ljmp
pusha
push
js
das
jmp
sub
ss
add
mov
ljmp
inc
popf
lcall
dec
test
loope
dec
pushf
inc
cmp
mov
inc
lcall
lds
pop
fnsave
jge
int3
sbb
adc
add
or
leave
xchg
aaa
icebp
xor
pop
cmp
lret
pop
out
sbb
inc
stc
xchg
int3
pop
inc
faddl
mov
adc
scas
push
out
lret
adc
mov
xlat
jle
outsl
ljmp
mov
lahf
xchg
xchg
mov
sub
pushl
inc
mov
aaa
dec
cmpsl
sub
mov
xchg
sub
in
aas
lcall
lods
stc
push
mov
mov
in
loop
push
negb
push
negb
jmp
lods
xlat
arpl
fadds
push
iret
outsb
insl
inc
xor
adc
jp
loope
mov
pushl
call
push
je
ret
lret
in
imul
int3
enter
call
nop
mov
pop
add
int3
and
sbb
sahf
test
push
je
addr16
xor
dec
jbe
pop
outsb
and
mov
mov
cmp
push
jg
and
mov
in
fstpl
fwait
pop
mov
adc
cmp
sub
sub
push
xor
ret
xorb
into
ja
cltd
pop
and
inc
pop
cmc
xchg
mov
cmp
push
pop
xchg
ljmp
fsub
dec
mov
sub
in
add
sub
and
xchg
and
sbb
enter
jl
daa
cmp
or
imul
push
dec
fdivl
les
call
out
adc
adc
cs
pop
pop
ret
ljmp
xor
data16
je
call
pop
lcall
les
mov
cmc
jl
ljmp
sub
push
cmc
aam
lret
sbb
jb
and
loopne
flds
xchg
adc
xchg
xor
cmp
int
ljmp
inc
xor
mov
jb
ss
and
shl
pop
mov
icebp
mov
stos
and
ljmp
int
movq
mov
call
and
mov
ficoml
bsr
mov
dec
dec
jmp
in
push
mov
lahf
mov
popa
daa
mov
mov
cli
push
insl
into
imulb
sub
insb
jg
ljmp
test
fnstenv
cmp
push
int3
inc
outsl
dec
test
pop
mov
scas
mov
push
sahf
cli
xchg
in
xchg
lds
idivl
xchg
xchg
in
cmp
jp
jbe
ror
je
jg
or
loopne
ret
in
dec
in
xchg
ficoml
pop
roll
mov
jle
lcall
sbb
sub
jb
mov
push
js
test
lcall
cld
inc
iret
mov
mov
rcrl
mov
sub
lods
jmp
mov
lock
incl
iret
inc
cmp
testl
sbb
shrb
inc
pusha
jae
lcall
fnsave
sarb
dec
scas
fs
fs
mov
fcoml
clc
std
popa
shrl
loopne
fisttpl
adc
repnz
adc
insl
pop
hlt
loopne
in
mov
andl
lods
adc
cs
or
xchg
imul
mov
sti
fmulp
mov
push
xor
movb
xchg
fisttpl
mov
scas
push
cmpsb
loopne
add
jmp
cmpsl
shl
pushf
gs
sbb
adc
arpl
call
mov
decl
or
arpl
mov
aad
cmpsl
push
push
sbb
jnp
cmp
mov
mov
sbb
dec
sub
cld
testb
addr16
lcall
jnp
pop
cmp
cmp
mov
sahf
and
mov
jbe
ja
std
add
push
loopne
mov
js
cmc
push
cli
push
xchg
cli
mov
ret
and
xchg
jl
jo
jg
xchg
cmpsb
lret
or
jle
or
call
pop
pop
cld
int3
mov
cli
xor
ljmp
loope
xor
add
inc
js
andl
adc
fildl
test
subl
andl
or
mov
daa
inc
xchg
jno
inc
pop
insb
iret
sbb
in
fisttpll
ss
sti
mov
mov
mov
sub
ret
jae
inc
cs
inc
adc
push
jecxz
clc
mov
jmp
cmp
mov
and
sub
cmp
adc
push
sbb
mov
ljmp
fcompl
fists
xchg
stos
mov
fdivrl
lahf
or
arpl
lods
cmpsb
aas
push
in
cmp
test
pushl
cmpsb
aam
insb
or
nop
and
mov
push
and
add
push
cld
and
test
xor
cld
pop
mov
nop
cwtl
cmpb
idiv
aam
in
cmpsb
adc
hlt
inc
dec
dec
into
outsb
dec
push
xlat
jl
xchg
xor
cmp
lcall
sub
movsb
mov
mov
fs
shrb
faddl
adc
les
test
mov
push
sarl
jp
addr16
cmp
incl
push
mov
cltd
and
cmp
ljmp
fmuls
ret
movsl
sbb
pop
sub
daa
and
push
fnsave
ljmp
push
jle
push
sub
xchg
jnp
scas
jmp
pop
test
xor
pop
lods
js
xchg
xchg
test
enter
incl
aaa
nop
xchg
dec
aam
sarl
aam
pop
scas
sub
push
int
cmp
stos
cmpl
or
stos
push
sbb
pop
sahf
sbb
ljmp
jne
dec
mov
mov
in
sub
pop
push
roll
sahf
cmpsl
inc
sub
or
mov
mov
stos
in
dec
or
fsubr
xor
pop
sub
dec
arpl
xchg
ljmp
mov
lcall
push
dec
js
repnz
adc
mov
cld
lcall
repz
add
repz
decl
les
aad
xor
jle
pop
mov
lcall
sarl
loopne
js
and
loope
jmp
iret
xchg
mov
pop
pop
push
insl
call
pop
std
pushl
lret
hlt
iret
ja
lea
mov
sub
es
lods
sbb
mov
inc
or
add
mov
aaa
add
push
add
mov
cmc
xabort
mov
test
icebp
pushl
cltd
loope
test
mov
dec
mov
shrb
mov
mov
incl
mov
pop
nop
cmp
mov
push
and
and
test
loopne
push
jl
inc
pop
pop
std
test
pop
cmp
dec
repz
add
push
test
pop
mov
cmpsb
adc
in
sub
cld
es
loopne
sub
mov
jno
adc
fistps
dec
test
jg
mov
test
loop
lcall
cmp
mov
outsb
cs
inc
testl
mull
in
push
and
nop
mov
rcrl
cld
xor
nop
hlt
inc
jge
xlat
cmp
push
xor
jnp
ficoml
mov
pop
idivl
mov
test
cmpsl
gs
pavgw
lcall
gs
mov
or
xor
and
xor
jmp
outsb
add
jmp
sbb
mov
jle
shll
dec
jp
std
pop
sbb
mov
push
mov
enter
xchg
push
jmp
adc
sti
or
in
add
dec
cltd
push
adc
ss
aam
mov
fldt
imul
jl
sbb
mov
rorb
sub
mov
movsb
jbe
pop
mov
sub
out
mov
dec
pop
xchg
cmp
mov
jns
mov
cmc
daa
lea
push
jg
jo
jg
test
push
movsl
sbb
jmp
sbb
pop
push
fs
inc
adc
and
pop
sti
faddl
mov
xchg
push
push
and
push
add
xlat
jp
lahf
and
fcmove
pop
and
pop
pop
mov
call
xor
loope
icebp
movsb
pop
cmp
repnz
jmp
leave
or
call
in
inc
call
jnp
stc
test
mov
xchg
adc
out
inc
mov
sar
call
mov
sbb
lahf
test
jo
je
xor
leave
add
inc
lret
mov
xor
jmp
pop
cli
and
outsl
in
sbb
jns
or
out
xchg
xchg
xchg
or
fcmovnb
mov
ret
enter
mov
mov
xchg
shrl
clc
mov
jbe
out
pushf
cld
inc
adc
xchg
insl
and
dec
inc
push
rolb
inc
lahf
adc
in
mov
push
jae
jl
daa
push
adc
add
clc
fsts
sti
mov
aas
cs
jmp
aaa
scas
cld
in
cmc
xchg
push
sbb
pop
cmc
cmc
add
cmp
xchg
fstpt
mov
clc
cld
call
sub
pop
test
inc
and
push
lds
cmp
push
push
movsl
icebp
scas
clc
jmp
lret
pop
inc
js
sbb
pop
stos
add
aas
ds
mov
subb
or
js
sbb
call
clc
lcall
sbb
cwtl
and
dec
pop
insb
dec
pop
frstor
aam
out
incl
jmp
test
dec
data16
push
push
pop
addr16
or
jbe
decl
imul
cmc
mov
cmp
aam
hlt
stos
fisubl
pop
cs
stos
bound
js
inc
testb
fidivl
mov
lods
cmp
not
lock
shrl
int3
jge
xor
dec
fisubs
mov
outsb
mov
cmp
icebp
xor
jmp
mov
lea
cwtl
scas
mov
or
add
pop
xor
clc
dec
inc
jg
or
adc
and
outsl
lahf
int3
dec
add
dec
mov
xlat
jp
stos
mov
lahf
scas
mov
cmp
sarb
test
call
mov
and
jnp
pop
into
jae
dec
rorb
std
pop
pop
scas
inc
lcall
cwtl
push
test
sub
add
pop
pop
inc
int3
pop
pushl
add
xchg
cld
add
shr
sahf
mov
cld
gs
fsubs
in
sbb
cs
lcall
inc
adc
dec
mov
pop
cmpsl
pop
out
or
loop
push
mov
lcall
loop
popa
loopne
inc
and
ja
adc
lcall
aad
ljmp
xchg
sarb
stos
jno
push
cmp
aam
int3
sbb
lock
mov
ljmp
push
sub
cmp
push
mov
sbbl
inc
std
mov
sti
cld
mov
pop
jecxz
fs
ds
cmc
xchg
xor
mov
cmp
adc
incl
mov
pop
xchg
sub
mov
push
mov
push
and
outsl
cwtl
cmp
dec
add
ret
cmpb
mov
leave
inc
xchg
jo
xchg
jne
in
jg
in
enter
push
push
lea
sub
mov
cmp
sbb
pushl
mov
inc
push
jae
movsb
and
or
lret
in
popa
fidivrs
jmp
dec
neg
lcall
xor
clc
rclb
pop
cs
sbb
insb
jmp
dec
adc
xchg
repnz
or
pushl
jno
jecxz
rcrb
sbb
jg
loop
test
pop
rol
xor
jns
cmp
out
js
push
and
cs
pop
lahf
pop
cmp
stos
or
call
sti
popa
out
out
inc
stos
push
fs
orb
stc
jp
loope
pop
aaa
pushf
cmpsb
inc
fstpt
stc
cmp
incl
cmp
mov
xor
push
xor
sbb
mov
pop
cmp
pop
lcall
dec
movb
sub
or
test
sub
popa
and
out
adc
rcll
decl
mov
in
and
xlat
cmp
incb
leave
cmp
or
mov
testb
jns
xchg
mov
ret
cmc
pop
ret
leave
adc
lret
xor
sbb
pop
repz
mov
cmp
icebp
mov
inc
sbb
xchg
mov
sub
scas
clc
mov
push
out
push
int3
enter
or
jno
mov
movsb
lret
xchg
cmc
push
xchg
cld
lcall
xor
cli
xlat
nop
push
dec
lds
std
add
jge
mov
mov
jnp
hlt
outsl
xchg
cmpb
cmp
gs
or
push
ret
sbb
xor
sbb
pop
cmpsb
inc
mov
cmp
mov
fstpl
and
sbb
sarl
push
sahf
pusha
repnz
cmp
cmp
cmpl
xchg
mov
lcall
addr16
mov
mov
out
cli
cli
jecxz
fidivl
nop
mov
repnz
lods
pop
or
rcrb
lcall
mov
ds
aaa
je
pop
pop
jno
jnp
push
sbb
inc
push
mov
or
lahf
jae
mov
sub
fs
mov
pop
fsubr
jecxz
dec
movsb
push
in
add
mov
jg
mov
shll
inc
dec
fnsave
test
and
and
roll
jg
dec
dec
jmp
mov
lods
mov
cmp
cmp
loop
pop
gs
outsl
cld
popa
xchg
pushl
pop
mov
sahf
dec
pushl
dec
or
push
shrb
inc
inc
daa
mov
lcall
gs
ds
and
shlb
fstps
xchg
xor
daa
xor
movsb
js
dec
out
push
arpl
test
shl
push
in
xor
pop
mov
xchg
dec
mov
les
scas
jno
jg
and
mov
push
cs
dec
xchg
js
adc
cmp
mov
push
dec
add
ret
int
mov
sahf
addb
cmpsl
xchg
jmp
lds
addr16
or
call
lea
mov
out
cwtl
leave
test
outsl
inc
insl
mov
test
ret
inc
mov
stos
mov
dec
out
push
pushl
adc
nop
movsb
push
dec
pop
and
mov
imul
pushl
adc
adc
aam
mov
mov
addb
movsl
stos
jg
and
fisttpll
sub
adc
cltd
mov
xor
ret
stc
pop
incl
outsl
sbb
cmp
insb
shl
lcall
push
push
call
add
mov
or
inc
or
cmpsb
lock
insl
mov
mov
movl
inc
aad
pop
sar
add
xchg
incl
rcrb
loope
rcrb
dec
arpl
inc
fdivr
call
mov
scas
push
negl
ret
scas
adc
mov
sbb
adc
mov
push
sbb
stos
pop
adc
clc
stos
adc
inc
cmp
or
mov
sbb
inc
push
mov
dec
cli
movsb
ret
fcmovnu
stc
inc
orl
ss
inc
fiaddl
jl
call
xchg
iret
fwait
insb
imul
testb
stos
inc
ret
hlt
ret
mov
arpl
ljmp
testl
daa
stos
pop
jp
std
pop
aam
xchg
hlt
mov
pop
sub
shlb
push
push
push
cwtl
adc
pushl
cld
dec
std
loope
mov
mov
jno
push
add
mov
ret
movq
lcall
iret
dec
subl
xchg
mov
bound
xchg
jne
imul
dec
and
sahf
mov
sbb
sub
clc
sbb
les
mov
dec
sub
stc
dec
sub
scas
cli
add
xor
cli
mov
cwtl
or
paddq
pushl
xchg
jg
cmpsb
pop
add
ret
push
mov
subb
pop
scas
ljmp
cmp
jg
sub
add
jg
pop
repnz
mov
adc
ud0
incl
leave
cmpsb
push
jge
arpl
xchg
adc
inc
sbb
xchg
cmp
inc
insb
mov
loop
scas
movb
add
lods
pop
jmp
mov
test
push
sub
outsl
out
sub
cli
mov
lds
int
bound
addb
jge
call
inc
cmpsl
push
pop
cltd
inc
popa
ficoms
ds
gs
lods
lock
sbb
sbb
dec
cmp
jae
mov
loope
adc
popa
insl
fistpll
push
stos
adcl
jne
inc
test
aad
sub
repz
pop
clc
gs
jne
jmp
nop
and
cmp
sbb
sbbb
jmp
ret
cli
dec
jecxz
arpl
xor
insb
popf
std
rcrl
adc
adc
ja
inc
sub
cmp
out
xchg
add
lret
loopne
test
call
ss
xchg
loopne
ljmp
mov
inc
sub
stos
jbe
xchg
pushl
adc
es
imul
out
push
test
loop
incl
cltd
push
loop
ja
or
mov
stc
inc
xchg
xchg
dec
mov
push
mov
in
mov
push
mov
insl
dec
int
add
int3
push
cld
adc
jg
pushl
and
sbb
icebp
rol
jb
daa
jne
or
lds
lahf
pop
sar
lcall
aad
mov
iret
pop
adc
jne
adc
outsl
and
jg
mov
out
nop
in
mov
jge
pop
push
mov
ss
cmp
fcomip
call
ja
sub
lahf
adc
cmp
dec
inc
int3
sbb
mov
cli
xchg
decl
jle
pop
mov
loope
pushf
and
mov
mov
sub
xchg
jmp
add
lods
mov
sub
sub
and
xor
cltd
stos
pop
bound
adcb
loop
lcall
rolb
js
enter
lock
idivb
pusha
push
aaa
sbb
in
push
mov
push
mov
xchg
or
push
lock
jg
in
gs
push
cltd
dec
jo
movsb
or
call
das
xorb
jl
nop
lods
jbe
std
push
hlt
adcb
adc
test
jns
out
ljmp
cltd
sahf
jmp
clc
push
pop
icebp
push
push
out
cmp
xor
pushf
fadds
pushl
or
notl
jno
sub
shlb
push
adcl
cmpsb
mov
pusha
jmp
rolb
lahf
jno
sub
pushl
and
shrb
add
into
ficoms
adc
add
sahf
xchg
mov
lcall
push
std
loop
cmp
cmpsb
mov
mov
fs
or
addr16
fsubrs
mov
xor
or
loop
cmc
push
inc
inc
fwait
push
cmp
data16
lcall
addr16
hlt
or
xchg
push
outsl
cld
cmp
jne
pop
lds
mov
fs
lds
and
imul
mov
pusha
arpl
movsb
in
jmp
jecxz
jmp
mov
sbb
loope
adc
jns
and
ljmp
mov
xor
adc
jbe
pop
pop
mov
xchg
and
dec
xor
cmpb
idiv
inc
fnstenv
popa
push
outsl
call
or
xor
lret
push
jl
push
ja
call
mov
pusha
pop
mov
mov
mov
ljmp
fisttpl
sahf
jbe
xor
sahf
jns
adc
out
sbb
inc
insb
in
out
lock
adc
jmp
mov
lret
add
je
adc
jno
xor
ljmp
fcmovu
mov
std
in
mov
add
add
dec
shll
call
pop
decl
lds
mov
subb
pushf
sbb
pusha
push
push
sbb
into
adc
xchg
in
outsb
lods
out
popf
mov
jmp
add
std
aas
rclb
adc
lret
inc
jbe
xor
jmp
dec
cwtl
stc
sub
es
push
stc
out
jmp
mov
ss
dec
cmc
into
jae
sbb
je
ds
enter
rcr
int
pop
mov
out
mov
repz
outsl
xchg
hlt
rorb
data16
mov
sbb
test
call
std
lcall
out
fsubrs
add
in
mov
imul
add
or
cmp
movsb
push
pop
jge
mov
das
mov
adc
xor
jnp
and
cmp
xchg
pop
or
cmp
fwait
test
orl
pop
xchg
ja
cmp
mov
aam
sbb
dec
cmp
in
test
loop
addl
xor
call
mov
sbb
and
fs
push
cli
outsl
incl
dec
push
push
stc
mov
push
iret
pop
shlb
push
sti
popf
add
es
in
mov
xchg
jae
adc
aam
xchg
lods
test
and
adc
outsb
arpl
and
int
mov
pushl
dec
ret
mov
dec
jb
movb
pusha
subb
clc
pop
cwtl
call
popa
ja
pop
rcll
and
aam
or
jbe
ret
dec
je
cmp
jmp
jle
dec
rcll
cmpsb
xchg
js
fists
adc
ret
sub
ljmp
mov
hlt
mov
dec
jg
dec
push
push
mov
mov
fidivl
hlt
jl
lcall
call
repz
out
icebp
mov
mov
sub
pop
fsts
mov
repz
stos
lret
mov
addr16
fldenv
dec
fnsave
add
add
mov
loop
hlt
pop
push
inc
mov
add
xchg
outsl
inc
roll
add
jg
cmp
inc
xchg
xchg
add
ljmp
ja
sub
inc
scas
test
xor
into
pop
inc
ds
dec
nop
jae
cmp
call
dec
in
mov
out
sbb
pop
lcall
xchg
jmp
in
frstor
dec
data16
cmp
clc
cmpsb
ficoml
jno
ds
pop
ljmp
inc
ljmp
add
cmp
pop
mov
js
sahf
sub
add
dec
lcall
es
pop
call
std
mov
sub
pop
lock
stos
add
add
repnz
clc
add
call
pop
push
outsb
push
sub
sub
fs
int
push
and
lcall
imul
loop
mov
arpl
sub
and
push
scas
cmc
inc
outsl
push
test
sub
stos
cmp
pop
out
inc
pcmpgtb
mov
fists
clc
push
lock
dec
int3
mov
in
cmp
lea
je
sti
rcr
jg
jmp
dec
push
dec
add
je
jmp
popf
shl
inc
mov
movsb
mov
cmp
icebp
decb
lock
dec
mov
lahf
inc
and
cmpsl
mov
and
jp
icebp
incl
xchg
test
push
bnd
repnz
mov
ds
or
addr16
js
pop
mov
mov
fstl
lcall
fwait
addr16
imul
pushf
inc
xchg
mov
jmp
push
push
pusha
dec
mov
dec
xchg
cmp
xor
lret
aas
imul
stos
testb
decl
addr16
clc
addr16
mov
sub
imul
cwtl
xor
incl
daa
inc
or
pop
mov
in
out
addb
mov
fistl
push
fimull
incl
jo
xor
cmc
adc
repz
dec
les
sbb
mov
jbe
xchg
sub
decl
xor
outsb
adc
lods
nop
xchg
int3
outsb
imul
mov
popf
pop
mov
sbb
sub
ljmp
inc
pop
mov
push
inc
mov
hlt
mov
push
mov
clc
push
pop
push
pushf
cmpb
ljmp
inc
and
out
in
popa
mov
pop
out
jl
and
out
lcall
cmc
test
orl
sub
inc
arpl
fnsave
call
cmp
rcrb
sub
adc
jbe
mov
jae
in
call
mov
aam
pop
and
repnz
outsl
test
ss
dec
dec
adc
in
add
imul
jmp
jl
mov
xchg
dec
loope
pop
call
fstl
lret
mov
js
pusha
scas
jbe
fs
std
fst
sarl
lcall
test
sahf
or
jmp
inc
jo
xchg
outsb
insl
push
int3
test
lret
xchg
cld
dec
roll
incl
jmp
scas
popa
add
mov
adc
mov
add
lcall
mov
xchg
cwtl
dec
loopne
ss
mov
jecxz
js
push
or
int3
dec
decb
out
stos
rcrl
dec
cmpsb
test
sbb
fiadds
adc
xchg
sbb
or
pop
call
and
push
ss
inc
mov
repnz
mov
sub
fcomi
jl
dec
stos
mov
adc
pushl
popf
xchg
sub
xorl
cmp
mov
mov
call
pop
inc
jle
xchg
push
push
inc
sti
mov
test
mov
pop
cmpsl
shrb
data16
push
inc
jp
add
inc
push
and
pop
clc
push
xchg
bound
jo
fcompl
push
adc
lcall
xchg
adcb
pop
sahf
xchg
les
sub
insb
pop
xor
xlat
in
int
shlb
mov
xlat
shll
je
or
aam
dec
sbb
rorb
xchg
xor
mov
push
and
jne
cmp
sti
inc
sub
push
test
fwait
mov
ficoms
in
int
popa
aam
push
fdivr
ljmp
inc
pusha
test
push
xchg
push
fbld
pushl
dec
nop
sarb
xor
and
outsb
add
mov
adc
aam
imul
mov
and
fisubrl
int3
jnp
shrb
mov
and
push
aas
cltd
int
clc
pop
fs
pop
imul
ja
sub
adc
popf
mov
popf
shll
pop
int3
lret
call
sbb
arpl
dec
push
into
adc
jns
insl
xchg
push
mov
lcall
fldenv
mov
aaa
leave
xchg
int3
add
ja
jae
push
lods
xor
mov
dec
rcrl
jmp
lock
test
out
xor
or
movsl
fildll
shl
jecxz
inc
mov
push
scas
lods
xor
call
jg
rcrl
mov
mov
sahf
dec
mov
sarb
lret
cmp
ljmp
or
jmp
jmp
adc
les
iret
pop
repz
cmp
gs
xchg
mov
sbb
pop
sub
arpl
adc
js
push
mov
push
stc
mov
push
aad
add
movsl
xchg
cmp
mov
out
dec
daa
mov
test
mov
clc
or
add
sbb
xor
movsl
in
adc
push
jmp
mov
dec
icebp
mov
ja
out
pop
and
stc
repz
pop
xchg
jne
mov
cmp
sbb
ds
xor
in
in
imul
jp
ss
dec
aas
std
fstpt
gs
inc
lds
lods
mov
xor
xor
inc
decl
nop
sahf
flds
cmp
shll
data16
xchg
roll
lock
jne
mov
mov
mov
jno
stos
sub
mov
ds
cld
jns
jp
scas
and
movsl
dec
fdivrp
notl
in
push
push
imul
cmp
lcall
jge
jne
jnp
into
dec
out
cmp
out
enter
fbstp
xor
lea
shlb
mov
lcall
mov
das
dec
nop
jmp
shll
or
mov
jmp
pop
scas
cmpsb
fbld
push
aaa
xor
xor
daa
call
fnstenv
loopne
dec
std
les
jecxz
ret
lea
sbb
push
jp
and
orb
jg
xor
and
xor
xchg
mov
fs
xchg
and
ljmp
cli
pop
dec
cmpsb
stos
int
cmp
gs
test
and
cmp
or
call
cltd
adc
xor
jno
cli
cmp
cmp
lock
inc
mov
lods
pop
notl
bound
sbb
push
loop
push
jo
sub
outsl
adc
jge
test
mov
jg
jo
adc
mov
and
cmp
push
pop
and
add
sti
pop
incl
inc
pop
xchg
fistps
outsb
sub
jns
sbb
incl
je
mov
xchg
lods
mov
mov
and
into
mov
or
xchg
daa
or
inc
aam
hlt
mov
sahf
leave
pop
lods
faddl
mov
out
jg
ljmp
je
inc
sub
cld
add
dec
mov
out
imul
cli
mov
mov
aam
ljmp
jae
adcb
fisttpll
pop
pop
pushl
fidivrs
and
add
mov
aam
sub
add
mov
jae
stc
push
cmp
mov
adc
pop
movsb
inc
push
xchg
adc
loop
inc
xchg
nop
jae
cmp
idiv
decl
inc
pop
sbb
mov
cltd
xchg
outsl
dec
inc
fldenv
mov
push
in
sbb
andl
push
das
jecxz
mov
push
or
gs
mov
mov
pop
jle
dec
dec
loope
test
decl
push
int3
es
out
xchg
nop
pop
dec
jge
out
rorl
jb
out
into
test
mov
xchg
out
jecxz
clc
xor
jg
insb
movsl
jne
shll
mov
fldt
div
push
push
cmp
arpl
cmp
jmp
ljmp
push
pop
loop
ret
call
int3
xor
and
xor
mov
jb
aam
xor
loop
pushf
int3
and
pop
pop
cwtl
cwtl
gs
decl
out
sbb
jb
xchg
pusha
jno
lds
push
adc
ljmp
lret
sar
loope,pt
jp
repz
in
pop
mov
mov
je
mov
sub
fnstcw
and
in
lret
rorl
cmp
lret
jbe
pushl
icebp
add
lret
int
xor
clc
push
popa
add
ret
pushf
leave
cmpsl
incl
mov
subl
ljmp
jg,pn
ficoml
idivb
fiadds
addr16
daa
mov
fldt
incl
aad
cmpsb
jae
jb
dec
mov
and
xchg
mov
inc
pusha
jae
jle
pop
sub
xchg
mov
test
fcomip
out
icebp
popf
xlat
pusha
test
pop
push
push
sbb
adc
lcall
push
or
xchg
aas
sbb
out
and
sbb
pop
adc
aam
js
jmp
aam
jmp
dec
dec
rcl
hlt
outsl
xchg
xchg
arpl
sub
in
leave
cli
idiv
lcall
test
inc
movsl
in
and
dec
testl
sub
ds
ljmp
pop
jle
sbb
dec
dec
dec
into
mov
outsb
sub
icebp
cbtw
mov
ret
mov
mov
clc
pushl
fldenv
mull
inc
stos
dec
imul
dec
andb
cmp
stos
ds
cli
out
mov
push
rcrb
movsl
call
movsl
movsl
insb
sar
cld
inc
push
sahf
dec
mov
mov
push
clc
js
pop
in
pop
jg
aad
sti
and
je
sahf
xchg
mov
lods
js,pn
fcmovnbe
addr16
addr16
mov
aaa
shl
push
xchg
cmp
push
lahf
mov
fs
loop
cmp
cmpsb
cmpsl
scas
or
and
sub
mov
push
call
mov
sub
gs
ret
fsubl
pop
fistl
ror
push
inc
lods
mov
std
mov
sub
fwait
in
adcl
int
sub
push
into
daa
mov
mov
jmp
fnstsw
fadd
bsr
cld
cmpb
es
and
sub
pop
test
sbbb
pop
sub
sbb
or
pop
into
cwtl
bound
int
jg
aad
jle
in
ret
scas
jmp
js
jo
imull
incl
into
xchg
cwtl
mov
test
mov
mov
gs
fcoml
or
mov
fwait
insl
jl
stos
mov
cmp
loop
and
in
and
loop
mov
inc
stc
mov
pop
sub
mov
xchg
xchg
cmp
mov
int
jmp
xlat
xchg
fidivrs
cmpsl
cmc
loopne
out
outsb
inc
test
insb
dec
jns
dec
add
les
fstps
xchg
dec
push
cmc
xchg
sti
test
in
mov
sbb
fldl
int3
hlt
negb
ljmp
sub
xchg
and
decl
das
shrb
jb
sbb
js
pop
pop
ljmp
cld
cmp
into
jmp
lret
mov
pop
jne
call
sbb
popa
aas
call
xor
in
cmp
stos
sub
or
cmp
out
inc
incl
cld
movsb
dec
ja
ret
seto
lods
pop
mov
test
cmp
subb
ja
push
cmpsb
inc
cld
mov
std
mov
movsb
sbb
inc
daa
sub
insb
mov
pushl
movsb
mov
mov
hlt
ss
sub
sbb
fwait
push
xchg
mov
les
push
xchg
int3
notb
dec
mov
or
pop
shrl
aad
aam
push
call
sub
orb
arpl
push
js
mov
lods
aam
mov
pop
jg
decb
jne
mov
rcl
outsb
inc
mov
mov
incl
mov
cs
add
sub
mov
lods
cmp
ret
mov
ja
add
gs
mov
cwtl
mov
int
pusha
jne
dec
sub
push
mov
negb
decl
testl
loope
adcb
sar
mov
lock
xor
sbb
mov
faddl
jnp
das
jle
rcrb
mov
jnp
sti
and
inc
inc
or
es
dec
sub
xor
push
addr16
xor
in
je
push
pop
sbb
call
mov
imul
jb
adc
js
lcall
push
jo
ljmp
in
sbb
dec
jp
filds
push
xchg
adc
and
sbb
mov
lock
lods
add
inc
rorl
push
inc
pop
rcl
jbe
jae
bound
and
jb
lahf
sub
insw
cmpsb
or
cmp
sub
nop
pop
cld
out
add
pushl
inc
pop
hlt
adc
lcall
jmp
dec
jmp
pop
movsl
push
aas
or
jns
js
out
sbb
lcall
push
mov
push
adc
sahf
pop
add
lahf
adc
pop
fildll
mov
loopne
decl
mov
mov
adc
sbb
sbb
das
clc
mov
orl
xchg
pop
xor
jecxz
add
and
ljmp
cs
adc
sarb
das
add
jl
adc
inc
loopne
scas
dec
jnp
jbe
int
ret
pusha
xor
pop
pop
and
xor
int
cs
call
sar
xor
push
test
push
test
test
ljmp
pop
lcall
push
imul
jge
jg
cld
mov
movsb
mov
fnstcw
add
jecxz
xchg
nop
xchg
in
cmp
shrb
mov
jae
pop
xchg
flds
fisubrl
ret
push
lcall
in
subb
lahf
mov
psrld
fistps
rol
add
jl
ds
scas
ds
mov
sahf
aas
sbb
lret
cwtl
mov
add
int
inc
fmuls
aam
sbb
jg
or
mov
jne
xchg
ficoms
pop
sbb
imul
shll
divl
cmpsl
sarl
scas
mov
inc
mov
jne
jg
popf
gs
clc
pushl
add
mov
cmp
fbstp
fwait
cmp
push
out
test
call
mov
and
sarl
ja
mov
jp
and
sar
ljmp
xor
pushf
andl
lea
push
xchg
aaa
mov
jg
fs
jbe
movsl
jl
mov
adc
sbb
adc
push
mov
fcomps
mov
dec
mov
popa
fmuls
jg
mov
jb
mov
push
mov
scas
push
cmp
pop
push
scas
and
xchg
hlt
fcompl
push
gs
pop
lock
sub
cmpb
scas
addl
pop
dec
jo
incl
cmp
out
and
insb
sbb
repnz
push
je
hlt
cmpsl
nop
and
cld
mov
pop
mov
pushl
ljmp
out
mov
in
pop
inc
jo
mov
xor
jmp
add
les
dec
js
mov
call
push
in
cmp
iret
pushl
cmp
pop
decl
int3
push
cmpsb
and
mov
mov
push
stc
inc
stos
outsl
clc
jg
sahf
jle
je
test
xor
jle
inc
or
ret
pop
push
lcall
fwait
inc
mov
lods
push
scas
ljmp
pop
dec
mov
add
das
and
xchg
fsubrs
xchg
decl
and
mov
jne
xchg
or
cltd
dec
pop
clc
dec
fidivrl
scas
push
faddp
clc
mov
mov
and
or
nop
cmpsb
inc
inc
cmpsl
push
inc
add
pushl
test
insb
pop
lods
adc
sbb
pop
lds
aad
push
lds
outsb
sub
out
inc
bound
jmp
pop
mov
mov
mull
mov
mov
in
lret
sub
cwtl
xor
ljmp
add
dec
pop
out
xchg
arpl
cmc
add
ja
sbb
into
rorb
cmp
push
adc
sbb
call
icebp
cmp
shll
dec
fcmovnu
mov
cmc
call
xchg
and
les
sbb
jg
lods
test
mov
mov
or
aad
clc
popa
popa
push
cld
call
loopne
xorl
and
or
and
xchg
push
incl
xchg
js
or
adc
sbb
fisubl
sbb
cmp
mov
ret
je
jp
mov
dec
sbb
push
ljmp
xlat
xorl
bound
add
scas
fcmovb
dec
jmp
jne
pushl
or
inc
gs
fiaddl
sub
enter
xor
mov
mov
ljmp
cmp
sub
push
cli
jle
pop
mov
shr
aas
dec
xchg
ret
orl
icebp
push
cmp
xor
mov
inc
pusha
inc
cmp
shll
dec
sbb
ljmp
rcll
jmp
aam
sub
push
rcll
push
dec
mov
scas
sbb
or
pop
stos
inc
call
jns
cli
loop
add
pushf
push
shlb
fxam
jo
jne
mov
cmp
call
ja
jae
jne
adc
iret
leave
jle
into
les
push
or
outsl
mov
mov
sub
repnz
mov
cmpsb
out
sbb
mov
shll
xchg
and
outsb
bound
js
jns
sar
pop
rcrl
mov
icebp
pop
ss
push
setbe
hlt
decl
pop
sub
imul
xchg
adc
mov
or
inc
and
lahf
jmp
adc
les
lods
mov
sub
int
add
push
push
inc
popa
dec
and
push
push
sbb
loope
mov
bound
mov
mov
ud0
fcoml
pop
mov
stc
ja
add
pop
lret
xor
dec
lods
mov
decl
jle
out
loopne
jno
test
shlb
and
fcmovne
and
jge
push
cmp
jg
gs
xor
push
xchg
add
xlat
stos
lods
push
pusha
mov
sub
cli
int
rcll
mov
jmp
nop
out
int
int
mov
or
inc
sbb
decl
out
enter
icebp
rol
jmp
add
push
ja
jmp
or
aam
out
adc
mov
and
cmp
sarb
fwait
push
fdivl
pusha
add
rcrb
xchg
popa
push
test
mov
test
fcomi
jg
fisttpll
sbb
daa
or
xchg
jbe
inc
call
sbb
sbb
ret
push
pushl
mov
xchg
imul
push
xor
mov
into
xor
cld
mov
js
pop
push
out
and
out
push
push
mov
in
or
add
cld
pushl
fmull
mov
pop
fimull
test
lahf
in
insb
aam
movsl
push
xchg
pop
adc
sub
pusha
out
popa
jns
das
dec
ret
scas
sbb
sub
cmp
fdivr
inc
mov
incl
pop
out
ljmp
xor
add
push
xchg
sbb
fadd
pop
xor
incl
and
cmp
cli
shll
xchg
xchg
mov
cmp
repnz
ljmp
into
mov
pop
dec
xor
stc
pop
js
test
push
pop
cli
call
pop
cld
sarb
or
shll
es
ret
sbb
mov
decl
jl
cs
sbb
into
cmpsb
repz
mov
inc
imul
mov
cmp
bound
ljmp
cmpsb
mov
ljmp
clc
jae
test
shl
ret
std
es
sbb
jg
nop
bound
lea
ljmp
sbb
mov
inc
fsubr
inc
fcmovne
sbb
lcall
decl
int3
test
jnp
cmp
addr16
mov
jge
fmuls
hlt
and
call
jno
xor
push
cmpsb
test
imul
mov
mov
out
push
insl
pop
clc
in
xor
mov
push
sbb
mov
orl
xsaves
incl
pop
mov
fsubr
data16
mov
or
jns
pop
icebp
and
aad
push
mov
cmpb
data16
mov
ljmp
clc
add
icebp
dec
mov
push
cmp
pop
in
cmp
jo
push
cmpsb
and
decl
mov
fwait
mov
mov
sarb
js
cld
or
fldenv
icebp
dec
lahf
and
xor
xlat
jge
incl
or
out
loopne
sub
mov
inc
cmpsb
loope
arpl
mov
call
adc
inc
jmp
or
mov
jge
out
sbb
mov
js
insb
pop
les
jns
call
jbe
add
sub
add
ret
push
stos
arpl
ds
iret
mov
cmp
mov
shl
xchg
je
in
mov
repnz
popa
add
imul
in
cmp
shr
iret
jg
js
cmp
mov
jo
or
adc
xlat
test
insl
pop
fsubrl
incl
in
or
xchg
sbb
xor
and
or
mov
jnp
dec
popa
les
dec
mov
pop
add
shlb
jbe
xchg
std
adc
dec
incl
add
pop
mov
jecxz
int3
gs
test
outsb
mov
jge
das
xor
dec
lret
icebp
sbb
ljmp
xchg
rorl
sar
nop
in
pushf
idivb
inc
fstl
cmc
sbb
push
jecxz
test
mov
pop
enter
pushf
loopne
mov
outsl
clc
incl
sub
mov
mov
sub
push
cmp
and
or
push
sub
decl
xchg
aaa
mov
pop
lods
mov
rcr
repnz
fxch
int
insl
aas
push
jmp
sar
inc
cwtl
cwtl
sub
adc
sbb
dec
xor
in
in
cmp
jmp
stc
mov
or
rorl
cli
inc
sbb
mov
out
mov
repnz
scas
cmpsb
dec
rorl
or
imul
add
mov
jmp
push
lds
cmp
nop
or
mov
mov
out
mov
jp
call
std
pop
and
cwtl
pop
aam
adc
dec
ss
cli
pushl
pop
mov
in
and
ficoml
stc
insb
sub
fistps
jmp
les
xchg
in
lcall
push
dec
xor
nop
dec
inc
sbb
jnp
fildll
or
loop
push
or
jmp
enter
inc
adc
ja
cwtl
push
decl
loope
inc
rorl
pop
sub
push
js
sub
les
sub
ljmp
pushl
mov
ror
test
stc
clc
bound
out
push
loopne
jnp
lcall
loope
aas
call
push
jp
andl
cmp
mov
mov
fcomps
mov
mov
shr
and
incl
imul
in
mov
mov
add
cmpsl
xor
into
inc
out
outsl
mov
xchg
call
dec
cmc
fadds
scas
in
popf
pop
into
push
xor
inc
adc
in
hlt
cmp
stos
sub
or
mov
or
xchg
inc
out
dec
cmp
decl
stos
add
iret
mov
lea
stos
call
or
leave
xor
xor
int3
inc
stos
shlb
in
dec
stos
rcrl
mov
aam
cmp
call
jp
sbb
pushl
pop
popf
xor
ss
lcall
xlat
int
cmp
jb
insl
mov
shrl
ja
in
and
pushf
gs
decl
sub
mov
enter
pop
xchg
mov
push
ljmp
xorl
jae
xor
test
rclb
add
je
ljmp
xchg
cmp
insb
inc
mov
int3
push
push
lret
aaa
out
sbb
pop
dec
imul
jmp
repnz
clc
xor
jl
outsl
dec
sub
push
imul
decl
xor
jns
jb
pop
jbe
outsl
ror
idiv
sub
enter
adc
and
jle
jmp
lods
js
sub
shrb
lret
rcrl
movb
inc
fsubrs
add
movsl
mov
lcall
movsb
sbb
inc
push
dec
sarl
sbb
cmp
loop
adc
cmp
mov
rcrb
test
jecxz
mov
ja
xor
popa
mov
call
push
sbb
sub
hlt
rep
iret
cli
sbb
or
and
or
add
lock
ljmp
sub
or
into
cmp
pop
jmp
lea
xchg
jecxz
dec
daa
inc
out
aad
loopne
lcall
jecxz
pop
outsb
int3
push
push
negb
or
mov
push
sbb
les
sub
lods
cmpsl
in
dec
dec
mov
mov
negl
cs
ljmp
sbb
jmp
mov
loope
loop
nop
cmp
sti
mov
cmpsl
rolb
call
jbe
pushf
xchg
mov
mov
cld
push
fisubl
not
cmp
pop
jg
inc
scas
cli
incl
call
mov
fnsave
push
shrl
sub
dec
lods
cmc
lcall
adc
cmp
mov
enter
jae
push
addb
sub
pop
pop
cmc
dec
xchg
jb
adc
inc
test
incb
mov
or
shrl
das
inc
add
mov
xchg
mov
mov
push
clc
mov
cmp
out
ror
sbbl
ljmp
pop
sub
sub
jbe
add
ds
jmp
testb
xor
inc
call
loopne
cltd
mov
pop
or
push
jge
lds
xchg
inc
aad
adc
decl
dec
mov
mov
inc
sub
int3
and
ja
pop
mov
test
mov
incl
mov
ss
out
jno
lret
lcall
cmc
xchg
movsb
push
pusha
pop
das
fisubrl
mov
mov
cwtl
cli
lods
dec
lods
cmp
xchg
mov
ljmp
xor
add
in
xlat
jecxz
inc
pushf
and
scas
ss
or
inc
insb
dec
enter
inc
cli
jmp
jne
inc
mov
es
mov
insb
jg
lret
arpl
jecxz
ret
int
addb
mov
add
incl
adc
nop
mov
sbb
lea
mov
push
mov
or
sbb
jmp
fmull
push
dec
cld
xor
mov
mov
movsl
mov
jmp
jmp
inc
mov
pushf
cmp
int
rcl
aam
test
data16
incl
sub
mov
xor
scas
jg
push
mov
add
jo
sub
call
ret
or
popf
out
adc
cmpl
fiadds
pushl
adc
out
xchg
add
stc
jge
or
push
loopne
mov
jle
adc
mov
mov
fwait
in
and
mov
or
add
push
mov
cmp
cmp
aad
inc
repnz
scas
sahf
fwait
xlat
sbb
outsl
push
nop
mov
in
call
out
add
or
xchg
xchg
sbb
add
xchg
sbb
push
decl
testb
adcb
dec
and
mov
lcall
sbbl
and
push
imul
imul
or
mov
test
in
cli
add
or
sub
inc
mov
push
ja
mov
scas
int
rcll
loopne
pop
call
stc
mov
call
xorb
ja
cld
fmuls
mov
bound
cmp
dec
daa
notl
cmc
cmp
pop
cltd
je
add
fwait
icebp
inc
jecxz
cmp
icebp
dec
scas
call
xchg
ds
loopne
fbstp
mov
daa
push
pop
shll
mov
jecxz
lcall
js
sti
ja
and
mov
or
int3
cmp
sbbb
in
scas
incl
ja
add
xchg
clc
mov
ret
sbb
dec
pusha
sub
or
sub
cmp
outsb
aaa
jge
jb
pop
test
push
push
test
aaa
sub
data16
ljmp
ljmp
jg
fs
pop
loopne
out
xchg
insb
inc
paddsw
or
in
add
jmp
jmp
mov
lret
ficomps
push
loopne
pop
jg
lahf
lret
lea
mov
adc
sbb
ja
cmp
xor
cmp
pop
popl
jmp
inc
stos
popa
daa
mov
int3
add
pop
not
xlat
rcll
mov
mov
aaa
pop
clc
insl
clc
orb
in
pop
fld
sub
sub
jmp
xor
in
xor
sbb
std
es
es
pushf
jbe
test
fcomip
mov
lcall
fwait
add
out
fists
cmp
sarb
mov
adc
movsb
pushf
push
test
mov
jmp
in
or
mov
inc
imul
adc
icebp
mov
cmp
or
mov
stos
mov
ror
test
test
sub
mov
pushl
cltd
daa
cwtl
push
lods
push
mov
mov
xor
fsubs
cmp
inc
lret
leave
ljmp
cmpsl
sti
or
pop
dec
adc
test
pop
into
sub
push
cmpsl
loope
jmp
adc
inc
xor
fsubl
jne
sub
pop
inc
cmp
dec
and
repz
mov
push
push
call
arpl
aas
sub
stos
add
jno
mov
mov
mov
call
loopne
aad
mov
aad
ljmp
ljmp
roll
sbb
mov
sub
xchg
mov
mov
pop
xchg
mov
in
push
xor
mov
dec
lods
aad
sub
mov
and
pop
sti
jb
test
nop
sbb
loope
ljmp
scas
or
stos
jo
mov
adc
jmp
out
inc
pushl
mov
add
repz
stos
or
and
mov
int
pop
mov
les
or
decl
aam
lods
daa
sbb
add
xor
pop
in
add
jmp
pop
fdivl
or
aam
shr
fidivs
fidivs
push
jns
iret
loope
ret
mov
mov
incl
sahf
xor
test
cmc
sbb
sbb
mov
mov
push
subl
inc
push
inc
mov
pop
and
add
jb
int3
sti
pop
xor
add
ljmp
or
iret
pop
cmp
jo
test
incl
movb
aaa
and
cmp
outsb
shlb
xor
jmp
lcall
add
pop
cld
subb
dec
push
xor
jmp
push
xlat
inc
sub
leave
xor
mov
mov
mov
xchg
jp
stos
mov
sar
call
jne
inc
push
rorl
test
rolb
dec
fldcw
push
lods
sub
decl
jo
add
lcall
jp
pause
stc
mov
push
dec
xor
push
decl
inc
xor
adc
testl
cmp
mov
pushl
push
jb
push
repnz
ja
sub
dec
mov
inc
data16
es
fisubrl
push
call
sbb
pop
sub
xchg
mov
inc
adc
outsb
xor
in
pop
cs
test
jmp
pop
mov
inc
je
cmpsb
movsb
adc
lret
inc
test
adc
pop
ss
call
iret
sahf
xchg
leave
stc
inc
jnp
jno
inc
mov
roll
push
adc
add
push
sti
in
in
add
arpl
mov
mov
inc
outsl
mov
mov
xchg
mov
clc
ffree
mov
stc
xor
pusha
test
loope
das
mov
incl
fwait
jne
dec
scas
lods
sub
testb
andb
or
addr16
lcall
loop
or
xchg
mov
sub
push
idiv
incl
push
iret
sub
nop
dec
js
sbb
mov
jnp
push
inc
test
pushl
clc
lret
fdivrl
xor
inc
sub
out
or
mov
out
aas
popf
jmp
movsb
jg
mov
inc
jo
push
cmpsl
vunpcklpd
das
push
dec
xor
das
mov
push
popa
and
jle
movsl
pop
lods
jmp
add
jmp
sub
fidivrl
leave
mov
sub
cmp
push
decb
jecxz
jae
movsl
lcall
pushf
bound
pop
lahf
repz
adc
ret
mov
mov
or
pushl
push
hlt
mov
mov
pop
xchg
xchg
int
xchg
xlat
inc
cmc
mov
sub
sub
pushl
mov
jo
loope
jbe
cmp
sub
bound
sti
imul
jmp
pop
lret
adc
inc
lods
fs
xchg
ficoml
fdivrs
aaa
add
cmp
adc
rol
sbb
ss
pushl
sbb
mov
xor
mov
orb
xchg
loopne
popf
push
mov
stos
repnz
pop
insl
leave
jl
inc
lods
leave
ds
loop
mov
fs
icebp
or
sti
js
dec
shr
dec
dec
mov
add
call
pusha
test
test
add
add
mov
and
or
incl
mov
jl
inc
mov
pop
inc
cmpsl
or
mov
notb
push
xor
popf
les
in
fisubrl
popa
mov
xchg
mov
es
cli
jb
mov
scas
mov
pushl
cli
call
lcall
xchg
rolb
push
xor
fistps
add
imul
mov
adc
xchg
cmp
test
jg
pushf
cwtl
mov
inc
dec
adc
rclb
dec
fninit
or
in
cs
lahf
ret
xor
notl
mov
xchg
sbb
mov
cmp
jge
test
lock
adc
dec
inc
sbb
ljmp
fimuls
dec
and
mov
jmp
dec
cmp
mov
or
lahf
out
lock
icebp
and
inc
mov
mov
repz
decl
push
aam
lock
clc
repnz
xor
dec
mov
repz
dec
cmc
lods
out
dec
sub
mov
nop
fcomi
ja
inc
push
mov
push
fwait
arpl
cmp
jle
roll
pushl
jmp
lods
pop
mov
in
faddp
daa
cmpsl
cltd
int3
mov
sbb
ret
enter
out
mov
dec
dec
ljmp
jl
ja
cmp
fldl
pop
mov
push
out
mov
pop
cld
pushl
inc
push
ret
std
test
jle
std
enter
test
jmp
and
out
adc
flds
or
and
ret
add
pushl
mov
fstps
fwait
or
lret
sahf
dec
cmp
jecxz
xor
sub
cmp
fbstp
cmp
mov
mov
or
or
xchg
decl
cmc
push
or
xchg
sub
jg
dec
repnz
sti
movsl
js
scas
xchg
fadds
mov
les
xchg
jmp
repnz
ret
pop
iret
popa
fistps
call
pop
jge
rcr
inc
xchg
testl
data16
or
out
push
xchg
jnp
push
jne
and
loop
dec
movsb
xlat
pop
call
pop
jg
lods
pop
je
adc
cs
pusha
das
xchg
xor
incl
cli
and
or
xchg
inc
call
xor
je
out
jge
sbb
jg
or
mov
insl
jmp
aaa
xor
xchg
push
jb
add
and
mov
mov
sbb
test
ljmp
fldl
mov
popf
outsb
cmp
inc
clc
fldl
cwtl
fidivs
jge
or
mov
les
repz
in
jmp
es
pop
ss
sbb
push
fists
in
insb
xchg
jle
xchg
sti
add
lock
ljmp
push
mov
push
push
cmp
rorl
add
cld
inc
inc
dec
or
xor
cmpsb
incl
jge
sub
shrb
int
call
fldt
ljmp
cli
push
andl
ret
mov
movsb
pop
pushf
push
adc
mov
fstl
dec
adc
adc
aam
mov
std
inc
mov
divb
add
pop
pop
sub
pop
inc
cwtl
stos
pop
mov
or
decl
cmp
push
push
sub
push
scas
sbb
and
cmp
lcall
ljmp
push
jle
scas
xor
enter
and
mov
lock
daa
cld
push
das
inc
shl
divl
clc
cmp
dec
fisubl
xor
incl
adc
pop
repnz
or
xchg
fidivl
pop
bnd
jbe,pn
int
lock
ljmp
cld
loopne
mov
cs
xchg
sti
jle
cmp
and
push
arpl
in
decl
push
rcr
andb
mov
add
sub
repnz
xchg
mov
fnstsw
setg
lcall
jbe
sbb
adc
arpl
inc
inc
mov
cld
add
testl
pushl
fsts
mov
out
ljmp
cwtl
cmp
repz
and
lcall
inc
xchg
add
arpl
xor
ds
or
mov
fsubs
call
les
mov
cmp
lods
test
bound
arpl
test
or
pushl
cld
or
mov
xchg
sarb
call
pop
xchg
mov
ljmp
call
lods
mov
sub
sbb
mov
icebp
sub
push
lcall
fildll
cmp
int3
pop
or
inc
add
xchg
int
cwtl
daa
loopne
daa
std
lods
xchg
aam
add
jo
loopne
addr16
add
shlb
icebp
incl
sub
xlat
jl
in
add
scas
fs
lcall
popa
pushf
ds
adc
xchg
daa
addr16
push
sub
sahf
or
fs
sbb
int3
mov
xor
or
sub
lea
jl
sub
add
jbe
fs
pushl
insb
ret
or
mov
movsl
xchg
pop
shll
int3
dec
es
xor
icebp
gs
lcall
push
inc
push
mov
rcll
lahf
ds
mov
ss
xor
xchg
adc
out
mov
pushf
cli
lret
test
test
add
push
sub
xchg
inc
sbb
pop
dec
and
outsl
ss
into
repz
jb
xor
fisubrl
test
add
dec
icebp
inc
xchg
cwtl
test
div
dec
push
out
mov
adc
cmp
mov
stc
mov
decl
dec
bound
cwtl
xor
dec
lret
and
movsb
out
fimuls
mov
push
inc
inc
rol
dec
cmpsb
cmp
lods
xorb
add
xor
and
insb
xchg
scas
dec
cld
out
mov
add
jae
bound
call
add
cltd
lds
xchg
mov
push
cmpl
pop
inc
inc
adc
xchg
push
sbb
data16
ja
inc
sbb
adc
jl
int
daa
mov
dec
jo
adc
divb
lcall
xchg
fsubr
pushl
lret
loopne
inc
jl
imul
sub
enter
cwtl
or
add
call
test
sti
and
fidivrs
leave
mov
rclb
dec
jns
test
push
shlb
shrl
pop
popa
mov
shl
jg
add
repz
movsb
mov
loope
test
sti
insl
jg
or
xchg
xor
ret
xor
push
push
lcall
dec
stos
popf
fistpl
jl
mov
mov
jb
incl
mov
sub
iret
xorl
jno
mov
mov
lea
mov
jp
jp
sbb
popf
pop
psllq
inc
add
push
jl
jle
aas
cmp
sbb
xor
lcall
mov
sbb
incl
mov
inc
pop
push
push
das
daa
es
aad
ss
int3
jecxz
jmp
les
in
fidivl
ja
jle
dec
fnsave
xchg
out
sub
cli
jbe
jb
cmp
adc
push
in
xchg
xor
push
sub
fninit
sbb
and
adc
xabort
lods
dec
mov
push
in
push
jb
xchg
sbb
cli
jno
or
xor
lea
xchg
and
ret
out
cli
and
adcb
lahf
push
pusha
cwtl
iret
lods
out
pop
mov
icebp
jle
pushl
lahf
sub
popf
test
mov
fs
mov
in
aad
push
sbbl
and
roll
incl
gs
into
scas
mov
adc
xorb
pop
mov
pushl
xchg
mov
mov
push
shrb
dec
fwait
add
mov
flds
jg
decl
dec
adc
mov
dec
loopne
mov
or
xor
clc
or
call
push
rcrb
pop
in
in
loope
in
push
xchg
shll
ret
outsl
clc
out
cmp
hlt
jmp
mov
aam
cld
out
pop
insl
stos
fs
incl
push
inc
sub
mov
sub
mov
push
push
mov
pop
decl
idivb
xchg
or
mov
in
mov
sub
cmp
mov
test
jmp
dec
jmp
fistpll
sbb
or
incl
pop
mov
jle
adc
mov
mov
mov
adc
dec
or
std
popa
jl
in
push
adc
ljmp
cld
and
mov
scas
push
cld
inc
incl
testl
aas
imul
negb
or
or
fcomip
mov
fcmovnu
adc
pusha
inc
jg
idivl
popf
test
lcall
ljmp
or
xor
into
jne
pushf
xor
aaa
std
test
push
fldt
testb
cmp
mov
shl
mov
cmp
clc
jmp
mov
fistps
xor
shr
jl
into
xchg
cmp
shlb
sbb
jns
loope
cmpsl
inc
mov
inc
and
add
ljmp
mov
lods
sbb
inc
sbb
or
sub
mov
xor
lcall
add
push
dec
pop
pop
cltd
sub
sbb
imull
out
cld
jno
jmp
call
add
popf
mov
push
std
cmpsb
fldenv
out
in
or
jge
dec
cmp
adc
aaa
std
out
cwtl
sahf
sbb
cmp
inc
sub
dec
in
mov
cli
lods
repz
je
int
repz
and
dec
xchg
lea
mov
ljmp
jg
rolb
testl
aas
addb
in
push
nop
xor
std
decl
xchg
dec
add
xchg
mov
mov
ljmp
shr
stos
pusha
xchg
ljmp
aam
xchg
lret
push
jg
fdivrl
sar
sbb
pop
test
push
shrl
jbe
out
cld
unpckhps
das
repnz
incl
and
adc
add
jecxz
xlat
fcomps
xor
clc
mov
ljmp
test
mov
or
stos
dec
test
jae,pn
inc
dec
push
adc
mov
xor
xor
into
hlt
lret
test
int3
je
lds
sar
ljmp
fwait
pop
xor
adc
push
jnp
inc
stos
int
pop
cmp
pop
outsl
sub
mov
sbb
cmp
cs
lock
push
decl
orl
mov
add
mov
fdivs
push
les
in
ss
out
ds
mov
xlat
sbb
jno
std
fnop
inc
call
out
into
sub
enter
arpl
sub
movsl
mov
in
lcall
or
aas
mov
mov
xor
xor
mov
popa
out
cli
xchg
dec
ret
paddd
in
add
lea
ljmp
mov
cwtl
es
xor
enter
aam
popf
mov
mov
lods
push
jmp
sahf
xor
dec
jmp
or
push
xchg
cmc
xchg
insb
stos
iret
jae
stos
call
repz
pop
repnz
into
inc
jne
ja
inc
test
roll
pop
xor
call
in
mulb
aad
jns
into
call
arpl
mov
fstl
mov
jmp
adc
sbb
outsb
rdpmc
lahf
mov
and
mov
movsl
sbb
ret
jae
inc
testl
pushf
scas
pop
arpl
iret
in
push
cmp
dec
int
ret
fucomp
out
pushl
mov
aam
pusha
sar
decl
push
xor
xor
fwait
mov
sbb
mov
in
pop
and
fwait
xor
addl
sbb
inc
pushf
ret
dec
cld
repnz
mov
popf
push
lcall
das
cmp
ljmp
outsb
mov
xchg
fdivrl
jg
push
sarb
pop
fwait
leave
jl
fwait
pushf
push
mov
dec
pop
pop
cs
popf
jno
mov
fsubrs
incl
add
test
jae
aad
mov
daa
dec
or
decl
js
adc
leave
rcrb
adc
sbb
push
testb
jno
push
decl
and
xor
jbe
jecxz
clc
cmp
leave
cmp
loopne
lret
jmp
aas
lret
fmuls
aad
in
cmp
mov
sbb
daa
xor
xchg
sbb
aaa
mov
js
icebp
push
cld
add
fmul
mov
fistps
ljmp
leave
dec
popa
cmpsb
push
mov
mov
xor
test
pop
lahf
cmp
sub
insl
cld
call
fcoms
aam
arpl
loop
scas
shrl
pushl
pop
shlb
es
int3
fisubrs
popf
and
inc
mov
daa
add
jg
pushl
xor
mov
xchg
pop
int3
mov
cmp
flds
xchg
pop
int
nop
ficompl
cmpsl
add
fstl
cmpsl
dec
add
inc
leave
push
xor
sti
and
cmp
cmp
mov
jmp
clc
inc
movsl
ss
mov
incl
adc
cmp
aaa
xchg
and
push
inc
sbb
out
ror
dec
dec
mov
ljmp
or
pop
jg
sbb
rolb
push
sub
fidivrs
jbe
or
in
dec
loope
std
mov
pushl
fstp
cmp
enter
pop
inc
or
sbb
in
cli
jnp
mov
call
cmp
mov
adc
ror
adc
loopne
mov
push
inc
nop
jo
cwtl
fwait
jecxz
rcrb
decl
mov
shl
outsb
inc
cmpsl
push
cmpsb
cli
dec
push
test
pop
and
ljmp
or
pop
lock
adc
xchg
sbb
and
jnp
sbb
rcrl
mov
shlb
mov
and
ss
mov
mov
push
mov
insl
and
mov
ret
and
daa
xchg
std
xchg
popf
xor
pop
scas
test
xchg
hlt
outsl
xor
std
xchg
jne
jl
decl
mov
out
pop
mov
jg
es
stos
pop
sub
jp
pushf
and
aad
mov
pop
pop
and
int
cmp
shl
orb
repnz
fcomip
aas
mov
ss
cmp
lea
mov
pop
pushl
ret
fcoml
add
testl
stos
mov
cs
lds
mov
jo
lcall
sbb
sbb
xor
les
jge
mov
hlt
rclb
or
movsl
imul
das
xchg
loop
hlt
scas
push
lds
push
dec
sar
pop
stc
push
test
push
mov
int3
jg
sti
rolb
inc
jmp
ret
pop
xchg
adc
sub
out
iret
fisubrs
lds
lret
xchg
incl
xor
outsb
int
fldenv
pop
aaa
jae
push
jo
xchg
ret
decl
pop
popa
inc
inc
push
or
push
mov
into
jg
mov
push
stc
sbb
mov
sbb
sub
inc
xor
dec
nop
js
cmp
into
shll
rorl
es
and
int
mov
ljmp
jae
cmp
xor
sti
fs
pop
cmp
shl
cmpsb
sub
xor
jb
jnp
push
out
mov
call
clc
sbb
or
adcl
iret
cmp
inc
mov
sub
sub
ret
inc
imull
incl
mov
xchg
mov
dec
test
je
insb
call
cmp
pop
adc
xchg
sarl
pop
pushl
cld
mov
sbb
cmp
movsl
cli
imul
lock
call
xchg
jae
or
out
nop
fisttps
and
stc
leave
xchg
addr16
leave
push
and
fsubrl
aad
sbb
jg
sub
sub
insb
mov
aas
push
mov
dec
jecxz
and
cmp
xchg
outsb
and
push
mov
nop
out
mov
cmpsb
out
push
mov
loope
mov
shll
mov
mov
leave
and
sbb
addr16
push
pop
push
pushl
lahf
rorl
aas
imul
leave
bound
cld
ds
adc
sub
int3
mov
cmp
adc
mov
inc
push
xchg
sub
lock
add
lcall
lock
pop
mov
daa
xchg
lds
repz
in
xchg
clc
inc
ds
sti
adc
int3
mov
inc
xchg
inc
or
jg
add
notb
popa
push
in
fdivl
ljmp
inc
dec
lea
nop
jmp
mov
rcrb
flds
lcall
push
imul
lret
popl
sbb
dec
enter
repz
call
jg
fwait
ljmp
push
push
add
lcall
nop
gs
subl
dec
leave
jae
popa
dec
scas
ja
mov
pop
pop
push
pusha
mov
inc
aad
fisttpl
ds
mov
mov
xor
add
ss
push
sbb
outsb
fs
inc
push
int
cli
xchg
test
dec
stc
decl
jg
ret
loop
push
jmp
push
leave
xchg
cmp
mov
mov
fsub
cmp
lea
push
or
jne
dec
and
sub
fsubrs
repnz
call
popa
sbb
repnz
sub
xchg
loopne
mov
sar
dec
lods
add
cmp
je
lds
push
add
inc
cmpsb
lcall
movb
jne
or
add
xchg
out
insl
pop
xor
jmp
bound
sbb
call
cmpsl
add
mov
inc
xchg
jle
inc
xlat
mov
cmc
incl
lcall
xchg
aas
add
xchg
add
sbb
ljmp
ljmp
or
push
das
les
push
jge
mov
fs
jns
sbb
pop
sbb
mov
push
pop
xor
xor
inc
je
mov
out
pop
push
popf
std
out
mov
daa
xchg
adc
sub
add
daa
cli
sub
out
orb
mov
js
mulb
sbb
imul
incl
gs
xor
call
das
cltd
jnp
cltd
cmp
iret
pop
inc
imul
sahf
scas
xchg
sbb
xlat
decl
push
in
nop
push
mov
push
jge
push
in
adc
sahf
and
lds
test
jne
or
adc
adc
or
in
jg
outsb
dec
repnz
xchg
repnz
cmp
and
mov
movsb
loope
int
and
jg
mov
cmp
lea
xchg
mov
imul
mov
popf
ret
cld
lea
and
adc
js
jae
fimuls
loop
xchg
inc
je
push
shll
xor
inc
inc
dec
pop
sbb
movsb
stos
push
mov
xchg
sub
leave
pop
jo
jmp
iret
stos
jg
ljmp
sbb
andb
jg
mov
fistpl
lret
ljmp
nop
hlt
mov
ljmp
imul
psubb
cli
dec
xor
ficompl
xchg
jmp
sarb
cmp
stc
push
mov
mov
fsubr
sub
sub
incl
pusha
jmp
sub
xchg
stos
pop
sti
jge
icebp
cmp
cmpsl
sbb
cmc
sub
mov
cmp
xor
jg
test
cli
sets
aas
in
jge
add
out
sbb
and
adcl
pusha
mov
mov
cli
rcll
fbld
call
data16
popf
lahf
dec
dec
mov
mov
add
mov
adc
out
or
adc
push
ds
movsl
mov
mov
jae
into
das
xchg
dec
or
loopne
jg
cli
stos
jae
push
data16
dec
sbb
xor
shll
mov
fsubl
lds
inc
aaa
pushf
push
mov
sbb
incl
dec
pop
loopne
push
fs
lret
push
jne
cmp
adc
and
add
pushl
loopne
cli
cmp
js
insl
nop
sub
into
aad
jge
mov
cwtl
mov
pushl
pushl
mov
rcl
xchg
xchg
inc
xor
xchg
fcmovu
int3
or
daa
lea
mov
jg
test
fstpl
sbb
xor
dec
lcall
sub
decl
cld
rcrl
addb
jg
jb
mov
flds
pushf
jbe
rcll
clc
out
sbb
cli
jl
iret
pop
and
pmaxsw
dec
popa
xor
aaa
cld
dec
out
jns
mov
mov
mov
jle
fwait
adc
insl
sar
iret
jo
xor
sbb
imul
xchg
dec
aam
ficoml
jecxz
fdivrl
mov
mov
movsl
fcomip
jae
adc
ret
mov
in
or
icebp
stos
sub
jno
pop
pop
mov
mov
jmp
mov
clc
sub
out
xor
sbb
nop
pusha
jmp
fdivr
js
inc
add
mov
xchg
imul
mov
inc
adc
mov
int
pushf
sti
into
ljmp
fdivrl
lods
mov
gs
sbb
data16
push
dec
sbb
movsb
or
mov
adc
inc
push
mov
insl
mov
push
cmpxchg
jnp
mov
popf
ja
mov
fildl
add
shll
mov
lcall
scas
sarl
aad
out
mov
andl
decl
arpl
and
xor
and
inc
arpl
movsl
cmp
lods
sbb
cmp
loopne
dec
pushl
rcrl
test
aas
push
xchg
jb
mov
out
mov
pop
fdivrp
pushl
call
dec
in
jo
popf
rorl
cmc
inc
cmp
cmp
xchg
mov
mov
loopne
mov
incl
jno
ja
jecxz
dec
mov
rclb
data16
cmpsb
roll
or
xlat
xchg
imul
jle
jmp
aas
lea
xor
mov
imul
jg
ret
aad
insb
push
aaa
mov
sbb
inc
pop
pop
cmc
mov
mov
ljmp
cmp
leave
xor
in
aam
jge
sub
imul
mov
sbb
push
mov
dec
cmp
or
decl
xor
loope
ss
fiadds
dec
mov
fnstenv
js
insl
cmp
pushl
mov
push
jns
xor
daa
dec
mov
aaa
testb
xchg
cli
inc
inc
mov
sub
mov
adc
rorl
gs
ljmp
scas
jg
mov
mov
call
jo
sarb
stos
test
icebp
out
adc
pop
dec
test
mov
test
cld
xchg
push
fdivr
pop
pop
shrb
repz
imul
jge
pop
dec
jge
aaa
dec
lods
jne
lret
and
mov
push
cwtl
cld
mov
call
lahf
mov
adc
loopne
mov
mov
popa
int
push
int
jo
jl
lcall
fadds
pop
enter
dec
mov
notl
imul
add
xchg
adc
jg
lret
orb
xor
int
jmp
inc
ss
fists
fiaddl
call
pop
out
adc
xchg
lock
xor
push
cmp
in
pushf
dec
fnsave
fs
loop
and
mov
hlt
inc
sar
das
out
cmp
cs
xor
ljmp
fwait
dec
and
fstps
pop
cwtl
ljmp
push
out
out
fsubs
lcall
gs
cmp
add
mov
in
aaa
shrb
aad
test
test
add
mov
jmp
ja
pop
add
mulb
mov
mov
leave
shl
out
clc
incl
int3
nop
mov
pop
mov
mov
fsubs
xchg
cmp
les
sar
decl
dec
movsb
mov
sub
mov
xor
repz
incl
mov
fucomi
push
fistpll
and
cmp
je
or
cmp
out
push
lock
mov
xchg
push
xchg
mov
and
decl
in
sub
cmpsl
sti
cltd
ficoms
insl
aam
fcmove
std
push
cmp
jg
xchg
fsubs
loop
adc
lods
push
int3
xor
cmp
fimull
outsl
pop
add
pushl
jne
aas
and
inc
inc
jb
sbb
imul
pop
cmc
jmp
arpl
int
rorb
jp
in
mov
test
das
pop
enter
aad
call
std
pop
mov
xchg
mov
sub
pop
adc
mov
or
decl
out
filds
push
imul
sarb
add
push
sbb
sbb
in
cli
mov
in
xchg
mov
popf
lea
mov
pop
push
test
push
push
fnsave
dec
mov
jg
adc
ror
clc
mov
loop
loopne
lcall
fmul
imul
mov
jae
lcall
pushf
aad
mov
sti
repnz
xchg
call
push
test
mov
sbb
into
push
pusha
call
pop
inc
enter
jle
mov
push
jne
dec
hlt
xchg
cmp
inc
sbb
xor
outsb
jne
jo
fwait
push
and
cmp
inc
out
or
sub
addb
ret
adc
sub
mov
call
push
iret
dec
cli
adc
adc
lcall
or
mov
xchg
or
mov
mov
or
loope
jl
out
test
sbb
inc
insl
sbb
ja
repz
push
hlt
sarl
iret
cmp
and
jae
push
add
loopne
mov
mov
xchg
add
mov
add
mov
sbb
fcomip
ljmp
sahf
arpl
mov
adcl
sub
pop
and
ljmp
ljmp
jb
jno
bound
and
add
lret
mov
divps
call
xchg
jg
or
arpl
mov
pushf
or
jae
cwtl
movsb
sarl
jecxz
out
push
lcall
mov
push
cmp
decl
lcall
dec
jbe
mov
aam
ja
out
dec
dec
mov
scas
bound
outsl
pxor
decl
pop
int3
outsb
ja
jne
sbb
jl
stos
daa
imul
sbb
sub
filds
mov
xor
sub
lods
cmp
push
ljmp
push
adc
add
cld
test
aaa
pushf
push
pushf
stc
mov
and
ljmp
arpl
add
mov
mov
add
jecxz
rcr
lock
dec
loopne
jmp
lcall
push
cmp
jecxz
rolb
dec
roll
in
add
mov
sti
and
push
mov
mov
loop
mov
das
fidivrl
aaa
jbe
in
or
dec
loop
iret
add
fs
xchg
sub
pushl
cmp
fcoml
rclb
xor
ss
les
xchg
call
scas
fdivrl
aas
mov
out
mov
js
xor
adc
popa
pushl
dec
lds
rcrb
loop
lahf
xchg
icebp
outsl
sbb
jp
or
fmull
cmpsb
rcrl
and
incl
shrl
cmp
xor
pop
mov
sahf
mov
add
movsb
gs
adc
incl
push
jb
lods
iret
aad
repnz
clc
imul
sbb
add
out
test
mov
lcall
pusha
push
aad
shr
popf
lods
sub
lock
notb
add
addr16
cmp
lcall
shl
std
jg
cli
cmp
xor
push
call
cld
mov
mov
dec
fs
inc
push
cmpsb
test
mov
lods
loop
dec
and
cs
sar
es
xor
or
test
cmp
dec
loopew
loope
pushl
xchg
mov
icebp
push
sbb
pop
and
repnz
jecxz
mov
mov
push
cltd
mov
roll
xor
mov
and
dec
add
xchg
push
adc
mov
jmp
cltd
loope
cltd
mov
stos
out
sbb
sti
xchg
add
or
movsl
decl
lds
fstpl
pop
pop
push
add
inc
push
cmp
jmp
mov
decl
lret
add
cmpsb
lods
or
mov
in
inc
inc
inc
stos
std
inc
fbstp
sub
hlt
stc
cmp
cmp
and
dec
sub
inc
ds
and
ljmp
and
add
jb
push
cmp
sarb
mov
lcall
jne
add
mov
xchg
aad
shlb
xchg
push
pop
call
xchg
xchg
jbe
mov
fcoms
sub
inc
inc
jg
inc
and
xchg
orb
lret
imul
cwtl
fiaddl
xchg
stos
mov
gs
push
sub
aas
push
sub
pop
sbb
shlb
mov
outsl
sbb
cmp
add
lcall
xchg
or
loop
xor
sbb
cmc
and
std
cmp
int3
data16
das
push
cwtl
dec
out
int
in
out
mov
mov
mov
sub
jg
rcrl
cli
daa
inc
cmp
adc
inc
incl
rcrb
push
jne
shr
push
das
jne
mov
push
outsb
mov
scas
pop
jne
fdivr
mov
inc
les
xchg
imul
cmpsb
imul
jmp
dec
push
push
and
sub
sbb
mov
dec
decb
cmp
fcomip
outsl
dec
add
orb
arpl
jl
mov
push
pop
jg
xorb
xor
in
mov
xchg
std
mov
stos
add
cld
daa
jb
xor
mov
aad
jae
pop
pop
ss
ljmpw
lods
das
in
sbb
inc
out
out
clc
frstor
pusha
sbb
std
shll
out
xchg
inc
mov
call
mov
dec
jge
or
notl
lcall
sub
call
loopne
pop
inc
push
mov
nop
jge
sub
xlat
jle
xor
push
mov
std
pushl
mov
sti
ds
imul
fdiv
add
fimull
fadds
push
jg
jae
out
dec
sub
xchg
push
jns
cmp
sub
insb
lret
adc
sbb
push
inc
in
xor
mov
xor
pop
jb
out
fisttpl
push
popa
and
sub
sti
scas
ficompl
imul
jmp
inc
push
negb
fcomip
mov
repnz
mov
pop
sub
mov
hlt
mov
hlt
adc
push
jae
jnp
mov
outsl
dec
mov
jecxz
in
cmc
cmp
or
call
scas
cld
iret
addr16
lods
mov
inc
mov
faddl
cmp
xchg
adc
push
mov
aaa
sub
dec
in
insl
test
xlat
scas
aaa
or
fst
inc
ret
dec
push
pop
jbe
lcall
xchg
lcall
fists
js
xchg
jp
or
lods
adc
mull
pushl
in
mov
dec
xchg
into
mov
and
stc
lahf
cmc
mov
hlt
or
stc
push
push
hlt
ljmp
cmpb
push
cmp
adc
cmc
adc
and
xchg
push
inc
ret
ja
stos
ds
dec
adc
test
sbb
and
lahf
adc
mov
pushl
inc
fisubl
movsl
shlb
jo
lret
pop
mov
test
jmp
jecxz
add
shl
mov
push
pop
cltd
inc
xchg
aam
fisubs
sbb
jecxz
push
pop
inc
sub
sbb
jp
mov
jmp
ljmp
idivl
mov
push
lret
jge
outsl
mov
sub
out
iret
fstp
test
rorb
aam
fildl
je
daa
ja
test
jg
out
cli
cmp
adc
sub
xchg
in
aam
sub
fnstsw
sub
dec
incl
imul
or
rcrb
ret
pop
popf
fs
lock
pop
lods
je
pusha
cmp
decl
mov
mov
filds
popa
add
mov
cmp
cmp
cs
into
push
test
fcmove
decl
and
xchg
mov
clc
sbb
clc
mov
std
sbb
push
adc
sub
sahf
and
cmp
decl
addb
inc
push
popa
movsb
mov
pop
shlb
in
pushl
cmp
pop
lahf
out
call
hlt
sub
ja
cltd
push
aam
outsl
pusha
mov
ljmp
pop
xchg
mov
mov
call
fcom
sti
mov
mov
outsb
mov
mov
jle
inc
add
adc
loope
call
fnstcw
aaa
ret
or
clc
out
aam
fcoml
and
xchg
int3
push
movsb
int3
sub
idiv
pushl
xchg
in
xor
cs
fwait
test
mov
dec
ds
mov
out
adc
inc
or
je
dec
andb
idiv
ljmp
mov
and
xchg
add
mov
dec
inc
sbb
cmp
sbb
inc
lods
pushl
jo
dec
xchg
shlb
lods
sub
cmpsb
cmpsl
out
bound
ljmp
stc
jbe
aaa
idiv
cmp
push
pop
imul
clc
in
arpl
in
pop
in
cld
add
mov
loop
decl
cld
scas
mov
jno
popf
xor
cmpsb
inc
or
test
jmp
call
int3
push
adc
in
in
jge
add
dec
pop
faddl
inc
push
jp
xor
xchg
lcall
loopne
cmpsb
ss
push
mov
and
seta
mov
test
scas
jp
icebp
clc
jb
cmpsb
test
xchg
or
mov
loop
sub
dec
fwait
mov
data16
push
js
imul
loop
cld
push
cmp
call
std
push
ficompl
psubusw
outsb
or
jne
test
sbb
jne
call
stos
pop
sbb
idiv
call
or
lods
pop
xor
add
addr16
rcr
mov
add
repz
das
call
mul
mov
ss
cld
add
jo
enter
decb
movsb
dec
xchg
stc
nop
sti
mov
into
cltd
mov
cld
xor
cmpb
hlt
jle
jle
push
cmpsb
or
jns
pop
xchg
sub
mov
cmp
dec
or
call
xor
xor
in
aam
adc
inc
pop
clc
outsl
rcr
xor
repnz
rcrb
out
mov
lds
cli
add
cmp
mov
mov
shll
sub
mov
adc
inc
daa
dec
sbb
inc
test
cli
fdivrp
movsb
xor
cld
xchg
pop
call
pop
sub
int
mov
gs
adc
mov
lcall
call
pop
xor
arpl
and
scas
rolb
pusha
dec
dec
mov
inc
mov
lods
ret
add
mov
push
cmc
neg
dec
and
or
cmp
mov
xchg
decl
and
aam
jp
jns
movsb
int
add
sub
loope
sub
jmp
push
add
fmuls
pop
lods
mov
leave
stc
test
incl
jns
sub
dec
jle
add
sarl
pop
mov
in
sub
call
pop
ret
adc
xchg
fsubr
pop
lret
cmc
mov
push
mov
cmp
insl
test
sbb
pop
pop
loopne
cmp
andb
mov
mov
cmpsb
push
mov
push
test
ljmp
mov
jbe
jnp
movsb
jecxz
or
scas
pop
clc
push
sbb
xor
ljmp
sub
sub
mov
fstpt
mov
gs
js
pop
mov
call
cmp
cltd
jb
movsb
pushf
test
pop
pop
bound
sbb
das
push
xor
outsl
jb
dec
adcl
aas
jne
cmp
mov
int
cmp
je
lds
sub
rorb
jg
pushl
inc
nop
mov
dec
push
xchg
hlt
cmpl
jno
rorl
mov
push
std
call
hlt
push
or
xchg
ss
mov
or
cmpsl
mov
xchg
lods
push
test
call
inc
loopne
pusha
push
test
push
mov
pop
mov
daa
addr16
lea
pop
icebp
cmp
mov
test
enter
int3
notb
dec
shrl
lcall
test
add
push
mov
push
jge
decl
leave
mov
jnp
cwtl
mov
in
lea
pop
mov
adc
ds
inc
fisubs
adc
out
xchg
ror
cwtl
lret
or
rolb
in
jge
sub
push
in
or
sub
call
stos
clc
int
sar
jmp
mov
sub
cmpb
or
xchg
inc
sub
pop
call
std
nop
cli
out
aad
test
mov
mov
pop
mov
gs
cmp
mov
rcl
or
test
fcomip
idiv
jl
sub
xlat
repnz
dec
push
push
ja
fiadds
movsl
ss
pusha
push
out
imul
pop
rcr
sar
push
jge
cmp
xchg
mov
decl
insb
jp
mov
stos
repz
push
ljmp
sub
jmp
nop
clc
pop
xchg
movsl
mov
gs
ret
and
iret
jo
xlat
in
inc
aaa
out
es
or
sub
pop
iret
jb
add
jp
cmp
sbb
pushl
jl
lahf
mov
or
add
in
int3
and
cmp
jg
mov
out
sti
pop
lods
mov
insb
mov
dec
xchg
push
sbb
sub
push
loopne
jmp
popa
dec
pop
pusha
rclb
lahf
push
neg
je
dec
jno
dec
call
and
mov
mov
outsl
pop
jp
subl
pop
jo
ret
pop
or
sbb
cwtl
ror
shlb
js
out
pop
andps
leave
push
adc
dec
into
and
pop
ljmp
jecxz
pop
mov
mov
mov
in
add
bound
je
out
leave
das
enter
jmp
lds
push
mov
jmp
pop
scas
lods
pop
neg
push
lea
jae
decl
lock
stos
sti
mov
flds
cmp
mov
insb
mov
incl
imul
cmp
mov
std
adc
mov
int
push
or
ljmp
call
ret
cmpsl
adc
filds
adc
fcmovne
movsl
push
lods
movsb
out
leave
mov
mov
out
or
mov
xor
inc
movsl
mov
push
add
aam
fwait
pop
jg
cmp
sbb
pop
scas
push
dec
ljmp
ficompl
arpl
in
add
pop
cld
movb
adcb
pop
test
rcr
cmpsl
push
nop
push
jecxz
mov
xor
pop
inc
movsl
outsb
sbb
dec
es
xchg
popf
loopne
icebp
test
xor
jbe
pop
out
inc
loop
mov
or
les
in
or
add
or
push
mov
incl
sbb
cmpsb
push
or
push
cwtl
cmp
mov
lret
lock
ja
mov
or
sbb
test
xchg
pop
sub
scas
cwtl
ljmp
mov
or
incl
mov
or
data16
push
aam
jnp
cmp
sub
outsl
mov
sbb
roll
mov
jg
rol
roll
inc
inc
sub
inc
das
lret
xchg
cmp
ljmp
call
in
mov
inc
pop
dec
lea
mov
test
and
pushf
movsl
pop
incl
dec
mov
mov
clc
xchg
std
mov
push
jge
mov
outsb
mov
adcb
pushl
std
mov
enter
mov
dec
movsb
add
adc
out
jb
jmp
incl
xchg
mov
mov
lret
nop
cld
enter
pop
mov
out
sbb
leave
inc
enter
decl
ljmp
cmp
dec
clc
and
jle
and
pop
xchg
push
loopne
mov
mov
lock
jne
movsl
pushf
pusha
push
adc
mov
out
ljmp
lods
sub
jbe
inc
sub
dec
jmp
sbb
pushl
rcrl
mov
lds
cmp
cs
jle
addr16
jge
dec
xor
mov
cmp
adc
aad
pushl
dec
fisubrs
lods
pop
imul
ret
cmp
ficomps
or
mov
lock
jns
je
pop
fcoml
push
cmpsb
pop
mov
cmc
mov
and
and
popf
rcrl
call
sbb
jg
inc
clc
pop
cmc
jno
js
mov
adc
fldenv
call
mov
jno
icebp
push
fwait
scas
loop
dec
xchg
movsb
pop
imul
sub
sbb
outsb
stos
xchg
add
push
pop
inc
mov
incl
push
push
pop
out
mov
aam
inc
shll
mov
incl
mov
xchg
repnz
cmp
test
popf
jmp
ljmp
cmp
mov
lahf
push
mov
sub
lock
dec
push
mov
xchg
imul
mov
jl
or
mov
data16
push
pop
or
pushl
adc
dec
xor
rol
pusha
mov
xor
mov
popf
imul
sub
sbb
ficoml
out
push
out
cli
and
jmp
daa
dec
cmp
iret
aaa
ja
fcoml
das
mov
mov
and
dec
sub
sub
decl
test
iret
xchg
fs
cmc
int
sbb
mov
fmul
xchg
inc
in
ljmp
push
xchg
fs
dec
out
mov
test
aas
mov
pop
push
pop
addr16
jle
mov
clc
std
lret
hlt
iret
repnz
mov
inc
xchg
inc
xchg
sub
dec
and
mov
jmp
push
mov
sahf
test
jp
mov
sbb
setge
pop
push
shl
out
outsl
push
inc
clc
or
outsl
je
int
jmp
and
addr16
out
sub
lock
popa
loop
pop
inc
add
lret
inc
sbb
fs
popa
cmp
pop
hlt
decl
xlat
lods
repnz
testl
xchg
test
out
lods
dec
inc
fldcw
in
adc
cmp
and
mov
int3
mov
imul
pushf
lds
sub
and
jnp
addb
mov
and
mov
cmp
adc
push
sahf
jns
jg
call
mov
add
inc
pop
in
adc
cmp
xchg
popl
sub
pop
pop
mov
pop
cmp
xchg
mov
adc
out
jnp
dec
sub
dec
pop
aad
mov
push
pop
mov
pop
scas
movsb
outsb
push
inc
cwtl
ljmp
in
mov
cmpsb
push
gs
or
mov
pop
iret
xor
pop
lahf
xchg
call
test
xor
pop
movsl
jle
jg
ja
cmp
ljmp
mov
rolb
not
dec
xor
jae
sbb
dec
push
lods
dec
pop
scas
pop
mov
loop
pushl
mov
test
fiaddl
testb
aam
filds
add
jmp
psrlw
call
push
adc
xor
pop
mov
push
mov
or
add
xor
sbb
and
enter
lock
sarl
ljmp
clc
outsl
or
push
repnz
orl
scas
je
out
cwtl
jp
cmp
call
roll
test
dec
add
push
sub
iret
sbb
xchg
mov
pop
sarb
adc
xchg
scas
in
and
xchg
adc
mov
mov
mov
and
mov
sub
outsl
cmpsb
jmp
lock
xor
and
add
cld
inc
test
cmp
fistpll
ret
add
fwait
mov
in
sti
cmc
test
xor
dec
pop
jp
sub
xchg
ljmp
mov
daa
mov
add
test
aas
nop
inc
lods
scas
sbbb
lcall
das
xor
add
mov
lret
push
xchg
mov
adc
and
jmp
cmp
mov
cmpsb
xor
jo
push
jb
pop
jns
lds
xchg
popf
ds
mov
sub
in
push
mov
insl
subb
es
inc
les
sahf
or
shr
fildll
icebp
pushf
movsl
xor
pop
frstor
sti
and
cmp
and
adc
pop
das
fwait
call
loope
pusha
iret
and
jb
lcall
test
int3
push
xchg
mov
jb
jg
arpl
mov
bound
sti
idiv
jmp
pop
outsl
cmpl
inc
cwtl
int
in
insb
and
addb
mov
faddl
pushl
les
sub
scas
stos
mov
push
iret
cmp
subl
dec
je
dec
out
xor
inc
inc
incl
sbbb
out
mov
into
push
mov
jle
dec
fimuls
add
or
adc
mov
decl
rcrl
sub
mov
divl
add
push
jg
out
aas
in
cmp
call
jno
push
jp
add
xchg
bound
xchg
mov
and
ljmp
sahf
addr16
fmull
xchg
jle
cmp
mov
jl
dec
ss
xor
push
aad
pop
int
pop
cmp
push
ds
loope
lahf
jmp
cmp
shll
ljmp
bound
test
popf
jmp
sub
xlat
mov
addb
testl
pushl
rcl
cmp
sub
in
xor
movsb
sti
sbb
push
and
or
stc
push
adc
sahf
push
mov
push
mov
scas
rcrl
mov
outsl
sbb
jno
pop
int3
or
lcall
inc
mov
cmp
int3
xchg
loope
add
nop
ljmp
jmp
fwait
ret
xor
lods
inc
mov
cmc
outsl
int
stos
das
cmpsl
ds
subl
sub
push
mov
loop
mov
jne
lock
dec
add
and
jns
outsb
and
add
mov
shl
mov
pop
mov
test
lcall
adc
or
shlb
xchg
push
mov
pop
shll
aaa
cs
call
mov
push
js
in
fs
cltd
leave
sbb
pop
lcall
mov
out
pop
out
call
scas
sbb
pop
lods
mov
mov
ds
sbb
inc
and
fidivrl
cli
ficompl
lret
fucomip
dec
push
inc
jge
pop
enter
in
and
clc
dec
popl
inc
jno
lods
aad
sub
push
or
inc
xchg
jmp
lcall
sub
inc
dec
stc
outsl
adc
pop
pop
stos
loop
mov
ljmp
fsubr
push
sub
and
push
cmp
jnp
mov
cli
mov
ljmp
mov
pop
pop
mov
dec
sarb
jl
fadd
loop
lock
out
ret
xchg
mov
mov
mov
dec
pop
out
int3
sbbb
sub
pop
iret
ja
aaa
push
in
loopne
pop
xchg
pushl
push
pushf
jle
stc
flds
adc
mov
mov
or
cmp
das
jbe
std
jp
adc
lcall
mov
sbb
js
push
outsb
out
fsts
ljmp
dec
adc
fistl
orl
mov
test
xchg
cmp
pushl
cld
ss
rcl
xchg
xchg
jle
stos
push
mov
cmp
sub
and
incl
fstps
pusha
pop
push
fdivrs
sub
push
adc
bound
sub
fcomip
decl
sub
sub
out
pop
push
lods
jecxz
cmp
adc
pop
mov
ljmp
pop
pop
mov
xchg
push
xchg
lahf
add
pushl
sub
lea
aad
inc
adc
das
xchg
mov
nop
mov
movsl
xlat
inc
in
clc
int3
leave
nop
aas
mov
xor
jnp
pushl
xchg
in
out
push
lahf
add
sbb
add
inc
and
add
sub
call
aaa
jbe
cmpsl
mov
test
sub
xchg
pop
divl
mov
cmp
push
dec
insl
mov
xor
aas
cs
xchg
sahf
pop
mov
call
pop
cmp
adc
cmp
jbe
je,pn
fidivrl
sub
enter
push
sub
hlt
pop
loopne
nop
fnsave
hlt
gs
ret
add
fiaddl
sahf
cmp
fbld
int
sbb
mov
jb
adc
adc
rolb
cmp
mov
fisttpll
push
iret
mov
or
fwait
dec
aaa
incl
or
dec
pop
ja
mov
outsb
push
call
adc
ret
test
outsb
orl
xchg
flds
pushf
jbe
push
mov
inc
ljmp
icebp
mov
adc
adc
xchg
fisttps
cld
mov
scas
mov
call
repz
ret
pop
icebp
imulb
mov
movsl
ret
jg
fstpt
in
mov
pop
and
out
add
test
fidivrl
jge
inc
movsl
lret
decl
lock
xor
sub
xchg
popa
out
mov
pushl
shll
pushl
bound
aas
xchg
outsb
dec
repnz
cmp
mov
out
mov
insl
ljmp
roll
nop
jae
out
sub
imul
popa
scas
lock
out
cli
lock
mov
add
fcomip
inc
inc
jg
es
out
and
jae
mov
xchg
inc
hlt
push
test
mov
pop
in
in
push
and
adc
push
repnz
pop
int3
test
push
roll
test
mov
or
ja
cmpsl
js
push
fbstp
and
out
aad
lret
cmp
lcall
cmc
cwtl
loop
shll
mov
sbb
loopne
xor
adc
pop
cld
pushl
jo
mov
mov
mov
sub
loop
fstpt
mov
pop
xor
add
sti
push
fistpll
outsl
adc
add
jae
ja
incl
cld
and
test
int
daa
inc
or
mov
xchg
pushf
idiv
call
inc
rclb
into
dec
loope
scas
push
push
mov
sarb
xchg
cmc
loopne
jno
stc
push
or
leave
pop
lret
test
adc
sbb
stos
sahf
das
fdivs
mov
inc
and
pushl
mov
icebp
push
pop
pop
fdivrs
and
int
pop
lock
jle
inc
arpl
lahf
das
pop
cmc
ja
jmp
cmp
scas
inc
sub
stos
lret
pop
pop
pushf
or
cltd
push
jmp
mov
daa
ss
pushl
lea
or
int3
es
or
rorb
mov
fidivrl
inc
xor
push
jmp
add
mov
jnp
jno
ss
jns
sub
mov
and
push
test
fbld
stc
mov
pop
adc
jb
lahf
movsl
pop
pop
loope
or
cmp
leave
in
gs
pushl
adc
cmc
arpl
jb
adc
aas
jbe
xchg
out
cwtl
and
test
lret
sub
and
xchg
push
in
std
cmc
popa
ret
mov
inc
aam
sub
ja
lds
mov
mov
pop
hlt
inc
aaa
push
mov
inc
xchg
sbb
lea
in
insl
jb
jbe
es
iret
jmp
inc
sub
shll
xchg
xchg
test
notb
fldt
dec
out
jecxz
pusha
inc
lods
push
xorb
mov
cmp
fisttpl
mov
sbb
mov
sub
mov
sbb
push
or
cmpl
lcall
incl
stc
testb
in
sbb
leave
xchg
ds
cli
xchg
fcomps
push
mov
inc
daa
iret
inc
fidivrl
jge
fwait
lock
mov
decl
in
imulb
out
mov
jecxz
cmpsb
fwait
xchg
aam
pop
mov
je
jno
push
test
sub
push
mov
pop
mov
mov
xor
xchg
xlat
mov
lahf
les
adc
inc
loop
loopne
pushl
imul
ret
pop
pop
and
or
addr16
seta
or
lods
sub
adc
int3
cs
ret
fsubp
jnp
and
out
mov
cmp
ss
sbb
mov
pop
cmpsb
insl
cli
pushl
pop
lock
mov
push
jae
in
ds
cmp
inc
xchg
or
mov
xor
add
hlt
and
push
js
stos
rcrl
push
or
sub
icebp
cmpsl
sar
call
inc
loopne
xor
rolb
test
pop
jnp
movsl
jp
pop
int3
std
mov
sbbl
jecxz
and
icebp
jge
cmp
popa
mov
movsl
sti
sub
and
inc
mov
cltd
adc
incl
adcb
clc
mov
push
fistps
fcmovnb
ret
sbb
mov
pushl
adc
aaa
cmp
scas
je
test
loop
dec
and
sub
and
arpl
ljmp
or
jmp
ret
clc
stos
add
pop
push
gs
fstp
in
cli
dec
iret
xor
adc
sub
mov
cmp
imul
or
int
fsub
loop
into
push
mov
incl
cmpsl
add
adc
push
sub
addb
bound
cltd
ret
inc
leave
cmp
dec
in
aam
mov
call
mov
out
das
pusha
xlat
xchg
mov
test
jg
movsl
lock
xchg
imul
nop
in
push
stos
push
push
jp
cmpsb
dec
sbb
rcll
and
and
mov
scas
fidivrs
push
dec
push
aaa
cmp
mov
pushl
shlb
or
int3
aam
popa
adc
inc
mov
mov
mov
mov
ljmp
and
inc
jno
aad
fildl
test
insb
sub
andl
sub
push
shlb
pushf
shlb
pushf
mov
inc
pop
shr
xchg
loopne
nop
daa
call
sbb
mov
inc
jmp
out
push
ljmp
aas
push
or
ja
jb
mov
mov
cmp
and
push
add
lret
cmp
xchg
inc
mov
out
out
sbb
addr16
inc
mov
sahf
jns
and
pop
cmp
xor
aam
aad
pop
and
inc
add
jl
addr16
imul
out
mov
decl
ds
jl
mov
xor
in
loope
adc
in
push
mov
push
dec
scas
or
into
leave
jne
pop
mov
lcall
cmpsl
jb
or
lcall
lcall
xchg
jp
outsl
ds
icebp
outsb
push
lcall
xchg
les
out
pop
test
shll
cld
mov
jmp
mov
mov
cmp
outsb
dec
sar
daa
lret
pop
adc
push
push
jns
incl
cs
imul
int3
mov
shlb
and
cwtl
insl
pusha
mov
outsb
std
jo
push
pop
jnp
js
pusha
loope
dec
push
push
push
imul
dec
cmp
addr16
fcoml
fidivs
movsl
inc
add
xchg
stc
sub
pushl
push
sub
inc
pusha
push
testl
leave
sbb
inc
loope
pushl
cld
sbb
ss
inc
sbbl
sub
xchg
pop
scas
daa
and
cmp
cld
cmpsb
stos
push
pop
dec
sbb
cmpb
jp
lret
jmp
jns
push
iret
repnz
fbld
pop
shrb
adc
pushl
jg
xchg
sub
enter
mov
inc
mov
xchg
or
add
addr16
fcomip
pushl
sbb
movsb
xor
fcmovbe
xrelease
arpl
or
lds
mov
push
outsl
cli
sub
adc
fisttpll
test
push
inc
stos
call
test
popf
push
sub
mov
xor
push
test
pop
pop
mov
outsl
imul
dec
incl
sbb
dec
stos
fsubs
stos
mov
sub
inc
inc
insl
aad
or
in
shrb
inc
xorl
inc
jg
fwait
loopne
lock
mov
das
xchg
jns
clc
jno
ds
lret
aas
mov
pop
aam
addr16
pop
icebp
repnz
push
pop
in
xchg
jb
lcall
or
add
shlb
call
jo
pop
adc
movsl
jmp
add
ja
jmp
and
js
mov
lcall
jl
xchg
push
fcmovb
int3
push
and
pop
inc
or
adcb
hlt
push
lds
mov
and
jg
lret
mov
mov
das
lcall
mov
xor
or
cmc
xchg
pop
mov
push
fnstenv
sub
in
pop
decl
shll
fwait
rol
push
fisubs
mov
inc
cs
jne
lgdtl
lcall
imul
insb
js
test
sub
lcall
inc
loope
imul
mov
fimuls
or
pop
pop
cmpsl
mov
xchg
test
js
jo
imul
repnz
pushl
pop
daa
dec
jbe
mov
xchg
cmp
or
add
inc
test
lea
xchg
jmp
stc
mov
push
push
push
int3
xchg
mov
incl
sub
push
iret
andl
pop
mov
xchg
in
xchg
dec
nop
jns
jg
xchg
scas
xor
clc
pop
jmp
pushf
test
lds
mov
addl
sti
pop
repnz
xchg
scas
sub
jmp
mov
xchg
dec
mov
sbb
subb
lcall
mov
sbb
sub
test
push
lods
addr16
or
pushl
cmc
push
test
mov
gs
fstpt
add
sbb
mov
mov
repnz
push
std
jg
mov
popa
maskmovq
idivl
scas
into
sub
lret
pop
loop
fimuls
pushl
les
cwtl
or
xchg
jbe
cmpsl
push
mov
fdivrs
loope
mov
add
jnp
sahf
cld
add
inc
and
cmp
pop
sub
lea
xor
sar
incl
add
push
js
cmc
push
and
mov
scas
xchg
mov
shll
or
push
mov
jle
xchg
xchg
ljmp
cli
fwait
mov
xor
repnz
pop
hlt
into
imull
pop
push
jmp
pop
sahf
std
dec
imul
int
aad
sbb
mov
outsl
xor
int3
cld
jle
aaa
mov
inc
xchg
mov
xchg
jb
cs
add
nop
int
scas
loop
pushf
idiv
jg
in
nop
fiadds
push
test
nop
and
xor
test
lds
ror
incl
push
pop
xor
sbb
in
add
shr
lea
pushf
xor
vandnpd
jle
xchg
loopne
inc
lods
pop
sub
mov
xorl
bound
cwtl
mov
imul
fdivrs
mov
adc
jg
or
add
mov
mov
into
mov
ja
ret
call
bound
add
push
add
or
jmp
sarb
lahf
out
repnz
pushl
jb
pop
cmpb
dec
push
gs
cmp
aaa
stc
shlb
pop
mov
jmp
cmpsb
inc
aam
clc
gs
aaa
mov
mov
inc
push
loopne
cli
inc
fdivs
cmp
in
js
inc
mov
push
outsl
pop
lods
cmp
sub
pusha
pop
pushl
adc
andb
mov
rcrl
push
stos
arpl
lret
lcall
sbb
clc
testl
fwait
testb
push
std
gs
push
adc
inc
mov
sar
iret
xchg
mov
ret
aad
orb
or
pushl
fidivs
das
cmp
inc
add
jg
xor
mov
mov
jle
decl
subb
mov
sbb
mov
fisubs
and
orl
icebp
mov
repz
sbb
jg
mov
cs
push
pushf
and
rorb
rolb
mov
push
ds
add
mov
jns
test
out
xlat
or
inc
and
lods
rolb
mov
in
loop
ret
add
stos
out
clc
addr16
mov
fyl2xp1
jno
mov
jae
loope
aad
or
jmp
push
out
stos
pop
adc
sbb
dec
pushf
and
mov
lcall
inc
xchg
ficomps
xchg
dec
addr16
icebp
in
popf
fldcw
add
dec
mov
incl
ret
jmp
jbe
mov
data16
adc
pusha
fs
jmp
cld
decl
in
call
repz
test
nop
xchg
in
adc
rcrl
subl
decl
cmp
mov
sub
pcmpeqb
fiaddl
in
ljmp
fildll
loop
push
lret
cmpsl
jmp
jns
pop
cmp
ljmp
cli
jmp
sahf
mov
push
jbe
sbb
mov
push
pop
xor
mov
or
lcall
lods
dec
mov
mov
xchg
adc
mov
out
fdivs
bound
decl
fadds
cmp
enter
mov
mov
mov
ds
insl
call
inc
add
dec
stos
mov
pushl
xor
repz
popa
jne
in
aam
stc
cli
xchg
inc
frstor
cli
cmpsl
push
clc
pushl
jecxz
mov
cmp
inc
push
mov
mov
xor
mov
xchg
hlt
out
push
leave
pop
insl
sbb
sbb
test
mov
jns
mov
jecxz
mov
incl
push
aam
lods
mov
and
packssdw
je
add
stc
mov
pop
sar
cltd
mov
fs
jo
dec
sets
stos
aam
mov
dec
leave
and
enter
pop
aad
pusha
or
lds
cld
jo
push
decl
arpl
xchg
out
negl
inc
scas
cmp
lcall
dec
sub
vunpcklps
xor
test
inc
call
mov
push
jnp
daa
mov
incl
jecxz
outsl
fidivs
sti
or
push
inc
int
cltd
push
fcomi
stos
incb
sbb
pop
or
xchg
jmp
lods
aaa
mov
adc
ljmp
mov
call
loopne
mov
loopne
pushl
fld1
and
xchg
xor
cmpsl
popf
fstp
cmp
cmp
and
enter
movsb
pushl
insb
outsl
pushf
push
mov
dec
sti
push
movsb
ffree
mov
inc
sub
cltd
mov
mov
ja
decl
sbb
ja
ret
cmp
movsl
push
loope
sbb
into
xchg
cmc
fidivs
idivl
cmp
sar
fidivl
fwait
pop
inc
or
jne
test
arpl
xorl
aad
jg
pushf
and
lret
negl
cli
in
fsubrl
lcall
out
pop
stos
cmp
repnz
mov
subl
adcb
adc
out
clc
decl
ss
inc
ja
mov
sbb
pusha
lds
mov
or
inc
outsl
je
cld
mov
aam
jge
cmp
mov
das
sbb
dec
dec
loope
sub
ljmp
mov
sbb
test
dec
cmpl
std
inc
fucomi
call
bound
rcl
inc
fld
jmp
cmpl
call
test
dec
inc
jno
dec
lahf
push
dec
xchg
out
jns
adc
imul
jmp
pushf
xchg
fcmovne
add
xor
pop
out
push
and
sbb
loop
and
push
loope
jno
call
pop
jbe
or
aaa
and
pop
xor
mov
pop
xchg
mov
cmpsb
push
xchg
imul
mov
les
mov
or
in
pusha
pop
cmp
cld
xchg
jp
dec
xor
mov
mov
lcall
andl
aad
jbe
mov
lret
ja
mov
scas
dec
cld
pop
or
cmpsb
adc
or
cmp
lcall
rcr
and
fcomip
lret
out
ljmp
lcall
push
fsubs
pop
jl
push
fsubs
in
add
cltd
sbb
clc
addr16
sbb
jbe
test
loopne,pt
fs
mov
lds
decl
divl
jo
les
jb
stc
jge
xor
fistl
and
dec
lcall
hlt
movsl
adc
mov
pop
xor
cwtl
arpl
or
xlat
shr
les
push
lret
incl
adc
pop
fdivrs
popf
das
lods
push
fildl
dec
lret
push
push
push
cld
mov
mov
sbb
xchg
push
imul
ljmp
lcall
push
add
shll
mov
or
xchg
rcrb
decl
inc
filds
jmp
outsl
xor
adcb
add
lcall
js
jmp
mov
insl
and
and
xchg
push
test
iret
push
shll
and
fists
jmp
ja,pt
loope
cmp
add
cmpsl
jg
add
lods
lcall
or
sub
push
sub
sbb
ss
fidivl
mov
hlt
push
cld
sbb
and
push
mov
jge
nop
mov
xor
or
inc
cli
jmp
add
sarl
xor
ret
jae
and
pop
insl
call
mov
mov
xchg
gs
jae
ljmp
push
mov
add
ljmp
lret
fisttpll
sub
int3
rclb
jb
and
pop
sub
ljmp
shlb
pushl
adc
ja
in
sbb
popf
jno
mov
out
or
jmp
sub
jmp
jnp
xchg
dec
or
jmp
adc
insb
cmp
inc
popf
int3
cld
filds
out
or
rcll
imull
outsl
clc
push
pop
jne
stos
adc
xchg
leave
mov
dec
les
call
push
scas
push
adc
push
data16
out
sbb
pop
mov
add
movsl
orb
or
mov
call
loope
sub
push
js
adc
outsb
pop
sbb
scas
pop
ret
nop
stos
sti
jmp
inc
ljmp
push
ds
fidivrl
imul
call
pushf
jmp
incl
push
mov
jae
xor
fisubrl
mov
mov
push
ljmp
xor
stos
xorl
addr16
lea
test
loopne
test
inc
xchg
lods
sub
add
adc
inc
add
jb
rol
std
cmp
jb
daa
push
push
sbb
mov
adc
sbb
lcall
push
mov
outsl
cmp
jmp
cld
call
push
dec
push
mov
or
fidivrs
mov
movl
data16
pop
dec
inc
push
out
decl
or
nop
shlb
mov
int3
int3
fxch
push
jg
xchg
lcall
shrb
sbb
repz
pushl
outsl
imul
fmull
testl
xchg
nop
sub
fiadds
pushl
add
mov
add
mov
sahf
cmpsb
dec
cmpsb
pop
pop
adc
pop
pushf
push
and
enter
decl
sbb
rorl
lcall
sub
pusha
xlat
es
pushl
lcall
mov
in
jge
or
fdivs
add
aaa
push
push
pop
stos
addr16
ljmp
repz
cli
rclb
pop
push
xor
filds
inc
stos
std
ljmp
sarb
addr16
imul
cmp
or
mov
xchg
lcall
dec
mov
or
movsl
mov
cmp
sbb
cmpsb
and
ljmp
jo
ss
sub
sub
adc
add
sar
ljmp
lods
callw
daa
arpl
mov
je
in
mov
fwait
pop
add
sbb
mov
es
incl
push
jmp
fstpl
jnp
jle
stos
jmp
daa
repnz
rcrb
stos
xchg
lahf
lret
jmp
loop
movsb
mov
mov
mov
stc
or
inc
jae
cmp
cs
test
mov
inc
and
dec
loope
stos
push
cmp
in
dec
nop
into
ljmp
call
movsl
jo
inc
xor
dec
xorb
aas
lcall
mov
out
mov
adc
xor
jns
dec
out
aam
lds
leave
clc
out
stc
test
clc
decl
mov
xchg
push
xchg
test
jl
pop
sub
das
jo
ljmp
mov
js
adc
xchg
jg
or
sti
int3
mov
hlt
jae
cmp
cmp
inc
inc
pushf
inc
mov
push
pop
in
mov
mov
jmp
mov
inc
ss
push
cmpsl
outsb
jle
das
out
xor
dec
fnstsw
into
add
sbb
mov
es
popf
mov
pushf
sbb
hlt
pop
mov
inc
cmpsl
cmpl
js
cmp
out
fidivrl
dec
cmp
out
sbb
inc
push
add
adc
call
shlb
mov
arpl
repnz
or
repz
inc
ljmp
js
cmp
push
icebp
gs
call
lret
call
lea
mov
or
andl
mov
mov
xor
fdivr
jecxz
ficoml
shlb
mov
xor
sbbl
iret
shlb
decb
out
divb
movsl
jg
pushl
inc
sub
repz
ds
dec
scas
les
je
and
mov
mov
out
fstl
les
mov
mov
fcompl
xor
outsb
and
in
in
jne
inc
sub
mov
pushl
stos
lret
inc
in
mov
aad
mov
nop
repnz
aas
cltd
push
cmp
dec
push
aad
dec
cld
mov
into
lea
fs
fcomip
outsb
and
subb
xchg
and
pusha
daa
aam
in
push
arpl
jmp
bound
push
push
imul
out
xchg
inc
push
add
sbb
cmp
movsb
incl
jns
int3
dec
xorb
mov
shlb
insb
push
dec
nop
jae
mov
push
dec
jmp
mov
ret
movq
cmp
shrb
lcall
out
mov
cld
adc
mov
ja
ja
pop
xor
and
out
cmp
cmp
or
ljmp
push
xchg
push
mov
xchg
scas
rcll
dec
js
mov
js
cli
ds
push
mov
pop
jl
out
lcall
cmc
fsubrs
cli
fdivs
incl
or
xor
rol
xorb
pop
inc
sti
sbb
loope
push
mov
inc
cmpsl
pusha
sbb
jmp
jo
xchg
dec
push
dec
loopne
and
cwtl
push
fs
xor
mov
mov
cmp
daa
jle
daa
mov
xor
daa
jp
out
insl
lods
lret
out
sbb
cs
inc
mov
decl
mov
pop
pop
mov
popf
sub
lcall
mov
lea
lods
dec
out
dec
mov
daa
cs
jp
xchg
nop
and
or
push
in
pushl
cli
lahf
and
fld
lods
ret
mov
call
mov
mov
push
repz
fwait
xor
js
mov
orl
cmp
push
mov
cmc
idivl
mov
rcrl
xchg
xor
shlb
insl
notb
mov
cmpsb
pop
add
mov
inc
lods
aas
icebp
push
movsb
arpl
cli
mov
ljmp
clc
out
jmp
iret
hlt
mov
jp
popf
movsb
cmc
adc
inc
fcos
test
cmp
lcall
in
mov
push
cmp
push
xchg
pop
cmp
in
jp
push
pop
cmc
jecxz
insb
fimull
sub
aad
scas
nop
mov
add
ficoml
out
cmpsl
xchg
mov
dec
loopne
xchg
jmp
sti
push
inc
cmc
mov
mov
xorb
sub
pop
lret
jmp
es
jmp
jno
cmp
jnp
and
add
std
and
pop
subb
cld
lcall
pop
cmc
outsl
stos
mov
sbb
mov
jmp
fbld
ja
add
pop
pop
std
aaa
mov
push
sub
xor
loop
dec
inc
jmp
test
dec
xchg
shll
gs
jg
mov
mov
aas
push
sbb
jle
ljmp
and
jns
enter
push
es
orl
mov
sub
jmp
mov
mov
sbb
dec
xchg
xor
icebp
js
aam
push
pop
and
scas
jae
jmp
or
xchg
jp
cwtl
outsb
sbb
mov
sub
xor
fimuls
ret
sub
nop
add
cmp
add
fmull
push
xchg
cmc
mov
sbbb
leave
repz
jmp
sbb
push
pop
push
inc
xchg
in
pop
fs
nop
push
cmpsl
loope
mov
in
fbld
pop
imul
fs
adc
ljmp
loopne
in
imul
and
imul
repnz
mov
xlat
lods
and
jg
pusha
inc
test
and
push
leave
pop
fcoms
cwtl
leave
mov
leave
push
test
lcall
hlt
cli
jge
jbe
outsl
mov
pop
cmp
xor
and
mov
fcomip
lcall
and
call
or
push
mov
fcompl
xchg
rcl
imul
ss
jmp
idivb
inc
dec
pop
pop
adc
and
inc
mov
incl
stos
insb
mov
add
scas
insl
lcall
call
fsubs
fpatan
call
repnz
dec
in
int
xor
lret
adc
flds
loopne
cwtl
iret
adc
cwtl
mov
xchg
xor
ljmp
mov
jb
sbb
jnp
lea
xor
xchg
push
movsb
xor
decl
jnp
mov
xor
mov
mov
std
dec
loop
inc
inc
dec
popf
test
xor
movsb
test
mov
and
or
jp
mov
pop
jge
out
das
sar
push
inc
pop
int
leave
jns
test
xor
xchg
dec
adc
popa
fcomip
in
adc
and
fidivrl
sub
pop
jp
dec
jg
add
loopne
call
dec
cmc
push
movsb
and
in
mov
and
dec
jg
dec
mov
icebp
add
and
inc
inc
in
inc
cltd
stc
xchg
pop
pop
fisubrs
lcall
fadd
dec
push
push
mov
mov
cmpsl
cld
cmpsb
mov
outsb
cltd
dec
sub
stos
out
mov
repnz
inc
mov
pushf
lret
fsubrs
das
mov
ljmp
adc
into
mov
test
add
leave
fwait
and
incl
inc
leave
lcall
fisubs
popa
pop
shll
xor
fs
call
ja
imul
fcom
fisubrl
and
movsb
call
pop
add
jecxz
repz
inc
clc
ljmp
pop
test
ss
outsb
fisubl
inc
jbe
std
cmp
aas
lahf
mov
sub
adc
xchg
out
xchg
xchg
fcomip
jmp
insb
or
loope
cltd
mov
mov
rorl
cmpsl
cmp
mov
loope
add
mov
inc
mov
call
decl
mov
xor
lods
push
xor
sub
out
lret
aam
ret
jl
mov
jg
push
out
fbstp
lcall
dec
outsl
es
in
mov
test
les
xchg
lods
jge
mov
lcall
push
shlb
into
xchg
cmp
sahf
addl
shrl
fidivrs
and
roll
push
mov
mov
jg
push
adc
fadd
incl
push
fwait
pop
push
repz
sub
inc
ja
cmp
call
push
scas
xor
xchg
adc
mov
adc
or
jnp
dec
leave
cmc
adc
ljmp
and
dec
pop
subl
shl
testl
add
fisubs
out
jle
aad
leave
movsl
dec
addr16
scas
loopne
pushl
mov
sbb
dec
xchg
sub
mov
push
sbb
push
add
fcompl
and
les
in
roll
lcall
or
in
int3
out
and
adc
fdivrl
movsb
cmp
adc
push
cwtl
mov
xchg
or
lds
jo
sub
mov
xchg
mov
and
out
ljmp
loop
add
stos
clc
lahf
xor
cmp
inc
test
cmpsb
mov
mov
cmpsl
out
pop
inc
ja
ret
ljmp
sahf
and
out
sub
push
push
dec
pop
dec
dec
cmp
iret
cmp
iret
mov
push
xor
sbbl
pushl
jp
loopne
aad
mov
mov
mov
lcall
arpl
out
adc
push
sbb
jns
mov
cmc
mov
test
pop
call
enter
cli
test
xchg
in
out
dec
rcll
xchg
aaa
imul
call
cmpsb
js
cld
sub
add
mov
imul
nop
or
arpl
xchg
adc
lcall
dec
lods
inc
pop
xchg
cs
aaa
push
shl
mov
call
call
jl
and
push
fucom
movaps
pop
clc
pusha
in
rol
clc
popa
adc
sub
sarb
inc
cltd
ja
mov
ja
and
mov
xor
iret
dec
jmp
mov
mov
es
mov
add
cmp
pop
and
mov
loopne
cld
leave
arpl
jmp
lret
xchg
add
std
xchg
push
mov
test
jb
fdivs
mov
mov
decl
pshufw
jo
pop
lahf
xor
sub
cltd
and
xchg
sbb
add
cmp
rcll
mov
sti
testb
sub
xor
dec
loopne
and
mov
lahf
sub
jb
out
clc
pop
cltd
orl
and
cli
mov
xor
cmp
jnp
sub
jmp
or
bound
jo
loope
cmp
out
iret
int
push
add
add
push
mov
sahf
ret
mov
insb
lcall
jae
scas
dec
int3
mov
loopne
stos
and
test
cmp
push
in
cs
call
cmp
or
ljmp
out
addb
add
xor
lret
int3
adc
test
call
xor
pop
jno
lret
aad
fucomp
xchg
inc
mov
pushl
daa
idivl
cmp
aaa
fsub
dec
push
out
fs
add
cltd
xor
pop
aas
inc
push
ret
pop
mov
jg
lcall
cmp
mov
push
fnsave
push
sbbl
std
dec
mov
fistl
les
cld
int3
iret
adc
in
xchg
inc
cmpsl
test
lret
jecxz
call
sahf
push
shr
js
rolb
add
jp
sbb
push
nop
mov
fwait
out
fisttpll
decl
lcall
xlat
xchg
pop
push
mov
pusha
pop
in
fmull
js
xor
out
insb
std
incl
pushf
cmp
iret
pop
or
es
mov
adc
out
pop
mov
jg
mov
sbb
gs
and
stos
scas
mov
jecxz
pop
out
je
push
test
shll
xchg
fisttps
push
in
inc
stos
dec
pusha
sar
test
test
aas
mov
je
movsl
push
std
call
insl
pop
mov
jmp
inc
sub
push
jbe
pop
push
cld
aas
pushl
test
mov
fnstsw
inc
jg
rcll
orb
mul
jmp
push
decl
bound
sub
mov
push
and
mulb
pop
pop
inc
sahf
cmp
ljmp
push
rclb
aam
jl
lods
test
dec
sahf
cmp
inc
mov
xor
aad
incl
add
lret
pusha
imul
adc
arpl
std
sub
call
mov
adc
xchg
test
pop
inc
sub
jae
ss
repnz
push
push
inc
pop
lock
jmp
sbb
out
ret
xor
arpl
push
insb
mov
lock
mov
cmp
fsts
clc
sub
and
mov
cmp
dec
jg
incl
shl
je
notb
fsubrl
pop
dec
aas
lea
mov
jae
xor
cmpl
aam
in
lahf
bound
ss
dec
rcr
loope
pop
jmp
dec
xor
int
dec
cltd
mov
pop
push
aad
or
das
stos
inc
push
fisubs
aad
mov
mov
pushl
sub
arpl
or
lods
cmp
add
movsl
jbe
fdivr
adc
leave
das
aas
pushl
imul
jnp
es
das
addr16
mov
idivl
mov
mov
cli
pop
fstpl
mov
jg
jmp
push
inc
stos
call
in
lods
outsb
push
pop
fimuls
mov
bt
mov
mov
mov
pusha
lds
pop
add
mov
lcall
sub
shlb
nop
gs
std
nop
notb
loop
loope
scas
cli
push
lods
or
cmp
inc
xchg
test
loopne
push
push
cwtl
adc
jle
xchg
mov
ljmp
and
ss
jbe
pop
sbb
les
ss
push
xor
sub
mul
cmc
test
mov
aaa
or
and
outsl
mov
repz
jge
sbb
lahf
adcl
mov
mov
or
xor
orb
das
hlt
add
rorl
fmuls
dec
sahf
xchg
sbb
inc
push
or
cmp
adcl
sbb
push
adc
ds
loopne
dec
mov
incl
fcoml
xorb
pop
cmp
adc
jbe
cmc
jno
jbe
test
sub
sahf
lds
push
je
call
push
stos
add
mov
in
inc
pop
cmpb
lahf
pushf
jl
cmp
jb
scas
andb
sarl
push
cld
pop
cmpsb
out
rorb
jb
sub
pop
cmpsl
dec
xchg
xorb
mov
int
ds
shrb
xor
imul
mov
pop
inc
sub
test
xchg
fisttpll
decl
sbb
lcall
cld
outsl
sub
xchg
pop
test
imul
pop
movsb
fwait
mov
iret
incl
adc
test
int
leave
mov
test
aad
stos
test
dec
icebp
and
shr
ljmp
jb
std
out
dec
cli
decl
mov
cmpsb
push
or
shll
xchg
lahf
adcb
sbb
aas
jmp
jmp
jae
gs
cmpsb
push
out
scas
das
inc
dec
jno
jb
inc
shrb
aaa
mov
cmp
jg
pop
shlb
dec
outsl
cltd
push
mov
andb
lea
lcall
punpcklwd
inc
shll
or
stos
fsubrp
hlt
cmp
test
fcomip
cmp
fbld
xlat
sub
mov
push
ja
adc
or
shl
ljmp
jmp
pop
mov
dec
dec
adc
cmp
hlt
push
mov
pop
cmpsb
fcomip
pop
pop
ljmp
sub
rcrb
sub
je
lahf
aas
movntq
inc
loop
test
push
jp
imul
push
aas
in
sbb
xchg
dec
and
jg
lahf
lock
aas
cmpsb
or
or
lock
test
scas
mov
das
loop
sub
jbe
mov
ljmp
lcall
test
sahf
fbstp
cmp
adc
inc
cmpl
jmp
nop
inc
sbb
nop
jge
faddl
int
inc
jmp
jne
call
cld
addr16
mov
iret
mov
sub
jl
inc
inc
cltd
pop
shlb
jnp
fstl
dec
mov
add
jp
jnp
ljmp
jnp
adc
daa
cmpsl
xor
test
mov
call
fisubrl
enter
loopne
dec
push
rorl
dec
out
call
jb
jbe
add
pushl
push
inc
jmp
cmc
fdivrl
pop
in
movsl
aam
nop
or
ljmp
dec
cmpsb
mov
add
test
lods
ljmp
push
sbb
adc
add
pop
jmp
orl
cld
data16
cmp
push
adcb
out
push
stc
incl
sub
mov
push
and
test
call
mov
call
xchg
in
mov
lret
aas
jbe
cld
or
das
inc
pushw
push
jecxz
lcall
pop
arpl
jl
std
mov
int3
cmpsl
loop
leave
jb
adc
or
mov
leave
jge
decl
std
ljmp
mov
cmpsb
mov
inc
lcall
lret
cmp
das
scas
aas
jns
sub
dec
push
rorl
lcall
inc
and
ds
mov
xor
pushl
cmp
mov
leave
pop
hlt
or
pop
cmp
xchg
dec
in
xchg
cmp
inc
cmp
mov
sbb
cli
stos
sbb
lret
shll
in
pop
cwtl
scas
dec
mov
mov
push
xchg
pop
repnz
mov
nop
js
add
cwtl
cmpb
mov
sti
shll
inc
bound
or
notl
roll
adc
pop
sti
adc
pushl
lds
fildl
adc
adc
mov
jne
lret
or
int3
pop
push
jge
pop
adc
jmp
or
stos
or
ljmp
test
aaa
mov
dec
add
pop
jmp
xor
mov
jmp
inc
imul
pop
mov
xchg
pop
movsb
aam
ljmp
mov
subl
call
lret
cmp
decl
jge
arpl
lret
outsb
inc
sar
push
roll
loopne
add
lea
outsl
jmp
ljmp
ss
inc
mov
fwait
in
aas
mov
pushl
xchg
ret
loop
mov
push
cli
xchg
adc
xor
mov
pop
add
ficoml
sub
adc
jp
inc
dec
in
sbb
incl
fsub
dec
mov
xor
push
cld
cld
lahf
add
scas
jbe
ret
mov
insb
inc
std
fwait
je
stos
pop
movsl
jmp
leave
lods
sti
dec
leave
rolb
mov
pushl
repz
mov
test
icebp
aas
xor
ficoml
icebp
jne
push
ret
repnz
fcomps
pop
and
push
push
es
pop
das
xchg
mov
mov
push
lds
dec
fisubs
or
mov
scas
fcom
fnstcw
dec
xor
cli
adc
mov
lahf
cmp
stos
pop
mov
pop
mov
sub
in
stos
dec
notb
xor
dec
and
jno
pop
and
shrb
daa
jecxz
add
and
pop
test
pop
arpl
das
push
inc
cmpsb
add
inc
lcall
mov
lock
call
shrb
mov
stos
jne
outsb
add
incl
addr16
sarb
sbb
lahf
sub
or
mov
call
outsb
sub
dec
adc
jge
enter
dec
cmp
lds
out
cwtl
clc
jmp
and
push
and
shr
push
push
mov
es
cmpb
and
ds
scas
sub
filds
call
push
and
shr
jne
jbe
pop
jp
out
clc
ljmp
repnz
and
push
out
dec
sub
xchg
mov
mul
int
push
data16
add
xorl
cld
mov
aaa
xchg
xor
push
cwtl
xor
dec
ljmp
rcr
xchg
pop
push
cltd
stos
add
mov
iret
jmp
and
cld
mov
inc
out
pop
pop
int
push
rol
and
int3
dec
negl
lret
arpl
enter
nop
call
xlat
sti
incl
mov
xchg
sarb
out
push
les
ds
jg
sbb
mov
mov
inc
mov
pop
out
jbe
adcb
loopne
cmp
add
out
jecxz
insl
stos
adc
cli
decl
sub
mov
inc
nop
negb
js
mov
mov
adc
loop
fs
cmp
inc
imul
scas
out
fsubrs
push
or
cmpsl
addr16
imul
inc
repz
mov
push
bound
cmp
push
cmpsl
mov
jno
inc
xor
lahf
dec
pop
test
push
outsl
gs
sub
lods
push
frndint
ja
lcall
scas
cltd
arpl
or
or
dec
insb
in
movsb
cmp
jmp
ss
js
push
add
cmpsb
push
jg
dec
or
aad
lahf
xchg
shrl
mov
adc
xor
es
je
lret
mov
sti
dec
fisttps
lods
aas
ret
stos
dec
jg
aad
or
pushl
ds
push
push
loopne
pop
jl
mov
mov
mov
inc
pop
out
push
mov
call
sbb
into
fiadds
push
enter
mov
or
pushf
adc
push
les
std
sub
int3
mov
mov
jns
dec
push
dec
inc
xchg
push
pop
dec
cmpsb
pop
jbe
mov
sbb
jle
movsl
mov
aad
or
sub
mov
decl
in
adc
imul
jnp
sub
js
mov
mov
mov
aad
sub
or
repnz
or
or
mov
hlt
imul
pop
stc
inc
sarb
insl
lret
xchg
daa
adc
clc
push
mov
jmp
das
xchg
dec
jae
cmp
ss
lcall
icebp
cwtl
rcll
inc
jb
xor
push
mov
mov
dec
mov
out
add
cmp
adc
mov
push
jo
popa
movsb
cmp
lods
cwtl
mov
adc
mov
pop
rorb
sbb
rclb
jbe
mov
loope
icebp
lret
fsubrs
arpl
ljmp
mov
mov
cli
pop
fcompl
repz
inc
ja
jmp
push
daa
dec
stc
xchg
inc
push
mov
jbe
sub
aam
aas
sub
shrb
aad
mov
mov
jnp
mov
pop
bound
cltd
cli
insb
jne
xor
mov
add
sbb
int
rorl
popf
sub
and
addb
aad
es
cltd
jb
jl
lea
mov
sub
incl
fadds
pushf
imul
fiaddl
and
mov
shl
cli
adc
inc
xchg
mov
movsb
lcall
fmul
push
inc
xchg
loope
icebp
out
push
mov
xchg
cmp
popa
dec
les
ljmp
in
rcrb
jo
sub
dec
mov
mov
xchg
xorb
jmp
std
mov
push
mov
push
outsb
or
incl
mov
jae
call
inc
sub
sub
data16
lahf
into
imul
cmpsl
push
add
subb
incl
clc
lret
enter
or
sbb
fidivrl
es
lcall
jge
or
add
mov
sub
inc
call
push
sub
add
decl
cmp
and
jb
inc
cmp
jle
std
or
push
loopne
fs
call
sbb
push
cmp
ret
dec
cmpl
idivb
das
fwait
push
adc
in
mov
scas
xchg
and
inc
dec
dec
je
inc
call
arpl
sbb
mov
sub
sub
fsubs
jo
in
in
mov
outsb
arpl
pop
incl
xchg
sub
push
xor
ja
enter
pop
jl
sbb
div
dec
dec
and
fstl
add
pop
adc
inc
lock
in
inc
cs
outsl
outsb
xchg
jge
push
cmp
movl
or
outsb
mov
test
pop
mov
cmp
cmp
pushf
fsubs
jge
ficoml
mov
mov
std
mov
ds
xchg
mov
mov
sub
sbb
aaa
mov
xchg
hlt
decl
mov
test
in
jp
dec
fsts
adc
imul
fbstp
pop
push
xchg
movsl
imul
mov
bound
inc
lret
imull
decl
sub
push
hlt
push
add
pushf
and
jbe
adc
pop
push
mov
or
add
cwtl
addl
out
jmp
pop
and
shl
enter
mov
ds
outsl
jno
pushl
std
lcall
dec
mov
rcll
xchg
aam
mov
in
test
loope
gs
decl
mov
push
pop
jnp
jecxz
adc
xchg
hlt
sub
mov
xchg
loop
in
jmp
cmpsb
ljmp
incb
xlat
out
test
mov
aam
inc
push
mov
add
xor
push
lods
fnclex
rclb
mov
pop
aad
dec
dec
sub
decl
outsb
xchg
fstl
daa
jmp
rol
loopne
inc
adc
xor
dec
mov
sbb
sahf
roll
fdivrp
out
pop
mov
sub
out
std
cmpsl
jmp
sub
jmp
les
xchg
pushl
inc
xor
pop
pop
push
add
jp
repz
and
outsl
push
jg
lcall
ds
mov
nop
jo
mov
mov
lcall
pop
fwait
mov
dec
inc
jge
push
pop
scas
fs
add
jl
pushf
and
xor
sbb
sub
sbb
push
aam
outsb
mov
ljmp
imul
push
cmpl
jg
test
sbb
pushf
xorl
incl
mov
adc
inc
lret
out
or
xor
stos
out
push
out
fistl
jno
add
push
sbb
mov
ss
add
mov
out
push
movb
cmpsb
lret
lcall
fldl
stos
sbb
xchg
out
jo
pop
and
mul
in
icebp
lcall
adc
lcall
imul
push
aam
stos
adc
sbb
call
pusha
mov
lea
jp
dec
repnz
cld
in
mov
mov
sub
sub
fcomip
mov
cmp
jle
in
popf
mov
and
div
shl
mov
cld
xor
negl
insl
xor
incl
pop
mov
cmp
sar
jbe
ss
inc
imul
xchg
imul
ud0
inc
sahf
dec
ljmp
fcoml
adc
in
aad
pop
cld
testl
jnp
cmp
js
pop
jns
imul
cmc
or
outsb
jge
pop
daa
dec
mov
hlt
cs
out
sub
decl
pop
mov
xchg
and
sbbb
pop
and
cmovl
xor
stc
xlat
mov
hlt
loopne
call
mov
mov
xchg
sbb
cs
mov
stc
rol
aas
sbb
push
lretw
popf
out
cmp
shll
movsl
xchg
xor
es
sbb
orb
xor
js
decl
shlb
cmp
mov
lahf
lds
ja
test
imul
or
sbb
lcall
neg
cs
addr16
xchg
testb
jb
subb
rclb
add
mov
fidivrs
dec
das
xchg
std
pushf
xchg
movb
pop
lcall
iret
in
test
add
insb
aas
sbbb
call
outsb
in
xchg
mov
cld
cmp
jne
or
mov
insl
mov
sbb
pop
cmc
incl
lcall
and
aad
popa
xchg
mov
xchg
adc
fcomip
call
push
mov
push
add
imul
mov
xchg
flds
test
pusha
cmp
call
std
rclb
mov
pop
out
xchg
in
hlt
jecxz
loop
mov
lods
lahf
es
and
incl
push
das
je
test
push
mov
movups
pop
dec
incl
xor
scas
mov
decl
mov
outsb
stos
testl
jne
dec
or
arpl
test
bound
add
lret
shl
sbb
out
loop
lcall
ret
icebp
in
insl
cmp
or
adc
int3
bound
add
pop
pop
push
pushl
cs
mov
sub
and
and
push
je
sbb
rcr
xchg
cmp
lcall
ds
mov
cmp
arpl
dec
ljmp
fdivrs
inc
sbb
dec
stos
fiaddl
aas
mov
adc
mov
push
shlb
adc
add
ja
cmpsl
outsl
sar
push
fstps
mov
decl
in
iret
cmpsl
mov
mov
int3
sahf
movsl
cmp
xor
aam
or
idiv
pop
call
mov
rsm
pop
inc
lods
pop
arpl
adc
adc
push
mov
jmp
lds
loopne
cmp
popf
ja
mov
jge
test
or
jmp
dec
daa
push
push
sbb
push
nop
sub
or
push
cmc
push
shrb
hlt
inc
sbb
daa
adc
sbb
fwait
xor
and
mov
jl
jnp
add
and
lret
lahf
cli
xor
cmp
loopne
sahf
mov
xor
lret
out
clc
mov
jle
or
cli
push
pop
or
push
dec
out
sahf
aam
lea
mov
call
mov
jle
pop
mov
xchg
movsb
add
call
aam
mov
jmp
fldcw
mov
ret
ljmp
dec
movsl
sti
cli
jmp
fistpll
push
push
repz
inc
cmpsb
lcall
fildl
push
jbe
movsl
sub
jg
ljmp
loopne
pushl
and
repnz
mov
orl
xorb
xlat
add
dec
push
insl
and
fiaddl
pop
enter
pop
or
adc
sub
cld
mov
dec
push
in
lahf
xor
sbb
dec
icebp
xchg
inc
mov
dec
mov
imul
out
add
call
xorb
inc
lahf
out
in
mov
out
aaa
test
fwait
jmp
sahf
push
lcall
movzwl
data16
lea
in
push
addr16
or
scas
xchg
decl
cmpsb
add
xor
pop
pop
nop
xor
and
jmp
mov
rorb
popf
ds
mov
inc
loope
ret
push
scas
scas
xor
jg
mov
adc
lock
in
add
dec
cmp
sbb
out
xlat
dec
outsb
or
ficomps
flds
mov
push
ret
in
xlat
xorb
xchg
pop
jle
shr
jl
and
incl
sbb
cmpsb
lret
cmpsl
stos
lock
call
loope
mov
aam
mov
sti
push
into
test
imul
adc
cmp
fsts
or
push
fistps
mov
scas
sbb
jmp
fadd
adc
mov
shlb
gs
fiaddl
pop
lahf
sbb
std
add
incl
adc
sub
mov
jnp
pop
fsubrs
adc
sar
lcall
pop
out
sub
inc
adc
jnp
adc
inc
pop
in
ljmp
pop
xor
out
scas
gs
or
fsubrs
push
ficoms
pop
ret
and
incl
mov
push
add
xor
pop
divl
aas
jle
test
andl
je
cmp
adc
sti
in
dec
aam
aad
arpl
stc
push
mov
out
pop
mov
xchg
mov
mov
jns
ret
pushl
decl
xchg
xchg
sarb
roll
mov
into
mov
aad
nop
rcl
jmp
mull
aam
imul
push
cmp
cmp
sub
sahf
xor
sbb
jns
ljmp
push
mov
push
xchg
xchg
aaa
and
rcrb
dec
xor
or
or
cli
ja
in
lock
pushl
les
pushf
gs
jnp
ljmp
fwait
mov
xchg
dec
or
dec
stos
in
ljmp
mov
fisttpl
xor
and
lret
decl
dec
scas
jno
decl
test
test
hlt
jge
cmp
jno
add
maskmovq
testl
les
lods
aaa
jno
sahf
dec
sub
inc
xor
imul
sub
jg
inc
std
adc
setae
inc
mov
test
pop
clc
test
push
lcall
in
adc
mov
test
ds
outsb
aam
mov
dec
mov
call
cmc
push
or
or
or
mov
out
stc
subl
daa
in
inc
add
fildll
loope
sbb
out
mov
inc
pusha
loop
or
inc
fnsave
xor
sbb
cli
mov
loop
sub
roll
pop
jns
adc
outsb
std
add
fucom
in
sub
in
mov
shlb
bound
ret
cmp
mov
dec
cwtl
push
mov
imul
dec
js
arpl
cmp
jmp
clc
pop
imul
call
add
aas
data16
xchg
mov
out
jmp
test
decl
sbb
cmc
push
es
das
and
mov
xchg
pop
or
xchg
dec
jg
and
xor
add
in
loope
lods
push
mul
fmull
jg
pop
push
lock
pop
sub
pushf
cli
out
jmp
lods
out
xchg
mov
jmp
and
add
adc
or
test
stos
push
dec
cmpsl
or
je
jg
lcall
nop
lahf
pop
rorb
fnstenv
mov
xor
sbb
in
test
loop
ljmp
dec
sar
mov
inc
and
mov
cwtl
mov
xor
push
testb
cld
push
inc
pop
mov
sbb
into
insl
jmp
and
repz
test
pushl
lock
xor
inc
mov
pop
mov
fcoml
arpl
pop
mov
xchg
lahf
out
mov
ficomps
push
gs
call
daa
ret
cs
jmp
jmp
popf
scas
aad
rcrl
cmc
cmp
sub
and
jne
inc
arpl
cmpl
xor
add
cmpsb
jnp
adc
adc
inc
repz
lret
sbb
pop
adc
dec
hlt
pusha
sub
decl
fwait
pop
and
shlb
mov
dec
adc
hlt
fadds
adc
sub
fbld
cmc
imul
xor
jo
adc
stos
adc
mov
lahf
out
hlt
add
incl
movsl
lcall
pop
inc
push
in
decl
sub
leave
mov
lret
adc
repnz
sahf
fisttpll
cs
push
xchg
cmpsb
push
mov
decl
jbe
lods
push
inc
jle
mov
push
xchg
or
dec
incl
les
sbb
stos
sub
pushl
sub
cld
dec
addl
popa
mov
mov
nop
lods
je
sub
fbstp
cli
loopne
in
fadds
inc
xchg
xchg
test
lcall
andb
pusha
in
out
mov
add
in
mov
xchg
adcl
aad
call
add
jae
in
mov
lahf
insb
loopew
or
jecxz
dec
icebp
jg
jb
jbe
cmpsb
popf
push
push
jnp
pop
daa
cmp
pop
cld
jl
and
dec
filds
sub
sbb
add
dec
stos
pop
mov
inc
mov
jmp
add
scas
dec
xor
fcmovnbe
and
mov
cli
fwait
ljmp
push
das
sbb
xlat
subl
inc
ret
push
loope
rcrl
lret
stc
je
sub
jb
mov
scas
clc
pushl
add
fisubrs
imull
push
andl
loopne
call
fwait
sbb
inc
int
fdiv
xchg
movsb
mov
mov
jle
push
dec
push
sbb
xchg
daa
lea
inc
dec
loope
jmp
movsl
pusha
add
dec
sahf
loope
xchg
imul
ljmp
lea
dec
xchg
jmp
dec
fdivl
mov
fs
xor
mov
pop
mov
dec
dec
cld
dec
into
sahf
mov
push
jno
jmp
testb
adc
lcall
sub
lods
push
jecxz
pop
leave
cmp
jg
call
push
mov
aam
je
jnp
adc
ljmp
ljmp
loop
inc
insl
jge
enter
xchg
mov
mov
sbb
outsl
nop
dec
stos
stos
imul
shll
or
push
in
lcall
pop
jmp
leave
pop
inc
test
ss
dec
popf
mov
dec
roll
ljmp
int3
fisttps
sbb
mov
xchg
sti
push
adc
shr
adc
cmc
ss
insl
dec
cmc
mov
add
push
jmp
mov
mov
je
into
nop
mov
movsb
dec
sti
push
outsl
inc
xchg
lods
dec
add
gs
mov
push
aam
inc
cmpsb
inc
jp
cmp
pop
adc
call
loopne
lret
and
mov
stc
clc
or
pop
out
push
std
scas
mov
push
std
adc
adc
jp
jge
mov
ljmp
popa
jecxz
sub
jg
iret
sbb
add
push
ljmp
mov
push
mov
enter
loope
pop
sahf
mov
call
add
out
push
adc
inc
ljmp
aam
sbb
insb
lcall
repz
push
lock
das
mov
mov
push
loope
test
pop
test
idiv
popf
or
in
clc
inc
decl
loop
pop
xchg
and
in
shr
imul
enter
xor
ljmp
lcall
in
popf
in
sub
lock
fs
scas
dec
cmp
loope
jmp
cmp
lods
incl
incl
lea
mov
jp
jl
mov
fs
call
pop
inc
movsl
xchg
cmp
je
sub
aas
push
jg
movsb
dec
aam
fs
lea
out
ret
pushl
inc
arpl
xor
pop
and
jmp
pushf
mov
mov
fdivs
popa
aaa
ror
xchg
sbb
bound
popf
add
loopne
ljmp
dec
and
imul
lret
movsl
mull
dec
sub
adc
mov
and
sbb
fcompl
test
imul
jmp
negb
xchg
sbb
and
sbb
or
sbb
add
pushl
dec
jb
test
std
loop
lcall
or
sar
das
clc
data16
xor
sub
pushf
insb
and
lods
xor
mov
popf
pushl
jle
xor
fsubs
std
mov
cwtl
add
inc
cli
mov
xchg
sbb
jmp
cmpsl
int3
and
lcall
loop
scas
jo
jne
fadd
roll
inc
fdiv
mov
ds
mov
lahf
pop
add
pop
pop
xor
and
jle
mov
test
mov
arpl
aas
mov
dec
pop
call
addr16
shrl
lock
sub
cli
cmc
push
arpl
lcall
jmp
dec
or
xchg
add
mov
xlat
ss
mov
sub
sti
gs
incl
pop
cmp
je
jns
jle
push
cmpsl
mov
xchg
add
cli
mov
sti
dec
pop
stc
dec
and
js
inc
imul
ljmp
call
inc
lods
jge
pop
push
shll
shrb
nop
cmc
xchg
cmp
mov
cmp
es
gs
mull
lahf
hlt
push
addr16
les
dec
xchg
int3
outsl
scas
push
iret
out
in
mov
sbb
pop
pop
lcall
mov
jl
xchg
fnstenv
call
cld
jno
incl
lret
adc
dec
pop
sbb
jae
movsl
dec
dec
lods
mov
cltd
mov
ljmp
jge
outsl
adc
add
lds
mov
andl
clc
call
rcrl
test
push
mov
push
xor
mov
jb
out
roll
cmp
push
cmpsl
test
movsl
fildll
test
sti
decb
ret
loop
sbb
stos
test
pop
aam
inc
jne
sarb
cmc
nop
es
call
or
dec
out
stos
loope
jg
pop
pop
dec
sti
add
ficompl
sbbb
mov
call
cmpl
cmc
sub
mov
jne
jbe
mov
ljmp
out
mov
push
mov
add
inc
inc
sub
jmp
loope
decl
int
arpl
mov
xchg
jp
push
in
cmp
call
xor
ljmp
je
je
sbb
mov
addr16
inc
ja
jmp
out
dec
xchg
decl
loope
mov
daa
popf
pop
lds
out
pop
ss
aaa
les
jge
cmc
xchg
mov
int3
pusha
push
xchg
outsb
add
mov
loope
push
pop
jg
mov
hlt
push
xorl
cli
inc
popf
jg,pt
sbb
iret
xor
push
in
mov
fwait
outsb
jl
and
popa
sbb
idivb
sti
inc
outsb
inc
cmp
lods
ljmp
lcall
in
mov
sbb
mulb
mov
cld
fdiv
pushl
punpckhdq
inc
fldt
jo
mov
push
movsl
mov
in
or
mov
or
stos
int
xor
hlt
cwtl
imul
xchg
mov
jmp
lret
xor
sub
into
jne
fdivp
orl
sub
cmp
mov
insl
pop
in
out
cmp
repz
movsb
push
jns
imul
inc
mov
icebp
clc
cmc
addr16
aad
xchg
xor
mov
filds
adc
jecxz
push
cli
mov
dec
dec
mov
xchg
call
sahf
xchg
sahf
add
nop
pop
stos
and
shlb
ljmp
push
pop
sti
lret
lock
xlat
mov
repnz
fs
dec
hlt
sbb
push
inc
ljmp
sbb
std
mov
iret
popf
fs
addr16
scas
aam
dec
pusha
sub
jecxz
out
test
mov
aaa
mov
cmc
adc
jge,pn
lock
pop
pop
jecxz
ss
ljmp
pusha
push
fiaddl
xlat
imul
popa
mov
repnz
pop
pop
pop
sti
in
lcall
push
push
imul
mov
sar
cltd
clc
out
fisubs
xchg
adc
lods
xchg
add
cmp
fildl
and
lcall
pop
push
lods
cmpsb
stos
cmp
mov
int
mov
std
cmp
iret
std
mov
incl
adc
pop
push
inc
jge
cmp
test
fs
sub
dec
pop
popa
sub
dec
inc
das
cli
incl
loopne
test
out
lock
cwtl
int
xchg
jge
sbb
xchg
mov
in
outsl
cli
jp
pop
inc
cli
and
mov
xlat
inc
mov
in
xchg
inc
cld
test
sbb
dec
je
mov
enter
out
int
daa
subl
sarb
gs
mov
test
sbb
ret
mov
jbe
xor
push
fcomip
jmp
and
int
cmpsb
lcall
notb
pop
inc
decl
lods
mov
clc
hlt
xor
into
sbb
fs
movsl
loopne
cs
jmp
repz
incl
pusha
sar
aam
lahf
push
push
push
mov
sbb
sbb
outsb
lret
jmp
loop
iret
pop
push
clc
daa
and
in
testb
lcall
test
decl
sbb
push
mov
repz
pushf
xor
outsb
fcompl
dec
jge
xchg
or
cmp
sahf
insl
mulb
test
lcall
sbb
sub
insb
inc
push
cmp
dec
jo
icebp
adc
push
inc
sbb
js
outsb
lea
incl
nop
xor
push
cli
lea
hlt
and
and
jb
mull
sub
daa
cs
lcall
stos
xor
push
push
pop
mov
push
mul
jp
lret
inc
dec
cmp
popa
xorl
cld
inc
jmp
add
orl
push
popf
int
or
out
into
cmp
jge,pt
aaa
jg
or
pop
call
sbb
aam
xchg
popf
mov
lcall
jo
pop
sbbb
dec
subb
iret
addr16
xchg
push
xchg
xor
enter
adc
call
imul
mov
pop
test
lcall
call
mov
out
lret
mov
xchg
lcall
arpl
ss
mov
sub
xchg
std
je
out
repz
push
and
adc
dec
fs
std
dec
adc
mov
mov
fs
aaa
and
clc
ss
test
sub
les
sbb
mov
sub
adc
mov
push
ss
mov
adc
ljmp
scas
cs
rorl
jbe
add
add
xor
ss
adc
pop
popf
icebp
add
cmp
jmp
movsb
push
cmpsl
sbb
movsl
rorl
sub
test
ret
jg
nop
sub
sbb
pop
scas
andl
fimuls
insl
adc
adc
and
call
mov
xchg
pushf
push
lret
xchg
repz
xchg
or
faddp
inc
push
repnz
out
cli
std
push
les
inc
adc
push
mov
daa
aaa
jmp
aad
cmp
dec
ds
dec
orps
mov
pop
cmp
cmp
inc
jg
pop
mov
pop
rdtsc
adc
inc
loop
pop
adc
xorb
hlt
ljmp
jp
cmc
loope
jb
sbb
xor
inc
jns
inc
mov
insb
adc
repz
decl
sbb
jmp
mov
inc
cmpsb
cltd
notb
repz
mov
aas
xchg
push
cltd
in
mov
js
jl
shl
pop
cmp
lcall
jne
inc
sbb
push
fsts
cmp
xchg
xchg
lea
push
movsl
ljmp
inc
push
repnz
xor
add
sarl
jecxz
dec
cmp
call
xchg
out
jl
out
mov
lods
jno
mov
push
jno
mov
pushl
mov
iret
mov
outsl
es
add
pop
or
insl
jno
jns
mov
incl
sub
mov
ds
inc
mov
inc
sbb
xorb
decl
or
dec
jns
xchg
xor
out
ds
and
test
inc
push
lcall
mov
mov
adc
mov
mov
loope
inc
fadd
mov
add
jmp
outsl
loopne
xor
andl
mov
push
jecxz
in
jns
dec
inc
xor
mov
pop
adc
push
out
add
jmp
ds
js
mov
add
insl
xchg
addr16
cmpsb
fstl
inc
xlat
fisubs
jne
xchg
rcrb
lcall
fdiv
or
inc
adc
in
sub
jp
mov
sbb
aas
cs
lcall
fidivl
jge
mov
lods
aam
sbb
mov
lea
and
jns
sti
stc
repz
and
or
push
pop
inc
inc
jmp
fdivrl
scas
fldenv
xchg
mov
lcall
loopne
loopne
insb
mov
ret
test
fwait
imul
daa
sbb
sub
decl
xorl
adc
xor
adc
pop
xor
inc
add
out
mov
push
or
incl
stc
jmp
mov
mov
cwtl
jecxz
xor
decl
sahf
jns
mov
adc
sarl
aam
cld
jle
in
aad
dec
dec
loopne
add
ljmp
outsl
jl
sub
ljmp
jl
pushf
lea
adc
lods
cwtl
xor
int
popa
loopne
call
lock
stos
hlt
into
ds
xchg
adc
insl
cmp
lcall
nop
insl
fildll
or
mov
sbb
pop
ja
sbb
cmpsb
fldl
js
jecxz
mov
push
pop
cmp
jmp
xor
inc
push
or
pusha
sub
andl
dec
into
shll
or
aam
jmp
inc
inc
push
pop
mov
in
adcl
sub
fiaddl
std
ljmp
jne
popf
enterw
sbb
adc
lea
push
enter
jg
movsl
mov
xchg
ret
pop
xor
roll
scas
ret
push
mov
push
loopne
mov
decl
pushf
scas
mov
rolb
push
pop
out
jno
jp
dec
je
loopne
add
and
and
ds
mov
fucom
pop
jnp
jnp
call
xlat
xchg
dec
fdivrs
pop
jae
mov
decl
enter
dec
push
ret
mov
or
and
js
sub
es
and
ficompl
cmp
xchg
incl
in
insb
xor
add
pop
jl
dec
push
cs
incl
mov
adc
push
sbb
push
loopne
cwtl
inc
ret
fwait
in
in
mov
dec
sub
loopne
mov
or
mov
lcall
inc
pop
pop
sarl
pop
pop
sub
int3
sub
in
lcall
mov
xor
js
mov
inc
movsb
int
adc
pop
xor
sub
in
fwait
dec
std
mov
test
pop
out
loop
sahf
ljmp
dec
cld
inc
push
aaa
dec
pop
xchg
push
xchg
jle
js
mov
jo
mov
pop
mov
in
sti
cmp
out
imul
leave
lock
popf
inc
push
ret
mov
out
scas
mov
mov
mov
loope
mov
adc
adc
mov
jo
sub
push
mov
xor
sub
aaa
sub
incl
push
inc
adc
jge
cmp
pop
std
mov
push
push
cltd
pop
mov
call
dec
inc
jo
loope
or
push
push
cmp
ljmp
es
add
ljmp
dec
and
xchg
insb
lea
inc
jmp
xor
push
pop
dec
loopne
jmp
xchg
lcall
call
cmp
adc
push
aad
or
pop
mov
jle
out
sbb
jmp
out
add
enter
mov
inc
cld
mov
xchg
clc
pop
xchg
push
lcall
ljmp
pop
inc
shl
mov
adc
hlt
xor
dec
iret
testb
ss
mov
clc
ljmp
divps
ret
mov
inc
cli
xchg
cli
xor
lretw
xlat
push
movsb
add
mov
ljmp
push
add
sub
je
mov
outsb
stos
cs
arpl
lret
std
aam
pushl
add
mov
scas
das
pop
mov
sbb
xchg
cltd
cld
fwait
xchg
incl
aad
gs
popa
mov
movsl
xchg
pop
in
divb
testb
mov
popl
and
lcall
inc
repz
dec
pop
xor
loope
ret
stos
jle
jecxz
xor
pusha
inc
jns
es
cmp
cli
popf
icebp
shrb
cmp
lods
sbb
push
sbbl
xchg
sahf
fst
sti
popf
dec
add
fists
push
sub
push
jmp
ror
or
data16
test
notl
mov
aam
push
xor
pop
das
call
pushf
pop
ret
es
jo
add
jg
jo
push
mov
int
ret
faddl
push
jae
sub
push
push
cli
mov
insb
mov
lahf
je
xchg
call
or
push
pop
xchg
ds
jecxz
push
mov
inc
movsb
imul
out
inc
icebp
pop
imul
sbb
and
out
mov
sub
mov
jb
es
or
mov
fdivr
mov
xor
out
lds
enter
popf
in
and
fildl
in
jmp
fsubl
arpl
aam
xchg
xchg
ss
icebp
int3
orl
push
ja
loop
push
lcall
add
mov
xchg
shlb
fstps
inc
push
sbb
inc
push
stos
cli
jne
pop
jp
cltd
dec
or
jg
sub
or
add
aad
and
inc
lock
push
out
add
adc
in
and
xlat
inc
movsl
sbb
nop
pop
mov
icebp
pushl
std
repnz
cmp
or
pop
out
and
sbb
fiadds
fildll
es
pop
jnp
xor
in
adc
pop
cmp
xor
xor
inc
sti
jmp
add
push
fstps
es
mov
mov
gs
popf
mov
jnp
inc
cmpsl
cmpsb
int
daa
inc
ljmp
sbbl
pop
cmp
jae
cmpsb
lret
xchg
fbstp
jp
ds
rep
roll
daa
mov
push
xchg
xchg
js
mov
bound
lcall
lea
cmc
pop
mov
sbb
or
jbe
cmp
adc
test
mov
enter
inc
jle
mov
pop
loop,pt
repz
out
dec
dec
sbb
sbb
sub
pop
xor
fcomip
cli
cmp
sbb
inc
stos
cmpsb
push
jb
jmp
sbb
lock
inc
xorl
decl
mov
loop
sub
mov
icebp
jmp
push
jecxz
out
cmpsb
pop
mulb
and
fs
and
aas
test
arpl
hlt
lcall
jb
daa
mov
mov
and
and
stos
shll
mov
add
cld
sti
stos
mov
inc
cmp
xlat
xchg
jne
icebp
push
pop
xor
mov
and
hlt
aas
popa
sbb
dec
cmp
call
push
movsl
bt
sbb
cmpsl
mov
neg
stos
jmp
pushf
or
push
decl
cwtl
or
out
jae
mov
mov
mov
mov
and
cltd
sbb
cmp
ss
pop
add
hlt
add
decl
push
cmp
jo
stos
iret
push
dec
ja
cmp
and
fnstenv
mov
faddp
xchg
ljmp
out
scas
inc
ja
push
and
pop
int
xor
cltd
jns
cmp
jecxz
decl
popf
filds
mov
or
rorl
scas
andb
sti
in
xchg
mov
mov
push
mov
or
testl
maxps
incb
adc
lods
pop
nop
ja
jmp
xor
loope
cld
inc
mov
inc
push
and
testb
cmp
or
ss
xor
cmpsb
and
stos
pop
testb
push
sub
decl
outsl
xor
mov
mov
dec
mov
cltd
mov
shlb
cmp
iret
fcomps
mov
jo
xlat
cmp
loope
int
data16
mov
or
mov
xchg
scas
decl
pop
fs
call
scas
sarb
mov
decl
lock
xchg
push
and
test
sub
jg
jmp
mov
sbb
inc
pop
imul
add
xchg
fmull
adc
xchg
push
arpl
xchg
push
mov
stc
dec
push
cwtl
in
push
or
daa
cld
pop
inc
mov
pop
lods
pop
xchg
aam
pop
push
push
mov
cs
loope
xor
sub
jmp
sbb
ja
push
mov
jne
std
dec
out
pop
mov
fwait
lea
incl
lret
jns
out
test
jecxz
inc
out
adc
stos
mov
in
pusha
hlt
test
pop
incl
cmp
xchg
mov
inc
int
sub
adc
out
inc
adc
jmp
cld
push
outsl
in
inc
pop
stos
outsb
cmp
into
xchg
gs
xor
mov
inc
popf
pop
notb
clc
adc
arpl
adc
movsl
test
jg
push
cmp
pop
in
xor
loopne
xchg
jno
adc
sub
mov
ljmp
leave
push
cmp
mov
in
int3
cmp
pop
into
adc
faddl
push
lds
xor
lcall
xchg
mov
xchg
sahf
sub
lock
test
add
jg
scas
pop
fstpl
sbb
cltd
fcmovne
mov
stos
repnz
mov
cld
inc
out
jmp
in
sbb
adc
mov
std
inc
mov
aad
sub
idivl
jmp
pushl
lcall
lea
push
dec
jns
and
push
and
add
popf
insl
push
inc
mov
mov
ljmp
sub
cs
pop
inc
or
pop
cld
mov
add
dec
cs
aaa
shl
aam
dec
mov
incl
push
aaa
shrb
and
ljmp
push
call
imul
addb
or
movsb
jnp
insl
popa
pop
mov
cmp
stc
pop
push
xchg
mov
cltd
jae
sbb
pop
xchg
inc
sub
push
leavew
imul
jo
push
sub
xchg
jg
push
push
ljmp
add
push
xchg
cli
mov
jecxz
lcall
and
pop
notl
stos
add
lahf
jns
aaa
mov
sbb
decl
test
cmc
jno
int
lret
insl
fxch
sub
cmpsb
repnz
into
scas
push
fmul
adc
jmp
adc
fwait
mov
add
popf
inc
dec
sub
movsb
cmp
addb
lcall
hlt
push
mov
add
sti
icebp
adc
push
rcll
cmp
mov
ud0
sbb
inc
fstpt
int3
jecxz
sar
jnp
and
cmp
inc
pushf
and
jmp
loope
fcomps
dec
cmpsb
push
arpl
mov
iret
movsb
call
inc
gs
daa
or
sub
and
cmc
mov
pop
jno
xor
jne
xor
sbb
das
sub
inc
mov
push
cli
pop
inc
cltd
dec
repnz
into
mov
or
aam
adc
sbb
mov
faddl
jmp
fsubl
mov
xor
add
adc
decl
cmp
cmp
pop
xchg
outsb
xchg
int3
push
push
pop
adc
sub
into
xchg
push
or
pop
sub
es
incl
add
mov
repz
movsl
enter
dec
cltd
pop
sbbl
and
mov
stc
cmpsl
je
lock
rolb
stos
rcr
xor
adc
or
dec
decl
mov
insl
out
js
xor
push
xor
jb
neg
push
sub
xlat
lcall
sbb
sub
and
mov
lret
sub
xchg
mov
jg
sbb
add
loopne
sti
mov
lods
shl
out
loop,pt
pop
lcall
mov
out
aas
in
inc
xchg
fsubp
ljmp
mov
push
jns
inc
aas
mov
ds
incb
test
mov
fnstenv
mov
mov
in
lret
adc
pusha
inc
jo
or
and
or
lret
into
test
fstpl
addr16
lods
pop
cmpsb
xor
repnz
jl
jle
cmpsb
testb
xchg
inc
incl
sbb
enter
or
mov
ss
in
xchg
movb
mov
bound
xchg
in
or
mov
nop
pop
cmp
xor
sbb
inc
sub
xorl
ret
int
dec
inc
xchg
and
sbb
push
dec
cwtl
add
clc
pop
dec
pop
jnp
out
sbbl
ljmp
pushf
lods
mov
leave
in
mov
in
jg
fmul
je
dec
dec
in
push
inc
inc
lret
jge
or
and
test
test
adc
xchg
test
pop
lock
or
sahf
movsb
sub
or
pop
movsb
sub
cmp
mov
scas
push
fldcw
jo
in
mov
or
dec
ljmp
xor
mov
mov
cmc
cmc
inc
jg
clc
add
stos
inc
incl
test
aam
xchg
jmp
mov
xor
out
xor
mul
lcall
mov
es
lret
shrl
leave
inc
stc
jge
push
sbb
jg
jge
inc
sbb
jmp
push
adc
jmp
inc
subb
jge
out
adc
and
sar
adc
adc
int3
out
push
scas
add
push
sbb
and
cwtl
xchg
arpl
out
sbb
jg
stos
sbb
jle
push
cmpl
es
popa
fwait
ret
ljmp
je
jl
inc
jae
movb
movsl
popa
repz
pop
out
pop
adc
jg
lret
loope
sbb
pop
push
into
push
repnz
mov
mov
movb
push
pushl
or
popa
jnp
jp
mov
xchg
cmp
shlb
or
xchg
dec
les
call
inc
out
and
cmp
jb
mov
mov
mov
jecxz
dec
rclb
arpl
dec
adc
and
enter
inc
sub
xchg
mov
in
add
push
bound
ljmp
inc
rcll
jmp
mov
stos
psubusw
fmul
mov
mov
adc
pop
stos
out
sbb
popa
call
in
orb
push
cs
faddl
ret
into
xchg
ret
inc
and
popa
in
js
inc
fstpl
pop
sbb
xor
sbbb
pop
push
push
in
push
cmp
test
sub
aaa
mov
rolb
repnz
repnz
pop
incl
dec
and
add
cld
push
ljmp
mov
pusha
inc
dec
push
xor
mov
push
clc
jo
ss
sbb
insb
cwtl
lock
xchg
lds
and
inc
and
incl
jo
aas
cmp
dec
inc
pop
loopne
push
loop
dec
sub
pusha
jle
jb
imul
knotw
rolb
lods
lcall
in
cli
jl
call
ja
popa
cmpsb
aam
pushl
mov
xchg
jmp
in
das
cld
jmp
stos
mov
dec
lret
loopne
xor
inc
dec
ljmp
adcb
dec
ret
xchg
sub
ja
in
sub
addr16
into
sbb
fstps
lock
incl
pop
lea
enter
pop
mov
insl
cmp
xor
jp
popf
call
sub
or
out
mov
or
pop
je
call
fs
and
xor
pop
loop
jp
jp
daa
and
cwtl
push
popf
mov
aad
pushl
pop
xchg
cmc
dec
mov
dec
cmp
aaa
pop
rcll
pop
shlb
dec
outsb
mov
sbb
call
lret
pop
jecxz
xor
in
lds
jmp
sbb
inc
pop
dec
and
mov
or
insl
and
daa
cltd
daa
or
or
pushl
cmpsl
mov
push
inc
xor
das
stos
pop
int3
aad
nop
mov
cmp
loope
sahf
jg
or
movsb
mov
fisubl
xchg
jg
cmc
add
fcmovne
movsb
mov
xor
mov
and
mov
mov
mov
fisttpll
cltd
jnp
aas
shlb
adcb
or
cmp
cltd
inc
push
push
xchg
std
call
fnstsw
nop
mov
sbb
sti
std
push
cmpsb
cmp
pushl
add
fwait
add
iret
pop
neg
arpl
das
ljmp
pop
or
cmp
mov
cld
mov
mov
or
lcall
ret
adc
adc
repnz
flds
cmp
sub
lds
call
in
jmp
and
or
aam
ja
sub
inc
and
add
aaa
scas
incl
push
sbb
repz
fxch
jns
push
adc
dec
fisubrs
pushf
dec
xchg
aaa
std
jmp
repz
dec
xchg
jbe
cli
mov
rorl
mov
adcb
dec
dec
inc
mov
sarl
sti
popa
test
pusha
ss
lahf
aas
dec
xchg
das
and
stos
jbe
test
and
mulb
lds
idivl
lds
decl
mov
jo
out
int3
dec
ret
shl
push
sub
pushl
ret
aam
inc
into
mov
int
insl
popa
pop
and
adc
xchg
lock
jmp
in
mov
insb
std
adc
int3
gs
push
pushf
jg
mov
jae
sbb
shlb
addb
dec
stos
call
mov
test
adc
aas
cltd
sbb
mov
dec
lods
push
cli
mov
mov
jl
dec
xorl
push
ljmp
inc
in
lcall
dec
loop
pop
dec
popf
repnz
mov
loope
ss
incb
add
call
iret
jmp
fisubrl
mov
inc
jg
push
mov
mov
cli
or
div
negl
call
pop
rorb
addl
test
ret
orl
daa
xor
add
cs
call
jbe
inc
push
ss
jmp
pop
out
sub
cmp
sub
pushl
fs
addr16
push
sub
icebp
mov
mov
ret
out
sub
push
out
cmpsl
mov
mov
fnstsw
mov
push
icebp
and
rcrl
rcr
decl
jb
in
add
push
scas
in
pop
mov
inc
shll
clc
or
cmpl
push
push
inc
scas
pop
ret
add
lock
lcall
dec
adc
loop
sahf
movsl
mov
cmp
mov
decl
push
std
js
cmpsl
nop
mov
mov
aad
dec
stc
pop
testb
push
pop
pop
fcomip
call
and
xor
lock
enter
push
cld
sub
lahf
cli
call
shr
test
aam
loop
pop
into
mov
imul
push
nop
xchg
sbb
test
shlb
das
shrb
in
fs
dec
shlb
repz
call
xchg
and
mov
inc
xor
mov
xchg
pop
pop
rolb
and
pop
dec
addl
push
dec
aad
mov
xlat
daa
push
imul
mov
pop
popa
test
mov
push
sub
jg
call
ljmp
jno
pop
stos
sahf
pop
scas
mov
xchg
incl
js
or
ljmp
jno
daa
push
dec
mov
outsl
push
popf
jmp
jecxz
push
aaa
into
push
mov
inc
lods
dec
pushf
inc
or
jmp
xor
das
adc
sti
xor
ss
sub
pop
in
mov
dec
sub
jns
orb
and
loopne
loop
call
std
fwait
pushf
jge
ljmp
mov
cmc
jns
jecxz
adc
clc
pop
lret
xlat
incl
jp
movsb
xchg
in
mov
xchg
adc
roll
push
or
pop
jg
xlat
cmp
loope
scas
sub
mov
dec
imul
jo
rol
inc
or
sbb
or
jns
jne
in
or
fadds
push
and
jecxz
and
add
push
fstl
test
sahf
cltd
mov
scas
cmp
mov
pop
xchg
mov
call
cmp
das
sbb
add
xchg
gs
aam
mov
inc
aam
lds
adc
pushl
mov
sbb
lds
out
filds
dec
mov
out
mov
push
jbe
decl
data16
ret
mov
jecxz
stos
push
pop
cmp
cmpsb
cmp
or
inc
loope
or
xor
imul
lcall
or
and
data16
jns
inc
jb
fidivs
testl
push
stos
or
mov
icebp
insb
push
sbb
in
push
sbb
add
incl
cmp
lret
lret
xchg
mov
in
sub
jg
mov
fcmovnbe
cmp
decl
dec
sub
cmp
out
mov
lcall
jmp
test
mov
mov
sub
mov
subl
ljmp
lea
loope
rolb
xor
mov
push
ljmp
pop
jb
mov
call
add
inc
mov
sbb
cmp
dec
shl
dec
mov
decl
or
and
xchg
fbstp
sti
mov
leave
xchg
cli
add
cld
jne
push
pop
mov
sbb
lcall
cmpsl
sbbb
ljmp
pop
lods
mov
sub
push
inc
js
lock
xchg
popl
xchg
or
movsb
lcall
xchg
addr16
lods
mov
sbb
mov
cmc
fdiv
jns
xchg
cmpsb
ljmp
jnp
jo
xor
das
lock
shrl
sahf
shll
adc
aam
pop
xchg
adc
faddl
dec
xor
fistpll
aas
jle
add
loopne
imul
cmpsb
clc
call
aam
neg
pop
outsl
addr16
xor
pop
enter
mov
out
mov
inc
aas
mov
cld
repnz
jge
in
mov
mov
mov
xchg
add
subl
xlat
loope
mov
xchg
insb
ret
pop
jmp
sbb
push
mov
shrl
and
sbb
sbb
adc
jg
test
push
subl
push
pusha
mov
pop
xor
decl
fildll
push
xchg
inc
pop
inc
fistpll
sbb
imul
decl
sub
mov
xchg
push
fimull
and
test
popa
loope
daa
push
pushf
inc
jmp
adc
xchg
sbb
sahf
dec
addr16
addr16
cmp
jnp
shlb
enter
inc
nop
adc
add
dec
jle
fwait
call
and
mov
aam
jecxz
cmp
pop
stos
xor
ss
out
cmc
popf
jno
fstpt
loop
pushl
sub
and
jns
shr
cwtl
sti
adc
bound
sbb
repz
jb
aad
cld
imul
and
mov
xor
das
xchg
cmpsb
verr
pusha
movl
pop
rolb
lods
ss
sbb
dec
push
pop
push
lods
imul
call
lahf
nop
or
dec
scas
icebp
xchg
add
stc
pop
popf
and
cld
rorb
out
loope
icebp
data16
decl
and
jp
icebp
inc
xor
lods
imul
aad
lret
or
pop
fbld
aaa
std
fsubr
data16
jae
push
lcall
outsl
jnp
and
or
ret
xchg
or
xor
data16
ret
add
jg
sti
test
fdivrl
scas
sbb
call
leave
out
rorb
fcomip
inc
cmp
stos
mov
gs
adc
add
pop
or
lods
dec
jmp
inc
sbb
xchg
pop
sbb
push
rclb
dec
jo
sub
xchg
std
and
mov
ja
adc
dec
out
outsl
std
mov
subb
lcall
pop
js
insl
fimuls
xlat
and
add
mov
jmp
fdivrp
and
dec
out
jb
std
pushf
mov
daa
nop
pop
nop
jno
aaa
lods
insl
and
ljmp
aad
out
push
mov
mov
or
push
pop
fs
and
in
lcall
cmc
and
daa
and
adc
jl
js
scas
pushl
cmpb
xchg
stos
out
ss
std
pop
sti
inc
mov
loopne
ljmp
cli
sub
or
pop
push
xor
pop
stos
push
repnz
fwait
cmp
movsb
mov
jmp
insb
arpl
adcb
xor
mov
idiv
push
fisubrl
or
sahf
orl
ret
mov
jnp
inc
loop
jnp
push
sub
sbb
cli
cmp
or
pop
in
dec
es
xchg
test
dec
bound
inc
outsb
mov
pop
stos
inc
or
lock
add
mov
insl
lcall
pop
cltd
popa
out
xchg
call
clc
mov
inc
out
lods
sbb
xchg
mov
jb
or
lcall
leave
roll
sbb
in
dec
mov
push
lcall
mov
adc
mov
rcll
and
out
push
and
or
xchg
call
mov
out
out
clc
or
pop
push
pushf
ret
xchg
shll
or
roll
add
roll
mov
and
in
or
nop
out
fucomip
jge
adc
add
je
dec
sub
inc
inc
cli
mov
mov
in
xor
decl
insb
sbb
or
and
gs
mov
je
and
add
adc
and
cmp
in
test
roll
lds
in
loope
decl
jne
loope
adc
mov
mov
clc
stos
inc
jne
ret
mov
outsl
push
cmpsl
lods
loop
xchg
and
dec
cmpsl
test
cmpsl
and
pop
push
gs
pop
push
imul
jmp
dec
mov
dec
test
lret
jl
mov
je
decl
pusha
hlt
cli
bound
mov
sub
add
fisubrs
mov
dec
pop
sub
fnstcw
stos
mov
xor
lods
shlb
negb
repz
stos
decl
sbb
mov
xor
mov
je
addr16
cmc
jmp
and
fwait
add
inc
imul
cmp
mov
js
iret
mov
xchg
test
sub
cmp
imul
cmpsl
mov
add
dec
mov
pushl
aas
adc
and
lock
xchg
mov
clc
data16
push
call
add
jno
les
mov
inc
mov
and
stc
mov
subl
call
scas
loopne
movsl
es
pusha
imulb
add
shrl
lods
lock
pushl
decl
sub
mov
jg
xor
mov
mov
push
jnp
outsl
cmp
sub
mov
les
push
jbe
cmc
insl
int
mov
das
push
xor
pop
xor
lods
lods
jbe
shlb
pop
add
pop
jge
cmpsb
cmp
push
data16
ljmp
mov
repz
das
sub
xor
pop
dec
fldcw
fmuls
stos
lea
lcall
cmp
je
jae
mov
pop
mov
dec
leave
addr16
in
lcall
aad
mov
outsl
fs
xlat
out
movsl
or
mov
jne
jp
xchg
fcompl
xchg
enter
mov
sti
stc
jl
in
pop
xor
sbb
sar
jmp
outsb
sub
push
je
sub
cmp
fwait
and
movsl
xor
pushl
push
inc
pop
jle
fnclex
cmp
dec
imul
lcall
adc
fdivl
cmp
shrb
leave
hlt
mov
or
ljmp
and
cmc
test
and
jmp
dec
repz
aam
incl
movsb
or
lcall
repnz
push
sub
and
fcomps
jne
sbb
leave
lods
movsb
cli
mov
ret
les
loopne
ds
cwtl
xorl
xor
insb
sub
sub
shrl
divl
call
mov
mov
test
sbb
repnz
mov
fsubr
clc
jmp
jl
jo
mov
xchg
jb
jp
imull
pop
pop
push
xor
mov
pop
cmc
ljmp
out
dec
jle
fisttpl
xchg
inc
sahf
jg
andb
jnp
jmp
enter
push
jo
out
or
cmc
je
adc
adcb
sahf
lcall
loope
or
rcrb
adc
leave
lock
call
enter
scas
in
cltd
mov
mov
ss
adc
jge
mov
and
sub
orl
aad
popa
setl
add
inc
mov
leave
je
xor
clc
pushl
inc
mov
aam
inc
insl
xchg
lret
jmp
mov
ret
hlt
adc
dec
mov
cmpsb
xchg
js
sbb
mov
sub
sub
jecxz
fimuls
or
pop
jecxz
ljmp
sbb
fisubrs
mov
pop
inc
test
mov
into
fisubrs
call
inc
incl
sbb
lcall
arpl
push
add
inc
fnstcw
mov
mov
push
fwait
push
mov
js
inc
pop
mov
popa
call
icebp
and
or
inc
iret
out
jae
xor
sub
cld
add
sbb
lods
cmp
int3
into
test
cmp
or
xchg
icebp
lahf
inc
sub
sub
imul
lahf
popa
lods
out
mov
stc
pop
adc
daa
and
pushl
xor
enter
mov
out
mov
xchg
out
jl
popf
sti
ljmp
pop
and
jae
sub
xor
mov
mov
repz
icebp
cmp
pop
xor
jne
dec
xor
mov
clc
jbe
push
cld
ss
stc
cld
cmp
sbbb
notl
mov
leave
jmp
lret
xor
test
out
scas
sbb
addb
test
ljmp
adc
jno
rorb
leave
push
pop
sbb
jg
ret
sahf
mov
ret
sub
adc
incl
test
in
stc
mov
lcall
scas
mov
rorl
or
imul
decl
pushf
mov
and
stos
les
push
loopne
mov
mov
popf
cmp
inc
int
push
or
xchg
or
jecxz
and
mov
fistpl
sub
pop
std
stc
das
inc
das
push
pop
stos
popa
cmc
xlat
aad
mov
ret
lcall
fisubs
jno
inc
shlb
or
lret
ret
fcmove
js
jbe
adcb
insb
or
push
pop
das
mov
jg
inc
scas
adc
cmp
push
aaa
cltd
inc
mov
jg
inc
ret
mov
ljmp
mov
decl
lods
test
lahf
cmp
xlat
shr
xchg
jl
sbb
out
inc
pop
xor
lcall
imul
cmpsb
incl
leave
xchg
repz
jo
hlt
jo
popl
lods
jg
lcall
scas
lods
leave
jns
or
mov
clc
jge
inc
xorl
pop
mov
arpl
pop
xorl
call
inc
fnstsw
int3
pusha
std
pushf
push
call
leave
mov
in
andl
ljmp
and
mov
addr16
out
out
push
adc
popl
mov
into
jb
mov
aaa
push
add
jno
push
xabort
decl
push
push
in
jmp
in
pop
inc
lret
decb
mov
cmc
sbb
mov
xor
sub
fsubs
in
aaa
push
sub
pop
push
cmp
xchg
stos
lcall
xchg
mov
xchg
xchg
leave
daa
fxch
outsl
movsl
stc
dec
mov
scas
pop
sub
xor
fisubl
ljmp
ljmp
out
xchg
jge
sub
mov
dec
mov
sub
mov
jg
stc
lret
test
push
ds
inc
nop
mov
call
hlt
jl
bound
outsb
addb
andl
je
dec
pop
inc
pop
cmpsl
fistpl
add
xchg
jmp
lcall
ja
sbb
adc
lahf
jno
jo
mov
ljmp
mov
inc
leave
std
mov
lahf
mov
pop
std
incl
lret
lods
enter
push
push
stos
aas
out
sbb
sbb
pusha
iret
xchg
adc
pushl
mov
shrl
in
test
jmp
dec
pop
push
imul
es
clc
inc
or
insl
mov
jbe
push
cmp
sub
insl
movsl
push
out
stc
pop
inc
or
mov
in
out
mulb
jp
or
mov
mov
orl
int
xlat
repz
pop
mov
jb
and
in
daa
dec
enter
jg
fisubrs
inc
out
mov
loopne
mov
sti
out
popf
and
xchg
lock
push
xor
xor
in
loop
jo
shlb
ljmp
fildll
inc
call
push
testb
sarb
cmp
mov
stc
push
mov
repnz
pop
fs
dec
push
leave
inc
dec
add
xchg
add
sub
push
aas
call
jg
xor
insl
dec
popa
shrl
sub
stos
and
es
add
sahf
aam
sar
ljmp
cltd
mov
int3
addr16
sbb
cltd
push
jne
jge
or
pop
idiv
jg
xor
popa
vhaddpd
int
push
pop
out
mov
in
xor
jecxz
mov
shr
std
icebp
mov
add
ror
push
add
mov
and
pusha
loopne
je
lret
add
inc
addb
mov
jmp
fldl
mov
dec
and
in
out
jb
adc
inc
dec
loopne
outsl
enter
cmp
aam
gs
lcall
movsb
fs
xorl
filds
xor
loopne
test
fdivrl
jae
sub
test
ja
cli
pop
ret
adc
xchg
dec
aad
call
pop
or
inc
sahf
pop
sub
pushf
jns
xor
cmpsb
dec
mov
add
inc
sar
jg
aam
mov
lret
loop
mov
loope
mov
add
sti
mov
movsb
jno
aaa
or
addb
mov
ljmp
test
fisttpl
mov
movsl
xor
pop
mov
inc
mov
sub
mov
pushl
xchg
shlb
iret
sbb
movsl
insb
in
cmove
mov
ljmp
lcall
lods
mov
sub
sbb
and
and
and
push
scas
push
pop
add
inc
cmpsb
mov
jne
out
fsub
sbb
nop
xchg
cld
mov
movsl
mov
mov
jbe
in
fisubl
push
add
std
repnz
cmp
pop
jl
jmp
jne
int3
stc
pop
ret
push
mov
jg
in
mov
jle
aaa
cwtl
sbb
fwait
dec
cs
sbb
push
sub
cmp
ljmp
rcrb
faddl
fucompp
jbe
and
roll
nop
jo
stc
add
cmp
adc
xor
jns
pop
sub
pop
xor
loopne
sbb
icebp
or
adc
jmp
push
cmpsb
outsb
or
xchg
subb
shr
mov
mov
sbb
mov
add
push
adc
test
adc
and
or
push
inc
jl
sbbb
xchg
sar
cld
inc
pop
cld
mov
adc
xchg
es
or
push
mov
mov
jp
out
hlt
xor
ja
aas
jmp
sub
push
push
bound
sub
push
lcall
jmp
cmp
mov
mov
mov
or
stos
jle
and
sbb
insb
mov
out
dec
adc
jmp
mov
test
mov
or
jle
rolb
cmc
sbb
push
xor
incl
xor
mov
mov
insb
cmp
fisttps
sar
ljmp
add
and
and
mov
out
dec
clc
mov
call
je,pn
hlt
mov
mov
dec
sti
test
adc
or
mov
jg
leave
dec
aaa
jnp
in
mov
clc
ljmp
test
rcrl
and
ljmp
pushl
aad
into
jg
jle
test
scas
les
into
and
adc
or
xor
push
repz
jb
adc
cltd
loope
and
scas
movsb
mov
xor
mov
sti
dec
add
sub
pop
push
int3
cld
pop
xchg
lahf
popf
out
pop
pop
pop
lock
lcall
mov
pop
call
sbb
lret
inc
lods
pop
and
push
or
nop
int
inc
and
add
call
lahf
xchg
add
and
mov
lcall
add
push
mov
lods
sbb
xchg
test
ljmp
loopne
outsb
imul
push
adc
lcall
int3
jns
pop
dec
pushf
test
cmp
add
push
inc
fnstsw
xor
mov
cmp
and
test
loope
nop
and
fiadds
push
push
xchg
lret
je
mov
mov
push
jae
in
std
arpl
inc
or
fsubs
sub
mov
push
ret
fisubrs
shrd
sub
cwtl
xchg
mov
es
push
or
lcall
es
or
repnz
fidivrs
movsb
fstl
and
ljmp
imul
add
xor
jmp
lea
inc
out
push
mov
std
sub
lahf
fimull
dec
cli
adc
push
adc
push
dec
test
sahf
mov
sbb
jmp
leave
jne
add
jecxz
jne
push
mov
sub
dec
out
mov
mov
xlat
notb
je
shlb
mov
or
hlt
sbb
pusha
enter
cld
dec
or
pop
fwait
mov
addl
or
cs
outsl
jge
rclb
das
sbbb
mov
jecxz
inc
shll
add
and
fs
ja
add
out
push
mov
fisttps
out
fucom
cmp
lock
in
dec
lods
outsl
clc
dec
pop
mov
int3
lcall
dec
cs
xchg
dec
and
add
ja
stos
or
push
test
in
pop
fwait
shrb
js
fs
rcll
mov
cmc
fucomi
insl
addr16
loopne
inc
push
in
cmpl
and
ljmp
nop
pushf
inc
mov
cwtl
add
and
push
add
loope
mov
lcall
orl
in
dec
imulb
stc
xlat
pop
mov
insl
cli
push
rcrb
mov
scas
sbb
outsl
sub
jbe
lret
mov
icebp
jne
pushl
dec
push
cmp
ret
and
xor
pop
xor
fs
lods
jno
xor
jmp
push
popa
mov
insl
leave
xor
ret
dec
sub
xor
test
lds
cmpl
inc
shll
add
and
mov
and
lcall
mov
call
pusha
in
fdivrl
add
icebp
mov
cmp
adc
fs
jno
jne
movsl
pop
pushl
mov
mov
test
fldl
inc
call
and
jo
loop
and
repnz
jmp
mov
daa
cs
or
lods
jl
push
jl
push
je
mov
xchg
sub
pushl
cmpsl
jg
rcrb
negb
decl
loopne
pop
in
sbb
mov
lock
push
dec
pop
stos
add
mov
out
pushf
repnz
and
jmp
outsl
lahf
enter
mov
mov
dec
daa
ret
pop
ja
inc
pop
jmp
decl
sbb
lcall
xchg
cmp
xor
imul
call
addb
ljmp
sub
out
and
pop
in
xor
into
dec
inc
xchg
and
out
scas
cmpl
pop
add
lods
loopne
jmp
cmpl
or
bound
lea
arpl
incl
int3
xor
push
loope
mov
popf
jb
pop
test
pusha
ror
xchg
lret
add
jmp
fsub
ret
stc
bound
das
imul
sbb
fildll
js
call
jmp
testb
sbb
inc
mov
fcmovb
aaa
jmp
mov
psubd
test
add
pop
sbbl
cld
dec
inc
mov
repnz
shl
jl
clc
js
imul
or
ja
push
or
sub
ja
out
fisttpl
flds
pop
test
ds
fstl
je
outsb
inc
mov
or
jmp
dec
lcall
pop
dec
aad
adc
clc
sbbb
jns
cltd
cli
std
jmp
jns
jmp
or
inc
movsb
addr16
lcall
push
mov
xchg
jl
pushl
mov
and
pop
dec
movsl
xor
and
xchg
push
adc
mov
add
push
sub
lds
add
jmp
and
mov
lcall
into
cmpsl
mov
test
xor
testl
adc
dec
std
ljmp
adc
jne
mov
dec
outsb
adc
sub
xchg
outsl
decl
mov
mov
enter
in
mov
lock
out
es
mov
push
add
sub
or
and
mov
sbb
fisttpl
lcall
out
push
jo
push
popf
jbe
pop
cmp
insl
push
push
inc
das
cli
mov
sbb
enter
andb
sbb
jg
stc
push
roll
xchg
add
jnp
xor
xchg
push
test
cwtl
mov
imul
sbb
stc
in
icebp
fwait
jno
andl
mov
dec
call
lods
mov
in
stc
data16
cmc
inc
cmp
xchg
pop
cmp
xor
push
iret
jae
jg
test
jle
jmp
xor
lock
test
enter
jmp
push
mov
push
mov
xchg
jecxz
inc
pop
xchg
jp
dec
int3
xchg
std
push
sbb
cltd
push
mov
and
idivb
xor
out
out
add
fcomip
lcall
push
nop
fsubr
adc
popf
or
outsl
in
dec
imul
mov
aad
pop
pushf
mov
jae
mov
jg
mov
add
mov
stos
inc
dec
ds
xlat
push
rorb
lcall
ljmp
xchg
ret
lods
add
pusha
ja
insb
pop
scas
mov
lds
and
jecxz
incl
sbb
add
jne
pop
cmpsl
sbb
enter
xchg
mov
ja,pn
pop
push
gs
dec
cmp
mov
sub
dec
sub
jmp
lcall
bnd
xlat
imul
arpl
out
push
inc
test
cmpsb
dec
in
decl
xorl
in
in
fisubrs
aad
fwait
cmp
pushl
outsl
pop
push
dec
cmp
sti
sbb
xchg
cltd
mov
ret
decl
pop
rcr
pusha
pop
cmpsb
jmp
cmpsl
sar
pop
subb
add
jg
push
inc
lahf
int3
imulb
jno
adc
cli
icebp
adc
push
cmp
das
jmp
or
or
mov
add
jb
jg
incl
iret
stos
sbb
mov
push
xor
push
or
pushl
cld
sbb
mov
shrl
add
xor
lcall
cltd
pop
xor
push
lcall
es
jg
stos
jp
fisubrl
mov
lcall
lods
inc
sub
stos
adc
addr16
cwtl
fcos
mov
pop
xchg
pop
sub
push
mov
mov
pushl
ja
and
mov
test
adc
adc
mov
adc
adc
rclb
test
addl
mov
and
das
fwait
pop
push
pop
cmpsb
inc
mov
call
sti
aaa
sar
mov
fwait
iret
je
shlb
arpl
jle
jmp
xchg
xor
stos
outsb
cmc
repnz
adc
out
sar
bound
cltd
mov
lcall
hlt
push
pop
je
add
decl
xchg
andb
inc
or
push
jno
mov
ja
imul
fld
dec
lea
enter
call
dec
xor
aam
add
mov
lret
push
test
cmc
inc
lahf
xlat
shrb
repz
sbb
pop
sbb
enter
loopne
mov
or
cmpsb
cmp
sub
push
fwait
mov
cmp
sbb
xchg
dec
mov
mov
test
loopne
es
out
jg
or
push
push
xchg
push
lcall
shlb
push
ds
cmp
out
pop
mov
push
stc
sub
sub
call
inc
daa
jnp
jge
mov
jbe
mov
jb
xchg
movsl
ss
aam
cmp
jne
or
scas
stos
test
mov
arpl
test
cmpsb
loopne
xor
jmp
cmp
int
sub
add
adc
incl
xor
clc
shll
cltd
mov
fnstenv
inc
js
and
int
mov
and
jmp
cltd
stos
outsl
jbe
pop
fs
mov
lcall
add
sub
push
jg
cmp
ret
js
jl
add
cmp
sbb
gs
pop
mov
add
fnsave
mov
in
jp
test
icebp
std
xor
xchg
pushf
outsb
sub
adc
mov
jecxz,pt
sti
dec
sbb
lcall
ds
xchg
xor
repz
and
ljmp
dec
mov
iret
xor
mov
cmp
pop
cmp
ljmp
imul
ja
fnsave
or
cwtl
call
je
in
xor
jno
or
push
mov
or
adc
or
icebp
rorb
dec
mov
pop
vmread
dec
into
jne
sub
lods
mov
push
and
jg
jb
sarl
orb
sar
mov
or
inc
je
enter
jg
cmpsb
loope
loop
mov
push
idivb
lods
add
push
push
ljmp
incb
or
xchg
ds
lret
mov
mov
out
sar
push
in
xor
enter
xorl
lea
mov
cs
pop
xchg
pop
inc
je
mov
rolb
adc
into
mov
cmpsl
call
stos
pushl
and
imul
xchg
add
nop
dec
icebp
test
dec
mov
dec
out
jl
inc
call
sub
and
jno
lahf
pusha
push
imul
dec
jp
pop
gs
ljmp
cmpsb
test
ja
lcall
addb
icebp
neg
xchg
sbb
xchg
leave
dec
and
cmp
cmp
xlat
popa
loopne
pushl
mov
das
cmp
mov
test
mov
cmp
mov
repnz
out
lahf
sbb
mov
and
pop
std
xor
jae
sbb
dec
clc
pushl
ss
dec
cs
push
nop
test
sti
mov
jns
imul
or
sub
inc
fsts
and
lods
mov
les
repz
cs
push
xor
xchg
xor
xlat
lcall
or
or
cli
mov
out
mov
stc
imul
mov
adc
rorb
lods
inc
push
inc
ljmp
decb
pop
mov
sbb
mov
xor
in
mov
adc
fcos
fcomip
jae
add
pop
repnz
mov
fbstp
subl
push
pop
jp
xor
aad
and
mov
jns
nop
mov
ja
dec
leave
dec
int3
es
fcomp
jmp
or
dec
out
xchg
sub
lret
popf
push
addb
jle
sbb
fwait
pushl
mov
lds
or
xor
xorl
and
lods
call
sub
push
sub
sub
mov
sbb
mov
jnp
arpl
int3
jns
inc
inc
cmp
pop
das
sbb
inc
cmp
inc
jle
pushl
push
mov
insl
movl
cmpsl
jno
jmp
pusha
sbb
inc
lds
pop
mov
cli
dec
cmp
jns
and
popf
aas
sub
add
mov
mov
daa
popa
js
ljmp
shrb
push
stc
outsl
dec
flds
add
stos
jecxz
cmpsb
bound
std
sbbb
mov
xor
sar
push
jbe
popa
fisubs
dec
imul
sbb
fldl
jg
dec
out
fldl
lcall
negl
shlb
mov
push
pop
arpl
stos
ss
ljmp
int3
aad
jp
sub
sbb
lahf
xorb
mov
xor
xor
sbb
pop
push
inc
sar
scas
sarl
and
sub
jns
add
dec
xor
fldcw
lahf
adc
aam
nop
jle
sub
jl
addr16
scas
jne
cmpsl
xor
push
movsb
xor
dec
sbb
inc
mov
xchg
out
or
call
push
push
lock
xchg
fs
imul
mov
jg
push
lods
ret
call
push
adc
sbb
out
decl
cmp
mov
or
inc
or
dec
and
adc
insl
jne
pushl
repz
mov
inc
jbe
jne
subb
inc
leave
cmpsb
dec
adc
ds
dec
jg
call
add
inc
std
pusha
inc
cmp
outsb
mov
insl
sbb
jmp
mov
inc
xor
ds
rcl
jecxz
or
xchg
jl
decl
xchg
icebp
xor
mov
stos
and
xor
jbe
jne
es
out
lcall
push
aad
push
pusha
insl
pop
aad
in
shlb
mov
psraw
inc
jmp
sti
pushl
cld
incl
popa
sarl
push
notl
jl
xor
jb
call
sbb
jmp
call
fsubl
cmc
call
cmpsb
and
adc
je
hlt
cwtl
pushf
shrb
mov
xor
enter
add
lods
scas
gs
adc
mov
into
aad
adc
lcall
cmp
or
imul
outsl
cld
testb
adc
ljmp
aaa
jmp
xor
test
out
push
add
cmp
test
ljmp
xor
popa
stos
mov
push
cmp
jge
movsl
or
clc
call
jb
mov
lea
jbe
ret
sar
ljmp
cmp
jmp
inc
xchg
outsl
inc
insl
jmp
pop
sar
ljmp
mov
push
or
add
shlb
insb
pop
and
sar
jo
sub
in
pusha
sti
lcall
adc
sbb
and
xchg
mov
push
mov
dec
jmp
add
mov
dec
aaa
cmp
jp
inc
xchg
jbe
jg
inc
sub
in
cmpsl
adc
icebp
pop
rcrl
push
xor
adcb
pop
cmc
or
dec
fs
aam
rorb
pop
ljmp
dec
sub
call
sub
out
sub
push
fldl2e
push
mov
int
jo
rcrl
rcll
and
int
imul
pushf
jno
into
out
shr
sub
sub
lahf
imul
out
mov
gs
and
incl
ljmp
nop
jno
inc
jo
stos
xchg
imul
ds
rep
bound
dec
inc
mov
std
dec
addb
cmp
jns
pop
mov
fisubrl
jno
xchg
mov
decl
pop
xchg
repnz
sbb
xchg
clc
movl
add
insb
mov
push
ret
mov
dec
ljmp
inc
loop
push
add
mov
pop
cltd
xchg
jmp
orb
jg
xor
test
movsb
popf
ret
sub
mov
jecxz
mov
or
leave
call
sarb
sahf
dec
in
jecxz
xchg
cmp
cmpsb
lcall
pop
jbe
push
or
or
sub
jns
mov
sub
mov
outsl
cmp
push
xchg
push
aaa
xor
es
fucom
mov
pop
hlt
pop
jge
into
push
mov
jmp
jae
andb
inc
push
pushl
bound
arpl
in
arpl
sbb
cld
fistps
xor
cwtl
fdivr
test
jno
in
inc
pop
inc
pop
les
call
xorl
jb
jp
sub
jle
pusha
inc
insb
sub
andb
lods
mov
adc
insb
das
mov
out
lods
pop
or
fists
jbe
mov
mov
stos
xorl
add
mov
decl
cmp
mov
xchg
sbb
and
hlt
adc
ja
lea
lods
and
mov
xchg
and
jg
repz
icebp
jg
add
fsubrl
out
test
and
mov
mov
out
clc
call
lret
jbe
push
push
and
xchg
or
push
mov
shlb
mov
cmp
cmpsl
rorb
jo
test
rolb
push
cmp
loop
jl
lret
gs
popf
dec
push
jmp
ss
pop
xor
pop
jp
sarl
mov
and
sub
fdivr
and
cli
mov
pop
xor
sub
aas
jl
shrl
or
cmp
mov
push
adc
and
ja
xchg
cwtl
mov
adc
ud0
dec
mov
mov
sub
ja
xchg
lds
and
sub
es
incl
popf
jge
pop
mov
jbe
dec
into
arpl
rcrl
sahf
dec
rcll
push
xor
dec
testb
cwtl
mov
loopne
ja
or
cmp
mov
mov
lcall
outsl
cmpsb
call
loop
nop
insb
push
fists
push
decl
xchg
lcall
icebp
popf
dec
negl
adc
sbb
push
int
mov
loopne
xchg
fs
adc
std
ds
nop
jecxz
mov
mov
pushf
push
incl
or
cmp
les
xchg
xor
imul
incl
or
dec
xchg
shl
cmp
outsl
and
xchg
dec
incl
adc
jne
enter
xor
adc
into
lods
lcall
stc
les
adc
call
orb
test
test
call
jp
sub
sti
fwait
repnz
clc
push
enter
pushl
data16
jge
scas
and
inc
jnp
or
into
mov
negl
sarl
pushl
ret
cltd
in
mov
enter
push
mov
adc
lcall
cwtl
dec
hlt
insl
cmp
push
imul
stc
mov
pop
cld
lcall
enter
jecxz
sbb
xor
test
lock
in
dec
mov
cmp
lret
outsl
shll
sbb
test
psrld
repnz
mov
aam
cld
lcall
insl
xor
mov
push
aas
fmuls
scas
mov
fildl
lcall
sar
fildl
stos
or
sbb
jo
push
mov
lock
icebp
es
push
jbe
dec
dec
mov
cmp
hlt
ds
cli
into
lods
stos
idivl
clc
rcrb
mov
mov
mov
dec
roll
sub
mov
mov
in
xor
xchg
pop
mov
in
addr16
fnstenv
jns
jp
fidivl
or
ljmp
clc
stc
stc
jb
xchg
cli
cmpl
clc
inc
or
mov
dec
ja
out
outsl
ret
outsb
outsb
or
adc
lcall
or
stos
lret
rcll
fld
repz
cmp
cmpsb
fistpll
outsb
ds
fistpl
sub
out
loopne
in
xchg
mov
leave
arpl
jecxz
lcall
fdivs
xor
fcompp
hlt
fstpl
jecxz
and
lods
popa
ljmp
lods
jo
add
push
push
lret
sar
adc
and
cld
sbb
popa
cmc
cmp
test
xor
mov
mov
decl
repnz
nop
cs
popf
push
mov
pop
or
mov
cld
sub
sub
dec
inc
jae
adc
jle
xor
data16
jmp
in
nop
test
pop
arpl
aas
add
push
pop
icebp
shlb
loopne
enter
sbb
jecxz
pop
hlt
stos
cmpsl
decl
aaa
and
cmp
push
repz
add
cli
mov
adc
inc
inc
ficoms
into
mov
test
shlb
pop
jno
or
mov
sar
cmp
add
stos
into
and
test
out
mov
aas
mov
mov
mov
lods
cmp
fistl
pop
mov
inc
out
ljmp
mov
dec
cmc
mov
push
cmp
jge
sbbl
jmp
cmp
jnp
mov
add
dec
fcoms
and
out
jge
inc
shrb
jle
sub
add
fistpll
dec
sub
dec
xchg
bound
incl
pop
cmp
cs
jmp
jne
mov
and
test
mov
lock
fisttps
pop
out
rcll
pop
int
rep
add
push
dec
movsb
mov
and
pop
adc
movaps
mov
fsubp
mov
call
push
pushf
lods
pop
mov
xchg
xchg
lock
mov
mov
hlt
gs
cmc
ds
push
and
mov
and
push
mov
lret
insb
or
xor
lcall
mov
mov
adc
inc
adc
lock
jge
mov
sbb
xchg
insl
inc
nop
fidivrl
lret
adc
repz
add
arpl
push
add
add
in
inc
fs
cld
mov
mov
mov
ljmp
mov
push
sbb
in
jmp
or
push
pop
jbe
rorb
mov
scas
pushf
or
enter
lods
enter
push
dec
sahf
mov
fdivs
inc
pop
add
ss
pop
and
in
sub
decl
and
rol
jmp
sbb
pop
jg
lahf
pop
stos
and
mov
inc
in
call
sub
rcr
mov
int
jo
fwait
mov
stc
imul
xchg
decl
inc
lret
xor
repnz
inc
outsb
cmpsl
fists
inc
jo
adc
aad
sbb
ljmp
in
fcmovb
repnz
xchg
add
adc
ficoms
andb
scas
pop
outsb
fdiv
mov
into
cmc
insb
rol
jge
or
xor
inc
test
filds
or
mov
mov
ljmp
int3
mov
pop
mov
pop
rcr
xchg
xlat
iret
sub
jnp
pop
test
sbb
in
jno
jmp
pop
add
rcr
add
iret
loop
jmp
cmp
sbb
cmp
xor
dec
inc
scas
out
mov
lret
mov
in
gs
repnz
incl
je
lock
fists
xchg
clc
cli
inc
shl
jecxz
outsb
adc
dec
rclb
cmp
sbb
cwtl
ja
dec
scas
pusha
push
push
xor
repnz
imul
insb
push
ljmp
adc
and
adc
jle
add
jg
insb
cmp
xchg
adc
push
dec
ret
ljmp
mov
mov
push
sbb
push
lods
dec
sbb
sub
fwait
dec
std
nop
stc
inc
aam
movsl
stos
pop
lret
xor
inc
push
call
cmp
xchg
ret
sbb
insb
addb
add
mov
dec
jb
cmp
pop
sbb
mov
pop
mov
sahf
outsl
jge
incl
push
ret
in
fs
jg
cmpsl
iret
adc
add
sahf
btr
cmp
cmpsb
lcall
push
into
ret
test
fistl
sub
mov
mov
pushl
and
xorb
jl
mov
fs
int
test
or
or
in
fdecstp
mov
cmpsb
pop
push
imul
aad
mov
or
fwait
push
or
sbb
mov
mov
das
sarb
out
jg
jp
or
out
mov
mov
ror
push
push
stc
test
mov
xchg
sub
aam
in
iret
jmp
sub
jg
test
or
add
ljmp
pop
xor
cmpl
mov
daa
mul
xchg
sbb
push
sbb
jo
jmp
loope
mov
pop
mov
shrl
lcall
inc
inc
out
xchg
bound
rorl
mov
pushl
lahf
int3
ds
pop
add
cmp
sti
jle
call
repnz
frstor
dec
out
push
pushl
mov
mov
mov
or
hlt
es
lock
addr16
lcall
leave
vunpcklps
inc
enter
mov
cmp
sbb
popf
xchg
or
roll
sub
mov
pushl
dec
outsl
ds
xchg
into
shlb
repnz
xor
sub
insb
f2xm1
fstl
lock
lods
pop
inc
adc
mov
sar
pushl
xchg
mov
fsts
adc
ret
sarb
mov
es
pop
scas
stos
push
push
push
sbb
fistpll
pushl
pop
jbe
sub
cmp
jmp
shlb
pop
movsb
ljmp
test
add
outsb
mov
inc
pushl
fs
test
adc
or
lods
adc
ljmp
and
test
fdivs
sbb
aad
mov
lcall
jmp
xor
lret
in
fadds
fdivrp
mov
inc
xor
mov
aad
sbb
mov
jl
lcall
jbe
add
mov
lcall
sbbb
out
dec
and
sbb
scas
cmpsl
dec
gs
pushl
mov
push
out
adc
cld
xchg
mov
les
push
mov
in
out
adc
mov
and
cmpsb
call
repz
xor
fcomps
adc
or
add
mov
or
daa
rol
or
add
iret
out
dec
jg
test
inc
mov
in
xor
pushf
fcompl
add
ret
aam
pop
lock
test
fsub
sub
dec
cmpsb
and
cmp
fildll
rcll
xor
mov
push
mov
push
pop
add
incl
pop
std
out
mov
sar
mov
adc
std
call
mov
aas
add
mov
incb
movsl
adc
decl
xchg
and
inc
les
xchg
jmp
outsb
nop
adcl
ja
jne
call
scas
dec
stos
stos
jl
mov
mov
mov
mov
adc
ds
cltd
inc
jo
data16
call
cs
sbb
jecxz
inc
stc
fistl
dec
aaa
in
pusha
or
jbe
dec
inc
loopne
xchg
call
cmp
cltd
insb
inc
push
and
or
push
push
lcall
mov
sbb
push
cmp
loopne
dec
sar
jecxz
xchg
sti
lds
sbb
sbb
jle
xchg
inc
call
out
adc
mov
and
sbb
mov
es
cs
call
mov
test
stos
and
jae
mov
imul
nop
dec
or
in
fbld
mov
repz
pop
inc
ljmp
jbe
dec
and
dec
mov
push
jo
sahf
cli
imul
mov
push
lds
mov
ljmp
mov
nop
in
pusha
into
dec
sub
imul
pop
leave
pop
cmpsl
decl
dec
jno
mov
clc
xor
pop
rcrb
cs
enter
push
xchg
incl
mov
out
push
inc
ljmp
push
int
push
jae
popa
shl
dec
or
arpl
mov
mov
and
sub
xor
fildl
jns
sahf
ss
inc
in
outsb
push
add
or
or
aad
test
fs
jecxz
dec
sbb
inc
and
ljmp
xchg
jecxz
lock
and
jmp
insl
add
add
test
add
mov
daa
adc
loope
ljmp
fwait
mov
stc
xchg
in
into
push
sub
incl
rcr
push
lock
rcl
lock
jb
outsb
mov
cli
mov
ret
xchg
xor
push
push
jg
dec
sub
out
aam
es
xor
push
xchg
cld
cmp
popf
jl
pushf
pop
jecxz
mov
incl
test
sub
ljmp
test
insb
push
pushf
mov
jne
xchg
in
dec
lahf
idivb
and
mov
adc
xchg
mov
dec
or
push
int3
and
js
repnz
incl
mov
or
push
mov
jle
int
scas
or
pop
scas
and
gs
fldcw
xchg
fsubrl
insb
andl
lods
and
and
loopne
fcoms
out
in
das
xlat
dec
dec
and
jbe
hlt
sbb
mov
jl
inc
pop
sbb
inc
into
push
lcall
pusha
pushf
jbe
inc
in
mov
xchg
pushl
xor
xor
pop
aad
mov
call
scas
pop
vpaddw
mov
out
jecxz
mov
push
sub
push
mov
jmp
and
fstl
adc
scas
jmp
inc
dec
movsb
movsb
mov
mov
lcall
adc
call
cld
mov
mov
ds
dec
mov
xchg
std
inc
aam
cmp
mov
rcr
push
add
ret
push
xchg
je
xchg
jmp
push
decl
push
adc
mov
push
pop
pop
fisubrl
loopne
filds
mov
xor
pop
add
jmp
call
ret
cmp
ret
inc
nop
fmull
fsubrs
xchg
lahf
mov
subb
lcall
jmp
sub
popa
stc
and
dec
orl
cs
xchg
and
lcall
pushf
pop
xlat
je
js
inc
push
pop
xchg
jge
and
fwait
icebp
mov
mov
imul
decl
ret
xchg
ret
fisubrl
adc
push
xor
leave
pop
cld
mov
mov
in
jl
ds
mov
xchg
stc
sbb
les
cmpsl
push
mov
pop
hlt
pop
popf
mov
bound
cmp
sub
xchg
mov
mov
out
test
pop
mov
adc
hlt
outsl
xor
loope
int
dec
sbb
push
js
sbb
incb
adc
ret
out
sub
jmp
outsl
nop
lock
push
xchg
sbb
sar
pop
stos
mov
sbb
ljmp
mov
mov
call
ficoms
push
pop
jmp
lcall
pushf
jae
push
adc
dec
hlt
call
xor
into
mov
jns
jl
ja
fidivrs
sub
cmpsb
xor
cmp
fcomip
ljmp
jmp
cs
sub
add
jne
addl
dec
punpckhbw
aas
test
and
fs
aad
jle
js
push
mov
dec
mov
mov
fcmovb
outsl
clc
dec
xchg
dec
aas
mov
sbb
sysenter
jg
sar
pushl
pusha
movsb
mov
jo
jb
and
sti
popa
xor
aam
mov
mov
add
iret
nop
in
cld
cmpsl
daa
jne
jno
lods
ret
inc
xchg
dec
cmp
sbb
push
dec
push
jmp
rcrb
cmpsb
test
and
incl
dec
or
add
push
lret
cli
pushl
cmp
push
imul
inc
jg
adc
cmpsb
xor
leave
mov
xor
cmp
push
decl
mov
call
enter
adc
test
mov
les
outsl
pop
std
call
enter
sbb
jp
cs
push
jno
inc
stc
sti
push
es
dec
nop
jo
idiv
adc
pop
jl
test
pop
call
pop
jg,pt
enter
push
outsb
mov
mov
data16
add
gs
hlt
popa
and
jmp
dec
ljmp
pop
or
cli
push
add
inc
xchg
in
xchg
clc
add
mov
adc
push
jmp
aam
add
mov
insl
mov
sbb
mov
cwtl
xchg
xchg
inc
decl
adc
clc
or
sbb
movsb
pusha
test
ja
pop
add
repnz
push
movsl
hlt
js
xchg
xchg
or
push
jecxz
lods
js
rorb
mov
fisubrl
sbb
ljmp
add
sub
in
cltd
dec
inc
sbb
ficompl
mov
jl
mov
jbe
imul
sbb
mov
dec
add
lods
and
loopne
test
ds
xor
mov
mov
icebp
aaa
mov
mov
or
shrb
cmp
push
aaa
out
lods
imulb
test
ds
inc
cmp
xor
cltd
xchg
push
mov
xchg
jmp
std
call
inc
es
lahf
ret
xchg
xchg
and
stc
cmpsb
jne
pop
push
jnp
add
ljmp
mov
aad
mov
pop
std
shlb
xor
jle
ljmp
fwait
lods
push
cmp
fdivrp
loope
adc
mov
cmpsb
xchg
adc
push
sub
jge
pop
xchg
dec
out
mov
movsl
xchg
getsec
xchg
pop
in
cmc
popf
mov
cmp
nop
inc
xor
fdivl
call
lods
add
mov
mov
jg
jb
mov
add
or
rol
mov
ljmp
and
push
fisubrl
aad
mov
push
test
call
in
loopne
push
cmp
mov
push
fnstsw
cld
jns
out
out
insb
iret
out
lcall
ds
sbb
mov
shlb
push
xor
mov
aad
mov
gs
inc
lcall
call
xor
test
in
ficomps
or
fnstcw
ds
inc
nop
jle
fcomip
jmp
xchg
mull
xor
xor
rorb
and
mov
pop
xchg
jb
jno
ljmp
call
add
push
cltd
dec
int
cli
mov
adc
adc
icebp
ljmp
fisubrs
scas
out
xchg
jno
fwait
cltd
cmc
pop
fwait
xor
sub
fs
sub
outsl
pop
xchg
mov
test
cltd
insl
mov
mov
or
inc
inc
lods
out
sub
jns
push
dec
xor
popa
loopne
dec
mov
pushf
dec
push
mov
push
push
fs
mov
push
cwtl
lret
leave
xor
sub
pushl
adc
bswap
leavew
insb
frstor
pop
sub
and
add
adc
inc
mov
mov
jecxz
mov
inc
adc
mov
repnz
xlat
sub
mov
mov
stos
fprem1
mov
decl
loop
js
pop
int3
test
imul
pop
or
pop
sbb
pusha
cmpsb
stc
sub
lcall
adc
or
inc
mov
inc
jge
sbb
imul
xchg
xor
shlb
cmpsl
and
aaa
lret
fcomi
jb
jne
testb
jns
repz
mov
pop
fstpt
lcall
mov
lods
out
int
fnstenv
cmp
mov
lds
xchg
mov
pushl
loopne
jl
out
jne
ret
add
clc
bnd
addr16
repnz
pushf
cld
adc
lcall
outsl
xchg
jge
cmp
bound
jmp
lods
sub
mov
jg
fcomp
add
shr
xor
adc
push
mov
popl
jmp
jle
rcrl
cmp
cmp
xchg
ss
dec
mov
or
pop
and
push
jg
incl
push
or
jbe
inc
jnp
inc
scas
xchg
mov
inc
in
jl
cltd
jae
mov
ret
or
pushl
std
mov
sbbb
pushf
sti
pusha
and
int3
ljmp
jl
xchg
fwait
gs
xor
jl
mov
scas
mov
cmpsb
pushf
cmp
mov
cltd
sub
mov
iret
mov
lret
lcall
arpl
pop
in
and
test
cmpsl
jo
lock
fsts
and
push
out
mov
cmpb
adc
iret
mov
mov
adc
loope
ljmp
add
stos
push
sbb
bound
jp
cmc
lock
mov
out
sub
sub
xorb
incb
push
lock
fnsave
lods
cs
test
daa
pop
and
daa
pushl
and
fnstsw
test
mov
mov
xor
inc
mov
je
add
pop
push
push
sub
xchg
xchg
xor
mov
lods
add
dec
pop
and
jo
sub
adc
jg
jmp
iret
dec
leave
cmpsl
outsb
jno
pushf
jge
cltd
sbb
sbb
push
pop
xor
push
and
cltd
lret
mov
rcl
sbb
sub
fnstenv
decl
mov
ret
in
push
clc
xor
inc
cmp
sbb
dec
call
cmp
out
jne
mov
push
insb
imull
mov
xchg
das
fcmovu
dec
ljmp
lock
je
call
sbb
mov
movsb
in
sahf
inc
ljmp
in
faddl
sbb
hlt
mov
mov
ja
and
ret
jmp
iret
icebp
mov
or
or
mov
and
dec
or
push
lret
mov
outsl
jmp
xorb
inc
cmp
int3
xor
or
notl
ret
dec
pop
pop
ret
mov
out
dec
mov
loop
push
lcall
jnp
mov
jne
mov
test
xor
xor
xor
decl
movsl
movsb
or
stc
mov
faddp
or
inc
mov
pop
bound
cs
insl
or
pop
decl
fldcw
xorl
lods
sub
fs
or
insb
mov
lcall
add
fiadds
subb
pop
cmpsb
repz
xor
jnp
fildl
add
pushl
mov
or
repz
scas
loop
ficomps
outsl
mov
fistl
and
sub
call
dec
jge
lea
or
data16
leave
jmp
addr16
dec
mov
ljmp
ficompl
lcall
ljmp
sarb
cld
sbb
push
push
je
mov
adc
cmp
push
hlt
fidivrs
adc
jno
addr16
mov
loope
shrb
push
fwait
jmp
lcall
das
movsl
addb
push
subl
dec
fsts
xchg
stos
shrb
push
movsl
mov
pop
popa
clc
outsb
adc
test
aas
xor
sub
or
lea
ljmp
xchg
insl
movsb
ret
test
mov
adc
xor
xchg
or
imul
decl
jns
out
and
cmpsb
xchg
add
sub
test
sub
xchg
fnsave
or
loop
xchg
arpl
jne
adc
decl
movsb
or
mov
cmp
cmpsb
xlat
cmp
aam
sbb
je
test
call
or
inc
jmp
lea
jle
lock
bound
mov
jmp
mov
or
repz
jecxz
inc
lret
mov
ret
inc
push
cmpsb
xchg
aad
fnsave
push
std
repnz
dec
idivb
cld
adc
adc
dec
push
scas
shr
pop
pop
push
fadds
fists
dec
cmp
or
addr16
es
test
push
fisttpll
stc
push
inc
insl
jnp
and
decl
push
dec
sbb
inc
sbb
cmp
into
dec
fmull
subb
mov
mov
std
lcall
repz
insl
jo
xchg
aad
xchg
in
enter
jl
out
mov
jo
pop
dec
clc
dec
aas
pop
sub
push
idiv
lods
shrb
lcall
incl
xchg
notl
outsb
xchg
inc
mov
mov
jle
mov
jns
add
ud0
jg
push
out
jmp
movsb
pop
or
push
aam
lds
sub
jae
ljmp
test
adc
push
xor
mov
ret
int3
mov
pop
jbe
jg
rol
das
sarl
mov
dec
in
insb
mov
lret
xchg
xchg
jmp
lods
sub
in
leave
ss
pop
aas
lock
push
jecxz
cmc
ficomps
std
decl
xchg
push
stc
jb
insb
sahf
cmp
mov
cld
rol
push
data16
cltd
int
inc
jb
jg
pushl
and
sbb
loopne
xchg
cltd
aam
adc
xchg
movsb
ja
fs
icebp
aam
pushl
jo
imul
adc
or
dec
jno
arpl
mov
xchg
push
daa
push
loop
sbb
rol
fcmovnbe
cwtl
pop
jle
test
fldt
test
and
xor
decl
sub
decb
inc
dec
and
or
out
sbb
ds
push
imul
das
add
mov
lret
cld
adc
inc
inc
std
aad
ret
jmp
sub
insb
mov
sbb
ljmp
mov
jo
push
jbe
push
and
cmp
cmp
cmpsb
jg
xchg
ds
jne
sub
xchg
fstps
lret
scas
clc
out
lcall
cwtl
test
mov
adc
ljmp
inc
inc
clc
jg
aaa
adc
cmp
jp
adc
mov
sti
cs
sbb
jg
call
add
xchg
andb
jg
sbb
cmpsb
pushf
dec
xor
call
and
xchg
or
insl
scas
test
mov
loop
push
clc
incl
into
push
es
pop
push
enter
fidivs
xlat
aaa
pop
aad
pusha
pop
out
xchg
pusha
js
mov
sub
ljmp
pop
mov
mov
in
and
popa
and
adc
pusha
or
push
cld
ljmp
mov
bound
xchg
adc
cs
stos
call
or
leave
mov
mov
dec
mulb
lods
xor
push
mov
lock
call
mull
shr
inc
adc
popf
sub
cmp
mov
cwtl
ljmp
decl
jo
call
imul
push
rcrl
fistpl
adcl
shrb
jl
lcall
aaa
push
mov
mov
ljmp
mov
imul
out
dec
lret
repz
jge
orb
fbstp
es
lcall
subb
ds
incl
cmp
jecxz
lret
cmp
xlat
ucomiss
insb
pop
insl
sbb
ljmp
and
data16
cmp
outsb
ljmp
int
dec
cmpsb
jg
ret
daa
nop
and
jns
sbb
jg
xchg
sub
in
daa
rcl
sbbl
push
in
pushf
orb
xlat
pop
mov
mov
out
jno
jbe
stos
jmp
in
sbb
fldcw
ds
add
outsl
lds
cmp
jmp
data16
pushf
dec
outsb
pop
pop
scas
dec
push
jp
dec
jo
push
flds
popf
cli
jo
adc
mov
mov
jmp
pop
ljmp
and
or
aad
mov
jbe
push
sbb
lcall
std
sub
xchg
mov
lods
mov
mov
xor
test
ljmp
bound
cmpsb
jmp
sbb
xor
movsl
add
xor
push
ljmp
mov
add
mov
leave
mov
adc
int3
or
subb
test
pushl
mov
dec
xchg
lret
fisubl
scas
xor
pop
insb
pop
test
jge
mov
push
xor
xchg
adc
decl
lsl
push
xchg
and
imull
movsl
cmp
mov
pop
in
jmp
stc
add
jo
pushf
insb
faddl
mov
lcall
adc
daa
lcall
and
fistpll
shr
std
inc
jg
push
test
jbe
aam
frstor
bnd
lock
dec
clc
ja
inc
jl
inc
sar
add
jae
sbb
inc
call
mov
movsl
andl
dec
repnz
xor
call
xchg
scas
lods
jns
pop
jecxz
mov
test
incb
imul
jnp
fdivr
push
or
add
in
divb
inc
mov
sbb
jmp
dec
sbb
repz
fwait
push
inc
and
sub
xchg
push
mov
call
ficompl
and
mov
lahf
out
jne
imul
into
sub
jno
js
sub
adc
cs
dec
mov
mov
repz
jno
sbb
cmpsl
movsb
mov
sbb
out
mov
loope
push
lcall
add
inc
push
test
inc
sub
sbb
push
push
dec
imul
in
lcall
push
dec
cli
ficomps
fwait
mov
mov
jbe
or
push
xor
fucomp
push
pusha
mov
mov
subps
les
xchg
jmp
aaa
outsb
mov
dec
pushf
ficomps
jbe
mov
shlb
fistpl
mov
xor
jecxz
call
xchg
inc
fwait
jecxz
or
or
xchg
cs
mov
repz
xchg
nop
pop
pushf
xchg
mov
or
sbb
lret
scas
sbb
xor
pusha
cmp
pop
jl
fimuls
jg
mov
clc
mov
inc
cld
inc
daa
jne
idiv
cmp
ret
sarl
mov
pop
adc
mov
mov
adc
in
lock
xor
jnp
mov
lret
pop
call
dec
adc
mov
movaps
jb
push
inc
ljmp
int
fbstp
sarl
into
arpl
sbb
ficompl
sub
xchg
ret
mov
jl
incl
or
adcl
bound
xor
clc
cli
or
mul
add
lcall
popf
jbe
in
xchg
sbb
jle
dec
inc
clc
add
mov
cmp
call
std
fbld
sbb
mov
adc
push
jg
ljmp
or
mov
sbb
sarb
and
cmpl
repz
call
xor
out
out
push
inc
xchg
xor
in
fadds
test
test
decl
int3
into
cli
stc
jne
mov
adc
mov
outsl
aaa
mov
mov
ljmp
xchg
data16
pop
sbb
test
pushl
dec
repz
xchg
pop
push
mov
bound
aam
aam
stos
jbe
fbld
iret
mov
sahf
cmp
scas
xlat
test
cmp
stos
cmpsl
sbb
sub
add
xor
repnz
leave
adc
call
jb
pop
icebp
xchg
pop
adc
iret
sbb
lret
pop
adc
dec
adcl
sarb
call
movsl
imull
mov
arpl
call
mov
push
std
add
out
cmpsl
push
cmp
test
dec
leave
outsl
sahf
icebp
call
lahf
push
mov
push
sub
cltd
mov
call
push
rcrl
xchg
daa
decl
or
sbb
orl
filds
or
jecxz
inc
sub
ljmp
jl
mov
jns
imul
push
jno
dec
fcmove
sub
leave
and
insb
xchg
adc
lcall
sahf
or
fstpl
fnstenv
sbb
xor
sbb
or
xor
nop
xchg
jmp
js
fldcw
pop
subb
sub
xchg
adc
pop
les
and
in
xorl
mov
into
mov
es
das
jo
shrl
jo
icebp
mov
mov
xor
pop
incb
push
aad
icebp
pop
sbb
xchg
stos
rclb
outsb
pushl
faddl
shrl
scas
ja
push
cmovne
sahf
dec
jl
js
fimull
lahf
ud0
pushl
lods
loop
sar
test
dec
sbb
lcall
loop
sahf
cld
xor
addl
lcall
sbb
mov
cli
ljmp
jecxz
adc
dec
faddp
call
jmp
cmp
int3
jl
mov
pop
push
xchg
test
sub
imul
ljmp
mov
repz
jno
scas
movsb
je
movb
and
mov
mov
cmp
and
lds
stc
mov
aam
mov
xchg
in
call
jge
add
sbb
or
je
loop
xor
fdivr
mov
jo
outsb
lods
loopne,pt
addps
lcall
and
jl
xchg
adc
mov
cmp
cmpsb
xchg
cld
xor
sub
loopne
repnz
sti
repz
call
inc
or
imul
scas
and
xchg
hlt
into
js
fwait
in
fiadds
test
scas
cli
lcall
ret
sbb
pushf
cmpsb
cmp
dec
jb
and
ret
pushw
push
push
frstor
mov
sbb
cmpsb
sub
and
loop
lahf
dec
adc
cmp
push
jbe
mov
ja
movl
adc
vpaddusw
sbb
test
arpl
ljmp
flds
mov
pop
movl
xlat
cmp
sbb
enter
pop
insb
pop
insl
cmc
dec
hlt
mov
jge
adc
xchg
cld
mov
scas
push
fwait
xchg
rol
add
lcall
jno
in
popf
xor
outsb
dec
test
aam
pop
lock
call
lock
or
je
dec
mov
in
pop
int3
outsl
sbb
popf
lcall
add
dec
int3
push
push
orl
xchg
call
sub
aad
je
nop
js
loop
out
insl
pop
lock
adc
lcall
incl
jg
xor
xchg
hlt
nop
mov
mov
stos
dec
out
loop
incl
push
aaa
arpl
pop
movb
addr16
test
dec
aad
fisubs
call
push
ret
insl
cld
cmp
sub
inc
out
cwtl
inc
fcompl
push
adc
sbb
mov
call
lret
test
or
in
dec
in
rcr
loop
jle
shl
add
incl
out
sub
ja
rolb
fildll
stc
dec
mov
mov
stc
sub
jl
data16
shll
repnz
sti
cmp
sahf
fst
or
jg
cmpsb
fwait
adc
jecxz
xlat
andl
cltd
push
shl
adc
incl
jle
xchg
popf
push
sub
and
in
push
in
mov
jne
pop
inc
xor
mov
lods
mov
sbb
push
mov
cmp
aaa
sbb
pop
addl
jmp
aas
inc
push
jo
imul
and
push
rcl
inc
test
loopne
inc
subb
sub
fs
test
cmp
adc
incl
arpl
lock
mov
popa
jno
inc
xor
mov
aad
pop
popa
fiadds
jae
push
jae
out
mov
dec
mov
fdivp
jl
mov
push
in
adc
je
daa
jg
stc
add
xor
ljmp
jg
ret
ds
mov
das
xchg
inc
andb
stos
jmp
addr16
and
xchg
js
mov
mov
sar
lcall
pusha
aad
shr
ficoml
add
movsl
push
push
push
dec
lods
repnz
xor
rol
push
dec
xor
xchg
test
sbb
notb
cmp
scas
lods
hlt
fdivs
aam
lea
aas
inc
fmuls
scas
mov
sub
int3
in
decl
adc
mov
std
inc
add
cmp
pop
sarl
int
ret
add
ljmp
dec
sbb
pop
lahf
lret
xchg
or
mov
cwtl
in
int
and
mov
into
mov
xor
cmp
pushf
aad
push
jmp
inc
stc
std
mov
jmp
pop
pushf
shll
mov
out
gs
mov
lcall
cli
mov
inc
jge
mov
loopne
or
stc
insb
ds
sahf
pop
fisttps
test
test
jl
add
pop
add
sub
loopne
mov
mov
outsb
lods
call
cld
jle
ret
fwait
imul
add
lea
fucomip
call
out
sbb
pushl
incb
sub
pop
addr16
test
jb
sbb
and
outsl
in
dec
pop
xlat
mull
add
or
stc
push
insb
mov
xor
push
cltd
ljmp
inc
rcrl
mov
stos
cwtl
xchg
xor
ljmp
ljmp
lret
js
cmpsb
jnp
jmp
add
mov
pop
fdivl
adc
dec
divl
fdiv
idivb
pop
push
push
outsl
mov
mov
cmp
ljmp
aad
loop
fisttps
pop
xchg
icebp
cmovne
mov
pusha
icebp
call
jg
mov
xlat
lret
pop
es
mov
mov
cmp
dec
jo
aaa
or
ret
stos
orl
clc
dec
lock
cs
into
idiv
jbe
ret
mov
xor
fwait
aam
fmul
push
cwtl
stos
decl
push
adc
in
into
clc
add
sub
test
adc
mov
push
call
add
xor
aad
pop
insb
ret
scas
sbb
push
jecxz
rclb
movsb
pop
je
adc
decl
sahf
fidivrs
mov
dec
enter
mov
dec
insb
sar
adc
mov
sti
ret
add
incl
cmp
push
out
mov
push
lret
sub
scas
mov
in
mov
mov
call
mov
aam
cmp
sub
adc
cmp
outsl
mov
nop
push
jo
mov
je
subb
test
mov
repnz
cmp
jl
repnz
cs
in
fcoms
dec
lcall
std
mov
mov
das
notb
mov
fisttps
pushf
les
pop
push
add
mov
enter
call
call
jg
cmp
mov
aas
dec
je
ja
adc
inc
dec
inc
jnp
push
or
xchg
movsb
add
push
sbb
call
pusha
cmpl
push
sub
gs
nop
out
stos
aad
lock
ljmp
jns
push
push
xchg
pop
icebp
xor
sub
mov
dec
and
xchg
sar
dec
push
jbe
in
iret
add
test
and
pop
out
pop
inc
test
or
mov
cmc
sub
clc
outsl
or
out
push
or
adc
mov
jg
cwtl
pop
sbb
aaa
cmp
dec
int
pop
sub
addr16
pop
or
loope
lods
mov
dec
jae
push
pop
mov
lock
incl
or
enter
flds
adc
shr
pop
enter
lcall
adc
cmp
rorb
mov
ss
popf
imul
push
pop
imul
adc
dec
jle
push
loop
sub
testb
add
cld
enter
lret
or
imul
mov
sahf
cmp
jo
inc
sbb
inc
int
mov
in
jmp
lret
xor
jecxz
scas
repz
mov
adc
clc
pusha
jne
mov
call
inc
lods
stos
push
imul
mov
sbb
testb
pushl
fwait
cmp
fchs
inc
fldt
bound
mov
call
pop
test
mov
call
std
sti
fst
cmp
adc
mov
jb
out
mov
xchg
mov
xchg
add
mov
cmp
ficompl
push
mov
cmp
push
std
lcall
push
jmp
or
enter
inc
mov
nop
loope
sub
mov
clc
push
pop
outsb
into
mov
mov
mov
pop
adc
pushl
enter
push
insl
test
push
sub
addr16
call
dec
cmp
mov
cmp
pop
fcompl
push
mov
mov
jmp
add
mov
xchg
mov
inc
es
pop
jp
sbb
mov
repz
push
stos
ss
insl
cmpsl
pop
test
or
jmp
and
dec
cmp
mov
mov
test
jmp
xor
pop
mov
cmp
inc
fisubrl
loopne
jg
fisttpl
testl
xchg
sbb
dec
jecxz
xchg
fsub
cmp
leave
decl
inc
mov
lcall
out
shrb
xor
cmova
mov
movsl
nop
pushl
xor
out
in
fnstcw
dec
stos
adc
add
stc
cmp
ljmp
lods
lock
dec
js
inc
out
bound
jne
cs
pop
aam
mov
inc
cmpsl
jle
call
out
popa
popa
in
in
xchg
into
faddl
jl
push
pushl
imul
mov
jg
cmp
daa
mov
dec
mov
rcrb
jmp
push
inc
push
lea
push
sbb
mov
adc
cwtl
jae
sbb
cmp
call
xor
jnp
jge
push
pusha
fcmovnb
add
iret
sarl
push
out
call
add
insb
lret
mov
out
rcl
lret
in
call
add
pop
popa
inc
bound
pop
add
ljmp
sub
mov
rol
sahf
mov
add
enter
adc
ret
pop
xchg
rcr
sarb
add
clc
push
aad
push
divb
pop
add
rolb
mov
enter
lds
fwait
out
or
ljmp
ljmp
in
lcall
bound
sahf
inc
repnz
pop
out
test
loope
cmpsb
push
ljmp
fs
mov
lcall
mov
cltd
mov
adc
mov
jbe
jle
xchg
and
outsb
mov
sti
adc
sub
jle
cld
add
xchg
std
rcrl
or
sub
decl
pushf
stos
add
int
mov
mov
lret
lcall
mov
je
scas
mov
adc
pop
push
aaa
mov
xlat
js
jl
xchg
mov
fld
or
xchg
fs
data16
mov
add
stos
div
push
sbb
dec
in
add
pop
lds
pop
sub
test
xchg
add
fwait
pushf
shl
lret
es
mov
ds
and
xchg
xor
outsb
sarl
mov
push
fsubrs
and
mov
ja
lret
mov
jmp
mov
pinsrw
mov
mov
sub
mov
sub
inc
mov
outsb
enter
mov
sub
cmpsl
clc
push
repnz
into
dec
fstl
push
jg
inc
mov
out
sbb
outsb
mov
popf
push
in
cld
and
mov
add
sub
cmp
pushl
mov
dec
pop
xor
push
xchg
xchg
loope
mov
xor
xor
mov
icebp
sti
lds
xchg
push
rcll
or
sbb
ja
add
sar
pop
cmpsl
es
cmpb
inc
clc
test
mov
jno
int
mov
ds
xchg
and
incl
jnp
cs
xchg
enter
jg
lcall
pop
pop
out
mov
mov
cmp
mov
leave
push
cmpsl
popf
pushl
pushl
or
fwait
add
ss
nop
shlb
in
xor
jg
call
jb
sbb
and
jmp
adc
lods
icebp
push
push
es
andl
fcomip
jmp
xor
cmpsl
mov
cmp
cmp
sti
adc
in
jo
ss
ljmp
cmpsl
mov
mov
stos
out
pusha
and
rorb
inc
cmp
lret
lcall
imul
add
add
je
js
ds
call
sti
add
imul
xchg
jnp
imul
jae
in
and
and
call
sub
ja
jl
push
in
test
xlat
dec
push
loopne
mov
fwait
repnz
lret
outsl
ficoms
test
adc
int3
add
inc
stos
sub
xor
inc
jae
inc
xchg
push
or
inc
sarl
movsb
daa
aad
xor
jmp
js
mov
call
daa
scas
xchg
pop
or
stos
lfs
cmp
jmp
ss
lds
rcrb
mov
push
cltd
leave
mov
js
dec
fmull
mov
dec
movsl
pushf
xchg
stos
jg
into
rcrl
les
and
das
gs
in
sbb
sar
cmp
sar
std
ljmp
ljmp
jecxz
movl
test
ret
or
cmp
push
faddl
into
imulb
aam
mov
lods
pop
movsl
jmp
sub
fists
sub
pop
mov
sbb
fcmovnu
out
mov
mov
mov
mov
scas
xchg
lret
push
inc
loop
lcall
test
jle
pop
dec
insl
int
add
jp
cmp
push
pushl
sbb
add
sbb
mov
orl
adc
incl
push
scas
sbbb
sub
sbb
mov
arpl
leave
pushf
data16
push
ja
call
std
lret
xchg
fwait
addl
jp
jno
test
jle
and
lock
stos
xchg
cmp
lcall
jne
push
pop
popf
sbb
add
and
cmp
int
cmovl
lcall
add
or
mov
mov
sahf
movsb
addl
js
pusha
cmc
outsb
ss
and
pop
inc
test
push
dec
push
ds
sub
cmp
inc
dec
mov
std
enter
pop
test
je
inc
call
popa
adc
dec
and
les
decl
adc
dec
adc
mov
mov
jmp
addr16
icebp
cmpsb
xchg
add
dec
ljmp
inc
movsl
mov
outsb
xor
std
push
jo
rolb
aad
sub
mov
add
ds
mov
flds
xor
pop
arpl
clc
jmp
and
les
jge
ljmp
adc
pop
adcl
xchg
xchg
ljmp
cld
jecxz
shlb
sub
sbb
jno
cmp
ret
lods
jno
xchg
loop
loop
adc
fwait
gs
loop
cmpb
cmp
mov
pop
jo
inc
or
pop
in
mov
fwait
adc
cmp
pushl
mov
loopne
das
adc
arpl
push
jmp
mov
mov
lock
jmp
jg
dec
add
mov
sub
fstps
fcmovnu
adc
imulb
mov
movl
mov
ret
add
xor
jmp
jecxz
sub
sub
test
icebp
adc
loopne
cmp
out
dec
cmc
pop
mov
push
cmp
xchg
ja
popl
ror
flds
pop
xchg
clc
clc
pop
sub
pop
call
idivl
fdivs
xchg
rcrb
dec
negl
lahf
add
sub
push
xor
jp
call
jmp
pop
ljmp
push
mov
into
xor
mov
add
js
clc
mov
sbb
sub
loope
jmp
lock
mov
mov
mov
icebp
divl
into
mov
aam
stc
jp,pt
sti
xchg
stos
ficoml
loop
in
outsl
pop
sbb
mov
es
jmp
cmp
mov
pop
outsb
mov
and
mov
decl
sub
fsubs
adc
or
lods
cld
mov
dec
int
scas
ljmp
jg
aaa
sbb
or
hlt
adc
push
enter
or
jnp
mov
mov
xor
push
stc
imul
int
sbb
jg
cld
pop
and
inc
lret
xchg
cld
push
pop
adc
test
add
pushl
imul
negb
fimuls
sbb
mov
add
aad
jb
cmpl
pop
mov
les
scas
or
movsl
fstl
pop
jnp
mov
out
dec
jmp
add
mov
mov
adc
into
adc
fimull
and
xchg
inc
mov
ljmp
mov
and
mov
sbb
jns
ljmp
jecxz
addb
int3
mov
sub
rcrb
pop
mov
in
lea
bound
adc
push
dec
imul
xor
in
mov
fnsave
xor
add
sbb
cmc
ljmp
sub
push
or
sbb
das
cmpsb
flds
in
fmuls
dec
fsubrl
ret
adc
lret
adc
les
push
jmp
adc
xor
pop
adc
test
jo
std
dec
xor
or
jmp
add
mov
fwait
pop
jo
xchg
jl
pushf
xchg
test
inc
xor
jmp
and
fnclex
fidivrl
add
fcomps
or
hlt
iret
rolb
movsl
inc
ljmp
jle
lods
push
xchg
or
imull
and
out
sbb
xorps
jmp
cli
mov
push
mov
cmp
mov
push
adc
fsub
aaa
adc
jmp
iret
push
test
ljmp
mov
es
shrl
inc
imul
jge
cmp
mov
movsl
gs
std
incl
pusha
aaa
cmp
les
nop
stc
sbb
sbb
xchg
cld
mov
add
in
jge
outsb
hlt
mov
xchg
mov
lret
jbe
inc
lods
inc
mov
leave
mov
fidivrl
test
fcomip
mov
jp
jbe
xchg
out
dec
adc
out
in
dec
dec
hlt
imul
sub
in
inc
mov
and
out
rorl
jmp
cmc
shll
hlt
pushl
sub
rcr
testl
push
mov
incb
ljmp
cmpsb
test
dec
mov
mov
imul
scas
xor
stos
push
insl
mov
lret
ljmp
jno
repz
ss
push
cld
mov
sub
dec
adc
call
arpl
data16
push
ja
movsl
xchg
sbb
or
out
mov
ja
cmp
push
jns
adc
icebp
lcall
cli
shrl
popf
inc
test
or
out
push
in
jecxz
mov
xlat
jg
call
mov
imul
inc
sbb
cmp
into
stos
fiadds
sub
cli
add
daa
mov
fs
fldl
push
and
xor
gs
lret
xchg
xor
shlb
out
insl
icebp
jo
mov
out
in
xor
ljmp
imul
into
rcrl
out
cs
popa
stos
pop
ss
test
pop
mov
sub
es
inc
xor
push
test
js
cli
mov
and
sahf
jb
xor
cmc
mov
xor
out
add
push
add
cmpsb
out
pop
mov
mov
adc
jp
add
pop
sar
mov
aam
jne
test
stos
push
add
aad
mov
lods
push
pop
pop
jg
push
xchg
inc
subl
or
out
jnp
cs
xchg
repnz
mov
jmp
test
das
cmp
xchg
mov
test
outsb
sub
add
idiv
in
add
loop
push
xchg
sbb
push
push
sub
cmp
pop
ja
cld
mov
cli
fwait
or
ljmp
scas
sbb
mov
pusha
add
in
scas
inc
dec
stc
fstpl
gs
call
loopne
inc
fldl
mov
in
adc
xlat
decl
xchg
data16
sbb
stc
in
push
fbstp
out
call
fldl
add
aas
or
push
leave
mov
rcrl
and
in
addr16
xchg
sbb
das
shl
or
dec
mov
inc
ffreep
pop
cwtl
je
sbb
in
pop
sbb
incb
jae
cmp
les
mov
add
sbb
incl
in
xor
repnz
push
fnsave
sbb
icebp
sbb
pushl
popf
imul
pop
xchg
push
mov
cwtl
out
jnp
or
mov
add
push
test
cmp
loopne
dec
cld
movsl
sub
out
mov
xchg
sahf
dec
stc
cwtl
xlat
cmp
fbstp
lea
add
ljmp
cmp
ret
scas
std
sbb
mov
push
idivl
icebp
popa
or
mov
popl
insb
movsb
and
dec
cmp
orb
pop
std
decl
mov
or
jecxz
cmp
sbb
add
cmp
cli
xchg
xchg
les
outsb
add
mov
cmp
lock
jg
xchg
cmp
lcall
jnp
inc
xor
lret
lret
xor
xchg
cld
jno
movsl
outsb
lock
into
ljmp
jp
dec
cs
les
sbb
pop
mov
test
repz
ljmp
or
and
pop
dec
push
cmp
push
lret
add
das
cmp
push
lcall
add
js
test
mov
xor
dec
sti
jbe
push
lock
mov
decl
jae
sbb
pop
gs
clc
sub
test
icebp
mov
mov
or
test
pop
es
push
push
sarl
ljmp
cld
ljmp
enter
out
in
sub
mov
and
push
mov
scas
pop
lods
aaa
imul
push
in
pop
outsb
addr16
inc
int3
pop
sub
fwait
xchg
ja
lcall
jle
lock
icebp
iret
loop
nop
jnp
stc
or
push
iret
fs
lret
mov
adc
fcom
scas
sbb
mov
cmp
nop
dec
subb
mov
cmp
pop
cmp
cmp
dec
xor
nop
or
stos
dec
repnz
inc
dec
dec
pop
mov
jns
sbb
adc
std
in
jns
jmp
jb
xchg
insl
xchg
decl
adc
xor
outsb
mov
jg
jl
shl
sti
je
dec
mov
sbb
lcall
arpl
lcall
movl
imul
jns
add
mov
xchg
sti
in
sub
arpl
stos
jl
dec
push
fs
ret
add
jne
xchg
add
add
lds
daa
push
cmp
mov
push
lret
mov
test
fmuls
xor
daa
daa
and
clc
xchg
mov
and
mov
and
sub
fwait
mov
lods
movsb
cmpsl
lds
iret
lea
fwait
popa
mov
pushl
mov
sub
daa
and
jb
test
dec
sub
adc
into
vaddss
aam
cmp
dec
pusha
outsb
mov
sub
shll
push
dec
sti
popf
jp
cmp
es
mov
sbb
cmpsl
mov
cmpb
sbb
add
shlb
shrl
les
call
aam
mov
mov
test
repz
stos
add
fstpl
cli
cld
sbb
call
and
inc
adc
push
push
loopne
push
sub
scas
lret
dec
mov
cmp
inc
loopne
mov
divb
aaa
mov
dec
movsl
lea
push
pop
push
cli
push
lret
call
mov
xor
mov
ret
lods
clc
jnp
scas
jge
test
jg
mov
mov
push
dec
adcb
add
lcall
xor
add
aas
mov
adc
and
pop
sahf
inc
jns
inc
ret
loop
loope
pop
popa
lock
pushl
xchg
fcompl
sbb
jmp
test
aaa
into
aam
jl
pop
lock
js
pop
movsb
push
icebp
lret
outsb
dec
jae
out
mov
and
jnp
fucomip
mov
dec
jbe
out
pop
aam
stos
in
iret
or
push
das
push
jecxz
test
fnsave
in
jg
mov
mov
dec
ljmp
pop
add
mov
es
outsl
xor
loope
cmc
pop
into
je
lods
enter
mov
push
out
sub
cltd
lret
xchg
arpl
push
sub
inc
subl
ljmp
cmp
in
test
imul
lods
movsb
mov
test
ljmp
xchg
jo
mov
add
mov
ljmp
iret
inc
call
hlt
mov
imul
fnstenv
lcall
add
lds
icebp
and
add
inc
mov
pop
mov
pop
mov
mov
out
pushl
shlb
mull
sbb
mov
fwait
shl
pop
pop
mov
lcall
sub
jo
cli
sahf
sarl
or
mov
cmovb
lea
xor
ja
cmp
and
dec
bswap
pop
loope
and
sub
mov
jne
ja
fwait
hlt
mulb
jbe
xor
dec
push
push
or
push
fistpl
fists
or
decl
mov
jb
mov
hlt
jns
jge
inc
push
mov
mov
sub
pop
cmp
pop
jmp
jae
adc
into
or
negb
jmp
xor
ljmp
and
sbb
jle
mov
shll
mov
inc
mov
sbb
ja
jae
movsb
pop
addb
mov
inc
aam
fistps
push
and
jle
fldenv
mov
pop
sub
jne
cs
push
xor
sarb
fdivr
jg
push
movsb
cli
ret
or
sub
lea
mov
outsl
or
jmp
pushf
cltd
and
push
sbb
fsubrs
and
sbb
sub
or
push
cmp
pop
sub
push
mov
cltd
lds
decl
ret
lock
or
push
cmpsb
mov
jo
aas
push
or
test
gs
incl
lcall
cmpsl
popa
fsts
and
sbb
jle
sub
xlat
sbb
lcall
test
sbb
lahf
xchg
jge
xchg
xchg
and
mov
lea
mov
stos
cli
and
daa
popa
movsl
in
mov
sbb
rcrb
jg
xchg
add
shll
lds
arpl
sub
and
dec
mov
mov
cli
sub
adc
outsb
xchg
int3
shrl
sbb
jmp
sbb
cltd
jecxz
and
mov
xor
add
cmpsl
fs
and
cltd
pop
leave
enter
js
sti
in
dec
fsubp
ja
or
dec
enter
test
repz
xchg
and
mov
and
xor
mov
rolb
fisubrl
and
mov
pop
cld
call
or
mov
sub
in
cmpsl
mov
mov
fsubl
mov
cs
inc
inc
sub
mov
mov
in
js
incl
ficompl
adc
cltd
pop
das
or
ljmp
push
mov
mov
adc
and
ffreep
mov
push
loope
mov
mov
dec
push
cld
sub
sub
sbb
popa
fdiv
bound
push
jmp
scas
adc
xchg
sbb
cmp
mov
cmpsb
cmc
fcomip
orl
in
sbb
mov
ljmp
xor
popl
mov
pop
lods
mov
or
lcall
jae
lods
and
aas
outsl
lret
sbb
lock
pusha
push
and
mov
jg,pn
sub
xor
cmp
sbb
pushl
mov
xchg
dec
add
outsl
ja
cmp
mov
iret
sbb
stos
adc
incl
lcall
sahf
idivl
push
stos
lea
daa
inc
cmp
loope
iret
fwait
test
mov
fisubs
push
sub
mov
jl
aad
dec
sbb
dec
push
cmp
xchg
jg
push
pop
addr16
mov
mov
cmc
std
cmpb
rcrb
xchg
cld
pop
movsb
or
pushl
mov
enter
fsubs
push
fsts
pop
pop
jecxz
rcr
stc
movsb
xchg
mov
ds
lcall
popf
rolb
jge
fdivs
xor
insb
fmull
pushl
leave
scas
and
pop
in
cmp
xor
mov
decl
inc
fldenv
cmp
xchg
faddp
add
stos
nop
xlat
ret
incl
cmp
and
nop
data16
fisttpl
add
mov
cltd
inc
or
mov
in
cmp
mov
jmp
shrl
lock
xor
lds
into
sub
in
sti
jo
mov
lcall
push
stos
mov
mov
out
add
insb
pushf
or
dec
mov
cmpb
jg
sub
jle
gs
stos
inc
inc
into
push
lahf
out
shll
das
clc
clc
lock
and
cmpb
and
inc
push
mov
test
lock
std
push
push
int3
jl
enter
adc
push
mov
and
dec
mov
push
subl
jo
sbb
fpatan
iret
adc
adc
jnp
sub
std
lahf
sbb
ja
push
xor
popa
mov
push
es
adc
mov
sub
incl
out
push
mov
in
dec
or
in
push
pop
rcrb
inc
and
lods
orl
mov
and
lret
mov
out
sub
add
je
mov
loope
adc
mov
sbb
mov
xchg
hlt
aaa
cltd
and
mov
scas
mov
les
lcall
cltd
icebp
mov
pop
push
insb
int3
pop
jle
dec
out
mov
call
enter
xor
orb
xchg
mov
out
mov
xchg
ljmp
ds
outsb
cltd
iret
cmp
pop
xchg
hlt
addr16
cwtl
jmp
pop
jbe
mov
jo
aaa
fucomi
imul
adc
mov
stc
mov
call
xor
pusha
mov
loop
in
cmc
andb
mov
int
xchg
shll
sbb
push
call
inc
cmp
xchg
ret
scas
jb
push
sbb
lret
lea
popf
xchg
xchg
xchg
cmp
pop
ljmp
loop
lea
sub
mov
push
std
pushf
pusha
push
cmp
pushl
push
test
xchg
orb
out
fstp
jno
int
arpl
in
in
and
divl
fisttpll
hlt
jb
ljmp
mov
sbb
sbb
xchg
mov
add
sub
loop
mov
xor
push
sub
mov
adc
add
xchg
push
cmp
lcall
xchg
dec
push
xchg
or
orl
push
dec
aam
incl
inc
clc
scas
and
test
cld
test
pop
adc
push
fbld
pop
push
and
call
jbe
sbb
rorb
aad
test
scas
ror
gs
add
popf
and
dec
mov
fcomip
lcall
std
test
lea
fsubs
loopne
xchg
cmpsl
mov
ret
xchg
sar
mov
lret
mov
push
mov
pop
mov
cmp
loope
lret
fwait
movsb
das
xchg
jg
jmp
test
sbb
or
hlt
xchg
hlt
inc
test
call
nop
repz
fisttps
and
scas
sbb
outsb
jecxz
jge
shl
stos
scas
cmpsl
pop
cli
mov
add
push
outsb
mov
call
test
mov
mov
adc
nop
jle
mov
lret
ret
imul
push
mov
push
mov
jle
mov
cmc
adc
bound
dec
xchg
cmp
sbb
xchg
jo
nop
push
insl
fs
iret
inc
js
sbb
movsb
jecxz
add
sti
imul
ret
ss
ljmp
adc
psllq
jb
movsb
jmp
or
clc
xchg
mov
ja
repnz
or
out
add
jmp
rorb
and
fs
pop
bound
mov
ret
stos
xchg
push
mov
dec
enter
and
pop
js
movaps
stos
popa
inc
push
add
das
mov
test
inc
sti
movsb
dec
sub
mov
ffreep
mov
push
pop
pop
aam
out
lock
int
hlt
decl
jae
sti
cltd
push
in
pop
xor
pop
cmc
ljmp
dec
sub
out
inc
fsubl
rorb
call
add
inc
inc
sbb
mov
movsb
jb
sbb
lcall
push
push
mov
mov
test
loopne
jne
test
scas
cmp
out
push
test
xchg
ljmp
daa
pop
out
xlat
jo
jbe
ficoml
lds
push
outsb
rol
mov
xchg
mov
or
adc
jecxz
mov
sub
int
jp
and
cmpsl
push
lds
push
dec
sarb
cltd
flds
pushl
popa
pop
lret
xchg
popa
jo
fsincos
mov
repnz
fistps
call
inc
out
mov
or
negb
movsb
mov
xchg
test
mov
outsl
aad
cmp
cmp
rolb
push
aad
popf
jcxz
fcoml
dec
imul
rcrb
in
iret
push
cmpsb
incb
jp
pushl
bound
cwtl
dec
cli
pushf
cld
jl
imul
adc
ror
inc
dec
outsl
dec
adc
jmp
push
jl
test
bound
add
jecxz
nop
sbb
arpl
enter
add
enter
adc
ret
bound
repnz
ret
inc
mov
aam
decl
jmp
filds
pop
cmp
dec
inc
out
adc
test
jmp
loopne
sub
xchg
or
cmp
fimull
jl
inc
sbb
cltd
adc
push
jecxz
insl
loop
mov
push
and
das
in
dec
cwtl
test
jle
inc
cld
jge
sbb
jle
or
fstl
fstp
test
adcb
cmp
xor
sbb
pop
xor
and
mov
loope
adc
inc
aaa
mov
ret
dec
jg
mov
lcall
mov
rcrl
cltd
or
call
clc
or
push
ds
in
sbb
insb
mov
addr16
fsubrs
filds
cli
cs
rcr
nop
cmp
int3
add
push
push
sbb
jl
and
mov
cmp
cli
sahf
aad
dec
int
mov
loop
push
enter
jle
pushf
in
psadbw
sbb
cltd
push
in
jnp
jb
mov
push
cli
cld
push
xchg
aaa
ja
je
sbb
outsl
pop
xor
cmp
and
adc
add
dec
lcall
stos
shlb
ss
into
nop
mov
sbb
cmp
push
or
fdivrs
jle
pop
sub
sub
add
and
fidivs
jmp
adc
lcall
shr
inc
imul
jg
dec
nop
push
inc
test
mov
push
cmp
push
jno
jns
popf
repz
lahf
mov
cli
add
loopne
and
inc
movsb
fwait
stc
jge
mov
mov
mov
jmp
jmp
lret
std
jnp
inc
cmc
rorl
mov
jnp
das
ss
cmp
loope
mov
adc
and
adc
fidivrs
or
dec
or
mov
push
dec
jg
lret
ret
fldenv
jp
js
daa
adc
fiaddl
movl
pop
cmp
mov
imul
jo
mov
adc
out
or
jns
pop
mov
inc
dec
add
pushf
mov
mov
lahf
fistpll
outsl
stos
push
loopne
sahf
jecxz
push
jp
mov
in
aas
mov
scas
stos
stos
ljmp
mov
sub
mov
and
lea
inc
add
sbb
or
and
sti
sub
push
mov
enter
xchg
les
push
xchg
sub
jg
call
fidivs
push
dec
mov
fisubl
mov
push
and
lcall
mov
sbb
cs
cmp
lock
decb
sbb
push
shlb
adc
xor
out
pop
imul
inc
ljmp
push
add
cmpsb
data16
push
sbbb
lret
sti
call
mov
lcall
cld
loopne
cli
into
or
sub
pop
ja
or
test
lds
xor
ljmp
pop
xchg
adc
jbe
out
mov
and
aad
addr16
fcomip
ljmp
pop
add
jns
in
push
sbb
jno
pop
cmp
sub
ljmp
lods
inc
lret
mov
fsubrs
roll
pop
and
stc
loope
pop
xchg
call
rcrb
loop
and
aas
mov
dec
ljmp
push
jo
adc
in
and
dec
mov
pop
insb
lcall
adc
das
rclb
loope
or
call
repnz
xor
adc
out
mov
pop
and
out
loope
mov
call
test
inc
test
and
arpl
mov
test
inc
add
out
loop
xchg
jbe
mov
mov
in
xor
cmp
and
cld
xor
hlt
scas
repz
stos
cmp
jb
jg
jmp
pop
hlt
mov
sub
lds
cmp
fs
loopne
pop
or
decl
cmp
cltd
or
das
dec
mov
mov
je
nop
mov
mov
sub
loopne
pushl
xor
sbb
imul
pop
daa
sub
adc
jnp
cmp
and
lcall
jg
inc
addr16
ljmp
mov
gs
sahf
mov
pop
sbb
jno
ss
jnp
bound
dec
pop
mov
fstl
add
lcall
pop
loop
mov
xchg
mov
mov
dec
jl
les
push
pop
push
int
lret
sbb
cld
mov
or
mov
cmp
lahf
jo
xchg
ljmp
jl
lret
repnz
lods
pop
pop
stos
xchg
and
push
sti
lahf
and
mov
add
hlt
sub
xchg
imul
and
scas
xor
mov
and
das
mov
pop
push
xchg
jbe
mov
pushl
push
mov
insl
add
jb
scas
mov
lea
push
sbb
into
inc
nop
clc
decl
in
loop
xchg
cmp
dec
add
lcall
addr16
bound
scas
out
or
xor
imul
jl
repz
dec
call
lock
scas
xor
insb
xor
cmpsl
pop
add
mov
mov
jg
decl
jnp
cwtl
loope
mov
inc
loop
stos
dec
mov
sbb
cmp
std
pushl
fistpl
fmull
xchg
cmpsb
faddp
repnz
add
inc
and
ss
and
ret
mov
pop
lahf
out
lods
int3
jp
push
jmp
loopne
ffree
dec
notb
insb
xacquire
push
mov
mov
call
pop
mov
cmp
out
adc
scas
dec
adc
pop
push
sbb
pushl
mov
push
dec
fucomi
add
jge
jge
test
hlt
popf
cmp
addr16
out
ss
pop
or
fstps
in
cwtl
pop
add
mov
jp
cmp
pop
sti
or
loopne
call
lds
and
and
mov
leave
push
cmp
cmovbe
mov
xor
pop
stos
add
outsl
push
dec
imul
pusha
std
or
fcompl
jbe
cmc
pushl
mov
push
in
mov
mov
mov
dec
arpl
fs
call
sub
nop
jp
jo
lcall
push
xchg
cmpsl
sbb
in
call
loopne
popf
cli
fmul
lahf
sahf
push
andb
out
xor
loope
jmp
dec
out
ficomps
sub
leave
mov
fidivrs
arpl
xor
push
pop
pop
jp
and
xchg
sbb
jns
cmp
es
mov
cli
mov
faddl
sub
adc
insl
ja
cmp
mov
mov
shlb
das
clc
ljmp
jp
push
add
lods
aas
inc
push
jmp
je
das
es
jmp
cli
mov
cmp
hlt
push
pop
jp
xchg
sbb
std
pop
out
adc
mov
in
sbb
hlt
or
adc
loopne
fisttpll
sbb
cmp
call
lcall
lods
push
xor
movsb
ds
dec
jp
cmpsb
inc
pop
sbb
jo
imul
pushl
stc
add
hlt
lret
dec
jle
ret
mov
cmp
or
call
ret
jo
pop
fs
stc
leave
push
repz
in
xor
mov
mov
mov
or
sub
mov
nop
pop
and
inc
jae
pop
xchg
shlb
dec
xor
insl
in
aaa
rcrb
movsb
int
sbb
jge
mov
push
cld
or
cmp
ret
sub
and
and
and
xor
std
stos
cmp
stos
jmp
test
xor
loopne
enter
fisttpll
dec
movsl
subb
mov
ljmp
cmc
add
mov
push
pop
nop
xor
cli
push
pop
test
fsubrp
add
pushl
mov
nop
or
in
jecxz
and
adc
les
dec
sar
jmp
mov
jno
cmp
adc
scas
push
push
adc
fstl
jg
jnp
out
call
les
xor
ss
dec
iret
xchg
movsl
dec
stc
and
sbb
sbb
call
cwtl
popf
mov
sbb
jmp
add
stc
ja
mov
and
je
pop
call
clc
fadd
lods
mov
aam
or
cmpsb
call
jb
dec
push
lcall
pop
adc
stc
mov
dec
or
clc
popf
cltd
xchg
cmp
mov
pop
loopne
out
fs
mov
jl
lock
and
push
push
inc
sub
jmp
out
push
popf
dec
addr16
cmp
mov
fwait
inc
sti
pushl
sub
lret
iret
decl
xorb
pop
shlb
mov
and
inc
repnz
in
outsl
sub
adc
lahf
xchg
mov
inc
jmp
cld
sub
testb
push
mov
or
dec
add
jno
incl
dec
rcr
pop
add
mov
sbb
in
pop
and
ffreep
or
mov
or
pop
mov
push
rcrl
data16
pop
sar
add
ljmp
mov
cmp
pop
mov
out
popa
je
sti
aad
jns
sbb
xchg
jbe
std
push
hlt
stos
orl
into
pop
loop
in
call
mov
mov
inc
movb
fldenv
xchg
inc
add
add
out
and
lcall
or
cmp
xor
jge
repz
scas
dec
ljmpw
jmp
movsb
filds
add
cmp
inc
cmp
push
mov
or
push
mov
aam
hlt
cwtl
pop
loop
jmp
fistpl
jne
enter
sub
cmc
cli
push
cwtl
push
fwait
clc
ljmp
gs
cmp
xor
fiadds
mov
and
jmp
data16
push
or
mov
rcrb
pushf
movsb
jg
push
jecxz
sbb
enter
add
pop
pop
cmpsl
pxor
decl
js
ljmp
fmull
push
pop
sbb
stos
push
and
jbe
popf
mov
push
mov
out
add
repnz
jmp
pop
sbb
incl
cmp
pop
xlat
cmp
jo
mov
mov
fisttpll
ret
incl
jno
decb
icebp
adc
rcrb
iret
rcll
pop
mov
loop
dec
std
decl
cmp
test
scas
imul
xor
jno
fstp
enter
lods
out
push
adc
or
sbb
xor
push
sub
insb
jg
decl
addr16
shll
shrb
fsubrp
jne
or
cmpsb
das
jecxz
add
lcall
inc
lods
icebp
pop
aam
jle
repz
mov
test
cwtl
lret
lods
imul
jbe
add
sar
push
dec
cmp
cs
push
push
mov
lret
nop
js
mov
sub
clc
dec
mov
dec
dec
dec
jbe
jne
adc
ss
mov
and
sub
inc
rcl
mov
data16
and
pop
sti
xor
ret
xchg
in
call
mov
mov
lret
notb
inc
cmpsl
add
cwtl
mov
lcall
std
inc
xchg
pop
popf
push
out
cmp
shll
inc
js
dec
push
cmp
dec
lea
pushl
pushf
pop
sbb
sti
sbb
inc
mov
pop
jbe
insl
pushl
js
fmuls
div
shl
icebp
mov
into
subb
lahf
inc
mov
adc
leave
ljmp
xor
call
jp
stc
data16
in
jecxz
push
add
pop
push
inc
ret
ret
sar
aad
and
adc
jle,pn
pushf
xor
mov
xchg
ljmp
dec
dec
dec
dec
mov
xor
xchg
movsb
push
push
dec
inc
jmp
and
mov
add
xchg
cmpsb
mov
add
pop
jg
mov
js
out
and
iret
leave
inc
out
xor
jp
outsb
sub
xchg
outsl
cmp
cld
cmc
xor
or
jmp
lahf
ret
inc
aad
pushl
inc
or
cmp
jge
test
in
lods
adc
inc
lea
lock
hlt
jnp
out
mov
pop
mov
pop
inc
pop
subb
lea
out
and
adc
add
in
fsubs
mov
ret
pusha
xchg
fdivr
jns
loope
decl
cltd
sub
int3
aam
clc
call
inc
mov
mov
pop
hlt
dec
mov
test
and
cld
aas
add
and
mov
sbb
jp
and
cwtl
daa
pushl
xor
icebp
shl
push
dec
mov
movsb
lret
sub
jns
mov
decl
pop
pop
mov
test
cmp
push
outsl
jge
movsl
cmp
call
sub
lahf
and
iret
xchg
fwait
adc
imul
jnp
ret
jl
adcl
lret
ret
aas
xchg
pop
and
mov
inc
mov
int
adc
inc
arpl
pop
lock
clc
dec
ret
cmp
jae
sbb
lretw
out
lcall
xchg
push
or
out
ret
aaa
insl
push
jmp
mov
jno
lea
inc
gs
mov
mov
inc
fldl
dec
pop
sub
and
push
jmp
jl
dec
fimuls
sub
inc
pop
ja
ds
dec
lock
out
xor
push
jmp
push
xor
or
rcrb
add
pop
cld
jo
pop
outsb
stc
jae
leave
ds
out
cmp
pop
add
jmp
icebp
or
setb
mov
das
lods
cmpsb
sbb
lret
sbb
mov
das
clc
call
cmp
ds
scas
mov
popf
and
pushl
cmp
ljmp
add
test
cmpsb
stc
cmp
mull
sti
pushl
add
stc
jp
jns
cmp
popa
lea
cmp
ds
nop
mov
je
rclb
mov
out
test
ret
or
pop
lock
jmp
fdivl
push
jp
add
xchg
shl
and
andb
or
fidivs
enter
lret
and
cld
jecxz
cmp
sbb
lret
inc
pop
std
les
adc
stos
shrb
dec
cltd
idiv
jmp
pusha
shlb
push
mov
shll
xor
das
mov
or
incl
dec
js
dec
out
mov
jo
cmpsb
pop
xchg
adc
in
jp
pop
jae
xchg
aam
ljmp
outsb
add
push
inc
sbb
xchg
enter
or
jmp
mov
pop
xor
mov
xchg
into
ret
xor
mov
push
push
or
xlat
jmp
lcall
data16
fs
cs
negl
pushf
dec
sub
cltd
in
xor
enter
popa
gs
int3
fwait
jae
mov
push
sbb
test
inc
xchg
clc
call
outsb
mov
je
xlat
popa
bound
call
sub
cli
jp
cmp
rclb
inc
add
add
mov
mov
ljmp
fstl
repz
cwtl
stos
pop
sub
std
add
scas
jecxz
xchg
sarl
dec
push
jge
add
lcall
test
js
dec
pop
iret
rcll
fiaddl
jmp
test
int
incl
clc
leave
imul
ja
sub
test
lock
adc
xchg
sub
jnp
in
call
push
pop
cmpb
out
mov
mov
inc
adc
cli
ss
call
fisubrl
xchg
dec
sub
call
xchg
fidivs
cmp
call
lahf
out
aas
test
xor
aad
jnp
int3
jp
lods
dec
jl
xchg
dec
adc
lcall
add
pop
xchg
fcmovbe
pop
sub
fists
sti
push
mov
lcall
mov
jbe
cwtl
dec
mov
xor
cmp
jmp
jo
test
sub
and
sbb
or
scas
jp
dec
lcall
sbb
xchg
cld
mov
inc
dec
or
stos
jle
adc
pop
push
jnp
cmp
aas
roll
gs
cmc
call
loopne
push
je
fs
mov
sarb
add
cmp
push
into
aas
adc
inc
jmp
dec
cmp
fnstenv
push
pushf
xchg
pop
add
in
pop
cmc
pushl
outsl
iret
daa
xchg
jno
cmp
push
or
loopne
jg
call
movl
pushf
lcall
or
cmpsl
dec
cs
cmp
jo
add
loop
mov
pushl
pushl
jno
mov
xchg
push
and
leave
hlt
pop
mov
cmp
xchg
push
xchg
mov
pop
pop
sub
insl
movsb
imul
pushl
imul
gs
insb
and
ljmp
cld
js
sub
dec
pop
mov
and
cmp
sub
enter
and
sbbb
pushf
lds
jmp
jmp
push
pop
mov
dec
bound
pop
add
or
pushl
notb
arpl
sbb
xlat
and
into
jae
out
inc
test
add
adc
push
jmp
mov
lcall
loope
out
jns
jns
push
div
clc
inc
push
jmp
add
and
scas
hlt
fidivl
dec
fstpt
adc
mov
inc
cmp
pushl
std
out
int3
mov
pop
and
inc
or
mov
scas
cli
pushf
out
mov
incl
and
out
imul
hlt
lods
movsb
in
push
test
add
cmc
ljmp
int3
cmp
and
aad
ficoms
pop
loop
add
add
ljmp
lds
dec
pop
lds
jl
gs
das
cmp
ja
pop
adc
pop
fsubl
decl
incb
jle
or
insb
rorb
add
jns
cmp
lcall
xchg
sub
mov
movb
push
or
jbe
ljmp
loopne
pop
pop
inc
lods
cmp
repz
mov
mov
mov
incl
in
jno
enter
in
je
pushf
in
sbb
stos
lret
jne
loope
pushl
je
pop
aas
xor
inc
jg
push
dec
popa
jnp
push
xchg
jno
fwait
sub
cmpsb
adc
adc
mov
fcomip
ljmp
push
sbb
pop
mov
mov
fnstenv
or
inc
das
and
nop
mov
shrb
ja
test
adc
cmp
xchg
or
outsb
jg
push
cmc
les
cs
xor
sub
add
mov
bound
inc
clc
das
mov
adc
dec
cmp
int
xor
decl
mov
and
fxtract
mov
dec
stos
outsl
mov
call
icebp
sbb
rorb
stc
dec
xlat
test
cmp
xchg
xlat
popf
shlb
ljmp
sub
fistps
and
fsub
inc
loop
dec
and
faddp
fisubrl
mov
push
pop
add
lock
into
push
fcmovnb
and
push
insb
sbb
add
sbbb
test
sahf
in
adc
mov
xchg
cmpsb
pop
sar
out
mov
inc
int3
xchg
cmp
popa
dec
popa
inc
mull
inc
sub
call
xor
mov
loope
ret
sahf
adc
sub
sub
cmp
mov
sub
cmp
pop
xor
movsl
nop
lock
ljmp
lods
in
sub
pushl
lahf
dec
lret
xor
adc
mov
jb
jno
enter
push
cwtl
fwait
xor
sar
cmp
cmp
cmc
xor
dec
idivb
jo
xor
int
aas
dec
jb
aad
inc
popa
inc
les
cmp
ljmp
ss
shl
rcll
fdivrs
andb
in
imul
xchg
or
call
loope
cld
sub
xchg
push
shll
stc
incl
clc
xor
xchg
rorb
or
mov
fdivrp
inc
rcrb
xlat
enter
push
or
mov
mov
ljmp
subl
fs
mov
popf
xor
dec
jae
leave
aas
insl
out
loope
xchg
sub
inc
loope
cs
mov
mov
je
mov
out
aad
fnsave
push
loope
call
mov
arpl
fisubrs
aaa
inc
les
cmc
add
clc
aam
jmp
lcall
push
sti
inc
popa
enter
fwait
mov
sbb
xchg
inc
int3
lret
cwtl
iret
push
ds
adc
xchg
pop
and
mov
cmpsl
leave
imul
xor
scas
fmuls
int
pop
sbb
dec
inc
std
loopne
hlt
push
ljmp
cwtl
dec
fisubl
sbb
out
pop
fwait
adc
sar
je
push
adcb
inc
int3
ljmp
mov
mov
test
pop
stos
or
fists
xor
sbb
adc
xchg
inc
or
push
or
call
adc
push
hlt
sub
dec
out
into
int
loop
loopne
inc
arpl
std
add
into
aam
mov
scas
imul
cmp
jnp
inc
xlat
pop
push
test
imul
push
cmpsl
mov
inc
mov
ss
test
mov
mov
sub
sahf
adc
imul
rorb
loope
cli
lcall
call
xchg
cmp
pop
mov
sbb
sbb
sub
mov
cli
loopne
lea
and
jle
out
xchg
jb
or
cmp
xor
stc
or
in
jg
mov
mov
decl
nop
add
and
pop
cmp
mov
bound
out
icebp
cmp
dec
lcall
arpl
xchg
lds
add
repz
lods
jne
xchg
or
mov
scas
sbb
call
mov
test
popa
sub
xor
mov
mov
and
sub
lock
inc
mov
cld
xor
pop
add
inc
fnstsw
or
ljmp
leave
loopne
repnz
jno
gs
in
ud0
call
fisubrl
push
sbb
mov
xchg
pop
cltd
das
test
rcl
sub
hlt
sarb
or
aaa
fwait
jae
or
fisubs
stos
dec
test
xchg
sub
push
mov
pop
add
arpl
and
add
popf
add
inc
pop
int
or
decl
aas
sub
xorb
pushf
push
mov
shl
inc
adc
mov
push
ffreep
pop
icebp
pushl
xor
adc
pop
cmpsl
xchg
mov
cld
aas
ljmp
sbb
mov
pop
adc
lahf
mov
test
and
add
rol
in
jo
mov
or
inc
js
stos
xchg
inc
imul
dec
es
xchg
and
ljmp
mov
sub
push
inc
mov
int3
xchg
lcall
mov
ret
mov
sub
lcall
xchg
sbb
fdiv
cmp
scas
mov
clc
sti
gs
int
mov
mov
push
popa
out
cwtl
adc
insb
dec
mov
out
ljmp
clc
js
pop
bound
out
repz
cmp
sti
xchg
xor
ret
ret
dec
adcl
scas
ret
cwtl
mov
aaa
outsl
lahf
or
stos
call
imul
popf
xchg
fsts
adc
test
shl
stos
jmp
and
pop
rorl
loop
and
sbb
lret
or
movb
inc
jmp
cld
test
testl
dec
lods
cmp
cmovs
adc
fldt
fsts
shlb
or
decl
xchg
arpl
push
decl
cmpsb
stc
push
aas
test
sub
fs
and
pushl
xor
stos
xchg
insl
inc
sub
addr16
mov
fnsave
xchg
insb
cmp
mov
xchg
rcrl
push
sbb
jmp
add
pushf
adc
mov
test
push
sub
xor
jbe
clc
ja
decl
cmp
jb
xchg
lods
loop
flds
or
sbb
jl
incl
or
cmc
test
mov
push
clc
inc
xor
dec
mov
mov
mov
sahf
inc
icebp
xor
jmp
dec
test
das
pushf
hlt
nop
or
dec
mov
mov
jmp
in
jle
dec
cmp
jmp
jmp
mov
call
xchg
std
add
sbb
icebp
mov
xor
pop
jmp
test
cltd
inc
and
insb
and
jmp
cmp
mov
add
popf
pusha
nop
mov
aad
and
mov
mov
inc
out
sbb
int3
dec
aad
in
mov
es
pop
mov
jbe
or
mov
incl
mov
xor
rclb
mov
rcr
icebp
xchg
mov
cmpsb
lock
cmp
div
jp
call
hlt
jg
pushl
xlat
jmp
dec
cmp
daa
push
cmp
minps
ja
aad
cmp
ljmp
or
cli
push
pusha
jle
push
push
jg
lret
ljmp
cmp
xor
cmp
stos
aad
cmp
jle
push
icebp
popf
inc
adc
mov
fnstcw
add
adc
cmpsb
js
cmp
cmp
add
decl
lock
or
push
and
lret
xchg
jecxz
jmp
push
loop
sbb
dec
adc
mov
stc
out
dec
int3
push
ret
out
out
adc
test
call
mov
aad
cmpsl
jns
cmpsb
sub
in
test
ret
ljmp
loopne
out
fldl
in
gs
or
sub
cltd
mov
stos
daa
outsl
or
outsl
inc
stc
in
inc
lds
into
aas
adc
or
orb
mov
insl
and
lcall
mov
mov
dec
adc
daa
jne
and
incl
pop
jmp
or
adc
les
test
dec
mov
dec
fbld
loopne
lods
push
ljmp
mov
call
sti
xor
fiaddl
cmp
out
inc
daa
inc
shrb
fwait
mov
push
int3
mov
iret
stos
int
hlt
sub
stos
jno
push
pop
lock
dec
xchg
mov
push
daa
push
sbbl
movsl
sub
nop
decl
std
mov
push
subb
fcomip
cmc
jecxz
mov
lods
lods
decl
push
pushf
stos
pop
cwtl
pop
jo
dec
and
popf
jnp
popf
xor
dec
scas
int3
aaa
movsb
fsin
cmpsl
int
decl
outsl
sarl
mov
lods
insl
xchg
xchg
int3
jl
cmc
or
scas
out
xchg
sbb
hlt
sbb
jnp
fstpl
aad
in
shrb
ds
sbb
mov
push
sub
shlb
pop
xlat
movsl
arpl
ljmp
in
xchg
jl
pop
push
mov
inc
pop
inc
pop
pop
sub
clc
enter
arpl
fimull
popa
dec
inc
pop
dec
cli
inc
movsb
ljmp
stos
mov
int3
dec
inc
mov
sbb
mov
pop
jp
add
xor
insb
jmp
gs
fwait
outsl
mov
jno
push
xchg
ss
addl
jb
mov
mov
in
imul
xor
and
xchg
lods
mov
neg
lcall
xchg
jne
mov
inc
jb
lea
add
dec
xor
pop
cmc
mov
ljmp
xor
or
xlat
fldl
push
cmp
mov
and
hlt
outsl
or
xchg
push
ds
dec
arpl
push
out
jmp
data16
jae
adc
mov
mov
incl
sbb
or
lea
out
movsl
jmp
mov
and
push
mov
sub
cmc
mov
rcrl
inc
mov
call
cli
popa
faddl
mov
xor
xchg
and
and
and
adc
shll
bound
clc
dec
adc
filds
in
ds
popl
push
stc
pop
inc
adc
lods
jp
out
iret
adc
fidivrl
cmp
sbb
ljmp
jo
movsl
push
cltd
push
push
pop
sbb
lahf
add
dec
clc
or
incl
xor
loopne
int3
sbb
fwait
hlt
and
fwait
mov
stc
push
std
aam
push
lcall
cltd
data16
in
mov
cmp
clc
movsl
sub
xor
dec
xor
ljmp
call
pushf
stos
push
lret
sub
sbb
outsb
adc
fwait
aaa
aam
adc
pushl
xchg
mov
in
pop
push
dec
andb
jb
and
cmp
ds
sub
pop
std
dec
pusha
sbb
sbb
cmp
jg
inc
rcr
sbb
call
test
inc
jno
test
lret
xor
loop
sar
dec
lret
imul
mov
sub
dec
in
add
sbb
adc
test
inc
dec
jo
fisubl
decl
lock
sbb
and
jge
std
jnp
xor
sub
pop
pop
decl
or
mov
mov
and
mov
inc
pop
std
mov
mov
push
sbb
cvtps2pi
and
lret
into
mov
xchg
xor
mov
lcall
jbe
jmp
fldt
hlt
mov
pop
and
push
adc
pop
lock
daa
mov
outsb
aaa
add
cld
xor
dec
ljmp
cmpsl
jae
mov
xor
add
scas
cmpsb
adc
fwait
push
mov
leave
xchg
sti
pop
inc
icebp
in
push
inc
mov
addr16
inc
cmpl
mov
lret
cmp
pop
lods
mov
loop
adcb
adc
adc
or
fdivr
push
movl
add
fwait
movl
das
fwait
je
mov
ret
jmp
out
mov
xor
lods
xchg
add
push
xlat
test
ds
add
push
xchg
sub
mov
test
dec
mov
pop
shr
push
setle
adc
lea
je
fs
pop
ds
call
nop
jecxz
cmp
xor
aaa
sub
into
je
ljmp
dec
lea
jg
sub
popl
adc
mov
lcall
lcall
and
movsb
imul
mov
dec
loop
cltd
mov
ljmp
dec
push
pop
sbb
das
shl
andb
mov
pop
lret
shl
in
nop
jnp
adc
sub
incl
cld
sbb
xlat
pop
popf
mov
fistpll
insb
int
xor
decl
inc
out
xchg
call
movsb
ret
mov
and
popf
int3
addb
pop
adcb
call
in
movsl
jbe
inc
mov
sub
pop
test
jnp
jmp
bound
mov
out
clc
jmp
and
inc
movb
mov
mov
sbb
mov
mov
pop
and
in
xor
enter
fildll
call
movsb
outsl
inc
idivb
sub
mov
imul
mov
ljmp
mov
les
sub
xor
add
test
lods
or
sbb
imul
jns
nop
lcall
xor
or
push
sbb
stos
xor
pushl
mov
test
cmp
mov
push
shlb
xchg
xorb
pushl
dec
out
inc
lret
fsubr
inc
mov
inc
mov
cmc
add
inc
pop
rol
js
and
or
dec
mov
cld
sub
lcall
lods
dec
or
insb
jle
loop
lahf
lea
push
or
pop
mov
pushl
aad
xor
adc
or
xlat
push
pop
mov
mov
sbbb
jg
imul
dec
bound
lcall
js
jnp
and
add
std
pusha
jmp
out
cmpb
or
cmp
js
or
mov
lea
nop
in
sahf
inc
aad
dec
out
jp
cmp
push
into
jl
cs
fimull
int
aaa
dec
or
pushl
lds
pushf
je
mov
mov
loope
sub
xchg
jge
cmpsb
ret
dec
mov
mov
mov
popa
std
dec
repnz
jmp
movsl
fiadds
cwtl
fdiv
mov
cld
dec
sub
pop
les
push
pushl
or
mov
das
mov
lcall
jns
push
fidivl
inc
pusha
push
mov
mov
or
jecxz
jmp
stc
sub
or
push
sub
test
pushl
cli
lods
loopne
mov
or
dec
push
daa
adcl
inc
loop
jge
sbb
imul
push
cli
test
es
mov
or
stc
clc
les
les
pop
mov
jae
sbb
push
cmp
or
sti
inc
dec
push
inc
jb
adc
pop
push
mov
fwait
xor
scas
shl
jns
jl
adc
add
dec
mov
in
mov
jbe
cmp
ret
mov
cmpsl
mov
scas
mov
nop
mov
or
imul
xor
cmp
and
cmp
call
es
mov
pop
push
jmp
inc
sub
mov
adc
in
imul
sub
out
out
scas
xor
inc
ds
aas
mov
rcrl
mov
jge
sub
mov
and
ljmp
pop
fstps
push
cmc
pop
adc
inc
mov
mov
loopne
push
mov
ja
dec
aaa
fadds
pop
or
out
jb
jae
sbb
lret
sbb
incl
js
enter
pop
xchg
into
pop
stos
outsb
sub
test
fstl
mov
or
std
inc
jmp
pop
call
in
sub
ljmp
hlt
sub
push
mov
jl
sbbb
xchg
push
push
int
scas
clc
ljmp
pop
or
insl
insl
cmp
nop
adc
int
rcrl
inc
add
mov
je
stos
out
fsubrl
or
sub
sbb
sub
sbbl
xor
in
in
push
xor
mov
nop
insl
pop
imul
call
pop
jnp
lock
mov
out
pop
push
pop
dec
sbb
jmp
sub
incb
lock
sbb
addb
pop
dec
sbb
inc
push
lcall
mov
xchg
daa
in
pop
xchg
mov
or
ss
jae
xchg
pop
mov
mov
xor
sbb
test
xor
jl
or
xor
jnp
pop
xor
scas
mov
and
call
xor
sbb
adcl
scas
inc
int3
mov
in
mov
sub
mov
mov
nop
inc
mov
mov
je
ss
movsb
test
add
adc
jmp
xchg
inc
pop
test
push
cmc
and
push
mov
sti
or
push
cmpsb
xlat
in
jp
mov
mov
mov
fldenv
xchg
and
xor
in
popf
bound
and
sbb
jmp
stos
flds
mov
push
in
shll
cs
mov
arpl
std
sbb
call
push
dec
out
cs
out
cli
orl
lods
push
clc
in
pushl
or
or
cmpsl
push
mov
inc
fimull
mov
jg
add
cwtl
cld
dec
sbb
fsubrl
test
clc
dec
je
div
inc
scas
aaa
jne
xor
mov
adc
call
add
movsl
lret
push
push
mov
pop
jg
jo
dec
mov
aas
pop
in
inc
jnp
dec
aad
jp
cli
stc
sbb
std
out
pop
add
inc
adcb
stos
dec
fisubrs
xor
mov
cltd
cmp
stos
xor
stc
nop
xchg
push
pop
sub
and
ret
arpl
adc
sub
cmp
movsb
fs
loop
lret
and
popa
add
enter
sar
jg
push
lods
pop
xor
rcl
imul
push
test
incl
paddb
adc
gs
imul
icebp
adc
lcall
push
pop
pop
jecxz
out
cmp
rcrb
inc
leave
xchg
cmp
xor
xchg
fildll
or
push
out
and
pushl
out
loope
leave
cmp
jle
xchg
addr16
dec
xor
add
fldenv
cmp
decl
loopne
pop
sbb
scas
mov
mov
fstl
push
sbb
in
std
arpl
call
imul
out
pop
jo
pop
arpl
sbbl
lret
hlt
shlb
push
rol
call
and
xchg
insb
ss
das
out
adc
jmp
mov
push
pop
mov
movsl
push
dec
decl
stc
jae
xchg
filds
sub
push
and
popf
inc
and
in
mov
sbb
rorb
cmp
mov
pop
movsb
out
fcoms
pushl
add
mov
sahf
int
fnsave
mov
imul
xchg
xor
jmp
out
mov
mov
adc
or
inc
cmp
sti
enter
int3
nop
sbb
pushl
outsl
dec
jns
mov
cli
gs
sbb
pop
inc
xchg
jle
call
lods
xchg
js
pop
add
insb
pop
mov
xchg
bnd
add
mov
call
xor
cmp
cltd
inc
xchg
mov
mov
jmp
jg
or
pop
or
pusha
add
arpl
cli
lret
or
fnstcw
not
pusha
test
dec
pushf
sti
dec
sti
add
clc
insb
into
and
push
pop
ljmp
mov
mov
data16
stos
add
test
dec
jb
add
adc
pushl
and
shrl
push
dec
inc
in
bnd
stos
out
inc
test
cli
jmp
push
xchg
fstpt
loop
mov
jo
mov
stos
iret
add
add
call
xor
push
cs
mov
in
lcall
jae
add
in
jne
mov
hlt
push
jecxz
mov
ficomps
in
inc
jmp
cmp
clc
or
jae
sbb
bnd
inc
cltd
scas
sub
sub
testl
call
es
jl
cmp
push
sbb
fs
mov
call
ja
pop
cwtl
mov
push
ficoms
push
jae
pushf
popa
xchg
cs
in
xchg
ret
jg
cmc
mov
shlb
nop
dec
xchg
jp
dec
push
jmp
xchg
mov
ret
stos
pop
jl
jb
lcall
jmp
lcall
mov
ficomps
mov
arpl
out
mov
jmp
add
fsubr
imul
outsl
rcl
jbe
loopne
mov
out
ficomps
call
or
add
pop
cmp
and
cmp
inc
inc
cld
inc
iret
dec
adc
leave
xor
decl
pop
stos
push
std
and
push
or
lds
cmp
jp
orb
sbb
pop
lcall
push
add
sub
push
jb
jne
pushf
push
sbb
aas
fs
orb
dec
push
movl
out
or
lcall
popf
xor
pop
mov
insb
ret
lock
sarl
jnp
insb
pop
in
xor
push
jle
pop
int
and
pop
scas
fcomip
dec
or
mov
mov
incl
pop
jecxz
loope
orl
cli
inc
jbe
cmpsb
and
sub
into
enter
aad
pop
xor
jle
sub
cmp
pop
jb
jg
daa
cltd
aad
dec
dec
adc
adc
imul
adc
loopne
scas
sbb
cmp
cltd
mov
mov
and
iret
stos
xor
cwtl
psrad
mov
or
ljmp
cltd
nop
jecxz
jge
sti
outsl
dec
fwait
arpl
add
mov
dec
test
lcall
popf
sbbb
mov
push
xchg
mov
in
rol
push
sub
idiv
incl
sbb
inc
and
stc
jno
pushf
ja
sbb
sar
cmp
jno
xchg
aad
pushf
lahf
cli
cltd
adcb
int
js
push
or
jg
pop
test
pop
js
fnsave
gs
cli
lods
inc
push
cmp
stos
gs
pop
fdivr
out
cli
inc
sbb
push
cmp
push
cs
mov
aad
in
out
movsl
in
repz
fisubrs
jp
das
sar
mov
xor
cmc
ss
fwait
fs
pop
jle
stos
sub
add
inc
mov
std
incl
ljmp
xchg
pop
pop
out
sbb
movsb
shrl
aas
xor
pop
pop
les
es
adc
lds
incl
pop
ja
test
dec
lret
xchg
subb
inc
loope
enter
mov
pushl
ret
adc
mov
cmp
push
arpl
sub
out
leave
pushf
pop
fisubs
jmp
or
mov
imul
imull
iret
mov
sub
aam
cmp
cld
call
cwtl
int
cmpl
inc
mov
inc
int3
pop
xor
movl
pop
and
hlt
or
scas
icebp
fwait
ret
mov
jl
nop
punpckldq
loope
cmpb
fwait
je
rcll
cmp
cmc
lea
daa
sahf
cli
movq
fs
cltd
rcrb
fs
jb
pop
fstps
daa
mull
insb
repz
clc
call
xchg
and
aad
sbb
adc
cmpsl
ljmp
inc
loop
pop
repnz
pop
push
lret
and
fistl
inc
cmpsb
and
decl
xor
in
sub
into
xor
sahf
enter
roll
lret
cmp
popf
push
aam
pop
or
sbb
out
mov
out
sub
mov
inc
or
jle
inc
xor
jge
shlb
cli
mov
subl
pushl
mov
push
nop
mov
outsl
loop
push
xchg
hlt
add
pop
push
push
mov
decl
scas
adc
iret
adc
sub
mov
jg
in
mov
aaa
cld
call
addb
and
shll
daa
jb
lcall
xor
or
inc
mov
fisttps
cmc
out
sbb
call
cmp
sub
andb
adc
jae
dec
pushf
enter
lahf
insl
and
cmp
subb
add
pop
outsb
mov
fxch
xchg
filds
jl
rcrb
and
sub
cmp
dec
test
push
stos
mov
js
pop
stos
jno
xchg
out
inc
xchg
out
fidivrl
sbb
roll
rcll
and
ja
mov
xor
jmp
in
in
cmp
dec
ljmp
aad
or
inc
mov
mov
icebp
adc
mov
xor
and
add
xchg
bound
adc
loope
in
mov
ljmp
fwait
xor
mov
cmc
mov
icebp
xor
adc
add
decb
fdivs
xchg
inc
xor
lcall
add
or
inc
and
jl
int3
cmp
fistps
inc
or
and
push
stos
sbb
sbb
sub
jo
mov
mov
fdivr
mov
and
call
inc
lea
jno
jle
enter
out
int3
popf
pop
add
lret
movl
inc
dec
out
clc
in
mov
enter
call
cmp
push
add
dec
loopne
xchg
fisubl
in
push
push
ss
sub
loope
and
dec
adc
xchg
scas
repnz
decb
and
scas
mov
fbld
cli
ss
jnp
xchg
orb
mov
insl
negl
dec
rolb
cwtl
and
sub
push
cmp
imul
push
and
pusha
sub
out
enter
jle
leave
icebp
mov
fadds
decl
pop
cmp
lcall
mov
xchg
shll
push
faddl
adc
xchg
cs
jmp
add
lock
mov
jg
mov
stos
ret
mov
xchg
stos
ret
sbb
jo
mov
aas
xchg
inc
ljmp
inc
fistps
std
repz
jmp
mov
cmp
inc
ds
jle
out
xlat
sarb
or
cs
push
stc
sar
push
movsb
mov
jb
pop
cmp
mov
ja
xchg
xchg
fldl
js
out
repnz
jg
push
js
jmp
stc
es
and
mov
pop
cmp
movsl
xor
ljmp
inc
cld
xchg
inc
cmp
subb
xor
aas
dec
xchg
inc
enter
jge
pushl
test
mov
sbb
or
test
test
mov
cwtl
xlat
sub
leave
mov
loopne
ja
rol
icebp
inc
jne
ljmp
sar
insl
sahf
xor
pop
sub
xor
arpl
mov
divl
mov
outsb
js
push
pop
sbb
sub
inc
rcrl
pcmpeqb
ss
mov
incl
ja
loop
or
inc
sub
fwait
sub
and
sub
push
xchg
and
pop
ret
jmp
ldmxcsr
fs
out
inc
pushf
dec
enter
jmp
fimull
mov
mov
hlt
push
mov
cmp
cld
and
mov
dec
lcall
inc
inc
jnp
xor
ds
nop
xor
aas
lret
aad
incl
adc
js
sub
push
cmp
xchg
pop
mov
sbb
lcall
stc
repnz
sbb
lods
loop
mov
mov
inc
jnp
scas
arpl
in
pop
repz
pushl
mov
mov
push
push
cmp
in
dec
shrb
mov
xchg
imul
push
repnz
int3
incl
add
stos
std
ss
das
or
cmc
xchg
mov
incl
ds
sbb
adc
imul
movsl
and
in
cs
xlat
dec
xchg
fwait
push
repnz
xchg
adc
popa
scas
or
repnz
scas
cmp
jg
mov
inc
std
dec
addb
mov
sub
pop
lods
hlt
xor
push
add
xchg
add
push
mov
xchg
nop
mov
lods
mov
cwtl
cmp
cs
jb
ds
jg
outsl
push
aas
pop
lcall
inc
xchg
or
cmpsl
sub
nop
pop
and
outsb
fimull
cmp
inc
pop
icebp
ljmp
add
sbb
pop
mov
mov
xchg
ljmp
stc
scas
outsl
xchg
push
dec
sub
jmp
and
lea
sub
loopne
push
inc
push
call
xchg
or
mov
mov
and
add
nop
fnsave
scas
pop
ja
lods
dec
in
test
call
test
stos
cwtl
adc
push
mov
mov
mov
inc
jnp
or
into
sub
sub
decl
roll
mov
adc
mov
adc
cmp
or
es
sub
sahf
mov
out
mov
cmpsl
mov
in
lods
loopne
aas
repnz
sub
ja
dec
or
fcos
mov
cmpsb
mov
jecxz
pushf
in
loop
test
push
fwait
pop
jbe
lret
loope
sub
and
scas
xor
into
and
pop
movsb
push
dec
inc
push
out
gs
cmc
decl
sub
xorb
out
lcall
pop
roll
inc
and
adc
mov
arpl
xlat
and
andl
jecxz
cmp
xchg
lds
int3
xchg
je
insl
hlt
sub
sbb
cmp
decl
or
add
stos
pop
jecxz
cld
sahf
adc
add
lods
jnp
mov
sahf
insb
inc
ljmp
scas
popf
aas
call
sub
pop
lock
stos
sbb
and
leave
filds
mov
push
mov
mov
inc
sub
jmp
insl
lea
mov
xchg
inc
add
push
inc
cmp
in
mov
mov
mov
push
mov
mov
sbb
pushl
lock
aaa
push
mov
shrb
dec
mov
push
inc
call
pop
loopne
aad
mov
push
xlat
lcall
jp
fisubrl
loopne
inc
cmp
je
insb
mov
mov
jg
push
adc
loopne
lods
imul
aad
adcl
sarl
push
mov
call
sub
pop
push
xchg
mov
push
outsb
adc
andl
call
aas
xchg
in
sbb
cli
mov
cmp
ss
add
add
cmp
xchg
lock
jae
inc
xchg
pop
lea
loopne
sarl
call
ss
fucomi
cmp
add
xchg
sub
pop
inc
or
jns
sahf
xlat
int3
pop
ret
bnd
shlb
shr
sbb
pop
aam
dec
and
cmp
fisttps
rclb
add
orb
fildll
push
dec
cmp
mov
decl
xchg
cmp
add
push
or
aaa
and
test
lcall
mov
je
xor
cmp
adc
in
mov
dec
mov
mov
jg
add
mov
lods
dec
scas
sbb
xchg
add
pop
jo
mov
add
sarb
sub
jno
enter
out
insb
mov
ljmp
ror
or
lcall
out
test
pop
leave
sbb
lock
aam
add
in
daa
pop
mov
xchg
xor
jle
pushf
mov
sbb
pushl
mov
aas
std
mov
ret
in
inc
repnz
bound
lahf
outsl
decl
fistpll
aaa
test
jp
jb
lods
push
cmc
ficompl
fisttps
sahf
adc
pop
adc
mov
cmp
dec
lcall
mov
fiaddl
lcall
jge
inc
daa
cmpb
xchg
adcb
sub
mov
and
call
movb
int
xlat
loopne
in
and
notl
and
add
fistpll
dec
dec
roll
mov
dec
ds
in
add
cli
outsl
ljmp
cmp
aaa
cmpsl
sbb
jne
lock
inc
mov
sub
shr
sbb
decl
push
xchg
iret
test
addb
in
jne
jb
mov
cld
rol
sub
mov
sti
dec
xchg
scas
movsl
lds
pop
sub
mov
mov
call
or
das
inc
jge
push
add
and
adc
sub
xor
cmp
add
in
fcomip
jmp
xchg
mov
enter
sbb
xlat
cltd
pop
mov
pop
fsubr
cli
mov
jmp
and
inc
fdivr
cmc
aad
pop
sbb
call
mov
cli
push
push
call
pop
sbb
sub
mov
cmp
push
jp
clc
pushl
jo
lds
rclb
pop
sbb
ret
pop
or
popa
push
roll
lock
inc
pusha
adc
dec
cmp
cmpsl
push
mov
nop
and
es
dec
in
or
pushl
cld
out
orb
repnz
outsl
popf
lock
mov
sub
jo
and
call
incl
insl
or
xor
push
lret
jae
dec
jle
mov
push
es
pop
cmp
or
adc
call
cwtl
in
xchg
pop
inc
cmpb
adc
pop
adc
lahf
dec
cmpsl
xchg
ljmp
push
jg
nop
push
subb
mov
xchg
dec
mov
mov
out
pushl
mov
cmp
cwtl
mov
mov
dec
loopne
xor
or
sub
xchg
lock
loope
dec
adc
ljmp
inc
add
out
popa
jmp
popa
xor
mov
xchg
dec
ds
mov
call
loopne
mov
out
dec
mov
adc
inc
jae
cmpsb
dec
and
or
push
daa
dec
adc
pop
adc
and
and
dec
mov
sbb
clc
sbb
int
or
test
pushl
adc
add
pop
jo
into
xor
cltd
adc
inc
mov
mov
fldt
add
adc
pop
xor
sub
mov
xchg
ljmp
lcall
adc
xor
adc
or
mov
xor
xchg
push
ljmp
xor
rcrl
sub
jb
adc
mov
inc
loopne
call
adc
pusha
fs
js
mov
cmp
mov
sti
inc
jne
rcl
scas
mov
cmp
mov
mov
push
add
icebp
jno
aad
int3
push
sub
decl
mov
and
fcompl
jo
sub
into
sbb
cmp
std
clc
and
mov
loope
push
jb
sahf
adc
mov
pop
and
mov
into
stos
xchg
and
js
nop
jb
pop
cmp
and
out
adc
mov
xchg
movsl
xchg
pop
pop
data16
fldt
decl
adc
pop
xchg
dec
and
shlb
stos
orl
dec
cmp
jecxz
cmpsb
ss
enter
mov
sbb
in
stos
push
or
les
cltd
shrl
lcall
imul
in
pop
test
jmp
addl
pop
add
mov
movsl
or
push
jp
xor
jg
hlt
jge
mov
mov
mov
cmpsl
mov
dec
xor
jbe
pop
jno
decl
pushf
les
or
cltd
pop
test
xor
xchg
jns
test
pop
bound
jp
push
mov
push
lods
mov
enter
fadds
fdivs
dec
fs
inc
xchg
mov
cmp
loope
out
fadd
dec
or
cmp
cmp
cmp
ja
fdivs
pop
sbb
jp
sahf
or
imulb
stos
sub
mov
or
add
cmp
inc
jno
sbb
decl
lahf
cmp
fnstenv
pop
lds
shrl
popa
cmc
mov
fsubrs
leave
and
icebp
ljmp
call
xchg
lea
cmc
push
mov
or
ror
jge
mov
mov
sub
sahf
lahf
jnp
cld
in
jg
push
inc
out
xchg
repnz
aad
pop
clc
mov
ds
sti
inc
push
aam
test
add
testl
pop
nop
adc
popa
cmpb
je
jbe
mov
push
cmpsb
cmpsb
filds
loopne
loopne
inc
jmp
ret
xchg
xchg
loopne
mov
insb
scas
clc
cli
xchg
aam
mov
lcall
push
jne
xor
fisubrl
out
or
pushl
mov
mov
mov
sahf
rol
cli
jp
inc
xor
inc
roll
add
in
data16
sbbb
popf
into
mov
lcall
setb
fisttpl
mov
lret
jo
mov
mov
into
cltd
push
test
cmp
cmp
clc
cmp
ret
loop
adcl
xor
xlat
mov
shl
mov
push
lods
pushl
les
add
sub
decl
mov
sbb
lock
shll
sbb
jo
pushf
push
mov
mov
jno
cmp
xchg
out
lds
cs
insl
push
fidivl
jg
jle
xchg
jbe
lret
mov
rol
aaa
or
lea
int
cli
add
test
sub
xchg
adc
mov
ljmp
jae
fisubl
cmp
mov
push
pop
hlt
push
aad
scas
iret
push
repnz
call
jg
sbb
inc
jmp
dec
sbb
int3
fimuls
push
flds
ret
incl
sbb
mov
pusha
xor
and
scas
cmp
sub
sub
sti
xchg
pushf
adc
xchg
add
aas
push
mov
outsl
out
rorb
stos
call
std
and
adc
xchg
ss
or
and
jg
lcall
lods
fwait
test
ror
popl
je
call
jo
jo
insl
ljmp
cmp
xor
ret
jbe
sub
test
mov
mov
cmc
lret
xchg
in
sub
fnstsw
adc
mov
aas
push
bound
and
and
nop
sbb
fldenv
xchg
push
cld
call
jb
lret
dec
push
pop
fcompl
or
fwait
adc
xchg
add
cmpsb
shll
or
call
iret
nop
mov
mov
cmp
xchg
xchg
push
fiadds
mov
jno
ja
mov
orb
add
pop
lcall
bound
je
scas
mov
fisttpll
outsl
out
push
jecxz
stos
popa
xchg
pop
divb
pop
loopne
push
ja
jle
push
xor
lret
jl
mov
jle
lcall
insl
push
adc
icebp
outsl
cmp
push
dec
xchg
jbe
pop
jp
daa
gs
dec
scas
stos
mov
push
jge
add
push
adc
arpl
je
pop
dec
cmc
data16
lds
lret
add
ja
shrl
pusha
pop
xchg
sub
xrelease
mov
cmpb
incl
jns
leavew
xchg
lods
outsl
dec
fldt
jl
test
call
and
mov
jecxz
inc
or
inc
ljmp
sub
lods
pop
push
jg
inc
shll
xchg
or
xchg
inc
mov
in
push
lock
jp
rcrb
testb
inc
mov
pushl
jo
sub
pop
mov
push
fdivrl
je
pop
cwtl
mov
cmc
decl
iret
call
sub
mov
push
orl
in
inc
mov
in
icebp
xchg
xorb
pop
xchg
ljmp
out
add
xor
ret
cmpsb
fucomp
push
call
call
xlat
xchg
or
outsb
inc
dec
mov
dec
and
iret
pop
in
push
and
lcall
add
jne
dec
icebp
add
and
jge
pop
pusha
icebp
or
mov
lcall
arpl
outsb
lahf
cmpsb
jmp
leave
enter
pushf
scas
shlb
adc
mov
xor
inc
incl
xor
lahf
ret
test
mov
leave
mov
and
inc
ja
mov
cmpb
les
dec
jmp
out
xchg
jecxz
sub
cmp
jns
adc
decl
adc
out
int
push
lahf
sahf
push
mov
arpl
push
imul
sbb
sbb
sarb
cmp
xchg
loop
dec
aas
mov
outsb
or
loopne
mov
cmp
adc
in
push
or
call
mov
push
cmpsl
sti
gs
fisttps
and
and
jmp
add
push
movsb
decl
js
shrb
pop
inc
cmp
gs
test
pop
inc
aas
pop
cmp
flds
ja
call
mov
push
fidivrl
pusha
pop
bound
shl
jbe
hlt
hlt
movsb
mov
mov
cwtl
jp
fisubl
jp
test
pushf
fdivs
sarb
mov
aam
add
fwait
loop
push
xor
mov
jmp
adc
xchg
pop
stc
inc
mov
sbb
pop
cmpsb
fwait
imul
and
fmuls
sbb
testl
inc
sti
pushf
fcomip
ds
sub
cwtl
nop
push
mov
out
jmp
daa
sub
dec
lcall
jnp
addr16
dec
or
fistpl
adc
mov
je
push
sbbb
setne
mov
out
dec
jbe
adc
in
or
add
xorb
cmp
fsubl
sub
aaa
xchg
or
push
test
jp
loop
lret
in
sbb
mov
lahf
inc
push
or
es
xorl
mov
push
push
sbb
fcomip
decl
je
jae
cwtl
mov
in
mov
push
fistpll
mov
out
test
incl
mov
les
lahf
imul
out
adc
mov
in
testb
sub
adc
jmp
mov
es
cld
dec
jle
repnz
mov
leave
inc
inc
insl
pop
pusha
scas
mov
test
fdivrs
sub
stos
jno
out
mov
cmpsl
jg
push
and
sbb
inc
mov
dec
dec
movsb
jbe
lcall
lahf
dec
ret
sbb
scas
or
fisubrs
xchg
decl
lock
sbb
stos
shl
pop
scas
stos
shrb
or
call
pop
stc
stc
push
ret
push
fisubrs
add
inc
adc
mov
pusha
mov
push
pop
cmp
pushl
xchg
iret
sbb
push
adc
mov
or
dec
lahf
inc
jl
gs
and
jecxz
jecxz
ljmp
insb
push
decb
mov
adc
pushl
pop
xchg
int
sbb
add
mov
ja
lods
or
loopne
cld
jmp
jbe
gs
xchg
add
minps
inc
jecxz
arpl
xchg
xchg
orb
nop
fcomip
loope
fcmovnu
fiadds
mov
sti
bound
hlt
pushl
pop
leave
dec
in
jns
fwait
xor
xlat
outsb
aad
jae
lcall
dec
testb
decl
rcll
xor
jno
add
ret
das
mov
push
in
pop
and
inc
ljmp
dec
push
fsubr
loopne
inc
pusha
cmpsb
fldcw
ljmp
or
jmp
call
push
pushl
std
ljmp
stc
les
xchg
inc
loope
or
cld
vhsubpd
out
and
and
ljmp
lahf
sub
dec
or
enter
push
push
jbe
sbb
outsb
lret
aam
add
sti
dec
xor
mov
pop
mov
push
add
scas
jae
aam
ljmp
mov
xor
mov
sbb
mov
in
popl
cmp
bound
push
neg
pop
sbb
and
aad
jecxz
pushf
loop
cwtl
lcall
mov
xor
sub
sarb
fnstsw
mov
inc
jg
lcall
lahf
out
icebp
and
xchg
aas
cmp
pushf
aam
xchg
mov
lahf
loop
jecxz
xlat
repnz
mov
out
ret
push
xor
pop
xlat
stc
out
fs
jg
call
out
mov
xor
movsl
in
call
pop
xchg
lcall
add
jp
adc
add
pop
popf
jl
ljmp
sti
pop
jmp
mov
stc
aam
push
lock
mov
in
and
ljmp
mov
adc
cmpsl
and
out
roll
push
pop
mov
add
push
mov
jle
mov
dec
fadd
jge
and
test
adc
mov
call
pushf
pop
mov
mov
sub
pop
in
std
mov
cmp
xor
call
sub
loop
inc
sbb
push
cld
xor
push
inc
test
add
and
cmc
out
lahf
cmc
or
mov
out
fdivrl
sbb
mov
sbb
ss
pushl
jo
cli
xlat
jmp
lret
fnsave
scas
aam
mov
lcall
push
push
push
out
std
pop
cli
sbb
xor
sub
jo
in
decl
int3
xor
add
push
adc
push
xor
call
lahf
xchg
sbb
int3
inc
in
cmp
mov
mov
hlt
imul
or
dec
dec
sbbl
lahf
or
es
shll
lods
mov
jge
movsl
cs
orl
decl
jb
and
das
call
pop
add
jg
dec
mov
mov
adc
xchg
mov
mov
cmpsl
push
loop
mov
xor
and
push
mov
jae
push
sti
cmp
sbb
mov
out
clc
fidivrl
sub
jge
stos
mov
pop
inc
mov
popa
sahf
sub
mov
pop
jo
xchg
lret
sub
lcall
cltd
data16
jbe
push
lret
fistpll
dec
sub
sbb
add
inc
shl
pushl
cmc
or
dec
icebp
sti
jno
aaa
in
das
test
xchg
jle
sbb
mov
pop
push
inc
push
pop
fisttpll
dec
in
icebp
nop
inc
mov
adc
inc
jne,pt
cmc
testb
mov
jns
ljmp
push
cmp
mov
and
dec
imul
pop
movsb
insl
addr16
lea
pushl
cld
lcall
xor
ds
outsl
and
mov
cmp
pop
in
mov
data16
mov
pop
mov
or
dec
jmp
mov
or
inc
icebp
int3
test
pushl
xchg
lds
jb
or
and
pushf
or
cs
dec
mov
in
mov
jg
sahf
cld
push
adc
inc
xor
and
out
mov
stc
xchg
in
jno
decl
andb
bound
cmc
out
xlat
dec
mov
gs
loope
and
ja
pop
cmp
xor
sub
fisttps
pop
cmp
into
xchg
arpl
xchg
cmp
jg
add
push
cmp
mov
fs
das
mov
aam
cmpsl
mov
jmp
mov
add
rol
jb
cmp
dec
js
mov
cmp
std
jg
jmp
popf
enter
adc
mov
or
lds
jg
cli
dec
dec
fwait
jl
jp
ljmp
or
rorl
mov
mov
sub
mov
in
sbb
cli
adc
ret
std
mov
test
or
push
mov
cmpb
aad
mov
mov
jo
ljmp
cli
jmp
or
ret
dec
loopne
dec
popa
xchg
movsl
lret
and
les
cmp
xchg
aam
in
shl
sub
add
mov
outsl
call
cld
aam
out
shlb
cwtl
icebp
shl
cli
imul
outsb
or
stos
add
aaa
xchg
les
adc
rcl
por
sub
sub
jnp
subl
add
dec
insl
pop
pop
mov
mov
cmp
cmpsl
std
movsb
jmp
push
fists
lock
les
daa
lret
ldmxcsr
xor
scas
add
insl
dec
cwtl
out
mov
shll
mov
sub
mov
lahf
icebp
push
stos
xchg
or
pushl
add
pop
adc
ja
stos
ja
add
adc
outsb
mov
imul
das
push
push
out
mov
mov
dec
testb
push
test
mov
insb
push
add
inc
add
stos
in
inc
imul
mov
mov
or
sarb
scas
loopne
call
cmp
mov
mov
outsb
popf
rorl
cmp
fmull
adc
sti
push
mov
dec
mov
stos
xchg
mov
out
dec
fiaddl
inc
push
mul
push
mov
fcoms
test
xor
pop
cmc
repz
imul
lret
push
movb
xchg
stc
and
call
mov
daa
daa
mov
mov
sti
mull
fsub
loope
in
ds
movsb
lods
out
incl
dec
mov
adc
pop
dec
cmp
in
push
jge
adc
test
adc
inc
mov
push
cltd
clc
mov
scas
insl
bndldx
call
aas
rol
mov
or
pop
push
imul
mov
lds
lea
call
addr16
loop
jno
repnz
scas
pusha
lods
jbe
mov
pusha
stos
jno
mov
push
adc
scas
xor
or
push
lret
inc
imul
mov
sbb
ja
mov
fisubrs
mov
push
cmp
push
jb
popf
inc
xchg
loope
test
movsl
out
jno
rclb
mov
xchg
xor
std
mov
call
mov
sbb
popf
add
scas
push
call
dec
ret
pushl
mov
and
leave
cmc
fsubl
pop
pop
xlat
data16
in
pop
imul
pop
inc
inc
repnz
or
jne
test
jmp
mov
push
inc
enter
xchg
mov
loopne
jle
imul
lret
add
lcall
and
ja
fisttps
pop
lcall
sti
and
int3
sub
fdivrl
and
sub
push
mov
or
popa
popf
lcall
inc
lcall
or
addr16
ljmp
xchg
or
loope
pop
mov
mov
imul
aaa
into
inc
movsb
push
pop
jo
iret
mulb
lods
aas
mov
cld
inc
inc
insl
lret
clc
mov
cmp
pushl
and
fdivl
mov
xchg
stos
in
push
insb
icebp
jg
sbb
mov
mov
sub
or
test
scas
clc
shlb
push
push
je
push
out
sbb
mov
lcall
or
mov
push
repnz
fs
out
ret
lock
xor
jl
call
std
adc
inc
arpl
pop
pop
enter
iret
push
cmp
xor
scas
mov
mov
imul
sbb
mov
shlb
cli
push
les
cwtl
and
sub
fildl
push
jp
lret
ret
mov
pusha
dec
push
test
sub
cmp
call
std
jg
orl
xchg
inc
xorl
leave
adc
call
lods
negb
ficomps
into
mov
popa
jnp
ss
out
andb
test
cmpsb
aam
in
test
jbe
adc
and
inc
jmp
repz
xchg
iret
xchg
sub
aad
add
inc
cmpsl
mov
cli
sub
mov
out
fistpll
das
xor
jle
aas
adc
inc
lcall
lock
pusha
out
mov
push
pop
adc
mov
xor
imul
jmp
stos
xchg
in
cmp
sbbl
mov
jl
and
pop
int
jg
jne
lods
arpl
pop
push
mov
cmp
mov
frstor
icebp
push
pusha
cmp
iret
push
aad
lret
loop
call
es
mov
mov
lods
mov
sub
sbb
add
xor
int
fbstp
test
arpl
into
or
mov
dec
jmp
sub
call
mov
jb
int3
pop
outsl
notl
rcr
sbb
call
scas
aad
inc
xchg
jecxz
and
loopne
mov
jg
inc
add
adc
adc
push
test
add
inc
adc
xchg
aam
push
adc
in
lcall
and
inc
insb
test
xchg
dec
mov
dec
rcrb
adc
fistpl
fnstenv
jg
in
aam
aaa
push
fwait
push
dec
out
adc
in
loopne
xor
or
fs
out
sbb
and
fisttpll
mov
and
pop
adc
pop
mov
cmp
xor
mov
mov
jae
inc
sti
jbe
test
std
clc
fldpi
sbb
stos
pop
sbb
lcall
sub
shl
pop
pop
nop
lcall
testb
mov
inc
xchg
clc
in
add
fstps
dec
imul
sbb
call
popf
sbb
lods
xchg
fdivr
incl
out
jb
je
push
xchg
insb
inc
inc
jge
xor
iret
call
jg
jmp
clc
sahf
cmpsb
mov
mov
es
dec
divb
cmp
cld
xor
lds
mov
xchg
sbb
ficoms
mov
jmp
mov
std
in
dec
js
push
dec
xchg
scas
pushf
inc
push
faddl
add
lods
shlb
rcrb
outsl
shrl
in
pushl
xchg
insl
and
inc
mov
pop
imul
sbb
mov
pop
cmp
aaa
inc
std
cmpsb
std
and
pop
fistps
add
lods
outsb
into
movsl
mov
out
outsb
in
fldcw
jmp
dec
pop
in
repz
outsl
inc
sbb
lods
pop
mov
bnd
out
fdivr
lcall
leave
data16
imul
ret
push
pop
out
sub
dec
cmpl
cld
xor
inc
pop
clc
fcompl
push
aam
rcrb
jne
sub
push
cmpsb
mov
dec
mov
fidivrl
movsl
inc
stos
add
addr16
jns
aad
fmull
out
adc
pop
push
call
cmp
jge
or
adc
push
pusha
push
insb
fcomip
push
dec
and
call
xor
jmp
icebp
shll
aad
mov
ret
xorl
lds
mov
add
fisttps
push
dec
mov
jl
sub
pop
sbb
xchg
adc
xchg
mov
ljmp
fstpt
int3
sbb
add
push
fwait
xchg
jle
mov
fisttps
mov
jle
decl
cmp
repz
dec
sbb
adc
mov
fiadds
or
dec
jmp
mov
cmc
adc
add
pop
les
mov
mull
or
mov
fstps
into
out
out
sub
fnstenv
and
out
pushl
xchg
sub
xor
loopne
pop
pop
xchg
push
cmc
test
mov
popa
and
aam
loope
xor
clc
loope
gs
xchg
mov
dec
aad
lcall
lods
mov
and
lods
enter
pop
xor
cli
mov
lret
mov
dec
jo
pop
push
adc
dec
into
add
ret
push
cli
cmpsl
lahf
xor
pushl
push
sub
shlb
jmp
stos
cmp
cld
adc
xor
adc
lock
pushl
xchg
scas
jmp
mov
imul
int3
xor
push
push
mov
push
pop
cmpsl
mov
jae
and
cwtl
pushf
adc
jbe
decl
cmp
push
pop
inc
imull
icebp
std
mov
inc
jb
test
test
mov
call
mov
insl
jmp
sbb
jnp
dec
sbb
outsb
mov
dec
and
call
push
loope
loop
push
ds
fisubs
test
lret
mov
pushf
shll
decl
rorl
ret
rcl
test
scas
testl
add
stc
adcl
jle
push
es
outsb
add
add
rcr
sbb
mov
pop
xchg
adc
sar
add
push
and
scas
mov
sahf
mov
lahf
sbb
jg
or
aam
icebp
dec
and
test
icebp
xor
xchg
mov
xchg
or
inc
aaa
lock
inc
pop
mov
or
fldl
xor
sahf
sahf
scas
notl
dec
fs
jmp
inc
sub
mov
dec
aam
loope
test
jne
cs
ret
sub
mov
sbb
fiadds
hlt
scas
cli
xor
ljmp
push
mov
and
jbe
into
xchg
adc
cmpsl
xorb
scas
es
sti
lret
in
jne
leave
cmpsl
std
pusha
or
jmp
pop
sbb
lret
pop
mov
sahf
xor
inc
scas
ds
jl
ds
inc
ljmp
ljmp
int3
inc
js
sahf
dec
inc
push
out
mov
and
shll
mov
test
mov
lock
push
fs
xor
outsl
shlb
jb
inc
jmp
pop
pop
dec
and
inc
jecxz
inc
lea
or
pop
orl
pop
cmc
insl
iret
loop
movsb
mov
iret
mov
and
cld
movsb
into
shrb
call
cmp
fwait
aas
cmp
in
xchg
push
jl
imul
sub
cltd
jae
xchg
pop
mov
int3
sbb
cmp
xlat
sub
sbb
pop
sub
ds
inc
and
fsubl
inc
aam
ljmp
bound
sub
mov
je
push
mov
mov
or
data16
xlat
mov
pop
and
enter
cmc
xor
add
stos
cmp
adc
test
imul
subb
pop
pushf
sub
lcall
mov
sahf
sbb
xlat
sub
insb
addr16
iret
and
std
pop
icebp
jmp
jns
stos
adc
push
mov
push
enter
cmc
out
cli
out
mov
pop
rcrb
test
call
push
addr16
push
shl
xchg
fcomip
add
jp
dec
aad
outsl
sti
aaa
lahf
inc
jne
lret
adc
mov
movsb
mov
decl
enter
cli
data16
out
lods
xchg
test
add
inc
cmp
pop
cmpsl
movsl
sbb
mov
std
and
xor
dec
and
jecxz
sbb
pusha
das
jp
adc
mov
vmovmskpd
incl
fstp
lock
pop
cmp
xchg
dec
or
jns
or
ret
inc
or
call
mov
cmp
push
mov
not
push
adc
inc
fucomip
adc
jnp
mov
fcomip
fnsave
es
mov
xchg
pop
push
fs
pop
inc
ljmp
mov
test
jno
ret
push
inc
cmp
int3
jbe
cmpl
stos
imul
push
inc
imul
sti
mov
and
add
xor
mov
pushl
jbe
or
xorb
cmp
imul
cmc
mov
sarl
push
push
xchg
or
xchg
popa
push
call
fildl
mov
or
push
sub
cli
pop
into
inc
or
incl
repz
cmpl
sub
setno
adc
shlb
movsb
jnp
pop
imul
sub
pushf
and
pushl
or
jge
inc
mov
cmc
mov
icebp
int3
sbb
stos
sbb
pop
ljmp
test
sti
scas
jo
inc
insb
sarl
push
adc
out
adc
ret
dec
mov
loope
xchg
push
movl
repnz
adc
ljmp
push
mov
adc
hlt
sbb
mov
mov
sti
dec
dec
mov
jmp
idivl
add
sti
sub
jo
mov
pop
out
mov
dec
incl
jle
xor
daa
xchg
test
and
inc
lock
outsl
xchg
cmp
inc
stc
sbb
xchg
loop
sar
inc
int
adc
xor
loopne
bnd
cmpsb
xor
out
movsl
push
and
push
pop
adc
ljmp
loop
xchg
sar
xor
roll
or
imul
les
bound
icebp
test
sbb
jmp
sbb
mov
pusha
out
jns
mov
and
int
jp
push
sub
sub
mov
ss
push
xchg
mov
pop
mov
clc
mov
in
inc
dec
add
es
incl
cmp
stos
movswl
mov
jns
adc
ss
fsubrl
cmpsb
or
fs
test
std
and
js
outsb
adc
mov
iret
xor
enter
mov
fdivl
cltd
inc
orl
lcall
mov
aad
and
ds
mov
cmpsb
pop
sub
scas
stos
in
xchg
sbb
jo
loop
cli
adc
jmp
lods
mov
or
push
ret
sbb
mov
inc
ss
jmp
call
in
xchg
mov
movsl
icebp
nop
xorb
aas
adc
enter
roll
incl
pusha
testl
das
and
cmpsb
insb
jo
inc
std
icebp
inc
sub
or
inc
dec
pop
mov
jno
sar
int3
fstpl
jecxz
pushf
dec
sub
jg
sbb
mov
push
mov
jae
iret
mov
scas
les
cltd
jecxz
je
scas
xchg
mov
scas
cld
lods
fmul
fstpt
mov
push
ret
cmpsb
cmpb
dec
loope
incl
pop
jge
stos
dec
decb
mov
push
ja
addl
xchg
push
js
mov
xor
out
incl
add
aas
jmp
mov
iret
xor
ljmp
adc
push
insb
subb
in
sbb
aad
ficomps
pusha
jns
repnz
mov
decl
jge
cmpsl
enter
out
xchg
push
sub
pop
dec
mov
fwait
cwtl
inc
rcr
cmc
jle
lds
call
in
fcoml
pushf
nop
and
das
daa
int3
or
xchg
mov
jg
idivb
movsb
adc
int3
xor
aas
ret
ds
cli
jmp
fcmovnbe
repz
rcrb
xor
leave
and
and
xor
sbb
mov
rcl
movsb
fwait
cmp
rcl
lahf
ljmp
cld
sbb
and
testl
push
or
mov
xor
filds
enter
mov
in
fdivrp
push
jle
fiaddl
sahf
mov
mov
ljmp
adc
lahf
inc
xchg
les
loopne
gs
in
lret
stos
stc
mov
mov
scas
push
shlb
xchg
popa
mov
pop
mov
push
aas
pusha
or
call
inc
sbb
adc
les
les
and
js
mov
call
jmp
pop
pop
mov
cmp
xor
xchg
mov
mov
push
bound
out
lock
sbb
pop
jb
aaa
push
das
addr16
daa
sub
cs
ss
pop
push
jg
sub
sub
out
fwait
mov
mov
frndint
adc
cmp
jmp
sub
les
xor
rcll
or
xor
adc
mov
inc
lahf
push
imul
mov
aad
or
outsb
call
pop
fmuls
int3
sub
daa
add
sub
mov
out
clc
shrl
push
cmp
pop
inc
scas
xchg
dec
pop
inc
adc
jle
add
shll
cltd
dec
pushf
xchg
pop
inc
insb
push
mov
lock
mov
jb
xchg
enter
mov
sbb
fiaddl
mov
and
or
pop
popf
fsqrt
jp
mov
lock
dec
orb
and
inc
add
pop
pop
adc
incl
imul
and
add
punpcklwd
cmp
lods
decl
cmp
xchg
push
addr16
cmpsb
sbb
mov
gs
testb
pop
push
mov
outsb
pushf
pop
in
sahf
lock
lcall
sub
dec
mov
cmpsl
mov
adcb
mov
iret
pop
dec
incl
inc
or
roll
push
ret
scas
dec
mov
out
out
test
jg
xchg
out
mov
or
add
scas
test
data16
mov
scas
pop
imul
jmp
mov
fdivrs
stos
push
fst
movsl
inc
cltd
xchg
mov
incl
dec
testl
add
lahf
clc
mov
push
leave
aad
lret
pop
repnz
lret
subb
popa
and
sbb
fmull
shrb
or
call
ljmp
push
dec
push
cs
inc
pop
aas
adc
inc
jo
test
mov
ljmp
cmc
ret
scas
ss
jecxz
fdivrl
inc
clc
popa
sub
fsubs
mov
call
enter
fs
loop
cmp
in
xchg
or
mov
shll
push
es
mov
cs
fstpl
lods
outsb
xor
lret
subl
sbb
jmp
ja
cltd
cmp
jp
icebp
mov
pop
add
repnz
jbe,pn
push
rcrb
ljmp
pop
es
mov
movsl
push
cmp
sbb
pop
cmc
pushf
xlat
or
lahf
sbb
adcb
scas
xchg
fisubrl
gs
fildll
push
jecxz
stos
addl
mov
movsl
jecxz
ljmp
xchg
mov
jb
dec
dec
int
push
jmp
xchg
lock
lcall
out
cli
or
lret
pop
pushf
adcl
and
je
sub
imul
scas
iret
rcrl
in
jo
xor
aam
stc
inc
lret
or
jge
movsb
or
xchg
push
icebp
inc
scas
imulb
in
mov
fisubs
insl
aaa
add
or
loope
stos
jecxz
ja
inc
cld
xchg
cld
sbb
jmp
jg
icebp
fistl
dec
or
mov
mov
push
andb
pushl
mov
inc
adc
push
gs
inc
inc
bnd
pop
xchg
add
pushl
inc
fcoml
ret
dec
push
clc
jp
jg
incl
add
fistl
loope
lods
cmp
sub
jg
jmp
jmp
mov
loope
lahf
loopne
sarl
mov
sbb
jle
loop
shll
inc
in
inc
cmp
inc
xor
xchg
test
jmp
inc
push
jp
cmpsb
sub
pop
sbb
sub
cmpsl
out
pop
mov
ljmp
movsb
movsl
fdivrl
mov
rcrb
mov
mov
xchg
xchg
mov
inc
and
sbb
xchg
cmc
out
xchg
stos
es
hlt
pop
lcall
loopne
daa
negl
push
ja
cld
mov
das
out
loop
cmp
cmp
test
shrl
lock
jmp
pusha
jl
rcll
adc
jl
iret
jnp
mov
sti
jmp
arpl
inc
js
test
adc
subb
add
xchg
rcl
call
fbstp
or
lea
jb
push
std
je
inc
loop
rol
in
xchg
dec
fwait
fistps
sbb
lds
sbb
call
call
cmp
rdpmc
pop
push
push
pop
mov
movsl
cmp
in
sar
ljmp
jp
and
jno
or
lea
cmp
test
push
or
inc
fimull
adc
mov
xchg
pop
xor
arpl
sbb
cmp
ljmp
out
insl
in
insl
fisubrl
lahf
lds
inc
movb
xchg
gs
xchg
mov
popf
repz
inc
jge
push
movsb
mov
jle
dec
test
mov
cwtl
lcall
adc
mov
shlb
jecxz
ret
jnp
mov
and
mov
sti
inc
cmc
cltd
xchg
adc
cmp
add
pop
sbb
lcall
test
loope
fisubrl
jno
dec
ljmp
fbstp
call
notb
dec
jecxz
sbb
mov
add
popf
rcrb
cli
out
or
out
rorb
sbb
pusha
inc
mov
lea
adc
stos
fdivrs
lock
push
xor
outsb
sub
ret
pop
cmp
xor
clc
call
dec
in
js
adc
fstps
push
dec
add
or
test
sar
ljmp
lock
dec
pop
cltd
cmp
or
mov
pusha
pop
incl
xor
mov
adc
in
pop
cmp
into
mov
in
ret
jae
std
xchg
loop
call
cli
dec
fsubs
out
and
into
and
arpl
sarb
clc
push
negl
sbb
ljmp
jns
lods
pop
sarl
inc
shll
mov
cmp
jbe
ljmp
aam
mov
fsubp
mov
les
jnp
pop
sub
jge
dec
roll
call
movsl
push
jecxz
xchg
and
pop
loope
dec
mov
ljmp
std
jnp
inc
sub
inc
shll
xchg
aas
cld
jg
lods
stc
out
pop
xor
pushl
pop
push
push
pop
stc
jne
cmp
mov
aas
fdivs
out
idivb
sti
fsubrl
or
ljmp
sub
stos
enter
fs
add
imul
mov
jg
pop
mov
ljmp
mov
sub
xchg
pop
call
loop
test
out
and
jle
and
popf
xchg
jne
fcomip
call
mov
insb
jp
in
js
adc
or
xor
daa
daa
xor
jle
mov
pop
cmc
push
jno
out
mov
shl
insb
cmp
push
pmulhw
cmp
add
pushl
cmp
mov
xor
inc
fstps
scas
loop
lcall
enter
shll
aaa
stos
imul
test
jl,pn
cwtl
cmp
cli
cli
push
cmp
mov
sbb
fstl
mov
and
pop
lods
sar
ljmp
inc
and
mov
jnp
cmpsb
repnz
cmp
adc
call
add
stos
or
add
sarb
push
cli
cmpsb
inc
cltd
lret
mov
dec
mov
adc
test
enter
sub
lock
add
imul
sub
subl
daa
imul
ljmp
xor
jecxz
push
dec
and
mov
jge
mov
jle
fimull
mov
and
dec
jmp
das
sbb
jmp
push
fdivr
jg
das
repz
icebp
mov
aas
insl
int3
xchg
fdivl
dec
subl
mov
mov
outsl
adc
dec
and
jmp
sub
pop
xchg
cmc
aas
mov
push
scas
data16
sub
aas
ss
lods
xchg
notb
negb
xor
imul
pop
xor
stos
cmpsl
popa
push
mov
andb
mov
sbbb
sub
jg
jle
sub
in
inc
inc
mov
mov
enter
popf
inc
scas
imul
and
mov
orb
ss
sbb
jp
hlt
fcompp
mov
loopne
pop
sahf
rcrb
mov
notl
sarb
clc
lock
inc
or
loopne
test
xchg
sub
or
xor
std
in
cli
mov
push
loopne
lea
push
rcll
fs
jmp
or
mov
xchg
arpl
hlt
les
dec
xor
addr16
cmpsl
mov
lock
stc
sub
sbb
xchg
xor
mov
mov
cmp
push
add
call
sbb
aaa
hlt
ficompl
test
enter
aad
dec
mov
lds
push
pushl
mov
pop
cmp
jno
xor
pusha
jge
ss
and
jg
mov
aad
add
rolb
out
loop
push
ficompl
inc
jg
shll
ret
pushl
or
sbbl
js
add
xchg
adc
outsl
xor
clc
jle
stc
lock
fldenv
mov
mov
inc
cmp
cmp
cltd
fisubl
call
es
ja
clc
xor
adc
xor
xchg
jo
cmpsb
mov
cmp
sub
incl
push
cmpsl
shlb
push
mov
jnp
sti
negb
or
frstor
inc
and
mov
mov
cmp
jg
dec
popf
sbb
test
push
shr
jb
out
das
iret
cwtl
notl
mov
in
or
push
cld
xchg
pop
mul
cmpsl
loopne
movb
test
rcrb
cmp
scas
clc
outsl
mov
lahf
dec
cmpl
push
hlt
loope
dec
insl
cwtl
mov
call
std
pop
insb
movsl
push
and
lret
inc
jge
cmp
adc
ror
xchg
sahf
fdivrl
dec
push
fsubl
aas
dec
out
xor
sahf
jmp
dec
jne
mov
or
call
mov
and
sbb
push
cmp
popf
mov
xorb
jl
test
xchg
jg
mov
xchg
or
or
jb
pop
lods
lea
pop
movsb
pusha
mov
jnp
jmp
sbb
cwtl
ret
popa
mov
stos
cli
push
jge
or
xchg
cltd
aad
jmp
cli
pop
or
xor
fisttps
mov
or
jns
cwtl
push
jecxz
ljmp
dec
mov
add
add
fadd
xchg
sub
in
adc
push
fsub
insl
pushl
push
cmp
scas
push
outsl
mov
addb
cmp
fistl
ret
mov
jmp
decl
push
test
cld
mov
xor
jle
outsl
lods
add
shrl
xchg
pop
or
push
dec
mov
std
xor
incl
ss
daa
inc
push
or
int3
pop
test
lcall
es
data16
xor
mov
lcall
push
loope
push
rcrb
push
lds
mov
mov
jne
daa
cmpsl
out
inc
stc
mov
cli
out
mov
decl
inc
xor
mov
test
sbb
mov
imul
adc
mov
xor
pop
or
or
loopne
mov
jecxz
out
add
xchg
das
jnp
nop
psubw
jnp
testl
mov
add
pusha
outsb
mov
pop
repnz
icebp
movsl
cmpsl
and
mov
fbld
pop
or
movsb
jg
lods
in
aas
call
call
mov
ja
insl
pop
push
mov
push
test
lock
lahf
cmp
sbb
pushf
xchg
fldcw
mov
and
sbb
sub
outsl
pushf
or
jg
repz
sub
dec
jle
lds
jb
and
and
sar
adc
adc
shll
and
pop
stos
adc
jno
hlt
clc
sbb
pushl
cwtl
fistpl
int3
pop
sbb
movsl
int
adc
jnp
jl
mov
push
test
pop
cmp
les
arpl
adc
inc
or
xorl
xor
lahf
mov
decl
mov
and
mov
inc
inc
jbe
mov
pcmpeqb
mov
mov
call
lcall
pop
cmpsl
scas
xchg
mov
mov
cld
push
dec
mov
adc
incl
dec
pushf
mov
add
or
lahf
arpl
cltd
rcrb
xchg
jne
adc
xor
loope
movsl
icebp
fmulp
sar
das
mov
push
cmp
out
daa
popa
cmp
mov
lret
mov
fdivrs
adc
and
sbb
pushl
les
sub
in
shl
or
lret
dec
pop
mov
jle
sub
cmp
leave
jbe
pop
insb
mov
cmp
cmpb
pop
stos
mov
cli
dec
lret
sar
rclb
bts
movl
sub
mov
mov
and
mov
std
je
jb
ljmp
dec
dec
mov
popf
push
pusha
dec
cmp
into
xor
aas
and
ljmp
jecxz
mov
mov
rcr
add
call
cmp
arpl
push
mov
lods
xor
add
inc
mov
and
pop
fisubl
lcall
imull
add
les
or
addl
mov
pop
add
pushl
rcl
in
jge
in
mov
xchg
pop
xor
xchg
fs
decl
dec
stc
mov
mov
mov
or
jmp
hlt
movsl
jbe
jmp
sar
popf
pop
mov
mov
or
or
mov
or
out
imul
divl
pushf
cmovns
ja
inc
lea
std
enter
inc
sub
jmp
out
sub
cmp
inc
mov
mov
pop
movsb
movl
jecxz
ljmp
out
sbb
in
leave
imul
or
pushl
leave
dec
xchg
push
mov
insb
out
lea
pop
ss
lahf
and
fsubl
decl
ljmp
dec
push
jecxz
pushl
aad
mov
sub
in
les
adc
inc
xchg
sbb
mov
mov
pop
xchg
add
popf
sbb
sub
mov
xchg
clc
decl
sub
push
out
ficomps
mov
and
and
xor
cld
idiv
cli
ljmp
pusha
icebp
pop
push
rorl
sub
aad
test
jl
cwtl
in
daa
dec
aam
push
and
inc
jno
clc
and
cltd
fsubl
and
rcll
jl
loop
pop
arpl
fistps
inc
sbb
mov
ljmp
add
loopne
jge
xor
mov
mov
fcmovnbe
out
ret
mov
arpl
and
and
lods
mov
sbb
xchg
cli
lret
int3
ret
cmp
xchg
jnp
fwait
inc
push
mov
shll
out
aam
inc
adc
not
sahf
sub
pushl
adc
ljmp
jg
inc
xchg
cmp
in
and
ljmp
daa
pop
enter
sbb
xor
cmp
mov
insl
or
lcall
dec
lds
rol
fcoml
mov
movsb
in
iret
pop
mov
or
faddp
notl
or
nop
pop
clc
mov
mov
pop
fcomip
call
dec
movsl
inc
arpl
loop
adc
dec
jb
sbb
int
icebp
std
test
and
jl
insl
xchg
idiv
pushl
fstl
enter
cmpsb
mov
xor
mov
lcall
push
sbb
movsb
jg
rorl
dec
and
sar
inc
cmp
jo
push
arpl
mov
mov
pop
enter
push
sbb
ret
xchg
sbb
lret
or
xor
push
jb
or
hlt
lcall
shll
mov
inc
pop
mov
cwtl
scas
sub
pop
lcall
sti
lret
adc
fwait
or
imul
xchg
sbb
cmp
mov
inc
adc
jge
into
lahf
in
popf
adc
jbe
push
push
pusha
pop
add
inc
jbe
inc
insl
test
pop
loope
sbb
dec
mov
push
add
mov
jb
mov
jp
lds
repnz
je
loop
jmp
xchg
cmp
push
sti
xchg
inc
mov
loope
ja
dec
out
ss
enter
adc
in
xchg
aad
mov
test
outsl
decl
inc
andl
add
lods
mov
sahf
push
pop
jecxz
mov
and
loop
add
cmp
cmp
jecxz
arpl
adc
and
pop
dec
adc
dec
mov
and
out
fdivp
or
xor
loopne
mov
in
push
into
cmpsl
clc
mov
out
rdmsr
mov
fcomp
into
jns
loopne
in
adc
mov
lea
push
inc
gs
mov
mov
mov
sub
fdivrl
pop
stos
testb
xor
mov
pop
testb
mov
push
pusha
pop
jne
test
clc
jge
pop
push
pop
pop
mov
in
adc
push
pop
push
std
xor
adc
imul
sub
mov
std
dec
fadds
andl
pop
mov
ljmp
jb
lcall
pop
jns
sbb
sbb
mov
insb
jns
scas
mov
cmpsb
decl
mov
mov
xchg
lahf
sbb
adc
loope
jmp
cld
or
mov
mov
or
inc
push
cwtl
ds
cmpsl
cli
cmp
xchg
jbe
pushl
cli
mov
xchg
pop
fisttps
mov
cmpsb
jle
aaa
cld
call
int
adcl
cld
dec
out
ficoms
push
jae
pop
pusha
cmpsl
sbb
loop
inc
adc
call
lock
jne
shrl
call
lcall
ss
arpl
nop
pop
or
jecxz
pop
fists
mov
scas
mov
mov
in
push
aam
in
rclb
add
incl
jecxz
push
push
push
adc
lods
or
fbld
lret
cwtl
xor
cmp
je
mov
sub
ljmp
and
pop
scas
push
push
loop
enter
push
leave
cmp
into
pop
pop
or
pop
cmpsb
inc
jecxz
fcomps
lock
pushf
fidivs
add
lock
sub
add
or
cmp
xchg
push
inc
inc
loope
mov
lret
mov
call
call
in
and
loopne
pop
std
xor
outsl
add
inc
aam
sub
mov
push
mov
dec
sub
pop
or
dec
into
mov
leave
das
ljmp
sar
xor
push
mov
mov
cmp
mov
int
cmp
mov
mov
cmp
arpl
test
push
test
add
scas
adc
inc
lods
mov
mov
mov
xchg
or
andb
adc
mov
pushl
push
clc
cmp
adc
outsl
and
fwait
xchg
shl
rcll
inc
pop
test
push
and
jge
xor
sub
adc
inc
pop
ss
or
dec
sbb
mov
shr
adc
fdivrl
cmp
jmp
add
daa
into
cli
add
bound
sbb
xchg
rolb
jge
lock
addl
out
dec
and
insl
imul
leave
xchg
jmp
push
mov
cmp
adc
xchg
ljmp
imull
fwait
jmp
test
into
fwait
iret
fisubl
jbe
mov
jno
jle
rclb
inc
or
jg
mov
inc
xchg
cmp
or
sub
push
test
decl
cmp
xchg
stos
sti
sbb
popa
out
jno
mov
testl
xor
ljmp
decl
ret
cmp
imul
xchg
mov
fnstsw
lcall
pusha
pop
rcr
adc
jns
xor
std
sbb
push
aaa
ljmp
jg
push
or
incl
cmp
jno
lret
das
arpl
cmp
sub
jb
xlat
pop
and
sahf
mov
cmp
pop
sti
fisttpl
mov
inc
push
push
test
dec
push
push
adc
in
out
idiv
jl
cwtl
mov
mov
push
and
sub
add
sub
jmp
test
sbb
xor
fs
lcall
cmp
push
in
shlb
pop
jns
add
shll
lahf
das
adc
add
jmp
pop
in
jbe
xchg
xchg
idivb
sub
mov
cmp
out
lcall
and
dec
or
xchg
repnz
lea
fbld
adc
xchg
and
jae
mov
dec
cld
addr16
pop
aaa
std
jmp
push
lahf
adcl
xor
push
lcall
adc
loopne
stos
or
incl
sbb
mov
lcall
mov
lahf
xchg
sub
jle
mov
xor
or
or
mov
sub
add
insb
stos
mov
jg
arpl
xor
imul
js
cwtl
cmp
push
inc
test
jnp
std
jmp
sbb
pop
mov
es
sub
mov
aam
push
test
icebp
sti
ljmp
dec
and
out
xor
fdivs
sub
or
cmp
outsl
add
nop
mov
inc
lret
jle
mov
dec
pop
call
decl
orb
test
pop
test
jbe
rorb
and
lret
cmc
cmp
call
pushl
push
lods
fdivrl
popl
push
adc
fcomip
lcall
aas
mov
cmpsb
je
jle
cmc
push
push
cmp
mov
lock
mov
ret
jg
xchg
push
ja
fisttps
ror
or
cld
dec
call
cmp
sbb
lcall
andb
mov
stos
mov
push
jl
lea
sub
and
push
cmc
cmp
mov
loopne
mov
movsl
cwtl
lret
pop
rcr
adc
das
mov
and
fbld
or
mov
dec
lea
decl
and
sub
push
push
dec
or
inc
fsubl
pop
orl
jl
call
or
test
test
loop
dec
adc
call
pop
jg
icebp
lcall
mov
fdivs
mov
in
popf
jmp
nop
sbb
mov
inc
lds
pop
cmp
push
pusha
and
lods
in
es
decl
ss
mov
ret
sti
mov
jle
adc
adc
movsb
dec
xor
ljmp
fistpl
mov
aaa
addr16
subb
out
std
push
lcall
push
lea
pop
outsl
lret
mov
add
paddw
dec
sti
jb
sub
sti
mov
mov
mov
sub
adc
add
call
movsb
nop
sarb
pop
jne
cmp
aad
jl
cli
mov
std
fistl
mov
in
inc
xchg
jecxz
hlt
test
movsl
outsb
xorl
fcoms
push
call
inc
int
ds
cmpsl
shll
xchg
scas
pop
xchg
cmp
lock
adc
push
inc
out
addb
ret
ljmp
xchg
dec
jno
inc
das
adc
xchg
outsl
rolb
push
std
incl
in
dec
lods
add
adc
push
and
test
cld
pushf
mov
mov
xor
lcall
inc
push
jnp
xchg
stos
imul
mov
jmp
mov
lahf
jg
jmp
jmp
sbb
xor
sbb
sub
cmc
and
movsb
xchg
lret
in
enter
sahf
xor
sahf
test
cmc
lods
aam
int
push
test
inc
push
loop
xor
xlat
lcall
incl
bound
pop
enter
push
int3
and
or
test
incl
pop
lcall
scas
stos
je
fimull
dec
sub
lock
movzwl
ljmp
xchg
lods
sbb
pop
mov
push
lret
push
xchg
call
int
or
movsb
dec
sub
mov
inc
test
incb
push
pop
orl
gs
adc
xchg
hlt
in
push
frstor
add
addb
cmp
repnz
es
jbe
bound
pop
and
dec
or
cltd
arpl
xor
sub
incl
cli
mov
sub
sub
mov
and
mov
cmpb
sub
daa
ret
rclb
cmp
xorb
adc
xchg
xor
sbb
sbb
cmp
cltd
and
xchg
mov
decl
fidivs
out
in
lret
arpl
dec
fs
push
and
int3
dec
into
xchg
dec
inc
ds
pop
popf
std
jmp
imul
mov
xchg
mov
sbb
sbb
ja
lea
lahf
or
jg
pushl
push
loopne
fsts
push
cwtl
sub
or
sub
xor
fldl
mov
shll
xor
and
stos
inc
rorl
push
insb
outsb
aad
out
mov
ljmp
rclb
pusha
pushf
jae
add
mov
daa
outsl
pop
clc
incl
clc
xorl
cmc
xor
mov
popa
or
ds
gs
ljmp
mov
jp
mov
mov
push
push
mov
insb
dec
mov
decl
loopne
movsb
aas
pushf
sbb
jle
movsb
data16
add
decl
mov
jbe
xlat
mov
and
mov
jo
and
cmpsb
je
pop
jo
dec
xchg
jmp
stos
pop
cmp
popa
mov
loop
sub
mov
pop
jne
mov
testl
dec
in
dec
stos
imul
mov
iret
xlat
loopne
lret
pop
mov
fcmovb
jg
sbb
push
rolb
jnp
pop
sub
or
pop
xor
std
ljmp
mov
push
ljmp
jbe
cmp
shll
mov
inc
in
in
ss
cwtl
ljmp
cld
sub
xchg
xlat
pop
sbb
and
xor
inc
stc
cwtl
mov
les
sbb
cmc
mov
lock
decl
mov
fwait
imul
and
nop
out
ja
scas
xchg
test
mov
out
mov
mov
and
pushl
cmp
inc
out
jns
cmpsl
into
cli
loop
adcl
stos
or
pusha
lds
test
decl
add
jecxz
or
sbb
mov
popa
add
mov
sub
out
mov
mov
dec
daa
out
adc
cmp
and
xor
pushf
jg
aas
adc
push
xchg
and
test
jge
cmp
or
aad
cltd
ret
adcb
ret
push
lock
mov
mov
ss
jg
xor
jae
in
mov
mov
pop
cli
cmpsb
sbb
aas
and
ret
adc
out
cli
das
push
dec
pop
icebp
sbb
idivl
adc
fcomp
out
push
lahf
push
add
mov
push
add
jmp
jnp
scas
pop
lea
dec
enter
call
imul
cmc
jnp
xchg
pop
mov
shlb
hlt
std
push
shr
mov
call
orb
mov
test
fmull
jecxz
jb
in
out
lcall
in
inc
pusha
xchg
jbe
scas
mov
inc
movsb
mov
stc
dec
in
mov
add
sar
jmp
inc
mov
into
adc
jge
jge
loope
or
movsl
and
out
or
imul
clc
hlt
enter
rol
pop
add
ret
test
push
inc
sbb
cmp
loopne
jmp
sub
andl
xchg
lock
push
xchg
cs
in
sub
jmp
inc
in
cmp
std
mov
ljmp
jns
adcl
xor
dec
pushf
enter
mov
ss
incl
mov
gs
int
add
cld
cltd
xchg
adc
test
sar
xchg
lahf
mov
clc
jmp
mov
xchg
and
inc
dec
push
aad
outsl
fistpll
jae
incl
dec
adc
cwtd
ret
rclb
sbb
mov
add
mov
call
mov
dec
arpl
scas
test
dec
pop
xchg
loopne
adc
sub
es
xor
shlb
loop
mov
jle
subb
mov
or
xchg
push
xchg
mov
dec
jp
add
daa
pop
inc
dec
cmp
pushl
sbb
xor
loop
pop
insb
sub
sar
icebp
cmpxchg
lret
xor
inc
mov
ljmp
inc
lock
push
jae
pop
icebp
aaa
and
imul
pop
lcall
or
jnp
jb
jle
into
mov
test
clc
rorl
addl
mov
sub
xchg
pop
xchg
jmp
pop
pop
inc
repz
mov
cld
push
clc
insb
shll
xchg
into
je
xchg
popf
das
jp
mov
lods
fnstenv
fcomip
push
push
dec
imul
fs
sub
pop
test
dec
add
incl
bound
imul
rcl
jg
out
aaa
bound
lcall
mov
in
xlat
movsl
sahf
movsb
in
int3
jmp
sub
and
jo
xchg
subl
jb
jl
sarl
cwtl
mov
js
inc
jmpw
cmp
xchg
nop
add
dec
cmp
loope
dec
mov
outsl
push
ja
xor
sbb
divb
arpl
sbb
jg
xchg
pushl
loopne
mov
jecxz
cli
sbb
loop
add
sub
insb
ss
out
pushf
push
xchg
aad
xchg
in
pop
pusha
and
adc
mov
cltd
ss
push
xchg
cs
ret
jle
into
mov
mov
push
clc
lcall
cltd
mov
insb
mov
xchg
fs
decl
out
dec
cwtl
out
fidivrs
push
mov
dec
adc
mov
cmp
jns
lahf
loopne
jp
xchg
mov
repz
addr16
cmp
cmc
loopne
push
xchg
jne
incl
mov
xchg
std
popa
call
mov
or
push
pusha
and
push
ret
xor
loop,pt
lea
decl
dec
repnz
outsb
flds
mov
mov
sar
and
mov
cmp
fisubs
dec
clc
incl
cld
xchg
movsb
addl
jno
outsl
aas
push
clc
decl
sarb
ret
loope
ljmp
in
repnz
xor
sti
out
out
std
ret
gs
mov
ret
sbbl
cmp
cli
lods
out
movsl
mov
roll
iret
cmpsl
lahf
mov
xchg
mov
xor
inc
inc
or
xor
subl
orb
and
push
decb
aas
pop
cmp
dec
mov
lret
insl
jl
push
out
xchg
outsb
je
cmpsl
iret
jae
inc
cwtl
cmp
sbb
hlt
xor
loope
pop
jo
ret
jmp
jo
leave
setns
loope
jge
std
xchg
insl
lahf
inc
jns
sub
int
jge
and
test
mov
cmp
mov
outsl
ss
sarl
fiaddl
fwait
mov
arpl
mov
cmpsb
sub
jnp
mov
inc
gs
jmp
cmp
sbb
sub
adc
rcl
cmp
lcall
imul
arpl
addb
jnp
mov
lret
xlat
das
call
int3
lahf
xchg
sub
pushl
xchg
jg
cmp
adc
lret
fld
sub
or
mov
mov
dec
cmp
out
clc
call
lds
pop
sub
xor
mov
jmp
mov
cli
push
sub
rol
push
mov
dec
std
cmpsl
push
push
sar
or
lret
dec
sub
popa
jmp
mov
rol
mov
pusha
pop
push
orl
add
or
ja
dec
pop
arpl
sbb
pushl
shll
or
arpl
sub
add
sahf
pop
sub
sbb
call
cmp
push
aas
xor
imul
movsl
inc
adc
push
and
shrl
sub
stos
lods
fs
adc
or
addl
lea
xor
pushl
pop
xchg
fldt
maskmovq
testl
mov
out
fcomip
pop
or
popf
test
gs
adc
test
aaa
std
call
xor
dec
or
test
xchg
push
mov
push
dec
test
jmp
and
jle
fisttps
in
add
insb
ret
or
popf
inc
mov
xchg
pop
jle
inc
shll
stos
cli
ljmp
ja
imul
sub
jmp
shll
rclb
jo
dec
arpl
add
out
shrb
xchg
jmp
loope
sub
outsb
divl
in
adc
frstor
mov
je
repz
cmp
and
push
mov
mov
sti
push
pop
or
push
bswap
rcl
add
test
incl
jae
lcall
nop
cmp
loopne
mov
fdivrp
ljmp
push
or
stc
test
sti
adc
cmp
add
in
add
jmp
les
pop
ret
pop
nop
dec
jnp
push
mov
ds
imul
add
pop
mov
cmp
fs
rcrl
pop
push
int
sub
movsb
push
cmpb
aaa
lock
push
std
mov
pushl
inc
icebp
cmpl
add
pop
ret
les
mov
lret
jmp
dec
in
popf
pushl
bound
scas
mov
iret
sub
push
dec
lret
pop
pusha
mov
std
jmp
sti
mov
or
loope
arpl
pop
mov
neg
pop
das
mov
sbbb
loope
fdivr
dec
aam
enter
inc
rcrl
lock
push
push
pushf
lds
sbb
in
sbb
mov
movsl
call
mov
cli
adc
jmp
push
mov
idivl
lods
in
test
nop
and
inc
sub
pop
adc
sub
inc
std
ljmp
cli
cwtl
xor
pop
cltd
jle
aaa
mov
lock
pop
cmp
mov
fcoml
pushl
add
shl
sbb
adc
fisttpl
jle
inc
push
dec
jae
xchg
dec
dec
clc
pushl
loopne
lea
cmp
jle
push
adc
out
mov
test
pop
inc
cld
and
cmp
mov
inc
ret
xor
or
lret
les
jecxz
pushl
cmp
xchg
cmpsb
inc
lea
xchg
lods
lcall
mov
ds
mov
lahf
data16
ljmp
rcrb
xchg
into
xor
sahf
incb
xchg
pop
dec
dec
and
mov
ffree
jnp
mov
es
mov
repz
pushf
jle
xor
sbb
call
mov
cmpsb
mov
pop
popa
or
jp
inc
pop
sahf
or
jp
leave
aas
dec
sbb
lcall
insl
movsb
push
push
jo
stos
lock
das
lret
out
cmp
xchg
mov
xchg
xchg
decl
rcll
pushf
mov
push
jle
out
js
ss
jb
push
mov
jbe
outsl
call
mov
imulb
rclb
js
pop
sub
data16
mov
sub
ficoml
cmp
and
mov
incl
sub
mov
test
mov
mov
ljmp
movsb
gs
popl
cltd
xor
mov
xor
jo
sbb
stc
loop
sbb
push
jmp
pushf
mov
cmp
incl
repnz
imul
and
pop
push
mov
lods
dec
pop
das
data16
xor
cwtl
and
push
adcl
pop
jle
repz
jno
push
cli
jae
clc
lcall
dec
fadds
dec
fsubrl
mov
push
insb
notb
fwait
and
or
pop
ljmp
cmp
pop
call
repnz
bound
cmp
das
mov
jg
movsb
test
sub
add
adc
iret
push
lcall
iret
adc
or
out
cli
jns
pop
push
xor
lock
lock
pop
jo
int3
jecxz
pop
std
incl
repnz
pop
jecxz
cltd
jmp
sbbl
decl
enter
push
mov
mov
idivb
insb
jnp
mov
sub
ja
adc
adc
add
test
mov
mov
inc
dec
ss
mov
mov
out
jae
lcall
lods
mov
jb
addr16
mov
js
xchg
adc
sub
rcr
outsl
inc
icebp
or
jmp
scas
repnz
lock
dec
mov
add
and
stos
out
clc
xchg
shr
rorb
cltd
or
out
pop
inc
pop
or
lret
jmp
test
inc
xchg
sbb
xor
incl
mov
dec
gs
ljmp
mov
repz
mov
xor
pop
push
mov
sub
inc
mov
movsb
fnsave
push
or
ljmp
subl
gs
lcall
call
sbb
add
sbb
leave
data16
int3
fsubl
xchg
mov
call
mov
int
dec
in
push
jno
push
sbb
mov
ret
mov
inc
lock
ljmp
mov
sbb
test
sub
int3
push
or
ljmp
dec
lret
fildl
inc
dec
xchg
add
cmp
daa
in
sub
loope
cmp
push
mov
clc
xor
cmp
pop
je
mov
inc
idivb
scas
pop
pop
out
hlt
int3
mov
jl
lcall
push
mov
cs
daa
mov
fs
out
std
jnp
cltd
sbb
out
push
movsl
fldenv
les
lret
dec
mov
cs
in
xor
pop
repz
lcall
ss
std
pop
adcl
add
push
out
testb
xchg
das
jg
jmp
and
fpatan
xor
arpl
shrb
pushl
cwtl
cmpsl
dec
push
sti
movsl
mov
fld
shrl
cmc
hlt
dec
rol
mov
sub
cli
push
pop
lret
fidivrs
fcomi
scas
cmp
ss
lcall
movsb
pop
jo
cs
daa
ds
jbe
xor
mov
fbld
pop
mov
and
dec
insl
fnsave
ret
adc
mov
or
cmp
xchg
dec
std
in
xor
or
dec
lcall
mov
daa
mov
movsl
mov
mov
or
out
call
push
pop
ret
cmp
mov
push
adc
dec
push
lea
jecxz
jmp
lods
jl
mov
daa
fldt
mov
cmp
outsl
sahf
sbb
and
or
incl
mov
in
dec
dec
mov
or
ret
std
out
lods
adc
jbe
push
das
cli
ljmp
mov
push
stos
adc
and
fs
fnstenv
xchg
or
inc
rorb
push
idivb
cmpsb
mov
adc
jmp
inc
inc
gs
add
pop
rcl
mov
mov
dec
lea
movsb
movsb
stc
sub
inc
mov
lcall
lock
dec
xor
jl
jnp
xor
mov
dec
sub
lds
aad
or
call
dec
sbb
enter
fld
das
in
pusha
mov
out
sbb
int
mov
add
pop
decl
push
jno
int3
leave
ljmp
test
daa
stos
ret
sar
inc
test
pop
xor
in
push
mov
arpl
mov
pusha
dec
rorb
test
ljmp
rol
push
addr16
inc
or
mov
ja
jnp
pop
xchg
and
bnd
jg
filds
cmc
mov
mov
hlt
xchg
cli
pop
test
into
loopne
decl
pop
and
mov
movsb
jbe
jmp
popf
push
scas
clc
xchg
push
scas
ret
mov
icebp
dec
adcl
sbb
insl
dec
push
cmp
rcr
cmp
test
or
incl
mov
scas
jmp
ds
ja
aad
decl
jmp
insl
aam
jmp
push
loopne
fisttps
add
cwtl
fnstsw
dec
pop
sub
fimuls
sub
mov
mov
jg
lcall
push
xchg
in
jbe
cmp
or
push
negb
orl
insl
les
shlb
push
into
flds
outsb
add
jg
sub
or
xor
imul
in
mov
mov
pop
pop
push
aaa
adc
lcall
imul
push
and
outsb
pop
xor
dec
add
lahf
loop
aad
outsl
pop
mov
ja
in
mov
sub
decl
pushf
in
gs
daa
leave
shrl
xchg
fldenv
in
ljmp
add
rclb
loop
mov
scas
xlat
arpl
dec
nop
pop
ljmp
mov
mov
in
cli
sub
fiaddl
js
xchg
inc
imul
cli
mov
int
add
data16
call
addr16
mov
push
bound
lret
decb
iret
cli
scas
and
leave
add
pushl
and
sbb
loop
in
push
lcall
inc
cwtl
jbe
add
inc
iret
fcompl
inc
sub
scas
sub
in
mov
mov
pop
jmp
xor
sbb
lods
or
cld
jmp
icebp
call
aas
sub
mov
inc
mov
stos
and
inc
jmp
dec
and
lcall
shl
test
sarl
push
mov
into
ret
mov
in
loopne
sbb
decl
jle
or
icebp
addr16
lahf
add
and
xlat
adc
push
in
adc
adc
push
push
scas
aaa
pop
pop
sub
push
cmp
es
inc
data16
mov
movsl
leave
push
jl
pop
cmpsb
nop
or
call
mov
cmp
mov
cmpsb
xor
es
xor
fdivrs
inc
jb
push
mov
flds
fs
je,pt
xor
cmpsb
loopne
in
mov
push
in
cmp
xchg
in
dec
fwait
cmp
or
sti
test
or
push
jg
push
aaa
enter
xchg
pushf
jne
push
xor
jmp
int3
xchg
clc
push
pop
xchg
rclb
fucomip
lea
loope
or
or
or
or
mov
scas
rorb
adc
and
fisttps
sbb
imul
jns
sbb
jb
sti
inc
xchg
lds
arpl
or
pop
adc
sbb
into
test
loope
call
push
ljmp
test
mov
cmpsb
ja
call
mov
pop
sbb
pop
stos
push
mov
pop
pusha
inc
inc
data16
pop
test
ret
sbb
outsb
inc
or
sub
and
fimuls
lock
mov
cltd
mov
popf
aas
xchg
daa
cld
mov
adc
repnz
jb
std
mov
sub
fdivl
sbb
mov
jp
ja
jns
mov
cmp
int
jns
lods
push
ss
adc
or
dec
mov
push
sub
jg
xor
mov
repnz
push
sub
mov
daa
adc
incl
inc
push
or
fisubrl
or
sub
mov
inc
pop
inc
lock
es
sub
fsts
mov
out
dec
mov
sbbb
xor
lcall
mov
ljmp
bound
mov
push
jp
or
mov
leave
xor
and
rclb
xor
mov
mov
flds
jnp
es
cmp
xor
loopne
test
xchg
pop
sbb
ljmp
mov
mov
mov
pop
adc
cmp
imul
ljmp
aam
mov
lea
fistpll
lock
pop
push
jo
xchg
pushaw
dec
cmp
push
addr16
ja
scas
loop
push
push
sub
and
mov
addr16
lcall
leave
jae
mov
lahf
xchg
rolb
push
pop
adc
decl
js
adc
pop
inc
roll
push
or
clc
cld
dec
sbb
pop
lcall
pushl
xor
lds
xchg
js
sub
push
sub
decl
gs
cmp
jmp
lods
adc
jp
insb
pop
imul
sub
ja
lcall
call
xchg
aam
ret
mulb
xchg
jg
imulb
dec
fdivrl
add
stc
dec
adc
mov
sbb
xchg
jecxz
jle
add
add
ljmp
xor
and
dec
cmp
and
pushl
sbb
mov
jnp
sub
js
mov
ja
add
fnstcw
decl
divl
scas
jns
pop
mov
sub
repz
sbb
outsb
out
pop
lds
jmp
adc
mov
notb
lea
dec
ljmp
cmp
ret
push
aad
or
in
sub
xchg
push
xor
sbb
add
int
pop
pop
nop
cmp
mov
aaa
pop
sub
ds
aad
xchg
test
cmp
mov
pop
mov
xor
lock
cs
push
std
inc
iret
jo
and
jmp
mov
fs
inc
jp
aam
les
ss
xchg
je
sahf
adc
pop
add
stos
and
xor
xchg
xor
push
push
push
mov
xor
jae
jecxz
lods
and
lock
cmp
cmp
ror
push
push
icebp
add
sub
fs
dec
outsb
sbb
dec
xchg
in
fistpl
xchg
div
jbe
sar
mov
imul
sbb
imul
call
sub
movsl
add
sbb
jb
mov
je
inc
inc
adc
loopne
sarl
xchg
xor
cmc
adc
pusha
mov
jge
outsb
push
adc
outsl
jg
fldt
jbe
data16
pop
sbb
negb
movswl
mov
in
fs
jg
mov
adc
push
push
dec
sub
movsl
xor
imul
mov
or
ljmp
push
dec
dec
xlat
das
std
outsl
das
dec
cmpsb
mov
jno
adc
idiv
xchg
jl
rcrl
std
jmp
xor
ret
xchg
hlt
sbb
test
mov
mov
shll
lock
mov
jle
lahf
xchg
pop
jp
fbstp
ljmp
ljmp
cmp
clc
fisubrs
adc
xchg
iret
es
xor
out
dec
cwtl
add
ret
pushl
jp
xchg
sub
mov
jmp
imul
aaa
xchg
into
stos
jmp
sbb
inc
mov
pop
cltd
loopne
repz
sub
pop
jbe
enter
idiv
in
outsb
clc
xchg
xchg
sub
mov
fnsave
imul
adc
loop
enter
jg
in
ds
dec
adc
and
or
notb
fmuls
pop
movsb
mov
sub
cmp
icebp
shll
mov
sbb
test
jbe
push
lock
pop
out
add
je
or
dec
adc
cmp
call
movsb
lahf
add
mov
std
dec
xchg
xor
std
pop
pop
mov
incl
add
push
pop
add
push
xor
call
sbb
dec
scas
loope
jmp
or
pushl
adc
jae
int
adc
call
orl
lret
ja
popf
test
es
add
sub
ljmp
mov
mov
mov
pop
jmp
mov
jno
pop
cmp
adc
ss
xor
sub
mov
jmp
mov
es
int
jl
mov
sbb
lods
mulb
incl
jle
mov
cmpb
int3
xor
aam
pop
jge
sbb
or
adc
dec
xchg
dec
rcrl
jp
fs
ret
jns
aam
and
inc
xchg
and
cli
mov
sbb
mov
out
enter
jmp
fimuls
test
push
fists
cs
out
push
cwtl
jge,pt
punpcklbw
hlt
js
sub
imul
out
scas
cli
jmp
jmp
lret
mov
sbb
xchg
mov
inc
sarl
fwait
add
xchg
dec
inc
sbb
and
jmp
dec
sbb
xchg
and
inc
and
lods
insl
int
xor
pop
aas
or
push
jno
jl
jnp
mov
ja
fstl
lcall
imul
jmp
inc
push
data16
lock
fwait
lcall
jno
jp
or
stc
mov
int
cmp
inc
or
jmp
push
fs
test
mov
inc
out
pop
notl
push
ljmp
iret
fs
jnp
int
or
js
push
inc
ss
inc
pusha
ljmp
push
xchg
push
or
jle
neg
arpl
les
loope
movsl
test
dec
decl
test
out
pushf
mov
sbb
ljmp
movsb
aas
inc
dec
pusha
sub
cmpsl
jl
imul
sti
and
cmp
scas
mov
ljmp
dec
fstpt
sbb
push
and
xchg
jmp
and
xchg
cwtl
jg
das
mov
sbb
std
mov
mov
jns
cmpb
pop
ret
mov
pop
icebp
fucomp
lahf
sbb
add
mov
pop
fildll
outsb
xor
push
sbb
xchg
out
bound
xchg
push
mov
call
rcl
movsb
insb
dec
je
ja
mov
loop
stos
xor
out
push
dec
and
cmc
test
xchg
fidivrl
jge
fdivrs
add
dec
stos
sahf
lods
cmpsl
mov
out
loop
xchg
xchg
sahf
lcall
xchg
sub
inc
in
cmp
mov
xchg
dec
pop
aad
pop
add
fadds
jne
xor
call
mov
scas
jmp
pop
pop
bound
mov
lahf
or
lds
movsb
gs
repnz
xchg
cmp
lea
in
adc
and
in
stos
mov
xchg
mov
push
adcb
iret
fistps
cmc
mov
fwait
dec
dec
sub
cmp
aas
and
cli
xchg
jg
sbb
out
in
mov
loop
pop
outsb
mov
jp
push
addr16
mov
repnz
xchg
mov
mov
push
in
dec
add
call
mov
movsb
jb
xchg
jmp
sub
imul
insl
je
fsubl
push
dec
cmc
aam
push
rcl
jmp
lret
mov
cmpsl
call
xchg
int
rol
mov
xchg
lds
decl
jno
cmc
clc
rcr
jnp
out
cmp
ljmp
daa
addr16
imul
push
sub
outsb
jg
jp
stos
cmc
mov
push
push
pushf
int3
lods
call
or
cmpsb
jae
imul
test
daa
xor
cld
inc
cmp
loopne
mov
mov
lods
or
jmp
mov
out
xchg
pop
or
sub
in
xor
adc
arpl
jg
jae
and
pushl
cwtl
push
push
andl
jns
xlat
xchg
les
pop
cmpsl
insb
pop
mov
inc
sbb
push
lret
cmc
sub
fidivrs
ret
xor
scas
inc
push
mov
shll
inc
cmp
mov
loope
loop
lods
add
ljmp
xchg
cmp
inc
adc
mov
xlat
mov
mov
push
adc
push
dec
jbe
std
call
dec
ret
mov
mov
push
mov
adc
or
test
cmp
vphaddbd
ss
pop
loop
lret
cs
out
dec
inc
xchg
iret
dec
push
cwtd
mov
int3
repnz
xchg
and
hlt
push
cmp
lcall
fidivs
push
insb
lods
dec
inc
scas
ror
jne
stos
jg
cmc
jmp
ffree
shlb
or
inc
lods
mov
pop
sbb
jmp
and
inc
dec
and
push
sbb
dec
ljmp
aam
cmc
stc
add
mov
dec
sub
out
pop
insl
and
nop
mov
ret
pushf
into
lcall
or
dec
xchg
addr16
inc
push
out
fcmovnbe
inc
in
decl
add
mov
mov
xchg
dec
sti
inc
lahf
insb
lds
aad
ja
test
decl
cmp
mov
in
push
and
xor
ds
jmp
loopne
decl
in
ljmp
or
outsb
imul
and
jg
and
je
xchg
sub
fmuls
cltd
ss
xchg
pop
cld
pushl
mov
and
mov
fwait
lds
ret
xor
push
into
push
dec
xchg
fs
and
adc
mov
les
scas
jmp
sti
or
inc
mov
cmc
xor
out
fidivrl
cmp
movsl
mov
jg
daa
push
pop
loope
movsb
pop
adc
dec
int
pop
mulb
in
bound
jbe
mov
mov
sbb
js
iret
scas
push
add
int
lahf
mov
push
ret
cmp
mov
aaa
std
pushl
xor
and
fistps
cmp
mov
loop
shrb
call
jg
hlt
xor
bound
iret
shlb
dec
mov
xchg
mov
mov
call
adc
call
popf
lea
xchg
sbb
gs
fmul
dec
mov
pop
fdivrp
ljmp
clc
fldl
hlt
clc
jne
jecxz
push
loopne
adc
ljmp
mov
ljmp
int3
push
cmp
jg
or
icebp
sub
sub
mov
inc
sbb
out
addr16
sub
adc
notb
add
jecxz
pusha
xor
filds
dec
imul
inc
test
sbb
test
incl
stos
dec
std
push
inc
and
shrl
clc
or
adc
xor
movsb
jmp
sbb
mov
sub
nop
and
repz
sub
or
ret
mov
mov
mov
mov
or
ljmp
in
out
dec
mov
jne
mov
mov
vmwrite
lret
sbb
cmc
fdivrs
aaa
mov
stos
aad
fimuls
jl
inc
cli
jg
call
arpl
cmpsb
mov
jae
adc
fcomip
das
scas
cwtl
xor
or
cmp
mov
push
mov
cld
and
sbb
cmpsb
push
ror
lahf
mov
icebp
sub
incl
mov
mov
std
outsl
and
add
loop
xchg
sbb
cs
push
pop
cmp
lock
addr16
cwtl
sbb
mov
jae
xchg
jmp
add
adc
call
and
cltd
cltd
pop
push
dec
xor
enter
out
push
outsl
js
call
popf
mov
or
fs
in
loope
repz
inc
xlat
xor
fsubl
xchg
ss
imul
fwait
fwait
sub
pop
or
xor
inc
pop
out
jne
and
je
fisubl
pop
mov
add
jno
cwtl
fiadds
loope
mov
mov
pop
scas
mov
xchg
mov
cmp
gs
add
dec
test
mov
mov
stos
sarb
movsb
mov
das
js
push
daa
out
lods
add
mov
push
mov
mov
jg
add
roll
movsl
jae
push
jge
outsl
inc
jl
adc
aam
inc
jl
icebp
aaa
std
jmp
mov
fstps
dec
cli
push
xchg
adc
push
pushl
adc
out
and
xchg
and
test
popa
pop
sahf
dec
inc
xchg
push
mov
fists
push
test
mov
mov
rol
adc
and
jmp
fisubl
aad
ljmp
popa
sbb
push
mov
imul
scas
xchg
mov
sub
mov
sub
push
push
mov
pop
jmp
and
cmp
sub
sub
pop
mov
cli
mov
jecxz
leave
mov
mov
sbb
jge
mov
mov
stos
inc
cmp
bound
mov
into
into
lret
mov
shr
lret
sbb
mov
mov
loop
jl
shlb
sub
sub
repz
push
pop
dec
or
jge
push
out
js
fisttps
adc
push
sar
xchg
mov
inc
insb
aam
lret
add
stos
push
cmp
loope
xor
mov
push
ljmp
mov
mov
jmp
xchg
push
out
out
jecxz
sarl
sahf
mov
in
push
js
int
cld
call
ret
lret
adc
push
mov
mov
hlt
fsubr
jp
into
imul
fs
sub
add
pop
popf
add
dec
jno
iret
sbb
aas
iret
add
mov
cmovbe
inc
lcall
call
dec
and
cmp
std
jp
out
dec
addr16
out
clc
push
fcmovnb
inc
les
repnz
sbb
sti
pop
dec
in
or
cmp
push
int3
mov
sti
xchg
inc
divl
jbe
incl
mov
mov
clc
cmp
sbb
or
push
inc
xor
jns
sbb
fsubl
jb
push
pop
lret
outsl
add
mov
jo
inc
add
lea
sbb
in
xchg
out
mov
jg
leave
scas
xchg
cmc
pushfw
xchg
rorb
sub
cld
scas
cmpb
pop
das
rolb
push
xor
sar
sub
pushl
stos
pushf
sbb
sbb
inc
sbb
jae
call
std
lea
and
mov
iret
sbb
int
pop
mov
fdivs
fiadds
sahf
lea
xchg
lock
jecxz
popa
or
ja
fisubrs
mov
les
or
movl
push
jns
mov
sbb
das
sbb
jge
lods
aaa
in
mov
cmp
adc
test
mov
insb
jl
jl
clc
out
cli
nop
cmpsl
pop
lret
jae
adc
cmpsl
lcall
xchg
push
call
lcall
out
mov
sub
dec
lock
lods
push
movsl
scas
push
lock
aas
pop
cs
repz
and
push
dec
cli
sti
in
arpl
iret
mov
cld
mov
add
ljmp
sti
sbb
mov
jnp
and
shlb
xchg
inc
cmp
inc
cwtl
ljmp
mov
jo
inc
jmp
cmpsl
jne
fisttps
clc
adc
loope
dec
xchg
lock
out
lahf
sub
mov
push
xchg
push
push
adc
jnp
lahf
stos
push
lcall
je
add
mov
pop
setae
or
ljmp
adc
js
sbb
daa
add
push
adc
cwtl
bound
daa
cli
jg
lods
sar
lcall
add
jbe
xchg
fs
push
ret
sbb
jp
ljmp
jmp
call
jle
and
xor
shrl
cmpsl
fwait
stc
sub
sti
or
ss
incl
push
shl
jp
xlat
mov
fwait
mov
jl
mov
cli
adc
sti
dec
cld
int
dec
jne
pop
rcrb
ret
xchg
lahf
pushf
insl
adc
arpl
aad
std
inc
out
or
jnp
lods
or
scas
orb
orb
adc
decl
clc
mov
lea
imulb
std
imul
je
jnp
xchg
xchg
xor
sub
mov
sbb
jae
jle
pop
in
cmp
stos
jmp
and
fbld
add
ret
fbld
decb
dec
adc
insb
and
or
ljmp
fistpll
mov
xchg
pop
loop
call
jbe
sub
xor
inc
cmp
hlt
ljmp
out
fucomip
cmc
lds
xchg
test
out
add
fstpt
mov
jg
mov
lods
mov
pop
push
xor
or
ror
adc
test
decl
jae
push
shll
xor
das
lods
cmp
cmpsb
lret
pusha
ret
jmp
decb
lcall
shlb
dec
test
sub
mov
xor
je
push
mov
mov
mov
pop
std
je
jmp
clc
insb
sbb
stos
jmp
test
in
xchg
adc
pop
cld
xchg
xor
ret
pushl
jmp
jp
jns,pt
cs
mov
std
sbb
sub
xor
lcall
and
ljmp
xor
cmpb
xor
outsb
je
dec
jnp
fnsave
push
fcoml
mov
inc
jmp
cs
push
in
and
add
add
mov
inc
dec
decl
pop
add
imul
pop
in
arpl
cmpsl
in
or
or
and
jmp
hlt
repnz
dec
mov
push
jg
lcall
call
pop
cmp
adc
fisttpl
test
call
pop
push
sarl
add
dec
fsub
xchg
cwtl
cwtl
pusha
jecxz
and
dec
dec
divb
ljmp
sub
or
idiv
mov
jno
xchg
jnp
cmp
or
cmpl
dec
arpl
adc
dec
sti
add
mov
clc
pop
lods
shrb
mov
mov
or
inc
dec
lahf
add
cmp
cld
or
rcrb
lds
adc
out
jg
mov
add
or
jo
mov
imul
decl
jle
mov
leave
test
xchg
aam
rcr
sub
lret
mov
repz
rcrl
pop
pop
lahf
rclb
fstpt
daa
dec
jecxz
je
add
jno
cmp
clc
pop
imul
inc
shll
imul
bound
out
push
jb
xchg
fprem
add
inc
movsb
mov
push
jo
push
mov
pushf
jg
in
xchg
jp
push
out
lea
or
test
mov
decl
jmp
call
xor
mov
cmp
lock
incl
loope
test
pop
movsl
les
cmp
aas
mov
ds
subb
ret
lcall
dec
or
sub
mov
fisubrs
xchg
xor
popf
ljmp
call
mov
ror
xor
clc
fistps
ja
out
cmp
push
or
js
sbb
push
jmp
out
cmp
pushf
std
xchg
lods
push
test
loop
call
ja
cmp
cld
ja
daa
inc
insl
cli
push
arpl
jns
jbe
and
fisttps
add
ljmp
mov
jb
rorl
jno
incl
loopne
cmpsb
pusha
negl
pop
adc
clc
pusha
pop
mov
dec
add
cwtl
mov
ljmp
push
pop
inc
std
lods
into
mov
fcomps
lods
fimuls
fsub
dec
pop
test
lret
fcmovnu
call
jle
pop
adcl
cltd
outsb
mov
mov
push
cld
jg
and
jge
test
sub
aas
out
or
loop
add
cli
fildl
aad
xchg
jo
adc
lea
sub
pushl
rcrl
adc
inc
jle
out
jp
xor
negl
pop
or
xor
push
fmul
sub
adc
fwait
mov
pop
clc
cmp
mulb
stc
icebp
lcall
cmpsb
mov
inc
jge
or
aas
jne
arpl
dec
sarl
lea
aad
daa
pop
sar
jg
pushl
or
out
adc
sbbb
movsl
outsl
mov
mov
dec
dec
mov
enter
icebp
push
gs
sahf
inc
adc
lds
ret
divl
imul
out
push
mov
fiaddl
or
adc
cmp
lock
pop
loop
jno
das
xor
mov
call
cld
sbb
ljmp
imul
je
mov
incl
dec
mov
push
xchg
call
add
inc
pop
notl
or
incb
jle
adc
addb
sbb
inc
filds
inc
jp
iret
and
push
bound
arpl
sbb
adc
jge
ljmp
jbe
xchg
daa
in
adc
pop
enter
enter
xor
adc
jge
ljmp
clc
cmp
rcll
sub
fistpll
push
stos
or
push
cli
incl
outsl
outsl
fwait
cmc
adc
inc
sbb
pop
lea
mov
adc
mov
mov
mov
cmc
push
pop
out
dec
add
lds
sbb
icebp
jg
push
aad
andl
int3
jnp
adc
pop
shrl
mov
mov
cli
lcall
sti
jmp
shll
xrelease
ds
in
imul
ds
fbld
inc
push
adc
popa
aad
mov
sub
sbb
pushl
mov
push
lcall
in
and
mov
iret
ljmp
mov
ret
push
pop
arpl
sub
mov
dec
stos
sahf
push
or
gs
pop
std
push
inc
inc
adc
xor
imul
out
nop
and
ds
mov
outsb
pushf
mov
jg
cmc
lcall
xor
adcb
mov
sbb
sub
pop
adc
mov
incl
cwtl
lcall
jecxz
mov
cltd
sbb
fsubs
in
add
ficomps
in
adc
into
jb
inc
jl
call
aas
in
or
incb
ljmp
cli
repnz
repz
movsl
lods
in
test
jns
sbb
add
mov
push
jge
pop
stos
sbb
jmp
push
push
mov
cmp
xor
fs
pop
sti
mov
in
dec
mov
lock
adc
mov
ret
aas
cmp
adc
es
push
lock
pusha
sub
sbb
push
lods
jb
out
test
add
adc
int3
adc
sub
daa
lcall
bnd
jge
push
and
xor
cs
jo
stos
cmp
lea
jg
lea
ficoml
dec
rol
sbb
mov
add
inc
lcall
adc
call
test
and
repz
mov
imul
pop
enter
jecxz
stos
jmp
lock
and
push
scas
pop
nop
jb
pop
cli
cmpsb
adc
mov
add
jmp
mov
fsubl
xor
jmp
incl
jbe
dec
add
or
pop
adc
xor
xchg
xorb
jno
cli
mov
jbe
decl
jb
sub
movhlps
mov
ror
adc
xchg
jg
icebp
xchg
cmp
cmpsb
jge
add
pusha
mov
jp
mov
decl
sbb
ret
test
inc
daa
xlat
push
ret
cmp
cs
or
jmp
or
popa
nop
jb
mov
pushf
add
sarl
out
xor
movsb
mov
std
or
mov
ljmp
mov
test
data16
imul
incl
icebp
je
movsb
jo
and
fstl
clc
negl
sbb
sub
dec
cmpsb
cmp
call
lret
sbb
pop
mov
push
adc
enter
cmp
mov
call
push
mov
in
cwtl
and
pop
pop
xchg
sub
cli
xorl
addr16
inc
cs
add
push
mov
mov
clc
mov
subb
mov
lea
push
pushf
pop
jl
pop
dec
cmp
lods
mov
inc
lds
pop
xor
jg
adc
and
pop
jg
mov
xor
ljmp
cli
popa
out
jae
shrb
imul
mov
lds
mov
pop
imul
mov
push
jl
call
xor
jge
xor
lea
dec
iret
mov
paddusw
jg
cmp
cmp
jge
decl
sahf
jecxz
idivb
cmpsb
aad
mov
insb
push
jns
in
sbb
xchg
nop
in
add
xchg
in
js
mov
out
mov
adc
insb
jg
popa
mov
inc
popa
mov
xchg
lods
out
jmp
sbb
mov
addr16
mov
movsl
shl
or
mov
pop
mov
inc
inc
stc
adcb
orb
idiv
jmp
pop
nop
test
scas
push
les
adc
push
pop
cli
aaa
lret
test
push
or
stos
cs
popf
pop
jnp
mov
scas
xor
and
cmpsb
pop
push
jecxz
ja
push
inc
sub
lcall
lcall
data16
push
inc
and
insb
mov
pusha
adc
pop
std
jg
and
jbe
add
mov
cmp
decl
mov
stos
push
xchg
out
mov
push
push
dec
ja
inc
mov
pop
into
jbe
out
or
jmp
xchg
cmpsl
mov
shll
bound
jne
push
fdivp
icebp
or
mov
mov
repnz
fisubrl
dec
adc
xor
mov
out
sahf
cltd
mov
pusha
ja
mov
pop
push
fucomi
jecxz
sub
xchg
mov
jg
test
jg
test
or
xchg
adcl
jnp
add
push
aad
lods
rcrb
push
scas
cli
cmp
ror
fldl
es
outsb
cmpsb
jecxz
cld
fildll
jg
sub
sub
hlt
hlt
cmp
mov
push
cmp
mov
neg
cltd
std
dec
aas
sub
jae
dec
orl
js
cli
jmp
lods
adc
int
pop
bound
cmc
int3
sub
lcall
jmp
adc
sbb
cmp
fs
cmp
sub
inc
cld
inc
ja
and
rcrl
outsl
int
sbb
dec
lcall
jmp
lds
js
in
push
push
sar
pop
test
das
sar
js
stos
enter
sbb
incb
loop
roll
decl
cltd
cld
jmp
popf
scas
jbe
mov
xchg
pop
test
ljmp
imul
jecxz
ficompl
mov
ja
adc
pop
dec
add
mov
rorb
sbb
or
push
or
mov
inc
or
add
sbb
sete
pushf
jne
stos
mov
xchg
add
jg
arpl
pop
stos
xor
loop
aas
pop
jbe
ss
push
and
sbb
mov
mov
or
jl
mov
dec
jbe
or
push
or
pop
gs
mov
cmp
negl
pop
pusha
incl
adc
cmp
pop
mov
and
mov
inc
mov
or
push
jo
mov
push
popf
jns
xor
lods
addl
scas
bnd
lahf
pop
stc
push
in
inc
fcomip
ror
popa
loop
mov
xchg
sbb
dec
ja
jp
inc
nop
int3
and
adc
lcall
cmpl
push
les
stos
movsl
call
xor
xor
iret
imul
mov
push
movsb
push
outsl
in
jae
aaa
pop
test
or
lret
pusha
popf
fmulp
aam
or
roll
fbld
test
or
dec
xlat
add
test
mov
jmp
test
xchg
cmpsb
out
adc
dec
imul
add
fcos
incl
mov
mov
pop
push
insb
lahf
cmp
jno
cld
cmp
pushl
cltd
inc
leave
mov
push
clts
sbb
data16
cmc
push
jmp
cmpl
push
cld
ret
add
cwtl
dec
mov
xor
subl
sar
movsl
mov
dec
push
mov
repnz
out
adc
incl
lods
add
cltd
leave
scas
pop
push
mov
insl
sahf
fs
in
cmp
rorb
stos
test
push
lea
or
outsb
pop
icebp
call
insl
out
lods
add
stc
mov
fs
add
ljmp
jl
add
cmp
loop
stos
sub
push
fistl
jmp
or
leave
stos
push
inc
sbb
or
lods
stos
or
lock
fwait
aam
push
xlat
out
cmp
jmp
popa
jnp
xchg
clc
leave
and
in
pop
gs
sub
add
mov
push
jno
dec
pop
mov
repnz
clc
ja
jge
fldl
dec
xchg
xor
icebp
cmp
add
cmp
enter
iret
push
jg
lcall
or
fdivrl
push
lahf
icebp
add
ret
push
out
sahf
mov
pushl
mov
cmp
lgdtl
arpl
sub
inc
pushf
mov
and
xchg
pop
std
ljmp
add
shlb
sbb
sbb
adc
imul
loopne
cltd
jmp
jne
out
adc
test
or
and
push
cld
popf
xor
sub
ja
in
xor
lock
test
dec
push
push
xlat
pop
dec
or
add
lock
jg
dec
jno
fsts
es
movsb
mov
jmp
sub
jmp
pop
ret
jmp
mov
rorl
ss
mov
mov
cltd
dec
pop
test
xor
or
pop
mov
ret
call
std
jl
sbbb
jle
dec
xor
inc
xchg
scas
jno
inc
sbb
pusha
out
xor
xchg
dec
lock
and
adc
mov
mov
jmp
cs
xor
mov
xchg
sub
rcrl
in
and
stc
push
add
aad
lcall
push
add
and
mov
cmp
jmp
xchg
and
fdivrl
rcl
aas
xor
mov
mov
and
mov
incl
outsl
xor
loopne
jl
pop
xor
bound
decb
mov
cmp
jmp
sbb
mov
cld
fdivrl
insb
nop
bound
int
xchg
jbe
outsb
rcll
js
iret
in
adc
jne
sub
imul
pop
or
jbe
ja
movsb
pushf
jae
inc
pop
jle
incl
sbb
pop
pop
push
push
inc
inc
jae
rcrl
cld
adc
inc
hlt
cmpsl
ja
std
push
mov
lahf
aam
mov
pop
mov
popf
lea
mov
lahf
fs
push
or
fstpl
push
addr16
mov
jle
scas
mov
ja
push
sub
cmp
mov
lds
rcrb
roll
leave
loope
dec
push
sub
pushl
adc
xchg
adc
cmp
sub
out
pushf
dec
cmpb
jbe
sbb
inc
repnz
ret
mov
test
fs
call
fisttpl
sub
lcall
nop
mov
test
pop
lock
test
popa
sahf
and
dec
imul
test
pusha
incl
lahf
std
adc
jmp
push
hlt
xor
mov
inc
sub
mov
mov
in
aad
and
pusha
jg
loop
sbb
mov
pushl
imul
pushf
jne
cmp
jmp
xlat
loop
mov
notb
adc
call
in
adc
rclb
mov
sbb
xchg
push
sub
pushl
sbb
dec
into
insb
cmp
pusha
or
or
mov
add
pushl
mov
icebp
iret
je
cmp
pop
pop
filds
call
jbe
jmp
aaa
pushl
dec
mov
cmpsl
mov
xor
ds
and
ljmp
jl
leave
cmp
cmp
test
bound
sub
sub
inc
stos
ljmp
pop
mov
jae
mov
pop
test
fmuls
les
inc
call
cwtl
sub
leave
pop
jp
inc
movsb
add
popa
push
lcall
sbb
push
xorb
adc
int
sub
jp
mov
rorl
jle
cmp
adc
rolb
popf
and
test
push
jb
negl
mov
mov
clc
data16
and
mov
jo
sbb
mov
ljmp
xchg
jmp
add
movsl
sti
fmuls
insl
js
movsb
lret
mov
dec
pop
sbb
push
push
nop
jg
sub
scas
sub
or
addr16
jecxz
lcall
sub
int
std
push
pop
outsl
cld
out
ja
ljmp
add
das
out
test
and
jmp
mov
rolb
es
not
aam
mov
inc
lods
and
cmp
fsub
xor
jb
sar
jb
sub
push
outsl
pop
daa
idivl
adc
sbb
sti
sbb
ss
stos
shr
mov
xor
call
adc
imul
jnp
or
insb
pushl
in
rorl
dec
cmp
sbb
testb
arpl
mov
jmp
outsl
cwtl
mov
ret
dec
insb
aaa
xchg
les
cmp
imul
jmp
outsl
imul
gs
andl
mov
lcall
fidivrs
insb
push
int3
sub
insb
repz
test
ljmp
scas
cld
sbb
aam
adc
jb
out
loopne
shl
gs
sbb
xor
ljmp
xchg
dec
xor
or
dec
xchg
mov
out
mov
fidivs
incl
pop
daa
cmpsb
xor
sub
test
lods
inc
stos
shl
in
lds
add
mov
push
call
lcall
faddl
jg
mov
cmp
or
jecxz
mov
pushl
pop
mov
sub
ret
push
fldenv
call
insb
inc
mov
inc
sbb
jb
lcall
push
subb
in
outsb
jne
imul
fists
sub
loope
xchg
jg
inc
bound
test
add
adc
outsb
faddl
test
fbstp
inc
xchg
ss
aas
jb
jmp
test
xchg
jle
iret
ret
arpl
jp
jg
cs
cltd
inc
mov
insb
dec
xchg
call
movsl
push
scas
sub
push
sarl
fistps
mov
sbb
inc
pop
dec
jnp
pop
mov
out
jp
out
cld
out
ss
dec
push
frstor
arpl
sahf
mov
lcall
and
dec
pop
sub
xchg
xor
mov
dec
in
popl
xchg
incl
add
inc
js
hlt
add
xor
ljmp
notl
popa
js
inc
jmp
and
outsb
int3
loopne
fstps
sub
fsubrl
pop
adc
pop
xchg
sbb
mov
or
xor
ljmp
lcall
push
push
add
sub
dec
push
jne
test
mov
dec
loop
xchg
pop
mov
fstl
sbb
in
fwait
mov
icebp
test
mov
movsb
lcall
out
in
and
jp
xor
not
inc
mov
icebp
and
push
mov
pop
ret
sub
mov
ljmp
cmpb
jge
vorps
push
mov
cmpsb
sar
cs
lret
push
out
add
push
cltd
xchg
insl
sar
push
jl
adc
lock
lea
push
sbb
and
int
xor
or
fistps
sub
or
fimuls
jmp
and
cld
cmc
sbb
push
jmp
cmp
into
pushf
cmp
pushl
adc
xchg
cwtl
out
add
pushf
and
cli
mov
jmp
xchg
or
repnz
mov
dec
fdivp
decl
test
sbb
xchg
xor
pop
xorl
fistps
flds
testl
enter
mov
imul
or
lret
or
lods
lret
js
fsubrl
fsubrs
cs
mov
lds
and
ret
adc
call
movsl
push
pop
neg
lret
mov
fdivs
fucomp
jno
andb
push
sub
pop
call
pusha
add
clc
decl
test
in
outsb
xchg
lock
js
inc
ds
jne
jp
fwait
movsl
jae
and
jecxz
repnz
or
pop
andb
pop
insl
lea
adc
inc
testb
outsl
clc
outsl
clc
or
sarb
mov
icebp
repnz
mov
insb
cld
incl
es
in
std
sub
dec
jg
mov
inc
mov
cmc
lret
dec
lret
mov
adc
cmp
or
mov
add
je
xchg
mov
pop
idivb
cmc
push
lcall
sub
sbb
xor
jmp
xchg
push
add
andl
jmp
mov
cli
push
or
xchg
cmp
shr
ja
ret
int
cwtl
rcpps
imul
add
nop
mov
call
dec
jle
jo
insb
xchg
xor
mov
mov
data16
mov
adcl
add
jle
push
out
pop
inc
xchg
sbb
loop
decl
orb
shl
cltd
ja
sbb
mov
decl
mov
pushf
dec
inc
cmp
leave
pop
jmp
bound
imul
push
shr
roll
enter
outsb
cld
enter
mov
loope
test
dec
add
rcl
sub
das
clc
incl
icebp
pop
scas
orb
sbb
jnp
scas
mov
cmp
fcompl
and
dec
fldcw
inc
sar
cltd
ret
sub
add
jnp
mov
incl
cmpb
jmp
xor
es
xchg
push
push
sahf
outsl
inc
test
pop
cli
dec
sbb
jb
out
into
icebp
cmp
or
jnp,pt
pop
loop
lods
decl
jmp
pop
mov
cltd
sub
and
mov
bound
sbb
lcall
add
jb
repnz
jg
or
movb
pop
xchg
pop
pop
icebp
inc
dec
dec
dec
in
xchg
jmp
jbe
iret
mov
sbb
cmp
inc
repnz
mov
jg
imul
js
sti
insb
pop
fisttpll
shr
jmp
pop
aas
pop
inc
clc
aas
pop
es
subl
sub
sub
sbb
ljmp
xchg
jge
inc
sub
stos
xchg
push
xor
pop
sbb
jge
jg
sbb
flds
push
sub
rolb
push
ljmp
test
in
out
cwtl
jne
or
push
aam
fisttpl
xor
outsl
or
push
sub
ljmp
data16
and
incb
mov
dec
add
sub
push
mov
and
jg
pop
and
in
fcoms
mov
lock
ja
out
shld
sti
jnp
ret
fs
mov
stos
jnp
cmp
xor
mov
nopl
lock
dec
push
jg
jno
divb
leave
pop
data16
and
fcomip
pushl
in
push
pushf
rcrb
jne
add
rsqrtps
mov
mov
sub
add
dec
call
xchg
mov
mov
mov
mov
out
enter
and
mov
scas
test
push
test
mov
or
movsl
cmp
mov
out
and
cmp
jp
nop
adc
mov
mov
lcall
sarb
push
dec
int
jmp
adc
mov
mov
mov
ja
push
jl
aaa
lret
ljmp
stc
daa
ljmp
bound
iret
mov
jbe
outsl
clc
push
push
or
imul
xchg
jle
pop
jb
sub
pop
fmuls
cli
sbb
pop
mov
les
jl
les
inc
ss
pop
mov
loope
xor
imul
inc
fwait
sbb
fcmovnb
dec
sub
dec
and
and
push
sti
addr16
call
mov
mov
cmpsl
popa
pop
cmp
js
out
xor
in
xorb
push
pop
out
addl
push
xor
arpl
out
mov
fisubl
into
out
mov
repnz
ret
push
jo
fiaddl
push
add
fldt
push
out
cld
sub
sbb
out
xchg
push
ja
in
mov
clc
adcb
xchg
out
pop
call
xor
popl
int3
scas
or
nop
ljmp
movsl
lahf
lock
xchg
xchg
shll
insb
mov
lods
and
loopne
call
pop
loopne
push
pop
rorb
add
push
cltd
rorl
sbb
mov
lcall
push
nop
xchg
push
ret
pop
push
sbb
lea
cmp
decl
sub
pusha
lret
and
ffreep
loope
jmp
xor
jp
push
movsb
fincstp
stc
push
dec
adc
or
mov
and
pop
bound
mov
out
in
nop
je
movsl
or
mov
call
shr
cs
push
cmp
sbb
push
mov
scas
mov
mov
pop
dec
das
arpl
iret
popf
popf
out
out
pop
test
push
xor
faddl
decl
repz
push
mov
je
sahf
mov
push
push
adc
xchg
pop
push
xor
sti
das
cmp
or
fiadds
iret
xor
sbb
push
mov
mov
fbld
xchg
les
shlb
testl
add
pop
lahf
xor
int3
outsl
xchg
mov
je
mov
jbe
fs
pop
lret
sub
add
call
inc
shll
and
cmp
stc
outsl
addr16
call
mov
daa
pop
push
out
js
xor
add
lret
gs
cmc
mov
lds
jmp
push
sbb
sbb
decl
outsb
and
cmp
idivl
call
mov
fmull
cmp
or
in
xchg
mov
adc
arpl
sub
lea
aad
rcll
push
cmp
pop
cmp
xchg
mov
sub
sbb
xor
push
repnz
insl
mov
jmp
inc
and
cltd
imull
mov
ja
pop
cmp
and
das
dec
repnz
loop
fcmovne
hlt
lods
mov
dec
dec
cmp
inc
cmp
test
xchg
dec
ds
sbb
outsl
or
fs
imul
cmp
jg
gs
push
fiadds
daa
sarb
xlat
jb
sub
inc
cld
mov
int3
lea
jmp
addb
sub
pop
or
and
ss
xlat
mov
in
out
pop
jl
out
mov
dec
push
rcrb
aas
roll
push
and
push
dec
xchg
ret
jl
or
sub
pusha
sbb
loop
dec
mov
loop
cli
add
cmp
mov
pushf
fdivr
scas
clc
jg
ficompl
rorb
out
xchg
sbb
dec
push
cmp
and
shl
pushl
mov
pusha
cmpl
pop
ljmp
sbb
inc
dec
testb
popa
xor
jge
ds
imul
or
lret
dec
jg
and
lods
cld
out
loop
or
mov
cwtl
in
dec
cmp
push
cmp
sar
jno
imul
int
adc
push
js
clc
int
fsubrp
adc
mov
lods
in
mov
xchg
out
imull
add
mov
rep
push
stos
gs
sbb
pushl
inc
inc
in
loopne
cmp
jl
jns
pop
bound
mov
loop
scas
mov
fsts
call
lahf
fisttps
fnstcw
mov
ljmp
mov
stos
and
sbb
jle
call
mov
push
paddsb
cmp
js
nop
js
and
das
sar
xor
std
cld
mov
fadd
ficoms
inc
cld
sub
inc
lods
clc
ljmp
mov
pushf
lcall
jno
cmp
jae
xchg
xchg
rorb
ja
sbb
mov
push
sbb
cmpsb
or
in
outsb
jnp
imul
addb
dec
jnp
mov
jmp
jb
jnp
pop
xchg
and
and
push
dec
mov
mov
lods
mov
inc
inc
pop
in
pop
push
pop
cmp
in
popf
pop
xor
jb
inc
bndldx
pop
xor
pop
sbb
and
pop
jns
xlat
xor
outsb
xor
lret
xlat
cmp
cwtl
hlt
out
mov
pushf
mov
dec
inc
andb
mov
ja
fbld
mov
jmp
xor
std
cmp
adc
or
add
and
xchg
shlb
test
mov
scas
lods
xchg
xchg
sbb
stos
inc
ja
and
cmp
pop
pusha
arpl
mov
call
add
push
dec
push
lret
in
lds
jle
sub
dec
pop
push
pusha
aas
stc
cmpsl
add
clc
decl
xchg
mov
leave
xchg
lret
and
lcall
push
add
int
inc
xchg
fnstenv
jp
adc
or
inc
inc
mov
pop
cmc
in
xchg
rolb
push
enter
mov
dec
sbb
mov
test
clc
and
ja
clc
in
lods
and
mov
ljmp
test
stos
fistps
fstps
adc
mov
mov
or
push
xchg
mov
call
ja
push
inc
cmp
dec
push
mov
out
movsl
sahf
scas
out
call
jg
pop
mov
push
aam
sub
js
push
push
movsb
inc
and
dec
push
mov
push
mov
adc
mov
pop
jle
filds
mov
shlb
dec
inc
jne
adc
das
sar
adc
dec
cmp
movsl
dec
xor
add
inc
add
sub
adc
pop
mov
hlt
xor
cmpsl
mov
xchg
sbb
or
ret
jns
insl
xchg
les
mov
lcall
xor
pop
mov
in
cli
sti
xchg
stc
mov
xlat
cmpsb
jbe
pop
and
clc
mov
fcoml
dec
cmp
fdivs
jmp
sbb
mov
mov
xchg
inc
jne
imul
inc
daa
mov
cli
pop
or
pop
push
mov
bound
arpl
jno
mov
mov
sbb
jle
repnz
rolb
flds
xchg
lret
jge
fisubs
lds
pusha
in
mov
hlt
dec
lcall
lret
jns
xchg
mov
push
pop
insl
mov
jmp
xchg
js
pop
and
dec
ja
adc
push
and
push
lods
jge
ja
mov
xchg
outsl
jnp
aas
jnp
xchg
jno
cwtl
push
cltd
aam
cwtl
and
je
cmp
shlb
test
rorb
dec
lea
decl
fiadds
push
jae
sbb
xchg
lock
dec
das
rclb
sti
repz
cwtl
fidivl
mov
push
mov
sahf
pop
pop
movsb
faddl
lcall
or
in
inc
test
inc
stos
push
in
cmp
fwait
mov
and
incl
enter
xchg
les
xor
out
jl
or
push
add
jge
adc
sahf
mov
arpl
pop
lcall
dec
inc
lock
insb
pop
jmp
mov
mov
pushf
ret
iret
pop
push
or
idiv
jmp
mov
and
mov
pop
pop
or
aaa
and
pop
and
add
clc
push
xor
lock
in
pop
mov
inc
xor
pop
pop
adc
gs
cs
iret
add
mov
dec
adc
xchg
add
mov
sub
sub
fwait
lahf
jmp
orl
xchg
ret
filds
clc
add
sbb
test
mov
gs
jg
xlat
in
fbstp
add
scas
jne
loopne
icebp
mov
gs
mov
or
cmc
xor
in
ss
cmp
cmc
cmp
std
pop
mov
and
pop
test
dec
mov
jnp
or
pop
lock
dec
jl
cmp
fidivl
mov
mov
ficomps
fcomip
aaa
shrb
enter
cmp
sbb
int
mov
and
dec
jne
cld
call
out
pop
pusha
push
les
ficoms
out
mov
popa
loopne
ret
cmp
call
cs
and
scas
cmp
pop
xchg
jle
and
inc
scas
jo
lcall
or
arpl
rcrl
sti
mov
ljmp
mov
pushl
add
mov
notb
xchg
mov
cltd
push
rcr
mov
decl
push
or
inc
and
stos
mov
cld
aad
ds
int
ret
jne
inc
call
sahf
inc
outsb
insl
or
fcmovnbe
int
mov
fbstp
ret
inc
sar
decl
jns
adc
and
outsl
setg
mov
mov
aaa
lds
or
jnp
inc
in
adc
movsb
dec
lds
ljmp
scas
enter
mov
pop
ljmp
mov
jbe
call
clc
mov
xor
jmp
cmp
inc
ret
xchg
cmc
sbb
pop
outsb
mov
es
outsb
lcall
lock
out
mov
sbb
fs
push
shll
test
in
idivb
lret
decl
loop
fsubp
push
push
addr16
scas
repz
adc
or
decl
enter
jnp
in
mov
pushf
adc
rcl
stc
into
add
jge
jnp
dec
lcall
add
cmc
mov
mov
idiv
decl
lret
push
push
testb
jns
cmp
pusha
mov
mov
lret
pop
shll
hlt
movsl
test
cmpsb
gs
pop
mov
mov
jno
adc
popa
jmp
xor
fst
and
fwait
ljmp
cmc
ljmp
adc
sarb
push
hlt
shrb
movl
xor
sbb
or
jns
dec
fwait
cli
cmp
inc
test
inc
adc
jmp
shr
lahf
inc
dec
stos
ss
push
mov
push
pop
pop
adc
outsl
imull
sbb
cmp
jg
mov
add
pop
mov
popa
xor
int3
xorb
pop
movq
cmp
pop
xchg
or
xchg
xorb
lret
ja
movsl
mov
orl
rcll
cmovl
fndisi(8087
mov
dec
cmp
cld
in
ja
adc
dec
negb
cmp
fcomip
addr16
fsubl
jo
fcomps
repz
add
mov
mov
cmp
int3
ljmp
lcall
cld
mov
push
lods
in
push
fstpt
lods
call
xchg
adc
sti
or
or
jecxz
fwait
call
ret
jnp
out
adc
ljmp
jo
sub
rcrb
inc
mov
addr16
scas
gs
movsl
pop
scas
popa
clc
repz
idivb
ljmp
cltd
jns
bound
loop
jo
mov
mov
jb
sar
call
sbb
xor
mov
mov
mov
nop
call
mov
cmpsb
and
lock
cli
or
mov
outsl
mov
addb
jo
pop
std
call
sbb
mov
add
outsl
push
and
imul
mov
adc
dec
aaa
adc
xor
inc
stc
cmp
jp
adc
int
sub
ljmp
push
jge
mov
jno
dec
mov
adc
leave
rorb
lcall
or
shrb
cmpsl
pop
andb
sub
stos
aad
cmpsb
mov
sub
push
bound
pushf
cmp
dec
ljmp
cli
popf
dec
ret
jbe
cmp
outsl
inc
imul
fucomip
push
mov
sub
scas
cli
incl
jne
mov
fldl
lea
mov
mov
fnsave
pop
xchg
ret
stos
fucomi
in
jo
mov
dec
shll
sahf
xor
ljmp
xchg
or
shlb
test
push
addb
dec
xchg
pop
gs
mov
lcall
mov
aad
stos
sbb
test
sbb
in
popf
sub
pop
dec
adc
cld
decl
pop
xchg
xor
adc
lock
mov
incl
dec
and
jmp
mov
sub
mov
hlt
xchg
sub
jo
xchg
imul
dec
push
adc
scas
jno
ja
incl
insb
clc
out
mov
lret
jae
cmp
pop
push
call
sub
adc
mov
xchg
popf
push
out
popf
dec
ss
cmp
call
bound
mov
inc
roll
popa
and
cmp
or
std
ret
mov
inc
push
pop
inc
ja
and
pop
out
decl
rorl
fsts
aad
iret
in
out
push
adc
pop
mov
dec
adc
sub
lcall
jg
sti
cld
pusha
clc
int
fimull
mov
stc
test
xor
jge
and
inc
xchg
push
ja
call
cld
xchg
pop
mov
jl
mov
lea
cmp
xor
aas
in
lret
ss
dec
pop
icebp
icebp
and
mov
push
xlat
pop
sbb
cltd
mov
pop
fnstsw
rclb
add
repz
mov
inc
or
stc
add
xchg
je
test
add
cmp
push
adc
ret
lock
incl
xor
jl
leave
push
inc
jno
xchg
jl
jne
movsl
push
or
xchg
ljmp
aaa
aas
sar
fnsave
xor
cld
sub
cltd
inc
in
sbb
jbe
incl
mov
imul
lods
xor
sahf
addr16
dec
lea
mov
adc
fmuls
scas
pop
popf
mov
xchg
aas
cmp
sbbb
lahf
pop
and
jg
ds
lcall
lcall
add
or
push
cmp
jp
dec
cli
sbb
mov
adcl
pop
dec
cmp
push
repz
adc
jg
push
sbb
das
rclb
ret
mov
add
dec
in
xor
aaa
and
addr16
add
aas
inc
sbb
sbb
jmp
inc
jg
mov
cmp
dec
lret
aaa
pop
popa
in
icebp
dec
jg
mov
incl
inc
test
mov
pop
in
in
push
pop
dec
dec
test
icebp
jmp
inc
fisttpl
cmp
jge
jb
call
jae
dec
call
cli
cli
sahf
push
imul
and
and
cli
test
mov
outsl
mov
sub
aaa
dec
xor
sahf
rcll
pop
in
xor
gs
jnp
adc
adc
enter
jmp
roll
and
push
dec
es
mov
into
adc
and
dec
imul
daa
insb
cmp
push
loop
fbstp
lret
inc
pushl
mov
dec
mov
lret
aam
sub
mov
ljmp
rcll
mov
scas
in
jg
xor
movsl
pushf
lea
push
lret
test
rorl
insl
push
mov
mov
ljmp
clc
sub
mov
test
inc
lret
pop
icebp
add
adc
xor
incl
adc
insb
jns
es
stc
sbb
mov
cmp
out
mov
jp
cmp
or
add
aas
imul
jecxz
adc
cmp
pushl
lahf
adc
fists
inc
nop
inc
mov
ljmp
push
popa
pop
mov
dec
jo
adc
jmp
adc
mov
push
sbb
xchg
into
negb
call
mov
mov
cwtl
push
ds
enter
or
ret
jle
xor
cli
cmp
iret
incl
xchg
mov
test
ja
popa
and
insb
push
sbb
scas
cli
jg
aad
sbb
lret
mov
mov
xchg
xchg
ficoms
dec
pop
sbb
xchg
sbb
xchg
push
adc
filds
add
cld
shlb
aaa
cld
incl
enter
fwait
leave
dec
dec
push
daa
xor
sub
pop
out
cli
or
sbb
xchg
lret
call
outsb
sbb
cmp
mov
mov
cmp
cmpsb
fwait
mov
pushl
rorb
sbb
pop
push
insl
rorl
clc
out
cmp
add
lcall
or
xchg
mov
stos
mov
nop
cmpsl
fisttps
sbb
cmp
cmp
or
jmp
xor
lods
mov
dec
inc
and
xor
incl
imul
mov
fisttpl
inc
mov
dec
leave
adc
adc
in
leave
stos
lcall
aas
repnz
xchg
mov
popf
inc
sbb
and
dec
icebp
xchg
and
call
and
andb
and
pushf
or
jne
ss
or
xor
scas
sbb
in
pop
xchg
std
sub
sub
sub
sub
andb
add
ja
sbb
adcl
lods
xchg
jle
test
cmpsl
loopne
test
push
insl
xor
test
sbb
pop
andb
mov
sub
mov
xchg
cmp
test
xor
icebp
xchg
lock
pop
push
cmp
ljmp
shlb
mov
and
or
xor
les
pushl
stc
les
mov
rorb
int
fnstsw
jne
xchg
jmp
lods
mov
mov
pushl
inc
ss
sbb
andl
jg
mov
mov
cltd
lret
sub
pushl
or
jg
push
jle
or
jp
jle
mov
sahf
movsl
pop
xchg
cmp
incl
loopne
cli
mov
lret
lea
and
test
stos
xchg
lcall
decl
lahf
cmp
out
pop
cmpsb
movsb
fisubs
test
sub
lcall
stos
and
pop
out
movsl
and
mov
push
insb
test
aaa
in
into
adc
cmp
pushl
aam
fsubl
pop
test
jmp
inc
int3
jnp
fwait
aad
fildll
mov
pop
ja
sbb
int
jg
sbb
jecxz
int
icebp
cmpsb
js
push
pop
xchg
jg
ret
je
add
mov
pop
pop
xor
fildll
mov
in
ret
into
fs
jns
leave
cmp
inc
es
movsb
push
pop
int
sbb
call
mov
bound
mov
cmpb
ret
or
cmp
int
sub
push
push
sub
sub
fstpl
out
cmc
cmp
cmp
mov
imul
fisttpl
ss
aaa
push
movsl
sub
movsb
mov
inc
negl
stos
push
xchg
and
pushl
es
vfrczps
push
xor
jge
test
pop
lods
addr16
ljmp
pop
jo
andb
add
call
test
ret
jg
loope
jmp
daa
loope
inc
push
arpl
mov
jae
cs
aaa
dec
lret
test
jmp
scas
stos
push
sbb
dec
rcrb
cmp
cmp
popf
lcall
sti
pusha
xchg
xor
add
pop
call
jg
call
mov
xchg
mov
jle
sarl
lret
mov
cltd
sbb
lret
inc
lcall
dec
xchg
loope
mov
adc
fimull
sub
out
insl
push
imul
mov
incl
jp
mov
lock
adcl
xor
push
and
lock
pop
imulb
xchg
and
call
jl
loope
outsl
or
into
ljmp
or
hlt
jae
mov
std
mov
popa
mov
jle
mov
ss
mov
lahf
lcall
lcall
sbb
ss
jecxz
and
adc
iret
cltd
cmpl
pop
cmc
pushl
jno
mov
mov
inc
sahf
mov
cmp
sarb
jl
sti
sbb
cwtl
ljmp
std
jmp
add
mov
adc
mov
cmp
push
cld
incl
call
lcall
mov
imul
incl
and
das
adc
repz
lds
jns
pop
pop
adc
fs
and
pushl
pop
mov
fimuls
aad
incl
fs
sub
push
xchg
dec
mov
call
call
cmp
decl
popf
or
pop
jmp
xchg
pop
and
mov
frstor
fsubrl
out
ljmp
ljmp
dec
and
orl
fldl
arpl
loopne
jge
xchg
mov
lcall
cld
sahf
push
push
lahf
test
push
movsb
xchg
daa
rcrl
lcall
and
fstl
fisubrs
mov
lea
push
pop
hlt
xor
inc
pop
sub
lcall
mov
jge
int3
pop
mov
call
inc
pop
jno
jae
out
mov
mov
cmp
addr16
inc
xchg
dec
repnz
xchg
iret
push
adcl
xchg
jl
add
les
sahf
fisubrl
rcr
and
out
pop
leave
push
pushl
lds
cmpsb
out
jo
ret
jge
ja
mov
ss
test
call
pushf
sbb
scas
lods
sbb
cmpsb
and
sub
fistps
xor
xchg
mov
test
lea
push
mov
sub
pop
addr16
scas
aad
sbb
dec
lods
push
inc
sub
stos
sahf
fs
idivl
push
lock
ds
mov
in
adc
nop
sub
pop
jg
and
push
lcall
les
mov
pop
mov
cs
adc
decl
push
loope
lret
and
sbb
popf
into
and
sub
push
int3
push
dec
xor
pop
sahf
lds
xor
or
jl
icebp
pop
cmp
pop
decb
cmp
repz
decl
into
lret
push
hlt
inc
ffree
bound
sbb
push
loopne
ljmp
incb
sub
test
push
inc
sub
addr16
aaa
decl
out
je
xchg
mov
shll
cmpl
daa
or
or
inc
inc
jne
push
lcall
lret
mov
les
mov
lods
cmc
push
clc
ljmp
ret
xor
mov
repz
add
add
insl
mov
inc
stc
xchg
push
cmp
incl
dec
out
pop
mov
xchg
in
pop
push
addr16
adc
push
decl
cmp
adc
pusha
nop
or
or
sahf
adc
dec
ret
lock
outsb
mov
and
sar
push
adc
daa
in
push
loopne
test
addr16
cmp
lcall
sti
push
scas
xchg
xor
mov
stc
mov
mov
popa
push
cli
incl
insb
int
pushf
cmpsl
xor
test
adc
add
jnp
lea
cmp
or
in
jg
jmp
int3
inc
mov
sub
pop
sbb
icebp
aas
mov
mov
xchg
clc
outsb
pop
jmp
les
imul
int
clc
mov
inc
test
jnp
or
sarb
cmp
mov
cld
jl
inc
mov
ss
mov
sbb
push
xchg
rcr
jg
xchg
lcall
pop
dec
cmpsb
idiv
xchg
or
out
jl
loop
mov
jmp
jle
ljmp
and
idivb
shlb
add
pop
pusha
lcall
loop
add
add
dec
ss
push
add
mov
test
jne
test
mov
sahf
cmp
and
mov
jl
in
and
or
rclb
xor
lcall
adc
xchg
push
xchg
outsb
and
push
rolb
mov
pop
shrl
outsb
xchg
add
or
dec
cmc
xor
adc
idivb
lods
insb
shr
cltd
mov
icebp
mov
in
mov
push
mov
sarl
test
xlat
pushf
icebp
or
inc
mov
clc
sar
xchg
clc
fcoml
xchg
mov
xchg
hlt
pop
lcall
test
clc
xchg
sub
mov
jbe
insb
jmp
xchg
xchg
mov
push
aas
dec
ljmp
lcall
mov
outsb
pop
jle
movsb
call
fsubs
inc
int
xchg
sahf
cmp
pushl
cmc
popf
out
bound
in
mov
pop
ret
pusha
adc
dec
cli
in
mov
and
icebp
push
mov
frstor
xchg
mov
sbb
int3
mov
jmp
pop
mov
mov
inc
mov
and
ret
sarb
sbb
mov
lcall
mov
sub
rep
xchg
adc
fcoms
cmpb
mov
arpl
movsl
sarb
adc
pop
xchg
cmp
inc
decl
cmp
xchg
cmp
sub
movsb
jle
pop
mov
loopne
pop
xor
cld
fldt
mov
pop
xor
shrl
lea
jo
gs
cmp
dec
mov
ret
cltd
sub
mov
outsl
jne
cs
mov
fs
decb
stc
dec
repnz
mov
pop
and
cmp
adc
imul
outsb
cmp
sar
xchg
jmp
loopne
mov
lds
inc
cmp
pop
cmc
in
arpl
add
pushl
add
jnp
fdivs
dec
pusha
std
jl
mov
dec
insb
mov
out
outsb
test
jae
mov
or
fdivs
sub
repz
mov
sbb
jne
push
jle
xchg
jns
ja
dec
push
push
fsincos
push
jg
dec
or
adc
sbbl
mov
in
xchg
ds
pop
xor
and
stos
test
mov
ljmp
outsb
gs
cmpb
sbb
jecxz
dec
pop
leave
jb
push
inc
or
or
pushl
jo
idiv
mov
lahf
stc
sbb
jl
mov
insl
inc
sub
std
pushl
push
fwait
adc
adc
sub
mov
adc
in
push
pusha
mov
xor
push
push
in
pushl
mov
fsts
jle
inc
fcoml
push
pushf
cmp
sbb
sbb
ljmp
decb
mov
sub
sbb
cmp
jg
hlt
repz
ret
mov
adc
jae
nop
test
jmp
add
or
sbb
fbld
push
mov
mov
lahf
fsubr
jge
xchg
xchg
gs
lock
cmp
or
mov
aad
cmpsl
dec
push
cmp
xor
xor
mov
jbe
dec
cmc
jge
outsl
xor
add
ss
popa
mov
sbb
clc
push
inc
cmovae
stc
jge
icebp
cmp
pusha
jne
popa
and
sahf
mov
sbbb
popl
incl
or
clc
popa
jge
mov
loope
mov
lea
mov
int
ja
incl
movsb
jmp
ret
sub
shlb
out
pop
imul
jmp
and
xchg
aad
xchg
sub
mov
ljmp
pop
mov
jmp
dec
lock
sbb
fisubrs
nop
sub
mov
cmpsb
xchg
pusha
mov
xchg
out
add
jmp
cmp
sahf
xchg
mov
addl
lcall
lods
cmp
aam
sti
bound
es
imul
xor
clc
xor
xchg
sub
pop
push
call
rcll
jbe
lahf
pop
or
mov
in
mov
inc
and
fistpll
iret
pop
cmp
sti
fdivrs
dec
jo
lcall
mov
clc
push
inc
inc
xchg
in
fnsave
mov
cmovb
or
enter
jge
mov
pushl
add
icebp
xchg
mov
pop
inc
and
out
add
pop
outsb
inc
add
inc
pop
cli
hlt
orl
rcrl
scas
sahf
jp
push
pop
mov
jno
mov
ret
jmp
shl
stos
jbe
dec
inc
cmc
bound
xchg
cmp
xor
push
jo
or
cmp
inc
jbe
sti
cs
mov
cmp
inc
inc
xchg
push
ss
push
je
popa
xor
sub
clc
addl
xchg
int
and
adc
mov
mov
outsb
fimuls
dec
decl
mov
cs
push
sbbb
loop
sbb
pushf
xchg
ret
loop
adc
dec
dec
xor
mov
add
aad
jns
xchg
int3
push
cmp
out
sub
xor
jl
adc
push
aad
xor
hlt
dec
fisttps
mov
imul
adc
test
lcall
add
fstpt
dec
push
aad
es
jg
pusha
cld
jecxz,pt
and
movsl
sub
imul
incl
add
in
notb
iret
cld
or
jnp
das
jae
insl
test
sub
call
ljmp
adc
movsl
ret
nop
lret
aas
lret
sub
mov
es
jg
or
mov
cltd
dec
sbbb
xchg
inc
lock
mov
push
xchg
mov
ret
stc
jnp
pop
push
fs
push
decl
xor
mov
call
clc
ret
stos
pusha
jl
cwtl
loopne
dec
test
mov
sarl
scas
dec
sbb
jg
incl
jo
lret
mov
adc
dec
jg
jp
icebp
scas
sbb
outsl
lahf
sar
jmp
popf
sub
fdivs
ja
sub
adc
test
xor
pop
cmp
popl
xor
lds
mov
call
xchg
pop
pop
cmp
sbb
dec
or
or
psadbw
cmc
out
aam
pushl
push
fs
roll
add
ficoms
sub
jg
imul
sbb
adc
xchg
in
and
xor
mov
mov
sbbb
dec
inc
mull
inc
fcmove
mov
mov
mov
sbb
leave
dec
ret
xchg
rol
std
sar
pushl
push
mov
add
and
push
push
scas
imull
cmp
sub
ljmp
xchg
ljmp
mov
and
lods
xchg
mov
insl
jl
std
decl
mov
repz
inc
xchg
hlt
in
add
cld
ljmp
mov
ja
mov
hlt
fisubs
ja
mov
push
mov
in
jmp
add
mov
rol
popf
fcoml
das
and
fcmovb
loop
cld
xchg
aaa
std
jmp
mov
in
les
push
xlat
out
jge
or
shlb
jg
lcall
pop
faddl
sbb
enter
in
es
popa
decl
mov
dec
dec
out
pop
dec
xor
inc
loop,pn
and
pop
lcall
mov
das
dec
jle
movsb
fdivl
test
jg
clc
add
loop
lods
sub
xchg
lcall
cmp
mov
ja
iret
and
cltd
jl
popf
adc
jecxz
pop
cmp
das
inc
hlt
lcall
xchg
and
sbb
fwait
pop
dec
xchg
pushl
es
xor
mov
repnz
shlb
mov
pop
dec
cmp
inc
fcomip
pushl
and
xchg
jae
mov
xor
loop
xor
cli
incl
sub
shll
pop
fwait
jp
std
jae
lods
xchg
loopne
lret
cmpsl
xor
enter
call
inc
loope
jl
xchg
cmp
loopne
mov
shll
sub
push
lcall
imul
dec
test
lret
mov
js
push
mov
int3
icebp
rcll
scas
fnstcw
lahf
mov
ljmp
xchg
xlat
jecxz
stos
and
ja
push
push
inc
push
or
mov
call
mov
scas
or
cmpl
fistpl
enter
cli
sub
push
inc
hlt
mov
pop
int3
mov
pmaddwd
adc
mov
call
int
cmpxchg
jae
pop
aam
subl
and
inc
loopne
mov
popa
or
inc
pop
sbb
dec
mov
sub
ss
shl
sahf
iret
mov
jmp
mov
dec
and
in
inc
mov
xor
out
lahf
into
xor
mov
popa
stc
outsl
mov
dec
add
fcoml
out
xchg
mov
mov
lds
and
scas
sbb
xchg
sub
add
mov
int3
in
push
cmp
inc
mov
stc
popf
call
mov
mov
aas
pop
sub
into
ss
push
pop
insb
lods
mov
dec
mulb
rclb
cmp
mov
mov
cltd
push
jg
inc
ret
sub
aad
cmp
dec
jl
jnp
inc
mov
gs
cmpsb
jmp
shl
cmp
xchg
xchg
ror
dec
leave
ja
fnstenv
fnsave
sbb
lods
mov
cltd
ja
inc
insb
test
test
and
push
pop
push
push
and
mov
lcall
pop
adc
inc
pop
jb
insl
jge
jno
loope
inc
in
aas
add
jmp
mov
mov
lods
mov
mov
js
pop
mov
or
int
inc
mov
aad
outsl
clc
decl
push
push
push
sbb
sub
inc
scas
inc
and
xchg
or
in
mov
std
ret
cmp
mov
sbbb
je
orb
pusha
fcompl
add
jns
loopne
cmovs
test
lcall
fwait
inc
and
push
and
mov
scas
xchg
in
stos
ret
mov
cmp
fisttps
or
fwait
rorb
and
or
and
call
inc
lds
pop
push
mov
and
in
repnz
std
jg
inc
movsl
pop
pop
loopne
fwait
sub
clc
pop
mov
jl
and
incb
add
hlt
mov
je
cmc
aaa
cld
add
insw
inc
clc
push
and
idiv
fildll
ret
mov
adc
lcall
insb
in
insb
push
test
push
cld
pushl
ja
pusha
sbb
in
pop
fisubrl
and
lds
es
pop
xchg
mov
inc
push
rorb
inc
xchg
sbb
xchg
movsb
cmp
incl
and
lds
cmp
mov
popa
jno
mov
dec
mov
xlat
nop
lret
jg
decb
inc
std
sub
cmp
mov
and
cltd
jbe
cwtl
xchg
lods
lahf
jno
outsl
adc
aad
push
inc
filds
pushl
and
push
and
pop
adc
pop
mov
testb
imul
jmp
int3
mov
shlb
and
add
push
ljmp
loopne
jae
mov
sub
fucomi
stc
add
adc
cwtl
daa
cmpsl
mov
jmp
inc
inc
cmp
jns
add
ss
or
lcall
ret
cmp
ljmp
mov
fst
les
nop
es
aaa
dec
xchg
nop
mov
rcll
xchg
mov
jmp
xor
fimuls
push
sub
add
in
in
lcall
xor
dec
xor
and
pop
inc
pop
lahf
mov
inc
pop
lcall
incl
in
scas
mov
hlt
xchg
push
xchg
adc
mov
loop
mov
out
insb
push
cmp
mov
jbe
mov
dec
fcomps
or
jo
jl
insb
popa
cmp
mov
lcall
dec
in
push
into
rorb
orl
ja
mov
inc
in
es
ror
jg
jle
add
mov
rorb
nop
mov
arpl
lret
js
pop
mov
int
mov
sub
inc
outsl
dec
maskmovq
negl
adc
jnp
loopne
or
or
push
adc
in
inc
xor
jmp
ljmp
xchg
lock
enter
push
out
stc
inc
cmp
cmp
push
rorb
or
mov
mov
aad
inc
fdivrl
lcall
lcall
or
cmc
push
cmpsb
scas
cmp
push
lcall
mov
shll
jmp
std
ds
fistps
pop
jno
ret
mov
arpl
incl
xchg
shl
cli
out
outsl
jl
cmp
jns
mov
adc
sti
pop
cmp
jg
lcall
mov
dec
mov
cmp
mov
sbb
push
mov
scas
sub
call
mov
or
pop
jbe
imul
xor
jg
ror
stc
lret
xchg
jge
push
daa
lods
test
in
es
mov
loope
or
mov
pop
imul
fbstp
pop
push
cmp
test
mov
cli
push
test
repz
pop
loopne
mov
lea
cli
push
mov
stc
les
test
inc
xor
stos
cli
or
addr16
call
sbb
sarl
mov
jnp
or
dec
in
cltd
inc
mov
sbb
out
out
push
pop
lahf
cmc
shll
push
scas
bound
inc
sbb
pop
xor
jno
add
outsl
mov
inc
or
call
mov
xor
sub
divps
es
rorl
sbb
clc
ljmp
iret
cmp
sub
mov
cmp
jmp
loopne
int3
sub
stos
in
jmp
call
sti
dec
mov
xchg
and
rcr
mov
ffreep
and
xchg
sbb
arpl
fsubl
mov
pusha
jge
ret
insl
into
out
sbb
pop
pop
aad
or
mov
sahf
mov
inc
rolb
sbb
xor
push
lcall
nop
xchg
mov
loop
iret
add
ficoml
shlb
fcomip
jg
inc
mov
mov
or
jo
mov
and
sub
add
cmpsb
sbb
test
test
stc
xorl
pop
decl
push
clc
add
pop
lds
idiv
imul
jl
and
dec
xor
stc
pop
xor
shlb
ficomps
pop
fwait
ljmp
mov
mov
push
repz
push
scas
in
cmc
rcr
filds
mov
jl
das
pop
xchg
mov
popf
pop
pop
shl
jnp
nop
gs
cmp
aaa
jmp
xor
xlat
push
jle
mov
subl
add
cmp
jmp
stos
adc
jbe
xlat
cmp
fnstsw
mov
adc
popa
dec
jns
add
pop
insl
add
popf
fiaddl
mulb
orb
lahf
and
fisttps
sub
inc
gs
icebp
test
stos
push
hlt
je
jmp
jmp
rclb
stc
dec
sbb
sbb
ret
test
lcall
decl
testb
xchg
iret
push
arpl
pop
int3
in
mov
nop
inc
cld
das
cmp
pushf
ljmp
add
xor
jae
movsl
xchg
mov
in
pop
xchg
int3
iret
enter
je
mov
inc
or
fisttpll
pusha
xchg
fs
jnp
adcl
mov
and
jmp
dec
pop
mov
test
mov
fcomip
jg
push
icebp
fwait
es
mov
rolb
icebp
or
sbb
or
xchg
jne
push
push
jno
add
call
sub
lock
stos
and
outsb
dec
mov
mov
xor
xor
test
fwait
lock
jecxz
roll
mov
fwait
lods
inc
or
adc
lcall
or
popf
pop
push
stos
pop
push
iret
sti
jg
jno
or
pop
imul
jbe
pop
add
cmp
pop
gs
pop
insb
into
iret
insl
mov
xlat
shrb
jmp
inc
decl
and
jne
sub
pop
in
aad
cltd
dec
cld
mov
insl
pop
and
jb
ljmp
mov
or
xor
xchg
jle
dec
das
lods
fcomp
xor
out
xchg
jmp
mov
shll
ljmp
stc
push
xchg
cmp
or
xchg
nop
add
ljmp
or
pop
ljmp
clts
shlb
repnz
mov
fwait
jo
gs
daa
and
jb
movsl
xchg
incl
out
jo
adc
cld
rcr
fs
fcomip
pop
std
xor
push
xor
pop
lret
imul
aam
decl
lds
int
mov
push
imul
sub
out
sbb
sub
adc
xchg
out
popf
push
pop
data16
lods
sub
and
mov
lods
es
jecxz
popa
rol
iret
mov
clc
pop
mov
sarb
cmp
sub
idiv
ja
pop
rol
or
fcmovnbe
mov
mov
js
mov
add
adc
dec
push
or
cmpsl
in
shlb
call
mov
shlb
leave
shrl
adc
int3
mov
adc
sub
lcall
or
les
adcb
push
test
and
and
ss
ljmp
pop
mov
stos
jle
xchg
push
push
pop
xchg
jae
ja
pop
pushf
mov
mov
data16
pop
out
mov
cmp
sbb
adc
inc
mov
data16
stc
fdivrs
jg
std
cmpsb
inc
clc
int
jg
mov
addr16
sar
cmp
push
mov
fcomps
mov
push
sub
xor
cld
xlat
add
mov
lret
and
out
pop
decl
mov
pop
fwait
mov
loope
sub
sarl
in
les
ss
mov
testb
and
pusha
mov
or
dec
sub
cli
das
stc
out
jge
andl
lret
test
ljmp
inc
push
aam
and
pushl
std
ljmp
adc
adc
xor
lods
leave
insl
cs
ljmp
imul
mov
push
arpl
adc
bound
shl
and
fbstp
or
and
mov
rcll
xchg
scas
insl
mov
call
shll
in
lods
fcomip
inc
stos
pop
sub
push
sub
and
out
pop
mov
mov
mov
subb
std
mov
repz
fidivl
push
loopne
cld
jg
mov
cltd
sub
cli
je
xchg
stc
daa
out
mov
inc
mov
call
push
daa
inc
add
ljmp
insw
scas
push
pop
mov
lcall
inc
out
jbe
out
add
out
xchg
lcall
jb
pop
xor
cmp
dec
fisttps
jmp
cwtl
cmpsb
pusha
dec
sub
xchg
add
cbtw
push
jns
adc
add
sbb
loope
jle
add
mov
inc
call
mov
and
mov
shrb
pop
ja
push
leave
adc
and
jnp
fnstcw
xchg
and
lods
andb
pop
andb
jge
dec
outsb
xchg
jbe
rorb
or
icebp
push
jecxz
add
fistl
cmc
mov
lods
xchg
jg
push
aaa
push
xor
lods
pop
ret
iret
popf
inc
sar
inc
mov
mov
xchg
push
loopne
mov
add
pop
clc
mov
popa
push
pop
add
fmul
lods
xchg
lock
fidivrs
and
mov
jg
pop
inc
lret
sub
shrl
push
mov
push
int
sbb
xor
mov
jne
enter
andl
jbe
jae
pop
push
cmp
movsb
or
lret
stos
mov
fwait
mov
arpl
jp
test
lcall
jmp
mov
xor
jbe
dec
xlat
test
push
shrl
flds
mov
mov
jns
sahf
cmc
dec
sbb
inc
mov
sub
incb
enter
dec
mov
mov
push
ljmp
push
mov
filds
mov
ljmp
in
add
pop
xchg
iret
sbbb
js
shll
lcall
mov
sbb
xchg
push
add
or
stos
or
sub
rorl
jp
aas
popf
push
out
xchg
lea
iret
lret
or
pushl
push
stos
icebp
rorb
jbe
xchg
jmp
mov
mov
insl
repnz
fiaddl
cmp
xor
adc
fists
push
ror
sub
mov
scas
sarl
inc
jnp
repz
mov
jns
shrl
jle
notl
push
mov
mov
mov
rcrb
adcl
inc
lret
loope
fdivl
dec
push
or
lcall
fnstsw
out
mov
mov
call
and
rcr
loop
push
in
aas
mov
xor
adc
inc
int3
shl
idiv
jg
add
mov
adc
sbb
jo
mov
push
hlt
dec
push
pop
es
jo
nop
add
adc
movsb
cmpb
hlt
or
cmp
or
decl
sbb
mov
ss
std
out
mov
ret
call
cld
cmp
test
inc
popa
js
adc
mov
clc
cmpsl
adc
int
std
jl
xchg
test
test
loope
sub
jle
mull
popa
inc
mov
xchg
ret
xchg
call
mov
mov
push
das
imul
pop
fnstenv
jno
dec
add
incl
mov
cmpsb
inc
mov
popf
jbe
mov
das
popa
pop
scas
int3
rol
gs
jg
dec
add
call
int3
push
out
icebp
jbe
idivl
push
fisttps
into
test
clc
aaa
int3
cmc
mov
xor
jge
hlt
dec
mov
xchg
cltd
daa
lods
ja
out
pop
ljmp
sbb
call
ja
ss
icebp
jp
scas
loopne
sbb
xchg
mov
cmp
scas
gs
fistpl
dec
add
inc
movsb
jnp
data16
fidivrs
stos
out
jl
out
nop
fldl
xorb
les
int3
das
mov
jge
dec
pop
add
push
inc
int
in
outsb
sub
jmp
cwtl
imul
mov
sahf
jg
xor
xchg
imulb
cwtl
ljmp
push
ja
sub
fistpll
lret
daa
fdivrp
push
jne
fimull
rcrl
repnz
sbb
fsubrp
decl
fidivs
repnz
push
mov
ret
add
mov
xor
out
sbb
jb
jcxz
pop
out
and
push
mulb
ds
repnz
decl
addr16
cmp
clc
dec
test
lret
or
call
sahf
gs
sub
mov
rolb
inc
mov
int
xchg
mov
sar
out
push
push
mov
push
push
iret
push
pop
in
int3
into
cmp
mov
jg
jae
clc
push
mov
int3
les
mov
push
pop
jmp
xchg
jp
pop
mov
mov
xchg
cli
pop
pop
cmc
jg
gs
int3
xchg
add
aam
movsb
out
addl
das
imul
ljmp
insb
sbbl
dec
jecxz
mov
pop
push
mov
add
movsl
inc
cmp
decl
adc
pop
pop
jbe
fiaddl
jnp
mov
lret
adcl
out
cli
out
stc
push
ljmp
jmp
cltd
sbb
sub
ljmp
sub
inc
fucomp
xchg
in
push
daa
jae
xchg
mov
cmp
jae
inc
add
add
sbb
mov
lds
ret
cmpl
or
and
repnz
dec
and
cwtl
pop
or
std
or
inc
fcmovnu
cmp
movsl
pop
xchg
adc
mov
and
mov
and
jmp
xor
mov
pop
aad
cmp
sbbl
mov
xchg
ja
mov
neg
xor
or
stos
mov
pushl
or
jecxz
pop
lods
aam
jle
cld
popa
push
leave
push
in
scas
repz
fcomip
push
call
sbb
movb
clc
js
out
cmpsb
gs
pop
mov
or
jnp
add
les
push
enter
push
stc
lock
aas
in
mov
out
nop
mov
imul
sbb
cmc
pop
fdivs
mov
js
mov
push
decl
dec
mov
dec
or
mov
push
xchg
cli
in
sub
in
gs
adc
cmp
sbb
xor
hlt
insl
or
add
mov
mov
jg
jne
ss
lahf
pop
sbb
and
bound
insb
mov
lcall
fwait
sti
enter
and
enter
iret
bound
nop
fsub
bound
cmc
cld
data16
daa
mov
shlb
fdivs
inc
sarb
out
clc
ljmp
fisubs
dec
in
mov
hlt
sbb
insb
ljmp
push
loope
jmp
sarl
lret
das
cmp
jmp
out
imul
push
and
popa
scas
cmpsl
test
incl
push
push
pushf
jno
dec
xor
sarb
cmp
dec
xchg
mov
pop
jmp
jecxz
push
es
test
mov
insl
lds
mov
call
push
sbb
jge
leave
mov
daa
mov
movsb
pop
adc
decl
adc
ret
sbb
or
inc
stc
xor
pusha
scas
enter
test
adc
jl
icebp
out
mov
int3
jmp
dec
mov
mov
jne
adc
lahf
fadd
aas
fdivrs
pop
pushl
cld
fcoms
xor
mov
cltd
pop
push
dec
push
int3
ret
ljmp
negl
jmp
sub
js
push
jecxz
rol
xchg
out
fucomip
test
cmp
ds
jle
dec
in
call
repnz
movsl
pop
dec
mov
inc
adc
sub
in
incl
icebp
jecxz
lock
mov
sarb
push
aad
imul
insb
mov
fwait
mov
cmc
sbb
out
inc
mov
popf
test
pop
rclb
sub
sbb
decl
jl
xchg
ljmp
jae
jb
cmpsb
pop
test
mov
xchg
mov
rcll
aad
mov
add
sahf
cmp
les
fcmovb
xchg
call
lcall
rcl
inc
xchg
mov
mov
cmp
add
xor
andl
std
repz
inc
loopne
int3
cmp
out
sub
loopne
scas
mov
jno
add
and
lahf
sbb
sbb
push
sti
mov
mov
mov
mov
mov
cmc
push
out
xchg
mov
xor
inc
cltd
jmp
cli
cltd
mov
jo
scas
push
out
jmp
mov
shl
xadd
in
imulb
aaa
dec
mov
mov
dec
jne
movsb
pmaxsw
push
push
fbld
aaa
data16
pop
mov
mov
stos
loope
jmp
mov
shrb
cs
in
stos
test
popa
mov
icebp
ljmp
adcb
mov
scas
push
sysenter
repz
mov
mov
inc
adc
hlt
cmp
push
int
sub
jno
jg
fcomip
incl
and
aas
ss
scas
mov
push
fnstsw
decl
push
cmp
je
push
sub
sub
mov
dec
add
clc
jmp
inc
insb
mov
popf
repnz
mov
and
fildll
adc
dec
aam
pop
pop
xor
xchg
jmp
fcoms
ds
xlat
cmp
pushl
jmp
iret
xor
arpl
xchg
aas
jmp
jmp
pushl
cld
pushl
loope
cli
cmp
lcall
and
mov
hlt
lock
add
adc
jns
stc
mov
lcall
mov
inc
dec
xchg
adc
outsl
out
out
adc
push
cmp
lods
movb
jb
sbb
pop
gs
aas
dec
nop
xlat
fprem
jmp
rcll
stos
mov
clc
adc
fwait
cld
iret
lcall
cmp
xchg
push
and
test
cli
mov
mov
ss
stos
jo
or
mov
aas
fldl
push
or
jp
out
out
in
imul
in
bound
les
dec
xchg
mov
js
loope
cld
dec
fwait
clc
lret
loop
cmpsl
mov
jb
jg
dec
test
xchg
dec
ret
fiadds
insb
sbb
xchg
cmpsl
ja
dec
aaa
cld
sbb
out
lds
mov
jne
scas
cs
test
pop
pushl
mov
sbb
shlb
dec
mov
ss
ja
imul
decb
xchg
sub
movsl
jge
mov
jae
je
push
jle
cltd
inc
jl
adc
cld
bound
pcmpgtb
pop
subb
add
lcall
insl
sbb
dec
jb
or
xor
xchg
mov
pusha
sarb
es
lcall
jl
pop
sbbb
push
icebp
and
dec
jle
cmc
pop
push
clc
or
pop
dec
sti
fists
dec
orl
jbe
cmpsb
sub
sbb
fiadds
cld
ljmp
inc
sti
aam
and
fucomip
pusha
cmp
push
sub
jne
pushl
clc
sbb
pop
sub
daa
mov
out
mov
xor
incl
dec
inc
push
xor
fstps
ret
dec
lods
ret
push
push
sbb
call
jmp
repz
mov
outsb
jg
and
adc
aad
aad
ja
cmpb
call
imull
cmp
cmp
dec
imul
pushl
iret
dec
imul
repnz
mov
lcall
fimull
jo
jg
jg
push
sub
or
gs
mov
adc
addb
int3
push
enter
pushl
adc
ds
cmp
fwait
sbb
mov
lahf
leave
or
dec
mov
call
insb
sbb
mov
dec
pop
and
outsb
lods
into
dec
sub
xchg
js
cmc
cmp
jmp
xchg
sbb
add
add
clc
shrl
and
mov
fiadds
shlb
fwait
lock
mov
mov
sub
mov
push
bnd
sar
pop
lock
fldcw
es
push
xor
aam
out
ret
mov
incl
jb,pt
addr16
rclb
in
dec
xor
sbb
ljmp
push
jge
jnp
aad
in
ficoml
xchg
out
cli
dec
aad
daa
sbb
cld
and
push
pop
push
push
jl
push
pop
clc
pop
jp
and
mov
sub
sahf
lret
loope
into
es
push
rorl
clc
cmp
xchg
fstps
mov
push
repz
cmp
clc
jg
fs
enter
dec
jmp
outsl
fdivrs
sar
pushl
lret
push
or
call
insb
mov
decl
scas
inc
dec
xlat
pop
shr
or
repnz
push
pop
pop
push
test
icebp
ljmp
aaa
push
sbb
push
gs
jg
in
jns
sti
hlt
and
push
adc
aad
push
or
sub
sbb
pause
nop
sahf
push
cmp
cwtl
cmp
xor
cmp
dec
scas
pop
inc
es
cmp
mov
js
cmpsl
mov
ljmp
mov
in
add
jg
outsb
push
mov
fidivrl
mov
insb
mov
add
gs
dec
in
outsb
out
leave
lods
pop
loope
fs
decl
inc
cs
imul
in
sub
xor
daa
negl
das
aam
add
ljmp
popa
mov
jp
mov
fs
fstpt
out
sbb
mov
insl
ficoms
pop
push
xchg
jmp
add
jno
push
aam
or
push
popa
frstor
loope
insl
mov
push
push
ljmp
rcrb
adc
gs
xor
sub
cmpsb
mov
dec
sub
mov
inc
out
dec
stc
int
adc
out
mov
mov
jle
dec
sar
incl
mov
and
mov
mov
pop
pop
gs
add
mov
stos
pusha
das
movsl
pcmpgtd
add
xor
mov
call
cmp
test
icebp
lret
call
stc
inc
rcl
bound
test
incl
in
mov
push
std
pop
rcl
aam
lcall
sub
push
jmp
or
lret
cmp
fimuls
int3
sbb
lahf
in
sub
jmp
cmp
lock
push
pop
and
pushf
adc
fdivl
int3
cltd
mov
xor
fcomip
jo
jbe
insb
and
dec
out
mov
sahf
ret
cmp
decl
or
test
movsl
lea
repz
cmp
cli
and
mov
movsl
icebp
decl
shlb
mov
sub
mov
fidivrl
jno
insb
lcall
sti
movsl
aaa
pop
lahf
pop
movsb
mov
xor
sbb
fld
test
popf
adc
dec
jae
jecxz
mov
lcall
rorl
adc
adc
mov
or
scas
dec
adc
inc
stos
or
call
pop
sub
ds
jle
ret
test
lock
or
push
sub
out
push
mov
add
pushl
and
sub
add
jb
cwtl
push
rcr
hlt
mov
xchg
subb
mov
mov
les
into
adc
jg
stos
adc
mov
push
pop
cmpsb
or
or
xor
inc
push
mov
je
and
mov
outsb
mov
push
lret
sbb
in
fwait
pusha
inc
xchg
dec
les
cmpsl
lcall
movsb
xorb
fcomps
js
test
cmp
nop
mov
scas
xchg
das
jle
fnstcw
lcall
pop
or
shll
movsl
push
cmp
addr16
enter
or
imul
push
call
call
or
aaa
mov
lret
adc
ret
or
pop
stos
and
pop
cmpsl
mov
push
mov
mov
xorl
imul
ljmp
push
cmp
xor
jge
inc
cmp
inc
stc
and
loopne
mov
or
cli
test
inc
insl
call
outsl
cmp
aad
or
mov
inc
push
xlat
or
out
sub
test
ret
fwait
sbb
mov
xchg
insb
sub
cli
je
cmp
cltd
jmp
popf
into
and
xor
xchg
je
jnp
mov
testl
dec
push
push
xchg
repz
sbb
cmp
loope
mov
mov
js
xchg
int3
pop
mov
and
incl
sub
mov
iret
or
cmp
lahf
enter
inc
sahf
pushf
pop
loopne
jmp
xor
or
aas
pop
ret
lock
mov
incl
jae
xor
test
or
adc
outsb
sbb
mov
subb
fidivs
sbb
sub
push
popa
fidivrl
frstor
in
icebp
add
clc
pop
xchg
out
popa
cltd
shl
mov
loope
push
pop
dec
pop
loopne
outsb
dec
orl
in
int3
lcall
xchg
shl
mov
adc
or
cli
mov
push
add
adc
lret
mov
adc
ret
aad
ret
ja
or
scas
addb
into
lcall
cltd
sbb
pushl
dec
and
cli
dec
shll
stos
or
push
mov
sbb
mov
push
mov
push
mov
jmp
rcl
sub
push
and
sbb
call
inc
jbe
leave
scas
loope
and
dec
mov
sub
es
cmp
out
xchg
mov
mov
jb
mov
lock
ja
jae
mov
push
cs
and
stos
sub
pushl
xchg
into
fdivr
iret
adc
inc
cltd
orl
leave
pop
in
std
and
repnz
dec
push
cwtl
and
stos
dec
movsl
mov
push
dec
fldl
cmp
xor
movsb
xor
das
cmpsb
test
xlat
aad
pop
fdivl
pushl
aad
js
pop
cmp
jle
adc
test
decl
add
mov
les
and
push
xlat
stc
mov
test
jno
push
mov
decl
or
pop
dec
test
cmp
sbb
fs
mov
lcall
hlt
fwait
jle
or
out
sbb
fdivs
mov
xorb
lahf
call
aas
sub
loopne
xchg
ljmp
push
int3
adc
sar
push
add
add
shlb
mov
stos
mov
aaa
shlb
add
add
add
mov
xchg
jp
adc
dec
add
shl
lods
dec
add
out
rcrb
and
stc
stos
iret
jns
pushl
mov
stos
fmull
outsl
cltd
shrb
add
mov
call
push
insl
xchg
push
out
dec
mov
sbb
sti
repnz
mov
cmp
sbb
ljmp
xor
sbbb
add
xchg
arpl
inc
lds
div
pop
xchg
mov
clc
push
mov
lods
into
jbe
jmp
pop
pop
add
repnz
mov
call
into
sbb
push
inc
pop
lret
pushf
stc
adc
push
data16
push
pop
js
flds
adc
inc
cmpl
stc
movnti
in
push
fadd
aaa
decl
mov
inc
mov
add
mov
and
call
inc
xchg
inc
repz
jo
jbe
pop
push
sbb
sbb
jg
cmp
cld
inc
jmp
ficoms
les
js
mov
push
fsubrl
popa
jns
and
stos
cs
jmp
bound
into
and
xchg
js
outsl
shlb
movsb
push
mov
adc
cli
push
loopne
ljmp
xchg
enter
xchg
ret
adc
aas
mov
cld
leave
lret
cmp
stos
inc
fs
aas
mov
orb
xor
test
aaa
scas
fisubrl
sahf
mov
out
inc
das
aas
xchg
lahf
ds
das
lock
lret
mov
jmp
test
push
push
inc
mov
ja
movsl
add
and
pop
ret
xor
mov
cmpsl
out
jle
and
hlt
add
xor
shll
add
cmpsb
jae
add
jl
dec
lods
shrb
lahf
mov
jmp
scas
roll
jns
inc
pop
pop
push
xchg
sarl
out
mov
push
cmp
dec
cmp
in
cmp
sub
test
push
or
pusha
xchg
decl
add
hlt
jo
lret
xchg
outsb
xor
dec
aas
call
std
cmp
mov
lds
mov
in
dec
cwtl
in
push
jns
lcall
mov
or
in
jmp
cmp
dec
push
loope
negl
lcall
int3
and
inc
sbb
xchg
and
mov
ds
sti
aaa
ljmp
pop
pop
outsb
ljmp
sbb
rcll
inc
mov
lret
jmp
cltd
jo
pop
xor
int
sbb
js
jle
push
loopne
out
mov
je
mov
xchg
fimuls
clc
call
or
imul
rcl
sar
enter
cmpsl
bound
xchg
test
fwait
adc
shlb
mov
and
cmp
push
in
outsl
scas
pop
xor
shlb
clc
jl
mov
or
fdivl
shll
or
cmp
pop
arpl
cmpsb
cmp
andl
mov
loop
jg
sub
and
shr
mov
mov
out
jns
test
inc
or
lea
push
ds
xorl
dec
cmp
xchg
ja
shrb
mov
push
test
mov
clc
cmp
inc
sahf
inc
inc
shll
mov
add
xor
adc
incl
cmp
je
xor
xor
frstor
xor
aad
pop
sub
bound
fst
push
ljmp
push
cmpl
aam
add
repnz
dec
inc
jp
mov
push
leave
test
cmp
decl
incl
dec
cli
sarb
loopne
push
xor
mov
std
das
sar
cmc
stos
or
sbb
push
xor
adc
call
pop
dec
orl
sarl
lods
xor
ljmp
mov
jns
sub
aad
lret
jl
dec
das
test
mov
cli
mov
sub
sbb
jg
ljmp
jbe
push
out
pop
add
aam
outsb
push
mov
jge
test
xor
call
mov
ss
sub
lock
mov
push
ljmp
push
pop
and
pop
pop
push
movsb
loop
out
call
adc
popf
sbb
bound
sbb
jmp
inc
popa
mov
and
fdivr
pushl
fisubl
hlt
cmp
ds
jmp
nop
outsb
sbb
fmulp
cmp
outsb
scas
pop
jp
pop
fmull
es
add
adc
cmp
ja
ljmp
dec
cmp
xor
leave
push
movsb
daa
push
je
cwtl
jg
incl
insb
nop
cmpsb
mov
fdivrl
repz
mov
ljmp
stos
push
stos
jbe
out
sub
je
sti
jle
jg
mov
jnp
xchg
lds
push
icebp
ljmp
shll
out
fs
loope
pop
push
enter
cld
out
cli
jp
mov
loope
dec
sub
xor
dec
mov
arpl
and
push
inc
out
xchg
jle
shl
jne
add
pop
lcall
mov
jne
jge
jb
xor
cmp
jbe
leave
frstor
icebp
cli
mov
cmpsl
into
adc
sbb
js
js
mov
in
push
cmp
jle
push
test
add
push
bound
lcall
or
cld
and
loope
lcall
xor
adc
ljmp
ja,pn
in
xor
or
lcall
and
lcall
sbb
cmpsl
pusha
pop
cmp
xor
movsb
decl
out
data16
push
add
test
call
cmp
mov
ljmp
call
sub
std
filds
adc
jno
jae
into
mov
mov
jg
nop
push
sbb
pushf
enter
cmp
fstpl
push
jb
cld
sub
call
xchg
shrb
push
addr16
ds
pop
pop
mov
add
jmp
push
inc
jecxz
popa
pop
jg
and
mov
xor
int
cmp
xor
jg
add
dec
ljmp
ss
fcmovne
mov
scas
adc
shrb
pop
mov
pop
aam
pop
push
add
pop
outsl
jb
out
dec
dec
add
mov
int3
xchg
shlb
ljmp
into
adc
xchg
pop
mov
xor
fisttps
js
push
enter
lds
push
js
inc
stos
mov
pop
ljmp
xchg
in
inc
inc
lcall
ljmp
pushl
daa
hlt
hlt
icebp
imull
pop
test
clc
aad
ja
push
stc
add
xorb
add
pop
gs
call
dec
pushf
test
shrl
inc
mov
adcb
mov
out
mov
cmp
sahf
push
lcall
andb
sub
pop
mov
xchg
xchg
std
mov
dec
test
pop
mov
sub
loope
adc
inc
jns
data16
inc
loope
dec
mov
aas
rol
out
mov
jmp
and
in
mov
je
sub
lcall
lcall
push
adc
scas
sarb
incl
outsb
loope
insl
out
test
bnd
test
mov
dec
mov
sub
popa
scas
sahf
mov
jns
lret
xor
int
jnp
dec
push
cmc
cmp
out
add
ljmp
shlb
mov
inc
mov
fisttps
pop
push
mov
movsb
iret
mov
mov
stos
mov
aad
icebp
test
aam
pop
scas
clc
mov
xchg
sub
mov
sub
outsb
and
lret
insb
mov
push
stos
fisttpll
int3
addr16
xor
les
lds
inc
pop
fcomp
jg
adcb
jo
pop
bound
outsl
xchg
pop
mov
mov
pop
cmp
ja
cld
xchg
shl
lahf
mov
in
lcall
xor
jp
shrd
add
cli
mov
jge
es
cmpsb
sub
cmpsb
ja
and
push
das
xchg
and
and
ljmp
fmul
jle
jnp
cmp
pop
sub
push
faddl
adc
add
mov
and
aad
push
hlt
pop
jg
lahf
cmpsb
xchg
insl
cli
lret
lret
negl
and
fldenv
xor
jle
push
incl
sub
or
nop
je
fdivrl
leave
pusha
sub
outsl
repnz
mov
ss
mov
icebp
sbb
decl
jmp
dec
popa
sub
sub
cs
sbb
dec
jg
jl
xor
outsl
mov
mov
mov
stos
inc
or
sbb
cmp
scas
inc
xor
add
loopne
movd
xchg
ds
popa
xchg
adc
jnp
ljmp
cmp
je
and
xchg
ss
adc
inc
jg
xchg
mov
enter
cmp
xchg
div
sub
lock
incl
xchg
sbb
ss
mov
sub
je
insl
lret
mov
pop
pushf
mov
int
fwait
inc
xchg
decb
add
outsb
in
loop
clc
cmp
jg
mov
sarb
fs
iret
call
and
stc
sub
jg
decl
and
cmp
dec
popa
inc
sub
insl
fs
incl
stc
cmpb
sub
mov
in
mov
mov
sbb
jmp
mov
jne
and
jbe
jecxz
fiadds
adc
imul
outsb
xor
lcall
data16
daa
iret
mov
popf
cmp
add
out
fcomip
lcall
and
inc
pop
and
xchg
xor
jmp
fcos
stos
decl
jp
xchg
test
or
xor
shlb
bswap
movsb
mov
jecxz
ja
sar
sub
pop
mov
mov
out
ja
xor
xchg
test
xchg
test
arpl
push
jp
jg
jecxz
dec
pop
jg
ret
cmp
dec
out
xor
cli
pop
cs
cld
mov
push
fsqrt
aad
inc
fldcw
mov
push
inc
fdivrl
inc
insl
mov
add
pop
or
ljmp
cld
cmp
gs
pop
jp
lods
or
xor
adc
call
call
pop
push
rep
add
and
pop
lret
aas
pop
loopne
pop
xor
pushf
pushf
mov
mov
std
jno
xor
sbb
adc
arpl
test
push
mov
dec
xorl
dec
cmpsb
or
std
lcall
es
sub
enter
pop
mov
in
pop
xor
inc
fcmovnb
fists
sub
cld
cld
xchg
imul
xchg
scas
or
sub
inc
movsb
adc
and
mov
shl
xor
mov
xchg
scas
lret
add
gs
adcb
inc
stos
sbb
xor
cmp
dec
stos
ffreep
push
hlt
in
in
ret
inc
add
loop
cmp
decl
xchg
sub
sahf
or
es
sarb
jmp
sub
jge
and
sub
jecxz
sbb
inc
mov
sub
vcmpltsd
jg
cmp
mov
push
ljmp
push
aaa
mov
test
ja
icebp
imul
lcall
add
mov
aam
sub
ret
or
mov
and
inc
fbld
add
and
orb
call
std
stos
push
dec
inc
std
mov
dec
ljmp
xchg
mov
test
das
clc
sbb
and
stc
inc
xchg
outsl
ljmp
daa
test
push
pop
jne
fcmove
pop
xchg
mov
aam
loopne
jg
call
inc
leave
fs
mov
jecxz
push
sarb
add
jl
nop
and
aad
mov
pop
xor
mov
pop
mov
adc
push
pop
call
lret
ljmp
push
roll
ret
xchg
lcall
push
shll
push
in
mov
in
scas
pause
loope
clc
mov
pop
jo
xlat
insl
pusha
loope
mov
addr16
dec
pop
das
push
mov
popa
xchg
scas
mov
mov
xchg
arpl
xchg
fcomi
mov
and
lods
inc
loope
mov
inc
es
test
cmp
jae
jo
jns
fildll
cmp
dec
repz
push
xor
enter
jg
lods
fdivs
jno
test
movsb
rcll
and
xor
incl
iret
mov
inc
ret
cs
jp
or
sub
scas
scas
lock
or
leave
lret
outsl
cli
loop
inc
fldl
sub
sbb
and
daa
pop
divl
mov
lret
adc
mov
dec
rcr
sbb
dec
sub
sub
sahf
inc
xchg
xor
loop
ret
popf
xor
fdivrp
aas
subl
inc
dec
sbb
inc
mov
mov
xchg
add
ljmp
bound
int3
and
pop
inc
js
nop
outsb
pusha
shl
lock
int
mov
hlt
lcall
fs
xlat
fxch
sub
shlb
sahf
dec
jne
mov
sarl
mov
addb
cmp
push
repnz
push
js
mov
mov
test
mov
xorl
std
or
aam
inc
inc
gs
dec
hlt
int
popf
call
jecxz
sbb
sub
das
cmp
add
pop
jle
add
sub
gs
jl
sub
xor
sahf
cmp
ss
dec
daa
dec
push
pop
imul
jmp
test
testb
sbb
mov
dec
mov
call
mov
add
ret
mov
ljmp
or
add
mov
popl
mov
ljmp
adc
xchg
pusha
inc
sbb
testl
stos
cmpsl
pushl
sub
inc
jae
loopne
ss
jo
mov
shlb
jecxz
pop
mov
push
xchg
out
cli
les
mov
sbb
mov
dec
sub
mov
outsl
dec
and
ss
scas
push
sbb
aaa
xchg
jno
outsl
scas
incl
sub
jns
nop
les
std
flds
movsl
lcall
decl
inc
enter
inc
aas
lods
aam
add
clc
dec
push
pop
test
test
mov
lcall
push
jnp
inc
mov
dec
ds
xor
cld
js
adcl
add
mov
push
lcall
push
xor
cmp
ljmp
adc
popf
popf
imulb
aad
mov
mov
mov
nop
ljmp
ljmp
aam
sub
test
je
enter
jg
decl
ljmp
ljmp
cmp
mov
jmp
addr16
repnz
sti
je
pop
lcall
inc
mov
push
inc
out
rol
rclb
les
cmp
mov
pop
cmc
mov
test
cltd
cmp
jg
add
push
les
dec
cwtl
and
pop
dec
pusha
lcall
mov
pushf
pop
inc
sub
pop
or
mov
and
pop
mov
push
js
push
lret
mov
sub
scas
jo
sub
lock
je
cli
pop
inc
or
add
sahf
in
shlb
dec
xchg
mov
incl
mov
shlb
mov
mov
out
inc
pop
pop
stos
add
or
fistl
add
inc
mov
dec
and
xchg
pushl
mov
cmp
ss
cmp
lcall
js
and
sub
cwtl
xor
xchg
mov
rorl
sahf
xchg
dec
lods
in
outsl
bnd
jbe
in
xchg
pop
int3
jmp
dec
sub
outsl
cltd
mov
jmp
cwtl
push
enter
ret
insl
stc
adc
sbb
cmp
push
lcall
adc
xor
xchg
sub
pop
xor
and
call
mov
addl
cmp
cmpsb
push
mov
mov
bound
mov
push
cld
in
shlb
inc
insb
into
movsl
cmp
push
ljmp
sub
aas
adc
pop
arpl
in
jb
test
scas
sbb
cmp
dec
mov
call
pop
incl
adc
ret
je
mov
bound
idivb
ja
aad
mov
jnp
sti
pop
mov
adc
lcall
mov
cmp
mov
jae
xor
xchg
sbb
scas
ret
sub
ds
inc
and
arpl
jg
cmp
fldenv
outsb
flds
incl
addl
jmp
sbb
std
and
shlb
call
xor
fisubrs
loope
inc
add
and
adc
mov
aaa
sbb
cmc
xchg
lock
and
cmp
hlt
inc
loop
xchg
xlat
clc
mov
ljmp
mov
sbb
pop
outsb
dec
xor
push
mov
jo
mov
sarb
pushf
sub
jno
jl
stos
xor
cltd
movsl
cld
inc
inc
imul
out
stc
and
ljmp
std
nop
call
jl
sub
lds
sbb
das
sbb
sub
inc
lcall
lret
dec
je
push
push
adc
jne
clc
sar
ljmp
jecxz
mov
add
leave
sti
insl
jne
out
js
fsubs
pop
push
jns
jnp
arpl
ss
call
cld
call
in
jg
or
leave
cmp
pop
push
lods
and
ss
cs
outsl
cmp
negb
pop
push
rorb
movsl
xchg
test
insl
cld
dec
mov
inc
xchg
inc
cmp
loop
mov
jg
testb
test
and
je
int3
pushf
push
and
mov
hlt
fwait
sub
pop
push
inc
mov
push
dec
fdivl
cld
fisttps
pop
sub
dec
sbb
add
xchg
xor
nop
inc
or
push
mov
jg
imul
dec
pop
aad
xor
cmp
ljmp
push
sub
ret
inc
jns
test
test
js
lods
mov
sub
mov
push
decl
xor
and
jp
push
cmpsl
jns
fnstenv
dec
or
push
jne
scas
decl
lock
int3
mov
movsb
fcompl
mov
jecxz
test
mov
mov
aad
jp
insl
insl
mov
dec
mov
aad
clc
jmp
or
incb
inc
xchg
addb
rcll
dec
mov
mov
sbb
ret
push
sbb
neg
in
mov
jb
rcll
or
notb
call
js
gs
xor
mov
sahf
imul
xchg
sbb
lcall
pop
lahf
clc
sbb
inc
dec
jmp
jg
test
push
mov
mov
clc
frstor
outsl
decl
sub
mov
idivl
pop
push
and
sub
inc
or
ret
mov
sbb
mov
jo
pop
pop
pop
hlt
sarb
imull
in
cmp
or
call
mul
push
mov
adc
jl
scas
adc
mov
fdivrs
sub
cwtl
sbb
int3
sahf
inc
add
bound
xchg
add
pop
inc
xor
inc
pop
dec
inc
ljmp
jl
xchg
mov
pop
jne
lret
add
out
xchg
adc
sbb
mov
subl
fcmovb
lock
lcall
lds
push
aas
jecxz
js
xor
int3
xchg
ret
pop
pop
inc
sub
or
repnz
sbb
dec
sbb
fmul
imul
out
cli
jmp
and
vmovdqa
adc
xchg
add
fildl
rcr
popf
inc
mov
cmp
or
pop
bound
pop
push
push
ret
inc
sub
lea
les
movl
or
inc
xchg
int3
inc
lret
push
orl
adc
sbb
inc
pop
push
lret
cmpxchg
mov
inc
mov
out
xchg
cld
ficoml
add
insl
out
push
imul
in
add
mov
add
fcmovbe
jp
leave
nop
jg
push
ljmp
je
jmp
pop
outsl
cmp
jmp
sar
fisubs
mov
lcall
pop
mov
and
sbb
mov
lock
lods
fstpl
stc
mov
fbld
jp
sbb
insl
fstps
aam
adc
cwtl
cmc
sub
fisttpl
inc
and
push
mov
jae
jns
xorb
xor
dec
xlat
call
jg
decl
add
loopne
cltd
and
pushf
scas
aad
fs
pop
push
dec
inc
cmp
pop
movsl
push
mov
jae
clc
incl
jle
les
mov
icebp
lds
imul
mov
sub
push
and
cmpsb
int
cltd
aad
aam
cwtl
adc
pop
cmpsb
fisubrs
ret
incl
adc
pop
mov
out
inc
lods
xor
ret
jbe
mov
push
shll
into
or
fwait
sub
arpl
push
push
das
gs
imulb
mov
add
call
in
dec
push
mov
adc
inc
in
nop
push
call
bound
insl
inc
imulb
in
in
sbb
or
jb
jmp
jp
pop
icebp
and
stos
pop
call
push
cmp
xchg
test
mov
push
cmpsb
lcall
dec
inc
jge
jle,pn
inc
add
clc
clc
pop
or
les
cltd
xor
jbe
sbb
insl
stc
arpl
mov
pop
dec
loope
jmp
test
xchg
call
ljmp
and
push
mov
inc
inc
ret
decb
jns
test
nop
xor
imull
fimull
mov
mov
nop
pop
push
lods
scas
sbb
shrb
and
cmp
jmp
iret
clc
pop
dec
into
sbb
daa
xor
sar
in
cmp
daa
rcr
decl
adc
mov
test
push
xchg
out
or
addr16
cmp
lods
insl
arpl
cmpsl
mov
and
out
mov
push
push
adc
cmp
adc
mov
addr16
std
xchg
hlt
xor
jns
sbbb
mov
cwtl
xor
cltd
sub
loope
je
repnz
sbb
jle
sbb
stos
sar
decl
lret
ja
xchg
int3
clc
insl
cmpsb
inc
fmuls
sbb
lods
mov
decl
popa
test
sub
mov
cmp
jg
jg
mov
in
ss
adc
ficompl
push
hlt
xor
decl
int3
pop
pop
in
mov
push
mulb
fldenv
inc
push
scas
jmp
aaa
inc
xor
mov
jbe
jo
jb
outsb
push
adc
sahf
and
inc
pushl
daa
adc
xor
adc
lret
and
clc
mov
in
sub
mov
or
add
xchg
sub
rcrl
inc
rolb
mov
mov
dec
jmp
rcll
in
sub
clc
cmc
mov
les
mov
outsb
xorl
push
lods
cld
push
jns
push
mov
jmp
aaa
or
sbb
inc
jne
add
in
adc
dec
adc
xor
add
jne
mov
mov
in
jg
test
pop
test
cmp
cmpsb
sbb
sahf
mov
dec
sbb
hlt
mov
loop
imul
jmp
imul
cld
incl
jmp
mov
je
inc
mov
test
mov
addl
aaa
mov
imull
cli
rcl
stos
add
jg
out
shlb
dec
dec
mov
lea
test
jo
pushf
dec
sbb
sbb
cli
decl
adc
sahf
fwait
inc
jmp
aam
call
dec
sub
hlt
mov
sub
xor
mov
push
xchg
inc
jge
loop
mov
cmp
fildll
or
or
mov
mov
inc
mov
or
lcall
mov
xor
mov
push
jg
push
sub
cmp
add
pushf
ljmp
enter
lcall
movsb
adc
out
outsb
xchg
pop
pop
decb
pusha
mov
lahf
incl
nop
jnp
pop
push
sbb
xor
inc
dec
lods
das
fidivrs
mov
and
add
mov
jg
frstor
or
outsb
adc
movsl
or
cwtl
lock
leave
pushl
cld
mov
in
and
sbb
lret
push
jns
and
inc
das
lds
js
pop
subb
imul
add
xorl
dec
xchg
incl
rorl
sbb
outsl
and
popa
dec
test
jne
shll
je
ljmp
scas
rol
jnp
shlb
push
pop
mov
aam
inc
cwtl
cli
pop
popf
ds
cmc
pop
shr
jo
mov
lcall
push
insb
testl
jmp
shlb
xchg
cs
inc
pop
mov
decl
cld
or
rolb
cmp
lret
ljmp
or
sub
dec
adc
sti
mov
and
jecxz
std
jmp
pop
out
dec
sbb
mov
stos
xchg
dec
jp
dec
jg
and
mov
out
mov
mov
testb
push
mov
adc
ljmp
sahf
dec
aas
imull
mov
movsl
mov
mov
mov
mov
fcmovb
outsl
xchg
mov
fwait
insb
adc
jg
jnp
fwait
shll
mov
sbb
xchg
lds
xor
mov
jecxz
pop
dec
out
mov
pop
cld
adc
bound
mov
mov
push
dec
int
or
jae
add
pop
adc
out
xchg
inc
rclb
pop
jae
subl
xchg
int
pop
decl
inc
lds
and
add
or
sbb
lcall
decl
xchg
rcrl
xchg
lret
mov
inc
sti
ficoml
xchg
ja
ss
aaa
jg
mov
inc
popf
mov
gs
outsb
stc
addr16
inc
incl
inc
shl
xchg
mov
ljmp
loop
scas
ffree
rol
insb
or
hlt
sub
in
inc
aas
jnp
decl
sub
jl,pn
adc
jl
xchg
lcall
inc
pop
jae
push
test
mov
cwtl
sbb
call
bound
xchg
fmull
push
std
out
loop
xor
push
out
out
and
xchg
adcl
movb
mov
sbb
mov
dec
sti
decb
and
call
lds
mov
mov
clc
lahf
mov
cmp
cmc
je
or
dec
cltd
and
mov
aas
insl
das
repz
popf
mov
aas
dec
lret
dec
xor
push
hlt
stos
xor
fisttpl
aam
mov
pop
lock
xchg
mov
push
dec
out
icebp
inc
dec
loope
aaa
movsl
cwtl
sahf
aam
cld
jmp
lret
inc
sbb
xor
cmp
int3
adc
es
js
sahf
lods
cmp
mov
mov
cs
pop
pop
inc
dec
dec
cltd
pop
popa
mov
mov
pop
lcall
cltd
stos
aam
test
lahf
aas
push
mov
testl
mov
mov
inc
cld
xor
xchg
mov
sbb
loop
push
mov
roll
shlb
aas
inc
xchg
lret
aam
cmp
incl
xlat
lock
daa
ret
and
nop
sti
mov
std
add
mov
inc
mov
adc
out
dec
pop
and
test
and
fldenv
jg
shr
pop
mov
in
mov
and
dec
mov
fs
int3
imul
loope
testl
in
sbb
out
clc
push
fs
mov
jecxz
mov
leave
push
insl
jp
int3
sbb
sbb
inc
das
cli
sub
push
and
les
sti
sub
loopne
push
xor
mov
lcall
adc
sti
inc
sti
push
lcall
dec
ljmp
mov
pusha
subb
jg
loop
cmp
cmpsb
aaa
cmc
pushl
dec
test
jne
mov
das
sbb
test
jae
sarl
xor
jns
lahf
mov
jno
out
jg
push
or
pop
cmp
pop
or
cld
cltd
stc
js
jbe
mov
sahf
mov
xor
cmp
pusha
sub
mov
mov
dec
cwtl
inc
adc
mov
mov
add
incl
xor
add
adc
and
arpl
imul
lock
pushf
lea
dec
mov
mov
xchg
xchg
adc
imul
lds
rclb
cmpsb
sbb
faddl
loopne
push
ljmp
push
push
push
adc
sub
repz
repz
pop
out
push
push
mov
cmpsb
test
mov
mov
cmp
frstor
or
mov
dec
push
sbb
jmp
rolb
sub
and
aaa
mov
xor
scas
jmp
insl
mov
mov
mov
xchg
xchg
out
xchg
jl
mov
movsb
jmp
call
pushl
out
xor
add
lock
loopne
or
mov
sbb
push
std
clc
jo
rorl
test
jge
mov
bnd
jmp
mov
lock
xor
sub
fiadds
xchg
mov
add
repz
sbb
out
jg
mov
dec
inc
lock
mov
movsl
imul
int
hlt
mov
pop
hlt
ss
loop
aam
jb
sbb
call
sbb
addb
ret
enter
into
mov
lret
enter
xchg
cmp
adc
incl
cmp
jmp
test
or
popl
outsl
and
decl
dec
negb
loope
xor
imul
dec
push
xor
jg
cmp
xchg
dec
and
lret
adc
push
std
mov
aad
stos
cmpsb
decl
outsl
icebp
jbe
sbb
addr16
imul
xchg
xchg
popf
loope
call
lock
dec
cmp
jl
imul
stc
call
lcall
inc
jge
mov
movsb
pop
and
ljmp
xchg
mov
pop
sbb
ja
pop
bound
int
xchg
adc
inc
pop
enter
xrelease
add
adc
cmp
jg
pop
in
mov
sbb
mov
stc
mov
in
adc
decl
insl
adc
dec
xchg
dec
sub
popf
inc
push
fmul
test
sbb
mov
filds
out
xchg
xchg
cmp
mov
dec
pop
jp
mov
sub
jg
pop
mov
cmp
neg
push
subl
int3
mov
jne
sub
nop
xor
add
mov
xchg
cli
lcall
jl
xchg
adc
call
and
int3
stos
std
into
jae
dec
andl
mov
shll
inc
insl
std
lods
fwait
push
cmpsl
inc
and
and
or
cltd
jg
lcall
mov
pop
mov
in
xor
push
xor
daa
ja
jg
ljmp
es
mov
and
mov
jle
mov
shll
sar
cmp
push
pop
mov
es
sbb
movsl
lea
xchg
and
fcomip
cs
pop
lahf
cld
pop
lret
mov
jecxz
aas
and
xchg
gs
cmp
inc
nop
test
pop
fsubr
scas
lahf
ja
repz
hlt
enter
dec
mov
ffree
or
lea
jne
jge
xor
mov
ljmp
aaa
sub
add
dec
jmp
push
int
jl
idiv
cmp
dec
xchg
mov
pop
data16
arpl
fisttpll
pop
aas
fdivrl
push
fdivrs
frstor
aaa
xchg
out
imul
pop
xchg
cmp
fsubp
sti
cmp
xlat
negb
mov
add
mov
dec
xor
and
and
call
sahf
and
test
mov
pop
inc
adc
push
movsb
pop
dec
or
mulb
incl
popa
rclb
cmp
pop
mov
cmp
push
mov
sbb
pusha
pop
inc
pushf
in
inc
jno
das
cmpsb
mov
dec
mov
js
mov
jmp
incl
aaa
cmp
lahf
hlt
and
mov
leave
fists
ret
mov
add
adc
push
nop
push
out
and
movsl
insl
imul
mov
sbb
cmpb
sti
nop
xchg
rcll
lock
adc
imulb
mov
add
fwait
mov
adc
push
cli
jmp
dec
nop
jg
jg
xchg
cmp
or
jge
loop
add
loope
insl
cld
shlb
sub
inc
ljmp
mov
aas
adc
mull
lret
stc
in
je
xlat
and
lock
call
or
hlt
idivl
cmpsb
jne
jne
enter
incl
popf
push
clc
xchg
lds
push
and
sub
cmp
decl
or
jle
popf
cmpsl
data16
add
pop
leave
ds
xor
leave
aaa
shrb
mov
js
pop
inc
jo
cmpsb
mov
repnz
jbe
stc
fldcw
sub
xchg
cmp
lret
test
lds
andl
jge
stos
jmp
mov
out
and
scas
clc
or
arpl
jnp
jecxz
pop
aad
cmp
jmp
xchg
jp
ss
stos
rdtsc
adc
xor
movsb
cmp
mov
mov
or
and
decl
xchg
jge
fcoms
push
ljmp
jg
inc
xor
daa
fcomip
fstl
aas
scas
xchg
dec
and
test
add
pop
std
mov
out
clc
xor
or
scas
mov
xor
subb
fbld
fisttpll
leave
mov
pop
xchg
dec
in
push
jmp
repz
jl
loope
repnz
ja
outsl
cli
ljmp
lods
loop
out
pop
stc
mov
in
adc
push
mov
lret
add
sbb
dec
clc
or
daa
popf
mov
pop
rolb
and
shll
jb
mov
lcall
lds
loopne
adc
mov
cmpsb
test
xchg
mov
shlb
jmp
sbb
push
pop
das
mov
push
subl
hlt
aaa
out
push
fisttps
scas
rcrl
repnz
decl
stos
jg
int3
push
ffreep
test
or
rcl
je
or
xor
jmp
sub
jno
add
sub
pop
out
call
jg
push
mov
lcall
int3
rcrb
xlat
vdivsd
sub
fisttps
sub
call
xor
out
nop
loop
adc
sbb
dec
and
movsb
faddl
enter
inc
dec
fcomip
cmp
aad
mov
pushf
cmc
or
dec
mov
hlt
cmp
push
les
lahf
push
incl
fstps
mov
push
or
xchg
leave
testb
or
insl
scas
scas
mov
add
cmpsb
outsl
pusha
std
jmp
mov
cmpb
pop
outsb
pop
outsb
shll
sbb
ds
mov
into
mov
les
ret
lea
add
das
add
pop
js
adc
cmp
xlat
loope
and
loopne
cmp
jecxz
mov
shl
dec
je
lods
addr16
pop
sbb
cmp
das
sbb
jo
inc
rorb
insb
addb
mov
cmpsb
scas
jecxz
aaa
cld
pop
loopne
push
js
icebp
mov
insb
sbb
roll
mov
add
in
inc
inc
add
aam
jmp
daa
imul
cmp
push
inc
mov
jns
add
push
dec
ds
daa
sbb
add
lcall
cli
xor
add
push
push
popf
cmp
push
ljmp
cmpsb
dec
mov
les
mov
mov
jmp
bound
adc
roll
mov
adc
fs
jmp
out
gs
loopne
push
sbb
inc
add
ret
in
push
ljmp
mov
aas
mov
mov
push
jl
or
call
push
data16
cmpl
jne
push
cmpsl
cwtl
mov
sub
mov
cmc
orb
pushf
mov
outsb
dec
cmc
xor
out
imulb
cmpsb
mov
jl
lock
or
stos
int3
lret
adc
pop
add
clc
adc
gs
jle
jmp
das
xor
out
and
aaa
sbb
mov
xchg
stc
and
fistpll
test
sub
mov
xorl
call
push
mov
in
mov
hlt
lock
and
add
mov
mov
xor
mov
pushl
lds
mov
jp
scas
jnp
daa
shll
or
sti
xchg
dec
mov
loope
jle
int
jbe
adc
stc
pop
sbb
fwait
data16
mov
orb
mov
mov
or
push
adc
inc
incb
dec
sbb
data16
xchg
in
xchg
mov
mov
sbb
fwait
or
jnp
jg
push
imul
daa
and
or
clc
arpl
popa
mov
decl
sub
xor
addps
xor
sub
push
nop
mov
mov
jb
incl
je
rcrl
push
push
addb
mov
push
xor
dec
lret
out
cs
and
mov
push
cmp
or
lock
jl
test
int3
mov
mov
adc
sbb
sub
pop
xchg
jl
std
sub
ret
das
pop
or
stc
jmp
fdivr
enter
je
inc
loopne
and
into
mov
jp
add
pushf
sarb
aam
in
xchg
mov
cmp
sub
inc
mov
in
mov
sbb
jae
add
pop
stos
ljmp
fistps
inc
fsubrl
sbb
repz
add
test
cmp
bnd
dec
cmp
add
stc
lds
test
int
insl
std
in
mov
mov
stos
push
clc
cld
or
lds
mov
gs
inc
daa
xlat
xchg
add
call
mov
lahf
adc
popa
mov
incl
dec
cmp
inc
cmpsl
mov
aaa
sub
cli
icebp
pushl
mov
pop
ficoml
stos
movsl
adc
popa
leave
cmp
addr16
and
mov
jmp
sub
outsl
inc
push
es
dec
mov
mov
xchg
jecxz
out
push
cwtl
mov
inc
loope
lret
outsl
ljmp
ror
xor
adc
insb
cld
movsb
inc
pop
cmp
dec
mov
sahf
insb
mov
data16
aam
mov
out
lock
jmp
es
outsb
pop
es
jge
pop
xor
dec
divl
testl
push
pop
rcrb
and
sti
test
divb
incl
je
sbb
jnp
outsb
jno,pn
inc
lcall
dec
pusha
cmp
push
pushf
or
push
pop
sbb
pushl
mov
lock
sbb
icebp
aas
push
mov
aad
mov
jne
sbb
push
push
aad
je
push
fidivs
inc
xchg
mov
movsb
mov
loop
mov
add
imul
incl
test
leave
and
push
jbe
out
shll
call
ljmp
cmp
dec
clc
stc
adc
ds
add
inc
pop
inc
lea
loope
pusha
arpl
xor
incl
jg
or
lcall
into
sub
dec
aam
decb
add
pushl
dec
iret
adc
leave
stos
add
out
cmp
pop
aad
cmp
incl
cld
movsb
lods
inc
ror
inc
jl
out
pop
mov
and
out
nop
clc
frstor
inc
das
or
push
icebp
sbb
mov
push
inc
cmp
shrb
js,pn
cld
call
inc
xor
mov
lret
mov
xor
or
mul
idiv
incl
rclb
push
and
imul
inc
lea
add
cmpsb
rol
insl
cmp
stos
inc
loope
je
or
hlt
and
cli
jmp
jle
inc
jecxz
bound
or
inc
jmp
call
ds
hlt
popf
adc
sbb
pop
push
or
aaa
jmp
pop
lret
push
scas
jns
test
nop
mov
adc
decl
xchg
stos
sbb
divb
inc
lods
pusha
jmp
jo
xchg
lods
popa
mov
ss
scas
ljmp
lcall
es
loope
or
loopne
ds
arpl
and
jae
sahf
lods
inc
imull
adc
jge
cmp
mov
inc
jbe
cmc
ret
lds
shrl
jbe
mov
adc
and
outsl
or
arpl
and
pop
adc
sahf
pop
dec
es
pop
hlt
call
sub
and
mov
xor
repnz
bound
lret
fisttps
loopne
and
mov
mov
stc
das
shrb
push
mov
movsl
ljmp
bnd
xchg
imul
pusha
mov
pop
pop
aad
inc
rclb
push
push
adc
xchg
mov
mov
lcall
ljmp
sbb
outsb
jne
inc
divl
out
incl
dec
add
enter
xor
aad
bound
sbb
fistpll
das
int
lcall
xor
pop
sbb
sub
out
lock
stos
lret
rsqrtps
xchg
outsl
mov
shrl
push
orl
inc
cmp
push
sbb
call
ret
mov
out
das
push
push
or
push
ss
pop
insl
and
enter
sbb
mov
mull
mov
lret
jne
pushl
cltd
adc
add
out
push
mov
insl
dec
add
or
fcmovbe
pop
fistpll
mov
mov
pop
add
cmp
dec
in
ret
push
imul
call
mov
notl
sbb
pop
and
shl
cmp
mov
test
cli
cmp
call
mov
xchg
leave
xlat
jge
xchg
inc
inc
cmc
xor
add
add
out
gs
mov
cmp
or
dec
push
je
cmp
les
mov
jns
pop
xor
xor
mov
inc
cmp
cmp
push
ret
imul
mov
cmp
mov
pop
cmp
push
in
outsl
xor
ja
xor
dec
mov
loope
jmp
xor
rolb
in
push
lods
test
ja
clc
sub
cwtl
in
fdivr
call
mov
arpl
insb
outsb
repz
dec
stos
push
dec
inc
push
pop
ds
cwtl
adc
push
in
inc
ss
pop
in
enter
cmp
ficomps
mov
jecxz
inc
ret
ret
pop
mov
incl
pop
push
mov
mov
push
rcrl
fstpl
jbe
jmp
cli
push
mov
scas
dec
lock
loop
pop
rorb
repnz
les
ljmp
and
addr16
das
inc
mov
nop
jecxz
mov
lcall
adc
sbb
inc
dec
push
iret
pop
jb
xor
das
jo
into
movb
imul
push
fwait
sub
mov
cmp
jg
pusha
inc
cmp
repnz
mov
xchg
cld
dec
add
aas
fs
mov
cmp
inc
out
xor
sub
aas
xor
jno
pushf
aas
xor
jp
rcrl
pop
loope
addb
stc
lret
adcb
loopne
lcall
cld
cltd
test
or
mull
add
mov
icebp
mov
push
fwait
call
xor
mov
pop
ljmp
enter
out
mov
call
dec
je
jnp
and
pop
mov
fsub
sub
jae
shrb
ret
xor
andb
call
pop
call
xchg
and
ljmp
movsl
dec
aam
dec
test
and
sbb
test
es
test
jns
jmp
pushf
movsl
dec
int
sbb
hlt
push
adc
jns
ror
fnstcw
test
ljmp
cld
fwait
jg
pusha
scas
mov
jmp
dec
lds
int
mov
mov
mov
dec
push
add
push
pop
mov
mov
aas
or
std
pop
aaa
pop
xchg
cmp
ljmp
aam
insl
jo
imul
gs
push
push
jg
cmp
mov
jo
fildll
and
adc
inc
mov
jmp
outsl
cmpsl
push
or
jmp
add
movsl
iret
xor
mov
mov
push
aam
add
sbb
sahf
lret
dec
inc
sar
and
incl
or
push
cwtl
jae
and
lcall
call
out
pop
jmp
bound
pop
push
sarl
stc
imul
adc
cmp
roll
call
fucomip
xchg
sbb
sub
push
outsb
es
fists
push
cs
dec
mov
loope
mov
stos
cli
mov
jmp
jnp
jecxz
rol
std
mov
xor
cmpsl
push
ja
jmp
adc
leave
mov
jae
int3
pop
mov
gs
push
lods
lock
lcall
push
dec
sub
mov
pop
push
fiadds
mov
lret
lcall
das
fsub
fisttps
in
adc
add
cltd
popl
adc
and
faddl
sub
ja
jns
jle
ret
pop
icebp
lcall
repnz
push
sbb
mov
push
cmp
mov
call
imul
in
cmp
add
jo
scas
mov
loop
pop
mov
scas
mov
add
cmp
mov
bound
fcmovu
imul
fdivr
pop
add
add
mov
fistpl
pop
sub
mov
outsb
inc
repz
mov
dec
cmp
cwtl
sti
mov
or
xchg
ss
xor
cmpsl
xchg
pop
mov
add
call
daa
repz
cli
mov
fimull
sbb
sub
mov
jg
push
xlat
orl
and
pop
fsubrl
out
stos
sub
out
pop
fdivp
pop
push
rcr
pop
cwtl
lock
cltd
cli
in
inc
fwait
scas
add
popa
mov
add
push
jnp
scas
call
mov
mov
leave
movsl
jne
scas
aas
or
mov
push
push
fwait
ret
sub
cmp
rclb
lock
xor
dec
cmp
pusha
cmpsw
mov
mov
pop
push
mov
pusha
push
filds
adc
jmp
jmp
clc
andl
jp
xchg
mov
jmp
cmp
movsb
sahf
xor
test
sar
dec
fidivl
gs
and
data16
icebp
pop
cld
ljmp
cltd
pushf
scas
add
mov
push
into
mov
outsb
loopne
mov
mov
mov
lret
aam
out
mov
in
mov
jo
aas
pop
cld
les
xchg
ljmp
xchg
jbe
shll
pop
sub
test
and
jns
xchg
push
pop
popa
push
xor
cld
pop
pop
jg
lcall
sti
icebp
mov
adc
xchg
icebp
xor
in
pop
add
ss
es
pop
mov
xchg
push
adc
or
mov
test
dec
lock
shll
in
and
add
aaa
mov
iret
divl
cli
mov
xchg
jbe
jmp
mov
aas
cli
xchg
add
pop
mov
into
mov
mov
cmp
or
push
mov
popa
sbb
adc
hlt
data16
xchg
mov
push
mov
sub
out
setb
xor
popf
call
cmp
sbb
jo
stos
scas
cli
lcall
cmp
sahf
ds
inc
mov
push
dec
xor
mov
cmp
mov
xorb
mov
in
clc
jnp
popf
cld
das
mov
arpl
test
add
sbb
jg
insl
push
adc
dec
xchg
mov
dec
shll
dec
cmp
push
mov
cmc
imul
pop
adc
xor
inc
in
sarb
sbb
clc
incl
repnz
stos
pop
jp
out
lds
push
cmp
mov
mov
mov
jmp
or
mov
incl
lret
cmc
fcompl
stos
mov
dec
jne
sbb
fidivrs
incl
sbb
aam
dec
cmp
sub
mov
arpl
push
pushf
mov
cmp
xor
lcall
jns
fdivr
pop
cmp
push
stos
rol
out
cld
ret
mov
mov
mov
ds
aas
imul
sbb
add
incl
push
mov
cltd
data16
ret
imul
cmp
mov
mov
cs
mov
mov
push
and
mov
enter
push
fcomps
call
push
sub
or
sbb
in
out
loope
outsb
sub
sbb
cli
cmp
inc
or
jl
adcl
sub
ljmp
add
xchg
fildll
xchg
popa
movb
mov
jne
aam
lods
add
adc
mov
lcall
jl
enter
cmp
test
push
cmpsb
fsub
jno
jmp
shl
mov
cmpl
rorl
rcrl
lds
pop
mov
jge
push
or
cmp
stos
mov
add
lods
mov
jb
mov
jae
pushl
sar
into
fcompl
xchg
mov
pushl
xchg
inc
pushf
jle
jb,pt
lahf
xchg
inc
push
jbe
xchg
cmp
dec
aad
xchg
filds
dec
pop
rcll
add
jmp
add
decb
jp
mov
xor
addr16
shlb
add
xchg
and
incl
std
ror
cmp
fistpll
pop
cld
or
or
cmpsb
out
int3
std
mov
repz
stc
std
mov
incl
aam
ja
jge
stc
jge
add
inc
push
sub
sub
and
inc
and
jmp
mov
aad
and
and
or
adc
jecxz
jmp
push
mov
loop
aad
mov
xor
or
aam
sbb
lods
movsl
mov
or
xor
call
mov
lahf
scas
mov
inc
jle
mov
mov
mov
lock
fdivrs
xchg
xchg
dec
nop
mov
std
jle
pop
repz
movsb
ds
fisubrl
data16
in
mov
in
xchg
inc
lods
push
mov
mov
pop
xlat
and
neg
shll
xor
loopne
mov
adc
loope
rcrl
call
jge
mov
dec
sahf
mov
je
bound
mov
mov
dec
sbb
pop
jg
lcall
mov
mov
test
or
jecxz
cmp
add
lret
xor
push
and
out
mov
shl
fisttpll
add
cmp
decl
push
movsb
pusha
pop
sbb
xchg
fstps
js
jg
in
loopne
repz
sub
leave
and
sbb
cmp
push
scas
in
xor
mov
adc
clc
mov
pop
jne
rcrb
movsl
test
push
push
movsb
cli
mov
test
mov
xor
call
jbe
or
in
ljmp
cmp
xchg
ret
out
and
notb
xor
adc
mov
lods
int
sbb
sbb
loopne
decl
or
mov
js
cmp
xchg
lcall
test
or
or
jne
fcom
lods
ss
in
mov
call
sub
mov
fistpll
push
or
in
jmp
data16
inc
jne
daa
sbb
mov
stos
jmp
call
stos
cmc
push
cmp
stc
aam
xchg
movsl
mov
mov
adc
ljmp
xor
ja
adc
pushl
in
call
and
roll
xor
and
pop
daa
cmp
jle
cltd
idivb
or
jnp
mov
fdivs
pop
scas
sub
or
xchg
pop
incl
xchg
adc
in
jle
sahf
jge
icebp
aas
leave
xchg
mov
pop
test
xor
dec
cmpb
pop
add
add
push
xchg
mov
call
sub
push
xchg
outsl
jae
das
xchg
arpl
icebp
mov
pop
icebp
scas
popa
cmpsl
js
and
cs
mov
sti
jmp
dec
out
mov
sbb
in
push
mov
push
mov
cwtl
in
cmc
pushl
mov
xchg
inc
adc
js
inc
add
adc
scas
clc
or
inc
adc
loopne
test
stos
add
xchg
decl
xchg
lods
mov
pop
dec
andb
jg
push
adc
js
fwait
loopne
incb
out
push
mov
jmp
push
imul
les
iret
mov
xchg
jo,pn
pop
incl
ds
adc
arpl
cmp
out
test
repnz
xor
and
js
test
das
inc
jg
jns
adc
arpl
cmp
lret
lahf
faddp
sub
jp
jecxz
pushl
sti
sbb
jns
pop
pushf
into
shrl
stc
lods
sub
dec
iret
imul
xor
idivb
mov
push
sbb
jecxz
pop
rorb
xor
movntps
pushl
xchg
ss
lcall
jp
pop
sub
pop
int
and
sbb
call
or
insl
cmp
scas
xchg
cmp
out
aaa
sti
add
sbb
inc
push
sbb
jl
jmp
jmp
xor
js
sbb
pop
or
int
cwtl
addr16
in
repz
pop
in
lock
sarb
out
in
aaa
jno
shrb
jmp
sti
mov
jge
dec
cmc
lret
xchg
ret
loop
es
or
out
mov
sub
pushl
push
cmp
pop
leave
stos
or
incl
jmp
iret
shll
xor
sbb
faddp
das
sar
push
cmp
subps
mov
pop
fwait
shrb
scas
clc
jg
mov
or
sbb
movsb
jl
push
jb
jg
jmp
mov
test
push
add
hlt
out
roll
jge
or
jnp
aas
cmpsl
sub
jbe
out
in
and
pop
movsb
jge
jecxz
push
imul
mov
mov
and
cli
push
fistps
rolb
iret
jg
mov
inc
pop
jae
arpl
or
aad
inc
cmp
jle
jmp
outsl
call
int3
add
push
jg
or
shlb
jmp
jae
lret
mov
pop
jb
rorb
cwtl
dec
pop
fldpi
mov
inc
xor
cmp
mov
cs
mov
call
mov
notb
rcrl
scas
xchg
inc
call
mov
dec
dec
dec
cli
add
scas
stc
fnsave
ffreep
repnz
push
and
ret
jmp
xchg
sub
mov
test
call
dec
fisttpll
pop
and
pop
inc
mov
pop
test
push
ljmp
xchg
fdivrl
push
jne
outsb
cmp
sub
aad
call
lods
dec
push
bound
sbb
add
add
sub
mov
dec
stos
ss
cmp
and
pop
mul
mov
test
push
pusha
lods
out
popf
fbstp
decl
out
sbb
aam
rcll
cmpsl
inc
cmp
sbb
xchg
lcall
jmp
in
dec
sbb
dec
push
andb
sbb
lcall
and
pop
mov
xchg
addr16
cmp
fstpt
pushl
mov
push
sub
jge
fstps
sub
cld
lock
dec
push
leave
clc
or
aas
aaa
adc
xchg
inc
enter
jg
add
inc
mov
test
arpl
xchg
test
cmp
jle
xor
stos
cmc
gs
pushl
cld
push
xchg
andl
aam
fcmovbe
sub
jnp
movsl
stos
call
call
testl
test
or
add
push
scas
pop
std
dec
mov
xchg
xor
out
bound
push
cli
sbb
add
push
xchg
ds
cmc
clc
leave
rcrb
pop
mov
mov
add
into
lods
ds
mov
jb
xchg
mov
fbld
lret
pop
pop
and
movl
xchg
jg
hlt
ja
push
cwtl
cmp
jnp
or
subl
fs
pop
fs
imul
cli
xchg
xorb
cmc
mov
lea
mov
enter
xor
push
icebp
das
mov
call
pop
fdivrs
call
shl
inc
rolb
mov
aam
enter
pop
shll
lcall
mov
cmpb
out
fnsave
icebp
add
fs
mov
jmpw
popa
push
push
inc
es
cmpsl
adc
inc
sbb
shrb
ret
fsubrl
mull
fbld
fdivl
aad
idivl
cmp
inc
fisubs
jbe
adc
mov
jmp
jle
ret
ljmp
sub
out
add
cmp
ret
orb
call
jg
repz
push
sub
fstpt
jno
xchg
sbb
mov
in
sub
pushl
iret
mov
gs
test
dec
jns
lods
inc
push
pop
nop
das
dec
xchg
std
lcall
jae
mov
adc
mov
xchg
popf
cmp
mov
test
dec
push
pop
js
add
and
movsb
cmpsb
decl
aad
daa
jp
sub
cwtl
push
jnp
loop
mov
mov
mov
bound
cli
cli
add
lret
test
notb
ljmp
cli
lahf
insb
adc
lcall
in
push
popf
test
call
loope
sbb
add
xchg
mov
xor
dec
push
arpl
call
les
cmp
leave
fistps
outsl
fcoms
mov
mov
arpl
decl
cli
loope
pop
out
push
std
outsb
out
jecxz
inc
mov
test
jmp
mov
pop
lret
pusha
arpl
and
adc
scas
jbe,pn
cmp
test
idiv
das
clc
pushl
mov
xlat
out
add
adc
or
inc
inc
xlat
mov
scas
cmpsl
sbbl
xchg
in
insb
sub
lcall
incl
dec
out
inc
inc
arpl
sarb
leave
dec
pop
fcmovnb
pop
out
mov
sub
ljmp
icebp
call
outsb
inc
roll
cld
pushl
lock
inc
push
rcr
sbb
fistps
cld
pushl
xor
and
ljmp
and
mov
das
outsl
pusha
jmp
push
decl
andb
pop
std
flds
insl
imul
gs
cmc
incl
adc
cmpl
jne
pop
jl
push
aaa
inc
inc
ficompl
push
adc
or
jmp
or
or
sbb
dec
xchg
jae
sahf
je
xchg
sbb
sub
xchg
hlt
call
addb
cltd
popf
dec
cltd
outsb
fs
fnsave
inc
call
cld
outsl
in
mov
sahf
cmp
bound
sbb
mov
push
arpl
mov
mov
movsb
ret
ja
ljmp
sub
inc
idiv
adc
xchg
jg
mov
and
fisttpll
mov
xor
fs
test
push
push
les
mov
push
inc
shll
rclb
add
xchg
cld
pop
dec
dec
nop
push
push
es
test
mov
cmp
leave
lahf
fcmovb
push
and
pop
leave
jb
ss
call
test
inc
addr16
loopne
sub
scas
push
inc
cld
scas
shll
mov
mov
cwtl
js
call
rcrb
fistpl
mov
push
js
mov
filds
pop
cmc
lods
or
xor
mov
sbb
sbb
jmp
lcall
gs
divl
mov
pop
xchg
repnz
push
pop
ficomps
icebp
dec
loop
mov
push
scas
jne
inc
ja
sbb
push
mov
incl
xchg
cmpsl
xor
rol
add
orl
data16
mul
negb
xchg
jg
cmp
jmp
or
sbb
sub
ja
ret
jge
daa
mov
filds
lock
pushl
xchg
imul
dec
and
aas
imul
lcall
sbb
loop
out
test
loopne
mov
popl
loop
jo
pop
sub
cmpsb
call
sbb
dec
adc
xchg
stc
xor
xorl
call
outsl
repz
mov
lcall
fisubrl
xchg
out
mov
dec
add
add
xor
push
scas
data16
shl
pushl
mov
and
xor
mov
ss
xor
mov
and
inc
int3
aaa
mov
lcall
lret
imul
data16
clc
ljmp
pop
stc
jbe
enter
jmp
lahf
and
pop
scas
loope
dec
sbb
push
inc
pop
dec
sub
adc
std
fdivs
sub
or
push
jle
mov
mov
cli
call
sub
lds
and
ret
or
repnz
push
cmp
clc
aaa
lods
push
inc
xchg
shl
adc
jmp
jns
enter
mov
arpl
clc
les
fwait
mov
and
mov
mov
stos
into
xor
push
int
jge
dec
adc
push
and
lods
fisttpll
pop
xchg
jno
std
incl
cmp
jl
das
xor
mov
push
lret
and
xchg
mov
ljmp
push
outsb
push
aad
bound
cld
negb
sub
xchg
incl
iret
and
imul
imul
adc
rcll
inc
or
adc
pushl
mov
fmull
repz
out
pop
outsb
js
adc
orb
mov
ljmp
cmp
mov
icebp
loopne
aad
add
lret
adc
mov
scas
and
insl
repnz
xchg
xor
xchg
inc
lret
push
inc
cmp
push
les
xchg
mov
mov
pop
xlat
aad
dec
fisttps
jg
inc
mov
scas
push
mov
insb
xchg
push
cmp
or
sbb
xchg
test
out
sbb
add
dec
mov
pop
js
jo
insl
pop
jmp
pop
adc
lcall
pop
and
xor
xor
pop
dec
xlat
subb
inc
push
mov
jbe
rorb
adc
les
fstl
cmpl
insl
inc
sar
pushl
in
lcall
nop
mov
stos
mov
out
xchg
lcall
ljmp
push
pop
lahf
shrb
clc
xchg
fimuls
fisubs
xor
dec
or
call
pop
lds
addb
and
mov
lds
cmp
xchg
or
outsb
cmp
cmp
xchg
divl
jne
std
aam
daa
cltd
fwait
pop
test
popa
push
loop
pop
icebp
aam
push
jb
incl
push
fst
sub
pop
loope
inc
push
and
lods
xchg
xchg
dec
popf
jge
fs
decl
je
inc
jp
repnz
lret
and
sbb
dec
pop
je
call
mov
adc
add
jl
fcmove
leave
ss
xor
push
inc
or
or
cmp
loopne
mov
mov
loopne
lock
cmp
pop
inc
xor
jg
mov
clc
loop
mov
testl
data16
mov
std
or
push
mov
inc
fisubrl
data16
and
cld
call
mov
popf
out
in
cld
addb
cmp
xor
sbb
mov
lds
aad
push
insb
aas
dec
adc
call
dec
mov
call
fistpll
or
out
xor
aad
cmpsl
ljmp
jmp
or
mov
in
adc
jae
pop
orb
cmp
clc
and
lcall
imul
push
fcomi
add
js
incl
push
jecxz
cmp
mov
mov
jle
lods
ds
aaa
outsl
sub
sar
shlb
out
fistps
dec
test
cmpsb
rol
push
call
pop
fwait
aad
cmp
and
cmpsl
push
scas
dec
adc
xor
or
clc
push
sub
push
test
sub
int
mov
cld
decl
xchg
in
repz
push
push
decl
inc
xchg
xchg
pop
mov
or
pop
rol
pop
mov
and
inc
nop
push
jmp
scas
cmp
cld
mov
das
iret
sbb
icebp
out
test
out
sbb
mov
inc
lcall
es
push
repz
outsl
les
sub
mov
std
sub
mov
dec
add
imul
lret
pop
cwtl
jge
notl
decl
dec
or
jle
jle
dec
lods
jge
mov
push
mov
push
mov
ljmp
jnp
out
mov
cld
imul
lcall
insb
dec
jl
mov
popa
or
bound
push
ret
fmulp
jnp
or
sarl
dec
mov
sub
mov
mov
xchg
jmp
inc
movsl
mov
xchg
mov
push
dec
nop
cmp
jbe
call
outsb
cmp
adc
add
lret
ss
ljmp
xor
sub
clc
pop
imul
mov
or
sbb
jle
aam
xchg
aaa
xor
jl
inc
push
cwtl
enter
cli
lcall
and
cmpsb
jmp
dec
clc
push
sub
mov
out
mov
pop
mov
int3
cmc
sub
lock
cli
push
addr16
lock
mov
pop
je
in
xchg
or
sub
sbb
jge
or
call
and
insb
fisubrl
sub
lret
xchg
decl
je
aam
push
add
pop
mov
jae
clc
test
mov
jl
loop
mov
movsl
iret
test
in
vandpd
cmc
xlat
das
out
push
enter
jg
lcall
hlt
fidivrs
ds
cs
push
add
ja
cli
stos
lahf
inc
lock
jle
xchg
or
ja
jmp
dec
sbb
mov
push
movsl
jg
decb
cmp
stc
and
adc
jg
cmp
pop
scas
cli
cmpsl
jnp
cmp
lret
sahf
test
jb
loop
adc
ljmp
inc
mov
cmp
and
testb
outsb
mov
cld
das
cli
std
or
aas
jns
cmp
mov
sub
push
addr16
push
dec
ret
out
xchg
push
push
cmp
ffreep
inc
mov
push
dec
in
xor
xchg
cmpsl
mov
mov
xchg
push
dec
pusha
insb
js
inc
dec
dec
sbb
call
fildl
mov
addr16
movsl
fists
mov
mov
or
lods
je
sbb
ficoml
dec
ljmp
lods
fnstcw
and
std
fwait
test
mov
dec
push
loop
in
out
scas
pop
incl
ja
dec
and
cwtl
mov
stos
push
cmc
push
in
inc
in
and
stos
leave
and
mov
mov
xchg
stos
std
leave
gs
and
jbe
dec
and
push
pop
movsb
pop
inc
sub
jns
sub
ud0
add
loope
ret
rol
jo
pusha
jg,pn
pusha
sbb
stos
test
xor
lcall
and
movsb
outsb
movsl
cmc
mov
and
insl
push
cli
xchg
ljmp
jb
insb
cs
scas
sub
repnz
loope
das
xor
out
sbb
xchg
ljmp
call
je
fidivrs
pop
aam
icebp
jmp
mov
lock
push
adc
pusha
fsubp
mov
int
jg
ja
mov
push
dec
or
add
pop
jnp
test
add
repnz
hlt
imul
or
inc
pop
xor
jl
hlt
add
fwait
mov
in
rorb
push
pushf
pop
in
aaa
filds
dec
or
mov
adc
lds
pop
adc
lds
jmp
repnz
cmp
decl
dec
push
test
jo,pn
insb
aad
mov
lock
mov
push
pop
push
loopne
xchg
outsb
adc
mov
jne
jmp
lcall
xchg
insb
mov
ss
fsubl
xor
or
into
ficoms
sbb
popa
imul
pushl
leave
mov
inc
orb
jle
and
mov
bound
stos
dec
adc
stc
xchg
push
aam
shlb
ss
shr
out
outsl
jbe
out
gs
pop
push
mov
jns
xor
pop
jae
dec
sub
movsb
fwait
inc
jb
push
mov
loope
aaa
std
cmp
push
cmpsb
bound
push
or
clc
and
adc
dec
leave
pusha
incl
out
inc
dec
lret
in
cli
inc
int3
dec
inc
mov
movsb
dec
scas
push
je
std
fcoms
lret
jmp
pushl
iret
ja
mov
sahf
mov
inc
xor
pop
sbb
adc
mov
jno
inc
sarl
cmp
ret
pop
mov
mov
ficompl
pop
cmp
call
idiv
pop
call
popf
xchg
mov
insl
jne
cmp
ret
mov
ljmp
les
fisubl
push
lods
lret
aad
dec
popa
fldl
iret
lret
lret
inc
into
outsb
repnz
cmpsl
inc
adc
les
mov
loop
or
jmp
jge
sbb
fiaddl
or
out
les
mov
pop
out
inc
mov
jmp
cmpsb
outsb
inc
jbe
iret
insb
sub
neg
sarl
cmp
inc
cmpsl
mov
sub
adc
sbb
gs
mov
and
cmc
cli
adc
pop
jp
xchg
into
sub
inc
lret
std
or
cli
call
fbstp
xor
or
dec
cld
cwtl
or
fwait
inc
sub
xor
hlt
aaa
push
shrb
test
mov
aam
mov
daa
das
add
fwait
addr16
cmp
sbb
decl
ljmp
add
push
test
mov
cmp
dec
lret
es
cmp
inc
add
pusha
and
shll
cld
push
stc
gs
jle
sbb
inc
add
mov
daa
dec
test
daa
jp
push
add
ss
pushl
ljmp
into
aaa
mov
shlb
cli
mov
add
push
mov
movsb
or
adcl
add
xor
dec
ret
repnz
jmp
xor
in
sbb
push
test
mov
mov
push
test
stos
adc
push
dec
mov
stos
sbbl
cli
adc
inc
mov
mov
inc
sbb
scas
int
xor
shr
mov
mov
xor
add
std
call
jmp
loopne
cmp
or
rclb
sub
cmp
cmp
or
dec
cmpsl
rol
dec
das
jns
cld
bound
js
dec
mov
jbe
xlat
and
ficomps
and
lods
push
test
fcmovu
ret
int3
xor
aas
jno
xchg
mov
adcb
pop
mov
and
and
jmp
pop
sti
out
dec
out
ljmp
jg
mov
les
mov
jnp
jmp
repz
jmp
leave
pop
mov
mov
jae
mov
inc
jb
cmp
push
ljmp
cld
loopne
imul
adc
push
js
or
xchg
cs
inc
push
pushl
xor
sahf
test
mov
int3
dec
sbb
mov
test
incl
mov
loop
lret
xor
mov
fsin
jmp
push
fistpl
ret
mov
mov
mov
and
push
test
push
orl
fildll
test
int3
fldenv
adc
or
sbb
in
loopne
sub
xor
lcall
loopne
mov
outsb
xchg
cmpsb
sti
xor
jo
pop
push
sbbb
es
out
jecxz
or
dec
xchg
imul
shl
jl
jmp
push
fdivl
and
jmp
pop
lds
fwait
or
mov
cmc
adc
ss
dec
jg
call
test
jle
jmp
loopne
sahf
and
inc
push
negb
sbb
pop
cmp
scas
sub
dec
add
ja
rcrl
decl
push
push
iret
mov
rol
loop
pop
sbb
push
out
adc
shrl
ljmp
lcall
stos
mov
mov
movl
orl
cmp
xchg
add
lcall
inc
insl
add
clc
rcrb
mov
test
fnstenv
jmp
mov
add
incl
or
sbb
pop
mov
push
mov
xlat
add
scas
pusha
add
repz
and
lcall
sub
aam
jg
shrl
xor
mov
std
jg
pop
xchg
cmp
mov
cmp
in
jle
add
out
ret
jmp
jle
nop
sbb
sub
sub
ret
sub
mov
decb
push
dec
cmp
jecxz
addr16
ljmp
and
stos
lods
pop
or
pushf
add
or
js
and
fbld
pop
jne
fwait
push
lea
loopne
xor
cli
lcall
insb
icebp
ficoms
pop
nop
shll
loopne
mov
dec
dec
insb
push
xchg
call
pop
lods
int
xchg
mov
cmp
pushl
pop
push
pop
iret
imul
clc
and
adc
or
and
sub
mov
movsl
mov
push
rol
repz
mov
idivb
fwait
int
aas
aaa
sti
fwait
out
pop
xchg
inc
icebp
mov
dec
jno
jb
cmp
and
adc
xchg
lcall
lcall
adc
inc
les
pop
test
mov
and
cmp
mov
das
clc
jmp
cmp
mov
push
inc
and
cli
adc
test
js
leave
flds
add
xchg
adc
jle
sub
sbb
dec
shr
or
inc
inc
jg
insl
clc
cmp
push
fcomi
jo
pop
fdivrl
mov
adc
sarl
mov
xchg
adc
je
jmp
ljmp
push
out
dec
pusha
cmpsb
and
push
xchg
jl
jle
push
dec
fdivr
cli
push
mov
ss
popf
popf
ljmp
mov
pop
les
cs
and
fwait
jb
cs
jmp
add
or
in
sub
call
mov
mov
aas
mov
test
incl
mov
sub
and
cmp
mov
fldenv
inc
out
flds
rorb
xchg
lods
add
cmc
int3
es
ljmp
mov
xor
mov
xor
inc
sub
and
mov
mov
adc
adc
pop
int
sbb
js
cwtl
dec
iret
push
addr16
jmp
pop
push
scas
loope
jbe
fsubr
xor
movsl
cwtl
test
pusha
sub
jae
aas
into
incl
cwtl
arpl
pop
sub
popa
push
push
xchg
xor
or
aaa
inc
mov
xor
pushf
inc
shl
imul
sbb
and
jnp
mov
mov
cmp
sub
adc
adc
push
mov
arpl
jg
call
nop
leave
and
mov
sbb
in
testl
jmp
icebp
stc
sahf
push
fadd
out
push
icebp
sbb
sarb
cld
or
enterw
push
lods
mov
outsl
into
out
mov
xor
push
jae
xchg
daa
test
inc
sbb
dec
push
inc
lcall
jae
mov
or
inc
adcb
andl
aas
mov
fdivrp
lcall
adc
stos
mov
and
fcmovnu
scas
addb
pushl
enter
in
shll
xor
cmpsl
sbbb
arpl
sub
adc
jno
inc
ds
xchg
incl
push
je
ljmp
mov
xchg
in
cmp
push
sub
mov
call
jb
add
ja
mov
mov
into
movq
ljmp
adc
jmp
fldl
xchg
fstl
xchg
call
cld
mov
or
lea
and
xlat
out
stos
push
int3
jns
in
push
push
test
rcrb
aas
sub
pop
mov
add
jae
ja
insl
outsb
sbb
inc
cld
pop
pop
pop
adc
imul
js
pop
ret
es
loope
xchg
mov
dec
icebp
mov
sub
je
sti
dec
sbb
or
dec
xor
xchg
insl
dec
jns
mov
inc
insb
cmp
shrl
loop
call
sbb
cmp
stos
xlat
pop
jge
scas
jbe
ret
int3
jle
in
sahf
xlat
mov
iret
int3
cmp
inc
xchg
aaa
jbe
xchg
mov
fidivrs
je
cli
pop
lcall
or
insb
push
pop
inc
imul
push
dec
lcall
adc
roll
cltd
ret
lcall
ljmp
int
jmp
mov
mov
add
cmp
aam
inc
addr16
fdivs
xchg
mov
xchg
out
imul
jmp
leave
dec
testb
lods
clc
sub
das
jae
test
sbb
adc
lcall
mov
and
sbb
push
lea
pop
sbb
xchg
xchg
dec
xchg
pop
add
cmp
jmp
push
jno
jnp
xor
xchg
cwtl
xchg
cld
idivl
shll
add
ret
incl
icebp
add
mov
xchg
xlat
test
dec
in
pop
xchg
dec
inc
nop
pop
idivb
js
lock
inc
push
jecxz
sar
in
xor
ficoms
sub
pop
adc
sub
mov
mov
sbb
jo
hlt
push
out
sbb
bnd
out
xor
add
sar
or
shl
popa
sub
ds
mov
mov
jnp
adc
xchg
jo
and
xchg
inc
and
out
adc
xor
mov
popa
xchg
nop
pop
push
sarl
sub
negb
push
leave
sahf
sbb
lock
dec
push
clc
add
pop
popf
icebp
bound
jecxz
nop
insb
loop
cmpsb
sub
cli
lret
add
scas
sub
inc
testb
and
movsl
lcall
and
sbb
stc
movsb
sti
ljmp
sbb
add
jns
imul
add
push
adcl
mov
ljmp
mov
sub
mov
mov
cmp
mov
adcl
mov
ljmp
add
aaa
and
push
mov
or
fbstp
dec
sub
in
and
mov
jnp
std
call
stos
sub
lahf
out
dec
dec
xchg
pop
popa
cmp
and
sbb
adc
fbld
sub
jle
sub
pop
xor
int3
sahf
dec
add
rcl
rcll
push
xchg
cmp
lods
mov
popf
dec
fwait
nop
sbb
je
enter
ret
fmuls
incl
inc
dec
ss
int
insl
dec
jmp
pop
and
cmp
enter
std
jmp
inc
arpl
mov
sub
stos
in
ja
iret
or
push
inc
sahf
and
mov
push
daa
incl
addr16
mov
push
mov
or
or
xor
pop
hlt
inc
mov
scas
lret
pushf
jo
jl
inc
imul
outsl
pop
imul
mov
mov
repz
xchg
sahf
lcall
loope
cltd
and
xchg
inc
pushl
inc
and
fistpll
ja
or
xchg
xchg
sub
pop
cld
int
bound
test
ljmp
xchg
aaa
imul
mov
stc
jle
int
popf
aas
or
mov
call
fnstsw
imul
iret
cmpsl
clc
ss
or
out
inc
jge
test
or
movsl
adcb
push
cmp
in
xchg
jge
out
push
shll
mov
mov
decl
mov
push
add
lods
pop
push
out
fdivrs
push
mov
ljmp
rorb
fnstenv
out
js
pusha
sbb
stos
mov
cmp
mov
mov
nop
pop
xlat
sbb
les
mov
clc
xor
xor
popa
push
jecxz
call
and
scas
shlb
push
pop
mov
in
pop
inc
insl
mov
mov
es
loopne
dec
rclb
xchg
fdivl
gs
push
ret
cwtl
inc
lret
lret
nop
rcrb
xchg
mov
insb
pop
xor
and
sub
inc
mov
test
mov
lcall
js
out
fdivs
xchg
in
cwtl
inc
stc
lods
lock
aas
push
shl
ljmp
cmpb
push
fucomp
xchg
rclb
loope
stos
in
repz
in
lret
pushf
idiv
fistpl
mov
xlat
lods
imull
pop
test
jb
or
jnp
loop
xchg
decl
int3
xorb
cmp
or
inc
hlt
cmpsl
cmp
adc
jmp
outsb
clc
inc
pop
mov
int
out
dec
mov
test
addr16
jmp
cmp
push
add
jns
loop
cmpsl
mov
int
push
iret
pop
sub
mov
insl
xchg
cmp
fisubs
rorl
push
mov
addb
call
shl
push
roll
mov
repnz
jno
ficomps
mov
pop
lods
outsl
addr16
jg
inc
aam
xor
lret
out
rolb
or
cli
outsl
sbb
xchg
incl
mov
inc
in
xor
ljmp
pop
jmp
mov
push
inc
mov
mov
lods
mov
xor
sbb
adc
mov
loope
add
into
or
ljmp
cld
aam
mov
or
stos
adcb
dec
push
mov
cmp
sub
fsubrs
or
pop
je
jecxz
aad
mov
and
arpl
add
and
mov
xor
add
fmul
push
sub
xchg
shlb
fcom
mov
pop
aam
data16
stos
insb
mov
mov
repz
loopne
mov
sub
mov
fsubrl
jg
mov
test
dec
ficoml
ds
shl
mov
dec
mov
cmp
loopne
loope
out
jb
mov
inc
movsb
std
call
adc
and
fsubrp
xlat
xchg
cwtl
adc
adc
fwait
push
mov
cmpsl
dec
out
imul
mov
and
and
mov
not
jecxz
shrb
outsl
jae
jmp
mov
mov
push
mov
cmc
rcrl
lock
inc
or
pop
adc
pushl
or
inc
jg
test
sub
lahf
mov
shll
sahf
stos
jg
movsl
dec
es
arpl
add
and
out
push
mov
or
pop
jmp
jbe
inc
adc
sarb
cwtl
and
and
inc
xchg
shll
das
and
bound
cmp
fsub
mov
xchg
jge
fisttps
call
sbbb
dec
out
mov
addl
xchg
pop
xchg
pop
jge
lahf
adc
fcomip
int3
or
push
sbb
adc
mov
testl
jmp
dec
jns
mov
out
push
mov
mov
faddl
mov
mov
sbb
inc
leave
adc
out
cmp
sub
ja
xor
stos
sbb
add
pushf
sbb
cli
aad
ret
int
sub
out
test
pop
test
aaa
cli
sub
inc
call
xor
pushl
cli
lcall
pop
push
and
cmpsl
sbb
sti
inc
xchg
das
jne
lods
xor
scas
cli
pushl
sub
adc
cld
sbb
sub
sub
aad
out
ljmp
clc
dec
lea
mov
dec
mov
xchg
jno
xor
add
pop
pusha
scas
into
mov
dec
in
scas
mov
pop
adc
fcoms
lock
sbb
jno
andb
sbbl
ljmp
push
push
dec
in
xor
push
mov
lahf
dec
jno
jle
stos
sbb
out
out
mov
pushl
orl
inc
pushf
jecxz
pop
xchg
push
inc
mov
fbstp
jno
in
stos
ljmp
xchg
sub
rclb
push
inc
fimull
pop
xor
fidivrs
jmp
lcall
lods
test
lock
pusha
inc
popa
add
and
mov
xor
decb
inc
fwait
push
ss
push
iret
and
jg
dec
bswap
das
cmp
push
sub
mov
stc
repnz
xchg
xchg
inc
mov
sbbb
insl
mov
or
call
inc
push
jl
cmp
mov
fbld
out
sar
lcall
das
sub
in
les
cmc
add
pop
loopne
sbb
sbb
bnd
icebp
in
pop
cs
aaa
pop
std
call
in
nop
fldenv
add
sub
push
pop
sahf
and
rolb
cld
lea
jmp
lock
add
fwait
pop
push
dec
pop
mov
inc
cmc
inc
jecxz
addl
mov
sbb
incl
leave
loope
xor
push
daa
and
out
cmpl
lea
mov
and
clc
stc
xor
or
movsl
sub
decl
pusha
push
mov
sbb
and
movsl
aad
pop
aaa
nop
dec
push
inc
mov
pop
dec
ss
and
negb
cmp
or
cmp
sub
add
xor
inc
xchg
test
cs
cmpsb
fcomip
ljmp
enter
lcall
mov
fildl
lcall
and
mov
xchg
pop
orb
sub
or
outsb
jg
jle
cmp
test
lock
lret
cmp
out
cwtl
mov
in
mov
pop
incl
xor
mov
jmp
add
cvtpi2ps
sbb
xor
mov
mov
pushl
movsl
in
xchg
or
add
cmc
lock
xchg
cmp
ljmp
dec
movsb
sbb
mov
xchg
cld
and
scas
mov
lahf
incl
mov
mov
add
lahf
jge
fs
mov
or
sbb
pop
les
jne
mov
icebp
shll
sub
cmpl
dec
fimuls
adc
lret
ret
imul
push
call
adc
es
xlat
cmc
mov
std
ja
and
xor
xchg
jmp
ret
jmp
mov
sbb
mov
fs
xor
sti
imul
stc
push
jl
lock
test
js
push
or
ljmp
negb
test
mov
cmp
push
xlat
fldl
mov
pop
add
lahf
xchg
add
dec
imul
inc
clc
jo
fdivrs
clc
cmpsb
mov
aaa
stos
pushf
outsb
ret
push
inc
rolb
mov
decb
mov
ret
pop
je
push
or
xchg
cmpsl
push
sbb
jp
test
pop
mov
aam
jno
push
dec
sbb
ds
lock
xor
mov
jmp
xchg
sbb
fstl
and
pushf
jnp
int3
adc
cmp
lcall
mov
xor
sub
and
jbe
cwtl
bound
sti
sub
shl
mov
scas
cmp
pop
rcr
sub
xchg
je
or
pop
repnz
xlat
or
test
mov
sbb
int3
adc
sbb
das
rolb
push
aam
lret
out
cli
pushl
adc
filds
ja
clc
pop
sub
pushf
cmpl
xor
dec
in
cmp
das
jmp
call
clc
dec
shlb
scas
inc
inc
outsb
jecxz
loop
xor
lret
ljmp
push
sbb
les
or
dec
adc
int
adc
ds
cmp
cmp
sarl
ljmp
in
dec
xchg
add
mov
sbb
imul
daa
mov
dec
imul
iret
daa
sbb
and
push
inc
lods
cli
mov
fsubrl
jle
adc
shl
jg
add
xchg
dec
xchg
fists
and
mov
es
call
data16
adc
adc
push
sub
pusha
pop
shrl
movsl
in
call
stos
call
adc
pop
mov
repnz
pop
pushf
clc
cmpl
fmul
push
decl
ror
in
mov
mov
inc
bound
mov
sbb
pop
unpckhps
dec
fcom
mov
data16
sbb
sub
cs
push
enter
pop
add
jmp
stc
out
je
stos
inc
mov
jp
pusha
dec
stc
mov
xchg
mov
addr16
pushl
push
mov
xchg
stc
pop
fidivs
dec
shlb
inc
xchg
hlt
jae
xor
fldl
clc
push
rorl
and
into
fldl2t
jbe
mov
dec
mov
ljmp
or
mov
jns
or
sub
incl
dec
or
cmp
add
inc
jns
popf
sbb
imul
ss
jb
inc
test
fs
ljmp
mov
movsl
jo
cmp
repz
shlb
fwait
roll
sbb
mov
hlt
popa
xchg
bound
test
nop
ja
fdivrs
incl
inc
stc
and
push
push
jecxz
out
or
jge
pop
je
mul
cwtl
jg
scas
inc
mov
test
in
pop
addr16
popa
pop
outsl
shlb
ja
inc
jp
stos
pop
pop
push
adc
or
call
mov
xor
add
dec
imul
ljmp
and
xor
jmp
sbb
shll
out
in
out
test
mov
fisubrl
or
cli
decl
cmp
les
gs
call
mov
cmp
ret
es
jle
jl
pop
adc
aam
jmp
pop
mov
adc
jecxz
iret
push
dec
jge
adc
sub
leave
aad
ds
cli
push
das
xor
and
fistpl
fdivp
adc
inc
in
fs
scas
ljmp
push
pop
add
ss
xchg
lret
dec
fstpl
ds
hlt
ret
mov
stos
ja
test
fistl
test
or
sub
inc
sahf
nop
cmpsb
dec
jmp
clc
lea
mov
inc
fistpl
lods
bound
mov
push
xor
cmc
xchg
iret
cmp
loop
jnp
adcb
push
adc
mov
iret
inc
xchg
push
or
mov
dec
pop
rcll
pop
mov
sbb
call
in
fcmovbe
sub
jae
fistps
push
mov
sub
pop
jl
jno
xor
int
das
dec
jecxz
mov
sbb
pop
mov
aaa
sbb
cmp
add
int
jbe
pop
jl
jo
incl
xchg
xchg
mov
rorl
push
imul
jb
pop
incl
je
loop
inc
xor
out
out
xor
fildll
jo
adc
inc
xor
daa
push
stos
ret
jmp
mov
iret
lret
push
xchg
stc
repz
js
mov
shrl
push
test
sub
add
decl
cld
push
int3
out
pop
mov
pop
mov
sub
jae
inc
dec
adc
repz
into
pop
xor
in
mov
inc
clc
mov
ja
jno
mov
mov
stos
fcomip
jmp
cmp
cmp
pop
dec
lock
or
and
clc
imul
pop
cltd
jnp
mov
add
sub
fcompl
cwtl
repnz
das
in
mov
test
call
fsubr
pop
push
jmp
jle
cmpsb
or
aas
andl
std
ljmp
mov
insl
shr
mov
xor
fadds
icebp
decl
fbld
add
xchg
leavew
lahf
mov
lock
mov
outsb
xor
lcall
xchg
scas
cmp
pushl
push
and
sbb
xchg
jecxz
faddl
enter
jl
in
iret
popf
jmp
jmp
into
cli
mov
sub
adc
add
dec
rcll
dec
jbe
ret
decl
jb
adc
std
ljmp
stos
pop
clc
lahf
lds
insb
fdiv
mov
call
pop
mov
mov
imul
out
outsb
pop
jo
incl
pop
sbb
ret
in
push
sbb
rcrb
mov
dec
sub
mov
sub
lock
pop
into
test
das
mov
pushf
pop
imul
sub
movsb
jb
adc
sub
cli
daa
je
mov
sets
xchg
or
and
xor
insl
lods
mov
pop
jle
call
jmp
or
dec
movsb
lret
xor
jo
cmp
popa
mov
lcall
pop
mov
repnz
dec
sti
das
test
adc
cmpsl
outsb
ja
mov
insl
add
ljmp
icebp
mov
mov
cmpsb
hlt
adc
xchg
test
lock
daa
add
pushl
mov
mov
push
rcrb
sub
fwait
scas
sbb
adc
lcall
lret
shll
pop
test
pop
mov
lds
ficoms
xor
xchg
sti
cmp
call
xchg
leave
data16
insl
mov
insb
sub
in
xchg
mov
xor
sbb
push
mov
add
out
inc
cld
neg
fisttps
cwtl
pop
xor
out
shl
inc
out
mov
jg
mov
cmp
xor
push
xchg
arpl
movsl
hlt
decb
xlat
hlt
mov
or
cmp
scas
aad
lods
mov
fisttpl
adc
paddb
mov
add
adc
dec
cmp
ljmp
jbe
lds
cmp
in
stos
add
xorl
push
imul
add
mov
sub
dec
hlt
insb
mov
ljmp
movsb
pop
icebp
leave
dec
test
jmp
rep
lds
inc
loope
cmpb
mov
pop
or
jne
dec
xor
or
js
jmp
movsl
cmp
lds
cmp
pushl
imul
cmp
add
aaa
stos
test
add
test
jmp
loopne
cmp
fstp
out
rorl
xor
mov
les
sbb
mov
das
sar
push
loop
enter
in
repnz
mov
arpl
dec
mov
mov
pop
mov
dec
decl
push
pop
dec
aas
mov
mov
inc
data16
jno
adc
popf
rol
cmp
mov
cld
mov
fildll
cmpsb
sarl
ljmp
jmp
mov
jo
pop
dec
ljmp
pop
jmp
sub
mov
int3
inc
test
cltd
and
bnd
fldt
decl
sahf
mov
xor
add
faddl
aaa
adc
mov
mov
daa
and
cld
pop
mov
inc
inc
les
xchg
fisttps
cmpsl
and
push
mov
inc
dec
dec
aaa
fistps
ret
xor
mov
inc
fwait
les
xchg
cmp
and
ljmp
and
xchg
mov
shl
lcall
js
pop
stos
and
lcall
xor
jns
sub
and
jmp
das
jmp
lcall
jmp
in
pop
dec
dec
pop
pop
sbb
mov
test
xchg
aaa
mov
test
in
and
test
xchg
push
dec
test
lret
mov
jl
mov
lret
mov
out
lret
lahf
sub
pop
mov
icebp
xchg
or
sub
pushl
out
enter
xchg
mov
inc
sbb
roll
cmpsl
add
test
dec
int
mov
cmp
or
mov
in
cld
pushl
inc
pop
pop
inc
cli
int
xchg
inc
fwait
mov
data16
xor
in
add
cmpsb
insl
stos
iret
lock
and
adc
jmp
icebp
adc
fildl
inc
jg
dec
notb
adc
repnz
xchg
out
adc
fdivr
aaa
cld
aaa
dec
xchg
mov
movl
sti
inc
lods
rclb
scas
nop
mov
push
jbe
and
cli
lcall
test
cwtl
outsb
mov
int
mov
mov
sbb
pushl
mov
or
stos
loopne
mov
adc
fdivr
jns
adc
mov
fistpl
lods
fucomp
xor
mov
fistps
call
xor
or
inc
je
jb
lret
push
roll
mov
sub
nop
fcmovnu
sub
fstps
xchg
xlat
add
out
push
cmp
inc
xor
incl
push
push
lea
dec
lahf
pushl
jle
mov
not
lock
push
lahf
or
cmp
push
je
clc
xor
decl
mov
pop
std
adc
pusha
cwtl
push
dec
push
ds
fisubrs
shrl
xchg
subl
daa
pop
lcall
leave
addl
sbb
pop
mov
or
les
xchg
stos
daa
or
mov
stos
xor
fs
lock
mov
jae
arpl
jnp
xchg
xorb
subl
imul
push
xchg
clc
mov
mul
and
jmp
ljmp
xchg
inc
xor
jae
into
add
push
pop
mov
jno
test
lods
push
xor
fwait
gs
dec
out
icebp
cwtl
nop
xchg
pusha
leave
lods
fisubrs
aaa
fcompl
mov
xlat
adc
imul
jmp
mov
test
pop
cs
sub
mov
pop
int
outsb
out
sahf
clc
sbb
pop
movups
arpl
stos
xor
cld
lea
and
mov
cmp
lahf
dec
nop
lea
shll
call
je
sub
nop
adc
call
jp
lcall
inc
outsb
pop
adc
pop
sahf
xchg
mov
jne
sbb
cld
int
popa
ljmp
andb
iret
lods
stos
les
aad
mov
std
xor
push
fisubs
out
sbb
out
lahf
int
xchg
shlb
pop
stos
and
or
movsl
mov
cli
lds
mov
mov
mov
imul
fsubs
xchg
lcall
adc
mov
mulb
in
sub
or
jbe
sub
or
dec
loop
jae
jmp
loop
aas
loop
loopne
ret
popf
arpl
adc
loopne
mov
aam
hlt
out
test
shll
push
outsb
push
push
mov
xorl
sbb
xor
pushl
mov
movsb
nop
and
cmpsb
pop
mov
inc
outsl
cmc
xchg
and
pop
xor
decl
mov
in
test
and
adc
xor
test
js
imul
dec
nop
fcomps
inc
dec
and
inc
jmp
xchg
xorl
lahf
push
ret
ljmp
jae
mov
mov
sbb
icebp
jb
pop
fmuls
add
add
mov
mov
ljmp
test
pushf
jne
fmull
rorl
call
shrl
sub
in
pop
pop
lret
jne
push
adc
subl
incl
mov
fs
ja
mov
pushf
pop
cltd
mov
and
ret
fsubrs
decl
ljmp
iret
shll
fdivs
sub
pop
xchg
fldln2
cltd
xor
clc
or
fldl2t
dec
xor
mov
addr16
lcall
int
mov
clc
test
lcall
call
push
popa
mov
mov
xor
lahf
nop
arpl
ja
jmp
aas
loopne
mov
fiaddl
loope
mov
mov
imul
fbstp
sub
clc
sbb
jnp
fimull
std
stos
cmpxchg
jns
cs
jg
sbb
push
jmp
mov
mov
add
ljmp
jg
es
push
jg
sub
or
sbb
rcrb
push
incl
or
pop
inc
add
int3
lds
jmp
aas
xorl
jo
lods
push
repnz
inc
fildll
push
ss
scas
inc
movsl
test
sbb
mov
xorl
mov
shr
inc
ljmp
test
in
xchg
add
jle
xlat
push
xor
jecxz
pop
cmp
arpl
cmc
jmp
in
add
inc
mov
ds
ficoml
adc
pop
lods
sub
fsubrp
aaa
stos
shll
shlb
inc
jns
xor
dec
xchg
push
push
jno
loop
out
cwtl
lret
pop
xorb
xchg
mov
xor
lock
push
stos
add
jmp
addr16
pop
adcb
cmpsl
outsl
sbb
xchg
sbb
add
out
shrb
mov
xchg
aam
fisttpll
push
sarb
sbb
mov
mov
xchg
out
xorl
movq
xlat
xor
adc
pop
mov
rcl
ret
decl
lock
push
sub
into
xchg
mov
mov
lcall
js
popa
and
scas
add
dec
fmul
jb
or
jne
and
push
adc
addr16
dec
add
mov
add
call
call
inc
add
inc
pop
filds
gs
pop
outsl
mov
adc
or
out
orb
mov
sub
pop
push
aaa
hlt
xchg
scas
fistps
popf
sub
mul
inc
sarb
stos
push
cmpsl
lcall
sbb
sbb
aaa
ret
or
pop
cmp
call
add
lret
xchg
das
jne
in
shlb
scas
inc
cmpsb
mov
aaa
fiaddl
repnz
pop
das
cli
fistps
rcpps
and
sbb
ds
mov
mov
js
pop
stos
mov
adcb
mov
or
pop
nop
cmp
lret
inc
add
xor
jbe
fdivr
ljmp
fsubrs
mov
movsl
sub
xchg
pop
lock
inc
dec
and
cwtl
clc
jmp
mov
jnp
out
lock
sbb
pusha
test
push
stos
lret
decl
add
jg
sbb
lods
in
outsl
push
hlt
mov
pop
or
pop
mov
mov
popf
xor
arpl
add
decl
push
mov
fs
push
adcl
or
pop
sarb
mov
cmp
jle
ljmp
push
xor
xor
je
and
mov
or
cmp
push
nop
ss
dec
mov
testl
addl
nop
mov
call
aaa
jge
gs
icebp
and
adc
push
in
mov
fcompl
mov
pusha
inc
push
adc
xchg
and
hlt
into
xchg
jle
add
sbb
jge
iret
negl
xchg
push
into
jns
push
inc
sbb
es
push
xchg
dec
loopne
shrl
incl
cmpsb
cmp
cmp
scas
sbb
dec
scas
pop
jno
inc
jnp
jmp
cld
fldcw
dec
sbb
clc
repnz
shlb
gs
dec
test
pop
mov
jg
jmp
int3
fdivrl
lds
and
nop
insl
dec
push
mov
repz
mov
cmp
fcmovu
sub
popf
cmp
mov
imul
jb
xorb
mov
test
mov
fidivrl
in
leave
cmp
in
pop
push
lret
dec
cmp
pop
pushl
test
sahf
inc
scas
sub
cli
insb
outsb
outsl
pop
mov
ljmp
cld
adc
leave
lea
jne
cmp
ljmp
push
dec
or
in
and
xor
xor
jp
xor
sar
ljmp
xlat
xor
lret
lret
jbe
in
or
inc
xor
leave
aam
cmp
stos
push
cmc
mov
jb
fsubr
inc
out
rcrb
idiv
xchg
and
and
scas
rcrb
xor
sarl
or
lcall
inc
or
nop
mov
or
ljmp
test
pop
mov
sub
sub
and
jp
and
int
fdivrs
insb
clc
ja
cli
notl
lods
cmp
or
mov
or
pusha
push
inc
xor
ret
dec
mov
incl
dec
cmp
sub
dec
push
lods
add
jmp
mov
pop
mov
mov
ljmp
mov
xchg
add
mov
fsincos
or
sbb
pop
inc
inc
fcmovnbe
call
xor
sbb
adc
lods
into
xor
pop
adc
mov
mov
add
cmp
mov
sub
pop
inc
out
sbb
jge
fisubl
mov
mov
mov
aam
lret
push
cwtl
mov
pop
mov
pushl
mov
and
stos
inc
pop
jae
repnz
int
jle
pushf
inc
or
push
jg
ljmp
dec
adc
push
loope
sbb
xchg
lock
clc
mov
dec
and
push
clc
in
add
cli
xchg
decl
aad
inc
ljmp
rorb
and
sbb
xlat
in
inc
inc
std
jmp
mov
in
movsb
sbb
and
jns
cld
add
sub
push
cmp
imul
call
adc
jge
mov
xor
call
mov
jmp
cltd
dec
stos
loope
jno
push
pop
or
lcall
mov
push
jae
or
call
mov
in
hlt
dec
or
and
jle
icebp
adc
xchg
mov
jo
inc
mov
add
push
sub
insb
fs
pushl
out
sub
mov
fwait
loop
hlt
call
cld
cmp
movsb
push
push
int3
jmp
mov
incb
in
test
push
jecxz
push
ss
mov
rol
movl
fcomip
adc
std
sub
sub
xor
repz
aad
out
movsb
lret
sub
call
xor
cltd
fsts
adc
add
mov
xchg
out
outsl
mov
xchg
pop
push
add
mov
ret
lcall
out
aaa
inc
filds
and
jg
out
andb
icebp
or
test
xchg
jno
adc
test
mov
test
fcmove
pop
stc
ret
incl
mov
xor
sub
jp
dec
addr16
and
jmp
dec
repz
jmp
cmp
pop
imul
adc
inc
or
stos
sub
int3
data16
push
jmp
outsb
or
shrb
cmpsb
outsl
aad
jg
and
call
xlat
and
icebp
cmp
icebp
fiadds
cmp
push
mov
or
push
shlb
xor
xor
mov
xchg
out
push
mov
lods
stos
jnp
mov
sbb
and
xlat
loope
ss
jnp
and
fldz
stos
mov
or
in
jl
mov
mov
rorl
push
mov
cmp
lock
incl
adc
add
bound
addl
cmpb
andl
popa
cld
mov
pop
xor
mov
pop
sbb
jg
and
cs
sub
rcrl
pusha
pop
cmp
inc
js
jns
inc
inc
sub
cmpsb
incl
daa
jp
inc
daa
das
je
xchg
negb
jbe
fldcw
sti
mov
jns
incl
xchg
cmpb
out
xchg
pop
inc
push
call
mov
mov
ja
jnp
add
add
jmp
loopne
mov
mov
mov
jb
into
mov
out
mov
rcl
mov
mov
fists
mov
push
mov
in
jle
dec
mov
movsb
xorb
dec
addl
jmp
pop
xchg
arpl
xor
push
pop
jns
fs
out
in
lcall
jg
movsb
ljmp
xchg
addb
stos
les
mov
jne
ljmp
jmp
jge
pusha
xchg
popf
push
mov
push
loopne
pop
repnz
cmp
push
mov
xchg
push
lods
xchg
ds
add
inc
aad
mov
inc
enter
jl
adc
adc
cmp
inc
or
lahf
aam
setbe
dec
jecxz
addb
icebp
jge
adc
mov
pushl
mov
in
xchg
in
push
adc
dec
jns
maskmovq
negl
and
repz
ret
decl
decb
xchg
push
sahf
out
dec
xor
stc
jge
xchg
jecxz
or
stos
xor
and
lahf
cmp
shrl
xlat
jg
lcall
jge
notl
mov
insl
imul
mov
call
sti
int3
mov
popf
orb
daa
adc
adc
pop
or
mov
out
push
xor
inc
test
int3
adc
mov
xor
or
or
xchg
test
sub
lcall
mov
cs
movsl
push
aad
pop
sbb
pop
cmovne
push
mov
incl
out
jp
sbb
jle
iret
cld
mov
fdivr
scas
jo
std
ljmp
jle
sbb
mov
pop
scas
fistpll
movsb
inc
and
jg
mov
stos
inc
inc
enter
pop
mov
mov
test
loop
push
clc
push
nop
pop
popa
fwait
sbb
sbb
add
mov
cli
incl
in
in
sub
dec
stos
sbb
inc
sub
sub
pop
add
lcall
xchg
adc
repz
dec
rcll
add
xchg
xor
cli
xor
ljmp
cmp
je
stc
or
into
out
xor
xor
movsb
xchg
cmp
jns
adc
inc
xor
mov
mov
or
jecxz
pop
add
test
out
jge
call
pop
inc
or
loop
or
sub
push
xchg
movl
out
add
cmp
push
popaw
or
sti
ljmp
ljmp
add
lcall
mov
das
and
aaa
xor
cmp
cmp
jmp
ret
or
add
pop
and
loopne
js
mov
imul
and
pop
jg
movsl
jecxz
push
xor
rcr
decl
cmp
jo
subl
test
sbb
outsl
imul
adc
das
mov
cmc
fisubs
loop
and
lock
lcall
and
fnstsw
add
jo
add
xor
int3
mov
vcmppd
pop
pop
xchg
or
sbb
out
cmc
inc
out
add
and
mov
lods
and
aad
insb
or
sbb
mov
pop
cmpsl
ljmp
pop
loop
push
shll
pop
dec
out
or
mov
dec
ret
pop
fidivrs
inc
push
add
loop
or
lods
xlat
lods
adc
jg
jge
mov
xchg
xorl
incl
sub
mov
cmp
stos
mov
sti
gs
fsubp
out
imul
sar
ljmp
fs
in
xchg
lds
pop
ja
ds
mov
jmp
fwait
and
cmc
xor
fimuls
adc
mov
jmp
xor
outsb
jg
sbb
and
decl
dec
shl
faddl
mov
stos
adc
lods
shl
outsl
or
lock
bound
mov
mov
call
xchg
cwtl
mov
jl
enter
movsl
sbb
mov
mov
cmpsl
inc
in
inc
and
incl
pushf
cs
pop
or
mov
adc
mov
jb
mov
jl
ficomps
ss
cltd
jmp
lret
stos
dec
outsl
cli
aas
mov
sbb
cmp
std
xchg
mov
test
cmc
std
adc
sbb
mov
leave
dec
sbb
cld
cmp
pop
adc
push
movsl
sbb
sub
aas
subl
insl
pop
cmp
imul
jecxz
mov
cmp
xchg
cmp
jle
push
fdivrp
repnz
cmp
xchg
and
mov
add
push
into
sti
push
mov
push
ror
xchg
iret
mov
ds
push
das
cmc
add
xchg
cmp
out
cmp
cmp
xchg
cltd
ljmp
aas
std
xor
decl
xlat
imul
ljmp
xchg
pop
sub
mov
in
push
scas
loope
out
mov
out
scas
outsl
dec
inc
lcall
adc
xlat
jl
mov
mov
mov
stos
xor
sahf
scas
inc
loope
decl
mov
es
lds
push
mov
cwtl
rcrb
mov
pop
jns
add
fcom
push
pushl
dec
inc
push
sbb
or
mov
mov
cmp
xor
mov
testb
and
rorl
decl
aam
addb
out
mov
dec
shll
decl
arpl
gs
and
or
push
loop
cmp
jecxz
xchg
pop
cmc
ja
insb
dec
pop
adc
pop
xor
mov
xchg
push
jae
ljmp
idiv
mov
ret
sub
sub
out
dec
adc
push
mov
pop
gs
in
mov
ja
inc
les
pop
rclb
cld
lcall
or
lods
sbb
pop
jb
les
or
jne
daa
pop
test
mov
movsl
xchg
sbb
scas
mov
mov
mov
mov
add
jmp
out
negl
jmp
mov
hlt
jle
add
inc
jl
add
ret
cmp
cmpsl
gs
shl
sbb
decl
cmp
dec
out
and
iret
sbb
mov
out
push
lea
push
movsb
xchg
jb
nop
bound
mov
decl
adc
cs
fimuls
fs
mov
data16
icebp
dec
test
scas
and
jne
rcll
push
gs
mov
mov
jg
out
fsubl
jno
shlb
sbb
pushl
mov
fucomi
lcall
push
fsubr
popf
decl
jo
movsb
in
lcall
les
fucom
bound
ds
cli
movsl
add
ljmp
aam
in
cmp
shl
push
push
pop
mov
decl
sbb
adc
jns
stos
inc
in
sbb
inc
dec
das
push
call
outsb
push
cwtl
jg
push
call
dec
mov
mov
scas
xor
jge
punpckhdq
repnz
rcr
sub
mov
mov
lcall
arpl
loope
pop
icebp
mov
sub
aam
sub
and
pop
sub
test
dec
fwait
sbb
fisubs
mov
mov
pop
fsubrl
pop
mov
cwtl
xchg
pop
cmp
sub
out
fs
decl
adc
in
jns
cld
cmp
add
add
and
jno
repz
pop
incl
divl
popf
mov
push
push
out
mulb
ljmp
repz
pushf
add
daa
fstpl
orl
add
adc
decl
hlt
pop
inc
repz
es
add
imul
bound
mov
and
push
inc
pop
jnp
idiv
frstor
ljmp
leave
dec
pop
scas
cld
inc
jmp
pop
int
lahf
stc
mov
and
ljmp
push
and
int
push
jns
mov
std
decl
mov
imul
pop
mov
xor
push
sar
ret
pop
cmp
dec
sbb
in
fadd
mov
mov
sub
or
jne
push
jl
pop
fmul
push
je
popa
fcmovnu
xchg
jmp
jno
in
leave
fadds
mov
mov
mov
jne
outsb
pop
test
ficoms
aam
pop
sbb
push
test
mov
mov
xorl
cld
mov
ljmp
lds
xorl
imul
push
adc
dec
xchg
or
xchg
leave
or
fbld
jae
pop
and
xor
or
decl
std
pop
lret
cmp
shrl
pop
push
add
adc
sub
imul
jp
insb
dec
pop
ja
xchg
lods
arpl
jl
sub
enter
mov
hlt
mov
aad
or
mov
xchg
dec
dec
inc
xchg
test
sbb
test
cmp
sarl
aam
mov
decl
lock
je
mov
and
push
cli
sub
xor
mov
dec
and
bound
aaa
adcb
jo
in
cltd
data16
ljmp
sbb
ret
pop
arpl
jo
cmp
or
sub
icebp
cld
in
call
dec
fstpl
arpl
push
lret
das
loopne
and
mov
call
loop
js
jnp
ljmp
das
add
push
lcall
daa
mov
mov
pop
movhps
jmp
add
out
cli
add
aaa
dec
cld
cmpsb
orb
ss
es
int3
ret
sar
pushl
lret
and
push
ljmp
leave
xor
in
rclb
or
adc
add
jg
cmc
negl
es
sbb
hlt
add
mov
popf
push
xor
popa
scas
and
in
lds
fs
rcl
insb
incl
mov
outsl
divb
test
adc
adcb
mov
xor
or
fs
ret
push
loope
add
aaa
sub
jecxz
xor
cmp
sahf
push
adc
jb
cmp
sbb
sub
mov
bound
push
cli
lcall
jp
xchg
pushf
int
imul
dec
ret
adc
add
and
jo
mov
sbb
cmp
xchg
dec
sti
lret
lock
lret
clc
inc
add
lahf
jmp
aaa
loope
jg
xchg
iret
js
jbe
in
push
and
push
inc
push
xchg
and
test
fcomip
cmp
pop
pop
xchg
mov
inc
push
cmp
popf
sar
mov
cmp
gs
das
into
shrb
loope
call
add
pop
cmc
sub
inc
push
pop
push
rorl
test
incl
or
push
jbe
and
mov
lret
jbe
mov
testb
dec
dec
lock
mov
outsb
lahf
pop
and
cmp
les
and
jmp
popf
lahf
ljmp
or
imul
int
and
or
test
dec
inc
xchg
dec
jg
dec
into
xchg
jns
jmp
jns
cld
and
push
aas
pop
scas
jb
adc
push
cs
mov
jb
jge
mov
ficomps
adc
sub
cmp
stos
push
ljmp
mov
mov
clc
push
imul
xchg
sbb
mov
decl
add
sbb
popa
daa
lcall
inc
mov
adc
out
clc
cmp
cmp
cmp
movsb
push
sbb
ljmp
orb
push
inc
or
push
xchg
jbe
jmp
cmpsb
mov
push
mov
inc
mov
es
outsl
xchg
call
faddl
xchg
fcmovb
rcrl
push
ds
je
lods
jmp
dec
xchg
or
adc
cmpsl
cmp
js
dec
nop
fs
lock
fwait
out
xchg
test
or
cld
sub
sub
movsl
xchg
aas
dec
inc
pusha
sub
mov
xor
jmp
sub
mov
outsb
or
mov
loope
lods
pop
jo
outsl
lea
cld
cmp
cmp
aas
fsubr
icebp
fistpll
stc
inc
cmp
incl
pop
push
popf
lea
push
push
outsl
int
scas
leave
in
in
orl
adc
in
fimuls
out
and
jns
pop
popa
ret
xor
sbb
into
pop
cmpsb
mov
decl
pop
adc
iret
loop
and
in
cmp
cld
sar
jmp
imul
ljmp
cmc
hlt
inc
and
out
es
push
mov
sub
int
outsl
into
dec
clc
mov
push
loop
or
add
mov
sub
ds
jg
cmp
ret
or
int
inc
aas
mov
xchg
xchg
in
test
test
jg
add
pop
dec
mov
push
pop
repz
push
icebp
push
dec
push
shrl
fadds
cmp
insl
add
inc
roll
mov
aaa
popa
sbb
test
clc
cmp
bound
pop
int
xor
cmp
xchg
inc
pop
ljmp
rcl
add
add
mov
data16
divl
sbb
ret
xor
adc
adc
incl
scas
mov
xchg
into
aam
addr16
lods
call
push
mov
add
push
lret
popa
roll
pushl
pop
mov
pushf
push
jo
movsb
push
xchg
scas
fidivs
nop
xor
ljmp
push
push
fstps
push
push
fcoms
loopne
imul
push
or
xchg
sti
cs
inc
pop
in
sub
or
push
xor
cmp
add
std
jmp
out
xor
ja
pop
test
mov
or
jg
pushf
test
rcr
sub
arpl
test
sub
sbb
in
bound
data16
and
es
jg
call
in
sahf
nop
inc
inc
jle
es
rcrb
mov
or
mov
mov
stos
repz
jg
call
lods
pusha
ret
push
mov
sbb
les
mov
inc
cmp
mov
sbb
cld
xchg
dec
leave
clc
pushl
rol
dec
cs
and
mov
sub
dec
movsb
pop
insb
sbb
push
stos
adc
fmuls
ds
pusha
stc
mov
jg
aaa
xor
imul
outsl
out
dec
jns
popa
cmp
cmp
xor
es
daa
pop
pop
or
xlat
sub
mov
xchg
les
jnp
dec
inc
movsb
lods
clc
jmp
icebp
leave
jo
xlat
leave
xchg
aaa
bound
es
loope
jnp
filds
aas
ds
cmc
pop
dec
and
lret
push
mov
mov
mov
dec
shll
test
decl
and
leave
outsb
adc
push
sbb
jecxz
call
mov
cmp
sti
push
mov
repnz
jne
push
xchg
sbb
jb
adcb
adc
push
mov
mov
xor
pushf
hlt
sub
push
loopne
pop
ficomps
cmp
flds
mov
inc
arpl
cmp
sub
jnp
packssdw
jmp
lods
ljmp
push
xchg
test
add
leave
lock
jae
inc
clc
mov
jno
stos
push
rorb
mov
add
sbb
and
and
js
push
adc
pop
push
enter
ret
movsb
push
jl
fstl
imul
out
sub
inc
test
xchg
scas
xchg
mov
mov
xor
addb
xchg
mov
shl
gs
ljmp
shrb
std
sub
stos
adc
in
fcmovu
movsl
adc
add
decl
push
test
sar
lcall
sub
call
sarb
sub
push
inc
push
in
ss
pop
subl
push
pop
int3
sub
pop
lret
lock
jg
inc
out
popa
xchg
stos
ret
dec
mov
std
jg
mov
notl
mov
enter
daa
push
push
sub
sub
inc
mov
mov
daa
xchg
cmpl
jg
call
pusha
xor
dec
push
push
test
jnp
adc
in
fimuls
std
incl
fcoms
inc
stc
and
cmp
aas
pushf
bnd
jle
xchg
fidivrs
push
std
jg
or
data16
fnsave
mov
push
adc
fcoml
jns
and
mov
push
mov
push
mov
call
xor
push
ja
and
popf
call
dec
popa
in
pusha
stc
dec
scas
aad
pop
in
pop
or
ss
std
cs
dec
push
out
xchg
je
iret
sbb
fldt
xor
and
mov
stos
or
inc
adc
decl
mov
ja
xchg
adc
into
or
jae
add
bound
xchg
ljmp
hlt
pop
inc
and
xchg
iret
rolb
sub
sbb
dec
pop
incw
lods
in
fnstsw
enter
ljmp
cmp
adc
dec
imul
rcr
daa
add
imul
jg
pop
outsb
and
add
lods
cmpsb
mov
cld
push
out
aam
icebp
inc
or
jg
cmpsb
inc
mov
push
div
shl
mov
bound
lcall
pop
in
lds
xor
cmp
icebp
mov
lea
paddsb
ljmp
push
jecxz
ss
outsl
and
mov
out
cli
jg
sbb
into
cli
stc
fsubrs
out
dec
mov
aas
les
cld
out
xor
lcall
sub
pop
imul
negb
mov
or
popf
arpl
add
ljmp
pop
jae
lds
jae
icebp
imul
mov
call
mov
bnd
arpl
or
into
mov
push
adc
insl
mov
cmp
cltd
aaa
rcl
call
mull
movsl
stos
insb
mov
imul
decl
pop
loope
loop
mov
cli
fs
mov
ja
idiv
aad
push
xchg
insb
dec
xor
dec
mov
std
push
push
mov
mov
cmp
outsl
sub
push
push
jbe
or
orb
cs
test
clc
mov
mov
jb
icebp
gs
adc
mov
mov
pop
or
jl
push
test
jg
cwtl
aad
inc
dec
xchg
sbb
cmpsl
xor
mov
fcoms
inc
push
decl
pushl
pop
add
xchg
adcb
pushf
and
mov
xchg
imul
cwtl
jg
imul
pop
mov
clc
jmp
popl
pop
ret
icebp
ljmp
ja
outsl
loope
sub
inc
jns
sub
fisttps
sbb
mov
pushl
pop
xor
dec
test
mov
cld
dec
aam
jne
jle
int3
xorl
incl
jno
pusha
ret
push
icebp
loop
mov
leave
fistpl
adc
pop
and
xor
inc
out
outsl
push
push
int3
xchg
sahf
ja
add
scas
arpl
jbe
mov
insb
es
or
pop
iret
fistl
or
lahf
ljmp
cli
std
push
xlat
rcll
mov
pop
loopne
mov
cltd
and
aam
jg
mov
mov
sahf
into
push
jmp
cmpsb
lcall
aam
ret
mov
add
call
add
fucom
mov
mov
jecxz
decl
fsubl
mov
and
cld
sub
pushl
lods
adc
vpsubusb
cmp
dec
enter
push
mov
pusha
jg
sbb
gs
push
push
ret
cmp
sub
push
or
xor
add
pop
push
jno
inc
xlat
sbb
loop
jg
cmp
cltd
lock
dec
cltd
lret
cmp
loope
dec
cmp
sub
js
es
sbb
mov
rcll
jmp
scas
and
inc
nop
nop
mov
bound
mov
mov
jbe
jo
push
mov
mov
mov
test
gs
pop
pop
xor
jmp
push
lods
or
vphsubdq
or
lcall
mov
outsl
aad
mov
jmp
fwait
lds
mov
sub
les
push
movsl
push
jg
pushl
int3
in
inc
scas
pop
cmp
mov
lret
daa
adc
or
mov
xchg
fildl
call
cmc
sub
es
inc
sahf
mov
rolb
mov
or
hlt
inc
pop
cli
and
stos
push
mov
shrb
or
insb
not
pop
push
mov
xlat
enter
push
fsts
push
xor
or
data16
pop
pop
leave
xor
clc
decl
or
repz
pop
fbstp
cltd
shlb
push
add
div
sub
movsl
jo
mov
shrb
add
das
pop
jp
addl
inc
fcmovnbe
mov
iret
clc
jle
loop
incl
or
lcall
pop
pop
lret
into
lods
test
test
call
icebp
and
jg
xchg
shrb
dec
ret
dec
xor
loop
out
clc
shrl
je
mov
sub
push
and
ljmp
cli
addr16
adc
mov
and
pop
stc
cmp
das
mov
jecxz
dec
insb
jbe
dec
arpl
pop
pop
or
inc
pop
or
cmp
mov
je
cmc
mov
pop
mov
jmp
lcall
xor
mov
stos
push
dec
stos
xchg
adc
lcall
xor
hlt
and
cli
or
test
nop
mov
movsb
push
sbb
fnstenv
lods
or
test
std
incl
cld
jno
pop
mov
ljmp
out
stc
fwait
push
test
sbb
adcl
xor
sbb
pop
ljmp
popa
out
je
cmp
mov
sbb
ljmp
sub
das
dec
mov
mov
lret
aas
in
aas
cltd
xchg
in
out
add
call
mov
pop
dec
mov
fnstenv
mov
dec
dec
dec
push
aas
repnz
sbb
add
adc
xor
sub
incl
adc
mov
jecxz
jecxz
adc
outsb
adc
aad
imul
mov
ljmp
xchg
sub
cmpsl
cmp
jbe
bound
lcall
rolb
cmp
pop
xchg
mov
les
loop
lock
xchg
cltd
pop
popa
inc
ljmp
push
sub
repz
loopne
insb
das
inc
mov
fbld
sbb
sbb
mov
and
pop
aas
in
mov
fildll
cmp
dec
leave
stos
adc
xor
nop
jmp
mulb
popf
cmp
mov
mov
stos
aaa
cmpsb
add
push
and
sub
cmpsl
mov
clc
fmulp
or
out
mov
mov
push
xchg
loope
cmp
ljmp
xchg
or
aas
out
out
dec
or
fmuls
push
cwtl
adc
dec
dec
movsb
mulb
cmpsb
xor
lar
push
push
sub
aaa
popf
push
sbb
std
or
out
ja
ja
pop
push
bound
sbb
inc
push
outsb
sbb
mov
cmp
pop
or
stos
sbb
mov
fwait
insb
daa
in
xchg
negb
rcr
sub
aas
ja
aad
dec
jns
stos
jae
repnz
into
sub
sar
paddb
inc
push
lcall
inc
pop
lods
out
fiadds
mov
xor
pop
xor
or
pop
lret
repz
ljmp
aad
out
lret
jp
std
enter
jecxz
add
dec
cmpsl
and
int3
mov
ljmp
fsts
ja
sub
mov
push
adc
adc
mov
jge
cmc
sub
xchg
adc
jmp
xchg
or
pop
subl
pop
out
or
mov
ljmp
fldl
sbb
into
pop
roll
sub
push
fs
sub
jne
push
ret
push
xor
fsubl
push
cmp
repz
pop
jmp
call
jl
cs
and
sbb
xlat
mov
fwait
sarl
ljmp
dec
pop
ret
push
jno
dec
pushf
call
decl
or
fwait
push
fildll
fstl
lds
pop
fs
add
cli
push
std
lcall
in
mov
ret
leave
ss
mov
icebp
adcb
mov
dec
leave
or
insb
adc
scas
cmp
jge,pt
inc
mov
sbb
enter
mov
mov
jmp
pop
iret
les
push
decb
movl
xlat
adc
cmp
fcomip
sbb
scas
xchg
inc
fisttpl
out
xchg
fidivl
add
insb
and
call
ss
pop
sub
jecxz
xor
dec
and
mov
adcl
mov
mov
jne
sub
sub
jl
lds
loope
orb
mov
cmp
mov
xchg
das
out
and
sub
mov
dec
test
ret
and
imul
push
xor
inc
movsb
dec
fucomp
push
mov
xor
pop
jae
in
inc
or
dec
sarb
push
pop
std
sbb
imul
stos
iret
cmp
loop
shlb
lds
mov
cmp
cmpsb
cmpsb
jno
stc
or
fimuls
sbb
jnp
sbb
adc
fbstp
outsb
mov
jg
test
test
fcomip
push
daa
sti
mov
adc
push
outsl
es
stos
pop
mov
fidivl
push
lret
incl
fbld
shrb
push
or
push
mov
shr
cmp
mov
aas
xchg
or
in
in
inc
mov
rcrb
xchg
mov
push
les
xchg
or
lahf
xchg
adc
call
in
jmp
cmp
rorl
cltd
jmp
lods
mov
inc
out
fbstp
lcall
xchg
jg
or
movsb
xchg
arpl
lret
addr16
xor
pop
icebp
call
outsl
mov
ss
cmp
jns
mov
or
jmp
shlb
mov
mov
ljmp
or
stos
adc
mov
or
aad
lea
inc
and
jg
ret
enter
incl
lahf
xchg
sub
rcpps
add
cwtl
shll
ljmp
test
jbe
out
pop
xor
or
incl
lret
dec
inc
mov
push
insl
cmp
dec
cld
js
aad
ret
lahf
and
gs
push
push
movsb
jg
push
or
inc
lods
in
std
push
dec
ret
pop
inc
aad
ljmp
push
inc
mov
push
movsb
in
lds
jmp
mov
pop
lret
fcomi
lock
loopne
mov
gs
clc
sub
int3
jl
mov
push
and
fisubs
pop
pushf
push
lret
es
mov
pop
add
fiadds
inc
or
dec
mov
fwait
mov
call
mov
xchg
das
sub
pop
test
aaa
or
insl
fs
or
push
fisttpll
sar
jmp
loopne
xor
js
jo
sub
jns
mov
inc
inc
fdivr
pushl
shlb
pop
popa
push
adc
lds
loope
jmp
jno
push
jge
sbb
xor
cmpb
mov
and
dec
les
test
sub
and
jg
incb
loope
or
push
dec
in
clc
jno
dec
lock
popf
data16
pop
cmpb
aam
jb
push
ret
mov
inc
out
ja
inc
ds
adc
ret
jp
cld
or
es
mov
adc
pop
jecxz
aam
data16
aaa
fisttpl
orl
inc
sahf
inc
or
das
adc
push
lret
fdivl
repz
inc
ss
dec
mov
dec
xor
jne
lods
shr
inc
cli
add
pop
mov
jl
sub
or
xor
out
int3
je
pop
cmp
loop
jmp
movsl
cmp
jecxz
dec
and
xor
nop
addr16
aaa
fisttps
sbb
sarl
or
jecxz
clc
nop
cmp
mov
mov
sub
setge
fs
cmpsb
call
sub
rcrb
xor
enter
pop
xlat
inc
mov
xchg
and
dec
test
addl
ljmp
stos
cmp
mov
das
sub
sub
dec
mov
sub
cmpsb
jmp
push
dec
stc
xor
mov
pop
mov
loopne
test
mov
cmpsb
xchg
jp
xorl
push
cmp
push
xchg
push
add
ret
push
idivb
push
mov
repnz
out
clc
lcall
adc
push
faddp
jmp
cmc
dec
in
cmpsl
mov
push
jecxz
xor
cli
pusha
andb
mov
sar
xchg
hlt
mov
enter
xchg
out
shr
sarb
mov
jbe
jnp
sub
pop
outsb
jae
jl
mov
sbb
mov
xorb
test
mov
dec
sbb
lock
or
outsl
lcall
aaa
scas
dec
stos
out
test
cmp
std
cmp
push
incl
cld
pop
pop
je
mov
in
lret
adc
mov
neg
mov
call
cld
mov
push
xchg
push
outsl
push
dec
arpl
sbb
mov
decl
jo
int3
int3
jmp
repnz
in
jle
inc
sub
call
rorl
pop
out
inc
adc
adc
jg
or
or
ficoml
imul
jg
pop
sub
and
mov
xor
ficompl
call
xor
outsb
push
adc
scas
movsl
ret
sbb
int3
lds
jbe
sahf
gs
jecxz
jg
dec
push
aam
lahf
fcomip
out
dec
mov
xchg
pop
lds
mov
and
mov
aam
ret
hlt
iret
out
shrb
mov
pushl
sahf
fcomps
cmpsb
sbb
dec
inc
shll
jno
mov
incl
add
dec
mov
ror
xchg
sub
insb
mov
mov
icebp
andl
xchg
push
fcmovnb
pushf
xchg
mov
int
jg
jge
jp
mov
gs
lds
rcll
xchg
scas
aaa
sub
sar
pushl
mov
or
mov
adc
push
fstpl
lock
mov
call
jb
test
mov
mov
gs
loop
test
adc
cmp
mov
mov
sbb
ja
jmp
cmc
cli
fisubrs
xchg
into
dec
push
push
xchg
fsubrs
in
js
wbinvd
enter
or
cs
clc
iret
fsubrs
out
mov
in
or
inc
lahf
xlat
sub
js
push
dec
int3
les
clc
lcall
dec
jb
sbb
fistps
mov
sbb
push
clc
in
fimull
and
xchg
mov
roll
stc
mulb
xor
call
inc
push
bound
jno
data16
mov
clc
mov
pop
cmp
pop
lods
pop
shrb
stos
cmp
out
pop
lret
mov
adc
xorl
fwait
pop
push
decl
pusha
fstp
jne
test
push
sbb
lret
pop
and
addr16
xor
test
push
hlt
ds
lods
push
into
in
xchg
addl
inc
jno
pushl
jmp
sub
push
stc
cmp
dec
xor
mov
fwait
jns
ds
pushf
rolb
das
mov
mov
push
sbb
xor
ret
sub
jg
lret
cmp
repnz
xor
fwait
nop
fistps
cmpsl
pop
xchg
xchg
mov
testb
call
pop
fs
iret
inc
jmp
add
cmp
push
out
mov
lcall
or
cmp
sbb
in
mov
sub
lret
adc
xchg
and
push
ret
add
in
lods
divl
and
dec
xchg
mov
xor
insb
scas
lahf
fsubl
lods
cmc
inc
mov
cmp
push
inc
daa
sbb
inc
xorb
xchg
inc
fnstsw
outsb
negl
ds
jb
pop
and
cld
js
xlat
fstl
sub
lcall
xchg
and
or
data16
pop
ss
scas
scas
insl
fnsave
mov
xor
mov
or
xchg
enter
add
cmp
cwtl
mov
cmp
cld
mov
cmpsb
fstps
xor
push
mov
mov
xor
inc
xchg
mov
cs
cli
ljmp
pop
jbe
aaa
ror
inc
xchg
call
or
mov
out
mov
dec
test
and
add
lods
incl
jae
sub
jg
adc
lds
jge
insb
inc
adc
aaa
cld
lcall
js
fldt
je
ror
push
cwtl
fldl
cli
jg
or
and
pop
mov
jl
push
lret
into
inc
cmc
imul
jae
ja
add
dec
incb
loope
les
addr16
jae
jg
insl
cld
mov
mov
and
jmp
adc
shrb
mov
test
je
xchg
test
addr16
movsb
mov
cld
push
jecxz
mov
stos
sub
adc
cld
repnz
mov
jge
cmpsb
imul
jecxz
add
stos
fnsave
add
pop
sbb
outsb
and
rorb
mov
aad
jmp
mov
sub
or
imulb
xor
decl
shlb
cld
sub
cmpsb
jae
repz
adc
incl
jl
cmp
xchg
insb
or
pop
jmp
sar
push
jecxz
lods
test
lcall
movsb
lods
adc
jmp
adcb
loop
das
adc
aas
jno
adc
adc
dec
push
icebp
decl
sub
or
cmp
adc
out
lcall
cli
add
dec
push
push
push
xchg
inc
in
out
cli
pushl
es
or
add
jo
xor
add
clc
mov
sub
lcall
xchg
push
gs
sbb
je
fs
mov
in
cmp
lcall
notb
out
in
cli
inc
pushf
mov
pushf
and
popa
repz
rorl
pushl
shll
mov
psraw
jmp
fnstcw
aad
aaa
cmp
xor
lods
fisubrl
pop
aad
sub
std
cs
cmp
or
jmp
subb
aad
xchg
movb
jmp
dec
ljmp
test
loopne
and
outsl
fisttpl
loope
orb
lret
push
inc
xchg
stos
adc
and
sub
push
jae
xchg
lret
sub
loop
incl
movsl
add
pusha
call
lret
mov
cmpsl
jg
mov
insl
xor
dec
xchg
push
bound
sbb
and
jg
fadd
popf
aam
inc
scas
dec
incl
jp
inc
cmpsb
pop
mov
jno
pop
decl
mov
inc
push
sub
lret
xchg
movsb
hlt
rcrb
cwtl
dec
mov
adc
lods
insl
sarb
lret
sarb
loopne
or
stc
mov
push
ja
xor
imul
pop
sub
scas
hlt
adc
push
xor
jbe
repz
mulb
dec
lods
decl
push
pop
cmp
pop
inc
xlat
out
popf
or
and
jne
jmp
mov
sbb
sub
movsb
repnz
push
sbb
jbe
out
and
lcall
lock
insl
iret
in
leave
xchg
idivl
imul
rolb
push
pop
sbb
and
mov
jmp
rcl
loope
mov
inc
cmc
mov
int3
xchg
iret
or
pop
fadds
insl
popa
rcrl
push
imul
fcomi
inc
call
sbb
das
push
dec
daa
sbb
sub
push
inc
in
mov
lcall
pop
jae
jns
lea
pop
into
and
and
popf
stos
int
es
ds
test
add
stos
xchg
jno
shlb
jle,pt
hlt
mov
mov
dec
xchg
jns
cmc
out
push
xchg
mov
mov
cwtl
pop
hlt
call
dec
les
mov
adc
or
popf
and
mov
push
xchg
hlt
call
vpmaddwd
js
jmp
adc
test
fldenv
inc
push
mov
cmp
mov
mov
or
xor
or
adc
ljmp
imul
mov
cltd
xor
fildll
push
sbb
popa
call
push
pushl
gs
insl
push
cs
loopne
adc
sti
cld
push
fidivrl
add
jae
aas
xor
jns
and
adc
sar
sub
rorb
enter
ljmp
jno
pop
hlt
sub
pop
pop
dec
icebp
popa
push
push
jg
cwtl
pop
and
cmp
imul
push
push
xchg
jg,pn
lahf
xchg
sub
orb
fwait
hlt
daa
add
dec
and
stos
ljmp
lret
jne
repz
xchg
xchg
sub
clc
call
pop
sub
cmp
dec
in
call
xchg
add
nop
jecxz
andl
sar
sub
mov
xor
test
call
sub
dec
aad
jg
loopne
mov
aaa
inc
mov
xchg
inc
mov
lods
push
add
inc
ret
pop
repz
jmp
mov
jle
aam
push
cmp
ja
mov
push
pushf
adc
adc
pop
mov
mov
pusha
sub
cli
or
test
cmp
arpl
inc
sub
cmpb
jns
fs
sub
aas
push
arpl
and
fbld
gs
imul
jg
outsl
push
mov
dec
sub
cmp
fcomi
aam
nop
aad
mov
jp
push
pushl
add
fistpl
adc
xchg
cmp
pop
jg
cmp
cltd
or
mov
jmp
pop
divps
fstpt
js
jbe
aas
fistpl
mov
mov
frstor
jmp
xlat
std
pop
sbb
loop
outsl
imul
lcall
jecxz
push
sbb
fcomps
mov
inc
xor
cmp
call
xchg
sbb
sahf
outsb
mov
adc
xchg
and
jg
push
int3
call
or
adc
inc
mov
pushf
mov
push
push
test
fwait
andl
ss
or
je
or
subb
jmp
std
inc
jg
pop
addb
icebp
ret
push
jg
and
iret
mov
xchg
aad
or
cld
and
aad
mov
cwtl
imul
pushl
mov
and
daa
inc
sub
mov
ljmp
in
mov
mul
jmp
fisttps
mov
cld
inc
xor
das
gs
mov
popf
jnp
in
xor
xlat
sbb
or
lods
das
push
call
lods
or
pushl
cld
cmpsb
into
or
and
ljmp
mov
stos
jge
fwait
decl
pop
dec
int
mov
insl
jmp
mov
decl
stos
jb
mov
leave
jmp
movsl
movsb
mov
pop
dec
pop
outsl
mov
xchg
mov
dec
inc
sub
out
sbb
testb
fwait
daa
rcrl
pusha
inc
push
add
out
adc
testb
and
mov
jg
jmp
addr16
loopne
in
sbbb
das
int3
lock
out
mov
and
lcall
cmpsb
ja
dec
aas
cmp
xor
xchg
insb
xor
inc
add
adc
add
and
cmpsb
jg
jp
mov
jge
cmc
push
out
imul
popa
sbb
cmp
into
sbbl
arpl
or
hlt
lods
pushl
pop
pop
inc
adc
push
mov
inc
fldl
inc
push
mov
push
jnp
movsl
mov
stos
cmpsl
xor
jne
fs
cmp
repz
dec
mov
or
roll
mov
lahf
stos
or
sbb
test
sub
push
pop
push
jbe
lret
mov
ret
fsubrl
ret
adc
lock
sti
fistl
pop
or
cmp
idiv
mov
push
test
in
sti
fsubp
stos
push
cmpsl
decl
popf
or
clc
jp
mov
dec
mov
orb
or
cmpsb
repz
dec
aaa
cwtl
pusha
call
ljmp
call
out
into
add
sub
mov
xchg
sbb
xlat
mov
mov
insb
out
call
hlt
cli
pushf
dec
inc
pop
jle
sub
jbe
je
and
cli
call
fwait
xchg
leave
mov
sbb
push
pop
mov
arpl
jmp
ficoml
mov
repnz
inc
dec
cmpsb
xor
insb
call
cmc
aas
jnp
rcrb
xor
cmpsb
sbb
je
clc
lcall
and
pop
or
loopne
sub
aas
outsl
lahf
push
adc
lock
mov
add
mov
subb
call
movsb
adc
lret
mov
out
out
es
lcall
dec
vpunpcklbw
adcl
jo
and
cmp
xor
clc
incl
xchg
repz
jae
mov
mov
mov
clc
pop
and
mov
outsl
mov
push
mov
fs
insb
lret
aaa
mov
jmp
popa
sub
cmpsl
data16
arpl
pusha
jmp
xchg
push
xchg
mov
aad
push
repz
lahf
jo
idivb
stc
test
mov
sbb
aaa
cmp
rcrb
outsl
dec
ror
sub
or
mov
push
aam
pop
test
in
bound
dec
dec
test
into
out
adc
pop
icebp
pushl
mov
xchg
popa
ficompl
push
inc
ljmp
iret
and
sub
test
clc
sbb
xor
int3
sbb
mov
loop
lcall
mov
cvtpi2ps
rolb
ja
dec
pop
mov
lcall
out
cmp
out
adc
sub
mov
insl
mov
ja
lcall
push
insl
je
mov
sbb
pop
pop
in
arpl
jg
mov
cmpsl
stos
das
fimuls
adcl
inc
adc
mov
unpckhps
adc
repz
xchg
aad
and
mov
les
or
cmp
jl
pusha
hlt
roll
int3
scas
lds
dec
lret
cs
xchg
decl
pusha
out
gs
lret
mov
cmc
out
jbe
ret
or
cmpsl
mov
or
lcall
in
shll
push
jne
dec
mull
fsubrl
mov
call
sbb
lahf
fisubl
xor
sub
or
lcall
jle
xor
push
pop
insb
jne
call
das
lock
jne
lods
mov
incl
sbb
test
jb
sahf
les
lock
pop
dec
add
xor
pop
cmp
jno
out
gs
incl
insb
mov
dec
shlb
gs
jmp
pushf
jns
jae
cltd
and
add
fcmovnbe
mov
ss
ja
cmpsb
incl
inc
push
and
jno
mov
movsl
ja
ret
xlat
sbbl
call
inc
add
mov
out
jo
push
gs
std
jnp
adc
jp
and
rorl
push
ja
cmpsb
dec
lret
repnz
sahf
xchg
cld
outsl
jg
dec
out
jmp
mov
mov
add
loopne
dec
lret
sbb
std
fdivl
mov
xchg
xorl
push
and
sub
movsl
lcall
das
addr16
test
push
dec
jne
dec
test
pop
bound
mov
push
add
push
pop
cli
lods
add
data16
decl
jo
or
sarb
sbb
sbb
sub
jg
int3
push
xchg
hlt
xchg
and
fwait
push
mov
jge
cmp
pop
push
hlt
mov
jge
push
aad
xchg
jb
je
scas
lods
cld
sti
sbb
fldt
dec
test
jl
arpl
subb
xchg
les
mov
out
mov
int3
pop
sti
iret
sbb
add
push
cmp
bound
into
push
inc
or
push
jmp
and
out
pusha
insl
lds
mov
arpl
sarl
testb
sbb
xor
and
push
in
xor
add
inc
cmovle
enter
mov
inc
test
subb
stos
mov
mov
add
jp
xchg
jmp
insl
sar
and
negb
test
xchg
pop
mov
imul
loop
or
stos
mov
jmp
mov
sub
outsb
or
lcall
addb
fwait
aas
mov
out
loop
fstl
lods
sbb
pushl
test
ret
mov
xchg
inc
stos
jle
cmc
call
and
push
mov
out
sbb
add
dec
pop
mov
add
loop
jne
addb
aas
ds
push
pop
scas
sbb
aas
scas
pop
rclb
add
aaa
pusha
pop
mov
into
or
jne
call
out
pop
xchg
aad
adc
adc
and
mov
fbstp
mov
je
iret
lods
mov
jo
test
sub
add
ja
lret
stos
mov
lcall
push
cmpsb
mov
dec
xchg
movd
jno
push
pop
inc
iret
or
xor
inc
cmp
pop
push
lahf
frstor
addr16
cs
clc
xor
in
test
jns
mov
out
icebp
or
enter
xchg
and
in
jmp
ljmp
pop
mov
jmp
ret
add
and
jp
inc
mov
cld
call
sahf
mov
xor
add
mov
xchg
aad
sbb
jg
ss
xor
lock
rcll
and
xchg
sti
ss
call
pushl
std
add
mov
movl
fs
add
lret
mov
jbe
cld
lock
mov
js
inc
rorb
cld
mov
and
test
cmp
dec
push
xor
dec
loope
lcall
loope
mov
loopne
daa
push
or
jp
cmp
cld
push
dec
mov
ds
push
loope
out
jbe
sub
mov
insl
je
jo
pushl
movsb
and
xor
xor
cld
add
in
shll
negl
cmp
ljmp
dec
sub
cwtl
and
mov
adc
dec
popf
pushf
sbb
stos
push
lods
add
pop
call
hlt
or
insb
decb
or
ljmp
hlt
addb
pop
enter
test
and
clc
cmc
jmp
lock
mov
sahf
stc
mov
adc
cs
aam
pushl
sbb
xor
sbb
inc
pop
sub
test
xor
or
pop
fsub
icebp
movsb
and
cli
call
mov
pop
dec
adc
cli
dec
jbe
push
adc
mov
int3
mov
and
mov
xor
and
push
xor
lock
push
pop
leave
mov
jecxz
clc
mov
pop
sub
mov
push
jle
out
mov
dec
add
std
and
jecxz
xchg
insb
ljmp
adc
pushf
push
xchg
or
into
xchg
mov
and
xchg
mov
mov
imul
cld
test
jg
aas
pop
or
and
xchg
and
clc
adc
mov
sahf
xor
das
hlt
ljmp
stos
scas
push
int
pop
mov
xchg
popf
sub
xchg
ficomps
imul
ljmp
sbb
push
test
lret
je
dec
pop
roll
in
jge
mov
xchg
mov
cli
cmp
push
mov
cmp
fwait
aas
push
push
fwait
incl
mov
or
jecxz
addr16
in
test
and
xor
outsl
outsl
outsl
jg
dec
cmp
push
push
imul
or
pushf
sub
jl
or
push
cltd
pop
dec
mov
cmp
lret
sub
push
adc
fs
mov
mov
out
nop
pop
sbb
jmp
sbb
mov
sbb
dec
mov
sub
call
roll
wrmsr
mov
mov
dec
divb
push
jle
data16
sarb
push
scas
insb
ficoms
pusha
into
or
dec
rclb
movsl
xor
push
lahf
jg
cs
mov
cmp
sbb
lods
pop
xchg
inc
mov
sub
sub
cmpsb
stos
outsb
dec
jb
inc
clc
mov
insb
shll
jmp
mov
or
lcall
sbb
inc
pop
push
rorl
xor
xchg
xchg
fs
jne
fnstenv
outsl
mov
push
inc
shl
push
dec
cmp
jnp
jmp
inc
pop
or
push
leave
pop
push
daa
sub
mov
call
mov
add
and
test
cwtl
jo
outsb
mov
push
xchg
dec
jmp
push
jg
leave
out
call
loopne
test
pop
pop
test
or
test
xor
pushl
fidivl
aas
rcr
lds
imul
jmp
addr16
inc
dec
mov
sbb
mov
fstpl
mov
jge
jo
mov
fwait
pop
and
inc
cltd
clc
div
fdivl
subb
cmp
push
inc
pop
inc
popf
cltd
add
lock
mov
add
lds
enter
cmp
out
sbb
mov
xor
and
pop
lcall
ss
mov
popf
rclb
vmovdqu
out
lret
cmpsb
lcall
decl
lret
fsubr
insb
mov
jns
sbb
jge
add
cmp
mov
lret
decl
mov
ret
out
rsm
ffree
or
or
mov
xchg
incl
orl
dec
in
and
iret
in
xchg
ljmp
inc
mov
inc
adc
lock
fidivs
fisttpl
pop
imul
inc
fcomip
jmp
adc
nop
cltd
pop
or
cmp
jae
pop
cmpsb
pushl
clc
out
cmp
cli
int3
pop
lods
cmp
mov
nop
incb
mov
adc
pop
incb
jecxz
mov
pop
cmc
mov
movl
gs
pushf
add
hlt
incl
retw
inc
inc
add
in
pop
sbb
xor
push
dec
cmp
inc
cmp
inc
xor
pusha
xchg
xor
test
push
fildll
rorl
incl
mov
xor
jl
lock
aaa
lds
cmovbe
or
jns
mov
loopne,pt
mov
pop
push
addl
push
push
fs
cli
data16
movsb
mov
call
mov
and
push
popf
pop
iret
inc
test
outsl
dec
adcl
movsl
jae
addr16
call
test
inc
cmc
sub
dec
pushf
jle
add
dec
aaa
push
xchg
cld
dec
mov
jae
add
mov
xchg
dec
push
ret
push
cmp
ja
mov
sub
decl
pusha
imul
mov
ss
xchg
cs
adc
mov
stos
in
jne
fildl
out
pop
cmpsl
or
xchg
mov
dec
jecxz
divb
pop
sbb
lods
out
icebp
rorb
ljmp
jle
pop
jnp
imul
mov
jp
jns
imul
lods
push
or
mov
sti
push
push
inc
rclb
std
push
mov
cmp
xor
out
dec
push
xchg
adc
movsb
mov
out
int3
mov
bound
push
jb
inc
cwtl
adc
decl
cs
jge
insl
dec
movsb
aaa
daa
rep
adc
dec
arpl
jmp
mov
imul
fwait
adc
push
mov
dec
pop
out
cmp
xchg
mov
inc
add
push
adc
mov
pushl
adc
sub
xor
jmp
decl
lods
or
adc
popf
pop
jmp
gs
xchg
sahf
fwait
mov
mov
pop
cmp
enter
cmp
ljmp
scas
adc
dec
into
movb
add
sub
ret
sbb
lcall
xor
pop
nop
loope
inc
mov
jp
outsl
lahf
mov
arpl
int3
call
decl
lds
add
or
test
enter
enter
gs
out
clc
cmp
jae
add
xchg
clc
xchg
jg
in
mov
pusha
mov
push
aam
jmp
or
imul
movsb
scas
cli
inc
das
out
push
fbld
insl
ffreep
scas
loop
inc
data16
push
pop
leave
lock
movsl
pop
enter
rorl
enter
cmp
and
rcl
lret
imul
ret
mov
decl
mov
int
imul
push
imul
repz
mov
ljmp
mov
add
add
call
mov
shr
inc
sub
das
popa
cmpsl
mov
mov
std
je
mov
lret
decl
pop
jg
mov
dec
mov
and
aas
cmc
sbbb
stos
test
cltd
sub
mov
decl
enter
les
insb
sbb
cmpsb
lds
push
sarb
fcoml
popf
imul
ljmp
or
cmp
gs
mov
sbb
call
and
out
xchg
sub
nop
test
fs
inc
icebp
mov
fdivs
sub
lcall
push
fiadds
sub
pop
popf
dec
and
sbb
pop
push
std
data16
enter
gs
imul
or
ss
ljmp
dec
ror
lea
pop
nop
add
inc
repz
push
mov
out
jne
das
aam
mov
cmpsl
or
shll
leave
mov
cmp
push
fistps
scas
dec
sub
sbb
iret
cld
in
cmp
sbb
mov
call
stc
inc
xor
roll
out
ss
fisttps
xlat
fwait
xor
inc
in
xchg
cld
cmp
mov
mov
inc
call
sub
adcl
and
cmp
fdiv
daa
sub
jl
sbb
ja
orb
jmp
nop
xchg
aas
mov
into
jge
mov
pop
inc
jmp
js
push
jle
fs
jae
loopne
insl
and
test
xor
jl
xorb
js
cmp
jmp
sub
rcrb
jg
jle
and
shlb
xor
xchg
mov
cmp
sar
jnp
jle
das
rorb
jb
inc
mov
xchg
stos
sbb
adc
dec
inc
lcall
call
les
popa
pop
lret
jle
stos
dec
ds
lret
xchg
es
fwait
inc
xor
mov
lcall
es
lahf
xor
adcb
lock
sti
jge
cmp
ja
jmp
adc
in
xchg
pop
adc
inc
lret
push
dec
and
push
inc
rcr
push
ror
or
push
push
xor
ljmp
les
pop
movl
xchg
cmc
lea
cmpl
mov
mov
repnz
mov
mov
es
popf
push
movsb
xor
movsl
mov
mov
jge
add
nop
inc
inc
imull
orl
in
add
sub
mov
jo
xor
adc
jge
cmpsb
ret
mov
cmp
sbb
je
das
xor
shlb
sub
xor
or
ljmp
ret
mov
sti
pop
dec
test
cli
decl
arpl
dec
bound
jle
xchg
or
fldt
add
sub
pop
mov
pop
cwtl
data16
repz
mov
mov
inc
dec
test
or
push
add
mov
lea
xorl
or
out
ljmp
lret
adc
pop
jae
cmp
imul
out
add
and
mov
xor
mov
mov
or
jbe
mov
push
cmp
push
in
mov
inc
lods
xchg
cmp
stos
jno
call
inc
dec
fisttpll
xor
ljmp
sub
or
inc
ja
sbb
pop
mov
mov
push
popf
int3
jge
popl
push
insb
stos
sub
sahf
hlt
mov
outsb
in
xchg
lods
jecxz
scas
lret
sbb
xchg
scas
das
sar
mov
and
fcomip
sub
or
jne
pop
repz
adcb
xchg
jg
ljmp
lods
nop
add
inc
gs
dec
mov
out
lds
mov
clc
incl
mov
inc
push
mov
pop
pushf
mov
loope
add
ret
je
inc
cmp
sbb
mov
inc
mov
aaa
sarb
addl
movsb
test
cmp
mov
inc
mov
cmpsb
subb
dec
mov
mov
jmp
cmpsb
push
ds
pop
icebp
pop
mov
adc
into
jg
ss
mov
js
in
mov
repnz
sbb
sbb
clc
lcall
cmpsl
dec
into
mov
pop
sub
repnz
js
mov
and
mov
adc
adc
movsl
xchg
mov
sbb
icebp
sub
clc
xchg
pop
insl
xchg
into
enter
out
or
decl
lock
mov
pop
imul
xchg
inc
adc
rcl
cmp
dec
and
mov
dec
sub
jb
jmp
jmp
dec
fstpl
xchg
mov
out
test
pop
sbb
in
mov
fadds
lods
xchg
jg
and
xlat
dec
pop
dec
adcb
xor
lods
xchg
mov
ljmp
call
or
insl
mov
xor
scas
adc
pushl
pop
mov
mov
insb
fisubrl
repz
add
mov
loopne
adc
popa
ret
add
jmp
das
or
cmp
test
lods
and
rolb
pop
mov
test
hlt
call
aam
cmc
xchg
push
lahf
in
ja
mov
int3
insl
rcrb
idiv
inc
and
adc
gs
les
dec
sbb
cmp
dec
fs
idivl
ljmp
nop
in
push
loopne
pop
add
outsb
jmp
sbb
pop
dec
repz
or
dec
rcrb
xor
jmp
jns
test
xor
inc
shrl
xchg
cmpsb
repnz
lret
pop
incl
fidivs
dec
add
ret
inc
cmp
and
stos
pushl
inc
test
fstps
gs
aas
dec
pop
out
and
test
jnp
push
lds
imul
pop
jmp
gs
jmp
lcall
fs
cwtl
push
xchg
dec
push
outsb
cwtl
cwtl
leave
mov
push
or
cmp
loope
mov
dec
mov
lret
push
xlat
lds
inc
call
gs
aaa
lcall
xchg
xor
xchg
mov
inc
andl
or
stos
inc
shlb
lea
jecxz
cld
inc
neg
arpl
xor
pop
leave
ljmp
pop
lcall
lds
cmp
subl
fisubrl
sbb
jmp
int3
lcall
scas
fnsetpm(287
lock
subb
sub
bound
dec
push
mov
sub
pop
inc
adc
in
lods
jle
test
rcl
inc
jmp
sub
inc
pop
mov
ficoml
addr16
xlat
sub
bound
stos
adc
pop
dec
loop
jp
inc
sti
xor
pop
aas
inc
mov
jle
push
add
lock
fidivrl
cltd
and
rorl
sub
mov
pushf
out
mov
mov
decl
sbb
fwait
xor
test
jns
cmp
mov
sbb
jno
push
pop
rcr
cmp
add
fs
sbb
xchg
pop
cmp
push
ss
xor
sub
lds
mov
cli
incl
aad
and
mov
leave
mov
pop
mov
mov
test
jne
lret
xchg
call
lea
mov
inc
hlt
push
repz
mov
sub
sub
and
pushf
addr16
push
pushf
sub
add
lret
adc
lret
mov
icebp
decl
repnz
movsl
dec
adc
xchg
nop
clc
into
pop
repnz
pusha
jg
sbb
cwtl
add
jge
sti
mov
mov
icebp
lcall
cli
jmp
aad
mov
xorb
fdiv
pop
insl
negb
jmp
test
jne
dec
out
xor
notl
jp
decl
and
js
xchg
pushf
stos
mov
jb
jg
lcall
stc
cmp
fdivrl
mov
push
sbb
cmp
call
out
jg
push
xchg
les
xchg
xchg
lock
outsb
push
or
sahf
orl
mov
inc
sub
int3
clc
cmp
imul
adc
pop
jne
out
clc
pushl
push
push
jne
aas
cmp
jle
inc
sub
dec
adc
popf
or
mov
into
ret
out
fisubl
push
jnp
bound
mov
and
insl
movsb
popa
aam
out
stos
xchg
mov
popa
in
mov
mov
int3
sahf
clc
gs
sbb
xchg
xlat
insb
push
dec
mov
sub
lea
call
imul
xor
incl
and
fnstcw
bound
aas
mov
jb
or
sub
push
sarb
mov
mov
call
cmp
push
faddl
pop
jle
jne
jnp
lcall
iret
and
mov
pop
mov
daa
inc
outsb
or
fistpl
ljmp
push
xchg
xor
dec
and
outsl
les
and
gs
mov
mov
push
lock
or
sub
mov
sahf
fwait
jge
sub
jo
lahf
cmp
outsb
leave
mov
sar
xor
push
out
pop
sub
sbb
lods
outsl
push
jg
dec
mov
push
clc
xor
int
shlb
push
xchg
adc
xor
fs
jge
add
test
aam
mov
fwait
loopne
adc
clc
call
aam
mov
dec
and
and
clc
jmp
out
lea
lock
popa
adc
sahf
or
dec
test
sarl
cmp
sbb
ja
or
mov
std
fistps
jl
ret
xchg
lods
jg
insb
cld
sub
inc
sub
xchg
ljmp
mov
cmp
adcl
add
rorb
repnz
loop
decl
test
ja
imul
or
testl
pop
fsts
lcall
jp
inc
fisubrs
cltd
std
fdivrs
fwait
sets
in
dec
subb
scas
push
imul
xor
jmp
stos
mov
rol
fwait
cld
cmp
xor
nop
xlat
decl
arpl
fs
push
lahf
leave
xor
dec
mov
enter
loop
ljmp
inc
jp
dec
push
not
mov
call
subb
fiadds
sar
ljmp
xor
adc
sbb
xchg
push
lea
scas
cmp
rorl
inc
jge
filds
shlb
mov
xor
popf
cld
sar
arpl
lcall
lcall
xchg
mov
add
push
dec
sub
sbb
ljmp
jmp
xchg
mov
lret
lods
sti
fcomip
mov
call
mov
xchg
mov
fcomps
cwtl
adc
ljmp
push
add
gs
hlt
sti
push
pop
in
cli
jg
mov
or
jge
jnp
in
mov
pushf
or
out
lock
or
into
insb
cwtl
mov
fwait
fwait
dec
aas
push
and
movsl
imul
call
push
in
or
fadds
rcl
cmc
push
xchg
jmp
and
fmul
xor
or
fistl
jmp
dec
ret
pop
mov
js
int3
lods
mov
pop
fmul
xchg
movb
push
fcompl
les
loop
mov
or
js
aaa
dec
xchg
clc
push
icebp
mov
fadds
ret
sub
dec
call
mov
push
pop
cmp
push
aaa
std
decl
mov
fwait
cmpsl
ja
or
push
out
push
or
cmpsl
lret
incl
push
inc
pop
dec
xor
add
roll
push
dec
xchg
push
cmp
pop
inc
mov
ja
xchg
jmp
and
icebp
add
sbb
and
xchg
cmp
mov
inc
ds
lods
dec
jmp
xor
sub
shll
ljmp
mov
call
fnstsw
add
shlb
mov
cmp
jmp
inc
fnsave
or
mov
fs
sbb
add
jno
mov
loopne
xor
lsl
into
mov
dec
dec
ljmp
mov
sbb
cmpsb
mov
mov
sub
decl
xor
stos
insl
jnp
xchg
and
xchg
mov
out
and
xchg
sbb
pushl
mov
push
cld
ror
jnp
testl
push
shll
call
mov
hlt
sub
or
cld
lcall
insl
pop
sub
pop
pop
ljmp
fidivl
call
pushf
inc
sub
repz
sbb
push
inc
mov
and
sarl
incl
icebp
daa
inc
fdivs
sarb
cmp
stos
int3
mov
pop
call
lret
or
or
adc
ficompl
call
jne
mov
ja
loop
inc
fdivrs
adc
push
xlat
jbe
cwtl
jmp
mov
pushl
std
lret
iret
shll
inc
push
mov
push
inc
mov
or
xchg
dec
insb
mov
lock
ljmp
iret
mov
push
pop
push
ja
pop
jo
lret
pop
outsb
data16
adc
adc
in
addr16
adc
fildll
cmp
stos
stc
stos
sub
dec
sbb
xchg
movsb
mov
mov
lcall
adc
mov
pop
mov
xchg
popa
push
mov
mov
sbb
addr16
shl
cmc
mulb
adcb
ljmp
lcall
fbstp
fists
shlb
test
repnz
decl
daa
es
mov
data16
dec
pop
dec
inc
adc
mov
jno
sub
mov
jns
xchg
bound
and
adc
jmp
pushl
loopne
flds
sub
add
inc
das
mov
push
enter
ljmp
ret
loopne
push
shl
or
std
pushf
into
movsl
aas
push
cmp
mov
cli
inc
cmpsb
or
jg
addb
sub
adc
pop
xor
jb
fwait
and
push
push
mull
scas
dec
adc
test
incl
pop
jbe
mov
cmp
adc
mov
pop
xchg
leave
in
ljmp
mov
mov
add
dec
adc
lret
jns
sbb
stc
je
and
jp
cli
call
lock
jnp
jno
fidivl
mov
cltd
stc
lret
sub
call
lds
dec
pop
int
lret
pop
pop
rcrl
pop
ret
fldt
leave
loop
jo
mov
call
shll
shrl
dec
out
sub
fstps
sub
mov
xlat
ljmp
cli
pop
pop
add
test
jae
inc
les
push
rcrb
scas
es
xchg
test
push
dec
xor
mov
ljmp
ret
loop
mov
mov
in
sbb
repz
testb
call
add
std
jg
jbe
or
pop
and
jmp
orl
test
cwtl
shrb
nop
jb
dec
sbbl
sbb
xchg
fwait
stos
test
mov
pop
popa
arpl
lcall
aam
adc
push
cltd
push
sbb
xorb
xor
mov
add
sar
mov
xor
adc
adc
inc
imul
cmp
adc
mov
xchg
inc
jmp
incl
push
pop
pop
mov
jecxz
mov
stc
dec
enter
pop
add
jp
mov
rorl
sarb
mov
ss
lret
jmp
inc
test
das
pop
mov
in
jg
mov
repnz
enter
fidivs
xchg
in
push
xchg
pop
js
dec
cmc
arpl
mov
stc
pop
sbb
mov
in
cmp
into
push
xchg
out
out
sahf
add
inc
sar
inc
push
in
addr16
stos
dec
aam
xor
mov
xchg
and
fbstp
cmp
mov
xchg
jmp
aas
cwtl
outsb
jmp
mov
call
sarb
pop
push
inc
js
enter
inc
scas
fs
or
add
mov
out
sbb
pop
dec
push
or
mov
mov
into
outsl
sbb
and
icebp
insl
sub
call
pop
mov
mov
xor
pop
pusha
insl
jo
cld
inc
add
out
xor
add
subl
orl
rcrb
push
mov
pushl
rcrl
mov
jg
pop
ret
es
cwtl
das
fidivl
hlt
xor
addr16
fsub
ret
push
mov
and
jl
push
mov
fcomip
out
fiaddl
mov
or
test
jle
dec
ret
xchg
call
sub
mov
mov
les
lock
mov
push
rolb
xor
and
cmp
repz
cld
pushl
or
mov
stc
mov
fisubl
gs
push
iret
pop
gs
pusha
adc
dec
out
lods
popf
scas
sbb
mov
mov
decl
pop
cltd
add
in
pop
inc
mov
sub
sar
jge
mov
ljmp
jge
xor
sbb
test
jecxz
push
push
cmp
das
les
flds
dec
shll
lcall
or
pop
jmp
ret
ret
cmp
cld
pop
ret
ljmp
test
or
inc
xlat
in
scas
mov
add
movsb
repnz
sahf
dec
std
repz
cmpsb
push
std
fnstsw
adc
cmpb
sub
out
adc
adc
and
hlt
dec
loopne
push
inc
aas
dec
pop
sbb
cmp
and
dec
imul
push
mov
lods
inc
mov
push
push
add
add
daa
outsl
jle
push
push
xchg
lcall
mov
push
out
pusha
aam
les
mov
mov
fistpll
xchg
adc
or
mov
les
ja
stos
insl
push
insl
jb
pushl
mov
jp
negl
xchg
sbb
sub
mov
dec
inc
cli
cmp
xlat
leave
add
scas
cli
fsubrs
xlat
outsl
xchg
cld
in
daa
mov
call
jmp
adcb
jno
popa
lods
jb
aaa
dec
cmpb
insl
inc
ss
xor
jl
sub
loop
inc
decl
je
movsb
pop
jbe
shrb
nop
xchg
out
pop
push
and
scas
xchg
push
and
mov
xchg
repnz
push
pop
jg
inc
xchg
out
icebp
or
adc
mov
or
xor
mov
lcall
cmp
fcoml
jbe
mov
jg
cmp
add
add
cs
les
inc
jno
fldt
cmp
xchg
pop
inc
pop
mov
cli
inc
fs
outsl
mov
nop
clc
js
std
clc
mov
fs
xor
ljmp
daa
push
mov
es
push
loopne
dec
push
in
fistps
stos
call
ds
xchg
mov
add
jae
lahf
adc
fnstcw
push
adc
push
cmpsl
popa
jle
fbld
and
enter
enter
cld
fs
inc
adc
lcall
push
xor
adc
xchg
mov
out
lret
fstpt
enter
das
jl
xchg
daa
fsubl
pop
lock
je
dec
push
inc
dec
jg
cld
jle
test
leave
mov
jb
lods
push
leave
mov
loop
and
cmp
mov
loope
imul
test
cmpsl
mov
ljmp
cs
cltd
out
mov
jge
and
repz
push
daa
jp
xor
jg
mov
sahf
scas
mov
inc
and
je
cmpsb
jae
and
cmp
cmc
jmp
xlat
push
sbb
les
into
sbb
andb
scas
lret
lcall
push
jne
xor
inc
lods
adc
les
mov
jle
lcall
inc
shlb
test
repz
lret
ja,pt
pop
xchg
scas
ret
test
hlt
jmp
jmp
cmp
xchg
sub
mov
sbb
insb
xor
rclb
mov
jg
push
adc
dec
enter
sub
loope
cltd
ret
jg
mov
imul
fistpll
fsubrp
int
push
xor
sbb
add
into
sub
test
into
addl
xlat
mov
dec
mov
js
sbb
mov
in
sahf
dec
ss
lds
mov
add
shl
jg
fsubs
hlt
mov
cmp
jg
dec
jnp
std
fwait
xchg
add
aam
and
pop
fucomip
or
mov
mov
mov
sub
cld
adc
loopne
inc
cli
incl
mov
cwtl
movsl
cltd
leave
je
or
pushl
leave
in
out
xchg
stos
mov
jo
cmp
ret
sub
xor
in
loopne
pop
aas
repnz
sub
mov
repnz
jg
imul
jo
mov
hlt
xlat
xchg
cmp
sahf
cs
popf
adc
or
pushl
scas
cmpb
inc
sbb
sbb
inc
jp
ljmp
adc
imulb
stos
inc
into
lret
and
mov
outsb
xchg
sti
or
sbb
out
cli
adc
out
repnz
popa
sbb
pusha
jmp
cmp
rorb
and
fildl
adc
cmc
pop
fnstenv
sbb
xor
adc
cmp
push
cmp
aaa
mov
popa
cmp
xchg
pop
push
pop
addr16
cli
add
jnp
ljmp
lods
out
add
sbb
js
jg
sbb
xchg
addl
out
sbb
aaa
pop
sarb
xor
mov
cltd
ret
outsb
sarl
addr16
sub
adc
pop
fadd
fmul
xor
pop
lock
out
roll
mov
popa
push
stc
cmpsl
ja
inc
sub
popf
push
or
cmp
rcll
rolb
imul
in
pusha
les
ds
adc
shrb
mov
in
mov
add
xchg
push
push
loope
insl
call
jne
sub
imul
sbb
cmp
dec
mov
inc
fdivp
inc
out
xor
scas
cld
call
adc
jmp
and
cwtl
scas
inc
cwtl
cmp
call
int3
in
pop
out
pop
iret
lret
rolb
cli
inc
fs
push
jne
pop
sbb
or
mulb
in
mov
mov
jne
jae
sbb
mov
mov
addl
int
in
adc
stos
out
jmp
xchg
jns
push
cmp
incl
mov
xchg
je
fldz
into
push
xchg
lahf
sub
je
jo
in
decl
cs
lea
cld
and
xchg
mov
adc
push
and
sbb
or
jmp
mov
popa
pop
dec
aam
pop
push
jp
mov
xlat
jl
ret
bound
and
push
mov
in
jg
add
push
jnp
ret
jp
std
xchg
adc
pop
into
rclb
mov
lcall
and
jb
push
stc
fsubrl
push
test
lcall
pop
add
movsl
mov
jbe
test
lea
dec
out
push
aad
mov
xchg
loopne
pop
cmp
sahf
pop
stos
cmp
push
aaa
jmp
adc
mov
add
dec
rcll
mov
call
cmpsl
inc
aaa
push
jle
shr
pop
fimuls
sahf
xor
jns
push
fcos
ljmp
lret
cmp
jnp
mov
stos
fs
jecxz
cmp
cs
xor
lcall
jmp
call
ja
jp
in
addr16
outsl
cltd
push
push
xchg
mov
adc
out
daa
popa
cld
jmp
jnp
scas
add
xor
push
jg
sbb
cli
movsb
mov
and
and
xchg
jl
ds
jp
xchg
stos
xchg
pop
mov
jmp
xchg
jge
aad
mov
pop
add
push
sbb
cmp
xor
mov
call
jo
sub
mov
cmp
mov
cmpsb
hlt
inc
push
mov
xchg
jg
mov
ja
or
fidivl
xor
cmp
idivb
insl
dec
mov
ss
pushl
xchg
cld
mov
pop
pusha
ljmp
das
mov
and
sub
call
icebp
jb
jmp
lods
cld
xor
inc
enter
ljmp
mov
cli
sbb
movsl
lret
popl
and
or
fld
dec
xchg
out
sbb
mov
fcmovnb
mov
sbb
rcrl
test
data16
sbb
mov
cld
stos
mov
lret
sub
fiadds
call
in
clc
jg
incl
and
jl
adc
xchg
or
mov
and
jl
shr
pop
incl
mov
lcall
mov
out
xor
out
out
clc
incl
lods
ret
mov
loopne
movsb
ds
xor
stc
imul
adc
jge
inc
pusha
xor
aaa
out
cld
mov
clc
or
movsb
decb
jno
ljmp
lret
sbb
dec
mov
dec
outsl
sahf
iret
and
mov
cwtl
ja
mov
cmpsb
test
inc
push
cli
mov
xchg
jecxz
pop
in
decl
and
pushf
in
mov
js
jecxz
test
jns
insb
mov
imull
jle
pusha
cmpsl
call
popf
and
mov
and
or
stc
fst
xor
int3
xchg
dec
sbb
add
mov
test
mov
imul
and
ljmp
jp
push
jle
push
dec
dec
pop
fs
cli
aam
fs
add
sti
mov
pop
and
stos
push
add
fdivr
fildll
movsl
or
test
in
adc
shrb
dec
sbb
fwait
jmp
scas
or
pop
mov
sub
js
push
repz
call
movsb
push
test
stos
xchg
cli
fdivrs
push
add
sbb
push
inc
mov
xor
pop
and
addr16
push
shl
cli
push
orb
lods
pop
jae
ret
lret
repnz
ss
aaa
fcmovnb
or
shl
fdivrl
loopne
js
les
xor
xlat
pusha
cwtl
pop
push
add
out
test
or
mov
iret
inc
mov
pop
mov
ljmp
xor
push
xor
xchg
shll
sub
int
out
incl
sbb
leave
shrb
pop
or
xchg
lcall
mov
inc
jmp
inc
sbb
mov
mov
aad
nop
rorb
sub
push
das
mov
push
out
inc
and
ret
fucomi
data16
in
ljmp
mov
divb
movsb
cltd
jns
fists
repz
rolb
xlat
shlb
cmc
lret
scas
pop
imul
mov
push
pusha
push
dec
jmp
sub
clc
jo
ljmp
xchg
xchg
pop
mov
sbb
ret
aaa
adc
loope
cs
call
rorl
adc
je
cmp
inc
out
lods
mov
subl
in
lds
xlat
fimuls
cwtl
jp
inc
sahf
movsb
sub
mov
imull
adcl
in
jle
fwait
hlt
cmp
push
or
mov
and
jb
and
ljmp
mov
push
xchg
in
mov
sub
mov
andb
mov
das
mov
rcrb
ljmp
jmp
ljmp
stos
jbe
push
or
cmpsl
xor
imul
and
arpl
sub
mov
pop
mov
cmp
jmp
dec
jg
jmp
mov
cmp
dec
popf
aam
loope
dec
outsl
mov
pop
insb
cmp
mov
call
jge
sub
fstpl
push
into
jne
mov
bound
xor
or
mov
ficomps
adc
in
mov
out
push
jno
pop
stos
sbb
hlt
mov
push
mov
idivb
adc
je
adc
cmp
out
cmp
lcall
je
xchg
mov
lcall
repnz
push
xchg
lock
out
enter
inc
mov
repnz
movl
mov
sbb
call
scas
add
mov
pusha
add
incl
rorb
int
jmp
insb
imul
test
outsl
decl
pusha
mov
pop
xchg
popa
imul
cltd
pop
out
mov
ljmp
and
inc
in
push
lea
hlt
jo
sub
xor
test
mov
pop
mov
jbe
jbe
gs
push
rorb
sub
jg
loopne
or
inc
out
fadds
mov
loopne
xor
incl
int3
rol
mov
pop
outsl
jae
xor
sahf
jb
iret
mov
xchg
testl
ljmp
test
jb
repnz
insl
lret
mov
mov
mov
ljmp
jne
gs
xlat
dec
data16
mov
lret
jl
cs
sbb
out
clc
loopne
jno
lahf
out
and
mov
lret
dec
test
in
dec
aam
arpl
lcall
mov
cltd
inc
clc
mov
sahf
movsb
sbb
or
dec
mov
cld
inc
pushl
jg
in
lahf
mov
test
add
cmp
bound
mov
mov
adc
mov
mov
cmp
test
fmull
adc
add
sbb
out
roll
lcall
pop
mov
cmc
sub
jns
push
out
xor
aam
push
jo
jmp
mov
leave
xor
dec
aam
inc
sti
decb
test
rolb
mov
and
dec
std
lcall
je
sahf
mov
lea
pop
fdivrl
scas
clc
jg
mov
xor
pop
aaa
test
cld
jns
hlt
sbb
xchg
cs
sbb
xchg
out
push
pusha
adc
push
xor
inc
push
adc
daa
push
push
sub
jle
in
andb
outsb
push
outsb
out
push
mov
sub
add
shl
lods
aam
pop
loopne
out
in
mov
ret
mov
xlat
stos
adc
decl
sbbb
sarb
testb
imul
in
jmp
mov
jo
or
repz
jg
lods
bound
xor
call
inc
jnp
and
cmp
test
jns
add
clc
sub
stc
pop
adc
pushl
std
sub
xchg
pop
out
sub
jp
cmc
ss
icebp
arpl
shlb
pop
push
rorl
adc
test
int3
in
dec
in
push
inc
mov
jg
call
pushf
mov
xchg
and
enter
adc
movsl
pop
jo
lds
and
call
sub
out
add
jg
mov
cli
push
mov
aas
inc
pushf
xchg
and
mov
out
jbe
mov
mov
pop
nopl
test
iret
xchg
inc
rclb
call
bound
pop
jo
insl
jmp
push
inc
ret
pop
aaa
mov
cmpsb
and
mov
aad
out
lret
stos
icebp
int
jo
push
in
mov
call
cmp
lcall
pushf
xchg
jp
mov
mov
pop
mov
outsl
inc
adcb
jmp
fstps
xlat
dec
js
sti
ljmp
jmp
or
fistl
ljmp
and
cs
push
dec
arpl
xor
pusha
ljmp
idiv
decl
push
pop
movsb
xor
loop
or
lds
mov
mov
insl
inc
iret
mov
popf
xchg
lods
cli
sub
das
mov
dec
loope
ljmp
aaa
loope
rolb
jne
sbbb
icebp
dec
mov
aad
jmp
add
mov
xchg
add
shrl
das
loopne
decl
mov
adc
psrad
bound
test
xchg
mov
xor
ljmp
fs
add
adc
adc
and
xor
sti
fmuls
int3
push
and
push
insl
in
in
addr16
aas
cld
or
in
mov
jmp
push
pusha
cs
ret
xchg
pushl
cmpsb
shl
call
lret
xor
fiaddl
dec
xchg
add
pushl
add
mov
pop
pusha
xchg
xchg
inc
dec
mov
or
call
enter
popa
sub
lock
inc
call
fildl
xchg
xor
xor
call
addr16
adc
gs
scas
aam
xor
mov
xchg
pushf
inc
mov
xor
call
sub
in
and
mov
popf
ficoms
dec
jg
mov
lcall
js
enter
es
stos
scas
rclb
insl
sub
out
imul
insb
pop
jns
jb
mov
mov
popf
adc
lcall
cld
jg
jb
cltd
push
pop
mov
mov
aas
push
movsl
out
sahf
jo
test
or
ja
out
xorb
jo
inc
dec
icebp
xor
push
icebp
dec
loopne
repz
cli
xor
incl
pop
aam
sbb
sbb
push
pop
into
jne
jae
cltd
ja
and
jmp
sti
stos
inc
mov
jb
push
call
and
stos
inc
jp
jl
jg
cmpb
xchg
push
jbe
pop
pop
mov
and
shlb
inc
xor
push
pop
pushf
mov
cmp
out
dec
xchg
push
add
sub
or
into
ljmp
pop
mov
es
ljmp
xor
mov
lea
mov
pop
popf
data16
or
mov
out
push
cli
mov
xchg
xchg
xchg
adc
mov
dec
lock
lahf
repz
push
in
and
iret
decl
sbb
push
popa
lea
fistl
xlat
pop
loop
mov
mov
inc
outsb
rclb
test
loopne
fs
mov
push
pop
loopne
mov
lds
dec
testl
lcall
xlat
fs
int
movsb
or
idivb
sbb
cli
ja
loope
push
fs
addr16
enter
decl
add
dec
push
lcall
pushf
or
adc
inc
cmp
popf
dec
inc
lea
mov
outsb
lahf
cmp
mov
jl
sti
mov
call
pop
mov
loopne
stc
cltd
ret
inc
push
jle
mov
inc
into
dec
in
jne
or
out
pop
ret
mov
js
in
cli
xchg
sbb
sbb
jbe
xchg
ds
jb
add
mov
lds
fcomip
xor
out
ja
loopne
jmp
push
or
sub
push
sbb
cmp
incb
rcr
mov
sbb
pushf
push
decl
sahf
dec
loop
mov
outsb
test
in
cmpsl
loopne
repz
inc
adc
lcall
hlt
mov
lods
adc
add
sbb
insl
pop
lret
ljmp
loope
push
pop
push
into
dec
push
lahf
jo
add
das
imul
incl
pop
push
mov
dec
xlat
sarl
das
pop
je
cmc
in
pop
adc
inc
pop
addr16
stc
nop
imul
jo
mov
push
das
cmpsb
ror
dec
sbb
lcall
push
addl
fildll
inc
dec
bound
inc
and
cmp
sbb
mov
xchg
pusha
mov
push
lahf
xor
enter
std
adc
mov
jmp
mov
fisubrl
and
adc
pop
pushl
dec
hlt
roll
rol
jge
mov
inc
or
adc
dec
rcll
call
arpl
dec
flds
cmpsb
cmp
repnz
call
sbb
imul
or
xor
mov
scas
mov
in
or
xchg
hlt
pop
int3
out
fcomps
faddl
bound
incl
sahf
int3
sub
leave
lds
outsb
mov
test
pop
inc
xorl
out
xchg
or
or
xorl
scas
pop
fwait
aaa
inc
test
rcr
cmp
popf
inc
cmp
xor
fistl
outsb
jb
and
mov
ljmp
mov
cmpl
int3
adc
push
mov
shll
in
sbbl
call
inc
push
jl
add
pop
loop
outsb
jge
data16
xchg
fucomip
dec
orl
ljmp
fistps
mov
divb
inc
push
xchg
popf
mov
jmp
aam
jge
sub
mov
mov
push
add
das
push
test
cltd
and
xchg
test
cmc
jo
xchg
xchg
mov
add
xchg
mov
mov
lea
dec
gs
mov
mov
arpl
cmc
cmp
push
jb
into
xchg
push
mov
cld
andb
mov
push
and
pop
repz
push
adc
sub
add
rcll
lret
imul
push
mov
filds
cld
insb
cld
dec
jnp
test
fisubl
in
test
adc
or
movsl
out
imul
mov
fisubrs
movsb
les
popa
jecxz
dec
mov
inc
and
shlb
cmpb
push
xchg
decl
sbb
lea
pop
pop
pop
out
ficoms
insb
in
stos
loopne
xor
ljmp
push
cwtl
test
outsl
shlb
sbb
ror
dec
out
pushf
add
cmp
and
loop
ljmp
xor
arpl
shrl
xchg
mov
rorl
rcll
pushl
jmp
or
lea
jle
ret
dec
mov
xchg
lret
repz
pushl
sub
xor
mov
cmp
mov
mov
lret
inc
sti
push
das
ud0
andl
cmpsb
push
imul
ljmpw
pushl
mov
pop
aad
cmp
fdivl
mov
push
inc
pop
dec
xor
fisttps
cmpb
pop
out
mov
push
mov
mov
dec
add
daa
shl
jo
test
ljmp
push
lahf
in
cmp
insl
fdivl
pop
les
cmpsb
stc
sbb
jb
leave
push
sbb
mov
push
pushf
inc
ds
xchg
imul
out
xchg
and
xchg
mov
fsubr
ja
push
scas
mov
jmp
xlat
xchg
push
mov
loope
add
test
mov
or
js
rorb
enter
in
scas
jmp
cmpsb
loop
sbb
out
ffree
inc
mov
mov
sub
sub
and
xor
js
outsl
pushl
cs
xchg
and
xchg
mov
je
mov
dec
insb
pushl
in
jns
and
in
ja
inc
in
ss
and
inc
mov
cli
lret
stos
pop
inc
ja
mov
xor
aad
popf
fwait
stc
inc
xor
lock
pop
aas
xor
js
movsb
jb
push
lock
ret
cld
and
jge
ret
rcrb
fs
orl
decl
sahf
nop
pop
sub
sbb
inc
pop
sub
into
mov
jmp
push
pop
jo
ror
adc
nop
mov
les
mov
jbe
nop
jecxz
pop
jmp
cmc
mov
add
andl
dec
imul
jno
test
push
outsb
jl
inc
mov
xchg
cmp
lcall
bound
in
xchg
cwtl
push
psubsw
aad
sub
pushl
outsl
sbb
xor
jmp
jl
sub
inc
lret
add
loope
call
out
or
insb
pop
push
ficomps
xor
pop
jb
aaa
mov
and
insl
adc
mov
jle
jmp
and
inc
aad
out
push
icebp
adc
out
push
xor
pop
add
xchg
aas
lock
subb
rcll
imul
pusha
loopne
mov
dec
sub
sub
incl
sahf
fstpt
stos
les
xchg
sub
jg
dec
ret
daa
push
lds
mov
add
ljmp
inc
lret
and
shrl
sub
pop
int
fs
outsb
pop
std
jmp
ljmp
add
xchg
shlb
ljmp
sbb
jmp
dec
cmp
push
pop
in
fcomip
lcall
sbb
stos
ret
lods
xlat
inc
aaa
shll
fmull
add
xchg
add
clc
jmp
adc
sbb
dec
xchg
add
cld
inc
push
dec
or
jmp
leave
xchg
call
mov
out
sub
mov
dec
dec
jecxz
cmp
jbe
or
aad
adc
push
aaa
and
push
arpl
jo
dec
pop
mov
add
nop
adc
sarl
addr16
mov
repnz
fnstenv
iret
mov
push
add
call
test
pop
cmpsb
test
xchg
xor
sbb
les
hlt
adc
dec
ret
popf
xorl
ljmp
mov
std
fistps
clc
or
imul
push
cli
dec
mov
sbb
jae
lret
push
jg
cld
xor
and
lods
loope
or
pushf
adc
data16
setbe
jmp
loopne
or
xchg
in
mov
and
fdivl
stos
ljmp
sti
or
cs
push
es
mov
test
cmpb
test
cld
add
inc
dec
shr
into
push
fwait
jo
outsl
adc
or
pop
inc
mov
add
cld
mov
clc
pushl
sbb
mov
enter
adc
or
dec
ljmp
ffree
scas
push
in
and
dec
sbb
jge
ss
xor
rcr
dec
cmp
sub
ljmp
imul
jnp
jb
jae
inc
nop
sahf
decl
js
out
sbb
pop
frstor
pop
pop
clc
lcall
ljmp
push
jbe
cmc
testl
mov
xchg
out
lods
push
ljmp
out
xor
fmull
inc
sub
jecxz
insb
dec
test
cmpl
mov
fs
aaa
adc
das
push
sbb
mov
ss
rorb
std
mov
mov
in
pop
cmp
mov
test
lcall
outsb
in
jge
inc
sahf
push
loopne
mov
test
movsl
loopne
cmp
mov
jne
call
or
pop
sub
lock
leave
mov
test
loopne
std
and
add
call
cmc
insb
jmp
mov
jle
and
xchg
mov
es
mov
cmp
shlb
loope
or
ljmp
outsb
xchg
cltd
jmp
dec
mov
addr16
mov
xchg
test
push
pushl
sbb
jl
and
xchg
insb
cld
add
jnp
pop
or
into
xchg
rcl
xchg
adc
push
pushl
das
push
xchg
aaa
jg
jle
dec
pop
sbb
dec
stc
aad
inc
loop
push
pop
daa
push
cmp
lcall
inc
movsl
and
ret
push
cmp
or
pop
cmp
out
or
test
sbb
cs
xchg
mov
mov
xchg
mov
lock
andl
subb
cld
xchg
es
mov
mov
out
add
cmp
xchg
inc
mov
sbbb
adc
dec
stos
scas
mov
call
mov
inc
lahf
ds
cmc
push
add
pop
scas
cmp
dec
xor
pop
insl
out
or
ljmp
adc
arpl
sti
sbb
fmuls
xor
jecxz
lret
repz
fildl
push
jle
push
add
cmpb
add
movsl
xor
xorb
sub
xor
cmp
lcall
mov
adc
jne
flds
mov
inc
mov
jb
mov
xor
sets
pushl
add
mov
ret
sub
xchg
int3
mov
mov
jge
push
sbb
push
incl
mov
push
xchg
insb
test
push
in
mov
cld
pop
adc
mov
lcall
jle
mov
or
in
cltd
insb
pop
stos
mov
jg
shlb
mov
loope
test
jae
or
lret
scas
nop
mov
dec
push
orl
loop
cmp
and
sub
mov
fsubp
cmpsb
insl
andl
inc
cmp
dec
jg
mov
adc
xchg
insb
addr16
and
and
xor
push
jb
mov
pop
xchg
xor
xchg
inc
add
inc
sahf
fadds
jno
mov
mov
out
stos
ja
mov
mov
cmc
mov
into
ret
rcrb
mov
decl
decb
mov
push
push
fs
mov
cmp
cmp
xchg
fwait
jge
lds
aaa
and
and
push
jnp
push
aad
inc
addl
mov
pop
aam
call
inc
xchg
shrb
xlat
sti
or
rclb
add
jo
pusha
mov
inc
or
data16
aam
adc
lret
mov
pop
pop
pushf
aas
sub
cmp
cmp
lock
cmp
mov
mov
xchg
call
test
mov
pop
punpcklwd
pop
sub
sbb
inc
ret
or
ljmp
ror
jge
push
mov
xor
xor
call
xchg
dec
pop
mov
push
aad
repnz
pop
jbe
stos
sub
test
and
call
dec
movsb
mov
mov
push
pop
mov
and
jb
dec
ja
notb
rorl
out
ret
or
xchg
movsl
sub
and
and
hlt
dec
adc
call
pusha
sbb
fs
inc
ja
pop
arpl
jle
call
dec
push
je
mov
jge
call
dec
adc
jg
jl
cmp
ja
sub
mov
inc
fxtract
sbb
pop
out
xor
push
ss
das
mov
ljmp
mov
repz
jg
fidivl
push
sbb
jmp
lods
xor
fistl
mov
je
jecxz
fstpl
testl
jmp
and
mov
dec
mov
outsl
div
je
clc
xor
jle
xchg
stos
add
jmp
cld
stc
sbb
push
or
pop
xlat
inc
dec
fs
mov
mov
ret
repz
push
lock
mov
imul
pop
out
cmpsl
int3
cmpsl
addb
pop
jle
jns
xchg
mov
xor
xchg
add
imul
je
jl
call
shr
sarl
ret
daa
mov
decb
popa
mov
movsb
cmp
mov
sar
cmp
cli
in
test
dec
bound
cwtl
movsb
jle
daa
dec
lcall
fisttps
sbb
push
mov
les
fwait
enter
push
das
sub
xor
shrb
lret
jp
addr16
adcb
jnp
sbb
push
inc
add
call
mov
mov
cmp
mov
jnp
enterw
ljmp
jae
mov
lret
in
pop
ret
mov
or
and
hlt
push
pop
es
fistps
cmp
outsb
dec
dec
jbe
rolb
xchg
pop
mov
pop
icebp
push
mov
cld
jbe
mov
fnsave
xchg
fdiv
pop
loopne
pop
inc
jo
insb
hlt
jg
pop
cli
cmp
sub
mov
dec
pop
ljmp
pop
xor
sbb
movsb
xlat
sbb
lret
fiadds
sub
ss
dec
adcl
and
notb
mov
outsb
mov
pop
aaa
aaa
lea
leave
add
mov
and
pop
push
mov
ret
mov
jae
fs
rcrl
adcb
pushl
fadds
out
lods
push
mov
cmpsb
push
fwait
in
push
mov
pop
push
data16
pop
popa
aas
and
push
aam
cmc
jmp
cltd
xchg
enter
call
lds
repnz
js
rcrl
cmp
ljmp
fimuls
mov
adc
or
ja
xchg
mov
push
movsb
mov
mov
mov
cmp
call
gs
pop
lock
cwtl
jg
xor
fcoms
and
incl
push
daa
adc
mov
dec
insb
push
jp
imul
rcrl
sub
jno
clc
lret
xor
subb
loopne
or
fwait
push
and
decl
std
mov
call
sbb
jno
ljmp
add
xor
lods
iret
in
scas
xor
aas
movsl
fdivrl
ljmp
sbb
cmp
dec
sbb
push
and
xor
lahf
jne
loope
lea
imul
cmp
jne
lcall
and
aad
or
or
cmp
insb
xchg
xor
pop
sub
ror
adc
fbstp
xchg
pop
xor
push
jbe
push
js
pop
mov
add
popf
iret
cmpsb
lret
lcall
mov
lea
mov
shl
stc
pop
adc
lea
out
dec
and
pop
scas
clc
stc
push
ljmp
bnd
sub
stos
jno
sbb
ss
les
and
imul
xchg
ret
testb
insl
rorl
movsl
loop
cmp
cmp
les
jl
cmpsb
adc
int
mov
sub
mov
or
nop
clc
inc
xchg
inc
sbb
dec
sub
xchg
push
sbb
xchg
and
inc
cmp
add
pop
dec
nop
mov
mov
fucom
mov
out
mov
loop
pop
mov
sub
cld
fistl
cld
sbb
jne
aaa
xchg
test
and
imul
dec
pop
and
incl
xchg
pushf
adc
cs
out
xlat
movsb
rorb
shlb
inc
lock
xchg
out
movsb
subl
and
out
xor
sub
test
das
test
push
test
rorb
insb
pushf
sbb
int3
mov
rclb
call
mov
arpl
inc
pop
mov
sbb
cmp
sub
sub
clc
jge
push
out
sbbl
outsl
cmp
div
xor
push
push
sbb
clc
pop
rcrb
sti
mov
incl
cmp
push
sbb
rcll
cmpsb
jl
inc
inc
xchg
rcrb
lcall
sbb
into
daa
push
mov
fbld
aam
cltd
xor
lock
push
lcall
xor
jl
mov
ss
orb
pushf
mov
test
sbb
popa
push
or
jg
inc
push
nop
sub
addr16
mov
rcrl
sbb
lcall
inc
push
stc
mov
out
or
in
decl
inc
inc
aad
inc
fcomps
imull
or
inc
test
fcomip
ja
adc
add
mov
out
xor
dec
or
xlat
test
add
das
sar
adc
test
lods
shrb
pop
adc
pop
pop
in
mov
jg
pusha
lret
fwait
shl
xchg
clc
or
rcrl
fst
das
lea
jmp
int3
mov
lcall
ss
push
cld
jne
out
fsub
or
cmp
ret
das
lds
mov
cmp
incl
cltd
pushf
sbb
shl
cmp
imull
fucomi
pop
mov
aam
call
xor
jp
shrl
jo
pusha
repz
popf
sub
pop
push
clc
mov
mov
sarl
hlt
cmpsl
daa
lret
das
push
cltd
std
jle
into
insl
jle
adc
sbbb
jne
lret
pushl
dec
mov
mov
and
mov
ss
cltd
inc
mov
popf
sbb
fbstp
pop
sub
lcall
mov
test
pop
dec
leave
bound
jno
mov
stc
lea
testb
dec
dec
movsb
mov
fnstcw
fisubl
fildll
mov
test
aam
push
popl
fwait
hlt
jmp
add
aam
test
pop
loopne
mov
cmp
push
stc
clc
enter
mov
mov
mov
inc
cmp
aad
push
jbe
mov
adc
daa
inc
incl
addr16
clc
icebp
jno
lods
xchg
fcmovne
adc
lock
add
mov
test
xor
adc
movsb
js
and
mov
aad
insb
cmp
fldl
decb
imul
pop
sbbl
pop
imul
test
xchg
sbb
inc
call
ret
int3
nop
insb
je
mov
push
jg
lcall
lock
arpl
faddp
sub
pusha
dec
arpl
xorl
lret
xlat
xchg
divb
or
sbb
outsl
ss
or
mov
mov
cmp
hlt
js
and
inc
subb
inc
mov
cld
leave
data16
dec
cld
das
rorb
jmp
pusha
out
test
cltd
sar
jg
push
inc
scas
cmpb
sbb
fcmovnu
aas
cmc
or
xor
pop
push
mov
xor
cmp
dec
xchg
ja
mov
sbb
call
je
divb
jmp
inc
mov
movsb
and
out
sbb
les
imul
idivl
mov
out
add
mov
jle
sar
push
into
gs
jne
lods
aaa
cmp
sub
and
add
aam
lcall
loope
sub
inc
jp
cli
inc
dec
imul
roll
fs
iret
mov
testb
xor
test
xor
xor
jge
test
int
hlt
mov
lock
test
adc
incl
xor
inc
fisubl
jnp
or
hlt
lock
mov
scas
fs
mov
ljmp
sbb
js
push
shrb
and
mov
xchg
leave
arpl
cld
aaa
inc
jp
pop
add
lds
ficoms
push
aaa
rol
jp
adc
loope
and
xchg
pushf
sbb
sbb
jg
lcall
jne
sub
jnp
inc
dec
xchg
sbb
pop
stos
sti
xor
dec
rcrl
out
cmp
xchg
into
mov
pop
push
pop
mov
xor
call
mov
mov
adc
mov
adc
das
fstpl
call
mov
int3
into
nop
cmpsl
mov
lahf
push
xor
push
jg
cmp
stos
js
data16
or
es
add
mov
add
mov
jmp
ret
mov
in
jae
xchg
xchg
stos
lds
rolb
pop
dec
sub
andb
lcall
addr16
or
clc
mov
sub
ja
jge
stos
cwtl
lcall
mov
in
pusha
add
cld
mov
add
hlt
pop
icebp
int3
mov
xchg
add
lahf
stos
xchg
cmpb
adc
movsl
fmuls
mov
and
pop
jl
js
orl
inc
jmp
jg
div
cmpsb
xchg
dec
push
loopne
xor
sbb
inc
psllw
push
std
cmp
imul
call
mov
dec
scas
jecxz
add
fcoml
pop
ffreep
push
lret
rolb
and
sub
dec
and
pop
insb
sahf
shrl
cld
fstpt
loopne
xchg
xor
insl
pushl
out
jnp
mov
mov
mov
xchg
fsubrl
sub
xchg
pop
xchg
inc
push
sar
call
outsb
popf
daa
es
mov
scas
movsb
or
dec
xchg
push
cmc
dec
iret
mov
dec
push
ret
add
lods
push
mov
ret
or
jl
fdivr
incl
cld
pop
subb
pop
inc
jo
out
andl
sub
call
lods
pop
nop
scas
test
xchg
lret
fcoms
xor
push
imul
pop
sahf
loopne
in
adc
lcall
call
int
sti
push
mov
push
call
dec
jmp
fimull
add
mov
incl
and
and
dec
mov
dec
add
jo
push
repnz
jle
out
outsb
xor
rol
or
loope
jb
ds
pop
pop
xlat
mov
inc
xor
or
xchg
lcall
out
int
push
lcall
inc
scas
xchg
jl
lcall
loopne
mov
sbb
out
sub
jge
inc
daa
sti
outsb
out
data16
lods
jg
inc
xchg
test
add
adc
cltd
shlb
sbb
mov
add
hlt
sub
or
inc
sbbl
scas
shr
in
adc
in
das
and
jg
push
scas
adc
dec
loop
insb
lahf
xor
cltd
push
xchg
aas
aaa
inc
fsubrs
popl
pushl
repz
push
xchg
mov
in
mov
mov
call
aad
add
pusha
xor
xchg
decl
hlt
pop
jp
arpl
mov
pushl
xorb
and
mov
xor
inc
imul
mov
xchg
adc
jmp
xorb
jae
arpl
push
pop
xor
fildl
cmp
cmp
cmc
sbb
inc
aaa
add
incl
bound
rolb
adc
jne
adc
cmpsl
iret
xchg
push
imul
jae
mov
decl
mov
stos
ficoml
push
fwait
shrl
inc
mov
decl
aas
fwait
inc
inc
movsl
jno
mov
and
mov
mov
out
jg
fnstcw
adc
lcall
in
adc
push
or
xchg
dec
xchg
cmc
loope
pop
lahf
pushf
inc
sub
mov
xchg
sub
xor
incl
outsb
pop
push
orl
mov
popf
jle
fistl
cmp
loope
jp
mov
mov
adc
add
or
inc
sbb
pop
or
leave
mov
lret
mov
jbe
mov
out
sub
popa
lahf
xchg
mov
imul
cmpsl
outsl
sub
lcall
arpl
cmpsb
ret
jne
sahf
pop
in
pop
ret
push
adc
mov
movsl
xchg
sarl
pop
clc
and
pop
lds
sub
cmp
xchg
xor
xor
sar
inc
aam
dec
adc
lcall
adc
call
ljmp
in
push
mov
push
sub
mov
inc
add
push
sar
outsl
jl
mov
jns
push
adc
insl
mov
jo
mov
xchg
adc
lcall
daa
mov
mov
clc
xchg
pop
cmpsb
addr16
cld
mov
dec
jnp
adc
lret
js
add
test
lcall
pop
pop
sbb
stc
cli
addr16
test
or
push
movsl
imul
inc
repz
push
popf
mov
cmp
movsl
out
xchg
mov
fsubrl
fdivrl
pusha
pop
insl
push
mov
cltd
xchg
mov
fisubl
lcall
jb
lret
aad
xor
add
jle
mov
xor
loope
jns
jmp
sub
das
xor
call
fwait
sbb
inc
pop
fdivrp
lcall
lods
mov
pushf
or
inc
xor
mov
fmul
sbb
jp
arpl
sahf
push
frstor
pusha
scas
dec
inc
jle
cs
jmp
adc
or
sub
add
repnz
push
movb
subb
ljmp
pop
add
pop
mov
adc
mov
jns
push
xchg
and
and
dec
aam
and
push
and
fsubrl
xor
xor
dec
test
jno
and
dec
aam
dec
push
jle
shlb
mov
cli
jb
mov
sub
cmp
dec
or
inc
mov
push
scas
fisttpl
out
or
pop
ret
sbb
ljmp
jo
outsl
push
inc
inc
and
sub
ljmp
pop
mov
ffree
cmp
sub
daa
popa
dec
push
adc
push
cli
xchg
jg
popa
xor
movsb
fldt
mov
icebp
fnstenv
sbb
add
aaa
stc
lds
arpl
adc
cwtl
loopne
pusha
dec
jmp
inc
mov
and
ljmp
adc
outsl
out
movsl
fcompl
jge
dec
push
adc
add
sub
dec
ret
popa
orl
add
int3
icebp
xchg
data16
adc
cmp
cmp
mov
cmp
prefetch
mov
xchg
test
jle
addr16
cmp
jb
fidivl
aam
fdivr
pop
jl
sub
adc
fldenv
ror
ds
sbb
sbb
jg
push
insb
aam
mov
fst
lods
push
orl
movsb
pushf
pop
je
inc
out
cmpsl
cmp
ljmp
add
pop
push
sub
lcall
dec
aam
mov
call
popf
or
mov
inc
into
cmpsb
dec
rclb
mov
shll
xchg
jmp
nop
lret
add
std
incl
inc
stos
sbb
cwtl
fs
pop
out
inc
sbb
popa
adc
add
add
clc
jg
adc
adc
mov
mov
push
ss
int3
ds
jnp
and
cwtl
movsl
inc
dec
aas
test
pop
sub
movsb
pop
std
cmp
xor
adc
sub
inc
push
and
jmp
outsb
push
dec
xchg
cmc
incl
into
xchg
inc
mov
bound
gs
sub
inc
and
jmp
dec
cli
call
movsb
mull
and
in
scas
ljmp
clc
out
nop
test
outsb
dec
lods
cmp
push
ret
stos
xchg
popf
jmp
int3
push
aad
dec
rcrl
stc
inc
lods
mov
nop
push
sbb
imul
mov
mov
lea
push
stos
add
cmp
mov
lcall
push
pushf
and
ret
sub
xchg
jbe,pn
inc
int3
outsl
lods
outsb
out
dec
cmc
incl
pop
enter
jnp
sbb
pop
arpl
sbb
incl
push
jecxz
push
xchg
xchg
nop
popa
mov
loopne
pop
fldt
hlt
idivl
pop
cwtl
and
xchg
test
std
lret
mov
cmp
ljmp
sub
dec
mov
call
pop
test
addr16
popw
bound
lcall
js
shll
push
pusha
xchg
fiadds
adc
ljmp
jmp
fisttpll
add
imul
stos
mov
mov
mov
stos
aaa
xor
mov
fsubrl
ds
aas
arpl
movsb
stos
lret
pop
fwait
mov
dec
jmp
adc
mov
test
insb
mov
shlb
icebp
movsl
lds
lcall
dec
pop
jecxz
fistpl
lea
dec
lahf
aas
in
push
and
adc
es
sub
lcall
fistpll
dec
outsl
clc
stos
mov
ja
xchg
inc
in
jg
push
sbbl
outsl
lcall
call
arpl
fs
pop
call
cwtl
rol
sahf
jbe
lret
mov
loop
out
cmp
clc
jmp
cs
adc
dec
mov
mov
jmp
loop
call
xchg
xor
jo
or
arpl
and
into
fiaddl
fwait
mov
lock
dec
fisttps
insb
inc
inc
in
insb
mov
sarb
add
jbe
jl
in
add
push
popf
dec
ficomps
xchg
sbb
xor
adc
int3
imul
mov
xorl
addr16
outsb
in
sbb
test
dec
xor
pushl
data16
dec
xlat
and
or
push
add
pop
jae
clc
insl
lahf
pop
xor
mov
inc
xchg
adc
mov
sti
shll
shlw
push
fstpt
mov
addb
adc
iret
adc
mov
push
lea
mov
fdivr
pop
and
js
pusha
sub
lods
incl
bnd
ds
rorl
leave
nop
dec
push
jb
dec
fwait
lds
jmp
cmc
enter
lods
add
shrl
loope
inc
mov
call
lcall
int3
cs
ficompl
or
jl
inc
imul
sar
sub
cmp
cmp
adc
pop
mov
push
in
lods
test
jl
in
sub
dec
cmp
xchg
sahf
xchg
incl
jl
repnz
jno
pop
sub
hlt
out
cmp
pushl
adc
test
mov
rcll
aas
sub
xor
ljmp
sahf
push
aad
inc
dec
jle
inc
pop
jl
mov
mov
xor
and
mov
cmp
mov
lcall
dec
pop
sarb
inc
es
xchg
jmp
mov
data16
sub
imul
and
mov
fistpl
jmp
dec
repz
js
cmp
sarl
lcall
pop
add
dec
mul
fisttpl
mov
sahf
push
fs
dec
sbb
sub
add
xor
fldenv
into
pop
mov
hlt
pusha
aad
jmp
mov
out
ds
mov
sub
adc
out
xchg
stos
or
subb
lret
push
call
jge
and
push
mov
lcall
jb
dec
mov
loop
popa
loopne
loope
cmpsb
push
shlb
mov
dec
dec
das
lock
pushl
in
xor
mov
sbb
mov
push
std
call
cltd
testb
jecxz
jnp
sub
mov
pop
adc
call
mov
subb
repnz
jne
push
bound
cmp
xor
ficoml
xor
sub
mov
push
mov
mov
icebp
pop
inc
aad
cmpsl
xchg
hlt
mov
or
es
mov
sbb
rcll
aaa
into
outsb
inc
adc
push
out
adcb
cs
mov
push
pop
add
call
jle
ljmp
orb
adc
inc
push
xchg
rolb
push
mov
jmp
sbbb
mov
sbb
cmp
sbb
cmpb
pushl
dec
mull
mov
mov
jl
mov
jb
dec
rolb
push
pop
cmp
xor
cmp
ss
popl
inc
mov
and
mov
sbb
popf
out
pop
adc
lcall
popf
xlat
daa
scas
lods
lock
mov
call
and
xchg
std
push
or
mov
jge
lds
xchg
dec
in
movl
pushl
xor
cs
outsl
adc
mov
je
mov
loop
lret
call
cld
inc
aas
mov
out
xor
ret
sbb
or
je
inc
push
and
std
dec
repz
dec
add
cwtl
xlat
sub
jnp
rcl
cmpsb
jmp
pop
xlat
mov
lock
sbb
xor
fcomp
dec
jge
pop
mov
xor
decl
cmp
out
sarl
cmc
dec
inc
stos
inc
iret
xchg
mov
stos
lcall
repz
into
xor
and
add
lods
out
ds
stos
xchg
fidivl
dec
cltd
ss
gs
inc
mov
jl
sbb
decb
mov
sub
sub
xchg
inc
cmc
or
in
pop
incl
ljmp
imul
test
sub
or
loopne
dec
add
insb
and
xchg
add
pushl
fmuls
push
nop
xchg
pop
and
fwait
in
orl
cmp
aas
cld
push
push
cld
sbb
leave
mov
pop
setg
jo
mov
repz
sbb
jbe
mov
cmp
pusha
lea
pop
xor
lret
mov
xor
hlt
in
mov
popa
jmp
lcall
insb
loop
int
icebp
fisubs
pop
add
hlt
pop
xor
adcl
dec
adc
mov
sub
jg
add
movsb
sahf
int
jne
pushf
test
inc
decl
xchg
pop
insb
xor
test
mov
in
ljmp
sbb
jl
mov
and
jns
add
push
dec
adc
shll
adc
push
mov
xchg
inc
dec
insl
or
mov
movsl
xor
icebp
addr16
in
push
and
xor
xor
mov
xchg
daa
addr16
in
movhps
mov
jge
and
popf
sbb
mov
jno
jl
shlb
test
mov
jmp
and
aas
dec
notl
clc
dec
ljmp
das
inc
sbb
pop
addb
sub
push
cmpsb
mov
call
mov
jmp
xchg
push
icebp
sahf
adc
pop
xchg
mov
shlb
aam
pushl
outsl
pop
js
xor
in
roll
dec
subl
pop
incl
adc
mov
test
inc
test
decl
insb
mov
xchg
loopne
dec
stos
popa
xchg
mov
fisttpl
ljmp
sbb
mov
cmp
sbbb
mov
ljmp
ss
out
dec
data16
jbe
bound
xchg
ret
notb
cmp
mov
pop
cmp
inc
xor
sbb
xor
or
rcl
in
call
mov
test
sbb
mov
lcall
clc
sub
ja
ret
vsqrtsd
sarb
loopne
scas
add
pop
scas
jno
mov
mov
mov
std
flds
and
outsl
cli
fwait
or
sar
cltd
es
lret
mov
cltd
push
mov
cmp
pop
xchg
scas
fsts
lret
scas
or
aad
ljmp
int3
sbb
jb
xor
fidivl
xchg
out
shl
jbe
sbb
mov
mov
mov
pusha
sub
add
in
mov
pop
xchg
add
and
clc
repnz
lcall
repnz
jmp
insl
add
cmp
cmp
ja
mov
ret
inc
push
push
and
out
inc
arpl
xchg
pusha
mov
outsb
ss
jnp
int
push
cs
mov
mov
xchg
mov
scas
mov
jg
mov
cmove
mov
pop
rcrl
sub
incl
cmp
hlt
addr16
repnz
inc
dec
fistps
and
dec
pop
xchg
jle
add
js
imul
or
test
bound
sbb
and
pop
loopne
icebp
ja
jo
xchg
and
dec
mov
mov
jmp
push
scas
arpl
adc
cld
popa
ret
dec
lea
xchg
pop
mov
mov
mov
stos
ljmp
pop
push
out
or
das
fidivrs
pushl
add
pushf
pop
mov
sbb
pushl
inc
mov
jb
lods
mov
push
sub
fadds
shrl
ljmp
mov
push
aam
cmp
sub
cld
mov
mov
dec
cmp
sti
or
aam
push
pop
pop
sti
dec
clc
pushl
negl
inc
js
mov
fcompl
lea
clc
inc
mov
insb
cs
mov
das
sbb
ljmp
mov
sub
xor
push
mov
mov
or
adc
jne
insb
es
jmp
push
mull
or
cs
ss
aas
sbb
roll
mov
add
jmp
xchg
inc
pop
out
push
inc
adc
pop
or
mov
popf
adc
ljmp
inc
repz
adc
jle
sub
cmp
jns
dec
test
inc
scas
and
insl
add
mov
scas
mov
lret
inc
hlt
xor
xor
push
pop
fistps
call
cmp
dec
and
xor
sti
cli
sub
xlat
xor
sbb
and
mov
loope
ljmp
dec
adcl
inc
fwait
js
sbb
inc
rolb
xchg
xor
clc
gs
mov
sbb
dec
leave
rorb
push
push
cmpsb
push
pop
in
dec
mov
mov
aad
ret
push
xchg
addr16
cli
ja
cmpsl
clc
movsl
sub
int
lret
jg
movsb
pop
xlat
shll
fstpl
outsb
fcomps
enter
fs
dec
sbb
clc
stos
decl
pop
xor
icebp
les
cmp
xchg
test
outsl
pop
fdivrs
js
dec
jg
push
sti
mov
stos
scas
shrb
cltd
add
int
in
mov
pop
fldln2
les
ret
fnstcw
mov
sub
decl
xor
push
insl
mov
jae
sbb
sbb
xor
push
popaw
movsb
cmp
mov
movsb
adc
das
push
outsb
icebp
mov
andb
xchg
dec
test
lcall
emms
adc
hlt
int3
jg
int3
scas
in
push
mov
mov
lret
cmc
inc
mov
mov
sub
inc
jp
push
and
arpl
std
jl
iret
rorb
test
xor
pop
lock
xor
mov
rolb
or
insb
std
dec
jbe
sbb
loop
xor
decl
jl
cld
movsb
aam
aas
shll
jne
jmp
sub
jmp
pop
incl
mov
cs
cmc
jge
push
mov
ret
enter
js
insb
repnz
je
int
mov
mov
dec
push
dec
lret
xor
pop
xchg
xchg
pop
push
pushf
jecxz
cmp
cmp
jge
loope
push
inc
stos
sub
xchg
es
addr16
pop
popf
dec
les
les
sbb
inc
enter
call
cwtl
jnp
int3
xor
pushf
jl
popf
jp
jecxz
xor
xor
xor
sti
hlt
jns
imul
cmpb
test
sbb
jle
adc
inc
aas
bound
call
repnz
jbe,pn
dec
aad
cmpsb
jb
push
inc
ret
xchg
cli
xlat
sub
xor
xor
std
pushl
xor
inc
cltd
mov
lock
mov
xchg
testl
adc
jo
add
mov
aaa
ret
les
and
aaa
imul
xchg
sarl
pop
inc
rcr
popf
jg
dec
les
imul
pushl
mov
mov
push
lods
ret
adc
xor
adc
cld
mov
fdivl
lea
xchg
lret
shlb
sub
movsl
mov
or
sub
jno
push
std
fidivl
movsb
push
cmpsb
xorl
lods
out
adc
dec
shrl
pop
mov
iret
stos
xor
dec
pop
cmpb
and
std
fildl
les
and
out
jns
ljmp
mov
cmc
iret
xorl
push
fwait
or
test
sti
pop
jmp
out
mov
ret
fmuls
pop
outsl
xchg
call
adc
cmp
mov
lret
es
xor
mov
outsb
xchg
stos
sbb
lcall
lahf
lods
cmp
fmuls
and
pusha
or
call
incl
add
dec
rcr
hlt
pop
scas
sub
cmp
mov
fildll
inc
call
add
inc
pop
sahf
cmpl
imul
fistps
mov
jmp
lock
lods
lahf
jle
cld
jg
sbb
sbbb
mov
jg
test
xor
loope
mov
or
aaa
add
fcmovbe
fs
cmp
pop
outsb
jp
cmc
test
mov
adc
loopne
test
rcr
push
pop
inc
loopne
cltd
insb
cld
lcall
inc
pushf
imul
dec
in
ret
stc
sub
test
add
aaa
xor
mov
jg
add
stos
filds
sub
and
add
inc
xchg
jbe
mov
dec
into
mov
mov
mov
xchg
inc
jg
pop
xor
pop
push
ret
mov
inc
mov
cmp
adc
lods
aas
loop
push
mov
mov
mov
jle
mov
adc
jno
nop
add
push
jbe
ljmp
xchg
xchg
inc
mov
insl
fsubs
clc
sarl
or
pop
cmc
sbb
repz
sub
test
and
and
pop
cmc
lcall
jl
or
jns,pn
lahf
gs
ret
jl
cli
test
fcomip
sarl
mov
pop
and
mov
and
add
lock
std
xchg
sbb
es
cli
sub
mov
xchg
xchg
jns
mov
dec
inc
inc
dec
mov
fisubrl
mov
shl
cld
out
icebp
and
mov
xor
dec
ljmp
nop
pop
push
mov
mov
jg
cli
mov
jmp
movsl
jmp
jns
cmc
pop
jno
mov
pop
and
mov
sub
pushl
mov
pushf
inc
out
stos
pop
popf
adc
addr16
daa
mov
lods
or
pushl
pop
mov
jge
inc
adc
xor
mov
mov
pushf
loop
adc
sbb
xor
cld
mov
adc
mov
cmpsl
data16
bound
jno
sbb
cmp
aad
in
adc
in
sbb
sti
lea
xor
jge
dec
jo
out
cli
fbld
aas
xchg
mov
in
mov
adc
dec
sub
xor
sahf
adc
dec
popl
pop
mov
lret
pushf
or
fs
jecxz
aaa
repnz
fptan
push
and
jmp
cmpsl
inc
sub
mov
mov
sbb
mov
mov
add
jl
xlat
call
aad
pop
jle
and
shll
dec
jbe
call
call
outsl
fisttpl
sub
mov
leave
es
cmp
cltd
xlat
inc
mov
sub
jmp
insb
pop
cmp
call
inc
mov
inc
movsl
fstp
popf
lret
mov
scas
mov
inc
scas
push
pop
shrb
cmp
loop
loope
mov
repnz
push
icebp
push
inc
sbb
fs
outsl
fmuls
mov
dec
shrl
jb
jmp
movsb
out
icebp
ret
bound
pop
adcb
sbb
sbb
ljmp
xor
xchg
fsubs
sub
incl
or
mov
adc
or
cld
mov
dec
pushf
nop
pop
pop
add
sbb
fstl
sub
inc
imul
mov
xor
and
sbbb
cs
mov
cmp
jl
pushl
shlb
mov
test
call
stos
cltd
dec
loop
stos
cli
insl
outsb
iret
xlat
add
mov
mov
out
sub
xchg
iret
adc
or
leave
lods
dec
mov
jg
mov
sub
shll
push
xor
std
push
jb
lcall
ror
rolb
fldcw
insl
call
or
mov
pop
out
dec
pop
sbb
cmpsb
add
scas
mov
mov
xor
fldenv
outsl
std
jmp
in
push
nop
mov
inc
cs
sbb
dec
clc
dec
test
and
push
movsl
fisttps
lock
jp
and
xor
push
test
decl
inc
and
fsubr
push
cli
or
mov
into
dec
jbe
aam
xchg
hlt
mov
jg
add
sub
cmp
fdivrl
adc
and
or
adc
push
push
dec
ljmp
pushf
jg
mov
sub
and
stos
fildll
aas
dec
jl
xchg
test
lock
mov
fldenv
adc
dec
add
mov
addr16
mov
nop
popa
or
mov
into
add
inc
xor
cmp
mov
inc
sbb
pop
imulb
mov
inc
scas
call
decl
dec
sub
ds
dec
pusha
jbe
mov
ljmp
mov
and
mov
sbb
inc
sub
inc
arpl
mov
dec
mov
jae
loope
nop
lcall
bound
iret
sbb
cmp
clc
test
sub
cmpb
out
ds
into
xchg
mov
dec
mov
jmp
into
mov
xchg
pop
into
jo
sbb
cmpsl
inc
push
test
bound
cmpsb
in
scas
mov
decl
rcrl
adc
push
cmpsl
jnp
push
aam
arpl
sub
dec
int
daa
push
jo
cwtl
rorl
test
push
stos
divl
int
subl
int3
push
and
ja
cmp
cld
scas
jb
jno
sub
stos
add
mov
mov
xchg
sbb
pushl
add
mov
mulb
sub
mov
sub
andb
push
adc
outsl
xor
mov
fs
negb
mov
lcall
push
insl
sub
sub
sbb
out
add
or
call
xchg
fists
cli
ds
adc
push
in
or
pop
pop
adc
or
and
jnp
lock
lods
cmpsl
popa
mov
cmp
cwtl
pop
fisubrl
lret
pop
sbb
fucomp
lcall
and
rcrb
mov
shlb
lds
mov
add
decl
sahf
aaa
call
mov
sub
dec
mov
jmp
pop
push
sbb
jmp
je
bound
cmpsb
cmpsl
mov
faddp
jno
xchg
sahf
cwtl
lods
cmp
test
inc
aad
fdivl
cld
stos
orl
pop
pop
cwtl
daa
jle
loopne
jge
push
adc
pop
ja
ret
jmp
mov
dec
fidivs
jmp
push
les
add
mov
call
mov
test
movsl
leave
xchg
dec
lcall
fisttps
mov
js
je
mov
push
sbb
stos
pop
fnstenv
push
mov
outsl
xor
xor
in
fimull
pop
lds
out
adc
nop
lret
xorl
rol
xlat
call
cld
cmp
xchg
pushf
xchg
dec
pusha
xor
lods
call
cmpsl
shlb
xchg
add
icebp
lcall
test
daa
enter
sub
repnz
cwtl
out
lods
cmpsb
rcl
or
stos
fldcw
stc
sbb
mov
adc
xor
lods
xchg
mov
mov
incl
andb
dec
jge
sbb
pop
call
lret
in
mov
jno
je
out
inc
or
fsub
mov
outsl
cmp
sbb
cld
fistpll
sarb
xchg
pop
mov
int
pushl
icebp
jbe
in
lea
cmp
xchg
fsubs
sar
mov
mov
stos
and
pop
out
hlt
testl
lods
jns
pop
jle
hlt
ret
test
cmc
xchg
into
jmp
dec
cmp
mov
cmc
pop
dec
les
icebp
xchg
pop
or
mov
flds
outsl
xchg
mov
loop
ret
or
outsb
cmp
sar
rcll
pusha
int3
mov
inc
lock
repz
push
dec
xchg
cltd
sahf
cs
jl
out
ret
mov
jae
sub
push
mov
enter
mov
lock
clc
push
and
xor
pop
and
pushf
dec
jl
or
in
jg
add
mov
sub
xor
test
mov
adc
shll
mov
icebp
fs
ljmp
out
push
add
inc
shlb
sub
pop
add
mov
rcrb
pop
and
push
xor
jo
repz
clc
stc
repz
call
dec
add
orl
js
lods
fldl
call
xchg
daa
dec
inc
adc
jle
adc
int3
jle
mov
inc
ja
gs
mov
xchg
insl
dec
dec
mov
jecxz
and
cmc
ljmp
incl
jne
outsl
dec
std
mov
cmp
xor
mov
mov
in
gs
sbb
inc
xor
adc
out
sar
or
push
testb
adc
inc
xchg
jge
test
les
sub
call
push
out
iret
push
adc
mov
popf
std
lock
xchg
push
roll
sub
repz
fiadds
cli
jb
inc
adc
mov
jg
cmpsb
add
jb
xchg
mov
jg
mov
sar
ljmp
test
sarl
fstpl
jge
or
fisubrl
mov
call
xor
dec
push
mov
pop
push
lea
or
mov
mov
rolb
pop
mov
ljmp
dec
pop
xchg
or
mov
mov
repnz
movzwl
repnz
mov
int3
xor
or
mov
jnp
popa
sbb
cmp
test
jmp
orb
and
cmp
inc
out
cmpsb
cltd
ret
mov
and
les
sbb
sarl
jmp
pop
movsl
popf
xchg
dec
je
xchg
es
or
loope
or
xchg
mov
pop
test
xchg
call
and
cmp
stc
push
mov
shlb
nop
clc
mov
dec
pop
mov
jl
mov
stos
mov
test
jbe
mov
push
clc
pusha
mov
je
incl
add
or
sbb
int
mov
push
enter
mov
mov
cld
aas
dec
jl
jns
pop
push
jle
out
jne
movsb
jg
in
lret
mov
mov
je
mov
out
xchg
sbb
aam
mov
scas
jg
push
dec
outsb
cwtl
rclb
rorb
inc
mov
cmp
sti
insb
mov
mov
shlb
incl
inc
ficomps
xchg
pushf
inc
adcb
int3
mov
sbb
mov
fcomps
cld
push
or
mov
push
mull
xor
push
cmp
in
cld
dec
test
inc
jb
adc
int
jp
out
and
test
addr16
test
ljmp
out
movl
push
out
mov
fcomi
dec
add
cmpsl
cmp
decl
sub
cmp
rorb
dec
xlat
inc
test
pushl
add
xchg
jae
sbb
dec
aas
jno
pop
jmp
mov
js
scas
xor
dec
pop
rorb
sbb
incl
inc
mov
adc
sbb
hlt
pushl
mov
and
daa
aam
push
sbb
cmpsb
mov
loopne
jne
ljmp
mov
out
setns
sub
cmc
mov
push
xor
js
jne
ret
cmpsb
insb
jno
stos
push
push
push
movsl
mov
cmp
adc
push
pop
lea
dec
lds
sbb
iret
jl
cltd
inc
negl
xchg
data16
mov
add
mov
ror
es
mov
inc
fcomps
shlb
mov
es
cs
jmp
inc
add
adc
adcb
cmc
mov
pop
mov
sbb
mov
xchg
push
xor
bound
call
mov
pop
fistl
data16
loopne
cmpsb
mov
dec
imull
les
sbb
cmc
scas
lret
sub
lcall
lock
pushl
push
sbbb
cltd
xchg
mov
push
xor
inc
mov
sar
xchg
push
cld
lds
fdivs
shll
dec
mov
ss
mov
xchg
js
mov
xor
ret
outsl
mov
call
mov
clc
push
sahf
pusha
loopne
jg
jns
test
xchg
add
rep
mov
dec
xchg
icebp
incl
xchg
pop
pop
out
sub
sub
ja
cld
cmc
xchg
xchg
inc
test
fstpt
lods
iret
aam
inc
neg
lahf
out
mov
adc
xor
es
cmp
call
popa
sbb
jmp
loopne
shlb
adc
jne
movsb
cmp
daa
mov
mov
and
cmpsl
lcall
dec
jmp
and
je
jmp
mov
hlt
push
loop
sub
cltd
adc
add
dec
sub
call
rclb
psubsb
mov
add
push
and
xchg
jnp
lret
mov
js
pop
fsts
mov
adc
int3
and
out
jbe
cmp
out
dec
lods
pop
push
pop
mov
rcrb
orl
ljmp
cli
xchg
sub
push
sbb
fcoms
pop
mov
andb
dec
nopl
add
sub
lahf
es
movsb
js
aam
inc
mov
gs
jg
add
sbb
mov
out
and
outsl
and
jo
jge
jae
push
popf
mov
cmp
out
sub
imull
push
pop
scas
outsl
pop
cmpb
outsb
mov
inc
test
mov
call
out
les
add
iret
in
xor
int
jne
pusha
cli
xor
fsubs
sbb
xor
pushl
xchg
adc
jp
jg
pop
fwait
ds
cltd
pop
or
stc
test
hlt
lcall
inc
enter
stc
jecxz
mov
xchg
sti
dec
cmpsl
test
out
pushw
rol
push
adc
das
mov
push
xor
out
pop
mov
pop
std
lcall
mov
xor
mov
xor
ja
out
js
in
sub
adc
call
sarb
sbb
push
push
pushf
das
xor
test
cmp
xor
dec
xor
imul
and
sbb
popa
dec
sub
cmp
rcrl
hlt
outsl
jmp
scas
or
cltd
nop
out
call
fisubs
jne
movsl
jg
add
cld
mov
ss
xorb
ljmp
jl
pop
rorb
adc
xor
bound
cmc
adc
out
pop
call
call
je
les
sub
xchg
pop
dec
in
xchg
xorl
out
jle
ss
mov
mov
adc
mov
ret
enter
cmpsl
mov
ds
or
sahf
cmp
addr16
repnz
push
jne
mov
adc
lahf
repnz
xchg
clc
and
mov
jmp
addr16
lahf
mov
jl
or
lods
mov
pop
sbb
das
out
pop
arpl
fcomip
jmp
nop
mov
sbbb
loop
mov
mov
fbstp
mov
mov
call
addsubps
and
iret
jmp
int
adc
jecxz
jmp
mov
fwait
jmp
pop
lock
shl
mov
pop
sub
dec
outsb
movsl
or
dec
cmpl
jb
jg
or
jae
inc
lcall
inc
jmp
decl
lea
jle
imul
test
sti
ljmp
dec
inc
shl
mov
xorl
dec
or
cwtl
scas
int3
mov
mov
sbb
dec
inc
paddusw
mov
shrl
jmp
jge
mov
mov
cmc
pushf
jmp
xor
and
mov
or
fadd
push
inc
sub
jmp
pop
jle
call
mov
nop
xchg
stc
sub
dec
jg
cmp
icebp
fistpll
jecxz
cmp
gs
sti
lret
dec
inc
mov
call
xor
cltd
mov
in
sbb
outsb
roll
clc
stos
test
push
test
cmp
xchg
incl
mov
sti
xlat
push
lahf
scas
jnp
or
xor
cwtl
mov
mov
push
pop
stc
lock
and
xchg
incb
aaa
std
adc
shl
inc
js
mov
sub
hlt
add
fsubrs
add
lods
xor
adc
jle
and
loope
sbb
movsl
mov
push
in
xchg
adc
hlt
mov
mov
ljmp
push
mull
insb
or
fcmovbe
jns
xor
sahf
mov
cld
dec
rolb
out
iret
cmp
lcall
lock
bound
fs
dec
lret
mov
cmp
mov
cwtl
jmp
and
mov
cmp
mov
xor
call
cmpsb
cli
dec
rep
sbb
sbb
insb
testb
test
rcll
lea
stos
push
out
xchg
cmc
jo
xor
jno
jbe
mov
sti
dec
pushl
adc
mov
sub
jg
add
fs
jp
jo
ds
push
pop
int
and
ja
dec
xchg
xor
repnz
fstpl
call
ror
lret
push
out
in
xor
push
js
pop
call
fwait
push
out
es
sbb
imul
call
lcall
pop
mov
sub
call
dec
or
and
incl
jnp
jle
jbe
jne
stos
fisttpl
and
xor
sub
sti
mov
js
hlt
je
xchg
icebp
ds
push
jecxz
mov
sub
push
xor
out
jbe
inc
leave
mov
cmp
divl
push
imul
inc
cld
aaa
lret
les
fcomip
mov
outsl
fdivr
jg
push
fsubrs
test
jmp
mov
cmp
mov
pop
addl
lea
hlt
bnd
push
push
mov
sarb
push
mov
ja
lods
mov
enter
push
int3
cli
repz
int3
adc
sub
push
ror
rcl
pusha
test
cmpsl
pop
ret
ljmp
shll
daa
add
lock
movsl
leave
jns
in
inc
xlat
decb
cmc
inc
call
inc
add
xor
test
sti
inc
scas
sub
sbb
adc
sbb
dec
ljmp
xor
cs
arpl
lods
std
mov
pop
inc
pop
fs
mov
test
lods
jl
shl
into
or
mov
mov
pop
or
add
jg
inc
pop
stc
fwait
loop
call
mov
mov
sbb
loope
sarb
rolb
mov
mov
decl
mov
fdiv
dec
fidivrs
lea
mov
inc
cld
lods
rcrb
add
mov
xchg
and
xchg
and
mov
jmp
adc
ret
add
outsb
xchg
push
adc
popf
sub
jnp
or
dec
and
xor
js
mov
jns
dec
scas
jmp
nop
and
mov
aaa
inc
iret
or
decl
loope
mov
fmuls
faddl
dec
test
imul
rcrb
cmp
xchg
mov
mov
fadd
bound
adc
push
sub
mov
push
push
lds
aas
sub
mov
dec
xor
ja
in
adcl
xlat
dec
or
jg
dec
jp
fiadds
xor
in
dec
ljmp
cwtl
cs
jne
cmp
add
jo
xchg
mov
mov
rcrb
lea
or
add
xchg
lods
add
pop
jne
mov
sbb
gs
dec
shlb
jmp
push
jnp
dec
dec
rorl
xchg
xchg
es
xor
mov
add
push
jg
jecxz
loope
mov
std
int3
rorl
hlt
mov
xchg
mov
and
call
jmp
cmp
inc
mov
mov
cmp
lock
scas
xchg
jmp
mov
nop
mov
push
stos
pop
cmpb
cld
ss
pop
aaa
xor
lcall
jb
roll
in
push
pusha
mov
std
jge
mov
ret
push
push
inc
test
nop
fistl
lods
je
cmp
mov
pop
mov
or
repz
mov
popf
out
lcall
inc
scas
add
xor
addr16
int
xlat
push
call
arpl
add
ds
inc
dec
jne
add
adc
add
and
dec
and
and
pushl
ja
or
into
insb
nop
xor
sbb
inc
xor
push
adc
mov
rep
nop
lahf
sbb
push
pop
jnp
jmp
pop
lock
decl
xchg
push
or
jmp
cmp
addl
push
movsb
mov
jmp
decb
or
dec
pop
xor
out
push
movsb
add
test
adc
jmp
aad
xchg
enter
lahf
mov
insl
fidivrs
add
inc
cmpsb
jl
fs
ljmp
pop
les
loop
cwtl
sbb
jg
subl
sbbb
sbb
std
or
cmpb
xor
cli
xchg
cli
imul
adcl
icebp
dec
dec
pop
in
inc
or
popa
outsl
hlt
fs
mov
adc
loop
mov
sbb
int3
xor
hlt
mov
or
cmc
sbb
lcall
aam
stos
enter
std
push
imul
or
repz
ss
push
cmp
xchg
fs
insb
incl
cld
jmp
fdivrs
test
jg
mov
push
es
loopne
ljmp
mov
aam
xchg
data16
xor
xchg
jmp
mov
outsl
pushf
xor
pop
sbb
int
jl
les
aad
nop
insb
xchg
rclb
inc
aas
lahf
lcall
xchg
inc
fsubrl
std
insb
mov
test
mov
test
xchg
pushl
sarb
adc
jmp
lods
pop
sub
mov
bound
mov
jo
outsl
push
test
clc
sub
mov
xchg
in
add
mov
in
add
cs
inc
pop
sbbl
push
aam
adc
mov
add
or
lods
sub
sbb
shrl
cli
ljmp
push
jo
ja
xchg
leave
rolb
xchg
sub
mov
scas
cli
ja
pop
jno
fldcw
nop
pop
js
fdivr
push
sarb
in
std
mov
lcall
mov
and
mov
insb
insb
jb
dec
mov
cmp
and
testb
call
mov
jecxz
or
repz
pop
call
dec
je
popf
adc
mov
sbb
pop
loopne
mov
scas
data16
lds
jg
mov
and
jp
les
in
ret
mov
fs
lcall
and
repz
outsl
mov
lcall
nop
mov
loop
repnz
paddusw
outsl
andb
dec
enter
xor
mov
cld
je
mov
dec
ljmp
movsb
mov
jne
sub
mov
int3
mov
inc
enter
ss
stc
fistpl
ret
or
movsl
popa
xchg
and
jnp
pop
fsubp
xchg
lcall
mov
and
std
jmp
sbb
jb
cli
ret
movsl
stos
ljmp
xor
call
ficoml
lods
inc
movsl
mov
adc
add
mov
aas
sbb
rorl
jecxz
or
xchg
xor
lods
cmc
sub
mov
punpckhbw
xchg
adc
add
mov
sub
jbe
imul
lcall
push
push
push
cmp
rclb
push
call
jle
divb
jg
or
sahf
xor
xadd
pop
cmc
jmp
push
push
mov
push
popf
repnz
sbb
sub
xchg
dec
or
rcrl
iret
or
adc
aam
enter
dec
ljmp
jp
out
es
sbb
mov
cmp
stos
jp
cmp
popf
xchg
call
gs
jl
mov
dec
mov
icebp
data16
or
out
xor
mov
sar
stos
sbb
arpl
jg
xchg
sbb
sar
pop
cmc
push
cmc
xchg
add
jne
xor
cmp
xchg
xor
xchg
mov
outsb
push
inc
imul
pop
push
dec
mov
in
or
inc
fcom
call
lret
mov
js
inc
in
push
test
outsb
int
jl
dec
mov
out
fdivrl
mov
mov
mov
push
lea
sti
xlat
adc
sub
decl
enter
jo
push
roll
jno
jg
popl
andl
xchg
jb
mov
test
mov
cmpsb
enter
pop
pop
inc
sbb
mov
dec
or
jp
rep
and
pushl
xor
call
mov
push
add
lea
subl
pop
movsb
mov
mov
jg
cli
xchg
push
mov
and
jb
jnp
test
ss
sub
js
jbe
jge
inc
call
out
cltd
pop
mov
jecxz
mov
push
push
mov
mov
hlt
cmp
xlat
mov
rcl
bound
das
cmpsb
gs
cmp
push
or
push
sbb
call
jo
sbb
xor
mov
cmp
out
pop
mov
push
xchg
sub
mov
shrb
movsl
outsb
dec
aas
cmpsl
ja
xor
mov
adc
incl
jno
jge
call
in
jge
xchg
je
mov
sub
pop
mov
inc
js
push
add
jmp
or
and
iret
imul
das
in
pushf
jae
or
push
repnz
nop
push
movsb
mov
jae
dec
jge
jge
mov
clc
jecxz
ljmp
or
cmc
stos
leave
dec
xchg
cmp
fildl
int
rcr
add
popf
and
pushl
mov
xchg
mov
in
out
cmpsl
clc
pushf
xlat
cwtl
adc
inc
gs
call
icebp
fistps
mov
xlat
scas
xchg
adc
call
or
or
aaa
adc
mov
mov
bound
fcmovnbe
dec
out
aam
cmpsb
lcall
and
movsb
xchg
dec
push
and
fdivp
sub
jg
out
fdivl
lahf
loop
mov
ljmp
je
popf
dec
mov
test
pop
inc
rcr
in
push
jg
lds
mov
push
cmc
mov
lods
jecxz
ret
mov
mov
arpl
call
imul
data16
mov
adc
mov
js
add
mov
ljmp
fwait
test
or
adc
lret
fs
jns
daa
int3
jno
out
mov
decl
push
test
jmp
nop
or
out
cmc
bound
jp
ret
fidivrs
addl
sbb
cmpsl
and
sub
mov
jl
xchg
jbe
and
fmuls
data16
ljmp
cmpb
inc
push
xor
lret
xor
inc
loopne
fdivr
pushl
stos
lea
jecxz
outsl
inc
test
jmp
xchg
lret
xlat
imulb
inc
pop
cmc
fisttps
sub
call
mov
sar
stos
jmp
adc
ljmp
addl
dec
adc
mov
cmp
les
pop
in
ds
push
loope
decb
jmp
push
lcall
xor
decl
xor
insb
lea
bound
xchg
in
pop
pop
pop
mov
sar
pop
push
ds
aas
inc
movsb
push
mov
mov
call
cmpsb
hlt
ja
lods
xchg
cmp
xchg
push
scas
loop
ljmp
jmp
and
mov
xor
add
int3
fistl
int3
pop
stc
ljmp
pushl
insl
push
into
orb
xor
popf
call
xchg
sti
xor
mov
mov
add
jg
int
pusha
dec
jmp
mov
jle
cli
and
ret
xchg
sub
ficomps
call
dec
mov
push
inc
push
add
inc
sbb
je
xor
in
out
fdivr
decl
dec
mov
into
jmp
enter
decb
test
ror
dec
jbe
inc
adc
jp
jg
test
inc
es
jae
std
cli
jb
insb
out
std
xchg
subb
xchg
xchg
stc
xchg
adc
aas
mov
inc
mov
adc
add
mov
adc
insb
jecxz
hlt
mov
mov
dec
or
int3
xor
and
cmp
scas
aas
dec
add
out
mov
jb
es
sarb
cli
jnp
or
and
mov
shrl
or
rol
and
decl
pop
je
add
jb
nop
daa
aam
xor
pop
sbb
sub
inc
sarl
inc
in
out
mov
mov
test
pop
xchg
push
ljmp
mov
mov
dec
rorb
sub
mov
lock
inc
lret
leave
jl
cmp
divb
dec
and
scas
pop
or
push
jb
je
jmp
inc
bound
aaa
mov
jns
ret
cltd
jg
roll
jb
cld
call
cmp
jne
repz
mov
push
insl
arpl
xchg
popf
gs
jg
icebp
xchg
test
clc
mov
add
paddusw
and
pop
icebp
inc
push
sar
xor
test
je
adc
enter
mov
push
pop
cvtps2pd
cmp
sbb
jmp
aaa
sbb
lcall
test
andb
out
dec
adc
fadds
mov
mov
mov
jge
incl
push
cmp
jl
xchg
xor
xchg
mov
pop
rorl
aas
outsl
jae
mov
lcall
test
movsb
add
mov
mov
orl
testb
inc
cmp
std
mov
pop
aas
outsb
sbb
sbb
xchg
dec
cmp
out
lret
mov
jle
invd
fnsave
pop
adcl
pushl
outsl
xchg
repz
mov
adc
pop
sbb
push
cs
mov
jg
pusha
cld
addr16
mov
push
test
push
ret
xchg
aad
fisubrl
rolb
cld
pop
lock
push
adc
fbld
rolb
sub
out
mov
or
insb
data16
out
jmp
in
mov
inc
in
ss
xor
mov
outsl
add
inc
clc
pop
ljmp
jmp
dec
insl
add
jo
bound
xchg
lret
dec
inc
das
nop
mov
mov
push
test
mov
idivb
inc
popa
pop
out
mov
xor
in
cmp
cmpsb
fsubl
push
push
rcll
adc
xor
pop
enter
jo
inc
je
mov
push
xor
testl
pusha
mov
scas
cmpsl
sarl
sbb
hlt
in
shrl
dec
xchg
mov
push
int
lcall
xor
scas
mov
mov
enter
lahf
in
cmp
mov
mov
jb
jmp
imul
shll
add
fldt
add
xor
testb
xor
mov
lcall
adcl
pusha
mov
divl
enter
xor
dec
xlat
rorb
fstl
xor
xchg
fbstp
cmp
aad
mov
imul
add
call
std
insb
or
leave
icebp
out
and
add
divb
sub
cmp
decl
repz
pop
sbb
mulb
mov
cmp
div
mov
scas
xchg
jmp
xchg
lcall
pop
push
jb
test
mov
decl
adc
es
push
fidivrs
stos
push
jle
xlat
imul
push
fsubrs
and
sub
mov
iret
scas
roll
bound
fwait
mov
cld
xlat
stos
mov
mov
cld
mov
and
mov
pop
ljmp
push
rcrl
inc
and
mov
lret
push
addb
mov
imul
xchg
xchg
call
out
gs
or
dec
push
flds
push
and
in
push
dec
outsl
push
aad
pushl
dec
sar
sbb
sbb
xlat
push
push
test
sub
pop
hlt
incl
test
popf
scas
jle
mov
mov
jge
inc
cmc
push
mov
pushl
pop
add
leave
add
mov
mov
push
xorl
insl
lret
jmp
push
jl
fcompl
imul
mov
pop
out
adc
and
call
popf
sub
cld
mov
adc
jno
sub
pusha
xchg
jns
push
and
lock
std
adc
mov
jg
lods
add
repz
imul
and
xchg
incl
jo
mov
es
and
pop
mov
cmp
sub
push
adc
xchg
popf
or
decl
mov
std
lock
es
xor
movsb
sub
cmp
cmp
inc
test
filds
jo
dec
jae
jno
into
outsb
mov
push
sahf
xorb
imul
adc
hlt
call
cli
sub
outsb
enter
xlat
sbb
dec
add
mov
sbb
and
cmpsl
jmp
dec
cmp
add
ljmp
push
push
sbb
ds
mov
sahf
mov
push
jle
out
xor
call
mov
shll
push
sbb
adc
mov
icebp
das
inc
lods
xchg
mov
sub
dec
push
lcall
push
xlat
gs
cmp
push
je
mov
xor
fildll
iret
leave
sbb
fiaddl
xchg
insl
test
loop
jg
ljmp
rclb
and
mov
les
jne
inc
xchg
fnstsw
push
or
lcall
xchg
xor
jmp
xchg
xchg
inc
icebp
lods
in
inc
xor
cmc
push
mov
inc
mov
decl
add
lock
test
sbb
or
xor
bound
mov
sub
mov
fisttps
sbb
inc
inc
call
outsb
lret
aaa
mov
xor
inc
jo
cmpsb
or
mov
idiv
ljmp
adc
fisttpl
fildl
or
pop
shll
std
fsub
pavgw
lock
clc
in
pushf
sahf
arpl
pop
mov
icebp
xlat
jp
repnz
cli
lods
mov
adcl
add
adc
cli
jmp
add
and
out
leave
jl
das
mov
adc
mov
inc
enter
movsl
sub
mov
aaa
stos
std
sbb
cmp
mov
incl
pop
jecxz
xchg
std
aas
cmp
out
insl
adc
shll
mov
ljmp
cmp
cs
and
adc
sbb
jg
lea
fstps
sub
cwtl
enter
and
cld
or
push
mov
nop
or
ret
cmp
and
or
or
pop
pusha
aaa
xchg
jmp
adc
mov
push
in
sti
pop
loopne
inc
stos
dec
test
mov
aam
sub
jb
and
mov
push
dec
sub
jge
push
mov
repnz
incl
clc
adc
sub
in
clc
inc
mov
hlt
lods
mov
pushl
lods
and
loopne
push
cli
movsb
or
adc
daa
push
push
jg
cmp
das
xor
xor
cli
jmp
orl
or
xchg
mov
int3
cmp
gs
dec
aad
fwait
shl
hlt
in
sub
mov
bound
shrb
mov
push
sub
cmp
into
imul
cli
push
mulb
jne
sub
arpl
mov
cmp
inc
sbb
movsl
pushl
lret
add
fsubrp
jnp
pop
sub
sub
sub
inc
mov
sbb
mov
sti
push
icebp
cmp
lahf
pop
fisubrl
xchg
andb
dec
dec
lea
fwait
or
dec
xor
add
pop
mov
faddl
add
pushl
mov
xor
das
outsl
mov
stos
fdivp
jg
mov
in
xchg
mov
adc
or
cld
fs
ss
jl
cltd
or
gs
imul
leave
adc
sbb
sbb
into
insl
jmp
add
push
cmpsb
or
xor
adc
jle
mov
insb
add
inc
adc
cmc
adc
and
das
lds
movsl
jbe
sbb
loope
cwtl
sub
icebp
inc
mov
ret
xchg
iret
fstpt
push
pushl
cs
lahf
int
add
mov
movb
scas
mov
jg
mov
jbe
sub
sbb
in
fst
mov
stos
or
fs
mov
aam
pop
call
add
mov
lret
sub
lods
mov
sub
pop
decl
jbe
mov
xchg
lea
sbb
or
fcomip
call
rorb
pop
xor
add
pop
aad
mov
cmp
lds
jae
sar
push
cmpsl
mov
inc
movsb
aam
lret
or
mov
dec
add
dec
mov
lahf
inc
rcrb
mov
xchg
repnz
sub
das
sub
ret
stc
decl
loopne
jmp
adc
add
mov
jle
xchg
xchg
movsb
imul
jecxz
push
mov
inc
jb
cld
and
push
insl
xchg
sti
call
fidivl
mov
outsb
inc
push
xchg
ja
cld
push
mov
ret
fnstcw
jno
cwtl
push
lret
popf
repz
or
pushl
or
out
cmp
js
insb
pop
push
adc
mov
push
mov
dec
incl
test
insl
lcall
iret
mov
pusha
pop
fsubr
dec
ret
repnz
cmp
lret
push
mov
mov
leave
es
lcall
stos
popa
xor
ja
xchg
lea
call
mov
pop
lods
mov
dec
insb
and
mov
mov
nop
outsl
bound
sar
scas
mov
popa
shrb
repz
data16
cmpsb
ss
xchg
dec
mov
dec
cmp
mov
cwtl
inc
dec
push
lods
fnstenv
mov
mov
dec
inc
pop
dec
repnz
cmovp
incl
aad
cmpsl
sbb
dec
mov
adc
mul
cmp
push
mov
mov
rolb
and
mov
xchg
or
pop
aad
notb
aas
lock
jmp
inc
ds
test
loopne
push
jmp
cld
mov
jl
mov
cmpsb
inc
mov
inc
or
cmp
out
xor
fistps
in
mov
jb
aas
or
push
cs
sar
ljmp
loop
or
push
outsl
aam
loope
pop
sub
enter
sbb
lods
ljmp
clc
jno,pn
or
popa
or
push
data16
punpckhwd
and
adc
call
dec
dec
imul
sub
loope
incl
out
sti
cmpsb
or
sub
arpl
popa
jno
adc
int3
xor
mov
or
mov
mov
rorb
lret
cli
mov
mov
mov
xchg
sub
push
mov
cmp
lods
sbb
push
sbb
adc
mov
sbb
or
daa
dec
add
dec
cmp
xchg
adc
fsubrs
in
xor
fdiv
lcall
inc
leave
int
or
cmpsb
imul
shll
dec
or
adc
call
mov
mov
hlt
jle
out
inc
rorb
xchg
or
cmp
jns
cmpsl
fs
push
shll
mov
mov
inc
xor
pushl
and
cld
jl
out
mov
loop
test
or
out
movsl
jmp
daa
and
push
pop
push
fs
mov
jg
xor
gs
xor
inc
orl
push
or
push
sub
mov
mov
incl
les
icebp
fistpl
push
sub
xchg
int3
pop
sub
mov
cmc
xlat
inc
xchg
negb
mov
add
push
icebp
jmp
mov
or
mov
lcall
movsb
fsubs
sbb
push
adc
push
ljmp
jecxz
shlb
lock
cmp
out
call
fcomip
mov
cmp
cld
mov
xchg
mov
sbb
ljmp
popa
mov
pop
inc
sub
ffreep
cmp
jecxz
daa
adc
push
xor
fidivrs
jo
pop
sub
jae
bound
inc
sar
mov
orl
jb
je
dec
add
pushl
sbb
push
cmp
ljmp
mov
inc
add
push
xchg
and
hlt
push
jo
subl
aad
lds
mov
cmp
loopne
int
cmp
lret
sub
fsubl
adc
sub
pop
sub
push
push
out
cmc
pusha
dec
jbe
mov
jp
mov
std
into
push
and
xor
inc
jl
mov
jl
pushl
lret
subb
lds
data16
xchg
and
hlt
lods
inc
sbb
sbbl
jns
incl
adc
xor
sarb
cmp
pop
out
push
lods
lcall
dec
inc
xor
lock
xchg
xor
jo
adc
mov
pop
movsl
cmp
or
movsb
lock
xchg
jnp
addr16
mov
inc
pop
push
push
sti
pop
and
ljmp
cmp
xchg
sub
xchg
test
sbb
fwait
xor
pushl
jae
lcall
mov
sbb
inc
pop
mov
push
mov
sub
rcr
jo
xor
pushl
or
popa
lock
mov
cmpsb
std
addb
out
mov
cmpsl
leave
push
add
dec
lods
jle
xchg
and
outsl
sbb
mov
movsb
xlat
dec
mov
cs
xor
jp
loope
div
jno
lods
jo
ret
popf
push
decb
sub
sub
dec
mov
decl
jno
mov
pop
daa
mov
sbb
adc
xor
out
xor
ljmp
push
jp
mov
and
push
sub
fidivrs
addr16
pop
push
pop
pusha
lahf
jns
push
out
clc
fdiv
int
pop
repnz
or
dec
xchg
movsb
mov
jmp
xor
decl
or
cld
jge
jnp
lods
push
jae
mov
imul
jb
pop
je
pusha
push
jge
push
leave
or
push
in
cmp
mov
dec
mov
aaa
pop
mov
sbb
testl
dec
adc
jecxz
call
jae
mov
or
aaa
lds
pushl
pop
aaa
mov
mov
aas
add
out
aad
sub
jmp
add
arpl
jmp
cmp
int
shr
aaa
pop
mov
xchg
mov
repz
push
repz
lods
mov
jne
sub
popa
test
jb
pop
lcall
loopne
movsb
xchg
jl
ud0
call
lock
lahf
aas
adc
mov
add
repz
sbb
jo
mov
sbb
jle
rorb
shlb
bound
pop
and
lcall
sti
mov
xor
jo
ja
or
push
mov
xor
shrl
mov
shrb
sub
shr
enter
pop
mov
push
push
jmp
int
cmpsb
xor
pop
out
pushf
jo
and
mov
dec
mov
stc
fwait
cwtl
dec
movsb
ja
setp
ret
fistl
mov
add
adcl
incl
shrb
lret
stos
rclb
enter
scas
mov
xchg
mov
jl
xor
mov
out
jo
in
ljmp
xor
or
pop
imul
arpl
sbb
mov
pop
ja
std
dec
icebp
gs
call
dec
sbb
mov
into
push
pop
add
fs
les
mov
lcall
sub
and
jb
stc
es
enter
xchg
inc
popa
pop
outsb
fsubrl
push
into
push
out
cli
xor
jg
xchg
sub
cmp
lea
xorl
jg
jp
jne
mov
dec
jp
xor
xchg
or
dec
in
adcl
cmpsl
jb
dec
jb
xchg
mov
pop
ds
and
lea
push
adc
sahf
jnp
jns
adc
fwait
stc
outsb
call
loopne
movsb
hlt
inc
push
inc
mov
cmp
test
flds
jmp
push
into
pusha
nop
fs
xchg
mov
xor
cwtl
xor
call
dec
mov
loope
popl
test
mov
iret
jo
aad
jg
in
jecxz
jae
jmp
jmp
pop
jne
inc
imul
outsb
subb
sar
jmp
mov
stc
frstor
xchg
dec
jns
pop
add
sub
fcoml
movsl
jo
dec
cld
fldenv
or
fadd
pop
rcll
test
jg
scas
addr16
pop
xor
lret
xor
push
insb
cmp
jg
insb
adcl
imul
shr
jmp
jmp
popa
adc
shrl
cmp
mov
mov
in
cmp
lahf
dec
cmp
ret
mov
lret
cmc
lcall
ret
fwait
jmp
xlat
mov
movsb
push
jge
inc
jne
add
fnsave
mov
cwtl
mull
std
mov
or
lcall
fstpl
popa
pop
inc
mov
and
push
mov
pop
xor
cwtl
jl
xor
incl
mulb
sub
mov
in
cs
pop
pop
push
inc
adc
sbb
sarl
or
sbb
aaa
xchg
cld
xor
mov
pop
in
xchg
arpl
dec
mov
imul
jnp
pop
rcrb
inc
loope
dec
inc
adc
pop
mov
push
jg
push
sub
push
out
dec
lret
add
pushl
add
fmul
adc
and
stos
nop
stc
pop
adc
decl
out
in
aam
or
pop
cmp
vmwrite
xchg
or
gs
decl
inc
fnstsw
out
sub
fisubs
insb
fcomip
jge
sbb
sub
decl
das
adc
xchg
out
push
pop
xchg
std
lret
jo
sbbl
cmp
push
ljmp
sub
jmp
es
push
dec
subl
push
js
or
adc
in
ret
mov
cmpsl
lock
mov
push
aad
sub
icebp
repz
mov
jae
sub
js
imul
and
fs
push
pushl
loope
and
out
mov
or
sub
pop
jg
ljmp
or
fucomi
adc
jno
jl
icebp
cwtl
and
mov
clc
jmp
dec
aam
pushf
pop
xor
loope
mov
loop
push
call
and
cmp
cmp
dec
imul
push
sbb
jne
aaa
jl
pushf
test
shrb
inc
loop
add
dec
push
rclb
sbb
pushl
fcomp
xor
pop
mov
or
int
dec
and
push
ret
jecxz
jae
test
lcall
leave
test
jne
ljmp
xlat
fldenv
int
aam
aaa
repz
push
sub
jl
push
mov
or
ljmp
fsts
js
loopne
mov
sub
cmp
xor
xor
jle
decl
sbb
aas
mov
ficoml
and
ss
cld
pop
push
mov
call
push
xor
addr16
sbb
out
xor
mov
mov
cmp
andl
mov
int
lods
fildll
add
decb
mov
xor
orl
test
iret
sbb
movb
sarb
xchg
ret
cli
fstl
push
nop
add
in
call
mov
fmuls
outsb
fwait
mov
aaa
stos
iret
inc
xchg
xor
clc
in
aas
shll
lcall
idivl
add
adc
aaa
adc
jbe
in
cmp
xchg
inc
loope
adc
push
std
mov
push
aas
fcom
aaa
fimuls
clc
arpl
jmp
pop
cmpsb
mov
sub
sbb
inc
mov
jg
cmp
or
out
je
pop
gs
adc
cmpsb
xchg
sbb
jnp
push
daa
cmpsl
mov
push
data16
out
adc
push
je
mov
mov
popa
fnstenv
pusha
pop
repz
movaps
clc
cmp
mov
pop
ds
mov
shlb
imul
pushf
lock
push
mov
mov
stc
cmp
pop
cmp
or
xor
mov
xor
add
pop
icebp
das
outsb
ret
mov
dec
jle
adc
xchg
mov
or
mov
mov
push
popf
or
shrl
jmp
sbb
scas
pop
leave
out
xlat
cld
push
das
mov
out
or
xchg
add
insb
icebp
adc
loopne
fisttpll
sub
in
imul
insb
inc
addr16
cmp
ja
pop
lock
cli
xlat
shlb
ja
ss
outsl
mov
into
xchg
movsl
std
jg
add
cmp
aaa
loope
sahf
mov
and
mov
pushl
loope
std
jle
jecxz
push
lcall
jbe
ss
jae
lea
xor
popf
mov
jmp
in
push
lds
ljmp
cltd
xor
cmp
push
mov
incl
cmp
es
rcrb
push
inc
mov
adcl
out
adc
iret
pushf
stos
imul
pushf
insb
sbb
adc
jnp
leave
or
mov
and
add
inc
pop
push
mov
lcall
inc
decl
push
xchg
add
cmp
loop
mov
cmc
sahf
and
jg
insl
shll
scas
cmp
pop
mov
mov
pop
add
mov
adcl
inc
test
call
std
mov
inc
imulb
cld
xor
jne
push
cmp
pop
in
nop
push
ljmp
sar
push
scas
daa
pop
mov
test
sti
int3
bound
dec
adc
jecxz
mov
dec
dec
jmp
ja
xor
clc
call
cld
aad
nop
jle
movsl
testb
push
pop
cmpsb
sub
cmp
insl
jnp
ljmp
sbb
sbb
pushf
or
out
xor
clc
into
mov
test
pushl
jno
push
ja
stc
inc
jo
sbb
test
and
js
mov
cwtl
mov
mov
and
mov
scas
sub
mov
push
sahf
daa
pop
pop
xchg
mov
adc
xlat
adc
out
push
adc
imulb
xor
xor
or
xor
cltd
jo
mov
push
lcall
out
jns
push
lock
jbe
pop
inc
iret
pop
out
ljmp
mov
lock
pop
out
psraw
loop
inc
divb
into
movsl
or
add
inc
lcall
movsb
adc
mov
mov
lea
lret
mov
dec
loopne
xchg
sub
test
ljmp
cld
imul
xor
aas
mov
hlt
push
cld
js
cmp
inc
jg
pusha
pop
xchg
xor
mov
xor
insb
jb
push
xchg
pop
bound
js
sarl
push
pusha
mov
sbb
testl
ljmp
mov
mov
push
scas
pop
mov
dec
mov
jp
mov
pusha
data16
ljmp
jo
cmc
out
jne
les
pop
jmp
outsb
sar
fadd
outsl
jg
filds
mov
nop
aas
pop
and
sub
xchg
or
decl
popa
mov
lret
xor
pop
xchg
icebp
sub
je
js
lds
mov
xchg
jmp
and
sbb
xchg
pop
sub
lods
xchg
pop
cmp
dec
lret
sbb
out
xchg
std
sub
add
scas
into
xor
pushf
cmp
andl
incb
frstor
hlt
mov
push
adc
dec
xchg
jmp
xor
mov
mov
fldenv
sub
push
mov
pop
ror
mov
mov
pop
and
cmp
fildl
jne
push
or
push
jl
and
fwait
inc
jmp
sbb
push
or
mov
decl
aas
cli
inc
jae
cli
ret
cmp
mov
daa
mov
cltd
push
orb
sub
cmp
iret
inc
mov
in
add
xor
lods
sbb
dec
repz
lcall
subb
jo
pop
shll
push
stos
push
and
repz
bound
and
pop
insb
cmp
jp
mov
mov
mov
cli
cs
fldcw
lock
dec
imul
fisubrl
and
int3
sbb
adcl
jnp
test
jnp
mov
mov
aaa
adc
aas
fisubs
push
cmp
inc
inc
or
xchg
xlat
insb
push
sub
ja
fisubl
fildl
xchg
add
decl
or
mov
js,pt
mov
inc
push
ret
pop
cmp
subb
popf
or
sub
sbb
call
insb
and
and
ficompl
lcall
push
sbb
push
lcall
push
pop
aam
stos
js
mov
pushl
and
mov
jl
popf
test
xchg
sub
movsl
pop
loope
notl
call
and
movsb
jg
gs
fcomip
scas
jge
and
cmp
dec
add
dec
pop
mov
sbb
adc
add
mov
imul
push
paddd
pushl
and
cmpsl
jnp
jg
in
mov
fwait
inc
or
bound
mov
jg
movsl
hlt
cmpsb
cld
pop
insl
mov
arpl
pop
ret
std
jnp
jbe
pushl
popa
pop
inc
push
mov
pop
mov
test
ja
lret
out
mov
call
xchg
dec
dec
in
mov
ret
mov
adcl
lcall
inc
repz
sub
jno,pn
test
rcr
cs
incl
dec
adc
fnstsw
call
es
mov
mov
dec
xchg
js
xor
mov
dec
mov
in
mov
aad
mov
scas
sbb
dec
mov
movsl
jg
ret
negb
shr
loope
jp
sbb
xchg
outsb
dec
inc
inc
pushf
ljmp
sahf
xor
jg
and
loop
mov
sub
push
jg
call
mov
ja
fsubs
out
in
push
add
aam
add
jg
add
fisttpll
and
xorb
stos
into
mov
jecxz
filds
xlat
push
fstl
jp
fwait
mov
push
call
mov
add
cld
incl
and
aas
mov
movsb
xchg
enter
pushf
aam
jmp
in
mov
inc
subb
xor
call
out
dec
adc
scas
push
pop
sub
stos
xor
pop
sti
ret
xor
cmp
aam
jb
lea
sub
fmuls
or
mov
fdivr
jg
pop
pusha
xor
in
sub
xchg
mov
scas
xor
test
ljmp
jbe
lret
and
cmc
fdivl
ret
adc
jbe
xchg
and
adc
sahf
cmp
mov
pop
lods
data16
add
push
sbb
iret
lds
cmc
mov
fiaddl
test
cmpsl
sbbb
jl
sar
xchg
jmp
nop
mov
cmc
fcomip
jne
mov
fsts
dec
fcoms
or
lret
xchg
jmp
sub
add
and
adc
into
inc
clc
jmp
jmp
stos
xchg
test
shlb
push
mov
out
mov
xor
decl
mov
or
mov
sti
jge
pop
mov
decl
xchg
xchg
clc
or
sahf
mov
fcomip
jmp
cmp
mov
lret
imul
fwait
lods
bnd
inc
cmpl
or
and
adc
mov
clc
js
dec
ret
fdivr
lods
xor
pushl
daa
add
mov
and
loop
loope
stos
scas
movsb
sbb
jmp
push
nop
push
mov
sub
data16
push
cld
pop
sub
sbb
xor
jg
mov
jecxz
push
addr16
sbb
stos
andl
xchg
push
add
jmp
insl
pop
inc
jmp
test
add
repnz
sbb
pop
push
pop
daa
or
incl
out
and
roll
mov
mov
popa
dec
testl
mov
rclb
lcall
cmp
test
sbb
dec
subl
addr16
rorb
int3
clc
jmp
push
inc
ss
cmp
insb
pop
lret
inc
xlat
and
cmpsl
pop
dec
jae
dec
das
addl
fidivrl
add
iret
scas
mov
push
inc
in
jne
mov
fmuls
cmp
leave
mov
je
sbb
icebp
mov
cmpsl
sbb
or
call
push
mov
fsubrp
in
add
xchg
mov
das
out
into
pusha
ret
jg
incl
fidivs
fwait
push
adc
xor
sbb
ret
jg
jle
insb
lret
cmp
or
insl
sbb
aam
test
nop
outsb
clc
mov
mov
push
fisubl
xor
mov
or
sbb
test
incl
out
inc
xchg
cwtl
adc
push
adc
push
xor
jno
add
outsl
call
outsb
and
rcrb
js
dec
cmp
loope
popa
outsl
xor
gs
sti
push
add
xor
icebp
jp
mov
jg
fisubl
pop
and
out
and
mov
and
movsb
in
dec
mov
test
fmul
xchg
cmp
sbb
mov
inc
iret
cli
icebp
xchg
mov
inc
bound
xor
mov
pop
fstps
pop
les
or
cmc
push
inc
cli
mov
cmp
pop
sub
push
inc
and
fs
data16
sub
sahf
pop
fldenv
mov
jmp
mov
inc
jl
repz
and
clc
popa
jnp
sub
fisttpll
cli
aaa
cld
ljmp
xchg
or
and
jae
pushf
data16
lahf
pop
mov
fildll
outsl
push
sbb
ss
mov
adc
push
lcall
repz
pushl
cld
mov
xchg
or
cs
lock
push
sbb
mov
call
add
fbstp
in
inc
cwtl
or
aas
testb
insb
sbb
ljmp
dec
xor
adc
clc
in
jno
cmc
insl
loopne
push
std
pop
jmp
jnp
in
stos
add
cmp
pop
xlat
mov
and
dec
std
incl
sub
js
shl
add
push
push
addr16
sub
ljmp
bound
add
dec
add
cli
movsl
lods
and
xor
inc
out
fcmovnb
inc
dec
outsb
add
fnsave
out
add
cmp
sbb
cli
mov
push
call
adc
jl
ljmp
mov
sub
aas
dec
stos
lea
xchg
sarb
aaa
fcmovnbe
jg
imul
xchg
jne
lods
gs
push
push
mov
jge
jae
mov
push
cmp
stos
pop
push
andl
dec
es
jbe
imul
in
xor
repz
sub
push
sub
jmp
cmp
fnstsw
sub
out
push
lock
mov
repnz
jns
enter
test
push
mov
pushf
mov
mov
es
add
pop
divb
jmp
cli
dec
aad
sbb
les
push
xlat
cmp
pop
mov
repz
mov
ljmp
clc
repnz
bound
mov
add
mov
ljmp
divl
in
out
cmc
int
aad
scas
es
xchg
mov
and
mov
out
inc
push
jae
ret
mov
fldt
jne
dec
or
mov
cmp
cmp
adc
push
xchg
mov
push
out
cli
pushl
rep
cwtl
insl
add
lds
sub
xor
jnp
jmp
bound
cltd
scas
or
or
sbb
sub
cwtl
mov
sar
fwait
jb
jecxz
sub
or
dec
mov
jge
dec
jg
jb
mov
sub
cs
lods
arpl
xor
mov
push
incl
cli
mov
pusha
mov
jbe
out
ror
xorb
push
stos
sbb
xlat
mov
mov
sub
xor
out
or
cmp
lcall
into
mov
jg
mov
testb
sbb
sbb
and
cwtl
cld
jecxz
rcrl
lcall
inc
or
sbb
xor
mov
jne
sub
xor
jle
out
cmp
mov
clc
add
push
mov
pop
xor
sar
fnstcw
mov
sub
adc
aad
scas
call
sarb
aad
inc
push
pop
ds
ljmp
rorb
and
mov
mov
hlt
xchg
push
xchg
test
fcomip
jp
inc
pushf
dec
inc
jecxz
jl
movsl
repnz
shrl
pop
mov
int
mov
ljmp
ret
js
cmp
decl
test
into
mov
adc
fsubrs
bnd
jle
loop
outsb
loopne
or
stos
data16
dec
jp
les
lret
les
fidivrs
sub
icebp
mov
inc
shrb
js
jle
sbb
dec
adc
rol
decl
xor
xor
push
les
sbb
sbb
and
xchg
arpl
mov
xchg
insl
dec
scas
mov
sbbl
and
pusha
lods
daa
xor
loopne
pop
cld
pushl
popa
mov
xchg
shlb
clc
call
les
addb
sahf
sahf
adc
ljmp
add
les
lods
pop
cmp
es
pop
ret
sub
adc
jae
insl
mov
fsub
incl
into
pop
mov
out
test
mull
mov
aad
jbe
rclb
dec
subb
push
push
pop
push
test
mov
leave
out
int
lods
cmpsl
push
insb
dec
lcall
mov
lret
ret
cmp
adc
loop
lock
mov
shll
pop
addb
dec
pop
in
jno
iret
adc
mov
ret
jmp
mov
rcrl
and
add
mov
xchg
cmp
sbb
mov
push
int
pop
les
dec
mov
clc
add
cmc
pop
inc
adc
nop
das
cmp
jmp
cmp
mov
mov
pop
xchg
xchg
fs
sub
jmp
pop
mov
cltd
iret
pop
shll
test
rsqrtps
add
pop
iret
inc
fisttpll
push
jg
add
pop
mov
lahf
mov
mov
push
or
fwait
bound
pop
imul
push
and
inc
lods
movl
mov
icebp
cmpsl
lods
mov
push
shll
dec
pushf
jne
cmp
mov
insb
mov
popw
mov
fisubs
scas
lcall
test
in
divl
and
std
hlt
push
or
fisttps
xlat
lcall
and
cmpsl
fs
aam
ja
js
push
cld
decl
je
xor
adc
xchg
cltd
mov
push
ror
incl
push
mov
filds
insl
and
xlat
sahf
aad
pop
push
dec
in
xor
popl
or
incl
jmp
in
testl
and
dec
testl
cmpsb
adc
ja
cli
jmp
fsubl
pop
in
or
fwait
cwtl
push
xchg
loopne
repz
pushl
mov
inc
pop
repz
inc
js
imulb
xchg
loopne
jnp
mov
incl
shl
out
sub
in
mov
adc
and
in
pusha
jmp
jnp
mov
pushf
out
clc
lcall
mov
sti
lret
pop
cmpsb
inc
mov
mov
lds
jp
test
call
lods
andb
aam
cmp
mov
jno
outsl
scas
ljmp
lock
js
sub
popf
into
pop
xor
push
out
mov
dec
loope
call
test
add
lds
xor
decl
xchg
jae
ret
int
lahf
out
out
inc
jns
inc
mov
std
pushf
push
outsl
add
xchg
cmp
xor
adc
cmp
in
lcall
adc
xchg
out
lods
sbb
add
pusha
rorl
clc
lcall
xchg
in
lea
jne
and
inc
out
jne
int
lahf
outsb
add
pop
mov
mov
out
out
lcall
ds
dec
cmp
comiss
dec
ret
aas
lret
aas
stos
insl
call
ljmp
sbb
inc
shl
lcall
mov
clc
xor
xchg
add
mov
dec
ja
rcl
cmp
imul
aas
and
pusha
xor
std
flds
mov
jecxz
flds
or
push
outsb
movsl
push
jbe
inc
cmp
mulb
push
movsl
pop
xorl
iret
jno
lock
call
int3
xchg
sbb
xor
les
mull
data16
pop
hlt
adc
fists
mov
cmpsl
cmp
and
push
push
mov
out
imul
lcall
lcall
test
xchg
insl
std
jbe
mov
adc
fcomip
cmp
push
push
lahf
jae
lret
push
push
lds
mov
cli
decl
and
jmp
and
and
out
sub
addr16
cmp
dec
insl
movsb
idiv
jmp
lret
dec
fisttps
inc
test
mov
fwait
cmc
incl
enter
in
and
sbb
cwtl
ret
sub
xchg
inc
js
rcrl
cmpsb
sbb
add
ds
jnp
iret
int3
cs
sbb
fwait
xlat
sub
mov
lcall
sub
jmp
je
bnd
mov
sbb
cs
xchg
adcl
cmp
das
mov
or
sbb
shll
not
aam
add
or
decl
lcall
nop
and
sahf
dec
jecxz
fisttps
inc
in
jns
insl
sbb
cmpsl
add
hlt
pop
inc
shrb
popf
or
fistps
jae
pop
xor
or
push
mov
sbb
add
lahf
push
sbbl
mov
mov
inc
loope
mov
das
scas
pop
out
xor
dec
dec
sarb
jb
call
fisubrs
pop
adc
xor
pop
fwait
arpl
scas
shlb
jb
inc
inc
sahf
scas
and
lock
stos
ljmp
das
aam
inc
mov
aad
xchg
test
cmpsb
aas
int3
inc
and
aas
daa
push
std
push
push
inc
call
xchg
insl
pop
dec
fstl
push
out
insb
push
cmp
or
and
push
xor
clc
in
xchg
shrl
push
rcl
pop
pop
sub
mov
mov
decl
xor
xchg
movl
out
xchg
in
les
mov
call
adc
aaa
pop
inc
inc
xchg
pop
fnstcw
push
add
inc
xchg
test
lcall
scas
movsb
jne
sbb
cmp
js
add
das
sbb
adc
pushf
lret
cmp
cmp
out
loop
mov
packuswb
cwtl
lahf
enter
jmp
inc
or
ftst
loopne
dec
xchg
push
push
sub
aas
xchg
out
nop
pop
hlt
stos
add
xchg
fwait
adc
pop
aaa
dec
push
je
or
pushl
andb
jg
popa
dec
nop
and
ret
mov
dec
push
leave
xor
inc
push
test
pop
mov
clc
xorl
scas
pop
mov
out
push
ljmp
push
sub
sbb
aas
cld
add
cmpsb
aad
cltd
shll
std
lock
inc
adc
mov
std
pop
or
std
pop
ficoml
jg
jbe
cmc
movsl
add
mov
jo
jne
pop
sub
popf
cmpb
sub
dec
mov
data16
dec
rol
in
dec
or
push
push
mov
dec
sbb
mov
lcall
mov
jmp
cmp
lret
insl
xor
jl
mov
repz
leave
sbb
jg
dec
inc
ljmp
rcrl
jno
mov
outsl
push
pop
imul
call
rcrb
into
fildl
lahf
mov
in
mov
xchg
and
fcom
push
mov
inc
ljmp
aam
xor
ljmp
inc
xchg
pop
scas
pop
rol
dec
jge
out
mov
sbbl
imul
aam
dec
pop
popa
push
ljmp
mov
rcrb
dec
imul
push
adc
insb
scas
lcall
jge
in
mov
stos
out
push
mov
and
fistps
into
jmp
push
incl
or
jp
xor
lock
int
aas
inc
scas
xchg
push
add
jge
jmp
fidivrl
sub
mov
rcrb
aaa
rcrb
add
or
xor
sub
fists
stc
mov
jl
pop
fwait
imul
xchg
sbb
outsb
mov
add
movsb
cwtl
pushl
inc
les
mov
cmpsb
shrl
inc
clc
test
out
cmp
cmp
add
hlt
cwtl
sar
sub
mov
xchg
cmp
jg
repnz
mov
scas
cmpsl
rcrb
in
inc
jle
jecxz
or
cs
add
xchg
std
sbb
fistpl
mov
push
cmp
or
inc
adc
mov
push
js
mov
fstp
lea
test
hlt
or
sub
pop
jge
out
rcrb
inc
push
pushl
cld
pushl
xor
pop
out
test
cmp
mov
aas
and
pop
fcomi
jg
aaa
xchg
xor
jmp
pushl
fimuls
cmp
or
loop
jl
aas
fwait
leave
hlt
mov
lods
icebp
mov
jbe,pn
cmc
jmp
rclb
sub
mov
add
fcomip
outsl
dec
fidivrl
iret
jo
pop
addr16
sub
stc
incb
cmp
dec
loope
mov
mov
ljmp
inc
leave
and
movl
push
and
popf
xor
mov
movsb
mov
push
stos
fcoml
and
test
mov
adc
rcrl
dec
mov
jmp
cmp
mov
shlb
pop
xchg
mov
jo
ror
rcrl
inc
jmp
sub
xchg
test
int
jnp
test
sbb
sub
mov
call
fsubs
imulb
lock
xchg
push
mov
fimuls
mov
insb
movsl
lret
adcl
stc
inc
pop
push
fisttps
out
push
inc
inc
movsb
pop
loop
or
in
push
insb
adc
sub
jp
mov
push
in
mov
fcomip
push
inc
inc
mov
std
sbb
push
out
xor
jmp
jmp
mov
jns
pop
icebp
jmp
xor
add
clc
xor
xchg
insl
xor
data16
xchg
and
mov
les
or
adc
or
ror
push
cmp
mov
dec
jl
inc
lods
faddp
push
dec
jg
mov
inc
and
incl
xchg
jl
lret
lcall
mov
add
dec
arpl
aad
pop
jg
loopne
jle
cmc
popf
dec
lcall
pop
jb
adc
xchg
ffree
ret
jge
or
mov
xchg
test
aaa
inc
into
lea
or
sub
push
hlt
in
into
hlt
ror
dec
xor
push
mov
ljmp
mov
cmp
mov
pop
and
sub
mov
push
jae
ss
jg
cmpsl
lods
pop
sbb
inc
dec
pusha
mov
add
incl
pop
repz
out
repz
js
shrl
add
sbb
mov
ljmp
or
adc
gs
cmp
leave
in
pop
movsl
xrelease
out
inc
add
decl
inc
xor
ds
xor
lcall
or
imul
and
mov
cltd
jns
and
xor
add
cs
fst
mov
inc
leave
cmp
dec
xor
jae
dec
pusha
mov
clc
xchg
es
sbb
mov
and
mov
out
mov
pushf
inc
adc
mov
jmp
xor
pop
cmp
pop
pop
adc
xchg
inc
imul
and
mov
pushl
mull
ret
jne
fstpt
mov
in
jmp
push
mov
lcall
outsl
push
dec
jo
movsl
insb
lret
cmp
and
push
movsl
cmp
xor
dec
pop
cmp
insb
jg
mov
pushl
movsl
data16
addb
mov
imul
inc
mov
and
pop
loope
fcompl
and
push
mov
ljmp
outsb
cld
xchg
fistl
jb
cwtl
xor
subl
sbb
inc
xor
mov
wrmsr
test
jae
and
lcall
js
test
xlat
mov
mov
xor
imul
decl
loope
dec
jecxz
jp
into
cs
sub
mov
out
cli
jg
lret
push
sub
lret
mov
cmpl
rol
push
cmpsb
pop
jecxz
cli
das
sar
xchg
dec
inc
cwtl
pop
mov
sahf
fwait
xor
pusha
insl
fldcw
and
popf
insl
insl
lret
ret
ljmp
neg
xor
sub
test
dec
movsb
dec
psubb
sub
hlt
cmp
mov
add
call
and
push
fsubrs
daa
inc
cmp
in
inc
ljmp
mov
stc
cwtl
pop
jno
nop
arpl
test
and
jb
jns
dec
xlat
push
int
lcall
push
cmp
jne
push
iret
adc
movsb
cmp
les
rclb
arpl
sub
dec
ja
cli
pop
ds
push
jg
fdivr
or
lcall
add
dec
push
cmp
repnz
mov
jg
incl
cmp
mov
call
outsl
push
adc
cmc
ljmp
cmc
adc
arpl
dec
adc
js
lret
pusha
aaa
jg
xchg
ljmp
xchg
call
shll
jmp
lds
imul
pushf
leave
pop
add
cmpsl
nop
lcall
lea
mov
pop
jmp
data16
test
js
insl
push
xor
popf
ret
mov
fisubl
incl
in
iret
mov
cmp
popa
ret
pop
jge
lods
inc
outsl
shll
xor
or
jg
faddl
xor
mov
test
imul
pushl
shrb
push
and
push
inc
mov
dec
mov
xabort
aam
bound
call
movsb
mov
call
sub
or
dec
or
cmp
mov
fisubrs
lds
sub
add
inc
scas
push
notb
mov
jnp
and
adc
in
popf
cmp
outsl
xlat
fstps
jns
iret
test
sbb
mov
cmp
push
pop
int
or
ret
mov
mov
int
je
mov
push
mov
mov
fs
les
mov
xchg
adc
push
aam
xchg
adc
out
push
sarb
jge
rcrb
pop
lret
pop
iret
test
andl
incl
repz
push
sbb
mov
cmp
sar
sbb
xor
add
insb
aam
rcrl
aad
jle
cld
mov
mov
xor
scas
pextrw
jge
xor
cli
in
sbb
call
jb
inc
push
std
pushf
scas
lret
add
loope
mov
lcall
adc
xchg
bound
loopne
sti
sbb
imul
es
inc
xchg
outsl
or
and
and
nop
pop
incl
mov
sub
movsb
mov
fchs
pop
test
or
fcoms
decb
dec
ss
mov
add
mov
adc
outsl
xor
clc
int
jo
cmp
inc
std
xchg
pop
test
pushl
or
push
jb
jecxz
mov
jmp
jo
jae
pusha
sti
pop
icebp
pushl
testb
les
pop
jb
push
jne
or
clc
jle
fdivr
call
in
outsl
pop
test
cli
lret
or
insl
andl
mov
adc
mov
jmp
pushf
push
sar
decl
outsb
or
nop
add
sub
mov
stos
leave
movsb
incl
xor
cmpsl
cli
fsubrs
jmp
mov
ljmp
adc
sub
push
mov
sbbl
lret
insl
shl
mov
cwtl
lds
sbb
movsl
push
repz
sbb
fsub
xchg
rcrb
jmp
adcb
fwait
cwtl
xchg
jl
sub
push
and
in
clc
ljmp
lock
dec
xor
divl
enter
mov
iret
mov
sub
aad
pop
aam
and
arpl
das
jl
cld
sub
cld
decl
jnp
into
pop
jp
push
add
cmp
cs
pop
iret
dec
test
or
mov
andl
adc
hlt
pushl
and
pop
mov
mov
cmp
inc
movsl
xor
out
and
jmp
fimuls
mov
ja
jne
mov
sahf
outsl
imul
mov
test
pop
in
out
dec
xchg
arpl
repz
out
jp
xchg
mov
loope
inc
or
xchg
cltd
sbb
daa
jge
mov
clc
fs
add
bound
aad
shll
ss
lret
xchg
shrb
ljmp
push
inc
fdivs
adc
test
cmp
ljmp
inc
pop
adc
sbb
pop
cmp
int
add
out
push
inc
pop
mov
jb
pop
push
dec
clc
ljmp
xchg
mov
jae
scas
lcall
incl
dec
lds
push
push
jge
cmpsl
negl
loopne
inc
sahf
ljmp
icebp
mov
cwtl
mov
jp
jle
inc
fmull
dec
push
call
adc
adc
jecxz
lock
aam
push
add
inc
aam
aam
cmp
fmulp
es
jp
or
mov
mov
or
sub
clc
mov
pop
sarl
incl
sbb
xchg
sbb
cmp
mov
stos
dec
sub
cmp
enter
les
sub
sbb
std
mov
or
cli
decl
jp
mov
xor
psllq
clc
jmp
negb
inc
adc
loop
pusha
adc
inc
jge
cmc
xor
stos
xchg
decl
mov
sub
mov
ret
push
movsl
test
data16
mov
xchg
shr
dec
insl
ljmp
mov
setne
push
lea
sbb
cwtl
cmpsb
push
into
ret
jg
mov
mov
sti
xor
test
jo
and
xchg
xor
mov
add
fisttps
inc
cmpsb
jge
bound
std
lcall
into
cmp
jae
test
shrb
ljmp
scas
aas
add
jb
std
out
insl
int
stc
sahf
xchg
pop
jl
imul
mov
mov
push
lock
dec
incl
ljmp
popf
loopne
fisttps
push
and
xchg
pop
ljmp
and
push
mov
mov
xlat
arpl
mov
es
mov
pop
or
and
lcall
ret
mov
dec
sbb
add
sbb
add
xlat
mov
xlat
push
rorl
mov
cmp
jbe
hlt
dec
mov
fs
pop
addr16
out
mov
push
adc
into
xchg
rcrl
dec
jp
pop
dec
or
pop
jecxz
aas
or
cmp
jg
dec
adc
push
fidivrl
shll
scas
and
rclb
or
mov
or
pop
and
jns
sbb
jno
and
sbb
push
lcall
lock
je
imulb
xor
in
in
xor
cmp
decl
lock
add
xor
or
sbb
sbb
mov
cwtl
push
scas
xor
inc
mov
dec
jmp
cli
nop
stc
cmp
test
movsl
add
out
jns
fdiv
pushl
adc
mov
cmc
mov
lret
ljmp
sarb
and
and
mov
sub
daa
stc
testl
or
test
adc
faddl
and
adc
call
je
in
cmp
add
sub
or
leave
daa
xchg
stc
lret
ljmp
lock
loopne
insl
push
adc
test
sub
sbb
jb
and
shrb
and
aam
testl
push
lods
push
jne
mov
sbb
jnp
lret
jmp
push
inc
sar
data16
mov
mov
inc
adc
gs
jne
mov
insl
cltd
fstps
mov
cli
rcrl
mov
mov
je
xor
adc
cmpsl
xchg
insl
jge
push
cs
push
addb
popa
mov
push
jmp
push
loop
mov
push
push
xchg
cmp
ds
roll
lods
push
cld
loop
sbb
shrl
xorl
mov
jg
jmp
aad
out
orl
movsb
push
sahf
jnp,pn
and
ljmp
stos
jns
fldenv
push
out
lcall
push
mov
enter
call
cmpsb
push
and
or
xchg
pop
and
aam
lods
mov
xchg
mov
jmp
arpl
mov
xchg
lock
fimuls
mov
nop
xchg
push
cs
shlb
inc
pop
aad
loope
scas
pusha
mov
gs
stos
mov
mov
lcall
jecxz
movsl
dec
inc
add
mov
push
fwait
cld
cmpsb
push
insb
in
push
xor
cmpsl
dec
or
mov
aad
cmp
cmp
aam
sbb
pop
pusha
es
lcall
adc
repnz
dec
fists
push
adc
sub
mov
es
push
or
xchg
dec
xlat
jns
sbb
inc
cld
out
add
cmp
add
popa
xor
adc
pushl
pop
push
adc
loope
out
cmp
je
inc
push
ss
sbb
enter
mov
add
jecxz
add
cmp
add
push
pop
lret
aad
call
shll
rorb
sahf
lea
push
dec
jb
mov
lods
sub
or
lds
jns
sub
int3
pop
lods
outsb
pop
add
int
inc
xchg
dec
push
inc
push
loope
and
or
ror
loopne
pop
icebp
pop
lock
repnz
enter
clc
cmp
ficomps
xchg
jge
inc
sti
mull
aas
out
loopne
jp
cmpsb
sbb
scas
cli
push
pop
in
xor
jmp
or
inc
adc
mov
inc
mov
and
push
mov
enter
push
aam
lods
lock
sbb
int
out
lcall
push
out
jg
dec
addb
xchg
out
push
jne
jmp
inc
mov
incl
mov
cwtl
cmpl
sbbl
xor
cld
mov
jo
into
iret
imul
ds
sub
add
push
les
add
dec
cld
call
test
cmc
ds
fidivrs
sbb
int
ds
pop
xor
sahf
jg
jl
sahf
sub
out
xor
xor
or
xchg
mov
mov
or
call
test
xor
test
jnp
imul
lds
adc
rolb
std
xchg
outsb
mov
jp
decb
dec
and
dec
lea
popa
rcl
jno
adc
jg
decl
fbstp
cmp
es
mov
or
cld
lret
clc
xor
mov
enter
mov
and
shlb
int
stos
or
add
test
dec
xlat
ds
mov
xchg
adc
or
filds
mov
stc
push
popf
push
outsl
dec
jb
cld
fildll
jg
ja
xor
loopne
lock
outsb
cmp
adc
cmp
push
insb
mov
pop
add
cmp
jbe
fsubl
push
icebp
call
sti
jg
pop
stc
lahf
rcr
push
and
leave
out
scas
push
call
cmpsb
mov
xchg
ljmp
and
mov
inc
mov
jle
addb
inc
int3
xchg
das
jg
xchg
inc
mov
xor
and
jg
test
pop
mov
cmp
mov
decl
clc
loop
xchg
nop
ds
gs
mov
and
call
jnp
das
cltd
jcxz
roll
cmp
fs
bnd
push
outsl
jecxz
ljmp
inc
jns
mov
fs
sbb
scas
loopne
lock
out
adc
xchg
cmpsl
cwtl
into
pusha
xlat
inc
loope
push
jmp
icebp
pop
xchg
fcomps
sahf
dec
inc
lret
iret
insb
jmp
mov
push
popf
pop
shrb
leave
rolb
mov
jg
dec
add
popf
ljmp
mov
inc
pop
outsb
xlat
imul
jo
das
decl
rcll
push
enter
les
mov
jle
rcll
inc
pop
push
push
mov
sar
call
mov
sbb
cmp
icebp
mov
lcall
ljmp
in
mov
xor
jle
xchg
iret
fisubrl
jns
push
lcall
sub
int
add
xor
lahf
iret
lods
and
mov
jmp
fmuls
clc
imul
sub
jne
xchg
jo
stc
inc
int3
dec
cmp
mov
pushl
loope
mov
insb
or
mov
outsl
and
sbb
mov
jmp
mov
or
xchg
into
shlb
xchg
xor
fs
call
sbb
addl
jmp
mov
inc
icebp
mov
dec
out
imul
mov
shlb
sbb
incl
lahf
push
iret
xchg
int
push
shrl
into
cmp
and
jg
mov
cmpsb
push
or
cmpsl
mov
and
jb
inc
pop
cltd
iret
pop
fwait
or
push
notl
cmc
dec
xor
mov
loopne
mov
aam
std
push
ss
mov
add
push
mov
pushl
repnz
pop
xchg
mov
aad
xchg
aas
dec
mov
fisttpll
aaa
xchg
mov
inc
shr
imulb
shl
push
or
incl
xlat
lds
int
mov
repz
dec
imul
lods
pop
leave
push
int3
icebp
imul
ret
test
stos
nop
sub
adc
dec
lock
jmp
les
push
outsl
lret
shl
mov
mov
call
lods
xchg
lret
das
sub
xchg
addb
pop
daa
jb
jb
lods
mov
push
fmul
das
jge
jbe
aam
cmp
scas
cmc
dec
mov
pusha
inc
mov
lret
push
or
lcall
adc
cmpsb
insl
data16
sti
nop
mov
pop
shl
add
repnz
sbb
iret
ljmp
add
stos
jg
ffreep
xor
dec
lods
repz
test
ret
xchg
pop
lods
pop
movsl
cmp
in
loopne
call
adc
push
ljmp
mov
adc
int
xor
xchg
lock
call
inc
cmp
bound
dec
cwtl
pop
ss
nop
es
pop
sub
imul
inc
lahf
gs
add
jmp
push
aad
lds
ror
push
dec
outsb
push
aad
scas
fisttpl
rcr
sbb
and
divl
lcall
loope
sub
mov
popa
xchg
cmp
loopne
jmp
or
ret
lea
sbb
ljmp
out
movsl
push
dec
adc
sbb
sub
cmpsl
mov
inc
pushf
clc
pop
in
jge
filds
call
mov
xchg
in
lret
pop
push
xchg
adc
ja
cmpb
scas
jle
jmp
push
shl
leave
xor
int3
or
movsl
aas
fiadds
mov
mov
mov
mov
lret
dec
cmpl
xchg
pop
lcall
push
fidivl
clc
lods
mov
std
mov
out
adcl
sub
call
repnz
pop
repnz
xor
xlat
push
jnp
xor
xor
sub
fisttpll
sub
lret
hlt
hlt
adc
std
dec
adc
and
call
add
fcmove
cwtl
outsb
js
cli
pusha
jo
lahf
sub
sbb
cmc
mov
cmpl
int
dec
psadbw
lret
pop
xor
push
or
fstpt
xor
adc
clc
ljmp
cli
imul
push
arpl
xor
cmp
push
sbb
jo
sub
pop
or
decl
cld
shl
clc
sbb
int3
adc
dec
mov
fists
jmp
pop
pop
clc
pop
test
jg
aaa
das
out
sbb
mov
das
aam
imul
push
imul
pop
xor
ss
cmpsl
push
jp
js
add
xor
pop
decl
sub
inc
and
movsl
jl
js
xor
aaa
pop
cli
mov
push
mov
sub
mov
cmpsb
pushl
mov
outsb
fsubrl
jecxz
inc
sarl
out
in
cmpsl
sub
fimuls
lret
jg
insl
cld
add
mov
add
sbb
xchg
mov
ljmp
jecxz
mov
pop
push
jb
mov
int
adc
or
push
push
imul
or
ds
inc
insw
int
aaa
add
mov
jg
adc
sub
das
clc
adc
push
int
mov
jp
cmp
fcomp
cmp
test
cmp
pushl
push
clc
adc
test
fisttpll
out
cmp
pushf
and
mov
mov
out
subb
iret
jge
shlb
lret
aam
mov
jbe
sub
stos
shlb
mov
jbe
mov
aaa
fistl
enter
mov
pop
and
cli
int
fwait
sub
jmp
push
mov
and
push
fiaddl
call
jne,pt
addr16
mov
or
sbb
mov
pushl
sub
pop
push
pop
or
cld
js
cmpsb
je
inc
xchg
cmp
lret
test
xchg
cmp
lret
lcall
hlt
xchg
lcall
imul
jo
test
mov
fbstp
add
decl
hlt
stos
mov
loopne
cmp
pusha
and
enter
xor
out
insb
clc
sub
mov
loop
mov
sbb
mov
jb
rorb
std
jg
mov
dec
push
or
jno
add
mov
cmp
imul
in
sbb
jg
mov
adc
adc
les
fistps
cmp
lcall
cli
sti
sarb
inc
adc
jno
andl
jle
inc
jmp
inc
jge
lcall
adc
notl
xchg
icebp
adc
popa
loope,pn
cmp
push
adc
popf
fsubrp
push
push
mov
jmp
nop
mov
dec
push
sbb
fs
mov
pop
and
inc
dec
mov
ficomps
mov
test
or
add
mov
call
dec
imul
mov
jmp
test
pop
mov
push
fistpl
shlb
add
push
fs
clc
outsl
xchg
lret
call
inc
or
bound
mov
adc
xchg
push
imul
jmp
lods
push
dec
or
repnz
fnstcw
dec
clc
jmp
xchg
adc
outsl
push
cmp
rolb
xchg
sub
aam
jmp
fisttps
cld
pop
int3
xchg
shrl
pop
aad
mov
xchg
mov
mov
jg
and
pop
into
or
stos
cltd
fnstsw
push
lods
add
push
or
sub
lods
fwait
movsb
outsb
mov
xchg
incl
jb
ss
loope
mov
popf
inc
inc
push
mov
addl
jmp
mov
add
outsb
lds
gs
aad
out
mov
pop
sahf
xchg
or
adc
stc
ljmp
mov
loope
dec
insb
negb
xchg
pop
lds
mov
inc
cld
mov
inc
push
mov
push
rcl
pavgb
mov
sub
sbb
dec
push
clc
xor
sbb
push
movsl
lods
xchg
mov
inc
push
push
and
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
push
push
inc
inc
mov
dec
adc
lods
cli
fbld
lds
in
inc
fwait
mov
xor
fisubrs
insl
lahf
call
add
in
xor
fisubl
test
icebp
loopne
mov
call
mov
mov
test
sbb
sbb
loope
int3
popa
cli
incl
mov
in
xchg
inc
call
cmpsl
cmpsb
movsl
inc
sbb
outsl
sahf
fs
sbb
adc
data16
incl
sarb
sbbb
orb
fnsave
pop
mov
dec
fimull
fdivrp
int3
xchg
mov
into
cmp
stos
or
jae
lock
push
add
cmc
pop
push
xchg
lcall
sbb
fwait
insb
jp
inc
cld
popa
flds
inc
add
ret
pop
or
repz
jmp
call
mov
mov
decb
add
cmc
or
decl
test
push
cmpsl
dec
jnp
cmp
and
gs
lret
push
or
decl
mov
test
clc
and
sbb
or
lods
mov
lahf
gs
add
leave
loope
loope
inc
std
jne
in
sar
out
xor
sub
and
push
mov
push
inc
jbe
gs
lock
jg
or
fcoms
enter
jp
xlat
or
ljmp
xchg
aad
lds
out
jmp
xchg
test
adc
mov
or
pop
xor
out
inc
mov
lea
loopne
pushl
gs
push
add
push
push
push
push
mov
ljmp
cli
mov
jmp
dec
cmpsb
imul
inc
imul
cmp
jmp
add
test
jbe
pop
ljmp
cmp
dec
leave
fistpl
dec
jecxz
mov
fiadds
xchg
mov
addb
mov
dec
sahf
or
mov
mov
sbb
loopne
fstps
loop
mov
ljmp
call
hlt
ret
cmp
out
or
adc
cmp
imul
fcmove
jmp
lcall
xchg
xchg
popf
adc
cmc
faddl
xchg
jl
inc
gs
push
sub
lcall
pop
mov
sub
adc
out
xchg
adc
out
push
imul
jno
adcl
inc
sub
mov
cmp
pop
inc
out
mov
adc
push
adc
lret
and
test
jmp
or
and
adc
add
mov
inc
inc
adc
test
push
call
mov
add
add
or
add
add
incl
inc
inc
inc
dec
dec
inc
pop
pop
adc
inc
xor
or
inc
aaa
push
adc
nop
push
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
mov
add
cwtl
add
mov
jae
outsl
jb
dec
mov
inc
jb
adc
push
gs
insb
adc
fistpll
arpl
imul
jne
insb
inc
insb
insb
outsl
arpl
inc
outsb
je
jb
fistpl
je
arpl
data16
outsl
outsb
sub
jg
imul
js
push
inc
fs
outsl
popa
fs
imul
cltd
jns
push
insb
gs
adc
popa
jo
imul
mov
adc
push
mov
jae
addl
negl
add
jno
popf
sbb
pop
sbb
gs
push
imul
push
jns
inc
lods
jo
push
je
data16
push
outsb
popa
lcall
xchg
addr16
adc
insb
xchg
arpl
sub
mov
dec
gs
push
pusha
mov
or
popa
addr16
jae
add
jb
mov
pop
pop
inc
imul
mov
sbb
stos
sarl
xor
insl
xorl
or
out
lea
pop
add
xchg
dec
dec
or
mov
push
dec
lahf
bound
andl
imul
insb
push
test
push
mov
pop
sbb
sbb
arpl
test
arpl
and
cmpsl
inc
xchg
push
addb
mov
xor
jns
push
and
mov
inc
aad
scas
addr16
push
sub
mov
xor
or
mov
add
jo
rcrl
add
or
andb
inc
pusha
les
push
adc
dec
aad
popf
add
xchg
mov
mov
rclb
ja
push
movsb
sub
dec
xor
sarb
outsb
jae
dec
and
pop
add
adc
and
or
mov
and
lahf
and
adc
and
arpl
add
add
add
add
or
adc
ret
adc
xchg
and
inc
xchg
test
jae
adc
mov
mov
adc
pop
nop
mov
adc
jae
and
inc
adcl
mov
mov
xchg
mov
mov
fwait
pop
sub
adc
inc
out
cmp
jo
add
adc
mov
dec
add
mov
ret
inc
jo
cmpb
add
mov
mov
int
push
add
add
pop
jecxz
adc
mov
mov
sub
sbb
mov
daa
push
push
call
loope
and
scas
add
scas
nop
decb
mov
or
incl
add
scas
std
popl
cmp
sbb
adc
dec
cwtl
or
and
sbb
aad
add
fnsave
imul
add
mov
movb
jmp
and
and
subb
gs
aaa
roll
push
add
jnp
and
dec
pusha
sbb
es
lcall
fs
je
addb
cmp
cmp
add
shrb
in
push
daa
mov
cs
mov
xchg
and
fcmovnbe
fmulp
rorb
enter
popa
lahf
pop
push
xchg
push
les
jle
out
dec
jb
mov
in
and
ret
mov
subl
mov
mov
mov
dec
xchg
and
ds
add
inc
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
add
add
add
add
pop
add
add
jo
add
or
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
add
aad
sub
add
in
add
add
add
add
add
add
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
dec
adc
add
add
add
add
add
xor
add
int
je
call
flds
mov
jae
and
test
in
popa
mov
mov
cmpsb
orb
rcr
sti
add
into
mov
test
ds
xor
shrd
jb
scas
lods
jmp
ss
sbb
pop
inc
pop
pop
push
or
add
mov
and
repz
adc
mov
xor
sbbl
jp
sub
push
xchg
out
mov
cmp
and
cmpl
sub
in
loop
cltd
jo
jl
dec
mov
and
testb
movsb
pushf
test
and
lods
in
push
jo
into
pop
push
jecxz
popa
push
xchg
xchg
in
ret
xchg
adc
add
or
mov
cli
cli
int
cmp
xchg
roll
incb
mov
lods
sub
cmp
push
inc
sub
xchg
inc
ret
jbe
movsb
mov
test
nop
mov
in
mov
pop
out
rcrl
xor
add
ret
repz
mov
adc
jb
repz
push
pop
insl
push
icebp
ss
ja
sbb
aam
pop
inc
sub
enter
inc
out
push
enter
push
iret
testl
imul
jne
ficomps
cltd
and
hlt
mov
cmp
dec
push
mov
outsb
and
fsubl
mov
jmp
mov
cs
push
mov
pop
mov
mov
js
add
push
jmp
loop
xor
popa
add
int
addl
movsb
adc
sbb
mov
std
add
ljmp
sub
sbb
arpl
dec
sbb
mov
stos
lret
mov
push
clc
movsb
cmpb
or
popa
bound
adc
leave
mov
cltd
dec
lods
sar
and
xlat
int
cltd
ret
imul
pushw
mov
sbb
mov
jno
andl
arpl
je
xchg
xlat
cmp
fdivr
xchg
or
xchg
jl
fiadds
stos
out
notl
aad
lret
ucomiss
nop
add
out
jl
loopne
jbe
or
pop
sbb
jecxz
xor
into
jl
arpl
mov
pop
std
test
push
into
insb
sbb
push
movsb
enter
xchg
push
xchg
js
inc
push
ffree
fbstp
sub
jo
les
notb
std
add
cs
push
inc
orl
adc
fldl
jp
fstp
inc
xchg
sbb
scas
bswap
mov
repnz
inc
mov
mov
out
mov
cmp
mov
cmp
jbe
mov
dec
sbbl
int
adc
sahf
pop
sbb
rcll
in
mov
test
or
lret
movsl
mov
add
or
das
inc
xchg
js
xchg
cmpsl
dec
push
nop
inc
bound
nop
icebp
pop
aaa
adc
sub
movsb
mov
push
dec
or
cmc
xchg
shrl
scas
aas
pop
arpl
jg
jg
xor
jmp
aam
sbb
aaa
cmp
lods
outsb
dec
xchg
xor
gs
mov
aad
push
test
jge
out
out
or
ja
insl
cmp
add
mov
jnp
in
jge
sub
cs
loop
inc
xor
outsb
notb
movsb
rcl
cli
aad
pop
add
mov
outsl
jnp
jns
ja
cmc
fnstsw
rcr
jbe
cmp
push
adc
jg
idivb
sbb
mov
shlb
fimuls
insl
push
or
ljmp
out
js
push
ror
cwtl
movsl
lret
sbb
push
xor
xchg
dec
addr16
add
or
push
aas
addl
sbb
lds
mov
sbb
mov
or
imul
or
fdivr
adcl
sbb
aad
pop
mov
loope
adc
or
ss
ljmp
test
pop
xor
pop
lcall
mulb
idivb
mov
mov
lret
imul
out
sub
leave
push
dec
sbb
xchg
sbb
push
xchg
mov
jmp
ss
and
mov
loop
pop
adc
push
mov
push
rolb
push
sub
fadds
test
ja
xor
pop
cli
pushf
and
dec
ds
cmp
std
pop
cmp
cmp
ja
outsl
imul
cmpsl
hlt
xchg
scas
ds
jne
mov
mov
mov
stos
jnp
shll
imul
or
lods
cmp
dec
push
test
jg
xchg
int
cmp
push
outsl
mov
rolb
pop
dec
cld
mov
imul
dec
jo
sbb
mulb
test
push
pop
je
jno
sti
repnz
clc
loop
fbstp
aad
sti
lahf
mov
popf
sahf
iret
ja
popa
int3
loopne
cmp
arpl
push
aam
leave
adc
push
repz
sub
or
shl
cmp
cltd
cmp
dec
in
xor
or
imul
pusha
xor
aad
sub
pop
gs
add
mov
inc
pop
leave
cs
jb
fsubrs
xor
mov
or
ret
rcll
push
cs
daa
out
insb
pop
xlat
sbb
xor
rcrl
popf
out
cmpsb
push
idivl
dec
cmc
mov
pushf
mov
ljmp
sar
mov
cld
std
xlat
incb
and
push
adc
xchg
aaa
mov
pop
das
nop
in
xor
das
cmp
dec
push
sbb
sbb
push
mov
mov
pop
jo
sbb
mov
lcall
lahf
adc
adc
les
idivl
les
inc
cmpsb
sub
stos
arpl
lret
lock
cltd
cmp
inc
jbe
mov
pop
jecxz
cltd
arpl
out
inc
outsb
and
mov
inc
mov
iret
inc
xchg
xor
stos
push
mov
pop
mov
push
mov
adc
je
call
les
ret
jge
popa
jg
or
sbb
push
xlat
push
test
jne
lcall
dec
xchg
jg,pn
inc
inc
pop
pop
repnz
out
push
stos
push
jne
mov
inc
mov
pop
dec
shll
in
mov
test
jge
inc
dec
jne
in
mov
xor
out
je
mov
push
and
jne
cmpsl
cmc
popf
pop
scas
cmp
mov
adc
push
in
ds
pop
stc
dec
insb
or
pushf
add
lods
sub
aam
stc
or
and
imul
xchg
out
fcomps
inc
adc
push
loop
popf
xchg
movsb
test
inc
xchg
orl
xchg
repnz
mov
cwtl
pop
cmp
fmull
add
sub
and
add
stc
mov
sbb
es
xchg
push
dec
mov
les
sub
lret
nop
outsl
jle
and
fdivs
pop
lock
adc
and
sub
sbb
sbb
fsub
sbb
inc
adc
movb
dec
int3
dec
insl
int
je
call
flds
mov
jae
and
test
in
popa
mov
mov
cmpsb
orb
rcr
sti
add
into
mov
test
ds
xor
shrd
jb
scas
lods
jmp
ss
sbb
pop
inc
pop
pop
push
or
add
mov
and
repz
adc
mov
xor
sbbl
jp
sub
push
xchg
out
mov
cmp
and
cmpl
sub
in
loop
cltd
jo
jl
dec
mov
and
testb
movsb
pushf
test
and
lods
in
push
jo
into
pop
push
jecxz
popa
push
xchg
xchg
in
ret
xchg
adc
add
or
mov
cli
cli
int
cmp
xchg
roll
incb
mov
lods
sub
cmp
push
inc
sub
xchg
inc
ret
jbe
movsb
mov
test
nop
mov
in
mov
pop
out
rcrl
xor
add
ret
repz
mov
adc
jb
repz
push
pop
insl
push
icebp
ss
ja
sbb
aam
pop
inc
sub
enter
inc
out
push
enter
push
iret
testl
imul
jne
ficomps
cltd
and
hlt
mov
cmp
dec
push
mov
outsb
and
fsubl
mov
jmp
mov
cs
push
mov
pop
mov
mov
js
add
push
jmp
loop
xor
popa
add
int
addl
movsb
adc
sbb
mov
std
add
ljmp
sub
sbb
arpl
dec
sbb
mov
stos
lret
mov
push
clc
movsb
cmpb
or
popa
bound
adc
leave
mov
cltd
dec
lods
sar
and
xlat
int
cltd
ret
imul
pushw
mov
sbb
mov
jno
andl
arpl
je
xchg
xlat
cmp
fdivr
xchg
or
xchg
jl
fiadds
stos
out
notl
aad
lret
ucomiss
nop
add
out
jl
loopne
jbe
or
pop
sbb
jecxz
xor
into
jl
arpl
mov
pop
std
test
push
into
insb
sbb
push
movsb
enter
xchg
push
xchg
js
inc
push
ffree
fbstp
sub
jo
les
notb
std
add
cs
push
inc
orl
adc
fldl
jp
fstp
inc
xchg
sbb
scas
bswap
mov
repnz
inc
mov
mov
out
mov
cmp
mov
cmp
jbe
mov
dec
sbbl
int
adc
sahf
pop
sbb
rcll
in
mov
test
or
lret
movsl
mov
add
or
das
inc
xchg
js
xchg
cmpsl
dec
push
nop
inc
bound
nop
icebp
pop
aaa
adc
sub
movsb
mov
push
dec
or
cmc
xchg
shrl
scas
aas
pop
arpl
jg
jg
xor
jmp
aam
sbb
aaa
cmp
lods
outsb
dec
xchg
xor
gs
mov
aad
push
test
jge
out
out
or
ja
insl
cmp
add
mov
jnp
in
jge
sub
cs
loop
inc
xor
outsb
notb
movsb
rcl
cli
aad
pop
add
mov
outsl
jnp
jns
ja
cmc
fnstsw
rcr
jbe
cmp
push
adc
jg
idivb
sbb
mov
shlb
fimuls
insl
push
or
ljmp
out
js
push
ror
cwtl
movsl
lret
sbb
push
xor
xchg
dec
addr16
add
or
push
aas
addl
sbb
lds
mov
sbb
mov
or
imul
or
fdivr
adcl
sbb
aad
pop
mov
loope
adc
or
ss
ljmp
test
pop
xor
pop
lcall
mulb
idivb
mov
mov
lret
imul
out
sub
leave
push
dec
sbb
xchg
sbb
push
xchg
mov
jmp
ss
and
mov
loop
pop
adc
push
mov
push
rolb
push
sub
fadds
test
ja
xor
pop
cli
pushf
and
dec
ds
cmp
std
pop
cmp
cmp
ja
outsl
imul
cmpsl
hlt
xchg
scas
ds
jne
mov
mov
mov
stos
jnp
shll
imul
or
lods
cmp
dec
push
test
jg
xchg
int
cmp
push
outsl
mov
rolb
pop
dec
cld
mov
imul
dec
jo
sbb
mulb
test
push
pop
je
jno
sti
repnz
clc
loop
fbstp
aad
sti
lahf
mov
popf
sahf
iret
ja
popa
int3
loopne
cmp
arpl
push
aam
leave
adc
push
repz
sub
or
shl
cmp
cltd
cmp
dec
in
xor
or
imul
pusha
xor
aad
sub
pop
gs
add
mov
inc
pop
leave
cs
jb
fsubrs
xor
mov
or
ret
rcll
push
cs
daa
out
insb
pop
xlat
sbb
xor
rcrl
popf
out
cmpsb
push
idivl
dec
cmc
mov
pushf
mov
ljmp
sar
mov
cld
std
xlat
incb
and
push
adc
xchg
aaa
mov
pop
das
nop
in
xor
das
cmp
dec
push
sbb
sbb
push
mov
mov
pop
jo
sbb
mov
lcall
lahf
adc
adc
les
idivl
les
inc
cmpsb
sub
stos
arpl
lret
lock
cltd
cmp
inc
jbe
mov
pop
jecxz
cltd
arpl
out
inc
outsb
and
mov
inc
mov
iret
inc
xchg
xor
stos
push
mov
pop
mov
push
mov
adc
je
call
les
ret
jge
popa
jg
or
sbb
push
xlat
push
test
jne
lcall
dec
xchg
jg,pn
inc
inc
pop
pop
repnz
out
push
stos
push
jne
mov
inc
mov
pop
dec
shll
in
mov
test
jge
inc
dec
jne
in
mov
xor
out
je
mov
push
and
jne
cmpsl
cmc
popf
pop
scas
cmp
mov
adc
push
in
ds
pop
stc
dec
insb
or
pushf
add
lods
sub
aam
stc
or
and
imul
xchg
out
fcomps
inc
adc
push
loop
popf
xchg
movsb
test
inc
xchg
orl
xchg
repnz
mov
cwtl
pop
cmp
fmull
add
sub
and
add
stc
mov
sbb
es
xchg
push
dec
mov
les
sub
lret
nop
outsl
jle
and
fdivs
pop
lock
adc
and
sub
sbb
sbb
fsub
sbb
inc
inc
inc
movb
dec
int3
dec
insl
int
je
call
flds
mov
jae
and
test
in
popa
mov
mov
cmpsb
orb
rcr
sti
add
into
mov
test
ds
xor
shrd
jb
scas
lods
jmp
ss
sbb
pop
inc
pop
pop
push
or
add
mov
and
repz
adc
mov
xor
sbbl
jp
sub
push
xchg
out
mov
cmp
and
cmpl
sub
in
loop
cltd
jo
jl
dec
mov
and
testb
movsb
pushf
test
and
lods
in
push
jo
into
pop
push
jecxz
popa
push
xchg
xchg
in
ret
xchg
adc
add
or
mov
cli
cli
int
cmp
xchg
roll
incb
mov
lods
sub
cmp
push
inc
sub
xchg
inc
ret
jbe
movsb
mov
test
nop
mov
in
mov
pop
out
rcrl
xor
add
ret
repz
mov
adc
jb
repz
push
pop
insl
push
icebp
ss
ja
sbb
aam
pop
inc
sub
enter
inc
out
push
enter
push
iret
testl
imul
jne
ficomps
cltd
and
hlt
mov
cmp
dec
push
mov
outsb
and
fsubl
mov
jmp
mov
cs
push
mov
pop
mov
mov
js
add
push
jmp
loop
xor
popa
add
int
addl
movsb
adc
sbb
mov
std
add
ljmp
sub
sbb
arpl
dec
sbb
mov
stos
lret
mov
push
clc
movsb
cmpb
or
popa
bound
adc
leave
mov
cltd
dec
lods
sar
and
xlat
int
cltd
ret
imul
pushw
mov
sbb
mov
jno
andl
arpl
je
xchg
xlat
cmp
fdivr
xchg
or
xchg
jl
fiadds
stos
out
notl
aad
lret
ucomiss
nop
add
out
jl
loopne
jbe
or
pop
sbb
jecxz
xor
into
jl
arpl
mov
pop
std
test
push
into
insb
sbb
push
movsb
enter
xchg
push
xchg
js
inc
push
ffree
fbstp
sub
jo
les
notb
std
add
cs
push
inc
orl
adc
fldl
add
add
test
add
add
aad
aad
mov
aad
fldl
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
add
add
add
add
add
add
add
aad
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jns
je
xor
imul
jo
jne
gs
xor
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
jo
push
gs
data16
imul
gs
add
add
outsb
fs
insl
popa
add
add
je
imul
