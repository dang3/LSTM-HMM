push
call
ret
ret
sbbl
pop
mull
jge
cmp
and
add
test
rcll
jb
jne
inc
xor
cmp
push
add
sub
mov
sub
cmpb
movsl
arpl
inc
pusha
mov
adc
into
mov
mov
pop
mov
xchg
inc
cmp
xchg
push
fiaddl
fs
xor
nop
adc
push
cwtl
pop
iret
test
add
sbb
xchg
sahf
daa
cmc
fadd
push
push
pop
jmp
cmpl
int
mov
ss
inc
stos
pop
and
cmp
mov
push
jnp
imull
lcall
sbb
or
adc
lret
push
mov
and
adc
aas
mov
or
add
jbe
xor
stos
or
sub
push
mov
mov
sti
mov
add
sub
cmp
and
fldl
xchg
push
sbb
ljmp
dec
mov
ds
dec
push
jo
adc
fwait
rclb
outsl
mov
pop
jbe
push
jo
or
xchg
sbb
mov
ret
cmc
shrl
pop
arpl
es
cmpsl
or
dec
call
sub
stc
nop
stc
jmp
push
mov
xchg
repnz
inc
fwait
mov
leave
lods
mov
inc
jnp
out
addl
outsb
xchg
add
aaa
push
icebp
mov
cmp
rorl
adc
repnz
push
clc
es
mov
lock
rcrb
or
xor
adc
idivl
roll
xor
mov
or
xchg
mov
fstpl
add
inc
xor
scas
and
jmp
mov
mov
pusha
jmp
dec
into
test
cmp
in
xor
sbb
jp
outsl
inc
test
scas
xor
in
stos
and
cld
push
jecxz
cmp
pop
xchg
int3
pop
lods
pusha
push
xor
push
xchg
ret
insb
roll
dec
mov
xchg
cmp
push
loop
adcl
xchg
in
cwtl
lods
outsl
pop
loope
lret
stos
test
out
lea
pop
mov
sub
push
and
addl
cli
roll
iret
inc
cmp
mov
dec
mov
or
sub
and
mov
dec
push
xchg
dec
xchg
adcl
aad
iret
lahf
dec
xchg
icebp
pop
pop
fwait
das
cld
ljmp
push
xor
and
addl
sub
dec
bound
in
jmp
pop
sub
mov
outsb
adc
dec
mov
cmpl
test
mov
pop
push
xor
mov
in
jp
jle
pop
push
testl
imul
push
push
push
stos
jno
or
sbb
test
sbb
mov
and
mov
inc
mov
mov
jb
mov
test
ss
sub
subl
dec
dec
pop
and
and
sbb
cli
or
cli
mov
inc
pop
push
scas
das
lods
ljmp
push
bound
and
nop
push
sarl
lret
sub
shrl
push
mov
fdivs
mov
jle
scas
lret
pushf
dec
sarb
cld
sbb
jle
push
mov
test
push
xor
les
lods
jbe
insb
test
dec
push
push
test
cs
cmp
jb
or
pop
push
xor
cld
sub
and
stc
adc
leave
scas
jno
fsqrt
hlt
sbb
mov
ljmp
adc
dec
inc
addr16
lods
push
sti
add
mov
adc
jb
dec
mov
mov
mov
and
imul
jg
ror
in
loopne
jl
push
push
movsl
sbb
and
ret
sbb
ja
push
cwtl
xor
in
popl
in
or
sub
nop
mov
pop
pop
sti
loope
test
mov
jmp
es
dec
iret
cmp
aam
mov
push
cwtl
jg
pusha
lds
out
jecxz
outsb
mov
fldcw
jne
sub
cmp
pusha
ret
sbb
fs
xchg
clc
jecxz
into
xlat
pop
fwait
imul
addb
in
jns
test
rclb
cli
push
int3
outsl
std
in
adc
out
fs
mov
pop
xchg
cmpsb
repnz
sti
popf
add
sub
mov
repnz
jbe
cld
push
cmpl
jl
pushf
mov
xor
cmp
test
stc
xor
lods
out
pop
cmpl
ficompl
and
pop
adc
dec
out
sti
and
push
scas
mov
fldl
loopne
jecxz
adc
mov
pop
jnp
lods
lods
rcrb
sbbl
mov
sub
pop
and
sub
mov
fldt
in
test
cmp
je
push
scas
pop
test
aaa
xor
mov
inc
mov
ds
mov
inc
outsb
lret
xor
das
insb
and
aas
sub
pop
push
xlat
mov
gs
and
sbb
arpl
jg
xchg
or
iret
out
lret
inc
or
xor
jae
test
out
loop
add
sub
ret
adc
lret
imul
test
jo,pt
mov
pusha
dec
push
cmp
sbb
sub
fs
mov
push
dec
mov
cmpsl
cmc
mov
mov
adc
xor
pop
mov
pop
addr16
enter
imul
add
add
mov
mov
lock
mov
ret
pop
icebp
and
ja
sbb
and
outsl
inc
int3
pop
insl
in
lcall
xlat
pop
pop
adc
add
cmp
xlat
shr
mov
sub
and
bound
and
or
cmp
mov
sarl
mov
subl
ds
cmp
xchg
arpl
int3
jge
xor
les
xlat
out
out
fsts
mov
xchg
cmp
mov
sbb
xchg
sti
mov
stos
stc
popa
mov
addr16
xchg
idiv
sub
lret
stos
insb
mov
push
dec
fldt
xor
or
pop
repz
push
push
daa
cmp
xchg
mov
mov
shrl
incb
add
jecxz
adc
and
jmp
and
jl
call
stc
and
cld
imulb
cwtl
outsb
sbb
out
lods
xchg
and
shrb
mov
rcl
stos
xor
inc
dec
push
test
dec
xchg
mov
ret
jle
out
mov
in
in
pop
outsb
pop
aas
push
or
mov
mov
mov
mov
out
loop
insl
push
mulb
loopne
call
inc
sub
ljmp
xchg
sbb
imul
xchg
popa
fisubs
pop
adc
add
adc
add
outsb
fsubrl
sbb
mov
dec
jmp
sbb
mov
or
cmp
jmp
inc
add
loopne
orb
clc
das
popf
mov
lea
adc
jbe
insb
xchg
leave
aaa
xor
popa
pop
in
data16
out
sti
lds
dec
xchg
sbb
aam
popf
push
scas
enter
and
cmp
mov
cmpsb
dec
add
nop
aam
iret
pushf
cli
cli
fucom
lods
lcall
mov
lcall
or
mov
mov
and
sbb
sahf
pushf
xor
inc
test
pop
ret
pop
or
mov
loope
sub
push
adc
mov
xchg
and
call
push
mov
das
outsb
fsubl
into
daa
pop
in
fdiv
mov
fimuls
notl
shr
add
push
mov
or
jge
inc
mov
inc
std
jecxz
cld
push
sub
sub
jle
mov
pop
push
insl
and
xchg
jl
outsl
in
out
imul
fldln2
lods
jmp
rcrb
jne
imul
ja
bound
add
jl
imul
popa
stos
cld
pop
push
shlb
ret
lds
mov
dec
fcomi
pop
aad
aam
movsl
xor
jg
cmpsl
sbb
js
mov
ja
stc
outsl
imul
mov
and
push
movl
sub
adc
int3
ja
xchg
jp
mov
jo
dec
addb
icebp
roll
insl
stos
lds
jp
hlt
mov
fs
cmp
dec
mov
orl
push
and
filds
into
rcr
jg
dec
inc
lahf
lret
mov
dec
adc
jns
jge
das
imul
outsl
.byte
dec
add
xor
addb
andb
jecxz
mov
push
stos
mov
aam
imul
loope
in
and
addr16
lock
add
imul
xor
dec
mov
jle
orl
mov
popf
lcall
shl
inc
add
add
jbe
leave
mov
mov
inc
movsl
pusha
les
outsl
fcoml
out
or
pop
loop
cmpsl
testl
jo
dec
and
pop
movsl
jecxz
pop
in
fistpl
xchg
inc
jl
or
and
dec
data16
loop
xor
gs
xor
dec
cmovnp
jo
or
int
call
movsl
cltd
sahf
int3
sub
arpl
and
lcallw
pop
jmp
push
and
mov
push
sahf
dec
clc
xor
push
lret
pusha
ret
jne
inc
int
fstl
adc
fidivrs
mov
ret
mov
hlt
push
popf
scas
mov
test
mov
pop
inc
cmp
scas
ficoml
shll
cmp
outsl
cmp
push
cmpsl
scas
hlt
sbb
push
xor
in
out
rorb
inc
loope
inc
adc
inc
cld
std
adc
adc
fs
sub
jg
dec
aaa
mov
inc
sub
insb
mov
jns
arpl
jmp
jl
xor
sar
sbb
push
test
clc
inc
pop
pop
mov
xor
jmp
lahf
pop
cwtl
mov
sub
int3
and
lock
gs
js
xor
adc
cs
pop
negb
jecxz
fbstp
movl
lret
mov
pop
fsubrl
outsl
and
jp
xor
lcall
sar
inc
jmp
popl
int
insl
jg
jp
jne
subl
xorl
pop
test
loope
out
test
ja
stos
cmp
mov
xor
bound
out
iret
fstpl
dec
inc
pop
sti
push
imul
dec
emms
scas
outsb
or
sub
push
lahf
mov
test
mov
xchg
ljmp
or
cs
je
jb
sbb
pop
sbb
xchg
nop
inc
lds
or
push
fdivrs
aas
add
or
aad
rolb
sub
xor
and
divl
push
lahf
inc
jmp
movsl
ret
push
loop
pop
mov
sub
neg
add
mov
stos
aas
shrl
sub
mov
into
xor
fcom
push
or
inc
sbbb
test
sub
mov
add
xchg
mov
xor
mov
shll
xor
jno
pop
lds
in
rclb
add
jecxz
ret
cmp
test
das
fnstenv
scas
cmc
fcoml
sar
insl
mov
cs
aas
push
xchg
leave
cwtl
lods
or
mov
dec
orl
hlt
stos
mov
in
fistpll
cmp
xchg
xchg
cmp
xchg
dec
lods
push
mov
sub
lods
xchg
inc
inc
test
sbb
dec
cmc
das
aad
lahf
outsl
jp
call
loop
and
fwait
mov
addr16
jle
pop
es
cmp
cwtl
js
cmp
inc
adc
push
xchg
iret
movsl
cltd
xor
repz
or
or
in
push
mov
rcr
cmp
shll
jmp
xchg
test
adc
loope
push
xor
repz
pop
jmp
je
xchg
lods
popa
adc
arpl
xchg
leave
jl
sbb
dec
dec
sbb
ficoml
out
push
repnz
push
lret
inc
cmp
jp
sbb
leave
adc
int
xor
jge
and
xchg
out
mov
in
popa
repnz
imul
repz
aam
lea
jns
mov
aaa
and
aam
cmp
loop
jl
mov
sahf
mov
xchg
mov
cmc
flds
fimull
mov
push
shr
mov
cmp
sub
sub
test
pop
popf
sbb
call
repz
cwtl
test
ja
je
pop
jno
cmc
test
rorb
movb
cmc
call
sahf
cli
mov
push
push
push
dec
aam
adc
push
xor
insl
leave
imulb
jl
cmp
clc
sub
fnstcw
cmp
aad
or
cwtl
and
push
setp
dec
je
mull
nop
aad
pusha
loope
popa
lds
dec
aas
leave
adc
xor
adc
adc
jno
stc
mov
mov
mov
lret
popf
push
loop
mov
mov
add
push
mov
cmp
imul
fcompl
int
in
sbb
or
stos
in
or
jl
xchg
push
xchg
xchg
lea
add
jle
stos
aas
xor
lods
jmp
adc
repz
test
adcb
and
add
sub
int3
jne
rcll
lds
inc
sbb
add
je
mov
xorb
mov
roll
into
mov
jns
sub
pop
or
testl
negb
ss
test
pop
mov
push
pop
jno
or
sub
jl
inc
jnp
ret
jne
lds
js
mov
jne
cs
iret
xor
subb
xchg
jbe
das
push
vpaddsb
cmp
call
cmp
iret
pop
js
data16
xchg
mov
or
pop
mov
inc
jg
mov
mull
std
jl
mov
dec
in
and
cmpsl
pop
and
clc
bound
sbb
setge
mov
jl
sahf
into
inc
pop
test
pushf
sub
inc
sub
add
and
insb
addr16
and
xchg
jl
es
mov
mov
nop
push
push
adc
das
adc
push
jecxz
dec
es
aaa
rol
pop
shl
enter
jg
sar
jle
mov
jge
fldl
insl
arpl
mov
jns
dec
aaa
mov
mov
hlt
dec
xchg
in
xchg
les
stos
imul
out
pop
mov
xchg
mov
mov
inc
out
loopne
fscale
fnstenv
nop
arpl
int
insb
pop
pop
or
jne
pop
faddl
in
jl
or
xchg
repnz
in
sahf
lret
ljmp
out
fnstcw
mov
mov
movsl
xchg
push
add
cld
rcrl
call
andb
pop
popf
xchg
pop
and
push
and
cs
jmp
in
out
mov
loopne
fsubl
and
sbb
jg
pop
jmp
jg
loop
ret
mov
loopne
mov
or
fwait
sub
hlt
scas
pop
fimull
in
jg
pop
mov
push
add
test
shrl
add
mov
pop
cli
cmp
lods
sbb
out
jbe
les
cli
jge
adc
push
mul
das
je
inc
jge
lret
push
add
test
jno
icebp
loopne
pop
push
jmp
pop
shrb
cwtl
cmpsb
movsb
xchg
jno
or
dec
mov
pop
push
mov
add
cmp
push
inc
loopne
addr16
int3
xchg
push
out
movsb
mov
fs
into
shll
test
mov
cmp
add
inc
or
cmp
dec
popa
mov
imul
fistpl
lods
pop
lods
shl
sbb
outsb
adc
inc
cmp
lret
xchg
shrl
mov
jecxz
adc
in
jg
test
jno
mov
dec
scas
cmpsb
lock
xor
and
add
pop
test
enter
xchg
sarl
jo
mov
pusha
xor
mov
xchg
jg
mov
jl
into
or
mov
or
and
mov
push
imul
xchg
iret
cmp
ds
outsb
inc
addr16
xchg
cltd
sub
in
daa
dec
inc
mov
mov
cli
push
and
xchg
lock
ss
sbb
test
sahf
jge
into
orl
cmc
inc
mov
imul
ja
and
jb
shll
dec
sti
test
add
test
repz
leave
sbb
mov
pop
out
mov
cmpsl
mov
xor
aaa
fcoms
lea
das
jecxz
jae
mov
cwtl
jmp
xchg
jmp
pop
adc
or
int3
mov
adc
jae
or
push
push
setae
repnz
xchg
jae
sbb
jbe
iret
shlb
xor
ret
push
sub
clc
xor
pop
imul
sub
push
dec
aaa
and
js
xchg
jmp
sbb
push
push
in
in
inc
ljmp
xchg
push
pop
mov
push
jnp
mov
dec
adc
pop
out
cltd
sbb
mov
lods
clc
mull
lds
sub
popa
sbbb
nop
test
xor
mov
and
hlt
lock
pop
call
rcr
imul
adc
sbb
pushf
jp
ss
rcl
push
mov
shl
stc
ljmp
sub
push
and
xor
jo
xor
in
mov
int3
repz
mov
loopne
sbb
lock
pusha
mov
mov
sti
push
sbb
mov
stos
scas
inc
ret
pushf
mov
mov
call
stos
shrb
repnz
das
or
lret
es
shrl
mov
jnp
and
movsb
cltd
dec
dec
cmp
mov
mov
pop
jmp
in
pop
add
es
pop
inc
mov
pop
inc
iret
sub
call
shlb
xor
daa
int3
jne
sub
push
popf
and
mov
or
lcall
xor
mov
add
pop
sub
mov
addl
mov
inc
adc
stos
or
imul
sbb
outsl
sbb
xor
shlb
cmc
jne
jbe
xor
mov
shll
fwait
cltd
popa
xor
out
icebp
cltd
lods
mov
push
sahf
imull
filds
mov
imul
data16
push
xor
pop
aad
rolb
dec
sbb
outsb
adc
pop
jb
ljmp
imul
stos
xchg
add
mov
add
dec
stos
lret
mov
cmpsb
jl
inc
lahf
adc
xchg
faddl
dec
jmp
xchg
inc
mov
clc
lea
aaa
lahf
inc
pop
push
jge
lods
mov
std
aad
jmp
inc
lret
repz
jecxz
push
cmp
cmc
rorb
orb
mov
in
lret
nop
insb
loop
push
or
hlt
mov
pop
sti
pop
fildl
dec
xor
subb
sub
xchg
adc
add
sub
push
inc
not
push
fmuls
sbb
hlt
push
xchg
stc
test
scas
cmp
mov
nop
les
inc
xor
jo
test
adc
aad
andl
jle
push
add
mov
push
push
mov
mov
mov
mov
sub
jge
push
bound
jno
aam
mov
xor
xor
and
sub
leave
sahf
and
dec
and
push
cmp
xchg
ljmp
adc
xor
sbb
mov
push
pop
pop
shrl
rcrb
inc
pushf
cmp
or
jbe
hlt
xchg
inc
movsl
pop
call
fsubl
inc
xchg
repnz
push
adc
pushf
jle
inc
clc
or
pushf
cmp
jne
jg
icebp
int3
adc
mov
sbb
movsb
add
sti
mov
dec
pushf
adc
repz
or
mov
mov
and
jae
scas
sarl
push
mov
add
cld
pop
inc
mov
push
sub
dec
dec
push
xor
sub
xchg
cmp
lahf
mov
cs
lods
nop
aas
int
jecxz
loopne
sbb
sti
out
pop
call
scas
adc
outsl
mov
ja
xchg
ficomps
dec
popf
jnp
mov
out
mov
and
out
negl
jne
in
or
pop
xchg
repnz
mov
fcompl
clc
int
mov
mov
mov
sahf
rorb
test
shlb
cmpsb
add
and
cmpsl
inc
and
fwait
movsl
pop
call
fwait
dec
mov
jo
lret
push
pop
sbb
int
sti
jecxz
pop
mov
or
mov
cmpsl
mov
cmc
jle
leave
loop
push
mov
insl
cmpl
aam
insb
mov
cwtl
sbb
cmp
test
in
inc
jne
cmovp
in
aad
in
lods
xchg
dec
aam
in
cmp
mov
nop
std
sahf
fldl
sahf
stos
outsl
loopne
fisubrl
sahf
sbb
and
jge
push
pop
and
fbld
push
xchg
push
cmp
mov
push
pop
insl
leave
loop
mov
inc
aad
or
mov
pop
in
mov
xchg
sahf
jbe
mov
iret
inc
lods
adc
int
cmp
push
xor
shlb
decl
inc
pop
cmpsb
ljmp
mov
stos
test
cmp
dec
and
lds
sbb
insb
inc
jmp
mov
sbb
test
add
push
mov
mov
pushf
mov
das
mov
stc
mov
fimull
mov
mov
sbb
sub
rcll
push
mov
lahf
pop
loopne
pushf
lea
xchg
enter
aas
adc
outsb
subl
rorb
inc
stc
outsl
int3
js
mov
xchg
mov
jg
xor
ret
in
inc
push
frstor
pop
enter
mov
dec
pop
sbb
cmpsl
lds
mov
jno
jg
or
cmp
popf
xchg
dec
test
test
add
imul
fninit
adcb
mov
mov
mov
dec
pop
or
adc
loope
in
or
imul
adc
mov
or
jnp
cmp
mov
clc
pop
rclb
dec
mov
and
xlat
addr16
adc
jns
xor
and
test
mov
addl
mov
hlt
mov
mov
push
add
out
sbb
push
ss
sub
jb
rcrb
mov
cmp
and
mov
in
jne
mov
sarb
test
cmp
jo
lods
or
mov
push
sub
sbb
sbb
dec
push
inc
ficoms
int3
push
add
jge
xchg
mov
push
dec
jb
or
sbb
inc
push
sbb
mov
insl
mov
icebp
divl
fwait
inc
dec
adc
jo
sub
adc
int3
adc
mov
xchg
push
ds
fimuls
inc
ja
jge
dec
sbb
dec
and
fdivl
sbb
inc
inc
push
sub
or
adc
push
add
inc
or
pop
mov
mov
jbe
mov
into
jno
sbb
pop
addr16
push
pop
push
mov
sub
adc
nopl
push
insl
jmp
inc
push
icebp
mov
dec
js
inc
ja
shrl
test
loop
mov
inc
jle
jno
inc
mov
cmp
movsl
or
mov
push
ss
cmpsb
cmp
pop
imul
jns
repz
imul
mov
mov
push
pushf
xlat
je
jl
and
out
mov
popf
repz
int3
lcall
in
test
adc
xlat
out
xlat
int3
adc
pushf
test
jns
repnz
out
int3
movsb
cmp
lret
and
outsl
loopne
sbb
jle
mov
xchg
aam
outsb
mov
in
scas
mov
mov
syscall
lahf
jg
xchg
stos
leave
sub
mov
test
cmp
lret
sbb
cs
sarl
in
dec
pop
or
lcall
jno
andb
xor
lods
popf
sub
pop
out
mov
cli
push
aam
mov
ret
or
lods
inc
jle
jl
xor
hlt
mov
mov
jne
mov
push
xchg
xchg
enter
fdivl
in
mov
jmp
push
ljmp
lret
dec
cltd
popf
jbe
in
sti
insb
push
shl
lret
mov
shl
cltd
outsl
cmp
aaa
dec
clc
sahf
repz
sar
hlt
xchg
lods
adc
xchg
insb
enter
push
mov
mov
lcall
nop
ret
mov
lret
fnstcw
jl
cmp
adc
popf
dec
scas
sahf
pop
jge
mov
loopne
es
stos
fs
pop
imul
iret
rcll
push
sub
popa
insl
pop
cmc
mov
xlat
into
and
inc
cld
dec
mov
in
pop
lods
and
cmp
add
sarl
mov
in
hlt
addr16
lods
pusha
fsubl
out
lock
ja
jle
or
sub
enter
mov
cs
jl
lret
cs
mov
addb
cmp
jmp
out
mov
pop
fidivl
fsubl
sti
int
sbb
and
lods
ret
inc
repnz
mov
stos
pop
je
pop
inc
movsb
adc
insl
popa
push
out
mov
addr16
arpl
popf
into
and
xor
test
mov
jmp
sub
inc
jbe
adc
jns
lds
test
in
add
push
inc
mov
ss
push
aas
or
add
adcl
test
sbb
jae
je
sub
mov
and
lds
mov
cld
lods
push
cvtpi2ps
dec
rol
cmpsb
or
sahf
inc
cmp
imul
cmpsl
add
fisttpll
cmp
imul
xor
sbb
sub
fistpll
ja
movsl
and
scas
mov
or
insb
iret
insl
ds
in
jnp
dec
xor
xlat
imul
fbld
mov
lea
rclb
cwtl
leave
leave
sub
loopne
and
pavgb
dec
rolb
hlt
add
xor
pop
in
rolb
arpl
in
fstl
inc
mov
xor
mov
inc
in
ret
jno
cmp
jnp
mov
movsl
enter
sbb
sbb
loope
fisubs
loop
jne
cmp
rorb
pop
jo
inc
scas
shrl
add
movsb
cmp
cmpsl
mov
xor
jbe
lret
pop
mov
sbb
ds
ljmp
dec
push
sub
sbb
xchg
shrb
imul
jecxz
jnp
pop
dec
push
fs
adc
sub
mov
push
leave
sub
lds
add
mov
inc
nop
xor
cmp
fsubrs
lahf
xchg
inc
push
ja
push
repnz
cltd
push
aaa
dec
fildl
fcoml
mov
fimull
pop
icebp
or
mov
pop
ja
pop
ret
sub
sbb
inc
imul
pop
out
sbb
lock
imul
push
repnz
js
adc
addr16
cmp
rcl
cmp
jo
pop
xchg
dec
pop
loop
jbe
sub
shlb
fstps
loope
out
rclb
lock
sub
adcl
mov
lock
xchg
fdivrl
pop
mov
call
filds
add
insl
jmp
cmp
test
cmp
mov
ljmp
gs
xchg
xor
sub
dec
sbb
push
nop
xor
cmp
and
es
js
adc
scas
je
pop
adc
out
stc
cmpsb
in
sub
mov
int
jae
jns
cmp
inc
out
ret
rclb
loope
mov
jle
xchg
or
lahf
mov
adc
inc
jb
cmp
sub
or
xchg
sbb
cmp
lods
ja
fildll
cld
filds
inc
ror
ffree
xor
add
cs
dec
aas
movsb
sub
jns
aad
and
pop
cmp
arpl
daa
cmp
sbb
nop
mov
lcall
fadd
push
nop
push
jge
mov
arpl
xchg
incb
xchg
jmp
sub
test
adc
or
cmp
pop
inc
das
mov
and
dec
icebp
lods
cmp
and
ret
dec
xchg
pop
cmc
add
lods
adc
push
cmp
fsubrl
mov
xchg
jl
or
xor
or
jae
jg
mov
hlt
push
adc
pop
or
sub
jne
ffreep
sub
mov
mov
push
add
shlb
mov
stos
add
mov
adc
mov
jp
dec
and
mov
jl
jmp
adc
sbb
inc
inc
jp
mov
cwtl
stc
je
icebp
imul
aam
notb
inc
mov
fdivrp
repz
divl
iret
sti
push
pop
mov
mov
and
fidivrs
inc
pop
iret
dec
cmc
andb
loope
aaa
or
sbb
push
jne
fildl
das
pop
xor
into
jnp
sub
loopne
sbb
imul
mov
insl
repnz
jnp
jbe
loop
fcmovnbe
push
aas
push
adc
mov
dec
ret
xchg
pop
std
insb
inc
aas
add
jge
lock
pop
lret
rcrb
jge
ja
inc
int
mov
adc
popf
push
xchg
adc
adc
iret
cmp
lcall
and
sbb
lret
popw
orl
cmp
inc
icebp
aaa
out
and
ficomps
out
out
sarl
dec
stos
or
movsl
jecxz
jbe
cmpsb
push
insl
daa
movsl
and
sbb
xor
adc
lods
xor
notb
pop
pop
xchg
ret
sub
sbb
jbe
fnstsw
inc
in
mov
cmp
in
pop
andl
ds
pop
jp
fistps
mov
xchg
notl
sbb
outsb
mov
orb
insb
jb
dec
ffree
nop
clc
sub
das
lret
push
mov
inc
pop
push
jmp
xchg
pop
add
cltd
inc
or
push
or
aam
cltd
or
subl
cs
leave
push
pusha
push
mov
jge
mov
sbb
lret
push
lcall
test
repnz
daa
fs
mov
dec
lock
push
lock
cs
das
popf
sahf
lea
sbb
mov
sub
xor
les
test
adc
pop
shll
xor
push
jecxz
xlat
fisttpll
in
or
shr
adc
cmp
mov
mov
mov
dec
cmpsb
aam
jns
lcall
mov
adc
mov
shrl
loop
inc
lods
jl
nop
mov
scas
push
mov
sbb
lret
in
mov
sub
mov
fcmovbe
jno
out
sbb
imull
hlt
lcall
jb
punpckhbw
pushf
pop
push
push
repz
outsb
mov
aas
inc
les
iret
sub
lahf
mov
or
pop
mov
std
sub
mov
sbb
mov
xchg
inc
cmp
adc
jmp
lret
fists
aaa
nop
mov
pop
outsb
push
ret
mov
repnz
mov
mov
imul
mov
mov
push
mov
jl
push
dec
mov
cld
nop
je
mov
repz
leave
mov
divb
sbb
ljmp
jb
jg
lea
std
xchg
std
in
cmp
lods
adc
mov
jg
out
jns
pop
call
push
adc
in
push
data16
and
pushl
and
aas
cmp
fistpll
adc
push
add
fiadds
xlat
mov
cmp
dec
xchg
mov
hlt
cmp
test
stc
pop
add
dec
ja
out
sahf
and
mov
movsb
loopne
shlb
in
adc
inc
push
mov
inc
fadd
xor
mov
nop
ds
push
lea
fnstsw
jo
outsb
popa
daa
repz
inc
cld
mov
push
mov
mov
jmp
shr
jae
mov
jg
jmp
das
pop
xchg
ret
mov
mov
and
push
xor
xchg
out
lret
xchg
dec
jnp
cmp
aad
test
sub
aas
mov
lods
cs
mov
mov
pushf
repnz
int3
bound
jle
shll
lret
jmp
inc
fnstsw
icebp
stos
mov
adc
xlat
les
xor
jge
or
sub
inc
jle
push
adc
cmp
out
or
stc
dec
dec
add
sub
mov
xchg
in
cld
lock
popa
push
pop
jne
sub
in
pop
jge
sub
mov
ret
inc
mov
call
xor
or
aas
jae
loopne
sbb
push
stos
insl
adc
sub
mov
cmp
jns
sub
dec
jmp
add
add
jbe
ja
fsts
test
jg
cmp
jmp
mov
add
call
push
and
jbe
xor
mov
mov
outsl
jl
out
imul
out
repz
cltd
aas
daa
xchg
lods
cmpl
xlat
iret
or
sbb
ljmp
inc
inc
xor
sbb
fstpt
jb
lock
add
cld
jae
lahf
clc
inc
in
fcoml
push
push
add
dec
xchg
xchg
sub
xchg
gs
xor
dec
pop
pop
cmpl
icebp
pop
rclb
lret
lret
xor
fstpl
dec
cmpsl
je
out
hlt
jae
cmp
std
lcall
jnp
jnp
mov
in
sbb
sub
aas
outsb
test
xor
nop
mov
vfmsub213ps
and
mov
nop
jno
and
xor
cmpsb
pop
xlat
inc
jg
xchg
jge
push
mov
mov
ror
sbb
sahf
hlt
pop
sbb
pushf
popf
pop
rorb
pop
mov
les
iret
sbb
push
adc
fs
aad
sar
jmp
jg
ret
or
mov
mov
sbb
dec
xchg
jne
fs
ret
outsb
scas
ss
mov
lret
aad
movsb
pop
gs
xchg
into
jge
cld
sbb
cmp
stos
sbb
stos
cwtl
dec
pop
mov
pop
sbb
push
pop
sub
inc
push
fisubrl
xlat
ss
xor
xor
push
stos
pop
arpl
ss
cmp
cltd
inc
xchg
and
movsb
add
jo
lds
stc
jl
push
mov
into
pop
cmp
jl
fidivrl
popl
pop
lods
lods
pop
mov
scas
pusha
leave
push
push
xchg
jne
enter
sti
mov
fsubrl
cmpsb
dec
or
mov
dec
outsl
outsl
dec
mov
push
sbb
rorl
ljmp
adc
inc
fmul
lods
out
and
dec
movsb
adc
cmp
mov
mov
dec
sbb
dec
fwait
test
roll
jge
sub
add
std
or
loop
sbb
push
lahf
push
scas
mov
hlt
sbb
sbb
push
push
test
sarb
push
jns
adc
daa
cmp
dec
sub
and
ja
sub
add
lahf
xor
sub
push
ss
hlt
add
pop
inc
lods
cmp
push
mov
sbb
cmpsb
push
pop
out
shrl
inc
jmp
hlt
rolb
addr16
push
fcoms
lods
mov
lods
push
dec
or
sbb
push
mov
pop
mulb
xchg
aad
icebp
enter
dec
in
scas
clc
pop
shlb
pop
stc
adc
push
shlb
xorl
rol
dec
fmulp
test
dec
fwait
pop
pushf
cmpsb
or
push
fcomi
mov
pushf
xchg
out
and
xchg
fldl
jle
add
mov
and
fsts
inc
xor
sahf
aaa
jmp
or
mov
push
and
decb
ja
mov
add
xor
mov
push
dec
add
test
test
dec
add
out
push
sbb
rorl
mov
add
sub
sar
jno
aas
outsl
push
inc
shlb
push
sbbb
pop
idiv
add
pop
ss
adc
nop
sbb
es
mov
int
push
lods
arpl
inc
lret
add
lea
or
jb
mov
mov
xlat
int
dec
loopne
aam
sbb
push
ficomps
movsl
out
jbe
dec
sub
jne
sbb
mov
je
or
std
push
jno
dec
sarl
es
inc
add
and
movsb
out
fistpll
push
lock
outsb
das
loop
repz
pmuludq
loopne
adc
inc
xor
test
decb
lock
cli
lahf
dec
imul
ret
into
daa
ret
hlt
dec
mov
dec
mov
sti
arpl
push
xchg
aas
inc
fistl
cmp
mov
ds
mov
jp
testl
lret
mov
bound
mov
clc
fisttps
mov
push
cmp
xchg
push
inc
jbe
adc
mov
jmp
btr
clc
scas
adc
andl
mov
in
inc
push
lods
pop
scas
pop
add
sbb
mov
dec
aam
cmp
loopne
pop
ss
cmpsb
cltd
ficoms
mov
push
test
mov
push
mov
nop
push
mov
dec
mov
lcall
xchg
jmp
push
pop
push
rol
inc
or
test
ss
push
sbb
js
mov
rcr
mov
insb
mov
repz
jge
das
adc
pop
das
fld1
sahf
mov
and
ret
pop
loopne
sahf
sbb
add
cmpsb
push
jg
adc
out
cli
aam
cmpl
pop
jecxz
dec
loopne
push
adc
sbb
gs
rol
int
lea
pop
cmpsb
jbe
cs
fisubl
push
xlat
jnp
inc
xchg
mov
xchg
icebp
and
pushf
int3
int3
push
adc
mov
cmp
divl
fsub
cmp
jo
ljmp
push
scas
out
jl
call
call
jg
cwtl
mov
ja
xchg
adc
outsl
sbb
jbe
enterw
dec
popf
cmp
fimuls
jno
pop
pushf
mov
insl
shll
dec
push
cmpsl
or
pop
xlat
out
jp
frstor
xor
or
sbb
dec
xor
out
inc
or
sarl
mov
inc
out
xchg
mov
inc
lods
push
and
inc
jb
xlat
mov
add
inc
call
mov
xor
enter
stos
fsubr
cmp
inc
pop
pop
and
insb
movb
and
fs
movsb
or
mov
xor
testb
mov
pop
dec
xor
push
mov
dec
xor
xor
lds
pop
add
mov
insl
xlat
pop
jg
xchg
jae
mov
je
sbb
cmp
mov
lds
xor
xchg
popf
fwait
jns
push
rcr
scas
xchg
lods
imul
rcl
dec
adc
addr16
push
jecxz,pt
icebp
cltd
jno
les
insb
gs
push
mov
lcall
and
add
mov
add
inc
fwait
xchg
jl
inc
xor
push
sbb
adc
leave
das
fistl
xchg
movsb
ljmp
xchg
daa
dec
cmp
sti
cmp
xchg
nop
in
test
and
lret
enter
mov
or
sub
mov
pop
adc
cmp
inc
in
xchg
xor
lods
and
icebp
or
push
jle
sub
cltd
mov
mov
mov
inc
shrl
cmp
adc
xchg
xor
stc
shl
xchg
lahf
pusha
mov
xchg
ja
mov
pop
int
mov
sub
sbb
jge
jns
les
jnp
shrb
and
in
cmpl
jb
xchg
lcall
inc
ud1
outsb
aad
push
jb
lcall
repz
push
rorb
ret
pop
xchg
and
mov
dec
shl
arpl
insl
push
arpl
mov
das
negl
dec
test
mov
jecxz
aad
inc
repz
cmpsl
inc
in
pop
outsl
ror
jo
pop
jp
jb
loopne
jae
pushf
push
pop
pop
fsubr
or
and
in
sbb
inc
push
cmp
aas
adc
jae
push
nop
mov
mov
pop
cs
cltd
xor
mov
movsl
in
add
lods
lds
sub
cmc
mov
gs
xchg
inc
sbb
movl
xor
addr16
out
xchg
jo
or
into
int
or
lahf
ror
cmp
int3
inc
lds
ja
pop
mov
les
mov
fcmovnb
mov
inc
pop
rcrb
movl
flds
mov
cmp
pop
jmp
test
or
inc
mov
jo
aad
cwtl
cld
jb
xor
sub
xor
mov
dec
dec
stc
adc
mov
mov
out
fistpll
or
push
in
xor
cs
sarb
sbb
pop
incl
xlat
mov
loopne
stos
mov
std
pusha
es
outsl
ja
adc
ss
mov
test
adc
inc
add
mov
in
dec
repnz
sbb
jmp
adc
testb
fstpl
mov
aaa
mov
test
or
inc
mov
cmp
dec
fs
aas
aaa
dec
in
cs
add
jl
pop
addr16
iret
push
mov
jmp
sub
dec
leave
dec
and
fdivl
push
pop
fistpll
xor
bound
pop
aam
es
push
sahf
inc
scas
inc
test
xor
adc
roll
inc
mov
push
repz
mov
mov
jne
inc
test
movsb
push
inc
addl
xchg
loop
jmp
mov
insl
gs
sub
das
pop
adc
mov
sahf
and
dec
add
popf
in
subl
add
xor
jb
repz
incb
pop
mov
in
stos
dec
dec
xchg
adc
mov
fstpt
jne
xlat
jl
icebp
repnz
mov
fcmove
repz
outsb
or
mov
sbb
test
into
mov
data16
sub
xlat
loopne
cmp
ja
jg
and
sub
insb
jno
mov
xchg
xchg
and
loope
arpl
int3
push
xor
ljmp
and
mov
lods
dec
insl
xchg
pop
cli
jne
int3
cltd
mov
outsl
int
pusha
outsb
jecxz
inc
inc
mov
icebp
lods
push
mov
xor
notb
out
add
gs
nopl
test
inc
push
dec
mov
pop
push
les
ficoms
sbb
scas
ret
cmp
mov
or
cmp
xchg
jb
pop
jb
jo
sarb
sub
decl
xchg
mov
mov
lcall
jbe
push
aam
add
jns
fcompl
daa
bound
dec
xor
cld
push
inc
popf
inc
ljmp
sbb
iret
jns
sub
ret
cltd
mov
mov
sbb
cli
mov
aam
popf
sub
push
xchg
pop
ss
and
pop
mov
outsl
dec
push
mov
adc
mov
sub
fildll
xchg
test
nop
and
jo
or
cli
jno
mov
es
imul
popf
test
mov
cwtl
mov
dec
mov
pushf
fs
xchg
jo
sbb
pop
mov
mov
adc
and
xlat
daa
jbe
data16
in
jae
push
xchg
inc
jno
movsl
testl
popa
js
js
ret
stos
lea
ret
inc
jno
xchg
mov
mov
shrb
sub
loope
inc
xchg
jmp
mov
adc
pop
loop
adc
and
cmp
js
ds
nop
adc
mov
lock
mov
xchg
nop
or
adc
mov
adc
mov
pop
pop
or
in
jp
fadds
xor
sub
loope
dec
mov
shrl
and
mov
insl
or
out
sub
dec
mul
jp
and
xchg
push
sar
leave
mov
jno
and
mov
or
fwait
xor
mov
push
mov
ljmp
int
sub
inc
rcrb
data16
jns
push
stos
dec
pusha
test
and
mov
adc
dec
mov
pusha
test
xor
mov
scas
jbe
loopne
push
repz
or
fwait
cltd
test
inc
faddl
xor
sbb
push
xor
sub
pushf
lds
push
mov
ficoms
push
iret
sbb
xor
sbb
or
xor
movsb
mov
dec
fsub
iretw
insl
in
mov
add
mov
jo
push
sbb
inc
pop
push
dec
pop
xchg
mov
ret
sub
mov
icebp
pop
mov
es
repnz
cli
sahf
dec
in
sbb
xor
lods
cmpl
lds
loop
xchg
and
mov
insb
test
sub
aas
xor
jno
jecxz
inc
xchg
and
push
adc
cmc
lcall
and
sbb
or
mov
sub
mov
push
pop
pop
dec
xchg
xorb
inc
jecxz
pop
mov
sbb
sub
jl
cmp
dec
lcall
stos
imul
int
inc
test
shrl
clc
ds
jle
in
cmpsb
adc
dec
pop
fnsave
dec
in
cmp
loopne
test
js
es
xchg
adc
pop
cmp
psrlq
rcl
ror
dec
call
imul
popa
inc
cld
pop
xchg
enter
lahf
in
outsb
aam
cwtl
and
push
pop
sub
pop
lahf
loopne
je
mov
cmpb
and
fdivl
mov
mov
pushf
lcall
test
xchg
dec
xor
in
imul
aad
mov
mov
loopne
les
jbe
push
mov
popa
or
icebp
dec
dec
ss
sar
lds
sub
and
pop
fmull
push
jo
cmp
ret
rorl
cmpsl
or
shl
mov
mov
cmp
cmp
adcl
cwtl
sub
sbb
js
adc
jmp
sti
jmp
cmc
decl
scas
loopne
or
mov
dec
cmpsl
mov
ror
fsts
jle
and
fimuls
outsb
adc
sti
cmp
mov
mov
or
cmp
mov
repnz
rcrb
aam
dec
outsb
aam
dec
ficoml
mov
sub
mov
rclb
adc
test
bound
sub
pushf
roll
repz
es
jb
xchg
dec
rcr
pop
lret
das
in
adc
pop
popa
and
jns
jns
mov
xor
cmp
lcall
mov
cmp
lods
adc
sub
push
dec
inc
push
push
cmp
subl
dec
int
push
inc
adc
pop
push
in
gs
stos
imul
pusha
ds
negl
or
js
add
movsb
lret
stc
mov
popf
cmp
mov
jmp
lret
rcrb
cmp
xchg
add
dec
sarb
pusha
mov
cs
lods
int
ret
cmc
pop
popf
xor
fcomip
jbe
lahf
clc
inc
iret
or
mov
gs
fimull
dec
xchg
mov
fwait
pushf
and
cs
scas
push
inc
test
sub
pop
cwtl
flds
jne
xchg
sti
mov
add
cltd
or
lahf
aam
mov
hlt
pop
ja
jne
dec
out
cli
mov
fsubs
outsb
dec
lock
dec
mov
sub
enter
ljmp
push
and
mov
mov
not
adc
mov
mov
xchg
push
fdivl
sbb
test
mov
pusha
push
pop
lds
int
cltd
mov
inc
or
loop
sub
into
jo
subb
fistpll
inc
test
daa
fnstcw
incb
bnd
inc
dec
cmpsb
frstpm(287
xor
insb
in
fmul
stc
outsb
adc
inc
std
jne
push
gs
push
aam
bound
std
fdivrs
enter
cltd
and
imul
mov
jae
dec
iret
push
jb
aas
cmp
add
sbbb
aas
cld
pop
out
ret
imul
dec
mov
sbb
sub
repnz
nop
clc
inc
mov
shr
out
pop
push
xchg
xchg
ret
mov
test
lock
enter
and
addr16
addr16
bound
das
sub
fisttpll
imul
cltd
ret
xchg
mov
push
cmp
stos
jecxz
push
lret
loope
xchg
pushf
shlb
mov
call
imul
mov
loope
movsb
in
mov
ss
mov
mov
cmpsb
scas
or
push
out
mov
jno
shll
int
inc
jne
ja
xchg
or
mov
pop
cld
dec
sbb
or
pusha
es
sti
jle
fimuls
lret
inc
hlt
mov
leave
mov
push
dec
sbb
movsl
shl
fists
stos
sbb
pop
out
sbb
inc
jns
or
and
add
mov
push
ffree
addr16
lret
adc
mov
je
movsb
mov
sub
cmp
imul
fimuls
ja
stos
jecxz
out
pop
sub
push
lret
inc
mov
and
dec
shll
xor
xor
iret
imul
jbe
daa
fneni(8087
test
jns
fisttpll
lahf
aas
mov
dec
scas
push
in
pop
jmp
outsl
sbb
push
jmp
stc
push
nop
dec
in
clc
bound
sbbb
sub
lods
mov
nop
imul
push
cmc
mov
xchg
sahf
ret
jne
das
mov
lea
rclb
mov
lds
int
xor
pop
testl
mov
imul
cmp
xor
rcll
and
inc
pop
adc
cmpsb
inc
jo
cld
dec
cmp
jb
cli
cmpsb
enter
ds
adc
dec
inc
aas
sbb
fistpll
in
mov
push
jle
add
push
push
xchg
mov
cli
cmp
rcrl
push
orb
sub
jmp
scas
cld
or
cmovnp
jmp
mov
pusha
mov
jne
test
lods
aas
xor
inc
or
xchg
inc
popa
or
mov
addr16
ds
hlt
sar
idivb
cmpsl
pop
mov
pop
xchg
or
leave
mov
add
or
jb
mov
dec
add
sub
cli
push
jae
cmp
inc
sti
ret
xchg
sti
xor
pop
jmp
test
jo
inc
push
nop
jle
push
inc
sahf
mov
enter
fildll
xor
pop
jne
mov
mov
incb
fwait
mov
xor
and
and
fisubl
test
test
cmp
out
xchg
mov
in
fsubs
add
xrelease
std
popf
sti
xchg
sbb
daa
popa
xchg
insb
inc
enter
mov
lods
aam
imul
sbb
inc
lods
inc
dec
pop
mov
inc
and
xchg
add
out
jnp
inc
insb
insl
sub
fisubl
push
dec
xor
push
fwait
mov
xor
daa
stos
loope
inc
xchg
pop
or
les
lods
cmp
shrl
jnp
lahf
inc
cltd
jb
cltd
flds
das
shlw
stos
jne
je
jb
sub
cmp
or
jbe
ret
dec
in
movsl
push
sub
mov
lret
push
sbb
data16
outsb
sbb
jbe
test
inc
sbbl
dec
in
stos
outsb
pop
mov
test
movsl
movsl
inc
scas
insl
and
gs
sub
test
pusha
push
xchg
mov
sbb
out
stc
mov
iret
stos
add
vpshufd
and
or
pusha
pop
jne
call
and
aam
out
fwait
xchg
push
bound
or
inc
mov
jno
scas
insb
jg
jl
push
push
push
pop
push
pusha
xlat
iret
cs
or
mov
test
pusha
imul
ljmp
lods
insb
bound
imul
idiv
adc
sbb
jle
xchg
pop
mov
push
mov
and
stc
std
push
pop
testb
call
fsubl
dec
jmp
push
subl
outsw
mov
mov
ret
mov
pop
xchg
mov
loopne
out
iret
mov
push
shll
add
pop
mov
mov
ffreep
sbb
iret
insl
shrb
pusha
xor
sub
sub
sub
ja
mov
loop
outsl
mov
sub
jae
cmpsl
inc
ja
loop
or
aaa
mov
push
add
jmp
movsb
stos
jle
ds
shlb
or
mov
cmpsb
mov
pop
mov
aad
sbb
jp
psllq
pop
subl
or
orb
mov
lods
mov
push
aaa
das
dec
jb
mov
sub
push
mov
out
sub
outsl
xchg
jmp
pop
push
fcompl
push
inc
rolb
aam
xchg
jne
xchg
xor
add
or
xlat
push
sarl
not
or
in
hlt
push
jecxz
xchg
lahf
cli
setl
scas
xor
imul
cmp
mov
or
imul
add
scas
repnz
push
mov
sbb
fwait
cld
fnstcw
bnd
dec
xor
xchg
jbe
dec
pop
or
mov
aaa
or
shrb
fidivrs
shrl
add
xor
popa
mov
stos
mov
or
mov
dec
cld
loope
or
sbb
psubusw
scas
imul
mov
push
enter
add
cwtl
ja
into
pusha
mov
in
jno
mov
jo
andl
and
loope
mov
pop
mov
aaa
and
decb
and
dec
and
lock
push
mov
cmpsl
andl
jno
shll
aad
jp
push
push
cltd
stc
lods
mov
jg
add
pop
jmp
cmp
inc
std
sub
nop
add
dec
or
mov
aam
cmp
roll
mov
aaa
adc
pop
in
pop
mov
sbb
push
in
sti
mov
stc
negb
jp
dec
addr16
cltd
cmp
push
mov
cmp
adc
lcall
std
mov
push
adc
cld
hlt
cmp
test
fwait
sub
jo
xchg
loop
test
mov
fstp
push
cmpsl
mov
test
movsl
es
jne
or
ret
scas
lret
cmp
repz
mov
push
lcall
xor
hlt
pop
iret
pop
sub
pop
lcall
loopne
and
adc
cmp
sbb
jg
shlb
inc
rcr
jl
lea
test
ds
pop
inc
popa
sub
inc
shll
cmp
jnp,pt
add
clc
sbb
subl
outsb
mov
xchg
mov
xor
xor
into
mov
pop
pop
or
adc
sub
pop
scas
stos
xchg
mov
push
sbb
popf
inc
pop
lods
out
ljmp
push
or
jo
mov
push
adc
shl
aaa
test
ljmp
out
test
mov
movsl
shl
stos
xor
fs
in
add
sbb
dec
mov
leave
inc
in
rolb
test
les
mov
test
lods
scas
inc
mov
mov
frstor
loope
cmpb
pop
dec
mov
lcall
push
les
shrb
push
xor
push
xor
lret
or
test
jns
sahf
sti
out
xchg
or
mov
add
pop
test
in
pop
lock
testb
jae
cmp
inc
mov
ret
dec
shrl
xchg
and
adc
int
xchg
adc
shrl
xchg
loopne
adc
lahf
hlt
scas
pop
xchg
sbb
mov
xchg
in
dec
mov
imul
rcll
loope
jae
in
arpl
fdivrs
cwtl
pop
js
xor
sarb
les
dec
push
inc
jle
jne
push
cmpsl
lahf
maskmovq
testl
xchg
jecxz
enter
cmpsb
push
test
dec
or
dec
sub
adc
pushf
sub
aad
fstpl
in
pop
sub
push
cmp
stc
sbb
ds
aam
outsl
add
sub
xchg
mov
push
ds
xchg
pusha
xchg
lods
pop
fidivl
test
sti
add
fisubrl
orps
push
ljmp
outsb
push
pop
test
cmp
sub
in
dec
sub
sti
mov
and
jmp
xchg
dec
inc
mov
pop
sub
cmp
lret
les
sti
mov
ret
outsl
icebp
ss
pop
mov
int
xchg
jl
push
push
jp
test
shrb
push
xor
cmpsb
ja
push
or
jo
mov
mov
sub
pop
inc
movsb
push
xchg
pop
dec
sbb
data16
icebp
loope
out
notb
pushl
mov
cmp
insb
cmp
movsl
mov
sbb
orl
fstps
sub
dec
inc
shlb
cmp
add
cmc
jns
insb
mov
pop
and
fs
out
dec
dec
es
test
pop
insl
jmp
push
je
aas
push
int
sbb
insb
inc
or
cmp
shlb
pusha
scas
inc
test
mov
and
call
xor
cwtl
sub
sbb
outsl
mov
lods
mov
out
into
nop
add
lds
adc
add
pop
cld
es
and
inc
out
inc
ljmp
xchg
xor
lods
xchg
mov
pop
lcall
hlt
pop
cmp
mov
cs
lcall
rcrb
inc
shlb
xchg
dec
mov
dec
cld
sti
lods
mov
cmpsl
lahf
push
mov
jge
arpl
adc
jp
and
mov
enter
dec
or
add
cltd
roll
out
and
cmp
or
pusha
push
nop
inc
mov
ja
mov
lock
stos
in
push
cmp
or
cmp
addb
test
in
jge
pop
stos
push
mov
sbb
aad
inc
fists
add
gs
sbb
mov
out
sub
js
mov
mov
out
pop
sbb
push
inc
std
addr16
sbbl
fcomi
cmp
jns
fldt
mov
or
sub
lret
lock
test
outsl
inc
xor
js
inc
pop
sbb
mov
push
out
mov
rcrb
and
mov
fstps
aas
and
mov
lcall
cwtl
std
aas
or
sub
loope
adc
test
or
pop
xchg
clc
xchg
sub
daa
scas
fisubs
mov
int
les
adc
mov
int3
mov
dec
lea
ss
in
subl
movsb
inc
icebp
cmp
mov
or
jecxz
int
xchg
cmp
jmp
rcrb
inc
int
mov
enter
sti
mov
mull
sti
loope
xor
mov
or
pop
pop
adcl
dec
push
into
xor
and
jg
in
jns
insb
pop
int
sahf
inc
out
push
cmp
loop
jmp
dec
es
lds
cs
inc
mov
xor
pop
jmp
xchg
jne
iret
mov
rcrl
hlt
sarb
mov
mov
xor
repnz
loope
jo
fisttpll
jne
ss
push
fwait
and
jno
inc
out
mov
repz
sbb
lods
sbb
cmp
sbb
or
mull
mov
in
pop
jmp
push
leave
xlat
mov
movsl
cltd
cwtl
call
and
sbb
rorl
stos
push
mov
mov
pop
in
es
sub
into
inc
sbb
test
leave
push
and
out
bound
cltd
dec
mov
fidivrs
jp
ljmp
inc
and
and
cmp
pop
pop
daa
cltd
je
cli
subl
repnz
push
lds
js
sub
in
adc
xchg
sbbl
add
lahf
sti
mov
mov
stc
or
dec
push
cs
int
adc
mov
fimull
iret
sarl
mov
mov
and
sbb
out
adc
pop
cmp
enter
out
lret
fucomi
inc
call
arpl
mov
rcrb
cmpsl
out
and
pop
xchg
sbb
test
mulb
xchg
insb
scas
sub
pushf
push
mov
mov
sub
aam
cld
lods
lret
in
inc
mov
ss
orb
out
aas
outsb
das
repz
lock
jle
cs
xchg
fisttpll
sbb
push
enter
adcl
xchg
fistpl
mov
call
pop
popa
or
or
out
out
stos
pop
and
push
rclb
lods
jl
inc
ret
mov
pop
cld
dec
inc
fnstenv
iret
fidivl
dec
dec
xchg
pop
pop
rcll
mov
popa
test
movsl
cltd
jbe
cmp
xlat
std
bound
adc
xchg
pop
insb
subl
loope
xor
in
in
enter
subb
dec
in
pop
loope
stos
cmc
or
push
sahf
jae
sbb
mov
pop
inc
repnz
popf
mov
mov
xor
cmp
movsl
add
in
push
xchg
repnz
xchg
out
or
insb
lret
xchg
inc
test
jne
gs
sbbb
bound
stos
pop
iret
and
add
add
jbe
aaa
inc
xchg
cmp
pop
add
test
lock
fmull
aas
sub
das
rcrb
xchg
outsl
mov
cmc
sbb
dec
xchg
fcoms
out
cmpl
dec
daa
int
pushf
test
lods
cltd
jbe
loope
xor
sub
xchg
movb
push
cmp
adc
mov
xchg
sbb
out
gs
cmpl
stos
icebp
lds
dec
inc
pushf
dec
aad
mov
mov
sbb
adc
pop
fsubs
hlt
fcompl
push
fmulp
lods
xor
sub
xchg
rolb
daa
mov
push
mov
popa
fldl
pop
push
push
stos
dec
stc
inc
mov
pop
cld
lock
pop
iret
jmp
scas
jl,pn
cmp
xchg
add
cld
pop
mov
push
xor
ds
ss
scas
add
dec
mov
fwait
call
xchg
mov
verw
lret
xchg
fstpt
mov
lahf
ret
add
insl
xchg
lds
or
or
clc
cli
cmp
xlat
sahf
jmp
adc
int
add
icebp
xchg
or
add
cs
fadds
mov
iret
ss
mov
int
cld
xor
cld
jb
push
sub
sbb
clc
repnz
fldt
xor
or
cmp
jnp
lods
sbb
repz
xor
xchg
int
inc
mov
loope
cmp
bound
loopne
cmpsl
lods
inc
enter
pushf
clc
adc
aaa
int3
fcoms
movups
stos
mov
adcl
add
out
xor
inc
aas
out
nop
jl
and
xor
rorl
xchg
pop
insb
pop
enter
or
icebp
fnstenv
mov
adc
jl
mov
or
outsl
or
out
ljmp
pop
lock
sub
mov
dec
mov
jecxz
mov
push
mov
jo
sahf
test
jb
jo
test
sahf
js
xor
cmc
cld
repz
cmp
dec
dec
cmp
sbb
in
sarb
outsb
pop
mov
push
imul
jbe
int
cltd
dec
psubd
push
adc
in
jmp
mov
insl
stos
cmp
leave
mov
stc
shlb
mov
adc
lret
sarl
pusha
fmul
cmp
test
ret
daa
xchg
int
repz
push
scas
dec
jno
and
xchg
mov
mov
jmp
lods
bnd
inc
adc
pop
pop
cwtl
cmpsl
cmp
dec
iret
mov
pusha
sub
mull
dec
and
gs
rcl
andb
jae
push
mov
mov
scas
iret
inc
mov
add
aad
dec
aaa
gs
mov
lret
pusha
push
or
push
jns
mov
aaa
lods
mov
add
adc
add
out
jno
xor
shll
sbb
mov
pop
xchg
mov
dec
les
push
lods
and
mov
idivb
cmp
daa
or
cld
loope
clc
cmp
pop
or
sahf
jnp
inc
insb
xchg
mov
stos
mov
loop
aad
jbe
ljmp
mov
pusha
mov
jb
pop
shlb
fdivrp
dec
mov
pop
push
cmc
aam
jns
add
xchg
cmp
popa
not
ljmp
mov
lea
cld
pop
push
out
test
fsubl
mov
xchg
and
movsl
xchg
out
inc
mov
cwtl
inc
xchg
xor
iret
pushf
mov
std
mov
sub
movsb
sub
pop
lcall
aas
sar
out
xchg
jb
jge
jns
inc
cmp
cmc
inc
xor
push
inc
cmp
jbe
scas
mov
pop
shlb
enter
arpl
xlat
mov
imul
sub
shll
ds
ret
pop
out
mov
scas
xchg
mov
jo
rclb
add
sub
cmp
sahf
inc
jle
or
insb
pop
mov
jne
mov
lcall
stos
insb
rcl
xor
idivb
and
pusha
pop
adc
xchg
push
xchg
kmovw
fsubrl
stos
inc
pop
hlt
js
xchg
pop
scas
cltd
jecxz
pusha
lock
xor
jecxz
lretw
dec
jbe
jne
outsb
push
loop
ja
pushf
rcrl
clc
adc
stos
or
pop
in
xchg
das
mov
or
or
cmp
loop
iret
cmp
cmp
push
dec
in
repz
dec
insb
stos
pop
arpl
push
mov
int
sbb
fildl
push
mov
lods
out
dec
inc
fimull
add
xor
sub
in
hlt
cmp
and
test
fdivrs
movsb
mov
push
aas
mov
pop
int
or
notl
and
cmp
mov
daa
test
pop
fistpll
jno
sti
sbb
movswl
jns
push
sbb
iret
fsts
rolb
xor
push
gs
mov
push
jns
or
xlat
shll
inc
ljmp
push
jmp
cmpsl
push
mov
cmp
jae
out
mov
mov
arpl
cltd
aas
mov
push
push
aaa
imul
mov
adc
stos
adc
dec
test
fwait
out
pusha
js
dec
adc
ss
pop
stc
movsl
xchg
scas
cs
loopne
popa
incl
out
xor
divl
lahf
mov
mov
sahf
call
pop
add
in
ljmp
fmull
sub
xchg
mov
jo
cltd
dec
jmp
sbb
mov
dec
add
lods
pop
movups
fwait
xchg
lods
inc
inc
sbb
and
cmp
imul
dec
dec
cmp
cmpsl
mov
popf
add
mov
fstps
xchg
pop
adc
clc
in
aas
xchg
xor
jge
sbb
mov
in
outsb
push
cmp
sbb
xor
push
loop
test
stos
add
mov
pop
mov
dec
xorb
gs
loope
mulb
rcrb
addr16
mov
cmpsl
es
and
pop
push
push
adc
jp
inc
dec
data16
sub
lret
mov
mov
repz
scas
scas
adc
xchg
mov
push
xchg
xchg
push
pop
sbb
aad
jmp
data16
popa
jno
ljmp
inc
les
popa
xlat
jno
stos
ds
leave
scas
jbe
ljmp
xor
mov
pusha
add
mov
popa
ffreep
cmp
loope
int
inc
xchg
mov
pusha
sbb
test
add
push
icebp
xor
icebp
xor
adc
push
mov
inc
movsb
sbb
es
fiadds
mov
mov
test
imul
packuswb
cmp
nop
call
jecxz
and
pop
xor
pop
cmp
sub
mov
push
les
in
cmp
mov
xor
adc
jecxz
test
inc
lock
jmp
dec
in
call
mov
sbb
jmp
push
out
loop
push
inc
filds
andb
add
mov
jge
and
mov
mov
mov
lahf
lock
xlat
lret
mov
pop
adcl
or
mov
popf
xchg
std
jnp
lcall
jae
push
mov
ljmp
jne
push
cmp
mov
xor
shlb
and
insl
ret
jo
pop
push
xlat
mov
cmp
push
push
cwtl
mov
outsl
cmpsl
jmp
loop
ss
pop
loop
cld
pop
mov
in
cmp
inc
rclb
inc
enter
push
pop
and
jg
lods
fwait
dec
mov
fimuls
push
push
fcmovu
fdivrs
sbb
cmc
popa
mov
cmpsl
sbb
je
incb
dec
ret
ljmp
adc
addr16
xor
pushf
adc
nop
and
imul
mov
std
ret
stos
sbb
cli
push
jl
sbb
adc
xchg
pop
inc
js
mov
shrb
or
push
in
lods
sbb
outsb
sub
int3
sub
lock
xor
and
cmpsl
mov
push
push
cmp
daa
fistpll
xor
cmc
mov
in
mov
dec
iret
loope
inc
les
cld
xor
push
and
fcoms
mov
testl
pushf
es
lea
shrb
adc
adc
jbe
out
out
sbb
inc
sbb
es
test
push
sbb
insb
into
jb
pop
dec
and
repnz
sahf
add
scas
into
ljmp
ret
dec
pop
add
adc
jmp
in
pop
xchg
mov
stc
lret
adc
jb
das
mov
cli
mov
pop
cli
or
dec
add
jno
adc
fisubrs
inc
pop
mov
loop
or
lcall
and
jnp
ds
jmp
mov
or
gs
scas
sbb
pop
sti
or
jecxz
dec
mov
adc
jns
iret
inc
inc
jnp
cmp
xor
jmp
imul
js
iret
mov
or
mov
out
or
xor
mov
int
jp
loopne
cmp
or
jp
mov
jb
push
mov
jae
stos
dec
lods
mov
sub
mov
add
xchg
gs
xlat
lods
cmp
pop
jecxz
repz
into
mov
stc
pusha
fdiv
mov
lods
mov
jae
dec
es
fst
sbb
dec
and
out
dec
dec
fisubs
jb
pop
jnp
dec
push
fcmovnu
sub
jl
pop
inc
iret
sahf
loop
inc
shrl
sbb
jbe
lret
out
add
cmc
jb
fmull
jno
xor
add
outsl
cmp
std
cmp
mov
pop
pop
lret
rcrb
lret
cmpsl
out
setno
cmp
and
iret
je
or
les
imul
or
and
pusha
je
enter
mov
aas
jae
mov
inc
xor
repz
add
mov
mov
cmp
jbe
dec
leave
adc
das
add
movsb
push
int3
push
cmpsb
lret
pop
fsts
aas
out
and
pop
mov
iret
stc
cmpsl
ret
xchg
inc
icebp
cmp
xorl
xlat
pusha
hlt
mov
test
xchg
mov
add
and
mov
cmp
jecxz
xor
mov
or
js
inc
jle
xchg
popf
scas
pushf
inc
sbb
and
repnz
or
dec
loopne
inc
jno
mov
repnz
out
xlat
addr16
cmp
push
mul
insl
dec
jno
mov
or
lret
and
rcrb
or
ja
int
stos
sahf
iret
dec
and
cld
sahf
push
imulb
dec
ret
xchg
repz
cmovge
aad
shr
and
mull
cmpsb
sub
outsb
shll
xor
stc
dec
aad
xor
inc
sarl
add
and
ds
roll
test
loopne
cmp
dec
cmc
pusha
push
movsl
int3
fisubrl
scas
in
lds
dec
repnz
mov
xchg
clc
les
int
fstps
lea
or
push
adc
and
and
xchg
pop
dec
sub
leave
push
inc
repnz
outsb
pop
icebp
loopne
add
test
cmp
mov
mov
test
das
cwtl
aaa
gs
outsl
lea
lahf
sahf
pop
icebp
daa
test
mov
fdivrl
mov
jbe
add
ds
cld
adc
push
cltd
cmp
push
jg
push
shr
push
pushf
cmpsl
mov
add
fimull
insb
sti
movsb
and
daa
iret
push
adc
sahf
xor
xchg
or
test
clc
dec
enter
mov
cltd
test
mov
mov
pop
hlt
add
xchg
jns
stos
stos
or
gs
lahf
jbe
test
add
pop
xchg
jbe
jg
js
ss
sar
mov
push
dec
je
daa
test
movsb
mov
and
cli
stc
inc
mov
ja
mov
lret
push
pop
mov
mov
scas
jl
cmp
xor
shr
int
dec
adcl
lahf
sbb
and
pop
pusha
mov
mov
adc
or
xor
cld
mov
and
xlat
jb
sbb
cmpsl
cmp
pop
rclb
lret
mov
imul
arpl
or
mov
xor
adc
mov
jecxz
bound
fsincos
sub
pop
lret
or
xor
test
adc
push
inc
sbb
pop
pop
xor
aad
or
in
lods
adc
js
mov
mov
arpl
xchg
fstpl
sub
faddp
pop
lds
sub
jg
and
mov
pop
mov
or
rol
pop
mov
lods
imul
cmp
push
xor
sub
es
std
notl
push
sbb
mov
movsl
testb
int
jns
sbbl
ficompl
cld
pop
inc
push
push
push
repnz
stos
les
mov
fiadds
gs
and
or
cmp
cmp
sbb
xor
decl
jno
imul
into
pusha
dec
pop
subl
jge
lahf
into
outsb
sub
insb
push
nop
cs
push
xor
xor
xor
movsb
sbb
cmpsl
aam
mov
jl
sbb
push
arpl
sti
test
fnsave
stc
popa
sbb
cmp
aam
dec
mov
nop
sbb
xchg
fbstp
data16
in
jno
sub
mov
pop
mov
add
dec
jle
das
xchg
jg
repz
dec
mov
addr16
mov
and
mov
jge
mov
aas
push
push
ret
inc
fs
andb
fdivrl
sub
dec
jno
sarb
mov
or
and
faddl
xchg
bound
leave
jp
xchg
xchg
xchg
mov
clc
inc
mov
cs
xor
cmp
lcall
xor
inc
inc
lds
test
imul
les
sub
push
sub
test
test
rcr
arpl
call
inc
mov
sub
clc
scas
mov
xchg
mulb
sbb
into
sbb
cld
or
fisttpl
lcall
loopne
js
cmpsl
test
popf
jl
dec
das
flds
dec
ss
cmp
fwait
adc
pushf
call
repz
fbld
cmp
jmp
cwtl
add
push
jae
cltd
lahf
push
bnd
mov
ret
sbb
pop
test
ja
cmpb
clc
mov
add
xchg
and
mov
sarl
push
dec
aam
dec
xchg
sbb
pop
inc
fs
bound
or
jecxz
lods
jae
ljmp
adc
divl
rcrb
jmp
xchg
pop
inc
xchg
cmp
inc
xchg
cmp
incb
fmuls
fwait
aad
ja
push
dec
es
loopne
push
mov
out
outsb
and
imul
int3
stc
push
daa
cmp
add
js
in
lcall
or
aaa
arpl
adc
xor
enter
test
negb
mov
aam
divb
xlat
cs
pushf
dec
leave
mov
mov
movsb
inc
mov
push
cmp
fistl
and
scas
cs
in
or
lock
xor
push
xchg
das
sarl
xchg
sbb
out
rcrl
mov
sbb
rorb
pop
sub
stos
mov
gs
test
xlat
xchg
popa
pop
cwtl
cmp
cs
push
mov
inc
adc
mov
add
fimull
andl
fstpl
and
or
leave
cwtl
push
pop
in
lret
mov
adc
cwtl
in
mov
sub
test
inc
test
add
mov
aam
popf
sbb
gs
je
lds
push
pusha
and
add
xchg
or
jge
sti
jns
xor
push
or
ror
data16
mov
pop
fstpt
sub
mov
mov
mov
add
cmp
xor
lahf
jo
notb
dec
icebp
xchg
mov
jae
dec
outsl
adc
movsb
add
or
and
vpmacssww
cld
xchg
clc
xor
and
test
xchg
lods
fsubs
in
jae
or
cmpsb
mov
mov
cmc
cwtl
or
pop
push
out
lds
pop
pushf
iret
mov
jb
sahf
cmp
stos
cltd
clc
outsb
sbb
ss
xchg
xchg
les
cwtl
cwtl
jl
iret
jg
dec
ficompl
shl
xlat
rcrb
int3
add
sub
insl
test
testb
das
incb
jnp
sbb
xchg
loop
je
daa
imul
dec
test
stc
int
jno
in
incl
into
or
and
call
mov
xchg
sahf
cmp
jns
inc
sbb
push
pop
dec
mov
adc
add
and
shr
enter
cmp
insl
mov
gs
push
movb
lock
inc
mov
mov
and
cmp
imul
push
inc
mov
mov
hlt
jle
das
mov
iret
xor
insb
mov
scas
pop
iret
ret
pop
xchg
in
iret
ss
cmp
fisttpl
mov
mov
sahf
jp
pop
mov
shl
cmp
and
xchg
jns
jge
cli
sbb
cmp
mov
call
inc
scas
mov
insb
add
loopne
lods
into
mov
orl
jno
fsubrs
dec
sahf
shl
fdivrs
adc
out
test
push
lds
pop
mov
mov
aaa
fwait
inc
adc
aaa
and
test
xor
cwtl
push
mov
mov
cmp
movsl
xlat
mov
sbb
cmp
lock
xchg
dec
fdivrs
add
sbb
jle
inc
loopne
jecxz
push
negb
mov
inc
lock
mov
or
jo
addr16
mov
cs
and
std
lahf
repz
or
shr
repnz
repz
pusha
jg
xchg
sahf
pusha
and
ss
mov
jbe
mov
xchg
repz
testb
xor
push
push
dec
jne
sub
int3
shll
dec
inc
xchg
cmp
sar
dec
inc
daa
fdivs
movb
ret
inc
sub
fildll
and
mov
xchg
cmp
sub
leave
xorb
enter
mov
dec
jnp
cmpsl
sub
repz
dec
cwtl
outsb
sahf
xchg
dec
jmp
js
push
enter
or
lds
gs
je
ljmp
sub
pop
xchg
push
dec
adc
pusha
push
push
push
sar
add
mov
mov
popa
xchg
adc
xchg
xchg
sub
cmp
movsb
icebp
mov
jno
aaa
pop
jo
push
std
dec
jns
hlt
or
mov
pop
xchg
lahf
fisttpll
ja
xchg
int3
mov
jbe
icebp
jns
ret
sti
ret
pop
andl
xchg
je
ljmp
in
shrb
ss
jmp
fdivp
lods
test
rorb
dec
xor
xchg
test
mov
jb
mov
xchg
and
adc
enter
or
mov
xchg
nop
pushf
jge
inc
dec
mov
aaa
in
mov
xor
sbb
push
xchg
int
fdivl
rcll
xchg
and
loop
call
mov
aas
xchg
or
push
pop
popa
inc
xor
sbb
xchg
cmp
clc
mov
pop
xor
in
test
lea
rcll
cmc
cmp
pop
dec
dec
aam
push
or
popf
or
out
sbb
and
int
outsb
sbb
jb
scas
outsb
jl
lds
sbbl
jne
add
dec
mov
pop
fiaddl
ds
xchg
and
cmc
xor
xchg
jae
int3
sub
mov
pop
or
lea
xchg
sub
stc
sub
jmp
xor
inc
lods
test
jmp
lcall
mov
mov
dec
ja
cltd
js
mov
add
test
scas
push
das
fwait
or
jbe
and
adc
or
sbb
mov
pop
cmp
sbb
fs
outsl
mov
hlt
daa
pop
fnstenv
xor
fisubrs
mov
inc
cmp
jno
scas
pusha
mov
mov
mov
data16
mov
xchg
mov
pop
mov
stos
and
aam
xlat
in
push
mov
in
lds
sbb
cmpsb
sbbb
push
push
arpl
in
pop
or
jne
ljmp
popa
popa
mov
scas
fsts
arpl
sub
sub
lret
jmp
adc
mov
mov
stos
mov
cmp
das
mov
loope
push
insl
push
xchg
or
jo
lret
xchg
jno
stos
test
jae
push
out
push
push
xor
aam
and
cmp
pop
inc
cmp
sbb
sub
xchg
mov
push
les
inc
cltd
inc
loope
push
pushf
divl
in
cld
aas
xchg
out
cmpsl
or
movsl
xchg
test
clts
cmpsb
mov
ss
mov
or
jmp
stos
pop
mov
decb
notl
lods
cmc
mov
std
add
inc
iret
and
lods
sub
das
sbb
push
jge
shll
sub
ret
rorb
in
mov
inc
jmp
ficoms
cmc
fwait
cmp
push
adc
jae
call
xchg
cmp
jmp
jl
mov
aaa
sarl
and
sub
clc
add
iret
loop
pop
negw
lods
push
jno
out
lods
xchg
shlb
mov
push
add
sbb
aaa
pop
std
pop
shll
mov
or
inc
dec
cmp
sti
insb
leave
inc
movsb
mov
xor
mov
xor
in
or
fidivl
sbb
and
cmp
outsl
sbb
sub
out
test
inc
rcll
push
or
lock
adc
les
mov
scas
aas
inc
and
mov
in
mov
xchg
cli
rorb
ret
stc
xchg
pop
fnstcw
testl
repnz
arpl
or
es
aam
jp
jne
jg
stc
jecxz
xchg
pop
mov
std
mov
ja
mov
mov
and
mov
jmp
test
in
push
add
mov
jnp
xchg
mov
xlat
icebp
cmp
repnz
adc
xchg
cmp
shr
push
hlt
pop
lods
adc
test
aam
iret
scas
inc
movsb
mov
mov
add
mov
or
rclb
mov
jae
jbe
push
jle
stc
mov
jb
cmp
mov
xchg
inc
sbb
sbb
ss
add
pop
inc
push
in
inc
jmp
xor
decb
xor
pop
jmp
mov
mov
mov
push
push
in
popa
icebp
push
cmp
cwtl
out
imul
xchg
cmc
sbb
in
dec
jbe
test
pop
in
jb
adc
mov
ret
pop
std
lock
xchg
sahf
sti
adc
lds
cmp
push
dec
pop
scas
lea
sbb
sub
rorb
mov
and
add
int
pop
xchg
mov
add
lret
add
rorl
sub
jb
sti
cmp
mov
outsb
xor
xchg
lcall
jae
fistpll
cmp
out
jb
sti
fwait
dec
in
int3
hlt
push
cmpsb
jo
jmp
pop
sti
mov
pop
iret
jnp
pop
sub
mov
cmp
and
aas
inc
inc
pop
mov
stc
movsl
xor
int3
rcrb
xchg
inc
sbb
dec
push
out
cmc
cmp
inc
aam
pop
cmpl
mov
shll
jl
cld
cli
aam
loop
stos
rorb
sub
ja
sbb
xchg
ja
int
dec
out
in
cmpsb
mov
pop
xor
lahf
jl
lds
js
sbb
cwtl
movsl
push
mov
and
dec
pop
jle
jae
cmp
lods
or
fsubrs
bound
loop
std
xchg
sub
cmp
push
cltd
pusha
stc
loopne
sti
cmpsl
imul
arpl
daa
enter
sbb
cld
pop
sbb
cmpsb
pusha
popf
loopne
fsubr
mov
icebp
adc
pop
and
out
insl
aaa
and
mov
hlt
jle
mov
add
cmp
imul
imul
push
pushf
dec
aam
popw
add
cmp
jns
cmc
xor
enter
mov
pop
cs
jae
fs
ret
sbb
mov
pop
shlb
dec
stos
xor
push
aaa
push
or
pop
test
shlb
jle
inc
rolb
bswap
mov
pop
cmp
push
push
xchg
and
jno
shll
adc
or
mov
xchg
pop
arpl
push
push
call
inc
and
push
dec
js
out
pop
test
inc
jp
pop
shlb
sub
push
push
mov
outsb
hlt
lock
insl
jns
mov
test
jmp
pop
push
roll
out
out
or
or
pop
movsl
mov
cmp
arpl
push
mov
nop
jno
cld
push
cli
fistps
add
mull
add
push
mov
pop
dec
mov
insl
xchg
das
je
daa
mov
dec
cmp
cmpsl
xor
repnz
sub
lea
xor
push
jmp
bound
test
mov
push
aas
shll
add
jnp
popa
pushf
mov
sub
cmp
push
es
fcoms
cmp
mov
jp
push
enter
dec
inc
aaa
mov
xor
in
pop
ficomps
or
daa
pop
popa
sbb
incl
aaa
jp
xor
loope
cmp
cmpsl
in
mov
jg
or
mov
or
into
xchg
fst
pop
sahf
imul
pop
push
test
roll
xor
dec
ss
ret
cwtl
call
cmc
andl
out
lods
sbb
cmp
pop
out
ds
dec
dec
mov
mov
sbb
mov
sbb
pop
sub
fnstsw
dec
xor
mov
lods
fisttpl
push
sbb
out
mov
and
cmp
pop
int
push
sub
mov
ffree
mov
pop
or
sub
ret
sbb
mov
imul
jne
std
sub
pop
repnz
aaa
gs
mov
mov
mov
adc
xor
xor
fdivp
mov
pop
or
nop
iret
lret
es
jno
cs
mov
xchg
lret
dec
jmp
xchg
pop
dec
push
in
mov
je
dec
xchg
add
xor
popf
cmp
jns
cmp
imul
mov
leave
lds
push
shlb
ljmp
fmuls
push
movsl
in
cmpsl
loopne
or
test
mov
pop
sbb
f2xm1
xor
data16
jne
mov
insl
fimuls
setno
stc
ds
jbe
call
leave
push
mov
or
lock
cmp
mov
jne
pop
rorb
inc
sub
jecxz
pop
mov
es
notb
out
dec
inc
into
mov
pop
mov
jg
or
push
daa
enter
in
push
ret
je
or
lods
add
rclb
dec
orb
lds
sub
std
jno
push
adc
outsb
sub
sub
xchg
pmulhuw
sub
es
xlat
xor
push
and
inc
cmp
cmp
imul
popa
and
mov
in
push
ds
jns
jmp
test
pop
js
and
push
iret
sub
cmc
lret
jl
ret
andb
cmc
mov
out
jg
mov
testb
dec
sbb
je
ljmp
sub
rcrl
gs
mov
test
jg
test
sti
insl
dec
daa
loop
pushf
mov
addr16
gs
pusha
imul
jmp
fmuls
loopne
shll
inc
call
jnp
xchg
fldenv
add
dec
inc
data16
int
sub
scas
xchg
sti
arpl
sar
adc
push
xor
jnp
cmp
fstpl
in
sbbb
je
rclb
cs
loopne
mov
pop
pop
les
sarl
sbb
arpl
out
aaa
jle
jmp
sub
adc
mov
popf
inc
movsl
jno
and
mov
loope
outsb
pop
xor
dec
sahf
lock
mov
aas
cmp
inc
std
xlat
testb
stos
sub
push
lods
ljmp
jp
dec
jge
dec
ja
cmp
dec
scas
inc
mov
pop
test
insl
in
and
fmull
push
jle
ret
fstpl
cmp
xchg
dec
daa
fsubp
scas
shrb
or
mov
mov
jmp
std
xlat
mov
out
ret
or
and
test
ret
in
cmp
mov
or
mov
out
imul
lahf
add
or
pop
dec
pop
add
adc
fisubs
orb
mull
jl
shrl
pop
pop
ja
into
push
js
mov
notb
xor
loope
mov
mov
xchg
sti
jle
test
dec
jb
aam
pop
cmp
and
and
jmp
lock
add
cltd
push
mov
movsb
fs
ret
dec
mov
call
jb
xorb
pop
scas
popf
stos
mov
and
inc
push
or
out
inc
mov
cmp
jo
push
lret
xor
jns
aaa
or
sbb
cli
inc
testl
fiadds
push
test
mov
jb
mov
push
inc
pop
inc
push
sbb
mov
gs
repz
push
fbld
pop
fsubs
scas
orb
in
dec
dec
or
iret
in
inc
sbb
ds
sbb
xchg
cmp
rcl
mov
imul
mov
mov
jmpw
xchg
xchg
rcll
jo
shlb
xor
jo
adc
jg
mov
push
cmp
idivb
das
mov
fsubp
push
jg
pop
ffree
cmp
icebp
xchg
repnz
js
insl
out
and
bnd
mov
xchg
dec
mov
inc
lahf
xchg
add
sets
push
dec
add
xchg
rcrb
sub
dec
add
mov
xor
jbe
mov
hlt
jnp
std
mov
pop
dec
aam
clc
ja
insb
xor
repnz
or
addr16
jae
iret
int3
inc
sub
push
lock
inc
adc
push
inc
xor
cmpb
mov
cmc
push
inc
and
je
ja
das
dec
xor
inc
ret
ret
mov
and
or
imul
mov
and
cmp
xchg
pop
push
andl
lea
data16
aaa
in
pop
fimull
push
mov
add
cmp
pop
inc
out
push
shll
push
xchg
dec
pop
arpl
mov
adc
adc
jnp
xor
nop
jp
mov
ljmp
sbb
add
fists
into
ror
cmpsl
and
das
mov
gs
xor
pop
bnd
insb
mov
push
cli
insb
je
sub
int
mov
inc
or
xchg
adc
jg
out
cmp
jnp
lods
out
adc
popa
mov
push
jae
sar
mov
sets
push
mov
aaa
fsubs
ds
lods
push
lret
mov
xchg
leave
sbb
adc
mov
sbb
cmp
jmp
mov
mov
mov
dec
cld
movsl
lods
jmp
fcomps
repnz
cli
mov
mov
jle
aas
lds
cwtl
jb
pusha
jbe
xlat
movsb
sub
dec
pcmpeqb
mov
daa
adc
in
xchg
sarl
lods
sub
xchg
insl
push
sbb
pop
xchg
xchg
inc
inc
cmpsl
mov
mov
aam
xchg
pop
or
jo
dec
cmpsb
dec
dec
cld
mov
pop
push
rcrb
popa
push
jge
push
lods
mov
inc
lret
add
add
leave
pop
aam
jae
and
push
mov
lret
pop
mov
dec
jp
out
mov
jne
xchg
outsb
hlt
jmp
rcrl
iret
cs
xlat
xlat
imul
out
or
mov
pop
in
jmp
xor
push
mov
icebp
mov
xor
mov
adc
add
xchg
and
adcl
push
adc
test
mov
es
xchg
inc
add
adc
inc
test
or
xchg
lock
addb
and
stc
gs
ss
inc
jle
je
mov
cmpl
and
arpl
cli
loop
xor
mov
in
mov
std
repz
ljmp
pusha
hlt
fldenv
pop
fstl
es
xor
ret
jge
lods
subb
inc
mov
jle
mov
and
mov
mov
roll
add
ficoms
rol
dec
inc
cmp
jg
pop
icebp
pop
mov
dec
lods
inc
ja
jne
syscall
add
inc
or
mov
lret
xor
shrl
jnp
xchg
jo
ljmp
inc
push
xchg
mov
aad
rep
shrb
dec
xchg
outsl
icebp
fnstenv
lret
out
rcrb
xchg
or
shlb
outsb
fidivs
adc
jbe
movsb
jbe
addl
and
mov
fwait
into
mov
enter
add
testl
or
mov
outsb
pusha
adc
jecxz
std
mov
in
pop
test
jo
out
sbb
inc
or
shr
cltd
inc
lahf
lcall
dec
out
jle
mov
mov
mov
gs
shlb
pop
fcomi
sub
xchg
shlb
or
xor
pop
dec
xchg
or
nop
sub
xchg
es
rolb
cld
into
xor
push
adc
lods
add
les
inc
jecxz
xor
mov
dec
ja
xchg
iret
icebp
adc
int3
sbb
jp
xchg
lret
out
and
fucom
pop
data16
xchg
push
cld
pop
mov
push
outsb
jae
inc
inc
jge
std
xor
imul
xor
xor
cmc
or
or
icebp
and
ret
xorl
mov
dec
xchg
clc
ss
xchg
and
repnz
test
mov
das
add
sbb
dec
loope
add
insb
mov
push
mov
mov
hlt
add
sbb
sbb
pusha
dec
mov
test
ljmp
pushf
pop
mov
mov
push
arpl
cmp
cmp
inc
jo
add
in
mov
iret
dec
sub
lret
dec
shl
nop
adcb
imul
jo
cmp
inc
std
roll
hlt
push
xchg
mov
jge
in
jb
repz
pop
sbb
out
push
pushf
sahf
ficoms
stos
pop
clc
mov
jae
hlt
cli
icebp
jmp
adc
sbb
ret
addr16
sub
jp
insl
in
fiaddl
es
scas
mov
mov
les
push
lcall
sub
fwait
xlat
sar
dec
mov
movsl
inc
clc
cmp
inc
stos
lds
test
jns
mov
jle
mov
stc
popa
push
aaa
xor
mov
push
dec
lret
gs
shll
mov
or
in
shrb
outsb
nop
clc
sarl
in
push
sbb
pop
xchg
push
fwait
scas
out
xor
mov
jecxz
outsb
repnz
pop
ljmp
sbb
test
xor
test
inc
push
adc
xchg
xorb
and
jb
enter
popf
sbb
ss
iret
mov
gs
cmp
ror
daa
into
lods
es
inc
fistps
movsb
or
jno
fisttpll
jns
adc
in
mov
ror
lcall
aaa
sub
and
out
scas
pop
lahf
xchg
mov
pminub
das
mov
movl
lret
push
adc
cmp
ljmp
fwait
das
out
mov
push
adc
clc
scas
inc
sub
cli
out
and
inc
mov
lods
push
repz
enter
sbb
addl
ds
and
add
or
insl
out
mov
push
cmpsb
dec
mov
mov
add
mov
push
mov
ljmp
adc
mov
jge
mov
or
fbld
ret
pop
mov
mov
fisubrs
add
sub
or
lods
mov
pop
lea
scas
insl
dec
sti
mov
fdivrl
pop
cltd
add
adc
xchg
je
in
jecxz
enter
mov
cld
test
mov
in
stos
xor
test
fisttpl
xor
stos
pop
dec
and
push
mov
fucomip
fisttps
cs
and
adc
sti
jae
cmc
in
dec
xchg
orb
mov
rcll
inc
jg
popa
movl
repnz
cmp
jo
std
or
mov
or
inc
fld
in
fidivrl
jle
jmp
jle
adc
outsb
jbe
test
js,pn
ljmp
jne
rep
mov
rcr
mov
nop
insb
jge
fidivrl
jge
push
mov
fcmovb
addl
into
fildll
xchg
nop
test
inc
xor
cld
xor
adc
cmp
movsb
hlt
call
mov
test
add
jg
mov
adcb
adc
mov
mov
pop
xchg
mov
cmp
stos
cld
xor
call
std
in
les
push
lea
cwtl
sub
sbb
mov
repz
icebp
add
test
not
push
lods
sub
outsl
push
std
clc
jecxz
addr16
data16
fwait
decl
inc
lods
mov
cwtl
das
iret
and
mov
add
mov
cltd
cmpsl
add
xchg
jle
ja
xor
push
rorb
dec
imul
xor
mov
stos
add
add
rcrl
mov
test
and
bound
and
je
stos
fcmovnbe
es
pop
test
data16
mov
jg
or
dec
pop
in
roll
lods
lahf
sti
adc
fs
dec
pop
jmp
dec
cs
push
mulb
roll
repz
push
inc
into
jmp
cmpsb
ret
dec
jmp
cmp
mov
neg
mov
sbb
icebp
fbstp
dec
fidivrs
jne
xchg
jge
xchg
outsl
and
call
leave
js
lods
in
xlat
mov
test
outsl
dec
pop
stc
inc
or
subb
sbb
or
imul
imull
xchg
into
lock
mov
xor
xchg
sti
loopne
lods
fldt
addl
call
dec
in
xor
cmp
sahf
aaa
dec
jecxz
cli
mov
idiv
jb
mov
xor
popf
test
mov
add
add
mov
out
mov
int
inc
test
nop
aas
or
push
lahf
xchg
dec
inc
outsl
push
dec
lahf
xor
repnz
insb
cli
imul
adc
divb
rcll
push
mov
cmp
lahf
popa
leave
loopne
cmpsl
scas
xor
push
orb
femms
jnp
aad
fsubl
mov
scas
xor
movb
mov
mov
push
cmp
mov
in
xchg
das
jg
in
push
pushf
lcall
lods
mov
mov
mov
add
or
aam
sti
pop
jns
stos
shlb
cmpsb
mov
xchg
lock
push
out
pop
and
in
adc
mov
inc
and
sub
cwtl
roll
lret
mov
pop
fidivrs
mov
mov
or
lds
icebp
adc
je
inc
fstpl
in
mov
popa
inc
push
xor
sub
jl
jno
insl
or
out
dec
cltd
and
mov
sub
push
repz
cmp
xchg
insb
pop
mov
jl
jmp
icebp
adc
mov
mov
xor
sbb
or
loope
add
sarl
test
xor
nop
or
and
call
testb
sbb
fs
ja
icebp
dec
repz
rolb
mov
imul
fisttps
mov
adc
movsl
cmpsb
lret
and
fisubs
sub
fisttps
ret
add
mov
sti
cmp
push
mov
stos
and
ljmp
sub
aaa
insb
pop
mov
rclb
pop
addr16
dec
lods
xchg
pushl
repz
xchg
leave
fldt
cmp
or
adc
mov
fnstsw
cmp
popf
gs
icebp
sbb
test
pop
push
xchg
data16
addl
scas
hlt
sub
dec
ds
outsl
lret
xchg
pop
cmp
lock
insl
mov
push
xchg
sahf
les
sbbl
mov
dec
mov
mov
sbb
dec
adcl
mov
or
cmp
ljmp
cltd
insb
pop
jmp
sbb
inc
mov
ret
xchg
test
xchg
fnclex
enter
push
fldenv
xor
loop
jo
stc
lock
cmovg
ss
jo
xchg
mov
fs
mov
push
jnp
push
push
int
sub
in
jno
sub
mov
ljmp
mov
and
jne
dec
push
das
int
movsb
xchg
fiaddl
add
pop
or
fsts
or
mov
or
in
ljmp
sbb
mov
push
cmp
or
xor
mov
lods
rcrl
pop
and
mov
fistps
sti
sbb
lock
mov
in
push
mov
lea
popf
test
sub
pop
lret
leave
fcmovne
mov
in
call
insl
mov
leave
push
jne
cmc
mov
inc
xor
rcr
push
push
xchg
jbe
cld
jns
sbb
ja
fcomip
in
jge
ss
cmp
movsl
ljmp
cltd
lcall
out
adc
test
dec
lret
cld
cmp
inc
mov
movsl
sub
ror
out
and
movsb
mov
or
mov
popa
sub
inc
test
xor
push
xlat
js
xor
add
insb
and
popa
shl
mov
push
xlat
and
sub
xchg
out
mov
lcall
xor
scas
in
inc
sub
les
add
jo
sub
adc
outsl
pop
jmp
push
scas
imulb
cltd
or
rep
mov
push
lret
popf
leave
jbe
jmp
cmp
nop
cmc
jbe
sub
mov
xchg
repz
dec
mov
fsubr
mov
adc
xchg
adc
push
push
xor
jge
ljmp
gs
cld
je
ret
inc
icebp
insb
jmp
stos
sbb
ljmp
xor
mov
stos
lcall
out
lret
cmp
lock
mov
cltd
rol
ret
push
test
and
hlt
lahf
test
enter
cmp
and
sbb
dec
mov
mov
mov
neg
sub
cmp
fstps
and
pop
jp
shr
and
das
notb
xor
fcomps
adc
shl
rcrl
dec
cmp
js
jecxz
movsl
gs
sti
outsb
iret
decl
in
mov
xchg
lcall
ja
mov
mov
mov
xor
out
adc
lahf
cmp
adc
adc
mov
lea
inc
mov
push
jns
mov
movsb
test
je
mov
xchg
lret
hlt
xchg
sub
outsb
scas
shlb
inc
push
stc
or
or
cmp
pop
jbe
jg
movb
mov
sbb
sbb
in
jl
pop
xor
loopne
xchg
xchg
add
lahf
rcrb
ret
dec
lcall
mov
pop
mov
insl
insb
pop
mov
xor
mov
jbe
xor
es
xlat
repz
add
or
mov
mov
into
loop
movsb
popf
mov
xor
popa
aas
loopne
fimull
rcrl
jmp
fcmovnb
mov
jae
mov
pop
mov
ss
scas
cld
out
and
iret
out
pop
cmp
pop
in
or
pop
loopne
aaa
pop
out
xchg
fs
xchg
dec
cmp
adc
bound
mov
adc
pusha
adc
cld
shr
sub
mov
mov
pop
cltd
fdiv
imul
sub
xchg
push
xlat
pop
jo
adc
mov
inc
outsl
icebp
jg
loop
adc
jg
push
jo
jbe
rcll
dec
lock
addr16
sbb
mov
jp
pop
inc
lret
test
ss
mov
dec
rcrb
mov
and
push
sub
es
push
js
aam
and
xor
pop
lret
pop
mov
testb
cmpsl
pusha
or
fstpt
mov
mov
fldt
add
lds
rcll
mov
lahf
pusha
hlt
add
jns
test
mov
out
jmp
das
inc
cmc
xor
jmp
rclb
and
xor
idivb
xchg
sub
cmp
add
or
sub
xchg
push
stos
insb
pextrw
or
ljmp
push
adc
dec
push
jmp
pop
jl
nop/reserved
imul
or
lea
fcomps
mov
adc
cmpsl
sti
sbb
sub
push
mov
test
or
mov
test
imul
mov
sbb
mov
inc
out
xchg
bound
dec
jge
xor
pusha
call
push
adc
push
mov
mov
imul
adc
lods
test
pop
pop
stos
jmp
inc
pop
movb
sbb
mov
push
fwait
pop
pop
jg
inc
cmp
mov
sahf
push
addb
test
icebp
ljmp
nop
mov
ffree
leave
popf
out
jge
push
outsb
popa
es
movsb
loop
in
dec
jno
inc
int3
sbb
lret
cmp
out
sahf
push
mov
test
pushf
adc
cli
aad
roll
inc
sbb
ret
add
dec
hlt
mov
xchg
xor
fisttpl
mov
mov
pop
pop
imul
mov
ljmp
out
sub
cs
and
int3
into
xchg
lcall
dec
and
cs
leave
in
data16
xchg
dec
cld
pop
inc
popf
fsubr
movsl
cmp
outsl
mov
fcoms
pop
fsubl
or
xchg
dec
add
pop
int
jecxz
rcrl
rolb
in
sbb
mov
ja
aad
jno
dec
cmp
push
or
add
jno
pop
cwtl
mov
rcrb
add
xchg
pop
call
mov
call
and
fldt
sub
test
test
mov
xor
js
xchg
push
pop
aas
push
pop
cmpl
js
enter
jle
push
jb
pop
adc
or
std
cmp
cmp
insb
xchg
ret
dec
adc
or
xchg
xor
push
sbb
test
jae
addr16
adc
jbe
or
jmp
dec
in
daa
xor
fdivr
hlt
insb
jbe
bound
mov
and
mov
arpl
add
stos
and
xlat
lcall
mov
inc
cmp
test
mov
inc
inc
lods
mov
fisubs
inc
negb
mov
sbb
pop
and
jns
and
dec
cld
cmp
popf
popf
add
mov
lahf
int
scas
or
imul
sub
mov
gs
icebp
cmc
gs
cmp
xlat
outsl
cmp
and
cmp
fimull
jp
xchg
mov
jg
stc
add
shr
push
jl
dec
repnz
dec
push
clc
js
xor
xor
or
cltd
mov
sbb
or
out
xor
dec
repz
add
or
inc
cwtl
and
addb
jp
dec
loop
sti
imul
add
mov
jb
xor
adc
add
add
jo
add
out
addr16
or
cmp
or
pop
mov
aaa
je
mov
pop
dec
lret
xor
leave
scas
jne
ds
xchg
jmp
xor
sbb
jge
imul
cmpsb
roll
xor
out
addb
cs
dec
cmp
shll
sub
inc
push
xor
icebp
cmpsb
inc
filds
nop
sahf
sbb
mov
sub
pop
jle
add
and
mov
mov
push
xor
sbb
setl
adc
arpl
insl
push
testb
aaa
sub
mov
cmpsb
leave
or
nop
fsts
pop
lret
xorl
shll
and
movsb
or
pushf
jl
icebp
ss
enter
loope
stos
mov
or
sub
dec
insb
icebp
mul
loop
dec
stos
pop
mov
adc
and
pushf
stc
and
sub
xchg
adc
push
out
jge
rcl
test
push
push
es
outsb
sub
scas
lea
adc
inc
and
xchg
enter
mov
test
inc
sub
pop
dec
jmp
ret
fxch
aas
jb
push
bnd
pop
call
mov
lock
pop
stos
ljmp
pop
and
out
xor
dec
addr16
fxch
mov
mov
dec
push
xlat
cli
pop
xor
decl
jae
fs
lret
sub
leave
push
divl
dec
jnp
shl
mov
icebp
xor
mov
aaa
sbb
or
popa
xchg
aaa
xchg
xor
aad
push
or
xor
aad
lock
sub
pop
fwait
sub
loop
les
adc
inc
cmp
push
and
jne
sbb
push
jo
icebp
cmp
dec
scas
add
or
sub
popa
and
sub
mov
enter
mov
lcall
in
mov
mov
xor
jb
cmp
ds
dec
add
sbb
jb
fiaddl
inc
and
pop
loop
adc
icebp
dec
loop
push
fsubs
cmp
sub
inc
dec
dec
decl
popf
mov
lds
aad
das
in
sub
filds
mov
jmp
imul
imul
sbb
inc
push
frstor
dec
mov
xchg
fcoml
mov
dec
aam
ds
pop
faddl
pusha
movsl
mov
popl
sbb
out
into
mov
sti
loopne
sub
test
mov
adc
loope
and
aas
mov
jp
repz
scas
sbb
cmpb
pop
sti
imul
inc
mov
loopne
roll
pop
dec
shll
sub
xor
subl
mov
xchg
push
imull
aas
out
out
in
orl
and
test
psubb
mov
sbbl
arpl
xlat
sahf
or
cmp
aam
jecxz
xor
arpl
push
lds
cli
jle
inc
das
loope
and
add
adc
dec
fnstsw
dec
fs
xchg
mov
add
aad
movb
ljmp
cli
aas
jnp
mov
loop
int
clc
mov
cld
sahf
outsl
xlat
or
lds
sbb
mov
sub
pop
mov
das
xchg
cmp
cwtl
int
in
jne
push
mov
out
bound
rorb
mov
ja
mov
sbb
inc
pop
cmpsl
mov
mov
in
xor
pop
cs
adc
iret
adc
fidivs
loop
mov
out
fdivr
aad
cld
cmp
sub
xchg
lret
clc
xchg
xor
mov
sbb
aad
lods
out
popf
pop
cs
inc
ret
test
stos
pop
xchg
cmp
movsl
and
cmpsl
mov
mov
mov
add
popf
mov
xchg
jle
fldcw
dec
in
xchg
adc
addr16
scas
and
xchg
xor
dec
add
mov
std
add
or
and
or
push
ror
xlat
or
jp
dec
imul
outsb
in
rorl
sbb
jb
jo
pusha
cld
xlat
dec
mov
ss
mov
inc
inc
imul
in
aam
jl
adc
mov
xor
push
popf
movsb
in
int
lret
jecxz
cmp
out
mov
shll
pushf
cmpsb
adc
pop
hlt
cmpsl
insb
dec
jno
jp
and
pushf
aas
sbbb
mov
and
jl
mov
ja
xor
out
rorl
imul
addr16
xor
mov
mov
jl
add
push
in
dec
test
jle
jecxz
fucomip
loop
sub
jmp
xchg
inc
xchg
push
jo
clc
and
sbb
roll
inc
inc
clc
lret
jnp
aam
cli
mov
cli
mov
cmp
sub
mov
xchg
icebp
popa
xor
test
sbb
mov
cmc
fmul
inc
insl
test
shlb
ss
mov
jmp
ljmp
iret
push
idivl
negb
or
mov
in
loop
sub
mov
pop
xlat
pop
mov
xor
ja
into
xorl
xor
xchg
cmpsb
pop
mov
stos
out
xor
xor
xor
pop
mov
stos
ficompl
cmp
pop
lds
adc
lcall
sahf
orl
and
inc
cmp
jae
jae
mov
fnstsw
mov
lods
mov
add
popl
sbb
sbb
ret
dec
je
call
rcrl
mov
mov
adc
dec
cmp
movsl
repnz
mov
cmpl
psrlw
add
xlat
and
mov
push
inc
xor
or
cltd
lahf
and
push
fiadds
shl
ss
jne
mulb
inc
cltd
adc
or
xor
cmp
jns
xchg
fcmovb
cmpsb
push
inc
sbb
cli
mov
js
sub
jle
lcall
out
outsl
adc
and
cmp
int
push
iret
sarb
fisubrs
fdivl
in
xchg
xchg
mov
fs
les
and
jno
pusha
cmc
in
jl
sub
mov
add
xor
mov
sarb
lret
push
lea
and
mov
push
test
jns
cwtl
sar
cs
mov
adc
test
inc
mov
pop
aad
sti
subb
aaa
xor
cmp
icebp
xchg
dec
sbb
cmp
lods
insl
es
cmpsl
iret
cmp
sbb
fidivrs
test
into
jmp
int
cmp
push
pop
mov
xchg
cwtl
xchg
ljmp
or
test
in
push
mov
fmuls
jbe
push
out
ret
insl
xchg
bound
loopne
rcll
out
prefetch
or
pushl
cltd
push
cmc
std
add
xchg
push
das
push
jne
xor
dec
and
subl
not
frstor
enter
xchg
lahf
loope
cmp
cmp
stos
mov
lea
scas
lahf
cld
ror
xlat
pop
enter
sbbb
popf
pushf
jbe
je
mov
jecxz
aas
in
ss
stos
push
js
ljmp
jo
cs
cmp
je
test
jl
sbb
out
subb
lods
in
mov
aaa
cmp
sarb
pop
mov
mov
fsubrl
icebp
inc
and
xchg
or
dec
inc
cmp
lcall
lea
repz
ds
push
shlb
data16
inc
dec
dec
scas
sub
xlat
pop
cmp
adc
fistl
popa
xor
out
mov
pop
mov
dec
daa
cmp
sahf
push
pop
movsl
aaa
jle
hlt
fnsave
test
and
mov
and
insb
mov
movzbl
pop
push
in
leave
pop
cmp
int
test
push
mov
xor
ds
xlat
push
mov
scas
push
adc
push
arpl
cmc
add
call
dec
jecxz
fisubl
sub
jbe
sti
sbb
xor
inc
bound
cmp
imul
cmc
test
rcrl
nop
icebp
and
lcall
cmp
insb
pop
adc
dec
gs
cmpsl
mov
ret
mov
scas
test
dec
mov
arpl
push
jnp
fistpl
push
dec
mov
in
ret
or
pop
scas
movsl
les
jbe
pop
add
aam
cld
lret
fidivl
repz
add
loop
pusha
xchg
inc
aaa
in
push
movsb
adc
inc
shl
lds
adc
pop
outsb
or
push
mov
mov
cmp
sub
cmovbe
data16
pusha
cmp
pop
xchg
dec
jmp
out
imul
cmpsl
jecxz
mov
mov
test
push
mov
inc
roll
out
idiv
cmc
or
cmp
dec
fidivrs
sti
sbb
ror
pop
lahf
out
enter
dec
jg
les
movsl
pushf
sbb
popf
ds
dec
ret
pop
divps
mov
mov
xor
mov
stc
clc
sti
ljmp
ficompl
xchg
aaa
sub
test
and
cmp
outsb
bound
nop
in
jns
mov
cmp
sbb
into
outsb
rclb
pop
stos
mov
push
loope
clc
cltd
cmp
pushf
bound
hlt
xor
fwait
push
dec
jg
sbb
iret
fiaddl
lds
adc
xor
cmpsb
adc
adc
imul
mov
cmp
jne
cli
and
fcoms
push
fwait
notl
ss
roll
aam
push
jb
adc
dec
hlt
inc
and
insl
loope
pop
mov
cmc
lea
js
rcrb
or
and
cli
mov
lret
mov
inc
xor
mov
cltd
ja
das
out
hlt
jne
nop
push
mov
push
xchg
ror
and
fdivs
call
mov
pop
arpl
insl
rolb
stos
xor
pop
sub
ljmp
scas
adc
mov
stos
push
arpl
leave
add
mov
jmp
jbe
pop
pop
xlat
psllq
filds
mov
iret
xorb
fistl
cmp
repnz
shrb
ja
xchg
push
sub
jmp
jmp
sbb
in
push
jnp
lods
lret
inc
dec
dec
test
sahf
and
sbb
dec
push
mov
rolb
xchg
out
cli
je
and
out
mov
mov
inc
sbb
enter
lods
inc
sbbl
idivl
lods
adc
sbb
jg
mov
dec
lea
xor
xchg
jb
sahf
aad
lret
loop
insl
pop
icebp
repz
mov
inc
or
push
cmp
cmp
xchg
xchg
and
lods
lds
or
dec
daa
pop
or
pop
jmp
movsl
sahf
sub
stos
sub
out
dec
lahf
mov
dec
in
or
popa
sub
loop
and
repz
jg
pop
pusha
ljmp
stc
dec
push
dec
xor
mov
pushf
and
rcrb
dec
jmp
inc
arpl
fadd
sub
les
es
out
xchg
pop
mov
shr
insb
inc
xorl
mov
arpl
movsb
jns
faddp
into
mov
inc
std
mov
push
ja
jle
inc
fiadds
daa
push
pop
push
xor
loope
or
std
in
push
lea
mov
iret
pop
pop
or
mov
ja
iret
data16
xchg
sub
mov
icebp
pushf
repz
sarb
dec
mov
mov
pop
xchg
in
test
xlat
cli
fnstsw
pop
jnp
or
popa
adc
aam
nop
std
popf
sub
lods
jbe
adcb
adc
xchg
cmp
in
push
mov
iret
test
pop
cld
out
dec
cwtl
lea
ljmp
data16
xor
jae
jno
and
jno
cmp
mov
gs
popa
jl
or
cmc
mov
out
and
mov
mov
xor
push
dec
data16
ret
cmp
ficoms
xchg
sub
cmp
lods
ret
mov
jne
jbe
dec
stos
ss
or
dec
pop
xchg
mov
loopne
inc
rolb
iret
leave
mov
int
stos
xor
add
mov
and
inc
jg
mov
imulb
testb
cmp
pop
cmp
xchg
test
test
mov
dec
leave
mov
aad
xor
push
je
addl
into
jle
loope
xlat
outsl
sti
or
in
xor
push
pop
sahf
and
fcmove
sarl
add
aaa
test
mov
shll
popf
int3
cmpsl
jmp
add
pop
hlt
xchg
ja
pop
les
push
sub
dec
or
shl
jae
add
leave
lahf
or
jle
data16
sub
divl
std
or
mov
imul
inc
ss
mov
jg
or
or
pop
test
pop
mov
sbb
ja
fsubs
scas
pop
fcmove
je
cmp
and
inc
pushf
and
pushf
stos
mov
inc
out
and
aad
inc
sub
test
fildll
xchg
mov
popw
xor
push
xor
dec
dec
dec
mov
lods
inc
frstpm(287
xchg
std
pop
cmp
mov
mov
pop
aaa
les
push
sbb
inc
xchg
adc
push
dec
daa
mov
into
jo
les
mov
dec
jecxz
arpl
sub
or
andl
mov
mov
ljmp
dec
pop
hlt
add
fxch
inc
mov
dec
in
aas
inc
mov
and
sub
or
inc
cmp
neg
and
sbbl
sarl
and
pop
sub
clc
cmp
mov
pop
dec
sub
fstps
xor
push
xchg
adc
xor
dec
in
sub
gs
aaa
test
bswap
pushf
lret
xor
cwtl
cs
push
fcom
mull
lock
inc
lods
sub
cmpsb
iret
jge
inc
mov
or
cmp
loope
xchg
popa
pop
xchg
rclb
rcll
cs
jp
push
ss
rorb
sbb
popf
jns
cwtl
incb
mov
push
xchg
mov
cli
xchg
or
mov
add
lcall
xchg
test
movsl
or
jmp
and
mov
dec
repz
xchg
pop
and
sbb
lods
and
popa
icebp
fstp
pushf
adc
cld
inc
jne
push
test
adc
pusha
push
xchg
jae
in
lret
adc
sbb
je
lock
xor
or
jmp
test
test
cmp
or
pushl
add
fidivs
cs
pushf
cmp
out
in
inc
cmpsb
into
sub
adc
movsl
leave
pop
sub
insb
std
xchg
adc
cmp
inc
mov
lret
or
mov
push
xor
out
push
mov
nop
cmpsl
cmp
das
leave
sarl
xchg
jns
aaa
xor
mov
xchg
or
pushf
nop
aad
and
inc
mov
inc
loope
dec
xchg
inc
test
push
imul
jbe
xchg
outsl
cli
outsb
out
js
pop
mov
jo
xchg
push
and
pusha
add
movsb
cmp
int3
test
jmp
mov
xchg
js,pn
adc
aad
orb
sahf
arpl
jbe
rorl
mov
sub
push
mov
cmp
mov
dec
sbb
stos
lret
cld
out
cmpsl
jmp
pop
loopne
xchg
jne
sti
in
aaa
push
mov
xor
jo
sbb
incb
mov
cmp
sub
jmp
inc
xchg
sar
outsb
sahf
pop
or
xchg
mov
std
add
xchg
js
and
sub
jmp
clc
mov
out
rclb
or
pop
pop
iret
cmp
dec
cmp
setge
lret
into
repnz
push
sbb
das
sbb
loope
xchg
mov
dec
sub
pop
dec
cli
ss
arpl
stos
out
popf
mov
lock
stc
jp
xor
sub
mov
or
aad
insl
and
xchg
fistpl
test
fadds
xchg
dec
inc
xchg
loope
into
fwait
out
int3
stos
sbb
insb
cltd
sub
out
mov
mov
pop
or
jg
les
add
jp
sub
clc
call
arpl
or
mov
das
scas
sbb
int
test
loopne
sub
outsb
test
mov
fs
addr16
pop
push
pop
jp
fisttpl
cld
sbb
repz
push
dec
lahf
jl
decb
imul
add
mov
mov
mov
notl
pop
lahf
xchg
or
call
scas
jo
sub
movsb
inc
push
insl
mov
and
push
mov
xorl
mov
mov
mov
xchg
xchg
stos
and
cmpsb
mov
pusha
cmp
jl
pop
sbb
leave
movsb
cmpb
xlat
test
dec
pop
xchg
data16
arpl
psubb
add
pop
jne
jecxz
pop
sub
jmp
gs
sahf
imull
in
xchg
cmp
jge
lds
loope
out
mov
movsb
aam
cmpsb
out
dec
sbb
jnp
fisubl
sbb
sbb
mov
imul
sub
in
sbb
add
adc
enter
call
loopne
or
out
idiv
lock
test
push
cmpsb
sbb
dec
mov
fisttpl
cmp
hlt
repnz
pusha
nop
nop
testl
sub
mov
movsl
add
xchg
jb
mov
in
adc
add
fildl
fstp
sub
test
push
mov
adc
jmp
or
xor
outsl
fs
push
xor
mov
subl
insl
fdivl
ficompl
jg
ret
out
and
dec
pusha
lahf
enter
sbb
or
jp
cmpsb
outsl
inc
xchg
gs
mov
jmp
sbb
pop
dec
mov
and
outsl
pop
lahf
arpl
add
ljmp
sahf
in
mov
fistps
fcomps
out
inc
shrb
out
mov
xlat
or
cmp
addr16
std
cmc
mov
adc
movsl
add
in
punpcklwd
imul
jecxz
and
push
xchg
xchg
mov
push
aaa
je
or
adc
xor
adc
std
dec
lods
sub
daa
div
pop
mov
mov
push
jb
stc
mov
std
mov
popf
aas
in
iret
mov
push
sbb
dec
cwtl
jmp
fildll
adc
push
mov
adc
push
xor
in
leave
lret
out
fwait
lcall
mov
ss
jle
repnz
sarl
cmc
push
mov
dec
clc
mov
cmc
ret
cmp
and
out
xor
shr
adc
js
jmp
out
mov
sahf
jnp
jne
or
rcrb
fcomps
insl
pop
push
pop
push
dec
int
push
test
pop
push
scas
aaa
nop
out
sbb
fsubl
rcll
imul
cmp
in
dec
movsl
fisubrs
call
push
mov
pop
aam
mov
daa
jb
repz
ds
add
dec
je
addb
aam
xor
fldcw
push
das
insb
xchg
push
jbe
into
pop
out
out
divl
es
cmp
xor
loopne
mov
sbb
andb
mov
out
sbb
loop
cmpb
mov
fs
dec
mov
jne
inc
and
dec
popa
fsubrs
aad
test
inc
addl
pop
mov
xor
dec
lret
js
and
mov
imul
ret
fwait
scas
xchg
out
push
rcl
pop
xchg
xchg
cmc
aad
out
xor
pop
jl
jnp
dec
iret
jne
mov
testl
sahf
pop
sahf
js
fwait
push
sahf
jle
jns
inc
mov
add
cmpsb
cmp
adc
push
mov
addr16
mov
fwait
jo
ret
icebp
dec
cwtl
sub
xor
jb
jmp
call
cltd
arpl
cwtl
jo
mov
andb
jne
aaa
push
push
cs
aas
dec
outsl
jecxz
dec
push
inc
cmp
mov
mov
jecxz
fwait
movsl
bound
mov
xor
push
jge
add
adc
inc
leave
mov
jnp
adc
push
adc
push
pop
add
cmp
pop
mov
shlb
pop
xchg
cmpl
shl
pushf
psraw
rcll
in
xchg
int
popa
jp
push
cmp
dec
incl
mov
mov
xchg
icebp
sub
push
cmp
mov
sub
sbb
and
cmp
mov
test
fs
clc
jg
loop
je
or
pop
jle
addb
aaa
outsl
push
cltd
icebp
cmp
push
out
fwait
lcall
mov
push
repz
mov
aad
rorl
aas
cmpsl
fisttpl
jne
mov
jle
lret
mov
fsqrt
mov
mov
je
pop
pushf
jae
jmp
in
std
sbb
mov
les
inc
fwait
cmc
sbb
pusha
push
xlat
sbb
add
pop
scas
lods
push
and
mov
dec
mov
imul
sahf
in
nop
or
jo
cmp
movsl
in
mov
mov
push
popf
inc
in
xchg
push
pop
add
adc
es
and
sahf
cld
hlt
pop
mov
mov
cmc
ret
pop
xor
push
xor
mov
fldt
sub
and
cs
repz
cmc
dec
pop
hlt
or
aad
mov
inc
ficompl
cli
sbb
jnp
mov
mov
and
push
inc
in
sub
scas
add
shl
add
testb
out
fxch
jnp
in
shlb
pop
sub
pop
xor
stos
dec
sub
test
and
fdivrl
fildll
int3
push
imul
out
push
aaa
mov
or
idiv
repz
adc
cmpsb
mov
rcrb
xor
and
jge
jnp
sysenter
cmc
jb
ss
sbb
inc
aad
mov
loopne
push
xchg
sub
or
mov
loope
sti
push
dec
or
aad
repz
daa
movsb
cwtl
bound
lahf
repz
mov
add
imul
push
xchg
fwait
inc
xchg
aaa
pop
jns
cmp
fmuls
mov
je
nop
cmp
add
repz
pop
stos
xchg
and
fwait
xchg
dec
pop
jl
pop
nop
repz
ss
inc
xchg
xor
mov
cld
mov
lret
fcomi
repz
jo
ret
outsb
mov
add
enter
sub
fs
in
fucomip
es
and
ret
mov
xor
scas
testl
loope
cmp
cwtl
stc
jecxz
cmpsb
jne
mov
sub
sbb
fidivl
sbb
adc
loopne
or
pop
cli
js
lret
loope
sub
pop
int3
push
loop
ljmp
mov
inc
bound
xchg
fptan
cmpsb
aaa
aad
xchg
mov
repnz
xor
in
scas
outsl
cmpb
jmp
mov
mov
inc
sub
inc
fidivs
incl
push
mov
aam
pop
filds
dec
or
xchg
inc
out
xchg
divl
loope
int3
orb
adc
inc
or
sbb
pop
fcmovne
movsb
mov
sub
daa
shlb
mov
sub
imul
sbb
fsubrl
lock
test
jnp
test
addr16
aaa
test
scas
push
fistl
push
adc
add
lds
mov
stos
rcrl
inc
fists
xchg
inc
hlt
dec
test
test
xchg
fnstsw
imul
cwtl
cmpsl
pop
ljmp
movsb
mov
es
mov
sbb
pop
jmp
push
stos
lret
sahf
in
pop
add
pop
fcoml
jae
adc
stos
mov
ret
pop
or
stc
fs
or
pop
imul
xchg
mov
addr16
jp
outsl
dec
test
outsl
cld
icebp
jge
sbb
jp
mov
mov
jbe
jecxz
fcmovne
jle
and
not
dec
or
fildll
dec
pop
pop
add
sub
fstl
jb
xchg
mov
jae
aas
cmp
xchg
cmp
repz
popf
nop
inc
loope
cmp
fisttpl
mov
fimuls
ja
add
lar
daa
jno
insb
pop
adc
xor
jle
push
jne
mov
addr16
add
jl
rcrl
push
shr
sub
aas
lods
adc
xor
xchg
pop
mov
sbb
jb
nop
or
jle
ljmp
add
hlt
adc
loope
jmp
push
push
aaa
sbb
pop
mov
push
jecxz
das
in
movsb
xchg
add
inc
data16
outsl
pop
push
in
pop
rorl
repnz
dec
add
jns
bswap
push
cwtl
pop
in
cld
subl
clc
and
cwtl
enter
push
aas
ds
sub
icebp
popf
sahf
mov
adc
sbb
imul
out
andb
mov
jno
or
add
dec
push
stos
mov
dec
out
xchg
pop
mov
pop
and
pop
dec
add
mov
cmp
ret
test
lds
scas
jl,pt
mov
xlat
inc
orb
insl
jns
rcl
add
iret
shlb
jbe
sub
push
or
aad
or
aaa
movsl
lahf
jns
lock
aam
testb
sub
fcmovu
out
test
cmp
or
bound
or
incl
in
jae
xor
test
iret
cmp
xor
lret
fcomps
filds
push
fwait
and
fcmovnb
sub
subb
or
cmp
rcll
and
add
push
sbb
xor
insb
mov
loope
push
sbb
faddl
mov
addr16
nop
inc
mov
adcl
insl
fcmovne
out
xchg
lock
repz
push
shl
fidivl
das
js
out
sub
add
into
sub
lret
inc
jo
xchg
lret
adcb
pop
fistpll
icebp
outsb
test
jne
pushf
add
fisubrl
test
jmp
or
jp
stos
dec
fnstsw
jb
gs
adc
and
xchg
loop
dec
push
scas
inc
sahf
xchg
jmp
lods
mov
mov
sbb
adc
or
xchg
cmp
mov
mov
cli
call
adc
loop
inc
sub
ss
pop
adc
add
mov
mov
mov
and
xlat
push
insb
pushf
mov
pop
mov
loop
jae
inc
loop
push
lret
dec
testb
dec
add
andb
fdivp
mov
insl
add
pusha
mov
insl
mov
push
cmp
sub
push
aaa
repz
es
in
jmp
outsb
mov
in
dec
xchg
xchg
arpl
into
daa
or
ret
sti
jb
out
xchg
out
cmp
xor
xchg
xorl
adcb
sub
notl
fldl2t
dec
movsb
jge
and
scas
lea
test
adc
test
mov
pop
sbb
pop
movb
jge
push
test
fildl
rorl
cwtl
adcl
jmp
mov
clc
sbb
sti
add
xchg
fnstcw
mov
pop
sbb
arpl
mov
pushf
pusha
shlb
into
aaa
mov
popa
dec
sub
xchg
pop
inc
mov
and
fs
sbb
ds
xor
jns
mov
jno
int3
ret
push
je
push
mov
enter
repz
pop
or
jno
or
jnp
cmp
nop
out
les
aad
ljmp
rorl
fwait
popf
inc
pop
cwtl
add
sub
or
adc
arpl
mov
cwtl
jp
jge
bound
popa
jnp
in
outsl
clc
je
clc
mov
mov
icebp
jecxz
or
pushf
cmp
mov
add
adc
out
mov
pop
sub
push
imul
cld
cwtl
mov
mov
cmp
mov
mov
lahf
mov
stc
and
push
cmc
push
pop
mov
es
mov
mov
ret
out
pop
mov
call
add
dec
movsb
jmp
scas
mov
in
jge
cld
lahf
inc
adc
add
popf
mov
mov
and
push
bound
lods
xchg
jl
and
cmc
loopne
or
mov
push
movsl
dec
outsb
adc
adc
lods
cmp
cmpsb
adc
cmp
mov
inc
xor
and
iret
ss
sub
enter
pop
dec
pop
push
dec
in
pusha
lret
out
daa
cwtl
test
popa
push
cmp
repz
mov
icebp
mov
inc
xor
push
inc
or
and
and
orb
fs
je
cs
mov
mov
mov
cmp
push
push
or
aam
test
repz
pop
add
sub
testl
ret
mov
rorl
push
or
call
fisubl
incl
mov
and
xchg
push
xor
nop
in
xchg
les
xor
fnstcw
ljmp
pop
jl
xchg
or
aaa
call
mov
enter
mov
test
jg
pushf
xchg
inc
sarl
not
ja
dec
inc
insl
fistpl
fimuls
lret
adc
sub
gs
or
nop
push
xor
andl
js
xchg
movsl
and
dec
cli
xchg
test
fdivrs
add
mov
xor
ja
ss
fldcw
xlat
or
and
and
fcomp
cwtl
fildl
dec
xchg
xor
pop
push
stos
or
in
pop
adc
cmp
pop
dec
mov
aas
sbb
push
lock
push
dec
cmp
jle
mov
cmp
jne
mov
push
loop
add
xor
dec
adc
fsubs
push
loope
lock
inc
loopne
popf
add
or
insb
mov
insb
je
xchg
push
leave
mov
or
fstpt
mov
outsb
add
sub
push
jl
es
aas
xor
pop
jmp
fwait
arpl
mov
aaa
das
mov
mov
clc
push
fdiv
clc
dec
in
sbb
negb
das
jo
aaa
loop
fldcw
pop
jne
daa
add
in
movsl
and
arpl
popa
jne
jle
and
hlt
incl
scas
and
in
cmp
jecxz
or
repz
mov
xor
xlat
outsb
loope
stos
jb
scas
rol
sahf
pop
cmc
jl
push
dec
sub
insb
add
arpl
popa
pop
cli
sub
inc
cmp
cmpsl
inc
dec
fstpl
test
ljmp
inc
mov
fs
xor
fs
sbb
push
pop
rcll
pop
pusha
daa
pop
nop
push
loop
ljmp
push
int3
mov
jmp
jno
addr16
mov
pop
or
sub
in
adc
dec
mov
mov
popa
sub
subl
icebp
or
xchg
loopne
mov
sub
fcmovbe
cmc
sub
or
out
addl
lcall
mov
fnstenv
test
pop
imul
cmpsl
sbb
xchg
rclb
loope
outsl
pop
das
xchg
scas
icebp
cld
jbe
loope
mov
or
inc
fisubrs
jae
pushf
int3
sub
ret
sbb
aas
bswap
addr16
jp
sbb
pop
out
fwait
ljmp
cmp
lret
push
addr16
adc
pop
xchg
packsswb
and
sub
xchg
cmp
pop
btr
mov
test
test
cld
inc
rolb
xchg
sub
cmp
mov
adc
mov
add
jge
movsl
ss
and
push
xchg
inc
insb
sti
xchg
dec
clc
je
dec
pop
mov
push
fldcw
sub
repz
mov
icebp
mov
in
decl
adc
or
sahf
xor
xlat
and
imul
push
js
gs
mov
jae
scas
lcall
fwait
decb
pop
pop
mov
sbb
pop
pop
mov
and
imul
jecxz
shrb
xchg
or
cmp
les
cs
cs
mov
and
imulb
xor
push
mov
bswap
aam
cmpb
pop
mov
adc
dec
inc
daa
pop
pop
inc
cmp
push
xlat
les
lods
dec
xor
pop
jns
xor
jge
popa
sti
adcl
hlt
popf
lahf
mov
es
imul
lock
xchg
pop
push
shll
pop
pop
jno
xchg
xor
add
std
sti
adc
loope
imul
add
fcomp
aaa
ds
arpl
data16
aad
mov
lock
mov
dec
mov
or
xchg
jmp
sub
daa
pop
xchg
push
jbe
and
xorl
mov
and
mov
xchg
push
sahf
dec
and
sbb
out
xchg
inc
jle
int3
in
mov
inc
pop
out
pop
jns
in
pop
and
push
std
pop
mov
adc
dec
js
xchg
xor
inc
cli
dec
ret
int
cmpsl
loope
sarb
movsb
mov
xchg
rcrb
push
push
jl
sub
lret
push
loope
xor
xor
xor
mov
add
in
fldl
inc
loop
sub
inc
cmp
xchg
cmp
pop
ret
sbbl
loope
lods
sub
sahf
in
fwait
and
push
add
movsb
ds
scas
or
test
jle
xor
jbe
cltd
shr
jnp
mov
scas
mov
enter
adc
cwtl
mov
test
ljmp
inc
dec
mov
xchg
jp
add
ret
es
fldenv
movsl
sbb
push
test
aam
in
jge
aam
inc
pop
clc
sbb
mov
je
jp
loope
jne
es
push
sarb
mov
mov
lret
jecxz
stc
fwait
mov
call
inc
mov
in
out
inc
dec
in
or
loopne
pusha
jmp
jo
xor
lret
mov
hlt
pop
testl
js
jb
out
sbb
popa
ljmp
mov
pop
jnp
fwait
mov
shll
fildll
repnz
leave
fwait
mulb
iret
cmpb
inc
fwait
sub
jb
data16
jle
push
add
inc
mull
sub
cli
xchg
jecxz
jae
jne
adc
dec
outsl
arpl
shl
add
mov
sarb
iret
xchg
and
sar
shll
push
jp
pop
xorb
adc
negb
sbb
mov
sbb
pop
call
es
cli
and
fcomi
pop
pop
test
pop
mov
mov
fsubrl
push
rolb
repz
shlb
imul
orl
xor
mov
push
mov
fwait
stc
inc
cmp
addl
mov
xor
sahf
or
dec
cmc
in
mov
jae
pop
aad
lret
lods
lds
push
pop
shll
pop
popf
stos
push
xchg
nop
adc
hlt
in
jae
pop
pop
mov
mov
ja
lret
push
mov
xchg
rolb
push
adc
cltd
test
mov
in
mov
daa
cs
push
mov
adc
jb
inc
int
shlb
iret
test
jg
test
dec
fisubrs
jns
mov
cmp
sbb
insl
cli
dec
mov
inc
add
test
xorb
fwait
mov
add
outsl
push
xor
out
loope
add
sbb
pop
aas
repz
loopne
pop
rclb
aas
and
dec
icebp
mov
xchg
jge
jne
pop
mov
je
push
xchg
mov
popf
jb
adc
cmp
idivl
or
jns
jno
js
jl
jmp
sti
push
or
xor
push
mov
and
inc
pop
cmp
cmc
or
lret
in
sbb
push
aas
push
pop
or
xchg
dec
push
pushl
divl
sti
in
xor
push
cmpsb
mov
rcll
lret
add
add
pop
outsb
fdivrs
inc
jae
sub
jle
jae
pop
and
mov
mov
jge
cwtl
mov
sarb
mov
arpl
sub
je
fistl
lret
ret
out
cmc
loop
sbb
xor
cwtl
jecxz
pushf
dec
bound
mov
insb
mov
add
inc
repz
mov
jae
incl
in
arpl
xor
push
pop
and
sbb
outsl
and
mov
adc
add
push
lea
imul
rcr
push
cmpsb
sub
or
cmp
iret
jle
push
jb
inc
sub
adcb
idivb
fucomip
mov
and
in
hlt
dec
insb
das
out
and
adc
std
adc
xchg
cltd
mov
mov
lret
adc
imul
add
and
mov
jg
mov
sub
leave
jmp
mov
and
adc
xor
and
add
xchg
mov
movsl
xor
mov
push
jp
pop
sbb
dec
push
push
mov
insb
incb
push
or
imul
jp
int3
inc
cmpsb
lret
mov
lret
test
repz
push
fistpl
das
cmc
adc
sub
ficomps
in
inc
popf
std
in
add
push
xor
incb
mov
insl
data16
iret
xor
inc
sub
sub
js
ljmp
sub
cmp
testl
aaa
mov
jmp
stc
cmp
icebp
xchg
inc
jp
outsl
movsl
fldl2t
add
jmp
add
mov
inc
cmp
push
add
jo
and
in
adc
cwtl
les
aad
ljmp
sar
ret
xchg
cmp
dec
arpl
sub
lahf
divl
cmpsb
stc
daa
sbb
pop
imul
dec
cmp
mov
lcall
sbb
lret
push
scas
add
dec
sub
add
out
out
bound
test
xchg
cltd
addr16
insb
in
or
aad
cltd
or
xor
cmpsl
add
mov
mov
repnz
jecxz
lahf
cwtl
or
mov
mov
mov
mov
mov
popf
fmull
mov
push
sub
push
movsl
cs
into
mov
test
roll
and
cltd
push
call
test
shrb
sbb
cmc
in
jne
pop
nop
pop
sbb
ss
push
fisttpl
xchg
mov
repnz
mov
mov
outsb
cld
pop
push
sbb
mov
gs
out
decl
or
in
jns
pop
pop
fcmovb
cmp
mov
xchg
sub
jg
push
add
ret
in
mov
xor
add
in
lcall
jno
sub
and
or
loop
ss
push
insl
loope
or
dec
aad
test
roll
pop
dec
or
ret
inc
iret
cld
nop
out
mov
addb
mov
xlat
repz
and
and
xor
pusha
test
xor
pop
jle
inc
add
shlb
adc
lods
fisttps
iret
bound
fistpl
and
out
je
push
lock
lret
xchg
aaa
in
shrl
lock
inc
dec
lahf
and
inc
xchg
jb
cltd
jmp
je
push
mov
xchg
sub
lds
loop
data16
xchg
adc
mov
jle
scas
cld
push
stos
iret
sub
add
jge
push
int3
jmp
lods
push
sbb
xor
lock
push
test
xor
xchg
les
cmpsb
lahf
sub
dec
pop
rclb
cs
cmp
mov
and
mov
jb
test
mov
jl
ret
ss
stos
fdivs
cmc
popa
jno
xchg
push
popf
loope
push
shrl
lods
hlt
push
mov
add
cmp
outsb
and
imul
lahf
rorl
inc
adc
mov
mov
dec
pop
inc
and
fs
xchg
pop
fdiv
and
int3
ror
xor
into
push
push
loopne
mov
mov
ja
lds
scas
mov
push
xchg
sub
push
add
roll
in
and
xor
push
adc
leave
xor
cld
stc
push
fildll
filds
scas
adc
inc
nop
sub
int
mov
fs
xor
or
pop
nop
sbb
data16
stc
popf
loope
and
and
iret
xor
jg
rclb
iret
out
mov
xor
jecxz
mov
testb
repnz
cmp
sbb
xchg
cs
shl
xchg
je
mov
je
sahf
pop
jge
test
dec
push
xchg
fnstenv
out
aad
xchg
xchg
fs
lret
bound
inc
cmpsb
sti
add
add
xchg
mov
sub
testb
in
loopne
in
adc
adcl
ja
testl
stos
cwtl
pop
cmpsb
push
sar
pop
icebp
adc
jmp
sbbb
mov
call
movsl
jecxz
pop
jl
lods
push
int3
clc
out
notl
push
mov
jmp
decl
mov
dec
repz
ss
scas
std
mov
popa
test
test
and
daa
je
adc
push
add
xlat
mov
push
sub
fidivs
mov
pop
adc
cmp
jle
clc
jno
daa
or
test
nop
jne
xor
or
stc
add
cs
vshufps
call
ret
hlt
imul
out
inc
out
xor
mov
or
out
mov
dec
xor
outsl
sub
test
inc
xchg
into
dec
aaa
mov
sbb
add
pop
test
mov
sbb
or
adc
push
popa
ss
in
mov
test
mov
jmp
aas
testl
mov
or
lock
lods
mov
jmp
pusha
xchg
dec
and
mov
xor
xchg
rcll
ds
fistpl
stos
int
jmp
add
adc
push
jbe
lock
bound
pop
outsw
push
das
add
je
mov
das
adc
mov
sarl
sti
rorl
test
and
ja
and
pusha
pusha
sbb
xor
xor
pop
pop
arpl
dec
jp
jb
dec
mov
or
fmul
and
shrl
test
lods
arpl
push
mov
daa
mov
loope
lcall
ljmp
stos
insl
imul
lahf
insb
sti
repz
fsubl
sub
inc
fildl
mov
aad
mov
out
or
cs
hlt
sub
and
fcmove
icebp
push
dec
cs
and
jno
mov
push
ror
inc
nop
pop
adc
hlt
popf
inc
fldl
jbe
inc
dec
inc
hlt
xchg
add
inc
jae
repz
pop
mov
je
and
rolb
cmp
fucom
dec
xchg
xor
mov
in
cmc
mov
fcmovnbe
pop
lret
xchg
int3
dec
aas
push
adc
fstl
push
data16
aad
pop
inc
cmpsl
mov
es
fisttpl
lcall
mov
mov
cmpsb
loopne
cmp
es
mov
out
and
sub
inc
xchg
xor
xor
dec
repz
das
out
dec
es
push
xor
imul
cld
add
test
and
cmp
je
mov
inc
pop
lcall
mov
xor
jge
dec
out
push
jl
mov
adc
adc
int3
hlt
test
push
dec
sti
add
sub
and
jae
jbe
decb
and
add
pop
into
lods
mov
les
icebp
bound
repz
sub
mov
jp
and
xchg
mov
sbb
push
cld
push
mov
jo
jp
or
orl
add
cmp
pop
pop
movl
ss
cltd
lods
sub
nop
loopne
push
cmp
mov
in
xchg
nop
mov
push
and
aam
or
insb
in
adc
ret
aad
sub
xor
cltd
call
lcall
cmp
jns
xchg
fisttpll
xor
arpl
bound
aad
and
dec
push
sbb
mov
ror
sub
repz
ret
xchg
and
pop
icebp
mov
imul
mov
je
push
and
add
loop
sbb
sarl
xorl
and
cmp
cmp
mov
pop
and
orb
mov
adc
stc
shlb
mov
idivl
fcmovne
or
test
sbb
iret
rcrl
mov
xchg
stos
cmpsl
into
movsb
xchg
mov
jge
dec
imul
sub
cs
out
mov
xchg
xorb
test
and
inc
cli
adc
jg
xor
xor
xchg
jp
ss
sbb
xor
mov
cmpsb
mov
adc
mov
and
and
stos
and
aas
mov
cmp
movsb
jg
pop
or
dec
roll
inc
aam
cmp
iret
mov
sbb
leave
jmp
orb
xchg
cld
sbb
les
lods
in
cmpsb
les
xchg
add
stos
mov
lods
cmp
push
push
call
or
lret
mov
pop
lods
test
push
sbb
in
mov
xor
stc
test
inc
jmp
ds
cmp
push
movsl
dec
inc
jg
push
jns
or
sub
into
mov
jmp
xchg
ret
je
stos
xor
ljmp
bnd
loopne
and
aam
andl
movsl
xchg
mov
scas
mov
jae
pop
les
mov
jno
outsb
test
out
loopne
popf
dec
daa
sahf
pop
adc
mov
and
cmp
clc
push
xchg
test
out
andl
lret
mov
mulb
jno
pop
mov
into
ret
pop
jg
rolb
xorb
outsl
jmp
std
cmpsl
enter
mov
loope
fdiv
lahf
adc
pushf
sub
jg
or
fldt
pop
out
mov
imul
or
xchg
push
sbb
inc
jp
adc
loop
adc
ds
dec
das
push
xchg
mov
mov
js,pt
enter
negb
je
mov
insl
ds
loop
movsl
or
mov
stos
pop
mov
ja
sbb
gs
pusha
in
dec
enter
xchg
push
insl
pop
jge
rorl
es
inc
xchg
inc
inc
stos
sti
push
fstp
and
sahf
mov
pop
lea
push
mov
jg
test
adc
jno
lcall
cmp
scas
dec
or
add
int3
inc
test
sbb
sub
and
mov
enter
in
push
movsl
push
lods
lods
pop
into
push
and
int3
cmpl
mov
cwtl
and
push
shlb
or
lods
mov
or
dec
dec
xlat
je
aad
shlb
jg
cmp
adc
or
mov
push
mov
or
push
lahf
inc
add
lret
push
je
xchg
cmp
rcrl
or
pop
adc
jmp
xor
mov
addr16
xchg
in
wrmsr
xor
mov
sub
jmp
push
push
sbbl
leave
test
mov
dec
mov
mov
icebp
iret
scas
mov
loop
sbb
jo
lods
xlat
or
jae
cmp
cmp
push
sub
inc
cmp
pusha
sbb
lret
sbb
mov
in
es
cs
fisttps
jle
xchg
rcll
push
and
ss
subb
sub
inc
ja
testb
mov
jecxz
or
repz
mov
or
cmpsl
data16
pop
into
int3
stos
in
jg
ljmp
inc
pop
std
cltd
xchg
insl
sub
sbb
push
fs
or
pop
push
xchg
fsubrl
mov
call
in
shl
cmp
xchg
inc
popf
jge
or
or
jge
jae
xor
sub
fistps
ja
adc
adc
push
les
mov
hlt
pop
dec
mov
fadds
jmp
in
icebp
push
or
inc
xchg
pop
fldl
lock
cmpsb
scas
cs
dec
cld
addl
clc
xchg
push
and
xlat
imul
mov
push
xchg
sbb
shll
cmpsl
dec
sbbl
inc
das
push
adc
mov
call
dec
inc
jge
lret
popf
sbb
cs
dec
dec
int3
pop
mov
mov
out
add
inc
repnz
jne
shll
ss
leave
clc
push
imul
insb
add
rcrl
repnz
mov
cmp
sbb
jno
arpl
pop
adc
cmp
inc
or
mov
lds
or
mov
shll
and
imul
and
out
mov
mov
inc
subb
loopne
cmp
test
jg
das
cltd
add
pop
mov
int3
jnp
or
filds
dec
or
mov
jbe
je
pop
xor
dec
xor
xchg
inc
inc
iret
inc
add
push
inc
jno
dec
sub
sbb
sti
out
mov
xchg
push
lods
pop
andnps
xor
dec
push
mov
rcll
inc
xor
int
je
mov
mov
jns
rcrl
adc
lock
loope
and
ret
filds
sub
cmp
in
and
insb
inc
mov
ds
pop
lcall
adcl
test
mov
aad
fwait
xchg
adc
xlat
daa
add
dec
lret
fsts
fbstp
xor
fdivl
push
mov
lock
add
sub
sub
sub
imul
insb
loop
idiv
jge
push
sbb
xlat
test
push
mov
push
inc
aas
out
in
aaa
jecxz
push
cmc
inc
scas
cli
mov
sub
rcrb
scas
rcrl
or
sub
aad
mov
jns
mov
ds
cmp
pop
aaa
dec
popa
push
sub
push
xchg
icebp
orl
shl
std
mov
push
repz
or
mov
cmpsb
test
mov
inc
lahf
sar
bound
addr16
cmp
and
sbb
cmp
scas
cmp
inc
movsb
fwait
mov
loop
addb
sbbl
sub
sahf
jle
xchg
out
in
mov
cmp
xchg
pop
dec
pusha
push
push
test
fistpl
jle
mov
jbe
lahf
xor
sbbl
pop
mov
pop
scas
jno
pop
les
mov
adc
push
test
pop
pop
lods
call
mov
inc
lods
fimuls
cmp
adc
sti
jb
dec
pop
mov
fs
out
movsb
push
mov
pop
mov
ja
ficomps
mov
cmp
loope
xor
push
pop
test
xchg
cmp
lcall
push
into
sub
add
inc
out
lock
cmp
out
cmpsw
out
filds
es
ret
mov
test
or
pushf
ss
adc
add
mov
xchg
std
push
push
les
push
in
mov
sbb
insl
cli
pop
mov
mov
test
jmp
xchg
push
sbb
out
in
je
into
js
mov
cmp
in
jns
outsb
and
mov
lret
mov
test
popa
mov
stc
pop
add
fwait
test
out
outsl
rcrb
pop
mov
sub
push
mov
lahf
mov
xchg
mov
popl
insb
jae
bswap
outsl
adc
lret
add
jno
push
arpl
fs
dec
push
inc
push
sub
int
jp
sub
mov
and
lods
xchg
divl
ja
jo
mov
jmp
es
inc
in
pop
lea
jne
hlt
jg
stc
mov
sbb
sub
imul
mov
inc
mov
jecxz
add
sub
cmp
jnp
and
add
xchg
or
or
mov
lock
xor
inc
add
pop
cmp
push
stc
mov
dec
es
pusha
dec
push
into
scas
daa
addb
pop
movl
inc
ret
fidivrs
fdivs
sub
es
sbb
jo
inc
fadds
pop
ficomps
add
cs
push
mov
loope
jmp
out
push
lock
push
fsubp
sub
mov
ret
pusha
insb
inc
jb
fcomps
push
xor
sub
es
notl
mov
outsl
mov
lods
mov
mov
xlat
mov
mov
sbb
sbb
mov
or
cmc
clc
sbb
mov
adc
or
xchg
jo
dec
dec
dec
insl
jmp
inc
fwait
add
push
xchg
jbe
cmpb
mov
clc
xor
out
loop
popa
mov
sub
inc
cmp
and
aas
fucomip
lock
test
jge
pop
mov
or
mov
outsl
sbb
xor
xchg
push
cmp
jge
add
divb
pop
gs
mov
mov
lcall
leave
pop
clc
cmp
rcrb
int
mov
lret
test
or
mov
stc
stos
mov
pop
inc
xchg
jecxz
loope
loop
in
jns
cmpsb
adc
mov
dec
fucomip
or
inc
push
add
andl
incb
dec
jle
inc
jno
sbb
int3
leave
dec
insl
fmuls
std
jns
stc
xor
loop
dec
sbb
cmc
ds
jae
movsb
loopne
sbb
fistpll
mov
pop
xor
in
inc
ja
lds
cmp
mov
outsb
mov
mov
add
ficomps
mov
fsqrt
loope
mov
aaa
xor
leave
mov
sahf
ret
insb
imul
jo
lret
popa
and
jnp
push
dec
push
add
mov
out
xchg
xchg
sub
imulb
sub
xor
stos
sbb
inc
mov
add
popa
xchg
add
pop
fdiv
sbb
icebp
jle
repz
rcr
cs
jns
imul
jb
mov
dec
rcll
daa
ljmp
push
cs
xchg
data16
rorl
and
add
or
out
and
in
jns
push
or
popf
pop
xchg
testl
push
cmpsb
add
cmpsb
loope
mov
inc
flds
inc
mov
cmc
sub
shl
test
cmp
xchg
sub
mull
in
ss
shl
hlt
ror
sub
pop
shlb
mov
cmp
fnstsw
sahf
es
out
dec
rorl
shl
or
add
add
imul
and
sti
xor
jle
jp
mov
popf
dec
push
cwtl
mov
in
jae
mov
and
mov
pop
leave
push
pushf
and
and
xchg
shl
fldl
stos
mov
addr16
adc
iret
imul
jge
push
test
dec
or
mov
shll
push
mov
cmp
bound
cltd
mov
aad
icebp
leave
cmp
push
push
cli
xchg
push
es
mov
mov
into
and
add
ljmp
loop
fsts
call
mov
sbb
and
jo
push
cmp
shrl
scas
mov
add
in
lds
in
pop
sahf
jo
sub
imul
rcll
xchg
cs
mov
xor
xchg
jmp
sbb
adc
dec
pop
stos
or
shll
stos
ret
cmp
fists
push
push
bound
or
cli
mov
xor
mov
push
out
add
jl
ss
inc
adc
popa
xlat
int
mov
sub
sub
stos
xchg
lds
aas
in
stc
pop
std
mov
xchg
lea
lcall
imul
push
fldl
sub
in
imul
push
add
push
aaa
adc
and
adc
mov
jae
test
push
cltd
popa
and
dec
cmpsl
mov
jbe
inc
int3
and
ds
or
inc
or
pop
jge
imul
in
or
fildl
jnp
sbb
jb
les
dec
loop
sub
into
or
sahf
movsl
jno
lret
popa
add
scas
test
inc
pop
xlat
faddl
jo
pop
or
mov
in
es
push
sub
lods
cmc
dec
sub
das
add
adc
lret
jbe
add
sbb
sbb
mov
xor
pop
negl
not
ret
ret
mulb
mov
sbb
push
cmp
or
ja
test
pushf
in
fistpl
sbbl
inc
inc
in
ja
mov
imul
clc
pop
clc
cli
lret
fcmovnu
jecxz
icebp
insl
push
fistl
jbe
pop
clc
pop
and
pop
sti
dec
or
add
xor
mov
jle
dec
xchg
push
or
jo
jne
xchg
jp
repz
decb
out
sti
jecxz
dec
sar
pop
mov
cwtl
pop
mov
in
cltd
es
xchg
xor
enter
pushf
out
fcomps
push
sub
add
mov
jge
das
pushf
mov
int
out
push
call
cmpsb
push
jg
or
mov
mov
fiaddl
aad
cmp
arpl
ljmp
jmp
jmp
xchg
js
add
in
in
enter
sbb
or
push
std
stc
std
inc
loope
lea
adc
cmpb
sbb
xchg
ret
fisubl
insl
xchg
jne
out
sub
pop
or
andl
lahf
int
lcall
imul
ljmp
cwtl
fs
out
imul
daa
pop
lret
enter
js
sbb
fnsave
sti
cmp
sub
out
outsb
pop
enter
push
push
in
ffreep
xchg
push
mov
clc
jecxz
mov
and
xor
xor
pop
test
fiaddl
xor
movsb
or
add
loope
and
int
mov
pop
mov
es
xlat
dec
xchg
out
incb
out
xor
jl
cmp
adc
pop
inc
cltd
pop
and
aas
gs
jbe
cmpsl
loope
add
jne
sub
adcb
mov
sbb
pushf
or
xor
or
jo
in
sbb
test
xor
and
cmp
push
mov
sbb
xchg
das
fwait
sub
add
cli
push
ret
mov
cltd
add
stos
popa
nop
test
fidivs
jns
mov
xchg
xchg
data16
and
shrb
roll
adc
pop
pop
imul
sti
xchg
or
movsl
pop
movsb
mov
shll
fdivrl
das
daa
or
rcrb
dec
sbb
jns
dec
xchg
adc
ret
inc
or
dec
push
mov
or
hlt
fcmovu
xor
adc
fidivs
push
and
push
ret
test
or
insb
ljmp
fcomps
mov
push
jmp
inc
clc
outsb
test
fcmovnbe
cld
fmul
data16
shrl
dec
add
push
or
lock
dec
dec
cmp
imul
insb
pusha
dec
daa
call
insb
movsl
jo
pushf
jbe
je
sbbb
in
jle
ja
mov
lret
popa
jnp
cmp
jecxz
je
or
dec
clc
call
dec
xchg
loopne
mov
stos
mov
das
popf
inc
sub
cmpsl
out
jns
popf
inc
add
bound
xchg
xchg
cltd
and
addr16
xlat
and
lock
jb
dec
repz
sub
jmp
push
mov
push
aam
sahf
std
sbb
push
dec
in
inc
repz
or
cld
aas
ljmp
fiadds
mov
mov
mov
lcall
fs
mov
inc
aad
in
in
push
cltd
pop
xchg
or
adc
in
cmc
pushf
pusha
lock
stos
sbb
je
sahf
pusha
dec
push
fsts
inc
xor
mov
mov
add
mov
dec
bound
xor
test
adc
rol
jo
jecxz
mov
bound
jns
xlat
mov
cmpsb
das
cmpsb
sub
ficoml
idivb
cmp
sbb
test
xchg
test
imul
jbe
nop
inc
lds
aam
dec
xchg
pop
lock
into
mov
xor
fldt
repz
loop
xor
xor
in
mov
out
in
mov
inc
ret
addr16
xchg
popa
add
fisubrl
inc
cmp
push
sub
sbb
push
out
jp
lock
inc
loope
ror
addr16
ret
mov
push
mov
int
pop
inc
pop
jnp
and
jbe
stos
dec
popf
popa
cmpsl
arpl
xor
pop
scas
push
aas
cmp
lea
in
inc
lods
lods
inc
inc
int3
pop
test
add
jl
daa
out
cmp
enter
xchg
lods
cmc
mov
dec
pop
jge
jae
jae
pop
xor
fidivrs
outsl
push
out
fwait
bound
shll
add
xchg
push
in
ss
int3
mov
inc
aam
xor
push
cmp
pop
shrb
xchg
movsb
jge
das
push
cmpl
lods
mov
in
lcall
jae
mov
ret
fisttpll
dec
je
outsl
lock
lea
jbe
cmp
xchg
mov
aam
adc
push
shrl
sub
gs
adc
movsb
pop
cmpsb
and
inc
loopne
aaa
lret
push
or
jge
aad
mov
mov
ret
rcll
lcall
lret
movsb
sbb
or
rcr
pop
mov
popf
adc
enter
pop
xor
inc
jge
popa
push
dec
push
insb
sbb
sub
cltd
mov
insl
or
push
shll
push
leave
inc
test
add
add
popf
push
inc
jo
dec
ljmp
push
sub
popa
into
pop
popf
lahf
xor
aad
fwait
in
xchg
push
inc
inc
and
add
mov
inc
ja
cwtl
cmp
inc
dec
or
imul
std
dec
push
leave
lcall
cmc
sub
xor
pop
rcr
je
mov
mov
push
mov
inc
leave
movsb
out
xor
pop
lret
loope
ror
fistl
in
mov
ss
call
pop
addr16
arpl
inc
inc
or
out
mov
aas
clc
sahf
subb
lds
or
leave
jl
add
mov
cmp
das
push
or
push
mov
stc
inc
mov
lds
std
and
inc
xor
jle
pop
repnz
lods
mov
mov
sub
mov
mov
sbb
mov
xchg
mov
push
lea
push
sub
das
cltd
out
lret
and
add
jnp
push
pushf
mov
shrl
jnp
clc
sub
xchg
ss
in
jae
jnp
loopne
cmpsl
jecxz
push
cmp
mov
pop
nop
das
push
xchg
push
cmp
lret
add
in
sub
mov
out
out
stos
sub
je
or
mov
les
out
fwait
sahf
jns
dec
inc
pushf
cmp
pop
adc
mov
rolb
pop
fbstp
leave
mov
jae
xchg
cmc
dec
or
pop
mov
fwait
xor
lea
mov
dec
popf
mov
xor
in
int
movl
jg
daa
je
aam
mov
dec
adc
orb
call
pushf
sub
jo
jno
lea
cwtl
pop
dec
fldl
pop
push
pop
push
and
popa
xchg
sub
inc
push
dec
dec
jecxz
cmp
shlb
push
out
jg
xchg
or
nop
jns
test
in
imul
mov
jo
add
xlat
or
and
cmpsl
fcoms
pushf
and
xor
adc
imul
cwtl
cmpsb
repz
and
jbe
notb
hlt
add
add
imul
outsl
popl
scas
xchg
mov
int
xchg
and
push
out
cmp
jle
daa
push
ds
push
jl
cmc
bound
xor
cmp
cs
pop
sbb
push
leave
mov
insb
xor
pop
mov
sub
sbbl
mov
or
sub
jge
mov
or
std
jb
repnz
push
dec
jecxz,pn
add
in
or
ljmp
mov
stos
mov
test
bound
cmp
inc
pop
outsb
jns
pop
out
inc
mov
or
cltd
mov
and
punpckhdq
sarb
test
or
adc
and
cltd
pop
ds
mul
in
dec
rorl
push
and
inc
jns
rolb
aaa
mov
mov
es
dec
mov
inc
sbb
out
aaa
outsl
shl
push
mov
fsubrl
outsb
out
cmp
mov
inc
repz
cmpsl
add
jbe
andl
shll
sbb
sti
add
push
push
sbb
out
es
mov
dec
ljmp
cmp
mov
popa
xor
sub
fnstenv
and
cmp
inc
xchg
dec
sbb
dec
leave
pusha
cltd
mov
or
aam
iret
aaa
dec
inc
sbb
and
mov
sahf
jb
and
inc
mov
push
inc
fiaddl
pop
xor
sbb
sbbl
cli
testl
pushf
add
fildl
pop
jne
xchg
rolb
insb
ja
sbbl
add
adc
push
mov
lea
inc
and
sbb
fmuls
pop
and
sahf
jg
movsl
adc
sub
inc
jnp
sbb
pusha
mov
pop
or
sbb
mov
push
into
cmp
fucomip
sar
sahf
in
in
subb
imul
pusha
rcll
xor
inc
jne
mov
push
pop
xchg
outsb
pop
jo
cmp
push
sub
pop
enter
mov
mov
jno
aam
ja
adc
xchg
xchg
pop
adc
inc
and
xchg
jmp
pop
sbb
mov
xchg
addr16
and
push
xchg
mov
mov
out
leave
or
sbb
sbbl
mov
xor
xchg
nop
int3
les
fdivs
sub
js
pop
in
in
cmp
rcrb
clc
push
lds
out
mov
insl
cltd
fistpll
int3
insb
cwtl
imul
lods
in
sub
out
push
outsl
or
fdivs
mov
adc
or
dec
mov
int3
insl
inc
push
into
data16
or
lcall
daa
push
xchg
sbb
jae
mov
out
jle
add
sub
test
pop
sub
popf
mov
cmp
xlat
orl
movl
xchg
adc
push
mov
mov
push
xor
xchg
jnp
xor
sbb
pop
ficomps
pusha
push
pop
and
in
shll
inc
movsb
jl
outsb
pop
mov
in
add
jge
fimuls
xor
dec
inc
add
pop
lock
cs
cmpsb
jp
les
sub
fildl
imul
filds
aaa
clc
adc
push
dec
ret
push
arpl
insb
iret
mov
mov
push
xchg
hlt
fnsave
push
je
testb
mov
loopne
inc
sbb
cltd
xchg
add
rcr
and
adc
push
movsl
repz
fnsave
and
shl
loope
fisubrs
loopne
jae
fnsave
imul
out
xor
out
pop
xchg
enter
cmp
push
push
cld
std
in
xchg
mov
mov
and
or
stos
or
mov
mov
sbb
mov
lret
sarb
jecxz
adc
sbb
or
add
dec
cmpsl
pusha
setnp
dec
xchg
add
fisttps
mov
push
jg
jmp
das
add
dec
in
push
or
and
shlb
lea
xchg
jnp
push
addr16
xchg
fwait
pop
cmp
cmp
shll
inc
sbb
scas
jmp
mov
push
lds
repz
fmuls
jbe
pop
mov
mov
pop
fbld
loop
mov
test
jle
test
add
clc
adc
adc
cmp
shrl
lahf
adc
jmp
dec
fcoml
testb
adc
subl
test
nop
dec
add
rcr
into
push
dec
sbbb
icebp
aas
dec
sbb
hlt
int
and
outsb
jmp
fs
mov
shrl
mov
pop
pop
sub
insl
mov
test
call
dec
int
mov
dec
mov
ror
rclb
test
int
push
lock
test
stc
ja
jle
repz
clc
jns
into
sahf
in
pushf
repnz
xor
fisubs
loop
outsl
cmp
xchg
jo
mov
xor
out
adc
clc
push
aas
lcall
mov
mov
xor
sub
pop
in
sarl
enter
or
enter
adc
or
ds
mov
or
data16
test
ljmp
xor
push
xchg
cmc
fs
and
leave
movsb
ret
cmp
xor
or
lret
mov
jb
add
pusha
or
jno
dec
test
das
and
shlb
inc
push
jae
addr16
imulb
and
mov
inc
jne
sbb
sbb
push
add
icebp
rclb
mov
or
fidivs
and
jnp
mov
ss
cmpsl
push
pushf
or
adc
xor
stc
mov
push
jo
scas
ret
pop
push
stc
push
pop
int3
rcr
xchg
out
je
cmp
cltd
bound
filds
pop
loopne
je
jmp
and
mov
stos
std
lods
jb
sbb
enter
out
mov
inc
mov
mov
jb
and
pop
loope
ret
in
mov
mov
lods
inc
loopne
or
scas
out
icebp
push
cmc
popf
gs
adc
call
mov
or
pop
lret
sbb
jge
inc
int
adc
xchg
or
sbb
mov
and
mov
loop
icebp
xchg
pop
and
shlb
inc
xchg
inc
cwtl
sahf
and
jns
mov
arpl
mov
jle
xchg
mull
enter
adc
es
stc
aas
pop
test
inc
lret
xor
fidivs
test
lock
arpl
in
push
shlb
inc
mov
adc
sub
call
fsubrs
inc
movsl
lret
mov
dec
fildl
adc
xor
in
stos
je
mov
sbb
clc
mov
ljmp
mov
out
push
push
push
roll
aad
jo
mov
into
pop
sbb
sub
fs
push
mov
aaa
jmp
test
iret
add
mov
push
inc
lea
das
or
pop
adc
xor
scas
popf
pop
shrl
mov
repnz
clc
insl
adc
dec
test
jmp
popa
je
push
das
adc
push
mov
cmc
mov
ret
lcall
push
mov
outsb
rorl
push
fs
sahf
lahf
mov
pop
out
int3
ret
adc
jl
and
iret
mov
xchg
int
into
xchg
test
push
mov
mov
mov
leave
pop
lods
imul
xor
sahf
push
xor
cmpsl
mov
scas
leave
add
popf
dec
add
iret
adc
pop
cmp
popl
xchg
dec
pop
and
mov
pop
mov
adc
and
xchg
mov
mov
es
jge
aaa
insb
pop
gs
xlat
loope
fcoml
iret
lea
adcl
bound
add
fdiv
xchg
out
cmp
repz
jns
xchg
sbb
shl
ljmp
cmp
lods
or
into
xor
enter
push
pusha
mov
arpl
cs
push
pop
shl
mov
jg
out
lret
imul
jb
std
lahf
or
mov
push
call
popf
movsl
pop
sbb
lcall
pop
cltd
out
ret
mov
jno
test
cmp
jo
dec
in
pop
sarb
bound
je
movsb
push
popl
out
push
clc
je
push
lret
adc
cli
mov
lock
cld
std
push
fstps
lret
in
adc
fwait
xor
or
cmp
pop
pop
push
and
ss
inc
test
aad
xor
mov
xor
loope
push
sbb
push
mov
add
adc
adc
mov
jecxz
adc
loop
out
sbb
sbb
cmp
xor
push
aas
and
or
out
stos
fimuls
inc
cmp
xchg
shr
addr16
push
movsb
lods
sbb
pop
std
and
pop
inc
das
fisubrs
jb
xor
pop
mov
cltd
sti
js
add
movsb
in
mov
mov
je
push
rclb
mov
inc
sbb
dec
pop
into
rorl
ds
arpl
movsb
leave
mov
loopne
adc
jbe
dec
ja
ljmp
fildll
cwtl
popl
and
and
or
insb
sbb
jbe
inc
xchg
cmp
lcall
sahf
bound
out
loope
rcrl
mov
out
sub
inc
xlat
and
outsl
mov
aaa
stc
mov
ret
out
xchg
das
clc
push
mov
lods
or
nop
sub
sbb
dec
fwait
jbe
aaa
in
arpl
sbb
sbb
loope
cmpl
aam
fcmovnbe
dec
pop
test
cmp
roll
in
jle
mov
test
and
out
mov
out
sub
xchg
mov
not
sub
or
xor
inc
inc
leave
xchg
sbb
cs
fbld
notb
inc
mov
push
mov
push
inc
jecxz
ss
in
inc
push
xor
sbb
push
mov
sbb
andb
int3
sub
pop
cmp
jle
mov
pop
push
jge
inc
xchg
ret
push
sbbl
push
pushf
ss
mov
inc
outsb
push
mov
xor
stc
fcom
adc
dec
mov
adc
pop
jb
jo
test
push
cmpsl
push
in
sahf
jmp
jg
cmp
in
imul
jb
or
add
lret
movsl
aas
sbb
jecxz
sub
dec
or
cld
lds
pusha
lea
lock
out
push
xor
mov
push
cmc
push
sub
movsb
and
shlb
inc
mov
mov
mov
sub
rcll
cwtl
mov
rsqrtps
stos
int3
jne
loope
rcrb
pop
mov
sarb
sar
lahf
add
mov
incl
mov
mov
jo
cmpsl
mov
or
into
dec
cmp
subb
or
pop
repnz
push
mov
sub
pop
inc
mov
xchg
mov
ret
mov
jns
adcl
push
negl
push
notl
pop
and
sbb
cmpsl
outsb
out
fimull
stc
xchg
jno
test
mov
dec
mov
jne
push
dec
sub
inc
ds
movsb
mov
xchg
fcompl
and
lret
inc
cmp
insl
add
insb
outsb
jecxz
pop
adc
sub
repnz
mov
subl
fildl
pop
xchg
cld
js
movb
mov
push
sbb
in
into
push
push
rcll
mov
dec
bound
mov
mov
push
lret
push
lret
repnz
jae
jmp
push
inc
les
jl
aas
hlt
sbb
rclb
push
adc
ret
mov
jmp
xor
addr16
mov
add
cltd
mov
xchg
or
push
std
bswap
sub
test
ror
pop
lds
xchg
ret
hlt
push
push
push
mov
mov
inc
inc
iret
cmp
cwtl
xchg
sarb
rclb
mov
mov
js
clc
adc
mov
xchg
in
lret
roll
jbe
je
ds
lahf
pop
test
xchg
in
pusha
cmc
push
xchg
xchg
in
mov
jnp
add
arpl
xchg
outsl
mov
test
outsl
aaa
imull
dec
cs
sub
fdivl
push
xchg
testl
dec
out
inc
add
sub
imul
fdivrl
adc
adc
fisttps
cmp
push
or
mov
jg
aam
ja
push
push
mov
mov
xor
pusha
pop
addb
orb
inc
lds
add
inc
dec
clc
and
adc
mov
repnz
sti
std
pushl
fs
stc
mov
or
cli
jle
pop
xor
xchg
mov
shrb
inc
loope
mov
mov
inc
aaa
clc
lea
loop
js
jo
adc
mov
fwait
cmp
in
ja
in
jle
cli
das
jae
push
movsb
ss
fisttps
fbstp
inc
cmp
mov
nop
xchg
icebp
xor
mov
cmp
insl
pop
pop
dec
cmc
not
mov
fistps
xor
pusha
insb
test
or
ja
and
data16
rol
rolb
xor
xchg
xchg
fwait
and
push
nop
sar
jb
add
adc
xor
dec
push
ficomps
mov
movsl
cwtl
xchg
aad
or
scas
in
push
scas
jge
dec
mov
popf
sbb
mov
inc
xor
rcll
ret
lcall
xchg
jnp
aaa
cwtl
leave
add
or
mov
test
adc
test
adc
fcmovnbe
xor
shrl
push
cmp
or
scas
push
out
push
insb
adc
jg
pop
xchg
sbb
fstpt
loope
inc
lret
rol
sbb
daa
mov
inc
aas
xor
insb
xor
shlb
lcall
push
xrstor
sbbb
repnz
hlt
and
and
jmp
jge
movsl
cltd
mov
cltd
push
repnz
hlt
jae
inc
aaa
je
cmp
xchg
imul
push
stos
adc
cltd
sti
cmpsl
cmpsb
pop
mov
cmp
jbe
mov
sub
cmpl
jbe
or
andb
int3
xchg
jo
rorl
in
sti
push
int3
aad
sub
dec
dec
dec
cmp
shll
das
add
popf
xor
or
jno
inc
mov
inc
andnps
xlat
sbb
xor
enter
jb
jmp
push
cmpsl
sub
pop
stos
addr16
xor
mov
dec
and
out
and
xchg
mov
ret
sahf
rorl
mov
pusha
mov
or
mov
popf
xor
cmp
jmp
push
fmul
popa
or
inc
mov
lods
subb
in
out
push
push
int
shl
mov
int
xchg
xor
mov
mov
jb
std
add
out
shlb
cwtl
jb
and
mov
sub
jecxz
xchg
push
push
jno
stos
lret
lock
dec
adc
cmp
xchg
fwait
stos
push
out
nop
xchg
shrl
dec
push
jbe
mov
fld1
mov
pop
jb
pop
pop
stos
push
movlps
lret
addl
test
and
lret
ret
pop
jmp
push
sbb
sbb
mov
in
lahf
ficoml
roll
and
sub
push
sub
pusha
dec
lods
adc
insl
lea
lea
dec
sub
ds
rol
dec
in
and
jg
cmp
pop
push
xchg
and
movsl
js
pop
subb
movsb
pop
and
pop
mov
jl
jle
xor
in
sti
clc
cld
xchg
add
xor
pop
dec
jbe
je
pop
xorb
jae
xor
outsl
push
mov
mov
jbe
or
sbb
sbb
sbb
sbb
inc
jo
or
outsb
mov
mov
jbe
and
aaa
test
fdiv
xchg
lods
add
push
fcmovnbe
fildll
xchg
stos
fs
enter
js
shll
aam
mov
jge
or
cmp
pop
mov
and
inc
testb
mov
popf
test
sub
sub
lods
pop
sub
test
inc
fs
pop
pop
push
inc
je
fisubrl
mov
inc
sub
ret
mov
lret
cmpsb
jl
pop
les
out
nop
jno
dec
push
daa
mov
int3
dec
or
xor
jl
fisubrs
adc
cmpsl
cmp
xor
cmc
sbb
mov
inc
cmp
fimull
mov
das
popl
push
mov
mov
test
pop
add
mov
add
sub
aam
jb
dec
or
stc
sub
fildl
outsl
iret
xchg
test
aaa
decl
je
fwait
bound
pop
lea
js
sub
ret
dec
or
pop
cmc
es
pushf
jge
sub
inc
arpl
pop
sbb
mov
inc
cmp
jl
cmc
jp
adc
sahf
sub
std
xor
jo
cli
xor
out
or
fs
cmp
jmp
stos
jb
adc
adc
fwait
xor
cmp
jno
adc
pop
jo
je
fnsave
scas
ja
fldl
outsl
loopne
mov
leave
stos
jecxz
jl
fdivl
cmpsl
loopne
jae
mov
ds
jecxz
sbbl
std
mov
xchg
imul
loop
clc
ds
fsubl
hlt
xor
inc
ficompl
mov
into
in
cwtl
rorl
cs
push
pop
adc
in
fcomip
cmc
push
and
and
xchg
mov
lret
fcoml
mov
sub
mov
pop
popf
fidivrs
xchg
mov
inc
sysret
cwtl
cwtl
pop
inc
lods
jnp
sbb
imul
js
push
fcomps
push
xchg
sbb
sub
add
out
dec
pop
pop
xlat
xchg
mov
fiaddl
mov
cli
pushf
je
imul
lcall
and
pushf
inc
xor
adc
cmp
int
mov
mov
repz
int
mov
incl
xchg
cmp
cmp
mov
pop
adc
or
ja
push
inc
xchg
jmp
push
jne
cmp
add
adc
aad
imul
xchg
xchg
add
push
sub
and
loop
gs
cmp
test
xchg
outsb
iret
push
das
arpl
out
pop
xchg
test
pop
cs
dec
enter
sub
sbb
cmp
jg
cmc
dec
mov
sub
sub
mov
xchg
pop
clc
repz
jne
sbb
mov
cmp
dec
orl
out
faddl
or
aad
jo
and
mov
leave
cmp
nop
dec
das
xchg
pop
mov
mov
dec
pop
rol
mov
mov
or
jo
aaa
and
push
push
cmp
and
fwait
into
stc
mov
pop
jg
scas
dec
or
movsb
mov
and
nop
push
pushf
hlt
add
adc
lock
adc
pop
mulb
lea
push
pop
data16
fnsave
hlt
xchg
pop
sbb
out
mov
movlps
stos
add
sbb
pop
je
movsb
pop
inc
jo
sbb
dec
out
jbe
cmp
or
or
in
mov
inc
mov
mov
or
repz
fs
popf
xor
call
cmp
loop
call
in
xorl
pop
stos
mov
xchg
arpl
icebp
in
push
push
fst
and
push
mov
dec
jo
xchg
int
cmp
dec
pop
push
jge
mov
mov
xchg
xchg
loope
imul
push
ds
and
dec
push
xchg
loopne
aas
test
adc
jns
je
fwait
adc
push
in
xor
push
cs
lds
xor
xchg
inc
push
mov
es
add
mov
test
mov
mov
outsb
bswap
inc
and
jbe
test
xchg
dec
arpl
and
cmp
int
jnp
or
mov
insb
aad
cmp
adc
sub
icebp
lcall
dec
pop
std
aas
dec
sti
fdivrs
jecxz
fsubrs
mov
outsb
adc
cmp
or
jbe
xor
sarb
sub
or
add
cli
xlat
psllw
fsts
mov
faddp
add
ss
jae
inc
jns
add
mov
sub
xlat
add
imul
lret
xchg
push
mov
stos
mov
dec
jecxz
jns
int
outsl
adc
stos
adc
fistpl
pop
stc
add
imul
and
ret
hlt
push
sub
ja
pop
aam
inc
and
mov
cmp
jle
and
clc
xchg
mov
mov
add
inc
stos
lret
mov
xlat
faddl
leave
fistpl
test
or
lret
loope
xchg
sub
cmp
push
xor
hlt
jbe
aad
lret
std
dec
lahf
jnp
outsb
pop
mov
mov
cli
rcrl
scas
sahf
and
cld
bound
pop
cmc
clc
into
xlat
mov
cmp
cld
das
shll
or
inc
push
das
pop
push
jbe
icebp
out
test
fstpt
fidivs
mov
aad
cs
cmpsl
xorb
mov
ss
cmp
in
lcall
movsl
xchg
dec
ljmp
mov
mov
cmpsb
pop
ss
fbld
out
cmp
enter
popf
pop
cmpsb
aad
adc
subl
das
push
inc
stc
ja
and
inc
aaa
popa
push
xchg
scas
pop
cs
or
out
clc
repz
jp
hlt
leave
cld
notl
and
rorl
pop
jbe
aas
ret
ficoms
in
sub
mov
pushf
addb
cmp
std
les
stos
jns
jl
cmpl
jl
xor
jmp
sbb
sbb
addb
adcb
adc
dec
mov
rorl
jnp
mov
push
xor
xchg
jbe
arpl
dec
inc
adcl
mov
jmp
sub
or
jo
out
and
dec
out
pop
push
sub
cli
inc
shll
mov
lret
push
jl
or
rcrl
mov
shrb
jbe
jae
imul
ja
roll
push
out
adc
scas
negl
pop
cmp
push
out
jmp
cmpsl
jae
push
xor
mov
jg
jno
cmp
cld
int3
dec
aad
jecxz
mov
stc
les
popf
lods
or
ret
push
mov
outsl
mov
jmp
clc
lret
in
jo
push
mov
adcb
xchg
sbb
mov
cmp
pop
out
mulb
lods
stos
not
inc
rol
push
aaa
lret
and
out
push
cmpsl
cwtl
push
inc
in
addr16
sbb
push
or
sbb
xchg
inc
mov
lret
pop
shlb
push
enter
mov
mov
and
sub
int3
and
push
mov
das
popf
dec
stos
cmc
mov
mov
pop
stos
add
sbb
xor
sbb
dec
insl
aas
mov
data16
xchg
mov
push
in
sbb
xchg
jg
pushf
inc
push
mov
fnstenv
and
repz
xor
ja
lock
mov
test
call
jg
sub
in
add
cmp
pop
pop
hlt
xchg
mov
cmc
int
and
out
and
jnp
mov
sti
cmp
mov
cmp
mov
push
lahf
xor
cvtpi2ps
mov
jle
jne
ljmp
push
icebp
fdivrs
dec
or
sbb
xchg
push
or
dec
and
xor
xlat
mov
popa
aaa
loopne
dec
inc
ja
scas
pusha
fsubs
sub
jge
je
nop
inc
sbbl
and
aaa
ss
lret
mov
lret
push
aaa
in
cmpsb
pop
add
fiadds
repz
je
xor
mov
call
xchg
push
cmp
push
xor
xchg
jnp
stos
fwait
or
push
cmpsb
lret
lods
pop
lods
add
or
je
and
loop
out
inc
imul
push
sub
xchg
cwtl
enter
cmp
shlb
pushf
cli
outsb
popf
out
adc
scas
jns
cmp
sub
mov
jmp
daa
and
les
inc
sbb
push
pop
les
adc
and
mov
push
mov
aaa
jmp
in
dec
push
push
ljmp
mov
push
test
push
dec
fsubrl
nopl
cmp
xchg
mov
mov
cli
repnz
xlat
daa
mov
and
popa
and
inc
adc
lcall
push
and
mov
ljmp
int3
cld
je
mov
arpl
push
jno
rolb
incl
imul
fldcw
jno
inc
inc
cmp
xor
jae
add
dec
push
dec
fstps
ljmp
insl
push
pop
out
cs
scas
jp
clc
sbb
or
sub
lcall
mov
sub
int
add
testb
lds
out
push
mov
xor
push
push
jo
jb
mov
cwtl
divl
jmp
mov
dec
imul
mov
mov
jle
mov
inc
cmp
sub
mov
push
xchg
sahf
mov
shll
int
push
cltd
xor
clc
sbb
into
pusha
fnstenv
mov
cmc
pop
mov
inc
insb
in
and
jns
jno
mov
or
out
insl
lock
stos
hlt
sahf
jmp
bound
ss
insb
mov
stc
popa
xor
adc
pop
mov
jns
aam
push
dec
jle
aam
sub
mov
xchg
call
into
stos
into
rolb
or
mov
pop
dec
push
push
cmpsl
xchg
ljmp
xor
lcall
ficoms
lods
mov
ss
pop
jb
dec
cmc
mov
fwait
popf
mov
pop
push
cmpsb
movsl
pop
popf
or
mov
arpl
enter
subl
insb
dec
cwtl
ja
hlt
push
mov
pop
xchg
cli
pop
add
in
pop
outsb
and
sub
xchg
pop
xor
cwtl
and
fstpt
push
cs
int3
ljmp
orb
pop
orb
sbb
insl
stc
bound
mov
popa
lret
and
dec
scas
loop
jmp
je
mov
fsts
pop
mov
arpl
fucomi
sbb
push
push
inc
mov
xor
dec
pop
push
sub
xor
jle
cli
enter
jb
insb
cmc
or
ss
ror
out
ss
aaa
fisubl
popl
xchg
out
cmovg
cmp
push
repnz
clc
inc
movsl
stos
ja
andl
mov
push
out
lock
loop
push
insb
insb
aam
mov
popf
addr16
sbb
dec
jo
fwait
pop
or
pop
movsb
push
arpl
xchg
orb
mov
dec
scas
das
ss
sbb
imul
add
lret
sub
sbb
jle
movsl
and
in
aam
dec
cld
and
icebp
test
pop
lret
push
dec
pop
jmp
insb
pop
jle
xchg
fildl
pop
pop
es
mulb
aas
cmp
sbb
fidivrs
jno
mov
scas
xor
sub
outsl
pop
in
jp
push
imulb
add
sbb
loope
cli
cmp
pop
fcoms
in
leave
mov
mov
sbbl
pushf
addr16
loopne
cmp
sub
dec
xchg
jg
in
movsb
mov
sbb
inc
stc
inc
in
pusha
je
mov
push
xchg
jg
std
xchg
fbld
cwtl
dec
jo
inc
pushf
sub
or
push
ss
mov
test
push
cmp
fildll
jno
or
mov
iret
push
roll
lods
push
xchg
jo
pusha
test
sub
out
popf
das
fistpll
addl
nop
adc
test
in
stos
or
mov
sarb
lret
repnz
sub
add
cmp
xchg
sbb
cwtl
lahf
xor
repnz
dec
pop
rcl
into
leave
sub
repz
mov
mov
mov
inc
dec
outsl
addb
lds
push
fcoms
lods
dec
out
dec
mov
pop
xor
mov
xor
mov
cmp
ret
add
mov
and
and
pop
push
test
and
mov
pusha
stos
inc
lods
bound
dec
and
in
iret
jo
cmp
ret
jmp
dec
and
test
push
push
arpl
daa
test
movsl
movsl
lods
psllq
jbe
xor
jnp
and
jle
mov
push
xchg
push
jb
xchg
scas
out
stos
ficoms
inc
repnz
in
dec
inc
cmovs
inc
adc
out
ret
xor
test
js
and
cwtl
test
pushf
or
push
lea
lcall
out
sub
insb
mov
clc
dec
cmc
cs
mov
mov
sbb
cmp
ret
or
testl
sti
sbb
cmp
dec
repz
lock
mov
and
out
and
jmp
xchg
mov
jp
jns
clc
mov
das
int
xor
xchg
inc
mov
sahf
bound
sbbl
mov
push
mov
stos
adc
sahf
shrl
pusha
ds
mov
mov
popf
mov
jmp
pop
jne
adc
pusha
push
pop
xchg
pop
push
jo
cltd
pop
cmp
push
mov
add
scas
xchg
clc
xchg
xchg
jne
and
inc
movsl
jne,pt
aaa
dec
mov
test
adc
xchg
push
cmc
jo
push
in
adc
negb
js
into
xlat
sub
inc
in
mov
and
or
xor
mov
sahf
sbb
add
lret
fdivrs
jne
adc
xchg
fs
test
in
xor
add
mov
push
repnz
outsl
cmp
pop
push
test
popf
push
mov
and
popf
sbbl
cmc
adc
pop
cmp
push
and
adc
clc
cmp
cwtl
iret
adc
xchg
or
dec
leave
dec
xchg
pop
dec
lea
aad
in
inc
mov
mov
leave
and
inc
inc
ret
daa
pop
pop
aaa
jbe
insl
cmp
in
andb
in
xchg
push
fildl
pop
rcrl
cmp
negb
nop
test
dec
or
rorl
pop
mov
cmp
into
push
jns
mov
nop
adc
lahf
js
jno
mov
xor
fstps
fucomp
loope
cmpsb
cmp
mov
lock
cmp
insl
cmp
callw
jp
decl
or
insb
sub
jg
add
jecxz
popf
and
cld
or
mov
mov
repnz
sub
imul
lahf
jns,pn
shlb
jnp
xchg
pop
pop
mov
int3
dec
in
or
push
sub
adc
decl
dec
stc
adcb
sti
sbb
xchg
jp
insb
lods
fucomi
movsl
cmp
inc
mov
popa
pop
das
pop
adc
cmp
scas
call
push
repz
and
ja
push
xor
sahf
adc
popa
mov
and
or
mov
mov
lods
icebp
xor
jne
rorb
lcall
inc
dec
shrb
mov
in
std
inc
sbb
mov
push
insl
xor
call
mov
pop
sbb
xchg
jne
idivl
inc
pop
sbb
ja
push
addr16
mov
clc
xchg
daa
mov
push
fistpl
push
adc
sub
int
mov
ljmp
inc
mov
push
push
ret
jge
addr16
jb
dec
pop
lahf
cmp
pop
mov
mov
jo
shl
aam
pop
and
inc
icebp
subb
and
ja
xor
pop
or
mov
aam
pusha
fwait
mov
aas
jb
push
push
push
pop
es
fdivrs
pop
daa
stos
mov
fildl
mov
mov
mov
imul
jb
xor
test
out
pop
mov
imul
es
mov
fcompl
fdivs
notb
inc
or
xchg
lret
lret
out
add
lret
mov
inc
cmp
push
dec
call
push
std
lds
mov
pop
push
and
inc
add
imul
jp
outsl
subb
pop
js
rclb
dec
cmp
mov
sub
rorl
mov
sbb
loope
pop
fdivrs
jmp
adc
jb
ljmp
in
aad
cwtl
fsub
push
mov
dec
ds
cwtl
out
cltd
mov
sbb
mov
mov
pop
add
fs
stos
test
dec
xor
sti
mov
pop
pop
mov
push
jg
arpl
cltd
sbb
lods
or
stos
jbe
mov
sub
jns
mov
or
push
mov
push
xchg
push
pop
mov
shrb
fs
int
cmp
xor
loopne
adc
inc
mov
push
popf
pop
jne
mov
mov
lcall
jno
pop
and
stos
jg
test
ja
lods
aas
out
inc
lahf
ljmp
shlb
cmpsl
lock
push
andl
add
pop
jecxz
rolb
fstps
addb
call
jae
fistps
push
cmpsb
jecxz
inc
shr
xchg
adc
jnp
je
pop
cmp
addr16
xor
sbb
lock
push
test
mov
repz
cmp
lods
test
icebp
mov
das
mov
jge
adc
inc
xchg
dec
cli
pop
stc
mov
pop
ds
jecxz
fistl
push
jb
movsl
cs
mov
xchg
loop
lcall
insb
cmc
cld
pop
test
je
scas
insb
repnz
ljmp
xchg
xchg
pop
push
mov
mov
scas
inc
xchg
call
cmp
dec
repz
dec
inc
mov
lahf
lea
push
mov
cmpsb
outsl
pop
aad
pop
xchg
xchg
mov
mov
or
sbb
cs
cmp
xchg
in
push
leave
xor
imul
pusha
push
sbb
xchg
xor
dec
add
out
fwait
cmp
xlat
inc
mov
out
sbb
jno
mov
aad
in
cmp
rorl
loope
push
adc
push
sub
shll
push
mov
cmp
mov
pop
pop
fs
test
mov
cld
xchg
push
jne
int3
outsl
or
cmp
jp
cmp
repnz
inc
fcmovu
fcomp
mov
and
negl
ffreep
pusha
les
outsb
sbb
sarl
xor
int
je
mov
add
pop
cmpsb
xlat
inc
inc
in
mov
jle
cli
pop
jbe
enter
pop
sbb
cmp
shlb
ja
popf
fstl
daa
pop
idivb
jnp
sarb
call
leave
mov
ret
mov
out
or
adcb
inc
sbb
inc
adc
repnz
mov
cmc
sub
xchg
dec
mov
push
cmpsb
popa
xchg
adc
maskmovq
notl
dec
outsl
mov
push
mov
ror
inc
out
push
cs
popa
sbb
popf
ret
pusha
aaa
push
stos
bound
idivl
jmp
sbb
test
adcl
jbe
sub
ljmp
imul
movsl
pop
pop
fxch
outsb
shll
jge
mov
and
jge
mov
cmpsb
ret
fldt
cli
or
dec
pop
xchg
scas
insb
jne
and
andl
out
fistpll
imul
sbb
inc
call
fldl
or
movsl
sbb
add
dec
xor
data16
outsl
pop
paddsw
sub
popa
mov
inc
sub
push
mov
pop
push
dec
frstor
mov
mov
push
repz
sub
nop
mov
sbb
rorb
stos
cmpsb
jb
mov
jo
dec
lcall
xchg
imul
mov
xchg
stc
sbbb
rcr
stc
inc
pop
bound
lret
cmp
call
xor
aas
test
xor
xor
hlt
mov
mov
xlat
pop
add
and
xchg
add
out
xor
xchg
divb
mov
lahf
push
cli
int
lahf
jno
mov
andb
out
mov
cmp
test
dec
pop
in
push
adc
dec
jl
mov
jae
cli
mov
shrl
lods
xchg
flds
aad
cwtl
lcall
out
cs
push
dec
mov
je
add
aad
cli
mov
pushf
mov
mov
xchg
sub
mov
sub
or
inc
loope
dec
pop
lahf
fidivs
xchg
int3
push
sarb
add
sti
lahf
imul
cmp
int3
mov
cmp
mov
dec
scas
int
scas
xchg
shlb
add
inc
xchg
adc
dec
mov
bound
aaa
mov
arpl
xchg
fsubrs
mov
cmp
out
call
je
push
arpl
push
or
mov
call
add
xor
mov
jo
stos
and
ljmp
push
push
mov
dec
scas
aad
dec
aas
inc
mov
mov
into
or
in
aaa
mov
pop
dec
int
out
mov
je
insl
rolb
and
add
add
call
or
ds
ja
cmc
lock
cs
out
xchg
xchg
sbb
xchg
or
out
cmc
les
sub
mov
daa
mov
mov
xchg
mov
in
shr
push
pop
mov
push
out
jbe
dec
pop
scas
insb
and
outsl
cmp
daa
aad
hlt
push
or
sub
aad
repnz
push
or
adc
xor
test
dec
mov
and
jecxz
mov
cwtl
fmull
push
stc
shll
je
jnp
addr16
cmp
jns
pop
xchg
xchg
adc
mov
xchg
mov
fldt
xor
cmp
ficoml
mov
scas
or
sbb
gs
outsb
cmpb
in
jp
stc
push
aaa
add
jne
std
xchg
in
or
dec
cmp
xor
into
jle
xchg
insl
xchg
add
movsb
adc
inc
and
xor
push
pop
in
scas
sbb
push
mov
lods
rorb
pop
shrl
lahf
jge
add
scas
and
fisubl
sub
shl
push
jnp
pop
push
sbb
fstl
dec
pop
or
push
inc
lods
sub
sti
or
inc
lea
lds
xorl
inc
adc
jbe
sub
sbb
dec
inc
lea
inc
fmul
dec
and
mov
shll
adc
dec
imul
mov
sub
jmp
in
push
outsb
xor
imul
ss
inc
sub
loopne
cld
push
xchg
leave
inc
insl
mov
cmp
cmc
cmp
or
cwtl
mov
cmp
and
dec
int
sti
and
add
xchg
pop
jg
xor
cmpl
test
lcall
sub
sub
push
shr
addl
jp
imul
dec
mov
out
out
hlt
addr16
in
lods
pop
dec
pop
and
jo
cmc
fcoml
mov
cld
pop
lahf
pop
sbb
and
scas
dec
rcr
xchg
cmc
push
cmc
and
cmp
movsl
stc
aaa
add
aam
inc
test
fisubrs
inc
pop
push
or
movsl
or
repz
sbb
aaa
xchg
stos
add
or
pop
jnp
rcrb
fwait
add
sub
cltd
mov
inc
cmp
and
mov
addr16
sbb
jnp
call
xchg
aam
pop
subl
add
xor
adc
stc
xchg
outsb
bound
push
dec
loop
push
mov
cmc
cmpsl
dec
jge
xchg
jl
and
xor
jmp
fisubrs
sbb
dec
in
fwait
data16
push
stc
out
pop
inc
and
push
or
cmp
inc
dec
je
push
int3
dec
jmp
cmp
out
sahf
stc
lret
das
mov
cmp
sub
mov
mov
mov
fadd
xchg
xchg
xorb
or
fcoms
fwait
das
es
test
sub
add
loopne
sbb
imul
es
imul
pop
out
jo
add
roll
adc
popa
lcall
fildll
mov
adc
out
pop
fwait
mov
test
stc
addb
out
scas
sbb
les
xor
loopne
mov
sub
adc
mov
js
pop
cmp
scas
lea
aas
dec
xchg
push
movsl
inc
adc
movsl
scas
dec
inc
movb
dec
pop
enter
lea
mov
fucomip
xchg
rcl
cld
mov
and
into
dec
cmpsl
sub
arpl
movsl
pop
loopne
push
aad
jle
jp
add
cltd
data16
mov
pop
adc
mov
popa
mov
testl
bound
mov
push
xchg
insl
sub
int
inc
ret
add
test
lock
sub
jno
les
push
xlat
lcall
inc
sbb
in
jp
add
lods
xchg
push
xchg
push
xchg
dec
push
adcl
in
xchg
pop
stos
jno
rol
fbstp
push
ljmp
xlat
xor
sbb
jge
aad
cmc
bound
ds
or
mov
sbb
in
cmpsb
pushf
mov
or
jbe
xor
gs
inc
push
or
jmp
movsb
xchg
dec
aad
xchg
xchg
dec
idiv
add
in
pop
mov
push
xchg
mov
jl
and
and
sar
push
xor
cmp
inc
hlt
neg
push
push
or
jmp
in
add
daa
mov
aaa
add
mov
xor
adc
add
rol
fidivrs
notl
fisubrl
leave
xor
popf
dec
dec
xchg
arpl
cwtl
das
addl
jge
or
outsl
fucom
les
ds
cmp
mov
xor
inc
dec
mov
shrb
push
add
push
aad
iret
jno
mov
inc
dec
jg
out
jo
shrl
cmp
xlat
fs
mov
sbb
das
stos
in
das
int
inc
in
es
xor
inc
mov
stos
aam
jl
js
ljmp
ficomps
inc
cmpsb
dec
pop
cmp
jbe
xlat
fnstsw
hlt
jns
inc
and
fildll
xchg
or
fnsave
push
xchg
sub
adc
jecxz
fsubl
dec
push
mov
xorb
adc
xchg
cmp
xor
adc
aaa
sub
xchg
movsb
sarl
aad
push
fiadds
into
fdivs
stos
lret
pop
data16
enter
pop
sbb
pop
cld
inc
jmp
repz
mov
cmp
mov
dec
mov
mov
or
lahf
push
sete
inc
xor
push
std
clc
mov
test
mov
sbb
cmpsl
xor
xchg
cmp
sarl
lods
sbb
mov
push
ret
pop
imul
stos
popa
xchg
pop
xor
add
push
mov
jb
jae
pop
scas
scas
repz
inc
test
or
dec
shll
sahf
rol
imul
mov
lods
sub
imul
mov
loopne
inc
sub
out
and
imul
jns
repz
sbb
int
mov
push
int
jp
mov
and
out
imul
ja
out
sub
insl
fwait
pop
xchg
xchg
pushf
pop
mov
add
xor
and
test
xlat
repz
out
adc
ret
adc
mov
iret
rcrl
mov
cmp
in
test
popf
mov
push
jb
jns
push
popf
add
mov
lock
or
sub
pop
jbe
loopne
push
jmp
insb
in
or
inc
nop
pop
cld
adc
inc
adc
push
push
add
ja
lods
jne
inc
inc
stos
lret
pop
jge
into
dec
dec
cld
adc
iret
insl
jae
mov
leave
test
jo
mov
cmp
cmp
mov
lret
pop
shr
and
mov
push
shll
mov
push
add
test
mov
xorb
cltd
ret
cmpsl
in
cs
pop
push
imul
push
cmp
adc
mov
movsb
lods
fnstenv
sahf
ljmp
sub
icebp
std
xchg
add
push
mov
inc
es
int3
sub
stos
incl
jae
rcrb
sbb
dec
ss
and
into
in
add
imulb
fs
dec
jns
cli
rorl
fwait
jle
in
hlt
add
stc
and
fstps
xchg
outsl
xor
jle
adc
jmp
xchg
sbb
adc
add
fs
xor
nop
dec
cmc
jmp
sub
mov
xor
push
or
adc
clc
rcrb
data16
out
daa
pop
push
cwtl
aas
jb
shll
pop
sub
cmp
pop
cmpsb
xor
and
pop
cmp
daa
std
stos
mov
xor
dec
adc
std
leave
data16
stos
mov
dec
add
aad
loopne
inc
mov
pop
mull
xor
movsl
push
mov
adc
iret
cmp
dec
aaa
jmp
shrl
divl
pmaxsw
cmp
int3
lock
imull
repz
cmp
xor
sub
test
leave
repnz
popa
sbbb
push
mov
cwtl
xchg
mov
add
cmpsl
cmpsb
cmp
iret
and
out
sahf
xor
jae
sub
ljmp
and
push
outsl
jno
les
scas
ljmp
jecxz
mov
sub
mov
mov
and
mov
push
cmp
clc
test
or
lcall
jecxz
in
sub
aas
dec
adc
mov
sbb
into
dec
xchg
and
cmpl
pop
imul
int3
in
lock
and
outsb
ret
push
mov
lcall
mov
out
push
and
scas
and
ficompl
rorl
rorb
clc
or
sbb
adc
mov
dec
xor
lahf
mov
inc
cs
mov
sahf
stos
sbb
inc
push
les
fildll
push
out
sub
inc
sbb
neg
mov
cs
popf
xlat
mov
fwait
and
add
add
insb
test
jnp
add
or
mov
into
andb
inc
xchg
pop
in
ds
pop
aaa
xor
mov
lea
inc
mov
and
mov
inc
enter
insl
xor
daa
xchg
fnstenv
cmp
dec
inc
fistpll
xchg
sbb
xchg
inc
insb
dec
jmp
mov
shrl
out
fwait
in
movsl
movsb
std
mov
mov
mov
adc
mov
inc
xchg
in
jbe
iret
or
rcll
in
clc
sbb
lret
movsb
mov
inc
jne
cld
jne
jae
xor
loop
cmp
cltd
inc
aam
mov
test
mov
rcl
mov
cmp
push
cmc
mov
ret
sbb
loope
repz
jle
jns
cmpsb
xchg
xor
pusha
aam
fs
clc
push
add
into
inc
out
xchg
adc
dec
addr16
mov
into
jbe
loop
and
push
mov
je
mov
jb
sbb
xor
xor
adc
inc
sub
sub
lcall
xchg
int3
and
cmpsb
js
dec
push
sub
mov
fwait
and
jge
loop
cmp
jo
shll
mov
sub
cmp
ucomiss
pop
jbe
pop
pushf
pop
es
and
popf
scas
mov
xchg
or
or
jbe
xor
aaa
pop
adc
mov
imul
add
jne
push
ja
aaa
cli
adc
aas
jb
jo
add
adc
mov
jle
xorl
pushf
int3
cmc
adc
std
sti
ljmp
inc
scas
pop
push
pop
inc
pop
fidivl
mov
stos
ret
sub
dec
xor
xchg
fnstcw
clc
fwait
mov
jnp
xlat
outsl
nop
or
push
push
ret
dec
mov
lea
ds
out
mov
pop
fiadds
das
aam
dec
aaa
loope
push
sbb
repz
dec
and
lret
and
mov
repz
pop
lcall
jmp
aad
lahf
xor
leave
and
and
inc
adc
aaa
rcl
popa
mov
mov
popf
mov
repz
popf
mov
pop
xor
lea
test
dec
pop
or
inc
adc
ret
push
jg
jnp
inc
cwtl
cmp
insl
lahf
push
sarl
mov
jle
mov
jge
and
mov
jno
mov
fldt
arpl
push
fucomi
cmpsl
mov
lcall
inc
dec
movsl
in
sarb
movsb
mov
fistl
mov
scas
dec
cltd
imul
fsubr
pop
xchg
shl
sbb
rcrl
roll
xorl
cmpl
movsl
fxch
cmp
dec
mov
idivl
fbld
push
mov
idivb
lods
jg
sbb
andb
jl,pn
mov
repnz
clc
lock
adc
test
cmpsb
xchg
int3
mov
adc
push
out
push
jae
sbb
push
cmp
popa
loopne
or
push
in
cmpsl
xor
pop
sbb
pop
adc
gs
jo
jne
mov
pop
fsubl
mov
dec
mov
adc
fcomip
sti
in
test
insb
lcall
mov
aam
sub
daa
jp
push
and
enter
mov
sub
dec
aas
dec
fisubrl
xchg
pop
in
pop
dec
das
xor
mov
cld
jmp
sbb
js
xor
lods
pop
dec
adc
fmul
cwtl
mulb
movsb
jl
mov
push
xor
adc
scas
fcoms
cli
mov
mov
leave
adc
mov
pop
adc
push
and
mov
adc
pop
xchg
je,pn
les
xor
jle
roll
daa
fimuls
lock
cmc
fcmovbe
push
mov
outsl
xor
xchg
add
in
sbb
jle
push
ret
mov
ss
jno
scas
add
xchg
cmp
add
cmpsl
sbb
pop
xchg
add
popa
mov
in
mov
sub
mov
cmp
sbb
sbb
xor
sub
lret
lahf
mov
add
xchg
fs
ja
es
xlat
mov
jg
ja
inc
push
hlt
add
inc
sbb
push
lods
inc
out
inc
cmp
jmp
addr16
imul
jp
mov
cmpsl
jo
ret
lds
mov
stos
mov
mull
and
pop
add
sub
fprem
push
xor
lret
add
pop
lock
pop
outsl
adc
out
pop
cld
inc
mov
hlt
lret
fdivs
sbb
xlat
stos
xchg
xchg
sub
add
and
imul
out
cmp
and
fwait
out
pop
cs
fnsave
fs
jbe
add
ror
jae
xchg
inc
push
xor
sbb
cld
mov
or
jg
test
xorb
push
dec
adc
lds
dec
jns
xor
jg
cmp
xor
adc
cltd
fimuls
inc
jp
rcrl
mov
andb
sub
mov
arpl
cmc
adc
mov
rorb
and
mov
mov
jbe
xor
mov
dec
fisttpll
jo
mov
je
jnp
sub
in
cmp
mov
loopne
and
mov
dec
cli
adc
fwait
and
cltd
mov
loope
mov
dec
jmp
test
inc
les
jno
and
sub
imul
sbb
pop
out
inc
or
pop
rol
or
inc
mov
dec
out
daa
mov
lret
aam
jnp
add
jecxz,pn
lods
sbb
lcall
dec
mov
jg
fildll
push
stc
into
xchg
xchg
or
cld
lods
push
test
fs
sub
sbb
mov
insb
in
jge
shrb
mov
arpl
jle
fcoms
imul
pop
imul
xchg
ret
xchg
js
jl
mov
addr16
sbb
adc
sub
pusha
test
pop
sub
push
add
aam
xchg
push
popa
push
jo
push
imul
mov
faddp
lea
sub
mov
dec
add
into
or
clc
out
popf
sub
fdivrs
push
shlb
leave
movsl
cwtl
mov
push
mov
aad
pop
cmp
clc
jb
stos
mov
xchg
sbb
cmc
in
das
clc
adc
aad
fs
pop
push
push
sub
jno
sub
imul
sbb
mov
jmp
mov
mov
add
ffreep
nop
xchg
jge
mov
cmp
cmpl
inc
mov
lret
repnz
mov
cmp
ljmp
loopne
outsl
leave
in
loopne
sti
mov
sahf
sbb
lods
andb
int3
aaa
mov
jo
adc
data16
sarl
mov
mov
dec
mov
mov
clc
and
xor
rcl
xchg
xchg
out
scas
inc
lods
mov
xchg
pop
dec
lock
mov
mov
push
jg
xchg
enter
add
daa
or
icebp
xchg
pop
adc
jns
das
push
cld
es
sbb
popa
cmp
movsb
pmuludq
mov
xor
pop
daa
loopne
adc
lods
cs
pop
add
and
jbe
pop
adc
mov
imul
pop
leave
mov
mov
cs
fsubl
data16
dec
xlat
js
xor
mov
push
sub
push
jno
ss
jle
cmpl
lcall
xchg
pop
inc
mov
js
rcll
cwtl
jmp
scas
xor
push
xchg
ret
pushf
out
push
jmp
aas
mov
jmp
cmpsl
cmp
out
xchg
mov
jno
pop
cld
loop
sbb
and
in
adc
add
sub
cmp
add
test
int
jo
leave
int3
ret
ljmp
and
cmc
xor
mov
insl
aad
stc
push
jg
je
xchg
in
popa
cld
xor
adc
dec
cltd
jo
sbb
jg
fadd
push
mov
ja
sub
sub
add
ret
cmpsb
cltd
pop
pop
addr16
sbb
sbb
dec
inc
add
cmp
scas
in
jl
lcall
or
or
aas
mov
test
and
pop
mov
imul
clc
cld
add
les
lea
inc
inc
sbb
pop
aam
mov
test
mov
mov
cmp
fstpl
mov
rcll
cmpsb
fdivrl
or
mov
pop
dec
inc
inc
orb
push
mov
rclb
mov
shll
mov
pop
sub
jbe
icebp
mov
mov
imull
cmp
pop
and
int
sti
pop
mov
repnz
stos
dec
fnsave
mov
fdivs
xor
mov
ds
inc
pop
xchg
sbb
mov
or
push
add
adc
mov
fdiv
cmp
lret
shll
popf
xchg
inc
in
roll
push
fadd
ret
into
mov
and
adc
les
xor
jl
add
orl
addb
adc
jb
adc
stos
dec
push
les
sub
stos
icebp
gs
in
stc
mov
jmp
popf
rorl
and
fimull
cmpsb
fildl
mov
mov
test
fimuls
in
imul
jl
dec
into
ja
in
btr
cmp
repnz
sbb
jg
inc
repnz
loope
sbb
and
repz
jl
push
sbb
cli
inc
lds
mov
sub
adc
fcomi
sub
push
loopne
out
icebp
lcall
dec
nop
mov
and
cmp
inc
rorb
push
test
pop
mov
test
dec
mov
sub
mov
call
sahf
dec
pop
fsubrs
push
inc
ljmp
pop
cmp
in
outsb
sbb
xor
or
rol
fistpll
pop
or
and
daa
fdivrs
push
ljmp
mov
lea
and
xchg
adc
scas
ret
shrl
aam
test
subl
xor
dec
add
inc
and
mov
sar
lret
fstps
pop
loop
cmpsl
inc
and
jp
fwait
enter
fucom
xchg
rorl
lret
jnp
or
mul
pop
orl
ret
daa
add
test
xchg
mov
movsl
cltd
pop
inc
adc
shr
movsb
add
sub
mov
gs
pusha
xchg
movsl
push
add
push
lds
mov
jne
in
xor
jb
cmp
fildll
leave
stos
mov
mov
push
cs
cmp
call
push
jle
dec
sahf
inc
jecxz
fildl
jns
cmp
loop
sti
sub
sbb
int3
sbb
les
cmpl
pop
dec
adc
inc
sub
mov
mov
inc
xchg
pop
jb
fdivl
fcmovne
stc
enter
mov
mov
pop
adc
jnp
pop
add
push
sub
fcompl
mov
lahf
xchg
cmp
dec
dec
movsl
ljmp
add
jne
push
je
aas
mov
cmp
xchg
cli
cld
stos
into
inc
mov
imul
movsl
test
sbb
movl
stc
scas
inc
subb
or
mov
and
sbb
loope
lea
xor
mov
adc
add
jb
push
nop
jo
ficompl
repnz
xor
daa
fbstp
xchg
shrb
or
rorb
scas
in
and
and
mov
gs
dec
hlt
adcl
jle
add
lods
loop
dec
loop
jge
mov
sub
sbb
mov
add
das
mov
pop
loopne
sbb
scas
pop
xchg
push
aas
notb
jmp
jo
pop
in
rorl
sbb
mov
enter
xlat
pop
hlt
leave
inc
sub
mov
and
test
cmp
popl
inc
loopne
in
adc
lods
sub
int
loope
popf
fiadds
sub
jo
push
std
rclb
lea
std
out
loope
scas
cmp
loopne
add
or
imul
pop
pusha
xor
mov
sub
into
dec
adc
or
pusha
mov
adc
fnstcw
and
pop
ss
pop
js
lods
sbb
lds
popf
lcall
adc
and
jecxz
test
lcall
push
add
cmp
ret
cmp
dec
cs
addr16
pushf
pop
adc
or
dec
call
mov
or
aaa
and
cwtl
icebp
lret
lea
jnp
push
or
cltd
or
aam
cmp
mov
xchg
ret
push
add
in
add
pop
add
dec
sbb
add
imul
pop
adc
imul
mov
push
hlt
push
aam
les
sti
outsl
inc
pop
cmp
es
pop
pop
mov
mov
mov
test
test
int
push
sarb
lret
push
dec
aad
xor
mov
gs
lcall
je
testb
lret
dec
lcall
jp
adc
addr16
inc
jl
push
bound
clc
mov
push
clc
stc
rolb
repz
mov
cmp
je
mov
xor
fsubs
push
shl
dec
inc
or
xchg
and
rolb
test
lahf
mov
jbe
push
jne
adc
push
jg
ljmp
inc
enter
push
mov
scas
push
bound
mov
in
es
leave
sbb
inc
mov
pushf
mov
test
or
lods
mov
das
dec
xchg
mov
clc
adc
lret
mov
test
mov
xchg
or
inc
mov
popa
arpl
jno
cmpsl
aad
xor
mov
mov
ds
into
test
orl
dec
ret
push
sbb
mov
add
insl
lret
es
mov
adc
push
adc
mov
repnz
nop
cmp
dec
rclb
sub
sahf
push
mov
in
jns
adc
cmp
cmpsl
mov
rolb
cmp
imul
loope
popf
or
and
xor
sbb
cmc
lahf
cs
or
lock
rcll
int
imul
test
add
lods
mov
jmp
fldenv
jno
nop
leave
div
xchg
incb
xor
xchg
unpckhps
cmpl
sbb
xor
or
ljmp
or
std
and
hlt
dec
xlat
jae
lock
and
mov
pushf
repnz
das
jecxz
mov
fiadds
mov
mulb
in
aas
sbb
sub
or
enter
nop
adc
pop
stc
into
jmp
ret
je
add
mov
xor
jp
jae
dec
enter
lods
scas
lea
mov
daa
sti
or
mov
pushf
imul
jecxz
add
or
jb
push
clc
jmp
inc
mov
lds
insl
jmp
xchg
gs
in
or
bound
jno
in
orb
and
jl
stos
insl
xor
decb
test
movl
cmpsl
adc
jb
pop
or
cmpsb
xchg
push
icebp
stos
ret
ja
rcl
fldcw
lret
pusha
or
pmaddwd
and
push
les
mov
add
lds
mov
fcomi
adc
inc
addr16
mov
es
shll
xchg
or
xchg
repnz
int
inc
jnp
adc
inc
lock
cld
jle
and
mov
stos
adc
or
inc
cmpsb
loope
xchg
xchg
cmp
cmc
in
in
xchg
mov
mov
stos
hlt
stc
adc
mov
push
cmp
sbb
jmp
jne
scas
adc
in
mov
jmp
rcl
pop
or
xchg
mov
mov
sub
mov
int
sbb
or
ret
insb
adc
lock
pop
fdivs
mov
pusha
dec
xlat
pushf
movsl
push
lret
push
icebp
lock
dec
ja
bound
fs
arpl
cmp
in
jno
or
push
inc
jne
aaa
mov
cld
mov
push
cmp
lock
repz
mov
movsb
xchg
adc
bound
xlat
scas
std
jmp
xor
mov
jl
pusha
xchg
leave
sbb
jg
mov
in
jge
shld
push
js
cld
xor
arpl
loop
jge
and
cmpb
mov
fcomps
mov
and
dec
movntps
push
sub
seto
ljmp
addr16
xchg
pop
sub
xchg
inc
sarl
cs
mov
hlt
lret
push
lds
dec
scas
int
pop
jo
push
clc
cmp
and
andb
dec
loope
mov
add
push
loopne
or
pop
cmovl
lea
adc
ficoms
xchg
pusha
fs
and
lret
xchg
push
popf
les
push
mov
cmpsl
xchg
cmp
xadd
out
jmp
stos
pop
ret
dec
push
jb
lock
out
xchg
cmp
cmp
and
or
adcl
jecxz
jl
nop
cmp
je
fucomip
inc
enter
out
cmc
rol
xchg
shll
mov
mov
ja
je
pop
xchg
push
mov
mov
ficoms
push
push
mov
and
shl
aam
xchg
ljmp
aad
outsb
jne
lods
mov
jp
pmuludq
sub
xor
in
sahf
or
or
push
jmp
push
adc
sub
movsb
xlat
enter
les
ret
dec
xchg
ja
dec
clc
sar
out
and
and
fldt
sbb
jp
loop
addb
xchg
jmp
jb
addr16
or
jae
cs
jp
scas
sub
push
sub
push
add
jle
daa
inc
mov
mov
jo
xorb
mov
es
negl
daa
out
into
pop
subl
ljmp
mov
mov
adc
fs
adc
js
inc
pop
jle
push
xchg
jo
scas
jno
pop
push
fbld
sub
fadds
cltd
outsl
orl
push
sbb
push
cmpsl
mov
stc
pop
cld
ret
xor
clc
popf
sbb
or
and
cmp
lea
rcr
xchg
mov
jbe
and
xor
fcoml
mov
jmp
es
xchg
and
cmp
xchg
cmp
mov
and
out
pop
into
pop
js
out
mov
adc
or
out
rcrb
inc
add
addr16
mov
andb
sub
xchg
mov
or
mov
inc
js
mov
lret
xor
sbb
call
sbb
mov
fnstsw
and
or
cmpsl
mov
aam
add
sub
sbb
sbb
repz
repnz
cwtl
js
and
pop
ficompl
mov
push
hlt
je
dec
mov
shr
mov
lcall
clc
or
addr16
xor
addr16
sub
shl
push
mov
push
stos
dec
dec
rorl
mov
xchg
push
imul
daa
cmp
stos
lods
push
hlt
pop
adc
ja
lret
lret
je
adc
icebp
gs
cli
pop
and
mov
adc
pop
loop
xchg
jbe
cmp
mov
jle
jmp
popa
das
sahf
js
gs
cmc
sbb
pop
mov
cmpsb
aaa
insl
mov
invd
adc
push
mov
mov
out
or
mov
cli
mov
add
stc
arpl
sub
test
subl
std
fcoms
aam
mov
jl
sbb
cmp
loop
push
dec
xlat
mov
and
sub
lret
mov
cmc
lret
pop
mov
fmul
scas
out
push
or
stc
std
sti
dec
cmp
mov
cmpsl
xor
loope
pusha
pop
pushf
dec
fildll
repz
adc
imul
inc
std
dec
pop
mov
pop
ret
jne
push
lcall
das
cmpb
xor
es
sbb
mov
pop
sbb
loopne
ljmp
inc
lods
pop
adc
test
arpl
sub
movsb
pop
mov
in
sub
scas
xchg
rcrb
cmp
xchg
add
push
shrb
push
or
push
mov
adc
insl
lahf
lds
push
xchg
in
and
and
mov
push
sub
pop
divl
push
xchg
stc
mov
leave
mov
addr16
or
sbb
pop
mov
insl
mov
push
shrl
imul
enter
lret
nop
inc
push
mov
idivl
cli
or
aaa
aaa
ja
in
movb
dec
jb
mov
add
outsl
mov
mov
adc
mov
jne
fdivs
lods
sub
movsb
mov
dec
jge
bound
mov
mov
cli
stos
xchg
iret
pop
smsw
scas
sub
push
xchg
cltd
in
add
mov
enter
ret
insl
cmp
lods
push
pushf
lea
inc
hlt
and
sub
or
adc
cmp
ret
cmpsb
pusha
pusha
or
mov
inc
fwait
inc
and
mov
in
frstor
cs
mov
lret
ror
popf
push
std
push
in
pop
sbb
pop
stos
cmp
cmc
jnp
sub
push
stc
or
sub
sub
cld
cmp
adc
lahf
out
pop
bound
jle
push
jle
btc
xor
mov
pop
insb
out
in
test
popw
sbb
inc
jne
fcmovne
dec
in
push
sbb
das
imul
xchg
push
shrb
fwait
dec
xor
or
sub
jg
and
xor
fiadds
jnp
jl
xchg
mov
imul
jg
push
out
aad
rorb
mov
lock
jecxz
jnp
repnz
jp
push
pop
pop
call
push
lea
enter
or
push
xchg
lret
imul
insl
mov
sahf
rcrl
dec
fwait
pop
mov
mov
out
cwtl
pop
inc
enter
mov
and
outsl
mov
addr16
pop
or
icebp
jge
dec
ret
xchg
xor
push
xchg
cmp
rcr
imul
outsb
call
lcall
inc
xchg
in
out
test
inc
sarb
outsl
orb
in
jo
cmpsl
and
mov
add
stc
ljmp
xchg
and
scas
insl
push
and
enter
sub
lock
rcrl
in
mov
scas
dec
ss
push
xchg
mov
push
or
pop
test
mov
dec
push
mov
nop
je
push
pop
faddp
test
bt
fwait
push
shll
arpl
sub
out
fstpt
outsb
xchg
cmpsl
inc
mov
dec
insl
push
lods
rcrl
inc
mov
mov
movsb
out
mov
pop
push
cmp
push
fwait
lods
jbe
mov
sub
dec
pop
outsb
pop
inc
stc
mov
bound
addr16
lahf
test
pop
bound
test
ss
mov
sub
aam
int3
jbe
mov
xchg
dec
pop
aad
dec
sub
pop
imul
add
mov
movsb
testb
inc
push
loopne
pop
cmpsb
ret
jg
lcall
cwtl
int3
jp
adc
pop
sbb
push
scas
andl
pop
pop
fldl2e
arpl
mov
sbb
xchg
orb
xor
pusha
push
mov
adc
daa
xor
pop
addr16
push
fwait
pushf
adc
xchg
xor
daa
shrl
outsl
cmpsb
push
imul
and
test
gs
dec
xchg
mov
cmp
negb
cmp
mov
sbb
mov
testb
inc
cwtl
cli
notb
dec
fstl
dec
mov
mov
fwait
cmpb
and
cwtl
adcb
xchg
outsb
jnp
fsubp
xchg
sbb
adc
dec
frstor
ja
cmpsb
push
movb
cmp
xor
out
jmp
loop
xchg
jne
and
push
sbb
sub
lock
push
push
clc
xchg
movsl
jo
es
inc
decb
push
lods
mov
cmpl
stos
minps
mov
push
push
shll
push
cmpsb
dec
mov
jp
fiadds
xchg
mov
das
out
sti
lods
jo
into
jle
repnz
mov
int
mov
test
xchg
adc
jns
leave
imul
push
push
gs
sub
push
mov
jo
shl
mov
cmpsb
mov
sbb
mov
push
loopne
cmpsl
rdpmc
xlat
call
sub
mov
pop
cmp
mov
shr
xchg
cmp
mov
cmp
pop
clc
push
les
arpl
int3
xchg
pushf
xor
mov
mov
adc
inc
and
xchg
mov
cmp
jg
rorl
cmp
inc
jg
jno
dec
pop
loop
mov
and
xor
lods
arpl
inc
sbbl
outsl
cmp
jg
lods
xor
sahf
cltd
inc
or
rorl
jmp
sbb
cmpsb
cwtl
ret
mov
dec
dec
mov
fisttpl
pop
adc
pushf
inc
cmpsl
xchg
xchg
xchg
xor
out
pop
out
mov
sub
movsb
fidivrl
push
std
add
jp
pinsrw
sbb
je
das
xchg
adc
les
jmp
cmp
cwtl
insb
jbe
jmp
leave
xchg
push
rcl
enter
ret
jo
jb
movsl
notb
xchg
ja
sub
adc
popf
jo
push
mov
idivl
enter
mov
push
test
mov
and
lret
rclb
dec
jge
xor
dec
jp
sbb
and
inc
or
pop
jnp
pushf
fistpll
lods
xlat
mov
mov
xchg
jl
mov
adc
ficoms
xchg
dec
jle
lahf
mov
add
mov
cli
lods
outsl
or
ds
sub
and
cmp
insb
add
or
mov
cmp
sbb
adc
inc
sti
push
fidivl
shl
push
push
aaa
imul
pop
inc
jns
dec
mov
jnp
adc
sbb
mov
sbb
ss
jl
and
hlt
popa
push
xchg
idivl
mov
jae
es
je
mov
xchg
addb
push
mov
loope
mov
imul
pushw
dec
inc
test
js
jmp
cmpsl
imul
jmp
xor
test
lret
mov
out
sub
popf
ret
and
movsb
xchg
and
add
push
sarl
scas
mov
movsb
mov
adc
adc
sub
pop
mov
jmp
cmp
std
or
pop
andb
stos
clc
cltd
inc
dec
testl
pop
stos
jmp
or
sub
lods
shlb
mov
xchg
lods
sahf
enter
lret
jle
and
mull
pushf
xor
fstps
cs
xchg
out
popa
mov
push
dec
mov
fs
outsb
sarl
jmp
ja
out
push
sub
mov
jl
push
insl
sbb
arpl
jno
jecxz
test
test
cmp
push
insl
ficompl
sub
das
stc
push
in
in
dec
enter
lahf
mov
ds
sahf
arpl
mov
mov
hlt
mov
cmpsl
rolb
and
push
test
xchg
fsts
test
test
or
cmpl
pop
inc
cmp
int
xorb
lret
or
jp
loopne
and
aad
int3
test
sbb
jo
out
or
and
js
sbb
and
xor
out
sahf
js
icebp
lret
pushf
mov
sbb
jmp
movntps
into
scas
push
xor
pop
jecxz
test
adc
into
sub
fs
std
mov
xchg
xchg
repz
and
xor
loope
roll
enter
addr16
mov
aad
dec
int
dec
cmpsl
or
push
std
push
outsl
jns
fsubl
aad
xchg
es
rcrl
sbb
mov
adc
movsb
popf
xor
movsl
xchg
aam
mov
pushf
mov
cmp
sbbb
loopne
cmp
das
ret
adc
mov
sarl
mov
xchg
shrb
cmp
mov
pushl
mov
repnz
aaa
aas
popa
or
out
int
mov
sarb
cmpsb
adc
ss
andb
fnstenv
add
mov
iret
outsl
and
pop
call
dec
stc
pop
movsl
xchg
out
jno
mov
loop
stos
fucomp
mov
pop
in
in
cmp
or
pop
imul
xchg
jmp
xor
mov
push
setns
inc
xchg
arpl
push
inc
je
jle,pt
dec
rol
mov
add
sub
sub
xchg
pop
stos
xchg
cltd
leave
lods
in
mov
out
nop
loop,pt
rorb
call
xchg
das
scas
sub
vpaddusb
divl
pop
mov
cmp
pop
pop
pop
test
or
cmp
add
jge
sbb
mov
add
add
xchg
push
xchg
sbbl
pop
jp
stos
xor
ficomps
daa
adc
add
imul
pushf
loopne
sbb
mov
fsubrs
filds
stc
stc
xchg
int
int3
mov
jb
daa
sbb
leave
fnstsw
pop
pop
jmp
bound
rolb
xor
mov
in
mov
and
and
popf
pusha
pop
loope
xor
bnd
insl
lock
daa
jbe
push
cmp
std
cmpb
mov
cmp
aam
push
out
icebp
push
test
rcrl
and
adc
sub
adcl
fisttpl
push
mov
fidivl
outsb
pusha
mov
jne
out
aam
push
sbb
xor
mov
fistpl
cli
push
mov
fucomi
je
adc
adc
sub
and
int
push
insb
or
mov
mov
cmpsl
and
es
pushf
xor
dec
sbb
out
call
loope
imul
xor
push
imul
cmpsl
jne
jo
cmp
bound
push
mov
cs
dec
sbb
push
inc
stc
push
rolb
js
mov
xor
mov
movsb
out
push
dec
adc
pop
fwait
daa
stos
sub
dec
cmp
xchg
push
bnd
add
sub
das
jns
imul
stc
adc
or
jmp
loope
hlt
ret
lcall
in
jl
incb
aas
shr
aad
adc
lcall
sti
dec
or
jp
clc
out
loope
in
mov
leave
test
andl
push
fwait
pextrw
mov
pop
fwait
and
out
sti
push
cltd
jmp
or
mov
add
mov
lret
pusha
add
dec
iret
xlat
cmpb
movsl
jne
adc
cmc
or
lret
out
cli
jns
jae
out
loope
and
xchg
mul
pop
and
mov
dec
mov
add
cltd
pop
shlb
mov
inc
pop
call
shl
imul
mov
pop
push
jg
movsb
xchg
inc
nop
and
in
es
das
sub
aas
leave
push
dec
xchg
dec
jle
leave
adcb
jno
mov
ret
scas
outsl
das
ljmp
movsb
push
jmp
sti
or
inc
pushf
pop
adc
ss
xchg
call
and
ret
leave
loopne
cwtl
jmp
fdivrl
mov
lods
mov
rorb
shll
add
imul
flds
fistl
adc
mov
pop
in
cltd
jl
push
adc
scas
or
data16
scas
add
mov
mov
add
and
jmp
push
mov
lock
test
sbb
aad
jbe
cwtl
aad
dec
or
es
inc
addr16
es
mov
push
push
xchg
iret
sub
and
mov
pop
into
cltd
mov
add
loop
jne
in
iret
fs
sarb
les
mov
inc
enter
xchg
shlb
cli
imul
clc
sbb
or
imul
cmp
in
ret
enter
inc
xchg
hlt
hlt
push
push
insb
test
lahf
pop
mov
adc
mov
mov
push
push
movsb
inc
mov
das
mov
leave
adc
mov
ss
in
push
and
mov
push
int3
int3
stos
lret
jne
sbb
add
aad
and
sbb
lcall
enter
xchg
xor
icebp
jle
hlt
fwait
cmp
ftst
xchg
sub
repnz
rcrl
bound
dec
push
xlat
adc
out
in
or
xrelease
into
mov
lods
hlt
dec
into
mov
notl
notl
jbe
in
inc
ja
push
mov
mov
out
fsubrl
mov
scas
js
pop
icebp
jp
aas
sarl
fbld
outsb
dec
cmp
cmp
mov
mov
int
out
test
mov
mov
ljmp
popf
adc
push
ret
or
cmp
jnp
in
mov
xor
std
push
xchg
ljmp
enter
sub
fbld
cmp
cmc
out
push
or
mov
sti
mov
inc
lds
jmp
les
inc
sub
sbb
jl
sub
outsb
jl
je
xchg
adc
pop
pop
scas
dec
mov
jb
sbb
xor
inc
bound
ja
stos
add
jmp
adc
lret
mov
pop
lds
les
dec
arpl
mov
pop
sbb
ja
push
out
xor
push
scas
rclb
jecxz
iret
pop
jns
pop
ret
clc
scas
mov
cmp
mov
jno
mov
jns
inc
xor
jb
mov
adc
ja
cwtl
outsb
int3
push
and
lret
push
jne
xchg
notl
jmp
out
sub
fst
add
mov
cmp
mov
push
adcb
xchg
in
fidivrl
push
dec
test
mov
popa
xor
mov
fcompl
cmp
mov
mov
aad
lea
mov
sub
outsb
mov
pop
sbbl
add
stos
cmc
test
hlt
bound
cld
push
sti
shlb
iret
dec
stos
int3
sbb
dec
lock
sbb
adc
test
inc
stos
jnp
mov
lock
mov
in
test
pop
mov
xchg
fcmovbe
lret
or
hlt
lret
pop
leave
jge
cld
lds
adc
or
loopne
jo
addb
les
cmpb
test
lahf
imul
mov
cmp
cmp
test
ljmp
stc
cld
mov
inc
jne
inc
pop
outsl
out
xchg
shr
pusha
cs
push
sar
lock
pop
xlat
imul
mov
pop
sbb
adc
mov
insb
lret
insl
fdivrs
test
imul
ret
add
stc
shr
jle
rcrl
pop
and
push
cli
lea
mov
sbb
stc
testb
adc
nop
mov
cmp
test
sti
popa
inc
xchg
mov
popf
jge
lock
xchg
es
outsl
lods
add
mov
add
jno
lea
mov
or
popf
sub
lods
dec
js
lods
mov
cld
and
ret
xchg
mov
lcall
pop
cmp
xor
popf
andl
adcl
out
cld
lea
mov
das
ret
mov
xchg
adc
mov
xchg
xchg
lds
sub
pop
and
sub
inc
fwait
jg
leave
xlat
jns
shl
xor
pop
pop
lcall
call
popf
dec
ss
aas
dec
jo
aam
cmp
loope
ja
sbb
gs
sbb
adc
mov
call
hlt
mov
insl
push
mov
add
and
mov
add
pop
test
test
sbb
sbb
xor
xor
incb
sbb
test
cs
mov
mov
xor
loop
test
jo
ljmp
jne
leave
xchg
or
and
out
jl
jmp
mov
test
aad
leave
out
lods
add
push
in
hlt
xchg
loop
std
cmp
cmp
pop
ss
jae
dec
sbb
xchg
push
incl
subl
ret
adc
je
sbb
xchg
test
bound
jle
fwait
mov
dec
in
push
cwtl
sbb
mov
sbbb
or
pop
lock
jle
and
dec
popa
subl
mov
add
ss
das
push
call
mov
dec
orl
in
std
push
sti
ja
imul
rcll
ds
sub
push
pusha
andl
pop
mov
and
cmpsb
test
pop
ljmp
call
or
mov
mov
mov
pop
jp
jno
jle
in
popa
data16
cmc
into
add
cltd
xlat
push
jns
in
rcr
int
sbb
sub
cmp
popf
imul
dec
enter
pop
mov
and
imul
or
je
xor
push
fnstsw
cmp
inc
loop
inc
mov
cmp
movsb
add
movsl
sub
mov
ljmp
inc
je
test
ja
sub
sbb
xor
jne
cmp
xchg
pusha
sti
and
addr16
popf
jecxz
dec
mov
pusha
xor
xchg
push
out
loope
dec
mov
dec
dec
dec
add
ret
cmpsl
ret
imull
mov
aaa
daa
xchg
xor
test
or
addr16
shrl
lret
or
mov
jmp
ljmp
or
repnz
mov
push
xchg
insb
inc
fcoms
xchg
or
mov
in
xchg
lods
push
in
sbb
push
popa
push
pop
lcall
fcoms
mov
pop
inc
xor
dec
fdiv
sahf
sub
mov
inc
out
pop
imul
push
enter
lds
out
push
or
int3
in
mov
push
fsubrs
addr16
push
cmc
adc
dec
adc
sub
ret
cmp
push
jecxz
dec
fiadds
ds
lcall
enter
subl
jne
mov
sti
sub
popa
insl
sbb
sbb
out
aas
loop
out
mov
push
push
xchg
inc
lcall
out
and
rcll
xchg
sub
test
mov
push
dec
push
sti
and
or
js
xchg
fs
jno
mov
lock
push
jo
clc
inc
xchg
lds
xchg
insl
sbb
sahf
xor
notb
mov
xor
enter
arpl
icebp
aam
frstor
jmp
insb
jmp
rcll
pop
pop
dec
std
pop
in
das
test
fists
jns
fistps
jp
in
jnp
test
stos
sub
sbb
mov
pushf
insl
cld
aam
test
xor
mov
push
or
or
mov
jae
or
pop
lods
int3
stos
push
mov
mov
int
dec
dec
push
adc
hlt
adc
mov
rclb
jbe
stc
jmp
ret
daa
out
jecxz
xchg
into
scas
pop
push
in
mov
lret
jl
sbb
aam
mov
aaa
jge
fldpi
dec
cmp
mov
add
lods
hlt
rorl
or
mov
lahf
sar
pushf
jle
dec
js
sti
sti
mov
adc
jge
les
mov
push
mov
movsl
cmc
repnz
mov
test
lret
cltd
dec
or
pop
pop
std
cld
in
mov
in
aaa
or
insb
adc
xor
or
mov
js,pt
inc
lods
cltd
jmp
test
sarb
into
ljmp
lock
sbb
lea
lods
pushf
jae
push
jo
ret
and
sahf
sbb
jno
mov
in
add
int3
lahf
mov
out
popf
popf
jl
fdivp
push
mov
ffree
xchg
pop
pop
ret
sub
push
inc
mov
pushf
or
push
addr16
test
jo
mov
xchg
dec
push
fsub
sbb
adc
pusha
aad
cmp
jp
in
fmuls
imul
cmp
mov
jmp
int3
in
lea
push
or
push
jns
cli
push
fstpl
pop
or
and
jge
xor
fcomps
shrb
cmp
cmpl
push
imul
mov
dec
fsubrs
div
leave
mov
xor
jnp
imul
mov
xchg
mov
lahf
inc
movsl
les
pop
xlat
mov
adc
stc
push
xchg
xor
push
nop
xchg
push
cmp
sbb
std
cld
mov
fwait
xchg
sbb
mov
icebp
fs
mov
popf
add
test
jge
or
xchg
sub
push
repnz
adc
and
movsl
insb
in
mov
arpl
outsl
clc
or
push
inc
fwait
adc
mov
lods
or
push
jae
ret
pop
sub
push
sbb
cld
pop
subl
test
push
clc
mov
xchg
repz
xlat
xchg
mov
and
es
pop
movl
lds
cwtl
jl
xchg
and
push
jg
cmpsb
int3
frstor
shlb
scas
test
and
xlat
loop
movsl
adc
or
jecxz
inc
outsb
push
in
xchg
dec
popa
dec
add
mov
lret
adc
ss
in
xor
jne
mov
in
jmp
cli
fists
jl
jae
arpl
out
cmp
fs
pop
mov
and
cmp
inc
test
das
or
dec
jmp
and
roll
cmp
mov
lahf
cmpsl
mov
pop
movsl
cwtl
mov
jmp
mov
mov
mov
dec
clc
inc
stos
push
xchg
out
add
int
xchg
and
mov
pop
leave
dec
push
aad
pop
push
mov
push
sub
jae
rol
dec
scas
icebp
mov
jne
sub
out
xor
loopne
pop
or
push
sbb
xchg
aas
mov
aaa
testl
push
mov
loope
dec
push
ficomps
loope
inc
jb
in
scas
xchg
xor
lcall
pop
fwait
and
xlat
jg
fidivrs
and
adc
mov
shrb
call
pop
pop
jae
xchg
arpl
xchg
inc
jle
cmp
adc
repz
and
jbe
inc
mov
sbb
ljmp
rcl
je
in
jp
fwait
sbb
mov
inc
shrb
sub
sbb
push
fldenv
pop
decb
mov
mov
xchg
pop
enter
mov
adc
xchg
pop
subb
or
inc
ss
xor
xchg
dec
pushf
lret
mov
aad
jl
mov
xchg
and
pusha
push
pop
mov
out
inc
cs
dec
pop
test
in
cmp
clc
out
mov
jnp
repnz
roll
inc
pop
cld
fucomp
cmpsb
adc
pop
bound
jmp
cmc
mov
pushf
std
adc
jp
xlat
jbe
mov
test
shlb
pop
mov
mov
mov
dec
loop
add
mov
test
lock
stc
sub
xor
dec
mov
mov
xor
jle
dec
xchg
cld
mov
mov
cmpb
cld
sbb
loop
out
xor
add
or
xor
adc
scas
lds
sahf
vandps
mov
insb
ficoms
jo
out
and
es
jne
outsl
sub
popf
mov
fldcw
jbe
lods
cmova
lock
loope
inc
popa
fimuls
pop
fnstcw
fildl
adc
lcall
push
and
jns
mov
imul
adc
push
rcl
mov
lods
movsb
jge
or
in
lock
jge
addb
dec
jns
inc
arpl
std
push
mov
pop
adc
push
ret
arpl
movsl
push
push
xor
loope
jmp
in
pop
or
punpckhbw
jg
outsb
ds
xchg
ds
sub
popf
cli
mov
sub
jae
cmp
xor
insb
fsubr
aam
mov
pop
std
bound
addr16
sbb
cmp
xchg
and
or
sar
call
aad
add
cmp
or
push
and
adc
mov
pop
fbstp
repz
lods
dec
mov
jnp
sbb
cmp
mov
in
pop
movsb
imul
ret
push
xor
add
movsb
push
arpl
inc
popf
lcall
xchg
into
mov
sub
adc
sahf
fcoms
out
lds
xchg
mov
inc
std
movsw
test
test
mov
popf
dec
divl
mov
les
bnd
mov
inc
push
jnp
xchg
mov
or
lret
mov
aaa
js
xchg
shr
adc
xor
movsb
std
jbe
cmp
adc
daa
mov
jmp
test
mov
nop
arpl
mov
push
push
iret
int
cli
add
call
fildl
repnz
mov
icebp
inc
repnz
push
pop
sbb
int
aas
push
mov
inc
sti
movsb
ret
in
insl
pop
inc
pop
lds
aad
in
jmp
or
mov
test
jnp
insb
lret
hlt
xor
pop
test
and
jecxz
adc
lods
push
jl
push
std
sti
cld
push
scas
adc
cmp
movsl
jp
xchg
mov
or
adc
inc
repz
std
push
pusha
scas
int3
movsl
jmp
add
add
ss
xchg
mov
inc
add
inc
push
jo
and
push
imulb
fcoms
gs
mov
shl
dec
ret
sbb
in
pop
pop
mov
adc
sub
add
mov
xor
jge
cli
negb
xchg
dec
mov
out
cltd
mov
cmp
in
fwait
mov
xchg
xchg
xchg
adc
xlat
dec
xlat
mov
loop
or
push
jno
ss
das
mulb
add
js
sbb
lahf
adc
bound
ret
push
push
test
in
sbb
fsubs
ds
mov
xchg
adc
and
cmc
dec
loopne
stos
mov
scas
cld
es
into
sbb
iret
aaa
imul
mov
xor
mov
xchg
push
mov
push
inc
popa
stc
push
dec
pop
int3
or
and
dec
inc
out
fnstsw
test
add
add
popa
stc
add
push
add
mov
inc
sbb
popf
add
cmpsl
adc
lea
mov
mov
movsb
icebp
lcall
cmp
call
xchg
rcr
aam
addb
aas
adc
add
inc
into
xor
mov
repnz
iret
test
sbbl
pushf
mov
sub
out
inc
mov
mov
dec
sbb
jae
adcb
ret
jecxz
and
pop
cs
push
data16
sarb
and
sub
psubq
cmp
adc
scas
aad
push
xchg
dec
ret
xor
pushf
xchg
gs
int
and
loope
repz
cmp
push
xchg
adc
ds
nop
mov
fisttps
cltd
xor
js
ret
push
lret
out
sub
mov
sub
orl
jno
andb
mov
sub
mov
mov
clc
lock
mov
adcb
into
jg
call
cmp
ret
inc
outsl
lods
lretw
mov
js
das
jle
and
idivl
adc
psubq
sub
xchg
sub
push
int3
sbbb
mov
push
or
lods
stc
xchg
mov
vpackuswb
stos
rcrb
add
mov
roll
mov
push
push
mov
push
sti
sub
jnp
mov
add
or
cwtl
cmp
inc
mov
push
mov
je
mov
xchg
in
aad
mov
imul
lods
push
dec
bound
sti
jns
insb
jmp
adc
out
lea
push
out
sub
cmp
or
arpl
je
addb
daa
add
addr16
xorl
andb
pop
add
fsubrl
out
aad
xchg
mov
push
push
icebp
movsl
xor
jg
xor
mov
add
pop
mov
pop
push
mov
leave
stc
fwait
cli
fadds
xor
stos
stc
leave
decl
std
pop
mov
lcall
data16
adc
mov
sbb
mov
ret
orb
jmp
sbb
dec
es
in
fisttpll
mov
test
sub
add
fsub
inc
mov
mov
subb
push
movsb
lods
mov
sub
xchg
dec
fwait
int
outsl
and
popf
dec
sbb
addr16
mov
cmp
out
and
and
sub
cwtl
aaa
mov
ss
sub
cwtl
mov
repz
jae
movsb
mov
jo
cltd
jne
push
lods
jns
xchg
adc
stc
xlat
sahf
push
rcll
xchg
into
subl
add
movsl
imul
or
cmc
data16
ret
pusha
dec
dec
loope
hlt
int3
test
push
dec
rcll
in
xor
mov
loope
rcrl
pop
fdivrs
sub
mov
inc
pi2fd
mov
loope
inc
xchg
dec
and
imul
push
xor
js
adc
mov
test
mov
xchg
rcll
inc
cmp
fcoml
lods
xor
push
into
mov
push
pushf
out
add
mov
call
ja,pt
mov
insb
and
jle
icebp
shl
lds
cmpsl
lds
das
inc
or
ja
out
push
sbb
test
rorb
loop
mov
and
xor
inc
ja
mov
inc
mov
and
mov
and
jle
adc
mov
mov
ret
inc
adc
and
jbe
inc
jbe
ss
cmp
enter
lret
jmp
sbb
inc
dec
outsb
fbld
mov
movsl
sbb
jge
repz
insl
andb
mov
xor
cmp
dec
out
pushf
add
dec
cmpsb
and
adc
dec
push
mov
mov
pop
lahf
ss
in
xchg
xchg
out
mov
stos
and
cmp
mov
cmc
js
ds
in
add
adcl
aas
mov
cmc
mov
data16
idivl
movsl
ret
push
xor
mov
stos
push
rcrb
fs
or
data16
push
xchg
addr16
iret
push
xchg
lahf
or
fisubl
out
jo
imul
or
das
mov
push
jnp
stc
xlat
imulb
aam
jo
mov
jb
insl
add
arpl
push
aas
ficomps
cmp
and
outsb
or
mov
pop
stos
jp
testl
mov
cmp
inc
mov
xor
stos
pushf
loopne
arpl
daa
inc
inc
mov
popa
repnz
sbbb
mov
cmp
jle
push
mov
dec
mov
fisubrs
mov
negl
fwait
sbb
xor
and
rolb
fcoms
pop
arpl
aad
jbe
push
jle
xor
int
ret
add
loopne
dec
xchg
cld
fucomi
or
out
or
add
lret
fbstp
push
push
negl
hlt
mov
xor
adc
mov
jb
xchg
pusha
fisttps
cmp
hlt
jl
push
sbb
mov
mov
xlat
sahf
loope
and
pop
loop
add
ljmp
push
inc
popf
out
xor
out
test
mov
dec
loop
je
ss
add
ss
and
mov
nop
cmp
sbb
ret
cmp
out
fadds
pop
lcall
fisubrl
rclb
stc
mov
scas
adc
repnz
cmp
leave
arpl
inc
enter
and
test
dec
pop
iret
in
jg
addr16
pop
mov
jmp
or
les
ret
fnsave
sbb
dec
hlt
bound
sbbl
push
mov
mov
mov
jo
push
push
mov
bound
xchg
in
aad
out
jne
push
or
cmp
dec
faddp
ja
cmpsl
push
cmp
ret
push
mov
fwait
cmp
dec
or
xor
adc
add
ds
or
cli
dec
leave
pushf
xchg
add
addr16
sti
mov
xor
imul
out
ja
roll
rcr
lea
rolb
and
out
sbb
mov
mov
cmpsl
pop
aaa
pushf
sub
pop
xlat
lock
shrb
mov
test
sti
jnp
loopne
add
mov
mov
push
cli
lods
inc
xlat
fld
fnstcw
in
retw
fucom
mov
mov
pop
hlt
mov
sbb
in
stos
rcr
mov
pop
outsb
sub
adc
xchg
pop
aam
inc
lds
test
and
in
push
pop
fldl
or
xchg
fimuls
into
inc
aaa
int3
cmp
xor
sbb
pcmpgtb
pop
enter
xchg
xchg
jnp
stos
std
xor
aas
and
mov
add
and
loop
dec
and
stc
ret
or
push
mov
cmp
rol
fdivrl
lret
cmp
mov
addr16
cmc
decl
out
fnstenv
inc
jo
js
mov
cmc
adc
aas
pop
xchg
rorb
les
adc
adc
and
iret
in
shll
sub
daa
mov
je
sti
mov
addr16
or
sub
mov
outsb
shrl
inc
mov
aam
aad
xor
nop
sbb
hlt
aad
lds
sbb
push
xor
jns
pop
lcall
and
jae
xor
xorl
mov
mov
mov
daa
jle
jecxz
dec
sub
xchg
sub
rcll
stos
jmp
imul
add
stc
rcl
ror
xchg
sbb
jecxz
add
pop
test
popa
pop
sbb
insb
cmp
in
sti
dec
es
adc
inc
lock
dec
stc
mov
pop
out
out
jb
loope
sub
add
and
adcb
daa
add
sarl
lahf
pop
idiv
insb
and
leave
jb
jmp
in
mov
loope
aas
rcrb
mov
mov
pop
addr16
cli
or
xor
out
imul
mov
xchg
jmp
aam
mov
pushf
pop
and
xorl
cmp
jecxz
adc
dec
ror
pop
xchg
je
loopne
push
int
and
nop
adc
scas
sbb
adc
push
fisubrs
dec
int
dec
inc
popf
push
xchg
sbb
push
pop
daa
dec
inc
and
sahf
dec
or
jmp
stos
and
rcl
xor
dec
add
dec
bnd
loopne
dec
outsb
sbb
scas
loopne
scas
ja
adc
out
xchg
bound
sub
sahf
adc
or
adc
push
xlat
in
movsb
cmp
test
fmul
lret
and
cs
sbb
jo
sti
mov
add
das
js
scas
test
aad
mov
mov
sti
ss
adc
and
sbb
inc
repnz
flds
push
outsb
in
sbb
jg
jle
xchg
enter
sbb
outsl
mov
sub
cs
xchg
loope
loop
cld
ljmp
mov
mov
and
and
jb
and
in
push
std
jle
pop
out
cmp
fwait
lods
outsl
lods
dec
adc
pop
test
sub
stc
jo
xor
lea
inc
jno
jne
cmp
lods
push
aam
jbe
in
shlb
push
mov
and
mov
cmp
outsb
out
mov
mov
aam
sub
inc
in
repz
sub
int3
hlt
das
ss
inc
mov
sarb
fldl
add
or
incb
cmp
enter
adcl
clc
inc
pusha
xor
daa
xor
push
int
cld
cmpsl
jbe
add
inc
loop
in
mov
jb
adc
int3
je
adc
jno
pop
mov
imull
leave
clc
inc
ror
test
pop
inc
and
dec
outsb
imul
push
sti
int
outsb
in
mov
jnp
pop
xor
lock
jae
mov
sbb
push
push
rcr
sbb
pop
std
into
mov
push
xchg
dec
sbb
lcall
stc
dec
and
movsl
dec
mov
sbb
loop
push
xchg
xchg
jo
loop
sub
inc
sbb
stos
cmp
pop
or
cltd
lret
cmp
pop
jecxz
mov
dec
mov
sbb
mov
or
mov
imul
es
sub
mov
xchg
xchg
test
mov
pop
push
fwait
push
sub
jnp
and
dec
jecxz
insb
cmp
pop
pop
scas
js
sub
fdivp
push
sub
out
out
cmp
mov
mov
jbe
lcall
add
mov
in
inc
pop
pop
adc
loop
insb
xchg
call
das
int3
and
scas
push
and
pop
jecxz
xchg
xchg
pushf
out
mov
arpl
icebp
xchg
ja
in
mov
fsubrs
ret
pusha
lock
movsb
dec
cltd
xor
lret
cs
jb
nop
sub
or
jmp
js
mov
xchg
aad
add
sbb
push
push
dec
dec
loopne
jge
movzbl
sti
push
jbe
lods
shl
jg
cwtl
push
dec
adc
xlat
jmp
out
mov
push
pop
sahf
pop
cwtl
xchg
push
fs
adc
cld
int
push
sahf
stos
adc
and
mov
test
adc
cwtl
lea
lahf
push
insb
test
ja
mov
mov
repnz
jnp,pt
hlt
push
in
ss
in
ja
inc
cmp
xor
je
add
pushl
mov
das
lds
out
pop
xlat
mov
testl
pushf
xlat
xchg
adc
cmp
pop
add
es
xchg
outsb
jne
mov
jnp
call
jb
into
lea
cmp
adc
cmc
jo
ret
adc
hlt
lcall
movsl
dec
outsb
fnsave
loop
addr16
cmp
or
iret
push
lods
ret
mov
cwtl
mov
sbb
pop
loopne
fbld
cmp
cmp
out
rol
mov
xor
mov
xor
cmpsb
popf
sarl
xchg
mov
es
push
xchg
adc
or
or
repz
xchg
test
adc
pusha
xor
xchg
ret
test
push
sub
out
les
mov
mov
hlt
xor
mov
sub
push
pop
xlat
adc
jmp
arpl
out
xchg
mov
xor
imul
popa
pushf
fwait
pop
xor
in
outsl
pop
fsubs
pusha
int
adc
sbb
popa
mov
xchg
xor
push
mov
fidivrl
fisubs
xor
movb
dec
gs
dec
jnp
ror
outsl
pop
push
popa
clc
and
push
jo
mov
push
or
ret
jns
test
imul
xchg
addr16
movl
repz
aas
outsb
mov
das
push
cmpsb
mov
mov
jle
in
repz
cmp
mov
shrl
inc
ds
inc
movsl
dec
mov
out
adc
xor
xchg
leave
lods
outsb
into
inc
ficoml
push
in
mov
aam
stos
add
xor
fimull
xchg
xchg
mov
sub
sub
adc
lods
jno
or
test
adc
mov
xchg
push
jmp
mov
stos
lods
jno
push
repnz
xor
adcb
pop
push
mov
adc
xchg
jno
jo
outsl
inc
jae
sbb
cmp
mov
mov
inc
subl
bound
add
ret
out
or
dec
fisubrs
lock
add
je
mov
sbb
int3
std
jnp
fstpt
andb
inc
or
hlt
push
xchg
dec
inc
das
je
pop
xchg
stos
mov
test
xchg
dec
mov
jmp
inc
insb
cmc
leave
in
and
stos
call
repnz
adcl
ret
testl
notb
fbstp
inc
stos
xchg
icebp
mov
cwtl
pop
mov
insb
jo
xor
pop
stc
sub
push
pusha
dec
adc
outsb
cmpsb
cmp
jg
popf
dec
dec
stc
push
gs
sahf
push
mov
std
xchg
lds
push
stos
adc
jb
lret
scas
movsl
test
push
in
pushf
inc
push
and
loope
insb
mov
negb
test
popa
mov
push
movsb
fidivs
and
ds
repz
test
sub
dec
xchg
arpl
push
repz
iret
aas
mov
mov
out
dec
inc
xchg
add
arpl
fcoml
inc
es
xor
cltd
fs
mov
stc
xor
pop
out
push
popa
dec
push
adc
jle
loope
jo
add
jnp
sbbb
dec
mov
shll
xchg
pop
pop
dec
cmc
or
xlat
pop
scas
jns
jbe
aad
or
fnclex
mov
addr16
pop
cmp
mov
xor
sbb
cltd
pop
lods
lret
add
in
mov
outsl
daa
mov
xchg
mov
sbb
mov
fidivl
inc
aaa
les
xor
dec
adc
cltd
leave
or
mov
xor
adc
std
mov
stos
outsl
add
movsl
leave
pop
adc
dec
addb
stc
enter
loope
xlat
das
push
aas
mov
adc
out
jmp
scas
iret
sbb
sub
aas
push
add
jecxz
fwait
add
push
in
jno
arpl
cmc
roll
pop
cmp
shr
mov
xchg
mov
pusha
rcrb
sahf
out
aaa
jle
xchg
or
outsl
cltd
mov
int3
mov
sbb
dec
mov
cmp
ja
in
mull
mov
and
hlt
pop
lea
jge
mov
sbb
outsl
loopne
mov
pusha
loop
arpl
cmp
lods
pop
adc
int
test
jae
sbb
inc
sahf
xor
mov
outsl
xor
div
daa
leave
hlt
rolb
adc
jbe
ficoms
aaa
xor
xchg
pusha
adc
and
push
rorb
lcall
mov
xchg
pop
xchg
add
pop
into
les
and
sub
loopne
scas
sub
mov
dec
in
mov
lods
and
enter
loopne
notb
ret
aaa
add
push
dec
ljmp
test
aad
jg
popa
cwtl
mov
dec
ret
ja
sub
jae
adc
hlt
push
jae
push
sbb
lock
inc
push
das
aaa
push
pushl
pop
jmp
pop
push
cld
mov
jp
fsubrp
inc
divps
xor
fsubs
je
lods
pop
inc
mov
mov
pop
xchg
repz
clc
sbb
xchg
add
jne
add
ficoms
cmc
lret
xor
dec
push
xor
xor
mov
movsb
cwtl
cmp
push
rcrl
pop
arpl
mov
pop
dec
xchg
hlt
movsl
dec
sub
push
mov
cmpsl
cmp
jl
pushf
adc
aam
mov
xchg
mov
jno
jo
jl
test
fmuls
xor
adc
js
push
xlat
and
repz
mov
rcll
ljmp
jo
insb
pop
push
ljmp
mov
imul
and
mov
fs
adc
xchg
aaa
inc
and
fscale
fmull
add
jl
dec
bound
mov
mov
dec
or
dec
sub
push
jo
jp
jp
or
push
aas
scas
sub
cmp
pop
sub
sub
movsb
xchg
dec
push
shlb
fistl
stc
sbb
data16
cwtl
sbb
sbb
aas
jne
data16
or
push
lods
sbb
xchg
xorl
mov
xchg
jl
xor
or
mov
fisttpll
fldl
sbb
arpl
mov
icebp
movsb
lahf
es
xchg
xlat
mov
cmp
push
mov
mov
popa
jne
pop
lahf
xchg
mov
fcompl
js
lret
lock
in
or
and
and
pop
sti
add
shll
fstpt
mov
fsubl
pop
movb
into
addr16
repz
jmp
lock
xlat
add
repnz
xorb
sub
sub
dec
inc
addr16
movl
je
xchg
ja
mov
add
xchg
inc
hlt
mov
and
fildll
adc
and
xor
and
mov
xorb
dec
push
movsl
cmp
jp
sbbl
dec
adc
add
and
cs
xchg
dec
dec
imul
cli
test
in
push
rcll
inc
addr16
rolb
cmp
das
pop
imul
sub
sahf
imull
lds
push
sbb
insl
inc
fiadds
icebp
cltd
imull
into
stos
and
inc
jmp
xchg
xchg
into
add
fldl
mov
stc
imul
dec
sub
mov
inc
insb
mov
inc
roll
pop
fidivs
iret
and
enter
xchg
jl
rcrl
cmp
ds
out
mov
and
insb
dec
aas
stos
jno
arpl
pop
js
jae
or
jae
and
adc
outsb
xchg
mov
in
and
loope
outsb
mov
shr
nop
adc
into
shll
sbb
pop
aaa
ret
aam
mov
sbb
pop
mov
adc
fs
ss
dec
dec
addr16
je
lods
inc
inc
nop
addr16
bnd
xchg
leave
adc
jecxz
test
adc
jae
pop
std
lahf
mov
enter
dec
iret
es
pop
mov
scas
shr
and
aas
pop
mov
dec
popf
hlt
in
pop
add
inc
repnz
jmp
xor
in
sbb
cmp
adc
dec
push
cmpxchg
fisttps
xchg
cmpsb
push
xchg
insb
mov
sub
pusha
inc
adc
pop
mov
pop
jge
mov
mov
lcall
leave
or
ret
and
mov
jecxz
push
lods
jo
and
stc
vcvttpd2dqx
mov
lods
jno
and
hlt
push
les
insl
mov
push
das
xchg
rcr
pusha
dec
adc
cltd
xchg
dec
sub
fnstsw
aas
inc
das
or
cld
in
dec
mov
push
add
jge
xchg
lods
sti
push
test
ds
mov
int3
jmp
dec
fmuls
sub
mov
int
or
test
cmpsb
fisttpl
das
mov
dec
add
jbe
push
movhlps
clc
xchg
hlt
add
jne
and
test
or
cltd
rcll
ds
popa
divb
mov
sub
xchg
stos
adc
dec
mov
and
mov
or
imul
stos
adc
ror
mov
sub
mov
jae
mov
or
out
das
repnz
clc
xchg
push
in
sbb
jae
inc
inc
lods
xorl
les
push
xchg
push
popa
ret
sub
ret
repz
int
ss
ss
lcall
popf
mov
das
out
xor
mov
mov
push
mov
or
mov
or
popa
enter
test
bound
mov
push
and
xor
dec
sbb
dec
les
pop
mov
pop
jp
mov
int
and
dec
stos
push
push
icebp
push
pop
int3
imul
mov
mov
sbb
cmp
push
lods
popl
or
loopne
sbb
pusha
jle
imul
jne
sti
or
sahf
aas
stc
adc
std
push
jnp
sbb
and
bound
jle
lret
xchg
cs
fldenv
jg
mov
inc
xor
bound
cs
mov
enter
daa
add
repnz
imul
or
pop
and
pop
xchg
pop
xchg
dec
adc
jg
cmp
mov
cmp
lods
or
adc
fsubrs
xor
push
pop
push
loope
pop
je
xchg
mov
adc
xchg
sarl
pushf
repz
add
mov
imul
pop
cmc
mov
lret
add
sarb
mov
add
outsb
add
lods
cwtl
hlt
pop
hlt
jle
xchg
or
add
mov
ja
xlat
lods
add
fsubrs
mov
add
fld
js
dec
repz
xor
nop
pusha
ret
rorl
stos
xchg
pop
outsb
imul
mov
adc
or
dec
fmull
push
inc
inc
call
jg
ds
leave
or
imul
jae
mov
jecxz
jge
mov
es
inc
incl
test
into
fmull
test
mov
rclb
mov
or
ja
cs
inc
out
xchg
cltd
push
in
jbe
dec
aam
iret
cmp
rcrl
bswap
stc
sub
js
xor
movaps
pop
pushf
lret
les
dec
scas
push
cmc
xchg
jecxz
fsubrs
loope
sbb
mov
and
sahf
fcoms
aas
icebp
inc
mov
xchg
sub
xlat
xor
sbb
and
int
out
xchg
mov
jbe
pusha
mov
cmpl
lock
xchg
call
mov
or
push
and
cltd
sbbl
repnz
lahf
movsb
xchg
cmc
clc
xor
iret
int3
inc
xlat
or
shr
cmp
add
or
mov
in
jno
out
sbb
sbb
scas
loopne
test
das
test
out
pop
lock
xor
push
mov
stc
sbb
inc
test
mov
cmp
scas
les
or
lahf
movsb
xlat
inc
stos
insl
lret
leave
clc
outsl
push
bound
les
dec
outsl
outsb
adc
aad
pusha
jmp
adc
xor
sbb
or
loop
push
adc
clc
xchg
lcall
xchg
mov
pop
movl
in
or
mov
mov
mov
and
test
jae
roll
jge
mov
xchg
push
enter
push
lret
stos
cmp
and
sub
in
movsl
out
sahf
dec
cmp
leave
push
roll
or
lods
mov
movsb
pop
pop
sti
les
outsl
adc
jl
out
movsb
int3
mov
push
xchg
jle
mov
fldt
cmpsl
sub
cmpsb
out
decl
add
imul
pop
cmc
mov
jo
sbb
pop
ja
das
pop
sbb
outsb
or
fwait
mov
in
mov
sub
insb
or
pop
pushf
or
push
and
sub
lret
cltd
jne
ret
pop
cs
leave
adc
pop
sub
jp
or
rcll
jg
push
push
fcmovbe
mov
fisttpll
outsb
orl
xchg
aam
push
xor
push
or
rcll
scas
or
clc
andl
daa
out
fwait
in
mov
jg
pop
imul
leave
ror
push
push
in
test
adc
dec
push
in
iret
dec
fcoml
scas
cmp
std
mov
into
inc
push
bnd
inc
jb
arpl
lret
in
call
das
les
mov
insb
inc
imul
push
push
xlat
mov
ljmp
dec
fsubrl
cmp
pop
push
mov
inc
and
leave
sub
into
gs
xorb
push
push
es
cmp
aam
ja
xchg
sti
jg
xor
xor
fnsave
in
lods
lods
stos
jne
std
or
jae
dec
movsb
popa
sti
cmp
int
cmp
mov
xor
inc
mov
pop
mov
xor
icebp
add
xchg
fdivrl
adc
rolb
xor
adc
inc
push
dec
jg
test
sbb
mov
in
movsl
pop
sbb
in
or
and
arpl
mov
dec
push
mov
mov
inc
insb
mov
and
mov
add
and
test
outsb
fisttps
cmp
add
inc
ret
mov
dec
pop
movsl
fadd
pop
pushf
mov
adc
in
movb
mov
out
ss
cli
mov
mov
data16
mov
sbb
mov
xor
testb
xchg
cmpsb
cmp
jno
inc
and
jg
xchg
dec
jl
out
dec
sub
xor
add
sub
mov
ret
pop
mov
jne
xchg
mov
mov
jecxz
cmpsl
add
mov
stos
test
and
in
push
loop
xor
movsl
adc
sbbb
mov
add
leave
cmp
aas
and
lahf
pop
shrb
lcall
cltd
cmc
lea
nop
or
add
and
adc
mov
test
dec
jnp
jp
lret
inc
insl
jl
cmpsl
add
add
stc
scas
addr16
addr16
cmpsb
mov
xor
or
pop
jbe
test
fdivr
mov
ret
cltd
sub
push
aas
mov
aad
xlat
mov
mov
inc
lods
mov
andl
fiadds
sub
sub
lds
clc
mov
aam
xor
dec
sub
xor
int
mov
jb
les
scas
addr16
sub
jne
popa
mov
cli
jo
sub
lfs
push
pop
sbb
in
jbe
lds
push
pushf
fsubl
mov
test
loopne
mov
lods
stos
xchg
popf
lea
ret
aaa
movsl
mov
mov
fnclex
push
or
aas
fbld
mov
stos
rcrb
jge
shlb
dec
dec
cmc
sbb
movsb
sbb
xor
jo
xchg
pop
mov
inc
adc
pop
add
pop
sub
bnd
mov
push
nop
xchg
add
fwait
dec
test
jmp
adc
loope
mov
jno
shlb
inc
inc
xlat
xchg
stos
inc
daa
cmp
push
or
adc
lods
adc
xchg
outsb
loop
xor
sti
adc
test
cmp
imul
ret
fcmovnbe
out
aaa
jecxz
xor
sbb
pop
sahf
pusha
mov
mov
movsb
mov
nop
xlat
sbb
inc
lods
add
push
cmpb
push
pop
icebp
xor
test
enter
out
nop
xor
xchg
fsubp
pop
pop
leave
mov
inc
sub
lcall
xchg
jbe
sti
inc
dec
out
pop
movsl
ficompl
dec
std
mov
lods
lods
sub
push
jnp
add
and
add
jo
stos
dec
call
mov
xor
sub
into
xor
popf
push
inc
adc
push
lods
or
xchg
cmpsb
mov
pop
inc
jle
sbb
js
scas
push
test
or
test
cmc
adcb
mov
pusha
jbe
jbe
hlt
push
mov
push
and
push
mov
leave
adc
mov
sbb
inc
leave
jg
adc
loop
lods
adc
dec
cmc
imul
imul
xchg
orl
jnp
push
std
push
sub
sbb
xchg
pushf
xor
sahf
les
push
cltd
sub
bound
cmpsb
sub
js
or
jp
mov
sub
mov
pop
xchg
mov
pop
je
pop
cld
pop
mov
popf
add
das
fadds
call
or
mov
push
cmp
push
mov
dec
int
jge
mov
mov
dec
aas
sti
iret
push
mov
sbb
ss
hlt
push
cmc
jge
add
cld
icebp
mov
in
jp
cmp
iret
aad
mov
add
mov
xor
dec
xlat
xchg
cmc
mov
out
or
pop
pop
mov
jl
je
sub
rcll
mov
sub
pextrw
out
ret
or
js
xor
cmp
mov
cmp
lods
dec
lock
add
pop
jg
and
cmc
inc
mov
jns
and
in
cli
inc
shll
dec
cmpsl
cld
int
cwtl
dec
sub
jecxz
idiv
cmp
jno
out
xchg
das
xor
rorl
fs
cmp
inc
pop
out
stc
mov
lods
int
cmpsl
jl
addr16
sub
push
popf
xor
jnp
addr16
xchg
mov
in
mov
call
add
jb
ja
lds
dec
shlb
xchg
in
sbbb
es
sub
inc
cmp
mov
ret
mov
xchg
inc
ret
inc
inc
mov
mov
push
sbb
push
mulb
ljmp
add
lahf
jo
sbb
sbb
mov
and
sti
lock
push
adc
cmp
out
je
pop
out
jb
repnz
in
cmp
jns
addr16
dec
out
stos
and
fsubrs
fadds
mov
mov
mov
notb
add
aad
imul
mov
sarl
imul
dec
ret
int
jg
pushf
aam
daa
jmp
mov
xor
fmul
push
or
arpl
leave
lods
mov
pop
dec
std
jecxz
and
sub
sbb
adc
testb
inc
gs
lahf
xchg
or
mov
clc
push
nop
mov
add
jp
je
push
dec
popa
mov
arpl
loop
rcrl
mov
and
push
dec
test
sub
jae
sbb
syscall
int3
daa
pushf
jl
mov
or
cs
xchg
sbb
or
mov
xchg
and
jge
or
sbb
popf
push
push
dec
add
loopne
std
xchg
xor
enter
dec
xor
mov
lret
lret
nop
test
or
int3
hlt
lret
push
sbb
movsb
push
mov
mov
fisubs
cli
inc
loope
dec
add
mov
dec
jecxz
sahf
movsb
xchg
jp
dec
sub
ljmp
insb
fs
mov
mov
pop
pop
mov
sub
mov
lcall
insl
push
or
mov
cmc
mov
out
xchg
rorb
out
or
or
inc
nop
xchg
sub
xchg
xchg
in
cli
mov
mov
jge
cltd
sbb
iret
jle
mov
push
aas
and
fdivs
mov
cmp
jmp
mov
in
sbb
out
stos
jge
daa
add
imul
pusha
imul
fcmovnbe
or
out
adc
fwait
aas
xchg
lods
jno
mov
movsb
xchg
jmp
out
bound
jmp
popa
loope
lods
pop
mov
lahf
jl
icebp
iret
dec
xlat
jmp
cmpsl
pushf
popa
adc
out
mov
jg
push
fisubrl
icebp
xchg
into
dec
xor
enter
push
and
int3
call
ret
in
mov
jo
loopne
pop
inc
cmp
fistl
add
jns
imul
xchg
pop
mov
scas
mov
mulb
jb
repnz
stos
push
or
and
test
shlb
mov
and
outsb
enter
clc
sbbl
mov
aad
sbb
mov
sub
loopnew
push
and
push
jbe
scas
lret
jmp
in
std
aaa
xor
mov
and
add
cld
loop
fstpt
dec
mov
ljmp
cmp
cli
ret
lcall
mov
mov
and
fsubr
mov
xor
mov
pop
push
xchg
jecxz
popa
xchg
xchg
leave
loopne
dec
jl
sub
jecxz
test
mov
add
das
cmp
xor
push
jmp
pop
dec
jbe
daa
ss
pop
leave
jno
add
jbe
pop
flds
sbb
int
xor
push
cmpsl
mov
mov
in
fisttpll
or
sbb
cmp
pusha
sbb
jmp
push
mov
mov
sub
shlb
dec
sub
lret
cmp
pop
pop
add
hlt
mov
push
mov
pop
cmp
and
mov
insb
cld
adc
loope
inc
js
fstpt
lret
shlb
imul
rcrl
push
orb
jg
cmp
cwtl
jl
push
pop
mov
mov
and
jp
orb
xor
pop
xchg
fs
mov
xor
sbb
es
mov
sahf
into
pusha
inc
sub
fisubl
jl
or
xchg
or
xor
lods
nop
xchg
stos
sbbb
fwait
pop
xor
mov
mov
mov
and
cli
push
addr16
outsb
enter
lods
jno
mov
orl
xlat
push
xor
enter
or
nop
das
xor
cwtl
adc
bswap
mov
inc
jge
mov
in
mov
leave
leave
xchg
sbb
inc
inc
add
xchg
push
pop
cmp
test
inc
xchg
adcb
dec
nop
shlb
sbb
or
je
or
xchg
sbb
dec
bound
shll
xchg
mov
dec
movsl
sub
pop
xchg
sbb
scas
sarb
out
xor
lret
cmp
fdivs
dec
mov
sub
test
loope
fsubl
cmpsb
add
mov
pop
data16
pop
movsl
mov
shrb
fstps
movsl
in
xchg
test
push
inc
lea
stc
mov
mov
xor
cmc
shll
xchg
sub
stc
ficoml
cmp
js
sbbb
out
add
mov
xor
push
mov
jp
pop
repnz
pop
dec
fldt
sahf
xchg
pop
out
inc
add
movsb
sbb
add
jnp
outsb
add
rorb
cld
popa
fmuls
xor
int3
sarb
sbb
mov
xchg
es
cmpl
aad
add
mov
or
lods
cmpsb
icebp
inc
or
fstps
xchg
push
test
test
xor
es
dec
mov
fcomps
jge
enter
push
add
test
sbb
push
dec
sahf
adc
jge
push
mov
imull
in
xchg
pop
aas
stos
iret
pop
pop
xor
xchg
push
cmc
mov
push
mov
push
sub
pop
lds
push
jo
arpl
pop
enter
mov
adcl
fiadds
movsb
cli
mov
lods
mov
mov
push
mov
aad
rorl
inc
jae
negb
loope
and
mov
mov
pop
dec
scas
test
in
cmp
dec
insb
dec
push
loope
dec
iret
push
enter
sbb
fmul
std
inc
cmpsl
mov
test
fidivs
jne
scas
mov
sub
inc
push
push
out
data16
sbb
mov
jb
cmp
or
stos
inc
push
aad
aaa
cmp
cmpsb
bound
jb
outsb
out
int
add
aaa
or
loopne
fnclex
pop
cli
test
xor
xor
xorl
lods
repz
push
and
mov
fsts
mov
mov
sbb
in
int
mov
shll
dec
popf
bound
sub
sbb
cmpsb
ss
inc
xor
stc
sbb
lahf
jnp
bound
mov
in
mov
xchg
subl
mov
gs
ds
xor
lahf
lahf
sub
jb
inc
cld
ja
cmp
push
xchg
sbb
mov
cmpsb
mov
sbb
xor
movsl
rorb
mov
mov
das
scas
mov
loop
and
ja
scas
lea
aaa
movsl
adc
mov
inc
add
aaa
aas
mov
dec
mov
fwait
xchg
in
scas
ror
enter
dec
xchg
cmpb
pop
cwtl
pop
push
imul
jb
mov
test
lea
mov
dec
mov
sbb
in
mov
or
pop
xor
test
pop
mov
jp
movsl
test
xrelease
movsl
in
fxch
das
clc
imul
iret
movl
int
idiv
testb
imul
out
push
imul
ja
notb
jns
cli
js
lods
xor
test
lret
leave
lods
dec
test
jne
mov
test
pop
jno
push
or
dec
mov
mov
movsb
and
cmpsl
loope
outsl
jmp
mov
ret
inc
mov
xchg
xorl
fidivl
enter
push
xchg
and
shlb
xor
leave
out
jae
pop
rorb
cwtl
mull
cld
add
aam
out
add
dec
shrl
decl
cltd
jae
decl
cmc
sbb
dec
nop
or
cmc
xchg
push
loop
fdivrs
xor
lock
lock
cmpsb
jbe
mov
xchg
mov
roll
dec
mov
popa
fildl
ljmp
ret
cmp
dec
xchg
lea
out
push
jle
lahf
fadd
inc
rcll
pop
cmp
sbb
adc
int3
jbe
fsubs
push
repz
jmp
pop
inc
mov
cmpsw
xor
jl
mov
fidivl
lret
add
add
pop
iret
xchg
fiaddl
inc
inc
xor
lcall
scas
sub
inc
stos
mov
sub
lahf
jne
pop
movsl
daa
add
push
data16
push
xchg
mov
jne
imul
loop
xor
es
dec
dec
xchg
repz
ret
xor
push
and
icebp
jbe
sarl
mov
sbb
add
outsl
cltd
fidivrs
xchg
cmp
scas
inc
dec
adc
sahf
pop
lret
xor
movsb
cltd
not
dec
adc
cmp
or
bound
dec
scas
inc
in
sahf
test
xchg
dec
inc
pop
stos
jns
xor
arpl
push
cmpsb
cmp
adc
push
outsb
lcall
imul
mov
cwtl
and
xor
aam
bound
int
mov
mov
test
dec
fwait
dec
pop
das
psubq
dec
push
movsb
inc
xchg
cmp
int
insb
lea
sarb
fisttpl
adc
testb
jecxz
stos
pop
xor
sub
stc
or
mov
adc
push
xor
dec
add
adc
add
jge
push
and
fcomi
adc
inc
mov
cltd
fistl
lock
int
sub
inc
push
and
jmp
adc
call
stc
and
cmp
xor
cwtl
int3
in
hlt
mov
icebp
sub
orb
mov
lds
xchg
filds
mov
sahf
xor
inc
sahf
movsb
test
loop
inc
aaa
jns
pop
adcl
inc
es
sbb
je
mov
out
lods
push
imul
stos
xor
test
inc
jecxz
jo
aaa
clc
out
pop
sbb
pop
add
push
pop
arpl
pop
sbb
xor
rorl
and
in
add
cmp
sbbb
into
push
mulb
nop
inc
shlb
outsb
jle
loop
dec
icebp
push
inc
mov
fstl
jl
lods
movsb
cmp
cmc
xor
or
lcall
jno
dec
std
into
test
xor
jb
ret
fildl
sbb
inc
aas
push
jbe
xchg
mov
aam
ljmp
sbb
or
loopne
mov
adc
dec
mov
movsl
das
daa
jecxz
lret
lret
xchg
or
add
lret
pop
inc
dec
cmpsl
fwait
in
stc
push
outsb
popf
cld
gs
jne
adcl
mov
cltd
repnz
inc
gs
inc
ss
push
xlat
sub
cwtl
add
mov
mov
adc
cld
cwtl
add
ja
mov
xchg
je
adc
shlb
mov
inc
dec
sahf
iret
fwait
cmpsb
dec
add
scas
inc
jb
cmpsl
or
jne
jnp
out
ja
lea
pop
pop
scas
xchg
inc
hlt
scas
mov
cmp
xor
pop
lds
stos
nop
ficomps
or
push
mov
imul
sti
imul
js
cmpsb
aad
push
pop
andl
shll
bound
movl
ljmp
fmuls
enter
gs
aad
and
lods
and
adc
data16
ds
je
aad
mov
std
add
pop
js
andl
cmp
sbbl
out
test
mov
mov
imul
lahf
mov
mov
push
js
cs
lret
in
jbe
inc
les
popa
pushf
out
daa
adc
ficompl
aam
mov
push
mov
stc
sub
fneni(8087
bound
pcmpeqb
mov
sub
sahf
ror
fdivl
aas
inc
jns
cmp
xor
sarl
mov
dec
jg
push
mov
xor
xchg
push
sbb
out
lcall
mov
or
stc
xchg
adc
popa
add
xchg
push
stos
inc
mov
jle
xchg
loopne
xor
inc
cwtl
mull
jb
mov
xor
leave
cs
adc
iret
cmp
mov
inc
and
adc
pop
ja
dec
push
inc
out
push
xchg
cmp
jmp
jb
jae
iret
pop
cmp
adc
xchg
loope
pop
fimuls
pusha
aas
out
out
rclb
fnsave
push
pop
mov
stos
movsb
loope
push
outsl
xchg
lods
or
les
mov
xlat
dec
fisttpll
xor
xchg
aam
mov
aaa
and
mov
iret
je
ret
push
mov
shrb
push
add
lcall
dec
or
shlb
dec
sub
adc
xchg
sbb
dec
cwtl
pop
sub
jecxz
add
into
ljmp
lods
pop
push
cmp
and
sbb
stc
ja
xor
ss
gs
pushf
mov
lds
pop
in
out
mov
xor
outsl
mov
stc
arpl
test
cwtl
cs
out
in
test
repz
int
in
int3
stc
sub
jns
sub
lods
jnp
mov
push
adc
repz
mov
jg
ljmp
pushf
xchg
arpl
ss
mov
inc
ret
fistpll
mov
mov
loop
xchg
fcos
das
or
pop
addr16
cmp
shll
pop
cs
mov
repnz
jmp
push
scas
clc
dec
roll
or
shrb
lret
mov
adc
cmp
dec
loopne
xchg
fisttps
xchg
push
loope
mov
push
fdivs
test
push
jg
dec
inc
add
jp
outsl
std
jle
jmp
xor
jbe
or
negl
nop
int3
iret
cmpsl
mov
insb
rol
loop
add
popa
or
cmc
jae
outsl
lret
stos
cltd
icebp
sub
push
fs
jp
insl
data16
dec
sub
or
and
xor
adc
leave
mov
mov
push
aas
aas
xor
mov
dec
jl
sub
enter
data16
mov
mov
aas
lret
cmc
dec
jbe
test
sub
mov
add
pop
or
in
and
popf
jmp
xchg
rorb
add
add
cld
cmp
nop
pushw
dec
mov
mov
lods
xor
decb
ja
push
and
fwait
sbbl
mov
cwtl
adc
mov
test
dec
movsb
imulb
hlt
bound
xchg
es
test
lock
enter
jbe
mov
mov
xorl
sbb
sub
push
lcall
fs
pop
repz
lods
add
xlat
in
adc
mov
pminub
rcrb
push
sbb
out
push
add
pop
int3
xchg
xacquire
hlt
sahf
pop
mov
jge
clc
lods
xchg
scas
popf
imul
dec
xor
push
in
jnp
xlat
test
js
pop
addr16
shll
or
cli
add
pop
loopne
xchg
mov
add
fwait
pop
int
mov
xor
das
mov
lds
push
push
jbe
loop
cmp
inc
cld
or
out
into
daa
xor
stos
test
pop
lret
icebp
jmp
xor
jnp
sub
xchg
mov
mov
cltd
call
push
lahf
test
sbb
mov
rclb
add
nop
push
push
lret
sbb
mov
call
test
ficoml
jg
movsl
adc
dec
rcl
jle
pop
xchg
inc
ret
sub
sahf
xlat
xchg
pop
insl
out
mov
sbbb
fdivrs
push
push
mov
sbb
push
pushf
mov
fs
or
test
js
xchg
addr16
push
or
add
loopne
mov
mov
add
xor
mov
xor
js
cmp
mov
mov
adc
push
xor
jp
lods
mov
dec
hlt
pop
imul
ret
popa
lahf
xor
xchg
dec
mov
insl
jmp
xchg
add
std
push
add
xor
push
kmovd
inc
jne
mov
fisttpl
mov
jae
mov
inc
ljmp
jae
xchg
inc
pop
shlb
dec
sbb
sub
xorb
jne
xchg
loop
adc
cmp
clc
das
inc
lea
adc
test
cmpsb
inc
lods
and
clc
es
push
mov
push
cmp
push
mov
and
add
bound
or
movsl
jge
mov
push
popa
xor
sbb
adc
inc
out
lock
fnstsw
add
xchg
lahf
mov
jl
addr16
repnz
or
shr
mov
outsl
cmp
push
idivl
dec
scas
sub
cmp
frstor
sub
repz
aad
or
cmp
dec
bound
dec
pop
popf
adc
mov
mov
imul
adc
push
mov
fdiv
mov
dec
gs
into
inc
mov
stos
fdivrs
jecxz
xchg
aad
fisubs
int3
fldcw
jo
insl
leave
hlt
adc
adc
or
dec
pop
or
cli
or
cltd
push
decb
mov
sub
and
pushf
insb
inc
sub
add
test
xor
movsb
cld
pop
ja
adc
outsl
xor
filds
pop
inc
in
push
subb
orb
shrl
fwait
hlt
cmpsl
je
imul
inc
ss
or
stc
cmpsb
pop
ljmp
dec
and
pusha
popa
jbe,pt
call
push
dec
mov
adc
cmpsl
mov
and
shrl
sbb
outsb
out
adc
push
cmp
clc
movsb
ja
or
jp
insl
xlat
aam
inc
lods
pop
cmp
fmul
xchg
pop
ja
add
pop
xchg
in
lret
adc
dec
cltd
push
cmp
sbb
cmpsb
push
stos
jo
leave
stos
and
das
nop
xchg
imul
js
popa
loope
xorb
fnsave
sub
jle
in
mov
dec
mov
mov
outsb
nop
jne
pushl
adc
popf
orl
sub
mov
jmp
sub
fucomip
loope
push
inc
jo
cwtl
popf
xchg
sbb
add
lea
pushf
out
scas
dec
stos
and
lahf
mov
test
mov
test
sub
daa
hlt
dec
jl
lahf
rolb
jb
hlt
mov
dec
pop
adc
lea
jns
inc
push
sub
xor
lods
imul
add
and
mov
lahf
bound
arpl
or
imul
mov
sbb
fwait
or
cmp
mov
ss
sbb
sarl
popf
lcall
add
push
sbb
push
cmpl
sub
adc
dec
push
ljmp
das
adc
aad
lods
aad
push
ficompl
aam
add
icebp
dec
into
fdivs
mov
notb
and
push
cs
push
or
mov
in
sbb
jp
in
xor
cmp
pop
dec
cwtl
iret
xchg
ljmp
mov
xchg
std
adc
sub
negb
jmp
push
or
jmp
and
pop
adc
inc
dec
pop
add
test
mov
xchg
pop
mov
sub
out
sbb
xchg
cltd
or
fistps
lds
inc
push
rcl
push
roll
ret
rclb
in
push
out
sub
outsb
push
xchg
pop
pushf
sub
in
std
mov
inc
lahf
inc
outsl
mov
fimuls
sbb
mov
pushf
icebp
pop
mov
pusha
adc
cltd
sbb
popf
in
jge
xchg
mov
mov
xchg
sbb
sub
mov
sbb
mov
pop
es
gs
cmp
cli
bound
xchg
pop
aas
test
fildll
adc
cmpsl
sbb
arpl
lock
inc
jmp
mov
fs
fst
test
xchg
sub
ficompl
xor
pop
scas
cltd
jnp
or
nop
pop
pop
adc
lcall
jno
mov
cmpsb
sub
insb
dec
jb
into
sti
addb
xchg
mov
sub
xchg
ja
push
arpl
imul
rcrl
je
sub
xchg
cmp
add
pop
push
xor
adc
les
add
jl
xor
xlat
xor
pusha
imul
xchg
pop
js
sti
cmp
lods
stos
jg
or
lret
dec
jno
mov
jo
cmp
mov
mov
daa
incl
cmp
fildl
nop
jge
sbb
sbb
jne
inc
ds
sub
xchg
outsl
mov
jno
aaa
jle
cmpsl
mov
xor
in
inc
adc
aam
sbb
xlat
mov
dec
shlb
insl
push
xchg
icebp
mov
aam
pop
add
pop
leave
push
xchg
lock
cmp
xor
dec
mov
mov
in
aaa
mov
adc
jl
ret
orb
arpl
jl
lock
inc
addr16
loopne
push
gs
mov
movsl
lea
enter
adc
adc
push
scas
dec
cmpsl
mov
sbb
push
mov
pushf
ja
hlt
or
cltd
or
dec
or
jmp
fstl
xor
jl
sub
jg
fisubrl
mov
jle
xor
lahf
aad
ljmp
push
mov
push
jns
jmp
sbb
xor
inc
dec
shl
stc
ljmp
jmp
lock
jne
adc
out
jns
insb
sub
cld
fcmovnb
xchg
adc
rorb
jne
popf
shl
sub
es
jmpw
jo
sbb
loop
dec
outsb
fcomip
push
stos
repz
nop
dec
xchg
outsb
lock
mov
lea
cwtl
out
add
movsl
in
cmp
adc
pop
pushf
or
in
jno
icebp
in
push
and
or
dec
aad
sub
inc
mov
and
jae
movsl
ss
out
loope
inc
movsl
cmpsb
sub
ljmp
loop
imul
sbb
jmp
sbb
add
test
pop
sub
xor
lods
pop
cmpsb
icebp
xchg
xor
data16
and
les
nop
add
and
imul
fsubrl
lea
push
mov
inc
mov
ds
mov
fistl
icebp
imul
push
cmp
outsl
mov
in
cmp
dec
add
lahf
or
or
dec
imul
fldt
fcmovnu
scas
dec
pop
cmp
scas
pop
and
xchg
jno
xchg
enter
icebp
out
or
fisubrl
inc
mov
cmc
sub
fwait
daa
loope
and
dec
call
frstor
sarb
xor
jp
rcl
pop
loopne
nop
dec
lods
xchg
aam
sarb
xor
mov
imul
mov
push
pop
imull
jl
loopne
call
sbb
cs
fstps
mov
lahf
out
mov
or
fisttpll
aas
cmp
pop
repz
cmc
cmp
add
push
sti
sub
mulb
push
jp
sbb
and
in
xchg
rorl
sbb
mov
addb
mov
jmp
ret
cld
or
test
push
test
sar
xor
dec
scas
jo
std
mov
jge
ret
ret
pop
xor
inc
jbe
jo
icebp
or
iret
fiaddl
in
xor
xor
aad
sbb
xor
mov
xor
inc
outsb
sbb
jge
push
xchg
jnp
dec
and
xor
inc
and
and
add
dec
or
mov
lret
pop
mov
sbb
daa
les
push
cmpsl
and
movsb
mov
mov
nop
xchg
jne
jecxz
test
adc
push
dec
cwtl
and
out
mov
sbb
pop
add
xor
jno
cmp
or
dec
clc
loop
gs
jp
imulb
dec
jmp
divl
xor
cwtl
mov
mov
pop
cmp
mov
mov
shll
adc
dec
xchg
in
out
iret
in
xchg
dec
xor
cltd
jne
adc
xchg
in
je
sbb
push
movsb
call
ljmp
sbb
jns
mov
mov
xor
or
incb
jns
jns
gs
daa
sub
push
add
mov
int3
int
lods
and
dec
or
lods
cwtl
cmpsl
sub
out
cmp
sbbl
test
push
icebp
inc
xor
mov
fidivrs
inc
or
repz
xchg
shrb
js
roll
jbe
pushf
sti
ret
jle
sbb
xor
decb
lds
inc
popa
push
leave
les
sub
and
jnp
sub
out
sbb
add
and
aaa
or
jg
cmpsb
in
mov
icebp
jmp
mov
jns
imul
sub
jne
inc
inc
inc
sub
mov
jae
mov
icebp
nop
or
sbb
sti
nop
pop
dec
test
adc
push
outsl
add
imulb
inc
and
decb
dec
jbe
imul
xor
js
sbb
cmc
int3
push
mov
and
pop
clc
mov
push
fs
lods
sbbb
imul
jnp
add
sub
std
aas
sbb
xor
inc
mov
leave
fildl
xor
jnp
loopne
jmp
sub
add
pop
std
sbb
imul
dec
jno
mov
mov
xor
test
push
sub
adcl
mov
xor
out
aam
and
cwtl
or
fiaddl
clc
add
dec
mov
inc
xor
roll
iret
ljmp
push
movlps
frstor
daa
jge
and
pop
adc
sub
dec
mov
into
sbb
cld
mov
inc
cmp
pop
dec
push
inc
fmull
loope
out
dec
je
pop
inc
pop
xor
inc
push
adc
cmp
pop
pop
jae
pop
test
jecxz
xchg
xor
sub
pop
sbb
xor
lcall
rolb
xor
jnp
cwtl
in
pop
pop
or
pushf
stc
cli
xor
or
addl
mov
test
loopne
ret
movsl
rolb
es
lods
push
movsl
rorb
dec
mov
push
les
test
xorl
dec
call
cmpsb
aaa
icebp
fs
xlat
adc
scas
repnz
xchg
dec
mov
lock
fistps
cs
xchg
mov
mov
jle
mov
int3
sub
rolb
mov
add
sti
inc
adc
sbb
movsl
loope
sahf
sahf
cmp
sub
sub
cmpsl
xor
xor
mov
xchg
mov
xchg
shl
bound
adc
add
mov
cmp
and
aad
into
and
cmpsl
pop
and
jb
mov
pop
dec
push
pop
adc
cmpsl
jmp
pop
cli
stc
jae
sub
push
jge
ret
xchg
or
dec
and
stc
cmp
test
leave
movsl
adc
sub
sbb
ljmp
sbbb
scas
scas
pop
mov
lea
adc
nop
rorb
push
sub
aad
jmp
hlt
enter
xor
data16
js
dec
in
and
imul
add
arpl
and
mov
pop
loop
mov
sbb
cmp
stc
jnp
xchg
and
imulb
pop
mov
out
cltd
lret
xrelease
cmc
fcompl
jle
sbb
cmp
mov
je
test
sbb
mov
or
push
repz
add
test
xchg
adc
adc
jp
ljmp
test
xchg
cmpsl
cli
mov
dec
sahf
sbb
test
sub
dec
in
test
icebp
ja
adc
sbb
shrl
dec
mov
dec
pop
aad
add
pop
es
fnsave
jnp
lret
and
inc
sahf
pop
xchg
loop
mov
out
into
sti
mov
mov
sti
out
add
mov
pusha
fdivrs
push
cs
xlat
hlt
lret
aaa
inc
fs
rcll
sbb
mov
push
out
mov
les
test
sub
pop
fwait
push
jmp
je
sub
and
xor
cmp
mov
inc
cmp
fadd
sbb
aam
outsl
clc
fs
dec
cmp
aaa
pop
fisttpl
icebp
xor
jne
fimuls
daa
xchg
push
lods
pop
or
aaa
and
test
cmp
sti
add
imul
or
adc
sub
icebp
testl
mov
jae
sbbl
pushf
data16
or
xor
enter
mov
addr16
sub
push
in
mov
out
push
xchg
loop
or
jns
cs
imul
or
add
insl
sti
inc
xchg
popa
xchg
adc
std
mov
adc
pushf
mov
mov
dec
and
subl
mov
movsl
pushf
pop
mov
ret
cmp
pushf
push
testl
lods
mov
jno
daa
sub
int3
or
sahf
jg
mov
mov
jns
pop
mov
pop
pop
insl
outsl
cmp
jg
adc
mov
sahf
daa
jbe
test
push
sahf
push
mov
cmpsl
pop
xor
inc
pop
adc
mov
push
dec
fsubrl
loope
and
adc
outsb
cmp
es
jp
int
dec
cmp
pop
das
cmp
mov
and
mov
xor
cmpsb
daa
insl
mov
repz
repz
test
dec
sub
lret
subl
mov
outsl
mov
fdivrl
stos
xchg
int3
ror
pop
push
lods
repz
jb
pop
inc
pop
mov
movsl
cmp
pop
test
icebp
sbb
stos
inc
pop
sub
mov
flds
lds
push
fcmovbe
jmp
aad
add
dec
jae
mov
sbb
rorb
pop
aaa
xchg
add
mov
jmp
popf
sbb
imul
psubsw
dec
repnz
dec
push
add
pop
negl
daa
out
rorb
ret
leave
jle
mov
or
mov
mov
mov
mov
push
aas
xor
movsb
fcmovu
xchg
cmp
pop
jg
pop
ljmp
test
notl
into
mov
aas
addr16
mov
or
pusha
and
gs
and
pop
and
rcrl
scas
sbb
inc
les
pusha
movsb
and
add
scas
lods
sbb
mov
repz
les
xchg
outsb
popf
mov
inc
shlb
mov
repnz
jno
std
pushf
subb
ds
test
sbb
xor
adc
adc
xor
mov
mov
cmp
inc
imul
pop
bound
push
add
mov
ss
aaa
popf
jnp
out
into
scas
clc
or
xor
xchg
int3
xor
jns
sbb
mov
loopne
insl
ss
dec
and
pop
mov
insb
xchg
cmp
out
xchg
adc
pop
xlat
jl
leave
mov
jmp
fld
push
je
stos
jge
inc
inc
fdivrl
or
ljmp
dec
cmp
mov
mov
orl
dec
arpl
lret
jbe
pop
push
ror
dec
xlat
jbe
mov
neg
jo
pop
in
mov
or
inc
dec
push
mov
test
lahf
std
jne
popa
lock
push
jl
ret
test
insl
les
inc
iret
sbb
xor
sbb
and
push
add
popa
shrl
xchg
xchg
cmpsl
pop
xlat
or
sti
faddl
sub
mov
xchg
xor
insl
stc
sub
popf
stc
ja
je
addr16
pop
jmp
cmpsb
in
movsb
dec
pop
xor
pop
loope
ret
pop
push
pushf
rolb
push
std
jb
daa
fistpll
cli
mov
cmp
lret
pop
xchg
jbe
mov
and
dec
call
xchg
and
pusha
stos
gs
pop
sub
movsl
dec
adc
outsb
sbb
ja
mov
dec
imul
lods
adc
mov
lods
movsb
xchg
xor
sarl
lahf
lret
pop
fdivrs
adc
hlt
ds
mov
jnp
pushf
outsl
push
in
ljmp
lea
adcb
adc
pusha
shl
push
lret
jecxz
add
jnp
lcall
pop
dec
pop
pop
out
push
rol
sub
xchg
sti
cmpsl
sti
mov
and
ss
push
icebp
test
hlt
aaa
stos
mov
pop
ja
jge
jl
in
lcall
pop
std
mov
out
and
mov
imul
inc
insb
jmp
add
inc
or
mov
or
outsb
cmpsl
gs
cmp
pop
dec
test
pop
cmp
add
in
xchg
mov
loop
pop
scas
filds
insl
mov
dec
pop
aam
nop
std
jecxz
jl
addr16
push
push
xor
repz
xchg
out
divb
bound
mov
push
sbb
sbb
cmpsl
in
xchg
xchg
sub
xorb
mov
les
sbb
add
or
jnp
outsb
lock
decb
xor
lds
xlat
sbb
add
mov
pop
mov
in
aas
mov
mov
dec
add
loope
iret
fsubrl
fiaddl
jg
mov
mov
or
in
repz
test
out
push
adc
scas
shll
mov
pop
sbb
mov
cmpsl
inc
cwtl
fadds
xchg
outsb
mov
push
push
xchg
sub
sbb
pop
pop
push
pop
jg
push
stos
cwtl
dec
or
in
inc
jb
or
inc
js
mov
xchg
inc
pop
add
lcall
sbb
rclb
adc
pusha
out
sub
stc
popa
addr16
test
adc
jle
push
shl
lock
mov
push
sbb
adc
scas
clc
std
imul
and
add
enter
test
adc
inc
int3
jmp
fdiv
push
xor
dec
add
ljmp
test
lret
xor
loopne
arpl
sbb
into
or
out
pop
lock
pop
lds
push
fidivrs
cs
inc
or
and
pop
sub
push
xchg
adc
jecxz
pushf
push
inc
ret
add
int
movsb
enter
loop
sub
mov
jmp
int
insl
fisubs
mov
dec
lret
cmp
and
outsb
ja
cs
add
ret
iret
adc
xor
std
jmp
movhps
in
dec
jl
hlt
jp
cmpb
xor
jmp
mov
xor
mov
xor
inc
dec
call
cmp
imul
mov
and
xchg
stos
in
sbb
rolb
mov
pop
cmp
sbb
lcall
fs
dec
xor
and
adc
add
icebp
xchg
xchg
push
push
nop
dec
psadbw
loope
mov
aaa
inc
dec
add
and
cs
pop
xlat
pushf
xor
nop
add
sbb
decb
sbb
adc
test
orb
jns
xchg
out
jno
lcall
clc
cwtl
adc
adc
mov
lds
push
push
fbstp
inc
xchg
mov
lahf
repnz
cmp
loopne
adcl
sbb
mov
jle
es
xchg
mov
xorl
into
xchg
lahf
outsb
insl
inc
mov
adc
inc
repz
mov
pop
inc
add
inc
jp
add
imul
test
addr16
cmp
test
add
inc
fdivrs
mov
lea
std
lock
rcll
pusha
xchg
xchg
cwtl
mov
xchg
int3
mov
push
or
add
jb
mov
sahf
and
in
test
rcrb
ss
roll
aad
dec
mov
and
inc
mov
pop
repz
icebp
xor
xor
and
imul
and
out
sub
in
test
outsb
xchg
push
push
xlat
stc
in
popf
adc
sbb
std
pop
call
rcll
pop
xchg
or
stos
or
inc
push
add
clc
test
xchg
in
unpcklps
xchg
and
repnz
scas
lcall
xor
rcr
popf
fldenv
add
push
js
test
xorb
mov
sub
fcompl
adcl
sbb
mov
into
jp
mov
nop
rcr
inc
mov
fs
push
cmp
cwtl
mov
icebp
in
outsb
push
mov
adc
test
pop
xchg
cmpsl
and
out
aas
ficoml
mov
aas
push
add
jb
mov
pushf
xchg
lods
ljmp
pop
loopne
mov
jl
fsubs
cmp
xchg
sbb
cmc
mov
mov
sbb
imul
lds
dec
push
loope
aas
aaa
in
aas
stc
jle
jb
cmpsb
sub
push
push
push
jle
in
and
loope
push
adc
daa
outsl
cmp
ret
cld
jecxz
ss
push
lds
push
sbbb
mov
mov
andl
clc
cli
inc
call
addl
jo
into
roll
or
aaa
outsb
movsb
repz
lods
jmp
pop
push
int3
cs
dec
pop
iret
dec
sub
enter
lahf
shll
jo
ja
movsl
mov
pop
stos
ret
mov
scas
lahf
mov
scas
out
dec
push
push
cltd
or
clc
adc
xchg
repz
shlb
scas
jge
int3
lahf
jg
cltd
outsl
hlt
mov
add
fs
inc
outsb
into
pop
in
push
mov
nop
mov
add
push
and
mov
jl
xor
test
xor
jecxz
mov
cltd
or
add
sbb
fistl
ror
fisttpll
mov
jnp
mov
outsb
iret
mov
ja
call
push
negl
pusha
add
sub
in
mov
xor
repnz
sbb
fistpl
fsts
pop
aam
adc
clc
lret
adc
in
mov
xor
xchg
push
out
in
into
pusha
mov
xchg
ja
enter
sarb
in
imul
filds
jnp
sub
jp
test
push
jge
movsb
xor
movsl
lret
aam
iret
or
mov
lods
lcall
and
mov
xor
int
mov
cmpsb
and
sub
dec
out
rorb
sti
adc
sbb
mov
insb
cltd
pop
mov
lahf
mov
rcrl
sub
sbb
stos
and
adc
xchg
jns
xor
jnp
fisubrl
pop
sub
pop
jmp
aad
inc
out
popa
push
repnz
lods
ds
push
cmp
je
jp
sbb
popf
test
aas
lret
ljmp
arpl
dec
sahf
add
and
xchg
cli
push
add
jp
andb
dec
loopne
inc
adc
pop
cmp
push
ja
sub
push
dec
int3
ss
push
xchg
stos
pop
imul
mov
adc
jb
jnp
adc
xchg
gs
push
push
ror
push
mov
fwait
mov
sbb
add
sub
and
cmc
dec
add
stos
lods
dec
mov
popf
rcrl
aam
shlb
lcall
ja
test
dec
inc
nop
push
and
es
push
mov
jl
xorb
fstp
andb
sbb
add
orb
xchg
insl
shrl
cld
in
rclb
adcl
into
jbe
push
sub
cltd
push
jbe
and
js
pop
inc
loopne
cld
sti
pop
aaa
dec
addb
dec
adc
stos
mov
cli
cmp
dec
into
jnp
lods
iret
dec
test
das
insl
push
cmp
test
push
jmp
int
push
cmp
push
xchg
mov
int
xchg
pop
pop
data16
je
vcvttsd2si
out
repnz
or
mov
and
scas
add
fsubl
pop
or
cmc
cmp
xor
scas
jae
or
jne
loopne
dec
dec
dec
sbb
pop
cmp
jb
add
sbb
sarl
jno
mov
cmpsl
shld
movsb
movsl
leave
into
sbb
cmpb
sub
push
scas
cmp
outsl
in
cmpsb
and
out
insl
pop
clc
das
faddp
ss
pop
cmp
mov
add
jnp
in
sub
in
jg
cltd
jge
mov
dec
xchg
repnz
xchg
movsl
sub
ds
mov
cld
ret
loopne
mov
rol
insb
data16
std
mov
addl
ja
adc
bound
sti
mov
out
call
sahf
sbb
into
mov
es
xchg
cwtl
call
jo
push
gs
in
cs
in
sbb
mov
dec
ret
hlt
mov
es
test
or
imul
mov
ss
sbb
out
mov
loop
adc
daa
or
mov
in
dec
cmp
movsb
icebp
xlat
scas
inc
push
lods
dec
scas
scas
add
mov
adc
push
pop
mov
cli
insb
icebp
jl
adc
int3
mov
adcl
in
sbb
shlb
jb
js
nop
cli
mov
inc
out
jg
stc
xchg
rcr
stc
inc
mov
inc
int
lea
sub
jno
or
js
fwait
inc
repnz
in
adc
xor
outsb
jb
pop
rcl
cwtl
xor
mov
popa
gs
mov
insb
dec
sbb
loop
mov
pushf
out
lods
ljmp
push
pop
loopne
or
fs
aaa
sbb
jecxz
lea
xchg
setb
in
and
jg
cwtl
in
in
jnp
out
mov
sbb
and
gs
arpl
dec
sub
fiadds
lock
addb
dec
mov
push
int
in
popa
sub
xchg
push
adc
add
pop
jmp
rcrl
sbb
jp
in
jmp
jp
inc
shl
mov
push
out
out
jnp
fucom
enter
fldl
clc
ss
in
fcoml
xchg
cwtl
sub
mov
rorb
sarl
adc
pop
push
jmp
push
scas
lods
xchg
sub
fucomp
test
les
shll
test
int3
push
jecxz
shrl
loope
push
cltd
out
sub
enter
cmp
jns
ret
incb
push
sti
lret
in
std
stc
rclb
aaa
loopne
lds
sub
xor
rcr
add
xor
jbe
rorl
insb
pop
nop
push
stos
out
clc
push
cld
pop
add
sub
out
repz
popf
or
hlt
mov
out
outsl
xor
push
data16
jno
fimuls
movsb
sub
and
or
repz
testb
mov
sub
and
push
data16
fldl2t
push
jge
inc
mov
out
mov
ret
pop
test
mov
rcrb
outsl
or
rcll
inc
xchg
mov
std
cmp
inc
xchg
or
mov
xor
push
hlt
test
sub
mov
and
enter
xor
pop
adc
inc
push
out
mov
cmp
sbb
ret
lods
mov
and
lret
fnstcw
movsl
add
inc
dec
and
adc
mov
pop
push
jp
ret
jmp
insl
int3
and
cmp
or
and
pop
sarl
ljmp
dec
rorl
pop
inc
add
pusha
repz
shl
mov
pop
sbb
popf
out
test
popa
shll
mov
int3
lea
mov
dec
test
sarb
push
adc
mov
inc
dec
pop
adc
lods
inc
mov
mov
mov
shr
mov
jno
cmp
mov
mov
dec
add
push
loop,pn
rcl
incl
mov
dec
and
iret
mov
test
pusha
aas
call
orb
inc
cli
sub
dec
mov
xchg
loope
mov
popa
stc
add
jo
ss
jne
stc
sub
mov
lea
inc
adc
sbb
hlt
sub
mov
add
push
push
lods
or
or
push
xchg
sub
movsl
arpl
cmp
xchg
push
mov
push
mov
xchg
loope
pop
imul
xor
mov
sub
arpl
ljmp
jmp
movsl
lea
push
sbb
mov
repnz
jno
cmpsl
xor
add
pusha
loop
in
mov
or
lds
lods
cmp
or
sbb
int3
cmp
cs
aas
mov
xor
cmpsb
lods
push
adc
fwait
js
test
loop
imull
xor
stc
data16
jge
dec
pop
jle
cmp
cmp
cld
loope
pop
cmp
inc
push
scas
pushf
add
test
fdiv
mov
or
loope
mov
mov
adc
xor
lret
movsl
cld
stos
add
and
cs
add
mov
pop
lods
push
movsb
dec
mov
jno
or
add
dec
lcall
sub
jmp
push
or
test
dec
cld
add
addr16
and
mov
inc
mov
push
adc
jbe
jno
fs
adc
out
jo
sbb
jp
aas
jb,pt
mov
xchg
out
mov
add
popa
lahf
inc
sub
or
rorb
xchg
mov
mov
inc
and
aas
mov
jnp
pop
daa
xor
test
popa
test
or
int3
lods
or
xlat
dec
jne
out
jg
adc
adc
jmp
xor
mov
cmp
push
outsb
xchg
and
scas
std
clc
mov
daa
lcall
add
cmp
aad
add
fmuls
or
ret
scas
lret
mov
and
dec
add
dec
test
push
hlt
pop
jno
shll
shlb
lods
fucomip
in
fimuls
bound
in
bnd
pop
sahf
sub
mov
mov
push
ja
pop
dec
or
fidivs
shr
aam
mov
adc
add
pop
ffreep
dec
mov
adc
sahf
inc
add
pop
mov
fdivs
ljmp
test
rol
fcomi
mov
cld
scas
jle
lret
push
stos
add
mov
xor
jecxz
adc
push
sarl
add
xor
mov
adc
cltd
sub
aam
ss
push
lods
stc
lcall
xchg
cli
xor
xlat
fdivr
test
shlb
mov
mov
hlt
test
pusha
imul
xchg
adc
inc
rdmsr
cmpsb
sub
push
bswap
sbb
mov
es
xchg
sahf
push
outsb
pop
std
pop
icebp
cmp
iret
pop
and
iret
test
mov
rcrl
lods
xor
mov
fwait
nop
out
movsb
mov
lret
outsl
pusha
or
lock
cwtl
xor
sbb
and
loopne
loop
lods
pop
call
mov
dec
jb
std
cmp
adc
xor
sub
mov
lea
adc
popa
push
mov
cltd
sti
inc
xchg
push
pop
sub
and
pop
sarl
dec
sti
fimull
movsb
add
lea
add
sub
xor
js
inc
data16
push
mov
xor
decb
lcall
aas
dec
out
inc
adc
dec
out
cmc
lret
jecxz
fdivrs
cmp
lds
test
push
push
data16
mov
xchg
push
sbb
xchg
mov
aam
xor
das
jo
and
div
xor
out
add
sahf
mov
mov
xchg
cmpb
pop
test
lcall
adc
ljmp
lods
mov
lret
pop
xchg
adc
sbb
fwait
sbb
dec
aam
sbb
pop
jg
xchg
adc
jmp
cwtl
jg
ret
pop
jae
push
jo
push
repz
rorb
jp
test
outsb
or
nop
cltd
insb
jmp
and
ja
cmp
popf
adcl
decb
adc
test
pop
out
push
jns
push
adc
mov
mov
mov
mov
add
jnp
test
iret
test
jo
popf
xchg
mov
jb
iret
or
jp
mov
popf
mov
xchg
xchg
inc
adc
lods
pop
and
arpl
adc
xor
mov
int3
or
or
test
in
sbb
ja
mov
xor
jle
je
fmuls
loopne
push
lock
flds
std
out
push
mov
call
pop
fsts
push
push
push
mov
inc
dec
fs
hlt
mov
lds
cli
cmp
add
clc
pusha
xor
adc
btc
push
mov
addl
or
sbb
outsl
testl
in
sub
push
or
mov
add
xchg
ficomps
dec
and
push
add
xchg
dec
sarl
push
vrcpss
jne
sbb
mov
inc
cmp
rcr
cmp
popf
sbb
mov
mov
pop
push
mov
mov
ljmp
test
aam
dec
hlt
std
lods
xchg
jb
je
add
and
fisubrl
stos
lret
dec
adc
cld
dec
mov
xlat
or
xor
loopne
xchg
mov
push
fiaddl
lods
je
push
cld
mov
sti
cmc
push
mov
xor
arpl
ss
add
aad
decl
push
aas
aas
aad
testl
jne
pop
jge
jae
sbbl
fsubrs
mov
or
ja
cmp
dec
jbe
sub
inc
fsubs
incb
xchg
fldcw
mov
push
cmp
or
add
rorl
cltd
ficoms
enter
mov
xor
rorl
push
aas
rcll
out
or
sbb
daa
lods
jne
push
adc
call
ljmp
or
inc
loope
fsubrs
scas
mov
rol
mov
aas
cwtl
popf
int3
adc
push
push
nop
xchg
adc
movsb
adc
xchg
test
stos
imull
mov
cmp
addr16
and
rorl
and
xor
rcrb
popa
push
out
push
scas
pop
jge
insb
cwtl
das
jle
mov
jg
sub
das
orl
mov
daa
ds
std
aaa
bound
jbe
outsl
ljmp
jae
aas
and
sbbl
push
jmp
adc
and
jo
fisttpl
mov
lea
pop
xor
jp
push
outsb
dec
clts
xor
test
jmp
sarb
inc
push
stc
jl
std
sbb
outsl
cld
mov
sahf
xor
aad
inc
sarb
cmp
sub
adc
fsubrl
jo
call
jno
fstl
pusha
xchg
cmp
shufps
in
mov
cmovnp
in
aaa
imul
inc
frstor
push
pop
or
and
xchg
pop
enter
mov
push
subb
pop
outsl
xor
pop
fisubs
mov
lods
test
push
cli
and
mov
call
in
daa
pushf
aam
nop
imul
in
adc
dec
into
mov
jae
mov
notl
mov
roll
rcll
fbstp
fdivl
mov
ret
or
sbb
les
mov
aas
add
fstpl
rcrl
fildl
data16
or
sub
cli
lea
movups
or
jbe
mov
or
in
rep
bnd
jle
cmp
inc
mov
mov
call
push
mov
call
js
add
mov
imul
cwtl
and
mov
push
jo
lock
cmc
out
jmp
jge
xchg
cmp
mov
stos
pop
sbb
push
pop
popa
pop
sub
sbb
addr16
xor
xor
nop
mov
cs
push
jbe
outsb
ret
pop
add
fnstcw
xchg
mov
or
ss
dec
cmp
cmp
aaa
pop
cmp
xor
xchg
cmc
loopne
outsb
cmpl
mov
dec
or
jnp
mov
cmp
push
fisttps
inc
ss
adc
push
shld
xor
stos
xor
cmp
mov
testb
repz
sbb
jo
or
in
test
cltd
or
out
or
shlb
imul
xchg
cs
mov
pop
lret
popf
ret
push
xorl
insb
clc
mov
inc
repnz
inc
cmp
and
in
push
int3
fistpll
sarb
push
xchg
outsb
add
jl
decl
aas
orb
dec
jns
cld
lods
jns
add
pop
bound
mull
and
pusha
and
xchg
es
sbb
lret
pop
fmuls
xchg
mov
std
arpl
adcb
pop
shr
lea
and
mov
shll
jl
jno
mov
imul
sti
xchg
mov
sbb
mov
mov
mov
adc
pushl
repnz
cmp
mov
mov
shrb
rcrb
dec
cmp
std
jl
inc
jg
push
jge
cld
nop
jne
inc
aad
stos
jmp
sub
cmp
and
add
mov
jle
xor
mov
das
lahf
lret
push
ficompl
cmp
test
pop
shlw
pop
jmp
dec
fucom
inc
fdivrl
and
int3
cmp
imul
jl
dec
pop
addr16
clc
fbld
cmp
adc
cmp
jo
inc
cmp
js
mov
adc
adc
loope
inc
xor
pushf
ss
inc
mov
cltd
aam
or
lcall
int
dec
xchg
fistps
or
mov
dec
enter
push
adc
cmpsl
or
insb
pop
sub
lods
sub
fwait
out
mov
mov
cmp
iret
lret
xchg
jmp
jl
add
ljmp
jnp
cmp
andb
out
sahf
insb
jne
inc
jno
mov
dec
fists
add
dec
dec
mov
jmp
push
hlt
icebp
scas
mov
hlt
lds
cltd
sub
addr16
sub
fadds
sub
sbb
adc
push
mov
and
movsl
cli
cs
cmp
mov
xchg
mov
mov
insb
ret
jge
or
push
enter
out
push
pop
adc
xor
pop
push
sbbb
popa
and
hlt
jge
insl
call
orl
cmpsb
das
jnp
xor
cmp
cmpsl
loopne
pushf
or
pop
lods
fsubl
mov
in
js
addr16
and
xchg
mov
daa
inc
mov
movsl
jp
mov
in
push
pop
imul
idivb
fwait
xor
xor
shll
aad
pop
sub
cli
lds
addr16
mov
mov
andl
das
aas
outsb
aaa
f2xm1
xlat
inc
scas
or
sub
cmpsb
mov
ret
fstps
jecxz
enter
and
sub
test
dec
shl
cwtl
ret
ds
fistpl
xchg
jno
lret
push
pop
arpl
call
repz
leave
cmp
outsl
and
adc
dec
leave
cmpl
mov
jle
push
pop
add
push
mov
dec
jb
lock
rcrl
adc
xlat
pop
inc
jnp
mulb
mov
xchg
arpl
and
pop
sub
inc
rorl
mov
dec
mov
fs
mov
popf
jp
xor
mov
orl
xor
std
mov
pop
push
popf
push
adc
in
add
adc
test
push
xor
call
inc
xchg
aam
pusha
es
cltd
or
out
andl
lret
call
push
push
mov
push
dec
idiv
mov
movsb
lock
add
popf
sahf
sbb
mov
sub
sub
sub
push
sub
arpl
lahf
xor
mov
pop
es
out
in
ret
adc
or
dec
lock
bound
lret
div
lds
scas
jmp
sahf
bound
jns
das
loope
fcmovbe
lods
push
mov
imul
jbe
int
mov
pop
mov
popf
sbb
out
add
jae
in
fdivrs
dec
mov
pop
mov
cltd
xchg
movl
test
jge
mov
rcrl
jns
repz
jmp
adc
pop
test
in
add
repz
cwtl
push
dec
into
das
int
faddl
jbe
inc
sti
iret
iret
dec
out
out
jl
daa
leave
or
and
mov
push
sub
mov
pop
sar
sub
in
xor
sahf
lret
in
lahf
loope
iret
lods
sub
shlb
push
shrb
mov
shll
xchg
adc
xchg
or
jne
ds
jne
push
and
xor
mov
xchg
ss
mov
dec
mov
rcrl
pop
sbb
add
aas
leave
jno
sbb
loopne
jo
loopne
jle
xchg
mov
mov
pushf
add
jle
xchg
jge
jns
pop
shll
jp
xor
jecxz
cwtl
add
xchg
std
gs
xor
popf
out
ds
and
pop
adc
pop
nop
mov
lock
insl
movsb
pusha
gs
jecxz
lcall
xchg
cs
addb
std
lock
xchg
sbb
mov
sbb
add
inc
lea
lret
xor
push
pop
push
lods
ret
in
xor
dec
arpl
pop
cmp
push
test
inc
fdivrs
outsb
je
ror
jnp
cmpsl
cmp
dec
jp
bound
jmp
lcall
lods
xchg
rcrb
nop
sti
es
xchg
sbb
dec
stc
ss
adc
ljmp
out
scas
jno
cmpb
ret
jl
ja
imulb
dec
pop
test
xchg
sub
push
lods
xor
es
cmp
sub
andl
outsb
sub
lock
das
call
es
div
dec
popf
mov
movb
push
lea
jp
jno
lahf
push
into
adc
mov
in
or
insb
xchg
dec
jb
dec
or
push
aas
fwait
jno
leave
cwtl
dec
lret
repz
scas
psrlq
sub
fdivp
sahf
test
orl
jae
out
int
std
shll
push
xlat
lock
add
mov
inc
out
inc
std
add
scas
cmp
sbb
jns
int3
fistpl
fistl
or
out
mov
ror
pop
fisubl
xor
incb
fs
test
lods
fwait
sbb
adc
dec
jne
in
cmp
xchg
mov
adc
sub
dec
cmp
les
into
test
daa
lahf
daa
lea
loop
pop
out
adc
out
inc
pop
testb
sahf
push
lods
jmp
mov
and
fiaddl
insb
pusha
sbb
sub
inc
icebp
adc
lret
inc
lret
sub
cmc
ret
roll
xchg
in
and
xlat
sbb
insl
call
or
inc
and
test
cmc
mov
es
push
in
loopne
fdivrs
insb
sahf
sbb
dec
iret
inc
aad
mov
push
flds
scas
xchg
les
xchg
call
mov
push
call
aam
dec
jb
pop
mov
inc
or
cmp
lret
push
out
xchg
jmp
mov
arpl
repz
push
and
push
iret
divb
stos
fisubrs
imull
loop
imulb
fisubl
fsubs
push
dec
movsl
mov
sbbb
inc
outsb
adc
push
mov
inc
or
xor
aam
cmc
sbb
lea
cmpsl
jne
and
dec
lds
push
notl
mov
sldt
mov
sub
scas
in
addr16
int3
data16
sti
into
icebp
cmp
push
and
xchg
cmpsb
xchg
insb
mov
hlt
push
mov
mov
rcrb
popf
pop
aas
dec
int3
mov
movsl
loop
sysret
jbe
xor
cmpsl
in
clc
inc
push
xchg
bound
sbb
lods
inc
imul
in
lods
mov
out
or
aas
in
test
push
sbbl
stos
cmp
repnz
daa
sbb
push
jle
jno
add
xchg
push
stos
stos
cltd
sbb
pop
in
adc
xor
pop
out
lahf
fsts
mov
sub
adc
adc
cmc
xchg
idivb
mov
in
into
sbb
or
dec
shlb
sub
shll
int
mov
daa
mov
inc
xchg
sbb
sahf
cltd
mov
dec
inc
data16
ja
xor
icebp
movd
sub
lret
aad
mov
outsb
out
shll
sbb
xor
sbb
cmp
shll
mov
add
sbb
loope
cmpsl
pop
and
mov
frstor
mov
xchg
insb
mov
jmp
cmpsb
inc
stos
xor
fimull
iret
fisubs
and
stos
lock
xchg
inc
addr16
sbb
mov
push
jnp
mov
push
xor
int3
call
cmpsl
mov
push
lea
rcll
or
push
lahf
js
movsl
pop
inc
imul
inc
jl
xlat
sbb
stc
inc
cmp
lahf
mov
add
pushf
or
mov
adc
outsb
mov
or
pop
or
test
sarb
sbb
orl
inc
push
shl
lods
es
jp
push
repz
lds
xorl
das
pop
cltd
mov
outsb
add
cltd
dec
sbb
js
dec
pop
jg
daa
cmpsl
mov
sub
in
and
add
jge
popf
ljmp
adc
aad
ret
xor
xchg
sub
repnz
mov
sbb
dec
aas
push
push
mov
ljmp
test
lret
xor
int
sahf
mov
sub
leave
js
lods
sbb
negl
ds
mov
pusha
or
insl
sub
sbbl
js
cmp
mov
daa
adc
jno
cmp
jo
fistpll
xchg
mov
leave
aaa
or
lock
ljmp
imul
in
int3
push
scas
or
lock
test
popf
testb
int3
mov
into
mov
add
call
add
popa
and
mov
jg
sub
fwait
jmp
mov
push
jp
fwait
ljmp
call
mov
push
ljmp
leave
repz
popa
enter
stc
out
por
push
mov
clc
add
and
xchg
jp
in
ret
sub
imul
pop
inc
cmpsb
inc
imul
jmp
stc
mov
lcall
ja
push
and
dec
js
jo
adc
push
mov
xor
cmp
mov
outsl
shll
jmp
mov
gs
pop
pop
xchg
adc
and
nop
sbb
jb
adc
add
mov
xlat
mov
les
fcomps
addr16
xlat
imul
and
pop
les
sbb
push
arpl
iret
push
and
scas
jmp
pop
add
fs
add
es
andl
repz
push
mov
jmp
hlt
and
xchg
lret
xor
mov
std
adc
mov
es
es
mov
jle
aad
add
ret
xor
dec
lret
and
js
inc
lock
outsb
es
xlat
inc
cmpb
out
adc
pop
and
adc
mov
pop
push
incb
leave
test
arpl
sub
out
inc
stos
xlat
imul
negb
fwait
push
add
in
cmpsl
sub
stc
cmpsb
cmp
sub
sbb
xchg
xor
mov
aaa
add
imul
out
lahf
cmp
je
cmc
lahf
jae
jle
movsb
daa
push
fists
pop
daa
inc
cli
push
or
adc
and
cmp
xor
sbb
sahf
mov
js
adc
fists
clc
pop
loop
loop
lcall
adc
gs
or
cs
sahf
dec
cmpsb
sbb
jns
inc
cmp
shl
test
mov
or
lea
pop
jg
pushf
dec
mov
mov
adc
pop
enter
fidivrs
dec
push
push
adc
mov
mov
sbbb
leave
ret
lret
jno
push
in
loope
push
add
inc
sbb
dec
ficomps
pop
mov
fidivl
cmp
daa
add
pop
or
sbbl
iret
cmpsl
cmp
int3
andl
out
xor
xchg
jl
imul
cli
loop
xchg
aad
dec
sub
in
rol
lret
xchg
mov
mov
stos
enter
mov
dec
lcall
cwtl
nop
mov
fs
fsubr
inc
fs
cmp
or
mov
int3
in
cmp
aaa
and
sbb
mov
or
pushf
lret
xchg
adc
cmp
mov
out
xchg
add
lock
out
fcmovnu
sbb
mov
sub
dec
stc
sbb
test
add
dec
fucomi
outsl
fstpl
jg
lock
xor
mov
std
gs
mov
push
shlb
test
push
repz
sub
inc
mov
sub
inc
imul
rorl
das
sbb
sti
mov
sub
sahf
mov
xor
mov
sbb
int
jne
sub
outsl
notb
int3
call
flds
mov
in
cwtl
mov
and
and
dec
push
jl
shrb
or
push
push
pop
sub
and
xchg
push
js
pop
shlb
shll
push
sbb
pop
aam
pop
sti
sbb
xchg
mov
dec
bound
and
mov
pop
adcb
int
pop
subl
enter
shrl
xchg
dec
mov
lea
dec
movsl
scas
rcl
iret
push
gs
adc
dec
fidivrs
test
add
jae
in
and
nop
pop
adc
jo
insl
js
shrl
in
std
in
xor
inc
sbb
pop
negl
cmc
popa
jmp
mov
mov
rcr
push
mov
mov
cmp
sub
sbb
repz
push
xchg
adc
push
repnz
cmpl
loope
mov
sti
roll
add
je
or
and
and
frstor
inc
adc
xor
pop
int
jae
inc
cmc
mov
popf
jp
aam
aas
cmp
lcall
jle
in
mov
mov
sarb
sbb
adc
ret
fidivs
mov
dec
dec
rolb
clc
add
in
addr16
inc
ljmp
adc
das
jne
lret
jno
ficompl
loopne
mov
lahf
mov
ror
cmc
addr16
outsb
dec
sub
cmp
pop
js
inc
cmp
cmp
sahf
popa
jmp
jg
int3
ja
les
sbb
jg
repnz
mov
in
cs
xlat
xor
mov
and
ja
lods
cmpsb
inc
push
fstpt
push
mov
std
sub
mov
ss
test
sub
out
jg
add
incl
xchg
adcl
mov
sbb
dec
aaa
hlt
insl
sub
cmp
sbb
inc
xchg
or
int
clc
jns
push
cmp
mov
mov
jmp
dec
rorl
jnp
xchg
es
cmpsb
rorb
in
fiadds
dec
push
jl
bound
roll
inc
cmp
jno
out
jnp
ss
in
pinsrw
cmc
add
pop
xchg
push
aam
or
mov
icebp
adc
movsl
in
push
mov
aad
mov
jae
push
addr16
push
adc
sahf
sbb
mov
icebp
pop
jg
add
adc
cmc
test
mov
jbe
sti
sub
jecxz
imulb
mov
xorb
mov
xor
jo
xchg
aad
cmpsl
aaa
mov
outsl
pushf
je
in
sub
test
fildl
lahf
out
leave
or
nop
sbb
cli
mov
scas
mov
mov
cltd
mov
or
cmp
imul
lahf
sahf
dec
call
xor
push
jbe
inc
cmc
movsb
pop
xchg
das
int
cmc
push
scas
jno
fisttpll
fldl
mov
mov
sbb
push
nop
popa
mov
lea
in
repnz
or
jmp
cmpsb
nop
pop
and
xchg
aas
shlb
imul
pushf
mov
subl
push
test
xor
pushf
mov
loopne
sbb
sbb
push
mov
mov
hlt
adc
or
jecxz
imul
ljmp
sbb
mov
popf
mov
add
and
or
push
mov
lds
jl
or
cmp
mov
rcll
pop
sbbb
and
btsl
hlt
xchg
into
or
bnd
mov
add
mov
cltd
shrb
lret
add
adc
mov
lret
dec
push
ds
jns
dec
pushf
inc
dec
rcll
inc
mov
add
aam
cld
mov
pop
ret
sub
add
dec
mov
jg
jae
jbe
lock
cmp
inc
aam
test
pop
stos
bound
sbb
adc
xorl
pop
ljmp
add
mov
mov
sub
sti
mov
imul
xchg
sub
inc
push
or
cmovns
jl
mov
sbb
lahf
movsl
xchg
hlt
and
sahf
sub
addr16
cmpsl
call
xchg
lret
mov
fsts
inc
or
ss
xlat
jecxz
add
jno
inc
mov
push
jmp
or
js
outsb
cmpsb
mov
loopne
gs
mov
stos
pop
insb
mov
cltd
jl
push
xor
push
mov
sbbb
sahf
incl
loop
push
mov
jp
in
stos
xlat
outsl
push
mov
subl
sbb
xchg
in
popa
sub
pop
pop
and
out
push
loopne
xchg
shlb
rcrb
fs
iret
mov
mov
mov
fwait
je
or
jg
aam
and
fnstsw
fwait
int3
idivl
push
add
pop
fiaddl
cmpsl
fsubp
fnsave
and
mov
mov
or
pop
pusha
jmp
mov
mov
add
mov
idivb
orl
and
aaa
pop
mov
stos
sbb
cmp
pushf
out
and
das
into
out
adc
xchg
mov
cmp
and
rolb
sub
adc
inc
mov
ficoml
cld
sbb
ret
inc
and
mov
loope
or
mov
jg
fisttpl
xchg
ret
sarb
not
sahf
sbb
pop
and
pop
lret
jg
repz
jno
mov
dec
mov
loop
push
xchg
int
loop
fistps
xorl
mov
inc
insb
scas
rclb
mov
lret
addl
xchg
inc
xchg
mov
add
clc
pop
std
stos
push
in
and
xor
adc
ljmp
nop
push
shl
jb
mov
xor
es
adc
std
call
jmp
mov
pop
fistpl
jmp
fbld
adc
or
pop
pop
xchg
cli
out
cmpsl
push
lods
lret
mov
add
mov
js
sbbb
out
jne
cmpsl
or
repnz
mov
clc
mull
or
inc
inc
les
nop
sarb
and
adc
sbb
sbb
inc
xchg
push
or
push
pop
mov
scas
xchg
enter
mov
or
loope
add
in
lret
stos
roll
mov
je
jnp
add
popa
lahf
sbb
loope
inc
gs
or
pushf
pop
sub
xchg
fs
call
shrl
jecxz
shl
lahf
dec
inc
xchg
add
adc
fldcw
imul
sbb
sbb
mov
mov
lds
sub
push
mulb
rcr
and
sub
mov
mov
loop
mov
icebp
imul
mov
sbb
inc
fcmovbe
sub
lods
repnz
mov
aaa
mov
xlat
ret
mov
imul
jne
dec
cmpsb
decb
add
mov
xor
rorb
aam
add
dec
xor
out
push
inc
xchg
out
loop
scas
in
and
arpl
add
pop
aad
in
iret
push
cmc
ja
lods
fnstenv
sti
or
cmp
sahf
je
ret
jp
xchg
jge
je
xchg
div
cltd
dec
cld
sbbl
xchg
jbe
mov
push
stos
push
mov
fiaddl
jne
inc
test
das
sub
test
insb
push
filds
mov
leave
mov
addr16
notb
mov
sub
add
int
sbb
mov
repnz
and
add
leave
mov
out
xor
add
adc
leave
adc
mov
fmuls
data16
jp
loope
xchg
hlt
jmp
lods
roll
popa
lcall
jecxz
ljmp
and
stos
ret
sub
andb
xchg
or
mov
xchg
gs
lds
sub
stc
out
aad
out
stc
sub
fistps
subl
adc
push
fildl
mov
or
popf
fwait
dec
into
fnstenv
push
push
sub
pop
ror
cmp
push
ja
xchg
movsb
imul
stc
out
sbb
movsb
xchg
or
fldl
fimuls
imul
popf
aas
mov
push
lahf
pop
iret
push
cmpsl
jae
inc
xlat
xchg
sub
flds
mov
inc
mov
mov
add
adc
mov
jl
pop
lret
inc
mov
push
loope
movsl
add
cwtl
xchg
fildll
sarl
mov
xchg
scas
out
lret
cld
push
and
adc
sbb
sub
in
push
and
rcll
out
mov
loope
les
ret
push
test
cmp
out
test
cltd
repnz
and
fiaddl
sbb
jbe
pop
ror
jns
cmpsb
es
pop
aas
in
pop
xor
fdivrl
mov
xchg
and
loope
movsl
lahf
xor
std
js
push
xchg
in
pop
outsb
pop
dec
hlt
call
inc
ljmp
adc
repz
bound
imul
or
pop
jne
push
dec
aam
inc
jbe
movsb
mov
outsb
icebp
jl
ja
inc
ss
xor
mov
mull
fwait
loop
add
mov
insb
fwait
xchg
icebp
pop
inc
adc
sub
sbb
sahf
jecxz
jecxz
pop
testl
inc
jg
lds
nop
sbb
cmp
pop
stos
fwait
pop
fstpt
stc
dec
dec
fnstenv
mov
aam
jb
cltd
sbb
lret
das
mov
and
aaa
lods
scas
mov
jae
sbb
xchg
pop
movsl
pop
sub
mov
iret
pop
repz
mov
stos
pop
in
in
push
outsb
mov
push
movsb
and
xchg
xchg
push
fdivrs
rorb
or
mov
lods
insl
push
stos
xchg
push
push
sub
and
fs
out
outsb
movsb
pushf
mov
inc
adc
mov
imul
push
lods
cmp
mov
fldenv
pop
jg
cs
adc
int3
xchg
es
push
sbb
int3
mov
jo
mov
in
insl
and
push
sbb
stos
loopne
fs
test
cli
pop
imul
fcmovnu
clc
cltd
or
push
test
sub
movl
shll
loopne
popf
cwtl
mov
fwait
cwtl
fsubrp
invd
and
stos
scas
adc
or
lcall
cli
and
mov
push
jecxz
or
daa
sbb
inc
gs
insl
inc
jo
pop
xor
dec
jp
cmp
inc
imull
dec
mov
push
rcrl
int3
and
in
ret
lea
mov
xchg
or
jne
lahf
nop
xor
inc
jne
push
js
mov
mov
scas
std
pop
and
inc
xchg
and
inc
test
cmpsl
xchg
stc
or
loope
inc
cmovno
dec
arpl
xchg
xor
mov
int3
cmp
inc
inc
mov
or
mov
out
push
orl
mov
aas
pop
pop
mov
iret
sbb
mov
xchg
inc
scas
mov
jnp
test
dec
adc
cmp
dec
xchg
or
das
and
mov
fcomps
out
dec
pop
pop
mov
in
loop
sbb
xor
enter
scas
mov
popa
test
mov
xchg
inc
rcrb
sub
inc
je
shl
lea
xor
cmp
cwtl
mov
jbe
or
lcall
js
popa
scas
out
inc
inc
and
ret
movsl
scas
in
cltd
je
mov
test
or
addr16
xchg
adc
mov
hlt
les
in
xchg
adc
cmp
mov
aaa
pop
fxch
pusha
mov
testb
hlt
mov
xchg
lcall
and
jno
rcll
or
sub
cli
push
xor
cmc
sbb
clc
dec
mov
std
ljmp
pop
jecxz
cmp
cmp
push
aam
mov
cltd
mov
fwait
mov
mov
mov
cmc
mov
enter
hlt
jnp
fistpll
out
mov
pusha
mov
pop
scas
mov
filds
lock
shrb
loopne
add
dec
cmp
scas
imul
cmpsb
test
jecxz
jae
add
fsub
js
cmp
inc
sahf
or
ret
add
push
lcall
shrl
fldt
test
insb
icebp
repz
fcmovb
in
dec
mov
xorl
cld
mov
add
scas
lcall
jl
jne
insb
call
xchg
pop
adc
add
mov
mov
inc
push
mov
test
sbb
call
push
ret
add
sub
add
pop
dec
jle
outsl
or
imul
sbb
inc
xchg
inc
outsl
test
lock
sti
cmpsl
pop
xor
fsts
lods
lods
testl
mov
push
shll
gs
pop
adc
xchg
ljmp
into
pop
sub
dec
sbb
xor
stos
repnz
sbb
mov
cli
popa
sarb
mov
in
fiadds
and
cmp
sbb
pushf
push
sub
mov
stc
sub
popa
mov
jmp
decl
aaa
or
loopne
and
fprem1
aas
icebp
pushf
jo
xchg
jns
movsb
dec
pop
nop
inc
scas
cmp
xchg
in
push
push
int3
movsb
mov
divl
cli
push
ficoms
mov
jbe
dec
cmp
cmp
fcompl
adc
cmp
in
sahf
pop
add
insb
dec
pop
pop
dec
xchg
pusha
jno
jmp
sbbb
call
ds
mov
nop
movb
jne
xor
cld
dec
mov
lret
inc
scas
adc
rcl
imul
lcall
or
push
iret
xor
addr16
sbb
sbb
flds
dec
jl
push
test
dec
rorb
cwtl
testl
std
fists
jmp
xlat
or
fcoml
or
jo
test
push
sbb
mov
out
nop
in
add
adc
lret
and
cmc
ret
into
push
inc
loop
jl
and
cli
adc
mov
out
dec
call
fisubrl
les
xchg
outsb
cltd
fnstsw
mov
pop
aam
movsb
icebp
add
adc
add
xchg
aad
insl
dec
sahf
dec
lcall
jmp
iret
hlt
shl
and
clc
mov
dec
cmp
imul
jecxz
cmp
inc
mov
stos
pop
cmp
sbb
mov
jae
aad
mov
insl
jmp
in
jo
xchg
shll
jne
lds
push
and
sub
loopne
push
nop
pusha
out
cmp
jb
dec
mov
jne
hlt
lds
das
test
loope
out
adc
cmp
cmp
aad
nop
sub
add
add
xchg
xchg
cmp
pop
mov
int3
push
lcall
std
ljmp
jge
push
mov
push
mov
mov
pop
inc
hlt
and
daa
push
jne
lahf
mov
in
pop
aad
mov
push
sub
movb
pop
xor
fcompl
repz
mov
pop
sub
fstps
iret
out
inc
out
mov
cmc
mov
jns
adc
inc
xchg
pusha
dec
jo
cmp
pushf
fisttpll
adc
xchg
and
aam
sbb
xchg
test
ss
xor
mov
sbb
repnz
mov
popa
mov
push
add
sbb
cmp
notb
in
cmp
or
inc
dec
hlt
xchg
test
dec
icebp
insb
es
xor
jno
out
ljmp
mulb
inc
call
out
int
leave
imul
push
or
and
repz
int
adc
leave
hlt
add
arpl
xchg
lods
shrl
out
sahf
xor
stos
jns
or
dec
cvtps2pi
fdivl
cmpsb
js
pop
repnz
mov
aaa
sub
cs
and
repnz
pop
push
fadds
inc
call
ret
or
cmc
sbb
data16
dec
popf
insl
push
insb
arpl
rcl
iret
pusha
lahf
adc
sub
fcomps
js
mov
ret
adc
ret
rcl
sbb
push
cld
cld
jae
mov
ret
rcr
jbe
cmp
jle
mov
lods
cltd
lods
outsl
jbe
repnz
sbb
repz
dec
pusha
outsl
out
js
jnp
loop
dec
mov
push
sub
nop
xlat
xor
push
rclb
out
add
push
lods
lcall
jne
in
rcrl
sbb
mull
loop
dec
push
cmp
or
mov
enter
or
xchg
loope
add
mov
xchg
idivl
out
repnz
sbb
incb
mov
pusha
jo
dec
sbb
addl
in
inc
movb
out
enter
jge
in
add
rcl
jmp
es
dec
add
and
pop
cld
iret
call
je
ljmp
sbb
mov
dec
and
imul
js
orl
xchg
xorb
pop
sub
and
jl
neg
repnz
xor
cmp
fisttpll
popa
xchg
or
sbb
add
add
cmp
mov
push
or
inc
mov
dec
push
xor
aam
dec
iret
daa
cmpsb
mov
cmp
adc
sbb
sub
push
fwait
push
fidivs
jno
and
mov
mov
inc
push
sahf
testl
sbb
xchg
xchg
cwtl
lret
sbb
push
add
jb
add
sub
and
push
into
ja
int
shr
leave
adc
imul
cmp
arpl
lret
sbb
sbb
bound
imul
xor
out
and
pop
gs
lods
sbb
inc
icebp
outsb
shll
dec
mov
sahf
push
out
ja
sbb
lahf
mov
sub
addr16
sbb
mov
in
jno
jg
and
cmc
mov
pop
jbe
cmp
inc
mov
jp
sub
pusha
enter
inc
fbstp
fsubr
js
dec
inc
rcll
test
or
and
fdiv
sub
mov
lock
inc
jp
scas
ds
sbb
decl
or
icebp
std
xor
push
shll
bound
insl
dec
ret
push
nop
mov
pop
aad
popf
sbb
out
cmp
sub
adc
lock
sub
out
div
mov
push
lahf
mov
xor
jno
pop
shrl
jnp
mov
dec
or
fucom
mov
fbstp
xor
fmul
in
sbb
test
clc
fldcw
jmp
outsl
sbb
scas
sub
ss
les
std
adc
std
subb
pop
sub
and
sbb
subb
stc
push
in
out
mov
cmc
ficompl
xor
dec
push
mov
push
js
push
lahf
mov
dec
aaa
ja
inc
add
mov
fs
stos
mov
loop
add
adc
adc
push
jge
sub
notl
push
mov
inc
mul
pinsrw
jno
paddb
dec
in
mov
pop
sahf
loopne
adcb
sub
out
jbe
mov
mov
divl
dec
nop
xor
das
imul
fidivrs
or
fsubr
pop
dec
mov
adc
repz
lea
inc
mov
insb
rorb
rorl
jmp
mov
sub
pop
push
and
lods
ljmp
sbb
jae
xchg
xor
mov
ja
mul
jle
and
fnstsw
mov
jo
popf
and
fwait
push
xchg
std
cs
inc
pusha
dec
loopne
mov
out
adc
std
inc
stos
mov
ss
clc
fisttpll
lods
in
mov
xlat
cmpsl
daa
pusha
pop
push
cmp
push
sbb
sarl
in
lahf
sub
fwait
cld
xor
sub
mov
jecxz
xchg
incl
adc
and
out
mov
cli
cmpsb
sbb
outsb
or
or
mov
lock
cwtl
arpl
nop
movsb
fstps
pop
mov
or
push
adc
or
pop
sbb
jle
orb
cltd
scas
jae
pop
jle
aas
jge
add
sub
or
cmp
cld
adc
pop
push
iret
mov
adc
push
loopne
insl
xor
pop
aad
loopne
and
push
xchg
jecxz
bound
pop
bnd
xchg
jecxz
cmp
es
jnp
pop
bound
inc
mov
sbb
movl
sub
shl
mov
repnz
mov
lcall
ds
push
xor
pop
scas
pop
loope
out
sbb
or
aas
hlt
sub
or
pop
jge
sbb
jg
jmp
insb
pop
push
xor
rorb
mov
aam
nop
mov
pop
or
jl
push
call
xchg
in
jl
adc
insb
pop
sbb
cmp
xchg
jns
pop
notl
lds
jns
lds
shlb
add
and
pop
hlt
inc
shll
lods
jg
inc
rorb
jmp
lar
jecxz
pop
test
fldcw
movsl
repz
sbb
jbe
call
lret
xor
pusha
lods
addr16
mov
aas
leave
xlat
push
stc
jb
pushf
test
scas
daa
out
rol
lret
shlb
jge
scas
cmp
mov
sub
pop
aad
push
js
enter
ret
loopne
daa
outsl
xor
pop
jge
enter
imul
shll
and
orl
pop
aad
cmpsl
cli
frstor
fdivl
cli
repnz
flds
jae
and
imul
jle
dec
fmul
adc
pop
inc
inc
mov
add
jbe
sub
fldcw
sub
push
jg
sub
xchg
inc
mov
stc
in
jle
mov
push
sti
xchg
aas
adc
xchg
loope
mov
sub
stos
pop
fdivs
out
les
sbb
scas
clc
mov
sti
scas
xchg
xor
scas
popa
cmp
sub
or
fstp
push
mov
mov
repnz
sbbb
xchg
negb
cmc
fucomp
dec
jmp
aad
jp
fsubr
jnp
mov
push
sbb
mov
cmpsb
aam
movsl
mov
sub
sub
loop
in
jne
sbbl
stc
add
mov
add
sti
inc
or
sub
leave
push
xor
call
xchg
lret
mov
adc
sbb
std
lcall
or
pop
call
push
std
out
test
mov
jmp
pop
pushf
call
mov
cs
dec
pusha
or
insb
lock
or
xchg
data16
push
xor
jge
cld
push
xchg
adc
xchg
pusha
js
jne
aas
ja
inc
jb
imul
ja
mov
les
mov
lret
popl
xlat
mov
pop
sbb
pop
imul
addb
repz
cmp
pushf
mov
lods
pop
adc
mov
call
dec
fnstsw
mov
mov
fildl
fists
into
pop
mov
push
fucomip
cmpl
mov
push
xchg
and
sti
jae
cmp
mov
lea
mov
adc
and
push
push
pop
in
add
mov
cmpsl
mov
mov
mov
xchg
cmp
push
fdivrs
jle
mov
addb
int3
mov
mov
shrl
xor
loope
ret
mov
insl
pop
in
mov
movsl
mov
dec
lret
lcall
fucomip
sub
and
jle
aad
out
loop
ljmp
scas
mov
loopne
jb
test
orl
loopne
jo
mov
fisubs
popa
imul
lods
pop
lock
xchg
lcall
fnstenv
and
jg
adc
idivl
push
cmp
sbb
lcall
mov
leave
loopne
pushw
xchg
lods
and
ds
jno
jae
insl
repnz
cli
ljmp
inc
test
std
fmuls
dec
cmpsl
cmp
cmpsb
xchg
xor
out
dec
repnz
mov
pop
lods
rclb
scas
imul
pusha
pop
push
mov
push
mov
jae
in
pop
jno
mov
aaa
mov
pop
xchg
nop
repnz
lock
lods
inc
sbb
lods
sub
push
add
jb
int3
mov
das
lret
mov
jge
je
nop
imul
loopne
pushf
fcompl
sub
push
sub
les
outsb
ret
push
add
loop
pusha
repnz
inc
rcrb
jnp
mov
loop
inc
lar
lahf
sub
addl
lods
shl
jbe
hlt
jmp
sbbb
data16
jne
in
push
fs
push
dec
push
ficompl
stos
addb
movb
clc
shlb
scas
cmp
add
leave
test
fidivrl
push
jne
pushf
testb
mov
bound
movsl
add
rolb
mov
jp
adc
ss
jnp
cld
pop
or
pop
int3
jge
lret
inc
mov
push
aas
loopne
je
sub
pop
adc
fs
jl
loop
ljmp
mov
into
jecxz
xlat
scas
sarl
stos
fmull
or
insb
and
dec
in
adcb
mov
sub
lret
and
ret
insl
enter
bnd
jle
insb
fidivrl
push
sub
testb
int
jge
sub
mov
adc
out
fcmovb
mov
mov
psraw
arpl
push
pusha
mov
mov
aad
adc
jns
faddp
pop
ja
cmp
push
sbb
dec
faddl
std
adc
push
ret
fisttpl
mov
ss
pop
jnp
je
dec
loope
loopne
sbb
gs
pop
out
std
jge
outsl
xor
pop
xor
test
and
adc
xor
mov
push
adc
ja
lret
push
loope
sub
mov
jecxz
add
push
in
sbb
out
mov
scas
icebp
cwtl
daa
push
call
mov
gs
xchg
cmpl
mov
jecxz
xchg
xor
sbb
lods
pop
imul
jo
lcall
out
rol
test
dec
out
flds
adcb
lcall
mov
push
fbld
jg
fbstp
idivl
in
xlat
popa
lahf
push
mov
xchg
js
adc
popa
in
dec
mov
mov
jo
inc
imul
int
jns
ds
cmp
aaa
add
dec
sbb
dec
testb
dec
inc
or
lcall
aas
mov
cmp
cmp
sub
ja
sbb
mov
push
scas
dec
inc
mov
test
hlt
in
xchg
cmp
sub
mov
add
add
loop
scas
in
sarl
mov
pop
shrl
adc
movsl
int
mov
notl
lret
subb
push
pop
fwait
enter
inc
cli
mov
jg
adc
pop
out
inc
jl
insl
rcll
xor
inc
adc
push
inc
divl
mov
and
pushf
pop
dec
or
cs
cmp
cs
pop
es
outsb
jge
mov
pop
mov
xchg
in
inc
xor
mov
aad
ljmp
push
sbb
test
cmp
sarl
and
clc
inc
iret
adc
shl
addr16
int
push
mov
cmp
mov
dec
in
adc
test
or
jne
scas
mov
dec
push
mov
ja
sahf
or
xor
adc
pop
cmc
cmp
movsl
rolb
push
jne
pop
add
cltd
inc
addl
es
mov
jp
dec
jns
and
shl
cmpsb
pop
push
and
jl
mov
mov
lcall
jnp
mov
out
and
sbb
in
xchg
pop
cs
push
mov
mov
in
and
sub
nop
mov
sarl
fisubs
iret
clc
add
mov
fwait
inc
cmp
push
stc
xchg
sub
leave
fstl
pop
jmp
fdivl
in
inc
ss
bound
daa
or
repnz
inc
add
int
push
fcoml
adc
fbstp
mov
or
fwait
xchg
mov
inc
popf
push
orb
jo
negl
xchg
pop
xor
mov
push
pop
repnz
push
sahf
and
int3
cmp
mov
ljmp
push
insb
fiaddl
mov
fs
arpl
sbb
sahf
mov
or
leave
lock
pop
stos
sub
dec
mov
insl
xor
and
sahf
jmp
faddl
mov
mul
mov
mov
sbb
repnz
dec
mov
js
adc
jmp
leave
xor
xor
xlat
dec
and
xchg
sub
or
mov
leave
xor
jmp
sti
xchg
dec
outsl
aam
sbbb
ds
mov
mov
clc
cs
mov
xchg
push
pop
or
out
aaa
les
xor
inc
mov
cli
push
mov
mov
pop
jmp
cmpl
in
adc
add
push
aas
popa
mov
mov
notb
cmp
push
inc
sub
daa
xchg
loop
mov
rol
repz
mov
ss
xlat
fidivl
pop
lock
lea
mov
fwait
pop
mov
inc
roll
cwtl
loope
push
bound
fsubrs
mov
sub
dec
lds
fwait
add
mov
les
ds
ret
or
cmp
dec
push
lret
je
pushf
int3
or
inc
and
lea
mov
das
stos
cli
lret
pop
mov
dec
scas
sbb
sbb
test
ret
or
shrb
jecxz
popf
imul
test
mov
mov
sbb
push
mov
inc
pop
ja
push
std
push
pop
sbb
addb
inc
int3
jecxz
lds
adc
adc
sbb
in
mov
push
inc
into
xor
xchg
ret
insb
daa
and
xchg
mov
cmp
rcr
aad
shlb
test
ljmp
push
mov
mov
stos
xlat
and
sbb
stos
or
repz
rcrb
movsb
pop
pop
popa
mov
sub
and
int
sub
xor
fimull
jecxz
mov
xchg
and
hlt
rorl
in
leave
out
sbb
inc
jns
add
pop
in
js
add
push
mov
fstpl
pop
or
or
movsb
inc
mov
mov
out
cld
cmp
popa
push
mov
pop
scas
into
mov
inc
push
xor
popa
ja
mov
push
fmull
insl
mov
lods
add
and
push
jb
sbb
enter
cmp
or
fists
cmp
pop
shr
push
jnp
sub
jbe
cmp
ss
shrl
dec
cmp
xor
push
or
push
cmpsb
jnp
mov
sahf
add
call
sbbl
dec
xor
ljmp
pop
mov
loop
cmpsb
fwait
sub
insl
push
fcoms
push
add
add
movsl
xchg
xor
aad
pusha
sub
divb
jecxz
out
nop
aas
cmp
lcall
mov
pop
lock
xor
xchg
mov
jle
jp
fnstenv
sub
mov
push
popl
mov
mov
dec
add
fbld
aad
mov
pop
insl
fwait
mov
addl
pop
push
popa
push
cmp
cmp
adc
movsl
stos
lret
add
sbb
sbb
movsl
jne
cmpsb
cmp
mov
into
lods
pop
push
push
imul
mov
xor
es
iret
xor
sub
and
cmp
mov
out
roll
pusha
jb
lcall
mov
mov
popf
jp
and
ds
jmp
xor
insb
mov
lods
add
inc
cwtl
jo
aam
mov
xor
cmp
inc
ja
fmul
dec
pushf
push
push
cmp
lahf
fnstenv
stos
pop
push
pop
dec
pop
popa
cltd
les
mov
sbbb
pop
mov
outsb
sbbb
jp
jbe
sbb
pop
inc
push
hlt
jae
mov
mov
pop
mov
jg
xor
jg
cmp
nop
lret
in
lds
push
outsb
or
outsb
mov
push
int3
icebp
ljmp
cmc
mov
sub
mov
lahf
add
bswap
loope
push
sbb
imul
xchg
inc
lcall
aam
movsb
in
mov
aad
js
pop
outsl
mov
adc
cmp
mov
mov
shll
les
imul
sbb
dec
pop
cs
push
stc
xchg
jns
popl
or
movsb
sub
das
push
js
loopne
add
push
inc
nop
mov
push
lds
bound
into
xor
call
dec
adc
push
scas
cmp
lods
pop
mov
jg
outsl
test
push
xchg
sahf
lret
or
add
int3
mov
paddd
adc
sbb
mov
jmp
pop
inc
sbb
pop
lods
ret
rol
xor
adc
and
mov
adc
cmp
sti
pop
adc
adc
int3
or
rolb
pop
fdivrs
andb
jno
cmpl
or
sub
js
mov
sar
pop
jno
inc
mov
sub
mov
icebp
scas
in
mov
sahf
xor
in
pop
jne
jnp
jne
icebp
sub
adc
ret
arpl
rclb
xchg
fs
cmp
sahf
addr16
dec
fsubrs
adc
jmp
mov
mov
in
mov
push
incl
das
in
xchg
cmpsb
push
mov
dec
fistpl
and
stc
dec
stos
sbb
sbb
ss
or
add
inc
aam
ja
mov
sbb
mov
push
xchg
xchg
data16
sbb
in
pop
mov
adc
loopne
daa
negl
iret
inc
jle
test
mov
push
inc
dec
out
cmp
aad
test
addr16
and
pop
xorl
mov
into
pop
jl
leave
pop
xchg
test
pop
mov
cmpsb
inc
or
cmp
cmp
aad
mov
bound
addr16
dec
mov
pushf
inc
mov
arpl
dec
notl
mov
inc
hlt
test
dec
loopne
and
mov
mov
cmc
cld
xchg
dec
sbb
dec
in
in
push
cmp
les
jo
xchg
mov
add
push
iret
out
lahf
nop
subb
inc
dec
inc
inc
shrl
les
imul
mov
dec
jne
adc
xchg
xor
push
stc
roll
jo
mov
cwtl
mov
icebp
sti
jmp
imul
dec
lock
dec
push
fsub
cmpsl
jl
int
aad
aad
add
and
pop
mov
in
mov
xchg
lret
les
cmp
inc
add
sbb
pushf
es
clc
shll
testb
rorb
push
add
mov
push
lds
dec
sub
out
ret
loopne
mov
popa
push
gs
lds
rolb
cs
push
inc
jns
inc
pop
pop
push
inc
lock
shrb
xor
out
fsubr
push
dec
push
cmp
xchg
fisttpl
jns
jbe
lods
xor
cmpsb
mov
sub
int3
sti
or
push
xchg
in
test
lods
ja
cmp
jo
add
dec
push
lret
cmp
enter
mov
icebp
jl
cmpsb
cmpsl
jge
aaa
divb
cmp
push
ljmp
and
dec
pop
xchg
add
popw
sahf
push
sub
pop
sti
scas
pop
xor
cwtl
je
je
aam
lret
in
out
pop
in
sub
aad
popa
cmp
gs
cmc
fisubrs
mov
imul
fbld
addl
sti
and
pop
pop
sub
add
fwait
sub
mov
int3
mov
pushl
ljmp
data16
fdivrs
lock
sbbb
dec
and
shll
rcll
in
imul
sbb
hlt
cmp
lods
insb
add
dec
or
std
icebp
push
add
xor
test
xrelease
mov
mov
mov
push
add
xor
test
lahf
enter
aas
ret
mov
add
and
mov
xlat
cmp
add
out
dec
loope
outsl
pushf
jbe
and
xor
jo
lods
mov
xchg
jl
jb
jl
lcall
jecxz
push
push
cld
xor
xlat
enter
push
les
int
cmp
aaa
adc
sbb
aaa
data16
sbb
pop
cmp
inc
jnp
jmp
mov
push
mov
daa
or
pushf
inc
pop
inc
jl
xor
sub
cmpsl
sub
aas
mov
sbb
out
mov
jns
fnstenv
xlat
inc
mov
mov
arpl
fdivrp
jge
add
mov
add
xchg
xchg
cmpsb
repz
jne
push
mov
xor
cmc
out
test
ljmp
imul
pushf
in
sub
pop
cmpsb
mov
not
cwtl
mov
jge
push
mov
cmp
xchg
xor
push
sub
and
adc
mov
mov
addr16
mov
in
adc
mov
int
mov
roll
and
mov
jmp
stc
sti
mulb
or
and
clc
push
adc
repnz
lods
out
mov
and
adc
push
mov
pop
xchg
mov
out
push
dec
push
fbstp
add
inc
or
sbb
adc
ret
test
fnstcw
aas
sub
repz
lods
dec
mov
adcb
inc
in
fidivrs
xchg
add
xor
ficomps
fdivs
adc
or
cwtl
inc
das
and
push
jae
stos
mov
sbb
and
bound
ljmp
xchg
xchg
pop
xor
push
adc
pop
add
loop
mov
pop
inc
enter
mov
adc
stos
dec
or
push
aad
and
add
mov
iret
sbb
fnstenv
or
scas
sbb
negl
sub
and
mov
push
cmp
scas
outsb
scas
fdivrp
cltd
xchg
or
push
je
xorl
mov
data16
addb
xor
mov
mov
add
cld
in
pushf
popf
repz
inc
stos
adc
inc
cli
xchg
sub
inc
pop
xchg
inc
sub
inc
sub
lahf
shrb
cli
sbb
mov
push
jne
and
push
sub
ret
fwait
pop
cmc
xchg
dec
pusha
test
jnp
out
jmp
dec
jne
arpl
adc
xchg
std
jle
sbb
dec
in
mov
xchg
xor
and
xchg
sub
repz
xor
sarl
data16
filds
and
adc
stos
mov
lock
iret
rcll
cmp
and
clc
xchg
fistps
ss
xchg
jp
jno
jp
mov
sub
jmp
popl
test
or
jg
pusha
and
push
cmpsl
daa
mov
jno
mov
push
dec
ficoms
sub
rorb
push
dec
sbb
inc
orb
scas
jg
xor
rolb
loop
fwait
arpl
mov
add
fsubs
pusha
js
cld
popf
inc
stos
lahf
xlat
xor
push
pushf
into
mov
sarl
popf
aad
add
adc
xlat
add
ret
ret
sbb
xchg
adc
cli
adc
jp
and
addr16
movsb
pusha
ss
out
sbb
rorb
rol
adc
mov
jle
hlt
aas
inc
cmc
out
and
loop
and
mov
arpl
inc
xchg
ret
or
orb
jmp
in
or
enter
out
and
dec
xchg
or
insl
mov
xor
add
jle
xchg
xor
xchg
mov
insb
xor
add
les
imul
pop
out
mov
pop
fwait
mov
xchg
cmp
outsl
stos
add
lcall
lock
std
xor
add
fwait
cmp
xchg
test
out
xor
dec
pop
xor
push
xor
inc
xor
stos
inc
pop
test
mov
pop
xchg
cmpsb
inc
inc
sub
push
add
call
fwait
repz
inc
iret
cmp
stos
aaa
clc
call
cmp
sbb
push
test
xor
popf
push
cltd
and
ret
mov
pop
jecxz
std
sbb
fucom
inc
pop
aad
ss
stc
push
xchg
aad
mov
out
ljmp
xor
pushf
and
cs
or
xchg
cmp
or
xor
repnz
cltd
mov
xchg
dec
and
sbb
leave
adc
dec
lahf
hlt
cmp
loop
jbe
inc
sub
cmpsb
popf
stos
aaa
pop
jb
adc
adc
dec
in
and
lret
inc
or
push
shll
out
or
mov
mov
add
andb
jl
ret
movb
out
add
nop
push
inc
xchg
pusha
sub
mulb
push
cmp
and
jl
jo
add
test
lods
xchg
sub
dec
dec
idivl
and
or
cwtl
adc
add
jne
add
xchg
dec
cltd
rcrb
jmp
jecxz
push
scas
sub
shl
mov
dec
xor
sub
cmc
xchg
add
xchg
pop
fidivrl
ror
dec
test
into
imul
test
dec
xchg
or
mov
mulb
leave
shlb
jbe
jl
sbb
test
xor
xlat
add
fisttps
dec
ficompl
sbb
pop
xchg
and
fwait
xchg
mov
lret
cmp
pop
jnp
ljmp
dec
jp
inc
mov
push
movsb
cltd
mov
aad
lock
mov
aas
push
xor
pop
cmp
mov
xor
lds
cmp
insl
jbe
insl
repz
sbb
cwtl
cmpb
xchg
adc
jg
sub
enter
test
xchg
pushf
cld
xchg
pop
in
push
xchg
js
mov
cmpsl
mov
mov
call
cmp
cmp
jo
xchg
sub
jecxz
add
outsl
test
pop
cmp
fcoml
andb
mov
dec
fsubs
in
cmp
sub
add
add
dec
bound
mov
aam
roll
cmp
xor
insl
cld
test
mov
pop
adc
fwait
sbb
popf
addb
ljmp
push
inc
clc
clc
jp
sbb
inc
movsl
cli
fdivl
jns
xlat
dec
xchg
icebp
inc
repz
and
cmpsb
mov
lds
xchg
push
cmpsb
filds
adc
bound
cmp
push
mov
adc
stos
repz
mov
sbb
mov
test
pusha
adc
in
mov
pop
js
shll
or
cmp
rorl
pushf
fadd
add
imul
cltd
jnp
mov
push
imul
rclb
aas
sbb
decl
mov
lods
adc
inc
call
inc
jo
cmp
lahf
mov
xor
mov
cmp
xchg
jecxz
mov
pop
sub
mov
push
sub
lds
lea
dec
jae
mov
aam
pop
xchg
cltd
enter
lock
adc
jecxz
dec
out
push
xor
push
cli
or
pop
lret
js
mov
adc
fsubl
cmp
adc
call
jbe
mov
das
and
pop
and
cld
mov
out
jle
arpl
sbb
shll
test
xchg
pop
int3
dec
jbe
mov
inc
cmp
cmp
sub
push
add
cs
and
or
xor
cmpsl
pop
mov
out
dec
loope
mov
xor
je
lods
inc
scas
lret
scas
cmpb
or
xor
or
test
in
orb
and
jp
jno
add
or
lods
xor
gs
out
leave
cwtl
adc
pop
pop
clc
mov
mov
dec
scas
ss
out
dec
scas
xor
push
sahf
fstpt
lea
addb
lods
dec
dec
inc
adc
jecxz
leave
ret
jb
inc
cmp
ret
cmpl
xchg
inc
and
leave
add
pop
mov
int
rol
addr16
push
ror
cwtl
xor
test
push
push
mov
and
addr16
xor
ja
mov
cmc
call
pop
enter
mov
xchg
and
mov
cmp
mov
dec
into
jl
sub
stos
inc
cltd
ret
and
lret
lret
push
fstp
xor
cli
repz
ja
adc
and
push
and
ret
dec
fs
push
sub
inc
or
push
push
and
mov
pop
addr16
pusha
sbb
add
adc
aaa
sub
xorb
into
mov
push
cmp
or
pusha
addr16
push
pushl
aad
mov
loopne
ficoms
xchg
adcb
add
and
mov
sbb
pop
xor
adc
nop
inc
daa
cmp
stc
dec
jl
mov
xchg
xor
movsl
in
fiadds
or
test
mov
in
jmp
inc
fisubs
lea
sbb
les
jbe
into
fcomps
sti
divb
rolb
and
in
cmp
fcoms
sbb
daa
dec
ficoml
or
lods
ja
push
lea
sbb
call
cmpsb
out
mov
lods
add
fistpl
jnp
sub
in
data16
stos
std
mov
or
push
int3
xor
inc
cmp
jno
inc
mov
sbb
push
xor
jo
cmpsl
xlat
push
pop
outsb
ret
adcb
inc
les
xchg
mov
or
and
jmp
xchg
cmp
lea
push
xchg
xchg
arpl
popf
add
outsl
xchg
loopne
int3
sub
pop
lea
mov
out
dec
pop
dec
out
out
xchg
inc
mov
and
scas
mov
cmp
add
mov
push
push
aaa
in
in
mov
mov
repnz
xchg
xchg
sti
pushf
xchg
pop
mov
sahf
xchg
hlt
pop
faddl
dec
or
into
pushw
pop
test
push
pop
rcl
pop
ljmp
aam
repz
popf
pop
aaa
dec
scas
shlb
in
cmp
test
push
cmpsl
ljmp
jne
adc
sbb
div
mov
xor
cli
xchg
sbb
and
mov
mov
ficoml
jmp
ljmp
fcompl
aaa
repnz
pop
mov
shr
mov
rcl
pushf
and
pop
or
mov
add
gs
xchg
lds
imul
in
or
pusha
mov
cmpsl
xchg
jb
fimuls
fs
inc
adc
daa
lcall
xchg
push
out
and
leave
shrb
mov
jmp
loopne
cmp
mov
sahf
sahf
sub
adc
or
pop
faddp
insl
ss
cwtl
cmp
insl
adc
xchg
mov
pop
imul
aad
shlb
sahf
lcall
xor
rep
dec
jecxz
push
fdivr
dec
pop
ret
inc
mov
xchg
inc
sub
out
outsb
int3
ja
mov
dec
cmpsl
mov
dec
test
cld
push
or
or
push
in
stc
inc
adc
add
dec
nop
fucom
xor
ret
sub
icebp
aam
xchg
mov
ror
aad
mov
push
aad
rclb
xlat
fwait
call
mov
fistl
and
push
mov
int
sti
mov
jne
orb
popf
pop
ret
sbb
cmp
push
sub
call
dec
cmpsb
add
push
rcrl
xchg
xchg
or
lahf
clc
stos
out
sub
mov
xor
cwtl
je
in
cmp
std
adc
jo
in
in
mov
int3
psubsb
mov
outsl
pop
stc
jns
dec
xor
inc
xchg
clc
dec
sub
adc
adc
or
pop
jecxz
jp
and
movsb
out
daa
sub
mov
sub
loopne
pop
out
pop
loope
lea
add
mov
mov
cmpsb
cld
imul
test
pop
pop
or
push
ja
in
dec
and
mov
bsr
add
xchg
shrb
lods
push
in
mov
decl
xor
je
rcll
inc
mov
sbb
pop
jb
mov
aaa
ret
loope
xchg
sub
adc
test
or
mov
iret
cld
leave
movl
inc
pop
xor
or
sub
pop
jp
js
ja
add
mov
addr16
sub
insb
cmc
and
push
iret
xorl
cmp
pop
sbb
jbe
std
mov
rclb
push
xchg
dec
ljmp
fidivrs
imul
jbe
dec
add
fdivr
xchg
fimull
fsubrs
int
xor
cmc
arpl
cmp
or
ret
lods
jp
mov
out
xchg
adc
int3
sbb
or
rcrl
popf
or
adc
dec
mov
mov
cmp
adc
mov
or
xlat
add
cmp
add
push
loopne
mov
cltd
pop
lcall
jge
aad
sti
xchg
sahf
xor
mov
or
ror
adc
clc
jp
cmpsl
fisttps
hlt
addl
sti
mov
sti
mov
mov
mov
pop
cmp
ss
xor
cs
imul
stos
imul
pop
pop
cltd
subl
push
sbb
sbb
dec
gs
mov
mov
aas
mov
push
sahf
rolb
push
pop
pop
xor
pop
popa
adc
cwtl
mov
push
push
mov
mov
inc
addr16
stos
inc
sbb
mov
les
loope
movsl
jbe
mov
stos
xchg
sbbl
cmp
test
or
sbb
in
mov
aaa
ja
sarb
pop
fcmovb
push
mov
sub
pop
repnz
fs
add
js
stos
ret
mov
mov
shll
sbb
cmpsb
adc
cmp
ja
lret
dec
inc
pop
repnz
das
test
stos
loopne
nop
xchg
std
mov
aaa
cmpsb
xor
dec
jns
adc
jae
lods
xchg
lods
and
loop
cmpl
clc
lock
push
or
mov
pusha
and
sub
add
mov
pop
je
jne
push
pop
mov
xor
mov
into
call
jnp
scas
xchg
ds
jecxz
fwait
adc
in
test
and
mov
imul
pusha
lret
mov
aaa
xchg
mov
dec
adc
add
mov
test
scas
add
stos
xlat
jle
shr
add
and
xor
jo
stos
pop
add
inc
inc
sbb
aaa
dec
in
add
or
push
mov
or
rclb
xchg
xchg
cmp
clc
rcl
adc
insb
xchg
fwait
sahf
push
jbe
test
xor
pushl
xchg
cmp
inc
adc
imul
push
adc
mov
ret
xchg
adc
xchg
fldl
fisttpll
shll
jmp
les
cmp
ss
add
xchg
sub
pop
loop
xor
sub
mov
jbe
sahf
sbbl
sub
inc
mov
xchg
subl
cltd
push
add
jmp
mov
mov
cwtl
and
sbb
lods
xor
pop
pop
push
ficomps
adc
dec
lods
sub
cwtl
mov
push
into
lret
add
cmp
fidivrl
enter
aad
pop
pop
jns
inc
pusha
cmp
insb
ljmp
xchg
push
or
pop
adc
mov
pop
sub
add
popf
inc
fs
cmpb
lcall
repnz
push
in
repz
adc
cwtl
lods
outsb
mov
int3
test
loop
sub
inc
rol
in
sbb
sub
icebp
in
ret
adc
aad
scas
andb
cld
mov
inc
jle
push
and
jg
sbb
fidivl
cmp
test
mov
fdivrs
add
mov
jbe
push
outsl
mov
jo
mov
test
stos
lret
mov
xchg
xchg
pop
or
outsb
inc
lods
jl
imul
push
xor
and
imul
or
movsl
or
outsl
mov
ja
cmp
mov
stc
lret
cs
pop
xchg
jl
sahf
lahf
or
xchg
jp
popw
or
stos
jbe
inc
test
inc
and
xlat
dec
push
lcall
add
fistps
fs
xor
and
cwtl
mov
popa
cli
ss
add
cmp
add
inc
push
enter
out
push
or
aas
cmc
lret
push
mov
push
out
pop
mov
xchg
movsb
rcr
mov
bound
mov
int
mov
push
dec
or
jnp
jne
push
mov
xchg
jbe
ret
mov
adc
dec
outsb
mov
xchg
mov
cmp
mov
mov
dec
mov
ret
bndstx
popf
xchg
mov
pushf
scas
jl,pn
jge
shrl
sbb
test
and
push
pusha
mov
pusha
shll
shll
cmpsl
das
into
or
daa
jecxz
gs
aad
std
xchg
in
add
mov
xor
pop
sahf
pop
pop
fmulp
imull
imul
andl
inc
lods
add
test
mov
pop
jecxz
pop
pop
push
scas
icebp
jecxz
fisttps
ljmp
and
cmpsb
pop
int
xchg
pop
xchg
iret
insl
add
push
std
pop
not
dec
adc
dec
cli
aas
sti
inc
pop
pop
mov
jne
scas
sub
or
ret
adc
fcoml
cmp
sub
cmp
sbb
fprem1
scas
cmp
mov
sub
mov
scas
fdivp
mov
in
pop
aam
lds
xor
mov
push
cmp
push
les
jae
pop
or
pop
xor
xchg
int3
mov
cmp
and
jg
dec
add
rorb
inc
arpl
pop
test
out
pop
add
mov
push
sbb
mov
and
jp
xor
aaa
cmp
inc
mov
xor
arpl
push
addr16
lock
scas
out
sbb
adc
out
mov
lret
mov
add
loopne
adc
icebp
dec
popa
cmpsb
and
push
and
xchg
jge
cmp
xchg
js
pop
pop
mov
ljmp
lea
xchg
mov
dec
xlat
jo
xchg
aas
imul
adc
or
pusha
xor
aaa
imul
lahf
mov
xchg
icebp
outsb
mov
out
xchg
gs
mov
cmp
rcrl
sar
inc
movsb
add
add
add
popf
add
ss
icebp
data16
dec
enter
push
insl
mov
enter
add
mov
leave
fs
or
lock
das
mov
add
fcoms
mov
movsl
test
lcall
mov
cwtl
lret
sti
in
cmp
insb
push
shll
pop
sahf
ror
mov
adc
sbb
out
cwtl
mov
stos
inc
mov
sbbl
sahf
sbb
test
mov
rcrb
in
dec
out
or
adcb
inc
lcall
and
fldt
mov
jb
arpl
sbb
faddl
aad
imul
mov
cltd
int
add
stc
mov
sbb
lret
xchg
into
data16
add
call
and
lret
lcall
adc
adc
loop
popa
mov
inc
push
rolb
mov
in
cwtl
testb
inc
repnz
mov
push
cwtl
imul
pop
sub
mov
pop
inc
icebp
mov
or
in
add
jb
stc
out
fucomi
popf
xchg
push
adc
pop
test
dec
stc
mov
and
jae
ret
test
add
xchg
xchg
xchg
dec
pusha
xchg
pop
and
mov
sti
push
fnsave
fucom
push
xchg
jbe
das
ss
cmpl
mul
sub
mov
add
pop
daa
adcb
mov
mov
mov
xor
xor
push
aad
cmc
adc
mov
sub
mov
inc
je
iret
push
add
aaa
imul
adc
movsl
adc
jp
inc
leave
aam
dec
add
out
inc
inc
das
jo
xchg
popa
fs
sti
adc
in
adc
daa
or
mov
push
lret
mov
push
out
cmp
js
hlt
movsb
lret
cmp
cmp
sahf
arpl
in
repnz
xchg
outsb
inc
xchg
and
cmp
push
sub
or
inc
pusha
dec
xchg
iret
es
mov
and
or
add
leave
lea
adc
inc
cmc
mov
addl
inc
es
aam
push
push
sbb
jae
jl
dec
fs
dec
aas
dec
sub
movsb
jo
and
push
cmp
dec
lret
inc
xchg
inc
movsl
push
ficoms
xor
ja
pop
ds
dec
sub
mov
mov
sbb
xchg
jne,pn
mov
out
adc
das
outsl
dec
enter
mov
sarb
cld
and
arpl
xor
or
mov
into
rol
out
gs
and
rcr
add
popa
or
or
fistpl
push
mov
shr
testb
cmpsl
aas
push
mov
adcb
rcrl
mov
ror
std
xchg
cmp
ret
xchg
mov
and
fidivrl
push
lods
mov
lret
sub
dec
pushf
xor
mov
mov
std
or
xchg
xchg
divb
or
add
cmc
test
cmpsb
xor
test
mov
and
pop
lahf
xor
or
lret
sub
mov
and
jne
mov
jecxz
imul
leave
mov
mov
mov
test
mull
add
and
daa
call
rcll
and
clc
dec
mov
sbbl
sub
hlt
mov
xchg
rolb
dec
pop
or
cmp
pop
ret
lds
dec
xchg
and
push
pop
mulb
push
mov
sahf
movsb
inc
or
push
pop
dec
jb
or
dec
push
hlt
test
imul
dec
push
mov
je
xor
jge
pop
mov
inc
mov
sbbl
xor
sbb
and
faddl
adc
fnstsw
inc
stc
mov
xchg
mov
xchg
mov
sbb
push
dec
push
mov
scas
ficompl
es
mov
push
xchg
dec
mov
mov
dec
dec
pop
adc
cmpsl
lret
cmc
cld
fsts
mov
imul
dec
fsubrl
xchg
add
sbb
mov
mov
clc
fstl
cmp
stos
push
inc
xlat
bound
lock
cmp
xchg
cli
jnp
jge
inc
pop
or
enter
jmp
pusha
sub
lahf
mov
cmp
lds
into
push
test
adc
mov
stc
jp
iret
pop
sti
sbb
hlt
fnstsw
cld
mov
sub
adc
pop
fisttps
sbb
hlt
cmp
outsb
push
pop
add
cld
gs
dec
test
in
lret
leave
std
cmp
xlat
aad
js
adc
jmp
sub
jb
insl
sbb
aam
jl
cmpsl
sbb
sub
push
mov
push
pop
inc
or
sbb
movsb
in
dec
leave
xorl
arpl
in
std
cmp
dec
xlat
test
rcr
shrb
in
dec
cli
adc
mov
push
aad
jb
cltd
sbb
icebp
push
int
mov
jge
mov
clc
mov
add
xlat
push
faddl
popf
aad
mov
das
xor
sbb
rcl
inc
xor
lcall
ffreep
cmp
push
inc
pop
mov
or
and
pop
pop
xor
imul
repnz
dec
aas
mov
cmp
push
xchg
dec
sbb
clc
hlt
das
insl
xchg
sti
clc
loop
daa
vmovaps
cmpsl
dec
insb
and
mov
jp
stos
popa
sbb
cmp
fimull
addr16
or
scas
cmp
gs
mov
push
mov
push
push
lds
outsl
mov
adc
inc
lret
cmp
mov
dec
adcb
mov
fistl
rcl
orb
mov
push
push
insb
adc
jae
test
xchg
in
stos
fisubs
loop
incb
xchg
jecxz
outsb
or
push
out
incb
mov
xor
sub
add
inc
cmp
dec
pop
cmpsb
jmp
push
repnz
nop
mov
clc
subb
aam
cld
sub
xor
jbe
xor
jecxz
lods
xchg
aas
or
mov
mulb
dec
xchg
test
push
cmp
outsb
test
adc
inc
movsl
inc
into
pop
lds
push
cmpsl
mov
mov
ret
pop
cmp
rclb
mov
pop
cwtl
negl
add
lds
xchg
in
lret
addb
test
nop
cwtl
inc
push
fisttpl
inc
aas
cmp
ret
xchg
jecxz
mov
mov
cmp
jg
inc
push
mov
enter
cmp
and
jle
in
stc
data16
pop
sub
sub
jle
scas
mov
bound
xchg
mov
popf
push
xlat
mov
lahf
pop
jne
xchg
push
popf
mov
push
pop
ret
jne
mov
push
jo
pop
sub
pop
xchg
sub
xchg
and
gs
roll
ds
dec
mov
stc
add
adc
push
add
mov
jecxz
inc
mov
mov
subb
sub
cs
cmp
push
arpl
cltd
cmovp
outsb
mov
or
sbb
add
pop
pop
sahf
jp
xchg
ret
cmp
lods
jne
pop
shll
pop
popf
mov
or
in
cld
loope
lds
sbb
or
imul
aas
or
push
int3
out
in
mov
push
ret
push
fisubl
dec
fcompl
gs
xor
negb
fmull
lea
js
popa
fsubr
push
dec
addr16
sub
cld
dec
popf
js
jo
dec
jnp
push
mov
sub
pop
dec
outsb
inc
xor
sub
leave
fmulp
mov
cld
lret
sbb
mov
jb
add
and
paddd
sub
mov
or
fisttpll
aam
ret
xchg
adc
add
mov
xchg
mov
push
inc
mov
out
xorl
xor
ljmp
jge
stos
andb
push
cmpsl
fucomi
push
mov
subl
dec
bound
fiaddl
fcomps
sbb
bound
imul
jae
and
jg
xchg
adc
into
add
shrl
add
mov
scas
pop
call
cmp
rcll
inc
mov
jg
fstpt
test
or
into
ret
cmpsb
lods
arpl
and
or
pop
int3
mov
adc
mov
cmpsl
pop
aam
jae
dec
enter
enter
lds
push
adc
leave
xchg
out
inc
cmpsl
out
dec
pop
ds
test
jecxz,pt
xchg
mov
imul
push
mov
dec
jecxz
les
lcall
cmpb
int
sub
jge
and
lods
xor
dec
pop
test
imul
mov
push
cmp
sti
hlt
insl
aaa
lds
iret
scas
mov
adc
insl
std
lock
push
push
inc
int
aad
xchg
aam
adcl
jp
jno
add
and
sub
xor
xchg
sub
jp
cld
cmp
mov
repz
fwait
xchg
iret
sbb
sbb
push
ljmp
out
mov
addr16
and
call
ja
dec
mov
sbb
scas
adc
mov
popf
lret
test
pop
fsubr
mov
lock
sti
cltd
xor
xor
adc
xchg
test
mov
cli
cs
cmp
mov
cmc
push
in
adc
mov
adc
push
out
sub
popf
inc
push
xchg
dec
mov
fcmovnu
sbb
jo
xchg
xor
subl
mov
cmp
mov
xchg
and
mov
mov
inc
stos
fimull
aam
mov
in
loop
mov
jl
jg
std
and
stos
pop
inc
popf
leave
inc
push
out
pop
push
cmpl
fldcw
imul
add
cmc
rorl
test
or
sbb
addr16
test
push
xchg
mov
cmp
movsl
es
nop
cmpsl
mov
cs
and
add
imul
mov
repnz
inc
cmp
mov
lret
ja
pavgb
inc
subl
adc
jbe
pop
mov
jl
and
jns
add
leave
xor
mov
xchg
pop
fldcw
repnz
sub
lods
xor
xlat
addr16
fistps
push
cmpsl
jp
cmp
sbb
pop
sub
mov
mov
mov
jns
divb
mov
or
jg
mov
aam
adc
inc
mov
addr16
push
rolb
dec
mov
jae
out
lea
aam
add
sbb
adcl
xor
aas
lds
inc
fisttpl
sub
nop
dec
or
xor
sub
mov
inc
scas
loopne
push
insl
shll
inc
xor
repnz
and
or
push
aad
mov
sarl
cmc
adc
mov
add
push
jae
mov
out
movl
ja
test
cmp
repnz
ret
cmp
aam
or
outsb
cmpsl
inc
jnp
inc
mov
jecxz
sarb
ljmp
jmp
jo
das
stos
aaa
push
add
je
jmp
mov
adc
or
push
jg
push
sti
xchg
shrw
mov
xchg
pop
mov
mov
setg
jnp
movsb
in
sub
sbb
mov
cli
aaa
inc
inc
faddl
or
or
dec
lret
repnz
add
mov
call
scas
addl
mov
dec
lahf
pop
xchg
aam
or
sbb
scas
jecxz
lret
sub
movsl
jge
cmp
push
dec
pop
adc
push
popa
cmp
jl
sti
lods
mov
test
inc
dec
xor
push
scas
mov
or
repnz
sbb
leave
iret
dec
dec
sti
push
lret
and
dec
arpl
pushf
cmp
or
repnz
pop
push
add
test
dec
rorl
sbbb
std
rcrb
rorl
rcl
push
xchg
enter
aad
adc
cmp
movsl
sbb
inc
aaa
imul
jb
insb
iret
jmp
mov
add
adc
addb
jns
lahf
dec
sub
shl
pop
ljmp
jo
lcall
mov
loope
gs
xchg
xchg
ret
insl
add
test
dec
cmpsl
or
push
pop
mov
out
sub
arpl
enter
mov
or
aas
jecxz
xor
pop
adc
aaa
pop
inc
clc
jae
xor
adcb
inc
inc
mov
mov
inc
dec
rolb
mov
pop
cmp
dec
test
movsl
in
cmp
cltd
jl
arpl
add
adc
pop
icebp
sbb
jb
cli
nop
fiaddl
rcrb
dec
mov
push
cmc
xor
fcoms
add
aad
inc
arpl
cld
sar
fadd
jp
mov
popf
je
adc
mov
popf
pop
scas
xor
in
rcrb
mov
outsl
orb
bnd
stc
in
bound
ljmp
sbb
inc
add
mov
pop
fidivl
sub
push
pusha
out
adc
mov
and
shrb
jns
fcoms
incb
jge
sub
cmp
out
fcompl
xchg
in
rorl
out
sub
inc
mov
sub
or
jmp
dec
inc
dec
ds
cmpsb
adc
xlat
pop
jmp
adc
test
jno
mov
data16
addr16
out
mov
rolb
jmp
aaa
ja
pop
or
fnsave
popf
hlt
sti
xor
js
std
pop
mov
daa
fsts
cmp
xor
repnz
pop
testb
cmp
jno
insb
mov
addb
mov
outsl
daa
test
sbb
pop
add
mov
lock
sbb
inc
mov
je
repz
cs
inc
xchg
inc
pop
fisubs
xlat
pop
lret
test
sub
lret
push
fdivs
psraw
mov
cmp
sub
fwait
mov
mov
add
sub
mov
mov
adc
or
idivb
add
je
mov
clc
add
scas
sbb
add
inc
clc
adc
push
add
or
loop
out
jno
sub
icebp
xor
and
mov
mov
pop
adc
push
dec
adc
lret
add
jmp
fidivrs
push
inc
es
and
cwtl
ret
xchg
imul
inc
push
pop
iret
loop
fisttpll
pop
fwait
addb
fimuls
out
jp
stos
pop
sub
out
les
inc
icebp
adc
insl
fsubs
adc
xlat
inc
movsl
pop
pusha
mov
add
xchg
jns
in
jb
lahf
mov
shlb
rolb
es
mov
push
mov
fcoml
rorl
xor
xchg
rolb
or
push
lret
cmp
mov
outsl
dec
pusha
and
mov
sarl
add
and
mov
add
mov
mov
mov
insl
out
sub
bound
sbbb
or
mov
sti
add
cld
pop
sub
mov
mov
shll
xchg
add
mov
mov
add
jo
sub
xchg
scas
add
pusha
lea
mov
pop
cmpsb
xchg
int3
pop
push
add
mov
mov
rcrb
pop
mov
xchg
and
loope
xor
das
sub
cmp
out
mov
mov
xchg
sub
sbb
mov
sub
pcmpeqb
int3
pop
in
inc
xchg
sbb
fcompl
shr
jb
push
int
out
inc
and
jae
daa
sbb
std
cld
pop
aaa
fildll
aas
scas
cmp
sub
lea
mov
filds
and
xor
leave
jmp
es
sbbl
xchg
adc
lahf
leave
fidivrl
arpl
andb
mov
into
js
jne
outsb
scas
and
jb
imul
jae
jbe
mov
iret
or
dec
stos
ss
push
sahf
dec
outsb
add
mov
jns
xchg
imul
mov
lods
dec
sti
push
jp
leave
fwait
addl
enter
dec
hlt
push
cmp
push
cmp
mov
cwtl
dec
test
add
push
lcall
loopne
cmpsb
mov
push
jno
and
dec
sbb
gs
aam
mov
push
les
or
add
push
jnp
pop
jle
push
jb
mov
add
movsl
cmpsl
push
xchg
jl
mov
add
pop
xchg
ret
outsb
sbb
mov
ret
push
cmp
mov
mov
les
popf
mov
inc
ljmp
pop
push
sahf
addl
adc
jo
int
mov
push
sub
into
jl
or
fldenv
movsl
test
mov
cwtl
mov
andl
into
push
popf
mov
lahf
aas
mov
scas
pop
mov
or
jnp
pushf
je
cld
jbe
cltd
cmp
jp
push
jmp
out
inc
xchg
push
mov
or
rol
sub
mov
in
stos
or
mov
inc
loopne
rcl
xor
xor
jge
dec
inc
add
mov
sahf
test
cmp
mov
or
rcrl
push
sbb
and
push
add
cmp
sti
cmc
or
cmova
bound
adc
or
incl
insl
mov
imul
mov
xchg
ja
cmp
xor
add
in
outsl
lock
jb
or
dec
add
je
xor
hlt
mov
stos
sub
out
pop
imul
ss
ljmp
or
push
inc
or
pop
xchg
sti
mov
cmpb
mov
pusha
inc
adc
scas
push
daa
sbb
cmp
jle
sub
xor
into
pusha
xchg
shrl
leave
clc
sahf
sbb
mov
xchg
dec
rcrl
fadd
sub
mov
aas
sub
xchg
inc
sahf
push
jns
repnz
outsb
jmp
sub
inc
mov
dec
out
sub
outsb
das
loope
xor
mov
int
adc
push
imul
dec
call
stos
mov
mov
fistpll
push
std
push
ss
and
or
inc
inc
mov
int3
and
movb
sub
cmpsl
cmp
jp
fildl
xlat
add
inc
hlt
ds
outsl
jnp
fmuls
cmpsb
lea
scas
test
mov
sub
pop
sbb
test
adc
lahf
dec
mov
sub
arpl
mov
cmp
jp
push
outsb
lcall
scas
imul
addr16
mov
enter
sbb
or
lock
xor
xlat
addr16
cwtl
int
pop
jp
js
fisubrs
mov
xchg
clc
imul
adc
hlt
push
scas
jnp
outsl
cs
repnz
and
dec
mov
outsl
xchg
xchg
dec
outsb
push
and
jnp
pop
mov
dec
xor
in
addb
pop
insb
fmull
movsl
push
push
and
call
lods
dec
sbb
push
xor
bnd
outsl
push
adc
adc
dec
xor
les
adc
add
nop
scas
mov
imul
enter
addr16
or
jbe
cmp
xchg
cmp
jae
push
push
jmp
std
in
setne
lock
loopne
clc
roll
xlat
xchg
dec
insl
push
pop
inc
inc
out
repnz
and
mov
add
jnp
pop
mov
mov
cwtl
jne
fstl
sub
push
or
shlb
cmpsl
iret
ds
sub
adc
sub
cmp
sbb
xor
into
xchg
or
mov
popa
sub
cmpsb
sbb
adc
sbb
out
movsl
xchg
push
js
les
out
pop
loope
das
repz
stc
xor
shlb
or
push
mov
inc
pop
test
jg
pop
js
aaa
xchg
mov
fmull
add
push
in
cli
push
push
and
loopne
cs
jo
js
fs
sbb
push
mov
and
cltd
out
pop
imul
and
notl
jmp
sub
xchg
cli
lea
pop
mov
and
dec
jnp
arpl
jp
mov
push
xlat
orl
ljmp
mov
jbe
inc
mov
cmp
stos
and
lret
icebp
push
dec
pop
imul
sbb
xchg
int3
out
sbb
iret
mov
mov
push
or
hlt
mull
inc
les
js
mov
es
movsl
frstor
rorl
add
mov
jno
cmp
xchg
mov
sahf
mov
pop
addr16
sti
xchg
fnstenv
rcr
mov
cmp
mov
dec
xor
push
and
lret
shufps
aaa
sti
cmp
aas
add
sub
xchg
sub
push
push
sub
imul
bound
arpl
xor
push
xor
add
and
pusha
hlt
add
test
add
or
cmpsl
xor
jg
fdivl
mov
daa
xlat
jno
call
imul
lret
push
shr
pop
in
repz
clc
push
icebp
mov
xchg
xor
jp
sti
je
int3
jns
insl
lret
mov
test
lds
dec
mov
mov
xor
push
scas
cmp
jns
adc
pop
push
dec
dec
mov
push
mov
fisubrl
loop
cwtl
popa
push
into
dec
mov
call
add
cmp
and
dec
or
rorl
jecxz
mov
insb
lret
adc
insl
lret
xchg
rcrb
cld
adc
das
sub
and
xchg
sarl
outsl
lahf
aas
cmpsb
adc
dec
cmp
inc
pop
repnz
cmp
mov
xor
aad
sub
insb
inc
add
add
mov
mov
add
out
imul
je
push
pop
popa
pop
rcrl
sub
mov
mov
cmp
test
lds
and
aad
dec
popf
mov
iret
cmpsb
push
jae
arpl
mov
lret
in
popf
cmp
mov
fs
test
lock
pop
jno
push
adc
xchg
cmp
test
push
daa
rorb
aam
fwait
inc
pop
cmp
pop
adc
subb
sbb
into
mov
mov
xor
cli
push
sub
pop
outsb
lret
xchg
push
gs
or
cmp
and
lds
cmp
ljmp
sub
cwtl
ret
xor
cmp
sbbb
scas
fsubrl
and
decl
pop
xor
push
push
adc
ja
mov
leave
gs
jmp
mov
xchg
test
rclb
cmp
imul
xchg
push
paddd
mov
mov
rorb
pop
xchg
mov
fnstsw
mov
mov
testb
lea
js
fcomip
pop
inc
int
popf
and
aas
sbb
or
jb
imul
xor
jne
adc
movsb
loopne
push
stos
inc
movsb
fs
jne
int3
inc
clc
cmp
dec
scas
mov
cld
sub
ret
xchg
jnp
dec
movsb
ss
in
push
scas
mov
ljmp
cmc
pop
movsb
pushl
adc
add
dec
or
sbb
out
push
fcoml
and
cmpsl
and
data16
cltd
mov
adc
lods
or
mov
lret
push
loope
hlt
ja
mov
push
and
idivb
ficomps
pop
mov
lahf
jmp
into
push
outsb
push
addl
andb
mov
pop
mov
sahf
outsb
inc
push
mov
nop
mov
dec
xlat
inc
popf
jbe
or
lret
ret
cmc
and
add
imul
es
fstl
mov
repz
push
xor
call
mov
sub
insl
mov
lret
cmpsb
xchg
push
lahf
push
jmp
sbb
jl
push
fwait
mov
adc
cmp
mov
pop
stos
sbb
xor
out
adc
mov
and
mov
jo
enter
pop
shll
rcr
xchg
mov
jo
jecxz
leave
sbb
jns
testl
ret
dec
mov
add
mov
sti
dec
daa
cmp
aam
dec
pop
xchg
and
fcoml
or
ljmp
arpl
dec
fwait
and
jnp
mov
jno
jecxz
mov
lods
mov
xor
aas
xor
aam
cmp
negb
or
xor
push
jnp
inc
popa
popa
mov
pop
sarl
imul
js
xor
adc
inc
mov
cmpsb
inc
mov
mov
add
leave
jmp
data16
xacquire
and
aad
sub
add
data16
mov
push
mov
sbb
push
fcmovnu
clc
push
dec
into
push
cwtl
adc
out
adc
hlt
pop
mov
xchg
cld
pop
mov
or
push
lock
clc
mov
loopne
scas
mov
mov
mov
outsl
lret
in
sbb
jmp
jne
icebp
pop
ror
in
into
add
in
cmpsl
bnd
fsubr
pop
aam
lea
dec
jns
sbb
sbb
aad
xchg
mov
inc
push
mov
movsb
lcall
lock
sub
mov
aaa
das
ret
mov
sbb
fs
push
inc
adc
inc
scas
adc
pusha
jns
mov
xlat
mov
call
stos
cmp
ds
int
jg
sbb
mov
jecxz
jo
adc
pop
push
push
mov
xor
in
xor
and
ret
out
aas
std
and
mov
cmp
pop
mov
iret
jmp
sbb
push
push
push
mov
mov
jbe
cmp
test
cmpsb
rorl
dec
add
xor
sbb
or
rcll
dec
mov
aam
fiaddl
sbb
dec
sbb
mov
aad
ljmp
movsl
cmp
xchg
or
mov
dec
stc
inc
lret
in
jge
stc
xor
aaa
and
fwait
xchg
es
pop
dec
stc
inc
cmp
mov
cmp
into
and
add
pop
mov
loope
hlt
and
xor
in
test
ds
pop
pop
mov
jb
lret
lcall
sar
aas
jo
in
mov
adc
xchg
fwait
cmpsb
ljmp
mov
movsl
aas
call
jle
loop
xor
mov
popa
out
movsb
cmp
push
fwait
or
ljmp
sbb
fistpl
add
adc
push
push
lock
push
int3
cmp
jl
outsl
mov
in
out
and
jb
dec
cmp
mov
add
shl
dec
jo
mov
pop
mov
push
push
fs
pop
jle
fsubrl
xor
and
inc
push
dec
and
mov
mov
xchg
jmp
insl
loope
pusha
pop
fwait
js
sub
testb
adc
adcb
aas
push
mov
mov
sbb
jnp
pop
ja
inc
add
ret
jns
test
adc
out
and
fdivl
push
fisttpl
dec
jb
ds
outsl
xlat
shlb
adc
out
xor
and
ds
mov
or
test
sub
testl
sbb
ficoms
jno
jmp
pop
hlt
push
lcall
int3
repz
push
mov
faddl
int
pop
or
xor
xchg
andl
mov
adc
cmpsl
sbb
icebp
jge
out
test
les
hlt
xchg
stc
cmp
sbb
loopne
jnp
jo
sbb
and
das
or
fnstcw
stc
js
cmpsb
jle
fisubl
std
aad
jae
mov
pop
inc
lds
aaa
orb
outsb
subl
sbb
pop
push
xlat
xchg
sub
cmpsb
sahf
fistps
mov
mov
je
stc
jle
adc
dec
cmpsl
stos
xor
imull
mov
mov
xor
sbb
pop
loope
jmp
jl
cmc
xchg
out
xchg
xor
stos
mov
jno
loopne
outsb
nop
cmp
jmp
in
mov
dec
insb
in
jmp
dec
popa
loopne
cmp
int
xchg
stc
xchg
cmp
sbb
loope
jle
dec
push
mov
cmc
das
jbe
mov
std
dec
mov
sub
pop
jle
dec
xor
repnz
inc
mov
nop
cmp
sbb
inc
pop
jbe
mov
ljmp
test
mov
inc
mov
outsb
ret
mov
test
sbb
stc
ret
in
mov
sarb
in
and
movsl
mov
dec
xchg
mov
aad
mov
imul
fstps
adc
aaa
sbb
dec
mov
and
inc
jo
push
mov
sbb
je
xchg
mov
adc
clc
cmp
mov
stc
outsb
pop
shll
jecxz
movsl
lods
mov
insb
xor
or
fwait
mov
in
lock
lea
or
shlb
jbe
aam
cmp
cmp
add
and
idivl
mov
arpl
ss
jns
add
imull
sti
adc
lret
or
dec
fwait
sub
jo
imull
mov
jb
inc
lret
or
call
inc
bound
imul
aam
adc
push
dec
outsl
push
mov
push
imul
sub
inc
or
pop
hlt
dec
or
dec
fnstenv
dec
cmp
mov
jmp
jne
insl
add
and
inc
lcall
aas
scas
adc
jb
repz
xchg
cmc
fcmovbe
fimull
in
mov
popf
lahf
in
sub
lea
ljmp
pushf
push
push
cmp
fsubrl
lods
cmp
adc
push
lods
mov
sarl
ret
push
in
xor
lcall
sbbl
stc
scas
pop
mov
dec
sub
fimuls
inc
lea
add
inc
in
insb
ljmp
pop
addr16
fisubs
jecxz
push
imul
insl
push
push
mov
xorb
loop
int
mov
sub
in
mov
jle
test
shlb
nop
jmp
cmp
pop
mov
sub
fisttpl
stos
inc
adc
out
das
push
divl
aas
add
jne
mov
inc
jns
ret
mov
and
or
mov
cli
popa
xor
inc
xor
xchg
mov
mov
int3
movhps
cmpsl
imulb
movsl
outsl
dec
sub
stos
dec
and
loop,pn
push
push
and
xchg
lret
sbb
inc
dec
lods
pop
push
mov
fiadds
scas
cmp
xchg
dec
fildl
test
scas
stos
xchg
shrb
scas
jb
mov
sub
loop
cltd
sti
mov
jge
push
fcomi
popf
push
loope
subb
sbb
jns
sbb
sbb
mov
test
mov
jmp
shr
pusha
pop
ds
mov
push
outsl
mov
xchg
dec
xor
mov
ljmp
fidivrs
xchg
mov
xchg
sbb
inc
nop
push
in
repz
imul
mov
jmp
out
into
xchg
movsb
jl
or
vmwrite
mov
test
push
lods
xor
lcall
sub
addr16
movsb
loope
mov
xchg
in
xor
jo
call
jecxz
cmp
dec
or
dec
jmp
mov
leave
lret
jb
mov
push
nop
dec
mov
lcall
int
dec
shlb
lcall
insl
decb
mov
dec
and
xchg
mov
fisubl
jno
dec
xchg
jb
push
and
xchg
stos
fwait
inc
mov
fucomp
call
sub
imul
popf
data16
loope
test
and
clc
stc
loopne
push
les
cltd
fbld
xlat
xor
stc
insb
fwait
leave
xchg
popa
xor
outsb
mov
dec
jle
rorb
mov
mov
jo
pop
inc
out
xchg
loope
shrl
addr16
or
les
mov
push
lock
xorl
and
lock
inc
sub
sahf
xchg
xchg
or
mov
repnz
pusha
and
rcll
into
pop
jmp
mov
xlat
lds
inc
daa
cmpb
scas
pop
out
xchg
repz
fidivl
sub
or
dec
fdivrs
negl
adc
negb
sub
push
rol
loopne
movsl
sub
mov
cld
adc
call
int3
inc
gs
and
xchg
imulb
xchg
sbbl
jmp
jl
jmp
mov
into
fnstsw
jns
mov
jp
sub
push
push
dec
push
dec
int
push
repz
pop
jecxz
stos
mov
pop
jl
stc
cmp
dec
inc
xchg
xchg
fwait
ret
in
popf
jge
dec
cmp
sbb
xchg
les
or
and
pop
add
aaa
aas
mov
cli
rcrl
mov
popa
add
lahf
and
lret
cmp
push
push
orb
enter
repnz
repz
inc
inc
aad
movb
xchg
idivl
or
lret
cmp
add
sub
and
push
fstl
adc
pop
cwtl
mov
out
daa
adc
insb
imul
xor
or
or
inc
int
push
inc
push
adc
js
faddp
nop
and
int
les
push
push
clc
ljmp
mov
mov
mov
mov
or
add
or
mov
add
xorb
push
std
inc
jmp
ss
test
jo
sub
xlat
jo
negl
movsb
mov
jne
call
lock
add
fisttpll
cltd
jp
repz
fdivp
xlat
dec
repz
lds
test
movsb
cmp
jnp
dec
fs
cltd
lds
push
jmp
push
into
mov
jns
in
aad
sbbb
mov
popf
sahf
dec
cli
jecxz
test
xchg
inc
roll
aas
jno
cmc
test
cwtl
mov
sbb
mov
add
movsb
sbbl
mov
lcall
neg
test
sub
pop
jge
pop
gs
adc
ret
xlat
add
push
mov
pushl
add
shll
xor
sub
mov
gs
icebp
add
sub
push
inc
out
sbb
cmc
mov
sahf
loope
lahf
xor
fiadds
push
mov
pop
daa
mov
xchg
sub
addr16
sbb
fs
sbb
jo
push
or
out
clc
insb
cwtl
mov
lsl
sti
test
mov
lds
xor
push
ss
or
stos
outsl
inc
cs
insb
xchg
loop
call
xchg
sbb
mov
xchg
pop
pcmpgtb
out
or
lahf
mov
into
or
out
xchg
nop
jl
add
pop
and
mov
jmp
lcall
add
pop
jl
out
fcmovnb
repz
mov
mov
sti
call
lods
ret
pusha
rcll
aas
and
xor
jb
or
push
mov
clc
hlt
test
jae
sbb
push
jle
pop
cmp
xor
cmp
call
std
pop
fcmovnb
cltd
scas
push
ret
jmp
push
rcrl
xchg
std
xor
outsb
mov
lds
adcl
cli
sub
daa
frstor
fs
pop
mov
and
test
cltd
push
or
ss
and
clc
xchg
bound
cmp
andb
and
xor
pop
inc
mov
je
js
cwtl
mov
mov
adc
sbb
pop
adc
and
fbstp
pmulhw
into
sub
out
mov
js
push
imul
subl
or
outsl
xchg
mov
test
mov
cltd
in
ret
xchg
cmp
dec
aam
rcrb
cli
adc
nop
pop
xchg
int3
inc
stos
pop
ds
test
adc
and
out
into
aam
aaa
sub
xor
cmpsb
or
cmp
sub
mov
jmp
jmp
insl
jmp
sbb
lret
mov
lods
xor
xchg
inc
cmp
aad
adc
cmp
inc
jne
pop
cwtl
sarb
movb
push
mov
mov
mov
lds
in
repnz
test
sub
lds
adc
push
sbb
cmpsb
movsb
gs
ss
xor
sbb
push
or
dec
repnz
aad
int
inc
bound
out
divl
std
inc
xchg
loop
nop
mov
add
stos
cli
pop
imul
push
repnz
dec
nop
imul
or
mov
adc
daa
lcall
lea
std
mov
sbb
cs
std
sub
inc
loopne
and
es
mov
push
and
add
or
fwait
out
int
push
or
movsl
push
imul
clc
or
inc
inc
jb
pusha
sbb
ja
ret
pop
xor
dec
je
loope
pop
dec
movsb
ljmp
dec
adc
or
and
movsb
and
ja
sub
lcall
subb
add
fistpl
movsb
cmp
mov
add
or
lock
in
les
or
repz
incl
in
push
dec
pop
xchg
shll
call
fisttpl
lcall
rolb
jge
mov
jecxz
test
jmp
cmp
xchg
or
orl
pop
fbstp
mov
add
in
xor
and
lods
fisttps
sbb
or
pop
and
sub
rcl
add
sbb
or
ret
into
int3
cmp
pop
in
pop
les
mov
sar
sub
dec
cltd
cmp
pusha
ret
cld
std
mov
adc
jnp
out
movsb
mov
stos
xchg
mov
inc
in
clc
outsl
das
sbb
lods
in
push
fiaddl
pop
lcall
or
fmuls
ret
xchg
sub
outsb
xchg
pop
not
cmc
mov
mov
test
inc
push
adc
ljmp
cli
xor
push
aad
leave
jmp
cmp
arpl
jecxz
aad
mov
clc
test
mov
mov
dec
pop
dec
adc
jne
cmp
pop
test
jnp
rcrl
adc
sub
pop
jg
adc
push
jae
repnz
inc
inc
add
mov
sub
clc
es
adc
lea
pushl
pop
loope
sbb
es
xchg
mov
aam
xor
xchg
jmp
mov
add
fdivl
repz
in
fstps
and
or
pop
xchg
add
rorb
pusha
insl
cld
mov
jmp
xchg
jge
jnp
dec
inc
flds
pop
and
jae
inc
adc
minps
aas
mov
pop
mov
jns
push
test
ja
push
in
sub
pop
outsb
push
add
clc
int3
mov
jmp
out
adc
inc
add
sbb
insl
xchg
push
loopne
mov
in
jmp
movsb
add
pop
pop
lea
sahf
or
jmp
lods
data16
movsl
sub
jne
push
jbe
scas
enter
out
fwait
mov
bound
bound
inc
je
fisubl
cmp
adc
sbb
rcll
sbb
jecxz
xchg
dec
mov
jnp
fs
bound
lods
ret
fwait
pop
sub
das
mov
mov
gs
repnz
add
leave
cmp
faddl
sub
jge
mov
ss
loopne
and
jl
and
inc
sar
leave
adc
or
add
rolb
xchg
mov
outsl
lret
test
mov
std
aaa
decl
or
repz
pop
dec
and
mov
out
sti
pop
sbb
std
fnstsw
les
or
pop
in
mov
repnz
data16
jge
int3
mov
xchg
push
fdivl
insb
lock
mov
fsubr
ret
stos
adc
mov
pop
pop
fimull
test
pop
repz
lea
mov
sub
xchg
ds
add
xchg
xchg
and
mov
xchg
movsl
je
xchg
lods
mov
inc
insl
mov
iret
pop
outsl
cmp
inc
mov
jne
xlat
xlat
cmp
pop
pop
sub
pusha
push
add
loopne
pop
in
je
pop
and
pop
sahf
push
mov
std
rolb
fadd
add
jle,pn
xchg
sub
xchg
ja
push
cld
cmp
xor
mov
mov
clc
xchg
test
vorps
nop
xchg
shlb
inc
mov
sahf
test
mul
inc
push
or
movsl
daa
addl
loop
repnz
mov
mov
rcrb
imul
sbb
pop
aas
push
icebp
fstpl
fisubrl
dec
lret
add
push
mov
push
test
out
addl
jmp
sub
cltd
es
inc
xor
sbb
push
adc
pop
mov
cmp
in
cmp
pop
ja
adc
mov
inc
rorl
push
push
mov
inc
mov
push
mov
pop
push
mov
adc
add
iret
or
pop
rcl
test
jns
cld
testl
sub
lcall
sbb
fstpt
gs
sbb
mov
ds
or
cmpsl
andl
or
lds
enter
or
in
xchg
push
mov
arpl
jl
dec
jp
imul
inc
mov
in
mov
nop
sbb
fld
jnp
jne
leave
es
push
repz
sbb
add
mov
fists
adc
out
cwtl
inc
out
and
iret
lret
pop
ret
push
sub
cmp
clc
out
add
dec
adc
pop
imul
mov
int
sbb
add
cltd
ret
das
cmp
dec
jo
jb
lahf
add
mov
or
xchg
into
cltd
lods
xor
in
std
inc
pushf
jg
xlat
int
mov
icebp
lahf
sbb
sub
adc
leave
fsubl
in
xchg
pusha
inc
scas
dec
inc
xor
fistpll
movsl
stos
jge
mov
lahf
or
sbb
push
cli
sub
roll
in
inc
adc
lods
mov
cmp
xor
xorl
std
sub
iret
jge
clc
sbb
dec
add
jb
sub
jb
outsl
movsb
out
xchg
lds
jmp
pop
out
mov
insb
shlb
ret
xchg
lea
out
rorl
pop
loopne
out
jbe
aam
aam
mov
insl
add
gs
cmpsl
push
stos
or
fldt
popf
mov
je
inc
jo
jo
mov
pop
dec
rcrb
leave
scas
mov
jmp
shrl
rcrl
imul
or
xchg
pop
lds
idivb
fwait
in
fcoms
insl
lea
xchg
sub
pop
push
leave
add
insb
int
cmpsb
popf
push
test
mov
leave
sub
lods
into
mov
and
cltd
ret
cwtl
xor
cmp
mov
cltd
mov
and
sub
and
push
testl
sub
data16
xchg
mov
sahf
xor
lods
mov
ljmp
imull
sub
nop
pop
icebp
xchg
mov
rep
ljmp
sub
sbb
in
xchg
pop
bound
sti
jp
frstor
jge
out
pushf
fwait
aaa
and
mov
popf
dec
mov
push
jno
shl
out
jge
jg
inc
add
mov
fistpl
jae
mov
inc
rcll
pop
sub
lret
sahf
mov
push
jb
mov
pop
jmp
pop
mov
cmp
adc
arpl
jns
cld
and
mov
lret
sbb
std
js
mov
adc
push
notb
es
adc
xchg
inc
xor
cmp
aas
mov
jge
jmp
scas
mov
dec
cmp
mov
mov
adcl
cmp
imul
inc
gs
arpl
mov
mov
dec
dec
jne
pop
inc
data16
leave
mov
mov
icebp
ds
imul
lret
xchg
dec
mov
xchg
pop
push
filds
mov
cld
push
icebp
xor
mov
not
mov
in
adcb
cmp
mov
jns
in
sbb
mov
aam
fmuls
jge
xor
imul
in
pop
pusha
cmc
inc
lock
cltd
xchg
jb
pushf
fmulp
mov
xchg
stos
xchg
jg
loopne
fstpt
pop
sub
dec
dec
cmpsb
jle
shrb
lods
aam
jo
push
movsl
popl
and
lcall
pop
add
ja
push
mov
bound
cli
mov
cmp
xchg
in
lea
sbb
inc
loope
aad
in
fbld
mov
je
pop
mov
insb
sti
cmpsb
push
pop
dec
ret
lea
inc
movsl
adc
jbe
jne
hlt
lea
add
adc
aas
inc
or
fcmove
or
stc
adc
push
shl
scas
mov
insb
js
clc
or
notl
mov
fsubrs
imul
or
cs
sarb
cltd
or
enter
pop
xor
mov
mov
fstpl
pop
scas
and
push
xor
shlb
mov
int3
pop
loop
stc
stc
mov
xchg
push
pop
bound
subl
and
and
xor
sub
test
push
xchg
loop
sub
in
mov
pop
sti
dec
jge
lret
pop
fisubl
ret
jge
arpl
mov
fldenv
or
mov
aam
inc
clc
ret
out
add
bound
cmc
dec
mov
mov
aaa
dec
sub
cld
dec
fcompl
and
ret
cwtl
scas
pop
add
mov
mov
cmp
nop
sub
jne
pop
inc
pop
jp
mov
jle
sub
das
sub
sbb
call
and
cs
stos
bound
mov
mov
xchg
xchg
adc
leave
cmpsl
push
fdivrs
stos
xchg
test
sub
mov
cmc
adc
xlat
fldcw
clc
loop
jmp
jle
icebp
popf
addl
and
jp
mov
add
and
sbb
movsl
push
mov
mull
clc
fwait
dec
cmp
sub
lahf
adc
out
mov
and
rcll
mov
test
dec
jg
in
push
clc
popf
outsb
adc
cmp
mov
addr16
mov
mov
sub
push
rcrb
divps
mov
xchg
jnp
fnsave
dec
pop
nop
bound
lds
and
lods
cli
mov
jne
push
lock
test
sbb
sbb
lds
out
leave
dec
mov
out
dec
adc
jecxz
sub
sbbl
movsl
add
loopne
jae
mov
and
sub
dec
fimull
jb
int3
int3
xorl
lds
adc
jecxz
faddl
add
shl
stos
adc
aaa
fsubl
mov
or
ds
jp
outsl
insl
sarl
dec
mulb
clc
push
outsl
pushf
add
jecxz
pop
mov
inc
test
aas
pop
cltd
push
mov
cltd
push
jae
lods
les
mov
lret
or
cmp
ret
push
mov
cmpb
pop
pop
cmpsb
dec
mov
movsl
ljmp
jle
hlt
inc
ljmp
andb
mov
or
mov
cld
push
in
inc
dec
stos
les
leave
mov
jle
in
adc
push
lahf
sub
out
test
mov
test
adc
lret
adc
lret
vpsadbw
sub
or
lret
pop
nop
shlb
test
shrb
pop
call
push
jbe
mov
fstpt
int
jmp
into
insb
add
arpl
jbe
mov
cmp
fists
push
out
imul
xchg
ja
pop
scas
faddl
loopne
mov
imul
xchg
das
xor
xchg
add
cmp
mov
adc
in
dec
dec
fldl
sti
fadd
dec
and
push
fldt
adc
add
gs
loope
test
dec
and
mov
test
pop
jns
stos
jp
aad
loop
mov
lcall
loope
xchg
jp
outsl
sbb
mov
into
mov
daa
cmp
stos
and
jle
sub
enter
sti
mov
testl
add
lcall
das
mov
xor
or
xor
ja
xor
cmpsb
imul
adc
and
shlb
push
fadd
enter
mov
inc
ret
in
cmp
lock
mov
dec
test
jb
sbb
sahf
push
mov
pop
mov
pusha
test
sub
shrl
jg
push
bound
in
cmp
mov
mov
jns
sarl
ss
jb
lahf
cwtl
leave
into
clc
out
or
popa
pop
das
lock
aam
repz
lahf
dec
push
mov
mov
and
dec
push
xor
cmp
ljmp
inc
add
fimull
loopne
lods
int
mov
rolb
lods
jae
lock
xchg
xor
mov
pop
test
mov
pop
jns
or
add
push
cmp
test
ret
cmp
inc
mov
or
aaa
mov
lds
and
mov
test
cwtl
push
cmp
adc
lds
ss
inc
aas
sub
cld
push
hlt
cmpsl
lret
pop
movsl
cltd
jno
ret
faddl
xchg
add
inc
pop
xor
push
dec
addr16
enter
jo
call
loop
popf
cltd
stos
mov
cmp
lods
iret
jp
push
clc
lds
xchg
add
popf
adc
jb
cmp
push
xchg
push
adc
flds
rcrb
inc
mov
shr
movsb
stos
adc
mov
ja
in
nop
out
insb
xchg
mov
cmc
xor
sahf
lods
xor
nop
mov
cmp
jmp
inc
push
leave
insl
inc
mov
popa
lea
jp
mov
inc
lds
fsts
outsb
jns
ret
and
sti
cmpsb
into
adc
xchg
lods
mov
mov
arpl
push
scas
lods
or
lea
jl
scas
insl
xor
sbbl
jp
xor
lret
aaa
leave
rclb
loop
lods
sbb
lret
push
jae
dec
xchg
movsb
aad
mov
insb
fidivl
addr16
enter
or
pushf
pop
xor
into
test
pop
lock
pop
sbb
jae
mov
les
jne
pusha
sahf
lret
imull
fnstcw
les
test
pop
sub
mov
mov
push
lods
popf
ljmp
sbb
xchg
and
bound
imul
je
das
adc
mov
mov
jp
pop
push
movsb
jnp
inc
xchg
cmc
jmp
cmp
ret
mov
lahf
in
test
inc
jo
lock
jg
popf
icebp
cmpsl
iret
pop
popa
ds
xor
mov
aam
shlb
lds
test
sbb
pop
repz
sbb
push
push
test
lods
aas
mov
popa
mov
mov
shrb
inc
scas
mov
jns
xchg
xchg
push
es
add
pop
push
mov
cs
sbb
out
inc
jbe
dec
add
lock
pop
jmp
xchg
sbb
cmpsb
mov
aaa
pop
icebp
pusha
rorb
loop
xor
adc
push
fimuls
push
ja
lds
and
add
cmpsb
enter
mov
mov
pop
addr16
aaa
out
xlat
jl
into
adc
jmp
push
shlb
sbb
je
pop
jnp
dec
xchg
fistps
jge
or
jno
inc
fwait
adc
sbb
add
push
and
push
out
xchg
gs
ret
or
push
cli
xor
popa
inc
les
or
ret
sub
pop
mov
xchg
pop
daa
arpl
aaa
mov
adcb
into
cmpsl
popa
mov
push
clc
movsl
add
pop
pusha
cs
and
and
arpl
scas
pop
jns
fsubs
mov
push
int
aaa
fists
insb
repz
jecxz
int
int3
fwait
stos
mov
repnz
nop
xor
jge
sbb
dec
dec
std
sbb
push
adcl
xchg
pop
mov
mov
jmp
add
push
repnz
sbb
xchg
imul
jle
cmpb
cli
imul
fstpt
xchg
or
stos
push
xchg
sbb
aam
fs
pop
scas
xchg
jecxz
nop
in
dec
xor
add
xchg
mov
jle
jae
dec
mov
cli
jnp
call
ds
test
popa
mov
test
roll
insl
mov
pop
test
pop
arpl
or
dec
or
iret
inc
cltd
ja
jecxz
fwait
xchg
xchg
mov
sub
lret
dec
mov
loopne
int
aam
pop
fs
xchg
add
push
adc
mov
cmc
mov
adc
cld
rcrb
pusha
push
adc
adc
in
in
das
push
test
inc
mov
fwait
jo
leave
fwait
sar
xchg
sbb
jg
mov
shll
bound
xorb
jle
jo
es
test
push
mov
mov
ja
addb
fincstp
dec
dec
xchg
int
push
fldenv
jo
fisubl
jmp
xchg
pop
loopne
mov
mov
jns
pop
pop
adc
xor
and
test
sar
sbb
in
stc
push
arpl
rcll
jne
leave
and
dec
test
push
scas
sbb
out
fs
pusha
cmp
and
in
jo
jmp
xor
pop
pop
add
hlt
and
icebp
and
xchg
xor
push
adc
int
or
js
inc
adc
jg
scas
sub
add
call
sbb
insl
arpl
add
or
fidivs
adc
mov
hlt
push
mov
push
and
shr
dec
mov
push
pop
mov
inc
insl
sub
in
pop
orb
or
or
push
sbb
insb
rcrb
jge
test
shrl
push
test
and
es
xchg
mov
mov
xchg
jl
dec
rcrl
arpl
shll
test
jecxz
fs
shl
out
mov
fwait
sub
and
xchg
jns
test
and
cmp
xchg
and
jecxz
push
out
shrl
push
inc
fsts
rol
ss
imul
jb
jo
je
inc
sub
lods
sub
fsubs
enter
andb
sbb
idivl
subl
add
bound
and
sub
pop
cwtl
dec
gs
and
mov
jp
sbb
and
sbb
sbb
movsb
jle
mov
outsl
sbb
js
stos
xchg
mov
and
sub
in
pop
pop
pushf
cwtl
test
push
les
loop
gs
or
rclb
daa
fwait
or
inc
shl
lcall
mov
push
pop
push
aad
inc
insb
add
test
pop
jle
scas
jns
jnp
lcall
dec
lods
pop
mov
adc
inc
cwtl
loope
jae
nop
aas
jl
pop
sub
out
mov
dec
jno
call
xor
scas
sub
pop
pop
jge
notl
cmp
push
mov
or
stos
mov
sub
daa
lock
cltd
push
pop
xor
leave
sub
and
into
inc
jmp
ret
arpl
negl
gs
pop
sub
pop
jg
push
pop
loop
outsb
sbb
jmp
movsb
loop
sbb
hlt
divl
pop
mov
or
mov
push
imul
inc
insl
jecxz
mov
psllw
cmp
and
dec
inc
adc
or
push
popf
push
test
mov
xor
jno
ret
inc
mov
mov
ret
ffree
lahf
loop
test
xchg
lock
loopne
sub
fmull
repz
jle
popa
imul
pop
dec
popa
push
fst
faddl
dec
and
inc
mov
adc
pop
dec
mov
lods
push
fwait
adc
xchg
sbb
sub
mov
mov
inc
insb
xchg
xchg
mov
mov
inc
in
cmp
pop
cmp
pop
movsl
xchg
mov
sub
in
cmp
cmc
outsb
notl
outsb
das
or
outsl
xor
ljmp
loop
jne
lret
leave
jle
jecxz
testb
movsb
test
ljmp
sbb
pop
idivl
sbb
out
lret
shlb
xchg
ss
push
pop
inc
push
test
imul
fcmovnu
test
cmpsl
in
lret
cwtl
xor
jmp
inc
adc
dec
jg
mov
cmp
in
insl
sbb
inc
xor
mov
push
jecxz
and
nop
xchg
sub
pop
push
pop
xchg
fsubrs
xchg
rclb
pusha
add
aas
ficomps
aas
mov
aad
jecxz
adc
test
jge
dec
cli
cmp
or
pop
cmp
cmp
lret
test
pop
mov
mov
fisubrl
test
mov
dec
stos
push
fxch
xchg
dec
adc
imul
movsl
lods
je
ficompl
xchg
bound
lret
enter
push
mov
call
push
rclb
push
push
shrl
test
add
xchg
inc
jle
js
ret
mov
sahf
mov
repz
repz
outsl
add
jp
in
adc
inc
xchg
insb
xor
in
data16
jmp
daa
or
mov
adc
cmp
popf
jmp
sbb
mov
jge
cmpsl
sbb
jp
nop
aad
or
bound
cmp
xchg
test
and
and
jle
adc
add
in
jmp
fmull
dec
cmp
clc
inc
out
push
mov
add
cmp
mov
mov
mov
jmp
push
repnz
orb
xor
sbb
xchg
pop
jbe
sbb
fs
out
imul
mov
notb
adc
jb
xchg
ret
jmp
lret
loop
xchg
push
push
mov
mov
adc
cmp
fistps
lret
mov
and
xor
and
or
cltd
push
insl
and
mov
fadds
imul
lret
push
fwait
sub
iret
out
and
cmp
pop
jo
mov
push
movd
sbbb
jbe
mov
loopne
cs
mov
or
mov
xcrypt-cbc
cmpsl
adc
cltd
loope
cmp
mov
jle
pushf
mov
jno
je
dec
stos
ficoml
and
sti
clc
or
inc
arpl
lret
or
sti
mov
mov
stc
sbb
adc
addr16
dec
jnp
adc
jmp
add
xchg
mov
les
nop
xor
add
inc
xchg
int3
cmp
int3
jo
stos
mov
loop
inc
jne
add
fs
sbb
push
sahf
jbe
lahf
sbb
in
mov
xor
pop
lds
lahf
movb
adc
mov
cli
fsubp
cmc
shrl
sub
das
leave
inc
xchg
dec
mov
and
push
fld
ds
or
leave
xchg
jno
imul
sub
enter
or
inc
xchg
fwait
jns
pop
pop
jno
mov
mov
daa
xchg
mov
sti
mov
bound
adc
adc
or
ret
push
jmp
cmpl
int
mov
mov
xchg
imull
xor
inc
adc
add
pop
sbb
inc
mov
fs
pushf
pushf
and
ljmp
lea
movsl
lods
sub
std
or
popa
bound
lcall
shrl
cli
dec
shlb
cmp
push
lods
add
mov
jge
sbb
pop
sub
or
fidivrs
or
jg
pop
movsl
je
mov
mov
inc
cmpb
mov
xchg
pop
cmpsl
mov
in
mov
xor
xchg
and
mov
jle
lods
push
dec
sbb
adc
int3
inc
cmp
das
cmpsl
mov
daa
dec
jnp
mov
jecxz
xchg
lea
pop
aas
inc
xchg
inc
jns
xor
sbb
mov
jne
ss
cmp
or
jbe
sub
cltd
daa
lcall
xchg
aad
sub
test
dec
push
fcoml
outsl
push
lods
je
repz
push
sub
movsb
decl
cmc
je
mov
mov
scas
mov
mov
mov
pop
add
push
push
mov
jl
push
out
xor
jbe
movsb
jnp
loope
or
cmpsb
je
mov
xchg
and
test
jge
nop
and
fisubl
or
sti
shrl
mov
gs
mov
imul
sbb
je
xorb
mov
test
mov
push
jmp
jge
outsb
xor
insb
ds
ljmp
lcall
xchg
sub
push
mov
cs
and
pop
inc
popf
imul
out
dec
fnstsw
movsl
into
sub
lcall
jecxz
push
inc
gs
ret
or
test
cmp
jl
mov
mov
pop
lock
dec
push
idivl
inc
push
fninit
pop
xchg
sbb
test
bswap
icebp
movsb
imul
mov
or
imul
adc
and
repnz
xor
mov
incb
cld
jb
pop
into
cmp
mov
outsb
scas
sbb
out
ljmp
std
xor
lods
mov
pushf
inc
addr16
jle
cltd
test
mov
cmp
movsl
pop
sub
add
imul
cs
cmp
in
mov
test
cmp
mov
sbb
xor
iret
sbb
cmp
mov
inc
xchg
dec
fdiv
adc
mov
push
push
cmc
mov
cmp
inc
mov
and
lock
ss
test
iret
faddl
mov
and
ds
add
dec
mov
push
mov
aad
lods
or
aas
push
jnp
adc
ss
cs
stc
outsb
xchg
mov
fbld
imul
push
push
and
orb
lods
pop
hlt
iret
sub
les
dec
not
inc
adc
mov
dec
aaa
popf
ds
out
sub
push
bound
stc
push
lds
sbb
js
mov
push
xchg
xor
movsb
and
mov
lea
ja
out
repnz
add
pop
in
push
cmp
in
out
dec
int
cli
fs
adc
scas
sbb
jne
fwait
dec
shrl
dec
inc
sbbl
pop
cwtl
or
xchg
pop
inc
int
sub
movsb
adc
push
test
div
imul
and
cli
out
sub
xor
jmp
pop
sbb
lock
ljmp
inc
mov
or
movsb
aaa
ds
outsl
xlat
mov
repz
cmp
sbb
js
fldt
out
outsb
fistl
jnp
and
push
pop
icebp
mov
addr16
lock
std
enter
add
dec
jno
hlt
add
push
stos
dec
ljmp
cmp
test
lock
jle
ljmp
or
add
jp
mov
fdivrl
xchg
jae
int
jns
inc
loope
inc
cld
js
fildl
sub
shlb
push
mov
in
pop
call
push
pop
movsl
xchg
les
xlat
adc
inc
into
scas
movsb
ss
shl
mov
fisttpll
mov
rorl
jnp
xchg
out
lock
in
cmpsl
dec
sbb
mov
rcrl
mov
cmp
repnz
aam
sbb
fs
call
orl
pop
andb
pop
aad
xchg
nop
dec
lret
sbb
in
rcrl
jae
cmp
cmp
mov
sub
outsl
negb
adc
push
mov
arpl
adc
fcmovu
lret
cmp
inc
shr
outsl
pop
std
arpl
add
push
cli
pop
ret
iret
mov
daa
push
notb
or
mov
mov
adc
out
cltd
aam
loop
roll
inc
add
xchg
loope
add
jae
leave
rorb
je
jo
mov
pop
jl
adc
cmpsb
dec
loopne
mov
and
movsl
adc
xor
mov
or
adc
outsb
mov
ds
andb
out
imul
dec
or
jle
int
insb
jae
addl
fsubrs
mov
arpl
stc
pand
ffreep
dec
sub
and
sbb
in
mov
loop
rcrl
adc
stos
test
orl
jmp
and
enter
rcrb
sbb
jne
push
inc
adc
xchg
mov
or
mov
clc
imulb
xor
ret
jae
sbb
and
outsb
and
enter
fnsetpm(287
pop
idivb
or
testl
scas
out
mov
mov
xchg
popa
mov
mov
loope
lcall
pop
push
cld
xchg
jle
pop
iret
push
mov
mov
ss
jo
les
xchg
imul
inc
xor
push
jb
cwtl
push
mov
cmp
clc
popa
cmc
jbe
lret
icebp
mov
sbb
add
mov
mov
loop
cld
and
ja,pt
outsl
push
rcr
adc
test
fistpll
xor
arpl
xchg
or
pop
pop
fwait
xor
scas
cmp
clc
rorb
adc
sub
enter
dec
fistpl
and
xchg
in
arpl
rclb
mov
mov
pop
cld
stc
push
mov
scas
xchg
testl
iret
mov
mov
cmp
push
test
jmp
mov
insl
ss
xor
add
push
lea
sti
ljmp
pop
out
sub
int3
lcall
jne
jecxz
iret
adc
push
out
and
cltd
rcl
movsb
insl
cmpsl
push
jle
jmp
push
add
adc
mov
bound
fildll
mov
sbb
mov
xchg
push
ljmp
xchg
or
xchg
sub
aam
mov
aad
jmp
lds
lahf
rcr
popf
pop
pop
pop
or
pusha
cwtl
push
dec
out
incl
sub
or
xor
scas
hlt
mov
xchg
mov
pop
dec
xchg
push
xor
fcoml
out
imul
int
add
sub
mov
xchg
push
sub
pushf
repz
pusha
je
cwtl
inc
jno
imul
and
pop
mov
shr
lods
pop
add
dec
hlt
loope
scas
cmp
inc
or
aas
clc
popa
mov
xchg
xchg
testb
push
sub
xor
pop
nop
cmpsb
shrb
dec
repz
push
xchg
push
dec
jns
arpl
lock
or
andl
mov
jecxz
jns
jns
out
je
or
rcrl
pop
aaa
addr16
pop
dec
out
sub
das
popf
int3
test
sti
nop
pushf
rcl
test
aad
dec
lods
fwait
sub
js
cmpsl
ret
xchg
xor
sbb
das
xor
mov
mov
mov
in
movsl
out
into
cmp
inc
push
std
icebp
cmp
pop
mov
cmp
mov
rcr
inc
adc
xor
add
data16
adc
xchg
jmp
cmc
icebp
inc
hlt
inc
sbb
xor
out
cli
mov
int3
jg
or
xor
fidivs
push
cld
sub
dec
push
push
cs
bound
mov
rolb
lret
scas
mov
test
inc
jge
mov
mov
cmc
and
push
jbe
mov
xor
movsl
or
pop
in
hlt
cmp
es
mov
adc
addr16
insb
push
mov
cwtl
popa
mulb
mov
jae
jg
ss
jae
mov
lods
and
lods
or
add
xchg
dec
mov
sbb
gs
dec
pop
mov
into
pop
jg
jb
mov
sar
iret
scas
iret
cmp
mov
ffreep
popf
loop
mov
arpl
imul
shrb
xor
pop
outsl
pop
xor
adcl
mov
mov
mov
or
test
dec
inc
mov
dec
ss
ljmp
lret
ret
xor
iret
test
dec
fcmove
pop
cmpsb
repnz
inc
jno
pop
sbb
in
push
outsb
ret
lret
aad
stos
inc
lods
dec
aaa
push
xor
push
in
mov
test
add
push
mov
dec
pop
out
pop
jns
push
arpl
xor
addr16
push
push
adc
dec
ja
cld
shrb
pop
and
mov
nop
fistps
xlat
push
cmc
imul
nop
outsb
push
inc
movsb
push
aaa
inc
mov
xchg
nop
lods
into
push
jmp
movsl
inc
insl
adc
mov
in
arpl
icebp
repnz
xor
les
jg
in
and
or
call
je
jge
fidivrl
fidivrs
xor
test
xchg
punpckhbw
js
xchg
shlb
bound
aam
inc
cmpsb
cmp
imul
inc
jl
fnstcw
jbe
pop
jae
sbb
imul
dec
imul
xchg
xchg
fsubl
test
dec
repz
popa
mov
or
sub
divb
std
fadd
repz
add
dec
out
movsb
mov
cmpsl
xor
dec
leave
push
in
mov
sti
xchg
mov
dec
cli
xlat
xchg
sub
out
or
mov
or
testl
xor
mov
inc
xchg
adc
xchg
mov
testb
mov
mov
or
cli
mov
pop
sbb
int3
arpl
lcall
mov
mov
std
mov
test
popf
iret
or
int
rorb
xchg
icebp
fimull
pushf
call
pushf
dec
dec
push
jg
aad
incl
mov
inc
leave
int
stos
jg
pop
sahf
inc
mov
lret
stc
sub
mov
pop
add
sbb
pop
cli
add
in
xor
lret
fsts
xchg
roll
jg
fstpt
movsb
add
inc
in
popf
pushf
jg
mov
ss
jb
punpckhwd
pop
push
or
nop
cmpsl
out
cli
sub
std
xor
and
inc
sbb
mov
test
cmpsl
adc
ret
mov
pop
mov
xchg
adc
xor
pusha
xor
lock
insb
push
loopne
and
inc
cmpsb
adc
sbb
clc
sbb
sbb
cmp
and
mov
lret
enter
pop
sub
mov
push
cwtl
jbe
xchg
aad
rcrl
jnp
iret
into
fucom
or
jno
insb
inc
sub
inc
fstpt
or
out
fisubs
mov
leave
push
ja
xor
insb
push
sub
pop
pop
rol
inc
mov
in
add
shll
mov
cmp
dec
inc
jb
les
xor
imul
push
scas
cli
clc
test
xchg
lds
rcl
hlt
push
add
lahf
xor
das
and
lds
jle
mov
in
in
mov
sub
inc
lret
daa
test
xchg
ljmp
xchg
cmp
mov
test
enter
xor
mov
xor
dec
les
add
fsubs
and
cwtl
sbb
sub
or
out
icebp
jmp
adc
mov
jmp
mov
mov
xor
cmpsb
pop
push
popa
enter
lret
jp
or
push
jecxz
sbb
out
mov
cmpsl
adc
rcrl
enter
cld
mov
push
les
imul
or
insb
fisubs
jb
out
pop
dec
mov
cwtl
sub
cmp
jno
std
mov
clc
xchg
mov
and
cltd
mov
mov
sbb
dec
insb
dec
cmpsl
mov
pusha
mov
sbb
push
hlt
loope
test
pop
mov
pop
cs
repnz
pop
jnp
inc
xchg
pop
jge
ror
ss
outsb
scas
push
ret
imul
xchg
push
lret
arpl
xchg
pop
imul
arpl
cmp
fwait
xchg
mov
mov
daa
mov
pop
insl
popf
sbb
mov
loop
leave
mov
and
cmpsb
nop
or
rorl
xlat
shrb
inc
rep
icebp
call
pop
pop
cmpsl
sub
adc
loope
mov
push
inc
cld
shrb
and
enter
xchg
cmp
push
add
enter
out
mov
stc
sub
dec
int3
movsl
adc
out
pop
xchg
aad
cmp
sub
and
xchg
mov
jecxz
ficoml
mov
mov
test
test
rolb
xor
cmpsb
daa
test
sbb
std
sub
test
lcall
ret
sbb
pop
pop
in
loopne
mov
jge
movsl
sbb
cmp
cmc
hlt
push
add
popf
fmuls
add
inc
adc
mov
dec
test
fsub
inc
addr16
sarl
add
leave
pop
adc
jge
mov
cmpsl
sti
cld
or
dec
repz
jno
mov
jns
mov
inc
push
popf
cld
gs
and
stos
mov
mov
sbb
clc
lcall
call
mov
cwtl
into
fs
les
push
or
stos
shrl
mov
dec
xchg
mov
syscall
xchg
stos
jmp
dec
cmpl
sbb
dec
inc
lret
into
adc
in
out
mov
inc
adc
cmp
shlb
jnp
pop
sbb
fldenv
movsb
xchg
adc
js
sbb
shlb
sbb
fs
sti
cmp
jmp
shrl
inc
xchg
fucomp
dec
dec
jnp
jl
insb
fistpll
dec
shll
insb
ret
sub
in
orb
addr16
into
sbb
les
mov
push
movsl
pop
mov
or
pusha
ljmp
pushl
xchg
mov
cmpsb
fstpl
mov
mov
cmpsl
aas
adc
push
xor
insb
subl
push
ljmp
int
xor
pop
xchg
fwait
aaa
mov
lret
imul
dec
jge
xor
mov
xchg
out
sbb
jle
or
mov
sub
into
mov
fwait
jo
lods
or
add
lods
jg
jecxz
pop
out
icebp
rcrl
idivb
ja
sbb
mov
std
push
movsl
pop
jnp
mov
inc
mov
mov
jns
cli
jg
lahf
jp
mov
enterw
divb
test
sbb
fneni(8087
in
stos
rol
rcl
dec
push
inc
pop
aas
jae
rcrb
mov
cmpsb
bound
lock
cld
ds
pop
pop
and
pop
imul
xchg
sbb
lea
mov
fwait
push
or
cmp
dec
mov
mov
cmpsl
shlb
sub
xchg
xchg
std
pusha
fwait
lods
cmpsl
je
lahf
in
or
divl
cmp
cli
mov
daa
add
lods
jns
lret
in
lret
fs
sbb
xchg
or
mov
cld
pop
lods
aam
jo
pop
jl
add
adc
mov
cmp
sub
jge
test
js
int
cld
cmp
shlb
mov
sahf
mov
xchg
dec
lds
adc
pop
sarl
cmp
into
sbb
xchg
add
mov
lods
mov
fwait
outsb
das
aaa
ss
sub
aas
cmp
movups
shrb
lods
or
cmp
mov
filds
repz
pop
fs
sub
lock
xchg
scas
xor
mov
mov
cmc
ror
mov
movsl
jle
fstpt
cwtl
mov
pop
add
dec
hlt
mov
mov
subb
cli
out
pop
nop
push
or
hlt
and
mov
cmc
jecxz
lcall
shrl
mov
sub
xlat
dec
test
loop
xlat
popa
scas
dec
popa
shlb
and
jne
aam
xchg
gs
pop
mov
fs
or
aad
jp
add
nop
xchg
stos
mov
mov
xor
mov
aam
int3
psrld
xor
lods
int3
pop
inc
scas
push
jmp
and
lock
mov
and
mov
adc
jp
push
stos
loop
mov
cwtl
cmp
scas
pop
inc
dec
lds
das
aam
pop
push
hlt
rorl
xchg
fsubrl
jl
sbb
rcll
cmpsb
mov
cmp
imul
push
pop
cmp
jbe
inc
mov
les
fdivl
push
loope
mov
insb
push
adc
lock
daa
std
or
jae
dec
fmuls
xlat
lret
dec
push
scas
inc
int
cli
scas
mov
cld
sbb
dec
cli
xchg
sub
jge
inc
loop
mov
dec
fcompl
pop
jae
aas
std
or
loope
in
mov
adc
mov
cmp
in
cli
popf
xlat
iret
xor
add
mov
or
call
push
ret
fdivl
in
jp
mov
mov
call
pushf
repnz
loop
outsb
pop
xlat
cli
add
add
pop
pop
leave
add
hlt
ljmp
into
dec
adc
adc
dec
in
push
xlat
inc
mov
shl
sub
lcall
and
outsl
jns
jne
fwait
icebp
repnz
jo
es
pop
addl
lret
mov
pop
mov
fadd
daa
sub
stos
or
int
scas
jne
popa
and
mov
das
cmpb
lea
mov
cmc
add
sub
roll
in
repz
popf
xor
fidivs
pop
push
inc
jns
adc
bswap
jecxz
jae
pusha
out
cmp
adc
test
fadds
mov
pop
push
jge
mov
ss
inc
cmp
call
mov
das
sub
testb
icebp
fldln2
and
daa
cwtl
mov
adc
rorl
pop
movsl
aas
sbb
push
mov
mov
stos
daa
and
in
pop
pushf
sub
hlt
xchg
jbe
daa
dec
stos
and
cs
pushf
mov
ds
cmpsb
fcoml
aad
enter
cmpb
outsb
cwtl
popa
inc
adc
mov
test
xor
xchg
stc
dec
std
sub
aad
cmp
popf
sbb
stos
jno
in
outsl
pop
cmpsb
into
cmpsb
out
imul
jle
xchg
rcrb
dec
jg
xchg
mov
insl
stc
insl
jbe
jmp
dec
xor
lea
aad
lock
lods
call
dec
push
in
aam
outsb
ret
and
test
rorb
adc
cs
movsl
lods
dec
bound
into
push
stos
cmp
imul
and
inc
sti
mov
rcll
sub
jl
mov
out
in
data16
xchg
imul
adc
aas
daa
and
cli
push
loopne
push
sbb
fcmovu
aam
sti
fildll
jmp
into
or
mov
lods
jne
rcr
xchg
cmp
add
stos
sbb
sub
pop
fsubrp
mov
or
je
cli
mov
data16
pop
cmpsb
mov
push
add
or
cwtl
es
xchg
add
pop
jne
lahf
loope
nop
blcs
scas
and
push
daa
stos
push
fs
dec
mov
cli
xchg
mov
aam
cwtl
jne
sub
rep
sbb
sbb
repz
xchg
jmp
cmpl
dec
flds
call
aas
dec
mov
shlb
adc
xor
mov
out
sub
pop
fbld
xchg
mov
inc
jne
adc
xor
mov
test
dec
sub
leave
mov
xor
and
push
sahf
out
cld
insb
jno
mov
push
sub
push
cmpsl
mov
jae
imul
dec
adc
xchg
int3
xchg
arpl
and
mov
dec
sar
in
je
mov
and
out
test
adc
nop
inc
rcl
loop
sbbb
cwtl
js
out
mov
inc
jo
aam
xor
outsl
pop
pop
and
sub
add
bound
cmp
xor
push
sbb
jbe
add
ret
addr16
mov
and
addr16
lds
jo
pop
mov
mov
mov
jbe
sbb
fmul
mov
dec
sbb
mov
das
nop
xor
push
rorl
cmp
stos
mov
xor
das
inc
xchg
in
push
mov
or
mov
into
mov
daa
pop
sahf
lret
imul
sbb
mov
push
mov
imul
loop
sbb
xchg
or
mov
clc
stc
dec
inc
ja
inc
fistpl
mov
lods
sbb
dec
nop
xor
jmp
xor
repnz
fs
movsb
pop
xor
call
pop
les
das
insl
push
fisttps
pop
inc
testl
lods
jl
fsubrs
scas
xchg
cmp
push
mov
clc
gs
repnz
sub
into
lods
sub
inc
xchg
fs
add
cmp
dec
rcrl
ss
xor
cli
fildll
xor
lea
mov
jmp
dec
shrl
inc
pop
push
mov
cmc
mov
sbb
shlb
rorl
sub
ret
push
jo
xchg
or
mov
and
arpl
jecxz
std
cmp
mov
sub
mov
push
mov
xlat
icebp
imul
mov
push
mov
hlt
into
xor
subl
inc
rorb
in
int3
mov
jle
shr
dec
popf
std
negl
leave
pop
xchg
xchg
mov
insl
es
jnp
imul
and
mov
repnz
dec
insl
daa
dec
dec
xchg
scas
jmp
and
mov
mov
outsl
out
and
sbb
fs
nop
sub
popa
pop
outsb
add
cmc
test
mov
adc
xor
andl
pop
movb
aaa
ljmp
or
jge
push
cmpsl
dec
adc
out
inc
lods
push
mov
movsb
out
fsubrl
and
push
popf
jae
pushf
aad
adc
cmpsl
xchg
push
or
mov
xor
mov
fsubrs
mov
hlt
test
sbb
pop
popf
add
cmp
sub
cmc
scas
mov
outsl
nop
or
fnstenv
xchg
aad
insb
mov
test
sub
negb
aad
int
mov
adc
xor
cmc
xchg
cmp
outsb
mov
pop
jo
adc
adc
jb
aam
cmp
xor
out
push
xor
jl
push
xchg
call
fisubrl
push
repnz
insl
popf
push
mov
pop
mov
cld
sahf
mov
mov
stos
dec
adc
fistps
lock
aam
pusha
mov
shr
add
cmp
les
inc
pop
adc
pop
or
ja
and
pop
jns
into
into
sbb
das
mov
inc
hlt
hlt
js
lret
jle
sub
leave
clc
mov
dec
scas
push
dec
or
cld
sub
std
pushf
cs
daa
out
add
pop
mov
sbb
jecxz
adc
in
sbb
cmpsl
dec
dec
ret
loopne
mov
add
and
shlb
push
out
lea
bnd
inc
dec
jnp
int3
ffree
push
lock
sbb
sub
inc
xchg
inc
mov
inc
push
std
xor
sbbl
enter
mov
lods
push
fdivrs
sub
aam
jb
adc
imul
cmp
mov
push
rorb
nop
bsf
cmp
stos
shrl
mov
loope
push
int3
push
lcall
inc
add
xor
nop
sbb
mov
cmp
aam
dec
out
cmp
push
xchg
hlt
popa
inc
testb
cmp
dec
jge
add
iret
int3
inc
cmpsb
add
sub
mov
in
divb
mov
or
pop
xchg
aam
inc
mov
sub
or
adc
xor
add
add
mov
mov
jbe
subb
xchg
push
cmp
xor
xor
cmp
mov
fucomi
mov
push
mov
lahf
test
out
loope
pusha
sub
cwtl
cmpsb
es
hlt
divl
fs
jae
lret
int3
out
xchg
int
ret
insb
xor
lret
adc
cmp
jnp
lcall
mov
test
test
pop
lds
imul
call
inc
pusha
ret
mov
ds
mov
jns
jecxz
movsl
rorl
lds
movsb
aam
imul
ret
bound
inc
js
ss
jle
pop
hlt
mov
arpl
into
and
sbb
xchg
ret
cwtl
inc
dec
mov
movsl
xchg
xchg
add
xor
in
lds
mov
js
repz
adc
setb
mov
dec
add
cli
xchg
inc
mov
stc
xchg
dec
lods
push
les
mov
inc
lret
push
inc
outsl
pop
and
std
mov
adc
stos
sub
out
pop
pop
aam
or
sbb
jnp
jbe
add
xchg
es
aaa
push
sbb
jno
icebp
cli
cmp
pop
sub
mov
inc
inc
mov
and
rcrl
lahf
sbb
insl
iret
loop
jbe
push
and
add
loopne
xor
pushf
push
test
jp
sbb
push
in
add
hlt
inc
shl
lcall
jnp
xchg
and
jo
adc
pop
sub
in
sub
inc
ficoms
push
or
mov
push
out
mov
enter
add
das
aam
xor
iret
dec
inc
mov
popa
or
push
pusha
lods
and
inc
stos
and
xchg
sub
lret
pop
or
push
pop
hlt
mov
hlt
cmp
sti
push
mov
jp
pop
lret
dec
mov
cwtl
adc
pop
test
push
push
add
push
cmp
enter
or
and
cmp
cwtl
jmp
fxch
xor
and
pandn
outsb
enter
push
popa
ljmp
xor
pop
dec
xor
jno
ret
adc
in
insb
outsl
js
sbb
jg
dec
push
dec
dec
mov
icebp
sahf
jne
jge
push
sahf
sbb
out
stc
add
inc
dec
inc
xchg
and
inc
jl
pop
leave
xchg
cmpsb
nop
sub
stos
inc
insl
jge
mov
mov
test
jmp
notb
popa
or
cmp
sbb
das
or
sarb
pop
dec
fdiv
and
dec
mov
insb
lcall
jnp
mov
cmp
pop
dec
lea
lret
fsubl
clc
pop
mov
mov
leave
or
mov
dec
jns
pop
scas
data16
cld
inc
dec
adc
test
stos
inc
cwtl
pushf
xor
loopne
xchg
push
call
sbb
aaa
jecxz
popa
inc
hlt
arpl
jle
dec
enter
dec
mov
pop
mov
cmp
mov
or
cwtl
push
push
push
pop
js
mov
and
jo
mov
loope
cmp
cld
mov
repz
pop
sbb
les
cmp
mov
inc
lcall
adc
add
adc
xor
sbb
mov
xor
ss
in
fs
outsl
test
mov
push
test
imul
pop
mov
xor
cmp
icebp
xor
fprem1
rcrl
icebp
call
scas
stos
inc
fdivrp
popa
or
faddl
and
xchg
hlt
add
cmp
arpl
sub
std
jmp
jbe
mov
adc
cmp
sbb
stc
xor
imul
sbb
sbb
out
aam
sbb
int
dec
pusha
jae
cltd
in
sub
cmp
arpl
int
inc
shll
pop
arpl
mov
pushf
lcall
mov
jmp
icebp
dec
xlat
jge
adc
push
mov
int
adc
adc
adc
daa
xchg
jg
xor
rorb
ds
pop
aam
lods
into
loopne
les
in
mov
fistps
int
xor
pop
dec
arpl
loop
mov
sub
xchg
xchg
enter
sub
pop
sbb
xchg
je
fisubs
arpl
sub
pop
pop
icebp
mov
das
mov
cwtl
out
addb
xchg
test
pop
jg
mov
loop
xchg
fs
sahf
std
icebp
mov
in
dec
movsl
add
cmp
xor
jns
inc
mov
sbb
inc
jne
add
in
mov
xchg
mov
mov
xchg
and
cmp
xchg
inc
add
je
std
in
pushf
push
pop
lods
inc
and
dec
in
push
hlt
test
outsl
push
and
push
out
stc
and
in
fsubs
cmp
sbb
push
inc
or
xor
adc
les
mov
lods
scas
jmp
test
dec
rcr
inc
sbb
push
mov
rclb
inc
sarb
inc
push
mov
mov
xor
jmp
dec
ret
ljmp
in
in
pop
and
jnp
mov
mov
das
lods
or
cld
mov
dec
outsb
lret
xorl
jmp
pop
out
mov
pusha
add
sbb
std
lds
jb
xor
gs
ret
test
dec
sbb
bound
out
std
dec
fsubl
sbb
or
xor
jb
roll
add
mov
aam
add
cmc
add
lahf
scas
cmp
adc
lock
loop
dec
mov
pop
or
loope
cmp
aam
pop
and
out
dec
hlt
cmpsl
shll
das
lcall
out
inc
push
rcrb
mov
dec
ja
inc
mov
pop
inc
mov
andl
sbb
pop
adc
push
ds
push
movsl
sahf
mov
sahf
call
test
mov
loopne
or
jp
dec
int
pop
sub
aad
andb
push
pop
or
gs
faddl
aas
daa
jns
inc
xchg
test
sub
jg
repnz
loop
lret
add
icebp
add
pop
bound
fidivrl
sarl
xchg
and
xchg
dec
pop
ret
js
add
stos
popl
shll
pop
shl
mov
jne
mov
gs
adc
leave
lods
push
cmpsb
or
mov
je
and
cli
adc
test
pop
shlb
push
pop
jno
sbb
and
push
je
mov
loope
sbb
xor
dec
divl
jno
dec
repnz
adc
fstps
subl
fcoml
and
sub
xor
or
sub
jl
xchg
or
jno
in
add
or
mov
adc
inc
cmp
dec
addr16
scas
push
inc
xchg
arpl
push
aaa
cmp
loope
cmc
pop
stc
add
mov
jnp
nop
cli
ror
ret
mov
lds
in
sbb
lock
sbb
pop
mov
push
xchg
adcb
jecxz
das
addb
in
push
ss
hlt
outsl
loopne
mov
mov
sahf
xchg
cmp
xchg
lock
pop
pop
ret
jp
push
inc
and
xchg
jae
lahf
mov
arpl
push
movsl
sbb
das
inc
imul
sbb
cmc
jmp
xchg
xchg
ja
repnz
inc
or
iret
push
movsl
mov
add
aad
xor
mov
arpl
test
testb
fnstcw
add
mov
add
lret
cmpb
fwait
and
mov
loope
aaa
dec
daa
mov
adc
fwait
addb
mov
dec
in
ss
push
push
pop
inc
mov
dec
cmp
shrl
or
mov
mov
push
inc
das
shll
inc
jo
or
stos
test
cs
imul
popf
mov
cmp
int3
push
testl
rcrl
lahf
mulb
sbb
jmp
sub
insw
pop
pushf
fsubl
sti
lret
incl
mov
and
adc
adc
and
bound
xor
and
mov
or
xchg
xchg
ret
dec
push
iret
and
xor
push
sbb
mov
push
mov
and
add
pop
cltd
cmpsb
aam
mov
lea
add
or
int3
icebp
cmp
sub
adc
fs
xchg
loope
lods
mov
mov
ds
lea
enter
rcl
addb
or
mov
mov
jp
rolb
ss
mov
aas
js
nop
push
sub
pop
or
aam
mov
xchg
ret
popf
jns
push
jnp
pop
jge
inc
lahf
popa
mov
inc
lods
icebp
outsl
sub
push
out
dec
loopne
and
inc
xchg
mov
orl
mov
pop
das
cwtl
mov
fsub
aad
mov
addr16
sbb
xchg
add
repz
or
xchg
mov
sub
scas
cltd
shrl
call
pop
push
int
sbb
fisttpll
fcom
mov
jae
sbb
mov
push
add
aas
fnstsw
pop
das
lods
cmp
xchg
cmp
cmp
mov
dec
xchg
iret
add
mov
das
mov
adc
cmp
adc
cmpsl
jns
dec
jp
push
inc
push
sub
lahf
adc
xchg
push
inc
aam
sti
adc
out
mov
js
push
data16
fcomi
repnz
jbe
sbb
adc
cmp
sbb
outsb
jne
fidivs
adc
and
repnz
int
adc
sahf
aam
xchg
mov
and
mov
shrb
adc
inc
scas
xor
in
push
sbb
mov
mov
movsb
mov
fwait
jnp
mov
test
fidivrs
and
xor
mov
les
adc
and
mov
test
jl
xchg
insl
xlat
insl
sub
outsl
mov
pop
adc
sub
enter
imul
loop
test
dec
inc
dec
adc
xlat
ds
xor
xchg
mov
stc
mov
imul
iret
lock
dec
pop
cmpsb
dec
call
jp
lahf
inc
outsl
test
and
mov
xlat
cmp
push
mov
or
sub
fsubrs
imul
in
sbb
pop
inc
inc
pusha
ds
shlb
pushf
mull
add
iret
xchg
adc
cmp
test
and
jmp
xchg
mov
popa
fiaddl
loopne
daa
xchg
add
das
push
sldt
push
rcrl
lahf
lock
fbstp
jge
aad
mov
fcoml
cld
stc
sti
sbb
pop
daa
xchg
jne
ds
leave
inc
dec
cmovs
iret
dec
add
pop
sbb
pop
ds
dec
aad
xor
mov
mov
pop
cmpsb
loopne
mov
decl
push
fistps
adc
call
sbb
sbb
mov
sub
fimull
outsb
mov
out
sub
movsb
push
or
mov
bound
inc
push
push
jge
bound
jecxz
call
sbb
and
mov
lahf
test
jecxz
movsb
sbb
popa
add
jp
movsl
sahf
push
imul
aaa
cmp
xchg
adc
and
test
push
add
fldt
jo
xlat
inc
ljmp
hlt
cmp
mov
mov
aaa
add
inc
sbb
out
ss
out
inc
ljmp
cld
insl
les
mov
sbb
sbbl
xchg
mov
popf
or
bnd
repnz
subl
insl
cmp
fwait
scas
adc
subl
repz
gs
lods
inc
sub
movsb
inc
ror
out
bt
imul
ds
adc
or
int
cmp
or
testl
push
mov
add
into
cmpsb
push
adc
xchg
adc
lods
dec
loope
cltd
or
imul
adc
jae
mov
jo
push
mov
sub
add
fsubs
xrelease
mov
jecxz
adc
cmp
dec
repz
imul
aaa
adc
test
xchg
es
call
call
andl
test
in
sbb
cld
pop
or
ss
or
fiaddl
and
and
sbb
lock
mov
scas
mov
into
jnp
xchg
jne
into
xchg
inc
cmp
inc
xchg
fs
sub
lret
push
sub
xchg
lods
cmpsb
movsl
xchg
jno
xor
push
inc
pop
push
push
sub
sub
in
mov
sahf
lret
dec
mov
call
pop
fsubrp
cld
sbb
sarb
fiadds
mov
jns
jbe
xchg
sub
nop
xchg
ljmp
dec
adc
mov
push
inc
int
sbb
sarl
mov
xchg
jb
and
sbb
push
scas
fxch
xor
aaa
mov
addl
les
inc
cmpb
loop
xor
loope
out
adc
mov
jle
xchg
mov
stc
push
xorb
xchg
out
bound
mov
push
sbb
xchg
out
push
icebp
inc
xor
lds
in
mov
cmp
and
out
das
sbb
or
ljmp
fcmovne
repnz
push
lahf
push
jmp
or
mov
fimull
dec
idivb
test
jle
xor
imul
lock
and
jmp
or
cltd
mov
jg
adc
xchg
cli
ds
xchg
xchg
sti
ljmp
sti
lret
jg
loopne
jo
in
movsb
cltd
xor
mov
stos
dec
loop
test
add
in
jo
ss
les
xchg
rep
sarl
test
sbb
sub
divl
out
ja
mov
cwtl
or
daa
or
mov
fucomp
xchg
sub
cmp
mov
jae
or
sahf
out
sbbb
xor
popa
js
cmp
ror
fiadds
xchg
dec
xor
jp
inc
lcall
xor
and
fisubl
push
mov
mov
xor
fisubs
and
das
loopne
dec
mov
push
leave
xchg
dec
jns
in
imul
popa
inc
iret
outsb
aaa
mov
fnstenv
es
std
xlat
ljmp
inc
push
jge
in
adc
out
ret
cmp
cmpb
mov
ljmp
sbb
sub
adc
cs
push
cmc
popf
xlat
cmp
jg
test
test
sahf
pop
adc
pop
arpl
adc
insl
jbe
push
pop
lds
lret
stos
sahf
lahf
mov
add
test
pop
cmpsl
sbb
mov
and
or
in
and
pop
sub
pop
mov
ret
rcrb
push
in
jg
ret
inc
or
add
or
xchg
inc
enter
and
hlt
mov
push
enter
or
inc
iret
adc
jo
pop
or
and
popf
xchg
push
lret
ret
add
mov
ds
mov
mov
mov
jb
jmp
fs
cmpsl
test
inc
mov
add
cld
pop
ss
jge
push
cmp
gs
xlat
fisubrs
aad
pushf
movsl
add
jb
mov
lods
loop
push
add
aam
sub
leave
movsb
adc
jb
aad
imul
sbb
xchg
push
inc
inc
insl
or
int
addr16
and
dec
aas
inc
xor
pop
jo
lds
mov
aaa
fwait
jno
int3
mov
cmp
xchg
mov
insl
lret
fbstp
dec
push
push
insb
and
es
in
lds
insl
into
mov
gs
cmp
xchg
ds
or
aaa
xchg
xchg
movsb
mov
sbb
and
sub
jmp
cltd
loope
mov
dec
cmp
inc
insl
mov
xor
inc
flds
les
dec
inc
add
xor
int3
movsb
jle
insl
jl
ja
lods
stos
stos
fcomp
or
mov
pop
ret
mov
int
aaa
mov
ret
inc
xor
dec
add
or
inc
mov
lock
dec
inc
jo
xchg
call
int
clc
test
mov
mov
aam
jle
lcall
lret
add
mov
ja
xchg
sub
enter
fisubl
mov
aas
or
loope
es
or
loop
in
imul
test
cli
scas
fdivr
fldt
fisubrl
out
dec
cmp
cmp
inc
ret
test
xchg
xor
sbb
lods
and
mov
xchg
rcrb
fs
and
mov
aam
mov
lret
pop
repz
dec
dec
mov
inc
cmpsb
cld
mov
xor
cmp
loopne
and
pop
push
jb
stc
sti
and
push
xchg
and
lds
shll
testb
or
jne
shrb
cwtl
movsb
add
int
mov
shr
push
dec
or
sahf
cmp
add
jle
in
scas
mov
popa
scas
add
sbb
cmpsl
mov
js
push
dec
add
mov
aam
jne
jb
mov
mov
xchg
xchg
fdiv
pusha
mov
sbb
stos
int3
shlb
add
cmp
push
push
pop
in
dec
roll
in
out
mov
outsb
test
rolb
mov
jge
push
xchg
cmp
sbb
jp
loopne
add
lock
mov
dec
sti
push
xchg
imul
mov
mov
inc
mov
mov
pop
and
inc
mov
push
jb
fdivrs
cmp
cmpl
mov
mov
mov
push
in
cmp
xor
scas
push
ja,pn
jb
sub
psubq
dec
fisttpl
cmc
js
mov
ds
xchg
sub
sub
imul
sar
je
jae
movsl
addl
lret
push
and
pushf
xor
pop
fcompl
jge
pop
pusha
lds
xchg
scas
in
stos
cli
cs
aad
lahf
adc
cltd
mov
adc
cmp
mov
mov
mov
jmp
vandps
repnz
xor
push
push
push
jae
mov
xor
mov
daa
pop
pop
mov
insl
mov
mov
nop
popa
icebp
out
fisubs
jbe
pop
out
mov
sub
cmc
inc
stos
lret
jl
adc
push
cmp
jmp
fmull
stos
jo
push
push
and
push
jo
cmp
mov
iret
mov
adc
mov
adc
out
mov
mov
les
jno
dec
out
imul
or
movsl
aas
repnz
mov
testb
mov
outsl
fildll
push
xchg
jl
inc
or
out
inc
dec
xor
cmc
addr16
ret
or
test
add
arpl
fadds
fwait
negl
rclb
xchg
gs
lods
nop
add
aas
loope
ss
icebp
jb
jmp
sahf
sub
pop
mov
inc
aas
sub
in
sub
mov
in
push
push
imull
adc
mov
adc
xchg
xchg
test
call
imul
imul
and
mov
or
pop
lret
xchg
cmp
mov
mov
hlt
mov
xlat
xor
xor
lcall
rclb
orb
popl
cld
movsb
js
cltd
stos
cmp
rorb
fcompl
daa
pop
and
and
mov
pop
fistl
movsb
push
sub
sarb
inc
insl
sti
and
push
mov
inc
repnz
mov
daa
push
inc
dec
in
stc
mov
or
sub
dec
sbb
rcrb
mov
lea
mov
cmpsl
cmp
xchg
adcl
lods
xchg
iret
out
shl
jb
and
mov
mov
sbb
push
or
mov
dec
cli
xor
mov
mov
sub
sbb
aas
inc
xchg
mov
je
sbb
xchg
pop
xchg
and
cmp
in
dec
lea
cld
lcall
je
jo
scas
sub
rorb
mov
lock
pop
imul
dec
push
cli
test
push
jb
push
inc
mov
xorb
dec
rorl
dec
fstpl
xchg
add
inc
addr16
out
out
mov
dec
xor
or
ljmp
clc
cmpsl
fsubrl
mov
testb
loop
push
pop
fcomps
push
mov
push
pop
cmpsb
xchg
mov
cmp
movsb
cmp
aaa
pop
mov
nop
jo
adc
pop
sbb
bound
sub
lahf
xor
dec
xchg
dec
lret
xchg
repz
cli
lea
mov
inc
push
je
cmp
dec
add
cld
mov
lcall
sbbb
icebp
push
and
ficompl
sub
jp
cmp
cs
loopne
jns
jno
pop
xor
sbb
jecxz
jae
insl
sub
out
sbb
push
push
in
push
dec
fstp
mov
xchg
mov
mov
xchg
cmc
fnstenv
xchg
repz
xor
xor
addb
popf
sbb
test
mov
pop
outsl
dec
lock
push
pop
sub
mov
cmp
popf
lock
mov
jo
stos
mov
cwtl
and
sbb
stc
or
lds
mov
adc
mov
sbb
rorl
sub
fimuls
daa
outsl
mov
imul
int
clc
cmc
push
stos
mov
mov
adcl
rclb
dec
bound
sub
dec
mov
loop
mov
jl
mov
stc
push
lcall
cltd
xchg
pop
mov
mov
adc
out
lretw
movsb
dec
push
rorl
arpl
test
outsb
icebp
jnp
push
shll
out
cmp
xchg
push
aam
sar
xchg
fisttps
xorb
cmpsb
out
fwait
push
lods
je
xchg
arpl
or
sbb
mov
test
push
loopne
or
bound
jecxz
xorl
sbb
movsl
or
jae
or
cmpsl
lea
mov
mov
aad
cltd
stc
call
jb
insb
movb
out
dec
rclb
in
ds
outsl
push
jo
mov
mov
sub
mov
lahf
fsts
mov
mov
rorl
mov
les
mov
popa
xchg
mov
lods
hlt
scas
sub
dec
dec
and
out
fstl
pop
and
lods
push
repz
mov
pop
sti
vmovq
in
jecxz
push
popf
pusha
out
int3
jbe
jnp
or
sub
push
mov
xchg
dec
add
aad
mov
and
ja
mov
pop
jecxz
and
out
sub
mov
arpl
jle
iret
and
in
add
inc
mov
lock
push
and
pop
scas
icebp
enter
je
rclb
je
test
adc
mov
sub
or
shrb
mov
cmp
xlat
xchg
mov
add
jmp
cmp
ja
xchg
testl
or
in
scas
notb
mov
fisttps
fimull
and
xchg
imul
xchg
stos
sub
stc
push
pop
es
mov
mov
sbb
sbb
inc
inc
mov
jle
lret
pop
mov
cli
inc
mov
pop
cmc
add
out
jg
mov
sub
and
gs
mov
pushf
adc
insl
or
mov
cmp
scas
lahf
adc
popf
test
aam
pop
call
imull
mov
cmpsb
mov
cs
sub
push
arpl
pop
pop
mov
xor
das
adc
push
enter
std
pusha
xor
jmp
jno
loopne
dec
ret
ljmp
sub
fmull
adc
fnsave
mov
xchg
cmpsl
pop
popa
sbb
loope
fcoms
mov
arpl
push
jnp
jns
out
and
leave
cmp
in
cld
xchg
in
pop
movsb
dec
sub
push
or
sbb
stc
xchg
nop
sub
dec
push
pop
sbb
jl
iret
gs
in
clc
inc
jmp
add
mov
dec
adc
push
imul
out
xchg
xchg
lods
insb
cltd
and
int
adc
xor
repnz
in
mov
scas
push
add
dec
inc
aaa
mov
jmp
rcr
mov
mov
insl
test
xchg
cmp
xchg
lds
ret
cmp
bound
pop
pop
leave
pusha
mov
insb
xchg
sub
mov
aam
mov
int
scas
pusha
xchg
push
or
insl
ja
xchg
shll
cmp
fs
mov
loope
adc
jbe
aam
movsb
ja
or
lods
lds
cmp
testb
lods
pop
mov
es
lea
sub
fwait
push
push
repz
xchg
mov
stos
mov
insl
pop
fwait
dec
loopne
loopne
les
jae
xor
jp
push
pop
andl
jae
lods
pop
sbb
push
das
out
jno
das
dec
or
push
mov
push
movsb
dec
mov
sbb
add
add
dec
mov
and
fdivs
jle
pop
pop
mov
inc
sbb
daa
jl
push
dec
enter
mov
dec
mov
xor
mov
jnp
aas
sub
mov
aas
imul
rorl
pusha
xor
add
mov
xchg
jge
or
fsubrp
outsb
pusha
sbb
fists
sbbb
inc
jge
sbb
lea
mov
fwait
decl
divl
icebp
xchg
xlat
xor
inc
mov
rclb
shrl
movsl
adc
movsb
inc
daa
lcall
popa
adc
mov
cmp
into
leave
mov
pusha
mov
mov
cmp
fs
out
imul
cmc
enter
out
xchg
arpl
sbb
adc
insl
jmp
xchg
pop
xchg
push
adc
sbb
and
test
adc
in
mov
lea
mov
leave
loopne
mov
ss
mov
dec
dec
pop
sub
jne
inc
pop
out
aas
es
add
xchg
imul
xchg
enter
lods
pop
movsb
jne
repz
cmp
inc
popa
aaa
xchg
sti
mov
into
imul
daa
and
fmull
gs
pop
fsubs
dec
mov
fs
push
sub
xor
int3
nop
popf
loope
jecxz
sub
jo
fdivrp
push
or
out
push
insb
bswap
xchg
ret
xchg
adcb
jbe
leave
and
movsb
movsl
rcll
rol
jnp
stos
and
push
rcll
xor
mov
fnstcw
mov
jge
leave
testl
iret
push
pop
ds
mov
pop
xchg
addr16
jnp
lds
in
jge
xor
lods
cld
in
add
stc
mov
push
add
lods
cltd
sbb
out
decb
fs
test
xor
lcall
lock
ljmp
add
pop
xor
in
loope
loope
mov
mov
fisttpl
cwtl
xlat
add
mov
repz
mov
push
mov
mov
dec
inc
push
push
insl
sbb
dec
pop
fs
mov
jno
push
and
imul
rcrl
adc
cmpsb
out
lods
jb
pop
jge
std
adc
ss
test
push
lcall
in
pop
pushf
pop
es
in
fwait
fwait
mov
add
gs
fdivrl
mov
in
rcl
sub
fnstsw
xchg
jbe
cmp
jnp
daa
pop
sub
mov
testl
andl
push
mov
xor
ja
rcl
or
int
or
insb
fsubr
shrb
int
in
push
xchg
push
popf
and
mov
mov
mov
inc
pop
or
mov
sub
pop
out
dec
mov
test
dec
dec
arpl
stos
jp
dec
in
aaa
dec
je
mov
jbe
lahf
out
movsb
rcrb
dec
add
sahf
adc
jae
imul
or
shlb
test
pop
inc
dec
cmpsl
jbe
cld
cwtl
xchg
push
cs
sub
cmp
repnz
aas
fbstp
movsb
lods
and
out
mov
push
and
push
pop
cmp
push
pop
aad
sub
pop
mov
jle
push
xchg
inc
ret
jl
loopne
or
jo
xchg
pop
in
jl
lds
push
xchg
cltd
imul
jp
lds
mov
xorl
jne
mov
mov
lcall
inc
dec
jecxz
push
fsts
mov
adc
xchg
nop
cmp
lds
outsb
ljmp
adc
cmp
lcall
aad
movsb
jg
and
cmp
mov
ljmp
jecxz
mov
mov
ret
pop
fisttps
outsb
ret
add
cli
aaa
insb
mov
in
bound
xlat
shll
mov
push
mov
imul
dec
icebp
dec
dec
fsubs
daa
rorb
jo
pop
shll
xor
pusha
push
xchg
fwait
sti
mov
popf
mov
sub
adc
add
xchg
fwait
icebp
add
aas
push
xchg
dec
mov
pop
loope
add
in
jle
mov
into
xchg
mov
fstpl
add
jge
inc
out
movsb
cmp
pushf
lret
pop
dec
xor
or
mov
dec
jl
jle
ds
push
xor
add
ret
out
adc
mov
test
int3
jmp
cmp
inc
mov
pusha
cmpsl
add
dec
inc
cmp
pop
pop
sub
fldl
int3
gs
sbb
std
decb
mov
ljmp
inc
mov
or
dec
imul
out
fildll
mov
cltd
dec
mov
sahf
xchg
fisttpll
mov
leave
sbb
loopne
mov
ds
push
mov
cld
pop
mov
daa
cmc
and
pusha
sti
inc
or
push
ss
adc
dec
scas
lods
or
jecxz
cmp
aas
mov
sbb
xor
repnz
icebp
mov
inc
subl
jae
sub
inc
pusha
lock
test
sbb
push
imul
mov
cwtl
fwait
or
scas
dec
repnz
mov
test
loopne
mov
popa
inc
mov
inc
mov
lcall
popa
add
imul
mov
push
sbb
xchg
sub
pop
sbb
push
test
bound
jnp
and
inc
xor
cltd
push
mov
xlat
mov
lods
imul
subl
daa
cld
imul
in
aad
das
lret
adc
sub
and
sub
xchg
ret
sar
push
cs
bound
mov
int
pop
pop
sahf
vandnps
sti
movsl
push
fiadds
inc
adc
inc
xchg
or
out
movsb
mov
sbb
data16
cmpsl
xchg
into
mov
jp
repz
sti
clc
insl
scas
jb
cmpsb
mov
sbb
push
negl
dec
dec
add
mov
xor
inc
sub
repnz
pop
dec
cli
ss
addr16
movsb
push
add
cwtl
xchg
mov
pop
fwait
inc
jnp
add
mov
movsb
mov
push
pushf
jle
in
into
jo
clc
cmpsl
mov
cli
lcall
inc
dec
outsl
xorps
lock
and
ret
in
xorl
mov
or
outsb
and
nop
dec
sub
sbb
fdiv
mov
cmp
inc
cli
xchg
xlat
out
int3
pop
les
mov
les
xlat
lahf
and
and
or
cmc
fprem
jne
fistps
fldenv
ret
mov
bnd
jecxz
lods
loop
scas
pop
fisubrs
xor
js
push
int
lock
mov
pop
jmp
mov
cmp
xlat
xchg
push
mov
ss
scas
mov
inc
fstpt
cmp
push
adc
test
xor
and
out
xchg
push
mov
mov
dec
in
push
fistpll
imul
loopne
shll
ja
test
cmp
mov
inc
test
in
enter
in
cmp
lods
mov
push
mov
push
jle
call
sbb
movsb
jp
in
mov
test
jle
dec
ja
insl
enter
sub
adc
stos
fstpl
cwtl
cmpsl
mov
mov
lret
shl
pop
loope
sbb
int3
out
jno
cltd
mov
xchg
stc
dec
dec
sbb
and
loopne
pop
mov
cwtl
repnz
aam
sbb
int3
stc
inc
mov
cli
cmpb
sbb
subb
inc
mov
mov
xor
nop
les
mov
sub
jb
push
shll
adc
pop
daa
fbld
imul
jo
insl
jmp
data16
fisubl
cmpsb
in
lret
inc
xor
outsb
andl
push
sbb
test
xor
push
adc
outsl
movsb
repnz
dec
std
xchg
sahf
mov
cltd
push
lods
mov
repnz
mov
add
mov
add
pusha
add
xlat
sbb
lcall
pop
icebp
dec
js
xlat
aam
push
add
xchg
inc
pop
and
stc
xor
mov
jmp
clc
push
mov
gs
ja
add
dec
test
adc
mov
cmp
scas
xor
lea
mov
and
sub
xchg
jo
mov
stos
mov
enter
loopne
sbb
jno
mov
cmp
bnd
jnp
fbstp
bswap
dec
sbb
das
ficomps
cmpl
dec
clc
xlat
call
scas
jp
mov
fcoms
cmp
outsb
xchg
aas
dec
mov
xor
jae
shlb
in
mov
push
xchg
cmp
xorl
imul
push
inc
and
adc
daa
sbb
fmulp
or
aam
jge
cmp
dec
cmp
mov
xchg
adc
add
shlb
jbe
pop
mov
jge
add
lods
repz
loope
dec
inc
sub
fwait
in
jle
sub
aaa
roll
cmp
jmp
add
adc
es
mov
adc
int
adc
mov
sub
imul
sbb
mov
and
adc
inc
and
xor
mov
add
jp
imul
adc
mov
dec
add
dec
insl
add
adc
inc
xor
imul
xor
sbb
mov
aas
mov
jg
adc
dec
push
fwait
jle
bound
loopne
and
cli
popa
imul
sbb
mov
push
out
ljmp
cmpsl
in
loopne
cmpsl
sub
ja
sbb
xor
xchg
dec
adc
dec
push
std
mov
mov
cmp
shlb
dec
scas
jecxz
and
adc
imul
and
aad
sti
dec
add
inc
jo
out
into
cmp
fmul
popa
and
dec
jmp
jne
pop
rcl
repz
in
ss
push
xchg
aam
sbb
jl
sti
push
stc
add
mov
loopne
aas
xchg
aaa
rorb
fldenv
sbb
push
mov
sbb
add
aas
sbb
sahf
push
and
jns
repnz
mov
andl
mov
and
out
iret
jl
push
stc
das
xchg
cmp
inc
popa
push
add
les
mov
stos
push
pop
into
and
mov
and
jecxz
addr16
jo
push
mov
pop
adc
mov
adcl
in
fisttpl
xor
data16
jl
jecxz
jnp
pop
sub
or
sub
xor
pushf
push
push
xor
outsb
gs
pop
cmp
pop
adc
pop
shll
ret
add
scas
pop
shrl
inc
sbb
mov
or
stc
sahf
dec
fldenv
fdivrl
mov
ret
insb
jb
and
imul
push
cmp
outsb
xchg
and
hlt
iret
mov
mov
das
adc
xchg
lods
pushf
inc
jns
jge
inc
ss
sahf
dec
cltd
arpl
repz
cmp
inc
mov
push
jl
nop
rcrb
xchg
xchg
repz
lock
daa
icebp
dec
neg
fldl
and
push
or
add
and
stos
inc
jmp
lods
mov
xor
push
stos
cmc
outsl
inc
mov
aaa
cmpsl
sbbb
les
jno
sub
enter
into
inc
sub
jmp
repz
cmp
push
mov
lods
fscale
fisubrl
in
mov
cmc
clc
push
lds
jl,pn
mov
or
pop
sub
aas
mov
dec
mov
inc
pop
faddl
add
es
or
pop
movsb
and
cmc
insl
sbbl
jns
jge
jnp
cmp
outsb
fstl
mov
inc
jns
andb
pop
jg
outsb
jae
jl
jns
in
push
inc
js
sub
and
bound
inc
movsl
ds
push
cld
pop
or
fdivs
outsb
push
sbb
mov
test
lock
in
mov
and
lret
adc
adc
push
out
lock
cmp
mov
add
addr16
cmp
adc
je
scas
mov
shl
xor
ret
in
popa
xor
adc
cmp
dec
add
sti
mov
fidivl
fwait
xchg
and
movq
test
adc
daa
insl
ret
cmp
test
in
xchg
cmp
sbb
add
mov
sub
loopne
outsl
xchg
test
dec
mov
insl
ja
arpl
inc
fnstsw
dec
addr16
pop
into
dec
xor
clc
push
push
test
movsl
into
mov
out
and
push
dec
jecxz
add
cmp
pushf
sbb
and
cmp
cli
cwtl
mov
and
xchg
inc
adc
enter
inc
push
enter
mov
cmp
pushf
inc
dec
adc
shll
mov
xchg
and
push
sub
mov
dec
cmp
pop
push
push
cmpsb
lods
in
aad
push
pop
scas
push
popl
popf
ret
xor
fnsave
push
push
sbb
push
mov
mov
imul
lea
jnp
into
xchg
nop
mov
push
adcl
arpl
stc
movsb
es
mov
sub
out
or
pusha
int3
sarl
or
rcll
xchg
rcrb
out
or
addb
cmp
scas
popa
cld
es
push
inc
mov
and
push
dec
cs
jnp
arpl
and
or
mov
or
out
out
adc
cwtl
push
and
enter
in
pop
stc
lea
movsl
push
sbb
jns
jbe
repz
sbb
ret
xchg
je
fnsave
adc
movl
xor
mov
xor
or
add
jecxz
cs
outsb
pop
jl
jno
std
std
out
ss
dec
push
inc
jnp
mov
sub
into
test
jg
and
inc
and
dec
jl
mov
insl
loop
out
add
push
sub
inc
mov
cli
adc
xchg
add
or
out
adc
xor
add
xchg
in
xchg
mov
or
push
loopne
dec
or
mov
dec
cmc
das
push
loope
add
dec
loope
sti
mov
lods
sbb
sbb
jg
out
fidivrs
pop
cmp
xor
sar
repz
dec
sahf
inc
push
cli
pop
in
insl
adc
and
cld
iret
das
aad
scas
movsb
xor
repz
int3
push
dec
and
outsl
mov
push
mov
mov
xor
pusha
add
loopne
jge
mov
and
imul
testl
popa
test
pushf
test
xor
dec
std
stc
mov
lcall
push
mov
or
cmp
ljmp
aam
imul
lret
insb
repz
push
aam
adc
out
lahf
add
into
mov
int3
and
jno
mov
jmp
add
out
adc
xchg
out
sarl
lret
or
outsl
pop
and
js
xchg
adc
movsb
mov
sbbl
cmp
test
sbb
jns
fisttps
sub
sbb
rorb
outsl
add
mov
out
cmp
shl
movsl
lahf
push
insl
inc
jmp
out
test
mov
adc
cmp
xchg
lds
mov
lock
lods
fwait
mov
sar
pop
adc
sub
andl
mov
dec
pop
scas
cmp
pusha
push
fdivrs
jge
jbe
testl
xlat
loope
push
negl
xor
cmp
inc
mov
sbb
inc
outsb
lahf
cld
add
imul
pop
inc
push
stos
lds
adc
mov
aam
pop
in
cmpsb
xchg
push
iret
jb
pop
mov
les
push
mov
push
je
inc
adc
adc
add
sub
int
jmp
cli
sbbb
in
test
in
insb
call
addr16
jno
dec
xchg
push
movsb
cmp
or
add
pop
ja
addr16
movl
dec
enter
xor
cs
in
mov
pause
inc
jecxz
sbbb
dec
xor
pushf
push
xchg
sub
sbb
fistpll
adcl
xchg
add
pop
add
out
push
mov
xchg
add
hlt
int
dec
fwait
pop
inc
std
jne
hlt
add
js
and
dec
sti
sub
daa
sub
push
mov
pop
mov
daa
lea
div
jno
mov
arpl
inc
dec
shlb
push
pop
and
inc
fwait
dec
rorb
rolb
scas
and
cltd
jl
daa
movsb
xchg
or
sti
jecxz
pop
jb
loope
loopne
xchg
push
add
sti
pop
xchg
and
je
cld
cmp
ret
cmp
push
sbb
push
ret
in
fcmovnb
xchg
xchg
sbb
pop
lcall
pop
int3
call
pop
adc
insb
loope
orb
in
sbb
adc
push
rclb
shr
ret
pop
xchg
loop
add
insb
imul
mov
mov
ja
aad
orl
push
std
and
shrd
adc
pop
gs
sbb
sub
mov
shrl
fnsave
push
push
xlat
jno
in
test
xor
fadds
push
mov
push
mov
mov
sub
jp
int
ljmp
dec
enter
xor
jl
out
and
imul
outsb
int3
scas
inc
shrb
inc
orl
ljmp
inc
out
adc
jbe
sbb
cmp
inc
push
push
mov
and
outsl
add
inc
dec
or
lods
sbb
dec
pop
and
sbb
cld
cmpsb
jae
dec
into
iret
mov
pusha
daa
fstl
cmpsl
scas
cmc
xor
addl
xor
mov
insb
movsb
mov
faddl
pop
decb
xor
adc
cmc
pop
mov
mov
mov
jp
mov
xchg
mov
loopne
in
pusha
test
lods
inc
repz
mov
jne
jb
mov
mov
dec
dec
aas
push
ror
dec
cmp
pop
in
pop
inc
shll
rorl
jp
adc
jp
andb
xor
bound
es
xchg
bound
push
enter
push
stc
ret
jle
out
add
jbe
add
outsl
and
and
out
nop
xor
stc
jle
sbbb
addr16
mov
jae
jb
lcall
and
jo
or
cmp
cmc
cmp
popa
test
xor
cmpsl
popf
je
adcb
jb
pop
cmc
divl
mov
lods
add
mov
xchg
sahf
pusha
adc
pop
cmpsl
std
mov
jmp
pop
call
dec
xchg
jne
and
aam
call
cmpsl
fistpll
call
push
std
pop
mov
lret
and
mov
lock
mov
mov
xchg
and
mov
mov
add
pop
push
rcll
xor
push
push
movsl
lock
mov
cmp
xchg
push
ficoms
xchg
int3
mov
testb
push
push
xor
push
rcll
jp
sbb
into
push
dec
sub
in
xchg
xor
push
sarb
popf
test
jle
jge
mov
lods
insb
push
incl
daa
in
inc
dec
or
test
out
idivb
cmpsl
stos
imul
jp
adc
daa
add
cmc
out
sbb
xchg
adc
xorb
loopne
or
xchg
adc
mov
inc
and
xchg
push
ljmp
outsl
push
mov
sub
mov
outsb
mov
lahf
les
and
inc
jo
repnz
orb
sub
daa
cmp
insb
cwtl
cmpsb
push
sbb
push
andb
and
lret
into
mov
push
sbb
jne
push
adc
cmpsl
pop
movsb
and
repz
scas
add
lods
push
adc
and
stos
adc
dec
or
adc
push
mov
pop
and
jecxz
into
stos
mov
dec
call
in
shll
shlb
adc
pop
xchg
sar
inc
icebp
mov
sub
cmc
faddl
xchg
adc
jecxz
test
mov
mov
andb
push
sub
fiadds
pop
push
cs
sahf
in
pop
dec
inc
adc
das
fisttpl
and
inc
fildll
add
dec
jg
rolb
mov
sahf
leave
dec
pop
jl
sbb
imul
xorb
sbb
call
jp
jno
shll
das
stc
mov
lcall
lcall
and
pop
cmpsl
dec
nop
test
imul
in
sub
arpl
xor
push
aam
cli
jecxz
mov
lret
mov
sbbl
inc
fisttps
dec
jmp
jge
mov
pop
insb
sbb
sub
dec
lods
jg
pop
into
adc
popf
cmp
mov
mov
clc
mov
jl
std
je
jo
jne
aad
das
jo
jge
xchg
xchg
push
mov
jns
rorb
movl
cmp
out
lcall
nop
mov
sub
fists
mov
add
push
push
mov
sub
into
jno
or
xor
shlb
cli
in
stos
icebp
imul
jo
stc
push
push
sbb
pop
in
add
dec
cld
bound
cmpsb
adc
das
cmpsb
mov
push
lods
xor
iret
jno
inc
or
data16
mov
int
sbb
jae
sub
pop
sbb
push
subl
and
add
or
in
test
int3
dec
div
jg
jno
inc
pop
pop
inc
mov
mov
adc
mov
int3
shlb
jno
out
pop
mov
add
sub
lahf
fwait
jmp
mov
iret
push
xor
fdivs
adc
cmp
sbb
jl
in
clc
push
jge
addr16
clc
gs
adc
jne
adcl
outsb
dec
jno
aaa
movsb
xchg
mov
mov
aam
ficomps
xchg
push
pop
jnp
push
cmp
or
add
call
out
pushf
mov
push
not
pop
repz
dec
cmp
mov
mov
add
orl
insl
dec
mov
xor
daa
mov
mov
pop
fmull
cmp
imul
std
mov
adc
andl
imul
test
scas
mov
push
insb
ret
aad
jl
fwait
ret
mov
and
iret
adc
in
xchg
xlat
dec
ss
sub
mov
lcall
fdivrl
adc
pusha
iret
repz
dec
cmp
pop
pop
push
or
push
aaa
testl
fbstp
adcl
popf
int3
sub
idivb
subb
aaa
in
sub
mov
push
and
scas
push
or
leave
mov
jae
aad
repnz
je
inc
jle
movsb
lcall
dec
xchg
push
jle
enter
ds
inc
icebp
adc
fadd
int3
inc
cmpsl
int
cs
icebp
xchg
jb
mov
pop
adc
into
scas
sub
scas
arpl
jns
jnp
stc
dec
jb
sti
test
mov
fnsave
pop
repz
mov
cs
pop
nop
lcall
xor
cwtl
fscale
sbb
pop
push
repnz
add
push
insb
cwtl
out
test
out
insb
popf
mov
sbb
push
mov
dec
vmwrite
jae
dec
mov
inc
xchg
shrb
mov
cld
mov
push
fidivs
loopne
stos
mov
test
xchg
mov
pushf
sbb
pop
jo
mov
jbe
test
bound
lret
lds
mov
into
sub
outsb
jge
sub
jp
sbb
cwtl
es
hlt
insb
mov
addr16
aas
jle
daa
pop
fwait
sub
dec
fimull
pop
add
and
jns
ss
mov
call
mov
in
shl
das
mov
fstpt
sarb
lock
cmpsl
mov
pop
xchg
jle
ret
idivb
mov
mov
and
mov
lahf
icebp
loopne
xor
cmp
mov
jbe
cmc
mov
pop
adc
aas
ret
insb
call
push
movsb
add
sbb
cmp
ja
aaa
adc
lahf
ret
fimull
jp
mov
cmp
adc
movsl
pop
mov
pop
xor
insb
lahf
sti
arpl
loop
cmp
lret
jne
insl
dec
mov
dec
mov
rep
in
fimuls
mov
pushf
or
fistpl
adc
jp
dec
out
mov
push
and
int
xchg
xlat
or
sub
dec
ret
arpl
iret
stos
les
jno
mov
or
jb
cld
cmp
xor
movsl
dec
cmp
or
aaa
scas
incb
insb
or
or
es
pop
push
jae
fcmovbe
dec
and
inc
clc
shll
mov
xor
jne
jae
fucomp
aam
cmpsb
outsb
and
sbb
popf
add
dec
adcb
inc
mov
or
aam
inc
jno
fbstp
mov
leave
jnp
in
lea
inc
insl
gs
test
je
es
stos
jmp
sbb
lods
leave
push
xchg
es
ret
jne
daa
mov
mov
xchg
or
jmp
aad
or
out
sbb
xor
arpl
push
sti
addr16
lret
and
cli
js
push
cmc
lea
std
fisttps
or
aaa
jecxz
cmp
icebp
jle
or
fdivrs
pop
nop
scas
imul
mov
ret
lret
cltd
jo
mov
adc
shrb
xchg
sbb
imul
ficomps
pop
pop
in
cmpsb
sub
jb
js
in
outsl
rorl
xchg
inc
loop
push
inc
pop
bound
out
sub
mov
mov
in
je
push
lret
push
enter
mov
in
push
cld
jmp
pop
sub
inc
sbb
out
sbb
enter
xchg
or
sub
mov
in
jmp
push
mov
test
les
arpl
repnz
push
dec
pushf
mov
fdiv
push
movsl
rcll
xchg
push
or
xor
lods
fimuls
fnstenv
jp
test
pop
maxps
sub
repnz
loop
add
jl
pop
pop
inc
rorl
pop
fldenv
xchg
push
dec
test
int
add
je
decb
fcmovbe
or
rcrl
pushf
xor
xor
dec
test
cld
mov
inc
jbe
jne
pop
lret
inc
outsl
push
mov
ss
ret
pop
pmuludq
cli
lret
sub
add
jb
inc
imul
lret
cmp
mov
cmp
in
and
bound
push
stos
movsl
hlt
mov
icebp
and
cmp
outsl
push
add
mov
out
test
push
lock
popf
aad
stos
or
es
mov
icebp
push
sbb
popf
icebp
jl
push
lock
xchg
stos
sub
dec
dec
mov
xchg
sti
push
push
cmovne
jp
out
jg
orl
insl
inc
jp
jne
hlt
in
mov
push
adc
imulb
sbb
pop
mov
mov
and
push
mov
loop
fcomps
dec
mov
cmc
repnz
push
inc
jecxz
out
adc
sahf
fimull
xor
nop
les
inc
adc
rorb
and
fistpl
sub
push
push
cmp
fstpt
cmp
add
je
stos
data16
sbb
popf
sbb
add
xchg
outsb
and
dec
pop
shlb
mov
and
jle
sbb
push
xchg
dec
push
pop
repnz
cmp
das
icebp
xchg
push
test
pop
push
es
out
mov
xchg
xor
xor
adc
mov
jp
jno
sti
addr16
mov
aas
gs
jl
cltd
lcall
movb
into
xor
add
pop
repz
stc
inc
mov
rcrl
dec
and
ljmp
or
jmp
lods
fwait
in
imul
cmpsl
inc
cmp
fidivs
xor
push
inc
lcall
fs
test
push
adc
sarb
xchg
cmp
sbb
pop
insb
mov
mov
xchg
mov
imul
add
test
cmc
or
and
or
cmpsb
pop
movsb
mov
js
fwait
and
add
lds
dec
sbb
pop
dec
sub
xchg
sbb
rcrb
repnz
lret
lea
movsl
loopne
lret
jp
or
xchg
add
enter
dec
jmp
into
bound
notb
pop
test
int
lods
adc
jle
xor
mov
sbb
in
pusha
je
insl
inc
jnp
dec
cli
sub
fcoms
leave
aaa
mov
and
jle
dec
xchg
insb
dec
in
hlt
or
int3
jp
leave
fidivrl
sti
test
push
xchg
scas
cld
inc
xor
xor
push
into
loopne
push
sub
push
pop
fisttpll
shll
mov
loope
rorb
loopne
lock
mov
pop
sahf
fstps
notb
inc
add
dec
push
jl
lock
mov
fists
and
push
stos
repz
jp
mov
int
mov
popf
pop
mov
mov
xor
mov
mov
cmc
andb
jl
dec
nop
nop
imul
sbb
aas
inc
pop
push
bound
push
pop
pop
dec
and
lea
aas
out
int3
inc
xchg
jne
pop
gs
pop
adc
insb
mov
push
int3
mov
xchg
jno
fiadds
xor
out
dec
xorl
jecxz
adc
loope
fdivs
cwtl
repnz
into
lahf
cmp
stos
ret
xchg
movsb
ds
fs
repz
sbb
pusha
dec
cmp
sub
jl
add
sbb
mov
jle
pop
insb
aam
sub
mov
dec
out
pop
mov
pop
or
cmp
pop
std
inc
fstpt
mov
adc
into
mov
sbb
mov
mov
jo
roll
outsl
push
sbb
pop
cmpsb
int3
pop
dec
mov
testl
test
loop
fistpl
sub
pop
fadd
mov
int
leave
xor
add
inc
adc
sub
loop
rcrb
cmpsl
testb
int
pop
adc
mov
jge
push
fadd
outsb
xor
adc
xchg
in
dec
mov
in
mov
outsb
aam
js
pop
je
mov
sbb
xchg
int3
and
repnz
xor
fmuls
fsubrp
loop
mov
cs
jmp
cmp
inc
push
popf
repz
xchg
cmp
call
repz
cmpsl
pusha
pop
out
xor
shrl
jg
mov
ror
and
mull
adc
inc
inc
push
out
cmp
out
fnstsw
jne
aaa
mov
addr16
dec
mov
push
xchg
inc
mov
leave
ljmp
inc
adc
mov
mov
nop
push
inc
dec
add
jl
adc
stos
mov
psubq
loope
jg
pop
outsl
shlb
aad
fs
push
xchg
pop
in
or
dec
push
rcrl
mov
or
pushl
mov
push
add
jne
mov
jbe
and
pop
or
dec
xchg
jmp
les
adc
push
xchg
pop
jae
pop
dec
or
out
cmp
ret
fwait
mov
or
test
pop
lret
jecxz
jbe,pt
fbstp
mov
pop
push
add
push
loope
xchg
lods
cmc
mov
cmp
in
push
scas
mov
call
xchg
jne
push
addr16
dec
xchg
jle
push
aas
int
mov
mov
scas
inc
sub
xchg
in
imul
fnsave
pop
push
aaa
sarl
push
sub
jg
out
int
insl
lret
lahf
rcl
mov
push
nop
pusha
js
ss
out
jno
lock
sub
and
or
imull
push
stc
js
in
jecxz
arpl
fucomp
sbb
mov
jle
push
dec
jg
sbb
mov
outsl
fisubl
or
addr16
imul
push
loopne
es
xchg
jne
sti
stos
mov
xchg
and
cmp
cli
adc
shrb
inc
sbb
cld
mov
leave
and
sbb
xor
pop
mov
xor
test
lods
or
test
jl
sub
pushf
mov
ret
xchg
enter
sti
jp
jns
push
sub
jecxz
inc
rcll
mov
mov
pop
fisubrs
push
mov
cltd
je
out
dec
jmp
test
mov
mov
dec
fs
dec
scas
repnz
and
js
aam
shr
hlt
loop
fsub
pop
rorl
mov
stos
ret
mov
sti
push
cmp
ret
jecxz
xchg
popa
sahf
pop
dec
or
sub
addr16
movsb
dec
ret
xchg
mov
dec
cmc
aam
int3
out
enter
and
jmp
xchg
adc
lods
xchg
call
scas
sub
in
in
cld
sub
dec
rorb
mov
inc
dec
adc
mov
inc
pop
cwtl
mov
daa
imul
mov
adc
mov
popa
sbb
insl
push
lret
out
pop
scas
or
divb
out
add
pop
xor
add
js
inc
loopne
or
sub
cli
lods
insl
cmp
push
cs
repz
pushf
xor
push
repnz
dec
cmp
inc
mov
ret
push
pop
jle
xchg
jne
sbbb
mov
lea
lock
cld
gs
cwtl
pop
adcl
inc
xchg
rcrb
mov
sbbb
out
push
hlt
push
lods
push
adc
clc
or
mov
pop
sub
les
sbb
sbb
nop
hlt
fildll
fwait
sbb
rcl
popf
inc
mov
and
cmpb
testb
into
cmc
dec
je
sbb
test
sbb
jge
xor
in
push
int
cmp
push
in
arpl
and
lea
push
adc
jmp
inc
or
push
mov
pop
dec
lret
mov
lods
adc
xchg
pop
xor
sbb
in
rcrb
outsl
out
dec
fimuls
ror
aam
clc
push
jne
cmpsb
subl
and
cli
lods
lcallw
mov
or
xchg
je
ret
sub
mov
cmpsb
arpl
sbb
or
fildll
iret
inc
pop
testb
jb
inc
daa
jo
and
push
movsb
insb
popl
dec
inc
inc
mov
and
jae
clc
mov
push
and
xchg
mov
shll
loop
mov
popf
mov
and
stc
testl
jge
inc
int
call
jno
jnp
outsl
jge
sbb
pop
jle
mov
daa
or
pop
bound
mov
inc
lea
cmp
lahf
mov
stos
cmpl
xchg
aam
lahf
xchg
push
mov
pop
insb
mov
int3
mov
and
iret
inc
and
ret
repnz
inc
jle
ret
icebp
leave
mov
iret
out
loope
inc
and
ret
jle
sub
add
dec
das
in
fwait
xor
ret
xor
addb
sbb
lods
movsl
xchg
test
inc
pop
call
xchg
enter
nop
or
push
mov
je
mov
adc
dec
sti
pop
pop
jne
xchg
int
rcl
add
mov
xor
imul
js
sbb
aaa
lods
add
fldcw
dec
ret
pop
lret
arpl
and
aas
push
ficoms
sahf
insb
adc
in
xlat
mov
fs
ret
rorb
dec
daa
or
mov
inc
mov
sbb
cmp
jns
sbb
lahf
mov
xor
jno
lret
outsb
orl
add
add
in
push
mov
or
inc
or
nop
movsl
inc
cmp
adc
inc
pop
lds
cmp
inc
lret
mov
testb
or
dec
mov
mov
push
jne
pop
push
dec
jmp
imul
dec
pushf
out
loopne
xor
jae
in
test
push
aas
jp
xchg
popf
das
movsb
sub
mov
and
lcall
imul
sub
scas
mov
lods
lahf
sub
pop
scas
les
or
inc
stos
das
cmp
cli
or
xor
lds
out
and
dec
jne
cmp
clc
leave
sub
xchg
fwait
mov
iret
and
pop
sub
sub
add
std
or
rol
stc
adc
inc
loope
orb
jle
jmp
fcoms
in
or
out
std
add
xchg
xchg
fbld
lret
jbe
push
xchg
cmpsb
mov
mov
sti
or
jno
cmc
js
add
stc
mov
sub
xlat
faddl
fisubl
xchg
imul
outsl
lods
hlt
getsec
ss
pop
mov
jmp
out
xchg
mov
push
push
xor
sub
dec
pop
lds
mov
adc
pop
and
and
xlat
adc
pop
jno
mov
cwtl
psraw
leave
cli
pushf
mov
push
jecxz
aaa
sbb
out
imul
call
sub
andl
sub
adc
xchg
pop
jno
cs
sub
jl
dec
mov
aad
dec
jg
or
dec
jne
mov
ret
add
decb
sbb
sbb
sbb
sbb
jo
xchg
shlb
sub
imul
lcall
test
fxch
out
sar
push
cli
outsl
leave
loopne
xlat
mov
or
mov
out
jle
jg
dec
roll
je
sbb
xchg
ss
fstl
xor
stc
push
and
loop
mov
mov
ljmp
push
mov
mov
xchg
jmp
push
icebp
mov
enter
mov
dec
pop
cmovnp
movsl
cmp
sub
cmp
test
js
xchg
into
aaa
cmp
jmp
pop
xchg
mov
dec
add
ror
inc
leave
mov
mov
prefetch
push
pushf
jno
adc
pop
subb
int
jnp
inc
dec
in
cmpsl
adc
xor
push
sub
insl
or
cmp
and
dec
dec
mov
mov
push
mov
inc
pop
ja
push
jns
inc
sub
xchg
mov
insb
push
jecxz
mov
fildl
imul
xlat
add
popf
roll
cmp
push
push
xchg
iret
pop
fcmovne
loop
inc
in
and
xchg
sub
mov
les
mov
pop
aam
bound
lret
xor
pxor
bound
xchg
pop
movb
out
pop
fldcw
lods
test
int
add
or
xchg
sub
icebp
jae
jnp
jg
mov
adc
adc
popw
or
xchg
cmpsl
adc
and
sahf
sub
fnstenv
sub
jae
int3
in
aam
ss
or
push
mov
bound
call
jb
popa
cmp
lock
ss
fs
loop
mov
fisubrs
mov
xor
mov
or
cmp
das
dec
sub
pop
mov
pop
xchg
jo
ja
mov
and
fmulp
mov
jo
xorb
ljmp
shl
pop
pop
push
pop
xchg
sbb
mov
in
pop
jl
jl
jno
das
into
dec
xchg
cmp
jo
fidivrl
pop
sbb
lods
dec
lods
cmp
scas
es
std
test
adc
adc
mov
imul
hlt
push
adc
int
sub
movsb
lds
mov
mov
imul
sub
lds
iret
shll
or
lahf
fcomip
out
mov
pop
lea
ds
sub
adc
jp
mov
inc
cmpsl
xor
outsb
hlt
jge
ret
sbb
mov
aas
das
pop
psadbw
scas
fcmovu
and
scas
mov
das
xor
and
sahf
je
iret
call
jmp
pop
ljmp
call
in
gs
addl
push
xchg
lret
xor
leave
cmp
icebp
pop
ljmp
jns
mov
push
and
imul
push
push
in
ss
xchg
jns
sub
imul
pop
out
outsl
jecxz
icebp
jp
fwait
rolb
dec
inc
lret
cmp
inc
pop
jbe
add
rorl
push
mov
sarb
adc
jg
mov
sub
mov
cmp
test
sbb
inc
push
pusha
dec
push
push
mov
jns
pop
mov
jns
mov
cld
inc
dec
out
cmp
push
loope
es
insb
outsb
out
add
add
shll
loope
xor
ja
mov
pushl
repnz
sub
jo
add
stos
jns
hlt
xchg
je
sbb
jnp
popa
and
pop
sbb
enter
test
push
inc
xchg
pop
or
mov
aas
sti
dec
xchg
mov
adc
mov
push
mov
add
mov
mov
mov
imul
test
imul
imull
xchg
test
jo
mov
js
filds
cmpsl
sahf
mov
out
ljmp
mov
mov
xor
pop
repnz
jo
shlb
dec
jns
mov
iret
cltd
test
sbb
xchg
xor
in
jb
in
pop
andps
mov
scas
in
fidivrs
aaa
xor
movsl
imul
jne
les
pop
jmp
pop
xchg
out
stc
sub
outsl
pop
adc
jno
jle
inc
mov
pushf
xor
jmp
sbbb
jns
loopne
daa
mov
push
push
dec
gs
bt
sbb
icebp
mov
mov
addb
int
int
in
adc
xor
and
out
inc
std
or
adc
mov
and
mov
lret
scas
out
inc
push
ret
jae
mov
mov
jae
push
adc
test
jge
les
sahf
insl
mov
mov
pusha
insl
mov
aas
stc
addr16
push
jbe
jae
xchg
xchg
ror
fists
test
cltd
daa
js
aaa
mov
dec
sub
lods
jne
aas
outsl
iret
pusha
or
mov
mov
or
jne
sbb
mov
jns
mov
dec
sub
dec
sub
push
mov
sub
rcll
sbb
add
fs
clc
inc
and
mov
add
popa
sti
insb
cmp
mov
scas
jge
nop
movsb
push
adc
jnp
outsl
outsl
jo
cli
xchg
add
or
sub
mov
test
outsl
test
fdivrl
adc
mov
mov
iret
addr16
ret
lretw
cmp
divb
adc
adc
mov
sub
inc
sti
xchg
sarb
lods
inc
fldcw
xor
xor
notb
xchg
int
data16
cmp
inc
gs
popf
cltd
xor
pop
ret
mov
je
into
outsb
inc
mov
ds
add
or
ss
cmpsb
fildl
sti
sub
sub
sbb
mov
dec
add
jb
lret
daa
cwtl
mov
mov
repz
pushf
pop
sbb
add
push
hlt
arpl
cmp
shll
in
adc
inc
bound
pop
rclb
mov
lea
test
mov
mov
cld
lret
pop
mov
fwait
lea
adc
cltd
pop
push
jbe
push
popf
roll
dec
sbb
loope
jmp
jl
cmpsb
rol
adc
aas
sub
into
pop
add
fs
xchg
lret
xchg
dec
mov
out
lea
faddl
ficomps
jno
add
cmpsb
stc
test
icebp
mov
mov
mov
add
test
xor
pop
pop
mov
adc
sbb
mov
shl
lahf
cmp
ret
leave
inc
mov
and
insl
xchg
and
or
mov
mov
cmp
ss
and
pop
mov
lock
push
gs
fwait
sbb
out
sub
xor
push
mov
mov
pop
test
imul
push
cmp
in
mov
jl
jns
imul
loop
and
out
addr16
xor
adc
pop
xchg
push
jp
push
add
pop
push
mov
repz
lret
mov
push
dec
fidivrs
xchg
cmpsl
arpl
adc
test
jae
cltd
mov
or
das
adc
lds
jb
cmp
aaa
mov
sarb
xor
hlt
notb
cs
iret
in
mov
mov
mov
out
adc
out
into
xchg
sti
cmpsl
inc
mov
jae
inc
idivl
arpl
sbb
mov
mov
push
pusha
push
cld
and
push
jno
add
lds
sahf
lea
movsl
push
sub
sbb
dec
and
and
fwait
sbb
push
cwtl
xchg
cmp
mov
mov
jge
inc
jae
int3
andl
push
pop
and
pop
cmp
aad
and
faddl
pushf
mov
sub
adc
or
add
xlat
enter
sbb
add
nop
or
cmp
jg
lods
lods
in
je
push
push
sub
dec
int
dec
jle
int3
pop
cs
cmp
sub
iret
adc
outsl
leave
imull
daa
and
pop
push
lcall
mov
cld
fmull
cwtl
xchg
mov
dec
xchg
addr16
arpl
pop
pop
dec
icebp
push
push
cltd
cltd
or
repnz
inc
jb
mov
mov
xchg
js
lcall
mov
push
xchg
push
jecxz
pusha
mov
jne
inc
lret
negl
fisttpll
roll
and
test
cmp
or
push
scas
nop
xchg
mov
pop
xchg
sbb
pop
test
jmp
lods
mov
bound
push
loop
aaa
in
adc
xchg
fisubrl
pop
jg
add
sub
mov
xor
mov
faddl
jmp
push
or
mov
pop
or
cmp
ret
int
or
hlt
sub
sub
ror
lret
xlat
loope
in
inc
dec
inc
inc
inc
jp
sbb
loop
fchs
data16
ja
push
cmp
mov
jge
leave
or
pop
scas
fs
test
cmpsl
out
in
insl
mov
mov
sub
hlt
inc
or
jg
jae
movb
jae
adc
in
in
xchg
pushf
call
cmp
push
sbb
test
dec
mov
or
mov
mov
cmp
and
xchg
mov
dec
ss
add
test
lcall
je
das
movb
jbe
xchg
pop
push
push
rorl
cmpsb
adc
sti
jno
lret
enter
sbb
cmp
divb
int3
sbbl
pop
push
cmp
out
sahf
push
outsl
jmp
push
shrl
insl
mov
push
xlat
push
and
add
pop
mov
or
jp
loopne
mov
ja
stos
push
loopne
dec
jg
rorl
lcall
rol
popa
into
push
lret
call
icebp
xchg
xchg
dec
adc
js
into
cmpsl
inc
sbb
xchg
movsl
jb
cmp
rclb
mov
sbb
dec
outsl
push
scas
mov
push
insl
jg
dec
insb
sbbb
cmpb
push
js
xchg
sub
fstl
loopne
sub
mov
or
test
rcrl
cmp
sub
push
loopne
fstp
scas
shlb
dec
mov
add
adc
push
push
mov
and
loope
test
jecxz
movl
and
adc
jne
add
mov
lods
sahf
fs
jg
cltd
addr16
xlat
mov
sbb
ret
jg
std
mov
push
out
mov
lret
stc
stos
jle
clc
dec
pop
aaa
int3
or
fistl
fcoms
push
adc
out
pop
lea
mov
add
int3
aas
daa
pop
or
fnstenv
jmp
mov
ret
stos
adc
jg
cli
mov
adc
and
les
lea
lods
outsb
xorb
mov
lahf
rcrl
push
aad
hlt
mov
pop
call
lahf
cmpsb
testb
subb
sbb
test
pop
cmp
jns
rorb
out
in
adc
or
jno
fucomip
imul
sbb
adc
mov
and
insl
jmp
fstpl
mov
sub
mov
fstpl
push
data16
jb
shll
stos
add
mov
nop
pop
add
pop
in
repz
dec
pop
xor
add
jb
xorb
shrb
mov
imul
std
rcrb
cli
xlat
jb
in
cmpsl
jg
shll
cmpsl
movl
cmpsb
cmp
aaa
xchg
adc
xor
lret
sbb
and
in
dec
jecxz
mov
pop
mov
push
inc
dec
mov
pop
stos
cmp
adcl
cmp
test
xlat
mul
xchg
push
jnp
imul
jne
mov
cli
hlt
out
add
xchg
push
sbb
lods
cmp
sub
adc
cmpsb
pop
enter
mov
push
push
adc
add
mov
cs
lea
bound
repnz
jge
loope
std
cmp
cltd
sub
lea
gs
sti
jp
adc
dec
sbb
test
dec
loopne
sbb
fstpl
scas
jl
popa
icebp
dec
fisubs
stos
sbb
dec
mov
std
daa
push
insl
stos
push
inc
lahf
mov
inc
xchg
js
call
popf
sub
jl
fnstsw
sbb
add
testl
xor
add
aad
push
aam
cmp
icebp
mov
imul
shll
cmp
in
xlat
adc
lds
orl
cmpsl
out
mov
mov
icebp
test
add
pop
inc
fdivrp
pop
add
mov
in
int3
bound
in
cmp
std
cmp
xor
jle
xchg
pop
sub
push
push
mov
out
cwtl
sahf
pop
mov
cmpsl
cmpb
mov
adc
inc
cltd
cs
xchg
fistps
pushf
aas
stc
jl
push
cmc
inc
and
add
jl
cltd
adc
lds
sbb
fcoml
test
sub
das
sbb
sub
jbe
in
ds
jp
inc
jnp
push
stos
jo
inc
jne
pop
inc
or
dec
push
fs
cmc
jl
stc
mov
jmp
jns
pop
repz
jns
imul
jnp
sub
mov
lahf
popf
xchg
imull
es
mov
in
and
pop
inc
sbb
add
in
inc
lahf
aaa
aas
jae
sub
mov
push
scas
xchg
lcall
jbe
mov
jecxz
jnp
dec
xchg
fldenv
lea
mov
add
push
jbe
adc
sti
mov
shl
cmp
push
jbe
ja
ds
jns
inc
inc
push
fimuls
xchg
stc
and
cmp
cmc
add
test
js
sti
fldt
pop
pop
test
or
mov
cmpsl
xorl
clc
mov
sbb
pop
xchg
xchg
push
pop
clc
cld
dec
out
arpl
sti
cmpsl
mov
or
xchg
sahf
mov
fldenv
ljmp
adc
push
decb
push
mov
jb
mov
arpl
aad
cld
pop
dec
xor
test
mov
adc
scas
dec
lret
notb
es
out
fdivs
mov
push
push
cltd
mov
sub
std
jns
dec
test
out
sub
rorl
mov
or
in
or
or
push
jbe
or
push
das
movsb
mov
jge
inc
or
das
jmp
push
jb
and
push
push
in
hlt
int3
push
pop
fistpll
outsb
ss
sub
test
stos
pop
jg
jmp
adc
or
inc
dec
or
dec
pop
subl
std
fcompl
sub
push
pushf
or
mov
inc
mov
out
daa
in
adc
andb
cmpsl
sbb
leave
cmp
mov
lea
cltd
mov
sub
add
mov
mov
adc
imul
stos
std
paddsw
inc
add
xchg
cmp
enter
aad
cmpl
xor
repz
or
pusha
mov
out
mov
pop
inc
sbb
push
mov
xchg
loope
push
out
push
jmp
xor
aad
sbb
xchg
daa
insl
cmp
sarl
sbb
push
fcomi
lret
rorl
mov
mov
ljmp
mov
pop
or
test
aam
fstl
xorb
mov
mov
xchg
bound
jnp
mov
dec
divl
mov
jecxz
jb
outsb
lea
fs
cltd
inc
cmp
popa
insl
test
inc
pop
test
andb
xchg
jecxz
fldl
daa
ja
scas
andb
sub
in
fadds
loope
loope
dec
iret
inc
lret
mov
inc
icebp
jae
icebp
shll
lret
and
lock
add
shll
dec
pop
into
insb
sub
vmwrite
lods
pop
xchg
out
mov
sub
jne
out
or
lods
cld
jne
adc
inc
shrb
adc
aad
ret
sub
out
push
loope
jecxz
pop
lahf
fs
xor
sahf
loope
cmp
in
jb
jbe
lods
js
frstor
out
add
pop
lret
mov
jbe,pt
mov
je
ljmp
mov
mov
rcrb
stos
jecxz
in
aas
fdiv
cmp
sub
idivl
mov
mov
mov
mov
aas
mov
jno
xlat
in
ja
pop
or
and
sub
dec
aas
movsb
mov
mov
movsl
movsl
dec
sub
addr16
in
stos
push
leave
cmp
adc
daa
xor
xorb
insl
push
in
add
jmp
dec
mull
sbb
pop
stos
or
mov
jo
xor
jns
inc
inc
jo
push
stos
mov
inc
int3
cli
test
add
movsb
jle
mov
mov
adcl
adc
adc
jae
fstps
scas
dec
cmp
adc
cmpsb
or
mov
and
pusha
jge
mov
and
cmpsb
in
stos
adc
js
cltd
in
rorb
push
outsl
out
or
repz
and
xchg
jle
adc
fs
in
mov
mov
fwait
dec
scas
lahf
xchg
jmp
xchg
scas
cltd
add
fwait
scas
fwait
pop
lods
or
xchg
cmp
mov
cltd
or
pushw
and
test
lea
and
mov
ss
jb
rclb
xchg
mov
int
xlat
mov
lock
out
aaa
push
fstpl
lds
test
cmc
xchg
fisubrl
inc
stos
out
pop
dec
sub
mov
and
mov
and
cmc
inc
and
fnstenv
mov
popa
ret
test
or
fcompl
xor
jo
sti
jae
insl
lea
lret
pop
mov
sbb
adc
pushf
dec
les
out
xor
leave
divb
push
jbe
outsb
sub
jl
or
jg
repnz
pop
int3
loopne
push
sahf
dec
or
aas
aaa
and
pop
mov
push
xchg
rorl
xchg
add
fnsave
lret
push
jl
fwait
inc
xor
int
mov
dec
mov
int3
outsl
add
loopne
push
mov
into
clc
scas
aam
push
sbb
xchg
mov
mov
sbb
les
mov
fisubs
mov
outsb
xchg
cmp
loop
ja
mov
ret
aam
xchg
ds
lock
test
xchg
outsb
mov
addb
adc
xchg
inc
in
dec
or
xorl
mov
fiadds
scas
add
aad
ffreep
mulb
cmpsl
data16
mov
add
ret
lea
pop
mov
lds
sbb
fmulp
fsubl
fwait
mov
adc
xchg
cmpsb
jnp
add
dec
nop
add
adc
ret
negl
add
rclb
loope
cmp
leave
xchg
mov
dec
mov
shl
int3
mov
fstpt
mov
std
fldenv
push
out
jno
push
shrb
scas
mov
cli
and
pop
aad
testb
cmp
insl
and
nop
ljmp
jb
pop
cmpsl
out
imul
aad
lds
shrb
jo
xor
mov
inc
cmp
sbbb
add
sub
ja
ret
xchg
dec
das
cmpsb
dec
popa
and
arpl
jmp
adc
outsb
inc
loope
adc
rorb
mov
pushf
sbb
idivb
inc
lock
and
add
add
lods
stos
cltd
fistl
cltd
xor
dec
inc
xchg
js
or
into
shlb
lret
pop
int
add
lea
jb
push
int3
lea
in
pop
loopne
rcll
mov
sti
dec
dec
mov
jl
pop
cmp
and
push
xor
scas
dec
fsubp
jae
fs
repz
xchg
insb
mov
mov
xchg
sti
push
lds
ja
pop
jl,pt
and
jne
lcall
int3
pop
xor
pop
pop
xor
icebp
ljmp
scas
push
iret
clc
fldenv
mov
js
sar
sub
lret
cltd
mov
inc
sub
cmc
or
in
mov
jno
push
xor
out
loope
jecxz
rcl
fldcw
cmpsl
sub
mov
push
fsubs
pop
orl
rcr
es
test
dec
aas
cmp
mov
push
fildl
jle
test
jp
in
ja
into
fisubrl
stc
inc
jns
sub
cmc
and
and
loopne
rorl
popa
fcmovnbe
fisttps
imul
pop
fistpll
es
imul
cmpsl
mov
adc
sahf
fsubr
push
adc
fcomps
mov
adc
mov
sub
idivl
test
adc
in
lahf
push
movsb
add
cmc
fldt
xchg
fsts
xor
nop
xchg
jge
hlt
fs
inc
inc
adc
mov
imul
shll
add
outsl
icebp
mov
pop
inc
ret
sub
pop
sbb
jl
int3
aaa
xchg
out
push
xor
push
pop
mov
mov
pop
add
arpl
je
ja
xor
push
scas
xor
aam
push
jo
dec
push
mov
lods
xchg
loope
out
iret
cmpsl
xchg
pop
cmp
mov
mov
or
scas
pop
mov
xor
inc
mov
aaa
insl
inc
xchg
push
xchg
daa
jno
jmp
add
add
mov
mov
js
fcoms
push
lcall
and
dec
pop
sub
and
in
movsb
mov
xchg
shr
add
sahf
pop
push
outsb
dec
xor
cld
inc
sbb
shlb
inc
in
outsl
aam
pop
out
mov
adc
jp
out
mov
hlt
lcall
loopne
push
push
testl
hlt
cmc
add
jp
iret
je
fs
and
xchg
aad
sbb
js
shll
nop
cmp
aam
das
jmp
dec
ret
lret
sahf
mov
cli
test
shll
pop
jp
and
out
inc
sbb
shl
or
cmp
adc
lods
sbb
or
jle
cs
sub
outsl
aam
dec
fs
push
mov
mov
mov
les
jne
std
adc
push
inc
jle
add
inc
pop
xchg
mov
lcall
cmpsb
pop
notl
daa
sub
lret
xor
xchg
dec
xor
aas
scas
insl
xlat
test
mov
or
push
inc
push
push
pop
and
inc
enter
cmp
sub
in
in
loop
addr16
xchg
out
out
jo
xor
insl
and
hlt
in
fstps
loop
addr16
pop
aaa
mov
addr16
dec
lahf
flds
fwait
cmp
mov
lret
jae
mov
dec
mov
outsl
je
dec
mov
jo
leave
mov
rclb
mov
aam
sbb
out
shl
jle
out
cmp
cmpsb
in
and
dec
addl
into
clc
xor
mov
insb
rorl
imul
xchg
ss
jmp
cmp
mov
gs
and
jnp
fptan
jno
jecxz
push
lahf
ja
cmc
daa
mov
insb
sub
imul
loop
cmpsl
mov
xrelease
lret
or
popf
jle
cmp
add
sbb
mov
and
int
addps
jae
xchg
inc
cld
inc
inc
pop
lcall
outsl
clc
mov
mov
sbb
fbld
popf
push
mov
or
idivl
jp
xchg
add
sub
stc
jl
jecxz
mov
or
cmp
push
int
jge
mov
in
inc
mov
dec
pop
pop
xor
loop
or
hlt
lods
movl
cmp
pop
sti
pop
pop
cltd
loop
in
push
aaa
lods
xor
sub
jle
cmp
ja
cli
ljmp
inc
mov
nop
test
dec
pop
sub
pop
loope
mull
es
nop
xchg
fstpl
fistl
fildll
lcall
inc
testl
mov
jge
lds
lods
std
mov
scas
cwtl
imul
addr16
add
jl
xchg
dec
push
notb
out
cmp
icebp
int3
sub
hlt
xchg
test
mov
jecxz
jle
dec
mov
and
pop
out
movsl
mov
fiadds
in
cmp
gs
fmull
xchg
orl
in
lock
je
and
sub
mov
jno
aad
sub
leave
test
stc
leave
rorl
das
dec
adc
sub
lcall
loope
mov
fwait
push
mov
adcl
rorl
lret
inc
vmread
sub
jecxz
in
sub
or
insl
adc
loopne
and
mov
je
frstor
enter
shr
idivb
push
into
xor
pop
sbb
scas
sub
mov
push
clc
test
inc
das
mov
mov
sub
rorl
ret
call
dec
addr16
mov
dec
insl
leave
cmpsl
rol
mov
jmp
in
stc
jmp
out
xchg
or
cmpsb
mov
and
inc
adc
jb
rclb
jns
jge
xchg
fidivl
fldl
ja
icebp
mov
ss
test
xor
cld
shll
test
icebp
ja
fs
mov
adc
xchg
mov
inc
insb
addr16
cmpsb
pop
mov
add
mov
add
in
pop
dec
mov
test
dec
pop
inc
scas
aam
mov
mov
mov
and
cmpsb
push
pop
push
dec
sub
pop
icebp
inc
jno
push
aaa
xchg
sahf
jp
xchg
xor
sub
adcb
stc
jnp
push
into
std
movsl
mov
sbb
dec
xlat
fisttpll
in
add
dec
inc
pop
adc
xor
test
inc
fs
shll
mov
nop
inc
mov
and
xor
mov
loopne
or
mov
lods
dec
in
mov
cwtl
sbb
pop
mov
jno
cmp
dec
and
xor
shll
cmc
pop
stos
dec
dec
push
jle
cmp
cmp
sbb
push
push
xchg
mov
rol
pop
and
js
dec
dec
dec
jne
mov
xor
adc
pop
loop
mov
pop
push
cmp
sub
add
sbb
xchg
and
sahf
pop
lock
js
xchg
in
jo
scas
add
push
cmc
adc
jmp
cmp
pop
mov
arpl
lret
fs
push
movsl
insl
mov
aam
stc
fucomi
pop
daa
mov
or
pushf
in
daa
mov
add
cs
mov
ret
add
jae
jne
jbe
jmp
nop
cmp
pusha
mov
pop
dec
scas
jg
add
pop
movb
imul
xlat
daa
sub
cli
lcall
xchg
add
ljmp
insl
mov
das
je
dec
rclb
pop
pop
and
cmp
in
cmp
jb
aad
mov
fsubs
ret
and
test
mov
xchg
les
and
sub
in
and
dec
ret
leave
mov
pop
xorl
sbb
xchg
out
movsb
sbb
sbb
mov
fiadds
inc
addl
fs
mov
push
sub
cli
pop
dec
loop
faddl
into
int3
cs
xchg
fsubr
adc
shll
rcrb
jb
mov
loop
aad
add
pushl
pusha
pop
ret
loopne
arpl
outsb
cmp
mov
jle
pop
shll
fs
je
mov
int
scas
xchg
insb
mov
jecxz
cmp
jle
ljmp
int3
mov
test
test
test
ficomps
sub
aaa
or
or
push
std
lds
inc
inc
ds
push
hlt
push
xchg
arpl
mov
mov
dec
jle
cmpsb
push
nop
sbb
daa
or
daa
ja
push
loope
ffreep
out
sub
jnp
insl
dec
xchg
cs
jmp
jecxz
jecxz
pop
repnz
push
add
pcmpgtw
mov
jecxz
sub
mov
movsb
push
dec
lret
and
push
add
mov
pop
jl
inc
dec
sub
dec
add
repnz
sub
or
mov
xlat
out
mov
jno
push
push
into
enter
dec
pop
clc
pop
test
dec
repz
and
jno
pop
jns
pop
and
outsb
xchg
nop
je
inc
lods
les
mov
int3
rcrl
xor
adc
dec
adc
and
cmp
xchg
ret
sub
add
lret
scas
jle
scas
pop
xorl
lahf
test
jnp
xchg
xchg
in
xchg
pop
xor
pop
or
cmp
add
or
sbb
push
mov
or
xchg
pop
sbb
xchg
or
inc
cmp
bound
scas
in
int3
cmpl
xor
xchg
mov
stc
xchg
dec
mov
jl
ljmp
ja
imul
stos
rcll
sub
call
call
dec
insb
in
mov
mov
mov
fs
sahf
dec
mov
or
ss
pop
pop
and
daa
lods
push
loop
mov
jo
ljmp
push
popf
sti
dec
enter
and
sub
lock
loope
mov
mov
pop
sbb
outsb
mov
jp
lret
adc
xor
mov
leave
stc
cmp
mov
dec
rep
cmp
pusha
test
inc
sbb
sbb
cltd
aaa
pop
push
lret
mov
sbbl
mov
testb
xor
xlat
mov
add
push
sub
mov
add
xchg
push
jg
loop
sbb
jge
mov
push
addr16
jmp
jp
cmc
daa
or
push
shll
dec
xchg
jo
into
data16
ljmp
mov
add
iret
dec
xor
cltd
cld
xchg
test
pop
push
cs
xchg
add
add
jmp
pop
stos
mov
and
imul
mov
das
mov
je
dec
inc
int
jae
jae
sub
cmp
sbb
dec
stos
lret
jmp
xorl
sub
test
jmp
add
xchg
divps
ret
enter
jg
pop
ds
inc
imul
jecxz
push
nop
gs
mov
ret
adc
lea
fwait
jp
mov
aaa
loope
dec
xor
movsb
lods
mov
in
out
test
pop
fcoml
jmp
out
cmpsl
sbb
mov
lds
movsl
mov
dec
imul
arpl
stos
adcl
rolb
test
mov
lret
jno
lods
push
cmpsl
cmpl
arpl
sbb
ds
imulb
xlat
cmpsl
mov
insl
fdiv
pop
test
adc
mov
dec
mov
jmp
dec
cmp
pop
jno
aad
pop
cmp
dec
scas
test
adc
push
and
push
stc
ss
loope
sbbl
sub
aad
pop
xchg
and
jnp
jns
int3
push
sub
in
movsl
mov
jns
lret
add
mov
repz
dec
ds
adc
xor
mov
push
insb
mov
mov
fistps
dec
push
loope
fistpll
fisubs
adc
lods
sahf
inc
xchg
mov
xchg
lret
mov
xchg
sti
dec
mov
andl
loopne
cs
push
add
mov
push
insb
pop
movsl
ds
jo
or
js
adc
jno
xor
push
pop
pop
pop
add
aam
add
aas
data16
sub
cltd
mov
fcomp
push
paddusb
popa
pop
rorb
stos
jbe
mov
mov
adc
inc
inc
inc
jne
sub
dec
jns
dec
add
andl
sub
popa
lock
leave
cltd
and
or
je
cld
sbb
into
outsl
aam
dec
lgs
test
dec
push
sub
sbb
pop
stc
push
mov
pop
sbb
enter
rcrb
ret
fstpt
lock
mov
ljmp
lock
inc
xor
movsl
loop
push
add
mov
and
push
mov
stc
insb
sahf
in
mov
xchg
lock
xchg
adcl
inc
rclb
xor
into
repnz
and
dec
std
and
xor
mov
jno
xor
push
dec
bound
gs
add
add
cmc
cmpl
es
mov
mov
inc
pop
or
pushf
test
cmpsl
or
adc
hlt
data16
xchg
add
lcall
push
les
pop
fiadds
mov
repnz
ret
sbb
pop
adc
or
movsl
sbb
mov
stos
outsb
dec
sbb
adc
xchg
shlb
test
or
rcrb
lds
xchg
mov
test
pop
fldcw
nop
sbb
xorl
cmp
push
mov
sarl
jo
repz
pop
jmp
cmc
mov
push
aam
and
cmp
xchg
push
outsb
outsl
push
push
and
dec
inc
mov
lock
inc
jecxz
mov
ja
jg
mov
add
mov
jo
and
iret
repz
cli
stos
sub
sbb
push
mov
push
fwait
push
push
add
bound
imul
jg
xchg
sub
inc
out
das
mov
mov
fcmovnu
cmp
dec
inc
add
daa
vxorps
push
setns
lods
jecxz
jbe
in
ja
jne
rcrb
push
sahf
mov
add
inc
xor
enter
dec
sbb
cmp
or
aas
dec
push
and
rcrl
xor
or
pop
add
mov
jbe
xchg
xchg
leave
pusha
mov
sub
popf
pop
cmp
andb
cmp
fsubl
loop
gs
add
test
mov
add
aaa
in
sub
sub
push
aam
jno
push
ret
xchg
cmp
mov
les
lock
push
or
xor
pop
xchg
add
mov
test
adc
aad
js
jno
ss
inc
xor
je
ret
shl
int3
aas
mov
sbb
xlat
mov
xchg
pop
data16
fstpl
mov
mov
jg
mov
mov
dec
nop
das
cmc
out
call
add
arpl
scas
mov
test
test
jnp
outsl
shlb
xlat
test
adc
pop
loop
std
sti
mov
shll
lds
pop
xor
jns
dec
xor
add
push
pop
push
ret
xor
fdivrs
addr16
jbe
or
push
in
aaa
push
ret
fimull
cltd
mov
mov
out
and
cmp
cmp
leave
sub
cmp
xor
and
call
imul
mov
pop
sub
cwtl
mov
push
leave
inc
push
sbb
mov
jbe
cmp
clc
sbb
jl
pop
pop
inc
mov
jns
push
nop
jbe
nop
out
add
sti
adc
leave
negb
jge
adc
imul
pop
inc
add
ss
data16
aam
push
in
push
into
aas
ljmp
popa
push
pop
push
mov
loop
adc
test
fcoml
mov
ljmp
stos
fs
mov
jno
mov
sub
inc
orb
hlt
aam
rcll
inc
fistpll
inc
in
je
sub
in
int
fnsave
pop
ret
jmp
mov
aam
mov
mov
lahf
lret
mov
cmc
jmp
mov
sbb
movsl
ret
cmp
push
xchg
inc
push
mov
lcall
ret
push
shll
sbb
pop
shr
aaa
shll
test
push
mov
mov
mov
jbe
sbb
in
fs
movl
inc
inc
xorb
pop
or
lods
mov
mov
sub
pop
leave
repz
mov
loop
sub
cwtl
in
push
in
lret
pop
enter
int3
cmp
sub
mov
push
imul
add
xchg
shll
orl
jp
mov
mov
jns
xchg
es
gs
or
insb
loope
nop
inc
out
and
out
lds
lds
push
jg
mov
dec
int3
and
cmp
pushf
fbld
scas
movsl
sbb
lods
xchg
mov
leave
adc
out
test
mov
jnp
dec
imull
fsubl
inc
int3
xor
test
pop
cmp
je
and
inc
push
das
jmp
add
scas
movsb
mov
pop
cmp
mov
imul
xor
or
js
rcll
int3
adc
mov
in
int3
mov
mov
mov
pop
xchg
inc
xor
fucom
inc
je
mov
xchg
fidivrs
js
sub
out
sbb
dec
xchg
mov
add
jns
fs
jp
inc
xlat
icebp
aam
arpl
and
xchg
incb
mov
mov
and
fnstenv
xor
es
cmp
pop
lahf
push
insb
dec
jbe
scas
int
movsb
pop
scas
jmp
push
out
sahf
sti
sub
push
push
adc
scas
push
adc
mov
lret
xor
icebp
aad
test
adc
sbb
daa
cmp
cli
movsb
mov
lahf
and
std
pusha
mov
cli
sbb
adc
fmulp
arpl
xchg
cmpsl
mov
mov
push
jo
mov
mov
and
repz
cwtl
and
add
mov
inc
inc
outsb
push
ja
push
ret
iret
push
cmp
pop
lahf
out
add
lret
sbb
aam
jb
pop
icebp
sbb
test
xor
fld
cltd
push
imul
dec
or
push
in
testb
ljmp
test
lcall
mov
or
adc
pop
jg
sti
jns
ja
mov
mov
mov
cmp
mov
xchg
lods
xchg
sbb
shrb
bound
rcll
mov
or
sbb
mov
cmpsb
adc
xchg
mov
int
cld
mov
cmp
xor
mov
pop
mov
pop
push
lret
es
int3
jb
xor
xor
push
aam
loopne
xor
inc
xchg
mov
stc
cs
jmp
in
movsl
je
mov
aad
xlat
push
and
inc
es
int
jbe
xor
std
push
adc
and
mov
sub
pushf
jge
dec
mov
jae
jp
xchg
enter
mov
iret
dec
sub
js,pn
push
clc
fbld
cltd
inc
and
xchg
imul
jecxz
or
arpl
aad
sbb
out
lahf
xor
xchg
aam
jo
mov
test
fwait
pop
int
ljmp
push
outsl
inc
loop
je
ret
fimull
inc
mov
dec
jp
lods
jmp
pop
rclb
jne
mov
push
push
or
push
and
subb
rclb
aam
into
loopne
add
adc
push
insl
lea
dec
aam
lahf
inc
jl
fists
inc
dec
xor
xor
lret
mull
mov
fnstenv
xchg
cltd
in
les
mull
mov
inc
xchg
inc
fildl
mov
mov
cltd
ficoml
mov
jmp
lahf
outsb
xchg
inc
cmpsl
jbe
jg
enter
repnz
sbb
movl
pop
adc
int3
xchg
lahf
add
sub
fwait
leave
int3
scas
mov
dec
mov
shrl
cld
and
and
data16
add
iret
ja
pop
sub
sbb
xor
icebp
push
mov
push
xor
xor
outsl
pop
and
aas
dec
jp
pop
iret
xchg
xor
jne
add
mov
sti
cmpsb
mov
mov
stos
icebp
jne
xlat
adc
pop
xchg
jge
jmp
lret
or
loope
sub
test
mov
lcall
pop
ret
pop
cwtl
in
mov
mov
sub
popf
test
pop
mov
fcom
mov
cwtl
lahf
jo
ud1
and
sub
bound
jl
push
mov
sbb
dec
or
inc
push
jno
fdivl
xchg
in
int
dec
cld
push
push
dec
mov
repz
inc
imul
movsl
add
jmp
lds
dec
fcom
jne
leave
sbb
jbe
and
mov
clc
sbb
enter
roll
push
hlt
test
pop
inc
xor
aad
jp
repz
sub
insl
or
ds
imul
mov
cs
lods
xchg
sbb
lcall
outsl
adc
pandn
cld
pop
push
rcll
pop
scas
lods
sbb
bound
adc
cmp
out
enter
into
cmp
aad
adc
mov
inc
pusha
push
mov
dec
das
inc
or
pop
or
jb
xchg
sub
test
imul
popa
mov
test
pop
jne
insl
lret
push
pop
adc
mov
pop
ss
rcpps
sbb
std
das
or
jbe
test
mov
xchg
pusha
aas
add
or
add
popa
inc
cmp
cs
cmp
mov
sub
or
adc
mov
jb
mov
adc
aas
fstp
pop
or
jp
cmp
jo
scas
sbb
sbb
and
fs
movsl
inc
aad
sbb
adc
inc
xor
mov
incl
cwtl
sub
lds
xchg
push
fldcw
int3
inc
push
mov
into
test
mov
inc
add
fldenv
or
add
sarl
sbb
stc
pop
shrb
fst
mov
sbb
pop
or
inc
data16
in
inc
aas
pop
inc
pop
ss
cltd
dec
mov
popf
shl
outsb
mov
push
outsb
fcmovnb
fdivrs
mov
sbb
sbb
roll
adc
mov
sahf
ficompl
loopne
mov
mov
out
cmp
jb
loop
insb
je
mov
push
popf
jp
leave
pop
jns
aaa
or
dec
pop
bound
cmp
rol
lret
das
xor
daa
pop
imul
cmp
jne
xor
ds
cmp
loop
mov
mov
scas
shll
mov
push
cmp
xor
bound
inc
stos
loop
repz
stos
pusha
je
jns
leave
add
inc
push
xchg
ja
cmp
lock
jae
aad
dec
jne
je
js
inc
into
mov
adc
nop
loope
jmp
mov
xchg
cmp
sub
add
jmp
mov
mov
xchg
mov
lods
cwtl
mov
xchg
outsb
lret
push
pop
idivb
and
repnz
xchg
mov
je
andb
pop
daa
inc
shr
jp
sbb
jbe
fwait
push
sbb
cmpsb
sub
pop
mov
in
mov
in
test
adc
and
and
das
mov
or
fs
mov
stos
xchg
pop
cmp
jo
stos
mov
mov
lods
cs
xor
cmpsl
fnstcw
adc
jne
mov
fwait
aam
jge
iret
mov
test
lea
xchg
loopne
je
dec
test
mov
pop
mov
jnp
dec
sbb
jmp
dec
push
add
lds
fimull
fbstp
adc
mov
mov
arpl
mov
dec
movsb
cmp
mov
fsubrs
mov
ljmp
inc
sub
loopne
leave
inc
push
inc
cmp
xor
sub
sbb
pop
and
push
mov
popf
std
sub
xchg
in
dec
nop
push
adc
lret
das
imul
leave
mulb
pop
sbb
lret
pushf
sahf
hlt
or
andl
dec
cmpb
push
pusha
cmp
int
outsl
xorl
aaa
fdivl
scas
mov
xor
pop
dec
jge
loop
mov
movsl
xor
adc
ret
xor
cmpsl
add
jl
mov
cmpsl
cs
mov
test
ja
and
pop
test
dec
and
loop
nop
sub
pop
dec
push
insb
movsl
xchg
ret
mov
mov
and
jno
pop
mov
sti
rol
and
sub
outsb
sahf
mov
lret
mov
fld
std
xor
adc
popa
iret
push
cmpb
inc
pushf
js
negl
adc
xchg
mov
lock
ljmp
sub
in
or
fbld
pop
dec
insl
out
lret
pop
fldt
pop
movb
mov
push
cld
jno
ljmp
decl
cli
pop
xchg
mov
xchg
js
xor
adc
aam
or
sbbl
cld
xchg
jbe
insb
icebp
repz
rclb
mov
test
dec
dec
cmp
hlt
or
mov
loop
push
fnstenv
and
aam
enter
push
mov
es
mov
jns
xchg
aas
ret
loop
and
inc
pop
loope
or
jo
int
lods
pop
js
aaa
dec
nop
mov
pop
test
lret
xor
dec
stc
pop
push
std
pop
sbb
not
iret
dec
pop
ljmp
xchg
cli
aas
ljmp
push
loopne
jle
int3
loop
das
add
mov
push
mov
inc
sahf
jp
cmpb
cmp
cltd
mov
xorb
and
scas
xor
pop
push
mov
dec
daa
lods
daa
adc
mov
mov
fcomps
mov
cmp
mov
jo
fnstcw
aaa
sub
lret
movsb
jno
adc
arpl
data16
scas
cmp
xchg
and
lcall
jns
sbb
xchg
ficoms
sbb
jp
xchg
xor
xchg
adc
sbb
popf
fisubrl
mov
enter
mov
and
dec
gs
out
or
andb
arpl
mov
test
faddl
bound
outsl
lahf
add
inc
push
imulb
cmp
sbb
add
in
mov
pushf
pop
ljmp
push
sub
xor
lahf
sbb
popl
dec
add
test
nop
lahf
outsl
lret
push
movsl
sbb
mov
movsb
jno
xor
testl
fistps
and
add
sbb
movsb
fiaddl
sahf
cmp
mov
imul
ficomps
xor
mov
repnz
lcall
push
mov
aas
int3
jae
lcall
mov
mov
sarl
dec
cmp
mov
int
testl
jb
push
pop
jo
xchg
xchg
popf
inc
sub
aam
dec
mov
scas
push
xchg
xchg
icebp
fld
inc
push
dec
shr
and
cltd
in
push
loope
push
sbbl
popf
lea
popa
test
repnz
scas
dec
pop
mov
mov
xlat
hlt
add
divb
in
xor
or
sub
flds
and
xchg
out
xchg
or
outsl
push
popf
in
outsl
inc
sub
jg
cmp
mov
jne
cli
rcrl
xchg
and
jmp
xchg
sarl
pop
jne
sub
std
sahf
in
jo
pop
sbb
shll
ja
sub
mov
sbb
push
out
mov
imul
pusha
mov
xlat
mov
push
pop
loopne
push
lods
mov
xor
cmp
pop
sub
out
fisubl
push
xor
rcrl
inc
cmp
notl
cwtl
and
arpl
inc
insl
cltd
dec
or
dec
pop
fs
add
clc
mov
idivb
add
sbb
orl
xor
jge
cwtl
lret
into
mov
jae
sbb
int3
test
xchg
clc
or
jae
sub
test
add
stc
ja
dec
adcl
mov
lret
in
pop
or
xchg
add
gs
push
xchg
jae
ja
xchg
dec
loope
into
push
scas
or
or
sbb
inc
popf
xlat
xor
jl
mov
adc
clc
movsl
cltd
mov
adc
leave
out
mov
lods
jnp
lret
adc
sti
xor
push
mov
pop
outsb
xchg
lret
inc
jo
jmp
sub
lds
add
rorl
xchg
pushf
sub
scas
cwtl
cmp
mov
push
pop
add
cli
xor
cmp
mov
adc
dec
mov
insl
push
es
push
int3
pop
pusha
xchg
int3
pop
cmpsl
pop
inc
fdiv
lret
aas
notb
fxch
repnz
cmp
fwait
je
shll
test
mov
sbb
inc
dec
enter
movsl
adc
xchg
mov
dec
pop
ja
cltd
shl
adcb
aas
in
push
cmc
jnp
fstps
pop
outsl
sti
add
popa
xchg
push
fstpt
fisttps
shlb
test
and
and
jp
xor
roll
xchg
sahf
les
mov
rcrl
sbb
dec
mov
lret
xor
mov
xorb
lock
xchg
popa
dec
mov
mov
idivb
ret
or
xchg
sub
aam
das
aad
mov
xchg
cwtl
mov
cltd
inc
xchg
imul
or
push
nop
stos
adc
loop
fidivrs
lods
in
int
in
push
jb
sbb
fisttpl
scas
insb
push
xorl
cmp
icebp
push
add
push
mov
enter
and
push
sub
or
lret
gs
add
or
ljmp
popf
lcall
inc
pop
test
repz
insb
mov
cmp
mov
fldenv
ret
jno
xor
mov
fwait
sub
adc
ret
xor
lret
repnz
sti
jg
jnp
adc
xchg
push
mov
bound
ret
idivl
loopne
int3
lds
mov
mov
pop
mov
or
movsl
dec
pop
je
xor
sbb
inc
mov
cmp
dec
mov
xchg
jp
adc
data16
dec
mov
dec
loopne
cmp
xchg
dec
or
in
push
sub
pop
jge
repnz
movsb
out
loopne
dec
fwait
repnz
jl
sbbb
cltd
iret
sbb
xor
in
mov
or
mov
movsl
movb
in
cmp
sbb
or
stos
jne
push
mov
pusha
adc
jp
shrb
adc
pop
dec
dec
pushf
push
cmc
lods
jle
xchg
dec
mov
int3
int3
and
out
lcall
int3
adc
aam
inc
cmp
loop
pop
push
sbb
add
jae
and
mov
pop
icebp
mov
mov
mov
add
shll
sub
jp
adc
cmp
adc
pop
sahf
jnp
pop
pop
nop
push
popf
or
and
rcrb
cli
aas
arpl
das
fcmove
mov
jmp
jecxz
sti
arpl
xor
jmp
mov
cwtl
jg
cmp
jns
xor
inc
hlt
pop
inc
mov
sarb
fwait
cmpsl
mov
xorl
push
jecxz
add
xchg
test
jg
cmp
scas
or
shll
push
lret
lahf
push
out
sbb
inc
int
test
jnp
insb
inc
and
clc
out
pusha
jp
mov
cmc
xor
mul
aaa
popa
lods
ret
push
leave
jecxz
cmp
pop
int
shll
lret
ret
test
insb
pop
cmp
xor
in
es
pop
cmpsl
ljmp
fistpl
lds
das
mov
shl
xor
lcall
out
inc
rorb
mov
cli
jb
call
add
rcr
mov
pop
lahf
rclb
je
xor
pop
cltd
jne
mov
jae
sbb
data16
scas
push
shll
bound
fstps
mov
dec
call
and
cmp
cwtl
sbb
inc
and
enter
aad
jno
fisttpl
pushf
mov
inc
and
mov
mov
sub
ds
addr16
sbb
mov
divb
lahf
mov
sbb
das
decl
mov
adc
mov
cmp
int
aad
lahf
lea
mov
fimuls
xchg
sbbb
dec
add
and
int
repz
mov
sub
scas
in
dec
and
in
or
addr16
test
ficoml
mov
ss
pop
nop
xchg
jl
push
lret
cwtl
mov
ja
incb
jns
cmc
out
movsl
cmc
in
push
jmp
test
mov
je
outsl
mov
and
lods
repz
nop
movsl
loopne
mov
sbb
cmp
test
aaa
jne
popa
or
or
lret
cmp
pop
push
int
shrb
int3
sbb
dec
xor
sahf
adcb
jmp
outsb
mov
loop
mov
mov
push
out
mov
jl
inc
sub
pop
inc
or
add
mov
mov
lret
pusha
ret
dec
or
mov
xchg
add
jo
hlt
push
rcll
xor
mov
add
cld
lods
push
sbb
gs
call
jbe
insl
lcall
xor
and
and
cmp
in
or
cmpsb
shrb
ror
mov
mov
mov
movsl
adc
lret
pop
jb
mov
aaa
cmp
cmc
aam
xorb
pop
in
popf
pop
mov
aaa
jne
jns
push
fadd
push
sahf
mov
mov
int
dec
pop
cmp
jb
mov
adc
cmpsl
cmc
push
push
sbb
movsl
sub
inc
sub
add
or
ficomps
incb
fwait
pop
xchg
adcl
sbb
jo
in
sub
xchg
jecxz
shll
cli
push
jmp
ja
pop
cltd
in
pop
inc
das
and
mov
push
in
loope
add
push
inc
mov
into
loop
lock
dec
lahf
idivl
mov
push
mov
xchg
dec
in
scas
xchg
jno
mov
icebp
adcb
or
xlat
and
mov
jb
ret
or
inc
xorb
xlat
jnp
mov
inc
add
fs
xor
bound
mov
jecxz
jnp
and
push
xchg
es
sub
stc
dec
jmp
aaa
scas
inc
fnsave
dec
stos
jb
sbb
cmpb
add
add
rcrl
and
inc
mov
adc
add
ljmp
cwtl
dec
aas
jne
out
hlt
xor
js
cs
xchg
nop
push
clc
lds
aas
push
rcrb
call
adc
pop
and
es
test
stos
ficomps
sub
mov
loope
mov
add
hlt
xorl
jne
call
test
bound
cmp
mov
add
ljmp
mov
mov
or
pop
mov
ds
fs
pop
push
stos
and
movsb
and
lcall
nop
hlt
cmp
cmp
cltd
popa
aaa
lods
push
push
fsubrs
repnz
mov
out
adc
sub
data16
and
popa
in
sahf
sbb
pushf
shrl
and
sub
xor
push
in
lcall
clc
cwtl
cmpsb
mov
fcmovnb
imul
orl
or
loop
xchg
cmp
xor
jmp
xor
and
add
add
xor
dec
xchg
fisubl
push
incb
mov
imull
adc
movsb
mov
dec
adc
dec
ss
cwtl
sbb
shll
movsl
xor
arpl
imul
pop
xchg
aas
xchg
out
pop
inc
in
adc
int3
add
mov
mov
and
and
sub
push
add
ficompl
popf
jns
sahf
push
adc
and
mov
add
mov
adc
push
jne
push
fdivrl
adc
popf
dec
pop
dec
pop
lret
jle
sub
xor
push
sbb
inc
imul
es
adc
je
pop
sub
arpl
movsb
pop
rclb
push
rcr
sbb
inc
cwtl
repz
fistpll
dec
flds
mov
sub
shll
leave
mov
xchg
push
repnz
adc
cmp
test
mov
xchg
pusha
inc
xchg
movsb
test
loope
lret
imull
dec
sbb
icebp
leave
sahf
outsl
pop
mov
sub
inc
xchg
mov
jmp
and
sbb
insb
rorb
repz
mov
inc
jl
pop
inc
mov
push
pop
adc
add
stos
stc
lret
push
aas
cmpsb
imul
add
jmp
roll
pop
inc
jg
push
jge
inc
pusha
adc
std
sbb
scas
stos
or
and
outsb
outsb
fsts
and
js
mov
fildll
lea
cmp
insb
fwait
addr16
dec
or
aas
fisubl
push
fldl
and
pop
aad
xor
xchg
rcrl
jne
popa
mov
jne
inc
ja
xorb
add
aaa
loopne
stos
aad
jecxz
sub
push
in
movsb
cltd
pop
push
outsl
cmp
sbb
fstps
rorb
daa
fdiv
pop
xchg
mov
cmp
xor
arpl
sbb
arpl
int
cli
sub
sub
pop
int
loop
mov
inc
add
mov
imul
xchg
les
scas
fildll
jl
lock
pop
mov
inc
push
roll
mov
fisttps
mov
adc
mov
push
adc
jge
fsub
cmp
aad
xchg
icebp
or
ds
cmp
sahf
stc
xchg
xor
fidivl
inc
loope
ljmp
inc
imul
sbbb
insb
and
fadds
inc
or
rcrb
mov
cli
pushl
es
pop
mov
inc
jg
into
inc
pop
cmpsb
jmp
mov
in
sbb
orb
xor
pop
fsubp
jecxz
fs
js
add
sub
lea
add
mov
stc
fs
mov
xlat
push
cmp
dec
mov
mov
fs
in
repz
pop
adc
repnz
mov
dec
imul
notw
add
or
pop
jnp
rcrb
les
cltd
xchg
jg
loope
data16
inc
mov
and
lods
adcb
shl
xor
cli
inc
shl
fdivrs
ffree
fistps
sbb
jg
xchg
fdivl
pop
stos
xchg
and
xor
lret
stos
sbb
or
mov
push
sbb
jmp
das
cmp
sti
scas
pop
xor
jno
dec
push
data16
and
push
cmp
rolb
push
addr16
fbstp
stos
xor
and
dec
push
add
ljmp
dec
inc
leave
cmp
and
pop
call
push
xchg
add
xorb
push
int
mov
stos
pop
andl
push
leave
xor
add
push
das
mov
mov
mov
dec
sub
ficomps
mov
fildll
fidivrs
dec
clc
push
xor
mov
call
pop
ljmp
sub
push
push
cs
or
idivl
mov
jae
or
fstpt
cmp
push
adc
lods
movsb
movb
lods
jae
adc
cs
loop
xchg
sbb
sub
jge
rcll
mov
gs
outsl
cmpsb
ret
push
lock
xchg
push
scas
clc
popa
mov
xor
in
lret
inc
add
dec
sarb
pop
nop
ss
popf
stos
in
push
insb
add
aas
cmpsl
ja
cmp
fs
and
dec
imul
jmp
pop
out
add
lret
leave
push
mov
adc
scas
fs
push
mov
add
adc
in
lcall
int3
push
aaa
jb
lock
daa
pop
mov
sub
push
and
insl
out
push
loopne
js
and
mov
sbb
in
cmp
dec
push
sbb
stos
xchg
or
cwtl
mov
and
mov
add
pop
out
adc
cwtl
xor
jp
fldenv
sub
sbb
mov
lock
shl
dec
jle
pop
xor
daa
movsb
call
xchg
xchg
out
mov
mov
and
or
lea
and
jmp
push
insb
cmpsl
pmuludq
xchg
mov
mov
dec
popf
cli
js
inc
push
sbb
sbb
xchg
jecxz
push
mov
adc
add
scas
nop
ret
mov
fwait
jbe
dec
jbe
push
in
fisttps
shr
mov
outsl
push
aas
loop
movsl
sbb
loop
pop
mov
dec
sub
xlat
or
fsubs
cmc
jge
cmp
pushf
outsb
lea
adc
jp
mov
fabs
test
mov
fcoms
push
or
pop
stc
sbb
fdivs
mov
lock
mov
dec
in
push
aam
inc
xor
pop
and
js
clc
fdiv
dec
push
lods
pop
cld
pop
ret
xor
out
sbb
cmp
jns
aas
repnz
icebp
data16
enter
lods
mov
ficomps
mov
dec
outsb
mov
dec
xor
xchg
sub
cmp
insb
gs
xchg
push
icebp
rclb
sahf
push
adc
cmp
jns
sbb
pushf
ret
sub
cmpsl
out
dec
fisubrl
es
xchg
stos
div
js
std
mov
xlat
jp
clc
les
lods
out
and
xchg
movsl
shrb
cwtl
ja
mov
jecxz
push
cmp
mov
testl
aad
xchg
lea
scas
dec
lret
mov
rorl
sbbl
sub
pop
into
xchg
aam
sub
mov
subl
push
xor
jne
sbb
cmp
sbb
loopne
mov
sbb
insl
into
push
out
rcrl
pushf
inc
mov
cmp
push
pop
or
xchg
mov
xchg
into
fiaddl
push
imul
imul
rorl
inc
or
test
sub
cmpsb
sub
dec
jae
loop
jecxz
sbb
ret
sahf
stos
loope
jbe
repnz
sbb
popa
sti
mov
inc
push
leave
cmp
lahf
add
aaa
lret
popa
andl
pop
xor
xchg
xor
cmp
and
lret
lret
dec
inc
cmp
push
add
and
lcall
cmp
sub
or
aam
cmp
sti
addr16
inc
scas
inc
mov
push
arpl
jmp
ret
add
fsubrl
pop
test
std
xor
rorl
xchg
aas
jns
std
and
sahf
xchg
xchg
je
lret
inc
jno
mov
in
cmc
mov
sbb
and
xchg
mov
cmp
and
rorl
push
mov
loope
sub
arpl
lea
test
inc
les
jbe
call
xor
pop
sub
push
data16
mov
push
mov
jmp
pop
leave
pop
andl
ds
mov
mov
adcl
loope
int
in
ja
or
mov
jmp
jmp
icebp
cmp
outsl
xchg
lds
test
sub
arpl
or
outsl
cltd
xor
idivl
pop
scas
stos
add
push
xchg
dec
sti
ds
negl
cld
sub
test
jb
dec
movl
xor
jbe
sub
outsl
xchg
out
pushf
mov
mov
lds
dec
xlat
dec
les
jns
mov
fisubl
nop
or
aaa
cmp
les
shl
jne
enter
sub
inc
jmp
inc
push
loope
out
lret
pop
sarb
mov
adc
cmc
iret
jnp
leave
sbb
shll
push
mov
xchg
movsb
rclb
out
jmp
or
ljmp
mov
test
aas
inc
test
movsb
pop
loope
and
or
addr16
jp
push
pusha
dec
sti
xor
push
movsl
ja
movsl
pop
push
test
adc
xor
gs
inc
aas
mov
mov
cmp
inc
push
dec
arpl
lret
mov
push
ds
jnp
lret
xchg
outsb
fldt
xchg
mov
in
insl
lret
stos
jo
insl
pop
mov
dec
inc
dec
mov
arpl
cmpsb
gs
dec
dec
sbb
sbb
out
insl
ret
adc
and
dec
js
adc
lock
sub
jmp
xorb
sub
or
daa
std
inc
sbb
out
dec
clc
push
mov
loop
ljmp
movsb
loop
xor
and
and
push
sti
addr16
add
in
mov
mov
xlat
inc
adc
arpl
pop
pop
dec
cmp
mov
mov
scas
mov
sub
cltd
xor
fdivr
mov
adc
cmp
push
inc
mov
add
roll
sub
mov
mov
daa
pop
adc
and
cltd
mov
mov
clc
push
fwait
jle
in
mov
inc
popf
dec
fmul
stos
push
js
mov
mov
adc
popf
dec
cmp
push
outsb
and
push
xor
mov
jge
jmp
mov
push
imul
jg
xchg
and
pxor
mov
gs
aad
scas
adc
or
jmp
or
sbbb
sub
mov
push
cmp
aaa
push
sbb
out
mov
pop
xor
mov
out
sbbl
add
inc
out
xchg
cmp
fnstsw
cmpsb
or
arpl
cwtl
mov
std
push
xor
mov
mov
mov
cmpsb
ljmp
cmpsb
xchg
testb
jmp
xchg
cld
xchg
xor
test
pop
fcmovnbe
test
add
or
and
aaa
cmc
xor
ficoml
mov
push
xchg
mov
mov
add
pop
sbb
adc
xchg
mov
jge
xchg
jge
fimull
add
inc
jne
stc
pusha
push
xchg
jb
out
ja
sahf
sti
add
sbb
popf
and
adc
and
cwtl
jb
sbb
outsl
inc
ds
lea
leave
leave
xor
pop
mov
or
or
jmp
int
push
int
pusha
in
dec
push
cmp
aaa
xor
adc
roll
dec
xor
dec
imul
mov
cld
ljmp
cmp
cmp
stos
mov
xchg
and
pop
std
ljmp
xchg
fsts
add
jmp
rolb
cmpsl
mov
cmp
cmp
sub
es
fs
mov
notl
xor
testl
pop
xchg
pop
xor
dec
pop
push
clc
and
stos
mov
jp
fdivl
sub
ret
movsl
sub
mov
imul
add
ljmp
das
mov
adc
fsubrs
xor
gs
in
dec
add
rolb
push
lods
jle
ss
xchg
or
test
xchg
cmp
jns
out
repnz
lock
jmp
jnp
push
loope
mov
loopne
les
out
mov
sbb
aas
pop
add
fwait
nop
mov
pop
xchg
xor
jae
pop
lds
lahf
xor
mov
jmp
mov
push
mov
jecxz
fdivrs
mov
test
push
pushf
mov
pop
sub
cmp
das
sub
test
es
pop
lahf
or
adcl
out
add
sbb
push
enter
adc
repnz
adc
and
jnp
icebp
mov
inc
mov
movl
push
mov
add
arpl
shrl
adc
icebp
xlat
pop
aas
or
jmp
hlt
xchg
scas
imulb
adc
mov
push
stos
lods
push
sahf
fcompl
inc
roll
xchg
push
in
inc
out
xchg
mov
adc
in
mov
adcl
add
adc
call
mov
clc
aaa
mov
mov
add
sbb
or
jae
cmp
pop
push
xchg
adcb
pop
stos
sub
mov
nop
push
push
sbb
ficoms
addr16
in
inc
inc
popa
push
push
cwtl
jp
outsl
xor
outsb
sti
push
cmpsl
movsl
sub
scas
aaa
inc
mov
jno
int
jne
xchg
fisttps
jae
adc
fwait
cmc
leave
cmc
inc
leave
push
fisubs
mov
into
ret
and
imul
or
mov
scas
fcmove
shl
cld
xchg
push
cmp
push
sti
shlb
add
jg
jb
lds
or
xor
mov
scas
pop
mov
scas
popf
stc
mov
adc
dec
dec
in
pop
jbe
adc
push
cmp
xor
jne
cs
xor
jle
jl
adc
inc
icebp
sbb
xor
std
push
sub
jmp
fstl
xchg
jmp
jl
sbb
and
mov
mov
and
out
fisttps
jnp
scas
fisttpll
insb
mov
repz
sub
hlt
add
rol
in
movsb
mov
jmp
ss
sbb
std
jmp
or
jle
ficoml
inc
jo
mov
cmp
inc
jns
or
enter
fldenv
pop
and
pop
xchg
mov
in
inc
or
addr16
xorb
sbb
fbld
push
leave
cmc
clc
sbb
out
gs
mov
push
ret
jg
cmp
stc
cmp
cmp
out
push
lahf
imul
cwtl
lock
sub
iret
sbbl
loope
and
aaa
cmp
iret
sub
call
insl
sbb
stos
ret
push
dec
and
movsl
and
test
add
cltd
xchg
in
out
leave
jne
cmp
lods
sbb
push
lahf
ficoml
sbb
mov
sub
dec
jno
cmpsl
scas
xlat
and
lret
das
push
mov
push
pop
jae
xchg
mov
mov
xchg
inc
lret
xchg
and
imul
mov
mov
cmp
daa
movsl
mov
pop
push
xor
mov
lahf
daa
push
insb
and
xor
xchg
xlat
sahf
arpl
popf
push
arpl
in
adc
fsts
mov
jp
cld
gs
adc
imul
cmc
stos
shll
jne
jb
das
dec
imull
movsb
sub
cltd
and
icebp
std
jns
test
sub
fildl
cltd
dec
xchg
stos
pop
jb
xchg
icebp
cmp
addb
sbb
mov
ror
stc
xchg
popf
cmpsb
and
fadd
cmp
xor
dec
insb
xlat
test
mov
aaa
jo
mov
leave
aas
daa
cli
cmc
int
das
jae
inc
pushf
or
cmp
inc
adc
fistps
mov
mov
incb
pop
lods
loopne
aas
jno
iret
repz
dec
insl
dec
adc
cmp
mov
popa
out
sbb
addr16
movsl
daa
pop
pop
sub
push
ret
dec
inc
rolb
repz
xchg
insl
mov
loope
lea
movsb
pop
xor
orb
jge
mov
cwtl
adc
dec
aas
cmp
sbb
or
sbbb
cli
xor
inc
fdivr
push
adc
popa
sbb
arpl
push
leave
adc
or
rclb
test
lahf
sbb
out
bswap
dec
fwait
xchg
jge
outsb
leave
das
icebp
push
aaa
cld
sub
inc
stos
ss
jle
pusha
add
ss
das
stc
jp
add
into
inc
pop
xlat
addr16
mov
push
gs
or
mov
push
scas
xor
inc
dec
je
into
pop
xchg
cs
cmpsb
popf
xchg
push
rcll
data16
inc
loope
cmp
aam
ja
cs
push
mov
aaa
divb
jp
and
adc
ret
aad
push
add
out
xchg
lret
inc
mov
mov
xor
leave
mov
sbbb
repnz
cmpsl
sti
jbe
lret
fdivrs
mov
add
lahf
loope
faddp
cltd
pop
sbb
dec
outsb
mov
jge
mov
sahf
jnp
push
lret
jge
fidivrl
cmp
jno
xchg
out
cmp
sub
xchg
lea
add
jl
xchg
adc
imul
movsb
and
data16
repnz
notl
lods
mov
and
stos
psraw
pop
cmp
mov
mov
and
dec
test
pushf
xchg
mov
mov
dec
mov
gs
adc
lods
or
std
pop
aad
mov
adc
adc
pop
push
sar
mov
outsb
adc
std
mov
and
jecxz
ret
rcll
lahf
and
xlat
push
sbb
popa
das
mov
inc
daa
into
out
ja
insb
stos
lds
fucom
xlat
mov
clc
dec
xchg
sub
pop
rorb
incb
dec
pop
daa
stc
xchg
shlb
and
jo
ja
jge
xchg
out
into
subb
xchg
push
sub
cmp
inc
jmp
fidivrs
xor
addb
jg
in
sbb
ja
sbb
lret
xor
fs
cmp
xlat
jmp
aaa
pusha
mov
dec
push
push
or
rcrl
out
mov
out
in
test
unpckhps
mov
add
pop
repnz
or
inc
mov
mov
fwait
or
sar
adc
dec
jmp
adc
andb
add
and
mov
repz
push
mov
push
pop
negl
subl
xchg
mov
sbbb
aas
mov
aad
icebp
ret
das
dec
ret
inc
push
loop
mov
insb
mov
sub
push
and
fwait
jl
or
ret
fildll
int3
pushl
test
out
mov
pop
mov
jl
cmp
mov
sub
hlt
inc
in
add
jo
adc
jbe
jae
mov
popa
jmp
orb
cmp
dec
mov
or
sub
psubusb
mov
out
fld
ret
xchg
loope
outsb
jecxz
ljmp
push
xchg
lcall
insb
or
ds
mov
in
fldt
or
or
cs
cmc
stos
adc
adc
in
sarl
lea
cmc
popf
cmc
jle
test
mov
inc
ljmp
pop
sub
xchg
lret
sahf
xor
scas
inc
hlt
lods
and
out
shrl
mov
aas
ss
loop
daa
arpl
int
mov
ds
subb
bound
cmp
idivl
xor
push
or
icebp
cmp
jmp
jae
add
mov
fsub
inc
shll
push
add
xchg
enter
xchg
or
sub
jg
fwait
push
leave
std
notb
cli
rolb
adc
adc
or
mov
std
jmp
insb
jge
jo
repnz
inc
pop
xchg
les
es
mov
add
adc
push
out
sbb
sarb
test
es
xor
add
out
push
fsubs
inc
pop
cmp
sub
sbb
xchg
add
hlt
out
sahf
cli
mov
or
insl
xor
int
mov
push
jp
jecxz
push
inc
dec
ror
jl
add
mov
div
shlb
and
repz
xor
cltd
sbb
sub
out
stos
jns
rcrb
mov
fucom
in
and
mov
mov
mov
int
add
cmp
mov
xor
scas
out
negl
out
andl
fcompl
test
adc
sbb
test
push
add
out
insl
or
das
sbb
in
jg,pt
or
popa
stos
stos
in
dec
jns
add
adc
cli
add
maskmovq
insl
icebp
iret
mov
rol
scas
and
jae
add
add
sahf
xchg
sbb
test
adc
jnp
int3
jmp
outsb
outsl
test
fiaddl
fwait
mov
clc
roll
adc
arpl
xor
sarb
mov
fadds
cltd
adc
out
leave
insb
cmc
mov
or
mov
in
cmp
cld
cmp
lahf
xchg
lret
push
sahf
stc
xor
lock
imul
push
pop
mov
setl
mov
or
icebp
nop
mov
xor
call
push
mov
and
add
xor
jcxz
movsl
or
in
xor
repz
inc
ja
pop
adc
dec
pop
imul
movsl
ja
or
inc
pop
xlat
hlt
mov
int
popa
int
dec
mov
div
incl
jl
pop
mov
push
inc
cmp
pop
or
jg
cmpl
mov
arpl
in
mov
ret
xor
pop
out
lret
ds
addr16
test
fwait
sbb
dec
mov
jle
cmpsb
jae
inc
js
shll
and
push
xchg
push
in
out
and
and
comiss
daa
pop
push
addr16
mov
ljmp
xor
xchg
or
fdivp
mov
sub
xchg
lahf
jbe
xchg
ljmp
call
outsl
cs
iret
or
xchg
cli
pop
cs
mov
or
fs
fisubs
test
fisttpl
jmp
jl
jno
mov
pop
mov
mov
repz
push
incl
xor
mov
adcl
sbb
mov
xchg
xchg
stc
testl
pop
jno
mov
out
cmp
cld
mov
jp
js
cwtl
shl
lods
sub
inc
dec
add
movsl
push
dec
test
cmpsb
lret
ja
gs
mov
dec
cmp
add
arpl
pop
jle
sbb
out
divl
jp
stos
push
inc
repnz
dec
cs
jnp
mov
scas
and
jae
push
sub
xor
dec
mov
xor
mov
lea
mov
lods
xchg
mov
repnz
dec
lods
and
arpl
js
lret
std
dec
scas
imul
xlat
xchg
insl
cmpsl
xorb
divl
jns
mov
and
loopne
add
ljmp
sbb
dec
in
push
push
test
pop
insb
mov
mov
mov
sbb
jns
ss
cmp
rep
inc
stos
push
xchg
out
or
insb
xor
push
push
sub
ror
adc
dec
lea
push
fwait
or
inc
repz
jl
test
sub
and
adc
mov
faddp
push
and
mul
or
mov
popa
dec
call
lds
add
imul
mov
and
sbb
cmp
fimuls
mov
cmc
mov
push
inc
push
mov
or
xchg
fidivrs
loope
rcrl
ljmp
sbb
out
jne
jmp
mov
cwtl
int
lods
jo
imulb
sub
pop
es
cld
xchg
jbe
arpl
in
and
or
push
in
outsl
out
in
sub
inc
es
les
mov
add
xchg
cmp
out
cmp
mov
add
push
fs
popa
push
or
jb
mov
bound
sarb
xchg
push
lcall
in
jecxz
decl
mov
jmp
adc
rolb
shrl
push
mov
daa
jb
inc
jne
inc
outsl
push
in
sbb
xchg
sti
jbe
xchg
dec
dec
in
lods
les
push
push
jmp
mov
xlat
in
pop
adc
loope
fsts
scas
jbe
add
shrl
es
dec
fbld
fmul
ror
iret
das
into
movsb
push
pusha
adc
insl
rcrl
mov
loope
inc
jl
pop
mov
imul
push
lahf
fwait
push
lret
pop
aas
mov
push
repnz
xchg
xchg
int
xchg
add
and
sub
mov
push
sahf
repz
xchg
xchg
dec
sub
iret
jb
es
xchg
cmp
testl
imul
add
push
movsl
pushf
pop
lea
movsl
test
cmp
divl
dec
dec
add
iret
pop
add
add
xor
out
push
push
inc
cwtl
adc
mov
xchg
jge
pop
add
nop
iret
adc
jbe
test
in
gs
pop
jecxz
out
mov
lods
cmp
push
pop
stos
xor
xchg
out
in
insb
sub
adc
xchg
dec
cmp
fstpt
pop
ficomps
leave
sub
loope
fstpl
pop
jno
lahf
push
ficompl
inc
sub
xor
lods
jae
pand
mov
out
push
aam
xchg
insl
popf
xor
and
js
in
push
test
bound
cmp
fstl
adc
sar
icebp
fcmovnu
inc
sbb
shlb
dec
fnstenv
shl
add
xchg
sbb
out
imul
aaa
gs
pop
adc
xor
push
imul
lock
xchg
add
and
lahf
rcrb
bnd
xchg
lea
fwait
cli
dec
sub
and
out
push
xchg
mov
movsl
leave
dec
fsubs
cmp
inc
mov
testl
mov
adc
adc
adc
xchg
add
mov
cli
xlat
cld
mov
fdivrs
sub
push
push
std
ret
test
insb
sbb
xorl
sub
push
icebp
add
cld
nop
cmp
or
aam
fcompl
bound
sub
enter
daa
pop
ja
cmp
mov
mov
dec
cmp
int
data16
inc
ficoms
fwait
add
gs
shlb
bound
int
shrl
mov
fistps
mov
mov
call
adc
es
dec
xor
sbb
sbb
filds
mov
les
xor
decl
pop
int
cmp
dec
lret
iret
ds
dec
cld
push
add
cmp
or
or
push
dec
mov
cli
mov
xlat
xor
popa
sbb
lock
daa
stc
mov
xchg
int
mov
ret
fimull
bound
sub
test
inc
sub
sbb
sbb
adc
and
inc
mov
push
mov
icebp
insb
mov
and
mov
repnz
daa
retw
scas
pop
lret
cmp
mov
mov
mov
or
iret
and
sbb
dec
bound
mov
mov
add
and
jnp
or
add
cmc
xchg
cmpb
andl
jnp
cmp
push
es
sbb
fwait
xchg
jl
sub
and
cmp
mov
sub
or
xor
popa
lock
xchg
clc
adc
and
cmpsl
mov
aas
mov
cltd
lods
add
adc
loope
or
scas
and
push
mov
std
insl
push
push
add
xchg
push
adc
negl
cmpsl
fstl
hlt
out
clc
dec
out
and
mov
fdivrs
test
iret
outsl
lret
jg
inc
sbb
sbb
sbb
xor
pop
sbb
mov
clc
ret
cmpsb
lods
push
roll
jbe
mov
add
or
add
mov
fwait
test
pop
mov
push
jle
pop
jae
outsb
jne
cs
mov
imul
xlat
or
mov
sub
std
pop
jnp
pop
jl
cmp
rcl
enter
mov
in
sub
sbbl
fisubl
dec
dec
inc
push
jnp
popa
sub
andl
and
cwtl
inc
testl
pop
mov
xor
jo
aam
clc
cwtl
fisubs
mov
push
inc
dec
vmovupd
loope
jbe
push
pop
xchg
jne
xchg
jge
std
xchg
sbb
stc
xor
pop
or
jae
inc
or
mov
movsl
call
out
mov
mov
push
loope
jae
mov
popf
inc
mov
push
mov
mov
or
push
ret
xchg
js
cltd
test
cmpsb
pusha
in
outsl
add
cmp
sub
stc
inc
mov
in
jb
cs
push
sbb
icebp
pop
scas
mov
inc
adc
das
scas
cmpsl
adc
adc
inc
cmc
ja
in
or
and
adc
jecxz
jecxz
out
out
aad
xor
das
out
push
pop
mov
lcall
dec
push
test
xchg
sbb
stos
inc
mov
je
pop
jmp
or
push
mov
jecxz
xor
jmp
inc
and
clc
inc
mov
cmpb
jl
rorl
mov
fisubrs
cmp
dec
push
sahf
jno
test
ja
sub
test
ss
int
mov
fwait
cld
dec
es
scas
fildl
leave
mov
stos
mov
mov
jnp
mov
enter
stos
jp
dec
test
int
fsub
push
mov
or
lods
mov
push
fldcw
sub
mov
sbb
and
mov
add
negl
mov
mov
popa
adc
test
stos
cmpl
push
adc
adc
addr16
stc
test
mov
movsl
shlb
lret
ja
mov
jmp
or
mov
inc
inc
loope
stos
sahf
je
pushf
sub
and
test
mov
subl
inc
hlt
or
xor
ret
repz
dec
push
ret
adc
cld
frstor
jg
pop
mov
in
and
iret
and
xor
dec
xor
clc
cmp
pop
and
repz
and
ljmp
shll
adc
bound
or
pop
sub
cmpsl
sbb
icebp
jo
sahf
jns
fsubs
add
arpl
les
push
imul
sbb
pop
movsl
cmpsl
sub
mov
cmp
xorps
lea
dec
pop
push
add
outsl
test
xor
lcall
cmp
aaa
lcall
xchg
mov
or
mov
stos
icebp
out
imul
ret
fldenv
mov
dec
insb
jnp
and
jno
and
fnstsw
or
add
push
ret
jg
and
out
dec
push
sbb
mov
cltd
scas
dec
push
cltd
pop
mov
cmpsb
jo
mov
sub
sub
iret
into
push
imul
mov
lcall
imul
jbe
bound
push
fs
imul
dec
mov
mov
dec
jns
xor
mov
lods
in
adcl
loopne
mov
xchg
repnz
xchg
mov
mov
mov
inc
sar
push
pop
andb
sub
loopne
stos
ss
decb
push
lock
decl
mov
in
ret
stos
jle
mov
sub
loop
push
popa
add
outsb
jne
inc
push
lcall
aam
fidivrl
scas
dec
pop
rcr
mov
add
in
xchg
daa
aas
les
push
and
pop
outsb
jl
cld
mov
sub
cmpl
out
hlt
lret
nop
jle
daa
jne
mov
push
mov
rol
cltd
jge
out
pop
jmp
loopne
in
and
mov
lret
loope
movb
push
jg
jo
stos
repz
xchg
add
jbe
stos
in
mov
mov
mov
dec
enter
movsb
adc
jae
repnz
shll
frstor
fisttps
clc
je
or
xor
xlat
pop
ficomps
orb
lret
xchg
pop
sbb
add
mov
out
fwait
xor
pop
dec
test
mov
cs
push
mov
and
je
push
data16
adc
and
mov
mov
clc
dec
xchg
mov
or
mov
push
dec
scas
and
jb
xchg
gs
mov
je
adc
pop
les
xchg
lea
mov
push
sbb
xchg
xchg
cmpsl
mov
in
mov
xor
iret
imul
setb
add
imul
adc
jp
int
test
inc
push
adc
and
les
or
enter
push
cwtl
cmc
cmp
push
xorb
scas
dec
cltd
push
xchg
dec
cmp
fnstcw
fucom
lods
push
pop
xor
push
adc
lret
popf
lcall
xor
out
out
mov
jecxz
das
add
ds
icebp
inc
and
out
ds
or
ja
jmp
cli
ljmp
mov
jne
daa
push
or
mov
test
lcall
mov
dec
cmp
shl
lcall
in
leave
jno
pinsrw
sahf
push
or
aam
pop
cmp
movsl
jmp
mov
mov
mov
in
cli
in
nop
and
lret
xchg
out
xlat
mov
mov
pmaxsw
dec
xor
push
leave
dec
dec
cltd
or
lahf
adc
pop
test
shll
pop
fcoms
add
mov
push
xlat
lret
je
sub
fstps
mov
fwait
xchg
pop
dec
inc
imul
stos
push
js
xchg
divb
jae
jne
push
pop
frstor
xor
push
fisubrs
std
adc
mov
fidivs
and
pop
cmp
in
or
pop
cmp
mov
push
in
gs
mov
fcmovbe
xor
orl
and
cmp
lret
push
lods
fsubrs
xchg
sub
push
xor
icebp
inc
mov
jne
out
cmp
movsb
loopne
mov
pop
mov
dec
xchg
or
push
mov
jge
jl
bound
mov
cli
inc
test
sbb
mov
fstl
imulb
outsb
loope
ss
jp
imul
mov
iret
xor
andb
dec
popa
adc
mov
xchg
sub
push
jo
pop
nop
lret
clc
inc
dec
iret
mov
dec
fisttpll
mov
inc
mov
mov
mov
adc
add
sbb
cmp
outsl
aam
ret
movsl
subb
push
inc
imul
lcall
sbb
ja
loop
mov
adc
fs
add
jns
in
popf
ret
xchg
lods
xchg
pop
jne
sbb
popf
fnsave
mov
push
hlt
jns
push
dec
and
pop
bound
xchg
jge
pushl
lods
es
jg
cmp
leave
lds
sub
dec
mov
cli
cwtl
out
test
ss
mov
daa
adc
fnsave
cmp
mov
int3
jp
test
cmp
aad
lret
xchg
cld
lret
mov
mov
nop
jbe
mov
ja
sbb
jns
adc
pop
mov
mov
idivb
sub
in
push
jl
add
mov
and
scas
dec
lret
cmp
pop
jmp
bound
addr16
mov
push
push
mov
out
jne
mov
ds
fisubl
push
sbbb
mov
sar
mov
xor
xor
push
shll
scas
jmp
js
iret
jp
pop
jl
cmp
pushf
adc
sub
mov
inc
pop
adc
gs
pop
scas
jg
adc
mov
and
inc
dec
lret
test
in
call
adc
jl
xchg
cmp
outsb
inc
jge
movsb
iret
inc
subb
in
cmp
stos
and
and
popf
adc
and
bound
cmc
dec
fnsave
imul
aas
sahf
mov
inc
xor
mov
fs
ds
leave
push
in
mov
push
loope
test
mov
add
data16
mov
mov
add
xchg
xchg
test
mov
push
aam
clc
sbb
dec
mov
jbe
out
sbbb
adc
data16
mov
xchg
push
sub
addr16
lcall
fisttps
fcoms
xchg
and
shl
std
mov
mov
mov
movsb
sbb
adc
popf
lock
stos
js
sub
fldt
shll
cld
fists
xor
lret
cmp
jl
jae
prefetch
pop
add
notb
mov
out
jno
cli
rcrb
icebp
test
pop
es
fisttps
mov
cmpsl
repnz
inc
xlat
pop
lcall
int3
stos
cwtl
repz
ror
lods
repz
fdivr
jge
scas
repnz
icebp
adc
jp
mov
mov
xchg
push
mov
fimuls
aam
aas
call
lret
jo
scas
fdivrp
jmp
mov
push
scas
mov
jl
movq
mov
jmp
loopne
sub
nop
vsqrtpd
dec
pop
and
xor
fsubs
out
jne
jbe
fyl2xp1
hlt
aaa
push
add
dec
shlb
fcmovnbe
and
push
jae
dec
mov
mov
fwait
push
inc
insl
mov
pop
mov
mov
or
scas
notb
nop
mov
scas
inc
ss
lods
stos
pop
xchg
cld
dec
add
sbb
pop
test
ret
loop
add
fstl
push
inc
fistpl
push
loopne
sub
cwtl
xor
addr16
ja
xchg
xor
aam
dec
cmp
repnz
add
pusha
add
push
aad
inc
cmp
adc
popf
sub
mov
sbb
sbb
pop
les
add
stos
inc
in
cmp
pop
dec
shrl
jno
iret
fdivl
stc
and
pop
stos
cmc
std
out
mov
pop
push
aam
mov
stc
movsl
mov
repz
cld
push
cmpsb
sbb
push
insl
xor
das
ljmp
fldenv
mov
push
bound
in
dec
loopne
jo
sbb
xchg
jp
inc
xor
adc
mov
and
jmp
mov
adc
je
movsb
popf
movsl
pop
hlt
jge
xor
fwait
ss
mov
cmp
xchg
fisttpl
xchg
subb
mov
ljmp
aaa
inc
mov
xor
inc
shlb
cmc
stc
icebp
mov
gs
jge
enter
addb
inc
loopne
popf
in
inc
mov
jecxz
cli
lret
in
into
mov
cmp
out
push
sub
jge
pop
cmpl
sbb
cmp
jle
jg
aaa
call
jmp
sbb
shrb
inc
cmp
fmull
xlat
repz
ds
mov
sbb
mov
add
lods
jmp
push
icebp
pop
lds
inc
push
ds
insb
jbe
adc
dec
icebp
bnd
movsl
addb
inc
pusha
notb
pop
addr16
mov
add
cld
xchg
enter
test
xchg
pop
xchg
push
dec
pop
int
mov
adc
cmpb
lret
daa
sti
les
ss
shlb
add
hlt
ret
aam
shl
clc
je
cmp
in
mov
adc
xchg
popa
sub
iret
ds
cmp
daa
cwtl
movsl
fsubrl
not
pop
aam
xchg
ret
nop
out
rcl
mov
lret
cld
ret
scas
or
mov
cmpsb
mov
mov
imul
sbb
test
push
mov
jle
add
es
inc
cs
das
add
lock
sbb
pop
shrl
sub
fdiv
ss
shlb
cs
pop
enter
in
movsb
iret
fnstenv
loope
test
arpl
jle
mov
jmp
add
out
scas
ss
rclb
sub
push
popa
cmp
arpl
test
shlb
jecxz
in
lea
jg
orl
adc
fmull
fisttps
mov
push
mov
xchg
cmp
pop
or
adc
addr16
mov
insl
fdivrl
loopne
inc
je
cwtl
daa
and
adc
aas
xlat
add
xchg
sub
mov
push
cmp
sub
sbb
pop
mov
sbb
or
xor
aaa
sbb
push
push
jge
pop
gs
xchg
stos
xchg
sbb
imul
ja
cmpsl
fdivrs
inc
sbbl
addr16
push
xchg
in
sub
icebp
or
mov
divl
cmp
mov
in
xchg
cltd
in
cltd
fstl
inc
mov
ret
aam
xchg
xchg
imul
jb
cltd
stos
inc
es
mov
xor
mov
xor
je
shlb
movsb
int3
iret
jg
insb
lods
or
adc
xchg
or
scas
dec
inc
jle
test
jno
push
xchg
inc
cmp
je
por
cmp
push
mov
or
sbb
in
stos
jle
cmp
push
adc
add
enter
or
lahf
push
sti
xchg
mov
pop
pop
fwait
inc
adc
lcall
push
cli
clc
lahf
enter
jns
jmp
out
sub
lods
icebp
sub
adc
inc
xor
aas
icebp
inc
imul
pop
xchg
int
push
push
cmpsb
aas
test
push
std
dec
pop
sbb
sahf
outsb
xchg
out
pushf
addr16
mov
stos
and
pop
std
loop
scas
xor
out
das
mov
mov
adc
and
daa
jmp
add
sti
call
xchg
aad
lds
cmc
rclb
ret
jp
in
sub
jns
in
or
adc
jae
and
bound
dec
scas
rcl
insl
or
xor
divl
add
out
xor
lcall
aam
loopne
mov
mov
outsb
adcb
xor
test
sub
lods
mov
shrb
jl
adc
movsb
pusha
out
push
push
into
add
filds
sub
xor
or
outsb
and
lret
dec
jne
test
stc
stc
repz
sbb
mov
jae
ss
cs
pop
or
mov
aas
xor
and
ljmp
inc
jle
jg
shll
js
in
add
cltd
ja
pop
in
movsl
and
mov
and
cmc
jecxz
or
adc
xor
adc
and
xchg
cmpsl
cmp
dec
pop
cld
clc
clc
fs
xchg
adc
cmp
lods
mov
pop
movq
fwait
test
stos
lea
push
mov
inc
lock
test
jbe
and
xor
or
inc
dec
aaa
ss
sub
stos
je
stc
clc
cmp
lods
adc
inc
mov
push
xchg
popa
shll
or
inc
sbb
cwtl
pop
repz
ss
or
adc
pop
gs
jecxz
ja
test
mov
aas
mov
dec
fwait
xor
sbb
sub
roll
sbb
orl
mov
loop
testl
int
negb
shlb
mov
jae
aad
sbb
lret
mov
mov
gs
out
mov
cwtl
daa
fildll
mov
movsb
enter
pop
or
mov
cmp
adc
mov
in
cwtl
mov
shlb
les
pusha
mov
incb
loopne
fnstenv
xchg
cmc
push
jp
push
jb
jge
aad
mov
out
movsb
imul
inc
ret
sti
dec
mov
lea
fildll
inc
jecxz
cwtl
cld
dec
negb
pop
and
jb
cmp
xchg
pop
frstor
test
dec
and
loopne
xchg
and
addr16
ljmp
popa
push
xchg
push
cld
ret
lods
outsb
aam
adc
stos
mov
push
jns
pop
push
aam
sub
bound
out
shlb
hlt
popa
repnz
adc
mov
test
adc
fs
out
xor
shlb
or
cwtl
and
addb
mov
sbbl
xlat
xor
pop
jbe
int
pop
sbb
je
sarb
mov
sbb
xlat
sbb
jmp
pop
fnsetpm(287
xchg
andl
ret
mov
clc
push
add
bound
push
sub
sbb
cmpsb
jle
in
imul
je
dec
mov
imul
jae
sets
cmpsl
fsubrs
jno
in
cld
pop
mov
outsl
sbb
xor
push
mov
sbb
xchg
cmp
cwtl
pop
mov
and
lret
ljmp
std
xor
xchg
xchg
inc
test
jnp
fxch
nop
test
inc
fucomp
out
mov
cwtl
or
cli
inc
sub
sti
bound
mov
pop
mov
mov
mov
dec
add
xchg
or
mov
pop
jg
or
push
popf
out
xor
xchg
lcall
push
and
sbb
aam
test
mov
mov
sbb
dec
stos
pop
int
scas
dec
ds
dec
fwait
aas
push
mov
in
mov
aaa
lcall
out
pusha
or
mov
jns
inc
imul
mov
sub
pushf
mov
mov
pop
pop
add
pop
pop
sti
repnz
mov
test
clc
pop
stc
pop
xor
mov
dec
xchg
mov
sub
rorb
es
sahf
and
arpl
jb
mov
scas
mov
int
insb
pop
scas
call
mov
ret
fdivrl
inc
jb
xor
lea
cmp
push
push
insl
pop
xchg
add
sub
outsl
enter
sahf
sbb
add
aam
pop
xor
lods
test
xchg
sub
jecxz
xchg
lcall
negb
xchg
mov
pusha
jno
out
dec
lock
mov
adc
mov
xchg
xchg
subl
test
mov
iret
and
jmp
mov
jbe
cmp
lea
imul
or
shr
hlt
les
pop
cmpsb
inc
or
pop
in
inc
and
int3
cmp
sbb
or
bnd
loopne
mov
imul
push
jge
and
or
dec
inc
aad
fmul
xor
pop
mov
jae
push
xchg
sbb
shlb
inc
add
stc
jno
pop
jbe
xor
inc
xlat
inc
pushf
aaa
shrl
jmp
lahf
std
test
cld
jno
add
ss
divb
inc
mov
ljmp
rorl
add
loop
fcmovnbe
loope
adc
stos
fsubl
and
fisttpll
pop
jmp
cmp
add
add
adc
jl
jno
les
popf
mov
dec
test
and
mov
push
aam
pop
push
cmovle
scas
subl
xchg
push
es
rcl
jb
daa
sbb
jp
xor
sub
pop
pop
aas
or
movsl
adc
xorl
xchg
and
pop
dec
jg
and
push
in
cld
xchg
int3
in
push
call
lahf
xchg
lea
dec
jge
inc
push
inc
xlat
lods
fldcw
cmp
js
loope
inc
cmpsl
in
add
inc
mov
xorb
add
mov
sbb
cmpsb
jnp
cmpsl
rclb
nop
mov
pop
add
inc
cmpsb
daa
nop
jbe
lcall
dec
lock
sub
inc
or
jle
xchg
sub
push
add
cmp
mov
sti
pop
cs
xchg
mov
das
mov
mov
lret
xchg
sub
mov
mov
movsb
inc
ds
jmp
mov
cs
sarl
pop
jle
push
jle
mov
icebp
push
or
test
imul
dec
mov
hlt
or
push
jmp
fidivl
ss
or
dec
cmp
in
bound
mov
outsl
fcompl
movb
cmp
jae
xor
or
dec
insb
stc
insl
pop
push
std
sub
pop
push
ficoml
cmp
fimull
rsqrtps
cld
pop
lahf
into
jg
ja
es
test
aaa
mov
pop
insl
cld
enter
sub
and
xchg
iret
push
arpl
repnz
mov
pop
fstpl
outsb
xor
jb
popf
in
push
push
stos
mov
mov
shrb
mov
add
add
adc
ret
add
pushf
mov
out
lret
inc
lea
add
cmp
mov
adc
lcall
push
fdiv
jne
pop
fadd
insl
cmp
mov
imul
out
xchg
push
pop
mov
sub
cltd
dec
and
pop
jbe
cli
inc
cmc
shrb
sbb
or
aam
into
mov
inc
loope
ss
repnz
jecxz
push
inc
mov
xchg
loop
into
mov
cmpsl
decb
hlt
clc
inc
out
mov
push
lea
nop
sub
mov
mov
imul
pusha
mov
sarb
pop
jmp
hlt
xor
cmpsb
dec
in
das
pusha
jbe
popa
in
shlb
loope
xor
and
add
inc
je
push
mov
sbb
add
cmp
orb
jne
lods
into
push
mov
scas
mov
jl
imul
xchg
outsb
lods
dec
fdivrs
sbb
fidivrl
repz
sbb
xor
or
enter
mov
aaa
inc
pop
dec
mulb
jb
ror
jecxz
dec
jae
mov
fldl
sbb
add
adc
cmc
rorl
jle
mov
loope
xchg
cmp
inc
mov
ret
jl
cmp
fnstenv
mov
imul
adc
pop
dec
mov
jnp
or
fcompl
xchg
mov
mov
scas
cmpsl
cmp
dec
int3
fsub
adc
and
jge
outsb
in
lock
dec
call
push
fistl
enter
pop
add
push
jle
stos
pop
call
das
fwait
hlt
sbb
sub
cmp
mov
test
loopne
jg
mov
imul
pop
aaa
jg
push
add
gs
ret
xorl
ss
push
mov
pop
popf
fstl
daa
push
aaa
sbb
das
xor
enter
cwtl
int3
scas
cmp
pop
pop
xchg
jnp
xor
insb
int
sub
mov
or
pop
or
stc
mov
dec
pop
jmp
bswap
sub
jp
sbbl
mov
cs
sbb
sub
cmp
les
mov
repnz
stos
dec
xchg
les
adc
mov
pushf
das
pop
mov
mov
fdivrp
bound
jae
inc
jge
cmovb
jbe
popf
lret
and
sub
mov
pop
dec
popa
jg
scas
scas
sar
fs
jb
lcall
dec
add
jae
test
call
pop
pop
jne
jle
jge
inc
lods
jae,pt
cld
fistpl
mov
dec
in
jle
and
push
mov
push
fs
push
xchg
mov
push
arpl
fidivl
hlt
iret
dec
sbb
adc
mov
adc
enter
mov
out
sub
jns
xorl
hlt
or
and
iret
stos
push
pop
xchg
inc
fidivl
jae
inc
mov
gs
ljmp
mov
cld
dec
ljmp
xchg
fsts
mov
cmp
orb
psadbw
ja
int3
pusha
mov
fnstenv
mov
adc
dec
push
je
or
pop
mov
dec
ret
mov
xor
nop
xor
jae
push
mov
cmp
mov
idiv
std
jae
inc
sub
cmpsb
or
inc
daa
in
popf
lods
out
mov
dec
xchg
pop
pop
mov
mov
sub
test
xchg
and
pop
iret
loopne
mov
adc
pop
cmp
jl
xor
mov
or
sub
loop
leave
insb
sbb
add
iret
int
xor
xor
in
popa
shll
insb
and
adc
aas
testb
inc
int
inc
scas
lret
push
or
mov
jae
aaa
outsb
cmp
ss
push
xor
mov
inc
xor
dec
fimull
mov
jge
popf
int
arpl
mov
fs
imul
adc
hlt
repz
sbb
addr16
and
pushf
lods
inc
adc
in
daa
lret
icebp
and
lahf
loop
inc
scas
pop
and
and
loope
push
add
push
jne
sbb
sbb
adc
mov
and
das
xor
je
xchg
push
dec
andb
mov
adc
cs
fsubr
icebp
xchg
rorl
loope
mov
aad
in
push
jns
pop
inc
aas
cmpsb
movsb
fwait
iret
mov
outsl
data16
ss
mov
in
aad
xchg
mov
push
pop
mov
push
ret
pop
sti
add
cltd
je
enter
outsb
std
dec
push
ret
inc
adc
sub
rcrb
imul
fwait
repnz
dec
adc
push
mov
cmpsl
lahf
je
push
xor
mov
push
and
add
test
xchg
dec
cmp
mov
out
cmovl
jb
cli
mov
push
es
iret
mov
mov
lret
repnz
scas
loope
aam
fidivl
mov
and
lock
push
sbb
pop
inc
push
sbb
iret
aaa
movsb
mov
int3
shll
in
es
cli
pop
jns
enter
add
sub
test
shrl
sbb
int
mov
imul
andl
fnstcw
jp
xlat
pop
adc
enter
aam
roll
subl
ret
mov
dec
clc
bound
fnsave
lods
lret
inc
movsl
push
inc
popf
fbld
xchg
cmp
sub
insb
clc
push
xor
iret
addr16
repz
lds
sbb
and
or
jge
cmp
arpl
sub
xchg
ret
orb
movb
dec
add
push
xchg
in
pop
sub
mov
and
xor
in
mov
bound
push
pushf
adc
dec
inc
xchg
dec
sbbl
mov
fisttpll
pop
cmp
pop
jge
daa
xchg
out
std
mov
lcall
push
dec
into
sarb
and
mov
lods
jbe
mov
jnp
stos
sbb
or
mov
mov
pop
mov
hlt
inc
fwait
adc
cmc
popa
iret
pop
xor
loope
arpl
mov
pop
inc
mov
subb
inc
pop
decl
dec
les
cmp
loopne
lret
jbe
dec
inc
imul
push
or
jp
cmp
sub
cltd
stos
xor
sarl
inc
sbb
mov
lea
xor
das
add
movsl
push
cmpsl
dec
fldl
xor
inc
test
and
sbb
rol
push
pushf
xchg
data16
mov
imul
sub
daa
sbb
sub
imul
add
loope
nop
shrl
insl
mov
test
cmp
adc
jae
addr16
dec
pop
xchg
jmp
aad
mov
insl
push
aaa
xor
sbb
sub
add
int3
hlt
and
sub
or
fwait
pop
push
out
push
inc
imul
push
mov
loop
cmp
inc
cs
mov
sbb
ja
xlat
sbb
mov
outsl
and
mov
mov
dec
mov
test
mov
sbb
pop
add
cmp
add
sub
mov
sahf
gs
imul
repz
andb
xchg
adc
aad
add
xchg
jo
and
test
int
ss
out
stos
scas
xchg
cmpsb
rcr
daa
jl
enter
push
push
push
push
clc
loope
pop
dec
lcall
cmp
inc
mov
xchg
leave
jbe
dec
sbb
jge
push
fcoml
cli
xor
push
cmp
pop
insl
es
in
pop
pusha
insb
xchg
sarl
jle
sbb
je
jbe
xchg
mov
cmpb
mov
sti
aas
and
and
push
mov
or
add
jb
mov
fiadds
movsb
mov
cmpsl
cmp
xor
in
divl
pop
popf
mov
daa
ja
gs
iret
cwtl
mov
into
movsb
mov
xor
clc
out
jb
arpl
mov
dec
andb
push
mov
dec
ds
jnp
or
arpl
shl
cmpb
outsl
insl
xor
lahf
loope
inc
ret
or
out
hlt
xor
push
ret
data16
adc
rolb
and
ja
dec
mov
xchg
int
leave
inc
mov
push
cmpsb
aam
sub
das
jb
dec
fsubr
sub
mov
push
lret
push
pushf
jae
push
push
movsl
scas
xor
icebp
ret
fwait
mov
pop
push
sbbl
sbb
and
xor
repz
loope
and
jnp
fisubrl
lods
or
jg
hlt
push
xor
adc
fs
shll
out
hlt
sbb
or
mov
jae
pop
push
pop
enter
sub
add
in
and
adc
fnstenv
lahf
fdiv
mov
int3
rcl
pop
stos
xor
dec
test
sbb
rol
fbld
inc
xchg
dec
pusha
jae
adc
outsl
mov
sub
jae
rclb
mov
xchg
idivb
out
cmp
xchg
cmpsb
inc
out
pop
pushf
jae
shrl
aas
lock
xchg
mov
pop
js
or
pop
mov
call
cmp
jb
mov
lods
enter
je
scas
outsb
xor
cmpsb
lea
and
jecxz
lcall
test
sahf
sub
xchg
les
sbb
mov
jg
inc
and
in
push
ljmp
push
dec
jg
fisubrl
movsb
ret
clc
cmp
ja
std
filds
sbb
push
cmp
pop
rcrl
cmp
mov
sub
test
aas
sbb
jl
popf
je
mov
jle
mov
xchg
imul
push
xchg
or
jmp
fs
push
out
and
aad
bound
jle
push
pop
lret
int3
ja
adc
in
stos
cltd
cwtl
leave
or
jns
sub
sbb
scas
jmp
rcl
xchg
jmp
mov
js
xor
sbb
les
adc
add
inc
push
mov
ja
push
je
push
jb
repz
cmpsl
fmul
mov
fstpt
xchg
lahf
das
sub
bound
mov
jb
test
shl
stos
xchg
test
cltd
nop
cmp
xchg
pop
adc
pop
mov
sub
in
aaa
sub
add
jle
jl
adc
icebp
test
outsl
movsb
add
jb
cmpb
sbb
out
jnp
out
xchg
pop
imul
and
es
cmp
dec
sub
stc
jecxz
aas
sub
in
rol
movsb
jg
sub
out
int
add
andl
xor
push
je
add
cld
lret
sbb
push
sbb
mov
enter
push
lds
xchg
fisubl
adc
scas
test
mov
ds
sub
das
popf
jecxz
mov
mov
shrl
mov
popa
pop
mov
les
jae
das
sbb
adc
mov
push
push
fdivrl
xchg
xchg
mov
and
jb
sbb
inc
push
mov
int3
push
cmp
or
ja
push
ja
hlt
in
sub
mov
cmp
fisubrl
or
fs
or
ljmp
mov
or
pop
mov
jbe
dec
fildll
lcall
stc
sbb
add
cmp
cmp
dec
int3
aas
je
leave
mov
es
rcrb
mov
loope
negl
fadd
iret
push
in
xchg
cmp
sub
dec
ret
pop
xor
mov
lahf
cld
test
cmp
pusha
cmp
or
aam
icebp
movsl
xlat
lcall
mov
shrl
inc
or
sbb
popa
mov
imul
dec
xor
and
dec
cmp
cltd
hlt
mov
and
cmpsb
mov
mov
out
scas
lret
ljmp
movsb
sub
lods
xchg
nop
sub
sar
sbb
xor
imul
lods
test
push
and
mov
cmc
imul
mov
in
mov
push
addr16
add
xchg
cli
inc
jmp
stos
mov
push
int
sbb
aam
test
or
and
aam
jb
push
dec
rolb
mov
imul
adc
jmp
jg
lods
jns
jns
xchg
bound
imul
push
rcrl
shl
cmpsb
xor
cmp
addb
adc
les
sub
pushf
enter
pop
or
pop
cwtl
sbb
lcall
mov
repz
push
lea
mov
jb
rolb
sub
call
popf
mov
repz
loopne
repz
lret
add
or
pop
lea
adc
mov
andb
and
pop
into
cwtl
ffreep
int3
mov
aad
insb
mov
xor
inc
ja
adc
hlt
or
mov
pop
notb
subb
dec
dec
shl
adc
mov
fisttpll
loop
mov
pop
push
mov
out
xchg
xor
and
and
js
bound
fdivl
xchg
cmp
cmpsb
loope
dec
pop
xor
insb
jb
mov
dec
lret
scas
imul
int
cmp
lock
imulb
pop
lret
in
mov
mov
mov
scas
sbbl
loop
mov
sbb
cmpsb
jle
add
aaa
mov
or
stc
cli
fistps
mov
rcll
jbe
fcmovu
mov
push
mov
dec
add
xchg
and
jl
gs
lret
inc
adc
dec
pushf
orl
imul
lret
repz
inc
xchg
imul
imul
fisubl
xchg
inc
scas
cmpsb
push
cmp
aam
xchg
cmp
mov
xchg
sub
cmp
scas
mov
ljmp
cmpb
pop
leave
sbb
pop
dec
pop
gs
jns
out
jns
add
mov
jno
cmp
adc
fimull
negl
fstl
sahf
push
leave
jne
and
mov
outsb
add
pop
push
pop
std
into
add
push
add
lods
in
push
or
push
ljmp
minps
cmp
sbb
fcoms
dec
pop
adc
xchg
inc
sub
andb
or
imul
test
data16
bnd
cmp
je
inc
or
out
sbb
adc
aam
jbe
xchg
inc
mov
adc
sub
dec
clc
int3
mov
xchg
aaa
cmp
data16
cmpsb
sbb
es
mov
push
cmp
mov
out
inc
push
jle
jp
and
test
push
out
arpl
push
ret
lahf
in
mov
clc
mov
lods
imul
inc
test
xchg
fistpl
jae
mov
aaa
fnstenv
cmp
lcall
adc
scas
out
popf
xchg
mov
movsl
aad
cltd
leave
aas
jmp
dec
imul
fmulp
fcmovb
mul
push
sbb
xchg
xchg
adc
mov
js
cltd
scas
imul
clc
icebp
pop
iret
mov
in
mov
jge
mov
jmp
int3
inc
push
dec
ret
pcmpeqb
mov
cli
inc
push
jno
cltd
int3
inc
shr
ror
scas
rorl
jns
xchg
mov
push
and
in
bound
mov
mov
ljmp
or
mov
push
cld
push
pop
nop
lcall
jno
and
or
cmp
lods
or
adc
pop
dec
aas
adc
cmpsl
mov
mov
dec
lret
iret
pop
icebp
lret
fucomp
push
lret
jp
adc
and
xchg
xchg
daa
loope
dec
lret
cmp
outsl
mov
push
dec
add
push
fcmovb
or
xchg
std
and
dec
int3
ljmp
fs
mov
and
xor
push
lods
lods
imul
rorl
and
sbb
int3
cmpsb
dec
mov
dec
mov
push
sbb
adc
notb
mov
mov
xchg
in
inc
mov
loopne
jbe
sbb
jns
mov
ja
xor
stos
arpl
xchg
js
cwtl
in
inc
inc
inc
and
push
adc
notl
pop
push
mov
or
add
ret
dec
in
cmp
push
in
push
adc
ret
jmp
pop
push
lret
testb
or
sti
xchg
enter
adc
cmpsl
push
mov
add
jmp
mov
ljmp
dec
movsl
mov
sbb
xchg
test
sbb
lock
xchg
xchg
pop
outsl
fmull
jae
ret
xlat
xchg
xchg
adc
push
and
pop
aam
mov
mov
xor
out
xor
push
fs
fs
mov
dec
ret
nop
mov
cmp
maskmovq
pop
jle
sbb
into
dec
or
fstpt
mov
jne
lahf
add
jmp
lret
xlat
adc
movsl
cltd
xor
sbb
fnstenv
das
inc
popa
rcrb
lret
shrb
mov
xor
into
xchg
js
xor
and
xchg
bound
add
and
mov
mov
movsb
mov
jb
pop
cmp
add
sub
pop
pop
rcrl
lret
xchg
pop
rorl
mov
scas
lods
push
push
aas
js
pop
fxch
xchg
movsb
and
mov
data16
sub
sbb
std
xor
cmc
rcll
loopne
xchg
adc
xchg
lahf
loope
xorb
cltd
mov
aas
cmp
call
ret
lods
ret
fadds
cltd
cmp
jnp
popf
lods
arpl
xchg
mov
je
fstps
adc
ret
call
std
dec
push
fcmovnb
hlt
cmp
push
inc
inc
ficoml
sti
push
shl
mov
in
mov
aad
test
leave
jb
jp
sbb
std
imul
pop
sub
or
sub
cmpsb
inc
sbb
sbb
sub
or
inc
sti
sbb
adc
lea
adc
lods
and
mov
aad
pushf
mov
fsub
pop
std
mov
testl
lds
mov
repnz
cmp
and
int
movsb
mov
cmp
fisubl
add
jb
mov
test
stos
mov
nop
or
std
add
daa
aas
sbbl
aaa
or
mov
mov
testb
or
roll
push
sub
mov
jne
lds
pop
popf
cs
ffreep
pushf
into
movsl
arpl
and
imul
fnsave
fsub
or
mov
pop
lock
cmpsb
icebp
push
mov
inc
cltd
push
push
jbe
in
jo
pop
mov
mov
ret
jg
pop
call
inc
out
sbb
out
mov
inc
add
jns
dec
inc
xlat
mov
cmc
jno
xchg
out
lds
ja
divb
loope
enter
lret
pushf
fadds
scas
push
nop
xchg
add
aas
jnp
lds
loopne
jns
xor
in
mov
mov
push
adc
sub
call
jl
or
sub
push
cmp
adc
xchg
sbb
dec
in
sub
cmp
std
dec
cli
es
sbb
negb
stc
daa
mov
loope
hlt
aad
xchg
inc
jae
scas
ja
mov
xchg
fistpll
repz
int3
loope
addb
push
aas
sbb
sbb
outsb
jge
mov
jmp
jmp
push
jb
arpl
sub
xor
std
adc
push
lahf
shl
push
adc
dec
fcompl
xchg
ret
adc
fwait
or
bound
or
std
stc
mov
jae
push
outsl
jge
movb
and
xor
sub
dec
fistl
push
cwtl
mov
dec
repz
mov
notl
outsl
jbe
cld
mov
negl
mov
mov
loopne
push
inc
std
sub
das
or
mov
push
adc
sbb
xchg
loop
cmp
loope
into
xlat
fiadds
pop
fcmovbe
and
lcall
inc
or
pop
mov
dec
jno
popa
out
push
jl
pop
aaa
ficomps
enter
push
xor
mov
sbb
jbe
imul
push
xchg
mov
sbb
out
repz
incb
enter
fsub
xor
jle
adc
pop
enter
lea
xlat
push
mov
in
cmp
fidivrs
mov
dec
fiaddl
pop
adc
insl
ret
jecxz
push
lret
ja
inc
sti
or
jmp
xlat
sbb
fpatan
mov
xchg
aaa
data16
mov
dec
imul
mov
jnp
lods
cli
out
sbb
clc
adc
fldl
imul
fisttpl
pusha
stos
cmp
pushf
fimuls
js
arpl
sbb
xchg
scas
loopne
xchg
out
xchg
push
mov
mov
xchg
add
cmp
dec
mov
ret
mov
cld
aaa
mov
or
mov
xor
in
xor
sub
push
rcrb
std
push
bound
push
aaa
in
sbb
lock
sahf
mov
mov
xor
mov
ret
popa
cmp
jns
dec
mov
xchg
scas
js
dec
jo
inc
rol
jnp
pop
mov
fidivl
aaa
sub
jmp
ds
or
rcr
push
or
inc
js
xor
lahf
and
cmc
subb
mov
cmpsl
pop
iret
or
in
lods
adcb
pusha
test
sbb
add
xor
mov
jno
xchg
push
std
getsec
rcrl
inc
push
push
cmp
jae
hlt
sbb
movsb
adcl
leave
jno
in
jg
repnz
int
add
das
lods
cltd
jge
sbb
mov
popf
lods
loop
jp
out
mov
xchg
clc
sbb
or
dec
enter
cld
scas
mov
xor
addl
divl
sub
mov
mov
xlat
hlt
cmpsb
cld
lods
js
pop
mov
ret
lea
dec
pop
sbb
in
pop
sub
add
shlb
js
jmp
dec
nop
es
inc
fdiv
ja
dec
pusha
cli
idivl
lret
mov
add
jmp
in
fimull
div
sub
push
bound
mov
xchg
xchg
leave
rcr
ret
mull
jno
ret
inc
fsts
adc
jne
dec
jmp
xor
dec
loop
arpl
jae
js
clc
cmp
add
daa
cmp
sar
lea
or
lock
sub
sub
daa
xor
cmpsl
out
jnp
xor
lea
xor
xchg
xor
pop
fbld
lods
iret
xchg
in
lret
add
es
data16
xchg
adc
roll
adc
pop
mov
pop
mov
inc
lcall
cmp
sub
inc
mov
test
or
repz
dec
adc
stos
fcmovbe
jmp
xor
int
jno
cmpsb
mov
shl
inc
sbb
clc
ja
and
mov
jge
adc
pop
jno
je
push
jne
push
fisttpll
xor
cwtl
add
sbb
fcmovbe
dec
divl
repz
fs
and
cld
and
xchg
jg
adc
jmp
cwtl
leave
adc
cld
loopne
xor
or
or
cmp
test
and
xchg
aam
repz
or
pushf
out
fistps
clc
jae
push
and
mov
inc
xor
shl
jg
xor
iret
xor
int3
or
fistps
movsb
jmp
call
into
js
xchg
test
lods
lret
sbb
sarl
sub
sti
xchg
mov
push
shll
dec
inc
js
jmp
inc
stos
jns
sahf
lret
inc
adc
cmp
imul
loop
popa
xlat
loopne
gs
daa
mov
mov
daa
adc
xchg
mov
negb
movsb
add
jp
stos
shll
mov
xchg
int3
loop
insl
xchg
dec
mov
sbb
inc
mov
test
int3
in
inc
out
push
and
and
mov
jo
fsubrp
into
cmp
jbe
mov
pop
js
mov
sbb
lods
rclb
jb
arpl
or
xchg
leave
push
out
movsl
jnp
dec
outsl
clc
jbe
pop
cmovge
insl
hlt
mov
jne
mov
js
dec
insl
popa
or
push
mov
sub
dec
pop
or
ss
or
and
jg
jno
stc
mov
inc
mov
pop
test
rolb
fimull
test
rcr
imul
stos
xor
cmp
pushf
sub
dec
xor
xchg
cmp
jo
mov
mov
mov
push
push
out
push
aad
xor
repnz
ret
popa
jne
inc
jnp
mov
mov
dec
loope
pop
xchg
mov
jae
mov
jbe
std
jno
sub
jno
sbb
fsubr
in
movsl
loop
adc
sarl
mov
aas
in
mov
push
pop
mov
adc
cmp
sbb
pop
mov
int
jg
add
dec
jg
je
movb
adc
nop
ret
add
out
push
jns
add
ljmp
aaa
xchg
popl
cld
jne
repnz
adc
and
out
sub
movsb
jb
push
xor
shrl
outsb
push
inc
fnstcw
mov
sbb
es
loop
or
test
mov
mov
mov
or
sbb
mov
ret
dec
int3
pop
mov
iret
pop
imul
neg
push
pop
ret
fucomi
pushl
movsl
adc
daa
jb
xchg
loope
lock
mov
dec
addr16
mov
inc
pop
sbb
xchg
imul
push
add
aam
jecxz
addr16
cmpsb
and
adc
xor
ja
cmc
sti
sbb
mov
mull
mov
mov
out
stc
pop
adc
mov
push
stos
push
jnp
jl
dec
test
out
mov
xchg
out
sysenter
sbb
data16
mov
add
testb
repz
into
adc
mov
das
push
sbb
imulb
jae
das
xchg
loopne
sti
je
xor
fprem1
clc
gs
mov
sarl
lock
fstl
jge
icebp
mov
repnz
stos
aam
jb
mov
stos
loopne
push
cmc
cmp
mov
push
loope
cmc
jmp
mov
imul
inc
fisttps
addr16
scas
in
inc
jo
fsubr
dec
adcb
push
dec
lahf
aam
dec
sbb
cmp
and
nop
mov
xchg
cmp
sbb
divl
jecxz
pop
std
or
lock
insl
mov
jge
shll
dec
sarb
jne
add
dec
test
repnz
mov
fcomps
aas
cmp
ret
add
pop
ret
loope
cwtl
mov
add
adc
std
les
sub
mov
testl
clc
cmpsb
add
xchg
jle
cmp
decl
lcall
inc
jmp
lret
mov
mov
pushf
add
xor
sbb
in
cwtl
cwtl
aaa
inc
jnp
cmp
xor
ja
jg
stos
ja
mov
aaa
daa
push
fistps
das
insb
popf
jmp
xchg
addr16
add
and
or
clc
psrld
into
out
cmpsb
xchg
lea
lds
dec
jl
or
cld
inc
stos
sub
shll
jl
xor
mov
mov
mov
lea
jnp
jmp
mov
jge
xchg
aaa
pop
xchg
push
push
xor
jmp
mov
mov
jl
fmuls
push
test
sub
push
rcrl
push
sahf
aad
and
cmp
out
jne
cmc
sub
lret
cld
push
dec
jno
add
outsb
xchg
ja
dec
mov
pop
into
outsb
xor
test
jle
repz
ja
ret
pop
adc
pop
cmc
in
loopne
pop
call
das
mov
pop
mov
int
mov
sahf
jecxz
scas
or
inc
movsb
sbb
sbb
mov
sub
idivl
aas
insl
sbb
mov
loopne
cmp
testl
cmpsl
and
into
pop
add
add
iret
adc
and
lea
jg
sub
iret
std
inc
add
pop
fdivrp
inc
and
pop
insb
push
mov
xchg
xchg
or
xchg
gs
addr16
pop
rcl
mov
fisubs
sbb
dec
xchg
loope
nop
je
fisubs
mov
jg
flds
out
lahf
cs
push
js
jb
or
pop
inc
movsb
or
cmpsl
out
out
mov
mov
mov
sub
jbe
push
int
sbb
and
insl
mov
push
loopne
cmp
fldl
fisubs
insl
xor
add
xchg
xchg
xchg
lods
push
mov
lea
xchg
inc
int3
pop
mov
cvtps2pi
popf
mov
inc
push
dec
int3
test
or
and
and
cmpsb
cmc
sub
arpl
fbld
mov
lahf
add
pop
ret
movsb
js
mov
jecxz
mov
adc
lret
cmp
cmpsb
adc
movsb
jno
cwtl
mov
mov
fisttpl
pushf
movsb
sbb
das
jle
mov
pop
call
inc
std
lds
mov
pop
sbb
push
iret
mov
jns
and
adc
scas
rcrl
shll
sub
test
fsubs
push
cli
std
lods
ret
js
add
iret
icebp
fistps
xor
outsl
sub
cmp
jle
test
ficoml
in
adc
out
insl
sbb
loop
mov
xchg
scas
mov
inc
scas
push
js,pt
pop
pop
push
ja
jg
mov
jecxz
inc
sub
lahf
stc
sub
fdivrp
mov
cmp
xchg
mov
fstp
leave
cmpl
push
mov
sbb
dec
ret
xor
jecxz
test
pop
adc
jae
stos
cmp
push
mov
xchg
mov
pop
cld
pushf
stc
jecxz
inc
in
in
push
cmpsb
lret
xor
pop
cmp
mov
xchg
addr16
loopne
out
xor
sbb
outsb
xor
imul
mov
ljmp
pop
push
xor
pushf
jae
and
mov
test
xchg
scas
inc
fwait
loopne
out
out
and
add
inc
gs
xchg
xchg
xchg
mov
mov
jo
int
adc
outsb
add
cld
pop
or
or
insb
push
call
aaa
mov
test
mov
mov
call
mov
js
push
rorl
cmp
inc
add
out
out
fmuls
mov
xchg
hlt
sti
hlt
jns
fcmovnbe
push
cmp
jo
outsl
adc
jo
push
daa
in
loope
in
lods
test
adc
pop
jp
xchg
push
out
cs
jmp
daa
iret
mov
pushl
test
sub
es
pop
add
or
cmp
fidivl
xor
jge
movsl
xchg
test
push
rol
jg
aas
dec
loope
out
fsubrp
cmp
sbb
inc
mov
jl
lcall
lds
push
push
push
pop
nop
jmp
mov
sbb
and
scas
pop
jnp
or
sbb
cmp
push
mov
data16
fsubs
push
loop
mov
rcll
scas
loop
fs
cmp
cmpsl
pop
lds
mov
push
pop
adc
jp
jbe
jne
xchg
mov
xor
jle
xor
sbb
idivl
mov
aaa
int
fcmovnbe
in
std
push
xor
sbb
inc
out
mov
arpl
mov
mov
mov
test
jmp
scas
std
cmp
aaa
aaa
mov
adc
loopne
fmuls
movsl
xor
mov
add
sbb
in
jmp
rcrl
cwtl
xchg
adc
xor
mov
lahf
roll
adc
repnz
les
push
daa
dec
pop
shrl
sbb
mov
js
insb
fs
pop
cmp
leave
push
adc
sub
lret
jno
pop
sahf
sbb
mov
mov
andb
and
ds
mov
dec
inc
inc
pop
outsl
lret
dec
sub
aas
xchg
sub
std
das
jae
dec
movsl
sahf
in
test
pusha
scas
int3
push
sub
and
ss
lock
jo
xor
and
mov
test
fsubrl
jmp
jg
in
int
loopne
adc
in
mov
scas
push
bound
cmp
test
xor
inc
mov
insl
push
leave
cltd
push
dec
adc
dec
cmp
insl
and
inc
add
mov
insb
incb
push
fcmovbe
and
cltd
imul
out
cmpsb
scas
xor
repnz
pop
cmc
add
iret
je
out
into
xchg
inc
loopne
pop
or
pushf
insb
cmp
pop
nop
ficoms
pusha
xlat
and
out
pusha
inc
inc
stos
pcmpgtd
xchg
leave
sub
mov
or
aad
in
or
addr16
das
jne
fmuls
clc
push
mov
dec
inc
lea
stos
pusha
or
jmp
and
fisubrl
add
push
inc
jne
inc
cltd
sbb
orl
test
test
loop
xchg
mov
jp
aas
pop
push
movb
repz
or
lea
div
mov
and
xchg
sbb
inc
arpl
call
jno
mov
repz
mov
jns
out
loopne
inc
mov
pushf
test
xor
add
jb,pt
sub
rorb
stos
mov
sbb
xchg
stc
sub
jae
adc
push
js
or
inc
sbb
pushf
ret
pop
jle
addb
adc
add
jmp
or
bound
jg
repnz
lret
mov
fucomip
negb
test
push
mov
push
hlt
loope
cmpsb
cwtl
iret
cmp
aam
mov
mov
inc
pop
inc
lea
push
loopne
push
testl
into
mov
cmp
roll
int
out
sub
lock
xchg
fmuls
cmpl
lock
adc
and
or
xlat
mov
test
das
pop
aad
pop
mov
mov
jo
hlt
stos
xchg
or
je
mov
sub
sahf
es
mov
dec
and
cld
hlt
cmc
test
xor
pop
insl
jle
ds
inc
jg
shufps
call
dec
outsb
push
cmpsl
sbb
gs
or
sbb
rol
into
pop
push
shrb
and
mov
or
mov
or
sahf
cwtl
add
sbb
xchg
fwait
das
and
cld
mov
js
pop
mov
lock
ret
xor
insb
fwait
cwtl
jb
mov
rolb
ffreep
loop
mov
arpl
arpl
pop
test
movsl
dec
loope
test
push
mov
inc
xchg
sbb
aam
cltd
push
and
sbb
pop
push
leave
fildl
cs
pusha
xor
jmp
jns
xchg
stos
lret
mov
ret
mov
repz
pop
xchg
sub
lods
shl
pslld
cld
jecxz
inc
decb
sahf
mov
jp
testb
pop
je
addr16
mov
jo
jmp
mov
jle
mov
sbb
call
bswap
outsl
xor
sbb
loop
sub
pop
jno
inc
and
mov
nop
cmpsl
pop
cmp
xchg
test
fimuls
fidivl
sbb
div
ds
les
outsl
jo
adc
fwait
orb
icebp
aam
dec
ja
subb
mov
pop
repz
test
jl
mov
rorb
push
inc
pop
shlb
pusha
arpl
outsb
insl
dec
ficompl
cltd
sbb
xor
mov
jmp
in
sub
test
imul
loop
andb
sub
loope
jl
iret
dec
iret
add
ret
jg
fsubrp
pop
push
inc
sahf
icebp
movsl
fldt
add
inc
add
cmpsb
dec
lret
addb
icebp
sub
imul
sub
std
xor
cmp
out
add
leave
out
cmp
test
outsl
adc
dec
insb
fwait
scas
lods
push
xchg
xchg
sbbb
mov
mov
xchg
enter
push
addb
subb
jle
jnp
mov
xor
jg
pop
pushf
push
jnp
test
inc
mov
jbe
or
mov
ja
enter
inc
mov
and
mov
adc
sbb
dec
add
jno
xor
std
add
imul
jns
xlat
mov
mov
sarb
jno
out
lea
ja
loop
in
sbbb
ja
pop
mov
xabort
adc
mov
and
xchg
push
mov
pop
pop
rcll
fcoml
pop
clc
mov
push
sbb
cmc
jo
leave
shl
xorb
hlt
add
ds
jmp
aam
repz
xchg
repz
jg
dec
pushf
int3
pop
add
pop
test
das
ja
inc
imul
or
inc
fxtract
push
add
inc
cwtl
fimull
sbb
sub
jle
stc
andl
push
inc
mov
gs
gs
out
pop
pusha
loop
xor
xchg
or
js
push
out
jle
mov
adc
adc
fldcw
sarb
and
test
pop
push
xlat
subb
scas
clc
mov
bound
xchg
outsb
xchg
es
rcrb
lea
ss
xor
jne
jmp
fildl
leave
hlt
call
jbe
dec
dec
fldcw
aam
adc
outsl
xor
inc
jnp
rcll
cmp
lods
jp
or
dec
cwtl
mov
inc
mov
push
xchg
arpl
stc
in
jp
loopne
hlt
pusha
cs
outsb
imul
jbe
mov
popl
jno
fcom
xchg
push
push
fidivrl
push
xor
adc
negl
jb
mov
xchg
cld
mov
push
fcomp
mov
enter
mov
icebp
sti
adc
sub
mov
adc
jne
sub
or
inc
sbb
sbb
mov
int3
dec
lahf
dec
jns
je
cmp
repnz
or
adc
sub
inc
pop
jecxz
xchg
bound
and
mov
and
mov
dec
lret
shlb
adc
pop
cmpsb
cmp
ds
nop
xchg
cmpsl
cltd
mov
cmpl
div
shlb
lret
and
cmpsl
cld
xchg
iret
icebp
out
test
das
mov
lea
pop
push
push
sahf
push
nop
push
and
jl
jmp
cmovae
jb
or
out
xchg
insb
jecxz
fwait
jle
les
mov
jle
mov
fisubl
test
xor
jle
push
pushf
stc
xchg
addr16
xor
cmp
sub
mov
fxch
shrl
mov
or
pop
sub
mov
adc
imul
jmp
lea
incl
jmp
mov
adc
in
pop
lret
scas
leave
js
push
and
stc
outsl
ss
jecxz
in
mov
fmuls
mov
push
mov
and
jmp
xor
cmpsl
and
mov
out
mov
sti
inc
jne
shr
jno
iret
scas
faddl
jns
sbb
sti
lahf
in
loopne
inc
call
shlb
sbbl
fldcw
pop
xchg
scas
push
lcall
add
pop
rcrb
pop
xor
dec
in
in
lcall
xor
xor
fucomip
sbb
mov
adc
mov
daa
xlat
lds
fwait
shrl
out
adc
lds
jae
cmp
fs
xor
das
iret
gs
pop
insb
stos
jbe
dec
mov
stos
mov
movb
scas
mov
mov
dec
push
jmp
xor
std
orb
xor
aas
rcrl
cld
test
mov
mov
in
popa
dec
out
push
sbb
inc
mov
push
sbb
lods
repnz
stc
xchg
push
aaa
mov
cmp
mov
mov
sub
loopne
into
shrb
inc
pop
inc
test
test
cwtl
cmp
test
or
dec
pop
sbb
sub
stc
pop
loop
sbb
repnz
mov
sarl
pusha
aad
mov
unpckhps
jecxz
mov
push
repnz
aam
lret
mov
inc
xchg
cmc
in
adc
outsb
jmp
mov
repnz
pop
pop
mov
fwait
adc
pmullw
dec
inc
out
inc
shll
lods
cmc
inc
stc
xor
orl
add
loop
cmpl
mov
or
xchg
in
outsb
cmp
sub
rcll
and
lods
mov
test
fistps
adcb
add
cld
sub
xor
out
add
mov
mov
call
imul
xchg
mov
fsubs
repz
push
imul
aam
mov
call
inc
mov
push
fcoms
adc
popa
add
cli
lea
inc
push
push
xor
xchg
push
movsl
push
cmp
mov
frstors
lahf
sbb
xchg
adc
inc
clc
mov
scas
lret
icebp
or
fs
fcoml
and
je
inc
adcb
sbb
nop
dec
ss
call
pop
adc
inc
arpl
or
mov
loop
xchg
adcl
jmp
inc
aas
jl
fwait
iret
pop
pusha
cmpsb
push
sbb
adc
dec
aam
popf
into
and
in
test
and
mov
mov
sub
jnp
cld
ret
out
call
cmc
dec
lods
push
sub
enter
add
fnstsw
pusha
push
adc
leave
xchg
sub
int
repnz
mov
imul
aaa
adcb
idivl
cmp
pop
mov
xchg
adc
jo
sub
sbb
jns
insl
dec
pushw
arpl
ror
frstor
popf
fbld
lret
test
mov
jle
repnz
pop
push
jae
out
out
inc
das
pushl
mov
sbb
mov
rcll
jp
roll
inc
outsl
xchg
in
xor
stos
add
lcall
cmp
sub
js
mov
sub
ror
test
pop
fistpl
movsl
jns
test
and
out
dec
cmp
mov
outsb
cs
sub
addb
out
pusha
out
sbb
data16
pop
aad
xchg
mov
add
xlat
ljmp
data16
out
add
pop
mov
js
xchg
pusha
cli
jne
lock
js
popa
lcall
lea
rclb
add
cmpsb
hlt
push
push
rcrb
inc
adc
push
or
push
loope
into
call
test
pushf
scas
or
lret
or
pop
or
test
lods
xor
fwait
pop
mov
leave
ljmp
mov
mov
jo
cmp
daa
push
ds
and
sbb
cli
xchg
lods
push
ds
and
dec
push
dec
cmpsl
push
push
xchg
sbb
lcall
or
lods
shll
leave
outsl
fidivs
pop
mov
decb
loop
xchg
pop
ret
push
outsl
ret
test
ds
scas
jb
push
lcall
mov
int
lods
mov
lods
lock
insb
pop
dec
in
push
cmc
and
or
stos
and
mov
loopne
cmpsl
arpl
not
sbb
mov
imulb
cltd
out
cmp
test
scas
mov
jp
repnz
shrl
jge
lret
push
pop
dec
push
mov
insl
cmpsl
fisttps
inc
scas
inc
cmp
sub
icebp
cmc
pop
ljmp
cs
fucom
xchg
push
adc
cmp
popf
das
add
es
mov
js
and
iret
pop
dec
jg
cmp
movzbl
lods
imul
call
loop
pop
xchg
pop
repnz
int
push
sub
loop
and
icebp
mov
xlat
ja
mov
test
push
cmp
mov
repnz
sbb
mov
test
and
movsb
cltd
pushf
add
jne
jl
mov
xchg
filds
mov
in
ja
pushf
insb
std
out
aam
and
out
fildl
mov
lods
or
aam
sbbb
xchg
fadds
dec
icebp
sub
pop
and
lock
scas
xor
inc
jnp
add
cltd
xlat
dec
xchg
movsl
sbbb
dec
adc
mov
data16
fcoml
pop
jb
les
hlt
test
and
jae
xor
sbb
aam
insl
mov
jp
jecxz
test
adc
aaa
lret
gs
ficoms
insl
and
push
cmp
or
test
fcompl
popa
div
das
je
mov
xor
xor
insl
and
js
or
fstps
fdivrs
jb
in
jno
scas
or
jg
imul
pop
sub
jecxz
cltd
rol
arpl
ss
inc
or
pop
stos
hlt
lods
lods
idiv
and
dec
shl
ss
stos
mov
cmpb
shlb
daa
cmc
adc
bound
xor
fld
fstl
cli
push
ja
mov
and
pop
loope
enter
in
test
loopne
test
addr16
out
das
push
mov
movsb
jge
jne
or
dec
xchg
imul
test
test
enter
test
loop
mov
dec
jne
cmp
xchg
pop
mov
cltd
sub
shll
xor
out
std
lods
int3
adc
cltd
mov
xchg
loop
lods
adc
mov
jge
enter
icebp
dec
je
fidivs
mov
adc
sbb
pusha
cmp
shll
xor
in
sbb
or
mov
lcall
cmpsb
or
xchg
lods
cmp
in
loopne,pn
push
mov
dec
in
call
js
mov
mov
filds
cli
xor
and
movsb
fildl
loopne
dec
cltd
mov
sub
test
or
call
xlat
lods
inc
mov
cmpsw
movsl
dec
mov
push
dec
mov
nop
jmp
dec
ficompl
emms
fsubl
adc
inc
sub
fmul
adc
loope
fdivs
icebp
jge
pop
push
fcompl
aaa
hlt
sarl
cwtl
jb
cli
mov
ds
adc
in
xor
gs
push
popa
inc
cmp
icebp
bound
jecxz
pop
cwtl
std
jne
idiv
xorb
aad
xchg
rcll
subl
imul
stos
mov
xor
enter
pushf
mov
cmp
loopne
inc
sbb
stc
inc
data16
lds
cltd
std
jno
inc
push
sub
pop
sub
inc
data16
jmp
lahf
imul
mov
int3
outsl
push
inc
xchg
outsb
lds
sbb
xor
cmpsb
leave
pop
adc
popf
sbb
scas
inc
adc
push
out
arpl
and
or
pop
ficompl
dec
xchg
in
mov
in
subl
imul
or
inc
addr16
test
fiaddl
or
jno
cmp
bnd
cmpb
mov
pushf
inc
dec
sahf
adc
daa
repz
icebp
in
pop
mov
sbb
add
jae
xchg
lock
xchg
add
xchg
adc
pop
cwtl
je
daa
cmp
pop
cltd
scas
dec
test
pop
cmc
clc
jl
xchg
ss
inc
jp
loopne
and
pushw
fimull
dec
movsb
pop
cmp
andb
xor
push
repnz
add
popf
cmp
cli
ljmp
ja
mov
dec
mov
sbb
fnstcw
inc
sbb
mov
bound
ja
mov
pop
push
inc
adc
ret
fstl
jmp
adc
pop
movsb
adc
adc
movl
insl
mov
imul
xchg
imul
cmp
pop
aas
adc
es
pop
pop
lock
xor
xor
pop
loopne
rolb
out
mov
icebp
xor
aam
arpl
cld
jp
data16
test
sub
lds
sub
cmp
test
inc
mov
push
inc
mov
les
xor
xor
push
adc
push
mov
dec
pop
repz
pop
fiadds
mov
inc
lret
scas
xor
arpl
jb
test
push
outsb
xor
mov
sbb
mov
sahf
mov
mov
mov
cmpl
out
jl
dec
imul
jbe
push
xor
ja
mov
and
add
mov
insb
mov
add
fstpt
mov
and
mov
push
sbb
push
std
xor
inc
inc
ret
div
lahf
adc
pop
lods
leave
out
rcrl
xor
xor
aaa
inc
sub
adc
pop
sbb
in
ds
cmc
shl
cmc
cld
gs
popa
cs
call
leave
repz
fcompl
sbb
mov
mov
jge
imul
lds
mov
divl
lretw
jbe
push
jae
sub
xchg
jmp
bound
outsb
inc
cld
push
pop
push
push
pusha
outsb
imul
push
cmpsl
andb
out
iret
imul
mov
clc
pop
inc
sub
adc
jmp
or
xor
dec
out
jno
loope
pop
push
lods
ljmp
sub
iret
mov
bound
adc
shlb
cmpsb
outsl
mov
jae
imul
sbb
rol
repnz
push
push
cmp
cli
add
and
fisttpl
int3
ret
pop
ss
mov
add
lret
cmp
sub
and
cmp
insl
adc
sahf
shl
jnp
nop
fistpl
sti
ljmp
fs
loope
jno
into
jecxz
out
cmp
lret
cs
cmp
rcrl
push
and
imul
pop
xchg
pop
inc
sbb
or
andl
mov
mulb
mov
sub
push
fildll
adc
dec
hlt
push
sub
jl
push
cmp
sarb
cld
insl
pop
pop
push
pop
test
or
xor
lods
je
adc
inc
push
inc
movl
out
sub
mov
mov
dec
pop
sbb
cmp
hlt
rcr
cmp
stos
dec
push
pop
repz
daa
and
mov
movsl
or
mov
inc
dec
pop
ret
mov
jno
adc
es
rclb
shlb
ljmp
aam
jle
dec
mov
test
jno
ror
in
rclb
mov
xor
xchg
cltd
push
jns
or
test
test
fcoms
xchg
or
pop
and
pop
aas
xor
ret
pop
cmp
mov
cmp
dec
sahf
xchg
decb
sub
loopne
adc
movsl
enter
in
loopne
rorb
jmp
repnz
push
stos
je
push
add
add
add
adc
add
add
add
add
orb
add
add
orb
add
sbb
add
cmp
add
push
add
adcb
add
add
add
sbb
add
xor
add
dec
add
adcb
add
js
add
nop
add
sbbb
add
test
add
rolb
sbbb
add
fadds
add
lock
sbbb
add
add
sbbb
add
cmp
add
add
add
add
add
add
add
add
add
push
add
addb
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
add
add
add
add
add
add
mov
add
enter
add
add
add
add
add
add
addb
add
add
add
add
add
add
adc
add
add
clc
add
addb
add
adc
addb
add
sub
addb
add
add
pop
add
addb
add
jo
add
mov
orb
add
mov
add
add
add
add
add
orb
add
call
add
add
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
or
add
lock
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
and
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
or
add
push
push
add
add
add
add
add
add
add
or
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
adc
add
enter
add
add
add
add
adc
add
loopne
add
add
add
add
add
add
add
adc
add
clc
push
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
pop
add
add
add
add
add
add
add
pop
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
pop
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fadds
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
pop
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
test
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
add
add
fmuls
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
add
add
clc
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
dec
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
test
add
hlt
mov
add
add
add
add
add
add
add
mov
add
add
in
add
add
add
cmp
add
in
add
add
add
nop
cltd
sbb
push
pop
add
in
add
add
add
loopne
sbb
adc
add
in
add
add
add
mov
add
in
add
add
add
push
test
add
add
in
add
add
add
jl
sbb
or
add
in
add
add
add
jo
sbb
or
add
in
add
add
add
cmpsb
sbb
or
add
in
add
add
add
pop
mov
add
in
add
add
add
dec
mov
add
in
add
add
add
inc
popf
sbb
or
add
in
add
add
add
xor
sbb
or
add
in
add
add
add
sub
add
in
add
add
add
sbb
sbb
or
add
in
add
add
add
adc
add
in
add
add
add
add
sbb
or
add
in
add
add
add
clc
mov
add
add
in
add
add
add
in
xchg
add
add
in
add
add
add
loopne
sbb
or
add
in
add
add
add
aam
sbb
or
add
in
add
add
add
enter
or
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
cwtl
jb
add
add
in
add
add
add
pushf
in
sbb
push
pop
add
in
add
add
add
hlt
repz
push
pop
add
in
add
add
add
dec
sti
sbb
push
pop
add
in
add
add
add
movsb
add
add
add
in
add
add
add
cld
or
add
add
in
add
add
add
push
adc
add
add
in
add
add
add
lods
sbb
add
add
in
add
add
add
inc
imul
push
pop
add
in
add
add
add
pop
daa
sbb
push
pop
add
in
add
add
add
mov
sbb
push
pop
add
in
add
add
add
or
sbb
push
pop
add
in
add
add
add
fs
add
in
add
add
add
mov
pop
add
in
add
add
add
adc
sbb
push
pop
add
in
add
add
add
xor
inc
add
lock
mov
dec
in
xchg
xor
popa
inc
mov
sub
insb
push
sub
enter
xor
pop
imul
inc
cli
call
fistpll
lret
xor
jmp
cmpsl
adc
or
jbe
and
fdivrs
xor
add
push
jo
das
clc
sub
scas
xor
mov
mov
in
inc
out
out
xchg
imul
cld
int3
out
cmpsb
jbe
jns
sbb
jae
stc
jl
icebp
and
mov
cmp
insl
mov
into
nop
xchg
xchg
cli
and
push
std
pop
dec
loope
ss
mov
sub
cmp
sti
cltd
xor
sub
adc
out
or
sbb
mov
fisubs
add
sbb
xor
or
cmpsl
xorb
mov
out
jge
enter
fidivs
pop
xlat
push
movsl
fbstp
cmpl
push
push
inc
lret
jne
inc
rorl
or
pop
cmp
add
sub
mov
icebp
xor
cwtl
cmp
movsl
jle
aaa
mov
dec
in
in
out
and
xor
add
pusha
aas
inc
pop
push
pop
fcoms
cld
jae
jge
pxor
or
ror
mov
push
sahf
dec
pop
cmpsb
sbb
pop
out
add
mov
jge
mov
dec
jmp
lock
dec
movsl
daa
test
es
add
mov
lods
sbb
test
mov
push
iret
in
mov
inc
js
cmpsb
jo
cmp
dec
cmp
adc
pushf
aad
pusha
imul
mov
sub
jmp
sub
lods
sub
xchg
pop
jnp
cmp
pop
call
pushf
mov
mov
and
xchg
orb
lods
nop
mov
xchg
fiaddl
cmp
dec
imul
loop
add
aaa
and
cli
cld
cmp
loopne
fnstcw
pop
movsl
ds
sub
lods
cmp
adc
xchg
sub
mov
mov
xor
and
aad
or
lds
jg
push
aas
xlat
mov
xchg
ret
jb
jns
bound
inc
dec
into
add
in
rorl
sbb
inc
es
mov
dec
cmpsb
sbb
dec
mov
dec
jl
add
inc
and
in
push
ficomps
shlb
mov
sbb
mov
mov
xor
adc
cli
cli
xchg
adc
xchg
cmp
ds
enter
xchg
iret
mov
pop
jnp
nop
push
jne
rorl
or
test
mov
cli
loop
call
xor
and
add
jb
test
mov
mov
mov
ret
paddb
shl
aad
xchg
add
xchg
filds
mov
sbb
sbb
jp
pop
mov
sub
push
cld
and
push
cmp
scas
xor
mov
cwtl
cmp
push
rcl
inc
aad
sub
ljmp
mov
addr16
scas
sub
mov
ret
test
jge
adc
pop
inc
repnz
xchg
push
mov
jno
add
or
fisubl
mov
mov
xor
ret
insb
and
mov
sti
cli
jge
insl
popa
ljmp
scas
inc
inc
aas
sub
push
sbb
jo
mov
into
push
xchg
sbb
in
shll
push
push
cli
subb
cmpsl
push
push
cmp
or
rorb
dec
mov
es
xor
adc
add
ss
movsl
es
xor
shll
repnz
test
xchg
fs
fadds
mov
hlt
lock
loope
daa
in
fs
int3
loopne
gs
push
pusha
js
out
fwait
repz
arpl
icebp
xor
push
push
test
lds
pop
dec
sbbb
sti
ljmp
xor
jecxz
sahf
das
test
aam
cmc
mov
adc
leave
xchg
inc
dec
scas
inc
cwtl
in
test
call
cmp
and
in
sbb
mov
mov
jae
cmp
outsb
push
mov
mov
jmp
aas
loopne
shl
fidivrl
dec
mov
mov
fs
pusha
fidivrl
ss
sub
ss
dec
push
jge
dec
or
lret
mov
add
adc
cmpsl
das
lea
scas
inc
add
fadds
lds
mov
inc
adc
mov
mov
pop
sub
xchg
shll
fdivrs
movsb
cmpsb
insl
popf
mov
xor
popf
xor
out
xlat
jmp
push
push
lea
dec
or
inc
sti
fwait
jle
mov
imul
std
dec
inc
std
inc
pop
bound
pop
and
test
xchg
jno
mov
jl
fistps
jp
aad
rorb
add
aaa
fdivs
jge
fs
xchg
jae
shrb
dec
rcr
inc
inc
jno
and
inc
cli
rcll
jns
test
insb
xor
xchg
aad
dec
clc
in
les
jmp
rcrb
roll
fsts
pop
daa
loope
push
or
inc
shrl
repnz
out
and
loope
push
mulb
mov
test
arpl
mov
xlat
mov
cmpsb
sub
mov
mov
push
add
cli
sub
add
push
rcll
sahf
push
xchg
cmpsl
cmp
push
data16
adc
shll
sbb
imul
sub
push
cmpsb
loope
inc
sahf
mov
dec
mov
bound
aaa
ja
inc
outsl
enter
cli
loopne
aad
ret
popf
shr
sub
insl
pushf
or
and
lcall
out
sbb
sar
mov
ret
nop
push
or
sbb
xchg
xlat
adc
mov
mov
fistpll
and
mov
ficomps
mov
push
leave
test
mov
fldenv
pop
mov
into
ss
inc
adc
mov
out
sub
scas
or
and
push
shrl
add
lahf
insb
jle
aad
jl
daa
popf
pop
loope
xchg
ret
jae
pop
mov
xchg
daa
push
pop
cmp
mov
lcall
test
or
enter
dec
push
xlat
insl
push
sahf
in
daa
rcrb
inc
adc
popf
xchg
sub
xor
in
xor
push
sahf
jae
js
jmp
adc
mov
into
mov
fldcw
ficompl
fwait
jbe
mov
aam
int
sub
shl
inc
jp
xor
cmc
insb
orb
fimull
cmp
push
push
mov
or
xlat
cltd
pop
xchg
dec
adc
ljmp
daa
stc
sbb
sbb
ret
jp
jl
sub
jle
lcall
sbb
imul
es
mov
mov
cmpsl
lret
lcall
and
adc
sub
and
pusha
mov
cmp
and
or
xchg
and
dec
popa
inc
mov
in
das
inc
mov
ljmp
stos
lods
dec
in
mov
and
js
daa
or
jno
xor
mov
arpl
repnz
cmpsl
es
out
std
shrb
dec
push
jne
outsb
jae
push
sub
sbb
pop
addr16
jnp
lret
sub
test
lcall
xor
dec
cs
cmp
jg
pop
jb
movsb
cmpl
ljmp
das
xchg
mov
push
in
outsl
dec
cmpl
mov
sbb
aaa
mov
shlb
clc
add
jb
mov
and
jge
xor
outsb
and
pop
push
mov
stos
dec
jge
cwtl
mov
sub
int3
int3
jmp
inc
mov
and
fs
test
mov
inc
es
mov
mov
fldcw
rorb
cs
adc
push
andb
cld
cmpsl
shrl
cmp
fisubrl
xchg
cmc
sarl
lods
jecxz
xor
and
jbe
xchg
imul
dec
push
mull
dec
or
and
pop
rolb
jno
repz
iret
xchg
insl
ss
dec
add
js
shld
shlb
popa
orl
xchg
sub
arpl
cmpb
ljmp
lret
cmp
int3
cmp
and
jl
dec
add
lock
push
adc
xchg
dec
imul
pop
cmp
cmpsl
or
gs
adc
sbb
jg
in
js
xchg
inc
dec
sbb
dec
and
sbb
pushf
pop
and
and
mov
js
fcmovnb
pop
in
lds
icebp
cmp
jmp
mov
push
sbb
pop
sub
mov
cmovp
sar
dec
mov
fldcw
pop
sbb
sub
mov
fisttpl
and
stc
sub
shlb
xor
lock
inc
cmp
add
mov
test
shl
fldcw
negb
fsubrl
jnp
adc
mov
test
inc
jo
test
pop
shr
pop
test
xor
dec
stos
fstpl
dec
jnp
inc
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
pop
pop
mov
pop
mov
pop
mov
pop
cmpb
jne
mov
pusha
lea
push
xor
pushl
mov
mov
call
jmp
mov
popl
add
popa
lea
push
call
call
jmp
popl
add
jmp
add
jb
gs
xor
cs
insb
add
cmpsl
add
add
lea
lods
or
je
mov
mov
rep
jmp
add
push
add
mov
add
movsl
xor
add
push
push
pushl
push
call
mov
mov
add
push
push
call
add
mov
xor
lea
and
mov
mov
addr16
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
or
je
add
mov
add
sar
rep
add
jmp
mov
push
mov
push
mov
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
add
mov
mov
mov
mov
fstcw
lea
push
push
push
push
push
mov
add
push
push
push
push
call
push
ret
push
mov
pusha
push
mov
mov
cld
mov
mov
inc
mov
inc
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
jmp
pop
sub
mov
popa
pop
ret
add
add
mov
and
add
sub
cmpw
jne
pusha
mov
mov
mov
add
add
mov
lea
lea
mov
mov
call
stos
add
cmpl
jne
popa
ret
pusha
mov
mov
add
mov
add
call
mov
cmp
je
add
jmp
sub
sub
shr
add
add
movzwl
shl
add
add
mov
add
mov
popa
ret
push
mov
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
cmpsl
push
and
cmpsl
push
add
nop
adc
out
je
jne
dec
add
sbb
sbb
imul
inc
add
xor
add
add
adc
add
dec
ljmp
inc
lods
add
xchg
dec
leave
outsb
divl
pop
add
aam
mov
cmp
push
xchg
aaa
adc
mov
xor
jns
xchg
sbb
sbb
xor
ret
lods
sti
cmpsl
cmp
dec
add
jo
daa
rcl
rolb
xchg
sbb
jle
mov
js
sti
stos
mov
mov
andb
movsl
clc
js
test
out
pop
data16
mov
push
lods
pop
xor
and
test
sub
cmp
stos
or
jle
fidivrs
xchg
push
sar
in
pop
dec
pop
sub
dec
aad
pop
cs
add
jne
or
sarl
push
hlt
inc
cmc
mov
jnp
das
mul
lret
push
jecxz
mov
cmp
movb
add
xchg
nop
add
add
or
add
sub
push
add
sbb
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
push
add
sbb
les
add
push
add
push
add
push
add
push
add
push
add
gs
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
imul
add
add
pop
imul
add
add
sub
add
add
add
je
outsl
jb
addr16
jne
fs
imul
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
out
xor
or
adc
sbb
add
mov
jge
xor
push
fwait
lock
sahf
mov
dec
pop
adc
mov
push
mov
jl
or
aam
xor
push
outsl
ljmp
push
jmp
push
pop
jae
jecxz
mov
cli
stc
jp
les
cwtl
fdivr
out
mov
adc
shr
xchg
pop
jne
out
lahf
cmp
aaa
sub
out
add
cmpsl
dec
sub
jg
jns
stos
sub
cmp
int3
scas
cmc
mov
test
ds
jecxz
inc
es
adcb
insl
mov
pushf
mov
mov
mov
clc
rcr
mov
xchg
and
push
or
sub
mov
cmc
aaa
leave
pusha
xchg
popa
pop
icebp
das
outsb
arpl
mov
sub
dec
mov
and
je
xor
aam
test
push
push
cltd
jmp
arpl
xor
xchg
add
add
fstps
cwtl
inc
push
mov
pushf
dec
fwait
dec
cmp
or
mov
icebp
cmc
adc
sub
lods
push
jecxz
daa
sbb
cmp
jmp
leave
pop
aaa
mov
int3
mov
orl
xchg
das
insl
mov
fcomps
inc
repz
xor
lret
xchg
jno
or
jae
lds
sub
nop
subb
les
add
aad
xor
or
dec
dec
es
ret
or
lods
cmp
fwait
pop
sti
mov
incb
iret
sbb
ffree
sbb
mov
mov
dec
pushf
inc
push
adc
mov
cmpsl
ss
pop
pop
sub
test
dec
mov
cwtl
icebp
mov
fadd
lcall
mov
or
mov
mov
mov
push
push
andb
std
add
and
xchg
push
lods
call
insb
in
divl
sahf
lock
mov
repz
iret
pushf
ljmp
xor
repz
cmpsb
mov
ret
mov
negb
inc
xchg
sbb
insl
xchg
fs
mov
push
sub
movb
sub
sahf
popf
icebp
lds
inc
iret
scas
cmc
cli
icebp
in
rcrl
popa
inc
mov
push
imul
int
lods
xor
in
pop
pop
jl
mov
cmp
dec
inc
and
loopne
xchg
enter
enter
mov
fnstcw
xor
pop
jmp
xchg
adc
andb
lock
iret
sub
push
movsb
xor
sbb
ljmp
imul
dec
xchg
cmp
mov
inc
std
pop
sbb
push
and
mov
out
gs
jo
push
jg
frstor
ljmp
popa
scas
fisttpll
add
push
popf
jbe
loope
loopne
arpl
or
push
in
andb
frstor
and
mov
inc
in
sbb
in
cmp
xor
pop
xchg
mov
lret
cld
sti
sahf
or
fsts
sbb
fld1
pop
xor
pop
stos
std
push
insb
in
and
xchg
das
xchg
repz
and
rol
add
inc
push
xchg
xchg
adc
ja
icebp
sub
mov
imul
dec
cmp
cld
sahf
inc
sbb
push
icebp
cmp
push
je
cmp
jbe
pop
je
stc
into
add
pop
or
fcomp
into
stc
xorb
les
push
cmp
jo
sub
clc
enter
pop
js
cmpl
cli
mov
or
call
fistps
flds
jmp
push
pop
es
sub
or
cmp
outsl
sbb
out
lahf
ss
add
insb
ficoms
js
sub
cwtl
cld
in
sbb
xor
repz
and
lods
jl
pop
pop
outsl
sbb
in
outsb
idivl
outsl
xor
leave
in
jae
add
inc
leave
iret
es
mov
push
mov
sub
inc
inc
nop
int
cmc
sbb
or
out
mov
sbb
lods
fadds
fmull
add
popf
cmc
sub
push
fbstp
mov
jmp
and
movaps
js
daa
xchg
cld
mov
push
dec
push
and
into
cltd
ret
cmp
sti
jmp
fsubrs
into
stos
or
push
out
add
int
mov
movsl
inc
ficoms
jp
scas
movsl
dec
daa
sub
in
enter
or
push
mov
ljmp
sbb
aam
sub
mov
mov
inc
lret
cmpsl
pop
jne
push
icebp
dec
and
icebp
outsl
pop
mov
pop
sbb
cmp
ror
and
sbb
in
movhps
ljmp
mov
ja
inc
inc
rorl
popf
dec
mov
in
sub
xchg
pop
pop
arpl
stos
dec
xchg
testl
jl
lret
mov
pop
out
pop
sub
cmpsb
sbb
test
dec
sbb
ljmp
ljmp
arpl
cltd
jle
insl
into
xor
imul
test
mov
adc
xor
mov
dec
push
xor
adc
arpl
and
inc
cld
nop
sti
scas
in
mov
mov
data16
loope
xor
clc
push
jo
cs
sbb
push
movd
test
cmc
fisttpl
aad
pop
xor
or
push
cmp
movsl
push
push
mov
pusha
xchg
addr16
ss
xor
mov
dec
xlat
xor
add
mov
nop
out
adc
filds
jmp
adc
mov
jnp
or
mov
fldcw
push
xchg
daa
mov
stc
xchg
dec
sarb
cmpsl
mov
ljmp
icebp
stos
cmpsb
or
sbb
xlat
movsb
mov
int
out
stc
fadds
adc
pop
outsl
stos
adc
xchg
push
outsl
in
movsl
sahf
or
jb
add
or
fbstp
jno
sbb
pop
push
std
and
sbb
jns
jmp
sub
int3
and
shrb
sub
arpl
lods
fnstsw
or
pop
add
inc
jg
repnz
inc
insb
sahf
push
jge
cmp
ljmp
xor
mov
sub
jg
mov
clc
cmp
xchg
mov
sahf
lahf
and
pusha
add
or
push
imul
sub
or
inc
sbb
lods
pop
jmp
lds
mov
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
inc
add
add
add
add
xor
cmp
xor
xor
inc
add
add
mov
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
popa
add
and
inc
add
add
jae
arpl
push
add
outsb
add
and
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
and
xor
cmp
cmp
xor
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
pop
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
pop
add
add
jae
and
push
add
data16
add
jb
add
add
add
push
add
add
jns
and
inc
add
add
sub
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
dec
add
pop
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
dec
add
inc
add
add
pop
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
out
mov
adc
and
outsb
pop
gs
imul
leave
outsb
jno
xor
dec
add
leave
mov
push
jo
pop
push
out
jne
sub
jmp
xor
mov
sub
inc
add
sbb
mov
outsb
sub
pushf
mov
iret
xchg
or
out
ret
sarl
cwtl
or
aam
jmp
mov
xor
cmp
movsb
and
cmp
and
arpl
xchg
je
in
enter
mov
mov
test
shl
adc
testl
mov
jl
add
daa
test
imul
add
sbb
cld
rcrb
mov
or
xchg
scas
scas
out
bound
fcomip
popf
and
sub
cmp
and
test
ja
adc
aad
mov
and
push
addl
push
pusha
cwtl
out
lahf
fwait
outsb
mov
fld
push
xor
lods
adc
lods
adc
mov
push
xchg
fmul
daa
lock
push
sub
xchg
mov
nop
fst
or
les
out
test
andb
daa
out
data16
xchg
pop
adc
dec
mov
leave
or
cmp
repz
js
fmuls
mov
rorb
adc
jmp
ret
jno
jecxz
es
lret
push
aad
stos
es
adcb
or
inc
scas
test
cmp
fs
sub
jo
xchg
rcrb
lods
add
pop
dec
fiaddl
xor
movaps
test
into
push
test
push
add
or
sbb
xchg
lock
push
pusha
fdivrl
imull
xchg
clc
and
ret
mull
mov
mov
xor
into
xchg
add
push
dec
inc
cld
lahf
movsl
mov
mov
ljmp
mov
mov
xor
or
dec
pop
es
xchg
outsb
daa
imul
jg
sbbb
mov
call
insb
inc
xchg
aad
mov
std
lcall
sbb
in
cld
xor
std
pop
call
fsts
adc
pop
ds
xchg
repnz
loope
mov
int3
mov
fdivrl
stos
jecxz
icebp
dec
xchg
inc
outsb
inc
les
or
lock
xor
movsb
dec
jecxz
xchg
in
outsl
inc
fldcw
cmp
sub
out
adc
jae
cmp
and
sub
inc
pop
sub
mov
insb
mov
pop
and
sbb
subl
imul
xor
subb
mov
adc
inc
jb
and
movsl
mov
lock
push
test
pop
cmpsb
dec
push
cmpsl
adcl
jno
dec
xor
dec
adc
int
stc
aam
aaa
xor
jle
and
and
xorb
jnp
pop
dec
sbb
jle
mov
push
notb
mov
outsl
popf
jae
inc
mov
ror
in
sahf
loope
push
cwtl
loopne
faddl
andl
movsb
shrl
movsb
mov
sbb
add
mov
xchg
lods
adc
mov
push
lahf
sbbl
ret
jno
orl
cld
inc
mov
cmp
hlt
jnp
push
push
and
int
pop
movsl
sub
and
push
icebp
xor
aad
inc
in
aad
lcall
push
dec
popf
push
xor
sbb
or
outsb
push
je
sbb
loopne
andl
jmp
cmp
outsl
sbb
out
lahf
ss
add
insb
ficoms
js
sub
cwtl
cld
in
sbb
xor
repz
and
lods
jl
pop
pop
outsl
sbb
in
outsb
idivl
outsl
xor
leave
in
jae
add
inc
leave
iret
es
mov
push
mov
sub
inc
inc
nop
int
cmc
sbb
or
out
mov
sbb
lods
fadds
fmull
add
popf
cmc
sub
push
fbstp
mov
jmp
and
movaps
js
daa
xchg
cld
mov
push
dec
push
and
into
cltd
ret
cmp
sti
jmp
fsubrs
into
stos
or
push
out
add
int
mov
movsl
inc
ficoms
jp
scas
movsl
dec
daa
sub
in
enter
or
push
mov
ljmp
sbb
aam
sub
mov
mov
inc
lret
cmpsl
pop
jne
push
icebp
dec
and
icebp
outsl
pop
mov
pop
sbb
cmp
ror
and
sbb
in
movhps
ljmp
mov
ja
inc
inc
rorl
popf
dec
mov
in
sub
xchg
pop
pop
arpl
stos
dec
xchg
testl
jl
lret
mov
pop
out
pop
sub
cmpsb
sbb
test
dec
sbb
ljmp
ljmp
arpl
cltd
jle
insl
into
xor
imul
test
mov
adc
xor
mov
dec
push
xor
adc
arpl
and
inc
cld
nop
sti
scas
in
mov
mov
data16
loope
xor
clc
push
jo
cs
sbb
push
movd
test
cmc
fisttpl
aad
pop
xor
or
push
cmp
movsl
push
push
mov
pusha
xchg
addr16
ss
xor
mov
dec
xlat
xor
add
mov
nop
out
adc
filds
jmp
adc
mov
jnp
or
mov
fldcw
push
xchg
daa
mov
stc
xchg
dec
sarb
cmpsl
mov
ljmp
icebp
stos
cmpsb
or
sbb
xlat
movsb
mov
int
out
stc
fadds
adc
pop
outsl
stos
adc
xchg
push
outsl
in
movsl
sahf
or
jb
add
or
fbstp
jno
sbb
pop
push
std
and
sbb
jns
jmp
sub
int3
and
shrb
sub
arpl
lods
fnstsw
or
pop
add
inc
jg
repnz
inc
insb
sahf
push
jge
cmp
ljmp
xor
mov
sub
jg
mov
clc
cmp
xchg
mov
sahf
lahf
and
pusha
add
or
push
imul
sub
or
inc
sbb
lods
pop
jmp
lds
mov
add
add
adc
adc
add
add
sub
add
add
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
mov
and
and
and
and
mov
and
add
cmp
cld
insb
pusha
and
xchg
xchg
sbb
mov
or
xor
add
mov
xor
add
add
sbb
add
xchg
nop
or
add
add
or
add
add
incl
add
incl
add
incl
add
add
add
addb
add
or
add
pop
add
icebp
popl
add
filds
add
incl
add
incl
add
xor
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
cmp
inc
and
add
fisubs
push
adc
and
dec
add
and
stos
sub
lock
push
outsl
and
loopne
lods
adcb
mov
and
inc
je
inc
dec
int3
dec
jle
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
pushf
sub
test
or
test
sbbl
subb
add
movsb
loope
inc
xor
mov
adc
add
xchg
mov
add
cmp
js
je
mov
mov
insb
jb
cmp
fs
add
xchg
push
enter
dec
jb
cmp
xorb
enter
jb
cmp
sub
sub
cld
and
loopne
fmul
fdivs
jb
sbb
push
orl
mov
outsb
call
add
inc
and
fdivl
add
mov
push
xor
pop
jmp
sub
xor
add
xor
sbb
sbb
and
rol
push
mov
adc
push
int3
push
call
mov
test
jne
xor
add
pop
lret
mov
push
add
or
rcl
ret
femms
lea
loopne
mov
nop
push
ds
addl
aas
les
xor
push
pop
nop
mov
cmp
cmp
pop
sbb
fadds
xor
add
dec
mov
mov
push
pop
or
rclb
xor
and
inc
cmp
add
push
mov
push
xchg
push
adc
mov
nop
aas
push
push
orb
call
xchg
add
inc
push
jmp
mov
inc
mov
jns
adc
jne
add
adc
cmpsl
fst
daa
xchg
aas
pusha
or
jmp
dec
add
dec
cmp
pop
aam
jge
fbstp
loope
call
test
pop
pop
pop
add
je
repnz
add
xor
jge
sbb
add
call
fmul
ja
popl
and
sbb
or
sub
add
cltd
gs
xchg
or
fdivs
add
je
fbstp
push
iret
add
sbb
sub
sahf
test
push
add
adc
sar
lock
cmpsl
sub
or
push
or
jle
jge
add
bound
fcmovbe
lock
rclb
incl
jecxz
adc
out
adc
add
push
sbb
nop
out
cmp
mov
test
cmp
or
sarl
fs
adc
and
mov
add
not
dec
clc
jp
fs
flds
sar
add
popa
add
pop
push
push
push
lds
jns
lret
and
cmp
add
movsl
fsubl
dec
adc
dec
in
or
push
data16
push
nop
sbb
jl
pop
lds
adc
rolb
push
push
and
jae
and
out
ja
dec
sbb
mov
je
push
xchg
jg
pop
fisubrs
jne
mov
dec
xchg
add
movl
filds
cwtl
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
or
add
xchg
nop
jbe
add
fldl
call
sarb
push
pop
inc
adc
sub
push
test
shrl
jmp
leave
xor
mov
mov
add
imul
xor
add
and
adc
sahf
add
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
adc
call
and
int3
sbb
cmpsl
int
pop
movsl
and
cmp
add
aaa
and
or
pop
mov
sub
inc
aas
cmpsl
xchg
gs
add
bound
orb
jne
ja
add
mov
loopne
lea
sub
pushf
es
pop
call
icebp
push
xor
addl
mov
push
mov
and
jmp
add
push
orb
test
lcall
sub
imul
dec
rcrb
cmpsb
jp
and
cmpl
add
adc
sbb
add
adc
inc
adc
add
push
adcb
cwtl
sbb
or
jnp
push
out
cmp
add
jae
ror
push
je
add
mov
jmp
int3
inc
mov
mov
add
mov
ret
cs
pop
es
dec
add
push
cmp
lods
cmp
pop
add
mov
addl
push
fs
pushl
int3
andb
xor
add
push
jle
add
pop
xlat
out
bound
pop
sub
test
clc
sysret
mov
xchg
cmp
das
mov
add
xor
pusha
rolb
add
jo
dec
daa
sbb
repnz
movb
pop
add
add
xchg
xchg
ret
cs
jmp
mov
add
dec
stc
repnz
test
int3
test
sbb
xchg
enter
sub
out
mov
hlt
leave
adc
dec
cmp
aad
cmp
mov
in
cmp
pop
add
je
xorl
in
jne
xor
add
push
push
lret
inc
bndldx
in
fistpl
loopne
push
cmp
xchg
adcl
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
mov
add
mov
add
pop
add
add
push
cld
adc
cmp
call
add
adc
mov
addl
lock
sbb
pusha
add
adc
movl
mov
ret
or
add
cmp
leave
test
enter
or
es
add
sbb
loop
cwtl
in
add
add
adc
or
push
test
sub
rolb
and
xchg
add
loopne
dec
incb
adc
dec
fnstenv
loope
and
inc
nop
jecxz
push
out
cs
add
push
sbb
scas
add
xor
adc
ret
add
and
mov
testb
js
sbb
cmpsl
rorb
sub
cmp
push
mov
mov
call
fidivs
push
xor
mov
or
and
sti
fadds
pop
and
add
lock
pop
add
lret
push
pop
andl
movsb
mov
leave
clc
dec
rcl
mov
popaw
ror
aas
jle
add
aaa
sub
repz
xor
add
jge
push
xchg
imul
loopne
sbb
add
jmp
and
inc
jne
adc
sub
daa
in
xchg
or
ljmp
add
xor
or
or
je
imul
xabort
mov
pop
add
dec
xchg
xor
inc
cmp
pusha
shll
rcll
dec
es
mov
add
movsb
xor
dec
add
dec
nop
hlt
lcall
inc
pop
rcrl
xchg
jecxz
inc
adc
insb
add
sub
cmp
bound
or
or
adcl
jl
add
dec
sbb
mov
mov
push
jle
cmp
andl
adc
cmp
mov
add
adc
pop
add
xchg
scas
sbb
les
nop
imul
lea
cld
movsl
push
jg
cld
or
or
inc
mov
and
addr16
roll
fsubs
es
add
sub
loopne
or
add
je
nop
aas
dec
pop
pop
sbb
iret
xor
adc
cmp
dec
loopne
insl
cmc
outsl
out
push
xor
ds
pop
incb
adc
xchg
int3
leave
call
call
imul
jne
cmp
or
mov
add
sti
xor
add
xchg
mov
add
push
add
in
push
dec
subb
dec
pop
pop
ljmp
shlb
loope
je
add
addb
insb
jle
xor
dec
xlat
sbb
jg
pop
lods
add
pop
jle
out
shr
add
push
xchg
or
dec
fsubs
add
sbb
lcall
add
cmp
or
test
add
mov
mov
vucomisd
iret
mov
cmp
pusha
xchg
jmp
add
cltd
xor
xchg
add
pop
pop
xchg
dec
lret
add
repnz
mov
imul
lods
jno
test
pop
sub
xor
mov
pop
pop
movsl
or
stos
or
cltd
cld
jmp
leave
push
pop
push
xor
and
cmp
in
sti
add
mov
adc
sub
inc
test
jge
xor
adc
add
ret
cmpsl
mov
push
bnd
clc
sub
prefetch
dec
add
jl
hlt
clc
sahf
add
cmp
cs
jbe
or
push
dec
inc
cs
or
push
imul
add
call
push
rol
cmp
cmp
addb
pop
push
and
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
cmp
dec
andb
pop
test
and
add
cmp
cli
sub
sub
lea
test
and
fdivrs
add
mov
inc
add
cmc
test
add
ret
lock
movsb
inc
inc
add
jmp
cwtl
punpckhbw
and
cmp
push
add
cwtl
jmp
push
or
addr16
test
dec
aas
or
ret
inc
sbb
add
push
or
cmpsb
imul
or
cmp
sub
jno
push
adc
add
leave
inc
or
mov
imul
mov
test
add
cwtl
add
pop
add
mov
cmp
or
mov
mov
jmp
aas
inc
mov
insl
pop
xor
push
or
dec
and
add
and
lcall
sbb
pop
pop
mov
dec
in
add
out
mov
dec
jg
add
js
push
icebp
or
add
add
cmp
jl
xlat
sub
inc
pop
lds
cmp
loop
pusha
add
addr16
orl
sahf
add
sub
sbb
imul
pop
pusha
adc
add
testb
xchg
stos
push
int3
lcall
inc
fcomps
mov
sbb
push
add
push
incb
add
dec
xor
movl
xchg
addr16
cs
pop
and
ret
push
push
sbb
nop
adc
xor
add
add
xchg
sbb
adc
mov
pop
xlat
or
movsb
push
xchg
fistpll
add
js
mov
gs
cmp
lcall
and
jmp
sahf
lret
dec
orb
inc
mov
or
dec
arpl
add
xor
and
cmp
sub
cs
pusha
cmc
fadds
sub
mov
andl
jmp
add
jmp
cmpsl
xchg
mov
pop
repnz
cld
jbe
sbb
xor
andb
add
mov
add
insb
subb
inc
clc
add
ljmp
dec
add
jge
movsl
cmp
clc
adc
add
lret
xchg
call
add
dec
jle
jge
xchg
or
and
das
and
call
xlat
bound
ret
dec
test
mov
rorb
nop
mov
or
cmpb
mov
cmpsb
inc
std
add
sbb
mov
adc
push
int3
add
adc
out
dec
dec
cwtl
loopne
lock
scas
add
pop
call
add
sub
mov
and
jge
sahf
or
test
ret
es
int3
enter
je
add
into
fcmovnu
lret
add
add
loopne
jecxz
and
sub
push
and
out
mov
rcrb
leave
add
adc
psubb
add
nop
push
xor
enter
xlat
test
add
cmp
ja
je
pop
sub
vmread
rep
incb
cmpl
add
movsb
xchg
mov
jl
xchg
sbb
adc
std
sbb
pusha
lret
push
lcall
add
xchg
adc
add
nop
rorl
jns
jbe
cmpb
jne
aam
jnp
rorb
out
add
and
inc
lock
inc
push
adc
test
xorb
or
andb
cmp
int
pop
dec
into
cmc
adc
mov
or
ja
js
xor
push
push
lea
push
lods
and
ja
mov
repz
int
insl
cmp
mov
push
in
jl
and
jmp
pop
xor
xchg
add
cmpl
jae
movzwl
imul
cmp
add
add
shrb
or
mov
sbb
js
mov
in
pusha
pop
js
in
or
mov
mov
fwait
pop
pop
xlat
insb
movl
call
std
fists
pop
stos
add
je
and
outsb
mov
shlb
cmp
mov
pop
fcom
stos
mov
mov
add
aaa
aas
jp
mov
pcmpeqd
add
add
sbb
push
test
loopne
jle
cmp
push
inc
into
test
shlb
sbb
fnstenv
inc
dec
scas
jne
add
sbb
repnz
loop
fildl
sar
push
add
mov
fiaddl
mov
or
sbb
jne
push
adc
in
add
dec
out
and
and
add
sbb
mov
inc
stos
cmp
add
std
cld
or
fiadds
sbb
nop
cmp
loopne
adc
add
mov
sbb
rep
roll
adc
xor
add
jno
in
imulb
mov
xchg
cwtl
adc
jno
cld
iret
add
sub
mov
movsb
fildl
or
jns
lcall
add
mov
jae
add
mov
stc
cmp
mov
dec
mov
fnstenv
roll
mov
ret
rorb
nop
sub
imulb
mov
jmp
int3
lods
add
sbb
jl
add
add
push
inc
addb
sti
and
mov
sub
or
mov
and
add
popa
pop
pop
rcrb
xor
sub
enter
dec
test
pusha
and
jmp
add
xor
in
xor
push
ja
add
clc
subl
add
xor
or
mov
xor
sbb
pop
int
add
aam
adc
testb
add
fdivrs
cmp
sub
in
inc
push
repnz
pop
bt
je
fisttps
popa
jb
mov
add
adc
add
ret
or
mov
inc
not
jmp
test
jmp
in
je
inc
add
jne
pop
and
cli
cmp
jae
dec
add
add
inc
add
ss
fsubrs
rolb
cld
dec
cld
nop
add
mov
lods
sbb
adc
ret
je
fsubs
or
add
das
rolb
loopne
clc
add
push
push
sbb
add
and
xor
push
mov
and
fiadds
pop
jne
loop
cmpsl
or
add
sub
cwtl
add
and
pop
mov
popa
add
pop
aaa
add
xor
jae
ss
push
add
das
push
add
repz
pop
dec
adc
push
push
pushl
roll
and
inc
hlt
mov
in
push
or
mov
enter
lcall
sub
sbb
add
jno
ret
dec
xchg
clc
and
cmp
or
mov
sub
dec
add
push
inc
push
inc
pop
inc
add
outsl
jb
popa
outsb
roll
fdivl
jg
sbb
push
push
dec
cmp
add
jae
imul
push
jne
dec
rcr
mov
mov
xlat
add
jo
xor
mov
inc
add
adc
cli
jecxz
mov
xchg
testl
jge
xor
ss
mov
cli
add
sbb
add
inc
loopne
push
divb
jmp
gs
add
dec
or
dec
call
inc
or
leave
sub
popl
or
lock
cltd
insb
xchg
pop
add
mov
call
push
loop
loopne
stos
mov
and
fcomp
adc
add
cmpb
pusha
mov
in
leave
add
pusha
push
add
pop
push
sar
pop
addr16
inc
sbb
in
cmp
hlt
sbb
andl
int3
cmpsb
divb
rolb
mov
je
cmp
lea
adc
mov
push
fldenv
ret
mov
test
push
sbb
movsl
dec
shrb
jge
inc
add
nop
push
add
add
repnz
test
pop
pop
fs
ret
add
subps
cld
jns
mov
add
inc
cmp
add
inc
popl
sbb
or
pop
faddp
mov
call
pop
xor
pop
push
loope
sbb
lock
psadbw
hlt
cs
pop
add
outsb
cmp
or
cmc
or
add
pop
and
add
or
push
in
jecxz
lods
add
je
xchg
sbb
mov
aaa
xor
push
inc
and
rorl
add
push
or
jp
lret
jg
ds
mov
popa
jne
cmpb
sbb
adc
imul
cli
in
push
push
call
push
sbb
fistpl
push
push
add
push
add
mov
cltd
shl
dec
jnp
sbb
push
mov
jg
sbb
or
clc
push
adc
jl
outsl
add
inc
add
add
or
sub
add
cmpsb
add
push
loope
imul
pop
fmuls
cmp
pop
mov
adc
inc
ja
hlt
fiaddl
lock
push
addps
orb
repz
lret
xor
mov
sbb
cmpsl
add
outsb
cld
call
dec
dec
or
mov
test
push
jmp
and
out
mov
add
cmp
cli
out
push
je
pusha
stos
mov
loopne
mov
jno
ja
imul
add
sbb
add
and
mov
mov
or
sub
test
push
push
mov
movb
mov
cmc
cmp
inc
rorl
add
fstpt
sbb
stos
mov
shl
push
roll
jl
cmpsl
and
out
mov
inc
add
addb
outsl
pusha
aad
pop
add
movl
stc
or
mov
jecxz
lcall
inc
fimull
inc
sub
movsl
mov
nop
add
mov
sub
hlt
add
xorl
sbb
and
subb
call
addr16
add
mov
fiaddl
imul
je
clc
push
inc
mov
add
cmp
jne
fs
aam
push
imul
inc
add
xchg
into
sbb
add
shrb
rolb
dec
das
pusha
sub
adc
mov
fldl2t
sbb
xchg
sarb
cmp
sti
sbb
adc
andb
pop
adc
andl
adcb
mov
pop
mov
call
call
add
cmp
or
mov
dec
cs
cltd
add
pop
xor
mov
mov
call
shll
cmp
ds
push
sbbl
mov
enter
pop
dec
gs
data16
mov
andl
push
inc
or
pusha
add
xchg
lock
dec
push
mov
leave
xor
js
nop
push
cmp
adc
adc
lea
aam
pop
sub
add
inc
or
aam
mov
xorb
lods
shlb
add
xchg
mov
jo
in
stc
dec
xor
movq
pop
sub
inc
push
sub
mov
sbb
clc
jno
add
aas
orl
sub
push
cmp
adc
sub
inc
adc
push
pop
and
cmp
std
xor
push
mov
mov
enter
leave
jp
int
and
iret
call
sbb
into
sahf
adc
fcomps
or
lret
sub
lea
jecxz
add
add
and
add
es
push
cmc
loop
dec
pop
cmp
loopne
cmp
adc
andb
cmp
rclb
popl
je,pn
sbb
call
arpl
add
xchg
pop
pushf
or
aaa
add
dec
or
adc
cmp
sahf
push
and
adc
je
pop
ja
in
xchg
jecxz
push
mov
sbbb
inc
cmp
dec
jne
jo
push
add
sbbl
pushl
jg
add
cmp
mov
roll
push
xchg
cmpl
push
or
orb
jmp
test
fstpt
dec
add
xor
add
xchg
add
shlb
out
sahf
mov
pop
mov
mov
add
cmpsb
or
scas
mov
pusha
inc
mov
dec
add
xor
fcmovnbe
js
pop
add
xor
or
repz
add
add
loopne
sbb
fadd
sub
movsl
pusha
add
mov
pop
jge
mov
movsl
popl
or
test
sbb
movsb
adc
add
test
aaa
mov
jge
je
mov
jmp
loopne
sub
rcrb
add
pop
in
mov
xorb
xchg
jp
add
jno
add
jne
cli
and
ret
fxch
rcll
sub
adc
call
sub
sbb
xchg
add
push
shll
cmp
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
adc
push
xor
mov
or
push
xchg
sub
mov
decl
and
mov
push
pop
addl
andb
fs
lea
fiaddl
sbb
add
push
and
aaa
daa
add
dec
pop
sub
fcomps
mov
or
mov
or
xor
add
push
call
sarb
aaa
fiadds
add
ret
and
out
sbb
adc
xorb
and
inc
push
or
mov
mov
pop
aas
add
jmp
sbb
or
mov
jne
jo
outsb
dec
add
push
ds
add
insb
lds
or
pop
mov
inc
or
lock
and
mov
push
pop
add
cmp
cs
jns
cmp
add
pop
push
jg
and
ljmp
adc
push
sub
or
cmp
pusha
lret
mov
add
add
insb
sti
cmp
jmp
mov
outsl
jb
imul
cmp
addr16
arpl
xorl
sub
scas
lret
int3
insl
mov
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
add
fcomps
adc
mov
adc
push
sbb
add
mov
mov
pop
dec
xchg
fisubrl
push
and
push
inc
jg
addb
inc
loopne
xchg
daa
mov
dec
pop
jbe
sahf
pop
rol
mov
outsb
add
jb
inc
add
and
sub
fs
ja
add
subl
adc
pop
mov
cld
loope
adc
sub
rolb
nop
mov
mov
sub
movl
imul
push
cmp
in
sar
repz
mov
ljmp
push
and
add
dec
sti
xchg
js
sub
insb
movsb
sbb
or
push
push
push
add
jnp
nop
test
or
daa
into
add
pop
xor
in
fldenv
loop
mov
add
add
push
addb
xchg
rolb
rorl
stos
sub
push
and
cmp
or
arpl
pop
xchg
or
add
imul
inc
add
and
add
xor
cmp
or
pop
mov
push
test
add
push
les
and
mov
inc
dec
inc
adc
mov
inc
or
scas
cmp
add
pop
add
push
pop
sbb
add
and
add
repnz
mov
cld
add
aas
ds
enter
loop
movsb
xor
loope
cld
cld
iret
add
xor
cli
cmp
mov
dec
sub
dec
push
xor
jbe
add
aam
xchg
pop
dec
idiv
stos
add
cmp
or
inc
mov
pop
mov
mov
add
cwtl
dec
sbb
xor
sub
xchg
and
cld
rcrb
add
jne
and
mov
ja
push
add
arpl
push
push
sysenter
pop
pop
and
jg
aam
jno,pn
out
jmp
push
add
push
push
push
test
in
or
mov
cli
das
loop
add
cld
dec
iret
sub
xor
mov
in
cli
jle
mov
into
push
mov
add
sbb
aas
and
movsl
loopne
add
icebp
cmp
mov
lret
xor
sbbb
add
cwtl
cmpl
push
shr
dec
pushf
push
xchg
add
adc
and
pop
or
dec
add
insb
rol
fsubp
test
or
inc
dec
pop
pop
ret
xor
or
mov
jecxz
scas
loope
in
mov
add
and
add
lret
pop
adc
pop
jecxz
adc
xchg
nop
add
inc
js
add
inc
loop
cmp
jo
add
in
mov
cmp
xchg
adc
imul
flds
cmpsb
clc
bswap
mov
sbb
cmp
fidivrl
pop
sub
pusha
push
sbb
mov
add
inc
in
testb
push
adc
insb
pop
pop
sahf
add
sub
push
dec
xchg
xor
cld
dec
jl
cmpb
jle
mov
iret
aaa
add
stc
add
jl
add
jg
sti
xchg
push
lock
cli
dec
inc
dec
fists
jns
dec
mov
mov
dec
cld
addl
push
inc
cwtl
icebp
sarb
xchg
mov
lret
cmp
repz
mov
ljmp
aam
test
ljmp
lcall
scas
and
jne
cmpl
or
sbb
lock
xchg
cmp
scas
mov
cld
jns
cmp
faddl
xchg
pop
xor
sar
and
cmp
icebp
jl
jmp
jbe
add
cltd
test
aam
lret
pop
push
repz
add
ficompl
cmp
leave
add
inc
pushf
aad
cmp
adc
dec
jg
loop
mov
sbb
inc
sub
jne
xor
icebp
push
mov
lods
loop
fs
aad
add
pop
xor
mov
cltd
pushf
xor
and
push
add
adc
sbb
rcll
int
cmp
mov
pop
push
jns
add
popa
xchg
jl
push
icebp
dec
add
test
add
dec
sub
in
xchg
jl
push
dec
lock
mov
add
pop
clc
mov
push
sub
or
or
add
inc
ss
decb
pop
ud0
add
jns
cmpsl
dec
jne
lcall
cmc
add
push
or
adc
jg
add
push
cld
aad
adc
or
addb
add
dec
andb
jno
add
adc
fnstcw
add
mov
mov
int3
hlt
and
das
adc
xchg
inc
lea
stc
mov
push
add
test
inc
lock
test
inc
bound
jnp
data16
mov
int3
push
mov
or
fisttpl
jmp
push
js
pop
and
mov
das
adc
sti
add
repz
push
jo
in
add
out
fidivl
add
push
mov
cmp
cmpsb
cmp
repnz
sbb
test
and
inc
ucomiss
cmp
in
rolb
mov
inc
popa
jl
orb
mov
ss
mov
adc
push
mov
push
mov
pop
add
inc
rorb
ret
es
adc
into
mov
ds
mov
fadds
sub
fwait
hlt
or
push
stos
ja
cli
add
push
xor
sub
xor
cmc
push
sbb
or
leave
in
push
push
cmp
or
mov
sbb
jecxz
lds
ficoms
or
or
lahf
push
cmp
jb
subl
jne
sbb
add
loope
hlt
mov
sub
or
add
nop
add
cmpl
subb
jno
jge
shl
mov
daa
add
adc
add
mov
jae
pop
pop
pusha
push
jle
and
mov
dec
add
sbbl
push
adc
movd
add
xor
fnstenv
sbb
xor
movsb
mov
add
xchg
enter
add
or
jne
add
lock
into
stc
jge
loopne
mov
pop
mov
cs
lock
xor
pop
pop
inc
frstor
jge
aas
and
lret
xor
push
inc
cmp
sub
add
leave
pop
pop
aad
mov
xchg
or
add
cltd
and
jno
add
sub
popf
dec
dec
and
sub
ret
iret
call
adc
sbb
xor
push
add
mov
idivb
add
sbb
add
arpl
mov
cmp
clc
pop
cltd
inc
or
push
pusha
jmp
cmpsb
dec
mov
mov
subb
push
jge
push
mov
pushf
and
int
std
add
call
data16
dec
or
fiadds
push
add
shrl
mov
add
mov
jl
out
insl
add
fimuls
shll
xor
filds
andb
jmp
pop
cmp
add
or
pop
test
push
notl
mov
pop
xchg
add
lret
dec
xchg
or
push
add
ror
push
push
orl
or
pop
arpl
mov
into
sub
mov
test
inc
mov
dec
mov
mov
fdivrs
pushf
mov
mov
daa
stos
jl
jbe
clc
cltd
and
add
pop
fisttpll
jo
push
les
add
add
fldenv
loop
cmp
add
dec
mov
daa
xor
pop
and
dec
clc
mov
push
add
dec
add
push
or
pushf
cmp
cmpsl
or
inc
pop
xchg
je
add
loope
adc
in
push
lret
sub
inc
add
inc
jno
adc
jmp
xor
filds
push
test
push
je
add
jmp
or
or
hlt
cs
and
inc
test
out
jmp
fdiv
and
mov
push
sbb
pop
jne
add
clc
xchg
or
int3
jg
cwtl
dec
cltd
xor
mov
inc
clc
adc
add
movb
sbb
jge
test
test
mov
ja
insl
cmpsl
jb
add
imul
xor
sbb
subb
je
push
js
add
add
adc
insl
add
data16
movups
ljmp
mov
mov
pop
push
ret
cwtl
xchg
add
repz
lea
jle
or
call
stos
cmp
add
rolb
add
inc
cmp
or
das
and
sub
xor
clc
scas
dec
jo
jecxz
je
fsubp
mov
fistl
and
pop
ljmp
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
jg
jmp
xor
fists
imul
or
jb
out
pop
push
xor
andb
pop
inc
pop
fildl
push
ja
cmp
push
inc
adc
call
dec
sub
mov
inc
jo
mov
aas
dec
loopne
inc
and
faddl
and
ret
pushf
nop
inc
cmp
add
mov
inc
enter
add
fimull
jno
int3
aam
aas
outsl
test
mov
fs
lds
pop
sbb
push
std
pop
loope
aaa
inc
dec
push
jg
add
imul
repz
sub
fiadds
and
xor
cmpb
jge
in
cmp
sbb
lahf
and
pop
inc
add
mov
lock
dec
xorb
add
adc
leave
sub
inc
sbb
sub
or
push
inc
and
rolb
cwtl
and
stos
add
or
ror
xchg
dec
loopne
fsubrs
push
je
jb
gs
jg
add
std
jae
fcoms
rolb
test
or
faddl
push
dec
cli
mov
add
inc
mov
add
clc
xchg
push
cmp
and
sbb
fsubr
cmp
call
xchg
add
lret
pop
ss
pop
imul
dec
dec
lods
cmp
rolb
pop
cmp
cld
add
add
mov
inc
jmp
mov
xchg
add
in
outsl
or
mov
hlt
ljmp
lock
adc
cld
in
xor
je
loop
add
add
jge
rcrl
arpl
js
jg
jbe
cmp
or
fists
lock
add
fwait
out
or
add
js
mov
add
push
adc
push
or
lea
je
xchg
mov
xchg
in
cmc
sahf
lock
sbb
and
clc
insl
mov
push
mov
mov
leave
js
sti
jp
pop
mov
push
xor
or
inc
jmp
pop
pop
sub
aad
ljmp
jne
sbb
dec
shl
test
dec
mov
xchg
cmp
mov
sub
or
jle
add
jmp
mov
mov
cld
add
inc
sbb
dec
gs
mov
add
orb
adc
add
jecxz
or
and
dec
dec
pop
add
or
es
add
xchg
jae
push
sub
add
or
sub
cmp
jmp
add
add
push
mov
add
fstl
add
call
leave
adc
sub
lds
pop
loope
enter
lods
push
pop
sbb
mov
ja
add
test
mov
mov
dec
jne
adc
sbbb
loopne
pop
inc
add
sub
dec
pop
jecxz
adc
jmp
push
add
and
movsb
pop
pop
push
push
sbbb
call
je
xor
pop
outsl
imul
add
pop
cli
add
lock
jl
shlb
mov
jmp
mov
jbe
jnp
sbb
aam
dec
mov
sub
xchg
and
mov
push
adc
sbb
sub
and
fs
xor
push
sbb
testb
adc
int
or
dec
les
sub
pusha
in
mov
push
push
rcrl
add
push
ret
and
mov
xchg
mov
sbb
sub
push
mov
add
push
test
or
adc
jmp
xlat
cmp
adc
xchg
rolb
es
mov
jecxz
xchg
lock
adc
stc
orl
push
inc
scas
clc
test
mov
push
add
adc
cmpsb
inc
ret
jmp
loopne
jbe
add
dec
jb
mov
pop
add
sbb
inc
mov
jnp
add
pop
nop
push
inc
aas
loope
jg
mov
repz
push
idivl
and
cs
mov
repz
xchg
lds
arpl
cwtl
add
sub
add
pop
mov
inc
push
rcrb
loopne
mov
add
int3
xor
and
lahf
adc
cmp
or
pop
jmp
lods
ret
inc
cmp
xor
xchg
pop
sbb
pop
cld
inc
fwait
cmp
in
sub
adc
mov
dec
add
mov
cwtl
or
and
mov
cltd
or
sub
push
mov
pop
add
push
or
loop
push
add
mov
icebp
xchg
mov
pop
mov
repnz
mov
add
jne
cs
mov
sub
sarl
add
and
shl
movsb
cmp
test
fiaddl
cwtl
jp
rolb
pop
cmp
push
rolb
mulb
add
pop
add
je
ja
lods
pop
jno
add
addl
stc
inc
jle
sub
lock
mov
in
or
xchg
jne
es
pop
pop
add
pusha
incl
fsubrl
push
push
cmp
lret
jle
push
das
dec
cmp
enter
icebp
pop
movsb
sbb
mov
add
sub
adcb
cmp
or
jge
mov
add
mov
adc
lods
shll
daa
pop
push
loop
add
adc
push
push
nop
or
test
cmpsb
rcrl
ss
lock
mov
in
movsb
add
test
sub
sub
daa
repnz
pusha
xor
dec
sbb
pop
sub
inc
xchg
jbe
int
adc
xlat
and
dec
stos
aas
add
jl
je
xor
add
aad
lea
rcrb
fisttpl
sub
cmp
add
fmulp
shr
mov
es
sub
pop
or
ret
iret
aad
shlb
adc
test
inc
inc
add
mov
cwtl
cwtl
xor
pop
mov
enter
ret
mov
add
add
or
adcb
add
out
inc
add
jb
or
cmp
inc
push
and
adc
pop
adcb
mov
sbb
sbb
stc
add
add
mov
mov
add
aam
flds
add
adc
hlt
shl
sub
xor
cmp
or
add
mov
lds
mov
aaa
cli
jbe
cmp
or
xchg
add
jge
and
mov
mov
add
jmp
cmp
pop
mov
adc
cmp
inc
add
xchg
add
aas
push
sbb
test
int3
pop
into
sbb
ret
inc
mov
push
add
nop
sbb
enter
mov
push
mov
hlt
push
daa
lret
into
pop
ds
or
sbbl
mov
pop
pusha
fisttps
add
add
leave
repnz
bound
inc
clc
jl
cld
jp
loope
mov
add
test
lds
aad
iret
decl
js
jo
mov
push
stos
mov
out
cmp
jmp
and
test
notl
out
sbb
mov
inc
imul
cmp
jl
pop
xor
cmp
pushl
xor
pushf
popf
sti
jmp
jle
push
inc
mov
add
sbb
cld
sarb
int3
repnz
test
jge
sbb
nop
fildl
inc
add
stos
clc
scas
adc
jecxz
cmp
pushf
mov
testb
inc
aam
testl
jp
iret
shll
hlt
pop
fsub
fadds
ds
push
add
cmpsb
scas
mov
pop
add
jbe
pop
dec
dec
in
xchg
jo
in
add
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
lret
push
fwait
xchg
and
add
les
aad
bound
lret
aas
cli
dec
loopne
add
mov
adc
fs
or
mov
add
pop
loop
jo
movsl
and
push
add
mov
aad
xchg
popa
add
rcrb
or
psrld
fcmovnb
pop
adc
mov
pusha
cmpl
ss
cmp
xor
jle
mov
jmp
test
jb
add
jne
not
loopne
rolb
inc
pusha
xlat
cmp
jb
add
ja
popf
repz
addb
pop
testl
je
xor
jnp
push
jecxz
lock
mov
pusha
and
add
adc
pop
add
repnz
ret
insl
pushl
add
call
and
flds
rolb
test
adc
or
in
in
adc
roll
rorb
push
jb
hlt
cltd
mov
mov
inc
add
mov
nop
das
adc
xor
adc
and
addl
add
push
stos
push
shl
cvttps2pi
sub
loopne
incb
add
cltd
sar
add
outsl
lods
dec
ljmp
mov
out
or
call
ljmp
dec
add
dec
movsl
add
pop
aaa
in
pushf
sub
pop
sub
or
mov
or
mov
cld
ret
loopne
in
push
stc
push
cmovb
or
add
clc
pop
push
subl
and
xor
dec
out
fs
inc
aad
or
les
add
data16
std
adc
add
test
adc
xchg
mov
mov
xor
adc
jmp
fs
dec
sub
call
js
imul
push
adc
sub
push
popf
repnz
fbld
fnstenv
mov
add
and
sahf
add
mov
push
imul
mov
adc
clc
enter
lock
sbb
add
xor
inc
cmpl
jge
xor
loop
call
push
ret
inc
test
into
or
pusha
ds
push
mov
xor
mov
mov
pop
dec
andb
add
sbb
out
jg
movsl
clc
adc
push
ja
jl
xor
jge
add
or
sub
sub
sbb
mov
or
test
mov
mov
dec
adc
sar
add
sub
insl
jmp
outsb
pop
xor
pop
xor
mov
add
int3
out
add
mov
cmp
cmp
fsub
push
or
mov
mov
or
add
or
add
mov
lret
add
and
testb
dec
dec
loope
inc
push
imul
cmp
and
jle
add
fdivrs
dec
cmp
and
cltd
add
push
inc
pop
fdivs
mov
or
pusha
jmp
loope
dec
std
es
pushf
in
cmp
and
adc
enter
xchg
mov
and
test
movsb
jb
loopne
scas
nop
scas
mov
sub
jl
and
je
jo
mov
add
cmp
in
jb
cmp
sbb
int3
xorl
in
jb
or
loop
mov
call
push
clc
pusha
and
xchg
lock
call
cmpsb
adc
loopne
cltd
add
rorl
or
ret
call
mov
add
and
jnp
add
js
cmp
jae
fs
push
test
inc
femms
inc
xchg
mov
les
cmc
pop
into
mov
in
cld
sbb
pop
pop
lock
add
sbb
jl
hlt
and
cmc
xchg
test
in
jb
stc
cmp
sbb
and
cld
and
xchg
shl
enter
loop
push
cmp
out
out
call
jmp
ret
andb
out
in
jb
cmp
sbb
rolb
jl
or
and
xchg
xlat
aad
mov
sbb
sbb
and
and
ficoms
shll
cmp
inc
inc
lds
add
and
xchg
jae
add
in
jb
cmp
sbb
into
iret
xchg
push
add
jb
cmp
mov
mov
mov
and
mov
jb
cmp
mov
and
jge
add
call
out
adc
xor
add
or
insb
gs
dec
addb
push
filds
inc
jb
push
add
jle
mov
rorb
add
pop
ljmp
adc
cmp
adc
popf
push
or
std
mov
pop
rcrb
inc
js
add
jb
hlt
mov
pop
xor
mov
cmp
addb
jo
pop
loope
adc
pop
test
or
adc
dec
jne
je
dec
add
outsl
jb
cmp
andb
inc
inc
jo
jmp
or
outsb
mov
mov
add
hlt
test
or
fmuls
dec
fimull
mov
js
adc
insb
mov
inc
pop
mov
push
sub
push
add
loop
rorb
inc
je
add
jns
mov
popa
pop
hlt
pusha
and
fcoml
push
outsb
xor
shr
and
or
inc
dec
jbe
scas
data16
push
sub
mov
dec
ret
mov
cmp
push
bound
mov
popa
jmp
pusha
sbb
mov
nop
imul
mov
rol
or
decb
xchg
pop
ficoms
rcrb
jmp
insb
pop
dec
inc
cmp
and
jle
inc
pop
or
inc
push
outsb
fs
pop
nop
push
sbb
pop
mov
cmp
mov
mov
pusha
xchg
dec
ss
test
rolb
mov
hlt
cmp
xchg
add
scas
rolb
add
outsl
aam
add
mov
add
ljmp
add
mov
mov
or
repz
sub
add
mov
add
nop
fs
pop
enter
xor
arpl
mov
shrb
jo
inc
imul
sbb
das
or
push
mov
mov
pop
and
ret
jb
pop
gs
jmp
outsl
fs
pusha
and
pop
push
bound
jae
mov
addr16
sbb
or
push
cmp
push
mov
popa
loop
mov
incl
add
dec
add
cmp
shr
pop
add
repz
pop
or
cltd
add
push
adc
or
add
add
bswap
mov
mov
call
sub
add
loope
lret
pop
dec
push
xor
sub
popf
inc
jnp
ret
mov
sbb
out
dec
cmc
pop
ds
inc
xor
sub
insl
cmp
stos
adc
add
mov
xchg
mov
ret
movsl
js
scas
aaa
pop
add
emms
push
add
cmc
clc
sbb
repz
je
mov
movsb
cwtl
or
jp
ja
pop
test
sub
sub
cmp
add
movzbl
push
xlat
add
sub
pop
scas
ja
push
or
call
inc
add
sbb
pop
add
incl
and
adcb
or
jmp
fs
sub
aaa
dec
clc
insb
into
sbb
pop
shll
out
push
add
xchg
loope
push
pop
dec
hlt
cmp
fwait
cmpl
or
add
xchg
sbb
adc
fisubl
push
or
inc
movups
dec
add
clc
cld
add
lock
add
mov
fisttpl
add
je
inc
mov
xchg
cmp
sbb
js
jl
push
aas
sbb
dec
push
out
add
test
repz
test
hlt
lcall
sbb
lock
les
daa
or
test
mov
int
fstpt
push
xor
bound
jg
ss
stos
xor
pop
jmp
mov
inc
sbb
push
test
icebp
in
or
dec
das
rcll
in
dec
cwtl
insb
add
sub
and
push
cltd
inc
sub
lret
adc
push
das
adc
rcl
xor
ret
idiv
cmp
dec
pop
adc
mov
mov
sub
pop
add
xchg
flds
sbbl
push
mov
push
adc
loopne
cmpsl
mov
add
pusha
xorl
test
sbb
add
stos
lahf
into
sbb
add
push
addb
add
mov
add
sti
addr16
lahf
loopne
cmpb
adc
mov
cmp
jl
inc
push
out
mov
cmp
jne
add
test
jg
jl
add
aas
mov
jge
add
sub
popf
cmp
jne
sub
xchg
mov
sbb
pop
movsl
es
add
sbb
push
add
inc
xor
mov
push
sbb
rclb
and
inc
andl
add
xor
cmp
icebp
add
rorb
aad
cmp
pop
mov
ds
mov
add
jecxz
xor
add
push
add
loop
push
fwait
lock
add
xor
js
xchg
xchg
test
push
or
jge
adc
je
call
rolb
xchg
add
insl
clc
xor
rolb
call
sbb
add
fstpt
push
jmp
je
add
inc
or
add
enter
mov
in
adc
ret
pop
cltd
add
ds
nop
je
rcrb
mov
sbb
add
pop
cs
roll
loopne
add
lods
push
call
mov
pop
fldl
pop
dec
inc
sbb
test
subl
leave
cmp
xlat
dec
mov
repnz
inc
stc
popw
dec
fsubr
shrb
fldl
and
jl
adc
add
push
in
incb
adc
sub
mov
mov
xor
lret
lods
adc
je
jp
add
mov
decl
mov
mov
out
add
xor
aas
or
push
jb
or
call
fwait
lret
inc
lock
inc
push
sbb
push
and
cmp
dec
pop
cli
or
enter
add
pop
inc
cmpl
mov
sub
inc
push
lret
rolb
mov
pop
mov
jle
clc
orb
stos
cltd
mov
enter
and
mov
clc
cmp
add
cli
or
adc
pusha
lea
cwtl
in
addl
push
or
xor
cmp
inc
add
jno
push
push
and
xchg
pop
mov
arpl
sbb
clc
push
inc
int3
sub
jbe
jb
out
bsf
dec
in
hlt
pop
iret
sbb
push
or
call
rol
mov
lcall
fnstcw
nop
psubq
jbe
outsl
mov
fs
add
dec
add
dec
mov
add
loopne
adc
push
js
and
push
or
out
movswl
pop
mov
mov
pop
dec
into
dec
lcall
dec
fcoml
add
cmp
cltd
push
mov
xor
add
rcrl
into
add
xor
sub
xchg
add
hlt
or
pusha
out
cmp
into
pop
add
stos
jae
add
es
push
jmp
fbstp
mov
mov
addb
sbb
fisubrl
jmp
or
ljmp
adc
mov
cs
or
mov
es
lock
popa
jne
push
push
hlt
ss
add
sbb
dec
nop
mov
xor
cmpb
pop
lcall
rcll
lret
add
pop
movsl
push
es
cmpsl
pop
or
push
loopne
add
pop
movb
cmp
mov
or
sub
xor
jb
add
ja
imul
inc
in
mov
mov
sub
ret
sbbb
add
push
ja
add
rol
aam
bound
out
es
je
lods
xchg
jg
add
mov
add
sahf
push
cld
cmpb
xor
fidivs
pusha
jae
and
bound
or
add
cmpsb
enter
jnp
jb
in
or
cmp
fs
xor
dec
or
int3
and
adc
jns
add
push
jo
dec
pop
fdivrl
roll
xchg
rclb
lea
les
cltd
add
cmc
cmpsl
fs
xor
mov
sub
or
pop
jne
mov
and
testl
add
sbb
pop
add
mov
inc
add
das
push
ret
icebp
xlat
add
lea
add
leave
mov
faddl
mov
lock
cwtl
jmp
pop
lret
push
push
push
dec
inc
mov
out
add
or
jne
lea
scas
sub
icebp
xchg
dec
loopne
push
push
and
cmp
cmp
or
add
and
and
cmp
pop
or
add
testl
pop
xchg
mulb
jnp
add
hlt
bound
mov
push
js
fsts
ret
inc
jmp
push
xchg
cmp
and
push
or
lods
loopne
add
jmp
mov
dec
movsl
push
jns
sbb
push
dec
sbb
lock
ja
add
or
push
jl
or
divb
mov
loopne
add
push
add
add
pop
jecxz
iret
dec
lret
sbb
pop
inc
push
addb
inc
loopne
add
cmp
mov
add
add
xchg
mov
add
aas
push
ja
add
inc
add
loopne
add
cmc
dec
inc
call
mov
cmp
bound
loope
mov
sub
sbb
daa
adc
add
dec
cmp
mov
and
add
inc
iret
sub
movsl
xchg
add
shll
push
ret
sarl
xor
pop
adc
nop
add
jb
dec
icebp
and
fistps
sub
popa
or
pop
into
clc
xor
add
or
and
sti
add
fldcw
add
lahf
lock
dec
add
shll
cwtl
inc
add
and
adc
cmp
cli
lret
mov
rorl
sub
cmp
jecxz
add
jne
dec
outsb
shr
add
jnp
jmp
or
aas
xchg
lock
cmp
ret
shlb
pop
fildl
testb
pop
add
popa
xchg
push
inc
mov
jge
add
sub
inc
arpl
add
leave
push
xor
xor
xor
jp
or
decb
jns
xchg
in
xor
xor
push
xchg
add
or
add
lret
ja
pop
dec
sbb
mov
pop
push
pusha
adc
inc
filds
xsave
jae
sbb
add
stc
jl
add
xlat
cmp
lcall
imul
leave
pusha
imul
push
rorl
call
or
add
mov
or
pop
fwait
cmpsl
add
sbbl
add
dec
push
jo
jno
dec
add
les
add
daa
or
add
adc
shr
add
pop
call
push
cmp
xor
jne
hlt
punpckhwd
pop
clc
mov
test
enter
and
push
adc
ss
add
testb
mov
icebp
sub
imul
jl
lods
pop
clc
or
out
fdivrs
std
push
cmpsl
and
cmp
gs
loopne
lea
add
cwtl
xor
in
fiaddl
mov
jge
push
nop
cmp
push
fsubs
ja
jle
addb
out
sbb
sti
sbb
mov
ja
lret
add
sbb
pop
add
inc
loopne
negl
dec
mov
xor
imul
rcrl
sub
inc
ss
jle
loop
add
or
pop
jne
add
push
add
mov
jecxz
icebp
add
jb
bound
pop
cmp
adc
pop
clc
lock
pop
nop
xor
pushl
push
add
outsb
call
add
test
jg
push
loope
xlat
xchg
add
enter
addr16
mov
ljmp
xchg
into
dec
dec
and
or
xchg
filds
jmp
adc
ret
adc
sub
or
in
mov
add
lods
mov
xor
cmpsl
push
mov
lcall
decl
push
sub
cltd
imul
and
sub
inc
insb
add
pop
mov
add
lock
scas
push
and
add
dec
jae
sub
mov
ss
add
ret
ja
je
pushf
add
mov
mov
add
jb
mov
sbb
add
mov
add
or
push
hlt
push
and
inc
daa
push
fdivs
add
xchg
or
add
dec
mov
add
outsl
xchg
rolb
add
popf
or
push
int3
imul
xchg
jle
cwtl
shll
pop
add
daa
mov
add
fcoml
pop
sbb
sbb
add
push
add
xchg
and
sub
xlat
add
jp
xor
add
sub
xor
dec
mov
sub
mov
sqrtps
nopl
es
or
mov
push
shlb
add
push
push
add
les
add
or
mov
jmp
add
push
xchg
pop
add
xlat
jmp
testl
stos
xor
adc
xor
add
add
xchg
fidivl
inc
add
dec
shrl
adc
das
jp
call
add
xchg
pop
addl
inc
or
push
push
mov
dec
mov
sub
add
fcmovne
dec
pop
jge
add
les
cmpl
adc
jnp
jmp
sti
or
je
add
mov
add
and
mov
lcall
mov
jno
dec
jmp
add
sub
ret
and
jae
jne
pushf
xchg
mov
jp
push
aaa
gs
mov
add
je
pushw
jle
pop
mov
add
stos
and
cwtl
mov
or
das
into
or
mov
in
pop
dec
les
pop
mov
inc
sahf
dec
inc
sub
pop
rol
pop
and
xor
add
pop
mov
cmp
stos
cmp
scas
push
jbe
dec
lods
add
ja
scas
jnp
add
push
xchg
aam
mov
dec
or
scas
ss
add
sti
inc
pop
pop
outsb
je
add
dec
push
sarb
push
push
cmp
dec
adc
aam
nop
jno
xor
add
mov
sub
stos
adc
gs
adc
clc
and
mov
nop
mov
and
imul
and
or
jp
pusha
cmp
das
lds
loopne
xor
repz
add
push
mov
add
and
mov
sub
inc
rcrl
mov
bsf
mov
loopne
ja
cmpl
push
lock
add
adcl
lock
insl
pop
scas
aad
push
inc
add
mov
add
jae
arpl
and
lds
sub
dec
sbb
or
aaa
insl
mov
aad
sub
daa
pop
fs
xadd
js
jmp
push
nop
inc
test
jns
add
mov
clc
push
cli
test
lahf
dec
adc
je
inc
xor
shrb
test
jl
popa
test
les
insl
jge
lock
dec
fcompl
fs
add
add
sbb
fmuls
pop
in
add
mov
call
add
lret
jb
jo
add
test
add
mov
mov
rcl
and
in
adc
dec
add
sbb
mov
mov
out
inc
std
mov
shl
inc
pop
sub
nop
inc
ret
daa
ret
sub
mov
jmp
sub
popf
xor
mov
int3
daa
add
js
adc
inc
adc
sbb
dec
mov
pop
add
mov
adc
mov
adc
dec
sbb
mov
dec
and
fdivs
push
push
insl
add
aad
push
pop
gs
es
dec
popf
mov
cmp
test
pop
inc
push
xchg
add
adc
sub
addr16
cmp
lods
addb
es
mov
add
mov
daa
add
push
or
mov
pop
lea
push
push
add
pop
nop
pop
inc
arpl
fiadds
rcpps
add
dec
or
in
add
dec
and
call
add
mov
sbb
les
mov
ss
cmp
jmp
popf
in
sbb
hlt
inc
mov
outsb
sbb
inc
sarl
leave
fistps
lods
test
xor
mov
and
decb
nop
add
push
sub
jmp
pop
or
and
aaa
pop
dec
lods
cld
rorb
js
insl
addb
push
gs
addb
push
sahf
insl
subl
jo
sub
mov
xor
out
aas
jo
sbb
add
hlt
stc
add
dec
adc
in
mov
scas
inc
jno
fildl
sbb
js
incb
sti
add
jg
cmp
jne
icebp
push
adc
inc
call
insb
add
pop
pop
cwtl
stos
jmp
sbb
sarl
add
pop
les
orb
inc
add
or
addl
dec
je
or
ljmp
and
ja
jne
adc
pmaxsw
fcoml
sbb
xsavec
jno
pop
jmp
xor
cmp
push
cld
loop
les
in
or
popl
push
shr
addr16
mov
xor
outsb
sbb
addb
jne
pop
hlt
lock
mov
adc
inc
addb
push
mov
mov
dec
mov
sub
jne
into
mov
orb
dec
lock
dec
mov
int3
shrb
push
or
or
imul
add
sub
mov
cmp
push
adc
add
dec
jmp
inc
push
bound
cmp
pop
daa
jmp
pusha
inc
in
stc
aaa
in
add
and
jmp
das
xor
nop
mov
mov
ret
flds
add
or
adc
or
into
adc
clc
push
out
push
loopne
call
push
mov
fsub
nop
add
adc
into
add
or
add
and
jo
cs
movsb
andl
adc
adc
mov
xchg
mov
fsubs
cmp
pop
add
or
jns
add
lock
and
test
or
leave
add
je
data16
xchg
dec
cmp
cmpsb
mov
xchg
shl
cli
hlt
cmp
push
mov
call
loopne
jb
add
cmp
dec
or
pop
adc
mov
movsl
or
add
add
and
xchg
lea
dec
lret
pusha
fs
jmp
pop
aas
xchg
and
pusha
pushf
xchg
mov
test
sbb
adc
and
pop
movsb
mov
mov
cmpsl
inc
mov
mov
mov
aad
mov
cltd
movsb
jp
dec
mov
das
xchg
cld
mov
ret
add
cmp
jb
je
inc
add
or
out
add
imul
mov
scas
popf
je
fimuls
adc
mov
mulb
rcrb
xchg
add
pop
adc
leave
push
jecxz
mov
add
lock
subl
sub
or
add
lret
adc
adc
sbb
jno
xchg
pushw
les
in
leave
mov
mov
sti
mov
dec
arpl
pop
repnz
mov
push
add
adc
or
mov
xchg
sub
test
xchg
andl
test
int3
sub
inc
mov
clc
jns
lcall
dec
xchg
sbb
filds
and
sub
add
lahf
flds
xor
out
pop
sbb
inc
ljmp
and
test
inc
and
aam
push
sbb
inc
mov
jne
hlt
sbb
scas
add
mov
pop
arpl
pop
pop
movsb
add
mov
and
test
push
fmuls
lea
push
adc
add
rorl
xor
data16
add
sti
cmp
repz
inc
dec
test
add
xor
xor
idivb
add
loope
and
add
add
add
add
inc
pop
std
inc
mull
shr
adc
in
add
jnp
les
ljmp
push
dec
repnz
ja
jns
nop
xor
cli
pop
adc
shl
mov
mov
imul
add
cmpsl
jl
add
mov
xor
enter
pop
clc
mov
cmpsb
fldl
sub
jb
adc
inc
and
add
out
test
add
lea
adc
add
push
or
push
jbe
lahf
push
and
xor
dec
add
add
adc
loop
jl
add
mov
cmc
add
lret
adc
or
sub
mov
or
dec
push
and
add
pop
and
inc
cmp
inc
subb
jb
push
inc
mov
pop
cmc
xor
cwtl
dec
stos
ret
call
out
subl
cmp
add
pop
push
or
psubw
insl
gs
and
stos
cli
add
adc
dec
add
leave
ja
add
dec
adc
je
cli
sbb
in
add
mov
movsl
in
pusha
in
mov
shrb
out
je
shlb
adc
sbb
in
jle
jmp
lds
icebp
dec
add
sbb
adc
adc
std
push
cmp
test
outsb
sbb
cmp
mov
mov
nop
cmc
enter
ss
rcr
cmp
add
lahf
imul
sub
aam
mov
and
add
pop
fsubr
add
cld
sub
xchg
cmp
lds
fcomps
mov
mov
adc
mov
sub
shrb
inc
clc
idivb
hlt
cmp
enter
roll
pop
mov
dec
arpl
in
push
sub
les
aas
xchg
and
cwtl
rolb
lock
mov
add
mov
add
push
hlt
mov
pop
iret
mov
sub
sbb
ss
stc
inc
or
mov
fstpl
add
dec
xchg
mov
mov
jo
add
push
push
insl
das
fs
mov
cld
push
pop
add
or
repnz
popa
mov
push
add
and
jge
inc
xor
loopne
xchg
add
push
mov
sub
cmp
add
test
pop
add
push
mov
je
add
aam
test
add
xor
pop
mov
inc
inc
and
add
icebp
sbb
mov
mov
cmp
or
and
mov
inc
jb
add
imul
enter
popa
jle
sbb
inc
add
fld
sub
insb
xchg
push
add
adc
rorb
cmp
pusha
add
call
pop
sbb
and
dec
push
notb
push
mov
jl
and
xlat
js
xor
mov
addl
xor
and
les
inc
dec
mov
xor
es
aas
inc
xor
divps
sbb
add
mov
or
lods
push
loope
adc
je
insb
mov
xor
int3
out
push
add
cmp
sub
test
inc
inc
add
fcoml
sbb
cli
mov
sbb
enter
dec
mov
mov
hlt
rcrb
or
mov
cmp
adc
rep
scas
fsubl
test
sub
adc
xchg
or
aas
jo
aas
pushf
pop
add
lahf
cwtl
lahf
mov
nop
aaa
js
mov
dec
or
mov
test
andb
scas
pop
cmpsl
sbb
fs
je
mov
mov
lock
cmp
flds
cld
xor
cwtl
iret
adc
in
movsb
xor
repz
adc
mov
pushf
js
xorl
inc
sbb
stc
clc
andl
hlt
xchg
addb
sbb
and
aas
adc
inc
leave
inc
rolb
repnz
xchg
imul
stc
dec
das
and
push
add
je
xchg
data16
push
sub
or
and
xchg
addb
add
sti
shll
dec
pop
xchg
pop
cld
xchg
sub
xor
jae
xchg
call
sbb
nop
inc
cs
cmp
cld
jne
out
mov
pop
adc
add
add
or
mov
mov
add
popf
xor
xchg
pop
mov
mov
or
push
jb
cmp
aam
inc
inc
xchg
and
shlb
push
mov
mov
add
sbb
push
add
dec
dec
push
in
mov
cmp
std
jl
sbb
leave
xchg
sbb
sbb
push
pushf
sarb
iret
jmp
cld
ret
inc
inc
add
loop
or
or
stos
push
clc
pop
dec
cld
inc
add
stos
xorl
and
stos
pop
adc
or
rol
pop
or
mov
add
xchg
add
add
ljmp
push
pop
in
stos
add
jmp
loop
jge
andl
push
mov
mov
stos
xchg
add
popa
fdivl
divl
push
add
inc
dec
pop
or
adc
xchg
push
stos
cmp
clc
and
jae
addb
cmp
sbb
push
loop
add
add
sub
fldt
mov
dec
add
faddl
add
dec
jne
add
xor
ljmp
jecxz
aas
jae
add
add
sub
es
sbb
inc
push
add
and
and
add
cmp
jbe
jg
jmp
pushf
xchg
rclb
and
add
shlb
pop
jbe
dec
mov
jp
sub
call
not
cvtdq2ps
inc
loop
lock
pop
shlb
add
and
outsb
inc
add
and
std
es
jg
push
add
add
jge
cld
aam
sbb
jle
add
cs
inc
cmp
fidivl
jle
add
adc
sub
sub
xor
inc
pop
sub
repnz
add
imul
add
or
mov
jmp
scas
icebp
or
or
pop
push
dec
testl
shr
test
jmp
rclb
mov
das
in
sbb
or
sarl
or
stc
cmp
adc
add
push
mov
sbb
add
cmpsb
fwait
push
push
cld
xor
xchg
popa
jmp
nop
xor
sub
popa
inc
xlat
je
cmp
lock
add
test
je
or
cmp
daa
mulb
jo
and
dec
xchg
adc
sbb
add
or
add
lods
cmp
rcrb
test
jmp
sbb
add
mov
mov
push
clc
cwtl
push
and
es
xor
add
jl
in
xor
xor
gs
ss
movb
push
xlat
jmp
inc
jbe
cmp
sarl
outsl
lret
andl
cmp
scas
mov
movsb
jno
scas
xor
sub
mov
decb
insb
add
mov
xchg
pop
add
imul
add
shl
jbe
cmp
dec
add
and
ret
cmp
dec
addb
add
sarb
push
inc
jl
popa
sub
lret
sbb
inc
mov
pop
pop
ret
inc
cld
sub
push
lret
add
into
daa
cs
repz
add
push
mov
adc
and
add
es
mov
add
ja
xchg
fsubs
cld
add
or
in
and
jno
add
add
push
mov
iret
ja
mov
in
add
sub
ficoms
mov
sbb
adc
xchg
add
dec
inc
jne
jmp
mov
xor
in
add
cli
inc
mov
dec
inc
pop
push
adc
loopne
xor
and
push
loop
jne
mov
cld
jecxz
xor
mov
leave
repnz
cltd
mov
shll
add
jbe
add
adc
sub
or
add
rorb
cmc
xchg
push
or
cmp
testw
lahf
pop
adc
jle
add
adc
inc
push
in
shr
bound
aas
cmpb
adc
add
gs
mov
in
pop
loopne
fabs
call
or
fldt
add
cmpsb
test
add
addb
pop
fidivrl
fbstp
lea
add
mov
inc
sub
adc
call
sub
sub
cmpb
mov
xchg
or
add
dec
or
cmp
cmp
movlps
sbb
xor
jo
sbb
dec
js
adc
cmp
in
or
pop
data16
cmpsb
adc
xor
pop
sub
add
and
sub
mov
mov
ljmp
push
add
inc
push
mov
addr16
cs
enter
sysexit
test
push
into
mov
repz
mov
add
testb
dec
add
or
fidivl
jae
add
push
nop
rclb
add
hlt
fildll
xlat
mov
ret
fidivl
mov
fwait
mov
mov
or
out
add
and
jne
dec
out
add
add
stos
add
sbb
and
ss
xor
addr16
andl
cmpb
shl
stos
add
repnz
mov
xor
mov
push
test
pop
lock
add
fnclex
add
add
or
add
or
call
sub
jo
cmp
ret
add
sub
movsb
pop
add
add
je
push
sub
fists
jo
pop
aam
add
sbb
sbb
and
popa
xchg
loope
cwtl
div
dec
mov
push
inc
add
add
aas
jmp
fucomi
fwait
add
clc
test
popa
sahf
cmp
ffree
mov
mov
nop
add
xchg
and
add
aas
sub
dec
add
add
fimull
add
push
test
and
mov
xor
dec
mov
adc
xchg
cmp
imul
nop
pusha
es
hlt
jl
add
mov
mov
mov
hlt
push
add
push
jne
sbb
jno
mov
add
add
add
add
daa
add
in
mov
sub
xor
mov
jp
lds
adc
adc
inc
inc
and
inc
loopne
cwtl
test
add
or
or
cld
les
in
and
sub
rcrb
add
lea
mov
lds
jae
mov
push
add
xlat
and
movsb
mov
cmpb
dec
sbb
mov
cs
jo
dec
jbe
or
scas
jns
xorl
jge
or
lods
and
loopne
ret
rorb
fwait
jo
xchg
setl
and
clc
add
inc
inc
push
aam
push
or
mov
and
pusha
in
jnp
movsl
pop
dec
hlt
xor
jecxz
push
not
mov
pop
or
shl
cli
fsub
mov
or
loopne
add
push
jno
mov
out
add
mov
and
popf
push
jg
and
or
jl
add
push
ret
adc
mov
clc
mov
add
test
adc
fs
sub
shr
add
icebp
cmp
jmp
repz
pushw
and
dec
mov
clc
cmp
add
and
popf
mov
adc
cli
jae
jl
add
shlb
xchg
add
add
jmp
xchg
adc
sub
dec
jecxz
setne
loopne
jne
loope
sbb
leave
xor
inc
adc
mov
lret
nop
in
popf
lret
test
cltd
add
test
adc
add
jmp
loop
inc
pop
ds
pushf
cmc
add
daa
sbb
add
sbb
lret
push
leave
addb
jbe
and
sbb
or
in
xor
daa
or
adc
push
iret
sarb
add
add
cs
or
sub
aas
push
dec
movsl
push
loopne
popf
stc
cmp
jbe
pop
scas
xchg
popa
or
cmp
mov
add
popf
xchg
or
cmp
inc
cmp
sar
or
push
lahf
push
les
mov
push
adc
add
dec
paddsw
out
pop
add
mov
lahf
outsl
mov
js
hlt
add
in
aad
cmp
inc
inc
inc
add
add
mov
add
add
fdivp
enter
or
or
add
ljmp
dec
jne
jle
in
arpl
cmp
dec
addr16
sub
loop
pop
mov
jo
add
pusha
movsb
test
in
ret
xchg
popf
rorb
push
jl
inc
lods
xlat
dec
in
add
cwtl
add
das
loope
loopne
jns
add
hlt
loop
or
sbb
aam
shl
inc
lss
sbb
pop
lods
xlat
push
adc
push
and
add
xor
clc
push
jne
xor
add
in
jge
lock
incl
jae
aas
dec
in
adc
daa
mov
fstps
and
cmp
or
in
sarl
sbb
jl
pusha
pop
mov
incl
add
sub
jae
lods
dec
add
andb
and
decb
in
je
jge
add
sbb
xchg
sbb
cmc
shrl
insl
cmp
add
repnz
lahf
mov
inc
inc
add
inc
dec
dec
sbb
dec
dec
add
dec
push
push
push
cmp
mov
pop
add
popa
bound
jae
jo
add
imul
outsl
add
jb
je
jbe
ja
add
xor
xor
xorb
sub
add
sub
add
jge
cmp
sub
add
daa
or
add
push
call
xchg
pop
stos
add
or
add
clc
or
adc
xchg
ret
jmp
hlt
sub
cmp
repz
fsubrl
xchg
incl
data16
loope
mov
cmp
add
and
jmp
add
xchg
in
loopne
push
dec
add
pop
jle
jno
sub
test
rcrl
add
or
inc
lahf
add
xchg
andb
add
add
xor
lock
cli
adc
stos
lret
xchg
pop
pop
jle
or
dec
adc
mov
faddl
add
jg
adcb
ds
out
cmp
adc
in
jno
pop
mov
dec
inc
dec
in
call
jbe
sub
movl
roll
decl
xchg
lods
add
jle
cli
fldpi
fisubl
add
and
adc
xchg
out
cmp
push
nop
push
xchg
jnp
jo
mov
add
pop
lahf
sbb
push
movsl
cmp
xlat
test
fildll
adc
add
dec
leave
or
imul
add
add
pop
jo
and
sub
out
push
mov
insl
lods
sbb
enter
gs
fdivrs
inc
rorb
or
mov
dec
pop
inc
sub
hlt
push
push
lods
les
pushf
push
pop
or
cmp
je
xchg
sti
lea
mov
imul
xor
mov
mov
and
outsl
mov
dec
add
pop
mov
or
push
and
mov
loop
xchg
sbb
or
inc
or
cs
jb
add
push
push
inc
push
ror
loope
aad
insb
xchg
and
hlt
ljmp
aam
lods
lahf
jg
push
mov
leave
das
or
jle
or
add
mov
push
adc
mov
pop
cmp
test
daa
and
hlt
sbb
pop
adc
dec
xor
lcall
fstps
lret
add
xor
or
jl
jecxz
loopne
fld1
mov
xor
xchg
testb
add
jne
loop
add
xchg
add
test
xor
add
adc
pop
sub
and
mov
add
decb
fcompl
mov
add
shll
in
jge
add
mov
or
cmp
add
adc
pop
and
testl
mov
cmp
add
jo
lock
mov
and
add
sarl
sbb
pop
das
xchg
out
rolb
add
not
stos
cli
ja
mov
lock
ret
or
gs
push
add
idivl
push
into
inc
les
jne
or
and
push
enter
and
cmpsb
ficomps
movsl
test
pop
in
lret
jb
add
xlat
push
sarb
mov
mov
insb
movsl
mov
and
xchg
lock
sub
mov
inc
jg
add
lahf
mov
jnp
das
jns
sbb
push
hlt
push
inc
jae
xchg
adc
push
sbb
dec
add
fs
jne
or
mov
shr
rolb
xlat
arpl
or
lret
add
inc
pushf
movsb
sbb
out
jno
scas
fisttpl
pop
mov
mov
xor
cld
jno
push
mov
sub
negl
push
scas
shl
test
add
xchg
bswap
clc
daa
add
aaa
push
xor
mov
xchg
test
xor
sbb
sbb
rorb
push
add
mov
lods
out
xor
cmp
jne
lcall
sbb
imul
mov
push
push
dec
adc
add
or
push
cld
test
xchg
inc
add
mov
fs
add
mov
xchg
mov
andb
jae
in
stos
jle
lods
push
pop
test
add
adc
jne
mov
push
pop
cs
add
dec
icebp
call
xchg
sub
aaa
subb
sbb
fstpt
push
test
cmp
add
cmp
mov
ljmp
xor
test
out
js
and
in
add
test
dec
mov
mov
xor
mov
mov
xchg
fwait
adc
pop
es
sbb
clc
ljmp
add
inc
mov
inc
inc
sub
jo
stos
sarb
movsb
enter
cwtl
xchg
cld
or
fadds
add
das
rcrb
add
pop
lock
or
push
bound
je
hlt
adc
adc
sub
movsl
fs
popa
imul
push
adc
call
in
lret
add
mov
sub
add
hlt
pop
cmc
sub
mov
movsl
loop
and
cmp
pushf
dec
in
insl
mov
push
cltd
adc
dec
mov
mov
add
je
xor
repz
out
mov
js
xchg
push
xchg
in
jl
add
pop
lds
adc
pop
mov
adc
call
in
sub
lea
xor
jmp
cltd
decl
mov
xchg
pop
dec
sarb
and
lods
lds
lret
rorb
add
test
add
cmpsl
jns
mov
fldenv
pop
and
add
nop
dec
push
and
fstpl
fwait
push
shll
add
lea
cmp
add
mull
loope
outsb
fldl
in
mov
jb
cs
jae
inc
ret
and
inc
jp
cmp
mov
ja
test
cli
dec
mov
pushf
add
and
cmp
mov
sbb
inc
pop
jo
rorb
test
xor
jae,pn
push
idivb
pop
ja
outsb
xor
cmp
mov
aam
adc
inc
jb
xor
add
lret
jbe
shrb
jle
add
add
clts
fdivrs
jae
add
repz
into
jne
xor
add
fimull
aad
add
rol
iret
shr
rclb
mov
subl
add
fsubrl
out
repz
call
mov
ja
xor
cld
add
mov
sbb
mov
jo
jl
daa
xchg
aam
and
mov
loope
inc
jp
pop
in
mov
pop
cli
cmp
and
and
call
mov
sub
push
and
lods
jo
xchg
jne
add
shrl
jecxz
jmp
cmp
pop
or
add
clc
mov
cmp
rcrb
cmp
cmp
outsl
icebp
rcrl
repz
lods
mov
cmp
roll
ret
clc
dec
add
das
mov
repnz
jno
add
test
pushf
loop
ficoms
add
inc
add
adc
sbb
add
dec
stos
adc
push
dec
stc
xchg
mov
or
cmp
add
pop
cwtl
pop
lea
xchg
add
fsub
sarl
lock
scas
call
sub
mov
ljmp
jl
dec
lds
mov
dec
int
icebp
popa
jle
das
aam
mov
cmpsl
add
pusha
pop
pop
pushf
push
fidivl
xchg
adc
pop
add
xchg
stc
cmp
mov
pop
aas
add
jae
xchg
jnp
sysenter
sbbl
enter
and
loop
xchg
scas
add
add
add
adc
jbe
add
pop
and
test
cmp
addb
loop
mov
mov
sar
scas
add
sbb
jo
adc
mov
lea
rep
pcmpgtd
inc
pop
rcrl
xor
loopne
fs
cld
add
jg
les
mov
orl
subl
leave
out
add
movsb
mov
int3
stos
and
dec
mov
or
cmpb
call
in
add
add
pusha
scas
or
pop
enter
and
int3
fiadds
loopne
inc
aam
cmp
jge
rclb
and
pop
adc
imulb
pop
aam
inc
call
test
fs
push
rorb
fmul
push
add
xor
je
in
enter
push
sahf
dec
mov
lahf
sub
inc
add
in
xor
ja
dec
sahf
out
test
cmp
clc
add
dec
aam
fiadds
adc
pop
mov
rcll
iret
jle
arpl
mov
inc
popa
fildll
out
hlt
dec
test
fisubs
inc
mov
lods
cmpl
dec
mov
fdivrl
cwtl
pop
add
es
add
cli
and
aam
ja
xchg
cmp
fnstenv
sbb
loope
cs
sbb
mov
in
nop
fdivl
dec
dec
sbb
sub
mov
xchg
dec
pop
pop
jno
jmp
test
push
and
dec
mov
jb
rorb
nop
in
rcll
pop
fldenv
or
mov
jnp
push
pop
or
dec
inc
out
add
incl
add
jecxz
xchg
hlt
inc
cmp
xchg
add
sub
or
lret
test
dec
xor
xchg
loope
cmpsl
jbe
stc
and
add
cli
mov
push
or
je
mov
adc
btr
repz
sub
jo
movsl
or
sub
int3
rcrb
dec
jns
add
std
pusha
addr16
add
xchg
lret
pop
hlt
lahf
xlat
push
pop
dec
rorb
inc
sbb
aad
push
aam
xor
leave
xorl
dec
in
add
jb
ret
popa
inc
addr16
pop
cmc
mov
wrmsr
stc
icebp
pop
or
aas
or
cwtl
add
dec
inc
repz
xchg
jmp
das
out
push
sbb
push
cmp
push
add
or
bound
push
sbb
test
or
add
lods
xor
push
enter
mov
ljmp
sarb
pusha
mov
std
leave
adc
mov
add
cmp
dec
xchg
pusha
add
cld
mov
dec
add
sbb
pop
push
push
push
sub
pusha
test
add
clc
leave
push
push
vmovlps
and
sub
sbb
adc
add
mov
jmp
and
mov
or
pop
add
and
push
int3
cld
xchg
enter
pop
aas
mov
inc
mov
push
cmp
loopne
sbb
fucomi
add
push
xor
les
sub
popf
cwtl
jle
cmp
pop
sub
mov
out
mov
adc
add
add
mov
clts
clc
jecxz
cmovb
mov
mov
pop
dec
add
push
rolb
dec
call
inc
mov
add
and
cld
lcall
pop
mov
add
and
mov
xlat
orl
adc
ljmp
and
cwtl
std
push
dec
pop
push
mov
add
faddl
and
fwait
test
add
adc
rclb
enter
mov
test
sarb
mov
nop
add
jne
jg
test
icebp
outsl
inc
inc
js
popf
mov
jbe
adc
rolb
xchg
mov
xchg
add
and
imul
jl
add
loop
pop
inc
rcr
or
jae
addb
or
mov
mov
shl
lret
add
push
push
dec
stc
lahf
test
inc
add
inc
pop
xchg
xor
rorb
pushf
mov
addr16
orb
cmp
xchg
jne
pop
pop
nop
outsb
popf
mov
and
push
leave
jp
jb
dec
jge
in
ja
add
daa
or
jle
movd
push
and
and
jns
add
in
inc
insb
push
hlt
mov
mov
sub
mov
xor
xchg
loope
fsubs
sub
mov
scas
addb
mov
mov
jl
adc
sbb
mov
pop
fmull
dec
jns
insb
lret
and
mov
inc
in
fwait
mov
pop
addb
movsb
incb
popf
sbb
or
and
adc
es
out
addb
jge
push
pop
xchg
mov
inc
dec
repz
push
dec
add
mov
mov
add
ss
dec
jl
add
inc
mov
or
add
mov
inc
decb
lods
imul
sub
or
hlt
mov
pop
mov
mov
jg
mov
push
xor
shrb
adc
cltd
push
js
je
xlat
movsl
adc
adc
add
xchg
lret
iret
int
add
push
xchg
pop
cmp
mov
roll
mov
pop
nop
mov
sahf
mov
pusha
fldenv
add
add
pop
cmp
jmp
sub
pop
enter
nop
in
sbb
stc
jmp
mov
mov
jns
dec
cmp
lea
xchg
fmull
loopne
xchg
add
xchg
push
lock
or
add
sbbl
sbb
inc
sti
or
rcll
leave
fadds
push
mov
or
mov
movsb
inc
pop
mov
lods
gs
loopne
fists
mov
xchg
pop
mov
outsl
and
jo
popl
jle
mov
xchg
pusha
inc
in
mov
adc
clc
xchg
cmp
and
cmp
jle
pusha
repnz
or
adc
and
add
add
sub
jp
add
mov
pop
dec
mov
call
or
pop
mov
xor
lret
sub
inc
insb
add
jae
sbb
inc
lds
xor
add
ja
adc
and
mov
add
daa
adc
add
add
out
sbb
add
sub
sub
in
in
jl
and
ds
cltd
and
out
aam
mov
jnp
pop
outsl
lcall
mov
mov
add
daa
inc
xor
outsl
fisubl
add
and
pop
stos
jo
add
fildl
aaa
scas
lcall
mov
mov
fmul
add
leave
test
aam
jne
jnp
adc
mov
lret
scas
jge
ds
in
and
clc
xchg
ficompl
movsl
jge
xchg
dec
into
out
ds
nop
sbb
push
or
cmp
addr16
push
dec
gs
mov
add
clc
jae
or
fidivl
add
out
test
push
loop
sbb
dec
iret
mov
inc
inc
cltd
scas
std
lcall
adc
test
xchg
fdivl
stos
jecxz
and
mov
inc
xorl
int3
rcll
pop
pop
inc
dec
das
jnp
or
les
es
add
xchg
and
dec
jbe
std
dec
into
cmp
mov
push
xor
push
cmp
fadds
add
xchg
push
mov
test
stos
jne
add
out
das
js
cmp
adc
mov
rcll
pop
lods
mov
and
clc
sub
sub
jl
cli
adc
sbb
or
mov
push
add
dec
pop
inc
loop,pn
ret
cmp
adc
out
add
data16
inc
sub
inc
cld
sub
push
daa
jne
and
pop
pusha
add
jns
mov
aas
addr16
call
in
adc
push
lock
out
mov
hlt
jb
stos
add
lret
fs
sbb
scas
dec
add
out
rcrl
add
add
inc
shrb
push
dec
jb
cmp
bnd
loopne
out
das
pop
xchg
andb
xchg
clc
add
in
cld
mov
dec
repnz
lods
push
sbb
je
pop
arpl
loopne
andb
sti
or
lea
push
andl
dec
insb
mov
fimuls
pop
sub
dec
les
sub
mov
add
mov
fists
fsubrs
lahf
push
add
adc
ljmp
inc
sub
mov
or
and
mov
nop
sbb
adc
or
lock
stos
xor
jle
adc
sub
cmp
sub
adc
sbb
add
jp
cmpsb
xchg
sub
mov
cmpb
sub
jb
fdivl
vcvtsd2si
ret
cmp
inc
fcomps
add
daa
jnp
jg
jmp
fldl
repz
push
push
jmp
loop
cmp
add
jbe
ffreep
pop
pop
push
jae
jmp
icebp
or
dec
pop
and
mov
dec
daa
mov
testl
imul
aam
mov
sub
add
popf
loop
pop
push
dec
jmp
mov
rorl
add
stos
popa
xor
add
adc
data16
incb
mov
fmulp
sar
lock
add
push
add
ja
cmpsl
stos
test
movsl
fwait
or
push
bound
icebp
jl
xchg
sbb
inc
ljmp
sub
and
sub
xor
sub
in
out
fs
call
xchg
push
loop
adc
int
push
add
repnz
cmp
into
jb
cmp
jle
popa
add
pop
clc
sub
sbb
sbb
jae
pop
mov
lret
cmovne
or
add
sbb
inc
mov
in
add
cli
jbe
nop
lahf
or
ljmp
jge
cmpb
or
push
xchg
stc
sub
je
mov
ss
xchg
cmp
enter
loopne
sldt
add
add
adc
aam
or
jb
inc
jl
sub
pusha
inc
add
adc
mov
repnz
add
lret
imulb
cwtl
pop
push
push
and
add
loopne
sbb
dec
lahf
es
mov
inc
add
adc
or
aad
inc
lds
popf
push
ret
out
repnz
sti
jb
push
and
lfs
jne
adc
add
movb
xor
lds
cmpsb
rolb
adc
mov
fs
mov
cwtl
sbb
push
mov
and
enter
sub
dec
add
or
add
and
add
xor
aam
add
adc
scas
cmp
loopne
add
mov
adc
pop
inc
test
mov
clc
adc
int
cmp
add
adc
pop
aam
add
sub
cmp
jo
leave
js
add
mov
in
mov
inc
jne
adc
pop
pop
xlat
lea
call
pushw
inc
inc
inc
add
out
icebp
or
jnp
pop
and
jg
dec
push
mov
test
nop
xchg
cmp
jo
in
push
or
add
or
or
jle
rorb
xor
mov
add
cld
and
or
lret
insb
aad
xor
mov
cmp
dec
faddp
xor
add
in
je
icebp
push
je
add
inc
test
pop
adc
jle
dec
rorb
mov
rcl
data16
call
sarb
dec
push
xor
ss
pop
cmp
push
inc
std
in
and
mov
in
jbe
jo
cmp
mov
or
add
sbbb
push
sub
aas
jmp
add
sti
rol
jne
jp
or
dec
dec
bound
stc
sbb
push
lret
pop
cmc
addb
or
sub
add
movsl
jmp
mov
add
lock
leave
pop
daa
add
jnp
outsl
and
enter
sbb
add
imul
test
mov
adc
add
dec
movb
push
pop
dec
adc
test
aas
inc
push
repz
mov
add
mov
iret
add
xor
stos
add
jecxz
sbb
sti
and
mov
xchg
and
pop
or
pop
add
rol
clc
cmp
push
call
arpl
stc
and
or
lods
cmp
jno
fwait
imull
lock
or
out
adc
les
jp
add
mov
cmp
adc
fisubrl
jae
pop
cmp
je
pop
leave
mov
adc
mov
cli
jl
mov
sbb
and
add
adc
mov
mov
inc
sub
and
pop
mov
xor
and
or
mov
cmp
mov
add
outsl
stos
or
les
sub
lds
add
mov
adcb
mov
or
int
push
sub
sbb
lods
mov
xchg
stos
arpl
jmp
jne
sub
xchg
or
sub
jecxz
add
cmpsl
adc
dec
mov
loope
add
push
add
movsb
mov
lret
movups
push
mov
js
and
push
add
or
or
mov
into
roll
leave
or
sbb
sbb
repnz
inc
xor
test
mov
pusha
cli
jp
test
int3
push
and
mov
push
sub
pop
xchg
and
pushf
mov
sub
hlt
add
and
nop
cmp
cmp
add
outsb
xor
in
enter
mov
or
adc
mov
jmp
scas
add
and
dec
mov
pop
pusha
adcl
cld
cli
ret
lcall
add
cmovae
pop
xchg
push
or
mov
sub
sbb
cmp
add
inc
ficomps
jo
mov
mov
fs
sub
stos
mov
mov
rorl
adc
mov
add
sub
and
sbb
inc
les
ret
add
xlat
add
cs
jl
and
add
or
pop
inc
test
jb
adcb
daa
mov
js
dec
sti
jnp
adc
add
inc
xchg
pop
fadds
lock
nop
and
add
stos
int
out
push
pop
or
fdivrl
inc
xor
add
loope
ret
sbbl
pusha
cwtl
mov
add
int
mov
push
add
insb
nopl
shl
lods
fdecstp
add
fiadds
add
cmp
inc
test
add
jle
inc
outsl
sub
lea
pop
and
push
lods
cli
xor
lock
aam
push
test
loopne
rol
mov
jno
add
insb
pop
adc
andb
mov
les
cld
dec
push
inc
add
jmp
in
add
enter
arpl
jle
ja
outsb
xchg
add
aas
add
add
in
shlb
add
fistpll
adc
dec
or
push
jo
dec
and
fs
add
xor
sub
add
call
aam
push
add
xor
push
add
mov
in
lea
lds
push
push
cld
hlt
notl
movsb
outsb
shll
mov
xor
inc
sahf
inc
ret
sarb
aas
dec
loope
push
mov
xor
inc
mov
mov
mov
push
or
fst
jno
add
out
sbb
and
dec
or
adc
xor
out
add
sarl
loope
pop
ret
add
xor
and
jne
or
jae
add
cmc
add
or
adc
enter
movb
mov
push
and
imul
inc
xor
test
mov
add
fs
das
jno
out
fadds
cwtl
subb
enter
xlat
or
push
scas
testl
mov
cmc
sbbb
sbb
pop
jmp
testl
mov
mov
add
or
sbb
insb
mov
pop
rcll
arpl
lock
add
test
cmp
adcb
jns
mov
push
or
fs
rolb
bound
add
imul
icebp
push
sbb
inc
mov
leave
rolb
mov
jb
xor
add
push
pop
pop
cmpb
and
ret
lds
adc
cmp
stos
pushf
add
in
dec
xor
iret
fs
add
sti
flds
or
mov
sbbb
cmp
add
sbb
adcb
inc
add
cwtl
loop
lock
add
nop
out
fadds
lahf
test
cwtl
enter
out
add
mov
jmp
mov
int
and
mov
add
or
enter
pop
getsec
ret
adc
lea
jle
or
add
loop
shr
add
cmpb
and
jno
xor
add
mov
adc
or
adc
mov
mov
daa
sbb
flds
outsl
add
loope
mov
inc
xor
lea
add
mov
fisubl
dec
pushl
pop
sti
sbb
add
aad
mov
scas
rolb
jno
nop
loopne
mov
or
aad
jne
mov
popf
insl
inc
imul
je
pop
in
sbb
mov
adc
add
inc
adc
pop
mov
adc
dec
and
inc
mov
pusha
andl
repnz
xorb
jg
add
mov
jle
fwait
sub
add
fsubs
fs
out
cli
loope
ljmp
filds
into
sbb
add
and
js
add
cld
and
pop
cmp
and
fldenv
add
in
test
aad
push
jp
jl
pop
and
cmp
or
gs
lods
inc
les
inc
out
and
hlt
jge
add
mov
jb
add
add
rclb
inc
testb
pop
add
cs
xlat
bswap
jo
and
xchg
stos
rolb
add
adc
adc
add
xchg
xor
js
jnp
add
or
je
mov
add
rol
add
addb
xorb
int3
stos
xor
call
sub
jge
hlt
out
lcall
leave
mov
inc
stos
add
pop
cmp
lret
mov
jle
outsl
ljmp
subl
enter
push
test
fs
decb
adc
add
mov
add
mov
jmp
in
add
cmpb
add
mov
cmp
nop
jge
mov
xlat
sub
push
xor
roll
mov
es
outsb
popa
cmpsb
mov
stc
push
insl
arpl
aas
rcrb
add
loop
subl
xchg
pop
push
push
push
add
jl
test
call
pop
enter
fldenv
xchg
mov
push
clc
mov
and
xlat
scas
cli
testb
sub
js
push
add
and
jae
add
mov
dec
stc
mov
fimull
testb
or
ljmp
add
adc
push
cli
sub
mov
xlat
bound
lret
test
fimull
sti
sub
jmp
sub
bound
nop
xlat
xchg
jns
cld
jo
mov
mov
sbb
fmull
adc
fcmovnbe
or
and
inc
orl
pop
test
cld
sub
enter
push
push
add
fistpll
sahf
sub
xchg
adc
jg
test
mov
insb
out
inc
ror
ret
add
pop
add
xor
or
push
cmp
mov
push
scas
fsubl
faddl
jno
cmp
cmpsl
in
insb
add
insl
mov
dec
mov
fcompl
stc
and
xchg
mov
mov
out
shlb
mov
addb
or
cmp
mov
std
sub
sbb
mov
aaa
adc
test
aas
or
fstpl
adc
mov
test
sbb
and
inc
pop
aas
les
insb
add
pop
or
fdivrs
add
or
adc
mov
pop
ficomps
mov
test
or
dec
fadds
add
push
pop
or
xchg
rcrb
adc
add
in
push
and
add
lret
dec
aaa
or
in
pop
ds
movsb
add
cmp
les
stos
adc
adc
inc
clc
mov
and
or
adc
mov
je
loope
shlb
sti
add
push
add
add
jb
shll
add
fst
les
popf
cmp
mov
and
loopne
add
sbb
out
sub
sbb
daa
or
add
xor
jmp
pop
mov
aas
mov
inc
rorb
add
dec
loopne
cli
pop
call
jge
sub
jae
add
add
loope
and
or
rcrl
pop
negb
xor
cwtl
in
inc
sbb
jg
sub
movsl
cmpsl
xchg
lock
cmpsl
shll
push
jle
push
js
loope
xchg
sbb
sbbl
jl
add
sub
addr16
ret
or
test
popa
lods
movsb
mov
xor
sbb
inc
pop
adc
sbb
add
or
mov
add
mov
stc
pop
add
dec
aaa
das
or
xor
add
out
pop
out
or
xor
add
or
gs
lock
jns
call
push
push
jbe
scas
jecxz
ds
in
lcall
out
aaa
add
inc
push
adc
pop
shrl
cmp
enter
add
or
inc
push
inc
or
cld
mov
cmp
movsb
lcall
dec
movsb
lahf
add
clc
jecxz
test
sbb
add
add
push
add
data16
daa
mov
mov
inc
push
or
fcom
clc
test
add
lods
cmc
out
adc
loop
cmp
adc
mov
push
add
and
push
mov
xor
pop
outsb
rorl
cs
add
xor
fadd
add
pop
fiaddl
out
cmp
cwtl
xor
iret
add
outsb
pop
aam
mov
push
into
or
sbb
add
dec
lret
dec
outsl
cmp
xor
icebp
add
add
mov
mov
add
jp
fldenv
or
in
add
inc
lds
fldenv
xchg
cmp
into
add
xchg
add
pushf
shlb
std
and
or
add
loope
xchg
sbb
addl
sub
rol
or
add
cmp
inc
enter
sub
lea
clc
fs
shll
cmp
incl
call
test
add
mov
add
inc
pop
pop
adc
and
sbb
cld
out
mov
inc
stos
fistl
sub
mov
enter
dec
les
rcrb
mov
mov
xchg
xor
addr16
cmp
and
push
pop
add
jmp
pop
push
cmpsb
das
jo
nop
ljmp
test
xchg
sub
das
push
movb
pop
push
jmp
enter
pop
mov
fdivrs
mov
das
mov
dec
fwait
push
nop
lret
pop
sysret
xchg
loopne
enter
add
xchg
std
jmp
int3
and
cs
in
or
jnp
add
mov
jno
push
cmp
mov
add
mov
sub
je
in
inc
or
xchg
in
xor
xor
ret
xor
ror
mov
xor
add
sbb
shll
dec
pop
mov
dec
or
in
pop
cmc
mov
add
insl
les
loop
xor
or
lock
jge
jbe
add
sub
mov
jae
imulb
cmpsb
add
js
fbstp
cmp
dec
add
xchg
jnp
sbb
push
lock
add
jb
mov
cmc
and
sarl
call
das
cmp
mov
sub
add
sbb
cld
loopne
and
pushf
push
push
and
das
out
adc
mov
call
dec
sbb
push
std
xor
add
out
lret
in
jmp
pmullw
or
cmp
add
icebp
mov
inc
mov
jae
lock
jo
aam
mov
add
cmpsb
pop
xor
lahf
popa
lret
outsb
je
rclb
pop
enter
or
fs
inc
call
pusha
jo
clc
xchg
xor
adc
mov
cmc
pop
popa
pushl
add
dec
inc
jecxz
lret
test
mov
jle
js
and
dec
fs
inc
push
icebp
pusha
hlt
test
rcrb
mov
pop
add
mov
or
sub
xor
inc
in
popa
ret
xchg
test
data16
stos
sub
repnz
fs
push
pushf
and
dec
push
adc
cmc
cld
rolb
out
lahf
inc
ds
and
xor
pop
xor
mov
sar
mov
add
add
mov
push
in
add
fdivr
stos
clc
add
inc
mov
xchg
add
hlt
jle
jl
add
mov
or
dec
hlt
push
mov
lret
jmp
push
test
nop
nop
add
xor
sub
pushl
ficoms
cmp
ss
add
push
hlt
cld
ficomps
mov
adc
mov
or
cmc
inc
adc
stos
sbb
adc
and
push
add
lahf
fs
bound
and
push
push
xchg
jmp
xchg
xchg
add
out
inc
push
loopne
add
xchg
aas
and
push
inc
xor
dec
inc
add
or
and
clc
icebp
pop
rolb
or
idivb
sub
add
jae
testb
mov
xchg
in
nop
mov
outsb
in
cmpsb
or
add
enter
pop
add
or
jle
pop
rolb
cmp
push
add
hlt
and
cmp
sbbb
xor
xor
in
xor
lock
pop
imul
divb
lret
nop
xchg
inc
mov
pop
adc
lret
aam
add
push
adc
mov
test
pop
imull
cmpb
xchg
sub
ja
sbb
mov
negl
mov
clc
or
or
xchg
xor
pop
or
push
ja
sbbb
out
add
faddl
loop
addb
push
aaa
mov
fdivr
pop
add
cmp
push
pop
sub
ja
add
frstor
sbb
push
inc
sub
mov
or
add
adc
add
push
ds
xlat
and
sbb
add
xor
sbb
add
pop
je
inc
ret
xchg
or
dec
std
das
out
add
sbb
aam
addl
les
pushf
or
popa
push
push
mov
xor
pop
add
inc
cmpl
dec
mov
ss
pop
inc
push
stc
push
orl
dec
add
daa
lock
mov
cli
sub
add
rcl
cwtl
or
out
sbb
pushf
sbb
scas
jno
mov
xor
mov
xchg
faddl
push
and
sbb
mov
into
test
or
dec
fimull
adc
pop
pusha
inc
xor
dec
pop
add
out
add
and
or
sti
xor
mov
pop
jle
or
and
fwait
push
addb
add
push
or
cmpsl
int
adc
add
stc
xor
cmp
aad
add
or
xor
add
sub
xor
add
ja
jnp
add
mov
push
stos
fs
and
add
cmpsb
lcall
xor
je
inc
test
mov
add
call
jo
add
mov
sbb
out
loope
nopl
lea
cwtl
fists
cmp
inc
xor
add
cmp
fs
ds
nop
dec
jmp
dec
jle
add
lods
push
test
clc
in
cwtl
cmpsl
add
cli
mov
test
cmp
xor
scas
mov
push
idivb
fs
add
mov
add
shrl
jo
outsb
pop
push
or
js
stc
push
mov
and
sub
nop
push
mov
testb
bound
flds
cltd
out
mov
lea
cwtl
sbb
push
add
test
add
addr16
xor
movsb
add
mov
add
or
cmp
pop
outsl
sbb
loop
mov
xchg
cs
xlat
adc
add
cmp
xchg
cmp
es
out
push
add
add
jmp
mov
dec
and
add
sarb
les
jecxz
cmpb
enter
or
int3
int3
jecxz
shrb
shll
aam
mov
push
in
fdivrs
add
xor
sbb
push
inc
loopne
out
add
fisubs
sbb
mov
in
jne
inc
in
shrb
nop
lock
add
addr16
push
dec
adc
add
shll
enter
jmp
add
in
cmp
aas
cs
lret
push
xchg
incl
in
loop
adc
pop
in
jp
sbb
xor
decb
and
je
cmc
adc
and
xor
xor
and
push
dec
inc
lcall
mov
add
add
pop
jae
push
outsl
or
pop
push
lods
jmp
pop
sub
in
add
in
aas
add
out
add
add
mov
aaa
sub
sar
xor
add
and
push
aam
lock
jg
loop
or
add
ret
pop
shlb
adc
jg
push
rorb
add
jne
mov
clc
xor
shlb
addr16
loopne
add
sbb
mov
xor
adcl
xor
pop
pop
add
adc
pop
jmp
xchg
jg
add
jle
mov
add
lret
sti
push
cmp
pop
movl
sub
jle
add
ds
sbb
inc
int
xadd
sbbl
mov
add
add
rorb
orb
fstpl
sbbb
flds
sbb
pop
fildl
push
loope
enter
pop
add
jbe
cmp
push
mov
add
pusha
pop
pop
adcb
sbb
xchg
popf
adc
adc
roll
pop
add
shlb
xor
add
add
shl
repnz
jbe
sbb
loope
xchg
loopne
mov
cmc
shlb
cmp
cld
cmp
decl
sbb
xchg
popf
cmp
cmp
stc
sbbl
sub
add
inc
sub
add
sub
ljmp
jo
out
add
inc
sbb
push
in
and
pop
and
roll
and
idivb
jecxz
and
loope
and
mov
jo
mov
andl
sub
mov
movsl
shlb
out
fs
add
add
inc
scas
xchg
fldcw
test
push
js
mov
add
jp
jg
jg
js
sbb
sbb
add
mov
jl
add
out
mov
ja
mov
sbb
jb
mov
mov
jae
mov
jno
xorb
enter
adcl
push
inc
xchg
xchg
mov
adcb
jo
add
pop
and
jecxz
loopne
or
lahf
sbbl
fwait
add
cltd
rclb
sbbb
mov
dec
jo
add
mov
orl
loopne
orb
inc
mov
add
mov
add
inc
addb
ret
adc
jecxz
lock
add
sbbl
add
test
jecxz
in
pushf
es
add
xor
bound
popf
push
mov
mov
cmpsb
repnz
sbb
cld
pandn
cpuid
fneni(8087
shlb
rcrb
mov
pop
mov
stc
add
loopne
adc
dec
xor
add
lock
adc
cmpsl
nop
xorb
mov
jmp
aas
add
repz
sbb
and
mov
cmp
push
and
enter
xor
das
mov
add
mov
sahf
mov
xor
push
add
add
mov
data16
adc
add
mov
in
sbbb
push
cld
add
pushf
fbld
add
dec
or
xor
ret
fidivs
addb
mov
pop
dec
jne
dec
repz
push
push
test
das
pop
inc
cld
sub
imul
jecxz
xorb
adc
out
inc
lods
mov
add
sub
repnz
jl
jns
mov
clc
inc
ds
imul
adc
push
lods
cmp
jmp
nop
jo
call
notl
push
cmp
add
push
out
lock
movsl
movb
gs
jae
test
jbe
adc
je
add
fists
sbb
dec
add
repz
pop
in
sbb
pop
add
subb
add
lret
mov
pop
add
rcrb
add
push
add
test
sub
call
fs
out
mov
pop
add
push
stc
jge
dec
leave
enter
insb
add
stos
mov
repz
add
and
je
sahf
or
add
xchg
push
ret
add
incl
ret
xlat
sbb
fs
cmp
scas
pop
sarb
roll
shll
sbb
dec
or
mov
jno
rep
add
adc
sbb
leave
gs
cmp
mov
stc
jbe
aas
fsubp
mov
push
fld
and
cmp
add
sub
mov
test
arpl
inc
sbb
scas
and
xor
add
add
inc
sub
mov
xchg
dec
cltd
mov
mov
xchg
xor
xchg
push
adc
xchg
add
cmp
mov
add
add
push
aaa
xchg
cli
mov
and
movsl
jecxz
lock
sub
xchg
mov
hlt
sti
pop
cli
push
xor
push
clc
xchg
ret
mov
or
stos
add
sub
cmp
inc
xchg
adc
and
fiadds
movsb
xchg
or
mov
cld
and
push
xor
and
jmp
mov
inc
inc
or
xor
or
incl
and
and
repnz
leave
repz
imul
sub
sub
lock
or
fsub
repnz
cmp
pop
fs
fcmovbe
mov
sub
adc
mov
mov
inc
sub
sub
notb
pop
sbb
test
fs
sub
sbb
mov
out
xor
lods
xchg
cld
mov
nop
or
push
add
inc
xchg
lret
add
sub
pop
inc
push
and
sbb
push
cmp
lahf
xor
or
mov
das
lret
gs
or
pop
cmove
sbb
cmp
push
lea
pushf
sbb
or
aas
add
popf
pop
and
repnz
push
pop
inc
jmp
in
mov
adc
mov
mov
add
stos
mov
sub
push
mov
icebp
les
adc
and
and
inc
aas
popf
lods
addb
add
mov
cmpsl
dec
or
mov
icebp
sbb
and
inc
jbe
cmp
shlb
je
add
pop
inc
stos
add
or
add
add
add
xor
xor
ret
pop
jo
and
lar
or
add
mov
mov
sbb
test
jge
add
repnz
hlt
mov
inc
cmpsl
test
adc
loopne
pushf
add
rclb
add
mov
dec
add
ret
jg
sub
lock
mov
lret
and
pop
mov
push
fsts
out
add
push
shlb
add
test
sbb
cmp
add
cmpsb
adc
pushf
sub
shrb
xchg
aas
mov
add
ds
mov
bound
sbb
add
sbbb
or
leave
xlat
in
movsb
sarb
add
sub
jle
pop
lret
add
xchg
pop
fisubrs
xor
pusha
iret
sbb
jns
stos
sub
push
lahf
aam
jmp
aas
push
push
cmpsb
xlat
ss
or
pop
test
xchg
or
jg
dec
pop
mov
je
lcall
pop
adc
bound
lods
adcl
or
shl
icebp
and
lock
insl
sbb
push
push
lcall
inc
inc
push
test
mov
jl
ljmp
sbb
mov
add
sbb
mov
push
add
sub
adc
cld
repz
jecxz
mov
clc
jmp
xor
xor
push
push
pop
xchg
mov
repz
jp
fildl
cs
test
push
sbb
xor
and
jl
mov
sbb
fmuls
shrl
push
stc
mov
mov
insl
add
mov
pop
aaa
add
push
mov
addl
jmp
aam
mov
pop
sbb
mov
test
lahf
pop
jl
loop
add
loop
inc
in
mov
sbb
pop
cmp
ljmp
mov
dec
push
int3
add
push
add
out
add
inc
cld
pop
add
lods
push
adc
mov
orb
xor
fcompl
test
sbb
les
cs
cmp
jo
mov
cmpl
add
test
movb
add
sbb
pop
stos
pop
movsl
out
bound
add
mov
xor
add
sub
mov
testb
ficoml
push
xchg
mov
inc
add
mov
mov
add
js
je
inc
add
add
sbb
xchg
xchg
stc
add
mov
mov
fs
mov
faddl
daa
and
add
mov
paddusw
shl
add
inc
push
cmp
xorl
pop
push
push
cmp
enter
lcall
add
shl
mov
mov
es
xor
jle
mov
rcrb
add
inc
push
push
rorb
mov
adc
jno
add
fwait
sub
paddsw
loopne
test
push
jl
add
cmp
inc
adc
fisubl
and
stos
mov
lock
jg
push
adc
rolb
test
xchg
jmp
jge
add
mov
adc
rclb
sub
inc
shlb
rolb
push
mov
jno
mov
in
add
and
pop
mov
inc
add
int
imul
push
lret
fst
sahf
hlt
xor
pop
add
cs
pop
arpl
add
dec
and
cli
inc
add
dec
push
sub
add
idivb
pop
decl
push
mov
adc
add
mov
add
inc
lock
incl
adc
les
loop
ret
push
cmpb
adc
add
scas
stos
call
inc
add
and
ljmp
mov
clc
loope
jae
add
and
negb
push
push
add
dec
jbe
push
icebp
stos
add
addr16
int
notb
mov
push
repnz
lahf
pop
add
mov
pop
jae
add
xchg
jne
pop
shll
dec
scas
inc
push
lea
mov
cmp
add
add
push
inc
add
cmp
pop
incb
jmp
lret
or
cs
push
adc
adc
push
sub
ret
mov
mov
add
adc
sbb
addb
rorb
add
dec
push
jbe
xchg
lock
xor
je
xchg
inc
add
jne
into
addb
cmpl
mov
add
cmpsb
mov
dec
push
int
sub
es
mov
dec
nop
ds
pop
fnstcw
sbb
inc
push
test
ljmp
pop
push
xchg
and
dec
cmp
or
outsb
loop
hlt
mov
roll
jns
loope
andb
jb
ret
rclb
inc
inc
cmp
ror
sbbb
inc
insb
test
sub
fdivs
jb
frstor
jmp
jge
movb
fisttpl
cld
inc
inc
lea
ficompl
dec
sbb
mov
dec
sbb
adc
int3
xor
dec
add
fildll
test
push
cmp
push
add
xlat
je
cs
inc
in
loopne
or
sub
cmc
test
call
imul
or
mov
and
push
in
inc
add
xor
xor
xchg
adc
lret
mov
cmp
movb
xor
pop
cltd
stos
add
or
push
mov
push
or
imul
mov
notb
push
cmpsb
out
mov
dec
dec
jge
andb
sbb
add
mov
loopne
add
mov
sub
mov
ljmp
pop
and
fsubs
mov
jnp
mov
pop
dec
adc
push
pop
insl
add
and
xlat
and
aam
sahf
jb
loopne
add
push
aam
int
push
rcr
add
stos
cltd
cld
fldl
std
pop
adc
mov
sti
hlt
sbb
scas
or
jno
cmpb
or
arpl
jo
add
fcomip
cmp
pop
adc
rolb
stos
in
pop
push
jo
add
mov
out
inc
ret
ret
push
mov
sahf
xor
enter
jmp
aaa
pxor
xor
sbb
jmp
sbb
dec
outsl
add
pushf
pop
call
sub
adc
push
add
xchg
dec
or
pop
xchg
jge
les
subl
je
mov
and
jo
mov
adc
cmpsl
pop
xor
inc
or
insl
add
cld
adc
add
inc
or
push
mov
adc
xor
mov
dec
adc
nop
inc
leave
mov
push
add
cmp
add
fiaddl
fdivs
add
cmp
sbb
test
idiv
enter
sbb
add
push
js
and
sti
or
add
add
std
repz
pop
cld
jne
pop
mov
stos
jmp
sbb
mov
test
add
or
pusha
and
dec
mov
mov
cwtl
pop
lds
call
mov
test
adc
mov
movsl
subl
lock
mov
shlb
pop
pop
push
add
test
mov
adc
and
xchg
mov
adc
and
mov
cwtl
sub
je
shr
ja
add
stos
or
nop
cmp
sar
add
push
pop
jne
movsl
es
pop
jmp
push
mov
add
mov
xchg
mov
pop
add
sbb
add
ret
lcall
mov
xchg
or
adc
xor
pop
push
in
mov
and
add
jecxz
loope
test
inc
fistps
xor
mov
loop
rolb
adc
dec
inc
enter
incb
mull
adc
jbe
add
add
sbb
movsl
orb
and
xchg
add
inc
loop
xor
adc
push
add
out
out
inc
sar
or
adc
mov
rorb
ds
mov
cmp
jb
sbb
add
xchg
cmp
shlb
movsl
loope
mov
neg
lret
add
xor
xor
sub
lods
test
lods
imul
and
dec
std
repnz
mov
add
or
daa
test
or
lock
stc
jne
add
or
mov
pop
inc
cli
add
call
mov
adc
jne
push
inc
mov
fistl
mov
clc
lret
add
or
add
mov
div
jno
add
pop
lret
pop
xor
repz
push
inc
add
and
sub
dec
mov
jg
xchg
addb
dec
icebp
cmp
xor
jmp
xchg
inc
add
out
cmc
testb
insb
loope
mov
aas
and
loopne
repz
add
pop
sti
rolb
xor
xchg
mov
insl
daa
addl
push
pop
pop
cmp
mov
add
add
adc
ret
or
mov
jl
rcl
repnz
xchg
test
add
inc
clc
orl
mov
dec
in
push
add
stc
fwait
adc
or
pusha
add
sub
sti
inc
push
mov
add
fcompl
add
test
and
or
push
negb
add
xor
inc
inc
out
mov
shl
stos
jecxz
pop
add
fldenv
mov
push
cld
rolb
clc
add
addl
movzwl
ljmp
adc
mov
pop
add
push
xorb
add
add
enter
or
jne
mov
lods
mov
cmp
inc
ljmp
xchg
inc
inc
aas
add
fsubrl
and
inc
cmpsl
add
cltd
mov
pop
cmp
movsb
add
xor
jne
add
push
ss
mov
int
pop
add
icebp
pop
push
xor
dec
jo
add
push
or
or
repnz
lea
shrb
lock
pop
movsl
out
push
inc
dec
pop
je
fmuls
add
cmc
dec
adc
test
pop
mov
mov
ret
mov
pusha
call
add
dec
adc
aam
cwtl
mov
sbb
fisttps
sbb
xor
add
sbb
rolb
add
jp
movsl
sub
and
int3
cld
or
mov
xor
lock
fs
cli
cmp
inc
push
xchg
sbb
test
pop
cmp
inc
mov
mov
mov
outsl
push
pusha
movsb
stos
inc
mov
pop
push
and
xorb
mov
lret
nop
cmp
popf
shl
inc
imul
dec
in
test
add
push
push
or
inc
lcall
adc
push
dec
out
in
add
xor
pusha
insb
mov
add
gs
lods
mov
jg
imul
jo
cmpsl
add
dec
push
ret
cmpsb
sub
or
lcall
add
or
std
sbb
mov
sbb
xchg
add
cli
gs
xchg
cmp
mov
sbb
roll
lds
shrb
daa
lcall
inc
jg
adc
sbb
mov
add
mov
sbb
xchg
or
add
test
notl
out
mov
in
xorb
or
pop
dec
pushf
shl
add
addr16
push
les
mov
xor
inc
popl
rcll
icebp
xor
mov
sbb
pusha
cmp
push
xor
mov
add
jp
cmc
sub
cwtl
jbe
rcll
jo,pn
add
inc
je
adc
test
es
xchg
add
add
and
nop
push
mov
add
push
imul
mov
loopne
add
in
push
add
cwtl
push
lcall
aad
mov
cli
mov
push
sbb
cmp
mov
iret
push
inc
jae
cvtpi2ps
lahf
mov
inc
dec
mov
jae
pop
lock
fadds
jbe
pop
push
pop
and
add
std
pop
mov
out
popa
rcll
jecxz
jle
add
pop
inc
sbb
add
inc
add
pop
mov
add
xchg
cs
dec
outsl
inc
add
insb
push
dec
addb
dec
xchg
pop
add
and
add
orb
add
aad
mov
dec
insb
add
mov
nop
push
loopne
add
xor
std
or
sub
adc
adcb
test
pop
add
js
into
push
cmp
add
xchg
cmp
jo
add
stc
aaa
lahf
shlb
loopne
add
scas
push
mov
add
pop
xchg
adc
stc
test
xor
add
push
iret
mov
xor
dec
in
mov
ret
add
setns
mov
add
adc
jl
in
add
insb
stos
es
cmp
decl
add
cmp
out
push
ds
pusha
xchg
repz
push
xchg
sti
pop
push
mov
lahf
inc
rclb
daa
mov
and
add
add
in
push
add
sub
pop
dec
push
xchg
lret
dec
jp
lcall
sahf
aas
int
sbb
cli
in
les
add
stos
outsb
popa
add
mov
test
dec
push
andb
mov
mov
cmova
or
jle
cld
xchg
cmp
dec
movb
pop
or
sub
mov
mov
jo
popa
test
xorb
add
call
fldcw
add
push
ja
add
mov
or
mov
lea
rcr
cmp
add
pop
mov
and
xchg
add
push
loopne
movsl
mov
sbb
outsb
jmp
rcll
add
jae
iret
loopne
add
push
sahf
int
pusha
dec
add
xbegin
pop
test
je
jo
add
push
or
loopne
add
mov
pextrw
dec
add
outsb
push
mov
scas
push
out
cmp
ljmp
fcompl
lock
add
push
and
xchg
cli
andl
mov
inc
xchg
pop
rcrb
xor
lods
insb
adc
lea
push
cmpb
adc
sub
in
pusha
jne
lret
push
xchg
test
pop
or
jne
mov
enter
lock
sbb
pop
mov
out
cli
aas
sub
sbb
sbb
pop
add
add
xor
add
pop
das
cmp
sub
xor
adc
lcall
or
add
jae
xchg
out
addb
push
aam
std
out
jp
lds
add
pop
rdtsc
sarb
rolb
je
divl
xchg
xchg
pop
mov
cwtl
aam
aaa
add
addl
lock
lock
add
sbb
jbe
out
aad
xor
or
cmpb
or
adc
fistpl
fadds
shlb
nop
mov
enter
add
lods
pop
fadds
push
push
cmpb
jg
ret
cmp
push
pop
add
call
push
aam
and
mov
dec
add
add
and
sahf
stos
and
xchg
push
adc
add
add
pop
add
fcmovb
loopne
mov
push
divb
clc
and
lock
add
stos
cmpsl
dec
addps
xlat
mov
or
sbb
xchg
sbb
add
push
add
sarb
in
xorb
lret
push
pop
push
ret
inc
add
icebp
or
les
cmp
cmp
mov
fstl
enter
pop
clc
call
add
mov
loopne
out
mov
add
add
lea
loopne
jp
mov
jmp
push
xlat
inc
add
cwtl
and
adc
add
mov
sti
cmp
subl
pop
push
and
push
mov
pop
pop
pop
cmc
inc
lret
and
sub
mov
inc
jo
jp
sti
les
pop
fadds
data16
lods
add
and
pop
and
sub
push
or
or
xor
mov
pushf
dec
add
cmp
or
adc
adc
mov
fcompl
mov
add
scas
loop
in
mov
pushf
pop
in
aam
mov
je
rolb
mov
mov
inc
es
js
testb
mov
sub
adc
cmp
into
adc
push
gs
xchg
testl
or
add
jbe
loop
inc
pop
loop
and
dec
jg
sub
add
mov
inc
leave
push
pop
pop
mov
cli
sub
or
add
or
aam
shl
mov
fsubrl
daa
or
je
jl
add
in
clc
lds
add
lea
arpl
add
insl
xchg
adcb
shll
je,pn
fnstenv
fs
or
add
and
inc
xchg
add
dec
sahf
int
aas
pop
sbb
mov
stos
aaa
xorl
push
push
mov
sbb
mov
clc
stos
std
test
pop
sub
add
add
clc
or
sbb
ja
add
mov
mov
push
repnz
add
xchg
inc
pop
push
push
mov
aam
xchg
mov
xor
mov
mov
adc
add
out
jne
push
ret
or
add
pop
outsb
sbb
jle
add
nop
xorb
add
sub
push
loop
add
test
pop
push
cmp
add
mov
adc
sbb
mov
add
and
add
or
orb
repnz
call
adc
add
lock
add
push
popf
int
push
add
sub
adc
add
mov
push
dec
sbb
xchg
orb
add
add
repnz
stos
push
int
add
add
in
xor
inc
mov
or
shlb
inc
enter
inc
cld
ret
fmuls
cmp
out
shrb
hlt
add
add
sbb
push
fadds
sub
fdivr
pop
addr16
dec
mov
roll
add
jp
push
add
lods
mov
add
fsub
ret
imul
dec
sub
ljmp
mov
les
dec
aam
push
shlb
cmp
fadds
mov
jbe
verr
mov
push
js
add
push
inc
jno
loop
lock
sub
add
add
adc
and
add
push
pop
stos
push
mov
and
mov
mov
jno
lds
stos
mov
push
sub
mov
outsb
aas
and
cmp
js
add
or
mov
xchg
js
ljmp
sub
stc
pop
loop
mov
jne
dec
dec
sarb
add
popf
sbb
call
movl
adc
movntq
cmp
clc
xchg
sysexit
push
dec
inc
loopne
stos
sub
mov
sub
js
cmp
movsl
insb
add
fs
pop
cwtl
icebp
mov
add
or
lcall
in
adc
std
xchg
loope
ret
xorb
out
xor
pop
adc
adc
test
sub
imul
or
push
or
and
cmp
mov
adc
add
sub
xlat
xchg
ljmp
pusha
fsts
mov
addr16
pop
pop
arpl
add
cs
rcrb
pop
adc
test
or
pop
xor
dec
das
add
inc
aas
nop
repnz
mov
stos
sbb
mov
roll
sub
negl
cmpsl
add
stos
xor
out
test
mov
and
xor
add
mov
std
adc
pop
adc
mov
stos
mov
jbe
in
xor
addb
mov
add
xchg
add
xor
stos
int3
jl
mov
inc
push
mov
sahf
insl
or
add
sti
in
data16
lds
stos
int3
dec
xchg
enter
repnz
add
push
pop
mov
sub
add
inc
add
loop
add
stos
xor
outsb
pop
mov
adc
or
das
adc
add
jl
push
and
jmp
jg
dec
add
stos
dec
adc
pop
int3
xchg
and
inc
or
inc
cmp
loopne
aam
push
push
add
jb
sbb
or
mov
testl
int
mov
push
jecxz
add
nop
dec
adc
add
jb
mov
sbb
dec
ds
stos
addr16
push
cmp
lods
pmaxub
push
push
push
add
aaa
adc
add
int
lldt
xchg
inc
addl
inc
jo
incl
aaa
cli
mov
xchg
push
stos
inc
jge
pop
je
sbb
pop
lock
test
push
adc
sub
int3
pop
add
sbb
cltd
push
jnp
add
xor
cmp
out
gs
aam
xchg
add
cmpsb
inc
sub
cs
loop
shlb
or
jnp
fildl
pop
inc
mov
sbb
jle
add
jge
push
sub
cmp
push
inc
ret
add
and
push
incl
cmpb
sub
inc
inc
xor
and
pop
push
sahf
flds
loope
inc
add
inc
decb
sti
jg
ret
add
add
subl
cld
dec
mov
add
or
sbb
les
cmp
adc
xor
pop
lods
sbb
add
in
out
xor
mov
push
cmp
add
pop
pop
pop
dec
jae
aas
xor
cmpb
add
mov
cmp
and
xchg
clc
data16
mov
cmpsl
xchg
es
cmp
rorl
ss
lret
movsb
or
inc
add
ret
out
add
and
fwait
aad
dec
dec
push
jno
dec
jp
mov
pop
movsb
add
inc
scas
dec
testl
xchg
add
jns
loop
jbe
imul
aaa
add
inc
pop
dec
dec
les
inc
aas
dec
fistl
aaa
pop
mov
jg
test
sbb
addb
inc
sbb
inc
jnp
mov
les
and
jge
sbb
mov
cld
adc
mov
fiaddl
shlb
and
shlb
push
ds
ret
xor
dec
ss
lcall
jmp
xor
inc
cmp
and
xor
sarb
dec
imul
add
dec
add
add
pop
enter
and
sub
pop
sbb
aad
les
add
or
sbb
add
addb
add
fisubl
pop
loop
jbe
add
cmp
movsb
in
pop
stos
pop
cmp
and
aas
test
mov
inc
into
or
cmpsl
and
dec
stos
ja
leave
add
adc
fiaddl
mov
and
stos
mov
pop
test
mov
xchg
pop
or
lcall
bound
pop
aaa
mov
fildll
test
dec
or
or
mov
or
orb
adc
addb
mov
scas
lods
inc
push
lahf
in
loopne
movsb
icebp
push
add
nop
enter
lds
inc
out
jbe
mov
jne
jnp
inc
imul
ret
rcrb
divl
lock
cmp
testl
pop
xchg
adc
shl
repz
je
mov
xchg
les
jl
dec
stos
cld
sti
pop
jo
loope
movsl
mov
xor
jecxz
add
dec
xchg
out
push
add
lods
das
aaa
stos
add
sub
or
js
xchg
pop
in
adc
ds
shlb
int
add
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
add
adc
add
push
push
cmp
add
negb
add
ja
jbe
inc
sub
xor
stos
xor
xchg
clc
push
pop
out
add
inc
mov
andb
jae
mov
mov
mov
out
test
shll
aad
gs
rolb
popf
in
xchg
mov
add
push
jb
inc
pushf
add
cmpb
dec
int
shll
pop
dec
iret
adc
fwait
cmp
push
and
add
xchg
xor
fcom
and
adc
lods
shr
repnz
aas
mov
fdivrs
movsl
sub
add
int
ds
inc
add
mov
adc
mov
inc
cwtl
popl
pop
mov
dec
mov
sbb
mov
adc
mov
inc
or
push
jno
xchg
fs
jge,pn
fidivl
out
test
inc
xchg
add
sbb
mov
add
jbe
cmp
rcpps
sub
add
pop
and
js
add
push
jns
or
aas
mov
add
push
pop
mov
pop
jle
sahf
cmc
add
push
and
xor
stos
push
ret
jp
push
add
sub
test
mov
popf
xchg
push
or
bswap
hlt
adc
negl
lea
jmp
pop
imul
loope
add
les
sbb
add
lock
pushf
hlt
mov
addr16
notl
scas
and
inc
add
cmp
mov
xchg
jo
inc
push
dec
and
push
insl
xchg
jnp
jo
cld
or
int3
scas
lock
mov
add
or
test
aad
mov
aas
push
movntps
popf
or
add
pop
add
test
fs
add
scas
lcall
mov
das
cmp
add
fimull
add
adc
add
add
inc
add
mov
mov
shlb
add
pushf
add
je
cmp
fsubrl
cmp
inc
test
adc
add
mov
lods
sbb
mov
arpl
ja
pop
adc
inc
stos
add
jge
dec
or
add
cld
adc
inc
adc
add
test
loope
push
push
lret
mov
and
movsb
cmc
pop
cs
mov
mov
xor
scas
int3
subb
stc
push
adc
cmpl
nop
sbb
mov
or
repz
adc
add
roll
shlb
push
es
jmp
and
cltd
add
pusha
sti
mov
sub
push
xchg
xor
xchg
add
push
ret
std
add
test
jmp
add
std
rolb
jbe
add
sub
sbb
pop
pop
mov
mov
pop
lods
jns
jge
movb
add
std
xchg
fucomp
pop
leave
adc
jne
xchg
or
and
jns
nop
cld
add
dec
test
imul
loopne
cwtl
mov
jae
push
dec
hlt
and
push
das
cli
sbb
repnz
jnp
js
jg
subb
xlat
cmp
mov
push
fdivrl
loope
pop
loopne
jle
cmp
dec
addb
testb
popf
rcrb
pusha
push
call
xor
dec
or
add
add
jle
jmp
add
jne
rolb
dec
lcall
cld
and
and
js
add
imull
test
add
cmp
push
sub
mov
pop
aaa
pop
add
test
sarl
lea
ljmp
pop
shrb
mov
push
add
push
add
inc
dec
cmp
sub
jl
or
add
and
sbb
mov
sbb
adc
pop
stos
je
testb
add
xlat
mov
fsubs
inc
inc
sarb
sbb
add
push
call
and
adc
cmp
jge
add
dec
sbb
pop
loopne
mov
cld
add
rorb
jnp
jge
lock
or
xor
jle
rorb
cmp
add
push
mov
dec
or
add
rol
js
je
jb
add
movsb
mov
arpl
sbb
dec
jb
push
push
loop
fbstp
jle
mov
mov
add
pop
xlat
mov
add
lods
std
fsubs
pop
lret
mov
adc
xchg
pop
outsb
popa
xor
sarb
jb
add
dec
pop
decb
jl
add
imul
dec
aaa
xorl
mov
and
pop
and
add
mov
xchg
cmp
jb
out
test
inc
pop
xlat
cli
push
xor
les
popl
mov
xchg
xchg
jnp
jle
cmp
test
mov
jmp
ret
jae
mov
int3
add
jmp
rcrb
ret
stos
mov
dec
mov
add
mov
push
lock
cmp
inc
fcmovb
aaa
out
add
push
stos
adc
arpl
add
clc
adc
cli
adc
pop
sub
or
std
add
mov
movups
ja
pop
xchg
loopne
xor
mov
inc
or
cmp
cmp
sbb
and
mov
cmp
mov
jo
jle
add
inc
adc
arpl
push
popa
add
data16
jae
addr16
std
cmp
adc
ja
add
sbb
jbe
jb
out
dec
ja
adc
imul
imul
push
inc
push
loopne
dec
jge
jl
inc
iret
nop
dec
nop/reserved
fisubs
in
cmp
cmp
jle
outsl
insb
add
pusha
push
out
in
jae
jge
imul
test
or
jo
das
push
fwait
xor
jae
dec
mov
add
or
insl
shl
dec
pusha
ret
bound
fs
addr16
popl
xor
mov
inc
popa
les
into
fldl
jns
inc
dec
outsb
clc
dec
add
jbe
fs
inc
add
adc
add
jae
arpl
jne
add
inc
push
push
ja
imul
arpl
mov
add
addr16
popa
loope
push
lret
inc
add
push
jno
movsl
xchg
pop
inc
push
outsb
imul
stc
and
xor
gs
imul
shr
xchg
xor
clc
pusha
add
jns
mov
dec
xor
add
push
adc
push
addr16
jbe
and
ja
andb
sub
test
ljmp
lods
add
outsl
imul
xchg
push
push
push
aaa
jbe
inc
cmpsb
inc
imul
pusha
push
sbb
jbe
and
mov
add
popa
add
rclb
jp
dec
sbb
pop
xor
cmp
add
mov
jb
cmp
subb
movups
pop
test
mov
mov
adc
adc
inc
push
add
lea
jb
sub
cmp
add
push
add
cmp
pop
ret
pop
and
push
jge
pop
sbb
xor
mov
mov
lods
adcb
sbb
push
inc
repnz
scas
cmp
mov
xor
into
add
addr16
loopne
shrl
sbb
and
adc
arpl
add
data16
dec
pop
jo
add
cli
add
add
and
sbb
xor
dec
cmp
fnsave
imul
icebp
rol
sbb
aad
add
enter
xchg
add
test
sahf
and
stos
loopne
add
sti
scas
daa
push
pop
es
push
addl
mov
mov
aas
dec
aas
xchg
or
stos
xorb
pushf
repz
add
in
addr16
pusha
push
add
push
mov
sbb
in
add
jb
push
dec
push
jae
pop
inc
dec
roll
ret
ficompl
dec
lds
nop
rorb
xor
lahf
movl
das
jecxz
jb
jo
add
pusha
xor
add
dec
cmp
loopne
xchg
jo
add
rclb
adc
jp
scas
add
inc
clc
pusha
xchg
or
js
jae
inc
mov
push
or
pop
push
clc
in
sarl
xchg
pop
add
fnsetpm(287
xor
ret
test
lahf
jnp
rclb
mov
test
add
popf
jl
dec
jp
push
sub
add
xor
outsl
cmp
sbb
jmp
jg
sbb
test
add
sbb
xor
add
cmc
stc
ds
push
in
add
pop
add
imul
gs
push
pop
lock
mov
add
cmpsb
out
stc
inc
and
add
rcrl
shlb
jmp
roll
fisttpl
cmpl
cltd
test
sub
int3
push
aad
mov
inc
arpl
loope
rdmsr
push
cmp
dec
and
add
rcl
or
or
add
mov
repz
push
pusha
cmp
aas
inc
mov
aad
add
mov
addr16
data16
xchg
pop
andl
rcrb
sbb
jmp
pop
mov
cmp
add
add
insb
jo
add
adc
stc
sar
push
sub
cmp
jo
sahf
jo
fsts
mov
sub
sub
adc
adc
pop
out
add
mov
shlb
add
fcoms
loopne
mov
nop
xchg
sti
movsb
sbb
add
cmp
addl
mov
lods
jge
enter
outsl
cmc
xorb
mov
stos
add
xchg
pop
inc
cwtl
jno
data16
scas
add
daa
imul
mov
push
mov
push
test
push
jl
inc
or
popf
or
in
sbb
lea
std
insb
add
daa
and
jge
popf
cmp
add
pop
mov
jp
sahf
and
sbb
push
les
cwtl
and
pop
dec
or
out
or
pop
dec
mov
shl
add
inc
jmp
xchg
mov
add
out
sub
lock
repnz
out
mov
push
push
add
cltd
jle
inc
stos
sbb
movsl
add
xchg
pop
dec
mov
lods
out
push
sbb
xor
adc
add
push
xchg
jge
aas
add
sbb
cmp
pop
ror
add
cmp
mov
jg
movb
pusha
cmp
loopne
add
ret
fs
jns
xor
xchg
add
adc
sub
ljmp
push
leave
stos
add
add
dec
incb
outsl
add
or
lds
add
dec
dec
jo
add
ljmp
and
insl
cmp
int
push
cmp
inc
lret
out
adc
jnp
mov
in
jno
adcb
pop
insb
adc
adc
str
rolb
movsb
in
scas
in
pop
mov
add
xlat
testb
daa
mov
sbb
je
int3
xchg
cld
lods
mov
insb
je
sub
sbb
mov
jecxz
or
add
pop
mov
js
testb
mov
jle
jmp
push
ja
add
add
pop
mov
stc
shlb
mov
inc
gs
imul
and
sbb
pop
add
add
mov
incl
rol
pop
lock
incb
push
mov
mov
adc
sti
lahf
or
sbb
pop
push
fsubr
dec
push
scas
mov
or
andb
lcall
inc
jo
add
pop
push
dec
sarb
jle
mov
add
movb
mov
ja
jb
test
or
inc
xchg
push
iret
out
or
cmp
jne
aas
jmp
push
inc
aam
fnstenv
pop
sub
add
sub
loope
fiaddl
and
mov
push
and
pop
xchg
inc
mov
add
or
cmp
or
lret
and
mov
fistpll
or
mov
or
call
mov
es
lock
add
dec
add
cmp
or
mov
cmpb
stc
sbb
jle
or
das
lods
push
mov
orb
ret
movb
lcall
jo
movsl
sbb
dec
into
es
jae
adc
adc
add
xchg
mov
add
imulb
out
fcmovne
fimuls
mov
xchg
lret
sbb
mov
in
cmp
sub
lret
push
and
or
cmp
subl
add
push
jbe
add
rolb
nop
fistl
jl
adc
push
cwtl
cli
push
repnz
mov
int
fcompl
add
mov
fsub
lock
add
sbb
push
pop
repnz
adc
push
jnp
mov
mov
and
mov
int3
add
pop
fadds
hlt
pushl
push
add
dec
leave
outsb
add
sbb
adc
adc
cmp
cmp
or
add
mov
loopne
or
pop
lret
sbb
subb
push
mov
pop
cmp
push
dec
add
cmpsl
pop
call
dec
adc
mov
mov
sti
sar
cmp
shl
loop
imul
int3
xchg
adcb
mov
pop
and
and
add
mov
lods
dec
xchg
mov
xchg
add
jle
or
clc
call
mov
xchg
fildl
adc
push
rclb
add
pop
fidivrs
dec
adc
inc
outsl
mov
xor
jmp
jl
push
add
call
or
out
jg
loopne
lods
add
mov
sub
pop
sub
test
xor
jno
mov
loopne
inc
and
sbb
js
imul
jge
rolb
pop
or
xchg
lock
sub
cmp
jl
jae
mov
in
and
push
pop
lods
sti
into
add
shrb
or
xor
fcmovnb
in
mov
adc
add
stc
cmp
sbb
rorb
fcomi
incb
jp
push
ret
jns
add
or
iret
sub
sbb
jmp
sarl
mov
pop
ret
or
xchg
jo
pop
or
push
adc
inc
es
not
add
xchg
or
and
push
add
not
and
sbb
jle
add
jo
call
adc
sub
dec
sbb
inc
sub
cmp
dec
fdivr
test
adc
sbb
pop
in
cmp
add
add
and
or
add
or
das
lock
testl
cmpsb
and
arpl
call
int3
paddsb
andl
add
aad
dec
das
adc
dec
add
in
cltd
pop
in
jge
sub
xchg
or
push
ret
rclb
add
xchg
aad
xor
add
sbb
xchg
cld
pop
xor
fists
and
nop
mov
roll
pop
xor
loope
rcr
jo
push
clc
jmp
scas
sbb
loopne
and
cmp
ret
mov
movzwl
push
push
or
adc
mov
sar
rol
add
pop
pop
sub
fildll
mov
mov
push
or
cmp
shlb
adc
xor
fs
gs
mov
push
add
cmp
jg
add
cmp
call
push
or
arpl
jmp
sub
cmp
das
xorb
movsl
call
sub
test
mov
and
jl,pn
or
fcomi
pop
push
add
fstps
jl
add
imul
adc
pop
mov
jecxz
add
xor
cwtl
fstpl
psubsb
sbb
sbb
and
clc
fildll
push
out
insb
or
xchg
dec
push
mov
push
lods
ret
sti
nop
or
imul
and
sub
or
mov
popf
add
mov
data16
dec
or
movsb
pop
inc
scas
hlt
shr
pusha
add
sti
dec
je
or
or
inc
cmpsl
es
mov
push
and
ljmp
push
imul
dec
and
jno
stc
or
push
daa
cmpb
jecxz
addr16
push
adc
int3
push
loope
xchg
in
inc
xor
add
dec
sti
test
add
aam
sub
push
sbb
inc
add
adcb
ret
push
or
test
inc
daa
and
addr16
sbb
addb
dec
or
lock
cmp
pop
add
fldl
and
or
daa
ljmp
iret
stos
arpl
dec
nop
mov
and
xchg
push
and
enter
xchg
inc
add
stos
icebp
pop
push
inc
push
pusha
add
add
cli
repnz
aad
xchg
ret
jge
mull
sbb
add
inc
add
scas
jg
jp
mov
pusha
jmp
mov
incb
lret
jecxz
adc
adc
sbb
push
fidivs
pop
sbb
lods
or
inc
or
mov
test
in
push
push
mov
inc
xlat
dec
pop
shll
loope
xor
inc
mov
push
push
add
push
in
sbb
sbb
cs
mov
inc
test
adc
pop
jbe
sbb
ljmp
pop
add
sbb
inc
xchg
and
inc
xlat
mov
or
data16
leave
pusha
hlt
addb
sti
rcr
xchg
xor
jge
cmpsb
xchg
jg
add
xor
jo
and
movsb
adc
scas
sub
sub
rclb
in
add
add
mov
jmp
movsb
aas
adc
inc
dec
pop
xchg
lods
pop
cmp
aam
add
adc
adc
je
push
or
sub
and
call
loopne
push
sti
addb
clc
jb
adc
aas
je
and
inc
stos
sub
cmp
cmp
add
add
add
test
ficoms
hlt
mov
add
xchg
fcoms
jg
mov
xchg
cmp
sahf
rolb
add
insb
ss
add
push
movsb
mov
mov
test
and
in
stos
add
adc
cmp
mov
movsb
add
popf
rorb
test
jmp
dec
sbb
xor
jns
imul
jl
add
add
pop
cli
mov
add
push
dec
push
add
cli
xor
or
add
repnz
push
sub
loop
xor
inc
cltd
add
mov
insb
sub
lea
push
leave
sbb
inc
pop
push
outsb
dec
xchg
loop
cltd
dec
mov
jbe
xor
not
std
push
cmp
add
fcoms
add
stc
mov
mov
add
int3
insl
xchg
pop
popa
add
pop
xchg
imul
and
xor
js
adc
mov
push
sub
add
nop
mov
sbb
or
test
sti
jp
add
popf
xor
stos
ffreep
add
andl
or
mov
push
and
mov
add
xor
lret
or
cltd
mov
lmsw
test
add
aaa
mov
movl
and
cmp
test
lock
push
lea
arpl
add
and
int
add
js
xchg
push
push
nop
mov
enter
rcrl
je
mov
test
mov
adc
sbb
add
test
pop
adc
fcoms
pop
sub
scas
pop
mov
add
dec
mov
adc
lods
jl
cmp
sbb
add
mov
dec
xor
xchg
popa
or
jmp
sub
cmpl
add
jb
mov
push
loope
shr
sub
jle
pop
push
and
fwait
mov
aas
enter
add
call
bound
push
add
sbb
pop
xchg
ja
sbb
mov
mov
fbstp
sub
add
and
add
ljmp
push
sbb
fs
lock
sahf
dec
xor
cmp
loop
and
xchg
inc
movhps
aam
mov
pusha
lcall
nop
movsl
xor
scas
std
cmp
cmc
jne
fisubrs
ret
dec
pop
in
rolb
and
je
push
or
xchg
je
add
pushf
jle
pop
adc
addr16
jns
cld
enter
inc
nop
xor
sarb
jl
add
hlt
addb
add
push
scas
add
or
add
ljmp
stos
addl
aaa
and
nop
push
dec
add
js
jne
xchg
mov
add
lea
int3
int
add
pop
cs
jno
sbb
lret
popa
inc
loope
mov
test
std
push
add
jns
bound
pusha
movsl
mov
push
pop
cmp
repnz
sbb
add
sub
push
xchg
jge
pop
add
and
lcall
stc
jnp,pn
int
sub
ja
insb
dec
cvtps2pd
cmpl
dec
adc
mov
push
pop
xchg
adc
cmpsb
push
jnp
dec
rcrb
into
xlat
add
mov
mov
fstl
pop
subb
aas
popf
rolb
mov
add
rcrl
add
adc
dec
add
add
inc
lods
xchg
in
add
dec
cmp
mov
jecxz
fstpt
clc
sarb
fldt
movsb
divl
repz
lret
shll
xchg
cmp
in
fcom
add
fisttpl
jnp
adc
mov
dec
ret
aam
flds
sub
adc
lods
nop
cmp
dec
and
cmp
cmp
mov
pop
mov
jecxz
leave
fistpll
mov
fwait
add
add
in
mov
dec
add
call
sub
add
testl
ret
push
mov
popa
lds
push
push
and
xchg
and
add
js
or
ret
fcmovnbe
sub
add
dec
push
test
fiaddl
stos
xchg
jle
inc
cmp
daa
and
loope
push
dec
addr16
aad
pusha
mull
inc
pop
and
movsb
aas
jns,pn
push
mov
cmp
adc
je
jp
mov
add
inc
ds
xchg
push
enter
and
call
sbb
dec
add
sub
jecxz
jo
lret
and
sub
mov
pop
or
pushf
cmpsl
add
push
cmp
int
nop
inc
test
roll
daa
stos
jns
fimuls
mov
ljmp
inc
xchg
loopne
fnstcw
xchg
icebp
add
push
xchg
pop
xchg
fidivl
sub
icebp
fadd
add
add
rclb
ljmp
daa
adcb
jmp
shrb
add
test
xchg
add
loopne
clc
push
cmpsl
movl
xor
push
mov
rorb
imul
pop
pop
jmp
add
shrb
repnz
push
cmp
add
in
inc
fstpl
add
cmpsb
in
lret
dec
sbb
repnz
stos
xor
sbb
psubw
sub
rcll
and
sti
aam
movb
xchg
inc
mov
mov
add
movsl
popf
cs
jmp
dec
mov
xchg
add
pop
mov
loopne
dec
add
ret
data16
in
stos
fildl
sub
fisubrs
add
add
mov
cli
loope
and
add
dec
dec
sahf
shrb
aas
mov
add
pop
pushf
test
mov
jae
aaa
or
xor
add
jnp
add
je
or
and
add
xor
dec
sbb
fwait
adc
pop
sub
adc
xchg
dec
mov
adc
mov
dec
hlt
dec
add
mov
movl
cmp
adc
les
and
inc
adc
sub
inc
jae
mov
mov
rcll
stos
ret
mov
fiaddl
xchg
ds
mov
sub
ljmp
sbb
mov
iret
shlb
mov
ds
adc
dec
jecxz
jmp
aam
add
push
call
sbb
mov
inc
jbe
xchg
adc
push
xchg
xchg
mov
xchg
adc
ret
add
test
add
sub
xchg
add
xlat
inc
jae
dec
rclb
push
pop
mov
fs
js
and
dec
xchg
popf
mov
and
sub
push
arpl
sbb
mov
cmp
mov
roll
jge
pop
jbe
fmuls
add
scas
jne
push
insb
fs
cmpsl
stc
je
rclb
push
push
cld
movb
adc
incl
cmovg
pop
xchg
add
shlb
add
por
jge
push
jne
sbb
mov
popa
sbb
push
and
js
pop
mov
or
or
insb
std
cmp
inc
push
ret
add
add
out
sbb
lds
pusha
add
mov
fsin
add
pop
into
and
mov
aas
lea
test
add
pop
negb
aas
mov
add
add
or
fmull
dec
add
sub
rorb
mov
push
pop
add
dec
test
sar
dec
add
rolb
push
aas
add
push
adc
mov
dec
jl
pop
rcl
jle
rolb
or
sub
add
push
inc
xchg
add
xchg
sub
aad
and
or
or
je
xchg
arpl
or
push
addr16
add
ja
movsb
cwtl
clc
aam
orl
sbb
es
adc
pop
adc
sbb
imul
push
jae
gs
aaa
push
fdivs
lock
out
inc
push
daa
ret
mov
add
or
jae
adc
shll
pop
adc
or
leave
push
hlt
or
mov
insb
repz
xchg
xor
es
sbb
pop
lret
daa
cmp
adc
add
jle
add
mov
sbb
jmp
lret
mov
add
iretw
add
or
js
or
stos
jg
movsb
add
rorl
pop
mov
xchg
shlb
add
pop
shrb
andb
xor
adc
hlt
sub
hlt
inc
add
imul
add
mov
jl
iret
aad
mov
subb
add
out
daa
cmp
popf
nop
pop
repnz
icebp
gs
frstor
xor
jbe
inc
mov
daa
push
push
aad
xchg
sub
jecxz
add
dec
add
push
cmpsb
dec
inc
enter
jmp
lock
dec
daa
add
fxch
adc
adc
lea
pop
dec
xchg
cmc
enter
inc
ret
test
str
ja
testb
add
je
mov
add
mov
cmpl
push
add
cmp
mov
jae
data16
and
cli
hlt
cmp
lahf
mov
add
inc
xor
scas
pusha
xchg
aas
mov
mul
mov
add
lret
mov
subb
imul
or
jmp
call
mov
lock
es
mov
pop
add
or
cwtl
jnp
adcb
stos
inc
jb
popa
xor
imul
dec
outsl
push
jge
inc
push
je
insl
sbb
loop
cmp
jg
orb
inc
and
out
imul
ret
dec
lods
xchg
sbb
adc
inc
aas
or
add
sbb
fbld
cmp
xchg
ret
mov
jp
push
jne
cmp
jle
addr16
lock
add
sub
popl
scas
pop
in
mov
out
rcr
add
andl
pop
and
movsl
inc
subb
inc
or
mov
push
mov
and
cwtl
or
mov
addl
push
mov
call
and
inc
lock
pusha
lret
and
pop
outsb
add
lea
and
test
int
mov
mov
leave
aam
pop
fidivrl
enter
test
inc
adc
add
inc
inc
mov
push
das
xchg
pop
cmp
sub
fwait
test
lock
cmp
ljmp
dec
stc
mul
les
inc
add
sub
add
into
in
test
sub
inc
cmp
mov
das
into
sbb
or
addl
stos
and
add
and
sbb
and
cmp
jmp
sbb
dec
add
pop
fistl
decl
and
push
bound
mov
mov
add
movb
add
add
les
mov
out
repnz
nop
sub
mov
inc
sub
popa
jp
int3
test
xorb
adc
pusha
fsubr
push
add
pop
orb
movl
pop
and
in
cmp
lahf
and
push
hlt
fwait
sbb
add
imul
unpcklps
shlb
inc
xor
xchg
sbb
or
adc
xchg
add
sub
xchg
in
xor
push
dec
arpl
or
jnp
stos
adc
mov
leave
cld
dec
ja
add
adc
js
rclb
inc
cmp
lock
jmp
mov
lods
pop
pop
push
dec
pop
jne
andb
mov
ja
add
sbb
rorb
rcrl
add
mov
dec
dec
add
test
add
and
jne
hlt
mov
and
int3
das
add
add
stos
lods
or
pop
push
push
add
xchg
out
cmc
cli
loop
clc
in
sbb
shlb
adc
lea
ljmp
fiadds
pusha
lock
push
test
cmp
pop
add
imul
add
mov
xchg
out
push
xchg
add
mov
lea
ss
add
repz
call
or
inc
sbb
sbb
xlat
xchg
and
in
mulb
fcomp
adc
mov
jnp
add
fldenv
popl
xchg
adc
cmp
add
je
and
or
push
sbb
inc
sub
cwtl
pop
push
adc
arpl
xchg
xchg
jg
jg
jg
jg
add
scas
jecxz
cmpsl
inc
jmp
xor
mov
test
repz
dec
movsb
ficoml
push
jbe
add
push
daa
inc
push
pop
bound
aas
pop
sbb
test
and
cmp
bound
and
fwait
and
cmp
mov
pop
mov
add
call
add
xorb
mov
into
push
inc
mov
add
mov
jmp
add
or
push
sub
push
clc
cmp
ror
jmp
xlat
add
xchg
add
mov
sbb
outsb
repz
add
cmp
lret
mov
xchg
add
adc
pop
jns,pt
cmpb
nop
adc
add
subl
mov
cmp
test
jne
sbb
sbbl
xchg
pop
adcl
add
loop
les
add
mov
lahf
inc
cwtl
xor
or
pop
and
dec
stos
xchg
into
and
mulb
sbb
sub
or
mov
push
cmp
or
xor
cwtl
ret
add
xchg
sub
cmp
jecxz
pop
or
pop
dec
and
cmp
xchg
dec
pop
or
jno
push
adc
decl
ret
xorl
or
or
xor
lahf
outsl
add
rclb
pop
stos
into
loopne
adc
xor
jns
cld
test
adc
mov
push
pop
ja
add
or
cmp
mov
loop
xchg
gs
dec
pop
cmp
push
sbbl
movsl
cmp
mov
adc
test
xor
add
xchg
add
jmp
mulps
and
inc
movsb
xchg
in
ret
pop
loopne
add
cmp
sbb
mov
pop
cmp
mov
insb
and
dec
ljmp
mov
int
dec
clc
adc
mov
xor
xchg
aaa
fwait
sub
fiadds
cmp
call
sbb
mov
add
jb
movzwl
lcall
push
and
das
add
cmp
dec
cwtl
iret
mov
jecxz
andb
loopne
add
incl
rorl
push
pop
push
int3
shrb
dec
cmp
int
out
orb
imul
and
in
add
aad
mov
aas
add
mov
and
push
add
sbb
in
dec
arpl
or
xor
add
inc
enter
imul
add
clc
sub
mov
push
pop
mov
popf
js
add
cmp
cmp
pop
inc
cmp
add
cmp
inc
xchg
ficompl
push
inc
into
mov
lahf
adc
pop
arpl
inc
sub
xor
shr
ret
pop
pop
jmp
mov
sbb
out
xor
push
add
cmc
outsb
gs
lock
cld
pop
movsb
add
or
data16
add
std
addb
adc
je
dec
orl
dec
sbb
repz
pop
add
es
mov
adc
xchg
xor
nop
sub
xchg
movsl
int
add
jmp
fwait
mov
mov
popf
mov
iret
sub
add
dec
push
and
jp
sbbl
hlt
lea
cmp
xor
and
in
and
add
stc
mov
xchg
and
xchg
add
insl
notb
push
adcb
add
or
adc
outsl
rolb
stos
mov
pop
adc
out
mov
hlt
mov
jbe
xchg
popf
push
xor
ret
sahf
add
mov
push
add
jne
dec
add
fcmove
or
push
dec
add
cwtl
fmull
dec
adc
dec
xchg
xchg
xchg
enter
add
mov
add
and
mov
loopne
daa
hlt
stc
cmp
add
lret
fsubs
je
repnz
mov
stos
aad
lods
rorb
add
out
sub
sub
jmp
loop
aas
mov
sub
ret
sbb
lock
cmp
jne
xchg
es
pushf
add
lods
mov
sub
iret
rolb
out
sub
push
data16
inc
arpl
cmp
out
sub
aas
push
pop
sub
xchg
mov
mov
mov
pop
xchg
lea
adc
aas
dec
aad
push
ror
sbb
sbb
movl
push
jmp
ljmp
andl
mov
sbb
fbstp
pop
add
adc
pop
dec
add
pushf
mov
inc
add
dec
add
lret
aas
dec
jl
xchg
js
leave
mov
lea
push
add
cmpsl
fisttps
and
jbe
imul
inc
pop
mull
dec
faddl
xor
sbbl
pop
inc
push
add
push
cmpsb
sbbl
dec
pop
in
fwait
inc
aas
mov
testl
push
add
inc
pop
push
and
jo
cmp
jno
and
jae
jmp
movsl
jle
je
les
pushf
add
cmpsl
into
aam
adc
int3
ss
push
mov
add
inc
or
inc
cmpsb
enter
ficoms
adc
test
sbb
mov
sbb
imul
xchg
add
jmp
or
add
mov
dec
cmpb
inc
add
lock
add
sub
xchg
test
imul
mov
cmp
ds
pop
add
lret
ds
gs
inc
mov
rorb
push
and
mov
sub
add
xor
push
add
je
imul
dec
jo
add
decb
inc
or
adcl
xor
lods
aas
pop
push
mov
push
push
gs
add
dec
push
push
inc
add
fisubl
sub
add
lahf
pop
add
mov
cmp
dec
add
jo
add
or
add
test
add
sbb
addl
pop
pop
mov
lret
cmpsl
loop
xor
test
test
and
jns
add
adc
dec
mov
lods
sub
jge
mov
mov
lahf
fimull
mov
pop
lret
jns
pusha
add
idivb
adc
fs
or
add
or
or
orb
or
xchg
enter
pop
push
push
sub
lahf
add
pop
add
std
dec
iret
push
or
add
cmc
lret
or
cmp
movb
adcl
jb
add
adc
in
cmp
cmp
xlat
sbbl
cmpsl
xchg
enter
cld
stos
add
test
cltd
add
scas
repnz
adc
push
mov
and
mov
pop
mov
push
lock
add
je
div
dec
jb
add
jbe
push
dec
cmp
pop
push
lods
xor
nop
out
rclb
inc
mov
mov
and
jne
pop
and
addb
test
jge
pop
add
adc
add
rorb
mov
lods
add
add
add
jmp
cmp
push
add
lcall
pusha
addr16
jo
call
dec
add
lcall
pop
xchg
insl
or
cmp
xchg
aad
bnd
insb
add
mov
fwait
ds
xchg
add
lods
hlt
adc
ljmp
mov
xor
cmp
push
mov
lods
xchg
repnz
lret
mov
xor
insl
int
dec
rolb
push
cwtl
test
test
xchg
gs
scas
int
xchg
mov
inc
loopne
jnp
xor
add
adc
lea
mov
testb
imul
xor
ja
mov
cmpsb
sbb
movsl
lahf
add
int
sub
mov
ja
test
push
add
pop
pop
loope
pop
aaa
sbb
inc
ja
mov
push
or
flds
shrd
add
out
mov
jmp
movsl
sbb
je
lret
sbb
inc
adc
gs
adc
aas
cmp
das
cld
jns
sub
or
wrmsr
std
cmp
mov
and
sub
push
xor
add
pop
loopne
or
sub
repz
jo
pop
add
test
rclb
add
or
ljmp
adc
ds
fldl
push
sbb
enter
out
not
dec
cli
test
dec
add
test
add
insb
push
sarb
daa
jae
push
js
dec
push
cmp
bound
pop
movsb
adc
pop
sbb
in
adc
mov
add
sub
cmpsl
xchg
ror
cmpsb
add
in
push
out
loope
lock
add
and
and
jp
nop
add
and
cmp
sub
push
pop
or
data16
jge
xchg
add
popl
dec
dec
loop
push
adc
inc
push
js
push
ljmp
add
vpmulhuw
mov
inc
sbb
xchg
xchg
and
into
aad
and
nop
add
cmp
xchg
enter
iret
icebp
pop
push
loopne
adc
and
test
mov
xchg
lea
cmp
xchg
add
dec
aaa
sbb
mov
sbbl
add
and
dec
pop
loope
out
std
and
rolb
mov
xor
push
push
cmp
addl
mov
mov
mov
fs
mov
add
shll
push
push
inc
repz
xchg
aas
mov
pop
xchg
fs
fsubr
sbb
leave
inc
adc
das
mov
add
mov
mov
repz
jne
repnz
bswap
mov
xor
adc
pop
pop
adc
add
mov
adc
add
xchg
pop
imul
pusha
mov
mov
fmuls
mov
push
mov
jno
lock
mov
nop
add
sbb
add
and
lldt
push
jmp
add
jno
and
adc
sbb
stos
push
scas
add
movsb
push
mov
call
rcrl
fistpll
push
push
pop
xchg
adc
and
push
xor
adc
roll
mov
str
sbb
mov
inc
scas
pop
mov
cmp
push
dec
dec
ja
add
ret
and
pop
inc
sbb
xchg
inc
fdiv
pop
orb
mov
jmp
ljmp
imul
mov
mov
add
stc
pop
or
add
rcrb
xchg
sbb
add
sub
outsb
mov
scas
je
add
sub
aad
push
and
or
and
and
sub
out
and
pop
test
pop
cmpsb
addl
pop
bound
jmp
clc
hlt
mov
add
aad
mov
or
and
xchg
leave
shr
or
fiaddl
les
adc
nop
mov
adc
fstpl
add
cmpsl
loopne
movsl
daa
push
ficompl
add
enter
mov
pushf
and
fprem
ret
pop
mov
cmc
fs
add
pop
mov
jmp
pushf
popa
jmp
mov
adc
fs
or
dec
and
sarl
sub
data16
mov
decb
jns
add
cmp
xchg
pop
add
gs
jb
mov
mov
sar
fcoml
repnz
sub
shrl
iret
jp
mov
cmp
das
jle
fbstp
add
orb
cmp
sbb
jne
rclb
adc
bound
or
add
xchg
fs
xor
lcall
nop
or
les
add
xor
xor
adc
xorl
mov
xchg
mov
ret
xorl
lods
cmp
imul
lds
addb
aas
sub
dec
add
pop
jge
add
adc
and
add
lret
shr
cmp
aas
pop
adcb
sbb
jns
xor
cmp
dec
inc
add
xchg
push
mov
addb
popf
cmp
cld
xor
inc
mov
gs
add
into
cmp
pop
movsl
add
ret
popf
cli
je
xor
bnd
add
mov
sbb
negb
cpuid
js
jge
add
dec
lock
ret
cmp
clc
mov
add
push
add
lcall
ja
or
mov
cmpsb
add
addl
jne
add
lods
sub
sub
add
mov
or
add
adc
les
cmp
insb
xchg
xor
push
mov
add
test
jnp
add
adc
repnz
rolb
push
adc
das
imul
ljmp
add
adc
lret
push
cmp
cmp
add
jmp
jp
mov
mov
dec
incl
gs
cli
or
sbb
lea
cmc
cwtl
bswap
push
add
push
fwait
xchg
lea
mov
inc
ds
add
aam
add
dec
jmp
test
dec
sti
in
int
add
out
iret
inc
into
or
or
movsb
cli
add
push
out
test
adc
mov
jbe
and
test
out
lret
and
insb
cwtl
ljmp
mov
pop
cmp
ret
add
or
pop
mov
pushf
add
add
add
leave
mov
or
stc
std
add
push
push
push
ss
sahf
nop
jecxz
or
das
cmp
xchg
inc
or
cmpl
push
sbb
or
dec
and
cmp
mov
add
das
repz
or
dec
or
loop
add
dec
les
rcrb
push
inc
dec
sub
jne
cmp
add
addr16
dec
pop
call
add
xor
xchg
adc
add
pop
jnp
sbb
sbb
add
int
mov
inc
add
add
adcb
sub
inc
jns
mov
mov
pop
ja
add
xlat
add
mov
cld
mov
sbb
push
std
into
jae
inc
dec
add
push
lea
sahf
xchg
fdivrs
pushf
xchg
pop
rorb
push
mov
adc
add
mov
mov
adc
lret
ret
cmp
add
cld
xchg
mov
or
add
gs
mov
cmp
aas
loopne
mov
xchg
xor
push
hlt
add
cmp
fucom
cld
nop
pop
add
cmp
mov
mov
pop
add
in
loope
into
enter
call
int
add
je
or
pop
mov
add
sbb
xorl
mov
rorb
sub
jle
add
mov
add
int3
in
jge
and
cli
pop
cvttps2pi
add
cmp
cwtl
jb
mov
fistl
divl
setb
add
ljmp
or
mov
inc
mov
xchg
rcl
out
lea
pop
cmp
fmuls
lock
add
cmp
jne
xor
add
xchg
jae
js
mov
mov
and
inc
repnz
sub
or
and
lock
add
add
jne
add
and
mov
aas
popf
arpl
add
dec
lods
cltd
ret
and
cmp
hlt
leave
pop
fcom
xchg
addb
movb
add
pop
rorb
jne
aad
mov
pop
add
jb
sbb
or
fsubr
verr
loopne
cmc
add
lods
rcr
mov
fisubs
pop
icebp
test
lret
adc
add
sub
cmp
pop
lds
xor
xchg
repz
movsb
lods
inc
dec
adc
pop
add
xchg
pop
lsl
or
sbb
push
nop
jmp
aaa
sbb
adc
or
lret
fsubrp
rorl
jge
pop
add
repz
fisttps
testb
push
call
scas
sub
jae
add
mov
lcall
add
fmuls
out
xchg
mov
out
jg
xchg
mov
push
repz
sbb
add
push
lcall
fadds
cmpl
sbb
inc
out
lahf
push
ret
jno
les
nop
dec
movsl
adc
enter
or
cwtl
lea
shll
nop
ret
push
fdivr
popf
lret
pop
pop
leave
gs
hlt
xlat
add
loop
aas
mov
jp
add
mov
push
add
pop
adc
xor
cmp
jne
mov
or
aas
dec
pop
jmp
jp
xor
xlat
stos
ficompl
xchg
dec
adc
insb
mov
es
roll
inc
add
jmp
clc
push
pop
scas
loopne
inc
dec
or
xor
or
lahf
add
ss
sbb
imul
fs
fildll
lret
roll
sbb
mov
inc
mov
icebp
inc
mov
jo
cmpl
lea
ljmp
scas
pop
popa
dec
jne
sub
jnp
add
sbb
lahf
sbb
add
dec
repz
popa
jnp
pop
inc
ljmp
cmp
repz
enter
xor
out
inc
add
pop
stos
push
es
pushf
push
add
and
mulb
negl
add
sub
xchg
xor
push
jmp
hlt
std
in
xchg
add
out
mov
fdivr
mov
pushf
and
cmp
lcall
adc
std
or
mov
mov
jg
push
faddl
add
aaa
adc
pop
inc
aam
dec
fs
add
xor
add
mov
mulb
leave
cs
fs
int3
call
mov
les
jnp
movb
ret
jne
outsb
mov
add
or
pop
or
cltd
mov
pop
pop
mov
add
adc
lret
icebp
int3
fmull
test
push
cmp
movsl
jecxz
test
das
mov
xor
inc
mov
faddp
cmp
ja
pop
scas
sahf
aas
andb
inc
add
adc
cwtl
mov
and
mov
pop
dec
jp
pop
mov
push
repnz
cmp
jb
in
lock
mov
fisttpl
pop
pop
xor
pop
add
sti
and
cwtl
adc
inc
mov
mov
jae
movsl
add
pop
fiaddl
and
add
outsb
dec
add
pop
sub
call
push
add
and
cmp
jl
jne
add
out
leave
xor
cmpb
out
je
sub
push
stc
add
cmp
xchg
jecxz,pt
push
add
test
sarl
push
add
jl
xor
add
test
test
jg
add
aas
call
into
pusha
repz
add
stos
das
pop
or
add
or
add
xchg
cmc
incl
add
fstp
orl
xchg
add
pop
pop
out
loop
cli
ret
add
xadd
jb
ljmp
sub
push
lea
push
push
testb
add
inc
sbb
add
aas
stos
or
filds
je
and
sbb
stos
fs
xor
jne
push
mov
movsb
shll
lahf
xchg
addl
add
mov
sub
mov
stos
add
mulb
or
jne
jo
add
push
push
mov
dec
roll
pop
ljmp
add
add
mov
adc
pop
jb
lds
ret
inc
sbb
and
mov
cmp
add
lock
add
pop
dec
pusha
lods
or
mov
sbb
add
push
cmp
aas
adc
inc
sbbb
dec
sti
pusha
adcl
clc
ljmp
add
adc
xor
mov
mov
inc
or
lock
add
jne
cmp
rcll
enter
int
fadds
add
test
jne
or
aad
sahf
add
fwait
push
adc
in
pop
mov
enter
jp
loop
add
mov
lock
jb
jo
rcr
inc
testb
add
jne
adc
leave
or
mul
cmp
cmc
mov
xchg
dec
pop
xorl
mov
add
addb
and
push
pop
and
sbb
add
lahf
cmp
pop
add
sbb
insb
pushf
sti
test
shlb
les
pop
mov
mov
jnp
cli
enter
dec
cltd
scas
add
js
xor
pop
xor
inc
je
pop
cmpb
sbb
test
clc
lret
xchg
je
add
ret
mov
test
add
pop
dec
xor
lock
leave
sbb
in
cmpsl
arpl
sub
fistps
sub
dec
add
cmpsl
add
nop
xchg
push
pop
add
add
sbb
sub
or
clc
or
pop
incl
das
adcb
adc
sbb
out
add
mov
cwtl
xor
nop
add
stos
and
mov
les
sbb
adc
sar
cmpsb
shlb
push
and
adc
pop
leave
shrb
cmp
pop
enter
cmp
add
mov
subb
adc
mov
sub
mov
fldt
pop
or
xor
dec
pop
add
jns
ret
push
nop
cmp
adc
push
inc
cmpl
dec
sbb
mov
or
mov
lods
lcall
pop
sub
clc
lea
mov
pusha
imul
adc
pop
pop
jne
mov
psubb
push
mov
dec
mov
cmp
add
cs
add
js
or
int
push
imul
loop
aas
and
test
aam
mov
sub
jo
pop
add
int3
ficomps
inc
jge
insb
pop
add
jne
adc
push
add
js
cld
sub
and
or
pushl
mov
into
inc
mov
out
dec
inc
adc
add
adc
adc
test
or
mov
add
mov
repnz
jne
mov
sarb
insb
cmp
add
daa
lock
ljmp
adc
mov
enter
pusha
call
popa
cltd
push
or
scas
add
sub
add
jl
push
xlat
test
mov
pop
pop
mov
sub
adc
push
cmpl
add
enter
inc
mov
sub
sub
pop
mov
xchg
or
mov
mov
cmpl
push
jae
xchg
addb
or
int3
mov
push
pop
mov
fisttps
cmp
sbb
push
push
lret
pop
and
jg
add
ljmp
cmp
xor
push
ret
mov
enter
out
int
cmc
fildl
pop
xchg
insb
dec
adc
adc
scas
push
pop
mov
adc
cmpb
shr
push
call
in
je
pop
or
add
ret
adc
fs
movsl
add
cli
shlb
movsb
adc
sub
cltd
push
add
lods
fidivs
mov
adc
in
add
movsb
pop
rep
jmp
popa
mov
add
adc
lock
inc
add
jmp
popl
pop
or
insb
add
mov
mov
rorb
mov
popa
jle
pop
in
mov
scas
add
xlat
sub
push
and
ds
rorb
pop
sub
add
nop
jg
add
push
mov
repz
add
inc
dec
xchg
loopne
add
dec
sub
mov
inc
adc
or
add
or
scas
orb
push
jo
add
call
push
loopne
add
std
or
inc
push
dec
stc
add
popa
mov
call
pop
int3
rorl
hlt
lcall
add
popf
xchg
rclb
mov
sbb
add
stos
enter
pandn
xchg
add
adc
push
jecxz
pop
mov
fadds
jl
add
sbb
js
dec
adc
lods
movsl
jle
dec
sub
fwait
pop
lds
loope
in
cmpsl
pop
sbb
jo
inc
clc
push
dec
push
add
sbb
adc
and
sub
and
push
cwtl
testb
roll
call
lret
fnstcw
popf
xchg
adc
add
push
or
adc
xor
cld
add
xchg
dec
lahf
add
jge
add
in
subb
movsl
mov
shll
push
adc
inc
jge,pt
add
js
xchg
xorl
daa
rolb
add
out
cmp
outsb
pop
das
add
push
ret
clc
pop
test
add
push
shlb
gs
stos
adc
push
jecxz
sbb
mov
inc
xlat
out
ret
cmp
into
add
ljmp
les
out
push
add
jo
mov
push
cmpsl
add
lea
ja
orl
xchg
call
adc
pop
shrl
sub
into
add
or
and
sub
loopne
test
add
add
cmp
sbb
xor
push
or
jo
push
push
jo
add
sub
dec
xorb
add
or
je
xorb
cmp
call
dec
pusha
add
jmp
inc
and
out
push
sub
scas
inc
orb
cmc
push
jne
pop
loopne
rol
sub
jns
incl
jmp
pop
daa
mov
add
dec
xor
fwait
mov
out
jp
pop
and
mov
loopne
add
lret
call
addr16
loopne
sahf
add
jp
aad
mov
inc
lret
push
shr
add
fsts
xor
pop
add
and
popf
mov
lock
sub
lcall
adc
add
jno
cmp
in
cmp
mov
hlt
inc
pop
jecxz,pn
ds
jns
add
in
push
add
repz
insb
sbb
roll
add
jge
add
push
or
sbb
aaa
add
int3
stc
push
add
or
mov
into
pop
xchg
xchg
xor
add
adc
push
filds
add
test
popa
mov
add
lods
movl
and
cli
or
xchg
test
in
add
fbstp
or
roll
dec
push
pop
in
lea
adc
lret
add
add
pop
rolb
mov
jno
fidivrl
add
and
pop
nop
in
push
xchg
jge
add
add
sti
sbb
mov
add
and
out
pop
jno
add
pop
inc
lods
sahf
sub
add
pop
fwait
mov
icebp
scas
stos
arpl
sbb
fcoml
adc
sub
xor
addl
inc
cmp
add
sbbb
outsb
movsb
or
mov
int3
cmp
add
jg
jns
adc
xchg
inc
add
shlb
add
in
inc
rcrb
mov
dec
add
dec
add
fsubl
xor
gs
adc
ret
jno
lahf
stc
bound
popf
cld
cs
fdivs
lea
jmp
or
lret
push
jge
es
add
mov
cmpsl
shlb
jns
push
inc
lahf
int
sbb
mov
xchg
mov
pop
cmpsl
repz
and
rolb
cli
adc
xchg
jb
out
sbb
pop
mov
insb
mov
inc
shll
and
sbb
pop
int3
sbbb
cmp
and
repz
je
mov
nop
xor
xor
in
loope
inc
pop
ret
stos
mov
pusha
std
mov
add
scas
mov
jno
sbb
bound
rorb
inc
xchg
leave
aad
pusha
lea
mov
adc
lock
clc
inc
ret
arpl
pop
cltd
jnp
shl
pop
jl
es
push
add
add
lea
mov
add
pop
ret
add
xor
hlt
addb
dec
pop
pop
loop
shll
add
lea
push
lahf
xchg
pusha
add
in
les
sbb
add
add
inc
test
jmp
pop
cltd
sub
add
dec
ds
jp
and
ljmp
cmp
pop
mov
int3
add
adc
xchg
jne
fwait
dec
add
lahf
xchg
xchg
xchg
adc
ss
push
ret
push
ljmp
stos
sub
cmp
iret
dec
dec
add
sub
xchg
sbb
out
mov
sbb
adc
xorb
add
fwait
leave
jns
adc
mov
inc
dec
sarb
pop
add
mov
loopne
roll
loope
mov
add
lods
xor
test
andb
push
sub
jno
ljmp
cmpsb
add
in
add
ss
push
mov
into
add
loopne
add
sbb
jecxz
roll
pusha
movl
out
orb
add
mov
roll
mov
pop
and
add
mov
add
sub
shrl
mov
inc
leave
push
insb
mov
add
gs
push
dec
xor
jge
add
insl
xor
cmp
pop
aad
mov
xor
shlb
js
ret
cmpb
push
add
push
imul
or
stos
mov
pop
and
fwait
in
arpl
cmp
mov
mov
sbb
dec
jle
lret
sub
in
push
jno
add
cmc
repz
dec
adc
add
inc
subl
push
mov
mov
inc
lods
mov
cmp
shlb
fcomi
add
fstps
pop
dec
cltd
test
mov
inc
inc
mov
adc
leave
mov
push
ret
jne
jnp
push
add
rcl
add
aas
sbb
orb
cmp
in
je
stos
pop
lock
jle
fs
lods
jge
xchg
jne
aas
xchg
inc
and
add
add
inc
addb
pop
mov
jge
add
lds
pushf
jae
dec
out
add
sub
push
pop
sbb
mov
and
dec
push
pop
sub
fs
stc
movsb
and
out
js
mov
pop
adc
fcomi
push
or
add
or
add
fnstcw
push
sub
add
enter
push
add
test
shll
or
add
add
add
sbb
loopne
cltd
sbb
aam
lods
push
lcall
cwtl
push
mov
je
xor
mov
outsl
and
jb
cs
add
mov
sbb
mov
and
inc
stos
mov
insl
jnp
or
sub
test
xor
push
inc
aaa
push
test
xor
std
sub
jmp
add
add
add
and
push
xbegin
xchg
out
add
sarb
add
adc
mov
dec
add
sub
add
mov
inc
ss
sbb
push
sub
orb
mov
or
mov
sub
rclb
loopne
loop
mov
push
clc
mov
sbb
rolb
or
mov
clc
std
xor
and
add
je
push
jcxz
mov
aaa
add
adc
cmp
dec
add
hlt
cld
push
popf
push
cwtl
mov
pushf
ja
aaa
cli
loopne
fcomi
sbb
mov
cmp
aas
push
pop
addb
jb
and
jp
fs
pusha
adc
ljmp
popf
add
jo
sub
imul
push
leave
or
outsb
mulb
test
cmp
shll
daa
xor
adc
add
out
fs
mov
mov
incl
mov
movsb
arpl
sbb
add
push
sub
dec
imulb
aaa
push
jo
loopne,pn
add
push
inc
jne
dec
mov
les
pop
push
add
or
add
lea
push
or
push
sbb
dec
mov
mov
push
or
or
loope
arpl
push
cs
dec
add
or
add
add
or
sub
jp
mov
inc
int
mov
jo
add
in
faddl
pop
jo
adc
lods
add
test
das
xchg
push
push
or
xchg
inc
cwtl
mov
insl
add
sub
add
clc
les
push
push
in
or
push
and
mov
into
ljmp
cvtps2pd
cld
dec
jg
mov
cmp
mov
insl
fsubrl
add
mov
into
inc
adc
cmp
lods
test
lahf
add
in
mov
add
lock
and
in
rolb
shlb
push
cmpsl
add
in
into
pop
inc
nop
lret
das
mov
dec
clc
sub
sbb
sub
dec
cmp
and
jo
push
mov
add
adc
and
sbb
jp
rcll
test
add
cmp
insb
add
psubb
xchg
inc
cmp
rcrl
sub
clc
cmpl
fs
or
or
mov
int
clc
add
lock
adc
dec
inc
pop
push
loope
pop
sbb
cs
fldcw
insb
mov
xchg
inc
aaa
dec
stc
cmc
sub
js
add
dec
rclb
arpl
cmp
in
cli
jg
dec
ret
sub
das
fcmovne
jne
cmp
pusha
pushf
mov
add
or
xchg
outsl
sbb
xor
pop
pop
adc
loop
mov
lret
loope
idiv
fsubrp
rol
add
inc
dec
ja
hlt
sub
mov
add
add
cwtl
ss
mov
shrb
in
out
add
cmove
xor
popa
add
ds
push
and
add
mov
and
jo
add
mov
adc
cmp
push
punpckldq
dec
xchg
popa
mov
or
int
mov
ljmp
ret
xor
jnp
add
push
inc
cmp
cmp
lods
push
mov
sahf
lret
add
dec
lcall
add
mov
push
aaa
cmp
lds
and
imul
mov
add
sbb
data16
add
std
gs
or
popl
xor
xor
jb
and
xchg
lret
and
sub
and
mov
popf
push
addb
xchg
and
sub
int3
pop
mov
mov
inc
push
insb
aam
sarl
and
mov
jecxz
jns
ror
add
fildll
cwtl
orb
push
pop
lret
insb
sbb
add
movsl
jge
add
stc
mov
or
mov
arpl
jno
cwtl
push
add
std
inc
pop
dec
shl
pushf
add
daa
mov
push
rcr
or
cmp
add
cmpsb
shlb
jne
push
add
mov
pushf
enter
cltd
popa
clc
dec
test
adc
sub
stos
add
mov
mov
cmp
loopne
add
push
imul
shrb
add
inc
mov
and
int3
mov
jbe
cmp
imul
sbb
repz
loopne
arpl
xor
mov
xor
scas
pushf
ret
push
pusha
push
inc
inc
add
mov
xchg
jae
mov
xor
int3
pop
xchg
ret
add
push
xor
hlt
sarb
in
in
add
pop
cmp
or
pop
dec
sbb
pop
sbbl
jmp
pop
and
jns
cld
loope
push
outsb
rcr
cmp
ja
jp
inc
pusha
lea
jae
add
xchg
pop
daa
cld
lock
fwait
lods
cmp
lret
and
out
add
pop
cwtl
insb
jecxz
or
mov
repz
mov
nop
inc
push
mov
add
or
jmp
pop
jl
int3
test
sahf
jo
pop
jmp
scas
iret
cmp
xor
jmp
add
jecxz
push
in
fildl
and
or
cli
les
cmp
cmc
and
stos
mov
adc
jge
movlps
mov
repz
push
lea
add
enter
mov
mov
cmp
adcb
add
mov
rcll
sub
jns
xchg
and
mov
stos
mov
adc
lret
sub
pop
out
lock
adc
and
int3
dec
add
xchg
pop
dec
imul
add
fcoml
pop
mov
les
pop
jecxz
add
sub
mov
xor
dec
cwtl
and
lock
add
xor
loopne
mov
roll
xchg
xchg
incl
sbb
xchg
addl
fbld
mov
pop
lret
sbb
mov
push
mov
aas
add
add
add
lods
enter
jne
jmp
inc
sbb
sbb
or
and
out
sbb
test
cmpsb
add
adc
fisttpll
dec
add
call
rorl
dec
mov
jbe
push
pop
in
stos
add
das
push
roll
add
add
xchg
pop
es
add
mov
clc
add
gs
add
pushf
sub
fwait
scas
les
clc
and
push
cli
push
je
jno
jg
shll
add
push
lret
stc
and
mov
popl
jmp
pop
hlt
add
dec
ret
sbb
cmp
fcoms
repnz
or
ret
adc
add
lcall
ror
adc
clc
orl
add
jne
int3
in
pushf
in
push
add
ljmp
jne
pusha
pop
jo
add
add
daa
repnz
pop
aam
and
add
xlat
mov
pop
or
into
sarb
inc
jns
jne
add
xchg
add
rclb
sub
lret
mov
pop
mov
fadds
nop
mov
push
xor
mov
pop
insb
lea
pop
sub
ret
shl
fimull
js
cs
mov
push
and
mov
sbb
push
or
mov
ltr
xchg
mov
add
lahf
sub
repnz
mov
ljmp
cmpb
loopne
inc
fs
sbb
pop
xlat
inc
adc
add
out
xchg
jmp
das
lods
cld
fwait
pushf
sub
in
add
adc
sbb
pop
outsb
or
add
push
call
subb
sub
sub
xor
adc
in
add
jg
cltd
or
add
scas
pop
ret
add
push
repz
dec
sbb
dec
cmp
push
xor
out
fildl
sahf
add
smsw
jmp
add
push
leave
pop
shlb
jns
add
lods
in
add
or
jmp
jge
add
hlt
jno
sar
mov
push
je
es
out
mov
mov
pop
mov
rcrb
or
add
movb
out
add
inc
mov
cld
enter
jo
fisttpll
inc
adc
sbb
fchs
adc
pushl
imul
cmp
iret
shrb
sgdtl
mov
testb
push
out
mov
or
sbb
sarl
add
aam
inc
push
xlat
std
add
cld
and
rorl
in
pop
ljmp
sbb
dec
add
das
pop
jne
fmul
clc
push
loop
jp
add
push
xchg
pop
xor
cmp
and
cmpl
andb
add
xchg
mov
pop
jae
test
pop
mov
lock
int
stc
add
jbe
inc
push
add
adc
lret
add
popf
sub
mov
jmp
out
mov
add
or
cmp
stc
add
aad
in
bound
jo
xor
jp
aas
sbb
add
pop
sub
addb
push
jp
in
add
inc
insl
cmp
testl
add
or
inc
vpmacssww
sbb
add
loop
shl
add
push
adc
in
addb
push
mov
push
jo
xor
das
out
or
outsb
inc
jmp
add
lods
add
int
mov
popa
pop
add
fistl
outsb
xor
imul
xchg
ds
cvtpi2ps
and
cmpsb
rcrb
mov
ret
add
orl
test
cmp
fidivl
or
pop
push
ja
jo
add
xchg
lods
fdivs
add
add
or
sub
pop
imul
add
jns
lods
mov
sub
popf
or
jbe
loopne
add
in
pop
add
shr
cwtl
fisubl
aad
add
outsb
leave
push
sarb
add
mov
cmp
adcb
je
inc
mov
pusha
subb
stos
add
jbe
mov
jo
loopne
add
or
add
js
shrl
lods
cltd
and
dec
js
jo
or
roll
cmc
inc
ja
jno
mov
sbb
inc
orb
pop
add
push
pop
aam
add
mov
push
ljmp
arpl
fisttps
lahf
call
jae
mov
and
pop
lods
filds
shrb
dec
int
pusha
and
fldl
aam
inc
xchg
jb
inc
outsl
leave
mov
fs
push
xchg
into
push
inc
mov
jnp
add
jmp
pop
sarb
add
or
push
into
push
pop
mov
xor
push
cmc
shlb
int3
pop
clc
dec
sub
add
adc
xchg
dec
lock
enter
cwtl
les
imul
aam
jbe
xor
inc
and
call
cmpb
or
lahf
jp
add
push
add
or
push
popaw
push
dec
add
adc
and
movsl
div
pop
popf
les
dec
js
add
cmpsb
dec
jo
add
lea
mov
and
jle
mov
jo
fstpl
pusha
sbb
lret
push
sbb
bound
cmp
inc
dec
xchg
cltd
jno
shrb
bound
push
add
jbe
mov
ljmp
rclb
add
pop
sbb
jo
inc
xchg
jb
mov
add
fldl
and
xchg
add
ds
push
xorb
mov
std
xchg
cli
push
inc
data16
sbb
adc
insb
add
add
ret
add
pushf
imul
sbb
idivb
cld
rolb
out
push
inc
mov
jnp
add
enter
xchg
add
add
aad
adc
inc
mov
insl
imul
pop
loopne
add
push
pop
sub
xchg
mov
in
mov
pop
add
dec
rolb
sbb
andb
les
imul
cli
enter
adc
add
lea
fisubrs
es
inc
push
add
jo
inc
pushf
dec
add
fucomi
sarl
cmpsl
addb
inc
nop
in
out
mov
arpl
add
sti
call
or
pushf
and
rorb
fucom
add
add
adcb
les
pusha
jno
jo
add
sub
iret
or
mov
or
les
add
cmp
pop
mov
add
fmull
sbb
cmpsb
jle
shll
dec
ja
add
mov
sub
push
mov
out
insl
push
mov
cmp
lds
push
adc
outsb
jo
hlt
sub
pusha
xchg
sbbb
mov
xor
add
add
fcomp
or
sbb
stos
add
or
jecxz
clc
popa
xchg
add
js
add
movsl
bts
and
and
or
jmp
mov
inc
shrb
in
stos
and
add
les
ss
inc
push
jb
adc
pop
out
fwait
add
pop
jmp
add
and
subb
inc
cld
int3
mov
xchg
jnp
lcall
jmp
jo
loopne
add
hlt
sti
loopne
imul
jo
fwait
add
push
loop
xadd
push
cmp
test
sub
sub
or
cld
sbb
add
inc
adcl
lods
idivl
sub
xor
cs
jl
les
cmp
add
add
xlat
or
sbb
out
add
dec
sub
mov
adc
xlat
add
cmp
setl
and
es
and
adc
stc
ret
cld
repz
addl
or
mov
jg
shlb
test
jmp
cmp
loop
jp
pusha
hlt
daa
aad
or
dec
and
jl
add
dec
pop
cmpsb
out
das
add
movsb
hlt
jns
xchg
cld
add
pop
dec
pop
xchg
jge
sarb
add
mov
add
scas
js
test
mov
mov
sub
ds
xchg
pop
cmp
test
pop
xchg
xchg
push
jo
add
mov
jbe
jae
mov
sub
add
xchg
negl
lock
mov
clc
add
clc
inc
cmpsb
pop
inc
repnz
add
inc
jl
push
jecxz
mov
add
add
lods
jno
nop
sbb
add
push
stos
ja
aas
std
add
mov
pop
xor
ret
bound
out
sbbb
or
push
popf
xchg
addb
popa
adc
add
jmp
inc
cmp
and
add
cmpb
sbb
add
mov
jl
loopne
add
adc
or
fidivrl
data16
mov
das
pushf
shll
add
nop
sbb
or
test
dec
jae
add
inc
sub
test
add
lret
mov
jnp
adc
inc
jbe
shll
mov
mov
sub
int
sbb
add
and
pop
das
je
add
add
push
sbb
insb
pop
popl
inc
add
out
adc
xor
add
and
aas
add
sbb
mov
andl
inc
dec
add
cmp
test
mov
out
adc
leave
mov
jno
andl
cmpsb
dec
add
mov
xchg
int3
mov
mov
jmp
test
pop
lret
fisubs
fsubl
pop
add
psrlw
jns
rcrb
pop
add
aaa
mov
mov
adc
add
imul
enter
imul
popf
nop
jp
dec
jo
mov
clc
stos
mov
loop
add
mov
ljmp
cmp
mov
jg
and
xorl
push
lods
stos
jl
cltd
sbb
push
mov
jg
test
js
add
mov
stos
addl
add
sbb
insl
in
mov
inc
xchg
fcomps
push
add
xor
outsb
in
orl
xor
enter
cwtl
lea
mov
adc
or
shlb
addb
or
adc
adc
pop
and
xor
add
pusha
jo
andb
sub
add
add
add
add
mov
addb
or
clc
adc
adc
rcll
call
dec
add
jb
push
mov
add
mov
adc
mov
pop
add
pop
jns
popf
pop
pop
mov
inc
or
loopne
add
decb
adcl
jae
lock
js
sub
shr
pushf
cli
add
mov
add
popa
mov
ds
pop
lods
add
pop
xchg
outsb
mov
xchg
push
mov
popf
shrb
mov
les
lahf
or
push
cwtl
add
push
mov
cs
xor
lea
add
stos
mov
out
bound
jge
mov
mov
mov
or
add
lds
mov
jb
mov
je
sub
or
add
decl
incb
in
nop
add
xor
adc
adcb
add
sbb
int3
loop
sub
xor
in
pop
cmp
ret
addl
mov
add
insb
jl
mov
leave
adc
mov
pushf
mov
and
sbb
and
add
call
cmpsl
push
daa
shrb
cmp
data16
jmp
lods
inc
lret
and
stos
out
jg
rolb
or
lock
pop
lret
pop
movsb
fwait
and
bound
xchg
lahf
fiaddl
std
xor
rcrb
cwtl
movsb
pop
dec
add
adc
push
cmp
mov
add
add
and
xchg
mov
test
push
hlt
insb
sub
loop
pop
ret
inc
cmp
enter
adc
leave
dec
push
rolb
cmpl
or
cli
add
add
inc
mov
add
nop
sub
loope
ds
loopne
or
push
mov
mov
mov
jae
pop
shlb
mov
sub
cmp
add
es
imul
add
xchg
mov
fxch
sbb
pop
adc
adc
pop
inc
sub
jae
adc
sbb
fiadds
xchg
aas
cld
rcll
clc
mov
mov
sbb
xchg
or
cmpl
addb
test
pxor
push
xchg
jns
adc
add
or
sbb
pop
call
inc
adc
rorl
repz
pop
xor
pop
lcall
mov
mov
mov
es
add
jp
jecxz
into
incl
add
jb
and
push
push
clc
add
inc
fdivrl
sub
nop
or
call
rolb
xchg
imul
add
pop
jmp
or
shrl
jg
add
inc
lea
pop
jg
sbb
mov
push
or
cwtl
push
cltd
add
mov
lar
push
push
rcrb
int
add
pop
cmpsb
cli
or
in
mov
add
mov
in
lea
arpl
push
ror
loop
shrb
sbb
push
push
push
stos
xor
adc
add
leave
mov
adc
adc
add
js
test
pop
pop
sbb
cmp
add
les
pop
cltd
jecxz
sbbb
mov
push
push
mov
sar
or
icebp
and
and
inc
jmp
pusha
jne
push
add
rolb
bnd
add
push
mov
xor
dec
mov
jg
jmp
nop
push
adc
sub
pop
jae
add
and
mov
mov
inc
dec
jno
movsb
call
repnz
add
stos
add
lea
add
push
das
and
icebp
adc
push
shrb
inc
xor
movb
cmpb
lods
and
add
and
and
sbb
push
mov
mov
inc
add
jne
mov
dec
xor
jl
add
nop
pop
cld
out
daa
in
add
sub
pop
mov
dec
es
mov
call
xchg
push
jns
xchg
push
jae
xor
fisttpl
push
cmpsl
add
and
jmp
add
jae
jo
add
shr
add
lea
sub
mov
cli
enter
mov
or
enter
pop
fwait
cmpsb
add
and
int3
pop
pop
add
or
lods
adc
out
adc
mov
mov
jle
sub
mov
pop
iret
add
addr16
rcrb
insl
push
fidivrl
mov
stc
pop
push
add
mov
add
adc
aad
cld
insb
and
repz
jbe
cmp
jb
repnz
mov
inc
and
std
pop
jo
push
bound
vpsrad
inc
imul
mov
mov
or
mov
xchg
mov
cmp
jae
jns
xchg
ljmp
orb
add
and
xor
mov
add
add
jmp
orl
and
mov
inc
ljmp
jno
cmp
mov
add
jmp
into
mov
cmpb
loop
mov
jmp
sbb
js
add
mov
in
pop
push
or
frstor
or
push
lock
push
adc
loopne
cmp
push
ret
cmc
add
shrb
roll
or
loopne
and
jnp
add
adc
insl
into
add
dec
push
jecxz
cmp
add
jb
push
inc
adc
std
subl
int
and
cld
insb
mov
xchg
stc
inc
test
pushf
jns
pusha
les
inc
jae
fwait
add
cmp
call
xchg
movsb
leave
jmp
dec
aad
rolb
push
xor
jl
icebp
pop
ret
push
sub
add
jp
inc
xor
add
sbb
add
clc
adc
aam
push
adc
add
push
clc
add
aam
xor
add
inc
jg
shrb
xor
repnz
pop
movsl
shlb
or
jbe
das
cmp
xchg
mov
xor
fs
jmp
enter
push
add
mov
lret
adc
cmpsb
adc
jbe
data16
shll
sub
je,pt
add
jb
pushf
jge
xchg
in
sarb
ja
cmp
sbb
fcompl
adcb
push
sbb
sbb
or
add
aas
jne
sub
cvtpi2ps
jl
lds
cmpb
repnz
dec
or
mov
rorb
add
shrb
cmp
jecxz
adc
jb
call
mov
lcall
add
mov
jns
add
pop
fildll
mov
cld
mov
pop
aam
imul
sahf
cmpb
sbb
dec
push
push
add
push
inc
push
mov
mov
mov
mov
stc
dec
add
lcall
cmp
insb
cmp
clc
mov
cmpsb
int
fstps
pusha
xchg
and
cmp
imul
cld
les
je
inc
lret
movl
cmpsb
lea
divl
cmp
sub
popf
xchg
push
ds
in
test
cmp
nop
pop
popl
stos
lds
push
jmp
lock
push
xchg
cmp
ds
stos
xlat
xchg
add
push
sbb
or
and
je
pop
mov
sbb
repz
adc
xor
push
sub
mov
pop
sub
movsl
xor
icebp
or
add
add
test
andb
jle
add
push
in
sub
push
jge
add
bound
cmp
into
pop
lret
inc
test
test
sahf
hlt
in
pop
jns
add
cmp
arpl
jl
add
jge
lods
lds
or
push
push
and
mov
pusha
aam
push
loopne
add
sub
push
mov
lock
add
outsl
ja
mov
sub
and
and
xor
sbb
icebp
dec
push
push
jp
sbb
and
or
jg
sub
repnz
xchg
sbb
dec
movsl
cmp
dec
add
cs
adc
xor
add
add
pusha
ret
add
add
test
pop
mov
xchg
call
jmp
jecxz
push
mov
push
cs
lock
xlat
stos
int
add
jmp
mov
cmp
ds
mov
jmp
dec
add
jne
adc
mov
in
out
addb
and
mov
mov
add
mov
mov
or
cmpb
jp
push
imul
test
push
adc
rorb
jmp
divb
lahf
pop
add
mov
jnp
popa
outsb
sub
jns
or
add
hlt
das
push
add
fwait
add
jnp
add
or
lods
add
jge
cmp
push
jg
inc
loope
add
pop
mov
mov
push
pop
adc
mov
call
push
fs
scas
popaw
and
sbb
pop
xor
push
push
cwtl
je
add
xchg
push
lock
or
rorl
or
or
sbbb
fsubr
sbb
sarl
arpl
rorb
fs
sbb
add
test
xor
mov
and
mov
add
pop
aaa
add
xor
pop
add
clc
repz
mov
inc
inc
xlat
pop
xor
inc
push
push
add
xor
or
les
jmp
shlb
add
addr16
clc
es
cmp
and
pop
loope
push
or
sbb
mov
push
jg
ret
je
call
andl
pop
and
in
inc
movsl
or
inc
add
das
and
push
pop
jo
ds
les
lea
test
in
mov
dec
sbb
add
add
lahf
je
add
call
cmp
sub
dec
rorl
out
add
nop
push
test
enter
cmp
cmp
and
push
add
jne
dec
add
dec
push
dec
lock
nop
or
mov
enter
loopne
or
cmpsb
sbb
aas
xchg
xchg
cmp
dec
add
pop
xor
mov
pop
add
jge
adc
shll
cmp
mov
mov
fiadds
push
mov
mov
add
scas
call
mov
bound
pop
mov
push
jmp
mov
sub
and
cwtl
movsb
cmp
add
add
pop
cld
hlt
pop
ljmp
bound
aad
js
jns
das
add
push
lahf
jae
subl
mov
outsl
or
inc
pop
or
adc
lds
dec
jo
add
jae
mov
push
mov
fmuls
dec
lock
jp
add
rorl
sbb
sub
orb
pop
xchg
mov
shlb
xor
add
ja
xor
xchg
cmp
add
jecxz
rorb
inc
add
xchg
adc
int
push
sub
and
cmpsl
add
mov
add
push
and
bswap
sub
sub
xor
xchg
test
jnp
cs
sbb
lods
push
add
out
xchg
sbb
sbb
ret
repz
mov
arpl
addr16
pop
cmp
loop
test
cmp
jmp
inc
adc
pop
cmp
sbb
stc
add
clc
lds
and
cmp
ja
pop
xorb
imul
mov
mov
and
movsl
add
add
enter
dec
cmp
dec
mov
sbb
fs
add
xchg
je
aaa
fwait
add
outsl
jb
add
je
rcrl
cli
jno
inc
fs
cld
cmp
cmp
sub
sbb
outsl
insl
jmp
adc
add
sbb
mov
jae
sub
adc
mov
xchg
add
jbe
dec
mov
cmp
jns
sbb
ds
push
cmp
and
cmpb
mov
jmp
sbb
xchg
sbb
push
add
sbb
push
sarb
mov
testl
lcall
loop
in
iret
or
jno
add
inc
push
frstor
dec
cld
les
dec
pop
xor
nop
push
inc
dec
mov
es
or
adc
mov
or
les
add
sub
fistps
mov
es
cmp
roll
add
mov
push
push
push
mov
sub
dec
add
add
and
mov
cmpb
jp
xchg
push
pop
push
cwtl
ret
int3
jne
or
sar
xchg
fldenv
jo
roll
inc
add
fnsave
fidivs
cmp
out
pop
add
cmpsl
adc
xor
and
mov
mov
inc
add
sti
sub
cmp
cmp
adc
jge
clc
enter
les
jmp
dec
sub
add
bound
push
roll
out
nop
inc
cwtl
add
loopne
out
rcr
xor
lock
xchg
fnstenv
fsubs
mov
pop
xor
pop
adc
repz
mov
imul
and
repz
lret
adc
xlat
ret
dec
add
mov
push
or
mov
test
jmp
data16
js
xchg
fmull
mov
add
outsl
and
out
aas
testb
push
mov
pop
add
lods
xorl
jg
xor
pop
mov
or
adc
jmp
mov
in
loop
adc
dec
push
arpl
add
mov
jge
sarb
xor
push
pop
inc
inc
repz
in
sub
sub
loop
pop
pop
lea
pop
in
lmsw
lret
pusha
xor
add
adc
cmp
mov
inc
add
nop
xchg
enter
pop
add
push
pop
repnz
jns
loope
dec
sbb
push
gs
add
push
fdivs
fdivrp
pop
call
jbe
pop
mov
inc
rclb
mov
push
test
dec
repnz
inc
scas
rcrb
repz
femms
jl
xor
lea
pop
sub
cltd
lock
sub
xor
xchg
adc
add
sub
inc
mov
je
jl
je
add
or
aam
addl
jmp
xchg
mov
in
add
lock
out
push
add
cli
push
jl
jl
cmove
xor
mov
add
or
add
clc
cmp
sbb
sub
mov
mov
inc
cmpsb
sbb
sub
sub
xor
arpl
mov
scas
add
inc
and
lret
insb
idivb
dec
adc
add
rcl
addb
xor
adc
mov
xchg
mov
stc
jnp
aam
push
jns
add
push
aad
add
lea
add
int3
add
push
pop
addb
cltd
pop
inc
or
dec
adc
dec
xchg
outsl
pusha
ds
mov
push
jp
jno
add
adc
add
je
js
js
cli
add
inc
dec
jne
popa
call
pop
mov
xor
je
sbb
xor
hlt
or
jmp
mov
clc
xor
mov
add
cltd
or
adc
stos
or
xor
push
sbb
pusha
pop
orb
sbb
xor
aad
add
mov
inc
add
sub
dec
xchg
lods
pushl
fnclex
add
ds
in
inc
or
in
add
stos
mov
or
add
or
or
cwtl
adc
movsb
adc
jge
xchg
push
pop
mov
test
lods
mov
call
dec
sub
sti
adc
cmp
sub
dec
inc
lret
adc
mov
pusha
or
repnz
jae
pop
push
sub
lock
dec
dec
cmpsl
add
or
pop
push
xchg
dec
enter
mov
insl
adc
adc
or
mov
jmp
push
mov
push
imull
adc
out
lods
popa
mov
dec
xchg
mov
adc
mov
add
lods
int
or
jmp
add
leave
adcb
inc
inc
add
dec
inc
jo
cmp
xchg
pop
ss
add
push
repz
add
adc
xchg
jae
add
xor
ss
pop
fcmovu
in
inc
packsswb
mov
xor
jns
xchg
add
pusha
out
ret
out
sub
pusha
jle
push
jb
imul
imul
outsb
lret
jg
aad
jmp
pusha
add
push
insb
pop
push
imul
xor
je
add
dec
inc
clc
jb
add
shlb
xor
xor
or
call
sub
fs
add
add
popf
add
push
lods
adcb
jno
inc
xor
rcl
mov
in
test
and
dec
lods
push
or
dec
jo
lock
out
and
add
jno
mov
add
repz
sub
sbb
or
adc
pop
inc
push
in
push
dec
adc
adc
push
mov
inc
mov
mov
insb
xor
mov
cmp
out
add
add
out
inc
push
jns
sbb
add
and
xor
add
inc
pop
jl
sub
es
jmp
aam
loopne
imul
or
pop
lock
xchg
xchg
mov
mov
fistl
fsts
add
int3
inc
lcall
js
push
inc
push
push
add
nop
mov
lret
jmp
js
jp
rolb
movb
pop
dec
add
cli
or
sub
cs
jmp
adc
aas
dec
daa
cmpb
dec
adc
add
dec
nop
test
loopne
dec
popl
pusha
sbb
jmp
lods
inc
nop
add
fs
sarb
in
fiadds
mov
xor
mov
psubw
add
inc
dec
inc
inc
pop
mov
mov
push
sub
cmp
jb
sbb
push
push
sub
mov
push
pslld
pop
in
das
xchg
cmp
xchg
xor
adc
and
xor
fsts
xor
mov
outsl
jne
in
and
jno
jmp
push
add
imul
sbb
sbb
sbb
mov
add
push
or
roll
adc
add
insl
gs
iret
sbb
jne
fdivrl
add
mov
and
add
inc
pop
in
pop
xchg
add
mov
add
test
ja
enter
outsl
add
xor
test
movl
test
or
pop
inc
cmc
bound
add
push
pop
push
push
push
push
add
inc
jae
xchg
ja
add
lds
xor
inc
fsubs
jle
or
ds
orb
xchg
cmpl
sub
fnstsw
cmp
cmp
pop
xchg
scas
add
jo
test
add
imul
push
cmp
xchg
and
arpl
jmp
and
call
pop
sub
popa
cmp
and
add
adc
jb
add
mov
or
or
push
add
std
rclb
xchg
mov
cmpsb
mov
aas
pop
mov
inc
js
in
call
loopne
shll
ss
mov
and
jmp
jae
lock
mull
xchg
add
lret
or
dec
in
xchg
fcomps
push
add
adcl
cs
out
adc
xor
cmpb
rcrl
fstl
push
mov
fiaddl
and
add
in
in
push
add
adcb
or
jo
add
out
sub
aad
lock
loope
inc
push
adc
loopne
add
push
cmpsl
dec
pop
and
hlt
inc
add
pop
push
cmpsb
test
push
add
enter
push
or
rolb
sbb
add
into
loopne
phsubsw
jo
push
dec
adc
dec
mul
jmp
adc
mov
mov
call
mov
inc
subl
out
or
imul
cmpsl
pmaxub
pop
pop
push
pop
pop
add
pop
mov
jbe
push
add
lods
dec
add
mov
loop
add
push
cld
jmp
add
pop
xchg
xor
jne
aas
cmpsl
add
mov
add
pop
or
add
gs
sbb
xor
adc
fsubrs
jns
cmp
push
into
adc
in
inc
call
push
lock
mov
jge
xor
cmp
mov
loopne
ss
mov
out
add
add
mov
xchg
sbb
jne
jb
xor
xchg
and
outsb
add
xchg
dec
les
jo
cmp
out
or
push
sarb
add
test
mov
adc
xorl
push
jge
pop
adc
in
mov
xchg
pop
test
or
and
movsl
push
out
add
dec
xchg
inc
and
xchg
call
enter
out
add
sbb
xchg
and
je
add
les
mov
lods
cmpsb
mov
or
enter
inc
adc
and
ja
add
add
inc
adc
and
ds
dec
xchg
pop
and
jo
jmp
jbe
add
repnz
enter
mov
in
pop
lock
adcb
dec
adc
dec
hlt
in
std
cmp
adcb
pop
cld
or
test
and
or
or
add
push
pop
dec
cmp
gs
mov
cmp
notb
adc
je
xchg
mov
add
cmp
nop
cmp
add
sub
sub
and
and
and
sbb
sub
jl
push
pop
subl
es
in
jbe
add
pop
cmp
and
add
xor
in
test
inc
jle
icebp
jp
fdivr
fiadds
or
and
jmp
sbb
add
cmp
lahf
fiadds
je
mov
adc
push
mov
add
ret
orl
imul
in
jno
jl
sub
inc
mov
ud2
add
push
pop
lods
movsl
sti
push
and
fs
add
test
jbe
mov
and
loop
jo
aam
and
ss
or
pusha
inc
mov
in
add
add
inc
or
sub
add
xchg
and
scas
sub
push
loop
push
add
mov
cmp
add
aad
scas
add
mov
aam
dec
mov
jle
outsb
jl
add
cld
dec
loopne
popa
add
mov
lret
add
sar
aam
pop
and
mov
rcll
sub
xlat
xchg
jmp
add
sub
add
add
repnz
inc
pop
xor
and
pop
adc
dec
push
cld
call
lds
clc
push
sub
and
nopl
xchg
enter
add
pop
fisttpl
add
adc
jecxz
rclb
sahf
and
addb
lods
gs
sbb
sub
inc
and
mov
jle
aas
rclb
mov
sub
add
mov
test
mov
add
movsb
adc
in
jg
shlb
push
pop
push
inc
pop
mov
pusha
xchg
movsl
insl
and
push
loope
je
pop
and
adc
pop
scas
add
and
daa
jge
cmp
inc
sbb
test
or
addl
mov
dec
sub
es
or
dec
jo
sbb
sub
add
mov
jae
or
add
push
xor
mov
mov
xor
das
sub
and
loope
clc
xor
mov
lcall
addb
or
and
add
adc
lods
aad
mov
push
or
pop
inc
loope
and
push
lds
cmp
push
fsubl
lock
fsubrs
movsl
fldl
dec
mov
dec
ficoms
ret
xor
add
pop
dec
mov
pop
in
xchg
clc
nop
stos
sahf
rclb
sub
cmp
jo
arpl
xorb
fwait
sub
inc
xor
pop
mov
and
loopne
daa
orb
inc
add
popf
push
iret
push
or
add
sbb
and
or
adc
inc
fs
sbb
sbb
add
sbb
push
jmp
sbb
mov
mov
sub
sub
add
adc
add
jae
mov
jno
adc
call
insb
nop
loopne
pushf
pop
psubw
hlt
pusha
test
dec
fnstcw
pop
jns
daa
or
jo
mov
lret
sub
test
add
push
mov
adc
add
cmpl
inc
add
jb
enter
daa
add
fnstenv
icebp
out
add
fwait
dec
push
add
add
movsb
cli
sub
push
das
push
cmp
aad
cmpsb
sbb
add
push
out
js
add
adc
add
mov
mov
lock
incb
xor
add
jnp
insb
cmc
sub
pop
and
cmp
je
xor
pop
jbe
adcl
nop
and
dec
add
or
pop
cmp
les
ja
mov
andb
stos
int3
loopne
or
or
jecxz
dec
sub
mov
std
sub
test
mov
unpckhps
inc
pop
shrb
mov
hlt
sbb
in
addr16
dec
ds
cmp
or
sar
sub
push
push
aad
fisubrs
mov
pop
cmp
lahf
rcr
add
pusha
cmp
or
addl
scas
mov
lock
add
pop
ja
jnp
inc
inc
cs
or
push
or
mov
add
add
lret
sarb
or
jbe
into
jmp
add
pop
nop
mov
shlb
sbb
int3
adc
ret
jns
adcb
shll
xchg
sub
ret
inc
daa
jmp
or
mov
add
push
stos
or
and
icebp
add
nop
insl
add
outsb
mov
add
jmp
dec
inc
sbb
addb
cli
add
xor
add
daa
sub
into
adc
add
mov
push
aas
inc
addr16
dec
sarb
and
xchg
ds
lcall
rolb
adc
jmp
das
daa
cmp
icebp
pop
adc
inc
add
cmp
cmc
adc
add
repnz
cmp
xchg
add
rorb
hlt
ljmp
pop
mov
cli
add
arpl
sub
je
or
pop
in
jecxz
in
jbe
push
mov
ljmp
dec
lds
scas
loop
xor
adc
or
clc
add
xchg
fcom
add
cld
sub
in
and
sub
enter
or
ljmp
sbb
add
mov
inc
jmp
lea
xor
or
test
dec
dec
jp
add
xor
add
popf
lds
pop
jmp
add
adcb
stos
sub
sbb
or
scas
andl
mov
add
aad
shrl
add
push
es
xlat
aad
bound
xor
leave
add
push
mov
add
mov
and
cmp
out
cmp
loop
cmp
push
pop
cmc
sahf
sbb
shl
mov
add
xor
add
add
add
sub
xchg
add
adc
adc
add
xor
mov
sbb
ljmp
cmp
xchg
and
cltd
cs
inc
sti
adc
shr
mov
push
daa
push
push
add
push
and
sub
pop
push
mov
test
clc
adc
cmpsb
jmp
call
dec
cmpsl
outsl
push
mov
hlt
adc
cmc
sbb
les
loopne
ljmp
adcl
test
ds
mov
mov
imul
pop
inc
lods
ss
push
and
lea
aam
popf
mov
cwtl
sbb
sbb
xchg
or
add
cmp
add
push
mov
push
jno
leave
jnp
add
popa
jo
subl
jne
ja
pop
push
movsl
fdivrl
add
das
adc
sbb
test
out
lret
and
out
outsb
add
lods
inc
or
mov
dec
pop
mov
add
js
cmp
hlt
rol
pop
mov
sahf
add
push
sbb
insb
mov
out
cmp
clc
outsb
add
xor
cmpsl
or
repnz
or
and
add
sahf
push
xor
cmp
jae
stc
push
mov
outsl
lods
call
cmp
push
push
in
dec
sbb
or
inc
push
jl
add
and
adc
sbb
cmp
jne
push
or
xchg
jmp
pop
lds
inc
add
and
das
add
mov
and
pop
sbb
repz
dec
sub
jns
insl
lsl
cmp
sub
daa
adc
and
cmp
adc
lods
dec
dec
pushf
loop
xor
andb
lods
add
lcall
mov
mov
sbb
lock
rclb
add
cmp
mov
inc
inc
popl
xchg
cmp
cmp
xor
adc
mov
add
dec
out
mov
clc
mov
pavgb
jmp
add
add
shlb
pop
mov
mov
jo
pop
add
add
jne
incb
mov
add
dec
add
aas
fwait
sbb
rcl
jmp
pop
adc
add
idiv
jnp
add
mov
add
fldenv
sbb
mov
sbb
lret
fcmovb
stc
xchg
and
fildll
mov
scas
add
jl
inc
pop
xor
sub
and
scas
jne
sbb
mov
and
add
shlb
sbb
xor
add
or
push
in
cld
lods
xor
lret
pop
lcall
sbb
and
das
add
push
jle
pop
or
flds
lds
ja
mov
xchg
or
jo
push
add
push
aad
movd
adc
jge
lock
xlat
daa
add
hlt
mov
out
add
xchg
adc
inc
and
xor
mov
jnp
jo
call
pop
andl
loop
test
lret
lea
sbb
mov
lahf
js
xor
lcall
xchg
adc
pushaw
add
mov
push
fmul
into
nop
ds
js
loopne
add
or
add
add
xlat
push
jne
adc
inc
sbb
cmp
daa
clts
and
fidivrs
add
xlat
sarl
push
idiv
rolb
add
scas
sub
cmp
test
es
ss
add
rolb
sub
ret
jno
pop
xlat
sbb
shrb
test
and
adc
loope
xchg
lods
mov
test
aaa
popa
dec
push
clc
cmp
stos
push
or
ret
rolb
les
cmp
xchg
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
inc
inc
jp
fists
in
mov
xorl
pushf
xor
cmp
push
nop
fs
xchg
pop
movsb
arpl
jo
icebp
mull
in
add
addr16
lods
and
nop
sub
andb
mov
push
je
adc
and
in
fildl
scas
pop
dec
js
ss
cld
cwtl
adc
add
inc
add
or
enter
cmpsl
aad
pop
fdivrs
pop
xchg
push
aas
and
fwait
sarb
fiadds
add
pop
sbb
cmpb
add
pop
adc
add
movsb
les
add
fnstsw
or
sub
subb
pop
fs
jno
and
adc
ficomps
aas
jmp
shl
cmp
cmpsl
gs
test
mov
pop
dec
shlb
push
test
inc
hlt
ds
loop
add
mov
and
mov
sub
sbb
in
jae
jle
mov
inc
js
push
sub
es
cmpb
sbb
adc
cmp
inc
push
je
faddl
mov
jns
or
sub
sbb
push
pop
je
jmp
jne
and
bnd
add
push
adc
dec
inc
push
add
push
jae
pop
and
imul
xchg
pop
xchg
mov
or
cmp
fidivrl
jns
in
add
sbb
nop
dec
incb
loop
pop
xor
jne
clc
call
and
adc
insl
or
sbb
sub
cmp
lock
xchg
fisttpll
mov
cmp
ret
fistl
stc
pop
or
ds
inc
jl
adc
inc
cmp
mov
clc
sub
dec
testl
cmp
daa
cmp
pop
out
or
inc
sub
lret
or
add
dec
dec
and
dec
jbe
add
and
icebp
add
or
or
sub
ret
jmp
cmp
add
dec
pop
fisttpll
add
hlt
sti
imul
xchg
or
xlat
jecxz
add
lret
adc
xorb
int3
insl
cltd
add
cwtl
jge
add
cmp
inc
in
inc
ret
cwtl
aam
sub
cmpsb
sbb
inc
es
ret
mov
imul
mov
add
jmp
hlt
paddb
sahf
mov
add
repz
mov
push
add
fadds
mov
enter
xchg
cli
adc
nop
and
pop
jne
push
sbb
jge
add
sub
xor
add
nop
insb
popa
imul
push
cmpl
cmp
push
xor
hlt
inc
data16
fildl
lret
inc
call
jo
addr16
add
push
dec
in
je
add
push
and
jnp
roll
loope
cmp
test
add
adc
mov
pop
jbe
adc
sub
aaa
xlat
mov
jecxz
leave
rolb
push
mov
imul
loop
cmp
xchg
subb
or
xchg
add
push
out
ffreep
dec
sub
jne
cli
inc
cld
cmp
cmp
stos
add
pusha
adc
add
adc
clc
or
ss
or
addr16
xor
fs
jge
add
sub
fstps
in
add
cwtl
mov
aas
data16
add
or
add
call
mov
adc
jecxz
out
mov
pop
pushf
popf
push
add
mov
dec
add
lcall
shrl
call
push
cmp
test
jl
add
mov
cwtl
popf
add
insl
mov
add
jo
push
jb
and
pushf
sbb
push
mov
mov
idiv
mov
cmp
mov
sub
or
inc
sbb
adc
and
sub
push
pop
xor
ljmp
lea
test
cmpl
add
dec
mov
lret
sbb
xchg
pop
push
orl
push
lea
addb
mov
dec
xor
les
xchg
lods
sub
lds
pop
pop
leave
add
cld
lock
add
shrb
sub
lret
mov
mov
jge
enter
rorb
mov
push
add
stos
test
push
mov
pop
and
add
inc
pusha
lahf
pop
cltd
sub
mov
add
xor
and
mov
mov
fisubrl
add
imul
test
pushf
and
les
xor
push
in
inc
sarb
xor
lds
mov
add
rolb
mov
push
xchg
jns
pop
cmpsl
scas
dec
jo
pop
xchg
fisubrs
lock
add
dec
into
and
ds
sbb
jmp
pop
stc
enter
shr
mov
sub
movsb
cmp
and
sub
lds
or
loopne
xchg
enter
add
xlat
paddsb
hlt
shl
add
mov
or
ret
inc
push
rcl
add
clc
add
cmp
ja
add
idivb
sbb
lock
mov
call
sub
push
lahf
jle
hlt
adc
imul
jnp
inc
or
aas
stos
mov
imul
repnz
or
mov
xchg
adc
or
movsl
push
push
gs
test
add
inc
add
jl
mov
loop
enter
outsb
and
data16
jb
xchg
add
clc
bound
sbb
repnz
dec
xor
jge
jmp
inc
mov
mov
dec
cli
faddl
and
scas
adc
sar
enter
mov
cld
adc
mov
inc
sti
mov
add
mov
mov
jnp
hlt
les
add
dec
test
ss
nop
movsb
repnz
adc
and
inc
pushf
add
in
call
pop
xor
push
lock
insb
push
or
sub
mov
inc
mov
inc
pop
pop
pop
pop
sub
lcall
and
pop
add
fs
adc
bound
push
cmp
sub
push
pop
loop
test
jne
sub
daa
add
push
mov
push
call
add
or
add
aas
mov
lock
push
mov
dec
jns
mov
cld
add
jae
add
movzbl
add
push
add
xchg
scas
add
xchg
aam
mov
call
push
dec
insl
xor
shrb
or
add
inc
inc
cmp
cmp
subb
aas
ds
add
sub
aam
jmp
cmp
cs
add
js
call
push
xchg
lock
cmp
dec
das
mov
out
js
jno
add
or
repnz
dec
mov
add
xchg
inc
ss
adc
mov
jnp
or
adc
add
add
jg
mov
and
inc
in
add
xor
mov
pop
mov
outsl
mov
add
or
inc
add
xor
mov
aas
and
gs
sbb
jno
jg
imul
or
int3
and
pop
xchg
rolb
add
add
aaa
push
mov
sbb
and
add
adc
xchg
mov
test
aaa
nop
add
mov
repz
test
or
js
add
and
or
addb
or
xchg
enter
int3
xchg
inc
shlb
mov
add
cs
aam
filds
mov
xchg
xchg
clc
dec
push
stos
add
cmp
add
call
lock
or
xchg
or
xchg
les
inc
sub
movsb
mov
add
sub
xor
push
add
push
in
push
jmp
jle
ja
dec
mov
cmp
push
jbe
jo
in
cmp
add
pop
rorb
cltd
adc
cmp
push
sub
mov
ds
and
hlt
push
adc
mov
jns
dec
test
push
in
fimull
xchg
movsb
mov
dec
or
aaa
or
cmp
pushw
inc
imul
add
jl
clc
in
movsl
mov
pusha
cmp
lahf
inc
ret
xor
xchg
adc
inc
mov
js
loopne
add
pop
jle
mov
nop
xchg
mov
rclb
push
cs
cmp
test
neg
add
xchg
push
pop
and
add
fsts
mov
add
push
inc
mov
sub
sub
sbb
jns
sarb
add
cmp
mov
subb
xor
xor
inc
jo
insb
imul
outsl
fs
sub
push
cwtl
or
rolb
dec
jge
add
jmp
inc
sbb
adc
shlb
pusha
inc
sub
mov
push
dec
cmp
sub
mov
xchg
push
jge
xchg
stos
arpl
dec
loopne
xor
jge
in
arpl
inc
sub
pop
mov
data16
lret
popa
add
dec
and
frstor
cmp
ss
loopne
enter
out
dec
add
nop
incb
pop
gs
push
mov
dec
inc
cmpsl
pop
jns
ret
dec
adc
mov
add
mov
sub
je
or
ss
and
jb
addr16
cmp
xchg
insl
sub
gs
adc
and
cmp
add
gs
push
add
addr16
jnp
adc
add
clc
test
dec
test
mov
cmp
sub
and
add
mov
adc
enter
and
adc
and
and
inc
movsl
inc
cmpb
dec
pop
testb
inc
lret
subb
push
push
fs
and
ja
jae
jo
es
sbb
jl
sub
stc
adc
pop
imul
jg
sub
jnp
sbb
push
xchg
adc
mov
loope
cmc
lock
dec
sub
nop
jle
les
and
xchg
ljmp
lea
add
enter
fcomps
stos
cwtl
icebp
jne
add
daa
push
xchg
push
es
add
enter
ret
std
hlt
sub
add
push
sbb
sbb
les
lahf
or
call
mov
iret
cli
add
je
or
inc
cmpsb
cmpl
dec
jne
add
stc
mov
jg
jmp
andl
adc
das
dec
rolb
test
pop
adc
add
push
inc
cmpb
nopl
pop
xor
std
filds
dec
ss
mov
cmp
sub
add
mov
push
adc
xchg
adc
outsb
push
pop
mov
sar
add
add
push
pop
das
mov
outsl
stos
adc
add
outsl
cmpsb
or
leave
pop
add
faddl
flds
xor
mov
push
mov
lret
and
mov
inc
mov
inc
mov
shlb
dec
out
test
enter
into
movsb
xor
adc
mov
inc
mov
adc
add
aas
cmp
cmpb
pop
or
test
or
lock
es
scas
inc
adc
mov
call
sbb
add
jmp
stc
out
push
adc
cli
shrb
cmpsl
push
xchg
add
mov
inc
cwtl
xchg
out
add
std
mov
add
mov
inc
xor
ret
mov
mov
stos
insb
lds
mov
xor
shr
inc
and
inc
add
popa
outsb
daa
je
insb
outsl
frstor
or
movsl
sbbb
ret
add
das
push
or
sahf
test
add
adc
mov
push
lea
incl
adc
orl
cli
or
jg
js
add
loope
push
call
xor
in
inc
sbb
adc
adc
idivb
dec
xchg
add
add
cwtl
lods
add
and
push
mov
inc
aaa
inc
xchg
daa
and
inc
adc
dec
dec
mov
aad
lret
pop
out
cld
add
add
and
push
jae
xor
inc
nop
jl
xchg
sbb
subl
in
jbe
adc
xchg
shlb
inc
and
inc
pop
enter
das
dec
cld
xchg
add
jne
jmp
add
or
cmp
adc
push
push
inc
adc
pop
rorb
jb
mov
lds
pop
cli
imul
jno
jmp
pop
push
fwait
or
into
cli
pop
cld
push
add
and
and
jecxz
pmulhuw
cmp
imul
out
sbb
pop
add
sbb
dec
cld
inc
enter
das
pop
mov
test
jmp
mov
pop
inc
das
incl
xor
aas
add
inc
xchg
xchg
aad
dec
mov
or
ja
cltd
add
loop
incl
inc
mov
inc
push
add
cld
cli
enter
mov
inc
lahf
hlt
jnp
cli
adc
dec
mov
inc
subl
popa
dec
lea
aas
xchg
popl
out
ret
mov
notb
xchg
or
inc
insb
add
movb
aad
add
jae
loopne
les
push
ret
xchg
adc
add
pushf
xor
cmp
or
lea
icebp
add
and
xor
push
fbstp
in
fldl
sub
adc
mov
pop
and
lret
lods
popf
stc
stos
str
cld
cmpsl
shl
loope
push
jp
cmc
mov
xchg
pop
mov
jmp
pop
fsubrl
pusha
ja
stos
add
push
push
aam
ds
inc
mov
rclb
aas
sti
push
jmp
and
mov
add
lds
movb
lods
and
push
pop
adc
xlat
out
and
stos
lret
sti
push
int3
and
out
and
daa
aas
xor
iret
orb
jae
inc
test
sub
mov
femms
outsl
pop
aam
mov
add
ljmp
add
jne
cli
xchg
cmpl
mov
in
test
add
cmpsb
into
sub
inc
movsl
punpckhwd
mov
fsub
push
test
and
inc
repnz
cwtl
add
lock
ds
push
cmc
jnp
and
rcr
lahf
int3
pop
stos
add
jl
cmp
enter
cmpsl
mov
add
pop
or
add
push
gs
loop
sub
fisttpl
mov
xchg
in
add
add
out
mov
mov
cmc
sbb
bswap
dec
ljmp
in
push
mov
push
stos
icebp
loopne
and
es
inc
xor
sbb
add
add
pop
mov
and
pop
and
cltd
add
mov
daa
pusha
push
add
fisttpl
mov
jae
adc
out
sub
mov
ss
dec
add
in
test
cmp
sbb
movsl
jge
xchg
inc
push
loope
add
ds
popf
call
into
cltd
xor
pop
add
scas
inc
inc
test
out
mov
movsl
inc
ret
insl
push
sbb
jmp
jne
mov
push
sub
dec
mov
repz
dec
or
testb
out
xor
and
imul
mov
xor
sbb
adc
cmp
pop
jmp
lahf
cmpsl
pop
mov
sahf
inc
icebp
pop
mov
nop
xchg
pop
push
jb
cmpsb
push
and
pop
inc
xorl
sub
sub
in
ret
add
repnz
push
sbbb
dec
xchg
add
cmp
mov
mov
data16
in
pop
adc
aad
cli
push
test
cmp
add
mov
mov
adc
inc
add
mov
loopne
mov
into
adc
mov
lods
sub
adc
add
bound
filds
pop
adc
mov
in
in
loopne
pushf
push
xor
leave
push
adc
sub
int
insl
test
lahf
push
add
and
pop
xchg
movsb
jbe
cs
or
mov
push
add
add
jb
movsb
pop
jbe
test
push
lret
pop
test
inc
ret
add
das
inc
les
lock
pop
inc
mov
pop
loopne
ret
add
mov
shlb
pop
shl
mov
sub
add
lea
pop
mov
xchg
enter
xor
mov
jnp
addb
add
add
fsubr
mov
ja
mov
inc
pop
and
rcrb
into
stos
dec
fstl
test
popa
push
push
add
mov
addb
mov
imul
movsl
add
sub
or
je
push
jbe
mov
add
bound
inc
and
mov
xchg
add
test
loopne
adc
add
rolb
rcrb
mov
add
or
stos
jbe
push
orl
and
test
sbb
or
mov
ficoml
sbb
clc
ljmp
or
add
dec
test
hlt
ja
sti
add
dec
ret
adc
sbb
sub
mov
push
rcrb
movsb
push
add
jnp
mov
cmpsl
cmpl
dec
or
cld
test
push
push
sti
insb
adc
push
add
ja
jne
cmp
rclb
rol
jbe
add
add
sub
pop
ret
cmc
xchg
cmc
icebp
iret
les
mov
mov
out
or
loopne
cwtl
xor
in
pop
or
ret
loopne
add
sbb
add
mov
aad
add
clc
lock
pop
lock
cmp
push
fcoml
jge
pop
add
add
dec
add
ret
adc
call
add
mov
xor
jmp
sub
push
dec
in
add
rcrl
cmp
adc
clc
add
sub
pusha
add
out
push
push
mov
adc
cmpsb
ljmp
jne
add
xor
xor
pop
xor
jne
fisttps
add
shll
jns
push
push
add
cmp
nop
push
xchg
repnz
add
dec
adc
add
adc
mov
repnz
pop
cmp
icebp
outsb
ret
or
jb
jo
fidivrs
lret
xor
or
fistl
jecxz
add
int3
repnz
sbb
fdivs
adc
jno
fldt
dec
xchg
add
testl
pop
cwtl
dec
pop
push
mov
nop
add
sbb
movb
lds
mov
jmp
pop
int
lods
xchg
js
mov
push
sub
add
jo
hlt
add
bound
add
inc
xchg
mov
dec
in
add
sbb
cmp
ja
dec
and
lret
add
roll
sub
xchg
je
dec
fwait
es
sbb
ret
jb
push
pop
dec
jp
add
push
and
clc
fs
out
add
or
push
add
lret
faddp
lods
dec
clc
add
das
mov
adc
ret
loopne
add
add
cwtl
data16
inc
add
or
sbb
dec
and
dec
inc
les
cmpsl
add
mov
addl
push
rcl
mov
imul
add
jmp
xchg
sub
fiaddl
cltd
sbb
and
pop
sub
pop
lock
mov
pop
jp
push
sbb
je
xor
add
inc
in
mov
jbe
nop
movsl
add
mov
lods
pop
test
and
mov
jle
add
mov
icebp
je
add
lcall
dec
mov
scas
and
pop
aaa
xchg
call
mov
mov
cmp
add
inc
jo
shll
out
aas
add
data16
jl,pt
subb
addr16
test
daa
dec
out
pop
mov
pop
and
dec
pop
shrb
or
sarl
cmpsl
stc
push
cli
inc
jle
add
jae
inc
lods
insl
mov
popa
pushf
adc
dec
fs
test
decl
sarb
add
ljmp
pop
sbb
add
enter
loopne
pusha
pop
subb
clc
stos
add
push
adc
push
repnz
adc
push
bswap
adc
mov
mov
jb
je
or
addb
or
add
xchg
pop
adcl
mov
out
testl
in
inc
cmp
add
xlat
dec
cmp
icebp
jbe
add
add
dec
arpl
xchg
xor
mov
test
pop
ss
sub
jge
push
test
and
add
or
mov
gs
mov
xor
into
add
rolb
jg
cld
add
insb
add
mov
mov
int3
mov
or
out
movsb
push
add
je
or
cmp
pop
mov
xchg
adc
adc
adc
test
jbe
rcr
dec
ja
out
call
rcrb
sbb
mov
mov
push
add
and
xchg
add
xchg
xchg
jno
dec
push
sbb
jmp
int3
sbb
cmp
adc
cltd
insb
and
sbb
add
sbb
sub
neg
sbb
add
cmp
add
icebp
xor
xor
das
int3
aad
adc
lock
stos
lea
add
or
ljmp
xchg
jl
add
daa
inc
push
ds
subb
add
call
rclb
xor
lea
sub
push
dec
push
fnstsw
add
movsb
jle
push
jmp
pop
sbb
out
shlb
mov
or
inc
pop
ja
cmp
mov
into
add
lret
cmpsb
add
test
call
pop
enter
add
or
push
xchg
mov
rolb
or
add
xor
cmp
adc
clc
cmp
sbb
call
cli
and
data16
jne
push
xlat
dec
lret
inc
pusha
and
cmp
add
jo
dec
inc
pop
push
pop
push
mov
mov
push
add
rorb
sub
lcall
adc
mov
mov
js
fsubrl
xchg
jmp
adc
lret
push
pop
cwtl
clc
adc
add
xchg
daa
or
add
fwait
pusha
mov
fcompl
push
inc
add
pop
int
pop
push
xorb
fadds
not
sub
add
xlat
test
stos
dec
jo
jle
dec
dec
data16
xchg
in
inc
mov
pop
mov
movsl
cmpsl
loopne
add
stos
add
sti
btc
dec
dec
fdivl
mov
pop
int3
sbb
and
jmp
and
add
outsl
xor
push
call
pushl
pusha
rcrb
rcr
lea
mov
mov
add
mov
incl
imul
shlb
sbb
out
repz
popf
mov
lods
pop
orl
jo
add
xor
inc
pop
das
cmpb
bnd
jo
or
pop
pop
dec
push
cmp
or
add
jge
jp
push
mov
sbb
mov
jg
or
sahf
lock
xchg
add
push
int
xor
and
cli
cmp
addb
in
and
sahf
sbb
stos
sbb
or
dec
je
or
jae
cmp
cmp
sbb
pop
push
adc
dec
xchg
adc
cmpsb
add
subl
sar
bound
jo
lock
hlt
mov
add
mov
test
outsl
add
call
push
addb
pop
repz
jmp
mov
and
fisttpl
and
add
push
cmp
pop
and
pop
sbb
testl
rcrb
sub
mov
rorb
mov
mov
imul
jne
loope
add
pop
mov
pop
mov
xchg
add
jno
mov
push
pop
add
aad
movsb
cli
test
cmp
std
sbb
mov
dec
or
addr16
subb
and
dec
inc
adc
imul
sbb
or
jl
push
inc
sbb
leave
xchg
inc
cwtl
jns
pop
cltd
ret
pop
sbbb
imul
inc
inc
outsl
dec
jne
loopne
add
mov
mov
sbbb
sbb
push
in
add
mov
jmp
push
add
mov
enter
add
sub
lret
or
jge
dec
ret
add
add
rolb
mov
int3
add
lock
fdivl
aam
push
jne
out
sbb
fmuls
xchg
mov
in
rcr
jne
movb
stc
leave
les
mov
jmp
mov
adc
jo
cmp
test
mov
into
addl
mov
call
pop
int3
jmp
addl
or
pop
mov
adc
data16
or
fdivrs
add
cli
je
clc
pop
popa
aas
push
add
ficoml
mov
ret
pop
outsb
mov
mov
mov
add
cwtl
inc
jmp
cmp
je
pop
into
or
test
rorb
inc
add
mov
movsl
mov
cld
push
add
xor
inc
add
test
mov
push
add
add
xor
dec
inc
adc
jbe
addr16
add
mov
jge
nop
jle
add
mov
cmc
sbb
bound
add
pop
bnd
push
call
ljmp
add
lahf
lds
jg
adc
loop
notb
add
xchg
pop
push
pop
cmp
add
mov
cld
and
lret
adc
call
push
gs
stc
dec
popl
cmp
and
add
inc
bound
inc
rsqrtps
mov
popf
shlb
movsb
adc
jnp
add
movl
nop
add
add
push
jmp
andb
dec
or
inc
fwait
dec
lcall
nop
mov
or
adc
mov
fidivl
push
push
loope
cmp
in
cmp
xor
or
jb
out
sub
loopne
cmpb
dec
add
push
mov
and
push
add
ljmp
add
jecxz
mov
jo
cmp
movsl
pop
and
jno
test
xor
xchg
mov
in
movsl
pop
push
mov
bound
pop
rol
iret
pop
les
jno
sub
xchg
adc
xchg
cmp
loop
aam
negl
rorb
xorps
and
or
in
jmp
inc
jge
movsl
and
add
test
mov
adc
pop
cli
int3
adc
movsl
stos
and
lods
add
push
sbb
add
fiadds
jo
sar
push
aam
add
mov
and
lods
cld
jae
lret
loopne
xor
and
sarl
mov
leave
stos
xor
je
js
sbb
lock
pop
or
add
icebp
add
mov
push
std
push
xchg
ret
mov
pop
enter
push
sub
sbb
daa
push
sub
mov
and
xchg
cs
pop
lock
cmp
inc
sub
xorl
inc
push
call
imul
hlt
orb
add
stos
sub
cli
ffreep
mov
and
push
ja
adc
add
pop
pop
push
mov
add
push
je
push
in
cmp
jne
mov
mov
ds
aas
rcrl
jno
dec
inc
add
mov
push
mov
add
sbb
add
push
mov
add
mov
lods
and
push
mov
movsb
sahf
in
add
movsl
add
add
inc
sbb
add
inc
sbb
inc
cmp
add
je
add
add
aas
rorb
es
dec
push
dec
in
popf
adcb
in
sti
xrelease
adc
sbb
sub
mov
jb
add
stos
or
push
cld
xchg
add
push
lcall
add
ljmp
jle
out
add
jmp
ds
cmp
add
enter
dec
lock
add
sub
cmc
push
cs
add
lock
mov
ret
sbb
imul
jl
scas
push
int3
in
int
add
mov
hlt
mov
pop
fnsave
mov
pop
push
add
and
ljmp
cmp
sub
lret
fbld
mov
stos
pop
or
sub
dec
addr16
jnp
jne
add
shlb
cs
sub
je
in
std
in
scas
jbe
add
in
or
arpl
dec
neg
pop
cld
lds
in
dec
aas
push
cmc
xchg
dec
cli
add
xchg
mov
jge
dec
adc
mov
dec
mov
roll
cwtl
inc
sub
pop
lods
test
leave
push
sub
wrmsr
cmc
add
inc
mov
or
sarb
cli
add
addb
sub
lcall
mov
pop
inc
dec
hlt
add
bound
inc
iret
push
int3
test
out
sub
xchg
mov
fcompl
add
je
jecxz
pushf
ds
add
sub
cmc
or
adc
push
mov
add
cmp
mov
xor
xchg
rolb
ja
sbb
lock
jg
add
pop
lea
mov
mov
or
mov
mov
sbb
and
mov
mov
pop
hlt
sbb
xchg
add
enter
lods
lea
add
es
add
sbb
mov
mov
pushf
imul
add
adc
inc
mov
add
cs
sahf
test
pop
push
add
adc
out
push
push
fsubrl
icebp
in
add
dec
mov
jp
push
lea
mov
and
add
mov
inc
sub
cmp
popf
push
add
ret
int3
mov
pavgb
mov
inc
mov
sbb
mov
adc
mov
add
out
sti
push
pop
sar
or
popf
nop
adcl
ljmp
clc
rorb
mov
add
flds
add
ret
or
sbb
sahf
fst
mov
add
fsubrs
cmc
enter
push
lahf
mov
clc
inc
push
add
mov
add
xlat
js
add
hlt
or
add
add
inc
test
xor
mov
outsl
push
inc
cmp
inc
cld
ficomps
mov
bound
add
xor
mov
or
or
jg
inc
rdtsc
and
push
sub
testb
psubusb
rorl
hlt
cmp
mov
ds
ja
ret
subl
push
mov
and
mov
cmp
pop
dec
pop
add
add
stc
mov
popa
add
inc
popl
sub
dec
sub
insb
jo
cli
testl
add
dec
addb
sbb
fwait
lock
add
dec
add
cmpsl
testl
sub
call
mov
stos
and
xchg
mov
lock
sub
notl
rolb
sub
add
enter
js
xchg
add
push
fs
lcall
movsb
mov
cmpsb
pop
mov
sub
jmp
lea
mov
pop
add
jae
cmpb
sub
push
jecxz
xadd
and
sbb
loopne
xchg
jne
or
add
sub
cmpsb
add
lcall
add
daa
sbb
hlt
jae
out
lahf
pop
shrb
add
call
loop
add
sbb
int3
add
bound
jae
icebp
jo
inc
sbbb
cmp
and
test
mov
inc
and
add
pop
dec
xorb
cmp
js
jbe
sbb
jne
add
cmpw
or
and
addl
or
add
and
push
sub
push
ds
imul
pop
add
pop
and
xchg
mov
rorb
orb
icebp
nop
cmp
shrb
or
mov
mov
inc
add
arpl
into
call
es
stos
inc
je
pop
cmp
push
jg
sbb
mov
push
icebp
fdivrl
add
pop
jae
lea
je
roll
jmp
jb
in
add
adc
dec
or
mov
les
cmp
js
add
and
movsb
out
push
js
or
mov
sti
leave
jbe
jp
lret
lock
inc
mov
add
inc
xor
add
sbb
add
rolb
and
xchg
test
push
add
lret
shll
xor
add
iret
push
push
or
mov
add
out
mov
mov
ja
pushf
push
inc
mov
add
rorl
jle
xor
cs
rolb
jne
push
mov
add
add
xchg
int3
mov
es
push
scas
les
test
mov
cld
enter
add
dec
inc
js
sub
rclb
in
dec
add
shl
aas
orl
mov
fs
out
xor
es
jne
xor
mov
fcomp
add
mov
add
jmp
das
mov
add
jne
mov
pop
and
add
addb
xchg
fsts
add
out
dec
xorl
adc
stc
fadds
dec
pop
push
push
sarb
test
or
cld
lds
mov
fxch
sub
hlt
jp
jae
nop
mov
mov
stc
fidivs
addb
adc
push
mov
sbb
push
into
add
lcall
add
in
cmc
xor
or
add
xor
sub
or
sbbl
sub
mov
pop
test
loopne
scas
shl
push
add
inc
or
aam
leave
add
adc
test
sub
insl
xchg
clc
push
inc
adc
add
movb
lea
ds
lods
mov
xchg
push
push
frndint
sub
fisubrl
mov
mov
xchg
ljmp
mov
scas
fisubrl
das
loopne
add
cs
call
arpl
loopne
faddl
or
cli
push
jle
cmc
xchg
sti
lahf
add
es
call
mov
sti
ljmp
vcvtsi2sdl
add
xchg
xchg
add
cmc
xchg
inc
sbb
pop
or
das
mov
and
or
dec
mov
add
xchg
push
mov
add
sub
pop
lret
repz
nop
inc
outsl
and
das
mov
inc
out
ja
sub
in
add
or
add
inc
in
sbb
jo
jl
pop
scas
and
or
test
push
and
pop
pop
add
int
mov
imul
adc
fdivp
xchg
adc
subb
add
lods
and
fcmove
sbb
xchg
nop
pop
movsl
into
add
ds
jne
sbb
push
mov
dec
rclb
pop
mov
pop
lea
mov
js
stos
adc
jge
cmp
stc
lret
mov
push
rcrb
ss
sub
add
cmp
mov
pop
popf
loop
push
addr16
rcl
stc
in
stos
add
cmp
lds
lret
lock
adc
and
dec
add
lahf
fnstcw
aas
out
into
inc
adc
jmp
and
dec
les
add
pop
adcl
sub
add
adc
jmp
push
loopne
cmpsl
add
add
mov
sub
or
push
sbb
pop
mov
and
xlat
addb
cmp
jne
adc
add
je,pn
movsl
fadds
cmp
add
mov
push
xor
ret
add
inc
nop
push
push
add
sbb
adc
or
lds
sub
arpl
push
fldcw
push
sbb
rcrb
xor
aad
in
mul
nop
add
mov
shll
inc
mov
inc
sbb
mov
sbb
in
repnz
mov
jbe
cmp
pop
lcall
hlt
adc
mov
rolb
gs
popf
fisubl
adc
ljmp
lcall
cmp
fsub
push
mov
movsl
add
test
add
sub
fbld
imul
cmpsb
mov
jno
lret
dec
lea
pop
xchg
add
mov
push
aam
mov
call
mov
clc
loopne
pop
inc
mov
mov
sub
repnz
in
testb
leave
test
add
clc
push
loop
test
add
into
or
add
push
ror
cld
pop
push
pop
adc
mov
dec
add
adc
out
mov
add
jne
push
xchg
dec
add
pop
mov
xlat
xchg
rcll
and
dec
sbb
xor
je
gs
leave
clc
out
xor
dec
loopne
sbb
push
push
mov
inc
lahf
loopne
fidivrl
dec
push
mov
cmpsl
push
add
test
jmp
xchg
sub
int3
test
add
xor
sbb
data16
xchg
sbb
rorb
pop
sbb
inc
mov
cwtl
aaa
inc
jns
dec
mov
mov
popf
lock
lea
shrl
fcmovnbe
mov
cmp
push
jae
pop
dec
add
jl
mov
add
xor
or
add
inc
gs
mov
outsl
dec
jae
and
ja
add
inc
js,pt
fldt
jae
xchg
mov
adc
or
pop
add
clc
cmp
stos
xor
aas
mov
dec
cmpsl
jns
push
cs
pop
jo
pop
mov
ror
jge
loop
js
mov
cmp
test
cmp
adc
jle
add
pop
inc
shl
aas
dec
add
je
and
jge
adc
mov
cmp
divb
cmp
lret
add
adcw
addr16
add
call
sbb
pop
xchg
cmp
les
cmpsb
pop
imul
out
push
add
cmpb
dec
dec
add
cmp
add
push
push
clc
ffreep
jae
mov
xchg
loop
add
and
push
inc
push
dec
add
push
xchg
sub
mov
add
xchg
cmpsl
test
jl
dec
push
test
jmp
lea
call
dec
add
repz
sbb
fsubs
sbb
cmp
add
ret
xchg
inc
push
fidivrl
addb
fisubrs
pop
in
jo
scas
pop
add
movsb
mov
sub
push
dec
in
dec
sub
sbbb
add
push
add
sbb
pop
push
lock
inc
clc
adc
loope
add
sbb
mov
xor
add
jp
das
add
pop
jl
pop
popa
and
cmp
daa
in
inc
stos
add
pop
add
sub
lock
push
scas
add
outsl
hlt
imul
fcoms
fucomp
jmp
daa
sub
jp
sbb
jne
cmp
pusha
ds
jo
xchg
add
and
push
hlt
add
dec
sub
loop
arpl
mov
call
add
pop
aas
sbb
add
testb
adc
pop
pop
dec
popa
out
xchg
add
fistpl
cmpsb
lock
xchg
add
xor
lods
mov
jb
jg
inc
les
sub
scas
push
pushf
test
xor
loopne
outsl
push
jp
add
add
lods
std
inc
call
mov
add
or
and
and
repnz
add
push
arpl
and
bound
xor
jne
rcrl
xlat
add
out
popa
cmp
icebp
cld
arpl
pop
cmp
add
leave
and
mov
dec
dec
sbb
push
out
rcrb
fs
lea
popf
addb
adc
xchg
jg
fidivrl
js
add
lock
popf
movsb
add
mov
cli
add
add
sub
adc
nop
mov
filds
mov
sub
jbe
push
mov
lods
insl
cmc
jg
mov
pop
lcallw
cli
xchg
rolb
xchg
cld
stos
push
xchg
mov
sbb
cmp
jmp
ds
cmpsb
adc
pop
mov
add
orb
add
fs
mov
or
sub
xchg
push
xor
mov
test
aaa
adc
inc
cmp
sbb
mov
and
sbb
lea
sbb
jle
movsl
cwtl
jno
add
enter
fldenv
loopne
test
cmp
lcall
adc
inc
rep
mov
cmp
mov
aad
jle
fdivrs
scas
inc
aas
pop
movl
cmp
out
sbb
push
lods
or
xlat
rol
sbb
or
leave
stos
in
sbb
and
xor
sbbl
test
je
pop
add
sub
pop
adc
leave
xchg
push
add
adc
inc
add
imul
xchg
xlat
arpl
in
add
in
or
jmp
add
push
adc
dec
pop
push
jmp
jge
pop
lods
inc
clc
add
mov
pop
and
mov
rol
add
iret
xorl
or
push
or
mov
pop
insb
mov
add
inc
xor
adc
push
cwtl
add
cmp
jne
movsb
bound
add
xor
add
iret
jmp
cmp
pop
in
and
push
sbb
xchg
add
xchg
insb
int3
xor
sub
dec
pop
aas
mov
ret
lret
loope
or
and
les
xchg
call
or
aas
sub
and
mov
loope
xchg
loopne
add
scas
add
pop
mov
sti
and
pop
dec
rolb
inc
xchg
stc
jmp
ss
mov
mov
test
add
call
mov
xchg
xchg
stos
popf
rclb
sbb
in
outsl
cmpb
sar
mov
insb
mov
push
inc
and
insl
in
and
inc
int3
test
jb
out
add
adc
mov
mov
dec
in
mov
aaa
out
sbb
xchg
and
mov
mov
cltd
test
es
add
jno
aad
mov
add
out
call
enter
out
and
add
xlat
in
dec
pop
fadds
mov
rcr
call
das
loopne
std
jne
add
mov
movb
cmpsb
out
inc
loopne
imul
std
xchg
mov
hlt
loop
add
pushf
loopne
sti
in
push
dec
lods
pop
adc
rolb
mov
pop
addb
dec
aaa
lods
push
out
aam
or
enter
and
test
jmp
sbb
adc
lods
add
fldcw
fiadds
clc
insb
mov
add
idiv
test
cmp
add
fisubs
les
push
std
ror
mov
add
scas
cwtl
pop
mov
sub
add
dec
push
add
add
or
pop
or
jle
mov
xchg
leave
addr16
push
out
test
ret
daa
dec
mov
mov
cmp
inc
pop
mov
pop
lea
push
xor
sub
cld
jo
add
mov
xchg
pusha
pop
push
loopne
add
rolb
cs
add
adc
scas
inc
lret
pop
lahf
push
pop
bound
popf
and
cmpsb
or
sbb
mov
xchg
jae
in
andb
test
aam
dec
add
sub
int3
pusha
and
cmpsb
daa
cli
add
movb
mov
insl
and
inc
push
add
iret
sub
add
inc
add
je
add
daa
mov
in
out
add
or
add
sbb
sbb
adc
imul
jmp
and
sbb
stos
or
sbb
rol
sbb
add
inc
sbb
push
adcb
add
xor
adc
sub
push
add
adc
fsubrl
or
cld
clc
inc
cmpb
call
aad
dec
jne
fnstcw
sub
repnz
add
call
xor
fcoml
leave
test
xor
into
push
jge
sti
mov
dec
cmp
add
xlat
mov
inc
jle
xchg
add
out
inc
mov
rol
xchg
xchg
adc
sahf
add
test
orl
scas
lock
fists
roll
add
leave
clc
push
adc
roll
xor
mull
mov
add
aaa
push
lock
std
cld
aad
int
aam
test
xlat
clc
mov
fdivrp
icebp
rol
jnp
dec
jb
xor
andl
clc
mov
incb
push
dec
insb
add
loope
inc
add
sti
sub
imul
inc
mov
add
adc
les
xor
sbb
inc
push
cmp
mov
das
sbb
push
divb
lret
or
jmp
hlt
fiaddl
ret
and
outsb
add
lods
dec
or
out
pushf
shlb
fsubr
out
popa
mov
and
add
pop
push
push
dec
imul
and
pusha
add
out
and
loop
cli
sbb
lcall
sbbb
push
jae
movsb
jnp
add
cmp
or
pushf
cwtl
sbb
push
lea
call
cmp
mov
pusha
movzbl
add
or
cmp
add
fnstenv
adc
or
dec
into
repz
adc
mov
add
jae
jo
ja
push
cmc
out
mov
daa
adc
mov
inc
inc
jecxz
cmp
mov
xchg
loop
mov
out
xor
xor
je
cmpl
insb
in
pop
enter
push
scas
add
orl
mov
enter
stc
add
jbe
hlt
push
xchg
add
je
jg
leave
fcoms
xchg
and
sbb
push
inc
scas
pop
inc
mov
dec
add
mov
adc
add
add
mov
fbld
jl
pop
nop
out
or
lods
les
leave
cs
adc
pushf
lods
sub
add
testl
lods
sbb
and
mov
and
ljmp
in
in
fmull
sahf
add
lods
clc
icebp
movsb
pop
push
and
adc
pushf
mov
mov
inc
mov
push
pop
xchg
push
or
push
push
jne,pn
mov
rcrb
enter
and
cltd
cld
fwait
add
add
and
sahf
add
or
test
cmp
test
jmp
je
inc
mov
or
inc
xchg
jo
sbb
int3
add
lock
add
inc
cwtl
sbb
or
mov
xor
pop
adc
fs
mov
nop
sbb
xor
call
xor
xor
xor
cmp
loope
ss
push
pusha
xor
mov
inc
pop
inc
pop
or
js
dec
mov
rcrb
add
add
add
ret
pop
fcomps
sbb
cwtl
in
push
test
test
and
inc
sub
jns
xchg
mov
add
adc
jg
ss
cmp
dec
adcl
mov
lds
push
cwtl
jnp
cmpsb
ret
aam
inc
xchg
dec
mov
jg
mov
adc
clc
std
add
aam
pusha
movsb
mov
arpl
test
push
cmpb
shl
mov
mov
mov
rol
or
xchg
push
adc
add
fs
dec
int3
add
and
add
popf
js
mov
push
inc
push
xor
or
add
jo
and
push
lahf
add
int3
adc
add
mov
push
lea
add
add
test
sbb
mov
cwtl
xchg
and
xor
dec
add
outsb
je
imul
outsl
pop
out
addl
loopne
xor
xchg
mov
xor
cmp
ljmp
xor
or
cli
setg
push
pushf
aam
jo
test
cld
mov
sbb
sbb
or
sbb
nop/reserved
std
shrb
add
adc
or
dec
push
pop
es
xchg
pusha
jecxz
addb
mov
lret
pop
mov
mov
shr
fsubr
loopne
call
jo
pop
or
adc
sbb
and
sub
xor
and
std
cld
jnp
push
jnp
jnp
add
jo
mov
adc
mov
add
add
inc
and
aam
call
xchg
or
and
arpl
xor
mov
and
adc
sbb
loop
xor
add
test
or
aad
pop
std
pop
pop
add
pop
pop
push
inc
in
add
inc
inc
dec
dec
rclb
bound
arpl
cmc
imul
add
jp
mov
and
xor
or
aas
mov
add
int3
lret
and
push
pop
xor
push
add
cltd
adc
pusha
loop
pop
and
dec
add
imul
psubsw
repnz
es
and
and
fsubl
clc
inc
mov
inc
cmp
pop
jo
dec
mov
or
scas
cld
xchg
pop
pop
inc
sub
mov
js
and
inc
lcall
jl
loopne
add
aas
das
cmp
imul
scas
add
adc
xchg
sbb
xchg
or
ss
mov
add
dec
or
cmc
push
add
add
daa
and
movsb
add
xchg
pushl
dec
or
rorb
pop
add
add
or
sbb
and
and
or
jmp
out
in
ljmp
sbb
xor
pusha
repnz
jo
rcl
add
cld
mov
adcl
fcomps
bswap
adc
or
sbb
jo
in
xor
les
stc
test
cld
jb
add
push
jg
test
xor
pushf
dec
test
loop
inc
fadds
in
mov
adc
js
add
adc
inc
dec
push
xchg
add
pusha
hlt
sub
push
cwtl
stc
ss
addb
mov
or
pop
or
or
push
xor
adc
pop
and
lods
mov
or
adc
dec
out
jnp
pop
clc
or
ss
xor
inc
fs
sub
add
les
fsubrl
jo
sbb
or
inc
mov
add
js
or
adc
aam
ss
mov
push
fcoml
xchg
xor
cmpsb
test
cmp
add
movsb
pop
jl
sbbl
mov
push
les
adc
xchg
xor
mov
or
cs
pop
inc
in
dec
add
popa
mov
mov
sub
aam
rolb
mov
cmp
shlb
xchg
push
int3
leave
repnz
add
enter
rorb
push
cmp
add
add
nop
rcll
xorb
xor
sub
jl
inc
xchg
test
cmp
fsubrs
ret
mov
movsb
mov
add
imul
or
pop
pop
test
rcrb
jl
xor
js
push
push
and
cmp
sbb
mov
mov
mov
loopne
lods
pop
sbb
pop
call
mov
lock
incl
test
dec
jo
xor
add
nop
mov
repz
lret
push
add
lock
cmp
inc
add
pushf
fcoms
cld
cmp
daa
adcb
xchg
sbb
nop
iret
add
dec
fadds
or
rolb
dec
in
xor
into
sub
pop
cmp
inc
push
xlat
adc
push
pushf
int3
ret
jno
hlt
cltd
mov
add
xor
adc
cwtl
xchg
add
leave
in
push
orb
jo
rcrb
rcr
pushf
jp
add
pop
sub
gs
push
shlb
testb
xor
pop
je
inc
add
cmc
add
fs
push
lahf
add
lods
adc
enter
repnz
cmovo
in
xchg
add
or
loope
call
and
ljmp
or
clc
jle
add
cwtl
and
in
int
cli
mov
jbe
repz
add
adc
add
push
in
sbb
dec
mov
and
xchg
mov
lcall
pop
faddl
cli
adc
cmp
cmp
push
std
mov
lret
pop
inc
sar
or
adc
sbb
es
sbb
or
outsb
adc
mov
lods
cmpsb
add
cmp
insb
clc
mov
add
push
sarb
adc
add
and
dec
aam
sub
or
sbb
addl
adc
xchg
xchg
mov
dec
shrb
jp
and
add
dec
push
xor
outsb
orb
sarb
mov
decb
inc
ljmp
and
dec
fs
jo
mov
mov
les
add
push
add
adc
imul
dec
scas
pop
or
in
xchg
dec
movsb
xchg
mov
scas
fdivp
mov
cmp
xor
xchg
push
mov
andl
cmpsb
enter
shl
addr16
and
in
fs
aaa
mov
ds
dec
push
mov
addl
inc
inc
cli
je
popf
sarb
cwtl
push
push
add
push
inc
mov
xor
jp
add
xchg
arpl
push
sti
add
lret
pop
jbe
pop
add
add
insl
daa
mov
xor
jmp
nop
add
xchg
outsl
packsswb
sbb
movsl
sbb
test
in
jo
push
add
push
or
mov
xor
or
jo,pn
sub
je
fidivrl
outsb
inc
push
add
arpl
mov
sbb
sbb
jb
or
inc
js
cmp
and
andb
in
out
movsl
mov
loop
outsl
dec
inc
xor
push
jb
fsubl
push
add
decb
popa
outsb
mov
movb
imul
push
aam
cmp
adcb
adc
hlt
insl
jecxz
xchg
lcall
pop
mov
cmp
mov
push
adc
add
jle
mov
aad
mov
andb
sbb
sub
cmpb
sbb
test
es
outsl
add
dec
data16
jecxz
addb
rcll
or
pop
sbb
push
cld
ljmp
fs
or
adc
jp
mov
insl
pop
push
imul
xchg
add
cmp
movsl
xor
adc
lret
int3
jns
nop
cmp
cmp
outsb
cmp
cmpsl
jmp
mov
dec
hlt
adc
dec
fildll
sbb
jle
cmp
add
pop
push
nop
xchg
rcll
dec
cmpsb
outsb
rcrb
mov
loope
add
dec
inc
insl
pshufw
mov
call
outsl
inc
sbb
out
jg
pop
and
sub
push
adc
xchg
adc
fcoms
and
out
test
push
inc
add
jbe
adc
cltd
stos
rolb
in
loope
add
aad
mov
dec
clc
adc
cli
and
inc
movsb
pusha
aam
clc
jne
cwtl
popl
ficoml
mov
jp
adc
ds
pushf
pop
or
sarb
aam
nop
ja
mov
cwtl
mov
pusha
jno
test
inc
shll
pop
add
cmc
xor
dec
jae
lret
push
pop
push
je
mov
add
repnz
repz
adc
add
or
add
push
dec
mov
push
gs
push
inc
add
sub
cmpsb
jb
xor
push
mov
add
xor
mov
scas
rcl
sahf
hlt
mov
mov
jbe
adc
jecxz
loop
inc
inc
fwait
test
xor
imul
arpl
inc
mov
lods
push
cmpsl
sbb
push
loopne
hlt
dec
sub
pop
inc
add
arpl
mov
rorb
sbb
inc
push
pop
out
jge
sbb
dec
mov
mov
dec
movsb
add
add
ds
repnz
bound
mov
pop
insb
mov
mov
add
and
dec
pop
lret
push
das
das
fs
shll
push
jecxz
push
jno
inc
xorb
mov
loop
add
push
lahf
or
cld
inc
adc
add
dec
movsb
cmpsb
pusha
ja
loopne
add
inc
cltd
mov
cs
cld
in
bound
imul
add
test
adc
and
inc
cmp
dec
sub
jo
aam
fwait
dec
pop
push
adc
mov
xchg
mov
lods
cmpsl
or
sub
movsl
or
cmp
pop
xor
add
fnstsw
dec
mov
inc
jne
push
inc
xor
pop
add
sbb
int
adc
lret
add
add
insb
pop
inc
add
push
sub
sub
adc
and
push
jns
or
add
lods
mov
push
mov
mov
jecxz
frstor
xor
jo
sbb
or
fimuls
pop
pop
or
mov
test
add
jo
movsl
add
add
loopne
outsb
add
pop
add
or
sub
cmp
add
dec
out
in
call
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
add
or
adc
sbb
jmp
inc
in
call
hlt
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
idiv
incb
clc
push
xor
je
jbe
push
js
jp
jl
jle
mov
xor
popf
int
adc
inc
loopne
and
push
leave
ljmp
sbb
cmp
ret
push
aad
lahf
fistps
jmp
cmp
add
sbb
mov
scas
pop
and
setne
iret
mov
movsb
lahf
in
xor
pop
cmp
add
cmpsl
inc
push
push
fiaddl
movb
cmp
add
jg
lahf
fnstcw
jb
sbb
cmp
sbb
dec
lahf
sbb
push
jno
xchg
lahf
in
add
xchg
xchg
push
xchg
mov
adc
and
sub
jnp
xchg
icebp
scas
stc
mov
sti
addl
xchg
int3
or
pushf
xor
cmp
jge
pop
test
fwait
addr16
xchg
mov
out
out
ret
sbb
pop
push
xchg
decb
pop
dec
aas
jae
cmp
push
jle
sbb
add
xor
pop
sbb
push
mov
stc
xchg
add
or
sbb
addr16
jb
cmpsl
mov
xchg
cmp
cltd
cmp
mov
mov
leave
stos
shll
sbb
daa
jbe
js
dec
xorl
aas
mov
leave
add
push
xchg
aaa
mov
mov
sbb
add
mov
hlt
add
cmp
das
imul
cmp
mov
add
xchg
imul
roll
fsub
adc
cmp
test
orb
cmpsl
add
xor
xchg
rdtsc
push
enter
iret
je
mov
cmp
dec
jbe
js
jp
add
repnz
xor
add
pop
push
pop
adc
jae
orl
hlt
lahf
mov
mov
xor
inc
inc
addr16
mov
sbb
out
xchg
mov
cmp
cmp
lahf
jecxz
call
or
pop
add
mov
cmp
add
inc
push
push
add
xchg
push
inc
es
ds
adc
bnd
adcb
popf
loop
out
mov
leave
pop
or
pop
and
insl
cmp
mov
xlat
loope
jmp
add
cli
and
ficomps
xchg
add
cmp
cmp
roll
jb
je
in
pop
aas
lods
popf
les
xor
push
sbb
sbb
add
inc
xor
je
sbb
repz
test
xor
pusha
mov
inc
rcrl
packuswb
pause
leave
xchg
shlb
test
mov
mov
movsb
mov
mov
add
ss
xchg
push
mov
add
rorl
push
repz
leave
shrw
jbe
jle
imul
es
aaa
rcrb
dec
push
push
sarl
push
sar
cwtl
arpl
out
cwtl
icebp
cmp
adc
daa
call
lock
hlt
pop
clc
sbb
cld
push
jb
jp
sbbb
adcb
jb
pop
mov
mov
rorb
ljmp
cmp
add
adc
sbb
cmp
push
lahf
inc
and
push
cld
jno
jae
add
jb
aas
adcb
ret
mov
repz
sub
adc
dec
cli
dec
and
addr16
sub
int3
cld
inc
cmp
dec
pusha
jp
mov
cwtl
cli
jg
jb
jp
xlat
sbb
cmpl
add
sahf
and
sub
cmp
inc
in
sbb
addps
ds
cmp
nop
aas
cwtl
aas
mov
aas
mov
aas
sarb
fmuls
call
faddl
push
or
mov
cld
and
or
pop
push
inc
jl
push
xchg
mov
stos
sbb
out
popf
rcrb
add
mov
add
cmp
sbb
inc
add
cmpsl
xor
cmp
push
popf
pop
sbb
jo
js
adcb
stos
iret
mov
iret
loopne
clc
testl
and
sub
xor
pop
xor
cmp
cmp
inc
inc
inc
addr16
xchg
push
loopne
xor
mov
mov
sbb
mov
clc
lock
jb
or
or
add
jb
mov
pop
jp
jl
jle
jle
jle
jle
jle
add
xchg
mov
mov
rclb
cld
mov
mov
and
test
dec
hlt
push
jle
cld
pop
cmp
mov
insb
jbe
addr16
mov
test
mov
mov
sarl
enter
rolb
sub
xor
es
add
cmp
pop
cs
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
push
bnd
aas
les
imul
jle
jle
add
xor
jnp
rcrl
fldenv
loope
jmp
stc
xor
cld
fs
insb
shll
xlat
xchg
jl
and
loop
mov
movsb
ja
sar
aam
fdivr
fdivr
loopne
in
arpl
xorb
xchg
and
ret
jp
and
popf
aaa
popf
dec
sbb
js
jl
adcb
cmp
enter
aam
fadds
out
out
out
loopne
cmp
add
sub
xor
cmp
add
inc
repz
repnz
jmp
xorb
lahf
pushf
pop
mov
lahf
rcrb
lahf
lock
hlt
lahf
clc
cmp
test
adc
dec
or
cmp
popf
inc
shlb
insb
cmp
jb
je
jbe
gs
notl
mov
lods
xor
hlt
mov
mov
dec
or
add
adc
nop
nop
je
dec
push
das
and
xor
stc
test
cmpsb
xchg
sub
xor
in
aaa
loope
adc
adc
fstps
sbbb
icebp
and
sub
sub
inc
lret
out
xchg
jo
mov
lock
push
sbb
jb
sub
pop
mov
fidivrs
push
xchg
hlt
jo
push
cmp
add
cmp
cmp
enter
add
xchg
inc
mov
inc
sahf
jo
dec
add
push
cld
mov
cli
mov
jl
push
sbb
jge
xchg
pop
mov
add
cmp
dec
inc
push
xchg
pop
cmpsl
shrl
sbb
popa
jbe
js
ret
mov
subb
inc
popf
push
add
insb
xchg
jle
subb
cmp
insl
leave
inc
mov
mov
out
stc
sbb
add
daa
ds
insb
mov
sahf
imul
mov
bound
push
flds
dec
in
mov
dec
add
inc
dec
add
fs
mov
enter
movsl
subb
xor
popf
add
xchg
add
jns
add
out
mov
sarb
xchg
insb
sbb
cld
cmpl
and
pop
sub
add
xor
clc
cltd
add
mov
or
inc
pop
lret
stc
shl
call
out
ret
jle
add
clc
sbb
xor
rolb
cvtps2pd
arpl
pop
jne
jle
movsb
xchg
sbb
les
sub
cmp
orb
add
ret
add
cmp
iret
push
or
add
mov
mov
add
cmp
cmp
add
xchg
jnp
popf
out
pushf
xchg
jmp
loopne
push
leave
cmp
roll
gs
aam
sbbb
or
subb
hlt
jl
push
mov
inc
xchg
int3
mov
pop
fdivl
inc
inc
add
lock
out
ds
mov
or
rcrb
sbb
xchg
push
and
dec
aas
sarl
sub
add
insb
adc
outsb
mov
add
test
pop
aam
mov
and
int3
loopne
repnz
add
jb
in
adc
lret
sbb
out
leave
cmp
cmp
inc
in
dec
int
jb
pop
rclb
lahf
cmpb
add
lcall
popa
and
in
mov
loop
jns
scas
mov
xchg
movsb
sub
aam
cld
add
mov
inc
dec
fstl
xchg
and
push
or
dec
mov
in
push
add
pop
je
mov
adc
sub
test
add
push
addl
inc
and
out
fisttpl
aaa
cmp
mov
movsl
cmpsb
arpl
hlt
xchg
cmpb
js
ret
adc
loopne
in
push
mov
push
push
xor
push
iret
pop
pcmpgtw
addb
stos
iret
mov
mov
ret
and
jbe
add
jo
or
sbb
daa
aam
inc
out
cltd
and
mov
adc
xchg
jnp
add
sub
add
sbb
push
add
daa
aaa
imul
sbb
out
xor
outsb
add
cld
leave
pusha
cmp
cmp
cmp
addr16
jp
xor
jnp,pt
rcl
push
ja
test
add
in
call
clc
pop
inc
pop
rorb
sbb
faddl
add
shl
int
xor
into
push
jo,pn
sahf
add
sub
icebp
add
sti
mov
leave
dec
rorl
bound
loope
jmp
and
cld
jb
add
cmp
dec
cmp
mov
aam
cmp
je
lahf
cmpsb
es
inc
jo
lock
mov
fcompl
cmp
aaa
popf
dec
adc
dec
pushf
pusha
enter
mov
call
cmp
push
dec
outsb
xor
inc
loop
adcl
mov
jmp
and
xor
lcall
pop
or
mov
lret
pop
dec
xchg
xchg
sbb
repz
adc
jecxz
out
flds
mul
add
pop
or
push
sbb
ds
fwait
jne
inc
xchg
data16
add
cmp
add
adc
sbb
das
and
xor
js
add
cmp
cmp
ss
in
xchg
adc
jl
test
mov
mov
nop
cld
xchg
xchg
pop
adc
sarb
popf
lock
ds
iret
clc
and
fmull
cmp
add
inc
or
dec
xchg
rcrb
inc
js
dec
dec
or
push
loope
pop
cmp
pop
daa
test
cmpsb
add
dec
jmp
cs
ficoml
js
inc
cmc
or
movsb
call
dec
jmp
cmp
push
daa
and
mov
sahf
adc
xchg
bnd
rolb
pop
mov
daa
pop
xchg
jbe
push
pushf
shlb
bound
nop
add
or
hlt
push
add
mov
add
pop
imul
test
pop
dec
mov
js
add
in
add
cmp
in
call
jmp
setle
mov
test
cmp
dec
ljmp
pop
add
fwait
mov
push
rorl
xchg
repnz
add
add
test
mov
out
add
loopne
xor
mov
scas
inc
or
pop
jo
jbe
js
jp
add
add
and
test
popa
les
nop
pop
add
ds
sub
cld
push
xor
insb
dec
mov
or
xchg
loope
lock
nop
or
das
call
add
push
addr16
leave
mov
xchg
in
pushf
mov
test
mov
rorb
push
adc
mov
jl
dec
stc
cmp
add
adc
mov
inc
rorb
push
xchg
ficomps
jo
add
int3
dec
stc
cli
and
into
or
adc
and
imul
add
repz
repnz
sarb
in
mov
rcrl
xchg
in
mov
sub
add
cmp
adc
pop
pusha
hlt
cmp
mov
inc
data16
mov
aas
hlt
aam
xor
sbbl
clc
dec
push
push
arpl
pop
es
add
xor
popf
sti
pop
or
cwtl
add
or
add
bound
adc
cmp
add
mov
pop
test
pop
test
in
add
xor
cmp
push
fmuls
jle
mov
push
test
ss
roll
inc
flds
mov
pop
add
pop
in
lock
hlt
inc
xchg
mov
add
jp
jl
inc
jmp
sbbl
mov
add
ret
rorb
mov
dec
adc
sbb
xor
popf
and
mov
push
jp
push
jge
das
in
addl
jb
add
movsb
ret
cwtl
lods
rolb
push
lock
pop
bound
sub
out
xchg
xor
aam
cmp
add
fsubrp
popf
sub
ds
cmp
add
pop
dec
popa
lock
addl
inc
in
cmp
xchg
call
in
shrb
jmp
dec
sbb
sub
pop
sbb
sbb
add
cli
cmp
add
xor
jl
shll
add
mov
in
call
add
lcall
cmpsl
xchg
ret
and
in
inc
aam
pop
pop
add
xchg
xchg
cmpsl
xlat
cmp
in
not
push
or
inc
repz
add
stos
clc
pop
cwtl
sub
sub
push
rorb
and
and
js
jp
pop
pop
pop
ltr
xchg
sbb
iret
ret
xchg
adc
cmp
xchg
dec
jb
pusha
mov
add
pop
add
or
add
pop
xor
je
pop
add
jp
scas
and
fcmovu
sub
xor
mov
or
mov
jmp
pop
cli
sub
popf
jnp
pop
shlb
and
mov
fdivs
adcl
ror
mov
jecxz
int
add
and
sub
clc
sarb
or
mov
jl
add
xchg
mov
outsl
lahf
add
adc
loopne
and
call
pop
inc
fs
mov
out
pop
rolb
leave
pop
push
js
into
cmp
add
dec
stc
dec
clc
sub
adc
sub
mov
loopne
dec
test
push
idivb
ja
add
jae
jne
xchg
cmp
nop
sub
jns
add
shll
add
add
push
xchg
mov
loop
rolb
fs
cmp
push
nop
add
pop
jmp
dec
popf
outsl
add
lahf
add
xor
or
xor
dec
jnp
cs
jb
pop
je
mov
adc
js
add
xor
popf
add
sbb
in
add
loopne
icebp
cld
cmc
xchg
test
adc
mov
mov
push
in
adc
dec
rolb
adc
adc
mov
nop
pop
in
xchg
lock
hlt
mov
add
loopne
cmp
adc
add
cmp
push
jg
es
push
nop
test
cmp
daa
in
mov
cltd
mov
push
je
adc
in
push
add
aam
add
cmp
fdivs
rolb
fimull
sbb
lock
xor
xchg
pop
in
addr16
push
cmpsl
xchg
sarb
add
jbe
js
jp
add
movsb
or
lods
int
data16
cmp
mov
sub
call
repnz
scas
ja,pt
loopne
add
flds
cmp
adc
ucomiss
faddl
xchg
and
xor
add
sbb
out
and
sub
xor
popf
and
sbb
das
mov
pop
ret
cmp
repz
daa
inc
inc
inc
addr16
orb
repnz
push
call
mov
fsubs
enter
ret
add
fmul
loopne
mov
mov
add
mov
add
xchg
cmp
and
addr16
pusha
jp
movl
jbe
outsb
call
push
jmp
shlb
dec
jl
add
pop
ret
xchg
push
xchg
add
fdiv
add
add
dec
xor
xor
inc
xchg
popa
mov
add
dec
test
ror
pop
jp
add
inc
inc
inc
cmpsl
sbbb
sarb
jle
pop
jmp
push
or
xor
xor
inc
jno
add
pop
dec
fs
test
test
pop
inc
mov
push
loop
add
or
sbb
add
xchg
add
pop
loopne
out
xchg
add
cwtl
rcrb
xchg
into
pusha
out
xor
inc
repnz
shlb
cli
daa
xchg
pop
lods
fwait
out
in
test
fsub
lcall
inc
inc
pop
add
repnz
push
adc
in
lahf
add
cli
and
add
xor
inc
cmovs
dec
mov
mov
cld
aas
xchg
mov
rol
ss
and
sbb
sbb
xor
cmp
pop
inc
icebp
dec
stc
pop
and
lock
mov
cmp
outsb
stos
iret
mov
rcrl
aam
fucomp
add
cmp
or
bound
fldcw
loope
add
inc
inc
loopne
cwtl
cld
jb
je
add
pop
popa
xchg
add
pop
cmp
test
mov
popf
daa
stos
add
outsb
loopne
nop
push
dec
icebp
pop
in
pop
popa
sbb
ja
push
mov
and
lock
cld
in
push
shrl
and
xor
adc
lock
lahf
xchg
out
in
lods
mov
sub
dec
xchg
testb
test
cmpsl
arpl
les
test
jne
cmp
test
lcall
aam
leave
scas
fmuls
shlb
push
push
xor
jo
mov
push
repnz
adc
sbb
or
pushf
or
xchg
add
repnz
repz
lock
inc
nop
dec
add
loopne
jmp
arpl
ja
mov
sbb
dec
subb
add
push
fmuls
jle
nop
jno
jl
cmovb
cmc
mov
mov
or
or
push
test
call
or
rorb
int3
mov
enter
lahf
pop
into
rolb
in
clc
sarb
mulb
dec
aas
loope
subb
sarb
jmp
scas
and
loope
insb
repnz
and
bound
popa
ret
adc
dec
shlb
sub
adc
push
dec
leave
imul
ds
add
mov
mul
jg
add
leave
shll
jl
and
push
mov
mov
repnz
cmpb
pop
or
adc
dec
call
sbbl
repnz
leave
in
and
xchg
dec
enter
loope
add
roll
push
cs
pop
imul
nop
push
cmp
mov
movhlps
sti
xlat
enter
jmp
pop
cmp
add
dec
xchg
xchg
jp
out
roll
in
adc
cmp
sub
jnp
jle
mov
hlt
adc
pop
leave
lret
rorl
aad
mov
pop
and
pop
add
xor
mov
or
iret
cmp
popl
lock
adcb
mov
add
xchg
mov
inc
ret
mov
push
pop
leave
inc
je
cmp
cmp
and
lret
dec
loopne
adc
add
adc
sub
add
mov
jne
jp
andl
test
ds
aad
fbld
add
or
sbb
fnstcw
sbb
push
lods
fs
cltd
cmp
cmpsl
ficomps
add
jno
jnp
es
mov
pop
int3
xchg
shl
insb
sbb
cld
sti
addb
pop
ja
jl
cltd
and
out
std
loope
cmp
xor
test
jnp
add
daa
int
adc
mov
sub
jne
inc
add
pop
loop
jo
pop
add
aam
iret
xchg
or
lods
icebp
cmp
lret
in
dec
lcall
add
iret
add
cmpsl
movsb
loop
cwtl
xor
loopne
fmull
test
xor
mov
pop
pop
xchg
add
mov
add
cmp
adc
and
sub
and
xchg
sub
nop
int3
test
out
or
movb
ret
mov
xor
and
add
ror
or
sub
and
mov
sub
out
pop
cmp
adc
jmp
cmp
mov
icebp
inc
sti
ret
cmp
fcoms
pop
cmp
leave
mulb
ret
movsb
sarb
and
dec
xchg
add
push
lahf
pop
xchg
jbe
add
test
mov
xchg
xchg
mov
lcall
or
sbb
sbb
shlb
cmp
mov
daa
outsl
inc
mov
inc
sub
pusha
push
jb
xor
pushf
dec
test
fs
add
ret
dec
popf
add
xchg
add
jecxz
or
pop
cwtl
ret
jo
jl
xchg
add
in
add
sbb
push
add
out
adc
lock
cld
add
mov
hlt
pop
lea
jb
je
add
jno
testb
pop
mov
out
jo
push
sbb
dec
sbb
mov
xchg
pop
out
cmp
fwait
inc
xor
xchg
ljmp
xchg
and
leave
mov
cs
xor
es
mull
cmp
mov
dec
or
fildl
cmp
clc
fdivs
adc
xor
pop
ror
add
mov
add
and
sar
shl
cld
std
idivb
dec
in
pop
lock
test
cmpsb
cld
stos
leave
scas
shll
sbbb
lahf
ret
dec
into
and
aas
lahf
pop
fiadds
pushf
inc
add
movsb
movsl
ror
loopne
icebp
pop
xchg
push
sub
xor
pop
xor
cmp
xchg
out
testl
cmp
pop
in
add
cmp
and
or
sub
dec
clc
outsb
lock
hlt
ss
xchg
fimull
adcl
repz
repnz
je
pop
add
out
js
add
lock
aas
mov
add
popa
in
xchg
sub
push
in
leave
testl
insl
shlb
je
xlat
adc
aas
add
ss
xchg
sbb
mov
adc
sub
test
je
dec
imul
stos
dec
adc
cwtl
mov
pop
rcll
filds
pusha
out
jmp
add
repz
mov
add
adc
xor
pop
aaa
dec
sub
sbbl
repz
pop
mov
adc
lock
ljmp
xor
aas
push
mulb
stc
out
and
jo
add
pop
jns
add
add
mov
loopne
fmuls
ss
or
pop
adc
cmp
mov
ret
push
pop
sbb
fmull
pop
add
lods
data16
pop
scas
mov
adc
addl
mov
sbb
mov
andb
dec
addb
and
call
xchg
and
cld
sbb
push
sub
lcall
in
in
lret
mov
jno
jnp
hlt
or
outsb
cwtl
in
dec
aas
cs
ffreep
mov
xor
xchg
xor
lock
sbb
jle
subb
add
shr
cld
loop
ljmp
xor
or
push
adc
aaa
addl
cld
in
lea
push
xor
jns
addb
mov
js
je
pusha
xchg
or
nop
iret
test
aaa
xchg
add
loopnew
xchg
mov
loope
cmp
sub
add
dec
lea
jle
rcrb
cmpl
mov
push
pushf
adc
call
daa
mov
ljmp
hlt
add
cmp
jno
add
fcoms
add
jl
xchg
loopne
aas
hlt
adc
add
insb
cmp
cmp
in
inc
add
add
stc
inc
in
call
push
xchg
mov
mov
lret
sahf
sub
sub
cmp
add
push
cmp
add
inc
ret
mov
mov
pop
push
sub
dec
mov
ret
std
rorb
hlt
add
pop
push
xchg
add
mov
cld
repnz
lcall
add
lods
add
add
pop
mov
subb
cmp
subb
rcrl
or
dec
and
cmpl
dec
js
mov
mov
add
rolb
and
je
cmp
push
roll
popf
shll
add
aad
test
das
ds
sub
cmp
daa
push
mov
roll
les
lahf
adc
addb
or
lret
dec
xor
roll
ss
loope
pushf
xor
cs
push
xchg
or
cmp
addl
test
mov
jns
push
inc
add
adc
xor
dec
sub
sbb
scas
mov
pop
enter
scas
movsb
push
pop
push
cmp
inc
xorb
nop
cmp
ds
jl
add
dec
adc
push
cli
add
pop
clc
sbb
cmp
cmp
xlat
or
dec
push
invd
mov
sbb
pop
loopne
pop
add
and
inc
xor
mov
mov
add
ss
cmp
das
loop
add
jp
add
mov
pop
add
rsqrtps
rorl
imul
add
push
add
and
mov
ljmp
or
cli
les
adc
add
flds
xor
push
fstps
push
add
movsb
adc
imul
push
outsl
add
jnp
ds
fimuls
int
push
sub
test
imul
xor
shl
cld
xchg
add
sbb
popf
cmp
inc
mov
cmp
nop
out
ret
cld
or
add
enter
negb
add
cmp
xchg
add
lahf
dec
mov
leave
add
clc
pusha
dec
aad
xchg
out
add
cmc
pop
sahf
dec
add
mov
ja
adc
sbb
sarl
or
andl
mov
in
jmp
add
hlt
mov
pop
daa
enter
enter
syscall
imul
xchg
mov
dec
sbb
add
mov
mov
adc
jmp
xor
xor
jp
push
inc
push
mov
testb
pop
dec
ret
pop
push
mov
sbb
and
mov
into
clc
xor
jge
cmp
jnp
cmp
sbb
add
push
testb
adcl
inc
push
xchg
cli
aam
les
dec
test
add
xor
cmpl
push
and
inc
scas
add
test
js
mov
lods
aas
add
loope
loopne
in
jp
andb
addb
sbb
lcall
sub
xchg
xor
gs
cmp
out
loop
cmpsl
inc
add
jo
sahf
aas
js
sub
test
xor
sbbb
mov
mov
sbb
sbb
or
add
das
sub
jo
adc
add
je
mov
orb
dec
call
test
jl
add
test
sub
pop
lea
jo
fdivs
push
call
hlt
sbb
or
sbb
cs
cwtl
leave
xor
or
pop
push
add
mov
add
in
nop
fmul
cmp
movsb
fmul
jle
push
pop
mov
xchg
loopne
sbb
lcall
stos
sbb
pop
enter
lods
cld
test
mov
movsb
pop
jle
pop
mov
sahf
mov
jo
pop
pop
roll
add
mov
or
adc
xchg
add
sbb
movsb
es
lock
sub
vmread
fmull
aaa
add
add
icebp
xor
xor
ret
in
popf
sbbb
pop
inc
adc
dec
pop
or
pop
jl
adc
in
call
test
cmp
mov
xchg
adc
in
add
mov
call
mov
sbb
mov
cmovl
sub
lock
pop
dec
push
mov
orl
xor
dec
add
mov
movsb
jp
in
lods
shr
pop
mov
lock
add
lret
int3
jo
jle
aam
fmuls
push
loopne
and
push
push
and
clc
xchg
xchg
or
jb
jb
js
add
loope
ds
in
leave
cmp
xor
cmp
lods
mov
dec
dec
dec
adcb
pushf
pop
add
ret
fdivl
push
clc
js
cwtl
mov
movsb
and
inc
mov
mov
push
xchg
std
cwtl
int3
scas
pop
nop
dec
adc
stos
in
adc
clc
nop
or
inc
push
or
inc
push
xchg
push
nop
mov
ret
mov
add
sub
mov
mov
das
cs
jne
lea
daa
add
call
lods
fcompl
mov
lea
sub
enter
push
sub
mov
lea
inc
push
push
push
pop
inc
stos
out
dec
test
es
jne
inc
popa
sub
push
call
enter
cmp
mov
mov
icebp
push
and
xorb
jecxz
pop
lea
test
ja
loopne
or
pushf
add
push
shrb
sbb
adc
or
cmp
mov
jo
stos
and
and
mov
dec
mov
or
fstpt
xchg
test
js
sbb
cmpl
sysexit
test
mov
jb
dec
jle
or
inc
sbb
in
or
repnz
cmpb
inc
add
sub
test
sub
loopne
pop
pushl
je
add
push
xlat
push
js
mov
push
stos
mov
aas
xor
or
leave
add
sbb
shr
in
add
loopne
add
in
sub
add
out
stc
mov
pop
add
pop
bound
add
add
movsl
lea
loope
jge
add
mov
sbb
jge
jp
dec
roll
out
sarb
lock
sbb
pop
sbb
shlb
mov
mov
pop
and
mov
cmpsb
mov
dec
cmpl
add
jge
lods
add
rorl
or
sti
addl
push
inc
ret
cld
sub
add
and
popl
add
ljmp
cmp
mov
loop
in
sahf
fsubl
mov
mov
repnz
and
or
cmc
ret
push
movl
push
lock
outsb
add
sbb
pop
les
jp
jbe
add
jle
sbb
cli
mov
or
mov
in
or
inc
loop
stos
add
mov
push
add
jne
outsl
add
imul
fsubr
cltd
adc
fsubrl
aaa
fmuls
pop
rorl
dec
shl
or
arpl
ds
jnp
aam
or
pop
rorl
cmp
adc
push
and
jo
push
sbb
dec
mov
andl
xor
dec
leave
add
add
cld
jmp
add
push
push
cmp
rolb
das
add
jne
mov
add
xchg
add
xchg
mov
mov
inc
cmp
and
jnp
testb
xor
cmp
in
rol
stc
les
pop
es
mov
inc
sbb
mov
xchg
sub
shrb
add
das
inc
jne
lret
xor
or
stos
pusha
adc
xchg
jmp
lret
aam
cltd
test
xchg
lods
inc
sub
test
add
sbb
repz
and
pusha
lcall
and
inc
push
ret
mov
jne
jp
sbb
aaa
adc
sbb
mov
cld
inc
fnsave
addb
ljmp
jl
push
add
adc
leave
add
cltd
xor
xchg
add
imul
push
add
shll
addl
and
xchg
dec
ja
sbb
lahf
push
cmp
xorb
in
pusha
xor
test
popa
lods
xchg
dec
jg
adc
xor
mov
lret
mov
icebp
in
add
or
mov
shll
jp
add
pushf
jmp
pop
inc
inc
or
pop
rclb
hlt
pop
jge
pop
mov
shll
lock
jecxz
dec
popa
leave
inc
movl
or
cmpl
push
pop
jns
sbb
jg
jo
sub
pop
or
and
jmp
add
aas
loop
xor
fadds
or
out
mov
pop
mov
dec
int3
iret
addl
pop
gs
sub
jo
fisubrl
cmovp
mov
sub
imul
sbb
inc
mov
and
add
push
lret
cld
inc
cmp
add
lds
add
inc
push
lret
add
sbb
popa
arpl
jecxz
jmp
xchg
jo
jmp
int
cmp
ror
stos
add
pusha
mov
imul
enter
dec
add
clc
mov
fs
add
popf
lret
jne
ds
pop
xchg
jb
nop
repnz
cltd
rcrl
add
gs
dec
cmp
adc
add
rcll
mov
mov
adcl
push
fadds
cmpsb
mov
jns
dec
pop
stos
jge
out
add
sbb
jbe
adc
stos
xchg
rolb
dec
and
mov
xor
call
shll
bound
push
adc
add
mov
js
loopne
add
out
xor
arpl
mov
pop
daa
js
je
les
mov
cmpsl
xchg
in
jne
add
lret
adc
inc
mov
adc
and
and
push
inc
enter
xor
mov
add
sub
in
and
imul
icebp
adc
pop
inc
add
rolb
add
repnz
add
sub
adc
ljmp
cmpsl
clc
push
cmp
aas
xchg
sahf
push
mov
inc
flds
adc
fwait
jnp
sub
andl
pusha
lods
or
cmpb
mov
mov
add
pop
inc
add
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
add
imull
cmc
rep
or
jmp
adc
adc
cmp
jae
push
inc
add
inc
lock
mov
add
add
xor
shr
add
roll
push
mov
adc
cmp
call
ret
jns
mov
jae
insb
cmc
sub
mov
push
imul
inc
lds
outsl
arpl
inc
mov
lea
push
in
cmp
arpl
sbb
icebp
jae
cmpsl
inc
jne
mov
sub
sti
push
loope
inc
push
ja
jo
imul
dec
andb
mul
sub
ds
mov
jns
push
clc
and
cltd
sub
bound
dec
xchg
mov
cmp
sti
imul
imull
arpl
int3
and
bound
fidivl
cmpsl
push
outsl
fs
mov
pop
push
nop
sarl
or
or
mov
insl
add
dec
icebp
inc
std
pushl
clc
ja
shrb
pop
inc
daa
dec
outsl
imul
movsl
daa
push
stc
in
mov
mov
movsb
lods
mov
add
rolb
mov
add
add
add
add
idivb
and
sub
and
jg
sbb
insb
adc
inc
movups
dec
jge
xor
or
sub
pusha
sub
test
insl
mov
xchg
je
push
add
push
jno
in
sbb
xor
jecxz
and
shl
mov
addl
fidivs
sti
mov
aam
xchg
sahf
mov
cmp
sbb
stc
mov
inc
or
xchg
jg
ret
xchg
inc
cmpsl
ss
dec
fwait
dec
out
les
lds
push
inc
add
jnp
pusha
mov
imul
pop
sub
imul
ret
and
test
pop
aaa
xchg
in
mov
cmp
push
and
cld
insl
outsl
sbb
mov
cmp
jmp
fdivrs
mov
and
pop
aaa
sub
mov
cwtl
dec
movsl
cwtl
mov
cld
lods
mov
cmp
movl
cltd
and
inc
mov
sarl
jbe
push
inc
mov
les
inc
dec
jno
cmpsb
das
shrb
xchg
gs
jbe
popl
mov
arpl
jp
adc
and
mov
push
sub
aaa
xor
aas
sti
ja
xchg
add
ss
out
cmc
sub
mov
xchg
icebp
xlat
out
in
ds
repz
ss
and
cmpsl
jle
sti
push
cs
fmulp
fisubs
aas
pusha
xchg
push
or
jmp
xchg
cmp
cmp
pop
inc
mov
or
andl
mov
sbb
xchg
out
pop
ret
pushf
nop
sub
je
xor
repnz
jne
mov
lock
outsl
bound
dec
xchg
idiv
inc
mov
movb
mov
push
rclb
aaa
gs
scas
shl
mov
push
hlt
push
cltd
xchg
cmp
iret
leave
pop
shl
stos
shl
sti
ret
mov
mov
in
mov
sti
xlat
pushf
push
stc
sbb
xor
sbb
incl
pop
loopne
outsl
test
aam
sbb
inc
dec
xchg
push
fbstp
sbb
mov
jne
jbe
fistps
xchg
scas
mov
xor
add
inc
je
mov
test
mov
mov
cmp
int3
xchg
or
aas
or
rclb
xor
mov
cmp
popf
fisttpll
in
in
jg
fcomp
lods
cli
std
mov
mov
stc
inc
sahf
adc
in
neg
jg
sub
fisttps
bound
xchg
gs
sahf
sbb
subb
mov
jmp
xor
or
jbe
enter
sbb
stos
pop
adc
mov
std
stc
imul
arpl
or
in
cmpsb
add
ret
jge
dec
lahf
dec
add
push
lods
leave
cltd
inc
out
dec
loop
pusha
mov
jp
in
pop
cli
mov
les
fcmovnbe
xchg
mov
lret
and
pop
or
pop
sbb
aam
out
mov
push
sub
stc
cs
or
lods
mov
dec
push
aam
jl
out
push
cmpsb
into
or
imul
insl
mov
loop
mov
je
ss
into
aaa
int3
xchg
xor
dec
pop
push
adc
mov
movsl
pop
lahf
cmp
addr16
movsl
sub
cwtl
dec
imul
in
icebp
int3
imul
dec
mov
xchg
bound
mov
scas
dec
sub
test
movsb
xchg
mov
out
sbb
sbb
jecxz
add
lahf
sub
out
xchg
xchg
jnp
ds
scas
mov
push
jmp
cmp
adc
mov
shrb
aad
pop
leave
push
inc
add
dec
scas
and
mov
pusha
or
cwtl
adc
sbb
jns
adc
lahf
jb
xor
jo
add
aad
fldenv
add
sbb
mov
outsb
push
cmpl
cmp
testl
lahf
xchg
jecxz
fwait
sbb
out
or
imulb
push
loopne
mov
dec
cmpsl
insl
cmp
mov
js
movsb
mov
mov
cmpsb
ljmp
int
ror
loope
mov
pop
pushf
cmp
rorb
cwtl
iret
lret
xor
cmpsb
out
mov
cwtl
test
and
ret
call
push
mov
clc
push
jns
jmp
test
mov
sub
push
fnsave
or
lods
out
mov
movsb
test
push
and
sahf
mov
inc
scas
cmp
shrb
xor
popa
add
inc
add
jecxz
es
sbb
popf
dec
push
fisttps
or
mov
pop
adc
je
insl
es
cmp
cs
xor
mov
repnz
push
adc
out
pop
ret
movlps
iret
pop
aas
dec
inc
stos
clc
jmp
mov
cli
out
call
les
mov
mov
int
sub
jp
xchg
adc
std
pop
mov
jecxz
pop
pusha
icebp
mov
mov
mov
not
jb
jnp
outsb
jo
sti
addr16
mov
sub
adc
cmp
mov
xchg
inc
or
scas
mov
stos
daa
insb
insb
sti
in
clc
cmpsl
movsb
cmp
xchg
out
add
insl
xchg
sub
sub
lods
and
dec
insl
jno
gs
movsl
xchg
cltd
fcmovbe
inc
pop
mov
sbb
sbbl
inc
sbb
add
inc
xor
jmp
int3
push
add
or
add
jmp
or
mov
fisttpl
inc
xor
adc
mov
xor
mov
cmpsl
cmp
enter
pop
mov
mov
inc
les
mov
push
or
mov
push
and
movsb
filds
dec
mov
adc
imul
mov
ja
lods
mov
outsl
mov
jmp
pusha
fcmovu
aas
mov
xchg
test
mov
inc
stos
fisubs
xchg
es
out
push
mov
cmp
repz
fildl
fildll
cltd
mov
mov
xchg
xchg
stc
repz
or
pusha
mov
dec
cmp
cmc
adc
cli
ss
or
loopne
xor
jp
mov
add
call
icebp
add
push
hlt
mov
hlt
pop
repz
lock
popa
sbb
shl
push
add
xchg
mov
fcomip
xchg
addr16
xchg
repz
mov
mov
ss
add
mov
push
xchg
repz
popa
fsts
jbe
lcall
dec
push
push
frstor
pop
jl
xchg
das
xor
jecxz
mov
cmp
sub
dec
mov
cs
inc
sbb
or
sti
mov
hlt
stos
sahf
std
fwait
sub
push
repnz
mov
stc
pop
jge
loop
aas
xchg
in
sarl
test
pop
mov
inc
fsubl
push
lods
aam
rclb
pop
pop
jns
movsb
push
jmp
sub
imul
andl
dec
inc
cmc
mov
ss
or
rcrb
iret
push
pushf
jne
dec
sub
adc
outsb
sbb
xor
mov
lret
sbb
insl
and
call
fwait
fs
inc
mov
pop
xor
push
push
push
lcall
lock
jecxz
arpl
inc
loop
xchg
rclb
lea
mov
push
loop
mov
mov
or
jae
xchg
enter
sbb
ds
adc
aam
popa
fadd
mov
mov
bound
adc
push
ds
insb
fstp
cmp
or
and
and
lock
sub
cmp
pop
cwtl
ss
push
pop
xchg
movsb
test
pop
jae
jg
lret
push
pop
daa
repz
shr
push
in
mov
mov
sub
test
cmp
jl
sub
nop
and
add
scas
call
sub
rcrb
or
jns
add
inc
add
or
mov
cvtpi2ps
mov
fs
sub
inc
fcmovb
test
dec
push
outsb
pop
xchg
xchg
pop
push
lds
lea
mov
test
sbb
rcrb
adc
lds
icebp
push
into
out
out
push
fsubs
pop
cmc
inc
push
icebp
xor
cmp
daa
push
mov
cmc
adc
mov
iret
js
mov
sub
xlat
andb
pop
lds
or
dec
iret
ret
repnz
shll
lret
pop
insl
scas
adc
imul
adc
jmp
xchg
mov
subb
inc
test
mov
lds
call
jb
imul
repz
lret
mov
fcoms
xchg
cli
aas
dec
xor
mov
dec
push
mov
data16
or
or
mov
lods
mov
shrb
out
loop
test
inc
inc
cwtl
push
outsl
jb
or
nop
aas
mov
xchg
mov
fwait
mov
out
xor
ss
pop
cmp
out
and
into
mov
imul
xor
push
inc
call
outsl
dec
and
lcall
inc
dec
cmp
ret
sub
jmp
cmp
adc
push
int
arpl
push
out
jmp
xor
scas
xor
sub
sahf
cmc
cmp
les
subb
push
ja
jns
orl
xchg
add
cltd
cmpb
or
and
inc
jns
enter
je
add
xor
mov
test
pop
xchg
push
add
testb
xchg
mov
hlt
ljmp
cltd
jecxz
andl
scas
cmpsb
mov
mov
sub
jnp
pop
push
xchg
and
aad
fisttpl
mov
inc
sub
popa
insl
cmp
push
sbb
jmp
pusha
pop
clc
rol
sbb
xor
outsb
push
xchg
mov
mov
scas
ret
ja
test
pop
fimull
sahf
push
jmp
fsubl
in
into
jge
or
push
xor
cld
inc
or
and
inc
shlb
add
cmpsb
and
push
jns
leave
sub
dec
data16
mov
sub
push
dec
outsb
int
jl
aaa
fwait
push
and
test
pop
aad
repz
push
stos
cmc
mov
lea
pop
mov
push
fs
xchg
and
inc
stos
lea
scas
test
es
test
xchg
jmp
shrb
jge
ds
mov
in
aad
enter
and
pop
mov
push
pop
add
sbb
sahf
ret
cmpsl
sbb
mov
push
iret
je
cmp
jp
insb
dec
sbb
lahf
and
jb
sbb
lret
outsl
nop
sub
jp
test
ljmp
fcmovnb
leave
ljmp
in
cmp
fisubl
xor
mov
out
jmp
sbb
jae
sub
push
sub
pop
pop
dec
insb
outsl
stos
pop
pop
jns
scas
insl
pop
lock
jo
jae
in
push
xacquire
addb
cmp
lods
into
negw
xor
dec
es
xchg
sbb
push
dec
jmp
popa
sub
lahf
mov
ds
dec
sarb
in
fisubrl
les
jp
add
call
movsl
xchg
push
test
call
js
xor
lret
test
in
daa
rol
scas
aam
outsl
filds
push
jo
into
in
gs
mov
mov
lock
clc
xchg
sbb
pop
aas
cmpsl
cwtl
adc
lock
add
push
inc
das
fistpl
xchg
ret
push
jg
add
pop
mov
mov
sub
rol
ret
cmp
dec
je
mov
cmpsb
nop
out
sti
mov
xlat
push
jo
or
shl
mov
inc
ljmp
inc
adcl
xlat
daa
push
mov
mov
imul
fiaddl
lock
stc
stos
leave
leave
fucomip
or
je
leave
push
xor
in
xchg
test
or
test
scas
lock
xchg
negb
loope
jae
cmpsb
mov
and
fs
inc
pop
andb
xchg
dec
inc
sub
mov
push
xor
pop
iret
ror
xchg
jle
xchg
sbb
stc
push
cmp
clc
fsub
xchg
dec
bound
aaa
push
repnz
adc
cmpsb
mov
inc
inc
out
loop
xor
cmpsl
inc
fadds
mov
ss
mov
lods
mov
cmpsb
adc
test
imull
adc
sbb
arpl
xchg
sbb
mov
mov
adc
xor
fdivl
push
cld
and
lcall
or
pusha
push
ss
js
rcrl
test
or
lods
cmp
sbb
mov
pop
in
push
mov
into
jno
cmpsl
sbb
out
shll
mov
sub
gs
xchg
es
mov
adc
shl
mov
and
pop
sbb
sbb
or
frstor
push
call
rclb
sub
ret
aad
sti
mov
mov
rcll
pop
mov
mov
cmp
push
mov
push
loopne
adc
out
sub
mov
add
test
fs
jns
nop
imul
jp
push
cmp
pop
in
cmp
lcall
jl
lock
or
data16
jns
mov
adc
movsb
add
add
xor
mov
hlt
mov
mov
dec
sti
mov
mov
sbb
pop
inc
sub
xor
sub
leave
movsb
sti
xor
loope
mov
dec
int
add
lret
xchg
add
scas
outsb
lods
push
mov
repz
inc
sbb
movsl
cmpsl
daa
out
scas
inc
lret
jnp
add
ss
jge
int3
in
test
dec
pop
adc
lret
xchg
test
or
adc
cltd
lock
push
xchg
mov
jge
lcall
out
inc
sbb
pop
jb
int3
inc
bound
mov
repnz
and
add
out
dec
and
mov
repnz
push
pusha
and
pop
push
push
push
pop
sub
lock
push
adc
lods
push
mov
or
aam
popf
inc
push
mov
lret
rcr
cld
out
adc
fwait
loopne
fnstenv
cmp
sbb
es
cli
hlt
out
sbb
mov
push
adc
mov
int
shll
mov
mov
or
popf
mov
dec
scas
dec
mov
mov
es
mov
jge
lock
outsb
int
aaa
mov
cmp
mov
in
imul
inc
enter
jae
inc
or
xor
fnstenv
out
pop
or
pushf
test
xor
or
xchg
push
inc
repnz
push
leave
pop
mov
mov
icebp
xchg
push
data16
adc
fisubrs
mov
and
xor
xor
jns
and
repz
and
inc
mov
sbb
xchg
add
push
pop
xor
in
jne
dec
fwait
pushf
add
gs
jp
push
lea
and
dec
repz
ret
loopne
rolb
sbb
cmpsl
mov
dec
shrl
xor
mov
div
test
ds
fcmove
cmpsb
mov
icebp
cmp
push
mov
cmpsb
cmp
jp
pop
push
es
movsb
sbb
jo
and
mov
add
cmp
in
out
cmp
jne
jb
lock
in
inc
orl
insl
or
and
mov
mov
or
xlat
outsl
clc
popa
repnz
nop
outsb
mov
or
add
insl
sub
fldl
and
test
das
adc
out
jns
js
jnp
adc
fstpl
push
mov
ret
mov
or
jge
adc
imul
cmpsl
rorl
pop
arpl
inc
mov
nop
pop
sub
push
test
inc
popa
ds
into
xor
cmp
aas
xchg
mov
lds
into
xchg
enter
xchg
xchg
test
in
loop
sti
dec
add
xor
or
lahf
add
dec
sub
sti
sub
inc
cmpsb
sub
stos
dec
lret
dec
pop
iret
push
lahf
add
aaa
sbb
movb
xchg
adc
shlb
xchg
or
sti
cwtl
mov
leave
addr16
and
cli
insb
dec
and
pop
fisttps
fstpt
fldenv
push
rcrl
mov
cwtl
fists
scas
jo
and
sbbb
movsl
jp
ret
pop
dec
push
mov
out
mov
ret
fs
imul
stos
out
subl
stos
shr
pushl
lcall
stos
push
fisttpl
add
pop
movsl
es
xor
push
addr16
pop
dec
outsl
mov
add
cltd
shlb
stos
and
jne
sbb
scas
dec
push
dec
pusha
dec
fnstcw
lcall
push
iret
shll
inc
adc
popf
cmp
aam
clc
sub
js
sub
or
ja
es
jb
xchg
mov
sub
mov
adc
rcrb
cmp
testl
pusha
push
cmc
xchg
mov
mov
pop
loopne
loope
add
mov
push
xchg
mov
push
inc
jl
outsl
pop
and
mov
repz
jae
popa
sub
arpl
fwait
leave
mov
clc
xchg
xor
mov
adc
sbbl
mov
fdivl
scas
ss
mov
dec
dec
in
lods
faddl
cli
out
cltd
jns
in
stos
gs
push
out
sub
jb
sbb
or
loopne
xlat
fcompl
mov
push
xor
ds
mov
lret
adc
sbb
mov
lds
add
sub
addr16
and
adc
xchg
add
lds
push
xor
push
lea
jl
loop
pop
push
add
adc
or
dec
and
nop
movb
sbb
out
cmc
sbb
lods
pop
add
xchg
pushf
mov
scas
add
jae
cmc
cmc
popf
dec
rorb
imul
pop
rclb
scas
adc
jmp
or
sbb
imul
jge
orb
fcoms
icebp
lret
sbb
std
sti
aam
push
out
cmpb
jecxz
leave
gs
sub
mov
stos
mov
cmpsb
mov
test
mov
jmp
push
adc
xchg
clc
xor
jmp
push
xchg
dec
loop
cmp
xchg
dec
pop
imul
inc
sarl
mov
aad
xchg
imul
mov
push
cltd
jle
aaa
out
imul
ret
aas
push
cmp
fs
ffreep
inc
add
es
adcl
lcall
into
sbb
jecxz
gs
dec
jp
push
jle
cltd
jo
rcl
fadd
add
aaa
mov
mov
rcl
hlt
jl
add
insb
dec
mov
push
hlt
mul
mov
cmp
sub
stos
dec
ficoms
js
shlb
or
sub
cmp
dec
mov
xor
mov
add
test
dec
jo
stos
movsb
push
das
jge
adc
movsb
in
add
xor
inc
aas
adc
mov
sbb
and
imul
movsb
stc
aas
push
add
pop
mov
xchg
add
movsl
rorl
loope
arpl
inc
push
sbb
cmp
rorl
aas
and
rorl
aas
fucomi
int3
add
xchg
dec
ss
push
jmp
mov
inc
lret
cmpsl
pop
pop
push
mov
test
imul
repz
sub
jne
loope
push
and
sbb
in
jl
inc
dec
ror
mov
and
rorb
pop
dec
scas
rcll
mov
push
push
add
fldenv
jo
fmull
xchg
lret
inc
lds
lret
stos
adc
sarb
mov
repz
mov
js
movsb
movsb
repnz
inc
jae
pop
in
into
mov
loope
and
add
mov
ss
xlat
pop
sub
mov
lret
movsl
gs
cs
mov
adc
lret
mov
jb
pushf
lea
dec
xchg
jb
or
push
into
adc
sub
scas
push
and
pop
add
mov
in
in
lret
add
add
aas
jnp
aas
pop
jmp
aad
je
shlb
enter
mov
pop
adc
pop
fisttps
cmp
mov
push
xchg
inc
xor
loope
pop
fs
mov
cmp
lods
sarb
imul
xchg
ja
cld
mov
dec
ljmp
mov
sbb
add
xor
xor
adc
sub
mov
clc
test
jle
sbb
lock
dec
cmp
lret
mov
fldcw
add
jecxz
push
cltd
sbb
xorl
jge
push
pop
jg
jge
stos
aas
jmp
ret
loopne
nop
mov
jne
testb
pushf
addb
mov
mov
inc
test
or
add
pop
sub
out
aas
lret
aaa
dec
int
popa
addr16
les
lds
sub
push
xor
jg
stos
push
mov
out
es
cmpsl
insb
aad
adc
or
push
les
jl
in
push
pusha
aas
outsl
sub
lret
inc
lret
add
pop
hlt
sub
mov
add
inc
inc
mov
inc
xchg
shrl
push
cli
adc
or
fwait
push
mov
jl
mov
xor
add
pop
ljmp
ljmp
pop
jno
pop
fnsave
nop
clc
cmpsl
enter
in
add
mov
jp
cmp
add
ror
inc
sub
add
in
dec
adc
cmp
mov
push
lods
test
outsb
lcall
stc
insb
push
ret
jge
fdivl
sbb
test
dec
jo
addr16
cmpsb
in
pop
shl
or
add
fs
jnp
in
push
xor
mov
enter
out
jecxz
xchg
jno
jae
inc
testl
sub
imul
je
out
jo
fcoml
sub
xchg
pop
xor
jne
mov
popa
fcompl
push
or
add
dec
fs
daa
mov
ret
addb
mov
repnz
pushf
pop
in
lods
filds
cli
fsubl
lcall
aam
cmc
xchg
test
ret
mov
mov
dec
incb
adc
fdivs
out
out
stc
inc
sub
xor
icebp
in
cld
pop
dec
mov
xchg
xchg
cmpsl
adc
test
in
fidivs
dec
pop
push
mov
mov
scas
mov
sti
nop
sub
cmp
adc
outsb
sub
push
fcmovnu
cltd
fdivr
and
imul
out
sbbl
push
std
push
sub
pushf
xchg
cs
in
dec
outsl
jae
or
pushf
or
das
push
ret
stc
cld
inc
and
dec
mov
fsubp
enter
sti
mov
add
test
pop
jge
mov
testl
aaa
mov
subb
jle
bound
lea
fadds
xchg
jp
push
sbb
aas
xchg
leave
add
aas
cmp
sbb
fdivrs
xorb
push
add
jae
jge
cmpsb
loop
jnp
pusha
xor
mov
sbb
or
jle
jo
sub
mov
fadds
aam
and
idivb
std
leave
add
and
mov
and
xchg
icebp
mov
leave
mov
mov
addr16
lds
ja
jge
je
xchg
push
cs
insl
inc
sbb
sub
movb
ss
and
sub
inc
out
cmp
mov
inc
mov
in
les
stos
push
lcall
jb
test
xor
mov
push
mov
push
rcrb
out
cmp
push
outsl
add
cltd
cwtl
fs
mov
ss
mov
fistpll
into
mov
sbb
sbb
jo
popa
xor
push
fmulp
pop
out
mov
jmp
sbb
fdivs
jbe
jg
lret
daa
push
cmpsb
shrb
inc
sbb
lcall
bound
mov
test
or
das
jmp
mov
clc
xor
push
aam
jno
xor
mov
xor
popf
or
push
or
add
add
mov
sub
jmp
adc
out
fisubrl
shll
xchg
pop
imul
data16
add
push
mov
and
mov
test
nop
xorl
fsts
hlt
and
jne
test
jl
outsb
cmp
xor
daa
ja
mov
mov
or
jne
lock
add
pushf
add
mov
insb
xor
sub
jmp
inc
aaa
jne
test
pop
loope
insb
testl
push
test
dec
or
cmp
loope
rcr
hlt
mov
jae
mov
sub
xchg
aaa
push
dec
cmp
xlat
jl
jae
rorb
addr16
sarb
out
jl
in
pusha
out
daa
add
loop
ljmp
lahf
sbb
insl
cli
mov
jno
ret
cmpsl
aad
add
mov
cmp
pop
scas
pop
stos
leave
stos
test
inc
xor
push
xlat
and
xor
or
and
pop
ljmp
mov
scas
pusha
adc
jbe
cli
cmp
js
cmp
repz
arpl
jbe
jns
and
fnstsw
push
out
jle
cltd
jecxz
xlat
xchg
push
leave
add
xor
mov
push
cmp
pop
cmp
jne
cmp
popf
sbb
lret
adc
xor
dec
js
and
rorl
or
and
mov
pop
cmp
out
sbb
sbb
jmp
popf
or
sbb
mov
je
out
stc
out
sub
stos
sub
xor
notl
pop
es
cwtl
loop
cwtl
dec
pop
outsb
push
fcmovnbe
aad
int
push
sarl
jecxz
push
jbe
les
out
les
lahf
or
and
push
mov
xor
xchg
rcr
nop
mov
mov
mov
sbb
cltd
xor
repnz
lods
repz
pop
or
mov
stos
inc
imul
repz
jb
mov
or
lcall
xchg
xor
inc
push
sahf
sbb
iret
push
and
add
insl
xlat
lret
enter
std
inc
xchg
aaa
fldenv
push
fwait
add
ret
stc
bound
pop
ret
mov
adc
pop
mov
jae
dec
mov
xchg
pop
jecxz
xorb
xchg
stc
jp
outsb
xchg
jmp
cwtl
testl
adc
insl
push
mov
repz
lods
sub
push
or
or
sbb
ja
cli
in
add
xchg
adc
mov
xchg
out
divl
lahf
sahf
rcr
ja
push
scas
cmpsl
loop
in
add
cld
dec
iret
xchg
jb
movl
mov
aas
repnz
sbb
outsl
xchg
dec
jle
dec
pop
jb
jns
das
lcall
mov
aad
mov
bound
outsb
sub
stos
xchg
test
cwtl
add
imull
lods
inc
mov
bound
mov
imul
mov
outsb
mov
push
or
sbb
sub
repz
mov
lock
mov
push
loop
cmp
jno
dec
sbb
mov
mov
mov
fildl
jbe
push
push
xor
xchg
push
adc
xchg
gs
cmp
xor
movsb
mov
pop
mov
jmp
cltd
xor
and
pop
adc
sub
hlt
push
movl
repz
cmp
ret
loopne
pusha
mov
jno
add
cmp
dec
mov
push
js
das
inc
das
mov
jbe
adc
push
call
cs
cs
xchg
cwtl
xor
dec
xchg
xor
sub
ja
js
stos
fnsave
hlt
imul
stos
into
mov
xor
dec
and
mov
sub
lcall
jnp
cmp
push
pop
je
add
ljmp
mov
adc
xlat
or
rcr
xchg
out
mov
push
movsb
sbb
mov
aam
sub
xlat
cld
ja
push
cmp
repnz
in
add
popf
lods
imul
mov
push
pop
add
sti
test
aad
xchg
cmp
mov
daa
cmpsb
popa
decl
outsb
push
rclb
adc
scas
shrb
sub
ljmp
or
push
jbe
pop
gs
and
mov
out
mov
or
cwtl
lods
jge
sar
add
inc
negl
movsb
jg
mov
scas
pop
adc
jmp
inc
scas
lcall
adc
push
dec
push
jns
mov
sbb
fst
and
jne
lds
movl
inc
inc
adc
jge
fwait
aam
repnz
xor
imul
sbb
push
cmpsb
frstor
and
popf
cli
incb
dec
dec
cltd
fcmovnbe
mov
jb
inc
mov
sub
mov
xor
sbb
sahf
data16
es
lock
mov
cmp
out
adc
sub
fwait
cltd
mov
out
stc
cmp
cmpsl
inc
jl
stos
jecxz
xor
push
mov
arpl
adc
sbb
xor
stos
outsb
mov
xchg
and
test
adc
push
out
insl
mov
in
out
add
lods
or
lahf
icebp
or
loopne
rcll
mov
push
lds
push
pusha
pop
arpl
sub
add
ss
stc
ljmp
out
xor
inc
fistps
sub
jnp
dec
fdivrl
mov
shll
pop
add
inc
fwait
sbb
mov
in
adcb
jg
aad
sarl
xchg
cmpl
fnstcw
xlat
jnp
cld
mov
fimull
adc
xchg
sti
rcrl
je
es
into
in
push
dec
je
xchg
sbb
cmc
iret
sbb
mov
std
inc
daa
fdivl
fisttps
into
pushl
cmp
jecxz
push
adc
mov
call
out
xchg
cmp
mov
add
mul
test
inc
out
fsubr
rcl
dec
cmpsb
cwtl
cmp
mov
mov
lahf
stos
or
jecxz
mov
inc
and
xor
jbe
sbb
fnstsw
mov
mov
rorb
dec
jge
mov
out
jns
jbe
lock
pop
andb
xchg
jl
adc
and
aad
popl
cmpsb
dec
repz
jle
cmp
bound
aam
jl
sbb
mov
xchg
mov
sub
mov
out
scas
in
scas
push
lcall
les
cld
or
and
insb
push
in
int
in
out
dec
imul
xor
or
bound
faddl
lds
xchg
xchg
jmp
lea
popa
aad
push
enter
cmpsb
inc
jbe
in
inc
shll
or
cmp
aaa
push
mov
sub
fsubs
mov
insl
xor
lock
mov
shl
std
imul
pop
pop
scas
inc
jg
inc
add
add
jl
in
inc
push
ret
cmp
out
cmp
data16
adc
mov
data16
into
mov
xchg
clc
movsl
add
push
add
mov
and
and
lods
test
punpckhbw
lret
ret
xor
dec
xchg
int3
into
or
jnp
jp
cmp
addr16
out
xchg
psubd
dec
subl
or
mov
scas
or
adcl
imul
lea
andl
mov
push
push
xchg
xchg
push
stc
dec
mov
cmp
jo
cmp
iret
jne
jne
dec
jns
sub
call
iret
push
mov
outsb
subl
ds
sub
inc
repz
bound
jecxz
pop
fwait
insb
insb
dec
jns,pn
gs
les
aad
inc
lods
push
aam
fwait
movsb
mov
rolb
aaa
movb
xor
stos
addr16
lods
dec
and
mov
scas
pop
cld
cmp
cmp
fnsave
jns
mov
jo
xrelease
dec
xchg
gs
in
dec
pop
and
cs
mov
aam
xor
ds
jg
ja
push
frstor
cmp
mov
enter
fiaddl
sbb
cs
mov
xor
or
mov
imul
int3
repnz
pop
jae
lret
es
in
fldenv
ret
lret
push
cli
popf
cmp
dec
aas
pusha
pop
sahf
jmp
lds
jns
mov
mov
fimuls
in
mov
adc
cltd
inc
cs
or
imul
xor
int3
xchg
push
rcrb
mov
cld
mov
sahf
repz
mov
aam
sahf
lcall
test
rcrb
pop
pop
out
push
outsl
cs
push
mov
fcomip
jle
pop
xchg
mov
push
jp
adc
sub
cmp
shlb
mov
in
pop
and
xchg
or
push
cmc
and
lcall
mov
xor
test
aas
insl
aaa
jl
sub
push
int
scas
rcr
xchg
sarb
pop
outsb
out
or
dec
jae
sub
pop
mov
sub
push
xchg
xchg
xchg
xor
add
jae
mov
ja
lcall
xchg
lods
adc
mov
dec
lds
or
arpl
push
arpl
adc
cltd
f2xm1
stos
push
push
addr16
inc
sub
push
dec
xlat
stc
cmp
aad
inc
dec
add
dec
inc
rorl
out
rcl
xchg
jnp
out
lea
cmp
add
lcall
xchg
cld
int3
cmp
fwait
inc
sbb
mov
or
jae
mov
mov
push
add
outsl
xor
dec
mov
xor
lods
and
js
pop
push
pop
add
push
scas
mov
sti
xorb
fldt
add
pusha
sbb
mov
mov
jo
xchg
mov
mov
push
dec
outsl
pop
mov
pop
test
inc
mov
xchg
dec
push
push
fsubrl
ja
aam
test
mov
jns
pop
push
mov
daa
jae
lods
sbb
in
inc
sbb
add
arpl
cmp
mov
out
fdivrs
aam
out
xor
cs
in
stos
cwtl
jne
inc
popa
cmp
out
add
lods
add
ficoml
inc
sarl
mov
add
mov
lret
subl
repnz
lcall
shl
adc
and
imul
sbb
sub
fmull
fldl
xchg
pushf
test
fidivs
xchg
jne
dec
mov
subb
jmp
xor
pop
jle
lods
or
fiadds
negl
mov
jbe
out
push
pusha
fildll
cmp
mov
or
xchg
and
test
leave
push
aaa
call
pop
out
or
negl
rcll
xor
push
cmp
inc
pushf
aad
dec
inc
std
xor
jmp
mov
mov
imul
mov
or
ljmp
add
ss
test
xchg
out
sbb
xlat
add
add
xor
mov
jmp
jae
dec
mov
or
iret
push
push
pop
gs
loop
les
add
mov
mov
loopne,pn
xchg
mov
inc
pop
xchg
jge
jb
cld
pop
fildl
imul
pop
mov
ds
insb
push
jle
mov
mov
pop
fmuls
push
dec
lahf
iret
inc
insb
jmp
mov
xor
add
xchg
lret
repz
out
out
push
add
test
icebp
test
stc
cmpsl
das
leave
in
out
test
fimull
mov
push
inc
cld
ficompl
inc
ret
sbb
mov
shr
pop
add
shrb
jecxz
sub
cmp
lret
mov
das
dec
out
stos
insl
std
call
pop
mov
mov
cmp
mov
js
aam
jno
adc
lds
je
ja
loop
gs
push
les
push
mov
aad
or
push
adc
push
lret
sarb
jle
inc
js
movsl
incb
cmp
call
mov
sbb
sbb
cld
ret
inc
dec
mov
push
mov
mov
mov
fisttpl
and
adc
adc
lahf
sbb
mov
sub
and
fstpl
xor
pop
jns
sarl
mov
mov
dec
mov
mov
shrb
sbb
shr
pusha
shlb
pop
adc
cmp
sub
popa
stc
dec
fdivrs
push
in
push
repz
int3
xchg
mov
xor
in
mov
sbb
mov
push
mov
jp
mov
sub
ret
cmp
push
push
lods
lea
mov
icebp
inc
aas
andl
mov
mov
add
iret
mov
daa
dec
mov
adc
test
movsb
jmp
jl
test
cmp
lods
aad
or
xchg
or
nop
out
or
movsl
xor
loop
xor
ljmp
aad
jmp
popf
or
add
dec
pop
stos
push
fisttpll
pop
incl
into
movsb
mov
rcrb
push
int3
fsub
aam
into
enter
mov
cmp
insb
adc
bound
xor
mov
lret
gs
dec
mov
scas
sti
enter
pushf
xor
shll
mov
add
cmp
pusha
sahf
insb
sbb
dec
mov
sub
lret
addl
fdivrp
pop
mov
cli
mov
repz
xor
imul
fucomi
je
mov
inc
cmp
sbb
sbb
mov
xor
adc
cmp
pop
jge
fiaddl
into
in
xchg
mov
push
or
les
cmpsl
push
in
mov
aas
jnp
dec
xchg
ret
out
cmc
mov
andb
movsl
dec
push
jb
test
jp
mov
sub
pop
sbb
scas
out
pop
lds
idivl
dec
fdivs
mov
movsb
inc
add
popa
pop
add
imulb
rorb
push
ror
push
xchg
outsb
aas
popa
jl
xlat
js
pop
jle
lcall
or
mov
sarl
ret
cmp
sbb
jmp
adc
adc
ljmp
orb
cmc
push
rorl
test
pushf
fldl
clc
mov
add
jns
adc
jecxz
jg
loope
mov
cmp
sbb
out
inc
jbe
mov
xor
int
scas
pushf
mov
push
int3
add
loopne
dec
jb
shrb
add
add
adcl
das
repnz
push
out
xor
xor
xchg
jns
sub
cmpsl
cmp
pop
in
xchg
repnz
pop
ss
repnz
sar
scas
test
push
cltd
or
subl
inc
mov
andb
sbb
dec
leave
jl
dec
push
jl
in
mov
add
aad
pop
jmp
sbb
xor
cmp
mov
in
mov
dec
add
jno
jns
loope
dec
xchg
int
bound
pop
pop
pop
test
mov
hlt
rcl
repz
ror
add
mov
ror
ret
popf
xchg
rclb
push
mov
mov
out
or
imul
xchg
in
mov
cld
mov
fiadds
pop
pop
mov
scas
cld
add
call
sub
test
pop
add
push
sbb
pop
in
test
test
testb
cmp
out
nop
jbe
movsl
je
mov
stc
adc
popa
fdivl
lods
lock
int3
inc
imul
into
cmpsl
popf
lods
dec
adc
pop
inc
aaa
cmp
cmp
cmpb
bound
gs
ljmp
adc
cli
mov
fildl
xchg
stos
pop
xchg
adc
sbb
push
jg
mov
and
sub
pop
je
syscall
push
mov
mov
inc
ret
insb
sub
xchg
adc
sub
fdivr
xlat
and
rorl
mov
adc
or
push
hlt
and
movsb
iret
test
test
jge
add
repz
xor
movsl
and
mov
insb
cmp
push
pushf
adc
das
push
jb
xor
in
roll
pop
adc
cmpsl
mov
cmp
adc
dec
call
xor
pop
rol
int
pop
cld
sub
ret
out
sub
add
or
fstpl
xchg
dec
in
jl
mov
dec
jo
mov
mov
jge
mov
inc
inc
hlt
repz
sbb
xchg
or
pop
fnstcw
xor
mov
inc
fiadds
cmp
cltd
xchg
dec
sahf
loop
and
push
imul
jmp
mov
inc
push
outsb
fcmovb
xor
lahf
das
out
ret
dec
or
mov
pop
es
pop
lods
sbb
push
jle
xor
leave
dec
ja
cltd
lcall
out
ret
roll
out
stos
adc
out
adc
push
mov
imul
roll
jno
jne
pop
outsl
arpl
enter
dec
pusha
xor
xchg
mov
xchg
mov
push
xor
rcrl
mov
dec
mov
add
mov
add
movsb
xchg
imul
pop
or
in
inc
cwtl
and
mov
xchg
clc
pop
rcrl
inc
negl
cmp
mov
mov
stos
push
faddl
aaa
push
mov
js
data16
mov
dec
scas
lret
sbb
shl
shlb
lret
data16
ret
repnz
in
out
mov
dec
jle
jmp
or
ret
out
add
and
inc
call
sub
jb
xchg
xor
inc
cli
pop
mov
push
and
mulb
jno
cmp
jmp
sub
popa
outsl
push
push
push
stos
xchg
pop
mov
das
cmpsl
add
fidivs
leave
add
hlt
mov
daa
fildl
inc
pop
rcl
sub
ret
add
inc
xchg
lea
test
xchg
adc
repnz
cmpsb
fnstenv
lahf
adc
cwtl
inc
cmpsb
enter
scas
out
mov
bound
add
push
in
mov
shl
in
jp
arpl
cmp
fsubs
or
mov
inc
or
in
inc
into
pop
int
mov
cwtl
in
xchg
js
out
push
outsl
cmp
les
sti
and
push
add
lret
je
pop
jecxz
test
dec
pusha
loopne
push
adc
jge
je
cmpsb
pushf
sub
ret
push
mov
push
aad
or
mov
sbb
stos
loope
dec
ds
dec
rolb
movsb
leave
fbld
fcomps
push
cld
jp
mov
or
mov
mov
fidivrl
xchg
shll
adc
and
aaa
cmp
mov
or
fwait
dec
out
cmp
mov
aam
jp
aad
or
push
fidivrs
jg
ja
mov
hlt
sub
push
inc
sub
mov
bound
sub
xor
frstor
int
xchg
or
cld
lds
sbb
dec
cmp
into
jle
stos
int
testb
mov
add
and
add
xor
scas
xchg
push
push
rorb
ret
pop
jae
and
arpl
adc
cmpb
mov
pop
popa
pop
aad
repnz
shrl
into
ja
sub
ja
sbb
jae
decb
lds
je
push
rorb
test
sbb
inc
add
mov
jecxz
pop
outsb
push
jnp
pop
jmp
andl
or
or
cmpsl
dec
add
pop
adc
xor
adc
xor
mov
mov
mov
push
pop
in
and
call
pop
or
divb
lret
testb
pusha
in
xor
mov
lret
xlat
movsb
mov
sti
add
out
test
call
pop
sbb
dec
lods
add
inc
jge
jne
adc
pop
roll
icebp
and
lea
add
es
mov
mov
and
in
cmpsl
aas
out
loop
scas
insl
and
mov
das
inc
and
xchg
lods
in
inc
add
or
cmpl
hlt
imul
lods
inc
dec
aam
popl
ret
fisttpll
cmpsb
icebp
or
nop
sub
addb
sbb
sahf
sahf
into
lahf
push
int
frstor
jae
int3
cmp
out
and
mov
icebp
sub
stos
outsl
mov
push
pop
xchg
arpl
inc
add
shlb
push
pusha
xrelease
aad
mov
fldl
pop
jmp
orb
icebp
dec
mov
cmp
out
pop
add
cmpsl
mov
mov
mov
push
sub
cmp
in
add
pop
movsl
sbb
inc
push
out
aad
cli
mov
inc
cmc
push
or
outsb
repz
jae
outsl
xor
rol
dec
pop
pusha
in
push
jmp
int3
jae
mov
jbe
xor
fcmovu
sub
cmp
adc
rolb
cltd
nop
jge
jmp
fisubrl
sar
shll
mov
rclb
sub
jns
jns
adc
in
out
mov
test
clc
push
xor
loope
push
jmp
aas
and
xchg
cmp
jns
xor
mov
adc
dec
xchg
jnp
adc
mov
lds
das
insb
lods
mov
mov
dec
sub
cli
adcb
test
fisttpll
inc
cmp
xor
stos
enter
inc
shl
cs
or
icebp
ret
popf
test
cmpsb
or
je
xchg
fisttpl
std
jb
pop
pop
stos
sub
sbbb
adc
cmpsl
xor
push
jae
push
ret
lret
inc
jae
rcrb
cli
sbb
pushf
outsb
adc
ret
pushf
mov
xchg
int
lret
cmp
stos
xchg
movsl
xor
jbe
pop
nop
pop
int
rcr
repnz
cmp
sbb
mov
movsb
bound
jne
dec
jnp
sahf
fstl
xlat
aad
popf
mov
lahf
mov
fs
mov
sbb
cli
and
jae
dec
negb
dec
jmp
gs
test
clc
mov
enter
mov
aas
inc
or
pop
mov
sbb
dec
mov
pop
xchg
push
xchg
jecxz
xchg
scas
and
lret
adc
dec
ja
push
or
sub
jl
les
lret
jp
or
mov
mov
decb
pop
pop
inc
inc
jl
cmp
cmpsl
cmpl
imul
data16
or
and
sub
stos
fidivs
test
cmp
inc
sub
fs
pop
popa
push
dec
mov
movsb
jno
dec
mov
pop
lods
sbb
pop
xor
jns
lods
cmp
dec
inc
push
cs
fwait
adcb
lods
mov
sub
xor
pop
lods
or
dec
push
xchg
cli
dec
xchg
mov
movl
jbe
push
or
xchg
int
xor
mov
pushf
je
pop
sahf
andl
jmp
ret
insw
pop
cs
lea
outsl
daa
aam
or
popf
add
pop
lcall
xchg
lret
inc
sub
sbb
dec
sbb
scas
movsl
cmpl
and
orb
push
push
imul
sbbl
push
mov
and
and
fcompl
outsb
mov
jmp
sbb
mulb
cld
leave
ret
pop
mov
push
jecxz
push
adc
fwait
adc
ljmp
or
notb
lods
pop
jo
test
adc
jnp
sahf
mov
inc
lods
adc
ret
or
jmp
arpl
inc
inc
mov
cmp
xor
xchg
clc
push
fisubrl
pop
sbb
mov
movsl
dec
lock
mov
xchg
lret
push
mov
mov
shlb
sbb
jno
jae
fs
je
mov
or
aam
addl
xor
cmp
mov
out
test
sarl
jno
fwait
and
mov
out
mov
jp
mov
mov
addr16
sbb
cmp
mov
mov
cmp
and
out
sub
inc
mov
sbbl
xlat
cmpsb
and
lret
lret
lock
cwtl
push
arpl
pop
addl
outsb
jae
jo
dec
inc
jno
xor
xor
push
sub
ljmp
inc
mov
mov
dec
test
jg
out
add
scas
and
add
pop
insl
int3
fisttpl
ret
mov
xchg
frstor
gs
out
aad
mov
adcl
fdivp
bound
ljmp
outsb
push
add
imul
jae
sbb
sahf
pop
inc
xor
push
mov
cmp
aaa
jae
jge
loop
clc
xchg
inc
gs
and
lahf
and
arpl
lods
xor
test
push
lahf
imul
pop
or
pop
dec
loope
jecxz
loope
sub
aas
xchg
push
and
mov
mov
aas
push
pop
push
or
xchg
pop
out
or
shr
aaa
stc
sub
cltd
rorl
dec
cmp
popf
add
xchg
pop
int
mov
ffreep
mov
test
add
pop
lret
cld
lret
test
dec
stos
pop
fisttpll
mov
repz
xchg
clc
outsl
adc
xor
test
andl
cmpsl
in
push
inc
adc
out
add
pop
add
mov
addl
adcb
xor
mov
pop
cmpl
stos
fwait
enter
outsl
jle
arpl
fs
sub
push
jmp
add
mov
mov
inc
mov
inc
xor
add
out
add
sub
cmp
add
lock
xchg
inc
test
xchg
rcll
arpl
aas
add
in
insl
inc
mov
push
and
loope
dec
jo
loop
push
repnz
leave
cwtl
xor
out
leave
fsubrl
ja
pop
fucomi
mov
xchg
pop
push
mov
jp
in
xor
shl
push
test
sub
push
xchg
cmpsl
mov
push
mov
in
sbb
jl
pusha
xchg
mov
inc
movl
xor
jne
cmpsb
loopne
push
adc
jo
lcall
sbb
cmp
mov
cmp
stos
lods
movsb
sbb
dec
push
les
inc
imul
dec
inc
jecxz
sbb
cmp
mov
mov
sbb
and
pop
mov
out
sti
pop
mov
rol
mov
xchg
movsl
sub
jecxz
imul
lret
scas
divb
lcall
dec
sub
decb
ds
aas
add
sbb
push
jno
push
adc
test
xor
mov
xchg
test
test
fmuls
xchg
clc
ret
push
sbb
imul
and
inc
repz
shrl
ds
sbb
mov
pop
scas
and
mov
inc
mov
into
dec
add
cmpb
push
adc
adc
aad
mov
inc
push
jecxz
or
pop
rol
cmpsl
cmp
push
xor
f2xm1
aad
sbb
loope
cmp
dec
sbbl
jno
dec
test
sahf
in
pop
pop
mov
rcrb
and
fisubl
shlb
lret
in
inc
push
pop
xor
shlb
in
ret
mul
lock
filds
dec
jns
cli
int
inc
push
dec
loopne
xchg
aad
mov
in
hlt
jae
inc
xor
or
add
mov
cmp
pushf
push
aaa
sarb
rol
pop
cmpsb
push
bound
aaa
fsubl
test
outsb
jb
fmulp
xchg
dec
mov
insl
aas
hlt
ljmp
sbb
shl
in
fisubl
xlat
and
rolb
in
mov
add
pop
insl
mov
jle
mov
aad
test
fs
nop
push
repnz
andl
rolb
das
cs
nopl
nop
lds
or
in
jg
jle
sarb
mov
or
in
or
mov
inc
test
shll
bound
push
loope
cltd
jbe
mov
pop
mov
subb
or
stos
fisubrl
xor
jbe
loopne
scas
dec
pusha
mov
bound
xorb
cmp
lret
and
in
lods
movsb
repz
lahf
shr
jg
ljmp
mov
xchg
pop
jmp
mov
push
ss
loop
into
aas
add
xchg
jae
loopne
jb
jmp
lea
cmpsb
movsb
jns
adc
or
jbe
add
cmpsl
dec
aam
add
adc
pop
rcrb
inc
lcall
or
xchg
dec
mov
rep
cmpsl
add
mov
lock
sahf
in
pop
jnp
ds
ret
pop
sbb
inc
mov
pop
incb
fldenv
movsb
add
cmpsl
stc
mov
push
in
cs
fs
insl
inc
xchg
and
dec
mov
inc
and
lea
arpl
sub
aad
pop
inc
stos
call
pop
mov
xchg
push
push
hlt
arpl
ja
aas
cld
xchg
sbbl
add
ret
pop
test
xchg
mov
sti
pop
mov
push
into
inc
push
jno
in
ljmp
out
fisttps
push
jns
push
or
call
test
jns
cmp
fiadds
jns
cmp
sbb
popf
sbb
fiadds
xchg
insb
dec
ror
lret
mov
dec
out
scas
add
and
fbstp
sbb
lods
bound
mov
std
loop
pop
int
lea
pop
mov
mov
test
test
cmc
sub
cmp
fildl
nop
andl
xchg
scas
lods
mov
aad
cli
adcl
pop
push
mov
lods
mov
add
lds
data16
cld
xor
cwtl
xchg
pop
loop
data16
add
je
aas
adc
jne
mov
enter
sti
outsb
into
pushf
or
xlat
mov
ja
inc
lret
add
xchg
movsb
gs
daa
and
xor
popa
mov
aad
jae
dec
lcall
mov
dec
mov
test
mov
mov
aaa
sub
in
lcall
sarl
filds
pushf
sub
dec
daa
movsb
popf
mov
mov
lret
loopne
cld
aam
jecxz
jns
mov
insl
arpl
iret
mov
popa
push
push
add
jp
adc
je
mov
mov
or
mov
jp
cwtl
push
mov
das
dec
mov
aam
jp
jne
mov
popf
pop
xor
lods
popa
sub
adc
pop
xchg
hlt
mov
loopne
stc
stos
iret
sub
pop
mov
int
mov
mov
inc
sbb
mov
dec
fimuls
in
inc
aaa
push
dec
mov
pusha
xchg
stos
dec
adc
adc
mov
dec
in
cmp
dec
mov
ret
loop
inc
or
rolb
lcall
enter
iret
adc
adc
imul
jbe
aas
mov
std
jecxz
and
cmpsl
xorb
cmp
xchg
andb
xor
dec
dec
popf
js
add
sbb
mov
xor
clc
push
and
and
inc
pop
out
pop
cmp
gs
mov
orb
mov
or
shll
test
inc
bound
lcall
out
dec
xchg
push
xchg
xchg
jne
dec
xor
mov
dec
cmp
cmp
test
or
jno
out
pop
jg
hlt
repnz
cmp
in
frndint
mov
push
into
sbb
jle
aad
movsl
mov
mov
cmc
push
pcmpeqw
jbe
add
ds
inc
outsl
sub
lds
push
imul
jge
jnp
pop
adc
push
sbb
pushf
cmpsl
xor
leave
int3
lahf
xchg
mov
mov
shll
test
bound
xchg
pop
xchg
inc
pusha
pop
mov
mov
inc
push
jb
lds
adc
bound
mov
sarl
push
jbe
aam
mulb
clc
xor
adc
sub
es
mov
mov
mov
cmp
aas
mov
ja
mov
addr16
push
stos
sti
mov
jae
jb
cmpsl
js
rorb
repz
pop
js
sahf
push
cwtl
idivl
mov
rcrl
test
mov
sbb
ja
jae
es
decb
fsubr
cmp
xchg
imul
aaa
adc
mov
aas
dec
fs
out
mov
insb
inc
aam
xchg
loope
dec
ds
popa
xchg
fcompl
xor
add
pop
fildll
and
add
in
jmp
jnp
insl
mov
adc
loop
stc
jle
xchg
cmp
pop
mov
push
shl
add
shlb
lods
lock
jmp
movsl
arpl
cmp
sub
xor
sub
jo
mov
adc
and
mov
lods
movsb
test
cmpxchg
addr16
add
ret
sti
push
xor
jns
shr
mov
mov
stos
outsb
popf
dec
jne
js
inc
and
outsb
mov
inc
or
repnz
js
mov
inc
lods
jg
and
cwtl
test
clc
jg
sub
xchg
loopne
imul
mov
data16
gs
ficompl
imul
stos
or
leave
pop
xchg
bound
adc
sar
mov
mov
popa
orb
call
pop
dec
xor
inc
add
test
stos
loope
out
sbb
addb
xor
jmp
inc
scas
cmp
add
imul
add
nop
pop
int
sub
push
fcoml
out
fdivrs
movsl
or
jno
call
jg
sub
sub
imul
pop
rorl
pushf
sar
leave
imul
mov
xor
movsb
inc
cmp
cmp
dec
sbb
push
lods
notl
xor
push
icebp
or
movsb
lock
adc
adcb
sbb
mov
mov
adc
das
jp
mov
popf
xor
lock
fisubrs
xchg
adc
incl
dec
scas
pop
mov
adc
jo
faddl
in
mov
push
shrb
pop
mov
inc
mov
cltd
sbb
mov
sbb
dec
mov
or
or
aam
mov
xor
mov
repz
dec
cmp
adc
xor
loop
jae
or
jecxz
push
jge
or
shlb
adc
dec
or
sbb
shr
and
cmp
mov
mov
or
mov
inc
nop
in
test
push
pop
xor
daa
imul
clc
jbe
mov
mov
aad
lret
leave
popf
repz
mov
call
clc
mov
cmp
xor
xlat
hlt
inc
inc
rep
jge
cmc
mov
call
push
push
lds
in
test
test
int
lods
shrb
sub
in
test
jbe
repnz
inc
jge
stos
xchg
mov
mov
mov
ss
push
mov
dec
lret
scas
push
jno
movsb
dec
inc
mov
xor
adc
mov
mov
fwait
cmpsb
int3
adc
nop
mov
cmp
out
or
jecxz
pusha
loop,pt
sbb
out
out
adc
lods
fildl
inc
loop
mov
lods
or
in
mov
test
mov
or
pop
xchg
adcl
gs
into
jnp
add
mov
imul
push
xchg
xor
fistpl
mov
cltd
push
insl
sbbb
and
ss
cwtl
pushl
adc
movsl
pushf
testb
lods
and
xlat
jae
mov
xor
or
lcall
leave
ret
adc
cmp
push
mov
aad
les
jg
push
cmp
dec
mov
mov
lock
sahf
xor
mov
ret
fsts
imull
loopne
jg
mov
pop
push
lods
out
pop
pop
test
clc
aad
or
das
pop
sbb
aad
lahf
jg
add
loop
jmp
shll
sub
aaa
loope
xchg
adc
test
data16
aam
jns
adc
jge
int3
outsb
push
mov
mov
cmc
pushf
xchg
or
xchg
adc
pop
or
pop
lods
adc
fs
ss
add
mov
lret
sbb
lods
into
inc
ret
pop
mov
movb
scas
pop
and
cmp
in
test
sub
lret
sahf
test
and
cmp
in
jecxz
ss
jae
pushf
mov
cld
lods
daa
ja
mov
stos
loopne
add
lods
xorl
pusha
imul
clc
sub
shll
lret
mov
and
adc
dec
pop
xchg
out
push
xchg
mov
jnp
cmp
mov
mov
rcrb
ljmp
push
push
cltd
hlt
sub
dec
and
ja
adc
fwait
jmp
lods
jecxz
arpl
pusha
idiv
mov
mov
aam
pushw
add
ljmp
inc
mov
add
lods
and
arpl
pop
icebp
sarb
in
mov
jmp
fstpt
mov
push
mov
sti
sub
stos
push
add
cld
xchg
mov
or
in
push
flds
arpl
mov
out
sbb
ffreep
test
lret
aad
xor
icebp
dec
stos
daa
and
jg
mov
in
imul
mov
popa
stos
jp
xchg
cwtl
hlt
xlat
call
lahf
cmp
stos
aas
lea
pop
enter
push
xlat
arpl
pop
push
lret
and
adc
cmp
adc
mov
in
movsl
push
mov
mov
rcrb
aad
sahf
lods
out
test
lcall
test
das
pusha
pop
int3
adc
inc
lret
daa
mov
movsb
xchg
xlat
outsl
cmp
cwtl
fcoml
hlt
loopne
push
xlat
inc
or
jnp
pop
stos
imul
aaa
std
pop
out
push
imul
inc
aam
push
fldt
sub
mov
adc
pop
sub
push
dec
les
outsb
lods
and
and
stos
mov
lret
jmp
jb
cmpsl
lret
inc
push
sbb
jp
or
test
lahf
cmp
rclb
into
fs
xor
lea
cmp
ds
pushf
push
sbb
test
mov
pop
pop
jnp
cli
or
rclb
imul
jmp
mov
pop
and
mov
rcl
fsubl
loop
pop
lods
jge
imul
or
jp
mov
movsb
je
inc
cmp
cli
jecxz
adc
and
int3
sub
std
pop
enter
lret
mov
hlt
push
xor
jp
mov
dec
inc
sub
mov
xchg
adc
shl
xchg
sub
push
call
sub
mov
stc
das
pop
popa
in
in
out
cmp
xor
mov
xchg
xor
sbb
and
enter
popa
aad
notl
aam
in
mov
data16
jns
scas
sbb
jns
loop
sbb
push
or
pop
lods
or
std
add
and
je
add
dec
lret
jp
dec
rolb
mov
ret
and
lret
push
loopne
sbb
outsb
and
xor
je
sbb
add
icebp
lcall
add
je
pop
mov
imul
push
rcr
jmp
add
mov
xor
xchg
shrl
mov
mov
mov
mov
pop
pop
loopne
cld
cltd
int
adc
mov
xchg
sub
sbb
cmp
xchg
lods
xor
and
pop
repz
pusha
push
mov
sub
push
mov
xchg
call
sahf
je
mov
testb
scas
cmp
aad
test
out
dec
test
pushf
and
adc
push
jl
push
rorl
inc
adc
cs
enter
pop
lret
pop
jb,pt
sbb
shl
jmp
mov
and
jnp
or
js
clc
mov
nop
test
sub
jg
inc
sbb
mov
repnz
stos
movsb
into
jmp
in
and
stos
inc
int
bnd
call
add
pop
push
jge
mov
xchg
and
mov
jne
cwtl
mov
fs
lcall
stc
xchg
dec
jbe
jg
jecxz
mov
mov
push
int
cmp
shlb
mov
push
push
fsubs
loop
xor
sahf
pop
xchg
jno
pop
inc
adc
dec
adcl
stc
adc
pop
xchg
jo,pt
inc
mov
mov
aas
int
enter
add
adc
js
insb
push
sbb
loope
xor
jne
loop
popa
xlat
and
mov
cmp
sbb
or
lahf
xor
adc
sbb
xchg
or
js
cli
ret
push
sbb
push
cmp
lea
mov
test
push
mov
jp
in
pop
pop
and
lock
je
cmp
inc
pop
addb
jecxz
push
xchg
adc
and
in
adc
in
xchg
gs
push
out
lds
ljmp
push
add
mov
inc
xlat
sub
ljmp
outsl
adc
cmp
movsb
imul
mov
pop
out
lret
pop
fstpl
iret
bndldx
pop
sbb
xchg
dec
jge
sbb
jns
sub
pop
sbb
mov
cmp
cmp
loopne
jecxz
andl
cmc
jge
je
cs
test
daa
jo
testl
pop
dec
nop
cmpsl
aaa
test
push
dec
ljmp
enter
mov
fst
and
lea
insl
add
mov
mov
movsb
fstl
pusha
fisttpl
fld
mov
repz
test
insl
loop
iret
push
daa
andb
mov
or
jo
and
cmp
notb
mov
mov
xor
mov
mov
and
push
arpl
pushw
adc
mov
add
xchg
ljmpw
out
xorl
cmpsl
inc
pop
dec
pop
dec
lea
pop
stc
clc
push
dec
rcr
mov
das
in
add
lock
repnz
popa
mov
hlt
mov
lret
cmpb
mov
add
imull
jmp
push
lahf
sbb
adc
aad
movsb
jle
push
or
push
loope,pn
popf
pop
int3
sub
loope
and
jle
in
popf
fimuls
test
xchg
cld
cmp
dec
imul
mov
xor
daa
fs
adc
lock
loope
xchg
inc
mov
lahf
leave
mov
lods
dec
pop
pop
add
fwait
mov
inc
fmull
inc
pop
or
bound
in
jmp
mov
int
lods
xchg
mov
add
out
jbe
push
sub
mov
jbe
push
cmp
or
mov
pop
insb
int
bound
imul
lret
adcb
sbb
cmp
call
addr16
sbb
aam
push
xor
cld
rclb
scas
popf
jnp
ds
push
dec
insb
mov
or
outsl
or
packssdw
and
fnsave
jmp
xchg
jnp
mov
sahf
pop
xlat
into
jmp
pop
and
imul
outsb
hlt
sub
push
cltd
repnz
or
loope
sub
xlat
cmp
and
insl
outsb
inc
mov
dec
lock
sahf
mov
xorb
lods
xlat
aad
cmc
bound
push
sti
and
lods
ror
pop
in
jle
sub
xor
ss
aam
shll
jo
nop
in
inc
sbb
fwait
push
hlt
scas
nop
inc
xchg
jns
mov
push
test
and
or
push
jae
in
mov
fs
fbstp
add
jg
sarb
movsl
and
clc
ljmp
dec
mov
dec
sarb
mov
scas
push
shlb
mov
shl
fs
idivl
mov
inc
pusha
in
sbb
cmpsb
pop
popl
push
sbb
fsubrs
int3
mov
jecxz
jb
les
push
insl
dec
lret
dec
add
jae
push
fidivs
sub
mov
sbb
or
xchg
inc
push
jo
mov
mov
std
mov
mov
xor
cmpsl
test
shll
out
push
cmpsl
cmp
enter
or
jle
mov
or
lock
out
mov
sub
movsb
inc
fwait
xchg
icebp
aad
adc
cltd
lods
and
aaa
pop
fucomip
or
inc
or
dec
xlat
es
sbb
cld
into
stos
mov
adc
cli
xchg
cmp
cmpsl
dec
inc
movsb
sti
and
mov
aam
mov
cmp
cltd
sahf
pop
les
lock
adc
mov
inc
outsl
call
mov
cwtl
stos
sbb
or
flds
xorb
orl
or
inc
add
xchg
movsl
jg
movsb
ds
aas
into
pop
jg
insb
fucom
sub
mov
ja
mov
sti
js
or
sahf
shll
inc
clc
fildl
scas
add
sbb
jl,pt
repnz
in
nop
push
jno
pop
inc
add
jl
in
push
mov
adc
xchg
push
ds
scas
add
pop
sub
ja
and
or
lods
or
es
jbe
sub
xor
imul
xor
in
lock
rcrb
xorb
pop
adc
arpl
outsb
test
pop
mov
xchg
adc
icebp
xor
push
fucomi
mov
std
mov
outsl
sub
xchg
xchg
cmp
clc
inc
xchg
sub
adc
sub
testb
out
cltd
arpl
popa
and
sub
dec
push
mov
rcll
cmp
shr
mov
cmpps
popf
pop
test
loopne
iret
add
pop
aas
es
test
jns
aaa
adc
push
gs
cmp
mov
pusha
sarl
mov
leave
aam
mov
cmp
outsb
xor
sbb
or
lcall
mov
popa
pop
fs
inc
gs
stos
mov
mov
imul
mov
cwtl
aaa
stos
sbb
or
sub
movsl
and
and
cmp
ljmp
sbbb
xor
incl
pop
jg
pop
es
lahf
jg
and
insl
push
mov
mov
lock
lods
jns
xor
pop
push
cmp
mov
test
mov
mov
push
mov
xor
scas
push
jp
cmpsb
je
xor
push
mov
xor
ljmp
adc
cmp
pop
les
stc
mov
mov
or
inc
js
pop
roll
inc
inc
iret
cltd
or
mov
fistl
push
mov
fildl
or
mov
push
jo
jecxz
sahf
xor
call
mov
mov
mov
lret
xorb
in
push
mov
out
mov
cmpsl
push
cmp
cmp
int3
mov
sbb
xor
iret
movl
cmpb
xchg
adc
rol
in
push
test
mul
call
cmp
outsl
enter
outsl
aas
data16
dec
insl
cli
test
aam
in
jo
cmpl
ret
xlat
in
mov
mov
clc
inc
fadds
or
aas
jb
push
andb
or
movsb
jae
into
push
int3
insb
test
icebp
int3
orb
mov
pop
enter
dec
cmpsb
inc
jge
inc
add
cmpsl
xor
inc
inc
inc
popa
jnp
xorb
xchg
insb
bound
inc
xor
movsl
mov
xor
andb
mov
mov
mov
add
movsl
sbb
in
fists
in
xchg
mov
lods
xchg
gs
cmp
enter
sub
and
insb
push
mov
aam
dec
mov
inc
mov
int3
testb
test
fnstenv
jmp
push
outsl
pop
lcall
mov
add
pop
idivl
jb
mov
es
into
scas
pop
sub
adc
jmpw
xor
in
inc
jae
int3
orl
and
add
mulb
or
movsl
popf
or
lds
push
sahf
orb
pushw
sti
push
xchg
xchg
jae
scas
xor
dec
iret
inc
sti
out
negb
cmpsl
int
jmp
or
push
push
arpl
testb
sahf
xchg
gs
ret
and
and
sbb
xor
in
pop
insb
test
repz
mov
cmpsl
lods
jecxz
popf
add
push
push
movsb
jecxz
push
pop
icebp
and
push
fldenv
nop
add
pop
pusha
jl
call
cli
inc
ljmp
mov
cmp
test
iret
pusha
sbb
sbb
mov
add
jns
cmp
jno
mov
xor
adc
dec
sub
or
push
lcall
call
mov
clc
mov
mov
ss
mov
clc
push
ds
mov
popf
stos
cmpsl
lcall
push
mov
push
enter
lods
addr16
push
jae
pop
in
fwait
nop
fcoml
xlat
fcompl
cmc
inc
fidivrl
or
push
adc
add
sbb
and
les
test
faddl
dec
jb
test
jnp
xchg
test
mov
out
es
lahf
fsubp
loop
and
sti
leave
mov
pop
pop
ss
adc
xchg
cmpsb
sarb
xor
rcr
adc
jnp
push
in
mov
rcrl
addl
loope,pt
sub
les
ds
lods
jno
clc
clc
insb
jle
jnp
rcll
lds
inc
loopne
push
pop
push
sub
sbb
jae
pop
clc
dec
xor
add
cmp
mov
and
js
mov
or
scas
test
neg
sbb
mov
icebp
push
inc
push
stos
add
and
cwtl
mov
cmp
cs
jno
sti
outsl
loop
es
push
mov
dec
push
stos
push
cmp
es
or
call
add
jmp
sbb
sbb
mov
mov
stc
fdivrl
movsb
aam
pop
cld
in
add
dec
rorl
cmpsl
test
push
xchg
jb
enter
loope
dec
jns
pop
scas
adcb
ljmp
into
ds
cmpsb
jp
ret
cmp
popa
pop
jno
cmp
bound
jle
pusha
push
iret
incl
ss
into
mov
fwait
push
pop
xchg
inc
and
mov
insb
jns
dec
jne
stc
mov
test
rcll
fs
and
sub
push
in
in
ficoml
and
stos
testl
sub
fstpt
out
dec
out
cmp
jg
outsl
mov
sub
movsb
xchg
sub
pop
jb
and
inc
lods
pop
fmull
rcll
mov
mov
adc
inc
jmp
mov
lea
in
sti
int3
arpl
stc
or
mov
out
or
cmp
scas
xchg
jo
adc
fsubs
into
cmp
lcall
jg
jmp
cli
pop
cmp
shlb
jle
lock
imul
sub
cmp
pop
stos
jnp
xor
dec
imulb
push
sub
std
jmp
movsl
test
xor
cltd
shll
ret
ss
inc
and
lods
inc
adc
jg
cli
in
push
cmp
or
dec
jne
data16
ljmp
sub
js
daa
dec
mov
into
xor
rcrl
test
fcmovnbe
testb
sbb
pop
jmp
fs
mov
call
xor
cwtl
mov
call
xor
xor
pusha
dec
xchg
lods
and
mov
xchg
add
push
repz
mov
or
iret
adc
xlat
sbb
fdivs
hlt
mov
push
rcrl
cmp
stc
sbb
mov
adc
cmp
cmp
push
cmpsb
loop
add
sbb
adc
addr16
mov
sbb
out
adc
pushf
cwtl
xor
fwait
dec
out
mov
gs
sbb
inc
push
mov
iret
lret
xor
mov
mov
xchg
jbe
cmpsb
test
sub
testl
shlb
mov
stos
aad
mov
xchg
jb
mov
and
and
into
shlb
add
ja
sahf
jbe
mov
and
rcrl
pop
push
push
jbe
arpl
sub
xlat
mov
mov
cmp
leave
pusha
movsb
mov
mov
repz
sarl
pop
jno
pop
mov
sub
mov
inc
dec
cmpb
fsin
lods
outsl
pop
inc
pop
fidivrs
pop
out
mov
and
and
adc
ja
dec
aam
js
or
add
popa
xor
pop
fisubs
mov
test
sub
sub
mov
inc
xor
das
adc
enter
xor
cmp
and
hlt
mov
mov
icebp
addb
les
outsl
mov
pop
xchg
imul
mov
pushf
pushf
inc
jae
push
jno
addr16
leave
loope
mov
sbb
insl
enter
push
push
insb
stos
andb
push
clc
cmp
rorb
movlps
jp
mov
xlat
addr16
pushf
test
sub
es
push
and
jle
shll
out
jl
or
xchg
push
nop
push
and
cld
testb
pop
sbb
push
stc
loopne
mov
or
and
bound
xor
mov
cmp
sbb
int3
imul
pop
jle
push
fucomi
mov
mov
sbb
cmc
sbb
xchg
jno
das
mov
or
lods
cmpl
inc
pop
adc
pop
loopne
int3
cmpsb
push
daa
or
xchg
addb
and
mov
jns
push
imul
xchg
inc
cmp
int3
insb
inc
into
sti
les
add
xchg
jg
adc
jae
cmp
dec
int
movsl
sub
in
mov
mov
cmp
test
stos
pop
inc
bound
dec
mov
push
sbb
lret
hlt
and
outsb
test
dec
rcrl
mov
mov
in
and
ds
test
adc
aaa
push
cltd
out
popa
ss
arpl
inc
mov
cmpsl
cltd
movsl
andb
cmc
ljmp
mov
xchg
mov
dec
imul
adc
shl
push
cmp
jb
int3
push
cltd
pop
sub
mov
lcall
loopne
fwait
push
scas
negl
inc
cwtl
mov
das
inc
repnz
int
lods
pop
lcall
fiadds
pop
movsl
jge
mov
shl
push
nop
gs
inc
pop
fs
test
xor
cli
jns
lea
rcrb
cld
ljmp
add
lods
ror
and
les
mov
das
outsb
xchg
cmp
dec
mov
lods
sub
adc
push
xor
cmp
mov
fcoms
pop
mov
mov
and
inc
movsl
cmpb
mov
mov
cmpsb
adc
and
addr16
les
xchg
in
into
pop
cmp
dec
jno
push
mov
test
lods
add
lods
loop
mov
jmp
mov
inc
dec
fdivrl
orb
mov
decl
sbb
xchg
push
ror
fisttpll
lds
addr16
arpl
ret
sbb
repnz
test
jb
ljmp
scas
arpl
sub
out
lods
fisttpl
mov
sub
pop
jg
jo
jno
mov
lret
popf
subb
cmp
dec
cmpsb
push
sbb
jnp
jmp
cmp
outsl
xchg
push
repz
fstp
movsl
push
cmp
mov
dec
int
es
pop
outsb
cmpsl
ljmp
loop
fistpl
ret
push
cltd
mov
les
into
js
imul
cmpsb
sbb
pop
xchg
jl
cmp
jl
cmp
pop
jae
and
ret
sub
dec
inc
dec
and
jecxz
mov
aad
cmp
mov
into
mov
mov
cmp
shlb
cmp
pop
jecxz
dec
xor
or
inc
sarb
and
mov
xor
int
lock
push
mov
dec
jge
pop
fisubl
lahf
dec
sbb
loope
mov
call
mov
pushf
sbb
stc
in
les
js
and
enter
movsl
or
test
repz
xchg
adc
ret
push
xor
int
mov
sbb
test
mov
jmp
mov
or
inc
mov
and
mov
adc
xchg
or
sbb
and
std
lret
cmc
push
add
pop
add
mov
push
sti
pop
rolb
addb
sub
jbe
xchg
mov
bswap
stc
shrl
inc
and
dec
push
mov
out
and
jne
add
mov
sbbl
ljmp
mov
mov
jg
push
adcb
int3
xchg
test
xchg
cld
cltd
add
mov
shll
cmp
or
xor
add
jo
and
dec
mov
mov
sub
int3
and
shl
add
push
and
loopne
sti
mov
fninit
fisttps
mov
mov
sub
aas
in
push
push
push
imul
sarl
out
aam
jbe
int
in
shll
inc
xor
inc
loope
pop
in
scas
loope
jmp
shr
mov
in
xchg
jo
in
pop
je
int3
cli
xchg
mov
xchg
mov
inc
pop
in
adc
push
arpl
lcall
and
dec
adc
lds
sbb
dec
mov
sbb
mov
mov
sbb
add
ret
cmc
mov
rol
clc
movsl
inc
pop
jbe
imul
dec
mov
lods
lods
jae
push
aam
jnp
movsb
add
sarb
or
xchg
imul
fldl
add
les
test
jg
jl
jne
mov
mov
and
in
test
cwtl
mov
inc
or
fs
jge
lods
movsl
outsb
push
xchg
cmpsl
and
pop
out
push
int3
mov
jnp
fidivrl
cmp
jecxz
cmp
push
repnz
mov
test
mov
aas
bound
inc
aad
mov
mov
test
dec
dec
shlb
xchg
cld
mov
xchg
mov
add
cmp
int3
test
push
repnz
mov
sbb
inc
pop
adc
xchg
ret
xchg
mov
push
push
cmp
xchg
cld
cmp
jl
push
and
dec
lcall
dec
inc
iret
fldl
mov
add
cmp
lret
jmp
test
je
inc
pop
sub
mov
pop
mov
data16
mov
int
inc
sub
push
jl
pop
cmp
inc
and
pop
rclb
add
adc
in
pop
imul
popa
push
xchg
addl
or
aas
rolb
jmp
and
pop
mov
push
ljmp
repz
insl
push
dec
add
in
inc
mov
and
mov
xor
lods
mov
xchg
mov
push
in
push
jg
cmpsb
adcb
cld
je
je
subb
mov
lds
sub
repz
mov
hlt
inc
dec
sbb
inc
fmul
insl
outsb
pop
mov
add
dec
mov
dec
xchg
mov
mov
inc
dec
loopne
aam
mov
imul
or
dec
ljmp
jns
pop
push
movsl
outsb
jbe
std
push
cld
pusha
xchg
sbb
dec
fidivl
sub
iret
adc
mov
ret
xchg
sbb
in
enter
in
mov
push
sahf
popl
cld
mov
aaa
sbb
popf
popa
enter
or
xor
out
imul
pop
mov
out
add
inc
pusha
jl
sub
rcr
std
outsl
imul
jae
mov
cmc
push
push
mov
insl
insb
repz
add
outsb
orl
and
push
or
imul
lds
enter
jp
jge
pop
mov
jmp
or
ret
cmp
cmp
push
arpl
sbb
mov
movsb
jg
sarl
sub
cmp
cmp
and
arpl
and
aas
ja
inc
negb
or
and
and
cli
icebp
test
ja
xchg
mov
lods
pop
js
mov
cmp
add
mov
lcall
in
fiaddl
cmp
rolb
rcll
ljmp
xchg
xor
aaa
jo
sub
shl
xor
out
sti
rcl
cmc
cwtl
enter
push
out
cmp
sub
push
mov
fwait
addr16
push
loop
push
out
into
fnstsw
lods
inc
or
push
jecxz
out
pop
lret
in
sbb
inc
xor
mov
fisubs
neg
adc
imul
lret
fsubrl
imul
pop
pop
jae
scas
mov
jle
push
mov
mov
dec
lods
add
ret
lahf
push
jo
jae
divl
or
cmp
xor
xchg
adc
add
inc
jno
rcrl
ljmp
bound
push
push
rcll
mov
stos
dec
movsl
jne
sbb
iret
lahf
std
jae
das
cmpsl
es
xor
sub
adc
mov
add
cmp
imul
push
pop
jbe
dec
sub
in
mov
data16
cmp
mov
lock
pop
jns
mov
sahf
xor
into
mov
xchg
pop
out
mov
xor
stos
lods
movsl
scas
dec
mov
rcrl
xor
or
dec
adc
adc
popf
dec
bound
outsb
out
lods
int3
inc
and
inc
lods
mov
test
jo
mov
add
or
xor
mov
jne
sbb
data16
bound
mov
bound
movsl
xchg
lds
lock
stos
cs
jne
jno
pop
fsubrs
jecxz
imul
mov
out
cmp
roll
cmc
pop
sbb
cltd
int
jns
rcl
xchg
out
jno
or
rcrl
push
mov
push
xor
arpl
ret
int3
aaa
pop
push
test
cmp
loop
push
out
add
xchg
pop
imul
mov
adc
and
mov
repz
or
pop
outsb
mov
pop
repz
or
stos
data16
arpl
jno
pop
mov
shlb
hlt
push
popf
xor
iret
dec
xor
mov
jnp
fsubrs
or
in
mov
fidivrs
or
jne
test
ljmp
add
jmp
ja
enter
clc
ret
lea
push
add
lret
ret
shrb
test
mov
push
push
inc
mov
cmp
je
jge
scas
inc
jmp
mov
jae
movsl
mov
aad
sbb
dec
sbb
pop
leave
jg
pop
add
ror
or
lret
add
sbb
clc
testl
out
and
inc
ret
out
leave
imul
popa
cltd
lcall
jb
lods
lret
dec
loop
cmp
mov
jae
repz
cmp
mov
cld
jmp
xor
lahf
aad
mov
xchg
jg
fdivr
or
xor
cwtl
fs
mov
sahf
ror
in
mov
mov
cmpsl
loop
test
sub
mov
insl
subl
or
fidivl
out
pop
in
pop
push
ss
push
mov
fcmovb
clc
mov
dec
or
mov
in
stos
xchg
ljmp
aam
push
or
add
and
inc
ja
into
dec
loopne
mov
lcall
pop
mov
out
mov
inc
or
dec
or
and
out
xchg
dec
jmp
daa
pop
divb
in
decl
adc
jns
push
push
int
lods
js
mov
jmp
pop
push
xchg
js
movsl
popa
mov
cmp
lds
xchg
rorl
cmp
cmp
xchg
shll
arpl
into
mov
cli
and
or
dec
jp
pushf
sbb
mov
call
push
cmp
push
hlt
out
sbb
adc
sbb
inc
xchg
jno
sbb
dec
scas
std
aam
es
leave
repz
pop
and
mov
lea
gs
inc
jge
hlt
fdivl
jg
int3
ds
cmp
mov
stos
lret
mov
movsl
jmp
mov
aas
sub
sbb
mov
repnz
xchg
ja
push
das
xchg
nop
mov
std
xchg
sub
mov
addb
mov
addb
mov
or
add
rcll
xchg
ds
inc
pusha
ret
arpl
jo
dec
std
movnti
xor
out
mov
cmp
insl
fadd
pop
mov
dec
add
loopne
scas
adc
xor
or
ljmp
sahf
pop
in
sbb
and
stos
lahf
jns
in
sub
pop
adc
pop
push
int3
sbbb
jp
adcb
cmp
icebp
fldenv
popa
pop
and
sarb
pushf
aad
inc
pushf
hlt
push
leave
adc
jle
push
dec
dec
push
test
adc
int
and
adc
ret
xor
into
dec
jno
xor
leave
outsb
call
xor
out
adc
ret
inc
mov
dec
xchg
inc
sahf
fisubrs
test
repz
fsts
push
orl
std
hlt
dec
inc
inc
inc
sarl
push
pop
jno
add
push
xchg
imul
fmull
jge
les
cmpsb
cmp
mov
xchg
mov
cmpsl
xlat
mov
fcmovne
mov
mov
pop
test
or
std
inc
xchg
sahf
inc
pop
mov
pop
lea
fbld
jge
shl
jae
mov
popf
or
popa
jnp
pushf
mov
test
pop
jb
outsl
sub
jg
xorb
sarb
sbb
lret
sbb
and
int
cld
pop
jmp
cwtl
outsb
loope
stos
mov
dec
clc
adc
mov
stos
sti
adc
test
sbb
adc
xchg
xor
aam
shlb
iret
popf
movsb
aam
je
test
mov
enter
sbb
mov
mov
sbb
or
cmc
pop
sbb
mov
add
mov
xchg
ss
push
outsb
stc
lods
adc
mov
cmpsb
sbb
pop
jb
mov
mov
sub
loop
sub
pop
mov
lds
lock
sub
xchg
test
in
jbe
mov
and
out
fidivrs
ror
xchg
lds
fisttps
outsl
cmp
insl
cmp
xchg
decl
pop
jnp
pop
testb
push
stos
add
and
dec
test
mov
imul
and
inc
sub
jmp
adc
outsb
sub
pop
xor
xchg
jle
dec
cltd
iret
inc
inc
sbb
inc
push
test
cli
sbb
imul
cmc
push
jbe
fidivs
push
shll
sarb
dec
addr16
xchg
adc
mov
cld
mov
imulb
mov
mov
push
or
movsb
popf
addl
dec
out
mov
inc
out
orl
shll
cmp
ret
adc
scas
dec
test
sbb
lret
and
into
pop
push
or
dec
mov
shr
sarb
inc
and
cmpsb
mov
int3
out
cmp
mov
roll
fistpl
jp
clc
mov
push
sbb
jge
int
stc
ss
pop
js
in
jmp
lret
jmp
incl
rorl
inc
lods
mov
ljmp
or
adcl
pop
sbb
jecxz
xchg
adc
sarl
xchg
int3
mov
ficompl
inc
shll
push
jnp
leave
or
das
pop
mov
lods
mov
mov
pop
or
je
mov
adc
sbb
add
pop
addr16
je
dec
shll
sub
sub
pop
andb
cmp
or
mov
ret
fs
into
jge
add
jp
dec
into
xchg
or
popf
sub
cmpsl
xchg
inc
jae
repz
lods
bound
sbb
add
ret
push
and
jmp
movsb
call
mov
mov
imul
xchg
cmpsb
scas
outsb
push
in
dec
mov
pop
loopne
mov
arpl
dec
mov
xor
or
fnstcw
push
push
out
daa
push
int
mul
dec
fisubs
adc
push
or
pop
dec
xor
xor
aas
jg
lret
mov
mov
in
mov
sub
test
ja
sbb
loopne
mov
iret
and
or
pop
loopne
push
sbb
aad
jae
lret
mov
mov
adc
xor
test
aas
xor
mov
daa
ficoms
mov
andl
imul
mov
pushf
test
pusha
dec
in
and
push
imul
mov
fcmovnu
push
call
adc
das
bound
inc
ja
pop
fstpl
arpl
daa
xor
xchg
hlt
mov
int3
cli
mov
test
xchg
lods
pop
pop
nop
jecxz
ret
cmc
loopne
scas
dec
sbb
outsl
jnp
movsb
mov
rcrb
lret
gs
dec
sub
clc
push
jae
fistpl
insb
popf
scas
jae
pusha
sub
adc
shlb
inc
sub
cmp
inc
mov
xchg
adc
push
pop
scas
pop
mov
out
das
sub
sahf
icebp
xor
fildll
movsb
lahf
mov
xor
pop
mov
mov
sahf
daa
pop
mov
push
shll
daa
xor
jo
xchg
shll
inc
sub
mov
subl
dec
pop
or
or
stos
iret
std
dec
ret
cmp
insl
mov
cld
cmpsl
mov
fdivrl
cmp
pop
pop
sub
jne
orb
sti
add
push
hlt
jae
ret
jecxz
mov
insl
mov
aad
sbb
mov
imull
sub
pop
pushf
test
mov
push
mov
sub
xchg
mov
inc
sbb
sbb
cld
in
fstl
push
pusha
jmp
xchg
mov
in
sub
bound
subl
out
inc
cmpl
dec
jmp
outsb
fbld
imul
fcmovnu
mov
popf
dec
insl
cmp
mov
jns
xor
lahf
inc
dec
xor
push
ret
dec
shlb
outsl
dec
jle
mov
push
pop
iret
push
imul
dec
mov
bound
rcr
and
notb
fcmovnbe
jb
xchg
or
inc
xor
into
mov
fidivrs
lock
pop
cli
mov
xor
fcomps
aad
xor
test
xchg
cmp
mov
xchg
jo
inc
push
add
pop
add
cmc
lcall
jmp
jmp
jbe
jl
xor
mov
adc
jb
sbb
je
mov
rorb
dec
cmp
test
mov
cmc
push
sbb
int3
jl
mov
repnz
cmc
jbe
jle
lahf
fwait
cltd
lods
mov
push
lds
sahf
sbb
mov
push
jno
jl
les
xchg
mov
fistpl
push
mov
sbb
outsl
pusha
sub
pop
addr16
cmpsl
test
sbb
leave
sarb
push
inc
jp
ss
rolb
jl
in
push
jg
jp
mov
call
jmp
mov
mov
and
test
dec
ljmp
and
mov
add
jecxz
fldl
ret
pop
icebp
xor
dec
xor
dec
push
in
mov
idiv
inc
or
mov
or
sbb
mov
lea
jo
xchg
cmp
clc
jo
sub
dec
nop
pop
aaa
add
jns
arpl
movsb
stos
movsb
das
gs
mov
cmp
pop
into
mov
stos
mov
xor
pop
sbb
mov
adcl
sahf
mov
mov
xor
pop
test
dec
ret
jo
out
pop
fildll
fs
jmp
xchg
sub
dec
pop
mov
pop
xor
ret
push
je
xor
jle
push
popa
push
enter
das
in
sub
mull
inc
iret
mov
and
push
jge
and
call
jbe
add
pop
cmp
or
mov
push
mov
jecxz
shr
in
div
mov
mov
and
jb
data16
jmp
pop
je
fcompl
mov
mov
ret
scas
xchg
lock
loop
push
pushf
roll
mov
mov
cmpsb
insb
pop
adc
dec
mov
jno
dec
in
pushf
insl
mov
jns
pusha
ret
loopne
scas
cmp
sbb
cs
outsb
leave
sub
repz
inc
dec
data16
mov
jmp
pusha
js
enter
sub
mov
mov
jnp
movsb
adc
mov
adcl
js
xchg
and
cld
mov
add
mov
orl
out
jae
cmp
and
inc
adc
icebp
push
adc
add
test
mov
mov
push
test
xorl
inc
sub
cs
nop
test
mov
inc
dec
add
mov
sbb
mov
adc
sbbl
jo
sti
scas
mov
push
aam
ficoms
push
loopne
sarl
scas
lock
mov
aad
dec
dec
data16
cmp
cmp
cs
push
out
popa
shr
stos
int
mov
adc
cmp
sbb
movsb
mov
shrb
cmp
adc
andb
push
pop
int
mov
adc
fwait
out
add
xor
jbe
outsl
xchg
rcl
sub
jg
pop
and
int3
inc
mov
ljmp
mov
cmpsl
rcrl
mov
enter
and
mov
loope
jbe
xchg
pop
or
jae
xchg
popa
jg
sbb
je
daa
dec
int
and
pop
notl
xchg
cli
push
cmc
fbld
push
iret
subb
leave
xchg
push
jp
sbbb
cmpsb
mov
or
es
or
sbb
mov
pusha
adc
out
enter
cmp
test
sub
dec
add
cmpsl
pop
int3
and
loop
xor
jo
ljmp
pop
loopne
fisubrl
inc
jnp
loope
xchg
ret
mov
ficomps
cs
pop
sbb
out
or
daa
pop
insl
scas
cmp
mov
adc
mov
lahf
movsb
lret
add
sbb
xchg
push
mov
jns
or
aas
xor
jo
add
jp
xchg
fistl
movsl
push
jae
adc
arpl
inc
cmp
mov
in
sub
add
jl
mov
div
outsb
fcmove
aas
pop
adc
jle
or
movsb
and
in
mov
jg
mov
test
sbb
lret
mov
rcll
out
sahf
ja
xor
inc
data16
push
push
fisubrl
fsubr
inc
cmp
mov
mov
popa
es
dec
jecxz
jl
mov
ss
scas
xchg
dec
lret
int3
ror
rcr
addr16
adc
or
ljmp
mov
pop
adc
jmp
int
sub
in
lea
jb
sub
popf
adc
pop
inc
adc
lahf
idivl
push
mov
mov
sub
jl
xchg
push
movsl
popf
push
mov
xchg
push
icebp
loope
and
in
mov
inc
mov
jne
test
test
jno
stos
fs
add
inc
sub
pop
sbb
je
mov
dec
int
je
push
sbb
jecxz
push
popf
sub
jle
shrb
bound
push
xchg
jo
out
out
and
in
add
sub
jp
or
xor
stos
insl
out
pop
cwtl
popf
mov
cs
leave
xchg
push
ret
inc
aam
es
or
add
push
xor
arpl
ljmp
cmp
nop
mov
mov
fisubrs
xchg
lret
or
push
xchg
push
pop
in
scas
pop
pushf
loopne
jmp
mov
frstor
jl
nop
out
pop
and
ljmp
xchg
mov
sub
jbe
leave
lahf
pop
add
scas
inc
push
jne
in
rclb
outsl
aas
andb
fldcw
ret
test
stos
adc
loop
rcrl
rol
xor
fisttpll
adc
push
xorl
xchg
push
insb
or
push
cmp
daa
push
jbe
iret
mov
pushf
out
jg
xchg
imul
fwait
dec
cmp
cmp
pop
xchg
or
sti
pop
push
hlt
js
xlat
sar
jae
mov
frstor
dec
xchg
mov
add
movsb
jns
test
and
rcrl
pop
hlt
xlat
ljmp
or
xor
adc
push
scas
arpl
es
stos
sub
scas
mov
stos
dec
xchg
xchg
test
arpl
dec
fdivs
sub
in
outsl
jns
insb
mov
cmp
cmp
imul
mov
jb
and
mov
dec
insb
imul
pop
inc
inc
clc
jae
fwait
popa
mov
test
inc
xchg
fstl
inc
add
sub
into
pusha
cmp
arpl
fcomps
in
mov
jns
imul
cmpsl
pop
inc
int
addb
lahf
popw
jmp
neg
pop
inc
adc
add
movsb
out
mov
enter
push
out
mov
jno
lret
cmp
inc
and
mov
mov
aaa
les
inc
jg
pop
xor
leave
inc
xchg
rcrl
xor
in
or
out
mov
or
cmpsb
mov
testb
and
jl
jae
mov
outsb
mov
sub
popf
jp
inc
das
push
push
mov
add
mov
mov
dec
add
cmc
pop
test
dec
shl
add
shr
jmp
cwtl
adc
fbld
cmp
mov
inc
and
fistpl
jbe
pop
les
xor
cmp
lods
mov
mov
adc
les
inc
stos
push
stc
ficoml
lret
sbb
push
mov
pop
mov
lods
cmc
pushf
les
xchg
or
xor
int
sbb
lret
clc
sbb
sub
adc
dec
lds
inc
pop
dec
sbb
mov
sub
xchg
jnp
dec
shlb
push
stc
adc
and
sti
lods
pop
inc
jne
dec
xlat
daa
inc
je
jbe
fwait
mov
mov
pop
leave
mov
int3
cmp
jmp
pop
aad
push
mov
cmp
clc
int
loopne
dec
push
and
out
mov
cmp
mov
jbe
jl
jo
hlt
inc
pop
xchg
xchg
sub
and
sub
or
mov
sbb
pop
cmp
cwtl
add
es
jge
in
jmp
sbb
insl
xchg
mov
mov
add
push
sub
sbb
leave
mov
insb
dec
into
rorb
lods
test
and
mov
sbb
cmp
inc
dec
scas
fs
aad
jmp
xor
adc
fidivs
fcoms
inc
push
cmp
dec
test
lods
and
ljmp
or
mov
movsb
adc
jae
bound
jle
jmp
mov
dec
es
jae
add
or
jae
sbb
lds
xor
inc
ljmp
movsb
or
mov
xchg
out
aaa
inc
jp
sub
dec
insb
or
push
xor
fdivs
je
xchg
sub
mov
rorl
and
xchg
js
jg
lret
push
stc
pop
aad
loopne
mov
xchg
outsb
jecxz
sub
pop
int3
js
xchg
rcl
ljmp
jmp
sub
push
in
inc
dec
fnstenv
hlt
paddsb
mov
mov
loopne
into
nop
sti
mov
inc
xchg
pop
dec
push
push
mov
loopne
xchg
mov
into
sbb
insb
in
mov
sahf
xchg
gs
jnp
fisubs
xchg
sahf
repz
sti
pop
loopne
jne
test
movsb
hlt
or
inc
clc
out
sbb
movsl
add
lret
popf
inc
movsb
fcomp
jnp
inc
jecxz
mov
pop
jbe
jg
dec
loope
sub
push
mov
push
shlb
cli
cmp
jg
cmp
push
add
fs
pop
xchg
clc
inc
fildl
xorb
hlt
inc
bnd
icebp
push
sbb
add
in
outsb
decb
xchg
ljmp
jmp
fcompl
pop
or
decl
ljmp
mov
sub
aas
insb
lcall
mov
fcomip
pop
or
adc
stc
ret
adc
rorl
push
cmp
dec
fwait
xchg
mov
loope
js
imul
lret
jge
sbb
adc
sub
jmp
cli
adc
sbb
out
outsl
and
sub
inc
xor
dec
add
incl
js
mov
jge
push
movsb
cltd
into
jae
fdivrp
adc
rcrl
mov
add
aaa
dec
mov
push
bound
pop
pop
call
aas
and
xlat
xchg
and
cmp
jae
nop
sbb
movsb
jnp
push
push
or
loopne
mov
call
movl
rcll
test
imul
pushf
mov
dec
pop
dec
leave
popa
sub
arpl
push
fld
in
mov
jno
cmp
jns
jecxz
dec
int
cli
inc
and
jo
mov
stc
outsl
jnp
insb
adc
ret
sahf
je
inc
insb
add
gs
fdivl
xor
jno
push
dec
jmp
loope
push
push
sbb
fildll
push
rclb
int
std
cs
hlt
in
adc
fnsave
cmp
push
rorl
fldt
je
lahf
sahf
jle
push
lods
stos
sub
xchg
fcmovnb
inc
and
or
push
xchg
test
push
inc
jo
push
or
outsl
flds
xor
or
ret
xor
pop
je
cmc
adc
xlat
pop
push
loopne
or
mov
pusha
pop
mov
into
or
push
sbb
ret
fidivl
jno
pop
adcl
mov
pop
repnz
repz
arpl
popa
hlt
pusha
mov
push
xor
or
or
ja
mov
enter
rorl
mov
mov
fwait
xor
arpl
inc
lods
inc
lods
sub
cmp
or
sbb
dec
mov
movsl
cmp
push
inc
cmp
inc
xchg
jmp
popf
hlt
xchg
cwtl
add
lret
cmp
cmp
clc
mov
push
sti
cmp
gs
jp
outsl
push
jmp
int
popf
sbb
aas
inc
mov
pop
inc
mov
es
adc
adc
ds
in
subb
je
pop
jmp
call
out
lret
repnz
aaa
mov
rcr
rcrb
push
xor
xor
xor
fwait
scas
movsb
mov
andb
das
fdivrs
stos
cli
sub
in
mov
outsl
sahf
rcll
push
loope
sbb
or
sar
idiv
fldenv
jbe
adc
orb
mov
mov
mov
sbb
into
pushf
and
pop
lods
adc
xor
loope
mov
lahf
into
test
inc
js
xchg
stos
out
jl
pusha
out
pop
scas
aas
or
sti
add
adc
sub
mov
hlt
addr16
mov
cmp
mov
dec
push
popl
sbb
push
fnsave
sub
aam
lahf
xor
sub
call
rclb
ret
push
aas
xchg
data16
dec
pop
leave
and
ja
ds
subl
lea
push
ret
out
movsb
sbb
mov
jo
jle
testl
xchg
pop
jl
js
aad
rcr
push
lock
in
pop
loope
or
repz
pusha
outsb
pop
adc
push
test
sub
inc
dec
xor
add
loop
push
pop
push
pop
or
inc
divl
or
adc
xchg
cmc
dec
cmp
nop
add
xchg
and
stos
stos
push
mov
mov
pop
leave
movsb
push
fwait
jecxz
popf
pushf
dec
pop
xchg
jo
inc
pusha
push
lret
push
imul
and
add
and
and
adcl
dec
repz
mov
dec
stc
rcll
dec
xor
pop
clc
daa
fcmovnbe
xchg
jmp
push
jb
xor
jnp
jecxz
aam
push
sahf
pop
or
cmp
lods
dec
cs
and
je
xchg
and
cli
jbe
out
insl
aad
dec
in
cmpsl
fstl
sub
xchg
or
sbb
adc
lods
and
rorb
or
fs
add
stos
inc
cmp
add
shll
cli
cld
dec
arpl
scas
in
inc
test
push
test
orb
das
mov
ja
xor
fcmovb
xchg
or
out
add
outsl
pop
ss
jl
xor
inc
and
ficoms
and
mov
insb
mov
xchg
outsl
lret
and
lahf
insl
call
cli
xor
lods
mov
test
test
nop
add
mov
pop
cmp
xchg
cltd
pop
push
dec
inc
mov
call
fimull
js
inc
adc
addr16
mov
and
jge
jmp
inc
mov
and
lret
test
pop
out
scas
ret
aam
add
in
xorb
or
adc
dec
mov
push
push
xchg
push
inc
js
jno
and
mov
out
or
sub
ds
cmp
xor
push
in
loope
js
cmpl
xchg
xor
xchg
fcmovnbe
sbb
mov
out
or
jge
loope
cwtl
negl
mov
pop
xchg
clc
dec
cmpb
jae
orl
pusha
cltd
test
pop
sti
xor
xchg
dec
std
lock
imull
jle
cmp
pusha
jmp
outsb
mov
inc
bound
dec
mov
pop
in
sbb
jne
dec
xchg
call
dec
scas
mov
loope
xchg
or
out
cmpsl
add
ja
push
mov
fs
in
or
dec
cltd
icebp
fs
fstpl
add
adc
sti
dec
and
and
mov
pop
dec
shlb
inc
inc
jo
cmp
mov
ds
inc
and
sahf
jno
inc
lock
xchg
push
sub
xor
mov
jo
mov
xor
popw
or
sbb
sub
pop
cmpl
scas
loope
lock
or
sub
mov
js
xchg
andl
or
in
sub
add
adc
pusha
test
xchg
test
addr16
mov
test
sub
int
push
dec
icebp
out
pop
leave
xchg
push
jo
push
icebp
cwtl
xor
push
dec
jns
daa
setb
adcb
lock
or
into
idivb
mov
pop
xchg
loope
pop
or
fistpll
ret
fidivs
pop
fildl
shl
pop
data16
mov
cltd
insl
adc
add
push
add
bound
loopne
orl
not
or
xchg
add
jle
xchg
es
cmp
call
movsb
pushf
flds
xor
add
fwait
cltd
in
pop
in
ja
test
cmc
adc
or
xor
inc
dec
out
push
icebp
adc
push
loop
roll
jl
adc
insl
jae
inc
xchg
int3
push
and
mov
or
in
or
das
pop
sub
adc
adc
repnz
add
mov
inc
or
dec
jb
xor
dec
mov
data16
adc
mov
and
and
jnp
ret
outsb
and
fwait
and
jge
out
cmp
dec
sahf
fildl
push
adc
jae
mov
sbb
add
lret
inc
sub
sub
pop
jnp
mov
dec
cmp
nop
ret
and
or
cmp
push
enter
sub
mov
ds
jecxz
mov
ret
mov
test
movups
in
jno
cmpsb
inc
sbb
test
jne
and
rorb
mov
testb
out
jb
roll
sbb
and
loope
jmp
xacquire
stc
xor
mov
sbb
mov
fnstcw
ror
out
pop
lods
cli
xchg
push
fmuls
or
cmp
sbb
pop
adc
js
sbb
ss
sub
inc
and
sub
mov
lret
rorb
sbb
sbb
mov
dec
add
and
in
mov
jns
bound
push
out
stos
inc
roll
pop
xchg
roll
xchg
sub
cmpsl
inc
sbb
inc
fdivp
in
insl
jbe
add
movsl
lods
and
addr16
lods
sub
inc
mov
xor
mov
lock
jbe
cmp
cmc
sbb
outsb
mov
das
inc
adc
pop
add
mov
mov
dec
test
mov
jmp
sbb
push
mov
and
inc
fdivrs
imul
adc
rcrb
out
es
hlt
jno
pusha
and
jecxz
add
mov
mov
or
aaa
xor
jg
mov
add
daa
scas
mov
mov
inc
or
xchg
lods
and
shll
loope
std
cltd
int3
jmp
movsb
xchg
or
push
cmp
ljmp
ret
call
add
mov
mov
fs
sbb
mov
int
or
pop
push
jno
push
lods
push
mov
mov
jns
enter
pop
in
andb
xchg
push
jge
rep
clc
push
adc
out
mov
inc
push
push
aam
mov
loopne
mov
push
repnz
outsl
sbb
test
outsl
inc
push
dec
les
lods
jmp
loop
cmc
scas
push
and
and
jmp
jecxz
imul
shll
inc
sub
cmc
stos
push
movsb
ret
dec
mov
outsb
leave
mov
fdivl
ret
popf
nop
fildl
dec
dec
add
and
cmp
and
mov
cmp
inc
stos
iret
aam
push
ficompl
pusha
mov
rclb
cwtl
xchg
movsl
leave
fs
xor
loopne
xor
outsl
mov
enter
test
scas
mov
sub
xchg
add
imul
xchg
ficompl
add
sbb
dec
mov
mov
jae
cli
push
mov
scas
jl
push
adc
out
cld
outsl
cmc
pushf
popa
push
jnp
cld
aas
mov
fisubrl
std
scas
sub
cmp
fdivrs
mov
pop
sahf
stos
dec
adc
xor
cmpsb
mov
jmp
aaa
sub
enter
jns
and
bound
and
xchg
sub
pop
adc
and
scas
mov
int3
mov
addr16
xchg
mov
scas
sub
fdivs
mov
jl
sub
jge
addb
test
push
mov
clc
mov
rcrb
or
test
arpl
or
divb
mov
sbb
cltd
jb
arpl
daa
sbb
xlat
cmp
stos
push
mov
sbb
mov
daa
mov
lret
nop
xor
pushf
xchg
inc
xor
jl
xlat
add
ja
adc
sbb
jmp
xchg
push
inc
add
push
jg
or
aas
or
xchg
repnz
jl
sub
int3
std
cltd
test
mov
imul
js
divl
xor
jge
jnp
xlat
jg
pop
dec
jae
lahf
int3
into
jae
clc
rcrl
nop
add
cmpl
cs
stos
out
dec
inc
roll
fcoml
pop
push
pop
mov
sub
xorl
lcall
jo
or
lea
jb
out
cmpsb
xor
xor
cmp
push
shrl
das
xchg
nopl
lcall
mov
ret
push
fsubr
js
rcll
js
nop
sbb
sahf
imul
lea
insl
testb
dec
mov
or
arpl
mov
mov
lods
cld
sub
pop
lods
mov
fldcw
dec
sti
or
jp
bound
into
mov
dec
mov
aaa
loop
cltd
inc
loopne
fcoml
mov
fwait
xchg
cmp
adc
sub
adc
xlat
xchg
pop
clc
pop
jnp
sub
pmuludq
add
outsl
sahf
insb
psrld
fwait
rcll
cmp
inc
adc
xor
sub
pop
aas
and
ja
mov
push
outsb
xchg
sub
and
or
fdivl
adc
loop
addr16
xor
out
cli
idivb
mov
xchg
outsb
xchg
pop
imul
cmp
xor
ds
push
push
das
and
push
pop
pushf
mov
sub
add
mov
das
mov
xchg
pusha
lret
addl
movsl
push
inc
jns
int
in
shrb
imul
in
repz
je
idiv
stc
sub
je
lret
inc
scas
and
stos
fdivs
xchg
lock
addb
test
cmpsb
std
lds
add
aam
sub
mov
popf
jo
das
imul
add
xchg
mov
ret
cmp
insb
pop
push
sbb
push
mov
xchg
inc
lret
and
int3
sarl
addr16
cmpsb
stos
mov
popa
punpckhdq
adc
adc
fcmovnu
jmp
repz
sbb
lds
test
and
ja
add
pop
cmc
inc
pop
mov
xchg
add
push
jge
xchg
aas
inc
and
out
fsubrs
fwait
movsb
inc
hlt
mov
imul
or
mov
pop
lret
adc
push
mov
inc
shlb
outsl
xchg
out
pop
outsl
mov
js
sub
mov
push
push
ret
mov
jle,pn
mov
data16
js
push
sbbb
out
mov
aas
popa
add
push
sub
subl
testb
inc
cltd
fldenv
je
ja
sbb
mov
pop
aaa
mov
pop
add
sub
inc
xor
mov
ljmp
fstps
mov
shrl
mov
andb
sarl
or
imul
arpl
in
mov
sbb
ja
mov
add
filds
repnz
mov
sub
call
fbld
addl
cld
aas
fwait
xlat
repz
and
ja
jge
into
lret
inc
mov
sub
xchg
or
out
ss
and
add
imul
push
mov
mov
xchg
repz
sub
inc
lahf
cmp
dec
or
mov
into
sub
stc
xor
push
mov
add
xor
mov
lahf
mov
xor
iret
dec
xor
mov
in
das
int
push
mov
bound
dec
mov
lea
dec
cmp
mov
cmp
fdivs
and
mov
jle
repnz
fsubrl
aam
sbb
popa
roll
ja
pop
loopne
adc
mov
cli
dec
push
and
add
stos
pop
aas
or
insl
pop
repz
enter
xor
mov
cmpsl
hlt
pop
and
ret
in
and
lock
clc
pop
outsb
sub
mov
inc
cltd
pop
xchg
mov
fwait
lock
ss
call
loop
adc
rcrl
fs
inc
push
out
sbb
mov
mov
push
test
mov
fildll
sub
daa
mov
mov
mov
data16
pop
shll
jp
into
pop
cmp
into
xchg
mov
repnz
dec
aad
jle
dec
icebp
xor
add
sub
ss
inc
jo
mov
mov
mov
dec
rcrb
test
mov
xor
inc
cmp
paddb
adc
push
mov
pop
fisttps
insb
ret
pop
xor
cmp
icebp
pop
ljmp
push
scas
dec
jb
mov
or
mov
stc
orb
call
loopne
ljmp
loopne
pop
fnstcw
pop
test
out
or
pop
sqrtps
pusha
neg
lcall
pop
push
movsl
daa
or
icebp
int
fsubrs
fiaddl
int
and
push
or
mov
cli
std
xor
dec
xor
insb
xor
sub
outsb
ficompl
mov
dec
dec
mov
ficoms
cmp
enter
push
jnp
inc
cld
cmp
jns
mov
inc
aad
int
jno
lods
or
mov
jnp
and
movsl
sub
pop
comiss
mov
push
scas
push
cmp
jle
jg
xchg
test
add
push
add
ja
je
pop
dec
js
inc
aam
pop
and
sub
pop
lock
push
cltd
lret
or
cmp
mov
icebp
bound
mov
jg
xchg
rcl
ret
mov
xor
pop
push
and
aad
xlat
cmp
sbb
xor
rcll
pop
aam
cmp
push
mov
iret
cmpb
cmp
push
mov
vmread
sbb
movsb
xor
or
push
pmovmskb
test
ds
jl
call
out
mov
imul
arpl
int
lret
pop
dec
mov
je
