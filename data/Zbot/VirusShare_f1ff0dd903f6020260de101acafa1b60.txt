lcall
cmp
scas
in
test
xlat
xor
test
loopne
adc
das
jge
decl
or
out
rol
data16
mov
pusha
ret
mov
dec
jge
mov
aad
call
dec
and
cmpsb
cld
or
adc
rorl
jp
sub
popl
call
incl
cmp
lds
pop
js
mov
xor
or
and
nop
xor
ret
push
ljmp
pop
xchg
pop
xchg
sbb
add
sub
lds
pushl
jae
push
pop
push
cmpsl
testl
es
mov
fsubrl
incl
and
xchg
aaa
adc
push
xor
mov
int3
and
jmp
lea
xchg
arpl
aaa
jmp
in
ret
mov
iret
or
xchg
and
add
leave
and
cmc
sbb
out
fwait
cmp
arpl
inc
and
pop
int3
cmpsb
hlt
addr16
sbb
and
call
jmp
pop
push
or
out
cmp
rcll
cmc
jo
dec
les
inc
or
sub
call
inc
adc
add
mov
jmp
enter
repnz
rcr
mov
jo
decl
mov
ficompl
jb
push
into
outsl
popf
dec
dec
sub
je
lock
mul
mov
xor
incl
jo
mov
aaa
mov
icebp
lret
test
xor
into
std
stos
or
pop
sti
call
fsubs
lds
pop
add
and
cli
sbb
xchg
dec
and
fidivrs
push
pop
xchg
jl
pop
dec
sbb
or
mov
mov
imul
or
sub
icebp
xchg
ds
jnp
mov
add
inc
push
adc
and
or
pushf
mov
test
and
ljmp
or
std
mov
rcrl
sahf
xchg
dec
out
scas
or
in
sti
sahf
mov
mov
mov
mov
mov
cs
call
xor
pushl
jp
and
cmp
dec
and
hlt
arpl
jle
ds
arpl
decl
test
jae
loop
rorl
sahf
pop
inc
testb
lods
aad
cmc
xor
ror
call
shr
loop
sub
movsl
ja
xchg
outsl
aaa
in
cmpsb
mov
xchg
mov
xchg
mov
adc
aas
testl
dec
insl
in
ds
push
nop
or
daa
outsb
jno
jmp
and
mov
pop
or
pop
cmp
popa
test
mov
addr16
sbb
lcall
aad
xor
mov
pop
aam
out
hlt
jecxz
sub
adc
cld
jp
lcall
in
adc
inc
mov
push
mov
into
dec
or
call
test
cmp
filds
mov
rorl
jge
lcall
adc
or
scas
mov
add
rcll
movsl
icebp
ret
push
inc
jmp
adc
adc
ljmp
dec
xchg
push
adc
sub
xchg
repnz
jmp
jnp
sahf
jmp
repnz
pop
sub
mov
ret
xor
pop
dec
push
aad
decl
adc
out
mov
inc
pop
sub
je
xchg
in
jae
add
sub
incb
mov
or
in
sbb
fisttpl
xlat
or
leave
xor
incl
dec
add
adc
sbbl
lds
adc
mov
pushl
int
aaa
mov
mov
xor
xorb
popf
jle
cwtl
inc
clc
subl
incl
jno
arpl
je
inc
mov
mov
popa
mov
lods
out
push
sbb
jg
mov
sarb
or
push
push
into
sub
mov
sub
incl
int
jnp
fdivp
not
bound
je
imul
jp
add
nop
repz
cmp
mov
ljmp
shrb
cmp
and
ja
sbb
icebp
fidivrs
call
out
idivb
icebp
sahf
into
lcall
nop
add
bound
inc
inc
or
lods
xchg
or
ljmp
outsl
ja
add
xchg
ret
test
fmul
mov
icebp
ljmp
in
insl
lret
test
push
imul
mov
mov
nop
dec
pop
dec
adc
stc
adc
cmp
push
cmpsb
popf
sub
cmpsb
xchg
pop
test
test
loopne
lea
call
xchg
stc
mov
fwait
add
xchg
pushf
dec
mov
mov
loopew
shlb
push
mov
decl
ret
lds
pop
mov
or
mov
xchg
lods
cmp
xchg
push
shr
std
jmp
lock
jl
inc
or
loopne
addr16
lds
add
cwtl
imul
decl
and
lret
push
dec
add
jnp
xchg
popf
fsubl
mov
ljmp
arpl
jp
add
add
dec
adc
sbb
push
std
decl
cmpsb
jp
sub
cld
sarl
inc
and
pop
cwtl
jnp
loop
arpl
call
test
in
jnp
out
cwtl
call
inc
aas
adc
and
cmp
inc
incl
call
cmpsb
out
pusha
mov
ret
scas
cmp
mov
aam
add
mov
decl
or
hlt
repnz
lret
adc
xchg
loopne
cwtl
or
adc
ljmp
call
negb
pop
pusha
ljmp
enter
ss
insl
push
add
sbb
call
xor
test
sbb
dec
push
sahf
and
movsb
lods
loope
ret
bound
lcall
mov
gs
push
mov
ljmp
aam
leave
cmp
push
mov
mov
pop
xchg
sbb
incl
push
into
jne
xchg
jns
push
inc
inc
hlt
xchg
adc
roll
sub
mov
incl
xchg
or
idivl
nop
mov
clc
lcall
dec
sti
insb
loopne
das
js
sarb
sub
adc
addl
push
popa
push
mov
ret
aad
adc
das
xchg
jmp
mov
scas
push
lods
cld
or
or
xchg
jmp
sub
push
lret
popa
fwait
int
fisubs
mov
mov
mov
mulb
xchg
push
dec
adc
or
xor
mov
pushl
jno
jno
jo
xor
sbb
jmp
gs
mov
cmp
xor
scas
pop
add
movsb
cmp
xchg
aaa
mov
cmp
hlt
movsb
jns
inc
lcall
ret
pushl
mov
cmpsw
jo
pop
dec
outsl
rorl
push
add
ja
scas
push
pop
out
cmp
cmp
push
push
jecxz
stos
adcl
gs
and
cmp
clc
in
sahf
mov
ljmp
vmovhps
ret
jno
xlat
bound
push
cmp
xor
mov
jo
pop
mov
inc
xor
adc
mov
std
sbb
call
in
pushf
andl
out
stos
mov
pushl
push
test
inc
push
in
repnz
mov
jg
rorl
mov
mov
lcall
leave
push
or
cmp
sbb
or
mov
test
mov
mov
or
ljmp
nop
movsb
xchg
addr16
jecxz
mov
lds
out
push
nop
xchg
fs
call
ja
sub
fldl
data16
nop
xor
xchg
adc
sub
insb
stos
mov
jne
mov
mov
xor
xor
jbe
ljmp
out
int3
in
or
pop
repz
stos
xor
notb
cld
idiv
mov
dec
popa
and
cmpsb
mov
dec
mov
mov
xchg
es
xchg
cmp
cli
pop
mov
sbb
ss
dec
fwait
popf
in
pushl
rcll
jne
mov
ret
xor
xchg
xor
and
sti
lcall
cmp
xor
push
jns
into
sarl
lcall
aam
sub
mov
push
xor
jg
cmp
pop
jmp
jmp
sub
pop
push
addr16
lods
into
pop
lahf
test
fnstenv
jb
and
inc
gs
mov
shll
pop
mov
das
addr16
insb
imulb
adc
lcall
xor
push
xor
cmp
sahf
cltd
sub
dec
and
adc
mov
mov
scas
movsb
andb
jge
inc
or
sbb
or
sub
pushl
or
jno
xchg
fidivs
pop
test
mov
lahf
aaa
mov
adc
jg
cmp
mov
pop
add
or
cld
lea
incl
jno
add
aam
shll
jg
out
xchg
stos
ljmp
sbb
xor
push
sub
pop
xchg
pop
mov
cmp
les
mov
mov
fs
cld
inc
jo
mov
cltd
push
sbb
std
call
aas
and
or
jae
ss
mov
push
std
mov
incl
arpl
xchg
adc
jbe
aam
fistpl
incl
insl
jns
sub
enter
int
sub
push
ret
jmp
arpl
popa
out
clc
sub
xchg
rcl
out
gs
dec
xchg
movsb
lahf
or
pushf
mov
and
call
mov
outsl
inc
sahf
int
hlt
cmp
cmp
pushf
ja,pn
scas
addr16
pushl
std
push
sbb
inc
das
fsubr
inc
jo
adc
data16
push
dec
cmc
fdivr
in
mov
lret
mov
aad
push
aam
or
sahf
shrb
mov
js
cld
inc
or
inc
ss
push
pop
fistpll
and
cli
inc
inc
ja
stos
ljmp
aaa
adc
jg
push
push
jae
push
xlat
mov
jp
mov
pop
adc
icebp
cli
hlt
jmp
fs
sub
or
mov
shl
test
jl
mov
stc
addr16
jg
pushl
les
adc
lods
js
mov
ja
in
cmpsb
ljmp
pushf
aas
aad
incl
pop
imul
sahf
leave
dec
and
mov
movsl
cmp
pop
sub
idivl
pop
mov
ljmp
add
test
sub
inc
and
nop
stos
pop
and
decl
push
ja
in
xchg
scas
and
std
sub
stos
imul
push
movsb
and
dec
ss
insb
mov
inc
sbb
ljmp
scas
and
ret
stos
leave
mov
dec
cld
lcall
dec
push
movl
pop
lock
cmc
mov
mov
and
divb
jb
jns
cmp
mov
xchg
scas
iret
mov
cmp
pop
push
sub
adc
dec
repz
adc
ljmp
addr16
push
or
xor
inc
out
js
inc
les
xchg
nop
inc
sbb
mov
shlb
std
lcall
outsl
cmp
dec
jnp
sbb
icebp
ret
jecxz
aam
das
or
jb
sbb
pushl
test
cld
cmpsb
or
mov
or
shl
cmc
popf
insl
ret
add
jg
adc
add
xchg
xchg
mov
cld
decl
fsubs
pop
aas
imul
jb
jbe
mov
mov
in
lahf
push
sbb
in
popf
cmpsb
lods
sbb
or
cli
mov
adc
xchg
xor
daa
xchg
ljmp
mov
repz
mov
sub
jnp
adc
push
sti
gs
or
push
ljmp
decl
mov
jns
xor
inc
bnd
inc
lahf
adc
test
das
clc
lcall
and
js
nop
mov
fdivs
lret
aas
mov
call
cwtl
inc
dec
fstpt
sub
push
out
adc
or
lods
call
xchg
cmp
push
and
mov
jnp
imul
add
call
add
or
pop
icebp
stc
xchg
shlb
ja
mov
lock
xor
je
mov
lods
ficoms
aas
dec
shrd
mov
xchg
scas
stos
dec
insb
mov
push
or
aaa
add
std
push
loop
jmp
cli
mov
inc
mov
addr16
add
insl
sbb
in
push
cmpsl
incl
fsubl
lea
daa
scas
jmp
add
pop
inc
insb
pop
arpl
out
or
cmpsb
fsubrl
ljmp
popf
mov
and
mov
sbb
lds
stc
mov
push
mov
mov
add
test
or
and
dec
sub
div
xchg
pushl
sub
outsb
and
pop
lock
push
stos
arpl
popa
out
mov
pop
lcall
mov
mov
xchg
xchg
pop
les
ret
pushf
jg
subl
iret
pop
mov
xor
dec
subb
mov
mov
and
sbb
lret
mov
shr
inc
lahf
dec
scas
xor
mov
test
dec
gs
sahf
arpl
iret
out
imul
call
cmp
mov
insb
dec
sub
jl
mov
xchg
dec
or
dec
es
faddp
lods
sar
push
fnsave
push
gs
imul
mov
fistpll
jb
mov
iret
push
stc
cmc
mov
loope
outsl
sbb
or
jmp
stos
ljmp
loop
jle
loop
cmp
jmp
mov
loopne
jmp
sbb
adc
sub
aaa
movsb
fsts
mov
ret
popa
fmul
imul
xchg
push
insl
add
xchg
sbb
xchg
incl
out
cmp
movsl
dec
push
pushf
add
stc
aaa
int
sub
pop
outsb
in
imull
jg
lret
jg
in
aam
cltd
mov
xor
or
mov
fcos
call
sti
stos
pop
lret
push
cmp
rcl
jle
repnz
xchg
dec
add
incl
jmp
idiv
mov
call
or
lods
dec
jl
or
cmpsb
jg
xlat
loop
jmp
in
in
xchg
dec
pushf
enter
sub
jne
les
pop
stc
pushl
xchg
pop
arpl
aas
dec
push
fs
mov
fmull
dec
fld
stos
outsl
lcall
in
ja
push
insb
ficomps
enter
xchg
xchg
stos
outsb
push
push
adc
in
sar
dec
ljmp
mov
adc
jno
dec
cs
je
lcall
sub
outsl
imulb
mov
sub
rcrb
pop
pop
ljmp
mov
jmp
mov
mov
lret
cmp
sahf
pop
sbb
out
xchg
mov
cs
aas
es
ljmp
pop
mov
clc
push
jns
outsl
push
inc
clc
jle
and
jp
fwait
hlt
mov
decl
test
imulb
aaa
les
lods
das
xchg
shl
in
in
push
add
dec
or
decl
push
test
gs
shll
pop
push
ja
lcall
incl
cwtl
or
xchg
shlw
call
sub
insb
mov
xor
sbb
mov
add
shll
cltd
push
xor
fptan
loop
jne
xchg
ds
ret
push
jle
mov
lods
mov
jo
or
mov
jl
cs
ret
in
lock
mov
shl
cmp
jge
aas
sub
sbb
das
aad
adc
seto
mov
fcos
call
bound
jge
orb
sub
cs
mov
xchg
jb
lret
sub
push
sub
xchg
mov
cmp
or
shlb
loopne
lret
sub
iret
adc
stc
xor
lret
jmp
xchg
insb
sti
into
stos
lods
dec
cs
rolb
xlat
xchg
sub
hlt
daa
mov
and
pop
xchg
ljmp
push
aas
daa
adc
insb
sub
aaa
sub
repz
push
ljmp
push
js
addr16
lods
add
dec
xchg
stc
decb
sbb
jbe
dec
adc
push
cmc
addr16
jg
lret
bound
xor
jmp
std
inc
cltd
xchg
jg
es
add
ret
cmp
insb
out
sbb
divb
jg
adc
mov
xchg
mov
mull
push
push
cmpsb
mov
and
inc
ljmp
inc
adc
xchg
mov
mov
fcmovnbe
test
xor
xor
test
push
shrb
jg
out
cmc
add
mov
std
inc
pop
rorb
sub
repz
iret
cmpsb
inc
es
pushl
jno
lret
scas
fcom
clc
out
popf
push
scas
pop
mov
sbb
cmpsl
or
divb
fsubrl
pop
popf
add
cmp
call
call
mov
mov
mull
ljmp
adc
arpl
or
push
adc
stc
cs
mov
add
pushf
pop
or
aam
sahf
pop
jne
sbb
call
popf
sub
mov
add
sub
notb
daa
mov
mov
adc
mov
sbb
out
add
and
mov
mov
fisubrl
jns
jmp
xchg
xor
xchg
mov
test
add
mov
xchg
lahf
mov
mov
mov
sub
add
jae
daa
xchg
scas
add
stc
mov
hlt
int
into
pushaw
ljmp
mov
cmp
cmp
mov
xor
and
icebp
fwait
scas
ljmp
jb
xchg
out
jge
xchg
fdivrl
push
sub
andl
jl
xchg
xchg
icebp
decl
xchg
add
xchg
bound
xchg
inc
inc
dec
jge
sub
jb
jbe
and
pushl
shll
outsl
xchg
jg
shrb
notb
xor
push
pop
inc
loop
cmp
gs
call
fdivl
outsb
addl
pop
and
nop
lret
push
pop
sub
jp
insb
loope
push
adc
call
andl
xor
push
xor
iret
mov
call
or
incb
je
adc
cs
add
pop
fisubrs
sarb
aaa
mov
das
call
nop
xchg
inc
jp
and
xchg
mov
mov
sbb
jns
icebp
mov
xchg
call
cld
lcall
mov
cmp
and
cwtl
std
mov
mov
addb
jmp
aam
mov
add
iret
rcr
xor
add
stos
mov
repnz
decl
insl
adc
or
stc
fwait
andb
out
mov
movsl
leave
rorl
call
in
mov
mov
xchg
movsb
jle
das
ja
ret
test
adc
dec
gs
andb
add
mov
pushl
mov
into
jmp
adc
bound
aam
mov
cmp
imul
push
xchg
ja
ret
fnstcw
cwtl
test
mov
mov
jmp
jmp
call
xchg
pop
ds
test
cltd
aam
push
dec
cwtl
andl
ljmp
dec
pop
icebp
mov
es
cmp
or
pop
sahf
sbb
push
cmc
repz
adc
test
adc
stc
aad
mov
fdivrl
mov
sub
pop
and
out
int3
test
and
push
stc
push
sbb
popf
ret
xchg
cmpl
mov
ss
push
xor
add
push
fistpl
cmp
cmp
call
jmp
mov
into
xchg
cmp
out
outsl
sbb
mov
cltd
xor
pushf
mov
stc
ret
mov
sub
mov
sbb
enter
mov
jb
and
imul
gs
pop
cmc
ss
incl
dec
xchg
mov
lds
add
inc
lods
mov
jmp
or
fidivrl
push
rcrw
imul
mov
pushf
mov
nop
out
idiv
dec
daa
lret
and
xor
sub
mov
mov
cmp
mov
dec
dec
dec
dec
mov
sub
mov
sbbw
out
mov
and
lret
mov
mov
jge
mov
cmp
stos
dec
mov
cmp
pop
push
frndint
sti
push
inc
mov
dec
xor
imul
dec
mov
imul
pop
imul
mov
into
sub
push
arpl
cltd
aaa
clc
dec
sbb
addr16
xor
sub
cmpsl
jb
test
je
mov
into
jbe
mov
lahf
add
je
imull
shll
adc
adc
lahf
cmp
out
cs
cmp
ret
in
dec
rcr
add
fadd
dec
bound
jne
pop
ss
mov
dec
xor
out
xchg
fwait
loope
push
xchg
jo
inc
dec
push
psubq
ud0
mov
adc
sarb
in
mov
loop
gs
daa
push
mov
sbb
add
push
mov
add
add
xchg
ret
add
outsl
aas
ret
inc
add
jp
xor
add
adc
fdivs
jmp
sti
lock
add
sub
fxch
push
sbb
movsb
cmp
fwait
outsl
xor
aas
lcall
aaa
dec
or
xchg
clc
icebp
pop
sub
rcll
xor
jmp
adc
or
loopne
andb
fadds
add
inc
mov
test
jl
jmp
sub
sbb
fs
out
jp
add
bound
and
cmp
cmp
fcomip
inc
sbb
lret
movsl
dec
ss
xor
filds
in
mov
sbb
jg
lcall
movsb
cmpsb
mov
notb
pop
dec
and
not
sti
cli
pushf
sub
jg
mov
sub
and
push
pop
and
fcompl
fst
out
cli
jmp
ja
sarl
cwtl
mov
aaa
nop
mov
gs
dec
add
cmp
js
sbb
les
imul
sarl
sub
and
dec
movb
test
mov
adc
push
lret
lock
cwtl
sti
xlat
inc
out
jmp
es
mov
lret
sbb
stos
adc
cmpsl
or
fstpt
jnp
sti
adc
lock
enter
inc
addr16
pop
and
xacquire
ficomps
push
sbb
scas
jb
test
or
stc
mov
and
mov
jmp
aad
inc
lods
rcl
mov
dec
jl
add
ljmp
shlb
orl
scas
sub
xor
into
push
jg
decl
mov
cmpsl
sbb
dec
adc
je
jo
pushl
loope
add
or
jp
fucomip
and
mov
inc
cmpsb
insl
sahf
pusha
out
push
in
sub
call
xor
push
sbb
fdivrs
sahf
jnp
or
into
outsl
sbb
cld
decl
call
mov
mov
out
lcall
dec
stos
into
shr
inc
leave
xor
xor
mov
popf
shl
mov
dec
mov
and
lret
lahf
mov
test
or
in
jl
push
sub
xlat
cmc
data16
outsl
add
ljmp
stos
lods
jmp
pop
xor
pop
rcrb
imull
xor
out
sub
mov
mov
pop
lcall
frstor
mov
xchg
outsb
out
dec
out
cmc
cmp
add
xchg
sub
push
test
mov
push
lret
mov
hlt
ljmp
aaa
jmp
lods
lock
in
push
sbb
movsl
ds
lcall
ds
push
cmpsl
out
scas
or
or
jecxz
and
inc
sub
jg
cs
jp
cld
push
rcrl
loopne
in
sub
pop
jge
cmp
push
pop
inc
lea
pop
mov
dec
push
sbb
push
or
pop
cmp
push
jecxz
fcmovnb
jmp
mov
jno
pop
movsb
sbb
cmp
jno
js
or
xor
loopne
pop
loopne
sbb
call
mov
loopne
pop
rcrb
sbb
outsl
shlb
insl
nop
cltd
lret
mov
sbb
mov
nop
subb
ret
bound
inc
push
xchg
leave
call
js
push
dec
sbb
fdivs
sub
push
adc
push
xchg
adc
lret
gs
decl
std
xchg
std
and
cmc
vpshufd
dec
aaa
push
lods
sub
arpl
xor
sar
fidivrl
into
adc
cmp
int
jb
ss
inc
adc
mov
pushl
jb
aaa
addr16
mov
or
pop
or
dec
cld
es
imul
pop
inc
push
adc
sub
push
sbbb
jae
fistpl
mov
jmp
lahf
mov
push
scas
cmp
and
pop
and
repz
stos
sbb
adc
mov
or
gs
ja
gs
stc
mov
xchg
cmp
fucomp
ret
stos
fimull
mov
mov
test
aam
cmpb
push
stos
repz
xchg
jge
xlat
call
xor
sub
and
shl
fildll
adc
adc
jb
daa
testb
pushl
mov
and
out
cmp
xchg
pop
out
fs
xor
mov
push
jmp
dec
sahf
rcrb
jge,pn
lea
out
cld
pop
mov
sahf
ljmp
ljmp
pop
mov
add
fs
mov
mov
pop
adc
jno
mov
or
dec
into
jmp
push
call
pop
movsb
fdivrs
cmp
cmp
cmpsl
mov
nop
pop
mov
ds
cmc
lods
or
call
push
dec
mov
mov
mov
test
jbe
inc
pushf
push
push
std
enter
iret
xor
jmp
mov
dec
mov
mov
mov
pop
shrl
shll
jmp
pop
pop
cmc
arpl
sbb
jo
movb
dec
ret
or
push
xchg
stc
mov
add
call
std
jle
pop
inc
jmp
les
int3
out
mov
fs
mov
push
imul
fcompl
pop
mov
inc
stc
mov
push
sub
dec
in
adc
pop
dec
arpl
sbb
repz
ret
sbb
push
xor
add
push
xchg
sub
test
call
push
sub
mov
leave
int3
loop
ja
popf
out
jmp
ret
daa
inc
add
xor
stos
mov
xchg
pusha
adc
xchg
lods
push
out
add
jmp
add
dec
jl
lods
xchg
cmp
xorl
push
js
pop
push
adc
mov
cmp
stc
dec
inc
mov
repnz
aas
insb
inc
adc
jl
cmp
sub
incl
ret
cltd
lahf
into
push
and
xchg
arpl
xchg
sbb
dec
in
aam
rorl
std
mov
decl
arpl
xchg
mov
sub
lods
mov
and
scas
or
decl
andl
sub
mov
pop
lret
mov
add
sbb
jne
mov
outsl
dec
sub
jp
xchg
adc
push
cmpsl
in
fidivrs
rcrb
lret
sub
clc
lcall
test
sti
jge
arpl
sub
jge
ljmp
mov
pop
push
add
add
add
mov
pusha
mov
cmp
call
enter
and
pop
mov
mulb
and
and
push
jnp
adc
cmp
sti
pop
mov
cmp
popf
imulb
mov
mov
std
xchg
xor
xchg
movsbl
mov
lock
xor
push
in
stos
mov
cmp
mov
pusha
outsb
ficoml
adc
and
xchg
addr16
and
cs
sysexit
and
pop
lds
pop
inc
push
fimull
pop
pop
cltd
int
jno
ret
rorl
sub
outsl
xor
lds
loop
jnp
adc
scas
pop
testl
pop
inc
loopne
push
nop
add
outsl
pop
mov
pop
cmp
or
or
popa
mov
js
pop
xchg
es
mov
pop
or
pop
fildl
pop
pop
xchg
bound
out
push
and
imul
sub
nop
insl
mov
xor
jge
mov
adc
mov
pop
aaa
inc
mov
ljmp
fldt
aad
xchg
pop
pop
das
push
dec
mov
xchg
loope
adc
dec
jae
aas
sub
ja
bound
loopne
icebp
push
mov
push
push
sti
nop
scas
insb
inc
arpl
adc
pusha
pop
sbb
shlb
mov
mov
mov
ja
dec
mov
adc
dec
mov
sbb
and
pop
sub
dec
cmp
cmp
xor
fstpl
adc
inc
mov
xor
mov
adc
sub
pop
fcmovnb
lods
mov
mov
inc
sti
push
mov
add
xor
das
call
inc
mov
add
xchg
jmp
cwtl
arpl
ret
inc
std
mov
lret
insb
xor
ljmp
sti
pop
dec
and
ret
sub
mov
mov
pop
push
punpckhwd
lcall
or
xchg
scas
scas
mov
pop
pop
cmpsl
inc
or
jb
lds
aad
decl
add
xlat
adc
enter
in
repz
in
in
test
jge
int3
rol
stc
mov
dec
inc
sbb
and
popf
xchg
fnstsw
fcmove
in
movsl
inc
stc
lahf
sub
stc
incl
jnp
sub
cmp
inc
cmc
add
shr
xchg
mov
leave
repz
iret
and
call
ljmp
in
mov
mov
aad
and
jp
or
sahf
sbbl
sbb
jecxz
sar
lcall
adc
mov
push
sbb
lcall
add
adc
or
push
daa
xchg
stc
aaa
mov
call
xchg
cmp
aas
clc
push
mov
pusha
dec
aad
xorb
cld
sar
incl
jns
sbb
jl
outsb
or
sub
inc
pop
aad
inc
aas
push
jb
cmp
inc
mov
push
pusha
inc
or
pop
sbb
and
jp
adc
lcall
aas
loopne
scas
pop
sbbl
aam
add
ljmp
mov
ja
inc
in
rol
decl
cltd
jg
lods
scas
mov
cmp
aaa
dec
xchg
out
inc
cltd
sub
inc
aad
ss
in
lcall
je
dec
sbb
ja
jecxz
cmp
jnp
push
fdivrs
jmp
decl
aas
icebp
cmp
roll
xchg
sub
lds
into
cmpsl
sti
push
pop
jle
cmp
push
sbb
ljmp
mov
adc
pop
add
dec
loopne
mov
or
xchg
mov
outsb
punpckldq
jmp
jecxz
pop
sub
cwtl
and
test
loop
xchg
mov
jbe
sbb
in
mov
clc
shl
aad
push
arpl
repnz
shrb
or
lcall
xor
xchg
mov
lret
jbe,pn
outsl
mov
push
repz
imul
pop
mov
gs
add
aam
push
lret
sbb
das
div
and
push
das
dec
sbb
cmp
inc
mov
jl
rcll
cmp
jno
les
lock
add
xchg
jge
fwait
mov
inc
inc
shll
xor
adc
pop
mov
mov
sub
popa
pushl
aam
imul
sahf
sbb
test
cmp
jp
dec
and
sbb
xchg
or
cmp
inc
mov
mov
fxch
mov
movsl
adcb
cmp
xchg
jne
ffreep
push
xlat
mov
fildll
incl
sub
outsb
xlat
aad
cld
flds
pop
xchg
dec
push
xor
in
xchg
call
sbb
jb
dec
mov
pop
test
icebp
shl
mov
pushl
sbb
ret
scas
test
outsl
enter
mov
xchg
jnp
mov
cmp
lcall
scas
test
xchg
sub
xchg
adc
xchg
lret
pop
push
int
xor
cmpsb
insl
mov
incl
push
imulb
repz
subb
int3
pop
adc
sbbb
call
jge
test
in
fimull
add
loopne
xchg
arpl
lret
daa
inc
sbb
cmp
test
mov
rorl
xor
mov
lret
es
pushl
dec
enter
orl
and
imul
loope
movsb
jge
mov
decl
add
xor
into
push
or
xchg
and
mov
lret
dec
mov
notl
call
pop
je
cmp
push
adc
inc
hlt
mov
subb
sbb
jns
jmp
cmpl
dec
insb
mov
cld
xchg
arpl
ja
and
mov
fcom
add
cmpsl
call
xchg
sahf
inc
jge
outsl
mov
andb
push
mov
nop
movsb
pop
cli
cmpl
mov
xor
in
out
cld
test
cld
push
mov
cltd
mov
jb
mov
mov
pop
push
rcrl
push
imul
aas
adc
dec
int
add
or
sub
fsubrs
mov
sub
mov
loopne
imul
jp
stos
rcrl
xchg
dec
rcrb
pop
sbb
mov
push
incl
cmp
mov
stc
cld
insb
jne
dec
mov
or
adc
sub
sti
jne
or
mov
stos
xor
fs
lret
xchg
mov
push
pslld
sub
iret
mov
adc
add
adc
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
pop
add
aad
adc
test
xlat
xor
test
loopne
adc
das
jge
or
call
out
rol
data16
mov
pusha
ret
mov
dec
jge
mov
aad
dec
and
incl
cmpsb
cld
or
adc
rorl
jp
sub
popl
call
popf
jmp
repz
lds
pop
js
mov
xor
or
and
inc
adc
ljmp
pop
xchg
pop
xchg
sbb
add
sub
lds
jae
jae
pushl
push
pop
push
cmpsl
testl
es
mov
fsubrl
cli
adc
pop
sbb
inc
xor
aaa
adc
push
xor
mov
int3
and
and
call
mov
mov
test
iret
or
xchg
and
add
push
sbb
out
fwait
cmp
arpl
inc
and
pop
int3
cmpsb
hlt
addr16
sbb
and
jmp
decl
sub
push
or
out
cmp
rcll
cmc
jo
dec
les
inc
or
sub
outsl
mov
jg
inc
adc
add
mov
jmp
enter
repnz
rcr
mov
jo
or
pushl
hlt
jb
push
into
outsl
popf
dec
dec
sub
je
lock
mul
mov
xor
dec
mov
aaa
mov
icebp
lret
test
xor
into
std
stos
or
pop
sti
pop
fsubs
inc
mov
pop
add
and
cli
sbb
xchg
dec
and
fidivrs
push
pop
xchg
jl
pop
decl
xor
xor
mov
imul
or
sub
icebp
xchg
jnp,pt
mov
flds
inc
push
adc
and
or
pushf
mov
test
and
sub
or
jmp
std
mov
rcrl
sahf
xchg
dec
out
scas
or
in
sti
sahf
mov
mov
pushl
pushl
inc
sbb
fwait
scas
adc
cmp
mov
jp
and
pushl
cmp
dec
and
hlt
arpl
jle
ds
arpl
jbe
movsl
ljmp
dec
rorl
sahf
pop
inc
testb
lods
aad
cmc
xor
ror
cli
scas
sahf
aaa
cld
inc
call
shlb
in
cmpsb
mov
xchg
mov
xchg
pop
jnp
cmp
call
aas
testl
dec
insl
in
ds
push
nop
or
daa
outsb
jno
out
and
jmp
mov
pop
or
pop
cmp
popa
test
mov
addr16
sbb
lock
cli
dec
sahf
stos
mov
pop
aam
out
hlt
jecxz
sub
adc
lcall
fs
mov
in
adc
inc
mov
push
mov
into
dec
or
pusha
outsb
shrl
test
cmp
filds
mov
rorl
jge
xor
call
js
or
scas
mov
add
rcll
movsl
icebp
ret
push
inc
bound
pushl
not
fildl
adc
push
adc
sub
xchg
repnz
jmp
jnp
sahf
in
flds
incl
and
lods
dec
lock
pop
sub
mov
ret
xor
pop
dec
push
aad
mov
call
out
mov
inc
pop
sub
je
xchg
in
jae
add
sub
jnp
jg
mov
or
in
sbb
fisttpl
xlat
or
leave
xor
inc
jns
add
call
push
mov
jb
sbbl
lds
adc
mov
int
aaa
pushl
xchg
mov
ja
jo
jle
cwtl
inc
clc
subl
xor
scas
clc
pushl
arpl
je
inc
mov
mov
popa
mov
lods
out
push
sbb
sub
inc
cmp
xchg
loope
push
push
into
sub
mov
sub
int
jnp
call
fdivp
not
bound
je
imul
jp
add
nop
repz
cmp
inc
ljmp
shrb
cmp
and
ja
sbb
icebp
fidivrs
call
icebp
lcall
inc
cli
jns
nop
add
bound
inc
inc
or
lods
xchg
imul
adc
jp
ret
test
fmul
mov
icebp
cwtl
test
subl
push
dec
test
push
imul
mov
mov
nop
lret
pop
dec
adc
stc
adc
cmp
push
cmpsb
popf
sub
cmpsb
xchg
pop
test
test
loopne
lea
xchg
stc
mov
fwait
ljmp
pushf
dec
mov
mov
loopew
shlb
push
mov
xchg
cwtl
sbb
inc
lds
pop
mov
or
mov
xchg
lods
cmp
xchg
push
shr
std
addr16
mov
jl
inc
or
loopne
addr16
lds
add
cwtl
imul
lahf
adcl
jmp
popa
lcall
mov
not
adc
xchg
popf
fsubl
mov
scas
insb
mov
jmp
out
scas
add
add
dec
adc
sbb
push
mov
ljmp
jg
cld
sarl
inc
and
pop
cwtl
jnp
loop
arpl
incl
lods
out
cwtl
call
inc
aas
adc
and
cmp
inc
inc
jns
aad
cmp
cmpsb
out
pusha
mov
ret
scas
cmp
mov
aam
add
mov
mov
push
repnz
lret
adc
xchg
loopne
cwtl
or
adc
ljmp
lcall
ljmp
xchg
mov
or
js,pt
ss
insl
push
add
xor
jg
incl
test
sbb
dec
push
sahf
and
movsb
lods
loope
ret
bound
sbb
mov
gs
push
mov
aam
sar
jnp
cmp
push
mov
mov
pop
xchg
sbb
push
fbld
mov
inc
inc
hlt
xchg
adc
roll
sub
mov
mov
or
pushl
nop
mov
clc
lcall
dec
sti
insb
int
jle
pop
cld
incl
adc
addl
push
popa
push
add
call
ret
aad
adc
das
xchg
jmp
mov
scas
push
lods
cld
or
or
xchg
aam
add
aaa
std
lcall
fwait
int
fisubs
mov
movsl
push
jmp
mulb
xchg
push
dec
adc
or
xor
mov
jno
jno
fdivs
xor
sbb
jmp
gs
mov
cmp
add
into
aad
lds
and
loopne
movsb
jns
inc
lcall
ret
mov
cmpsw
pushl
pop
dec
outsl
rorl
push
add
ja
scas
push
pop
out
cmp
lock
push
jecxz
pop
lock
ljmp
insb
fsub
jecxz
and
cmp
clc
in
sahf
mov
vmovhps
insb
negl
ret
jno
xlat
bound
push
cmp
xor
mov
jo
jmp
xchg
add
sub
add
mov
mov
addr16
cmpsb
lcall
rorl
in
pushf
andl
out
stos
mov
push
incl
lret
inc
push
in
repnz
mov
jg
rorl
mov
mov
fnstcw
dec
push
or
cmp
sbb
or
mov
test
mov
mov
or
scas
out
imul
addr16
jecxz
mov
lds
out
push
nop
xchg
fs
adc
sub
lock
fldl
data16
nop
xor
xchg
adc
sub
insb
stos
mov
pop
add
or
xor
xor
jbe
aaa
cwtl
out
int3
call
std
inc
pop
repz
stos
xor
idivb
sbb
dec
popa
and
cmpsb
mov
dec
mov
mov
call
xchg
cmp
cli
pop
mov
sbb
ss
dec
fwait
popf
in
jbe
rcll
mov
lahf
jne
mov
ret
xor
xchg
xor
and
cmc
cmp
xor
outsl
cmp
push
jns
into
sarl
lcall
aam
sub
mov
incl
cld
push
xor
jg
cmp
pop
jmp
fs
dec
aam
ljmp
pop
push
addr16
lods
into
pop
lahf
test
fnstenv
jb
and
gs
mov
mov
shll
pop
mov
das
addr16
insb
imulb
adc
pop
xor
decl
xor
cmp
sahf
cltd
sub
dec
and
adc
add
ja
jmp
mov
movsb
andb
jge
inc
or
sbb
or
sub
mov
decl
push
sub
xchg
fidivs
pop
test
mov
lahf
aaa
mov
adc
cmp
ljmp
call
insl
cmp
cld
lea
cmpsl
repz
lcall
add
aam
shll
jg
out
xchg
sbb
xor
xlat
pop
cmc
call
and
xchg
pop
mov
cmp
les
jg
rcll
mov
fs
cld
inc
jo
mov
cltd
push
sbb
sbb
and
pushl
iret
xor
jae
ss
mov
push
std
mov
andb
jmp
xchg
adc
jbe
aam
fistpl
mov
insl
jns
sub
enter
int
sub
push
ret
pusha
xor
popa
jmp
mov
sub
xchg
rcl
out
gs
dec
xchg
movsb
lahf
or
pushf
mov
and
mov
jmp
int
hlt
cmp
cmp
pushf
ja,pn
scas
addr16
push
sbb
inc
jmp
jo
adc
data16
push
dec
cmc
fdivrl
mov
mov
aad
push
aam
or
sahf
shrb
insb
cld
inc
or
pop
icebp
cld
inc
ss
push
pop
fistpll
and
cli
inc
inc
ja
stos
imul
jg
push
push
jae
push
xlat
mov
jp
mov
pop
adc
icebp
cli
hlt
daa
fs
sub
decl
cltd
xchg
cld
dec
mov
shl
test
jl
mov
stc
addr16
jg
sbb
xchg
in
inc
outsb
jl
push
lods
js
mov
ja
in
cmpsb
ljmp
pushf
aas
aad
inc
arpl
lcall
sahf
leave
dec
and
mov
movsl
cmp
pop
sub
idivl
pop
mov
lods
test
or
flds
inc
movsl
nop
stos
pop
and
jl
mov
lcall
mov
std
sub
stos
imul
push
movsb
and
dec
ss
insb
mov
inc
sbb
scas
and
ds
stos
leave
mov
dec
cld
lcall
dec
push
movl
mov
decl
mov
and
divb
jb
jns
cmp
mov
iret
mov
cmp
pop
push
sub
adc
dec
repz
adc
mov
call
ret
xor
inc
out
js
inc
les
xchg
nop
inc
sbb
mov
shlb
pop
stos
outsl
cmp
lcall
jle
ret
jecxz
aam
das
or
jb
sbb
loop
decl
cld
cmpsb
or
mov
or
shl
cmc
popf
insl
ret
add
ljmp
insb
test
xor
mov
xchg
xchg
mov
cmpsb
lea
cld
pop
jge
pop
aas
imul
jb
jbe
mov
ljmp
lahf
push
sbb
in
popf
cmpsb
lods
sbb
or
subl
mov
daa
xchg
ljmp
push
sar
repz
mov
sub
jnp
adc
push
sti
gs
or
push
mov
pop
add
decl
leave
pop
inc
jns
xor
inc
bnd
inc
lahf
adc
test
data16
sbb
incl
scas
in
js
nop
mov
fdivs
lret
aas
mov
mov
inc
dec
fstpt
sub
push
out
adc
or
lods
xchg
cmp
push
and
mov
jnp
imul
add
call
add
or
xchg
shlb
ja
ljmp
aam
mov
je
mov
lods
ficoms
aas
dec
shrd
mov
insb
mov
mov
push
or
aaa
add
std
push
loop
movsl
imul
jae
cli
mov
inc
mov
addr16
add
insl
sbb
in
push
cmpsl
fiaddl
fsubl
jnp
daa
scas
jmp
add
pop
inc
insb
pop
arpl
out
or
cmpsb
fsubrl
popf
mov
and
cld
ljmp
mov
sbb
lds
stc
mov
push
mov
stos
es
incl
push
sub
loope
sub
div
xchg
ljmp
outsb
and
pop
lock
push
stos
arpl
popa
out
mov
pop
push
mov
push
mov
xchg
xchg
pop
les
ret
pushf
jg
subl
iret
pop
mov
xor
fnstcw
subb
mov
mov
and
sbb
lret
mov
inc
in
pop
inc
lahf
dec
scas
xor
mov
test
dec
gs
sahf
arpl
iret
out
imul
adc
cmp
pushl
in
dec
sub
jl
mov
xchg
dec
or
dec
es
lods
sar
sbb
jge
fnsave
push
gs
imul
xchg
fistpll
pushl
jb
mov
iret
push
stc
cmc
mov
loope
outsl
sbb
push
stos
ljmp
cwtl
outsl
into
pop
loop
jle
loop
cmp
jmp
mov
sbb
add
jmp
fwait
sub
aaa
movsb
fsts
out
popa
fmul
call
imul
xchg
push
insl
add
xchg
sbb
xchg
cmp
movsl
clc
mov
add
stc
aaa
int
sub
pop
outsb
in
imull
lret
ljmp
aam
cltd
mov
xor
or
mov
fsincos
stos
pop
lret
push
decl
rcl
jle
repnz
xchg
dec
add
out
xchg
out
clc
pushl
or
mov
call
or
lods
dec
jl
or
xlat
loop
fcomip
jmp
in
in
xchg
dec
pushf
enter
sub
jne
les
pop
stc
mov
cs
fcoml
jge
aas
dec
push
fs
mov
fmull
dec
fld
stos
outsl
pop
arpl
ja
lcall
insb
ficomps
enter
xchg
xchg
stos
outsb
push
push
adc
in
shrb
mov
push
fcoml
sbb
jno
dec
cs
je
sbb
sub
outsl
push
push
mov
sub
rcrb
pop
pop
ljmp
mov
pop
mov
pushl
cmp
cmp
sahf
pop
sbb
out
xchg
mov
cs
aas
es
decl
clc
push
jns
outsl
push
inc
clc
jle
and
jp
fwait
hlt
mov
dec
je
pop
idiv
ljmp
aaa
les
lods
das
xchg
shl
in
in
push
add
dec
or
or
push
test
jmp
clc
cmc
out
inc
ja
movsb
adc
pop
push
ja
lcall
inc
pushf
cwtl
or
mov
sub
dec
and
cmp
lds
ljmp
cld
sti
push
cltd
push
xor
fptan
loop
jne
xchg
ds
ret
push
jle
mov
lods
xor
push
jo
or
mov
jl
cs
ret
in
lock
mov
shl
sarl
sub
pushf
inc
clc
sbb
das
aad
adc
seto
mov
fnstenv
jmp
jge
orb
sub
cs
mov
xchg
jb
lret
sub
mov
ljmp
cmp
or
shlb
loopne
lret
sub
iret
adc
stc
xor
lret
jecxz
insb
sti
into
ljmp
rolb
xlat
xchg
sub
hlt
daa
mov
and
pop
xchg
bound
inc
push
aas
daa
call
adc
insb
sub
aaa
sub
repz
push
ljmp
addr16
decb
sbb
jbe
dec
adc
push
cmc
addr16
jg
lret
bound
xor
xchg
jg
clc
fbld
ret
cmp
insb
out
sbb
divb
push
ljmp
push
or
ds
xchg
mov
mull
push
push
cmpsb
mov
and
inc
adc
mov
mov
mov
fcmovnbe
test
xor
xor
test
test
incl
xor
inc
cmc
add
mov
std
inc
pop
sar
decl
movsl
sub
repz
iret
cmpsb
inc
es
jno
lret
scas
fcom
clc
out
popf
push
scas
pop
mov
pushl
cmpsl
or
divb
stos
addr16
mov
cmp
call
call
mov
sub
mov
mov
mull
push
insl
arpl
or
push
adc
sti
gs
stc
cs
mov
lds
daa
pop
aam
sahf
pop
jne
call
sbb
call
popf
sub
mov
add
sub
notb
incl
mov
sbb
sarb
mov
sub
mov
arpl
dec
jne
andb
mov
insl
test
xor
xchg
mov
test
add
mov
lahf
mov
mov
mov
sub
outsb
daa
xchg
scas
add
stc
mov
hlt
int
ljmp
into
pushaw
ljmp
mov
cmpl
sub
mov
sahf
lock
adc
fwait
scas
ljmp
jb
xchg
out
jge
xchg
fdivrl
push
sub
call
and
push
in
add
xchg
xchg
icebp
dec
jae
out
testl
inc
inc
dec
jge
sub
jb
jbe
and
jp
out
mov
daa
outsl
xchg
jg
shrb
notb
call
xor
push
pop
inc
loop
cmp
gs
fdivl
outsb
addl
pop
and
nop
lret
push
pop
call
ljmp
jp
insb
loope
push
adc
adc
rclb
ljmp
jnp
xor
push
xor
iret
mov
or
incb
je
adc
cs
add
in
pop
fisubrs
sarb
aaa
mov
das
push
imul
mov
lock
jmp
jns
icebp
mov
xchg
sbb
push
cmp
and
cwtl
std
lcall
jl
insb
int
and
inc
stc
addb
imul
mov
or
add
dec
rcr
xor
add
stos
mov
repnz
insl
adc
or
stc
fwait
incl
mov
movsl
leave
rorl
call
mov
movsb
jle
das
ja
ret
test
adc
lcall
popa
nop
dec
add
mov
adc
insb
push
stos
out
jmp
adc
pushl
aam
mov
cmp
imul
xchg
ja
ret
fnstcw
cwtl
test
call
mov
xor
lods
mov
icebp
jmp
xchg
pop
ds
test
pushl
dec
cwtl
andl
sub
icebp
mov
es
cmp
or
pop
sahf
sbb
push
push
repz
adc
test
adc
aad
mov
fdivrl
mov
sub
lcall
sbb
out
int3
test
and
stc
push
sbb
popf
ret
xchg
cmpl
mov
ss
incl
xor
add
push
fistpl
cmp
cmp
std
das
jmp
mov
into
xchg
cmp
out
outsl
sbb
ljmp
nop
mov
cltd
xor
pushf
mov
stc
ret
mov
sub
incl
push
sbb
enter
xorl
outsl
stos
sub
jge
gs
pop
cmc
ss
add
mov
lds
add
inc
ljmp
jmp
or
fidivrl
push
rcrw
imul
jmp
mov
pushf
mov
nop
int
lret
and
xor
sub
mov
sti
sti
mov
mov
dec
dec
dec
mov
sub
jnp
mov
sbbw
pusha
pop
jmp
and
lret
mov
cmp
mov
pop
mov
dec
mov
sti
jge
push
cmp
pop
push
inc
mov
dec
imul
fnstenv
mov
imul
pop
imul
inc
mov
sub
arpl
sbb
addr16
lock
push
xor
cwtl
cmpsl
jb
into
jbe
mov
mov
add
xor
insl
addr16
je
imull
frstor
xor
adc
push
out
rcr
addr16
cs
cmp
ret
add
fadd
dec
pop
ss
dec
bound
jne
cmp
xchg
cmp
ret
push
push
mov
fistpll
jno
mov
adc
daa
js
lahf
sarb
in
jmp
popa
gs
daa
ja
cmp
add
adc
add
push
outsl
pop
mov
xchg
ret
mul
ds
aas
ret
pusha
add
pop
fdivrl
xor
add
into
into
jo
adc
adc
sub
jge
cmp
addb
das
rclb
jnp
cmp
fxch
push
jne
fwait
outsl
icebp
add
lahf
loope
aas
jmp
xchg
aaa
dec
or
xchg
clc
icebp
lcall
in
rcll
xor
adc
or
loopne
andb
fadds
add
call
inc
mov
test
jg
shlb
or
out
jp
add
scas
pushl
bound
and
cmp
cmp
inc
sbb
lret
movsl
dec
ss
xor
fildll
adcb
cld
sbb
sbb
movsb
cmpsb
mov
testb
call
pop
dec
and
not
sti
cli
pushf
sub
sub
and
sbb
cmpsl
push
pop
and
fcompl
fst
movsl
and
xchg
ja
sarl
cwtl
mov
aaa
nop
mov
jg
inc
gs
dec
add
js
sbb
les
dec
imul
sarl
sub
and
movb
test
mov
adc
push
lret
incl
lar
cwtl
sti
xlat
inc
out
mov
cmp
mov
lret
sbb
stos
adc
cmpsl
or
fstpt
jnp
sti
adc
lock
enter
push
pop
and
xacquire
ficomps
push
sbb
call
scas
jb
test
or
stc
mov
and
mov
jmp
aad
inc
cli
ljmp
xor
jmp
sub
test
shlb
orl
outsl
inc
clc
je
sub
xor
into
push
lea
pop
lret
lcall
mov
cmp
push
add
or
jp
fucomip
and
mov
inc
cmpsb
insl
lcall
in
sub
xchg
int3
xor
or
cmpsl
int
sbb
fdivrs
dec
cmp
jnp
or
into
outsl
sbb
push
inc
push
dec
mov
mov
call
mov
dec
xchg
push
shr
inc
leave
xor
xor
mov
lcall
dec
mov
and
mov
test
or
in
jl
call
movsb
xlat
cmc
data16
outsl
add
lods
jmp
pop
xor
pop
rcrb
neg
lock
ljmp
xor
out
sub
mov
sbbb
dec
mov
ds
cmpsl
sbb
xchg
outsb
out
dec
out
cmc
cmp
add
xchg
sub
push
incl
lret
mov
stos
jae
es
jmp
lods
lock
in
push
jmp
ds
es
push
cmpsl
out
scas
or
jmp
and
inc
sub
cs
jp
cld
push
rcrl
loopne
decl
mov
scas
cmp
pop
jge
cld
push
pop
inc
lea
pop
mov
dec
push
lcall
push
or
pop
cmp
push
jecxz
fcmovnb
out
mov
pop
movsb
sbb
cmp
jno
js
or
jmp
loopne
pop
loopne
sbb
mov
loopne
pop
rcrb
sbb
outsl
shlb
movsl
testb
nop
cltd
lret
mov
sbb
fsts
pop
test
add
lcall
bound
inc
push
xchg
leave
adc
push
dec
sbb
fdivs
sub
call
xor
xchg
adc
lret
gs
or
xchg
std
and
cmc
vpshufd
dec
aaa
push
lods
sub
ljmp
arpl
xor
rcr
ret
xlat
into
adc
cmp
int
jb
pushl
aad
inc
adc
mov
cmpsl
jb
aaa
addr16
mov
or
pop
or
jmp
dec
cld
es
imul
pop
les
adc
sub
push
sbbb
pushl
fistpl
mov
jmp
lahf
mov
push
scas
cmp
and
pop
and
repz
lcall
sbb
adc
pop
stos
or
gs
icebp
call
fdivr
mov
xchg
fucomp
ret
stos
fimull
mov
mov
in
test
aam
cmpb
push
stos
repz
xchg
adc
mov
sbb
sub
mov
sbb
shl
adc
call
pop
jb
daa
testb
jno
mov
and
out
cmp
xchg
pop
out
ljmp
cmp
xor
mov
push
and
sahf
rcrb
jge,pn
lea
out
cld
pop
mov
sahf
ljmp
mov
add
fs
mov
mov
pop
adc
call
or
and
and
cmpsl
xor
pop
movsb
fdivrs
cmp
cmp
cmpsl
mov
call
nop
pop
mov
ds
cmc
lods
or
lods
push
dec
mov
mov
mov
test
pushl
inc
pushf
push
push
std
enter
iret
xor
mov
dec
mov
mov
mov
call
pop
shrl
shll
movsb
scas
xorb
pop
pop
cmc
arpl
sbb
jo
movb
mov
ret
or
push
xchg
stc
mov
add
pop
inc
jmp
les
int3
out
mov
outsb
and
xor
push
ficoml
movsl
xor
fldcw
call
mov
inc
stc
mov
dec
in
adc
pop
dec
arpl
sbb
lcall
ds
repz
ret
xor
mov
mov
add
fs
jmp
leave
int3
loop
ja
popf
out
lret
jp
mov
inc
add
xor
stos
mov
call
xchg
lods
push
out
add
dec
jl
lods
xchg
cmp
xorl
push
js
pop
push
call
mov
cmp
stc
enter
addl
shll
mov
aas
insb
inc
adc
jl
cmp
sub
ret
cltd
lahf
into
push
and
xchg
arpl
xchg
lcall
pop
mov
rorl
std
mov
dec
and
ret
inc
mov
xchg
mov
sub
lods
jmp
and
scas
or
andl
sub
mov
pop
sti
dec
mov
add
sbb
jne
mov
sub
jp
xchg
adc
push
cmpsl
in
jg
jp
rcrb
lret
sub
pop
hlt
test
sti
jge
arpl
sub
jge
ljmp
call
sbb
call
pop
or
mov
mov
pop
enter
push
cmp
call
and
inc
repnz
adc
push
sub
pop
push
and
cmpsb
mov
add
jo
out
repnz
xor
insl
fidivrl
mov
in
mov
xor
lods
mov
or
xchg
jns
inc
mov
mov
gs
stos
mov
inc
fldenv
and
das
or
pusha
ret
xor
mov
pop
negb
addr16
add
popa
mov
jo
xor
shlb
repnz
pop
pop
or
push
mov
int
dec
insl
jnp
mov
and
sbb
pop
adc
dec
mov
sub
pop
scas
test
inc
add
ss
add
outsl
pop
inc
pop
cmp
lds
xchg
dec
lds
mov
push
sub
rcr
ss
inc
icebp
pop
fstpt
push
and
mov
adc
xchg
mov
adc
sarl
sub
in
in
test
adc
add
mov
xchg
pop
inc
stos
or
sbb
das
push
xchg
loope
pusha
insl
cmp
adc
cmpsb
sub
or
xchg
ja
xor
sub
stc
push
gs
push
push
sti
arpl
mov
push
cmpsl
mov
add
jge
fdivrs
mov
mov
adc
xorb
pop
and
mov
out
pop
inc
adcb
jmp
jno
xchg
mov
imul
scas
and
mov
adc
cs
mov
mov
insb
jmp
xor
stos
cmp
roll
call
inc
mov
sbb
popf
out
xchg
push
inc
inc
aas
std
mov
lret
insb
xor
insl
das
sti
pop
dec
and
ret
sub
pushl
push
punpckhwd
sbb
xchg
scas
scas
mov
pop
pop
cmpsl
inc
or
jb
lds
aad
dec
cli
add
xlat
adc
enter
in
repz
out
in
in
test
jge
int3
rol
mov
dec
inc
sbb
and
popf
xchg
fnstsw
fcmove
in
movsl
inc
stc
lahf
sub
stc
les
jnp
sub
cmp
inc
cmc
add
shr
xchg
mov
dec
repz
iret
and
call
mov
aad
and
jp
or
sahf
sbbl
and
xlat
sbb
jecxz
rcrb
adc
mov
push
sbb
lcall
incl
adc
or
push
daa
xchg
stc
aaa
mov
xchg
cmp
aas
clc
push
mov
lcall
popa
adc
aad
xorb
cld
roll
jns
sbb
jl
outsb
or
sub
lcall
aas
push
jb
repz
mov
push
pusha
inc
or
pop
sbb
ljmp
popf
and
jp
adc
lcall
pop
sbbl
aam
add
ljmp
fxam
mov
ja
inc
in
rol
cltd
jg
lods
scas
mov
cmp
aaa
dec
xchg
cli
inc
mov
lea
sbb
icebp
in
lcall
je
dec
sbb
ja
jecxz
cmp
aas
jnp
push
fdivrs
jmp
icebp
cmp
roll
xchg
sub
lds
into
jmp
or
push
push
sbb
sub
adc
pop
add
dec
loopne
decl
xchg
mov
outsb
punpckldq
jecxz
pop
sub
cwtl
and
test
loop
jg
call
add
sbb
in
mov
loope
adcb
sahf
repnz
call
test
or
lcall
aas
jno
fnstenv
sub
loopne
add
notb
or
imul
pop
xor
xor
add
aam
push
lret
lcall
or
div
and
push
das
dec
sbb
in
mov
jl
rcll
cmp
jno
jle
lock
add
xchg
jge
fwait
mov
inc
inc
shll
xor
jmp
inc
adc
pop
mov
mov
sub
popa
mov
jo
jmp
test
sahf
sbb
test
cmp
jp
dec
and
sbb
xchg
or
mov
mov
fxch
mov
movsl
adcb
ljmp
cmp
xchg
jne
ffreep
push
xlat
mov
subl
or
push
outsb
xlat
aad
decl
flds
pop
xchg
lret
push
xor
in
xchg
call
sbb
jb
dec
decl
and
shl
mov
sbb
sbb
ret
scas
test
outsl
enter
pushl
mov
cmp
and
scas
test
xchg
sub
xchg
adc
ljmp
lods
xor
cmpsb
insl
mov
push
imulb
repz
subb
int3
pop
adc
clc
lret
jp
sbbb
mov
mov
scas
lods
mov
xchg
jmp
scas
decb
pcmpgtb
inc
sbb
mov
jmp
push
mov
rorl
mov
mov
xor
dec
enter
orl
and
call
imul
loope
movsb
jge
mov
dec
xchg
add
xor
into
push
or
xchg
and
mov
lret
dec
mov
notl
xchg
adc
je
cmp
push
adc
inc
hlt
mov
decl
int
loopne
jle
cs
test
mov
cld
xchg
arpl
pushl
and
mov
fcom
add
cmpsl
push
mov
xchg
sahf
inc
jge
outsl
mov
andb
decl
cmp
mov
nop
movsb
pop
cli
cmpl
and
popf
jmp
ljmp
cld
push
mov
ljmp
jb
aad
ret
mov
pop
push
rcrl
push
imul
ret
aas
adc
dec
int
add
movsl
fsubrs
mov
sub
incl
mov
loopne
imul
lcall
dec
rcrb
pop
sbb
ljmp
aaa
mov
push
sti
xor
out
les
stc
cld
insb
jne
dec
mov
bound
into
or
adc
sub
sti
jne
dec
mov
stos
xor
fs
lret
xchg
mov
imul
xacquire
sub
mov
inc
adc
xchg
mov
or
fs
adc
dec
sub
push
and
add
adc
add
inc
cli
negb
push
adcl
jmp
loopne
test
loope
mov
cmp
push
cld
pop
test
aaa
pop
jecxz
lds
addb
ud0
call
or
lods
jmp
cmp
xor
frstor
popa
mov
xor
pop
sub
xchg
fs
mov
dec
loope
sbb
sub
sub
sbb
jmp
push
pop
jno
mov
xor
mov
aas
mov
mov
cmp
push
cmp
shrl
mov
mov
mov
jg
fldenv
arpl
xor
lret
rol
cltd
jno
inc
iret
xchg
inc
cmp
shrb
add
adc
xchg
xlat
out
inc
cmpsl
ret
mov
lahf
push
jbe
sti
out
ds
out
ljmp
outsl
stos
sub
xchg
xor
in
movsb
ss
or
hlt
jne
cld
decl
mov
jo
inc
ror
xlat
test
jmp
sbb
dec
ret
mov
jae
in
in
dec
mov
decb
fidivl
mov
xchg
adc
out
mov
idiv
push
mov
cltd
or
mov
pushl
aam
pop
int3
insb
sbb
in
sub
mov
rclb
repz
incl
or
mov
daa
jl
das
inc
addr16
out
scas
and
push
not
pop
mov
bound
or
mov
pushl
push
add
adc
mov
lcall
jecxz
out
incl
in
inc
in
mov
pop
cmp
mov
xchg
jecxz
into
lods
in
dec
jae
jmp
ljmp
mov
mov
lret
enter
xor
gs
std
sar
pop
and
xchg
iret
mov
incl
icebp
in
dec
mov
jb
lock
pop
or
jge
mov
dec
sub
and
jns
jg
inc
push
jg
out
jbe
or
sbbl
xor
adc
pop
repz
push
jnp
in
jno
pop
dec
xchg
xor
in
test
jno
xchg
call
add
jmp
sub
lock
cmp
cmp
and
lcall
pop
sub
jmp
fwait
or
mov
xlat
cmp
cmp
or
cmpl
pop
jmp
push
jo
cmp
mov
out
push
cmp
or
jge
add
push
orl
jp
ret
arpl
mov
stos
push
dec
rolb
or
and
or
mov
adc
pushl
adc
enter
adc
push
pop
pushl
lcall
add
inc
aad
inc
test
xlat
inc
pop
sub
inc
lods
div
add
dec
mov
fcomps
pop
test
repnz
xchg
jno
lods
xchg
test
insb
les
mov
cwtl
inc
inc
leave
jg
jg
or
xchg
cmpsl
int3
dec
inc
push
inc
stos
repnz
call
int3
in
jae
incl
ret
lahf
fsts
inc
imul
dec
dec
xor
aas
test
mov
fs
push
incl
mov
sahf
sub
rcr
aaa
loop
ds
loop
outsl
fdivp
sub
inc
mov
fwait
daa
fcmovu
mov
adc
mov
lods
lcall
mov
rcr
es
clc
cmpsb
adc
loop
scas
and
jg
jnp
ret
sub
int3
xchg
sub
negl
into
in
xchg
or
incl
xor
sbb
inc
repz
xor
in
xchg
dec
stc
sahf
fistpll
ret
push
in
pop
ja
cmpsl
call
sub
push
scas
inc
test
into
shl
shl
xchg
fistps
ret
incl
into
push
pop
push
mov
dec
std
rcrl
jg
xchg
xlat
xchg
and
int
pop
leave
xlat
xchg
mov
xor
out
add
loop
ret
fistl
sub
xchg
out
setbe
cld
sub
mov
sbbb
test
jbe
and
pop
mov
xchg
rolb
decl
fistpl
xchg
es
sbb
pop
fcompl
adc
nop
cmpsl
mov
jb
push
insb
repnz
jg
in
das
test
dec
int
xorl
add
sub
or
in
fsubrl
jbe
xchg
int
movsl
mov
push
xor
sti
jg
or
pop
cwtl
addr16
jmp
cwtl
push
mov
ja
les
xchg
sub
and
adc
inc
outsl
shrl
push
into
frstor
xchg
add
xchg
push
sbb
int3
sub
inc
pop
lock
and
int
popf
sub
outsl
and
adc
cmp
dec
jbe
stos
inc
inc
lahf
fistpll
test
pop
dec
in
xchg
cs
insb
mov
int
stc
out
push
aaa
jbe
stos
aaa
pop
test
lcall
push
mov
int
mov
mov
shl
mov
dec
jl
loope
sub
push
add
aad
mov
sub
mov
out
fdivs
cmpsb
push
nop
mov
clc
mov
and
repnz
stos
and
es
cld
subb
idiv
ss
test
sbb
sub
and
js
xchg
sub
imul
cmp
ljmp
sbb
jg
jae
aaa
and
cmpsl
jbe
ret
mov
movsb
test
ljmp
out
imul
mov
mov
jo
mov
fisttpl
sbb
jmp
or
les
inc
and
test
mov
and
fcmovb
xchg
fistpl
push
sub
fistpll
xchg
cmp
test
sub
xchg
cmpsl
xor
out
push
sub
xchg
cltd
and
cmp
inc
adc
je
sti
pop
lock
cmpsl
ja
xchg
push
sbb
stos
lock
enter
push
mov
push
mov
stos
lcall
mull
jno
lods
or
or
push
call
outsl
or
mov
push
loop
add
into
cmc
pusha
jp
inc
decl
shlb
lods
pop
ss
sub
cmc
shlb
sarl
adc
icebp
add
decl
mov
cltd
int
loope
add
not
xchg
adc
scas
jg
jp
mov
addr16
and
lds
adc
jp
fildll
mov
push
movsb
inc
mov
test
std
cmp
sbb
addl
je
fmull
fucomip
push
inc
and
mov
sbb
int3
add
dec
stos
incl
inc
and
lods
mov
mov
lock
inc
mov
xor
das
clc
decl
inc
rep
sbb
and
add
adc
jp
cwtl
stos
sub
dec
inc
ljmp
fdivr
mov
out
out
mov
xor
fistl
push
inc
xor
cmc
dec
xor
jp
push
bound
pop
inc
sti
jl
push
fs
int3
loopne
sbb
test
sbb
push
jg
stc
mov
xchg
add
jmp
je
fdiv
jp
mov
push
jp
sub
lock
pop
add
test
push
xchg
sub
mov
mov
pop
push
and
or
loopne
jp
lock
les
mov
imul
pop
decl
mov
scas
inc
insb
div
in
mov
cmc
push
mov
xor
jecxz
into
lods
dec
xchg
jbe
adc
push
mov
movsb
cmc
cmpsl
lock
and
mov
sub
push
cmpsl
cmc
jns
outsl
js
stos
adc
in
jg
jmp
es
cmp
pop
sbb
add
xor
pusha
fiaddl
sbb
cmp
pop
hlt
jle
faddl
scas
jbe
in
enter
push
xor
xchg
jl
shlb
mov
inc
and
push
std
aad
mov
cmpsb
int3
pop
cli
push
pop
jle
mov
add
imul
aas
add
push
scas
push
lock
mov
sbb
inc
jmp
pop
xchg
adc
adc
sub
mov
inc
sahf
call
das
mov
sbb
inc
outsl
add
test
icebp
sub
icebp
movsl
xchg
inc
mov
mov
mov
test
outsb
imul
fwait
push
lock
mov
mov
shrb
push
data16
jle
cmpsb
push
orb
lods
bound
jno
in
lret
jmp
mov
mov
mov
pusha
inc
data16
mov
ror
mov
inc
xor
push
cmp
dec
pop
ss
pushl
cmp
aaa
dec
inc
popa
outsb
ss
insb
xor
xor
jb
insl
ja
dec
xor
xor
jmp
ja
dec
aaa
pop
dec
jae
outsb
cmp
push
push
jae
inc
inc
dec
xor
insb
dec
dec
addr16
pop
jmp
dec
jp
pushw
addr16
xchg
inc
aaa
addr16
jbe
pop
inc
dec
imul
inc
jbe
ljmp
subb
xor
push
dec
xor
push
ljmp
js
dec
push
imul
push
jb
push
inc
pop
push
push
push
je
js
fs
push
outsb
pop
push
dec
aaa
outsl
jp
push
ja
sub
bound
xor
aaa
push
push
insb
jo
jno
das
clc
in
jmp
cmp
insb
outsb
push
cmp
mov
xor
push
orb
dec
imul
xor
jae
dec
jb
push
inc
xor
dec
outsb
dec
xor
jno
pop
cld
lcall
xor
imul
call
push
jb
dec
xor
testb
jo
outsl
push
dec
jne
inc
pop
fdivs
gs
xor
outsl
push
inc
push
jmp
inc
arpl
ja
jns
ss
ss
popa
jp
ss
inc
xor
push
bound
inc
push
jne
imul
push
dec
out
gs
jbe
imul
ljmp
jno
gs
insl
cmp
pop
dec
push
inc
dec
xor
jbe
jae
push
jbe
je
inc
xor
mov
decl
push
jo
aaa
inc
inc
ja
addr16
inc
push
inc
dec
fucomi
jmp
xor
dec
dec
push
dec
cmp
push
jne
outsb
jae
cwtl
add
inc
push
push
je
adc
popa
dec
or
outsb
sub
push
ret
add
sub
xor
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
inc
clc
mov
jns
rclb
pop
jns
xlat
sbb
push
push
push
xor
out
sahf
out
pop
pusha
jbe
sahf
out
sahf
sahf
scas
mov
cmp
or
push
and
inc
push
push
mov
out
xchg
cmpsb
mov
xor
out
repnz
rcll
iret
repz
xor
pop
fs
iret
repz
nop
lcall
mov
out
sahf
out
ret
sub
sahf
out
sahf
inc
dec
pop
fs
jns
out
nop
pushf
test
mov
rcr
lock
push
ret
iret
repz
sbb
xor
push
cmp
repz
je
mov
lods
mov
into
imul
les
es
out
sahf
xor
outsb
js
sahf
out
mov
jnp
out
ljmp
jns
cmp
outsb
out
sahf
out
orb
sahf
mov
lret
ljmp
push
adc
iret
repz
sub
dec
pop
jo
cmp
repz
lcall
repz
call
jns
cmpsl
sbb
xor
sahf
out
sahf
data16
xchg
cmpsb
mov
sahf
out
mov
repz
out
or
adc
xor
repz
inc
push
pop
push
repz
mov
cmp
repz
lock
out
sahf
out
leave
sbb
xor
out
sahf
push
pop
outsb
adcb
lods
ror
repnz
out
out
adc
xchg
xor
inc
jns
out
push
pop
outsb
adcb
scas
mov
jl
loop
or
push
xor
iret
repz
pop
jo
nop
repz
rep
mov
imul
int3
or
sahf
out
sahf
sub
inc
dec
push
bound
out
insb
jbe
sahf
mov
jns
out
rcr
lock
jns
mov
push
cmp
out
sahf
fs
mov
out
loopne
or
push
xor
cmp
repz
dec
push
push
iret
mov
sahf
out
cmp
cli
adc
push
xor
out
dec
push
pop
jo
out
sahf
out
mov
jns
fdivp
cli
adc
cmp
repz
dec
push
push
repz
jns
iret
testb
adc
sahf
out
sahf
dec
push
pop
jbe
xchg
jns
out
pushf
cmpsb
mov
aam
jl
out
lock
add
push
iret
repz
sub
inc
push
push
cmp
xchg
test
int3
out
ds
repz
cli
or
jle
sub
repz
inc
push
jo
repz
repz
cmpsb
rcl
out
lcall
dec
sahf
out
sahf
pop
push
xchg
test
cmp
out
aam
or
adc
cmp
repz
dec
push
iretw
repz
jo
xchg
cmpsb
mov
sahf
out
cmp
out
or
sbb
sahf
out
inc
pusha
push
mov
jns
out
mov
fmul
sarl
hlt
push
xlat
sub
cmp
repz
mov
iret
repz
fcoms
out
sahf
out
cmp
pop
jb
out
sahf
test
cmp
sarl
or
dec
repz
repz
fs
stos
iret
repz
mov
push
sahf
out
lcall
jns
out
push
mov
out
fsubrp
add
or
repz
push
sub
inc
pop
or
or
mov
dec
call
rcr
out
add
sub
incl
es
pop
ds
in
push
aad
imulb
out
mov
stos
push
imul
in
int
pushl
dec
inc
mov
cmpsl
mov
repz
repz
xchg
lahf
sub
jmp
pusha
mov
cmp
pop
pop
or
icebp
and
push
xor
cld
cmp
cmc
repnz
call
mov
daa
cmp
sarl
movsb
pop
fs
add
in
jae
out
jg
loop
dec
or
mov
cmpsb
sbb
adc
adc
cmp
mov
adcw
cmp
pop
ja
mov
loop
jp
mov
sub
fstpl
ret
shl
jmp
pop
xchg
cltd
adc
push
ljmp
inc
testl
mov
lcall
or
hlt
cmp
iret
xchg
cmpsb
mov
pop
cmp
mov
ja
decl
aam
stos
jae
sarb
cmp
inc
out
xchg
add
jmp
sbb
aad
dec
cmp
push
xchg
das
cmpsb
push
inc
mov
mov
dec
in
or
xchg
mov
roll
out
fisubs
ljmp
divl
push
aam
push
rorb
add
xchg
pop
xor
mov
cmpsb
sub
mov
insb
decl
push
sub
pop
jae
loop
fs
imul
aas
cli
leave
inc
sub
incl
cmp
loope
dec
mov
jl
pop
cmc
mov
psllw
test
lcall
push
in
mov
xchg
pop
test
or
out
lahf
add
ss
xor
or
repnz
ljmp
imul
adc
push
or
sbb
xchg
out
rcrl
sbb
pop
ret
inc
push
scas
sbb
sbb
pop
scas
sub
stos
lock
loop
push
arpl
lcall
rolb
test
inc
addr16
icebp
insb
icebp
lcall
popa
xchg
sbb
cmpsl
xchg
push
jb
shrb
in
ret
push
ja
loope
and
out
sbb
cmp
pop
sahf
mov
inc
cmp
mov
mov
rolb
mov
cmpsl
mov
xchg
in
jmp
das
pushf
lds
mov
pop
sysenter
push
sarb
stc
pop
loope
rcl
jmp
nop
sbb
push
test
and
xchg
mov
xor
cmp
mov
decl
mov
cwtl
lret
addr16
cwtl
test
and
sub
pop
add
je
scas
hlt
pop
incl
js
or
aam
fistl
xor
lds
lock
sti
decl
cmpsb
inc
call
ja
cmovb
xchg
push
aas
sub
dec
push
test
mov
fbstp
xlat
repz
out
cmp
mov
dec
or
push
out
xorl
pushl
iret
push
push
pop
xor
cmpsb
or
mov
mov
sahf
mov
xchg
inc
dec
leave
pop
pop
into
jb
pop
arpl
imul
adc
inc
cmc
pusha
jb,pt
or
pop
loopne
call
and
mov
dec
addr16
or
mov
sub
std
push
pop
add
mov
into
cmp
lcall
insb
pop
jne
aas
add
cltd
add
sbb
xor
test
jle
mov
enter
jo
push
pop
mov
lcall
push
jp
cmpsl
mov
call
inc
cltd
shll
dec
add
xchg
sub
faddl
mov
inc
das
inc
in
inc
mov
decl
jne
xor
popf
jnp
jle
jno
xchg
cmc
add
add
jae
sub
mov
ljmp
xchg
inc
out
pop
sub
xor
jg
gs
js
test
adc
fstps
mov
incl
decl
inc
lcall
mov
dec
sub
xor
filds
nop
sub
fmuls
sbb
mov
mov
mov
xchg
pop
idiv
jg
data16
push
jmp
movsl
dec
daa
stc
gs
lods
sbb
jp
xor
mov
sbb
sbb
mov
add
add
mov
idiv
pop
cmp
mov
mov
fistl
je
in
xchg
jae
mov
xchg
lahf
inc
lret
clc
clc
das
mov
jo
jg
int3
adc
xchg
insl
out
sub
add
or
xchg
ret
lods
fwait
jmp
jp
sbb
insb
jae
testb
push
enter
inc
out
mov
sbb
cmpsb
xor
fcmovbe
cbtw
pop
or
lret
xchg
sub
fmuls
fmul
mov
test
decl
and
sub
mov
lcall
loop
mov
add
mov
sbb
mov
xor
mov
js
ljmp
cli
mov
js
mov
jmp
mov
ds
movsb
xor
test
add
dec
pop
mov
sbb
cmp
sub
or
and
cmpsl
jae
out
fs
adc
sar
mov
mov
stos
rsm
fs
lret
cmc
iret
sbb
xchg
jbe
outsl
pushf
cmp
push
sub
scas
addr16
hlt
repnz
arpl
pop
mov
out
ret
add
shll
ljmp
adc
add
sbb
mov
adc
fdivrl
scas
sub
incl
add
cwtl
jne
sub
lret
jmp
xchg
imul
pushl
sub
sbb
add
sbbb
mov
mov
xor
jp
jns
ficomps
or
add
mov
call
scas
add
ljmp
pop
jb
push
insb
xor
repz
cmp
jno
push
jle
push
lds
mov
pushl
pop
and
clc
fcoms
and
fimuls
jo
test
fwait
ss
movsl
das
sar
in
cmp
jno
iret
or
in
or
inc
data16
jmp
rcrb
push
pusha
pop
dec
cld
inc
data16
stc
ss
mov
insb
pushf
pop
es
data16
jmp
adc
lods
jne
push
lods
dec
cmp
stos
jns
dec
int3
mov
outsb
push
jg
jmp
in
in
sbb
pop
and
adc
dec
test
shll
addb
or
ds
cmc
rcr
rep
movsb
pop
cmp
outsl
fistps
fldt
sbb
mov
shr
ficoml
test
cs
je
inc
or
push
lds
mov
pusha
fs
jmp
mov
xor
loopew
xchg
jno
clc
lock
adc
adc
decb
leave
push
lret
cmp
decl
push
add
aam
push
fnsave
mov
imul
sbb
sti
es
pop
lock
push
mov
pop
xchg
jle
les
mov
inc
ljmp
ljmp
mov
ja
mov
xor
js
nop
int
pushl
bnd
jg
bound
in
jno
pushf
dec
clc
psrlw
pop
xchg
and
sub
shrl
sub
fwait
cmp
cmp
add
dec
outsl
call
mov
cmp
adc
rclb
sub
ljmp
ret
aam
incl
mov
add
jb
out
sti
push
cmp
or
pop
insl
jmp
sub
xchg
clc
xchg
cmpsb
cmpps
pop
cmc
in
push
arpl
add
fdivrs
sub
mov
call
xchg
add
scas
out
push
nop
mov
mov
xchg
xchg
test
mov
add
mov
cmpsl
jecxz
lahf
jno
call
xor
adc
inc
mov
sbb
fs
test
adc
push
jns
in
and
ja
xor
cltd
cmp
fists
out
pop
cld
hlt
gs
les
add
sahf
daa
jecxz
bound
aas
mov
icebp
rorl
popf
imull
jb
pop
push
loope
jge
stos
fdivrl
lds
add
outsl
stos
pop
mov
jae
loope
outsl
inc
les
std
adc
sub
incl
jmp
inc
scas
xchg
pusha
mov
mov
int
shrb
cwtl
xchg
incl
mov
and
sub
add
bound
stos
push
pop
loop
sbb
mov
popf
ja
out
jmp
call
mov
xor
push
mov
addr16
cmpsb
jns
loopne
gs
xor
and
icebp
adc
ljmp
mov
jle
add
mov
lcall
leave
lds
js
and
lock
jb
clc
cltd
lods
pusha
cwtl
inc
jecxz
fsubr
inc
lcall
ficomps
fwait
jg
decl
leave
mov
cmp
and
lods
lock
int3
dec
ds
int
jmp
sub
xor
loopne
inc
inc
pop
std
or
test
loope
sub
das
sar
je
push
push
adc
xor
jecxz
mov
mov
inc
shr
add
xlat
lock
push
ljmp
jb
gs
lcall
mov
mov
test
rcrb
dec
sub
into
jmp
cltd
xchg
ret
outsb
inc
shlb
and
sbb
sub
pop
lret
jo
dec
push
sub
mov
mov
add
js
mov
cmp
fstps
daa
push
decl
imul
sub
stos
and
inc
or
frstor
fildl
mov
add
call
and
sbb
xchg
stc
bound
outsb
sub
enter
xchg
ljmp
out
adc
scas
jnp
mov
shlb
popa
add
cmp
dec
xor
incl
pusha
dec
dec
sub
lock
icebp
push
sti
insb
jmp
sbb
fdivl
xchg
js
jbe
inc
loope
sbb
cmp
xchg
cmp
iret
cmp
dec
push
sti
jg
mov
leave
and
adc
pushl
sub
scas
sbb
mov
sub
inc
jne
jae
ret
fdivp
js
insl
fwait
scas
cs
xorb
ljmp
loope
jle
ljmp
daa
dec
ror
out
int3
ljmp
addr16
jl
divl
data16
out
hlt
push
decl
sub
add
mov
pop
inc
jo
stc
add
mov
icebp
movsb
xorl
jno
mov
xor
push
adc
cltd
pop
imul
hlt
lret
jae
subl
leave
std
insl
test
mov
pop
xchg
and
push
sbb
in
mov
sahf
jnp
sub
or
pushl
out
mov
rcrb
mov
test
adc
fldt
add
fiadds
insl
mov
xchg
in
sbb
into
lcall
out
std
push
mov
adc
jge
pop
or
scas
addr16
lret
aad
scas
or
ja
dec
orb
dec
lret
and
xor
or
ljmp
lcall
popa
mov
pop
jmp
or
jno
ljmp
mov
scas
pop
cld
xor
stc
decl
mov
and
movsl
mov
addb
pminub
mov
pop
leave
xor
pop
call
mov
mov
lods
pusha
inc
lret
mov
cmp
subb
dec
cmp
js
pushl
in
mov
sub
push
push
ret
jnp
push
cmp
jmp
insl
pop
mov
ja
dec
repz
mov
test
mulb
xchg
jb
sbb
out
scas
mov
or
mov
and
sti
lcall
out
dec
sahf
mov
negb
stos
jmp
jle
inc
shll
jg
xor
inc
les
test
stos
sub
sti
outsl
fcmovnb
or
push
push
inc
cmp
xorb
jb
cmp
xor
idivl
dec
hlt
push
into
add
or
js
mov
fidivrs
shll
ret
pop
jmp
daa
nop
jle
jno
xor
xchg
jns
ljmp
and
add
jp
stos
adc
and
push
arpl
pop
outsl
sub
rcrl
in
in
push
rolb
out
and
cli
inc
push
push
repz
dec
ret
adc
incl
nop
fsubs
imul
insl
xchg
aaa
clc
out
pop
cmc
das
ss
ret
out
loope
and
ljmp
mov
add
sub
jp
leave
pop
jle
sub
cmp
popf
push
mov
cmc
out
imul
inc
pop
sbb
scas
and
push
cmp
stos
sub
dec
cmp
notl
add
popa
pushf
sub
hlt
sub
fisttpl
shl
pop
pop
cli
lcall
popl
xchg
aam
aas
mov
movsb
aad
sbb
mov
add
inc
scas
sub
out
jns
push
enter
mov
dec
xorl
dec
into
mov
push
mov
jne
push
ljmp
sbb
ss
push
mov
in
push
fs
sub
jns
pusha
lock
insl
xor
incl
inc
mov
adc
jl
inc
pusha
pop
add
push
fucomp
sbb
out
fisubl
pop
push
inc
sub
mov
push
and
fimuls
clc
adc
ljmp
lock
scas
or
lea
or
mov
adc
bound
in
cmp
es
mov
call
outsl
addr16
aam
jo
mov
aaa
pop
pusha
mov
lcall
jmp
enter
movsl
dec
jl
and
call
push
call
mov
leave
fildl
nop
les
push
icebp
aam
out
lods
outsl
fstpl
xor
in
nop
dec
jp
cwtl
or
fidivrs
xor
and
xor
test
adc
call
dec
pop
out
mov
pop
movsb
mov
or
sbb
movsl
loopne
test
push
icebp
fs
jg
fistps
ret
lret
cli
ud1
clc
imull
mov
and
lret
or
pushl
push
loop
and
cli
cmp
js
pop
ljmp
mov
cmpsl
xchg
into
daa
cmp
les
filds
or
push
lret
and
mov
enter
stos
jno
jge
xor
ret
out
outsl
pop
leave
jb
push
aad
mov
int3
aaa
lcall
jl
movsb
sbb
dec
sub
pop
pusha
sub
sub
pushl
loopne
sub
subb
cli
pop
lock
jp
fldenv
adc
xor
call
mov
xchg
nop
mov
out
frndint
insl
pop
jp
call
xor
mov
jg
lcall
dec
loope
xor
xchg
in
jmp
call
mov
ljmp
test
test
dec
sbb
push
sbb
xchg
pop
mov
mov
call
jne
jno
pop
lret
xchg
cld
xchg
push
add
or
push
repz
push
inc
iret
daa
aaa
xchg
push
inc
fnstcw
out
test
loop
jo
mov
bound
cmpl
push
dec
aaa
xchg
out
cli
les
imul
jbe
loope
scas
cli
dec
mov
popa
add
test
inc
sub
mov
add
incl
cmp
adc
mov
mov
dec
and
cmp
lds
push
std
jp
pop
loopne
lcall
jnp
call
lcall
pop
ljmp
inc
dec
inc
adc
pop
lea
dec
dec
sbb
dec
inc
sti
pop
mov
and
incl
cld
test
sbb
sbbb
shr
add
jnp
std
pop
gs
ds
xor
adc
mov
mov
and
mov
fisttps
ret
fs
or
fisubrl
jg
xor
sbb
decl
popf
pop
js
es
ss
adc
sbbb
or
ljmp
dec
enter
mov
fmul
dec
and
leave
test
xchg
imul
lcall
cwtl
push
enter
push
clc
iret
in
sub
xor
lahf
hlt
shl
push
jg
cmp
js
mov
ficoms
mov
sbb
inc
xor
and
cld
pushl
out
mov
pop
sti
sar
inc
push
arpl
sti
sbb
incl
push
aad
push
push
cmp
ja
fwait
sbb
enter
xchg
jb
push
lret
mov
sub
ret
frstor
sahf
sbb
in
leave
inc
ljmp
test
jmp
call
sbb
push
aaa
lret
je
add
inc
inc
out
cmpsl
mov
add
scas
sbb
popa
sub
test
mov
dec
cmp
cltd
out
jo
mov
pop
mov
pop
gs
mov
push
mov
jb
call
sbb
scas
cmpsb
jae
fwait
pop
cmp
ds
push
fucomip
call
je
adc
xchg
repz
cmp
fwait
adc
in
fimuls
cmp
pushf
cmp
jo
jno
popf
cli
arpl
adc
aaa
dec
fmuls
shll
inc
daa
movhlps
jl
jmp
stos
xlat
decl
incl
das
lea
or
mov
push
mov
mov
rcr
jnp
pusha
mov
clc
mov
inc
subl
mov
negl
cmpl
dec
mov
sahf
decl
jmp
popf
sarl
repnz
and
into
test
lods
xchg
cwtl
in
xlat
decl
mov
lods
or
mov
add
sbbl
dec
cmp
mov
jmp
jp
outsb
pop
xchg
adc
sbb
fs
or
notb
cwtl
mov
pop
in
or
cmp
movsb
xchg
je
mov
push
xchg
cld
add
mov
mov
popa
fdivl
repz
inc
pushl
insl
push
addr16
sbb
dec
mov
xor
pop
mulb
pushl
inc
in
pop
pop
mov
sub
daa
loop
mov
pop
push
jmp
jbe
inc
adc
adc
adc
js
xchg
mov
loopne
or
addr16
push
cld
clc
push
stos
sub
xchg
xchg
dec
cwtl
mov
jecxz
cs
jg
insl
mov
ja
cmp
and
cs
out
cmp
jne
out
dec
fcomi
je
dec
pushl
test
push
hlt
cwtl
leave
push
sub
aaa
scas
jmp
xor
cmc
dec
loop
pop
cld
jmp
addr16
or
lods
jge
scas
xchg
mov
addr16
push
jae
in
sub
decl
fisubrl
cli
or
shrb
push
test
sbb
sahf
jmp
pop
xchg
mov
adc
mov
ret
loopne
sub
out
hlt
inc
or
aas
mov
aaa
cmp
dec
lret
das
adc
shlb
clc
and
and
jg
xor
mov
jecxz
mov
xor
push
pop
cld
lds
in
mov
loope
incl
shlb
mov
jnp
stc
es
mov
ret
rcl
push
jge,pt
fisttpll
mov
push
push
xchg
notb
orb
mov
pop
xchg
cmp
pop
lret
mov
out
mov
jmp
lahf
cltd
pop
xchg
dec
sbb
pop
cwtl
rorb
cmp
sbb
outsb
push
jnp
lods
aas
push
enter
jmp
mov
popf
aaa
in
out
aam
push
clc
cld
je
add
hlt
cmp
addr16
inc
pop
push
jp
shrl
mov
mov
xor
stos
and
push
movsl
jge
push
ret
jge
jmp
call
cmpsb
xor
cmp
inc
and
imul
fbld
imul
add
cli
gs
sbb
dec
or
inc
out
push
arpl
jmp
push
je
push
aaa
js
shl
mov
jge
push
sub
cwtl
insl
jns
jbe
call
xor
add
xor
inc
loope
nop
ds
mov
cmp
data16
mov
jo
out
mov
lds
add
inc
fistps
sahf
aas
mov
nopl
jne
cmp
adc
jmp
jae
and
sub
xor
insb
xor
fisttpll
cli
fnstcw
inc
imul
dec
jge
int
jmp
sahf
movl
arpl
shlb
xchg
pop
bound
inc
push
out
xchg
decl
stos
jmp
or
push
mov
mov
mov
cmp
movsl
or
stos
mov
adc
std
cmp
jno
dec
mov
or
nop
jnp
inc
sti
mov
sbb
adc
std
dec
xchg
movsb
pop
or
mov
ret
xchg
dec
push
sarb
je
call
push
and
insb
mov
and
adc
ss
lods
or
inc
stos
pushl
dec
adc
popa
jp
fcompl
xchg
cmp
pop
out
or
decl
jge
fwait
xchg
jo
mov
pop
repnz
sbbb
sub
or
in
cmp
mov
dec
imul
push
adc
roll
xor
mov
push
stc
cmc
roll
addr16
jmp
inc
cmp
mov
xchg
adc
adc
lret
test
xlat
dec
xchg
jmp
mov
xlat
sbb
mov
mov
leave
mov
int3
unpcklps
out
mov
out
inc
scas
lcall
aad
lods
jae
mov
sarl
idiv
jae
mov
mov
call
scas
stos
nop
in
stc
call
xchg
mov
push
test
jno
fcom
push
cmp
fwait
not
xlat
xchg
xor
arpl
mov
inc
insb
xor
enter
ljmp
and
dec
icebp
outsb
xlat
xchg
or
xchg
push
push
in
call
std
mov
movsb
push
inc
pop
mov
call
mov
push
xchg
mov
hlt
call
enter
push
xor
mov
adc
fnsave
mov
int
mov
mov
testl
cmpsl
sbb
or
and
in
mov
push
jp
cmp
call
or
inc
stos
clc
cltd
test
mov
sub
cmc
or
scas
jmp
or
pop
mul
iret
xor
xor
mov
mov
jge
and
pop
jnp
push
push
inc
add
mov
jg
dec
not
xchg
and
ljmp
int
test
sub
clc
xchg
push
aaa
inc
xor
fnstcw
lock
ljmp
int
call
ds
ficoml
jl
lret
jg
adc
pop
and
out
or
call
sbb
arpl
dec
and
pop
cld
lcall
push
rcr
push
mov
adc
xchg
std
popf
xchg
ds
push
std
cmp
int3
jle
inc
mov
pop
in
xor
add
ret
call
fwait
icebp
cmp
sub
test
mov
push
mov
ds
lret
xchg
inc
incl
xchg
je
scas
mov
adc
out
ret
inc
cmp
push
out
movsl
pop
pop
mov
lods
mov
cmpsb
cmpsl
sub
jmp
inc
roll
pop
pop
decl
stc
adc
mov
xor
push
int3
test
and
sbb
jmp
push
push
fs
fnstsw
push
cwtl
push
xor
imul
push
lcall
mov
cmp
loop
add
cmpb
xchg
cltd
dec
fs
jmp
and
add
movsl
add
push
lods
xor
cli
daa
jg
inc
repnz
inc
insl
push
mov
jo
fnsave
cltd
loopne
xor
push
roll
sub
fsubrs
inc
scas
dec
mov
fdivrp
icebp
out
repz
decl
and
outsb
push
mov
inc
in
test
adc
pushl
jl
daa
aad
cwtl
loope
push
fwait
mov
fists
and
push
hlt
inc
adc
jg
jne
decl
cwtl
xchg
dec
sbb
jne
sar
jae
jg
lds
sti
xchg
push
mov
or
and
sub
incl
cwtl
mov
sbbl
and
in
add
lcall
std
jo
test
outsl
stos
aam
cwtl
pop
scas
imul
ret
add
jns
ljmp
push
mov
stos
dec
call
mov
andl
jns
jg
and
sub
das
push
daa
adc
fldcw
lret
xor
xor
sub
js
ret
fldl2t
push
lret
or
mov
or
xor
sarl
mov
push
xchg
mov
add
repz
xlat
push
mov
mov
ds
aaa
push
out
clc
pushl
xchg
mov
ret
inc
jno
xchg
dec
mov
cmp
or
pushl
ljmp
pop
push
cmp
adc
movsl
sub
int3
mov
jecxz
add
decl
leave
sbb
adc
nop
data16
adc
mov
adcl
xchg
cli
test
out
clc
dec
adc
pop
stos
shlb
cmpsl
push
pop
pop
repz
push
xlat
lret
and
incl
pusha
jne
int
mov
xor
adc
sbb
inc
inc
jnp
jno
dec
arpl
call
dec
neg
push
push
dec
into
mov
mov
jg
test
mov
pusha
sub
pushl
aas
icebp
sbb
cs
and
sub
mov
sub
sub
push
ljmp
lcall
int3
enter
in
addb
pop
sahf
and
xchg
cmp
cmp
fbstp
mov
sbb
insl
lock
leave
ret
mov
sbb
jb
aam
pop
jl
cmp
lcall
hlt
int
cs
pop
sbb
ds
nop
cltd
add
mov
sub
inc
push
out
lret
jge
test
lret
or
jl
mov
fsubp
mov
testb
into
and
pop
mov
call
and
pop
call
shll
mov
push
mov
inc
lahf
jl
mov
and
pop
test
shll
xor
out
lock
ljmp
add
sar
ljmp
push
das
mov
lret
call
ficoml
sti
sub
sarb
inc
int
jo
popf
push
adc
fimuls
ljmp
mov
stc
aaa
inc
lock
fidivs
jp
lahf
adc
mov
xchg
inc
stos
into
xor
and
lcall
mov
sbb
fisubl
lods
cmpb
data16
rcrl
xchg
and
testl
insl
nop
sub
adc
ret
aas
js
fsubrl
cmp
test
inc
scas
or
fisubrl
pop
in
loop
outsb
lods
pop
pop
lea
xchg
push
bswap
rorb
imul
pop
aas
jg
outsl
mov
push
add
stos
sbb
enter
jb
mov
popf
cltd
mov
fdivs
cmp
and
xor
push
sub
xchg
and
mov
adc
idivb
imul
lds
mov
shlb
cmc
ljmp
enter
int3
mov
jmp
insl
out
fistps
push
jns
shll
sarl
push
xor
cld
jp
cmp
les
call
mov
jg
sub
das
add
sbb
mov
in
cld
cwtl
in
sarl
pop
out
lock
sub
ljmp
push
sbbb
aam
test
je
loop
fmull
jno
addr16
stos
jg
jmp
xor
cltd
cmp
clc
lahf
das
push
mov
add
into
mov
loopne
cmpsl
test
outsl
sbb
pop
adc
push
jmp
fistl
mov
mov
orl
cmp
out
gs
push
repnz
lret
es
xchg
imul
icebp
dec
pop
fisttps
adc
adc
push
mov
xchg
sti
jle
dec
into
ret
xchg
adc
jg
sahf
push
fwait
shlb
fcomps
stos
cmp
mov
mov
sbb
dec
push
loope
xchg
lahf
stc
scas
lcall
xchg
jg
dec
js
dec
std
inc
cmp
jp
jge
fwait
das
sbb
les
sbb
ljmp
or
das
dec
xor
pop
mov
inc
jnp
stc
mov
push
les
into
ds
incl
cmp
push
call
leave
adc
lods
cmpsl
xchg
scas
sub
sarl
jmp
dec
cmc
int
je
inc
jp
sbb
inc
jnp
xchg
inc
xchg
sub
out
push
out
pop
jmp
dec
sbb
jmp
adc
jns
mov
pop
lcall
jg
sbb
imul
inc
cltd
push
inc
xorb
fs
popf
pop
mov
stc
jmp
xor
aaa
dec
sbb
or
dec
shll
xchg
pop
mov
inc
jl
inc
cltd
fisubrs
jmp
xchg
les
scas
shlb
in
xchg
pop
cld
imul
jns
lods
adc
dec
cmp
fsubp
mov
mov
mov
popa
mov
push
and
ljmp
mov
shrb
inc
push
iret
lds
xchg
enter
push
ljmp
pop
orl
das
loope
jno
addl
push
std
jae
in
inc
xchg
outsl
scas
decl
jnp
pop
push
mov
mov
pop
ret
icebp
inc
or
push
push
jo
xchg
dec
pop
xlat
inc
cmp
push
std
and
es
dec
sub
test
test
enter
call
gs
cmp
je
mov
lahf
and
sbb
cmpsb
jg
sub
sub
aaa
push
xor
xchg
popf
es
cli
loopne
faddl
adc
sub
cli
fwait
daa
in
out
int
shll
dec
mov
mov
xchg
adc
pop
daa
cmp
add
fdivr
ljmp
scas
ds
mov
gs
pop
lea
lret
cli
add
cmp
pushl
incb
int
or
out
lea
sub
call
mov
cld
jne
ficoml
cmpsl
push
testl
add
cmpl
mov
push
xlat
fidivs
outsl
cli
xchg
fs
xchg
push
dec
mov
ret
rcrl
lret
or
movsl
sub
mov
aam
add
sbb
mov
loopne
push
lahf
pop
shlb
mov
imul
bound
pop
push
jmp
sarb
xchg
hlt
scas
repz
inc
fs
push
fstl
repz
int
add
adc
jle
and
mov
shrl
in
addr16
nop
test
pusha
call
push
or
jl
xchg
mov
pushl
out
push
cwtl
out
mov
ss
mov
and
fs
lods
xchg
and
inc
test
aad
add
xchg
mov
cmp
dec
jmp
fsubl
fisttpll
ds
pop
ljmp
cld
subl
test
cmp
inc
stos
outsb
and
cmp
adc
jg
js
mov
addr16
mov
sub
pop
pop
ud2
mov
test
xchg
jp
sub
push
outsb
dec
mov
mov
int3
data16
fldl
test
decl
mov
jnp
ja
lahf
jg
or
jnp
xor
decl
in
lcall
jle
xor
xor
repnz
mov
loopne
or
cmp
xchg
dec
adc
lcall
in
lret
xchg
sub
mov
jmp
jns
les
or
lcall
stc
or
icebp
jg
stos
sub
loope
add
aas
in
mov
or
jge
push
pushf
cmp
test
mov
decl
das
xor
jns
xchg
std
in
loope
shrl
jmp
inc
mov
dec
jae
cmpsb
cmc
lret
or
sub
xor
jle
ja
jecxz
inc
ds
mov
inc
jo
xor
loop
femms
mov
mov
xchg
rorb
mov
decb
decb
or
and
push
jl
and
jle
mov
push
imul
ljmp
loope
out
inc
cmp
cli
pop
jp
jns
repnz
pop
in
add
sub
les
mov
mov
or
push
ret
pop
popf
xchg
push
sub
addr16
or
call
inc
lock
xor
aam
mov
add
popf
push
aaa
lahf
lret
andnps
scas
aam
outsl
outsb
in
xor
sbb
lret
adc
cmp
jb
sbb
push
sub
mov
sub
out
mov
mov
xchg
xlat
imul
jge
adc
add
inc
js
jecxz
mov
imul
mov
mov
mov
mov
push
adc
cmp
decl
shrl
sub
mov
jno
scas
mov
push
lods
jae
jle
and
jg
push
movsb
stos
dec
loopne
xor
int3
push
add
movb
lds
call
pop
pop
out
mov
pop
fsub
mov
inc
popa
ret
hlt
xchg
cmp
mov
dec
call
jle
ljmp
inc
test
or
and
mov
les
shlb
pop
adc
cltd
mov
sbb
aaa
or
or
js
adc
cmp
mov
push
icebp
addb
jg
incb
jmp
call
mov
shrb
daa
aad
stos
cmpsb
push
fldcw
pop
add
jmp
jmp
enter
daa
cs
push
ljmp
bound
mov
cmp
push
hlt
jg
movsb
mov
pop
sbb
adc
into
push
scas
enter
xchg
clc
in
ss
das
stc
decl
dec
repz
test
pop
ret
push
in
fdivs
pop
pop
xor
jnp
inc
cmp
ljmp
imul
fdiv
inc
xchg
push
aam
xchg
cmpxchg
and
pop
jecxz
jle
dec
addl
xchg
into
push
ret
loopne
jne
jns
fcomi
push
jae
cmpsl
xchg
push
sti
fistpl
mov
std
rcrl
jae
sub
and
movsl
inc
push
call
jg
jmp
enter
stc
sahf
cli
dec
adc
push
cli
xchg
out
decl
imul
jg
push
stos
arpl
insb
fldt
imulb
adc
jge
cmp
faddp
sti
test
jb
inc
arpl
jns
cmpsl
in
inc
xor
add
incl
sub
loopne
jge
mov
int
jmp
mov
xor
pushl
mov
addl
pop
scas
jnp
jg
mov
push
es
dec
rcrl
std
in
and
bnd
and
notb
mov
in
pop
imul
mov
iret
mov
xor
incl
out
bound
jb
sarb
test
jmp
xlat
push
push
dec
fs
mulw
outsl
dec
scas
mov
xchg
pusha
push
aaa
mov
xchg
sbb
xchg
adc
call
adc
movsb
xor
mov
cmp
xorl
sub
fadd
inc
mov
sub
add
pop
dec
in
lock
arpl
into
ds
mov
loope
jl
jns
movsb
pop
test
aam
adc
or
imul
push
in
mov
popf
loop
jmp
sub
xor
jp
popf
xor
adcl
jge
inc
xor
sbb
clc
fiadds
je
dec
sti
inc
sub
out
dec
inc
inc
mov
rcl
push
jg
xor
test
pushl
jg
movd
jns
mov
mov
dec
fs
fs
xchg
mov
test
decl
bound
or
pop
out
inc
outsl
xor
sub
or
xchg
mov
cli
or
cmp
or
jno
xchg
cwtl
lahf
xchg
xor
ds
mov
jae
ja
jmp
ds
sub
jmp
cmpsb
adc
cli
stos
mov
xchg
pop
xor
das
jg
sbb
ficompl
ss
xchg
pop
loopne
pusha
mov
pop
mov
imul
arpl
dec
inc
and
mov
scas
mov
pop
shlb
jecxz
push
mov
mov
xchg
xor
call
cmp
mov
and
or
sub
int3
jmp
repz
int
jg
call
loopne
fcoml
mov
push
push
pop
pushf
push
xchg
inc
xchg
add
subb
inc
pop
cld
adc
mov
icebp
push
into
bound
test
dec
negl
fmul
pushf
or
push
scas
dec
add
gs
lods
xlat
cld
sub
loop
cmp
imul
pop
jae
mov
std
or
std
and
dec
negl
js
jb
in
outsl
add
jl
lds
mov
enter
call
decl
inc
test
pop
pushf
mov
xchg
roll
rclb
push
loopne
xor
jmp
adc
pop
aad
out
jb
les
in
test
out
lds
aad
dec
stos
aaa
std
jmp
dec
pop
mov
mov
loope
pop
mov
mov
js
fstps
sbb
mov
in
nop
divb
sub
xlat
mov
or
imull
sub
jmp
dec
or
clc
int3
mov
out
xor
sbb
push
es
xchg
adc
push
decl
pop
jg
nop
aas
sbb
jns
adc
pop
push
push
stos
out
dec
xor
mov
jg
ljmp
cmp
or
mov
push
jae
loop
mov
ja
jo
inc
cmc
subl
loope
inc
inc
data16
fwait
mov
jg
roll
mov
cwtl
pop
decl
sahf
dec
es
adc
test
lods
incl
clc
push
dec
cmpl
insb
movsb
cmp
lret
cwtl
cltd
outsb
imul
outsl
rcrb
test
jmp
hlt
mov
dec
sbb
lcall
insl
mov
mov
cmp
xchg
incl
or
add
dec
add
add
push
dec
cltd
loope,pn
int3
pusha
add
idivb
mov
lods
or
aas
out
xchg
jl
dec
pop
test
dec
mov
out
lcall
xchg
inc
mulb
mov
pop
cmp
movsb
jae
lahf
push
in
and
xchg
call
dec
ficompl
inc
jns
cld
and
lahf
jne
mov
andl
dec
and
dec
pushl
pusha
insl
push
in
int
or
lret
in
mov
rcll
sarl
pop
and
scas
inc
mov
push
pop
movsb
and
add
add
xor
jl
mov
cmp
cld
call
popf
cld
push
inc
bound
push
bound
mull
push
mov
pushl
cld
or
sub
push
pop
jb
fcompl
stos
mov
es
add
inc
dec
push
lods
add
loopne
lcall
in
stos
lods
jae
pop
xchg
mov
and
xor
mov
push
jne
aad
sahf
sahf
shrb
hlt
inc
cmp
and
ret
jmp
and
mov
ss
ljmp
popf
dec
sub
roll
cs
cmpb
sahf
sbb
ljmp
push
sahf
lds
pop
xchg
cmp
adc
mov
mov
dec
pop
decl
mov
mov
jecxz
cmp
rclb
movsb
fs
shlb
incl
cld
into
or
inc
or
into
push
dec
call
adc
fwait
stos
mov
lcall
lds
sbb
jno
addb
push
sub
jg
popa
mov
adc
call
scas
xchg
popa
or
call
in
cmp
out
scas
int3
dec
sbb
sbb
les
push
movb
sarb
lcall
insb
sbb
sbb
fldl
pop
addr16
lcall
xchg
add
cli
testb
out
aas
push
mov
movsb
ret
mov
ret
hlt
xchg
and
ljmp
xor
xlat
pushf
mov
dec
mov
pop
icebp
enter
cmp
je
xor
std
xchg
jae
aas
dec
inc
mov
in
sti
pop
ss
stos
jmp
ljmp
fnstcw
fwait
add
popf
push
sarb
or
inc
mov
decl
rclb
mov
fistpl
loop
xchg
jae
fcmovu
sbb
psubusw
andl
ftst
jp
rolb
movb
cmpsb
jecxz
decl
insl
jnp
dec
sar
mov
adcb
add
out
shl
and
fcomip
mov
loop
sbbb
lahf
lret
push
insl
pop
icebp
pop
out
popa
outsl
push
jp
cld
rcll
std
lods
in
shll
add
leave
jl
sti
xor
mov
mov
inc
nop
cmp
pushl
iret
xchg
popa
fwait
lods
inc
int
lret
inc
sub
inc
add
lods
out
cmp
jns
ret
pushl
daa
inc
sarl
jmp
stos
dec
nop
pop
repnz
xor
inc
pop
in
or
lods
jg
int
xor
mov
loope
daa
loop
out
int
cltd
pop
fisubl
insb
add
aas
mov
out
out
jp
sar
jmp
cmpsb
clc
cmc
xchg
push
pop
outsb
mov
dec
int3
dec
ds
mov
cmp
or
ljmp
lcall
mov
mov
sub
dec
add
repnz
inc
lock
xor
call
ss
ret
int3
pushf
movsl
stos
add
sub
das
adc
incl
pushf
push
scas
mov
jmp
fadds
mulps
popa
scas
sbb
les
and
lcall
push
sub
mov
dec
and
adc
insl
fwait
aad
pop
jae
push
xor
ljmp
pushl
xchg
out
pop
xchg
out
xor
jecxz
xchg
and
pop
dec
xchg
ljmp
xchg
xor
xchg
dec
in
orl
icebp
or
ljmp
mov
mov
movl
xor
ret
mov
daa
lods
ljmp
ja
ljmp
insb
lock
call
sbb
pop
rorl
repnz
pop
arpl
das
jnp
in
push
sbb
out
ljmp
out
icebp
loopne
mov
je
sub
ljmp
or
test
pop
xchg
mov
adc
lret
and
xchg
xor
lcall
leave
adc
cmc
xchg
jg
mov
repnz
repz
mov
mov
call
bnd
dec
outsl
mov
pop
mov
jnp
xchg
inc
arpl
ljmp
mov
push
jno
mov
cmp
cmp
xor
icebp
icebp
decl
repnz
pop
push
or
push
pop
fdivl
mov
filds
cmpsl
insl
gs
inc
jge
clc
subl
mov
cwtl
jp
jmp
shll
subl
lahf
xor
xor
pop
clc
cli
frstor
stos
roll
or
sub
mov
xchg
xor
cmp
decl
in
addb
cmc
and
fcomi
xchg
sub
jmp
sub
sbbb
cli
xor
lret
movsl
adc
sarb
sahf
cmp
push
mov
cmp
ja
loopne
cltd
int3
pop
cmp
sti
pushf
insl
ret
mov
ljmp
fisubrl
push
insl
mov
xchg
mov
sbb
or
inc
mov
sbb
ljmp
sbb
xlat
jae
pop
xor
pop
sbb
inc
add
mov
lods
test
and
mov
decl
in
aaa
popa
sbb
pop
into
cmp
popf
rcrb
call
sar
mov
inc
mov
in
daa
pop
test
push
fsub
xor
mov
cmpl
push
xor
mov
lock
negb
push
ds
inc
jns
scas
test
add
mov
cltd
xchg
leave
nop
xor
loope
jecxz
mov
incl
add
cmp
andnps
sbb
pop
imul
and
dec
addr16
pop
mov
jecxz
mov
and
lock
pop
gs
sbb
sahf
jae
sub
test
and
xchg
std
ljmp
add
or
loope
cmp
mov
push
adc
jmp
mov
dec
pop
sbb
jae
pushl
mov
jno
nop
scas
jecxz
test
in
cmpsb
inc
sti
dec
mov
cmp
insb
xlat
or
imul
cmp
pop
dec
lret
jg
pop
rolb
dec
mov
dec
jno
cmp
ret
cwtl
push
sbb
aas
cmpsl
outsl
push
xchg
scas
outsb
push
jge
mov
stos
test
mov
inc
cs
ret
add
in
call
xchg
jle
push
pop
shl
out
and
cli
call
std
mov
sub
pop
push
rcll
and
imul
fldenv
mov
fcomps
decl
andl
mov
out
lret
lcall
movl
sbb
leave
arpl
pop
pop
jmp
xor
pop
sub
decl
and
and
movsb
test
das
movsl
inc
out
pop
add
popa
das
jge
sbb
leave
call
mov
ret
mov
jbe
pop
mov
data16
pop
jae
ljmp
push
adc
mov
dec
xchg
fadd
cmpsl
push
leave
jmp
cmp
cmp
dec
dec
push
sub
cmpsb
scas
sub
out
test
and
sub
cmpsb
push
movsl
testl
dec
push
mov
push
fcmovne
xchg
fisttps
and
mov
aaa
std
js
arpl
sbb
pop
inc
stc
jno
ret
mov
pop
cs
mov
adc
mov
mov
mov
dec
into
outsl
ljmp
js
fcomip
pushl
xchg
mov
pop
sti
fs
jge
es
pop
movsl
inc
lods
ret
cs
dec
sub
loop
lcall
adc
aad
aaa
mov
test
mov
xchg
sub
xor
cmp
pushf
fisubrs
mov
call
lret
dec
aad
pop
ss
shll
jl
mov
repnz
std
aam
xor
inc
dec
mov
push
push
sbb
sub
dec
fs
movsl
pop
dec
jnp
xor
mov
decl
jecxz
adcb
xor
out
jmp
mov
xchg
mov
sub
cli
call
fcoml
daa
add
ss
je
xorb
lret
jnp
stc
call
movsb
insb
cmp
cmc
addb
sbb
add
push
xor
imul
mov
inc
dec
mov
rcrb
add
inc
out
std
jmp
cs
test
mov
jno
testb
xor
dec
lods
inc
lods
jg
ja
pop
dec
add
fisttps
pop
pop
lock
incb
push
scas
imul
mov
sbb
test
or
mov
loope
andb
fmuls
jmp
pushl
rcll
insl
mov
push
insl
scas
or
cmpsl
mov
xor
data16
ljmp
test
cmpsb
jmp
icebp
in
add
lret
jp
xlat
push
xchg
mov
push
mov
fcoml
and
decl
stc
fisttpll
add
mov
cld
mov
insl
and
ss
xchg
add
xchg
xor
rcrl
int3
stos
pusha
xor
mov
pop
push
aad
sbb
mov
insl
mov
test
jle
in
rcll
aam
cltd
sar
out
dec
mov
mov
stc
iret
sub
addr16
inc
outsl
rcr
jno
mov
das
ds
dec
lock
out
xchg
popf
adc
stos
pop
sub
cmp
icebp
jp
sti
movsl
out
fsubs
decb
mov
aad
pop
decl
roll
repnz
cmp
adc
dec
movsb
sbb
int3
fnstsw
mov
ljmp
inc
mov
and
inc
lods
int3
jbe
int
roll
lods
mov
movsb
movsl
ljmp
dec
adc
sbb
fnstenv
mov
imull
inc
stos
sbb
je
pop
outsl
jmp
xchg
stos
aad
outsb
js
vunpcklpd
push
in
in
jmp
fbstp
add
fcomip
or
addr16
add
bound
cs
mov
pop
lahf
jns
mov
test
pusha
std
mov
lock
hlt
xor
inc
mov
int3
nop
mov
mov
fimuls
sub
pop
hlt
push
pop
in
int
jg
int
sbb
xchg
imul
fidivrl
incl
stos
incl
sarl
sbb
and
jge
movsb
test
incl
cmp
movsb
js
hlt
fwait
outsw
and
dec
pop
push
sub
es
mov
lods
movsl
mov
pop
shll
pushf
push
addr16
mov
repnz
push
sub
jnp
lods
ss
push
decl
fmull
inc
outsb
iret
push
mov
insl
outsb
lea
mov
sub
es
fdivr
insl
push
popf
dec
inc
cmp
jne
loopne
xor
ja
jmp
das
repz
js
mov
mov
sar
pop
xchg
sbb
xchg
and
or
and
pushf
xchg
mov
out
das
js
out
les
mov
andb
mov
shlb
adc
call
std
mov
mov
sbb
pop
outsl
divl
cli
cwtl
jns
cmp
adc
movsl
mov
lds
mov
cmpsb
enter
aam
adc
push
push
sahf
fs
pop
cmc
pop
cld
fldt
inc
sub
add
add
loope
mov
lcall
lods
addr16
jae
repnz
enter
mov
movsb
loope
ljmp
mov
ljmp
leave
add
fimuls
sahf
imul
mov
aam
push
jp
mov
xchg
and
inc
inc
fstl
xor
icebp
cmc
pop
sub
sahf
insb
jns
cli
cmc
dec
dec
rcrl
cld
in
mov
out
xchg
mov
mov
inc
jae
jb
ljmp
inc
cmp
imul
int
lret
cwtl
mov
xchg
pushl
cmpsl
adc
pop
scas
cmp
jmp
fnstenv
hlt
dec
scas
push
fisttpl
arpl
dec
push
imul
adc
les
jns
test
mov
aaa
pop
jno
sub
cmp
dec
incl
inc
and
js
hlt
push
dec
or
pushf
push
xor
pop
jmp
mov
add
std
shrb
in
xor
sub
loope
cmp
rorb
stos
sub
mov
ret
inc
data16
fsts
inc
jl
repnz
popa
insl
jmp
stos
mov
inc
mov
cmc
sbb
test
push
std
jno
enter
bound
in
pop
jle
incl
loop
mov
pop
out
loopne
dec
add
negb
dec
movsb
mov
cmp
push
mov
out
cli
lcall
dec
adc
jno
mov
fmuls
aaa
jecxz
cld
jmp
int3
mov
mov
test
daa
sub
lods
sub
test
aad
fnstenv
xchg
dec
push
adc
add
shr
call
mov
cmc
pop
sti
sbb
cmp
pop
andps
fstl
arpl
int3
lcall
inc
out
push
imul
xchg
fisubs
test
or
aam
mov
call
dec
sahf
gs
cmp
push
sbb
addb
in
push
sbb
fs
ds
push
adc
hlt
mov
xchg
sub
testl
popa
mov
fcmovb
xchg
repz
adc
rorl
loop
mull
aam
sub
lcall
jns
xor
hlt
sti
jl
enter
loopne
jg
cltd
sbb
xchg
mov
das
clc
decl
sar
jnp
outsl
jecxz
cmp
imul
clc
xlat
push
cli
add
xlat
in
dec
lahf
addr16
in
pusha
push
lret
push
cwtl
push
jg
cmp
mov
jne
std
fisubl
ds
xorb
fdivrl
cmp
sub
stos
add
jne
or
enter
out
inc
jnp
cmc
cmpsb
push
mov
mov
adc
sbb
out
nop
mov
daa
int3
sar
call
lcall
mov
lods
and
jb
out
hlt
inc
mov
cli
jg
push
dec
sub
cs
add
lcall
jle
cmpsb
rcrl
add
fdivrs
leave
incl
dec
add
aaa
and
icebp
mov
adc
addr16
ljmp
fstps
cmp
fsubl
in
mov
stc
cmp
cmp
adc
sbb
push
dec
sub
xchg
imul
ljmp
es
fldlg2
loop
pop
or
mov
pop
push
jbe
cwtl
lods
cmp
cltd
incl
test
lods
jge
xor
pop
jbe
pusha
shll
enter
adc
mov
pop
jmp
or
mov
mov
jae
subl
js
cmp
repnz
xor
fwait
imul
inc
pop
pop
hlt
push
int
cmp
jg
and
sub
cmp
lahf
pop
dec
in
cltd
pushf
mov
push
add
arpl
in
pushf
mov
xor
pop
mov
pushl
jnp
leave
mov
push
mov
mov
inc
cmp
dec
sub
imul
rolb
leave
imul
addr16
or
js
dec
inc
push
outsl
mov
pop
adc
pop
dec
outsl
mov
xor
pop
test
push
cld
clc
lcall
cmp
fistps
loop
popf
xor
ss
pusha
push
push
pop
add
push
cmp
mov
cltd
ja
and
mov
dec
aas
push
nop
jp
xor
lahf
mov
cli
sbbl
push
jmp
inc
jl
cmp
dec
aaa
into
xchg
push
mov
mov
bound
inc
pop
ss
cwtl
jg
call
sub
test
fildl
jns
insl
sub
in
stos
adc
out
int3
int3
incl
sub
mov
jns
xor
leave
cmc
pop
inc
jmp
pushl
xor
xor
push
fldl
bound
ljmp
add
cmp
cwtl
mov
pusha
lds
clc
pop
sub
in
sub
jg
mov
or
add
cli
inc
xchg
cmc
add
cmp
inc
shlb
xor
decl
xchg
inc
out
mov
dec
jmp
push
ret
pop
int
inc
mov
adc
inc
lcall
dec
mov
push
rolb
ss
hlt
sbb
push
jg
or
ljmp
hlt
scas
sbb
in
insb
shrl
inc
popa
jmp
fdivrp
and
notb
sbbb
jg
lahf
subl
pop
pushf
insb
ss
lahf
pop
adc
xchg
out
popa
test
jmp
je
loope
sub
cmp
add
mov
dec
mov
jg
lcall
movb
or
cmp
adc
ja
stos
daa
lret
pop
cmp
sub
mov
cld
adcl
decl
dec
sbb
sets
dec
loope
adc
repnz
xchg
stc
pop
cmp
bnd
ljmp
inc
inc
call
push
andl
sub
jmp
pushf
flds
mov
jb
aam
jb
xor
mov
jo
iret
or
jae
decl
ficoml
xor
aaa
cmpsb
xlat
or
cmp
decl
mov
dec
pop
test
lret
push
xor
incl
negl
push
and
xor
sbb
sub
loop
cwtl
mov
ficoml
sbb
dec
mov
pusha
and
stos
rep
xorb
fnsave
push
inc
ljmp
push
mov
jmp
lcall
fistl
inc
hlt
mov
imul
sub
loopne
insb
loop
pop
add
jl
sbb
in
ljmp
mov
das
fiaddl
mov
setle
xor
mov
jno
sub
sbb
xlat
lahf
sti
fisubl
or
fnsave
hlt
lcall
cmp
je
call
inc
sbbl
sub
jnp
fildll
loop
into
imul
leave
sub
lcall
jg
adc
cwtl
inc
outsl
push
mov
mov
into
mov
jmp
aam
insl
dec
mov
fs
push
xchg
lret
push
test
test
decl
ja
sub
ljmp
mov
pop
out
out
incl
inc
ljmp
out
pop
jae
mov
stos
andl
test
push
jmp
push
sub
push
cmp
xlat
jge
sbb
shlb
jnp
call
sahf
cltd
dec
mov
ljmp
and
rcl
sbb
lcall
add
stc
and
test
out
cld
or
cltd
out
outsb
pop
or
inc
and
scas
std
mov
subl
addr16
rolb
sbb
jle
xchg
stc
pop
mov
cmp
mov
nop
fidivs
sub
mov
lock
mov
pushl
fldt
sahf
sub
shrl
lods
cmp
pop
xlat
int
lahf
addr16
call
out
stc
cmp
inc
push
add
into
pop
mov
shll
in
xchg
call
mov
adc
decl
mov
add
into
ss
in
xor
pop
add
xor
xchg
gs
in
or
decl
pop
push
sub
repz
daa
mov
cltd
dec
imul
jg
push
inc
push
hlt
jge
pop
pop
icebp
pop
sbbb
inc
imul
idivl
pushl
pop
jp
sahf
pop
out
add
xor
mov
mov
dec
sub
pop
popa
xor
push
movsb
pop
ret
sub
repz
daa
push
outsb
add
in
or
cs
rolb
xchg
xchg
fs
call
testl
xlat
mov
dec
inc
xlat
leave
sub
icebp
cmpl
ret
sahf
pusha
inc
das
inc
out
test
arpl
mov
cltd
scas
fmuls
or
mov
xchg
xabort
xor
mov
cmp
push
mov
adc
movsb
sti
push
clc
sar
cmp
mov
out
jmp
mov
pop
push
icebp
inc
loope
mov
daa
adc
and
fcomip
inc
sbb
mov
xor
jo
and
daa
das
sub
pop
test
mov
pop
sbb
das
gs
or
das
or
sub
fmulp
mov
push
scas
call
in
fsubs
out
push
int
jnp
adc
sbb
pop
jp
inc
xchg
loop
gs
sbb
icebp
inc
lock
dec
dec
subl
dec
jge
and
enter
cmpsb
out
mov
xor
lds
cli
loope
shlb
xchg
shrl
cmpsb
xor
fldl
insl
xchg
out
sarb
pop
shrl
call
fwait
outsb
arpl
sub
jg
dec
sbb
and
rcr
sbb
jmp
pop
divb
incl
pop
mov
xor
stc
xor
cwtl
xchg
push
jecxz
movsb
nop
xchg
sub
mov
cmp
call
mov
sub
aad
data16
or
dec
sarb
xchg
jg
jmp
xor
inc
jns
sbb
mov
cli
test
frstor
add
stos
pop
mov
add
mov
lcall
nop
call
jmp
mov
pop
push
xchg
cmp
and
jno
lcall
adc
inc
fstl
and
or
ja
iret
sbb
xchg
jbe
in
mov
fcomip
inc
inc
fwait
ret
loop
add
push
mov
cltd
insl
jmp
mov
movsw
add
jmp
mov
cmpl
adc
shll
mov
cmp
adc
jge
sahf
mov
pop
cmp
xchg
cwtl
mov
lds
xchg
and
xchg
cld
xchg
mov
lcall
push
dec
cli
sbb
xchg
movsl
in
mov
mov
fsubs
xchg
or
fsub
pop
call
dec
icebp
mov
mov
es
cmp
lea
sbb
push
inc
and
jmp
subb
test
int3
push
cmp
popf
orl
pushl
and
fsubl
out
outsl
int
cmpsb
or
fs
pop
sbb
pop
pop
mov
ljmp
push
test
fdivrl
lcall
inc
jae
adc
cmp
decl
iret
push
dec
cwtl
test
les
xchg
test
rolb
ljmp
jl
pop
adc
push
cmp
cwtl
dec
cmp
test
add
pushl
addl
sbb
out
adc
inc
jle
pop
adc
fldenv
push
ss
cmc
add
jecxz
dec
pop
jne
cmc
ja
pushf
inc
aas
push
dec
pop
cmpsb
cmp
pop
decl
sbb
push
push
push
xchg
adc
enter
push
out
sub
popa
adc
ror
mov
outsb
add
mov
aam
push
enter
or
addr16
mov
das
rol
fadds
xlat
add
mov
insl
cld
push
lcall
ss
scas
mov
mov
lea
dec
pop
inc
aaa
mov
shlb
imul
imul
pop
adc
or
les
add
incl
call
xchg
push
xor
add
dec
pop
test
cltd
jl
or
stos
push
pushl
and
pushl
cwtl
imul
sysret
scas
mov
jp
inc
sbb
mov
jl
inc
icebp
xor
ljmp
scas
add
loope
pop
fiadds
xchg
cs
pop
cmp
or
je
iret
push
mov
ljmp
clc
adc
sub
inc
xor
pop
outsb
jns
push
imul
ficompl
mov
js
mov
aad
adc
and
xor
lret
jno
lret
cmp
js
icebp
lcall
cmpl
inc
out
adc
and
xchg
in
jno
cmc
mov
ss
ljmp
cmpsl
add
lcall
lahf
jbe
lods
inc
mov
data16
shrl
decl
lock
inc
loop
adc
fldl
push
add
fdiv
adc
call
push
cmc
jns
inc
lahf
jns
and
shrb
inc
jmp
mov
push
xor
xor
dec
pushf
lcall
adc
loope
jl
cld
popf
sti
and
inc
mov
jnp
mov
pop
jl
cmp
decl
roll
push
fs
imul
pop
in
dec
shll
xor
ficomps
subb
push
and
mov
lods
add
fcomps
xchg
mov
daa
loop
add
mov
xor
adc
mov
push
gs
cltd
call
call
adc
rcl
cmc
cmp
daa
mov
ss
leave
subl
fistpll
jmp
addr16
xchg
mov
xor
fidivrs
cli
jnp
push
push
pop
jg
test
cmc
fdivrl
mov
and
cli
shlb
add
xor
std
ljmp
cli
lea
ficompl
pop
pusha
int
jecxz
cmpb
pop
ss
mov
mov
push
daa
mov
std
call
sahf
add
xchg
ss
incl
mov
shl
lods
pminub
sbb
fs
jnp
aas
pop
rorl
ret
adc
and
and
and
push
xor
out
leave
divl
and
repnz
and
dec
or
fs
int3
ja
mov
bnd
mov
mov
cld
arpl
xor
pop
inc
rcrb
pushf
pushl
mov
aas
xor
push
sarb
mov
dec
adc
sub
mov
jg
ds
mov
movsb
rcrb
ja
clc
shll
ja
cmpsl
xor
orl
in
lods
mov
fstl
icebp
xlat
stos
test
sbb
mov
push
loope
and
fcmove
pop
pop
call
js
ret
mov
cmp
xor
add
nop
jmp
fiaddl
test
pop
scas
xor
mov
into
mov
ret
mov
in
mov
fcomip
decl
jl
fs
adc
push
loopne
xlat
movsl
add
lcall
mov
dec
fwait
inc
pop
loope
ja
movl
sbb
mov
mov
incl
fs
mov
int
out
mov
in
stos
mov
and
jmp
mov
js
sbb
loopw
mov
sbb
mov
jbe
hlt
jmp
cli
and
push
sbb
icebp
sarb
pop
cmc
jge
aaa
clc
lahf
addl
pop
bound
enter
mov
mov
xlat
or
xchg
loopne
jge
lock
sub
bound
cmp
push
movsb
movsl
mov
fiaddl
cmp
mov
das
into
div
out
push
inc
fcomip
cmp
jbe
lcall
enter
and
dec
pop
and
mov
push
sub
ljmp
mov
mov
xchg
js
adc
xchg
fcom
push
xor
mov
pushl
enter
mov
mov
mov
and
out
xor
js
movsl
adc
leave
hlt
ljmp
mov
loopne
xor
mov
xchg
jne
pop
inc
xchg
and
mov
or
adc
decl
mov
mov
mov
in
andl
dec
test
or
aas
inc
stos
adc
scas
sbb
dec
sub
mov
int
roll
adc
out
push
data16
sbb
pop
cmp
scas
repz
ss
movl
loop
mov
data16
lahf
shll
test
mov
stos
insb
aam
hlt
aaa
in
out
mov
je,pn
sub
lcall
xchg
insl
or
or
push
sti
iret
aaa
mov
test
js
imul
pop
mov
jg
incl
pop
ret
movsb
xchg
les
mov
sub
shrb
inc
loop
cmp
out
push
loop
mov
jb
hlt
pop
add
cltd
inc
push
and
cwtl
fistpll
cmp
push
imul
cmpsl
pop
jecxz
repnz
push
adc
aam
in
mov
nop
xor
out
dec
mov
pushl
iret
mov
cmpsl
xchg
xchg
ss
xor
jl
xchg
inc
aaa
cmpsb
pop
fidivs
out
das
rorb
int3
adc
sbb
aaa
lods
jne
sub
stos
and
in
std
jmp
int
ror
daa
xchg
and
dec
out
adc
pusha
cmp
fildl
lahf
int
mov
sbb
mov
test
montmul
cmpsb
daa
sbb
pop
add
cmpb
int
pusha
fidivs
cld
incl
sbb
bnd
xchg
shrb
and
ds
push
ss
sub
cmp
mov
ljmp
aad
insb
pop
jae
sub
xor
fs
call
or
pop
adc
xchg
xchg
aam
in
xchg
outsb
add
pop
inc
mov
pushl
ljmp
fldcw
outsb
cld
test
ljmp
sub
rcll
xchg
mov
cmp
push
or
dec
mov
fwait
xchg
inc
or
sub
bound
ficompl
insb
dec
jmp
call
outsl
popf
push
daa
xchg
stc
clc
push
popa
shl
pop
sti
cmp
test
or
outsl
stos
cmpb
cmp
jg
pushl
cmp
xchg
je
xor
jae
xor
mov
das
clc
cmp
sbbb
mov
push
lods
dec
adc
scas
out
dec
cmp
decl
jle
outsl
sub
insb
out
cmp
push
mov
mov
xor
lcall
mov
es
jbe
add
int3
xchg
sbb
jl
decl
jecxz
dec
fimuls
mov
push
fs
xor
movsl
rol
push
repnz
shll
fsts
movsl
push
sub
jmp
pop
lock
hlt
enter
dec
fdivrs
xchg
roll
rclb
cmc
fcomip
xor
jl
add
movsl
icebp
and
fwait
out
mov
clc
mov
xor
xor
decb
in
push
sub
ljmp
sbb
fildll
sar
add
iret
in
push
cmp
stc
repnz
mov
insl
xchg
and
or
fsubs
leave
inc
es
mov
fs
test
call
cli
mov
jp
aaa
push
cmp
add
aam
sbb
xchg
lds
fldz
xchg
add
jnp
xor
mov
out
cli
ljmp
push
pop
lea
inc
bound
out
cltd
mov
dec
jb
sbb
add
iret
or
mov
jo
cli
andl
mov
les
jb
decl
or
pop
ret
push
repz
jne
sub
or
dec
adc
mov
ljmp
test
out
lahf
add
mov
mov
adc
aad
sbb
decl
xchg
push
mov
out
sbb
mov
incl
xchg
loope
dec
in
out
icebp
jns
cmpsb
ret
das
cmc
daa
jecxz
jp
jp
inc
movsl
ret
je
adc
cltd
add
inc
jnp
or
mov
pushf
ljmp
lcall
jb
jae
push
lret
lret
or
push
insb
mov
leave
stos
push
mov
pushl
pop
scas
cs
pushf
sbb
in
mov
adc
mov
xchg
sahf
cltd
dec
or
push
fdivr
push
jmp
jge,pt
data16
adc
imul
aas
rcrl
mov
cmp
pushf
sbb
incl
jne
cli
push
cwtl
sbb
jmp
cmp
add
pop
cld
jmp
imul
int3
pop
inc
ds
jb
push
addb
call
mov
into
pop
shl
cmpsl
push
sbb
lret
pusha
sbb
push
popa
test
jmp
stc
inc
xchg
lock
fdivr
cld
nop
inc
aad
pop
push
cs
das
hlt
mov
test
mov
call
push
pushf
sbb
movsb
pop
mov
pop
add
test
inc
orl
adc
fdivr
lcall
movb
push
pop
test
bound
mov
sbb
add
incl
sub
jp
push
cmpsl
ds
hlt
popa
mov
int
ret
add
pushl
cld
mov
cld
repz
test
or
into
adc
cltd
sar
mov
in
push
jbe
cmp
sub
xlat
and
stc
das
sbbl
mov
pop
mov
add
dec
stc
fists
jo
inc
out
dec
enter
mov
dec
push
mov
or
jg
push
ljmp
pop
adc
insb
or
or
mov
dec
and
adc
inc
push
out
mov
fs
decl
xchg
mov
push
stc
jl
cmc
mov
mov
std
push
adc
call
xchg
xchg
mov
fs
cmp
add
insl
add
imul
imul
cmp
call
push
dec
outsl
xor
lods
in
dec
adc
xchg
dec
mov
fbstp
outsb
mov
ljmp
fisttpl
stos
adc
push
mov
adc
ljmp
jbe
jnp
jg
hlt
dec
cmp
bnd
jg
cltd
call
xor
pushl
mov
js
xor
or
mov
jo
and
icebp
outsb
inc
dec
mov
add
mov
or
cmp
mov
xlat
aad
and
lcall
push
popf
pushl
cmp
adc
cmpsl
daa
push
push
push
adc
out
mov
test
jnp
dec
push
and
rcll
mov
mov
jecxz
push
add
inc
mov
cmp
aam
sub
loop
push
popa
mov
inc
in
add
repz
cs
dec
adc
nop
decl
push
cmc
mov
clc
xor
cmp
hlt
in
lcall
cmp
mov
incl
jbe
dec
jle
imul
mov
mulb
mov
push
std
call
mov
aas
inc
mov
fiadds
sarl
ret
ljmp
imul
xchg
push
daa
mov
out
dec
insl
or
add
and
ss
or
jnp
jb
mov
pushl
ja
mov
jmp
nopl
in
ds
pop
mov
rcll
dec
out
cmp
xor
aas
pop
cmp
mov
sub
outsb
xor
and
incl
std
fidivrl
addr16
popf
and
mov
jp
pop
xor
lret
jmp
push
jnp
adc
mov
push
xor
test
sub
inc
lds
inc
xchg
arpl
jl
dec
cmp
scas
sub
xchg
call
jg
or
in
add
xchg
mov
lret
adc
or
loop
call
xor
call
dec
xor
cmp
add
dec
mov
enter
aam
in
dec
jmp
rdmsr
lcall
imul
mov
sbb
call
jg
cmp
push
xchg
arpl
inc
mov
add
call
ret
lock
adc
xchg
mov
sarl
mov
push
das
repz
dec
loopne
cmpsb
dec
cmp
shrb
xor
jbe
cs
jne
mov
mov
lcall
das
and
jo
in
cmp
ficoms
sbb
pop
jp
jo
sub
dec
mov
bound
loope
mov
pop
lahf
insl
mov
pushl
xchg
add
cltd
mov
decl
pushf
sub
xchg
xchg
xor
insb
aas
mov
sbb
sar
pop
push
inc
idiv
mov
xchg
fidivs
imul
jae
push
sub
xchg
xor
js
mov
jmp
hlt
xchg
sub
popa
add
loopne
scas
sbb
out
sbb
sub
jbe
jne
xchg
jle
cltd
xorb
cmp
rclb
outsb
out
inc
or
and
xlat
cmp
ljmp
clc
mov
imul
ret
jp
cltd
in
add
mov
adc
pushl
push
sbb
rcr
out
mov
pusha
loopne
daa
jno
testb
cmpsl
faddp
ljmp
clc
jge
and
or
int3
pushf
and
and
fs
lcall
data16
addr16
xchg
xchg
out
mov
inc
jo
cli
je
fcmovb
and
les
out
dec
push
pusha
mov
mov
call
jecxz
jmp
outsl
mov
xchg
and
cs
scas
dec
or
xchg
inc
pushf
jb
ficoml
cmpsb
popf
inc
and
movsb
mov
push
mov
pushl
or
or
lock
push
dec
push
inc
jg
mov
shlb
enter
lock
es
insl
rcrl
test
xchg
or
jnp
jnp
imul
popa
pop
les
xchg
fistl
outsb
pop
ja
outsb
stc
ret
and
push
fldt
mov
leave
xor
lret
ror
dec
add
out
jmp
aaa
std
push
sub
xor
subb
or
jg
nop
sahf
jecxz
cwtl
push
or
pop
push
pop
adc
out
cli
lcall
jb
or
fsubl
pop
mov
enter
insb
call
std
ljmp
arpl
pushf
pop
stos
mov
pop
push
stc
subb
inc
push
cld
call
or
sbb
mov
mov
and
fisubrl
decl
pop
dec
repz
jle
das
sbb
dec
sub
shlb
cmp
or
fstp
loop
imul
pop
imul
xor
dec
push
pop
iret
inc
rcll
aam
stos
jg
xlat
xor
cwtl
jle
loopne
xlat
dec
and
xchg
shrb
ljmp
insb
sahf
std
jmp
fmul
jecxz
arpl
and
jns
in
mov
test
sti
es
cmp
mov
pushf
mov
dec
leave
loope
stos
xchg
add
pop
loope
mov
mov
xorl
stos
cmpsb
repnz
mov
xor
pop
hlt
pop
movsl
mov
test
push
lods
das
hlt
fs
mov
call
in
cli
mov
cmp
dec
mov
fildl
mov
pushl
icebp
sarb
pop
mov
stos
push
test
and
adc
ret
cmp
xchg
rorl
push
xor
mov
mov
call
aam
lcall
ret
mov
insb
lds
in
pop
das
lock
lcall
hlt
sub
adc
int
stc
lds
cmp
fldcw
mov
mov
mov
call
mov
leave
xchg
iret
sub
cmpsb
stos
fistpl
enter
pusha
ja
out
mov
call
jo
cld
loop,pn
andl
sbb
mov
mov
sbb
jne
xor
mov
dec
cmpsl
rcll
add
stc
cmp
push
xchg
call
jmp
ret
scas
mov
xor
andb
sub
pop
xor
gs
jp
jp
pop
sub
leavew
lods
cmpsl
pop
push
or
cld
js
cmpsl
mov
mov
std
mov
sub
xchg
add
fistpl
test
ljmp
mov
sbbb
or
sbb
loop
movsl
pop
mov
jnp
imul
imul
jae
and
add
jle
cmp
add
push
mov
mov
mov
out
cltd
fdivrl
clc
and
shll
and
into
adc
push
mov
rorl
out
outsl
xorl
mov
dec
aas
sbb
jmp
into
mov
into
push
and
adc
orb
jge
lret
lcall
sbb
pushl
pusha
push
adc
inc
add
ds
cmp
sub
cmp
mov
xlat
xlat
add
xchg
lds
inc
andb
mov
mov
push
es
fcomip
mov
cltd
mov
in
mov
jo
sub
push
nop
cli
add
out
int3
adc
inc
mov
sub
cwtl
popf
outsl
ljmp
jb
add
jg
incl
cmpsl
subl
inc
fbld
jl
sbb
or
jmp
jo,pt
and
lcall
xor
stos
sub
jp
xchg
es
fs
ljmp
cli
decl
pop
repz
and
mov
aad
scas
cmc
lods
cmp
call
pushl
jg
mov
add
jbe
inc
icebp
pop
rol
aam
adc
stos
xchg
add
mov
and
mov
push
push
in
mov
lcall
jg
push
test
mov
xchg
shr
in
xor
fcomps
and
call
outsl
lods
fnstsw
inc
add
repz
iret
rclb
lcall
fs
push
das
sar
lcall
pop
xor
xchg
repnz
fsts
loope
incl
cld
push
pop
std
inc
popl
into
popf
or
adc
imul
push
repnz
addr16
cmc
ljmp
hlt
andl
int
fcmovnu
or
cmp
mov
leave
test
lahf
movsl
mov
test
pop
cmpsb
pop
mov
imul
fwait
mov
fwait
dec
leave
addr16
lahf
lcall
mov
in
dec
and
fwait
push
in
and
mov
dec
inc
bnd
add
pop
or
pop
adc
ljmp
xchg
xchg
add
cmp
push
xchg
lock
cmp
or
jg
decl
movsb
enter
adc
ret
sbb
ljmp
daa
ds
push
aaa
dec
jg
fiaddl
repz
enter
xchg
fs
call
mov
or
push
movsb
pusha
add
pusha
out
iret
push
adc
icebp
sub
dec
cmp
ljmp
loopne
loop
sub
or
inc
mov
sbb
sbb
push
ret
fmul
stos
jge
cld
xchg
sub
pushf
ljmp
lds
xchg
pop
xor
cwtl
adc
cltd
test
aas
ljmp
ljmp
test
ljmp
inc
loopne
or
loopew
dec
or
ljmp
jb
push
push
pop
cmpsb
sbb
stos
inc
or
fidivl
mov
jg
call
sbbl
push
lock
outsb
jg
or
or
outsb
call
loop
fdivl
jb
aas
repz
add
dec
nop
xlat
loope
mov
decl
ja
xchg
lds
push
xchg
dec
pop
dec
hlt
dec
mov
jge
loop
ret
inc
inc
jp
ljmp
ljmp
sbb
adcl
xchg
inc
fmul
fmull
add
and
lods
push
pushl
ljmp
fwait
push
hlt
jecxz
mov
cmp
and
test
xorl
push
cmp
test
xchg
ja
sub
cwtl
int3
andl
pop
loope
xlat
mov
es
push
mov
decl
insl
dec
mov
sbb
and
rcll
mov
sub
movsl
adc
mov
sub
or
pop
mov
icebp
dec
lds
sbb
push
sbb
not
sub
arpl
add
lahf
xchg
nop
shll
sub
iret
sbb
jmp
sub
add
xchg
jg
mov
pop
inc
cmp
sub
inc
xor
movsl
testl
ljmp
cwtl
pusha
js
jns
repz
popa
mov
mov
pop
ret
gs
cmp
cli
sar
fisttps
iret
stos
xchg
mov
adc
xchg
loop
orb
inc
mov
xor
or
repnz
jp
idivl
xor
lcall
push
pop
inc
push
xor
jnp
push
jne
notl
sbb
incl
cmp
sub
add
or
imul
stos
sti
int3
push
dec
pop
cmp
fs
sbb
stos
and
jbe
mov
inc
fsubrs
call
aas
mov
mov
mov
arpl
cmpsl
test
xchg
jb
loopne
dec
or
js
movsl
push
shll
xchg
insl
pusha
or
fisttpl
out
pop
jg
div
test
lcall
jno
cmp
dec
outsb
addr16
repz
pop
mov
or
sbb
icebp
iret
cmc
mov
scas
out
pop
lahf
lret
popf
sbb
outsb
imul
adc
mov
bound
fnstcw
cmp
jecxz
pushl
in
popf
out
mov
lock
in
push
lahf
dec
rolb
jle
loope
inc
sub
aaa
lcall
lcall
and
xlat
ja
xchg
sbbb
insb
int
loopne
ret
repz
add
ficoms
cwtl
mov
cltd
cli
cmpsb
clc
jb
stos
mov
pop
add
in
xchg
ds
loopne
mov
movsl
cmp
test
push
stos
xchg
loopne
cmp
incl
nop
insb
imul
xchg
mov
cmc
loop
ja
incl
adc
adc
ljmp
neg
pop
xor
data16
fidivl
push
fbld
fistpll
int
add
mov
dec
out
dec
mov
in
adcl
pop
xor
andb
lods
fimuls
adc
mov
mov
out
out
push
jg
cmpsl
mov
fwait
cmp
push
gs
shrb
dec
imulb
sbb
in
xchg
repz
pusha
jg
adc
jmp
lret
loopne
mov
pop
in
bound
popf
lcall
in
mov
inc
push
add
mov
gs
addr16
push
sbb
sti
xlat
cli
adc
ror
lcall
add
stos
out
cmp
hlt
xor
sub
insb
das
gs
cmovl
mov
add
scas
lahf
popf
aaa
add
mov
shll
mul
push
mov
mov
sbbl
into
movsb
fbstp
inc
push
dec
jbe
popl
and
mov
inc
jo
pushl
adc
mov
je
sahf
imul
pushf
cltd
lods
sub
cmp
cmpb
sub
xor
sub
xlat
fstp
pop
push
and
adc
and
popa
stc
notrack
std
decl
mov
fnsave
pop
inc
out
cmp
push
push
or
jmp
jnp
push
pop
lret
call
lea
lret
outsb
push
jecxz
ljmp
adc
xchg
push
into
addl
pop
mov
fbld
mov
lods
or
xchg
data16
inc
xor
cld
test
cli
idiv
lcall
outsb
notl
sahf
dec
jbe
in
add
pop
and
xor
pop
imul
ljmp
movsl
and
mov
es
pop
test
add
cld
enter
scas
mov
cmp
test
jg
jl
mov
dec
mov
or
jg
psubsb
dec
outsb
cmp
mov
sarb
mov
lds
pop
insl
pop
jg
jmp
icebp
ror
ret
loop
cmpb
adc
cmc
sbb
incl
add
vmovd
xor
lret
push
pop
aad
jmp
push
cmpsb
lcall
js
out
and
sub
xor
imul
xchg
cmpsl
mov
insb
sub
rolb
lods
push
jg
cmp
clc
scas
in
mov
pop
ja
xchg
fdivs
sbb
js
xchg
jno
test
xor
out
add
gs
es
jae
outsb
mov
in
cmp
das
push
add
iret
push
ljmp
cmpsl
pmulhw
test
pop
and
pop
inc
in
xchg
js
andb
in
inc
test
leave
push
mov
cld
cmp
sub
cmpl
loope
bound
mov
mov
call
mov
mov
sub
mov
outsl
inc
cld
daa
ljmp
popf
loopne
inc
pop
data16
incl
fbld
std
mov
mov
sahf
icebp
mov
mov
jo
inc
aas
sub
mov
jmp
pop
or
mov
sbb
mov
sar
mov
jmp
xor
and
mov
test
cmpb
inc
push
scas
and
mov
jmp
adc
fnsave
cwtl
test
rclb
pop
jne
shll
jmp
xchg
incl
out
xchg
add
jb
dec
lds
in
jp
mov
push
fisubrl
fidivl
pop
sbb
xor
pop
pop
jae
xor
push
xchg
sub
inc
arpl
push
jle
pop
subw
insb
add
and
xchg
sub
add
push
outsb
lcall
jmp
mov
loopne
mov
mov
iret
pop
jae
fwait
stos
xchg
xor
lret
or
std
mov
nop
jo
xor
and
jg
out
test
mov
mov
jg
add
mov
outsb
test
pushf
and
jo
jmp
in
inc
cmp
fsts
cmpsl
push
ret
pop
push
cld
imul
pushl
movsl
jb
sub
fwait
pop
andl
cld
ds
in
or
enter
or
pushl
jb
stos
xor
test
and
sti
mov
mov
inc
add
inc
xchg
in
mull
arpl
push
sarb
loopne
xchg
lret
xor
in
imul
xchg
fcomip
call
imul
pusha
xchg
push
mov
sbb
mov
movsb
push
sbb
xchg
data16
inc
les
adc
cmpsl
add
jmp
push
out
sbb
fistpl
sarl
aas
ds
test
jno
or
movsb
xchg
jge
jns
sub
lcall
callw
mov
and
adc
test
lahf
jge
movsb
imul
ljmp
sub
sti
adc
sbb
mov
addr16
push
imul
push
sub
mov
imul
adc
and
ficompl
mov
adc
lods
xchg
inc
mov
inc
jmp
aas
pop
les
add
out
xor
outsb
mov
out
xor
imul
or
inc
push
dec
adc
jle
inc
mov
inc
and
jg
dec
fnstenv
add
dec
sahf
cmp
out
aad
jb
push
jmp
cld
ljmp
sub
mov
loopne
inc
cmp
cmp
and
push
cmpsl
mov
lcall
ret
sbb
mov
lret
outsl
push
push
or
fcmovbe
jbe
pop
or
call
imul
out
sbb
js
sbb
gs
sub
incl
push
lods
iret
loopne
lret
int
dec
fimull
pop
adcl
push
cs
jmp
dec
in
lret
cwtl
popf
xor
out
sbb
mov
movsb
arpl
movsb
incl
jb
lds
fistpll
inc
test
xor
mov
mov
lcall
pop
test
push
sub
sub
cmp
movsl
fwait
push
fstp
into
sub
sub
xor
sub
mov
andb
jmp
repnz
pop
or
stc
imul
ficoms
xor
sbb
jge
ja
push
outsl
or
bnd
call
pop
les
lret
jbe
mov
add
jp
insl
xchg
sbb
xchg
in
jmp
dec
pop
inc
sbb
xchg
test
xchg
negb
lds
cmp
fistps
les
mov
pop
xlat
jb
sbb
int
push
ljmp
sub
pop
inc
inc
sbb
mov
das
dec
push
es
test
loopne
jmp
mov
in
xor
daa
sbb
aaa
adc
jno
lret
call
jle
je
ds
mov
and
mov
stc
cltd
call
mov
decl
xor
into
mov
out
jecxz
fs
inc
aam
outsl
mov
sbb
adc
popf
movsb
sahf
fdivrp
dec
fldenv
push
ss
push
jno
fmull
adc
jle
inc
pop
repnz
dec
dec
sbb
cmp
pop
out
pushf
add
xorl
xchg
jecxz
add
mov
inc
xchg
mov
repz
aam
jo
and
icebp
jl
sbb
jbe
lahf
jae
add
insl
jg
xor
mov
mov
jge
cmc
pop
mov
mov
mov
ret
push
sahf
and
pop
mov
lahf
test
ljmp
lock
hlt
decl
sbb
sbb
repz
sbb
adc
xor
ja
cltd
dec
push
bound
mov
cmp
adc
cmp
jge
push
movsb
and
inc
hlt
stos
cmpsl
or
addr16
or
aas
movd
pop
fs
es
push
fidivl
add
call
test
cmp
test
xor
je
movsl
jle
int3
push
jae
ljmp
cmpl
shlb
fiadds
enter
je
sahf
inc
mov
js
arpl
imul
xchg
sub
pop
add
mov
xchg
adc
cmpsb
ljmp
pop
ret
jns
lods
fidivs
dec
shr
fwait
gs
push
jp
data16
xchg
add
mov
mov
mov
pop
adcl
inc
mov
mov
cmp
decl
or
repz
dec
cmp
out
mov
mov
cmp
sahf
sarb
incl
mov
bound
call
iret
ret
inc
gs
sub
incl
mov
out
or
or
divb
cmp
dec
adc
cltd
sbb
ja
incl
popa
stos
sbb
aam
frstor
leave
outsl
xlat
push
inc
popf
loope
repz
inc
call
in
mov
inc
movsl
incl
pop
sub
call
sti
cmpsb
lret
and
jg
icebp
in
fimull
cli
sub
inc
shrl
aaa
inc
add
shrb
ljmp
repnz
or
and
les
add
popa
movsb
cmp
pop
mov
or
jg
cmp
rorb
and
mov
out
adc
stos
jb
lcall
call
dec
adc
outsl
sub
maxps
push
fidivs
xchg
push
push
scas
pop
xor
fldl
lret
arpl
jg
sub
aad
imul
ds
daa
dec
enter
call
or
xchg
mov
mov
xchg
push
incl
sahf
sti
cli
jl
mov
pushl
adc
dec
push
inc
inc
das
pop
inc
mov
mov
sub
pop
mov
cmp
movl
inc
mov
cmp
pop
cltd
jb
nop
popf
adc
inc
sar
incl
push
fistl
mov
sbb
push
or
clc
loop
jmp
das
sbb
jg
insb
dec
movsb
xchg
lahf
lret
mov
das
or
xor
lock
scas
mov
mov
cltd
and
sbbb
scas
std
ret
mov
jmp
jl
fdivs
popa
sbbb
push
cmpsb
sub
mov
inc
push
jle
pop
cld
add
out
mov
rorb
jg
mov
fnstcw
or
data16
mov
or
out
lods
cwtl
mov
incl
mov
mov
add
out
mov
push
lcall
mov
fs
and
pop
xor
test
jb
pop
or
andl
xchg
rol
xchg
inc
icebp
aaa
or
addl
adc
inc
mov
sbb
scas
call
enter
das
call
jo
sbb
mov
inc
or
aaa
push
ret
ret
push
sub
add
cld
sar
incl
stos
orl
mov
push
sbb
adc
sti
popf
or
pusha
mov
lods
xor
inc
outsl
outsl
psubsw
aas
sub
test
jmp
popf
sub
ret
shll
das
cli
mov
push
sub
sbb
mov
sbb
das
clc
jns
pop
add
movsl
xchg
jae
jbe
mov
repz
mov
dec
pop
xor
stos
add
jle
xchg
jp
ret
lock
mov
sub
or
ljmp
inc
mov
imul
cmp
pop
sarb
sbb
fdivrl
aam
jbe
inc
jp
mov
push
push
pmulhw
xor
ret
ljmp
sbb
cmp
add
add
jmp
ss
dec
push
dec
std
sub
pushl
je
cs
pop
lods
or
js
stos
shl
aas
jno
push
pop
rolb
lock
dec
mov
dec
push
pop
mov
cmp
sbb
cli
push
fbld
sub
incl
xor
jp
test
pop
xor
sub
je
cmpb
in
jno
ljmp
loopne
push
mov
loope
cmp
outsl
fdivp
push
sar
ror
sub
lcall
imul
push
mov
inc
inc
insb
ljmp
cmp
fdivrs
cwtl
jo
ljmp
loope
pop
adc
mov
mov
push
push
jecxz
sub
or
mov
adc
movsl
fnstenv
sub
enter
adc
lret
push
dec
or
sub
inc
xor
jge
push
mov
in
and
sub
pushf
dec
mov
pusha
gs
and
or
lea
jns
push
lret
int3
orb
out
adc
cmpsb
iret
int3
cltd
add
jle
cmp
hlt
lcall
nop
test
mov
sti
insb
stos
daa
jle
adc
dec
imul
stos
into
mov
scas
and
repnz
adc
mov
push
leave
mov
lcall
adc
or
xchg
dec
and
mov
add
scas
or
pushf
rclb
jmp
dec
pop
jbe
mov
sub
pop
das
lret
imul
sbb
or
sbb
jo
shrl
cmp
mov
fstps
ljmp
std
lods
mov
jnp
mov
inc
outsl
xchg
in
push
outsb
movsb
and
and
sub
mov
xchg
mov
mov
notl
mov
adc
xchg
push
pop
mov
pop
xchg
lds
cmp
inc
clc
mov
imul
fimuls
xchg
and
mov
andb
sbb
inc
sub
decl
pop
adc
pop
daa
jl
loopne
push
cs
mov
xchg
inc
cmp
decl
scas
insb
cmp
push
and
push
cmp
push
popf
mov
fnstenv
inc
repz
stos
adc
cmovle
mov
lods
mov
pushf
mov
push
jmp
pop
sbb
gs
popa
xor
jno
xor
mov
cmc
out
cld
not
push
iret
icebp
add
clc
test
aad
jge
mov
jg
xchg
sub
xor
push
ljmp
popf
jge
or
enter
outsl
mov
jge
leave
pop
hlt
push
shld
orb
xchg
pop
in
inc
gs
icebp
stos
push
iret
idivl
loope
jno
lock
fistpll
xchg
jmp
inc
adc
push
jnp
add
push
js
arpl
decl
inc
cld
arpl
mov
sub
mov
int
or
repz
lods
and
lock
ljmp
je
mov
xchg
xchg
pop
mov
push
mov
sub
or
and
stc
xchg
je
pop
pushl
adc
sub
out
leave
sti
insl
xor
and
into
ja
jbe
decl
lock
xchg
daa
and
jb
stos
je
cmpsl
ja
out
xchg
xchg
xor
sti
inc
mov
loop
in
pushf
sbb
sbb
jle
int
subb
pop
jns
aam
mov
lret
lcall
xchg
mov
dec
inc
mov
sub
lret
test
ljmp
pushf
xchg
mov
loope
lds
movsb
mov
xor
nop
cmpsb
sub
add
push
fcomip
fxch
push
sub
push
push
in
insb
imul
ficompl
incl
outsl
popl
xchg
ds
or
inc
inc
pushf
mov
sbb
fisttps
repnz
lock
lds
sub
int
xor
inc
jmp
or
out
cltd
inc
and
stc
mov
std
xchg
test
or
inc
imul
insl
inc
jg
les
sub
mov
pop
jp
arpl
mov
mov
cli
sub
incl
sbb
jnp
fldln2
inc
add
jbe
and
lock
mov
scas
and
push
lods
or
jmp
popf
mov
ja
lret
stos
fs
call
cmpsb
das
mov
push
div
sbb
push
lods
dec
outsl
outsb
cmp
sahf
mov
jns
inc
or
xchg
shrl
sbb
loope
cs
xchg
call
push
xor
pop
push
arpl
insb
pop
ljmp
stos
push
xchg
xor
push
adc
mov
mov
fldl
push
push
inc
ljmp
je
jo
xchg
in
cmc
lret
adc
jg
lcall
repz
xor
sbb
ds
in
loop
jmp
xor
jecxz
orb
lea
push
repnz
push
xor
mov
daa
ret
shl
aaa
mov
add
das
cli
jmp
jbe
mov
decb
push
pop
dec
push
jecxz
sarl
popf
add
call
sbb
ja
insl
add
jl
xor
mov
xor
popa
add
xor
fdiv
lcall
cli
hlt
cmpsb
mov
out
flds
xchg
sub
and
call
out
push
bound
sarl
jl
inc
pusha
or
add
lcall
cmp
leave
mov
xor
add
shlb
add
decl
dec
movsb
xchg
test
inc
je
mov
sub
mov
imul
fwait
pop
xor
mov
mov
push
int3
adc
lcall
sbb
rolb
jmp
mov
in
stos
clc
dec
mov
scas
and
lcall
or
std
ja
and
adc
fimuls
sbbb
or
and
or
daa
testl
lea
pop
popf
mov
or
mov
cltd
push
push
adc
push
fistps
fs
sbbl
dec
mov
lcall
cld
adc
movsl
les
jl
loop,pt
out
inc
xchg
mov
dec
sbb
lock
incl
ret
hlt
mov
not
jg
push
dec
jno
loopne
movsb
xor
and
loopne
ljmp
mov
js
mov
sub
fst
aaa
mov
lock
inc
mov
lcall
lahf
shrb
rclb
in
dec
leave
dec
fisubl
sbb
aaa
push
pushl
inc
aad
mov
daa
pop
dec
aaa
sub
jne
dec
imul
scas
shr
adc
repz
mov
xor
mov
lods
stos
jae
inc
incl
add
fdivrl
leave
xchg
arpl
shrb
adc
mov
jl
jg
dec
lahf
lods
lods
sub
ds
inc
dec
xchg
jo
xchg
fstps
and
vmovaps
idiv
mov
sbb
test
adc
into
setle
icebp
xchg
rcrl
mov
lcall
ja
sarl
inc
jne
mov
inc
sub
fstpl
call
cmp
ja
adc
jecxz
xor
test
mov
shll
decl
and
fists
mov
repz
adc
fisttps
nop
cmc
lock
dec
and
testb
mov
icebp
push
repz
stc
or
sub
jle
lock
outsl
arpl
ret
mov
outsb
arpl
cmc
push
inc
mov
add
in
in
jg
push
int
lods
shld
imul
mov
xor
xor
out
clc
jmp
jnp
out
cld
push
int
sub
ret
out
sub
pop
mov
incl
pop
xchg
addr16
xor
nop
scas
pop
inc
fistps
jmpw
xchg
iret
incl
add
clc
lret
roll
and
scas
inc
cld
pop
into
rcll
sti
fists
leave
ljmp
pop
mov
lock
hlt
ret
dec
xor
dec
les
pop
cld
je
rorl
xchg
fstl
leave
push
xchg
jns
push
cmp
xor
dec
nop
inc
lock
inc
xor
mov
inc
mov
push
lods
lcall
rolb
fidivrs
out
enter
dec
in
fwait
dec
sbb
call
dec
sub
pop
mov
mov
fwait
xor
cli
js
inc
cld
mov
add
xchg
lea
int
mov
dec
adc
nop
xchg
lcall
mov
lcall
mov
adc
das
lods
les
lods
mov
fcomip
loopne
cmp
inc
fs
jnp
mov
mull
jge
cltd
pusha
push
push
je
push
neg
out
push
orl
xor
daa
cld
in
pop
mov
in
xchg
lods
out
imul
pop
cbtw
push
mov
call
mov
shlb
or
out
push
adc
pop
scas
add
sub
push
mov
pushl
cld
in
jne
nop
mov
or
ret
cmp
rorb
popa
testb
incl
rolb
push
push
add
call
cwtl
sub
dec
jns
inc
lret
mov
mov
faddl
jl
pop
clc
xor
rdpmc
lret
mov
jbe
mov
pop
idivl
call
cmpl
push
scas
aam
fcmovnbe
jno
push
or
push
rcl
or
test
jmp
and
xor
sbb
pop
ljmp
xlat
jecxz
lahf
push
clc
loop
adc
sti
ljmp
adc
dec
jb
inc
dec
cmp
or
daa
fldcw
inc
jg
iret
or
gs
cmp
dec
xchg
pop
fstps
fisubl
mov
in
test
jno
cltd
lret
xor
movsb
xor
test
decl
loopne
insl
dec
jne
mov
dec
dec
out
iret
popf
ds
adc
jg
mov
cmp
adc
repz
fisubs
sub
pop
pop
pop
xchg
je
test
xchg
add
into
repnz
mov
mov
cmc
push
stos
mov
lcall
mov
cmp
cmp
xor
add
nop
ror
incl
cltd
icebp
mov
inc
mov
push
js
aad
xchg
and
cld
imul
inc
ljmp
xchg
jns
out
loopne
inc
out
jno
inc
jl
out
jbe
inc
sub
dec
and
sti
pop
mov
add
sbb
out
nop
push
test
sbb
inc
or
inc
mov
jg
jecxz
aad
call
push
testb
pop
cs
or
aas
stc
pushf
sbb
cld
mov
ljmp
mov
mov
pop
faddp
dec
jp
jo
decl
bnd
lcall
popa
xchg
and
xchg
mov
dec
sbb
jp
std
xlat
test
mov
imul
and
mov
in
cs
lcall
cmp
push
insb
in
aad
js
sbb
xchg
mov
cwtl
popf
enter
fcoml
packsswb
loopne
repz
pop
and
dec
pop
icebp
call
pushf
sbb
sub
lcall
sbb
inc
mov
push
jb
pushf
dec
xor
test
movsl
add
je
or
lret
bound
xor
xchg
fnstenv
movsl
adc
in
test
mov
xchg
fwait
mov
add
jle
add
mov
aaa
cld
ficomps
xchg
dec
mov
sahf
mov
fstpt
pop
pushl
mov
xchg
jb
add
push
daa
sub
decl
lock
jno
loop
fnstenv
fldt
mov
or
mov
sub
xchg
and
iret
mov
or
icebp
push
in
xchg
add
push
loopne
test
clc
or
mov
xor
ret
fildll
adc
pushf
out
loop
lcall
adc
or
mov
decl
pop
outsl
xacquire
jge
loopne
dec
mov
les
stos
lods
xor
scas
cli
lahf
jno
dec
fstp
insb
repz
out
xor
xor
pop
jg
outsl
lret
cmp
es
imul
les
pop
std
call
loopne
push
enter
sub
in
pusha
mov
jg
mov
xchg
jae
out
decl
mov
movsl
xchg
xchg
call
xchg
shr
int
lea
fsubp
mov
std
jge
xchg
xor
out
fisttpll
jo
xchg
adc
mov
shll
iret
push
stos
pushl
ljmp
or
andb
cmc
cld
adc
incl
mov
pop
adc
aas
or
mov
push
cmp
jae
aam
cmp
cmp
mov
fmull
mov
mov
call
push
ljmp
dec
mov
mov
push
or
push
cmp
mov
mov
mov
pusha
sbb
and
inc
decl
pop
dec
and
xchg
testl
in
jmp
jne
fistpl
in
mov
sub
sub
and
xchg
cmc
add
xchg
lret
and
jmp
int3
pop
iret
stos
fiadds
and
stos
cmp
in
popf
in
stc
mov
andl
sbb
movsl
stos
xlat
loopne
jg
xchg
stos
push
cltd
pushf
aaa
lcall
shrb
cmc
in
dec
xor
and
mov
movsl
lods
icebp
or
inc
mov
inc
mov
fildll
xlat
imul
ljmp
xchg
cmpsl
out
pop
jmp
in
ror
jne
xchg
loopne
nop
xor
or
movsl
int3
mov
aaa
clc
pop
mov
decl
sti
arpl
push
ficompl
ret
add
lsl
xchg
inc
inc
arpl
lcall
mov
ljmp
add
lcall
mov
jne
pushl
in
xchg
dec
ja
xor
xchg
sarl
into
jge
popf
jns
mov
arpl
call
ds
adc
pop
sub
jmp
mov
popf
in
or
ds
rcr
dec
jmp
and
ljmp
mov
daa
mov
cmp
dec
pop
pop
das
addr16
mov
mov
jp
push
push
inc
xor
test
insb
mov
call
adc
jae
lods
xor
push
jmp
push
jmp
xchg
lea
daa
jb
aas
lods
sub
cmp
bound
adc
xor
sub
sar
pop
add
push
jmp
push
xchg
push
jp
mov
push
jno
popf
movsb
and
add
pusha
push
pop
push
test
push
incl
or
mov
in
enter
jne
push
gs
cmp
loope
cmpsl
pop
faddl
dec
in
cmc
pop
gs
add
push
sub
dec
test
out
mov
xchg
pusha
imul
jp
loope
push
sti
ret
hlt
pop
pop
push
xor
outsb
add
push
filds
jge
dec
mov
fwait
add
ljmp
jae
pop
scas
mov
sbb
ret
loope
into
push
fsubrl
sub
mov
dec
stos
jl
xchg
jg
call
mov
push
andb
cmc
repnz
mov
add
pop
sub
adc
incl
es
lahf
mov
cmp
aam
add
push
iret
push
mov
ljmp
scas
setp
add
cli
mov
or
mov
add
pushl
popf
lret
pop
mov
cmpb
in
das
jne
or
ret
dec
cmp
pop
jmp
aas
rolb
inc
ret
outsl
push
inc
test
jg
ret
cwtl
inc
popa
push
negb
call
pop
add
sub
pop
fisubl
and
out
jge
loopne
call
pop
mov
out
and
pusha
jb
mov
mov
std
sub
test
push
pop
cmp
cli
mov
push
cmp
sbb
inc
ljmp
jg
aas
fisubs
pusha
leave
mov
loop
add
dec
aad
js
rorl
cs
xlat
xchg
in
mov
lret
xchg
and
mov
rorb
repnz
jno
add
sbb
dec
xchg
adc
xor
dec
xor
lea
cld
movsb
adc
jp
jmp
xor
lcall
lcall
out
adc
dec
lcall
ds
push
js
sbb
or
mov
insb
sub
scas
push
icebp
cs
fs
decl
loop
aas
lock
cmp
or
sbbb
jbe
pop
decl
decl
scas
dec
rcl
gs
std
mov
sbb
in
sbb
mov
mov
inc
dec
or
call
aas
movsl
lcall
popa
and
push
loop
inc
dec
cmp
xchg
inc
scas
addr16
pop
cwtl
cmpsl
ficoms
xor
int3
jbe
out
mov
decl
xor
cmp
sub
int3
daa
mov
das
mov
add
lret
fwait
add
stos
ljmp
dec
dec
mov
cld
and
repz
movsl
jge
mov
and
jnp,pn
lcall
repnz
int
jnp
dec
xor
cmp
movsl
jecxz
lea
cmp
pop
test
incl
fdivr
fcmovbe
xor
mov
sarl
cltd
jnp
adc
mov
mov
ss
pop
cmpsb
ficoml
stc
enter
mov
push
jmp
add
push
inc
insb
orb
ret
adc
das
and
push
and
inc
sub
lds
dec
icebp
cmp
lret
fcmovnb
mov
jo
dec
pop
add
ss
lcall
insb
jle
ret
mov
inc
dec
cmp
sbb
dec
in
jmp
call
and
out
test
inc
test
mov
inc
xchg
xchg
mov
sub
dec
dec
loopne
pop
std
shl
jno
jecxz
or
push
push
pop
sbb
pushf
sub
xchg
inc
mov
out
or
or
incl
aad
sbbl
fisubrs
orl
imul
xor
mov
decl
xchg
shl
icebp
jbe
sub
add
push
outsl
test
in
daa
data16
notl
mov
mov
inc
jne
or
call
mov
mov
xchg
and
aad
inc
bnd
imul
clc
mov
das
ljmp
sub
les
sbb
loopne
mov
xchg
or
mov
add
imul
call
sub
cli
movsl
imull
mov
push
xchg
pop
jmp
neg
mov
fstl
stos
fldl
fildl
adc
iret
movsb
cmp
jg
cmp
hlt
cs
orb
jmp
lock
dec
adc
movsb
inc
popl
mov
pop
stc
insb
jmp
in
xchg
lock
sub
ja
and
xchg
popa
pop
inc
daa
int
adc
lcall
repz
xchg
int3
stos
fsubl
mov
or
call
outsl
cmp
pusha
hlt
or
sub
mov
fildll
shrl
sar
mov
mov
test
sbb
xchg
jne
rcl
jg
cmp
decl
popa
pop
pop
or
push
jb
mov
pop
mov
lcall
das
push
adc
xor
pushf
xor
adc
adc
cmp
xlat
ljmp
inc
repnz
jmp
xchg
jge
addr16
insl
pop
mov
test
test
out
clc
ljmp
adc
fs
add
fs
and
addr16
and
in
push
mulb
les
jo
ret
xchg
xchg
icebp
sbb
inc
fldt
pop
imul
xchg
dec
js
loop
sub
jle
lcall
inc
nop
ret
shlb
xor
sbb
arpl
lea
add
jne
pop
std
dec
sub
sarl
pop
pop
in
add
xorb
cld
decb
cmp
ret
and
cwtl
cwtl
repz
icebp
adc
mov
mov
out
cli
call
call
jnp
in
mov
pop
lret
push
out
jmp
mov
bound
push
mov
sub
and
mov
clc
xchg
xchg
sbb
pop
jmp
stos
cmp
and
sti
sbb
dec
add
mov
pop
cwtl
cmp
loop
call
push
inc
mov
pop
or
and
and
shll
loop
loopne
xchg
clc
dec
outsb
jecxz
mov
scas
insb
loope
iret
stc
add
in
js
pop
xor
mov
ljmp
and
jp
out
rorb
adc
lcall
mov
std
fcomip
ljmp
jge
rcr
xor
mov
push
aaa
dec
cld
or
out
ljmp
jno
fisubl
gs
test
jnp
int
faddl
mov
call
rolb
xchg
and
stos
mov
pop
mov
adc
mov
pushl
pusha
xchg
cltd
aas
out
outsl
jmp
jp
mov
mov
imul
sbb
pushl
arpl
lret
xorb
lret
ja
push
mov
mov
outsl
clc
repnz
repz
add
mov
decb
lcall
pusha
mov
jg
insb
rorb
or
add
dec
jecxz
and
add
mov
imul
sub
ds
mov
shrl
dec
xchg
adc
lcall
aad
and
sbb
pop
cmp
mov
sub
lcall
mov
into
xchg
cmp
cmp
ds
xor
inc
imul
jmp
adc
xchg
xor
scas
jp
aaa
mov
mov
lock
pop
mov
inc
push
and
cmp
fistps
scas
aad
call
aas
dec
xchg
jg
add
mov
push
jae
je
loopne,pn
aam
fwait
cwtl
ja
fldcw
jmp
call
push
xlat
scas
mov
cli
add
addl
ljmp
xchg
jg
cmc
jns
cmpsl
xlat
cmp
jmp
inc
mov
cmpsl
sub
int
dec
cmp
sahf
sbb
and
bound
cmpsl
imul
cwtl
mov
jl
jae
idiv
stos
lcall
cmpsl
jns
sbb
ret
mov
push
xchg
neg
stos
popf
push
pop
js
push
sub
ja
and
iret
jle
in
sub
mov
mov
cld
pop
in
lds
add
loopne
popf
mov
xchg
incl
enter
cmp
popf
sub
cli
popa
or
hlt
sub
int
push
bound
ljmp
clc
ja
push
and
sbb
inc
rcr
scas
in
mov
adc
in
ret
sti
jmp
jmp
ljmp
inc
fmull
xor
outsl
mov
xor
cmp
test
cmc
ljmp
push
aad
fcompl
jg
inc
mov
push
add
add
out
clc
push
cmp
mov
mov
pusha
pop
pushl
push
sub
lds
push
xchg
inc
jle
adc
int
lahf
outsb
stos
fdivp
push
sub
mov
pop
icebp
iret
mov
call
addl
dec
movsb
mov
jb
mov
mov
mov
scas
push
out
lods
call
add
jmp
in
and
aaa
inc
into
dec
mov
mov
lcall
outsl
cli
jle
adc
push
dec
jge
ss
lods
in
push
pushf
and
lahf
sbb
lcall
arpl
nop
mov
outsb
pop
add
push
mov
xchg
xchg
xchg
out
xchg
aaa
jg
fwait
push
es
add
lcall
loope
lds
test
loop
je
add
xor
jp
inc
push
cmp
imul
scas
lret
or
mov
mov
negl
dec
pushl
mov
lds
ret
mov
push
in
cld
push
push
jecxz
stos
hlt
push
lods
xor
call
aaa
push
lea
jg
dec
push
imul
pop
lea
lock
popf
pop
jb
std
adc
dec
repz
leave
mov
add
and
movsl
inc
shlb
shll
mov
adc
cwtl
pop
lcall
xor
xchg
xchg
mov
cld
xchg
push
mov
fcmovnu
scas
imull
imull
jle
stos
lds
mov
lahf
js
ja
mov
fcmove
push
xchg
dec
cwtl
xor
rorl
jg
rcll
test
ja
mov
add
clc
push
jmp
cmp
pop
mov
jne
ljmp
adc
adc
out
mov
push
xor
hlt
imul
ret
jmp
ja
or
and
pop
movsb
cmp
mov
or
ficoml
pop
push
mov
lcall
mov
sub
jmp
lock
movsl
lods
mov
rcrb
lret
mov
jg
cld
or
mov
ret
lds
roll
and
std
sbb
cmp
cli
push
jmp
lock
sub
pop
loope
ret
push
fimull
insl
subb
cld
ljmp
out
xchg
mov
dec
cmc
outsl
movsb
out
push
adc
lcall
xchg
xor
xor
xchg
cmp
ljmp
in
mov
fmulp
fstp
or
scas
jae
mov
sbb
add
call
repz
jne
das
test
pop
rorb
xrelease
cmp
and
pusha
fcomip
jmp
push
mov
das
jmp
and
add
loop
add
mov
pop
pushl
inc
repnz
push
fildl
push
orl
pop
repz
out
fldl
cmp
push
sbb
xor
dec
pop
xchg
mov
mov
mov
decl
lock
clc
or
jb
xor
sbb
cmp
pop
decl
mov
mov
scas
ret
jb
pop
push
mov
xor
cmc
ja
mov
fisubs
pusha
mov
add
xchg
xor
in
popa
pop
or
inc
shrb
jmp
sub
fistl
or
and
mull
push
cmc
insb
mov
dec
outsb
xchg
mov
mov
and
mov
scas
movsl
pop
push
ja
imul
xchg
jg
push
loope
ljmp
aaa
test
lods
rcl
mov
fldt
cmp
outsb
js
mov
pusha
xchg
cmpsl
sub
cld
jnp
arpl
movsl
add
ffree
push
test
in
call
les
dec
xor
popa
or
push
shll
popa
sbb
rep
fwait
mov
cwtl
mov
sub
dec
lret
or
andb
adc
data16
or
das
push
iret
ljmp
cmpl
add
or
repnz
lret
cmc
cmp
jmp
lcall
andl
dec
push
jne
xchg
fmulp
jle
std
daa
fidivs
cld
pushl
jmp
inc
mov
loopne
pop
mov
int3
push
ljmp
shlb
add
fldl
mov
sbb
sbb
cwtl
mov
mov
icebp
stos
int
stos
sahf
dec
sub
js
dec
arpl
dec
mov
sahf
in
imul
mov
fwait
jo
stos
insb
xchg
enter
lock
aaa
and
sbb
mov
dec
pop
fwait
arpl
call
faddl
fcoms
jmp
inc
sbb
cld
sub
nop
out
sub
sub
push
rcll
enter
test
bound
arpl
incl
mov
pusha
in
lea
add
jmp
roll
cmp
mov
or
adc
add
add
inc
cmp
or
test
fildl
or
decl
sub
and
jb
loopne
mov
cmpsb
jg
xor
or
arpl
sbb
mov
int
xor
jne
mov
jmp
xchg
mov
out
leave
xchg
sti
mov
inc
call
mov
test
jg
jbe
sbb
subb
iret
add
decl
push
rcrl
push
xchg
xchg
gs
inc
mov
mov
push
int
repz
mov
sar
stc
adc
js
test
push
rcll
dec
pusha
sub
jmp
out
sub
pop
ljmp
xor
bound
pop
add
cs
add
ret
cmp
incl
clc
imul
es
mov
in
leave
push
sub
aaa
jmp
fistps
orl
push
or
mov
arpl
inc
popf
sarl
or
call
jmp
xchg
adc
pop
add
ja
hlt
push
movsl
mov
cmp
ret
push
lods
aam
inc
mov
inc
mov
bound
jo
imul
jmp
or
cld
mov
mov
adc
lret
push
add
jnp
jae
mov
fsubrl
xorb
shl
fsts
and
outsl
out
xchg
clc
sbb
add
ret
push
xor
lods
pop
ja
fs
out
dec
sub
je
decl
dec
push
mov
clc
sbbl
mov
push
andl
fistl
sbb
outsl
xor
movsl
pop
repz
lahf
add
and
inc
shrb
mov
test
xor
insb
nop
mov
jb
rcll
mov
pop
orb
xor
cmc
push
push
push
sub
push
scas
mov
decl
jno
jg
jns
pusha
in
or
add
outsl
ja
xchg
cld
clc
shlb
add
arpl
inc
cmp
rcll
push
jns
bswap
xorl
ljmp
ficoml
lahf
ret
or
and
jmp
lcall
call
mov
cmc
or
adc
sub
test
gs
adc
pusha
lock
decl
inc
outsl
mov
fstps
insl
fiadds
pop
lods
loope
rcrl
xchg
std
jmp
pop
xor
enter
jo
test
xlat
push
std
push
mov
and
mov
cmpsb
call
dec
shlb
out
iret
popf
dec
xor
dec
mov
ljmp
inc
inc
inc
mov
xchg
mov
mov
arpl
xchg
int
incl
dec
das
lret
and
lcall
call
pop
mov
sbb
mov
cmp
sbb
mov
inc
dec
outsl
mov
out
mov
inc
push
inc
add
test
push
xchg
mov
dec
mov
mov
pop
mov
inc
or
adc
decl
pop
in
mov
mov
sub
sarl
jnp
outsl
xchg
xchg
in
or
mov
jge
inc
pop
xor
xchg
popf
popa
mulb
aam
and
sub
ljmp
in
idivl
outsb
lock
jne
ljmp
inc
mov
aaa
jecxz
pushl
add
nop
int3
icebp
add
movsl
push
cli
shrb
xchg
repnz
xchg
out
decl
in
std
int
out
scas
pop
stc
lret
push
cmp
dec
mov
int3
add
cli
push
pop
jns
mov
test
pop
and
and
lret
push
ljmp
cmp
mov
add
bnd
aaa
xor
into
sti
or
fwait
nop
loop
pushf
xor
jb
inc
call
std
xchg
sbbb
decl
pushl
enter
lods
cmp
adc
fimuls
fidivl
bound
sahf
sub
jmp
dec
push
test
sub
xor
pushf
dec
int3
mov
insb
inc
test
incb
fcomip
lock
idivl
nop
sub
inc
fs
fcomps
jns
jo
decl
lock
test
ljmp
ret
mov
sbb
cmp
ljmp
clc
xchg
movsl
mov
jmp
cmp
aaa
xchg
push
xchg
mulb
or
incl
pop
push
nop
jns
fimull
pop
jno
sub
stc
cmp
loop
ds
add
lods
iret
mov
imul
pop
jmp
sbb
pop
lcall
enter
sbb
push
aad
jae
js
mov
aaa
xchg
lods
and
pushl
jo
test
xor
stos
in
and
ret
xchg
sub
fcmovne
cmpsb
les
push
mov
data16
aaa
cmpsl
add
inc
sub
push
ja
ss
in
sbb
mov
incl
sbb
or
scas
aad
nop
xchg
inc
mov
sbb
jecxz
xchg
inc
in
addl
mov
stos
xor
sbb
out
add
dec
cmp
incl
xor
mov
push
push
xor
jge
sti
je
push
jmp
ds
and
sbb
jg
mov
dec
pop
mov
jl
fiadds
jg
pushl
inc
lret
std
mov
orl
jne
mov
pop
test
adc
fwait
ljmp
shrl
jle
loope
xor
jmp
and
inc
xchg
into
cmp
cs
subb
inc
add
add
mov
fnstsw
sbb
fadd
dec
sub
lods
jecxz
mov
inc
gs
ret
pushl
neg
mov
push
push
add
in
pusha
jecxz
sbb
mov
data16
lcall
shrb
xor
mov
sti
clc
xor
adc
pushf
stos
cltd
jns
call
cmp
clc
call
add
fisttpll
sub
fldl
enter
add
jb
sarb
add
scas
jl
xor
shlb
insb
mov
mov
mov
mov
jne
adc
call
dec
popa
cmc
arpl
shll
mov
xor
cltd
mov
lcall
xchg
loop
shr
jmp
xchg
testl
jns
leave
mov
ret
mov
pop
or
xchg
es
and
lds
in
jmp
lock
push
add
xchg
ja
movsb
repnz
mov
adc
mov
mov
outsb
clc
out
orl
lcall
push
sahf
pop
or
out
fwait
in
cld
jo
pop
aaa
inc
xchg
dec
and
pushf
inc
inc
ljmp
xchg
sbb
pushf
fildl
pop
dec
push
aad
outsl
lahf
and
in
sbb
push
sub
add
cmp
decl
cld
iret
mov
xchg
ljmp
insb
mov
roll
pop
jg
xchg
adc
cwtl
pop
jo
push
add
xchg
test
test
aaa
arpl
cltd
sbb
fists
fdivp
cmp
je
fistl
mov
mov
mov
ss
lret
lret
and
dec
es
int
inc
lahf
sbb
fwait
mov
add
orl
jmp
mov
aas
lea
cmpl
inc
add
pop
xchg
push
add
push
dec
test
and
push
adc
push
jne
and
mov
pop
popf
int
and
out
testl
push
jmp
rcll
jnp
out
ret
fwait
adc
cmp
addr16
icebp
in
lcall
call
and
jne
movsb
lcall
test
add
das
jno
and
rolb
sub
icebp
aas
push
cwtl
xchg
adc
dec
pop
std
pop
fisubs
out
push
or
scas
into
ret
or
out
lock
ljmp
cmp
ficomps
push
rcrl
fldt
mov
pop
pop
adc
test
sub
pusha
xchg
in
push
push
push
xchg
jp
dec
test
xor
out
sbb
or
out
or
mov
cmpsb
ret
lods
movsb
das
es
pushf
fstl
std
stc
sbb
mov
shlb
fbstp
pop
rcrb
cmp
addr16
push
in
mov
data16
and
pushf
xor
in
lcall
stos
daa
and
xchg
outsl
inc
xchg
lock
pop
cwtl
mov
fucomp
and
lds
mov
pop
jno
mov
incl
aaa
pushf
in
mov
lret
mov
lret
cmpsl
dec
mov
push
mov
aas
repnz
and
jae
jne
mov
adc
sti
shl
xor
sahf
inc
cmp
call
lret
jecxz
mov
jae
cli
cmp
mov
cmpsb
bound
xor
jmp
rcll
adc
push
out
sbb
in
xlat
cmp
cltd
test
add
add
pop
pushf
stos
sahf
and
push
jecxz
inc
stc
sub
mov
ljmp
jo
stos
rcrl
jbe
jno
pop
xor
subb
jmp
ljmp
out
xchg
pop
inc
in
xchg
ret
js
inc
std
enter
or
addr16
mov
test
addr16
push
dec
jmp
jecxz
in
daa
xor
mov
iret
adc
push
sub
ret
dec
sbb
ja
pusha
fiadds
das
pushl
pop
movsb
sub
dec
je
xor
or
ret
sbb
and
fbstp
jo
and
mov
sub
ret
cli
xor
and
imul
call
cmp
inc
pop
pop
mov
data16
cli
mov
dec
mov
call
loopew
sub
jbe
imul
movsb
outsl
push
sub
cmp
pop
inc
xchg
clc
push
in
xchg
adc
daa
pushl
pushf
mov
aad
and
aas
mov
jmp
push
fcoms
mov
sub
inc
mov
jno
fsubr
loop
out
int3
mov
mov
in
fsubs
mov
mov
push
pop
imull
fsubl
xchg
out
int
pop
pushl
lods
cld
mov
movsl
movsl
jno
test
scas
int3
jp,pn
jno
pop
inc
sub
jmp
incl
inc
les
cmpsb
lcall
loope
or
xchg
or
mov
stos
std
lods
out
mov
sbb
outsl
mov
aad
pop
sbb
xor
jmp
fwait
mov
jno
imul
sub
sbbb
inc
ljmp
sub
dec
cmp
cmp
inc
cmp
xlat
in
inc
je
loope
pop
aam
outsl
clc
incl
cmp
jno
out
push
imul
adc
cltd
in
fsubr
pop
hlt
fcomip
call
dec
mov
cmp
loop
iret
popf
lcall
cmc
out
or
popf
cmp
jg
test
aam
sub
test
dec
push
push
mov
sub
push
stc
test
mov
mov
stc
push
jg
data16
out
pop
push
lods
push
fs
jg
mov
cli
pushl
xchg
mov
clc
or
xchg
xchg
in
xlat
adc
fs
call
dec
adc
add
jp
pop
add
loop
roll
out
clc
in
xchg
fldcw
notb
cmp
push
jle
push
sub
inc
xlat
call
ret
xchg
lods
mov
cltd
pop
fbstp
mov
ljmp
jmp
push
lcall
cmpsb
xchg
cmp
sahf
mov
lahf
pop
push
addb
lcall
cmp
leave
loop
lods
xor
xchg
jle
shll
sbb
test
and
lcall
xlat
xor
or
nop
jg
push
insl
lret
les
test
das
mov
xorb
into
lahf
cmpsl
int
outsl
cli
fistpl
add
pop
bound
add
in
leave
xlat
xchg
out
add
std
push
popf
add
push
mov
pop
xor
jbe
mov
xor
push
iret
lea
inc
iret
lods
sbb
insl
xor
mov
outsl
mov
aam
pushl
loopne
mov
shrb
adc
into
push
inc
into
sbb
xchg
ljmp
lcall
mov
add
test
lods
mov
outsb
jno
leave
je
mov
add
data16
fucomip
sbb
movsb
fwait
cmp
push
lret
cmp
cld
cmp
cltd
mov
aad
repz
lcall
or
pop
push
adc
outsb
sub
imul
outsl
mov
add
inc
repz
adc
or
inc
pop
gs
xchg
ret
clc
mov
mov
pop
insb
pop
int3
fcomip
pop
inc
mov
jp
add
xlat
and
frstor
sbb
sbb
xor
call
mov
mov
push
test
repnz
imull
cmp
dec
cmc
shr
xchg
push
add
and
cmp
ss
movsl
test
jbe
movups
in
mov
push
lds
sbb
push
movsl
or
repnz
xor
out
mov
pushl
jg
sub
sbb
add
scas
or
imul
cmc
pop
cmp
int3
aaa
imul
out
imul
sti
filds
xchg
xchg
sub
andl
pop
cmp
in
or
mov
dec
inc
mov
xchg
pop
or
sbb
addr16
sarb
jl
adc
push
xchg
nop
jge
add
pop
lods
jge
popa
pop
out
mov
call
bound
imul
outsl
insb
push
dec
addl
mov
fsubs
in
adc
outsl
sub
sub
enter
cltd
jae
adc
adc
lret
dec
dec
daa
shr
dec
cli
incl
cld
sti
fs
jbe
add
nop
int3
sub
inc
stos
fadd
imul
cmpl
mov
pop
shll
aam
negb
outsl
mov
ljmp
add
ret
out
scas
lret
out
add
aam
int3
pop
mov
xor
call
out
pop
or
mov
js
push
inc
pushf
pop
jl
or
pop
in
decl
xchg
xlat
notb
cwtl
sbb
add
jp
call
sub
jg
dec
pop
les
divb
dec
je
fbld
pop
dec
jl
fsubrs
call
movsl
int
mov
adc
and
jbe
push
or
sti
enter
incl
imul
push
mov
sbb
cmpsb
popf
xchg
ss
cwtl
lahf
jne
and
fsts
out
pop
cmp
push
leave
and
out
inc
ljmp
lock
mov
decl
das
mov
mov
clc
xchg
test
xor
dec
mov
adc
imul
mov
fsubs
mov
push
mov
ficompl
jmp
mov
cltd
mov
push
movsb
fs
xor
aas
inc
mov
sub
xchg
je
adc
add
ret
shrb
ljmp
dec
rep
xchg
fidivrl
aaa
into
mov
movsb
ja
out
xchg
std
and
loop
mov
or
ljmp
sbb
add
push
popa
or
mov
scas
lods
sub
sbb
lahf
jmp
adc
pushl
sbbl
sub
and
lahf
sbb
add
pop
sbb
or
adc
incl
mov
add
sbb
hlt
hlt
pop
leave
loopne
leave
roll
or
adc
call
pop
adc
sbb
jmp
mov
or
dec
sbb
push
or
imul
mov
daa
frstor
pop
test
clc
incl
movsb
stc
push
and
xchg
ljmp
sbb
jp
mov
sbb
popf
mov
jg
xchg
jmp
incl
push
push
mov
frstor
shl
mov
jecxz
pop
mov
xchg
mov
mov
incl
pop
sub
adc
hlt
sbb
cmp
cli
fs
testl
pop
adc
out
and
mov
movb
mov
xor
xchg
cld
fcompl
mov
cmpsl
jle
cs
ljmp
xchg
mov
push
inc
inc
xor
mov
lock
dec
cmp
ljmp
clc
pushl
and
or
jno
or
pusha
mov
test
ljmp
xchg
sahf
imul
and
in
xor
adc
int
jge
mov
dec
jb
clc
mov
ret
pop
decl
xor
xchg
pop
sub
in
into
or
mov
insb
leave
xchg
add
dec
inc
mov
xchg
jns
and
mov
rcrb
sbbl
loop
test
leave
jmp
in
popa
das
addr16
and
ds
sbb
ljmp
dec
pop
jmp
movsb
jg
pop
add
push
fbstp
push
lds
lcall
out
test
in
pop
int
imul
movsl
dec
cld
mov
dec
xor
or
loope
stos
rcpps
xchg
pop
mov
in
pop
mov
mov
call
dec
or
subb
enter
pushf
call
pop
dec
aas
jns
arpl
xor
movsl
mov
pushl
add
xlat
es
testb
out
xchg
inc
das
push
rorb
pop
pop
add
pusha
rcrb
incl
mov
add
cmp
outsl
in
cltd
lret
or
iret
and
cmp
icebp
jns
sti
lcall
test
jle
dec
inc
fsubl
into
jae
jbe
xchg
xor
call
lods
sbb
sarb
xor
and
push
lods
lds
movsb
sub
ljmp
aad
sub
cmp
mov
movsl
jnp
sbb
mov
cld
inc
and
add
lds
cwtl
mov
mov
call
dec
bound
and
mov
int
mov
cmp
sub
lds
ss
mov
mov
jl
dec
xor
ds
ja
or
add
movl
jl
jmp
sub
daa
lods
inc
adc
fisubrs
mov
jg
sbb
inc
cmp
cmpsl
add
in
and
jbe
std
jnp
push
mov
sbb
cmp
jae
inc
popa
add
pop
or
dec
out
daa
arpl
leave
inc
add
or
fs
ljmp
scas
jb
insb
dec
and
imul
cmp
mov
inc
sub
call
lods
out
jbe
jle
add
ret
sbb
push
lods
shlb
nop
adc
mov
adc
add
dec
test
jmp
dec
add
and
decl
sar
sbb
dec
xchg
movsl
cmpsb
outsl
xchg
lcall
lahf
fnstenv
es
pusha
incl
ds
and
test
aaa
xchg
adc
sbb
mov
insb
sarl
jnp
xlat
mov
lods
or
inc
mov
and
xchg
inc
arpl
mov
ljmp
lret
out
loope
pop
and
inc
ret
cmpsb
incl
movzwl
adc
and
sbb
int
pop
addr16
jg
ja
sbb
repz
rclb
sub
jbe
enter
mov
mov
shl
scas
cld
push
cwtl
inc
or
in
clc
es
pop
mov
mov
lret
xchg
js
sbb
arpl
xor
test
arpl
ret
mov
ret
shll
fsubl
push
fbstp
test
pushl
test
inc
or
in
pop
out
fnsave
inc
push
or
mov
incl
jae
cmp
insl
out
les
or
scas
icebp
pop
daa
push
ss
xchg
outsb
mov
mov
inc
push
dec
daa
push
test
aaa
sub
pop
xchg
addl
mov
jo
test
ljmp
adc
xchg
int3
sub
outsl
popa
jp
xor
dec
mov
push
inc
andl
xor
mov
jmp
loope
and
pop
clc
daa
mov
sti
cmpsl
addr16
pop
aam
cld
sbb
test
hlt
call
sbb
shlb
repnz
and
int3
jnp
sti
push
add
pop
push
dec
neg
sub
out
inc
loope
add
and
mov
ljmp
and
int
sahf
or
adc
adc
pop
jl
ficoms
in
sub
fidivl
dec
dec
fdivr
and
jle
xor
xchg
loopne
aas
fs
mov
jp
adc
mov
call
shll
sub
mov
jb
pop
mov
mov
sbb
and
or
adc
push
incl
sbb
or
xchg
scas
dec
bound
push
leave
out
mov
adc
lods
cli
popf
insb
decl
out
mov
mov
leave
test
pop
xchg
cmp
lcall
pop
or
sub
test
dec
inc
push
add
inc
loope
das
inc
jbe
mov
stc
clc
incl
cld
jns
add
inc
xchg
add
push
xlat
int3
jo
sbb
ljmp
jo
sub
adc
outsb
jnp
test
lret
and
dec
push
ret
stc
xchg
and
ret
mov
lcall
lret
jecxz
popf
cs
insb
and
dec
xchg
sub
cmc
outsl
mov
decl
faddl
idivl
rcrl
rol
xchg
sub
repnz
inc
cmp
call
rclb
call
push
cmp
cmp
scas
ficomps
and
loop
decl
pop
addr16
sub
cmp
lods
outsb
jne
das
mov
andb
lock
cmpsl
js
cli
lcall
and
bound
add
pop
pop
fildll
sbb
arpl
jne
lcall
cmp
or
mov
ret
std
xchg
jb
mov
sbb
js
fmul
mov
shrb
push
data16
stos
leave
xor
scas
gs
gs
int3
dec
mov
adc
ljmp
mov
push
dec
xor
jnp
stc
dec
ss
and
ljmp
dec
jmp
mov
ret
push
icebp
cmp
movsl
sti
inc
mov
mov
incl
sarb
stc
fbld
out
outsb
and
xchg
hlt
fbstp
jb
call
popa
test
mov
pop
jl
insl
inc
pop
stos
call
jp
lds
or
repz
test
dec
push
aas
out
aam
rcrl
jnp
cmp
stos
push
mov
cltd
sub
and
dec
negl
dec
rclb
loopne
insb
int3
fistps
mov
incl
xchg
add
dec
pop
sub
jl
pop
mov
jg
cltd
pop
dec
xchg
jnp,pn
pop
inc
lods
dec
icebp
push
incl
call
lret
cmp
inc
aam
sahf
mov
insb
arpl
and
mov
and
mov
pop
lea
push
stc
adc
or
fadd
sbb
mov
in
pop
sbb
adc
or
jge
imul
xchg
jb
sahf
mov
lcall
mov
test
scas
into
gs
outsb
fs
addr16
jb
hlt
and
mov
incl
sbb
cltd
shl
divps
scas
lahf
fsubrl
cwtl
out
call
stc
lahf
shrl
add
bound
test
push
xorl
std
dec
fstl
pushf
push
jmp
ljmp
push
sbb
adc
sbb
xor
aam
and
js
jmp
call
mov
pop
xchg
mov
sub
mov
dec
pop
test
pushw
xchg
lahf
sub
inc
adc
or
jl
jne
push
inc
xchg
das
inc
int3
inc
jecxz
scas
push
cmp
jmp
mov
push
fmul
cmp
popf
mov
mov
mov
add
loopne
mov
cmp
and
loopne
cmp
jmp
leave
pop
in
insb
mov
sub
sti
xchg
push
mov
adc
cmp
pop
and
decl
imul
sti
out
push
aad
aas
call
push
jge
loopne
outsl
loopne
mov
mov
lret
sbb
std
inc
adc
lods
cld
lcall
aaa
pop
mov
xor
out
scas
adc
sarl
xor
pop
loope
aam
dec
jbe
mov
lahf
and
inc
scas
test
pop
xor
xor
add
aad
icebp
cld
jns
pop
test
popa
sub
adc
pop
call
sbb
fcmovnb
pop
inc
enter
mov
aaa
dec
and
dec
pop
and
xor
adc
ret
dec
or
xlat
repnz
adcb
mov
dec
and
aas
mov
fsts
lahf
add
idivl
push
push
fisttpll
fdecstp
out
add
imul
and
fmul
je
adc
or
arpl
dec
dec
fsubrl
xchg
repz
inc
push
addr16
pop
sub
incl
test
cmp
jmp
pop
imul
lcall
jle
dec
cmc
jns
repz
scas
pop
add
mov
inc
xchg
movsl
mov
sar
pushl
mov
and
out
das
mov
daa
sub
les
cmp
jg
sbbb
pop
lahf
jne
push
add
mov
or
lea
ret
pop
cltd
or
mov
in
inc
fs
test
sub
call
movsl
dec
js
out
inc
and
jecxz
test
or
out
cmp
bound
or
jg
js
movsb
add
dec
or
and
pop
jg
loope
push
es
clc
lods
lds
jg
lcall
in
mov
hlt
pop
xchg
mov
add
pop
add
mov
call
xor
popf
inc
popf
mov
in
fstp
jae
pop
outsl
int3
inc
xchg
xchg
ret
cltd
dec
inc
fwait
iret
jecxz
ljmp
incb
xor
inc
inc
pop
mov
icebp
xor
mov
xchg
fcomip
lcall
or
push
push
ret
lock
and
add
icebp
inc
pop
cmp
pushf
nop
loopne
stos
xrelease
mov
lods
and
lret
enter
mov
call
neg
cmp
lods
in
sbb
sub
sahf
cmc
sahf
pop
sub
fcomps
lcall
in
aas
test
push
or
mov
sbb
mov
lcall
add
ret
sbb
ljmp
pushf
push
adc
sahf
dec
loop
mov
jge
push
je
pusha
lds
mov
jmp
arpl
xor
call
inc
clc
mov
in
add
dec
xor
and
push
test
pushl
jmp
jecxz
sbb
aad
scas
movsb
andb
mov
test
jle
xchg
adc
or
mul
les
out
popf
and
jmp
ljmp
jo
pop
push
into
pop
add
test
out
cmp
mov
pop
ja
data16
call
pop
jge
insb
inc
add
loop
popf
xor
in
test
arpl
ja
push
or
call
call
inc
and
xchg
jle
mov
add
mov
xlat
loopne
push
cli
push
mov
incl
mov
fcmovb
jp
and
insl
das
out
hlt
incl
insl
in
fisubl
ret
out
inc
adc
sbbb
hlt
ret
fcomps
cmp
push
adc
decl
das
imul
cmp
icebp
lret
mov
jo
ja
cs
xchg
decl
mov
mov
and
push
lds
mov
push
mov
xor
call
and
das
dec
inc
movsl
aad
fcmovb
sbb
ret
testb
jmp
mov
notb
shrl
mov
xchg
lcall
divl
pop
std
push
nop
test
nop
jp
call
lds
pushf
fsubr
mov
push
mov
test
xor
xchg
pop
sahf
sbb
ljmp
mov
testl
mov
lods
add
cmp
mov
iret
sti
ljmp
lods
bound
mov
mov
nop
stc
cwtl
xchg
and
xor
jmp
mov
sbb
jmp
lret
mov
dec
lret
call
xchg
fistps
lahf
sti
popa
xchg
insb
ss
cmpsl
in
add
jns
push
push
sub
push
mov
xor
bound
fistl
xchg
mov
popa
xlat
inc
jae
arpl
sub
repnz
lcall
or
mov
int3
fidivs
loopne
xchg
xchg
cmp
daa
addr16
call
sub
fsubrs
ret
fimuls
lods
ss
mov
aam
sub
scas
push
fwait
xchg
std
sahf
push
test
lods
subl
in
in
mov
movsl
xor
in
fmul
pop
xor
inc
pop
push
enter
lahf
popl
xor
call
stos
add
mov
pop
push
ljmp
push
sti
int3
mov
pop
jo
ljmp
lea
adc
popf
sub
mov
imul
add
movsb
xor
add
fcmove
ljmp
movsb
and
lds
ds
fldcw
or
daa
or
mov
jmp
or
lret
sub
cs
and
and
aas
xor
loopne
fimuls
push
cmp
cmp
cmp
fwait
notl
jg
jmp
mov
aad
cmp
jo
popa
and
stos
mov
mov
cmp
call
mov
mov
and
dec
in
fcoml
jne
cwtl
fs
incl
decl
and
or
push
and
inc
ret
aad
lcall
and
xchg
out
fldcw
jge
sub
add
fwait
mov
call
insb
cmc
or
or
adc
xlat
adc
es
cmp
add
dec
dec
mov
mov
decb
pop
lret
into
push
pop
int3
jp
push
lods
xchg
outsb
fildll
incl
mov
or
push
out
fabs
jo
clc
gs
adc
fwait
div
mov
inc
insb
cli
decl
out
lret
lahf
mov
lret
fidivs
sbb
pop
insb
into
lock
add
out
movsl
mov
push
mov
fnstsw
push
in
inc
pop
jl
lcall
add
cltd
popf
push
mov
xchg
push
adc
xchg
in
add
push
sbb
or
pop
call
ljmp
cmp
ja
out
cmp
adc
in
pop
dec
aas
sub
inc
push
push
addr16
fmulp
ss
push
dec
mov
loope
mov
add
jmp
jmp
pop
pusha
js
popf
push
jmp
push
sbb
insl
test
jg
xor
shlb
shl
jmp
mov
ljmp
orl
cs
xor
cltd
mov
pop
cld
ret
mov
jmp
xor
lock
fildl
add
ja
rcl
sbb
mov
cmp
incl
inc
cld
repz
mov
das
and
mov
inc
les
hlt
imul
jg
pusha
jp
stos
or
out
subb
xchg
and
cli
sbb
adc
mov
incl
jl
inc
push
mov
mov
cmc
add
gs
cltd
cwtl
adc
out
stos
mov
std
mov
jmp
jecxz
adc
cmc
sbb
and
jne
mov
daa
jo
cs
stos
dec
push
loop
mov
enter
bound
inc
sbb
jns
das
call
sub
jg
daa
loopne
shll
js
jbe
or
fwait
jge
pop
ljmp
sub
sub
orl
sbb
aas
arpl
push
cmpb
adc
sarb
pop
cmpsl
enter
lahf
xor
inc
or
je
adc
cmp
jg
xor
inc
mov
pop
adc
subl
adc
out
or
cmpsb
cmp
xor
pushl
shlb
ret
ljmp
push
fdivs
adcb
xor
push
or
mov
cs
andb
push
or
mov
jp
loope
mov
pop
push
mov
es
popf
or
fnsave
ss
mov
fcos
out
cli
loopne
and
pop
jl
cs
jns
add
ret
fs
ljmp
incb
mov
mov
je
mov
movsb
insb
pop
xor
jmp
or
push
jge
xchg
mov
mov
out
aam
ret
or
xor
pop
icebp
call
push
js
mov
rcl
int3
lret
imul
xor
in
js
shlb
jmp
pop
push
stos
pushw
xor
imul
sbb
pop
idiv
push
inc
xor
cmp
add
popf
out
push
dec
sub
subb
nop
jmp
pop
loope
push
sar
ljmp
pop
pop
adc
pop
scas
add
mov
jnp
int
cs
jg
and
nop
nop
insl
scas
daa
dec
fidivs
add
test
rorl
fbstp
enter
fidivrl
pushl
mov
sub
movsl
cltd
or
jo
lret
inc
ret
fimuls
ljmp
fs
out
les
mov
fcoms
xlat
or
stc
xlat
add
inc
sbb
add
sbb
inc
xor
mov
mov
mov
and
fldenv
cmp
inc
jp
gs
call
mov
nop
cmpsl
inc
mov
dec
int3
nop
sub
cmp
and
ljmp
xchg
test
clc
push
or
ret
testl
mov
daa
mov
jg
jb
pusha
cmpsb
cwtl
adc
inc
aas
rcl
std
dec
jl
rcl
pop
in
int
push
xor
ret
sahf
ljmp
shlb
jbe
inc
into
and
cmp
insl
leave
test
daa
lret
incl
push
inc
mov
sub
mov
aad
mov
xchg
sub
and
decl
je
cmpb
and
mov
mov
rolb
bound
adc
inc
mov
iret
mov
inc
pop
cmc
pushf
mov
das
mov
cmpb
roll
cli
arpl
inc
pop
sbb
dec
sub
sbb
cmp
add
addr16
jmp
push
lcall
push
insl
xchg
push
jmp
lock
aas
mov
dec
bound
ret
pop
int3
or
xchg
mov
sbb
cmc
out
cli
jmp
pop
push
leave
mov
adc
or
xchg
lcall
aas
lods
hlt
mov
inc
addl
shlb
in
sub
call
dec
ret
jmp
data16
cli
ljmp
dec
lret
pusha
and
xchg
jmp
mov
insl
shrl
incl
inc
loop
scas
jle
adc
add
xchg
mov
jnp
repz
dec
sahf
lcall
push
jmp
icebp
and
xlat
and
cwtl
xchg
scas
ret
pop
std
leave
leave
dec
lea
je
pushl
outsl
push
lds
loop
and
fildll
jl
add
int3
ds
jbe
mov
decl
and
divl
std
xchg
outsl
adc
sub
sbb
stc
push
mov
ret
incl
sbb
cmc
ja
fwait
stos
stos
inc
inc
shlb
out
cld
cmp
fsubl
mov
outsl
cli
lcall
xchg
sbb
adc
cmpxchg
nop
xor
pushl
int3
insl
cmp
mov
aaa
loope
sbb
bound
xchg
iret
mov
icebp
cwtl
lea
sbb
push
cltd
pop
mov
dec
sbb
lahf
ret
es
enter
mov
push
stc
repz
jmp
in
xchg
adc
xor
dec
adc
faddl
and
test
mov
adc
jge
xor
mov
inc
lods
adc
movsb
lahf
cmpsl
jbe
cltd
pop
loop
call
loope
jge
ret
test
int
shrb
outsl
adc
pop
cmpsb
lret
adc
jmp
enter
imul
cmp
filds
push
loope
dec
ljmp
push
inc
imul
mov
insl
mov
mov
mull
call
adc
pop
dec
mov
insb
or
and
in
mov
popf
push
pushl
mov
and
into
nop
jecxz
and
sti
pop
incl
ljmp
xchg
int3
jle
mov
mov
and
lcall
cwtl
jnp
push
sub
sub
loope
or
push
fnop
adc
lcall
clc
notb
out
xchg
adc
les
fisttps
mov
adc
stos
fmull
les
stos
push
mov
xchg
repz
sbb
insb
decl
in
jle
push
xchg
lahf
dec
adc
add
jp
sub
sub
scas
xor
cmpsl
or
xchg
pop
push
addb
cli
fstl
mov
cwtl
adc
es
push
jns
xchg
or
incl
sbb
mov
pop
scas
xor
pop
adc
bound
inc
mov
add
push
decl
insb
ret
ficompl
je
in
jnp
idiv
cmp
int3
push
dec
hlt
mov
mov
inc
lcall
dec
popa
enter
push
xor
lcall
inc
mov
inc
popa
cltd
sub
ljmp
ret
ret
dec
clc
shlb
mov
lods
in
cmc
sbb
or
jnp
decl
inc
xor
gs
mov
es
repnz
pop
jnp
stc
aam
les
ror
mov
or
shlb
shr
repnz
and
data16
adc
inc
call
pop
fdiv
push
mov
sar
das
notl
imull
shrb
mov
add
sbb
xchg
xor
pusha
movsl
cmp
and
inc
and
repz
ljmp
jne
das
mov
sub
mov
adc
cmp
and
roll
sub
je
pop
aas
fdivrp
jb
call
mov
fldt
aas
or
cli
lods
pop
or
pop
cmpl
mov
out
or
push
or
mov
xor
and
sub
cmpsl
inc
stos
call
push
push
lret
arpl
iret
scas
pop
fldl
sbb
push
insl
push
pop
popa
push
sub
decl
mov
add
push
dec
and
pop
sbb
call
fnstenv
iret
push
pop
rcl
or
jno
nop
and
test
scas
adc
push
sub
lods
ljmp
push
outsl
and
aaa
xchg
push
sub
repz
pushl
mov
fldt
mov
lods
sbb
roll
xor
lcall
jb
test
idivb
adc
imul
ret
out
mov
das
movsl
cltd
mov
adc
outsb
mov
inc
les
fsubl
xchg
lcall
xor
add
push
mov
inc
xor
sbb
ljmp
sbb
push
adc
pushf
xor
cld
jl
mov
xor
or
jg
incl
ss
cs
jle
mov
fdiv
inc
cld
mov
mov
add
pushl
stos
adc
mov
into
xchg
mov
jl
cli
aad
lea
addr16
sub
incl
sub
jge
addr16
lea
dec
enter
xchg
sbb
sub
push
sbb
dec
popa
jns
sarb
pop
jae
jbe
jp
test
jmp
fiaddl
icebp
adc
lcall
aad
mov
dec
and
dec
jno
push
imul
pop
mov
inc
jmp
jg
push
adc
stc
hlt
xchg
clc
xchg
js
sbb
or
adc
test
call
adc
rorb
cld
dec
pop
shll
add
lock
xchg
icebp
xchg
das
je
lds
and
jmp
jmp
outsb
jp
gs
in
xor
imul
push
into
mov
scas
xchg
insl
mov
dec
add
imul
pop
cmp
das
ja
cli
sti
jecxz
stos
inc
jge
fdivrp
pop
icebp
add
insl
mov
or
bound
pop
cltd
loop
movsb
stos
popa
movsb
xor
push
idivl
sub
inc
xchg
pop
sarb
cmp
cld
fcoms
and
push
sbb
cmpsb
sbb
add
xchg
mov
decl
jb
pop
mov
sarl
push
data16
adc
xchg
push
cld
cmpsb
call
adc
into
and
mov
ficoml
mov
jmp
mov
mov
outsb
aaa
pop
loope
test
rcr
dec
cmc
dec
xchg
lods
lret
fcomip
mov
stos
pop
mov
mov
nop
jne
test
push
hlt
mov
xchg
mov
jmp
in
push
and
cmpb
xlat
out
test
pop
inc
leave
push
mov
add
jmp
sarl
xor
inc
dec
cmp
fstl
xchg
lock
scas
jno
lret
lea
push
popa
push
rcll
jle
arpl
decb
in
sub
sti
cmpb
outsl
outsl
int
divb
sbb
sti
insl
je
fiaddl
incl
or
ret
mov
lahf
test
lods
imul
cltd
cmp
jle
add
adc
sub
ljmp
cmp
mov
js
ljmp
fdivl
lcall
mov
xor
pop
sbb
adc
mov
sbb
jl
and
add
popf
jg
mov
decl
sbb
xchg
and
repz
cli
jge
ss
loopne
incl
fsubrs
mov
in
call
jno
mov
dec
pop
in
ljmp
sar
pop
les
and
sub
cwtl
pop
jb
pop
adc
incl
mov
mov
aaa
fwait
out
dec
inc
cld
sbb
test
fdivs
repnz
shrl
mov
sbb
push
out
mov
scas
xchg
pop
jp
aam
push
pushl
icebp
fstpl
cld
push
mov
jnp
in
movsb
cmp
pop
and
fisubrs
faddl
in
jae
pop
add
ficoml
adc
mov
jmp
or
decl
cwtl
add
addr16
push
cmp
push
dec
dec
in
add
lcall
es
ja
popa
mov
insb
sub
ret
ljmp
incl
dec
pop
fbstp
daa
mov
ljmp
std
mov
decl
sbb
dec
mov
adc
imul
bound
addb
or
push
test
jmp
push
mov
icebp
inc
cmpsb
test
inc
xchg
sti
and
pop
or
lcall
ljmp
jb
mov
xor
faddp
add
cmp
pop
call
push
mov
mov
jp
sub
push
mov
push
addr16
cmp
add
test
aam
xchg
push
cmp
xchg
popa
sti
call
jae
inc
jmp
mov
add
push
sbb
jno
xchg
aas
mov
das
dec
sub
mov
gs
xor
or
push
js
push
in
cmp
xchg
inc
jo
add
mov
int
fisubrl
imul
addr16
mov
cmp
dec
cli
push
and
mov
or
out
lahf
adc
mov
call
xchg
test
repz
mov
and
push
fcmovb
mov
mov
inc
jge
xor
inc
pop
pushf
jne
add
negb
mov
subb
mov
cs
decl
pushl
stos
mov
xchg
cmp
fldl
es
mov
fcmovb
inc
je
and
mov
jmp
subl
jl
pop
add
pushl
dec
out
aam
lds
inc
orl
adc
pushf
cmpsl
adc
mov
sub
decl
sub
and
add
cmp
mov
adc
add
sti
scas
cs
mov
adc
dec
xchg
fcompp
std
cmp
imul
or
add
sbb
adc
incl
and
cmp
nop
insl
and
inc
xchg
pop
jmp
xor
addr16
adc
xor
mov
repz
mov
push
rcrb
jg
fs
pop
or
out
mov
xchg
cmp
xor
call
cmp
lcall
push
lods
mov
in
xchg
enter
mov
mov
lcall
repz
lahf
into
repz
lock
mov
pushf
test
popa
int
xlat
adc
jmp
loope
xlat
push
lods
mov
jne
dec
lret
out
std
jg
push
leave
pushl
pop
hlt
insb
push
insl
pusha
mov
cmpsb
lea
jl
jae
xor
mov
leave
mov
push
outsl
mov
and
push
in
mov
sbb
xchg
dec
mov
es
jae
sbb
cmp
fs
subb
test
push
mov
loopne
xor
fisubrl
adcl
ficomps
add
ds
cmp
mov
scas
sti
icebp
lret
incl
add
and
in
scas
inc
jno
dec
sub
cmp
mov
lcall
mov
push
pop
test
arpl
fdivs
mov
call
jo
jae
xlat
or
mov
pop
loop
divps
dec
lcall
inc
xor
scas
dec
jmp
xchg
test
and
pop
addr16
es
mov
popa
jmp
movsb
outsb
arpl
xchg
bound
lods
xor
sbb
or
jmp
ljmp
push
cld
ljmp
pop
or
sahf
repz
mov
aaa
ret
and
push
into
fsts
scas
cmpl
decl
mov
xchg
js
sbb
xchg
xor
fiaddl
mov
shll
loopne
decb
or
imulb
adc
stos
adc
mov
mov
xor
ds
mov
ljmp
jo
mov
mov
sbb
jmp
call
clc
out
mov
ret
add
mov
int
fnstsw
add
jecxz
insb
push
push
push
mov
ljmp
jp
lea
test
and
fs
push
leave
mov
dec
dec
add
inc
cmpsb
call
xchg
add
sub
dec
ficompl
aaa
add
inc
sub
insl
pop
mov
push
leave
call
mov
arpl
mov
pusha
sahf
adcl
mov
fldcw
xlat
ret
xor
mov
data16
xchg
inc
out
pushl
dec
and
shrb
mov
lock
popf
loope
xchg
fcompl
mov
aas
fbstp
lcall
leave
or
jge
jo
push
es
iret
aam
hlt
adc
mov
subb
lds
in
leave
popa
es
jmp
decl
testl
loop
pop
lcall
std
in
ds
push
jge
xor
fst
sbb
in
lahf
ret
int3
inc
lahf
lds
lret
lock
lret
push
xchg
fistps
push
rcll
call
std
cmp
add
push
pop
cmp
fwait
hlt
fs
adcb
add
pop
in
and
push
lods
push
pushw
shll
lcall
mov
xlat
and
mov
rorb
mov
jns
pushl
adc
jne
dec
int
sbb
test
mov
dec
inc
pop
add
popa
nop
imul
decl
cli
add
loop
inc
arpl
sarb
dec
jb
jmp
imul
rcrl
jmp
sti
enter
fiadds
aas
testb
lahf
lods
repz
lock
ret
nop
lcall
push
ljmp
sub
jnp
and
mov
outsl
incl
pop
fsqrt
sbbb
dec
inc
loopw
loopne
mov
imul
or
adc
pop
dec
les
aad
pop
test
jmp
jno
push
xchg
lea
xchg
idivl
xchg
xchg
mov
inc
mov
mov
call
xchg
xor
adc
aas
int
dec
or
push
sbb
dec
das
push
mov
cwtl
mov
push
aam
jge
lock
pop
adc
inc
into
lcall
jmp
push
aaa
mov
jmp
imul
push
arpl
xchg
pop
add
jns
imul
into
and
fisubl
mov
or
sub
mov
jmp
sub
nop
jo
imul
inc
cmpsl
jns
sbb
gs
push
xchg
fwait
add
shl
jge
xchg
test
pop
and
push
stos
js
ret
fists
mov
sub
aad
inc
call
adc
adc
xor
stos
mov
lods
aaa
adc
int3
push
and
loopne
outsl
testb
cli
insl
sub
cli
push
in
js
movsb
call
adcl
lds
lret
mov
ret
test
icebp
mov
mov
push
call
scas
xchg
out
pop
dec
adc
dec
mov
incl
mov
add
lods
push
or
iret
push
jae
in
pop
lret
pop
ljmp
cmc
pop
pop
push
mov
xchg
aaa
int
add
ss
adc
je
mov
lods
pushl
jge
ss
adc
jmp
mov
fpatan
mov
sbb
and
inc
popa
das
in
dec
lret
xchg
pushl
pop
jns
loopne
pop
pop
fists
sub
cmpsb
sub
fs
sahf
insl
fstp
decl
into
dec
outsl
or
add
push
push
fildl
cmp
push
loope
adc
jl
mov
mov
xor
inc
push
dec
and
push
cmpsl
xchg
jae
jge
xchg
pop
adc
xor
es
mov
bound
dec
out
xor
push
in
jae
push
dec
dec
ljmp
adc
xor
push
and
loope
loope
fimuls
jp
aam
pop
js
hlt
ja
dec
pop
xchg
mov
lahf
pop
jg
mov
cwtl
mov
cmp
adc
test
js
mov
mov
repz
inc
aad
adc
mov
or
and
call
dec
jmp
add
fstpt
ds
loop
jmp
dec
cld
mov
call
std
pusha
test
or
les
lods
inc
cmpsb
fld
movsb
lret
xor
aam
lods
xchg
scas
ljmp
adc
adc
aam
inc
xchg
pushf
and
jbe
xlat
enter
xchg
sbb
aad
sub
pop
sar
fidivs
fcoms
xchg
mov
jno
and
inc
adc
push
and
inc
jbe
decl
jns
jo
jbe
sbb
pusha
insb
dec
push
hlt
cmp
movsl
push
mov
mov
inc
rorb
xchg
mov
aas
imul
cld
ja
loopne
addr16
sbb
and
incl
sub
mov
imul
es
jne
cltd
pop
popf
pop
dec
lret
sub
push
sub
shlb
xor
dec
mov
mov
std
mov
xor
fldl
out
ret
bound
loopne
cmpsl
movsl
lret
lret
std
or
push
mov
or
mov
push
and
daa
in
mov
mov
pop
fmul
mov
mov
lahf
shr
cmp
mov
clc
sbb
inc
and
pop
lods
call
and
push
pop
sarb
out
out
add
lock
sahf
rcrl
test
test
lock
fiadds
jno
call
out
cmp
xchg
pop
int3
push
inc
repz
mov
or
cmp
pop
jo
mov
pop
jae
jnp
shrb
xor
jge
mov
test
dec
lret
or
push
add
xchg
add
cmp
cmpsl
fisubs
cmc
jp
sub
adc
mov
call
push
aaa
sarl
test
lahf
and
shlb
loope
aaa
xchg
sarl
incl
outsl
cs
pop
lret
lds
fldlg2
xchg
movsb
inc
mov
inc
ret
icebp
jo
sub
icebp
and
mov
dec
lcall
ds
jbe
lahf
je
sub
insb
nop
clc
repz
incl
fisttps
jo
daa
jl
or
mov
std
cmpsl
pop
and
sub
call
loopne
repnz
movsl
and
stos
pusha
aas
and
shl
pop
outsl
pop
adc
cli
aaa
cld
cld
dec
aam
outsl
push
sti
ds
sti
cmp
add
push
fmul
fstps
lods
clc
out
cmp
repnz
pop
dec
cmp
mov
outsl
jno
lcall
sub
popf
cmp
into
dec
xchg
cmp
xor
dec
jnp
dec
in
insl
aad
fisubl
jnp
jae
sbb
pushf
add
shlb
mov
jno
pusha
sbb
test
lcall
jl
mov
cld
mov
lahf
xchg
in
push
mov
mov
outsl
inc
je
sbb
adc
cmpsl
jp
pop
sbb
xor
push
adc
sub
cmpsb
dec
add
or
push
jb
sarb
push
lods
mov
ljmp
pop
mov
dec
loop
or
incl
or
push
mov
popf
pop
jle
inc
call
add
mov
jmp
gs
and
faddl
dec
pop
or
stos
inc
xchg
in
push
cmp
lahf
test
call
fldl
js
jmp
mov
jo
pop
repnz
xor
dec
xchg
cli
stc
call
mov
orl
lods
lods
cmp
out
mov
test
in
std
add
out
movsl
lock
add
repnz
fisubs
mov
pop
lret
into
mov
mov
call
lea
loop
pushf
lcall
mov
fwait
aas
mov
jne
xor
or
aaa
cli
cs
les
push
inc
xor
xchg
inc
sbb
test
popa
pusha
mov
test
sub
cltd
add
pop
ffreep
pop
test
out
xor
or
jp
lcall
lock
js
incb
lea
sub
test
test
pop
add
dec
jp
icebp
mov
imul
mov
mov
sub
lret
jnp
iret
test
cli
or
hlt
mov
xor
bound
arpl
push
jnp
out
scas
sbb
in
ljmp
test
add
inc
mov
incl
cmc
adcb
cmp
inc
inc
fcmovnb
fstps
push
add
js
aas
xorl
pushl
fisubl
xchg
xor
sbb
aaa
jecxz
jno
xchg
mov
dec
pushl
and
fistps
cmpsb
xor
xor
xor
mov
icebp
dec
ss
sbb
cli
lcall
jmp
mov
mov
ret
or
shll
xorb
out
pop
ljmp
pop
mov
cmpl
jb
jge
or
imul
pop
adc
mov
in
mov
add
icebp
cmp
adcb
ljmp
adc
mov
imul
jle
xor
decl
test
or
mov
lock
or
sbb
fadds
pusha
shlb
or
or
jae
fiaddl
mov
adc
sub
jge
je
lds
mov
pop
stc
mov
call
mov
dec
sub
loope
outsb
xchg
mov
fsubrl
sbb
add
jge
cmpsb
jp
cmp
push
mov
sub
in
adc
enter
and
movsb
push
mov
jg
jns
shlb
mov
mov
push
cs
int
clc
stos
daa
mov
push
mov
inc
ljmp
hlt
jle
pop
mov
pop
cld
outsl
cmp
and
mov
lcall
push
loop
pop
in
imul
push
cmp
int
push
jmp
sub
sbb
call
stc
jnp
aaa
sub
push
adc
stos
pusha
es
cwtl
sub
push
lds
aaa
lahf
icebp
mov
adc
sub
lock
aad
je
or
pop
cmp
xlat
movsb
test
xchg
mov
mov
sbb
dec
mov
dec
xor
gs
fcomip
call
in
add
out
xchg
mov
scas
xor
fidivrs
into
and
lahf
fldcw
iret
imul
add
lods
gs
lret
inc
stos
adc
icebp
cmp
add
lock
cmp
dec
clc
pop
cmp
inc
cmp
lock
decl
int
sbb
xchg
mov
movsl
leave
scas
ss
lcall
inc
decl
jp
inc
and
cmpsb
add
xchg
popf
popa
loope
pushl
fs
das
fsubs
sub
mov
sub
or
mov
mov
insl
in
lods
into
incl
sub
xor
inc
je
pop
aad
mov
loope
xchg
lcall
fnstcw
sbb
fistl
out
push
in
insb
sbb
adcl
pop
jg
sbb
push
xchg
xor
fscale
and
and
stos
mov
incl
xor
inc
sbb
jns
push
outsl
mov
cmp
jle
jg
in
outsl
jmp
sub
pop
pushl
sub
push
idivb
das
push
adc
push
movsl
negb
adc
mov
lcall
dec
enter
push
push
mov
inc
mov
jne
lods
js
push
add
or
fidivs
gs
cmp
adc
dec
fdivs
adc
stc
shl
out
lods
inc
push
ret
ljmp
mov
ja
adc
push
sbb
inc
xchg
call
jecxz
inc
xor
cmp
outsl
xchg
or
mov
js
icebp
bound
mov
cmp
jbe
iret
mov
xchg
jno
jbe
jno
adc
mov
or
push
movl
aaa
loop
push
fisubrs
aaa
xor
xor
jae
cwtl
sub
jg
outsb
push
xchg
xchg
sbb
mov
daa
mov
in
jg
push
cltd
div
pop
lea
or
or
push
decl
xchg
stc
add
lcall
lock
sub
lock
outsl
mov
inc
xchg
sar
in
mov
xor
sti
daa
hlt
sbb
lock
dec
rcl
test
or
mov
push
stc
jl
and
sbb
mov
aas
xchg
loope
outsl
push
jno
sbb
sbb
push
fsubrs
inc
ljmp
les
imul
push
xor
lods
push
inc
aaa
mov
daa
addl
dec
js
cmp
aad
xorl
call
pop
rolb
stos
adc
add
daa
mov
repz
add
mov
inc
or
mov
pusha
mov
jb
xchg
fwait
cmp
xchg
cmc
lcall
loope
add
add
jb
or
sahf
mov
in
mov
or
mov
aas
pmullw
xchg
xor
cli
int3
sub
xchg
fdivrs
adc
add
enter
push
xor
and
mov
sub
repnz
or
sub
sub
and
decl
fidivs
push
mov
sub
lcall
cli
push
and
dec
xchg
mov
cld
dec
orl
cld
adc
call
inc
add
icebp
pop
rorl
xlat
dec
adc
iret
gs
fnstenv
mov
pop
lods
pop
loop
mov
dec
mov
adc
pop
and
pop
pop
sbb
or
outsb
daa
inc
or
rorb
ret
rcrl
fmuls
push
sbbb
inc
pushl
dec
adc
fs
or
gs
cs
jmp
fdivrs
faddl
fisubl
stos
mov
ss
sahf
xchg
ljmp
add
decl
fadds
sbb
fimull
push
lock
sub
aaa
add
movsl
and
cwtl
mov
rcl
fsts
sahf
cld
das
aaa
push
in
pop
mov
inc
pop
mov
mov
jg
adc
loop
jg
pop
mov
push
sub
mov
call
lret
dec
les
mov
jge
fmulp
sbb
in
out
int3
int3
fstl
repz
call
or
adc
and
daa
ret
das
mov
cli
lods
cmpsl
dec
mov
imul
cs
pushl
mov
fnstenv
call
jmp
xchg
in
out
mov
pop
xchg
sbbb
stos
ljmp
and
xchg
or
adc
sbb
xor
xchg
mov
sbb
mov
mov
aam
into
xorl
sbb
jge
imul
lcall
xor
je
in
jns
xorb
pop
pop
stos
jmp
insb
jmp
sub
mov
test
call
fisubrl
mov
xor
ret
add
sbb
and
inc
pushl
jnp
dec
cwtl
adc
fwait
jns
jne
push
clc
sbb
out
pushf
jmp
cmp
pop
cmpsl
mov
sar
cld
arpl
call
dec
xchg
push
sub
add
jle
mov
adc
mov
fnstenv
mov
jo
repnz
fwait
adc
mov
fadds
push
push
mov
cmp
xchg
jg
pop
cmp
jl
cmp
xchg
push
cmpsb
jae
filds
dec
arpl
fdivp
icebp
lods
push
cmp
cmpsb
stos
mov
dec
push
cltd
pop
into
ljmp
fisubrl
mov
mov
jge
mov
bound
fwait
adc
test
incl
ljmp
sti
nop
stos
es
pop
cmp
or
ds
popf
push
push
mov
ljmp
and
dec
fdivrs
dec
ljmp
pop
imul
or
or
icebp
adc
jne
cld
fstps
fwait
movsl
cld
mov
sarb
sbb
push
xorb
xor
mov
pop
gs
dec
sub
jno
repnz
call
imul
or
and
testl
incl
jbe
stc
aas
cmpsb
andb
mov
dec
dec
jp
icebp
lock
cli
decl
jne
push
outsb
fwait
sub
or
jl
xchg
lcall
fcmove
pop
daa
jl
addl
jo
cmpsl
leave
arpl
popl
loope
push
lcall
pop
dec
jnp
stos
fwait
aad
loop
fstpt
js
dec
orb
iret
push
mov
scas
sub
incl
add
aas
scas
lea
rorb
jmp
sub
mov
push
push
mov
adc
lret
ljmp
and
sar
sub
pushf
push
inc
cltd
into
xor
out
arpl
inc
int
lcall
imul
call
push
dec
test
push
out
movsb
jg
shlb
mov
inc
inc
sti
outsb
loop
dec
cltd
push
call
std
call
in
imul
ret
cld
movl
lcall
in
rolb
mov
sbb
dec
adc
add
sub
lcall
outsl
repnz
repz
xchg
inc
adc
les
out
js
int
and
incl
nop
mov
lahf
mov
pop
inc
shrb
test
mov
sbb
decl
mov
hlt
daa
cs
pop
xchg
sbb
pop
push
pop
pop
pop
push
repnz
dec
jp
decl
mov
adc
test
in
out
push
xchg
sbb
push
push
push
test
nop
outsb
jmp
jle
adc
xchg
push
jge
in
or
xchg
leave
pusha
add
ljmp
in
mov
jmp
popa
aas
ret
lock
test
data16
cmovb
lahf
iret
add
pop
aaa
incl
push
push
stc
mov
xor
subl
call
and
je
mov
xor
push
subl
lret
mov
add
jmp
stos
mov
or
mov
andnps
stos
and
ds
arpl
out
dec
outsb
push
out
sub
incl
lods
leave
jmp
fldenv
nop
sar
fstpt
or
movsl
fiadds
outsb
xchg
fwait
mov
js
out
clc
xchg
js
dec
ficoms
mov
pop
fucomi
dec
or
mov
pop
and
pop
adc
sti
cmp
aad
cli
sbb
nop
mov
fcompl
mov
inc
inc
jo
pop
push
cmp
inc
nop
loope
or
and
js
orb
gs
mov
int
ffreep
out
fidivl
scas
or
not
orb
push
cli
pushl
loope
sbb
pop
and
xor
mov
xchg
inc
rcll
negb
imul
out
jmp
inc
into
and
mov
out
jnp
or
out
loopne
leave
movsl
dec
push
test
jp
fstl
lea
rclb
jo
adc
icebp
and
add
mov
mov
sbb
add
ljmp
push
insl
ficoms
add
imul
loope
fistpl
adc
leave
or
jb
test
inc
dec
movsb
jno
lcall
inc
and
and
ljmp
sbb
pop
cld
lret
ljmp
sahf
pop
or
scas
in
out
mov
dec
sbb
addl
or
mov
mov
mov
call
cmp
sbb
xchg
mov
jno
arpl
orb
scas
lock
call
rclb
push
inc
xor
jno
xor
bound
jmp
and
sbb
add
xlat
lods
xchg
sahf
dec
fs
movsb
flds
or
dec
imul
mov
lcall
lods
cmpsl
push
das
ret
shr
in
out
sub
mov
nop
jp
loopne
insb
add
mov
sub
decl
jo
and
lds
cwtl
dec
xchg
fnstsw
stos
loope
mov
call
arpl
push
mov
or
std
icebp
mov
out
roll
dec
mov
fcmovnu
adc
add
outsb
stos
ficoml
add
sub
xchg
xchg
decl
in
mov
in
inc
xor
or
push
mov
jmp
inc
lods
jne
decl
jb
mov
cwtl
push
or
andl
mov
std
or
mov
push
push
shrb
aam
int3
test
pop
insl
sar
cmp
outsb
adc
dec
xchg
push
fimull
fdivl
jg
sarb
into
mov
lret
jp
jbe
inc
mov
xor
jne
nop
add
pop
adc
lcall
int3
adc
mov
adc
sub
repnz
mov
cmp
fcmovnbe
lea
mov
bound
out
mov
jno
call
call
push
mov
test
mov
ds
aad
push
daa
movsl
inc
pusha
lds
daa
fmul
std
andps
call
dec
lods
fstl
mov
cwtl
xlat
adcb
adc
cmp
dec
xor
insl
xor
inc
shll
lcall
jo
and
mov
test
xchg
push
and
clc
xchg
aas
adc
scas
pop
pop
xor
mov
incl
dec
outsl
sti
stos
dec
cli
int3
push
add
cmp
jge
push
lret
inc
psubb
pop
flds
call
and
ficoml
mov
push
mov
lock
pop
jbe
jg
push
call
cmp
clc
rcl
xchg
fiaddl
mov
dec
in
lcall
push
and
stos
add
scas
mov
adc
push
scas
mov
mov
call
cwtl
shlb
pop
push
jle
pop
jo
sub
scas
add
inc
push
lahf
cmc
shrb
mov
ficomps
in
jns
out
out
mov
jb
mov
ret
decl
mov
into
pop
and
jo
and
pop
lret
jbe
fnstsw
cmp
sbb
push
cld
pushl
stc
add
outsl
cmp
fstl
out
jle
mov
ret
jmp
ljmp
enter
and
cbtw
mov
lcall
push
jg
incl
jae
iret
outsl
popf
mov
outsb
push
pop
inc
mov
xchg
jo
lret
or
mov
mov
sbb
mov
in
test
int3
stc
add
cs
xor
mov
jmp
mov
idivb
ret
sbb
inc
sub
adc
jp
ljmp
pushl
ret
push
jg
adc
push
dec
and
mov
ret
movb
inc
dec
jg
jno
push
hlt
lods
sub
rol
stos
pop
push
xchg
leave
les
imul
jmp
fsubrl
or
dec
ret
sarb
sub
inc
fwait
addr16
adc
mov
in
ljmp
jae
mov
daa
aas
mov
movb
decl
jp
fcoms
sub
and
fsubrs
inc
mov
out
add
int3
out
pushl
cld
pop
cli
mov
ljmp
add
pop
inc
test
das
dec
xor
jne
call
jle
sbb
adc
stos
arpl
out
dec
mov
das
mov
ljmp
push
sub
push
cmp
push
test
and
jmp
xchg
sti
jmp
adc
addl
xchg
rcr
jne
scas
pusha
mov
loop
mov
incl
mov
je
jge
jno
cmpsb
out
andl
icebp
xor
sbb
outsl
sub
hlt
test
sub
jae
imul
and
mov
cmp
lret
stc
int
dec
call
loopne
dec
lcall
sub
incl
loopne
jns
divb
inc
pop
jnp
jmp
xor
pop
adc
shl
lcall
div
test
cmpl
mov
mov
in
pop
mov
call
call
inc
repz
faddl
mov
std
aam
ficoms
add
cmp
cmp
mov
stos
and
jns
adc
inc
repnz
mov
mov
fadd
fneni(8087
add
xchg
popf
lods
jle
rclb
out
sbb
fisubs
aad
icebp
mov
mov
test
scas
and
add
fwait
lret
iret
popa
dec
das
jl
sub
jmp
and
jnp
or
imul
adc
dec
inc
ds
add
cmp
jmp
out
dec
addr16
jne
xchg
dec
pushf
or
mov
push
mov
jae
jns
subb
hlt
out
pop
mov
xchg
test
shll
out
xor
pop
mov
add
pushl
aaa
and
imul
mov
stos
xorl
pusha
int
sahf
fwait
call
pop
loop
aaa
push
loopne
out
sbbb
lahf
mov
push
jb,pt
pop
movsb
jmp
loop
xlat
mov
cmpsb
ss
mov
xor
or
mov
pushf
push
jg
jb
cs
mov
and
add
and
fdivs
repz
call
leave
pop
roll
loop
push
cli
dec
in
push
xchg
cltd
cld
rorb
pop
sbb
add
jmp
movsl
stos
push
and
daa
int
popa
bnd
jne
or
sbb
divb
bound
cltd
icebp
decl
xchg
xlat
mov
fwait
insb
adc
sbb
jcxz
or
jmp
lock
jp
mov
call
or
ljmp
pop
mov
call
or
call
mov
popf
sbbl
xorl
add
adcb
insl
inc
pop
sub
in
adc
jmp
mov
lcall
adc
add
xchg
push
cmc
out
ret
sub
sbb
mov
test
cmpsl
ljmp
sar
decl
xlat
xchg
movsb
lcall
push
cmp
add
mov
call
xchg
sbb
pop
in
pop
js
jl
mov
pop
scas
outsl
add
call
mov
fisttps
fcom
aad
ret
orb
mov
jno
mov
dec
push
shll
mov
imul
ret
and
adc
push
xor
add
jmp
dec
in
test
mov
jb
lahf
mov
adc
decl
pop
xchg
mov
pusha
mov
xor
out
jmp
pop
mov
pop
subl
pop
in
cmp
stos
rol
lds
jg
fsubrs
lahf
cmp
adc
lds
jecxz
cmp
lock
jmp
jecxz
cmp
lds
jl
in
repz
cltd
or
ljmp
xchg
cli
js
orl
pop
or
xlat
test
mov
sub
sub
xor
jmp
sub
jnp
sbb
mov
sub
xchg
or
pop
pop
sti
and
mov
idiv
jmp
sbb
inc
jle
ret
or
pop
adc
adc
mov
inc
sub
jmp
dec
mov
cld
movb
inc
pcmpgtb
icebp
mov
not
mov
decl
shl
cmpsl
test
sti
mov
and
pop
jae
sar
fbstp
fistpl
ds
push
and
mov
das
pop
push
ret
insl
pop
xor
scas
xor
cmp
outsl
stos
add
negb
daa
jle
orl
das
inc
loopne
or
dec
testl
call
std
lgs
cmpb
mov
push
inc
sub
pop
jge
loop
inc
lcall
and
js
jle
inc
lcall
cmpsl
es
dec
gs
dec
test
pushl
push
mov
pop
inc
jno
add
adc
call
xor
mov
call
std
rorl
les
aam
jae
test
ss
in
push
mov
xchg
mov
aad
push
mov
cmp
mov
ds
sub
out
fisttpl
decl
dec
aaa
inc
mov
pop
fld
mov
mov
mov
jle
iret
enter
jb
adc
fs
and
inc
ss
call
mov
call
mov
jnp
mov
and
mov
decl
decb
jne
test
or
fwait
pop
sbb
xchg
add
in
pusha
rolb
mov
outsl
jbe
push
fcom
scas
ficomps
fbstp
loop
push
sub
cmp
push
and
fneni(8087
mov
enter
out
jmp
jns
xchg
pop
cwtl
mov
fnstcw
xor
add
and
xor
fcomip
ljmp
in
pop
or
inc
pop
xor
pop
pop
mov
jl
dec
aas
inc
mov
pop
fistpll
or
enter
or
xor
inc
and
filds
fcomp
dec
mull
mov
das
and
pushl
adc
push
jns
mov
mull
or
jmp
sub
push
cld
sub
daa
ljmp
push
push
decb
fcmovnu
sbb
addr16
mov
inc
sbbb
daa
push
adc
mov
xor
adc
repnz
ljmp
aaa
ljmp
sbb
cmp
xor
xchg
out
pop
lock
addr16
call
push
cmp
loop
or
cmp
scas
hlt
xchg
or
or
std
pushl
shrl
rcll
pop
insl
aaa
lds
ret
mov
pop
gs
call
mov
jae
mov
imul
add
jns
inc
xchg
incl
or
or
add
arpl
enter
addr16
pop
out
xor
sar
push
mov
stos
jne
mov
mov
mov
lcall
mov
rorb
mov
arpl
push
lds
mov
out
aas
adc
jl
jno
jo
cmpsb
scas
sub
fadd
pop
push
inc
cmp
xchg
insl
xchg
sti
mov
jmp
or
fisttpll
ss
fs
jne
pop
lret
adc
fsubrl
imul
jbe
ja
pop
xchg
mov
out
test
jle
outsb
push
adc
decl
ljmp
mov
test
lret
movsl
cmp
popa
inc
adc
and
sar
fbld
lds
jnp
pop
mov
movsl
add
mov
sub
decl
aam
pop
mov
dec
mov
pop
enter
shll
movsb
in
cld
leave
decl
ret
sub
xchg
mov
cmp
sahf
and
loopne
imul
das
mov
loopne
fisttps
int
and
and
jmp
pop
fs
aaa
add
ja
sub
and
and
fnstcw
jge
pop
sbb
call
add
jbe
cmpsl
dec
cmp
cmc
loop
imul
or
popf
hlt
inc
sbb
lds
cmp
add
gs
cs
dec
test
xor
ds
lcall
or
iret
push
in
sarb
add
lea
push
and
xchg
mov
add
push
sahf
dec
popf
aas
dec
std
lcall
test
das
pop
xchg
aas
dec
movsb
daa
outsb
movsb
popa
out
je
pop
and
inc
fistpll
cmp
push
mov
popa
jno
fdivrl
stos
andl
icebp
sar
jmp
and
popf
xor
cltd
clc
ja
mov
nop
jae
lods
scas
fstp
push
xchg
imul
outsl
clc
jmp
jecxz
jnp
out
pop
push
loope
pop
out
mov
mov
adc
lods
jge
lcall
jmp
sub
cmp
or
fidivl
xor
pop
das
popl
add
ljmp
adc
push
mov
cmp
xor
add
ljmp
cld
ja
push
mov
arpl
cmpsb
test
les
mov
clc
mov
mov
mov
jg
jmp
xchg
mov
pop
mov
sbbb
movsl
test
fisttps
fcmovnbe
fwait
mov
lock
or
aas
xchg
iret
repnz
pushl
dec
ljmp
jmp
cmp
add
stc
out
loope
inc
cmpl
sub
mov
pop
icebp
sub
dec
dec
sbb
aam
pop
mov
fwait
js
rcr
icebp
adc
je
enter
call
int
sar
fcomip
incl
daa
mov
add
lock
push
fdivp
mov
scas
paddusb
out
ss
decl
pushl
sub
sbb
cli
mov
sub
sti
int
or
add
repnz
lret
sub
icebp
dec
stos
add
jg
dec
push
inc
enter
jnp
adc
movsl
imul
mov
xor
ljmp
jo
and
jle
mov
inc
loope
add
sub
ret
test
lcall
orl
pop
or
mov
pop
push
jnp
mov
cmp
mov
imul
lcall
lret
jno
push
jmp
scas
mov
dec
adc
pop
imul
iret
aaa
out
mov
dec
xchg
orl
or
mov
fstpl
push
xchg
fcmovnu
into
mov
adcl
mov
popf
pop
aaa
push
bound
xchg
call
cmc
sub
movsl
mov
mov
test
cmp
out
mov
jp
aam
cmc
int
in
cmp
push
sub
xchg
int3
outsb
mov
inc
popa
xor
aaa
xlat
mov
dec
dec
fists
inc
push
mov
jmp
test
push
cmc
dec
add
push
movsl
pushl
mov
rolb
in
movsl
jbe
dec
dec
mov
jnp
cmp
push
clc
sub
popf
mov
push
fs
scas
popa
pushf
das
mov
cmp
dec
into
daa
insl
ret
js
push
call
xorb
sub
jmp
repnz
adc
or
sbb
inc
jmp
stos
pop
cltd
jecxz
add
dec
add
fucomp
aad
push
push
icebp
lds
lods
mov
xor
test
jne
xchg
jnp
rclb
ljmp
loopne
lock
cmpsb
pop
mov
fucomi
ficoms
lcall
fstpt
adc
shlb
push
adc
push
ficoml
mov
xlat
ds
xor
cltd
pop
mov
xor
pushl
xor
xorb
ret
cltd
xlat
out
mov
mov
loop
xchg
ljmp
stos
mov
jmp
mov
sub
lds
popa
test
dec
popa
movsl
add
scas
cli
or
jns
ljmp
inc
and
mov
mov
je
mov
mov
and
jmp
mov
cmp
sar
mov
pop
jmp
insb
add
enter
inc
lcall
sbb
scas
cwtl
push
adc
inc
out
ret
incl
xchg
es
rcl
shlb
not
pop
ds
mov
nop
mov
cmp
lods
fwait
cmp
push
mov
test
in
out
lahf
xor
jmp
enter
xchg
add
adc
out
push
and
das
sub
test
call
mov
call
cmp
imul
push
xchg
hlt
jne
pop
add
mov
xchg
ss
jne
sub
cli
scas
cli
call
cmp
push
mov
dec
mov
aaa
mov
in
push
insl
faddl
jno
and
ljmp
mov
pusha
mov
add
ss
mov
fs
out
pusha
mov
push
cmp
call
dec
ret
aam
stos
push
scas
outsl
xlat
add
shll
ds
pushl
jl
xor
xorl
gs
inc
sbb
xor
jge
xchg
loope
outsl
cli
dec
arpl
pop
subb
nop
inc
fstps
jno
and
aas
xor
in
sbb
sub
or
xor
mov
or
jno
shrb
lcall
dec
les
fcompl
cld
mov
and
mov
mov
int3
sti
filds
sub
pop
call
imul
inc
pop
mov
jle
dec
jl
add
push
add
cli
dec
incl
cmp
sub
enter
mov
repz
xchg
jp
fs
jmp
lds
pushl
push
pop
push
mov
adc
cli
pop
sub
mov
incb
jno
sbb
mov
loop
pop
sbb
clc
and
out
mov
dec
pushl
add
mov
dec
fucomp
inc
push
arpl
out
mov
xchg
xor
mov
jmp
jl
in
dec
roll
mov
mov
mov
cmpsl
inc
bound
ret
decl
add
jge
fs
pushf
in
and
sti
stos
leave
push
leave
lret
and
popa
pop
hlt
mov
or
mov
js
adc
aam
inc
ljmp
push
add
add
les
push
icebp
je
cmp
cmp
inc
iret
add
pop
and
xor
inc
jl
mov
mov
lods
or
fidivrl
jmp
insl
in
loopne
and
pop
pop
mov
dec
testb
jns
dec
pushl
movsl
mov
adcl
adc
fwait
nop
xorl
or
decl
clc
ret
mov
out
adc
sbb
mov
shrl
xchg
decl
nop
mov
mov
xor
push
jmp
mov
xor
dec
push
ja
dec
adc
call
ret
sbb
pusha
push
jno
mov
dec
pop
lret
adc
cld
xor
mov
xchg
pop
mov
mov
pusha
rcl
and
cmpsb
std
xchg
pop
pop
mov
fdivs
fwait
stos
jne
lcall
aam
and
mov
incl
cld
push
adc
outsl
imul
aaa
ljmp
mov
mov
test
adc
push
push
addl
iret
jge
mov
pushf
mov
and
incl
jns
jbe
pop
in
fists
xchg
adc
sbb
mov
xchg
shll
jbe
insb
add
shrb
xchg
mov
ljmp
and
jg
cmp
pusha
lds
shll
dec
shl
or
lcall
incl
sub
mov
sar
negb
jb
push
mov
subb
fists
fiadds
and
aas
dec
or
mov
cmpsb
xor
fwait
jae
mov
mov
das
mov
add
dec
dec
mov
test
incl
inc
xor
jo
or
mov
scas
subb
cmc
ja
ret
xchg
sti
sbb
in
roll
ljmp
lods
sbb
xchg
lahf
xchg
pop
sub
clc
loopne
mov
int
lcall
mov
pop
push
adc
sub
xchg
fs
mov
mov
mov
hlt
sbb
cld
decl
addr16
jmp
or
mov
cmp
dec
out
xor
popf
jp
add
incl
or
mov
cs
add
or
sahf
in
out
xor
mov
nop
sub
scas
aas
sub
sbb
xor
lods
loope
sub
or
mov
aaa
cld
jo
ss
mov
push
cmp
push
out
pop
je
loop
sti
pushl
xorl
out
add
inc
or
rdmsr
fsubp
push
adc
jmp
pop
xchg
jg
jg
movsl
call
ret
scas
inc
lret
jne
out
es
jne
lcall
stc
jnp
sbb
sbb
out
bnd
xor
fisttps
test
mov
rcrl
call
xchg
bound
xchg
inc
daa
test
pusha
jns
or
and
fdivr
sti
imul
fwait
xor
or
mov
sarb
bound
or
fdivl
das
repnz
lcall
cld
mov
je
inc
and
inc
movsl
fnstenv
sub
inc
stos
push
xchg
adc
xor
sahf
adc
loope
lcall
jl
push
adc
inc
stc
cmp
shrb
lahf
shrb
lods
pop
mov
call
push
js
and
test
jecxz
in
loope
test
or
xor
sahf
lds
movsl
je
cld
outsl
clc
sub
cmp
push
mov
adc
dec
mov
jl
or
cmpsl
outsb
stos
movsl
mov
cmp
jb
ja
add
scas
push
cwtl
or
push
decl
mov
add
out
arpl
fsubl
fwait
or
out
jno
jmp
mov
sbb
mov
inc
and
mov
decl
in
jge
mov
lds
mov
stc
fisttpll
bound
mov
xor
mov
mov
shlb
enter
popa
pushf
and
mov
add
and
push
std
cmp
ret
adc
cmp
jno
push
leave
insl
cli
std
ljmp
mov
dec
mov
push
and
mov
push
or
xchg
rcrb
xchg
aad
call
repz
sbb
cmp
xchg
std
cld
lahf
xchg
sub
aas
and
popa
sbb
jg
adc
push
sub
adc
push
lock
xchg
pop
int
push
mov
testl
outsl
cli
lcall
cld
lcall
or
push
push
or
insl
lcall
movsl
mov
loope
out
in
mov
mov
dec
arpl
pusha
push
cmc
popa
in
lcall
ds
shrb
stc
rorb
inc
pop
or
stos
adc
mov
incl
repnz
pusha
fxch
nop
and
inc
lret
dec
fwait
popf
jl
into
out
add
decl
insb
aaa
mov
repz
lcall
loop
jmp
sbb
int3
icebp
or
imul
call
das
push
jmp
in
hlt
cs
push
cwtl
jns
in
adc
imul
loop
sbb
fcomip
das
xchg
mov
add
nop
xor
rcrb
test
jnp
sbb
cmp
shll
pop
loop
cmc
wbinvd
mov
inc
mov
or
jmp
pop
shll
jmp
cli
fwait
lahf
xor
scas
adcb
jl
dec
stos
xor
sbb
pushf
test
pushl
test
sbb
scas
mov
jb
fnstcw
icebp
mov
popa
out
or
inc
xor
add
xor
call
mov
push
mov
mov
mov
push
in
and
fdivl
push
mov
jmp
jl
out
fdivrs
adc
loopne
loopne
push
in
outsb
xor
call
clc
lret
adc
arpl
pop
cmpsl
jge
push
jnp
outsb
dec
call
sbb
ret
mov
jl
aad
lcall
and
mov
cld
ret
imul
xchg
cmp
aad
or
jg
mov
movsl
sti
xor
or
loop
xor
loop
ret
cmp
cmpsl
scas
mov
scas
jo
in
inc
incl
jbe
mov
shl
sub
xchg
ss
hlt
sbb
fsts
push
sahf
cli
jbe
lret
jg
call
pop
xor
mov
add
sahf
mov
mov
rorl
jmp
cwtl
mov
lods
das
push
in
int
mov
jge
movsl
mov
jge
add
pop
hlt
repz
orl
cmp
cmp
lds
fdivr
jmp
xor
cwtl
jnp
xor
pop
lds
mov
xchg
inc
mov
dec
add
ja
hlt
mov
cmc
shr
incb
test
mov
lcall
mov
cmp
xchg
scas
popf
fs
lods
pop
enter
jecxz
lods
mov
decl
sub
sbb
test
jnp
adc
pop
roll
imul
xchg
movsl
movsl
inc
add
jo
cs
decl
add
rcrb
inc
inc
xchg
add
lret
fnstenv
ss
fisubrl
inc
xor
jecxz
push
test
add
mov
push
icebp
and
gs
fstp
jle
add
lock
jae
scas
jl
and
mov
out
testb
test
add
adc
shr
outsl
js
cmp
stc
icebp
ds
jle
pop
cmp
mov
ds
sub
daa
fidivrs
icebp
decl
out
scas
std
xchg
inc
jl
movsb
add
add
test
pop
adc
and
in
ljmp
imul
mov
xor
dec
out
clc
pushl
sub
inc
xchg
xchg
rol
push
inc
iret
mov
fmuls
push
push
orl
js
cli
mov
cltd
test
add
dec
out
push
ficomps
test
xor
shr
inc
aam
mov
xor
pop
aaa
adc
cmp
and
aam
push
ds
repnz
cmp
out
stos
sub
cmpsb
out
push
inc
jae
lods
outsb
cmpsb
cmc
push
fucomp
jl
out
std
mov
jnp
dec
call
xchg
mov
xor
in
jne
or
or
mov
jno
nop
mov
xchg
ljmp
loope
dec
inc
fisubs
mov
push
incl
inc
es
add
in
pop
loope
inc
cli
push
shr
inc
outsb
fwait
shlb
cmpsb
pushf
int
in
jp
inc
or
in
push
and
sub
sub
push
fsubr
jge
cs
dec
lcall
mov
xchg
lods
mov
aas
sbb
gs
xchg
dec
push
mov
and
leave
pusha
pushl
push
fimuls
cs
fwait
and
jg
add
jb
xchg
stos
mov
cmpsb
fstps
fcos
lcall
add
sbbb
aad
or
js
mov
pop
sub
push
adc
jns
mov
pushf
ds
pop
sub
sub
jne
shll
dec
loop
jle
dec
ret
negb
sub
add
push
pop
xlat
lods
insl
aaa
inc
faddl
jb
incl
mov
and
sub
add
sub
mov
stos
adc
push
leave
push
sarb
repz
pushl
pop
sbb
mov
iret
ljmp
mov
jg
dec
add
mov
or
pop
outsb
outsb
ret
fbstp
xchg
xchg
pop
pop
fidivs
mulps
jmp
sub
inc
lret
in
rolb
cmpl
jns
sbb
jg
push
pop
inc
inc
push
sbb
dec
sub
es
data16
aas
roll
repz
jle
fwait
incl
xchg
leave
popa
in
arpl
ror
popf
push
xchg
aam
jno
add
mov
jne
test
push
mov
pop
xor
lock
sbb
dec
lock
jo
jg
mov
inc
mov
push
incl
mov
sbb
push
out
inc
or
xor
loopne
mov
decl
icebp
cmp
lds
pop
mov
pusha
adc
jg
push
mov
imul
imul
call
ret
lcall
bound
jns
jne
adc
or
popf
jnp
or
stos
int3
mov
fisubl
in
xor
cmpsl
iret
into
fdivp
xor
push
cmpsb
clc
push
mov
inc
inc
jb
sti
adc
aam
cmp
mov
rol
cmpsl
cmp
decl
or
dec
dec
loope
movsb
sub
not
ret
loopne
data16
jmp
rorb
loop
adc
imul
xor
shrl
lcall
pop
xor
sbbl
fadd
pop
rclb
lahf
inc
pop
loope
mov
lcall
out
and
mov
mov
das
ret
pop
sbb
cmp
cmp
imul
call
jp
jo
lret
dec
cltd
or
andb
push
int3
mov
mov
ljmp
icebp
pop
push
add
bound
cmp
mov
or
mov
pop
insl
test
or
jecxz
cmp
jle
es
das
add
pushl
iret
jl
jmp
xor
es
pop
pop
lods
out
fbld
jnp
sub
sahf
adc
lcall
cmpsl
push
push
pushf
lret
sub
cli
add
popf
ljmp
dec
sub
data16
dec
xchg
xor
push
mov
dec
xchg
mov
test
imul
fdivrp
movsb
fistpll
cmpsl
mov
pop
push
je
gs
pop
shll
repnz
aas
shlb
push
ljmp
pminub
mov
sub
inc
mov
sarl
jmp
dec
mov
push
dec
repnz
das
and
mov
add
jmp
pop
fbstp
jecxz
dec
pop
jbe
ret
aaa
addr16
xchg
inc
or
add
cmp
mov
incl
cmp
and
fcomps
inc
lahf
cwtl
xlat
decl
xchg
cltd
push
pop
push
call
or
lds
stc
cmp
xor
call
add
push
arpl
outsb
sub
in
in
scas
call
xchg
fdiv
in
pop
loopne
lcall
repz
adc
cmp
mov
add
mov
jmp
mov
int3
insb
mov
enter
iret
mov
inc
pusha
movsb
xchg
adc
fwait
ret
mov
dec
pop
jae
movsb
ljmp
and
cld
dec
jmp
rcrb
mov
incl
or
jo
push
or
sub
repnz
daa
loopne
pop
add
push
push
sbb
inc
incl
shlb
sbb
testl
cmp
fadds
cs
jns
data16
mov
pushl
or
jo
mov
xor
je
sbb
and
add
jns
fcomip
xor
stc
cmp
push
js
mov
scas
or
mov
jmp
inc
push
je
jbe
int
jle
mov
outsb
cs
jp
mov
xchg
xchg
add
sbb
or
jmp
in
add
cmpsb
pop
jbe
and
push
mov
cltd
adc
add
and
push
popa
jmp
inc
push
push
pop
xchg
xlat
xchg
pop
mov
outsb
jo
sub
and
and
out
cli
add
jp
cltd
stc
mov
add
movsb
cld
push
loop
mov
jb
in
sub
inc
bound
mov
push
dec
xor
scas
std
inc
adc
incl
stc
xchg
push
push
push
sbb
iret
pop
inc
dec
dec
sahf
pushf
inc
or
sahf
and
pushl
stos
rclb
xor
movb
jne
lea
sbb
inc
xor
adc
in
jne
ljmp
rolb
jmp
mov
fwait
cmp
sahf
sub
lock
pushl
or
pop
mov
fiadds
outsl
push
out
leave
out
sbb
cmp
or
out
and
cmp
or
mov
aas
ljmp
lcall
clc
test
inc
js
sbb
adc
cld
addb
dec
ret
loope
in
out
aad
into
mov
adc
leave
add
add
cmp
xchg
aad
inc
and
inc
mov
jp
lcall
outsl
cld
dec
stos
call
out
cmpsl
loop
int
daa
cmp
cmpsl
inc
push
pop
popf
mov
jle
call
cmp
cmp
push
ds
xchg
sub
orb
mov
fdiv
lret
sbb
sti
es
mov
xchg
fs
mov
out
stc
fisubrs
cmc
mov
lcall
mov
sbb
lahf
jg
pop
out
sub
sahf
inc
shr
sbb
lcall
jg
jg
lods
in
xor
inc
nop
dec
sub
jae
ds
fdivs
lret
adc
daa
das
jle
dec
loopne
mov
dec
and
arpl
mov
push
shlb
lea
cwtl
mov
mov
xor
and
mov
xchg
dec
xchg
or
loop
call
dec
out
and
xor
jp
sub
cwtl
jb
pop
ret
call
adc
cmp
popf
aaa
jae
int3
xchg
mov
cmpsl
mov
inc
jge
pushl
sbb
ret
jp
and
sub
dec
insl
test
cmp
sbb
push
dec
out
push
hlt
in
popa
and
rcll
jmp
mov
out
cmp
ror
mulb
fisubl
jno
dec
mov
jecxz
pop
xor
xor
std
lcall
sbb
add
xchg
sub
adc
add
sahf
pop
in
std
lods
dec
mov
in
ljmp
scas
sbb
xor
fwait
in
repnz
std
adc
add
xchg
and
jbe
ss
call
and
mov
mov
push
xor
xchg
sahf
scas
sub
sti
lret
ja
clc
incl
mov
push
cmpsb
dec
cmp
mov
jmp
push
sub
decl
xor
lret
sarb
in
movl
insl
mov
mov
push
insl
inc
lcall
jp
fmulp
adc
mov
sub
in
into
push
ret
fwait
sysenter
sub
pushl
pop
shl
insl
xchg
jns
inc
repnz
sahf
cmp
sub
dec
mov
push
popf
mov
fdivrp
jb
add
sbb
fdivr
xor
arpl
and
dec
clc
pushl
sbb
rcrl
push
jp
in
je
bound
cs
xor
xchg
pushf
add
xlat
ljmp
mov
cmp
pop
pop
inc
outsb
ficomps
cmc
jne
or
pop
and
decl
pop
mov
iret
insl
js
xor
cmp
daa
jno
loop
xchg
add
mov
decl
fbstp
es
pop
test
ds
clc
lds
ja
xchg
clc
jmp
popf
fbstp
dec
and
adc
in
pop
aas
fidivl
in
xchg
jmp
push
add
fsts
fstp
pop
icebp
pop
push
out
cltd
or
jmp
inc
push
inc
scas
popa
push
mov
adc
inc
xor
mov
sbb
sub
and
push
pop
ljmp
jb
insb
and
orb
fists
ret
jno
sti
in
idiv
lcall
and
leave
into
adc
add
icebp
subb
cmc
mov
icebp
inc
inc
js
mov
pop
out
mov
sbb
shl
mov
xchg
dec
rorl
idiv
lcall
mov
xor
adc
or
dec
loope
lret
mov
int
lcall
mov
out
push
adc
push
sub
adc
pop
sbb
adc
jmp
pop
push
sbb
ljmp
dec
lods
movsb
xor
inc
mov
inc
mov
cwtl
inc
xor
call
jb
ds
sub
cmc
orl
add
add
mov
push
jmp
call
and
push
or
cmp
mov
push
mov
in
mov
sbb
movsl
lock
fsubrs
xchg
les
push
sbb
inc
js
and
out
dec
jmp
test
cld
pop
ret
cmp
pop
aas
aad
pop
outsl
ljmp
xor
dec
xchg
sti
pushl
adc
ret
cmc
xchg
push
cmpsb
xchg
xchg
cli
pop
mov
mov
xchg
in
rclb
lcall
pop
push
jge
pop
sub
lods
sub
je
sbb
pop
ror
push
add
mov
pushl
jmp
pop
xchg
mov
incb
mov
mov
idivl
in
adc
lods
insl
insb
sbb
adc
jl
popf
xor
lcall
sub
rcrb
in
xor
ljmp
push
xchg
repnz
mov
rclb
stos
mov
movsb
dec
sub
mov
std
call
leave
or
mov
insb
jo
pop
fildl
je
and
and
sarl
pushl
sub
mov
std
add
add
jmp
lea
jmp
sbb
inc
out
fdivrs
testl
mov
pop
pop
cwtl
and
mov
jecxz
std
jmp
nop
sbb
data16
jg
jge
xchg
lret
sub
mov
mov
push
js,pn
jmp
push
cmp
fs
call
sarl
ja
scas
mov
jbe
jge
ja
sub
mov
fcomip
incl
mov
add
ja
add
mov
push
ds
inc
scas
pushl
leave
jmp
hlt
stc
and
test
insl
and
bound
inc
stc
sbb
jmp
shrb
ds
pop
mov
sub
shrl
mov
push
mov
lcall
pop
fwait
push
pop
sti
xor
mov
xchg
pusha
jb
sti
lods
pop
mov
jnp
fdivrp
incl
mov
test
std
adc
cli
das
sbb
pop
and
xchg
jbe
cmpsl
mov
xchg
sar
ja
cmp
inc
mov
lods
in
inc
pavgw
push
leave
pusha
decl
jmp
add
mov
insb
inc
add
inc
cmp
inc
pop
aas
push
add
shrl
test
in
xor
dec
bound
lcall
xchg
inc
jno
and
fidivl
or
jne
in
push
movb
outsb
mov
std
incl
aaa
inc
mov
imul
and
mov
xor
fildll
call
xchg
lea
test
sub
and
std
rclb
decl
out
mov
jecxz
push
mov
dec
inc
inc
imulb
push
test
jecxz
mov
cmp
out
jmp
cmp
sub
test
lock
pushl
push
fldcw
lods
int3
ret
pop
das
test
mov
loope
stos
insb
ret
push
aam
inc
or
lods
out
and
mov
jg
and
cmpsl
jge
jl
inc
mov
nop
aad
loop
dec
jno
repz
cmp
dec
ljmp
push
mov
lret
and
push
mov
jle
clc
inc
movsb
insl
notb
dec
sbb
call
jbe
mov
rclb
std
ret
push
rolb
enter
lret
test
mov
and
jmp
pop
pop
cmc
mov
or
mov
loope
test
xchg
pop
stc
movsb
sbb
lcall
jle
jmp
les
test
pop
repnz
cmc
or
ret
fstpl
mov
jmp
or
into
mov
lahf
push
mov
cmp
lret
icebp
push
aaa
or
sbb
call
out
gs
icebp
cmp
jno
xchg
xorb
cli
aad
jne
pop
jmp
decl
pop
js
mov
push
pop
and
adc
mov
enter
xchg
loopne
icebp
push
rorl
andl
outsl
lods
mov
je
lcall
add
dec
jg
push
testl
mov
xchg
pop
xor
dec
imulb
int
xor
sbb
xor
aaa
fistps
pop
sbb
test
aas
jg
or
movb
jl
xor
call
mov
dec
sbb
pop
mov
rcrb
int3
cmp
cmp
jl
shrb
mov
jge
notl
icebp
inc
xchg
sbb
jo
hlt
nop
or
int3
xchg
cmc
unpckhps
xchg
pushl
push
cmp
sahf
test
in
jb
mov
es
mov
fs
out
int3
dec
sub
jmp
inc
push
lods
mov
jg
mov
mov
fiadds
pop
stos
icebp
jno
repz
xor
das
add
incl
das
movsl
scas
stc
mov
testb
incl
scas
sub
insl
or
mov
bound
fst
cmpsl
outsl
push
xor
ja
mov
or
mov
nop
iret
mov
into
enter
pop
dec
inc
mov
cmp
outsl
mov
jmp
mov
out
in
cli
sbb
pop
out
sbb
mov
push
sbb
js
test
decl
outsb
inc
stos
jl
mov
adc
inc
adc
popl
add
ficoms
test
push
xor
sbb
cmp
decl
insb
ret
mov
mov
mov
mov
loopne
test
jb
call
ljmp
cld
movl
adc
mov
test
add
ds
incl
xchg
xchg
mov
or
sub
xchg
loop
dec
call
pop
lahf
add
push
fs
divl
and
enter
imul
lcall
fsubl
mov
incl
inc
xchg
and
jp
pop
imul
jo
inc
cmp
imul
aaa
push
in
icebp
inc
mov
out
pop
nop
xor
jmp
jl
fdivrl
movsl
dec
pop
pop
lock
jl
popf
push
rcll
sub
mov
ljmp
mov
in
mov
jge
aas
fcomp
dec
xor
cld
leave
mov
dec
pushl
test
lss
sahf
dec
int3
pop
test
push
sbb
je
repnz
in
cmp
and
lcall
in
sub
insb
push
lea
push
sbb
pop
ret
mov
pushf
pop
mov
lock
std
xchg
cli
inc
pop
int3
repnz
ja
xchg
fldcw
lock
mov
jb
inc
iret
push
or
fistps
negb
xchg
add
sbb
dec
mov
mov
cmp
mov
outsb
xor
sbb
lret
mov
sarb
pop
xchg
mov
cmp
enter
mov
aas
movsl
mov
scas
addb
pop
pop
aaa
enter
movsl
dec
jmp
pushf
movsl
in
inc
les
cltd
in
jne
mov
ret
out
stos
pushf
leave
nop
insb
add
cld
mov
mov
xchg
ret
and
jns
in
shrl
dec
mov
cmp
lcall
sub
pop
inc
pop
jns
cmp
clc
mov
pop
ljmp
xor
push
adc
loop
jg
out
dec
cmp
dec
xorl
stos
lret
sub
jmp
test
cmp
inc
int3
pusha
xchg
rolb
pop
daa
pop
enter
lock
idiv
repnz
out
cwtl
cmp
cmp
push
mov
xchg
push
jno
stos
incl
add
xchg
lock
jmp
loopne
fwait
bound
jns
xchg
sbb
push
loop
mov
dec
push
mov
js
pop
jo
sub
push
and
ja
inc
jb
ret
mov
mov
int
out
call
movsl
dec
mov
jno
sbb
ja
lret
sbb
mov
rcrl
stc
dec
cs
dec
push
jge
xor
sub
out
test
hlt
push
lcall
mov
mov
dec
jb
lock
out
aam
inc
jo
mov
cwtl
fildl
pop
addr16
dec
adc
cmp
in
pop
mov
cwtl
add
out
test
or
dec
imul
ror
incl
adc
lahf
jecxz
adc
xchg
aaa
movntq
cmp
pop
ret
fcmovnbe
xchg
scas
das
sti
jne
jmp
stos
insl
fwait
mov
cvtpi2ps
sub
fadd
jecxz
into
adc
daa
ljmp
inc
xlat
mov
addr16
adc
insl
xor
mov
loope
jmp
cli
lods
mov
pushf
mov
pop
jnp
pop
cltd
clc
pusha
xchg
dec
xor
push
sub
push
add
dec
into
mov
out
cmp
sub
mov
mov
mov
int
cs
out
scas
int3
enter
dec
ret
pop
mov
add
adc
inc
inc
dec
je
shlb
popf
cmp
repnz
push
in
inc
adc
andl
inc
mov
sub
adc
loop
int
ljmp
dec
dec
sbb
xor
lds
popa
xchg
fdivr
outsb
mov
jg
mov
cld
ret
lcall
mov
ficomps
sbb
inc
sbb
loop
insb
ljmp
mull
into
xor
jg
pushf
jb
sahf
insl
ds
ret
fwait
pusha
out
movsb
mov
push
aaa
pop
sar
jmp
and
mov
icebp
enter
sbb
fisttpll
mov
dec
out
in
sub
insb
stos
sub
lret
ljmp
ljmp
pop
movl
pop
inc
push
sbb
ret
sub
shl
jge
sub
cmp
incl
lods
adc
xor
movsl
push
xor
lea
daa
jmp
mov
fists
cmp
add
les
xor
lcall
fs
xor
push
pop
mov
ds
rorl
adcb
ljmp
aad
test
cli
iret
inc
imull
es
jnp
xchg
cwtl
pop
xchg
mov
jle
dec
add
xor
cmc
pushl
ret
inc
xchg
mov
test
hlt
cmp
sub
jb
inc
fwait
shrb
inc
add
cmpsl
push
xchg
mov
xchg
lret
inc
jmp
jae
nop
or
adc
and
cmp
mull
cltd
pop
lea
fiadds
fwait
sbb
jbe
pop
icebp
ljmp
sbbb
sbb
pop
out
jns
push
sub
outsl
jae
push
dec
add
lcall
add
out
leave
pop
sub
subb
movsl
add
push
pusha
lcall
push
out
imul
inc
push
inc
mov
test
int3
shll
insl
test
ret
cmpb
dec
aam
roll
xchg
repz
and
cmpsb
mov
xchg
pusha
jmp
push
fcoml
ret
jg
or
and
loopne
mov
inc
pop
in
aad
cmp
mov
es
mov
fdivrs
loop
pop
insl
ljmp
xchg
and
inc
bound
or
and
lcall
insb
repz
insl
shl
dec
fimull
cmp
push
cmpsl
cmp
sti
jbe
cwtl
and
out
out
lret
sar
ljmp
inc
xor
ss
movaps
in
test
aad
fisttpll
jnp
mov
cmc
loop
jle
xchg
dec
test
pop
lret
sahf
scas
pushf
cwtl
jmp
les
fcoml
xor
xor
jmp
pusha
or
jg
push
or
xor
insl
xchg
push
inc
lea
push
std
mov
insb
pop
bound
xor
rcrl
inc
jle
jg
ret
stos
sbb
sbb
fiaddl
cmpsl
add
int3
cmp
adc
sti
mov
or
xor
pop
inc
jge
loopne
jns
pop
add
loopne
iret
in
dec
mov
adc
push
jnp
popf
fstl
inc
cli
rcrl
ljmp
dec
xlat
out
in
push
out
add
adc
dec
stos
push
insb
add
mov
sub
ljmp
push
movb
mov
rcr
rcl
lods
jns
mov
mov
imul
insb
mov
orl
push
push
scas
fcomip
xchg
test
cmp
shll
aas
dec
dec
xchg
or
inc
inc
sub
sbb
inc
pop
js
mov
std
lahf
or
imul
lods
inc
incl
dec
dec
in
mov
jnp
mov
std
xchg
mov
cld
call
iret
jecxz
incl
fs
mov
cmp
xchg
out
cmp
jl
mov
fsubrs
sarb
test
lock
xor
cmp
out
mov
add
loopne
fadds
cmpsb
scas
mov
and
fwait
arpl
pushf
mov
idivb
rorl
mov
je
pop
inc
mov
orl
jnp
call
lret
negl
or
mov
dec
insl
aam
repnz
lcall
pushl
inc
jnp
in
push
xchg
nop
movb
xor
out
shll
cmpsb
imul
dec
sar
lcall
popf
aaa
dec
stos
jns
aad
fwait
and
pop
mov
mov
and
ss
fwait
xchg
and
sbb
jmp
add
mov
scas
mov
add
es
mov
bound
xor
lcall
hlt
test
in
add
sub
add
scas
or
push
jo
jg
jg
fcoml
cmp
cltd
jbe
cmp
lcall
lods
out
lods
lahf
ds
loop
push
aam
lret
aaa
int3
mov
mov
push
cmpsb
ja
pushf
js
cmc
popf
xchg
shrl
xchg
outsb
decl
frstor
mov
fdivs
aas
roll
fwait
add
movsl
sbb
leave
xor
out
mov
rcll
stc
lcall
outsb
dec
sbb
outsl
and
adc
mov
and
aam
jg
insb
sbb
sub
gs
stos
adc
dec
outsb
inc
les
inc
rorb
enter
js
test
mov
fldenv
aaa
xor
enter
std
ljmp
or
lock
add
xlat
cli
dec
ljmp
cmp
xchg
fistpll
mov
jns
mov
sbb
mov
mov
and
movsl
fwait
dec
mov
inc
push
mov
jl
sar
xchg
mov
lret
inc
je
out
dec
jbe
fldcw
inc
jno
add
add
incl
jp
jp
add
out
sbb
nop
decb
mov
fists
push
mov
nop
idiv
add
mov
aas
mov
jle
hlt
sub
dec
mov
pop
pop
cmp
test
mov
std
stos
or
cmp
test
sbb
push
out
aaa
inc
clc
push
loope
popf
mov
into
fists
cmpsl
mov
jmp
fdivrs
in
lahf
repz
aad
loope
pop
push
jp
lds
sbb
inc
std
call
repnz
test
dec
pop
mov
addr16
test
sub
push
cmp
mov
imul
mov
cmp
jbe
cs
lcall
faddl
mov
sbb
mov
mov
lcall
ljmp
push
pop
inc
test
mov
or
xchg
aam
jmp
in
cmpsb
pop
fldt
mov
and
mov
jbe
dec
mov
or
push
fisubs
fcmovnu
pop
lcall
decl
cmp
add
xchg
xchg
lods
bound
xor
dec
out
inc
leave
bound
dec
mov
push
adc
xchg
pop
or
je
js
xor
jmp
sarb
pushl
sarb
imul
dec
pusha
mov
mov
mov
incl
rorl
popf
cmp
cmp
jle
xchg
sub
fxtract
int
aam
xchg
sarl
sub
dec
sbbb
jg
adc
and
jno
movsb
lds
mov
dec
cmp
decl
sti
imul
or
adc
arpl
mov
add
mov
shll
outsl
xor
stos
mov
jge
je
push
xor
jmp
fistl
sub
std
pop
sub
xchg
std
in
add
data16
outsb
mov
sbb
or
adc
incb
add
mov
add
dec
jg
loopne
fadd
push
movsb
jno
pusha
out
mov
inc
je
pop
adc
bound
ljmp
jmp
outsb
jnp
push
popl
inc
pop
setae
jae
jae
sub
scas
push
sub
incl
dec
out
xchg
cli
in
pop
leave
mov
sub
mov
add
xor
push
bnd
push
ljmp
mov
les
lea
aam
out
sub
push
jns
loope
adc
mov
push
or
rcll
or
jae
adc
jp
loopne
dec
clc
pushl
lock
pop
js
popf
xor
mov
daa
pop
mov
pushf
loopne
mov
in
lock
jecxz
cmp
lret
imul
decl
xor
ret
pusha
cmpsl
lcall
push
cs
clc
adc
cmc
decl
mov
add
push
mov
mov
mov
ds
pushl
or
add
xchg
rorl
inc
mov
mov
jg
ret
or
into
stc
ja
sub
or
xor
dec
out
jnp
mov
push
push
call
add
cwtl
cmp
jo
insb
enter
call
pop
insl
int
lods
xchg
push
iret
in
clc
xor
in
adc
dec
and
jmp
ret
mov
xor
cmpsb
sub
jbe
movsl
push
enter
adc
fnstcw
jno
inc
inc
push
mov
mov
in
or
test
jg
movsl
loop
imull
pop
daa
push
sbb
aaa
ret
dec
xor
iret
popa
jns
mov
jns
test
sbb
jmp
leave
lret
icebp
push
ret
dec
dec
mov
or
mov
icebp
mov
sub
ljmp
std
out
leave
repz
aas
and
pop
add
sub
lcall
sub
fdivr
ljmp
mov
cmp
lcall
call
dec
out
or
mov
in
mov
fsubrp
aam
and
data16
cld
roll
hlt
les
cs
push
lods
push
push
decl
data16
int3
dec
pop
test
decb
lods
mov
jae
clc
push
xchg
stos
pusha
call
incl
mov
mov
in
inc
add
cmp
out
mov
pop
shlb
mov
dec
cmpsb
loopne
jmp
aaa
push
pushl
cltd
std
fistpll
or
add
inc
push
dec
and
pop
and
adc
mov
mov
call
mov
mov
pop
jne
lods
in
enter
gs
push
mov
cmp
call
pop
test
pop
mov
je
ljmp
pop
xchg
mov
push
jl
mov
andb
jg
push
pusha
and
dec
jmp
jo
mov
sar
mov
in
jl
aaa
je
movsb
pop
inc
xor
mov
incl
aam
add
or
fs
imul
in
cmp
xor
out
inc
sub
jae
repz
in
sbb
testb
loopne
add
jmp
lods
push
jmp
ficoms
nop
and
xchg
loope
es
pop
pop
jne
out
sbb
mov
ret
add
cmp
icebp
jbe
mov
pushl
mov
jo
test
pop
add
pop
mov
and
push
std
xchg
pop
movsl
ret
data16
inc
repz
addr16
jmp
out
xchg
jne
jge
adc
adc
dec
pop
imul
clc
je
push
call
std
out
jle
sub
sub
cwtl
or
roll
cmp
mov
mov
ja
inc
xchg
stos
jb,pt
jmp
imul
out
popa
movsb
stos
sbb
inc
into
sarb
push
push
and
jns
clc
pop
mov
loop
and
pushf
xchg
push
ja
push
push
pop
or
jecxz
xor
clc
mov
xchg
pop
mov
das
jbe
loop
cmp
or
jb
outsb
in
fisubrl
rol
jmp
push
out
inc
in
popf
movlps
cmp
inc
xchg
adc
sbb
shl
ss
xor
icebp
decl
inc
testl
ljmp
shlb
js
lods
dec
stc
lahf
sbb
hlt
repnz
jg
lea
or
je
das
clc
decl
jb
fcmovu
jnp
stos
imul
or
jg
push
jbe
stc
in
cmp
fidivl
lea
mov
dec
dec
iret
daa
pusha
sar
jno
popa
inc
gs
jmp
cs
sbb
jne
sbb
in
mov
inc
es
in
and
cltd
je
fdivrp
decl
push
add
xchg
add
leave
daa
jne
scas
fstps
cmpsb
rorl
inc
pop
add
push
scas
pop
jns
cmp
mov
inc
sahf
imul
xor
cmc
ljmp
sbb
movsl
jecxz
pop
jb
add
lahf
or
mov
mov
cmp
pop
cmp
inc
or
jmp
outsl
addr16
incl
jmp
lahf
add
icebp
pop
jge
or
and
and
jge
negb
call
pop
adcl
adcl
xchg
xchg
cltd
fsts
lock
push
adc
ret
sub
ljmp
notl
addl
mov
lret
jb
icebp
cmp
jno
sti
mov
insb
ja
dec
push
andl
mov
ficoms
outsl
in
pop
add
movsb
dec
aam
or
ljmp
mov
sub
int3
iret
adcl
inc
sar
test
cs
ja
mov
push
std
mov
out
iret
mov
push
scas
fdivl
add
push
push
push
and
decl
repz
imul
imul
add
hlt
out
adc
jmp
fisttpll
cs
mov
dec
pop
sti
mov
enter
push
cs
ret
mov
sarb
notl
mov
popa
jl
lcall
fcomip
stos
push
pushf
mov
shll
in
sbb
test
ljmp
xchg
fbld
lods
lcall
push
rclb
aaa
aam
push
xor
adc
jmp
nop
lods
adc
movsl
stos
rcrb
inc
cmp
loope
cmc
xchg
in
movsb
inc
push
dec
mov
mov
js
mov
mov
dec
cmp
mov
js
dec
test
lock
test
push
in
ljmp
push
or
adc
inc
mov
mov
pop
roll
repz
fimuls
dec
rcrb
popa
sbb
ret
or
lahf
popa
aam
dec
pop
in
nop
adc
ljmp
je
push
inc
imul
sub
inc
cmp
or
hlt
sbb
test
lods
incl
xor
aad
sub
clc
sub
test
or
jmp
out
sbb
inc
insb
sti
xchg
add
dec
jbe
or
push
shll
jg
mov
pop
xchg
into
lcall
mov
test
enter
call
ja
rclb
lcall
loopne
add
dec
in
repz
adc
push
out
stc
bswap
xlat
rcr
std
insb
sbb
incl
leave
push
cmp
lock
and
ret
clc
inc
jg
int
push
dec
ljmp
pop
xchg
jbe
int
cmp
gs
inc
call
jge
ljmp
or
clc
xchg
hlt
jbe
sbb
bound
mov
xchg
lcall
addr16
jmp
das
and
pop
js
jmp
sbb
lret
sbb
add
lcall
sub
xor
out
pop
jno
outsl
aam
mov
add
lcall
xor
shll
fsubrl
jl
push
jmp
pushf
xorl
sbb
mov
mov
sub
lahf
cmp
ljmp
fsub
lret
jne
jecxz
neg
xor
gs
js
jl
inc
push
pop
aam
cmp
fwait
push
cld
dec
movsl
mov
xchg
inc
cmpsb
rclb
sbb
sarl
call
loopne
call
or
dec
cmp
call
insb
loop
pop
and
add
dec
ljmp
in
cltd
sub
push
inc
mov
jle
mov
pushf
xchg
loope
push
adc
mov
adcl
pop
lahf
adcl
or
cmc
and
jne
lock
xor
and
js
lea
fcompl
xchg
aam
jae
and
dec
mov
mov
sub
cmc
xchg
shlb
push
push
data16
xchg
mov
mov
push
or
sti
dec
fwait
movsl
cmp
sub
pop
shll
lods
adc
btc
push
cmp
cmp
push
jns
je
repz
push
fidivrl
jmp
xchg
test
dec
fists
movsl
inc
inc
jge
aaa
fimull
push
xor
mov
loopne
jg
mov
gs
sbb
inc
int3
dec
nop
pop
call
pushl
mov
sub
nop
cmp
or
stos
xchg
sbb
and
ret
call
mov
shrb
rcr
mov
inc
es
adc
call
or
xchg
sub
ja
repnz
fnstcw
loope
enter
subl
jmp
addr16
xchg
jae
inc
cwtl
popf
mov
pop
cmpb
push
loope
xchg
jbe
push
dec
mov
ror
pusha
test
fxtract
push
xchg
jne
les
and
sub
adc
lcall
sti
pushl
imul
sti
fnstenv
shrb
mov
inc
test
cmp
mov
jmp
call
enter
sub
cmp
inc
outsb
xchg
outsl
test
push
fwait
cli
xor
roll
mov
mov
jae
loop
mov
iret
or
sbb
or
lock
sar
push
push
dec
add
loop
push
or
bound
cli
jge
adc
ljmp
jmp
mov
push
push
xchg
movsl
push
push
adc
insb
repz
fwait
scas
lcall
ss
loopne
pop
mov
arpl
xchg
out
dec
xor
and
mov
mov
adc
jg
ljmp
and
dec
int3
test
sti
pusha
cmpl
cwtl
jae
inc
pushl
cld
daa
cmp
gs
cld
adc
add
mov
add
pop
mov
cmp
mov
or
fs
movsb
aas
daa
lea
jb
out
sahf
ja
jecxz
push
aas
lcall
cld
and
mov
repnz
push
or
mov
push
call
pop
je
mov
sti
mov
sub
daa
fsubs
push
js
add
pop
mov
call
lds
das
movsb
mov
in
dec
test
cmpsb
mov
rclb
shll
xor
xor
cs
pushf
or
incl
rcl
and
mov
sub
std
pop
ret
aad
or
movsb
adc
pop
out
outsl
cli
decl
mov
xchg
bound
xlat
inc
pop
mov
dec
mov
inc
fwait
and
filds
pop
push
push
jno
pop
push
or
call
shlb
jno
inc
aad
stos
dec
dec
test
inc
imul
outsl
pop
add
lcall
sarb
daa
adc
nop
inc
xchg
mov
jnp
xor
in
ljmp
jmp
fsubl
add
mov
adc
not
push
mov
hlt
in
push
addr16
testl
pop
cmp
pop
repz
push
fs
cmp
stos
call
cmp
jbe
ret
xor
std
mov
jnp
add
incl
subb
fistpl
fildll
pop
inc
jl
sbb
lods
mov
call
xchg
lret
push
lock
ret
dec
mov
inc
test
inc
mov
cld
sahf
lahf
inc
decl
ret
cmp
or
es
push
or
lods
nop
and
loopne
scas
stos
lcall
xor
nop
pop
stos
mov
js
test
mov
xchg
addl
dec
cmpsl
xchg
dec
mov
jne
push
sbb
imul
test
xorb
mov
movsl
push
call
lods
cmp
sti
cwtl
test
call
loopne
adc
fldenv
dec
jno
test
hlt
jmp
add
and
push
dec
cmc
xor
stc
or
sbb
inc
fists
sub
jle
imul
popf
inc
les
das
pop
movsb
xchg
push
sbb
lock
pop
cmp
push
lahf
daa
cmp
repnz
repnz
iret
and
ret
adc
icebp
inc
mov
sbb
testb
cmc
lahf
jp
orl
prefetcht2
movsl
xor
and
xor
jmp
inc
dec
sbb
std
pop
push
incl
iret
inc
inc
jo
add
orb
test
out
sub
popa
dec
mov
lcall
adc
jnp
cli
xchg
notl
ljmp
or
mov
push
shl
push
lret
incl
adcb
clc
gs
iret
jl
out
mov
repz
mov
inc
jnp
mov
out
jo
daa
jge
arpl
cli
dec
scas
popa
pop
fsubl
lock
sbb
mov
xor
adc
push
idivl
sbb
dec
xor
xor
cmc
mov
cmp
adc
sub
jg
popf
cs
xlat
xor
mov
lods
js
xchg
fdivs
test
aas
call
xchg
mov
std
mov
push
jo
lahf
jmp
adc
pop
pop
dec
push
daa
jno
jbe
pushf
xchg
mov
imul
fnstenv
decl
mov
mov
in
in
dec
add
ret
ljmp
hlt
dec
xor
cwtl
out
stos
les
jp
out
push
pop
jmp
sbb
stc
in
scas
rcll
mov
push
out
sub
pop
leave
pop
pushf
int
das
clc
call
jae
cmp
int3
adc
pop
incl
push
dec
xor
adc
pop
pushl
clc
or
mov
mov
xor
lods
repnz
jmp
dec
pmaxub
sahf
mov
xor
ljmp
nop
xchg
bswap
pop
hlt
rolb
dec
add
xchg
iret
insl
cmc
leave
inc
add
pop
int
sub
shl
addr16
mov
shll
mov
aam
ss
jl
subl
pop
cmp
inc
mov
gs
adc
in
xchg
jge
aad
and
cmp
pusha
and
cltd
sub
mov
cmp
repz
cmpsb
jb
stos
jg
call
xchg
xor
push
loopne
sbb
push
add
test
push
lahf
pop
pushl
out
sub
mov
push
mov
and
inc
push
pop
xchg
test
aas
sbb
lcall
ljmp
add
jb
sbb
sub
ljmp
mov
cwtl
mov
test
xor
lahf
cmp
pop
test
cld
sub
lcall
inc
xchg
test
sub
rcrb
adc
shll
popa
pusha
das
cmpsl
lret
pusha
adc
test
jne
mov
push
lods
fmull
push
cli
fs
movsb
fwait
mov
xor
stos
ljmp
cmp
movsb
add
mov
daa
mov
adc
mov
stos
sbb
decl
jns
mov
xor
test
popa
je
scas
mov
cmp
repz
mov
lods
ljmp
mov
sbb
cmp
push
xor
pop
fsubrs
lahf
mov
jmp
jno
pop
push
mov
adc
pop
pop
cs
adc
add
rol
and
cmp
pushl
pop
js
outsb
fcomi
xchg
out
lea
sub
mov
adc
popa
jge
add
decl
adc
test
test
movsb
popl
stos
adc
jl
jns
or
or
lds
jb
andb
add
jmp
popf
mov
std
inc
ja
je
rcll
incl
add
adc
cmpsl
cld
or
inc
or
adc
add
cmp
jl
lcall
aad
push
fsub
xor
xchg
jnp
enter
mov
das
mov
add
pushl
rolb
mov
sub
das
test
inc
orb
dec
je
cmp
mov
call
cmp
add
pushf
clc
adc
scas
out
and
int
jg
call
aad
outsb
in
stc
hlt
in
fcomp
inc
lret
sbb
fcomp
push
je
in
pop
cmp
mov
test
jno
jmp
or
dec
mov
std
pushl
js
sbbb
mov
cmpsl
mov
sub
aaa
add
mov
cwtl
xor
daa
jmp
enter
dec
imul
outsb
sub
mov
in
loop
cmp
sbb
inc
incl
cs
mov
jbe
hlt
cld
jnp
add
sub
call
adc
jne
push
cmc
inc
sbb
lds
cmp
jl
sarl
ljmp
negl
bound
or
subl
cmp
dec
adc
sbb
pop
inc
pop
push
ljmp
push
out
pop
stos
xchg
loopne
add
xchg
jp
jg
pushl
jl
sbb
pushf
jne
divb
insl
jno
mov
fmuls
inc
xchg
jecxz
aas
imul
inc
sbb
jp
je
mov
stos
call
insl
fdivs
mov
adc
test
lret
nopl
rcll
push
fisttpl
stc
jne
inc
fimull
pop
jle
pop
dec
cli
push
aaa
cs
aad
or
in
mov
cld
mov
and
orps
popa
call
popa
mov
les
aaa
mov
xchg
adc
adc
mov
test
ret
mov
sbb
add
inc
out
mov
lock
ss
stos
movsb
cmp
in
pushl
cmp
xor
sahf
aas
fstps
push
push
jp
inc
arpl
dec
xor
add
ljmp
andb
xor
mov
notb
imul
hlt
mov
ljmp
js
outsb
inc
mov
scas
mov
adc
sub
mov
inc
nop
sub
and
sbbl
out
jle
cltd
popf
jp
dec
into
mov
jge
mov
aaa
enter
or
stos
ja
mov
neg
sarb
dec
mov
adc
xor
call
jecxz
mov
sbb
pop
daa
lock
lods
cmpsb
pop
jle
dec
outsl
cli
sub
call
jl
popa
push
sahf
mov
jae
mov
xor
addl
jle
bound
dec
lcall
pop
fnstsw
nop
sbb
out
popa
leave
adc
repz
push
call
pop
lods
iret
mov
and
jno
push
push
ljmp
jecxz
push
xlat
jno
in
push
lea
hlt
xlat
mov
xchg
bswap
sahf
iret
sbb
or
push
mov
add
xchg
inc
shll
les
push
cmove
dec
inc
dec
sbb
ret
data16
rorl
inc
fstpt
je
mov
push
mov
iret
pusha
repz
das
in
es
inc
call
mov
cmp
inc
lods
out
xchg
inc
mov
movsl
mov
mov
mov
pop
movl
call
xchg
pop
sbb
lret
aad
iret
jnp
pushf
jmp
lret
rcll
es
ljmp
incl
and
scas
jo
dec
mov
xchg
dec
fsubs
es
mov
inc
cmc
fildll
call
cmpsl
aas
pop
ds
orl
dec
movsb
cwtl
ljmp
je
push
hlt
test
or
mov
mov
and
adc
sub
ss
in
call
sub
dec
xchg
push
xlat
daa
in
mov
aam
xchg
lea
loop
cmp
mov
and
sbb
mov
dec
int3
insl
cmovb
nop
aad
repnz
bswap
push
xor
or
dec
pushf
add
xor
lods
mov
push
or
push
cmc
or
sbb
push
lods
insl
pusha
xor
aad
add
out
in
rolb
sub
ljmp
jb
and
ret
mov
call
sbb
das
and
cmp
icebp
inc
fcompl
xchg
out
inc
js
stos
pop
call
arpl
out
jne
dec
sti
push
sbb
fistl
xchg
jb
lods
and
mov
outsl
lock
xor
sahf
jmp
sub
out
dec
je
inc
cmp
aam
mov
pop
decl
daa
jbe
or
test
fiaddl
adc
or
xor
loopne
aaa
pop
dec
cmp
adc
mov
stos
xchg
xor
xchg
rcll
jbe
xchg
lcall
aad
test
test
adc
lods
xor
std
call
daa
out
lea
hlt
jae
test
into
pop
mov
loope
cmp
jbe
jae
dec
lods
mov
sub
pushl
outsl
popf
and
insb
pop
jecxz
insb
stc
cmp
mov
loopne
js
mov
xchg
mov
pushl
cmpsl
loop
out
jae,pt
dec
out
out
jge
and
repz
cltd
stos
rolb
and
outsb
ljmp
call
pop
or
and
ret
movsb
shlb
dec
cld
sbb
push
mov
call
and
lret
fisubrs
pop
sub
insl
pop
arpl
mov
jge
int
push
imul
sub
xchg
add
inc
sub
in
je
je
jnp,pn
pushl
push
ret
sub
mov
pop
dec
sub
sub
push
cmpsl
dec
ja
or
cmp
lcall
hlt
dec
out
into
adc
repz
jg
jl
adc
outsb
xchg
adc
and
fdivs
cmp
dec
call
loopne
xor
cmp
dec
lods
test
pushf
test
jmp
test
push
inc
mov
pop
jecxz
mov
lret
cmp
lcall
fsubs
scas
aas
lahf
sbb
sub
jle
lds
cli
or
cmp
and
inc
loop
mov
xchg
or
push
mov
push
fsubr
es
pop
adc
sahf
mov
mov
cmp
push
jl
add
mov
fwait
mov
stos
decb
sub
fimull
add
jecxz
data16
mov
sub
inc
jmp
scas
push
sub
jns
cwtl
xlat
sub
jnp
lea
call
jg
ljmp
mov
fisubrl
test
xchg
pop
inc
xor
pushf
xchg
dec
pop
adc
jmp
test
mov
and
ljmp
inc
jns
mov
inc
filds
in
cltd
loope
add
pushl
xchg
aas
add
and
sub
push
lcall
daa
mov
pushf
dec
sub
jb
mov
bound
xchg
call
push
mov
add
pop
mov
movsl
inc
std
pop
lcall
bound
sbb
sub
pushf
in
inc
dec
shll
jl
lcall
push
push
lock
push
jae
pop
mov
xor
cmpsl
inc
push
fiadds
jp,pn
ljmp
xchg
lret
cmp
int
xchg
dec
test
pushf
jp
dec
fdivrp
incl
test
push
ss
push
inc
cmp
inc
or
enter
add
daa
flds
dec
mov
test
ret
mov
push
decl
sbb
cmp
and
add
pop
jo
sub
test
loopne
jmp
and
out
push
adc
push
hlt
test
or
lods
shlb
rcrb
xchg
ljmp
data16
or
sbb
add
bound
and
int3
pop
cmp
pusha
jo
add
inc
int
ljmp
inc
cmp
adc
pop
pop
js
loop
sub
repz
cld
decl
inc
arpl
bound
nop
in
sub
ja
jmp
push
pop
pop
loopne
xchg
incl
or
mov
dec
int3
add
jp
mov
sar
loop
jmp
incl
pop
aam
sbb
mov
mov
rorb
repnz
cmp
ret
int3
fs
ljmp
jno
cwtl
cltd
lea
sti
insb
test
testl
mov
stc
push
fisttps
fcmovu
nop
dec
dec
xchg
das
push
out
push
in
mov
adc
loopne
incl
pop
daa
xchg
mov
fnsave
jbe
cmpsl
jg
repnz
pushl
lods
loope
dec
lds
push
pop
fmuls
fistpl
pop
and
rcrl
and
cld
js
stos
sub
pop
inc
adc
fs
xchg
sbb
pop
jp
fadd
pop
ret
cmp
clc
pop
inc
lahf
lods
inc
xor
shlb
mov
fdivrp
ljmp
push
fwait
sahf
fldt
shll
xor
sub
inc
push
aaa
push
adc
inc
push
cld
mul
clc
call
hlt
inc
jg
stos
les
cmp
xor
pushf
aas
data16
test
aaa
push
ret
dec
movsb
fsubl
add
xor
movsb
mov
xchg
adc
popf
pop
addr16
das
lcall
xor
jmp
cld
inc
enter
adc
jno
cwtl
mov
mov
loop
imul
pushl
mov
popa
inc
in
xor
or
insl
cmp
in
xchg
cld
call
scas
cmc
xchg
js
mov
dec
pop
cmp
bound
add
and
fdivr
imul
adc
lods
cmp
sub
fdivrs
jle
jbe
cmp
mov
jp
xchg
orb
mov
pop
lods
jnp
lret
shll
dec
in
xchg
pushl
jg
pop
ds
mov
mov
inc
lret
mov
and
cli
lcall
mov
shlb
mov
dec
sbb
js
fld
fistpl
stc
sbb
mov
sbb
inc
and
jae
pop
xorb
lret
jae
add
jmp
fildll
mov
xor
mov
inc
sahf
mov
push
lcall
fwait
mov
adc
popf
ss
repz
adc
fldt
add
insb
addb
aad
jecxz
leave
sbb
movl
iret
inc
cmp
jg
jle
fsubs
cs
ss
push
push
jo
dec
jo
out
inc
lar
pop
pushl
imul
test
fistps
dec
xchg
pop
test
pop
in
pop
js
dec
rcl
popa
sub
mov
sub
jecxz
shr
or
jmp
pop
aam
jns
les
xor
mov
jbe
fisubrl
cmp
mov
jbe
cmp
fsts
clc
pop
iret
cmpsb
mov
mov
dec
clc
sbb
andb
mov
jno
sarl
sbb
ljmp
jnp
out
push
cmp
data16
or
or
jbe
adc
xchg
cmc
ljmp
dec
testb
fidivl
inc
fists
pop
flds
in
push
add
imul
call
xor
lods
sti
rorl
mov
les
xchg
add
icebp
or
call
jo
orl
js
shlb
add
add
fstpl
les
cmc
int
test
or
iret
lret
test
mov
cmp
cld
lods
leave
movsl
outsl
or
and
rcrb
inc
adc
incl
or
push
or
rcrb
testb
and
dec
enter
mov
jmp
into
sub
ror
cmpsb
or
lret
jno
and
cwtl
mov
pushl
cmc
test
add
mov
jbe
je
mov
or
in
jbe
mov
out
es
push
js
lock
notb
push
inc
mov
jae
mov
mov
cmpsb
pushf
lock
sbb
cs
adc
test
and
loop
sbb
xor
push
gs
mov
adc
lods
popa
add
xchg
inc
cltd
out
pop
jp
mov
pop
mov
in
jno
enter
xlat
xchg
cwtl
stos
adc
mov
sub
incl
jge
sbb
or
cmp
pop
mov
push
jmp
es
xchg
lcall
mov
icebp
inc
and
adc
decb
daa
sbb
imul
lret
cld
or
sarl
jp
test
xchg
repnz
cmp
fs
and
adc
lods
mov
hlt
sub
jae
ficomps
add
jmp
mov
cmp
js
ja
movsl
cmc
in
sub
into
fxrstor
adcl
or
mov
insl
xor
cmpsl
add
jg
pushl
add
mov
setl
leave
cmp
into
sbb
pushl
xor
pusha
into
pop
adc
lahf
stos
adc
or
loopne
and
lcall
or
jnp
mov
movsb
movzbl
das
lret
push
mov
xchg
push
out
adc
inc
or
iret
cmp
in
xor
mov
lret
cmp
scas
jnp
lds
lcall
iret
shlb
pop
adc
sub
dec
adc
jmp
arpl
sub
data16
jmp
inc
pusha
and
and
aas
aam
adc
rorl
sub
add
cmp
cmp
call
loope
lea
outsl
and
mov
fsts
jmp
sahf
jmp
mov
in
rcl
xorl
rclb
sub
arpl
sbb
ljmp
inc
push
push
dec
nopl
sbb
int3
sti
les
mov
sbbl
daa
data16
push
ja
out
pushf
loop
jmp
fs
mov
push
pop
sub
aaa
and
insb
fs
dec
mov
loope
inc
ljmp
decl
test
aam
cli
ficoms
mov
dec
scas
push
test
sbb
mov
mov
mov
mov
outsl
and
pop
into
stc
adc
out
cmp
ljmp
xor
in
jns
mov
xorl
cmpsl
jecxz
sahf
push
pop
decl
shll
jae
mov
cli
popf
sbb
mov
add
clc
adc
aas
adcb
and
aad
push
xor
sub
cmp
lcall
xor
add
leave
sbb
je
adc
jne
mov
inc
cmp
lcall
mov
inc
xchg
adc
pop
int
adc
push
add
adc
cld
and
adc
xchg
aas
jmp
inc
inc
enter
aas
mov
je
out
inc
stos
xchg
pop
aaa
stos
ljmp
lahf
fsubrl
ret
dec
fwait
in
push
xor
fstl
into
mov
xchg
decl
in
mov
push
test
push
lods
xor
push
or
cmp
inc
repz
in
loop
mov
mov
aas
out
xchg
sbb
mov
add
adc
imul
add
pushl
imul
add
xchg
cmp
cli
mov
adc
pop
inc
lahf
xchg
add
ja
xchg
sbb
adc
std
add
pop
data16
jmp
push
or
in
pop
loopne
mov
mov
add
inc
call
lret
adc
inc
sbb
mov
jmp
je,pn
arpl
pop
sub
mov
aad
es
gs
out
int
xchg
cli
lds
ficoms
ljmp
loope
frstor
out
jne
jb
arpl
add
clc
and
xchg
cwtl
iret
jl
lock
cmpsl
xchg
push
push
fxch
mov
aaa
or
jbe
mov
lcall
xchg
imul
sbb
and
enter
dec
imul
lods
inc
fcomip
decl
mov
aaa
jge
jle
lods
or
dec
mov
xor
in
jmp
mov
neg
xor
jg
xchg
test
adc
xchg
adc
mov
push
fcomip
xor
shll
ss
mov
data16
lcall
mov
push
jg
in
gs
rcll
aaa
dec
in
push
and
dec
adc
fcomip
ljmp
adc
mov
xchg
rclb
loop
in
cmp
jns
ljmp
jns
cmpsb
jbe
in
mov
bnd
sub
pop
divl
lods
cld
lret
mov
mov
fnsave
sub
inc
popf
jl
mov
push
cmp
das
mov
ljmp
jle
or
mov
jp
mov
je
mov
js
push
movsb
inc
jo
jle
decl
and
cwtl
xchg
push
push
outsb
mov
incl
inc
sbb
decb
aam
or
and
sbb
and
mov
and
nop
scas
dec
dec
dec
je
fcmovbe
push
xor
mov
jge
jecxz
inc
mov
mov
les
jne
stc
cmp
leave
fidivs
repz
cmp
xor
push
xchg
or
pop
subl
xchg
mov
mov
ret
push
loopne
jl
jmp
shl
daa
sahf
pop
mov
dec
imul
cmp
cmpb
out
data16
or
dec
add
inc
cmp
orb
pop
add
insl
ret
dec
or
or
pushl
rol
add
and
aam
push
mov
mov
and
jb
xchg
add
fs
test
mov
pop
sbbb
imul
lcall
sti
jb
aad
in
push
fidivrs
mov
arpl
js
cmp
jge
hlt
call
out
movsb
fwait
loope
xchg
loope
bound
sbbl
sbb
xor
fbld
imul
pusha
dec
inc
outsb
sbb
divl
cmpsl
pusha
addr16
mov
and
ret
dec
fcomip
lcall
mov
stc
mov
data16
pop
inc
lcall
and
xchg
mov
inc
mov
inc
in
cmpsl
mov
das
les
ret
ljmp
sbb
into
adc
fwait
pop
mov
lock
aad
sbb
push
ret
call
mov
daa
orb
jnp
outsb
decl
mov
mov
mov
inc
out
adc
insb
and
xor
lret
xor
pushl
ret
insb
sbb
leave
lret
adc
jmp
lea
push
jnp
pop
xor
dec
pop
jns
mov
pushl
inc
or
adc
xchg
dec
cld
jno
lods
mov
mov
push
call
and
test
and
mov
inc
sub
mov
lcall
mov
fldcw
popa
test
scas
xchg
int
inc
mov
repz
jecxz
pushl
jns
dec
iret
shll
dec
push
add
lcall
jg
aam
sub
addb
leave
inc
std
cmp
jnp
sbb
hlt
insb
arpl
lcall
xlat
call
jne
int3
xor
inc
fcomps
jge
sbbb
mov
xor
mov
cmp
jne
xor
test
fs
sar
pushl
sbb
adc
aas
mov
mov
repz
xor
scas
mov
fs
aad
out
cwtl
das
clc
jg
inc
cmpsl
test
jp
fcoml
mov
icebp
dec
mov
jno
lret
cmp
arpl
decl
aam
sub
inc
xor
xchg
and
jge
add
mov
push
incl
mov
or
sub
jo,pn
cmpsl
test
fmuls
sbb
push
inc
cmp
outsl
mov
mov
inc
mov
or
dec
inc
out
call
out
decl
fisubrl
sub
push
dec
cmp
add
pop
cmpsl
add
movsb
or
ljmp
cmp
mov
aas
daa
xor
fiaddl
mov
sahf
fbld
sahf
and
lcall
pusha
sub
outsl
mov
popf
pop
mov
aam
not
sbb
stc
stc
mov
adc
cwtl
fs
ret
cmp
ljmp
and
int
fwait
dec
adc
std
cmc
popa
imul
fiaddl
out
ds
add
mov
jb
dec
imul
das
fmulp
or
ja
aad
incl
cmpsb
das
pop
leave
fildl
push
mov
mov
nop
jmp
and
jmp
or
and
sub
pop
mov
pop
cmp
lcall
jo
loope
sbb
into
inc
std
mov
cmp
and
hlt
dec
push
inc
xor
inc
hlt
fsubr
xchg
pop
cld
incl
mov
pop
clc
or
cltd
sbb
out
dec
mov
add
rorl
add
mov
jmp
aaa
or
inc
lret
jb
sub
adc
cmp
nop
mov
and
fldl
xor
call
and
cltd
push
lcall
pop
add
pop
pop
test
lea
mov
pop
ljmp
cwtl
outsl
into
mov
rol
xchg
in
pop
fdivrs
inc
cmpsb
xor
xchg
pop
popf
rcr
call
mov
outsl
movsl
leave
sub
ret
cmp
inc
pop
cmp
mov
repnz
clc
dec
sbbb
mov
inc
jne
out
aam
jns
out
aas
mov
shlb
dec
mov
cmp
mov
jb
add
js
sbb
sarl
sub
decl
adc
sbb
cmp
popa
mov
test
dec
js
lods
dec
or
fimuls
pop
mov
sub
sbb
pop
mov
addb
movsb
pop
lea
in
xchg
pop
push
frstpm(287
lcall
xor
xchg
adc
cmp
add
xchg
ret
addr16
and
decl
sub
shll
or
inc
js
lahf
loop
push
add
add
pushl
ret
scas
repz
mov
and
lds
jg
mov
adc
in
dec
push
mov
push
jmp
mov
fcmovnu
out
test
cmp
int
mov
jl
stc
jle
adc
adc
incl
dec
push
xor
jae
cmpsl
xchg
jmp
or
loope
add
cmpsb
jmp
mov
xor
fbld
ja
push
cmpsb
bound
mov
cltd
cmc
hlt
inc
lods
dec
ds
jp
incl
sti
pushf
and
and
cmp
fisubrs
shlb
jmp
xlat
paddd
add
cld
and
gs
mov
loope
xor
incl
dec
adc
test
js
lea
loop
jg
mov
jne
xchg
xor
mov
incl
pop
xor
fisttpl
pop
inc
mov
mov
or
jecxz
mov
cvtps2pd
jno
mov
outsl
jl
mov
jno
and
int3
adc
mov
cmp
scas
out
nop
push
daa
mov
mov
sbb
pop
push
jmp
ja
xor
stos
loopne
jb
aas
aam
cmp
pop
popf
push
jge
fldl
mov
cld
dec
aas
mov
int
pop
subl
js
push
mov
or
rcrb
add
call
push
adc
inc
sub
rorb
sahf
pusha
cmp
pushf
jg
push
adc
imul
mov
jno
das
fwait
lcall
lahf
push
ljmp
cmpsl
fcomps
push
int
jae
adc
ljmp
adc
call
mov
movsl
mov
jl
inc
add
call
add
js
push
push
adc
daa
mov
mov
arpl
jp
iret
test
adc
dec
imul
pushl
gs
and
pop
inc
loopne
call
pop
cmpsl
lret
sahf
loop
pop
imul
sar
jge
lods
ret
repz
jbe
enter
mov
pop
jne
addr16
test
mov
in
dec
hlt
cltd
loop
insl
push
test
xor
fistps
scas
out
icebp
daa
jg
lcall
jb
std
ljmp
sub
pushf
jb
xor
data16
cmp
call
mov
sahf
inc
xchg
enter
out
push
add
mov
mov
cli
cmp
xchg
scas
std
xor
mov
dec
subl
shll
pushl
std
outsl
and
inc
test
lahf
mov
nop
mulb
dec
add
sbbl
lcall
imul
inc
stos
or
jmp
pop
or
inc
repz
inc
dec
sar
jmp
lods
in
rolb
push
mov
divb
cmp
jp
or
repnz
decl
js
push
mov
arpl
ret
cmp
mov
jb
mov
decl
push
sub
addr16
xor
xor
jge
xchg
inc
add
xor
cld
push
decl
mov
and
in
push
pop
sub
push
pushl
test
mov
jg
enter
fcomip
jmp
sbb
jge
add
cwtl
lahf
imul
mov
ss
arpl
fsubl
lea
sub
loopne
cmp
ljmp
adc
hlt
mov
adc
into
sub
jmp
mov
out
xor
sbb
jecxz
out
out
outsb
je
stc
imulb
jle
gs
mov
xchg
sbb
mov
adc
mov
sbb
jmp
xor
pusha
cmp
xchg
jecxz
int3
jbe
test
rorb
mov
sar
jmp
daa
enter
icebp
pop
add
add
xor
add
ret
mov
test
incb
mov
out
into
lcall
sub
rorb
stos
fildl
jl
inc
stos
xchg
out
mov
jno
mov
daa
aas
xchg
pop
push
xor
mov
js
ja
arpl
xor
jno
movsl
icebp
enter
mov
push
call
add
dec
add
jo
iret
dec
or
jp
fisubl
lret
jne
aam
pushf
enter
inc
jmp
int3
cmp
lcall
adc
icebp
imul
jg
lahf
jo
jge
sub
in
test
mov
xor
sub
mov
rcl
or
jmp
jg
sub
pushf
rol
lret
and
call
jmp
mov
cmpb
mov
pop
int
nop
push
fimuls
cmp
add
popf
push
mov
mov
pop
jl
ret
add
cmp
xchg
xor
dec
adc
pop
imul
rorl
and
hlt
lea
movsl
ja
adc
sbb
outsl
imul
and
clc
std
insl
mov
adc
adc
adc
or
sbb
inc
xchg
movsb
mov
inc
call
push
jno
fcomp
insl
jns
xchg
das
aam
add
dec
mov
and
in
cs
jae
cmpsl
ret
adc
test
bound
cmp
mov
pushl
xor
mov
js
in
cmpsb
nop
popf
test
int
dec
mov
shr
outsb
test
decl
lret
andl
test
cmp
sub
fdivs
mov
sbb
lcall
xor
mov
aam
daa
xchg
outsb
aad
call
mov
and
bound
clc
ljmp
xchg
arpl
add
jns
jmp
lcall
xchg
and
pop
cmc
or
push
cwtl
pop
cmp
rcrb
xchg
ror
incl
mov
add
push
xor
pop
mov
es
fdivl
inc
mov
dec
rclb
jle
ljmp
sar
shll
lret
jnp
imul
test
push
in
mov
push
xor
mov
lret
pushf
and
mov
pop
mov
sbb
jbe
sbb
lahf
jmp
adc
mov
add
or
dec
mov
inc
lods
pop
insl
lea
mov
add
pushl
les
insb
sub
mov
and
push
mov
cmpsl
adc
stos
movsl
mov
mov
popa
xor
jne
jl
ror
dec
mov
jmp
pop
call
pop
pushl
or
or
icebp
xor
adc
add
shr
leave
jmp
xor
push
adc
sbb
cwtl
push
pop
jns
mov
dec
out
rclb
dec
add
cmpsb
test
outsl
inc
xchg
pop
dec
and
xor
dec
xchg
imul
pop
and
mov
nop
mov
mov
out
adc
push
call
negl
jnp
and
pushl
and
ja
mov
not
jnp
xor
or
notb
mov
sar
adc
jge
cmpsb
mov
inc
cmc
add
adc
incl
clc
and
adc
sub
scas
mov
jae
mov
in
xor
push
jle
cmp
pop
shlb
shlb
push
mov
add
jecxz,pn
call
mov
scas
cwtl
and
add
add
fsts
mov
ljmp
fnsave
add
pop
hlt
dec
add
in
ss
sub
ljmp
and
jo
jg
aam
sbb
ja
mov
jae
xchg
and
push
stos
outsl
insb
add
decl
outsb
bound
mov
mov
sub
sbb
xchg
decl
jge
fcmovnb
lcall
and
test
cmp
lahf
lock
jg
ss
inc
or
xor
xchg
xchg
mov
mov
dec
mov
mov
decl
pop
lock
mov
add
data16
lods
push
pop
icebp
int3
xor
adc
lcall
ljmp
pusha
jb
add
mov
out
mov
jmp
mov
dec
bound
mov
cmpsb
jnp
cltd
gs
orl
add
mov
or
inc
dec
int3
pop
in
pop
pop
cmc
cs
movl
in
pushl
cmp
fdivrl
into
push
pop
addr16
inc
sbb
shll
push
jmp
subb
ds
jmp
scas
lahf
and
xchg
mov
mov
scas
xchg
mov
lcall
sbb
repz
out
fucomip
out
jo
add
sub
add
mov
pushl
dec
jbe
jge
or
sbb
inc
jge
imull
mov
lahf
ss
jmp
push
aam
push
pop
loope
mov
pop
cmp
jno
bound
addb
dec
loopne
loopne
mov
fs
clc
push
iret
cli
and
cmp
int3
call
sbb
imul
pusha
ret
insb
pop
push
int3
dec
lds
idivb
add
push
mov
sbb
sti
pop
xlat
mov
push
add
jmp
sbb
jg
jne
inc
jno
iret
sub
xor
pop
sub
sbb
cmp
rclb
mov
jg
incl
push
das
or
inc
cwtl
lcall
negb
pushl
xchg
bound
mov
pushf
mov
sub
andl
call
hlt
arpl
sub
cmp
int3
addb
cmp
mov
sbb
stos
mov
ret
aad
cmp
mov
dec
ja
xchg
fdivs
incl
daa
movsb
ud0
shlb
lret
xchg
mov
pop
dec
ja
mov
call
xchg
in
push
add
loop
js,pn
jg
adc
cmpsb
enter
out
mov
fisttps
mull
addl
inc
push
push
pop
sti
jmp
fstp
lcall
add
test
pop
ljmp
jl
push
or
in
fisubl
xchg
mov
repz
clc
jmp
out
pushf
push
cwtl
das
and
imul
out
movb
jecxz
push
sbb
jg
sub
adcb
dec
jg
cld
jmp
mov
lret
jp
sti
mov
cmp
or
fimuls
fsub
mov
sub
xchg
xor
add
xchg
stos
cmp
lret
jo
jp
jg
call
lds
fsubrl
adc
fimull
out
inc
stc
mov
mov
into
and
adc
mov
aad
adc
shll
xchg
ds
sub
rcrb
gs
jmp
mov
inc
fwait
ja
adc
rcrl
sub
inc
in
fldl2t
push
mov
ja
ljmp
clc
jne
lock
pusha
stos
jae
lret
fs
mov
cmpsl
scas
pop
cltd
lcall
mov
subl
int
fdivrs
or
sbb
pop
cmp
jle
decl
fildl
mov
ret
stos
adc
cmpsl
repz
sahf
jbe
push
inc
inc
lcall
pop
out
repnz
add
mov
cs
adc
pop
mov
call
lahf
push
mov
sub
out
pop
stc
int3
sub
jne
sub
sbb
imul
call
lret
lods
out
sbb
mov
ficompl
xlat
mov
add
mov
mov
mov
lods
mov
mov
jae
dec
ficoml
and
mov
repnz
cmp
jle
xor
lahf
jmp
in
out
ljmp
or
push
mov
mov
lret
pop
and
dec
pusha
mov
dec
gs
sbb
mov
push
pop
lret
nopl
jne
mov
lret
push
jle
jne
mov
subl
cld
push
push
mov
in
push
and
stc
jne
ja
iret
pop
inc
add
dec
icebp
pushf
mov
filds
sarb
cmc
repz
cmp
or
inc
bound
fbstp
insl
out
incl
mov
std
fldcw
inc
popa
cmpsl
aad
pop
cmpsl
mov
sarw
inc
jl
push
cld
mov
aaa
push
push
xchg
mov
dec
jno
test
and
addr16
jae
pop
mov
add
sub
lds
jg
cmc
mov
stos
bound
jg
mov
daa
push
enter
movsb
das
out
cli
imul
xlat
in
xchg
rolb
mov
outsb
clc
mov
jmp
xchg
jo
add
dec
xor
aaa
cmp
or
add
mov
pop
jp
push
and
inc
jecxz
ljmp
pop
mov
stc
repnz
mov
int
sub
pop
ja
dec
jle
pop
faddl
lods
out
imul
rorb
inc
or
dec
in
or
push
inc
mov
fsubrl
flds
out
inc
lds
mov
ret
iret
out
pushl
jmp
subb
movsl
add
cmp
lods
adc
push
rcll
loopne
out
adc
sbb
sub
outsb
jno
pop
jg
push
pop
sbb
cld
sbb
sub
addr16
mov
movsl
bound
or
shlb
sbb
mov
js
sbb
jns
dec
nop
pop
stos
push
pop
insb
loop
shll
adc
into
sar
out
mov
and
clc
inc
test
imul
fmuls
mov
jmp
insb
popa
dec
sbb
nop
ss
sbb
addr16
lods
dec
add
sbbl
mov
push
sbb
lcall
lock
scas
pop
lcall
xchg
lds
inc
mov
cmp
ljmp
cmpsb
jp,pn
loope
rolb
sbbb
adc
cwtl
xor
adc
mov
mov
mov
xor
inc
jne
cs
outsl
add
insl
sbb
incl
loopne
cmp
ret
popa
jo
sti
imul
jg
into
in
xchg
jno
and
xor
xor
ljmp
jmp
loopne
dec
shrb
xor
push
sbb
in
jg
mov
pusha
mov
jne
and
into
pop
hlt
les
cmc
jns
jle
scas
test
jae
cwtl
enter
lock
sub
add
incl
in
testl
into
cwtl
iret
pop
sub
js
ja
sub
das
xor
call
pop
and
xchg
jle
rol
mov
mov
mov
jb
cltd
and
call
enter
add
add
dec
mov
jns
pop
cmpsl
xchg
push
xchg
aaa
mov
mov
mov
dec
mov
aas
outsl
mov
or
leave
ljmp
mov
add
incl
cmpsb
cmp
pushf
pop
cmp
xchg
insb
jge
ljmp
fistpll
in
pop
inc
fnstenv
fidivs
xor
rcr
mov
cmpl
mov
pop
dec
lret
cld
dec
ss
cltd
mov
ret
cmp
dec
and
cwtl
sti
add
cli
jmp
sub
pop
sub
dec
cmp
xor
fs
adc
scas
daa
das
sar
call
lret
xor
xchg
xor
adc
inc
nop
or
inc
fidivrl
and
pushl
or
loop
jle
add
push
das
sub
fwait
lret
mov
sti
imul
and
stos
mov
incl
or
scas
int
sarl
sti
lods
mov
rcll
std
add
aad
lret
jns
std
decl
mov
cmp
inc
jno
pop
jecxz
in
pop
pop
or
dec
xchg
stos
pushf
and
lcall
add
es
popa
add
pusha
inc
cmp
pop
push
fildll
jmp
lahf
rolb
int
divb
mov
clc
inc
mov
adc
ljmp
add
sbb
pop
cmp
mov
pop
aam
inc
lret
fldenv
xor
mov
mov
push
sub
push
push
add
in
pop
imul
aam
xorb
adc
cmc
mov
movb
dec
ljmp
push
adc
pop
lcall
add
push
ret
iret
into
test
lods
and
or
ljmp
pusha
roll
jo
xchg
and
mov
out
add
data16
jle
mov
incl
push
imul
imul
pop
insb
dec
lock
nop
mov
incl
je
lds
fs
outsb
and
push
out
fwait
or
iret
cli
lahf
xlat
pop
repz
and
mov
aaa
mov
repnz
loope
outsb
adc
or
sub
mov
jge
jo
pop
pop
dec
scas
in
jmp
negl
cmp
sub
xchg
leave
call
xchg
xchg
jbe
shll
aad
test
push
cwtl
mov
adc
mov
inc
pushf
outsb
mov
repz
call
js
rcl
in
dec
lods
pop
out
xor
or
ret
cmpsb
fildll
fstl
jmp
insb
xchg
or
add
jnp
mov
or
cli
xor
push
stc
cld
call
adc
lcall
ret
fsubrs
and
mov
sahf
lahf
jl
scas
cmp
push
popa
pop
in
enter
inc
movsb
add
xlat
clc
shl
and
negl
add
inc
push
aam
jg
repnz
ljmp
popf
mov
and
sub
lret
mov
das
aas
pushl
add
cmc
mov
leave
stos
imull
push
and
fimull
inc
dec
cmp
cld
jmp
and
aam
xor
pop
mov
lret
xchg
lea
std
jmp
push
cmp
ljmp
dec
insb
daa
xchg
popa
in
iret
jb
push
xchg
inc
xor
aam
les
scas
xor
mov
scas
xorb
cmp
ret
sbb
adc
fcomps
ret
push
mov
jg
cltd
hlt
fnsave
iret
sbb
adc
xor
in
push
ror
ds
jbe
push
xchg
or
movsb
fistl
mov
push
pop
fisttpl
aas
dec
idivl
lea
sbb
cltd
popf
sub
cld
incl
jo
sbb
inc
outsl
js
out
ret
and
mov
fdivr
add
or
push
xchg
call
mov
or
pop
repz
xchg
cwtl
adc
inc
lods
rorl
lcall
or
insb
sub
fs
rcrb
xchg
push
dec
jne
lods
mov
jg
mov
enter
adc
add
in
test
scas
mov
pop
loope
jmp
sbb
sub
mov
rol
stc
add
xchg
aam
dec
jmp
inc
dec
ja
inc
clc
jle
and
mov
enter
sbb
pop
pusha
dec
hlt
inc
adc
hlt
scas
fstpl
call
dec
sub
jbe
loop
jmp
mov
call
fdivrl
and
stos
call
xor
adc
bound
addr16
and
imul
sub
adc
pusha
scas
mov
dec
lods
fcompl
test
lret
scas
xor
call
sbb
push
sbb
outsb
jb
mov
sub
sti
inc
jp
mov
incl
or
es
jge
data16
decb
test
dec
inc
scas
mov
xor
aad
xor
dec
pop
mov
xor
ds
and
pushl
pushf
inc
add
hlt
dec
insb
push
clc
decl
out
mov
cmp
dec
cmpsl
std
and
test
or
outsb
sub
jmp
push
stos
ljmp
stc
add
sub
in
xor
mov
in
std
push
dec
in
push
decl
mov
pop
mov
sti
clc
mov
imul
mov
call
xchg
out
call
xor
cwtl
movl
mov
jbe
cmp
lret
call
jae
pop
loope
incl
push
ljmp
cltd
andb
mov
inc
into
aam
xor
adc
daa
pop
adc
into
lock
stos
insb
mov
add
push
mov
lret
negl
add
in
ss
out
and
call
and
loop
or
pop
stos
and
loopne
icebp
jo
lret
jbe
lret
lcall
mov
in
mov
pop
mov
call
daa
xchg
xor
jecxz
leave
mov
mov
or
jmp
sub
mov
pushl
leave
push
ja
xlat
pop
mov
into
pop
repz
imul
adc
mov
inc
dec
xchg
es
popa
cmp
add
dec
jg
jbe
add
xchg
inc
rolb
push
jne
adc
or
mov
stos
sti
sub
push
out
call
jo
jp
repz
xor
jecxz
pop
pop
lods
inc
out
xchg
jl
ret
pushl
test
sub
por
xor
cwtl
incl
jnp
hlt
ljmp
push
cli
je
add
xor
inc
les
cmpb
pop
mov
jg
jo
xchg
out
and
rclb
cmp
jmp
jg
cmp
adc
jno
push
xor
xor
pop
jg
arpl
lcall
jne
addr16
jmp
jg
lcall
nop
or
xchg
out
and
mov
lret
call
and
daa
cmp
cmpsl
adc
pushf
sbb
out
dec
inc
mov
out
xor
daa
mov
decl
call
popa
mov
incl
cs
les
cltd
int
mov
loope
xchg
dec
sub
jge
jmp
sub
daa
and
add
push
sub
push
mov
enter
or
jmp
mov
scas
test
aad
lds
rclb
and
std
sub
jmp
in
inc
mov
add
inc
sbb
push
cmpsb
xchg
aam
cwtl
mov
add
inc
scas
scas
movb
add
fimull
xchg
mov
pushf
stc
or
loop
sbb
popf
mov
add
outsb
adc
mov
jl
xchg
test
add
lcall
call
pop
gs
or
icebp
or
in
repnz
mov
mov
ljmp
mov
push
test
jp
fmulp
mov
mov
psubd
jg
ja
aas
push
jmp
int3
jmp
fistps
gs
mov
int
push
mov
cmp
fwait
pop
popa
xlat
sub
dec
push
insl
aam
push
jns
divl
rclb
into
std
decl
stos
adc
and
outsl
jmp
sbb
cvtdq2ps
ljmp
dec
cmp
pop
mov
dec
inc
test
pushl
inc
sbb
xor
stos
sub
jbe
in
mov
addr16
lea
mov
adc
xor
xlat
jmp
mov
cli
pop
push
out
cli
jmp
inc
adc
out
scas
mov
add
adc
shll
out
adc
std
xor
and
push
inc
push
insl
loope
rcll
inc
pop
movsb
and
test
cltd
dec
out
add
call
push
push
cmp
push
js
fs
pushf
daa
aaa
scas
sbb
jecxz
cmc
mov
in
sbb
shll
xchg
xchg
test
ja
add
jmp
mov
mov
scas
or
cmp
mov
fmull
pop
jae
mov
imul
mov
ret
xor
pushl
jbe
xchg
or
out
xor
inc
stc
fwait
pop
rol
inc
lds
adc
inc
lock
xchg
repz
or
and
sbb
fadds
dec
pop
inc
mov
mov
dec
mov
add
push
insl
and
aad
das
dec
mov
bound
mov
fldt
cmp
lock
fcmovnb
cmpsl
jae
call
lret
jle
aam
dec
adc
push
mov
dec
int
mov
idivl
fisubrl
sbb
scas
clc
ljmp
xchg
and
mov
jecxz
inc
adc
ljmp
xchg
adc
mov
lds
mov
out
enter
jnp
sbb
push
clc
ljmp
cmpsb
pop
pop
sahf
adc
rcr
out
les
ficoms
fnsave
cltd
int3
adc
mov
or
and
pop
pop
je
push
jno
fwait
lcall
and
js
pop
pushf
aam
daa
inc
jno
adc
push
incb
dec
push
outsb
not
push
filds
fcoms
dec
inc
xlat
out
cli
call
ljmp
jg
jmp
in
hlt
cmpsl
inc
adc
pop
iret
xor
sarl
inc
mov
and
jl
push
imull
mov
lcall
scas
mov
xor
ret
xor
pop
stc
and
rorl
push
ret
daa
outsb
dec
push
dec
test
les
subb
xchg
imul
aam
loope
test
gs
call
movsl
adc
push
rol
mov
out
outsl
sub
inc
mov
cmp
enter
sar
ljmp
dec
jae
add
sub
sub
jo
arpl
sti
dec
mov
ss
mov
clc
cld
and
clc
mov
and
mov
add
xor
cmpsb
push
dec
push
xchg
call
mov
and
out
daa
insl
cmp
xchg
inc
and
insb
out
xchg
mov
incl
or
pop
movsb
xchg
lods
inc
rclb
inc
push
mov
bound
push
and
lret
pusha
fcomi
mov
mov
fs
fldpi
mov
add
jb
lods
sbb
call
std
into
mov
fistl
mov
push
pushf
popf
rorl
fbstp
out
lock
les
bound
imul
mov
jg
leave
mov
cld
ss
xor
mov
xchg
rcrb
pop
add
movsb
gs
jge
dec
outsl
cltd
popf
dec
dec
cmc
lcall
fidivrl
and
ret
movsl
pop
aad
pop
pop
insb
lods
mov
jge
cli
sub
lcall
cmp
jb
xlat
cmp
push
jne
mov
imul
mov
xchg
and
jp
dec
inc
lea
stc
aad
lahf
loope
inc
cmpsb
mov
dec
loopne
rol
sub
pop
stos
inc
add
or
mov
cwtl
pop
cmp
jns
clc
pop
jmp
pushf
jno
je
and
andb
cmp
lcall
mov
mov
xchg
mov
or
sub
repnz
and
adc
incl
mov
jl
jmp
pop
mov
push
lret
inc
sbb
sbb
out
cli
inc
pop
add
ja
test
incl
mov
pop
roll
test
ss
ljmp
lret
add
sub
pop
cmpsl
push
js
mov
jns
out
and
add
push
outsb
or
mov
jmp
mov
std
ret
rclb
sbb
sub
call
enter
in
mov
shr
push
mov
xchg
pop
gs
cmc
push
adc
jg
call
adc
into
cld
adc
pop
xor
push
push
cmp
xchg
add
jp
insb
pusha
fwait
mov
xchg
mov
imul
call
mov
xor
aaa
pop
testl
adc
jmp
insl
mov
dec
push
test
hlt
das
mov
sbb
mov
push
push
aaa
mov
loopne
shlb
jg
aad
pop
and
mov
and
cmpsb
inc
jne
inc
or
sub
ljmp
ret
mov
clc
mov
notb
js
clc
mov
std
out
and
lret
sbb
ret
flds
jmp
daa
and
mov
es
add
sbb
dec
ffreep
xor
fcomi
and
mov
push
add
push
mov
dec
cmpsl
es
xchg
jg
push
dec
fst
cld
add
push
mov
push
mov
sub
mov
hlt
xor
ljmp
loopne
sbb
repz
stc
push
mov
mov
pushl
popa
push
sub
cmp
nop
inc
insl
mov
or
push
ficoms
and
jno
push
mov
mov
mov
call
xor
movsb
jp
xor
adcl
pop
in
jecxz
cwtl
dec
call
imul
cmc
decl
xorl
sti
imul
ljmp
xor
idiv
loop
neg
push
cs
repnz
jae
and
xchg
or
cli
pop
cmp
rolb
pop
push
cmpsl
ds
icebp
sbb
mov
pushl
sub
pop
pop
mov
push
decl
sub
call
inc
add
outsb
mov
xchg
mov
cs
lock
pop
cli
incl
out
cmp
icebp
xlat
sahf
lret
cmp
pushl
mov
cmp
mov
ficoml
mov
nop
incl
mov
add
inc
pushf
lods
int
ret
xchg
lret
dec
cli
movl
lcall
in
mov
adc
mov
add
mov
lcall
dec
inc
dec
sub
jo
and
mov
xor
ljmp
aaa
orl
mov
sbb
or
out
push
push
cmp
decl
pop
ror
and
push
dec
cmpsb
xchg
sbb
push
inc
jno
sahf
xor
cmc
sub
add
mov
jle
icebp
and
shr
cmp
inc
add
mov
xor
lds
mov
xor
cmp
fcoms
push
ljmp
mov
inc
dec
andl
and
scas
ja
movsb
mov
pop
insl
inc
incl
pop
xor
imull
int3
pop
lret
shrl
or
pop
sub
popa
fcomi
mov
add
lcall
lods
mov
popa
mov
cmovs
test
pushl
xor
filds
jnp
mov
jmp
cs
jecxz
add
mov
cld
das
cli
call
lock
mov
mov
xchg
ret
inc
fiadds
sbb
call
clc
inc
pop
and
fmuls
inc
mov
ljmp
mov
sahf
mov
leave
out
cmpsb
push
cmp
cs
insl
mov
decl
out
call
sbb
pop
cmp
jg
dec
push
mov
je
cld
pop
sbb
pop
icebp
ljmp
mov
dec
mov
lea
popf
lcall
pushl
mov
jmp
lods
jmp
jmp
in
test
fstpl
pusha
xchg
dec
push
mov
je
xchg
pop
dec
mov
repnz
adc
ja
mov
stos
xor
stos
imul
and
jmp
or
out
lds
adc
sub
loop
sub
cs
push
test
loope
xchg
mov
xor
ds
aam
lcall
bts
push
icebp
add
hlt
ljmp
mov
aad
outsl
pop
xor
test
sbb
ljmp
mov
mov
jmp
sbb
mov
mov
subb
or
ja
ficomps
pop
aad
lock
adc
inc
add
mov
jno
mov
mov
aas
clc
xchg
pop
pop
cld
stos
push
jge
pop
adc
cvtps2pd
out
xchg
inc
stos
xor
pushl
push
push
rol
and
xchg
loop
in
xchg
or
xorl
xchg
sbb
mov
xchg
mov
outsl
in
popf
int3
out
mov
clc
jmp
loopne
pop
xchg
xchg
push
sub
aad
scas
push
in
icebp
push
jmp
mul
and
dec
cmpsb
pop
xchg
cmp
loope
les
gs
iret
mov
sbb
add
pusha
xlat
sub
decl
pusha
enter
dec
or
xchg
xor
mov
pop
sbb
jns
rclb
adcb
pop
subb
push
xor
in
in
rol
aad
cmp
mov
cmpsl
repnz
pop
jb
cmp
out
outsb
mov
iret
dec
push
mov
call
mov
mov
test
and
pop
pop
stos
jnp
iret
sub
in
mov
gs
sbb
inc
mov
cwtl
fisttps
roll
inc
cs
and
ljmp
aam
daa
mov
test
icebp
lods
and
nop
shrb
rorl
jl
incl
out
push
push
jne
test
movsb
jno
xchg
add
sub
inc
les
push
sbb
cmpsb
mov
cld
decl
sub
push
lods
jo
push
adc
pop
adc
or
pushl
jae
xor
jmp
call
mov
scas
repnz
ja
jmp
sub
mov
xlat
add
add
pop
xlat
clc
int
inc
jle
and
call
mov
aam
dec
popf
adc
adc
jge
outsb
mov
lds
incl
xor
pop
inc
and
rcll
xor
sbb
in
cwtl
fldt
mov
pop
fists
sub
out
pop
inc
das
inc
pop
pushf
fisubrs
or
clc
push
jmp
int3
dec
and
lret
outsl
and
add
cmpsl
pop
mov
jle
nop
lcall
sbb
pop
and
fsubr
cmp
loop
mov
fisubrl
outsb
mov
sub
ljmp
pop
subl
int3
sbb
jmp
xchg
stos
lods
jmp
jo
push
or
cmp
pushl
cld
pop
test
dec
pop
pop
movsl
dec
test
out
push
xchg
pop
push
add
mov
mov
sub
pop
into
add
pushf
lds
jbe
ret
mov
cmpsb
notrack
loop
cmp
lea
dec
pop
cmp
loopne
push
pop
hlt
pushl
or
mov
push
and
mov
ja
jb
int
pop
sub
mov
lahf
jecxz
cmpsl
dec
out
dec
aam
dec
orb
mov
roll
imul
lcall
jb
xor
jle
das
xor
push
inc
pop
test
xor
pushf
test
stc
frstor
incl
xor
xchg
lret
mov
ljmp
and
cmpsl
sub
ljmp
jno
sub
popa
sbb
inc
jb
mov
mov
loop
ljmp
jl
dec
loop
add
adc
sub
cld
lcall
decl
jecxz
adc
out
xor
mov
push
sub
mov
jmp
cld
faddl
sub
mov
iret
enter
push
addr16
lea
pop
pop
je
dec
jmp
pop
pop
jbe
sahf
pop
rcrl
into
gs
mov
and
ds
jg
push
arpl
out
push
sbb
movsl
icebp
jp
push
mov
cmp
add
mov
sub
add
push
adc
pop
fistps
dec
xor
sahf
es
mov
sub
mov
pop
jae
dec
lcall
bound
xor
stos
lcall
dec
andl
mov
mov
jl
push
add
mov
out
incl
sbb
sub
jo
and
addl
cltd
shlb
pop
xor
push
pushl
aam
pop
cld
xchg
push
test
pushf
inc
push
es
movsb
cmp
push
mov
mov
decl
xor
test
out
xor
gs
mov
push
or
sub
cmpb
data16
data16
idiv
jmp
mov
inc
push
fnclex
out
movsl
inc
pushf
outsb
mov
fwait
or
pop
rclb
mov
and
pop
cld
ljmp
xchg
xchg
es
xlat
sahf
pop
adc
or
ljmp
lret
sub
fsubrl
arpl
push
and
test
pusha
mov
jecxz
movsb
sbb
mov
sbbl
cs
call
out
inc
sub
movsb
xor
dec
loopne
test
repz
inc
mov
push
push
sar
int
imul
div
push
ss
fdivr
jmp
shlb
std
add
and
mov
testl
ljmp
push
data16
sub
adc
rcrl
pushl
and
enter
stos
mov
daa
shll
mov
jmp
in
dec
decl
outsl
or
inc
mov
sub
inc
ss
sub
and
or
test
imul
dec
ja
mov
mov
lret
cmpsb
pop
xor
adc
inc
pop
int3
xchg
xchg
jno
sub
jp
xor
adc
dec
ror
ffreep
std
pop
orb
adc
mov
sbb
mov
and
xor
out
pop
outsl
out
sub
out
inc
xor
pushl
lahf
ret
test
test
into
mov
in
pop
rcrl
out
repz
call
jno
enter
iret
shlb
sub
loope
lret
insb
loope
ljmp
lock
mov
jl
mov
flds
subb
in
scas
jnp
xlat
mov
loopne
iret
test
push
mov
push
cmp
decl
adc
mov
test
xchg
push
lock
push
cmc
push
shr
in
stc
push
into
add
incl
mov
mov
and
jbe
and
xchg
dec
cwtl
dec
inc
and
loop
inc
mov
fimull
mov
dec
push
lds
pop
inc
lds
jmp
xor
fsubr
nop
cmp
cmpsl
xor
jae
mov
xchg
cmp
repz
lods
sub
xor
push
popf
lods
adc
movsb
imul
sub
cld
xchg
mov
push
mov
and
call
jl
fcompl
jp
dec
pop
xchg
mov
dec
out
addb
in
dec
test
mov
push
jl
fwait
int
out
call
adc
and
loope
arpl
fbld
mov
mov
ja
out
pop
clc
push
cwtl
cli
sub
inc
xor
ss
xor
or
jns
out
push
mov
fcomps
mov
push
shrl
jmp
ret
data16
dec
std
je
scas
lock
pop
cmpb
loop
cmpsb
repz
dec
fs
decl
xchg
in
push
int3
pop
out
and
or
js
add
cld
ljmp
mov
inc
sbb
inc
sbb
push
push
fstl
cli
jge
mov
idiv
addb
push
dec
cmp
cltd
into
cmovnp
and
filds
cmp
leave
inc
mov
push
sub
dec
jmp
push
mov
push
push
cmpsl
leave
movsl
dec
and
lds
jg
es
lcall
jp
pop
pusha
sbb
call
xchg
notb
cmc
in
pushl
in
aaa
movsl
lods
or
xchg
pop
int3
and
cmpsl
test
call
ret
pop
js,pn
add
inc
fs
int
xchg
cmp
mov
pop
test
mov
jmp
incl
and
xchg
lret
push
repnz
subl
mov
inc
jnp
ljmp
test
rorb
mov
cwtl
aaa
adc
movsb
ljmp
and
cmp
lahf
sub
stc
xchg
mov
push
or
pop
negb
lock
jbe
aaa
pop
test
inc
xchg
fcmovnbe
into
dec
test
sbb
pushl
std
mov
inc
out
sbb
jcxz
xor
mov
fwait
jge
aad
pop
mov
jae
fcoml
xor
cltd
orb
dec
xor
into
inc
loop
inc
incl
xor
sub
sub
jbe
cltd
mov
out
lcall
jmp
xor
xchg
addl
xchg
mov
jno
aas
lods
pop
ficoms
call
pop
sbb
xlat
lret
adcb
xor
repz
inc
fcoms
pop
cmc
into
repnz
sub
call
pop
rclb
mov
aad
jo
inc
loop
pop
stc
pop
xchg
call
rorb
lcall
lods
inc
test
and
mov
and
adc
dec
xlat
push
cld
fidivrs
jno
push
call
scas
jle
dec
gs
push
mov
mov
xor
mov
dec
mov
push
aam
and
cmp
pop
insl
jmp
jecxz
rcrb
push
adc
mov
call
rcll
mov
sti
jo
push
das
fldt
jb
ret
sub
lock
mov
es
addr16
ljmp
nop
adc
les
jbe
sub
ja
call
add
shll
pusha
mov
dec
mov
xor
fldt
adc
push
sub
daa
insb
outsb
mov
sub
mov
jns
fcmovnb
popa
push
adc
mov
xor
jae
int3
jno
call
push
ljmp
fdivr
push
mov
aam
loopne
pushl
xor
pop
ss
icebp
icebp
sahf
dec
jg
div
add
cli
inc
dec
or
cmp
decl
sarl
mov
adc
xchg
adc
iret
stos
scas
xor
lcall
les
sbb
xor
jge
test
mov
inc
inc
add
inc
popf
std
ljmp
movsb
inc
cwtl
cmp
imul
jmp
cmp
in
leave
or
shll
mov
and
jne
fwait
add
in
push
and
ljmp
cli
call
and
cmpsb
jl
push
fstl
push
mov
ja
mov
lcall
pop
sarb
xorb
stos
mov
push
adcl
movsl
scas
xchg
add
sub
jecxz
int
pop
insl
mov
or
fiaddl
sbb
std
add
out
cmp
jmp
rolb
pmaxsw
mov
adc
insl
pop
ljmp
push
or
mov
jmp
mov
dec
mov
push
mov
inc
pop
and
jg
icebp
dec
mov
push
jle
or
clc
push
sahf
inc
pop
pop
imul
fsubrs
push
fdivs
sbb
decl
shlb
add
fnstsw
imul
fs
cld
das
push
popa
pop
rolb
mov
mov
shr
pop
js
pop
and
inc
jne
rcl
pop
mov
push
stos
fs
jecxz
push
mov
cmc
sub
jmp
jns
icebp
or
fnsave
dec
cmpsb
incl
imul
mov
jmp
inc
imul
fisttpl
leave
or
call
repz
sbb
or
xchg
pusha
inc
cmp
test
loopne
mov
ss
outsl
push
ficompl
fcmovu
push
jo
pushf
fists
aad
or
inc
push
mov
pop
aaa
into
dec
in
sub
test
incl
sbbl
idiv
add
mov
jl
xor
push
popf
add
stc
cwtl
or
adc
cmp
jne
jmp
push
es
fmuls
pop
add
xor
test
jl
push
push
jecxz
adc
pop
out
and
add
enter
insl
pushf
sub
add
push
out
and
sbb
div
xchg
inc
pop
sbb
lret
mov
adcl
test
push
push
push
mul
js
in
cltd
and
popf
xchg
mov
and
call
cmpsb
sbb
lret
loopne
mov
andb
jmp
jne
adc
and
mov
mov
pop
mov
cmpsl
jmp
clc
sti
arpl
cmp
hlt
fsubp
lahf
subb
adc
lahf
push
add
and
mov
jg
popf
scas
in
das
xchg
jb
pop
mov
mov
jl
jb
mov
xor
ja
xchg
xchg
mov
and
je
imul
bound
loope
jb
in
out
imul
xchg
jbe
mov
jg
lret
repz
data16
imul
cs
inc
add
or
jmp
sti
dec
mov
clc
xchg
mov
cltd
fwait
pusha
cld
dec
mov
out
pop
sahf
adc
test
push
pushf
adc
pushl
daa
xchg
or
pop
inc
xor
xor
lods
leave
flds
pusha
and
sar
pushf
lcall
cmc
pop
pop
popa
sbb
fwait
jp
adc
xchg
ret
cmc
ret
pop
cmp
es
pushl
lea
mov
pop
out
imul
fwait
add
dec
xchg
and
pop
das
push
repz
hlt
int
ja
lock
push
test
lods
jno
xchg
hlt
rorb
hlt
or
jne
call
push
testl
pop
mov
nop
push
notl
loope
test
add
out
jmp
xchg
fs
fcmovne
es
push
cmp
rcll
pop
pop
imul
push
imulb
sbb
mov
out
in
out
cwtl
and
inc
or
jle
add
and
inc
push
call
lcall
pop
jecxz
test
mov
cmc
sahf
sub
fs
pop
int
push
lcall
sbb
outsb
fnsave
jnp
out
xlat
xchg
test
inc
inc
lcall
inc
xor
inc
cmp
xchg
mov
mov
jl
ljmp
xchg
out
clc
stos
or
push
dec
mov
add
pop
cli
ret
fdivrl
lcall
lret
xor
jbe
fistps
mov
adc
scas
xchg
cmp
iret
gs
aas
mov
ljmp
movsb
adc
fiadds
hlt
hlt
push
aad
xchg
iret
push
xor
or
imul
mov
roll
pop
rcrb
adc
ss
imul
pushl
sahf
mov
fsts
inc
jb
dec
push
xchg
or
jg
out
inc
lret
loope
and
jo
sub
scas
sbb
push
pop
in
push
lcall
mov
sbbl
mov
dec
jg
out
lea
cmpsl
pop
sub
mov
inc
jbe
or
dec
je
daa
or
lret
in
gs
popf
int
jno
out
cli
divb
js
ljmp
jmp
rolb
or
ljmp
mov
outsl
outsb
lods
pop
sbb
rclb
scas
inc
adc
fwait
sbb
pushf
mov
jp
dec
ss
cmp
jmp
pusha
or
inc
cli
pop
mov
dec
pushl
ljmp
add
scas
xor
les
lahf
mov
sbb
clc
inc
xlat
int3
fcompl
dec
push
das
clc
fimull
pop
push
xchg
pop
les
ss
jg
call
mov
xor
mov
add
add
dec
fs
mov
jg
ljmp
fmull
xchg
inc
cmpl
mov
daa
mov
ljmp
jae
lret
test
popa
test
mov
dec
test
mov
mov
dec
dec
rol
fnstcw
cld
sbb
ja
cs
sbb
xchg
adcl
xchg
inc
rcrl
ljmp
lods
cmp
pop
cwtl
loop
or
ret
jns
mov
push
or
pushf
gs
mov
sbb
add
xor
cmp
imull
imul
pushl
incl
fs
and
jae
fiaddl
std
call
mov
test
fdivrs
cmp
add
dec
sarb
pop
push
adc
ljmp
frstor
adc
push
scas
loopne
hlt
shrb
dec
test
pushf
mov
incl
jmp
mov
andb
out
sub
mov
stos
push
in
pusha
cmp
xor
int3
call
les
mov
das
fstpl
clc
pop
jg
or
shll
push
icebp
xor
dec
inc
ret
jge
mov
xor
xchg
mov
xor
jecxz
jno
shll
add
mov
repnz
jne
popf
or
ds
ljmp
pop
addr16
test
arpl
push
or
inc
dec
jle
fcmovnu
pop
mov
pop
cmp
std
fcomps
push
fst
fwait
lods
mov
and
mov
mov
mov
adc
jp
inc
fistpl
dec
mov
arpl
xor
fadds
or
dec
jmp
mov
dec
std
add
sbbb
das
xchg
mov
cmc
fnsave
mov
sbb
incl
xchg
mov
shlb
mov
sub
mov
cmp
int
ja
clc
jmp
lock
pop
lds
jns
push
mov
pop
mov
decl
sbb
pop
xchg
cli
adc
inc
push
pop
adc
out
and
dec
jmp
cmpsl
add
adc
js
xchg
inc
jo
aad
xchg
adc
add
ljmp
mov
mov
add
jne
dec
imul
xor
shrb
lret
and
mov
test
fdivrl
lea
jmp
pop
leave
call
in
xchg
push
cltd
idivb
xor
dec
insl
inc
pusha
test
push
jne
lcall
xchg
ljmp
jmp
out
mov
fxch
dec
fisubrs
jbe
rcl
sub
loope
mov
mov
sub
xchg
hlt
sub
jecxz
or
xor
sbb
in
imul
fwait
cmp
stos
pop
inc
xor
mov
dec
inc
add
aas
cwtl
das
adc
inc
push
aam
pop
mov
mov
push
adc
dec
movsl
insl
sbb
ret
mov
lods
xor
decl
xchg
test
leave
mov
lods
lods
leave
cmpb
orb
lods
or
rcrb
pushl
jl,pn
bound
call
or
jecxz
lahf
loop
mov
std
loopne
inc
pushf
mov
or
mov
dec
mov
shl
pusha
adc
scas
aad
lret
decl
fmulp
loop
or
add
outsb
ja
shr
push
popa
cmp
sub
call
popf
adc
sarl
fs
aam
xchg
lahf
rcrl
mov
mov
icebp
sbb
jp
xor
pop
rcrb
pop
xor
imul
mov
int3
aad
jb
pop
pop
ffree
pushl
incl
stos
pushf
loope
testb
fcom
xchg
and
and
sub
mov
or
aad
mov
or
je
loop
sub
mov
insl
xor
and
pop
in
ffree
jecxz
daa
aam
sti
ret
pusha
sub
pop
add
clc
call
movsb
dec
adc
push
add
mov
and
je
stc
push
decl
ret
sbb
mov
gs
mov
cltd
insl
pusha
and
pop
inc
xchg
push
aam
inc
cmpsb
decl
jmp
or
mov
or
wrmsr
imul
frstor
or
mov
dec
push
inc
cli
adc
dec
inc
jno
sbb
mov
aad
pop
dec
out
push
mov
mov
out
int3
loope
cltd
dec
add
test
jnp
adc
aad
fisttpl
decl
xor
mov
ss
mov
sub
or
or
scas
sub
xchg
sub
ljmp
jle
or
pusha
mov
or
lea
or
fstps
pushl
call
pop
xchg
dec
lods
adc
dec
inc
inc
std
xchg
sbb
and
std
ss
int3
pusha
xlat
fsubrl
fiaddl
mov
lods
fsubr
ja
sbb
ljmp
mov
dec
jmp
dec
push
jbe
push
gs
call
add
pushl
inc
and
xor
sbb
cltd
ja
ljmp
scas
pushf
leave
fidivl
sbbb
sub
lahf
out
imul
jmp
std
popf
mov
lds
pop
and
lcall
mov
and
pushl
mov
mov
inc
xchg
cmpsl
push
out
xlat
ljmp
sub
dec
jae
sub
ljmp
dec
dec
cwtl
mov
es
bound
push
rcrl
push
dec
sub
js
aad
mov
pushl
xchg
xchg
in
push
aad
push
sbb
jo
popf
xchg
push
mov
sbb
jp
or
scas
inc
inc
push
mov
mov
ret
pop
cmp
cmpsl
mov
fsts
out
mov
ljmp
sub
mov
aas
mov
add
pop
loope
add
inc
fldcw
out
inc
pop
loopne
stos
inc
mov
dec
jle
js
jmp
lock
ljmp
mov
lret
bound
xlat
mov
xlat
push
daa
ret
mov
imul
mov
pushl
jb
mov
rcl
jae
pushf
mov
dec
dec
and
sbb
es
jg
or
lret
rcrl
decl
adc
mov
jg
aam
pop
cmp
adc
push
call
jp
scas
jns
jne,pt
cmp
and
jmp
rol
push
fdivs
mov
jno
ret
ret
pushl
ds
mov
rorb
movsb
outsb
lcall
sahf
insl
pop
mov
cwtl
and
mov
decl
push
pop
sub
xor
iret
andl
les
inc
push
ret
adc
and
xlat
jmp
sub
pop
or
inc
adc
xor
xchg
roll
aaa
pop
xor
decl
xor
jle
sub
or
add
fisubrl
dec
fs
lods
cmpsl
or
dec
popf
lret
lcall
mul
inc
cmp
sbb
dec
and
add
test
sub
icebp
mov
imulb
and
inc
fldl
in
repz
xchg
aas
cmpsl
incl
insb
sbb
xchg
fistpll
dec
push
mov
add
js
sub
or
sub
add
mov
popf
xlat
dec
ljmp
add
std
sub
jae
mov
fisttps
nop
dec
mov
mov
xor
out
clc
fcomip
mov
mov
pop
and
mov
pushl
faddl
inc
pop
pop
adc
cltd
mov
push
sbb
cmp
lcall
add
scas
inc
add
inc
cmp
mov
outsb
push
mov
stos
or
scas
jle
or
mov
cmc
sub
lea
xor
or
pop
jl
popa
aaa
das
rolb
incl
or
or
push
cmp
inc
fs
incl
mov
push
imul
movsl
jno
xchg
fwait
mov
jge
std
loop
add
dec
cld
das
cmc
push
ret
not
int3
es
sti
xchg
cmp
call
dec
loopne
cmp
cmp
and
loopne
imul
int3
mov
add
and
mov
lcall
xor
add
fcmovu
enter
ja
cld
pop
enter
sbb
sarl
stos
scas
adc
lcall
xor
subb
pop
stos
rorl
jne
xchg
loopne
in
jmp
adc
clc
add
frstor
leave
xchg
gs
push
cwtl
mov
jns
shrb
sub
jnp
add
frstor
push
cld
ss
xchg
sub
dec
fsubrp
shll
pop
fidivl
popfw
cmp
add
cmc
ljmp
and
push
addb
cmpsl
push
scas
test
in
jg
inc
adc
fistps
mov
jno
adc
inc
rclb
clc
cwtl
pop
mov
loop
fnstcw
aam
rol
pop
mov
lret
or
imul
xor
push
pusha
aad
fstp
or
jne
jg
pop
fsubs
xchg
decl
fidivs
arpl
bound
lods
inc
jge
stos
mov
cld
mov
dec
pop
push
stos
sti
dec
xlat
add
and
pushl
pop
in
and
push
dec
gs
pushf
inc
test
in
shll
mov
xchg
or
std
incl
mov
lods
ret
shr
jo
dec
loop
les
ss
loopne
mov
hlt
negb
add
stc
and
rclb
jo
mov
pop
stos
mov
ljmp
mov
scas
repnz
cwtl
sub
mov
pop
fdivrs
or
inc
inc
movsl
cmp
adc
sub
pushf
out
es
sbb
mov
enter
jle
lock
pushl
cs
sub
inc
jns
dec
shl
dec
test
stos
xor
popa
or
add
mov
and
les
mov
push
aas
mov
cli
cmpsl
mov
dec
mov
imul
fsubrl
jo
sarb
test
adc
std
mov
or
lods
add
out
mov
movl
pushl
std
das
lock
stc
adc
pop
add
and
hlt
pushf
jns
aad
lcall
lret
adc
daa
inc
add
inc
bound
jns
add
mov
pushf
pop
fmull
decl
lock
mov
cld
dec
inc
adc
outsb
add
nop
ret
xchg
cmp
dec
decl
gs
jp
in
cmpl
aad
js
divl
push
in
sarb
pushl
xor
mov
xchg
adc
pop
out
jns
insb
or
pop
fisttpll
or
dec
lock
ljmp
sub
mov
xchg
and
adc
xor
stc
push
cmc
dec
outsl
xchg
je
jl
in
cmp
sbb
call
and
xchg
cli
dec
lahf
popa
push
cmp
add
imul
lcall
xor
inc
jnp
xchg
xor
xor
in
gs
rol
and
mov
jae
rcrl
jge
push
jmp
stc
and
dec
pop
imul
call
out
stos
push
popa
ret
sub
insb
cmp
fadds
inc
test
jb
xor
call
insl
cli
adc
xchg
and
xor
and
mov
xchg
ljmp
push
shll
je
int3
ret
sub
lcall
adc
fwait
cld
xchg
or
jecxz
scas
xchg
int
add
dec
call
ja
in
iret
ljmp
sub
sar
and
outsb
movsb
adc
sbb
push
adc
xor
hlt
lretw
rsm
jmp
mov
call
push
fstpt
xor
jb
inc
repnz
push
test
mov
imul
mov
decl
fcomp
test
jge
int
xlat
adc
mul
icebp
sbb
adc
lds
nop
mov
mov
xchg
mov
jne
iret
add
pushl
int
jne
cld
fldl
mov
mov
xor
scas
pushl
inc
cmp
scas
xchg
lret
xchg
ljmp
xlat
gs
mov
jecxz
decl
hlt
sub
insl
sub
ficompl
xor
loope
enter
rcrb
add
ljmp
popa
fwait
jecxz
push
cmp
imul
xor
pushl
pusha
sbb
sbb
sbb
sbb
pusha
lcall
call
lahf
das
xchg
cmpsb
and
pop
aas
mov
adc
repz
dec
or
sub
jno
ljmp
cmp
push
outsl
dec
jmp
jl
jb
orb
mov
loope
in
ds
pop
or
jl
jg
cmc
cmpb
cmp
push
icebp
lret
loopne
add
pop
pushl
sbb
dec
outsl
xlat
lcall
lods
pop
pop
sbb
jge
push
cmp
dec
out
lcall
movsl
or
push
movsb
sbb
repnz
fs
shl
ljmp
dec
mov
lahf
and
clc
inc
in
mov
das
adc
or
movsb
lret
popa
ret
fists
subb
int3
or
ljmp
add
dec
roll
test
mov
fstpt
jmp
ret
leave
ljmp
dec
jne
push
mov
mov
inc
popf
cmpsb
or
popf
stos
hlt
test
es
dec
in
lock
decl
pop
aad
je
call
dec
and
inc
call
paddq
xchg
pop
decl
out
call
dec
fidivs
cmpsl
jnp
add
lcall
mov
sbbl
sbb
aam
aas
es
sub
ret
mov
aas
out
adc
jmp
scas
push
mov
xor
dec
mov
cmp
push
cmpsl
ljmp
xchg
jo
push
in
cmp
cmp
cmp
lcall
iret
int3
lods
cmpsl
repnz
and
int3
mov
fs
mov
xchg
and
je
scas
clc
call
aaa
sbb
mov
dec
inc
or
push
pop
sarl
jmp
call
adc
jnp
repz
rcrl
fdivl
mov
out
notl
lods
cmpsb
scas
rolb
test
loope
xchg
imul
push
insb
mov
adc
ljmp
or
add
and
loop
sbb
pop
lea
mov
jns
lods
sbb
std
incl
orb
xchg
rcrl
rorl
push
out
lea
popa
loopne
daa
fs
dec
call
xchg
sbb
mov
add
adc
inc
outsl
out
and
inc
fcoml
fdivs
loop
fsubl
fildl
dec
push
jne
and
jo
gs
mov
mov
lock
ficomps
push
fists
pop
lret
cmp
out
jge
pop
xor
lcall
pop
movsb
imul
in
roll
add
inc
out
jb
subl
incl
je
cmp
push
push
pop
cld
fs
dec
fsubrl
jae
jle
xor
rcrl
lcall
stc
int
adc
popa
sub
inc
mov
pop
test
cmp
jbe
push
jmp
mov
cmc
or
rorl
add
push
cli
in
lret
pop
fistpl
scas
clc
adc
jp
cmp
in
cmp
fsubrs
jns
dec
pushf
test
adc
mov
and
clc
add
inc
rorb
cmp
outsl
pop
lcall
cmpsl
enter
cli
sbb
lcall
fstpl
or
sbb
jp
adc
test
bound
ljmp
call
pop
popa
sub
inc
xchg
addr16
and
or
ljmp
push
xchg
scas
push
adcl
aas
hlt
jecxz
sub
loopne
xchg
cmpl
jnp
dec
loope
mov
insl
mov
out
or
jno
inc
pop
fistpl
fisubrl
call
popa
mov
push
into
fisttps
jmp
test
push
xor
pusha
push
fsubr
and
das
add
icebp
adc
xchg
pop
pusha
or
dec
jg
out
xchg
sbb
popa
aad
icebp
pushl
iret
lahf
pop
pop
aaa
repz
push
pop
call
cmp
imul
mov
adc
jge
loopne
jnp
loop
push
adcb
ljmp
mov
dec
das
iret
in
loope
push
js
leave
test
mov
dec
push
jnp
mov
jmp
pop
std
push
inc
xchg
push
inc
lock
cld
repnz
dec
test
dec
adc
rcrb
mov
lds
shl
xchg
adc
es
call
mov
pop
enter
stos
xor
push
jnp
int
jmp
and
lret
cmp
sar
call
inc
jo
shr
aaa
imul
mov
loope
ljmp
insb
out
inc
daa
push
lahf
or
mov
sub
sbb
jmp
push
daa
popa
in
push
scas
jp
hlt
add
xchg
inc
in
push
fdivl
pop
out
clc
incl
cmp
inc
inc
jg
adc
xlat
mov
and
inc
push
lret
jnp
aaa
push
imul
cmp
outsb
sub
mov
adc
and
pushf
add
push
dec
sti
add
call
das
loopne
push
dec
fisubrl
bound
push
push
imul
rclb
and
decl
test
dec
ret
mul
cmp
popf
push
rcl
pop
sub
adc
pop
lea
push
insb
xchg
push
pushf
cmp
jecxz
ret
dec
int
sub
adc
jg
jne
cli
in
jb
icebp
or
mov
pop
or
jmp
ljmp
xchg
push
ljmp
rcrb
aas
shlb
cmp
mov
fcompl
xchg
add
pop
idiv
ljmp
lahf
and
xor
and
cwtl
lds
incl
insb
pop
fwait
arpl
roll
xchg
jecxz
hlt
jb
movl
call
loope
mov
out
xor
lret
lock
or
or
fcomps
outsl
test
xor
ljmp
sub
stos
movb
stos
mov
testl
das
and
aas
fldl
call
jle
pop
popf
xchg
js
sbb
out
sarb
push
mov
pop
sbb
dec
pop
xchg
mov
fxch
push
and
cmp
in
mov
imul
rorb
ljmp
cli
decl
lret
in
mov
xchg
jl
lea
cwtl
mov
push
pop
xchg
jb
cmp
call
jbe
outsb
cmp
pop
sub
pop
push
lock
cmp
ljmp
clc
mov
adc
dec
xchg
stc
xchg
hlt
aad
jmp
ret
push
jbe
rolw
jmp
push
movsb
xchg
decl
pop
or
mov
add
jl
popa
xchg
jo
xchg
or
out
pushl
xor
and
stos
pop
mov
jns
xor
scas
adcl
ljmp
scas
fucom
xor
inc
hlt
cli
mov
add
repz
lcall
loopne
scas
cmp
push
cltd
orl
mov
jae
fisttpll
hlt
ljmp
adc
and
stos
add
or
xor
fadds
scas
lods
fisttps
jbe
inc
repz
and
arpl
aad
pushf
fdivrs
inc
mov
fbld
aaa
jl
subl
je
mov
decl
int
push
test
arpl
fcmovnu
push
add
ss
dec
mov
jne
out
cli
decl
scas
xor
jge
push
and
test
xchg
add
jb
add
xchg
xor
decl
sub
mov
out
lret
inc
pop
imul
adc
pop
idiv
out
mov
pusha
jns
xchg
dec
insl
xor
mov
add
push
rcrb
and
leave
scas
adc
inc
fimull
fildl
call
enter
stos
aas
and
cltd
pop
mov
and
pop
data16
fcmovbe
dec
push
jmp
add
push
pushf
push
subb
ret
sub
xor
jmp
sbb
pop
lods
test
jnp
mov
fwait
and
pop
mov
sar
decl
sbb
test
loop
es
dec
inc
fldl
xor
push
or
orb
add
adc
data16
adc
xchg
pop
pop
lea
lcall
add
int3
rcll
add
adc
push
ljmp
std
add
dec
mov
pushl
add
sub
push
pop
and
fcmovnbe
ficompl
inc
push
in
imul
push
inc
out
stos
sti
clc
jmp
sbb
popf
cmp
xchg
or
test
repz
cmpsl
xchg
int3
ljmp
push
and
push
dec
or
push
jb
mov
ja
ljmp
aam
jne
inc
mov
dec
cmp
push
xor
testb
sbb
sbb
into
js
nop
mov
cmp
and
icebp
cmp
cld
ljmp
jle
xor
jmp
adc
call
in
shr
push
iret
cmp
idiv
jmp
repnz
cmp
sub
xchg
or
ds
cmp
adc
adc
lods
push
mov
sbbb
out
mov
mov
xchg
sub
xlat
cmp
inc
mov
push
adc
mov
js
insl
lcall
push
ror
out
out
movsb
mov
sub
push
add
jecxz
and
js
jl
cmp
inc
cmp
inc
outsl
mov
test
pop
sti
ja
adc
lcall
jmp
ja
xor
jmp
inc
dec
xor
cld
call
decl
inc
adc
adc
std
inc
jb
call
mov
xlat
ljmp
sar
jb
inc
dec
cmp
test
rclb
jle
mov
cltd
fdivrp
lcall
adcl
xor
mull
pop
add
iret
pop
pop
fisttpl
call
xor
push
bound
lea
xchg
outsb
gs
inc
out
incl
sub
pop
mov
cmp
jecxz
in
cmpl
mov
mov
testl
dec
shlb
cmp
add
mov
pop
push
mov
and
adc
out
jl
in
mov
repz
data16
call
bnd
adc
xor
dec
cwtl
jno
adc
and
lret
sbb
ds
ret
fbld
push
divb
pop
xchg
lret
repz
xor
cmp
xlat
enter
inc
in
pop
mov
push
push
push
jmp
shlb
leave
ret
pushf
into
and
mov
mov
in
divb
or
rcrl
pop
lret
and
movsl
lahf
test
mov
filds
decl
lahf
xchg
int
fistpl
loop
or
adc
jno
lahf
ss
pop
sarl
ljmp
pop
pop
jge
lahf
pop
enter
scas
inc
ja
push
cmpsl
mov
adc
incl
jp
jl
daa
sbb
aaa
cmpb
in
dec
jmp
inc
xor
sbb
repz
aas
lods
shll
incl
push
push
cwtl
pop
and
mov
dec
test
cmpsb
pop
sbb
lock
ljmp
jg
push
mov
fstpl
cmc
dec
mov
mov
repnz
add
and
out
cli
out
sbbb
shr
ljmp
out
mov
jmp
in
sub
fs
and
cld
adc
add
in
and
sbb
repz
mov
jecxz
jl
inc
xchg
inc
orb
sbb
in
jl
in
icebp
jg
jmp
imul
pop
jmp
mov
jle
lods
dec
in
nop
jo
mov
mov
sub
fimull
mov
cmc
lock
mov
dec
fisubs
cmp
or
xor
push
fildll
push
sti
cmpsb
dec
lcall
es
mov
mov
mov
mov
push
repz
lcall
jne
dec
mov
out
je
jno
stos
mov
sub
jg
je
bnd
and
cmp
mov
stos
cmp
and
push
lret
imul
cli
mov
mov
push
subl
insb
xor
jno
ljmp
mov
mov
addr16
les
test
out
xlat
fdivrl
mov
out
inc
dec
push
ljmp
sbbl
lahf
push
inc
into
push
adc
dec
in
repnz
sub
popa
or
scas
lods
lcall
or
mov
cmp
out
jg
mov
mov
sub
popf
xor
xor
inc
psubw
cmpsb
sub
aas
cld
jnp
loope
movsb
jmp
adc
push
push
cmp
test
push
fucom
fldenv
cmp
push
cld
pop
xchg
or
inc
inc
jne
popf
es
daa
pop
ret
lods
paddd
sahf
push
sub
pusha
dec
fldenv
push
enter
jg
decl
ret
sbb
mov
xchg
in
sahf
mov
mov
cmc
jns
test
xchg
gs
ret
jmp
fstpl
xchg
fs
shrl
das
in
xchg
loope
sub
jg
jmp
scas
ret
mov
sbb
add
and
aam
mov
pushl
fisubrs
bound
inc
arpl
insb
inc
jmp
lods
xlat
insl
in
pavgw
aad
jmp
in
scas
dec
inc
cld
pusha
sub
pop
lock
cmp
enter
pushl
shr
sbb
sti
dec
push
jg
and
mov
or
jae
mov
lahf
out
lds
out
mulb
fstpt
push
xor
cmc
bound
mov
int
push
xchg
shlb
scas
xor
nop
mov
sub
popf
loopne
xor
loopne
incl
addr16
cmp
pop
sub
repz
push
and
clc
ds
push
pop
dec
fnstenv
ljmp
dec
inc
inc
mov
pop
inc
ss
imul
cld
jb
xor
jg
shll
mov
push
dec
jno
fiaddl
and
rorb
call
cmp
in
mov
test
xlat
adc
jecxz
sbb
and
shrl
fucomi
add
pusha
jne
je
add
js
dec
add
bound
dec
mov
fisubrs
outsl
xchg
ljmp
pop
scas
sar
xchg
and
bound
sbb
decl
insl
stos
add
repz
add
mov
sub
clc
jmp
jae
data16
sbb
mov
jb
or
mov
sbb
incl
jp
shrb
dec
xor
lret
insl
jmp
pusha
fwait
data16
call
loopne
divb
je
xchg
scas
xchg
mov
call
push
scas
lods
jne
push
fnsave
std
mov
pop
rcrl
inc
dec
inc
push
pop
test
inc
es
cmc
adc
lcall
repz
rolb
fisttpl
insl
dec
add
movsb
psubd
pushf
xchg
push
cmpb
in
stc
jmp
or
fs
add
mov
or
fisttps
lock
lret
mov
decl
out
dec
jecxz
dec
cli
or
clc
dec
in
cld
pushl
das
push
iret
lods
std
sub
pop
cmp
in
les
dec
or
jne
in
mov
out
mov
sti
repnz
xchg
in
push
dec
jb
pop
lret
hlt
aas
xor
add
pop
cmp
addr16
or
inc
xor
mov
xchg
mov
mov
sahf
mov
insl
push
add
jne
mov
lods
mov
hlt
jecxz
mov
sbb
jl
call
ja
and
jbe
push
shlb
mov
hlt
pop
cltd
mov
or
jp
mov
decl
and
jp
xor
inc
adc
push
or
test
xor
mov
jg
ljmp
push
aaa
inc
addr16
or
pop
mov
ret
mov
add
push
arpl
data16
hlt
int3
int3
pop
into
incl
pop
push
sbb
mov
pop
inc
int
and
insl
adc
mov
jmp
jecxz
das
xchg
in
out
andb
mov
ja
mov
outsl
in
add
jbe
dec
xchg
into
inc
jge
or
sbb
test
ret
adc
mov
or
push
in
inc
mov
popa
dec
arpl
or
ljmp
pop
je
ret
adc
aam
rol
dec
out
fmul
hlt
lods
sub
call
popl
push
ficompl
imull
cld
popf
xchg
shr
dec
sbb
incl
sbb
scas
rcll
fwait
sbb
xor
lds
sub
and
icebp
mov
mov
and
aas
gs
inc
xor
ds
ja
jmp
cmp
stos
pop
cli
mov
xor
movl
decl
push
stos
cmp
popa
sub
loopne
scas
jmp
mov
decl
push
and
dec
inc
push
mov
pop
jno
mov
test
or
dec
pushl
jmp
insb
jp
or
shlb
cld
in
cwtl
das
cli
lret
xchg
push
jg
mov
xor
push
mov
xor
xchg
xor
mov
cmpl
pushl
cmp
out
jnp
lds
push
push
dec
mov
or
sbb
incl
ljmp
inc
cmp
pushf
or
jg
addb
adc
in
call
inc
dec
test
repnz
push
inc
ss
mov
ds
lcall
scas
ja
ljmp
jmp
es
iret
movsb
or
jl
inc
xchg
scas
aaa
add
hlt
jmp
adc
jne
pop
push
push
mov
and
push
xlat
jg
out
jmp
sub
jne
sti
cli
outsb
adc
sahf
js
xchg
or
jg
add
xchg
mov
fs
js
imul
imul
iret
add
and
push
jns
sub
dec
xor
sbb
xchg
push
incl
cmpsb
cmpsb
call
push
pop
aas
lahf
mov
jb
push
xchg
ret
out
dec
jp
out
sub
nop
mov
add
mov
add
rclb
cwtl
rcr
adc
les
scas
xor
jge
jae
into
inc
je
das
mov
std
mov
xor
sbb
sbb
or
mov
adc
roll
and
movsb
ret
cmp
insl
add
mov
push
nop
sbb
stc
js
test
add
lds
sbb
sub
jg
adc
shll
in
data16
fdivrs
xchg
int3
add
dec
add
sbbb
fnstcw
push
ret
data16
faddl
cmp
bound
lcall
lcall
mov
push
sub
dec
adc
test
xor
fbld
pushl
inc
jno
or
sbb
notb
cli
popf
inc
mov
ljmp
imul
incb
test
cld
cmp
fs
mov
pop
xchg
incl
push
shrl
nop
sti
mov
out
ljmp
call
cmp
cli
cli
mov
pop
test
xlat
lods
ljmp
pop
mov
cmovs
subb
mov
ljmp
iret
inc
or
popf
rclb
pushf
data16
fnstsw
fadd
lcall
arpl
addr16
popf
fcoms
aam
push
popa
insb
and
push
cmp
xor
mov
test
xchg
adcb
cmc
add
push
sub
sar
movsb
jle
decl
add
sbb
daa
lret
mov
outsl
fdivl
rolb
pop
pop
pop
push
mov
lods
push
jns,pt
inc
xor
negl
lcall
add
adc
sarl
push
shl
aaa
cmpsl
xchg
ljmp
xor
int3
out
sub
stos
fstpt
cmp
ret
mov
mov
incl
jnp
jle
mov
mov
loope
sub
mov
sarb
push
mov
lcall
ljmp
je
sahf
pop
xor
push
rcr
dec
fadds
mov
cmpsl
push
xchg
loopne
gs
decl
mov
rclb
rcrl
adc
idiv
movsl
cmp
mov
xchg
int
adc
aas
mov
movsl
rcll
in
stos
cmpsb
je
out
push
int
xor
stos
mov
fnstcw
std
mov
push
mov
cmp
xlat
and
sbb
fcmovnb
add
mov
and
iret
sbb
ljmp
push
lahf
xchg
scas
das
decl
sub
mov
mov
xor
aaa
arpl
dec
int3
adc
or
mov
mov
sub
stos
dec
dec
movsl
subb
out
dec
out
pop
jg
xor
lcall
jnp
sar
popa
aaa
push
mov
jnp
jbe
test
or
push
push
call
inc
mov
out
jbe
and
cmp
cmc
xchg
push
jmp
aad
enter
dec
mov
std
rcr
add
dec
lea
mov
scas
call
out
lds
sub
test
jge
scas
pop
mov
mov
jmp
pop
in
sub
jnp
sarl
mov
insb
pop
icebp
cmc
or
fisubrs
add
ja
pop
push
sbb
scas
adc
sti
push
popf
idiv
lcall
mov
push
daa
inc
mov
cmp
jae,pn
addb
cmp
mov
pushl
cmp
adc
aas
sub
les
pop
out
loop
mov
xchg
ljmp
call
xor
ja
out
ret
fildll
outsb
adc
mov
pushf
rcr
aad
push
lret
jecxz
cltd
xchg
xchg
add
cltd
test
bound
pushf
push
call
inc
in
push
fstps
pop
xor
pop
nop
es
pop
or
movsb
and
add
pushl
mov
dec
pop
cs
push
pop
fdivrp
ljmp
or
mov
mov
loope
scas
pop
pop
lret
call
lahf
mov
pushl
cmpsl
cltd
js
fs
pop
fadds
std
mov
xchg
mov
int3
or
dec
sbb
sarl
dec
call
push
test
mov
fistl
push
jmp
push
ds
sarb
xchg
push
pop
flds
mov
jae
test
nop/reserved
clc
ljmp
pop
repz
lods
xchg
cmpsb
cltd
pusha
push
lock
into
cmpsl
dec
outsb
mov
decl
fs
pop
cmp
mov
fiadds
js
negl
nop
mov
fwait
inc
sbb
popa
dec
dec
jmp
out
fldt
push
pusha
repz
das
pop
ljmp
mov
ljmp
or
xor
sahf
insl
sbb
pop
sub
or
in
ljmp
jne
mov
and
pop
xchg
inc
mov
mov
fsts
mov
add
xor
jo
mov
scas
push
inc
call
negl
hlt
adc
rcrl
aaa
sub
call
stos
add
jg
dec
das
cmp
mov
push
sti
dec
sbb
jle
add
push
shlb
fstpt
stos
mov
pushl
adc
mov
mov
dec
inc
lret
jno
and
push
nop
add
test
or
cmpsb
mov
jns
inc
push
jmp
or
ljmp
and
stc
sbb
mov
aad
jg
lcall
xchg
sbb
lcall
lret
out
pop
imul
push
inc
dec
test
arpl
ljmp
int
fmul
cld
out
add
pop
ret
jg
push
in
test
pushw
mov
push
loopne
cmp
adc
and
outsb
fildll
fisttps
cmp
cli
cmp
mov
decl
pop
xchg
sbb
jb
lret
push
mov
push
pop
pop
jno
hlt
jg
sub
mov
mul
adc
add
add
pop
aam
inc
scas
decb
cs
sbb
fmuls
inc
xchg
lret
filds
in
sarb
xchg
repz
push
dec
lock
jmp
push
js
add
stos
and
iret
xor
outsl
and
and
mov
cmp
push
add
push
pop
dec
loop
test
xchg
jp
pop
sub
loopne
jmp
leave
shll
and
aas
aad
ror
movsl
sbb
sub
add
leave
scas
es
mov
mov
mov
les
outsb
repz
push
rclb
inc
subl
push
jnp
mov
imul
or
icebp
incl
gs
pop
lea
dec
sbb
test
sbb
lcall
and
dec
add
imul
dec
dec
iret
test
cltd
dec
mov
push
mov
lods
mov
cmpsl
aas
cwtl
loopne
lea
add
filds
jmp
pop
push
and
inc
mov
retw
push
pushl
mov
mov
jb
enter
mov
les
inc
das
clc
movsb
add
incl
lods
dec
jecxz
popa
push
jae
sbb
add
inc
fcomip
dec
clc
outsl
int
xor
ljmp
repnz
xchg
clc
andl
pop
decl
leave
cmp
pop
inc
jp
cwtl
add
imul
sarl
xchg
cmp
mov
inc
aam
nop
std
add
fs
cwtl
sub
adc
fs
jo
sub
gs
add
push
ss
sub
cmp
ljmp
nop
pop
pop
sarl
dec
mov
loop
daa
sahf
or
scas
loop
sbb
dec
shrb
inc
fld
pop
xor
inc
int3
out
sub
ficomps
insb
gs
ljmp
inc
es
ret
xchg
or
mov
adc
rcrb
mov
ljmp
popf
rclb
add
xchg
push
pop
fmuls
push
imul
cmp
jno
cld
add
add
xor
decl
cwtl
stos
mov
dec
or
sti
repnz
testl
outsl
stc
pushl
cmp
jp
mov
mov
insl
push
ret
xor
aaa
hlt
leave
orl
mov
push
leave
xlat
adc
in
dec
jmp
mov
arpl
adc
push
mov
les
inc
call
mov
ja
mov
out
xchg
call
inc
sub
jl
xchg
cmp
jo
in
jnp
jecxz
clc
lcall
cli
in
movsb
les
lret
ret
adc
cwtl
bound
out
push
mov
jns
add
es
mov
cmp
mov
xchg
jnp
cmp
dec
xchg
icebp
pop
push
loopne
or
inc
push
test
jl
dec
mov
lcall
mov
sti
inc
xor
pop
xchg
xchg
dec
call
incl
or
and
fimull
sahf
add
mov
hlt
add
lcall
cltd
sbb
mov
dec
movsl
xchg
jo
xchg
mov
mov
ljmp
add
inc
sub
inc
nop
add
test
jmp
pop
sbb
mov
or
pop
jne
cs
pop
pop
or
daa
dec
dec
inc
cld
jg
orb
push
jge
inc
mov
lea
fs
pushl
jnp
scas
inc
adc
outsb
addb
jecxz
cltd
inc
jns
les
jecxz
pop
std
call
call
mov
xor
movsl
aam
js
add
xchg
push
push
test
decl
lea
movsb
xor
sub
stos
sbb
xor
loopne
push
mov
add
lcall
mov
mov
xchg
pop
gs
fs
mov
jnp
int
jnp
jno
stos
mov
push
daa
xchg
add
mov
xchg
mov
mov
dec
addr16
leave
add
mov
ja
shrl
aad
into
jb
cmpsb
nop
repz
mov
cmp
das
inc
xchg
push
daa
add
jo
sbb
sbb
jmp
incl
fisubs
push
xor
bound
daa
inc
adc
push
and
fbld
cmpsl
inc
or
rclb
cmp
clc
ret
call
adc
dec
popf
add
movsb
sbb
std
push
cmp
and
lods
pop
ds
incl
shrb
push
lret
leave
pop
lods
icebp
push
movsl
lret
cmp
sbb
jge
incl
pop
enter
leave
jge
nop
ja
ds
sti
sti
call
sbb
push
sub
mov
int
dec
icebp
sub
notl
sti
lods
lock
mov
ljmp
dec
jne
mov
ljmp
sub
fst
inc
xor
push
scas
cltd
leave
mov
mull
dec
ja
out
push
cmpsl
inc
fiadds
pop
xchg
inc
mov
xor
enter
ja
in
or
insl
filds
cs
dec
out
push
rorb
cmp
and
push
orl
lret
fldcw
mov
cmp
imul
jl
in
mov
addl
test
cwtl
outsl
test
aaa
ja
lea
or
or
push
inc
push
enter
out
dec
jne
pop
pop
imul
ret
es
mov
fcoml
fnstsw
sub
xchg
loop
cld
adc
mov
push
jb
mov
fidivrs
out
jns
xchg
adc
test
clc
push
sub
jge
loope
addr16
das
xchg
call
fisubrs
popf
xlat
shrb
je
psrlq
lods
mov
mov
mov
mov
mov
sbb
mov
aaa
lods
jg
and
push
sarb
ljmp
insl
lret
inc
xor
mov
or
cmp
jmp
pop
repnz
pop
pop
pop
fistpll
dec
adc
call
mov
and
aad
mov
inc
xchg
mov
sub
std
mov
cmpl
decl
push
enter
pop
push
inc
mov
mov
mulb
inc
push
xor
pushl
xchg
sub
loopne
xor
rclb
inc
xchg
pop
jmp
sub
std
incl
mov
and
fdivs
push
aam
mov
inc
cmp
jne
pop
enter
lahf
jo
jmp
and
or
or
les
jb
imul
daa
scas
pusha
mov
call
movsbl
cld
jae
jp
cmc
mov
ss
pop
loopne
shr
jle
xorl
call
push
sub
nop
cld
xor
addl
movsb
cmp
mov
pushl
adc
push
mov
aam
flds
xchg
int
sbb
jp
mov
outsl
lahf
jmp
std
ret
repz
test
pop
in
lods
jl
push
mov
add
insb
sti
mov
and
fnsave
inc
cmc
or
mov
enter
cmc
or
cmp
add
sub
jg
xchg
sub
stc
psubusw
mov
pusha
outsl
mov
or
rorl
cmp
mov
fstp
cmp
xor
cmp
pop
adc
stos
or
xor
incl
mov
cmp
aam
mov
ss
out
data16
rcll
ljmp
mov
xchg
sarl
push
les
pop
adc
cmp
outsb
mov
dec
jmp
jle
test
scas
jb
jg
fildll
and
cmp
lcall
push
sub
inc
std
jae
popf
jecxz
popa
enter
out
bound
notb
fsub
ds
test
sub
incl
rcrl
stc
icebp
add
xor
loop
pop
fists
clc
les
ja
ffreep
mov
imul
jnp
adc
stos
stos
pushf
xor
jp
lcall
ds
mul
or
sbb
fcoms
mov
or
adc
or
dec
movswl
xchg
adc
int
sti
push
jg
pop
sub
adc
std
sub
dec
jge
movsl
ljmp
ljmp
adc
loope
jp
fwait
insl
arpl
ja
dec
in
lret
pop
xlat
lods
mov
sub
call
xchg
mov
mov
xchg
les
ficoms
out
addb
mov
divb
fmuls
fldl
pop
cmp
mov
test
xor
jbe
lret
pop
cltd
imul
bound
push
fsubs
arpl
dec
call
mov
dec
inc
mov
shlb
js
xchg
cli
mov
cmpb
stos
out
jle
sub
in
dec
iret
call
aad
push
mov
das
or
mov
jo
push
icebp
adc
dec
cmpsl
dec
or
int
call
mov
push
je
mov
pop
add
adcb
jl
or
decl
mov
mov
int3
sub
push
cmp
dec
mov
cltd
fidivrl
roll
cmp
inc
or
xor
pop
mov
or
xchg
add
sbb
out
rolb
ljmp
sub
dec
mov
notl
outsb
fsubs
sbb
das
subb
sbb
jne
in
popa
into
shl
es
mov
xchg
cmp
push
cwtl
lcall
lret
push
int
jl
out
aad
cmp
cmc
mov
mov
mov
leave
push
bound
lcall
pop
pop
adc
cmp
out
push
xchg
insb
mov
cmp
subl
push
fcoml
inc
rcrl
shl
sbb
int
fldenv
pop
decl
pop
sbb
les
aam
push
andnps
sub
mov
repz
jne
incl
jp
aaa
xchg
into
mov
or
jg
xchg
push
mov
pop
mov
popa
clc
cmc
imul
cmpsl
and
insb
shr
sti
inc
push
mov
outsb
xor
pop
call
mov
ss
mov
push
mov
popa
and
leave
fdivr
fildll
insl
popa
negb
inc
pop
filds
xchg
imul
test
movsl
dec
mov
mov
cmp
push
in
xor
decl
mov
shlb
inc
cmc
jmp
sub
cli
pushf
xor
sbb
in
push
pop
out
cli
jmp
lods
fwait
into
movsb
lock
outsl
ss
repnz
in
lcall
pop
in
jno
add
push
pop
mov
loope
add
pushf
pop
shrl
incl
adc
sub
jge
arpl
dec
mov
repnz
mov
lcall
lret
fidivl
lods
cmpsb
insb
out
gs
mov
fistps
out
inc
push
sub
orl
out
adc
inc
or
push
mov
jle
arpl
mov
into
iret
xchg
dec
push
mov
mov
jge
adc
jnp
decl
push
and
ss
mov
fs
jl
aaa
push
std
lcall
popa
icebp
aaa
push
jno
and
jp
repnz
je
sbbb
xor
jg
call
adc
out
pop
cmc
xchg
ret
xor
loop
pop
add
mov
cmpsb
shlb
lock
pushl
arpl
mov
in
pop
xchg
pop
int
loope
sbb
pop
mov
icebp
outsl
fbld
cltd
aad
iret
pushf
adc
cmp
std
mov
mov
mov
shlb
fs
ljmp
nop
xlat
in
cmp
daa
pushf
mov
inc
jns
aaa
jnp
mov
pop
inc
xchg
pop
jg
in
rclb
gs
and
pop
and
or
cmp
jp
mov
mov
jecxz
xor
int
cmp
cmpb
lcall
mov
jae
xchg
mov
out
push
sbbb
mov
int3
arpl
sbb
jmp
mov
arpl
ret
stos
or
in
xchg
sbb
es
ret
adc
cmc
or
jecxz
or
fdiv
xor
mov
bnd
jbe
mov
jg
imul
scas
dec
mov
pop
pushf
mov
mov
movsl
enter
fcomi
push
popa
mov
xchg
xor
push
lcall
xchg
push
cli
adc
repnz
mov
or
idivb
push
mov
decl
stos
xchg
inc
test
sbb
adc
cmp
mov
mov
addr16
xchg
push
pop
repz
ljmp
jmp
cmpsb
imull
mov
xor
cmp
cltd
pop
or
insl
adc
sub
cmp
and
popf
xor
js
cltd
pop
lock
inc
ljmp
mov
jmp
and
call
pop
repz
das
outsb
pushl
rcrl
nop
fs
xchg
movsl
push
stos
andl
gs
adc
jmp
xor
xlat
test
jb
sbb
aam
mov
jg
mov
mov
lock
decl
popa
movsl
lea
push
xor
test
das
sbb
mov
ret
cld
call
movsb
xor
pop
cmp
icebp
jl
mov
mov
and
sbb
pop
mov
cmp
fistpll
aas
dec
outsb
jg
and
or
stc
sub
test
sub
psubusb
push
iret
and
test
pop
push
pop
push
push
cmp
scas
jae,pt
arpl
lcall
test
arpl
arpl
out
cli
adc
jb
pop
or
out
cli
mov
sub
dec
cmp
push
stc
aad
mov
xor
and
fcmovb
incl
repnz
pop
aad
cmp
xor
mov
ret
or
and
push
loop
call
mov
or
and
mov
mov
inc
jp
call
fildll
xor
cmp
neg
dec
ret
or
add
into
jae
clc
in
ljmp
repz
and
lds
push
mov
push
inc
xor
mov
mov
cmp
nop
mov
ljmp
pop
sahf
mov
or
lret
xor
pushl
jb
adc
jge
vhaddps
dec
xor
and
xor
push
loopne
jo
push
fstps
lock
cmp
pop
dec
jl
push
test
mov
dec
or
inc
mov
hlt
pushl
sbb
ficoml
add
mov
sub
and
cmp
mov
popf
lcall
xchg
mov
pusha
xor
xchg
cli
call
movzwl
xchg
jl
cmpsb
pushf
sbb
aam
adc
mov
cmp
cltd
inc
xchg
leave
loopne
push
ret
pop
loopne
and
cltd
sub
lahf
or
loope
imul
adc
dec
imul
stos
leave
mov
and
aaa
je
pop
pop
xor
out
inc
push
cmp
dec
ljmp
push
clc
je
dec
jnp
adc
sbb
mov
stc
in
push
sub
cwtl
leave
mov
mov
jg
mov
imul
hlt
int
mov
and
add
push
das
and
sub
lods
jns
mov
loop
cmp
and
jecxz
cmp
call
int3
sahf
cwtl
jmp
insl
in
fsub
stos
push
mov
cmp
push
jnp
push
xchg
ret
es
or
fadds
insb
ret
or
xchg
ljmp
adc
subb
adc
repz
mov
jbe
aam
sbb
cmp
leave
aaa
cmpsl
test
aas
shll
jno
inc
and
or
js
mov
call
decl
scas
aas
fwait
je
xlat
repz
mov
incl
adc
daa
cmp
popf
aam
insb
xchg
aas
into
stos
cmpsb
mov
sub
inc
mov
cmp
pushl
out
xor
and
push
sbb
mov
add
call
repnz
sub
repz
lret
add
pop
out
leave
dec
fmuls
cld
mov
sub
push
jbe
stos
add
dec
inc
in
stos
data16
ljmp
mov
push
push
xchg
pusha
inc
sti
insb
negb
push
mov
mulb
mov
jg
cli
fistpl
xchg
or
xor
jb
lea
mov
dec
es
cmc
and
sbb
out
and
inc
sub
xchg
shrd
pushl
je
or
sub
mov
mov
mov
and
ja
lods
test
aaa
std
fdivrs
inc
js
pusha
push
pop
mov
jg
pusha
inc
inc
insl
pusha
das
clc
call
lods
cltd
lret
push
test
loope
jle
jg
lock
mov
add
scas
mov
fdivrl
or
loopne
out
adc
pop
sti
add
movsb
stos
rcrb
movsb
push
xchg
mov
pop
or
mov
pushf
inc
jecxz
mov
inc
sti
out
add
rcl
scas
mov
push
inc
mov
inc
lea
dec
push
daa
imul
adc
pushl
mov
jmp
lods
sbb
lods
movsl
outsb
imul
add
pop
data16
jp
std
std
cmp
shrb
mov
fcomip
call
adc
insb
into
xlat
jno
loop
xchg
xor
imul
je
pop
xor
mov
pop
or
out
mov
inc
shl
add
xchg
cmpsl
push
push
mov
mov
jg
mov
lods
mov
lock
ds
sub
enter
xchg
cld
jmp
jge
mov
fnstcw
incl
adc
dec
dec
sbb
dec
lret
mov
cmp
mov
in
ds
lcall
cmpl
mov
pop
sub
mov
xchg
movsl
inc
imul
pop
mov
pushl
aas
cmpsb
js
mov
hlt
nop
dec
iret
mov
pop
lahf
repz
push
clc
clc
gs
jg
mov
int
inc
out
sar
inc
je
xor
into
iret
sub
lahf
dec
shll
jecxz
ds
mov
add
push
push
fisttps
or
xchg
adc
ret
shrl
ljmp
lods
rclb
out
pusha
cmc
test
ret
imul
sub
push
push
dec
movsl
shlb
or
sar
cmc
call
xchg
rorl
idivl
add
gs
mov
jmp
lcall
out
andl
xchg
push
ds
xor
bnd
fcmovu
shl
jno
popa
mov
xchg
jmp
and
clc
sub
cwtl
pop
or
pop
cmpsl
xchg
sti
lahf
ja
adc
or
inc
loope
popa
stos
movsl
pop
ret
sub
or
push
mov
mov
decl
dec
cmp
jmp
je
in
push
add
fcomip
decl
mov
cld
push
sub
mov
and
jecxz
inc
cmp
incl
xchg
test
iret
mov
cmpsl
nop
jecxz
fwait
and
mov
mov
ret
imul
test
dec
mov
data16
ljmp
js
aam
outsb
out
testb
cmpb
or
inc
in
mov
mov
call
push
addb
fsubp
decl
add
cmp
daa
mov
in
shlb
dec
je
stc
popf
mov
mov
ljmp
lcall
xchg
daa
fsub
push
pop
or
fdivrl
xchg
inc
lcall
sub
lret
dec
pop
mov
sar
jne
mov
mov
adc
fisubl
in
xchg
add
rcrl
pushl
clc
or
cli
lahf
into
dec
test
dec
jns
aas
jle
xor
incl
stc
ds
insb
dec
cmc
inc
popf
es
xor
push
xchg
push
test
jmp
xchg
xchg
out
out
sbb
mov
mov
int3
xchg
sahf
add
fistps
xlat
call
sti
mov
dec
outsb
mov
scas
out
cmpsb
out
fdivl
repz
loop
dec
arpl
sub
xor
inc
xor
pop
fadds
or
push
pop
mov
test
lahf
or
jns
push
andl
xor
negb
lea
cli
cld
xor
int3
xlat
add
ljmp
and
jae
add
lcall
popa
jne
pop
mov
sbb
fcos
and
stc
sub
inc
lret
mov
jo
add
int3
add
inc
xchg
jbe
inc
mov
int3
out
imul
jmp
push
fdivrs
and
repz
fstl
push
xor
call
push
aam
and
sahf
mov
fbld
mov
xchg
push
push
stos
jb
into
scas
pop
pop
in
mov
sub
roll
rcll
mov
and
shl
sar
pushl
jo
fsubrl
adc
xchg
sbb
sub
push
xchg
call
std
pop
mov
pop
in
test
fcomps
daa
test
cmpsl
dec
push
cmp
clc
int
jmp
hlt
stos
inc
aaa
cmpsb
xor
and
dec
pushl
ficompl
repnz
adc
xor
subb
scas
xchg
jg
and
decl
mov
mov
pop
insl
sub
cli
das
addr16
mov
jle
call
mov
jns
jne
push
mov
fcmovnu
mov
xor
cld
movsb
jg
adc
push
lods
mov
mov
inc
ror
jo
mov
popf
mov
push
inc
mov
cmp
fildll
sbb
push
sbb
mov
cmp
jg
push
stc
psubw
or
mov
cmp
jg
cmc
pushl
cmp
jno
ss
es
xchg
fmuls
lcall
sbb
popf
insl
ret
push
mov
mov
incl
insb
leave
out
or
add
mov
mov
sub
mov
lcall
loopne
cmp
pop
xchg
lcall
je
xchg
adc
xlat
insl
fdivr
jmp
sbb
in
dec
dec
out
aad
lods
dec
push
push
push
xchg
int
or
repnz
mov
incl
out
or
stc
fnstenv
xchg
pushf
add
push
addb
jge
push
scas
nop
icebp
jmp
ja
jo
mov
lods
adc
xor
inc
push
decl
cmp
nop
test
add
call
mov
mov
mov
and
call
push
orl
sub
filds
or
out
xchg
repnz
ja
loopne
dec
repnz
subl
fisttpll
arpl
cmp
xchg
cmc
fdivs
shrb
cltd
pcmpeqw
insb
inc
cmpsl
in
lret
jmp
loope
mov
add
pushl
add
adc
repnz
arpl
es
iret
push
xchg
out
pushf
mov
pushl
mov
test
add
mov
or
jne
or
push
aaa
xchg
pop
mov
cld
cmpsl
pavgb
loopne
cmp
jmp
jg
sbb
push
jns
bound
lods
aas
dec
mov
rcll
mov
mov
test
ficoms
dec
out
pop
imul
add
jp
insb
clc
cmpb
fsubl
cmc
mov
int3
stos
pop
xchg
inc
jl
ljmp
jg
sti
insb
xlat
enter
pusha
mov
adc
lret
shl
dec
movsb
and
pop
or
fldl
mov
jmp
nop
sbb
add
fstpt
lods
cltd
push
inc
pop
rcrl
sbb
incl
fdivl
jmp
push
inc
icebp
stc
loopne
fldl
push
xlat
add
add
insb
fucom
push
popf
mov
pushf
sbb
popa
sub
les
jg
incl
push
jns
ja
loope
and
in
stos
xchg
pop
mov
fwait
sbb
roll
test
test
repnz
jno
sbb
bound
test
mov
das
mov
clc
insl
and
dec
mov
cld
xor
je
in
lret
adc
sub
sbb
cmp
fs
pop
fistps
stos
sub
add
ljmp
dec
pop
les
or
mov
rolb
adc
push
xchg
lahf
adc
idiv
lcall
push
lea
dec
pop
push
imul
mov
mov
out
test
lcall
add
inc
imul
iret
lea
addr16
int
jbe
sar
ljmp
sub
xlat
sub
adc
inc
ret
je
sbb
dec
adc
xor
gs
cmp
sbb
nop
lret
cwtl
mov
out
xchg
dec
sti
stos
mov
mov
sub
loope
das
push
dec
js
mov
insl
or
divl
lcall
mov
je
xor
fstpt
sbb
and
aaa
pop
adc
mov
ret
adc
aam
hlt
mov
nop
pop
xchg
nop
xchg
fidivrs
lahf
pushf
sub
stos
ja
les
mov
pop
hlt
incl
movsl
jle
iret
std
imulb
fisttpll
pop
andb
jo
lcall
cmp
jp
das
movsl
pusha
mov
pop
or
fisubl
and
rcll
push
lods
sbb
push
fcmovnu
cmp
dec
push
jmp
int
jg
call
add
xchg
cli
sub
pop
and
lcall
mov
push
lock
incl
sub
lahf
xor
adc
sbb
push
sub
lea
out
push
sahf
add
inc
add
call
pop
mov
cmpsb
mov
adcl
add
sbb
jg
fstl
add
mov
inc
inc
call
dec
jmp
popa
insb
lods
js
mov
jno
inc
add
push
inc
loope
loope
dec
cs
ret
ljmp
jmp
int
push
push
jns
mov
aad
pop
mulb
inc
adc
and
dec
fwait
push
lea
test
rolb
push
add
aam
xor
lret
sbb
dec
aas
imul
incl
lret
jo
test
adc
cld
pop
fwait
sti
ja
shlb
mov
jp
pop
lods
xchg
lcall
roll
int3
cmpsb
sbb
ljmp
test
xchg
js
xor
std
or
movsb
jb
add
daa
fwait
and
ljmp
cmpsb
inc
adc
stos
cmp
cmp
push
add
add
mov
pop
enter
adc
inc
insl
shlb
js
fstp
and
test
das
je
jmp
adc
pop
mov
or
sti
jbe
dec
imul
subb
sti
cmp
xor
xor
push
and
lret
ljmp
cltd
subl
loopne
jg
cmp
mov
mov
mov
pop
ja
xchg
inc
loopne
jg
in
add
push
sti
cmc
ret
adc
jo
and
inc
mov
xchg
inc
iret
sarl
push
mov
faddl
mov
fcomi
pop
xchg
in
mov
mov
call
loopne
xor
sub
lock
enter
stos
in
xorl
and
lock
je
mov
ljmp
jle
and
test
jle
test
cmc
lds
fcoml
xor
sub
aaa
fdivr
mov
cmp
mov
jge
pushl
int3
cmpb
out
xor
fwait
sahf
ret
inc
pop
sub
jno
push
lahf
nop
dec
xor
fisttps
loope
adc
jns
or
scas
add
subl
pop
sbb
call
test
pushf
outsb
in
popa
mov
shl
fcoml
stc
fstps
cmpsb
ljmp
call
push
push
and
mov
inc
cmp
or
adc
leave
mov
push
xchg
mov
sub
imul
cmp
push
jo
sub
shl
mov
push
jb
dec
fxch
nop
mov
popa
aad
xor
decl
dec
and
outsb
cld
or
cwtl
int
sub
xor
dec
sbb
jp
jg
jg
xor
call
inc
inc
fidivs
sahf
rol
sar
jle
out
inc
push
loopne
inc
faddl
jge
mov
ljmp
push
ret
cmp
int3
int
inc
jb
fsubrp
pop
sbb
add
cmpsb
repz
xchg
addr16
ljmp
push
aad
sub
sub
pop
pop
insl
push
pop
xchg
xchg
hlt
loopne
movsb
mov
fmul
mov
xor
incl
ja
mov
int3
mov
gs
enter
sub
loope
jnp
mov
test
rolb
sub
cmp
cmpsl
push
sub
adc
or
jg
call
inc
popa
pop
jae
xchg
aad
out
andb
cvtps2pi
scas
and
jmp
xor
mov
aas
pextrw
and
mov
dec
cmpsl
add
in
in
repz
lods
add
test
dec
push
sahf
aad
xchg
mov
das
mov
mov
vpgatherdq
fsubrl
push
and
jmp
scas
pop
jae
inc
imul
hlt
mov
lods
and
mov
jg
cwtl
adc
xchg
cmc
mov
decl
xchg
mov
sub
incl
pop
xchg
clc
popa
push
scas
xchg
aas
jne
xor
out
jbe
das
sar
dec
mov
adc
mov
imul
cmpsb
js
xor
push
jb
decl
jmp
shrb
clc
pop
insl
jl
fsubrl
lretw
das
ss
out
call
mov
aaa
data16
inc
or
out
in
sbb
stc
aam
mov
ja
mov
dec
jle
maxps
sub
xor
leave
cmp
dec
scas
lahf
push
xor
call
sub
dec
sub
nop
stos
leave
sbb
sbb
mov
mov
nop
jmp
imul
inc
or
loope
loopne
stos
repz
mov
mov
loopne
fcoms
decl
sub
inc
push
repnz
loop
mov
mov
inc
adc
sbb
mov
decl
jbe
leave
push
pop
push
mov
or
inc
test
shll
jg
outsl
shr
ljmp
out
fimull
rclb
mov
out
sub
xor
insb
xchg
pop
dec
sub
shrb
jb
sub
call
negb
cld
inc
les
cmp
fsubrl
adc
sti
mov
ja
jg
outsl
fwait
jle
cmp
test
insl
push
lods
insl
sbb
repz
and
clc
xchg
sub
xchg
enter
cs
mov
sub
push
je
dec
inc
add
cld
jmp
stc
loopne
sub
and
xchg
sar
filds
test
notb
dec
insb
cld
dec
push
pushf
icebp
test
jb
divl
mov
aam
pop
test
mov
pop
aaa
sub
mov
pop
push
outsl
and
lcall
cmpsb
adc
inc
or
js
les
fdivp
mov
sub
incl
stos
pop
and
xor
cli
lahf
sbb
jne
test
dec
icebp
xchg
cmp
call
inc
loope
push
aaa
inc
mov
in
in
xrelease
and
dec
add
push
loope
repnz
repnz
xchg
sbb
pop
clc
ljmp
inc
ds
lret
jmp
cmp
sarb
popa
js
addr16
jae
mov
rcr
arpl
decl
cmp
or
cmp
lcall
fs
sti
cmp
dec
icebp
xor
dec
sub
pop
int3
and
mov
sarb
add
xor
and
dec
psraw
call
stc
es
test
or
xchg
xchg
rcr
sub
incl
orl
ret
call
sahf
out
aaa
pop
mov
mov
aaa
int3
and
rorl
arpl
lahf
test
mov
decl
jbe
adc
xor
push
insb
add
ja
mov
ud0
dec
popf
dec
sbb
pusha
xchg
xor
shl
enter
mov
sub
xchg
inc
out
ljmp
lcall
int3
dec
or
jnp
cwtl
and
pop
mov
jmp
test
scas
les
pushl
movsb
mov
dec
or
test
call
subb
jb
and
aam
push
pop
mov
shl
add
lods
sub
cmp
inc
jmp
push
lret
int3
addb
inc
stc
in
or
ljmp
jno
insl
ss
jl
pop
lret
pop
aad
lcall
xor
sbb
cmp
and
xlat
arpl
outsb
sbb
jg
jae
out
jae
lea
cwtl
stos
xor
mov
inc
out
es
mov
jg
jmp
shrl
lret
jo
xchg
sub
xorl
pushl
cmp
stc
movsl
push
dec
push
ds
addr16
cmp
xchg
add
jg
jmp
cmpsb
push
jmp
popf
cli
pop
and
xor
out
pop
stc
xchg
ljmp
decl
ljmp
xchg
arpl
enter
pushf
dec
movsl
inc
es
cmp
icebp
mov
pushf
dec
outsb
mov
push
adc
loop
xor
incl
std
xchg
clc
in
fdivrl
and
fdivrs
lcall
push
fdivr
incl
inc
mov
sbb
mov
fsubrl
mov
cwtl
add
push
add
fcoml
dec
push
jecxz
jle
test
pushl
sbb
cs
test
cwtl
rcrl
cmp
pop
jecxz
jmp
jns
iret
negb
mov
xchg
xor
insb
xchg
or
add
subb
incl
lea
imul
stos
add
inc
xchg
and
pop
add
and
in
jmp
cli
mov
in
jbe
lret
xor
out
and
or
sub
lahf
stos
inc
inc
xchg
lcall
inc
and
ret
or
hlt
imul
imul
das
cli
adc
jp
push
outsb
xchg
lea
fsubrl
sub
jle
lcall
les
xor
mov
sub
lcall
incl
xor
int
arpl
mov
out
jg
sbbb
cmp
add
incl
enter
push
fdivrl
outsb
push
lahf
add
cmpsl
xor
jmp
iret
insl
sub
and
push
out
out
cmp
add
cmp
das
mov
pop
mov
pop
insb
jmp
and
dec
jecxz
pop
or
std
mov
mov
add
es
adc
sbb
jnp
push
subb
scas
add
and
xor
sarb
xor
mov
decl
mov
pop
outsb
lcall
int
fwait
in
inc
bound
xchg
sub
aaa
dec
pop
inc
shrl
icebp
jl
mov
ja
movsl
cmp
fdivrp
std
pop
adc
xchg
insb
stos
xchg
cmp
out
dec
insb
push
pop
cmp
ret
les
pop
pushf
in
dec
lcall
icebp
rcll
out
cmp
les
movups
enter
into
jp
mov
lock
mov
je
cwtl
into
stos
in
xchg
mov
inc
or
loope
xchg
or
mov
rcl
add
call
fs
outsb
adc
call
pushl
addb
pop
shlb
xor
pop
mov
push
fdecstp
dec
into
out
cli
jmp
test
addb
inc
lock
addr16
jns
jg
js
push
orb
fiaddl
clc
fs
dec
jae
in
dec
test
mov
cld
incl
cli
push
xor
loopne
lcall
lcall
mov
inc
cltd
sar
loop
movsb
stos
loopne
sarl
incl
imul
imul
mov
add
xchg
in
shll
into
dec
inc
shlb
ja
jmp
or
sub
xchg
add
mov
sub
sahf
push
or
add
mov
fmulp
xor
out
push
jle
jb
imul
push
fstpl
jo
shrb
mov
hlt
mov
mov
pop
mov
inc
mov
call
repz
adc
mov
pop
aad
aad
decl
sub
jbe
test
das
mov
clc
mov
adc
stc
addb
add
incl
jmp
int3
aaa
imul
out
jmp
mov
mov
pushl
sbb
and
cs
adc
push
ret
aas
xlat
in
push
ja
xor
jp
es
cmp
lcall
lea
sub
xor
mov
leave
scas
mov
dec
mov
incl
cs
inc
xlat
out
das
test
test
ret
pop
enter
pushf
adc
lcall
and
cmpsl
push
mov
scas
pop
dec
push
jmp
and
inc
test
cli
jnp
fs
adc
insl
and
into
pop
stos
sbb
lret
std
mov
or
adc
repnz
sub
sub
xlat
inc
arpl
mov
inc
pop
inc
lods
cmp
mov
gs
push
pop
adc
mov
push
adc
and
mov
add
mov
sbbb
and
inc
shl
fs
mov
es
lcall
ret
mov
jns
lods
gs
bound
or
cmp
ja
ljmp
outsb
sti
inc
imul
lahf
in
pusha
ret
dec
cmp
repz
fistps
xor
fmull
mov
stos
clc
cmc
das
jbe
mov
test
jmp
sti
loope
mov
int3
xchg
divb
sbb
mov
push
sbb
mov
jecxz
lcall
imul
adc
jl
lea
lods
dec
cmp
movsb
rolb
call
cld
adc
orb
mov
jns
out
test
mov
out
push
cmp
jmp
jg
hlt
push
cmp
mov
pop
insl
xchg
jmp
lock
loop
cmp
push
std
mov
inc
adc
mov
cltd
sbb
pushl
mov
int
mov
jmp
sub
test
idivb
out
jmp
mov
mov
movsb
sub
fcmovb
dec
fwait
jl
jl
insl
xchg
push
insb
popf
pusha
mov
sti
mov
repz
xor
in
aaa
mov
fld
icebp
lods
pushl
andb
pop
xchg
dec
jbe
lods
xlat
cmpsb
lds
iret
or
cmp
js
rcll
mov
mov
push
sbb
in
shlb
mov
add
mov
jbe
mov
call
and
sti
pop
xor
and
inc
add
mov
imul
ss
aam
pop
cmp
int3
sbbb
lcall
push
rorb
add
add
mov
sbb
sahf
dec
sub
incl
into
sub
mov
fcoms
stc
lods
sub
sbb
push
pop
and
adcl
call
jle
inc
xor
subl
dec
add
incl
mov
das
ret
loop
mov
xchg
ljmp
xchg
movsb
sub
pop
lods
adc
pop
cld
jmp
cmpsl
mov
pusha
mov
cwtl
dec
sub
in
testl
jg
push
jecxz
cmp
cmp
and
xchg
out
rclb
pop
cwtl
cmp
cmp
mov
dec
or
dec
push
cmpsb
jge
add
lret
shl
dec
xchg
push
test
pop
cmp
jae
cmp
ljmp
lea
or
cmp
testb
test
jbe
lcall
enter
push
test
cmp
lea
mov
mov
shll
sar
decl
adc
call
cltd
je
cmp
add
or
or
mov
sub
add
std
lods
inc
mov
repz
fcoml
mov
data16
lcall
into
sub
test
sti
push
addr16
lods
movsb
or
push
or
and
mov
or
in
push
aad
stos
mov
sar
call
ds
stos
rorb
into
insb
jns
dec
cmpsl
xchg
push
repnz
add
mov
lcall
mov
pop
add
stc
dec
out
pop
cltd
lods
pop
fwait
shrb
jo
fsub
out
arpl
call
lods
repz
outsl
mov
mov
stos
and
scas
jmp
aaa
lahf
push
out
jo
fdivr
pushl
shrl
dec
shrb
mov
cwtl
mov
cmc
mov
dec
sub
mov
mov
jmp
in
rcll
or
jle
sahf
dec
rorb
ljmp
inc
sub
mov
jo
sarb
je
xchg
cmp
lret
data16
int
loope
xchg
xlat
sahf
test
and
xor
test
ljmp
inc
nop
scas
adc
out
pop
cwtl
pop
inc
push
fisubrl
bound
xor
jnp
addr16
push
lock
std
decl
cmp
fcoms
sbb
cwtl
jbe
cmp
fisubs
call
arpl
popa
std
or
xchg
mov
cmpsl
add
test
sbb
out
cltd
les
lcall
mov
mov
xchg
add
sub
cmp
jle
faddl
ret
mov
insb
imul
sub
popf
mov
insl
jb
int
inc
mov
sbb
mov
decl
mov
scas
jns
lcall
mov
adcb
push
pushl
cmp
test
imul
data16
jl
sahf
sbb
ljmp
mov
mov
int
or
arpl
mov
mov
sbb
dec
aas
mov
pop
xchg
lds
push
inc
insl
std
ds
adc
sub
sub
jg
fisttps
fsubl
gs
sbb
mov
add
fs
xchg
pop
pop
mov
fmul
push
mov
jb
lcall
mov
mov
cmp
hlt
popf
das
mov
or
sbb
jns
add
decl
sbb
cmc
cmpsl
fstps
scas
movsb
sub
hlt
mov
sub
push
dec
or
jne
arpl
mov
out
xor
mov
sub
stc
repnz
jbe
mov
adc
data16
jmp
leave
jne
sarb
xor
insb
fisubrl
rorl
push
loop
jmp
fists
push
xor
inc
pop
insb
pop
xchg
pushf
int3
and
cli
subb
ljmp
pushf
dec
js
lcall
sub
popa
lret
adc
aam
ds
adc
add
incl
divl
sbb
lcall
decl
int3
xchg
sub
jmp
lret
inc
daa
xchg
jmp
xor
in
decl
test
pop
scas
push
and
dec
mov
adc
and
bound
jmp
xchg
jecxz
subl
mov
push
in
cmpsl
idivl
lods
cs
enter
adc
bound
pop
sbb
push
das
pushl
js
add
and
mov
push
adc
js
jg
mov
lds
call
adc
sbbl
xchg
pop
inc
idivl
mov
data16
push
std
add
pushl
or
repnz
addl
or
jne
out
call
adc
rcrl
push
push
add
divl
dec
dec
sbb
add
jp
es
jnp
mov
inc
call
push
jmp
gs
jle
pop
or
mov
push
mov
mov
pushl
outsl
movsb
push
hlt
pop
or
mov
xor
daa
dec
xchg
sub
dec
fmuls
call
xchg
call
cwtl
fs
and
sub
shlb
jle
iret
add
cld
xchg
test
ret
lock
clc
push
add
scas
addl
push
pop
jae
and
call
cmc
mov
mov
or
xchg
and
add
pushl
cli
jle
sub
shlb
push
ljmp
addl
inc
fmull
mov
add
popl
lcall
inc
movsb
mov
and
jge
sub
mov
mov
dec
xor
and
mov
rorb
mov
lods
sub
int
cmp
mov
cmp
add
lcall
push
pusha
push
ljmp
insb
sahf
inc
mov
sub
das
add
dec
pop
js
out
cli
jmp
leave
xchg
pop
faddl
jns
popa
lret
adcl
outsb
or
add
or
pushl
push
or
add
xchg
outsb
push
add
xchg
fwait
inc
in
jmp
pop
sbb
faddl
in
leave
pop
ret
dec
mov
mov
cmpsb
icebp
bound
sarl
jmp
fsubr
repz
loopne
adc
dec
call
pop
push
xchg
adc
nop
testl
call
pop
pushf
sub
rolb
or
sub
bound
jle
inc
prefetch
out
lret
mov
inc
fdivs
movsl
pop
dec
pop
addb
rcl
jl
insl
cld
jae
add
push
les
and
jno
or
cli
jne
stc
jg
popa
cmpl
pushl
dec
ret
inc
mov
and
pop
in
push
mov
js
movsb
nop
dec
dec
and
fwait
add
call
mov
movsb
mov
dec
and
clc
das
btc
cmpsl
lds
or
cmp
add
mov
stc
push
add
pop
data16
inc
fcomip
sbb
and
enter
inc
mov
mov
adc
data16
xor
fcoms
xchg
popa
push
int3
sti
sub
jmp
push
cmp
dec
ljmp
cmp
xor
imul
das
pop
fcompl
aam
jno
jecxz
decl
call
xor
xchg
jmp
aam
xchg
imul
fldt
ffree
and
mov
out
jl
push
aaa
nop
cwtl
push
ret
jae
test
rcrb
mov
ljmp
shrl
test
iret
sub
dec
or
add
xchg
sub
push
dec
inc
add
call
aam
in
dec
mov
sahf
dec
jg
rclb
pusha
mov
fiaddl
xorb
sbb
int
rcrl
push
aam
lcall
cltd
lds
mov
xchg
std
ds
lea
lods
test
clc
mov
inc
call
int3
dec
jle
ja
cmp
ljmp
mov
js
bound
jno
mov
div
xchg
inc
addb
test
inc
sub
dec
push
push
arpl
push
adc
mov
mov
cmpsl
gs
cmp
call
and
xor
adc
and
mov
or
stos
mov
lods
mov
test
ljmp
outsl
pop
push
fldt
pop
shlb
or
loopne
shll
xlat
xor
sbb
mov
push
cmpsb
imul
xor
mov
loope
inc
jp
shll
shl
ss
iret
jne
adc
mov
in
xlat
jno
xchg
inc
jb
mov
mov
frstor
pusha
aas
mov
pushl
and
in
xor
data16
inc
xchg
xchg
mov
pop
ja
inc
inc
hlt
out
jo
icebp
mov
xlat
xorl
sub
ljmp
aam
or
inc
adc
cwtl
fnstcw
test
decl
es
push
inc
cmp
je
nop
xor
push
lcall
adc
push
incl
dec
push
inc
iret
rcr
xor
jnp
lds
cmpsb
lods
xchg
into
sti
xchg
scas
je
add
cmpsb
icebp
dec
sbb
orl
das
shlb
fists
push
push
push
clc
jbe
sub
adc
push
ljmp
xchg
adc
pop
lcall
cmp
sbb
sub
cmpsb
and
push
loope
cmp
push
loope
iret
push
out
jmp
fmul
dec
cld
sub
inc
dec
cs
inc
mov
push
call
dec
sbb
pushf
subl
dec
pop
sbb
xchg
cmpl
push
push
cmp
and
out
push
sti
push
stc
mov
sahf
xchg
and
arpl
mov
int3
push
ret
in
ljmp
iret
ret
int3
test
cmp
call
and
shlb
ljmp
sahf
sub
fs
jmp
ss
push
sbbb
and
jle
ret
push
sbb
mov
shl
inc
cmp
mov
mov
and
arpl
lcall
das
stos
loop
xor
test
adc
jmp
mov
add
roll
or
stos
aad
jnp
lea
in
push
xor
jl
mov
jo
ret
idiv
push
mov
jle
inc
add
pusha
jg,pn
xchg
sti
inc
fcmove
fdivrl
ret
dec
decl
pop
mov
leave
xorb
aas
mov
hlt
push
addr16
ljmp
repz
sub
test
pop
push
mov
push
clc
push
mov
mov
data16
jle
push
fistpl
jmp
adc
mov
aam
cmp
jmp
cs
pop
rclb
push
ds
jmp
lock
int3
or
sahf
or
in
mov
and
adc
sti
js
sbb
adc
fwait
jl
push
imulb
pop
pop
out
loope
aad
or
enter
outsb
enter
stc
popa
add
adc
xor
sbbb
mov
adc
popf
fchs
pushl
dec
out
les
mov
jl
mov
outsl
sub
mov
in
push
lods
adc
cmp
les
data16
lret
mov
jo
mov
mov
shrl
icebp
mov
gs
and
pop
incl
and
sbb
fucompp
popa
sub
leave
sbb
clc
jl
cmp
inc
xchg
xor
into
aas
nop
out
sbbb
mov
cmp
ljmp
or
icebp
xchg
mov
aas
popa
dec
outsb
pop
push
out
mov
ds
gs
inc
mov
lcall
repz
mov
xchg
and
mov
aaa
cmp
xor
mov
jmp
jae
in
imul
mov
add
jns
inc
sbb
iret
dec
xor
daa
dec
mov
sub
xchg
jg
jne
imul
mov
mov
mov
in
ljmp
call
cli
dec
mov
pop
out
pop
push
aaa
loope
leave
inc
clc
push
std
inc
cli
aad
pop
insb
pop
pop
xchg
push
dec
call
ljmpw
cmpsl
jne
aaa
dec
xchg
pop
add
xchg
bound
xchg
into
cwtl
xor
push
mov
call
mov
mov
push
mov
setl
loop
or
adc
call
call
sti
addr16
mov
push
fwait
sub
xchg
mov
mov
sti
sarl
daa
jge
lret
or
cmp
push
push
or
jmp
fnstenv
jo
shll
pop
mov
scas
inc
cmp
adc
cli
imul
inc
outsl
clc
decl
adc
fbld
dec
aas
xor
cmc
mov
push
test
mov
push
pushl
stc
cmpb
inc
pop
mov
cmpl
stos
sbb
cld
mov
mov
js
lcall
data16
jo
outsb
cli
or
jecxz
jp
addb
pop
add
out
jge
jg
lcall
sar
dec
mov
mov
jecxz
fistl
inc
ljmp
out
or
mov
loop
gs
int3
insb
xor
fbld
movsl
xchg
add
mov
cmp
sub
xor
xchg
cwtl
add
fcoms
inc
cmpsl
fcomps
inc
mov
mov
inc
ss
mov
add
xchg
movsb
jno
test
lret
outsb
cmc
test
addr16
stc
mov
fnstcw
shr
rcl
cmp
pop
idiv
out
test
sar
mov
jmp
mov
dec
jecxz
add
cmc
or
into
movsl
xchg
lcall
or
mov
iret
mov
mov
roll
arpl
cltd
pop
std
pop
jmp
inc
dec
and
icebp
shlb
in
inc
ljmp
in
pushl
xlat
inc
sbb
mov
mov
xor
jae
push
pop
xor
push
adc
loopne
aaa
es
mov
jbe
ds
movsb
ja
cmp
and
inc
fimuls
xchg
xlat
lret
cmp
stos
sbb
mov
pushf
cmpsl
ja
adcb
mov
imul
repz
and
jae
adc
aas
and
dec
in
pop
xor
pushl
sarl
cld
mov
dec
sahf
scas
cmp
mov
dec
das
mov
cmp
incl
shll
jno
xchg
lods
sarl
lcall
stos
mov
add
pop
xor
push
ljmp
movsb
or
dec
das
jecxz
xchg
add
aaa
fwait
rolb
ljmp
lcall
enter
shrw
loopne
sbb
jg
sbb
inc
cmp
insl
mov
sub
pushl
dec
cmp
lea
xor
hlt
add
pop
sbb
jle
xchg
sbb
add
mov
insl
popf
pop
rcll
je
push
push
inc
scas
enter
adc
inc
cmp
repnz
mov
xlat
addr16
jge
int3
adc
cli
add
push
stos
icebp
jmp
addb
fwait
push
cmp
loopne
lret
lods
pop
les
repnz
lcall
jl
sbb
xor
inc
lahf
orl
xor
cmp
fisubl
and
xlat
or
push
dec
stc
mov
test
inc
xor
idiv
incl
lret
push
lods
iret
cld
clc
ss
xor
out
add
call
mov
icebp
mov
pop
fnstcw
add
adc
call
mov
hlt
ljmp
out
aad
mov
cmpsb
sub
push
gs
jb
loope
mov
mov
or
lahf
and
jge
xor
adc
imul
cwtl
xchg
dec
pop
sar
jg
add
add
rcr
popl
jge
lcall
div
jmp
push
pushf
std
inc
xor
jge
mov
sahf
icebp
dec
lods
iret
int3
fs
pop
or
enter
das
rolb
in
mov
test
pop
inc
lret
out
inc
jg
rcrl
iret
and
pop
inc
push
push
insb
push
jp
dec
jg
inc
jnp
jno
mov
fnsave
call
and
adc
cmp
call
mov
jle
aam
adc
ljmp
lods
les
pop
sub
xchg
cmc
fistpll
jp
addb
insb
pop
xchg
mov
push
mov
leave
xchg
mov
fbld
xchg
out
bound
ljmp
les
dec
dec
lock
sarl
push
in
pop
xchg
cmp
imul
sub
xor
int
dec
push
fucomip
and
add
scas
jmp
call
jo
push
mov
sbb
pop
dec
out
andb
sbb
imul
add
test
or
in
jbe
inc
sahf
xchg
in
cmp
pop
lcall
dec
inc
push
mov
mov
pop
outsb
push
dec
fwait
out
inc
xor
int
xchg
loope
lcall
jnp
cli
and
sahf
adc
mov
and
jg
or
ds
icebp
mov
les
sub
ret
imul
lods
ds
adc
ljmp
clc
cmove
add
mov
xor
pop
insb
stc
and
std
mov
mov
push
scas
mov
ret
aaa
and
xchg
insb
xor
sub
cmc
ljmp
mov
or
cmpsb
scas
mov
jle
lods
adc
add
jl
pop
call
mov
ret
or
movsb
xchg
popf
test
hlt
ror
push
repnz
incl
xchg
or
push
dec
cmp
mov
scas
loop
jp
loop
in
aas
adc
mov
decl
into
lods
xor
fildl
ljmp
mov
out
mov
push
rorb
rolb
mov
sbbl
pop
rclb
in
jo
mov
add
incl
mov
push
call
sbb
out
xlat
and
std
out
jg
mov
sahf
sbbb
enter
insb
lods
inc
lods
dec
int3
clc
addb
fdivs
xchg
xlat
scas
adc
jnp
or
pop
cmpsl
adc
push
mov
out
lret
ret
scas
ljmp
mov
outsb
daa
xlat
jns
popa
loope
adc
or
outsb
or
call
mov
je
push
stc
sbb
xor
sub
mov
push
adcl
sbb
out
dec
ljmp
stos
xchg
sbb
cmc
ljmp
mov
jg
cmp
lahf
jae
lahf
jns
in
pop
stos
inc
shrb
mov
in
cld
std
ljmp
mov
in
jl
xchg
dec
mov
add
xchg
adc
ret
sbbb
call
or
insb
mov
xchg
cmp
insb
lcall
cmp
je
daa
push
scas
push
adc
je
sbb
and
lret
ljmp
out
jae
push
std
lahf
pop
pop
js
popa
push
sub
test
enter
mov
idiv
mov
jne
ss
cmp
jle
adc
int
dec
or
push
les
hlt
pushl
jl
int
ret
fadds
and
or
push
jae
mov
dec
fidivrs
inc
mov
outsl
cli
fistps
mov
movsl
cli
adc
pop
dec
ljmp
jmp
cmpsl
jbe
xchg
ret
xor
mov
movsl
fiadds
sub
dec
xchg
xchg
addr16
cli
pushl
sbb
aas
in
cltd
xchg
xchg
test
pushf
sti
jp
je
movsl
push
pop
ljmp
mov
mov
mov
xchg
or
ljmp
jle
sbb
mov
sub
cltd
cwtl
cmp
push
pop
mov
sar
jmp
enter
mov
mov
outsb
dec
add
scas
mov
cmp
outsl
js
adc
sbbb
call
dec
jp
cmp
ljmp
push
cltd
xor
sub
insb
push
addr16
adc
jg
lret
dec
jmp
add
lods
add
mov
aaa
popl
jns
ret
and
push
ja
fwait
aas
outsl
dec
cmpsl
inc
sbb
jmp
repz
jmp
sbb
aas
jb
or
loope
stos
loope
inc
sbb
dec
cmc
adc
or
hlt
jg
gs
and
mov
adc
clc
aas
adc
jmp
ficoml
inc
mov
push
into
test
xchg
jb
xchg
cli
push
xor
stos
stos
and
incl
popa
mov
stc
jno
or
push
decl
jmp
or
mov
scas
dec
lcall
inc
push
in
insb
mov
ds
jle
hlt
xchg
push
in
int3
ret
push
pop
cmp
dec
jl
jp
and
andl
sub
inc
repnz
lahf
outsb
fmul
sar
mov
mov
test
aad
mov
inc
imul
incl
or
js
incb
imul
testb
in
or
jb
std
fcomip
ljmp
icebp
test
sub
sahf
mov
sti
mov
xor
fcompl
pushl
das
cmp
jecxz
or
sub
and
mov
xchg
pop
nop
xchg
mov
push
ljmp
loop
adc
pop
push
dec
inc
lds
shrb
cmp
cmpsb
pop
xchg
and
jmp
mul
sbb
jmp
sbb
in
or
loopne
imul
dec
inc
xchg
mov
sar
inc
addr16
das
inc
sahf
dec
pop
nop
and
pop
roll
sub
add
mov
mov
roll
in
clc
cld
hlt
lcall
pop
bound
push
sub
loopne
fisubl
gs
cmc
sbbl
pop
mov
cmpsb
xchg
pop
mov
lcall
push
mov
and
test
iret
popf
mov
out
sbb
scas
shlb
out
ret
ret
call
jns
or
dec
and
mov
dec
les
lahf
add
pop
xor
repz
mov
sbb
jl
incl
sbb
push
dec
jmp
or
fimuls
jne
lods
divl
adc
xchg
fcoml
lcall
xchg
cmp
in
mov
in
ret
push
stos
arpl
add
mov
sub
sbb
add
lret
ljmp
adcl
fiadds
das
lcall
or
call
sbb
gs
or
aam
pop
push
mov
jb
inc
sarb
in
fmuls
xchg
decl
leave
jbe
stc
or
inc
mov
les
inc
push
sub
adcl
jmp
ljmp
mov
sbbb
ret
adc
imul
mov
fnstcw
rcr
lods
es
imul
or
xchg
stos
xchg
mov
sbb
ljmp
xlat
sbb
test
fnstsw
fidivrs
pop
and
cld
mov
jnp
popf
ret
or
bound
int3
mov
jecxz
adc
jb
stos
push
js
loop
mov
cli
pushl
ja
jae
push
sbb
arpl
push
sti
int3
call
add
stos
mov
movl
pusha
pop
out
cwtl
enter
xor
rcll
add
call
bound
lock
or
mov
andl
push
scas
loope
popf
in
jl
dec
fsubl
add
leave
mov
cmp
enter
je
xchg
push
shrb
inc
pop
out
push
cli
and
hlt
std
or
xchg
sub
sub
mov
scas
out
push
sarl
aam
jmp
loop
inc
int
adcl
sahf
and
pop
decb
adc
mov
jmp
or
int3
sub
push
jg
jno
mov
stos
aam
stos
xchg
pushf
jmp
cmp
addr16
lds
xlat
ret
decl
je
imul
fnstsw
int
pop
jb
adc
cmp
cli
leave
insb
sahf
scas
mov
idivl
in
lods
popf
inc
or
test
and
cwtl
ja
sub
pop
cli
jge
jmp
sub
add
add
nop
cs
clc
lahf
out
pop
sbb
pop
cmp
mov
cltd
test
fwait
idiv
push
mov
lock
daa
push
lcall
dec
das
inc
movsl
jns
add
push
lock
nop
fidivrs
jl
mov
loop
pushl
sub
cmp
xchg
test
cmpsb
inc
push
xchg
add
inc
fldt
adc
push
popl
sbb
mov
out
sbb
jno
and
ljmp
jmp
sbb
dec
loopne
scas
aaa
xchg
mov
into
iret
push
data16
xchg
call
mov
cwtl
sub
inc
xorb
jmp
into
loope
aaa
sub
fstpl
pcmpgtd
sub
leave
inc
out
sbb
loopne
addb
rorb
daa
decl
mov
decl
arpl
inc
lret
imul
cmp
cmp
decl
aam
mov
stos
or
push
push
outsl
rcrb
or
mov
xchg
push
xor
dec
adc
scas
jp
ljmp
pop
addr16
mov
rcrb
shl
lret
push
dec
cltd
xor
decl
lahf
lret
xchg
adc
add
mov
sbb
outsb
stc
sbb
outsb
insl
adc
mov
cmp
cmp
fwait
pop
addr16
sti
pop
lods
xor
bound
les
outsl
jp
dec
cmp
xchg
jne
cmp
pop
pop
out
js
xchg
incl
push
xchg
inc
cmc
push
fcoml
sbb
and
das
pop
jmp
scas
fs
cmp
sbb
fisubrl
push
fisubrs
xor
dec
fidivl
insl
cmp
xor
xor
cltd
mov
cmp
aad
out
push
daa
bound
cltd
inc
sub
aas
pop
cmp
mov
cltd
pop
test
lcall
inc
push
ret
push
sub
mov
xchg
scas
out
loop
mov
or
add
adc
mov
xchg
in
fs
add
test
mov
dec
mov
ljmp
push
sbbl
leave
xchg
fdivp
mov
int
pop
lods
lahf
add
call
fbstp
push
or
cwtl
in
enter
mov
repz
clc
lcall
flds
fst
mov
cmpsl
aam
dec
sub
and
add
lods
insl
push
add
add
incl
and
gs
testb
adc
push
inc
dec
add
fbld
mov
stos
fneni(8087
sub
cmp
cmp
xchg
call
fmuls
pop
movsl
int3
pop
sbb
stc
insb
mov
jnp
jg
lock
or
sbb
and
jmp
pop
cmp
sub
insb
cmp
cmp
push
mov
adc
push
mov
ljmp
repz
lahf
cs
sbb
icebp
or
and
xor
out
hlt
je
xorl
inc
test
cmp
lcall
les
repnz
add
pop
push
test
adc
inc
and
or
mov
jge
cltd
xchg
or
dec
icebp
cmp
dec
adc
or
repz
add
sub
jae
ljmp
push
push
inc
lea
imul
dec
xorb
int3
lahf
sub
in
in
js
lea
cli
sbb
lret
add
arpl
stos
sbb
leave
ljmp
cmp
dec
add
fcmovb
or
lea
sub
or
or
call
mov
jne
xor
clc
jmp
movsl
mov
jg
sarb
sub
adc
incl
pop
loopne
insl
out
outsl
mov
sub
hlt
loop
lret
test
pushl
sbb
dec
idivb
mov
fcomp
data16
lcall
inc
cmpb
mov
jge
push
hlt
cmp
push
push
rcrl
leave
or
pop
sbb
nop
lock
pop
outsb
insb
scas
into
popf
lcall
out
cli
adc
add
lcall
in
aam
imull
mov
mov
decl
test
jp
fstpl
sub
mov
inc
inc
ja
subl
mov
inc
add
shrl
dec
pop
lock
add
lret
bound
call
xchg
movsb
sub
jge
fstpt
push
loopne
push
call
mov
push
inc
filds
dec
and
adc
jg
incl
inc
lahf
insb
xorl
shl
pop
and
adc
mov
mov
fistpll
outsl
in
das
bound
adc
pop
movq
pop
inc
shl
pop
mov
inc
cmc
xor
cs
fdivrp
fcomip
call
cmp
mov
cltd
je
mov
mov
fiadds
lods
cmp
cmp
add
pop
insl
and
fnstsw
jmp
cs
outsl
inc
mov
loopne
decl
jns
cmp
andl
mov
outsl
jl
sbb
jo
jle
pushl
mov
adc
roll
adc
aam
ljmp
stos
pop
adc
cmp
mov
dec
xor
dec
inc
rorb
pop
insl
mov
xchg
decl
mov
sbb
jmp
shll
jb
les
bound
shrb
sbb
call
loope
jno
xchg
mov
out
clc
xor
mov
ret
test
movsb
sbb
inc
out
decl
mov
jmp
mov
ret
mov
xchg
and
cmp
cld
xchg
mov
adc
push
test
push
js
cltd
int3
clc
sahf
in
ret
mov
jp
scas
xor
ljmp
fnstenv
lcall
jnp
push
iret
arpl
sbb
lcall
or
inc
outsb
push
and
mov
xchg
mov
mov
add
dec
pop
movsl
adc
std
mov
shl
push
loopne
decl
test
mov
ja
pop
cltd
movsl
movsb
mov
jl
bound
pop
mov
and
mov
or
jmp
and
adc
decl
mov
fs
dec
scas
repz
add
cld
sub
sysenter
aaa
ljmp
mov
ds
mov
mov
les
xor
je
dec
xchg
js
aaa
jnp
adc
inc
and
mov
xchg
dec
cld
cmpsb
xchg
jns
sahf
out
mov
inc
cltd
inc
insb
popa
repnz
mov
inc
add
fists
sub
push
xlat
movsb
lcall
push
jbe
in
dec
xor
subb
subb
sbbl
notb
jns
movb
insl
sbb
imul
xchg
mov
cmp
ljmp
in
jbe
lds
in
sub
repz
jle
add
inc
in
sub
stos
outsl
sbb
ret
test
iret
mov
call
mov
mov
push
bnd
cmp
mov
dec
dec
xor
jl
rclb
adc
push
mov
hlt
ljmp
ss
cmp
cmp
mov
jb
ja
inc
or
fistpll
cmp
out
sbb
cmp
mov
gs
jp
add
out
clc
mov
add
into
add
adc
dec
pop
insb
enter
enter
incl
mulb
jle
cmp
in
hlt
into
movsb
bound
dec
stc
pop
add
pop
icebp
mov
xchg
neg
jns
shl
aam
outsb
cwtl
repz
insl
out
addr16
faddl
fdivs
xlat
jl
pop
shrl
ss
sbbb
mov
stc
xchg
jg
lock
fidivrl
cmp
shrb
push
cmp
sbb
gs
mov
mov
lret
arpl
sarl
lods
loopne
inc
inc
and
lcall
imull
xchg
inc
cmp
sub
ss
incb
daa
subl
adc
inc
ss
mov
ljmp
pop
sahf
shll
sub
push
xchg
jbe
cmc
inc
mov
push
xchg
or
out
ficoml
push
jne
daa
jg
sub
aad
test
fnsave
push
cmp
sar
xor
xlat
ret
push
push
cmp
ljmp
lds
movsl
mov
xor
rcr
leave
inc
in
jmp
std
test
xchg
pop
ljmp
ja
test
or
and
jo
inc
inc
out
xlat
in
fdivl
pop
jb
lret
fisttpl
sub
stos
pop
fdivrs
xor
call
lock
push
insb
mov
pop
std
out
or
xchg
jmp
popa
test
jp
push
sahf
adc
div
xlat
pop
add
jp
scas
xor
jns
add
jns
loope
in
xchg
xor
ret
and
pop
ljmp
je
mov
lds
outsb
shl
rorb
popf
lock
pop
imul
dec
ret
push
add
out
ss
fidivs
adc
test
or
ret
out
stos
mov
mov
push
mov
in
imul
cmc
mov
out
out
sbb
int
aaa
ljmp
fdivp
or
hlt
jg
rcr
add
pop
scas
and
mov
leave
rorb
jns
sbb
inc
es
adc
jo
jae
mov
jmp
repz
movsb
mov
aad
jmp
outsb
or
jle
sub
cltd
cli
sbb
cli
hlt
mov
add
push
call
sub
sbb
out
jle
in
or
fwait
ja
cltd
xor
test
jge
add
je
pop
fstpt
outsl
or
add
xor
sub
xlat
lcall
bnd
icebp
insl
xor
out
testl
repz
jg
dec
lods
cmp
ret
jae
mov
movsl
stos
repnz
mov
in
mov
fucomip
mov
incl
pop
xor
es
out
jae
scas
iret
push
jl
or
fucomip
mov
jle
movsl
test
jmp
movl
cmp
mov
roll
iret
or
jge
lcall
inc
adc
push
test
sub
xor
popf
addr16
out
divl
xlat
shll
test
adc
out
testl
test
mov
std
pushf
mov
imul
xchg
lock
or
xchg
cmp
sbb
push
fcompl
jbe
in
lcall
rcl
jmp
loopne
jmp
ljmp
outsb
je
inc
jecxz
cwtl
cld
hlt
ret
mov
cmc
inc
in
les
adc
clc
lods
mov
dec
lcall
push
lods
call
cmpsl
ds
hlt
sub
dec
cmpxchg
add
shll
cs
adc
sbb
int
cli
and
in
mov
incl
arpl
inc
das
pusha
aas
aad
and
lods
jne
sub
mov
loop
jno
mov
jmp
mov
or
cmp
fcompl
adc
and
out
pushf
in
adc
push
fcom
incl
idivb
sbb
jo
imulb
mov
call
mov
out
pop
adc
lret
pop
pop
push
jp
sbb
incl
lret
js
sub
rol
fsub
dec
xchg
fs
aaa
out
aas
mov
xor
out
fcmovbe
jb
mov
int3
pop
sbb
js
pop
cwtl
stos
lds
les
mov
sbb
cmp
rcr
test
mov
jg
sarb
xor
notb
add
pop
jo
pop
sbb
sar
cmp
repz
repnz
imul
incl
shrb
jnp
xchg
push
notl
xorl
mov
dec
imul
adc
scas
push
loop
pop
jg
or
fdivrp
call
cmpsl
aam
pop
mov
mov
jnp
inc
push
pop
dec
mov
or
out
sbbb
or
push
or
fldcw
fs
repz
lea
pop
std
incl
ret
pop
outsb
pop
push
inc
mov
imul
imul
mov
inc
cwtl
xchg
ss
test
push
stos
and
xchg
lcall
std
pop
sbb
loop,pn
hlt
cmp
lcall
or
mov
test
shrl
ret
clc
jmp
jl
inc
xor
pop
sar
ds
scas
mov
pop
sbb
lcall
and
test
mov
cmp
popf
xor
dec
arpl
repz
cltd
aaa
cmp
mov
mov
mov
int
pushl
pop
push
insb
sbb
popf
mov
add
mov
and
inc
shll
pusha
cld
lcall
rolb
xor
loop
mov
pushf
add
mov
pop
daa
jge
in
and
dec
add
mov
mov
dec
xchg
ljmp
cli
decl
in
cwtl
inc
hlt
test
mov
ljmp
stc
imul
incl
adc
inc
push
mov
xlat
lahf
mov
fnstenvs
iret
out
mov
lcall
scas
outsl
movsb
mov
shlb
pop
popf
addb
mov
mov
ljmp
mov
mov
pop
and
push
data16
pop
scas
jno
test
sbb
sbb
std
adc
popf
sbb
stos
les
xor
sub
out
mov
pop
ljmp
stos
adc
pop
xchg
cmp
lahf
insb
push
in
test
pop
js
nop
jge
call
push
pop
gs
xor
pop
and
add
sub
sbb
pop
into
mov
jecxz
lcall
call
and
addb
bound
call
and
and
cltd
and
mov
dec
add
push
mov
ds
cmp
cmpsl
in
jb
in
jmp
mov
aam
lret
cwtl
push
cmp
popa
pop
lret
xlat
inc
inc
jbe
jg
push
fnstsw
test
lret
push
stos
adc
int3
cmp
rcrb
and
pop
xlat
push
jmp
adc
int3
add
orl
out
cmpsl
jg
mov
call
dec
push
addr16
lahf
jns
int3
les
or
jns
lods
fstl
rorl
pop
jmp
and
xor
cmp
add
push
bound
ds
std
inc
xchg
rorb
cld
jmp
insb
fcoml
mov
fidivrs
adc
or
pop
and
add
loopne
call
filds
cs
xchg
sbbl
cmc
pop
int
xchg
popf
dec
pushl
std
jmp
out
or
stos
mov
shll
cmp
lcall
mov
cmp
pop
int3
inc
outsb
mov
dec
shr
fmull
mov
popf
mov
pop
pop
test
dec
in
repnz
loopne
cs
pop
jbe
or
cmp
mov
ss
mov
test
pop
call
adc
fdivrs
inc
lock
mov
adc
jl
fnstcw
call
lods
es
je
dec
push
jle
or
xchg
push
hlt
test
inc
gs
cmp
test
fwait
repnz
ds
xor
bswap
mov
fcompl
adc
and
cmpsb
scas
or
insl
aas
jae
mov
or
testl
test
mov
jp
sub
push
mov
icebp
clc
mov
or
call
mov
adc
hlt
js
je
mov
gs
es
nop
das
rolb
pusha
popf
pop
mov
sbbl
push
lahf
int3
cs
popf
xchg
fmull
leave
cmp
xchg
mov
and
stos
pop
inc
mov
mov
xchg
cs
pushl
scas
int3
popa
adc
cli
lcall
xchg
jb
mov
mov
jmp
xchg
or
mov
into
sub
mov
push
in
mov
push
stc
lret
rcl
lea
inc
and
pop
push
rclb
xchg
test
lods
mov
call
add
push
roll
mov
dec
inc
cmpsl
idiv
ja
or
and
sub
arpl
jmp
pop
lret
mov
and
inc
roll
inc
jg
fucomi
outsb
divl
lods
popa
cmp
incl
xor
es
dec
xor
jbe
push
gs
push
mov
jp
mov
movsl
cld
jmp
ss
push
sahf
mov
outsb
add
push
xor
mov
mov
test
mov
das
add
dec
and
repz
cmp
adc
dec
mov
idivb
lcall
imul
jecxz
fsub
mov
mov
stos
pop
and
incl
mov
pop
sub
sub
and
mov
mov
mov
cld
les
add
or
mov
inc
pop
cld
xchg
hlt
mov
aas
xchg
pusha
ja
xchg
addr16
ljmp
loopne
loope,pn
shll
sbb
arpl
movsl
sub
push
push
sub
xchg
push
fsub
shlb
test
adc
dec
es
and
aas
sar
pop
loopne
dec
test
test
out
adc
imul
aam
mov
inc
enter
ljmp
or
sbb
adc
insb
inc
cltd
sub
add
sub
mov
sbbl
sbb
mov
ljmp
iret
push
clc
jmp
lret
ss
dec
xchg
iret
xchg
push
xlat
js
pushf
jg
gs
push
lcall
icebp
sub
jne
dec
fiadds
dec
leave
mov
pop
and
incl
sbbl
out
lock
outsb
sub
cld
cmp
inc
sub
decl
out
repz
nop
fisubrl
push
or
mov
fnsave
lcall
lds
ret
ret
inc
mov
adc
mov
adc
icebp
int3
sbb
loopne
icebp
sbb
aad
or
lock
incl
je
les
mov
bound
ds
dec
mov
jl
dec
and
xor
and
or
adc
sbb
lcall
movsl
int3
ret
fs
sub
lcall
push
out
loope
mov
jl
jnp
push
jmp
int
pop
mov
or
movsl
les
pop
aaa
arpl
ljmp
sub
inc
dec
pop
callw
xchg
stos
mov
or
out
push
je
mov
jmp
dec
and
pop
inc
jae
sub
adc
xchg
or
shr
jae
lods
xchg
fdivl
push
call
call
or
sbb
incl
dec
shlb
cmpsb
mov
pusha
jg
ret
sbb
jb
cmp
jae
leave
dec
in
aas
inc
jl
and
fwait
jns
cltd
aad
decl
arpl
pop
and
adc
cmp
jp
pop
jno
call
aam
dec
lcall
lea
sub
cs
std
pop
xor
inc
add
xor
xchg
jmp
xor
xchg
dec
movsb
inc
sub
repnz
je
mov
push
mov
arpl
pop
sub
cmp
mov
push
cs
clc
xor
sbb
mov
xchg
mov
sbb
fistps
adc
lods
in
jne
jns
jo
jge
mov
dec
or
adcl
jnp
inc
out
xor
dec
jnp
dec
sar
jg
or
outsl
ret
sub
scas
aas
adc
push
jno
add
test
push
enter
jg
and
jp
popa
add
pop
xchg
les
ret
mov
cwtl
cs
es
add
pushl
iret
sub
mov
iret
sub
mov
jbe
cltd
cli
push
negb
call
lods
adc
xchg
scas
mov
popf
int
mov
push
jle
cmpsl
int3
push
xchg
mov
lcall
or
mov
dec
add
test
enter
pushl
or
jl
fprem1
sub
decl
sbb
and
jmp
jb
xchg
inc
push
inc
inc
dec
nop
mov
imul
ds
call
and
cmp
push
pop
jne
aad
xchg
adc
mov
incl
mov
repnz
fwait
or
sarb
and
mov
push
call
jnp
out
push
rclb
mov
add
in
arpl
int
std
add
fcom
jg
andb
test
ja
jecxz
pop
or
stos
add
jg
loope
dec
out
ds
sbb
fs
icebp
lcall
sub
mov
jp
xor
mov
incb
cmp
std
jne
cmp
out
sbb
ja
dec
pusha
call
jge
fisttpll
sub
mov
iret
push
push
mov
ljmp
sbb
sub
popa
rcll
mov
clc
cmp
xor
mov
call
loop
cmp
cmpsb
mov
or
push
sbb
addr16
leave
inc
loope
xchg
fimuls
push
adc
mov
mov
mov
push
test
xor
jg
incl
cmove
inc
mov
repnz
std
insb
divl
imul
xchg
adc
iret
or
iret
clc
xor
add
out
insb
js
jl
lcall
cs
cmp
xchg
inc
sarb
popf
lret
push
push
pop
inc
push
ret
clc
decl
sarb
test
out
ret
sub
test
jno
add
push
es
or
out
jbe
sbb
int3
mov
sti
out
sub
sub
cltd
faddl
push
clc
pop
pop
xchg
popa
test
imul
cmp
or
pop
popa
outsl
hlt
je
cli
push
fdivrl
mov
lret
or
cltd
test
jecxz
mov
rcrl
movsb
icebp
dec
cmp
pushf
in
mov
dec
shll
std
test
pop
cmovge
cltd
cli
pusha
and
jns
jmp
cli
rclb
cmp
idivb
xor
inc
push
add
pushl
cld
js
loope
cmc
lock
sti
inc
aam
jns
aad
repnz
je
cmp
pushl
mov
pop
jmp
outsl
cmp
nop
fisttpl
sti
xchg
mov
sub
mov
add
fildll
add
dec
jns
enter
xlat
ljmp
mov
adc
ret
cmp
or
jle
ljmp
or
xor
sub
sahf
dec
popf
ret
je
pop
add
jmp
mov
xchg
cmpsl
and
ret
das
cmp
xchg
inc
pop
mov
mov
scas
jns
pop
jl
inc
and
ja
lds
cld
push
adc
jno
add
mov
jecxz
flds
incl
sahf
mov
inc
fisubrs
cmp
in
or
push
ss
xchg
mov
push
cmp
pop
pop
ljmp
inc
cld
bound
mov
adc
add
or
mov
jg
mov
push
dec
jae
jmp
xchg
and
pop
fs
xor
divb
fistpll
jae
loop
outsl
in
stc
xchg
daa
inc
push
xor
ret
popa
jne
xchg
scas
jno,pt
cmp
repz
les
cs
mov
outsl
mov
xchg
xchg
test
ds
pushl
or
mov
in
sub
pop
cmp
outsb
jp
jns
mov
scas
jnp
lahf
lock
fwait
add
rorb
lcall
insl
insb
cli
cmp
or
lods
add
mov
call
mov
jge
mov
mov
popa
dec
cmp
ljmp
inc
inc
pop
ret
test
test
scas
cli
call
mov
daa
out
shll
daa
out
jae
scas
and
addr16
ljmp
jbe
in
push
adc
test
mov
dec
and
scas
iret
add
push
adc
call
mov
and
inc
rorb
stc
xor
in
inc
mov
js
aam
dec
insb
negb
mov
xchg
pop
sbb
mov
xor
insl
sbb
std
stc
xor
push
rdtsc
aam
push
sbb
fimuls
mov
and
adc
xor
inc
fdiv
push
loop
enter
repz
sub
mov
or
push
call
push
dec
xor
fnstcw
inc
mov
lock
fcomip
xor
or
in
ljmp
sub
push
ljmp
ret
adc
sahf
int3
mov
iret
mov
sub
xor
sub
mov
or
jmp
push
xchg
push
add
mov
daa
ds
mov
mov
cmp
mov
popa
bound
sbb
mov
push
inc
lcall
clc
mov
popa
lahf
arpl
leave
dec
jge
shlb
xchg
movsl
je
aas
jle
cld
ljmp
in
pop
sub
xchg
or
jle
lret
mov
mov
xor
jnp
sub
xor
mov
xor
imul
rol
mov
decl
insl
insl
fstl
push
ljmp
xchg
out
xchg
rcl
xchg
jo
sub
subl
incl
jl
stos
add
imull
imul
decl
push
mov
pop
xor
xor
push
wbinvd
and
gs
clc
sub
iret
lods
and
ljmp
in
xchg
jno
sub
add
std
jmp
pop
imul
adc
decl
movsl
sbb
in
das
xor
xlat
cmp
lds
daa
mov
pop
mov
repnz
lcall
jne
push
dec
cmp
mov
imul
push
call
xchg
mov
mov
pop
push
dec
mov
pop
test
dec
ret
in
repnz
fstl
decl
sub
xchg
clc
gs
mov
jl
inc
scas
mov
xor
xor
push
jmp
inc
mov
test
mov
lock
add
inc
mov
pop
gs
ss
inc
push
aas
xchg
mov
add
lcall
xchg
test
cmp
aaa
push
mov
inc
sub
inc
das
mov
pushl
xor
scas
lret
and
cmp
mov
pop
xchg
call
mov
pop
adc
js
pop
std
incl
test
inc
call
and
push
cmp
or
jmp
xor
arpl
dec
xchg
test
cli
jmp
lret
ficoml
cmp
dec
push
mov
cmp
call
or
push
data16
out
and
bound
adc
jns
jg
or
mov
add
scas
hlt
test
lcall
inc
fldl
or
cmpsl
rorl
int
je
push
loop
in
aam
dec
andl
sbb
daa
sarb
imul
insl
pop
mov
ja
mov
ds
outsl
or
mov
sub
push
loop
mov
dec
mov
mulb
lods
ficompl
orb
cli
in
mov
idiv
jmp
sbb
repz
ret
test
or
and
xor
mov
jo
ja
cmp
push
sub
pop
rcrb
sbb
xchg
sub
mov
call
les
sbb
cwtl
fisttpll
loopne
dec
dec
ficomps
jge
cmpb
push
ret
mov
pop
test
and
push
fildll
push
hlt
shlb
and
fisubrs
negl
adc
sti
roll
stos
sub
push
mov
cs
out
jp
push
test
call
and
ljmp
movsb
shl
sub
lcall
add
sahf
pop
xlat
std
fldt
pusha
ror
mov
into
arpl
xchg
pop
mov
xchg
and
sbb
imul
or
imul
ljmp
dec
cmpsl
sahf
mov
cmp
sub
add
fsqrt
mov
popf
stos
loopne
call
and
aad
and
sbb
in
lods
push
sbb
push
jb
enter
rcll
shl
cmp
adc
sub
in
in
cld
adcl
dec
sbbl
mov
call
aad
cmp
lock
mov
xchg
movb
data16
pop
outsl
jae
ja
add
push
add
pushl
popf
mov
ret
cmp
ja
xchg
sub
mov
xchg
cld
test
rcrl
mov
vpsubusw
out
sbb
dec
adc
adc
inc
shl
jp
loopne
adc
push
jb
and
fnsave
mov
lcall
subb
lret
cmpsl
mov
out
decl
test
jl
sub
mov
mov
stc
in
push
pushl
int
xor
and
adc
mov
mov
push
jae
sarl
mov
mov
jmp
lds
nop
inc
cmp
push
adc
pop
pop
push
in
cmp
add
incl
xchg
bound
lds
mov
pop
push
add
jb
pop
mov
or
sti
push
repnz
std
daa
dec
dec
xchg
sbb
pusha
mulb
es
sub
ljmp
jo
xor
jg
mov
test
in
movb
pop
pop
add
inc
ljmp
push
inc
add
arpl
cmp
movl
icebp
ja
mov
jl
pop
ss
sbb
mov
call
jmp
in
lahf
add
mov
xchg
cli
mov
push
in
mov
lcall
cli
mov
mov
popa
or
das
int
add
add
sti
cli
ljmp
jno
movsb
xchg
xor
pop
ja
je
es
loopne
pop
mov
lea
loope
stos
push
mov
out
jbe
jae
push
push
addr16
fs
xor
xchg
mov
or
jae
fiadds
mov
adc
cmp
decl
dec
cld
in
stos
mov
lods
xlat
sbbb
add
jmp
inc
daa
push
push
pushf
outsb
ljmp
loopne
fnsave
stc
arpl
dec
andw
jo
hlt
call
adc
ss
das
xor
dec
sbb
mov
mov
aaa
mov
lcall
xor
sub
ds
xchg
pop
fmull
sub
jb
mov
lock
rorl
out
arpl
jecxz
fs
loope
sbb
mov
rep
rcll
xchg
cmp
jbe
lcall
xor
add
ss
lahf
pop
lcall
xor
jg
push
xchg
xchg
mov
lcall
das
das
inc
gs
jno
mov
leave
xor
push
mov
and
das
cli
ljmp
cmp
fdivrp
dec
gs
das
inc
rol
sti
ds
mov
jg
jb
ret
idivb
or
lock
out
fs
cmpsb
jmp
fldz
push
fcmovne
inc
xchg
pop
or
jno
test
cmp
sarl
lock
lcall
mov
or
push
stos
cmp
sub
in
repnz
inc
stos
movsl
ja
mov
fbld
dec
push
ds
rol
push
mov
pop
mov
push
or
inc
xchg
add
cmp
jmp
bound
cmpsl
adc
mov
xor
pop
icebp
loopne
movsb
jge
lds
or
inc
sbb
incl
ret
fistpl
aad
daa
adc
push
jns
mov
rcl
call
shrl
ljmp
fld1
jmp
mov
dec
cmc
mov
sub
lret
ror
stos
into
mov
jo
out
fcoml
addr16
cmpsb
aad
stos
test
inc
add
bound
pop
test
aam
mov
fwait
pushl
mov
push
pop
jge
push
leave
cmp
push
cmp
inc
movsl
sub
fwait
sar
xchg
push
lock
int
jmp
bound
jae
pushl
out
dec
ja
or
mov
add
jle
push
or
jne
inc
hlt
xor
rcr
lret
adc
mov
fsubrs
popf
xor
movsl
mov
outsb
jecxz
xlat
scas
ficoms
or
shll
lret
aad
mov
xchg
out
jnp
aas
fdivs
das
bound
dec
movsl
mov
bound
push
push
leave
mov
mov
sarl
decb
incl
in
cmc
notb
sti
jp
inc
stos
mov
rcrb
jg
xchg
dec
or
or
mov
ret
das
jl
jo
mov
es
sbb
jl
sbb
cmp
or
inc
mov
push
aad
outsl
dec
iret
call
in
cmp
cmp
shrb
xchg
adc
outsb
cltd
fmul
aas
add
les
movsb
aas
push
nop
push
sti
dec
fwait
cli
mov
ret
test
cmp
mov
add
jae
lods
icebp
adc
cmc
imul
scas
popa
cmpsb
add
inc
ficoml
jge
out
xchg
test
lods
mov
sbb
gs
jg
roll
jp
cmp
incl
dec
jl
sbb
cmp
add
aad
std
pop
cs
outsb
and
mov
aaa
test
decl
cmp
andb
pushf
or
inc
lret
sub
rcll
lret
mov
es
dec
mov
and
xchg
fidivl
pop
pop
cmp
dec
les
std
mov
jmp
orl
and
hlt
lret
and
shlb
call
fisubl
test
lret
xor
sbb
adc
inc
mov
bound
jmp
out
dec
mov
xchg
dec
dec
xlat
and
out
pop
ret
out
dec
xchg
ret
or
fisubrl
call
aaa
cld
ljmp
ss
sbbl
inc
rcr
push
jp
push
imul
jnp
jmp
push
adcl
shrb
xor
cli
jb
jmp
outsb
push
cltd
pushl
push
dec
jo
jbe
xor
cs
dec
ljmp
pushf
jmp
call
pusha
adc
and
xor
icebp
shr
cld
scas
sti
or
out
pop
fwait
out
nop
jns
test
ljmp
sahf
mov
lret
jbe
push
adc
in
inc
scas
push
inc
in
mov
cld
jmp
adc
xchg
cli
ljmp
mov
xor
ljmp
ret
mov
mov
divb
mov
cs
cmp
push
ljmp
mov
call
lcall
xor
mov
cmp
jne
mov
or
xor
je
ss
ds
int3
in
clc
fcomip
mov
sti
xor
mov
pop
gs
in
in
pop
xchg
mov
and
lcall
test
add
call
mov
xchg
and
inc
xchg
jg
stos
call
test
outsl
aas
mov
stos
cwtl
jnp
jle
in
mov
add
icebp
pushl
mov
ficomps
mov
jl
xchg
sub
sub
adc
jg
enter
mov
push
mov
out
push
cld
loopne
out
pop
push
pop
js,pt
outsw
inc
push
mov
mov
adc
das
clc
pushl
push
push
fldl
cli
outsb
pop
das
daa
xchg
pop
xchg
pop
mov
imul
dec
mov
inc
fldcw
fcompl
pop
jns
mov
xchg
push
in
mov
arpl
pop
push
cld
incl
hlt
out
adc
xchg
scas
lods
andb
inc
movsb
inc
test
dec
gs
incl
cmp
jnp
outsb
icebp
es
jmp
and
mov
ljmp
push
add
sbb
sub
pop
daa
jns
mov
xchg
xor
mov
mov
popa
fcomip
decl
subl
xchg
add
mov
std
xchg
mov
ljmp
jns
xor
mov
pop
scas
dec
or
popf
enter
lret
mov
fbld
cmp
fisttpll
enter
xor
push
adc
cmp
cmp
lods
sbb
xchg
sub
inc
test
lcall
int
inc
adc
adc
push
lahf
ss
cltd
js
mov
pop
xchg
adc
pop
std
inc
test
out
test
jecxz
sbbl
in
enter
and
das
jg
and
aad
pop
cmp
dec
ljmp
cli
dec
adc
fsubl
pushf
roll
daa
mov
shr
fisubs
incl
push
in
push
pushl
mov
in
jno
repz
lcall
dec
test
out
cmpsl
xchg
iret
inc
aas
cmp
mov
or
push
lss
push
fwait
jecxz
push
pop
cwtl
dec
into
sbb
mov
push
mov
mov
fistpll
or
xlat
xchg
es
add
push
add
orl
test
out
mov
cltd
sbb
push
cmp
mov
hlt
into
pop
pop
stos
sub
mov
lcall
sbb
pushl
inc
test
mov
jnp
andl
ficoml
scas
adc
xlat
fbstp
es
inc
inc
mov
adc
add
aad
shll
xchg
std
int
adc
dec
in
mov
arpl
lahf
inc
push
decl
mov
and
stos
notl
cmp
cmp
cmc
js
xchg
xchg
pusha
lret
imul
cmc
add
pop
loopne
cltd
and
inc
lds
jb
cmp
jns
jbe
fimull
mov
lcall
adcb
gs
cmp
push
cli
dec
je
mov
dec
ret
xor
lcall
in
pop
test
xchg
inc
mov
loopne
or
push
xchg
adc
and
incl
arpl
gs
mov
test
mov
jne
xchg
negb
test
cs
xchg
call
jno
pop
or
or
add
into
fwait
pop
aaa
mov
es
es
jg
add
cmp
mov
xchg
call
push
inc
sbb
mov
sbb
cmpsl
pop
mov
call
loopne
inc
inc
shrb
sub
imul
pop
cltd
add
dec
loopne
jmp
jns
cmp
mov
cmp
jo
call
lock
gs
sarb
mov
xchg
pop
mov
inc
lods
sub
jo
mov
pushl
std
jl
sahf
leave
or
xchg
std
pushl
sub
ljmp
mov
xchg
jle
sub
pop
ljmp
xchg
sbb
pushl
adc
cmc
out
imul
ljmp
das
repnz
test
in
sbb
inc
out
dec
call
push
stc
in
imulb
call
outsl
jnp
inc
add
jo
adc
mov
jmp
scas
jmp
add
fwait
adc
fisttps
mov
jle
nop
pop
test
mov
ljmp
clc
scas
outsl
mov
popa
cwtl
jbe
adc
lds
movups
hlt
sub
ljmp
mov
push
inc
adcl
scas
cwtl
mov
test
neg
ret
dec
icebp
jmp
decl
mov
repz
mov
stos
mov
decl
dec
loopne
cwtl
xchg
popa
insb
int
or
xchg
cwtl
aam
xlat
xchg
icebp
test
sbb
sbbl
pushl
sbb
leave
fisttps
lret
sti
inc
dec
outsb
or
fcomip
decl
inc
fbld
dec
xchg
mov
clc
cwtl
mov
xor
pop
push
call
cmovge
call
bound
mov
jg
mov
int3
inc
orl
xorb
ffreep
push
mov
cmp
xchg
jne
pop
push
adc
pushf
insl
imul
sti
pop
aaa
aas
out
popf
fnstsw
mov
inc
adc
xchg
xor
aam
rcr
out
sub
sub
ja
pushl
or
inc
mov
jecxz
xlat
inc
scas
mov
cmp
push
cmpsb
daa
or
jnp
xor
stos
mov
add
outsb
cmpsb
pop
xor
xor
inc
xchg
fcos
in
call
push
mov
dec
fyl2xp1
mov
dec
mov
mov
inc
mov
jecxz
cmp
lds
xchg
mov
xor
std
push
inc
jecxz
aaa
cmpsl
lea
inc
cs
shll
adc
icebp
jae
insl
mov
popf
lock
lcall
ss
mov
sbb
fs
cmp
jmp
mov
or
adc
test
and
cmp
enter
ljmp
jecxz
test
pop
push
daa
rclb
xor
mov
cmp
incl
xchg
mov
fnstcw
imul
dec
fcom
and
add
sbb
incl
ja
loope
cmp
mov
cmp
cmpsb
jb
hlt
ljmp
xor
scas
neg
jb
fldcw
out
sub
fidivrl
and
jle
call
fs
mov
xchg
jns
imul
pusha
jl
nop
jmp
lods
stos
sub
incl
add
pop
sbb
lds
shrl
dec
xchg
or
cmp
jmp
ret
movsl
hlt
scas
xchg
ds
cmovg
mov
out
addl
movsl
outsl
push
adc
imulb
out
pop
dec
ljmp
sbb
call
std
jbe
call
inc
cmp
dec
loop
fs
xor
cmpsb
cmp
cltd
dec
jl
call
xor
test
xor
mov
dec
ficomps
sub
pop
push
imull
mov
jo
decl
in
jns
std
sar
pop
cli
fmull
cmp
call
adc
pop
mov
xchg
popf
sub
jle
ds
std
mov
dec
push
pushl
adcb
ret
adc
lret
outsb
pop
pushl
cld
pusha
mov
mov
clc
scas
shr
xchg
xchg
cmp
out
xor
ss
call
sbb
add
add
lret
mov
mov
movsb
cmpsb
cmp
adc
pop
or
pop
std
jge
or
and
call
daa
std
inc
negl
jmp
sarb
mov
fdivrs
orw
cmc
dec
inc
push
sbb
mov
in
add
inc
jecxz
mov
enter
or
and
bound
testb
jg
cli
ljmp
cmp
add
js
or
cltd
mov
add
pop
xchg
sbb
bound
xchg
sbb
push
add
cmc
add
outsl
movsb
cmc
mov
add
aas
enter
jo
call
in
movsb
xor
cmp
push
repz
dec
or
push
sbb
xchg
jp
cmpsb
jo
ljmp
cmp
dec
sahf
loop
data16
rcl
dec
push
cmp
mov
mov
xchg
ljmp
decl
lret
rep
and
bound
addr16
mov
call
rol
mov
lcall
push
xchg
fcoml
repnz
jmp
pop
xor
insw
insl
pop
xchg
xor
or
sub
out
lcall
sahf
adc
call
mov
cwtl
mov
out
xor
cmp
out
cli
in
xor
lods
push
lcall
inc
ds
inc
fdiv
pusha
mov
pushl
pushf
cmp
pop
js
mov
or
cmc
xor
ds
mov
jp
lock
or
pusha
inc
push
lods
jbe
imul
lea
sbbl
pop
sar
hlt
mov
out
sbb
sahf
push
out
rcr
into
sub
jg
ret
or
mov
les
push
xor
out
test
jg
sbb
xchg
cli
inc
xor
jmp
add
test
arpl
jg
jecxz
call
pop
dec
jno
aad
sar
jg
icebp
pushf
fsubl
push
jb
xor
loopne
xchg
in
negl
sub
call
jg
mov
mov
push
xor
loop
leave
cmpl
lret
imul
or
ljmp
gs
mov
icebp
add
pop
fnstenv
fcmovu
in
ljmp
lret
pop
test
mov
call
dec
ret
das
push
mov
lcall
into
ret
in
std
inc
repnz
xchg
cmpsl
call
xor
into
icebp
and
les
lret
and
push
into
mov
call
mov
cmp
mov
or
add
push
pushf
mov
scas
cmp
js
mov
insb
jae
cld
dec
push
mov
imul
adc
xlat
jno
ljmp
cmc
repz
or
outsb
push
imul
sbb
inc
mov
es
aas
mov
cmp
clc
call
sub
mov
adc
bound
dec
cmovl
xchg
fcmovbe
jb
dec
gs
or
push
out
cwtl
lcall
mov
or
mov
stc
add
testl
faddl
ljmp
test
jae
mov
cmpl
lahf
in
shll
test
adc
outsl
clc
or
xor
dec
cmpb
arpl
cmc
roll
jbe
jl
inc
in
rol
outsl
push
mov
xchg
jne
int
sbb
lahf
or
fcoms
mov
mov
insl
jae
call
lods
add
push
rcl
aam
cs
adc
mov
mov
aad
movsb
fisubrl
or
or
xchg
dec
lret
xchg
incl
push
andb
cwtl
jnp
stos
cld
scas
in
lahf
mov
add
jne
xchg
xchg
lret
jo
loope
jle
dec
ljmp
pop
enter
lock
aad
lcall
xor
cmpl
dec
add
out
or
inc
insl
lcall
bound
mov
mov
pop
test
xor
or
adc
pop
aad
jne
test
or
lahf
dec
and
call
pop
fdivl
and
sar
cmpsl
in
insl
push
pop
cmp
add
inc
inc
std
rcrb
adc
or
or
ficompl
xchg
rcrl
pop
pop
adc
adc
mov
and
cmp
sub
cmp
xchg
mov
fisubs
xor
repnz
cmp
in
and
mov
jle
dec
leave
je
jbe
stos
mov
sub
cld
pop
ja
add
insl
mov
adc
push
fstpl
jg
cmp
sub
xchg
mov
jge
pop
loope
clc
jg
in
push
fadds
in
orb
ret
mov
sub
daa
jl
nop
and
pop
adc
jg
aad
cmp
icebp
jne
mov
jae
jnp
mov
aas
jne
ljmp
xor
fdivrp
cli
jns
sbb
fmuls
inc
test
dec
dec
mov
push
pop
in
sub
inc
insb
adc
imul
push
les
pop
xorl
or
rcrb
xchg
mov
or
mov
mov
nop
jae
xchg
cmc
call
rcr
jp
in
in
in
decl
mov
es
ret
mov
jle
push
fimull
inc
adc
std
mov
clc
repnz
dec
adc
sahf
out
ljmp
cld
push
int
xchg
xor
push
push
sbb
pop
mov
dec
pop
es
decl
pop
inc
sbb
sub
xlat
push
or
jecxz
nop
mov
test
or
arpl
scas
in
incl
inc
fsubl
test
fcompl
test
xchg
call
imul
pop
push
decl
aaa
divl
dec
out
neg
lea
in
dec
aas
push
dec
sahf
orb
pop
cmpsb
and
incl
in
cld
les
fcmovu
dec
stc
jmp
filds
mov
iret
in
out
call
sub
ds
pop
test
inc
ja
push
cmpsb
idivb
pop
jo
leave
loopne
inc
scas
xchg
mov
jae
es
push
aam
movsl
das
or
lock
mov
add
stc
push
add
sub
and
cld
push
test
mov
mov
add
mov
loop
nop
dec
xchg
pop
sbb
ljmp
push
mov
and
or
mov
push
les
mov
jecxz
rcrl
xchg
jg
jmp
push
ficoml
xlat
adc
dec
jge
xchg
inc
mov
pop
gs
jg
mov
hlt
stos
int
int3
xchg
addr16
mov
pop
and
lahf
pop
push
aaa
mov
push
enter
mov
movsb
fsubrl
sbbl
fadd
jns
pushl
fistps
insl
sub
xor
lock
arpl
rclb
in
call
clc
xchg
mov
xor
dec
inc
imul
call
cld
pusha
or
jb
dec
out
leave
shlb
mov
mov
mov
mov
cmp
pop
shrl
call
shrl
sbb
sar
pop
sub
fsubs
pop
lcall
jg
sbb
and
ljmp
ffree
pop
mov
push
pop
sub
sbb
pop
inc
cs
clc
add
mov
es
push
inc
adc
dec
iret
sub
pop
dec
xchg
pop
call
rorl
and
mov
jg
push
jmp
scas
shll
lods
xchg
cs
lahf
int
andl
xchg
cmc
cmp
arpl
xchg
out
roll
inc
pop
movsb
lahf
dec
loope
sbb
dec
clc
pop
adc
ror
inc
xchg
lods
icebp
rcl
incl
or
subb
mov
rcl
icebp
pop
scas
clc
mov
pusha
mov
cwtl
inc
out
incl
adc
mov
xchg
mov
in
lret
add
inc
rorl
incl
inc
or
mov
stos
pop
out
xor
push
fisubs
sbb
xlat
mov
inc
xor
jne
dec
mov
hlt
xchg
daa
nop
scas
jge
or
jnp
hlt
pop
dec
push
decl
xor
or
jmp
leave
cmp
sbb
cli
sub
inc
mov
pop
std
decl
and
adc
mov
stos
lahf
dec
mov
sbb
insb
and
pushl
roll
xchg
dec
and
jo
sub
or
xchg
in
push
sub
jecxz
add
fisttpl
jle
ja
dec
push
xchg
pop
inc
mov
decl
sbb
push
das
mov
mov
outsl
pop
lahf
jmp
push
inc
sbb
xchg
jge
mov
aad
inc
jle
fldt
int
call
mov
dec
mov
jnp
loope
mov
ljmp
stos
adc
pop
mov
fldl
push
adc
lret
adc
sub
imul
lock
lcall
int3
dec
push
mov
gs
stc
or
jo
cli
cld
scas
int
repz
sub
pushf
push
int
mov
imul
push
cld
jb
adc
outsb
fldenv
or
lea
ss
pop
sbb
sti
pushl
pop
sahf
int3
push
addl
jb
in
xor
test
in
fwait
or
into
mov
sub
add
pushl
pop
outsl
std
mov
outsb
jmp
push
mov
out
pusha
adc
mov
or
jmp
mov
loop
mov
xchg
xor
mov
push
into
out
pop
loopne
mov
call
outsb
inc
inc
mov
out
lock
das
call
ffree
jl
push
ds
imul
lcall
shl
mov
dec
xlat
cmc
jle
pushl
test
xlat
shrl
mov
lds
fcmovbe
mov
out
in
repz
addb
pop
or
cltd
or
cli
xchg
sub
ljmp
repnz
adc
inc
fsts
mov
outsb
sub
xor
xchg
mov
ss
cs
clc
dec
jae
lret
lods
sbb
stos
ror
jns
pushl
pop
or
outsl
jl
test
add
addr16
mov
out
xor
dec
mov
shr
arpl
cltd
rcr
fstpt
jmp
and
and
dec
add
mov
mov
xchg
sub
je
or
popf
push
outsb
aas
lcall
or
mov
push
insl
inc
daa
incl
ja
pop
sub
mov
into
out
push
mov
test
xlat
pop
xchg
ja
jg
mov
ljmp
cs
daa
les
outsb
pusha
sbb
int
ljmp
fcomi
aam
pop
mov
jg
and
cmp
mov
hlt
dec
push
decl
call
mov
cmpsl
les
xchg
mov
test
or
decl
in
orl
dec
cmp
mov
sbb
int3
cmp
and
pop
dec
pushf
loop
repz
addr16
cmc
sbb
push
into
xchg
sub
pop
pushl
push
xor
lock
sti
inc
push
clc
and
mov
push
adcl
mov
call
inc
ret
dec
sub
cs
clc
iret
movsb
bound
mov
sbb
loop
arpl
xchg
mov
sub
pop
pop
aad
sub
jbe
pop
adc
incl
mov
lods
movsb
cs
dec
rcll
test
or
loope
xchg
mov
aad
jg
scas
inc
pushf
push
enter
mov
xor
inc
pop
mov
andl
test
inc
mov
push
inc
adc
movsb
lock
mov
pop
push
and
and
std
jg
cmp
into
or
movsl
out
dec
xchg
xlat
xor
repnz
decl
push
cmpb
mov
push
sbb
roll
cs
jg
inc
out
jecxz
add
daa
mov
pop
xchg
sahf
or
mov
xchg
loope
xchg
push
push
call
mov
mov
cmpsb
cmp
xchg
jl
jo
adc
nop
out
movsl
push
add
mov
push
lods
pusha
fidivrl
mov
lcall
or
js
loope
jnp
jle
negl
xorb
adc
inc
mov
outsl
in
mov
push
or
ja
dec
mov
xlat
mov
cmp
mov
mov
and
aam
xchg
nop
mov
jg
call
mov
cltd
and
or
mov
or
fwait
stos
fnsave
arpl
dec
loope
jg
inc
outsb
add
lcall
dec
aad
dec
test
dec
mov
jg
loop
add
jl
push
pop
jne
inc
cmp
test
push
inc
lcall
test
cld
ja
fs
lock
test
js
loope
sub
mov
sbb
jo
les
in
gs
rcrb
dec
leave
adc
lcall
sub
mov
fstl
ljmp
rcrb
push
cmp
mov
lcall
bound
por
insl
gs
cmp
fistpll
mov
pushf
mov
outsb
jp
negb
add
and
cmp
cwtl
xchg
movsb
stos
pop
mov
lods
fistps
jns
dec
push
lret
lahf
xchg
inc
ficoms
lods
negb
sbb
imul
mov
xor
cmpsb
and
inc
ret
mov
in
js
rolb
cmp
xor
pushf
popf
scas
fisttps
add
ja
fistpll
das
cmpsl
cmp
es
or
call
mov
ret
aaa
jo
mov
mov
mov
outsb
xchg
pop
push
das
addps
adc
sub
sub
incl
jae
enter
hlt
in
xchg
sub
sub
cmpsb
addr16
aaa
decl
sub
loop
inc
clc
inc
hlt
inc
bound
in
dec
hlt
iret
ljmp
das
stos
adc
mov
int
fs
in
inc
xchg
jmp
and
xor
es
inc
popa
test
jle
je
roll
clc
outsb
mov
inc
sbb
cmpsb
hlt
or
ret
and
cmc
cmp
jb
jle
adc
fsubs
cmp
lcall
sub
das
jmp
call
xchg
jae
mov
push
cld
aas
push
jecxz
and
xchg
mov
xor
mov
out
or
xchg
push
mov
call
popf
cmpsl
shll
jae
nop
xor
and
jg
call
cmp
xchg
fisttpl
mov
ret
lea
dec
xchg
adc
dec
sar
cltd
mov
mov
stc
fdivrp
add
fnstcw
insb
ljmp
sti
adc
xor
or
pop
sbb
sti
gs
inc
push
in
jmp
cld
inc
cld
loopne
daa
repz
outsb
nop
mov
inc
sbb
dec
sbb
test
mov
push
arpl
sub
cmc
and
pushl
lcall
adc
cmp
mov
pop
mov
lods
sbb
mov
ljmp
popa
sub
sbb
lods
fwait
push
arpl
mov
dec
rorb
add
int3
lcall
jl
and
dec
fsubr
push
push
in
or
add
pop
movsb
test
inc
dec
dec
xlat
sar
dec
cld
dec
dec
add
data16
sarl
mov
dec
jo
jg
pop
dec
sub
add
test
cltd
mov
pop
jnp
sbb
pop
xor
pushl
aaa
popf
fnstsw
ret
push
stos
pop
loopne
shll
mov
mov
mov
incl
or
sub
mov
fcmovb
xlat
cld
adc
fwait
push
inc
scas
ret
adc
xor
stos
or
decl
dec
psrlw
jle
mov
pushf
sub
shlb
les
stc
ljmp
add
gs
adc
jl
testl
pop
popa
stos
xlat
jl
std
pushl
jg
hlt
std
popf
pop
jne
sbb
jbe
sarb
icebp
sbbl
icebp
pusha
lock
xchg
push
jecxz
xor
rolb
mov
movsb
fstpl
rcrb
mov
scas
add
lea
add
jmp
movsb
scas
notl
xor
push
lret
aaa
jns
and
test
cmpb
lds
mov
xchg
int3
mov
jmp
cmc
mov
mov
fucom
mov
in
sub
add
xlat
cmp
xlat
les
test
imul
pop
xor
jmp
lock
jg
add
cmpsb
lock
int
sub
sub
push
mov
mov
and
jns
sahf
or
sbb
cmpsb
dec
adc
fdivs
in
lcall
or
pop
sarb
popf
ficomps
enter
push
mov
out
pop
xchg
ret
dec
pushf
add
lea
cwtl
movsb
sbb
andb
fidivrl
mov
fldl
cwtl
arpl
cmp
leave
mov
xchg
mov
cmp
cmp
cmpsb
pop
push
imul
adc
push
dec
call
loope
cmp
fidivrs
ljmp
add
aad
jo
inc
or
jl
test
nop
jbe
sbb
shll
jns
imul
ljmp
in
arpl
inc
cli
jb
aas
or
lcall
out
shl
in
jge
pop
pusha
out
sbb
outsb
xchg
dec
ljmp
xlat
ljmp
icebp
test
jp
ja
lods
push
stos
adc
je
cmp
pop
lock
insl
mov
dec
adc
push
faddp
and
lret
inc
add
das
cli
inc
push
or
popa
and
into
cwtl
pop
in
cwtl
stos
es
adc
adc
sub
jbe
xor
sub
in
rorb
lods
mov
out
lcall
lock
cs
jmp
test
jmp
xor
dec
sarb
stos
test
and
and
ds
lcall
aam
xchg
jl
das
add
adc
or
add
inc
xor
rcll
cli
sahf
out
hlt
das
lahf
cmp
sub
fwait
or
adc
add
cli
loope
es
pusha
fs
fs
out
arpl
jecxz
add
mov
incl
outsb
jge
ljmp
jmp
hlt
or
mov
aam
push
xchg
mov
fs
adc
jb
xor
cmp
pop
mov
xchg
popf
xchg
lods
mov
add
sbb
xchg
sarb
or
pop
dec
jb
mov
loopne
call
pop
inc
popa
sbb
xor
addr16
pop
pop
mov
mov
push
ljmp
xchg
or
add
enter
inc
leave
add
adc
insb
in
sub
ljmp
xor
xchg
repnz
adc
sub
in
int3
push
jns
lock
gs
sub
sti
incb
ljmp
aad
jge
popa
jo
and
scas
dec
mov
dec
push
lds
int
pop
xchg
ret
rorb
push
stc
dec
jp
or
mov
loopnew
int
xchg
lock
iret
popf
cmp
lcall
mov
shll
leave
and
adc
scas
rorl
adc
repz
ljmp
push
jnp
lds
xchg
or
fdivr
testl
xchg
scas
out
dec
lds
mov
jecxz
fstps
fstpl
ljmp
push
call
pusha
push
cmp
mov
mov
incl
loopne
dec
dec
pop
cld
test
stos
movsl
and
cmp
pop
mov
jmp
mov
or
dec
xor
or
outsl
lcall
js
in
inc
mov
xor
popa
push
jb
out
adc
incl
xor
in
pop
jne
ret
incl
lcall
mov
xchg
dec
inc
xchg
es
into
fcoml
xlat
push
mov
push
push
dec
sbb
ljmp
movsl
insl
cli
out
push
lods
sbb
dec
in
or
xchg
subb
xchg
sub
test
iret
les
or
jg
push
call
hlt
in
fidivrs
or
sti
loop
mov
das
push
leave
mov
and
cli
out
scas
int3
add
sbb
dec
loop
mov
dec
sub
mov
inc
je
je
js
mov
push
rcll
mov
ficomps
pushl
jmp
scas
imul
scas
push
sbb
or
mov
clc
push
cmp
cld
cld
loopne
cmp
cwtl
fidivrs
pop
movsl
neg
push
add
push
out
mov
ljmp
xchg
xchg
std
leave
out
sarb
add
jg
mov
nop
jecxz
adc
jmp
jno
call
incl
in
in
stos
decb
incl
jo
test
dec
or
pusha
insb
nop
sub
mov
je
call
push
pop
mov
lcall
mov
add
lcall
ljmp
mov
mov
xor
mov
fwait
jns
in
stos
mov
dec
mov
test
push
or
das
rorb
jecxz
and
insb
cld
dec
scas
adc
sbb
jg
mov
test
pop
or
nop
mov
mov
lahf
test
orl
push
addb
inc
popf
es
repnz
sub
mov
incl
add
lock
and
hlt
mov
jge
jle
fwait
and
loopne
mov
lock
inc
adc
nop
je
adc
sbbb
xchg
pusha
pop
inc
add
dec
bnd
jecxz
call
push
or
add
outsb
in
jge
mov
int3
lock
aaa
loop
mov
jo
sub
push
mov
das
outsl
decl
xchg
xchg
cmp
pop
cli
int
lods
fistl
and
jmp
or
pop
pop
mov
nop
mov
inc
mov
ja
push
pop
or
repnz
clc
decl
inc
pop
fsubs
js
cmpsb
in
in
out
ss
test
aas
jns
addr16
lcall
xchg
test
xchg
add
shrb
mov
cmpsl
jbe
loop
clc
aas
frstor
xchg
loop
jne
mov
jecxz
pop
ret
lret
xchg
dec
inc
leave
ret
ljmp
xor
sbb
xor
in
push
jle
lock
sub
decl
movsl
mov
and
or
mov
or
decb
and
sbbl
cmp
and
mov
jbe
sub
add
bound
sub
lcall
ljmp
xor
hlt
das
cmp
adc
push
js
xor
inc
sub
add
sbb
fcom
xchg
dec
inc
xor
fldl
cs
mov
lds
jnp
popa
pushf
pop
inc
mov
xchg
mov
addr16
cmp
nop
inc
int
data16
mov
and
xchg
adcb
dec
sarb
popf
xor
push
mov
and
push
xor
inc
loope
call
xchg
scas
popa
out
jns
jmp
fucom
ret
or
cmp
cld
ljmp
or
inc
ljmp
inc
prefetchnta
jecxz
fstps
mov
jnp
xorb
mov
stc
int
push
stos
test
mov
xor
push
repz
dec
popa
pop
mov
jle
dec
test
push
inc
pop
adc
aaa
cld
fidivl
jge
inc
push
jp
fidivl
inc
cmpl
and
push
shll
rorl
mov
fistpl
out
dec
lods
lret
sub
daa
cli
or
into
frstor
imul
mov
mov
jmp
scas
loop
cmpsb
inc
mov
xchg
lcall
pop
inc
insl
shl
jo
cld
xchg
and
dec
insl
les
test
les
and
insb
jmp
mov
in
xor
sub
sub
stc
rclb
mov
inc
mov
popf
decl
and
cmp
and
fs
outsl
dec
pop
cmp
lods
mov
out
mov
xchg
stos
pop
clc
out
lea
cmp
sub
mov
std
sbb
dec
jg
or
lcall
pushl
stos
inc
cmpsb
dec
andb
pop
cmpsb
push
addb
push
pusha
je
dec
ud0
pushl
push
sbb
sbb
cmp
adc
popa
pop
bnd
jae
and
cmp
ljmp
xchg
lahf
loope
mov
push
inc
popa
mov
jb
pop
or
sbb
add
leave
cmp
adc
ret
adc
dec
adc
adc
sub
rcl
mov
ret
imul
fwait
mov
ror
mov
decl
arpl
cmpsl
jno
sbb
das
loop
xlat
pop
cwtl
mov
dec
test
aaa
mov
dec
ficoms
incl
xchg
outsb
fs
daa
aas
sbb
loop
and
fcompl
daa
hlt
dec
pop
dec
decl
loopne
push
inc
int
mov
lret
dec
add
call
push
xlat
stc
incl
into
push
loope
stos
test
push
sbb
jecxz
mov
cmc
mov
sar
xor
cltd
imul
mov
fwait
cld
jmp
inc
out
arpl
cmp
test
push
nop
and
test
xor
call
scas
mov
pop
jl
les
call
aaa
dec
je
push
jae
and
rorl
cli
or
mov
push
mov
loopne
mov
dec
jns
sahf
call
ljmp
jmp
push
fldcw
repnz
fnstcw
cmp
pusha
lds
leave
clc
or
add
ficomps
jmp
movsb
aas
inc
jae
jmp
shlb
lea
pop
push
xor
test
push
imul
cmp
cmc
outsb
push
out
or
testb
ljmp
out
push
das
pop
inc
add
clc
cmp
insb
and
jecxz
inc
ds
pop
cmp
mov
xlat
jae
pop
sbb
lahf
push
cmpb
mov
jmp
push
mov
fistl
xchg
jbe
mov
enter
mov
sub
icebp
mov
inc
cmpsl
iret
mov
lcall
sub
mov
test
jg
mov
fstpt
ljmp
mov
in
xchg
push
pop
fnstcw
in
outsb
jecxz
outsl
int3
arpl
pop
es
out
cmp
jecxz
jae
mov
sbbb
dec
jno
adc
inc
push
inc
cmpsl
std
int3
jae
jg
push
inc
and
jbe
push
inc
cmp
pop
xor
frstor
incl
jecxz
adc
out
push
push
push
mov
dec
push
mov
sbb
sbb
and
call
push
daa
cltd
stos
int3
mov
outsb
inc
insb
pop
sbb
or
or
add
jg
in
xor
je
lods
add
mov
leave
mov
sbb
pop
rcl
push
inc
pushl
repnz
pushf
or
xchg
mov
push
mov
and
jl
into
dec
inc
sar
ljmp
aas
pop
sbb
dec
xor
test
jmp
enter
je
jno
jae
jp
imul
cmp
and
icebp
cmp
mov
subl
fcomi
mov
sbb
jecxz
fmull
dec
jbe
or
addb
adc
cmp
call
fsubs
es
insb
pop
clc
push
pop
iret
cs
arpl
sub
popa
ffree
ss
addr16
cmp
call
dec
sahf
lahf
je
fimull
sub
call
pop
or
mov
jno
jmp
dec
sbbb
jg
mov
inc
and
inc
ja
sbb
sub
out
and
sahf
fisttps
shrl
cmpsb
test
hlt
incl
roll
imul
mov
lds
scas
add
lock
pop
loopne
inc
repz
insl
adc
adc
call
cmp
repz
repnz
sahf
es
ss
insb
xor
fdivr
pop
out
das
sar
lock
jnp
push
and
sarl
rclb
lods
mov
stc
pusha
fwait
add
ds
sbb
inc
sub
lea
jnp
hlt
popa
incl
cmpsb
iret
cltd
lcall
fistps
adc
or
jg
ljmp
mov
gs
mov
add
in
lea
fistpl
jno
dec
xor
sub
cmp
push
cmp
push
jns
sub
push
test
stos
pop
or
incl
push
in
fcoms
das
mov
lret
fs
inc
or
sub
in
sub
incl
xchg
addr16
inc
xchg
scas
cli
pop
loopne
xlat
out
push
ret
push
adc
ret
pop
std
lcall
sbb
in
addb
dec
inc
push
mov
jne
mov
and
das
rolb
fnstcw
jno
enter
dec
or
xchg
cmp
lods
push
push
add
inc
sub
push
aad
mov
fisttpl
pushf
cmpl
push
add
mov
out
push
and
stc
and
lock
dec
push
xor
in
mov
lds
les
mov
jbe
mov
insb
in
lds
jns
in
movsl
addr16
mov
incl
js
adc
or
nop
mov
ljmp
shl
je
mov
imul
mov
and
sti
shll
clc
fsub
lcall
mov
das
insl
daa
push
sbb
divl
out
lea
add
fsubr
lcall
xor
push
fistl
loopne
sahf
mov
mov
mov
push
inc
cld
add
call
sbb
fmul
jl
sti
stos
mov
push
sarl
stos
fisubrl
mov
insl
push
adc
jae
mov
repnz
lret
fprem1
aas
and
out
fdivs
ljmp
mov
xor
call
fwait
add
xchg
test
sub
inc
negb
sub
adc
inc
or
sbbl
sbb
daa
pushf
mov
lods
aas
loope
scas
cmpsb
lea
dec
mov
jg
out
xchg
hlt
stc
fwait
lret
jae
push
cmc
or
lret
or
pushl
outsb
lret
fadds
test
xchg
ret
aaa
add
aas
ficompl
movsl
jne
pop
push
pop
scas
dec
sbb
addr16
dec
pop
nop
subb
add
xchg
idivb
hlt
decl
push
std
in
sbb
hlt
call
stos
enter
jb
mov
sub
fucom
cmpsl
inc
std
inc
push
call
add
lcall
hlt
or
jbe
out
push
scas
mov
push
cmp
pop
arpl
sbb
mov
lcall
mov
es
xchg
or
dec
ds
mov
mov
sub
popa
out
lret
decl
mov
mov
sbb
and
loop
dec
repz
sahf
mov
xchg
clc
pushf
stos
dec
sub
out
or
xchg
jb
dec
cmp
hlt
ss
adc
fbld
decl
movsb
pcmpgtb
fiaddl
xchg
int
std
jg
sbb
inc
mov
mov
insl
sub
loope
pushl
test
mov
push
nop
xchg
push
push
fdivrl
pop
prefetchnta
pop
dec
loop
xchg
fisubs
movsl
ja
shrb
aas
aas
jl
jmp
xlat
sbb
mov
and
push
mov
in
cli
xor
roll
faddp
and
pop
cltd
addr16
xor
add
sbb
icebp
jae
cmp
sub
roll
add
pushf
insl
outsb
mov
pushf
push
sub
ljmp
xlat
inc
adc
pop
mov
pop
in
cmp
pop
fwait
ljmp
insb
mov
iret
sar
rol
jmp
sbb
and
cld
stos
dec
mov
sbb
movsb
add
push
jno
mov
subl
sbb
fcomip
pushl
jmp
adc
sbb
mov
mov
xchg
and
lret
popa
inc
mov
push
arpl
sbb
in
mov
mov
mov
clc
cmpsb
std
and
cmpsl
addr16
aad
mov
mov
clc
clc
andw
mov
insb
adc
mov
xchg
aas
lahf
scas
ret
pop
orb
shr
xchg
inc
mov
add
incl
jp
bt
data16
loop
cmp
jg
pop
pop
push
in
jmp
mov
aam
dec
inc
ds
fsubl
xchg
pop
pop
loop
mov
mov
bound
sbb
or
dec
mov
push
sar
call
xchg
in
fcoms
sbb
scas
mov
call
jle
scas
jle
daa
or
decl
scas
fmuls
ret
lods
mov
dec
pop
in
xchg
adc
dec
jns
lea
mov
pushl
imul
inc
sbb
mov
data16
mov
pop
push
mov
xchg
lods
cld
imul
imul
push
inc
dec
dec
fcoms
pushl
pop
test
inc
sub
mov
fldl
sub
mov
xor
jmp
push
adc
loope
in
lock
gs
push
mov
jns
sti
lea
lea
pop
mov
call
xor
ljmp
fcomp
sub
push
inc
lea
mov
add
int3
pushf
outsb
outsb
ret
jg
push
dec
dec
cltd
cli
pop
call
sti
sahf
fcoms
jmp
test
cmp
hlt
decl
movsb
int
hlt
and
inc
inc
mov
jge
dec
mov
jns
hlt
cmpsl
mov
lds
pusha
adc
cmp
adc
in
outsb
pusha
mov
inc
jmp
add
pusha
inc
test
add
mov
popf
mov
pop
icebp
dec
popf
arpl
mov
dec
xchg
dec
or
cmp
push
xchg
stos
insb
imul
repnz
adc
call
add
pushl
adc
lock
mov
jg
or
inc
stos
xchg
jno
call
jmp
ss
in
mov
test
push
add
xor
cwtl
into
nop
cli
sbb
fnstcw
push
or
lock
inc
mov
xchg
pop
cld
ret
pop
int
scas
daa
fsubr
jns
ljmp
cli
mov
insl
sahf
lcall
cwtl
xor
push
sbb
call
mov
pop
into
in
repnz
cmc
test
hlt
xor
dec
xchg
bound
and
int3
xor
xchg
sbb
mov
iret
mov
iret
repnz
inc
mov
pushl
andb
jnp
sub
das
push
dec
fsubl
scas
or
jle
mov
mov
hlt
imul
push
loope
mov
sbb
decl
inc
mov
ret
push
pop
and
jg
mov
cltd
push
inc
cmp
pop
dec
push
jg
push
xor
adc
jge
xor
fsubrs
popa
jmp
decl
popa
mov
inc
xchg
imul
jae
add
call
bound
scas
sbb
xorl
mov
lcall
sbb
and
lahf
psrld
dec
andl
imul
inc
scas
ror
mov
or
cmp
cmp
xor
mov
adc
push
or
cmp
dec
enter
pop
mov
popa
aam
jnp
jl
addl
mov
jg
dec
orl
jmp
lret
dec
mov
push
xor
in
cmc
pushf
shlb
add
and
xlat
cmp
call
imul
mov
enter
jl
cmpsl
mov
and
sar
in
push
inc
push
add
movsb
add
shlb
clc
call
std
decl
and
inc
sub
sbb
in
pop
ja
push
lods
lcall
scas
jo
lea
in
pop
mov
inc
je
aas
push
lea
fbstp
test
cmpsb
clc
mov
jge
hlt
mov
sarl
dec
cmc
mov
dec
add
bound
lret
sahf
jae
aas
push
cld
jg
adc
pop
push
ds
enter
or
mov
and
xor
fdivl
mov
and
mov
cmc
dec
add
shrl
adc
jmp
out
push
stos
mov
mov
dec
pop
inc
push
jl
sahf
cli
xor
inc
or
xchg
insl
es
cmp
pop
fdivl
es
in
sub
cmc
popf
add
dec
call
shrb
add
fildll
and
cld
outsb
cmp
cmp
mov
dec
pop
stc
mov
pushl
movsl
mov
jle
xor
sub
and
sti
fcoml
xchg
jmp
icebp
jns
pop
data16
cmpsl
cmpsl
adc
fidivl
jmp
mov
lcall
stos
push
mov
fcompl
popf
mov
les
inc
sar
fwait
nop
aaa
decl
fdivr
into
push
push
jle
scas
stos
add
pop
loope
fistps
inc
cmp
and
xchg
sti
pop
cmp
fildll
arpl
aas
dec
stc
test
out
xchg
mov
mov
lods
ljmp
out
aas
xchg
arpl
xchg
add
sahf
xor
xchg
sti
and
mov
cmp
repnz
scas
jns
xor
and
inc
jmp
cli
cmpsl
ret
scas
loop
incl
inc
cli
dec
mov
dec
movsl
xor
sar
jmp
sub
pop
cltd
test
mov
mov
sbb
push
aam
pop
jae
xor
sahf
bnd
stos
mov
xchg
lds
std
repnz
movsl
int3
add
push
xchg
in
adc
sub
ds
rorb
sbb
lret
sbb
mov
pop
shlb
pop
std
sbb
gs
int3
xchg
and
lcall
jne
in
jb
adc
pop
sbbl
data16
mov
jmp
or
mov
loop
aaa
mov
cmp
dec
and
mov
xor
inc
adc
and
mov
repnz
pop
jp
mov
sub
pushf
fidivrl
ret
cmp
test
push
sahf
sub
jne
neg
push
jmp
mov
jmp
lea
scas
push
insl
scas
cmc
xchg
inc
jbe
fadds
xor
or
outsl
lods
jbe
cwtl
pop
orb
out
loopne
insl
into
mov
or
cmp
add
stc
std
pop
mov
mov
and
pop
rorl
inc
push
mov
jg
and
jecxz
lret
mov
adc
popa
push
push
pop
push
dec
and
inc
jo
and
push
cmp
out
stos
sbb
ljmp
mov
cmpsl
pop
ja
ret
add
aam
dec
das
mov
mov
call
leave
out
pop
fisttpll
sub
lcall
loope
push
mov
aaa
adc
cmpsb
mov
dec
shrl
or
leave
mov
outsl
rolb
cli
stc
push
adc
outsl
or
sub
and
cli
insb
xor
enter
leave
jecxz
es
cmp
into
leave
fcoml
out
ljmp
test
or
test
lcall
mov
sbb
test
pushl
jmp
push
mov
add
xchg
pop
out
jo
fcoms
loope
jmp
cmp
mov
mov
pop
inc
out
insb
repnz
insb
push
rol
mov
push
imul
ret
mov
jnp
fs
push
dec
int
jne
lods
lahf
icebp
mov
xor
jmp
prefetch
test
jecxz
jbe
mov
jnp
loope
push
icebp
mov
and
outsb
lret
mov
xchg
or
daa
js
call
jecxz
jl
adc
enter
in
push
dec
inc
sbb
fcomps
das
mov
dec
lcall
jle
inc
xor
cmp
add
subl
mov
ljmp
push
mov
scas
aaa
or
add
inc
inc
loop
push
dec
pop
xchg
mov
mov
lcall
popa
outsb
jns
jge
rclb
hlt
sbb
pop
loope
lcall
dec
call
push
mov
inc
arpl
int
popw
add
cwtl
jmp
jmp
in
pusha
xor
lcall
in
cld
std
cmp
add
push
lea
andl
ds
cs
push
pop
bound
xlat
adc
push
int
leave
cmp
incl
add
daa
add
bnd
seto
cmp
and
cwtl
inc
push
mov
sbb
adc
or
outsb
sub
ret
cld
call
arpl
sar
call
cmp
rclb
cmpsb
popa
cs
sahf
scas
mov
in
mov
xlat
shll
mov
call
sub
xor
idivl
ret
add
clc
pop
jns
inc
test
fwait
mov
push
int
repz
and
stc
inc
cmp
dec
test
or
pop
fwait
rorl
in
scas
mov
out
clc
into
adc
fneni(8087
dec
inc
adc
pop
movsl
jmp
fsubl
std
ljmp
scas
rorl
cmp
shll
mov
orb
lcall
ljmp
push
cmp
jg
mov
jmp
mov
mulb
mov
aam
or
xor
or
cmp
jg
inc
out
mov
mov
clc
jns
in
mov
jne
inc
out
in
lea
mov
jmp
ja
dec
sti
sub
cmp
cmp
add
mov
mov
test
ja
popa
sub
sbb
cmpsb
out
aad
ja
jp
add
or
jmp
xor
arpl
adc
imul
inc
fdivrp
jmp
ljmp
inc
bound
test
lea
and
dec
jno
inc
xchg
mov
cli
popf
sub
pop
std
add
ljmp
mov
push
test
pop
pop
push
ljmp
mov
pop
fidivrl
dec
rcrb
js
mov
std
lcall
scas
mov
sub
xchg
mov
dec
sbb
push
mov
decl
xchg
push
outsb
or
ljmp
vucomiss
test
sub
fcomip
jmp
ss
push
cmp
xlat
out
test
movsl
dec
imul
scas
xor
xor
mov
adc
test
dec
push
outsb
ljmp
mov
mov
test
mov
lcall
loop
inc
mov
sar
push
arpl
ja
subb
cmpsb
inc
fstps
dec
shrl
jp
and
lcall
repz
nop
adc
jg
add
mov
jg
nop
lret
push
jg
scas
inc
inc
mov
jae
sub
pop
ret
push
mov
insb
sub
and
inc
adc
push
add
das
mov
imul
mov
mov
cld
jmp
mov
lcall
clc
push
lret
jmp
iret
and
mull
stc
dec
sbbl
loopne
lret
out
and
clc
insl
fs
shll
pop
mov
push
rorb
out
and
add
push
push
shll
push
movsb
jmp
dec
mov
xchg
adc
xchg
jae
inc
daa
push
mov
mov
ljmp
scas
dec
cld
jg
ficomps
daa
xchg
leave
stos
gs
push
adc
jl
lret
dec
idiv
repnz
jmp
sub
out
test
or
or
mov
subl
stos
shll
lahf
ljmp
loope
shll
xlat
jae
dec
xor
mov
fcomip
inc
testl
xchg
push
inc
fists
loop
jns
pop
sbb
clc
in
shll
ret
sar
incl
pop
jmp
jmp
hlt
push
sbb
int3
cmp
xchg
dec
loope
bnd
cli
out
cmp
lcall
adc
push
add
lock
std
in
and
mov
in
mov
add
pop
aam
into
mov
repnz
sub
sbb
aam
xchg
incl
mov
decb
lcall
sbb
cmpsl
jecxz
call
cli
bnd
jns
and
shrb
scas
out
lret
inc
adc
call
outsb
mov
hlt
sub
in
fildl
test
leave
or
stos
shll
out
call
mov
jnp
dec
insb
push
inc
andl
mov
jg
shll
call
ror
nop
or
cs
or
sbbl
xchg
pop
ret
xchg
das
incl
jne
jl
loope
out
icebp
mov
xor
cmpsl
subl
movsl
dec
xchg
add
mov
clc
lcall
sbb
rcrb
dec
pusha
fbld
jge
arpl
inc
ja
cmc
cmpsb
loop
popa
mov
or
bound
mov
stc
xchg
nop
sub
push
std
call
mull
pop
jecxz
pop
cmp
ljmp
dec
xor
or
decl
insb
loop
cmp
xor
testb
aam
cmp
lret
int3
repnz
mov
xor
xchg
js
jae
aad
push
pop
sar
jmp
jo
cmp
inc
ja
pop
js
es
loop
lcall
cmp
test
imul
push
cmp
test
dec
fstpt
xorb
std
jmp
cli
lcall
mov
pushf
pop
into
jmp
jmp
fstpt
loopne
mov
mov
out
insb
in
movsl
rcl
loope
gs
aad
sbb
inc
ficomps
scas
call
jns
mov
jno
ds
enter
mov
fnstenv
sub
pop
int3
cmp
jmp
sbb
mov
or
sbbb
aaa
dec
lock
inc
or
lcall
nop
sarb
lds
mov
insb
xor
lahf
addl
lcall
jns
sub
sbb
jle
jb
mov
lods
pop
mov
jp
out
add
mov
jle
mov
pop
jne
jmp
jg
ljmp
cli
cli
jmp
hlt
nop
inc
xchg
mov
inc
jl
push
xchg
push
sub
inc
pop
add
xchg
fildl
cwtl
scas
mov
add
push
push
decb
pop
xchg
and
rcrb
dec
mov
mov
dec
mov
jg
das
add
mov
dec
adc
cmpsb
mov
lock
adc
in
stc
scas
jg
dec
in
dec
gs
aas
pusha
mov
inc
or
je
xchg
push
pop
cmp
mov
out
inc
mov
adc
dec
mov
cmpsl
push
add
mov
in
push
cmpsl
cmp
loop
mov
popa
stos
jle
jno
lcall
adc
jp
pop
jecxz
cli
mov
call
or
xlat
or
pop
and
dec
std
push
test
aaa
xor
jg
mov
jae
js
cmp
lret
inc
sub
or
push
stc
adc
sub
sti
dec
mov
in
out
lcall
addr16
mov
and
out
test
icebp
ss
adc
pop
push
or
dec
push
mov
orb
xor
fcomp
test
out
mov
inc
dec
xchg
das
xchg
cmp
into
pop
sti
cmp
nop
xor
decl
fsubrp
add
add
int3
xor
sbb
andl
loope
sbb
pop
cmp
stos
stc
jg
mov
add
ret
ja
push
mov
mov
adc
les
cmpsl
add
push
push
fstl
mov
cmp
sub
mov
mov
call
or
pop
sub
ljmp
jbe
push
fdivr
push
dec
fcoml
xchg
xchg
adc
sub
mov
cli
and
ds
out
lret
xchg
out
out
jbe
jmp
aas
test
push
or
or
inc
or
inc
mov
jg
inc
repnz
ljmp
int
xchg
fstpt
push
adc
inc
inc
dec
xor
mov
mov
jecxz
in
js
fiadds
inc
ljmp
or
mov
repz
stc
mov
sbb
sbb
mov
and
push
pop
icebp
jge
in
out
pop
cltd
push
inc
cmc
inc
xor
repnz
call
leave
mov
ljmp
mov
mov
sub
cwtl
ret
sbb
fwait
xor
inc
jbe
lret
pop
in
pop
jg
xlat
pop
test
jbe
or
cld
out
adc
xchg
mov
fidivs
mov
inc
dec
jge
cmp
iret
jle
push
pushf
lahf
mov
jg
hlt
xchg
icebp
ret
in
inc
popa
mov
add
jnp
fcoms
movsb
lods
pushl
inc
in
pop
push
fadds
mov
sub
sbb
and
mov
add
or
dec
dec
or
cmp
add
aad
lods
mull
lock
mov
aaa
loope
incl
pusha
scas
call
and
call
xor
rcrb
aas
or
lret
out
mov
fimull
mov
movsl
push
xchg
sti
xor
pushl
add
repnz
out
add
mov
int3
adc
in
int
repz
add
or
testb
ljmp
push
rolb
fwait
pop
jb
push
outsl
stos
mov
outsb
add
add
mov
pushf
jl
mov
ljmp
mov
es
xor
sub
aam
adc
scas
std
lock
popf
mov
mov
lock
fcomip
lds
xchg
in
mov
mov
mov
les
inc
push
sbb
pop
and
jmp
clc
daa
xchg
fbstp
inc
mov
and
or
nop
cmc
std
dec
cmovbe
sbb
or
lahf
in
sar
jb
ds
pop
dec
adc
or
add
decl
lock
ret
mov
or
sbbb
mov
mov
test
ljmp
dec
jns
insb
inc
xchg
aas
daa
aam
dec
jb
adc
jmp
mov
push
inc
cmp
pop
mov
rcr
into
xor
mov
mov
jl
cwtl
cltd
jl
lcall
ret
mov
or
xor
test
outsl
fcompl
sbb
sahf
fwait
sub
cwtl
rorb
ljmp
mov
sbb
fisttpll
dec
in
outsb
cld
sbb
mov
sbbl
push
mov
test
mov
mov
in
inc
lahf
push
paddusb
add
ficompl
fimull
loopne
test
inc
push
movsl
dec
pop
mov
ljmp
cli
push
repnz
fisttps
xchg
and
repnz
mov
sub
cmpsb
inc
add
scas
jge
jge
jne
pop
mov
shlb
aam
imul
imul
mov
mov
mov
mov
push
sbb
nop
pop
repnz
jmp
pop
push
cmp
test
imul
mov
rorl
sub
stos
hlt
lret
jmp
and
repnz
mov
sub
stos
bound
lea
or
xchg
jo
decl
fcompl
jge
sbb
les
loop
int
out
outsl
gs
sbbb
xor
cli
push
insb
pop
sbb
cmp
xor
test
cmp
ds
jb
cmp
lock
incl
xor
add
mov
fnstenv
dec
into
adc
mov
adc
stos
pop
inc
mov
rcll
movb
xor
inc
fstps
call
iret
mov
fndisi(8087
imul
popa
and
sub
sbb
dec
mov
mov
sahf
mov
dec
mov
decl
pop
xor
mov
icebp
dec
sbb
pop
inc
jmp
jno
xchg
outsl
mov
xchg
xchg
dec
hlt
nop
loop
es
cli
or
fdivr
rolb
cwtl
pushf
in
xchg
jns
mov
cli
imul
loopne
and
out
xchg
fdivrl
pop
das
and
cltd
sbb
xor
cli
das
clc
adc
pop
add
fwait
divb
add
pushl
stos
cs
mov
lock
inc
mov
ja
pop
inc
push
jmp
mov
mov
lods
subb
or
sbb
pushf
adc
popa
incl
incl
pop
push
or
lods
outsl
xchg
movsl
pusha
test
jg
adc
decl
and
repnz
sbb
mov
sbb
sar
ljmp
xor
sarb
test
sub
test
inc
jg
push
adc
popf
cmpsb
mov
mov
fwait
cmp
rcrb
cmc
jns
fisttpl
imul
mov
pop
stc
jno
push
in
dec
scas
lods
lods
incl
cmc
dec
inc
sub
jp
pop
loop
push
xlat
ds
cmp
push
xchg
stos
mov
or
call
dec
je
bound
daa
xchg
push
scas
xchg
pop
add
push
jns
flds
sub
incl
leave
imul
scas
cmpsb
in
dec
xchg
pop
jge
jae
repnz
add
mov
mov
jnp
in
or
lods
fs
push
cmpsb
sbb
sub
call
sub
xchg
push
push
push
cmp
inc
or
jecxz
and
xchg
pop
mov
jg
std
bound
test
push
push
enter
aaa
push
lods
pop
daa
sti
pushf
mov
scas
fcos
mov
sarb
sub
push
hlt
hlt
push
jno
push
sub
sbb
cmp
sbb
lcall
adc
pop
inc
inc
add
mov
addr16
jno
push
mov
dec
jmp
out
push
lcall
dec
test
mov
inc
popa
arpl
add
ss
mov
push
daa
push
jle
andb
push
cmp
cs
pushf
xor
mul
mov
lcall
xor
ja
sahf
mov
add
ljmp
xchg
mov
js
nop
fldl
out
lahf
and
adc
lea
jmp
nop
arpl
pop
mov
das
pop
fldt
nop
lret
addl
jle
mov
inc
push
lcall
push
jns
and
lea
js
cmpsl
adc
out
push
aad
leave
ja
xchg
pop
dec
gs
lcall
daa
dec
pop
and
mov
push
pop
inc
sbb
and
push
xchg
and
mov
fwait
daa
cmp
jp
dec
xor
sar
push
xlat
mov
orl
mov
ret
repnz
add
es
mov
ss
outsb
adc
lds
cmpsb
sahf
clc
inc
fistps
push
popa
xlat
decl
mov
out
repz
jno
hlt
mov
jecxz
leave
in
pushl
in
mov
push
and
jb
jp
aad
movsb
lds
aas
lea
hlt
mov
aaa
ss
loope
add
lret
outsl
inc
pop
jae
mov
add
fs
adcl
mov
mov
outsl
jbe
pushl
jne
pop
js
rdpmc
jns
mov
jle
rol
lea
fidivs
out
test
jl
and
add
add
sbb
scas
cmpsb
packssdw
mov
xchg
mov
lret
sbb
pushl
inc
pop
pushf
or
rclb
sbb
pop
inc
inc
cmc
inc
sub
sub
xchg
add
decl
push
pop
rorb
jbe
ret
or
mov
out
pop
outsl
nop
in
es
dec
mov
lret
pushf
roll
pop
pop
mov
sbb
jmp
jge
ficoml
sbb
sub
xchg
xor
gs
call
rcrl
sbb
cmpsl
push
mov
adcb
sbb
int3
sbb
mov
jmp
adc
inc
shr
pushf
xor
push
in
enter
rcr
out
incl
adc
cmp
add
mov
xchg
push
add
xchg
call
fcomip
push
inc
call
mov
icebp
ja
push
inc
dec
add
inc
xor
mov
call
inc
gs
cmp
sarb
pop
sbbb
lcall
pop
and
movups
hlt
adc
sub
jg
jmp
bound
sahf
in
jo
and
ja
or
test
cmp
insl
or
or
jp
sbbl
lcall
push
insb
into
or
jne
mov
imul
mov
sbb
std
ljmp
and
pop
mov
mov
andl
shlb
inc
iret
jbe
call
dec
cli
mov
push
sbb
jbe
pop
lret
mov
or
sub
jb
xchg
pop
adc
pushl
jle
aam
stos
pushf
xchg
jg
std
mov
sub
fisttpl
icebp
sub
mov
negl
repnz
or
jp
mov
mov
into
popf
or
xor
gs
inc
cmp
test
pop
shrb
idiv
call
xor
rolb
lock
and
stc
pop
cmp
mov
mov
incl
add
scas
frstor
jnp
fsts
or
dec
loope
ja
cwtl
push
sbb
outsl
cmp
std
lcall
sarb
and
mov
jge
cmp
pushl
int
out
jne
test
dec
divl
in
xor
pop
mov
adc
push
pop
enter
cmc
xlat
ret
out
mov
push
out
cmp
cmp
pusha
mov
pop
iret
std
incb
scas
scas
add
sbb
xchg
sarb
mov
push
mov
adc
cld
pop
push
decl
pushf
sub
into
inc
push
sarb
add
inc
loopne
mov
call
xlat
and
daa
jno
test
imul
adc
ljmp
jae
sbb
jle
jle
xor
loop
pop
add
pop
jle
aam
stos
pop
aad
jmp
pop
or
testl
mov
bnd
imul
dec
or
je
insb
mov
dec
or
jmp
inc
sbb
pop
movsb
inc
dec
hlt
leave
sub
decb
pop
aad
add
xchg
jno
fists
shlb
jne
clc
incl
sbb
cmp
jnp
adc
xchg
and
inc
jmp
dec
sub
jmp
mov
stc
int3
sbb
pushf
jmp
adc
mov
or
dec
popa
aam
mov
adc
out
cld
mov
lahf
into
sar
cmp
adc
mov
sub
mov
test
int
xchg
divb
jg
inc
and
int
inc
fdivrs
cmp
loope
xchg
xchg
sbbl
lret
jb
fs
push
dec
add
je
aas
push
in
ja
jae
fdivrs
test
ja
xchg
push
fdivp
sbb
pop
push
mov
jnp
mov
dec
dec
jo
or
insb
aam
mov
mov
push
dec
rcrl
lcall
bound
push
add
push
cmc
lret
push
test
fcmovb
incl
add
fldenv
sarl
ret
je
call
imul
imul
xchg
cmp
push
les
movsl
pop
sar
subl
shll
sbb
daa
es
loope
ljmp
inc
xchg
and
jp
push
jge
mov
and
cli
enter
xlat
cmp
imul
fsubrl
cmpsl
mov
inc
inc
mov
mov
mov
jmp
mov
or
les
sub
xchg
dec
repnz
sbb
or
mov
jbe
push
push
ljmp
or
sbb
movsb
jne
xchg
rcr
sarl
lods
dec
add
push
and
cmp
ja
fldenv
mov
out
pop
call
mov
jmp
push
scas
cmp
mov
inc
cmp
test
adc
pop
lret
call
or
cmp
xlat
add
or
int3
jl
and
jg
jmp
sub
inc
push
scas
aas
sub
adc
shrl
mov
cmp
pop
jge
xor
inc
adc
mov
iret
je
out
sahf
shll
ljmp
adc
out
int
les
inc
xchg
jbe
sbb
inc
shll
cmp
sub
add
call
sub
adc
inc
mov
repnz
sub
incl
jl
in
cmp
cmp
jo
dec
jnp
popf
mov
shll
call
xor
fcmovne
fildl
subb
nop
ss
orl
xor
push
ljmp
stos
mov
pop
mov
add
in
lahf
insb
int3
pop
and
dec
xchg
sahf
sbb
sbb
jmp
push
ss
mov
lret
fistpl
push
inc
jecxz
sbb
push
pop
jb
jns
sbb
sar
pushl
adc
mov
cmpl
rol
inc
mov
shll
add
jmp
cld
push
test
dec
aaa
repz
mov
insb
push
cmpl
dec
jmp
loopne
adc
add
or
sbb
arpl
shrl
mov
pushf
mov
sub
mov
addb
popf
enter
mov
push
incb
das
jb
pop
cs
mov
fsubrs
push
mov
incl
or
sti
sbbb
clc
sahf
jmp
out
jg
push
xlat
mov
stc
clc
test
fdivrs
fstps
adc
and
cmp
mov
push
repz
ja
sub
mov
sbb
xor
mov
mov
out
inc
stc
jg
mov
sbb
jmp
cltd
adc
test
ret
mov
frstor
fbstp
js
xor
sahf
or
aaa
lods
int
lods
lea
popa
xchg
inc
ret
incl
cmpl
popa
mov
mov
addr16
popf
idivl
xchg
cmp
call
aam
and
sbb
mov
pop
rolb
mov
mov
decl
or
sbb
jp
data16
push
push
scas
test
lcall
iret
sbb
and
and
jge
adc
jmp
mov
mov
xchg
inc
mov
adc
push
jecxz
minps
sbb
popa
ljmp
cs
mov
les
sub
test
xchg
daa
pop
push
add
hlt
sbb
lods
pusha
daa
dec
call
es
cmp
sub
bound
mull
mov
cmp
incl
cmpsb
jno
dec
outsb
dec
in
test
adc
subb
int
mov
mov
push
lods
imul
outsl
cmp
sbb
jo
jo
and
pop
cli
mov
dec
pop
inc
and
test
sub
dec
cmpsl
lcall
dec
mov
cmp
mov
mov
aas
int
lcall
jbe
int3
imul
decl
xchg
inc
sub
or
mov
movsb
scas
lods
xchg
push
mov
xchg
in
cmpb
push
popf
mov
push
lea
test
adc
adc
and
stc
int
add
movsl
xchg
outsb
int3
lcall
pop
push
dec
out
gs
daa
lods
xchg
popf
cmpsl
sbb
imul
repnz
sub
sbb
incl
inc
mov
push
push
popa
xor
test
xor
dec
imul
decl
and
mov
push
or
mov
insb
ret
pushf
jg
enter
dec
aad
call
cld
aam
cmpsl
push
imul
push
push
movsl
cmpsl
lea
inc
pop
hlt
cmc
pushl
and
fisubl
lock
int3
sbb
pushf
rolb
or
pop
shll
in
lcall
pop
push
add
pextrw
inc
adc
jnp
pop
popa
jbe
lods
addr16
mov
jmp
aam
imul
test
push
ja
mov
lahf
rolb
movsl
push
dec
hlt
ljmp
es
adc
je
into
push
jg
enter
mov
movsl
mov
lcall
mov
fsts
jb
pop
dec
inc
dec
xchg
fistl
pop
xor
jae
pop
xor
jbe
lcall
cli
jns
orl
ficomps
mov
mov
lock
test
mov
stc
sub
mov
add
jg
popa
mov
je
clc
inc
sahf
inc
adc
mov
data16
cld
out
cli
jmp
mov
xchg
push
int3
jge
sbb
mov
jo
cld
test
je
pushl
push
jmp
movsb
fmuls
addr16
mov
xchg
icebp
fdiv
add
lcall
mov
incl
adc
jg
mov
loop
dec
sbb
fcmovbe
mov
das
popa
pusha
out
mov
xchg
fiaddl
pushl
and
ret
hlt
scas
mov
jo
and
and
jns
into
lock
hlt
jmp
and
outsb
loopne
cmp
aas
lods
add
lea
mov
pop
lods
cs
sbb
jo
lods
fs
add
lock
ljmp
sbb
inc
mov
cmp
jae
pop
ret
cmp
aad
add
ljmp
inc
lcall
pop
fadd
out
call
mov
sahf
jae
insb
pop
or
les
mov
in
cmp
dec
decl
pop
je
pop
mov
cwtl
ret
lods
adc
sar
ljmp
sub
mov
sti
jle
adc
xchg
or
sbb
cmpb
mov
out
nop
incb
sub
push
and
xchg
sbb
ljmp
pushl
cwtl
push
sbb
into
dec
mov
cli
cmp
in
jle
mov
pushl
xchg
sub
clc
xor
cltd
loope
add
and
decl
push
add
out
mov
inc
pop
or
jge
adc
add
push
ret
pop
gs
imul
ljmp
decb
inc
cli
repz
int3
and
in
imul
pop
dec
add
dec
rorb
push
ret
cmc
inc
push
loopne
and
adcb
inc
inc
dec
std
push
jmp
push
and
jle
cmpsb
push
xchg
rorb
xor
stos
and
lcall
cmc
lods
push
mov
pop
call
rorl
std
nop
xor
mov
cmpsb
and
xchg
lret
mov
mov
jo
test
xor
mov
andb
es
cwtl
mov
and
decl
movsl
shrb
negb
add
inc
ror
rcrl
mul
call
outsb
adc
cli
dec
orl
jb
jne
cmpsl
cli
test
lods
push
or
mov
xchg
incl
daa
shlb
xor
ljmp
hlt
pushf
lods
mov
ljmp
hlt
inc
sbb
jns
cmp
sub
gs
test
cli
incl
ficompl
jne
mov
call
adc
mov
mov
mov
out
or
cmc
or
add
pop
ljmp
xor
mov
mov
dec
lret
xor
jle
sbb
mov
ret
call
cli
or
pushf
inc
pop
jle
leave
imul
mov
cltd
pusha
mov
popf
cmpsb
mov
pop
jle
cmp
push
xor
lcall
out
je
incb
movl
jbe
lret
xor
call
xchg
jge
shr
mov
lock
sbb
jbe
mov
or
mov
icebp
xchg
in
adc
lret
sbb
mov
sar
decl
xchg
repnz
rorb
push
sti
mov
mov
test
jmp
adc
add
popa
loope
lods
roll
dec
aam
cmp
das
ljmp
decl
push
hlt
out
add
fimull
cmp
ljmp
jo
repnz
aas
imul
outsl
cli
xor
inc
frstor
pop
mov
xor
cmpl
push
fcmovne
incl
ds
and
hlt
lds
leave
sbb
jg
es
out
ja
push
xor
jmp
inc
in
call
cmp
lss
outsb
and
addr16
cmp
add
mov
mov
decl
jae
lods
pop
adc
jmp
cld
inc
loopne
cmpsl
xchg
xor
sub
cwtl
fs
fimull
out
jge
xor
shll
xor
clc
pop
push
fdivs
mov
outsl
out
incl
stos
sbbb
push
add
out
push
int
ja
call
fidivrs
adc
cwtl
call
inc
inc
inc
hlt
xor
mov
push
pop
jmp
or
pop
sub
push
and
jo
inc
sbb
or
push
and
lahf
jle
fbld
xchg
icebp
mov
in
ret
daa
pushl
and
loope
sbbb
mov
sbb
and
into
gs
call
jo
lcall
jo
push
or
add
movsb
inc
and
int
mov
mov
stos
fidivl
cmp
cmp
xor
or
pop
dec
cmpsb
adcb
sbb
addr16
pop
push
push
jecxz
lcall
add
mov
repz
mov
ja
fs
shll
push
mov
jge
xchg
jne
add
fcos
ljmp
cmpsb
mov
jge
cmp
dec
out
outsb
dec
mov
mov
clc
cmpsb
xor
ljmp
popf
lea
jae
inc
insb
dec
sbb
or
or
loop
or
mov
and
ljmp
or
pop
xorb
jb
aam
push
call
int
sbb
dec
js
out
add
jmp
lock
mov
mov
loopne
decl
push
sbb
jle
cld
lods
nop
pop
jecxz
das
aad
push
jp
decl
insb
fsubrl
fistpl
xorl
sahf
pop
xor
in
push
push
or
adc
xchg
or
insb
ret
xchg
cmp
sbb
pop
mov
sti
lds
or
insl
stos
sbb
popf
mov
push
mov
mov
pushl
adc
fldenv
lcall
mov
es
sub
test
mov
sbbb
stc
popa
push
mov
ljmp
rolb
adc
das
js
jo
adc
stos
pusha
xlat
out
xchg
push
call
xorl
cmp
ja
pusha
movsb
daa
adc
in
jg
sbb
lret
mov
mov
pushl
pop
cmp
cmp
andl
sbb
adc
xchg
sub
repz
cs
ret
lcall
mov
adc
and
cmpsb
cmp
leave
inc
add
add
jecxz
lahf
sub
push
push
and
inc
sbb
into
dec
pop
jmp
fists
js
xor
clc
jle
cs
jecxz
insl
mov
imul
cmp
pop
icebp
mov
mov
push
retw
xor
xchg
aam
iret
je
dec
adc
cmp
arpl
mov
fwait
add
mov
lahf
rcr
cmc
mov
aas
push
cltd
stos
xchg
mov
inc
repnz
jg
or
xchg
xor
jo
cmpsl
lcall
into
and
pop
mov
sub
insb
loope
hlt
test
mov
or
and
pushl
and
lahf
dec
xchg
mov
repz
adc
push
out
test
mov
adc
cmp
pop
cmp
jnp
mov
lcall
stos
fdivp
movsl
popf
cltd
filds
scas
fldcw
mov
cmpsb
fwait
cmp
sti
call
dec
inc
ror
mov
in
jle
mov
rcr
mov
pop
aam
xchg
xlat
jmp
aaa
lret
jmp
ljmp
jb
nop
sbb
int3
mov
mov
inc
divl
jge
movsb
cli
dec
jmp
xchg
fdivl
xchg
mov
adc
mov
jmp
inc
jmp
mov
imul
pop
lods
jo
mov
mov
cltd
ret
xor
ja
incl
push
adc
test
fs
jo
mov
xchg
imul
xorb
jne
jl
mov
leave
or
aam
scas
jmp
cld
ljmp
sub
icebp
cwtl
and
idivb
pop
and
jg
adc
into
inc
loope
jge
add
push
or
lods
jle
lods
mov
hlt
ret
push
faddl
loope
push
lock
call
repz
inc
push
insb
lock
negb
mov
mov
push
xchg
jl
lret
lcall
inc
sbb
sarl
pop
aaa
in
pop
push
bound
bound
insb
in
xchg
xor
int3
das
imul
std
iret
inc
ja
repz
pop
add
cwtl
inc
lods
sbb
inc
in
lret
push
or
in
add
in
jmp
dec
call
push
cli
sbb
mov
int3
daa
jbe,pn
cwtl
sbb
pushf
dec
lret
stos
test
mov
ljmp
cwtl
jmp
and
les
mov
or
loop
adc
mov
or
jg
push
mov
add
mov
jmp
and
les
pop
cmp
lds
fsubs
sahf
xchg
pushf
push
fcoms
lret
xchg
mov
lcall
inc
int
add
out
test
push
jle
pop
sbb
mov
xchg
mov
mov
popf
inc
dec
mov
fdivr
pushl
fmull
popa
daa
js
xor
mov
mov
popf
pop
mov
add
cmc
mov
pop
push
inc
inc
dec
loopne
pop
lock
frstor
cld
pushl
dec
adc
pop
jo
jbe
xchg
mov
pop
lahf
scas
sbb
inc
mov
jbe
incl
xlat
outsl
dec
and
rcl
rolb
insb
cltd
push
ss
hlt
mov
push
ret
jmp
xchg
aad
pop
fwait
sarb
pop
pop
stc
mov
hlt
adc
test
mov
cmc
mov
jp
lock
cld
dec
pop
mov
inc
push
enter
sbbl
loopne
call
test
sbb
adcb
adc
hlt
daa
cltd
aam
push
aam
dec
ljmp
dec
nop
rcrb
xchg
xchg
aaa
loope
loop
repnz
lcall
sar
lret
dec
mov
mov
sbb
or
scas
jecxz
or
sub
lahf
fisttps
lock
and
mov
pop
fcomps
sbb
and
pushl
movsb
pop
pop
sti
xchg
push
xchg
pusha
inc
test
mov
and
arpl
xchg
dec
jb
in
lcall
xlat
inc
outsb
push
xchg
push
push
fldt
xchg
in
mov
add
sbb
jecxz
imul
decl
xchg
sbb
mov
add
mov
inc
mov
fwait
cmp
decl
pop
and
dec
in
xor
pop
aad
and
pop
xor
jo
xchg
inc
fistpl
cmp
adc
stos
adc
xor
jae
cltd
mov
push
aas
cld
cmc
pop
xchg
movsl
jge
sbb
or
cmc
rdtsc
fdivr
js
push
adc
cmp
jno
test
ret
pop
push
push
icebp
cmp
aad
clc
cld
pushl
out
jne
aad
int
dec
push
subb
pop
lret
xchg
mov
ljmp
inc
scas
es
dec
add
movsb
es
movsb
sub
lcall
scas
std
xchg
std
jge
or
ficompl
nop
xor
jecxz
lds
xchg
mov
ret
aad
lods
in
in
stc
push
shrb
ds
call
mov
or
cld
decl
fmul
icebp
or
adc
add
outsl
xchg
int3
inc
fld
out
fidivs
xor
pushl
lcall
test
jp
mov
cmp
out
or
xor
pop
pop
inc
cmpsl
les
dec
xchg
jns
and
xor
jae
and
sub
shrl
push
mov
out
inc
jno
call
scas
cmpsb
xchg
pop
dec
jbe
cmp
push
push
pusha
adc
sub
movsb
pushf
cltd
lods
adc
imul
mov
fsubl
push
fists
lock
ficoml
cmpsl
inc
or
call
add
adc
inc
sub
mov
jge
mov
xor
ja
fildl
cmp
out
mov
inc
popa
push
rcr
mov
mov
jg
lds
clc
push
cmp
adc
lret
cmp
add
into
and
push
ljmp
decl
test
jbe
cmp
es
les
add
decl
or
insb
sbb
push
and
out
mov
hlt
jmp
call
cmp
and
shlb
or
aad
mov
jmp
addl
aam
push
std
mov
and
jae
lea
stc
mov
dec
mov
cmp
lcall
push
cmc
lahf
cwtl
and
inc
jae
cmp
into
lea
pop
xchg
xchg
fwait
push
or
mulb
fwait
decl
mov
mov
pusha
mov
js
rorl
dec
add
xchg
mov
mov
inc
lods
xchg
push
cmp
adc
xor
jecxz
jp
mov
push
or
aam
notb
decl
add
cld
adc
int3
jae
lahf
xor
test
decl
xorb
imul
int3
jl
test
mov
dec
mov
std
clc
jo
cld
repz
enter
xorb
xchg
test
cld
insb
push
loope
jge
out
xor
sar
sbb
jg
mov
test
jnp
xchg
dec
lods
and
and
ljmp
mov
insl
clc
xor
std
cld
inc
ret
dec
or
sub
jle
rolb
ljmp
jl
ss
xor
lods
pop
sbb
xchg
mov
shld
adc
pop
outsl
add
decl
test
pop
inc
add
aam
dec
enter
test
xlat
sar
mov
push
cmpsl
js
enter
aad
sbb
xchg
pop
clc
outsl
add
xchg
cli
ret
jg
xlat
rorl
and
out
les
dec
sbb
push
inc
fdivrp
jg
mulb
sub
int
js
shll
call
mov
clc
sbb
incl
dec
and
popa
jmp
mov
mov
mov
mov
push
fldt
and
test
mov
jb
js
in
loop
xor
push
jae
imul
mov
jns
pop
lcall
jne
popf
push
mov
lret
xchg
pop
fwait
das
fsubl
je
cli
jmp
cwtl
mov
pusha
or
push
xchg
mov
gs
and
decl
loopne
cmp
mov
push
push
movsl
pop
sti
sub
xor
lcall
xor
sbb
leave
ret
mov
mov
sub
jg
scas
mov
push
pop
or
ljmp
testb
push
in
pop
mov
inc
pop
push
insb
fcoml
hlt
test
les
bound
mov
ljmp
leave
clc
call
jg
mov
add
clc
add
sub
pushf
and
dec
cmp
jns
out
and
add
lcall
in
stc
fisubrl
shrl
ret
movsl
dec
movsb
push
lcall
test
loop
adc
into
add
and
fdivl
xchg
hlt
aas
das
sbb
adc
mov
sbb
lods
mov
cld
cmp
lcall
xlat
cmp
repnz
pop
sbb
inc
push
pop
cmp
pop
dec
fisttps
jmp
jo
jb
mov
push
pushf
xor
dec
rclb
cmpb
push
cmp
pop
ljmp
cmp
adc
out
out
les
inc
arpl
jmp
lcall
mov
jg
dec
cmpsb
adc
and
jg
lea
stos
cmc
stos
gs
insb
dec
add
push
jmp
pop
mov
inc
jge
je
in
mov
lahf
addl
call
and
or
and
xor
leave
ds
push
cmp
xchg
pop
inc
call
in
inc
mov
into
lods
push
and
pop
addps
ret
scas
addb
incl
push
test
jecxz
pop
add
daa
cmp
or
push
shrb
ljmp
pop
xchg
sbb
pop
inc
jp
decl
gs
pop
xchg
ds
fsts
xchg
popa
xchg
adc
mov
fisttps
incl
pop
inc
fsubrp
inc
inc
bound
sahf
or
dec
dec
sti
arpl
push
out
scas
push
test
cli
jg
call
inc
sub
nop
adc
push
insb
pop
and
stc
inc
jmp
data16
incl
jns
fldl2t
pop
add
jp
aad
push
dec
jns
pusha
scas
sub
stos
jg
nop
pop
mov
push
inc
adc
ds
jns
pop
or
jle
sbb
inc
sub
pushl
in
push
ret
into
push
arpl
sar
mov
cmp
xor
sbb
pusha
xor
xchg
cmp
jmp
cmp
iret
xchg
loop
xchg
dec
add
mov
movsb
dec
mov
lret
mov
xor
dec
mov
mov
incl
sbb
adc
push
imul
incl
push
jo
test
sub
cltd
cmp
push
in
lock
jns
and
jge
push
sbb
adc
pop
and
int3
and
push
in
sbb
aas
xor
ja
imul
incl
sbb
dec
aam
jb
movsl
jmp
sub
inc
pop
test
aas
out
cs
jmp
inc
std
adc
imul
fdivp
inc
rcrl
inc
pop
outsl
add
das
test
and
in
jmp
pop
mov
sub
push
ss
ja,pt
pushf
in
stos
jp
and
sub
lods
call
incl
ljmp
fs
loope
popa
imul
inc
dec
sbb
mov
int3
dec
aaa
leave
xor
sbb
xchg
scas
mov
xchg
xchg
cmp
sarl
call
jb
sbb
dec
das
sbb
fldcw
hlt
mov
rcl
dec
sub
dec
add
sub
dec
test
lcall
pop
cwtl
jnp
movsl
into
lret
aas
xchg
cld
aaa
push
test
out
adcb
lea
cld
cli
adc
jge
ljmp
inc
sbb
lock
outsl
or
cmpsl
popf
lods
sbb
insl
jmp
jmp
xchg
sub
sub
pop
iret
add
data16
jmp
inc
jno
test
aam
fldl
popa
xlat
pushf
add
lret
loop
push
cwtl
insl
test
jg
clc
dec
mov
lods
test
pop
fbld
out
sub
dec
inc
imul
inc
and
sub
in
jg
sub
dec
int
add
push
push
jg
lahf
cltd
xor
ljmp
push
or
pop
lock
inc
mov
out
out
sbb
push
out
xor
call
adc
jmp
mov
repz
mov
out
jnp
fldcw
orl
ljmp
aad
loopne
push
fsub
cmp
jmp
cmp
mov
cli
lcall
sub
jae
mov
or
sub
sarb
ja
inc
test
push
scas
jo
movsb
jg
cmp
pop
movsb
je
xchg
sti
cmp
pusha
rcrl
xchg
ljmp
enter
jmp
js
test
xor
and
sti
jle
mov
jmp
or
loopw
mov
or
cmp
jbe
in
pop
dec
cmp
ret
adc
incl
sbb
and
sub
jo
jno
call
pop
add
mov
push
clc
ds
subl
fidivl
sahf
fcomi
push
rolb
mov
test
dec
popf
or
inc
push
mov
or
pop
sbbl
or
in
lock
mov
mov
adc
mov
call
add
cmp
js
fstps
xorb
ljmp
addl
pusha
and
push
jg
sbbl
push
add
je
dec
jmp
incl
lret
int3
fistpll
mov
cmp
cmpsb
jbe
dec
push
inc
jne
ret
ljmp
mov
or
cmp
scas
pop
mov
mov
pushl
popfw
in
xor
rcl
in
xchg
jno
loopne
cmp
int
clc
and
nop
call
jnp
push
xor
lret
out
ror
dec
lods
mov
sub
mov
jecxz
xchg
sub
popa
inc
and
in
xchg
inc
cld
sahf
and
jno
ja
and
decl
shl
mov
mov
out
out
ud0
jg
in
sub
les
mov
popf
dec
fidivl
xor
sub
inc
out
out
mov
iret
movsl
jmp
out
int3
addr16
jbe
das
mov
divl
call
lds
add
cmp
fbstp
imul
outsb
mov
mov
mov
lcall
pop
or
cmp
loop
addr16
testb
jne
inc
mov
cmp
sbb
dec
lds
pop
jns
push
jl
cmp
push
pop
jbe
and
fcom
push
emms
ret
stos
jge
mov
sbb
cmpsb
iret
dec
fstps
mov
lcall
mov
gs
test
xchg
inc
movsl
push
and
mov
iret
sysenter
pop
jmp
adcb
push
test
inc
push
sub
sti
push
sub
pop
data16
int3
out
cli
call
push
enter
mov
inc
cmp
and
loopne
dec
es
test
xor
pushl
nop
jecxz
fisttpll
jb
push
inc
lahf
lods
add
ljmp
sub
or
test
sbb
stos
sbb
incl
push
lds
ja
mov
push
push
mov
xor
push
bound
adc
mov
jg
fdiv
jle
fisttpll
sbb
sub
mov
push
cmc
and
call
sub
imul
imul
push
movsl
outsb
dec
das
mov
jb
lods
jmp
test
les
dec
push
mov
js
add
popa
mov
xor
std
mov
lcall
and
dec
sar
push
xor
mov
adc
or
pop
and
inc
xchg
test
je
mov
push
imul
add
jmp
xchg
xor
jl
ret
inc
sub
pop
adc
daa
jg
or
xor
jl
fildl
sti
mov
ljmp
clc
imul
xchg
lcall
test
insl
sbb
das
cltd
cmc
out
fmul
test
xchg
iret
jne
xor
xchg
sarb
in
fists
je
in
adc
icebp
icebp
sub
dec
or
dec
xor
xchg
sbb
ljmp
or
cmp
push
lods
push
in
mov
loopne
xor
inc
mov
call
ret
jp
push
into
mov
add
lods
lods
jge,pn
ficomps
repnz
xor
subb
jmp
and
push
enter
outsl
pusha
aad
rorl
dec
jp
mov
sub
add
xor
push
inc
call
loopne
jl
mov
sbb
and
nop
pop
pop
push
lret
inc
cld
sbbb
decl
mov
jp
jns
fisubrl
scas
icebp
test
add
pushf
lea
xchg
push
lcall
decl
arpl
shr
in
sub
push
rcr
lds
gs
push
les
mov
testb
sub
cld
mov
iret
int3
dec
jbe
lcall
inc
xchg
jns
push
xchg
das
cmc
aaa
mov
lret
aad
sbb
xchg
mov
jae
mov
push
test
fildl
mov
jmp
vmovntpd
inc
ret
lcall
xchg
jecxz
mov
mov
push
out
cli
call
jmp
lods
js
test
rcrb
jg
adc
jo
pop
lea
outsl
clc
ljmp
in
sub
jae
pop
sub
pop
sub
cmp
mov
leave
mov
pop
jg
sub
and
jno
add
or
hlt
xchg
sar
in
in
pushf
or
cwtl
jg
rcl
mov
mov
call
mov
sub
jl
dec
out
in
jnp
out
cli
jmp
stc
lock
pop
loop
jb
fwait
jae
lahf
loopne
mov
cmp
call
adc
xchg
cmp
test
iret
decl
ficomps
sub
mov
movntq
mov
ret
jecxz
inc
sbb
call
jmp
incl
enter
adc
xchg
sarb
iret
movb
fldenv
cld
pop
decl
add
sar
out
clc
test
jmp
jmp
jae
clc
xchg
or
scas
lock
xchg
fs
movsl
repz
adc
and
stos
shrb
xor
clc
lods
mov
adc
and
loope
out
xor
pop
cmp
cmpb
adc
and
cld
cs
fwait
ja
pushl
cld
cmp
jb
adc
mov
dec
jbe
xor
cmp
fdivp
scas
jno
adc
incl
ljmp
sbbl
lea
pop
xchg
jle
inc
mov
mov
and
cmc
cmp
enter
mov
cmp
cs
notl
cmp
popf
sbb
fimull
fcom
cmpsb
fcoms
and
idiv
lcall
test
cmp
jge
or
dec
jmp
jge
imul
out
call
push
iret
xchg
and
sbb
movsl
jge
inc
cli
xchg
lods
sahf
popf
fwait
adc
jg
xor
inc
jne
movsb
mul
popa
mov
mov
fwait
int3
fisubrl
movsl
stos
dec
icebp
xor
nop
rclb
sahf
xchg
jmp
xor
fldcw
lcall
testb
stos
xchg
pop
int
out
cmc
mov
push
popf
dec
add
xor
pop
cltd
sub
push
pushf
push
jp
inc
ljmp
sar
repnz
cld
push
push
inc
mov
xlat
lods
mov
mov
ljmp
pop
movsl
mov
ret
add
scas
adc
scas
insl
out
inc
pop
xchg
push
lret
jno
sub
xchg
mov
jmp
pop
jbe
ret
jne
das
add
iret
in
ja
orl
xorl
iret
test
decl
xlat
outsl
xchg
inc
push
ljmp
fcmovnb
daa
lret
pop
fdivl
aaa
mov
decl
inc
xchg
enter
hlt
inc
fimull
push
jae
mov
push
dec
out
sub
ud0
push
pop
push
aam
push
in
ljmp
xlat
cmp
sbb
incl
mov
push
dec
imul
jg
mov
inc
cmp
pop
iret
xchg
sbbb
loope
or
icebp
fldl
lock
mov
adc
cmp
push
push
pop
inc
arpl
inc
mov
popa
jmp
shll
mov
insb
pop
cmc
mov
and
push
and
iretw
and
jnp
mov
jnp
mov
insl
jecxz
or
lcall
movsb
xor
icebp
mov
and
lods
lods
push
rcr
lds
jp
add
mov
push
jb
leave
pop
cmp
jg
sbb
push
maskmovq
testl
decl
lock
jle
xor
insw
or
movsl
mov
test
pop
jbe
out
push
in
or
or
dec
loope
cli
sub
or
lock
inc
sbb
in
add
adc
cmp
js
or
test
sbb
out
sbb
mov
call
fwait
mov
clc
and
mov
enter
sbb
fnstenv
ljmp
fs
jp
dec
cmpsl
add
in
pop
fcmovu
dec
clc
sbb
sbb
sub
and
jl
daa
xchg
adc
mov
icebp
mov
mov
mov
fwait
jno
xchg
aad
bound
mov
lock
jne
js
fnsave
fwait
push
repnz
cmpb
lds
and
ljmp
pop
or
outsl
popf
hlt
test
and
in
mov
jo
bound
mov
add
pop
je
inc
lcall
pusha
push
dec
jp
in
lea
outsl
push
and
and
dec
test
dec
or
aad
ljmp
sbb
fldenv
fmuls
push
xchg
xor
int
push
mov
xchg
jns
repnz
add
pushl
ss
loope
pop
push
repz
dec
xchg
out
push
mov
push
and
imul
cs
icebp
leave
pop
adc
loope
inc
out
filds
outsb
cmp
pop
pop
movsb
mov
sub
jl
mov
daa
push
ja
push
ret
lods
add
lret
fucomip
and
mov
xchg
jno
sub
mov
cld
loopne
pop
outsb
lahf
sub
gs
in
push
and
ljmp
jo
mov
sbb
pop
mov
xor
push
xchg
sar
pop
std
inc
jmp
jno
insb
push
adc
je
cwtl
xor
les
shrb
sbb
jg
push
popa
js
or
jle
cmp
sbb
and
add
clc
repz
shl
jl
jg
mov
push
dec
out
idivb
push
and
jae
sbb
push
pop
xchg
lahf
in
sbb
mov
and
adc
dec
push
mov
mov
push
mov
push
test
pop
data16
js
ss
jmp
sti
mov
cs
jmp
mov
test
push
sub
or
call
cmp
cmp
lcall
pop
add
jb
cmpsl
sub
pop
out
xchg
icebp
jmp
dec
rcrl
jp
outsb
xchg
loop
mov
decl
mov
push
gs
hlt
mov
data16
jge
nop
cmp
xchg
iret
vminps
cmpsl
mov
ljmp
cs
mov
fiadds
cli
push
ljmp
pop
push
insl
jae
inc
shrl
stos
cwtl
lret
fcmovnbe
cmp
cmp
rclb
fcompl
sar
lcall
inc
dec
cwtl
iret
pop
mov
or
cmp
subl
jg
int3
or
dec
jno
add
es
xor
or
inc
sbb
fdivrl
scas
push
sti
imul
lret
push
in
ljmp
cs
repz
pop
rcll
xorb
stos
lret
jp
cmpsb
push
js
fwait
pusha
mov
jo
inc
pushf
xchg
addr16
gs
ds
sbb
fdivs
loop
mov
sbb
pop
and
incl
push
xor
ds
clc
jmp
ss
leave
iret
cmpsl
int
pop
inc
cli
in
sbb
pop
decl
lock
push
xchg
xor
stc
mov
loope
push
pop
leave
mov
jmp
pusha
lret
lret
out
mov
clc
push
addr16
push
mov
enter
les
xor
xchg
test
stc
aaa
add
decl
pusha
mov
sbb
sub
pop
scas
mov
decl
subb
fcoms
xchg
jecxz
mov
subb
leave
pop
pop
and
int
sbb
sti
scas
pushf
sbbl
gs
xor
dec
add
testl
lret
ja
pushf
inc
loop
mov
mov
xor
dec
push
push
imul
into
fwait
aas
mov
popa
push
inc
mov
mov
scas
adc
outsl
ficomps
push
in
push
popa
ret
sbb
leave
js
mov
roll
fistpll
mov
dec
dec
shlb
mov
stos
out
test
lock
cmp
lods
lret
add
movsl
shlb
pop
adcb
pop
add
xchg
rolb
sub
incl
mov
iret
xor
push
mov
push
mov
iret
mov
imul
jns
jg
pushf
push
cmp
jae
or
aaa
pusha
lahf
rorb
jno
mov
adcb
ljmp
clc
xchg
aam
inc
scas
sbb
cld
add
cmpsl
cmpsb
mov
mov
and
cmpsb
inc
sahf
lcall
sbb
cli
xchg
mov
mov
cmp
shrb
xchg
test
in
stos
jmp
sbb
fstl
iret
fstsw
je
add
ljmp
movsl
out
inc
les
lock
mov
push
mov
int3
addl
dec
lock
shll
push
and
dec
addr16
xor
popa
fisubs
xor
in
lret
pushf
insl
mov
mov
stos
lcall
incl
scas
or
add
loope
sbb
repz
repz
std
test
out
and
ljmp
aad
xchg
jno
dec
lea
adc
sub
mov
or
movsl
fidivrs
add
lret
nop
js
repnz
mov
ljmp
rcll
mov
nop
pushl
movsl
popf
test
xchg
fdivrp
ljmp
xor
mov
push
scas
pop
lret
daa
enter
stos
dec
cmp
repnz
xchg
xchg
imul
ljmp
xor
jmp
out
adc
jo
leave
sarb
in
mov
and
decl
adc
inc
addr16
insl
adc
xor
xchg
mov
std
and
lock
mov
lock
test
jg
sbb
test
mov
mov
xor
mov
inc
xorb
stc
mov
ret
add
leave
inc
pop
scas
jbe
pop
inc
stos
xor
std
imul
rorb
es
push
and
int3
das
cs
arpl
jp
imul
mov
jnp
subb
test
fwait
mov
or
into
jge
decl
pop
cmp
inc
sbb
ja
add
pushl
mov
daa
push
call
mov
jae
lcall
jmp
sub
les
pop
arpl
xor
loope
ljmp
dec
ja
mov
mov
das
sar
push
je
xchg
lock
adc
js
push
mov
jmp
sar
push
dec
negb
push
pop
jnp
xor
and
out
and
dec
int3
jae
sbb
in
std
inc
ljmp
ficompl
mov
rorb
push
xor
cmp
call
aad
call
les
mov
outsl
sub
push
cmpsb
gs
mov
xor
xchg
mov
dec
movsl
add
jle
xchg
push
xor
loopne
lcall
cmpsb
jecxz
push
adcb
push
push
iret
mov
jmp
scas
mov
mov
sub
and
add
aad
leave
inc
cmpsl
xchg
mov
shl
sbb
adc
out
aam
ja
cltd
inc
ficoms
hlt
mov
in
lock
mov
out
cmp
ljmp
and
es
rep
stos
inc
add
pop
pushf
jge
or
mov
incl
sub
cwtl
test
inc
in
and
sub
lods
frstor
push
decl
arpl
cmp
out
mov
inc
jbe
scas
inc
out
mov
decl
push
inc
add
out
imul
pusha
adc
push
push
cli
mov
negb
sbb
cli
lock
je
inc
test
lea
or
xor
sbb
ror
mov
daa
clc
pusha
pushl
std
mov
push
jge
add
xlat
lods
in
out
ds
lock
add
test
pop
lock
std
pop
pop
cmp
sbb
ficoml
mov
lea
inc
call
out
fwait
pop
pop
mov
into
outsl
mov
lock
mov
jb
inc
cmp
cwtl
in
and
xchg
sar
aaa
sub
sbb
rolb
mov
pushl
sarl
or
lea
mov
inc
dec
stos
movsl
leave
pop
sub
inc
punpckldq
mov
cmp
rorb
push
leave
pop
imul
dec
adc
cmp
jle
mov
lock
decl
jecxz
rorb
or
xor
fcmovb
test
in
push
sbb
call
ror
lret
pop
xor
fwait
xchg
jge
mov
test
inc
lds
mov
push
out
mov
movsb
out
leave
hlt
mov
inc
lcall
mov
in
fstl
cmpsb
xchg
dec
rcl
dec
faddl
cld
xchg
add
movsb
xlat
dec
rclb
dec
mov
add
pop
test
adc
push
or
add
pop
sbb
ud0
fcomip
dec
mov
ret
icebp
jbe
jbe
cmp
leave
cmpsb
insb
inc
jbe
mov
outsl
lcall
mov
es
out
lret
xchg
jb
outsl
shl
mov
pop
sbb
push
sub
incl
jle
test
mov
stos
mov
lods
pop
adc
or
pop
cmp
in
jmp
sti
pop
lahf
pushf
neg
ret
int3
aas
xor
outsb
repz
adc
sti
int
sti
outsb
fwait
lea
les
cmp
cmp
sbbl
jl
adc
mov
mov
std
cwtl
or
call
dec
mov
mov
mov
ljmp
or
jns
call
aaa
int
mov
sub
dec
je
mov
scas
fcoml
aaa
jnp
dec
aad
incl
and
jo
call
add
jns
jg
pop
ret
dec
xor
outsl
clc
loop
mov
jns
dec
sub
inc
ljmp
sbb
add
xchg
bound
or
pop
std
call
pop
repz
icebp
icebp
lret
sub
sub
push
push
adc
cmc
push
mov
sub
adcb
sbb
movsb
mov
sbb
dec
int
stc
repnz
push
clc
decl
je
xor
negl
inc
iret
and
or
adc
jmp
sbb
mov
cmp
call
fwait
push
lret
jg
dec
dec
ss
cmc
inc
outsl
jno
add
cwtl
pop
daa
dec
rolb
add
lock
mov
inc
or
sbb
xor
jg
pop
sar
test
clc
fisubs
in
adc
cwtl
jb
xchg
adc
pushl
rolb
jle
push
loope
mov
jmp
xchg
insl
fiaddl
cli
mov
pop
ljmp
movl
xlat
push
dec
jmp
push
lods
lret
and
test
jno
add
call
fs
insl
mov
fstl
stc
xor
mov
pop
pusha
jb
push
hlt
filds
mov
adc
aad
xor
call
ret
in
loope
cli
mov
ljmp
mov
icebp
data16
inc
cmp
sbb
dec
adc
pushl
adc
stos
mov
rolb
movsb
xor
jle
sbb
ja
arpl
lcall
mov
in
and
push
enter
cmpsb
in
and
in
push
pop
jmp
loope
add
bnd
cwtl
xchg
push
lret
pop
lock
lret
call
mov
mov
xchg
imul
pop
fs
clc
sub
jle
clc
push
push
dec
jae
sub
dec
sub
shll
xlat
pop
mov
test
pop
xor
dec
jae
repz
xor
std
inc
cmpsl
dec
imul
lds
cld
jp
push
into
rcll
and
sub
push
push
cli
cmp
mov
xor
stos
mov
and
add
cmp
in
jg
mov
scas
pop
jnp
pop
mov
aaa
fnstsw
shll
je
mov
decl
notrack
adc
and
sbb
ds
scas
adc
jmp
sub
xchg
daa
imul
sbb
loopne
jmp
incl
negb
fbstp
adc
sbb
mov
or
mov
mov
rorb
sub
aas
jns
mov
and
cli
push
cmp
dec
pop
jecxz
lret
pop
int
inc
das
and
in
push
movl
add
clc
jmp
sbbl
or
lcall
call
in
int
mov
or
cmp
xor
jno
jg
push
sub
push
lret
xchg
add
xlat
fbld
lock
mov
jg
xchg
and
pop
push
pop
aaa
and
rorl
out
nop
adc
repnz
mov
pop
mov
mov
xor
pushl
or
push
adc
rorb
sahf
xor
sbb
xchg
dec
add
hlt
mov
popa
std
clc
std
sahf
fcomip
push
mov
push
inc
shlb
xor
ds
mov
push
mov
jne
mov
adc
es
mov
or
fisttpll
push
in
aaa
cld
dec
jmp
hlt
mov
jl
cmp
cmp
sarl
cmp
fdivrl
fmull
pushl
in
pop
jmp
test
jb
mov
or
xchg
push
lret
push
aam
push
dec
rolb
jle
and
push
pushf
je
leave
and
dec
xchg
call
dec
push
fisttpl
xchg
rorl
jnp
lods
fstpl
hlt
out
mov
cmpsl
imul
jmp
movsb
ret
jg
push
loop
push
add
sahf
sbb
fistps
mov
xorb
ror
cli
and
jmp
or
aas
fldt
mov
xor
xor
push
sarb
mov
or
pushl
out
add
fsubrs
jle
lds
in
push
dec
xor
into
fistpll
out
fadds
ds
sbb
cmpsl
pop
xlat
jge
add
call
jl
and
mov
sub
sub
in
jp
nop
repz
enter
addr16
or
or
or
clc
xor
rcr
pop
mov
icebp
xlat
lcall
add
push
shr
shl
out
push
jmp
outsl
leave
adc
data16
test
jg
fstl
pop
push
inc
push
jbe
jecxz
imul
jne
pop
ret
inc
insb
xor
pusha
insb
movsl
mov
push
mov
dec
cltd
cli
push
sub
orb
incl
mov
jmp
cmp
aas
bound
lock
roll
cmpsb
out
push
jnp
enter
decl
jmp
sub
add
pop
fstpl
push
fwait
in
fidivl
jmp
imul
int3
in
nop
stc
fiadds
or
outsl
sub
rcll
inc
xor
inc
scas
rcrb
cmc
push
hlt
mov
and
mov
mov
jg
and
inc
mov
push
cmp
sub
cltd
push
outsl
jno
jmp
sbb
push
push
xchg
pusha
push
insb
inc
pusha
clc
cmc
pop
mov
mov
mov
dec
push
fnstsw
sbb
push
cmp
mov
xchg
js
push
push
jo
les
sbb
mov
push
sbb
sarb
idiv
ljmp
cli
pop
push
rclb
pop
xchg
add
sbbb
push
sub
ljmp
mov
dec
add
enter
sti
loopne
lret
punpcklwd
daa
cmp
pusha
or
hlt
mov
rcr
mov
loope
mov
rorl
addr16
push
fs
outsl
cli
lcall
xor
dec
pop
jp
adc
test
ja
pop
jle
and
cli
lcall
add
aas
xchg
fld
leave
fnstcw
gs
mov
stc
icebp
ljmp
mov
mov
xchg
out
and
pushf
push
pop
push
mov
call
add
jae
xchg
lahf
push
nop
es
pop
les
popa
pushf
and
incl
cs
mov
push
and
shll
std
dec
push
adc
xchg
bound
lret
mov
fimuls
sahf
test
xchg
ss
jle
stos
sub
ljmp
xlat
dec
inc
add
loop
push
xchg
test
sbb
js
push
pop
add
sub
jno
repz
xor
jns
rolb
test
lahf
and
jg
cmp
stos
aaa
imul
decl
cltd
sbb
std
rolb
xchg
cmp
or
sub
arpl
sub
std
push
push
stos
call
cld
movsl
xor
into
push
imull
xchg
inc
mov
fs
xchg
jmp
mov
mov
cli
sub
cmovno
or
cmpsb
jns
cwtl
cld
jae
lcall
scas
and
leave
test
mov
or
bound
mov
add
aaa
out
test
cmp
popf
jg
push
fists
sar
outsl
ljmp
aas
mov
pop
xor
mov
xor
repnz
loope
icebp
xchg
pop
adc
jmp
fnstcw
mov
push
stc
pushl
lock
xor
test
in
sti
outsb
add
scas
lock
push
sbb
and
pushl
outsb
dec
jle
popf
jle
mov
cmpsl
or
jb
sbb
jge
mov
mov
lcall
lcall
mov
mov
inc
mov
jnp
jecxz
adc
ror
ret
adc
pop
xchg
lcall
ds
mov
inc
jmp
bound
nop
cmpsl
stos
jb,pt
out
shl
test
leave
xor
clc
push
or
cmp
leave
push
pop
data16
stos
jmp
incl
scas
aaa
xor
popf
jbe
mov
inc
loope
popf
mov
aaa
sub
mov
pop
inc
jmp
push
aad
movsl
ds
mov
pop
mov
pop
push
mov
aad
ljmp
mov
pop
fstpl
enter
ss
or
in
dec
push
dec
mov
jg
cmp
lret
mov
cmp
fldenv
pushf
movsb
xchg
fildl
in
fistl
pop
dec
nop
fdivrl
lcall
sub
dec
test
pop
add
les
mov
incl
lods
push
pusha
bound
inc
addb
mov
pushl
cwtl
cli
and
and
xchg
add
cmp
sub
inc
lock
out
cmp
pushl
mov
mov
pslld
dec
nop
adc
in
test
and
call
jbe
daa
mov
les
mov
fcomps
into
test
or
pushl
dec
inc
mov
cs
sub
pop
stc
scas
add
lock
ljmp
sub
jne
mov
xor
stc
and
mov
inc
ficomps
shll
test
xor
cld
incl
push
outsl
xor
ret
out
lods
clc
sub
repnz
inc
adc
push
lcall
lahf
addr16
jg
mov
mov
push
mov
inc
inc
push
arpl
movsl
pusha
or
or
imul
jnp
mov
mov
fdivp
pmulhuw
push
pop
mov
adc
adc
fldenv
shll
xchg
aas
in
mov
and
jmp
jge
mov
incl
jmp
icebp
jmp
das
mov
xchg
push
loopne
xchg
test
sar
or
mov
mov
inc
loope
stc
test
outsb
jmp
cmpsl
pop
jg
mov
shl
sub
or
and
sbb
pop
addr16
mov
test
fidivs
dec
aaa
push
jmp
push
jns
mov
ljmp
hlt
call
mov
mov
ljmp
clc
push
pushf
imul
jns
sbb
sub
lods
loop
jmp
cltd
adcl
test
int3
mov
lcall
inc
pushf
jmp
bound
mov
arpl
int
decl
mov
icebp
test
or
pop
int3
ds
adc
rcll
jae
ljmp
fsubr
hlt
push
cli
ror
cmp
jecxz
rcrb
mulb
lods
jae
mov
pop
pusha
fldcw
or
jg
ljmp
cmp
jmp
and
push
test
pop
popa
sub
xchg
in
incl
pop
dec
in
mov
sbb
cmp
jne
nop
popf
mov
in
andl
inc
call
xlat
ja
scas
aam
sbb
mov
mov
xlat
aaa
dec
cmp
test
add
cltd
add
xor
pushl
mov
lock
pop
repz
jbe
inc
dec
mov
jmp
xor
sub
sahf
js
leave
sbb
jmp
mov
xchg
lea
push
test
or
movsl
movsb
xor
xor
dec
mov
jge
cmp
push
add
adc
mov
cmc
xchg
jae
cld
jmp
mov
ret
mov
inc
shlb
adc
jbe
sbb
je
jmp
gs
xor
stos
ficomps
cltd
dec
mov
lock
lahf
shrb
ror
jmp
pushl
std
cmc
lock
shll
sbb
int3
lds
cmp
dec
gs
inc
dec
and
test
imul
rcl
jnp
decl
movsb
ljmp
mov
mov
test
fldl
inc
push
enter
mov
std
faddl
frstor
shlb
push
adc
insb
aam
pushl
adc
pop
inc
inc
jnp
xchg
ljmp
imulb
mov
adc
mov
fsubp
scas
pop
dec
push
and
add
pop
sub
sti
pop
adc
jg
lods
decl
pop
dec
int
inc
add
sub
xchg
call
sub
repz
outsl
dec
inc
mov
lret
inc
sbb
adc
xchg
enter
jo
add
jg
ljmp
fs
xchg
outsl
inc
or
sarl
aad
aad
adc
pop
mov
push
fnstcw
push
pushl
or
inc
dec
cltd
add
aaa
mov
mov
ljmp
into
mov
sub
pop
pushf
cld
gs
xlat
clc
mov
mov
cmpsl
fistl
xchg
xchg
lcall
inc
sbb
test
ljmp
inc
sbb
aam
sbb
daa
out
jp
adc
dec
lods
cld
or
cmpsb
or
or
cmc
xchg
cmp
pop
or
pop
cld
pushl
rcr
mov
push
mov
setge
es
movsl
aam
call
dec
repnz
mov
enter
ss
pop
jnp
or
dec
and
std
sbb
cmpsb
dec
jb
or
pop
adc
adc
fisttpl
repnz
ljmp
inc
jmp
enter
sbb
adc
mov
mov
lcall
and
push
xorl
push
xor
cld
cmp
scas
mov
call
decl
test
or
mov
jp
call
jmp
adc
push
out
subb
cmpsb
addr16
mov
or
lcall
mov
in
in
outsl
and
xchg
mov
nop
daa
xchg
sub
and
inc
je
add
clc
jmp
ja
fldcw
in
push
cli
dec
ret
push
push
js
mov
sub
inc
cli
ficoml
mov
repz
mov
sbb
dec
add
mov
outsb
xor
or
and
scas
dec
imull
push
push
and
ud0
ljmp
mov
cld
call
xchg
sbb
cmp
pop
push
pop
push
or
lcall
pop
les
mov
iret
xchg
das
adc
inc
or
jno
sbbl
movsl
mov
lds
cs
adc
lret
mov
cmpsb
sahf
nop
stc
repnz
clc
pushl
inc
jmp
mul
push
or
mov
cltd
mov
jo
mov
dec
or
incl
je
idivb
pop
fwait
test
mov
push
inc
into
mov
call
inc
in
push
jge
push
inc
inc
xor
add
ljmp
pop
test
pop
sbb
pop
adc
sbb
fistps
cmp
in
xorl
loopne
add
or
pushf
repz
push
fwait
push
ljmp
outsb
fidivrs
inc
push
pushl
jae
ret
lea
aad
jo
sub
jnp
loop
outsl
xchg
mov
in
mov
fnsave
cli
xor
cmp
pushf
and
push
aad
add
mov
and
incl
add
shl
clc
clc
add
repnz
decl
mov
ret
bound
repz
xor
sbb
mov
ljmp
lods
lods
lds
xor
popa
mov
std
adc
out
xchg
push
call
push
addl
jo
cli
loopne
icebp
ljmp
jp
inc
add
mov
xor
lcall
xchg
jmp
mov
cmp
pop
adc
imul
out
dec
ret
daa
cld
pop
mov
ret
call
lea
inc
xchg
push
sbb
adc
mov
and
aad
xchg
aad
push
sub
fbld
lahf
mov
ljmp
test
in
vpsrlq
mov
lcall
les
pop
and
xor
test
aaa
loop
repz
pop
call
out
jmp
adc
cmpsb
iret
les
cmpsl
mov
xlat
xchg
inc
lahf
incb
sbbb
dec
movsl
dec
in
lods
sahf
push
loop
xchg
xlat
xchg
or
dec
lcall
adc
test
and
pop
es
pop
clc
push
mov
test
pop
sti
aas
xlat
cmp
mov
push
lcall
jg
shrb
lcall
adc
cmp
pop
mov
loop
mov
popa
push
mov
lcall
in
lods
jge
mov
pop
fcmovne
mov
jbe
pop
std
test
in
aam
inc
mov
add
loop
dec
sub
decb
in
dec
popa
pop
inc
jl
aam
sti
mov
ljmp
data16
mov
xor
movb
push
xor
pop
fs
out
scas
xlat
cld
aad
fsubs
lods
and
fmul
movsl
mov
cmp
addl
xchg
loopne
push
pop
jmp
mov
push
mov
fsubrl
mov
mov
jmp
mov
imul
loopne
out
fwait
sbb
pop
adc
fidivrs
mov
jbe
mov
cs
call
pop
jbe
call
in
add
or
mov
and
ljmp
cli
movd
repnz
mov
pop
punpckhbw
cmpl
adc
cld
and
push
push
bound
hlt
xchg
pop
cmpsl
push
sahf
xchg
loopne
or
or
push
push
mov
loop
and
jb
push
sbb
adc
outsb
out
mov
popf
add
pop
fcmovb
sbb
cld
cmc
cmp
cmp
fnstcw
nop
rorl
pavgb
mov
test
inc
dec
stc
jl
sub
sub
lcall
mov
jb
dec
dec
pop
loopne
jl
mov
scas
xor
dec
cmp
stos
insb
mov
cmp
mov
dec
sbb
cwtl
rcrb
pushl
mov
pop
dec
add
pop
lds
xchg
stos
popa
mov
loope
clc
rclb
pop
loopne
insb
fwait
je
mov
inc
and
mov
and
mov
call
or
mov
stos
outsl
and
fwait
xor
mov
or
dec
or
mov
int
add
sbb
pusha
push
test
sbb
add
and
scas
test
fdivs
jbe
popa
sbbb
dec
insb
lods
jns
sub
cld
lcall
aam
je
aam
xchg
test
add
xchg
cwtl
std
lcall
dec
insl
cmp
call
cmp
es
pop
pop
dec
pop
cld
mov
dec
ret
cwtl
pushf
dec
xor
jg
sbbb
shll
inc
jg
jbe
add
pop
push
call
mov
in
shrl
lods
push
clc
adc
sub
mov
je
js
jg
mov
mov
pop
lret
dec
orl
cmpsb
add
cmpsb
test
jmp
jne
pop
loopne
iret
sub
cwtl
jl
adc
jmp
xor
sbb
or
fsubrl
incl
out
or
or
mov
mov
mov
mov
outsl
sub
jmp
xchg
jecxz
mov
mov
sbb
loop
mov
fsubrs
aam
aaa
xor
in
scas
ljmp
shlb
lret
mov
push
mov
ds
pop
fadds
call
add
xor
cld
jmp
add
es
flds
out
jg
xor
shl
jns
je
mov
xor
and
sub
out
sub
mov
movsl
pop
lret
call
jg
test
sub
arpl
cmpsb
hlt
mov
pop
lahf
insl
jo
stc
aaa
std
sub
rcrl
movsl
cmc
pushl
mov
mov
movsl
or
mov
cmp
mov
fisttpl
jl
decl
mov
stc
mov
arpl
mov
or
inc
std
ljmp
jne
int3
jnp
rolb
pop
pop
sub
mov
dec
nop
ret
popf
sti
sub
lahf
into
imul
fucomip
aad
push
cmp
xchg
xor
arpl
add
frstor
mov
ja
mov
call
jmp
xchg
fcom
mov
ret
sub
stc
or
jns
pop
rcrb
subl
sti
dec
xor
sub
sbb
sbb
mov
es
push
mov
xor
in
lods
in
lcall
push
ret
call
push
dec
movsb
loopne
add
aas
pop
arpl
lcall
mul
dec
cli
jo
subb
aam
dec
dec
js
xor
idivb
mov
dec
loopne
decl
add
push
cmp
cmp
leave
adc
mov
sbb
dec
hlt
mov
scas
mov
jmp
les
jp
mov
dec
mov
lock
movsb
push
outsl
stos
and
cmp
ds
outsb
cli
push
fistpll
aad
aas
jmp
les
fwait
sbb
loop
jg
or
out
mov
and
mov
mov
xor
xor
in
cmp
or
pop
lsl
bound
xor
out
sti
pop
cmp
mov
dec
fwait
adc
xor
jns
jmp
outsb
push
push
push
dec
sub
pop
fistps
xchg
mov
decl
loopne
shr
lret
adcb
les
testl
sti
aaa
sub
dec
je
popf
stos
pop
test
xchg
shl
scas
jnp
incl
cmp
pop
push
pusha
hlt
stos
jo
and
jecxz
cltd
jecxz
mov
lds
jne
mov
pushl
daa
sub
sbb
loop
or
dec
xlat
out
lea
cmpsb
lea
lock
lcall
test
jecxz
mov
inc
adcl
repz
dec
inc
push
decl
pop
imull
add
lods
ljmp
and
cwtl
lods
call
js
and
insl
adc
test
jl
shld
in
mov
lcall
sbb
clc
call
test
xchg
pop
inc
push
aam
data16
mov
push
mov
stos
sub
scas
jle
je
jmp
add
test
stos
rep
ljmp
pusha
lods
sbb
les
cmp
cmp
pop
insl
test
jne
push
decl
sbb
xor
push
mov
aas
mov
lods
and
or
gs
cmp
dec
adcl
ret
stos
out
lret
scas
xchg
push
fcmovnu
xchg
stc
les
xor
decl
dec
jb
mov
or
dec
add
add
arpl
jle
ret
pop
addr16
lcall
xchg
loopne
mov
jmp
test
mov
inc
je
hlt
jno
push
jecxz
mov
test
push
nop
push
insl
imul
lcall
jecxz
or
scas
fdiv
inc
iret
jno
insl
dec
imul
pop
int3
in
pop
js
in
mov
push
sbb
sbb
lcall
xchg
pop
sub
and
cs
inc
pop
stos
sub
and
out
push
pop
cs
lcall
ljmp
inc
insl
imul
mov
cmp
pushf
in
addl
sub
loop
mov
and
xchg
mov
dec
push
jg
mov
stc
cli
jl
fmull
es
mov
imul
sti
add
pusha
sar
incl
jge
fldt
push
fucomi
or
ja
cmpsb
test
leave
in
arpl
mov
inc
xor
nop
sub
push
scas
in
lock
cmp
sub
jg
aas
mov
or
imul
cmpsb
clc
mov
xchg
loopne
xor
pop
jecxz
ud0
test
adc
lods
cmp
xchg
cmc
pushl
jbe
mov
lcall
sahf
stos
jl
lock
xchg
stos
add
fisttps
sbb
imul
cltd
mov
or
dec
movsb
inc
adc
subl
shrb
sub
insl
js
xchg
stos
push
jecxz
lock
adc
hlt
or
mov
cld
test
aad
decl
rcrb
aad
mov
lcall
sub
flds
rclb
pop
or
xor
dec
push
mov
movsl
test
add
cmp
aam
pushl
cli
or
aaa
inc
push
push
movsl
lret
cmp
mov
pop
cld
incl
cmp
xchg
push
icebp
loop
lods
sbb
add
xor
xchg
mov
shrl
jne
or
incl
mov
inc
jnp
push
dec
add
lea
jno
add
add
xor
mov
shrb
jmp
das
inc
daa
sbb
or
and
mov
sub
cmp
mov
pop
jb
pop
vshufpd
aas
loope
fisttpl
in
dec
cs
cmpsb
cmpsl
outsl
shlb
mov
pop
sub
jns
mov
mov
mov
lds
lods
decl
movsb
clc
jnp
mov
pushf
xchg
inc
ss
inc
mov
inc
movsl
cltd
ret
inc
shr
jb
pop
adcl
push
xchg
inc
push
shrl
fnstenv
andb
cmp
sub
lret
xchg
stos
inc
fxch
pop
jo
addr16
call
fistpl
test
pop
sarl
loop
push
shr
xor
sub
outsl
jmp
and
jg
sub
mov
mov
inc
incl
out
pop
in
inc
dec
lahf
sti
push
stc
mov
xchg
pop
cmp
and
fidivl
push
push
inc
jg
jbe
cmc
mov
leave
mov
ret
push
xchg
rcll
mov
enter
jns
adc
cmc
js
jl
sysexit
in
out
lds
das
lret
mov
mov
stc
int
sub
sarl
adc
jle
daa
jg
xor
xchg
xchg
ficoms
sbb
xlat
pop
dec
mov
flds
cmp
pushl
mov
push
sbb
arpl
jmp
shr
mov
jbe
loopne
or
movsl
testl
jp
enter
mov
sbb
movsb
lret
push
dec
push
fldcw
push
mov
decl
stos
ljmp
jo
hlt
scas
mov
lds
mov
std
sub
pushf
sub
sbb
test
push
insb
jb
fsubs
outsb
cmpsl
and
jmp
pop
sub
xor
pop
sbb
xor
out
lret
xor
rcl
jb
data16
lods
decl
jmp
es
jmp
inc
push
or
jmp
cmp
loop
rolb
popa
or
cmp
repz
enter
pop
mov
inc
cmp
xor
push
cmp
cmp
jmp
mov
pop
sbb
jmp
scas
ret
adc
andb
jle
cmp
mov
cmp
and
jg
fcomip
fnstcw
add
or
pop
mov
rol
mov
jmp
into
jg
shll
inc
and
inc
add
mov
decl
out
mov
xchg
sti
in
std
shll
jbe
outsl
js
out
inc
ds
jmp
rcl
dec
jg
mov
inc
dec
fdivp
push
or
inc
push
mov
fidivrl
mov
daa
shrb
out
push
pop
in
dec
mov
filds
scas
push
pop
fwait
cs
sbb
mov
xor
sub
imul
aas
mov
jg
jmp
aad
or
sub
cmc
gs
shll
call
call
cltd
jo
jns,pt
test
roll
or
sub
mov
and
jg
mov
mov
fs
sub
mov
push
jl
cs
cmp
pusha
push
out
sbb
ds
rcll
test
xchg
scas
clc
call
addr16
fs
sub
insb
mov
imul
jo
stc
pusha
repz
aaa
cld
push
mov
cmp
lcall
jnp
insl
pop
pop
or
cmp
ljmp
fidivs
movlhps
cmp
push
xorl
dec
and
test
pop
sbbl
sbb
ja,pn
inc
dec
loope
in
jae
sub
jns
imull
xchg
scas
mov
call
mov
mov
dec
insl
add
pop
pop
cmpsl
xchg
add
sub
mov
outsl
push
and
stc
pop
push
les
fwait
cmp
lret
cld
js
jecxz
push
xor
fwait
xchg
dec
mov
cmp
xor
lock
lcall
xor
adc
aam
pop
push
jg
in
lods
ret
idivb
lret
popa
pop
mov
sub
insl
xchg
sahf
cli
out
push
mov
cmp
mov
push
pop
jmp
stc
dec
jge
inc
aad
js
add
jnp
loop
add
xlat
push
cmp
pushf
in
lcall
mov
mov
ja
dec
mov
aas
and
test
add
sub
nop
or
in
sub
mov
mov
cmp
fs
icebp
push
cmp
inc
mov
sub
loop
mov
loopne
mov
jmp
gs
add
outsb
call
les
js
mov
jbe
lods
rcr
scas
cli
decl
setae
adc
pushf
out
loopne
mov
inc
add
call
fdecstp
and
adc
xchg
fcos
xchg
sbb
in
mov
add
test
pop
push
aam
out
xor
pop
lcall
xchg
pusha
pop
push
ficompl
lcall
pop
loope
decl
add
lods
fwait
sti
push
loop
int
mov
xchg
loopne
scas
pop
lcall
or
push
add
mov
sbbb
test
ljmp
mov
pop
fsubs
pop
mov
repz
jnp
xchg
not
xchg
popf
decl
aad
sti
mov
ja
mov
cmp
fists
lcall
ret
mov
ljmp
inc
xor
rclb
pusha
or
jg
xchg
push
scas
dec
jb,pt
sbb
shll
mov
movl
pop
cmp
jns
das
shlb
mov
pushf
inc
add
lahf
xchg
sbb
lea
dec
add
pop
jno
ds
jl
push
push
ljmp
loop
xchg
or
adc
je
adc
dec
push
orl
mov
imul
xlat
decl
incl
mov
pop
pop
jg
jp
in
xor
pop
xchg
push
mov
adc
jmp
adc
mov
je
shlb
mov
jl
xlat
cmpsl
stos
mov
call
add
loope
jge
mov
jo
mov
ficoms
jmp
xor
mov
filds
push
out
gs
cmc
repnz
jge
pop
xor
stos
fcompl
and
fists
pop
mov
adc
addl
and
lods
or
stos
dec
cli
loope
jae
test
cmp
roll
lret
test
movsb
decl
xor
xlat
inc
pop
dec
in
test
insl
fsubl
imul
out
ret
jg
inc
lahf
sbb
fimull
push
sub
inc
fiaddl
loop
call
nop
push
stc
frstor
call
inc
adc
dec
add
movsb
cmp
ljmp
jl
sahf
pusha
pop
adc
int
cmove
mov
imul
jmp
pop
pop
dec
adc
mov
mov
sbbl
shlb
mov
mov
clc
xor
xchg
mov
addr16
out
call
and
les
jmp
and
or
fbstp
cltd
and
es
sbb
movsb
mov
cmpsl
sti
mov
xchg
inc
xor
cltd
mov
xchg
pop
adc
decl
add
arpl
fnstcw
fcompl
mov
cmpsl
pop
inc
mov
imul
jmp
int3
cmpsb
movsb
mov
xchg
scas
pop
or
fldl
pushl
idivb
jg
ret
mov
js
imul
adc
jb
xor
and
dec
lock
sub
in
xor
pop
ret
jle
xor
adc
ds
push
fwait
repnz
push
cld
mov
inc
mov
xorb
mov
cwtl
add
testb
jl
mov
aas
push
aam
call
mov
orl
movsl
add
outsl
out
fstpt
cltd
movsb
inc
into
gs
dec
aad
test
ljmp
mov
mov
dec
dec
outsb
add
xchg
mov
ja
mov
or
jnp
push
repnz
xchg
push
decl
and
jge
call
pop
test
lcall
cli
repnz
mov
scas
inc
sub
jb
imul
mov
mov
jne
inc
mov
aad
jmp
insb
jle
xchg
sarb
dec
ljmp
shlb
mov
stc
or
lea
test
out
decl
fisttps
in
pop
lods
adc
rcll
push
pop
add
xchg
lahf
nop
or
aad
mov
ljmp
pop
daa
sbb
loope
mov
mov
jle
es
cmp
psraw
fldcw
outsb
dec
xchg
cmp
mov
mov
sbb
sbb
adc
mov
mov
adc
sub
cs
cmpsl
jo
ljmp
iret
mov
ss
xchg
jae
in
cli
rclb
push
xchg
popf
scas
in
pop
sub
and
jg
lahf
scas
neg
int3
push
adc
adc
ret
dec
jnp
jle
scas
pop
pop
jae
adc
ds
decl
xor
sub
jg
int3
iret
mov
lcall
sub
daa
lahf
mov
enter
ljmp
push
jge,pt
pushf
pop
pop
loopne
xchg
insb
pushf
jne
fisubs
push
jge
dec
xor
add
jmp
orb
lcall
add
adc
shr
pop
jo
push
xchg
push
jg
dec
sar
jmp
in
int3
movsb
sbb
push
dec
mov
sub
inc
aas
push
mov
pop
scas
gs
pop
pop
mov
lcall
fwait
sub
push
inc
cmp
jge
mov
mov
cwtl
shr
cltd
dec
jg
insb
daa
sbb
jne
cs
push
cmp
adc
ljmp
cmc
mov
xor
cs
mov
aaa
cld
addr16
dec
shll
xchg
mov
jl
andb
ds
stc
divb
cmp
ljmp
push
lods
xchg
xchg
int
mov
test
fcmovbe
pop
xlat
xor
push
mov
pushl
sbb
mov
dec
mov
xchg
push
mov
leave
cld
out
and
rclb
call
les
pusha
xchg
pop
mov
int
mov
es
dec
adcb
idiv
sub
aas
xchg
ljmp
push
pop
mov
pop
mov
push
xlat
mov
fcoml
inc
push
cmp
push
mov
ljmp
adc
mov
aad
adc
push
aam
or
shrb
sbb
inc
push
popf
sub
movsb
leave
nop
push
adc
aas
jb
push
xor
cmp
mov
ret
fnstenv
push
xchg
out
jbe
insl
cli
adc
std
lea
or
js
add
jns
xchg
sahf
cmp
movsb
inc
out
adc
push
in
xchg
mov
adc
and
loop
inc
loop
ja
jmp
sub
add
shr
push
clc
mov
shll
jmp
mov
cli
push
adc
fwait
xchg
pop
sbb
add
jle
mov
std
cmp
loop
iret
adcb
stos
sbb
jge
movups
movsl
jl
or
decl
fistpl
icebp
mov
aad
adc
push
mov
xchg
dec
test
pop
jnp
sar
mov
aaa
push
sahf
fwait
lods
xchg
xor
out
mov
jg
inc
sbb
incl
lcall
das
adc
mov
mov
jo
cmc
scas
clc
lcall
movsb
out
pop
icebp
stos
and
mov
xor
lds
ds
es
lcall
cmc
popa
add
add
sbb
xchg
inc
sbb
jmp
add
push
js
dec
inc
xor
test
scas
cmpl
add
hlt
adc
push
add
jbe
ja
pop
fwait
push
fdivrp
xchg
mov
je
stc
push
cltd
pop
sub
jg
fmull
outsb
mov
push
rol
xlat
inc
mov
mov
cld
cmp
ljmp
in
lret
sbb
mov
pop
push
cmp
sbb
das
pop
jnp
incl
pop
fptan
xchg
in
aam
ss
mov
lret
stc
mov
das
cmp
jmp
xor
imul
ss
loope
mov
adc
and
fdiv
sub
ficompl
dec
cmp
lcall
jg
fcmovbe
pop
sub
cmp
les
orl
aas
inc
insb
sbb
mov
jbe
sub
sar
xor
in
cmp
adc
sub
mov
in
inc
xlat
xchg
sub
dec
out
ja
add
outsb
outsl
jmp
lahf
out
mov
jnp
sub
push
push
fstps
lcall
call
push
aas
inc
in
lret
mov
adc
lahf
les
loopne
pop
or
mov
out
fsub
int
into
xor
mov
dec
arpl
insl
les
lcall
and
push
pushl
push
xchg
inc
fisttpl
out
cltd
dec
stc
cmp
xor
lcall
divl
sti
jl
lret
stos
cmc
cmp
loope
lcall
pop
loop
fisttps
in
adc
stc
pop
cmp
add
xlat
push
fiaddl
add
test
xorl
repz
cmp
nop
frstor
xchg
popl
push
jecxz
cli
mov
mov
test
and
add
filds
mov
push
push
cli
ljmp
jbe
mov
imul
lcall
call
jb
sahf
stos
sbb
dec
imul
js
or
ljmp
lahf
clc
cmpsb
cmp
out
jl
add
xchg
add
scas
pushf
mov
outsl
mov
stos
mov
dec
enter
jns
pushl
es
or
repnz
fsubl
cmp
aas
add
inc
mov
mov
mov
stos
xor
ds
les
adc
addr16
jnp
cmp
dec
outsb
push
cmp
and
lods
add
orl
das
mov
lret
and
ds
decl
imul
outsl
cld
or
scas
inc
and
clc
lea
dec
clc
ljmp
mov
icebp
mov
cmp
lahf
imul
pop
inc
cmp
or
das
or
mov
pop
lret
ret
dec
or
lock
dec
ss
dec
mov
dec
sub
ljmp
push
jg
xor
test
imul
jbe
icebp
pushl
sti
push
push
and
sti
pop
fstpl
dec
data16
jmp
int3
shlb
inc
enter
jne
mov
fiaddl
aas
xor
ret
sti
das
sbbl
imul
adc
movsb
sbb
xchg
dec
inc
icebp
call
mov
fwait
push
inc
mov
stc
andl
lcall
lods
fwait
jne
and
and
mov
call
lahf
lahf
sarb
insl
pop
lods
sarb
fists
outsb
adc
decb
cmpsb
neg
dec
inc
push
jmp
cld
outsl
inc
negl
and
xor
jo
out
les
adc
ss
sti
xchg
lahf
ds
mov
push
sti
sbb
xchg
push
sarl
xor
mov
faddl
test
aad
bound
es
mov
sar
sarb
jno
aam
sub
nop
lahf
adc
ss
inc
adc
xlat
dec
or
lock
mov
xchg
push
ds
sbb
jnp,pn
add
lds
and
cld
cmp
pushf
cmpsl
nop
ljmp
popf
inc
in
clc
xor
cmpsb
push
pop
jl
stos
imull
icebp
jg
sub
cmc
or
cmp
sti
mov
incl
insl
adc
sub
fimull
arpl
push
ljmp
sub
xchg
pop
leave
ret
mov
push
decl
sub
bnd
push
mov
sti
fadds
adc
inc
cld
iret
fnstcw
fiaddl
repz
push
fs
cmp
inc
leave
enter
pop
movsb
mov
mov
or
jno
pop
inc
data16
lcall
mov
add
or
loope
or
mov
mov
fildll
scas
jae
inc
pop
dec
push
mov
rcll
sub
fsubrs
mov
movb
cmp
add
call
add
cmp
pop
xorb
fcomip
jg
push
jecxz
cwtl
sbb
mov
cmp
test
insb
cld
add
mov
push
in
testl
lcall
cmp
imul
inc
add
test
cwtl
pop
mov
and
jmp
mov
mov
push
mov
xor
movsl
data16
and
adc
js
mov
ds
jnp
mov
jmp
push
push
jle
or
ss
call
inc
insl
xor
out
cli
fisttpll
jns
jecxz
add
mov
clc
sub
pop
loope
mov
sub
mov
and
test
cwtl
xchg
call
sub
mov
daa
mov
imul
push
es
lcall
add
dec
and
in
push
out
out
idiv
call
sbb
rol
jecxz
mov
sarb
push
notb
push
ss
popa
sbb
xchg
ljmp
mov
pop
in
movsb
cs
adc
jbe
pop
mov
int3
call
cli
mov
test
cmp
push
mov
mov
push
in
add
decl
jbe
ds
fsubr
popl
xchg
or
push
jmp
jmp
ljmp
adc
and
xor
test
mov
sbb
ljmp
leave
test
ret
add
mov
dec
push
iret
pop
insl
repnz
xor
xor
ljmp
xchg
js
neg
orb
pusha
pop
adc
xchg
jbe
jnp
cwtl
fcomip
push
mov
aas
aaa
ds
xchg
fnstsw
jge
xor
outsl
dec
pop
mov
dec
lcall
les
add
push
pop
jp
loop
iret
and
push
cmp
mov
cltd
cltd
adc
push
adc
sar
jb
or
pop
push
fistpll
and
inc
pop
mov
sub
push
jg
scas
addr16
xchg
sbb
ror
jg
stc
outsb
pop
incb
fdivs
inc
int3
lcall
sbb
cli
adc
add
xchg
mov
shlb
push
shll
and
in
sub
dec
pop
mov
dec
or
dec
adc
sti
in
insb
int3
cmp
fwait
xchg
xchg
mov
imul
inc
out
sbb
adc
mov
ljmp
push
clc
xor
ljmp
jns
inc
xor
jmp
adc
xor
sbbb
mov
pushf
icebp
push
movsl
push
push
cmp
loopne
ljmp
dec
fs
sbbb
lret
jecxz
dec
mov
inc
scas
or
cmp
es
xchg
or
jo
ret
or
in
jl
inc
jg
mov
jecxz
mov
or
mov
cmp
fimull
cld
xchg
mov
mov
mov
clc
or
ja
decl
add
test
jp
inc
lahf
mov
pop
cmp
cmp
and
repnz
ja
ljmp
cli
fcmovbe
repnz
cmc
or
mov
jns
fsubrs
fcoms
mov
lahf
outsl
clc
jmp
and
push
xchg
inc
ror
add
rcrl
xchg
and
xchg
or
lcall
enter
adc
out
mov
cld
das
data16
mov
push
xchg
incl
sti
out
aam
pop
out
sbb
nop
xchg
xlat
and
lods
lret
loop
fs
arpl
out
cli
ja
std
int
cli
aad
inc
fnstsw
cmpsl
push
mov
loope
test
lds
stc
dec
mov
outsb
xchg
or
out
les
pushl
pop
mov
sbb
cmp
lods
inc
xor
clc
je
std
dec
out
jmp
fcomip
lcall
pop
rcll
bound
mov
sbbl
in
mov
ds
xchg
mov
aad
stc
sbb
imulb
dec
xchg
ds
call
cld
inc
inc
test
fidivl
xorb
mov
pushf
divl
addr16
pop
push
and
cld
push
das
xor
out
mov
inc
mov
add
inc
add
addl
in
lcall
out
rorl
js
push
data16
testl
or
push
jp
add
push
cmpsl
decl
je
scas
dec
fldl
sub
nop
push
scas
es
ret
lcall
push
inc
add
sbb
aam
sysenter
movsl
fldenv
sarb
jbe
mov
call
in
sbb
or
add
pop
test
gs
fs
std
or
hlt
jmp
in
jb
hlt
sub
xor
dec
sub
dec
jns
cltd
aaa
out
andb
push
push
sbb
lcall
pop
inc
dec
lfs
lods
jg
fwait
xor
dec
push
add
or
pop
cmpsl
int3
cmp
ljmp
jns
xchg
and
push
add
sbb
fld
add
xchg
push
incl
call
iret
mov
cmp
cmpsb
inc
jns
call
mov
and
incl
push
push
or
mov
in
jbe
and
aaa
mov
movsl
pop
sahf
bound
pop
decl
mov
xor
out
sub
jg
movsl
stc
cmp
inc
inc
es
inc
mov
nop
pop
xchg
je
push
imul
add
pop
fdivrs
mov
mov
push
scas
mov
mov
xchg
daa
jecxz
outsl
ret
mov
push
insb
mov
jae
mov
fstpl
mov
pushl
or
std
ja
nop
and
imul
jmp
mov
and
cmp
xor
inc
mov
rcrb
inc
sbb
sub
xlat
fcos
mov
push
btc
fs
fisubl
xor
jmp
add
lcall
mov
push
jl
inc
mov
fisttpll
ret
lcall
pop
lea
xchg
inc
int3
imul
iret
xchg
ljmp
insb
lcall
inc
cli
mov
mov
pop
gs
inc
ljmp
cmp
ljmp
add
xor
scas
or
pop
jle
iret
lahf
sub
cld
push
xchg
xor
pop
hlt
fdivrl
out
lods
pop
cmpsl
in
push
cli
push
mov
push
dec
cmp
ljmp
adc
enter
imul
aas
data16
outsl
pop
adc
imul
push
lds
pop
rorb
mov
mov
mov
push
popa
mov
adc
sub
decl
push
int
fs
leave
add
inc
adc
inc
fisttps
mov
cmp
sbb
push
push
into
rolb
filds
cld
decl
add
sub
rcrb
add
cs
cmp
sbb
lods
call
test
mov
mov
mov
hlt
mov
lock
decl
xor
inc
and
data16
fmul
fsts
and
call
xlat
sahf
ljmp
xor
push
test
mov
jae
sarl
push
push
jg,pn
incl
push
cmp
shl
aam
jmp
jge
das
jno
jge
cli
mov
mov
push
stos
shrl
dec
adc
push
js
mov
imul
xchg
mov
mov
lcall
push
jg
pop
sbb
es
lea
or
xor
lcall
adc
jbe
lods
clc
mov
fdivrs
cmp
ret
arpl
inc
pop
dec
cld
mov
cmpb
lret
push
out
pop
adcl
shlb
call
xor
xor
pop
sub
jne
mov
daa
mov
adc
ljmp
push
pop
jle
cmpsb
stos
repnz
dec
cli
push
mov
jnp
mov
add
sub
mov
cmp
and
testb
sbb
mov
sbb
jg
mov
addr16
push
mov
jmp
enter
pop
mov
cmpb
cmp
jmp
int3
mov
sbb
std
push
sbb
inc
pandn
jno
cmp
jmp
fisttpl
adc
imulb
pusha
jnp
mov
cld
and
jmp
in
cmp
es
rcll
xor
xor
mov
das
cli
decl
pop
pop
shll
scas
jb
repnz
icebp
or
arpl
rorl
decl
pop
or
repnz
jp
js
mov
mov
decl
dec
push
inc
stc
mov
sub
lods
jbe
inc
pop
mov
movb
push
mov
add
jmp
xor
pop
test
cmpsb
pop
jp
rol
aad
xor
jle
adc
fwait
pushf
je
test
cmpsl
xchg
rcrb
xchg
and
dec
loope
lret
les
push
cmp
adc
fcomip
incl
jnp
pop
xchg
pop
add
test
rclb
adc
ljmp
mov
xchg
sbbb
mov
xor
pushl
hlt
cmc
mov
imull
scas
std
and
xchg
pop
adc
xor
decl
push
lahf
scas
sahf
cwtl
and
fldcw
hlt
or
mov
xchg
fisttps
push
mov
jae
mov
cltd
in
pop
fldcw
sub
call
in
out
push
movsb
out
push
pop
adc
lods
xor
or
xchg
push
cld
aaa
std
lcall
loop
mov
mov
cmp
out
and
mov
xor
incl
push
outsb
out
aam
push
cwtl
xor
sar
dec
jge
mov
insl
mov
jno
fwait
ss
call
cmp
pop
aam
repnz
cld
mov
adc
daa
ljmp
loop
pop
add
jmp
out
adc
jnp
inc
and
mov
imul
out
decl
add
aas
sti
popa
test
adc
loop
sbb
in
sub
call
dec
or
movsb
or
jle
roll
mov
mov
xor
push
ljmp
jp
fldt
sarb
pop
filds
nop
or
and
pushl
das
les
ret
shrl
push
call
icebp
andl
ljmp
outsl
sub
dec
sbb
push
mov
shr
insl
scas
popf
sub
or
jge
jb
adc
jecxz
mov
cmp
push
gs
jmp
sarl
fmull
pop
testl
in
xor
inc
jg
ljmp
mov
or
mov
pop
leave
dec
iret
mov
into
xor
pushl
add
cmp
or
sub
jl
inc
lahf
outsb
ret
mov
push
fdivrl
inc
arpl
outsb
out
ljmp
push
aas
test
pusha
or
dec
push
loop
clc
fs
je
sbb
adc
fisttps
sub
or
test
push
or
xchg
mov
dec
push
adc
add
scas
cwtl
xor
and
or
aaa
or
xchg
mov
out
sub
push
cmc
mov
mov
lock
into
lahf
xchg
aad
inc
xor
and
and
repz
repz
ja
mov
sub
test
push
dec
sub
test
std
aad
and
mov
incl
pop
js
jo
cmpsb
mov
mov
pop
push
and
add
sbb
pusha
mov
lcall
or
push
movsb
mov
cmc
push
cmc
filds
sar
dec
xor
push
jp
mov
ret
fsubrl
loop,pt
jg
pop
xchg
call
roll
mov
adc
outsw
sbb
divb
popf
hlt
mov
insb
cli
pop
mov
subb
or
lahf
aaa
dec
sbb
loopne
lcall
loope
inc
cwtl
jae
mov
movsl
arpl
in
push
out
xchg
cld
loop
int3
in
pop
lret
cli
aad
push
jae
cmp
cmp
sbb
push
adc
into
cwtl
dec
sar
jmp
mov
adc
inc
cvttps2pi
test
lcall
decl
xor
jge
out
insb
add
xor
sub
fldt
test
jl
imul
mov
add
jmp
adc
lret
mov
mov
and
std
les
nop
shrl
scas
xor
sub
pushl
sbb
aas
int3
mov
jge
sahf
jp
out
add
iret
pop
sar
sub
pop
ljmp
mov
das
fcomps
mov
sbb
sub
jnp
mov
shll
incl
icebp
pop
ds
std
sub
sbb
lahf
ficoml
push
dec
xor
scas
movntq
scas
mov
inc
in
ljmp
sar
test
sahf
dec
shl
outsb
insl
outsb
lcall
cmp
jb
inc
mov
and
push
push
mulb
js
bound
test
lods
test
mov
por
pop
dec
or
les
data16
push
loopne
dec
popl
outsb
xchg
mov
loope
mov
sub
mov
mov
jg
add
dec
sub
incl
mov
adc
mov
data16
repnz
cmp
fidivs
push
dec
and
incl
icebp
dec
jnp
dec
sub
sbb
dec
fmull
fistl
cmc
dec
push
fdivr
mov
ret
pop
dec
xor
fs
out
out
mov
jae
push
div
negb
std
call
adc
test
add
adc
aam
sti
scas
xchg
adc
aad
fs
sbb
push
push
jecxz
insl
mov
xchg
mov
dec
adc
hlt
cmpsl
push
cmp
call
adc
adc
xchg
pop
or
incl
xchg
adc
jge
xor
movsl
aam
dec
mov
xchg
mov
mov
xchg
inc
jns
pop
pop
loop
call
out
push
insl
pop
pop
xor
fisubrs
mov
sbb
cmc
mov
les
ret
inc
out
or
je
or
aas
mov
jmp
pop
aam
push
sbb
test
aaa
fucom
out
rcll
ljmp
push
xchg
lea
in
mov
add
add
pop
xchg
mov
jle
daa
push
mov
js
decl
iret
pusha
pop
repnz
insl
adc
inc
or
hlt
imul
sub
jmp
mov
jge
popf
mov
jp
jnp
push
jmp
sbb
movsb
popf
jmp
sub
cmp
fildll
test
jmp
inc
test
pushl
call
inc
cmp
addb
sub
adc
pop
dec
cmc
fcmovnu
inc
add
sbb
xor
bound
rolb
decl
lods
jle
add
jle
mull
jmp
in
adc
push
icebp
repz
in
ljmp
daa
jb
popf
mov
clc
mov
cmc
jbe
sbb
mov
fdivrs
testl
decb
sbb
push
jmp
jne
shll
popa
jecxz
call
dec
cmpl
mov
push
pop
sbb
roll
filds
jge
lods
cmp
pusha
and
ds
sbb
movsb
adc
pop
call
mov
sub
cmp
cltd
adc
xlat
push
xor
inc
xor
adc
xchg
ret
incl
aas
inc
dec
xchg
mov
or
sarb
inc
push
mov
mov
mov
incl
fldl2e
cs
cmp
adc
add
je
push
jnp
icebp
and
sbb
fnstcw
mov
jnp
pop
out
ror
adc
ljmp
cmp
xor
jp
ficompl
push
mov
outsl
mov
jnp
mov
cltd
xchg
out
or
sub
rorb
decl
mov
ja
test
jp
sub
dec
les
add
sbb
outsl
cli
dec
push
add
movsl
jnp
cmp
push
push
imul
repnz
pop
cltd
lcall
push
int3
push
je
push
pop
loope
in
dec
xor
dec
inc
jle
ljmp
decl
dec
inc
mov
xchg
daa
xchg
loope
idiv
incl
loop
or
push
subb
stos
fildll
inc
adc
pushl
adc
dec
sarb
fcmovb
aaa
call
lahf
rorb
xor
ficoml
mull
cld
in
push
call
mov
cwtl
ret
fwait
jae
mov
add
mov
push
mov
insb
or
xchg
push
jp
shl
mov
test
lret
adc
sub
je
ja
dec
adc
je
cwtl
mov
xchg
add
pop
out
mov
fisubl
sbb
add
out
cli
mov
imul
cwtl
mov
mov
push
and
jmp
call
stos
lock
dec
dec
mov
push
mov
cltd
cmpsb
negb
sti
xor
mov
cltd
mov
xor
mov
mov
lods
gs
mov
cmpsb
in
inc
jnp
call
xchg
or
or
pop
xchg
lods
in
sub
js
mov
out
inc
dec
push
stos
int
lcall
pop
mov
jp
xor
mov
inc
jne
cld
mov
das
push
mov
data16
out
adc
add
add
incl
or
mov
scas
es
jns
lret
and
dec
lds
pop
aaa
nop
sar
out
cli
stos
outsb
inc
cmp
cmc
inc
outsl
mov
inc
push
adc
sbb
lea
loope
call
movsl
inc
addb
stos
rcrb
cli
sub
mov
pop
jge
jae
adc
mov
incl
jno
loopne
imul
push
mov
sahf
push
xchg
ljmp
cmp
cmp
adcb
mov
lahf
push
xchg
sub
cmc
sbb
std
insl
fimuls
sub
jmp
mov
inc
int
icebp
sub
icebp
or
jae
or
int3
add
jne
and
incl
adc
dec
shlb
jb
mov
decl
push
imul
xchg
mov
push
repnz
aam
or
mov
lret
or
jmp
cmp
aas
cs
mov
aas
stos
lds
jp
mov
cwtl
mov
jmp
nop
dec
mov
pop
dec
adc
dec
or
sub
push
pop
mov
fstl
incl
bound
jnp
add
mov
push
dec
imull
mov
adc
or
mov
pop
push
rcrb
call
sub
ret
xchg
insl
cmp
ljmp
in
lods
sbb
popf
roll
popa
add
int3
or
outsb
add
and
jbe
into
sub
incl
ret
aam
test
ret
jo
jecxz
test
lcall
mov
movsl
mov
cmpsb
xchg
mov
mov
out
fcompl
fmuls
xchg
and
cli
dec
in
jg
mov
mov
int
int
imul
jno
shrb
xchg
sbb
inc
ja
push
call
iret
fldt
sbb
sti
lea
mov
stos
xlat
jmp
dec
shlb
sbb
or
mov
cmc
bound
fildll
into
inc
jno
incl
pushl
jmp
fimuls
and
fimull
adc
push
add
lret
push
pop
cmp
mov
hlt
imul
push
sbb
mov
decl
mov
xchg
fs
cmpsl
lock
adc
sbb
jo
ss
outsl
xchg
pushf
loopne
pop
cmc
dec
ret
dec
cmc
or
andb
add
ja
mov
mov
xchg
or
or
pop
shrl
out
mov
fmulp
cmp
jg
imul
lret
push
rolb
mov
idivl
mov
js
ficompl
andb
inc
lahf
rol
out
movsb
incb
test
fistps
arpl
or
inc
pop
push
adc
jmp
cld
cmp
fdivr
aad
lds
xor
aam
scas
pop
ljmp
sub
and
hlt
lcall
or
inc
call
nop
jg
loop
dec
add
push
hlt
inc
sbb
dec
dec
iret
add
std
lcall
fwait
sub
mov
cmpsl
iret
out
or
jle
push
movsb
lret
jne
sub
scas
cltd
xor
cld
enter
mov
sub
jecxz
dec
sbb
cmp
adcl
sbb
xor
pushl
lret
inc
arpl
mov
rorl
cltd
mov
jnp
fmuls
jl
cmp
les
push
imul
pushl
call
aas
insb
insb
jmp
xchg
pushf
cmpsl
in
jns
inc
jmp
out
pop
mov
pop
ss
sar
sar
pop
dec
mov
in
cmpsl
sbb
push
sbb
lods
hlt
mov
call
pusha
jnp
aam
xlat
aaa
inc
lock
fcmovb
imul
adc
sub
loop
or
ss
icebp
pop
test
jg
add
clc
inc
push
addr16
lods
xlat
and
jmp
call
int
jb
push
add
mov
mov
outsb
dec
mov
movsb
jl
cmpsb
and
add
or
cmp
lahf
loopne
fdivrl
out
popf
push
push
aam
dec
fsubrl
decl
test
insb
cmp
jno
pop
cs
jg
xchg
mov
lea
js
inc
cmp
pushl
icebp
cmp
js
jne
popa
lcall
push
pop
or
shrb
shrb
aad
mov
mov
jmp
outsb
dec
sbb
mov
xor
dec
jg
jmp
mov
dec
push
jb
xchg
mov
jae
adc
xchg
inc
mov
loope
mov
out
pop
push
adcl
les
gs
mov
add
fcmove
mov
inc
jle
mov
in
out
mov
insb
xchg
push
ss
jp
inc
mov
ja
orl
mov
ljmp
outsl
lds
int3
and
in
jne
ljmp
mov
push
sar
fbstp
imul
mov
jae
ljmp
cmp
cmpsl
mulb
ljmp
test
pop
jl
sub
mov
cmp
insl
ret
pop
enter
mov
add
xchg
fs
out
inc
lods
lods
pop
dec
movsl
insb
cmp
adc
in
push
and
std
jg
inc
idivb
imul
dec
lcall
call
js
sahf
adc
dec
jg
pop
inc
sbb
lret
int
push
add
dec
push
xorl
push
pop
insb
jecxz
loope
in
std
push
xchg
xor
xchg
dec
mov
test
sbb
jmp
das
addr16
pop
cmp
mov
mov
adc
jl
fisubrl
rcrl
mov
push
out
incl
push
mov
push
jle
inc
pop
xchg
add
adc
push
je
clc
mov
jle
cmp
adc
mov
xor
subl
pop
mov
imul
adc
lods
cmp
inc
les
adc
popf
test
pushl
sub
pop
subl
cmp
into
scas
fsub
cwtl
mulb
cmpsl
call
adc
stos
xchg
incl
lret
cmc
mov
sbb
sahf
in
xchg
xor
mov
cltd
fstpt
mov
jnp
imul
hlt
and
mov
insl
mov
std
call
add
xchg
pop
or
addr16
xchg
dec
xchg
movsb
hlt
movl
lret
int
shll
cmpsb
test
push
sub
jle
and
mov
sti
sbbb
test
jle
out
aam
push
shll
adc
lea
js
sbb
push
loop
add
fsubl
mov
aaa
cmp
jg
xor
es
push
sbb
dec
and
insb
add
daa
scas
addr16
decl
lock
mov
or
lahf
mov
lcall
and
cwtl
mov
movsl
stos
inc
sbb
je
push
int3
mov
mov
mov
insl
loopne
cli
mov
popf
sub
xlat
push
into
das
pop
cmp
ret
sub
pop
mov
lods
das
jmp
xchg
push
mov
rorl
mov
sbb
sbb
std
mov
jg
lahf
cmp
pushl
cmpsl
inc
pusha
push
mulb
pop
das
bound
cmpsl
test
adcb
jmp
mov
shlb
sub
xchg
inc
mov
cmpsb
incl
add
lcall
inc
adc
jg
xor
xor
adc
push
and
out
add
pusha
inc
or
push
ss
test
scas
cli
pop
sahf
imul
add
jne
scas
mov
in
lcall
decb
xchg
fnstsw
ja
add
jp
jp
loope
sub
sbb
jmp
mov
cmp
jmp
xchg
inc
divb
imul
jmp
jl
xchg
in
aad
mov
mov
mov
jge
lods
frstor
cmpsb
pop
aad
das
cmp
mov
ljmp
inc
in
jno
lds
inc
in
in
mov
sub
addr16
out
pop
or
inc
add
inc
int3
mov
sub
xlat
adc
decl
popa
rolb
xchg
xchg
call
in
jl
push
pushf
jmp
pop
pop
cmp
mov
je
or
xchg
adc
add
imul
push
dec
cmp
xchg
push
ret
icebp
mov
mov
mov
rclb
or
cli
je
add
call
jmp
lds
jne
jmp
das
mov
leave
jno
insb
pop
sbb
mov
jb
mov
mov
add
mov
xor
mov
jo
or
or
add
pushf
pop
adc
pop
mov
jo
sub
ss
xor
ret
das
loope
fcomip
add
faddl
or
mov
cmpsb
add
xchg
cwtl
inc
mov
mov
pop
call
mov
push
adc
sub
lods
cmp
jl
test
cs
mov
cmp
push
and
jns
adc
negl
in
lods
lret
stos
xor
fists
inc
pop
sbb
out
loop
fisubl
push
mov
stos
xchg
adc
arpl
or
or
out
cs
insb
xlat
cld
mov
inc
sub
aad
fwait
jne
cli
inc
add
incl
dec
push
imul
xchg
push
dec
lea
push
in
sbb
inc
sbb
clc
add
rorl
or
pop
es
pop
lea
adc
jg
incl
cmp
add
test
popa
pushl
jmp
dec
pop
pop
mov
mov
jmp
dec
pop
mov
mov
inc
test
jo
inc
adc
mov
inc
fisubrs
dec
mov
or
or
xchg
jl
lock
or
into
jge
aas
ljmp
jbe
hlt
shrb
cwtl
pop
mov
int
sub
jmp
mov
jp
jg
sub
mov
xchg
lcall
jnp
into
rcrb
jnp
xchg
or
xorl
cmp
push
call
daa
dec
lds
pop
push
inc
push
divb
sub
inc
rol
loop
push
jg
lock
shrl
ss
aas
mov
xor
jmp
std
loop
loope
adc
rep
fstp
in
pop
je
stos
push
iret
pop
cld
ret
lcall
add
fistl
js
inc
ret
out
xchg
mov
pop
and
and
ljmp
xchg
and
in
cli
xchg
inc
or
les
mov
arpl
push
or
fdivrl
mov
lret
icebp
call
cwtl
iret
rep
fmul
cmp
xor
in
jnp
shl
aad
iret
mov
fidivrl
movsb
sub
incl
mov
sar
outsb
out
add
lret
lods
inc
jno
loop
xchg
cmp
out
xor
push
inc
rcrl
ret
jae
pop
mov
pop
lcall
push
fwait
aam
shr
mov
in
pop
and
mov
loopne
push
fisubrs
lods
pushl
jge
pop
clc
and
pusha
pop
test
adc
inc
mov
fcompl
pop
push
adc
incl
mov
push
js
into
mov
xor
mov
outsb
shrl
loope
xor
inc
test
add
insb
dec
data16
cli
xchg
into
mov
xor
testl
filds
mov
cmpsb
sbb
lea
jl
movsl
cltd
dec
loope
shll
mov
dec
cmpsb
inc
out
ja
lods
inc
cltd
mov
incl
aas
adcb
imul
jge
fsts
jg
orb
addr16
jle
fprem1
cmpsb
pop
out
in
call
inc
insb
ficoms
ret
data16
or
sbb
dec
adcb
lcall
mov
movb
mov
cltd
or
jne
dec
popa
sub
xchg
aam
pop
outsb
mov
lock
call
lds
cmp
xchg
ds
and
outsb
mov
push
sbb
leave
pop
xchg
ds
stos
dec
adc
dec
ljmp
iret
push
sub
fnstsw
xchg
std
cltd
mov
movsl
mov
push
xchg
aad
lcall
inc
call
arpl
sub
xchg
xchg
xor
xchg
v4fnmaddps
ret
stos
lahf
sti
add
push
or
iret
cmp
jmp
rorl
mov
jno
pmaxsw
adc
xor
mov
adc
aas
jecxz
cmp
add
inc
cli
mov
sbb
inc
jle
lods
push
dec
fstpt
jnp
lcall
std
incl
rorl
stos
jb
lods
jmp
out
add
into
jo
ja
mulb
sub
pop
jmp
out
jbe
insb
stos
mov
ljmp
arpl
test
jmp
fnsave
cmp
scas
xor
rorb
test
aam
jno
dec
scas
das
je
pop
xor
and
cmp
shll
ss
dec
scas
call
fcmovnu
cmp
in
inc
sub
xchg
das
and
pop
add
fnstenv
rol
rclb
mov
jmp
les
adc
scas
sub
bound
mov
push
xor
cld
pushf
lret
jecxz
add
aam
fwait
pop
flds
pop
cmpsl
int3
leave
iret
push
push
jle
push
or
push
out
loope
jbe
jmp
popf
iret
addr16
out
retw
jmp
xor
loopne
aas
test
imul
push
sub
xchg
xchg
cld
mov
push
xchg
call
ftst
pushl
idivl
je
add
hlt
pop
fwait
mov
pop
add
lock
mov
push
addr16
ljmp
or
mov
sarb
mulb
lds
xor
pushl
xchg
pop
cmc
scas
jne
rcr
xor
das
jbe
loope
xchg
sar
xlat
incl
scas
addr16
dec
and
xchg
push
pop
pushf
dec
jmp
in
dec
push
xchg
mov
mov
cmp
inc
sbb
push
adc
mov
nop
arpl
adc
cld
lcall
int3
mov
sbb
push
sbb
es
or
mov
jne
jmp
inc
stc
dec
pop
ret
sbb
int3
inc
lods
aam
outsl
jmp
pushl
orb
add
and
xchg
jae
orb
adc
push
scas
mov
into
sub
iret
and
push
mov
mov
scas
or
xchg
addr16
push
jo
hlt
ljmp
pop
xchg
xchg
mov
adc
ficompl
rcll
insb
test
jmp
popf
pop
das
loopne
mov
lcall
je
push
je
lret
icebp
incl
xchg
into
cmc
clc
pop
loopne
adc
insl
test
decl
sahf
sarl
daa
pushf
cmp
push
mov
cmpsl
inc
cmp
pop
cmp
dec
jl
lea
adc
or
cmpsb
mov
outsl
push
adc
sbb
enter
lea
insl
insl
scas
jo
mov
ss
sti
outsb
into
cmp
xor
add
mov
flds
decl
daa
mov
pop
sub
loop
jp
adc
add
adc
adc
rorl
jbe
lods
pushl
addb
pop
cld
bound
dec
mov
mov
inc
cmp
push
jns
lcall
scas
mov
js
repz
notb
mov
inc
push
dec
inc
xor
pop
stos
inc
xlat
adc
xor
aad
sbb
insb
mov
mov
mulb
push
mov
pop
sub
inc
adc
andl
pushl
adcb
cltd
flds
mov
stos
clc
repz
std
in
mov
fisttpl
ror
and
adc
push
repz
mov
and
mov
out
mov
mov
xor
pop
in
lcall
loopne
pop
mov
pop
or
jg
and
xor
inc
fucom
mov
xor
pushl
push
inc
push
sarl
push
call
sub
les
sbb
lcall
lret
repnz
dec
fldz
mov
cmp
ljmp
xchg
movb
bound
js
and
xchg
xor
jl
test
cmp
incl
inc
xchg
movsb
inc
or
iret
in
fmuls
fwait
sbb
sub
call
popf
int
add
popf
aad
lcall
insl
cmp
stc
cmp
das
sar
movsl
icebp
push
in
lods
lods
imul
in
mov
ljmp
rorb
pop
xor
insb
cmp
mov
fidivrl
add
jg
mov
pop
fld
xchg
outsl
xchg
call
sub
inc
loopne
aaa
dec
mov
inc
call
pushf
push
stc
cmp
rcll
test
mov
and
ss
fsubrp
push
add
pop
insb
cmp
in
mov
jecxz
jo
iret
dec
mov
ljmp
jne
rclb
mov
shlb
testb
pushf
adc
pop
stos
pop
sub
sub
call
xlat
idivl
push
stos
xor
cmc
scas
jmp
pop
sbb
out
stos
insb
push
pushl
jae
mov
xor
sub
adc
unpcklps
push
mov
jg
test
mov
adc
pop
cs
mov
push
xchg
dec
add
out
cltd
inc
mov
les
lahf
and
hlt
pop
decl
rcrl
inc
daa
pop
adc
rcrb
mov
inc
sti
nop
push
shll
cmp
ljmp
mov
jnp
test
pop
mov
andl
mov
pop
subl
mov
test
call
adcl
sbb
or
data16
data16
adc
jne
lods
sbb
stc
mov
scas
aad
std
fbld
clc
xchg
xchg
mov
push
sbb
call
movsb
xchg
add
cld
cmp
stos
mov
popf
scas
icebp
mov
mov
clc
jmp
outsb
or
incb
jge
aas
cmp
push
or
insl
decl
cwtl
cmc
dec
les
cmp
stos
aam
xor
push
rcrb
sar
jg
mov
test
fcomi
int3
pop
popa
out
lret
sub
adc
dec
incl
sub
sub
xor
sbb
push
daa
xlat
mov
xor
into
sbb
or
mov
lcall
push
dec
xor
adc
imul
dec
std
test
sub
push
dec
sar
mov
push
testl
cli
mov
in
and
lods
jmp
dec
sbb
pop
mov
dec
dec
je
jle
lahf
fcoml
inc
int
das
sar
xchg
fsub
dec
int
cli
sahf
sub
test
daa
push
or
lcall
decl
jp
jg
xchg
nop
fcmovnb
add
lock
in
in
sub
jmp
sub
inc
xor
shl
push
jl
pop
std
iret
test
sub
mov
filds
push
cld
push
and
lcall
out
mov
shl
sub
test
cmp
out
imul
inc
incl
mov
and
or
mulb
lea
push
add
das
clc
decl
sub
data16
cmp
pop
mov
popf
mov
pop
adc
jp
dec
lcall
insb
js
fisubl
xor
repnz
add
mov
nop
xchg
mov
fwait
or
enter
fs
push
ja
xchg
rolb
ja
aaa
fmuls
movsb
sub
in
cltd
movsb
adcb
lcall
jmp
ja
dec
cmp
repnz
in
repnz
inc
repz
call
push
cltd
mov
xor
add
and
pop
inc
mov
push
ret
sbb
inc
insl
and
or
push
aam
add
mov
mov
adc
adc
inc
jb
outsl
es
call
cmp
adc
push
stos
es
dec
sub
pop
roll
sub
pushl
stos
cmp
fnsave
movsb
xchg
jns
mov
sub
popf
push
jmp
aad
aad
incl
ds
or
outsb
out
add
mov
inc
cmp
sub
fiadds
pop
jle
mov
mov
dec
jmp
rep
scas
sub
lock
aam
jmp
call
inc
rcrb
call
ds
mov
dec
adc
sub
int3
daa
and
decl
sub
ret
pop
or
or
jbe
mov
arpl
orb
ljmp
jle
jo
ds
into
add
call
mov
dec
jge
jmp
daa
into
mov
sbb
lods
repnz
popf
adc
jae
or
cmpsb
lcall
push
jmp
add
mov
incl
repnz
mov
cs
and
sub
cld
push
xchg
cli
and
shll
xor
js
insb
or
sbb
xchg
jecxz
loop
dec
lret
adc
or
lcall
mov
imul
mov
out
push
sub
aam
mov
jo
leave
icebp
lret
ret
mov
dec
sub
push
or
popf
stc
mov
ja
sbb
cmpsl
add
test
mov
movb
in
pushf
stos
jnp
ja
xchg
pusha
int3
and
lock
mov
mov
hlt
outsb
inc
decl
clc
xchg
xchg
fdivr
test
xor
fcmovu
bound
mov
decl
push
add
add
add
por
fdivrs
push
fwait
push
push
adc
cmpsb
incl
xchg
sbb
push
and
fbld
push
dec
je
out
jne
cmp
stos
sbb
xor
je
out
lahf
or
mov
fs
cwtl
jp
stos
or
lret
popf
fdivr
js
aad
pop
add
jg
loop
mov
test
cli
mov
lds
sbb
in
mov
mov
cmpxchg
push
int
mov
or
mov
mov
incl
adc
lods
cmp
add
jmp
incl
outsb
leave
mov
arpl
or
push
cs
jge
sub
mov
outsl
ja
mov
sub
mov
call
xchg
jg
push
fstl
mov
mov
mov
xabort
sbb
test
notl
sub
stc
aad
mov
add
ja
push
jb
mov
pop
pop
and
fisttps
jnp
pusha
fidivl
in
mov
add
ljmp
pop
xchg
adc
icebp
aam
mov
inc
inc
mov
mov
add
aaa
sub
jmp
lods
sub
cmpsl
push
mov
mov
dec
je
loop
out
clc
decl
mov
lds
mov
jo
or
dec
ficoml
pop
cmc
decl
notb
push
ds
inc
xchg
sbb
je
xor
mov
add
mov
inc
jge
in
xchg
call
loopne
test
pop
out
jg
mov
cmpsl
sub
int3
lods
js
mov
pushl
jle
mov
rcr
out
mov
loop
movsb
adc
adc
sub
ljmp
fsubrs
aad
fwait
push
jmp
js
into
fmuls
dec
ret
testl
push
sbb
mov
or
xchg
xchg
loope
pop
xlat
mov
jns
sbb
inc
repnz
mov
scas
mov
push
mov
pop
fcomip
in
pop
jo
fcoml
push
std
bound
xor
fs
cli
hlt
decl
mov
xor
mov
gs
push
cmp
mov
das
leave
js
in
or
call
sub
orl
and
xor
test
mov
int3
fninit
clc
cwtl
ljmp
jmp
inc
rolb
and
lahf
lret
cmpsl
mov
cmp
ljmp
push
xchg
xor
and
and
xor
insl
in
lahf
mov
and
incl
fistl
cmp
jge
lret
pop
pop
jno
jae
pusha
xlat
push
dec
dec
pushl
fmul
mov
rcll
lock
add
cmp
cmp
jge
rorl
xor
cmpsl
ljmp
icebp
jmp
out
scas
mov
das
lds
mov
push
stos
cli
ds
xor
cmp
rcrb
mov
push
pop
and
xchg
inc
and
add
lcall
sub
ficoml
jnp
adc
and
inc
jecxz
pop
cld
call
cmp
sbb
decl
sbbb
mov
push
xor
adc
push
inc
jp
cmp
xorl
or
scas
hlt
jge
call
pop
inc
cmp
jae
inc
insb
sbb
sub
scas
cmpsb
xchg
cmp
adc
or
call
add
sub
je
dec
cmc
push
pop
int3
ss
ljmp
dec
and
mov
inc
mov
jmp
jmp
std
and
cmc
ljmp
adc
xchg
mov
sub
cld
mov
and
jmp
pop
mov
arpl
pop
lahf
call
cmpsb
dec
cld
xor
mov
mov
outsl
pop
push
outsb
fsts
loope
call
lds
cltd
out
xchg
mov
insb
lods
xchg
dec
aaa
pop
push
test
adc
lcall
xchg
fstpt
loop
clc
push
stc
lcall
loope
inc
ljmp
sbb
push
inc
test
data16
mov
pop
sub
jb,pt
mov
incl
loope
jmp
pusha
pop
loope
lods
adc
cs
jg
xlat
nop
icebp
cmpsl
fnstsw
pop
outsb
adc
out
add
or
lret
pushf
xor
jb
lcall
nop
into
hlt
cmp
adc
adc
ljmp
mov
data16
cmp
jnp
and
stos
add
xor
or
aaa
adc
call
jne
repz
lahf
aam
jle
je
cmp
cmp
cld
add
test
and
mov
ljmp
sbb
fsubp
stos
dec
bnd
sti
fsubl
ljmp
add
call
mov
out
xor
popa
mov
in
or
jg
call
inc
mov
test
adc
sbb
lcall
push
movsl
cmc
and
test
cmpsl
pushl
decl
mov
nop
movsb
or
faddp
out
mov
lock
leave
clc
in
push
add
into
ret
xchg
stos
lods
mov
pop
loope
pop
std
call
data16
mov
lahf
out
cltd
icebp
inc
clc
arpl
sub
cltd
cli
dec
cwtl
mov
mov
call
les
out
pop
inc
push
pop
adc
mov
inc
pop
jae
lahf
pop
push
fisttpll
pushl
cmp
push
lcall
mov
cmp
mov
inc
imul
lahf
mov
lcall
add
inc
sub
mov
ja
ret
xor
decl
inc
mov
mov
mov
lock
jbe
int
pop
push
push
sub
pop
add
jl
popf
in
cmp
je
and
cmc
add
jg
stos
xchg
cmp
mul
in
sub
js
mov
mov
sub
stc
out
pop
mov
pop
stc
dec
dec
jno
add
decl
or
sbb
div
movsl
mov
xchg
repnz
pop
loopne
in
cmc
xchg
daa
lcall
pop
imul
pusha
mov
lcall
mov
and
decl
mov
les
jge
cltd
dec
rcll
cmc
mov
out
aaa
mov
decl
insl
adc
sub
loopne
pop
addr16
incl
cld
jge
xor
lret
push
mov
mov
jg
stos
cli
fcmove
rol
pop
mov
lods
push
fwait
jb
push
les
push
ljmp
push
es
adc
mov
inc
adc
call
pop
lock
dec
or
sbb
repz
divps
jne
mov
jbe
iret
shll
add
pushl
or
jge
mov
push
sub
jge
or
ss
outsl
lods
orl
cmp
incl
in
mov
es
inc
aas
andb
sbbl
daa
inc
mov
xor
das
pop
jne
sbb
mov
jb
mov
les
ljmp
aam
adc
mov
cmp
dec
jno
push
notb
jg
xor
icebp
pop
add
lock
inc
sbb
add
decl
inc
cmp
movl
dec
dec
aas
add
std
in
outsb
enter
jmp
push
pop
sub
ret
aas
mov
or
pusha
insl
add
xchg
mov
mov
cwtl
test
cld
cmp
push
in
push
inc
add
jmp
xor
sub
or
decl
adc
pop
orb
das
sub
jecxz
xchg
pop
les
jne
add
jle
push
arpl
jecxz
fdivl
xor
cmp
or
popf
xchg
loope
pop
xchg
xlat
aam
das
test
lea
add
ja
mov
add
pop
lds
movsb
add
movsb
dec
xor
jno
outsb
cli
xlat
jg
daa
not
test
push
sub
fadds
andl
mov
insl
cmp
xchg
ret
jecxz
testl
dec
or
int
aam
xchg
dec
stc
mov
and
lcall
inc
ffreep
loope
dec
sub
int
jp
lahf
xor
pop
cmpsb
pop
add
inc
dec
jmp
lret
outsb
loop
shlb
inc
dec
aam
stos
sti
in
stos
inc
lock
xchg
or
jae
clc
sti
incl
jnp
loopne
or
inc
fnsave
hlt
xchg
ret
mov
jle
jne
andb
stos
std
mov
and
add
and
mov
mov
aad
push
jmp
mov
clc
lcall
imul
pop
pop
pop
xchg
xor
incl
dec
cmp
push
rcrl
cmp
pusha
add
pushl
icebp
pop
mov
pop
pusha
cmp
jg
jecxz
fisubrs
stos
jns
dec
ljmp
add
jl
xchg
add
test
popf
and
lahf
fiaddl
cltd
xor
sbb
jle
push
out
xchg
insl
push
loopne
push
xchg
dec
mov
or
ss
mov
lea
dec
clc
ljmp
push
cs
lahf
dec
int
call
decl
mov
push
out
aaa
inc
pushf
pop
popf
mov
mov
stos
aas
pop
pop
js
bswap
pop
loopne
test
jmp
imul
movsb
loop
or
sub
decl
inc
sub
lds
xchg
dec
lret
push
call
mov
loop
add
push
cwtl
add
jl
jp
sar
cmpsb
orb
pushl
sub
fidivrl
mov
popf
or
sbb
sar
call
inc
xor
sub
imul
shl
lea
int3
fistpl
xchg
rcl
pushl
fcomp
sub
cmc
jp
jl
int
andl
out
sbb
xor
dec
test
pop
ljmp
shlb
adc
jle
fdivrs
or
lea
inc
jne
jmp
push
mov
enter
ret
outsb
pop
xor
push
jg
inc
arpl
jg
addb
and
shlb
or
mov
jns
fcomip
lcall
pop
cmc
mov
fbstp
scas
inc
mov
jb
xor
in
or
jb
bound
jb
add
fdiv
icebp
add
or
outsb
sarl
in
jl
sbbb
insb
jg
pushl
leave
int
cmp
movl
test
cwtl
std
sub
push
inc
add
and
jns
pop
rcrl
push
pop
pop
xchg
aas
adc
mov
dec
cmp
jge
lock
ss
and
mov
mov
cmp
ret
cmp
push
adc
jp
pop
lcall
gs
ja
xchg
inc
pushl
cmp
mov
xchg
ret
les
enter
push
mov
mov
jmp
push
test
lods
mov
pop
into
out
mov
incl
or
cmp
out
cli
dec
and
aad
stos
jo
aas
test
sbb
dec
push
pusha
insb
clc
lret
rcrb
jne
sub
addr16
fisubrl
push
add
jle
jmp
jl
mov
sbb
mov
xchg
cmpsb
jg
aam
or
and
aas
lahf
jno
push
adc
aaa
push
leave
rcrl
imul
icebp
mov
mov
xchg
sbbb
and
and
xlat
pop
dec
incl
inc
inc
sarb
xor
dec
xchg
adc
jb
call
xchg
jecxz
mov
std
data16
into
fisubrs
pop
dec
cmp
sub
pop
clc
pushl
push
and
adc
mov
xchg
or
sub
inc
roll
jg
in
push
fisttpll
arpl
out
xchg
mov
rclb
lcall
adc
repnz
add
jmp
cs
es
and
jo
in
mov
jg
dec
cld
lret
push
insl
fldcw
push
and
mov
mov
jno
imulb
int
aaa
mov
inc
rorl
pop
push
jmp
lret
in
ja
and
jge
loop
decl
mov
jg
fildl
sarl
mov
dec
nop
mov
test
pop
outsl
les
push
mov
jl
jecxz
xor
pop
and
pop
in
pop
jbe
cmp
cli
rorb
cmpsl
aam
push
cmpsl
mov
ljmp
xchg
sbb
pop
sub
mov
scas
rcrb
and
cmp
ljmp
rclb
hlt
dec
adc
repnz
sahf
jecxz
or
inc
into
std
mov
push
pop
fsub
adc
dec
into
daa
clc
mov
jb
mov
cmc
in
dec
inc
sbb
mov
aaa
push
adc
push
xchg
shll
fwait
scas
mov
inc
nop
ret
gs
adc
pushl
std
jae
xor
sub
stos
ret
mov
dec
ret
test
fdivrp
lcall
out
sub
mov
fiaddl
jae
mov
mov
sub
inc
dec
pusha
out
jecxz
xorl
adc
sbb
pop
cltd
out
outsl
dec
shlb
inc
push
mov
daa
inc
jle
xchg
call
pushl
mov
adc
push
lahf
and
adc
lret
fcmovu
mov
and
cmc
in
mov
push
and
into
add
mov
jne
arpl
fisubs
cmp
sbb
mov
or
mov
dec
addb
ret
test
fdivl
incl
lods
adc
stos
addr16
rorl
sub
test
pusha
lahf
sub
imul
xchg
mov
test
call
pop
push
adc
ljmp
jecxz
jmp
outsb
and
mov
ljmp
dec
cmp
int
repz
and
cld
divb
ljmp
int
outsl
in
and
xchg
xor
sbb
and
lcall
imul
movsb
adc
cmp
mov
or
cmp
sbb
adc
mov
cmp
fnstsw
cmovl
xor
xor
addr16
test
ds
decl
and
sub
mov
mov
sub
jp
cmp
xchg
xor
lcall
stos
jb
mov
and
int
call
jne
in
pop
sub
push
wrmsr
cmp
sub
jns
cmp
xor
lret
decl
jno
xor
mov
ja
push
in
mov
adc
jg
dec
adc
xchg
je
lods
dec
adc
push
jge
mov
jp
arpl
adc
cmp
jmp
adc
pop
cmpb
and
les
jg
pushf
es
mov
jns
lods
jno
sbb
push
mov
nop
cmpsb
ljmp
pop
rolb
push
cmp
cmp
pushf
daa
cmpsl
ss
arpl
call
rcr
add
mov
dec
gs
cmpsb
ljmp
clc
decl
pusha
dec
lahf
cltd
cmpsb
outsb
cld
jmp
cwtl
loop
xor
mov
lds
arpl
call
mov
icebp
enter
mov
test
xchg
stos
mov
sti
lods
mov
lds
nop
add
lret
cmp
pop
rol
xor
mov
insl
pop
scas
test
jmp
pop
in
aam
cmpxchg
mov
jg
sti
cwtl
pop
out
jae
mov
fcompl
ja
sub
test
mov
cwtl
in
test
lods
add
mov
gs
icebp
incl
jo
pop
push
negb
lea
push
jnp
jmp
xchg
push
xor
shll
jecxz
dec
jge
rolb
inc
popa
jg
aas
or
xchg
cmpsb
sbb
inc
les
lcall
js
movaps
stos
call
xchg
mov
aam
outsl
mov
mov
subl
pop
add
pop
repnz
das
std
mov
jmp
xchg
lock
icebp
lcall
cmp
daa
sbb
sbb
test
pusha
ret
icebp
cld
pop
fcomip
orl
mov
sbb
mov
push
dec
rcr
ret
mov
icebp
and
dec
mov
and
jge
call
and
sub
int
sub
mov
mov
std
loopne
call
daa
addl
movsb
loopne
decl
push
sub
pushf
ficoml
ret
test
sahf
cli
iret
mov
mov
loopne
fdivs
sub
fidivrl
repz
push
fcmove
rclb
loopne
insl
sub
mov
es
lds
les
aas
xchg
out
divb
mov
and
incl
adc
sbb
mov
cmpl
dec
adc
xchg
add
loop
test
ds
notl
jae
mov
jecxz
sub
jo
lret
mov
mov
fcompl
cmpsl
pop
sti
fidivs
js
pushl
loope
inc
ja
cmc
movsl
loop
push
pop
lods
fisubrl
sub
ds
xchg
xchg
jae
mov
ljmp
add
mov
ss
xor
mov
ficoml
jecxz
cs
sahf
pop
push
arpl
lods
arpl
aas
or
push
data16
out
jno
xor
pop
adc
pop
cwtl
stos
fs
rol
loopne
mov
sbb
ja
mov
sbb
dec
mov
cld
push
push
sub
fdivrs
and
insb
mov
and
cmp
imul
adc
pushl
pop
pop
ffree
push
push
xor
xor
mov
mov
mov
lods
dec
aaa
mov
xor
fldcw
dec
cs
call
les
iret
push
pushf
xor
mov
pop
outsl
loop
dec
inc
aaa
cmpb
sbb
sbb
cmp
xor
fisubrs
pushf
pop
inc
lret
ljmp
incl
repz
in
lcall
mov
ret
mov
scas
cli
lcall
jecxz
push
jmp
dec
mov
sub
inc
adc
ljmp
test
adc
popf
add
or
dec
cmc
addl
push
pop
fisubs
fisttpl
inc
dec
add
pop
cld
incl
jge
xor
jb
xchg
iret
dec
mov
add
xchg
or
in
mov
push
jge
cmpsl
into
fsubs
push
push
call
mov
outsl
inc
fildll
mov
scas
xchg
cmp
bound
fcomip
decl
adc
sub
xor
xlat
inc
cltd
xor
add
xchg
push
lcall
pushl
xor
inc
mov
mov
push
testb
stos
sub
jno
lret
popa
cld
call
movsb
stos
scas
mov
pop
pop
mov
xor
lret
cmp
pop
push
mov
xor
mov
sub
mov
dec
xchg
call
and
cltd
ret
mov
fidivrs
and
aad
ficomps
enter
pusha
sti
inc
push
ss
cmpsb
mov
outsl
or
sbb
bnd
cmp
adc
push
fdivs
mov
adc
jo
mov
mov
fwait
jnp
jg
inc
pop
xchg
mov
dec
fcmovu
popf
jb
fiaddl
arpl
xchg
dec
xchg
xchg
pop
addr16
loope
push
and
ljmp
test
inc
bound
ljmp
and
sub
or
jle
sub
mov
ret
out
jmp
out
mov
popa
popa
inc
mov
jp
push
cmc
push
repnz
cs
jmp
subl
dec
movsl
sarb
dec
jnp
enter
std
inc
cmp
fimuls
icebp
dec
sub
nop
cmp
popa
lcall
pop
jg
or
lock
ljmp
inc
xor
cli
insb
es
pusha
aad
ds
push
mov
inc
fs
add
push
out
test
popa
mov
iret
in
js
push
sbb
fisttps
mov
mov
mov
inc
insl
pop
ret
mov
xchg
loopne
mov
pusha
jle
mov
sbb
cmc
adc
ss
cmp
add
dec
xchg
movl
add
incl
mov
pushl
mov
adc
leave
icebp
insl
push
arpl
mov
push
clc
repnz
pop
push
movsl
jge
jecxz
push
jmp
sti
out
decl
fcoms
and
sub
loop
pusha
jbe
mov
jge
dec
sub
popa
mov
inc
decl
xor
lea
sub
fists
leave
jno
adc
and
mov
push
inc
push
push
mov
shll
lods
adc
mov
pop
sbb
xor
inc
xlat
push
mov
out
fcomps
cmp
mov
jecxz
into
test
idivb
and
xchg
inc
sbb
and
add
fwait
mov
sbb
movsl
pop
jmp
pop
stos
movsl
es
sub
movb
mov
mov
add
loopne
rclb
sbb
cmpsb
mov
call
mov
mov
js
adc
mov
fdivl
fidivrl
mov
or
cmpsl
mov
cmp
cmpsb
call
add
jle
push
or
leave
cmp
fwait
cmova
cmp
pop
xchg
mov
sub
clc
stos
int
xchg
dec
cmp
mov
incl
or
dec
cmp
popa
imul
daa
pop
add
inc
or
call
jmp
sarl
ret
daa
and
cltd
mov
fcomip
jmp
jb
leave
stc
xchg
test
inc
loopne
cmp
inc
fwait
lcall
mov
shll
fildll
or
aam
pop
ja
xor
fisubs
inc
popa
decl
cwtl
mov
fsub
xchg
add
fisubs
dec
pop
or
lods
push
ja
fldt
push
outsb
fsubl
mov
inc
cld
shll
pop
inc
sbb
cmovo
out
arpl
lcall
fstps
xor
push
adc
loopne
mov
and
xor
xchg
das
pop
and
insl
mov
push
ud0
lcall
notl
popa
pop
pop
pop
lods
clc
push
xlat
mov
into
fisubrs
bound
xchg
mov
incl
mov
mov
push
aam
cmp
into
sahf
out
fdivr
xor
loope
push
mov
lahf
das
test
jl
dec
push
ss
xor
gs
fldenv
dec
pop
fxam
push
xor
loopne
sbb
sub
ljmp
lock
leave
testl
addr16
jge
mov
push
aad
pop
fwait
dec
mov
cmpb
aad
jp
scas
test
jecxz
pusha
jg,pt
mov
jmp
cmp
fldl
lcall
jb
and
jns
mov
jmp
and
push
adc
mov
push
jg
test
add
in
jne
repz
test
pusha
sbb
push
xchg
mov
sub
xchg
mov
xor
ret
cmp
dec
pop
xchg
mov
xchg
imul
sub
xor
rorl
scas
data16
lcall
sub
das
imul
mov
shrl
adcl
adc
mov
pusha
std
in
add
loop
adc
add
cmc
outsl
adc
sbb
test
xor
jmp
mov
mov
inc
sahf
leave
adcl
push
sub
pop
pusha
and
imul
lcall
and
inc
pop
push
push
stos
pop
clc
lds
pushl
inc
push
orl
mov
fnstenv
and
cmp
out
imul
xchg
mov
jns
lcall
sbb
or
or
and
mov
push
pusha
cmp
scas
out
adc
ja
cmp
das
cmp
es
inc
add
call
in
add
in
repz
aaa
pusha
loop
clc
jno
and
in
mov
decl
out
xorb
nop
fs
jg
fldl
xchg
sub
out
inc
imul
stos
jae
xor
stos
pop
jmp
sbb
mov
sub
add
jmp
insb
mov
orl
repnz
imul
stc
cmpsl
add
add
and
or
mov
push
add
mov
pushl
rorl
gs
dec
in
test
insl
jmp
repnz
cwtl
in
dec
pushl
jmp
mov
cltd
inc
lcall
stc
pop
arpl
or
push
fs
jle
test
loope
and
dec
or
into
adc
dec
fiaddl
fimull
insl
mov
jmp
push
lret
popa
hlt
pop
add
pop
bound
insb
push
aas
dec
jge
xchg
fcomi
lcall
jmp
mov
xor
cwtl
es
stos
fs
hlt
mov
decl
push
inc
sub
in
add
clc
sub
pop
outsl
cmp
fnstenv
lods
cmp
pop
sbb
aas
fidivrs
add
fwait
int3
push
push
push
cmc
inc
adc
mov
dec
aam
rcrb
xchg
xor
call
pop
pop
jns
adc
ret
jno
test
mov
dec
call
orb
orl
movsl
pop
fidivs
jle
cld
ljmp
nop
sub
and
push
inc
ja
imul
jmp
fcomip
cmp
xor
lock
adc
pushl
sbb
adc
popf
sub
pop
in
pop
sbb
xlat
cld
shlb
mov
dec
insb
mov
adc
adc
cs
ffreep
and
loopne
push
dec
push
das
xchg
ljmp
jle
stc
out
popf
add
mov
adc
push
inc
sar
sbb
vandps
mov
stos
call
clc
pop
int3
in
dec
je
mov
call
cmovb
test
ljmp
aas
mov
ss
mov
adc
cmp
xchg
and
jae
mov
out
decl
pop
stos
jae
ljmp
leave
lret
js
fisttpl
call
bound
or
andps
cmp
sti
cmpl
add
jg
mov
add
test
out
xor
shrb
aaa
mov
rclb
pop
mov
rorb
pop
mov
or
fdiv
incl
pop
add
and
sub
jg
out
pop
mov
sahf
mov
and
mov
xor
xchg
push
xchg
ss
push
test
jns
add
bound
cltd
ret
fidivs
xor
mov
jp
out
mov
scas
imul
mov
jmp
sbb
inc
mov
les
mov
push
jns
dec
ljmp
or
idivb
add
inc
mov
and
sbb
cmp
xor
test
sbb
add
rcll
and
add
mov
fcoml
push
imul
pop
out
jge
test
sbb
mov
adc
es
fcmovnb
pop
pop
pop
js
loopne
mov
std
lcall
xchg
pop
inc
popf
mov
push
xor
lcall
jle
lock
mov
xor
sub
jl
sbb
xor
cmp
int3
shll
and
lods
jmp
adc
cmp
jg
lret
cmp
sbb
dec
mov
sub
clc
pop
jecxz
push
mov
mov
call
out
in
fmull
xchg
sbb
daa
cmc
fdivrp
or
mov
or
fs
xchg
incl
jnp
stos
jecxz
daa
xchg
jle
xor
mov
mov
jecxz
loope
xor
jmp
fucompp
add
scas
cli
jmp
xor
xchg
ja
xor
pop
stos
mov
mov
pop
inc
fs
cmc
ljmp
mov
adc
pop
ja
cmc
sub
and
jnp
xchg
jns
xchg
dec
push
pop
or
xchg
iret
xchg
cld
ljmp
pop
and
xor
xchg
lret
jecxz
lret
mov
dec
mov
or
mov
popa
add
stc
adc
pop
lcall
mov
pop
jg
xchg
outsl
cltd
cltd
xor
sub
inc
mov
or
mov
jmp
shll
js
push
daa
cmp
mov
sub
cmpsl
inc
fstpl
sbb
popa
sub
cmp
movsb
add
lds
adc
sub
sar
ljmp
cmpb
pop
adc
jae
mov
sub
mov
lods
push
sub
nop
push
ljmp
sbb
pop
out
cmp
in
sahf
push
cli
xor
jg
out
xchg
or
push
repz
scas
loopne
sbb
jmp
sub
stos
jp
sti
decl
imul
pushf
mov
pop
or
xchg
cli
jmp
pushl
jb
inc
push
xor
xacquire
sub
sub
xor
add
mov
cmpsb
stc
pusha
inc
sar
ljmp
and
popf
push
mov
cmp
pop
mov
xor
ljmp
mov
shll
adc
stc
push
lds
and
jne
gs
xor
pop
jg
jno
mov
adc
filds
dec
push
xrelease
test
xor
or
mov
jmp
and
mov
push
shlb
add
jns
dec
inc
out
pop
scas
jo
mov
incl
sub
sahf
add
mov
mov
mov
arpl
mov
test
fcomip
xchg
xchg
arpl
xchg
adcb
push
jb
fwait
inc
scas
dec
pop
gs
and
pop
add
lcall
test
push
pop
add
mov
rorb
mov
mov
dec
xchg
sbb
mov
pop
fs
inc
push
loop
push
jecxz
dec
pushf
or
sub
jb
xchg
cmpsl
outsl
fcompl
aad
pop
cmp
mov
std
rcll
int3
les
sub
ficomps
or
mov
incl
xchg
std
mov
xchg
pop
fdiv
mov
push
push
xchg
add
pushl
out
out
je
pop
xchg
pop
aas
add
jg
push
and
mov
movsb
sbb
movsb
mov
push
icebp
mov
aad
mov
incl
pop
ja
dec
fstpt
or
loopne
into
add
fiadds
call
loope
sub
inc
cmp
adcb
pop
xor
scas
mov
mov
xchg
loope
mov
jp
jno
test
ljmp
mov
arpl
jne
pop
popa
xor
fildll
xorl
sbb
dec
jns
loopne
jne
dec
push
adc
es
jp
cmp
and
push
nop
inc
testl
jp
sbb
lock
scas
add
popf
shll
ljmp
xor
loopne
std
add
icebp
and
jno
mov
inc
add
aad
stos
cmp
call
xchg
jno
repnz
push
les
jno
push
cld
cmp
repz
dec
pop
incb
lret
xchg
lds
jns
incl
int3
mov
cli
pop
jmp
cmp
test
lcall
jg
std
push
add
pusha
sbbb
pop
cmp
push
mov
ds
and
fldt
cwtl
sub
mov
addb
not
cld
xchg
mov
mov
sub
mov
call
shl
shl
mov
stc
les
mov
arpl
jmp
and
xor
adc
or
cmpsb
cld
ljmp
mov
mov
lret
or
mov
lret
pusha
mov
call
dec
hlt
push
mov
cmp
in
push
pop
iret
ja
sbb
call
or
or
sbb
or
mov
pop
pusha
push
pusha
pop
sbb
push
pop
in
mov
sub
pop
add
inc
sub
negb
outsl
add
sbb
cli
push
loope
add
inc
enter
ret
call
or
mov
jg
mov
out
mov
popa
inc
je
xchg
in
mov
cli
pop
push
ljmp
add
mov
popf
mov
xlat
mov
cmp
xchg
jecxz
clc
pop
das
in
cltd
jmp
fadds
push
repz
mov
push
or
lcall
lock
int
out
in
sub
mov
rcrb
sbb
decl
push
data16
add
dec
insl
xor
adc
mov
and
ljmp
in
es
clc
sahf
xor
ljmp
dec
mov
jg
lcall
outsb
mov
bswap
fisubrs
or
fisttpl
pop
adc
sbb
xor
fcoms
jge
ficoms
jg
jg
aam
add
mov
stos
daa
pop
adc
popa
test
cmp
lods
stos
and
pushl
je
push
inc
push
addr16
xor
ljmp
mov
or
daa
movsb
dec
lods
mov
test
xor
inc
in
jb
dec
std
sar
incl
fists
cmc
fcmovne
fisttps
xchg
or
sbb
mov
jae
int
movb
jg
lret
aas
add
lds
inc
in
cwtl
dec
ror
stc
je
imul
lcall
mov
sbb
clc
fdivl
mov
pop
jne
rcr
add
jmp
or
loopne
loopne
sub
mov
into
out
aad
mov
sbb
std
and
jl
aam
cmpsb
call
adc
pop
int
sar
pusha
inc
dec
arpl
mov
fiadds
rorb
xchg
cmp
out
dec
adc
call
daa
iret
lods
xchg
fcomip
outsb
test
cwtl
jl
roll
mov
push
lea
add
dec
hlt
mov
mov
popa
mov
fcomip
sbb
lcall
mov
mov
imul
adc
lcall
imul
pop
fsubrs
mov
gs
cmc
or
or
sti
sahf
sub
sbb
in
sub
inc
mov
mov
ja
push
nop
xlat
insb
jns
jbe
jg
dec
xchg
and
cmp
js
add
dec
adc
js
jg
lcall
test
xchg
jno
shlb
ja
pushf
mov
add
ljmp
pop
outsl
fcmovnbe
xor
pusha
cli
xor
stos
ficompl
insl
push
sub
ss
shll
cmp
cmp
ljmp
push
push
push
mov
xchg
dec
in
sub
dec
in
ljmp
jmp
or
adc
test
add
pusha
jmp
fists
or
inc
fsts
test
ljmp
call
cmpsl
out
jo
repz
xor
and
xchg
xor
inc
fdivp
cwtl
and
mov
test
imul
popf
je
ljmp
dec
sub
es
aam
test
dec
ret
loope
dec
outsb
dec
in
mov
ljmp
push
sbb
and
inc
movsb
push
push
dec
or
sub
es
stos
lds
cmp
popf
stc
enter
jae
cli
in
in
adc
incl
xchg
fnsetpm(287
jge
adc
push
fdivrs
addr16
inc
jmp
pop
enter
mov
xor
stos
mov
mov
jg
inc
loop
sub
mov
dec
fistpll
push
out
icebp
and
and
decl
mov
test
push
cmp
decl
mov
adc
inc
xchg
xor
adc
cmpsb
dec
insb
or
or
sbb
add
loopne
lret
call
aaa
ds
rcr
pusha
push
push
push
mov
pavgw
cmp
icebp
shl
push
pusha
ffreep
jae
pop
cmp
call
repz
cmp
in
ss
outsl
fidivrl
fstps
mov
mov
loop
pop
add
and
push
iret
or
imul
dec
mov
scas
push
int3
mov
add
sbb
lret
lods
pop
xchg
jno
stc
dec
adc
decl
sbb
inc
adc
or
sub
adc
out
dec
popl
call
xchg
popf
sub
xor
adc
notl
adc
jle
sbb
pushl
ljmp
mov
rolb
mov
mov
movsl
mov
incl
aad
cmpsb
stc
inc
mov
mov
lods
dec
pop
subb
push
xor
jmp
push
ljmp
dec
or
imul
pusha
aas
or
mov
xor
mov
pop
pop
ja
lcall
pop
imulb
ficomps
ja
add
out
mov
inc
cwtl
adc
mov
cmp
xchg
dec
mov
das
mov
mov
ja
test
or
jnp
lcall
loop
ja
inc
xor
gs
inc
push
fs
mov
es
icebp
push
dec
clc
lret
fbstp
scas
sbb
je
ljmp
lcall
ljmp
adc
out
sub
jg
jne
jg,pn
jnp
loop
cmp
xorb
stos
test
fldz
scas
cli
incl
ss
or
xchg
cwtl
sub
outsb
fdivrs
push
lds
addb
adc
aad
hlt
pop
cmp
lret
inc
pop
insl
sbb
addr16
dec
jl
mov
adc
sub
add
ficoms
push
jne
inc
pop
outsb
mov
dec
testb
aam
lds
pop
divl
mov
pop
mov
pop
xchg
pushf
mov
call
incl
sbb
inc
lods
imul
ret
fdivr
mov
or
dec
mov
push
scas
incl
scas
repnz
add
add
stos
dec
int3
imulb
jmp
push
sahf
mov
xchg
jb
in
mov
pop
inc
mov
shlb
mov
inc
out
cmp
or
aam
fisubrs
in
das
ds
mov
incl
sbb
cmpsl
lret
push
nop
xchg
dec
stos
jae
mov
int
fimull
out
cmp
movsb
jg
test
fdivr
dec
dec
xchg
sbb
in
jge
pop
scas
fistl
push
cld
xchg
push
shll
or
cmp
jae
andb
fcomps
push
arpl
pushl
test
push
dec
xchg
ja
mov
je
adc
je
dec
ss
pop
adc
call
leave
inc
out
cmp
insl
mov
and
popa
in
dec
and
jecxz
data16
lcall
jle
push
mov
mov
push
push
pop
fsub
cmpsb
lret
mov
hlt
add
inc
das
pop
cltd
push
mov
or
push
fidivrl
test
or
push
and
inc
incl
jae
sbb
fdivs
in
mov
mov
sbb
pushl
adc
push
scas
fbld
mov
or
mov
or
cli
pop
xlat
icebp
xor
fnsave
xchg
arpl
scas
xchg
and
sbb
sbb
xorl
fwait
ds
lcall
mov
or
sub
push
pop
sbb
popa
lahf
out
stos
mov
mov
jne
movsb
les
add
adc
push
jg
bnd
addb
jmp
scas
jb
or
ja
loop
sub
dec
sub
call
or
dec
scas
xchg
es
movsl
sbb
mov
sbb
cmp
lea
xor
mov
fbld
cld
mov
pop
mov
data16
fcoms
mov
mov
push
and
add
icebp
jmp
loop
icebp
addr16
roll
adc
fldenv
and
xchg
inc
adc
mov
or
lcall
add
aas
js
mov
loopne
rolb
imull
cmp
nop
fildl
and
test
or
sub
inc
cli
ss
push
ljmp
sbb
iret
enter
xchg
pop
mov
aas
iret
out
ds
lret
jg
call
push
nop
mov
icebp
hlt
add
xchg
fbstp
call
aaa
insl
jge
jnp
inc
inc
xchg
lds
fwait
and
int3
xchg
rorb
xlat
incl
mov
rcrl
and
cmp
add
int3
sti
mov
lea
lea
movsb
jne
scas
les
pop
hlt
icebp
cpuid
push
cld
in
movsl
xor
out
nop
xchg
xlat
int
les
sarb
add
xchg
cmp
jne
int
incl
push
xchg
or
sub
les
pop
lods
icebp
push
xorb
cmp
leave
push
sub
cli
mov
nop
inc
xchg
incl
aam
fcmovnb
jl
adc
pop
dec
inc
pop
add
loopne
jp
pop
mov
push
and
xlat
nop
push
test
push
scas
xor
cmp
or
test
scas
movlps
decl
shrb
repz
xor
xchg
aas
ret
call
cmp
mov
cld
fcomip
pushl
in
fstpl
enter
fisubrs
jne
outsl
rorl
pop
lcall
cld
mov
out
dec
inc
addl
andb
test
call
mov
mov
stos
mov
cmp
lahf
cli
dec
icebp
push
mov
mov
stos
push
xlat
dec
insb
popa
sbb
jmp
jns
test
mov
in
scas
and
or
lret
je
ficoms
jg
arpl
and
rcrl
ss
test
mov
or
jns
pop
xchg
popf
xchg
inc
jg
xchg
inc
or
out
mov
adc
ficomps
insb
lea
push
add
jg
rol
dec
cmp
fdivs
dec
mov
xor
mov
lds
fwait
mov
inc
mov
xor
adc
leave
imulb
jo
cld
jmp
sbb
and
inc
dec
clc
out
in
mov
fstpt
sbb
cmp
dec
mov
jmp
cmc
adc
lods
ljmp
clc
sbb
jo
mov
pop
loop
or
mov
rcr
lcall
cmp
lock
out
push
bound
xlat
fucomip
dec
addl
dec
es
xor
mov
daa
cmc
push
jbe
xor
mov
mov
incl
dec
jns
loope
out
sti
in
lods
ja
sar
dec
lcall
sub
inc
lods
mov
mov
mov
mov
mov
cs
arpl
jp
mov
push
popa
test
jle
sbb
mov
jg
int3
fst
test
sub
sbb
mov
dec
stos
in
mov
push
mov
adc
inc
push
jbe
xchg
push
xor
stos
jg
sub
xchg
cmpsb
cmpsb
test
test
and
add
sti
mov
inc
jbe
adc
sar
ljmp
fidivs
subb
out
sub
loopne
xor
inc
add
dec
jg
mov
adc
cmp
jmp
adc
mov
push
jbe
push
xchg
mov
cmp
js
pop
enter
xlat
scas
sbb
fsubrp
fstpt
push
pop
rcll
adc
sbb
std
mov
and
sbb
xchg
in
call
pop
call
ficomps
sub
and
repz
mov
push
js
in
sbb
push
inc
lret
mov
ljmp
incl
mov
mov
push
add
stos
jbe
push
jmp
push
cld
dec
mov
cltd
jnp
xchg
je
adc
test
and
loope
ret
lcall
mov
fmulp
add
popl
xchg
imulb
push
test
jle
incl
jge
cmp
out
pop
addr16
sbb
jno
inc
push
xchg
fmull
add
mov
pop
ljmp
mov
dec
in
sbb
xor
jecxz
push
into
pop
mov
mov
insl
dec
fisubrs
and
fdiv
add
mov
lret
rcll
mov
adcb
sub
cmp
xor
pushl
ficoml
push
xchg
int
loopne
jo
aad
leave
insb
or
adc
mov
cmp
mov
jae
and
iretw
xor
cli
sbb
fiaddl
icebp
or
jns
stos
pushl
sub
pushf
xor
mov
mov
mov
out
stc
mov
aaa
sbb
mov
int3
outsb
in
pop
imul
or
ds
movsb
xor
xchg
out
fs
movsb
push
int
or
dec
out
imul
xchg
or
stos
mov
inc
mov
or
mov
test
outsl
int3
fisttpl
int3
dec
push
inc
cmp
les
add
jnp
xchg
call
clc
mov
jb
fnstenv
adc
sbb
add
call
popa
into
fs
mov
mov
fdivrs
inc
push
mov
adc
decl
push
adc
xchg
push
sub
add
mov
imul
cmp
pushl
mov
ljmp
je
daa
add
or
cltd
fs
and
je
decl
mov
ret
mov
jl
sbb
add
lds
push
das
mov
jns
test
call
cmp
mov
into
xor
decl
sub
aad
fsts
mov
or
cmp
mov
push
sbb
mov
pop
shr
rorb
adc
inc
and
repz
sbb
in
lret
sub
mov
inc
mov
lds
fbld
and
fadds
mov
fdivrl
xor
call
aaa
dec
jae
push
cld
mov
push
pop
mov
cmp
cmp
loop
pop
testl
incl
push
les
jecxz
test
cli
or
aam
in
lods
mov
and
mov
mov
xor
lcall
sbb
add
enter
sub
sbb
xchg
cmpsl
mov
test
gs
lock
into
fsub
inc
mov
jmp
movsl
pusha
xlat
pop
inc
xor
add
cmc
call
loop
xlat
sbb
outsb
adc
sub
loopne
jmp
mov
sbb
add
shll
movsl
pushl
addb
xchg
jmp
popf
and
jge
sbb
repnz
xchg
in
inc
or
pop
add
add
push
mov
or
inc
inc
pop
cmp
shl
jo
fstpl
jg
jmp
push
out
dec
scas
leave
cmp
jns
bound
mov
jecxz
sbb
aad
mov
iret
inc
dec
int
rclb
mov
lock
decl
dec
cs
mul
sub
fisttps
sar
test
mov
lcall
dec
repnz
jmp
jecxz
div
sbb
sub
xchg
lds
rcrb
dec
xchg
mov
sub
sbb
push
pop
sub
lcall
insl
pop
mov
test
push
pop
ret
cwtl
mov
decl
or
lret
fldenv
ret
out
test
pop
repz
aaa
mov
decl
dec
push
jle
jl
or
ret
insb
mov
call
jp
fs
push
lahf
fdivrs
mov
iret
loop
movsb
pop
cmp
lret
inc
fs
cmc
push
call
jb
sub
js
jecxz
mov
dec
sub
add
imul
pop
sbb
or
call
pop
movsb
sub
scas
pushf
sbb
ljmp
fsubr
nop
dec
lods
loope
xchg
mov
add
out
mov
and
inc
mov
jne
adc
pushl
scas
sbb
clc
cmp
pop
cmp
jbe
icebp
ss
hlt
hlt
push
mov
xor
mov
push
cmp
loop
pop
outsb
inc
push
rclb
xchg
bnd
fcompl
cmpsb
decl
jmp
sbb
test
int
fnclex
adc
sub
jmp
pop
and
mov
inc
adc
jp
fiaddl
mov
repnz
sbb
lock
jl
add
dec
lea
push
cmp
insl
pop
addl
add
hlt
inc
lea
idiv
das
clc
cmp
je
push
mov
push
push
imul
mov
cmp
xchg
in
mov
imull
in
jmp
xchg
hlt
mov
incl
dec
sbb
jne
inc
call
stos
ret
cmp
hlt
inc
cmp
bound
cs
add
incl
mov
arpl
sbb
cmp
or
sbb
mov
xchg
call
push
xchg
mov
iret
xchg
mov
dec
add
mov
int
in
faddp
xchg
mov
mov
dec
pop
rcrb
sbb
lcall
sub
mov
pop
jno
js
testb
rolb
add
test
in
mov
hlt
mov
xchg
leave
mov
inc
scas
cli
shll
fs
or
lahf
popa
hlt
icebp
cmpsb
or
jle
dec
orb
cli
insb
dec
mov
out
mov
cmp
push
inc
imul
clc
idiv
adc
jp
jg
mov
shl
jo
imul
aaa
xor
jmp
fistpl
xchg
jae
fcmove
sbb
inc
lds
pop
mov
fs
push
lcall
ljmp
fstpt
add
mov
adc
xor
pop
cmp
inc
sub
mov
negl
sub
repz
and
pushl
cld
das
or
test
jg
movsb
push
test
insb
add
nop
jp
add
cmp
sub
jo
inc
into
mov
xor
out
push
push
scas
pop
fs
testl
lahf
aam
push
sub
movsl
mov
jmp
xor
call
sbb
xor
loopne
sub
movl
inc
data16
adc
pop
sti
sbb
fdivrs
jp
sahf
jg
and
scas
or
loop
dec
pop
mov
jns
push
stc
cmp
scas
and
mov
pop
jne
jg
leave
mov
ljmp
mov
test
ret
jp
jbe
push
test
loop
sub
or
fucomp
ret
push
adc
das
cmc
sbb
cmc
mov
add
adc
inc
and
sbb
or
je
jg
fmull
sbb
or
cmp
dec
lods
cmp
lods
fs
repz
pop
leave
dec
out
ljmp
decl
jmp
aam
fimuls
xchg
sbb
enter
pop
fcoms
fstl
or
in
outsl
xchg
shlb
adc
repz
decl
jmp
adc
in
push
or
inc
pshufw
out
stc
mov
mov
xor
push
clc
hlt
adc
adc
push
xor
data16
inc
mulb
int
ljmp
rcrb
stos
inc
push
push
test
fnstcw
incl
ret
jns
mov
decl
pop
push
mov
aas
repnz
sti
jnp
adc
in
cli
pop
das
outsb
dec
ljmp
test
dec
aad
rclb
and
enter
fwait
push
sub
pop
lret
sarb
sub
and
lods
cli
xor
decl
sbb
daa
pop
xchg
fimuls
movsb
cmp
call
xor
inc
push
mov
pop
push
cmp
fsubrs
icebp
xor
sub
mov
sub
std
cli
incl
testb
jecxz
orb
jbe
adc
call
inc
cltd
xor
and
pop
mov
jbe
dec
lds
sarl
mov
or
jo
pushl
xchg
popf
sub
sbb
adc
test
aad
sub
insl
push
mov
ljmp
jmp
aas
lret
push
xor
jge
ds
xchg
cmpsb
xor
inc
add
call
test
mov
add
dec
ret
and
int3
pop
or
xchg
mov
cld
cmp
mov
daa
add
stos
inc
into
fidivrs
adc
mov
add
adc
sub
lcall
mov
sub
je
lahf
jo
rolb
xchg
adc
int
cli
fnstcw
jno
jg
jl
jnp
push
fstpl
out
stc
or
cmp
mov
dec
jae
dec
mov
lcall
sahf
push
xor
out
add
cmpsb
xchg
call
dec
pop
mov
inc
aaa
pop
jae
pushf
sahf
xor
mov
inc
adc
shll
shlb
xchg
mov
push
cmpb
pushl
std
rorb
xchg
jge
mov
nop
pop
dec
cmp
aam
mov
cwtl
jmp
sbbl
adc
sti
stos
mov
test
cli
int3
outsb
inc
pushl
clc
sub
js
testb
clc
pusha
mov
jp
push
out
cli
arpl
mov
test
lret
int3
lahf
das
cld
xchg
movsl
incl
mov
inc
cmp
test
sti
or
aad
or
mov
out
and
ja
lcall
ret
pushl
and
rorb
mov
add
jge
pushl
lret
sub
xor
sub
or
xchg
xchg
lcall
sub
cmc
mov
add
mov
and
jp
mov
mov
dec
fwait
cmp
ja
into
inc
pop
ret
mov
and
out
imul
incl
fxch
add
loopne
push
mov
or
inc
outsb
movsb
shll
pop
xor
call
in
lods
scas
cmpsb
insl
xor
jo
mov
inc
pop
fiaddl
xchg
dec
xchg
outsb
jo
roll
cli
insl
repnz
jnp
mov
mov
lret
aaa
das
cmp
cmc
pop
clc
roll
mov
or
call
sbb
ret
shl
push
jb
mov
test
mov
scas
add
jne
insl
mov
inc
das
cli
data16
ja
mov
lds
jp
ficoms
scas
clc
fdivs
mov
mov
dec
test
pop
adc
pop
push
xchg
jg
lcall
inc
pop
jne
and
scas
jbe
arpl
inc
mov
test
incl
sbb
add
cmp
mov
inc
and
iret
mov
xchg
mov
std
std
ficomps
mov
decl
aam
pop
push
out
scas
jae
push
xor
mov
adc
ficomps
das
and
decl
add
sub
inc
xor
xchg
sub
call
sub
idivb
cwtl
sub
xor
mov
xlat
push
mov
add
mov
and
data16
add
jp
int3
push
iret
push
cs
sub
ljmp
inc
into
popf
xor
or
add
sub
out
xor
inc
inc
jo
push
jge
sub
add
loopne
sbb
or
loop
push
hlt
xor
push
and
mov
push
adc
pop
xor
mov
mov
push
popa
cmp
decl
lock
xor
sahf
or
or
pop
and
loop
jmp
imul
or
add
sarb
dec
inc
stos
jno
aaa
pop
pop
sub
enter
ljmp
pop
dec
cmp
inc
test
std
dec
stos
sub
xor
pushf
cmpl
xlat
in
ljmp
cli
repnz
lcall
out
lret
cmpsb
push
cs
cmp
dec
lret
incl
or
sbb
ss
xor
xchg
scas
mov
adc
push
cmp
ljmp
jbe
insl
xchg
in
xchg
xchg
shll
insl
imul
mov
sbb
fdivs
fcmovnbe
loopne
cmp
pop
icebp
ret
add
lock
int3
pop
add
inc
decl
lock
dec
push
int3
mov
and
pop
addl
lcall
pop
repnz
mov
pop
push
mov
dec
movsl
enter
mov
out
clc
call
ret
cmpsl
jp
jmp
rorb
leave
pop
lods
call
addb
lret
ss
adc
jg
lods
and
mov
and
ds
int3
iret
incl
jmp
jb
pop
das
pushf
or
or
arpl
jno
sub
decl
bound
adc
mov
repz
dec
add
jg
arpl
sub
call
cmp
stos
jl
xchg
les
mov
fadd
jno
int3
cmpsl
xchg
pushl
mov
lret
jp
rcrl
cmp
je
or
lahf
pop
lock
jmp
daa
inc
cmc
test
pop
mov
push
into
in
sub
daa
cmpsl
testb
hlt
inc
mov
inc
into
cmp
mov
pop
adc
call
dec
divb
push
out
add
pushf
add
and
in
aaa
std
dec
push
adc
mov
out
inc
sbb
popf
mov
mov
cmc
test
add
mov
lods
sbb
mov
inc
arpl
pop
xor
jle
pushf
stc
mov
ds
jmp
fadds
pop
jbe
inc
sub
xor
cmp
cmp
nop
mov
jmp
push
jmp
rol
loop
or
push
hlt
test
call
and
jge
pop
or
inc
ret
scas
jnp
adc
jo
jmp
push
clc
faddl
xchg
cli
mov
test
rcrb
sbb
xchg
lret
popa
cltd
les
lock
jle
dec
pusha
leave
dec
cld
in
sti
sub
es
xor
gs
mov
inc
xor
push
jge
mov
data16
xor
sub
jmp
int
repz
loop
push
add
dec
sub
arpl
pop
mov
push
std
sub
cmp
add
jo
call
sarb
subb
cmpsb
notl
and
fidivs
pop
es
lcall
cmp
mov
push
stos
mov
pop
test
fcmovne
int3
sahf
mov
or
ljmp
cmpsl
push
dec
add
fwait
xor
mov
addr16
cmp
pop
hlt
mov
dec
adc
sti
outsl
push
jg
insl
nop
loop
pop
push
dec
dec
lcall
sbb
call
push
sbbb
mov
sub
jmp
mov
pop
stos
fnsave
sti
adcl
daa
cmp
push
cmp
pop
ljmp
dec
hlt
xor
push
imul
mov
iret
cli
pop
inc
xchg
int
cmp
pusha
push
xchg
push
inc
mov
int3
sbb
push
dec
ds
push
jg
push
sub
aas
lea
icebp
jmp
pop
in
or
lret
loop
ljmp
ljmp
mov
orb
adc
sbb
rolb
and
jecxz
mov
jne
lock
loope
lret
int
fsubl
lods
test
inc
aas
lods
mov
call
movsb
xchg
push
imul
lret
addr16
mov
outsb
sub
xlat
aas
inc
mov
mov
lcall
inc
sbb
xchg
sub
pop
jbe
loope
in
pushf
jle
scas
test
add
inc
adc
incl
andl
movd
enter
leave
movsb
gs
sti
jl
sbb
ljmp
and
fwait
mov
pusha
ss
fistl
test
dec
int
jp
loop
inc
dec
pushf
call
or
mov
sub
jmp
call
cmpsb
ret
aaa
das
pop
push
call
pushf
dec
mov
out
jbe
in
arpl
push
sbb
adc
jecxz
decl
call
fwait
jp
or
stos
dec
pusha
mov
sahf
into
repz
xor
adc
out
pop
push
pop
out
dec
cli
aas
stc
scas
nop
aad
mov
shrl
pop
push
mov
mov
mov
ljmp
xorb
loope
jp
mov
das
fldt
popf
mov
sub
ret
xor
mov
orb
loope
inc
sub
fistl
inc
mov
or
fdivs
jae
adc
or
mov
mov
fdivl
aam
or
mov
xor
insb
pop
cmp
jle
pop
scas
adc
rcrb
xor
outsb
add
inc
aaa
xchg
aad
cmp
inc
int3
sub
cwtl
fdivrl
cmp
insl
cs
push
inc
stos
and
sub
lea
or
pop
ljmp
clc
das
push
push
inc
or
xor
push
push
dec
sbb
lcall
call
ljmp
clc
std
cs
pusha
fcoms
scas
mov
add
gs
jno
call
in
cmp
out
pop
insb
xchg
xchg
aad
ljmp
cmp
icebp
cmp
sbbb
pop
inc
cvtps2pd
loope
mov
xchg
subb
in
inc
call
mov
fbstp
mov
jecxz
leave
sbb
sub
mov
in
sub
add
push
adc
fwait
stos
xchg
aas
mov
mov
cmp
sub
adc
cli
push
outsl
push
int
adc
xlat
sbb
shll
mov
ljmp
dec
mov
dec
cmpsl
sbb
sub
mov
and
cwtl
or
push
call
popf
pop
loop
mov
lcall
mov
cltd
mov
popf
inc
pop
mov
out
xchg
enter
lods
enter
dec
sbb
lcall
cmp
adc
loopne
lods
int
mov
loopne
in
lahf
lock
dec
lcall
dec
popf
push
mov
inc
shr
jns
and
lods
cltd
add
jb
xor
das
jmp
mov
cmpsl
sub
mov
jmp
out
inc
mov
add
pop
jl
jp
out
cmpsl
add
mov
pop
push
push
mov
sahf
inc
cmpsb
pop
pop
jecxz
pop
push
add
push
fistps
pop
dec
mov
js
and
repnz
arpl
subl
sub
call
testb
push
jns
movswl
push
sub
pop
add
mov
dec
fildll
fnstenv
outsb
xchg
lock
push
dec
orl
or
add
and
ljmp
sub
stos
add
gs
scas
cmp
sahf
mov
push
test
out
pusha
mov
or
push
test
mov
mov
mov
out
sbb
add
ljmp
pop
push
fiaddl
mov
xor
xchg
and
call
movsl
or
xor
mov
add
rcrl
nop
rcr
sub
sbb
add
outsl
fisttpll
sbb
mov
push
loopne
push
or
lcall
pop
jge
lock
pusha
andb
push
out
or
jg
daa
fcomps
xchg
mulb
push
xor
xor
hlt
call
xor
sub
mov
sbb
sbb
je
or
mov
add
in
mov
dec
ja
clc
ljmp
and
dec
or
cmp
xor
xor
popf
dec
adc
xchg
and
outsl
stos
data16
lds
mov
jle
pop
inc
cmp
fimull
fisubl
inc
mov
outsl
cwtl
mov
mov
imul
push
adc
cmpsl
stc
imul
jge
insl
pop
or
push
xor
ljmp
adc
push
ljmp
cmc
std
stos
fidivs
xor
pushl
mov
sub
sbb
ljmp
pop
sub
hlt
shlb
decl
dec
mov
idivl
fsubl
cltd
xor
jmp
cmp
mov
icebp
pop
sti
jg
mov
xor
xchg
pop
sahf
cmpb
pop
shlb
or
filds
sbb
inc
lods
mov
jnp
addr16
push
dec
lcall
pop
orb
and
or
in
push
sub
test
ljmp
repnz
mov
sub
pop
in
or
and
xor
xor
int
call
popa
cltd
xchg
sub
addl
aad
pop
jae
push
shl
and
mov
inc
inc
mov
loopne
pop
mov
dec
fwait
xchg
push
inc
mov
outsb
rcrl
jl
je
cmpb
jmp
sahf
call
jl
jne
ret
mov
rcrb
add
ret
push
push
imul
pushl
push
sarl
fbld
cli
arpl
pop
mov
das
sar
test
mov
sub
cmp
cmp
mov
cmp
loop
lds
dec
mov
sub
add
mov
sub
fiaddl
adc
and
call
jl
daa
repz
cmc
loop
sub
cld
jmp
loop
sti
jnp
xor
test
sub
lods
inc
push
pop
sub
cmpsl
or
push
jmp
cmp
cmp
pop
fxch
pop
clc
mov
lret
and
jg
jecxz
cld
mov
xchg
ret
mov
jge
push
sub
push
jnp
das
cli
aaa
lods
test
adc
add
cltd
fidivrs
insb
mov
hlt
cld
sub
or
test
jge
out
insl
xor
sub
adc
lret
adc
mov
nop
jg
add
loopne
cmp
popf
icebp
jmp
rcrl
push
sbb
lret
lcall
shl
loope
mov
orb
inc
xor
push
mov
add
call
push
or
sub
push
fnstenv
cld
aad
pushl
or
mov
int
dec
add
and
dec
data16
jmp
add
cmpb
pop
fmul
call
dec
pop
fs
mov
call
adc
xor
push
loopw
dec
mov
xlat
sahf
into
imul
out
mov
jb
dec
push
mov
cmp
fcomip
pushf
cmp
or
xchg
mov
dec
pop
inc
dec
mov
call
xor
and
fcomps
out
mov
jmp
sbb
insl
fisttpll
xchg
xchg
mov
js
int3
cmp
js
insl
mov
inc
mov
jp
gs
dec
sahf
dec
jno
jbe
push
pop
dec
sub
inc
clc
mov
je
sub
jne
test
es
push
nop
and
call
sbb
xor
test
je
push
sbb
hlt
mov
lods
jmp
testb
mov
mov
ret
das
inc
pusha
pushf
shr
xor
push
aam
data16
lcall
lcall
push
dec
xor
outsb
push
stos
ja
repnz
bound
mov
jns
mov
std
ja
lret
fimuls
fbstp
inc
or
cmp
pushl
inc
aaa
bound
adc
aam
movsb
aas
sbbb
or
ljmp
rcrb
push
adc
dec
mov
xchg
jge
gs
mov
inc
mov
pop
clc
jl
fisubrl
push
out
icebp
mov
lods
push
push
push
insb
jmp
mov
mov
inc
mov
test
adc
xor
cmp
sbb
sbb
adc
aam
xlat
pop
out
add
mov
pushl
jo
int
add
add
xchg
pop
push
xlat
xchg
or
sti
pop
push
lea
mov
pop
call
or
stos
into
mov
jl
push
pop
dec
add
aas
mov
sub
sbb
decl
sub
pop
popa
push
add
sbb
cmc
jg
ljmp
lea
frstor
xchg
mov
sbb
out
push
mov
jle
pop
icebp
decl
sub
xchg
mov
mov
sbb
fwait
sub
mov
incl
dec
push
in
push
mov
and
fdivs
jmp
sbb
cmp
adc
fwait
and
xchg
shrb
std
sub
sarb
loopne
std
incl
ds
jl
cmpsb
mov
rcll
jne
loop
mov
xchg
arpl
add
mov
cli
mov
dec
add
xchg
ret
pushl
lods
dec
sbb
lea
ss
repz
mov
scas
and
jno
cmpl
add
arpl
in
jbe
dec
pop
cmp
ret
and
push
mov
mov
and
popf
add
inc
sbb
out
pushl
dec
jns
fiadds
lcall
lcall
insb
sub
lds
arpl
adc
lret
and
call
mov
push
inc
cmp
mov
outsl
stos
xor
mov
push
push
cmp
jle
xorl
jl
divb
mov
outsb
cmp
ljmp
cmp
mov
inc
pop
pop
mov
adc
push
negl
loopne
in
xor
sbb
aam
mov
fldl
mov
inc
lods
stc
cmpsb
dec
aaa
xchg
xor
xor
inc
cltd
push
or
scas
cli
lcall
fisubl
js
pusha
insb
aaa
or
and
xor
push
or
jns
xchg
fistpl
push
mov
mov
push
scas
sbb
sbb
and
mov
jge
pop
andl
or
cwtl
call
adc
sti
popf
sahf
es
lock
mov
movsl
cmpsb
push
mov
clc
dec
and
imul
jmp
sub
jge
xchg
mov
inc
cwtl
and
popa
dec
lods
mov
fst
scas
push
repnz
pushl
sahf
fbstp
adc
decl
test
add
cld
jbe
inc
mov
aam
pusha
mov
sar
mov
dec
inc
xchg
jne
dec
cmp
pushf
pushl
shll
or
nop
je
add
sbb
inc
adc
leave
pop
mov
shl
divl
pop
cld
pop
pusha
sub
dec
les
cld
mov
fldt
jmp
cmp
dec
mov
and
mov
jo
jns
mov
decb
pop
push
pop
jg
shrb
or
adc
pushl
loop
sub
cmp
sbb
jmp
lds
cmpsb
fwait
enter
mov
xchg
xor
pop
test
push
loope
bound
ss
mov
cmp
movsl
adc
ljmp
sbb
mov
adc
call
xchg
stc
repz
mov
lea
add
mov
lcall
lret
inc
loop
jne
popa
jg
push
xor
cmp
hlt
cmpsb
aam
dec
test
jmp
xchg
in
fidivs
mov
push
int3
cmpsb
inc
cli
mov
movl
jg
inc
xor
icebp
stos
jp
mov
shll
adc
mov
ljmp
dec
push
cli
out
leave
dec
sbb
dec
inc
xor
jge
fmul
mov
lahf
bound
xchg
push
dec
jl
xor
xor
fimull
scas
andb
lcall
aam
xor
fs
stos
add
in
pusha
jmp
add
lock
and
incl
push
pop
push
fildll
fcom
ja
icebp
sbb
jg
test
bound
jno
ds
and
pusha
enter
test
decl
and
outsb
out
fdivr
es
movsb
and
stos
jns
test
shl
mov
push
int3
clc
stos
pusha
jg
loopne
lahf
sub
or
lcall
mov
dec
dec
cmpsb
xchg
popa
popa
pusha
nopl
add
repz
ljmp
dec
int
adc
xor
mov
xchg
testl
adc
sbb
jecxz
js
lods
daa
test
jle
cltd
add
std
ljmp
cmpsl
imul
cmp
fstps
iret
inc
sti
sahf
stos
call
cwtl
jmp
pop
adc
fldcw
xchg
fisubs
mov
add
mov
incl
lahf
test
and
mov
cli
pusha
mov
sbbl
popf
push
pop
xor
pushf
data16
ret
sti
divl
call
sahf
inc
dec
sbb
dec
dec
ds
loop
mov
or
jge
jno
fisubl
ds
cmp
ja
sbb
mov
xor
cmp
cmc
xor
outsb
cmc
lret
call
cmp
repnz
loop
addl
fistl
jecxz
lcall
hlt
jbe
ficoml
test
aas
xor
pop
cmpsl
and
subl
fnstsw
pusha
lret
clc
mov
imul
pop
mov
fstpt
imul
cmp
lea
inc
rcll
jecxz
sub
call
sbb
les
fndisi(8087
aam
xchg
or
incl
lods
sti
cmp
icebp
jecxz
insb
pop
sub
xorb
jmp
loopne
ljmp
inc
addr16
push
jmp
adc
xchg
daa
lcall
nop
xor
aam
push
mov
mov
rolb
shlb
fdivrs
jg
divl
and
in
add
sbb
lock
inc
xchg
xchg
mov
decl
adc
lods
inc
xchg
orb
iret
je
ret
andb
icebp
push
aam
mov
cli
add
mov
outsl
aas
and
gs
lahf
incb
lcall
cmpsb
add
cli
mov
scas
mov
fmuls
mov
shlb
xchg
aaa
pushl
pushl
or
push
pop
fcompl
sbb
insb
shrb
mov
pushl
pop
dec
xor
mov
inc
or
or
aaa
dec
adc
xlat
iret
cwtl
loopne
push
pop
out
mov
ds
sub
rorl
mov
lds
sub
das
rclb
ljmpw
and
mov
into
mov
dec
lcall
cs
or
into
addr16
pop
shrl
push
xchg
testb
jge
adc
adc
adc
or
test
jbe
inc
jge
dec
jmp
decl
pop
add
xchg
icebp
jo
xor
imul
das
icebp
pop
js
jmp
out
je
adc
push
in
push
or
loopne
outsl
push
dec
add
cmp
xchg
fiadds
mov
decl
and
xchg
dec
mov
mov
cmp
cltd
xor
cmp
push
out
loope
incl
repnz
hlt
lcall
jne
and
mov
outsb
in
stos
dec
loop
mov
mov
sbb
adc
push
pop
sbb
pusha
sub
dec
mov
decl
jb
jne
outsb
dec
popl
xorb
bound
scas
data16
ljmp
adc
clc
inc
jecxz
ret
sub
lock
mov
ljmp
xchg
or
lds
aas
mov
sub
aam
mov
inc
sub
sub
sub
nopl
test
das
ret
out
mov
dec
push
ret
jle
sbb
pushf
dec
xchg
mov
ret
mov
pop
xchg
mov
mov
push
jmp
cmp
out
jp
dec
mov
inc
ret
scas
xrelease
pop
sbb
test
cmp
jle
pop
add
and
sbb
inc
iret
mov
andl
imul
test
pop
subw
push
lock
mov
fistps
movsb
lods
movb
cmpsb
or
jnp
icebp
sub
and
cs
inc
scas
or
pop
pop
adc
std
in
inc
ret
movsb
jne
xor
mov
lret
sbb
clc
add
cmp
cmp
add
outsl
pop
jmp
sbb
pop
aaa
or
shll
sub
cltd
or
inc
xor
mov
dec
mov
jo
movsl
int3
movsb
fistpl
fimull
fwait
rol
mov
mov
inc
test
mov
jmp
test
stc
cmpsb
xchg
add
pop
sub
popl
repnz
cmp
lock
int3
sbb
pushl
sahf
xchg
jnp
movsl
fists
scas
pop
sub
mov
cmp
push
inc
mov
outsl
mov
sbb
test
sub
jns
and
shrl
sti
incl
std
pop
std
shl
fidivl
add
mov
enter
sub
incl
xchg
cmp
pop
std
pop
jno
jmp
fs
ds
push
push
int
shll
jg
lods
into
insb
xchg
push
xor
mov
out
add
mov
pop
pop
xchg
cmp
decl
pop
sbb
aam
int
mov
int3
in
mov
xor
adc
incl
incl
lret
jnp
xor
pop
or
test
ds
out
fmull
jb
loop
dec
or
add
loop
pop
jnp
call
add
sbb
mov
aas
adc
ficoms
and
mov
aam
leave
decl
inc
incl
jge
sub
xchg
and
cltd
cmp
jecxz
mov
mov
cmp
into
lahf
push
cmpsb
sarb
cmp
push
pop
andl
fdivrl
add
inc
daa
lea
mov
push
jecxz
in
cmp
push
ja
lcall
dec
cmp
sahf
gs
pop
ret
sahf
fwait
push
pop
inc
push
mov
sbb
cmpsb
sbb
dec
dec
jmp
cmp
rolb
out
pop
mov
inc
adc
sub
xchg
imul
pop
sub
in
add
or
inc
push
leave
inc
cld
inc
mov
jmp
jl
push
pop
or
fiaddl
cmp
or
fimuls
test
ljmp
dec
jp
cmpsb
add
adc
scas
daa
mov
movsl
mov
pushl
sbb
imul
adc
jno
ljmp
fs
repz
sbb
out
aaa
lret
pushl
addb
sbb
fmuls
ffreep
mov
shll
cli
decl
lcall
cld
hlt
mov
push
pop
sub
jge
dec
and
mov
mov
cmp
cmp
dec
sbb
test
out
fisttpll
loope
adc
fbstp
ja
ret
push
andl
call
jns
mov
push
jnp
std
mov
fstpl
into
or
sub
jb
xor
out
call
inc
xor
into
jne
add
push
adc
scas
jne
int
nop
add
jmp
jg
movsb
dec
pop
pop
add
add
out
mov
xor
sbb
sbb
jg
fsubs
repnz
lret
fwait
ret
push
popf
cs
or
arpl
push
scas
cmp
mov
es
cli
ljmp
sub
sbb
mov
mov
out
aas
add
mov
test
popa
shrb
les
mov
mov
idiv
mov
or
cmpsb
cld
cmpl
and
clc
pushl
in
push
dec
test
add
pushl
movsb
pop
mov
xchg
loope
outsb
jmp
sahf
cmp
dec
in
dec
push
fcompl
in
jns
in
stos
push
int3
inc
imul
loope
int3
fisttpl
push
and
and
std
lcall
xchg
and
ljmp
dec
xor
sub
mov
or
aas
dec
lcall
es
test
repnz
mov
or
add
das
inc
jecxz
out
jnp
sub
dec
jbe
adc
xor
cwtl
cwtl
pop
lcall
fists
push
dec
negl
sub
cmp
outsb
xlat
stc
in
fmull
xor
decl
or
and
mov
and
clc
mov
mov
fdivr
xor
push
xchg
add
mov
xchg
ds
push
jno
iret
push
sub
fimuls
jns
pushl
mov
add
cmp
mov
inc
xlat
xchg
adc
and
sar
out
mov
addr16
xor
outsl
jae
pop
dec
loop
xor
mov
js
inc
inc
push
fstl
sbb
sbb
outsb
ficoml
lret
lock
fiaddl
add
jg
movsb
mov
stos
xchg
popa
nop
adc
adc
mov
aam
sub
or
dec
push
sub
into
pop
jg
sub
jle
xchg
sbb
mov
cmp
xor
cmpsb
mov
fisubs
hlt
mov
pop
cs
sub
ljmp
test
cwtl
mov
les
ljmp
ljmp
scas
pop
add
cmpb
fdivrl
fdivrl
lcall
jmp
aad
and
push
jne
mov
jmp
mov
hlt
push
aas
ds
mov
sub
mov
adc
add
pop
test
fildll
jle
sub
aam
loopne
push
inc
rorl
xor
ljmp
movsb
out
cmc
out
or
mov
outsb
arpl
xor
lret
dec
scas
int3
ret
ljmp
jecxz
mov
shrb
dec
mov
ss
mov
xor
clc
lahf
dec
sbb
fldcw
add
iret
sti
sbb
sti
daa
pop
sbb
sub
lcall
pop
mov
stos
repz
bound
push
cwtl
loope
pop
repz
es
xor
push
ljmp
lret
xchg
and
pop
insb
negl
rclb
xor
scas
rolb
mov
mov
push
ss
ss
sbb
incl
rolb
out
dec
nop
insb
movl
inc
or
ljmp
cs
imul
push
dec
call
jl
inc
cs
xchg
std
sbb
stc
bound
mov
call
repnz
pop
inc
and
and
pop
mulb
in
mov
mov
aas
clc
pusha
cmp
adc
sub
jbe
sbb
dec
pop
loope
loope
xchg
in
sub
mov
mov
popa
lret
sbb
lcall
pop
jno
xlat
test
sbbl
jmp
pop
xor
in
cld
sbb
pop
loopne
mov
dec
mov
int3
cmp
stos
mov
enter
js
pop
push
jo
into
mov
dec
cmp
sub
pop
pushl
mov
dec
mov
lock
inc
jg
out
mov
or
jg
cmpsl
aad
enter
add
pop
pop
mov
add
fcomip
lcall
and
jb
mov
mov
loop
sub
add
incl
int3
loopne
in
inc
jmp
mov
push
cmc
xchg
adc
mov
insl
movsl
les
push
mov
outsl
lahf
push
adc
shlb
or
insl
pop
nop
cmp
pusha
and
std
cltd
movl
pop
pop
call
cmp
jb
daa
lock
push
ret
insl
add
ljmp
aaa
pop
ss
and
cld
adc
mov
nop
pop
sbb
adc
pop
push
in
es
push
les
jg
pushl
stos
aaa
xchg
push
push
xchg
lret
sbb
xor
and
das
sar
js
add
add
and
push
pop
xchg
jbe
or
call
cld
xorl
clc
lods
mov
and
mov
adc
xchg
cltd
or
inc
or
pop
ljmp
sub
adc
int
fdivrl
outsl
out
outsl
push
jecxz
arpl
or
mov
mov
mov
push
scas
fiaddl
jae
mov
add
idiv
jmp
lret
or
jmp
mov
dec
cmp
stos
les
pop
xchg
loopne
fdivrl
mov
out
jo
mov
xchg
lahf
pop
jbe
fidivs
fwait
sbb
jl
mov
pop
pop
loopne
mov
push
adc
mov
cmpl
ficoms
jge
in
subb
lds
scas
cli
incl
sub
jle
mov
mov
mov
clc
call
jmp
loopne
sahf
mov
orl
mov
pop
fnsave
outsb
in
stos
outsb
ret
decl
cltd
xor
sub
pop
in
sbb
out
das
cmp
rcrl
inc
or
lods
js
test
fdivs
mov
and
out
lods
loope
push
mov
ljmp
je
adc
xchg
pop
sarl
repz
cltd
enter
add
jp
adc
xor
arpl
jne
in
mov
lock
into
sub
xor
das
cli
xchg
mov
ljmp
pop
orl
fists
inc
xor
decb
imul
nop
mov
add
rcrb
cwtl
dec
sub
or
sbb
ljmp
bound
xchg
or
aad
jmp
rcrb
inc
xor
repz
int
jnp
push
mov
loopne
mov
add
jae
addb
cld
push
or
ljmp
movsb
adc
addr16
xor
mov
or
sbb
stos
mov
ljmp
js
movsl
xor
cmp
lods
mov
push
hlt
cmp
dec
movsl
incb
pop
cmp
jmp
adc
mov
pusha
das
in
pop
sahf
ja
xor
leave
mov
mov
xor
mov
mov
lcall
out
out
pop
jno
das
adc
popa
mov
add
and
xor
xchg
fwait
daa
add
decl
mov
inc
push
into
in
push
cli
mov
orl
jg
jmp
loope
push
lcall
xchg
adc
scas
add
addr16
dec
shl
adc
adc
stos
ljmp
lcall
sbb
imul
daa
pop
mov
or
fs
jb
jg
stos
and
mov
out
adc
lcall
pop
xchg
outsl
mov
decl
aad
mov
mov
inc
xlat
push
lcall
push
call
jge
loopne
hlt
cmp
mov
push
out
mov
xchg
xchg
pushl
xlat
stos
lahf
ret
jle
popf
add
cmc
cmpsb
std
xchg
jnp
mov
outsl
lods
daa
pusha
pop
mov
pop
shlb
cmp
push
xor
push
lcall
popa
xor
pop
sub
dec
push
or
cmpsb
fs
mov
xchg
aam
leave
mov
loope
push
sub
test
call
push
loope
jmp
insl
mov
sub
sarb
adc
mov
pop
orb
inc
jmp
std
incl
es
sbb
push
and
cld
push
cmc
sub
sbb
ljmp
dec
cld
xchg
out
sub
push
out
enter
das
inc
jns
sbb
decl
leave
loop
cwtl
add
jl
lret
xchg
sbb
mov
sti
shr
xchg
xchg
test
cmpsb
ds
jmp
mov
ret
pushf
sbb
andb
push
movsb
or
ljmp
lods
inc
lahf
aam
inc
cmp
aaa
cwtl
jp
mov
mov
lret
xchg
repz
rcr
xchg
nop
and
fmuls
push
and
das
and
sahf
sub
les
pop
in
mov
in
incl
les
js
lcall
mov
rcrl
xor
xor
iret
sub
mov
mov
aas
lods
movsl
enter
jmp
xor
divl
push
scas
dec
aaa
sahf
into
es
add
nop
ss
cltd
loope
and
fs
leave
in
cmp
movsl
addr16
aas
js
mov
adc
xor
dec
pop
cmp
mov
jecxz
xor
int3
js
adcl
lods
cli
decl
cmp
pop
lret
orl
push
mov
out
jo
shr
adc
gs
inc
push
mov
pushl
insb
fistpll
mov
sbb
nop
add
sbb
mov
cmpsb
lcall
scas
cmp
or
add
push
mov
bound
aaa
rolb
xor
ror
andl
ja
faddl
add
sub
sbb
decl
push
fisttpll
xchg
test
rorb
rclb
data16
sbb
inc
mov
jns
test
jns
xor
arpl
ficompl
sbb
adc
dec
stos
xor
fdivs
mov
mov
ja
and
jno
mov
xor
inc
out
pushl
sub
mov
in
stos
jb
push
arpl
add
push
cmpsl
aaa
jg
aas
addr16
sbb
jmp
push
push
or
and
mov
mov
sub
push
jno
frstor
push
sbb
ljmp
mov
jae
pop
faddp
aas
mov
loopne
fs
push
jmp
fs
aas
dec
push
dec
pushl
add
mov
call
aas
icebp
clc
sub
mov
jbe
xchg
rolb
decl
jge
jp
cs
insl
ss
stos
fwait
jge
xchg
jnp
mov
push
or
pusha
sbb
dec
jg
jmp
hlt
adc
push
jl
int3
movb
int3
insb
daa
subl
incl
sbb
popf
fisubrl
rorb
outsl
repz
sbb
rcr
mov
ljmp
in
outsl
lret
enter
mov
adc
add
sub
mov
dec
shrl
sub
pushf
scas
clc
jmp
pop
pop
or
mov
andl
and
cmp
sub
insl
pause
dec
test
pop
scas
cmp
fisubrl
cmp
lods
push
sub
call
stos
xorl
test
or
jp
sub
dec
add
decl
or
and
add
sahf
xorb
decl
cli
fdivrs
pop
xchg
sub
aad
in
jnp
rcll
adc
sbb
push
outsb
fiadds
mov
xor
call
jg
aas
xlat
jecxz
fsts
outsb
leave
setg
pop
sbb
jg
jb
xor
mov
in
mov
pop
idivl
leave
cmp
pop
sbb
mov
outsl
ljmp
mov
gs
xchg
cmp
call
add
insb
je
pop
arpl
xor
in
sti
addr16
adc
aas
push
repz
fisttpl
call
nop
dec
pop
add
inc
in
mov
cmp
notl
in
xor
mov
dec
xchg
or
call
add
inc
insl
shll
ljmp
xlat
xor
insb
jg
add
sub
jg
mov
push
cltd
push
push
ror
or
jg
mov
cmc
pop
sbb
mov
mov
mov
dec
or
aam
sbb
cmp
fstp
sub
ffreep
jne
in
dec
xor
rcll
xlat
cvtpi2ps
cmp
dec
pop
pop
lea
or
fimull
mov
neg
xchg
in
jo
cltd
add
std
loopne
adc
decl
dec
rcr
ljmp
mov
mov
testb
js
insl
mov
or
mov
or
push
xor
pop
adc
mov
negl
decl
outsl
mov
xor
mov
test
mov
call
and
hlt
sbb
mov
in
aas
movsb
out
outsb
insb
push
mov
ljmp
dec
int3
cmp
inc
push
dec
dec
add
inc
xor
xchg
repz
out
mov
pop
xor
nop
sub
rcl
decb
push
lcall
xor
push
cmp
mov
pop
xchg
mov
jp
mov
enter
incl
pxor
in
repnz
bound
lret
jne
mov
incb
pop
pop
cli
inc
mov
pushl
fwait
pusha
add
scas
xor
call
js
or
mov
adc
mov
ret
dec
xchg
clc
ljmp
aam
test
xchg
mov
or
jmp
mov
test
adc
clc
mov
push
mov
mov
sarb
or
push
add
lea
dec
outsl
cmpsl
repz
inc
int
push
cltd
push
xlat
fists
dec
mov
xchg
xchg
xchg
push
jmp
test
outsb
mov
test
cmpsl
lea
adc
dec
inc
inc
or
sub
dec
sbb
push
stos
incl
dec
jmp
es
jae
and
cs
stos
int3
xor
mov
cld
sbb
int
cmp
das
cli
xchg
pop
sub
popa
and
ret
mov
lock
dec
cli
subb
mov
hlt
lret
mov
cmp
fwait
mov
ljmp
ret
mov
or
inc
lcall
adc
icebp
rcrl
jmp
push
lods
mov
nop
mov
ljmp
dec
in
loope
cmpsb
scas
mov
sbb
sub
stos
jmp
sbb
jge
repnz
and
ds
mov
lahf
ja
mov
cs
mov
add
xchg
lcall
fwait
in
adc
dec
lock
mov
mov
jns
nop
inc
xlat
int3
inc
scas
cld
or
lret
ret
lea
cmp
pusha
icebp
out
pop
inc
cmpsb
sar
std
mov
das
lret
and
xchg
dec
jb
loopne
jnp
sbb
clc
decl
xchg
cmovb
xchg
aam
mov
jmp
stos
in
jo
xchg
pushl
cld
cmp
mov
inc
dec
inc
call
pop
je
mov
mov
es
or
aad
and
jb
std
jb
sbb
cmpsl
mov
ret
pop
jns
pop
push
loop
vunpckhps
loopne
mov
out
ret
decl
adc
les
push
dec
mov
cs
mov
push
fdivrp
jmp
add
xor
sbb
pushf
xor
adc
leave
mov
pop
adc
xchg
mov
push
pop
dec
jne
fiadds
push
sbb
call
xchg
or
mov
testl
fwait
test
fmuls
sarl
ja
add
neg
mov
roll
mov
dec
loopne
call
fdivl
inc
inc
mov
fwait
push
mov
inc
mov
jge
mov
pop
add
icebp
pop
cmpsl
mov
xlat
jmp
jae
mov
out
cli
sbb
mov
inc
push
xor
scas
and
aaa
cld
lcall
das
dec
add
sub
push
adc
xor
pusha
das
movsl
dec
push
and
js
adc
inc
add
mov
sub
jnp
rcrl
cmp
mov
pop
lcall
jmp
ret
icebp
sub
into
push
ret
inc
out
lcall
rclb
stos
mov
iret
pop
pop
popa
fdivp
adc
sti
inc
sub
xor
push
sbb
dec
cmp
jnp
movsb
lods
add
cmp
add
inc
push
into
lcall
mov
pop
xor
test
in
sbb
decb
and
push
adc
fsubrs
aas
popf
notl
test
call
insb
push
cmp
jge
pop
cmp
dec
cld
lcall
ffree
out
out
es
sahf
int
sbb
mov
jg
fisttps
jmp
jne
ret
adc
scas
insl
jmp
inc
loope
sbb
dec
push
push
int
pop
lret
xchg
mov
stos
gs
mov
sbb
rorl
jns
mov
imul
es
cmp
sar
bound
les
or
in
mov
icebp
cmp
jmp
sbb
in
sbb
mov
lcall
insb
sbb
cmp
out
or
xchg
or
or
xchg
ss
mov
mov
mov
sbb
jmp
and
cwtl
divl
jne
rcrl
jg
xchg
into
loop
push
xchg
push
add
cmp
lcall
call
out
and
aas
add
adc
nop
xor
xchg
and
push
outsl
faddl
inc
pop
sub
rcrl
popf
mov
dec
sub
repz
inc
test
jg
xor
lods
adc
ds
in
push
outsb
nop
dec
jmp
cld
jae
sub
stos
sti
inc
jg
mov
fstl
pop
jl
jno
push
cmp
retw
mov
dec
lea
xchg
es
push
pop
pop
pop
ret
adc
push
daa
inc
test
test
push
ret
hlt
outsl
mov
cmp
mov
test
lret
adc
mov
out
add
xor
aaa
add
lret
in
lcall
dec
add
cmpsb
jo
loope
pop
lea
adc
rol
sub
add
pop
xlat
xor
xor
scas
inc
jno
inc
lret
iret
xchg
stos
call
filds
int3
add
push
shlb
hlt
mov
mov
out
and
hlt
sub
daa
mov
int3
pop
adc
jecxz
mov
or
test
dec
dec
out
std
das
sub
xlat
jl
mov
xor
xchg
xchg
adc
in
push
inc
jb
stc
test
push
test
test
xchg
fcmove
je
aam
cmp
inc
push
test
ja
jg
mov
sarb
mov
sbb
add
pop
cmp
imul
cld
mov
and
loop
fsubrs
sub
xchg
xor
call
lods
sub
push
mov
push
stc
clc
adc
push
das
xchg
push
pop
pushf
in
icebp
loop
call
adc
jmp
call
enter
add
call
jno
dec
ss
into
popf
ret
mov
pop
popf
sbb
popa
lock
lcall
add
enter
sbb
mov
jecxz
jns
out
mov
push
xchg
ret
sub
cli
xchg
icebp
mov
mov
fs
cmc
in
int
jnp
lods
test
ss
sbb
jl
xchg
add
std
mov
jg
lret
lods
xchg
or
clc
and
sub
mov
ljmp
outsl
sahf
stos
aad
jge
xchg
sub
or
std
cmp
mov
addr16
jne
jmp
cmp
in
imul
mov
lds
fildll
in
les
sub
jmp
cmp
loop
lds
jl
clc
pushl
pop
sbb
pop
jae
mov
in
xchg
incl
ja
adc
jne
clc
and
scas
or
cmp
arpl
sarl
outsl
or
xchg
add
scas
cmp
out
stos
mov
cs
mov
jae
jb
cld
nop
popa
divb
test
fdivs
pop
dec
scas
or
repz
jg
add
lea
roll
stos
cs
mov
cmp
cmpsb
call
addr16
fwait
decl
sbb
and
nop
push
dec
jo
lcall
xor
jmp
in
mov
repz
sahf
aam
daa
mov
call
fsts
loopne
xchg
rorb
push
sbb
insl
cli
mov
lods
dec
adc
loop
cmp
in
fbld
ret
and
xchg
scas
mov
sti
pushl
add
xor
out
cli
ja
adc
xlat
mov
jbe
test
int
ljmp
mov
sti
repnz
mov
push
inc
shr
sub
mov
pushf
lret
in
hlt
sbb
call
mov
ljmp
out
push
shll
add
decl
pop
jns
xlat
dec
scas
fdivrs
pop
or
jb
xchg
pusha
mov
lods
ret
pop
push
push
xor
jecxz
jg
mov
inc
popa
mov
add
das
push
sub
mov
mov
inc
jns,pn
ds
xchg
test
ljmp
stc
cmc
push
mov
aaa
pop
jmp
pop
popl
inc
leave
das
cs
xor
hlt
xor
rorb
sbb
lcall
sub
xchg
imul
or
sbb
das
push
mov
daa
xchg
jmp
cmp
into
or
mov
jg
enter
pop
pop
mov
scas
mov
std
aad
adc
aaa
add
mov
sub
pushl
test
mov
sub
mov
adc
and
pop
add
sub
push
or
stos
pop
lods
xor
outsl
push
mov
jo
pop
inc
int
hlt
lret
lods
int3
mov
incl
push
daa
jnp
mov
or
push
jne
test
mov
mov
icebp
xchg
sbb
outsb
adc
lahf
inc
mov
shll
int3
pop
hlt
adc
cs
decl
movsl
jno
mov
jmp
mov
iret
movsb
das
enter
mov
sbb
xlat
clc
ljmp
push
outsb
dec
push
mov
pop
cmp
in
push
add
push
imul
sbb
es
cs
les
pop
ljmp
jno
and
lcall
pop
push
std
out
punpcklbw
push
add
jns
ret
lods
pop
sbb
incl
stc
push
popf
in
cltd
sbb
inc
sub
mov
xchg
xor
adc
in
aas
lods
adc
ja
cld
ljmp
popa
push
aaa
outsl
add
cmp
lcall
stos
xor
mov
mov
mov
int3
mov
call
xlat
ljmp
insl
clc
negb
mov
aad
lods
mov
int3
mov
inc
inc
pop
sub
decl
sbb
inc
add
repnz
sub
icebp
inc
push
sti
add
incl
aam
dec
pop
or
inc
mov
xchg
xchg
je
pop
sahf
xor
incl
test
add
aam
push
sbb
mov
jmp
sti
sarb
mov
outsl
cmp
mov
mov
ja
testb
cmc
lret
pop
xchg
ljmp
pushl
lret
shl
out
es
xchg
fcmovu
inc
and
sbb
xchg
dec
dec
dec
lods
fildll
xchg
mov
mov
fwait
rcrb
sub
out
add
jb
cli
jg
adc
xor
dec
sbb
dec
mov
sbbb
ljmp
nop
sub
dec
test
fcoml
mov
dec
mov
lds
imul
cmpsb
scas
mov
pushl
mov
adc
and
clc
jge
fwait
rcrl
sbb
adc
cmpsl
inc
xchg
or
sbb
cmp
fisubl
mov
xor
lods
fiadds
test
and
cld
fisttps
inc
mov
arpl
mov
sti
decl
mov
insl
loop
movsb
scas
dec
inc
cmp
push
and
aam
jmp
int
or
ljmp
or
sbb
dec
pusha
into
inc
or
jg
jl
stc
loop
jmp
push
mov
xchg
xor
sti
enter
aas
pusha
pop
mov
lret
mov
incl
pop
inc
stos
ljmp
pop
add
mov
dec
pop
imul
or
mov
fsubrl
add
out
dec
call
mov
xor
movsb
cmc
fs
or
adc
sbb
imul
cmp
loop
call
pushf
cmp
xor
adcl
xchg
outsl
sub
pushl
mov
sub
icebp
pop
xor
push
pop
jge
outsl
js
leave
pop
jecxz
shl
call
dec
in
push
xor
sarl
dec
jnp
popf
pop
scas
pop
xor
mov
bound
lcall
jne
fmull
cmpsb
sbb
sbb
shrl
xor
mov
sbb
jmp
sub
push
jle
adc
push
jmp
xlat
fiaddl
cmp
movsl
ja
lcall
cmp
stos
sub
xor
dec
and
push
notb
sub
loopne
inc
popa
or
pop
stc
sbb
mov
or
inc
pop
out
inc
mov
and
pushl
mov
enter
movd
cwtl
dec
scas
clc
fildll
lret
into
mov
mov
nop
mov
jo
push
cmpsl
ss
xor
adc
sar
incl
sub
lret
arpl
sub
lods
stos
in
cmpsl
out
aam
subb
decl
out
inc
jmp
lret
jb
mov
enter
ljmp
sub
call
xor
jge
push
mov
negl
movsl
sti
push
pop
mov
and
ret
jns
mov
adcb
insl
test
push
push
jg
mov
push
push
add
shll
dec
fimull
sbb
push
mov
decl
inc
pusha
loop
rolb
lock
and
scas
add
mov
and
push
rorl
aam
ss
jno
sar
cmp
out
ret
push
ficomps
sub
push
sbb
pop
decl
rcll
sub
jecxz
dec
sar
mov
mov
add
inc
aam
jae
loope
ret
mov
adc
std
push
fwait
decl
jmp
ss
sti
pop
test
adc
imul
fwait
popa
jne
cmp
mov
pop
jo
fcmovb
ds
pop
xor
dec
out
cmp
fbstp
hlt
jbe
mov
mov
mov
out
lods
pop
insl
cli
bound
insl
sti
cmp
cmpsb
sbb
jbe
mov
cli
jg
mov
loope
test
adc
clc
push
jp
or
addr16
mov
mov
mov
xor
mov
mov
imul
ja
push
ss
jl
pop
nop
mov
inc
in
aas
add
xor
sti
repnz
sub
mov
pop
fimuls
shlb
push
or
pushf
cmc
call
aam
call
jmp
mov
cmp
pop
ret
push
jae
jp
xchg
push
nop
mov
fldt
test
in
sbb
push
out
out
jl
sub
adc
fisttpl
incl
das
add
out
add
iret
loop
push
pop
push
xor
add
hlt
adc
dec
cld
decl
jg
repz
sub
inc
hlt
mov
aam
lret
mov
ja
test
xor
xor
xchg
push
shll
sahf
cmp
ljmp
jge
mov
xchg
xchg
dec
std
in
call
and
add
in
sub
sub
bound
jl
imul
mov
ljmp
mov
add
pop
mov
cli
cmpsb
ljmp
clc
test
add
in
sbb
xchg
leave
fiaddl
xor
or
mov
inc
pushf
pop
dec
jmp
dec
inc
test
hlt
inc
lds
lret
mov
out
dec
adc
call
sub
test
dec
adc
pop
leave
adc
or
out
add
jmp
xchg
or
jns
mov
loope
ljmp
sub
or
sbb
loop
mov
and
inc
push
mov
lcall
pop
loop
ljmp
into
cmpsb
dec
xorl
dec
jl
push
mov
or
mov
push
adc
popa
cmp
ds
push
adc
decl
rcrb
gs
in
arpl
jge,pn
inc
and
aas
push
or
mov
in
mov
adc
addb
ljmp
jns
push
sti
dec
cmp
mov
arpl
movsl
pushf
test
inc
ljmp
clc
mov
dec
jmp
push
movsl
addr16
mov
call
sub
test
cmp
xchg
sub
add
pop
mov
dec
add
arpl
inc
or
sub
cmp
add
bound
push
lret
mov
and
faddl
cld
in
clc
nop
lahf
mov
call
arpl
xor
aam
xchg
std
mov
lock
ljmp
arpl
iret
cmp
xchg
jg
push
and
mov
lcall
ss
imul
sub
movsl
aam
rclb
push
xchg
movsb
out
pop
jne
cmp
pushl
mov
fadds
push
lret
int3
fnstcw
decl
outsl
ds
mov
mov
jecxz
subb
inc
addr16
mov
jg
sbb
mov
xor
sti
cmpsb
ja
outsb
fcmovb
mov
ljmp
xchg
insb
jne
and
sub
fwait
call
push
xor
mov
ret
ficoml
mov
push
add
in
mov
leave
jo
negl
js
jno
push
aad
decl
shrl
push
es
add
push
add
cs
lcall
jnp
jg
loopne
lret
dec
inc
adc
inc
clc
insl
addr16
sbb
and
shll
cs
ljmp
jnp
and
mov
arpl
aas
sub
mov
sbb
call
test
mov
xchg
leave
inc
out
add
dec
pushf
scas
dec
sbb
jl
out
arpl
lock
mov
xor
fs
lods
dec
or
jp
decl
sbb
push
loop
xchg
jl
repnz
push
push
mov
stos
xchg
popf
mov
rolb
dec
imul
pop
lock
int3
xchg
subl
pop
cltd
loopne
mov
call
cli
ljmp
jge
cmp
mov
inc
shlb
in
mov
sbb
incl
aam
test
add
xor
loopne
mulb
inc
dec
or
adc
lcall
dec
adc
ds
sub
rcrl
pusha
pop
adc
mov
pop
jp
fwait
sbb
insl
adc
add
mov
xor
dec
call
pushl
add
add
sbb
mov
idivl
stos
pop
mov
jo
std
and
das
sar
mov
push
sahf
sub
pop
adc
lods
call
jne
inc
jl
push
outsl
shr
jne
inc
sbb
jge
hlt
pop
imulb
adc
sbb
aas
aad
int
cmp
stos
xor
mov
xchg
dec
repz
aaa
pop
ljmp
pop
mov
jg
aad
mov
xchg
or
iret
pop
pusha
ds
cmpsl
insb
in
ljmp
movsb
dec
jbe
dec
shrl
xlat
and
pushl
adc
cmp
insl
inc
or
mov
push
ret
enter
sub
sar
fiaddl
mov
repz
push
popf
call
test
sbb
lahf
repnz
jmp
sbb
pop
ds
outsb
mov
gs
cmp
call
mov
mov
bnd
mov
or
hlt
adc
loope
push
aaa
push
adc
lds
mull
pop
enter
push
les
decb
pop
pusha
ret
outsl
add
mov
cmpsl
lret
in
pop
xor
cmp
mov
mov
shlb
mov
and
pop
inc
insb
aad
rorb
sbb
or
decl
fwait
scas
ffreep
xlat
imul
into
cld
and
and
jmp
push
mov
insb
adc
mov
or
cwtl
fxch
sti
les
mov
xlat
jo
push
dec
adc
mov
xchg
fmul
popf
jns
push
ljmp
rorl
pop
loopne
xor
mov
pop
mov
cltd
int3
aad
stos
cmpsl
ljmp
pushf
xchg
xchg
in
jmp
es
dec
in
add
cmp
cmpsl
xchg
shlb
call
lds
mov
fwait
lods
imul
cli
adc
dec
dec
inc
push
gs
inc
mov
mov
adc
iret
lods
xchg
call
jg
sub
fadd
cmp
sahf
or
popf
mov
or
xor
call
sub
cmpsb
mov
mov
outsl
and
inc
xor
or
fisttpll
sbb
push
nop
cwtl
ljmp
fsubs
out
xorb
sub
jecxz
insl
add
hlt
incl
inc
scas
pop
add
push
das
pusha
or
xchg
inc
shl
mov
mov
xchg
mov
fisubl
push
ss
add
fbstp
aam
je
mov
mov
jno
xchg
jg
cli
xchg
sub
xchg
mov
in
lret
cmp
scas
mov
or
fsubl
call
jns
cmp
mov
lret
cmp
add
jecxz
ret
mov
xor
mov
test
xchg
cmp
call
cmp
pusha
or
dec
or
pop
subl
push
adc
call
call
out
jo
inc
pop
dec
addl
loop
xlat
mov
imul
out
std
decl
mov
loop
sbb
nop
add
mov
in
mov
and
adc
call
or
dec
cmp
mov
mov
decl
sub
push
cmp
mov
hlt
enter
add
mov
mov
jl
mov
push
add
mov
mov
aad
in
add
jmp
xchg
repnz
push
pushl
into
ja
push
mov
inc
jg
pop
es
lcall
es
jae
shrl
dec
xor
in
push
add
jge
out
push
stos
push
or
lods
movsb
cmp
mov
pushl
les
cmp
mov
mov
add
scas
les
das
in
fs
jmp
or
pusha
std
pop
lahf
xor
js
sub
pop
in
das
xchg
cmp
inc
cli
shll
out
xchg
lahf
xchg
adcb
jo
leave
mov
outsb
or
sbb
pushl
bnd
out
icebp
and
sub
or
mov
hlt
stos
jae
xchg
mov
jo
call
outsl
dec
fsubrs
gs
jb
cmpsb
ret
adc
xchg
cs
jle
stos
hlt
pusha
dec
push
aas
xor
push
mov
jmp
adc
xor
into
inc
push
push
xor
push
repnz
inc
pop
adc
pop
movsl
or
mov
and
sub
loop
mulb
mov
or
jno
fsubrp
lea
lcall
mov
flds
orb
jae
sub
sbb
fisubs
imul
repz
jb
lret
xor
dec
int3
jmp
sqrtps
pusha
sahf
and
inc
cltd
add
bound
xchg
push
xchg
adc
jne
fimull
or
out
in
mov
mov
mov
xchg
adc
decl
sbb
pop
rclb
pop
jns
cmp
cli
push
adc
cli
call
mov
sbb
push
xor
fsubr
lods
adc
push
inc
inc
outsl
orb
cmp
inc
cmp
jg
inc
es
mov
inc
push
pop
fistpll
xchg
xchg
or
call
cltd
adc
push
fildl
test
test
lret
cmpsl
push
push
xchg
imul
xchg
out
pushf
or
xchg
xchg
je
mov
in
filds
add
push
pop
inc
push
std
push
loop
ret
fdivr
imul
lods
lahf
mov
outsb
iret
loopne
mov
mov
sbb
shrb
pop
push
data16
and
jmp
lea
push
mov
sub
lock
insl
fidivrl
pop
nop
jg
pop
loopne
xor
in
adc
and
push
lds
sub
fwait
incl
push
shr
pop
mov
ja
mov
xchg
push
add
adc
pop
jmp
cli
jbe
inc
xor
pushfw
lods
aas
jmp
lods
jg
mov
pop
hlt
cmpsb
xor
movsb
lock
sub
sahf
loope
pop
into
xor
jmp
sbb
inc
fbld
rcrb
lea
inc
jns
push
xlat
hlt
jno
jg
sbb
mov
outsl
gs
rolb
fidivl
mov
cmp
adc
adc
and
add
cmp
dec
pop
sbb
mov
and
and
jb
push
pusha
cld
jmp
imul
dec
cmp
pop
lods
sbb
mov
jmp
std
jg
adc
cmp
push
sbb
loopne
jnp
pushl
and
imul
pop
into
or
pop
sbb
outsb
sbb
rcl
cltd
push
mov
xor
pushl
andb
test
mov
mov
push
push
jbe
add
int3
pop
mov
jle
mov
cmpsl
add
xor
pop
mov
or
or
cmc
sbb
xor
jmp
decl
sub
mov
xchg
notb
sbb
mov
cli
sub
cltd
xchg
sbb
mov
or
leave
push
push
pop
jae
jns
jmp
xor
mov
je
sbb
adc
adc
lcall
test
xchg
push
push
int3
mov
sub
hlt
lret
or
leave
fmull
or
sub
push
and
jle
insb
push
decl
pop
lods
push
xchg
jb
sbb
aas
jnp,pn
rcrb
ds
mov
jecxz
ret
and
ljmp
mov
xor
idiv
push
outsb
test
mov
repz
mov
or
es
out
stc
sub
rol
mov
xor
pop
imul
call
je
dec
js
in
inc
add
mov
mov
jb
mov
call
cltd
cs
push
fidivrl
adc
mov
mov
js
mov
hlt
mov
mov
fnstenv
mov
lods
sub
jg
inc
nop
fldl
xor
mov
pop
popl
orb
mov
aaa
les
movsl
jne
pop
lret
outsb
arpl
lods
mov
dec
fdivl
jge
sbb
out
ss
ljmp
ja
inc
jns
int3
jecxz
mov
add
mov
nop
pop
sbb
stos
dec
cmp
cmp
call
fisubrl
push
jle
jp
sub
or
xchg
movsb
ret
enter
jne
adc
decl
inc
sahf
or
mov
roll
push
dec
pop
repz
movsl
push
push
js
mov
lcall
ja
stos
out
rolb
fildl
test
in
mov
pop
ret
ljmp
xor
cmp
or
sub
ja
inc
js
dec
lods
dec
mov
in
incl
stos
rcll
pop
pop
mov
lret
outsb
scas
add
pop
movsl
inc
inc
inc
xchg
sbb
vsqrtsd
outsb
gs
and
cmp
scas
repnz
sbb
inc
sbbb
loope
mov
ljmp
xchg
inc
push
daa
movsb
mov
push
mov
lods
pop
sbb
call
loopne
dec
in
popa
jg
cli
mov
daa
cmp
cmp
jbe
push
mov
test
in
pop
lock
dec
ret
mov
inc
or
xlat
or
pop
cmc
pop
repnz
ret
aaa
std
sub
jnp
fcomps
call
sub
stc
aas
lods
arpl
aam
ljmp
jno
es
out
clc
add
sbb
lcall
sarl
xchg
dec
shl
flds
inc
notl
mov
imul
enter
repz
call
xchg
push
out
jge
aaa
sti
rcl
aas
aas
sbb
cmpsb
and
and
push
push
xchg
jg
mov
dec
push
insb
cmp
jmp
cmp
mov
fsubs
inc
mov
add
xor
stc
pop
mov
cmp
or
dec
loope
aaa
data16
dec
mov
mov
inc
mov
mov
ljmp
loope
ljmp
jecxz
jp
mov
nop
xchg
adc
pop
idiv
jg
pushf
das
repnz
pop
pop
push
mov
daa
xchg
roll
push
and
in
mov
aas
outsb
or
push
lds
mov
aas
pop
lods
jg
xor
scas
push
or
jl
iret
lahf
insb
push
add
cwtl
les
pop
add
aad
leave
dec
popl
incl
jg
cld
jle
jg
jmp
inc
xchg
mov
sbbl
lods
and
test
dec
cld
pushl
cwtl
cwtl
loop
test
out
inc
adc
lahf
push
push
lahf
aas
pop
inc
mov
mov
scas
pop
inc
cmpsl
xchg
xchg
push
sbb
frstor
fwait
cmp
call
add
sub
xor
pop
clc
pusha
xchg
cmpsl
filds
or
imul
pop
or
mov
sbb
loope
and
cmp
call
call
jecxz,pn
sbb
push
fidivl
xchg
mov
mov
decl
or
jne
ljmp
xchg
dec
jp
inc
fsubrs
data16
pop
pop
xchg
push
imul
aad
clc
cmp
mov
aaa
mov
stc
mov
scas
clc
jmp
cmpsb
mov
lahf
sbb
push
das
lds
xor
pop
cmp
mov
lods
and
out
clc
incl
push
add
cmp
jl
add
enter
mov
ja
push
test
cld
push
cltd
sub
and
imul
frstor
mov
mov
push
mov
lret
test
lret
dec
aam
xchg
pushl
xchg
jge
mov
shll
shll
loop
inc
ja
add
add
stos
cmp
xor
fdivr
shrl
jnp
mov
mov
cld
add
subb
add
push
imul
push
imul
jg
mov
jnp
inc
cmpsl
aaa
adc
nop
les
and
mov
cmp
je
ljmp
fcomip
and
and
xor
sti
aaa
jge
xchg
jmp
push
mov
repnz
aaa
cmpb
inc
clc
in
inc
mov
incl
inc
push
push
dec
mov
pop
out
movsb
mov
inc
hlt
cmovg
mov
fwait
shlb
dec
xor
test
call
cltd
sub
sub
cmp
enter
mov
mov
out
and
popf
sub
fisubrl
sub
dec
inc
adc
xor
ljmp
or
mov
jb
and
xchg
cmp
mov
pop
add
inc
push
ss
mov
jnp
fidivs
push
and
jecxz
mov
mov
add
push
pop
cmp
movsl
movsb
mov
jmp
add
add
inc
push
lcall
ljmp
loope
push
ficoms
jle
testl
in
adc
cmp
mov
mov
push
inc
addl
repz
mov
jecxz
mov
ja
ret
mov
icebp
pushf
push
mov
daa
lret
call
mov
repz
out
and
loopne
mov
pop
ss
jp
negl
ss
inc
inc
sahf
push
add
shlb
or
movlps
xchg
incl
sub
add
lahf
add
enter
notb
mov
cmp
mul
jmp
dec
cmp
push
pop
in
jg
push
push
mov
pop
push
lcall
in
int
repz
lcall
or
mov
scas
sbb
loope
lds
jo
in
or
inc
push
lret
popa
mov
dec
jle
or
loope
sub
cmpsb
out
negb
sub
jae
pusha
jno
pushf
decl
shrb
pop
and
push
mov
leave
int
testl
mov
and
shll
adc
fnsetpm(287
add
mov
sub
mov
xor
mov
pushf
test
out
cmp
jmp
xlat
mov
pop
out
inc
mov
sbb
and
push
push
mov
xchg
js
inc
cmp
push
inc
cmp
test
push
dec
sahf
repz
inc
out
sub
push
icebp
mov
fs
insl
outsl
inc
clc
add
mov
in
sub
scas
punpcklbw
cmp
push
stc
ljmp
adc
inc
movsb
pop
push
jae
cmp
and
clc
lcall
in
inc
and
out
xlat
into
stos
cmpsl
push
xor
and
cs
shrl
rcrl
and
incl
xor
shrb
lods
mov
fstpt
pop
ljmp
ret
inc
jp
dec
cmpl
mov
out
lds
jmp
sbb
push
xor
xchg
jb
cmpsl
add
filds
pushw
loope
decl
xor
adc
or
lret
or
popa
cs
in
dec
data16
jg
aad
sbb
or
or
add
and
loopne
fadds
out
inc
jne
call
aad
xchg
jl
mov
mov
mov
repz
lret
jecxz
xchg
filds
jmp
pop
loopne
test
and
lcall
jno
add
or
jbe
stos
in
xchg
mov
dec
jg
ret
cli
pop
pushl
and
ret
inc
jl
sub
sub
cmp
cltd
push
pushl
cmp
fsubl
push
push
dec
mov
mov
ja
sbb
fisubl
mov
ljmp
jmp
pop
and
ljmp
xchg
adc
cmp
sub
mov
adc
call
push
jecxz
imul
gs
push
jg
or
jno
jns
and
loope
fcmovnbe
cmp
rol
jle
decl
scas
dec
mov
mov
rol
pop
sbb
sub
xor
int3
inc
in
jae
and
dec
sbb
jle
repz
push
out
imul
mov
test
push
hlt
insl
nop
adc
lcall
jg
popa
je
fdivs
mov
test
sbb
xchg
loope
lods
inc
xlat
xor
mov
mov
inc
scas
loop
mov
xlat
dec
pop
ret
daa
xchg
dec
je
jo
push
jecxz
incl
mov
ja
outsl
and
xor
movsl
int3
cmp
lcall
cli
stos
aaa
adc
xchg
mov
lods
clc
jecxz
in
mov
pop
mov
incl
test
mov
jb
xor
pop
adc
divb
or
inc
pop
add
arpl
ficoml
jge
lret
inc
out
data16
cwtl
dec
mov
test
add
ja
xor
pusha
dec
sbb
bound
adc
lcall
or
and
mov
push
in
popa
fsubr
xchg
mov
mov
xchg
mov
movsb
fwait
cmpsb
mov
icebp
and
call
sti
cli
jle
push
xchg
mov
clc
test
cs
push
sub
or
jle
and
ret
ljmp
ljmp
pop
jns
clc
inc
jecxz
scas
xchg
jle
push
push
mov
mov
leave
push
sar
sub
xor
mov
add
pop
call
or
xchg
loop
dec
in
pop
popf
mov
loopne
pop
or
cmpsl
xchg
in
cmp
inc
jle
ret
test
xor
dec
inc
fsubrl
hlt
in
adc
inc
repz
lock
inc
iret
sub
or
push
data16
inc
insl
jmp
sub
jmp
sti
cmp
xor
and
loopne
cli
cmp
cmp
clc
mov
clc
jmp
push
cmp
pop
xlat
and
js
movsb
movlhps
add
jmp
sahf
jne
in
fcoms
adc
xchg
rcll
dec
add
xlat
sub
sbb
ljmp
and
fnsave
adc
sbb
sub
xor
sbb
adc
xor
sar
pushl
inc
std
out
leave
test
mov
cmpsl
pop
xchg
pop
pop
adc
flds
icebp
ljmp
xchg
adcb
clc
pusha
pop
shll
pop
pop
incl
adc
mov
xor
jg
jmp
into
jmp
pop
std
rol
jecxz
mov
pop
mov
add
into
sub
mov
fbstp
leave
arpl
xchg
push
jo
jg
push
adc
out
ret
xchg
decl
ljmp
dec
clc
ja
push
nop
insb
cmpsb
or
fisttpl
repnz
icebp
xor
in
dec
movsb
movsb
mov
cmp
popf
mov
or
pop
cli
mov
cmp
cltd
xchg
incl
pop
add
movl
int3
dec
mov
jecxz
imul
mov
incl
jl
jmp
loopne
adc
inc
in
icebp
dec
dec
cmp
mov
sub
sbb
mov
shr
out
aaa
roll
sahf
lock
nop
insl
lods
cmp
call
jne
nop
cmc
jg
sbb
lock
push
dec
xor
test
mov
mov
lcall
push
mov
movsb
mov
test
jp
rcll
call
stos
pop
ljmp
dec
xchg
imul
jnp
outsb
or
mov
sub
add
ljmp
or
dec
dec
pushf
cmp
mov
sar
jl
scas
sub
or
nop
clc
nop
arpl
jp
mov
aad
sti
loop
push
insl
lret
mov
lock
fidivrs
mov
pop
imul
out
in
ret
ljmp
daa
call
mov
xor
dec
cmp
jno
movsb
out
leave
and
mov
jmp
repz
xchg
imul
dec
add
mov
pop
adc
gs
or
lcall
ljmp
push
rcrb
frstor
imul
mov
lahf
sbb
ljmp
xchg
sub
push
ss
negb
push
add
das
jl
stos
sbb
push
call
jmp
rcrl
fdivrl
aad
into
ret
or
jge
or
sbb
xor
in
decl
lock
push
rcrl
mov
mov
and
incl
sbbl
movsl
xchg
adcl
and
fsts
call
sub
repnz
pop
sub
js
bound
add
inc
mov
imul
sar
ljmp
test
pop
jno
jp
divl
inc
add
add
sti
xchg
jb
or
nop
jne
pop
xabort
sub
adc
cmp
rcl
test
icebp
lcall
adc
hlt
cmp
mov
lret
ss
rclb
cs
call
data16
jo
fcmovnbe
and
pop
fdivr
rcrb
and
or
call
cli
xchg
pop
popw
jb
cmp
pushl
mov
mov
adc
cli
ljmp
loopne
mov
xchg
inc
inc
add
sbb
lret
pop
push
stos
dec
cmp
icebp
sub
sti
test
xchg
lock
add
jle
add
call
es
imul
add
lds
dec
xchg
aam
sbb
lcall
pop
pop
push
sti
int
out
xchg
loopne
lahf
hlt
cmp
lea
pop
lcall
das
jb
or
jbe
sub
fisttpl
or
mov
movsl
lret
push
dec
in
sarb
ljmp
out
mov
repz
mov
faddl
sti
pop
mov
adc
out
mov
sahf
rorb
jecxz
jns
mov
xchg
and
stc
in
clc
andl
sbb
jb
and
pop
lret
jne
mov
adc
ljmp
jne
and
std
adc
scas
adc
or
jl
and
jge
int
cmp
ljmp
and
pop
jecxz
xchg
cmpsb
outsl
test
aas
cmp
int
mov
and
pop
lods
pop
mov
jge
loopne
call
push
lcall
psubb
sbb
fimull
dec
xor
std
jmp
repnz
das
movb
and
outsl
decb
clc
mov
insb
mov
lods
leave
sti
imul
lcall
std
cld
add
jo
cmp
jno
pop
cli
cltd
inc
cmp
movsl
dec
ljmp
outsb
sbb
xchg
fists
rolb
mov
or
pushl
xor
sbb
mov
pop
imul
xor
add
mov
incl
inc
stc
out
clc
xchg
add
test
sahf
sub
rorb
push
fs
call
stos
push
pop
pop
and
jne
jl
rol
in
and
pop
leave
add
ljmp
aaa
mov
outsb
repz
mov
das
pop
imul
add
dec
sbb
fwait
xlat
dec
mov
pop
cmp
stos
fidivl
rcrl
loopne
jbe
aam
xchg
adc
dec
out
cli
lret
adcl
add
daa
mov
xor
cs
ljmp
repz
lock
mov
std
cmp
and
js
jo
xor
pop
out
orb
mov
inc
mov
outsb
sub
addr16
fcomip
pop
xchg
adc
jmp
adc
aam
mov
loopne
shlb
out
hlt
mov
pushl
out
jne
loope
jo
cmp
and
xorb
gs
and
inc
xchg
sar
lcall
in
fmuls
add
xor
fwait
daa
or
mov
push
imul
int
es
adc
xchg
inc
cwtl
jecxz
mov
testl
xchg
shrb
adc
sar
lcall
decb
add
repnz
in
shrb
pop
xchg
mov
leave
jl
push
ret
fildl
mov
pop
push
sti
lcall
jo
mov
das
push
xchg
mov
inc
dec
popa
and
aas
or
incb
je
sub
pushf
push
push
mull
pop
ret
jmp
imul
add
mov
push
imul
jg
rorb
loop
das
lret
push
aad
push
dec
insl
jg
lods
cld
and
dec
jno
popa
gs
mov
add
hlt
arpl
jnp
sub
mov
jp
add
es
nop
decl
sbb
jns
in
cwtl
scas
enter
pop
and
lret
push
ja
mov
jg
mov
ljmp
out
jns
inc
insl
les
iret
bound
cli
mov
jg
mov
decl
cwtl
test
call
add
iret
in
mov
and
cwtl
ret
std
add
push
pop
ret
fstpl
add
int3
fwait
ljmp
icebp
sub
sub
repz
data16
lcall
out
cmp
jae
pop
rclb
cmp
xchg
jbe
push
frstor
jne
mov
scas
pusha
idiv
mov
xor
xor
cli
pop
push
sbb
pop
mov
icebp
int
sar
pushl
adc
adc
mov
divl
xchg
push
ret
cmp
idivb
xchg
mov
cltd
enter
jno
imul
sti
les
push
clc
jecxz
mov
pop
in
dec
pop
sub
arpl
jae
mov
pop
fcomip
inc
and
jnp
pop
in
insl
inc
shrl
lcall
pop
push
scas
sbb
pop
add
xchg
mov
jo
out
out
mov
sarl
xchg
lds
push
mov
push
pop
stos
sti
lahf
repz
push
popa
js
inc
cmpsb
pop
and
out
outsl
insb
pop
lret
clc
mov
incl
mov
bound
sub
jne
int3
in
mov
mov
cld
decl
pop
dec
lock
dec
lds
mov
jg
xchg
test
fcmovnb
pop
les
shlb
sub
pushl
test
fistps
jo
ljmp
icebp
mov
dec
inc
mov
in
lcall
sub
addr16
push
xor
test
mov
movsl
add
lcall
imul
lods
xor
sub
ljmp
lods
push
mov
xor
xchg
cmp
hlt
pop
push
add
cwtl
jbe
mov
call
sub
mov
inc
jnp
subl
sahf
sub
sar
fwait
dec
inc
mov
inc
lret
fimull
jg
xchg
jg
movsb
repz
pop
push
mov
cmp
mov
shlb
jb
or
dec
xor
incl
push
inc
add
aas
or
jp
decl
mov
jb
lods
pop
fildll
mov
imul
lcall
inc
xchg
leave
js
push
pop
je
add
loop
arpl
jne
cmpsb
fidivrs
jnp
outsl
call
es
mov
popa
lret
mov
mov
aam
aas
int
addr16
ss
or
mov
cmpsl
push
fs
cmp
and
adc
lock
xchg
mov
stc
cmp
mov
ljmp
out
mov
mov
mov
xchg
aas
cs
fs
mov
jle
jb
mov
ljmp
cli
jns
lret
lret
stc
movsb
icebp
push
mov
fadd
mov
cmp
add
mov
in
and
mov
les
movsb
sub
dec
in
imul
dec
cmp
jmp
and
gs
push
or
ret
in
xor
push
js
pushl
sub
lret
mov
cmp
pushf
and
aad
adc
mov
into
scas
sbb
jle
inc
or
add
call
sbb
mov
lret
shll
push
addr16
pop
or
sub
out
call
dec
jmp
lahf
inc
mov
dec
sub
outsb
enter
sub
xchg
data16
adc
mov
pop
cmpsb
adc
fdivrl
into
loopne
add
mov
pop
in
cli
ljmp
and
movsb
mov
or
jns
xchg
loopne
mov
mov
xchg
movsb
fs
mov
mov
movlps
jns
adc
mov
sbb
dec
adc
in
jmp
mov
mov
push
rcrb
xor
dec
or
out
pusha
daa
push
fcomip
ljmp
pusha
adc
xor
mov
fbld
add
movnti
fists
xlat
inc
inc
nop
sahf
or
pushl
mov
push
mov
push
sbb
iret
mov
lea
fidivrs
lcall
rol
xor
push
sarb
jg
decl
inc
movsb
repnz
push
jb
sub
es
pop
pop
xor
cli
mov
cs
jecxz
jg
jle
xor
aam
test
add
enter
cli
dec
out
bound
f2xm1
rorl
cmc
pop
xchg
repz
mov
jo
cwtl
shrb
ljmp
push
in
mov
or
insb
push
insl
fs
mov
outsl
pop
jbe
shll
aad
call
xchg
pop
mov
shl
xchg
xchg
mov
sahf
mov
push
fs
jmp
inc
test
mov
jmp
fsubl
cmp
fdivr
incl
outsb
or
pop
icebp
inc
jle
fsub
insl
and
inc
sbb
ret
lret
or
test
ret
shll
imul
enter
mov
mov
xor
jmp
xorl
mov
test
push
nop
dec
ret
lahf
lahf
test
out
ljmp
negb
push
sbb
enter
pop
jl
cmpsl
mov
xchg
inc
imul
or
call
leave
call
loopne
push
movsl
loop,pt
xor
popa
mov
push
mov
xor
aas
negb
mov
sar
shl
push
mov
push
lods
loopne
mov
fdivrp
clc
pop
jp
call
outsb
outsl
into
and
mov
sti
sbb
outsb
insb
mov
and
orl
mov
dec
pusha
mov
mov
test
test
mov
push
mov
mov
and
jg
xchg
fldenv
jp
in
lea
jp
mov
lods
jnp
pop
jne
adc
mov
or
sub
clc
lcall
popf
das
int3
mov
xchg
fisttpll
jno
sub
into
or
incl
inc
dec
frstor
or
sti
dec
and
ret
add
add
loopne
mov
fiadds
dec
insb
sahf
and
pop
or
icebp
std
push
sarb
push
lods
push
leave
outsb
fiaddl
pushl
mov
clc
xor
or
icebp
pop
ja
mov
push
leave
push
cwtl
push
imul
fucomi
testl
add
cmpsl
dec
mov
call
xchg
add
pop
daa
jne
lret
cld
jb
pushl
sub
xor
rcrl
adc
in
scas
rcll
les
repz
jmp
inc
mov
mov
pop
sub
xor
xchg
lcall
iret
lahf
mov
lret
cli
es
or
xorb
ficomps
add
mov
incl
dec
pop
cs
push
subl
repnz
test
scas
inc
ret
sbb
cltd
and
incl
test
and
mov
dec
dec
aam
daa
das
pop
rcrb
divl
cmpsb
push
insl
mov
lahf
sub
xchg
movsl
xlat
test
and
sbb
xor
xchg
aas
lcall
pop
pop
xor
mov
mov
ret
mov
pop
cmp
lods
and
fisubrl
inc
mov
andl
lock
inc
iret
mov
pop
jg
push
pop
cmpsb
mov
dec
imul
dec
nop
xchg
xchg
aad
clc
out
mov
pushl
movsl
fstl
cmp
nop
push
mov
jnp
jecxz
dec
test
cltd
adc
adc
push
push
cltd
cmp
push
adc
jbe
bnd
mov
mov
stos
decl
into
push
lret
mov
and
scas
mov
add
dec
push
decl
inc
pusha
mov
test
popa
fisttpl
pop
xchg
inc
mov
into
push
cmp
adc
mov
and
fst
push
in
insl
jmp
frstor
sti
push
or
outsb
arpl
ror
jno
insb
dec
adc
mov
jbe
nop
imul
incl
ja
subb
repnz
mov
push
stos
sbb
sbb
aas
stos
fidivrs
jecxz
jmp
mov
xor
outsb
sbb
ljmp
xor
ljmp
add
imul
mov
mov
iret
in
push
in
mov
jns
lcall
inc
ljmp
std
lcall
je
mov
repz
push
daa
cli
cs
dec
add
lds
js
or
cmp
ljmp
mov
mov
pop
sub
mov
pusha
or
call
mov
add
pop
rorb
mov
ljmp
dec
and
fbld
mov
rcrb
imul
jecxz
aad
cmp
add
push
in
dec
popa
mov
cmovo
mov
add
not
or
inc
pop
dec
notl
push
mov
push
inc
stos
sub
hlt
and
inc
insl
mov
pushl
shr
lret
pop
sbb
push
mov
jns
cmp
in
sahf
pop
sub
ret
xlat
ja
ljmp
enter
lods
cmp
mov
jecxz
ljmp
lock
pop
nop
out
cmp
adc
or
lret
sbb
aaa
lcall
jmp
out
pop
mov
xchg
repz
push
pop
sub
pop
clc
pushf
fwait
enter
mov
scas
pop
movsb
and
rcll
jle
pushl
lods
aam
pop
ficoms
je
mov
call
pusha
repnz
ljmp
xchg
sbbl
lahf
jbe
je
xchg
out
ljmp
xor
adc
mov
xchg
rorb
add
lock
xchg
aas
mov
inc
lea
push
xchg
bound
stos
enter
gs
push
mul
pushf
imul
mov
out
push
ficoml
arpl
pushf
fimuls
push
pushf
cmp
jg
lods
scas
jge
cmp
repnz
adc
aad
mov
out
or
lods
xor
popf
sbb
outsl
xchg
test
pushw
inc
push
stos
or
fidivrl
push
or
test
mov
mov
imul
xlat
out
mov
and
in
addr16
std
decl
cmp
cmp
or
pop
fildll
ret
cmp
or
lcall
iret
test
add
add
lret
test
in
xor
ljmp
xor
fdivl
cmp
or
out
inc
dec
pop
std
jmp
vandps
lret
dec
shrl
ret
jnp
inc
ljmp
xchg
test
into
dec
icebp
or
mov
orb
roll
repnz
cwtl
ljmp
sbb
inc
repnz
mov
test
add
test
dec
rclb
sub
decl
jno
jg
in
in
jns
loopne
outsb
lcall
call
jno
xchg
enter
jg
arpl
decl
in
and
dec
bound
imul
ud1
or
dec
jg
xchg
sbbb
loope
bound
not
pop
int
push
cmpsl
mov
out
jecxz
pop
shll
fsub
ret
add
lahf
mov
xchg
add
sbb
inc
cltd
iret
stos
popa
or
insb
rcl
and
js
orps
xchg
lods
iret
inc
popf
add
jmp
fcoml
push
loop
aad
jo
ljmp
pop
push
stc
xor
mov
lret
fldcw
fld
gs
movsb
add
fildl
das
dec
push
pop
inc
jmp
cmc
mov
pushl
xor
popf
add
jge
stos
pop
mov
in
dec
jle
adc
sub
aam
test
pop
add
pop
xabort
mov
ljmp
pop
pop
fsub
jp
je
or
int3
loop
and
shrb
sub
frstor
mov
add
leave
or
mov
jnp
push
lods
dec
notb
cmp
in
jae
mov
arpl
js
nop
xchg
add
inc
mov
scas
rcl
jmp
scas
inc
scas
dec
push
dec
ljmp
fiaddl
xlat
cld
push
pop
xlat
dec
ror
push
mov
incl
adc
xor
xor
fisttps
aas
jp
mov
inc
cmp
imul
clc
pusha
test
xlat
adc
dec
icebp
stc
push
adc
xchg
xor
sbb
xchg
push
jg
data16
push
daa
scas
push
int3
and
cltd
cmp
mov
inc
cli
outsb
xchg
cmp
das
sarb
in
xor
mov
icebp
push
pop
pop
jne
frstor
repz
hlt
fisubrl
loope
call
jne
jmp
xor
inc
push
mov
fdivrl
push
or
dec
mov
sbb
and
adc
jo
jb
data16
and
pusha
cmpsl
call
pop
mov
adc
repnz
aad
push
cld
nopl
push
add
decl
cmpsl
pop
sbb
ja
adc
adc
leave
jb
adc
clc
add
xchg
and
ljmp
xchg
sub
xchg
and
loopne
jmp
aam
dec
fldl
mov
ret
aam
repz
or
mov
mov
stos
in
add
pop
fs
loopne
dec
stos
push
xchg
cmp
jmp
dec
inc
add
mov
orb
dec
lods
pop
lahf
rcrb
repz
popf
mov
jns
push
jmp
jecxz
scas
jo
je
jo
dec
xchg
jl
push
cli
push
ret
xchg
cwtl
mov
call
lock
aad
cwtl
pop
daa
popf
push
xchg
imul
test
xchg
jnp
imul
ljmp
and
sbb
mov
pop
mov
dec
mov
nop
test
adc
mov
int3
ljmp
loop
or
xor
xor
or
or
iret
mov
push
ud0
jmp
or
fbstp
push
xor
fsubr
ret
enter
push
add
repz
mov
scas
adc
movsb
fimuls
pushl
enter
jl
pushf
xchg
sub
inc
fdivrp
insl
push
pop
dec
outsl
xchg
ljmp
or
sbb
sarl
repz
mov
pop
fiaddl
lcall
xchg
roll
add
lea
sbb
push
enter
pop
sarl
sbb
outsb
jb
loop
push
sub
dec
push
iret
mov
cwtl
mov
loope
dec
jmp
shll
lgs
xor
sti
xor
movsl
out
out
xchg
cmp
sahf
xchg
jo
xchg
loop
jne
mov
add
aad
mov
fs
insl
fistl
mov
movsb
movsb
xchg
or
sub
outsl
sub
cmovle
adc
rclb
push
pusha
xor
cmp
mov
outsl
clc
filds
stos
jnp
sti
xchg
mov
js
fbld
hlt
ljmp
ljmp
cwtl
and
xor
loopne
inc
jl
cs
icebp
out
dec
aaa
sub
xchg
pop
cmp
jg
movsb
xchg
mov
fidivrl
lcall
pop
dec
aaa
mov
cmp
es
mov
cmpsb
or
rorb
cwtl
stos
sbb
sub
decl
iret
mov
repnz
or
mov
pop
inc
ljmp
mov
scas
push
jns
test
adc
gs
sub
aas
cmpb
mov
and
xor
xor
sub
inc
mov
mov
popf
out
lods
pop
dec
incl
fcomi
fldl
adc
dec
cltd
shll
enter
adc
dec
lahf
aaa
fwait
sub
sub
xor
mov
push
andb
or
call
push
orl
sub
addb
add
sbb
hlt
jb
xchg
incl
cmpsb
mov
call
or
push
xchg
in
pop
in
xor
or
jne
pop
incl
xchg
cmp
dec
inc
fisttps
jecxz
sbb
adc
std
adc
jno
and
jg
sub
ret
jmp
push
pop
add
and
mov
dec
inc
jb
jg
popf
mov
xchg
sbb
sbb
mov
lahf
xchg
xor
incl
inc
cmp
add
mov
mov
lret
adc
xchg
mov
push
sub
cwtl
pop
bound
mov
mov
addl
push
dec
jg
ljmp
jg
mov
xchg
fs
xchg
in
dec
mov
adc
add
call
push
inc
imul
push
call
dec
or
mov
mov
repz
sbb
push
push
inc
push
jbe
fstl
push
or
bound
sbb
fisubl
test
stc
jp
popf
dec
in
sbb
mov
mov
or
cs
mov
js
sar
pushl
lods
mov
out
dec
jne
test
pop
push
cmpb
jg
sbb
lods
rolb
cmp
repnz
cmp
mov
lahf
data16
mov
adc
pop
mov
je
int3
sub
jnp
loop
mov
rcll
mov
or
pop
dec
dec
incl
sar
loope
add
hlt
inc
fadds
add
mov
fstpl
and
push
cmp
xchg
movsb
ljmp
adc
fstpt
sarb
out
cli
dec
jg
sub
pop
cmp
mov
loopne
notb
jle
idiv
mov
sar
fnstcw
inc
fsubl
jno
call
mov
dec
xor
pushl
xor
stos
xchg
jne
clc
pop
popa
and
dec
sub
inc
xchg
mov
lcall
cwtl
leave
nop
sbb
in
mov
outsb
leave
and
gs
call
fists
fcmovnbe
cld
test
lock
fwait
sub
out
push
and
mov
push
stos
mov
fdivp
inc
outsl
adc
jns
xchg
flds
mov
inc
jae
add
std
mov
cmp
mov
or
sti
mov
frstor
lock
fsubr
mov
xor
insb
insl
testb
addr16
adc
imull
aas
push
jp
pushf
out
and
sti
adc
mov
rcrb
or
inc
imul
les
and
and
or
aas
sub
mov
xchg
jp
xchg
bound
arpl
pop
add
dec
inc
in
out
jb
inc
jge
stos
shrb
in
dec
and
jmp
push
adc
jmp
stos
mov
ja
dec
int3
fbstp
cwtl
adc
jge
insb
repnz
mov
sbb
clc
popf
mov
pop
scas
mov
mov
add
or
adc
ljmp
incl
push
lea
nop
dec
dec
test
pop
decl
push
push
sub
fwait
inc
clc
ss
xchg
jge
xor
jmp
adc
inc
stc
les
call
outsb
cmp
insb
mov
popa
push
mov
push
leave
mov
pop
cmp
inc
dec
jle
in
push
dec
nop
xchg
gs
xor
sarl
out
mov
int3
dec
mov
lea
fadd
insl
jl
fnsave
mov
movsb
test
xlat
sub
and
les
inc
and
mov
cld
in
and
popf
daa
xor
push
seta
jle
or
shlb
adc
ljmp
pop
xchg
rcrl
add
push
outsb
sahf
lods
sbb
inc
rcr
repz
pushf
lea
jbe
data16
or
ljmp
js
jge
movsl
sti
xor
pop
divl
jno,pn
adc
shll
pop
repnz
push
sbb
cwtl
pushf
aaa
xchg
mov
mov
fs
dec
xchg
cmp
cmpsb
adc
incl
mov
mov
inc
jb
leave
lods
lret
test
sarl
fisubrs
call
mov
jns
jecxz
mov
or
pop
pop
mov
test
add
or
lock
ljmp
or
and
xchg
push
sbb
mov
dec
loopne
add
aaa
xchg
sar
inc
es
mov
loop
enter
lock
jg
outsl
xchg
and
hlt
inc
enter
es
ljmp
je
pop
mov
sbbl
jno
xchg
movsl
insb
sbb
adcb
lcall
jbe
nop
fildl
xor
in
movsl
push
jo
inc
add
pop
pop
clc
push
mov
jbe
in
push
jmp
iret
push
jmp
icebp
inc
push
pop
jg
mov
and
jge
jg
movsl
stos
clc
add
push
mov
and
and
lcall
repz
xor
xor
xchg
mov
fildll
repnz
nop
mov
dec
mov
leave
mov
mov
ljmp
sbb
imul
mov
push
orb
mov
decl
or
jne
adc
jg
xchg
imul
cmp
hlt
xor
aam
stc
dec
xor
iret
jge
repnz
mov
sub
ja
in
mov
incl
sub
push
gs
inc
stos
cmp
lcall
rcll
subl
push
lret
jns
jb
sar
lcall
jae
aam
push
or
add
loope
xchg
mov
decl
ja
lcall
lret
ret
jb
test
jno
add
pushl
sub
cwtl
ret
call
sti
fbld
dec
push
cltd
push
xor
cmp
fsubl
dec
pop
jns
repnz
add
push
pop
arpl
push
outsb
out
and
jg
push
fwait
pop
das
or
dec
orb
xor
cvtps2pd
sarb
push
jno
call
sbb
shrb
dec
repz
inc
fistl
mov
imulb
cmp
dec
or
das
ret
test
mov
imul
jmp
xchg
cmpsb
inc
lods
dec
ret
jno
popf
loopne
sbb
lea
call
loopne
jecxz
repnz
mov
cli
loop
sbb
imul
mov
filds
pushf
in
cwtl
adcl
and
sub
fimull
xor
adc
repnz
push
fistl
ljmp
lods
int
push
mov
mov
add
or
call
hlt
mov
outsl
imul
loop
test
ja
enter
or
out
xchg
adc
inc
inc
pop
lret
out
sar
call
sub
push
mov
pop
sub
xorb
cmp
adc
jae
adcl
stos
stos
xor
mov
pop
push
popf
in
lret
enter
sub
cmp
push
cwtl
test
adc
or
fimuls
lcall
arpl
out
loope
out
out
mov
inc
int
pushl
inc
xchg
lcall
sbb
fisubs
xor
jl
adc
mov
out
loopne
jle
call
jb
or
mov
test
sub
cmc
lahf
pop
sar
jmp
jae
xchg
mov
pop
out
dec
inc
repnz
insl
mov
push
lock
cli
cmp
clc
inc
ljmp
subl
inc
sub
loop
cltd
rcr
dec
loopne
repz
loopne
cli
ljmp
pop
test
subb
push
loopne
mov
movsl
and
rcll
mov
std
out
mov
lods
and
dec
fwait
cmp
stc
inc
and
xchg
jno
mov
sbb
push
lret
push
imul
push
jg
cmp
inc
fs
jmp
dec
add
mov
incl
popa
cmc
int3
into
lea
insl
mov
push
lock
pop
fildll
adc
nop
ljmp
mov
repz
xor
mov
call
jmp
cmp
hlt
cmpsl
fadd
cmp
or
dec
mov
push
lcall
test
mov
lcall
push
inc
ret
mov
sbb
aaa
push
jne
fnstenv
arpl
pop
data16
rcl
fdivrp
idiv
push
mov
mov
clc
jbe
or
dec
add
sbb
pop
insb
add
in
jbe
loopne
and
incl
movsb
jge
mov
mov
jge
sti
fidivl
daa
dec
sub
add
and
filds
mov
jg
stos
sub
outsl
loop
or
lcall
mov
push
lock
mov
pop
clc
push
in
filds
sub
test
in
push
cs
test
push
jl
xor
ljmpw
push
push
pop
cmp
enter
mov
inc
insl
push
sbb
sbb
ljmp
lcall
jge
dec
pop
jbe
xor
add
outsl
add
clc
sbb
out
jns
movb
mov
adc
cmp
cmp
xor
and
pusha
mov
inc
push
mov
fistps
outsb
lahf
and
pushl
out
in
adc
stc
imul
or
pop
xor
pop
push
pusha
ret
repnz
xchg
and
pushl
rcl
out
cmc
loope
pop
faddl
mov
or
sbb
dec
aaa
in
in
pop
jecxz
out
cld
lea
sub
decl
inc
cmp
stos
pushf
inc
or
mov
add
push
out
mov
decl
sub
xchg
inc
sti
mov
in
add
xchg
data16
fisttps
pushf
addr16
push
std
adc
lcall
push
push
cs
cs
std
dec
out
pop
filds
xchg
mov
mov
icebp
ja
shlb
pop
lcall
pop
xchg
mov
lea
rclb
and
and
or
pushl
std
dec
int3
cs
fbstp
ja
movsb
lret
or
roll
pop
loop
dec
loopne
pop
enter
adc
in
in
inc
ffree
dec
sub
aam
rep
push
push
or
jecxz
decl
sub
sbb
jg
dec
push
es
xchg
and
movsl
and
call
divl
repz
rcl
lock
stos
cmp
ret
dec
mov
pusha
inc
cwtl
adc
into
and
pushl
cld
leave
dec
lahf
or
sbb
das
es
aad
jno
mov
loop
xchg
or
decl
nop
xchg
inc
lahf
hlt
pop
js
sbb
jg
fldt
sti
mov
dec
repnz
sbb
pop
or
out
cltd
lret
add
push
lcall
aaa
call
push
inc
outsb
add
mov
lock
dec
dec
push
cld
xor
mov
pop
movsl
xor
sahf
jg
cmp
jb
lock
jmp
mov
out
lds
inc
ja
dec
mov
pop
sbb
cld
int
push
or
mov
fcos
popa
ds
dec
xor
jge
push
or
lret
jne
pop
sbb
jb
and
call
cmpsb
xchg
js
sbb
arpl
dec
mov
xchg
xchg
shlb
sbb
inc
test
pushl
out
jecxz
inc
jge
inc
inc
fsubrs
push
xchg
jl
adc
mov
out
cli
in
or
mov
pop
mov
jle
sub
in
jb
pop
lock
cltd
cmp
decl
and
mov
adc
jae
xor
mov
jg
sub
cmp
cld
jl
xchg
cli
hlt
push
gs
orl
es
leave
lods
jle
dec
mov
pusha
loope
cmp
incl
jmp
mov
aam
jp
imul
mov
pop
push
jb
mov
addl
pop
loop
shrl
cld
sub
addb
rclb
in
movaps
insb
mov
test
je
push
call
in
rclb
xchg
call
sbb
pushf
sub
mov
nop
testl
mov
cmp
pop
scas
sub
sti
xor
and
movsb
xorps
std
cmp
dec
in
mov
jne
lret
adc
js
decl
pop
xor
jecxz
popa
push
das
addr16
fdivl
pop
mov
daa
xchg
dec
and
add
ljmp
or
push
ret
dec
mov
mov
adc
rorl
dec
mov
int3
call
xchg
sar
incl
mov
mov
inc
mov
test
ja
pop
lahf
js
mov
lcall
test
mov
and
ja
inc
mov
push
bound
pop
ffree
mov
outsl
movsl
pushl
and
sahf
push
clc
sbb
ss
pop
and
out
jge
mov
or
jmp
lret
lahf
das
mov
pop
fcmovu
push
popf
mov
call
or
ret
jmp
lret
cltd
ljmp
nop
pop
jo
push
cltd
int
ficoms
incl
stc
popf
shrl
gs
xor
add
ret
in
bound
jne
call
sarl
and
cmp
inc
inc
insb
dec
fsubrs
test
out
mov
in
movsl
mov
ljmp
mov
in
add
push
mov
loope
pop
movsb
icebp
inc
insb
mov
and
cmp
sbb
lcall
aad
pop
or
and
dec
notl
xchg
inc
nop
fs
decl
stos
xchg
icebp
dec
mov
push
mov
and
lea
cmp
adc
rorl
pop
sbbb
push
dec
adc
popf
adc
adc
mov
pop
adc
mov
mov
push
mov
iret
fstl
ds
or
or
decl
pop
in
loop
lods
int
mov
add
sbb
lcall
jmp
mov
rcll
sbb
pop
mov
outsl
jle
push
xlat
adc
dec
aam
stos
movsb
ret
inc
sbb
jg
rclb
sub
or
sub
pushl
mov
mov
mov
or
add
pop
inc
in
iret
xor
sbb
lock
ljmp
jp
mov
pop
push
hlt
xor
inc
xchg
sahf
adc
lahf
test
loopne
jl
add
push
jle
fisubrl
mov
sahf
inc
and
lcall
sti
ljmp
test
shl
adc
and
sub
pushl
ljmp
mov
in
xchg
xor
fcmovnbe
sub
loope
repz
mov
add
xor
add
int
pop
mov
lret
pop
sarl
call
je
mov
fstpl
dec
xchg
push
jmp
cld
pop
add
test
sti
cmp
pushl
pop
int3
out
jb
inc
mov
mov
ss
cwtl
ret
js
dec
lret
lds
call
and
pop
fstps
cmc
and
aad
pushl
push
push
outsl
cli
pop
lcall
sub
jmp
cltd
mov
pushl
lret
mov
scas
faddl
lods
xor
mov
pop
and
jg
ljmp
xchg
call
ljmp
ret
testb
icebp
nop
daa
xor
out
fadds
and
movsb
sub
xor
adc
mov
inc
jbe
lods
push
adc
mov
mov
jnp
mov
jbe
inc
sbb
ljmp
call
and
leave
in
dec
xor
in
outsb
jle
call
jbe
ss
push
ficompl
dec
and
leave
jg
sbb
pop
fwait
pop
mov
push
xchg
xchg
cmc
popf
and
and
into
mov
subb
pop
sub
mov
jle
int
cmp
jne
ds
or
pop
fs
pop
aaa
add
je
pop
xlat
or
incl
cmp
jo
mov
shr
add
movsb
pusha
or
push
push
xor
test
inc
ljmp
sub
xchg
push
sub
clc
lahf
icebp
xchg
mov
std
mov
cli
mov
mov
mov
mov
jecxz
jle
jge
ljmp
leavew
cmpsb
cmpl
lock
dec
cmc
pop
movsl
lea
sub
dec
adc
pop
add
in
fistpll
inc
daa
mov
pop
xchg
or
je
xchg
jne
cmove
adc
hlt
aad
test
lock
lods
cmp
stc
mov
incl
bound
rcrb
sub
hlt
cmc
or
jg
or
test
aaa
sub
js
mov
pushf
in
push
xchg
ja
mov
fwait
nop
insw
push
push
ja
cmpsb
es
iret
out
inc
xchg
push
and
xchg
sahf
into
lods
test
jp
push
out
stc
in
and
test
and
mov
aas
incl
pop
fcoml
ljmp
mov
and
cwtl
jns
pop
es
lcall
push
cmpl
pusha
jns
push
adc
add
xchg
in
ss
mov
lcall
push
aam
jmp
adc
xor
push
rclb
mov
sar
inc
pop
xchg
pop
mov
mov
dec
movsl
add
xchg
rcrl
mov
movsl
push
inc
out
or
mov
jecxz
lret
lea
cltd
sub
or
mov
loopne
in
cmp
gs
test
jnp
cld
dec
cmp
fdivr
push
mov
ret
xchg
mov
ljmp
into
sub
mov
mov
mov
xor
fldz
or
sub
pop
into
xor
sub
mov
js
lret
filds
mov
mov
test
push
mov
lret
jo
rclb
jmp
movsb
jge
outsl
fcmovu
mov
es
jg
xlat
pushf
add
adc
xorl
in
pop
pop
add
pop
daa
add
or
sti
ljmp
or
or
and
adc
xor
xor
or
mov
xchg
lcall
xor
xor
or
push
push
jecxz
pop
sbb
cmpsl
push
sub
in
stc
pusha
fcomps
iret
das
sub
jl
bound
cmpl
cmp
decb
arpl
call
stc
and
mov
dec
cltd
xchg
testb
lcall
pop
sahf
jge
jns
ret
addl
mov
mov
je
xchg
decl
mov
pusha
flds
in
xchg
ret
mov
loop
and
or
pop
and
push
pop
arpl
movl
jg
out
in
add
push
jmp
movsl
lret
push
xchg
ss
js
movsl
sbb
call
sbb
xor
int
dec
sub
cmp
jecxz
cmp
or
push
mov
mov
fcomps
scas
loope
enter
sub
dec
fisubl
jmp
ja
aam
inc
add
movsb
inc
test
adc
ret
in
ljmp
lahf
push
dec
das
adc
call
pop
jle
xor
das
inc
aaa
sbb
pop
xchg
jmp
in
adc
orl
xchg
clc
and
push
lret
lret
mov
lcall
mov
mov
out
xor
movsl
sbb
popa
icebp
cmp
outsb
jg
popa
stc
insl
push
fs
call
dec
imul
mov
add
mov
pop
xchg
push
pushl
mov
shll
imul
fwait
cld
fsubl
push
repz
rcr
fdivs
ljmp
cli
or
mov
mov
mov
andl
pop
neg
aad
adc
sahf
test
std
ljmp
imul
inc
mov
pop
push
or
jg
pushl
lock
jg
pop
loopne
sbb
mov
not
outsl
nop
mov
and
push
ljmp
xchg
or
les
icebp
xor
sub
push
mov
incl
pop
sub
or
test
fsubs
lret
dec
push
test
adc
pushl
cmpsb
int3
inc
aas
inc
dec
std
push
stos
add
in
out
rolb
add
ficoml
jle
out
clc
cmp
xchg
scas
sbb
xor
push
insb
sbb
cmp
lret
xchg
aad
stc
pop
xchg
xchg
lods
add
cli
decl
inc
lds
and
dec
cmc
pop
pushf
mov
cmp
sub
rolb
ljmp
or
mov
rcr
jl
jmp
dec
sub
ret
std
xor
mov
push
ljmp
sar
inc
popa
jle
and
hlt
jnp
ret
adc
aas
and
xor
call
push
push
test
jae
dec
jle
outsl
test
dec
cmp
push
daa
ds
adc
insb
adc
popa
jecxz
cld
hlt
or
push
jge
jno
cmp
mov
decl
add
cmp
mov
sub
aad
jle
jg
pop
std
jo
xchg
lods
fs
stos
or
or
lcall
mov
das
mov
mov
xchg
push
clc
lcall
or
or
inc
ja
ja
cwtl
fnstsw
sbb
ljmp
mov
mov
adc
loope
push
enter
jnp
add
fwait
mov
ljmp
cs
mov
enter
btcl
pop
fdivrs
sbb
adc
jmp
mov
mov
pop
sbb
cmp
incl
cmp
aad
sti
jl
adc
and
leave
mov
sub
jns
mulb
cli
aam
jo
aad
sub
push
mulb
sub
cmp
fdivp
and
repnz
cmp
jl
jo
sub
cwtl
inc
repz
dec
decl
lcall
mov
clc
sbb
cmp
inc
iret
pushl
or
jo
pushf
pop
scas
mov
pop
push
mov
into
ljmp
call
outsl
mov
dec
mov
push
sbb
dec
mov
mov
mov
dec
mov
cld
nop
push
mov
jno
movl
rcrl
shll
stos
sub
clc
test
add
pop
fwait
sub
sbb
repz
adc
inc
repnz
lods
sti
icebp
rclb
jno
cld
mov
rorl
ret
sbbb
pop
and
lods
imul
pop
cld
push
xchg
sarb
or
movsl
incl
jns
inc
call
jo
loope
imul
lods
ljmp
xchg
aad
loope
cmp
sub
add
fldcw
dec
inc
in
pop
std
jecxz
mov
dec
mov
movsb
sti
inc
mov
push
add
dec
xorl
dec
add
aad
stc
add
xor
mov
xchg
add
mov
jg
dec
mov
in
mov
cli
mov
xlat
mov
aam
imul
stc
lods
hlt
out
and
cmp
movsl
rcll
test
lods
push
popf
int
jl
out
mov
sub
testl
bound
mov
dec
test
es
stc
push
cmc
ja
cmp
out
lret
std
xchg
mov
jb
int
inc
adc
shll
repz
inc
fisttps
pop
ljmp
ljmp
mov
shll
cs
pop
pop
xchg
inc
decl
repnz
jno
xchg
mov
sbb
mov
scas
sub
call
jne
ficompl
mov
pop
adc
cmp
sub
jo
xor
xlat
mov
scas
mov
or
xor
jg
sbb
in
inc
icebp
test
mov
into
sbb
fnsave
cltd
pop
in
cmp
fisttps
push
mov
das
sub
sti
cmc
mov
ss
incl
push
push
xchg
mov
dec
push
jl
mov
jbe
decb
mov
ret
adc
inc
push
ss
or
aad
in
or
fstpl
in
aad
addb
push
mov
or
push
fwait
mov
mov
call
shll
lahf
popf
ss
push
mov
sarl
call
shlb
and
xchg
add
xor
jmp
cli
jb
call
or
ror
push
incl
int
movsl
add
xor
and
iret
mov
and
fwait
je
loop
mov
dec
or
adc
cs
fst
mov
insl
insl
jle
xor
mov
inc
fdivr
decl
dec
jg
mov
lret
xor
leave
pop
cmp
or
test
and
dec
mov
fidivrs
adc
scas
xchg
add
icebp
inc
cmp
lods
lea
ljmp
ficomps
or
lods
pop
mov
cmpsl
gs
cmp
iret
lahf
mov
das
sar
lock
imul
mov
sbb
jl
ret
es
jmp
inc
sahf
jbe
outsb
mov
jnp
pop
pop
mov
ret
ret
int3
out
popa
jo
lcall
rcll
outsb
out
and
scas
mov
movsb
mov
push
dec
ja
dec
sbb
sbb
jbe
add
dec
jp
cmp
ss
inc
sbb
call
mov
jle
int3
lods
push
jne
cmp
or
repnz
xchg
repnz
rorl
out
ffreep
enter
push
or
lods
mov
xchg
cmp
jb
mov
jecxz
add
call
aaa
push
sub
out
outsl
fsubl
xor
pushf
in
aam
test
ljmp
xor
push
out
roll
cld
adc
sub
addl
push
call
pop
cmpb
scas
mov
xchg
mov
pushl
adc
sub
push
and
xchg
adc
fisttpl
incl
imul
mov
jg
int
mov
add
stc
sarb
jbe
dec
insl
jnp
das
data16
add
push
lret
fdivrs
dec
xor
or
incl
mov
gs
rcrl
lcall
and
mov
dec
mov
dec
xor
jb
and
push
lea
sbb
ss
cmp
into
into
jo
pushl
out
xlat
testl
pop
mov
sub
adc
cs
jae
popf
decl
fs
mov
enter
lea
stc
dec
dec
jg
dec
sub
test
inc
jecxz
cld
ljmp
pop
push
xor
push
xor
icebp
cmp
icebp
sub
sbb
pop
decl
cmp
adc
enter
test
or
mov
cmp
out
fdivrs
lds
mov
add
sbb
pop
sti
je
lcall
xor
jo
rorl
rcl
rcll
vcvttpd2dqy
decl
testb
stos
cmp
out
add
xlat
push
add
push
adc
clc
sbb
mov
lcall
pop
test
push
push
sti
cmp
cmp
and
mov
push
fwait
repz
lods
sbb
add
ljmp
lea
lahf
cltd
xchg
xor
lds
stc
lret
imul
cmp
lcall
inc
jmp
insl
or
mov
popa
add
outsb
out
sub
push
or
mov
mov
inc
push
mov
cmp
iret
xor
sbb
js
inc
inc
xchg
lods
movsb
fnstcw
dec
inc
enter
mov
hlt
and
or
pop
jno
jb
and
mov
mov
jno
push
lcall
mov
mov
aad
aam
dec
mov
sbb
cltd
mov
jmp
decl
xchg
jmp
jmp
stc
inc
psubb
das
sbbb
fwait
movsl
rorb
add
sub
incl
fisttpl
push
cmpsl
orl
shr
mov
pop
sbb
and
lret
cmp
pop
dec
fiaddl
shlb
js
add
aaa
std
js
mov
jge
inc
lea
ljmp
aaa
sti
call
pop
aaa
lods
stos
lods
jecxz
ljmp
stos
jp
jg
jle
inc
or
push
xchg
mov
popa
clc
notb
flds
mov
pushl
int
in
xor
mov
rolb
mov
stos
dec
push
aas
and
arpl
in
fsubl
ds
test
cmp
cltd
mov
push
cmpsb
mov
call
in
ljmp
fistpll
or
lds
popa
enter
cmp
lret
push
and
fmuls
add
pushl
int3
dec
out
mov
cmpsb
jge
add
sbb
push
fdivrp
lcall
movsb
ss
add
push
lahf
mov
add
les
call
pop
and
lods
out
mov
clc
xor
push
iret
sbbl
popa
jb
and
jg
inc
fsubr
fiaddl
or
add
push
ret
pushl
std
call
lret
fldpi
mov
leave
add
inc
std
cmpsb
lret
pop
leave
jmp
aas
stos
inc
fsubl
sub
adcl
fisubl
xor
mov
fiaddl
pop
shll
pushl
cmpsl
fcmovb
cli
popa
push
ds
cmp
bts
pop
fbld
cwtl
or
mov
outsl
es
mov
ret
aaa
mov
enter
fwait
jne
adc
jmp
adcl
pop
mov
cmp
shll
call
fucom
and
xor
mov
movlps
or
adc
xchg
sarl
fcoml
push
fdivp
pop
icebp
xchg
pushf
lahf
adc
xchg
call
pop
lds
lock
daa
cmp
inc
andb
dec
add
mov
adc
sahf
sbb
imul
dec
fldenv
test
test
enter
xchg
fisubrl
xchg
test
push
scas
cwtl
ja
xor
notl
xchg
push
inc
cmpsl
dec
mov
sbb
mov
call
add
hlt
mov
adc
rclb
fwait
sahf
or
lret
cmp
add
call
pop
cld
dec
pop
ljmp
cmpsl
aam
mov
inc
fs
dec
stc
sbb
sbb
and
push
jmp
cltd
fdiv
daa
jae
sbb
and
ret
dec
inc
jns
mov
fidivl
dec
adc
in
inc
fbld
data16
popa
out
adc
movsb
add
outsb
xchg
or
mov
cltd
sbb
decb
rorl
jbe
ljmp
cmp
lahf
cmp
mov
shll
cmp
daa
jmp
push
lcall
addr16
adc
dec
mov
sub
pushf
sbb
add
push
inc
nop
inc
xchg
mov
add
ja
push
imul
fstp
lds
cmp
push
call
xor
lret
sub
sub
loopne
mov
in
arpl
xor
ja
push
imul
xchg
pop
addb
ret
popf
ret
lcall
jl
push
std
fsubrl
jp
repnz
xor
and
jae
and
xor
fiaddl
cli
mov
call
dec
pop
test
leave
movsb
into
xchg
sbb
pop
movsb
jmp
ljmp
sbb
in
or
mov
jno
jl
lea
test
jp
cmpsb
cmpsb
outsl
test
clc
sub
mov
pushl
xchg
mov
jg
push
pusha
push
loop
sub
cmp
xchg
fcmovbe
ljmp
mov
lea
jp
ja
js
push
lock
lret
movsl
or
mov
pmuludq
sbb
es
js
jecxz
ficoms
mov
inc
fs
out
sbb
decl
xchg
or
icebp
mov
sub
or
shll
or
faddp
inc
cmpsb
inc
jmp
and
xor
and
arpl
lea
hlt
sti
bound
mov
incl
jae
jns
test
jns
jb
dec
in
pop
dec
jmp
add
cmp
mov
cmp
mov
add
mov
fists
xor
push
call
inc
jns
adc
push
rcrb
dec
rclb
mov
mov
jmp
fcoms
rorl
pop
shll
out
fwait
sbb
dec
mov
sbb
jecxz
stc
ror
ljmp
sub
lods
dec
call
xor
in
arpl
insb
ljmp
push
sub
lret
enter
adc
xchg
aad
mov
aas
shl
jmp
ss
ja
ret
lret
add
and
jl
push
lcall
mov
movzbl
rcll
jl
scas
call
jmp
fiadds
xor
dec
dec
sub
mov
xlat
pop
mov
sub
in
repz
in
mov
mov
mov
pop
pusha
inc
mov
add
mov
repnz
push
into
and
jecxz
call
movsb
test
dec
pushf
mov
fsubs
outsb
ljmp
loopne
call
jmp
out
dec
ret
mov
incl
int
lret
push
cs
push
mov
pop
scas
cmp
push
test
xchg
mov
ret
add
and
fsubl
and
je
pushl
push
push
push
insl
cmp
jno
scas
push
pusha
dec
sub
repz
jmp
sbb
sbb
or
inc
and
or
test
jg
inc
cld
or
push
and
xor
or
fcomip
jmp
into
push
addb
inc
cld
lds
mov
mov
mov
and
jmp
sbb
jmp
les
ret
mov
fs
mov
push
xchg
mov
pop
stc
sbb
bnd
cltd
movsb
fisttps
imul
fnstenv
enter
flds
jge
ljmp
push
fwait
cmc
popf
sub
push
inc
arpl
jl
test
rcl
xor
sbb
ljmp
jecxz
pop
add
imul
mov
enter
mov
movsl
pop
icebp
incl
jno
mov
pop
and
stc
clc
jmp
inc
test
add
inc
inc
mov
push
outsl
jg
cwtl
into
call
dec
data16
dec
lahf
jg
mov
sti
mov
lea
mov
dec
mov
in
aas
insl
jnp
jne
cld
out
mov
out
jmp
push
jne
movsl
mov
lcall
fidivrl
jp
and
jne
mov
clc
push
scas
mov
jo
or
push
xor
pop
aad
jb
or
decl
testb
adc
icebp
jle
inc
inc
imul
pushl
imul
inc
aas
mov
or
test
pop
pop
shrl
push
mov
call
jmp
mov
xchg
lcall
xor
je
xchg
in
jge
das
inc
stos
in
push
gs
ljmp
ljmp
xchg
ja
pop
mov
popa
sub
inc
jl
fisubs
jg
and
inc
add
mov
ds
aam
nop
call
test
mov
das
aaa
addw
mov
xchg
add
in
sub
clc
jmp
cs
jp
testb
jne
jo
inc
sbb
pop
repnz
xchg
decl
ljmp
cmpl
loope
pop
push
mov
lods
dec
je
jp
inc
push
jns
add
mov
test
pop
rorb
mov
les
sahf
mov
inc
daa
dec
enter
pop
xchg
sbb
aas
jmp
sti
icebp
ret
rorb
aad
icebp
fsts
ljmp
fisttpll
nop
push
shlb
cmp
pop
inc
sbb
xchg
imul
dec
into
mov
mov
inc
clc
bound
sbb
test
push
jmp
cli
dec
inc
into
scas
or
call
ret
mov
test
and
mov
sti
js
adc
mov
call
cmpsl
mov
aaa
pop
leave
mov
lods
clc
xchg
pusha
lret
and
cs
mov
ja
sbb
inc
jl
movsl
int3
add
ret
stos
data16
xor
jg
incl
pop
stc
cltd
push
add
shl
or
push
fcomps
cli
add
xor
or
dec
pop
xchg
leave
cmc
dec
pop
sbb
outsl
lahf
xchg
ljmp
sub
roll
jo
pop
push
cmp
lcall
in
mov
pop
push
test
xchg
lret
jp
pusha
push
and
sbb
jae
popf
insb
push
ljmp
decl
mov
cmp
ss
lods
cli
mov
out
scas
movsb
aam
decl
xor
lock
inc
cmp
adc
fstpt
flds
divl
xor
xor
push
in
mov
sub
add
movmskps
jnp
push
div
xchg
mov
mov
loop
mov
inc
mov
ljmp
fiadds
dec
push
in
add
decl
shr
xchg
repz
into
shr
out
push
enter
inc
lret
sbb
cmpsb
orl
hlt
in
loope
shr
stos
cli
ffreep
gs
and
xchg
pop
or
dec
lcall
fildl
inc
popl
cltd
mov
jne
mov
imul
sbb
adc
sahf
loopne
lock
scas
and
xchg
adc
ss
and
decl
mov
sahf
test
mov
cli
xchg
or
jbe
dec
sub
jle
mov
lods
scas
jle
std
cmp
mov
clc
fdivl
pop
jmp
jle
pushf
adc
pushl
pusha
loopne
sbb
leave
in
pop
jl
inc
inc
lock
lcall
imul
xor
lahf
mov
mov
sahf
testb
push
jp
add
rcrb
adc
arpl
fwait
add
fdivs
mov
lods
jg
shrb
es
imul
push
and
push
mov
int
hlt
rorl
sub
fbld
imulb
cmp
jge
je
sbb
cli
std
xor
pop
xchg
decl
scas
in
idivb
add
cmp
cld
bound
daa
cmpsl
es
xor
adc
scas
mov
mov
cmp
add
fisubl
mov
cld
incl
mov
sbb
and
daa
dec
call
mov
xchg
mov
pushl
test
dec
mov
pop
lret
ljmp
sub
push
incl
ss
cmp
ret
enter
scas
jmp
mov
fisttps
into
pop
mov
mov
ret
in
lcall
insb
repnz
mov
adcl
insb
incl
adc
cld
add
push
jo
fistpl
xchg
fimull
mov
call
push
mov
lret
sbb
mov
ret
jecxz
ljmp
jmp
mov
incl
sahf
sbb
or
or
add
mov
inc
cmp
pushf
pop
lock
pushl
mov
stos
insl
in
and
adc
jno
adcl
incl
stos
adc
lea
adc
aas
cld
cld
mov
cs
ret
cmp
je
add
jg
push
int
jp
lret
adc
mov
cltd
and
jecxz
ljmp
sarb
inc
fcomps
mov
xchg
push
jnp
rcr
and
mov
xlat
xlat
push
jbe
fistl
testb
inc
verr
arpl
sbb
and
pop
pop
sub
push
dec
xor
decl
in
scas
data16
mov
cmp
add
rorb
fldl
xor
dec
cmp
or
mov
mov
mov
push
jl
stos
jge
insl
test
decl
ljmp
loope
pop
stos
repz
add
test
ds
ss
in
cmpsb
decl
push
pop
xchg
push
cmp
xchg
adc
pop
dec
xor
call
aas
push
out
cwtl
inc
call
cmpsl
mov
mov
sub
xor
and
inc
fidivs
cli
jp
out
testb
lock
xorb
pop
clc
in
sbb
aad
mov
cmp
outsl
push
sbb
xchg
test
jnp
cli
mov
xor
or
call
aaa
adc
pushf
mov
or
insl
xor
adc
pushl
fcmovb
dec
test
push
out
lods
adc
es
or
mov
enter
es
js
pushl
inc
lods
pop
and
mov
inc
mov
leave
sahf
shlb
int
sub
xchg
sub
aad
icebp
lcall
mov
pop
mov
adc
loop,pn
inc
out
jo
lcall
mov
mov
movsl
icebp
pop
sbb
rolb
adc
aad
call
cs
rorl
sub
loopne
inc
lcall
push
push
add
mov
arpl
mov
in
pop
sub
mov
jp
mov
push
pop
push
popf
pop
push
shl
test
jb
cmpl
push
sar
xchg
push
pop
sub
sub
enter
adc
cmpb
test
test
xchg
das
dec
xchg
jg
incb
inc
stos
sub
add
cltd
scas
jnp
sarb
call
push
loop
dec
mov
ljmp
cmpb
xchg
xlat
filds
xor
inc
inc
test
lcall
lret
jno
push
cmpsl
cmp
inc
mov
popa
loope
mov
lahf
call
jmp
sub
adc
fdivs
push
call
sub
stc
add
aaa
fbstp
popf
add
loopne
push
or
int
dec
pop
mov
jmp
push
mov
inc
lcall
repnz
jns
cmp
test
stos
xor
add
iret
add
jp
push
mov
push
in
cmpsb
sub
push
sbb
mov
jl
es
stos
test
and
mov
mov
loope
mov
cmp
push
xor
push
pusha
clc
imul
aad
sbb
pop
sahf
sub
push
dec
lock
pushl
lea
sti
pop
mov
stc
aaa
enter
insb
insl
in
push
mov
jecxz
ljmp
push
pop
imul
mov
push
addr16
aaa
lods
imul
cmp
adc
stc
dec
xchg
dec
cmp
cld
les
repz
adc
xchg
std
pop
cli
in
ret
cmp
mov
jne
mov
sub
std
lock
aad
adc
or
pop
pop
jl
push
or
sub
repnz
iret
push
push
arpl
loop
rorb
out
pop
mov
and
dec
dec
xlat
test
push
push
adc
fbstp
popf
fcompl
fsubs
out
push
lcall
ror
mov
ljmp
sub
int3
pop
movsl
or
push
push
xchg
mov
ja
jmp
push
nop
xchg
lods
aam
aam
lods
dec
mov
aam
xchg
mov
je
cmp
or
push
pop
rcrb
pop
cli
out
mov
pop
and
cmpsl
jmp
sub
je
inc
jle
inc
fstp
inc
push
xor
pushf
add
out
loopne
jmp
pop
jp
mov
jnp
decl
and
shl
xchg
mov
fidivs
inc
aam
or
mov
out
mov
pop
push
in
dec
clc
lea
jle
jne
jp
pop
clc
ljmp
in
cmpb
sub
bnd
test
faddl
cltd
dec
hlt
incl
pop
mov
dec
dec
mov
cmp
jae
pop
cmpl
inc
add
test
jle
lcall
rcl
adc
pop
mov
or
or
cmp
ja
sub
in
jmp
cwtl
pop
pop
sbb
aad
or
fistpll
mov
leave
das
lock
std
adc
loopne
decl
fstl
adcl
push
mov
cmc
icebp
das
mov
fcomps
dec
mov
stos
dec
repnz
ret
jmp
sbb
cs
mov
in
ljmp
test
push
mov
add
xchg
or
lea
sub
or
call
and
or
clc
out
movsb
cmp
adc
pop
xchg
sbb
outsl
lods
rcrb
imul
imul
mov
imul
pop
call
movsb
outsl
push
idivb
out
lods
loopne
mov
add
sbb
int3
adc
fildll
and
pop
and
loop
lcallw
push
cld
xlat
orb
mov
adcb
shrb
dec
pop
invd
popa
mov
push
pop
mov
add
push
jmp
rorb
lret
fwait
aad
mov
sub
mov
mov
repnz
and
mov
inc
jmp
scas
jp
es
call
xor
out
lret
cmp
cmp
adc
mov
xchg
sbb
mov
and
push
push
mov
into
and
jae
sbb
pop
push
push
cmp
jp
iret
cld
add
loopne
fimull
and
loope
dec
add
incl
in
aaa
sahf
dec
mov
rcl
or
js
dec
incl
cmp
sub
call
fiadds
lret
sahf
inc
or
mov
and
int3
and
call
mov
inc
adc
xor
scas
add
or
xchg
es
mov
or
jg
jne
push
int3
dec
shrl
cmpsb
inc
inc
mov
sbbb
fisubrs
cs
js
mov
ret
test
lea
mov
repnz
mov
dec
ljmp
ljmp
dec
imul
inc
loop
or
mov
cmpb
jb
cmp
test
js
xor
push
les
loope
mov
mov
push
jnp
inc
mov
sbb
inc
gs
scas
repnz
lods
fstpt
lcall
lret
jo
pop
repnz
call
mov
jp
mov
rorb
and
mov
lds
push
mov
mov
mov
mov
lret
scas
jl
mov
and
aam
inc
mov
jl
movsl
call
xor
ret
inc
sbb
mov
jmp
icebp
mov
sahf
mov
sub
sbb
decl
pop
and
rorb
out
sti
jl
push
fcompl
ret
insl
cmp
out
clc
jmp
cmp
outsl
cmp
outsb
out
cmpsl
inc
mov
push
int
sbb
mov
or
mov
xchg
xchg
mov
push
xor
mov
shll
push
and
lcall
push
rcrl
and
adc
pop
out
test
mov
rorl
jecxz
test
dec
stos
sbb
pop
loop
inc
cmp
pop
jno,pn
push
cli
clc
mov
cmp
mov
add
xchg
push
xchg
into
call
decl
daa
cmc
ficompl
lea
mov
inc
pop
imul
cmc
mov
mov
cmp
aas
fwait
jo
mov
decl
xor
cmpb
dec
push
aam
ss
add
or
int3
aaa
xchg
pushf
mov
call
ror
pop
sub
push
pop
xor
cmpb
js
stc
xor
movsl
cmp
out
jle
inc
mov
sub
mov
cltd
xor
sbbb
jg
cmc
jecxz
mov
ret
insb
xchg
je
roll
mov
jecxz
enter
push
mov
push
outsb
mov
outsb
mov
ret
xchg
idivb
icebp
mov
mov
mov
addb
pop
int
ljmp
adc
stos
das
cmp
pop
xor
pop
xchg
dec
mov
call
lret
and
fsqrt
adc
push
pusha
add
or
push
mov
out
and
insl
dec
ret
cmp
add
push
mov
repnz
mov
jno
lahf
out
jmp
lock
cmc
movsl
adcl
test
in
incl
inc
xchg
pop
sub
mov
test
sbb
pop
aas
pop
pop
xchg
aad
fcomip
jne
stos
sbb
pop
vmovaps
ja
cmp
movsb
divb
loopne
xchg
js
cmp
inc
xchg
jecxz
push
xchg
es
clc
call
add
add
inc
add
inc
cmp
adc
loop
pushl
sbb
sti
js
dec
or
inc
pop
lret
sbb
subl
ljmp
sbb
cmp
xchg
rcrb
clc
jno
push
push
lcall
and
cmova
lods
scas
jbe
and
test
nop
jmp
xor
push
mov
inc
aad
xor
jo
scas
mov
sub
add
in
adc
dec
and
sbb
ds
jmp
cmp
loopne
cmp
cs
xchg
es
pushf
cltd
into
daa
or
test
ljmp
lret
mov
cmp
popf
or
jnp
xchg
scas
sub
push
cltd
inc
les
shrb
jmp
xor
out
cmp
loop
xor
filds
pop
addb
enter
adc
dec
inc
adcb
repz
push
mov
neg
add
or
pushl
fiadds
mov
jmp
add
mov
je
sbb
test
ficoml
cli
inc
inc
push
mov
inc
int
shll
mov
int3
int3
push
mov
pop
cltd
cmp
ljmp
push
jnp
shlb
cmp
call
insb
test
js
adc
dec
xchg
int
sub
sub
incl
fsub
jb
call
aaa
popf
mov
test
pop
sbb
mov
cmpsl
cmpsb
mov
arpl
stc
jge
add
scas
pop
fsts
inc
sub
sub
inc
inc
lds
mov
inc
mov
add
test
adc
xor
xchg
int
mov
insb
jp
inc
les
push
add
ret
decl
jg,pt
adc
adcl
cmp
jl
xor
fbstp
inc
ljmp
add
out
push
add
xlat
ljmp
mov
lret
mov
xor
push
adc
js
pop
add
jmp
xchg
and
xchg
test
scas
pop
xor
adc
xor
mov
out
movsl
aas
xchg
xor
cmp
sub
lea
cs
or
cmp
int
femms
add
je
xor
adc
mov
fnstsw
mov
push
jg
and
les
mov
add
adc
ljmp
xchg
shlb
pop
cmpsb
negl
or
cli
popa
jns
imul
inc
jmp
mov
adcb
es
stc
rcrb
jmp
xchg
ror
leave
push
test
xchg
sub
or
into
ffree
push
mov
es
and
xchg
iret
ja
sbb
popf
mov
xchg
mov
xchg
aas
or
mov
mov
decl
mov
int3
repnz
xor
lock
pop
cwtl
adc
sub
or
pushl
mov
es
out
int3
addl
jno
sbb
imul
mov
dec
aaa
aaa
jp
jge
loopne
add
outsl
insb
out
cmpsb
pop
push
jno
pop
sar
pushl
push
pop
push
imul
lea
ret
inc
sbb
lods
in
sub
idiv
mov
rclb
aaa
xor
push
outsb
dec
jl
inc
or
jmp
sahf
arpl
inc
adc
jl
adc
add
inc
imul
sbb
arpl
mov
in
decl
mov
leave
pusha
dec
insb
enter
add
pop
fnstenv
movsb
fmulp
sbb
mov
and
ja
movsb
pop
rcrb
jg
lcall
repnz
adc
adc
cmpl
repnz
xchg
imul
cmc
incl
sbb
lret
jl
add
mov
in
out
xor
sbb
outsb
fstpl
nop
mov
bound
cli
dec
push
inc
sbb
loop
repz
incl
or
push
mov
jp
orl
pop
cld
add
adc
push
jecxz
pop
int
fcmovu
sahf
push
ret
pop
clc
jmp
fmul
cld
mov
xor
cmpsl
fidivrl
dec
pushf
lock
xor
ljmp
dec
mov
push
std
adc
inc
dec
sub
decl
mov
aad
sbb
push
mov
cld
cmp
sub
add
mov
in
fnsave
inc
ss
aas
and
rclb
lret
mov
nop
jo
addb
xchg
mov
shlb
inc
xor
xchg
cltd
xor
xchg
xor
arpl
push
mov
cmc
rcrl
in
pop
nop
incl
mov
lret
test
jmp
arpl
add
int3
xlat
and
cli
mov
cld
mov
mov
adc
pop
mov
xchg
pushf
shrl
push
adc
in
lock
iret
cmp
pop
call
adc
jo
ret
aad
int
cmp
push
pop
mov
rcll
jge
inc
add
incl
dec
and
into
add
out
dec
mov
xchg
sahf
out
lcall
jge
je
or
daa
push
ja
mov
mov
ret
loopne
mov
xlat
call
sbb
int3
sub
loope
jecxz
mov
shl
cmpsl
pop
push
jae
mov
mov
movb
push
push
adcl
inc
insb
and
sti
outsb
fs
scas
call
ja
push
or
jle
jp
jno
xchg
mov
aas
inc
call
ljmp
mov
or
cmp
sub
push
icebp
mov
imul
cmpsl
adc
mov
insl
clc
ss
push
jg
add
lcall
or
sti
xor
movsb
test
cmp
sub
ljmp
and
xor
sub
xchg
cmp
pop
aad
hlt
shl
aam
jmp
pushl
aaa
xchg
jne
pop
pop
fsubl
bound
inc
cli
sahf
into
sub
ljmp
cld
das
movsl
rorb
jle
fwait
jmp
sbb
gs
push
nop
in
adc
push
fsubl
adc
int
pop
hlt
jmp
cmp
xor
cmp
stos
lret
sar
ljmp
mov
jmp
lcall
hlt
iret
xchg
sub
aaa
sbb
stos
mov
pushf
outsb
xor
and
mov
mov
outsl
dec
adc
mov
jmp
mov
mov
jne
sub
call
jb
mov
mov
int3
push
mov
dec
leave
pop
insl
adc
pop
daa
sub
push
add
ss
sbb
mov
fwait
push
subb
js
inc
test
xor
loop
add
stos
hlt
cmc
push
and
sub
loopne
xchg
sbb
loopne
daa
inc
ds
int3
add
jl
inc
pop
testl
inc
xor
es
insl
inc
xchg
icebp
rclb
jg
and
clc
dec
mov
in
jmp
xchg
cmc
cmp
cmpl
adc
adc
aaa
icebp
lahf
loopne
push
pushl
add
cld
mov
jae
lods
inc
fistl
jnp
mov
mov
ljmp
xchg
jmp
jne
pop
call
mov
xchg
or
movsb
adc
call
mov
fbstp
lods
dec
jmp
sbb
aas
adc
movsl
adc
mov
sub
mov
adc
adcl
jmp
cmp
incl
je
adc
ss
movsl
pop
fdivp
mov
jmp
jmp
mov
xchg
outsl
pop
or
movd
push
mov
or
arpl
cli
decl
cmp
mov
dec
xlat
shl
mov
adc
push
mov
out
push
imul
add
es
mov
push
roll
scas
in
jl
dec
aad
push
lods
adc
dec
cmc
hlt
faddl
pop
sbb
jg
nop
dec
movsl
in
mov
imul
rclb
xor
xchg
in
jnp
jg
lock
out
jp
push
pop
cmp
sbb
sub
push
mov
incl
pop
or
add
ds
ret
scas
fildl
fdivrs
rol
and
divb
mov
popf
mov
cmp
mov
xchg
mov
repz
xchg
test
lea
push
mov
movsl
scas
clc
outsl
mov
cmpb
push
xor
pop
mov
jmp
jg
xor
xor
push
sub
add
push
jbe
rorb
popa
mulb
lret
adc
call
xchg
mov
iret
inc
xor
pushl
mov
rcr
daa
mov
sub
test
divl
inc
out
cmp
leave
in
pushf
movsb
push
lock
or
mov
inc
sub
test
pop
sbb
sti
fldl
mov
scas
es
jnp
aam
jnp
add
pop
mulb
fcmove
pop
lock
in
call
out
sub
cmpsb
jmp
and
cltd
xchg
incl
mov
xchg
in
sbb
arpl
push
inc
loope
fdivl
jnp
outsb
sbb
cmp
shrl
jl
push
push
fldenv
nop
mov
jno
or
shrl
sub
pop
add
out
sub
push
aaa
and
dec
mov
and
jb
xchg
add
decl
ljmp
push
daa
insb
cmp
mov
lods
push
or
aam
ss
incl
xchg
mov
sub
test
call
mov
call
pop
aas
mov
popf
mov
push
lahf
pusha
sub
pop
dec
pop
sub
jl
in
or
fistpll
push
mov
or
std
pop
jp
pop
mov
ljmp
cwtl
adc
lea
push
sarl
ret
mov
push
sbb
push
sbb
std
dec
push
cwtl
jbe
hlt
jmp
or
sbb
mov
add
fs
pop
and
add
push
andb
jne
incl
add
and
fisubrl
insl
loope
in
jg
or
out
js
xor
xor
popf
fsubrp
inc
jne
sbb
lds
call
push
push
jl
xor
pop
dec
aad
lds
enter
aad
xchg
fiaddl
loop
cmp
ljmp
push
shl
es
cmp
mov
cs
mov
rorl
add
dec
clc
cmp
or
ret
mov
dec
xor
mov
loopne
xor
call
std
pop
pop
movsb
fdivrs
lock
dec
mov
xor
icebp
jnp
rorb
fs
aad
loope
dec
scas
dec
loopne
rorl
jae
push
pop
jg
xchg
cmp
sbb
sar
jno
rolb
sbb
repnz
icebp
insb
movsb
outsl
sbb
push
ljmp
xchg
iret
add
enter
push
jbe
and
adc
iret
pushf
lret
nop
mov
pushl
jg
orl
jp
jnp
mov
flds
add
mov
mov
cmpsl
dec
add
loop
and
push
push
push
jmp
rclb
pop
mov
inc
lds
cwtl
std
inc
mov
sahf
sbb
dec
and
cld
roll
je
daa
call
and
jge
test
cmpsl
or
stos
adc
stos
xor
cmp
int
shrb
jle
shlb
push
or
sti
xor
ds
lret
pop
iret
nop
jo
jbe
incl
jg
int3
xchg
adc
push
dec
sbb
xchg
push
or
ds
xchg
out
into
dec
dec
jle
mov
inc
add
incb
push
pushf
jmp
push
dec
and
mul
mov
cmovg
call
jae
xor
dec
sub
adc
fadds
add
imul
cwtl
mov
mov
xor
dec
leave
pushf
push
sbb
jp
push
pusha
mov
call
mov
outsl
push
pop
dec
shll
mov
movsl
mov
pusha
pop
dec
loopne,pt
enter
xchg
incl
sbb
aam
jp
adc
shr
mov
ljmp
shll
stc
std
sbb
mov
jbe
xchg
shlb
lcall
adc
mov
xchg
in
adc
int
addl
and
cmp
sti
addr16
daa
std
jle
sub
xor
jbe
arpl
out
sub
or
out
mov
xor
push
xchg
push
lods
xor
lahf
pop
dec
mov
cmp
xchg
xor
movsb
in
adc
bound
push
movb
mov
pop
add
pop
xbegin
ss
cmp
and
lret
testl
sbb
mull
push
mov
sti
xlat
lcall
out
xchg
aam
jo
cmpsl
inc
repnz
inc
jg
stos
pop
inc
jmp
jp
add
ljmp
pop
sarb
ja
sarb
leave
imul
pop
jnp
mov
or
rolb
jle
popa
dec
repnz
sub
add
mov
push
or
dec
lods
out
dec
in
mov
cld
loop
cmp
sub
xor
push
mov
mov
cmpsl
movsl
incl
jp
lcall
mov
test
jle
push
popa
or
jmp
cmc
stos
pushf
pop
pop
enter
push
fldcw
hlt
mov
repz
or
mov
push
dec
adc
add
and
xor
and
inc
xchg
gs
and
mov
xchg
icebp
jns
mov
inc
or
xor
movl
cli
daa
pop
lock
sbb
movsb
mov
or
ret
or
pop
call
xlat
ss
cmp
fst
sbb
pop
push
fdiv
hlt
mov
mov
loope
xchg
loope
call
call
cld
and
cli
sahf
mov
outsb
mov
xchg
addl
inc
pushl
or
push
daa
icebp
add
pop
sbb
pushl
pushf
pop
scas
enter
dec
sbb
cmpsb
cli
add
push
es
outsl
xor
data16
fdivs
pop
cmp
xchg
xlat
sub
sbb
in
popf
movsl
sti
lret
sub
cmp
jl
jmp
not
jle
sbb
in
xchg
mov
movsb
xchg
pop
aad
cmp
mov
inc
sar
repnz
push
cmp
push
dec
or
and
loope
lods
js
jbe
pop
mov
incl
lahf
xchg
jns
data16
loope
enter
push
xchg
xchg
fsincos
xchg
int
and
add
decl
in
pmulhuw
and
outsb
jle
jne
cmp
push
in
decl
jle
jmp
fisubrs
add
mov
inc
es
adc
stos
dec
xlat
sahf
lcall
mov
cmp
adc
jg
sub
fbstp
mov
xor
ds
cmp
loopne
dec
xorl
pslld
aaa
lcall
inc
outsb
insb
lods
jecxz
dec
pop
bswap
ljmp
stos
xchg
jns
inc
aas
mov
push
adc
pusha
les
and
test
cmp
inc
xchg
adc
xchg
sbb
cmp
scas
sbb
jmp
ffree
jb
insb
roll
ret
daa
faddl
fwait
xchg
ljmp
mov
repnz
je
xor
inc
push
outsl
sbb
mov
lods
pop
gs
xchg
outsl
push
ja
push
inc
cmp
incl
out
push
xor
shrb
hlt
dec
punpckhdq
sub
sahf
repz
jle
rcr
incl
and
mov
xchg
mov
loopne
loopne
lret
lds
test
in
outsl
movsb
mov
add
sbb
divl
into
test
jmp
shl
and
rolb
or
cmpsl
pop
lahf
pop
xchg
mov
divb
xchg
aas
imul
mov
mov
xor
xor
pusha
push
mov
jno
fcmove
or
mov
fnstsw
inc
pop
daa
pop
rcrb
fstpl
ja
ret
xchg
loop
cmp
jecxz
mov
jnp
cs
and
add
aad
pop
pop
jp
pop
outsl
shlb
fwait
stc
cmp
pop
clc
sbb
dec
test
adc
and
hlt
decl
mov
xchg
test
mov
jl
push
jmp
daa
mov
test
fwait
cmp
push
stos
call
and
movsl
xlat
cld
mov
add
lods
dec
enter
fs
jbe
mov
mov
cltd
mov
add
cmovle
xor
push
ljmp
dec
cld
sbb
or
es
and
insl
dec
push
mov
mov
ljmp
cmp
mov
pop
aaa
cmpsb
jmp
fsubs
cmp
jmp
out
push
sbbb
add
sbb
cld
sarb
mov
adc
repz
lret
mov
jmp
fsubl
cmp
int3
pop
push
pop
mov
cmc
xor
aam
shrb
movsb
call
ljmp
jp
fwait
xor
daa
decb
inc
test
pushf
in
insl
leave
sbb
add
push
popa
or
mov
push
mov
xchg
push
xor
sub
lahf
enter
xchg
fidivrs
in
out
incl
adc
mov
xchg
addr16
pop
inc
inc
mov
xor
mov
sub
push
push
test
jb
ud0
pushl
bound
mov
iret
push
sbb
sub
adc
mov
add
sub
cmp
sub
lods
jle
mov
mov
jle
or
or
rcrl
xchg
lock
test
xchg
cmpsl
hlt
scas
clc
sbb
cmc
xchg
add
xchg
push
pop
xor
sbb
jmp
shlb
sbb
inc
or
xor
mov
and
jo
xor
insl
jg
cmc
pop
cmp
out
and
repz
cmc
and
pop
stos
ljmp
sub
inc
sbb
jnp
pop
mov
fisubrl
clc
cld
adc
inc
push
in
or
pop
loope
mov
out
out
clc
mov
mov
test
mov
out
call
ret
push
scas
xor
mov
inc
ljmp
ret
scas
cmp
jb
cmpsl
test
ret
js
cli
add
nop
cmp
icebp
jg
lods
test
mov
test
mov
jl,pn
in
cmp
jl
mov
scas
push
adc
jmp
and
in
bound
push
push
lret
jle
adc
jmp
lret
ljmp
jne
fcompl
loop
jp
sar
sbb
lret
cltd
mov
sub
rolb
test
cmp
and
call
jmp
std
inc
cmpsb
mov
mov
shr
jge
rorb
das
stos
xchg
pop
cmovl
and
adc
pushl
dec
fsubrl
sti
jae
cwtl
repz
adc
jnp
dec
sbb
clc
aad
and
es
lds
stc
fcoml
data16
add
adc
xor
lcall
sbb
push
lock
js
mov
pushf
out
mov
xor
dec
sub
aaa
jmp
insl
test
jecxz
add
cmpl
jge
and
test
jmp
repnz
lcall
push
push
mov
jecxz
and
jg
mulb
pushl
into
push
popa
lods
out
adc
adc
test
call
jl
ljmp
add
mov
adc
aaa
fwait
pop
push
jp
mov
fnsave
jecxz
and
sbb
fs
hlt
mov
or
cli
mov
jmp
out
push
push
ret
iret
xchg
pop
fcmovbe
daa
adc
mov
in
fs
cmp
fisttps
movsb
dec
fadd
xchg
pop
cmc
add
sub
xchg
push
in
lds
jg
call
pushl
pusha
lcall
dec
jne
outsl
or
lds
into
push
or
or
cltd
sbb
pop
and
mov
ljmp
push
cmp
dec
int
pop
inc
or
stos
sub
adc
xor
outsl
inc
ret
fldcw
cmp
adc
xchg
jo
leave
call
ds
aam
in
in
leave
call
cld
jp
std
xchg
leave
sub
jmp
fstps
and
push
push
movsb
and
in
call
mov
adc
stos
pop
test
push
sbb
roll
xor
adc
lods
ds
inc
jge
ss
mov
lock
push
inc
jae
shl
mov
repnz
shll
aaa
xor
sbb
ljmp
nop
xlat
jecxz
hlt
ret
xor
xor
or
shrl
fbstp
idiv
lcall
push
pop
push
rdtsc
jne
mov
add
mov
call
push
sbb
sub
xor
pop
sub
xlat
sbb
mov
dec
pcmpgtd
jmp
out
xlat
adc
test
push
inc
lods
jae
pushl
jmp
out
xor
cmp
push
jmp
mov
cmp
loopne
std
lcall
testb
mov
fsubrs
xchg
enter
in
mov
jmp
and
xchg
lds
pop
outsb
jle
mov
pushl
inc
repnz
leave
loope
lea
je
imul
xor
cmp
sub
push
mov
mov
adc
sbb
popf
or
sahf
test
mov
ljmp
push
pop
mov
inc
cmc
and
mov
call
call
mov
enter
pop
jp
adc
icebp
je
pushf
push
jns
xor
ljmp
xor
dec
cld
mov
xor
fiadds
int
mov
and
icebp
ljmp
in
mov
push
push
cmpl
divb
decl
mov
shlb
rclb
test
data16
cld
repnz
pushl
push
lahf
mov
and
inc
cmc
inc
lods
sub
cli
es
icebp
jg
ret
loop
pop
imul
mov
incb
out
subb
out
pop
mov
adc
jl
sti
rclb
testl
mov
shl
jmp
cmpsl
jmp
jmp
scas
or
gs
xor
jbe
out
cs
ret
pop
dec
in
sbb
sbb
mov
sub
or
mov
cwtl
mov
mov
mov
test
incl
outsl
mov
mov
push
ljmp
out
mov
ret
push
xor
out
ljmp
and
fldt
mov
movsb
loopne
and
xlat
fisubrs
lret
out
decl
filds
mov
cmp
test
sub
xor
clc
add
lret
xchg
lret
ja
mov
xchg
into
jbe
xchg
leave
mov
hlt
xor
pop
jl
and
lcall
jo
mov
hlt
cwtl
pop
and
jp
push
mov
mov
xchg
adc
pop
std
dec
pop
imul
hlt
mov
ffreep
aam
fldt
insl
push
nop
dec
sarl
aas
rcrb
sub
pop
xchg
adc
jmp
xchg
cwtl
sbb
stos
adc
movsl
notb
call
push
stos
jnp
push
cmpsl
xor
dec
lret
fcomip
pop
cwtl
push
inc
or
in
fsincos
pop
lret
xor
shll
xlat
push
outsb
inc
cmpsb
decl
lcall
mov
out
dec
pop
loop
sub
cmp
fdivr
fdivs
mov
gs
fsubl
popf
and
cmpsb
scas
lock
les
ljmp
push
lret
mov
aaa
cmpsb
ficompl
aaa
fldl
sbb
ss
inc
xor
dec
jmp
inc
cld
adc
jo
sti
out
pop
icebp
in
mov
fwait
adc
fmuls
movsl
cld
xchg
int3
in
aam
dec
outsl
mov
decl
outsb
loopne
loop
or
mov
pop
cmp
mov
dec
mov
push
aad
nop
cmp
dec
lahf
fistl
dec
dec
aam
iret
sbb
mov
and
in
cmpsb
jae
mov
jnp
loopne
and
aad
inc
push
out
jecxz
mov
xchg
pop
adc
jg
in
test
cli
repz
and
icebp
adc
test
int3
push
aam
decl
push
add
xchg
add
inc
xchg
das
movq
outsl
push
adc
xchg
mov
mov
mov
lcall
xchg
call
sub
enter
testl
adc
sbb
int
push
lds
sub
in
and
inc
dec
movsb
or
loop
xchg
sbb
and
call
push
daa
inc
xchg
xor
fidivrl
add
ss
and
into
insl
out
es
jae
andl
inc
clc
fmuls
mov
sbb
cmp
sar
jmp
negb
popf
jecxz
imul
adc
mov
fs
sub
jg
jo
inc
cmp
outsb
xchg
xor
inc
cmp
inc
pop
sarb
ds
mov
int
push
xchg
jo
mov
and
add
mov
rclb
push
ljmp
xchg
stos
sbb
pop
fiaddl
mov
jns
jecxz
dec
push
cmpb
stc
aaa
dec
out
ss
jecxz
pop
mov
xchg
push
xchg
test
aas
mov
out
inc
stc
adc
decl
imul
out
pop
mov
mov
push
insl
lcall
cmp
xchg
inc
mov
and
icebp
out
or
inc
dec
dec
fbstp
pop
rolb
addl
xchg
adc
adc
imul
xor
mov
inc
or
call
push
mov
popf
stos
push
addr16
dec
ljmp
jecxz
int3
dec
lock
and
lcall
add
clc
jns
pop
cmc
gs
pop
jns
jmp
pop
sahf
jge
in
pushl
cwtl
cli
aam
sub
insb
int
adc
jne
add
call
insb
mov
pop
stc
adc
ja
es
mov
push
ret
push
and
iret
ret
lcall
fcmovu
data16
imul
stc
leave
xchg
stos
mov
push
push
test
mov
mov
gs
xchg
arpl
push
adcb
test
in
into
sbb
int3
jns
xchg
ljmp
mov
lcall
lcall
cmp
xor
cmpsl
or
call
pop
mov
add
or
adc
call
in
pop
das
dec
cmp
in
jg
lcall
addr16
mov
mov
mov
xchg
mov
pop
and
jg
push
enterw
sub
fcomi
fadds
leave
sub
add
decl
mov
xor
xor
fildll
repnz
repnz
in
inc
dec
lock
or
xor
cmp
scas
push
mov
or
bound
iret
pop
mov
jo
call
pop
adc
jmp
xchg
in
pop
cmp
mov
in
sar
pushl
mov
sti
nop
push
mov
out
mov
or
mov
adc
and
scas
jl
adc
inc
jae
movsl
mov
js
and
loope
dec
and
xchg
test
or
push
inc
sub
mov
jne
cmp
dec
xor
pop
imul
mov
clc
arpl
insl
jp
sub
test
pop
out
stos
cli
in
mov
sub
pop
mull
jb
into
rorl
decl
xchg
mov
jne
inc
notb
sti
jnp
int3
test
lcall
cwtl
pop
sub
or
pop
pushf
xor
not
cmp
fld
xchg
clc
icebp
mov
pop
push
loop
data16
mov
jg
adc
lock
sbb
pop
or
xchg
test
mov
adc
fwait
pop
lds
ljmp
add
test
orb
add
lcall
lods
enter
adc
mov
and
stos
and
out
pushl
into
and
push
and
imul
xor
fstpl
ja
incl
int
add
mov
and
scas
das
pop
jle
repnz
mov
out
cli
in
fnstcw
ret
jno
fimuls
lcall
enter
or
ret
sar
lcall
or
cltd
mov
jns
aaa
mov
inc
cmpsb
test
rorb
xor
mov
cmp
movsl
jnp
xchg
cmp
arpl
scas
ja
jmp
daa
pop
fucomp
sbb
lea
or
mov
mov
cs
loope
sbb
lock
xor
je
pop
cli
xor
push
cmp
pushf
cmpb
adc
out
test
decl
jl
sbb
sbb
push
insb
in
sub
imul
decl
fs
xchg
int3
push
inc
nop
in
fildl
cmp
push
and
addr16
push
jg
lods
lock
decl
mov
cltd
inc
mov
je
sub
sbb
xor
in
push
aam
clc
div
jecxz
das
xchg
push
sub
mov
or
gs
push
push
or
mov
mov
iret
lods
dec
xchg
lret
push
fisttpll
test
hlt
jb
adc
dec
mov
xchg
mov
sbb
cwtl
mov
jp
pop
sub
mov
movsb
mov
outsb
xchg
jmp
ljmp
lahf
jbe
je
imull
vminsd
pop
loopne
push
mov
jl
jo
mov
xchg
mul
sbb
push
xlat
rcrb
cmpsl
mov
cmc
push
xlat
jbe
stos
scas
ljmp
jbe
mov
jg
lcall
xlat
repnz
clc
or
mov
mov
test
adc
shrl
push
int3
xor
or
sub
out
sub
mov
mov
pop
cmpb
fcomps
add
adc
stos
sahf
decl
addb
das
pop
ret
enter
cld
movsb
mov
push
jno
stos
decl
test
mov
and
push
sbb
mov
incl
add
repnz
lret
mov
add
imul
cmp
in
mov
xor
rcl
int
push
pushf
and
push
imul
ret
ljmp
push
scas
in
leave
mov
sbb
in
roll
std
inc
fistl
mov
outsb
test
incl
jne
sub
and
shlb
mov
scas
repz
and
dec
addr16
mov
pop
sbb
ss
outsb
loop
lods
inc
repnz
or
ja
clc
decl
cmc
daa
repz
sti
push
popf
rcl
push
mov
ret
jns
jmp
mov
enter
lock
test
add
push
or
cltd
add
incl
cmpsl
fstl
push
movsb
jbe
xor
ret
aam
addr16
dec
xor
sbb
mov
incl
dec
subb
mov
divl
jns
mov
inc
out
cmp
cld
mov
in
lods
outsb
xor
mov
inc
inc
into
push
test
mov
pop
cli
imul
xchg
or
sar
ljmp
sbb
pop
jo
mov
and
xor
mov
mov
jne
sbbb
ret
repz
aas
cli
ljmp
mov
mov
dec
fs
xchg
mov
xchg
aad
stc
test
push
out
jmp
enter
push
lea
cmp
lret
xchg
scas
pop
insl
popf
js
jnp
das
daa
xor
add
jmp
imul
pushf
ss
mov
enter
sbb
xor
stos
rcl
jg
mov
sub
mov
mov
jne
mov
mov
inc
sahf
push
addl
add
insb
xchg
inc
mov
xchg
stos
or
push
add
mov
dec
fwait
sub
sbb
pop
out
rorl
repnz
inc
ljmp
mov
xor
cmp
nop
subl
push
mov
mov
and
test
mov
pop
mov
mov
ss
popf
adc
jbe
ret
mov
xchg
rcr
jbe
mov
movsb
gs
mov
mov
adc
push
out
cld
pop
or
sti
mov
movsb
sbb
jge
js
call
gs
mov
lcall
mov
lods
pushf
cmp
clc
xor
xchg
shrl
pop
pop
inc
mov
push
pop
ret
decl
xchg
js
mov
aaa
mov
add
dec
int
in
js
pop
jmp
push
add
mov
and
adc
test
and
mov
push
mov
inc
adc
xor
mov
jge
imul
ljmp
push
test
sub
repnz
outsl
cmpl
xchg
xchg
stos
ja
pop
or
pushl
stos
es
add
ds
loop
mov
in
lea
testb
ja
in
sub
pushf
leave
add
jle
jg
mov
mov
cs
pop
out
test
mov
aaa
jge
ret
and
fisttps
mov
dec
jb
loope
outsl
sahf
roll
fsts
or
mov
mov
pushl
out
sub
sets
fucomi
fwait
stc
pop
test
mov
lcall
insb
movsb
mov
js
mov
push
sbb
inc
fsubrs
jg
mov
test
xchg
andb
movsb
pop
inc
insb
pop
dec
ljmp
loop
mov
xor
jl
aaa
push
push
cmpb
stos
add
cli
push
das
pop
dec
sbb
decl
rol
pop
and
sub
jle
cmc
in
inc
sbb
inc
mov
adc
decl
pop
push
lock
sti
pushf
scas
out
cld
xor
xchg
inc
push
mov
dec
pop
xlat
mov
pushf
cs
jmp
push
cmp
iret
loop
aam
scas
lds
mov
xor
adc
or
loope
pusha
dec
jne
sub
and
int
pushl
or
scas
int
jl
jo
loopne
cs
test
insb
fdivrl
mov
jmp
xor
test
in
or
insl
sbb
sbb
pop
adc
loop
cld
ja
lcall
fs
mov
push
repnz
xchg
bound
test
fwait
call
cmp
int3
in
loope
out
rol
rclb
and
pop
iret
lea
gs
decl
cmp
jbe
xchg
pop
xchg
insb
cmpb
test
scas
xchg
sbb
or
rcrb
fwait
pop
sahf
loop
push
scas
ja
pop
fcomip
call
adc
ret
jl
stos
mov
xor
cmp
mov
adc
addr16
enter
jo
cmp
xchg
loop
cmp
sar
mov
ljmp
ret
icebp
lods
lea
xchg
push
pop
jp
sbb
mov
bswap
mov
inc
dec
inc
not
adc
test
in
fistpl
sahf
mov
arpl
fcmovu
xor
cwtl
add
ja
push
push
lcall
enter
test
call
cmpsb
inc
push
push
push
jle
divb
das
jb
mov
clc
inc
add
into
ja
add
test
mov
ljmp
mov
arpl
faddl
pop
jb
push
xlat
mov
sbb
call
out
loop
rorl
jne
int3
fcoml
ds
movsb
add
ss
inc
ret
cmpsb
jmp
adcb
out
nop
inc
sub
and
inc
inc
add
fnsave
lods
and
daa
push
jg
jle
jecxz
sbb
xchg
icebp
mov
enter
pop
push
insb
fists
shl
mov
ja
lock
aaa
xor
incl
cld
cmp
mov
test
hlt
and
inc
enter
divl
mov
jmp
stos
mov
shlb
mov
gs
sbb
jns
lods
mov
js
jmp
add
inc
aaa
hlt
pushf
lahf
ficoml
pushf
dec
movsb
jg
decl
jg
ljmp
stos
xchg
sti
repz
lret
inc
scas
pop
ljmp
push
mov
iret
jmp
std
mov
dec
dec
push
loop
or
or
push
adc
decl
fsubl
and
sub
mov
ss
mov
jge
gs
lret
pop
rcrb
into
cwtl
out
andb
jne
xchg
cltd
decl
test
in
loop,pn
in
mov
xor
idivb
outsb
pop
aaa
fdivr
ljmp
pop
pop
pop
adc
sub
mov
rolb
stos
pop
or
mov
jg
ss
incb
dec
sub
mov
jnp
cmp
cld
ljmp
cmp
jmp
sbb
pusha
in
jno
stos
and
incl
inc
add
dec
mov
stos
movsb
inc
adc
mov
ja
das
mov
decl
pop
xlat
movsl
mov
push
clc
sub
dec
jnp
mov
aas
cmc
xchg
enter
inc
cld
call
call
mov
dec
pop
xchg
imul
and
jl
test
lds
ja
sbb
push
clc
mov
pop
jmp
mov
cld
adc
mov
sub
inc
inc
ja
ret
lret
daa
repnz
cltd
pop
lret
jmp
leave
jle
pop
xor
gs
ss
jmp
add
xor
mov
out
subl
lcall
push
call
std
push
dec
jno
push
fdivp
add
inc
mov
push
out
inc
add
lcall
in
push
mov
jecxz
rorl
in
xor
lods
mov
lds
aas
ficoms
fadd
call
cs
mov
into
cmpsb
cmp
shrb
outsl
stos
hlt
fists
inc
addr16
repnz
cmc
lret
pushf
xor
sub
mov
out
ljmp
pop
idiv
cmp
inc
loopw
pop
js
in
mov
inc
loope
test
call
frstor
test
test
push
add
std
lock
aas
and
jle
cmp
and
mov
pusha
jg
xchg
sub
aaa
sarl
sbb
jbe
mov
mov
cli
arpl
testl
movsl
movsl
push
adc
decl
fcomps
sub
repnz
clc
push
ficoms
or
mov
pop
lock
iret
in
adc
addr16
sub
jb
jae
test
jne
mov
mov
cmp
mov
lock
rcrb
jne
stos
rolb
pop
cli
dec
ja
ret
adc
insl
add
ret
push
loop
or
mov
or
mov
ss
mov
dec
outsl
in
testb
das
dec
icebp
cli
iret
aaa
pop
cmpsb
clc
inc
mov
push
ljmp
into
and
insl
push
sbb
inc
pop
js
adc
js
mov
ret
cmc
ss
aam
ljmp
jnp
aad
out
or
insl
mov
shlb
add
in
notb
les
test
xchg
mov
pushl
ja
dec
les
movb
imulb
test
fdivrl
sub
cmpsb
push
and
pop
rcll
pushl
out
dec
lret
push
lods
jl
out
imul
fidivs
mov
jmp
sub
jae
mov
arpl
movsl
sahf
mov
je
rorl
repnz
enter
clc
mov
sub
pop
or
outsl
sbb
jg
jmp
testl
shlb
jne
and
and
scas
stos
fsubrp
pop
fcomip
sub
push
out
insb
outsb
cltd
out
repz
dec
cmpsl
lret
pop
sbb
lods
dec
mov
dec
int
push
fsts
pop
jg
lea
inc
xor
inc
lock
fcompl
test
loop
fisttpl
cmpsb
cmc
sbb
call
pop
jns
loope
rcr
test
sub
push
out
push
in
xchg
add
aad
cmp
enter
std
push
into
mov
pop
xchg
mov
or
mov
callw
fwait
cmp
mov
ss
inc
xchg
cmp
dec
and
cmp
cmp
daa
cmp
xor
or
xchg
cwtl
ljmp
sarb
cmpsl
sub
subb
popa
test
pop
lods
sub
aad
sar
jmp
dec
lret
sti
xchg
jge
nop
scas
adc
adc
and
push
ret
jo
mov
xor
cmp
aaa
xchg
jbe
std
pushf
lds
adc
les
lret
or
add
push
rcl
dec
sbb
mov
jmp
or
inc
jnp
fisubs
mov
ret
incl
cld
lds
jbe
cli
add
cld
aas
mov
jo
shrb
orb
and
repnz
test
call
pop
and
sbb
inc
dec
push
xchg
sbbb
sub
push
push
notb
cmc
fidivrs
int
mov
mov
pusha
xor
mov
mov
fucomp
cs
sahf
sahf
and
jb
push
in
call
and
insl
cld
inc
sti
mov
shll
pop
cmp
jg
cmp
popa
inc
pushf
push
xor
inc
popf
mov
addr16
movsb
cmp
pusha
xchg
push
jno
adc
shlb
adc
ljmp
iret
mov
aaa
xchg
lock
out
daa
xbegin
and
cli
inc
repz
dec
push
insl
jge
jmp
cltd
pop
test
push
xchg
pop
mov
lock
outsw
fbld
push
ja
call
rorl
jns
data16
mov
mov
lret
cmp
xlat
and
incl
loope
and
arpl
fbld
adc
hlt
xlat
ret
mov
aas
outsl
subl
push
fmuls
sahf
arpl
je
push
cmpl
decl
pop
ret
adc
ljmp
jae
jg
decl
arpl
les
aad
xchg
sahf
inc
mov
inc
leave
push
mov
push
push
xlat
dec
fs
add
jo
test
repnz
mov
adc
xchg
xchg
clc
mov
prefetcht0
incb
repnz
mov
pop
mov
mov
dec
push
es
jo
cmpl
mov
sub
loopne
mov
mov
xor
dec
lods
jge
dec
cmpsb
cli
es
xor
fdivr
push
lcall
xchg
dec
ss
jmp
dec
push
lahf
in
pop
lret
fbstp
sub
jno
mov
pop
fstp
xor
adc
jnp
ja
add
dec
insl
mov
lcall
ret
lods
jne
adc
mov
es
icebp
sub
xchg
aaa
ficoms
sub
add
and
sarl
dec
call
popf
loope
mov
jo
ja
sub
cmp
mov
mov
add
add
arpl
jne
and
jle
adc
mov
jmp
cwtl
push
mov
cwtl
jmp
subb
mov
pop
fbld
loop
xchg
enter
pop
mov
inc
xor
xchg
push
lock
jne
and
iret
in
pop
loope
cmp
call
lcall
lods
das
jle
xor
or
ljmp
mov
lcall
test
enter
pop
jae
test
xor
jp
push
bound
and
jnp
fiaddl
inc
adc
mov
call
mov
insb
test
inc
pop
mov
mov
stc
cmp
pop
daa
adc
incl
lock
xchg
inc
lea
test
popa
and
inc
mov
xor
sbb
sub
hlt
xchg
rolb
pop
stc
jae
aad
mov
xchg
lret
add
xlat
cmp
notb
jo
adc
xchg
shlb
sti
or
clc
xchg
in
mov
mov
and
lds
in
sbb
das
fst
outsl
hlt
cwtl
loope
dec
pop
push
aas
jmp
test
jb
je
loopne
xchg
imull
mov
dec
cmp
jnp
nop
mov
or
jb
roll
pop
mov
fcomps
adc
pop
push
stos
cmp
mov
sarb
mov
mov
jmp
pop
popf
xchg
cld
mov
scas
pop
push
jns
ret
add
pop
hlt
mov
scas
arpl
pushl
adc
cmp
add
cmc
outsl
xchg
mov
hlt
add
repz
pop
clc
mov
shrb
and
jno
shlb
call
std
push
cmp
and
pop
add
cmpsb
leave
fdivr
call
add
ret
lock
out
jle
stos
fwait
dec
stc
mov
enter
stos
or
icebp
jmp
ds
test
call
inc
stos
decl
xchg
or
mov
xchg
int
mov
aam
and
sub
jns
jns
mov
xchg
les
fsubl
das
or
repnz
insb
xor
scas
dec
mov
cld
call
dec
xlat
enter
xchg
mov
aam
loopne
sub
sbb
push
pop
cwtl
inc
fadd
jmp
fadd
pmulhw
je
add
pop
adc
or
sub
push
out
and
jnp
daa
jns
cmp
aas
in
dec
xchg
dec
mov
aam
xchg
fisttps
push
in
pop
pop
pop
xchg
pop
jecxz
iret
idiv
call
nop
push
mov
out
or
dec
adc
xor
dec
push
jno
movsb
ret
movsb
sub
adc
pushl
loopne
or
mov
pushl
int3
cs
sbb
mulps
and
and
rcr
mov
mov
pushl
mov
jmp
in
xchg
test
fistpl
aas
pop
int3
cmpsl
outsb
shlb
pushl
or
add
inc
and
out
fimull
loopne
xchg
fcompl
subb
scas
lcall
insl
mov
jae
xchg
push
movsl
lds
es
mov
mov
call
mov
sub
popf
push
fmull
push
inc
adc
and
es
ljmp
push
and
lcall
fs
xchg
ljmp
jbe
or
inc
jp
ss
inc
ljmp
push
cltd
decl
repnz
jmp
pushf
mov
icebp
or
xchg
es
cmp
inc
push
jne
stos
inc
es
or
hlt
ljmp
adc
sub
dec
adc
sub
xchg
and
fstpl
mov
fbstp
repnz
jmp
or
lret
push
mov
mov
aam
xchg
lock
jg
insb
int3
sbb
inc
push
mov
cmp
xor
or
incl
or
popf
inc
fldcw
mov
out
dec
insb
ss
call
loope
cmp
or
leave
loopne
pop
out
cmp
shl
gs
inc
pushf
scas
mov
clc
xlat
mov
pusha
sbb
test
jmp
jo
test
cld
rcll
cmp
loopne
decl
stos
sti
rorb
inc
mov
dec
mov
ljmp
sub
push
rorb
setp
adc
sbb
decl
mov
lret
push
movb
in
mov
jg
pop
clc
pop
mov
mov
ret
ret
es
stos
jmp
push
jecxz
call
test
sub
xor
arpl
mov
lods
test
sub
lea
hlt
sbb
lcall
push
pop
lret
test
jl
push
mov
mov
inc
dec
xchg
call
sahf
mov
popa
add
test
xchg
filds
movsb
iret
lock
faddp
adc
mov
loopne
mulb
jp
repz
scas
out
push
push
in
add
es
cmp
jg
jb
mov
sbb
std
aam
imul
cmp
mov
arpl
jno
int
pop
ret
pop
les
das
dec
push
cld
int
cld
incl
and
bound
push
out
enter
mov
bound
ret
repnz
or
jmp
push
jp
pushf
aas
loopne
push
ret
aam
mov
add
cli
pop
and
call
out
pushf
js
aad
mov
add
inc
mov
popa
les
dec
pop
lcall
dec
fisubs
adc
and
iret
sbb
jg
sub
insl
jmp
pop
inc
xchg
mov
mov
cmp
mov
mov
outsb
stos
jmp
jne
sub
sahf
inc
mov
mov
neg
pop
pop
lea
fsubrp
ds
pop
mov
aaa
lds
lcall
stos
int3
sbbb
cmp
lcall
dec
inc
lock
fildl
and
cltd
pop
and
lret
push
xchg
decl
shrl
or
xchg
ds
xor
sar
mov
or
inc
loope
fcoml
sahf
lock
mov
add
adc
shll
mov
push
test
test
add
jg
add
xlat
dec
jae
or
pusha
popf
repz
and
call
mov
jne
or
jae
ret
jmp
leave
mov
pop
dec
mov
arpl
pop
lock
loop
mov
sbb
hlt
popa
jg
pop
lock
scas
test
out
sbb
jmp
jg
lods
andb
lret
out
cwtl
inc
fwait
out
push
xchg
jae
frstor
xor
sahf
js
clc
sti
mov
pusha
mov
repnz
aam
jle
jbe
lods
fildll
out
xchg
clc
add
mov
cmpsb
cmp
push
mov
or
fs
ljmp
adc
xor
std
fs
cld
pop
cmp
xchg
jno
out
cmp
xlat
sub
jmp
jg
mov
lret
mov
lahf
aad
mov
repnz
fcomip
pushl
xchg
push
sub
cmc
je
loop
hlt
or
in
mov
mov
ljmp
shlb
ds
sbb
imulb
jo
pushf
gs
sub
rcr
jmp
mov
shrl
sarb
enter
out
clc
jg
hlt
cmp
push
lods
pop
inc
mov
arpl
ljmp
mov
lcall
fadd
sub
into
xchg
stc
js
ljmp
and
pop
sbb
mov
aad
std
and
movsl
dec
adc
push
popa
loope
dec
mov
ljmp
xchg
andb
hlt
add
insl
mov
ret
push
in
lret
mov
ljmp
test
mov
sti
pop
stos
mov
jo
xchg
sbbb
sbb
mov
dec
lods
cmp
call
std
dec
xchg
xchg
lea
jae
ds
cmp
popa
leave
cmp
add
out
rolb
iret
xchg
mov
cmp
out
lret
incl
inc
fstp
push
test
mov
fdivl
pop
or
fsts
jmp
andb
cmp
or
mov
adc
jmp
lods
dec
stc
jg
call
cld
jnp
add
aad
pushf
inc
mov
or
unpcklps
out
mov
and
sub
das
inc
in
dec
arpl
jge
inc
mov
cmp
test
add
jg
rclb
push
sub
test
xadd
pop
fcomip
decl
mov
pop
cmp
inc
outsl
shrl
cmp
ss
add
mov
sub
pushf
sub
inc
xor
pop
push
lahf
cmp
hlt
in
outsb
fprem
mov
fcom
sub
incl
call
jle
inc
xchg
add
outsl
bound
adc
pop
cmc
jg
imul
add
sbb
scas
adc
mov
xor
jmp
int
fucom
pop
adc
jle
out
loop
mov
test
mov
mov
getsec
sbb
jo
imul
dec
jecxz
test
mov
cmpsl
aas
pushf
fbld
cs
pusha
insb
fwait
sbb
loopne
ljmp
pop
mov
add
in
testb
imul
incl
mov
js
mov
das
arpl
repnz
and
pop
repz
sbb
pop
adc
or
jg
jmp
cmp
or
cmp
jge
movsb
pop
dec
stos
inc
je
jg
out
fwait
cli
pop
jmp
xor
dec
fnstsw
rorb
jmp
add
js
sti
gs
push
and
ljmp
inc
xor
loope
loope
or
shl
inc
xor
sarb
pop
add
fistps
fldenv
nop
out
nop
mov
pop
fldenv
ss
jae
pop
xchg
jb
jne
mov
cmp
pop
jp
push
into
xchg
divb
loopne
sbb
xchg
add
sbb
int
stos
addl
test
push
adc
and
outsl
and
pop
add
jo
lcall
mov
cmp
cmc
inc
mov
addr16
mov
inc
cmp
ret
call
xchg
or
lret
out
out
stos
aas
repnz
cltd
lret
xchg
jb
pushl
cld
loop
fisubrl
mov
out
adcl
adc
in
sub
inc
shrl
mov
addr16
add
sbb
and
ret
jmp
pop
lock
ret
pop
test
ljmp
xor
xchg
inc
pushf
cmp
jmp
inc
inc
sbb
and
scas
out
xchg
adc
call
adc
dec
sub
hlt
call
mov
xchg
insl
add
sbb
cld
mov
popf
mov
and
cmp
mov
ljmp
jecxz
push
call
and
xor
repz
pop
cmc
mov
std
std
mov
je
incb
out
das
outsb
mov
cltd
out
mov
ja
jbe
add
call
adc
es
mov
xor
or
xchg
cld
cmp
cli
xor
sbb
incl
xchg
idivb
lods
mov
addr16
in
ffree
idivb
call
pop
add
cmp
jmp
movsl
in
pusha
jae
inc
push
fwait
add
jnp
lret
js
ja
int3
sub
in
scas
sbb
jge
ss
insb
popf
test
lcall
orl
push
in
xchg
jp
test
cli
sbb
lods
push
popf
adc
pushl
or
jbe
jno
push
push
push
adc
ja
jmp
pop
fwait
or
pop
je
adc
mov
sub
and
ret
jg
lcall
pusha
mov
sub
scas
pop
loope
jle
test
cmp
lds
lcall
xorb
imulb
movsb
out
adc
jmp
jns
lret
loopne
push
sti
push
adc
incl
adc
in
mov
pop
mov
pushf
jecxz
rcrl
pushf
jae
fldl
test
call
jge
inc
cwtl
and
repz
sahf
test
xor
push
or
lock
fisttps
negb
pop
sbb
stos
mov
ljmp
in
xlat
jbe
fisubs
push
jecxz
push
out
sbb
and
xchg
addr16
cld
lods
xchg
in
mov
int3
add
fwait
push
int
pop
mov
push
mov
jge
pusha
push
cmpsl
lods
out
pop
jae
inc
jg
or
cld
inc
jno
mov
popa
adc
icebp
mov
std
cld
cmp
cmp
imul
lods
pop
mov
pop
lcall
js
inc
sbb
xor
adcl
rcrb
mov
into
je
mov
call
jp
mov
jb,pn
jno
push
ficomps
aam
out
imul
push
in
pop
mov
call
sub
and
pop
inc
mov
xor
jl
sub
int3
popf
jg
and
xchg
sbb
fdivr
sbb
and
imul
in
lcall
fs
mov
xlat
clc
ret
icebp
and
mov
xchg
pushf
mov
jns
ljmp
xchg
dec
and
or
sti
xchg
inc
test
cmp
or
loope
cmpsl
lds
adc
pushl
mov
and
mov
pop
jmp
jae
cmpsl
xchg
imul
shll
leave
dec
ljmp
xor
adc
int
lock
mov
mov
add
rorb
dec
mov
movsl
jnp
or
ljmp
sub
and
adcb
push
lods
dec
mov
xchg
jg
inc
loop
xchg
xchg
jns
or
mov
cltd
repnz
jmp
ss
gs
sub
sbb
mov
push
cmp
leave
pop
enter
movsb
jbe
ljmp
sbb
loope
addr16
pop
in
mov
in
arpl
mov
xchg
xorb
lcall
ret
inc
lods
es
std
daa
sbb
pop
or
dec
mov
incl
jle
mov
lods
jb
outsl
test
mov
cmp
or
js
pop
and
ja
xor
call
cmp
sti
adc
les
mov
pop
icebp
mov
cmp
cmp
test
dec
lods
jns
aas
cmp
add
lret
cmc
ljmp
or
xchg
mov
xchg
adc
in
xor
xor
lock
call
das
int3
push
aam
int
mov
mov
decl
fsubs
mov
js
fprem1
push
mov
fbstp
push
pop
inc
ss
cmp
andl
lea
mov
imul
push
js
ret
imul
loope
mov
imul
cmp
jno
lcall
test
xchg
add
rep
popf
cmp
sub
rep
adc
cltd
xor
out
decl
dec
lods
cmpsb
mov
repnz
inc
xor
jecxz
rcr
cwtl
and
adc
inc
jno
sbb
hlt
icebp
pop
or
stos
push
xchg
loopne
fcomi
loope
and
enter
mov
jg
rorl
jmp
adc
repz
int
fcoms
cmpsl
clc
jnp
movsb
cwtl
dec
sub
hlt
sub
sub
nop
mov
xchg
push
lret
mov
cmpsb
incl
fiadds
push
shr
notb
enter
popf
movsb
icebp
pushl
mov
outsl
fsubrl
push
movsl
sbb
sahf
mov
add
push
pop
leave
dec
mov
je
cltd
mov
in
call
xor
xchg
jbe
pusha
mov
popf
movsb
xchg
pop
out
lahf
les
jae
pop
dec
loop
call
xor
aam
fwait
mov
jae
mov
out
jmp
into
inc
sub
outsb
pop
xchg
fwait
test
lcall
imul
mov
adc
loopne
ror
xchg
cmpsl
fs
and
mov
mov
inc
mov
sbbl
or
jecxz,pn
and
insl
ret
and
lock
in
push
mov
mov
into
gs
pop
cwtl
cmp
pop
dec
add
push
outsb
aaa
mov
aad
pop
jmp
test
add
pushl
push
pop
cmp
in
pop
sub
pusha
push
popa
shrb
mov
decl
aam
mov
pop
pop
push
push
imul
sbb
pop
mov
ljmp
dec
scas
sahf
sahf
ds
test
rclb
xchg
xchg
pushl
mov
inc
cmpsb
fxch
or
stos
or
shrb
idivl
adc
pop
fwait
sar
repnz
aaa
lods
sub
dec
insb
push
jo
pushl
inc
xchg
dec
es
sbb
imul
mov
pop
in
xor
adc
or
call
add
inc
push
adc
ja
push
add
enter
gs
outsb
xchg
push
jg
mov
sub
in
or
xor
mov
sbb
fstps
pop
icebp
ljmp
mov
mov
mov
clc
jns
cli
dec
shrl
xchg
ljmp
leave
jo
mov
lcall
sub
xchg
dec
push
iret
ljmp
rol
jbe
dec
roll
adc
jmp
test
push
push
out
pop
cld
cld
adc
mov
dec
mov
lock
mov
stos
dec
loop
pop
loop
or
in
call
lcall
adc
push
repnz
rcrb
ljmp
fs
adc
sarl
jmp
loopne
jp
mov
imul
fstpt
mov
ja
mov
scas
and
sbb
in
shll
out
mov
call
pop
icebp
rorl
pop
xor
add
sar
fcomip
or
xchg
repz
add
and
fimull
std
incl
jecxz
xchg
dec
mov
cmp
rcll
mov
test
std
bound
sub
mov
subl
das
jo
add
test
divl
popw
and
and
sbb
call
popa
jl
std
sbb
mov
add
inc
aaa
ret
push
jl
and
int3
mov
data16
jbe
test
int
pushf
jecxz
pop
lods
repnz
cwtl
rcrb
cmp
call
mov
push
rcrb
hlt
fwait
and
loop
scas
inc
cmp
andl
decl
call
xchg
jmp
add
sub
xor
lcall
xchg
xchg
ds
aad
xchg
xor
pop
jo
xchg
push
nop
dec
xor
in
add
pop
sbb
xchg
dec
pop
mov
sahf
push
jecxz
dec
rcr
add
xor
ljmp
push
cld
xlat
lock
jl
pop
mov
dec
mov
fiaddl
cmp
add
in
xor
fldl
rcll
mov
mov
jg
dec
cld
dec
mov
shrb
mov
dec
lcall
sub
pop
inc
adc
or
div
in
pop
sbb
decl
data16
fcomps
cmp
testl
fnsave
jmp
js
and
push
test
aaa
je
sbb
jmp
adc
mov
dec
out
ds
mov
mov
in
iret
inc
mov
pushl
adc
idivl
testl
xchg
jle
push
xor
inc
shlb
scas
lcall
sahf
fnstenv
ja
lock
enter
mov
mov
cmp
jge
rcl
outsb
fiaddl
mov
repz
outsb
adc
decl
pop
jnp
mov
mov
xor
loopne
stc
gs
cltd
or
jo
add
test
lcall
jmp
inc
fisubs
or
packsswb
push
scas
and
pop
outsb
mov
jmp
scas
and
outsl
in
cmp
xchg
pop
sbb
pop
ret
cmc
sbb
addr16
cld
loop
cmp
and
cld
lcall
push
jae
insb
push
hlt
jg
outsb
inc
mov
jae
adc
cmpsb
dec
or
mov
cwtl
sbb
pop
pop
in
testb
xchg
les
hlt
ljmp
cmpsb
out
dec
adc
pop
sub
mov
mov
ljmp
push
sahf
or
int
and
lret
xchg
sub
incl
notl
into
push
mov
mov
pop
out
mov
pushl
jb
adc
sub
jo
jg
xchg
dec
cmc
jmp
js
sti
xchg
ret
xchg
scas
mov
jno
repnz
mov
xchg
mov
inc
and
pushl
adc
xchg
pop
mov
mov
pop
stos
and
mov
mov
fbstp
sbb
mov
xor
into
jb
mov
adc
cmpsl
mov
shll
outsl
test
mov
sbb
inc
xchg
push
gs
das
add
mov
loopne
mov
test
dec
bound
lods
adc
mov
sbb
mov
xor
loop
dec
push
mov
fiaddl
lret
sbb
cmp
inc
push
movsl
aad
test
arpl
call
push
adc
adc
aad
sub
push
pop
add
mov
stc
popf
jne
lods
ljmp
mov
int3
sti
push
enter
xchg
lds
insl
push
xchg
jo
mov
jg
insb
cld
loope
aam
mov
testb
sbb
stos
push
call
and
pop
cmpb
ss
inc
repz
in
xchg
cli
idiv
fbld
xchg
and
jl
movsl
adc
adc
mov
hlt
das
and
repz
adc
push
pop
pop
div
jg
pop
daa
mulb
mov
xchg
out
sub
inc
mov
decl
les
iret
insl
cmp
sbb
insl
dec
push
jg
mov
das
call
xchg
out
mov
mov
call
jns
outsl
rclb
push
pop
data16
call
movsl
or
adcb
inc
add
push
insb
into
xchg
jl
out
fimuls
pushl
jp
dec
sub
xchg
xor
mov
js
fildll
adc
incl
mov
out
pop
inc
test
adc
fisttps
jo
les
jp
add
and
cli
push
xchg
lahf
mov
add
dec
test
out
or
call
jmp
mov
jno
cli
sub
push
inc
jecxz
mov
std
ljmp
adc
outsl
pop
int
stc
pop
mov
dec
lods
mov
jg
ljmp
in
fcoml
mov
test
xchg
outsl
jo
mov
call
cli
call
mov
lahf
stos
push
into
jle
bound
jbe
ret
pop
in
cmp
call
iret
rclb
outsb
lret
sbb
jecxz
mov
icebp
call
inc
sub
cld
adc
adc
lods
pop
mov
in
sub
inc
mull
sbb
jns
lcall
dec
rclb
adc
dec
xor
pop
pop
xchg
sbb
jp
inc
jmp
cmp
into
aad
add
mov
jbe
sbb
add
aaa
add
cmc
scas
mov
jp
mov
mov
faddp
mov
lcall
push
ret
test
cmpsl
leave
aam
into
aaa
sub
scas
or
movsb
sub
sub
les
xor
mov
cmp
or
lret
cli
ret
push
insl
mov
jle
cmp
decl
ret
call
rolb
and
adc
mov
insl
cld
mov
outsb
mov
pop
jmp
dec
push
cli
std
inc
lret
jge
hlt
lcall
sub
push
scas
hlt
ljmp
sbb
xor
add
jg
fbstp
pop
mov
xor
addr16
sahf
pop
jns
je
jo
sbb
pop
fldl
clc
lcall
mov
mov
fstpl
sti
and
nop
imul
jecxz
lods
test
inc
dec
movsl
push
adc
inc
add
incl
pop
xor
sbb
imul
sub
jg
mov
icebp
sbb
sti
xor
sub
mov
and
sahf
mov
aas
lahf
pop
jmp
lcall
jge
push
xor
mov
jecxz
mov
rol
mov
out
aas
incb
sbb
fisubl
inc
out
cs
stos
mov
decl
inc
repz
add
les
mov
mov
fnstcw
jl,pt
cmp
jmp
aam
push
xor
imul
negl
pop
push
and
mov
sarl
jmp
adc
adc
xor
pop
cmpsb
sar
scas
cmp
sub
lcall
mov
xorb
pop
pop
pushf
mov
push
jp
cmpsl
push
aaa
mov
push
add
and
jnp
lods
mov
sti
stc
sar
lcall
loope
mov
test
loopne
xor
sub
xchg
sub
sahf
inc
jecxz
fldenv
fidivl
popa
std
or
mov
scas
les
mov
scas
rclb
sahf
hlt
dec
push
mov
ja
incl
ret
cmp
inc
jmp
out
or
std
push
mov
sub
lcall
mov
jge
enter
cwtl
inc
xchg
or
sbb
stos
mov
out
dec
adc
rcr
xchg
mov
mov
xchg
jecxz
jmp
stos
mov
push
testb
jmp
xchg
je
mov
mov
rorb
inc
call
arpl
call
mov
and
and
popf
jo
sbb
dec
lds
inc
aad
leave
mov
cli
push
int3
mov
imul
push
xchg
dec
sti
loope
rclb
fists
pushw
ljmp
loope
bound
cmpsl
test
push
pushf
lea
jg
add
inc
xchg
mov
into
jbe
inc
out
fimull
mov
scas
xchg
dec
rolb
pushf
jmp
mov
push
sbb
shr
cmp
shl
xchg
call
pushl
push
push
add
mov
loope
das
stos
sbb
mov
jmp
push
pop
ljmp
incl
lds
std
loop
add
xchg
inc
pop
pusha
daa
loop
push
popa
call
jmp
dec
inc
adc
or
push
xor
test
popf
stos
sbb
out
cli
jg
xor
lds
xchg
cwtl
shrl
push
add
sbb
jp
add
push
cld
ljmp
sahf
dec
xchg
xor
fsubp
push
insb
sbb
xchg
es
incl
xchg
stos
daa
xchg
cli
test
mov
xlat
ljmp
push
out
or
inc
sahf
adc
push
mov
mov
sbb
pop
mov
ficoml
popa
loopne
fwait
aas
cli
shlb
subl
lods
dec
push
ret
into
out
mov
in
mov
ljmp
movsb
mov
push
jg
mov
scas
bound
fiadds
sub
push
mov
loope
nop
lret
dec
mov
ljmp
dec
flds
insl
arpl
std
lahf
jecxz
pop
outsb
lods
jle
aaa
or
push
sub
xorl
fidivrl
lcall
int
xchg
sbbb
lret
stos
and
sub
out
add
test
jmp
int3
loopne
in
add
ljmp
or
shrb
jno
ror
dec
mov
adc
insb
mov
enter
inc
pop
out
jp
cmp
xchg
sub
push
cmp
cs
incl
mov
cmp
xchg
sbb
pop
pop
std
mov
scas
dec
fldl
push
dec
call
xchg
and
cmp
push
in
int
dec
enter
xchg
sti
icebp
mov
sbb
gs
enter
faddp
ret
mov
dec
xor
call
mulb
pop
xchg
inc
and
adc
xchg
mov
inc
jmp
shll
in
outsb
dec
leave
inc
cs
dec
xchg
and
xor
sar
incl
fdivl
repnz
cmp
aad
xchg
sbb
mov
lock
xlat
xor
ss
ljmp
shlb
dec
das
sbb
mov
pop
popa
int
aad
mov
call
leave
dec
push
insb
sbb
lcall
inc
mov
mov
popa
movsl
and
cld
outsb
fldt
mov
imul
loop
shl
aaa
add
incl
bound
lods
ret
jecxz
jecxz
nop
pushf
inc
push
push
sub
rcrl
jb
pop
lock
sahf
roll
shll
mov
sti
inc
incl
hlt
test
mov
lret
ds
roll
es
arpl
lcall
and
jle
outsl
cmp
dec
push
mov
add
outsl
mov
loopne
push
fs
scas
inc
xchg
mov
add
mov
jmp
dec
adc
xor
gs
xchg
mov
and
and
add
rorb
movsb
gs
mov
or
nop
ljmp
or
or
rcl
in
incl
pop
repz
insl
inc
cltd
inc
test
inc
mov
ljmp
ret
mov
data16
sbb
jb
mov
or
stos
push
cmp
decl
inc
xchg
pop
imul
jns
xchg
or
hlt
mov
ret
lcall
lds
cmp
icebp
repnz
lds
lods
jbe
or
mov
pop
ret
mov
mov
clc
mov
sub
mov
adcl
incl
nop
xor
or
push
jnp
jg
and
int
sbb
cmp
imul
jg
bound
push
clc
fwait
pop
jl
cltd
movsl
addr16
jnp
mov
scas
jmp
or
push
mov
sub
clc
out
rorl
cltd
sub
jg
mov
notb
femms
sbb
arpl
sbb
subb
stos
addr16
sub
or
loope
aas
xchg
xchg
push
xor
sub
mov
dec
out
xchg
cli
ud0
lcall
rcll
shll
push
shll
sbb
pop
mov
fcoml
les
sbb
push
faddl
cmc
and
out
das
repz
cmp
jno
cmp
mov
cld
nop
pop
jecxz
stos
push
faddl
cli
imul
aad
movsl
in
out
or
incl
enter
ds
jne
mov
shll
cmpsl
adc
loopne
inc
popaw
xchg
mov
faddp
jno
adc
jge
roll
mov
sbb
xchg
jmp
std
sahf
imul
adc
cmc
icebp
mov
orb
jne
shlb
ds
push
call
push
pop
and
or
imul
cmp
or
mov
or
inc
cmp
jle
adc
or
ja
daa
sub
imul
dec
mov
mov
sarl
mov
sub
jecxz
mov
out
push
or
inc
rclb
movsb
adc
xchg
aas
les
fbld
imul
rcll
add
sbb
jg
add
pop
outsl
sub
push
mulb
test
xor
rolb
inc
in
fwait
fwait
jg
mov
sub
dec
xchg
test
xor
sbb
in
test
inc
movsl
push
pusha
mov
cli
or
mov
nop
mov
push
loop
adc
mov
pop
sbb
loopne
push
sti
mov
mov
daa
mov
fimull
fisttps
icebp
rsm
xchg
pop
pop
ret
mov
orb
mov
les
sbb
loopne
or
std
stos
add
xor
jge
ret
shlb
inc
popa
add
out
adc
xlat
fcmovnu
mov
or
pop
and
inc
xchg
aam
incl
sub
cmpsw
mov
mov
lods
mov
mov
pop
sahf
dec
xor
iret
xor
scas
adc
xchg
push
cld
jmp
and
call
movsl
dec
mov
pop
jg
insb
inc
or
add
or
cmp
xor
mov
out
xchg
lcall
cmpsb
xchg
rorl
mov
iret
pusha
jle
push
insb
mov
decl
mov
into
data16
test
jl
adc
dec
in
and
mov
add
repz
push
push
insb
jecxz
pop
push
pop
shrl
idiv
jmp
mov
xchg
jae
or
and
mov
insl
shrb
out
and
fs
ljmp
mov
xchg
inc
test
xchg
es
pop
mov
fstpl
lcall
add
push
sahf
shrb
outsl
orb
imul
hlt
push
pop
rcr
mov
outsl
cld
aaa
or
in
repnz
imul
decl
mov
adc
fidivrs
mov
and
xor
shrl
leave
fldl
mov
sbb
cmp
inc
rclb
cli
mov
imul
and
lock
rorb
inc
mov
mov
stos
or
push
push
xchg
adc
adc
lea
ljmp
xchg
xchg
jg
fmull
xchg
dec
movl
sub
je
es
jg
ljmp
sub
les
xchg
push
js
pop
jnp
pop
mov
call
sahf
aam
mov
lahf
sub
cmp
jns
mov
and
sarb
mov
scas
rclb
lods
fbld
push
mov
or
leave
repz
sbb
lcall
pushf
cli
sbb
xor
icebp
sub
dec
aad
xchg
les
cld
call
aam
xchg
fildl
dec
ds
das
cmpsl
adc
fcomip
aaa
or
movsl
stos
add
enter
testl
aas
sbb
jmp
std
mov
call
pusha
add
push
jns
rcrb
sahf
dec
mov
inc
ljmp
clc
sbb
sbb
xor
or
mov
cmp
insl
adc
shll
in
inc
fsubl
iret
lea
or
sub
test
dec
add
outsl
loope
pop
cli
ljmp
push
popf
adc
cs
xchg
adcb
and
sbb
loope
sti
pushl
int3
mov
imul
ss
mov
xor
mov
jnp
imul
inc
xchg
xor
test
jmp
ficoms
fadd
sub
loop
leave
or
in
sub
ljmp
loope
insb
adc
divl
or
ljmp
lcall
lcall
mov
outsb
sti
xchg
cmp
jp
dec
add
push
call
lcall
adc
stos
lahf
push
test
pop
out
jo
fidivl
jb
sub
insb
cli
decl
pop
push
popf
push
insb
shl
flds
sub
pop
xchg
push
inc
lock
sub
jb
inc
mov
sti
aam
icebp
lock
xchg
push
jmp
adc
ja
mov
push
dec
daa
js
ror
test
inc
loope
pop
cli
aam
outsl
dec
cmpsb
pop
sub
data16
dec
mov
das
mov
ret
gs
mov
push
xor
or
decl
mov
sub
cmp
ja
mov
jb
fcomip
adc
movsl
leave
cmpsb
push
mov
sub
mov
or
lret
dec
incl
popa
jge
jbe
inc
cmpsl
or
inc
and
test
or
push
sarb
cmp
add
popa
push
fists
jp
adc
je
je
jb
jne
dec
outsb
in
outsl
fwait
leave
xor
inc
jb
je
inc
imul
jg
imul
inc
insb
insb
outsl
arpl
inc
arpl
inc
fldt
sti
push
inc
je
push
dec
sub
aaa
push
push
jo
sti
imul
cmp
nop
imul
outsb
sub
mov
pop
push
es
data16
imul
out
in
out
push
arpl
gs
jns
bound
outsl
imul
push
jb
inc
fs
lds
dec
imul
dec
jns
mov
scas
inc
je
jnp
or
pop
add
jno
imul
insl
gs
add
in
sub
imul
xor
add
xchg
jb
sub
sbb
or
int3
inc
inc
daa
and
push
mov
add
shrl
mov
add
push
ret
int
sub
mov
and
lds
or
js
push
lods
and
sub
pop
add
iret
stos
adc
popf
cmc
arpl
pop
add
stos
popf
test
and
add
push
mov
inc
punpcklwd
js
subl
xor
ret
addr16
mov
cltd
rolb
and
adcl
sbb
cltd
orl
stos
or
add
add
and
adc
addl
insb
sbb
mov
test
add
pop
shll
xor
or
inc
mov
inc
ja
sub
mov
sub
mov
loope
push
jb
outsb
jae
mov
mov
push
imul
ljmp
dec
xor
inc
ret
add
dec
inc
dec
sbb
andb
out
cmp
movsb
andb
adc
dec
adc
mov
or
adc
or
add
and
aas
or
adc
adc
dec
dec
inc
xchg
add
aas
imul
add
mov
and
push
dec
sub
and
and
mov
xorb
or
ret
mov
inc
add
pusha
pop
adc
mov
les
add
dec
add
sub
add
jae
mov
add
mov
fwait
jne
mov
inc
xor
add
or
nop
out
cmp
mov
mov
and
outsl
push
dec
add
add
loopne
popl
std
add
bound
jo
sbb
incb
fistpl
add
nop/reserved
pop
fwait
jge
aas
cmp
lea
mov
sub
add
repz
shlb
cltd
fcomps
dec
and
jge
fwait
add
mov
mov
jae
outsb
fs
je
mov
jle
sbb
bound
rorb
repz
dec
addb
xor
fwait
xchg
int
add
xor
push
xor
add
aaa
dec
inc
gs
mov
cmpsb
cmpsb
lock
push
mov
dec
jae
dec
pop
add
lcall
push
aas
xchg
and
daa
enter
add
dec
incl
add
add
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
addb
add
add
add
add
add
add
or
add
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
addb
add
cmp
add
pusha
add
orb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
mov
add
fcoml
add
pop
add
in
add
add
add
add
add
add
add
mov
add
rcrb
loopne
add
in
add
add
add
add
add
add
add
fadds
add
movsb
popa
aas
add
pop
add
in
add
add
add
add
add
add
add
add
add
mov
add
pop
add
in
add
add
add
add
add
add
add
sub
add
insb
jno
add
pop
add
in
add
add
add
add
add
add
add
push
add
add
aas
add
pop
add
in
add
add
add
add
add
add
add
js
add
xor
aas
add
pop
add
in
add
add
add
add
add
add
add
mov
mov
add
pop
add
in
add
add
add
add
add
add
add
enter
cld
nop
aas
add
pop
add
in
add
add
add
fcom
add
cmp
stos
aas
ljmp
test
icebp
mov
pop
outsl
jbe
js
mov
xor
lods
mov
jno
jl
fs
insl
fsubs
das
aas
call
pop
sahf
aad
hlt
jecxz
test
in
cli
repz
cmovs
or
ljmp
xchg
inc
scas
sub
push
adc
dec
or
mov
aad
mov
pop
sub
inc
aas
adc
jns
rolb
sbb
and
xchg
pusha
mov
pop
cmp
aad
loopne
movsl
unpcklps
jae
fsubrp
loop
xor
mov
mov
mov
lods
cli
mov
jne
or
adc
scas
lret
mov
ljmp
cmc
adc
dec
mov
jmp
fistps
in
cmpsl
notl
push
aas
pop
adc
jae
int
sbb
stos
cld
adc
add
jmp
mov
pop
push
mov
enter
jmp
xor
iret
xor
in
xlat
or
outsb
sarl
and
shrb
adc
inc
add
fmul
movsb
push
pop
test
out
mov
pop
push
inc
xlat
dec
jbe
add
out
call
pop
xlat
je
adc
lock
pop
sahf
es
mov
test
push
in
addl
xchg
add
jmp
pop
adc
cwtl
in
sbb
ret
pop
push
out
mov
daa
ds
adc
fsubrs
xor
sub
fs
xchg
imul
std
ljmp
mov
stos
out
jb
popa
insl
sbb
test
jmp
push
aam
les
test
xchg
xchg
loopne
sub
mov
sub
xlat
lods
jae
scas
mov
cld
push
xchg
mov
pop
adc
stos
das
pusha
inc
nop
add
sahf
push
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
mov
out
inc
nop
add
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
cwtl
loope
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
js
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
pop
icebp
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
cmp
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
sbb
aas
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
clc
or
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
fcoms
aas
add
cmp
insb
ds
ffree
dec
or
call
and
rcrb
add
fcoms
in
xchg
imul
sub
push
pop
jecxz
or
xchg
jmp
bound
xchg
dec
movsl
inc
daa
dec
xor
test
cmpsl
icebp
xor
cltd
sub
dec
lret
pop
dec
push
pop
inc
cld
jns
jl
cmp
xor
cmp
scas
es
xchg
dec
bound
mov
fwait
enter
sahf
jo
scas
push
arpl
push
dec
push
loope
ret
sub
icebp
mov
dec
lret
or
mov
std
push
lcall
dec
lret
pusha
mov
popf
push
rol
lock
and
pop
xchg
clc
add
mov
lahf
add
loop
movsb
push
or
les
fdivrl
or
pushw
xchg
and
jle
jecxz
xor
daa
xchg
int
adc
fadd
dec
pop
in
scas
push
aam
adc
jmp
adc
ljmp
cltd
pop
or
sarb
aaa
mov
adc
pop
add
movl
pop
dec
mov
xchg
sarl
out
adc
sub
sbb
mov
jg
ss
inc
popa
pop
ja
test
dec
test
mov
xchg
icebp
pushf
incb
add
xchg
mov
xor
aad
loope
test
inc
jmp
jno
inc
scas
out
aam
stc
in
mov
sbbl
push
mov
lahf
jbe
push
hlt
xchg
repz
and
xor
popa
jo
lahf
in
sub
sbb
mov
xchg
push
lds
ja
push
mov
push
inc
cltd
lds
mov
test
mov
ss
inc
jns
in
cmp
push
adc
jne
xchg
push
popa
ss
daa
mov
pop
or
add
or
pop
sub
or
ja
mov
dec
push
lret
nop
and
xor
iret
push
cmp
push
das
lds
push
jg
mov
scas
mov
pop
sub
dec
insl
sti
ja
pop
addr16
pop
sti
xchg
outsb
and
jb
cmpsb
stos
repz
iret
das
sbb
jb
cmp
movq
xor
sbb
aam
dec
mov
imul
aam
adc
lret
in
test
jmp
push
xor
sub
jne
subb
inc
leave
std
sbb
pop
jne
rclb
test
xchg
dec
jl
cmp
lret
test
xchg
xchg
test
mov
sub
cmpsb
pop
mov
adc
and
xchg
or
test
cmpsb
ds
push
ss
mov
in
jb
in
ljmp
jnp
push
mov
jo
imul
cwtl
adcb
adc
and
int3
inc
loope
lahf
aaa
dec
fs
mov
leave
push
shrl
mov
gs
push
lahf
out
dec
mov
pop
out
rcll
test
pop
pop
mov
mov
nop
inc
das
test
xchg
xor
mov
cmp
lcall
jp
inc
cmp
jb
add
adc
adc
sub
lds
rolb
mov
xchg
call
in
inc
mov
sbbb
setno
ret
pushf
ss
dec
inc
nop
push
cmpsl
xor
xchg
xchg
orl
mov
add
in
pop
mov
aaa
rolb
rcll
cltd
enter
mov
lret
ljmp
mov
movsl
xchg
js
jg
in
mov
addl
xorb
out
pop
es
push
xor
negl
adc
fists
jle
pusha
stc
jmp
mov
mov
repz
negb
jae
imul
out
jnp
or
add
loop
clc
or
movsb
pop
cmp
mov
inc
ljmp
inc
adc
leave
xchg
pop
adc
mull
sub
or
cmp
js
push
mov
aas
inc
hlt
xchg
mov
inc
into
out
test
mov
scas
xor
sub
gs
mov
sbbb
and
test
cmpsb
insb
xor
jle
mov
mov
push
dec
mov
xchg
rclb
imul
xchg
fldt
and
mov
sub
notl
mov
jo
inc
cmp
sbb
adc
lods
pop
fmuls
mov
mov
inc
sbb
out
fstl
inc
mov
lods
cli
add
jecxz
fsts
cmp
das
sub
gs
jnp
mov
jg
ss
xchg
add
ret
jbe
fstpt
cmp
inc
stos
mov
sti
jo
mov
xchg
inc
lret
test
xchg
stos
jg
ds
sbb
mov
adc
test
rorl
lds
cltd
into
push
pop
inc
movb
fs
jmp
jb
sub
test
mov
clc
sub
adc
pop
ss
mov
inc
or
pushf
ja
insl
push
jo
inc
fldenv
test
mov
or
add
out
movsb
sub
cli
scas
sub
push
in
sar
aaa
inc
aaa
loop
xor
rcll
push
repz
insb
dec
daa
inc
std
sub
repz
or
and
shlb
stos
jb
mov
cli
int
gs
mov
inc
hlt
nop
call
add
xor
xchg
aam
xchg
lods
inc
lea
sbb
xchg
jge
xor
mov
ficomps
pop
jp
lret
shll
in
test
add
xor
mov
js
insb
or
xchg
inc
pop
sbb
into
push
xchg
or
data16
loopne
jp
mov
popf
pop
dec
ja
xor
fstpt
mov
sbb
hlt
cmp
push
mov
cmp
sbb
outsb
push
jmp
mov
cmp
and
in
xchg
lcall
loopne
inc
xor
adc
int3
xchg
stc
xor
add
hlt
je
mov
nop
pop
psubb
mov
sub
sti
xor
pop
iret
std
mov
inc
movb
jae
test
inc
sub
outsb
push
lahf
jne
and
xchg
xchg
sub
jnp
test
lret
out
ljmp
xchg
mov
adc
push
pushf
mov
xchg
std
aam
jecxz
xchg
cmp
lahf
inc
icebp
aaa
push
mov
push
outsb
mov
mov
sub
out
shr
stc
pop
inc
cmp
les
jns
inc
test
clc
xor
and
cmpsl
pop
cmp
jg
adc
push
ljmp
mov
out
mov
lret
dec
and
pop
ds
lcall
mov
addr16
sbb
lods
jl
inc
pop
and
adcb
orl
fcomps
ret
push
cmpsb
push
jmp
cmp
lods
xlat
scas
fs
ret
shll
mov
sbb
fsubrl
push
das
push
mov
out
aas
jle
scas
pop
cltd
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
cltd
aas
add
cltd
aas
add
add
lret
add
add
add
cltd
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
imul
gs
xor
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
add
add
je
imul
