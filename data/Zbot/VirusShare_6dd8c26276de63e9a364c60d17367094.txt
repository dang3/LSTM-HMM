incl
xchg
add
roll
add
testl
div
inc
push
mov
sub
push
pushl
push
push
clc
lea
or
push
inc
in
push
add
ret
insb
iret
fucomp
incb
outsb
xor
cld
push
push
loopne
push
adc
push
aaa
jbe
cmpsb
push
cld
test
addb
inc
andl
cmpsl
loopne
pop
outsb
in
add
push
push
mov
sbb
jge
sub
js
call
lock
outsl
xor
adc
push
nop
add
loope
lcall
insl
add
push
push
jae
jnp
call
add
push
inc
add
test
in
dec
sbb
sub
pop
inc
push
xor
push
push
in
adc
mov
jae
es
lock
out
jmp
add
push
das
fwait
adc
mov
pop
ficoml
xlat
pop
sbb
add
sub
adc
std
clc
cld
icebp
xor
std
mov
push
popf
pop
fwait
jecxz
aas
adc
fdivr
jo
add
dec
jmp
loopne
lea
and
sub
inc
ja
cmp
and
or
push
rclb
add
sub
adc
dec
js
jnp
fs
or
in
and
movswl
push
jbe
push
inc
jo
push
push
das
aaa
std
scas
nop
sbb
ss
pop
push
cmp
outsb
ja
add
sbb
add
sbb
cmpsl
dec
push
inc
lods
ficoms
cmp
jae
add
inc
or
xchg
cmp
fld
lea
std
cmp
pop
call
jns
inc
inc
jnp
fs
fisubrs
push
mov
fistpll
inc
sub
add
inc
add
xchg
iret
inc
adc
xchg
xchg
pushf
jno
jb
inc
popa
mov
imul
jbe
lds
addb
inc
lahf
sbb
and
mov
xor
push
mov
clc
push
jno
xlat
jno
xor
sub
cld
loop
inc
call
jns
push
sub
push
cmc
xor
insb
pop
clc
js
sbb
add
fnstcw
roll
push
push
int3
inc
push
push
sub
out
insb
add
ds
push
push
push
jmp
add
fidivrl
add
add
mov
out
xor
adcb
dec
mov
mov
push
jns
popa
cmpsl
int
outsl
push
inc
loopne
mov
gs
or
stos
dec
xchg
push
inc
add
add
dec
insb
jno
mov
bound
push
loopne
jbe
or
arpl
mov
or
push
in
pusha
xor
repnz
sub
sysenter
sub
int3
xor
std
fistpl
lea
mov
or
and
and
in
lahf
add
movb
adc
loope
dec
inc
sti
fisubrl
and
xchg
inc
add
xlat
dec
stc
test
mov
mov
and
push
mov
adc
das
and
jg
fucomip
cwtl
and
jae
subl
movsb
addr16
out
push
jl
mov
test
loopne
dec
adc
and
inc
aas
jg
pushl
int3
data16
inc
dec
pushf
adcb
sbb
cmp
in
outsl
pop
pushl
adc
dec
add
out
mov
scas
aas
fbld
ljmp
dec
adc
mov
jg
add
popf
out
jmp
xchg
jmp
sarb
std
jmp
sbb
loopne
dec
and
or
mov
cltd
push
sbb
mov
push
mov
fimuls
fnsave
jp
adc
dec
shrb
jb
sar
ljmp
lock
pushf
cmp
mov
in
in
fildll
and
movsb
call
inc
rclb
subb
or
and
jnp
or
jg
out
pushf
pop
lods
adc
pop
rclb
rcll
and
sub
inc
and
sar
ret
int
and
pop
mov
int3
or
dec
sti
fstpl
add
xlat
cli
mov
or
jne
loopne
sar
sti
pop
mov
rcrl
and
xchg
ldmxcsr
mov
out
dec
mov
jge,pn
sub
add
idiv
jo
and
inc
adc
pop
inc
mov
out
mov
loope
insb
cmpsl
mov
jl
add
mov
pushl
pop
dec
mov
xchg
dec
arpl
inc
std
mov
xor
jbe
inc
mov
sub
scas
jmp
lds
mov
dec
mov
out
sub
pop
sbb
fisubrl
hlt
jns
loopne
aas
jl
jae
incl
or
in
jg
mov
sub
inc
push
inc
push
icebp
scas
stos
or
cmp
test
xchg
dec
fisttpll
fsubr
out
leave
xchg
lds
add
xor
xor
and
sbb
test
mov
shll
jnp
or
sbbl
sub
jmp
es
fadds
fsubrp
std
jmp
std
cmp
pop
push
arpl
mov
aas
mov
inc
insb
and
fldlg2
popa
clc
push
cld
mov
inc
loop
mull
jle,pt
out
push
mov
divb
mov
fdivrp
in
mov
or
pop
mov
aaa
cmp
mov
mov
push
push
jge
mov
push
loop
sbb
sbb
out
inc
movsb
add
adc
fisubs
scas
stc
and
pop
cld
jg
sbb
xchg
push
data16
push
std
int
and
push
push
add
mov
jge
push
call
mov
std
jge
dec
mov
je
mov
clc
lret
orb
xchg
sub
icebp
hlt
aas
jno
ffree
inc
shll
lahf
sar
fst
test
push
sub
lcall
fidivrs
and
ret
and
repnz
movsl
inc
fwait
xor
call
fucomip
in
and
xor
xchg
and
xchg
aam
jg
out
push
and
lods
push
inc
adc
cli
xchg
pop
test
fbstp
aam
xlat
repnz
mov
inc
fadds
loopne
pushl
lahf
and
pop
mov
ffreep
ss
mov
jo
in
fwait
push
rorb
je
sti
clc
daa
mov
mov
clc
sub
ljmp
jo
out
xor
pusha
sahf
js
adc
cltd
pushf
jle
lahf
sbb
sti
sub
icebp
mov
cmp
cmp
dec
mov
xor
push
xchg
popa
cmc
pop
idiv
push
inc
pop
pop
cmpsl
cmpsl
sub
in
xchg
stos
lcall
loopne
mov
mov
pop
mov
cmovne
cmpb
pushf
xor
test
fucom
mov
rclb
sub
pop
xchg
outsl
lock
fs
pop
aad
test
mov
testl
add
push
out
sub
rcrb
mov
sbb
sbb
dec
decb
cmpsl
cmp
adc
stos
rorl
inc
and
out
inc
imul
lea
pop
loopne
pop
jge
add
in
dec
inc
jmp
cmp
cmp
xchg
cli
pop
xor
or
rcrb
jge
scas
mov
pop
fstpt
sbb
insb
subl
add
cs
push
sub
call
mov
imul
std
mov
aaa
mov
mov
inc
mov
stos
aas
andb
inc
sub
jb
into
jmp
ret
ja
mov
inc
xchg
push
out
stc
mov
loope
std
and
push
rep
jle
cmp
jge
sub
lds
sbb
jp
xchg
insl
ja
iret
adc
pop
jg
sbb
bound
xchg
cld
adc
mov
mov
rol
push
pop
or
std
pop
and
insb
dec
mov
fmuls
dec
xor
cli
arpl
out
test
rcr
push
cmp
jge
push
pushf
ljmp
lret
sub
negl
dec
jo
out
fbld
or
cld
cmpsl
adc
cmp
cwtl
jbe
fnstsw
jg
pop
pusha
dec
push
pushf
pop
fisubrs
loopne
sahf
sbb
mov
cmp
fwait
out
fildl
popa
rorl
setne
mov
stos
push
andl
pop
insb
sbb
in
sub
push
xchg
sub
mov
inc
cld
pop
repz
sbb
fidivl
mov
adc
outsl
pushf
inc
mov
xchg
cld
inc
push
subl
sti
mov
cli
jge
pop
cs
cli
jl
int
std
add
pop
movsb
fsubs
outsb
xchg
jae
std
sub
sub
negl
and
scas
xor
push
mov
push
adc
jge
jnp
shl
shlb
jp
pop
mov
ds
pop
add
pushf
into
dec
rcll
xor
pop
mov
loopne
and
mov
jne
ret
jg
cli
gs
sbb
push
dec
mov
dec
ja
adc
lahf
push
stc
add
loopne
jle
outsl
lahf
mov
decl
inc
out
cmp
xor
clc
or
mov
pusha
pop
in
and
lock
xor
popf
int
pop
mov
and
or
mov
inc
lret
dec
fcompl
imull
mov
and
sbb
mov
aas
imull
gs
xor
sbb
dec
sti
fists
pop
sbb
sbb
inc
mov
mov
adc
dec
mov
out
xchg
std
lcall
inc
ja
int3
or
scas
and
outsl
inc
call
loopne
pop
mov
pop
jmp
sbb
inc
mov
repnz
jnp
scas
jmp
rcrl
cli
lcall
cld
pop
iret
lea
add
xchg
adc
insl
and
jno
push
clc
pop
out
mov
daa
cmp
adc
out
sub
adc
xchg
mov
or
in
dec
ja
push
outsb
rcr
push
adc
jo
mov
int3
mov
mov
and
daa
lods
sbb
popf
popf
fyl2xp1
xchg
adcb
push
imul
scas
push
dec
push
pop
or
ja
sub
je
or
sbb
pop
push
cmp
cmp
ja
cs
addr16
sti
push
lret
mov
lahf
jp
push
jge
lea
jmp
fsubrp
out
mov
adc
mov
mov
stos
lcall
inc
inc
xor
sbb
mov
push
dec
cwtl
add
dec
or
jge
sub
pop
mov
or
std
psllw
pop
loope
clc
rorb
pop
enter
test
jge
push
mov
scas
int
xchg
lea
std
ffreep
std
les
mov
cmpsb
xor
fdivrs
dec
repnz
and
add
pop
push
js
add
add
add
stos
fs
inc
out
adc
sbb
mov
adc
sti
gs
aaa
and
mov
adcl
lea
push
insl
push
push
orl
inc
lds
ret
dec
aam
mov
lds
dec
sub
lahf
xor
push
dec
lods
inc
add
push
idivl
int
out
dec
mov
push
inc
jg
push
mov
test
cmp
scas
add
jbe
mov
dec
and
adc
inc
dec
fildl
push
test
pop
loopne
in
scas
popf
inc
cmpb
fbld
sub
mov
sub
jne
out
mov
js
out
mov
push
xchg
in
cmpsl
hlt
call
add
jns
test
cs
daa
pushf
lock
inc
aas
push
jns
shl
push
test
inc
test
inc
sub
push
clc
mov
hlt
xor
cmpsb
add
pop
pop
in
xchg
aaa
cmp
pop
jl
fcomps
mov
and
adc
and
out
out
sti
ljmp
ror
repz
cld
inc
loope
scas
pop
movsl
dec
ret
mov
push
orl
fs
or
sbb
stos
ja
push
ja
push
push
jne
add
stos
arpl
lcall
loop
aas
mov
or
mov
mov
cmp
mov
add
inc
xor
sbb
cli
aas
loopne
loope
mov
dec
loopne
pop
and
sub
scas
xor
test
and
mov
add
dec
and
out
push
jo
mov
loopne
sbb
add
cmpsl
adc
movsb
sub
xlat
mov
decb
dec
sbbb
push
rcll
adc
hlt
mov
sub
push
jmp
sbb
xchg
or
and
sub
outsb
lock
lcall
xor
inc
dec
mov
ret
sub
ret
dec
or
dec
mov
xor
sti
sahf
jns
pop
jb
mov
mov
cld
xorb
fldcw
outsl
out
pop
test
xor
das
int3
outsl
fimull
jns
cmp
mov
push
sbb
test
sbb
mov
cmpsb
icebp
js
fisttpl
adc
add
inc
sbb
stc
push
and
pop
es
push
lcall
popa
insb
sahf
inc
push
test
cld
push
adc
push
punpcklwd
xor
pop
cltd
jns
loopne
ret
cmp
mov
ret
decl
mov
aad
addr16
pop
and
pop
and
fs
jecxz
aas
mov
ljmp
mov
jmp
jne
adc
in
pop
or
js
sub
xchg
sub
mov
lar
cmp
sbb
out
inc
add
mov
lea
clc
filds
mov
inc
jbe
shll
push
inc
out
scas
mov
jmp
push
lock
push
stos
arpl
stc
mov
or
sub
test
clc
fcmovnb
iret
xchg
mov
adc
sub
and
aas
mov
xchg
addr16
adc
addr16
jle
iret
push
mov
inc
mov
filds
inc
mov
movsb
sub
lcall
rorl
xchg
daa
jl
pop
inc
cmp
fistps
lahf
pop
push
mov
add
xor
loope
inc
rolb
fldt
lds
and
sbb
sub
lds
out
jmp
fidivl
movsb
mov
movsl
lcall
jmp
test
lock
pop
jl
add
sub
das
cld
push
decb
mov
in
add
test
lcall
fldcw
jle
cmp
pop
mov
inc
sbb
addr16
ljmp
cmp
and
add
xchg
mov
jnp
sti
out
jg
xor
iret
insl
sub
loopne
inc
clc
sbb
ficompl
mov
jle
cltd
push
mov
shll
scas
push
addr16
add
adcl
in
aam
data16
pop
xor
sbb
pushl
scas
fisttps
scas
lods
cmc
pop
sub
fcomps
inc
sahf
cmp
popf
in
or
mov
std
ficompl
daa
sub
call
arpl
xchg
jnp
pop
mov
jg
decl
dec
pop
dec
xor
icebp
jle
cld
jbe
clc
das
mov
sub
sbbl
add
pop
inc
iret
cmp
sbb
lds
inc
jl
push
and
xor
les
inc
ljmp
mov
sbb
add
and
test
loope
jg
sub
push
xchg
shrb
mov
adc
push
orb
clc
xor
pop
js
mov
out
fsts
out
jl
int3
inc
dec
mov
ret
imull
movlps
shl
out
dec
and
bound
call
orb
pop
jg
or
pop
cmp
ljmp
sahf
jp
xchg
shll
jge
ljmp
negl
push
call
xlat
xor
repz
sub
sbb
call
jge
loope
mov
jp
ret
loop
jnp
xchg
popf
les
dec
jmp
andl
pop
inc
lret
xor
fistl
pop
testl
xor
or
iret
or
std
jnp
mov
cmp
aaa
jne
test
ja
adc
outsl
ret
cmp
cli
out
pop
fs
pop
imul
pop
cmp
mov
mov
push
mov
imul
sbb
xor
andb
std
mov
jg
xchg
mov
cmp
daa
cmc
cmpsl
sbb
mov
incb
and
mov
idivl
daa
das
pop
stc
ret
sub
sub
adc
lods
and
jg
popa
je
sahf
push
hlt
sbb
and
lcall
or
imul
cld
loopne
ljmp
jge
bound
cmpsb
jno
scas
and
lock
enter
fcomps
stos
xor
out
jae
push
mov
xchg
mov
jg
aaa
and
fimull
and
dec
out
divb
sbb
lods
mov
inc
mov
lcall
xchg
arpl
push
push
shlb
cmpsl
adc
daa
mov
pusha
sbb
push
outsb
mov
mov
pushl
xchg
mov
dec
call
fdivrl
inc
or
test
adc
scas
hlt
rcr
fsts
jmp
cmp
lcall
call
fstl
mov
sbb
mov
xor
loope
xchg
mov
jle
mov
ja
mov
pop
js
push
jo
lock
dec
add
cmp
std
push
cli
sub
push
les
test
mov
lahf
sti
jnp
push
adc
movsl
adc
or
add
data16
ja
jns
xor
add
imul
incl
adc
push
push
dec
fwait
out
loop
out
cmp
ffreep
fldt
in
into
adc
push
pop
cld
jg
fistpll
cmp
inc
xchg
cld
test
ja
and
cmp
shll
sti
push
fldl
ret
sub
scas
fmull
sub
dec
cld
inc
jo
or
xlat
scas
jbe
incl
inc
mov
test
out
nop
pusha
repz
ret
xor
rolb
add
fucomp
push
adc
mov
out
mov
mov
pop
in
ds
push
aam
sbb
xchg
inc
mov
repnz
testb
incb
push
pushf
jl
inc
stc
and
sub
pop
mov
cmp
xchg
inc
mov
scas
sti
clc
scas
add
jne
sub
cld
push
data16
jnp
loope
addr16
mov
ljmp
cli
es
sub
add
mov
iret
sub
mov
mov
fidivrs
fnstsw
lock
xchg
or
mov
movsl
dec
repz
push
clc
jecxz
sbb
and
xor
iret
mov
add
scas
ljmp
loope
push
cli
jbe
adc
test
stos
call
lahf
repnz
insb
xor
insb
jmp
xchg
xchg
stos
sbb
std
ja
inc
es
push
xchg
and
js
mov
fidivl
cld
ret
bound
loopne
mov
sub
mov
shrl
cmpl
daa
add
out
cs
mov
nop
jge
add
or
sub
adc
in
mov
cmp
jbe
std
addl
xor
xor
cmc
add
stos
sti
orl
or
mov
mov
xor
adc
mov
in
mov
enter
lahf
sti
call
mov
movsb
into
into
stos
mov
jae
mov
clc
push
jge
or
fimull
xchg
cs
aas
jmp
pushl
pop
clc
aam
aas
call
movsb
in
pop
jae
mov
and
rclb
rcrb
mov
or
sarl
rcr
in
aas
ficompl
xor
jae
cmp
insl
xor
fnstsw
mov
mov
popf
iret
pop
fisttps
sbb
fmull
mov
aaa
clc
mov
push
dec
sub
xor
jg
xchg
mov
test
jge
cmp
stc
add
adc
fucomip
sbb
mov
add
dec
out
add
pop
cmp
push
add
shl
and
ljmp
outsl
je
cmc
orb
inc
outsb
popa
lock
divl
aaa
iret
or
xchg
push
sbb
fisttps
xchg
inc
sarb
mov
adc
push
decl
xor
or
clc
sub
lea
loop
inc
lcall
adcb
inc
shrl
or
cmpsl
mov
sub
push
pop
mov
fsubrp
addr16
pop
loopne
rorl
fwait
pop
inc
cmp
xlat
sbb
in
inc
or
or
ljmp
lret
out
cld
mov
fcoml
outsl
aaa
mov
aas
cmp
outsl
lock
aaa
mov
push
ja
mov
pop
and
mov
dec
shr
lods
cmc
lcall
xlat
jne
mov
leave
push
mov
mov
movsl
push
dec
xor
cli
lods
or
arpl
mov
jl
adc
and
aaa
test
xchg
mov
fsubs
out
xor
inc
mov
icebp
sbb
je
ljmp
ds
or
ret
fs
and
shlb
stc
outsl
sbb
sbb
shlb
data16
xchg
cmp
pop
jecxz
dec
inc
jmp
jg
push
sbb
inc
out
ss
cmp
or
xchg
jg
outsl
cmp
xlat
je
mov
mov
rol
fnsave
sub
outsb
lods
jp
insb
jnp
pushl
sbb
shlb
imul
jle
not
orl
clc
push
fsubp
daa
inc
incl
add
lcall
cmpl
mov
imul
mov
lock
pop
leave
aad
lods
push
out
fidivrs
mov
and
add
jecxz
xchg
sti
ja
fldl
aas
loope
arpl
add
or
or
ds
jae
ret
pop
add
scas
push
les
xor
push
mov
inc
divb
inc
cmp
push
rolb
jg
xchg
mov
rclb
xlat
mov
sub
stos
pop
je
lret
sub
lcall
call
nop
hlt
jnp
mov
xchg
std
filds
jno
cwtl
mov
inc
push
test
xor
cltd
jg
pushl
dec
inc
and
cltd
inc
pop
nop
inc
mov
in
test
mov
jmp
inc
out
dec
mov
fidivrl
mov
movsl
xchg
lcall
mov
xchg
pop
sbb
les
mov
pusha
xchg
sbb
lock
das
jns
and
xchg
insb
aad
int
xchg
inc
push
sbb
test
into
jg
lahf
adc
xchg
jg
inc
mov
enter
or
mov
sub
aam
aas
jo
jnp
pop
adc
repnz
aam
lahf
aad
cmp
and
xor
aaa
aad
mov
adc
jb
add
pushf
jo
cwtl
mov
clc
div
mov
dec
cmc
mov
ret
lock
js
jl
inc
adc
jle
std
test
mov
push
iret
imul
inc
sub
jae
xor
or
out
addb
mov
mov
cmc
pop
gs
hlt
and
mov
jle
in
lret
adc
xchg
push
sbb
sbb
add
lock
jbe
cmp
gs
pop
jecxz
mov
arpl
push
hlt
movsl
jg
jae
mov
pushw
sbb
mov
or
cli
push
push
test
mov
inc
sub
loopnew
and
sub
into
mov
add
jne
add
adc
cli
std
lahf
xor
jmp
movsl
call
mov
inc
addb
pop
rclb
add
cmp
add
adc
fwait
shl
inc
fcoms
fs
inc
leave
stos
sub
xor
jae
cmp
decl
orb
jns
movsl
and
rep
mov
fcoml
xchg
shrb
leave
dec
mov
stos
xchg
adc
pop
shl
cmp
lock
repz
sbb
cmpsl
lea
sub
adc
mov
or
mov
mov
ret
jle
gs
and
pop
pushl
cmp
mov
and
dec
dec
xor
ja
ficompl
mov
xchg
xchg
lock
fwait
push
pop
sub
jg
mov
xchg
sbb
jecxz
xor
movsb
jg
lds
dec
mov
jecxz
jmp
push
xchg
faddl
fstl
pop
cmp
cltd
jmp
addl
xchg
fsubs
pop
cli
ffreep
mov
in
xchg
into
and
loop
mov
fsubl
outsl
seta
jg
cmp
out
inc
clc
mov
jne
andb
gs
adc
dec
add
mov
and
cld
daa
sarb
popl
pop
push
adc
pop
mov
clc
aas
dec
sub
dec
ret
xor
aas
mov
pop
xchg
inc
jmp
push
imul
loope
xor
mov
xchg
cmp
ja
test
dec
call
arpl
out
into
divps
aas
fmul
or
xchg
xchg
add
ljmpw
sbb
divl
imul
aaa
add
mov
outsl
push
or
mov
inc
xchg
testb
xchg
sbb
and
lds
in
data16
or
mov
sti
mul
fistpll
dec
fbstp
divl
jecxz
adc
bound
xchg
xchg
movsl
cmp
push
mov
movsb
xchg
daa
lcall
push
idivl
test
shll
jmp
test
aad
lods
imul
cli
cmp
daa
cli
inc
sarb
cmpsl
daa
enter
push
ret
cmp
je
ljmp
mov
jb
mov
mov
xchg
fstpl
xor
icebp
comiss
ja
loop
mov
cmp
out
mov
sub
xchg
js
mov
movsb
shll
push
mov
lock
jnp
mov
inc
mov
pop
mov
mov
dec
int3
xor
adc
lock
sar
imul
and
mov
scas
adc
cli
aas
and
push
call
lret
jge
add
inc
mov
sub
and
loop
mov
push
jmp
sbb
xor
imul
fsubrs
push
push
arpl
lock
sub
out
mov
fs
inc
xchg
fs
add
xchg
cmp
mov
lock
lock
in
xchg
into
dec
int
addl
and
pop
sarl
adc
cwtl
aas
pop
sarl
arpl
add
fidivl
jns
mov
aas
mov
jecxz
das
jmp
shlb
sbb
dec
popa
out
jo
cmp
scas
out
cmp
mov
sbb
fstpt
out
pop
fdivrs
aas
imul
in
rolb
sub
xor
add
fisttpll
cld
or
lahf
jb
inc
lods
cmp
scas
aam
jg
lock
jg
out
in
mov
ror
sub
fbld
jl
ret
sbb
mov
mov
sbb
adc
insb
xchg
add
inc
sbbl
lahf
pushl
or
test
inc
mov
out
push
adc
aas
das
cld
in
push
loop
scas
lds
decb
xchg
outsb
lcall
lock
cmpsl
cmpb
cmp
push
ret
adc
sbb
idivl
lock
in
pop
push
or
xor
imul
stc
push
dec
jge
dec
xor
dec
or
add
adc
jle
pop
inc
aam
adc
addr16
movsb
sub
mov
pop
stos
jmp
inc
jecxz
sbb
aaa
and
ljmp
xor
int
xchg
pop
push
hlt
inc
push
adc
and
out
movhps
mov
xchg
pop
pop
cmp
inc
dec
xchg
lea
int
add
push
pusha
lock
xor
pop
adc
arpl
rolb
cltd
mov
mov
icebp
pop
mov
rep
cwtl
ds
call
xorl
out
ljmp
push
outsb
sub
dec
sbb
fidivrl
ja
inc
mov
cmpsl
push
fistps
pop
inc
mov
aas
mov
xchg
and
in
add
dec
test
sarl
aad
fadd
pop
push
in
adc
stos
jg
fstpl
cs
and
test
xlat
loopne
cmp
leave
bswap
sbb
jp
lock
add
jg
sti
push
mov
aad
sub
cmp
sub
cmpsl
test
loope
and
lahf
xchg
jge
mov
push
jp
lods
or
add
out
iret
rorb
dec
xor
mov
fsubrl
fs
out
push
inc
inc
cmp
push
roll
mov
jg
dec
xor
sub
movsl
mov
pop
jg
aaa
outsl
push
call
xor
rcrl
rcr
out
xor
loopne
sbb
das
fimuls
inc
pop
xor
icebp
repnz
mov
lret
fisttpll
ret
jnp
icebp
mov
mov
fiaddl
aas
inc
sub
jmp
adc
jl
lcall
aaa
adc
mov
or
incb
lock
sbb
popf
or
mov
jne
clc
adc
test
int
fwait
cmp
sub
xchg
adc
dec
jbe,pn
popl
inc
xchg
mov
and
popl
pop
std
fbld
adc
sarb
gs
cli
xor
pop
loope
xchg
mov
mov
jle
xchg
pop
adc
outsb
scas
dec
or
cmp
fisttpl
mov
mov
sti
add
sub
subb
xor
fst
fisubl
push
push
out
ss
fists
and
xor
stos
sbb
cmpsl
loop
and
scas
mov
icebp
mov
cwtl
rep
aad
sar
cmp
mov
mov
lret
fiadds
jne
inc
pop
scas
pop
xchg
int3
imul
mov
mov
sahf
cmp
push
test
popa
push
inc
fsubl
in
adc
cs
push
in
mov
popf
maskmovq
sti
outsb
ret
pop
scas
jb
fists
adcb
out
movsb
test
inc
outsb
shl
lds
jns
loope
push
sbb
popf
in
int3
arpl
cltd
aas
aas
xchg
jno
jo
outsl
cmpsl
add
push
sub
or
jp
xchg
jae
sbb
mov
sbb
repz
and
lahf
sti
aas
imul
or
lds
xchg
incb
ljmp
iret
pop
fs
cmp
mov
mov
sub
loopne
lock
lahf
fsub
inc
xchg
jge
sub
mov
movsl
adc
ljmp
adc
inc
js
push
movsb
shl
cmp
sbb
repnz
and
loope
out
cmp
out
jmp
test
loope
mov
flds
jns
cmpsb
push
sbb
aaa
addb
rcrl
mov
loopne
fs
ljmp
and
es
sbb
scas
add
sbb
ljmp
mov
mov
lods
xor
cmp
jge
jl
sbb
pop
mov
mov
adc
rsqrtps
add
rcl
mov
xchg
ja
inc
loope
inc
mov
jp
ret
sbb
mov
negb
stos
jae
ret
loop
inc
jb
sub
push
std
mov
mov
fwait
and
fcmovnbe
add
xchg
adc
jns
pop
clc
decl
pop
xchg
fmull
cs
cmp
lea
inc
push
push
jae
scas
in
sub
cmp
das
leave
adc
mov
es
fwait
scas
jb
stc
insl
sub
add
test
mov
cli
dec
adc
aas
jp
imul
movsl
mov
call
mov
push
lods
cli
add
hlt
in
ljmp
mov
cmp
arpl
pushl
divb
mov
jno
dec
aaa
jmp
dec
loop
or
shll
loop
fsubrl
in
sbb
cmpl
pop
fdivrs
out
xchg
pop
data16
jp
shrl
lods
pop
sbb
and
sbb
adcb
push
clc
mull
jmp
pop
out
popa
cmc
cmp
xor
lahf
push
jae
or
scas
jmp
lods
jecxz
dec
loop
imull
sbb
repz
arpl
dec
shrb
sub
lods
cmpsb
pop
mov
adc
mov
lcall
push
or
jg
std
orl
mov
inc
xor
fdivrl
mov
xor
adc
cmc
mov
ret
pushl
inc
insb
cli
and
cmpsb
jl
popf
outsl
stc
das
xor
jnp
mov
mov
ret
lods
jmp
fimull
orb
jbe
mov
jae
pop
cld
addr16
cmp
xor
push
or
lods
neg
or
jnp
loop
in
mov
test
sbb
sbb
push
mov
push
lahf
or
shrl
mov
ss
hlt
pusha
bound
lods
sarl
jge
sbb
inc
fisubs
push
repnz
fists
pop
aas
rcrb
lods
outsl
test
ja
mov
mul
pop
inc
lahf
sbb
jl
sar
lcall
push
xchg
xor
cmp
pop
daa
mov
pop
imul
mov
inc
inc
in
inc
sbb
jecxz
add
lcall
or
cld
mov
jae
int3
dec
in
inc
sub
aad
jl
mov
rcrl
pop
mov
fildll
push
lods
lods
stos
js
pop
sbb
xchg
aas
ja
push
icebp
and
ja
jmp
fsub
adc
inc
add
or
xor
lock
cmp
stos
js
aam
sar
jecxz
ljmp
inc
jae
data16
loope
add
cmp
fiadds
jecxz
sti
adc
pop
pusha
sbb
cmp
jae
pop
jno
xlat
cmpps
incb
call
or
pop
pop
pop
insl
ret
std
jg
cmp
xchg
dec
pop
xlat
mov
aas
mov
sarb
sbb
jmp
and
ret
aas
mov
mov
add
push
inc
jg
jo
sub
popa
fbld
insb
mov
lcall
pop
sub
iret
popf
negl
call
mov
jg
cmp
push
inc
imul
jnp
mov
fnsave
inc
add
cwtl
sbb
sarb
push
xor
sub
cmpsl
mov
mov
pop
cmpl
jle
call
arpl
dec
std
pop
mov
movsl
ds
push
mov
jg
jg
fistpl
mov
pusha
push
call
mov
or
cs
idivl
pop
lahf
and
enter
and
fsubrs
mov
adc
adc
pop
dec
incb
adc
pop
and
in
data16
ja
cld
stos
mov
aaa
push
shlb
aaa
cmp
lds
fmul
jg
sub
fiaddl
xlat
inc
mov
fdivs
test
loop
jo
das
jne
sub
mov
mov
jne
dec
jae
sar
fmull
cmc
in
mov
lret
jecxz
push
jmp
std
mov
fs
inc
and
scas
mov
scas
mov
mov
ljmp
sbb
cld
inc
jmp
pop
insl
shrl
mov
add
sbb
nop
pusha
test
stos
push
mov
push
incl
jg
sub
in
push
lea
aam
scas
clc
addr16
pop
lcall
push
in
fs
in
sar
xchg
lock
inc
xor
mov
iret
or
pusha
leave
xchg
pop
inc
sub
lds
popf
subl
add
mov
mov
push
xor
inc
nop
int
mov
dec
ss
mov
jg
fdiv
lahf
mov
pop
jle
or
test
cli
into
xor
lods
int
decl
sub
shrl
xor
push
mov
and
in
les
sbb
arpl
adc
dec
mov
aaa
data16
adc
jo
cmp
std
fdiv
lea
cmpsb
sbb
daa
adc
add
jl
incl
sysret
adc
push
insb
cmp
add
outsb
add
dec
pop
aam
lods
push
enter
xor
pop
xchg
mov
cmpsl
sub
es
out
shrb
push
pop
out
xor
incl
xlat
dec
push
jmp
and
out
daa
jge
incl
sub
mov
fiadds
imul
mov
mov
sbb
adc
arpl
out
fcomi
lret
cmp
mov
pop
mov
std
pop
jl
mov
addl
cwtl
mov
shrl
ljmp
xchg
cli
ret
cmpsb
add
mov
mov
inc
sub
and
mov
adc
into
xchg
gs
jmp
jg
int
loope
dec
lea
cmp
mov
ljmp
insb
dec
pusha
loopne
in
lcall
std
es
cmp
push
mov
mov
xchg
dec
or
incb
sar
dec
push
int
pop
fldl
call
outsb
adc
jecxz
incl
adc
sub
adc
outsl
sbb
dec
ret
xchg
out
push
vmread
add
pop
push
aaa
add
xchg
fs
in
pop
xchg
ret
sbb
loope
aas
js
cs
addr16
fistpll
push
js
sub
idivl
ret
sub
dec
or
mov
jne
xchg
pop
mov
imul
decl
jecxz
lock
mov
jo
cmp
add
icebp
ja
iret
mov
icebp
xchg
mov
shr
in
mov
loope
test
jle
clc
pop
out
jmp
icebp
xor
arpl
pushl
cs
lods
lock
dec
cmc
xchg
jns
stos
adc
and
lods
aaa
jl,pt
jns
imul
loopne
imul
cmp
pop
shrl
adc
iret
hlt
stc
addr16
outsb
cmp
imul
jnp
and
pop
out
push
adc
jp
ss
mov
icebp
xchg
jl
roll
push
popf
data16
fs
clc
out
pop
jmp
mov
adc
or
or
dec
fwait
cmp
cmpsl
ret
mov
add
sbb
repz
push
sub
push
jle
sbbb
xchg
mov
cmpsl
cmp
out
pop
fdivl
stos
adc
or
dec
in
movsb
loopne
cwtl
ffreep
or
popf
aad
and
jnp
pop
test
adc
loope
add
mov
in
loope
das
lret
adc
sbb
stc
lods
jle
lock
test
mov
shll
pop
sbbl
jnp
pop
stos
push
jnp
pushf
push
adc
or
sarl
jge
repz
xchg
pop
and
pushw
add
cs
push
paddusb
imul
gs
pop
jns
aas
sti
testl
jle
nop
pop
rcrb
sbb
pushl
fmul
inc
sbb
fsubrl
into
movb
es
mov
addr16
addb
fdivs
andl
cmpl
and
and
mov
mov
push
xor
jg
inc
xor
je
and
push
add
js
or
imul
add
scas
popa
jnp
lods
add
and
aas
clc
cli
scas
sbb
and
inc
fisttpl
movsl
adc
insl
ret
inc
aad
xor
mov
jl
movsb
outsb
inc
icebp
mov
popa
dec
fdivrl
aam
xor
jl
shrl
pop
jge
out
inc
add
test
nop
in
push
jns
outsl
pop
jg
push
push
int
inc
jne
ret
imul
aaa
pop
stos
adcl
std
dec
cmc
jg
fisubrl
insl
and
inc
mov
jmp
aas
xchg
loop,pn
cs
in
add
iret
icebp
jmp
scas
popf
jl
sbb
in
scas
rorl
push
cld
pop
xchg
adc
adc
fisttps
mov
push
sbb
jecxz
mov
mov
iret
loope
push
rol
inc
aaa
in
pop
xor
sbb
bound
je
and
fs
outsl
stos
or
push
inc
jbe
pop
ds
cmp
aas
rol
adc
loopne
cmc
xchg
dec
sbb
fucomip
jle
mov
sbb
sub
cmp
cld
call
add
mov
mov
decl
lcall
add
loope
sarl
xorl
shlb
ret
aaa
fisttps
sub
xlat
pop
xchg
aas
push
mov
jnp
stc
or
jbe
sbb
lcall
iret
xchg
fucomi
dec
shlb
aaa
jnp
xchg
xorb
or
mov
add
test
loope
cld
ds
sub
pushf
dec
orl
cmc
mov
mov
call
popa
out
mov
jo
push
pop
fisubrs
jge
fsubrl
add
push
sbb
sahf
ret
push
ss
out
test
jg
fists
mov
scas
xor
bound
sti
or
mov
sbb
mov
mov
push
iret
push
jmp
and
sbb
push
out
andl
aad
mov
fisttpll
enter
les
test
call
mov
pusha
cmp
out
adc
int
pop
test
mov
fwait
add
xchg
mov
mov
sub
mov
jb
fwait
jg
pusha
or
mov
scas
add
jle
aaa
or
xor
lods
das
jl
int
insl
dec
adc
mov
dec
lahf
adc
cs
int
push
mov
push
pop
jge
test
adc
cli
addb
outsl
fdivrp
out
aam
lea
notb
aaa
mov
popa
inc
ret
xor
add
dec
cmp
pop
mov
sub
dec
mov
bnd
jbe
xchg
or
std
xor
out
scas
fadd
insl
insl
cmp
stos
adc
pop
dec
jg
idiv
mov
popa
repnz
inc
adc
jle
loope
js
int3
aad
fiadds
inc
jge
xchg
repz
in
sbb
jle
or
pushl
fdivp
lcall
or
mov
jg
mov
orl
mov
and
jg
std
jg
clc
lcall
clc
cmpsb
push
jecxz
fisttpll
setg
mov
sub
clc
cmp
incl
in
sbb
push
sub
cmp
pusha
cmpl
sarl
nop
pop
xor
sub
mov
push
fnstcw
adc
push
sar
shrb
ret
outsl
add
mov
outsb
sti
mov
mov
or
mov
scas
pop
push
dec
stos
push
add
lods
mov
sbb
aas
notb
pusha
dec
dec
pushf
sub
inc
cmp
ret
clc
pop
xor
adc
mov
and
jne
or
int
inc
or
incl
cmp
int3
popf
scas
sub
and
jne
cmc
mov
xchg
ret
mov
clc
xlat
clc
inc
xchg
inc
xor
cmc
mov
jg
push
jg
ljmp
lds
cs
movsl
out
mov
mov
fwait
sub
mov
fnstcw
pop
bound
popa
pop
xor
ret
js
sahf
mov
call
std
into
popa
push
pop
sbb
imul
scas
lahf
lret
idivl
addb
dec
dec
ffreep
loope
add
xor
xlat
fcos
sub
add
fiadds
or
dec
cld
andb
inc
jb
subl
mov
xchg
fdivl
loopne
mov
arpl
pusha
cmp
jge
mov
fwait
push
xchg
iret
outsb
adc
lcall
pushf
gs
ss
xchg
leave
es
cmp
imul
loope
shrb
xchg
cmp
fs
testl
adc
push
xchg
hlt
add
lods
out
push
js
test
pop
or
jle
pop
ja
jns
insb
add
fcomip
sbb
push
inc
lock
mov
jecxz
add
call
cmp
adc
incl
cli
cmp
xchg
dec
filds
aad
insl
cmp
sub
jle
cmp
mov
cltd
test
lock
in
mov
subb
movsb
or
adc
mov
mov
cli
inc
xchg
pop
inc
cmp
insl
fildl
sub
call
dec
jbe
push
pusha
fisubl
ret
loope
outsl
xor
jg
fiadds
pop
or
aas
and
mov
dec
jnp
push
fisubrl
out
loopne
mov
pushf
sbb
in
inc
mov
and
cli
and
aas
in
push
or
jns
fcmove
xchg
mov
in
adcl
mov
pop
cmpsl
outsl
out
fisttpl
adc
xchg
cmpsb
rol
xchg
mov
sbb
cmp
mov
mov
xchg
iret
lcall
dec
fisubrl
xorl
aad
jo
mov
push
push
imul
jmp
adc
xor
or
jno
pop
push
push
pop
xlat
inc
pop
dec
cs
lret
add
xlat
out
pop
test
inc
xor
sbb
mov
and
adc
adcl
and
inc
sbbl
test
jecxz
loopne
and
sbb
popa
les
jle
test
cmpsl
pop
addr16
mov
adc
movsb
pushl
movsb
incl
mov
lret
xchg
sub
inc
daa
loope
xor
imul
arpl
cmpsb
out
lock
clc
jnp
movsb
cltd
out
mov
adc
js
aas
sarb
dec
adc
call
aas
idivl
jnp
les
and
push
and
inc
imull
out
inc
lock
fstl
shll
cmc
mov
and
mov
clc
decl
jns
imul
lret
les
pushl
test
je
test
leave
sub
lret
jg
jg
dec
lock
scas
xchg
sbb
mov
sahf
sub
push
dec
or
push
pop
push
adc
sbb
lea
push
sar
pop
add
jae
xchg
push
and
jl
mov
cli
sti
aas
cmp
push
pop
std
adc
mov
or
mov
push
test
add
fdivrl
call
loop
jge
ja
cltd
jbe
ja
xchg
push
cld
jae
jle
jnp
sbb
jmp
out
add
mov
adc
or
mov
cltd
repnz
cld
int
adc
decl
incl
mov
cmpsl
push
test
jg
ficoml
sub
xor
xchg
jbe
outsl
mov
add
xor
loope
pushf
mov
inc
out
push
out
pop
shll
in
clts
jo
pop
or
cltd
pop
xchg
mov
dec
lahf
pop
add
add
inc
push
lea
cmp
sub
arpl
ja
push
stos
mov
lcall
outsl
fwait
xor
mov
stos
jmp
jge
test
ficoms
outsl
or
lods
shrb
jbe
popa
hlt
sbb
jmp
lahf
pop
test
mov
fsubrl
xchg
jne
lret
and
mov
testb
add
bound
addr16
xchg
pop
cmc
cmc
xchg
sbb
popa
push
mov
add
push
pop
mov
ljmp
in
pop
inc
xchg
rcll
ja
repnz
or
pop
jb
jg
je
inc
mov
in
pop
fisubrs
std
scas
pop
rcrb
jge
mov
ds
maskmovq
xor
jle
dec
je
jbe
test
pop
pop
rclb
sbb
jg
push
jle
mov
stc
xchg
flds
enter
inc
jb
aas
js
xor
out
movsb
mov
lret
xlat
jmp
sar
xor
cmp
pop
adc
mov
out
mov
mov
divl
mov
mov
mov
das
mov
int
adc
leave
pop
mov
jmp
cmpsl
lcall
mov
jmp
rolb
movsb
pop
add
out
arpl
insb
mov
shlb
push
std
cmp
imul
adcb
lea
push
in
std
sub
stos
gs
sbb
push
pushl
stos
cmc
or
cmp
ret
jge
mov
fistl
mov
mov
push
mov
xor
aas
xchg
in
xchg
sbb
jno
popf
xchg
test
jle
pop
xor
stos
popf
jb
les
adc
aas
lcall
std
clc
add
leave
and
add
mov
ret
push
test
mov
jg
das
xchg
dec
jl
inc
jno
in
jecxz
cmp
aam
jp
cmpsl
fnstenv
inc
sbb
adc
jb
fs
or
or
xchg
ret
insl
and
mov
gs
into
enter
aad
pop
aam
pusha
jle
lds
leave
jp
incl
xabort
sub
adc
jno
mov
pop
shlb
loopne
lea
movsb
dec
jecxz
rorl
popa
dec
dec
pushf
mov
xchg
mov
jmp
push
arpl
mov
mov
and
clc
iret
shr
and
hlt
inc
pop
test
jmp
test
clc
mov
aas
aad
mov
lods
jne
mov
pop
mov
in
shl
out
cmp
scas
push
out
pop
add
adc
and
jp
dec
idiv
fcmovnb
jg
and
mov
inc
xchg
mov
mov
jp
push
in
push
test
xor
sub
push
mov
fbld
addl
out
mov
dec
sub
jns
pop
xchg
shrl
cld
idiv
out
push
js
mov
dec
dec
lds
xlat
call
cmp
or
push
fstp
jno
and
inc
jecxz
xchg
imul
xor
mov
orl
adc
test
lods
into
cwtl
aas
rcl
mov
adc
jns
and
std
push
inc
dec
cs
jo
clc
cmp
stc
out
jmp
push
fdivrl
cmp
arpl
sub
repnz
dec
aas
add
fistpll
dec
dec
sub
jno
xor
pop
jmp
je
fisubrs
lcall
dec
fildl
adc
lahf
call
and
inc
scas
lcall
ja
mov
cmp
mov
lods
mov
dec
loop
cli
ja
push
gs
sbb
inc
stos
jne
out
jg
repz
fsubrl
adc
in
cmp
sti
cmp
leave
xchg
ret
push
jno
or
jnp
fmull
jl
mov
xor
loopne
fnstcw
mov
fcoms
push
or
andb
test
and
add
jns
pop
sbb
mov
stc
push
sub
call
add
cmp
sbb
pop
sub
popa
das
cmp
cli
and
jg
pop
sub
xor
jg
mov
sub
xchg
ljmp
add
rorl
sbb
pop
pop
and
jnp
sahf
popa
add
outsl
mov
aas
decb
adc
and
out
fbstp
fcoms
pusha
jle
outsl
pusha
mov
pop
xchg
push
out
inc
das
xchg
lods
aas
add
mov
dec
incl
pop
cld
mov
jle
cmc
jns
cli
xchg
nop
ja
lock
xor
dec
cmc
push
mov
aas
movb
fildl
test
aad
ss
jb
cmp
and
test
cli
mov
shll
and
repz
int3
movsb
push
lret
rcrb
rorb
fdivrs
jg
shll
pop
out
rorl
cld
pop
sar
loop
jmp
cltd
das
add
cmp
or
cmp
mov
mov
loope
adc
dec
or
sbb
call
in
dec
sbb
adc
pop
shll
out
cmpsl
push
cld
and
aas
cmp
out
xchg
in
mov
inc
daa
jb
jb
cmp
aas
jnp
add
leave
mov
scas
mov
mov
sub
xchg
push
xchg
cli
ljmp
out
cwtl
cmp
repz
inc
sar
je
vminpd
cld
adc
mov
ficoml
inc
and
lods
dec
sbb
sub
stc
adc
sbb
std
cmp
pop
loop
insl
inc
inc
xchg
jb
in
sub
lret
scas
and
fistpll
lods
pushf
lea
adc
mov
fnstsw
cmp
std
cli
sub
lret
jge
negl
popf
sbb
fs
and
lds
jb
pusha
roll
ljmp
pop
inc
adc
mov
pop
add
mov
test
cwtl
adc
std
stos
xlat
out
dec
mov
mov
mov
lds
adc
int
cmp
int
pushf
loopne
push
adcb
dec
int3
push
fnstenv
mov
leave
cltd
mov
and
pusha
icebp
pop
xor
mov
pop
cld
aas
pop
cmp
jl
test
push
lcall
popa
movsb
inc
mov
push
mov
ja
xchg
and
lcall
insb
cmp
ljmp
fcompl
xchg
rclb
ds
add
adc
inc
outsl
stos
lea
mov
push
mov
cld
movsb
lea
sarb
adc
pop
sub
repnz
jns
idivb
ljmp
outsb
hlt
mov
mov
lock
jecxz
pop
in
add
aad
les
clc
sub
sub
add
jmp
pop
aas
scas
pop
sti
fstl
iret
add
ljmp
sti
mov
orb
andb
insb
push
clc
into
jb
pop
fwait
inc
adc
repnz
ja
mov
dec
je
jo
out
sbb
push
xchg
into
jns
mov
jecxz
and
push
loopne
mov
sbb
mov
insb
addb
xchg
out
or
and
push
and
popa
push
inc
lcall
xor
mov
xor
cmc
psrld
xor
cmpsl
fisubs
test
js
xchg
loopne
aaa
iret
lahf
xchg
pop
jp
nop
ljmp
lahf
rorl
out
fcoms
xor
add
ja
out
stos
xor
les
add
out
mov
jbe
add
and
lods
aaa
out
in
les
icebp
int3
arpl
adc
sbb
mov
std
mov
cmc
sarb
das
dec
push
sub
clc
dec
xor
shlb
push
cli
ljmp
popa
jmp
in
pop
mov
xchg
mov
lret
ja
jg
sbb
mov
push
sti
adcl
adc
cmpsl
mov
outsl
cmp
imul
xlat
iret
mov
adc
jmp
xchg
outsl
mov
rclb
das
sarl
movsl
sub
mov
cli
push
enter
mov
enter
fdivrp
push
push
sub
popf
push
or
mov
bsr
sbb
icebp
mov
frstor
arpl
xchg
xor
cld
popf
js
fdivrp
out
push
les
ret
aas
mov
aas
xchg
fiaddl
ret
push
gs
push
iret
cwtl
sbb
push
shr
mov
mov
sub
dec
mov
fistl
shl
scas
and
lcall
or
adc
mov
inc
inc
call
or
mov
sub
fdivr
jge
mov
mov
adc
insl
cmpsb
inc
out
ljmp
sti
or
shrb
fbld
lret
cmp
ds
dec
out
fnstsw
jg
cmp
sbb
push
xchg
es
aas
xchg
jmp
ds
xorl
lock
pop
ret
cmp
push
shll
jg
sbbb
js
and
jbe
lods
in
js
pusha
push
jne
pop
sbb
dec
ljmp
stos
fisttps
push
insb
sub
xor
cmc
sbb
nop
loopne
sub
cmpsl
imul
mov
cmc
dec
or
movsb
mov
cli
int3
adc
fwait
pop
mov
sarl
dec
sub
out
and
gs
adcl
mov
mov
pop
mov
jge
lahf
cli
inc
adc
cltd
in
dec
in
es
and
mov
cli
cwtl
mov
sbb
xchg
mov
sar
xchg
daa
xchg
pop
xor
inc
fdivs
push
incl
mov
popa
and
mov
out
iret
inc
cld
sbbl
imul
mov
out
cld
adc
rorl
push
out
ficompl
cld
dec
push
notb
fnstsw
jg
mov
pop
mov
adc
pop
imul
es
das
into
js
adc
jg
outsb
clc
fistpl
push
in
aas
sarl
pusha
mov
pop
jno
jnp
mov
sub
mov
add
sar
mov
adc
ret
mov
jb
ja
cli
pop
inc
jg
repz
test
in
and
cmp
test
mov
sbb
out
fidivrl
lds
adc
ja
gs
push
jae
pop
ss
cmpsl
decl
movsl
fnstcw
xor
jns
incl
jmp
pop
mov
add
mov
out
pushf
sub
pusha
lds
add
inc
test
pop
mov
jge
or
mov
push
or
xlat
jnp
out
aas
pop
scas
test
dec
fcompl
and
add
sti
lahf
jle
mov
rorl
mov
cmpb
jge
daa
ret
sbb
cmp
or
add
ljmp
fistl
mov
out
jae
aas
cmpsl
and
aaa
fisubrl
xchg
jne
mov
sarl
lret
test
out
inc
lock
cs
pop
les
mov
jb
arpl
scas
lock
movsb
das
ret
adc
xchg
and
adc
xchg
or
mov
pushaw
add
sbbb
testl
inc
pop
jg
int
push
scas
xchg
push
push
xchg
stos
or
sub
das
in
ja
mov
les
adc
sti
lcall
mov
lahf
js
dec
scas
std
xor
lahf
or
aas
xchg
cmp
inc
insb
adc
aaa
pop
hlt
aam
outsl
fnstsw
cmpsl
out
loope
push
sub
xor
inc
add
jmp
popa
cmp
sub
icebp
ljmp
cmp
ljmp
inc
sbb
mov
pop
std
ja
cmpsb
push
lret
imul
sbb
cmp
add
stos
dec
fdiv
cmpsb
jne
pop
loope
pop
repz
pop
mov
aas
adc
push
cmc
fdivrl
jbe
push
popa
inc
dec
mov
or
leave
adc
loopew
ret
std
xor
push
in
call
and
mov
fsubrl
mov
jg
inc
scas
mov
sti
sbb
mov
mov
les
mov
out
mov
or
jns
aad
shr
mov
inc
out
push
sti
dec
stc
jbe
dec
adc
aas
xor
mov
cltd
cmp
cwtl
mov
lcall
addb
pop
push
das
loop
and
push
cmc
add
lock
add
lods
into
testl
mov
and
sti
clc
lret
jmp
sub
pushl
jg
repz
pop
sti
lock
addr16
fsubs
dec
hlt
popf
out
arpl
lods
divl
adc
aad
loope
or
fwait
das
js
mov
jno
incl
jg
inc
pop
xchg
cmc
sbb
pop
jp
cmp
pop
xor
xor
pop
fbld
out
lret
pushl
sbb
sti
scas
lods
xchg
jns
lods
call
js
negl
mov
jmp
sarl
sbb
rcrl
cmp
push
sub
pop
hlt
subl
inc
sbb
fucom
jbe
ljmp
hlt
scas
cltd
cs
pop
adc
jae
in
movsb
hlt
ss
xor
in
jmp
notl
roll
mov
jmp
and
cmpb
mov
jl
dec
mov
jle
test
mov
sbb
add
push
mov
into
jae
rcrb
lods
sub
inc
ja
dec
fnstsw
stos
enter
fcmove
inc
daa
sub
daa
loope
subl
ret
xchg
jns
rcrb
outsb
push
sub
lahf
aam
rol
pop
cli
xor
xor
insl
sub
sub
jecxz
mov
cmpsb
scas
xchg
ret
pop
cli
ja
pusha
ret
sub
jle
leave
and
fistpll
js
aaa
lea
xor
sbb
iret
rcr
stc
jg
jmp
jno
jg
jl
cmp
ja
adc
sub
add
cmp
test
adc
incl
mov
andb
sti
mov
jmp
dec
test
add
out
fincstp
dec
aad
xor
insl
and
pushl
xor
sub
jle
aad
mov
cmp
cmc
jg
push
std
and
cs
test
or
subb
mov
je
jb
jmp
lcall
adc
xor
and
mov
xor
push
fucomip
outsb
cmp
add
pop
idiv
pop
fists
in
inc
xor
sbb
fists
inc
mov
mov
pop
out
aad
mov
sarl
mov
adc
add
aas
pop
addl
into
insb
stos
out
pop
dec
fistps
inc
and
enter
cmp
stos
dec
stos
repnz
pushf
add
test
push
xchg
call
inc
clc
mov
rcrl
sbb
mov
xor
dec
aaa
lock
or
mov
xor
cli
jge
repz
std
pop
sarb
mov
std
fs
push
std
inc
clc
add
ds
cmc
fsubrp
jae
movsl
mov
pop
dec
pop
mov
std
in
or
sbb
pop
pop
insl
aas
lds
pop
dec
push
inc
iret
and
xorb
jmp
std
cmc
push
cmp
xchg
cmp
xor
ja
push
mov
jg
xchg
pop
dec
add
je
pop
pop
xchg
sub
mov
jo
push
ret
std
cmp
mov
icebp
mov
inc
out
cmp
enter
out
divl
out
xor
ss
jg
fmull
mov
addr16
inc
out
test
adc
sub
movsb
mov
xor
jmp
idivl
inc
fstp
adc
jno
andl
mov
aas
add
cmc
ret
loope
stos
ret
roll
sbb
cmp
cld
cmp
or
lcall
adc
rcl
sub
cmp
adc
or
dec
in
cld
adc
cmp
lcall
scas
push
icebp
inc
stos
push
arpl
pop
adcl
filds
and
push
into
cmpsb
sbb
sub
cmpsl
jg
xchg
cmp
jne
sbbb
repnz
add
jge
in
dec
out
xor
mov
dec
jg
std
iret
adc
push
xchg
adc
popf
jne
jg
movb
xor
sbb
cmp
loopne
daa
mov
fbld
test
cmpsl
sbb
int
push
fdivrp
bound
iret
xchg
push
imul
jae
xchg
push
jp
sbb
lcall
dec
rcrb
fidivrs
lods
sub
mov
insb
mov
arpl
out
cmp
lret
xchg
imull
repz
xchg
in
loop
aam
push
pusha
sbb
and
scas
cmpsb
decl
lock
cmp
fdivrl
call
pop
dec
scas
dec
adc
loopne
pushf
mov
leave
in
cmp
mov
lcall
ljmp
push
iret
data16
cmpsl
ds
lea
cmp
jnp
jmp
xchg
xchg
mov
jbe
lods
mov
jo
int
es
lods
out
enter
and
xchg
jecxz
sbb
leave
add
psadbw
pop
jmp
fldl
fistps
mov
movsl
xchg
cltd
inc
decl
loopne
pop
push
pop
xorl
fisubl
rcrl
sub
popf
xlat
lret
insl
movsl
lcall
std
adc
in
xor
lret
sbb
daa
adc
or
xchg
stc
pop
ss
cli
or
pop
jae
jg
mov
stc
leave
nop
jne
pushf
and
pop
push
push
cmpsb
dec
dec
mov
aas
jge
push
add
add
int
cmp
cmp
les
cld
pop
pop
ret
adc
fimull
aaa
jle
adc
mov
mov
xor
and
bound
decl
push
sub
mov
jmp
sub
xor
sti
mov
lret
push
sub
popa
aas
mov
jg
cld
mov
jg
cli
mov
push
dec
cwtl
or
jmp
xor
mov
xorl
test
js
sarb
arpl
push
sbb
shrl
sbb
and
pop
out
aas
jmp
inc
pop
ljmp
stc
push
mov
push
mov
and
std
lds
xchg
loopne
dec
rcrl
xor
dec
jl
push
inc
loopne
into
cmp
push
cmp
jmp
lcall
popf
mov
push
mov
ja
clc
xor
sbb
lds
pop
inc
pop
xchg
imul
je
pop
xor
dec
test
and
hlt
xchg
add
pop
fcoml
xor
mov
jp
rclb
adc
add
roll
mov
loop
inc
add
stos
jge
lock
sbb
sub
int3
cltd
iret
iret
and
movsb
femms
lock
add
outsl
add
inc
jmp
addr16
outsl
lock
inc
aas
add
mov
xchg
push
jmp
and
sahf
pushf
mov
shll
subb
xor
push
xor
out
call
mov
and
stc
jae
shl
insb
lret
xor
and
ljmp
je
fucom
gs
inc
ds
pop
js
mov
les
js
pusha
lret
out
cmpb
subl
data16
rcrb
or
pop
pop
loop
sbb
outsb
daa
mov
movsb
and
outsl
data16
xchg
cltd
sub
mov
add
sub
shlb
xchg
push
xor
sub
mov
cs
and
adc
sbb
lds
fists
and
in
sbbb
lods
fstpl
repz
inc
adc
repnz
loopne
rcrl
fs
add
add
je
cmp
cmpsl
andb
or
inc
push
add
dec
adc
out
jmp
mov
sub
dec
in
pop
lret
mov
test
loopne
shll
fstps
fsubr
out
lahf
mov
outsb
inc
add
mov
xor
adc
aam
cli
and
jg
sarb
in
xchg
and
scas
mov
cld
rcl
in
in
lock
aas
repnz
mov
cltd
jnp
adc
aas
addl
movsb
xchg
xlat
sahf
incl
push
aaa
mov
roll
std
xor
dec
mov
mov
or
and
iret
or
mov
repz
lds
cmp
repnz
in
adc
dec
clc
sbb
lret
add
fs
ss
aas
mov
ja
xchg
dec
les
sub
cmc
mov
inc
cmpsb
fldenv
cld
aas
hlt
rolb
xchg
and
adc
hlt
push
push
pop
lods
lahf
loope
outsl
insl
ljmp
insl
stos
sarb
push
cld
xor
cld
sub
cmc
nop
pop
out
mov
clc
pop
mov
cs
pushf
ss
hlt
pop
stos
call
jne
mov
dec
mov
jmp
pop
aaa
push
xchg
stc
xchg
data16
gs
lods
xlat
push
pop
or
repnz
aaa
add
and
xchg
iret
pop
mov
pop
fs
inc
lock
fbld
jnp
decl
fsubs
fwait
sbb
call
dec
jecxz
js
nop
xchg
orl
jg
sti
sub
xchg
cmp
adc
cmp
lcall
cmc
dec
fdivl
adcl
lods
cmp
enter
push
fldl
int
sub
shll
jle
sbb
fmulp
or
mov
cli
out
cvtps2pi
lods
inc
mov
pop
shr
inc
fists
stc
xchg
repnz
push
pop
sub
dec
push
in
inc
mov
mov
xchg
js
insb
inc
sbb
mov
stos
je
div
out
icebp
xchg
adc
scas
xchg
inc
clc
cmp
adc
fmuls
pop
aas
std
fnstsw
cmp
and
cmpsb
into
gs
hlt
jns
pusha
xor
dec
mov
insb
or
pushl
enter
pop
into
sub
push
pushl
cmc
pop
in
pop
xor
decb
xlat
es
mov
insl
cmp
lods
outsl
xorl
sti
push
inc
ret
inc
inc
pushl
hlt
xchg
mov
sbb
pop
cmp
aaa
jecxz
leave
lret
imul
mov
sbb
aas
mov
mov
xchg
jge
es
adc
inc
rclb
jle
scas
and
fnsave
xchg
repnz
in
ja
add
out
mov
fucomp
ss
add
and
popa
test
pop
ret
mov
mov
jnp
and
mov
out
ret
and
test
jnp
add
xchg
iret
cmp
ljmp
adc
imul
into
dec
push
sqrtps
mov
and
lahf
sub
outsb
ja
out
addl
in
je
mov
idivb
pop
jl
adc
inc
dec
in
mov
cmp
pop
or
loop
jns
popa
idivl
mov
shll
cltd
adc
xchg
lock
mov
loope
mov
inc
inc
mov
leave
lahf
rorb
pop
in
daa
dec
cld
test
mov
out
pop
repnz
sub
and
incl
std
getsec
push
jle
test
mov
xor
mov
ror
int
pusha
sbb
dec
xor
ds
ret
sbb
call
mov
ss
push
or
sahf
xchg
inc
outsl
pop
jle
sbb
aas
clc
sub
jae
and
mov
fidivrs
mov
mov
jmp
sbb
fwait
xchg
jb
mov
pop
push
xor
lock
sub
and
popa
mov
fidivrl
std
mov
jmp
icebp
gs
jb
inc
das
and
xchg
or
jnp
aaa
jmp
stos
sub
jecxz
sbb
into
clc
cmp
and
mov
xchg
lcall
cld
jg
mov
pop
sbb
mov
pop
mov
std
call
push
lock
stc
scas
pop
leave
dec
rcrb
and
daa
mov
rcrl
mov
xchg
es
out
lock
xor
icebp
xchg
adc
xorl
cmp
rorl
lret
enter
iret
bound
and
loope
lret
add
push
test
xor
or
dec
aaa
sbb
add
iret
loop
pop
sarl
mov
mov
xchg
movsl
or
ret
sahf
adc
jb
clc
filds
push
mov
or
lret
xchg
cli
jns
mov
loopne
hlt
push
adc
add
movsb
and
mov
out
push
sbb
sub
jg
std
jg
push
stos
fs
push
cli
dec
mov
inc
lods
cmp
pushl
dec
fucom
xor
int
mov
pop
adc
shlb
mov
sbb
xchg
aas
cli
aam
mov
inc
jl
add
mov
xlat
pop
cmpsb
sub
sub
fcmovnb
decl
incb
fwait
enter
loop
sub
std
inc
cmpsl
inc
jb
imull
decb
pop
rclb
or
mov
jge
test
and
mov
ret
sti
mov
test
jl
inc
pop
cmp
ja
pop
cltd
stos
mov
int3
outsl
sbb
outsb
test
std
sub
adc
sbb
sub
mov
test
notl
inc
xorl
pushf
mov
ja
xchg
mov
stos
adc
lock
and
jne
sti
pop
inc
inc
xchg
sbb
pop
push
cmpsl
cli
lcall
pop
push
mov
sbb
mov
dec
js
xchg
push
pop
pusha
mov
and
cmc
rolb
cwtl
loop
lahf
pop
push
push
xor
adc
imul
fistpll
mov
loope
cltd
lret
and
ret
dec
dec
push
sahf
inc
test
sti
ffreep
std
orl
dec
dec
and
mov
dec
imul
lahf
aam
pop
xor
out
and
out
repnz
leave
sbb
jp
jmp
int3
push
push
mov
xchg
mov
sub
out
pop
mov
cmp
sub
mov
fisttps
jg
pop
sub
mov
xor
cmp
fidivs
mov
lds
and
test
cmp
dec
mov
pop
icebp
pushf
popa
ljmp
jecxz
rcr
add
sub
adc
xchg
mov
push
inc
xor
std
outsl
loope
mov
push
pop
mov
jne
out
jg
sbb
out
mov
leave
es
loope
decl
sbbl
add
mov
push
loop
icebp
mov
inc
inc
or
jg
add
xchg
das
je
sarl
and
out
in
push
call
mov
cltd
jne
cmp
push
add
lock
mov
in
adc
lcall
lds
out
loopne
outsb
sbb
ret
sbb
mov
aas
sbbl
mov
push
ds
pop
push
dec
pop
add
mov
mov
mov
sbb
aad
adc
dec
cmp
scas
inc
add
jnp
mov
jl
mov
scas
repnz
pop
inc
jecxz
sub
pusha
cmc
xchg
pop
mov
loopne
cmpsb
inc
test
cmp
mov
jge
lret
sbb
pop
xor
imul
loop
xchg
repz
fprem
push
mov
xchg
push
lret
aas
push
loope
mov
mov
sarb
fcomip
daa
xchg
stos
xor
and
mov
push
adc
pop
sub
pop
cld
pop
ret
cmp
daa
lds
xchg
cmc
mov
mov
movsl
xchg
inc
dec
sub
out
loope
rcll
cwtl
mov
xor
push
lcall
jl
pop
inc
std
pop
icebp
and
imul
or
cmc
jno
mov
mov
movsl
fcmovnb
mov
inc
test
stos
mov
dec
lock
jae
stos
jno
or
lahf
in
fsubl
pusha
test
cmp
adc
dec
xchg
cmp
cli
cmp
xor
cmp
jmp
adc
out
adc
mov
push
scas
shll
pop
lea
cmp
enter
imul
data16
sahf
xchg
push
xor
rcrb
jbe
cs
fnsave
popf
pop
jnp
mov
nop
mov
inc
loope
repnz
dec
aaa
clc
pop
std
int3
sti
or
pop
idivl
pop
sub
xlat
sbb
pop
fisubrs
sbb
or
xor
je
std
or
mov
xchg
std
jl
xorb
sub
cmc
sbb
xor
ja
push
ja
adc
aas
sbb
inc
scas
inc
jae
mov
adc
push
pusha
mov
pop
mov
mov
dec
shll
inc
cmpsb
jae
mov
mov
ljmp
mov
mov
mov
dec
mov
mov
daa
fwait
aam
cmc
xor
xchg
cli
popf
rorl
dec
xchg
xchg
sbb
add
std
mov
sbb
fbld
push
out
mov
aam
push
sarb
inc
sub
decl
mov
imul
iret
pop
aad
inc
pop
adc
inc
or
add
pop
test
mov
mov
stos
out
js
xchg
ss
mov
sarl
ljmp
dec
loopne
lock
dec
add
out
adc
inc
mov
andl
inc
jg
imull
inc
lods
sbb
in
sbb
jmp
daa
xchg
loop,pn
les
jle
imul
inc
mov
push
loop
aaa
sub
mov
push
lret
aas
data16
jle
dec
ljmp
outsb
jbe
xchg
push
xchg
xor
ficoml
push
orl
lahf
clc
jle
aam
das
sbb
mov
and
pop
lods
lds
enter
dec
sub
es
adc
sub
mov
push
jb
xor
aaa
sub
push
add
xchg
mov
sub
nop
cld
jg
lock
out
or
inc
mov
cmp
and
pop
or
addr16
testb
call
filds
pop
xchg
push
push
sbb
cld
pop
into
push
push
in
inc
add
pop
push
outsl
jo
inc
add
inc
in
loopne
rcl
in
cld
or
cld
or
add
icebp
pop
inc
add
pop
sbbb
orl
inc
push
or
insl
jb
add
loopne
adc
jns
inc
add
faddl
loope
add
cld
pop
mov
push
dec
jb
jno
bound
or
js
jo
pop
daa
leave
inc
rcrb
push
hlt
inc
adc
push
add
filds
addl
js
dec
adc
dec
add
mov
pop
fiadds
shrl
dec
loopne
in
xchg
add
push
not
push
sbb
or
push
add
mov
jo
pusha
xor
adc
dec
inc
lods
test
in
test
dec
icebp
jg
mov
xor
jb
xor
gs
pusha
clc
incb
in
aaa
push
push
addr16
cld
fisttpl
dec
movl
lock
inc
inc
add
dec
dec
sbb
inc
clc
pop
popf
lods
pop
shr
xor
and
in
aaa
inc
out
jmp
xchg
or
sub
pop
add
js
incb
sbb
sub
pop
aas
pop
xor
xchg
add
inc
outsl
xor
outsb
or
xor
in
sbb
push
call
push
cmp
js
inc
subl
xor
push
add
fxch
jl
inc
dec
cltd
pop
sbb
sti
bound
push
int3
jno
sbb
pop
push
adc
call
sub
loope
pop
imul
ss
mov
sub
fnsave
jb
adc
addb
jae
inc
nop
stos
and
jo
pusha
mull
outsl
add
or
push
mov
xchg
adc
dec
or
jmp
sti
add
incl
sub
add
add
incb
inc
cmp
add
push
sbb
jl
add
sbb
or
scas
outsl
pusha
lock
stos
pop
sar
jne
pop
inc
push
push
and
cmp
ret
push
xor
inc
push
add
bound
movsl
cmp
pop
sub
adc
pop
or
pop
jo
add
fimull
add
cmp
test
mov
mov
cmpsb
xbegin
imul
xchg
xor
clc
fldcw
adc
sub
dec
outsl
scas
cli
inc
in
dec
fs
add
int3
clc
add
ljmp
jbe
movb
ret
mov
push
pop
ss
js
inc
add
sub
inc
fs
inc
jmp
inc
or
push
jb
data16
dec
jns
repnz
call
call
jne
jmp
inc
dec
gs
add
inc
sub
dec
mov
sub
outsb
inc
add
stc
sbb
inc
add
add
add
into
idiv
adc
push
stc
add
adc
cmp
dec
dec
mov
rcrl
imul
jb
inc
rol
mov
js
lret
add
inc
mov
cmp
xor
add
js
inc
add
scas
dec
jb
enter
push
adc
dec
push
xor
cmc
gs
push
push
xor
das
and
add
mov
push
lret
into
outsb
and
jmp
insl
rorb
dec
cmp
xor
js
push
xor
adc
and
mov
dec
sub
xor
rolb
movsb
addb
call
inc
and
push
jnp
jg
aaa
jne
sbb
inc
lcall
sub
and
inc
je
push
jns
jg
cmpsb
add
insl
je
xor
push
push
fadd
nop
lahf
push
imul
popf
stos
or
shr
inc
add
or
cmovne
incl
pop
and
dec
adc
mov
dec
ret
or
pushl
push
inc
add
add
push
les
pop
data16
push
stos
mov
dec
and
aam
insb
xchg
inc
sbb
loopne
iret
adc
popa
insl
dec
add
xor
repnz
dec
sbb
mov
testl
roll
mov
mov
push
sarb
jo
push
xchg
mov
outsl
std
or
push
lcall
and
cmp
lock
mov
cmp
adc
xlat
ja
dec
std
dec
inc
js
cmp
outsb
cmp
mov
sub
shll
dec
inc
sbb
inc
ss
clc
add
stos
clc
sbb
push
mov
push
fiaddl
stos
mov
jo
add
cmpsb
in
push
ficompl
icebp
fmuls
dec
rcrb
lock
aam
inc
fcompl
mov
repnz
js
push
add
int3
sbb
btr
lret
or
dec
sbbb
ficompl
sbb
int3
sti
fidivs
inc
iret
fstpl
mov
aam
les
fidivrs
push
jne
stos
enter
inc
insb
xor
mov
rorb
push
inc
inc
mov
inc
imul
pushl
dec
add
adc
dec
push
inc
jbe
in
adc
inc
jbe
enter
add
push
adc
push
jb
das
clc
mov
push
push
dec
movsb
fcoms
rorb
pop
push
andb
jae
imul
mov
sub
mov
add
sbb
mov
addr16
pop
fsubrs
sbb
repz
push
outsb
dec
loopne
js
js
inc
stos
rcrb
mov
or
sbb
pusha
adc
inc
mov
adc
pusha
clc
inc
pop
dec
clc
mov
mov
push
dec
xor
fiadds
bound
xor
js
mov
arpl
mov
sahf
or
shrb
aam
rcrl
push
andb
jo
jbe
sbb
lcall
arpl
outsl
outsl
mov
inc
dec
mov
or
mov
repnz
dec
jns
dec
outsl
ljmp
push
cli
out
popa
inc
js
push
inc
dec
ss
inc
je
dec
add
inc
push
push
xor
pusha
cli
inc
add
and
ss
repnz
push
inc
mov
movsb
mov
add
mov
in
out
imul
push
mov
aaa
dec
push
push
xor
push
dec
test
pushf
mov
or
lods
push
cmpsb
inc
dec
cmp
pop
hlt
insl
aaa
inc
dec
dec
push
jae
insl
xor
leave
int
fiaddl
push
test
adc
mov
xor
and
loopne
pushf
adc
add
mulb
fiadds
push
pop
repz
or
sbb
xchg
xor
mov
inc
rcrl
test
lahf
adc
and
insl
xlat
pop
int3
sbb
adc
dec
loope
nop
or
std
lcall
pop
inc
adc
add
adc
pop
jmp
sbbl
loopne
xor
push
mov
sbb
sub
add
push
inc
add
shlb
subb
add
mov
add
dec
mov
jae
inc
jo
mov
xor
hlt
xlat
stos
daa
add
cs
xor
in
add
add
pushf
sbb
rcrl
inc
shlb
movsb
add
dec
jnp
test
add
mov
ret
loopne
stos
lods
add
aas
mov
xor
lret
popa
add
imul
aam
ljmp
sbb
mov
insl
sub
add
adc
test
movsl
xor
mov
sub
push
inc
adcb
add
lret
add
sar
mov
jmp
scas
add
add
mov
pop
inc
lret
adcl
adc
daa
pop
xor
insb
sbb
inc
aaa
fbstp
sbb
add
stc
mov
clc
xchg
pop
or
mov
pop
or
fsubr
mov
shll
sbb
test
cmp
sub
and
adc
mov
xchg
jb
add
dec
sub
mov
lcall
push
fisttps
aad
push
stos
add
imul
xchg
xlat
adc
in
mov
fnsetpm(287
mov
adc
stos
pop
fsubrs
mov
mov
add
lar
hlt
int
add
xor
xor
hlt
or
dec
cmp
aaa
mov
sbb
add
xchg
cmp
enter
add
fneni(8087
rcll
repnz
adc
stos
dec
push
lcall
mov
or
fcmovnbe
popa
aam
push
fs
outsl
jno
pop
add
and
bound
out
dec
iret
add
jmp
adc
mov
push
jnp
rcl
xor
and
aaa
or
ret
es
jne
sub
mov
lods
into
cmp
cmp
mov
adc
inc
stos
jbe
sbb
add
mov
out
sbb
mov
fnstenv
xchg
fidivs
aas
leave
add
out
addb
out
addb
aas
movsl
fadds
dec
fsubs
mov
lcall
je
fs
aas
jge
mov
push
dec
jne
fimull
pop
lahf
adc
xor
lock
xchg
imul
hlt
cmpb
jecxz
mov
sbb
bound
xor
push
out
dec
inc
js
mov
shl
insl
ljmp
sub
xor
inc
jbe
adc
mov
fimull
cmpsb
cmpsl
mov
lea
jge
mov
cwtl
aas
stos
jg
orl
outsb
enter
nop
sbb
mov
cmp
fbstp
jge
mov
addl
enter
and
push
dec
addl
sbb
and
push
add
sarl
mov
xor
shrl
mov
push
dec
xor
lods
cwtl
imulb
subl
cmp
push
or
sbb
xlat
aam
push
adc
popf
sbb
ds
mov
cs
inc
add
call
pop
roll
dec
hlt
les
mov
mov
dec
jnp
dec
xlat
or
daa
mov
scas
aas
test
mov
xchg
rcl
test
sub
mov
xchg
jmp
dec
int3
cmpsb
sub
add
jle
cmpsb
sub
mov
or
stc
sbb
ss
dec
call
push
ljmp
lods
test
dec
insl
imul
jl
imul
jo
pop
js
jb
out
pop
shrl
cltd
mov
adc
add
dec
inc
test
adc
adc
fildl
jne
scas
repnz
sbb
clc
add
or
stos
shrl
add
or
pop
subl
xchg
cwtl
bound
and
push
inc
inc
movsb
inc
mov
or
dec
repz
in
addl
bound
lods
mov
stos
movsl
add
jle
shll
movl
aas
fbstp
and
ja
mov
dec
mov
in
mov
mov
lahf
out
add
je
mov
sahf
int
cmp
cmpsb
jmp
mov
lods
sub
and
adc
jns
sub
call
mulb
loop
mov
sub
xchg
mov
push
mov
ss
dec
xchg
xor
mov
orl
sti
xor
cmpsb
jge
subb
adc
add
cmc
loope
pop
int
or
mov
inc
sbb
aad
pusha
ljmp
leave
inc
dec
negb
jp
jl
xchg
hlt
cs
pop
dec
call
add
insl
outsb
inc
ror
enter
pop
sub
test
xor
mov
scas
cmp
inc
imul
scas
stos
sub
mov
adcb
scas
xor
dec
incl
test
xchg
or
xchg
stc
add
sbb
dec
fbstp
sbb
repz
mov
xchg
stos
push
pop
jae
xchg
and
dec
sub
mov
or
into
cmp
std
int
sbb
sbb
mov
popa
inc
mov
inc
scas
inc
into
movlps
inc
xlat
mov
mov
fisubs
xor
addr16
sub
mov
jns
fstpl
sarl
pop
jl
les
in
mov
imul
inc
xchg
adc
mov
inc
rorb
xor
lock
pop
add
test
jnp
idivb
jmp
adc
stos
jbe
fisubs
sahf
outsb
push
jle
ret
jnp
das
int3
int
outsb
mov
xchg
adc
mov
lock
ds
jbe
xor
mov
pop
mov
popf
or
jb
outsl
cmpsb
test
movsb
dec
or
movsl
in
aad
or
adc
sub
ja
sarl
test
dec
push
dec
cltd
mov
aam
fwait
adc
jnp
sbb
pop
pop
ficompl
cmp
sbb
sub
cmp
xorb
push
jbe
sarb
data16
push
dec
dec
negb
cmp
jns
pop
fadds
add
cmp
fcom
or
das
adc
mov
cld
add
push
xchg
pop
test
jno
popf
hlt
cmp
fistps
inc
add
inc
aaa
dec
int
or
lds
pop
daa
lods
jle
mov
add
adc
int
add
call
in
pop
cmpl
xchg
stc
cs
fwait
add
jge
xchg
ret
ds
xchg
les
add
and
mov
jp
jg
scas
pop
lods
mov
into
mov
inc
xor
mov
cmp
xor
roll
xchg
push
xchg
add
cwtl
jp
mov
adc
loop
lods
daa
sbb
mov
cld
xchg
testb
jl
pusha
nop
ret
test
fcmovbe
push
xor
xchg
rolb
sbb
jo
rcrb
sub
in
sarl
je
xor
rcl
jmp
jbe
xor
sbb
sarb
sahf
jo
in
add
or
sbb
stos
rcrl
sbb
imul
subb
sbb
xor
mov
inc
dec
in
ljmp
hlt
rorl
fildl
and
popf
cmpsb
or
or
xchg
jle
inc
push
rclb
aad
mov
xor
stos
adc
and
add
cmp
lods
rcr
dec
into
js
pop
push
jo
xchg
cmp
xchg
sbb
sub
adc
mov
bswap
push
adc
shlb
aam
mov
iret
inc
pop
aaa
jne
pop
rclb
arpl
lcall
arpl
add
and
mov
lock
enter
orb
rcrb
sub
inc
push
int
mov
test
add
out
insb
push
mov
xorl
sbb
icebp
sbb
rclb
jp
scas
daa
push
lahf
into
stos
das
sbb
pop
pusha
loop
ss
and
cmp
pop
fs
xchg
dec
out
add
movsl
insl
pop
cmpsl
add
sbb
lods
orb
fiaddl
inc
push
into
lock
add
and
xchg
lret
test
stos
lods
cli
add
cmp
cmp
mov
dec
and
aad
jbe
add
inc
andb
or
clc
scas
ss
hlt
or
inc
adc
std
nop
xchg
pop
adc
push
jl
pop
stos
cmpsb
pop
pusha
popl
ss
mov
push
mov
jge
jmp
push
mov
aam
lahf
push
lahf
lods
mov
push
dec
lcall
aaa
mov
jp
movsl
mov
mov
cpuid
mov
inc
fildll
xor
sbb
add
dec
mulb
lahf
arpl
mov
pop
pop
mov
imul
jne
cmp
call
adc
and
jl
sub
jecxz
mov
cld
push
xchg
cmp
stos
xor
push
and
lds
dec
xchg
xchg
add
inc
scas
xor
push
in
or
pop
push
cmp
lods
es
js
push
push
mov
das
testb
mov
adcb
int
dec
adc
ret
dec
cmp
leave
mov
loop
pusha
jle
addr16
push
int
mov
cmpsb
jo
inc
leave
cmpsl
cmp
pop
and
and
mov
negl
in
xor
add
fmuls
push
ffree
pop
scas
push
je
pop
andb
in
mov
xor
pusha
inc
mov
insb
mov
clc
jno
in
pop
and
inc
push
lahf
lds
rcrb
minps
or
cmc
cmc
into
rclb
add
mov
ljmp
jno
cmp
in
testb
fsubs
push
hlt
mov
pop
jb
mov
lods
jecxz
ss
add
cmp
inc
cmp
lds
in
das
out
pop
subb
mov
lods
cld
mov
fldl
mov
push
cs
scas
jbe
pushf
or
mov
xchg
cmp
enter
push
cltd
pop
or
mov
add
xchg
std
clc
ds
lret
outsl
int
call
imul
push
clc
sbb
xchg
notb
jmp
sub
adc
pushf
add
xlat
push
xchg
add
jnp
daa
and
jmp
daa
hlt
pusha
bnd
sub
dec
and
sub
cmp
rclb
inc
add
lret
mov
adc
xor
push
fisttps
pop
jbe
cmp
pop
imul
je,pt
add
movsb
ret
adc
push
cmp
fidivrl
add
es
xchg
dec
stos
fcmovbe
cs
push
xchg
mov
adc
das
mov
push
dec
push
jle
sub
or
lret
jmp
dec
shll
mov
cmp
inc
cld
insl
fdivr
cltd
in
or
loop
pusha
sbbb
stos
scas
cld
cmp
fsub
cmp
es
adc
or
add
cmpsb
dec
cwtl
mull
lds
xchg
fidivrl
sbb
movsb
imulb
imul
mov
push
das
jl
ret
roll
shlb
pop
lret
shlb
addl
pushf
mov
lahf
nop
pop
lds
and
aas
push
fwait
dec
add
dec
mov
mov
mov
xchg
cld
ljmp
adc
dec
push
and
imul
push
xchg
pop
call
outsb
lods
outsl
push
loopne
rclb
ss
inc
jbe
bound
sbb
rclb
adc
shrl
loopne
dec
iret
les
cmp
icebp
popf
bound
bts
jnp
mov
jmp
lea
arpl
add
out
mov
push
cld
mov
std
jle
insl
adc
add
scas
xchg
pop
pop
lret
cld
push
scas
sbb
cmc
inc
ret
popa
and
ljmp
inc
mov
andl
push
ja
sbb
pop
fstpl
rcrl
cmp
cmpsb
inc
sbb
rcll
in
sti
int3
in
lcall
js
mov
aaa
lahf
pop
insb
xor
jge
popa
mov
pop
jp
aam
and
dec
pushf
sbbb
notb
mov
xor
xlat
add
pop
jp
mov
push
add
pop
pop
xor
pop
push
mov
and
dec
divl
scas
dec
cmpsb
xorb
roll
jns
fs
xlat
sub
decb
es
in
sub
mov
push
scas
testb
loope
cmp
push
push
lcall
xchg
jmp
xchg
jecxz
insl
pusha
cmpsb
fcmovnb
sbb
in
jbe
lcall
pop
add
js
inc
or
lret
int
mov
adc
ljmp
inc
xlat
ds
or
jg
mov
movsl
icebp
aas
icebp
mov
mov
jnp
fmul
lock
cs
inc
mov
cli
sub
hlt
mov
sub
arpl
inc
xchg
and
in
icebp
mov
icebp
adcb
iret
je
push
jge
divb
lods
pop
mov
les
orb
mov
bound
and
aam
jne
jg
sub
fcom
mov
xor
or
stos
stos
rcrl
cmc
pop
mov
inc
fisttpll
and
cmc
das
icebp
sub
movsl
adc
mov
dec
call
jge
cmp
xor
inc
stos
cmp
dec
and
in
mov
sbb
add
mov
out
or
loopne
sub
out
bound
adc
sbb
push
mov
ss
insl
movsb
rclw
push
xchg
mov
clc
pop
sub
sub
add
mov
inc
rolb
call
outsl
ds
js
je
add
or
js
sarb
test
sbb
sbb
pop
dec
ljmp
xchg
pop
ret
dec
fcmovnu
leave
jp
lcall
jp
cmp
into
add
ds
test
mov
mov
mov
ret
test
inc
push
xor
jmp
out
stos
xchg
xor
inc
fistl
ja
outsl
outsb
jns
or
pop
out
adc
pop
arpl
insb
aam
aad
frstor
and
xor
xchg
cmp
jne
popa
lods
js
xor
fildll
mov
popf
add
pusha
scas
stos
dec
andb
sbb
add
testb
jecxz
lret
loop
jmp
stos
xor
in
cmpsl
xchg
shl
adc
inc
sub
push
divb
hlt
cmp
in
mov
mov
mov
icebp
inc
fwait
xor
aam
mov
or
mov
sahf
rcrl
cmpsl
push
imul
mov
addl
test
cvtpi2ps
mov
dec
lock
in
js
pushw
or
loop
sub
sub
insb
dec
popa
mov
or
mov
fsubl
je
sub
ds
pop
stos
call
mov
aaa
subb
icebp
inc
xchg
stc
push
scas
imul
inc
add
clc
fbld
add
mov
fs
cmp
fcmovbe
test
push
cwtl
aam
test
test
or
sub
fsubrs
scas
xchg
test
xor
jl
lret
xchg
fisttpll
add
pusha
adc
nop
sub
jbe
mov
in
lods
bound
dec
jp
movsl
push
fnstsw
push
cmp
fyl2xp1
je
mov
popa
out
fdivp
adc
mov
adc
movb
mov
dec
pushf
jl
icebp
push
jl
jbe
ret
shll
pop
mov
ljmp
push
mov
push
inc
jnp
xchg
mov
mov
sbb
push
std
and
jle
mov
lds
cmpsb
mov
fwait
or
xlat
dec
fstpt
and
or
ljmp
enter
nop
lds
adc
or
sub
sub
inc
movsb
idivb
test
cmp
dec
mov
pop
jo
mov
xor
mov
cmp
andb
out
or
push
paddsw
sub
inc
mov
cmp
mov
add
push
fsincos
or
adc
int
add
pop
push
test
mov
stos
dec
mov
add
and
mov
rolb
popf
mov
inc
fdivrs
jmp
or
lods
mov
subl
pop
push
stos
insb
xor
hlt
mov
push
jnp
movsb
roll
mov
mov
movsl
insl
jne
pop
hlt
rclb
or
adc
ror
aas
push
test
mov
cmp
mov
inc
les
imul
add
outsl
test
mov
jp
jp
xchg
sbb
add
push
rclb
shr
add
mov
sub
je
jmp
ret
or
cs
test
push
test
cli
xor
pusha
idivb
add
mov
test
push
mov
push
int3
and
insb
sub
mov
ljmp
cmp
loopne
jbe
cwtl
clc
je
adc
mov
icebp
cmp
jno
push
fisttpll
fimuls
test
jg
inc
xor
xor
incb
dec
aas
or
xlat
arpl
cltd
inc
out
lock
sbb
push
push
or
out
jns
cwtl
add
es
add
or
jmp
sarl
aam
fmull
cmp
outsl
test
lods
scas
jno
subl
pop
out
leave
push
sar
add
inc
imul
cmpsl
add
adc
test
cli
pop
mov
adc
sbb
vorpd
insl
pop
inc
push
xor
jae
xlat
sbb
jg
mov
jno
into
cmp
pop
add
cmp
push
xchg
ror
sub
pop
aad
imul
xchg
ss
mov
scas
addb
fwait
es
inc
test
loopne
cmp
testb
xor
imul
adc
sbb
push
iret
cmpsl
adc
in
shrl
or
rorb
inc
int
sub
or
addr16
mov
sub
nop
pusha
or
mov
aad
xor
mov
sbb
inc
cmp
mov
mov
sub
push
stos
mov
outsb
dec
fdivl
lret
cli
roll
adc
push
imul
jmp
ret
pop
jns
mov
call
inc
xlat
mov
scas
lods
sbb
pop
mov
mov
enter
ljmp
pop
or
pop
imul
jo
sub
sti
aam
pushl
cld
out
sbb
or
adc
mov
scas
mov
andl
sbb
and
icebp
pop
mov
cmp
dec
jmp
xor
pop
cmpsl
test
int
push
jge
add
mov
lock
add
aad
sbb
mov
test
xor
loopne
pop
sbb
adc
lahf
test
mov
lcall
daa
adc
je
dec
loop
loop
add
pop
lock
xchg
or
push
xor
mov
and
mov
mov
fcomps
fistl
push
push
pop
sbb
je
sahf
scas
pop
rcrl
call
outsl
andb
insl
fwait
cmp
pop
lcall
push
push
jmp
fldl
inc
jae
mov
mov
or
cmp
and
jne
pop
fidivl
and
push
iret
loope
pop
loope
inc
aaa
inc
sbb
sub
inc
mov
cli
push
cmpsl
shl
fcmovbe
mov
xchg
adc
ljmp
popl
inc
rcrl
cld
sbb
in
inc
fucomi
roll
aad
fisubs
push
gs
shl
cmp
push
fs
or
es
dec
inc
push
test
push
and
std
xchg
xchg
mov
sub
daa
xor
mov
lods
mov
pop
idivl
mov
jne
ret
dec
roll
and
clc
mov
push
das
adc
adc
inc
sub
ret
into
stos
cwtl
loopne
pop
shr
jno
lcall
cmpsb
cmp
sub
nop
cs
aas
fisubl
push
movsb
inc
fldln2
jo
adc
popf
repz
mov
dec
lret
inc
inc
mov
mov
out
jp
add
in
or
add
rorb
test
push
mov
imul
jb
pop
iret
dec
sbbb
sub
push
adc
fwait
inc
sti
data16
xchg
mov
stos
js,pn
cmp
mov
lcall
mov
in
loop
push
lret
push
js
lret
ret
pusha
inc
ret
inc
sbb
sbb
mov
loopne
or
add
adc
mov
inc
lea
sub
push
movsb
or
sbb
jb
add
cmpsb
inc
mov
mov
add
or
sbb
les
push
xor
stos
pop
popa
sbb
das
add
lret
or
fmul
cmp
cld
stos
sbb
add
inc
lcall
and
fsubs
mov
jmp
xor
inc
aam
cmp
pop
sbb
sub
cmpsb
adc
cltd
dec
push
xchg
mov
lret
fbstp
mov
outsl
mov
ret
push
sbb
shrb
outsl
push
adc
mov
nop
jg
jnp
test
adc
shl
xor
call
aam
decb
jmp
out
sub
sub
fcmovu
sub
js
push
and
lock
jl
insl
imul
test
lods
push
and
fwait
pop
loop
add
mov
sbb
push
frstor
pop
fs
inc
imul
ret
daa
push
insl
sbbl
aam
pop
pop
into
sub
scas
xor
dec
pop
pop
lock
sub
mov
cmp
imul
sub
negb
adc
cli
movl
mov
xchg
loop
loop
adc
adc
lock
aam
pop
adc
inc
adc
cwtl
pop
inc
jnp
mov
scas
cmp
es
xchg
mov
add
and
dec
roll
cmpsb
dec
push
sub
push
cmp
test
popf
inc
out
pop
dec
in
mov
inc
mov
dec
dec
pop
daa
mov
addl
dec
daa
rcrb
enter
test
and
and
test
jmp
push
cmp
addl
sbb
mov
loope
inc
pop
mov
sbb
sahf
add
inc
loop
pop
mov
sub
jg
int
lods
clc
xor
adc
rcrl
jg
sbb
lret
stos
mov
insb
mov
cmpb
jl
push
cmpsl
push
xchg
mov
push
or
mov
in
jb
xor
inc
dec
mov
out
outsb
ret
lock
hlt
add
jmp
jmp
mov
ret
add
xchg
push
dec
fnstcw
xor
push
lock
movsb
mov
stos
andb
ss
lcall
in
sub
jns
js
or
add
rcr
xchg
mov
push
and
shrl
shlb
in
or
push
addb
jl
rolb
push
insl
js
push
repnz
ds
sub
and
das
and
sbb
or
lock
in
aaa
and
or
sbb
push
xor
xchg
sbb
insb
sbb
lahf
lcall
lock
jge
jo
xor
add
imul
sub
adc
bound
ds
fwait
mov
push
movsb
dec
pop
lcall
mov
cld
mov
mov
add
cli
rorl
dec
clc
jbe
inc
inc
or
es
iret
push
push
cmp
mov
mov
or
in
std
adc
mov
addr16
fbld
les
mov
inc
mov
mov
cmp
add
jecxz
pop
jp
push
inc
insb
mov
pop
pop
and
mov
add
xor
pop
jp
mov
sbb
addl
int3
pop
test
idivl
mov
inc
and
lds
cmpsb
imul
push
or
inc
add
push
js
add
ja
test
pop
pop
and
cwtl
lods
popa
les
clc
fimuls
push
lret
mov
enter
dec
mov
int3
xor
call
ss
out
push
mov
cmpsl
push
inc
sbb
ds
pusha
xor
mov
inc
pop
or
mov
or
iret
lahf
mov
cmp
inc
or
xchg
dec
inc
into
mov
xor
cmpsb
push
inc
shll
xchg
fimull
jo
xchg
or
adc
outsb
cmpl
push
xchg
or
cmp
xchg
jp
clc
hlt
mov
pop
mov
xor
aas
sti
bound
mov
pop
sbb
jae
pop
lods
jno
sbb
pop
mov
andb
and
cmp
cmp
pusha
repnz
in
dec
add
add
mov
push
mov
bound
call
js
pop
pop
mov
out
push
dec
inc
xchg
add
pop
jl
loop
clc
mov
cwtl
movntps
mov
pop
cmp
adc
rclb
frndint
mov
xor
pusha
inc
pop
xchg
test
sbb
xchg
xlat
fstpl
cs
ltr
cld
mov
jp
inc
popf
adc
jne
push
pusha
popf
dec
cmpsb
cmp
or
ss
hlt
adcb
hlt
adc
mov
jge
sub
enter
pop
sbb
jmp
movsl
mov
test
nop
xchg
out
pop
sbb
xchg
je
leave
clc
test
hlt
insl
bound
xchg
push
xchg
insb
lds
addr16
mov
pop
cld
xor
call
inc
add
subb
dec
incb
lds
adc
fcmovnbe
jno
push
jl
pusha
and
ror
sbb
sbb
ljmp
xchg
pop
push
or
mov
push
sbb
sbb
hlt
ljmp
ret
adc
and
mov
imul
stos
add
scas
icebp
push
xchg
je
stos
jp
sbb
int3
call
cmp
loop
jmp
mov
repnz
pop
fidivl
test
xchg
push
push
or
clc
jno
shlb
push
xor
xchg
stc
adc
lds
bound
jnp
sti
xor
jnp
mov
test
hlt
mov
push
adc
icebp
shll
out
jbe
lcall
sub
fimull
sbb
jle
xor
enter
jae
ljmp
mov
daa
ret
pop
fucom
stos
shrb
jns
jae
jge
sub
test
push
sbb
xlat
mov
push
xchg
pop
ljmp
insl
jo
xchg
fisubs
xchg
adc
fwait
pop
stos
outsb
or
insl
aas
mov
test
xor
jb
lds
inc
jbe
loop
iret
sbb
stos
mov
fldcw
sbb
push
es
shlb
pop
push
mov
cwtl
pop
rolb
fimuls
cmc
cltd
cmp
int
outsl
aaa
jbe
mov
iret
mov
adc
sbb
icebp
leave
and
cs
push
arpl
push
imul
add
shrb
mov
clc
add
in
push
pop
insl
sti
pop
insb
movsb
call
push
cmpl
sub
in
jmp
push
sub
sub
or
jl
add
repnz
sub
and
das
push
test
pusha
leave
push
hlt
fcmovbe
cmp
imul
jp
movzbl
xchg
cmp
cltd
xchg
je
hlt
test
hlt
adc
pop
pop
loopne
mov
int3
jmp
inc
mov
mov
mov
or
int3
cmpsb
dec
ret
adc
jne
or
fdivrl
adc
dec
mov
rep
clc
xorl
ljmp
push
or
ret
mov
push
pop
and
add
cmp
call
jno
xor
or
shlb
imul
add
xor
dec
shl
ret
cwtl
jge
mov
daa
mov
scas
repnz
and
xor
sub
jle
insl
in
xchg
add
je
xchg
ret
mov
cmp
mov
xor
pop
pop
test
aam
andb
sbb
out
inc
test
inc
sarl
pusha
cmp
mov
mov
pop
popf
jno
or
cmpb
hlt
lea
fisttps
andb
cmp
cltd
sbb
jnp
pop
jbe
inc
fwait
jle
xlat
cmp
dec
xor
mov
adc
clc
daa
mov
loopne
rcrl
dec
pop
test
mov
jnp
pop
jno
popa
lods
mov
mov
or
mov
mov
inc
lea
adcb
sub
insb
test
jbe
out
xchg
pushf
stos
enter
xlat
add
xchg
inc
push
clc
xchg
mov
adcl
bt
rcrl
stc
fistpl
call
mov
adc
cmp
stos
sbb
xchg
jl
and
lods
icebp
popf
test
push
add
test
scas
movsb
cmpsb
fldenv
in
mov
mov
stos
cs
aam
int3
call
gs
cwtl
int3
sbb
xchg
test
mov
dec
add
imul
aas
roll
popa
movl
bound
adc
jo
push
or
push
insb
mov
pop
or
mov
and
or
fcom
mov
sbb
lods
xor
adc
adc
ds
mov
test
add
cmc
mov
arpl
in
sbb
mov
lds
add
push
mov
or
pop
sbb
mov
shlb
ficoml
or
dec
loopne
lcall
addb
mov
xchg
adc
loope
loopne
mov
mull
push
fsubs
mov
mov
imul
push
mov
mov
mov
xchg
int3
adc
or
sub
int
and
or
incb
jecxz
mov
mov
rolb
and
sbb
pop
gs
jne
mov
subl
test
mov
cs
pop
addb
lock
cmp
pop
lods
aaa
or
or
push
mov
movsl
rcrb
xor
xchg
out
cmp
pop
addr16
shrl
mov
xor
pusha
popa
call
pop
cmpsl
lcall
mov
inc
sbb
adc
nop
imul
add
pop
jl
into
fadds
sbb
mov
adc
js
mov
out
int3
out
rorl
fiadds
mov
inc
add
rcrl
jbe
pop
cmpsb
add
pop
sahf
clc
jmp
andl
js
inc
dec
inc
loope
xor
push
loope
popa
shll
sub
test
adc
mov
in
dec
in
dec
inc
dec
lock
outsb
sbb
test
adc
mov
test
sarb
mov
jp
cld
inc
mov
add
das
inc
orl
inc
xlat
fisubs
inc
cmpsl
mov
and
cmp
stc
adcb
fadds
mov
test
lret
jb
pop
cmp
inc
xor
push
add
push
ficomps
pop
fst
jno
add
stos
in
jge
imul
sub
mov
adc
sbb
push
jle
sub
cmp
add
loop
mov
fcom
mov
mov
sub
sahf
nop
mov
mov
jp
outsb
and
add
mov
jecxz
outsb
addr16
xor
or
divb
out
xchg
jl
nop
loopne
add
jp
sub
insb
sub
mov
mov
mov
xor
mov
and
bound
fmul
pop
push
inc
cltd
call
adc
insl
imul
add
pop
ret
daa
mov
or
mov
mov
movsb
sahf
pop
sbb
jae
fld
jg
cmp
fwait
add
das
or
mov
and
inc
or
dec
aad
dec
test
push
cld
cmp
mov
xor
mov
out
ret
mov
dec
divl
push
cmp
outsb
jne
pop
lcall
ljmp
jp
movsb
adc
push
fisubrs
filds
fsts
cmp
in
outsb
add
arpl
cmp
adc
in
pushf
rcll
jb
outsl
sub
inc
jp
or
or
jo
mov
and
cld
sbb
cmc
hlt
hlt
adc
cwtl
daa
icebp
shlb
inc
mov
mov
ret
aam
inc
sbb
push
aaa
or
cmp
dec
insb
pusha
loopne
push
jle
stos
mov
cli
dec
jnp
sub
cld
popf
rcrl
aad
pop
cmp
es
cmc
push
sbb
decb
add
xlat
xchg
pop
and
cmc
jno
jae
pop
enter
sbb
jp
fimull
fsubr
xor
fbld
sbb
or
aas
push
and
fcompl
rolb
rclb
mov
jne
incb
pop
insb
sbb
push
ret
adc
repnz
outsb
dec
or
xor
sti
in
or
adc
mov
inc
stos
repz
dec
xchg
cmp
imul
sbb
mov
inc
xchg
popa
mov
xchg
jo
mov
lea
fdivr
data16
js
dec
outsb
push
std
push
adc
cltd
pushf
enter
or
mov
sahf
sub
je
call
adc
xor
ljmp
pop
add
shld
add
movd
test
pop
imul
pop
mov
and
shrb
xor
rorb
daa
stos
jmp
je
mov
or
nop
sub
sbb
or
dec
add
mov
es
inc
gs
les
xchg
aam
push
scas
jne
xor
and
jo
insl
sbb
cld
icebp
rorb
rol
pop
adc
ret
aas
sbb
jmp
mov
mov
loope
xor
rorb
sbb
fs
std
and
out
insb
lcall
dec
fprem1
fsubrl
ret
dec
nop
shrb
repz
push
imul
xor
pop
xchg
cmp
push
mov
cmp
xchg
adc
xchg
mov
xchg
sbb
jb
add
outsl
mov
or
addb
lret
push
push
push
sub
push
cmp
pop
push
call
lock
pop
fbld
outsl
ficompl
incl
dec
loopne
xchg
pop
sub
xor
inc
and
fwait
jl
adc
inc
sti
inc
jmp
hlt
jbe
movsb
into
and
mov
sub
sbb
push
or
andb
xchg
mov
shlb
adcb
fisubrl
inc
mov
cmp
int3
popa
inc
pop
jbe
or
cmp
inc
mov
mov
adc
movsb
push
push
xor
adcb
test
cmp
adc
xor
inc
xor
pop
adc
pop
test
repz
out
jecxz
dec
sbb
cmp
les
mov
int3
and
testb
fs
cwtl
push
jp
pop
xchg
and
andb
cmpsl
push
pushf
divl
and
add
int3
dec
cmpb
lahf
lods
push
mov
ret
dec
cwtl
std
push
pop
pusha
les
jbe
imul
push
push
push
xor
jb
push
or
insb
nop
aas
dec
popa
and
push
jge
sbb
inc
mov
sub
mov
cmpsb
sub
sbb
jnp
ss
sbb
pop
stos
sbb
dec
adc
pop
incl
hlt
rolb
sbb
cld
movsb
sub
xor
cmpsl
mov
sbb
rorl
mov
cmp
xchg
dec
sub
push
pop
inc
xor
or
inc
repz
sub
push
dec
xchg
xchg
test
inc
cli
lahf
mov
add
push
lods
adc
adc
pop
push
inc
sub
mov
or
pop
push
subb
hlt
or
ds
sbb
mov
movsb
pop
movl
mov
jae
pop
je
push
orl
dec
sarb
outsb
and
andl
std
das
mov
cmp
pop
mov
mov
hlt
jb
jle
sbb
clc
movsb
sbb
dec
push
ret
ror
and
shl
pop
lret
cmp
sub
mov
jmp
mov
push
fimull
inc
ss
je
xor
and
inc
pop
insb
xchg
js
pusha
push
mov
leave
adcl
cld
aam
cvttps2pi
fsubrl
dec
mov
xchg
xchg
mov
push
sub
hlt
das
cmpb
or
fs
popf
loope
stos
or
ds
fwait
jbe
vlddqu
inc
mov
stc
mov
inc
jmp
repnz
decb
mov
ds
xchg
in
lock
push
sub
jecxz
aas
stc
loopne
jg
ljmp
cmpl
lods
jmp
stos
aas
xor
pop
dec
dec
push
push
int
jg
arpl
add
cwtl
fistps
sub
sbb
jge
insl
and
std
add
inc
cwtl
pop
clc
lock
jae,pt
hlt
in
xchg
lea
arpl
das
mov
xchg
cwtl
aam
ljmp
add
nop
xor
clc
fsub
cmpsb
cmp
cmpsl
add
push
or
loopne
or
out
jge
mov
mov
push
aam
adc
push
insb
cmp
adc
arpl
xchg
mov
ds
push
loope
decl
and
inc
cmp
add
inc
adc
dec
dec
sbb
push
push
pop
dec
sub
lcall
lds
arpl
or
push
mov
popa
rolb
cmp
add
pop
es
cli
add
andb
mov
push
ret
xchg
and
add
ret
add
dec
cmp
xorl
push
dec
ret
in
or
ss
add
insl
push
add
mov
cmp
adc
pop
xor
push
add
cmp
inc
or
shlb
push
adc
and
rcrl
sbb
adcb
lret
xchg
movb
dec
out
xor
cmp
aam
dec
roll
lods
adc
fdivl
dec
ret
adc
pushf
push
pop
lcall
mov
inc
ficompl
push
cmp
repnz
mov
push
aaa
push
ret
add
subb
and
fs
dec
pop
pop
popa
mov
stos
pop
gs
data16
aas
jns
inc
addl
or
jg
push
lods
outsb
test
inc
insb
cmpb
inc
in
shr
gs
cmp
jle
cld
dec
fsubs
jl
hlt
mov
or
push
aam
lcall
xchg
inc
inc
push
cmp
pushf
mov
call
inc
mov
xor
pusha
inc
or
add
jle
aad
inc
fcoms
fs
mov
xchg
mov
inc
pop
out
aaa
repnz
rcrb
sub
es
pop
add
lahf
loop
or
jne
scas
xchg
test
mov
pop
loope
fistpll
lds
sahf
pop
lods
mov
pop
scas
pop
bound
sub
push
sub
pop
popa
shr
cltd
mov
in
jmp
jge
popa
fmuls
or
cwtl
fs
test
call
dec
sahf
push
mov
or
leave
push
popa
addr16
mov
dec
stos
or
or
fcomi
test
add
ror
scas
mov
lcall
pop
subl
jbe
divl
mov
fstl
ret
pusha
nop
dec
or
cli
xor
pop
add
dec
push
clc
xchg
ja,pt
fwait
dec
or
xchg
jno
xchg
and
push
xchg
cmp
add
fnstenv
ss
jne
jnp
add
or
inc
sub
mov
in
movsl
add
inc
mov
andl
mov
je
in
psrld
xchg
mov
sarb
scas
sub
testb
push
ffreep
imul
push
mov
insb
xor
mov
rclb
jbe
sbb
and
push
mov
xchg
xor
mov
mov
lock
push
fwait
inc
ds
ds
inc
adc
adc
xchg
jnp
mov
dec
imul
pop
loop
xchg
push
push
das
dec
cltd
jp
push
inc
mov
gs
mov
arpl
fsts
mov
insb
or
pop
xchg
dec
adc
inc
insb
rol
dec
sub
xorl
mov
jecxz
sahf
addl
je
stos
adc
sub
cmp
fdivrp
aam
sbbb
sbb
lock
sub
sub
mov
enter
clc
mov
cli
idivb
lea
mov
fnsave
mov
sbb
cwtl
add
mov
test
adc
fisubl
subl
sub
add
push
sarl
bound
aad
cwtl
push
jns
sbb
popf
jnp
fdivrs
stos
loop
ds
adc
and
out
cmp
jo
push
sbb
rcrb
pop
mov
fwait
mov
rclb
je
hlt
jmp
mul
adc
or
cmpsl
or
jp
lea
pop
rolb
dec
pushf
jl
bnd
cmpsl
push
jno
lods
push
lcall
or
andb
outsl
adc
jg
mov
mov
push
clc
inc
cld
jo
mov
mov
or
xchg
or
ds
fisubs
adc
mov
sub
lods
out
fidivrl
sbb
mov
iret
push
in
jbe
xor
push
and
or
mov
sbb
mov
pop
int3
mov
cmp
push
pop
jp
movsl
jmp
fndisi(8087
cs
cmp
add
dec
push
mov
adc
lds
fwait
std
inc
push
aaa
mov
shlb
mov
int
loop
adc
sbb
jecxz
mov
es
sbb
cmpsb
testb
or
push
fadd
roll
fs
cmpsb
dec
mov
daa
mov
push
mov
push
mov
test
mov
shrb
pop
mov
dec
adc
loop
arpl
mov
ds
fdivrs
std
adc
jle
sub
out
cld
scas
adc
aas
leave
cmp
int
dec
or
sub
mov
cmp
enter
aas
cmp
xchg
js
je
popa
aad
sub
mov
sub
push
cmp
push
xor
jl
fldl
loope
out
shlb
loopne
push
xor
pushl
out
xor
fmuls
or
push
clc
mov
loopne
out
sub
pop
mov
push
roll
mov
fidivs
inc
adc
adc
incb
adc
jne
push
sub
mov
or
add
inc
or
mov
andl
mov
adc
mov
dec
outsb
adc
dec
sbb
add
pop
bound
adcl
xor
jmp
or
mov
das
jo
push
lret
addr16
inc
cmp
xlat
stos
pop
loop
jo
push
mov
xchg
ljmp
pop
inc
push
inc
aam
xchg
xchg
cmpsb
in
dec
adc
xor
mov
sbb
ss
xor
stc
lcall
or
and
mov
out
jmp
sub
xchg
cmc
add
sti
inc
and
xabort
fwait
pusha
cld
jae
mov
dec
add
mov
outsl
mov
mov
out
test
test
pop
outsl
fcmovnb
and
and
and
cmpb
dec
sbbb
shll
mov
and
xchg
or
jnp
add
mov
jnp
push
inc
push
and
sub
mov
cli
xor
imul
inc
add
and
popf
aad
push
mov
push
jecxz
sbb
inc
insl
lcall
add
pop
jecxz
fs
clc
imul
pushf
pop
repnz
sub
push
dec
xchg
pop
jge
sub
mov
mov
sbb
stos
inc
stos
jp
cmp
push
inc
lds
jae
rolb
lock
cmp
mov
add
rolb
and
not
xchg
mov
xor
sbbb
clc
into
or
sub
loope
repz
jnp
loopne
loopne
or
fimuls
movsb
xchg
jbe
loopne
jns
mov
cmc
cmc
hlt
roll
xor
jmp
bound
repz
test
and
mov
sbb
lods
fadds
shl
and
mull
ret
vorps
aas
in
repnz
lret
fsts
lret
arpl
xorb
lea
daa
xor
sub
mov
arpl
jp
sub
add
pop
mov
pop
pop
aam
or
cmp
sbb
lds
sub
rol
lea
dec
sub
pop
out
cli
jle
aam
pop
in
add
adc
pop
pop
insb
and
inc
mov
mov
pop
in
rcll
mov
xchg
loop
inc
test
add
data16
inc
jecxz
lods
scas
mov
es
add
loopne
ret
cmp
adc
add
xlat
callw
mov
xor
pop
jl
pop
lcall
inc
out
jl
lods
stc
imul
or
pop
or
add
inc
dec
sbb
mov
mov
into
xchg
jno
push
pop
push
into
std
hlt
mov
push
rcrl
movsl
push
mov
dec
jmp
cmp
xor
xor
je
inc
ljmp
aad
leave
nop
pop
push
sbb
jo
lods
cs
and
add
pop
test
filds
out
push
xchg
sbb
add
sub
idivb
cmp
lcall
pop
pop
loope
lods
loope
cmp
push
jnp
pop
fisttpl
ret
scas
rolb
popa
xchg
jae
aas
jnp
add
jl
pop
inc
lcall
loope
mov
xor
mov
clc
dec
sbb
or
adc
mov
mov
mov
inc
stc
lods
xor
push
icebp
js
scas
inc
shrl
cld
movsl
pop
add
popa
jmp
imul
test
mul
cs
mov
mov
pop
add
jns
andb
mov
mov
xchg
daa
jp
mov
sub
mov
int3
cmc
pop
fwait
mov
mov
inc
loop
lods
sub
movb
push
test
jecxz
dec
cmpl
subb
call
xorl
das
sub
push
aas
add
xchg
bound
in
pusha
mov
sbb
mov
mov
pop
loop
jle
mov
shl
aad
in
enter
push
push
insl
add
outsb
and
daa
imul
bound
mov
lods
les
lcall
pusha
jl
mov
test
mov
push
rcrl
lock
mov
or
insl
mov
test
push
fnsave
jnp,pn
sub
adc
cmpsb
push
push
sub
push
add
das
push
shrl
jne
cs
test
lret
cmc
pop
dec
push
fwait
jno
scas
dec
sbb
or
jmp
cmp
int3
adcl
or
imul
mov
mov
fisubrs
xchg
mov
mov
sti
mov
ljmp
rcll
movsb
inc
pop
loopne
mov
sqrtps
outsb
xor
ds
pop
and
push
mov
xchg
cmpsl
in
sub
hlt
jecxz
les
add
and
mov
dec
fadds
aam
or
ss
and
jno
lock
pop
ja
and
out
addr16
lock
lock
jmp
int
jge
arpl
dec
jmp
push
shrb
lods
roll
nop
mov
shrl
mov
mov
pop
add
in
inc
lea
clc
push
mov
data16
pop
cmp
daa
cltd
inc
push
add
icebp
out
test
mov
adc
mov
loope
sbb
mov
testb
fdivrp
clc
in
inc
ss
jne
jno
cltd
les
xor
or
mov
jle
push
and
or
icebp
ds
call
mov
jg
icebp
mov
add
mov
cli
addps
mov
aaa
inc
test
aaa
ror
push
sahf
or
mov
pop
cmp
movsb
stos
imul
mov
inc
test
xchg
sti
in
fnstenv
or
loopne
fsubrs
sub
repz
mov
jle
cmp
xor
sarb
push
adc
aam
test
bound
push
loop
rcr
push
dec
ret
cmp
test
cs
fdivs
mov
shrb
arpl
mov
push
jge
sbb
jp
scas
mov
popf
xchg
bound
mov
aad
mov
push
movsl
jb
shlb
mov
push
repz
adc
cs
xor
fcompp
dec
sub
push
hlt
leave
mov
jmp
je
mov
mov
and
push
outsl
ja
je
add
cmp
outsb
ret
mov
add
out
pop
dec
push
fdivr
pop
jecxz
pop
addb
bnd
mov
lods
cs
ljmp
fisubs
mov
add
pop
push
mov
jne
or
adc
adc
into
std
outsb
hlt
xor
dec
push
arpl
adc
test
adc
and
es
add
rclb
mov
sbb
push
sub
pop
sub
in
pop
lods
ss
xchg
sbb
push
add
pop
ret
sub
cmp
mov
cli
mov
xchg
cli
push
pop
xor
lcall
mov
or
out
mov
ds
push
jp
mov
pop
mov
pop
cmp
and
enter
lods
mov
xlat
mov
hlt
add
and
cmp
aad
push
imul
mov
mov
add
pop
add
loopne
pop
push
loope
lods
test
push
pop
xor
ret
js
inc
lahf
fisttps
jp
lods
cmp
dec
mov
test
outsl
ljmp
test
repnz
mov
jl
popf
movsl
imul
sub
data16
std
cmp
stc
mov
xor
add
jle
mov
mov
sub
dec
dec
and
pop
inc
mov
ss
cwtl
mov
mov
or
jmp
ret
add
push
cltd
adc
gs
pop
push
and
sbb
xor
dec
loopne
push
fdivl
adc
pop
aam
sbb
aad
fwait
es
and
xor
insb
sti
icebp
addl
lods
pop
adc
js
aas
mov
pop
test
add
arpl
outsb
sbb
xchg
cli
jb
or
addb
push
inc
es
push
inc
add
push
aam
cli
fsubrs
xor
inc
sub
adc
clc
add
mov
mov
out
cmc
cmp
icebp
mov
sub
sti
vmread
mov
mov
adc
ds
xor
mov
insl
push
pop
sub
mov
jg
arpl
jae
push
fs
les
cs
inc
jg
mov
push
fmul
mov
mov
xchg
je
cmc
mov
mov
cmp
add
xchg
std
pop
sub
cltd
jecxz
push
fisubl
sbb
xchg
push
mov
mov
jle
push
mov
push
mov
pop
push
mov
fs
ret
dec
stos
loop
mov
or
jno
stos
fisubl
popa
add
dec
mov
sbbb
push
lock
sub
subb
jbe
inc
mov
cmp
rcrl
cld
orb
xchg
sub
je
popf
mov
push
loopne
les
mov
test
inc
leavew
jns
cmp
adc
call
pop
or
and
mov
dec
pop
adc
enter
or
pop
mov
out
pop
pop
icebp
jmp
ret
mov
mov
dec
lahf
and
fmuls
xchg
pop
sbb
pop
push
insb
call
dec
or
push
mov
push
dec
push
sti
xchg
lock
cmp
xor
and
xor
dec
jl
repnz
inc
mov
push
and
cli
mov
push
das
sahf
pop
cld
test
stos
cmpsb
aas
or
jl
loop
rorb
faddp
pop
stos
dec
xor
mov
push
aaa
stos
jle
loopne
pusha
xchg
nop
or
cld
sbb
cli
jbe
and
js
call
add
mov
scas
insl
mov
lcall
shlb
mov
addr16
shlb
dec
adc
pop
mov
add
in
pop
sub
pushf
jmp
movsb
add
dec
mov
pop
icebp
xchg
cmpsb
pop
sbb
fdivs
add
push
mov
test
sbb
ja
testl
mov
fs
lock
jmp
adcb
adc
loopne
paddusw
cmc
or
xchg
mov
and
or
sbb
ret
bound
sbb
nop
test
loope
fiaddl
cwtl
mov
adc
pusha
stos
dec
jno
jne
jb
sar
push
jmp
mov
mov
aaa
in
addr16
push
xlat
rol
rcl
insb
mov
adc
in
inc
mov
insl
mov
add
testl
lds
inc
or
jmp
sub
shrl
pop
cmp
adc
jne
test
pop
mov
orl
fcmovnb
mov
xor
add
xchg
cld
xchg
mov
sahf
adc
lcall
cli
dec
andb
in
icebp
in
outsl
jae
mov
and
repnz
mov
mov
cmp
inc
or
sbb
test
mov
mov
cmp
mov
popf
or
sub
jp
dec
aad
stos
int
lcall
jmp
lcall
les
fs
pop
push
lock
in
data16
jb
loope
mov
inc
lock
out
adc
pop
into
inc
jnp
mov
out
sahf
xchg
sub
data16
mov
data16
sub
in
push
in
cwtl
test
mov
xor
enter
aas
xchg
push
or
sub
int3
iret
dec
fcom
jne
push
dec
ret
movsb
push
ret
inc
stos
lds
jne
add
lret
sbb
push
mov
pop
mov
cmp
adc
mov
lret
mov
ds
sahf
push
cs
movsl
lahf
sbb
lods
lds
or
cmp
cmp
mov
add
ja
cwtl
pop
lret
add
pop
leave
pop
cmp
sahf
cltd
insl
in
loope
lret
mov
sbbb
imul
cld
lcall
dec
std
mov
dec
push
or
daa
fldl
push
jecxz
xchg
addb
or
adc
push
push
pusha
pop
inc
lea
pop
hlt
push
mov
sub
inc
insl
inc
out
shl
sbb
xor
cmp
cmpsb
int3
fcmovne
je
fcmovnbe
stos
sahf
jecxz
push
push
cmp
out
test
xchg
ss
inc
cmp
cld
jp
fimull
add
or
push
xor
mov
mov
push
and
inc
pop
sbb
sub
outsb
mov
sahf
xorl
je
ret
ret
add
xor
ds
push
rolb
xchg
xor
nop
inc
or
xchg
and
pop
pop
icebp
into
pop
mov
and
mov
or
shl
add
scas
sbb
xchg
enter
xchg
jge
js
xlat
xor
loopne,pt
xchg
out
push
inc
push
and
xchg
sub
mov
xor
pop
sti
sub
push
and
add
mov
enter
or
ljmp
shl
xchg
xchg
cli
sbb
leave
aas
xor
paddb
test
xor
rcr
or
test
inc
cmc
xlat
mov
sarl
or
or
cmpsl
mov
call
outsb
loop
cwtl
push
add
addr16
sbb
pushf
mov
sub
lods
pusha
inc
and
out
fisttpl
mov
sbbb
sub
add
sbb
add
in
sub
dec
pushf
outsl
or
jge
insl
mov
cli
imul
dec
lahf
push
xchg
inc
add
mov
mov
and
fisttpll
js
fstpt
pushf
aam
cmp
sbb
out
sub
mov
xlat
or
push
inc
es
loopne
add
cs
pop
shlb
push
popa
cmp
out
push
fwait
pop
mov
out
or
adc
xor
cli
mov
fisubs
add
fisttps
fldt
pop
dec
aas
sbb
jbe
push
sti
add
sub
loope
cmp
mov
jb
out
mov
loop
in
test
pop
int3
aad
sub
xor
xor
jmp
sarb
mov
into
lock
and
dec
mov
test
jb
fiadds
shlb
cli
enter
std
pop
andb
aam
xchg
xchg
je
ds
mov
mov
scas
ftst
mov
add
imul
push
inc
jmp
mov
mov
jecxz
cwtl
ret
inc
push
sub
enter
jo
nop
xor
iret
test
mov
cmc
mov
mov
pushf
lcall
xchg
les
aad
and
inc
outsl
das
cli
ret
idivb
or
imul
sbb
cmc
lock
imul
pop
sbb
mov
scas
push
fists
jbe
mov
popa
test
sub
jno
test
xchg
push
inc
out
loope
dec
icebp
pop
xchg
sbb
ret
cmp
sub
scas
mov
adc
pop
jmp
jb
insl
roll
pop
mov
add
cmp
hlt
ret
sub
sbb
std
outsw
cmp
sbb
jb
test
rorb
dec
insb
shll
pusha
mov
clc
movsb
and
fsubl
jmp
sbb
rcl
mov
add
and
sbb
sbb
std
pop
jp
jo
add
mov
shrl
xor
mov
dec
scas
inc
xor
dec
lock
lcall
xor
ss
adc
cmp
cwtl
sbb
mov
add
mov
call
addb
sbb
mov
rclb
mov
test
loope
jecxz
pop
adc
dec
or
sbb
imul
cmp
cmpsb
scas
and
mov
pop
pop
test
sarl
flds
shll
in
inc
xchg
rorl
shl
aam
and
rolb
pushf
xchg
sbb
js
jb
add
insl
pop
in
push
add
fdivp
jno
mov
and
loop
jo
push
mov
sbb
arpl
dec
inc
bound
cli
idivl
sbb
out
push
daa
mov
addr16
fstpt
add
insb
or
pop
out
sbb
lock
adc
test
lret
push
int
add
fisubl
arpl
mov
inc
push
push
xor
jge
or
pop
jl
in
xchg
jns
or
push
fwait
push
mov
sub
cmp
cs
mov
or
jo
dec
dec
mov
movb
mov
stc
mov
mov
ret
mov
ret
mov
push
inc
lret
insb
je
mov
lods
add
sbb
cmpsb
mov
mov
push
xchg
aad
mov
sbb
ret
jg
jae
in
cmpsb
push
add
aam
into
and
aam
popa
dec
add
or
cmpsl
push
jno
ret
fimull
jno
or
nop
mov
stc
sbb
subb
ljmp
mov
mov
sarb
cmp
mov
mov
ljmp
cltd
scas
insb
out
pushf
fidivrs
xor
mov
xorb
sbb
pushf
mov
movsl
fdivrl
mov
lds
arpl
loop
mov
insl
jge
jp
mov
je
mov
xchg
mov
or
test
xchg
adc
js
mov
push
dec
insb
push
add
inc
sbb
je
loopne
into
dec
js
mov
sahf
jle
pop
sbb
adc
rorl
mov
sub
add
and
xchg
loope
sbb
cmp
xchg
iret
hlt
inc
pushf
test
pop
pop
scas
xchg
jp
rcl
inc
push
mov
push
sbb
sub
xchg
lds
adc
jp
add
and
inc
sbb
cmp
nop
inc
pop
lods
mov
jno
lcall
flds
xchg
add
sub
mov
add
mov
jb
int3
pop
or
jo
dec
ja
rcrl
cmpsl
mov
or
sbb
inc
jl,pn
adc
jbe
dec
fnop
arpl
mov
mov
push
test
xor
inc
push
es
pusha
pop
imul
mov
inc
outsb
lret
dec
xchg
mov
iret
scas
cs
test
js
pop
das
cmpsl
inc
mov
insb
mov
inc
inc
test
call
aam
inc
rorb
loopne
ret
scas
iret
push
sub
push
sub
scas
aam
jecxz
mov
add
or
fcoml
sti
rcrb
push
jp
mov
repnz
xor
rcrb
push
in
test
jne
movsb
mov
rorl
call
clc
xchg
xor
mov
cs
out
loop
lcall
dec
lock
pusha
ret
push
adcl
ret
inc
fstpt
pusha
pop
inc
adc
test
add
repz
push
push
dec
imul
sarb
add
idivl
adc
mov
insl
push
in
sbb
imul
outsl
arpl
outsb
add
or
insb
adc
cld
int3
insb
jbe
enterw
mov
adc
fidivrl
mov
sbb
out
dec
xor
cwtl
pop
subb
inc
scas
xchg
jbe
xor
or
outsl
push
mov
push
inc
xor
jle
sub
push
add
outsl
insb
jo
scas
lahf
rcrl
inc
adc
ja
pop
lea
cmp
sbb
inc
ljmp
sbb
lret
mov
shll
add
cs
repnz
mov
aaa
jno
loopne
sbb
test
les
jae
mov
bound
or
xchg
dec
xor
mov
std
cli
push
push
inc
mov
sub
gs
test
pop
jne
sub
mov
pop
jno
fistps
push
push
rorb
jecxz
mov
rcrb
jo
xchg
pop
mov
xchg
mov
push
lds
movsl
lret
orb
and
adc
push
sbb
pop
js
jnp
push
xor
jo
inc
xor
pop
pushf
sbb
es
push
ds
outsb
mov
in
push
shr
aaa
gs
pop
jno
sub
hlt
mov
sub
fmuls
xchg
rorb
mov
inc
stos
das
cmp
inc
push
jns
push
cmp
test
jno
and
jmp
adc
scas
test
push
ljmp
or
and
fcmovnbe
shr
inc
push
jnp
ficompl
add
movl
fstps
call
pusha
cmp
mov
pop
sub
out
insl
addl
insb
push
aam
or
cld
imul
or
cmpsb
mov
cmc
scas
mov
out
mov
cltd
jle
dec
push
js
aam
fwait
dec
pusha
mull
cmpsb
rcrb
dec
mov
rclb
cmpsl
sti
push
int
or
and
mov
and
inc
or
sub
jmp
pushf
hlt
sbb
inc
ljmp
test
sbb
lea
xor
add
sub
enter
cmpsb
aad
or
xchg
or
sub
lret
xor
arpl
mov
mov
mov
jb
daa
pop
movsb
mov
inc
aad
icebp
insl
js
insl
loope
and
int3
push
movsl
aaa
cmp
adc
xchg
inc
xorl
rcl
mov
pusha
shl
jle
mov
fnstsw
insl
clc
popf
ljmp
sbb
aaa
add
call
lods
push
dec
mov
je
test
sbb
cmp
movsl
or
dec
push
push
cmp
lcall
insl
iret
cmp
mov
xchg
sbb
xchg
testb
xchg
and
inc
stc
sub
mov
xchg
and
push
sbb
orb
adc
cmp
scas
lock
imul
cli
int
mov
pop
insl
mov
cli
cmp
pusha
cld
in
add
shll
push
fsts
ljmp
inc
popf
and
or
mov
or
fsubl
sub
dec
subl
xchg
lock
je
or
dec
jnp
repz
scas
xchg
add
lahf
add
insl
mov
pop
dec
mov
mov
rolb
ja
mov
mov
xchg
and
mov
push
sbb
int
add
cli
into
adc
lock
mov
dec
repz
aas
lcall
mov
pop
rcll
lea
dec
adc
aaa
adc
ds
pop
adc
mov
cwtl
dec
out
jl
rcrb
lods
daa
push
fucomi
add
pop
and
fistpl
cs
cwtl
or
cli
nop
daa
cmp
mov
inc
in
or
loopne
lock
je
sbbb
push
cld
jmp
test
mov
pop
std
pop
push
pop
jb
push
cmpsl
pushf
and
popf
mov
jae
mov
mov
lea
mov
das
sbb
mov
xlat
push
scas
pusha
jecxz
outsb
repz
or
dec
mov
adc
inc
cs
mov
lret
push
dec
cmp
jo
sbb
adc
cmp
add
inc
repnz
fs
add
imul
add
test
or
movsb
cmp
or
pop
imul
inc
push
mov
mov
sar
pusha
cs
scas
sub
dec
jne
fdivl
shlb
push
add
xor
inc
clc
jmp
mov
es
call
lock
sbbl
je
add
xchg
jecxz
inc
pop
sbb
popf
inc
loope
insl
aad
pop
mov
mov
xchg
push
and
push
pop
or
std
mov
adc
and
fbld
insl
sub
push
lcall
mov
lods
push
rcl
mov
pushf
pop
sub
pop
or
mov
inc
enter
and
insl
xchg
and
js
cmp
fwait
into
test
mov
fiaddl
jbe
test
xchg
popa
mov
inc
inc
and
add
scas
xor
mov
rcl
jno
in
or
outsb
ficompl
das
push
jge
ret
ja
jbe
mov
add
dec
fldcw
mov
call
cs
sti
dec
mov
mov
adc
int
mov
jecxz
arpl
clc
test
dec
jle
data16
sbb
add
fmuls
lret
dec
xchg
int3
add
in
ret
nop
inc
adc
mov
ja
sbb
js
mov
mov
xor
dec
xchg
jo
ss
loope
fbstp
adc
shll
dec
jg
jmp
cmpsb
and
xchg
pop
or
cmp
fcoml
lahf
das
sbb
xchg
fcmovbe
pop
or
int3
pop
or
rolb
xchg
arpl
push
fimull
pusha
add
lods
xor
sbb
call
shl
inc
addr16
cmp
inc
or
xchg
cwtl
jno
fcoml
mov
mov
mov
xchg
mov
push
mov
ss
fistl
adc
pop
cmp
call
mov
test
mov
in
and
daa
cmp
int
push
and
aad
mov
mov
mov
adc
lcall
add
push
lret
fwait
add
dec
mov
sbb
pusha
sub
rolb
mov
lock
adc
lret
mov
push
out
xor
nop
cmp
inc
sbbb
mov
adc
in
test
cmc
pop
lock
xor
add
aam
pop
sarl
mov
jg
sbb
int
sbb
ljmp
mov
xor
decl
mov
jbe
les
jnp
push
xor
popa
pop
outsl
je
in
imul
cmp
popa
in
push
lahf
mov
pop
ja
shl
sub
pop
sbb
pushf
clc
les
mov
mov
add
aaa
push
xor
pop
fcoml
sbb
roll
jbe
add
insb
xor
notl
sarl
push
xchg
cmp
aad
cmp
jle
pop
decl
pop
lcall
cmp
pop
dec
sub
jb
cmpsb
lods
lcall
and
test
jns
push
pusha
leave
and
push
mov
mov
jne
and
jg
or
popa
sbb
push
sbbb
mov
mov
add
lds
push
cmp
jle
ljmp
imul
adc
xchg
popf
or
scas
xchg
jecxz
cmc
stos
sahf
nop
aaa
test
stos
test
inc
sbb
andb
pusha
xlat
dec
inc
adc
jnp
orl
sub
ljmp
jecxz
icebp
or
jbe
jl
sbb
dec
fdivl
add
xchg
jbe
jns
ljmp
js
mov
mov
fnsave
sbb
dec
xor
imul
add
int3
in
push
sub
loopne
xor
mov
test
cmpsb
sbb
scas
popf
ljmp
mov
lret
and
mov
aam
and
sahf
cld
sub
mov
mov
mulb
or
add
cmp
cmp
jmp
ljmp
push
out
inc
loopne
xor
dec
jl
lock
loop
addl
fbld
pop
in
xchg
push
mov
aam
pusha
sub
jne
shlb
test
std
lret
jnp
subb
imul
jb
lret
int3
and
mov
mov
mov
bound
into
add
stos
mov
inc
jp
adc
test
popl
push
fmul
into
bound
inc
je
cwtl
add
mov
mov
push
loope
adc
ds
test
lcall
dec
cwtl
push
pusha
aaa
mov
andb
add
jno
push
mov
push
loop
daa
inc
out
movb
js
mov
cwtl
les
adc
jae
jns
fcmovbe
aam
sub
js
ljmp
xor
push
mov
dec
aaa
inc
dec
jl
lock
add
rorb
add
scas
pop
insl
and
fsubrs
call
inc
mov
arpl
xor
rorl
or
shlb
mov
jle
adc
sbb
int
push
int3
sub
inc
pop
clc
jbe
sti
pop
ss
jmp
mov
inc
xchg
out
enter
lret
xchg
outsb
ds
insb
call
and
jmp
or
dec
sbb
clc
push
jmp
fisttpll
xchg
rclb
js
movsb
lcall
mov
rol
es
jo
das
push
or
dec
inc
cld
jno
or
loope
and
pop
lea
xadd
movl
xor
andl
jmp
sbb
adc
add
adc
pushf
adc
scas
xlat
fdivl
mull
push
sarb
enter
dec
and
pop
xlat
push
dec
in
push
jl
bound
push
and
negb
add
mov
sub
andb
or
push
mov
lret
cmp
cmp
xor
sti
dec
inc
dec
pop
mov
mov
cld
out
sbb
fstl
repnz
push
xor
mov
pop
sti
push
lea
bound
sbb
jecxz
lcall
stos
mov
mov
xchg
out
shr
fs
movsl
adc
adcl
cmp
xchg
jo
dec
imul
push
mov
fs
clc
cmp
push
fsubrs
int3
aam
xlat
sahf
or
and
stos
stos
scas
mov
and
enter
scas
movsb
scas
pop
fs
cli
jne
mov
bound
mov
pop
pop
aam
hlt
stos
lods
cmpsb
or
or
and
pop
sub
ds
xchg
mov
xor
cmp
in
shl
inc
das
jl
dec
ds
sub
movsl
mov
jl
shlb
jno
pop
dec
add
stos
sbb
out
fiaddl
inc
test
add
mov
xor
sbb
test
push
lcall
cmp
and
shlb
push
pop
mov
rorb
mov
cmp
jo
mov
pop
lret
mov
loop
inc
sub
shl
jmp
add
adc
subb
call
stc
add
out
or
mov
or
in
dec
mov
inc
mov
rcl
mov
push
mov
pushf
sti
add
pop
fst
add
push
call
sbb
clc
loopne
jb
cmp
rcll
movb
cmp
add
xor
xchg
jle
or
mov
lock
sarl
push
std
movd
stos
xchg
xchg
add
mov
movsl
jecxz
jl
es
pusha
out
pop
test
xor
xor
and
xchg
js
adc
cmpsb
sub
mov
repnz
in
inc
test
jp
sbb
scas
mov
nop
pop
and
sbb
dec
loop
rorb
je
sbb
jbe
ret
or
ficoms
ret
popa
mov
add
in
adc
push
sbb
or
iret
mov
sub
bound
rclb
push
insl
xchg
mov
mov
fcoms
sbbb
movb
outsl
jo
pop
sbb
shl
xchg
adcb
bound
ds
cmpsb
mov
jb
jno
orb
jg
cmp
jge
insb
dec
mov
arpl
add
mov
pushf
jl
xor
jne
add
mov
js
mov
testb
lahf
mov
mov
inc
push
repz
inc
xchg
push
sbb
mov
int3
push
adcb
leave
add
mov
cmc
pop
scas
sbb
jno
das
and
jbe
movsl
push
call
aam
dec
mov
push
xchg
scas
push
stos
push
lret
sbb
push
xchg
pop
ja
add
cmc
push
test
pop
dec
xchg
push
and
push
xlat
xor
test
add
xor
outsl
xchg
sub
mov
cmp
aas
es
inc
add
xor
pusha
xchg
mov
mov
rolb
dec
xchg
js
push
inc
adc
das
mov
fcomip
or
mov
lods
sub
mov
clc
das
mov
add
xchg
mov
in
clc
jo
cli
inc
cmp
inc
dec
stos
fimuls
sub
add
mov
dec
xchg
enter
test
pushf
movsb
or
mov
mov
js
mov
mov
insl
adc
fdivr
cmp
jp
push
jnp
add
mov
xor
js
enter
scas
pop
in
adc
jle
scas
cmp
cmc
add
jae
imul
xlat
shrl
sbbb
add
push
movsb
push
mov
negb
test
repnz
cld
push
nop
xchg
loope
pushl
orb
popa
and
lcall
inc
rorb
inc
jo
dec
mov
sub
test
cmp
push
clc
push
pop
jae
lcall
jne
test
push
popf
xchg
mov
mov
inc
jb
xchg
jle
or
mov
inc
push
mov
jmp
adc
push
test
sbb
leave
ds
cmpsb
arpl
mov
inc
pop
insl
and
cli
pop
jl
ds
lds
cmp
push
fisubrl
icebp
call
out
js
add
sub
add
adc
loope
mov
mov
push
push
add
ljmp
adc
neg
std
iret
dec
inc
pop
mov
sub
loopne
push
cmpsl
sub
test
scas
scas
jne
add
xor
andb
add
sub
fsts
cmp
cmp
ja
xchg
pop
sti
pop
adc
sbb
lret
ret
fcom
xchg
push
inc
sub
mov
xor
dec
ja
push
aam
dec
bound
fadds
daa
xchg
sbb
push
aad
rcll
dec
in
and
and
movsb
adc
sbb
mov
gs
in
cmp
loope
int3
ret
enter
imul
loope
pop
pushl
shr
insb
daa
sbb
cmp
insb
rcrb
dec
mov
in
fsubs
jg
add
scas
mov
jge
fs
scas
xchg
cmp
int3
adc
push
cwtl
pop
pop
bound
inc
enter
cmp
pushf
cmp
mov
dec
imul
mov
xor
pop
inc
rorl
adc
mov
clc
add
jmp
aam
pushf
jne
sahf
adc
cli
dec
dec
push
lea
js
sub
dec
add
adc
xchg
adc
mov
out
sbb
push
adc
xor
lahf
pop
inc
inc
xor
ss
and
dec
pusha
sbb
in
xchg
shlb
fcoml
mov
xlat
mov
test
jl
cwtl
dec
push
adc
mov
jge
add
xchg
jb
test
nop
mov
mov
ds
xchg
jl
and
adc
push
ljmp
lcall
mov
sub
or
and
shlb
loopne
loop
outsl
push
push
dec
or
popf
movsb
loope
arpl
mov
sar
sbb
xchg
icebp
sahf
test
add
cmp
es
xchg
stos
xor
pushf
fcoml
test
mov
bound
adc
stos
fildl
std
fdiv
pop
roll
cmpsb
dec
push
rcll
mov
lds
add
mov
xchg
push
enter
add
fcomps
fcmovnb
es
inc
fisubrl
push
cwtl
repnz
push
xchg
and
or
mov
stc
xorl
data16
xlat
inc
inc
add
pop
lods
jb
ja
je
enter
pop
pop
push
xor
popa
mov
clc
sub
adc
push
push
add
dec
test
xor
ret
jbe
in
pusha
and
sbb
mov
xchg
dec
leave
aam
mov
clc
add
mov
sbb
pop
sub
sub
adc
js
jne
add
loop
mov
neg
stos
lahf
mov
insb
cmp
push
jne
jo
lea
and
jo
mov
and
cs
test
sub
add
inc
enter
lds
stos
cli
outsl
sbb
xchg
dec
lds
cmp
push
adc
insl
mov
fsubr
ljmp
jp
in
add
add
adc
add
adc
xchg
inc
je
lds
outsl
insb
push
cmpsb
pop
mov
pop
das
cmp
lret
add
pop
ret
sub
xchg
mov
ja
mov
push
push
add
imul
and
xor
pop
imul
mov
rorb
sub
jl
and
xchg
xlat
push
cmpsl
or
dec
push
ss
adc
rclb
movsb
ret
into
subl
bound
mov
xchg
int3
push
je
pushf
enter
sbb
push
inc
outsb
test
push
test
int3
mov
cld
adc
push
jno
ja
push
stos
lock
out
dec
mov
aam
in
add
aam
add
add
sbb
sbb
ficoms
mov
mov
push
clc
mov
rcll
nop
and
xchg
xchg
outsb
loop
push
cmc
sub
cli
mov
insb
test
and
in
adcb
sub
mov
push
xor
rorl
test
add
mov
jb
mov
or
lock
add
lret
xlat
inc
jae
push
add
fldenv
pop
cmp
inc
pop
push
mov
cmp
add
loop
fxch
push
cli
clc
push
jl
into
mov
push
sub
and
insb
sub
imul
dec
and
mov
push
mov
shlb
stos
fsts
ror
stos
push
mov
jmp
mov
jl
mov
pop
popf
icebp
xor
pop
dec
andl
jl
nop
add
out
outsl
xor
sub
pop
mov
push
insb
mov
mov
ficompl
cli
clc
dec
js
sbb
aas
sub
idivb
inc
mov
pop
jp
jge
add
js
push
ljmp
dec
xor
inc
test
lods
inc
fwait
and
or
subb
adc
jecxz
adc
jbe
and
test
xchg
pop
std
push
add
or
ds
sahf
dec
loopne
cli
push
arpl
std
je
sbb
cmpsl
mov
stc
inc
and
sbb
pop
inc
clc
cli
hlt
repnz
push
jg
mov
outsb
int3
push
stos
adc
mov
aad
pusha
mov
or
mov
adcb
aas
fidivl
and
ficompl
cltd
call
stc
and
lods
mov
data16
subl
pushf
not
lods
sbb
inc
popf
std
inc
dec
outsl
xchg
push
mov
pop
sbb
xchg
hlt
pop
iret
cld
mov
adc
sub
enter
fisubl
and
lahf
inc
bound
xor
lods
call
push
pushf
or
js
orl
xchg
lods
roll
gs
dec
mov
loop
xor
sbb
or
mov
ss
sarb
lea
or
aas
mov
ret
add
clc
jl
push
icebp
ljmp
or
add
scas
xchg
adc
lcall
pop
pusha
icebp
enter
mov
daa
xor
or
daa
mov
ud0
lods
das
sti
add
insb
outsb
jmp
xor
xchg
loope
mov
enter
add
jno
test
js
or
les
imul
sar
mov
add
push
xchg
cmp
movsb
cltd
nop
jb
popa
decl
push
xor
xchg
outsl
ljmp
jp
std
stos
jbe
push
jnp
sub
cltd
insb
rolb
inc
dec
sbb
xor
fxtract
mov
fsub
add
push
enter
rolb
sub
jp
and
movsl
sbb
std
outsl
das
cmpsl
xchg
dec
sbb
adc
roll
int3
jmp
into
test
jecxz
inc
mov
dec
int3
je
mov
rolb
mov
mov
xchg
xchg
out
sarb
pop
fdivp
cwtl
test
xor
pop
test
arpl
mov
sbb
sbb
inc
jno
or
add
cwtl
push
mov
lret
jecxz
dec
pop
dec
lods
jmp
adc
jnp
jg
ds
adc
shll
mov
fimull
in
lods
cmp
call
dec
out
jl
sbb
roll
movsl
cld
and
lds
loop
xchg
xchg
dec
mov
xchg
ljmp
inc
jmp
mov
enter
push
test
adcl
push
cmpsl
sahf
push
es
ljmp
xor
mov
scas
call
cld
sbb
xor
cmp
pusha
mov
pop
jp
es
outsb
adc
sbb
movsb
mov
jecxz
xchg
cmp
push
scas
push
pop
divb
jb
xor
int3
mov
inc
adc
rorl
pop
psllw
sbb
fldcw
pop
xor
ret
inc
fs
scas
push
insb
lock
push
fimull
nop
ja
cmp
dec
xchg
jp
sahf
frstor
mov
dec
inc
cmp
adcl
adc
and
icebp
sbb
pop
cld
loope
cmp
out
mov
ret
add
pop
jecxz
xor
jbe
hlt
push
mov
in
lea
repnz
add
fsubr
and
add
xchg
adc
lea
pushf
xor
push
in
xchg
add
mov
das
xor
cmp
mov
out
movsb
outsl
inc
dec
and
icebp
ror
sbb
outsl
add
jmp
jmp
add
add
mov
popf
das
push
mov
lcall
cmpsb
sbb
rol
and
pop
xor
addb
jns
cmpl
or
rcll
push
push
xor
stc
sub
and
into
mov
ret
test
mov
xchg
and
clc
cmpsl
xchg
inc
int
out
jmp
int3
nop
mov
scas
adc
subl
inc
les
xchg
xor
daa
das
scas
inc
pop
jnp
ss
les
imul
shlb
xor
es
daa
inc
sbb
leave
xor
add
sub
cmp
mov
addr16
mov
ja
sbb
add
pop
fistps
stos
push
inc
pop
rcrb
jl
adc
imul
imul
push
sub
fsubrl
or
mov
mov
insb
xor
cltd
adc
cmp
xchg
movsb
dec
pop
ret
push
jmp
hlt
lcall
int3
xchg
iret
push
inc
je
int
pop
sub
pop
sbb
in
bound
lret
xlat
fwait
shll
pop
ret
adc
pop
icebp
add
inc
dec
adc
pop
movsb
in
ss
movsl
daa
data16
sbb
inc
sbb
or
int3
pop
mov
out
adc
mov
andl
and
cmp
mov
sbb
xchg
or
dec
out
aad
pop
inc
xor
out
popa
ds
and
or
adc
insl
add
push
mov
cs
daa
push
jl
idivb
imull
or
pop
adc
xchg
mov
pop
jbe
add
cmp
dec
cltd
cmpsb
jo
pop
adc
pop
ror
push
gs
cmp
jbe
aas
mov
xchg
ljmp
vpor
imul
mov
and
pop
pop
inc
sbb
loop
mov
cwtl
lock
subb
cmc
mov
rorl
mov
shrb
push
dec
call
adc
add
sbb
sub
push
sub
mov
mov
sbb
add
adc
enter
call
subl
sbb
leave
inc
mov
fldln2
enter
push
fstpl
push
stos
xchg
xor
cmpsl
xchg
sbb
imul
xchg
jmp
js
cmp
mov
ret
jno
mov
mov
jecxz
xor
mov
mov
dec
mov
scas
fcmovu
push
shl
outsb
shl
adc
xchg
mov
int
std
mov
cmpsl
shlb
pop
inc
outsb
cli
call
or
lret
add
xlat
mov
inc
bound
lea
sub
je
popa
add
popa
xchg
add
incl
push
inc
cmc
inc
mov
cli
push
and
jg
jo
scas
jbe
pop
repz
rcrb
test
scas
repz
aad
xchg
scas
jno
scas
add
jne
or
cs
push
pop
push
rcrb
push
mov
ret
push
sbb
sbb
rcll
dec
cli
js
je
in
sbb
cmpsb
pop
ret
xor
fcomps
push
lods
jge
out
add
icebp
add
das
add
ss
push
dec
arpl
mov
in
mov
lods
sahf
adc
push
cwtl
sbb
addr16
divl
cmp
xor
movsb
scas
and
bsf
pop
lret
ja
xlat
xchg
add
pop
pop
mov
and
mov
bswap
xor
lods
or
sub
or
jmp
or
adcb
adc
mov
popa
xor
jmp
adc
mov
push
jns
sub
lret
pop
add
sub
mov
cmp
xchg
push
mov
scas
jns
dec
lea
call
je
sub
sub
lahf
lds
jo
mov
fimull
inc
push
pop
loope
cltd
icebp
ss
mov
lock
inc
pushf
mov
sbb
mov
xchg
shlb
inc
out
adc
movsl
call
jmp
mov
xor
sbbl
dec
sbb
xor
pop
sbb
pop
jecxz
xchg
mov
movl
xlat
or
mov
aad
insb
xchg
or
pop
push
mov
rcrl
dec
or
repz
loope
push
test
loope
mov
outsb
inc
lods
or
sub
pop
enter
shrl
jmp
out
fcompl
push
cmpsb
push
sbb
pop
add
or
pop
mov
inc
movups
pop
push
loop
add
popf
outsl
in
mul
nop
xchg
dec
lret
pop
stos
cmp
inc
in
adc
stos
dec
mov
or
pop
cmp
nop
inc
and
add
xor
jnp
dec
test
sub
mov
mov
mov
ret
cmc
aaa
or
inc
mov
xchg
push
loope
push
adc
lcall
outsb
push
lock
add
icebp
jecxz
dec
adc
cmpb
and
aaa
cmp
mov
iret
pusha
cs
imul
addr16
add
jo
mov
mov
sbb
jmp
adc
daa
or
icebp
insl
lahf
sbb
shlb
roll
leave
xor
pop
mov
pop
lods
les
inc
or
and
mov
push
int
jbe
inc
inc
dec
sub
sub
lock
sub
inc
mov
mov
fucomip
add
push
adc
xchg
cld
adc
inc
lods
mov
push
mov
adc
lahf
mov
xchg
sbb
dec
sub
rorb
sub
adc
xchg
stc
mov
icebp
hlt
movsl
loop
arpl
in
icebp
int
jb
mov
popf
cli
dec
aam
mov
add
add
jns
push
pop
fildl
test
nop
movsb
push
sbb
mov
insb
dec
mov
push
sbb
test
pop
cmp
xor
ljmp
or
mov
lds
lcall
xor
notl
shrb
xor
mov
inc
sbb
mov
movsb
xor
aas
dec
and
xchg
xor
mov
dec
fadds
mov
sub
insl
in
loopne
mov
or
inc
mov
popf
push
add
xchg
inc
addl
adc
call
subl
sbb
inc
mov
test
fildl
mov
xor
and
lea
dec
dec
and
out
into
and
dec
movsl
rorb
jle
shll
pop
mov
push
xor
dec
cmpsl
inc
clc
cmp
test
push
add
cmp
mov
sahf
xchg
or
adc
pop
xor
ret
or
fcoms
nop
gs
mov
ret
or
ret
inc
test
stc
cltd
mov
int3
adcl
adc
cs
mov
and
or
cmpsb
dec
leave
jno
inc
xor
dec
loopne
pop
jg
sbb
jnp
pop
aad
and
ror
inc
stc
mov
aaa
mov
decl
jb
inc
push
xor
cltd
int
int3
mov
and
shl
sub
repnz
inc
inc
jo
lcall
arpl
pop
xlat
lahf
pop
icebp
pop
jno
roll
adc
mov
mov
add
sbb
and
pop
adc
lret
and
xor
mov
adc
push
aaa
adc
push
jmp
sub
or
stc
xchg
cwtl
pop
cmp
call
cmp
leave
jns
mov
xchg
test
jb
mov
mov
add
imul
xlat
inc
mov
gs
rorl
imul
arpl
call
mov
xchg
fmulp
xchg
aad
icebp
int
and
arpl
outsb
xchg
or
pop
push
out
sub
dec
jge
add
sub
popl
or
xchg
add
jg
ja
rol
push
pusha
fists
scas
add
movsl
outsb
add
lret
test
test
lock
jb
aaa
pop
inc
mov
add
push
fwait
andl
lcall
or
push
and
mov
nop
jmp
or
pop
iret
and
jb
pop
mov
xchg
popa
pop
mov
inc
hlt
push
mov
sbb
push
orb
dec
xchg
lds
adc
xorb
jne
inc
lahf
or
stos
push
cmp
inc
pop
jp
push
movsb
cmc
mov
cmp
sbb
imulb
add
dec
imul
and
dec
lods
mov
fadd
lcall
push
ljmp
ret
lds
fsubrl
daa
imul
sbb
test
inc
pushf
adc
sti
inc
or
scas
jno
andl
mov
sub
shlb
mov
push
mov
hlt
adc
or
int3
add
pusha
cltd
jge
pop
adc
inc
shll
mov
mov
mov
add
adc
cmp
cmp
jne
push
dec
push
or
out
test
or
jne
into
fistps
aas
ret
push
std
shl
dec
sub
add
mov
rcrb
lods
mov
loopne
mov
aam
xor
out
mov
or
and
push
jle
push
jae
in
loop
je
push
sbb
idivl
scas
sub
push
xchg
cwtl
inc
push
push
push
push
mov
rclb
test
sub
jmp
mov
int
fidivrl
sbb
add
in
xor
add
dec
inc
dec
inc
mov
xor
js
dec
icebp
and
sbb
loope
push
stos
push
in
mov
inc
insb
sar
cmp
push
pusha
repz
mov
add
jno
ret
pop
xchg
repz
lahf
imul
jmp
or
and
cmp
dec
sub
mov
xchg
paddusw
repnz
sarl
rcr
ret
cltd
sub
sub
int
mov
repz
nop
stc
jecxz
mov
mov
sbb
dec
adc
das
mov
nop
cmpsb
xchg
push
into
stos
mov
shl
popa
scas
scas
mov
adc
sbb
mov
push
stos
cwtl
shlb
loop
and
add
montmul
cmpsb
inc
pop
push
test
test
mov
in
and
stos
ret
inc
cmp
pop
cmp
push
stc
js
mov
es
in
idivl
jb
pop
mov
push
cmp
imul
aaa
mov
pop
push
popf
fwait
pop
movsb
push
mov
pusha
sbb
hlt
and
out
sbb
sub
jo
mov
bound
mov
mov
scas
pop
aaa
inc
clc
inc
rcl
mul
sub
lret
aam
stos
xchg
lods
cmp
mov
cmpsl
adc
stos
and
jcxz
imul
mov
xchg
inc
dec
sub
add
loopne
pop
adc
jo
xor
inc
pop
jnp
pop
xchg
cs
dec
roll
sub
add
sub
stos
sub
or
minps
adc
lods
std
mov
mov
add
sbb
and
std
shlb
pop
cmpsb
into
inc
enter
cwtl
dec
sbb
xorb
or
push
jl,pn
lds
repnz
ret
push
shlb
mov
cli
ret
pop
dec
xchg
mov
push
test
or
lea
sbb
and
push
pop
ficoml
arpl
mov
push
inc
inc
fidivrs
jns
arpl
adc
scas
jg
ss
add
sub
sub
jl
adc
cmp
mov
in
pop
jge
pop
repnz
daa
inc
mov
inc
int
push
adc
mov
les
rcl
andl
ret
lods
in
or
mov
inc
outsl
test
imul
mov
or
out
shl
loopne
mov
or
sbb
idivl
je
mov
pop
add
scas
imul
sbb
aaa
push
repz
mov
mov
adc
ss
add
int
mov
jecxz
ss
and
sti
cmpsb
cmp
cld
xor
cmpsl
inc
pop
mov
push
test
mov
and
movsb
sbb
adcl
int3
mov
sub
cmpsb
sub
add
icebp
cmp
xor
xor
xor
dec
mov
pop
test
subb
pop
and
jmp
icebp
out
stos
jno
fcoml
lds
aas
leave
sbb
test
and
lock
dec
jmp
in
sub
add
lahf
lds
pop
xor
xchg
jne
in
dec
loope
bound
movsl
pusha
mov
jle
iret
xor
jmp
adc
out
cmp
push
enter
rcrl
sub
dec
rorb
sub
sbb
stos
movl
pop
xor
or
dec
xor
mul
or
xchg
stos
in
xchg
xor
xchg
shrl
lcall
ret
jg
pop
xor
push
jmp
inc
xor
mov
jl
cmp
outsl
xor
outsb
loopne
cmp
mov
push
jno
aas
dec
mov
mov
or
sbb
ret
pop
jp
xor
dec
rcrb
mov
pop
or
xlat
mov
inc
loope
add
mov
sbb
mov
mov
cwtl
sbb
inc
bound
jo
sbb
test
jno
xchg
and
movsl
dec
lds
test
scas
inc
mov
cwtl
ja
lea
pop
imul
dec
xor
push
xor
pop
cmpsb
mov
arpl
scas
push
mov
cmc
inc
xor
dec
jl
dec
pop
outsb
jp
mov
shrl
lds
lds
je
adc
lds
fmull
cmp
rcl
divl
mov
sub
aam
arpl
dec
call
xor
loope
imul
and
scas
sub
roll
test
xlat
xchg
sbb
filds
or
pop
insl
rclb
fisttpl
movl
pop
or
lods
pusha
movl
xor
popf
sub
dec
loop
xchg
mov
or
leave
in
jp
stos
push
dec
push
inc
jo
lcall
mov
cwtl
pop
xchg
sbb
loop
and
mov
adc
adc
out
push
ja
push
mov
daa
mov
test
test
mov
dec
outsl
adc
fisttpl
jl
in
mov
inc
sub
jle
and
sbb
pop
pop
xchg
jo
and
push
inc
mov
or
outsb
mov
imul
or
mov
test
arpl
fildll
cltd
adc
lods
test
add
les
mov
mov
mov
inc
sbb
sbb
mov
push
add
lret
adc
mov
movsl
ret
adc
test
jp
sbb
outsl
xchg
xchg
aaa
jp
lods
ljmp
fcmovb
and
pop
add
sahf
push
les
mov
cmpl
adc
mov
xlat
and
push
jbe
cmp
adc
ret
fldl
jl
popa
stc
loope
mov
std
xor
std
jge
icebp
mov
shlb
dec
push
cmp
test
dec
cmc
xchg
das
mov
int
imul
mov
call
lret
pop
mov
adc
jne
sti
or
scas
mov
imul
imul
inc
mov
arpl
mov
popa
dec
pop
cmp
and
test
jecxz
cli
insl
jb
jnp
add
inc
insl
hlt
ret
adc
test
pop
add
stc
xchg
gs
xchg
adc
lcall
mov
mov
in
and
inc
stos
and
push
cmp
shrl
and
xchg
push
mov
leave
sub
scas
adc
add
xor
and
xlat
xchg
sti
popf
pop
ret
or
addr16
push
mov
xor
jno
jo
shlb
cmc
cmp
mov
popf
loope
cmpsl
jg
xchg
test
lock
mov
pop
ss
mov
jl
filds
mov
cmpsb
add
dec
and
push
pop
mov
dec
arpl
pop
fdiv
dec
inc
call
sbb
sbb
hlt
lods
adc
push
outsl
ror
cmp
in
jne
mov
add
mov
mov
ret
or
add
xchg
mov
pop
dec
mov
pop
fdivl
loopne
adc
push
shr
sbb
jnp
push
or
mov
mov
cmp
and
cs
aas
xor
scas
xor
fwait
cmp
push
sub
fistpll
pop
xchg
xlat
xor
addb
fistps
leave
pop
jb
pop
xor
jnp
add
xchg
xor
push
call
add
nop
gs
inc
xor
and
push
pop
cld
adc
sub
wrmsr
out
jecxz
imul
into
adc
insl
pop
enterw
xor
imul
jbe
add
jp
test
sbb
shl
imul
cld
int
add
mov
cmpsl
scas
push
sbbb
adc
sbb
jecxz
shlb
popa
lds
and
andb
shrl
cltd
cs
jo
std
inc
jne
jl
subb
imull
movsl
xchg
fwait
cmc
or
and
mov
and
sbb
enter
push
and
repnz
mov
add
repz
test
mov
add
ret
shll
into
mov
pop
push
dec
cwtl
push
in
lods
test
add
mov
shr
insb
mov
lret
xor
inc
xchg
hlt
lcall
je
mov
nop
sbbb
mov
mov
lcall
sbbb
test
mov
cwtl
inc
sbb
cmp
mov
adcb
sarb
fst
mov
popf
push
icebp
adc
adcb
js
rorb
push
sub
arpl
and
insb
mov
xchg
scas
sub
jmp
lcall
xor
push
jmp
movsl
movsl
xchg
loop
stos
cli
std
dec
xlat
test
loopne
pop
jle
das
xchg
data16
jp
imul
mov
sbb
lods
fildl
out
sbb
add
out
adc
ss
push
jne
movsl
jecxz
test
xlat
cld
sbb
or
fiadds
pop
shll
mov
push
xchg
fisttps
sub
and
into
fldcw
mov
jnp
adc
push
inc
aas
or
loopne
ficoms
and
xchg
data16
xor
aas
push
fidivs
rcrl
jo
les
push
imul
xor
pop
lods
cmp
subb
pop
mov
cmp
ja
and
loopne
inc
add
dec
or
repz
adc
sbb
aaa
xor
mov
cltd
adc
pop
push
mov
lret
in
mov
daa
inc
movsb
push
add
mov
lcall
xor
negb
daa
sbb
jecxz
pop
xor
sbb
jmp
add
test
or
subb
inc
test
sub
movl
loopne
sbb
notl
sbb
cmpsl
loopne
lods
shll
stos
push
xchg
out
dec
dec
jecxz
jge
add
cmp
or
xor
and
adc
lods
das
adc
daa
xor
sbb
cwtl
or
xchg
lahf
pop
mov
push
mov
cmpsb
jmp
clc
cmpsl
mov
je
pop
push
xor
dec
loop
into
cmpsl
adc
cmp
insl
dec
sbb
pop
adc
cmp
loope
inc
xlat
pop
scas
dec
lahf
sbb
xor
adc
adc
outsb
adc
xrelease
mov
cmp
mov
movsl
lcall
js
in
push
adc
sub
dec
mov
stos
jg
cmpsl
dec
imul
testl
pop
adc
xchg
mov
jo
imul
rcrl
arpl
pop
sbb
jae
push
int
addb
pop
xchg
outsl
or
rolb
inc
loopne
test
lock
sub
lods
dec
repnz
mov
xchg
add
mov
gs
adc
test
mov
adc
adc
and
andl
lret
adc
test
xor
mov
mov
lcall
nop
jmp
pop
test
sub
leave
xchg
ret
and
movsb
jecxz
lea
add
add
insb
dec
outsb
ret
cmpsb
ja
add
in
pop
lea
adc
jne
mov
sbb
mov
pop
in
js
fdiv
cltd
cmp
sub
or
rclb
repnz
lea
repnz
filds
mov
loope
mov
sbb
push
out
xor
mov
mov
loope
adc
inc
rolb
mov
andl
sub
add
jo
xor
pop
jb
push
mov
sbb
jecxz
lods
or
daa
sbb
push
mov
ds
cmp
stos
cmpsb
bound
bound
lcall
add
test
arpl
or
jo
test
sbb
sbb
mov
lahf
dec
pop
pop
aas
scas
push
cwtl
jge
icebp
push
cwtl
jl
or
loop
xlat
cwtl
add
sbb
clc
xchg
insl
fdivs
sbb
rol
fidivrl
push
mov
add
test
jo
add
pop
cmp
sbb
shll
movsb
es
fidivl
or
and
push
imul
xchg
mov
in
loope
test
and
cmpsl
or
je
in
mov
cmp
nop
inc
dec
cltd
push
clc
mov
punpckhdq
adc
cmpsb
scas
cmpsl
push
inc
ss
inc
adc
dec
cmp
test
or
pusha
test
pop
icebp
push
lods
xor
fiaddl
sbb
movsl
push
fsts
sbb
pop
jg
xor
repnz
dec
jecxz
dec
clc
jg
and
mov
int
cmp
fxtract
dec
test
pop
xor
cmp
addr16
jmp
pop
mov
aaa
scas
push
inc
adc
push
or
fisttpll
adc
dec
aas
mov
aam
adc
loop
icebp
call
mov
test
xor
sahf
mov
xor
mov
or
add
aas
inc
stos
jl
adc
dec
lahf
mov
ss
fxch
push
stc
push
xchg
fdivs
pop
sbb
imul
xor
adc
mov
mov
das
sarb
push
pusha
or
insl
xlat
test
jecxz
aaa
loope
gs
push
fnstenv
gs
mov
push
mov
jno
and
repnz
inc
inc
sbb
mov
cmp
lods
scas
lss
xchg
mov
sbb
jmp
xor
pop
ss
cmp
pop
daa
dec
sub
popf
push
idiv
sub
pop
leave
mov
aad
push
cmc
push
sub
shl
xor
sbb
or
hlt
lock
lret
inc
xchg
xchg
xor
xchg
test
xchg
push
fisttpl
adc
sbb
or
mov
adc
dec
sbb
pop
mov
and
test
lock
in
inc
test
jmp
push
test
jle
sbb
shl
mov
push
hlt
cmp
stos
hlt
add
pop
cmp
data16
or
test
adc
fwait
sbb
fcoml
sbb
mov
push
xor
loope
in
dec
mov
loope
xchg
ret
push
nop
xchg
mov
inc
pop
stc
fiadds
das
jge
nop
sub
push
fists
pop
pop
stc
lea
sbb
dec
sbb
jl
lock
or
scas
ret
scas
or
ficoml
clc
add
pop
sub
sbb
mov
pop
jp
sbb
jge
add
push
ja
nop
mov
pop
add
xor
pop
or
mull
push
or
stc
or
nop
mov
cmp
adc
scas
in
sub
dec
sbb
adc
in
jb
or
pop
fistl
push
loopew
imul
add
xor
sbbb
xor
xlat
jmp
iret
push
pop
lret
pop
xchg
add
push
inc
sbb
rcll
shlb
rolb
cmp
sahf
adc
cmp
and
scas
dec
sub
je
xchg
xlat
aaa
pop
rcll
or
jb
xor
xor
pushf
inc
test
icebp
imul
mov
insb
add
fwait
sub
popf
fdivr
imul
pop
sbb
arpl
xchg
fistps
pop
push
xchg
push
lock
xlat
notb
shll
outsb
cmpsl
nop
or
inc
pop
jmp
out
les
jne
aas
mov
pop
push
test
or
jno
push
push
jno
out
imul
jns
push
mov
xor
inc
mov
mov
mov
cmpsl
ret
mov
ret
push
add
add
sbbb
sub
jmp
enter
aad
imul
fisttpl
push
filds
push
cmp
pop
scas
sbb
mov
add
addl
call
lret
add
imul
movsl
push
cmp
or
sub
fs
pop
pop
rcll
adcb
pop
and
cmc
popf
add
je
scas
cld
push
inc
in
pop
das
xor
cmpsb
and
dec
movsl
lret
sbb
add
sub
mov
dec
rcl
lcall
sub
mov
dec
out
mov
sbb
aas
cmp
sub
xchg
xor
test
das
xor
mov
fimull
xlat
mov
cltd
imul
jecxz
adc
jge
add
adc
imul
lds
addr16
lea
xor
sti
cmp
and
add
testb
dec
cmc
cmpb
test
jecxz
jg
or
push
pop
lds
leave
mov
lds
pop
cmp
mov
jne
arpl
xchg
mov
push
mov
shl
ss
jp
and
pop
in
pop
andl
test
xchg
call
xchg
push
pop
int
add
test
shl
jmp
dec
push
stc
or
clc
inc
or
pushf
bound
inc
jno
mov
xor
cwtl
test
push
or
or
rclb
mov
or
addb
adc
dec
push
add
sti
sub
sbb
dec
ret
cmp
push
leave
or
mov
push
jge
nop
add
xchg
xlat
pop
jecxz
lret
fnstcw
pop
cmp
movsb
dec
jo
mov
xchg
xor
fildll
imul
adc
adc
out
enter
xchg
pop
out
cmp
js
fsubrl
mov
gs
inc
jmp
add
adc
mov
add
sbb
shrl
imul
adc
subl
mov
push
pop
xor
push
xchg
iret
pop
loopne
sub
push
stc
lods
mov
adc
sbb
stos
xchg
and
fwait
aam
cmc
stc
sub
or
lahf
lock
andb
cmpsb
cwtl
mov
test
out
cs
push
out
sub
loop
inc
shl
push
and
fimull
jecxz
sub
sub
ret
movsb
test
loope
cmp
into
in
or
scas
add
pop
shll
dec
mov
shrl
pop
add
jl
and
in
xchg
scas
adc
push
add
dec
xchg
jne
sub
pop
xorl
push
fstps
push
inc
movhps
lods
mov
adc
dec
bound
pop
add
repz
push
or
test
pop
je
hlt
mov
sbb
ss
out
xorb
popl
jno
mov
mov
ss
dec
push
push
stc
mov
inc
rcrl
add
rolb
cmc
mov
lods
push
call
movsl
dec
or
jbe
add
out
sbb
and
and
test
dec
xchg
mov
js
dec
daa
loopne
push
jne
cwtl
dec
adc
or
clc
cltd
fisttps
adc
pop
mov
mov
dec
push
sbb
lahf
daa
jmp
mov
dec
jg
loope
or
pushf
push
syscall
push
nop
push
inc
mov
xor
cmp
rclb
cmp
sbb
add
leave
ss
movsb
mov
and
fsubr
clc
mov
movsl
or
in
xchg
sbb
mov
sub
mov
je
pop
icebp
cmp
or
mov
pop
daa
out
fstp
imul
icebp
mov
fisubs
aam
pop
orl
rcrb
ds
inc
xchg
cmp
jne
call
jne
jae
bnd
xor
xor
push
xchg
add
repz
lcall
jns
push
sub
daa
pop
sub
push
or
inc
inc
push
insb
adc
cmp
inc
mov
mov
int3
xlat
push
push
xchg
mov
inc
scas
test
aam
in
xor
aaa
pushf
mov
rcrl
stos
and
sarb
pop
xchg
dec
addl
loopne
lods
inc
dec
push
mov
std
push
lea
cmp
or
pop
xchg
idivl
mov
cmc
test
sbb
adc
jae
dec
stos
pop
aaa
cmp
shlb
loop
lret
or
push
movsl
leave
mov
xchg
push
pop
pusha
loope
push
insl
cmpsb
jae
mov
sbb
adc
shl
and
jmp
mov
pop
inc
lea
icebp
adc
pusha
ret
push
mov
push
outsl
xchg
mov
imul
rclb
mov
dec
repnz
add
jb
xor
sub
callw
mov
dec
pop
and
mov
outsl
add
or
out
addb
loopne
push
test
mov
pop
cmp
leave
loope
sbb
and
xlat
xlat
jno
pop
dec
sbb
xor
pop
and
cmp
sar
aam
mov
test
xor
lea
sub
pop
push
lods
rcll
jmp
roll
or
mov
mov
mov
es
dec
inc
mov
mov
cmpsb
push
fidivl
rorl
out
pop
add
cmp
cmp
les
sbb
dec
xchg
mov
aad
add
push
ss
addr16
xchg
js
add
or
add
cmp
lods
inc
or
les
mov
mov
jg
push
rclb
and
adc
cmpsl
sbb
push
or
mov
jle
xor
stos
pushf
outsb
xor
mov
pop
daa
or
das
repz
pop
mov
dec
in
das
adc
out
mov
mov
dec
sbb
and
lock
add
or
xlat
aad
cmpsb
lods
or
jo
adc
outsl
pop
and
jmpw
inc
inc
popa
cltd
jge
inc
adc
dec
movsb
scas
sbb
mov
jp
aam
cmp
iret
xlat
xor
jo
ret
mov
fsubl
imul
mov
pop
jle
rol
adc
scas
dec
xor
fsubs
out
jb
xor
cmc
aad
mov
sbb
stos
and
push
push
cmc
sbb
mov
shrb
test
sbb
mov
test
mov
fmuls
push
add
or
lock
xchg
cmp
addr16
sbb
fstp
push
rolb
sbb
subb
adc
cmp
mov
or
sub
popa
leave
mov
or
pop
push
sbb
subl
out
sbb
loopne
xchg
pusha
add
aaa
cs
xor
jge
sbb
pop
jno
push
jbe
inc
shll
jno
in
insb
adc
or
mov
std
pop
inc
sbbl
cmp
cltd
cmp
cmp
adc
scas
repnz
push
xor
outsb
stos
cld
mov
fistps
push
xorb
cmp
adc
aad
popa
hlt
adcb
jle
xor
lcall
xlat
xor
popa
pop
das
iret
mov
pop
addl
cmp
aaa
or
pop
sub
mov
sub
cltd
adc
lret
pop
inc
sub
pop
nop
jmp
or
and
push
in
les
xchg
mov
inc
mov
add
xchg
dec
dec
mov
xor
dec
rcr
roll
dec
add
jmp
lods
xor
mov
push
mov
mov
push
rol
xor
adc
cmc
cmp
inc
out
les
cmp
imul
jecxz
or
cld
jmp
push
aad
adc
adc
or
dec
pushf
inc
push
xor
imul
or
inc
das
inc
inc
mov
xchg
rclb
xor
xor
clc
test
repnz
scas
xor
and
fdivrl
and
sbb
xor
jle
leave
inc
shlb
ret
je
notl
repz
and
inc
and
ret
xor
sbb
test
out
das
or
mov
xor
pop
and
xor
push
dec
daa
lds
mov
cmp
popf
pop
insl
pcmpgtw
data16
mov
scas
jmp
jmp
int3
xchg
lea
shll
inc
data16
pop
adc
scas
fs
lret
jne
jnp
push
sti
js
lock
sbb
movsb
mov
aaa
loop
push
xor
sub
imull
adc
dec
sub
lret
loope
lods
dec
jno
icebp
inc
adc
xchg
mov
push
pop
repnz
mov
cmp
mov
xor
pop
imul
popf
fmuls
push
hlt
push
or
pusha
sub
cmpsl
xor
dec
push
pop
jno
rcrb
sahf
mov
leave
cmpsb
xor
and
sarb
ret
cltd
aam
int3
movsb
push
fistpll
lds
out
ja
subps
xchg
and
push
jmp
sub
xchg
outsb
nop
mov
pop
xor
and
outsb
jno
pop
jecxz
iret
mov
adc
and
and
pop
push
mov
movsb
fcoms
mov
imul
stos
rorl
outsl
xor
shrl
ret
mov
and
push
xor
jns
pushf
and
das
sbb
mov
cmp
int
mov
jo
aam
add
scas
rorb
lret
push
repz
les
shll
movsb
add
jb
or
adc
fwait
outsb
stos
xorl
dec
and
sbb
or
xor
clc
xchg
push
test
lret
stos
js
sbb
jle
test
roll
jge
imul
packssdw
add
fstl
pop
scas
dec
mov
push
pop
arpl
in
insl
inc
addr16
outsb
repnz
jne
addb
mov
sub
sbb
inc
inc
jl
pminsw
insb
inc
sub
dec
cmpsl
inc
in
mov
mov
lret
aam
out
inc
inc
scas
xor
mov
jmp
and
xor
sbb
jb
sub
sub
pop
mov
stos
dec
jmp
adc
out
sbb
scas
inc
xchg
xor
out
jne
leave
or
add
cmpsl
into
mov
imul
fimull
shlb
jl
lock
lds
stos
inc
add
scas
dec
mov
pop
cmpsb
js
inc
dec
and
push
mov
adc
test
sbb
mov
mov
dec
shll
scas
movsl
lea
sbb
sub
pop
inc
iret
and
es
inc
xchg
pop
cmpsb
dec
pop
xor
das
sbb
les
xor
in
sub
loope
inc
push
inc
dec
cld
adc
add
pusha
sbb
mov
jl
movsl
pop
mov
rorb
ja
mov
bound
or
je
cltd
lahf
mov
push
popa
dec
push
pop
popf
pusha
mov
scas
or
jmp
push
and
jbe
aaa
jno
shlb
mov
das
popa
push
mov
ret
push
data16
int
push
ret
test
roll
add
rorb
xchg
jo
xor
add
or
ds
cmp
fdiv
cmp
lcall
scas
sarb
ljmp
es
daa
jp
popa
and
jbe
and
mov
sub
jno
pop
test
mov
and
add
inc
push
movsb
loop
int
in
mov
jae
sub
cmove
repz
outsl
fstl
clc
int
pop
mov
cmp
sahf
fs
popf
xchg
xchg
in
inc
repz
jbe
and
imul
xor
fcom
pop
xor
sub
lods
jmp
inc
scas
notb
rcll
mov
sub
cmp
popf
push
lcall
push
mov
mov
loope
xchg
cmc
mov
cmp
pop
into
icebp
inc
adc
or
mov
xor
stos
dec
jp
add
scas
mov
ret
xor
int3
jmp
rorb
mov
roll
mov
sbb
decl
pop
imul
shrb
adc
cmp
pop
xlat
cmpsb
push
sbb
jle
pop
cmpsl
adc
aam
jne
xor
and
xchg
mov
mov
lds
iret
xchg
sub
insl
and
push
cwtl
cmp
mov
in
inc
dec
sbb
dec
xchg
pop
inc
inc
pop
xor
mov
hlt
mov
sbb
fcmovu
inc
ret
subb
fnstenv
enter
repz
or
cmp
clc
mov
lret
mov
and
repnz
jne
stc
mov
pop
sbb
roll
stos
push
sahf
repnz
cmp
inc
add
sub
aad
fwait
mov
push
sub
sahf
out
adc
xorb
push
or
and
and
out
sbb
fincstp
dec
xlat
inc
sub
sub
jne
add
sbb
sbb
aam
cs
cld
sbb
or
mull
adc
dec
xor
inc
sbbb
dec
inc
cmpl
jno
ret
test
push
cwtl
cwtl
out
jnp
jb
adc
and
xor
dec
cmpsb
lock
push
jp
mov
jbe
xchg
jo
pusha
and
rolb
add
lds
xchg
mov
or
das
mov
adc
mov
add
cmp
mov
jb
lock
cltd
andl
fildl
mov
mov
mov
test
test
pusha
mov
addr16
push
dec
or
daa
pusha
add
movsb
jmp
add
add
lret
ret
xor
push
push
or
push
cltd
pop
stos
popf
and
test
pop
xor
std
shll
push
std
frstor
stos
pop
jne
ljmp
push
and
mov
mov
mov
fxch
jecxz
enter
mov
les
xor
imul
sbb
push
cmc
mov
and
mov
movsb
stos
and
and
daa
xor
movsl
jne
pshufw
je
mov
loope
movsl
stos
dec
es
sub
ds
adc
rclb
add
rorl
sbb
fldt
jnp
mov
mov
test
imul
sbbl
daa
dec
add
pop
or
popf
sub
push
mov
movsb
mov
movsl
jl
lock
pop
addl
inc
sub
inc
js
cmp
test
push
jge
test
popf
pop
dec
sbb
pop
les
addr16
sbb
in
xor
into
rorb
scas
cmc
push
add
add
xchg
mov
sub
cs
pop
pop
jo
ffree
mov
or
dec
aaa
mov
jle
andl
popf
inc
cmp
pop
out
test
dec
xchg
dec
adc
call
ficoms
dec
adc
mov
adc
shll
mov
ret
cmpl
push
sbb
insl
xor
subl
aaa
pushf
loop
add
lock
pop
ffreep
or
jne
cmp
test
mov
pop
fwait
notl
mov
shll
cwtl
sbb
je
jnp
aad
sbb
xorb
pop
into
xor
push
xchg
cmp
dec
mov
and
lds
inc
sbb
dec
bswap
push
push
pop
and
jbe
sbb
or
das
sbb
inc
adc
xor
pusha
push
inc
xor
dec
and
sbb
roll
fnstenv
xor
jecxz
inc
xor
mov
and
or
rorl
mov
pop
xor
aas
movsb
icebp
test
dec
sub
cmpb
add
cmpsb
pop
out
push
movsb
inc
cmp
arpl
adc
jl
mov
push
push
ror
add
adc
iret
push
jns
sub
jecxz
mov
xor
and
jg
sbb
mov
push
sbb
jmp
adc
xchg
or
jle
addb
mov
add
inc
add
or
xor
or
insl
mov
adc
aad
ror
je
add
push
jp
mov
lcall
inc
or
fidivs
xchg
testb
xchg
insb
inc
out
and
fistps
inc
ret
int3
sub
arpl
daa
cltd
js
rcrb
xorl
popf
and
je
cmp
add
mov
mov
inc
mov
iret
popf
adc
cmpsl
out
inc
sbb
mov
mov
adc
push
std
mov
or
mov
jl
jmp
or
lret
pop
repnz
out
or
pop
push
pop
ds
xor
data16
pop
xchg
sbb
push
scas
dec
xor
inc
push
push
pop
sub
and
pop
das
stos
xor
nop
fcomip
add
popa
loopne
pop
xchg
icebp
mov
cmp
rcr
push
sub
adc
cli
sbb
mov
mov
mov
js
adcl
mov
aaa
test
jo
cmp
xchg
or
push
inc
fistpll
dec
jno
andl
pusha
jg
xor
add
cmp
gs
add
push
pop
pop
lds
xor
test
push
sahf
mov
ret
sbb
ljmp
into
sbb
repz
popf
add
mov
pop
xchg
test
sub
mov
add
and
sub
mov
movsl
movlps
daa
call
xlat
mov
fwait
jo
aam
das
mov
or
test
mov
sbb
pop
and
pop
and
mov
mov
jmp
out
and
add
jle
les
cltd
dec
mov
dec
lock
adc
insl
xor
xchg
mov
mov
xor
imul
aas
loop
in
mov
arpl
leave
mov
sarl
and
push
es
leave
pop
stos
and
stos
call
enter
pop
arpl
rcll
sahf
mov
fwait
scas
adc
outsl
aaa
xor
mov
int
test
or
xchg
leave
add
mov
push
dec
jmp
les
ret
mov
sub
xor
gs
lcall
push
clc
lea
cmpsl
xorb
mov
and
popa
cwtl
add
adc
jae
sbb
bound
xor
and
xor
movsl
rcrl
pop
mov
inc
sbbl
mov
push
sbb
xor
or
cmp
or
add
mov
push
loope
mov
adc
jg
fs
xor
cmp
sbb
sbb
mov
sub
mov
jmp
outsb
dec
adc
mov
jnp
dec
cli
lcall
push
cmp
pushf
adc
popf
add
mov
sub
arpl
jmp
test
jmp
cmp
repz
inc
in
inc
test
or
adc
cmp
scas
pop
dec
scas
ja
movsb
jmp
xchg
rcl
xchg
mov
sbb
and
pop
and
jnp
loopne
mov
xchg
xchg
stos
xchg
mov
sbb
rcrb
adc
pop
jge
and
mov
test
and
jmp
xor
sbb
and
pop
addr16
shrb
stos
jmp
adc
rorb
xchg
xor
lahf
jmp
xchg
and
popa
pop
push
std
xchg
xor
sub
and
push
test
pop
popf
dec
test
adc
sarl
rorb
mov
call
shl
and
adc
inc
das
es
sbb
jne
mov
jno
mov
pop
lahf
or
or
push
call
lcall
sub
inc
xor
arpl
lea
nop
fmull
movsl
ret
pop
push
jmp
dec
inc
jno
inc
dec
push
and
imul
dec
ret
xchg
xchg
lds
jo
and
pop
ret
pop
and
xlat
or
mov
xlat
sub
pop
push
scas
inc
jbe
mov
or
andl
xorl
jne
ret
inc
jae
sub
in
movsl
jnp
push
insb
icebp
cmp
scas
sbb
and
cmp
or
sbb
cwtl
pop
mov
cmpsl
sbb
or
and
aam
adc
pop
pop
cmp
lock
cmc
xor
nop
mov
ret
outsl
xor
pop
xchg
sbb
adc
outsl
mov
push
or
and
lret
es
adc
cltd
inc
sub
dec
mov
adc
add
xchg
pop
and
cld
insl
and
movb
shll
jmp
push
jns
pop
sub
push
mov
fidivs
notl
mov
into
push
mov
shlb
xor
jae
add
jg
mov
inc
movsb
iret
adc
test
inc
mov
fnstcw
pop
xchg
xchg
cmp
hlt
push
pop
cmp
mov
int
jne
sub
pushf
shrl
mov
cmc
pop
mov
or
push
mov
cmp
cld
push
mov
aad
add
ret
adc
rolb
pusha
xor
pop
add
xchg
add
fisubs
jbe
mov
test
es
xchg
out
scas
push
in
push
inc
stc
cs
int
add
xor
aaa
jne
lea
xor
aad
add
fsubrp
fisubl
je
negl
push
je
loop
aad
or
cmp
loopne
ficoml
icebp
mov
lods
push
addr16
sub
stc
mov
add
dec
xchg
movsb
mov
sub
cmpsl
push
xchg
gs
dec
sbb
pop
xchg
les
pushf
lock
jmp
je
movsb
mov
push
jns
lret
nop
add
inc
cmc
mov
sbb
mov
jno
nop
std
or
and
loope
xchg
xchg
cmc
lret
add
cmpsl
mov
sub
push
inc
aaa
call
lock
aad
jae
inc
xchg
or
aaa
int
daa
dec
cmpsl
xchg
xor
add
int3
xor
mov
inc
test
pop
clc
movsl
outsl
in
test
sub
mov
xor
cwtl
mov
mov
pushf
pop
shlb
pop
mov
sbb
aam
sbb
lods
sbb
imul
sti
test
insl
add
adc
and
scas
imul
and
or
les
lret
in
mov
dec
adc
ret
xchg
inc
sbb
dec
cli
dec
sbb
inc
inc
mov
movsb
and
shl
add
push
es
add
addb
cli
cmp
fs
cmp
sahf
popa
scas
ss
imulb
mov
add
pop
add
and
pop
stos
rcll
add
xlat
inc
push
mov
push
bound
jnp
pop
mov
scas
add
or
out
and
jge
daa
xor
push
xchg
cmp
xchg
and
xchg
out
inc
das
mov
xchg
scas
lds
fnstenv
push
pop
and
push
orl
inc
dec
sbb
inc
add
imul
int
stos
inc
adcl
pop
stc
sbb
pop
sbb
mov
add
jo
inc
sbb
aad
jp
inc
cmp
push
imul
popa
cwtl
jno
shll
addr16
and
addr16
push
repz
push
or
lock
loope
sub
adc
es
in
xor
add
xor
xchg
push
dec
icebp
or
adc
iret
cwtl
stos
popf
je
xlat
cs
pop
aad
adc
adc
adc
xchg
cmp
jb
mov
push
les
mov
jecxz
mov
mov
loopne
push
mov
or
jne
inc
jae
imul
or
pop
sbb
and
in
repz
mov
scas
lods
bound
addr16
mov
ss
stc
and
or
dec
pop
shll
ja
lock
push
pop
add
ret
cwtl
pop
mov
sahf
iret
push
push
xchg
cmp
push
cltd
push
in
pushf
mov
mov
sub
push
xor
scas
jmp
mov
loopne
sbb
aad
xchg
scas
dec
xlat
fs
add
das
pop
adcb
push
dec
mov
in
mov
sub
inc
movsb
push
push
mov
stos
push
adc
rcrl
test
js
cmp
jne
lahf
fcmovnb
iret
sahf
cltd
loope
subb
cmp
jbe
rcl
xchg
pop
stos
mov
ja
int
hlt
loope
jo
mov
add
xchg
in
add
sub
lods
and
addr16
mov
sarl
xor
movsb
cmpsl
adcb
inc
dec
push
sbb
jb
adc
add
imul
cmp
push
sub
fisubl
das
mov
mov
pop
insl
subb
mov
aad
in
sbb
lods
jnp
push
test
test
inc
addl
dec
xchg
sub
icebp
dec
push
push
add
sub
push
imul
cmp
shll
ret
cmp
stc
out
movlps
xchg
mov
jo
cwtl
sbb
addr16
sbb
in
ret
jg
inc
push
push
jl
mov
jge
in
clc
mov
loope
adc
inc
push
shlb
xrelease
dec
lcall
fadds
pop
add
sbb
pop
mov
push
cmpsb
testl
or
xchg
or
subl
decb
sub
cmpsb
test
xorl
jne
outsl
out
call
hlt
shll
fldenv
stc
mov
push
xchg
inc
adc
add
pop
mov
push
bound
ret
ja
je
sbb
addl
push
aas
mov
push
sbb
sub
pop
xchg
insl
fstps
jle
dec
fistl
jecxz
int
mov
nop
fwait
adc
mov
or
cmp
mov
nop
sub
cmp
loope
fistps
and
sub
sbb
jecxz
or
push
pop
clc
fs
dec
adc
inc
jo
movsl
sub
icebp
je
mov
inc
dec
mov
jbe
pop
dec
xchg
int
xchg
or
leave
xchg
add
jmp
outsl
or
xor
arpl
xchg
jl
cmp
xchg
dec
rclb
or
sti
movsl
mov
mov
push
cmp
js
mov
adc
iret
icebp
ret
pop
mov
fisttpll
jns
sub
adc
les
jmp
xor
rcll
aas
rcl
jne
jmp
repz
push
scas
dec
out
mov
shll
xor
inc
sbb
sbb
xchg
sub
pop
test
adc
clc
push
cmp
push
add
mov
xchg
or
pop
adc
fisttps
cmp
das
xchg
sbb
adcl
aas
and
mov
xlat
adc
xor
test
je
popf
push
cmp
pusha
add
jns
xor
jl
cmp
pop
or
popa
loopne
lret
ret
inc
sbb
es
jl
pop
ficoml
aam
movsl
in
push
pop
or
in
sbb
or
and
bound
xchg
mov
ja
repnz
bound
je
xchg
les
push
jmp
or
xlat
test
fsubrl
add
mov
sub
ret
dec
fldcw
sub
pop
jno
xchg
enter
xchg
daa
cld
lods
mov
adc
and
adc
shr
aaa
scas
xor
sbb
jle
rorl
mov
xor
sub
push
jo
lcall
xchg
mov
xchg
test
or
push
push
xor
cmp
sub
push
push
cltd
jno
mov
and
ja
lds
sbb
jns
movsb
cltd
jmp
out
inc
pop
or
jmp
cli
push
mov
mov
mov
fists
inc
mov
push
dec
jnp
fisttpl
inc
mov
mov
ja
pop
add
push
shr
roll
and
sbb
push
mov
mov
bound
xorb
pop
xor
jb
cmpsl
mov
inc
mov
sub
fcmovnb
test
jns
or
inc
pop
jle
sub
iret
test
jnp
dec
dec
pop
mov
fldenv
call
adc
xchg
mov
test
cmp
mov
and
mov
in
xchg
scas
xor
je
xor
adc
xchg
adc
jns
fsubrs
adc
xlat
subb
fcmovnbe
clc
mov
inc
lea
pop
pop
jnp
dec
imul
in
cmp
fsub
in
or
jno
or
rorb
xchg
jnp
mull
je
jo
clc
cmp
and
jno
push
push
sbb
adc
rorb
or
insl
or
jo
mov
rcrb
add
mov
es
pop
call
mov
fists
add
jle
push
in
icebp
add
dec
pushf
sbb
mov
leave
std
fldt
stc
mov
test
mov
leave
inc
mov
loope
pop
xor
cmp
jne
xlat
lds
push
mov
packssdw
lock
xor
cmpsl
mov
mov
in
adc
inc
insb
jmp
add
aaa
cmp
add
xor
pop
mov
popf
or
or
je
shll
cwtl
push
ret
int3
xchg
arpl
mov
xchg
add
outsb
inc
mov
adc
in
push
out
add
pop
push
loop
jo
mov
popf
or
outsl
inc
lea
scas
cmovae
adc
arpl
mov
cmp
mov
enter
add
mov
dec
clc
inc
add
xchg
jl
in
xor
dec
mov
ljmp
gs
mov
add
and
cs
je
pop
xor
mov
lds
imul
aas
rorb
scas
dec
xor
stos
cld
aaa
jo
imul
inc
push
xchg
das
or
mov
push
pop
inc
out
inc
xchg
div
popa
rcrb
enter
push
or
adc
repz
adcb
sub
jmp
aas
sti
xchg
xchg
cmp
mov
pusha
and
and
arpl
roll
test
std
out
cmp
int3
in
repz
pop
or
ds
scas
addb
jno
pusha
push
rolb
pop
sbb
inc
or
push
sub
mov
lock
adc
roll
push
mov
and
into
test
or
bound
sub
xchg
sub
or
push
pop
je
testl
out
jecxz
repz
xor
push
dec
or
repz
jnp
insl
xchg
push
adc
test
dec
shl
fsub
jo
imul
mov
mov
sub
js
mov
xchg
loop
movsl
and
add
or
sub
xchg
aam
mov
push
sub
xor
lea
stos
rcrb
inc
xchg
and
dec
and
mov
clc
mov
adc
mov
mov
loope
enter
jmp
es
and
shlb
js
test
rclb
aad
push
nop
je
cwtl
or
aas
inc
jne
xchg
out
xchg
pop
xor
jno
iret
sub
shr
xchg
das
and
mov
ret
add
sahf
and
jp
popa
shrl
cmp
fs
mov
inc
and
je
cmp
pop
adc
or
js
ror
arpl
and
lods
adc
cltd
outsb
sbb
push
pop
cmpsb
mov
in
push
popa
push
inc
outsb
jne
data16
js
aam
jne
or
push
sub
mov
pushf
push
inc
pop
popa
push
nop
pop
cmp
pusha
clc
or
add
out
mov
pop
cmp
and
orl
push
js
dec
fwait
jmp
add
inc
sbb
addl
sub
or
adc
sub
loope
add
and
mov
adc
movsl
mov
in
addr16
ss
test
pop
jp
mov
insb
push
ret
mov
xchg
cmp
hlt
xor
xchg
cwtl
mov
xchg
sub
sub
push
sbb
dec
pop
cltd
shl
out
pop
out
movsl
test
mov
or
stc
shrl
ret
push
xor
test
rorl
fidivs
adc
add
lret
iret
pop
daa
jo
jp
es
shr
outsl
inc
inc
scas
inc
mov
xchg
push
sbb
add
gs
jnp
pusha
sbb
iret
test
xchg
dec
mov
sahf
mov
dec
add
sbbb
inc
out
jns
test
mov
mov
jo
clc
fldt
inc
icebp
jg
push
dec
fwait
ret
in
jg
adc
jl
inc
stos
and
add
sbbl
lcall
mov
add
lret
jne
mov
sub
shr
add
cmp
jmp
mov
movsl
shll
bound
xor
jg
push
push
ss
inc
daa
out
stos
dec
mov
inc
jmp
les
loope
cmc
and
lahf
test
popf
sbb
ret
mov
mov
stos
pop
enter
push
lods
ja
lret
ret
sbb
xor
jne
test
cmp
and
ret
pop
popf
push
icebp
push
adc
sbb
sub
fisubrs
fnstenv
or
andl
jmp
out
into
mov
ror
cmp
xorl
data16
mov
call
mov
push
and
mov
leave
mov
push
pop
jmp
shlb
lea
xor
std
in
sbb
fwait
and
mov
mov
shl
rcrb
push
loop
mov
imul
jns
cli
cmpsl
or
into
xchg
xchg
les
pop
adc
lahf
xor
fimuls
add
inc
mov
in
fnstcw
and
jo
test
xchg
mov
sbb
mov
bound
xlat
and
jmp
mov
mov
dec
pop
cltd
pop
ret
addr16
in
movsl
mov
pop
adc
and
out
and
pushf
sbb
jno
rorl
add
scas
jmp
es
enter
cmpl
mov
pop
fwait
enter
neg
iret
negl
mov
pop
not
pop
mov
loopne
hlt
loop
jno
loope
mov
cmc
inc
stos
daa
shl
ret
fisttpll
aam
mov
loop
cpuid
cltd
mov
sub
out
mov
into
and
popf
dec
dec
insb
push
add
pop
in
inc
das
imul
push
fildl
jo
lods
dec
push
mov
dec
xchg
inc
push
movsl
imul
cwtl
movsl
mov
xor
call
sbb
aad
stos
xchg
movsb
loop
xor
shr
push
fs
ss
xchg
jbe
xchg
mov
mov
sbb
push
insb
dec
pop
aaa
xchg
repnz
mov
dec
sub
in
mov
sbb
mov
andl
push
jne
jne
repz
popa
xchg
xor
or
inc
lret
push
ljmp
in
in
cmp
ljmp
lods
cmpsl
cmp
fwait
xor
pushf
cwtl
or
mov
xor
imul
test
scas
jno
cmp
cmc
xchg
outsl
gs
pop
mov
cli
xor
and
jne
bound
loopne
mov
push
lret
sbb
rorb
das
sahf
popf
or
popf
mov
push
pop
test
mov
mov
ficompl
icebp
xchg
movsb
cmpsb
xchg
jno
mov
mov
test
es
in
jbe
push
popa
push
ja
mov
repnz
push
and
cmpsb
sbb
sbbb
dec
pop
push
test
sbb
sbb
mov
jno
imul
in
rclb
shll
cmp
dec
xchg
icebp
mov
call
xchg
mov
lret
test
add
fcomps
and
cmpsl
cmc
imul
mov
xor
lea
xchg
xchg
jge
adc
dec
jnp
mov
popa
movsb
add
aas
push
fdivrl
aas
mov
xor
icebp
dec
rolb
mov
icebp
sahf
fstl
pop
mov
loop
jne
dec
mov
in
push
scas
test
in
or
xchg
rorl
inc
test
inc
das
xchg
jmp
add
icebp
sbb
insl
aad
ja
adc
xlat
xor
insb
xchg
outsl
and
dec
jne
push
dec
or
rolb
rorl
mov
xorb
or
add
mov
pop
lret
mov
lea
cmp
daa
cmp
push
fstpl
imull
jno
add
or
int
mov
mov
fsubr
leave
xor
mov
popa
aad
test
jnp
aaa
adc
pop
je
or
sbbb
lds
push
mov
movsb
pop
mov
cmp
sbb
sbb
fiaddl
aad
test
and
mov
adc
aas
or
inc
push
pop
popa
daa
cmp
aad
jmp
fdivr
inc
mov
or
iret
je
mov
push
pop
pop
jno
push
pop
je
adc
dec
cli
jno
mov
cmp
cltd
jl
or
cmc
mov
push
in
leave
push
and
shll
jno
hlt
push
imul
icebp
leave
dec
cmp
adc
out
adc
sbbl
movsb
lahf
mov
pop
and
xchg
imul
lret
pop
scas
ds
cmc
addr16
jg
scas
sbb
xor
lea
icebp
pop
adc
orl
mov
and
scas
insl
mov
push
ss
cmpl
or
push
fs
mov
cltd
and
repnz
lock
inc
rclb
out
and
fldt
cmc
es
add
daa
cmp
sysret
mov
jmp
xor
pop
mov
aaa
jno
iret
in
inc
aad
dec
dec
jnp
mov
jecxz
pop
lret
pop
movsb
lea
cmp
cmp
push
or
sub
movsb
inc
cmc
test
testb
inc
popa
mov
int3
jns
cmp
dec
jae
xchg
push
adc
and
dec
push
mov
pop
dec
xor
popf
lods
add
mov
or
ret
push
mov
push
jge
xlat
xchg
mov
data16
sbb
push
sub
ret
cmp
jnp
dec
xchg
jl
fbld
and
jmp
add
push
insb
dec
pop
imul
orl
adc
inc
cmp
inc
sub
mov
ret
pop
test
jg
xchg
lock
sbb
cli
lods
mov
out
jle
imul
sbb
cs
xor
test
int
xor
int
js
ret
in
mov
stos
nop
scas
popa
mov
add
push
pop
shr
xchg
adc
jae
inc
mov
mov
lret
or
mov
xchg
std
jmp
inc
xor
nop
lret
or
scas
xor
js
xchg
sub
outsb
lret
xor
xlat
lahf
push
push
ret
pop
xchg
stos
test
ror
in
xlat
add
imul
ljmp
loop
pop
test
inc
test
pop
into
sbb
scas
push
sbb
test
mov
push
icebp
cmpsl
out
fwait
aas
divl
mov
fbld
xor
sarb
mov
jge
add
cmp
repnz
sbb
retw
lahf
sub
mov
dec
cltd
cmp
outsb
ret
mov
mov
push
sub
mov
stos
cs
scas
lods
push
lods
loope
push
sub
leave
arpl
mov
imul
mov
sub
sbb
mov
cld
pop
or
gs
or
mov
ret
jo
out
sbb
add
or
mov
xor
mov
pop
inc
scas
and
dec
loope
xor
pop
stos
pop
xchg
adc
add
mov
add
xchg
cmpsb
aaa
leave
sarb
jl
mov
les
inc
mov
add
push
mov
cmp
cmp
add
inc
sbb
add
addr16
sub
shl
jo
and
and
pop
mov
dec
mov
and
mov
cmpsb
add
repz
pop
xor
cs
jo
sbb
jne
rolb
movsb
loope
or
out
js
push
dec
xchg
mov
adc
pop
addr16
inc
mov
pop
jecxz
jge
mov
es
popa
stos
jl
adc
xor
xor
lahf
mov
mov
push
pusha
adc
test
mov
lcall
into
xchg
cld
mov
notl
shrl
sub
or
sbb
sub
and
sbb
mov
aaa
shll
fwait
shll
sub
lds
and
les
in
pop
pop
or
gs
inc
test
mov
xchg
mov
adc
cmc
dec
inc
daa
loope
insl
push
lcall
sbb
arpl
inc
scas
jo
sbb
xor
loope
addr16
add
pop
and
adc
mov
gs
jb
cltd
xabort
ret
out
cmp
pop
jo
sbb
ss
inc
push
xchg
xchg
aad
add
xchg
add
fnstenv
jns
movntps
xchg
pop
pop
aad
mov
xchg
lcall
out
shll
test
or
cli
lds
adc
mov
mov
xchg
addr16
sbb
leave
fimull
push
adc
xchg
in
mov
imul
pop
mov
fwait
je
xchg
push
cmp
sub
test
add
movsl
push
jns
xchg
int3
lea
iret
call
cmp
jecxz
std
mov
mov
adc
test
inc
lods
lret
in
stos
lods
popa
adc
inc
lret
push
lods
or
add
lcall
mov
scas
pop
fwait
out
in
stc
cmp
mov
nop
imul
dec
or
pushf
data16
push
lds
pop
sbb
add
mov
dec
rolb
push
xchg
call
mov
fistpll
dec
xchg
imul
es
loop
sbb
imul
nop
mov
ljmp
push
or
jmp
into
repnz
xchg
cmp
push
jmp
and
mov
cltd
arpl
imul
daa
les
mov
fildl
mov
or
and
jnp
add
jae
arpl
xor
insl
arpl
jmp
and
ljmp
inc
pop
xchg
lods
adc
scas
mov
ja
xor
mov
inc
icebp
subb
sub
jno
xor
stos
inc
gs
rclb
and
mov
ret
stos
sbb
outsl
cltd
xchg
das
mov
cmpsl
cld
and
push
jb
inc
mov
dec
cmp
pop
add
mov
push
stos
xchg
popa
add
dec
xchg
adcl
adc
jb
decl
pushf
hlt
pop
push
mov
adcl
jae
ja
jmp
push
or
mov
cmc
and
xchg
or
das
rol
stc
out
jns,pn
mov
sub
stos
xor
pop
outsb
pop
roll
or
cltd
push
inc
add
rorb
test
mov
push
aad
leave
xchg
pop
cmp
stos
rcrl
or
lods
ret
sbb
ljmp
jecxz
push
mov
ret
inc
gs
mov
push
pusha
cmpsl
les
jns
out
mov
mov
lea
les
mov
adc
dec
arpl
loop
jno
xchg
and
mov
iret
xchg
mov
push
lahf
mov
repnz
ret
add
ror
aaa
arpl
inc
mov
mov
xchg
imul
pop
stc
lods
fistps
xor
fidivrs
xchg
add
imulb
jb
leave
dec
cmp
xor
sub
jecxz
pop
mov
inc
sbbl
inc
cli
pop
xor
loope
adc
inc
fisubrs
mov
add
xchg
pop
adc
pop
loopne
test
fsubrl
mov
sbbl
add
xor
dec
sarl
mov
rclb
sbb
mov
roll
adc
aam
loop
div
rcrl
pop
xor
inc
pop
pusha
loope
mov
arpl
leave
popa
lds
sbbb
ficoml
push
dec
adc
and
and
mull
repz
pop
in
push
in
jae
jl
push
jno,pn
or
sub
ficoms
add
loop
insl
outsl
dec
xor
sbb
and
lods
and
mov
aad
jne
in
cmp
cmpsb
idivl
jmp
imul
aaa
push
sub
pop
loope
inc
xchg
dec
and
inc
xchg
xchg
xchg
fmull
sbb
sbb
daa
inc
and
push
mov
pop
test
sbb
pop
les
cwtl
sub
out
sub
sub
pop
ja
pop
push
test
gs
movl
iret
add
push
lods
and
sbb
and
jge
push
xchg
shrb
test
je
rolb
sar
add
pop
roll
cld
add
xchg
pop
push
repnz
mov
das
rol
ljmp
loope
les
dec
push
pop
shlb
lfs
cmpsl
adc
pop
insl
scas
pop
add
daa
jb
xchg
push
es
insl
out
sti
dec
xor
sbb
cltd
jae
xchg
and
mov
ja
fcmovne
inc
mov
xor
mov
jnp
data16
xor
test
cs
jg
jnp
xchg
repnz
adc
add
mov
adc
imul
out
xchg
std
test
add
mov
push
dec
push
ret
and
inc
or
pop
lret
shrl
jg
jo
or
cld
jmp
dec
add
mov
inc
insb
add
outsb
add
jmp
nop
jae
xor
js
ret
mov
dec
mov
cmp
mov
rorb
pop
lret
rcl
jno
out
aaa
or
lcall
dec
or
mov
sbb
mov
pop
icebp
jecxz
mov
enter
fwait
aad
push
mov
fldt
ret
dec
dec
mov
cli
or
data16
sbb
in
andb
and
sbb
jne
inc
fadd
rep
sbb
iret
pop
lods
dec
dec
xchg
xchg
rol
daa
pop
sbb
push
jecxz
adc
lods
shrb
pop
rclb
imul
fwait
jo
mov
jbe
push
fs
insl
pop
sar
xor
aaa
jns
scas
stos
jns
sti
jnp
mov
xchg
push
sub
dec
mov
jno
adc
push
xchg
or
adc
arpl
scas
dec
mov
neg
fisubrl
inc
dec
bound
mov
or
sahf
jmp
add
adcb
cmp
pusha
add
sahf
inc
push
les
jno
faddl
and
sbbb
inc
lcall
dec
xchg
push
sub
adc
test
jecxz
xchg
inc
jno
outsl
dec
push
push
push
jbe
ss
mov
adc
adc
mov
insb
test
addl
push
in
dec
inc
mov
jle
dec
ret
push
mov
hlt
or
cwtl
jo
and
aam
aas
and
sub
jp
ret
adc
aas
hlt
rcll
sub
cli
mov
fbstp
scas
adc
xor
and
or
mov
inc
addr16
callw
cmp
idivl
push
stos
movsl
sar
int
inc
dec
xlat
and
mov
aam
aad
inc
push
pop
ljmp
popa
add
add
adc
and
adc
push
push
pushf
xchg
and
js
fs
shrb
or
xor
lea
hlt
sub
jnp
int
adc
adc
mov
cmp
sbb
mov
sarl
subl
ljmp
mov
push
popf
test
mov
popa
mov
xlat
popl
in
scas
adc
rolb
and
push
addl
push
pop
mov
fwait
je
jmp
es
mov
push
jg
dec
daa
lcall
addb
cmp
shll
jns
test
dec
dec
cmc
ret
stc
fwait
xchg
adc
seta
loop
cmp
aaa
mov
push
test
lock
pop
xchg
mov
or
daa
arpl
or
and
loop
xchg
lock
xchg
adc
clc
mov
pop
jl
inc
sub
ret
clc
dec
repnz
rcl
lea
and
sbb
gs
mov
mov
lods
andl
and
push
nop
push
lea
mov
adc
jns
iret
pop
sub
push
mov
repz
fs
mov
pop
add
mov
rcll
add
jbe
aam
sbb
jecxz
mov
shll
jecxz
adc
dec
xlat
inc
mov
test
int
lret
jns
sub
pop
and
and
stos
cmpsb
scas
jb
sub
dec
sahf
pop
inc
cmp
push
imul
mov
dec
rcrb
rol
adc
popa
insl
xchg
rcrl
jno
scas
push
ja
popf
shlb
int
xchg
movsl
dec
lret
adc
jo
or
mov
les
nop
pop
mov
mov
aad
ljmp
js
and
jne
shlb
loope
sbb
nop
push
xchg
xor
addr16
je
mov
fiadds
or
lahf
leave
and
cmp
call
push
jl
cmp
cltd
xchg
movd
sbb
test
scas
add
call
dec
dec
dec
add
mov
push
mov
pop
test
imul
loopne
movsl
add
jmp
loopne
cmc
add
adc
pop
dec
mov
push
aaa
add
dec
jbe
aam
push
adc
inc
xchg
push
je
pop
mov
clc
mov
dec
icebp
jne
add
add
adc
sbb
jno
sub
jg
test
loope
outsb
lods
and
gs
roll
jecxz
adc
or
out
or
pop
testb
push
xor
ljmp
xor
aad
mov
iret
pop
hlt
int3
lea
sarl
mov
push
push
mov
adc
inc
pop
jg
dec
shll
test
dec
cmp
mov
push
pusha
xchg
sbb
add
push
enter
sbb
fisttpll
lds
adc
sub
lcall
adc
inc
pop
xor
out
outsl
xchg
les
adc
xchg
cmpsl
loop
sbb
std
jo
mov
adc
dec
arpl
jg
xchg
and
xor
aad
jne
jo
loopne
jmp
sbb
rcl
lock
adc
jmp
sbb
xchg
int3
dec
mov
fidivrl
jno
add
adc
rcrl
and
mov
adc
sbb
fstl
icebp
test
ret
xor
xchg
cmc
mov
or
dec
ret
add
stos
mov
or
je
fs
pop
es
hlt
cmpl
push
stos
movsb
xadd
in
ret
pushf
sub
stos
lcall
jns
mov
and
add
inc
cwtl
push
cmp
xor
fwait
or
sbb
movsl
stos
jge
adc
lahf
and
mov
dec
insl
in
inc
sbb
sbb
cltd
test
rcrl
cmc
cmp
popa
adc
lea
imul
movsl
inc
lea
stc
push
push
inc
dec
insb
sub
adc
jb
jge
push
jo
add
ja
and
leave
in
inc
add
sub
popf
adc
xor
cmc
movsl
mov
mov
nop
pusha
cmp
push
sbb
push
xchg
adc
neg
pusha
mov
mov
inc
jo
ret
and
add
mov
js
sub
or
sbb
cmp
test
test
or
mov
aad
add
popa
loop
pop
sub
xchg
cltd
mov
sahf
push
test
mov
div
dec
imul
add
ret
xchg
mov
dec
jmp
push
and
or
aas
gs
loop
addb
arpl
aad
push
std
fadds
jecxz
loopne
aam
leave
fisttps
imul
stos
lret
test
enter
jb
inc
ret
hlt
pop
sub
mov
imul
mov
int
mov
sbb
cltd
push
fildl
pop
add
xor
xlat
out
or
addb
dec
cmp
jno
mov
stos
add
stc
fildll
shlb
aaa
out
push
mov
rclb
outsl
int
test
shlb
cmp
rolb
das
fwait
in
test
push
xchg
dec
push
or
push
pop
xor
call
and
xchg
aad
std
mov
fiaddl
mov
mov
push
sbb
dec
xchg
lock
pop
insl
sub
jmp
sbb
movsl
add
xor
into
adc
jmp
subl
addb
jmp
stos
jmp
movsb
ljmp
dec
inc
ljmp
cltd
imul
push
push
mov
gs
lock
or
xor
jmp
push
adc
aaa
rcl
mov
mov
inc
lods
dec
push
shll
sbb
fdivrs
das
pop
jne
rcrb
mov
lret
lea
sbb
mov
insl
adc
stc
andb
adc
dec
nop
jns
in
jmp
xor
pop
jmp
sub
push
out
ret
adc
test
pop
test
add
aaa
insl
int
imul
sbb
mov
movsl
clc
cmp
lea
mulb
andb
cwtl
scas
mov
mov
ret
test
mov
jecxz
mov
movaps
pop
pop
cmpb
sbb
or
pusha
add
test
push
jbe
in
dec
mov
or
insb
or
push
sbb
mov
sbb
dec
sub
insl
gs
push
mov
pop
add
scas
adc
mov
xchg
sub
repz
push
sbb
gs
cmp
ds
sbb
inc
xor
adc
mov
xor
pushf
fs
movl
cltd
mov
sarl
pop
icebp
ror
adc
pop
lret
cmp
adc
mov
xor
iret
mov
pop
xchg
cmp
add
in
clc
je
stc
mov
xlat
inc
vandnps
imul
lock
push
ret
pop
bnd
push
cmp
mov
int
loope
xor
cmp
push
lea
dec
xlat
inc
pop
inc
push
xlat
sbb
sub
ds
mov
loop
mov
lods
jg
sbb
mov
loop
aad
push
add
sbb
es
dec
test
pop
dec
xchg
push
gs
js
data16
jnp
xchg
mov
cltd
jae
les
pop
aad
dec
or
addr16
mov
sbb
out
pop
in
fdiv
jo
inc
sub
push
adc
movsl
loop
jns
fidivrl
aad
inc
js
rorb
adc
loope
xchg
daa
pop
out
and
popa
call
insl
sbb
nop
xchg
mov
call
rcll
xorb
inc
fsubr
sbb
pop
and
adc
dec
jnp
add
pop
testb
and
mov
icebp
ljmp
mov
pop
aad
mov
sbb
rolb
mov
dec
mov
ret
js
jne
dec
loopne
lock
and
push
mov
pop
xor
stos
adc
cmpsl
adc
aaa
lods
icebp
in
xor
mov
mov
aas
push
pop
xchg
test
scas
in
pop
mov
or
jbe
mov
dec
xchg
mov
or
xlat
sub
xchg
loop
scas
les
test
loop
dec
sbb
fistl
imul
and
push
scas
sub
push
gs
fs
inc
ja
jl
jo
push
mov
inc
shll
cli
popa
mov
adc
je
fidivl
fsubl
and
scas
jecxz
cmp
int3
xchg
mov
fidivrs
cmpsb
adc
dec
or
mov
jge
nop
lret
xor
mov
fsubp
adc
mov
pop
mov
push
scas
inc
loopne
sbb
imul
adc
push
popa
icebp
sbbb
cmp
add
daa
adc
xchg
pop
dec
jmp
mov
add
mov
or
mov
push
std
mov
mov
jne
movsb
sbb
jp
jle
push
and
cmpsb
push
cmp
mov
stos
vmovddup
dec
mov
mov
cmc
cmpsb
pusha
adc
sbb
cmp
xchg
loope
inc
inc
adc
jge
shlb
inc
or
sub
mov
test
imul
push
mov
mov
cmpsl
sbb
popa
repnz
test
xchg
push
mov
dec
sub
fcomi
push
aaa
xor
pop
xchg
loope
faddp
shlb
addb
test
outsb
loopne
dec
cmpsl
jecxz
jmp
mov
pusha
test
cs
popf
inc
xlat
mov
cmp
imul
mov
adc
imul
or
jae
ds
xlat
repz
std
xchg
mov
das
int
sahf
mov
lret
push
sub
and
sbb
or
subb
xor
jno
pop
xchg
mov
xorl
adc
loope
xlat
and
adc
es
sbb
xor
mov
adc
cmpsl
adc
push
cmp
xor
outsl
stos
movl
xchg
dec
mov
cwtl
xchg
cmp
pop
sub
arpl
mov
scas
dec
ret
stos
je
out
scas
std
push
hlt
shl
movsl
mov
movsb
xchg
push
inc
es
repz
mov
cmpsl
pop
mov
jp
cmpb
inc
jb
cli
mov
pop
out
pop
xor
sti
jnp
jl
mov
adcb
dec
or
or
inc
stos
xchg
ds
fwait
pop
push
jecxz
fwait
dec
pop
inc
rcl
addr16
fistpll
and
rcrl
out
test
or
lods
jmp
pop
lds
cmp
sbb
aaa
movsb
dec
mov
add
pop
in
jbe
popw
jnp
mov
divb
lret
push
xchg
and
sbb
loope
jne
pop
push
pop
clc
test
sub
jl
jmp
mov
add
nop
jge
xchg
and
push
imul
xlat
test
push
insl
mov
push
mov
fwait
sbb
mov
in
outsb
fwait
mov
inc
pushf
sub
int
inc
mov
xchg
out
insb
jp
mov
lock
lock
mov
cmp
pusha
add
cmpsb
mov
inc
int
enter
repnz
and
push
mov
lods
adc
inc
push
mov
dec
inc
xsave
xor
mov
lods
add
ret
loop
int
imul
sub
pop
sub
or
adc
mov
xor
pop
sub
push
or
adc
inc
in
mov
sbb
xchg
enter
push
sbb
lcall
add
or
mov
jbe
adc
std
jne
inc
sub
inc
inc
and
fwait
jmp
sub
testb
cmp
sbb
push
push
lods
outsl
jle
sub
or
mov
scas
or
sbb
pop
sti
sub
xchg
inc
xchg
xchg
cmp
cmpsb
sub
loop
insl
mov
sti
inc
bound
imul
ja
mov
pop
test
pusha
sbb
and
rolb
mov
sub
cwtl
loopne
sbb
fs
jle
jns
ret
test
shll
ss
cmpsb
scas
idivl
je
xchg
push
loope
cwtl
dec
ret
jne
add
push
sahf
add
add
loope
and
aaa
inc
fxch
pop
sub
inc
loopne
addl
sub
aas
push
pop
and
movsb
test
and
mov
addr16
cwtl
and
cltd
cmpsb
shll
sbb
imul
xor
sti
test
push
pop
pop
aam
adc
dec
in
ret
jmp
dec
hlt
test
out
xchg
cmp
push
xlat
lods
nop
sub
in
mov
adc
ficompl
jg
xchg
lcall
hlt
dec
popf
mov
repnz
lds
lock
dec
xor
adc
loope
fimull
jmp
xor
mov
and
mov
ret
sbb
jmp
jo
fistl
es
add
sbb
cmp
inc
dec
cmp
outsb
mov
inc
push
jno
add
mov
inc
adc
or
enter
scas
shrb
rcr
mov
leave
ret
mov
xchg
test
xchg
mov
mov
cld
pop
mov
jge
pop
scas
outsb
adc
mov
subl
mov
imul
mov
imul
aas
adc
test
inc
loope
ror
sub
or
lods
inc
mov
xor
fwait
dec
dec
adc
mov
mov
sbb
mov
pusha
decl
and
mov
jmp
and
add
popa
pop
aaa
xor
jg
insl
cmpsl
push
loop
xlat
fwait
sub
mov
or
cmp
sub
dec
scas
sub
js
movsl
inc
sub
jae
sbb
jge
pop
sub
xor
out
mov
pop
test
ret
fucomp
jmp
sbbl
pop
jmp
bound
and
imul
outsb
mov
dec
or
scas
or
fnsave
lods
or
flds
pusha
test
xor
fistps
jmp
sub
cltd
jns
inc
add
rcr
push
push
out
cwtl
xchg
inc
add
adc
mov
aad
push
push
std
xchg
mov
sbb
push
jmp
push
adc
add
sbb
les
dec
xlat
sub
aad
push
test
loopne
addr16
mov
popa
pusha
inc
sub
mov
leave
dec
dec
cmp
sbb
xor
movsb
popa
cwtl
push
cmp
fistps
sub
out
push
mov
xchg
test
add
sbb
outsb
mov
xor
sbb
inc
popf
mov
dec
das
jns
daa
in
mov
push
in
xor
cmp
aas
mov
sbb
sbb
jns
imul
push
into
fists
and
xchg
lret
arpl
mov
and
pop
sub
and
and
jbe
adc
pushf
xor
fiaddl
sbb
sbb
test
pushf
jmp
icebp
push
or
rcrl
or
es
ret
pop
jecxz
xchg
push
add
insl
dec
xlat
test
ret
rcrl
xchg
cmp
inc
push
mov
mov
xlat
jae
mov
mov
jecxz
mov
xor
or
pop
mov
or
sbb
imul
popa
push
pop
dec
fdivl
sarb
jbe
lods
mov
jnp
mov
fs
lahf
scas
imul
sub
adc
mov
cld
je
inc
adc
or
mov
mov
or
cltd
dec
dec
jmp
shll
leave
pop
mov
adcb
push
int
pop
or
lods
sub
pop
loopne
pop
cmp
jl
push
push
add
push
xor
mov
clc
jb
push
sarl
ss
pop
sbb
dec
inc
filds
cmp
xor
pop
cmp
add
es
scas
inc
pop
dec
fldcw
shl
shlb
cmpsb
popf
iret
add
pop
popa
pop
mov
jl
iret
push
sbb
adc
sub
das
mov
adc
stos
out
dec
dec
lods
xlat
cmp
jne
xor
das
inc
out
mov
ja
pop
es
mov
imul
push
or
inc
mov
add
xchg
push
mov
sti
adc
sbb
xor
in
mov
shlb
mov
mov
xchg
push
imul
push
push
push
jb
aas
xor
mov
leave
jno
in
dec
dec
decb
sub
add
sub
push
push
cmpb
pop
mov
andb
push
and
xchg
mov
daa
jno
pop
jne
adc
inc
jo
movsl
lock
cld
add
add
inc
rcr
ret
inc
dec
movl
shlb
or
mov
sbb
pusha
mov
cmpsb
in
loop
xor
pop
cmc
mov
jmp
test
xlat
movsb
aam
aaa
cmp
xlat
test
xchg
push
pop
adc
push
inc
xchg
sbbl
popa
push
cltd
fs
push
or
mov
outsl
dec
cmp
mov
rclb
jne
cmp
adc
loopne
and
add
jnp
jae
stos
ds
setno
add
push
xor
jo
in
popa
jmp
inc
loopne
and
xchg
add
mov
loope
add
sbb
fildl
mov
and
fisubl
mov
cmpb
inc
into
inc
movsl
ret
mov
pop
movsl
and
push
test
insb
jno
mov
cs
cwtl
mov
loopne
dec
pop
outsb
mov
cmp
add
xchg
popf
push
test
daa
js
sbb
leave
outsb
xlat
add
pusha
mov
shlb
iret
aam
or
and
ret
dec
out
mov
add
jne
idivl
add
xor
jg
add
push
xor
movsl
aad
cmp
call
sbb
inc
add
xchg
add
add
les
and
xlat
sub
lds
shlb
sub
inc
adc
cs
adc
cmc
sarl
adcb
icebp
lea
test
or
xchg
cmp
js
div
in
hlt
movd
subl
popa
pop
test
and
std
jl
cmc
cmp
fstpl
and
adc
jae
cmpsl
xorb
mov
dec
lsl
and
test
stos
push
arpl
add
adc
mov
mov
dec
mov
add
scas
loop
addl
adc
dec
adc
cmp
mov
dec
xchg
ss
leave
aam
rcrb
jge
outsl
xlat
aaa
shlb
enter
ljmp
cmp
dec
and
inc
test
xor
enter
data16
loope
adc
pop
orl
and
adc
shrl
sub
test
push
xlat
mov
xlat
adc
jle
add
sahf
pop
sti
adc
inc
mov
mov
mov
pop
es
fdiv
xchg
lock
xchg
push
in
cmp
popa
hlt
lcall
xchg
dec
push
insl
and
xor
or
push
popf
or
inc
mov
inc
das
movsl
push
jnp
mov
sub
jp
sarl
leave
xchg
jno
fs
sbb
jg
enter
pop
add
mov
lds
rorb
xchg
sub
push
xor
xchg
push
cltd
jecxz
mov
mov
sar
ds
cmc
adc
sub
cli
mov
pop
lcall
jo
mov
lds
push
mov
in
cmp
mov
movsb
loop
mov
lods
adc
je
cmpsl
in
lcall
adc
pop
push
and
in
cmpsl
jle
sbb
test
and
inc
subl
call
xchg
fadds
adc
out
pop
and
mov
jo
lret
les
mov
mov
dec
or
and
push
jl
je
adcl
daa
popa
leave
jo
push
xorl
push
pop
xor
insl
or
mov
arpl
inc
mov
or
add
and
push
inc
in
jno
andl
lock
jp
or
dec
push
imul
int3
lock
cmp
cmp
xor
jno
cmp
lds
sbbl
adc
stos
adc
add
scas
mov
jge
push
daa
push
cmp
rolb
add
loope
shll
pop
jecxz
dec
dec
cmc
lock
out
add
push
pop
repnz
sti
outsb
ljmp
jne
inc
cmp
push
lret
push
les
aaa
xchg
mov
jle
lcall
add
jb
jb
mov
es
sarl
xchg
push
cmc
out
je
popa
mov
xor
test
xchg
mov
add
clc
mov
cmc
push
jle
lcall
xchg
ret
repz
or
std
mov
add
pop
cmp
cmpsb
lret
sub
sbb
sbb
mov
das
adc
iretw
xor
jno
and
lea
jnp
in
push
mov
mov
jp
sub
xor
jecxz
mov
adc
mov
js
test
jno
test
adc
or
jno
ror
lea
shlb
insb
add
mov
sub
inc
inc
jo
sbb
mov
pop
jae
popl
dec
movsl
or
xor
stc
jecxz
scas
rorb
loope
jae
pop
xchg
icebp
icebp
add
imul
ret
jbe
ret
push
cltd
out
popa
in
add
adc
in
lret
push
or
cmp
nop
cs
pop
rorl
push
mov
mov
lcall
rcrl
lahf
faddp
sub
aad
and
in
xchg
std
psubsb
outsb
loop
decb
movsb
sbb
in
sub
imul
mov
xor
push
rolb
inc
mov
lcall
scas
sub
out
bound
dec
aad
add
mov
fnstenv
inc
insb
xor
dec
mov
or
je
fwait
es
cmpsb
fwait
ror
inc
lods
push
sbb
lret
lods
inc
dec
pop
mov
aam
cmp
pop
inc
je
pop
imul
fistl
push
repnz
xchg
jne
call
cltd
sti
imul
sbbl
or
add
test
mov
xor
icebp
lods
adc
add
adc
fwait
sbb
pop
insb
xor
imul
movsb
adc
cwtl
dec
push
repz
xchg
jne
enter
out
cwtl
stc
or
push
mov
sub
mov
add
adc
adc
imul
and
cmc
pop
mov
sbb
iret
icebp
pop
subb
xchg
repnz
mov
imul
xchg
cwtl
cltd
pop
inc
xchg
xchg
cmpsb
cmp
es
daa
ficomps
lock
and
shrl
je
jle
xchg
into
and
xor
cmp
jno
adc
dec
xor
je
les
loop
push
sub
movq
movsb
mov
jg
loope
inc
popa
inc
dec
fwait
mov
je
mov
or
lcall
aaa
loop
fbld
ret
in
rcrb
or
xor
ja
xchg
test
and
mov
fnstcw
push
dec
xchg
cmpsb
pop
mov
jnp
xor
jo
aam
inc
loope
xchg
int
push
sub
pop
add
fnstenv
sub
push
gs
and
mov
xor
movb
outsb
pop
add
dec
xchg
mov
pop
dec
out
cmp
js
jb
xchg
es
add
std
xchg
and
push
loope
or
je
xchg
mov
leave
mov
sub
xchg
pop
xchg
movsb
adc
ja
mov
dec
mov
dec
loop
pushf
scas
rorl
fcomip
lock
dec
cmp
push
adcl
je
loope
jno
and
add
icebp
aam
xlat
add
mov
cmp
aad
jns
xor
jb
je
jo
pop
adc
icebp
imul
jno
jno
or
imul
push
hlt
scas
dec
mov
sbb
out
js
std
xor
adc
nop
loope
push
jmp
sbb
movsl
lods
push
gs
popf
cmp
mov
outsb
enter
or
cmp
outsl
cmp
xchg
nop
jecxz
jnp
test
push
xchg
lods
loopne
push
jecxz
push
adc
dec
pop
or
cmp
popa
orl
mov
push
hlt
cmp
mov
leave
jo
and
cmp
jnp
inc
xchg
das
lods
xchg
mov
pop
popf
aad
pop
xor
and
push
imul
and
je
jl
mov
ret
jg
xor
arpl
xor
loope
stos
or
sub
cmc
fdivs
xor
sbb
addr16
out
and
pop
fs
add
cmc
mov
mov
cmp
push
mov
adc
repz
xor
and
or
xor
lret
inc
pop
shll
cwtl
mov
or
frstor
jbe
mov
adc
imull
sbb
push
test
je
mov
push
push
pop
xlat
pop
imul
inc
jo
sub
dec
cmp
fnsave
push
dec
mov
movsl
and
push
push
inc
inc
pop
mov
xchg
scas
adc
mov
sub
pop
mov
jne
or
pop
sub
xchg
jmp
sub
sbb
sbb
out
xor
inc
mov
lea
imul
cmp
jmp
in
sbb
flds
inc
mov
outsl
js
test
or
mov
xchg
push
mov
mov
enter
dec
addl
and
loope
jle
or
mov
xor
mov
xor
adc
outsl
mov
mov
pop
and
xor
push
shlb
lods
push
xor
jle
std
mov
cltd
stos
loop
movsl
scas
add
jp
inc
cmpsl
popf
cmpsl
insb
aam
arpl
inc
leave
jle
pusha
or
scas
jmp
ljmp
xor
icebp
and
mov
fistpll
xchg
add
imul
fbstp
dec
mov
mov
jae
lds
dec
xchg
xorb
fcomi
jp
or
les
call
or
call
fwait
adc
jns
adc
push
mov
mov
das
adc
adc
lahf
xchg
mov
inc
sahf
dec
push
push
push
and
add
popa
and
cmp
inc
mov
mov
daa
out
sub
mov
push
push
loope
sub
xlat
inc
mov
mov
outsl
pushf
mov
jne
xchg
xchg
sub
icebp
xchg
inc
ret
mov
jg
inc
xor
test
jmp
jmp
push
inc
call
jae
adc
pop
popa
shll
fbld
add
jno
sti
mov
test
jmp
push
lods
and
adc
xor
ret
cltd
jne
adc
sbb
int
or
aas
lods
sub
and
fstps
push
cmp
mov
arpl
adc
lds
mov
jno
pop
adcl
sub
add
sub
loop
and
popa
test
lret
lea
je
xor
mov
lahf
jae
mov
mov
fwait
mov
pusha
xor
sti
loopne
xchg
add
xor
dec
jae
jp
outsb
mov
xchg
sbb
cmp
mov
add
sub
and
ret
dec
pop
loope
mov
es
xor
dec
dec
movsl
adc
bound
xchg
int
dec
lods
fstpl
loopne
jecxz
test
or
jbe
cmc
jge
rclb
jmp
push
std
mov
js
subl
push
lcall
or
mov
pop
push
pop
jbe
add
lret
push
out
mov
iret
sub
lds
xor
or
imul
push
iretw
inc
movzbl
sbb
jne
xchg
xor
and
mov
sti
jno
aam
mov
popf
cmp
add
aaa
jg
pop
pop
push
mov
mov
push
add
and
mov
insb
pop
or
daa
pop
rorb
and
mov
xor
jmp
shlb
pusha
les
lods
out
sbb
ljmp
jge
outsb
push
dec
je
dec
lret
ret
andb
or
and
or
movsb
jecxz
daa
dec
and
mov
repnz
imul
or
cmp
xor
cmp
jecxz
nop
loopne
lret
jecxz
xlat
test
std
mov
pop
mov
and
mov
cltd
vpsubw
cmp
sar
inc
push
loope
cltd
mov
pop
push
int
mov
negb
jl
jle
mov
call
inc
loop
movsb
fstpt
enter
lcall
or
ljmp
cltd
out
add
push
cmpsl
lcall
inc
cmpsb
or
add
inc
outsl
pop
lea
jmp
adc
xorb
push
or
mov
shlb
jne
pusha
bound
mov
xlat
aas
add
aam
mov
inc
hlt
push
mov
icebp
mov
loop
sub
push
or
lcall
mov
add
mov
or
mov
xor
fwait
push
mov
jbe
aad
inc
add
cmpsb
jmp
pop
jmp
xor
inc
stos
or
and
out
orb
jmp
add
sub
shll
outsb
adc
lcall
jo
xchg
push
dec
faddl
negl
out
dec
jae
aad
or
dec
xchg
sbb
pop
xor
mov
push
jge
lds
popf
push
into
inc
pop
es
sub
sbb
cmc
popf
jecxz
xchg
xorb
jbe
xor
pushf
and
test
sub
cmp
dec
mov
in
jne
stos
test
call
xchg
sbb
push
or
adc
popa
adc
mov
data16
cs
add
cmpsl
and
push
and
add
imul
sbb
xchg
mov
fbld
js
mov
int
cmpsb
adc
mov
push
sbb
inc
jp
adc
and
stos
mov
jl
je
bound
hlt
push
pop
inc
add
xchg
loope
in
mov
sbb
test
lods
ljmp
xor
in
fwait
pop
stos
dec
xor
jmp
xor
push
inc
sub
mov
or
outsl
mov
and
jbe
jge
and
mov
inc
xor
xchg
mov
popa
mov
sub
mov
ja
jmp
sub
push
aad
shlb
dec
ja
fcom
imul
imul
bound
jo
mov
add
xlat
or
mov
add
ret
add
push
fwait
xor
mov
adc
cmp
leave
pop
xor
push
and
dec
cmp
xor
mov
scas
add
xchg
jo
xor
add
lods
push
xchg
cmp
ja
rcll
xchg
inc
cltd
xor
fisubrl
test
aaa
orl
push
rorl
push
or
add
pop
jae
xchg
ss
xor
retw
xchg
outsb
repz
pop
add
adc
inc
test
fsts
add
imul
cld
inc
mov
ret
or
push
in
adc
inc
add
icebp
adc
ret
add
adc
test
sub
inc
adc
dec
sbb
mov
loope
adcb
add
lods
cld
push
push
pop
inc
sbb
sub
or
pop
add
lcall
push
adc
aam
adc
popa
jle
test
adc
outsb
add
and
fistps
hlt
rcll
mov
loopne
dec
jbe
rclb
in
sub
xor
xchg
mov
cli
insb
std
mov
sbbl
inc
add
mov
xchg
push
xchg
or
aas
clc
mov
sub
push
shlb
push
cmp
mov
cld
leave
inc
inc
mov
xor
jo
inc
les
xor
inc
push
add
push
call
clc
push
add
sub
int3
and
addl
inc
adc
push
shlb
or
jp
add
mov
cmp
add
and
xor
jl
inc
mov
ror
rolb
pop
push
sbb
dec
adc
pop
mov
out
leave
mov
push
inc
push
xchg
je
dec
dec
add
leave
in
add
aas
outsl
or
test
cli
and
in
jnp
dec
push
dec
mov
arpl
jo
cmp
mov
iret
es
inc
xor
mov
sub
mov
lahf
push
subb
roll
xor
mov
shlb
js
push
xor
imul
add
ja
or
mov
scas
popl
sbb
push
or
xor
cmp
inc
leave
repz
aaa
popa
and
sub
mov
pop
icebp
out
push
pop
sbb
fimuls
out
push
sarl
outsl
out
cmpsl
inc
lret
bound
dec
push
jbe
sub
fsts
cli
das
or
mov
inc
jg
add
inc
adc
dec
pop
inc
jb
jmp
push
je
inc
push
xlat
and
repnz
cld
push
je
in
das
jo
xor
repnz
or
xor
dec
add
sub
inc
add
je
lea
pop
outsl
xchg
loopne
add
in
push
push
jmp
xor
inc
lahf
mov
dec
adc
mov
jbe
dec
imul
add
dec
pop
insl
xor
dec
dec
pop
ss
test
dec
outsl
mov
outsl
movl
mov
inc
add
xor
inc
movsl
sub
in
rcrb
inc
aam
inc
mov
dec
dec
inc
and
pop
test
cli
xor
add
jne
inc
cmp
outsl
adc
push
popa
jo
in
pop
jl
mov
out
fiaddl
jns
jg
lods
xor
adc
mov
popa
inc
lods
aaa
pushl
pusha
push
repnz
push
adc
pusha
push
notl
add
jg
and
jns
dec
dec
mov
fs
pop
pop
aas
mov
inc
jno
aaa
xchg
pop
notl
dec
pop
pop
pop
in
in
popf
in
nop
dec
idivl
xor
pushf
xor
and
or
push
add
push
data16
push
lcall
test
push
add
mov
inc
inc
and
sbb
add
in
and
push
adc
ss
mov
add
mov
xor
mov
inc
jl
dec
lds
add
cmc
outsl
adc
push
mov
arpl
clc
orl
pop
xchg
add
xorb
shlb
inc
push
mov
or
dec
cmp
inc
add
paddq
mov
mov
dec
push
pusha
lret
mov
push
ss
clc
arpl
mov
push
jbe
ljmp
rorl
xchg
stc
mov
add
pop
or
shrl
sbb
imul
cld
loopne
add
shlb
lods
inc
push
data16
out
jg
push
pusha
rorb
cmp
mov
cmp
into
and
dec
xchg
sbb
dec
dec
jno
or
pop
cmp
sarl
js
jbe
stos
js
data16
xor
jns
sbb
daa
cld
adc
xchg
dec
pop
mov
mov
push
jo
mov
mov
imul
inc
lock
xor
dec
sbb
push
das
pop
cmp
pop
dec
add
push
sub
sbb
cld
push
arpl
mov
and
jbe
ljmp
hlt
jae
test
ljmp
inc
arpl
pop
lock
dec
jo
fidivrl
rcrl
jl
pop
or
push
fcoms
arpl
add
jecxz
push
dec
add
and
repnz
push
ds
mov
loop
adc
push
inc
push
ficoms
mov
push
jp
push
jb
inc
sub
call
ss
aaa
inc
push
dec
xor
js
mov
and
jo
push
jge
add
outsl
bound
pop
dec
test
out
ljmp
jb
xor
subl
dec
push
fimuls
cmp
inc
push
adc
inc
fs
loopne
cmpsl
xor
push
inc
pop
fnstenv
add
add
push
out
lret
push
or
mov
mov
xor
fs
add
inc
adc
icebp
mov
or
ret
mov
push
dec
pop
push
ja
jne
push
push
fidivs
push
hlt
loopne
ja
xor
push
mov
add
ja
cli
imul
jno
sbb
dec
jb
inc
push
adc
lock
sti
sbb
jle
out
sub
data16
cmp
outsl
xorb
mov
ljmp
xlat
jns
imul
test
roll
test
subl
push
jmp
dec
xor
clc
inc
inc
dec
push
aam
sbb
pop
loop
punpckldq
push
sub
sbb
sub
push
stos
lock
data16
fs
loopne
daa
movsb
addr16
push
int
mov
push
inc
xor
bound
add
dec
pop
cld
mov
outsb
push
lret
sbb
fiaddl
inc
or
add
sub
fnstenv
aam
icebp
pop
cmpl
lock
xor
dec
sbb
push
add
inc
cmp
add
dec
lock
popf
loopne
or
sbb
jno
add
ret
fs
ja
mov
push
sub
iret
mov
stos
dec
pop
mov
mov
inc
mov
xor
or
mov
or
dec
mov
sbb
xor
ret
ficoml
inc
pop
xor
adc
mov
mov
pop
imul
dec
mov
popa
xor
ljmp
leave
les
lock
daa
inc
popf
jmp
loop
je
pop
scas
cmpsl
insl
icebp
sbb
stos
mov
dec
cwtl
aad
sub
stos
popf
call
push
inc
inc
fs
xchg
adc
call
xor
jo
push
call
gs
dec
gs
addr16
scas
pusha
stos
aas
fdivrl
xor
aaa
inc
dec
add
jbe
dec
jne
xor
out
call
pop
mov
and
mov
adc
sub
jbe
jge
pusha
jbe,pt
aaa
inc
mov
stos
testb
je
xor
xor
cli
ss
dec
cs
sub
xchg
sub
fdivl
jbe
or
fs
pop
inc
add
cs
decl
push
ja
lock
iret
fs
inc
push
add
push
mov
cmpsl
call
and
clc
sbb
dec
add
cmc
cmpsl
fsubs
push
xlat
dec
mov
fmuls
sbb
jo
jns
sbb
mov
push
push
mov
xor
adc
mov
loopne
stos
test
push
movl
xchg
push
popa
insb
add
add
test
jne
out
or
pusha
dec
outsb
dec
xchg
sbb
ret
jge
lock
mov
inc
pop
mov
push
insb
inc
jbe
add
xorb
scas
push
jns
inc
add
and
sub
jne
xor
and
jge
add
push
inc
call
pop
xor
jbe
jl
mov
sub
jb
daa
fidivs
jle
xchg
ds
nop
arpl
push
xchg
mov
addl
cmp
imul
xchg
loopne
dec
adc
dec
mov
mov
jo
loopne
ja
outsb
std
mov
push
sbb
cmp
push
incb
jecxz
in
inc
pop
xor
data16
cmp
pop
enter
pop
sub
jg
cmpsb
or
enter
dec
sbb
or
jno
add
daa
loope
jmp
pushf
pop
xchg
pop
loopne
jmp
mov
lock
push
push
fwait
push
enter
push
push
jno
pop
mov
in
push
js
movq
jno
insb
xor
loop
jne
adc
loopne
enter
arpl
sub
inc
cmp
outsl
repz
ja
mov
push
inc
or
loope
arpl
add
inc
mov
ret
or
cmpsl
cmp
sub
decb
xor
clc
test
dec
pushl
cmp
or
fcompl
rolb
push
xchg
pop
push
sbb
mov
jno
mov
sbb
or
movsl
mov
jbe
movsl
and
lea
cmp
ss
ret
insl
js
fdivr
ljmp
sub
mov
mov
add
adc
inc
sub
adc
sbb
jecxz
adc
or
and
imul
inc
mov
int3
inc
pop
ss
lahf
in
push
fs
cmp
cvttps2pi
fldl
arpl
stc
ss
dec
sub
or
jne
dec
sub
rcll
add
and
pop
pop
inc
mov
dec
mov
and
push
jb
iret
xor
push
out
dec
add
cmp
add
mov
test
add
ljmp
push
dec
lock
sub
push
js
inc
dec
jecxz
push
xchg
fnstenv
mov
bound
cmc
sbb
insb
insl
shl
xor
popa
jle
push
pop
sahf
outsl
arpl
push
mov
test
pop
ret
nop
jb
daa
out
clc
jne
inc
add
inc
jns
js
out
or
jle
sbb
mov
mov
xchg
jo
out
inc
inc
pop
cmp
push
push
xchg
or
addr16
sbb
push
inc
insl
sub
add
loope
out
je
mov
push
add
loopne
ficomps
jne
push
popa
iret
call
jno
push
loopne
add
inc
leave
pop
aad
in
js
cld
fsubp
out
dec
dec
dec
dec
add
fwait
jne
aad
or
dec
inc
call
add
test
mov
push
mov
or
sbb
fs
pop
push
push
sbb
adc
je
loop
add
test
pop
sbbb
mov
aas
imul
fcomps
pop
cwtl
mov
js
xchg
cmp
lahf
test
sub
andb
adc
add
inc
call
stos
sbb
cwtl
test
mov
add
pop
test
mov
xor
mov
stc
inc
inc
mov
pop
imul
rcrl
add
data16
cmp
shr
insl
dec
sbb
scas
xchg
jecxz
cmc
or
je
stos
inc
iret
shl
imul
movsb
pop
xor
or
cmp
in
pop
gs
mov
pop
pop
and
shl
xor
sbb
faddp
lock
sbb
ficomps
inc
insb
mov
or
adc
mov
xchg
pop
inc
scas
pop
and
xchg
push
in
mov
popf
shrb
das
jle
adc
vunpckhps
and
stc
fmull
mov
lret
addr16
imul
sbb
stc
pop
jecxz
xchg
addr16
pop
lds
cmc
rcll
mov
xor
jle
inc
adc
xchg
mov
or
push
fwait
cmp
sbb
push
cmpsl
mov
icebp
inc
bound
cmpsl
inc
or
xor
jo
mov
xor
mov
stos
xchg
into
nop
shl
or
hlt
mov
outsl
sub
aad
inc
inc
scas
loop
in
or
push
bound
call
pop
push
mov
xchg
imul
xor
dec
push
or
xchg
mov
or
cmovl
sarb
jbe
test
cwtl
xchg
fbld
shlb
mov
mov
call
push
subb
jae
mov
cmp
leave
and
pop
or
in
inc
and
xor
ret
push
jo
xor
mov
cmp
push
mov
or
loop
or
jno
sti
es
in
lret
cmp
pop
xchg
icebp
xlat
push
xchg
mov
in
sub
loope
std
inc
ret
nop
push
and
lods
mov
jo
mov
push
pop
mov
and
add
xchg
in
insb
jecxz
call
imul
adc
out
andb
and
sub
lds
sub
push
subps
inc
jae
gs
sub
jge
adc
aaa
testl
rolb
lret
xor
jne
rcll
jns
push
pop
hlt
push
lock
add
inc
aam
sbb
cmpsl
mov
inc
inc
lcall
xor
xchg
imulb
push
je
cmpsb
lods
cli
mov
das
add
pop
dec
mov
jnp
dec
mov
dec
sbb
lret
movsl
or
or
pop
pop
push
cmp
loop
xor
leave
push
or
test
imul
in
sbb
outsl
scas
or
push
jl
dec
mov
xchg
je
orl
mov
loopne
in
or
cmp
mov
in
movsb
rcrb
icebp
pusha
inc
mov
stc
popf
sbb
outsb
xor
pop
mov
xorl
mov
mov
add
movsb
call
adc
scas
inc
sbb
sbb
cmp
stos
imul
scas
add
mov
cltd
jmp
xchg
andl
jmp
inc
mov
mov
xchg
sbb
cmpsb
dec
mov
pop
add
addl
or
aad
andl
mov
pop
jno
hlt
mov
andb
cmp
inc
pop
adc
sbbb
mov
mov
cmc
mov
pusha
xlat
xor
sbb
jne
and
adc
rclb
in
cmc
dec
cli
loope
jno
adc
mov
mov
test
push
sbb
mov
and
repnz
xchg
mov
cmp
xor
and
xchg
hlt
iret
adc
xchg
lock
xor
adc
jecxz
mov
cmp
adc
push
or
xchg
sbb
pop
shlb
xor
pop
hlt
call
pop
scas
repnz
add
push
mov
dec
or
sbb
gs
shll
nop
fimuls
jne
scas
mov
test
push
dec
jmp
cmpsl
lcall
stos
movsb
push
add
jo
dec
unpcklps
les
fucom
mov
inc
lds
ss
shlb
lods
push
jb
pop
dec
loope
mov
adc
loope
sbb
sub
dec
notb
in
and
xchg
out
or
dec
cld
inc
jmp
popl
push
sbb
and
adc
stos
js
add
jge
jno
sub
xchg
and
rcr
gs
jae
insb
xor
xchg
sbb
dec
les
adc
dec
cmp
xor
mov
sbb
fwait
pop
scas
into
ja
ja
int
es
nop
in
jne
test
mov
bound
dec
test
mov
push
leave
test
shr
shrl
jmp
xorl
mov
push
sbb
xchg
shrl
push
dec
add
stos
mov
int
stos
and
js
mov
rolb
inc
lret
push
cltd
aad
xor
add
xor
popa
stc
dec
jmp
iret
jp
jne
shlb
mov
push
mov
inc
add
shll
push
sbb
and
pusha
sbb
hlt
dec
push
insb
adc
or
fldenv
out
icebp
cmp
mov
push
xor
inc
push
icebp
out
cmp
call
aam
jmp
scas
cmp
stc
inc
bound
dec
imul
pusha
aad
jns
adc
cmpsl
rep
or
loop
int
push
pop
jl
stos
or
jne
mov
or
outsl
dec
add
ss
dec
sbbl
jp
xor
or
push
add
loopne
mov
ret
jns
dec
add
mov
cmp
lods
or
xor
mov
adc
cmc
jb
nop
test
or
mov
pop
test
xor
or
fidivrs
notl
push
cmp
push
cltd
fsubs
int3
je
mov
lret
mov
test
nop
xor
or
mov
int
dec
ret
rcrb
inc
inc
daa
jg
adc
push
sbb
sub
xor
icebp
push
test
xor
pop
in
rcrl
js
xor
ljmp
jo
xchg
cltd
sub
push
stos
xchg
cmpsl
pop
in
push
imul
lret
pop
xor
xor
int3
cmp
pop
in
dec
lahf
and
lds
mov
pop
add
je
fstp
andb
jmp
add
pushf
ror
pop
add
cmp
or
fxch
or
ss
wbinvd
mov
sbb
ds
sub
popa
fistl
cmc
xchg
insl
rcll
ds
dec
lea
popa
add
push
lahf
xchg
imul
jmp
dec
out
mov
sub
cs
pop
dec
jmp
scas
out
add
mov
or
adc
jno
adc
pusha
out
push
add
cwtl
je
adc
aaa
sub
xchg
mov
dec
add
fwait
ret
pop
and
stc
push
or
loope
testl
lock
loope
or
icebp
or
mov
into
out
and
jecxz
ja
pop
cwtl
lods
jecxz
fisttpll
popa
insl
mov
int
movsb
push
jne
lcall
in
sarl
js
add
push
imull
and
mov
dec
test
mov
leave
or
sub
ror
filds
push
out
xchg
and
ja
add
xchg
mov
pop
adc
lahf
adc
jno
pushf
add
aas
gs
xor
dec
push
lods
popa
scas
add
xor
push
ret
and
or
dec
lret
cmc
push
sbb
les
sub
xchg
push
test
mov
pusha
add
icebp
imul
and
add
jg
jg
push
jnp
xchg
shl
xchg
cmpsl
mov
push
push
movsl
shr
js,pn
shl
push
test
ret
and
xchg
xor
adc
movl
cwtl
pusha
add
sbb
icebp
add
sahf
mov
add
test
dec
pop
scas
jnp
cmp
test
jmp
sarl
nop
addb
popf
rcll
sub
mov
pusha
xor
adc
lret
jmp
push
mov
ret
and
jg
cmp
data16
dec
mov
hlt
push
sub
out
dec
arpl
adc
xchg
xor
cmpsb
rorl
and
iret
inc
push
pop
aaa
loopne
dec
lcall
jae
mov
leave
fwait
out
mov
dec
add
push
jge
and
push
push
pop
ja
cmp
sarb
sar
jmp
scas
aaa
fcomps
mov
inc
mov
stos
out
clc
std
mov
rcr
xor
sbb
fiadds
sbbb
mov
lea
pop
sub
int
lea
and
jne
jge
xorl
pop
or
lods
dec
rorl
jmp
pop
add
mov
inc
mov
ret
loop
call
sub
mov
xor
adc
jecxz
cwtl
inc
popw
jnp
adc
xor
sbb
clc
jns
inc
push
lods
pop
mov
fwait
out
sbb
lea
mov
sbb
lret
xchg
jl
jbe
mov
jp
inc
sub
sub
cmp
xor
lea
int
lods
xchg
cwtl
pop
sar
dec
lds
jmp
cmp
bound
js
pop
cmp
cltd
lods
push
xlat
cmpb
cmp
scas
gs
adc
xchg
repz
inc
push
xor
cmp
cmc
xchg
xchg
add
mov
pop
xor
sti
leave
jle
sbbb
loopne,pt
jo
sbb
sub
pop
lahf
mull
cmpsl
scas
jns
repz
xchg
push
jg
push
ret
addb
pushf
mov
mov
sbb
adc
push
repnz
daa
imul
lcall
add
xor
push
loope
xlat
aad
inc
dec
call
sub
in
mov
inc
jecxz
jmp
inc
add
or
mov
lds
movsl
push
sbb
adc
add
in
fs
xor
pop
mov
or
adc
or
jno
sbb
mov
cmp
lods
imul
xchg
mov
loopne
xor
frstor
inc
mov
call
bound
jl
sti
jne
jns
mov
lret
jp
mov
and
fidivrl
sahf
lahf
mov
mov
cmp
out
push
pop
mov
and
jo
jp
pop
repz
addr16
cmpsb
xchg
xchg
xchg
push
scas
dec
cwtl
mov
xorl
repnz
or
mov
inc
lcall
xorb
les
cmc
hlt
jecxz
leave
sbb
or
insb
pop
test
jg
add
fstpt
pop
outsl
insb
shll
sbbl
jmp
call
fisubrs
add
cwtl
dec
add
jbe
aas
aam
sub
in
inc
sbb
rorb
sub
dec
pop
adcl
roll
mov
lds
mov
out
pop
lea
pop
pop
scas
add
xor
lods
sub
cwtl
xchg
push
and
pop
xor
je
sbb
outsl
iret
adc
shrl
int
adc
dec
push
addl
lods
loop
enter
aad
inc
cmc
mov
clc
xor
pop
loopne
shrl
jmp
jo
orl
rorb
aaa
push
xor
or
roll
pop
lods
inc
xlat
mull
mov
add
lret
mov
dec
mov
pop
mov
dec
dec
xor
push
orb
jnp
iret
shll
adc
mov
in
sub
xlat
push
xchg
mov
lods
add
fwait
adcb
xor
sbb
insb
dec
lock
mov
xor
or
loop
or
add
jmp
shl
push
push
into
sbb
inc
lcall
insl
imul
lds
push
mov
pop
orb
push
loope
aaa
loope
leave
lcall
fwait
xor
pop
push
and
movnti
xor
or
push
mov
cli
push
into
call
mov
bound
insl
dec
into
pushf
mov
lock
cmp
movsb
lret
push
dec
sub
mov
add
repz
xor
and
and
inc
pop
fstl
cmpl
cwtl
stc
iret
shl
lods
xlat
jmp
popf
lods
cmp
mov
rcrb
inc
inc
add
fidivs
mov
loop
or
xchg
pop
inc
sbb
cmc
cmp
roll
push
xchg
ljmp
arpl
and
pop
test
jno
cs
cmpsb
hlt
call
rorb
xchg
cmc
dec
rol
popf
mov
mov
aad
mov
xor
stos
and
movsl
fadd
sub
ret
mov
pop
test
movswl
xchg
sub
sbb
mov
mov
sarb
test
jmp
inc
mov
jno
sbb
jb
inc
push
lds
xor
xchg
mov
pop
lret
stos
rcrb
sub
aam
roll
cwtl
push
push
movsb
imul
mov
cwtl
mov
xor
and
nop
outsl
pop
aam
pop
xor
test
cmp
pop
jns
mov
jge
and
test
and
ret
sbb
or
push
test
and
mov
je
test
divl
inc
inc
out
test
xchg
pop
arpl
scas
mov
stos
xor
adc
cmp
int
and
dec
fldt
pop
xchg
push
xchg
or
sub
fdivrs
ljmp
imul
inc
gs
fldenv
pop
mov
add
movsl
mov
mov
xor
dec
push
pop
outsb
adc
es
dec
lea
dec
daa
xor
adc
jns
jle
push
adc
bt
rclb
sbb
leave
push
sub
cwtl
js
test
arpl
adc
xchg
cmc
mov
add
movsb
pop
sub
push
pop
push
js
push
cmp
arpl
out
mov
scas
fwait
jge
or
enter
cmp
scas
xor
aas
push
inc
and
xchg
cwtl
push
bound
sbb
in
cmp
sub
ret
dec
sub
add
cmp
insb
adc
xor
xor
mov
mov
mov
pop
inc
dec
fimuls
lods
in
pop
push
test
popa
rol
jmp
push
xchg
jmp
add
xor
sbb
inc
xor
roll
rorl
mov
imul
subl
push
inc
and
or
add
inc
jne
ljmp
andl
mov
adc
mov
sbb
les
lods
push
cmp
jns
jmp
fdivrs
jmp
inc
mov
arpl
int
add
dec
shr
stos
xor
rorl
mov
outsl
loop
jo
sub
lods
lret
aad
jge
inc
loopne
clc
adc
sbbb
bound
nop
int
aaa
mov
dec
sbb
xchg
les
mov
lds
lret
push
subl
andb
add
jno
push
inc
dec
mov
adc
lea
cs
sbb
adc
xor
mov
jmp
jecxz
xor
pop
iret
add
pop
xchg
mov
jl
call
mov
stos
adc
jmp
int
inc
loop
dec
inc
push
repz
inc
jecxz
mov
jo
ss
mov
icebp
outsl
pop
stos
adc
push
push
jmp
aas
adc
repz
sbb
out
pop
pusha
xor
and
and
sbb
dec
jae
in
jl
inc
xchg
and
addr16
roll
cmp
push
jp
test
aam
xchg
inc
mov
and
xchg
mov
pop
imul
sbb
shll
and
xor
shll
inc
push
jb
pop
mov
jmp
and
popf
gs
add
sbb
adc
xor
add
mov
test
fcmovnbe
and
ficoml
popf
in
addr16
hlt
sti
add
fcomi
sbb
ljmp
pop
repnz
insl
and
push
roll
xlat
push
int3
mov
xor
xchg
push
dec
mov
test
ret
nop
shr
push
mov
imul
adc
push
jbe
daa
in
or
cs
inc
aam
jp
jbe
inc
or
xor
lods
scas
pop
xchg
xor
xchg
ret
test
inc
fdivrl
jne
push
leave
dec
addr16
ss
pusha
sub
shlb
xchg
push
xor
adc
sub
dec
xchg
mov
dec
mov
push
ss
pop
xchg
sahf
pop
mov
mov
jbe
jg
mov
rol
ja
cltd
mov
imul
push
sbb
lahf
out
pop
add
inc
outsb
sbb
xor
pop
mov
pop
push
mov
jmp
lock
cmp
mov
daa
andb
pop
mov
jo
test
mov
push
inc
jecxz
dec
cs
push
lea
inc
frstor
outsl
test
stos
cmp
xchg
or
cmp
cmpsl
addr16
inc
xchg
push
in
mov
movsl
mov
mov
dec
adc
cs
xor
loop
adc
xor
lods
dec
aad
push
sub
cmp
stos
xor
lods
dec
inc
pushf
test
and
loope
je
inc
lock
lahf
in
jbe
sub
xor
loop
pop
clc
adc
int3
repz
movsb
orl
jno
dec
test
call
jmp
mov
sarl
sub
in
xchg
in
push
popa
and
or
iret
mov
call
test
xchg
xchg
pmulhw
push
mov
out
and
inc
pop
push
mov
add
pop
jno
ljmp
inc
sbb
inc
ficoml
rorl
insb
enter
test
cltd
push
xor
xchg
and
or
in
stos
jo
adc
cltd
test
mov
in
mov
in
outsl
or
or
push
rcll
adc
and
mov
jne
arpl
push
mov
lret
add
xor
or
mov
pop
ss
je
inc
push
mov
jg
test
adc
int3
sub
inc
testl
mov
sar
dec
add
inc
fistps
ret
or
jbe
cmp
cmp
push
aas
mov
call
imul
icebp
pop
test
mov
scas
mov
pop
movsl
into
std
aam
jne
rol
cmp
lds
xchg
jecxz
mov
cmp
mov
add
lods
pop
lahf
and
or
cltd
nop
and
add
inc
cmp
mov
rcl
push
xchg
dec
pop
pop
xlat
imul
sub
add
push
dec
enter
stc
sbb
hlt
add
jne
and
out
aas
xchg
xchg
or
push
mov
test
sbb
loope
add
mov
mov
push
and
test
dec
mov
das
cmp
lahf
movsl
xor
pop
ret
test
sub
mov
cwtl
test
in
pushf
xchg
cmp
and
scas
mov
pop
ljmp
arpl
pop
push
popa
shlb
dec
or
lock
or
adc
mov
pop
jb
std
mov
xor
int
jmp
xchg
loope
dec
fistps
mov
cmp
scas
and
popa
sub
sarl
ret
adc
mov
pushf
pop
adc
jl
xchg
lea
pop
ds
jg
loopne
mov
imul
mov
pop
shl
into
cmpsl
addl
jmp
add
xorl
das
and
jo
cltd
jnp
mov
ret
mov
pop
push
jle
xchg
lods
movsb
mov
loopne
xor
inc
mov
xchg
mov
int
popa
or
xchg
mov
pop
dec
mov
push
jle
xor
insl
ds
ret
test
in
das
sbb
pop
dec
stc
inc
repnz
aas
icebp
fwait
shrl
arpl
sbb
sbb
or
aaa
test
mov
lods
iret
out
fidivrs
scas
push
test
xchg
outsb
or
pop
lods
aas
sub
enter
xchg
jp
xchg
jo
pop
adc
jnp
mov
inc
daa
fdivl
push
mov
in
jae
hlt
push
movsl
mov
and
add
or
dec
push
adc
xchg
jle
xchg
push
sub
add
insb
ds
jmp
jne
divl
in
out
hlt
sub
inc
rcll
fcoml
jp
pop
out
push
sub
mov
or
fidivs
push
lret
or
push
fs
stc
cltd
in
xlat
test
or
add
stc
ret
sbb
rcll
adc
and
xchg
repz
imul
and
pop
mov
dec
movsb
add
xor
sbb
fiaddl
mov
jne
sub
xchg
pop
scas
test
cmp
imul
sbb
inc
test
add
das
sbb
xlat
sub
sbb
arpl
jo
mov
mov
lods
aas
jb
inc
pusha
pusha
ja
shll
fs
adc
das
fwait
dec
sub
rol
xchg
imul
scas
cmp
push
jno
adc
lea
pop
aam
mov
cmp
xchg
jo
mov
dec
or
lahf
xor
shl
jo
pop
adc
mov
mov
dec
xchg
lret
add
add
xchg
aas
jecxz
test
add
subl
ja
shl
call
add
ja
dec
shrl
popa
xchg
pop
sbb
aaa
xchg
mov
pop
inc
push
and
xchg
pop
xor
das
aas
les
rcll
push
sub
lcall
stos
push
ret
adc
mov
mov
popa
mov
movsl
cs
out
out
roll
pop
sub
and
xchg
inc
sbb
out
arpl
jmp
in
adc
mulb
pop
dec
std
addr16
fcoml
adc
fmull
sbb
icebp
xchg
lds
notl
vmwrite
aad
popa
andb
leave
mov
pop
pop
sub
xor
sbb
add
jno
and
push
rorl
xor
cld
push
out
fs
je
stc
arpl
inc
inc
pop
in
mov
addr16
or
fdivrl
push
aad
insb
mov
add
shll
je
mov
push
arpl
ljmp
scas
fildl
pop
in
enter
mov
call
in
adc
jmp
lret
cwtl
cmp
mov
cltd
sbb
iret
pop
mov
inc
sbb
adcl
mov
imul
fsub
mov
fcom
add
int3
jo
dec
pop
fidivl
dec
popf
jne
shrb
mov
xchg
xor
outsl
xchg
pop
xor
lock
sub
popf
cmpl
mull
ret
push
nop
in
adc
xchg
push
dec
inc
dec
jns
bsf
lret
je
pop
mov
sbb
js
arpl
fiadds
mov
lret
add
test
push
inc
jle
subl
int3
lods
dec
dec
or
inc
and
orl
dec
fildll
jle
push
mov
outsl
sub
mov
mov
jo
clc
or
and
inc
dec
sub
dec
push
test
dec
icebp
loope
test
pop
and
or
sbb
and
xchg
pop
fistl
dec
pop
roll
cli
mov
or
push
fdivs
popa
hlt
jne
adc
sbb
shl
xchg
dec
pusha
lahf
orl
jne
fists
shll
notb
adcb
xlat
adcb
and
pop
mov
cs
mov
push
push
jnp
bound
imul
int3
and
int3
xor
sbb
jnp
adc
test
movsl
or
inc
mov
jo
sub
and
sarb
sub
dec
mov
outsb
xchg
es
faddl
inc
add
push
xlat
test
in
cld
jns
jnp
dec
jne
jle
push
in
scas
xchg
xchg
mov
mov
lods
jmp
ss
fadds
xchg
sub
xchg
pop
xchg
mov
ret
lods
jns
sbb
roll
dec
xchg
in
cmp
jmp
loopne
mov
addr16
lcall
jmp
cmc
dec
mov
mov
in
dec
fisubrl
mov
cld
loope
inc
cmc
leave
mov
scas
fimull
lea
adc
cmp
and
push
cltd
push
add
faddl
repz
jl
fs
inc
jecxz
stos
scas
cwtl
push
jne
loop
push
pusha
and
jne
stc
cmp
mov
push
lods
sbb
push
add
xchg
mov
jb
mov
ret
push
cmp
shlb
mov
inc
rolb
sbb
out
add
aad
lahf
xor
adc
jle
adc
mov
aad
cmpb
push
stos
mov
and
jge
lret
js
jns
adc
mov
call
mov
ljmp
fsubl
daa
and
or
and
pop
test
pop
sub
xor
ss
imul
xchg
inc
jle
insb
xchg
and
mov
popa
popf
aaa
loop
stos
fdivs
mov
lods
inc
divl
pop
test
loop
ficomps
dec
xchg
or
xor
mov
push
push
push
aad
mov
inc
negb
add
setne
mov
or
test
sub
pop
js
stos
and
adc
push
clc
add
sbb
stos
sub
xor
popa
mov
xor
push
dec
jle
jnp
icebp
xchg
aad
je
jae
ljmp
add
daa
lods
xor
and
outsl
mov
xchg
rclb
or
and
rorl
cmp
rcrb
cmp
jmp
aaa
cmpsl
mov
out
mov
inc
inc
sub
js
rol
stos
and
fcmovnu
mov
jne
mov
sarl
or
cltd
add
add
jmp
push
pop
fbstp
je
clc
insl
dec
and
jns
fimull
sub
or
in
fistpll
and
mov
cltd
jo
mov
mov
pop
pop
xor
cmpsl
dec
inc
cmp
test
push
jmp
cli
cmp
pop
jns
xchg
push
aas
outsl
into
xchg
pop
nop
lds
push
jo
and
mov
inc
addl
test
pop
cmp
lods
loope
daa
lahf
sub
pop
rcrl
daa
sar
and
in
xchg
jecxz
test
fst
mov
test
adc
and
pop
shrb
aas
jo
out
add
filds
popa
aam
and
movsl
repnz
mov
jmp
mov
cmp
rorb
xor
or
cs
pop
mov
lds
adc
sbbb
mov
fwait
je
jge
ja
ss
popa
shrb
stc
iret
inc
pop
mov
xor
xchg
adc
imul
pop
imul
inc
adc
xchg
mov
xor
cmc
sbbb
out
adc
scas
sbb
mov
mov
push
test
mov
push
imul
xchg
or
xor
lret
mov
imul
daa
mov
pop
leave
add
pop
xchg
mov
inc
sub
leave
push
or
subb
aas
mov
out
inc
ret
les
adc
add
dec
std
mov
xor
xlat
adc
cli
scas
push
pop
movsl
aaa
xchg
jae
inc
mov
outsl
xor
pushf
cmc
pop
jno
pushf
loopne
sbb
add
bound
outsb
pop
jb
or
add
cmp
or
outsl
leave
mov
cwtl
cmovbe
popa
ret
jmp
push
sbb
cmp
push
rcrl
fildll
arpl
mov
cmpb
bound
loope
push
dec
adc
xor
xchg
sarb
xchg
pusha
in
jp
or
add
and
push
aaa
sbb
scas
push
int
pop
scas
mov
add
adc
xchg
fwait
mov
aaa
aad
jmp
mov
repz
rorb
out
xor
push
stos
mov
daa
rcr
in
bound
jb
ret
pminsw
sbb
push
fadds
pop
mov
cltd
filds
mov
push
aad
imul
lds
arpl
pop
push
cwtl
jae
adc
push
xor
das
or
movsl
loop
lret
cmp
mov
iret
mov
cmp
push
cmp
dec
xor
inc
icebp
mov
cltd
in
ret
cmp
jp
test
push
test
rcll
mov
fdivrl
mov
xor
add
xor
sbb
dec
aas
outsl
sbb
rolb
bound
mov
lcall
addr16
sbb
cwtl
dec
and
inc
xor
and
cmp
popf
add
jg
gs
sub
shlb
cld
pop
xor
sub
and
sti
jne
pop
adc
and
inc
or
cli
cmp
push
mov
lods
gs
cmp
out
fcmovnbe
aas
sbb
jnp
daa
aad
pop
cmpl
daa
cmp
add
or
mov
popa
push
and
negl
add
cmpsb
or
push
dec
add
js
daa
pop
and
dec
loopne
cwtl
sbb
xor
loop
mov
rorb
push
pop
xchg
add
aaa
lock
cmp
and
sbb
filds
mov
daa
movsb
dec
xchg
cmpsb
jp
and
mov
aam
mov
jne
xor
adc
mov
adc
or
cmpsb
and
test
ret
fs
sbb
pop
ficoms
cld
aam
test
mov
push
or
mov
mov
jae
jae
and
cvttps2pi
jecxz
stos
in
es
adc
xchg
fnstenv
enter
mov
and
inc
popf
or
imul
cs
mov
movl
xchg
adc
daa
xor
push
scas
inc
sub
hlt
fmull
inc
xchg
xchg
dec
mov
xchg
scas
dec
js
push
arpl
lea
fwait
pop
lcall
jecxz
push
loope
add
mov
ja
add
out
icebp
pop
mov
sbb
mov
pop
sbb
stc
bndldx
push
aas
daa
cwtl
dec
jmp
adc
lock
addr16
jge
add
jge
push
or
sub
add
movsb
sub
dec
ret
mov
mov
popl
sbb
aad
scas
add
adc
jnp
add
andb
jb
pop
jle
inc
popf
add
mov
cld
pop
mov
cwtl
lret
test
rolb
cli
pop
dec
fildl
cltd
mov
repz
sub
add
cmc
lea
test
cmpsb
test
lahf
inc
mov
cmp
push
call
xor
into
outsb
sbb
sub
jne
movb
mov
out
ficompl
data16
sub
cmp
xor
rcrl
add
adc
negl
xlat
lock
jmp
sub
rcrb
es
movb
fistpl
cwtl
arpl
xor
insl
jno
jo
shlb
movsb
scas
pop
cwtl
inc
movsl
mov
push
mov
lods
xchg
jmp
xor
pusha
push
inc
xchg
cmp
adc
jle
cwtl
jne
das
rcr
arpl
add
lcall
sub
dec
push
in
iret
pop
add
sbb
dec
stos
adcb
add
jle
add
movsl
jo
add
or
sbb
ss
mov
mov
imul
xor
lcall
jne
fmuls
dec
adc
imul
add
pop
test
xor
sbbl
adc
cmp
sbb
ret
gs
out
lcall
adc
xlat
and
xor
popa
inc
mov
dec
rcl
pusha
lds
cmp
fnstenv
jg
push
pop
dec
repnz
add
stc
mov
sbb
adc
mov
add
cmp
adc
adc
adc
gs
int
dec
popf
adc
xchg
add
ja
pop
xor
pop
add
lds
sbb
mov
nop
insl
xchg
mov
testl
xor
insl
ror
push
pusha
jle
adc
call
dec
f2xm1
movl
lods
popa
jns
insl
movsl
movsl
scas
push
push
test
sbb
es
dec
popl
adcl
jmp
add
jne
mov
imul
add
add
dec
inc
icebp
jns
stc
and
or
dec
or
movsb
addb
pop
cmp
sub
fcoms
aas
es
mov
mov
ret
cmp
cmp
arpl
add
les
fst
mov
jnp
jno
ret
addr16
inc
xor
lcall
shrb
add
movsl
xlat
push
or
mov
out
push
inc
bound
jns
fcomip
adc
addl
daa
xchg
and
inc
pushf
xor
dec
mov
xor
cmp
movsl
out
or
out
imul
sbb
add
push
xchg
jno
or
mov
inc
mov
arpl
ss
fucomip
iret
xchg
ret
mov
test
push
imul
lods
adc
push
inc
imul
dec
rolb
les
rorb
lcall
call
insl
shrl
sbb
insl
int
add
sub
fists
mov
push
cmp
jne
ret
outsl
pop
gs
popa
stos
mov
mov
dec
mov
mov
xchg
arpl
je
dec
pop
and
arpl
lods
std
adc
jo
ds
in
add
test
outsl
into
aad
jne
es
addl
xorps
sub
mov
lcall
xor
sbb
jmp
xchg
jmp
fwait
cmp
mov
push
mov
xor
and
cli
mov
jne
shlb
pop
adc
shrb
push
sbb
adc
mov
or
jae
insl
fstpl
xchg
xchg
test
sbb
in
mov
movsl
in
adcb
sub
pusha
mov
jns
int
andl
sub
mov
test
pop
cmp
cs
outsl
addr16
ret
and
daa
add
push
lahf
in
and
lea
orl
lods
ljmp
sbb
in
mov
insb
rclb
dec
psubsw
sbb
lea
sub
ss
mov
adc
inc
or
push
add
mov
mov
push
xchg
or
or
stos
test
pop
fs
sub
mov
lcall
pop
add
jae
cmpsl
scas
add
mov
ret
mov
bt
lea
rcrb
jne
and
mov
xor
sbb
cmp
scas
mov
mov
pop
push
jno
or
mov
add
push
mov
xorb
and
stc
add
daa
rorb
xchg
or
scas
xchg
out
ficoml
mov
mov
inc
mov
test
pop
mov
lods
sbb
cmp
in
sarl
cmc
je
in
ret
mov
cs
les
cli
push
test
repz
jns
pop
mov
or
ret
subl
stos
and
xorl
addb
push
and
push
iret
sub
imul
or
sti
add
push
mov
pushf
dec
insl
mov
mov
lret
daa
fwait
cmp
xchg
push
adc
dec
or
dec
mov
jmp
dec
mov
mov
cmp
jge
popa
loopne
sub
mov
dec
arpl
jnp
mov
sub
jne
xor
push
or
cmp
push
adc
popf
das
adc
cmp
add
adc
les
add
fmull
add
lret
dec
and
fldcw
xor
add
test
imul
leave
rol
lcall
add
fwait
movl
notb
mov
dec
xlat
ljmp
mov
es
cmp
setne
rolb
stc
addr16
jp,pn
push
push
das
pop
xchg
insl
out
mov
cwtl
out
dec
ror
mov
jae
pusha
pusha
mov
outsl
push
in
sub
dec
inc
enter
push
xchg
sub
es
xor
sbb
mov
inc
sbbl
cmpsb
adc
hlt
aaa
cmp
ret
pop
mov
add
xor
sahf
mov
add
aaa
xlat
fnstsw
lods
stos
and
jno
xlat
ja
imul
arpl
addr16
lods
add
push
and
cmp
sbbl
in
add
and
mov
or
or
push
test
lods
sahf
pop
xor
pop
xor
mov
dec
inc
js
jno
jl
scas
jo
stc
mov
mov
inc
xor
push
mov
cld
fildl
lods
jmp
shrb
lcall
mov
arpl
push
sti
xorb
adc
in
decl
cmp
pop
dec
movb
cmp
adc
pusha
bound
out
lcall
lret
arpl
lock
sub
mov
or
dec
jno
push
test
in
rcrb
sahf
inc
test
pop
adc
xchg
mov
std
or
cmp
scas
push
cmp
or
push
add
sub
xor
adcl
adc
or
scas
jnp
cmp
icebp
into
gs
add
mov
push
cmp
jecxz
int
xchg
xor
int3
mov
xchg
inc
jo
sbb
in
jno
jbe
pusha
push
add
stc
mov
out
jb
imul
loope
out
addb
shlb
and
or
popf
les
xchg
sub
test
adc
or
popa
mov
dec
pop
movsl
leave
xor
aad
lret
inc
lret
push
cwtl
adc
mov
add
shrl
xor
add
xor
andl
xorl
xchg
leave
xor
insl
dec
add
sub
scas
or
pop
fwait
jmp
ret
stos
and
loope
adc
popa
add
jmp
test
mov
neg
mov
adc
aad
fsubrs
mov
jbe
sbb
xor
add
push
xchg
or
dec
cmp
std
dec
mov
add
mov
adc
cmc
xchg
jecxz
add
push
sbb
and
scas
pop
mov
jle
sub
addb
gs
adc
insb
fcmovb
inc
or
test
js
and
xor
repnz
pop
fs
mov
add
and
ss
inc
lcall
cwtl
sub
test
divb
pop
xor
je
inc
and
xor
adc
jno
nop
idivl
inc
addr16
imul
insb
fnsave
and
adcl
movsl
mov
stos
ret
or
jp
fucom
push
xor
and
cmc
xor
sbb
pop
lods
mov
or
test
jg
in
lock
push
cli
popa
inc
lcall
lds
lret
jnp
adc
pop
pop
or
mov
inc
dec
pop
loope,pt
aam
lcall
jg
dec
imul
les
rcr
mov
les
adcb
in
fnstsw
push
jmp
mov
mov
jne
es
imul
enter
mov
lret
mov
cltd
ficoml
adc
mov
dec
mov
pop
mov
xlat
test
and
fsts
sbb
int
je
call
push
mov
xlat
or
jge
add
dec
movsb
xor
incl
jbe
dec
push
mov
sbb
push
mov
addr16
jle
xor
stos
testl
xchg
insl
lahf
mov
mov
dec
pop
xlat
popf
sbbl
lcall
push
je
sub
jg
nop
pop
popa
adc
ja
outsb
pop
lods
pop
imul
cltd
pop
mov
ljmp
pop
aad
add
popf
mov
sbb
imul
adc
jno
adc
jmp
cmpsb
rclb
stc
push
fdivs
jnp
mov
outsl
les
inc
adc
mov
sbbb
test
stos
cmp
push
test
jmp
jnp
jge
pop
and
mov
pop
push
and
push
sbb
loop
insl
cmpsl
mov
test
pop
push
sbb
and
add
jl
and
push
pusha
data16
test
inc
add
loopne
jp
mov
outsb
jp
or
or
mov
ljmp
xchg
and
sbb
push
add
gs
js
inc
mov
push
sbbb
into
nop
pop
pop
test
enter
add
mov
mov
inc
repnz
xor
mov
and
adc
loope
sahf
scas
dec
in
shlb
jmp
inc
andb
ret
shr
into
movsl
imul
outsb
insb
sbb
out
addr16
sahf
out
les
adc
add
mov
jmp
sbb
inc
dec
and
add
mov
lds
adc
xchg
and
xchg
sub
xor
ljmp
or
mov
jmp
cmp
test
lods
pop
mov
stos
rolb
in
sub
and
popf
pop
rol
sbb
pop
icebp
ljmp
adc
inc
pop
cmp
xchg
mov
test
scas
and
jg
add
xchg
jmp
fildll
mov
aad
mov
sti
std
inc
sub
scas
adc
sub
and
pop
shrl
shl
movsl
gs
adc
leave
inc
cmpsb
scas
jb
clc
pop
leave
sbb
ja
xor
aas
sub
mov
aad
add
jecxz
insb
xchg
cmp
inc
orl
mov
add
push
inc
loopne
and
dec
std
lret
lods
adc
push
jg
inc
xor
test
int
ffree
or
aad
call
xor
shl
scas
pop
out
sti
sti
add
push
jecxz
in
mov
add
dec
stos
rorb
add
movsl
out
mov
popf
pop
sti
shlb
pop
cmp
dec
dec
jne
add
outsl
lods
aaa
stos
aam
addl
shrl
mov
repnz
sbb
add
std
mov
movsl
sbb
lret
xor
and
pop
and
xor
xor
mov
rcr
enter
pusha
cmp
aad
rcrl
ret
lret
inc
loopne
xor
or
ret
jne
xor
jge
pop
mov
andl
lods
push
popa
push
add
sbb
push
jecxz
je
or
push
aad
jecxz
loop
mov
add
popa
mov
imul
jae
cmp
adcl
jecxz
data16
xorl
sbb
fmull
fsubs
fbld
stc
xor
sub
nop
test
cmpsb
icebp
mov
cmc
ret
addr16
daa
orl
cmp
iret
movsl
ja
movsb
inc
add
adc
inc
mov
or
add
lahf
lds
xlat
popa
addr16
xchg
mov
xchg
add
orl
mov
imul
adcb
negl
orb
push
xchg
cmp
mov
push
icebp
dec
push
lods
pop
or
fwait
dec
test
sbb
outsl
dec
scas
xor
push
lcall
sub
scas
data16
cwtl
in
sarl
push
gs
push
int
mov
mov
dec
inc
and
in
mov
es
mov
mov
push
inc
jno
sbb
fstpt
daa
shr
ret
pop
mov
cmp
push
mov
mov
dec
dec
ja
pop
mov
sub
mov
pusha
or
movsl
addr16
cld
rclb
xor
cmp
mov
adc
mov
xor
push
fwait
shrd
aam
aaa
jne
lret
stos
cld
push
shl
dec
mov
movsb
mov
mov
pusha
push
jle
ret
js
jne
mov
pop
daa
daa
sbb
arpl
sbb
loope
and
cmp
cmp
popa
inc
mov
and
sti
mov
add
iret
push
repnz
xor
into
fldt
outsl
push
mov
jnp
cmpsl
imul
loopne
orb
mov
push
addr16
fsubr
imul
call
xchg
sub
int
dec
je
outsb
shlb
add
rol
or
loop
add
cmp
pop
ss
jbe
gs
or
outsl
pop
dec
xor
cli
iret
pop
jb
xchg
or
inc
insl
inc
xchg
inc
popa
roll
mov
and
push
and
aad
lea
mov
ret
add
mov
in
imul
mov
test
push
lcall
mov
jecxz
fs
into
inc
stos
jno
sbb
daa
adc
push
mov
cltd
outsl
push
pop
sub
push
movsb
shrl
push
cmc
jg
dec
loopne
mov
dec
add
call
ret
or
mov
sarb
mov
adc
orl
in
lret
xchg
scas
dec
mov
fstpl
push
pop
pop
imul
je
pop
test
imul
push
lea
popa
mov
subb
repz
cmpl
lock
mov
xor
sub
cwtl
ds
aad
xor
cmp
fdiv
mov
les
mov
dec
scas
out
jmp
xorb
sbb
in
rclb
jg
mov
xor
adc
cmp
dec
repz
mov
iret
xor
xor
ffree
jne
sub
int
shrl
faddl
push
xchg
lods
or
dec
jg
loopne
std
dec
leave
or
pop
fldt
jae
jno
jecxz
icebp
mov
xor
ds
lds
mov
mov
jno
push
inc
adc
test
xchg
dec
pop
push
push
pop
xchg
and
dec
mov
ret
xor
outsl
fcmovnu
jmp
or
push
mov
insl
adc
movsb
imul
xor
subl
rclb
cmp
ficomps
rcrl
mov
sub
adc
add
adc
fucomip
cmp
mov
xchg
xchg
popa
add
jae
or
cmp
pop
scas
dec
xlat
pop
nop
xor
xchg
sub
sub
add
and
arpl
dec
shrl
lods
pushf
lahf
popf
xchg
xor
push
push
fs
mov
xchg
and
push
int3
ss
mov
subb
and
int3
addb
xor
or
mull
pop
push
jle
sbb
adc
xchg
xchg
inc
negl
mov
adc
adc
add
dec
dec
pop
ss
pop
mov
leave
fstl
hlt
inc
dec
ret
add
stos
cmc
clc
ljmp
nop
popf
cmp
roll
adc
rcrb
jae
dec
adc
jb
popf
cmp
mov
ret
outsb
jge
mov
push
jno
pop
mov
add
push
inc
sbb
pop
push
push
pop
adc
adc
pop
mov
loop
xchg
xchg
pop
lcall
push
sbb
mov
ret
and
and
sub
dec
mov
mov
xchg
daa
rclb
mov
pop
popf
mov
dec
fstl
scas
pop
scas
movsb
xor
or
pop
cmp
sub
sbb
inc
aad
fucom
add
js
push
jno
pop
jmp
cs
add
and
pop
icebp
cmpsl
inc
repz
mov
fiaddl
jne
loope
pop
cmp
addr16
pushl
mov
stc
xor
jne
xor
mov
loope
sub
mov
decb
adc
fsubrs
lds
jg
add
xchg
xor
xchg
fdivl
sub
add
and
or
loopne
jno
mov
fcmove
push
pusha
jge
pop
cmp
test
push
jns
aaa
pop
movsb
rcr
je
ja
jp
movsl
shlb
jecxz
lods
flds
push
jne
mov
or
mov
mov
xchg
fldcw
lods
inc
and
icebp
int3
cmp
add
xchg
adcl
ret
dec
cmpsl
movsb
cltd
jmp
roll
imul
mov
or
test
pop
imul
or
mov
cmpsb
dec
or
mov
pop
int
stos
sbb
cmp
sbb
and
xchg
or
mov
mov
sub
outsl
adc
rorb
enter
dec
xor
xor
cmpsb
leave
enter
nop
inc
sbb
push
adc
pusha
add
pushf
lock
xlat
jnp
pop
fstpl
addl
lret
and
addr16
aas
or
je
jp
leave
push
add
call
mov
cs
daa
cmp
push
aas
mov
jne
fst
xor
cltd
enter
sbb
and
into
xor
pop
xlat
or
inc
cmc
mov
xor
movsb
add
lea
js
xchg
and
sbb
adc
ret
pop
cli
divl
in
loopne
or
mov
lods
add
push
cli
xchg
pop
je
iret
movsl
dec
pop
dec
stos
inc
pop
aaa
movsl
je
test
cmpsl
xor
jne
imul
inc
daa
adc
out
sub
es
mov
adc
xor
lret
sbb
or
jae
int
cmpl
add
xor
push
add
loope
push
pop
mov
aad
xor
fmuls
popa
icebp
int3
mov
xchg
in
sti
cltd
adc
loop
movsl
mov
or
arpl
leave
or
or
mov
fstpt
repnz
ret
nop
cmpb
fnstsw
pop
insb
rcrb
add
mov
add
scas
push
iret
add
xor
cmp
push
xlat
jmp
push
pop
idiv
in
mov
out
daa
ret
or
pop
push
push
sub
cmp
lcall
and
sbb
movsl
pop
ja
jne
mov
xor
xlat
mov
xor
pop
dec
xchg
aad
cmp
push
cmp
arpl
or
adc
mov
mov
fwait
xor
je
cmp
addr16
cmp
or
mov
sub
lock
sti
xchg
insb
and
mov
call
inc
mov
cmpsl
mov
in
sarl
jns
lods
xchg
adc
enter
cltd
mov
fiaddl
lods
push
jns
arpl
lock
and
aam
fldt
xchg
js
add
cwtl
or
pusha
inc
and
cmp
and
into
rorl
sub
pop
mov
sbb
mov
mov
push
rcll
dec
pusha
gs
dec
mov
or
push
jne
dec
push
sbb
xor
mov
fsubp
loop
into
lahf
add
test
add
stos
inc
outsb
loop
sub
test
mov
cmp
push
jnp
fsubrs
pop
mov
test
repz
aaa
cmc
sub
pop
pop
mov
inc
imul
add
addr16
int3
mov
and
cmp
stc
push
pop
cmp
mov
mov
xor
jo
jne
sub
popa
frstor
or
pusha
add
mov
fldenv
xor
or
mull
lock
in
jns
leave
or
push
adc
dec
mov
dec
add
imul
ret
pop
retw
nop
arpl
test
mov
iret
jae
xor
fists
mov
lods
and
test
push
mov
outsb
cmp
lods
cld
leave
imul
shrb
sbb
jl
jne
push
rcrb
mov
jne
push
mov
lcall
xchg
xlat
pop
lock
in
dec
pop
sbb
push
pushf
xor
dec
loop
or
lock
leave
mov
vmptrld
and
addl
push
inc
add
xor
and
push
inc
scas
pop
filds
cltd
mov
cltd
push
es
ljmp
scas
mov
dec
repz
popa
jbe
dec
jecxz
add
and
add
scas
push
lahf
fcoml
mov
or
sub
repz
mov
mov
sub
adcl
or
scas
dec
sub
push
sbb
dec
push
mov
sbb
pop
cmp
stc
mov
push
adc
and
imul
rorl
xor
loope
mov
adc
roll
addl
cmp
into
pop
and
inc
aam
les
xchg
adc
xrelease
or
sbb
jno
shll
inc
mov
ss
xor
mov
jo
loope
cmp
mov
ret
stos
pop
pop
mov
xchg
je
xor
dec
mov
leave
cmpsl
adc
and
ljmp
mov
fs
les
pop
ja
cmp
add
or
and
out
or
mov
mov
dec
add
fnstenv
dec
sub
inc
push
sbb
in
adc
outsl
mov
or
jno
in
shll
shrl
adc
mov
xor
sub
pop
test
push
dec
xor
mov
test
sbb
lods
xchg
xchg
testb
mov
rclb
int
xchg
outsb
mov
dec
aad
or
jnp
add
int3
add
mov
jmp
aaa
lods
sbb
or
pop
add
push
loopne
xlat
int
xor
loopne
jne,pn
shlb
ja
rcr
aam
lahf
lock
repnz
xchg
movsb
adc
sbb
add
add
mov
dec
and
push
jne
xchg
cmp
push
in
lea
daa
daa
dec
roll
aaa
lcall
out
sbb
pop
or
add
movsb
movsl
xchg
pop
xchg
adc
sbb
mov
mov
or
inc
addb
mov
sarb
icebp
cld
xchg
flds
int
xor
fistpll
in
pop
xchg
cs
ja
bound
mov
jbe
imul
leave
xor
mov
popa
mov
sub
adc
insl
addl
pop
int
sbb
adc
add
xor
sahf
inc
xchg
cs
or
mov
and
add
pop
dec
push
fdivrs
pop
cmpl
dec
push
stc
iret
test
jo
adc
jns
stos
shll
inc
pop
out
xchg
pop
popa
outsb
pop
neg
push
pop
jle
sbb
scas
and
adc
xor
mov
sub
outsb
shll
sub
sub
push
add
loope
nop
mov
push
les
adc
rorl
cmp
pop
xlat
jmp
sbb
sbb
mov
xor
mov
stos
mov
mov
push
push
xchg
lcall
sbb
clc
push
jl
orl
jo
outsl
leave
xchg
sbb
call
push
and
mov
imul
mov
inc
cltd
inc
aad
cmp
and
mov
out
loop
popa
inc
scas
and
jno
ss
cwtl
lret
sbb
loopne
add
enter
or
adc
out
mov
and
ljmp
jl
mov
test
addr16
pop
aad
shl
push
shr
jge
movsb
ljmp
xchg
jne
shl
adc
xchg
sbb
and
xor
outsb
pop
in
or
push
test
xchg
addl
popa
mov
pop
outsb
sub
sbb
add
popa
aad
and
fsubrs
cmpsb
sbb
jae
or
ss
push
pop
or
xchg
cmp
mov
adc
inc
add
inc
lock
jmp
fldpi
xchg
popa
rcrb
rorl
adc
sub
cmpsl
cmp
dec
xlat
sub
test
xorb
add
cmp
push
scas
adc
push
sub
adc
cmpsl
fistpll
leave
push
hlt
daa
repz
shl
pusha
push
or
out
inc
popa
loop
in
lea
xchg
fsts
popa
inc
scas
jne
inc
push
scas
and
aas
cmpsb
mov
jmp
inc
aad
in
pushw
jo
popf
ljmp
sahf
frstor
and
pusha
and
push
test
arpl
xlat
or
sbb
jecxz,pt
xor
aas
pop
sub
call
mov
adc
jno
shll
or
pop
sbb
adc
sbb
scas
inc
das
and
sub
adc
out
dec
fisubs
add
sub
mov
sbb
jno
cmp
inc
inc
sbb
push
movsb
cmp
inc
mov
mov
sub
mov
mov
and
mov
ja
add
xlat
test
inc
sahf
popa
inc
data16
pusha
pushf
mov
mov
push
lcall
pop
and
pop
cmp
mov
jecxz
in
stc
mov
jno
ja
mov
jmp
add
aaa
adc
mov
sbb
or
addb
push
cmp
push
mov
sbb
cmp
jne
cmp
loope
in
scas
inc
add
and
lods
adc
lock
popa
movsb
mov
insl
adc
sub
fidivs
test
icebp
loope
jecxz
out
loope
cs
test
xor
outsl
sub
dec
outsb
xor
adc
pusha
push
movsl
or
jg
jle
inc
dec
lods
or
pop
mov
outsb
aaa
mov
loope
aam
xor
mov
hlt
push
scas
cmp
les
inc
cmp
mov
das
xchg
out
and
mov
xchg
subb
xor
push
adc
dec
leave
rorb
pop
and
aam
je
mov
xlat
test
lret
arpl
rcll
loop
xor
jg
pushf
sbb
inc
imul
mov
mov
test
adc
mov
xor
pop
jmp
mov
and
add
jge
xor
inc
push
mov
pop
push
add
adc
ss
jno
jae
push
pop
xorl
xchg
or
je
inc
pop
pop
ret
mov
xor
sti
xor
jno
jno
or
andb
add
popa
mov
cmpsb
dec
sbbl
aaa
mov
mov
pop
jecxz
or
out
xor
xchg
inc
xlat
and
jae
mov
adc
enter
dec
ja
lcall
mov
xchg
sbb
insl
cmp
and
sub
inc
adc
and
loop
xchg
int3
mov
dec
std
pusha
adc
adc
xor
daa
mov
jnp
rorl
rolb
inc
push
add
adc
add
adc
xchg
movb
in
sub
cmc
xor
cld
mov
inc
sub
scas
test
sub
add
les
scas
aaa
call
and
movsb
lea
sub
adc
jns
test
and
and
push
pop
icebp
imulb
int3
or
inc
push
test
out
repz
imul
sbb
push
mov
loope
and
mov
jne
cmc
cmc
mov
mov
fisubs
aas
jne
pop
shll
jge
jb
cmp
add
xchg
cltd
xlat
shrl
pushf
adcl
jb
dec
mov
adc
ret
xor
and
push
mov
test
adc
mov
add
add
pop
loope
mov
inc
pop
xchg
push
jmp
xor
popl
xor
jne
mov
sub
rorb
jae
test
add
inc
add
lods
or
insl
push
mov
jge
cmp
xorl
roll
inc
add
imul
in
adc
aaa
push
adc
jl
or
jg
and
sbb
adc
ret
inc
hlt
push
pop
sbb
and
xor
shrb
inc
push
subl
pop
xchg
xchg
test
jno
pop
test
xor
xor
and
xor
scas
sbb
xlat
int
xchg
xor
shlb
stc
popf
inc
fiaddl
lcall
aaa
testl
push
or
sub
xchg
int
pop
test
xchg
enter
outsl
fcomip
frstor
or
idiv
cwtl
test
pushf
adc
lods
ds
iret
push
int
add
arpl
xlat
mov
cltd
out
and
iret
xor
icebp
and
dec
pop
add
pop
sub
add
inc
dec
and
pushf
je
les
jl
xchg
jno
mov
xor
in
xchg
mulb
mov
pop
adc
mov
loope
jne
jp
mov
inc
pusha
icebp
push
loop
add
sub
pop
sti
popa
cmp
cwtl
mov
aad
mov
lods
pop
mov
dec
arpl
mov
and
les
nop
fmul
add
mov
xor
inc
mov
mov
cltd
or
xchg
push
rorl
cld
xor
lock
aaa
xor
dec
mov
or
rcl
sbb
xlat
and
sub
sbb
push
movl
adc
aaa
call
pop
pop
nop
adcb
adc
sbb
xor
push
cmc
jmp
jnp
or
loopne
jo
cltd
icebp
arpl
popf
les
loop
xchg
cmp
push
subl
daa
popa
ja
xor
mov
adc
mov
sub
mov
pop
lock
imul
dec
cmpsb
pop
or
daa
dec
lds
dec
jbe
xchg
orb
adc
mov
sbb
imul
adc
addr16
pop
mov
xchg
jge
inc
fistpll
jmp
and
mov
bound
std
push
cmp
es
mov
fs
bndstx
ret
cmp
stos
jno
cmp
xor
in
push
fnstcw
movsb
leave
mov
sbb
sub
clc
loope
scas
cltd
push
daa
test
rclb
not
sbb
aaa
xchg
pop
adc
push
scas
inc
imul
xchg
mov
aad
jno
fbld
sub
jo
jp
dec
jp
pop
ss
test
cmc
sub
lods
push
rcr
jmp
inc
pop
or
daa
pop
add
jl
shlb
imul
test
inc
jno
out
inc
mov
mov
push
arpl
loop
mov
jnp
test
shlb
arpl
fiadds
adc
dec
xor
add
pop
sbb
or
add
mov
inc
sub
dec
dec
inc
aaa
in
imul
push
mov
jecxz
sbb
ret
pop
sub
orb
push
sarb
sbbl
clc
mov
push
and
sahf
inc
adc
sbb
sbb
into
imul
xchg
xor
loope
add
sbb
rcll
lock
push
add
cmp
fisttpl
jns
push
mov
hlt
xchg
aad
push
pop
shll
and
iret
pop
pushf
ret
loope
nop
sub
loop
jo
sbb
jno
push
xor
sbb
loopne
xchg
std
adc
nop
cmc
lret
push
add
addr16
shll
push
pop
add
xor
push
or
dec
push
ljmp
pusha
ss
loope
fistpl
icebp
div
into
inc
dec
test
mov
add
lock
and
adc
icebp
cwtl
or
je
loopne
inc
jp
das
nop
dec
add
scas
sub
fnstcw
iret
and
loopne
addr16
adc
fwait
mov
ffreep
shll
jo
imul
mov
mov
outsb
std
mov
sub
sub
stos
inc
aas
mov
fcoml
into
rorb
jl
mov
pop
dec
sub
loope
push
adc
cltd
adc
xchg
out
mov
mov
xor
and
daa
adc
push
mov
jb
dec
add
pop
xchg
scas
or
gs
arpl
xchg
ret
push
jne
mov
add
mov
jmp
leave
mov
bound
lods
and
std
pop
and
pop
rorb
adc
mov
push
aas
js
push
xor
or
inc
jecxz
out
jl
dec
mov
shlb
mov
sub
frstor
inc
shll
dec
data16
ss
addr16
and
lods
sarl
sub
xor
inc
inc
jne
jns
inc
lret
iret
out
sarb
xlat
loopne
and
push
mov
scas
out
add
sbbl
in
movb
adc
in
push
mov
jno
sahf
cwtl
dec
movsl
adc
inc
sbb
inc
cmc
xor
xor
push
sub
xchg
pop
inc
mov
int
jmp
mov
xor
and
leave
mov
roll
sbb
mov
add
sub
shl
adcl
xchg
movsl
mov
cltd
adc
sbb
mov
jns
aaa
jbe
cmc
cmpl
fildl
xor
fwait
enter
xor
and
imul
jo
outsl
loope
iret
pop
push
add
or
and
mov
out
repz
dec
ds
or
sbb
xchg
das
cmp
bound
cwtl
sub
stos
or
aam
jmp
push
jecxz
idivl
mov
inc
add
push
fcomi
cmpsl
mov
aad
sub
xchg
outsb
pop
mov
add
test
add
cli
push
mov
mov
add
dec
int
shrb
xchg
das
aam
arpl
and
bound
push
addl
mov
lods
icebp
cmp
outsb
jno
nop
imul
fstl
jne
lods
insb
adc
pusha
adcl
movb
outsl
insl
push
sbb
xchg
arpl
jg
pop
ret
inc
movsl
push
or
jne
mov
pop
aaa
cmpsb
adc
arpl
lods
shlb
mov
xor
sub
jecxz
xchg
scas
addl
adc
iret
xor
lcall
mov
push
and
fwait
cmpsb
or
jmp
mov
add
push
fildl
jno
cmp
xchg
xor
cmp
lods
push
inc
adc
dec
int3
rolb
cmc
test
adcl
mov
arpl
xchg
testl
dec
notl
inc
adc
scas
pop
cmpsb
int
jmp
pushf
add
lahf
rorb
dec
mov
sbb
imul
lds
ljmp
filds
mov
aas
add
aam
dec
jno
lret
pop
repnz
jp
sbb
mov
nop
rcr
adc
inc
dec
repnz
sbb
push
xor
in
negl
imul
scas
lds
xlat
hlt
lret
push
outsl
mov
mov
in
push
jecxz
sbb
mov
and
jns
push
ja
int
xchg
push
adc
add
mov
xchg
dec
aas
push
push
mov
or
xor
pop
fstpl
add
fdivl
sub
mov
xchg
adc
pop
xor
sub
jo
pop
test
fwait
loopne
adc
mov
cmp
cmp
pop
fbstp
sbb
adc
lock
xchg
sub
lods
cli
lods
adc
mov
push
mov
cmp
aad
sub
xlat
ljmp
gs
sbb
and
pushf
adc
and
in
mov
dec
and
or
stos
in
icebp
sbbb
movsb
in
sbb
into
mov
jno
in
mov
mov
cmpsb
adc
inc
leave
mov
inc
pop
xchg
and
pop
dec
jno
dec
imul
repz
jne
adc
stos
imul
mov
faddp
cmp
hlt
pop
and
mov
push
sbb
loope
lret
mov
ret
add
dec
xor
push
in
shlb
cmp
scas
and
dec
shl
rclb
xor
pop
push
stc
rorb
shlb
mov
sbb
adc
fwait
push
andl
adc
add
hlt
fisttpll
or
es
movsl
stos
fisttpl
scas
push
sub
scas
shrl
adc
scas
xor
lcall
fdivrs
cmp
call
in
mov
nop
dec
inc
mov
pusha
and
mov
pop
fsubs
push
test
adc
cmp
out
mov
scas
andl
xor
mov
fistl
sub
cmp
xchg
out
mov
xor
jo
mov
nop
imul
aad
test
cmpsl
pop
inc
jo
fstl
jl
push
movsb
mov
mov
mov
dec
or
imul
dec
mov
inc
mov
clc
orb
xchg
sbb
add
push
mov
xchg
call
loope
jne
sbb
or
xchg
mov
nop
mov
dec
pop
xor
lods
jge
sbb
aam
in
inc
data16
shlb
sbb
pop
xchg
push
or
popf
add
mov
xchg
mov
add
bound
dec
insl
fsub
mov
lret
mov
jl
pop
sub
mov
popa
dec
or
sbb
hlt
pop
hlt
cld
mov
pushf
cmovle
jecxz
inc
shr
inc
lret
insb
cld
cmpsl
int
hlt
and
ffree
popa
andl
adc
and
test
fs
sbb
dec
mov
inc
popw
not
ret
or
call
pop
out
pop
cld
rcr
adc
bound
sub
and
jae
sahf
roll
rcl
neg
inc
cmp
add
sbb
stos
scas
pop
push
outsb
sti
sbb
in
mov
and
cwtl
xor
dec
and
add
or
and
pop
mov
ss
jmp
rcr
mov
jmp
loop
or
adc
mull
roll
sti
data16
adc
dec
mov
popf
mov
mov
in
push
nop
fistl
push
outsb
pop
xchg
cwtl
cmp
add
push
in
sub
mov
lods
fisttpll
xchg
push
sbb
and
mov
or
mov
aaa
cwtl
call
aad
cwtl
bound
xorb
cmp
lock
dec
add
cmp
pop
rcr
test
and
adc
addr16
jae
ja
lcall
or
xor
adc
or
sub
push
fsubrs
rol
and
mov
pshufw
cmp
pop
bound
pop
pop
push
mov
js
bnd
aaa
cld
movsb
sbb
push
in
and
mov
outsl
ret
sub
adc
xchg
push
push
sbb
scas
pop
inc
fldt
jbe
fsubl
xchg
dec
mov
cmp
cmp
push
or
xor
stos
xchg
lock
out
cmp
inc
in
sub
dec
adc
push
push
mov
pop
imul
xchg
and
sbb
scas
mov
push
and
jl
mov
test
mov
adc
xor
insl
inc
cmpsl
ret
push
add
xchg
inc
inc
xor
push
or
xchg
sub
clc
and
stos
stos
call
addr16
inc
mov
bound
cmpsb
and
in
mov
mov
mov
lea
and
andl
notb
lahf
push
and
out
mov
push
xor
or
and
inc
leave
andb
js
adc
or
fdivrp
inc
lcall
outsb
mov
fcoms
inc
outsl
inc
popa
push
xor
pmaxsw
clc
add
outsb
jne
push
or
pop
insb
sub
call
add
mov
mov
gs
xchg
idivb
fcomp
es
insl
xchg
mov
shlb
sbb
inc
iret
aas
mov
popa
ret
ljmp
cli
jle
xor
push
or
and
lods
push
repnz
add
movsb
pop
pop
sbb
es
ss
fmuls
scas
adc
mov
sarl
leave
pop
add
sbb
mov
scas
mov
aam
out
add
loop
fcomps
fldl
sub
jg
pop
dec
xor
pop
loop
pop
adc
mov
ret
push
mov
rolb
sub
lret
addr16
sub
ss
sbb
andb
jmp
shll
arpl
mov
add
pop
pushf
add
incl
push
pop
add
sbb
jns
mov
sbb
data16
ret
xor
xchg
mov
and
call
outsl
pusha
jmp
mov
xor
cld
jne
enter
jle
mov
pushf
iret
or
movsb
pop
mov
inc
cmp
scas
mov
sub
in
jl
shl
lahf
cld
stos
addb
push
cld
mov
mov
push
out
push
dec
cmpsb
dec
and
fstpt
pushf
sbb
clc
xchg
enter
lods
stc
outsb
push
mov
cld
mov
push
xchg
lahf
popa
pop
mov
iret
push
out
decl
push
or
insb
repz
xorl
cld
aam
jle
mov
lahf
adc
div
pop
inc
pop
nop
iret
lret
and
repz
mov
ss
push
stc
mov
mov
pushl
das
clc
rolb
insb
into
and
pusha
pop
test
inc
rcl
cmp
loopne
loope
dec
or
and
dec
jno
jl
ja
loopne
or
arpl
call
out
push
pop
xor
or
fcomi
inc
push
jne
cmp
ficompl
jecxz
adc
ds
mov
adc
imul
in
aaa
inc
cld
icebp
popf
rclb
cmp
push
and
aas
mov
in
or
call
ffree
enter
mov
cld
jg
dec
icebp
add
aas
push
arpl
or
pop
mov
shlb
inc
aaa
and
cli
ret
lods
mov
inc
pop
inc
and
es
clc
icebp
inc
pusha
rolb
pop
jecxz
adc
ja
push
in
xchg
jl
xor
jmp
stos
xor
in
pop
mov
inc
mov
and
cmp
push
jl
arpl
mov
loopne
push
jp
push
mov
lock
addr16
ljmp
rcll
fcos
add
into
xor
insl
pop
ds
outsb
lods
clc
int
push
adc
jecxz
in
jecxz
push
mov
xchg
mov
test
xchg
lahf
pusha
cli
mov
dec
xchg
xor
sbb
pop
add
aaa
shl
icebp
cmp
addb
mov
push
jecxz
pop
mov
data16
js,pn
test
jecxz
into
clc
clc
and
xchg
ds
mov
cwtl
les
es
jp
std
xchg
aad
mov
fcom
add
je
xchg
std
add
movsb
in
clc
fsubp
adc
xchg
movsb
mull
in
inc
fs
shrb
push
icebp
push
add
push
int3
add
clc
lahf
icebp
sub
jl
sub
mov
repz
add
jecxz
mov
pusha
push
cli
push
sbb
mov
add
cmp
popl
sar
cmp
lods
push
push
incl
lds
nop
dec
test
jl
icebp
icebp
aaa
cmp
xor
pop
jecxz
scas
in
add
loope
add
js
inc
cld
iret
test
or
push
jmp
jbe
push
pop
jl
clc
stos
or
sub
mov
adc
gs
sub
sub
dec
scas
xchg
jns
int3
sbb
pop
inc
inc
pusha
mov
lock
ds
pop
imul
in
fwait
nop
icebp
mov
cmp
mov
sub
mov
sub
insb
fadd
push
jmp
inc
adc
jl
lock
in
or
icebp
dec
xor
or
mov
movsb
mov
push
pop
cmp
arpl
fstps
jnp
cmc
dec
lock
mov
nop
inc
mov
fucomi
inc
and
push
jnp
data16
sbb
icebp
sti
arpl
jae
icebp
nop
jge
mov
mov
adc
pop
inc
sarl
stc
sub
cmpsl
mov
repnz
push
dec
sti
sti
mov
add
test
ds
lods
jmp
orb
call
je
or
addr16
inc
cmpb
hlt
mov
add
aam
pop
out
or
test
nop
and
fimull
pop
pusha
mov
push
pop
mov
ficomps
push
lds
call
mov
ret
mov
ss
push
pop
rcrb
ds
pop
jl
cmc
cmp
xlat
icebp
lods
xchg
popa
fisttpl
sbb
dec
icebp
mov
push
fdivr
lahf
hlt
lods
out
ret
jl
ds
fdivrl
mov
out
jl
rcrl
push
je
loopne
xchg
cmp
bound
lds
xor
or
pop
cmpsl
inc
insb
add
adc
pop
sar
int
cmp
inc
jb
jecxz
clc
mov
mov
dec
xor
je
mov
cmpsl
xor
pusha
inc
jg
mov
pop
lock
ds
add
pop
xchg
push
push
sti
pop
shrb
in
cmp
sbb
cmc
sub
cli
js
jecxz
pop
sbb
add
push
shlb
aam
sbb
cmc
cli
fidivrs
loop
out
and
or
sbb
stc
movsb
negb
add
dec
inc
nop
pop
adc
add
enter
clc
aam
adc
cld
mov
or
insb
outsb
pop
sbbb
test
psubb
repnz
faddp
ds
cmp
push
pop
push
rorl
adc
dec
pop
and
lock
xchg
mov
cltd
stc
or
clc
adc
add
popl
mov
clc
mov
es
sbbb
push
mov
jb
and
cmp
jge
jl
sbb
js
dec
xor
or
sub
dec
lock
jl
movsl
clc
adc
xchg
mov
icebp
fstpt
insb
icebp
xor
sbb
sbb
bound
pusha
jns
in
push
or
inc
xchg
or
cwtl
add
mov
mov
sub
out
shlb
ds
addb
and
jmp
shll
sti
rorb
test
xorb
ds
and
clc
movsl
jge
mov
jl
shrl
clc
lahf
in
out
sbb
xor
jbe
aad
inc
jns
mov
lret
bound
jp
pop
ljmp
xchg
loop
sti
popa
enter
sahf
nop
xchg
jb
sahf
clc
out
lcall
fimuls
xchg
rorb
out
xchg
in
xabort
push
xor
xchg
sbb
lret
jle
xchg
in
add
cs
ret
test
das
adc
pop
cmp
adcb
jbe
sbb
sub
adcb
push
inc
mov
and
xchg
call
pushf
fildl
mov
mov
jl
insl
out
sahf
loope
or
xchg
je
ffreep
or
lods
jo
into
pop
sub
mov
in
clc
xor
ret
clc
add
pop
jl
mov
loopne
xchg
sbb
add
test
lock
push
imul
clc
cmp
push
mov
jl
out
or
add
aam
mov
jl
pushf
not
outsb
js
aas
movsb
clc
das
adc
inc
xor
in
inc
movl
push
push
pusha
xchg
mov
inc
mov
sub
jp
aaa
stos
pop
dec
add
sahf
andl
or
hlt
lods
into
iret
inc
ds
xlat
jmp
or
subb
call
sbb
pop
icebp
or
add
movl
jno
fisttps
add
push
clc
mov
bnd
fildl
les
cld
lods
fldcw
in
jmp
fimull
sub
imul
aaa
shll
je
sbb
jl
cmp
xor
das
jp
loop
push
jns
addl
loopne
inc
jl
icebp
movaps
ds
mov
pop
and
leave
push
pop
int
push
adcb
aam
fsubl
rorl
cli
cs
cwtl
icebp
sub
mov
pop
add
cltd
add
test
cli
add
jae
test
inc
mov
aam
push
mov
aam
fsub
pop
jecxz
cmp
and
test
dec
push
xchg
lock
aad
imul
call
mov
xchg
add
adc
or
jl
sub
push
and
dec
fdiv
xchg
lahf
sbb
cmp
sub
add
lods
mov
out
mov
repz
movsb
cmc
icebp
daa
xor
fsubrl
clc
imul
lock
mov
clc
jp
ret
cld
lret
ss
xor
dec
sub
jecxz
or
mov
pop
aaa
cs
mov
decl
or
cmp
mov
test
mov
je
icebp
add
mov
insb
mov
pop
loopne
add
pop
ss
inc
jne
xchg
jecxz
mov
cmc
pop
or
mov
rcrb
jl
cwtl
xor
jp
jp
test
out
aad
ljmp
and
push
add
xlat
adcb
mov
fstp
push
pusha
enter
repnz
push
adc
js
xorb
aad
int3
mov
jecxz
call
push
fnstcw
push
cli
inc
cmp
in
pop
jecxz
call
pop
inc
icebp
cmp
loop
dec
sub
ljmp
jl
cli
cmp
fdivr
stos
mov
inc
sbb
or
repz
adc
dec
push
sub
sarl
dec
lea
mov
sahf
and
pop
mov
jg
jg
shrb
lcall
and
and
mov
adc
inc
ljmp
xor
fcoms
jmp
mov
mov
mov
xchg
inc
pop
mov
jno
mov
jne
mov
xor
loopne
push
pop
add
test
dec
cmp
movsl
lock
adc
or
adc
mov
fwait
int
and
rolb
or
xchg
test
sbb
adc
fdecstp
shrl
mov
aaa
pop
test
lcall
add
mov
add
cwtl
dec
sbb
nop
loop
enter
rclb
xchg
std
popl
cltd
dec
idivb
mov
jge
enter
or
ss
cli
scas
pop
mov
rolb
inc
je
adc
repnz
imul
clc
and
and
cmpsb
mov
cwtl
xlat
movsl
mov
ret
lret
mov
push
push
or
pushf
loopne
aaa
ret
divb
inc
push
or
or
adc
cmp
in
fcompl
nop
jne
jne
repz
xchg
push
outsb
add
test
enter
clc
popl
enter
addl
inc
addb
push
icebp
add
sbb
cmp
push
lea
lret
and
push
cmp
js
icebp
fbld
push
add
add
add
pop
repnz
xchg
cmp
lcall
inc
shll
rolb
or
cmp
mov
adc
insb
test
mov
xlat
xchg
fisubs
mov
clc
ret
sub
jbe
push
outsb
cltd
addb
mov
jbe
cmp
rorb
adc
mov
inc
sbb
inc
data16
inc
out
and
mov
ficompl
fdivrl
loope
inc
pop
mov
dec
repz
lods
lret
sub
xchg
xchg
mov
sub
inc
mov
mov
call
in
xchg
pop
or
clc
xor
pop
inc
cld
mov
dec
cltd
ret
cmp
adc
ficoml
subb
sbb
jo
testb
mov
push
jl
xor
pop
xchg
icebp
sub
pop
inc
pop
es
sbb
es
hlt
orl
xchg
ret
fimull
mov
or
dec
and
std
pop
mov
sbb
loop
insb
fdivl
dec
lcall
inc
sub
test
push
push
stos
add
in
jne
fbld
and
and
jl
pushf
int
iret
adc
and
cmp
adc
enter
pop
cmpps
inc
push
ljmp
add
movsb
push
insb
inc
xlat
xchg
je
xchg
sbb
and
aam
xor
aaa
push
add
add
or
dec
mov
push
mov
shl
pop
or
cli
lahf
mov
gs
push
aad
adcl
cwtl
add
add
push
aad
lret
inc
int3
jno
jl
inc
int3
add
data16
mov
lock
nop
xchg
or
adcb
punpckldq
ret
incl
cltd
and
push
sti
scas
cwtl
lods
stos
sbb
jecxz
jo
adc
fsubr
pop
sub
and
stc
cmp
xor
sbb
adc
inc
sbb
mov
in
les
leave
fistpll
icebp
scas
pop
adc
adc
test
and
ds
adc
adc
sub
push
pop
sbb
inc
enter
insb
test
adc
mov
adc
insb
ret
andl
out
sub
pop
loopne
and
fsubs
ror
jl
stos
or
jle
movsb
or
push
xchg
push
sbb
fcmovbe
and
movl
sbb
and
cmp
mov
lret
aam
in
out
jb
add
sbb
inc
and
rorl
popf
ljmp
mov
xchg
push
push
sub
stos
mulb
loop
pushf
lea
inc
sti
mov
inc
bound
mov
or
mov
lcall
xchg
hlt
ss
xor
or
lret
or
ds
cld
cmp
adc
adc
jg
xchg
xor
fcmovnb
or
sub
adc
add
xchg
lea
ss
movsb
sbb
jb
ds
hlt
push
shlb
addr16
std
or
jg
sub
movsb
jo
add
sbb
jl
shll
mov
loopne
sbb
push
pusha
sbb
andb
std
sbb
sub
les
sbb
mov
jbe
jl
adcb
xor
pop
scas
or
adc
scas
sarl
fdivs
loopne
mov
sub
pop
rclb
add
movsb
mov
adc
mov
and
and
add
in
xor
push
fisubrs
pusha
insl
sub
fistl
inc
test
mov
into
jne
sub
sub
daa
sbb
mov
sub
test
xchg
dec
aad
lods
jp
and
inc
fmuls
inc
pop
icebp
scas
jg
shrb
pop
push
lea
in
pop
sbb
dec
ss
rorb
adc
push
adc
add
in
pop
hlt
int
je
add
jp
aaa
into
out
pop
mull
out
fwait
push
xor
mov
movsl
adc
stos
jnp
imull
or
test
inc
ds
push
rcrl
or
dec
movsb
and
cld
adc
rcl
adc
subb
sub
jo
repnz
mov
fildll
bound
sub
pop
or
in
sbb
and
dec
adc
scas
jp
ds
cs
lea
push
jns
fdivrs
jl
mov
cmp
pop
icebp
mov
pushl
inc
jmp
dec
fstps
jbe
push
sbb
fcoml
sub
insl
inc
push
pusha
ss
push
pusha
sar
mov
dec
push
xchg
gs
clc
xchg
xchg
fwait
mov
popa
cmp
ja
imul
icebp
fildl
negb
inc
gs
jmp
bound
mov
push
cmp
inc
hlt
xor
subb
mov
scas
mov
stc
in
loop
dec
add
arpl
in
add
ret
nop
push
inc
loop
push
fistpll
jge
jp
mov
dec
out
ljmp
add
sub
lahf
bound
sub
mov
lds
lcall
fcomi
sub
les
pop
add
mov
outsb
cs
mov
in
mov
cs
pop
insb
roll
into
cmpl
pushf
rcl
leave
lods
adc
or
dec
inc
popa
adc
loopne
pop
add
mov
pop
nop
cld
xor
dec
insb
mov
xchg
lret
aas
push
inc
mov
ds
cld
jp
sub
add
clc
dec
dec
and
sbb
xchg
fistpl
ret
and
cmc
cmpsb
push
sbb
les
mov
nop
das
xor
test
push
int3
call
nop
repnz
icebp
mov
rcll
inc
push
mov
aaa
and
mov
dec
push
jmp
clc
mov
sbb
cmp
sahf
es
sbb
push
cmp
add
enter
or
mov
mov
jo
ret
adc
ljmp
mov
add
into
and
sldt
inc
and
orl
mov
mov
add
dec
dec
jns
mov
aam
push
notl
out
inc
bound
fs
pusha
orl
push
insl
sbb
enter
arpl
imul
add
inc
pushl
xlat
mov
mov
mov
xor
rcl
cld
imul
incl
rcrl
dec
xor
dec
out
sbb
leave
cmp
das
nop
aaa
in
hlt
fstl
push
inc
adc
lcall
movsb
or
jo
sbb
adc
es
cmp
pop
int3
pop
jmp
adc
adc
and
xor
xchg
cmc
adc
pop
adc
inc
fwait
inc
sub
jmp
pop
call
mov
sar
adc
insl
sbbb
fs
fsubrs
mov
sti
sbb
pop
ds
push
test
jecxz
xor
cmp
pop
xor
xor
loop
je
sub
in
shl
imul
pop
into
in
loope
scas
mov
push
mov
add
push
pusha
or
clc
scas
js
adcl
sbb
cmp
mov
dec
pop
rol
nop
dec
sub
xor
cli
jnp
xchg
movlps
ret
or
pop
adcb
dec
mov
and
push
or
mov
xor
sbb
sbb
fisubrl
call
cmp
test
decb
fisubl
test
clc
sbb
xchg
sub
xchg
add
subb
add
je
mov
lods
std
shlb
inc
mov
add
xchg
adc
call
incl
loopne
andb
cmp
push
pusha
rcrb
xor
dec
sbb
fldl
flds
andl
mov
jp
add
mov
add
fidivrl
xchg
pop
cltd
in
outsl
fnstenv
je
dec
mov
mov
xor
stos
fisttpl
cld
pop
cmp
mov
data16
ror
imul
adc
push
mov
scas
mov
and
cmp
ss
icebp
rcrb
imul
pop
jl
lret
lock
mov
adcl
or
push
cmpsl
mov
jecxz
fimull
rcr
sar
int3
mov
push
dec
clc
or
popa
dec
xchg
lds
lahf
mov
push
dec
pop
bound
add
and
andl
ljmp
jmp
mov
fisttps
sbb
bound
fists
inc
sti
push
aam
mov
push
adcb
into
mov
push
std
pop
push
dec
adc
add
jge
jg
sub
adc
fmuls
jne
xchg
std
pop
dec
rcrl
add
lock
rorb
xchg
xor
insl
sub
push
or
aam
push
fwait
cmc
das
mov
push
add
inc
xor
mov
rcl
jae
icebp
xchg
cmp
adc
or
mov
mov
inc
stos
loopne
cmp
xchg
rcl
jb
push
jmp
fists
mov
neg
cmp
rolb
mov
les
xlat
xchg
andb
or
enter
ficomps
xor
cmpsb
and
pop
push
jbe
rorl
sbb
das
sub
es
xor
lock
sti
cmpb
addr16
testl
out
repnz
hlt
cmpb
push
pop
jno
mov
push
pusha
jae
push
std
fucomip
jne
mov
push
repz
ficoms
inc
push
cmp
lock
cmp
inc
sub
incb
adc
pop
pop
inc
push
dec
das
clc
push
call
add
subl
outsb
sub
cli
int3
sbb
and
cld
xchg
test
pusha
jg
loopne
inc
ret
sub
xor
pushf
mov
popf
mov
pop
test
or
lcall
sbb
pop
sub
mov
das
ds
icebp
ja
adc
insb
adc
inc
mov
or
sub
test
pushf
mov
xor
xor
mov
push
das
push
push
clc
mov
incl
cwtl
or
push
add
hlt
inc
sbbb
jae
mov
mov
andb
adc
out
or
cmp
and
cld
push
cld
das
or
push
add
ret
sar
push
fiadds
lcall
loop
jbe
adc
push
lock
js
xorb
loope
pop
jle
dec
or
and
push
adc
pusha
add
fcmovu
popa
adc
and
push
dec
outsb
pop
mov
test
xchg
jecxz
lock
ficomps
cld
inc
push
adc
add
aaa
dec
mov
test
mov
xchg
or
xor
pushf
sub
idivb
xchg
imul
lcall
dec
es
push
mov
adc
ret
leave
scas
dec
vpcmpeqd
push
int3
or
dec
mov
or
sub
or
mov
pushl
xor
aas
inc
and
loopne
insb
cwtl
cmp
lahf
pop
popa
clc
mov
sub
cmp
jbe
push
mov
mov
pusha
add
cli
ret
shrl
sbb
ret
and
pop
pushf
in
mov
push
std
call
push
mov
lea
pop
lods
ret
fldl
fwait
cmpb
icebp
call
add
aas
add
shlb
fistps
and
cmpb
jo
mov
inc
es
lock
test
add
testb
xchg
jp
rolb
add
in
repnz
loope
aaa
out
movsb
mov
mov
cmc
inc
inc
add
xchg
pop
fucomip
sbb
cmp
mov
mov
in
cmp
movsl
or
mov
add
dec
mov
add
in
push
sub
push
push
mov
pop
jp
add
scas
mov
add
xor
or
add
push
das
push
sub
mov
add
mov
mov
ss
scas
inc
push
xchg
jne
cwtl
movsl
push
jns
nop
add
sub
in
mov
or
pop
insb
mov
clc
cmpl
pushf
jbe
jb
push
lock
rolb
nop
push
mov
ja
cli
and
outsb
out
sbbb
add
lcall
in
sub
mov
lcall
arpl
mov
mov
adc
ds
str
inc
outsb
mov
cld
add
sbb
push
inc
mov
mov
aas
push
mov
lds
dec
dec
inc
inc
jle
rorl
scas
push
mov
dec
fucomi
stos
add
loop
lods
fadds
rcrb
jl
in
cmp
inc
pop
sahf
mov
jb
push
xor
outsb
cmp
mov
jle
ss
sbb
xchg
clc
lock
in
mov
jo
inc
scas
lea
insb
pop
add
push
jmp
inc
sti
outsl
mov
mov
and
stos
jmp
outsl
in
pop
repz
push
xchg
mov
jmp
enter
mov
push
xchg
lds
decl
lds
mov
jmp
xchg
sub
mov
es
cmp
add
xchg
mov
xlat
andl
adc
pushw
push
rcrl
pusha
xchg
int3
pop
jo
xor
loopne
add
scas
in
shlb
push
xor
data16
inc
xorl
fcomi
aad
es
loopne
sub
jge
sub
push
es
xchg
and
movsl
jb
push
mov
arpl
sarb
enter
inc
adc
data16
push
shll
rcrb
repnz
das
mov
shlb
sbb
lahf
fcomps
inc
mov
dec
repz
mov
jle
xor
jo
andl
cmpsb
jns
cmp
or
adc
inc
mov
adc
xchg
pop
cmpsb
cmpsb
pop
jne
out
repnz
add
xchg
jbe
pop
mov
outsb
pop
cmp
adc
or
or
mov
popl
and
addb
cmp
test
and
and
mov
scas
mov
scas
dec
fnstsw
ja
sub
cmp
enter
jg
outsb
rorb
and
cs
call
movb
insb
scas
or
pop
pop
dec
pop
fistpl
popf
ficomps
and
jl
popa
pop
test
call
jae
mov
aas
loope
repz
xchg
aas
sbb
clc
lock
arpl
and
shlb
and
fwait
and
jle
add
in
mov
mov
xor
test
jle
in
rcll
jg
push
jl
loopne
sbb
int3
push
xor
sbb
cmpl
xchg
rcr
adc
sub
or
pop
mov
xchg
inc
add
and
mov
das
dec
adc
sahf
lret
pop
int
int
xor
outsl
subb
push
jnp
lock
test
fildll
jp
mov
push
imul
pop
mov
sar
in
pop
add
dec
arpl
cmp
sub
popl
lds
cwtl
cmpsl
fistpll
pusha
mov
out
or
mov
inc
jl
inc
call
xchg
sbb
push
ret
ss
mov
mov
or
add
jno
xor
xor
loop
ja
inc
or
mov
adcl
push
pop
out
jb
and
xor
xchg
mov
clc
or
fsub
setg
lahf
lret
pop
es
test
stos
mov
loope
or
sti
sbb
push
lods
jp
xchg
mov
pop
dec
jg,pt
test
dec
xchg
cli
js
jl
lcall
push
movl
dec
mov
push
aaa
jl
mov
aad
push
mov
dec
or
add
rolb
rolb
add
xor
jecxz
xchg
dec
clc
xor
insb
icebp
jns
mov
rol
inc
xlat
xchg
outsb
dec
and
and
in
andb
sahf
add
pop
push
xor
mov
lret
push
ret
aas
xchg
pushf
sub
mov
in
icebp
mov
mov
fwait
sbb
nop
lock
mov
push
xchg
ds
cmp
adc
loope
sbb
add
push
mov
dec
stos
add
fimuls
sarl
push
scas
outsb
clc
push
inc
jbe
xchg
mov
mov
mov
data16
inc
push
mov
and
push
sahf
sub
es
ja
xchg
nop
push
and
mov
xchg
ljmp
testb
fnstenv
subb
shl
add
pushf
sti
sbbb
push
test
inc
xchg
xchg
fidivrl
xor
call
icebp
or
sub
mov
push
sti
fildl
xchg
orb
loop
sub
cmp
adc
sub
insb
sbb
loopne
mov
fists
push
push
cmpsl
jle
dec
out
xchg
mov
loop
dec
sti
cmp
mov
mov
mov
fbld
mov
mov
xor
jbe
lock
mov
test
xchg
enter
sbb
sub
dec
aaa
and
dec
xchg
mov
pop
mov
or
imulb
mov
mov
cli
dec
push
or
fisubs
aad
dec
xor
add
clc
mov
mov
mov
sbb
fisttpl
mov
mov
jge
daa
jl
mov
into
cld
xlat
pusha
sbb
cld
fsubrl
in
and
mov
jmp
cld
clc
or
gs
add
pop
inc
nop
fwait
test
ljmp
push
dec
push
out
hlt
add
and
aam
lea
int3
loope
adc
adc
xchg
xor
or
sub
call
xor
in
insl
xlat
push
clc
ja
mov
mov
cltd
jbe
jecxz
imul
es
push
fistpl
test
push
or
mov
sub
mov
dec
add
cmp
inc
loopne
inc
mov
insb
xchg
add
mov
pop
das
mull
pop
mov
jo
sbb
push
mov
and
inc
mov
into
out
inc
das
xchg
pop
xchg
les
sti
mov
push
sub
test
lods
cmpxchg
stos
je
mov
in
sbb
sbb
adc
adc
lock
inc
add
lcall
mov
shlb
in
push
or
jmp
push
pop
outsl
sbb
sub
xor
insl
movsb
es
fstpt
push
sbb
int3
stc
push
jle
test
mov
push
jb
fs
mov
mov
mov
call
sub
imul
mov
dec
mov
adc
inc
jnp
shrl
sub
loope
jl
hlt
add
sbb
push
adc
mov
call
mov
aad
mov
xorb
rorl
or
mov
pavgb
mov
sar
dec
push
bnd
xor
push
cmp
mov
imul
cmp
outsb
push
pop
pop
add
adc
sbb
mov
lret
stc
cld
push
arpl
xchg
movsl
and
fcomp
mov
and
add
dec
out
sbb
cli
das
jbe
push
and
adc
push
cmpsb
ret
add
shr
sti
fidivs
pop
jg
jg
incb
repnz
add
and
pop
add
add
pop
dec
adc
push
stos
mov
inc
nop
shr
loope
push
sbb
smsw
xor
or
pop
fsubs
fmuls
insb
pop
cmpsb
mov
add
jg
xchg
or
pop
cmpsl
mov
or
test
sbb
test
jg
rorb
mov
pop
cmp
mov
inc
jbe
fsubl
add
jl
sbb
jecxz
into
inc
adc
push
sbb
ficompl
add
sbb
cwtl
nop
cwtl
test
xor
lret
jle
jge,pt
mov
push
js
sahf
test
mov
cmp
sbb
out
xchg
testb
push
jb
xor
dec
fistps
xor
sbb
mov
mov
cli
rorb
mov
into
xchg
and
popa
inc
das
fdivrs
xor
jp
inc
dec
cli
mov
movsbl
outsl
orb
clc
insl
sub
stc
push
add
adc
pop
hlt
gs
xor
fisubrl
mov
push
mov
add
mov
sbb
sub
sbb
outsb
or
popa
aas
pusha
loop
mov
cmpsb
mov
push
pop
out
xor
sub
add
xor
nop
ficomps
rorl
push
shrl
aaa
outsb
xor
loop
mov
push
lea
outsl
inc
es
jle
add
sub
jecxz
sbb
inc
sbb
das
push
push
das
sub
xor
sahf
movsb
push
dec
dec
enter
jmp
lcall
inc
push
xchg
adc
pop
lea
test
push
shlb
xorl
jno
popa
cmp
xchg
das
and
mov
or
negl
lret
and
mov
es
fimuls
sub
mov
adc
sub
dec
enter
sar
out
pop
cwtl
int
mov
dec
rcl
or
call
adc
xor
mov
cs
das
inc
sbb
mov
pop
dec
adc
adc
lret
mov
dec
shld
ss
pop
push
sub
sbb
or
pop
lods
cli
push
jecxz
add
ss
push
lcall
cmc
or
in
outsl
cltd
push
xor
mov
mov
loope
xchg
jle
jecxz
xchg
adc
aaa
mov
xchg
adc
xor
sbb
inc
mov
xchg
leave
test
inc
sub
mov
xchg
ds
repz
aaa
mov
movsl
mov
or
and
mov
icebp
dec
dec
dec
movsl
mov
jl
mov
in
pop
shlb
imul
push
arpl
dec
mov
cmp
std
inc
inc
push
lods
repnz
inc
add
add
scas
or
mov
inc
js
add
pop
mov
mov
inc
cmp
dec
js
jmp
or
push
outsl
ret
inc
pop
sbb
sbb
loop
cmpsb
addr16
dec
mov
adc
loop
mov
ljmp
push
or
and
mov
add
add
and
add
sbb
int3
loopne
js
cmpb
lcall
push
ret
xor
xchg
push
add
push
fistpl
mov
push
jecxz
daa
outsl
out
cmpb
push
adc
mov
mov
mov
outsl
popf
out
mov
add
outsb
jge
fistpll
dec
add
xor
inc
xor
jae
xchg
push
out
adc
push
or
xorb
xchg
in
and
in
popl
cld
repnz
shll
xchg
cmc
hlt
mov
adc
sbb
call
mov
pop
lock
rolb
mov
sbb
mov
leave
test
in
sub
in
loop
or
xor
test
and
pop
data16
xor
pop
mov
fadds
inc
mov
mov
cmp
adc
inc
add
sarb
push
jecxz
les
in
mov
cmp
mov
or
cmp
incl
jne
fmull
jne
push
adc
les
stc
or
gs
adc
loopne
aaa
call
pop
add
jne
mov
or
mov
cld
pushf
shlb
or
in
stos
inc
pop
pusha
mov
mov
or
imul
lods
add
pop
jle
mov
sbb
jo
popf
xchg
test
cmp
repnz
push
cmp
cwtl
jbe
test
les
mov
add
rcrb
sahf
lret
rcll
add
daa
in
push
xor
scas
sbb
nop
add
addl
out
pusha
aad
add
cli
sbb
in
pop
fst
push
fwait
sbb
mov
bound
into
aaa
adc
or
loop
int3
leave
or
push
add
push
movsb
enter
sbb
dec
sar
pop
sbb
pop
stos
clc
adc
test
jp
jnp
pop
or
cmp
add
out
pop
cmp
mov
add
add
and
adc
sbb
xlat
push
mov
push
rolb
jb
adc
idivb
add
or
xor
mov
sahf
loop
inc
inc
rcll
pusha
pusha
ljmp
inc
xor
pop
add
insl
cmp
add
bound
add
jl
add
pop
shlb
test
pop
dec
adc
sbb
jb
sbb
jl
and
ret
add
scas
test
fsubp
or
dec
mov
sbb
pop
xor
ds
push
pushf
scas
cmc
push
ret
es
inc
nop
clc
jb
in
push
xchg
xchg
cmp
rclb
bound
pop
int3
mov
enter
je
lock
push
mov
stos
and
hlt
xchg
cmp
out
ljmp
inc
cmpsb
adc
sub
mov
push
push
pop
cmpb
mov
sbb
jae
je
cmpsb
push
sub
and
stc
fmul
push
decb
and
and
fildll
mov
mov
mov
adc
inc
test
mov
mov
test
test
pop
mov
data16
ror
shlb
stos
adc
jecxz
jmp
add
dec
push
mov
in
xchg
js
scas
cmp
adc
jno
sbb
pop
nop
icebp
push
loopne
call
sbb
push
mov
cld
pop
loop
sbb
and
sbb
xchg
push
mov
inc
insb
jmp
testb
dec
or
sbb
mov
rcrb
pop
mov
enter
push
mov
xchg
rclb
mov
sub
hlt
and
push
inc
pushf
adc
xchg
or
les
jbe
push
add
nop
dec
fs
adc
push
xor
adc
cli
lods
sbb
jmp
mov
mov
mov
push
cmp
test
clc
and
push
jbe
inc
movsl
icebp
ja
push
xor
inc
push
ffree
jg
nop
movsb
inc
ss
cmp
dec
jg
mov
pushf
cwtl
inc
jno
dec
inc
divl
popl
int
mov
cmpl
push
rcrb
dec
dec
and
jne
push
aaa
xchg
push
insl
sub
ja
lock
addb
xchg
cwtl
mov
jbe
out
push
daa
enter
jmp
lcall
adc
inc
nop
clc
loopne
and
xor
jecxz
pop
sti
add
and
stc
fs
or
xchg
cli
mov
mov
addr16
aad
mov
loop
inc
ss
bound
or
rorb
adc
lcall
push
push
xor
lret
jecxz
sbb
dec
mov
in
decl
pop
jne
mov
ljmp
fwait
mov
jg
xor
xchg
lret
push
and
pop
xor
sbb
cmp
inc
sbb
pop
inc
jecxz
or
cwtl
cmc
decl
or
dec
or
push
jb
sub
call
clc
xor
test
daa
mov
pop
test
mov
jp
adc
sub
sahf
insl
push
dec
rclb
or
incl
cld
inc
mov
push
add
xchg
jno
inc
mov
cltd
fwait
xor
add
cmp
jle
je
rorl
xchg
cwtl
ret
or
std
xchg
push
cld
and
add
push
dec
adc
outsl
add
push
aad
fsubrs
and
push
imul
mov
popa
int3
mov
in
and
sbb
mov
lock
nop
cmp
jne
add
or
ljmp
push
in
cmpsb
jmp
adc
adc
loop
add
xchg
adc
nop
rorb
sbb
xlat
mov
jg
add
fisubl
std
lds
hlt
sbb
mov
loop
not
fwait
cld
lahf
aam
or
or
cmpsl
mov
push
mov
test
call
push
sar
add
pop
dec
or
mov
test
mov
mov
dec
add
push
jl
in
dec
data16
shll
or
cmpsb
jl
jmp
xor
les
add
push
and
xchg
pop
loope
add
aaa
cmp
cmp
mov
or
cmp
cld
dec
into
push
pushl
ja
aas
mov
pushf
dec
fisttpll
pop
shl
adc
or
and
mov
movsb
movb
mov
roll
mov
pop
push
loop
push
mov
pop
in
mov
push
ja
mov
mov
sbb
fs
shrl
mov
xchg
pop
or
pushf
cli
filds
adc
movsb
fmul
inc
add
hlt
test
pop
xor
out
pop
add
sbb
mov
adc
clc
lret
aas
xorb
and
ds
aas
push
out
sub
scas
add
hlt
cmpb
mov
std
scas
mov
mov
xor
push
xchg
mov
addr16
inc
adc
imul
mov
add
and
les
dec
enter
mov
dec
jne
mov
mov
push
pop
or
sub
push
inc
push
shll
and
mov
das
push
jg
mov
adc
ret
and
push
jno
push
mov
jmp
call
inc
inc
leave
and
or
and
jge
bound
mov
stos
mov
mov
shlb
cmpsb
sub
in
outsb
push
fbstp
and
jge
cld
add
fdivrs
and
lods
test
jp
or
outsl
or
and
nop
les
bound
es
or
andb
aam
mov
test
mov
in
or
fists
mov
sti
cld
push
xchg
add
add
icebp
push
jl
cltd
mov
inc
push
jg
mov
push
out
fucomi
sbb
push
cmp
pushf
jns
adcb
lcall
pushl
test
mov
pop
push
or
adc
nop
out
jl
lret
lock
pop
jmp
inc
mov
pop
jl
mov
insb
sbb
inc
ss
sbb
int
and
ljmp
fmul
aam
clc
inc
jl
call
bound
stos
jle
pop
cmp
pop
xchg
inc
jno
or
rolb
sub
lock
fstpl
xchg
test
cmp
pop
add
xchg
xor
pusha
inc
push
sbb
clc
jecxz
data16
out
mov
xchg
xchg
stc
and
lahf
jmp
push
fidivl
inc
dec
push
xchg
add
xor
mov
lret
or
inc
xor
mov
ljmp
sub
sbb
mov
or
aad
add
das
cli
fistpll
adc
out
rep
hlt
cmp
adc
inc
inc
adc
ja
push
cmp
adc
jmp
dec
xor
sbb
psrld
mov
out
sbb
push
ret
add
xchg
adc
js
mov
rclb
xor
ljmp
call
push
mov
inc
cmp
add
call
mov
rorb
sbb
or
pop
mov
test
push
sub
js
stos
in
popl
sub
les
inc
sbb
mov
std
xlat
mov
in
repnz
out
add
icebp
push
repnz
jl
xorb
push
push
jo
fwait
loopne
xchg
mov
xchg
xchg
inc
and
push
lods
call
test
xor
inc
imul
je
xchg
ss
jle
daa
insb
arpl
clc
pop
mov
into
jp
inc
inc
cmp
xor
or
xchg
loope
aaa
sub
ficomps
call
or
adc
aaa
addb
push
inc
das
mov
dec
add
jg
in
rcrb
inc
sub
jmp
ja
mov
inc
adc
cltd
sbb
popa
cmc
sub
mov
pop
scas
jg
push
xor
inc
mov
xor
or
test
or
into
xchg
or
jb
jle
daa
mov
adc
sbb
in
sahf
adc
ss
iret
push
ds
test
cmp
jge
sbb
mov
push
push
not
fnsave
loop
inc
mov
std
pushf
test
fadd
int3
jnp
es
test
push
or
filds
ret
subb
sbb
dec
ret
scas
scas
add
cmpsb
mulb
push
inc
aaa
xor
xchg
push
xor
and
or
sub
push
inc
jle
lea
mov
dec
mov
rcl
movsb
out
cld
scas
xor
in
dec
add
xchg
and
add
jl
rcrb
mov
mov
into
out
mov
add
addb
mov
jg
in
faddp
cmp
cmpsl
stc
inc
inc
shlb
int
out
clc
fcmovnb
add
sbb
pusha
add
or
les
ljmp
ret
fs
inc
sbb
clc
xor
insb
jno
std
mov
or
pop
push
jl
fistps
ss
icebp
or
dec
clc
sahf
std
jmp
xorl
xlat
inc
mov
mov
pop
stos
and
loopne
mov
sbb
push
nop
mov
ljmp
cmp
loop
xor
lcall
sub
push
push
inc
and
mov
ss
into
movsb
in
add
inc
push
outsl
and
nop
mov
js
cmp
pop
enter
repnz
scas
or
out
inc
cmp
mov
mov
add
push
aad
push
fwait
iret
xchg
xlat
add
mov
les
fisubrs
mov
fwait
orl
je
loopne
mov
add
xor
add
stos
movsb
pop
enter
aas
dec
dec
push
xor
roll
fcomip
js
insb
xor
jle
add
cltd
xor
test
leave
xchg
clc
push
roll
pop
leave
cmp
mov
mov
adc
push
lds
inc
call
psrlw
xchg
shrb
aam
int
push
add
stos
lret
mov
sarb
mov
stc
xchg
mov
pop
push
mov
xlat
scas
es
lret
push
int3
bound
xchg
adc
sbb
nop
sbb
fistpll
inc
jnp
mov
mov
decl
sub
adc
adc
mov
cmp
out
jl
icebp
clc
or
jbe
inc
in
enter
hlt
notb
mov
out
repnz
push
adc
dec
add
ret
push
ficoml
fmul
decl
hlt
dec
mov
jnp
dec
pushl
lcall
mov
stos
orb
sar
mov
push
jo
jmp
fcompl
lret
loopw
neg
mov
std
add
mov
mov
inc
mov
xor
shll
dec
add
mov
inc
js
cmpsl
mov
inc
sub
vmovd
mov
sti
mov
or
pop
add
inc
and
adc
fbstp
inc
dec
ss
and
push
jge
and
dec
xchg
push
ja
dec
pusha
fbstp
jo
xchg
mov
or
push
dec
and
mov
orl
dec
loope
add
sahf
and
ljmp
mov
fadds
popa
push
xchg
pop
sub
add
mov
pop
fdivrs
bound
mov
mov
xor
xchg
stc
or
cli
testl
inc
ret
pop
pop
mov
add
sub
mov
das
jo
lcall
pop
imulb
shll
ljmp
jnp
lods
cmpsl
arpl
out
pop
sbb
cmpsb
jl
outsl
js
sbb
inc
add
add
dec
shrb
addb
inc
mov
push
sbb
les
aaa
cmp
sub
outsl
pop
pop
pop
jns
mov
ds
ret
sub
fucomi
xadd
mov
cmpsb
pusha
inc
mov
lds
aaa
movsb
js
add
cltd
je
popf
cli
andb
sbb
inc
faddl
cmp
hlt
dec
or
stos
pusha
push
or
mov
hlt
adc
pop
add
sbb
nop
or
mov
cmpb
subl
xchg
bound
scas
adc
pop
or
cld
in
push
ljmp
or
ret
mov
scas
mov
add
add
int
dec
dec
jl
sbb
cld
mov
dec
dec
aaa
in
clc
outsl
jb
push
add
testb
cmc
mov
inc
sub
test
xorb
or
inc
stc
je
mov
and
enter
push
ret
cld
pop
iret
mov
inc
js
or
clc
mov
clc
aad
cltd
mul
pop
add
push
mov
dec
aas
or
lods
jo
sbb
jmp
inc
add
jecxz
sbb
jae
ret
rolb
mov
or
pop
cmp
incb
pop
push
add
fldl
sbb
sti
test
mov
call
sub
into
dec
sub
jg
test
inc
jecxz
sub
stos
nop
dec
test
add
inc
ljmp
mov
imul
es
outsl
int
mov
sub
push
aad
clc
pop
xchg
push
rolb
sahf
insl
mov
sti
test
subb
outsb
aas
test
dec
aam
dec
mov
xchg
push
shlb
roll
dec
jl
das
add
aas
and
out
into
outsb
xchg
pushl
and
lds
mov
dec
sub
mov
popf
shrl
icebp
push
imul
cmp
movsl
andb
add
fcomip
lahf
dec
js
lds
ret
cmp
push
scas
pusha
pop
sbb
loop
decl
push
add
outsl
clc
or
ja
jmp
lock
rcll
push
dec
fcoml
and
dec
enter
dec
cmpsb
sub
mov
pop
and
mov
call
mov
sbb
cmp
sbb
insl
sub
test
jp
arpl
ss
xchg
iret
add
pushf
mul
daa
jl
adc
imul
cld
xchg
xchg
pop
clc
imul
xchg
shrl
cmpsl
out
sub
popf
add
test
roll
sub
cmp
adc
add
add
sub
mov
test
xchg
icebp
mov
imul
mov
sbb
sub
push
stos
dec
xchg
jp
push
ficoms
ljmp
stos
shl
rcll
outsl
testb
test
add
cmp
mov
jp
hlt
jecxz
xchg
shlb
push
push
pusha
cli
fadds
mov
xor
inc
mov
xchg
or
fimull
std
jg
jl
jnp
clc
in
jl
outsb
sub
nop
lds
xchg
outsb
subb
jge
dec
add
rcrl
push
jo
push
cmp
out
sar
or
push
vpmacswd
sub
push
add
incb
push
popa
sbb
nop
test
push
xchg
adc
jge
mov
js
push
jmp
add
mov
pop
scas
in
xor
mov
mov
push
ljmp
or
stc
adc
inc
adc
call
and
add
or
mov
fisttps
daa
adc
and
call
iret
call
test
pop
rol
mov
inc
adc
int3
mov
cld
lock
xor
sbb
imul
and
push
scas
or
stc
roll
mov
adc
and
in
xor
into
add
add
or
je
std
pop
xor
sub
add
pop
add
sub
testb
xchg
push
clc
out
add
pop
dec
inc
add
nop
cmp
ret
mov
xor
lcall
int
pop
push
shlb
dec
and
or
ss
and
std
xchg
pusha
mov
mov
adc
lret
xor
shl
fcomip
lcall
and
mov
sti
pop
pop
test
pop
adcl
stos
add
addl
popf
mov
adc
mov
orb
xlat
push
push
shr
sbb
notb
push
pop
hlt
movsb
adc
mov
jg
jbe
loop
lea
sub
popa
loop
push
aad
dec
add
pop
jo
cmpsb
imul
ss
outsb
mov
xor
sub
inc
loopne
mov
push
faddl
adc
cltd
incl
pop
je
insl
pusha
sbbb
shl
pop
pop
adcb
lods
push
popa
adc
test
dec
ret
ljmp
dec
sbb
gs
push
imul
pop
sbb
adc
mov
push
push
or
push
adc
fs
xchg
dec
inc
push
jg
cld
call
sub
mov
out
daa
movl
sub
lods
repnz
xchg
lret
lcall
mov
clc
and
cmp
mov
dec
xor
inc
cmp
or
pop
dec
ds
adc
sbb
pop
add
inc
or
mov
cltd
push
jecxz
lret
data16
scas
xchg
inc
mov
push
sub
push
or
ljmp
push
mov
xor
scas
or
les
or
scas
add
jo
push
andb
lea
mov
and
outsb
jnp
movsb
push
cwtl
scas
out
dec
jg
push
mov
call
dec
dec
adc
popf
xchg
add
pop
icebp
lcall
push
and
cs
mov
adc
push
lds
out
add
dec
mov
cmp
push
sub
je
hlt
lcall
xor
sti
xor
push
dec
leave
mov
sub
inc
pop
mov
arpl
clc
lock
mov
and
fsubs
mov
add
pop
ds
test
add
cwtl
divb
push
and
jbe
xlat
insb
mov
jg
pop
out
scas
shlb
sbb
push
push
push
and
cmp
dec
ljmp
leave
add
inc
jmp
mov
sbb
sub
dec
mov
sahf
movsb
hlt
data16
mov
fcmovb
dec
enter
scas
shrb
aam
pop
in
mov
fcomps
shll
mov
xchg
jbe
mov
xchg
decl
ja
or
fcmovb
cld
add
adc
xlat
or
push
movsl
cmpsl
fisubl
std
inc
popa
adc
xor
outsl
push
out
sbb
push
mov
push
push
mov
scas
outsl
ficoml
in
dec
addb
mov
adc
push
sbb
test
adc
and
add
mov
call
jg
dec
in
cmc
scas
cmp
dec
stos
es
add
add
adc
movsb
fidivrl
cld
arpl
add
call
adc
test
mov
lret
adc
sbb
mov
cwtl
pop
push
test
int3
scas
mov
and
or
and
call
cwtl
mov
test
mov
loop
aaa
adc
rorb
push
sbb
in
jge
insl
add
shlb
mov
pmulhuw
loope
jg
jle
in
xor
push
xchg
imul
sbb
enter
subb
inc
cmp
add
xor
ljmp
xor
or
xor
dec
scas
and
int3
dec
adc
mov
and
inc
mov
push
ret
mov
cmp
xor
sub
push
sub
push
xchg
inc
or
jp
sub
add
fucomi
clc
lock
or
push
cli
call
fcomip
test
mov
out
scas
pushf
repz
and
or
jg
hlt
xchg
sbb
daa
lods
arpl
or
dec
and
lret
dec
jg
roll
mov
lods
jmp
adc
jmp
pop
rcrb
cmp
mov
cld
jg
les
mov
and
push
sbbl
out
or
pop
lea
fwait
insb
mov
shlb
push
fistpl
cmp
into
adc
gs
cmpsl
adc
add
icebp
xlat
inc
push
xchg
out
andl
push
fstpt
and
inc
dec
rcll
ret
lock
adc
adc
xchg
sub
fmuls
jecxz
push
adcb
push
test
or
adc
add
mov
cld
sbb
xor
fisttpll
mov
mov
test
mov
inc
je
xor
and
and
cmp
pop
rclb
xchg
loop
sub
decl
test
sub
xor
in
push
inc
shrl
lods
rorb
es
and
jle
sbb
hlt
pushf
mov
lods
imul
mov
les
cmp
inc
jp
clc
jmp
inc
fcoml
fimull
xchg
pusha
xchg
lret
hlt
mov
loopne
insb
scas
and
dec
in
or
out
and
mov
les
shlb
loope
out
add
mov
inc
xor
loop
add
je
and
loope
xchg
addl
ret
pop
jmp
pop
cli
or
pop
rorb
push
cmp
add
arpl
and
aas
aas
lret
rcll
xor
sbb
mov
push
rclb
add
out
jmp
add
sub
dec
sbb
push
cmp
push
sub
test
das
add
fnstenv
pushf
jae
push
push
sub
lock
movsb
lret
add
dec
pusha
cmc
cltd
ret
lret
sub
cltd
lea
mov
push
rcr
sbb
xlat
movsb
pop
or
mov
add
sbbl
or
vaesdec
popf
mov
adc
mov
lea
mov
inc
cwtl
xor
clc
or
incb
inc
sub
sti
fs
inc
jg
xchg
adc
push
cli
inc
inc
jp
jae
imul
push
movl
js
mov
jne
jbe
sbb
push
adc
push
jb
jle
clc
stos
mov
ss
gs
add
outsl
adc
js
and
nop
inc
xor
pushl
inc
loop
les
mov
dec
push
popa
mov
add
adc
leave
adc
dec
push
ret
mov
add
and
loopne
mov
lods
xchg
ret
cmc
pop
inc
add
sbbb
ja
lods
sbb
fadd
mov
dec
xor
sbb
or
sub
inc
fists
cmpb
dec
cmp
fbld
xor
fimuls
add
mov
cmp
mov
pop
adc
mov
cs
lahf
std
inc
push
mov
mov
in
pop
xor
lds
les
cwtl
xchg
or
insb
xchg
call
decl
ds
jecxz
sub
mov
ss
pushf
push
jg
outsl
xchg
adc
test
aaa
cld
pop
or
aaa
cmp
test
push
nop
test
or
dec
shrb
outsb
adc
ljmp
sub
cmpsb
xchg
int3
dec
pop
and
sbb
xchg
pop
adc
cmp
loop
data16
add
jecxz
adc
cmpsb
pmaxsw
mov
pop
ret
pusha
movsb
add
mov
mov
adc
aaa
jle
jmp
adc
push
addl
pop
fcoml
push
or
fcoms
sbb
push
pop
cmp
sub
dec
adc
pop
sbb
sub
in
imull
insl
fbld
xchg
cmp
call
sti
fadds
sbb
nop
sbb
or
test
lcall
fcoml
dec
aaa
movsb
int3
lods
enter
stos
lret
test
mov
jo
loope
cmp
pop
lock
xlat
rorb
int3
and
pop
mov
out
inc
mov
cmp
push
push
dec
test
out
mov
sbb
xor
or
adc
mov
pop
dec
dec
mov
rcl
lahf
or
jge
stc
mov
or
call
dec
nop
add
stos
aaa
in
cmp
inc
fadds
xchg
popa
lcall
outsl
pop
les
je
add
xorl
sub
imul
call
or
xor
xlat
cmp
test
mov
pop
and
cs
jecxz
add
or
rorb
enter
sbbb
mov
repz
or
andb
insl
xor
fstpt
mov
mov
push
add
insb
push
insb
std
pop
cmc
aaa
jbe
jmp
movsb
sub
testb
or
lahf
inc
shl
gs
call
clc
jle
inc
sub
inc
sub
mov
inc
rclb
cmc
loopne
push
mov
sub
xor
ret
pop
sbb
aaa
sbb
push
es
mov
pop
lea
pop
leave
sub
scas
push
cld
ja
in
mov
test
and
jo
bound
or
push
xchg
shr
out
pop
cs
push
loope
clc
push
cwtl
push
jb
sti
pop
add
dec
mov
fisttpl
mov
xor
sub
pop
fadd
cmp
add
add
cmp
sbb
lcall
rclb
jg
mov
add
cmp
fmuls
xor
out
into
push
adc
js
xlat
pusha
add
stos
fiaddl
aam
aas
add
das
gs
and
cmpl
fs
cld
jns
lcall
cmp
fimuls
pop
add
push
roll
aam
mov
fcoms
pop
ja
mov
and
decl
push
lds
cmp
add
mov
movsb
sub
cmpsb
jbe
and
sub
or
jne
mov
cmpsb
in
add
mov
add
jno
pushf
cmp
icebp
or
adc
cld
push
fisubs
and
or
jp
dec
xor
shrl
dec
pop
call
or
clc
xlat
jge
add
adc
sub
push
sti
or
adc
jne
mov
idivl
call
and
fbld
push
cmpsl
jge
mov
add
loope
jmp
lods
pop
inc
or
push
clc
out
repnz
shll
scas
insb
movsb
add
outsb
cmp
add
sub
mov
popf
ja
daa
cmc
add
sahf
dec
mov
cmp
test
arpl
int3
mov
cli
pop
pusha
sub
jge
repz
cwtl
mov
insl
fcoms
fdivrs
sub
sbb
pusha
fnstsw
andnps
lods
movsl
stos
scas
fldl
add
fbstp
incb
nop
arpl
xor
test
bound
in
clc
or
xchg
ljmp
pop
or
jmp
mov
mov
or
imul
dec
or
xchg
rol
xlat
or
add
outsb
fwait
mov
lds
inc
gs
icebp
mov
jp
or
xchg
add
push
jmp
sub
dec
loope
jno
sti
add
xchg
les
out
fdivrs
or
aam
lock
jne
mov
mov
dec
popa
out
lcall
pusha
add
mov
or
sbb
mov
dec
pop
loope
mov
mov
dec
add
jmp
rcll
imul
dec
add
notl
and
lret
add
sbb
push
in
ss
jg
inc
sub
stc
test
push
sbb
add
inc
inc
repnz
orb
ja
mov
inc
cs
and
test
bnd
loop
stos
test
imul
movsl
loopne
movsb
test
pop
sub
and
mov
cmp
scas
in
cltd
mov
sub
push
mov
cli
outsl
push
std
pop
cs
jge
stos
push
pop
insl
out
add
cli
xor
push
lret
xchg
add
or
inc
rcr
push
sahf
push
shrb
outsb
inc
or
filds
mov
adc
out
xor
fistps
mov
and
xor
mov
rclb
ret
and
stc
aas
push
call
sub
jns
lret
dec
push
imul
xchg
shrb
push
imul
jno
pusha
out
mov
imul
cmp
or
and
cmpsb
popf
xchg
mov
inc
inc
or
or
push
sub
add
pop
and
xor
xlat
aaa
or
fisubrs
cld
decl
fimull
add
push
nop
sub
sbb
fwait
mov
sub
push
sbb
je
pushf
data16
loope
push
mov
and
pop
sub
sub
ljmp
sub
das
jb
out
notl
repz
push
adc
inc
jno
incl
fcmovu
rclb
iret
outsb
or
adc
pusha
insl
cmp
add
mov
loop
es
dec
ss
movsb
push
or
sbb
lods
es
js
xchg
add
and
add
jb
add
add
jecxz
test
xor
add
jle
cwtl
adc
arpl
test
xor
lods
mov
decl
into
xchg
cwtl
andb
pop
push
test
or
lock
loopne
mov
dec
repz
loope
add
int
xchg
mov
leave
and
aas
jb
jg
ret
loop
mov
or
adc
xchg
push
rcll
add
fwait
jbe
sub
stos
xor
and
adc
push
nop
andb
leave
js
mov
xor
push
bound
fwait
add
ljmp
mov
ds
mov
xlat
mov
xlat
sub
xorb
add
loop
pushf
insb
lods
jp
push
cld
and
test
xchg
mov
fidivrl
add
rcl
clc
mov
cmp
sbb
daa
mov
hlt
cmp
or
or
mov
jbe
xor
cmp
sub
pop
pusha
mov
ljmp
pop
sub
pop
pop
mov
xchg
fcmovb
les
cmpsb
insl
and
incb
jmp
into
push
or
pop
loope
inc
out
clc
sbb
rcrl
call
xor
and
addb
clc
inc
mov
xchg
les
mov
into
dec
loop
inc
mov
stos
imul
movsl
add
pop
or
xor
sarb
dec
push
andl
push
sub
push
nop
sub
pop
adc
fdivp
mov
or
cmp
cmpsb
push
test
pushl
lret
repz
inc
pop
incl
loope
pop
push
sbb
sub
xchg
ljmp
cmp
cmp
xor
cmpsl
or
xchg
mov
mov
andl
movsb
gs
fdivrl
icebp
or
add
fprem
xchg
call
sub
ret
rolb
mov
inc
add
push
movsb
sbb
stos
push
or
push
pop
cmpsb
leave
pushf
xor
cmpsb
or
pusha
gs
jl
adc
ljmp
mov
fdivs
bound
inc
shrl
add
mov
xchg
push
nop
js
adc
jmp
cwtl
loop
js
push
mov
or
sub
dec
mov
dec
dec
add
push
mov
call
pop
test
pop
sbb
add
scas
xchg
dec
pusha
cwtl
inc
icebp
ljmp
add
dec
loopne
xchg
push
imul
mov
add
ret
fistpll
aad
push
sbb
mov
mov
loope
scas
inc
aam
add
pop
add
sbb
dec
test
aam
xor
mov
lods
add
mov
fdivs
ss
cltd
testb
pop
cmpb
inc
mov
cs
lock
hlt
dec
cmp
and
sti
jb
or
incb
or
cmp
fmuls
mov
mov
aaa
les
mov
xlat
loope
in
mov
push
jl
int3
jge
data16
aam
push
scas
jbe
nop
repnz
loopne
mov
mov
mov
outsl
push
pop
inc
xchg
dec
dec
push
inc
lock
sub
outsl
test
pop
push
sub
clc
xchg
push
dec
movsl
mov
fdivrs
push
adc
idiv
call
pop
mov
pop
test
and
pop
cmpsl
sbb
xchg
shll
das
inc
jle
gs
cmp
fmull
rorb
aad
cmpb
inc
fimull
int
push
dec
cwtl
movsl
push
push
hlt
jmp
call
in
insb
daa
imul
push
je
pop
pop
fimuls
lods
movsb
xor
mov
cs
adc
jae
aas
push
push
sbb
insl
shl
mov
adcl
sub
rorl
jge
orb
je
add
out
jl
mov
mov
negb
mov
incb
cmp
jmp
sbb
stos
add
add
ret
sahf
dec
das
cmp
adc
loopne
or
lcall
mov
inc
mov
ss
or
je
mov
mov
adc
jb
scas
lret
jmp
aaa
cmpsl
outsb
ljmp
lods
mov
nop
pop
pusha
cli
lcall
adc
arpl
and
pop
dec
into
aad
jns
je
mov
xchg
sbb
fwait
adc
jg
cmp
lcall
mov
insb
decl
fimuls
insl
cmp
xlat
js
loopne
lret
rolb
nop
jle
jo
inc
shrl
xchg
scas
repnz
sub
add
es
cs
ficompl
xchg
fdivrs
pop
mov
push
icebp
cmovp
scas
jae
aam
lods
lcall
sbb
and
mov
mov
andb
cmp
ret
out
icebp
clc
and
jl
test
pop
clc
pop
inc
jl
or
add
adc
dec
negb
sbb
sbb
mov
ss
or
loop
js
inc
or
mov
pop
sbb
add
cwtl
sbb
inc
push
mov
aam
mov
adc
mov
enter
inc
call
pusha
notl
iret
out
add
in
mov
jmp
fistpl
add
mov
subb
push
inc
jbe
pop
or
dec
xchg
bound
jl
sbb
mov
fcompl
mov
jp
sub
xchg
and
jl
shll
in
scas
sub
fnstsw
jno
xchg
std
or
push
sbb
sub
gs
fstpt
dec
cwtl
mov
ja
ljmp
dec
in
lret
in
jne
adc
and
mov
lahf
lret
fs
sti
andb
cs
popa
xor
cmp
fisttps
sti
das
out
xlat
adc
jbe
sbb
inc
mov
cmp
cmp
sbb
pusha
and
mov
ja
popa
lret
pushf
mov
adc
mov
mov
into
adc
in
shr
pop
mov
mov
rorb
jg
lods
mov
loopne
add
stc
inc
sahf
mov
add
mov
adc
in
push
es
push
lcall
test
aam
xor
inc
cli
stos
fs
mov
adc
push
loopne
mov
ds
mov
sbb
cmpsl
movsl
pop
cmpsb
jl
mov
dec
mov
and
ja
in
cmp
inc
fadd
push
add
mov
mov
decl
xchg
lahf
mov
aas
clc
fwait
and
sbb
lds
mov
ret
imul
ret
push
cld
in
loope
or
ret
fists
mov
pop
push
and
sub
in
pop
icebp
out
jmp
dec
sub
jmp
inc
or
push
mov
xor
jmp
cmp
push
mov
add
das
add
in
cli
icebp
outsl
push
int3
xor
sub
testl
es
inc
icebp
add
add
imul
push
xor
xchg
fildll
pop
xchg
outsb
sarb
imul
int3
cmp
sub
incl
scas
cmp
xorb
xchg
pop
xchg
and
sbb
jle
out
pop
cmp
mov
or
popf
mov
jmp
divb
inc
inc
lcall
mov
test
cmp
and
inc
and
inc
xchg
data16
int
test
loopne
mov
and
les
dec
adc
fildll
fs
pop
cld
cwtl
clc
call
jle
adc
xor
xchg
in
xor
xchg
lods
loopne
cmovbe
cli
ljmp
dec
aad
int3
jl
adc
add
cmpsl
test
mov
cmp
and
lock
sub
push
sbb
add
xor
xchg
aam
jbe
dec
inc
sbb
lea
and
or
inc
jne
pop
xchg
shlb
mov
mov
es
pop
jmp
mov
mov
and
add
cmp
and
sbb
mov
mov
out
mov
jecxz
cs
jbe
add
and
in
daa
adc
pop
pop
xchg
push
push
dec
or
fs
aad
add
mov
popa
sti
pushl
in
aas
push
mov
sub
cmp
mov
lods
stc
sbb
sbb
notl
mov
xchg
add
pop
ret
mov
xchg
subb
inc
mov
nop
into
mov
call
lock
mov
movsl
push
fs
push
lretw
out
test
movsl
lds
sub
scas
mov
test
shll
and
push
xchg
leave
adc
sub
cmc
add
adc
test
push
hlt
mov
cmp
cmpsb
jns
lahf
xchg
jns
loopne
add
xchg
xchg
shll
mov
inc
call
enter
mov
add
jne
pop
sbb
add
inc
sahf
cli
sbb
sahf
sub
rdmsr
mov
push
mov
hlt
mov
dec
push
sbb
or
adc
pop
sbb
hlt
xchg
push
mov
stc
or
or
sbbb
rorb
jns
nop
xlat
xor
mov
push
mov
jl
cld
push
jge
mov
or
cmp
jle
ds
popf
pop
add
lods
push
and
shrb
je
aad
jp
clc
jb
insl
mov
xchg
adc
sbb
mov
mov
push
sbb
lock
lock
les
add
cwtl
mov
push
xor
pop
adc
sbb
aas
jle
xor
mov
mov
or
mov
xor
test
movq
xchg
add
sbb
xor
incl
and
or
mov
jl
lods
jmp
dec
or
shlb
out
jmp
ss
pop
pop
negb
mov
jg
loopne
push
inc
jb
pop
shlb
xchg
sbb
xchg
push
mov
lock
mov
pop
inc
and
inc
mov
data16
mov
js
lock
jmp
xor
jb
mov
jno
cmp
push
add
push
movsb
rorb
fwait
jno
fisttps
jbe
and
pop
jne
sbb
add
mov
mov
les
js
mov
les
lret
adc
adc
pop
cmpsb
lds
add
jmp
add
je
add
nopl
inc
fistpl
rolb
shl
nop
aam
test
and
insb
ds
adc
inc
stos
sbb
inc
sub
cmp
push
add
insb
js
jg
or
and
sbb
cmpb
incb
clc
filds
call
out
inc
test
push
or
hlt
cmpsl
das
jo
ds
movsb
mov
divb
mov
rorb
fidivrs
cld
scas
add
push
icebp
push
sub
into
or
sub
mov
inc
mov
push
or
sahf
xor
sub
jo
jne
dec
and
incl
inc
sub
push
addb
xchg
jg
jbe
stc
jmp
xor
jl
sbb
cwtl
call
in
incl
or
stos
mov
popa
sub
mov
mov
or
push
push
pushf
or
call
add
aam
lods
les
mov
addb
clc
or
fisttpl
flds
mov
inc
movsb
in
jns
mov
xchg
inc
jg
pop
cmp
std
mov
push
call
mov
jmp
popa
std
pop
outsl
clc
in
xor
dec
jno
loop
in
test
or
adc
xlat
sub
mov
sub
jne
pop
dec
les
mov
push
inc
xchg
xchg
leave
cli
je
xchg
and
jle
mov
dec
push
jl
sub
repz
ret
movsl
sub
shlb
push
push
loop
scas
clc
fildl
inc
and
popa
jae
aaa
sti
sub
adc
add
clc
cmp
or
pop
test
outsl
shr
cltd
jno
movsb
out
fdivp
mov
mov
imull
and
sbb
xchg
mov
sarl
out
pop
push
push
test
push
icebp
movsl
cmp
dec
adc
std
mov
lahf
xchg
mov
add
ret
lock
pop
sub
mov
inc
cld
lcall
lods
mov
testl
add
xchg
mov
cmc
jg
push
shrl
fstp
fsubrs
stos
push
fcomps
repz
inc
popa
and
les
xchg
sar
test
jecxz
lcall
xchg
or
or
ret
cmpsb
sub
inc
add
xorb
mov
add
sbb
out
cs
sbb
and
xorb
loopne
lock
daa
or
mov
push
std
sub
pop
mov
cmp
adc
out
and
fwait
pop
or
test
add
pushf
xchg
or
clc
decl
mov
push
adc
add
sbbl
sti
cmp
or
insb
leave
adc
add
mov
pop
fmulp
push
test
sub
dec
push
and
jg
sbb
push
mov
dec
adc
loop
fwait
jmp
push
mov
jmp
in
ss
xchg
mov
std
stc
mov
or
push
int3
mov
icebp
js
push
and
push
adc
xchg
adc
add
sbb
add
jns
jae
rolb
mov
mov
push
inc
iret
sub
jg
add
add
mov
cld
lds
or
sti
clc
es
xor
ss
xchg
hlt
jg
fs
das
hlt
push
std
shll
dec
cmc
inc
xchg
addr16
jg
xorb
in
push
sub
pushf
lock
pop
nop
shll
popf
xor
dec
cs
loop
jnp
test
add
pop
or
adc
cli
cmpsb
mov
push
adc
clc
or
mov
imul
mov
sub
xor
sbb
jmp
sub
mov
pop
movsb
ret
iret
call
dec
xor
mov
inc
mov
mov
and
ljmp
in
cmp
xchg
pop
es
test
popa
mov
sub
imul
lods
jb
sub
out
clc
mov
xchg
test
adc
repnz
xchg
cmc
mov
cs
mov
mov
and
fisubrs
add
aas
and
ljmp
clc
movsb
dec
arpl
es
es
call
mov
cltd
and
sbb
call
add
cmpsl
mov
push
adc
add
out
sbb
clc
add
js
fsubs
call
cmpsb
scas
and
push
out
xor
out
cmp
movb
out
cmp
in
out
inc
inc
imul
mov
pop
push
sbb
push
into
cltd
and
xchg
outsl
rorb
inc
add
lcall
add
popf
jl
push
or
out
incl
mov
lahf
xchg
fdivrl
orb
stos
sahf
lahf
mov
jb
inc
xchg
pop
add
jo
data16
xchg
xchg
icebp
or
cmpsb
js
rolb
jmp
loope
xor
in
daa
lret
pop
sub
pop
stos
ret
ds
or
cmc
pop
aam
push
adc
cmpsb
push
fsubs
in
xchg
xor
lods
cli
test
sbb
repz
syscall
popa
mov
pushf
enter
sbb
fisttps
insb
das
lds
mov
outsl
movsb
inc
cli
push
mov
inc
mov
mov
icebp
inc
pop
sub
or
es
dec
shrb
and
mov
or
inc
sbb
repz
jne
pop
sub
pop
std
ss
xchg
mov
cmp
aas
test
es
ja
mov
add
jbe
aas
sar
and
mov
loopne
fwait
pop
or
lahf
or
cmp
out
mov
xchg
mov
pop
xchg
xchg
data16
adc
add
dec
and
std
repnz
jp
mov
stos
insb
mov
sbbl
sub
daa
sahf
andb
fstpt
inc
mov
pop
adc
decl
jle
data16
sahf
addb
mov
test
jmp
lcall
in
aam
mov
add
jb
adcl
movsb
push
inc
ss
dec
cmp
test
movsl
cmpsb
mov
pop
pop
popf
jo
lods
cld
mov
sub
sub
mov
cli
data16
sub
push
das
push
push
popf
and
cmp
ja
movsb
and
xor
sub
fs
or
add
add
sbb
je
xor
mov
jg
and
pop
jg
cmpsb
xchg
dec
inc
mov
imul
sub
add
sub
bound
pop
das
aaa
imul
mov
ljmp
sbb
dec
scas
mov
js
test
js
jae
cmpsb
test
dec
incl
subl
dec
push
sub
pop
test
sbb
mov
sahf
sub
imul
and
inc
xor
pop
ja
and
mov
cmpsl
xchg
shr
add
xor
inc
xchg
cwtl
cmc
insl
xchg
mov
mov
mov
cmpsb
hlt
cmp
inc
pop
lock
lcall
mov
out
push
or
das
pop
mov
ss
jl
sbb
test
scas
and
jl
xchg
xchg
sbbl
xchg
inc
mov
sbb
add
fcomip
mov
fstl
mov
or
cmc
subl
push
aaa
jl
imul
xchg
xchg
sub
push
or
add
incl
jb
call
enter
and
jae
xchg
cmp
loopne
or
mov
pushf
data16
call
add
xor
jecxz
aas
test
cmpl
pop
add
adc
les
inc
rcrb
and
data16
cmp
pop
movsb
push
mov
sub
xchg
and
movsl
mov
call
and
sbb
orl
mov
rclb
xchg
mov
nop
ds
xor
or
add
sahf
dec
push
jmp
jno
lret
cld
mov
pop
add
inc
xchg
push
cli
mov
fbstp
sbb
or
push
pop
mov
or
nop
loop
mov
push
ret
shrl
subb
shll
sarl
ja
cmpsl
mov
aam
cmpb
incb
and
push
roll
popf
icebp
popf
mov
sub
add
dec
testl
mov
mov
ret
inc
aaa
cmp
sti
js
out
mov
stos
je
and
sti
out
pop
les
xor
mov
arpl
mov
movsl
xor
inc
push
xchg
or
std
fwait
add
movsb
inc
push
jge
and
and
insl
and
mov
or
xchg
nop
jne
pop
dec
cld
add
mov
dec
pop
aas
and
and
lcall
lods
sub
enter
mov
lcall
leave
movsb
pop
push
out
das
cmpb
sarb
call
push
testl
add
je
dec
incl
adc
insb
add
out
push
sti
adcl
adc
les
add
push
movsl
dec
pop
xchg
add
das
imul
js
lahf
push
andb
decb
lock
jmp
sbb
sahf
jmp
fisubl
icebp
iret
pop
mov
sub
cs
shl
fbld
mov
call
add
lahf
rclb
sbb
stos
scas
add
mov
orb
pop
pop
dec
cli
lret
aaa
insl
sar
adc
pop
movsl
mov
push
jno
add
popf
push
pop
mov
push
dec
int3
cmp
and
mov
outsl
add
add
in
xor
pop
dec
insl
lcall
fldt
jno
pusha
jns
ret
xchg
jbe
fmuls
shlb
jg
cmpsb
hlt
incb
inc
xor
inc
cmp
dec
jg
sysret
pop
fwait
or
pop
call
aam
inc
mov
push
xchg
add
cmp
outsb
fisttpl
clc
rcr
rolb
stos
stos
jbe
cmp
sub
sbb
adc
push
mov
adc
mov
xor
lods
inc
xchg
or
mov
push
add
daa
pop
aam
xchg
dec
shlb
xorb
cmc
fwait
jo
dec
data16
enter
dec
ja
inc
and
jecxz
ret
ljmp
mov
stmxcsr
sbb
test
rclb
sbb
insb
and
and
str
enter
xorl
cmp
xchg
pop
lods
loopne
outsl
xchg
adc
jb
mov
adc
pusha
adc
add
fists
or
pop
adc
sub
xchg
pusha
je
cmp
xor
inc
ljmp
and
dec
adc
inc
out
fcoms
cld
xchg
dec
mov
and
mov
adc
sub
xchg
jae
push
rorb
or
xchg
fldenv
stc
sub
pop
sub
add
nop
cli
fildll
inc
je
sub
popf
clc
imul
jmp
loope
cmpsb
fdivr
add
je
pop
xchg
pop
gs
mov
or
mov
jl
sub
inc
mov
xchg
or
xchg
cwtl
pop
jmp
ljmp
xorb
clc
sub
jmp
push
lods
mov
dec
cmpsb
inc
cld
int
psubusb
pop
inc
adc
fs
call
sub
mov
sub
jo
mov
jecxz,pn
lea
lret
pusha
jp
or
add
scas
lcall
cs
mov
inc
pop
ja
adc
mov
pop
mov
lock
sbb
sahf
rorl
test
call
loopne
mov
sar
inc
inc
inc
popf
inc
repz
popf
inc
jbe
sbbl
and
sahf
add
sub
enter
ret
pop
cltd
sub
sub
fbstp
jg
aas
mov
mov
enter
or
inc
dec
call
fcmove
mov
dec
adc
jae
movb
daa
nop
js
std
or
cwtl
dec
add
sbb
push
fcoml
clc
jg
movsb
mov
or
lock
ljmp
shlb
int
out
xor
sbb
ljmp
sti
into
iret
push
sub
loopne
stos
aaa
sbb
test
loopne
lods
bound
push
mov
jge
inc
mov
inc
lods
les
cmp
push
jmp
pop
sbb
xor
ret
dec
adc
push
rorl
push
outsb
nop
mov
ss
test
sub
lds
imul
push
add
mov
cld
sub
and
mov
sbb
pop
repz
insl
dec
jo
and
push
dec
call
jb
movb
cmp
add
sbb
call
jbe
jmp
lret
adc
inc
and
std
out
xchg
pop
jae
pusha
pop
mov
arpl
dec
sub
dec
mov
call
mov
out
push
jo
xor
ss
lcall
adc
rcl
ss
xorl
xor
jle
and
push
or
rorl
push
adc
mov
mov
loope
sbb
loop
icebp
pop
cmpsb
jo
and
iret
add
xchg
pushf
jo
cld
mov
imul
bound
pop
icebp
out
pop
jbe
les
mov
xor
and
inc
sub
pop
add
dec
mov
and
sar
push
test
outsl
cmpl
lock
xchg
add
rorb
or
xchg
sub
jb
jle
push
sbb
dec
fistpll
and
fbstp
pop
rorl
rolb
sub
adc
push
mov
call
leave
adc
gs
dec
in
xor
test
and
fwait
mov
push
xor
push
aad
nop
or
adc
xchg
aad
pop
add
jp
pusha
shll
mov
std
mov
imul
jne
sahf
jg
and
add
or
out
jbe
aaa
xchg
movb
clc
dec
rorb
sub
or
mov
xlat
jmp
add
and
inc
xchg
into
call
addr16
ljmp
mov
aaa
adc
add
dec
pop
nop
mov
cld
mov
jb
shll
xor
jge
pusha
and
popa
mov
mov
mov
pop
lret
or
jnp
addr16
lock
scas
div
rorb
jmp
aad
cmpsb
das
xchg
and
dec
xchg
add
cs
shrl
pop
pushf
leave
cmp
js,pn
mov
mov
jle
push
in
fisttps
cld
stos
fiaddl
into
adc
jg
push
inc
sbb
mov
inc
mov
add
mov
jb
inc
fsubs
std
rdmsr
lret
loopne
add
sahf
xor
icebp
dec
mov
mov
ljmp
xlat
xchg
add
jne
push
push
sub
xchg
push
scas
and
rolb
iret
mov
fldl
cltd
mov
push
outsl
aam
in
add
add
call
dec
decl
sub
mov
sub
adc
mov
decl
add
sbb
mov
inc
or
dec
push
xor
or
int3
or
and
push
or
sub
xchg
sarb
mov
push
clc
add
mov
cld
inc
loop
in
jg
push
lea
dec
std
out
addb
xor
add
push
sbb
enter
push
lock
stos
jae
mov
push
loope
cmpb
push
ret
test
jl
jecxz
or
aaa
cld
dec
sbb
inc
add
jmp
adcb
outsb
add
xor
xchg
fmull
push
push
mov
and
mov
stos
push
iret
xlat
cmp
popa
push
mov
popf
inc
icebp
cs
aad
dec
shl
or
xor
mov
inc
lds
shr
add
and
push
cli
sub
or
pop
and
dec
push
stos
pop
xor
mov
ds
inc
cwtl
je
adc
and
lods
lahf
repnz
call
in
rcl
sub
inc
lds
es
sahf
fst
add
jb
pop
adc
sub
ficompl
pop
js
mov
and
outsl
mov
iret
pushl
cmp
dec
lods
cmpsb
sub
jo
jp
add
xchg
jg
mov
jno
mov
je
and
xor
and
repnz
inc
xor
sub
aaa
movsb
aas
add
mov
test
out
mov
scas
andl
es
insl
mov
lock
mov
test
shl
das
rolb
leave
clc
mov
outsb
idiv
ja
fs
mov
aas
push
push
inc
and
lods
push
adc
sbb
jbe
pop
jnp
and
icebp
fs
adc
or
lcall
scas
js
push
push
lcall
fcomip
mov
jle
repz
divl
mov
fs
jg
ret
push
inc
test
add
and
enter
dec
sbb
iret
or
mov
push
and
and
fidivs
test
imul
push
or
pop
jecxz
jl
add
repnz
mov
inc
inc
les
push
mov
or
xchg
int3
jg
loopne
ljmp
sbb
sbb
pop
adcb
or
pop
rcl
pop
adc
addr16
bound
rclb
cmp
nop
inc
mov
cmp
cld
xchg
jecxz
push
push
push
sbb
stc
push
xor
push
stc
dec
push
fwait
iret
mov
or
pop
mov
lods
aas
sahf
xchg
add
or
inc
xor
cmc
jg
dec
add
xchg
test
fsubr
loopne
add
dec
adc
pop
and
call
aam
adc
jl
pop
cmp
adc
sbb
xor
bswap
mov
or
push
ret
cmp
inc
cmp
clc
adc
inc
or
jle
testl
lahf
lods
pop
iret
call
adc
cs
popa
cld
lahf
push
mov
add
jbe
cmp
pop
or
cli
ss
or
jmp
shr
sub
mov
js
leave
pop
enter
push
or
add
jo
jo
or
fistpl
pop
dec
cli
lret
xchg
sbb
add
jbe
xchg
inc
loopne
push
mov
pusha
das
add
je
jbe
adcb
xor
or
add
add
loope
jbe
loop
jg
fcoms
xor
add
push
dec
es
negl
mov
mov
incl
inc
andb
mov
mov
or
push
loope
xchg
dec
adc
mov
cmpsl
mov
dec
mov
lock
and
xor
inc
scas
in
incl
in
mov
jmp
mov
jecxz
stc
out
mov
pop
stos
push
mov
mov
push
and
outsb
test
mov
mov
fdivrs
jg
xor
mov
and
test
cmp
and
daa
rcl
jmp
and
push
xchg
jg
push
mov
jmp
or
outsb
cmp
sub
ret
xchg
sbb
test
and
mov
stos
sbb
outsl
incl
popa
sbb
xchg
fwait
pop
mov
ds
stos
dec
popf
pop
nop
cmpsb
mov
adc
sbb
negl
sbb
pop
pop
fcom
xor
fcmovu
or
mov
popf
mov
ss
data16
push
lret
das
sar
cmp
rolb
jl
mov
push
sbb
hlt
fwait
sub
dec
xor
out
or
mov
and
inc
xchg
pop
cmp
jecxz
mov
data16
outsl
cli
cmp
clc
loopne
push
push
test
inc
pop
hlt
bound
and
jl
or
sub
lahf
pop
bound
add
sub
cmp
idiv
decl
out
mov
movsb
jge
stos
inc
push
aaa
adc
cmp
push
and
jmp
test
jo
push
add
cmp
inc
call
mov
xchg
mov
fcomip
jg
mov
decb
hlt
int
repnz
push
add
ret
scas
jnp
sub
push
stos
iret
pop
lods
lcall
pop
adc
sub
adc
pop
dec
icebp
arpl
jle
dec
and
adc
dec
and
int3
pop
inc
movsb
cli
mov
add
and
pop
movsb
lcall
cmpsb
xchg
xor
mov
push
lods
out
repnz
roll
outsl
sbb
outsl
add
pop
xchg
lds
or
mov
pop
jle
mov
cld
int3
inc
sbb
mov
popa
roll
scas
fs
stos
push
sti
rclb
in
test
push
call
cmp
push
adc
bound
incb
incl
pop
std
dec
shrb
test
inc
fstps
push
jl
lods
jae
xchg
push
rolb
ss
jmp
out
xor
imul
and
fs
cmpsl
es
or
adc
subb
and
or
test
lcall
mov
arpl
ja
sub
dec
shrb
test
jp
fdivr
mov
outsl
sub
mov
add
xchg
shl
dec
cmpb
push
or
loop
fisttpl
sub
lds
out
xlat
cld
jae
cmpsb
xlat
or
shr
or
mov
jg
mov
jno
ret
lods
mov
jg
jp
test
ja
push
movsl
stc
push
jno
jmp
inc
loopne
insl
je
cli
push
fcmovnu
lahf
lds
add
sahf
push
enter
aaa
inc
cltd
cld
dec
punpcklbw
jge
xor
jecxz
sub
dec
pop
sub
push
pusha
leave
aaa
mov
fs
dec
pop
xchg
sub
inc
xor
or
adc
jnp
jbe
addl
dec
push
push
adc
cmp
inc
ret
fwait
decl
cwtl
mov
or
pushf
jo
call
faddl
dec
cmp
mov
inc
pop
adc
pop
mov
or
or
inc
je
jne
test
bound
cmp
and
lods
cli
fcomip
jmp
add
adc
ret
es
mov
xor
adc
mov
testb
xchg
lcall
cld
clc
mov
loopne
dec
das
int
mov
shrl
pop
mov
fwait
pop
in
dec
mov
rcrl
sub
lods
addr16
test
mov
adc
jmp
adc
leave
or
lods
addr16
fwait
and
out
inc
mov
sbb
std
clc
jecxz,pt
in
or
orb
mov
rorb
fbld
out
jo
mov
adc
mov
xor
adc
sub
dec
push
mov
mov
jae
xor
adcl
inc
and
rolb
popf
or
xchg
xor
or
inc
and
xor
jmp
cmpsb
adc
dec
fdivp
inc
cmp
jmp
into
xchg
push
es
fidivl
add
jecxz
stos
shlb
mov
jp
dec
jg
jmp
mov
push
mov
fimull
sub
lret
clc
mov
xor
sbb
stc
or
jmp
jmp
repnz
in
and
xchg
sub
pop
push
xor
lahf
inc
cmpsl
hlt
add
lock
rclb
add
sbb
nop
incl
lods
in
push
jmp
fildll
icebp
sbbb
shll
mov
in
das
add
pushf
mov
or
or
ja
mov
stos
mov
xor
xor
mov
test
imul
mov
push
adc
add
and
xor
pop
mov
sbb
icebp
rorb
sbb
in
addr16
dec
subb
jle
push
inc
arpl
decl
jne
xor
push
jo
ja
loopne
push
xchg
icebp
test
or
cwtl
rcrb
mov
lcall
mov
push
mov
push
bound
jne
xchg
or
add
ret
jb
sbb
jbe
icebp
daa
rolb
mov
cld
outsb
push
movsb
add
push
nop
mulb
cs
mov
fists
xchg
je
add
jl
loop
lahf
jmp
sbb
mov
in
repnz
test
cmpl
lea
nop
cltd
aas
push
mov
cmp
push
adc
ss
add
push
cmp
xchg
icebp
ljmp
jmp
mov
jbe
add
out
mov
scas
or
bound
mov
mov
xor
orb
sbb
adc
popf
and
lock
mov
push
pusha
pop
xchg
mov
mov
mov
stos
adc
fcomip
mov
mov
hlt
loope
push
or
sub
and
jl
shrb
and
jl
push
lcall
ds
test
fdivl
insb
shrb
push
dec
bswap
adc
clc
sbb
test
xor
out
dec
jns
adcl
bound
adc
imul
scas
jl
xorl
mov
and
lcall
shlb
and
add
xlat
mov
or
es
add
sar
add
outsl
mov
sub
mulb
decl
mov
sbb
sbb
mov
adc
sub
rorb
ret
mov
negb
jg
sub
mov
mov
loopne
mov
cltd
pop
push
sbb
leave
push
pop
sbb
sbb
hlt
mov
adc
cmp
jns
jbe
sbb
mov
incb
lcall
fucomip
arpl
xchg
mov
outsb
lahf
jae
mov
mov
sub
push
and
push
pop
test
lcall
adc
imul
out
cmp
mov
aaa
push
fbstp
sub
cmp
sbb
sbb
ret
push
and
dec
xor
icebp
push
loop
mov
ja
lds
shll
mov
mov
incl
lods
dec
sbb
rcrb
scas
js
loopne
in
insb
adc
sub
je
pop
in
pop
cmpb
jo
cmpsb
mov
popa
loopne
add
decl
or
cmp
push
cwtl
push
push
lahf
je
repnz
xor
cmc
outsb
aaa
and
ret
scas
push
adc
insb
stc
ret
sub
jg
lea
xchg
mov
mov
and
idiv
mov
stos
xchg
mov
pop
sti
mov
cmp
sahf
push
movsb
int
nop
push
sbb
addl
decl
imul
mov
mov
mov
and
mov
insl
loop
xchg
lea
mov
dec
mov
pushf
ljmp
ljmp
enter
adc
jl
pushf
inc
out
inc
dec
jl
cmc
xchg
add
mov
push
inc
dec
inc
fildll
adc
sbb
ja
pop
lock
cs
jmp
sub
pop
pushf
pop
je
adc
or
add
clc
fbstp
outsl
xchg
negb
jecxz
mov
cmp
fs
add
add
dec
xor
add
or
jg
mov
inc
aas
pop
repz
inc
sar
cs
inc
xchg
xchg
incl
pop
cmc
add
xchg
xchg
call
sahf
and
sub
cli
sub
pop
mov
push
cmpsb
cmpsl
jmp
cmc
pusha
mov
adc
leave
mov
fistps
pop
inc
int
adc
sbb
and
pop
out
cltd
in
adc
push
pop
out
add
jle
stos
xor
add
mov
sbb
leave
shll
adc
adc
adc
fnsave
inc
xor
jnp
int3
adc
sbb
repnz
les
cmp
push
mov
xor
fcomps
repz
lahf
add
popa
add
mov
sub
call
inc
mov
sbb
push
decb
incl
pop
inc
xor
add
jg
enter
jl
push
ret
mov
or
inc
pusha
je
subb
mov
popf
movsb
mov
xchg
or
int3
je
xchg
stos
inc
subl
and
mov
or
add
add
xor
clc
icebp
inc
fsub
lcall
mov
xor
nop
mov
jno
pop
ds
adc
mov
pushf
sub
cmpsb
mov
cli
decl
cmp
add
mov
jne
cld
adcb
decl
inc
cmp
add
ljmp
cs
mov
push
push
test
fs
outsl
inc
adc
jo
adc
sub
push
push
call
or
in
mov
test
nop
int3
jecxz
add
or
adc
mov
add
jbe
or
lret
mov
sub
jnp
ret
decb
sub
js
jg
incl
fwait
sbb
xor
sub
fucomip
shll
pop
paddsw
cmp
aam
cmp
or
mov
add
stos
or
pusha
xchg
pop
les
jmp
add
insl
fadds
sub
or
jmp
in
sbb
jbe
loop
mov
cs
push
roll
add
dec
or
fistl
lcall
mov
lock
ds
mov
in
sub
popf
or
mov
xor
ss
in
movsb
jae
arpl
scas
xor
mov
pop
pop
jl
sub
test
pushl
xchg
add
sub
out
notl
andb
add
loopne
sbb
out
push
cmpl
sahf
incl
mov
mov
dec
rol
fwait
pusha
decb
mov
pop
fadds
inc
fidivrl
jbe
int3
es
lcall
add
mov
sub
sahf
clc
add
jg
or
xor
pop
dec
add
inc
jns
inc
ret
cmp
cmp
push
clc
pop
fiadds
icebp
sub
pop
xchg
cmc
cmp
jmp
clc
cwtl
push
push
loope
sbb
in
lret
scas
or
pop
ficomps
add
add
mov
cmp
sbb
xchg
mov
dec
dec
outsl
add
jge
pusha
sub
dec
hlt
mov
adc
bound
arpl
mov
and
in
insl
lock
lock
cmp
adc
mov
adc
xchg
add
jbe
insb
push
test
and
add
lock
incl
ficoml
add
fcoml
rcrl
mov
call
adc
add
xchg
pop
or
pop
and
xor
adc
mov
sub
push
jns
mov
movsl
mov
cmp
fcomip
jg
pushf
add
es
shll
nop
and
pop
pusha
mulps
mov
cmpsb
aad
xchg
outsl
push
mov
fdivrl
cmpsl
jb
pop
or
cmpsl
mov
shlb
or
cli
cmc
mov
js
xchg
lret
sbb
xchg
sub
xchg
fisubrl
pushl
or
mov
test
pop
fidivl
movsl
insb
or
push
push
xor
inc
aas
hlt
clc
xlat
inc
decl
inc
daa
add
repnz
test
in
xchg
sti
repz
fildl
lret
pop
inc
adc
mov
push
cli
jae
jo
sbb
shrl
pop
xorb
adc
mov
fdivrl
lock
sbb
insb
loope
jmp
xor
push
cs
xlat
scas
loope
aaa
jmp
mov
add
inc
in
cltd
mov
insl
adc
lret
int3
subb
sub
xor
mov
enter
push
movsb
xchg
jge
inc
aaa
cmpl
dec
lcall
xor
sub
jmp
mov
std
ss
and
lds
add
push
subl
add
lahf
dec
aam
decl
dec
jecxz
or
mov
sahf
loopne
fisubs
rcr
push
lock
outsb
pop
jle
sub
mov
xchg
pop
icebp
sbb
shll
mov
out
sub
mov
rorb
cmp
js
rolb
call
dec
stc
out
or
stos
adc
fiaddl
dec
xchg
aam
scas
into
lret
jo
mov
mov
adc
cmc
push
loope
stos
push
jb
pop
jle
cwtl
ret
pushw
xchg
aam
cli
xchg
sbb
mov
mov
ljmp
push
cmp
inc
add
dec
mov
add
pop
dec
adc
lock
shrb
arpl
mov
std
mov
cmp
fdivl
ljmp
mov
jns
mov
andb
ss
out
in
mov
std
aas
clc
inc
pop
cmp
jl
add
or
in
push
std
out
add
and
lods
add
jl
lcall
mov
dec
sub
movsl
adc
clc
sub
fs
xor
call
adc
or
push
pusha
mov
test
and
mov
dec
sar
cli
data16
sbb
dec
sbb
and
adc
call
loopne
push
mov
jecxz
icebp
mov
shrd
push
insb
std
jmp
cld
mov
and
inc
xor
xor
dec
mov
push
inc
insl
dec
inc
add
call
aaa
inc
bound
leave
icebp
repz
mov
inc
xchg
cmp
add
or
or
addr16
jmp
ret
or
mov
outsl
cli
out
fists
xchg
imul
std
es
jg
enter
test
inc
insb
es
test
in
das
xor
fwait
jp
in
sbb
push
fbld
fwait
outsb
inc
mov
dec
add
push
fidivs
es
xchg
jge
into
mov
xorb
mov
incl
sub
push
adc
add
mov
xchg
and
sbb
loop
test
xchg
jmp
cmpsb
adc
fnstcw
call
stos
pusha
cmp
gs
mov
icebp
dec
dec
in
mov
xor
movl
and
test
nop
imul
cmpsb
xor
sub
mov
dec
mov
add
clc
cmp
push
mov
sub
ljmp
jl
xchg
add
push
fnstcw
cmp
cmovs
into
sub
stos
sbb
add
cld
inc
call
add
lret
cmp
es
and
xchg
test
rorl
rol
lock
fistps
lahf
inc
mov
xchg
shrb
pop
in
repnz
clc
loop
dec
shll
jmp
xchg
rorb
clc
sarl
lea
inc
jg
test
ljmp
clc
fstl
adc
mov
mov
mov
or
pop
loopne
mov
xor
test
das
jp
incl
mov
push
or
js
mov
out
int3
in
hlt
cs
gs
or
sbb
call
sub
add
cmc
cmp
scas
add
pushf
mov
sub
sbb
pop
insl
std
jg
nop
and
xor
mov
inc
push
mov
and
std
inc
push
and
xchg
shlb
mov
add
adcb
pushl
test
inc
xchg
prefetch
loopne
pusha
jmp
push
lods
aad
popa
and
xor
shll
or
aas
push
out
loopne
push
icebp
add
adc
insl
cwtl
mov
mov
mov
out
pop
jp
nop
test
jg
inc
xor
jg
outsl
mov
rorl
push
xor
cld
stos
scas
add
jmp
mov
or
adc
pusha
adc
bnd
pop
or
decl
lods
push
sub
movsl
add
gs
sbb
aaa
mov
push
mov
push
ss
mov
ret
mov
sbb
mov
mov
subb
xchg
nop
pop
sub
lock
jg
inc
stos
push
push
out
jl
test
xchg
into
loope
pop
pusha
mov
mov
or
pop
mov
pop
mov
movsl
cmp
incl
xchg
add
roll
add
testl
div
inc
push
mov
sub
push
pushl
push
push
clc
lea
or
push
inc
in
push
add
ret
insb
iret
fucomp
incb
outsb
xor
cld
push
push
loopne
push
adc
push
aaa
jbe
cmpsb
push
cld
test
addb
inc
andl
cmpsl
loopne
pop
outsb
in
add
push
push
mov
sbb
jge
sub
js
call
lock
outsl
xor
adc
push
nop
add
loope
lcall
insl
add
push
push
jae
jnp
call
add
push
inc
add
test
in
dec
sbb
sub
pop
inc
push
xor
push
push
in
adc
mov
jae
es
lock
out
jmp
add
push
das
fwait
adc
mov
pop
ficoml
xlat
pop
sbb
add
sub
adc
std
clc
cld
icebp
xor
std
mov
push
popf
pop
fwait
jecxz
aas
adc
fdivr
jo
add
dec
jmp
loopne
lea
and
sub
inc
ja
cmp
and
or
push
rclb
add
sub
adc
dec
js
jnp
fs
or
in
and
movswl
push
jbe
push
inc
jo
push
push
das
aaa
std
scas
nop
sbb
ss
pop
push
cmp
outsb
ja
add
sbb
add
sbb
cmpsl
dec
push
inc
lods
ficoms
cmp
jae
add
inc
or
xchg
cmp
fld
lea
std
cmp
pop
call
jns
inc
inc
jnp
fs
fisubrs
push
mov
fistpll
inc
sub
add
inc
add
xchg
iret
inc
adc
xchg
xchg
pushf
jno
jb
inc
popa
mov
imul
jbe
lds
addb
inc
lahf
sbb
and
mov
xor
push
mov
clc
push
jno
xlat
jno
xor
sub
cld
loop
inc
call
jns
push
sub
push
cmc
xor
insb
pop
clc
js
sbb
add
fnstcw
roll
push
push
int3
inc
push
push
sub
out
insb
add
ds
push
push
push
jmp
add
fidivrl
add
add
mov
out
xor
adcb
dec
mov
mov
push
jns
popa
cmpsl
int
outsl
push
inc
loopne
mov
gs
or
stos
dec
xchg
push
inc
add
add
dec
insb
jno
mov
bound
push
loopne
jbe
or
arpl
mov
or
push
in
pusha
xor
repnz
sub
sysenter
sub
int3
xor
std
fistpl
lea
mov
or
and
and
in
lahf
add
movb
adc
loope
dec
inc
sti
fisubrl
and
xchg
inc
add
xlat
dec
stc
test
mov
mov
and
push
mov
adc
das
and
jg
fucomip
cwtl
and
jae
subl
movsb
addr16
out
push
jl
mov
test
loopne
dec
adc
and
inc
aas
jg
pushl
int3
data16
inc
dec
pushf
adcb
sbb
cmp
in
outsl
pop
pushl
adc
dec
add
out
mov
scas
aas
fbld
ljmp
dec
adc
mov
jg
add
popf
out
jmp
xchg
jmp
sarb
std
jmp
sbb
loopne
dec
and
or
mov
cltd
push
sbb
mov
push
mov
fimuls
fnsave
jp
adc
dec
shrb
jb
sar
ljmp
lock
pushf
cmp
mov
in
in
fildll
and
movsb
call
inc
rclb
subb
or
and
jnp
or
jg
out
pushf
pop
lods
adc
pop
rclb
rcll
and
sub
inc
and
sar
ret
int
and
pop
mov
int3
or
dec
sti
fstpl
add
xlat
cli
mov
or
jne
loopne
sar
sti
pop
mov
rcrl
and
xchg
ldmxcsr
mov
out
dec
mov
jge,pn
sub
add
idiv
jo
and
inc
adc
pop
inc
mov
out
mov
loope
insb
cmpsl
mov
jl
add
mov
pushl
pop
dec
mov
xchg
dec
arpl
inc
std
mov
xor
jbe
inc
mov
sub
scas
jmp
lds
mov
dec
mov
out
sub
pop
sbb
fisubrl
hlt
jns
loopne
aas
jl
jae
incl
or
in
jg
mov
sub
inc
push
inc
push
icebp
scas
stos
or
cmp
test
xchg
dec
fisttpll
fsubr
out
leave
xchg
lds
add
xor
xor
and
sbb
test
mov
shll
jnp
or
sbbl
sub
jmp
es
fadds
fsubrp
std
jmp
std
cmp
pop
push
arpl
mov
aas
mov
inc
insb
and
fldlg2
popa
clc
push
cld
mov
inc
loop
mull
jle,pt
out
push
mov
divb
mov
fdivrp
in
mov
or
pop
mov
aaa
cmp
mov
mov
push
push
jge
mov
push
loop
sbb
sbb
out
inc
movsb
add
adc
fisubs
scas
stc
and
pop
cld
jg
sbb
xchg
push
data16
push
std
int
and
push
push
add
mov
jge
push
call
mov
std
jge
dec
mov
je
mov
clc
lret
orb
xchg
sub
icebp
hlt
aas
jno
ffree
inc
shll
lahf
sar
fst
test
push
sub
lcall
fidivrs
and
ret
and
repnz
movsl
inc
fwait
xor
call
fucomip
in
and
xor
xchg
and
xchg
aam
jg
out
push
and
lods
push
inc
adc
cli
xchg
pop
test
fbstp
aam
xlat
repnz
mov
inc
fadds
loopne
pushl
lahf
and
pop
mov
ffreep
ss
mov
jo
in
fwait
push
rorb
je
sti
clc
daa
mov
mov
clc
sub
ljmp
jo
out
xor
pusha
sahf
js
adc
cltd
pushf
jle
lahf
sbb
sti
sub
icebp
mov
cmp
cmp
dec
mov
xor
push
xchg
popa
cmc
pop
idiv
push
inc
pop
pop
cmpsl
cmpsl
sub
in
xchg
stos
lcall
loopne
mov
mov
pop
mov
cmovne
cmpb
pushf
xor
test
fucom
mov
rclb
sub
pop
xchg
outsl
lock
fs
pop
aad
test
mov
testl
add
push
out
sub
rcrb
mov
sbb
sbb
dec
decb
cmpsl
cmp
adc
stos
rorl
inc
and
out
inc
imul
lea
pop
loopne
pop
jge
add
in
dec
inc
jmp
cmp
cmp
xchg
cli
pop
xor
or
rcrb
jge
scas
mov
pop
fstpt
sbb
insb
subl
add
cs
push
sub
call
mov
imul
std
mov
aaa
mov
mov
inc
mov
stos
aas
andb
inc
sub
jb
into
jmp
ret
ja
mov
inc
xchg
push
out
stc
mov
loope
std
and
push
rep
jle
cmp
jge
sub
lds
sbb
jp
xchg
insl
ja
iret
adc
pop
jg
sbb
bound
xchg
cld
adc
mov
mov
rol
push
pop
or
std
pop
and
insb
dec
mov
fmuls
dec
xor
cli
arpl
out
test
rcr
push
cmp
jge
push
pushf
ljmp
lret
sub
negl
dec
jo
out
fbld
or
cld
cmpsl
adc
cmp
cwtl
jbe
fnstsw
jg
pop
pusha
dec
push
pushf
pop
fisubrs
loopne
sahf
sbb
mov
cmp
fwait
out
fildl
popa
rorl
setne
mov
stos
push
andl
pop
insb
sbb
in
sub
push
xchg
sub
mov
inc
cld
pop
repz
sbb
fidivl
mov
adc
outsl
pushf
inc
mov
xchg
cld
inc
push
subl
sti
mov
cli
jge
pop
cs
cli
jl
int
std
add
pop
movsb
fsubs
outsb
xchg
jae
std
sub
sub
negl
and
scas
xor
push
mov
push
adc
jge
jnp
shl
shlb
jp
pop
mov
ds
pop
add
pushf
into
dec
rcll
xor
pop
mov
loopne
and
mov
jne
ret
jg
cli
gs
sbb
push
dec
mov
dec
ja
adc
lahf
push
stc
add
loopne
jle
outsl
lahf
mov
decl
inc
out
cmp
xor
clc
or
mov
pusha
pop
in
and
lock
xor
popf
int
pop
mov
and
or
mov
inc
lret
dec
fcompl
imull
mov
and
sbb
mov
aas
imull
gs
xor
sbb
dec
sti
fists
pop
sbb
sbb
inc
mov
mov
adc
dec
mov
out
xchg
std
lcall
inc
ja
int3
or
scas
and
outsl
inc
call
loopne
pop
mov
pop
jmp
sbb
inc
mov
repnz
jnp
scas
jmp
rcrl
cli
lcall
cld
pop
iret
lea
add
xchg
adc
insl
and
jno
push
clc
pop
out
mov
daa
cmp
adc
out
sub
adc
xchg
mov
or
in
dec
ja
push
outsb
rcr
push
adc
jo
mov
int3
mov
mov
and
daa
lods
sbb
popf
popf
fyl2xp1
xchg
adcb
push
imul
scas
push
dec
push
pop
or
ja
sub
je
or
sbb
pop
push
cmp
cmp
ja
cs
addr16
sti
push
lret
mov
lahf
jp
push
jge
lea
jmp
fsubrp
out
mov
adc
mov
mov
stos
lcall
inc
inc
xor
sbb
mov
push
dec
cwtl
add
dec
or
jge
sub
pop
mov
or
std
psllw
pop
loope
clc
rorb
pop
enter
test
jge
push
mov
scas
int
xchg
lea
std
ffreep
std
les
mov
cmpsb
xor
fdivrs
dec
repnz
and
add
pop
push
js
add
add
add
stos
fs
inc
out
adc
sbb
mov
adc
sti
gs
aaa
and
mov
adcl
lea
push
insl
push
push
orl
inc
lds
ret
dec
aam
mov
lds
dec
sub
lahf
xor
push
dec
lods
inc
add
push
idivl
int
out
dec
mov
push
inc
jg
push
mov
test
cmp
scas
add
jbe
mov
dec
and
adc
inc
dec
fildl
push
test
pop
loopne
in
scas
popf
inc
cmpb
fbld
sub
mov
sub
jne
out
mov
js
out
mov
push
xchg
in
cmpsl
hlt
call
add
jns
test
cs
daa
pushf
lock
inc
aas
push
jns
shl
push
test
inc
test
inc
sub
push
clc
mov
hlt
xor
cmpsb
add
pop
pop
in
xchg
aaa
cmp
pop
jl
fcomps
mov
and
adc
and
out
out
sti
ljmp
ror
repz
cld
inc
loope
scas
pop
movsl
dec
ret
mov
push
orl
fs
or
sbb
stos
ja
push
ja
push
push
jne
add
stos
arpl
lcall
loop
aas
mov
or
mov
mov
cmp
mov
add
inc
xor
sbb
cli
aas
loopne
loope
mov
dec
loopne
pop
and
sub
scas
xor
test
and
mov
add
dec
and
out
push
jo
mov
loopne
sbb
add
cmpsl
adc
movsb
sub
xlat
mov
decb
dec
sbbb
push
rcll
adc
hlt
mov
sub
push
jmp
sbb
xchg
or
and
sub
outsb
lock
lcall
xor
inc
dec
mov
ret
sub
ret
dec
or
dec
mov
xor
sti
sahf
jns
pop
jb
mov
mov
cld
xorb
fldcw
outsl
out
pop
test
xor
das
int3
outsl
fimull
jns
cmp
mov
push
sbb
test
sbb
mov
cmpsb
icebp
js
fisttpl
adc
add
inc
sbb
stc
push
and
pop
es
push
lcall
popa
insb
sahf
inc
push
test
cld
push
adc
push
punpcklwd
xor
pop
cltd
jns
loopne
ret
cmp
mov
ret
decl
mov
aad
addr16
pop
and
pop
and
fs
jecxz
aas
mov
ljmp
mov
jmp
jne
adc
in
pop
or
js
sub
xchg
sub
mov
lar
cmp
sbb
out
inc
add
mov
lea
clc
filds
mov
inc
jbe
shll
push
inc
out
scas
mov
jmp
push
lock
push
stos
arpl
stc
mov
or
sub
test
clc
fcmovnb
iret
xchg
mov
adc
sub
and
aas
mov
xchg
addr16
adc
addr16
jle
iret
push
mov
inc
mov
filds
inc
mov
movsb
sub
lcall
rorl
xchg
daa
jl
pop
inc
cmp
fistps
lahf
pop
push
mov
add
xor
loope
inc
rolb
fldt
lds
and
sbb
sub
lds
out
jmp
fidivl
movsb
mov
movsl
lcall
jmp
test
lock
pop
jl
add
sub
das
cld
push
decb
mov
in
add
test
lcall
fldcw
jle
cmp
pop
mov
inc
sbb
addr16
ljmp
cmp
and
add
xchg
mov
jnp
sti
out
jg
xor
iret
insl
sub
loopne
inc
clc
sbb
ficompl
mov
jle
cltd
push
mov
shll
scas
push
addr16
add
adcl
in
aam
data16
pop
xor
sbb
pushl
scas
fisttps
scas
lods
cmc
pop
sub
fcomps
inc
sahf
cmp
popf
in
or
mov
std
ficompl
daa
sub
call
arpl
xchg
jnp
pop
mov
jg
decl
dec
pop
dec
xor
icebp
jle
cld
jbe
clc
das
mov
sub
sbbl
add
pop
inc
iret
cmp
sbb
lds
inc
jl
push
and
xor
les
inc
ljmp
mov
sbb
add
and
test
loope
jg
sub
push
xchg
shrb
mov
adc
push
orb
clc
xor
pop
js
mov
out
fsts
out
jl
int3
inc
dec
mov
ret
imull
movlps
shl
out
dec
and
bound
call
orb
pop
jg
or
pop
cmp
ljmp
sahf
jp
xchg
shll
jge
ljmp
negl
push
call
xlat
xor
repz
sub
sbb
call
jge
loope
mov
jp
ret
loop
jnp
xchg
popf
les
dec
jmp
andl
pop
inc
lret
xor
fistl
pop
testl
xor
or
iret
or
std
jnp
mov
cmp
aaa
jne
test
ja
adc
outsl
ret
cmp
cli
out
pop
fs
pop
imul
pop
cmp
mov
mov
push
mov
imul
sbb
xor
andb
std
mov
jg
xchg
mov
cmp
daa
cmc
cmpsl
sbb
mov
incb
and
mov
idivl
daa
das
pop
stc
ret
sub
sub
adc
lods
and
jg
popa
je
sahf
push
hlt
sbb
and
lcall
or
imul
cld
loopne
ljmp
jge
bound
cmpsb
jno
scas
and
lock
enter
fcomps
stos
xor
out
jae
push
mov
xchg
mov
jg
aaa
and
fimull
and
dec
out
divb
sbb
lods
mov
inc
mov
lcall
xchg
arpl
push
push
shlb
cmpsl
adc
daa
mov
pusha
sbb
push
outsb
mov
mov
pushl
xchg
mov
dec
call
fdivrl
inc
or
test
adc
scas
hlt
rcr
fsts
jmp
cmp
lcall
call
fstl
mov
sbb
mov
xor
loope
xchg
mov
jle
mov
ja
mov
pop
js
push
jo
lock
dec
add
cmp
std
push
cli
sub
push
les
test
mov
lahf
sti
jnp
push
adc
movsl
adc
or
add
data16
ja
jns
xor
add
imul
incl
adc
push
push
dec
fwait
out
loop
out
cmp
ffreep
fldt
in
into
adc
push
pop
cld
jg
fistpll
cmp
inc
xchg
cld
test
ja
and
cmp
shll
sti
push
fldl
ret
sub
scas
fmull
sub
dec
cld
inc
jo
or
xlat
scas
jbe
incl
inc
mov
test
out
nop
pusha
repz
ret
xor
rolb
add
fucomp
push
adc
mov
out
mov
mov
pop
in
ds
push
aam
sbb
xchg
inc
mov
repnz
testb
incb
push
pushf
jl
inc
stc
and
sub
pop
mov
cmp
xchg
inc
mov
scas
sti
clc
scas
add
jne
sub
cld
push
data16
jnp
loope
addr16
mov
ljmp
cli
es
sub
add
mov
iret
sub
mov
mov
fidivrs
fnstsw
lock
xchg
or
mov
movsl
dec
repz
push
clc
jecxz
sbb
and
xor
iret
mov
add
scas
ljmp
loope
push
cli
jbe
adc
test
stos
call
lahf
repnz
insb
xor
insb
jmp
xchg
xchg
stos
sbb
std
ja
inc
es
push
xchg
and
js
mov
fidivl
cld
ret
bound
loopne
mov
sub
mov
shrl
cmpl
daa
add
out
cs
mov
nop
jge
add
or
sub
adc
in
mov
cmp
jbe
std
addl
xor
xor
cmc
add
stos
sti
orl
or
mov
mov
xor
adc
mov
in
mov
enter
lahf
sti
call
mov
movsb
into
into
stos
mov
jae
mov
clc
push
jge
or
fimull
xchg
cs
aas
jmp
pushl
pop
clc
aam
aas
call
movsb
in
pop
jae
mov
and
rclb
rcrb
mov
or
sarl
rcr
in
aas
ficompl
xor
jae
cmp
insl
xor
fnstsw
mov
mov
popf
iret
pop
fisttps
sbb
fmull
mov
aaa
clc
mov
push
dec
sub
xor
jg
xchg
mov
test
jge
cmp
stc
add
adc
fucomip
sbb
mov
add
dec
out
add
pop
cmp
push
add
shl
and
ljmp
outsl
je
cmc
orb
inc
outsb
popa
lock
divl
aaa
iret
or
xchg
push
sbb
fisttps
xchg
inc
sarb
mov
adc
push
decl
xor
or
clc
sub
lea
loop
inc
lcall
adcb
inc
shrl
or
cmpsl
mov
sub
push
pop
mov
fsubrp
addr16
pop
loopne
rorl
fwait
pop
inc
cmp
xlat
sbb
in
inc
or
or
ljmp
lret
out
cld
mov
fcoml
outsl
aaa
mov
aas
cmp
outsl
lock
aaa
mov
push
ja
mov
pop
and
mov
dec
shr
lods
cmc
lcall
xlat
jne
mov
leave
push
mov
mov
movsl
push
dec
xor
cli
lods
or
arpl
mov
jl
adc
and
aaa
test
xchg
mov
fsubs
out
xor
inc
mov
icebp
sbb
je
ljmp
ds
or
ret
fs
and
shlb
stc
outsl
sbb
sbb
shlb
data16
xchg
cmp
pop
jecxz
dec
inc
jmp
jg
push
sbb
inc
out
ss
cmp
or
xchg
jg
outsl
cmp
xlat
je
mov
mov
rol
fnsave
sub
outsb
lods
jp
insb
jnp
pushl
sbb
shlb
imul
jle
not
orl
clc
push
fsubp
daa
inc
incl
add
lcall
cmpl
mov
imul
mov
lock
pop
leave
aad
lods
push
out
fidivrs
mov
and
add
jecxz
xchg
sti
ja
fldl
aas
loope
arpl
add
or
or
ds
jae
ret
pop
add
scas
push
les
xor
push
mov
inc
divb
inc
cmp
push
rolb
jg
xchg
mov
rclb
xlat
mov
sub
stos
pop
je
lret
sub
lcall
call
nop
hlt
jnp
mov
xchg
std
filds
jno
cwtl
mov
inc
push
test
xor
cltd
jg
pushl
dec
inc
and
cltd
inc
pop
nop
inc
mov
in
test
mov
jmp
inc
out
dec
mov
fidivrl
mov
movsl
xchg
lcall
mov
xchg
pop
sbb
les
mov
pusha
xchg
sbb
lock
das
jns
and
xchg
insb
aad
int
xchg
inc
push
sbb
test
into
jg
lahf
adc
xchg
jg
inc
mov
enter
or
mov
sub
aam
aas
jo
jnp
pop
adc
repnz
aam
lahf
aad
cmp
and
xor
aaa
aad
mov
adc
jb
add
pushf
jo
cwtl
mov
clc
div
mov
dec
cmc
mov
ret
lock
js
jl
inc
adc
jle
std
test
mov
push
iret
imul
inc
sub
jae
xor
or
out
addb
mov
mov
cmc
pop
gs
hlt
and
mov
jle
in
lret
adc
xchg
push
sbb
sbb
add
lock
jbe
cmp
gs
pop
jecxz
mov
arpl
push
hlt
movsl
jg
jae
mov
pushw
sbb
mov
or
cli
push
push
test
mov
inc
sub
loopnew
and
sub
into
mov
add
jne
add
adc
cli
std
lahf
xor
jmp
movsl
call
mov
inc
addb
pop
rclb
add
cmp
add
adc
fwait
shl
inc
fcoms
fs
inc
leave
stos
sub
xor
jae
cmp
decl
orb
jns
movsl
and
rep
mov
fcoml
xchg
shrb
leave
dec
mov
stos
xchg
adc
pop
shl
cmp
lock
repz
sbb
cmpsl
lea
sub
adc
mov
or
mov
mov
ret
jle
gs
and
pop
pushl
cmp
mov
and
dec
dec
xor
ja
ficompl
mov
xchg
xchg
lock
fwait
push
pop
sub
jg
mov
xchg
sbb
jecxz
xor
movsb
jg
lds
dec
mov
jecxz
jmp
push
xchg
faddl
fstl
pop
cmp
cltd
jmp
addl
xchg
fsubs
pop
cli
ffreep
mov
in
xchg
into
and
loop
mov
fsubl
outsl
seta
jg
cmp
out
inc
clc
mov
jne
andb
gs
adc
dec
add
mov
and
cld
daa
sarb
popl
pop
push
adc
pop
mov
clc
aas
dec
sub
dec
ret
xor
aas
mov
pop
xchg
inc
jmp
push
imul
loope
xor
mov
xchg
cmp
ja
test
dec
call
arpl
out
into
divps
aas
fmul
or
xchg
xchg
add
ljmpw
sbb
divl
imul
aaa
add
mov
outsl
push
or
mov
inc
xchg
testb
xchg
sbb
and
lds
in
data16
or
mov
sti
mul
fistpll
dec
fbstp
divl
jecxz
adc
bound
xchg
xchg
movsl
cmp
push
mov
movsb
xchg
daa
lcall
push
idivl
test
shll
jmp
test
aad
lods
imul
cli
cmp
daa
cli
inc
sarb
cmpsl
daa
enter
push
ret
cmp
je
ljmp
mov
jb
mov
mov
xchg
fstpl
xor
icebp
comiss
ja
loop
mov
cmp
out
mov
sub
xchg
js
mov
movsb
shll
push
mov
lock
jnp
mov
inc
mov
pop
mov
mov
dec
int3
xor
adc
lock
sar
imul
and
mov
scas
adc
cli
aas
and
push
call
lret
jge
add
inc
mov
sub
and
loop
mov
push
jmp
sbb
xor
imul
fsubrs
push
push
arpl
lock
sub
out
mov
fs
inc
xchg
fs
add
xchg
cmp
mov
lock
lock
in
xchg
into
dec
int
addl
and
pop
sarl
adc
cwtl
aas
pop
sarl
arpl
add
fidivl
jns
mov
aas
mov
jecxz
das
jmp
shlb
sbb
dec
popa
out
jo
cmp
scas
out
cmp
mov
sbb
fstpt
out
pop
fdivrs
aas
imul
in
rolb
sub
xor
add
fisttpll
cld
or
lahf
jb
inc
lods
cmp
scas
aam
jg
lock
jg
out
in
mov
ror
sub
fbld
jl
ret
sbb
mov
mov
sbb
adc
insb
xchg
add
inc
sbbl
lahf
pushl
or
test
inc
mov
out
push
adc
aas
das
cld
in
push
loop
scas
lds
decb
xchg
outsb
lcall
lock
cmpsl
cmpb
cmp
push
ret
adc
sbb
idivl
lock
in
pop
push
or
xor
imul
stc
push
dec
jge
dec
xor
dec
or
add
adc
jle
pop
inc
aam
adc
addr16
movsb
sub
mov
pop
stos
jmp
inc
jecxz
sbb
aaa
and
ljmp
xor
int
xchg
pop
push
hlt
inc
push
adc
and
out
movhps
mov
xchg
pop
pop
cmp
inc
dec
xchg
lea
int
add
push
pusha
lock
xor
pop
adc
arpl
rolb
cltd
mov
mov
icebp
pop
mov
rep
cwtl
ds
call
xorl
out
ljmp
push
outsb
sub
dec
sbb
fidivrl
ja
inc
mov
cmpsl
push
fistps
pop
inc
mov
aas
mov
xchg
and
in
add
dec
test
sarl
aad
fadd
pop
push
in
adc
stos
jg
fstpl
cs
and
test
xlat
loopne
cmp
leave
bswap
sbb
jp
lock
add
jg
sti
push
mov
aad
sub
cmp
sub
cmpsl
test
loope
and
lahf
xchg
jge
mov
push
jp
lods
or
add
out
iret
rorb
dec
xor
mov
fsubrl
fs
out
push
inc
inc
cmp
push
roll
mov
jg
dec
xor
sub
movsl
mov
pop
jg
aaa
outsl
push
call
xor
rcrl
rcr
out
xor
loopne
sbb
das
fimuls
inc
pop
xor
icebp
repnz
mov
lret
fisttpll
ret
jnp
icebp
mov
mov
fiaddl
aas
inc
sub
jmp
adc
jl
lcall
aaa
adc
mov
or
incb
lock
sbb
popf
or
mov
jne
clc
adc
test
int
fwait
cmp
sub
xchg
adc
dec
jbe,pn
popl
inc
xchg
mov
and
popl
pop
std
fbld
adc
sarb
gs
cli
xor
pop
loope
xchg
mov
mov
jle
xchg
pop
adc
outsb
scas
dec
or
cmp
fisttpl
mov
mov
sti
add
sub
subb
xor
fst
fisubl
push
push
out
ss
fists
and
xor
stos
sbb
cmpsl
loop
and
scas
mov
icebp
mov
cwtl
rep
aad
sar
cmp
mov
mov
lret
fiadds
jne
inc
pop
scas
pop
xchg
int3
imul
mov
mov
sahf
cmp
push
test
popa
push
inc
fsubl
in
adc
cs
push
in
mov
popf
maskmovq
sti
outsb
ret
pop
scas
jb
fists
adcb
out
movsb
test
inc
outsb
shl
lds
jns
loope
push
sbb
popf
in
int3
arpl
cltd
aas
aas
xchg
jno
jo
outsl
cmpsl
add
push
sub
or
jp
xchg
jae
sbb
mov
sbb
repz
and
lahf
sti
aas
imul
or
lds
xchg
incb
ljmp
iret
pop
fs
cmp
mov
mov
sub
loopne
lock
lahf
fsub
inc
xchg
jge
sub
mov
movsl
adc
ljmp
adc
inc
js
push
movsb
shl
cmp
sbb
repnz
and
loope
out
cmp
out
jmp
test
loope
mov
flds
jns
cmpsb
push
sbb
aaa
addb
rcrl
mov
loopne
fs
ljmp
and
es
sbb
scas
add
sbb
ljmp
mov
mov
lods
xor
cmp
jge
jl
sbb
pop
mov
mov
adc
rsqrtps
add
rcl
mov
xchg
ja
inc
loope
inc
mov
jp
ret
sbb
mov
negb
stos
jae
ret
loop
inc
jb
sub
push
std
mov
mov
fwait
and
fcmovnbe
add
xchg
adc
jns
pop
clc
decl
pop
xchg
fmull
cs
cmp
lea
inc
push
push
jae
scas
in
sub
cmp
das
leave
adc
mov
es
fwait
scas
jb
stc
insl
sub
add
test
mov
cli
dec
adc
aas
jp
imul
movsl
mov
call
mov
push
lods
cli
add
hlt
in
ljmp
mov
cmp
arpl
pushl
divb
mov
jno
dec
aaa
jmp
dec
loop
or
shll
loop
fsubrl
in
sbb
cmpl
pop
fdivrs
out
xchg
pop
data16
jp
shrl
lods
pop
sbb
and
sbb
adcb
push
clc
mull
jmp
pop
out
popa
cmc
cmp
xor
lahf
push
jae
or
scas
jmp
lods
jecxz
dec
loop
imull
sbb
repz
arpl
dec
shrb
sub
lods
cmpsb
pop
mov
adc
mov
lcall
push
or
jg
std
orl
mov
inc
xor
fdivrl
mov
xor
adc
cmc
mov
ret
pushl
inc
insb
cli
and
cmpsb
jl
popf
outsl
stc
das
xor
jnp
mov
mov
ret
lods
jmp
fimull
orb
jbe
mov
jae
pop
cld
addr16
cmp
xor
push
or
lods
neg
or
jnp
loop
in
mov
test
sbb
sbb
push
mov
push
lahf
or
shrl
mov
ss
hlt
pusha
bound
lods
sarl
jge
sbb
inc
fisubs
push
repnz
fists
pop
aas
rcrb
lods
outsl
test
ja
mov
mul
pop
inc
lahf
sbb
jl
sar
lcall
push
xchg
xor
cmp
pop
daa
mov
pop
imul
mov
inc
inc
in
inc
sbb
jecxz
add
lcall
or
cld
mov
jae
int3
dec
in
inc
sub
aad
jl
mov
rcrl
pop
mov
fildll
push
lods
lods
stos
js
pop
sbb
xchg
aas
ja
push
icebp
and
ja
jmp
fsub
adc
inc
add
or
xor
lock
cmp
stos
js
aam
sar
jecxz
ljmp
inc
jae
data16
loope
add
cmp
fiadds
jecxz
sti
adc
pop
pusha
sbb
cmp
jae
pop
jno
xlat
cmpps
incb
call
or
pop
pop
pop
insl
ret
std
jg
cmp
xchg
dec
pop
xlat
mov
aas
mov
sarb
sbb
jmp
and
ret
aas
mov
mov
add
push
inc
jg
jo
sub
popa
fbld
insb
mov
lcall
pop
sub
iret
popf
negl
call
mov
jg
cmp
push
inc
imul
jnp
mov
fnsave
inc
add
cwtl
sbb
sarb
push
xor
sub
cmpsl
mov
mov
pop
cmpl
jle
call
arpl
dec
std
pop
mov
movsl
ds
push
mov
jg
jg
fistpl
mov
pusha
push
call
mov
or
cs
idivl
pop
lahf
and
enter
and
fsubrs
mov
adc
adc
pop
dec
incb
adc
pop
and
in
data16
ja
cld
stos
mov
aaa
push
shlb
aaa
cmp
lds
fmul
jg
sub
fiaddl
xlat
inc
mov
fdivs
test
loop
jo
das
jne
sub
mov
mov
jne
dec
jae
sar
fmull
cmc
in
mov
lret
jecxz
push
jmp
std
mov
fs
inc
and
scas
mov
scas
mov
mov
ljmp
sbb
cld
inc
jmp
pop
insl
shrl
mov
add
sbb
nop
pusha
test
stos
push
mov
push
incl
jg
sub
in
push
lea
aam
scas
clc
addr16
pop
lcall
push
in
fs
in
sar
xchg
lock
inc
xor
mov
iret
or
pusha
leave
xchg
pop
inc
sub
lds
popf
subl
add
mov
mov
push
xor
inc
nop
int
mov
dec
ss
mov
jg
fdiv
lahf
mov
pop
jle
or
test
cli
into
xor
lods
int
decl
sub
shrl
xor
push
mov
and
in
les
sbb
arpl
adc
dec
mov
aaa
data16
adc
jo
cmp
std
fdiv
lea
cmpsb
sbb
daa
adc
add
jl
incl
sysret
adc
push
insb
cmp
add
outsb
add
dec
pop
aam
lods
push
enter
xor
pop
xchg
mov
cmpsl
sub
es
out
shrb
push
pop
out
xor
incl
xlat
dec
push
jmp
and
out
daa
jge
incl
sub
mov
fiadds
imul
mov
mov
sbb
adc
arpl
out
fcomi
lret
cmp
mov
pop
mov
std
pop
jl
mov
addl
cwtl
mov
shrl
ljmp
xchg
cli
ret
cmpsb
add
mov
mov
inc
sub
and
mov
adc
into
xchg
gs
jmp
jg
int
loope
dec
lea
cmp
mov
ljmp
insb
dec
pusha
loopne
in
lcall
std
es
cmp
push
mov
mov
xchg
dec
or
incb
sar
dec
push
int
pop
fldl
call
outsb
adc
jecxz
incl
adc
sub
adc
outsl
sbb
dec
ret
xchg
out
push
vmread
add
pop
push
aaa
add
xchg
fs
in
pop
xchg
ret
sbb
loope
aas
js
cs
addr16
fistpll
push
js
sub
idivl
ret
sub
dec
or
mov
jne
xchg
pop
mov
imul
decl
jecxz
lock
mov
jo
cmp
add
icebp
ja
iret
mov
icebp
xchg
mov
shr
in
mov
loope
test
jle
clc
pop
out
jmp
icebp
xor
arpl
pushl
cs
lods
lock
dec
cmc
xchg
jns
stos
adc
and
lods
aaa
jl,pt
jns
imul
loopne
imul
cmp
pop
shrl
adc
iret
hlt
stc
addr16
outsb
cmp
imul
jnp
and
pop
out
push
adc
jp
ss
mov
icebp
xchg
jl
roll
push
popf
data16
fs
clc
out
pop
jmp
mov
adc
or
or
dec
fwait
cmp
cmpsl
ret
mov
add
sbb
repz
push
sub
push
jle
sbbb
xchg
mov
cmpsl
cmp
out
pop
fdivl
stos
adc
or
dec
in
movsb
loopne
cwtl
ffreep
or
popf
aad
and
jnp
pop
test
adc
loope
add
mov
in
loope
das
lret
adc
sbb
stc
lods
jle
lock
test
mov
shll
pop
sbbl
jnp
pop
stos
push
jnp
pushf
push
adc
or
sarl
jge
repz
xchg
pop
and
pushw
add
cs
push
paddusb
imul
gs
pop
jns
aas
sti
testl
jle
nop
pop
rcrb
sbb
pushl
fmul
inc
sbb
fsubrl
into
movb
es
mov
addr16
addb
fdivs
andl
cmpl
and
and
mov
mov
push
xor
jg
inc
xor
je
and
push
add
js
or
imul
add
scas
popa
jnp
lods
add
and
aas
clc
cli
scas
sbb
and
inc
fisttpl
movsl
adc
insl
ret
inc
aad
xor
mov
jl
movsb
outsb
inc
icebp
mov
popa
dec
fdivrl
aam
xor
jl
shrl
pop
jge
out
inc
add
test
nop
in
push
jns
outsl
pop
jg
push
push
int
inc
jne
ret
imul
aaa
pop
stos
adcl
std
dec
cmc
jg
fisubrl
insl
and
inc
mov
jmp
aas
xchg
loop,pn
cs
in
add
iret
icebp
jmp
scas
popf
jl
sbb
in
scas
rorl
push
cld
pop
xchg
adc
adc
fisttps
mov
push
sbb
jecxz
mov
mov
iret
loope
push
rol
inc
aaa
in
pop
xor
sbb
bound
je
and
fs
outsl
stos
or
push
inc
jbe
pop
ds
cmp
aas
rol
adc
loopne
cmc
xchg
dec
sbb
fucomip
jle
mov
sbb
sub
cmp
cld
call
add
mov
mov
decl
lcall
add
loope
sarl
xorl
shlb
ret
aaa
fisttps
sub
xlat
pop
xchg
aas
push
mov
jnp
stc
or
jbe
sbb
lcall
iret
xchg
fucomi
dec
shlb
aaa
jnp
xchg
xorb
or
mov
add
test
loope
cld
ds
sub
pushf
dec
orl
cmc
mov
mov
call
popa
out
mov
jo
push
pop
fisubrs
jge
fsubrl
add
push
sbb
sahf
ret
push
ss
out
test
jg
fists
mov
scas
xor
bound
sti
or
mov
sbb
mov
mov
push
iret
push
jmp
and
sbb
push
out
andl
aad
mov
fisttpll
enter
les
test
call
mov
pusha
cmp
out
adc
int
pop
test
mov
fwait
add
xchg
mov
mov
sub
mov
jb
fwait
jg
pusha
or
mov
scas
add
jle
aaa
or
xor
lods
das
jl
int
insl
dec
adc
mov
dec
lahf
adc
cs
int
push
mov
push
pop
jge
test
adc
cli
addb
outsl
fdivrp
out
aam
lea
notb
aaa
mov
popa
inc
ret
xor
add
dec
cmp
pop
mov
sub
dec
mov
bnd
jbe
xchg
or
std
xor
out
scas
fadd
insl
insl
cmp
stos
adc
pop
dec
jg
idiv
mov
popa
repnz
inc
adc
jle
loope
js
int3
aad
fiadds
inc
jge
xchg
repz
in
sbb
jle
or
pushl
fdivp
lcall
or
mov
jg
mov
orl
mov
and
jg
std
jg
clc
lcall
clc
cmpsb
push
jecxz
fisttpll
setg
mov
sub
clc
cmp
incl
in
sbb
push
sub
cmp
pusha
cmpl
sarl
nop
pop
xor
sub
mov
push
fnstcw
adc
push
sar
shrb
ret
outsl
add
mov
outsb
sti
mov
mov
or
mov
scas
pop
push
dec
stos
push
add
lods
mov
sbb
aas
notb
pusha
dec
dec
pushf
sub
inc
cmp
ret
clc
pop
xor
adc
mov
and
jne
or
int
inc
or
incl
cmp
int3
popf
scas
sub
and
jne
cmc
mov
xchg
ret
mov
clc
xlat
clc
inc
xchg
inc
xor
cmc
mov
jg
push
jg
ljmp
lds
cs
movsl
out
mov
mov
fwait
sub
mov
fnstcw
pop
bound
popa
pop
xor
ret
js
sahf
mov
call
std
into
popa
push
pop
sbb
imul
scas
lahf
lret
idivl
addb
dec
dec
ffreep
loope
add
xor
xlat
fcos
sub
add
fiadds
or
dec
cld
andb
inc
jb
subl
mov
xchg
fdivl
loopne
mov
arpl
pusha
cmp
jge
mov
fwait
push
xchg
iret
outsb
adc
lcall
pushf
gs
ss
xchg
leave
es
cmp
imul
loope
shrb
xchg
cmp
fs
testl
adc
push
xchg
hlt
add
lods
out
push
js
test
pop
or
jle
pop
ja
jns
insb
add
fcomip
sbb
push
inc
lock
mov
jecxz
add
call
cmp
adc
incl
cli
cmp
xchg
dec
filds
aad
insl
cmp
sub
jle
cmp
mov
cltd
test
lock
in
mov
subb
movsb
or
adc
mov
mov
cli
inc
xchg
pop
inc
cmp
insl
fildl
sub
call
dec
jbe
push
pusha
fisubl
ret
loope
outsl
xor
jg
fiadds
pop
or
aas
and
mov
dec
jnp
push
fisubrl
out
loopne
mov
pushf
sbb
in
inc
mov
and
cli
and
aas
in
push
or
jns
fcmove
xchg
mov
in
adcl
mov
pop
cmpsl
outsl
out
fisttpl
adc
xchg
cmpsb
rol
xchg
mov
sbb
cmp
mov
mov
xchg
iret
lcall
dec
fisubrl
xorl
aad
jo
mov
push
push
imul
jmp
adc
xor
or
jno
pop
push
push
pop
xlat
inc
pop
dec
cs
lret
add
xlat
out
pop
test
inc
xor
sbb
mov
and
adc
adcl
and
inc
sbbl
test
jecxz
loopne
and
sbb
popa
les
jle
test
cmpsl
pop
addr16
mov
adc
movsb
pushl
movsb
incl
mov
lret
xchg
sub
inc
daa
loope
xor
imul
arpl
cmpsb
out
lock
clc
jnp
movsb
cltd
out
mov
adc
js
aas
sarb
dec
adc
call
aas
idivl
jnp
les
and
push
and
inc
imull
out
inc
lock
fstl
shll
cmc
mov
and
mov
clc
decl
jns
imul
lret
les
pushl
test
je
test
leave
sub
lret
jg
jg
dec
lock
scas
xchg
sbb
mov
sahf
sub
push
dec
or
push
pop
push
adc
sbb
lea
push
sar
pop
add
jae
xchg
push
and
jl
mov
cli
sti
aas
cmp
push
pop
std
adc
mov
or
mov
push
test
add
fdivrl
call
loop
jge
ja
cltd
jbe
ja
xchg
push
cld
jae
jle
jnp
sbb
jmp
out
add
mov
adc
or
mov
cltd
repnz
cld
int
adc
decl
incl
mov
cmpsl
push
test
jg
ficoml
sub
xor
xchg
jbe
outsl
mov
add
xor
loope
pushf
mov
inc
out
push
out
pop
shll
in
clts
jo
pop
or
cltd
pop
xchg
mov
dec
lahf
pop
add
add
inc
push
lea
cmp
sub
arpl
ja
push
stos
mov
lcall
outsl
fwait
xor
mov
stos
jmp
jge
test
ficoms
outsl
or
lods
shrb
jbe
popa
hlt
sbb
jmp
lahf
pop
test
mov
fsubrl
xchg
jne
lret
and
mov
testb
add
bound
addr16
xchg
pop
cmc
cmc
xchg
sbb
popa
push
mov
add
push
pop
mov
ljmp
in
pop
inc
xchg
rcll
ja
repnz
or
pop
jb
jg
je
inc
mov
in
pop
fisubrs
std
scas
pop
rcrb
jge
mov
ds
maskmovq
xor
jle
dec
je
jbe
test
pop
pop
rclb
sbb
jg
push
jle
mov
stc
xchg
flds
enter
inc
jb
aas
js
xor
out
movsb
mov
lret
xlat
jmp
sar
xor
cmp
pop
adc
mov
out
mov
mov
divl
mov
mov
mov
das
mov
int
adc
leave
pop
mov
jmp
cmpsl
lcall
mov
jmp
rolb
movsb
pop
add
out
arpl
insb
mov
shlb
push
std
cmp
imul
adcb
lea
push
in
std
sub
stos
gs
sbb
push
pushl
stos
cmc
or
cmp
ret
jge
mov
fistl
mov
mov
push
mov
xor
aas
xchg
in
xchg
sbb
jno
popf
xchg
test
jle
pop
xor
stos
popf
jb
les
adc
aas
lcall
std
clc
add
leave
and
add
mov
ret
push
test
mov
jg
das
xchg
dec
jl
inc
jno
in
jecxz
cmp
aam
jp
cmpsl
fnstenv
inc
sbb
adc
jb
fs
or
or
xchg
ret
insl
and
mov
gs
into
enter
aad
pop
aam
pusha
jle
lds
leave
jp
incl
xabort
sub
adc
jno
mov
pop
shlb
loopne
lea
movsb
dec
jecxz
rorl
popa
dec
dec
pushf
mov
xchg
mov
jmp
push
arpl
mov
mov
and
clc
iret
shr
and
hlt
inc
pop
test
jmp
test
clc
mov
aas
aad
mov
lods
jne
mov
pop
mov
in
shl
out
cmp
scas
push
out
pop
add
adc
and
jp
dec
idiv
fcmovnb
jg
and
mov
inc
xchg
mov
mov
jp
push
in
push
test
xor
sub
push
mov
fbld
addl
out
mov
dec
sub
jns
pop
xchg
shrl
cld
idiv
out
push
js
mov
dec
dec
lds
xlat
call
cmp
or
push
fstp
jno
and
inc
jecxz
xchg
imul
xor
mov
orl
adc
test
lods
into
cwtl
aas
rcl
mov
adc
jns
and
std
push
inc
dec
cs
jo
clc
cmp
stc
out
jmp
push
fdivrl
cmp
arpl
sub
repnz
dec
aas
add
fistpll
dec
dec
sub
jno
xor
pop
jmp
je
fisubrs
lcall
dec
fildl
adc
lahf
call
and
inc
scas
lcall
ja
mov
cmp
mov
lods
mov
dec
loop
cli
ja
push
gs
sbb
inc
stos
jne
out
jg
repz
fsubrl
adc
in
cmp
sti
cmp
leave
xchg
ret
push
jno
or
jnp
fmull
jl
mov
xor
loopne
fnstcw
mov
fcoms
push
or
andb
test
and
add
jns
pop
sbb
mov
stc
push
sub
call
add
cmp
sbb
pop
sub
popa
das
cmp
cli
and
jg
pop
sub
xor
jg
mov
sub
xchg
ljmp
add
rorl
sbb
pop
pop
and
jnp
sahf
popa
add
outsl
mov
aas
decb
adc
and
out
fbstp
fcoms
pusha
jle
outsl
pusha
mov
pop
xchg
push
out
inc
das
xchg
lods
aas
add
mov
dec
incl
pop
cld
mov
jle
cmc
jns
cli
xchg
nop
ja
lock
xor
dec
cmc
push
mov
aas
movb
fildl
test
aad
ss
jb
cmp
and
test
cli
mov
shll
and
repz
int3
movsb
push
lret
rcrb
rorb
fdivrs
jg
shll
pop
out
rorl
cld
pop
sar
loop
jmp
cltd
das
add
cmp
or
cmp
mov
mov
loope
adc
dec
or
sbb
call
in
dec
sbb
adc
pop
shll
out
cmpsl
push
cld
and
aas
cmp
out
xchg
in
mov
inc
daa
jb
jb
cmp
aas
jnp
add
leave
mov
scas
mov
mov
sub
xchg
push
xchg
cli
ljmp
out
cwtl
cmp
repz
inc
sar
je
vminpd
cld
adc
mov
ficoml
inc
and
lods
dec
sbb
sub
stc
adc
sbb
std
cmp
pop
loop
insl
inc
inc
xchg
jb
in
sub
lret
scas
and
fistpll
lods
pushf
lea
adc
mov
fnstsw
cmp
std
cli
sub
lret
jge
negl
popf
sbb
fs
and
lds
jb
pusha
roll
ljmp
pop
inc
adc
mov
pop
add
mov
test
cwtl
adc
std
stos
xlat
out
dec
mov
mov
mov
lds
adc
int
cmp
int
pushf
loopne
push
adcb
dec
int3
push
fnstenv
mov
leave
cltd
mov
and
pusha
icebp
pop
xor
mov
pop
cld
aas
pop
cmp
jl
test
push
lcall
popa
movsb
inc
mov
push
mov
ja
xchg
and
lcall
insb
cmp
ljmp
fcompl
xchg
rclb
ds
add
adc
inc
outsl
stos
lea
mov
push
mov
cld
movsb
lea
sarb
adc
pop
sub
repnz
jns
idivb
ljmp
outsb
hlt
mov
mov
lock
jecxz
pop
in
add
aad
les
clc
sub
sub
add
jmp
pop
aas
scas
pop
sti
fstl
iret
add
ljmp
sti
mov
orb
andb
insb
push
clc
into
jb
pop
fwait
inc
adc
repnz
ja
mov
dec
je
jo
out
sbb
push
xchg
into
jns
mov
jecxz
and
push
loopne
mov
sbb
mov
insb
addb
xchg
out
or
and
push
and
popa
push
inc
lcall
xor
mov
xor
cmc
psrld
xor
cmpsl
fisubs
test
js
xchg
loopne
aaa
iret
lahf
xchg
pop
jp
nop
ljmp
lahf
rorl
out
fcoms
xor
add
ja
out
stos
xor
les
add
out
mov
jbe
add
and
lods
aaa
out
in
les
icebp
int3
arpl
adc
sbb
mov
std
mov
cmc
sarb
das
dec
push
sub
clc
dec
xor
shlb
push
cli
ljmp
popa
jmp
in
pop
mov
xchg
mov
lret
ja
jg
sbb
mov
push
sti
adcl
adc
cmpsl
mov
outsl
cmp
imul
xlat
iret
mov
adc
jmp
xchg
outsl
mov
rclb
das
sarl
movsl
sub
mov
cli
push
enter
mov
enter
fdivrp
push
push
sub
popf
push
or
mov
bsr
sbb
icebp
mov
frstor
arpl
xchg
xor
cld
popf
js
fdivrp
out
push
les
ret
aas
mov
aas
xchg
fiaddl
ret
push
gs
push
iret
cwtl
sbb
push
shr
mov
mov
sub
dec
mov
fistl
shl
scas
and
lcall
or
adc
mov
inc
inc
call
or
mov
sub
fdivr
jge
mov
mov
adc
insl
cmpsb
inc
out
ljmp
sti
or
shrb
fbld
lret
cmp
ds
dec
out
fnstsw
jg
cmp
sbb
push
xchg
es
aas
xchg
jmp
ds
xorl
lock
pop
ret
cmp
push
shll
jg
sbbb
js
and
jbe
lods
in
js
pusha
push
jne
pop
sbb
dec
ljmp
stos
fisttps
push
insb
sub
xor
cmc
sbb
nop
loopne
sub
cmpsl
imul
mov
cmc
dec
or
movsb
mov
cli
int3
adc
fwait
pop
mov
sarl
dec
sub
out
and
gs
adcl
mov
mov
pop
mov
jge
lahf
cli
inc
adc
cltd
in
dec
in
es
and
mov
cli
cwtl
mov
sbb
xchg
mov
sar
xchg
daa
xchg
pop
xor
inc
fdivs
push
incl
mov
popa
and
mov
out
iret
inc
cld
sbbl
imul
mov
out
cld
adc
rorl
push
out
ficompl
cld
dec
push
notb
fnstsw
jg
mov
pop
mov
adc
pop
imul
es
das
into
js
adc
jg
outsb
clc
fistpl
push
in
aas
sarl
pusha
mov
pop
jno
jnp
mov
sub
mov
add
sar
mov
adc
ret
mov
jb
ja
cli
pop
inc
jg
repz
test
in
and
cmp
test
mov
sbb
out
fidivrl
lds
adc
ja
gs
push
jae
pop
ss
cmpsl
decl
movsl
fnstcw
xor
jns
incl
jmp
pop
mov
add
mov
out
pushf
sub
pusha
lds
add
inc
test
pop
mov
jge
or
mov
push
or
xlat
jnp
out
aas
pop
scas
test
dec
fcompl
and
add
sti
lahf
jle
mov
rorl
mov
cmpb
jge
daa
ret
sbb
cmp
or
add
ljmp
fistl
mov
out
jae
aas
cmpsl
and
aaa
fisubrl
xchg
jne
mov
sarl
lret
test
out
inc
lock
cs
pop
les
mov
jb
arpl
scas
lock
movsb
das
ret
adc
xchg
and
adc
xchg
or
mov
pushaw
add
sbbb
testl
inc
pop
jg
int
push
scas
xchg
push
push
xchg
stos
or
sub
das
in
ja
mov
les
adc
sti
lcall
mov
lahf
js
dec
scas
std
xor
lahf
or
aas
xchg
cmp
inc
insb
adc
aaa
pop
hlt
aam
outsl
fnstsw
cmpsl
out
loope
push
sub
xor
inc
add
jmp
popa
cmp
sub
icebp
ljmp
cmp
ljmp
inc
sbb
mov
pop
std
ja
cmpsb
push
lret
imul
sbb
cmp
add
stos
dec
fdiv
cmpsb
jne
pop
loope
pop
repz
pop
mov
aas
adc
push
cmc
fdivrl
jbe
push
popa
inc
dec
mov
or
leave
adc
loopew
ret
std
xor
push
in
call
and
mov
fsubrl
mov
jg
inc
scas
mov
sti
sbb
mov
mov
les
mov
out
mov
or
jns
aad
shr
mov
inc
out
push
sti
dec
stc
jbe
dec
adc
aas
xor
mov
cltd
cmp
cwtl
mov
lcall
addb
pop
push
das
loop
and
push
cmc
add
lock
add
lods
into
testl
mov
and
sti
clc
lret
jmp
sub
pushl
jg
repz
pop
sti
lock
addr16
fsubs
dec
hlt
popf
out
arpl
lods
divl
adc
aad
loope
or
fwait
das
js
mov
jno
incl
jg
inc
pop
xchg
cmc
sbb
pop
jp
cmp
pop
xor
xor
pop
fbld
out
lret
pushl
sbb
sti
scas
lods
xchg
jns
lods
call
js
negl
mov
jmp
sarl
sbb
rcrl
cmp
push
sub
pop
hlt
subl
inc
sbb
fucom
jbe
ljmp
hlt
scas
cltd
cs
pop
adc
jae
in
movsb
hlt
ss
xor
in
jmp
notl
roll
mov
jmp
and
cmpb
mov
jl
dec
mov
jle
test
mov
sbb
add
push
mov
into
jae
rcrb
lods
sub
inc
ja
dec
fnstsw
stos
enter
fcmove
inc
daa
sub
daa
loope
subl
ret
xchg
jns
rcrb
outsb
push
sub
lahf
aam
rol
pop
cli
xor
xor
insl
sub
sub
jecxz
mov
cmpsb
scas
xchg
ret
pop
cli
ja
pusha
ret
sub
jle
leave
and
fistpll
js
aaa
lea
xor
sbb
iret
rcr
stc
jg
jmp
jno
jg
jl
cmp
ja
adc
sub
add
cmp
test
adc
incl
mov
andb
sti
mov
jmp
dec
test
add
out
fincstp
dec
aad
xor
insl
and
pushl
xor
sub
jle
aad
mov
cmp
cmc
jg
push
std
and
cs
test
or
subb
mov
je
jb
jmp
lcall
adc
xor
and
mov
xor
push
fucomip
outsb
cmp
add
pop
idiv
pop
fists
in
inc
xor
sbb
fists
inc
mov
mov
pop
out
aad
mov
sarl
mov
adc
add
aas
pop
addl
into
insb
stos
out
pop
dec
fistps
inc
and
enter
cmp
stos
dec
stos
repnz
pushf
add
test
push
xchg
call
inc
clc
mov
rcrl
sbb
mov
xor
dec
aaa
lock
or
mov
xor
cli
jge
repz
std
pop
sarb
mov
std
fs
push
std
inc
clc
add
ds
cmc
fsubrp
jae
movsl
mov
pop
dec
pop
mov
std
in
or
sbb
pop
pop
insl
aas
lds
pop
dec
push
inc
iret
and
xorb
jmp
std
cmc
push
cmp
xchg
cmp
xor
ja
push
mov
jg
xchg
pop
dec
add
je
pop
pop
xchg
sub
mov
jo
push
ret
std
cmp
mov
icebp
mov
inc
out
cmp
enter
out
divl
out
xor
ss
jg
fmull
mov
addr16
inc
out
test
adc
sub
movsb
mov
xor
jmp
idivl
inc
fstp
adc
jno
andl
mov
aas
add
cmc
ret
loope
stos
ret
roll
sbb
cmp
cld
cmp
or
lcall
adc
rcl
sub
cmp
adc
or
dec
in
cld
adc
cmp
lcall
scas
push
icebp
inc
stos
push
arpl
pop
adcl
filds
and
push
into
cmpsb
sbb
sub
cmpsl
jg
xchg
cmp
jne
sbbb
repnz
add
jge
in
dec
out
xor
mov
dec
jg
std
iret
adc
push
xchg
adc
popf
jne
jg
movb
xor
sbb
cmp
loopne
daa
mov
fbld
test
cmpsl
sbb
int
push
fdivrp
bound
iret
xchg
push
imul
jae
xchg
push
jp
sbb
lcall
dec
rcrb
fidivrs
lods
sub
mov
insb
mov
arpl
out
cmp
lret
xchg
imull
repz
xchg
in
loop
aam
push
pusha
sbb
and
scas
cmpsb
decl
lock
cmp
fdivrl
call
pop
dec
scas
dec
adc
loopne
pushf
mov
leave
in
cmp
mov
lcall
ljmp
push
iret
data16
cmpsl
ds
lea
cmp
jnp
jmp
xchg
xchg
mov
jbe
lods
mov
jo
int
es
lods
out
enter
and
xchg
jecxz
sbb
leave
add
psadbw
pop
jmp
fldl
fistps
mov
movsl
xchg
cltd
inc
decl
loopne
pop
push
pop
xorl
fisubl
rcrl
sub
popf
xlat
lret
insl
movsl
lcall
std
adc
in
xor
lret
sbb
daa
adc
or
xchg
stc
pop
ss
cli
or
pop
jae
jg
mov
stc
leave
nop
jne
pushf
and
pop
push
push
cmpsb
dec
dec
mov
aas
jge
push
add
add
int
cmp
cmp
les
cld
pop
pop
ret
adc
fimull
aaa
jle
adc
mov
mov
xor
and
bound
decl
push
sub
mov
jmp
sub
xor
sti
mov
lret
push
sub
popa
aas
mov
jg
cld
mov
jg
cli
mov
push
dec
cwtl
or
jmp
xor
mov
xorl
test
js
sarb
arpl
push
sbb
shrl
sbb
and
pop
out
aas
jmp
inc
pop
ljmp
stc
push
mov
push
mov
and
std
lds
xchg
loopne
dec
rcrl
xor
dec
jl
push
inc
loopne
into
cmp
push
cmp
jmp
lcall
popf
mov
push
mov
ja
clc
xor
sbb
lds
pop
inc
pop
xchg
imul
je
pop
xor
dec
test
and
hlt
xchg
add
pop
fcoml
xor
mov
jp
rclb
adc
add
roll
mov
loop
inc
add
stos
jge
lock
sbb
sub
int3
cltd
iret
iret
and
movsb
femms
lock
add
outsl
add
inc
jmp
addr16
outsl
lock
inc
aas
add
mov
xchg
push
jmp
and
sahf
pushf
mov
shll
subb
xor
push
xor
out
call
mov
and
stc
jae
shl
insb
lret
xor
and
ljmp
je
fucom
gs
inc
ds
pop
js
mov
les
js
pusha
lret
out
cmpb
subl
data16
rcrb
or
pop
pop
loop
sbb
outsb
daa
mov
movsb
and
outsl
data16
xchg
cltd
sub
mov
add
sub
shlb
xchg
push
xor
sub
mov
cs
and
adc
sbb
lds
fists
and
in
sbbb
lods
fstpl
repz
inc
adc
repnz
loopne
rcrl
fs
add
add
je
cmp
cmpsl
andb
or
inc
push
add
dec
adc
out
jmp
mov
sub
dec
in
pop
lret
mov
test
loopne
shll
fstps
fsubr
out
lahf
mov
outsb
inc
add
mov
xor
adc
aam
cli
and
jg
sarb
in
xchg
and
scas
mov
cld
rcl
in
in
lock
aas
repnz
mov
cltd
jnp
adc
aas
addl
movsb
xchg
xlat
sahf
incl
push
aaa
mov
roll
std
xor
dec
mov
mov
or
and
iret
or
mov
repz
lds
cmp
repnz
in
adc
dec
clc
sbb
lret
add
fs
ss
aas
mov
ja
xchg
dec
les
sub
cmc
mov
inc
cmpsb
fldenv
cld
aas
hlt
rolb
xchg
and
adc
hlt
push
push
pop
lods
lahf
loope
outsl
insl
ljmp
insl
stos
sarb
push
cld
xor
cld
sub
cmc
nop
pop
out
mov
clc
pop
mov
cs
pushf
ss
hlt
pop
stos
call
jne
mov
dec
mov
jmp
pop
aaa
push
xchg
stc
xchg
data16
gs
lods
xlat
push
pop
or
repnz
aaa
add
and
xchg
iret
pop
mov
pop
fs
inc
lock
fbld
jnp
decl
fsubs
fwait
sbb
call
dec
jecxz
js
nop
xchg
orl
jg
sti
sub
xchg
cmp
adc
cmp
lcall
cmc
dec
fdivl
adcl
lods
cmp
enter
push
fldl
int
sub
shll
jle
sbb
fmulp
or
mov
cli
out
cvtps2pi
lods
inc
mov
pop
shr
inc
fists
stc
xchg
repnz
push
pop
sub
dec
push
in
inc
mov
mov
xchg
js
insb
inc
sbb
mov
stos
je
div
out
icebp
xchg
adc
scas
xchg
inc
clc
cmp
adc
fmuls
pop
aas
std
fnstsw
cmp
and
cmpsb
into
gs
hlt
jns
pusha
xor
dec
mov
insb
or
pushl
enter
pop
into
sub
push
pushl
cmc
pop
in
pop
xor
decb
xlat
es
mov
insl
cmp
lods
outsl
xorl
sti
push
inc
ret
inc
inc
pushl
hlt
xchg
mov
sbb
pop
cmp
aaa
jecxz
leave
lret
imul
mov
sbb
aas
mov
mov
xchg
jge
es
adc
inc
rclb
jle
scas
and
fnsave
xchg
repnz
in
ja
add
out
mov
fucomp
ss
add
and
popa
test
pop
ret
mov
mov
jnp
and
mov
out
ret
and
test
jnp
add
xchg
iret
cmp
ljmp
adc
imul
into
dec
push
sqrtps
mov
and
lahf
sub
outsb
ja
out
addl
in
je
mov
idivb
pop
jl
adc
inc
dec
in
mov
cmp
pop
or
loop
jns
popa
idivl
mov
shll
cltd
adc
xchg
lock
mov
loope
mov
inc
inc
mov
leave
lahf
rorb
pop
in
daa
dec
cld
test
mov
out
pop
repnz
sub
and
incl
std
getsec
push
jle
test
mov
xor
mov
ror
int
pusha
sbb
dec
xor
ds
ret
sbb
call
mov
ss
push
or
sahf
xchg
inc
outsl
pop
jle
sbb
aas
clc
sub
jae
and
mov
fidivrs
mov
mov
jmp
sbb
fwait
xchg
jb
mov
pop
push
xor
lock
sub
and
popa
mov
fidivrl
std
mov
jmp
icebp
gs
jb
inc
das
and
xchg
or
jnp
aaa
jmp
stos
sub
jecxz
sbb
into
clc
cmp
and
mov
xchg
lcall
cld
jg
mov
pop
sbb
mov
pop
mov
std
call
push
lock
stc
scas
pop
leave
dec
rcrb
and
daa
mov
rcrl
mov
xchg
es
out
lock
xor
icebp
xchg
adc
xorl
cmp
rorl
lret
enter
iret
bound
and
loope
lret
add
push
test
xor
or
dec
aaa
sbb
add
iret
loop
pop
sarl
mov
mov
xchg
movsl
or
ret
sahf
adc
jb
clc
filds
push
mov
or
lret
xchg
cli
jns
mov
loopne
hlt
push
adc
add
movsb
and
mov
out
push
sbb
sub
jg
std
jg
push
stos
fs
push
cli
dec
mov
inc
lods
cmp
pushl
dec
fucom
xor
int
mov
pop
adc
shlb
mov
sbb
xchg
aas
cli
aam
mov
inc
jl
add
mov
xlat
pop
cmpsb
sub
sub
fcmovnb
decl
incb
fwait
enter
loop
sub
std
inc
cmpsl
inc
jb
imull
decb
pop
rclb
or
mov
jge
test
and
mov
ret
sti
mov
test
jl
inc
pop
cmp
ja
pop
cltd
stos
mov
int3
outsl
sbb
outsb
test
std
sub
adc
sbb
sub
mov
test
notl
inc
xorl
pushf
mov
ja
xchg
mov
stos
adc
lock
and
jne
sti
pop
inc
inc
xchg
sbb
pop
push
cmpsl
cli
lcall
pop
push
mov
sbb
mov
dec
js
xchg
push
pop
pusha
mov
and
cmc
rolb
cwtl
loop
lahf
pop
push
push
xor
adc
imul
fistpll
mov
loope
cltd
lret
and
ret
dec
dec
push
sahf
inc
test
sti
ffreep
std
orl
dec
dec
and
mov
dec
imul
lahf
aam
pop
xor
out
and
out
repnz
leave
sbb
jp
jmp
int3
push
push
mov
xchg
mov
sub
out
pop
mov
cmp
sub
mov
fisttps
jg
pop
sub
mov
xor
cmp
fidivs
mov
lds
and
test
cmp
dec
mov
pop
icebp
pushf
popa
ljmp
jecxz
rcr
add
sub
adc
xchg
mov
push
inc
xor
std
outsl
loope
mov
push
pop
mov
jne
out
jg
sbb
out
mov
leave
es
loope
decl
sbbl
add
mov
push
loop
icebp
mov
inc
inc
or
jg
add
xchg
das
je
sarl
and
out
in
push
call
mov
cltd
jne
cmp
push
add
lock
mov
in
adc
lcall
lds
out
loopne
outsb
sbb
ret
sbb
mov
aas
sbbl
mov
push
ds
pop
push
dec
pop
add
mov
mov
mov
sbb
aad
adc
dec
cmp
scas
inc
add
jnp
mov
jl
mov
scas
repnz
pop
inc
jecxz
sub
pusha
cmc
xchg
pop
mov
loopne
cmpsb
inc
test
cmp
mov
jge
lret
sbb
pop
xor
imul
loop
xchg
repz
fprem
push
mov
xchg
push
lret
aas
push
loope
mov
mov
sarb
fcomip
daa
xchg
stos
xor
and
mov
push
adc
pop
sub
pop
cld
pop
ret
cmp
daa
lds
xchg
cmc
mov
mov
movsl
xchg
inc
dec
sub
out
loope
rcll
cwtl
mov
xor
push
lcall
jl
pop
inc
std
pop
icebp
and
imul
or
cmc
jno
mov
mov
movsl
fcmovnb
mov
inc
test
stos
mov
dec
lock
jae
stos
jno
or
lahf
in
fsubl
pusha
test
cmp
adc
dec
xchg
cmp
cli
cmp
xor
cmp
jmp
adc
out
adc
mov
push
scas
shll
pop
lea
cmp
enter
imul
data16
sahf
xchg
push
xor
rcrb
jbe
cs
fnsave
popf
pop
jnp
mov
nop
mov
inc
loope
repnz
dec
aaa
clc
pop
std
int3
sti
or
pop
idivl
pop
sub
xlat
sbb
pop
fisubrs
sbb
or
xor
je
std
or
mov
xchg
std
jl
xorb
sub
cmc
sbb
xor
ja
push
ja
adc
aas
sbb
inc
scas
inc
jae
mov
adc
push
pusha
mov
pop
mov
mov
dec
shll
inc
cmpsb
jae
mov
mov
ljmp
mov
mov
mov
dec
mov
mov
daa
fwait
aam
cmc
xor
xchg
cli
popf
rorl
dec
xchg
xchg
sbb
add
std
mov
sbb
fbld
push
out
mov
aam
push
sarb
inc
sub
decl
mov
imul
iret
pop
aad
inc
pop
adc
inc
or
add
pop
test
mov
mov
stos
out
js
xchg
ss
mov
sarl
ljmp
dec
loopne
lock
dec
add
out
adc
inc
mov
andl
inc
jg
imull
inc
lods
sbb
in
sbb
jmp
daa
xchg
loop,pn
les
jle
imul
inc
mov
push
loop
aaa
sub
mov
push
lret
aas
data16
jle
dec
ljmp
outsb
jbe
xchg
push
xchg
xor
ficoml
push
orl
lahf
clc
jle
aam
das
sbb
mov
and
pop
lods
lds
enter
dec
sub
es
adc
sub
mov
push
jb
xor
aaa
sub
push
add
xchg
mov
sub
nop
cld
jg
lock
out
or
inc
mov
cmp
and
pop
or
addr16
testb
call
filds
pop
xchg
push
push
sbb
cld
pop
into
push
push
in
inc
add
pop
push
outsl
jo
inc
add
inc
in
loopne
rcl
in
cld
or
cld
or
add
icebp
pop
inc
add
pop
sbbb
orl
inc
push
or
insl
jb
add
loopne
adc
jns
inc
add
faddl
loope
add
cld
pop
mov
push
dec
jb
jno
bound
or
js
jo
pop
daa
leave
inc
rcrb
push
hlt
inc
adc
push
add
filds
addl
js
dec
adc
dec
add
mov
pop
fiadds
shrl
dec
loopne
in
xchg
add
push
not
push
sbb
or
push
add
mov
jo
pusha
xor
adc
dec
inc
lods
test
in
test
dec
icebp
jg
mov
xor
jb
xor
gs
pusha
clc
incb
in
aaa
push
push
addr16
cld
fisttpl
dec
movl
lock
inc
inc
add
dec
dec
sbb
inc
clc
pop
popf
lods
pop
shr
xor
and
in
aaa
inc
out
jmp
xchg
or
sub
pop
add
js
incb
sbb
sub
pop
aas
pop
xor
xchg
add
inc
outsl
xor
outsb
or
xor
in
sbb
push
call
push
cmp
js
inc
subl
xor
push
add
fxch
jl
inc
dec
cltd
pop
sbb
sti
bound
push
int3
jno
sbb
pop
push
adc
call
sub
loope
pop
imul
ss
mov
sub
fnsave
jb
adc
addb
jae
inc
nop
stos
and
jo
pusha
mull
outsl
add
or
push
mov
xchg
adc
dec
or
jmp
sti
add
incl
sub
add
add
incb
inc
cmp
add
push
sbb
jl
add
sbb
or
scas
outsl
pusha
lock
stos
pop
sar
jne
pop
inc
push
push
and
cmp
ret
push
xor
inc
push
add
bound
movsl
cmp
pop
sub
adc
pop
or
pop
jo
add
fimull
add
cmp
test
mov
mov
cmpsb
xbegin
imul
xchg
xor
clc
fldcw
adc
sub
dec
outsl
scas
cli
inc
in
dec
fs
add
int3
clc
add
ljmp
jbe
movb
ret
mov
push
pop
ss
js
inc
add
sub
inc
fs
inc
jmp
inc
or
push
jb
data16
dec
jns
repnz
call
call
jne
jmp
inc
dec
gs
add
inc
sub
dec
mov
sub
outsb
inc
add
stc
sbb
inc
add
add
add
into
idiv
adc
push
stc
add
adc
cmp
dec
dec
mov
rcrl
imul
jb
inc
rol
mov
js
lret
add
inc
mov
cmp
xor
add
js
inc
add
scas
dec
jb
enter
push
adc
dec
push
xor
cmc
gs
push
push
xor
das
and
add
mov
push
lret
into
outsb
and
jmp
insl
rorb
dec
cmp
xor
js
push
xor
adc
and
mov
dec
sub
xor
rolb
movsb
addb
call
inc
and
push
jnp
jg
aaa
jne
sbb
inc
lcall
sub
and
inc
je
push
jns
jg
cmpsb
add
insl
je
xor
push
push
fadd
nop
lahf
push
imul
popf
stos
or
shr
inc
add
or
cmovne
incl
pop
and
dec
adc
mov
dec
ret
or
pushl
push
inc
add
add
push
les
pop
data16
push
stos
mov
dec
and
aam
insb
xchg
inc
sbb
loopne
iret
adc
popa
insl
dec
add
xor
repnz
dec
sbb
mov
testl
roll
mov
mov
push
sarb
jo
push
xchg
mov
outsl
std
or
push
lcall
and
cmp
lock
mov
cmp
adc
xlat
ja
dec
std
dec
inc
js
cmp
outsb
cmp
mov
sub
shll
dec
inc
sbb
inc
ss
clc
add
stos
clc
sbb
push
mov
push
fiaddl
stos
mov
jo
add
cmpsb
in
push
ficompl
icebp
fmuls
dec
rcrb
lock
aam
inc
fcompl
mov
repnz
js
push
add
int3
sbb
btr
lret
or
dec
sbbb
ficompl
sbb
int3
sti
fidivs
inc
iret
fstpl
mov
aam
les
fidivrs
push
jne
stos
enter
inc
insb
xor
mov
rorb
push
inc
inc
mov
inc
imul
pushl
dec
add
adc
dec
push
inc
jbe
in
adc
inc
jbe
enter
add
push
adc
push
jb
das
clc
mov
push
push
dec
movsb
fcoms
rorb
pop
push
andb
jae
imul
mov
sub
mov
add
sbb
mov
addr16
pop
fsubrs
sbb
repz
push
outsb
dec
loopne
js
js
inc
stos
rcrb
mov
or
sbb
pusha
adc
inc
mov
adc
pusha
clc
inc
pop
dec
clc
mov
mov
push
dec
xor
fiadds
bound
xor
js
mov
arpl
mov
sahf
or
shrb
aam
rcrl
push
andb
jo
jbe
sbb
lcall
arpl
outsl
outsl
mov
inc
dec
mov
or
mov
repnz
dec
jns
dec
outsl
ljmp
push
cli
out
popa
inc
js
push
inc
dec
ss
inc
je
dec
add
inc
push
push
xor
pusha
cli
inc
add
and
ss
repnz
push
inc
mov
movsb
mov
add
mov
in
out
imul
push
mov
aaa
dec
push
push
xor
push
dec
test
pushf
mov
or
lods
push
cmpsb
inc
dec
cmp
pop
hlt
insl
aaa
inc
dec
dec
push
jae
insl
xor
leave
int
fiaddl
push
test
adc
mov
xor
and
loopne
pushf
adc
add
mulb
fiadds
push
pop
repz
or
sbb
xchg
xor
mov
inc
rcrl
test
lahf
adc
and
insl
xlat
pop
int3
sbb
adc
dec
loope
nop
or
std
lcall
pop
inc
adc
add
adc
pop
jmp
sbbl
loopne
xor
push
mov
sbb
sub
add
push
inc
add
shlb
subb
add
mov
add
dec
mov
jae
inc
jo
mov
xor
hlt
xlat
stos
daa
add
cs
xor
in
add
add
pushf
sbb
rcrl
inc
shlb
movsb
add
dec
jnp
test
add
mov
ret
loopne
stos
lods
add
aas
mov
xor
lret
popa
add
imul
aam
ljmp
sbb
mov
insl
sub
add
adc
test
movsl
xor
mov
sub
push
inc
adcb
add
lret
add
sar
mov
jmp
scas
add
add
mov
pop
inc
lret
adcl
adc
daa
pop
xor
insb
sbb
inc
aaa
fbstp
sbb
add
stc
mov
clc
xchg
pop
or
mov
pop
or
fsubr
mov
shll
sbb
test
cmp
sub
and
adc
mov
xchg
jb
add
dec
sub
mov
lcall
push
fisttps
aad
push
stos
add
imul
xchg
xlat
adc
in
mov
fnsetpm(287
mov
adc
stos
pop
fsubrs
mov
mov
add
lar
hlt
int
add
xor
xor
hlt
or
dec
cmp
aaa
mov
sbb
add
xchg
cmp
enter
add
fneni(8087
rcll
repnz
adc
stos
dec
push
lcall
mov
or
fcmovnbe
popa
aam
push
fs
outsl
jno
pop
add
and
bound
out
dec
iret
add
jmp
adc
mov
push
jnp
rcl
xor
and
aaa
or
ret
es
jne
sub
mov
lods
into
cmp
cmp
mov
adc
inc
stos
jbe
sbb
add
mov
out
sbb
mov
fnstenv
xchg
fidivs
aas
leave
add
out
addb
out
addb
aas
movsl
fadds
dec
fsubs
mov
lcall
je
fs
aas
jge
mov
push
dec
jne
fimull
pop
lahf
adc
xor
lock
xchg
imul
hlt
cmpb
jecxz
mov
sbb
bound
xor
push
out
dec
inc
js
mov
shl
insl
ljmp
sub
xor
inc
jbe
adc
mov
fimull
cmpsb
cmpsl
mov
lea
jge
mov
cwtl
aas
stos
jg
orl
outsb
enter
nop
sbb
mov
cmp
fbstp
jge
mov
addl
enter
and
push
dec
addl
sbb
and
push
add
sarl
mov
xor
shrl
mov
push
dec
xor
lods
cwtl
imulb
subl
cmp
push
or
sbb
xlat
aam
push
adc
popf
sbb
ds
mov
cs
inc
add
call
pop
roll
dec
hlt
les
mov
mov
dec
jnp
dec
xlat
or
daa
mov
scas
aas
test
mov
xchg
rcl
test
sub
mov
xchg
jmp
dec
int3
cmpsb
sub
add
jle
cmpsb
sub
mov
or
stc
sbb
ss
dec
call
push
ljmp
lods
test
dec
insl
imul
jl
imul
jo
pop
js
jb
out
pop
shrl
cltd
mov
adc
add
dec
inc
test
adc
adc
fildl
jne
scas
repnz
sbb
clc
add
or
stos
shrl
add
or
pop
subl
xchg
cwtl
bound
and
push
inc
inc
movsb
inc
mov
or
dec
repz
in
addl
bound
lods
mov
stos
movsl
add
jle
shll
movl
aas
fbstp
and
ja
mov
dec
mov
in
mov
mov
lahf
out
add
je
mov
sahf
int
cmp
cmpsb
jmp
mov
lods
sub
and
adc
jns
sub
call
mulb
loop
mov
sub
xchg
mov
push
mov
ss
dec
xchg
xor
mov
orl
sti
xor
cmpsb
jge
subb
adc
add
cmc
loope
pop
int
or
mov
inc
sbb
aad
pusha
ljmp
leave
inc
dec
negb
jp
jl
xchg
hlt
cs
pop
dec
call
add
insl
outsb
inc
ror
enter
pop
sub
test
xor
mov
scas
cmp
inc
imul
scas
stos
sub
mov
adcb
scas
xor
dec
incl
test
xchg
or
xchg
stc
add
sbb
dec
fbstp
sbb
repz
mov
xchg
stos
push
pop
jae
xchg
and
dec
sub
mov
or
into
cmp
std
int
sbb
sbb
mov
popa
inc
mov
inc
scas
inc
into
movlps
inc
xlat
mov
mov
fisubs
xor
addr16
sub
mov
jns
fstpl
sarl
pop
jl
les
in
mov
imul
inc
xchg
adc
mov
inc
rorb
xor
lock
pop
add
test
jnp
idivb
jmp
adc
stos
jbe
fisubs
sahf
outsb
push
jle
ret
jnp
das
int3
int
outsb
mov
xchg
adc
mov
lock
ds
jbe
xor
mov
pop
mov
popf
or
jb
outsl
cmpsb
test
movsb
dec
or
movsl
in
aad
or
adc
sub
ja
sarl
test
dec
push
dec
cltd
mov
aam
fwait
adc
jnp
sbb
pop
pop
ficompl
cmp
sbb
sub
cmp
xorb
push
jbe
sarb
data16
push
dec
dec
negb
cmp
jns
pop
fadds
add
cmp
fcom
or
das
adc
mov
cld
add
push
xchg
pop
test
jno
popf
hlt
cmp
fistps
inc
add
inc
aaa
dec
int
or
lds
pop
daa
lods
jle
mov
add
adc
int
add
call
in
pop
cmpl
xchg
stc
cs
fwait
add
jge
xchg
ret
ds
xchg
les
add
and
mov
jp
jg
scas
pop
lods
mov
into
mov
inc
xor
mov
cmp
xor
roll
xchg
push
xchg
add
cwtl
jp
mov
adc
loop
lods
daa
sbb
mov
cld
xchg
testb
jl
pusha
nop
ret
test
fcmovbe
push
xor
xchg
rolb
sbb
jo
rcrb
sub
in
sarl
je
xor
rcl
jmp
jbe
xor
sbb
sarb
sahf
jo
in
add
or
sbb
stos
rcrl
sbb
imul
subb
sbb
xor
mov
inc
dec
in
ljmp
hlt
rorl
fildl
and
popf
cmpsb
or
or
xchg
jle
inc
push
rclb
aad
mov
xor
stos
adc
and
add
cmp
lods
rcr
dec
into
js
pop
push
jo
xchg
cmp
xchg
sbb
sub
adc
mov
bswap
push
adc
shlb
aam
mov
iret
inc
pop
aaa
jne
pop
rclb
arpl
lcall
arpl
add
and
mov
lock
enter
orb
rcrb
sub
inc
push
int
mov
test
add
out
insb
push
mov
xorl
sbb
icebp
sbb
rclb
jp
scas
daa
push
lahf
into
stos
das
sbb
pop
pusha
loop
ss
and
cmp
pop
fs
xchg
dec
out
add
movsl
insl
pop
cmpsl
add
sbb
lods
orb
fiaddl
inc
push
into
lock
add
and
xchg
lret
test
stos
lods
cli
add
cmp
cmp
mov
dec
and
aad
jbe
add
inc
andb
or
clc
scas
ss
hlt
or
inc
adc
std
nop
xchg
pop
adc
push
jl
pop
stos
cmpsb
pop
pusha
popl
ss
mov
push
mov
jge
jmp
push
mov
aam
lahf
push
lahf
lods
mov
push
dec
lcall
aaa
mov
jp
movsl
mov
mov
cpuid
mov
inc
fildll
xor
sbb
add
dec
mulb
lahf
arpl
mov
pop
pop
mov
imul
jne
cmp
call
adc
and
jl
sub
jecxz
mov
cld
push
xchg
cmp
stos
xor
push
and
lds
dec
xchg
xchg
add
inc
scas
xor
push
in
or
pop
push
cmp
lods
es
js
push
push
mov
das
testb
mov
adcb
int
dec
adc
ret
dec
cmp
leave
mov
loop
pusha
jle
addr16
push
int
mov
cmpsb
jo
inc
leave
cmpsl
cmp
pop
and
and
mov
negl
in
xor
add
fmuls
push
ffree
pop
scas
push
je
pop
andb
in
mov
xor
pusha
inc
mov
insb
mov
clc
jno
in
pop
and
inc
push
lahf
lds
rcrb
minps
or
cmc
cmc
into
rclb
add
mov
ljmp
jno
cmp
in
testb
fsubs
push
hlt
mov
pop
jb
mov
lods
jecxz
ss
add
cmp
inc
cmp
lds
in
das
out
pop
subb
mov
lods
cld
mov
fldl
mov
push
cs
scas
jbe
pushf
or
mov
xchg
cmp
enter
push
cltd
pop
or
mov
add
xchg
std
clc
ds
lret
outsl
int
call
imul
push
clc
sbb
xchg
notb
jmp
sub
adc
pushf
add
xlat
push
xchg
add
jnp
daa
and
jmp
daa
hlt
pusha
bnd
sub
dec
and
sub
cmp
rclb
inc
add
lret
mov
adc
xor
push
fisttps
pop
jbe
cmp
pop
imul
je,pt
add
movsb
ret
adc
push
cmp
fidivrl
add
es
xchg
dec
stos
fcmovbe
cs
push
xchg
mov
adc
das
mov
push
dec
push
jle
sub
or
lret
jmp
dec
shll
mov
cmp
inc
cld
insl
fdivr
cltd
in
or
loop
pusha
sbbb
stos
scas
cld
cmp
fsub
cmp
es
adc
or
add
cmpsb
dec
cwtl
mull
lds
xchg
fidivrl
sbb
movsb
imulb
imul
mov
push
das
jl
ret
roll
shlb
pop
lret
shlb
addl
pushf
mov
lahf
nop
pop
lds
and
aas
push
fwait
dec
add
dec
mov
mov
mov
xchg
cld
ljmp
adc
dec
push
and
imul
push
xchg
pop
call
outsb
lods
outsl
push
loopne
rclb
ss
inc
jbe
bound
sbb
rclb
adc
shrl
loopne
dec
iret
les
cmp
icebp
popf
bound
bts
jnp
mov
jmp
lea
arpl
add
out
mov
push
cld
mov
std
jle
insl
adc
add
scas
xchg
pop
pop
lret
cld
push
scas
sbb
cmc
inc
ret
popa
and
ljmp
inc
mov
andl
push
ja
sbb
pop
fstpl
rcrl
cmp
cmpsb
inc
sbb
rcll
in
sti
int3
in
lcall
js
mov
aaa
lahf
pop
insb
xor
jge
popa
mov
pop
jp
aam
and
dec
pushf
sbbb
notb
mov
xor
xlat
add
pop
jp
mov
push
add
pop
pop
xor
pop
push
mov
and
dec
divl
scas
dec
cmpsb
xorb
roll
jns
fs
xlat
sub
decb
es
in
sub
mov
push
scas
testb
loope
cmp
push
push
lcall
xchg
jmp
xchg
jecxz
insl
pusha
cmpsb
fcmovnb
sbb
in
jbe
lcall
pop
add
js
inc
or
lret
int
mov
adc
ljmp
inc
xlat
ds
or
jg
mov
movsl
icebp
aas
icebp
mov
mov
jnp
fmul
lock
cs
inc
mov
cli
sub
hlt
mov
sub
arpl
inc
xchg
and
in
icebp
mov
icebp
adcb
iret
je
push
jge
divb
lods
pop
mov
les
orb
mov
bound
and
aam
jne
jg
sub
fcom
mov
xor
or
stos
stos
rcrl
cmc
pop
mov
inc
fisttpll
and
cmc
das
icebp
sub
movsl
adc
mov
dec
call
jge
cmp
xor
inc
stos
cmp
dec
and
in
mov
sbb
add
mov
out
or
loopne
sub
out
bound
adc
sbb
push
mov
ss
insl
movsb
rclw
push
xchg
mov
clc
pop
sub
sub
add
mov
inc
rolb
call
outsl
ds
js
je
add
or
js
sarb
test
sbb
sbb
pop
dec
ljmp
xchg
pop
ret
dec
fcmovnu
leave
jp
lcall
jp
cmp
into
add
ds
test
mov
mov
mov
ret
test
inc
push
xor
jmp
out
stos
xchg
xor
inc
fistl
ja
outsl
outsb
jns
or
pop
out
adc
pop
arpl
insb
aam
aad
frstor
and
xor
xchg
cmp
jne
popa
lods
js
xor
fildll
mov
popf
add
pusha
scas
stos
dec
andb
sbb
add
testb
jecxz
lret
loop
jmp
stos
xor
in
cmpsl
xchg
shl
adc
inc
sub
push
divb
hlt
cmp
in
mov
mov
mov
icebp
inc
fwait
xor
aam
mov
or
mov
sahf
rcrl
cmpsl
push
imul
mov
addl
test
cvtpi2ps
mov
dec
lock
in
js
pushw
or
loop
sub
sub
insb
dec
popa
mov
or
mov
fsubl
je
sub
ds
pop
stos
call
mov
aaa
subb
icebp
inc
xchg
stc
push
scas
imul
inc
add
clc
fbld
add
mov
fs
cmp
fcmovbe
test
push
cwtl
aam
test
test
or
sub
fsubrs
scas
xchg
test
xor
jl
lret
xchg
fisttpll
add
pusha
adc
nop
sub
jbe
mov
in
lods
bound
dec
jp
movsl
push
fnstsw
push
cmp
fyl2xp1
je
mov
popa
out
fdivp
adc
mov
adc
movb
mov
dec
pushf
jl
icebp
push
jl
jbe
ret
shll
pop
mov
ljmp
push
mov
push
inc
jnp
xchg
mov
mov
sbb
push
std
and
jle
mov
lds
cmpsb
mov
fwait
or
xlat
dec
fstpt
and
or
ljmp
enter
nop
lds
adc
or
sub
sub
inc
movsb
idivb
test
cmp
dec
mov
pop
jo
mov
xor
mov
cmp
andb
out
or
push
paddsw
sub
inc
mov
cmp
mov
add
push
fsincos
or
adc
int
add
pop
push
test
mov
stos
dec
mov
add
and
mov
rolb
popf
mov
inc
fdivrs
jmp
or
lods
mov
subl
pop
push
stos
insb
xor
hlt
mov
push
jnp
movsb
roll
mov
mov
movsl
insl
jne
pop
hlt
rclb
or
adc
ror
aas
push
test
mov
cmp
mov
inc
les
imul
add
outsl
test
mov
jp
jp
xchg
sbb
add
push
rclb
shr
add
mov
sub
je
jmp
ret
or
cs
test
push
test
cli
xor
pusha
idivb
add
mov
test
push
mov
push
int3
and
insb
sub
mov
ljmp
cmp
loopne
jbe
cwtl
clc
je
adc
mov
icebp
cmp
jno
push
fisttpll
fimuls
test
jg
inc
xor
xor
incb
dec
aas
or
xlat
arpl
cltd
inc
out
lock
sbb
push
push
or
out
jns
cwtl
add
es
add
or
jmp
sarl
aam
fmull
cmp
outsl
test
lods
scas
jno
subl
pop
out
leave
push
sar
add
inc
imul
cmpsl
add
adc
test
cli
pop
mov
adc
sbb
vorpd
insl
pop
inc
push
xor
jae
xlat
sbb
jg
mov
jno
into
cmp
pop
add
cmp
push
xchg
ror
sub
pop
aad
imul
xchg
ss
mov
scas
addb
fwait
es
inc
test
loopne
cmp
testb
xor
imul
adc
sbb
push
iret
cmpsl
adc
in
shrl
or
rorb
inc
int
sub
or
addr16
mov
sub
nop
pusha
or
mov
aad
xor
mov
sbb
inc
cmp
mov
mov
sub
push
stos
mov
outsb
dec
fdivl
lret
cli
roll
adc
push
imul
jmp
ret
pop
jns
mov
call
inc
xlat
mov
scas
lods
sbb
pop
mov
mov
enter
ljmp
pop
or
pop
imul
jo
sub
sti
aam
pushl
cld
out
sbb
or
adc
mov
scas
mov
andl
sbb
and
icebp
pop
mov
cmp
dec
jmp
xor
pop
cmpsl
test
int
push
jge
add
mov
lock
add
aad
sbb
mov
test
xor
loopne
pop
sbb
adc
lahf
test
mov
lcall
daa
adc
je
dec
loop
loop
add
pop
lock
xchg
or
push
xor
mov
and
mov
mov
fcomps
fistl
push
push
pop
sbb
je
sahf
scas
pop
rcrl
call
outsl
andb
insl
fwait
cmp
pop
lcall
push
push
jmp
fldl
inc
jae
mov
mov
or
cmp
and
jne
pop
fidivl
and
push
iret
loope
pop
loope
inc
aaa
inc
sbb
sub
inc
mov
cli
push
cmpsl
shl
fcmovbe
mov
xchg
adc
ljmp
popl
inc
rcrl
cld
sbb
in
inc
fucomi
roll
aad
fisubs
push
gs
shl
cmp
push
fs
or
es
dec
inc
push
test
push
and
std
xchg
xchg
mov
sub
daa
xor
mov
lods
mov
pop
idivl
mov
jne
ret
dec
roll
and
clc
mov
push
das
adc
adc
inc
sub
ret
into
stos
cwtl
loopne
pop
shr
jno
lcall
cmpsb
cmp
sub
nop
cs
aas
fisubl
push
movsb
inc
fldln2
jo
adc
popf
repz
mov
dec
lret
inc
inc
mov
mov
out
jp
add
in
or
add
rorb
test
push
mov
imul
jb
pop
iret
dec
sbbb
sub
push
adc
fwait
inc
sti
data16
xchg
mov
stos
js,pn
cmp
mov
lcall
mov
in
loop
push
lret
push
js
lret
ret
pusha
inc
ret
inc
sbb
sbb
mov
loopne
or
add
adc
mov
inc
lea
sub
push
movsb
or
sbb
jb
add
cmpsb
inc
mov
mov
add
or
sbb
les
push
xor
stos
pop
popa
sbb
das
add
lret
or
fmul
cmp
cld
stos
sbb
add
inc
lcall
and
fsubs
mov
jmp
xor
inc
aam
cmp
pop
sbb
sub
cmpsb
adc
cltd
dec
push
xchg
mov
lret
fbstp
mov
outsl
mov
ret
push
sbb
shrb
outsl
push
adc
mov
nop
jg
jnp
test
adc
shl
xor
call
aam
decb
jmp
out
sub
sub
fcmovu
sub
js
push
and
lock
jl
insl
imul
test
lods
push
and
fwait
pop
loop
add
mov
sbb
push
frstor
pop
fs
inc
imul
ret
daa
push
insl
sbbl
aam
pop
pop
into
sub
scas
xor
dec
pop
pop
lock
sub
mov
cmp
imul
sub
negb
adc
cli
movl
mov
xchg
loop
loop
adc
adc
lock
aam
pop
adc
inc
adc
cwtl
pop
inc
jnp
mov
scas
cmp
es
xchg
mov
add
and
dec
roll
cmpsb
dec
push
sub
push
cmp
test
popf
inc
out
pop
dec
in
mov
inc
mov
dec
dec
pop
daa
mov
addl
dec
daa
rcrb
enter
test
and
and
test
jmp
push
cmp
addl
sbb
mov
loope
inc
pop
mov
sbb
sahf
add
inc
loop
pop
mov
sub
jg
int
lods
clc
xor
adc
rcrl
jg
sbb
lret
stos
mov
insb
mov
cmpb
jl
push
cmpsl
push
xchg
mov
push
or
mov
in
jb
xor
inc
dec
mov
out
outsb
ret
lock
hlt
add
jmp
jmp
mov
ret
add
xchg
push
dec
fnstcw
xor
push
lock
movsb
mov
stos
andb
ss
lcall
in
sub
jns
js
or
add
rcr
xchg
mov
push
and
shrl
shlb
in
or
push
addb
jl
rolb
push
insl
js
push
repnz
ds
sub
and
das
and
sbb
or
lock
in
aaa
and
or
sbb
push
xor
xchg
sbb
insb
sbb
lahf
lcall
lock
jge
jo
xor
add
imul
sub
adc
bound
ds
fwait
mov
push
movsb
dec
pop
lcall
mov
cld
mov
mov
add
cli
rorl
dec
clc
jbe
inc
inc
or
es
iret
push
push
cmp
mov
mov
or
in
std
adc
mov
addr16
fbld
les
mov
inc
mov
mov
cmp
add
jecxz
pop
jp
push
inc
insb
mov
pop
pop
and
mov
add
xor
pop
jp
mov
sbb
addl
int3
pop
test
idivl
mov
inc
and
lds
cmpsb
imul
push
or
inc
add
push
js
add
ja
test
pop
pop
and
cwtl
lods
popa
les
clc
fimuls
push
lret
mov
enter
dec
mov
int3
xor
call
ss
out
push
mov
cmpsl
push
inc
sbb
ds
pusha
xor
mov
inc
pop
or
mov
or
iret
lahf
mov
cmp
inc
or
xchg
dec
inc
into
mov
xor
cmpsb
push
inc
shll
xchg
fimull
jo
xchg
or
adc
outsb
cmpl
push
xchg
or
cmp
xchg
jp
clc
hlt
mov
pop
mov
xor
aas
sti
bound
mov
pop
sbb
jae
pop
lods
jno
sbb
pop
mov
andb
and
cmp
cmp
pusha
repnz
in
dec
add
add
mov
push
mov
bound
call
js
pop
pop
mov
out
push
dec
inc
xchg
add
pop
jl
loop
clc
mov
cwtl
movntps
mov
pop
cmp
adc
rclb
frndint
mov
xor
pusha
inc
pop
xchg
test
sbb
xchg
xlat
fstpl
cs
ltr
cld
mov
jp
inc
popf
adc
jne
push
pusha
popf
dec
cmpsb
cmp
or
ss
hlt
adcb
hlt
adc
mov
jge
sub
enter
pop
sbb
jmp
movsl
mov
test
nop
xchg
out
pop
sbb
xchg
je
leave
clc
test
hlt
insl
bound
xchg
push
xchg
insb
lds
addr16
mov
pop
cld
xor
call
inc
add
subb
dec
incb
lds
adc
fcmovnbe
jno
push
jl
pusha
and
ror
sbb
sbb
ljmp
xchg
pop
push
or
mov
push
sbb
sbb
hlt
ljmp
ret
adc
and
mov
imul
stos
add
scas
icebp
push
xchg
je
stos
jp
sbb
int3
call
cmp
loop
jmp
mov
repnz
pop
fidivl
test
xchg
push
push
or
clc
jno
shlb
push
xor
xchg
stc
adc
lds
bound
jnp
sti
xor
jnp
mov
test
hlt
mov
push
adc
icebp
shll
out
jbe
lcall
sub
fimull
sbb
jle
xor
enter
jae
ljmp
mov
daa
ret
pop
fucom
stos
shrb
jns
jae
jge
sub
test
push
sbb
xlat
mov
push
xchg
pop
ljmp
insl
jo
xchg
fisubs
xchg
adc
fwait
pop
stos
outsb
or
insl
aas
mov
test
xor
jb
lds
inc
jbe
loop
iret
sbb
stos
mov
fldcw
sbb
push
es
shlb
pop
push
mov
cwtl
pop
rolb
fimuls
cmc
cltd
cmp
int
outsl
aaa
jbe
mov
iret
mov
adc
sbb
icebp
leave
and
cs
push
arpl
push
imul
add
shrb
mov
clc
add
in
push
pop
insl
sti
pop
insb
movsb
call
push
cmpl
sub
in
jmp
push
sub
sub
or
jl
add
repnz
sub
and
das
push
test
pusha
leave
push
hlt
fcmovbe
cmp
imul
jp
movzbl
xchg
cmp
cltd
xchg
je
hlt
test
hlt
adc
pop
pop
loopne
mov
int3
jmp
inc
mov
mov
mov
or
int3
cmpsb
dec
ret
adc
jne
or
fdivrl
adc
dec
mov
rep
clc
xorl
ljmp
push
or
ret
mov
push
pop
and
add
cmp
call
jno
xor
or
shlb
imul
add
xor
dec
shl
ret
cwtl
jge
mov
daa
mov
scas
repnz
and
xor
sub
jle
insl
in
xchg
add
je
xchg
ret
mov
cmp
mov
xor
pop
pop
test
aam
andb
sbb
out
inc
test
inc
sarl
pusha
cmp
mov
mov
pop
popf
jno
or
cmpb
hlt
lea
fisttps
andb
cmp
cltd
sbb
jnp
pop
jbe
inc
fwait
jle
xlat
cmp
dec
xor
mov
adc
clc
daa
mov
loopne
rcrl
dec
pop
test
mov
jnp
pop
jno
popa
lods
mov
mov
or
mov
mov
inc
lea
adcb
sub
insb
test
jbe
out
xchg
pushf
stos
enter
xlat
add
xchg
inc
push
clc
xchg
mov
adcl
bt
rcrl
stc
fistpl
call
mov
adc
cmp
stos
sbb
xchg
jl
and
lods
icebp
popf
test
push
add
test
scas
movsb
cmpsb
fldenv
in
mov
mov
stos
cs
aam
int3
call
gs
cwtl
int3
sbb
xchg
test
mov
dec
add
imul
aas
roll
popa
movl
bound
adc
jo
push
or
push
insb
mov
pop
or
mov
and
or
fcom
mov
sbb
lods
xor
adc
adc
ds
mov
test
add
cmc
mov
arpl
in
sbb
mov
lds
add
push
mov
or
pop
sbb
mov
shlb
ficoml
or
dec
loopne
lcall
addb
mov
xchg
adc
loope
loopne
mov
mull
push
fsubs
mov
mov
imul
push
mov
mov
mov
xchg
int3
adc
or
sub
int
and
or
incb
jecxz
mov
mov
rolb
and
sbb
pop
gs
jne
mov
subl
test
mov
cs
pop
addb
lock
cmp
pop
lods
aaa
or
or
push
mov
movsl
rcrb
xor
xchg
out
cmp
pop
addr16
shrl
mov
xor
pusha
popa
call
pop
cmpsl
lcall
mov
inc
sbb
adc
nop
imul
add
pop
jl
into
fadds
sbb
mov
adc
js
mov
out
int3
out
rorl
fiadds
mov
inc
add
rcrl
jbe
pop
cmpsb
add
pop
sahf
clc
jmp
andl
js
inc
dec
inc
loope
xor
push
loope
popa
shll
sub
test
adc
mov
in
dec
in
dec
inc
dec
lock
outsb
sbb
test
adc
mov
test
sarb
mov
jp
cld
inc
mov
add
das
inc
orl
inc
xlat
fisubs
inc
cmpsl
mov
and
cmp
stc
adcb
fadds
mov
test
lret
jb
pop
cmp
inc
xor
push
add
push
ficomps
pop
fst
jno
add
stos
in
jge
imul
sub
mov
adc
sbb
push
jle
sub
cmp
add
loop
mov
fcom
mov
mov
sub
sahf
nop
mov
mov
jp
outsb
and
add
mov
jecxz
outsb
addr16
xor
or
divb
out
xchg
jl
nop
loopne
add
jp
sub
insb
sub
mov
mov
mov
xor
mov
and
bound
fmul
pop
push
inc
cltd
call
adc
insl
imul
add
pop
ret
daa
mov
or
mov
mov
movsb
sahf
pop
sbb
jae
fld
jg
cmp
fwait
add
das
or
mov
and
inc
or
dec
aad
dec
test
push
cld
cmp
mov
xor
mov
out
ret
mov
dec
divl
push
cmp
outsb
jne
pop
lcall
ljmp
jp
movsb
adc
push
fisubrs
filds
fsts
cmp
in
outsb
add
arpl
cmp
adc
in
pushf
rcll
jb
outsl
sub
inc
jp
or
or
jo
mov
and
cld
sbb
cmc
hlt
hlt
adc
cwtl
daa
icebp
shlb
inc
mov
mov
ret
aam
inc
sbb
push
aaa
or
cmp
dec
insb
pusha
loopne
push
jle
stos
mov
cli
dec
jnp
sub
cld
popf
rcrl
aad
pop
cmp
es
cmc
push
sbb
decb
add
xlat
xchg
pop
and
cmc
jno
jae
pop
enter
sbb
jp
fimull
fsubr
xor
fbld
sbb
or
aas
push
and
fcompl
rolb
rclb
mov
jne
incb
pop
insb
sbb
push
ret
adc
repnz
outsb
dec
or
xor
sti
in
or
adc
mov
inc
stos
repz
dec
xchg
cmp
imul
sbb
mov
inc
xchg
popa
mov
xchg
jo
mov
lea
fdivr
data16
js
dec
outsb
push
std
push
adc
cltd
pushf
enter
or
mov
sahf
sub
je
call
adc
xor
ljmp
pop
add
shld
add
movd
test
pop
imul
pop
mov
and
shrb
xor
rorb
daa
stos
jmp
je
mov
or
nop
sub
sbb
or
dec
add
mov
es
inc
gs
les
xchg
aam
push
scas
jne
xor
and
jo
insl
sbb
cld
icebp
rorb
rol
pop
adc
ret
aas
sbb
jmp
mov
mov
loope
xor
rorb
sbb
fs
std
and
out
insb
lcall
dec
fprem1
fsubrl
ret
dec
nop
shrb
repz
push
imul
xor
pop
xchg
cmp
push
mov
cmp
xchg
adc
xchg
mov
xchg
sbb
jb
add
outsl
mov
or
addb
lret
push
push
push
sub
push
cmp
pop
push
call
lock
pop
fbld
outsl
ficompl
incl
dec
loopne
xchg
pop
sub
xor
inc
and
fwait
jl
adc
inc
sti
inc
jmp
hlt
jbe
movsb
into
and
mov
sub
sbb
push
or
andb
xchg
mov
shlb
adcb
fisubrl
inc
mov
cmp
int3
popa
inc
pop
jbe
or
cmp
inc
mov
mov
adc
movsb
push
push
xor
adcb
test
cmp
adc
xor
inc
xor
pop
adc
pop
test
repz
out
jecxz
dec
sbb
cmp
les
mov
int3
and
testb
fs
cwtl
push
jp
pop
xchg
and
andb
cmpsl
push
pushf
divl
and
add
int3
dec
cmpb
lahf
lods
push
mov
ret
dec
cwtl
std
push
pop
pusha
les
jbe
imul
push
push
push
xor
jb
push
or
insb
nop
aas
dec
popa
and
push
jge
sbb
inc
mov
sub
mov
cmpsb
sub
sbb
jnp
ss
sbb
pop
stos
sbb
dec
adc
pop
incl
hlt
rolb
sbb
cld
movsb
sub
xor
cmpsl
mov
sbb
rorl
mov
cmp
xchg
dec
sub
push
pop
inc
xor
or
inc
repz
sub
push
dec
xchg
xchg
test
inc
cli
lahf
mov
add
push
lods
adc
adc
pop
push
inc
sub
mov
or
pop
push
subb
hlt
or
ds
sbb
mov
movsb
pop
movl
mov
jae
pop
je
push
orl
dec
sarb
outsb
and
andl
std
das
mov
cmp
pop
mov
mov
hlt
jb
jle
sbb
clc
movsb
sbb
dec
push
ret
ror
and
shl
pop
lret
cmp
sub
mov
jmp
mov
push
fimull
inc
ss
je
xor
and
inc
pop
insb
xchg
js
pusha
push
mov
leave
adcl
cld
aam
cvttps2pi
fsubrl
dec
mov
xchg
xchg
mov
push
sub
hlt
das
cmpb
or
fs
popf
loope
stos
or
ds
fwait
jbe
vlddqu
inc
mov
stc
mov
inc
jmp
repnz
decb
mov
ds
xchg
in
lock
push
sub
jecxz
aas
stc
loopne
jg
ljmp
cmpl
lods
jmp
stos
aas
xor
pop
dec
dec
push
push
int
jg
arpl
add
cwtl
fistps
sub
sbb
jge
insl
and
std
add
inc
cwtl
pop
clc
lock
jae,pt
hlt
in
xchg
lea
arpl
das
mov
xchg
cwtl
aam
ljmp
add
nop
xor
clc
fsub
cmpsb
cmp
cmpsl
add
push
or
loopne
or
out
jge
mov
mov
push
aam
adc
push
insb
cmp
adc
arpl
xchg
mov
ds
push
loope
decl
and
inc
cmp
add
inc
adc
dec
dec
sbb
push
push
pop
dec
sub
lcall
lds
arpl
or
push
mov
popa
rolb
cmp
add
pop
es
cli
add
andb
mov
push
ret
xchg
and
add
ret
add
dec
cmp
xorl
push
dec
ret
in
or
ss
add
insl
push
add
mov
cmp
adc
pop
xor
push
add
cmp
inc
or
shlb
push
adc
and
rcrl
sbb
adcb
lret
xchg
movb
dec
out
xor
cmp
aam
dec
roll
lods
adc
fdivl
dec
ret
adc
pushf
push
pop
lcall
mov
inc
ficompl
push
cmp
repnz
mov
push
aaa
push
ret
add
subb
and
fs
dec
pop
pop
popa
mov
stos
pop
gs
data16
aas
jns
inc
addl
or
jg
push
lods
outsb
test
inc
insb
cmpb
inc
in
shr
gs
cmp
jle
cld
dec
fsubs
jl
hlt
mov
or
push
aam
lcall
xchg
inc
inc
push
cmp
pushf
mov
call
inc
mov
xor
pusha
inc
or
add
jle
aad
inc
fcoms
fs
mov
xchg
mov
inc
pop
out
aaa
repnz
rcrb
sub
es
pop
add
lahf
loop
or
jne
scas
xchg
test
mov
pop
loope
fistpll
lds
sahf
pop
lods
mov
pop
scas
pop
bound
sub
push
sub
pop
popa
shr
cltd
mov
in
jmp
jge
popa
fmuls
or
cwtl
fs
test
call
dec
sahf
push
mov
or
leave
push
popa
addr16
mov
dec
stos
or
or
fcomi
test
add
ror
scas
mov
lcall
pop
subl
jbe
divl
mov
fstl
ret
pusha
nop
dec
or
cli
xor
pop
add
dec
push
clc
xchg
ja,pt
fwait
dec
or
xchg
jno
xchg
and
push
xchg
cmp
add
fnstenv
ss
jne
jnp
add
or
inc
sub
mov
in
movsl
add
inc
mov
andl
mov
je
in
psrld
xchg
mov
sarb
scas
sub
testb
push
ffreep
imul
push
mov
insb
xor
mov
rclb
jbe
sbb
and
push
mov
xchg
xor
mov
mov
lock
push
fwait
inc
ds
ds
inc
adc
adc
xchg
jnp
mov
dec
imul
pop
loop
xchg
push
push
das
dec
cltd
jp
push
inc
mov
gs
mov
arpl
fsts
mov
insb
or
pop
xchg
dec
adc
inc
insb
rol
dec
sub
xorl
mov
jecxz
sahf
addl
je
stos
adc
sub
cmp
fdivrp
aam
sbbb
sbb
lock
sub
sub
mov
enter
clc
mov
cli
idivb
lea
mov
fnsave
mov
sbb
cwtl
add
mov
test
adc
fisubl
subl
sub
add
push
sarl
bound
aad
cwtl
push
jns
sbb
popf
jnp
fdivrs
stos
loop
ds
adc
and
out
cmp
jo
push
sbb
rcrb
pop
mov
fwait
mov
rclb
je
hlt
jmp
mul
adc
or
cmpsl
or
jp
lea
pop
rolb
dec
pushf
jl
bnd
cmpsl
push
jno
lods
push
lcall
or
andb
outsl
adc
jg
mov
mov
push
clc
inc
cld
jo
mov
mov
or
xchg
or
ds
fisubs
adc
mov
sub
lods
out
fidivrl
sbb
mov
iret
push
in
jbe
xor
push
and
or
mov
sbb
mov
pop
int3
mov
cmp
push
pop
jp
movsl
jmp
fndisi(8087
cs
cmp
add
dec
push
mov
adc
lds
fwait
std
inc
push
aaa
mov
shlb
mov
int
loop
adc
sbb
jecxz
mov
es
sbb
cmpsb
testb
or
push
fadd
roll
fs
cmpsb
dec
mov
daa
mov
push
mov
push
mov
test
mov
shrb
pop
mov
dec
adc
loop
arpl
mov
ds
fdivrs
std
adc
jle
sub
out
cld
scas
adc
aas
leave
cmp
int
dec
or
sub
mov
cmp
enter
aas
cmp
xchg
js
je
popa
aad
sub
mov
sub
push
cmp
push
xor
jl
fldl
loope
out
shlb
loopne
push
xor
pushl
out
xor
fmuls
or
push
clc
mov
loopne
out
sub
pop
mov
push
roll
mov
fidivs
inc
adc
adc
incb
adc
jne
push
sub
mov
or
add
inc
or
mov
andl
mov
adc
mov
dec
outsb
adc
dec
sbb
add
pop
bound
adcl
xor
jmp
or
mov
das
jo
push
lret
addr16
inc
cmp
xlat
stos
pop
loop
jo
push
mov
xchg
ljmp
pop
inc
push
inc
aam
xchg
xchg
cmpsb
in
dec
adc
xor
mov
sbb
ss
xor
stc
lcall
or
and
mov
out
jmp
sub
xchg
cmc
add
sti
inc
and
xabort
fwait
pusha
cld
jae
mov
dec
add
mov
outsl
mov
mov
out
test
test
pop
outsl
fcmovnb
and
and
and
cmpb
dec
sbbb
shll
mov
and
xchg
or
jnp
add
mov
jnp
push
inc
push
and
sub
mov
cli
xor
imul
inc
add
and
popf
aad
push
mov
push
jecxz
sbb
inc
insl
lcall
add
pop
jecxz
fs
clc
imul
pushf
pop
repnz
sub
push
dec
xchg
pop
jge
sub
mov
mov
sbb
stos
inc
stos
jp
cmp
push
inc
lds
jae
rolb
lock
cmp
mov
add
rolb
and
not
xchg
mov
xor
sbbb
clc
into
or
sub
loope
repz
jnp
loopne
loopne
or
fimuls
movsb
xchg
jbe
loopne
jns
mov
cmc
cmc
hlt
roll
xor
jmp
bound
repz
test
and
mov
sbb
lods
fadds
shl
and
mull
ret
vorps
aas
in
repnz
lret
fsts
lret
arpl
xorb
lea
daa
xor
sub
mov
arpl
jp
sub
add
pop
mov
pop
pop
aam
or
cmp
sbb
lds
sub
rol
lea
dec
sub
pop
out
cli
jle
aam
pop
in
add
adc
pop
pop
insb
and
inc
mov
mov
pop
in
rcll
mov
xchg
loop
inc
test
add
data16
inc
jecxz
lods
scas
mov
es
add
loopne
ret
cmp
adc
add
xlat
callw
mov
xor
pop
jl
pop
lcall
inc
out
jl
lods
stc
imul
or
pop
or
add
inc
dec
sbb
mov
mov
into
xchg
jno
push
pop
push
into
std
hlt
mov
push
rcrl
movsl
push
mov
dec
jmp
cmp
xor
xor
je
inc
ljmp
aad
leave
nop
pop
push
sbb
jo
lods
cs
and
add
pop
test
filds
out
push
xchg
sbb
add
sub
idivb
cmp
lcall
pop
pop
loope
lods
loope
cmp
push
jnp
pop
fisttpl
ret
scas
rolb
popa
xchg
jae
aas
jnp
add
jl
pop
inc
lcall
loope
mov
xor
mov
clc
dec
sbb
or
adc
mov
mov
mov
inc
stc
lods
xor
push
icebp
js
scas
inc
shrl
cld
movsl
pop
add
popa
jmp
imul
test
mul
cs
mov
mov
pop
add
jns
andb
mov
mov
xchg
daa
jp
mov
sub
mov
int3
cmc
pop
fwait
mov
mov
inc
loop
lods
sub
movb
push
test
jecxz
dec
cmpl
subb
call
xorl
das
sub
push
aas
add
xchg
bound
in
pusha
mov
sbb
mov
mov
pop
loop
jle
mov
shl
aad
in
enter
push
push
insl
add
outsb
and
daa
imul
bound
mov
lods
les
lcall
pusha
jl
mov
test
mov
push
rcrl
lock
mov
or
insl
mov
test
push
fnsave
jnp,pn
sub
adc
cmpsb
push
push
sub
push
add
das
push
shrl
jne
cs
test
lret
cmc
pop
dec
push
fwait
jno
scas
dec
sbb
or
jmp
cmp
int3
adcl
or
imul
mov
mov
fisubrs
xchg
mov
mov
sti
mov
ljmp
rcll
movsb
inc
pop
loopne
mov
sqrtps
outsb
xor
ds
pop
and
push
mov
xchg
cmpsl
in
sub
hlt
jecxz
les
add
and
mov
dec
fadds
aam
or
ss
and
jno
lock
pop
ja
and
out
addr16
lock
lock
jmp
int
jge
arpl
dec
jmp
push
shrb
lods
roll
nop
mov
shrl
mov
mov
pop
add
in
inc
lea
clc
push
mov
data16
pop
cmp
daa
cltd
inc
push
add
icebp
out
test
mov
adc
mov
loope
sbb
mov
testb
fdivrp
clc
in
inc
ss
jne
jno
cltd
les
xor
or
mov
jle
push
and
or
icebp
ds
call
mov
jg
icebp
mov
add
mov
cli
addps
mov
aaa
inc
test
aaa
ror
push
sahf
or
mov
pop
cmp
movsb
stos
imul
mov
inc
test
xchg
sti
in
fnstenv
or
loopne
fsubrs
sub
repz
mov
jle
cmp
xor
sarb
push
adc
aam
test
bound
push
loop
rcr
push
dec
ret
cmp
test
cs
fdivs
mov
shrb
arpl
mov
push
jge
sbb
jp
scas
mov
popf
xchg
bound
mov
aad
mov
push
movsl
jb
shlb
mov
push
repz
adc
cs
xor
fcompp
dec
sub
push
hlt
leave
mov
jmp
je
mov
mov
and
push
outsl
ja
je
add
cmp
outsb
ret
mov
add
out
pop
dec
push
fdivr
pop
jecxz
pop
addb
bnd
mov
lods
cs
ljmp
fisubs
mov
add
pop
push
mov
jne
or
adc
adc
into
std
outsb
hlt
xor
dec
push
arpl
adc
test
adc
and
es
add
rclb
mov
sbb
push
sub
pop
sub
in
pop
lods
ss
xchg
sbb
push
add
pop
ret
sub
cmp
mov
cli
mov
xchg
cli
push
pop
xor
lcall
mov
or
out
mov
ds
push
jp
mov
pop
mov
pop
cmp
and
enter
lods
mov
xlat
mov
hlt
add
and
cmp
aad
push
imul
mov
mov
add
pop
add
loopne
pop
push
loope
lods
test
push
pop
xor
ret
js
inc
lahf
fisttps
jp
lods
cmp
dec
mov
test
outsl
ljmp
test
repnz
mov
jl
popf
movsl
imul
sub
data16
std
cmp
stc
mov
xor
add
jle
mov
mov
sub
dec
dec
and
pop
inc
mov
ss
cwtl
mov
mov
or
jmp
ret
add
push
cltd
adc
gs
pop
push
and
sbb
xor
dec
loopne
push
fdivl
adc
pop
aam
sbb
aad
fwait
es
and
xor
insb
sti
icebp
addl
lods
pop
adc
js
aas
mov
pop
test
add
arpl
outsb
sbb
xchg
cli
jb
or
addb
push
inc
es
push
inc
add
push
aam
cli
fsubrs
xor
inc
sub
adc
clc
add
mov
mov
out
cmc
cmp
icebp
mov
sub
sti
vmread
mov
mov
adc
ds
xor
mov
insl
push
pop
sub
mov
jg
arpl
jae
push
fs
les
cs
inc
jg
mov
push
fmul
mov
mov
xchg
je
cmc
mov
mov
cmp
add
xchg
std
pop
sub
cltd
jecxz
push
fisubl
sbb
xchg
push
mov
mov
jle
push
mov
push
mov
pop
push
mov
fs
ret
dec
stos
loop
mov
or
jno
stos
fisubl
popa
add
dec
mov
sbbb
push
lock
sub
subb
jbe
inc
mov
cmp
rcrl
cld
orb
xchg
sub
je
popf
mov
push
loopne
les
mov
test
inc
leavew
jns
cmp
adc
call
pop
or
and
mov
dec
pop
adc
enter
or
pop
mov
out
pop
pop
icebp
jmp
ret
mov
mov
dec
lahf
and
fmuls
xchg
pop
sbb
pop
push
insb
call
dec
or
push
mov
push
dec
push
sti
xchg
lock
cmp
xor
and
xor
dec
jl
repnz
inc
mov
push
and
cli
mov
push
das
sahf
pop
cld
test
stos
cmpsb
aas
or
jl
loop
rorb
faddp
pop
stos
dec
xor
mov
push
aaa
stos
jle
loopne
pusha
xchg
nop
or
cld
sbb
cli
jbe
and
js
call
add
mov
scas
insl
mov
lcall
shlb
mov
addr16
shlb
dec
adc
pop
mov
add
in
pop
sub
pushf
jmp
movsb
add
dec
mov
pop
icebp
xchg
cmpsb
pop
sbb
fdivs
add
push
mov
test
sbb
ja
testl
mov
fs
lock
jmp
adcb
adc
loopne
paddusw
cmc
or
xchg
mov
and
or
sbb
ret
bound
sbb
nop
test
loope
fiaddl
cwtl
mov
adc
pusha
stos
dec
jno
jne
jb
sar
push
jmp
mov
mov
aaa
in
addr16
push
xlat
rol
rcl
insb
mov
adc
in
inc
mov
insl
mov
add
testl
lds
inc
or
jmp
sub
shrl
pop
cmp
adc
jne
test
pop
mov
orl
fcmovnb
mov
xor
add
xchg
cld
xchg
mov
sahf
adc
lcall
cli
dec
andb
in
icebp
in
outsl
jae
mov
and
repnz
mov
mov
cmp
inc
or
sbb
test
mov
mov
cmp
mov
popf
or
sub
jp
dec
aad
stos
int
lcall
jmp
lcall
les
fs
pop
push
lock
in
data16
jb
loope
mov
inc
lock
out
adc
pop
into
inc
jnp
mov
out
sahf
xchg
sub
data16
mov
data16
sub
in
push
in
cwtl
test
mov
xor
enter
aas
xchg
push
or
sub
int3
iret
dec
fcom
jne
push
dec
ret
movsb
push
ret
inc
stos
lds
jne
add
lret
sbb
push
mov
pop
mov
cmp
adc
mov
lret
mov
ds
sahf
push
cs
movsl
lahf
sbb
lods
lds
or
cmp
cmp
mov
add
ja
cwtl
pop
lret
add
pop
leave
pop
cmp
sahf
cltd
insl
in
loope
lret
mov
sbbb
imul
cld
lcall
dec
std
mov
dec
push
or
daa
fldl
push
jecxz
xchg
addb
or
adc
push
push
pusha
pop
inc
lea
pop
hlt
push
mov
sub
inc
insl
inc
out
shl
sbb
xor
cmp
cmpsb
int3
fcmovne
je
fcmovnbe
stos
sahf
jecxz
push
push
cmp
out
test
xchg
ss
inc
cmp
cld
jp
fimull
add
or
push
xor
mov
mov
push
and
inc
pop
sbb
sub
outsb
mov
sahf
xorl
je
ret
ret
add
xor
ds
push
rolb
xchg
xor
nop
inc
or
xchg
and
pop
pop
icebp
into
pop
mov
and
mov
or
shl
add
scas
sbb
xchg
enter
xchg
jge
js
xlat
xor
loopne,pt
xchg
out
push
inc
push
and
xchg
sub
mov
xor
pop
sti
sub
push
and
add
mov
enter
or
ljmp
shl
xchg
xchg
cli
sbb
leave
aas
xor
paddb
test
xor
rcr
or
test
inc
cmc
xlat
mov
sarl
or
or
cmpsl
mov
call
outsb
loop
cwtl
push
add
addr16
sbb
pushf
mov
sub
lods
pusha
inc
and
out
fisttpl
mov
sbbb
sub
add
sbb
add
in
sub
dec
pushf
outsl
or
jge
insl
mov
cli
imul
dec
lahf
push
xchg
inc
add
mov
mov
and
fisttpll
js
fstpt
pushf
aam
cmp
sbb
out
sub
mov
xlat
or
push
inc
es
loopne
add
cs
pop
shlb
push
popa
cmp
out
push
fwait
pop
mov
out
or
adc
xor
cli
mov
fisubs
add
fisttps
fldt
pop
dec
aas
sbb
jbe
push
sti
add
sub
loope
cmp
mov
jb
out
mov
loop
in
test
pop
int3
aad
sub
xor
xor
jmp
sarb
mov
into
lock
and
dec
mov
test
jb
fiadds
shlb
cli
enter
std
pop
andb
aam
xchg
xchg
je
ds
mov
mov
scas
ftst
mov
add
imul
push
inc
jmp
mov
mov
jecxz
cwtl
ret
inc
push
sub
enter
jo
nop
xor
iret
test
mov
cmc
mov
mov
pushf
lcall
xchg
les
aad
and
inc
outsl
das
cli
ret
idivb
or
imul
sbb
cmc
lock
imul
pop
sbb
mov
scas
push
fists
jbe
mov
popa
test
sub
jno
test
xchg
push
inc
out
loope
dec
icebp
pop
xchg
sbb
ret
cmp
sub
scas
mov
adc
pop
jmp
jb
insl
roll
pop
mov
add
cmp
hlt
ret
sub
sbb
std
outsw
cmp
sbb
jb
test
rorb
dec
insb
shll
pusha
mov
clc
movsb
and
fsubl
jmp
sbb
rcl
mov
add
and
sbb
sbb
std
pop
jp
jo
add
mov
shrl
xor
mov
dec
scas
inc
xor
dec
lock
lcall
xor
ss
adc
cmp
cwtl
sbb
mov
add
mov
call
addb
sbb
mov
rclb
mov
test
loope
jecxz
pop
adc
dec
or
sbb
imul
cmp
cmpsb
scas
and
mov
pop
pop
test
sarl
flds
shll
in
inc
xchg
rorl
shl
aam
and
rolb
pushf
xchg
sbb
js
jb
add
insl
pop
in
push
add
fdivp
jno
mov
and
loop
jo
push
mov
sbb
arpl
dec
inc
bound
cli
idivl
sbb
out
push
daa
mov
addr16
fstpt
add
insb
or
pop
out
sbb
lock
adc
test
lret
push
int
add
fisubl
arpl
mov
inc
push
push
xor
jge
or
pop
jl
in
xchg
jns
or
push
fwait
push
mov
sub
cmp
cs
mov
or
jo
dec
dec
mov
movb
mov
stc
mov
mov
ret
mov
ret
mov
push
inc
lret
insb
je
mov
lods
add
sbb
cmpsb
mov
mov
push
xchg
aad
mov
sbb
ret
jg
jae
in
cmpsb
push
add
aam
into
and
aam
popa
dec
add
or
cmpsl
push
jno
ret
fimull
jno
or
nop
mov
stc
sbb
subb
ljmp
mov
mov
sarb
cmp
mov
mov
ljmp
cltd
scas
insb
out
pushf
fidivrs
xor
mov
xorb
sbb
pushf
mov
movsl
fdivrl
mov
lds
arpl
loop
mov
insl
jge
jp
mov
je
mov
xchg
mov
or
test
xchg
adc
js
mov
push
dec
insb
push
add
inc
sbb
je
loopne
into
dec
js
mov
sahf
jle
pop
sbb
adc
rorl
mov
sub
add
and
xchg
loope
sbb
cmp
xchg
iret
hlt
inc
pushf
test
pop
pop
scas
xchg
jp
rcl
inc
push
mov
push
sbb
sub
xchg
lds
adc
jp
add
and
inc
sbb
cmp
nop
inc
pop
lods
mov
jno
lcall
flds
xchg
add
sub
mov
add
mov
jb
int3
pop
or
jo
dec
ja
rcrl
cmpsl
mov
or
sbb
inc
jl,pn
adc
jbe
dec
fnop
arpl
mov
mov
push
test
xor
inc
push
es
pusha
pop
imul
mov
inc
outsb
lret
dec
xchg
mov
iret
scas
cs
test
js
pop
das
cmpsl
inc
mov
insb
mov
inc
inc
test
call
aam
inc
rorb
loopne
ret
scas
iret
push
sub
push
sub
scas
aam
jecxz
mov
add
or
fcoml
sti
rcrb
push
jp
mov
repnz
xor
rcrb
push
in
test
jne
movsb
mov
rorl
call
clc
xchg
xor
mov
cs
out
loop
lcall
dec
lock
pusha
ret
push
adcl
ret
inc
fstpt
pusha
pop
inc
adc
test
add
repz
push
push
dec
imul
sarb
add
idivl
adc
mov
insl
push
in
sbb
imul
outsl
arpl
outsb
add
or
insb
adc
cld
int3
insb
jbe
enterw
mov
adc
fidivrl
mov
sbb
out
dec
xor
cwtl
pop
subb
inc
scas
xchg
jbe
xor
or
outsl
push
mov
push
inc
xor
jle
sub
push
add
outsl
insb
jo
scas
lahf
rcrl
inc
adc
ja
pop
lea
cmp
sbb
inc
ljmp
sbb
lret
mov
shll
add
cs
repnz
mov
aaa
jno
loopne
sbb
test
les
jae
mov
bound
or
xchg
dec
xor
mov
std
cli
push
push
inc
mov
sub
gs
test
pop
jne
sub
mov
pop
jno
fistps
push
push
rorb
jecxz
mov
rcrb
jo
xchg
pop
mov
xchg
mov
push
lds
movsl
lret
orb
and
adc
push
sbb
pop
js
jnp
push
xor
jo
inc
xor
pop
pushf
sbb
es
push
ds
outsb
mov
in
push
shr
aaa
gs
pop
jno
sub
hlt
mov
sub
fmuls
xchg
rorb
mov
inc
stos
das
cmp
inc
push
jns
push
cmp
test
jno
and
jmp
adc
scas
test
push
ljmp
or
and
fcmovnbe
shr
inc
push
jnp
ficompl
add
movl
fstps
call
pusha
cmp
mov
pop
sub
out
insl
addl
insb
push
aam
or
cld
imul
or
cmpsb
mov
cmc
scas
mov
out
mov
cltd
jle
dec
push
js
aam
fwait
dec
pusha
mull
cmpsb
rcrb
dec
mov
rclb
cmpsl
sti
push
int
or
and
mov
and
inc
or
sub
jmp
pushf
hlt
sbb
inc
ljmp
test
sbb
lea
xor
add
sub
enter
cmpsb
aad
or
xchg
or
sub
lret
xor
arpl
mov
mov
mov
jb
daa
pop
movsb
mov
inc
aad
icebp
insl
js
insl
loope
and
int3
push
movsl
aaa
cmp
adc
xchg
inc
xorl
rcl
mov
pusha
shl
jle
mov
fnstsw
insl
clc
popf
ljmp
sbb
aaa
add
call
lods
push
dec
mov
je
test
sbb
cmp
movsl
or
dec
push
push
cmp
lcall
insl
iret
cmp
mov
xchg
sbb
xchg
testb
xchg
and
inc
stc
sub
mov
xchg
and
push
sbb
orb
adc
cmp
scas
lock
imul
cli
int
mov
pop
insl
mov
cli
cmp
pusha
cld
in
add
shll
push
fsts
ljmp
inc
popf
and
or
mov
or
fsubl
sub
dec
subl
xchg
lock
je
or
dec
jnp
repz
scas
xchg
add
lahf
add
insl
mov
pop
dec
mov
mov
rolb
ja
mov
mov
xchg
and
mov
push
sbb
int
add
cli
into
adc
lock
mov
dec
repz
aas
lcall
mov
pop
rcll
lea
dec
adc
aaa
adc
ds
pop
adc
mov
cwtl
dec
out
jl
rcrb
lods
daa
push
fucomi
add
pop
and
fistpl
cs
cwtl
or
cli
nop
daa
cmp
mov
inc
in
or
loopne
lock
je
sbbb
push
cld
jmp
test
mov
pop
std
pop
push
pop
jb
push
cmpsl
pushf
and
popf
mov
jae
mov
mov
lea
mov
das
sbb
mov
xlat
push
scas
pusha
jecxz
outsb
repz
or
dec
mov
adc
inc
cs
mov
lret
push
dec
cmp
jo
sbb
adc
cmp
add
inc
repnz
fs
add
imul
add
test
or
movsb
cmp
or
pop
imul
inc
push
mov
mov
sar
pusha
cs
scas
sub
dec
jne
fdivl
shlb
push
add
xor
inc
clc
jmp
mov
es
call
lock
sbbl
je
add
xchg
jecxz
inc
pop
sbb
popf
inc
loope
insl
aad
pop
mov
mov
xchg
push
and
push
pop
or
std
mov
adc
and
fbld
insl
sub
push
lcall
mov
lods
push
rcl
mov
pushf
pop
sub
pop
or
mov
inc
enter
and
insl
xchg
and
js
cmp
fwait
into
test
mov
fiaddl
jbe
test
xchg
popa
mov
inc
inc
and
add
scas
xor
mov
rcl
jno
in
or
outsb
ficompl
das
push
jge
ret
ja
jbe
mov
add
dec
fldcw
mov
call
cs
sti
dec
mov
mov
adc
int
mov
jecxz
arpl
clc
test
dec
jle
data16
sbb
add
fmuls
lret
dec
xchg
int3
add
in
ret
nop
inc
adc
mov
ja
sbb
js
mov
mov
xor
dec
xchg
jo
ss
loope
fbstp
adc
shll
dec
jg
jmp
cmpsb
and
xchg
pop
or
cmp
fcoml
lahf
das
sbb
xchg
fcmovbe
pop
or
int3
pop
or
rolb
xchg
arpl
push
fimull
pusha
add
lods
xor
sbb
call
shl
inc
addr16
cmp
inc
or
xchg
cwtl
jno
fcoml
mov
mov
mov
xchg
mov
push
mov
ss
fistl
adc
pop
cmp
call
mov
test
mov
in
and
daa
cmp
int
push
and
aad
mov
mov
mov
adc
lcall
add
push
lret
fwait
add
dec
mov
sbb
pusha
sub
rolb
mov
lock
adc
lret
mov
push
out
xor
nop
cmp
inc
sbbb
mov
adc
in
test
cmc
pop
lock
xor
add
aam
pop
sarl
mov
jg
sbb
int
sbb
ljmp
mov
xor
decl
mov
jbe
les
jnp
push
xor
popa
pop
outsl
je
in
imul
cmp
popa
in
push
lahf
mov
pop
ja
shl
sub
pop
sbb
pushf
clc
les
mov
mov
add
aaa
push
xor
pop
fcoml
sbb
roll
jbe
add
insb
xor
notl
sarl
push
xchg
cmp
aad
cmp
jle
pop
decl
pop
lcall
cmp
pop
dec
sub
jb
cmpsb
lods
lcall
and
test
jns
push
pusha
leave
and
push
mov
mov
jne
and
jg
or
popa
sbb
push
sbbb
mov
mov
add
lds
push
cmp
jle
ljmp
imul
adc
xchg
popf
or
scas
xchg
jecxz
cmc
stos
sahf
nop
aaa
test
stos
test
inc
sbb
andb
pusha
xlat
dec
inc
adc
jnp
orl
sub
ljmp
jecxz
icebp
or
jbe
jl
sbb
dec
fdivl
add
xchg
jbe
jns
ljmp
js
mov
mov
fnsave
sbb
dec
xor
imul
add
int3
in
push
sub
loopne
xor
mov
test
cmpsb
sbb
scas
popf
ljmp
mov
lret
and
mov
aam
and
sahf
cld
sub
mov
mov
mulb
or
add
cmp
cmp
jmp
ljmp
push
out
inc
loopne
xor
dec
jl
lock
loop
addl
fbld
pop
in
xchg
push
mov
aam
pusha
sub
jne
shlb
test
std
lret
jnp
subb
imul
jb
lret
int3
and
mov
mov
mov
bound
into
add
stos
mov
inc
jp
adc
test
popl
push
fmul
into
bound
inc
je
cwtl
add
mov
mov
push
loope
adc
ds
test
lcall
dec
cwtl
push
pusha
aaa
mov
andb
add
jno
push
mov
push
loop
daa
inc
out
movb
js
mov
cwtl
les
adc
jae
jns
fcmovbe
aam
sub
js
ljmp
xor
push
mov
dec
aaa
inc
dec
jl
lock
add
rorb
add
scas
pop
insl
and
fsubrs
call
inc
mov
arpl
xor
rorl
or
shlb
mov
jle
adc
sbb
int
push
int3
sub
inc
pop
clc
jbe
sti
pop
ss
jmp
mov
inc
xchg
out
enter
lret
xchg
outsb
ds
insb
call
and
jmp
or
dec
sbb
clc
push
jmp
fisttpll
xchg
rclb
js
movsb
lcall
mov
rol
es
jo
das
push
or
dec
inc
cld
jno
or
loope
and
pop
lea
xadd
movl
xor
andl
jmp
sbb
adc
add
adc
pushf
adc
scas
xlat
fdivl
mull
push
sarb
enter
dec
and
pop
xlat
push
dec
in
push
jl
bound
push
and
negb
add
mov
sub
andb
or
push
mov
lret
cmp
cmp
xor
sti
dec
inc
dec
pop
mov
mov
cld
out
sbb
fstl
repnz
push
xor
mov
pop
sti
push
lea
bound
sbb
jecxz
lcall
stos
mov
mov
xchg
out
shr
fs
movsl
adc
adcl
cmp
xchg
jo
dec
imul
push
mov
fs
clc
cmp
push
fsubrs
int3
aam
xlat
sahf
or
and
stos
stos
scas
mov
and
enter
scas
movsb
scas
pop
fs
cli
jne
mov
bound
mov
pop
pop
aam
hlt
stos
lods
cmpsb
or
or
and
pop
sub
ds
xchg
mov
xor
cmp
in
shl
inc
das
jl
dec
ds
sub
movsl
mov
jl
shlb
jno
pop
dec
add
stos
sbb
out
fiaddl
inc
test
add
mov
xor
sbb
test
push
lcall
cmp
and
shlb
push
pop
mov
rorb
mov
cmp
jo
mov
pop
lret
mov
loop
inc
sub
shl
jmp
add
adc
subb
call
stc
add
out
or
mov
or
in
dec
mov
inc
mov
rcl
mov
push
mov
pushf
sti
add
pop
fst
add
push
call
sbb
clc
loopne
jb
cmp
rcll
movb
cmp
add
xor
xchg
jle
or
mov
lock
sarl
push
std
movd
stos
xchg
xchg
add
mov
movsl
jecxz
jl
es
pusha
out
pop
test
xor
xor
and
xchg
js
adc
cmpsb
sub
mov
repnz
in
inc
test
jp
sbb
scas
mov
nop
pop
and
sbb
dec
loop
rorb
je
sbb
jbe
ret
or
ficoms
ret
popa
mov
add
in
adc
push
sbb
or
iret
mov
sub
bound
rclb
push
insl
xchg
mov
mov
fcoms
sbbb
movb
outsl
jo
pop
sbb
shl
xchg
adcb
bound
ds
cmpsb
mov
jb
jno
orb
jg
cmp
jge
insb
dec
mov
arpl
add
mov
pushf
jl
xor
jne
add
mov
js
mov
testb
lahf
mov
mov
inc
push
repz
inc
xchg
push
sbb
mov
int3
push
adcb
leave
add
mov
cmc
pop
scas
sbb
jno
das
and
jbe
movsl
push
call
aam
dec
mov
push
xchg
scas
push
stos
push
lret
sbb
push
xchg
pop
ja
add
cmc
push
test
pop
dec
xchg
push
and
push
xlat
xor
test
add
xor
outsl
xchg
sub
mov
cmp
aas
es
inc
add
xor
pusha
xchg
mov
mov
rolb
dec
xchg
js
push
inc
adc
das
mov
fcomip
or
mov
lods
sub
mov
clc
das
mov
add
xchg
mov
in
clc
jo
cli
inc
cmp
inc
dec
stos
fimuls
sub
add
mov
dec
xchg
enter
test
pushf
movsb
or
mov
mov
js
mov
mov
insl
adc
fdivr
cmp
jp
push
jnp
add
mov
xor
js
enter
scas
pop
in
adc
jle
scas
cmp
cmc
add
jae
imul
xlat
shrl
sbbb
add
push
movsb
push
mov
negb
test
repnz
cld
push
nop
xchg
loope
pushl
orb
popa
and
lcall
inc
rorb
inc
jo
dec
mov
sub
test
cmp
push
clc
push
pop
jae
lcall
jne
test
push
popf
xchg
mov
mov
inc
jb
xchg
jle
or
mov
inc
push
mov
jmp
adc
push
test
sbb
leave
ds
cmpsb
arpl
mov
inc
pop
insl
and
cli
pop
jl
ds
lds
cmp
push
fisubrl
icebp
call
out
js
add
sub
add
adc
loope
mov
mov
push
push
add
ljmp
adc
neg
std
iret
dec
inc
pop
mov
sub
loopne
push
cmpsl
sub
test
scas
scas
jne
add
xor
andb
add
sub
fsts
cmp
cmp
ja
xchg
pop
sti
pop
adc
sbb
lret
ret
fcom
xchg
push
inc
sub
mov
xor
dec
ja
push
aam
dec
bound
fadds
daa
xchg
sbb
push
aad
rcll
dec
in
and
and
movsb
adc
sbb
mov
gs
in
cmp
loope
int3
ret
enter
imul
loope
pop
pushl
shr
insb
daa
sbb
cmp
insb
rcrb
dec
mov
in
fsubs
jg
add
scas
mov
jge
fs
scas
xchg
cmp
int3
adc
push
cwtl
pop
pop
bound
inc
enter
cmp
pushf
cmp
mov
dec
imul
mov
xor
pop
inc
rorl
adc
mov
clc
add
jmp
aam
pushf
jne
sahf
adc
cli
dec
dec
push
lea
js
sub
dec
add
adc
xchg
adc
mov
out
sbb
push
adc
xor
lahf
pop
inc
inc
xor
ss
and
dec
pusha
sbb
in
xchg
shlb
fcoml
mov
xlat
mov
test
jl
cwtl
dec
push
adc
mov
jge
add
xchg
jb
test
nop
mov
mov
ds
xchg
jl
and
adc
push
ljmp
lcall
mov
sub
or
and
shlb
loopne
loop
outsl
push
push
dec
or
popf
movsb
loope
arpl
mov
sar
sbb
xchg
icebp
sahf
test
add
cmp
es
xchg
stos
xor
pushf
fcoml
test
mov
bound
adc
stos
fildl
std
fdiv
pop
roll
cmpsb
dec
push
rcll
mov
lds
add
mov
xchg
push
enter
add
fcomps
fcmovnb
es
inc
fisubrl
push
cwtl
repnz
push
xchg
and
or
mov
stc
xorl
data16
xlat
inc
inc
add
pop
lods
jb
ja
je
enter
pop
pop
push
xor
popa
mov
clc
sub
adc
push
push
add
dec
test
xor
ret
jbe
in
pusha
and
sbb
mov
xchg
dec
leave
aam
mov
clc
add
mov
sbb
pop
sub
sub
adc
js
jne
add
loop
mov
neg
stos
lahf
mov
insb
cmp
push
jne
jo
lea
and
jo
mov
and
cs
test
sub
add
inc
enter
lds
stos
cli
outsl
sbb
xchg
dec
lds
cmp
push
adc
insl
mov
fsubr
ljmp
jp
in
add
add
adc
add
adc
xchg
inc
je
lds
outsl
insb
push
cmpsb
pop
mov
pop
das
cmp
lret
add
pop
ret
sub
xchg
mov
ja
mov
push
push
add
imul
and
xor
pop
imul
mov
rorb
sub
jl
and
xchg
xlat
push
cmpsl
or
dec
push
ss
adc
rclb
movsb
ret
into
subl
bound
mov
xchg
int3
push
je
pushf
enter
sbb
push
inc
outsb
test
push
test
int3
mov
cld
adc
push
jno
ja
push
stos
lock
out
dec
mov
aam
in
add
aam
add
add
sbb
sbb
ficoms
mov
mov
push
clc
mov
rcll
nop
and
xchg
xchg
outsb
loop
push
cmc
sub
cli
mov
insb
test
and
in
adcb
sub
mov
push
xor
rorl
test
add
mov
jb
mov
or
lock
add
lret
xlat
inc
jae
push
add
fldenv
pop
cmp
inc
pop
push
mov
cmp
add
loop
fxch
push
cli
clc
push
jl
into
mov
push
sub
and
insb
sub
imul
dec
and
mov
push
mov
shlb
stos
fsts
ror
stos
push
mov
jmp
mov
jl
mov
pop
popf
icebp
xor
pop
dec
andl
jl
nop
add
out
outsl
xor
sub
pop
mov
push
insb
mov
mov
ficompl
cli
clc
dec
js
sbb
aas
sub
idivb
inc
mov
pop
jp
jge
add
js
push
ljmp
dec
xor
inc
test
lods
inc
fwait
and
or
subb
adc
jecxz
adc
jbe
and
test
xchg
pop
std
push
add
or
ds
sahf
dec
loopne
cli
push
arpl
std
je
sbb
cmpsl
mov
stc
inc
and
sbb
pop
inc
clc
cli
hlt
repnz
push
jg
mov
outsb
int3
push
stos
adc
mov
aad
pusha
mov
or
mov
adcb
aas
fidivl
and
ficompl
cltd
call
stc
and
lods
mov
data16
subl
pushf
not
lods
sbb
inc
popf
std
inc
dec
outsl
xchg
push
mov
pop
sbb
xchg
hlt
pop
iret
cld
mov
adc
sub
enter
fisubl
and
lahf
inc
bound
xor
lods
call
push
pushf
or
js
orl
xchg
lods
roll
gs
dec
mov
loop
xor
sbb
or
mov
ss
sarb
lea
or
aas
mov
ret
add
clc
jl
push
icebp
ljmp
or
add
scas
xchg
adc
lcall
pop
pusha
icebp
enter
mov
daa
xor
or
daa
mov
ud0
lods
das
sti
add
insb
outsb
jmp
xor
xchg
loope
mov
enter
add
jno
test
js
or
les
imul
sar
mov
add
push
xchg
cmp
movsb
cltd
nop
jb
popa
decl
push
xor
xchg
outsl
ljmp
jp
std
stos
jbe
push
jnp
sub
cltd
insb
rolb
inc
dec
sbb
xor
fxtract
mov
fsub
add
push
enter
rolb
sub
jp
and
movsl
sbb
std
outsl
das
cmpsl
xchg
dec
sbb
adc
roll
int3
jmp
into
test
jecxz
inc
mov
dec
int3
je
mov
rolb
mov
mov
xchg
xchg
out
sarb
pop
fdivp
cwtl
test
xor
pop
test
arpl
mov
sbb
sbb
inc
jno
or
add
cwtl
push
mov
lret
jecxz
dec
pop
dec
lods
jmp
adc
jnp
jg
ds
adc
shll
mov
fimull
in
lods
cmp
call
dec
out
jl
sbb
roll
movsl
cld
and
lds
loop
xchg
xchg
dec
mov
xchg
ljmp
inc
jmp
mov
enter
push
test
adcl
push
cmpsl
sahf
push
es
ljmp
xor
mov
scas
call
cld
sbb
xor
cmp
pusha
mov
pop
jp
es
outsb
adc
sbb
movsb
mov
jecxz
xchg
cmp
push
scas
push
pop
divb
jb
xor
int3
mov
inc
adc
rorl
pop
psllw
sbb
fldcw
pop
xor
ret
inc
fs
scas
push
insb
lock
push
fimull
nop
ja
cmp
dec
xchg
jp
sahf
frstor
mov
dec
inc
cmp
adcl
adc
and
icebp
sbb
pop
cld
loope
cmp
out
mov
ret
add
pop
jecxz
xor
jbe
hlt
push
mov
in
lea
repnz
add
fsubr
and
add
xchg
adc
lea
pushf
xor
push
in
xchg
add
mov
das
xor
cmp
mov
out
movsb
outsl
inc
dec
and
icebp
ror
sbb
outsl
add
jmp
jmp
add
add
mov
popf
das
push
mov
lcall
cmpsb
sbb
rol
and
pop
xor
addb
jns
cmpl
or
rcll
push
push
xor
stc
sub
and
into
mov
ret
test
mov
xchg
and
clc
cmpsl
xchg
inc
int
out
jmp
int3
nop
mov
scas
adc
subl
inc
les
xchg
xor
daa
das
scas
inc
pop
jnp
ss
les
imul
shlb
xor
es
daa
inc
sbb
leave
xor
add
sub
cmp
mov
addr16
mov
ja
sbb
add
pop
fistps
stos
push
inc
pop
rcrb
jl
adc
imul
imul
push
sub
fsubrl
or
mov
mov
insb
xor
cltd
adc
cmp
xchg
movsb
dec
pop
ret
push
jmp
hlt
lcall
int3
xchg
iret
push
inc
je
int
pop
sub
pop
sbb
in
bound
lret
xlat
fwait
shll
pop
ret
adc
pop
icebp
add
inc
dec
adc
pop
movsb
in
ss
movsl
daa
data16
sbb
inc
sbb
or
int3
pop
mov
out
adc
mov
andl
and
cmp
mov
sbb
xchg
or
dec
out
aad
pop
inc
xor
out
popa
ds
and
or
adc
insl
add
push
mov
cs
daa
push
jl
idivb
imull
or
pop
adc
xchg
mov
pop
jbe
add
cmp
dec
cltd
cmpsb
jo
pop
adc
pop
ror
push
gs
cmp
jbe
aas
mov
xchg
ljmp
vpor
imul
mov
and
pop
pop
inc
sbb
loop
mov
cwtl
lock
subb
cmc
mov
rorl
mov
shrb
push
dec
call
adc
add
sbb
sub
push
sub
mov
mov
sbb
add
adc
enter
call
subl
sbb
leave
inc
mov
fldln2
enter
push
fstpl
push
stos
xchg
xor
cmpsl
xchg
sbb
imul
xchg
jmp
js
cmp
mov
ret
jno
mov
mov
jecxz
xor
mov
mov
dec
mov
scas
fcmovu
push
shl
outsb
shl
adc
xchg
mov
int
std
mov
cmpsl
shlb
pop
inc
outsb
cli
call
or
lret
add
xlat
mov
inc
bound
lea
sub
je
popa
add
popa
xchg
add
incl
push
inc
cmc
inc
mov
cli
push
and
jg
jo
scas
jbe
pop
repz
rcrb
test
scas
repz
aad
xchg
scas
jno
scas
add
jne
or
cs
push
pop
push
rcrb
push
mov
ret
push
sbb
sbb
rcll
dec
cli
js
je
in
sbb
cmpsb
pop
ret
xor
fcomps
push
lods
jge
out
add
icebp
add
das
add
ss
push
dec
arpl
mov
in
mov
lods
sahf
adc
push
cwtl
sbb
addr16
divl
cmp
xor
movsb
scas
and
bsf
pop
lret
ja
xlat
xchg
add
pop
pop
mov
and
mov
bswap
xor
lods
or
sub
or
jmp
or
adcb
adc
mov
popa
xor
jmp
adc
mov
push
jns
sub
lret
pop
add
sub
mov
cmp
xchg
push
mov
scas
jns
dec
lea
call
je
sub
sub
lahf
lds
jo
mov
fimull
inc
push
pop
loope
cltd
icebp
ss
mov
lock
inc
pushf
mov
sbb
mov
xchg
shlb
inc
out
adc
movsl
call
jmp
mov
xor
sbbl
dec
sbb
xor
pop
sbb
pop
jecxz
xchg
mov
movl
xlat
or
mov
aad
insb
xchg
or
pop
push
mov
rcrl
dec
or
repz
loope
push
test
loope
mov
outsb
inc
lods
or
sub
pop
enter
shrl
jmp
out
fcompl
push
cmpsb
push
sbb
pop
add
or
pop
mov
inc
movups
pop
push
loop
add
popf
outsl
in
mul
nop
xchg
dec
lret
pop
stos
cmp
inc
in
adc
stos
dec
mov
or
pop
cmp
nop
inc
and
add
xor
jnp
dec
test
sub
mov
mov
mov
ret
cmc
aaa
or
inc
mov
xchg
push
loope
push
adc
lcall
outsb
push
lock
add
icebp
jecxz
dec
adc
cmpb
and
aaa
cmp
mov
iret
pusha
cs
imul
addr16
add
jo
mov
mov
sbb
jmp
adc
daa
or
icebp
insl
lahf
sbb
shlb
roll
leave
xor
pop
mov
pop
lods
les
inc
or
and
mov
push
int
jbe
inc
inc
dec
sub
sub
lock
sub
inc
mov
mov
fucomip
add
push
adc
xchg
cld
adc
inc
lods
mov
push
mov
adc
lahf
mov
xchg
sbb
dec
sub
rorb
sub
adc
xchg
stc
mov
icebp
hlt
movsl
loop
arpl
in
icebp
int
jb
mov
popf
cli
dec
aam
mov
add
add
jns
push
pop
fildl
test
nop
movsb
push
sbb
mov
insb
dec
mov
push
sbb
test
pop
cmp
xor
ljmp
or
mov
lds
lcall
xor
notl
shrb
xor
mov
inc
sbb
mov
movsb
xor
aas
dec
and
xchg
xor
mov
dec
fadds
mov
sub
insl
in
loopne
mov
or
inc
mov
popf
push
add
xchg
inc
addl
adc
call
subl
sbb
inc
mov
test
fildl
mov
xor
and
lea
dec
dec
and
out
into
and
dec
movsl
rorb
jle
shll
pop
mov
push
xor
dec
cmpsl
inc
clc
cmp
test
push
add
cmp
mov
sahf
xchg
or
adc
pop
xor
ret
or
fcoms
nop
gs
mov
ret
or
ret
inc
test
stc
cltd
mov
int3
adcl
adc
cs
mov
and
or
cmpsb
dec
leave
jno
inc
xor
dec
loopne
pop
jg
sbb
jnp
pop
aad
and
ror
inc
stc
mov
aaa
mov
decl
jb
inc
push
xor
cltd
int
int3
mov
and
shl
sub
repnz
inc
inc
jo
lcall
arpl
pop
xlat
lahf
pop
icebp
pop
jno
roll
adc
mov
mov
add
sbb
and
pop
adc
lret
and
xor
mov
adc
push
aaa
adc
push
jmp
sub
or
stc
xchg
cwtl
pop
cmp
call
cmp
leave
jns
mov
xchg
test
jb
mov
mov
add
imul
xlat
inc
mov
gs
rorl
imul
arpl
call
mov
xchg
fmulp
xchg
aad
icebp
int
and
arpl
outsb
xchg
or
pop
push
out
sub
dec
jge
add
sub
popl
or
xchg
add
jg
ja
rol
push
pusha
fists
scas
add
movsl
outsb
add
lret
test
test
lock
jb
aaa
pop
inc
mov
add
push
fwait
andl
lcall
or
push
and
mov
nop
jmp
or
pop
iret
and
jb
pop
mov
xchg
popa
pop
mov
inc
hlt
push
mov
sbb
push
orb
dec
xchg
lds
adc
xorb
jne
inc
lahf
or
stos
push
cmp
inc
pop
jp
push
movsb
cmc
mov
cmp
sbb
imulb
add
dec
imul
and
dec
lods
mov
fadd
lcall
push
ljmp
ret
lds
fsubrl
daa
imul
sbb
test
inc
pushf
adc
sti
inc
or
scas
jno
andl
mov
sub
shlb
mov
push
mov
hlt
adc
or
int3
add
pusha
cltd
jge
pop
adc
inc
shll
mov
mov
mov
add
adc
cmp
cmp
jne
push
dec
push
or
out
test
or
jne
into
fistps
aas
ret
push
std
shl
dec
sub
add
mov
rcrb
lods
mov
loopne
mov
aam
xor
out
mov
or
and
push
jle
push
jae
in
loop
je
push
sbb
idivl
scas
sub
push
xchg
cwtl
inc
push
push
push
push
mov
rclb
test
sub
jmp
mov
int
fidivrl
sbb
add
in
xor
add
dec
inc
dec
inc
mov
xor
js
dec
icebp
and
sbb
loope
push
stos
push
in
mov
inc
insb
sar
cmp
push
pusha
repz
mov
add
jno
ret
pop
xchg
repz
lahf
imul
jmp
or
and
cmp
dec
sub
mov
xchg
paddusw
repnz
sarl
rcr
ret
cltd
sub
sub
int
mov
repz
nop
stc
jecxz
mov
mov
sbb
dec
adc
das
mov
nop
cmpsb
xchg
push
into
stos
mov
shl
popa
scas
scas
mov
adc
sbb
mov
push
stos
cwtl
shlb
loop
and
add
montmul
cmpsb
inc
pop
push
test
test
mov
in
and
stos
ret
inc
cmp
pop
cmp
push
stc
js
mov
es
in
idivl
jb
pop
mov
push
cmp
imul
aaa
mov
pop
push
popf
fwait
pop
movsb
push
mov
pusha
sbb
hlt
and
out
sbb
sub
jo
mov
bound
mov
mov
scas
pop
aaa
inc
clc
inc
rcl
mul
sub
lret
aam
stos
xchg
lods
cmp
mov
cmpsl
adc
stos
and
jcxz
imul
mov
xchg
inc
dec
sub
add
loopne
pop
adc
jo
xor
inc
pop
jnp
pop
xchg
cs
dec
roll
sub
add
sub
stos
sub
or
minps
adc
lods
std
mov
mov
add
sbb
and
std
shlb
pop
cmpsb
into
inc
enter
cwtl
dec
sbb
xorb
or
push
jl,pn
lds
repnz
ret
push
shlb
mov
cli
ret
pop
dec
xchg
mov
push
test
or
lea
sbb
and
push
pop
ficoml
arpl
mov
push
inc
inc
fidivrs
jns
arpl
adc
scas
jg
ss
add
sub
sub
jl
adc
cmp
mov
in
pop
jge
pop
repnz
daa
inc
mov
inc
int
push
adc
mov
les
rcl
andl
ret
lods
in
or
mov
inc
outsl
test
imul
mov
or
out
shl
loopne
mov
or
sbb
idivl
je
mov
pop
add
scas
imul
sbb
aaa
push
repz
mov
mov
adc
ss
add
int
mov
jecxz
ss
and
sti
cmpsb
cmp
cld
xor
cmpsl
inc
pop
mov
push
test
mov
and
movsb
sbb
adcl
int3
mov
sub
cmpsb
sub
add
icebp
cmp
xor
xor
xor
dec
mov
pop
test
subb
pop
and
jmp
icebp
out
stos
jno
fcoml
lds
aas
leave
sbb
test
and
lock
dec
jmp
in
sub
add
lahf
lds
pop
xor
xchg
jne
in
dec
loope
bound
movsl
pusha
mov
jle
iret
xor
jmp
adc
out
cmp
push
enter
rcrl
sub
dec
rorb
sub
sbb
stos
movl
pop
xor
or
dec
xor
mul
or
xchg
stos
in
xchg
xor
xchg
shrl
lcall
ret
jg
pop
xor
push
jmp
inc
xor
mov
jl
cmp
outsl
xor
outsb
loopne
cmp
mov
push
jno
aas
dec
mov
mov
or
sbb
ret
pop
jp
xor
dec
rcrb
mov
pop
or
xlat
mov
inc
loope
add
mov
sbb
mov
mov
cwtl
sbb
inc
bound
jo
sbb
test
jno
xchg
and
movsl
dec
lds
test
scas
inc
mov
cwtl
ja
lea
pop
imul
dec
xor
push
xor
pop
cmpsb
mov
arpl
scas
push
mov
cmc
inc
xor
dec
jl
dec
pop
outsb
jp
mov
shrl
lds
lds
je
adc
lds
fmull
cmp
rcl
divl
mov
sub
aam
arpl
dec
call
xor
loope
imul
and
scas
sub
roll
test
xlat
xchg
sbb
filds
or
pop
insl
rclb
fisttpl
movl
pop
or
lods
pusha
movl
xor
popf
sub
dec
loop
xchg
mov
or
leave
in
jp
stos
push
dec
push
inc
jo
lcall
mov
cwtl
pop
xchg
sbb
loop
and
mov
adc
adc
out
push
ja
push
mov
daa
mov
test
test
mov
dec
outsl
adc
fisttpl
jl
in
mov
inc
sub
jle
and
sbb
pop
pop
xchg
jo
and
push
inc
mov
or
outsb
mov
imul
or
mov
test
arpl
fildll
cltd
adc
lods
test
add
les
mov
mov
mov
inc
sbb
sbb
mov
push
add
lret
adc
mov
movsl
ret
adc
test
jp
sbb
outsl
xchg
xchg
aaa
jp
lods
ljmp
fcmovb
and
pop
add
sahf
push
les
mov
cmpl
adc
mov
xlat
and
push
jbe
cmp
adc
ret
fldl
jl
popa
stc
loope
mov
std
xor
std
jge
icebp
mov
shlb
dec
push
cmp
test
dec
cmc
xchg
das
mov
int
imul
mov
call
lret
pop
mov
adc
jne
sti
or
scas
mov
imul
imul
inc
mov
arpl
mov
popa
dec
pop
cmp
and
test
jecxz
cli
insl
jb
jnp
add
inc
insl
hlt
ret
adc
test
pop
add
stc
xchg
gs
xchg
adc
lcall
mov
mov
in
and
inc
stos
and
push
cmp
shrl
and
xchg
push
mov
leave
sub
scas
adc
add
xor
and
xlat
xchg
sti
popf
pop
ret
or
addr16
push
mov
xor
jno
jo
shlb
cmc
cmp
mov
popf
loope
cmpsl
jg
xchg
test
lock
mov
pop
ss
mov
jl
filds
mov
cmpsb
add
dec
and
push
pop
mov
dec
arpl
pop
fdiv
dec
inc
call
sbb
sbb
hlt
lods
adc
push
outsl
ror
cmp
in
jne
mov
add
mov
mov
ret
or
add
xchg
mov
pop
dec
mov
pop
fdivl
loopne
adc
push
shr
sbb
jnp
push
or
mov
mov
cmp
and
cs
aas
xor
scas
xor
fwait
cmp
push
sub
fistpll
pop
xchg
xlat
xor
addb
fistps
leave
pop
jb
pop
xor
jnp
add
xchg
xor
push
call
add
nop
gs
inc
xor
and
push
pop
cld
adc
sub
wrmsr
out
jecxz
imul
into
adc
insl
pop
enterw
xor
imul
jbe
add
jp
test
sbb
shl
imul
cld
int
add
mov
cmpsl
scas
push
sbbb
adc
sbb
jecxz
shlb
popa
lds
and
andb
shrl
cltd
cs
jo
std
inc
jne
jl
subb
imull
movsl
xchg
fwait
cmc
or
and
mov
and
sbb
enter
push
and
repnz
mov
add
repz
test
mov
add
ret
shll
into
mov
pop
push
dec
cwtl
push
in
lods
test
add
mov
shr
insb
mov
lret
xor
inc
xchg
hlt
lcall
je
mov
nop
sbbb
mov
mov
lcall
sbbb
test
mov
cwtl
inc
sbb
cmp
mov
adcb
sarb
fst
mov
popf
push
icebp
adc
adcb
js
rorb
push
sub
arpl
and
insb
mov
xchg
scas
sub
jmp
lcall
xor
push
jmp
movsl
movsl
xchg
loop
stos
cli
std
dec
xlat
test
loopne
pop
jle
das
xchg
data16
jp
imul
mov
sbb
lods
fildl
out
sbb
add
out
adc
ss
push
jne
movsl
jecxz
test
xlat
cld
sbb
or
fiadds
pop
shll
mov
push
xchg
fisttps
sub
and
into
fldcw
mov
jnp
adc
push
inc
aas
or
loopne
ficoms
and
xchg
data16
xor
aas
push
fidivs
rcrl
jo
les
push
imul
xor
pop
lods
cmp
subb
pop
mov
cmp
ja
and
loopne
inc
add
dec
or
repz
adc
sbb
aaa
xor
mov
cltd
adc
pop
push
mov
lret
in
mov
daa
inc
movsb
push
add
mov
lcall
xor
negb
daa
sbb
jecxz
pop
xor
sbb
jmp
add
test
or
subb
inc
test
sub
movl
loopne
sbb
notl
sbb
cmpsl
loopne
lods
shll
stos
push
xchg
out
dec
dec
jecxz
jge
add
cmp
or
xor
and
adc
lods
das
adc
daa
xor
sbb
cwtl
or
xchg
lahf
pop
mov
push
mov
cmpsb
jmp
clc
cmpsl
mov
je
pop
push
xor
dec
loop
into
cmpsl
adc
cmp
insl
dec
sbb
pop
adc
cmp
loope
inc
xlat
pop
scas
dec
lahf
sbb
xor
adc
adc
outsb
adc
xrelease
mov
cmp
mov
movsl
lcall
js
in
push
adc
sub
dec
mov
stos
jg
cmpsl
dec
imul
testl
pop
adc
xchg
mov
jo
imul
rcrl
arpl
pop
sbb
jae
push
int
addb
pop
xchg
outsl
or
rolb
inc
loopne
test
lock
sub
lods
dec
repnz
mov
xchg
add
mov
gs
adc
test
mov
adc
adc
and
andl
lret
adc
test
xor
mov
mov
lcall
nop
jmp
pop
test
sub
leave
xchg
ret
and
movsb
jecxz
lea
add
add
insb
dec
outsb
ret
cmpsb
ja
add
in
pop
lea
adc
jne
mov
sbb
mov
pop
in
js
fdiv
cltd
cmp
sub
or
rclb
repnz
lea
repnz
filds
mov
loope
mov
sbb
push
out
xor
mov
mov
loope
adc
inc
rolb
mov
andl
sub
add
jo
xor
pop
jb
push
mov
sbb
jecxz
lods
or
daa
sbb
push
mov
ds
cmp
stos
cmpsb
bound
bound
lcall
add
test
arpl
or
jo
test
sbb
sbb
mov
lahf
dec
pop
pop
aas
scas
push
cwtl
jge
icebp
push
cwtl
jl
or
loop
xlat
cwtl
add
sbb
clc
xchg
insl
fdivs
sbb
rol
fidivrl
push
mov
add
test
jo
add
pop
cmp
sbb
shll
movsb
es
fidivl
or
and
push
imul
xchg
mov
in
loope
test
and
cmpsl
or
je
in
mov
cmp
nop
inc
dec
cltd
push
clc
mov
punpckhdq
adc
cmpsb
scas
cmpsl
push
inc
ss
inc
adc
dec
cmp
test
or
pusha
test
pop
icebp
push
lods
xor
fiaddl
sbb
movsl
push
fsts
sbb
pop
jg
xor
repnz
dec
jecxz
dec
clc
jg
and
mov
int
cmp
fxtract
dec
test
pop
xor
cmp
addr16
jmp
pop
mov
aaa
scas
push
inc
adc
push
or
fisttpll
adc
dec
aas
mov
aam
adc
loop
icebp
call
mov
test
xor
sahf
mov
xor
mov
or
add
aas
inc
stos
jl
adc
dec
lahf
mov
ss
fxch
push
stc
push
xchg
fdivs
pop
sbb
imul
xor
adc
mov
mov
das
sarb
push
pusha
or
insl
xlat
test
jecxz
aaa
loope
gs
push
fnstenv
gs
mov
push
mov
jno
and
repnz
inc
inc
sbb
mov
cmp
lods
scas
lss
xchg
mov
sbb
jmp
xor
pop
ss
cmp
pop
daa
dec
sub
popf
push
idiv
sub
pop
leave
mov
aad
push
cmc
push
sub
shl
xor
sbb
or
hlt
lock
lret
inc
xchg
xchg
xor
xchg
test
xchg
push
fisttpl
adc
sbb
or
mov
adc
dec
sbb
pop
mov
and
test
lock
in
inc
test
jmp
push
test
jle
sbb
shl
mov
push
hlt
cmp
stos
hlt
add
pop
cmp
data16
or
test
adc
fwait
sbb
fcoml
sbb
mov
push
xor
loope
in
dec
mov
loope
xchg
ret
push
nop
xchg
mov
inc
pop
stc
fiadds
das
jge
nop
sub
push
fists
pop
pop
stc
lea
sbb
dec
sbb
jl
lock
or
scas
ret
scas
or
ficoml
clc
add
pop
sub
sbb
mov
pop
jp
sbb
jge
add
push
ja
nop
mov
pop
add
xor
pop
or
mull
push
or
stc
or
nop
mov
cmp
adc
scas
in
sub
dec
sbb
adc
in
jb
or
pop
fistl
push
loopew
imul
add
xor
sbbb
xor
xlat
jmp
iret
push
pop
lret
pop
xchg
add
push
inc
sbb
rcll
shlb
rolb
cmp
sahf
adc
cmp
and
scas
dec
sub
je
xchg
xlat
aaa
pop
rcll
or
jb
xor
xor
pushf
inc
test
icebp
imul
mov
insb
add
fwait
sub
popf
fdivr
imul
pop
sbb
arpl
xchg
fistps
pop
push
xchg
push
lock
xlat
notb
shll
outsb
cmpsl
nop
or
inc
pop
jmp
out
les
jne
aas
mov
pop
push
test
or
jno
push
push
jno
out
imul
jns
push
mov
xor
inc
mov
mov
mov
cmpsl
ret
mov
ret
push
add
add
sbbb
sub
jmp
enter
aad
imul
fisttpl
push
filds
push
cmp
pop
scas
sbb
mov
add
addl
call
lret
add
imul
movsl
push
cmp
or
sub
fs
pop
pop
rcll
adcb
pop
and
cmc
popf
add
je
scas
cld
push
inc
in
pop
das
xor
cmpsb
and
dec
movsl
lret
sbb
add
sub
mov
dec
rcl
lcall
sub
mov
dec
out
mov
sbb
aas
cmp
sub
xchg
xor
test
das
xor
mov
fimull
xlat
mov
cltd
imul
jecxz
adc
jge
add
adc
imul
lds
addr16
lea
xor
sti
cmp
and
add
testb
dec
cmc
cmpb
test
jecxz
jg
or
push
pop
lds
leave
mov
lds
pop
cmp
mov
jne
arpl
xchg
mov
push
mov
shl
ss
jp
and
pop
in
pop
andl
test
xchg
call
xchg
push
pop
int
add
test
shl
jmp
dec
push
stc
or
clc
inc
or
pushf
bound
inc
jno
mov
xor
cwtl
test
push
or
or
rclb
mov
or
addb
adc
dec
push
add
sti
sub
sbb
dec
ret
cmp
push
leave
or
mov
push
jge
nop
add
xchg
xlat
pop
jecxz
lret
fnstcw
pop
cmp
movsb
dec
jo
mov
xchg
xor
fildll
imul
adc
adc
out
enter
xchg
pop
out
cmp
js
fsubrl
mov
gs
inc
jmp
add
adc
mov
add
sbb
shrl
imul
adc
subl
mov
push
pop
xor
push
xchg
iret
pop
loopne
sub
push
stc
lods
mov
adc
sbb
stos
xchg
and
fwait
aam
cmc
stc
sub
or
lahf
lock
andb
cmpsb
cwtl
mov
test
out
cs
push
out
sub
loop
inc
shl
push
and
fimull
jecxz
sub
sub
ret
movsb
test
loope
cmp
into
in
or
scas
add
pop
shll
dec
mov
shrl
pop
add
jl
and
in
xchg
scas
adc
push
add
dec
xchg
jne
sub
pop
xorl
push
fstps
push
inc
movhps
lods
mov
adc
dec
bound
pop
add
repz
push
or
test
pop
je
hlt
mov
sbb
ss
out
xorb
popl
jno
mov
mov
ss
dec
push
push
stc
mov
inc
rcrl
add
rolb
cmc
mov
lods
push
call
movsl
dec
or
jbe
add
out
sbb
and
and
test
dec
xchg
mov
js
dec
daa
loopne
push
jne
cwtl
dec
adc
or
clc
cltd
fisttps
adc
pop
mov
mov
dec
push
sbb
lahf
daa
jmp
mov
dec
jg
loope
or
pushf
push
syscall
push
nop
push
inc
mov
xor
cmp
rclb
cmp
sbb
add
leave
ss
movsb
mov
and
fsubr
clc
mov
movsl
or
in
xchg
sbb
mov
sub
mov
je
pop
icebp
cmp
or
mov
pop
daa
out
fstp
imul
icebp
mov
fisubs
aam
pop
orl
rcrb
ds
inc
xchg
cmp
jne
call
jne
jae
bnd
xor
xor
push
xchg
add
repz
lcall
jns
push
sub
daa
pop
sub
push
or
inc
inc
push
insb
adc
cmp
inc
mov
mov
int3
xlat
push
push
xchg
mov
inc
scas
test
aam
in
xor
aaa
pushf
mov
rcrl
stos
and
sarb
pop
xchg
dec
addl
loopne
lods
inc
dec
push
mov
std
push
lea
cmp
or
pop
xchg
idivl
mov
cmc
test
sbb
adc
jae
dec
stos
pop
aaa
cmp
shlb
loop
lret
or
push
movsl
leave
mov
xchg
push
pop
pusha
loope
push
insl
cmpsb
jae
mov
sbb
adc
shl
and
jmp
mov
pop
inc
lea
icebp
adc
pusha
ret
push
mov
push
outsl
xchg
mov
imul
rclb
mov
dec
repnz
add
jb
xor
sub
callw
mov
dec
pop
and
mov
outsl
add
or
out
addb
loopne
push
test
mov
pop
cmp
leave
loope
sbb
and
xlat
xlat
jno
pop
dec
sbb
xor
pop
and
cmp
sar
aam
mov
test
xor
lea
sub
pop
push
lods
rcll
jmp
roll
or
mov
mov
mov
es
dec
inc
mov
mov
cmpsb
push
fidivl
rorl
out
pop
add
cmp
cmp
les
sbb
dec
xchg
mov
aad
add
push
ss
addr16
xchg
js
add
or
add
cmp
lods
inc
or
les
mov
mov
jg
push
rclb
and
adc
cmpsl
sbb
push
or
mov
jle
xor
stos
pushf
outsb
xor
mov
pop
daa
or
das
repz
pop
mov
dec
in
das
adc
out
mov
mov
dec
sbb
and
lock
add
or
xlat
aad
cmpsb
lods
or
jo
adc
outsl
pop
and
jmpw
inc
inc
popa
cltd
jge
inc
adc
dec
movsb
scas
sbb
mov
jp
aam
cmp
iret
xlat
xor
jo
ret
mov
fsubl
imul
mov
pop
jle
rol
adc
scas
dec
xor
fsubs
out
jb
xor
cmc
aad
mov
sbb
stos
and
push
push
cmc
sbb
mov
shrb
test
sbb
mov
test
mov
fmuls
push
add
or
lock
xchg
cmp
addr16
sbb
fstp
push
rolb
sbb
subb
adc
cmp
mov
or
sub
popa
leave
mov
or
pop
push
sbb
subl
out
sbb
loopne
xchg
pusha
add
aaa
cs
xor
jge
sbb
pop
jno
push
jbe
inc
shll
jno
in
insb
adc
or
mov
std
pop
inc
sbbl
cmp
cltd
cmp
cmp
adc
scas
repnz
push
xor
outsb
stos
cld
mov
fistps
push
xorb
cmp
adc
aad
popa
hlt
adcb
jle
xor
lcall
xlat
xor
popa
pop
das
iret
mov
pop
addl
cmp
aaa
or
pop
sub
mov
sub
cltd
adc
lret
pop
inc
sub
pop
nop
jmp
or
and
push
in
les
xchg
mov
inc
mov
add
xchg
dec
dec
mov
xor
dec
rcr
roll
dec
add
jmp
lods
xor
mov
push
mov
mov
push
rol
xor
adc
cmc
cmp
inc
out
les
cmp
imul
jecxz
or
cld
jmp
push
aad
adc
adc
or
dec
pushf
inc
push
xor
imul
or
inc
das
inc
inc
mov
xchg
rclb
xor
xor
clc
test
repnz
scas
xor
and
fdivrl
and
sbb
xor
jle
leave
inc
shlb
ret
je
notl
repz
and
inc
and
ret
xor
sbb
test
out
das
or
mov
xor
pop
and
xor
push
dec
daa
lds
mov
cmp
popf
pop
insl
pcmpgtw
data16
mov
scas
jmp
jmp
int3
xchg
lea
shll
inc
data16
pop
adc
scas
fs
lret
jne
jnp
push
sti
js
lock
sbb
movsb
mov
aaa
loop
push
xor
sub
imull
adc
dec
sub
lret
loope
lods
dec
jno
icebp
inc
adc
xchg
mov
push
pop
repnz
mov
cmp
mov
xor
pop
imul
popf
fmuls
push
hlt
push
or
pusha
sub
cmpsl
xor
dec
push
pop
jno
rcrb
sahf
mov
leave
cmpsb
xor
and
sarb
ret
cltd
aam
int3
movsb
push
fistpll
lds
out
ja
subps
xchg
and
push
jmp
sub
xchg
outsb
nop
mov
pop
xor
and
outsb
jno
pop
jecxz
iret
mov
adc
and
and
pop
push
mov
movsb
fcoms
mov
imul
stos
rorl
outsl
xor
shrl
ret
mov
and
push
xor
jns
pushf
and
das
sbb
mov
cmp
int
mov
jo
aam
add
scas
rorb
lret
push
repz
les
shll
movsb
add
jb
or
adc
fwait
outsb
stos
xorl
dec
and
sbb
or
xor
clc
xchg
push
test
lret
stos
js
sbb
jle
test
roll
jge
imul
packssdw
add
fstl
pop
scas
dec
mov
push
pop
arpl
in
insl
inc
addr16
outsb
repnz
jne
addb
mov
sub
sbb
inc
inc
jl
pminsw
insb
inc
sub
dec
cmpsl
inc
in
mov
mov
lret
aam
out
inc
inc
scas
xor
mov
jmp
and
xor
sbb
jb
sub
sub
pop
mov
stos
dec
jmp
adc
out
sbb
scas
inc
xchg
xor
out
jne
leave
or
add
cmpsl
into
mov
imul
fimull
shlb
jl
lock
lds
stos
inc
add
scas
dec
mov
pop
cmpsb
js
inc
dec
and
push
mov
adc
test
sbb
mov
mov
dec
shll
scas
movsl
lea
sbb
sub
pop
inc
iret
and
es
inc
xchg
pop
cmpsb
dec
pop
xor
das
sbb
les
xor
in
sub
loope
inc
push
inc
dec
cld
adc
add
pusha
sbb
mov
jl
movsl
pop
mov
rorb
ja
mov
bound
or
je
cltd
lahf
mov
push
popa
dec
push
pop
popf
pusha
mov
scas
or
jmp
push
and
jbe
aaa
jno
shlb
mov
das
popa
push
mov
ret
push
data16
int
push
ret
test
roll
add
rorb
xchg
jo
xor
add
or
ds
cmp
fdiv
cmp
lcall
scas
sarb
ljmp
es
daa
jp
popa
and
jbe
and
mov
sub
jno
pop
test
mov
and
add
inc
push
movsb
loop
int
in
mov
jae
sub
cmove
repz
outsl
fstl
clc
int
pop
mov
cmp
sahf
fs
popf
xchg
xchg
in
inc
repz
jbe
and
imul
xor
fcom
pop
xor
sub
lods
jmp
inc
scas
notb
rcll
mov
sub
cmp
popf
push
lcall
push
mov
mov
loope
xchg
cmc
mov
cmp
pop
into
icebp
inc
adc
or
mov
xor
stos
dec
jp
add
scas
mov
ret
xor
int3
jmp
rorb
mov
roll
mov
sbb
decl
pop
imul
shrb
adc
cmp
pop
xlat
cmpsb
push
sbb
jle
pop
cmpsl
adc
aam
jne
xor
and
xchg
mov
mov
lds
iret
xchg
sub
insl
and
push
cwtl
cmp
mov
in
inc
dec
sbb
dec
xchg
pop
inc
inc
pop
xor
mov
hlt
mov
sbb
fcmovu
inc
ret
subb
fnstenv
enter
repz
or
cmp
clc
mov
lret
mov
and
repnz
jne
stc
mov
pop
sbb
roll
stos
push
sahf
repnz
cmp
inc
add
sub
aad
fwait
mov
push
sub
sahf
out
adc
xorb
push
or
and
and
out
sbb
fincstp
dec
xlat
inc
sub
sub
jne
add
sbb
sbb
aam
cs
cld
sbb
or
mull
adc
dec
xor
inc
sbbb
dec
inc
cmpl
jno
ret
test
push
cwtl
cwtl
out
jnp
jb
adc
and
xor
dec
cmpsb
lock
push
jp
mov
jbe
xchg
jo
pusha
and
rolb
add
lds
xchg
mov
or
das
mov
adc
mov
add
cmp
mov
jb
lock
cltd
andl
fildl
mov
mov
mov
test
test
pusha
mov
addr16
push
dec
or
daa
pusha
add
movsb
jmp
add
add
lret
ret
xor
push
push
or
push
cltd
pop
stos
popf
and
test
pop
xor
std
shll
push
std
frstor
stos
pop
jne
ljmp
push
and
mov
mov
mov
fxch
jecxz
enter
mov
les
xor
imul
sbb
push
cmc
mov
and
mov
movsb
stos
and
and
daa
xor
movsl
jne
pshufw
je
mov
loope
movsl
stos
dec
es
sub
ds
adc
rclb
add
rorl
sbb
fldt
jnp
mov
mov
test
imul
sbbl
daa
dec
add
pop
or
popf
sub
push
mov
movsb
mov
movsl
jl
lock
pop
addl
inc
sub
inc
js
cmp
test
push
jge
test
popf
pop
dec
sbb
pop
les
addr16
sbb
in
xor
into
rorb
scas
cmc
push
add
add
xchg
mov
sub
cs
pop
pop
jo
ffree
mov
or
dec
aaa
mov
jle
andl
popf
inc
cmp
pop
out
test
dec
xchg
dec
adc
call
ficoms
dec
adc
mov
adc
shll
mov
ret
cmpl
push
sbb
insl
xor
subl
aaa
pushf
loop
add
lock
pop
ffreep
or
jne
cmp
test
mov
pop
fwait
notl
mov
shll
cwtl
sbb
je
jnp
aad
sbb
xorb
pop
into
xor
push
xchg
cmp
dec
mov
and
lds
inc
sbb
dec
bswap
push
push
pop
and
jbe
sbb
or
das
sbb
inc
adc
xor
pusha
push
inc
xor
dec
and
sbb
roll
fnstenv
xor
jecxz
inc
xor
mov
and
or
rorl
mov
pop
xor
aas
movsb
icebp
test
dec
sub
cmpb
add
cmpsb
pop
out
push
movsb
inc
cmp
arpl
adc
jl
mov
push
push
ror
add
adc
iret
push
jns
sub
jecxz
mov
xor
and
jg
sbb
mov
push
sbb
jmp
adc
xchg
or
jle
addb
mov
add
inc
add
or
xor
or
insl
mov
adc
aad
ror
je
add
push
jp
mov
lcall
inc
or
fidivs
xchg
testb
xchg
insb
inc
out
and
fistps
inc
ret
int3
sub
arpl
daa
cltd
js
rcrb
xorl
popf
and
je
cmp
add
mov
mov
inc
mov
iret
popf
adc
cmpsl
out
inc
sbb
mov
mov
adc
push
std
mov
or
mov
jl
jmp
or
lret
pop
repnz
out
or
pop
push
pop
ds
xor
data16
pop
xchg
sbb
push
scas
dec
xor
inc
push
push
pop
sub
and
pop
das
stos
xor
nop
fcomip
add
popa
loopne
pop
xchg
icebp
mov
cmp
rcr
push
sub
adc
cli
sbb
mov
mov
mov
js
adcl
mov
aaa
test
jo
cmp
xchg
or
push
inc
fistpll
dec
jno
andl
pusha
jg
xor
add
cmp
gs
add
push
pop
pop
lds
xor
test
push
sahf
mov
ret
sbb
ljmp
into
sbb
repz
popf
add
mov
pop
xchg
test
sub
mov
add
and
sub
mov
movsl
movlps
daa
call
xlat
mov
fwait
jo
aam
das
mov
or
test
mov
sbb
pop
and
pop
and
mov
mov
jmp
out
and
add
jle
les
cltd
dec
mov
dec
lock
adc
insl
xor
xchg
mov
mov
xor
imul
aas
loop
in
mov
arpl
leave
mov
sarl
and
push
es
leave
pop
stos
and
stos
call
enter
pop
arpl
rcll
sahf
mov
fwait
scas
adc
outsl
aaa
xor
mov
int
test
or
xchg
leave
add
mov
push
dec
jmp
les
ret
mov
sub
xor
gs
lcall
push
clc
lea
cmpsl
xorb
mov
and
popa
cwtl
add
adc
jae
sbb
bound
xor
and
xor
movsl
rcrl
pop
mov
inc
sbbl
mov
push
sbb
xor
or
cmp
or
add
mov
push
loope
mov
adc
jg
fs
xor
cmp
sbb
sbb
mov
sub
mov
jmp
outsb
dec
adc
mov
jnp
dec
cli
lcall
push
cmp
pushf
adc
popf
add
mov
sub
arpl
jmp
test
jmp
cmp
repz
inc
in
inc
test
or
adc
cmp
scas
pop
dec
scas
ja
movsb
jmp
xchg
rcl
xchg
mov
sbb
and
pop
and
jnp
loopne
mov
xchg
xchg
stos
xchg
mov
sbb
rcrb
adc
pop
jge
and
mov
test
and
jmp
xor
sbb
and
pop
addr16
shrb
stos
jmp
adc
rorb
xchg
xor
lahf
jmp
xchg
and
popa
pop
push
std
xchg
xor
sub
and
push
test
pop
popf
dec
test
adc
sarl
rorb
mov
call
shl
and
adc
inc
das
es
sbb
jne
mov
jno
mov
pop
lahf
or
or
push
call
lcall
sub
inc
xor
arpl
lea
nop
fmull
movsl
ret
pop
push
jmp
dec
inc
jno
inc
dec
push
and
imul
dec
ret
xchg
xchg
lds
jo
and
pop
ret
pop
and
xlat
or
mov
xlat
sub
pop
push
scas
inc
jbe
mov
or
andl
xorl
jne
ret
inc
jae
sub
in
movsl
jnp
push
insb
icebp
cmp
scas
sbb
and
cmp
or
sbb
cwtl
pop
mov
cmpsl
sbb
or
and
aam
adc
pop
pop
cmp
lock
cmc
xor
nop
mov
ret
outsl
xor
pop
xchg
sbb
adc
outsl
mov
push
or
and
lret
es
adc
cltd
inc
sub
dec
mov
adc
add
xchg
pop
and
cld
insl
and
movb
shll
jmp
push
jns
pop
sub
push
mov
fidivs
notl
mov
into
push
mov
shlb
xor
jae
add
jg
mov
inc
movsb
iret
adc
test
inc
mov
fnstcw
pop
xchg
xchg
cmp
hlt
push
pop
cmp
mov
int
jne
sub
pushf
shrl
mov
cmc
pop
mov
or
push
mov
cmp
cld
push
mov
aad
add
ret
adc
rolb
pusha
xor
pop
add
xchg
add
fisubs
jbe
mov
test
es
xchg
out
scas
push
in
push
inc
stc
cs
int
add
xor
aaa
jne
lea
xor
aad
add
fsubrp
fisubl
je
negl
push
je
loop
aad
or
cmp
loopne
ficoml
icebp
mov
lods
push
addr16
sub
stc
mov
add
dec
xchg
movsb
mov
sub
cmpsl
push
xchg
gs
dec
sbb
pop
xchg
les
pushf
lock
jmp
je
movsb
mov
push
jns
lret
nop
add
inc
cmc
mov
sbb
mov
jno
nop
std
or
and
loope
xchg
xchg
cmc
lret
add
cmpsl
mov
sub
push
inc
aaa
call
lock
aad
jae
inc
xchg
or
aaa
int
daa
dec
cmpsl
xchg
xor
add
int3
xor
mov
inc
test
pop
clc
movsl
outsl
in
test
sub
mov
xor
cwtl
mov
mov
pushf
pop
shlb
pop
mov
sbb
aam
sbb
lods
sbb
imul
sti
test
insl
add
adc
and
scas
imul
and
or
les
lret
in
mov
dec
adc
ret
xchg
inc
sbb
dec
cli
dec
sbb
inc
inc
mov
movsb
and
shl
add
push
es
add
addb
cli
cmp
fs
cmp
sahf
popa
scas
ss
imulb
mov
add
pop
add
and
pop
stos
rcll
add
xlat
inc
push
mov
push
bound
jnp
pop
mov
scas
add
or
out
and
jge
daa
xor
push
xchg
cmp
xchg
and
xchg
out
inc
das
mov
xchg
scas
lds
fnstenv
push
pop
and
push
orl
inc
dec
sbb
inc
add
imul
int
stos
inc
adcl
pop
stc
sbb
pop
sbb
mov
add
jo
inc
sbb
aad
jp
inc
cmp
push
imul
popa
cwtl
jno
shll
addr16
and
addr16
push
repz
push
or
lock
loope
sub
adc
es
in
xor
add
xor
xchg
push
dec
icebp
or
adc
iret
cwtl
stos
popf
je
xlat
cs
pop
aad
adc
adc
adc
xchg
cmp
jb
mov
push
les
mov
jecxz
mov
mov
loopne
push
mov
or
jne
inc
jae
imul
or
pop
sbb
and
in
repz
mov
scas
lods
bound
addr16
mov
ss
stc
and
or
dec
pop
shll
ja
lock
push
pop
add
ret
cwtl
pop
mov
sahf
iret
push
push
xchg
cmp
push
cltd
push
in
pushf
mov
mov
sub
push
xor
scas
jmp
mov
loopne
sbb
aad
xchg
scas
dec
xlat
fs
add
das
pop
adcb
push
dec
mov
in
mov
sub
inc
movsb
push
push
mov
stos
push
adc
rcrl
test
js
cmp
jne
lahf
fcmovnb
iret
sahf
cltd
loope
subb
cmp
jbe
rcl
xchg
pop
stos
mov
ja
int
hlt
loope
jo
mov
add
xchg
in
add
sub
lods
and
addr16
mov
sarl
xor
movsb
cmpsl
adcb
inc
dec
push
sbb
jb
adc
add
imul
cmp
push
sub
fisubl
das
mov
mov
pop
insl
subb
mov
aad
in
sbb
lods
jnp
push
test
test
inc
addl
dec
xchg
sub
icebp
dec
push
push
add
sub
push
imul
cmp
shll
ret
cmp
stc
out
movlps
xchg
mov
jo
cwtl
sbb
addr16
sbb
in
ret
jg
inc
push
push
jl
mov
jge
in
clc
mov
loope
adc
inc
push
shlb
xrelease
dec
lcall
fadds
pop
add
sbb
pop
mov
push
cmpsb
testl
or
xchg
or
subl
decb
sub
cmpsb
test
xorl
jne
outsl
out
call
hlt
shll
fldenv
stc
mov
push
xchg
inc
adc
add
pop
mov
push
bound
ret
ja
je
sbb
addl
push
aas
mov
push
sbb
sub
pop
xchg
insl
fstps
jle
dec
fistl
jecxz
int
mov
nop
fwait
adc
mov
or
cmp
mov
nop
sub
cmp
loope
fistps
and
sub
sbb
jecxz
or
push
pop
clc
fs
dec
adc
inc
jo
movsl
sub
icebp
je
mov
inc
dec
mov
jbe
pop
dec
xchg
int
xchg
or
leave
xchg
add
jmp
outsl
or
xor
arpl
xchg
jl
cmp
xchg
dec
rclb
or
sti
movsl
mov
mov
push
cmp
js
mov
adc
iret
icebp
ret
pop
mov
fisttpll
jns
sub
adc
les
jmp
xor
rcll
aas
rcl
jne
jmp
repz
push
scas
dec
out
mov
shll
xor
inc
sbb
sbb
xchg
sub
pop
test
adc
clc
push
cmp
push
add
mov
xchg
or
pop
adc
fisttps
cmp
das
xchg
sbb
adcl
aas
and
mov
xlat
adc
xor
test
je
popf
push
cmp
pusha
add
jns
xor
jl
cmp
pop
or
popa
loopne
lret
ret
inc
sbb
es
jl
pop
ficoml
aam
movsl
in
push
pop
or
in
sbb
or
and
bound
xchg
mov
ja
repnz
bound
je
xchg
les
push
jmp
or
xlat
test
fsubrl
add
mov
sub
ret
dec
fldcw
sub
pop
jno
xchg
enter
xchg
daa
cld
lods
mov
adc
and
adc
shr
aaa
scas
xor
sbb
jle
rorl
mov
xor
sub
push
jo
lcall
xchg
mov
xchg
test
or
push
push
xor
cmp
sub
push
push
cltd
jno
mov
and
ja
lds
sbb
jns
movsb
cltd
jmp
out
inc
pop
or
jmp
cli
push
mov
mov
mov
fists
inc
mov
push
dec
jnp
fisttpl
inc
mov
mov
ja
pop
add
push
shr
roll
and
sbb
push
mov
mov
bound
xorb
pop
xor
jb
cmpsl
mov
inc
mov
sub
fcmovnb
test
jns
or
inc
pop
jle
sub
iret
test
jnp
dec
dec
pop
mov
fldenv
call
adc
xchg
mov
test
cmp
mov
and
mov
in
xchg
scas
xor
je
xor
adc
xchg
adc
jns
fsubrs
adc
xlat
subb
fcmovnbe
clc
mov
inc
lea
pop
pop
jnp
dec
imul
in
cmp
fsub
in
or
jno
or
rorb
xchg
jnp
mull
je
jo
clc
cmp
and
jno
push
push
sbb
adc
rorb
or
insl
or
jo
mov
rcrb
add
mov
es
pop
call
mov
fists
add
jle
push
in
icebp
add
dec
pushf
sbb
mov
leave
std
fldt
stc
mov
test
mov
leave
inc
mov
loope
pop
xor
cmp
jne
xlat
lds
push
mov
packssdw
lock
xor
cmpsl
mov
mov
in
adc
inc
insb
jmp
add
aaa
cmp
add
xor
pop
mov
popf
or
or
je
shll
cwtl
push
ret
int3
xchg
arpl
mov
xchg
add
outsb
inc
mov
adc
in
push
out
add
pop
push
loop
jo
mov
popf
or
outsl
inc
lea
scas
cmovae
adc
arpl
mov
cmp
mov
enter
add
mov
dec
clc
inc
add
xchg
jl
in
xor
dec
mov
ljmp
gs
mov
add
and
cs
je
pop
xor
mov
lds
imul
aas
rorb
scas
dec
xor
stos
cld
aaa
jo
imul
inc
push
xchg
das
or
mov
push
pop
inc
out
inc
xchg
div
popa
rcrb
enter
push
or
adc
repz
adcb
sub
jmp
aas
sti
xchg
xchg
cmp
mov
pusha
and
and
arpl
roll
test
std
out
cmp
int3
in
repz
pop
or
ds
scas
addb
jno
pusha
push
rolb
pop
sbb
inc
or
push
sub
mov
lock
adc
roll
push
mov
and
into
test
or
bound
sub
xchg
sub
or
push
pop
je
testl
out
jecxz
repz
xor
push
dec
or
repz
jnp
insl
xchg
push
adc
test
dec
shl
fsub
jo
imul
mov
mov
sub
js
mov
xchg
loop
movsl
and
add
or
sub
xchg
aam
mov
push
sub
xor
lea
stos
rcrb
inc
xchg
and
dec
and
mov
clc
mov
adc
mov
mov
loope
enter
jmp
es
and
shlb
js
test
rclb
aad
push
nop
je
cwtl
or
aas
inc
jne
xchg
out
xchg
pop
xor
jno
iret
sub
shr
xchg
das
and
mov
ret
add
sahf
and
jp
popa
shrl
cmp
fs
mov
inc
and
je
cmp
pop
adc
or
js
ror
arpl
and
lods
adc
cltd
outsb
sbb
push
pop
cmpsb
mov
in
push
popa
push
inc
outsb
jne
data16
js
aam
jne
or
push
sub
mov
pushf
push
inc
pop
popa
push
nop
pop
cmp
pusha
clc
or
add
out
mov
pop
cmp
and
orl
push
js
dec
fwait
jmp
add
inc
sbb
addl
sub
or
adc
sub
loope
add
and
mov
adc
movsl
mov
in
addr16
ss
test
pop
jp
mov
insb
push
ret
mov
xchg
cmp
hlt
xor
xchg
cwtl
mov
xchg
sub
sub
push
sbb
dec
pop
cltd
shl
out
pop
out
movsl
test
mov
or
stc
shrl
ret
push
xor
test
rorl
fidivs
adc
add
lret
iret
pop
daa
jo
jp
es
shr
outsl
inc
inc
scas
inc
mov
xchg
push
sbb
add
gs
jnp
pusha
sbb
iret
test
xchg
dec
mov
sahf
mov
dec
add
sbbb
inc
out
jns
test
mov
mov
jo
clc
fldt
inc
icebp
jg
push
dec
fwait
ret
in
jg
adc
jl
inc
stos
and
add
sbbl
lcall
mov
add
lret
jne
mov
sub
shr
add
cmp
jmp
mov
movsl
shll
bound
xor
jg
push
push
ss
inc
daa
out
stos
dec
mov
inc
jmp
les
loope
cmc
and
lahf
test
popf
sbb
ret
mov
mov
stos
pop
enter
push
lods
ja
lret
ret
sbb
xor
jne
test
cmp
and
ret
pop
popf
push
icebp
push
adc
sbb
sub
fisubrs
fnstenv
or
andl
jmp
out
into
mov
ror
cmp
xorl
data16
mov
call
mov
push
and
mov
leave
mov
push
pop
jmp
shlb
lea
xor
std
in
sbb
fwait
and
mov
mov
shl
rcrb
push
loop
mov
imul
jns
cli
cmpsl
or
into
xchg
xchg
les
pop
adc
lahf
xor
fimuls
add
inc
mov
in
fnstcw
and
jo
test
xchg
mov
sbb
mov
bound
xlat
and
jmp
mov
mov
dec
pop
cltd
pop
ret
addr16
in
movsl
mov
pop
adc
and
out
and
pushf
sbb
jno
rorl
add
scas
jmp
es
enter
cmpl
mov
pop
fwait
enter
neg
iret
negl
mov
pop
not
pop
mov
loopne
hlt
loop
jno
loope
mov
cmc
inc
stos
daa
shl
ret
fisttpll
aam
mov
loop
cpuid
cltd
mov
sub
out
mov
into
and
popf
dec
dec
insb
push
add
pop
in
inc
das
imul
push
fildl
jo
lods
dec
push
mov
dec
xchg
inc
push
movsl
imul
cwtl
movsl
mov
xor
call
sbb
aad
stos
xchg
movsb
loop
xor
shr
push
fs
ss
xchg
jbe
xchg
mov
mov
sbb
push
insb
dec
pop
aaa
xchg
repnz
mov
dec
sub
in
mov
sbb
mov
andl
push
jne
jne
repz
popa
xchg
xor
or
inc
lret
push
ljmp
in
in
cmp
ljmp
lods
cmpsl
cmp
fwait
xor
pushf
cwtl
or
mov
xor
imul
test
scas
jno
cmp
cmc
xchg
outsl
gs
pop
mov
cli
xor
and
jne
bound
loopne
mov
push
lret
sbb
rorb
das
sahf
popf
or
popf
mov
push
pop
test
mov
mov
ficompl
icebp
xchg
movsb
cmpsb
xchg
jno
mov
mov
test
es
in
jbe
push
popa
push
ja
mov
repnz
push
and
cmpsb
sbb
sbbb
dec
pop
push
test
sbb
sbb
mov
jno
imul
in
rclb
shll
cmp
dec
xchg
icebp
mov
call
xchg
mov
lret
test
add
fcomps
and
cmpsl
cmc
imul
mov
xor
lea
xchg
xchg
jge
adc
dec
jnp
mov
popa
movsb
add
aas
push
fdivrl
aas
mov
xor
icebp
dec
rolb
mov
icebp
sahf
fstl
pop
mov
loop
jne
dec
mov
in
push
scas
test
in
or
xchg
rorl
inc
test
inc
das
xchg
jmp
add
icebp
sbb
insl
aad
ja
adc
xlat
xor
insb
xchg
outsl
and
dec
jne
push
dec
or
rolb
rorl
mov
xorb
or
add
mov
pop
lret
mov
lea
cmp
daa
cmp
push
fstpl
imull
jno
add
or
int
mov
mov
fsubr
leave
xor
mov
popa
aad
test
jnp
aaa
adc
pop
je
or
sbbb
lds
push
mov
movsb
pop
mov
cmp
sbb
sbb
fiaddl
aad
test
and
mov
adc
aas
or
inc
push
pop
popa
daa
cmp
aad
jmp
fdivr
inc
mov
or
iret
je
mov
push
pop
pop
jno
push
pop
je
adc
dec
cli
jno
mov
cmp
cltd
jl
or
cmc
mov
push
in
leave
push
and
shll
jno
hlt
push
imul
icebp
leave
dec
cmp
adc
out
adc
sbbl
movsb
lahf
mov
pop
and
xchg
imul
lret
pop
scas
ds
cmc
addr16
jg
scas
sbb
xor
lea
icebp
pop
adc
orl
mov
and
scas
insl
mov
push
ss
cmpl
or
push
fs
mov
cltd
and
repnz
lock
inc
rclb
out
and
fldt
cmc
es
add
daa
cmp
sysret
mov
jmp
xor
pop
mov
aaa
jno
iret
in
inc
aad
dec
dec
jnp
mov
jecxz
pop
lret
pop
movsb
lea
cmp
cmp
push
or
sub
movsb
inc
cmc
test
testb
inc
popa
mov
int3
jns
cmp
dec
jae
xchg
push
adc
and
dec
push
mov
pop
dec
xor
popf
lods
add
mov
or
ret
push
mov
push
jge
xlat
xchg
mov
data16
sbb
push
sub
ret
cmp
jnp
dec
xchg
jl
fbld
and
jmp
add
push
insb
dec
pop
imul
orl
adc
inc
cmp
inc
sub
mov
ret
pop
test
jg
xchg
lock
sbb
cli
lods
mov
out
jle
imul
sbb
cs
xor
test
int
xor
int
js
ret
in
mov
stos
nop
scas
popa
mov
add
push
pop
shr
xchg
adc
jae
inc
mov
mov
lret
or
mov
xchg
std
jmp
inc
xor
nop
lret
or
scas
xor
js
xchg
sub
outsb
lret
xor
xlat
lahf
push
push
ret
pop
xchg
stos
test
ror
in
xlat
add
imul
ljmp
loop
pop
test
inc
test
pop
into
sbb
scas
push
sbb
test
mov
push
icebp
cmpsl
out
fwait
aas
divl
mov
fbld
xor
sarb
mov
jge
add
cmp
repnz
sbb
retw
lahf
sub
mov
dec
cltd
cmp
outsb
ret
mov
mov
push
sub
mov
stos
cs
scas
lods
push
lods
loope
push
sub
leave
arpl
mov
imul
mov
sub
sbb
mov
cld
pop
or
gs
or
mov
ret
jo
out
sbb
add
or
mov
xor
mov
pop
inc
scas
and
dec
loope
xor
pop
stos
pop
xchg
adc
add
mov
add
xchg
cmpsb
aaa
leave
sarb
jl
mov
les
inc
mov
add
push
mov
cmp
cmp
add
inc
sbb
add
addr16
sub
shl
jo
and
and
pop
mov
dec
mov
and
mov
cmpsb
add
repz
pop
xor
cs
jo
sbb
jne
rolb
movsb
loope
or
out
js
push
dec
xchg
mov
adc
pop
addr16
inc
mov
pop
jecxz
jge
mov
es
popa
stos
jl
adc
xor
xor
lahf
mov
mov
push
pusha
adc
test
mov
lcall
into
xchg
cld
mov
notl
shrl
sub
or
sbb
sub
and
sbb
mov
aaa
shll
fwait
shll
sub
lds
and
les
in
pop
pop
or
gs
inc
test
mov
xchg
mov
adc
cmc
dec
inc
daa
loope
insl
push
lcall
sbb
arpl
inc
scas
jo
sbb
xor
loope
addr16
add
pop
and
adc
mov
gs
jb
cltd
xabort
ret
out
cmp
pop
jo
sbb
ss
inc
push
xchg
xchg
aad
add
xchg
add
fnstenv
jns
movntps
xchg
pop
pop
aad
mov
xchg
lcall
out
shll
test
or
cli
lds
adc
mov
mov
xchg
addr16
sbb
leave
fimull
push
adc
xchg
in
mov
imul
pop
mov
fwait
je
xchg
push
cmp
sub
test
add
movsl
push
jns
xchg
int3
lea
iret
call
cmp
jecxz
std
mov
mov
adc
test
inc
lods
lret
in
stos
lods
popa
adc
inc
lret
push
lods
or
add
lcall
mov
scas
pop
fwait
out
in
stc
cmp
mov
nop
imul
dec
or
pushf
data16
push
lds
pop
sbb
add
mov
dec
rolb
push
xchg
call
mov
fistpll
dec
xchg
imul
es
loop
sbb
imul
nop
mov
ljmp
push
or
jmp
into
repnz
xchg
cmp
push
jmp
and
mov
cltd
arpl
imul
daa
les
mov
fildl
mov
or
and
jnp
add
jae
arpl
xor
insl
arpl
jmp
and
ljmp
inc
pop
xchg
lods
adc
scas
mov
ja
xor
mov
inc
icebp
subb
sub
jno
xor
stos
inc
gs
rclb
and
mov
ret
stos
sbb
outsl
cltd
xchg
das
mov
cmpsl
cld
and
push
jb
inc
mov
dec
cmp
pop
add
mov
push
stos
xchg
popa
add
dec
xchg
adcl
adc
jb
decl
pushf
hlt
pop
push
mov
adcl
jae
ja
jmp
push
or
mov
cmc
and
xchg
or
das
rol
stc
out
jns,pn
mov
sub
stos
xor
pop
outsb
pop
roll
or
cltd
push
inc
add
rorb
test
mov
push
aad
leave
xchg
pop
cmp
stos
rcrl
or
lods
ret
sbb
ljmp
jecxz
push
mov
ret
inc
gs
mov
push
pusha
cmpsl
les
jns
out
mov
mov
lea
les
mov
adc
dec
arpl
loop
jno
xchg
and
mov
iret
xchg
mov
push
lahf
mov
repnz
ret
add
ror
aaa
arpl
inc
mov
mov
xchg
imul
pop
stc
lods
fistps
xor
fidivrs
xchg
add
imulb
jb
leave
dec
cmp
xor
sub
jecxz
pop
mov
inc
sbbl
inc
cli
pop
xor
loope
adc
inc
fisubrs
mov
add
xchg
pop
adc
pop
loopne
test
fsubrl
mov
sbbl
add
xor
dec
sarl
mov
rclb
sbb
mov
roll
adc
aam
loop
div
rcrl
pop
xor
inc
pop
pusha
loope
mov
arpl
leave
popa
lds
sbbb
ficoml
push
dec
adc
and
and
mull
repz
pop
in
push
in
jae
jl
push
jno,pn
or
sub
ficoms
add
loop
insl
outsl
dec
xor
sbb
and
lods
and
mov
aad
jne
in
cmp
cmpsb
idivl
jmp
imul
aaa
push
sub
pop
loope
inc
xchg
dec
and
inc
xchg
xchg
xchg
fmull
sbb
sbb
daa
inc
and
push
mov
pop
test
sbb
pop
les
cwtl
sub
out
sub
sub
pop
ja
pop
push
test
gs
movl
iret
add
push
lods
and
sbb
and
jge
push
xchg
shrb
test
je
rolb
sar
add
pop
roll
cld
add
xchg
pop
push
repnz
mov
das
rol
ljmp
loope
les
dec
push
pop
shlb
lfs
cmpsl
adc
pop
insl
scas
pop
add
daa
jb
xchg
push
es
insl
out
sti
dec
xor
sbb
cltd
jae
xchg
and
mov
ja
fcmovne
inc
mov
xor
mov
jnp
data16
xor
test
cs
jg
jnp
xchg
repnz
adc
add
mov
adc
imul
out
xchg
std
test
add
mov
push
dec
push
ret
and
inc
or
pop
lret
shrl
jg
jo
or
cld
jmp
dec
add
mov
inc
insb
add
outsb
add
jmp
nop
jae
xor
js
ret
mov
dec
mov
cmp
mov
rorb
pop
lret
rcl
jno
out
aaa
or
lcall
dec
or
mov
sbb
mov
pop
icebp
jecxz
mov
enter
fwait
aad
push
mov
fldt
ret
dec
dec
mov
cli
or
data16
sbb
in
andb
and
sbb
jne
inc
fadd
rep
sbb
iret
pop
lods
dec
dec
xchg
xchg
rol
daa
pop
sbb
push
jecxz
adc
lods
shrb
pop
rclb
imul
fwait
jo
mov
jbe
push
fs
insl
pop
sar
xor
aaa
jns
scas
stos
jns
sti
jnp
mov
xchg
push
sub
dec
mov
jno
adc
push
xchg
or
adc
arpl
scas
dec
mov
neg
fisubrl
inc
dec
bound
mov
or
sahf
jmp
add
adcb
cmp
pusha
add
sahf
inc
push
les
jno
faddl
and
sbbb
inc
lcall
dec
xchg
push
sub
adc
test
jecxz
xchg
inc
jno
outsl
dec
push
push
push
jbe
ss
mov
adc
adc
mov
insb
test
addl
push
in
dec
inc
mov
jle
dec
ret
push
mov
hlt
or
cwtl
jo
and
aam
aas
and
sub
jp
ret
adc
aas
hlt
rcll
sub
cli
mov
fbstp
scas
adc
xor
and
or
mov
inc
addr16
callw
cmp
idivl
push
stos
movsl
sar
int
inc
dec
xlat
and
mov
aam
aad
inc
push
pop
ljmp
popa
add
add
adc
and
adc
push
push
pushf
xchg
and
js
fs
shrb
or
xor
lea
hlt
sub
jnp
int
adc
adc
mov
cmp
sbb
mov
sarl
subl
ljmp
mov
push
popf
test
mov
popa
mov
xlat
popl
in
scas
adc
rolb
and
push
addl
push
pop
mov
fwait
je
jmp
es
mov
push
jg
dec
daa
lcall
addb
cmp
shll
jns
test
dec
dec
cmc
ret
stc
fwait
xchg
adc
seta
loop
cmp
aaa
mov
push
test
lock
pop
xchg
mov
or
daa
arpl
or
and
loop
xchg
lock
xchg
adc
clc
mov
pop
jl
inc
sub
ret
clc
dec
repnz
rcl
lea
and
sbb
gs
mov
mov
lods
andl
and
push
nop
push
lea
mov
adc
jns
iret
pop
sub
push
mov
repz
fs
mov
pop
add
mov
rcll
add
jbe
aam
sbb
jecxz
mov
shll
jecxz
adc
dec
xlat
inc
mov
test
int
lret
jns
sub
pop
and
and
stos
cmpsb
scas
jb
sub
dec
sahf
pop
inc
cmp
push
imul
mov
dec
rcrb
rol
adc
popa
insl
xchg
rcrl
jno
scas
push
ja
popf
shlb
int
xchg
movsl
dec
lret
adc
jo
or
mov
les
nop
pop
mov
mov
aad
ljmp
js
and
jne
shlb
loope
sbb
nop
push
xchg
xor
addr16
je
mov
fiadds
or
lahf
leave
and
cmp
call
push
jl
cmp
cltd
xchg
movd
sbb
test
scas
add
call
dec
dec
dec
add
mov
push
mov
pop
test
imul
loopne
movsl
add
jmp
loopne
cmc
add
adc
pop
dec
mov
push
aaa
add
dec
jbe
aam
push
adc
inc
xchg
push
je
pop
mov
clc
mov
dec
icebp
jne
add
add
adc
sbb
jno
sub
jg
test
loope
outsb
lods
and
gs
roll
jecxz
adc
or
out
or
pop
testb
push
xor
ljmp
xor
aad
mov
iret
pop
hlt
int3
lea
sarl
mov
push
push
mov
adc
inc
pop
jg
dec
shll
test
dec
cmp
mov
push
pusha
xchg
sbb
add
push
enter
sbb
fisttpll
lds
adc
sub
lcall
adc
inc
pop
xor
out
outsl
xchg
les
adc
xchg
cmpsl
loop
sbb
std
jo
mov
adc
dec
arpl
jg
xchg
and
xor
aad
jne
jo
loopne
jmp
sbb
rcl
lock
adc
jmp
sbb
xchg
int3
dec
mov
fidivrl
jno
add
adc
rcrl
and
mov
adc
sbb
fstl
icebp
test
ret
xor
xchg
cmc
mov
or
dec
ret
add
stos
mov
or
je
fs
pop
es
hlt
cmpl
push
stos
movsb
xadd
in
ret
pushf
sub
stos
lcall
jns
mov
and
add
inc
cwtl
push
cmp
xor
fwait
or
sbb
movsl
stos
jge
adc
lahf
and
mov
dec
insl
in
inc
sbb
sbb
cltd
test
rcrl
cmc
cmp
popa
adc
lea
imul
movsl
inc
lea
stc
push
push
inc
dec
insb
sub
adc
jb
jge
push
jo
add
ja
and
leave
in
inc
add
sub
popf
adc
xor
cmc
movsl
mov
mov
nop
pusha
cmp
push
sbb
push
xchg
adc
neg
pusha
mov
mov
inc
jo
ret
and
add
mov
js
sub
or
sbb
cmp
test
test
or
mov
aad
add
popa
loop
pop
sub
xchg
cltd
mov
sahf
push
test
mov
div
dec
imul
add
ret
xchg
mov
dec
jmp
push
and
or
aas
gs
loop
addb
arpl
aad
push
std
fadds
jecxz
loopne
aam
leave
fisttps
imul
stos
lret
test
enter
jb
inc
ret
hlt
pop
sub
mov
imul
mov
int
mov
sbb
cltd
push
fildl
pop
add
xor
xlat
out
or
addb
dec
cmp
jno
mov
stos
add
stc
fildll
shlb
aaa
out
push
mov
rclb
outsl
int
test
shlb
cmp
rolb
das
fwait
in
test
push
xchg
dec
push
or
push
pop
xor
call
and
xchg
aad
std
mov
fiaddl
mov
mov
push
sbb
dec
xchg
lock
pop
insl
sub
jmp
sbb
movsl
add
xor
into
adc
jmp
subl
addb
jmp
stos
jmp
movsb
ljmp
dec
inc
ljmp
cltd
imul
push
push
mov
gs
lock
or
xor
jmp
push
adc
aaa
rcl
mov
mov
inc
lods
dec
push
shll
sbb
fdivrs
das
pop
jne
rcrb
mov
lret
lea
sbb
mov
insl
adc
stc
andb
adc
dec
nop
jns
in
jmp
xor
pop
jmp
sub
push
out
ret
adc
test
pop
test
add
aaa
insl
int
imul
sbb
mov
movsl
clc
cmp
lea
mulb
andb
cwtl
scas
mov
mov
ret
test
mov
jecxz
mov
movaps
pop
pop
cmpb
sbb
or
pusha
add
test
push
jbe
in
dec
mov
or
insb
or
push
sbb
mov
sbb
dec
sub
insl
gs
push
mov
pop
add
scas
adc
mov
xchg
sub
repz
push
sbb
gs
cmp
ds
sbb
inc
xor
adc
mov
xor
pushf
fs
movl
cltd
mov
sarl
pop
icebp
ror
adc
pop
lret
cmp
adc
mov
xor
iret
mov
pop
xchg
cmp
add
in
clc
je
stc
mov
xlat
inc
vandnps
imul
lock
push
ret
pop
bnd
push
cmp
mov
int
loope
xor
cmp
push
lea
dec
xlat
inc
pop
inc
push
xlat
sbb
sub
ds
mov
loop
mov
lods
jg
sbb
mov
loop
aad
push
add
sbb
es
dec
test
pop
dec
xchg
push
gs
js
data16
jnp
xchg
mov
cltd
jae
les
pop
aad
dec
or
addr16
mov
sbb
out
pop
in
fdiv
jo
inc
sub
push
adc
movsl
loop
jns
fidivrl
aad
inc
js
rorb
adc
loope
xchg
daa
pop
out
and
popa
call
insl
sbb
nop
xchg
mov
call
rcll
xorb
inc
fsubr
sbb
pop
and
adc
dec
jnp
add
pop
testb
and
mov
icebp
ljmp
mov
pop
aad
mov
sbb
rolb
mov
dec
mov
ret
js
jne
dec
loopne
lock
and
push
mov
pop
xor
stos
adc
cmpsl
adc
aaa
lods
icebp
in
xor
mov
mov
aas
push
pop
xchg
test
scas
in
pop
mov
or
jbe
mov
dec
xchg
mov
or
xlat
sub
xchg
loop
scas
les
test
loop
dec
sbb
fistl
imul
and
push
scas
sub
push
gs
fs
inc
ja
jl
jo
push
mov
inc
shll
cli
popa
mov
adc
je
fidivl
fsubl
and
scas
jecxz
cmp
int3
xchg
mov
fidivrs
cmpsb
adc
dec
or
mov
jge
nop
lret
xor
mov
fsubp
adc
mov
pop
mov
push
scas
inc
loopne
sbb
imul
adc
push
popa
icebp
sbbb
cmp
add
daa
adc
xchg
pop
dec
jmp
mov
add
mov
or
mov
push
std
mov
mov
jne
movsb
sbb
jp
jle
push
and
cmpsb
push
cmp
mov
stos
vmovddup
dec
mov
mov
cmc
cmpsb
pusha
adc
sbb
cmp
xchg
loope
inc
inc
adc
jge
shlb
inc
or
sub
mov
test
imul
push
mov
mov
cmpsl
sbb
popa
repnz
test
xchg
push
mov
dec
sub
fcomi
push
aaa
xor
pop
xchg
loope
faddp
shlb
addb
test
outsb
loopne
dec
cmpsl
jecxz
jmp
mov
pusha
test
cs
popf
inc
xlat
mov
cmp
imul
mov
adc
imul
or
jae
ds
xlat
repz
std
xchg
mov
das
int
sahf
mov
lret
push
sub
and
sbb
or
subb
xor
jno
pop
xchg
mov
xorl
adc
loope
xlat
and
adc
es
sbb
xor
mov
adc
cmpsl
adc
push
cmp
xor
outsl
stos
movl
xchg
dec
mov
cwtl
xchg
cmp
pop
sub
arpl
mov
scas
dec
ret
stos
je
out
scas
std
push
hlt
shl
movsl
mov
movsb
xchg
push
inc
es
repz
mov
cmpsl
pop
mov
jp
cmpb
inc
jb
cli
mov
pop
out
pop
xor
sti
jnp
jl
mov
adcb
dec
or
or
inc
stos
xchg
ds
fwait
pop
push
jecxz
fwait
dec
pop
inc
rcl
addr16
fistpll
and
rcrl
out
test
or
lods
jmp
pop
lds
cmp
sbb
aaa
movsb
dec
mov
add
pop
in
jbe
popw
jnp
mov
divb
lret
push
xchg
and
sbb
loope
jne
pop
push
pop
clc
test
sub
jl
jmp
mov
add
nop
jge
xchg
and
push
imul
xlat
test
push
insl
mov
push
mov
fwait
sbb
mov
in
outsb
fwait
mov
inc
pushf
sub
int
inc
mov
xchg
out
insb
jp
mov
lock
lock
mov
cmp
pusha
add
cmpsb
mov
inc
int
enter
repnz
and
push
mov
lods
adc
inc
push
mov
dec
inc
xsave
xor
mov
lods
add
ret
loop
int
imul
sub
pop
sub
or
adc
mov
xor
pop
sub
push
or
adc
inc
in
mov
sbb
xchg
enter
push
sbb
lcall
add
or
mov
jbe
adc
std
jne
inc
sub
inc
inc
and
fwait
jmp
sub
testb
cmp
sbb
push
push
lods
outsl
jle
sub
or
mov
scas
or
sbb
pop
sti
sub
xchg
inc
xchg
xchg
cmp
cmpsb
sub
loop
insl
mov
sti
inc
bound
imul
ja
mov
pop
test
pusha
sbb
and
rolb
mov
sub
cwtl
loopne
sbb
fs
jle
jns
ret
test
shll
ss
cmpsb
scas
idivl
je
xchg
push
loope
cwtl
dec
ret
jne
add
push
sahf
add
add
loope
and
aaa
inc
fxch
pop
sub
inc
loopne
addl
sub
aas
push
pop
and
movsb
test
and
mov
addr16
cwtl
and
cltd
cmpsb
shll
sbb
imul
xor
sti
test
push
pop
pop
aam
adc
dec
in
ret
jmp
dec
hlt
test
out
xchg
cmp
push
xlat
lods
nop
sub
in
mov
adc
ficompl
jg
xchg
lcall
hlt
dec
popf
mov
repnz
lds
lock
dec
xor
adc
loope
fimull
jmp
xor
mov
and
mov
ret
sbb
jmp
jo
fistl
es
add
sbb
cmp
inc
dec
cmp
outsb
mov
inc
push
jno
add
mov
inc
adc
or
enter
scas
shrb
rcr
mov
leave
ret
mov
xchg
test
xchg
mov
mov
cld
pop
mov
jge
pop
scas
outsb
adc
mov
subl
mov
imul
mov
imul
aas
adc
test
inc
loope
ror
sub
or
lods
inc
mov
xor
fwait
dec
dec
adc
mov
mov
sbb
mov
pusha
decl
and
mov
jmp
and
add
popa
pop
aaa
xor
jg
insl
cmpsl
push
loop
xlat
fwait
sub
mov
or
cmp
sub
dec
scas
sub
js
movsl
inc
sub
jae
sbb
jge
pop
sub
xor
out
mov
pop
test
ret
fucomp
jmp
sbbl
pop
jmp
bound
and
imul
outsb
mov
dec
or
scas
or
fnsave
lods
or
flds
pusha
test
xor
fistps
jmp
sub
cltd
jns
inc
add
rcr
push
push
out
cwtl
xchg
inc
add
adc
mov
aad
push
push
std
xchg
mov
sbb
push
jmp
push
adc
add
sbb
les
dec
xlat
sub
aad
push
test
loopne
addr16
mov
popa
pusha
inc
sub
mov
leave
dec
dec
cmp
sbb
xor
movsb
popa
cwtl
push
cmp
fistps
sub
out
push
mov
xchg
test
add
sbb
outsb
mov
xor
sbb
inc
popf
mov
dec
das
jns
daa
in
mov
push
in
xor
cmp
aas
mov
sbb
sbb
jns
imul
push
into
fists
and
xchg
lret
arpl
mov
and
pop
sub
and
and
jbe
adc
pushf
xor
fiaddl
sbb
sbb
test
pushf
jmp
icebp
push
or
rcrl
or
es
ret
pop
jecxz
xchg
push
add
insl
dec
xlat
test
ret
rcrl
xchg
cmp
inc
push
mov
mov
xlat
jae
mov
mov
jecxz
mov
xor
or
pop
mov
or
sbb
imul
popa
push
pop
dec
fdivl
sarb
jbe
lods
mov
jnp
mov
fs
lahf
scas
imul
sub
adc
mov
cld
je
inc
adc
or
mov
mov
or
cltd
dec
dec
jmp
shll
leave
pop
mov
adcb
push
int
pop
or
lods
sub
pop
loopne
pop
cmp
jl
push
push
add
push
xor
mov
clc
jb
push
sarl
ss
pop
sbb
dec
inc
filds
cmp
xor
pop
cmp
add
es
scas
inc
pop
dec
fldcw
shl
shlb
cmpsb
popf
iret
add
pop
popa
pop
mov
jl
iret
push
sbb
adc
sub
das
mov
adc
stos
out
dec
dec
lods
xlat
cmp
jne
xor
das
inc
out
mov
ja
pop
es
mov
imul
push
or
inc
mov
add
xchg
push
mov
sti
adc
sbb
xor
in
mov
shlb
mov
mov
xchg
push
imul
push
push
push
jb
aas
xor
mov
leave
jno
in
dec
dec
decb
sub
add
sub
push
push
cmpb
pop
mov
andb
push
and
xchg
mov
daa
jno
pop
jne
adc
inc
jo
movsl
lock
cld
add
add
inc
rcr
ret
inc
dec
movl
shlb
or
mov
sbb
pusha
mov
cmpsb
in
loop
xor
pop
cmc
mov
jmp
test
xlat
movsb
aam
aaa
cmp
xlat
test
xchg
push
pop
adc
push
inc
xchg
sbbl
popa
push
cltd
fs
push
or
mov
outsl
dec
cmp
mov
rclb
jne
cmp
adc
loopne
and
add
jnp
jae
stos
ds
setno
add
push
xor
jo
in
popa
jmp
inc
loopne
and
xchg
add
mov
loope
add
sbb
fildl
mov
and
fisubl
mov
cmpb
inc
into
inc
movsl
ret
mov
pop
movsl
and
push
test
insb
jno
mov
cs
cwtl
mov
loopne
dec
pop
outsb
mov
cmp
add
xchg
popf
push
test
daa
js
sbb
leave
outsb
xlat
add
pusha
mov
shlb
iret
aam
or
and
ret
dec
out
mov
add
jne
idivl
add
xor
jg
add
push
xor
movsl
aad
cmp
call
sbb
inc
add
xchg
add
add
les
and
xlat
sub
lds
shlb
sub
inc
adc
cs
adc
cmc
sarl
adcb
icebp
lea
test
or
xchg
cmp
js
div
in
hlt
movd
subl
popa
pop
test
and
std
jl
cmc
cmp
fstpl
and
adc
jae
cmpsl
xorb
mov
dec
lsl
and
test
stos
push
arpl
add
adc
mov
mov
dec
mov
add
scas
loop
addl
adc
dec
adc
cmp
mov
dec
xchg
ss
leave
aam
rcrb
jge
outsl
xlat
aaa
shlb
enter
ljmp
cmp
dec
and
inc
test
xor
enter
data16
loope
adc
pop
orl
and
adc
shrl
sub
test
push
xlat
mov
xlat
adc
jle
add
sahf
pop
sti
adc
inc
mov
mov
mov
pop
es
fdiv
xchg
lock
xchg
push
in
cmp
popa
hlt
lcall
xchg
dec
push
insl
and
xor
or
push
popf
or
inc
mov
inc
das
movsl
push
jnp
mov
sub
jp
sarl
leave
xchg
jno
fs
sbb
jg
enter
pop
add
mov
lds
rorb
xchg
sub
push
xor
xchg
push
cltd
jecxz
mov
mov
sar
ds
cmc
adc
sub
cli
mov
pop
lcall
jo
mov
lds
push
mov
in
cmp
mov
movsb
loop
mov
lods
adc
je
cmpsl
in
lcall
adc
pop
push
and
in
cmpsl
jle
sbb
test
and
inc
subl
call
xchg
fadds
adc
out
pop
and
mov
jo
lret
les
mov
mov
dec
or
and
push
jl
je
adcl
daa
popa
leave
jo
push
xorl
push
pop
xor
insl
or
mov
arpl
inc
mov
or
add
and
push
inc
in
jno
andl
lock
jp
or
dec
push
imul
int3
lock
cmp
cmp
xor
jno
cmp
lds
sbbl
adc
stos
adc
add
scas
mov
jge
push
daa
push
cmp
rolb
add
loope
shll
pop
jecxz
dec
dec
cmc
lock
out
add
push
pop
repnz
sti
outsb
ljmp
jne
inc
cmp
push
lret
push
les
aaa
xchg
mov
jle
lcall
add
jb
jb
mov
es
sarl
xchg
push
cmc
out
je
popa
mov
xor
test
xchg
mov
add
clc
mov
cmc
push
jle
lcall
xchg
ret
repz
or
std
mov
add
pop
cmp
cmpsb
lret
sub
sbb
sbb
mov
das
adc
iretw
xor
jno
and
lea
jnp
in
push
mov
mov
jp
sub
xor
jecxz
mov
adc
mov
js
test
jno
test
adc
or
jno
ror
lea
shlb
insb
add
mov
sub
inc
inc
jo
sbb
mov
pop
jae
popl
dec
movsl
or
xor
stc
jecxz
scas
rorb
loope
jae
pop
xchg
icebp
icebp
add
imul
ret
jbe
ret
push
cltd
out
popa
in
add
adc
in
lret
push
or
cmp
nop
cs
pop
rorl
push
mov
mov
lcall
rcrl
lahf
faddp
sub
aad
and
in
xchg
std
psubsb
outsb
loop
decb
movsb
sbb
in
sub
imul
mov
xor
push
rolb
inc
mov
lcall
scas
sub
out
bound
dec
aad
add
mov
fnstenv
inc
insb
xor
dec
mov
or
je
fwait
es
cmpsb
fwait
ror
inc
lods
push
sbb
lret
lods
inc
dec
pop
mov
aam
cmp
pop
inc
je
pop
imul
fistl
push
repnz
xchg
jne
call
cltd
sti
imul
sbbl
or
add
test
mov
xor
icebp
lods
adc
add
adc
fwait
sbb
pop
insb
xor
imul
movsb
adc
cwtl
dec
push
repz
xchg
jne
enter
out
cwtl
stc
or
push
mov
sub
mov
add
adc
adc
imul
and
cmc
pop
mov
sbb
iret
icebp
pop
subb
xchg
repnz
mov
imul
xchg
cwtl
cltd
pop
inc
xchg
xchg
cmpsb
cmp
es
daa
ficomps
lock
and
shrl
je
jle
xchg
into
and
xor
cmp
jno
adc
dec
xor
je
les
loop
push
sub
movq
movsb
mov
jg
loope
inc
popa
inc
dec
fwait
mov
je
mov
or
lcall
aaa
loop
fbld
ret
in
rcrb
or
xor
ja
xchg
test
and
mov
fnstcw
push
dec
xchg
cmpsb
pop
mov
jnp
xor
jo
aam
inc
loope
xchg
int
push
sub
pop
add
fnstenv
sub
push
gs
and
mov
xor
movb
outsb
pop
add
dec
xchg
mov
pop
dec
out
cmp
js
jb
xchg
es
add
std
xchg
and
push
loope
or
je
xchg
mov
leave
mov
sub
xchg
pop
xchg
movsb
adc
ja
mov
dec
mov
dec
loop
pushf
scas
rorl
fcomip
lock
dec
cmp
push
adcl
je
loope
jno
and
add
icebp
aam
xlat
add
mov
cmp
aad
jns
xor
jb
je
jo
pop
adc
icebp
imul
jno
jno
or
imul
push
hlt
scas
dec
mov
sbb
out
js
std
xor
adc
nop
loope
push
jmp
sbb
movsl
lods
push
gs
popf
cmp
mov
outsb
enter
or
cmp
outsl
cmp
xchg
nop
jecxz
jnp
test
push
xchg
lods
loopne
push
jecxz
push
adc
dec
pop
or
cmp
popa
orl
mov
push
hlt
cmp
mov
leave
jo
and
cmp
jnp
inc
xchg
das
lods
xchg
mov
pop
popf
aad
pop
xor
and
push
imul
and
je
jl
mov
ret
jg
xor
arpl
xor
loope
stos
or
sub
cmc
fdivs
xor
sbb
addr16
out
and
pop
fs
add
cmc
mov
mov
cmp
push
mov
adc
repz
xor
and
or
xor
lret
inc
pop
shll
cwtl
mov
or
frstor
jbe
mov
adc
imull
sbb
push
test
je
mov
push
push
pop
xlat
pop
imul
inc
jo
sub
dec
cmp
fnsave
push
dec
mov
movsl
and
push
push
inc
inc
pop
mov
xchg
scas
adc
mov
sub
pop
mov
jne
or
pop
sub
xchg
jmp
sub
sbb
sbb
out
xor
inc
mov
lea
imul
cmp
jmp
in
sbb
flds
inc
mov
outsl
js
test
or
mov
xchg
push
mov
mov
enter
dec
addl
and
loope
jle
or
mov
xor
mov
xor
adc
outsl
mov
mov
pop
and
xor
push
shlb
lods
push
xor
jle
std
mov
cltd
stos
loop
movsl
scas
add
jp
inc
cmpsl
popf
cmpsl
insb
aam
arpl
inc
leave
jle
pusha
or
scas
jmp
ljmp
xor
icebp
and
mov
fistpll
xchg
add
imul
fbstp
dec
mov
mov
jae
lds
dec
xchg
xorb
fcomi
jp
or
les
call
or
call
fwait
adc
jns
adc
push
mov
mov
das
adc
adc
lahf
xchg
mov
inc
sahf
dec
push
push
push
and
add
popa
and
cmp
inc
mov
mov
daa
out
sub
mov
push
push
loope
sub
xlat
inc
mov
mov
outsl
pushf
mov
jne
xchg
xchg
sub
icebp
xchg
inc
ret
mov
jg
inc
xor
test
jmp
jmp
push
inc
call
jae
adc
pop
popa
shll
fbld
add
jno
sti
mov
test
jmp
push
lods
and
adc
xor
ret
cltd
jne
adc
sbb
int
or
aas
lods
sub
and
fstps
push
cmp
mov
arpl
adc
lds
mov
jno
pop
adcl
sub
add
sub
loop
and
popa
test
lret
lea
je
xor
mov
lahf
jae
mov
mov
fwait
mov
pusha
xor
sti
loopne
xchg
add
xor
dec
jae
jp
outsb
mov
xchg
sbb
cmp
mov
add
sub
and
ret
dec
pop
loope
mov
es
xor
dec
dec
movsl
adc
bound
xchg
int
dec
lods
fstpl
loopne
jecxz
test
or
jbe
cmc
jge
rclb
jmp
push
std
mov
js
subl
push
lcall
or
mov
pop
push
pop
jbe
add
lret
push
out
mov
iret
sub
lds
xor
or
imul
push
iretw
inc
movzbl
sbb
jne
xchg
xor
and
mov
sti
jno
aam
mov
popf
cmp
add
aaa
jg
pop
pop
push
mov
mov
push
add
and
mov
insb
pop
or
daa
pop
rorb
and
mov
xor
jmp
shlb
pusha
les
lods
out
sbb
ljmp
jge
outsb
push
dec
je
dec
lret
ret
andb
or
and
or
movsb
jecxz
daa
dec
and
mov
repnz
imul
or
cmp
xor
cmp
jecxz
nop
loopne
lret
jecxz
xlat
test
std
mov
pop
mov
and
mov
cltd
vpsubw
cmp
sar
inc
push
loope
cltd
mov
pop
push
int
mov
negb
jl
jle
mov
call
inc
loop
movsb
fstpt
enter
lcall
or
ljmp
cltd
out
add
push
cmpsl
lcall
inc
cmpsb
or
add
inc
outsl
pop
lea
jmp
adc
xorb
push
or
mov
shlb
jne
pusha
bound
mov
xlat
aas
add
aam
mov
inc
hlt
push
mov
icebp
mov
loop
sub
push
or
lcall
mov
add
mov
or
mov
xor
fwait
push
mov
jbe
aad
inc
add
cmpsb
jmp
pop
jmp
xor
inc
stos
or
and
out
orb
jmp
add
sub
shll
outsb
adc
lcall
jo
xchg
push
dec
faddl
negl
out
dec
jae
aad
or
dec
xchg
sbb
pop
xor
mov
push
jge
lds
popf
push
into
inc
pop
es
sub
sbb
cmc
popf
jecxz
xchg
xorb
jbe
xor
pushf
and
test
sub
cmp
dec
mov
in
jne
stos
test
call
xchg
sbb
push
or
adc
popa
adc
mov
data16
cs
add
cmpsl
and
push
and
add
imul
sbb
xchg
mov
fbld
js
mov
int
cmpsb
adc
mov
push
sbb
inc
jp
adc
and
stos
mov
jl
je
bound
hlt
push
pop
inc
add
xchg
loope
in
mov
sbb
test
lods
ljmp
xor
in
fwait
pop
stos
dec
xor
jmp
xor
push
inc
sub
mov
or
outsl
mov
and
jbe
jge
and
mov
inc
xor
xchg
mov
popa
mov
sub
mov
ja
jmp
sub
push
aad
shlb
dec
ja
fcom
imul
imul
bound
jo
mov
add
xlat
or
mov
add
ret
add
push
fwait
xor
mov
adc
cmp
leave
pop
xor
push
and
dec
cmp
xor
mov
scas
add
xchg
jo
xor
add
lods
push
xchg
cmp
ja
rcll
xchg
inc
cltd
xor
fisubrl
test
aaa
orl
push
rorl
push
or
add
pop
jae
xchg
ss
xor
retw
xchg
outsb
repz
pop
add
adc
inc
test
fsts
add
imul
cld
inc
mov
ret
or
push
in
adc
inc
add
icebp
adc
ret
add
adc
test
sub
inc
adc
dec
sbb
mov
loope
adcb
add
lods
cld
push
push
pop
inc
sbb
sub
or
pop
add
lcall
push
adc
aam
adc
popa
jle
test
adc
outsb
add
and
fistps
hlt
rcll
mov
loopne
dec
jbe
rclb
in
sub
xor
xchg
mov
cli
insb
std
mov
sbbl
inc
add
mov
xchg
push
xchg
or
aas
clc
mov
sub
push
shlb
push
cmp
mov
cld
leave
inc
inc
mov
xor
jo
inc
les
xor
inc
push
add
push
call
clc
push
add
sub
int3
and
addl
inc
adc
push
shlb
or
jp
add
mov
cmp
add
and
xor
jl
inc
mov
ror
rolb
pop
push
sbb
dec
adc
pop
mov
out
leave
mov
push
inc
push
xchg
je
dec
dec
add
leave
in
add
aas
outsl
or
test
cli
and
in
jnp
dec
push
dec
mov
arpl
jo
cmp
mov
iret
es
inc
xor
mov
sub
mov
lahf
push
subb
roll
xor
mov
shlb
js
push
xor
imul
add
ja
or
mov
scas
popl
sbb
push
or
xor
cmp
inc
leave
repz
aaa
popa
and
sub
mov
pop
icebp
out
push
pop
sbb
fimuls
out
push
sarl
outsl
out
cmpsl
inc
lret
bound
dec
push
jbe
sub
fsts
cli
das
or
mov
inc
jg
add
inc
adc
dec
pop
inc
jb
jmp
push
je
inc
push
xlat
and
repnz
cld
push
je
in
das
jo
xor
repnz
or
xor
dec
add
sub
inc
add
je
lea
pop
outsl
xchg
loopne
add
in
push
push
jmp
xor
inc
lahf
mov
dec
adc
mov
jbe
dec
imul
add
dec
pop
insl
xor
dec
dec
pop
ss
test
dec
outsl
mov
outsl
movl
mov
inc
add
xor
inc
movsl
sub
in
rcrb
inc
aam
inc
mov
dec
dec
inc
and
pop
test
cli
xor
add
jne
inc
cmp
outsl
adc
push
popa
jo
in
pop
jl
mov
out
fiaddl
jns
jg
lods
xor
adc
mov
popa
inc
lods
aaa
pushl
pusha
push
repnz
push
adc
pusha
push
notl
add
jg
and
jns
dec
dec
mov
fs
pop
pop
aas
mov
inc
jno
aaa
xchg
pop
notl
dec
pop
pop
pop
in
in
popf
in
nop
dec
idivl
xor
pushf
xor
and
or
push
add
push
data16
push
lcall
test
push
add
mov
inc
inc
and
sbb
add
in
and
push
adc
ss
mov
add
mov
xor
mov
inc
jl
dec
lds
add
cmc
outsl
adc
push
mov
arpl
clc
orl
pop
xchg
add
xorb
shlb
inc
push
mov
or
dec
cmp
inc
add
paddq
mov
mov
dec
push
pusha
lret
mov
push
ss
clc
arpl
mov
push
jbe
ljmp
rorl
xchg
stc
mov
add
pop
or
shrl
sbb
imul
cld
loopne
add
shlb
lods
inc
push
data16
out
jg
push
pusha
rorb
cmp
mov
cmp
into
and
dec
xchg
sbb
dec
dec
jno
or
pop
cmp
sarl
js
jbe
stos
js
data16
xor
jns
sbb
daa
cld
adc
xchg
dec
pop
mov
mov
push
jo
mov
mov
imul
inc
lock
xor
dec
sbb
push
das
pop
cmp
pop
dec
add
push
sub
sbb
cld
push
arpl
mov
and
jbe
ljmp
hlt
jae
test
ljmp
inc
arpl
pop
lock
dec
jo
fidivrl
rcrl
jl
pop
or
push
fcoms
arpl
add
jecxz
push
dec
add
and
repnz
push
ds
mov
loop
adc
push
inc
push
ficoms
mov
push
jp
push
jb
inc
sub
call
ss
aaa
inc
push
dec
xor
js
mov
and
jo
push
jge
add
outsl
bound
pop
dec
test
out
ljmp
jb
xor
subl
dec
push
fimuls
cmp
inc
push
adc
inc
fs
loopne
cmpsl
xor
push
inc
pop
fnstenv
add
add
push
out
lret
push
or
mov
mov
xor
fs
add
inc
adc
icebp
mov
or
ret
mov
push
dec
pop
push
ja
jne
push
push
fidivs
push
hlt
loopne
ja
xor
push
mov
add
ja
cli
imul
jno
sbb
dec
jb
inc
push
adc
lock
sti
sbb
jle
out
sub
data16
cmp
outsl
xorb
mov
ljmp
xlat
jns
imul
test
roll
test
subl
push
jmp
dec
xor
clc
inc
inc
dec
push
aam
sbb
pop
loop
punpckldq
push
sub
sbb
sub
push
stos
lock
data16
fs
loopne
daa
movsb
addr16
push
int
mov
push
inc
xor
bound
add
dec
pop
cld
mov
outsb
push
lret
sbb
fiaddl
inc
or
add
sub
fnstenv
aam
icebp
pop
cmpl
lock
xor
dec
sbb
push
add
inc
cmp
add
dec
lock
popf
loopne
or
sbb
jno
add
ret
fs
ja
mov
push
sub
iret
mov
stos
dec
pop
mov
mov
inc
mov
xor
or
mov
or
dec
mov
sbb
xor
ret
ficoml
inc
pop
xor
adc
mov
mov
pop
imul
dec
mov
popa
xor
ljmp
leave
les
lock
daa
inc
popf
jmp
loop
je
pop
scas
cmpsl
insl
icebp
sbb
stos
mov
dec
cwtl
aad
sub
stos
popf
call
push
inc
inc
fs
xchg
adc
call
xor
jo
push
call
gs
dec
gs
addr16
scas
pusha
stos
aas
fdivrl
xor
aaa
inc
dec
add
jbe
dec
jne
xor
out
call
pop
mov
and
mov
adc
sub
jbe
jge
pusha
jbe,pt
aaa
inc
mov
stos
testb
je
xor
xor
cli
ss
dec
cs
sub
xchg
sub
fdivl
jbe
or
fs
pop
inc
add
cs
decl
push
ja
lock
iret
fs
inc
push
add
push
mov
cmpsl
call
and
clc
sbb
dec
add
cmc
cmpsl
fsubs
push
xlat
dec
mov
fmuls
sbb
jo
jns
sbb
mov
push
push
mov
xor
adc
mov
loopne
stos
test
push
movl
xchg
push
popa
insb
add
add
test
jne
out
or
pusha
dec
outsb
dec
xchg
sbb
ret
jge
lock
mov
inc
pop
mov
push
insb
inc
jbe
add
xorb
scas
push
jns
inc
add
and
sub
jne
xor
and
jge
add
push
inc
call
pop
xor
jbe
jl
mov
sub
jb
daa
fidivs
jle
xchg
ds
nop
arpl
push
xchg
mov
addl
cmp
imul
xchg
loopne
dec
adc
dec
mov
mov
jo
loopne
ja
outsb
std
mov
push
sbb
cmp
push
incb
jecxz
in
inc
pop
xor
data16
cmp
pop
enter
pop
sub
jg
cmpsb
or
enter
dec
sbb
or
jno
add
daa
loope
jmp
pushf
pop
xchg
pop
loopne
jmp
mov
lock
push
push
fwait
push
enter
push
push
jno
pop
mov
in
push
js
movq
jno
insb
xor
loop
jne
adc
loopne
enter
arpl
sub
inc
cmp
outsl
repz
ja
mov
push
inc
or
loope
arpl
add
inc
mov
ret
or
cmpsl
cmp
sub
decb
xor
clc
test
dec
pushl
cmp
or
fcompl
rolb
push
xchg
pop
push
sbb
mov
jno
mov
sbb
or
movsl
mov
jbe
movsl
and
lea
cmp
ss
ret
insl
js
fdivr
ljmp
sub
mov
mov
add
adc
inc
sub
adc
sbb
jecxz
adc
or
and
imul
inc
mov
int3
inc
pop
ss
lahf
in
push
fs
cmp
cvttps2pi
fldl
arpl
stc
ss
dec
sub
or
jne
dec
sub
rcll
add
and
pop
pop
inc
mov
dec
mov
and
push
jb
iret
xor
push
out
dec
add
cmp
add
mov
test
add
ljmp
push
dec
lock
sub
push
js
inc
dec
jecxz
push
xchg
fnstenv
mov
bound
cmc
sbb
insb
insl
shl
xor
popa
jle
push
pop
sahf
outsl
arpl
push
mov
test
pop
ret
nop
jb
daa
out
clc
jne
inc
add
inc
jns
js
out
or
jle
sbb
mov
mov
xchg
jo
out
inc
inc
pop
cmp
push
push
xchg
or
addr16
sbb
push
inc
insl
sub
add
loope
out
je
mov
push
add
loopne
ficomps
jne
push
popa
iret
call
jno
push
loopne
add
inc
leave
pop
aad
in
js
cld
fsubp
out
dec
dec
dec
dec
add
fwait
jne
aad
or
dec
inc
call
add
test
mov
push
mov
or
sbb
fs
pop
push
push
sbb
adc
je
loop
add
test
pop
sbbb
mov
aas
imul
fcomps
pop
cwtl
mov
js
xchg
cmp
lahf
test
sub
andb
adc
add
inc
call
stos
sbb
cwtl
test
mov
add
pop
test
mov
xor
mov
stc
inc
inc
mov
pop
imul
rcrl
add
data16
cmp
shr
insl
dec
sbb
scas
xchg
jecxz
cmc
or
je
stos
inc
iret
shl
imul
movsb
pop
xor
or
cmp
in
pop
gs
mov
pop
pop
and
shl
xor
sbb
faddp
lock
sbb
ficomps
inc
insb
mov
or
adc
mov
xchg
pop
inc
scas
pop
and
xchg
push
in
mov
popf
shrb
das
jle
adc
vunpckhps
and
stc
fmull
mov
lret
addr16
imul
sbb
stc
pop
jecxz
xchg
addr16
pop
lds
cmc
rcll
mov
xor
jle
inc
adc
xchg
mov
or
push
fwait
cmp
sbb
push
cmpsl
mov
icebp
inc
bound
cmpsl
inc
or
xor
jo
mov
xor
mov
stos
xchg
into
nop
shl
or
hlt
mov
outsl
sub
aad
inc
inc
scas
loop
in
or
push
bound
call
pop
push
mov
xchg
imul
xor
dec
push
or
xchg
mov
or
cmovl
sarb
jbe
test
cwtl
xchg
fbld
shlb
mov
mov
call
push
subb
jae
mov
cmp
leave
and
pop
or
in
inc
and
xor
ret
push
jo
xor
mov
cmp
push
mov
or
loop
or
jno
sti
es
in
lret
cmp
pop
xchg
icebp
xlat
push
xchg
mov
in
sub
loope
std
inc
ret
nop
push
and
lods
mov
jo
mov
push
pop
mov
and
add
xchg
in
insb
jecxz
call
imul
adc
out
andb
and
sub
lds
sub
push
subps
inc
jae
gs
sub
jge
adc
aaa
testl
rolb
lret
xor
jne
rcll
jns
push
pop
hlt
push
lock
add
inc
aam
sbb
cmpsl
mov
inc
inc
lcall
xor
xchg
imulb
push
je
cmpsb
lods
cli
mov
das
add
pop
dec
mov
jnp
dec
mov
dec
sbb
lret
movsl
or
or
pop
pop
push
cmp
loop
xor
leave
push
or
test
imul
in
sbb
outsl
scas
or
push
jl
dec
mov
xchg
je
orl
mov
loopne
in
or
cmp
mov
in
movsb
rcrb
icebp
pusha
inc
mov
stc
popf
sbb
outsb
xor
pop
mov
xorl
mov
mov
add
movsb
call
adc
scas
inc
sbb
sbb
cmp
stos
imul
scas
add
mov
cltd
jmp
xchg
andl
jmp
inc
mov
mov
xchg
sbb
cmpsb
dec
mov
pop
add
addl
or
aad
andl
mov
pop
jno
hlt
mov
andb
cmp
inc
pop
adc
sbbb
mov
mov
cmc
mov
pusha
xlat
xor
sbb
jne
and
adc
rclb
in
cmc
dec
cli
loope
jno
adc
mov
mov
test
push
sbb
mov
and
repnz
xchg
mov
cmp
xor
and
xchg
hlt
iret
adc
xchg
lock
xor
adc
jecxz
mov
cmp
adc
push
or
xchg
sbb
pop
shlb
xor
pop
hlt
call
pop
scas
repnz
add
push
mov
dec
or
sbb
gs
shll
nop
fimuls
jne
scas
mov
test
push
dec
jmp
cmpsl
lcall
stos
movsb
push
add
jo
dec
unpcklps
les
fucom
mov
inc
lds
ss
shlb
lods
push
jb
pop
dec
loope
mov
adc
loope
sbb
sub
dec
notb
in
and
xchg
out
or
dec
cld
inc
jmp
popl
push
sbb
and
adc
stos
js
add
jge
jno
sub
xchg
and
rcr
gs
jae
insb
xor
xchg
sbb
dec
les
adc
dec
cmp
xor
mov
sbb
fwait
pop
scas
into
ja
ja
int
es
nop
in
jne
test
mov
bound
dec
test
mov
push
leave
test
shr
shrl
jmp
xorl
mov
push
sbb
xchg
shrl
push
dec
add
stos
mov
int
stos
and
js
mov
rolb
inc
lret
push
cltd
aad
xor
add
xor
popa
stc
dec
jmp
iret
jp
jne
shlb
mov
push
mov
inc
add
shll
push
sbb
and
pusha
sbb
hlt
dec
push
insb
adc
or
fldenv
out
icebp
cmp
mov
push
xor
inc
push
icebp
out
cmp
call
aam
jmp
scas
cmp
stc
inc
bound
dec
imul
pusha
aad
jns
adc
cmpsl
rep
or
loop
int
push
pop
jl
stos
or
jne
mov
or
outsl
dec
add
ss
dec
sbbl
jp
xor
or
push
add
loopne
mov
ret
jns
dec
add
mov
cmp
lods
or
xor
mov
adc
cmc
jb
nop
test
or
mov
pop
test
xor
or
fidivrs
notl
push
cmp
push
cltd
fsubs
int3
je
mov
lret
mov
test
nop
xor
or
mov
int
dec
ret
rcrb
inc
inc
daa
jg
adc
push
sbb
sub
xor
icebp
push
test
xor
pop
in
rcrl
js
xor
ljmp
jo
xchg
cltd
sub
push
stos
xchg
cmpsl
pop
in
push
imul
lret
pop
xor
xor
int3
cmp
pop
in
dec
lahf
and
lds
mov
pop
add
je
fstp
andb
jmp
add
pushf
ror
pop
add
cmp
or
fxch
or
ss
wbinvd
mov
sbb
ds
sub
popa
fistl
cmc
xchg
insl
rcll
ds
dec
lea
popa
add
push
lahf
xchg
imul
jmp
dec
out
mov
sub
cs
pop
dec
jmp
scas
out
add
mov
or
adc
jno
adc
pusha
out
push
add
cwtl
je
adc
aaa
sub
xchg
mov
dec
add
fwait
ret
pop
and
stc
push
or
loope
testl
lock
loope
or
icebp
or
mov
into
out
and
jecxz
ja
pop
cwtl
lods
jecxz
fisttpll
popa
insl
mov
int
movsb
push
jne
lcall
in
sarl
js
add
push
imull
and
mov
dec
test
mov
leave
or
sub
ror
filds
push
out
xchg
and
ja
add
xchg
mov
pop
adc
lahf
adc
jno
pushf
add
aas
gs
xor
dec
push
lods
popa
scas
add
xor
push
ret
and
or
dec
lret
cmc
push
sbb
les
sub
xchg
push
test
mov
pusha
add
icebp
imul
and
add
jg
jg
push
jnp
xchg
shl
xchg
cmpsl
mov
push
push
movsl
shr
js,pn
shl
push
test
ret
and
xchg
xor
adc
movl
cwtl
pusha
add
sbb
icebp
add
sahf
mov
add
test
dec
pop
scas
jnp
cmp
test
jmp
sarl
nop
addb
popf
rcll
sub
mov
pusha
xor
adc
lret
jmp
push
mov
ret
and
jg
cmp
data16
dec
mov
hlt
push
sub
out
dec
arpl
adc
xchg
xor
cmpsb
rorl
and
iret
inc
push
pop
aaa
loopne
dec
lcall
jae
mov
leave
fwait
out
mov
dec
add
push
jge
and
push
push
pop
ja
cmp
sarb
sar
jmp
scas
aaa
fcomps
mov
inc
mov
stos
out
clc
std
mov
rcr
xor
sbb
fiadds
sbbb
mov
lea
pop
sub
int
lea
and
jne
jge
xorl
pop
or
lods
dec
rorl
jmp
pop
add
mov
inc
mov
ret
loop
call
sub
mov
xor
adc
jecxz
cwtl
inc
popw
jnp
adc
xor
sbb
clc
jns
inc
push
lods
pop
mov
fwait
out
sbb
lea
mov
sbb
lret
xchg
jl
jbe
mov
jp
inc
sub
sub
cmp
xor
lea
int
lods
xchg
cwtl
pop
sar
dec
lds
jmp
cmp
bound
js
pop
cmp
cltd
lods
push
xlat
cmpb
cmp
scas
gs
adc
xchg
repz
inc
push
xor
cmp
cmc
xchg
xchg
add
mov
pop
xor
sti
leave
jle
sbbb
loopne,pt
jo
sbb
sub
pop
lahf
mull
cmpsl
scas
jns
repz
xchg
push
jg
push
ret
addb
pushf
mov
mov
sbb
adc
push
repnz
daa
imul
lcall
add
xor
push
loope
xlat
aad
inc
dec
call
sub
in
mov
inc
jecxz
jmp
inc
add
or
mov
lds
movsl
push
sbb
adc
add
in
fs
xor
pop
mov
or
adc
or
jno
sbb
mov
cmp
lods
imul
xchg
mov
loopne
xor
frstor
inc
mov
call
bound
jl
sti
jne
jns
mov
lret
jp
mov
and
fidivrl
sahf
lahf
mov
mov
cmp
out
push
pop
mov
and
jo
jp
pop
repz
addr16
cmpsb
xchg
xchg
xchg
push
scas
dec
cwtl
mov
xorl
repnz
or
mov
inc
lcall
xorb
les
cmc
hlt
jecxz
leave
sbb
or
insb
pop
test
jg
add
fstpt
pop
outsl
insb
shll
sbbl
jmp
call
fisubrs
add
cwtl
dec
add
jbe
aas
aam
sub
in
inc
sbb
rorb
sub
dec
pop
adcl
roll
mov
lds
mov
out
pop
lea
pop
pop
scas
add
xor
lods
sub
cwtl
xchg
push
and
pop
xor
je
sbb
outsl
iret
adc
shrl
int
adc
dec
push
addl
lods
loop
enter
aad
inc
cmc
mov
clc
xor
pop
loopne
shrl
jmp
jo
orl
rorb
aaa
push
xor
or
roll
pop
lods
inc
xlat
mull
mov
add
lret
mov
dec
mov
pop
mov
dec
dec
xor
push
orb
jnp
iret
shll
adc
mov
in
sub
xlat
push
xchg
mov
lods
add
fwait
adcb
xor
sbb
insb
dec
lock
mov
xor
or
loop
or
add
jmp
shl
push
push
into
sbb
inc
lcall
insl
imul
lds
push
mov
pop
orb
push
loope
aaa
loope
leave
lcall
fwait
xor
pop
push
and
movnti
xor
or
push
mov
cli
push
into
call
mov
bound
insl
dec
into
pushf
mov
lock
cmp
movsb
lret
push
dec
sub
mov
add
repz
xor
and
and
inc
pop
fstl
cmpl
cwtl
stc
iret
shl
lods
xlat
jmp
popf
lods
cmp
mov
rcrb
inc
inc
add
fidivs
mov
loop
or
xchg
pop
inc
sbb
cmc
cmp
roll
push
xchg
ljmp
arpl
and
pop
test
jno
cs
cmpsb
hlt
call
rorb
xchg
cmc
dec
rol
popf
mov
mov
aad
mov
xor
stos
and
movsl
fadd
sub
ret
mov
pop
test
movswl
xchg
sub
sbb
mov
mov
sarb
test
jmp
inc
mov
jno
sbb
jb
inc
push
lds
xor
xchg
mov
pop
lret
stos
rcrb
sub
aam
roll
cwtl
push
push
movsb
imul
mov
cwtl
mov
xor
and
nop
outsl
pop
aam
pop
xor
test
cmp
pop
jns
mov
jge
and
test
and
ret
sbb
or
push
test
and
mov
je
test
divl
inc
inc
out
test
xchg
pop
arpl
scas
mov
stos
xor
adc
cmp
int
and
dec
fldt
pop
xchg
push
xchg
or
sub
fdivrs
ljmp
imul
inc
gs
fldenv
pop
mov
add
movsl
mov
mov
xor
dec
push
pop
outsb
adc
es
dec
lea
dec
daa
xor
adc
jns
jle
push
adc
bt
rclb
sbb
leave
push
sub
cwtl
js
test
arpl
adc
xchg
cmc
mov
add
movsb
pop
sub
push
pop
push
js
push
cmp
arpl
out
mov
scas
fwait
jge
or
enter
cmp
scas
xor
aas
push
inc
and
xchg
cwtl
push
bound
sbb
in
cmp
sub
ret
dec
sub
add
cmp
insb
adc
xor
xor
mov
mov
mov
pop
inc
dec
fimuls
lods
in
pop
push
test
popa
rol
jmp
push
xchg
jmp
add
xor
sbb
inc
xor
roll
rorl
mov
imul
subl
push
inc
and
or
add
inc
jne
ljmp
andl
mov
adc
mov
sbb
les
lods
push
cmp
jns
jmp
fdivrs
jmp
inc
mov
arpl
int
add
dec
shr
stos
xor
rorl
mov
outsl
loop
jo
sub
lods
lret
aad
jge
inc
loopne
clc
adc
sbbb
bound
nop
int
aaa
mov
dec
sbb
xchg
les
mov
lds
lret
push
subl
andb
add
jno
push
inc
dec
mov
adc
lea
cs
sbb
adc
xor
mov
jmp
jecxz
xor
pop
iret
add
pop
xchg
mov
jl
call
mov
stos
adc
jmp
int
inc
loop
dec
inc
push
repz
inc
jecxz
mov
jo
ss
mov
icebp
outsl
pop
stos
adc
push
push
jmp
aas
adc
repz
sbb
out
pop
pusha
xor
and
and
sbb
dec
jae
in
jl
inc
xchg
and
addr16
roll
cmp
push
jp
test
aam
xchg
inc
mov
and
xchg
mov
pop
imul
sbb
shll
and
xor
shll
inc
push
jb
pop
mov
jmp
and
popf
gs
add
sbb
adc
xor
add
mov
test
fcmovnbe
and
ficoml
popf
in
addr16
hlt
sti
add
fcomi
sbb
ljmp
pop
repnz
insl
and
push
roll
xlat
push
int3
mov
xor
xchg
push
dec
mov
test
ret
nop
shr
push
mov
imul
adc
push
jbe
daa
in
or
cs
inc
aam
jp
jbe
inc
or
xor
lods
scas
pop
xchg
xor
xchg
ret
test
inc
fdivrl
jne
push
leave
dec
addr16
ss
pusha
sub
shlb
xchg
push
xor
adc
sub
dec
xchg
mov
dec
mov
push
ss
pop
xchg
sahf
pop
mov
mov
jbe
jg
mov
rol
ja
cltd
mov
imul
push
sbb
lahf
out
pop
add
inc
outsb
sbb
xor
pop
mov
pop
push
mov
jmp
lock
cmp
mov
daa
andb
pop
mov
jo
test
mov
push
inc
jecxz
dec
cs
push
lea
inc
frstor
outsl
test
stos
cmp
xchg
or
cmp
cmpsl
addr16
inc
xchg
push
in
mov
movsl
mov
mov
dec
adc
cs
xor
loop
adc
xor
lods
dec
aad
push
sub
cmp
stos
xor
lods
dec
inc
pushf
test
and
loope
je
inc
lock
lahf
in
jbe
sub
xor
loop
pop
clc
adc
int3
repz
movsb
orl
jno
dec
test
call
jmp
mov
sarl
sub
in
xchg
in
push
popa
and
or
iret
mov
call
test
xchg
xchg
pmulhw
push
mov
out
and
inc
pop
push
mov
add
pop
jno
ljmp
inc
sbb
inc
ficoml
rorl
insb
enter
test
cltd
push
xor
xchg
and
or
in
stos
jo
adc
cltd
test
mov
in
mov
in
outsl
or
or
push
rcll
adc
and
mov
jne
arpl
push
mov
lret
add
xor
or
mov
pop
ss
je
inc
push
mov
jg
test
adc
int3
sub
inc
testl
mov
sar
dec
add
inc
fistps
ret
or
jbe
cmp
cmp
push
aas
mov
call
imul
icebp
pop
test
mov
scas
mov
pop
movsl
into
std
aam
jne
rol
cmp
lds
xchg
jecxz
mov
cmp
mov
add
lods
pop
lahf
and
or
cltd
nop
and
add
inc
cmp
mov
rcl
push
xchg
dec
pop
pop
xlat
imul
sub
add
push
dec
enter
stc
sbb
hlt
add
jne
and
out
aas
xchg
xchg
or
push
mov
test
sbb
loope
add
mov
mov
push
and
test
dec
mov
das
cmp
lahf
movsl
xor
pop
ret
test
sub
mov
cwtl
test
in
pushf
xchg
cmp
and
scas
mov
pop
ljmp
arpl
pop
push
popa
shlb
dec
or
lock
or
adc
mov
pop
jb
std
mov
xor
int
jmp
xchg
loope
dec
fistps
mov
cmp
scas
and
popa
sub
sarl
ret
adc
mov
pushf
pop
adc
jl
xchg
lea
pop
ds
jg
loopne
mov
imul
mov
pop
shl
into
cmpsl
addl
jmp
add
xorl
das
and
jo
cltd
jnp
mov
ret
mov
pop
push
jle
xchg
lods
movsb
mov
loopne
xor
inc
mov
xchg
mov
int
popa
or
xchg
mov
pop
dec
mov
push
jle
xor
insl
ds
ret
test
in
das
sbb
pop
dec
stc
inc
repnz
aas
icebp
fwait
shrl
arpl
sbb
sbb
or
aaa
test
mov
lods
iret
out
fidivrs
scas
push
test
xchg
outsb
or
pop
lods
aas
sub
enter
xchg
jp
xchg
jo
pop
adc
jnp
mov
inc
daa
fdivl
push
mov
in
jae
hlt
push
movsl
mov
and
add
or
dec
push
adc
xchg
jle
xchg
push
sub
add
insb
ds
jmp
jne
divl
in
out
hlt
sub
inc
rcll
fcoml
jp
pop
out
push
sub
mov
or
fidivs
push
lret
or
push
fs
stc
cltd
in
xlat
test
or
add
stc
ret
sbb
rcll
adc
and
xchg
repz
imul
and
pop
mov
dec
movsb
add
xor
sbb
fiaddl
mov
jne
sub
xchg
pop
scas
test
cmp
imul
sbb
inc
test
add
das
sbb
xlat
sub
sbb
arpl
jo
mov
mov
lods
aas
jb
inc
pusha
pusha
ja
shll
fs
adc
das
fwait
dec
sub
rol
xchg
imul
scas
cmp
push
jno
adc
lea
pop
aam
mov
cmp
xchg
jo
mov
dec
or
lahf
xor
shl
jo
pop
adc
mov
mov
dec
xchg
lret
add
add
xchg
aas
jecxz
test
add
subl
ja
shl
call
add
ja
dec
shrl
popa
xchg
pop
sbb
aaa
xchg
mov
pop
inc
push
and
xchg
pop
xor
das
aas
les
rcll
push
sub
lcall
stos
push
ret
adc
mov
mov
popa
mov
movsl
cs
out
out
roll
pop
sub
and
xchg
inc
sbb
out
arpl
jmp
in
adc
mulb
pop
dec
std
addr16
fcoml
adc
fmull
sbb
icebp
xchg
lds
notl
vmwrite
aad
popa
andb
leave
mov
pop
pop
sub
xor
sbb
add
jno
and
push
rorl
xor
cld
push
out
fs
je
stc
arpl
inc
inc
pop
in
mov
addr16
or
fdivrl
push
aad
insb
mov
add
shll
je
mov
push
arpl
ljmp
scas
fildl
pop
in
enter
mov
call
in
adc
jmp
lret
cwtl
cmp
mov
cltd
sbb
iret
pop
mov
inc
sbb
adcl
mov
imul
fsub
mov
fcom
add
int3
jo
dec
pop
fidivl
dec
popf
jne
shrb
mov
xchg
xor
outsl
xchg
pop
xor
lock
sub
popf
cmpl
mull
ret
push
nop
in
adc
xchg
push
dec
inc
dec
jns
bsf
lret
je
pop
mov
sbb
js
arpl
fiadds
mov
lret
add
test
push
inc
jle
subl
int3
lods
dec
dec
or
inc
and
orl
dec
fildll
jle
push
mov
outsl
sub
mov
mov
jo
clc
or
and
inc
dec
sub
dec
push
test
dec
icebp
loope
test
pop
and
or
sbb
and
xchg
pop
fistl
dec
pop
roll
cli
mov
or
push
fdivs
popa
hlt
jne
adc
sbb
shl
xchg
dec
pusha
lahf
orl
jne
fists
shll
notb
adcb
xlat
adcb
and
pop
mov
cs
mov
push
push
jnp
bound
imul
int3
and
int3
xor
sbb
jnp
adc
test
movsl
or
inc
mov
jo
sub
and
sarb
sub
dec
mov
outsb
xchg
es
faddl
inc
add
push
xlat
test
in
cld
jns
jnp
dec
jne
jle
push
in
scas
xchg
xchg
mov
mov
lods
jmp
ss
fadds
xchg
sub
xchg
pop
xchg
mov
ret
lods
jns
sbb
roll
dec
xchg
in
cmp
jmp
loopne
mov
addr16
lcall
jmp
cmc
dec
mov
mov
in
dec
fisubrl
mov
cld
loope
inc
cmc
leave
mov
scas
fimull
lea
adc
cmp
and
push
cltd
push
add
faddl
repz
jl
fs
inc
jecxz
stos
scas
cwtl
push
jne
loop
push
pusha
and
jne
stc
cmp
mov
push
lods
sbb
push
add
xchg
mov
jb
mov
ret
push
cmp
shlb
mov
inc
rolb
sbb
out
add
aad
lahf
xor
adc
jle
adc
mov
aad
cmpb
push
stos
mov
and
jge
lret
js
jns
adc
mov
call
mov
ljmp
fsubl
daa
and
or
and
pop
test
pop
sub
xor
ss
imul
xchg
inc
jle
insb
xchg
and
mov
popa
popf
aaa
loop
stos
fdivs
mov
lods
inc
divl
pop
test
loop
ficomps
dec
xchg
or
xor
mov
push
push
push
aad
mov
inc
negb
add
setne
mov
or
test
sub
pop
js
stos
and
adc
push
clc
add
sbb
stos
sub
xor
popa
mov
xor
push
dec
jle
jnp
icebp
xchg
aad
je
jae
ljmp
add
daa
lods
xor
and
outsl
mov
xchg
rclb
or
and
rorl
cmp
rcrb
cmp
jmp
aaa
cmpsl
mov
out
mov
inc
inc
sub
js
rol
stos
and
fcmovnu
mov
jne
mov
sarl
or
cltd
add
add
jmp
push
pop
fbstp
je
clc
insl
dec
and
jns
fimull
sub
or
in
fistpll
and
mov
cltd
jo
mov
mov
pop
pop
xor
cmpsl
dec
inc
cmp
test
push
jmp
cli
cmp
pop
jns
xchg
push
aas
outsl
into
xchg
pop
nop
lds
push
jo
and
mov
inc
addl
test
pop
cmp
lods
loope
daa
lahf
sub
pop
rcrl
daa
sar
and
in
xchg
jecxz
test
fst
mov
test
adc
and
pop
shrb
aas
jo
out
add
filds
popa
aam
and
movsl
repnz
mov
jmp
mov
cmp
rorb
xor
or
cs
pop
mov
lds
adc
sbbb
mov
fwait
je
jge
ja
ss
popa
shrb
stc
iret
inc
pop
mov
xor
xchg
adc
imul
pop
imul
inc
adc
xchg
mov
xor
cmc
sbbb
out
adc
scas
sbb
mov
mov
push
test
mov
push
imul
xchg
or
xor
lret
mov
imul
daa
mov
pop
leave
add
pop
xchg
mov
inc
sub
leave
push
or
subb
aas
mov
out
inc
ret
les
adc
add
dec
std
mov
xor
xlat
adc
cli
scas
push
pop
movsl
aaa
xchg
jae
inc
mov
outsl
xor
pushf
cmc
pop
jno
pushf
loopne
sbb
add
bound
outsb
pop
jb
or
add
cmp
or
outsl
leave
mov
cwtl
cmovbe
popa
ret
jmp
push
sbb
cmp
push
rcrl
fildll
arpl
mov
cmpb
bound
loope
push
dec
adc
xor
xchg
sarb
xchg
pusha
in
jp
or
add
and
push
aaa
sbb
scas
push
int
pop
scas
mov
add
adc
xchg
fwait
mov
aaa
aad
jmp
mov
repz
rorb
out
xor
push
stos
mov
daa
rcr
in
bound
jb
ret
pminsw
sbb
push
fadds
pop
mov
cltd
filds
mov
push
aad
imul
lds
arpl
pop
push
cwtl
jae
adc
push
xor
das
or
movsl
loop
lret
cmp
mov
iret
mov
cmp
push
cmp
dec
xor
inc
icebp
mov
cltd
in
ret
cmp
jp
test
push
test
rcll
mov
fdivrl
mov
xor
add
xor
sbb
dec
aas
outsl
sbb
rolb
bound
mov
lcall
addr16
sbb
cwtl
dec
and
inc
xor
and
cmp
popf
add
jg
gs
sub
shlb
cld
pop
xor
sub
and
sti
jne
pop
adc
and
inc
or
cli
cmp
push
mov
lods
gs
cmp
out
fcmovnbe
aas
sbb
jnp
daa
aad
pop
cmpl
daa
cmp
add
or
mov
popa
push
and
negl
add
cmpsb
or
push
dec
add
js
daa
pop
and
dec
loopne
cwtl
sbb
xor
loop
mov
rorb
push
pop
xchg
add
aaa
lock
cmp
and
sbb
filds
mov
daa
movsb
dec
xchg
cmpsb
jp
and
mov
aam
mov
jne
xor
adc
mov
adc
or
cmpsb
and
test
ret
fs
sbb
pop
ficoms
cld
aam
test
mov
push
or
mov
mov
jae
jae
and
cvttps2pi
jecxz
stos
in
es
adc
xchg
fnstenv
enter
mov
and
inc
popf
or
imul
cs
mov
movl
xchg
adc
daa
xor
push
scas
inc
sub
hlt
fmull
inc
xchg
xchg
dec
mov
xchg
scas
dec
js
push
arpl
lea
fwait
pop
lcall
jecxz
push
loope
add
mov
ja
add
out
icebp
pop
mov
sbb
mov
pop
sbb
stc
bndldx
push
aas
daa
cwtl
dec
jmp
adc
lock
addr16
jge
add
jge
push
or
sub
add
movsb
sub
dec
ret
mov
mov
popl
sbb
aad
scas
add
adc
jnp
add
andb
jb
pop
jle
inc
popf
add
mov
cld
pop
mov
cwtl
lret
test
rolb
cli
pop
dec
fildl
cltd
mov
repz
sub
add
cmc
lea
test
cmpsb
test
lahf
inc
mov
cmp
push
call
xor
into
outsb
sbb
sub
jne
movb
mov
out
ficompl
data16
sub
cmp
xor
rcrl
add
adc
negl
xlat
lock
jmp
sub
rcrb
es
movb
fistpl
cwtl
arpl
xor
insl
jno
jo
shlb
movsb
scas
pop
cwtl
inc
movsl
mov
push
mov
lods
xchg
jmp
xor
pusha
push
inc
xchg
cmp
adc
jle
cwtl
jne
das
rcr
arpl
add
lcall
sub
dec
push
in
iret
pop
add
sbb
dec
stos
adcb
add
jle
add
movsl
jo
add
or
sbb
ss
mov
mov
imul
xor
lcall
jne
fmuls
dec
adc
imul
add
pop
test
xor
sbbl
adc
cmp
sbb
ret
gs
out
lcall
adc
xlat
and
xor
popa
inc
mov
dec
rcl
pusha
lds
cmp
fnstenv
jg
push
pop
dec
repnz
add
stc
mov
sbb
adc
mov
add
cmp
adc
adc
adc
gs
int
dec
popf
adc
xchg
add
ja
pop
xor
pop
add
lds
sbb
mov
nop
insl
xchg
mov
testl
xor
insl
ror
push
pusha
jle
adc
call
dec
f2xm1
movl
lods
popa
jns
insl
movsl
movsl
scas
push
push
test
sbb
es
dec
popl
adcl
jmp
add
jne
mov
imul
add
add
dec
inc
icebp
jns
stc
and
or
dec
or
movsb
addb
pop
cmp
sub
fcoms
aas
es
mov
mov
ret
cmp
cmp
arpl
add
les
fst
mov
jnp
jno
ret
addr16
inc
xor
lcall
shrb
add
movsl
xlat
push
or
mov
out
push
inc
bound
jns
fcomip
adc
addl
daa
xchg
and
inc
pushf
xor
dec
mov
xor
cmp
movsl
out
or
out
imul
sbb
add
push
xchg
jno
or
mov
inc
mov
arpl
ss
fucomip
iret
xchg
ret
mov
test
push
imul
lods
adc
push
inc
imul
dec
rolb
les
rorb
lcall
call
insl
shrl
sbb
insl
int
add
sub
fists
mov
push
cmp
jne
ret
outsl
pop
gs
popa
stos
mov
mov
dec
mov
mov
xchg
arpl
je
dec
pop
and
arpl
lods
std
adc
jo
ds
in
add
test
outsl
into
aad
jne
es
addl
xorps
sub
mov
lcall
xor
sbb
jmp
xchg
jmp
fwait
cmp
mov
push
mov
xor
and
cli
mov
jne
shlb
pop
adc
shrb
push
sbb
adc
mov
or
jae
insl
fstpl
xchg
xchg
test
sbb
in
mov
movsl
in
adcb
sub
pusha
mov
jns
int
andl
sub
mov
test
pop
cmp
cs
outsl
addr16
ret
and
daa
add
push
lahf
in
and
lea
orl
lods
ljmp
sbb
in
mov
insb
rclb
dec
psubsw
sbb
lea
sub
ss
mov
adc
inc
or
push
add
mov
mov
push
xchg
or
or
stos
test
pop
fs
sub
mov
lcall
pop
add
jae
cmpsl
scas
add
mov
ret
mov
bt
lea
rcrb
jne
and
mov
xor
sbb
cmp
scas
mov
mov
pop
push
jno
or
mov
add
push
mov
xorb
and
stc
add
daa
rorb
xchg
or
scas
xchg
out
ficoml
mov
mov
inc
mov
test
pop
mov
lods
sbb
cmp
in
sarl
cmc
je
in
ret
mov
cs
les
cli
push
test
repz
jns
pop
mov
or
ret
subl
stos
and
xorl
addb
push
and
push
iret
sub
imul
or
sti
add
push
mov
pushf
dec
insl
mov
mov
lret
daa
fwait
cmp
xchg
push
adc
dec
or
dec
mov
jmp
dec
mov
mov
cmp
jge
popa
loopne
sub
mov
dec
arpl
jnp
mov
sub
jne
xor
push
or
cmp
push
adc
popf
das
adc
cmp
add
adc
les
add
fmull
add
lret
dec
and
fldcw
xor
add
test
imul
leave
rol
lcall
add
fwait
movl
notb
mov
dec
xlat
ljmp
mov
es
cmp
setne
rolb
stc
addr16
jp,pn
push
push
das
pop
xchg
insl
out
mov
cwtl
out
dec
ror
mov
jae
pusha
pusha
mov
outsl
push
in
sub
dec
inc
enter
push
xchg
sub
es
xor
sbb
mov
inc
sbbl
cmpsb
adc
hlt
aaa
cmp
ret
pop
mov
add
xor
sahf
mov
add
aaa
xlat
fnstsw
lods
stos
and
jno
xlat
ja
imul
arpl
addr16
lods
add
push
and
cmp
sbbl
in
add
and
mov
or
or
push
test
lods
sahf
pop
xor
pop
xor
mov
dec
inc
js
jno
jl
scas
jo
stc
mov
mov
inc
xor
push
mov
cld
fildl
lods
jmp
shrb
lcall
mov
arpl
push
sti
xorb
adc
in
decl
cmp
pop
dec
movb
cmp
adc
pusha
bound
out
lcall
lret
arpl
lock
sub
mov
or
dec
jno
push
test
in
rcrb
sahf
inc
test
pop
adc
xchg
mov
std
or
cmp
scas
push
cmp
or
push
add
sub
xor
adcl
adc
or
scas
jnp
cmp
icebp
into
gs
add
mov
push
cmp
jecxz
int
xchg
xor
int3
mov
xchg
inc
jo
sbb
in
jno
jbe
pusha
push
add
stc
mov
out
jb
imul
loope
out
addb
shlb
and
or
popf
les
xchg
sub
test
adc
or
popa
mov
dec
pop
movsl
leave
xor
aad
lret
inc
lret
push
cwtl
adc
mov
add
shrl
xor
add
xor
andl
xorl
xchg
leave
xor
insl
dec
add
sub
scas
or
pop
fwait
jmp
ret
stos
and
loope
adc
popa
add
jmp
test
mov
neg
mov
adc
aad
fsubrs
mov
jbe
sbb
xor
add
push
xchg
or
dec
cmp
std
dec
mov
add
mov
adc
cmc
xchg
jecxz
add
push
sbb
and
scas
pop
mov
jle
sub
addb
gs
adc
insb
fcmovb
inc
or
test
js
and
xor
repnz
pop
fs
mov
add
and
ss
inc
lcall
cwtl
sub
test
divb
pop
xor
je
inc
and
xor
adc
jno
nop
idivl
inc
addr16
imul
insb
fnsave
and
adcl
movsl
mov
stos
ret
or
jp
fucom
push
xor
and
cmc
xor
sbb
pop
lods
mov
or
test
jg
in
lock
push
cli
popa
inc
lcall
lds
lret
jnp
adc
pop
pop
or
mov
inc
dec
pop
loope,pt
aam
lcall
jg
dec
imul
les
rcr
mov
les
adcb
in
fnstsw
push
jmp
mov
mov
jne
es
imul
enter
mov
lret
mov
cltd
ficoml
adc
mov
dec
mov
pop
mov
xlat
test
and
fsts
sbb
int
je
call
push
mov
xlat
or
jge
add
dec
movsb
xor
incl
jbe
dec
push
mov
sbb
push
mov
addr16
jle
xor
stos
testl
xchg
insl
lahf
mov
mov
dec
pop
xlat
popf
sbbl
lcall
push
je
sub
jg
nop
pop
popa
adc
ja
outsb
pop
lods
pop
imul
cltd
pop
mov
ljmp
pop
aad
add
popf
mov
sbb
imul
adc
jno
adc
jmp
cmpsb
rclb
stc
push
fdivs
jnp
mov
outsl
les
inc
adc
mov
sbbb
test
stos
cmp
push
test
jmp
jnp
jge
pop
and
mov
pop
push
and
push
sbb
loop
insl
cmpsl
mov
test
pop
push
sbb
and
add
jl
and
push
pusha
data16
test
inc
add
loopne
jp
mov
outsb
jp
or
or
mov
ljmp
xchg
and
sbb
push
add
gs
js
inc
mov
push
sbbb
into
nop
pop
pop
test
enter
add
mov
mov
inc
repnz
xor
mov
and
adc
loope
sahf
scas
dec
in
shlb
jmp
inc
andb
ret
shr
into
movsl
imul
outsb
insb
sbb
out
addr16
sahf
out
les
adc
add
mov
jmp
sbb
inc
dec
and
add
mov
lds
adc
xchg
and
xchg
sub
xor
ljmp
or
mov
jmp
cmp
test
lods
pop
mov
stos
rolb
in
sub
and
popf
pop
rol
sbb
pop
icebp
ljmp
adc
inc
pop
cmp
xchg
mov
test
scas
and
jg
add
xchg
jmp
fildll
mov
aad
mov
sti
std
inc
sub
scas
adc
sub
and
pop
shrl
shl
movsl
gs
adc
leave
inc
cmpsb
scas
jb
clc
pop
leave
sbb
ja
xor
aas
sub
mov
aad
add
jecxz
insb
xchg
cmp
inc
orl
mov
add
push
inc
loopne
and
dec
std
lret
lods
adc
push
jg
inc
xor
test
int
ffree
or
aad
call
xor
shl
scas
pop
out
sti
sti
add
push
jecxz
in
mov
add
dec
stos
rorb
add
movsl
out
mov
popf
pop
sti
shlb
pop
cmp
dec
dec
jne
add
outsl
lods
aaa
stos
aam
addl
shrl
mov
repnz
sbb
add
std
mov
movsl
sbb
lret
xor
and
pop
and
xor
xor
mov
rcr
enter
pusha
cmp
aad
rcrl
ret
lret
inc
loopne
xor
or
ret
jne
xor
jge
pop
mov
andl
lods
push
popa
push
add
sbb
push
jecxz
je
or
push
aad
jecxz
loop
mov
add
popa
mov
imul
jae
cmp
adcl
jecxz
data16
xorl
sbb
fmull
fsubs
fbld
stc
xor
sub
nop
test
cmpsb
icebp
mov
cmc
ret
addr16
daa
orl
cmp
iret
movsl
ja
movsb
inc
add
adc
inc
mov
or
add
lahf
lds
xlat
popa
addr16
xchg
mov
xchg
add
orl
mov
imul
adcb
negl
orb
push
xchg
cmp
mov
push
icebp
dec
push
lods
pop
or
fwait
dec
test
sbb
outsl
dec
scas
xor
push
lcall
sub
scas
data16
cwtl
in
sarl
push
gs
push
int
mov
mov
dec
inc
and
in
mov
es
mov
mov
push
inc
jno
sbb
fstpt
daa
shr
ret
pop
mov
cmp
push
mov
mov
dec
dec
ja
pop
mov
sub
mov
pusha
or
movsl
addr16
cld
rclb
xor
cmp
mov
adc
mov
xor
push
fwait
shrd
aam
aaa
jne
lret
stos
cld
push
shl
dec
mov
movsb
mov
mov
pusha
push
jle
ret
js
jne
mov
pop
daa
daa
sbb
arpl
sbb
loope
and
cmp
cmp
popa
inc
mov
and
sti
mov
add
iret
push
repnz
xor
into
fldt
outsl
push
mov
jnp
cmpsl
imul
loopne
orb
mov
push
addr16
fsubr
imul
call
xchg
sub
int
dec
je
outsb
shlb
add
rol
or
loop
add
cmp
pop
ss
jbe
gs
or
outsl
pop
dec
xor
cli
iret
pop
jb
xchg
or
inc
insl
inc
xchg
inc
popa
roll
mov
and
push
and
aad
lea
mov
ret
add
mov
in
imul
mov
test
push
lcall
mov
jecxz
fs
into
inc
stos
jno
sbb
daa
adc
push
mov
cltd
outsl
push
pop
sub
push
movsb
shrl
push
cmc
jg
dec
loopne
mov
dec
add
call
ret
or
mov
sarb
mov
adc
orl
in
lret
xchg
scas
dec
mov
fstpl
push
pop
pop
imul
je
pop
test
imul
push
lea
popa
mov
subb
repz
cmpl
lock
mov
xor
sub
cwtl
ds
aad
xor
cmp
fdiv
mov
les
mov
dec
scas
out
jmp
xorb
sbb
in
rclb
jg
mov
xor
adc
cmp
dec
repz
mov
iret
xor
xor
ffree
jne
sub
int
shrl
faddl
push
xchg
lods
or
dec
jg
loopne
std
dec
leave
or
pop
fldt
jae
jno
jecxz
icebp
mov
xor
ds
lds
mov
mov
jno
push
inc
adc
test
xchg
dec
pop
push
push
pop
xchg
and
dec
mov
ret
xor
outsl
fcmovnu
jmp
or
push
mov
insl
adc
movsb
imul
xor
subl
rclb
cmp
ficomps
rcrl
mov
sub
adc
add
adc
fucomip
cmp
mov
xchg
xchg
popa
add
jae
or
cmp
pop
scas
dec
xlat
pop
nop
xor
xchg
sub
sub
add
and
arpl
dec
shrl
lods
pushf
lahf
popf
xchg
xor
push
push
fs
mov
xchg
and
push
int3
ss
mov
subb
and
int3
addb
xor
or
mull
pop
push
jle
sbb
adc
xchg
xchg
inc
negl
mov
adc
adc
add
dec
dec
pop
ss
pop
mov
leave
fstl
hlt
inc
dec
ret
add
stos
cmc
clc
ljmp
nop
popf
cmp
roll
adc
rcrb
jae
dec
adc
jb
popf
cmp
mov
ret
outsb
jge
mov
push
jno
pop
mov
add
push
inc
sbb
pop
push
push
pop
adc
adc
pop
mov
loop
xchg
xchg
pop
lcall
push
sbb
mov
ret
and
and
sub
dec
mov
mov
xchg
daa
rclb
mov
pop
popf
mov
dec
fstl
scas
pop
scas
movsb
xor
or
pop
cmp
sub
sbb
inc
aad
fucom
add
js
push
jno
pop
jmp
cs
add
and
pop
icebp
cmpsl
inc
repz
mov
fiaddl
jne
loope
pop
cmp
addr16
pushl
mov
stc
xor
jne
xor
mov
loope
sub
mov
decb
adc
fsubrs
lds
jg
add
xchg
xor
xchg
fdivl
sub
add
and
or
loopne
jno
mov
fcmove
push
pusha
jge
pop
cmp
test
push
jns
aaa
pop
movsb
rcr
je
ja
jp
movsl
shlb
jecxz
lods
flds
push
jne
mov
or
mov
mov
xchg
fldcw
lods
inc
and
icebp
int3
cmp
add
xchg
adcl
ret
dec
cmpsl
movsb
cltd
jmp
roll
imul
mov
or
test
pop
imul
or
mov
cmpsb
dec
or
mov
pop
int
stos
sbb
cmp
sbb
and
xchg
or
mov
mov
sub
outsl
adc
rorb
enter
dec
xor
xor
cmpsb
leave
enter
nop
inc
sbb
push
adc
pusha
add
pushf
lock
xlat
jnp
pop
fstpl
addl
lret
and
addr16
aas
or
je
jp
leave
push
add
call
mov
cs
daa
cmp
push
aas
mov
jne
fst
xor
cltd
enter
sbb
and
into
xor
pop
xlat
or
inc
cmc
mov
xor
movsb
add
lea
js
xchg
and
sbb
adc
ret
pop
cli
divl
in
loopne
or
mov
lods
add
push
cli
xchg
pop
je
iret
movsl
dec
pop
dec
stos
inc
pop
aaa
movsl
je
test
cmpsl
xor
jne
imul
inc
daa
adc
out
sub
es
mov
adc
xor
lret
sbb
or
jae
int
cmpl
add
xor
push
add
loope
push
pop
mov
aad
xor
fmuls
popa
icebp
int3
mov
xchg
in
sti
cltd
adc
loop
movsl
mov
or
arpl
leave
or
or
mov
fstpt
repnz
ret
nop
cmpb
fnstsw
pop
insb
rcrb
add
mov
add
scas
push
iret
add
xor
cmp
push
xlat
jmp
push
pop
idiv
in
mov
out
daa
ret
or
pop
push
push
sub
cmp
lcall
and
sbb
movsl
pop
ja
jne
mov
xor
xlat
mov
xor
pop
dec
xchg
aad
cmp
push
cmp
arpl
or
adc
mov
mov
fwait
xor
je
cmp
addr16
cmp
or
mov
sub
lock
sti
xchg
insb
and
mov
call
inc
mov
cmpsl
mov
in
sarl
jns
lods
xchg
adc
enter
cltd
mov
fiaddl
lods
push
jns
arpl
lock
and
aam
fldt
xchg
js
add
cwtl
or
pusha
inc
and
cmp
and
into
rorl
sub
pop
mov
sbb
mov
mov
push
rcll
dec
pusha
gs
dec
mov
or
push
jne
dec
push
sbb
xor
mov
fsubp
loop
into
lahf
add
test
add
stos
inc
outsb
loop
sub
test
mov
cmp
push
jnp
fsubrs
pop
mov
test
repz
aaa
cmc
sub
pop
pop
mov
inc
imul
add
addr16
int3
mov
and
cmp
stc
push
pop
cmp
mov
mov
xor
jo
jne
sub
popa
frstor
or
pusha
add
mov
fldenv
xor
or
mull
lock
in
jns
leave
or
push
adc
dec
mov
dec
add
imul
ret
pop
retw
nop
arpl
test
mov
iret
jae
xor
fists
mov
lods
and
test
push
mov
outsb
cmp
lods
cld
leave
imul
shrb
sbb
jl
jne
push
rcrb
mov
jne
push
mov
lcall
xchg
xlat
pop
lock
in
dec
pop
sbb
push
pushf
xor
dec
loop
or
lock
leave
mov
vmptrld
and
addl
push
inc
add
xor
and
push
inc
scas
pop
filds
cltd
mov
cltd
push
es
ljmp
scas
mov
dec
repz
popa
jbe
dec
jecxz
add
and
add
scas
push
lahf
fcoml
mov
or
sub
repz
mov
mov
sub
adcl
or
scas
dec
sub
push
sbb
dec
push
mov
sbb
pop
cmp
stc
mov
push
adc
and
imul
rorl
xor
loope
mov
adc
roll
addl
cmp
into
pop
and
inc
aam
les
xchg
adc
xrelease
or
sbb
jno
shll
inc
mov
ss
xor
mov
jo
loope
cmp
mov
ret
stos
pop
pop
mov
xchg
je
xor
dec
mov
leave
cmpsl
adc
and
ljmp
mov
fs
les
pop
ja
cmp
add
or
and
out
or
mov
mov
dec
add
fnstenv
dec
sub
inc
push
sbb
in
adc
outsl
mov
or
jno
in
shll
shrl
adc
mov
xor
sub
pop
test
push
dec
xor
mov
test
sbb
lods
xchg
xchg
testb
mov
rclb
int
xchg
outsb
mov
dec
aad
or
jnp
add
int3
add
mov
jmp
aaa
lods
sbb
or
pop
add
push
loopne
xlat
int
xor
loopne
jne,pn
shlb
ja
rcr
aam
lahf
lock
repnz
xchg
movsb
adc
sbb
add
add
mov
dec
and
push
jne
xchg
cmp
push
in
lea
daa
daa
dec
roll
aaa
lcall
out
sbb
pop
or
add
movsb
movsl
xchg
pop
xchg
adc
sbb
mov
mov
or
inc
addb
mov
sarb
icebp
cld
xchg
flds
int
xor
fistpll
in
pop
xchg
cs
ja
bound
mov
jbe
imul
leave
xor
mov
popa
mov
sub
adc
insl
addl
pop
int
sbb
adc
add
xor
sahf
inc
xchg
cs
or
mov
and
add
pop
dec
push
fdivrs
pop
cmpl
dec
push
stc
iret
test
jo
adc
jns
stos
shll
inc
pop
out
xchg
pop
popa
outsb
pop
neg
push
pop
jle
sbb
scas
and
adc
xor
mov
sub
outsb
shll
sub
sub
push
add
loope
nop
mov
push
les
adc
rorl
cmp
pop
xlat
jmp
sbb
sbb
mov
xor
mov
stos
mov
mov
push
push
xchg
lcall
sbb
clc
push
jl
orl
jo
outsl
leave
xchg
sbb
call
push
and
mov
imul
mov
inc
cltd
inc
aad
cmp
and
mov
out
loop
popa
inc
scas
and
jno
ss
cwtl
lret
sbb
loopne
add
enter
or
adc
out
mov
and
ljmp
jl
mov
test
addr16
pop
aad
shl
push
shr
jge
movsb
ljmp
xchg
jne
shl
adc
xchg
sbb
and
xor
outsb
pop
in
or
push
test
xchg
addl
popa
mov
pop
outsb
sub
sbb
add
popa
aad
and
fsubrs
cmpsb
sbb
jae
or
ss
push
pop
or
xchg
cmp
mov
adc
inc
add
inc
lock
jmp
fldpi
xchg
popa
rcrb
rorl
adc
sub
cmpsl
cmp
dec
xlat
sub
test
xorb
add
cmp
push
scas
adc
push
sub
adc
cmpsl
fistpll
leave
push
hlt
daa
repz
shl
pusha
push
or
out
inc
popa
loop
in
lea
xchg
fsts
popa
inc
scas
jne
inc
push
scas
and
aas
cmpsb
mov
jmp
inc
aad
in
pushw
jo
popf
ljmp
sahf
frstor
and
pusha
and
push
test
arpl
xlat
or
sbb
jecxz,pt
xor
aas
pop
sub
call
mov
adc
jno
shll
or
pop
sbb
adc
sbb
scas
inc
das
and
sub
adc
out
dec
fisubs
add
sub
mov
sbb
jno
cmp
inc
inc
sbb
push
movsb
cmp
inc
mov
mov
sub
mov
mov
and
mov
ja
add
xlat
test
inc
sahf
popa
inc
data16
pusha
pushf
mov
mov
push
lcall
pop
and
pop
cmp
mov
jecxz
in
stc
mov
jno
ja
mov
jmp
add
aaa
adc
mov
sbb
or
addb
push
cmp
push
mov
sbb
cmp
jne
cmp
loope
in
scas
inc
add
and
lods
adc
lock
popa
movsb
mov
insl
adc
sub
fidivs
test
icebp
loope
jecxz
out
loope
cs
test
xor
outsl
sub
dec
outsb
xor
adc
pusha
push
movsl
or
jg
jle
inc
dec
lods
or
pop
mov
outsb
aaa
mov
loope
aam
xor
mov
hlt
push
scas
cmp
les
inc
cmp
mov
das
xchg
out
and
mov
xchg
subb
xor
push
adc
dec
leave
rorb
pop
and
aam
je
mov
xlat
test
lret
arpl
rcll
loop
xor
jg
pushf
sbb
inc
imul
mov
mov
test
adc
mov
xor
pop
jmp
mov
and
add
jge
xor
inc
push
mov
pop
push
add
adc
ss
jno
jae
push
pop
xorl
xchg
or
je
inc
pop
pop
ret
mov
xor
sti
xor
jno
jno
or
andb
add
popa
mov
cmpsb
dec
sbbl
aaa
mov
mov
pop
jecxz
or
out
xor
xchg
inc
xlat
and
jae
mov
adc
enter
dec
ja
lcall
mov
xchg
sbb
insl
cmp
and
sub
inc
adc
and
loop
xchg
int3
mov
dec
std
pusha
adc
adc
xor
daa
mov
jnp
rorl
rolb
inc
push
add
adc
add
adc
xchg
movb
in
sub
cmc
xor
cld
mov
inc
sub
scas
test
sub
add
les
scas
aaa
call
and
movsb
lea
sub
adc
jns
test
and
and
push
pop
icebp
imulb
int3
or
inc
push
test
out
repz
imul
sbb
push
mov
loope
and
mov
jne
cmc
cmc
mov
mov
fisubs
aas
jne
pop
shll
jge
jb
cmp
add
xchg
cltd
xlat
shrl
pushf
adcl
jb
dec
mov
adc
ret
xor
and
push
mov
test
adc
mov
add
add
pop
loope
mov
inc
pop
xchg
push
jmp
xor
popl
xor
jne
mov
sub
rorb
jae
test
add
inc
add
lods
or
insl
push
mov
jge
cmp
xorl
roll
inc
add
imul
in
adc
aaa
push
adc
jl
or
jg
and
sbb
adc
ret
inc
hlt
push
pop
sbb
and
xor
shrb
inc
push
subl
pop
xchg
xchg
test
jno
pop
test
xor
xor
and
xor
scas
sbb
xlat
int
xchg
xor
shlb
stc
popf
inc
fiaddl
lcall
aaa
testl
push
or
sub
xchg
int
pop
test
xchg
enter
outsl
fcomip
frstor
or
idiv
cwtl
test
pushf
adc
lods
ds
iret
push
int
add
arpl
xlat
mov
cltd
out
and
iret
xor
icebp
and
dec
pop
add
pop
sub
add
inc
dec
and
pushf
je
les
jl
xchg
jno
mov
xor
in
xchg
mulb
mov
pop
adc
mov
loope
jne
jp
mov
inc
pusha
icebp
push
loop
add
sub
pop
sti
popa
cmp
cwtl
mov
aad
mov
lods
pop
mov
dec
arpl
mov
and
les
nop
fmul
add
mov
xor
inc
mov
mov
cltd
or
xchg
push
rorl
cld
xor
lock
aaa
xor
dec
mov
or
rcl
sbb
xlat
and
sub
sbb
push
movl
adc
aaa
call
pop
pop
nop
adcb
adc
sbb
xor
push
cmc
jmp
jnp
or
loopne
jo
cltd
icebp
arpl
popf
les
loop
xchg
cmp
push
subl
daa
popa
ja
xor
mov
adc
mov
sub
mov
pop
lock
imul
dec
cmpsb
pop
or
daa
dec
lds
dec
jbe
xchg
orb
adc
mov
sbb
imul
adc
addr16
pop
mov
xchg
jge
inc
fistpll
jmp
and
mov
bound
std
push
cmp
es
mov
fs
bndstx
ret
cmp
stos
jno
cmp
xor
in
push
fnstcw
movsb
leave
mov
sbb
sub
clc
loope
scas
cltd
push
daa
test
rclb
not
sbb
aaa
xchg
pop
adc
push
scas
inc
imul
xchg
mov
aad
jno
fbld
sub
jo
jp
dec
jp
pop
ss
test
cmc
sub
lods
push
rcr
jmp
inc
pop
or
daa
pop
add
jl
shlb
imul
test
inc
jno
out
inc
mov
mov
push
arpl
loop
mov
jnp
test
shlb
arpl
fiadds
adc
dec
xor
add
pop
sbb
or
add
mov
inc
sub
dec
dec
inc
aaa
in
imul
push
mov
jecxz
sbb
ret
pop
sub
orb
push
sarb
sbbl
clc
mov
push
and
sahf
inc
adc
sbb
sbb
into
imul
xchg
xor
loope
add
sbb
rcll
lock
push
add
cmp
fisttpl
jns
push
mov
hlt
xchg
aad
push
pop
shll
and
iret
pop
pushf
ret
loope
nop
sub
loop
jo
sbb
jno
push
xor
sbb
loopne
xchg
std
adc
nop
cmc
lret
push
add
addr16
shll
push
pop
add
xor
push
or
dec
push
ljmp
pusha
ss
loope
fistpl
icebp
div
into
inc
dec
test
mov
add
lock
and
adc
icebp
cwtl
or
je
loopne
inc
jp
das
nop
dec
add
scas
sub
fnstcw
iret
and
loopne
addr16
adc
fwait
mov
ffreep
shll
jo
imul
mov
mov
outsb
std
mov
sub
sub
stos
inc
aas
mov
fcoml
into
rorb
jl
mov
pop
dec
sub
loope
push
adc
cltd
adc
xchg
out
mov
mov
xor
and
daa
adc
push
mov
jb
dec
add
pop
xchg
scas
or
gs
arpl
xchg
ret
push
jne
mov
add
mov
jmp
leave
mov
bound
lods
and
std
pop
and
pop
rorb
adc
mov
push
aas
js
push
xor
or
inc
jecxz
out
jl
dec
mov
shlb
mov
sub
frstor
inc
shll
dec
data16
ss
addr16
and
lods
sarl
sub
xor
inc
inc
jne
jns
inc
lret
iret
out
sarb
xlat
loopne
and
push
mov
scas
out
add
sbbl
in
movb
adc
in
push
mov
jno
sahf
cwtl
dec
movsl
adc
inc
sbb
inc
cmc
xor
xor
push
sub
xchg
pop
inc
mov
int
jmp
mov
xor
and
leave
mov
roll
sbb
mov
add
sub
shl
adcl
xchg
movsl
mov
cltd
adc
sbb
mov
jns
aaa
jbe
cmc
cmpl
fildl
xor
fwait
enter
xor
and
imul
jo
outsl
loope
iret
pop
push
add
or
and
mov
out
repz
dec
ds
or
sbb
xchg
das
cmp
bound
cwtl
sub
stos
or
aam
jmp
push
jecxz
idivl
mov
inc
add
push
fcomi
cmpsl
mov
aad
sub
xchg
outsb
pop
mov
add
test
add
cli
push
mov
mov
add
dec
int
shrb
xchg
das
aam
arpl
and
bound
push
addl
mov
lods
icebp
cmp
outsb
jno
nop
imul
fstl
jne
lods
insb
adc
pusha
adcl
movb
outsl
insl
push
sbb
xchg
arpl
jg
pop
ret
inc
movsl
push
or
jne
mov
pop
aaa
cmpsb
adc
arpl
lods
shlb
mov
xor
sub
jecxz
xchg
scas
addl
adc
iret
xor
lcall
mov
push
and
fwait
cmpsb
or
jmp
mov
add
push
fildl
jno
cmp
xchg
xor
cmp
lods
push
inc
adc
dec
int3
rolb
cmc
test
adcl
mov
arpl
xchg
testl
dec
notl
inc
adc
scas
pop
cmpsb
int
jmp
pushf
add
lahf
rorb
dec
mov
sbb
imul
lds
ljmp
filds
mov
aas
add
aam
dec
jno
lret
pop
repnz
jp
sbb
mov
nop
rcr
adc
inc
dec
repnz
sbb
push
xor
in
negl
imul
scas
lds
xlat
hlt
lret
push
outsl
mov
mov
in
push
jecxz
sbb
mov
and
jns
push
ja
int
xchg
push
adc
add
mov
xchg
dec
aas
push
push
mov
or
xor
pop
fstpl
add
fdivl
sub
mov
xchg
adc
pop
xor
sub
jo
pop
test
fwait
loopne
adc
mov
cmp
cmp
pop
fbstp
sbb
adc
lock
xchg
sub
lods
cli
lods
adc
mov
push
mov
cmp
aad
sub
xlat
ljmp
gs
sbb
and
pushf
adc
and
in
mov
dec
and
or
stos
in
icebp
sbbb
movsb
in
sbb
into
mov
jno
in
mov
mov
cmpsb
adc
inc
leave
mov
inc
pop
xchg
and
pop
dec
jno
dec
imul
repz
jne
adc
stos
imul
mov
faddp
cmp
hlt
pop
and
mov
push
sbb
loope
lret
mov
ret
add
dec
xor
push
in
shlb
cmp
scas
and
dec
shl
rclb
xor
pop
push
stc
rorb
shlb
mov
sbb
adc
fwait
push
andl
adc
add
hlt
fisttpll
or
es
movsl
stos
fisttpl
scas
push
sub
scas
shrl
adc
scas
xor
lcall
fdivrs
cmp
call
in
mov
nop
dec
inc
mov
pusha
and
mov
pop
fsubs
push
test
adc
cmp
out
mov
scas
andl
xor
mov
fistl
sub
cmp
xchg
out
mov
xor
jo
mov
nop
imul
aad
test
cmpsl
pop
inc
jo
fstl
jl
push
movsb
mov
mov
mov
dec
or
imul
dec
mov
inc
mov
clc
orb
xchg
sbb
add
push
mov
xchg
call
loope
jne
sbb
or
xchg
mov
nop
mov
dec
pop
xor
lods
jge
sbb
aam
in
inc
data16
shlb
sbb
pop
xchg
push
or
popf
add
mov
xchg
mov
add
bound
dec
insl
fsub
mov
lret
mov
jl
pop
sub
mov
popa
dec
or
sbb
hlt
pop
hlt
cld
mov
pushf
cmovle
jecxz
inc
shr
inc
lret
insb
cld
cmpsl
int
hlt
and
ffree
popa
andl
adc
and
test
fs
sbb
dec
mov
inc
popw
not
ret
or
call
pop
out
pop
cld
rcr
adc
bound
sub
and
jae
sahf
roll
rcl
neg
inc
cmp
add
sbb
stos
scas
pop
push
outsb
sti
sbb
in
mov
and
cwtl
xor
dec
and
add
or
and
pop
mov
ss
jmp
rcr
mov
jmp
loop
or
adc
mull
roll
sti
data16
adc
dec
mov
popf
mov
mov
in
push
nop
fistl
push
outsb
pop
xchg
cwtl
cmp
add
push
in
sub
mov
lods
fisttpll
xchg
push
sbb
and
mov
or
mov
aaa
cwtl
call
aad
cwtl
bound
xorb
cmp
lock
dec
add
cmp
pop
rcr
test
and
adc
addr16
jae
ja
lcall
or
xor
adc
or
sub
push
fsubrs
rol
and
mov
pshufw
cmp
pop
bound
pop
pop
push
mov
js
bnd
aaa
cld
movsb
sbb
push
in
and
mov
outsl
ret
sub
adc
xchg
push
push
sbb
scas
pop
inc
fldt
jbe
fsubl
xchg
dec
mov
cmp
cmp
push
or
xor
stos
xchg
lock
out
cmp
inc
in
sub
dec
adc
push
push
mov
pop
imul
xchg
and
sbb
scas
mov
push
and
jl
mov
test
mov
adc
xor
insl
inc
cmpsl
ret
push
add
xchg
inc
inc
xor
push
or
xchg
sub
clc
and
stos
stos
call
addr16
inc
mov
bound
cmpsb
and
in
mov
mov
mov
lea
and
andl
notb
lahf
push
and
out
mov
push
xor
or
and
inc
leave
andb
js
adc
or
fdivrp
inc
lcall
outsb
mov
fcoms
inc
outsl
inc
popa
push
xor
pmaxsw
clc
add
outsb
jne
push
or
pop
insb
sub
call
add
mov
mov
gs
xchg
idivb
fcomp
es
insl
xchg
mov
shlb
sbb
inc
iret
aas
mov
popa
ret
ljmp
cli
jle
xor
push
or
and
lods
push
repnz
add
movsb
pop
pop
sbb
es
ss
fmuls
scas
adc
mov
sarl
leave
pop
add
sbb
mov
scas
mov
aam
out
add
loop
fcomps
fldl
sub
jg
pop
dec
xor
pop
loop
pop
adc
mov
ret
push
mov
rolb
sub
lret
addr16
sub
ss
sbb
andb
jmp
shll
arpl
mov
add
pop
pushf
add
incl
push
pop
add
sbb
jns
mov
sbb
data16
ret
xor
xchg
mov
and
call
outsl
pusha
jmp
mov
xor
cld
jne
enter
jle
mov
pushf
iret
or
movsb
pop
mov
inc
cmp
scas
mov
sub
in
jl
shl
lahf
cld
stos
addb
push
cld
mov
mov
push
out
push
dec
cmpsb
dec
and
fstpt
pushf
sbb
clc
xchg
enter
lods
stc
outsb
push
mov
cld
mov
push
xchg
lahf
popa
pop
mov
iret
push
out
decl
push
or
insb
repz
xorl
cld
aam
jle
mov
lahf
adc
div
pop
inc
pop
nop
iret
lret
and
repz
mov
ss
push
stc
mov
mov
pushl
das
clc
rolb
insb
into
and
pusha
pop
test
inc
rcl
cmp
loopne
loope
dec
or
and
dec
jno
jl
ja
loopne
or
arpl
call
out
push
pop
xor
or
fcomi
inc
push
jne
cmp
ficompl
jecxz
adc
ds
mov
adc
imul
in
aaa
inc
cld
icebp
popf
rclb
cmp
push
and
aas
mov
in
or
call
ffree
enter
mov
cld
jg
dec
icebp
add
aas
push
arpl
or
pop
mov
shlb
inc
aaa
and
cli
ret
lods
mov
inc
pop
inc
and
es
clc
icebp
inc
pusha
rolb
pop
jecxz
adc
ja
push
in
xchg
jl
xor
jmp
stos
xor
in
pop
mov
inc
mov
and
cmp
push
jl
arpl
mov
loopne
push
jp
push
mov
lock
addr16
ljmp
rcll
fcos
add
into
xor
insl
pop
ds
outsb
lods
clc
int
push
adc
jecxz
in
jecxz
push
mov
xchg
mov
test
xchg
lahf
pusha
cli
mov
dec
xchg
xor
sbb
pop
add
aaa
shl
icebp
cmp
addb
mov
push
jecxz
pop
mov
data16
js,pn
test
jecxz
into
clc
clc
and
xchg
ds
mov
cwtl
les
es
jp
std
xchg
aad
mov
fcom
add
je
xchg
std
add
movsb
in
clc
fsubp
adc
xchg
movsb
mull
in
inc
fs
shrb
push
icebp
push
add
push
int3
add
clc
lahf
icebp
sub
jl
sub
mov
repz
add
jecxz
mov
pusha
push
cli
push
sbb
mov
add
cmp
popl
sar
cmp
lods
push
push
incl
lds
nop
dec
test
jl
icebp
icebp
aaa
cmp
xor
pop
jecxz
scas
in
add
loope
add
js
inc
cld
iret
test
or
push
jmp
jbe
push
pop
jl
clc
stos
or
sub
mov
adc
gs
sub
sub
dec
scas
xchg
jns
int3
sbb
pop
inc
inc
pusha
mov
lock
ds
pop
imul
in
fwait
nop
icebp
mov
cmp
mov
sub
mov
sub
insb
fadd
push
jmp
inc
adc
jl
lock
in
or
icebp
dec
xor
or
mov
movsb
mov
push
pop
cmp
arpl
fstps
jnp
cmc
dec
lock
mov
nop
inc
mov
fucomi
inc
and
push
jnp
data16
sbb
icebp
sti
arpl
jae
icebp
nop
jge
mov
mov
adc
pop
inc
sarl
stc
sub
cmpsl
mov
repnz
push
dec
sti
sti
mov
add
test
ds
lods
jmp
orb
call
je
or
addr16
inc
cmpb
hlt
mov
add
aam
pop
out
or
test
nop
and
fimull
pop
pusha
mov
push
pop
mov
ficomps
push
lds
call
mov
ret
mov
ss
push
pop
rcrb
ds
pop
jl
cmc
cmp
xlat
icebp
lods
xchg
popa
fisttpl
sbb
dec
icebp
mov
push
fdivr
lahf
hlt
lods
out
ret
jl
ds
fdivrl
mov
out
jl
rcrl
push
je
loopne
xchg
cmp
bound
lds
xor
or
pop
cmpsl
inc
insb
add
adc
pop
sar
int
cmp
inc
jb
jecxz
clc
mov
mov
dec
xor
je
mov
cmpsl
xor
pusha
inc
jg
mov
pop
lock
ds
add
pop
xchg
push
push
sti
pop
shrb
in
cmp
sbb
cmc
sub
cli
js
jecxz
pop
sbb
add
push
shlb
aam
sbb
cmc
cli
fidivrs
loop
out
and
or
sbb
stc
movsb
negb
add
dec
inc
nop
pop
adc
add
enter
clc
aam
adc
cld
mov
or
insb
outsb
pop
sbbb
test
psubb
repnz
faddp
ds
cmp
push
pop
push
rorl
adc
dec
pop
and
lock
xchg
mov
cltd
stc
or
clc
adc
add
popl
mov
clc
mov
es
sbbb
push
mov
jb
and
cmp
jge
jl
sbb
js
dec
xor
or
sub
dec
lock
jl
movsl
clc
adc
xchg
mov
icebp
fstpt
insb
icebp
xor
sbb
sbb
bound
pusha
jns
in
push
or
inc
xchg
or
cwtl
add
mov
mov
sub
out
shlb
ds
addb
and
jmp
shll
sti
rorb
test
xorb
ds
and
clc
movsl
jge
mov
jl
shrl
clc
lahf
in
out
sbb
xor
jbe
aad
inc
jns
mov
lret
bound
jp
pop
ljmp
xchg
loop
sti
popa
enter
sahf
nop
xchg
jb
sahf
clc
out
lcall
fimuls
xchg
rorb
out
xchg
in
xabort
push
xor
xchg
sbb
lret
jle
xchg
in
add
cs
ret
test
das
adc
pop
cmp
adcb
jbe
sbb
sub
adcb
push
inc
mov
and
xchg
call
pushf
fildl
mov
mov
jl
insl
out
sahf
loope
or
xchg
je
ffreep
or
lods
jo
into
pop
sub
mov
in
clc
xor
ret
clc
add
pop
jl
mov
loopne
xchg
sbb
add
test
lock
push
imul
clc
cmp
push
mov
jl
out
or
add
aam
mov
jl
pushf
not
outsb
js
aas
movsb
clc
das
adc
inc
xor
in
inc
movl
push
push
pusha
xchg
mov
inc
mov
sub
jp
aaa
stos
pop
dec
add
sahf
andl
or
hlt
lods
into
iret
inc
ds
xlat
jmp
or
subb
call
sbb
pop
icebp
or
add
movl
jno
fisttps
add
push
clc
mov
bnd
fildl
les
cld
lods
fldcw
in
jmp
fimull
sub
imul
aaa
shll
je
sbb
jl
cmp
xor
das
jp
loop
push
jns
addl
loopne
inc
jl
icebp
movaps
ds
mov
pop
and
leave
push
pop
int
push
adcb
aam
fsubl
rorl
cli
cs
cwtl
icebp
sub
mov
pop
add
cltd
add
test
cli
add
jae
test
inc
mov
aam
push
mov
aam
fsub
pop
jecxz
cmp
and
test
dec
push
xchg
lock
aad
imul
call
mov
xchg
add
adc
or
jl
sub
push
and
dec
fdiv
xchg
lahf
sbb
cmp
sub
add
lods
mov
out
mov
repz
movsb
cmc
icebp
daa
xor
fsubrl
clc
imul
lock
mov
clc
jp
ret
cld
lret
ss
xor
dec
sub
jecxz
or
mov
pop
aaa
cs
mov
decl
or
cmp
mov
test
mov
je
icebp
add
mov
insb
mov
pop
loopne
add
pop
ss
inc
jne
xchg
jecxz
mov
cmc
pop
or
mov
rcrb
jl
cwtl
xor
jp
jp
test
out
aad
ljmp
and
push
add
xlat
adcb
mov
fstp
push
pusha
enter
repnz
push
adc
js
xorb
aad
int3
mov
jecxz
call
push
fnstcw
push
cli
inc
cmp
in
pop
jecxz
call
pop
inc
icebp
cmp
loop
dec
sub
ljmp
jl
cli
cmp
fdivr
stos
mov
inc
sbb
or
repz
adc
dec
push
sub
sarl
dec
lea
mov
sahf
and
pop
mov
jg
jg
shrb
lcall
and
and
mov
adc
inc
ljmp
xor
fcoms
jmp
mov
mov
mov
xchg
inc
pop
mov
jno
mov
jne
mov
xor
loopne
push
pop
add
test
dec
cmp
movsl
lock
adc
or
adc
mov
fwait
int
and
rolb
or
xchg
test
sbb
adc
fdecstp
shrl
mov
aaa
pop
test
lcall
add
mov
add
cwtl
dec
sbb
nop
loop
enter
rclb
xchg
std
popl
cltd
dec
idivb
mov
jge
enter
or
ss
cli
scas
pop
mov
rolb
inc
je
adc
repnz
imul
clc
and
and
cmpsb
mov
cwtl
xlat
movsl
mov
ret
lret
mov
push
push
or
pushf
loopne
aaa
ret
divb
inc
push
or
or
adc
cmp
in
fcompl
nop
jne
jne
repz
xchg
push
outsb
add
test
enter
clc
popl
enter
addl
inc
addb
push
icebp
add
sbb
cmp
push
lea
lret
and
push
cmp
js
icebp
fbld
push
add
add
add
pop
repnz
xchg
cmp
lcall
inc
shll
rolb
or
cmp
mov
adc
insb
test
mov
xlat
xchg
fisubs
mov
clc
ret
sub
jbe
push
outsb
cltd
addb
mov
jbe
cmp
rorb
adc
mov
inc
sbb
inc
data16
inc
out
and
mov
ficompl
fdivrl
loope
inc
pop
mov
dec
repz
lods
lret
sub
xchg
xchg
mov
sub
inc
mov
mov
call
in
xchg
pop
or
clc
xor
pop
inc
cld
mov
dec
cltd
ret
cmp
adc
ficoml
subb
sbb
jo
testb
mov
push
jl
xor
pop
xchg
icebp
sub
pop
inc
pop
es
sbb
es
hlt
orl
xchg
ret
fimull
mov
or
dec
and
std
pop
mov
sbb
loop
insb
fdivl
dec
lcall
inc
sub
test
push
push
stos
add
in
jne
fbld
and
and
jl
pushf
int
iret
adc
and
cmp
adc
enter
pop
cmpps
inc
push
ljmp
add
movsb
push
insb
inc
xlat
xchg
je
xchg
sbb
and
aam
xor
aaa
push
add
add
or
dec
mov
push
mov
shl
pop
or
cli
lahf
mov
gs
push
aad
adcl
cwtl
add
add
push
aad
lret
inc
int3
jno
jl
inc
int3
add
data16
mov
lock
nop
xchg
or
adcb
punpckldq
ret
incl
cltd
and
push
sti
scas
cwtl
lods
stos
sbb
jecxz
jo
adc
fsubr
pop
sub
and
stc
cmp
xor
sbb
adc
inc
sbb
mov
in
les
leave
fistpll
icebp
scas
pop
adc
adc
test
and
ds
adc
adc
sub
push
pop
sbb
inc
enter
insb
test
adc
mov
adc
insb
ret
andl
out
sub
pop
loopne
and
fsubs
ror
jl
stos
or
jle
movsb
or
push
xchg
push
sbb
fcmovbe
and
movl
sbb
and
cmp
mov
lret
aam
in
out
jb
add
sbb
inc
and
rorl
popf
ljmp
mov
xchg
push
push
sub
stos
mulb
loop
pushf
lea
inc
sti
mov
inc
bound
mov
or
mov
lcall
xchg
hlt
ss
xor
or
lret
or
ds
cld
cmp
adc
adc
jg
xchg
xor
fcmovnb
or
sub
adc
add
xchg
lea
ss
movsb
sbb
jb
ds
hlt
push
shlb
addr16
std
or
jg
sub
movsb
jo
add
sbb
jl
shll
mov
loopne
sbb
push
pusha
sbb
andb
std
sbb
sub
les
sbb
mov
jbe
jl
adcb
xor
pop
scas
or
adc
scas
sarl
fdivs
loopne
mov
sub
pop
rclb
add
movsb
mov
adc
mov
and
and
add
in
xor
push
fisubrs
pusha
insl
sub
fistl
inc
test
mov
into
jne
sub
sub
daa
sbb
mov
sub
test
xchg
dec
aad
lods
jp
and
inc
fmuls
inc
pop
icebp
scas
jg
shrb
pop
push
lea
in
pop
sbb
dec
ss
rorb
adc
push
adc
add
in
pop
hlt
int
je
add
jp
aaa
into
out
pop
mull
out
fwait
push
xor
mov
movsl
adc
stos
jnp
imull
or
test
inc
ds
push
rcrl
or
dec
movsb
and
cld
adc
rcl
adc
subb
sub
jo
repnz
mov
fildll
bound
sub
pop
or
in
sbb
and
dec
adc
scas
jp
ds
cs
lea
push
jns
fdivrs
jl
mov
cmp
pop
icebp
mov
pushl
inc
jmp
dec
fstps
jbe
push
sbb
fcoml
sub
insl
inc
push
pusha
ss
push
pusha
sar
mov
dec
push
xchg
gs
clc
xchg
xchg
fwait
mov
popa
cmp
ja
imul
icebp
fildl
negb
inc
gs
jmp
bound
mov
push
cmp
inc
hlt
xor
subb
mov
scas
mov
stc
in
loop
dec
add
arpl
in
add
ret
nop
push
inc
loop
push
fistpll
jge
jp
mov
dec
out
ljmp
add
sub
lahf
bound
sub
mov
lds
lcall
fcomi
sub
les
pop
add
mov
outsb
cs
mov
in
mov
cs
pop
insb
roll
into
cmpl
pushf
rcl
leave
lods
adc
or
dec
inc
popa
adc
loopne
pop
add
mov
pop
nop
cld
xor
dec
insb
mov
xchg
lret
aas
push
inc
mov
ds
cld
jp
sub
add
clc
dec
dec
and
sbb
xchg
fistpl
ret
and
cmc
cmpsb
push
sbb
les
mov
nop
das
xor
test
push
int3
call
nop
repnz
icebp
mov
rcll
inc
push
mov
aaa
and
mov
dec
push
jmp
clc
mov
sbb
cmp
sahf
es
sbb
push
cmp
add
enter
or
mov
mov
jo
ret
adc
ljmp
mov
add
into
and
sldt
inc
and
orl
mov
mov
add
dec
dec
jns
mov
aam
push
notl
out
inc
bound
fs
pusha
orl
push
insl
sbb
enter
arpl
imul
add
inc
pushl
xlat
mov
mov
mov
xor
rcl
cld
imul
incl
rcrl
dec
xor
dec
out
sbb
leave
cmp
das
nop
aaa
in
hlt
fstl
push
inc
adc
lcall
movsb
or
jo
sbb
adc
es
cmp
pop
int3
pop
jmp
adc
adc
and
xor
xchg
cmc
adc
pop
adc
inc
fwait
inc
sub
jmp
pop
call
mov
sar
adc
insl
sbbb
fs
fsubrs
mov
sti
sbb
pop
ds
push
test
jecxz
xor
cmp
pop
xor
xor
loop
je
sub
in
shl
imul
pop
into
in
loope
scas
mov
push
mov
add
push
pusha
or
clc
scas
js
adcl
sbb
cmp
mov
dec
pop
rol
nop
dec
sub
xor
cli
jnp
xchg
movlps
ret
or
pop
adcb
dec
mov
and
push
or
mov
xor
sbb
sbb
fisubrl
call
cmp
test
decb
fisubl
test
clc
sbb
xchg
sub
xchg
add
subb
add
je
mov
lods
std
shlb
inc
mov
add
xchg
adc
call
incl
loopne
andb
cmp
push
pusha
rcrb
xor
dec
sbb
fldl
flds
andl
mov
jp
add
mov
add
fidivrl
xchg
pop
cltd
in
outsl
fnstenv
je
dec
mov
mov
xor
stos
fisttpl
cld
pop
cmp
mov
data16
ror
imul
adc
push
mov
scas
mov
and
cmp
ss
icebp
rcrb
imul
pop
jl
lret
lock
mov
adcl
or
push
cmpsl
mov
jecxz
fimull
rcr
sar
int3
mov
push
dec
clc
or
popa
dec
xchg
lds
lahf
mov
push
dec
pop
bound
add
and
andl
ljmp
jmp
mov
fisttps
sbb
bound
fists
inc
sti
push
aam
mov
push
adcb
into
mov
push
std
pop
push
dec
adc
add
jge
jg
sub
adc
fmuls
jne
xchg
std
pop
dec
rcrl
add
lock
rorb
xchg
xor
insl
sub
push
or
aam
push
fwait
cmc
das
mov
push
add
inc
xor
mov
rcl
jae
icebp
xchg
cmp
adc
or
mov
mov
inc
stos
loopne
cmp
xchg
rcl
jb
push
jmp
fists
mov
neg
cmp
rolb
mov
les
xlat
xchg
andb
or
enter
ficomps
xor
cmpsb
and
pop
push
jbe
rorl
sbb
das
sub
es
xor
lock
sti
cmpb
addr16
testl
out
repnz
hlt
cmpb
push
pop
jno
mov
push
pusha
jae
push
std
fucomip
jne
mov
push
repz
ficoms
inc
push
cmp
lock
cmp
inc
sub
incb
adc
pop
pop
inc
push
dec
das
clc
push
call
add
subl
outsb
sub
cli
int3
sbb
and
cld
xchg
test
pusha
jg
loopne
inc
ret
sub
xor
pushf
mov
popf
mov
pop
test
or
lcall
sbb
pop
sub
mov
das
ds
icebp
ja
adc
insb
adc
inc
mov
or
sub
test
pushf
mov
xor
xor
mov
push
das
push
push
clc
mov
incl
cwtl
or
push
add
hlt
inc
sbbb
jae
mov
mov
andb
adc
out
or
cmp
and
cld
push
cld
das
or
push
add
ret
sar
push
fiadds
lcall
loop
jbe
adc
push
lock
js
xorb
loope
pop
jle
dec
or
and
push
adc
pusha
add
fcmovu
popa
adc
and
push
dec
outsb
pop
mov
test
xchg
jecxz
lock
ficomps
cld
inc
push
adc
add
aaa
dec
mov
test
mov
xchg
or
xor
pushf
sub
idivb
xchg
imul
lcall
dec
es
push
mov
adc
ret
leave
scas
dec
vpcmpeqd
push
int3
or
dec
mov
or
sub
or
mov
pushl
xor
aas
inc
and
loopne
insb
cwtl
cmp
lahf
pop
popa
clc
mov
sub
cmp
jbe
push
mov
mov
pusha
add
cli
ret
shrl
sbb
ret
and
pop
pushf
in
mov
push
std
call
push
mov
lea
pop
lods
ret
fldl
fwait
cmpb
icebp
call
add
aas
add
shlb
fistps
and
cmpb
jo
mov
inc
es
lock
test
add
testb
xchg
jp
rolb
add
in
repnz
loope
aaa
out
movsb
mov
mov
cmc
inc
inc
add
xchg
pop
fucomip
sbb
cmp
mov
mov
in
cmp
movsl
or
mov
add
dec
mov
add
in
push
sub
push
push
mov
pop
jp
add
scas
mov
add
xor
or
add
push
das
push
sub
mov
add
mov
mov
ss
scas
inc
push
xchg
jne
cwtl
movsl
push
jns
nop
add
sub
in
mov
or
pop
insb
mov
clc
cmpl
pushf
jbe
jb
push
lock
rolb
nop
push
mov
ja
cli
and
outsb
out
sbbb
add
lcall
in
sub
mov
lcall
arpl
mov
mov
adc
ds
str
inc
outsb
mov
cld
add
sbb
push
inc
mov
mov
aas
push
mov
lds
dec
dec
inc
inc
jle
rorl
scas
push
mov
dec
fucomi
stos
add
loop
lods
fadds
rcrb
jl
in
cmp
inc
pop
sahf
mov
jb
push
xor
outsb
cmp
mov
jle
ss
sbb
xchg
clc
lock
in
mov
jo
inc
scas
lea
insb
pop
add
push
jmp
inc
sti
outsl
mov
mov
and
stos
jmp
outsl
in
pop
repz
push
xchg
mov
jmp
enter
mov
push
xchg
lds
decl
lds
mov
jmp
xchg
sub
mov
es
cmp
add
xchg
mov
xlat
andl
adc
pushw
push
rcrl
pusha
xchg
int3
pop
jo
xor
loopne
add
scas
in
shlb
push
xor
data16
inc
xorl
fcomi
aad
es
loopne
sub
jge
sub
push
es
xchg
and
movsl
jb
push
mov
arpl
sarb
enter
inc
adc
data16
push
shll
rcrb
repnz
das
mov
shlb
sbb
lahf
fcomps
inc
mov
dec
repz
mov
jle
xor
jo
andl
cmpsb
jns
cmp
or
adc
inc
mov
adc
xchg
pop
cmpsb
cmpsb
pop
jne
out
repnz
add
xchg
jbe
pop
mov
outsb
pop
cmp
adc
or
or
mov
popl
and
addb
cmp
test
and
and
mov
scas
mov
scas
dec
fnstsw
ja
sub
cmp
enter
jg
outsb
rorb
and
cs
call
movb
insb
scas
or
pop
pop
dec
pop
fistpl
popf
ficomps
and
jl
popa
pop
test
call
jae
mov
aas
loope
repz
xchg
aas
sbb
clc
lock
arpl
and
shlb
and
fwait
and
jle
add
in
mov
mov
xor
test
jle
in
rcll
jg
push
jl
loopne
sbb
int3
push
xor
sbb
cmpl
xchg
rcr
adc
sub
or
pop
mov
xchg
inc
add
and
mov
das
dec
adc
sahf
lret
pop
int
int
xor
outsl
subb
push
jnp
lock
test
fildll
jp
mov
push
imul
pop
mov
sar
in
pop
add
dec
arpl
cmp
sub
popl
lds
cwtl
cmpsl
fistpll
pusha
mov
out
or
mov
inc
jl
inc
call
xchg
sbb
push
ret
ss
mov
mov
or
add
jno
xor
xor
loop
ja
inc
or
mov
adcl
push
pop
out
jb
and
xor
xchg
mov
clc
or
fsub
setg
lahf
lret
pop
es
test
stos
mov
loope
or
sti
sbb
push
lods
jp
xchg
mov
pop
dec
jg,pt
test
dec
xchg
cli
js
jl
lcall
push
movl
dec
mov
push
aaa
jl
mov
aad
push
mov
dec
or
add
rolb
rolb
add
xor
jecxz
xchg
dec
clc
xor
insb
icebp
jns
mov
rol
inc
xlat
xchg
outsb
dec
and
and
in
andb
sahf
add
pop
push
xor
mov
lret
push
ret
aas
xchg
pushf
sub
mov
in
icebp
mov
mov
fwait
sbb
nop
lock
mov
push
xchg
ds
cmp
adc
loope
sbb
add
push
mov
dec
stos
add
fimuls
sarl
push
scas
outsb
clc
push
inc
jbe
xchg
mov
mov
mov
data16
inc
push
mov
and
push
sahf
sub
es
ja
xchg
nop
push
and
mov
xchg
ljmp
testb
fnstenv
subb
shl
add
pushf
sti
sbbb
push
test
inc
xchg
xchg
fidivrl
xor
call
icebp
or
sub
mov
push
sti
fildl
xchg
orb
loop
sub
cmp
adc
sub
insb
sbb
loopne
mov
fists
push
push
cmpsl
jle
dec
out
xchg
mov
loop
dec
sti
cmp
mov
mov
mov
fbld
mov
mov
xor
jbe
lock
mov
test
xchg
enter
sbb
sub
dec
aaa
and
dec
xchg
mov
pop
mov
or
imulb
mov
mov
cli
dec
push
or
fisubs
aad
dec
xor
add
clc
mov
mov
mov
sbb
fisttpl
mov
mov
jge
daa
jl
mov
into
cld
xlat
pusha
sbb
cld
fsubrl
in
and
mov
jmp
cld
clc
or
gs
add
pop
inc
nop
fwait
test
ljmp
push
dec
push
out
hlt
add
and
aam
lea
int3
loope
adc
adc
xchg
xor
or
sub
call
xor
in
insl
xlat
push
clc
ja
mov
mov
cltd
jbe
jecxz
imul
es
push
fistpl
test
push
or
mov
sub
mov
dec
add
cmp
inc
loopne
inc
mov
insb
xchg
add
mov
pop
das
mull
pop
mov
jo
sbb
push
mov
and
inc
mov
into
out
inc
das
xchg
pop
xchg
les
sti
mov
push
sub
test
lods
cmpxchg
stos
je
mov
in
sbb
sbb
adc
adc
lock
inc
add
lcall
mov
shlb
in
push
or
jmp
push
pop
outsl
sbb
sub
xor
insl
movsb
es
fstpt
push
sbb
int3
stc
push
jle
test
mov
push
jb
fs
mov
mov
mov
call
sub
imul
mov
dec
mov
adc
inc
jnp
shrl
sub
loope
jl
hlt
add
sbb
push
adc
mov
call
mov
aad
mov
xorb
rorl
or
mov
pavgb
mov
sar
dec
push
bnd
xor
push
cmp
mov
imul
cmp
outsb
push
pop
pop
add
adc
sbb
mov
lret
stc
cld
push
arpl
xchg
movsl
and
fcomp
mov
and
add
dec
out
sbb
cli
das
jbe
push
and
adc
push
cmpsb
ret
add
shr
sti
fidivs
pop
jg
jg
incb
repnz
add
and
pop
add
add
pop
dec
adc
push
stos
mov
inc
nop
shr
loope
push
sbb
smsw
xor
or
pop
fsubs
fmuls
insb
pop
cmpsb
mov
add
jg
xchg
or
pop
cmpsl
mov
or
test
sbb
test
jg
rorb
mov
pop
cmp
mov
inc
jbe
fsubl
add
jl
sbb
jecxz
into
inc
adc
push
sbb
ficompl
add
sbb
cwtl
nop
cwtl
test
xor
lret
jle
jge,pt
mov
push
js
sahf
test
mov
cmp
sbb
out
xchg
testb
push
jb
xor
dec
fistps
xor
sbb
mov
mov
cli
rorb
mov
into
xchg
and
popa
inc
das
fdivrs
xor
jp
inc
dec
cli
mov
movsbl
outsl
orb
clc
insl
sub
stc
push
add
adc
pop
hlt
gs
xor
fisubrl
mov
push
mov
add
mov
sbb
sub
sbb
outsb
or
popa
aas
pusha
loop
mov
cmpsb
mov
push
pop
out
xor
sub
add
xor
nop
ficomps
rorl
push
shrl
aaa
outsb
xor
loop
mov
push
lea
outsl
inc
es
jle
add
sub
jecxz
sbb
inc
sbb
das
push
push
das
sub
xor
sahf
movsb
push
dec
dec
enter
jmp
lcall
inc
push
xchg
adc
pop
lea
test
push
shlb
xorl
jno
popa
cmp
xchg
das
and
mov
or
negl
lret
and
mov
es
fimuls
sub
mov
adc
sub
dec
enter
sar
out
pop
cwtl
int
mov
dec
rcl
or
call
adc
xor
mov
cs
das
inc
sbb
mov
pop
dec
adc
adc
lret
mov
dec
shld
ss
pop
push
sub
sbb
or
pop
lods
cli
push
jecxz
add
ss
push
lcall
cmc
or
in
outsl
cltd
push
xor
mov
mov
loope
xchg
jle
jecxz
xchg
adc
aaa
mov
xchg
adc
xor
sbb
inc
mov
xchg
leave
test
inc
sub
mov
xchg
ds
repz
aaa
mov
movsl
mov
or
and
mov
icebp
dec
dec
dec
movsl
mov
jl
mov
in
pop
shlb
imul
push
arpl
dec
mov
cmp
std
inc
inc
push
lods
repnz
inc
add
add
scas
or
mov
inc
js
add
pop
mov
mov
inc
cmp
dec
js
jmp
or
push
outsl
ret
inc
pop
sbb
sbb
loop
cmpsb
addr16
dec
mov
adc
loop
mov
ljmp
push
or
and
mov
add
add
and
add
sbb
int3
loopne
js
cmpb
lcall
push
ret
xor
xchg
push
add
push
fistpl
mov
push
jecxz
daa
outsl
out
cmpb
push
adc
mov
mov
mov
outsl
popf
out
mov
add
outsb
jge
fistpll
dec
add
xor
inc
xor
jae
xchg
push
out
adc
push
or
xorb
xchg
in
and
in
popl
cld
repnz
shll
xchg
cmc
hlt
mov
adc
sbb
call
mov
pop
lock
rolb
mov
sbb
mov
leave
test
in
sub
in
loop
or
xor
test
and
pop
data16
xor
pop
mov
fadds
inc
mov
mov
cmp
adc
inc
add
sarb
push
jecxz
les
in
mov
cmp
mov
or
cmp
incl
jne
fmull
jne
push
adc
les
stc
or
gs
adc
loopne
aaa
call
pop
add
jne
mov
or
mov
cld
pushf
shlb
or
in
stos
inc
pop
pusha
mov
mov
or
imul
lods
add
pop
jle
mov
sbb
jo
popf
xchg
test
cmp
repnz
push
cmp
cwtl
jbe
test
les
mov
add
rcrb
sahf
lret
rcll
add
daa
in
push
xor
scas
sbb
nop
add
addl
out
pusha
aad
add
cli
sbb
in
pop
fst
push
fwait
sbb
mov
bound
into
aaa
adc
or
loop
int3
leave
or
push
add
push
movsb
enter
sbb
dec
sar
pop
sbb
pop
stos
clc
adc
test
jp
jnp
pop
or
cmp
add
out
pop
cmp
mov
add
add
and
adc
sbb
xlat
push
mov
push
rolb
jb
adc
idivb
add
or
xor
mov
sahf
loop
inc
inc
rcll
pusha
pusha
ljmp
inc
xor
pop
add
insl
cmp
add
bound
add
jl
add
pop
shlb
test
pop
dec
adc
sbb
jb
sbb
jl
and
ret
add
scas
test
fsubp
or
dec
mov
sbb
pop
xor
ds
push
pushf
scas
cmc
push
ret
es
inc
nop
clc
jb
in
push
xchg
xchg
cmp
rclb
bound
pop
int3
mov
enter
je
lock
push
mov
stos
and
hlt
xchg
cmp
out
ljmp
inc
cmpsb
adc
sub
mov
push
push
pop
cmpb
mov
sbb
jae
je
cmpsb
push
sub
and
stc
fmul
push
decb
and
and
fildll
mov
mov
mov
adc
inc
test
mov
mov
test
test
pop
mov
data16
ror
shlb
stos
adc
jecxz
jmp
add
dec
push
mov
in
xchg
js
scas
cmp
adc
jno
sbb
pop
nop
icebp
push
loopne
call
sbb
push
mov
cld
pop
loop
sbb
and
sbb
xchg
push
mov
inc
insb
jmp
testb
dec
or
sbb
mov
rcrb
pop
mov
enter
push
mov
xchg
rclb
mov
sub
hlt
and
push
inc
pushf
adc
xchg
or
les
jbe
push
add
nop
dec
fs
adc
push
xor
adc
cli
lods
sbb
jmp
mov
mov
mov
push
cmp
test
clc
and
push
jbe
inc
movsl
icebp
ja
push
xor
inc
push
ffree
jg
nop
movsb
inc
ss
cmp
dec
jg
mov
pushf
cwtl
inc
jno
dec
inc
divl
popl
int
mov
cmpl
push
rcrb
dec
dec
and
jne
push
aaa
xchg
push
insl
sub
ja
lock
addb
xchg
cwtl
mov
jbe
out
push
daa
enter
jmp
lcall
adc
inc
nop
clc
loopne
and
xor
jecxz
pop
sti
add
and
stc
fs
or
xchg
cli
mov
mov
addr16
aad
mov
loop
inc
ss
bound
or
rorb
adc
lcall
push
push
xor
lret
jecxz
sbb
dec
mov
in
decl
pop
jne
mov
ljmp
fwait
mov
jg
xor
xchg
lret
push
and
pop
xor
sbb
cmp
inc
sbb
pop
inc
jecxz
or
cwtl
cmc
decl
or
dec
or
push
jb
sub
call
clc
xor
test
daa
mov
pop
test
mov
jp
adc
sub
sahf
insl
push
dec
rclb
or
incl
cld
inc
mov
push
add
xchg
jno
inc
mov
cltd
fwait
xor
add
cmp
jle
je
rorl
xchg
cwtl
ret
or
std
xchg
push
cld
and
add
push
dec
adc
outsl
add
push
aad
fsubrs
and
push
imul
mov
popa
int3
mov
in
and
sbb
mov
lock
nop
cmp
jne
add
or
ljmp
push
in
cmpsb
jmp
adc
adc
loop
add
xchg
adc
nop
rorb
sbb
xlat
mov
jg
add
fisubl
std
lds
hlt
sbb
mov
loop
not
fwait
cld
lahf
aam
or
or
cmpsl
mov
push
mov
test
call
push
sar
add
pop
dec
or
mov
test
mov
mov
dec
add
push
jl
in
dec
data16
shll
or
cmpsb
jl
jmp
xor
les
add
push
and
xchg
pop
loope
add
aaa
cmp
cmp
mov
or
cmp
cld
dec
into
push
pushl
ja
aas
mov
pushf
dec
fisttpll
pop
shl
adc
or
and
mov
movsb
movb
mov
roll
mov
pop
push
loop
push
mov
pop
in
mov
push
ja
mov
mov
sbb
fs
shrl
mov
xchg
pop
or
pushf
cli
filds
adc
movsb
fmul
inc
add
hlt
test
pop
xor
out
pop
add
sbb
mov
adc
clc
lret
aas
xorb
and
ds
aas
push
out
sub
scas
add
hlt
cmpb
mov
std
scas
mov
mov
xor
push
xchg
mov
addr16
inc
adc
imul
mov
add
and
les
dec
enter
mov
dec
jne
mov
mov
push
pop
or
sub
push
inc
push
shll
and
mov
das
push
jg
mov
adc
ret
and
push
jno
push
mov
jmp
call
inc
inc
leave
and
or
and
jge
bound
mov
stos
mov
mov
shlb
cmpsb
sub
in
outsb
push
fbstp
and
jge
cld
add
fdivrs
and
lods
test
jp
or
outsl
or
and
nop
les
bound
es
or
andb
aam
mov
test
mov
in
or
fists
mov
sti
cld
push
xchg
add
add
icebp
push
jl
cltd
mov
inc
push
jg
mov
push
out
fucomi
sbb
push
cmp
pushf
jns
adcb
lcall
pushl
test
mov
pop
push
or
adc
nop
out
jl
lret
lock
pop
jmp
inc
mov
pop
jl
mov
insb
sbb
inc
ss
sbb
int
and
ljmp
fmul
aam
clc
inc
jl
call
bound
stos
jle
pop
cmp
pop
xchg
inc
jno
or
rolb
sub
lock
fstpl
xchg
test
cmp
pop
add
xchg
xor
pusha
inc
push
sbb
clc
jecxz
data16
out
mov
xchg
xchg
stc
and
lahf
jmp
push
fidivl
inc
dec
push
xchg
add
xor
mov
lret
or
inc
xor
mov
ljmp
sub
sbb
mov
or
aad
add
das
cli
fistpll
adc
out
rep
hlt
cmp
adc
inc
inc
adc
ja
push
cmp
adc
jmp
dec
xor
sbb
psrld
mov
out
sbb
push
ret
add
xchg
adc
js
mov
rclb
xor
ljmp
call
push
mov
inc
cmp
add
call
mov
rorb
sbb
or
pop
mov
test
push
sub
js
stos
in
popl
sub
les
inc
sbb
mov
std
xlat
mov
in
repnz
out
add
icebp
push
repnz
jl
xorb
push
push
jo
fwait
loopne
xchg
mov
xchg
xchg
inc
and
push
lods
call
test
xor
inc
imul
je
xchg
ss
jle
daa
insb
arpl
clc
pop
mov
into
jp
inc
inc
cmp
xor
or
xchg
loope
aaa
sub
ficomps
call
or
adc
aaa
addb
push
inc
das
mov
dec
add
jg
in
rcrb
inc
sub
jmp
ja
mov
inc
adc
cltd
sbb
popa
cmc
sub
mov
pop
scas
jg
push
xor
inc
mov
xor
or
test
or
into
xchg
or
jb
jle
daa
mov
adc
sbb
in
sahf
adc
ss
iret
push
ds
test
cmp
jge
sbb
mov
push
push
not
fnsave
loop
inc
mov
std
pushf
test
fadd
int3
jnp
es
test
push
or
filds
ret
subb
sbb
dec
ret
scas
scas
add
cmpsb
mulb
push
inc
aaa
xor
xchg
push
xor
and
or
sub
push
inc
jle
lea
mov
dec
mov
rcl
movsb
out
cld
scas
xor
in
dec
add
xchg
and
add
jl
rcrb
mov
mov
into
out
mov
add
addb
mov
jg
in
faddp
cmp
cmpsl
stc
inc
inc
shlb
int
out
clc
fcmovnb
add
sbb
pusha
add
or
les
ljmp
ret
fs
inc
sbb
clc
xor
insb
jno
std
mov
or
pop
push
jl
fistps
ss
icebp
or
dec
clc
sahf
std
jmp
xorl
xlat
inc
mov
mov
pop
stos
and
loopne
mov
sbb
push
nop
mov
ljmp
cmp
loop
xor
lcall
sub
push
push
inc
and
mov
ss
into
movsb
in
add
inc
push
outsl
and
nop
mov
js
cmp
pop
enter
repnz
scas
or
out
inc
cmp
mov
mov
add
push
aad
push
fwait
iret
xchg
xlat
add
mov
les
fisubrs
mov
fwait
orl
je
loopne
mov
add
xor
add
stos
movsb
pop
enter
aas
dec
dec
push
xor
roll
fcomip
js
insb
xor
jle
add
cltd
xor
test
leave
xchg
clc
push
roll
pop
leave
cmp
mov
mov
adc
push
lds
inc
call
psrlw
xchg
shrb
aam
int
push
add
stos
lret
mov
sarb
mov
stc
xchg
mov
pop
push
mov
xlat
scas
es
lret
push
int3
bound
xchg
adc
sbb
nop
sbb
fistpll
inc
jnp
mov
mov
decl
sub
adc
adc
mov
cmp
out
jl
icebp
clc
or
jbe
inc
in
enter
hlt
notb
mov
out
repnz
push
adc
dec
add
ret
push
ficoml
fmul
decl
hlt
dec
mov
jnp
dec
pushl
lcall
mov
stos
orb
sar
mov
push
jo
jmp
fcompl
lret
loopw
neg
mov
std
add
mov
mov
inc
mov
xor
shll
dec
add
mov
inc
js
cmpsl
mov
inc
sub
vmovd
mov
sti
mov
or
pop
add
inc
and
adc
fbstp
inc
dec
ss
and
push
jge
and
dec
xchg
push
ja
dec
pusha
fbstp
jo
xchg
mov
or
push
dec
and
mov
orl
dec
loope
add
sahf
and
ljmp
mov
fadds
popa
push
xchg
pop
sub
add
mov
pop
fdivrs
bound
mov
mov
xor
xchg
stc
or
cli
testl
inc
ret
pop
pop
mov
add
sub
mov
das
jo
lcall
pop
imulb
shll
ljmp
jnp
lods
cmpsl
arpl
out
pop
sbb
cmpsb
jl
outsl
js
sbb
inc
add
add
dec
shrb
addb
inc
mov
push
sbb
les
aaa
cmp
sub
outsl
pop
pop
pop
jns
mov
ds
ret
sub
fucomi
xadd
mov
cmpsb
pusha
inc
mov
lds
aaa
movsb
js
add
cltd
je
popf
cli
andb
sbb
inc
faddl
cmp
hlt
dec
or
stos
pusha
push
or
mov
hlt
adc
pop
add
sbb
nop
or
mov
cmpb
subl
xchg
bound
scas
adc
pop
or
cld
in
push
ljmp
or
ret
mov
scas
mov
add
add
int
dec
dec
jl
sbb
cld
mov
dec
dec
aaa
in
clc
outsl
jb
push
add
testb
cmc
mov
inc
sub
test
xorb
or
inc
stc
je
mov
and
enter
push
ret
cld
pop
iret
mov
inc
js
or
clc
mov
clc
aad
cltd
mul
pop
add
push
mov
dec
aas
or
lods
jo
sbb
jmp
inc
add
jecxz
sbb
jae
ret
rolb
mov
or
pop
cmp
incb
pop
push
add
fldl
sbb
sti
test
mov
call
sub
into
dec
sub
jg
test
inc
jecxz
sub
stos
nop
dec
test
add
inc
ljmp
mov
imul
es
outsl
int
mov
sub
push
aad
clc
pop
xchg
push
rolb
sahf
insl
mov
sti
test
subb
outsb
aas
test
dec
aam
dec
mov
xchg
push
shlb
roll
dec
jl
das
add
aas
and
out
into
outsb
xchg
pushl
and
lds
mov
dec
sub
mov
popf
shrl
icebp
push
imul
cmp
movsl
andb
add
fcomip
lahf
dec
js
lds
ret
cmp
push
scas
pusha
pop
sbb
loop
decl
push
add
outsl
clc
or
ja
jmp
lock
rcll
push
dec
fcoml
and
dec
enter
dec
cmpsb
sub
mov
pop
and
mov
call
mov
sbb
cmp
sbb
insl
sub
test
jp
arpl
ss
xchg
iret
add
pushf
mul
daa
jl
adc
imul
cld
xchg
xchg
pop
clc
imul
xchg
shrl
cmpsl
out
sub
popf
add
test
roll
sub
cmp
adc
add
add
sub
mov
test
xchg
icebp
mov
imul
mov
sbb
sub
push
stos
dec
xchg
jp
push
ficoms
ljmp
stos
shl
rcll
outsl
testb
test
add
cmp
mov
jp
hlt
jecxz
xchg
shlb
push
push
pusha
cli
fadds
mov
xor
inc
mov
xchg
or
fimull
std
jg
jl
jnp
clc
in
jl
outsb
sub
nop
lds
xchg
outsb
subb
jge
dec
add
rcrl
push
jo
push
cmp
out
sar
or
push
vpmacswd
sub
push
add
incb
push
popa
sbb
nop
test
push
xchg
adc
jge
mov
js
push
jmp
add
mov
pop
scas
in
xor
mov
mov
push
ljmp
or
stc
adc
inc
adc
call
and
add
or
mov
fisttps
daa
adc
and
call
iret
call
test
pop
rol
mov
inc
adc
int3
mov
cld
lock
xor
sbb
imul
and
push
scas
or
stc
roll
mov
adc
and
in
xor
into
add
add
or
je
std
pop
xor
sub
add
pop
add
sub
testb
xchg
push
clc
out
add
pop
dec
inc
add
nop
cmp
ret
mov
xor
lcall
int
pop
push
shlb
dec
and
or
ss
and
std
xchg
pusha
mov
mov
adc
lret
xor
shl
fcomip
lcall
and
mov
sti
pop
pop
test
pop
adcl
stos
add
addl
popf
mov
adc
mov
orb
xlat
push
push
shr
sbb
notb
push
pop
hlt
movsb
adc
mov
jg
jbe
loop
lea
sub
popa
loop
push
aad
dec
add
pop
jo
cmpsb
imul
ss
outsb
mov
xor
sub
inc
loopne
mov
push
faddl
adc
cltd
incl
pop
je
insl
pusha
sbbb
shl
pop
pop
adcb
lods
push
popa
adc
test
dec
ret
ljmp
dec
sbb
gs
push
imul
pop
sbb
adc
mov
push
push
or
push
adc
fs
xchg
dec
inc
push
jg
cld
call
sub
mov
out
daa
movl
sub
lods
repnz
xchg
lret
lcall
mov
clc
and
cmp
mov
dec
xor
inc
cmp
or
pop
dec
ds
adc
sbb
pop
add
inc
or
mov
cltd
push
jecxz
lret
data16
scas
xchg
inc
mov
push
sub
push
or
ljmp
push
mov
xor
scas
or
les
or
scas
add
jo
push
andb
lea
mov
and
outsb
jnp
movsb
push
cwtl
scas
out
dec
jg
push
mov
call
dec
dec
adc
popf
xchg
add
pop
icebp
lcall
push
and
cs
mov
adc
push
lds
out
add
dec
mov
cmp
push
sub
je
hlt
lcall
xor
sti
xor
push
dec
leave
mov
sub
inc
pop
mov
arpl
clc
lock
mov
and
fsubs
mov
add
pop
ds
test
add
cwtl
divb
push
and
jbe
xlat
insb
mov
jg
pop
out
scas
shlb
sbb
push
push
push
and
cmp
dec
ljmp
leave
add
inc
jmp
mov
sbb
sub
dec
mov
sahf
movsb
hlt
data16
mov
fcmovb
dec
enter
scas
shrb
aam
pop
in
mov
fcomps
shll
mov
xchg
jbe
mov
xchg
decl
ja
or
fcmovb
cld
add
adc
xlat
or
push
movsl
cmpsl
fisubl
std
inc
popa
adc
xor
outsl
push
out
sbb
push
mov
push
push
mov
scas
outsl
ficoml
in
dec
addb
mov
adc
push
sbb
test
adc
and
add
mov
call
jg
dec
in
cmc
scas
cmp
dec
stos
es
add
add
adc
movsb
fidivrl
cld
arpl
add
call
adc
test
mov
lret
adc
sbb
mov
cwtl
pop
push
test
int3
scas
mov
and
or
and
call
cwtl
mov
test
mov
loop
aaa
adc
rorb
push
sbb
in
jge
insl
add
shlb
mov
pmulhuw
loope
jg
jle
in
xor
push
xchg
imul
sbb
enter
subb
inc
cmp
add
xor
ljmp
xor
or
xor
dec
scas
and
int3
dec
adc
mov
and
inc
mov
push
ret
mov
cmp
xor
sub
push
sub
push
xchg
inc
or
jp
sub
add
fucomi
clc
lock
or
push
cli
call
fcomip
test
mov
out
scas
pushf
repz
and
or
jg
hlt
xchg
sbb
daa
lods
arpl
or
dec
and
lret
dec
jg
roll
mov
lods
jmp
adc
jmp
pop
rcrb
cmp
mov
cld
jg
les
mov
and
push
sbbl
out
or
pop
lea
fwait
insb
mov
shlb
push
fistpl
cmp
into
adc
gs
cmpsl
adc
add
icebp
xlat
inc
push
xchg
out
andl
push
fstpt
and
inc
dec
rcll
ret
lock
adc
adc
xchg
sub
fmuls
jecxz
push
adcb
push
test
or
adc
add
mov
cld
sbb
xor
fisttpll
mov
mov
test
mov
inc
je
xor
and
and
cmp
pop
rclb
xchg
loop
sub
decl
test
sub
xor
in
push
inc
shrl
lods
rorb
es
and
jle
sbb
hlt
pushf
mov
lods
imul
mov
les
cmp
inc
jp
clc
jmp
inc
fcoml
fimull
xchg
pusha
xchg
lret
hlt
mov
loopne
insb
scas
and
dec
in
or
out
and
mov
les
shlb
loope
out
add
mov
inc
xor
loop
add
je
and
loope
xchg
addl
ret
pop
jmp
pop
cli
or
pop
rorb
push
cmp
add
arpl
and
aas
aas
lret
rcll
xor
sbb
mov
push
rclb
add
out
jmp
add
sub
dec
sbb
push
cmp
push
sub
test
das
add
fnstenv
pushf
jae
push
push
sub
lock
movsb
lret
add
dec
pusha
cmc
cltd
ret
lret
sub
cltd
lea
mov
push
rcr
sbb
xlat
movsb
pop
or
mov
add
sbbl
or
vaesdec
popf
mov
adc
mov
lea
mov
inc
cwtl
xor
clc
or
incb
inc
sub
sti
fs
inc
jg
xchg
adc
push
cli
inc
inc
jp
jae
imul
push
movl
js
mov
jne
jbe
sbb
push
adc
push
jb
jle
clc
stos
mov
ss
gs
add
outsl
adc
js
and
nop
inc
xor
pushl
inc
loop
les
mov
dec
push
popa
mov
add
adc
leave
adc
dec
push
ret
mov
add
and
loopne
mov
lods
xchg
ret
cmc
pop
inc
add
sbbb
ja
lods
sbb
fadd
mov
dec
xor
sbb
or
sub
inc
fists
cmpb
dec
cmp
fbld
xor
fimuls
add
mov
cmp
mov
pop
adc
mov
cs
lahf
std
inc
push
mov
mov
in
pop
xor
lds
les
cwtl
xchg
or
insb
xchg
call
decl
ds
jecxz
sub
mov
ss
pushf
push
jg
outsl
xchg
adc
test
aaa
cld
pop
or
aaa
cmp
test
push
nop
test
or
dec
shrb
outsb
adc
ljmp
sub
cmpsb
xchg
int3
dec
pop
and
sbb
xchg
pop
adc
cmp
loop
data16
add
jecxz
adc
cmpsb
pmaxsw
mov
pop
ret
pusha
movsb
add
mov
mov
adc
aaa
jle
jmp
adc
push
addl
pop
fcoml
push
or
fcoms
sbb
push
pop
cmp
sub
dec
adc
pop
sbb
sub
in
imull
insl
fbld
xchg
cmp
call
sti
fadds
sbb
nop
sbb
or
test
lcall
fcoml
dec
aaa
movsb
int3
lods
enter
stos
lret
test
mov
jo
loope
cmp
pop
lock
xlat
rorb
int3
and
pop
mov
out
inc
mov
cmp
push
push
dec
test
out
mov
sbb
xor
or
adc
mov
pop
dec
dec
mov
rcl
lahf
or
jge
stc
mov
or
call
dec
nop
add
stos
aaa
in
cmp
inc
fadds
xchg
popa
lcall
outsl
pop
les
je
add
xorl
sub
imul
call
or
xor
xlat
cmp
test
mov
pop
and
cs
jecxz
add
or
rorb
enter
sbbb
mov
repz
or
andb
insl
xor
fstpt
mov
mov
push
add
insb
push
insb
std
pop
cmc
aaa
jbe
jmp
movsb
sub
testb
or
lahf
inc
shl
gs
call
clc
jle
inc
sub
inc
sub
mov
inc
rclb
cmc
loopne
push
mov
sub
xor
ret
pop
sbb
aaa
sbb
push
es
mov
pop
lea
pop
leave
sub
scas
push
cld
ja
in
mov
test
and
jo
bound
or
push
xchg
shr
out
pop
cs
push
loope
clc
push
cwtl
push
jb
sti
pop
add
dec
mov
fisttpl
mov
xor
sub
pop
fadd
cmp
add
add
cmp
sbb
lcall
rclb
jg
mov
add
cmp
fmuls
xor
out
into
push
adc
js
xlat
pusha
add
stos
fiaddl
aam
aas
add
das
gs
and
cmpl
fs
cld
jns
lcall
cmp
fimuls
pop
add
push
roll
aam
mov
fcoms
pop
ja
mov
and
decl
push
lds
cmp
add
mov
movsb
sub
cmpsb
jbe
and
sub
or
jne
mov
cmpsb
in
add
mov
add
jno
pushf
cmp
icebp
or
adc
cld
push
fisubs
and
or
jp
dec
xor
shrl
dec
pop
call
or
clc
xlat
jge
add
adc
sub
push
sti
or
adc
jne
mov
idivl
call
and
fbld
push
cmpsl
jge
mov
add
loope
jmp
lods
pop
inc
or
push
clc
out
repnz
shll
scas
insb
movsb
add
outsb
cmp
add
sub
mov
popf
ja
daa
cmc
add
sahf
dec
mov
cmp
test
arpl
int3
mov
cli
pop
pusha
sub
jge
repz
cwtl
mov
insl
fcoms
fdivrs
sub
sbb
pusha
fnstsw
andnps
lods
movsl
stos
scas
fldl
add
fbstp
incb
nop
arpl
xor
test
bound
in
clc
or
xchg
ljmp
pop
or
jmp
mov
mov
or
imul
dec
or
xchg
rol
xlat
or
add
outsb
fwait
mov
lds
inc
gs
icebp
mov
jp
or
xchg
add
push
jmp
sub
dec
loope
jno
sti
add
xchg
les
out
fdivrs
or
aam
lock
jne
mov
mov
dec
popa
out
lcall
pusha
add
mov
or
sbb
mov
dec
pop
loope
mov
mov
dec
add
jmp
rcll
imul
dec
add
notl
and
lret
add
sbb
push
in
ss
jg
inc
sub
stc
test
push
sbb
add
inc
inc
repnz
orb
ja
mov
inc
cs
and
test
bnd
loop
stos
test
imul
movsl
loopne
movsb
test
pop
sub
and
mov
cmp
scas
in
cltd
mov
sub
push
mov
cli
outsl
push
std
pop
cs
jge
stos
push
pop
insl
out
add
cli
xor
push
lret
xchg
add
or
inc
rcr
push
sahf
push
shrb
outsb
inc
or
filds
mov
adc
out
xor
fistps
mov
and
xor
mov
rclb
ret
and
stc
aas
push
call
sub
jns
lret
dec
push
imul
xchg
shrb
push
imul
jno
pusha
out
mov
imul
cmp
or
and
cmpsb
popf
xchg
mov
inc
inc
or
or
push
sub
add
pop
and
xor
xlat
aaa
or
fisubrs
cld
decl
fimull
add
push
nop
sub
sbb
fwait
mov
sub
push
sbb
je
pushf
data16
loope
push
mov
and
pop
sub
sub
ljmp
sub
das
jb
out
notl
repz
push
adc
inc
jno
incl
fcmovu
rclb
iret
outsb
or
adc
pusha
insl
cmp
add
mov
loop
es
dec
ss
movsb
push
or
sbb
lods
es
js
xchg
add
and
add
jb
add
add
jecxz
test
xor
add
jle
cwtl
adc
arpl
test
xor
lods
mov
decl
into
xchg
cwtl
andb
pop
push
test
or
lock
loopne
mov
dec
repz
loope
add
int
xchg
mov
leave
and
aas
jb
jg
ret
loop
mov
or
adc
xchg
push
rcll
add
fwait
jbe
sub
stos
xor
and
adc
push
nop
andb
leave
js
mov
xor
push
bound
fwait
add
ljmp
mov
ds
mov
xlat
mov
xlat
sub
xorb
add
loop
pushf
insb
lods
jp
push
cld
and
test
xchg
mov
fidivrl
add
rcl
clc
mov
cmp
sbb
daa
mov
hlt
cmp
or
or
mov
jbe
xor
cmp
sub
pop
pusha
mov
ljmp
pop
sub
pop
pop
mov
xchg
fcmovb
les
cmpsb
insl
and
incb
jmp
into
push
or
pop
loope
inc
out
clc
sbb
rcrl
call
xor
and
addb
clc
inc
mov
xchg
les
mov
into
dec
loop
inc
mov
stos
imul
movsl
add
pop
or
xor
sarb
dec
push
andl
push
sub
push
nop
sub
pop
adc
fdivp
mov
or
cmp
cmpsb
push
test
pushl
lret
repz
inc
pop
incl
loope
pop
push
sbb
sub
xchg
ljmp
cmp
cmp
xor
cmpsl
or
xchg
mov
mov
andl
movsb
gs
fdivrl
icebp
or
add
fprem
xchg
call
sub
ret
rolb
mov
inc
add
push
movsb
sbb
stos
push
or
push
pop
cmpsb
leave
pushf
xor
cmpsb
or
pusha
gs
jl
adc
ljmp
mov
fdivs
bound
inc
shrl
add
mov
xchg
push
nop
js
adc
jmp
cwtl
loop
js
push
mov
or
sub
dec
mov
dec
dec
add
push
mov
call
pop
test
pop
sbb
add
scas
xchg
dec
pusha
cwtl
inc
icebp
ljmp
add
dec
loopne
xchg
push
imul
mov
add
ret
fistpll
aad
push
sbb
mov
mov
loope
scas
inc
aam
add
pop
add
sbb
dec
test
aam
xor
mov
lods
add
mov
fdivs
ss
cltd
testb
pop
cmpb
inc
mov
cs
lock
hlt
dec
cmp
and
sti
jb
or
incb
or
cmp
fmuls
mov
mov
aaa
les
mov
xlat
loope
in
mov
push
jl
int3
jge
data16
aam
push
scas
jbe
nop
repnz
loopne
mov
mov
mov
outsl
push
pop
inc
xchg
dec
dec
push
inc
lock
sub
outsl
test
pop
push
sub
clc
xchg
push
dec
movsl
mov
fdivrs
push
adc
idiv
call
pop
mov
pop
test
and
pop
cmpsl
sbb
xchg
shll
das
inc
jle
gs
cmp
fmull
rorb
aad
cmpb
inc
fimull
int
push
dec
cwtl
movsl
push
push
hlt
jmp
call
in
insb
daa
imul
push
je
pop
pop
fimuls
lods
movsb
xor
mov
cs
adc
jae
aas
push
push
sbb
insl
shl
mov
adcl
sub
rorl
jge
orb
je
add
out
jl
mov
mov
negb
mov
incb
cmp
jmp
sbb
stos
add
add
ret
sahf
dec
das
cmp
adc
loopne
or
lcall
mov
inc
mov
ss
or
je
mov
mov
adc
jb
scas
lret
jmp
aaa
cmpsl
outsb
ljmp
lods
mov
nop
pop
pusha
cli
lcall
adc
arpl
and
pop
dec
into
aad
jns
je
mov
xchg
sbb
fwait
adc
jg
cmp
lcall
mov
insb
decl
fimuls
insl
cmp
xlat
js
loopne
lret
rolb
nop
jle
jo
inc
shrl
xchg
scas
repnz
sub
add
es
cs
ficompl
xchg
fdivrs
pop
mov
push
icebp
cmovp
scas
jae
aam
lods
lcall
sbb
and
mov
mov
andb
cmp
ret
out
icebp
clc
and
jl
test
pop
clc
pop
inc
jl
or
add
adc
dec
negb
sbb
sbb
mov
ss
or
loop
js
inc
or
mov
pop
sbb
add
cwtl
sbb
inc
push
mov
aam
mov
adc
mov
enter
inc
call
pusha
notl
iret
out
add
in
mov
jmp
fistpl
add
mov
subb
push
inc
jbe
pop
or
dec
xchg
bound
jl
sbb
mov
fcompl
mov
jp
sub
xchg
and
jl
shll
in
scas
sub
fnstsw
jno
xchg
std
or
push
sbb
sub
gs
fstpt
dec
cwtl
mov
ja
ljmp
dec
in
lret
in
jne
adc
and
mov
lahf
lret
fs
sti
andb
cs
popa
xor
cmp
fisttps
sti
das
out
xlat
adc
jbe
sbb
inc
mov
cmp
cmp
sbb
pusha
and
mov
ja
popa
lret
pushf
mov
adc
mov
mov
into
adc
in
shr
pop
mov
mov
rorb
jg
lods
mov
loopne
add
stc
inc
sahf
mov
add
mov
adc
in
push
es
push
lcall
test
aam
xor
inc
cli
stos
fs
mov
adc
push
loopne
mov
ds
mov
sbb
cmpsl
movsl
pop
cmpsb
jl
mov
dec
mov
and
ja
in
cmp
inc
fadd
push
add
mov
mov
decl
xchg
lahf
mov
aas
clc
fwait
and
sbb
lds
mov
ret
imul
ret
push
cld
in
loope
or
ret
fists
mov
pop
push
and
sub
in
pop
icebp
out
jmp
dec
sub
jmp
inc
or
push
mov
xor
jmp
cmp
push
mov
add
das
add
in
cli
icebp
outsl
push
int3
xor
sub
testl
es
inc
icebp
add
add
imul
push
xor
xchg
fildll
pop
xchg
outsb
sarb
imul
int3
cmp
sub
incl
scas
cmp
xorb
xchg
pop
xchg
and
sbb
jle
out
pop
cmp
mov
or
popf
mov
jmp
divb
inc
inc
lcall
mov
test
cmp
and
inc
and
inc
xchg
data16
int
test
loopne
mov
and
les
dec
adc
fildll
fs
pop
cld
cwtl
clc
call
jle
adc
xor
xchg
in
xor
xchg
lods
loopne
cmovbe
cli
ljmp
dec
aad
int3
jl
adc
add
cmpsl
test
mov
cmp
and
lock
sub
push
sbb
add
xor
xchg
aam
jbe
dec
inc
sbb
lea
and
or
inc
jne
pop
xchg
shlb
mov
mov
es
pop
jmp
mov
mov
and
add
cmp
and
sbb
mov
mov
out
mov
jecxz
cs
jbe
add
and
in
daa
adc
pop
pop
xchg
push
push
dec
or
fs
aad
add
mov
popa
sti
pushl
in
aas
push
mov
sub
cmp
mov
lods
stc
sbb
sbb
notl
mov
xchg
add
pop
ret
mov
xchg
subb
inc
mov
nop
into
mov
call
lock
mov
movsl
push
fs
push
lretw
out
test
movsl
lds
sub
scas
mov
test
shll
and
push
xchg
leave
adc
sub
cmc
add
adc
test
push
hlt
mov
cmp
cmpsb
jns
lahf
xchg
jns
loopne
add
xchg
xchg
shll
mov
inc
call
enter
mov
add
jne
pop
sbb
add
inc
sahf
cli
sbb
sahf
sub
rdmsr
mov
push
mov
hlt
mov
dec
push
sbb
or
adc
pop
sbb
hlt
xchg
push
mov
stc
or
or
sbbb
rorb
jns
nop
xlat
xor
mov
push
mov
jl
cld
push
jge
mov
or
cmp
jle
ds
popf
pop
add
lods
push
and
shrb
je
aad
jp
clc
jb
insl
mov
xchg
adc
sbb
mov
mov
push
sbb
lock
lock
les
add
cwtl
mov
push
xor
pop
adc
sbb
aas
jle
xor
mov
mov
or
mov
xor
test
movq
xchg
add
sbb
xor
incl
and
or
mov
jl
lods
jmp
dec
or
shlb
out
jmp
ss
pop
pop
negb
mov
jg
loopne
push
inc
jb
pop
shlb
xchg
sbb
xchg
push
mov
lock
mov
pop
inc
and
inc
mov
data16
mov
js
lock
jmp
xor
jb
mov
jno
cmp
push
add
push
movsb
rorb
fwait
jno
fisttps
jbe
and
pop
jne
sbb
add
mov
mov
les
js
mov
les
lret
adc
adc
pop
cmpsb
lds
add
jmp
add
je
add
nopl
inc
fistpl
rolb
shl
nop
aam
test
and
insb
ds
adc
inc
stos
sbb
inc
sub
cmp
push
add
insb
js
jg
or
and
sbb
cmpb
incb
clc
filds
call
out
inc
test
push
or
hlt
cmpsl
das
jo
ds
movsb
mov
divb
mov
rorb
fidivrs
cld
scas
add
push
icebp
push
sub
into
or
sub
mov
inc
mov
push
or
sahf
xor
sub
jo
jne
dec
and
incl
inc
sub
push
addb
xchg
jg
jbe
stc
jmp
xor
jl
sbb
cwtl
call
in
incl
or
stos
mov
popa
sub
mov
mov
or
push
push
pushf
or
call
add
aam
lods
les
mov
addb
clc
or
fisttpl
flds
mov
inc
movsb
in
jns
mov
xchg
inc
jg
pop
cmp
std
mov
push
call
mov
jmp
popa
std
pop
outsl
clc
in
xor
dec
jno
loop
in
test
or
adc
xlat
sub
mov
sub
jne
pop
dec
les
mov
push
inc
xchg
xchg
leave
cli
je
xchg
and
jle
mov
dec
push
jl
sub
repz
ret
movsl
sub
shlb
push
push
loop
scas
clc
fildl
inc
and
popa
jae
aaa
sti
sub
adc
add
clc
cmp
or
pop
test
outsl
shr
cltd
jno
movsb
out
fdivp
mov
mov
imull
and
sbb
xchg
mov
sarl
out
pop
push
push
test
push
icebp
movsl
cmp
dec
adc
std
mov
lahf
xchg
mov
add
ret
lock
pop
sub
mov
inc
cld
lcall
lods
mov
testl
add
xchg
mov
cmc
jg
push
shrl
fstp
fsubrs
stos
push
fcomps
repz
inc
popa
and
les
xchg
sar
test
jecxz
lcall
xchg
or
or
ret
cmpsb
sub
inc
add
xorb
mov
add
sbb
out
cs
sbb
and
xorb
loopne
lock
daa
or
mov
push
std
sub
pop
mov
cmp
adc
out
and
fwait
pop
or
test
add
pushf
xchg
or
clc
decl
mov
push
adc
add
sbbl
sti
cmp
or
insb
leave
adc
add
mov
pop
fmulp
push
test
sub
dec
push
and
jg
sbb
push
mov
dec
adc
loop
fwait
jmp
push
mov
jmp
in
ss
xchg
mov
std
stc
mov
or
push
int3
mov
icebp
js
push
and
push
adc
xchg
adc
add
sbb
add
jns
jae
rolb
mov
mov
push
inc
iret
sub
jg
add
add
mov
cld
lds
or
sti
clc
es
xor
ss
xchg
hlt
jg
fs
das
hlt
push
std
shll
dec
cmc
inc
xchg
addr16
jg
xorb
in
push
sub
pushf
lock
pop
nop
shll
popf
xor
dec
cs
loop
jnp
test
add
pop
or
adc
cli
cmpsb
mov
push
adc
clc
or
mov
imul
mov
sub
xor
sbb
jmp
sub
mov
pop
movsb
ret
iret
call
dec
xor
mov
inc
mov
mov
and
ljmp
in
cmp
xchg
pop
es
test
popa
mov
sub
imul
lods
jb
sub
out
clc
mov
xchg
test
adc
repnz
xchg
cmc
mov
cs
mov
mov
and
fisubrs
add
aas
and
ljmp
clc
movsb
dec
arpl
es
es
call
mov
cltd
and
sbb
call
add
cmpsl
mov
push
adc
add
out
sbb
clc
add
js
fsubs
call
cmpsb
scas
and
push
out
xor
out
cmp
movb
out
cmp
in
out
inc
inc
imul
mov
pop
push
sbb
push
into
cltd
and
xchg
outsl
rorb
inc
add
lcall
add
popf
jl
push
or
out
incl
mov
lahf
xchg
fdivrl
orb
stos
sahf
lahf
mov
jb
inc
xchg
pop
add
jo
data16
xchg
xchg
icebp
or
cmpsb
js
rolb
jmp
loope
xor
in
daa
lret
pop
sub
pop
stos
ret
ds
or
cmc
pop
aam
push
adc
cmpsb
push
fsubs
in
xchg
xor
lods
cli
test
sbb
repz
syscall
popa
mov
pushf
enter
sbb
fisttps
insb
das
lds
mov
outsl
movsb
inc
cli
push
mov
inc
mov
mov
icebp
inc
pop
sub
or
es
dec
shrb
and
mov
or
inc
sbb
repz
jne
pop
sub
pop
std
ss
xchg
mov
cmp
aas
test
es
ja
mov
add
jbe
aas
sar
and
mov
loopne
fwait
pop
or
lahf
or
cmp
out
mov
xchg
mov
pop
xchg
xchg
data16
adc
add
dec
and
std
repnz
jp
mov
stos
insb
mov
sbbl
sub
daa
sahf
andb
fstpt
inc
mov
pop
adc
decl
jle
data16
sahf
addb
mov
test
jmp
lcall
in
aam
mov
add
jb
adcl
movsb
push
inc
ss
dec
cmp
test
movsl
cmpsb
mov
pop
pop
popf
jo
lods
cld
mov
sub
sub
mov
cli
data16
sub
push
das
push
push
popf
and
cmp
ja
movsb
and
xor
sub
fs
or
add
add
sbb
je
xor
mov
jg
and
pop
jg
cmpsb
xchg
dec
inc
mov
imul
sub
add
sub
bound
pop
das
aaa
imul
mov
ljmp
sbb
dec
scas
mov
js
test
js
jae
cmpsb
test
dec
incl
subl
dec
push
sub
pop
test
sbb
mov
sahf
sub
imul
and
inc
xor
pop
ja
and
mov
cmpsl
xchg
shr
add
xor
inc
xchg
cwtl
cmc
insl
xchg
mov
mov
mov
cmpsb
hlt
cmp
inc
pop
lock
lcall
mov
out
push
or
das
pop
mov
ss
jl
sbb
test
scas
and
jl
xchg
xchg
sbbl
xchg
inc
mov
sbb
add
fcomip
mov
fstl
mov
or
cmc
subl
push
aaa
jl
imul
xchg
xchg
sub
push
or
add
incl
jb
call
enter
and
jae
xchg
cmp
loopne
or
mov
pushf
data16
call
add
xor
jecxz
aas
test
cmpl
pop
add
adc
les
inc
rcrb
and
data16
cmp
pop
movsb
push
mov
sub
xchg
and
movsl
mov
call
and
sbb
orl
mov
rclb
xchg
mov
nop
ds
xor
or
add
sahf
dec
push
jmp
jno
lret
cld
mov
pop
add
inc
xchg
push
cli
mov
fbstp
sbb
or
push
pop
mov
or
nop
loop
mov
push
ret
shrl
subb
shll
sarl
ja
cmpsl
mov
aam
cmpb
incb
and
push
roll
popf
icebp
popf
mov
sub
add
dec
testl
mov
mov
ret
inc
aaa
cmp
sti
js
out
mov
stos
je
and
sti
out
pop
les
xor
mov
arpl
mov
movsl
xor
inc
push
xchg
or
std
fwait
add
movsb
inc
push
jge
and
and
insl
and
mov
or
xchg
nop
jne
pop
dec
cld
add
mov
dec
pop
aas
and
and
lcall
lods
sub
enter
mov
lcall
leave
movsb
pop
push
out
das
cmpb
sarb
call
push
testl
add
je
dec
incl
adc
insb
add
out
push
sti
adcl
adc
les
add
push
movsl
dec
pop
xchg
add
das
imul
js
lahf
push
andb
decb
lock
jmp
sbb
sahf
jmp
fisubl
icebp
iret
pop
mov
sub
cs
shl
fbld
mov
call
add
lahf
rclb
sbb
stos
scas
add
mov
orb
pop
pop
dec
cli
lret
aaa
insl
sar
adc
pop
movsl
mov
push
jno
add
popf
push
pop
mov
push
dec
int3
cmp
and
mov
outsl
add
add
in
xor
pop
dec
insl
lcall
fldt
jno
pusha
jns
ret
xchg
jbe
fmuls
shlb
jg
cmpsb
hlt
incb
inc
xor
inc
cmp
dec
jg
sysret
pop
fwait
or
pop
call
aam
inc
mov
push
xchg
add
cmp
outsb
fisttpl
clc
rcr
rolb
stos
stos
jbe
cmp
sub
sbb
adc
push
mov
adc
mov
xor
lods
inc
xchg
or
mov
push
add
daa
pop
aam
xchg
dec
shlb
xorb
cmc
fwait
jo
dec
data16
enter
dec
ja
inc
and
jecxz
ret
ljmp
mov
stmxcsr
sbb
test
rclb
sbb
insb
and
and
str
enter
xorl
cmp
xchg
pop
lods
loopne
outsl
xchg
adc
jb
mov
adc
pusha
adc
add
fists
or
pop
adc
sub
xchg
pusha
je
cmp
xor
inc
ljmp
and
dec
adc
inc
out
fcoms
cld
xchg
dec
mov
and
mov
adc
sub
xchg
jae
push
rorb
or
xchg
fldenv
stc
sub
pop
sub
add
nop
cli
fildll
inc
je
sub
popf
clc
imul
jmp
loope
cmpsb
fdivr
add
je
pop
xchg
pop
gs
mov
or
mov
jl
sub
inc
mov
xchg
or
xchg
cwtl
pop
jmp
ljmp
xorb
clc
sub
jmp
push
lods
mov
dec
cmpsb
inc
cld
int
psubusb
pop
inc
adc
fs
call
sub
mov
sub
jo
mov
jecxz,pn
lea
lret
pusha
jp
or
add
scas
lcall
cs
mov
inc
pop
ja
adc
mov
pop
mov
lock
sbb
sahf
rorl
test
call
loopne
mov
sar
inc
inc
inc
popf
inc
repz
popf
inc
jbe
sbbl
and
sahf
add
sub
enter
ret
pop
cltd
sub
sub
fbstp
jg
aas
mov
mov
enter
or
inc
dec
call
fcmove
mov
dec
adc
jae
movb
daa
nop
js
std
or
cwtl
dec
add
sbb
push
fcoml
clc
jg
movsb
mov
or
lock
ljmp
shlb
int
out
xor
sbb
ljmp
sti
into
iret
push
sub
loopne
stos
aaa
sbb
test
loopne
lods
bound
push
mov
jge
inc
mov
inc
lods
les
cmp
push
jmp
pop
sbb
xor
ret
dec
adc
push
rorl
push
outsb
nop
mov
ss
test
sub
lds
imul
push
add
mov
cld
sub
and
mov
sbb
pop
repz
insl
dec
jo
and
push
dec
call
jb
movb
cmp
add
sbb
call
jbe
jmp
lret
adc
inc
and
std
out
xchg
pop
jae
pusha
pop
mov
arpl
dec
sub
dec
mov
call
mov
out
push
jo
xor
ss
lcall
adc
rcl
ss
xorl
xor
jle
and
push
or
rorl
push
adc
mov
mov
loope
sbb
loop
icebp
pop
cmpsb
jo
and
iret
add
xchg
pushf
jo
cld
mov
imul
bound
pop
icebp
out
pop
jbe
les
mov
xor
and
inc
sub
pop
add
dec
mov
and
sar
push
test
outsl
cmpl
lock
xchg
add
rorb
or
xchg
sub
jb
jle
push
sbb
dec
fistpll
and
fbstp
pop
rorl
rolb
sub
adc
push
mov
call
leave
adc
gs
dec
in
xor
test
and
fwait
mov
push
xor
push
aad
nop
or
adc
xchg
aad
pop
add
jp
pusha
shll
mov
std
mov
imul
jne
sahf
jg
and
add
or
out
jbe
aaa
xchg
movb
clc
dec
rorb
sub
or
mov
xlat
jmp
add
and
inc
xchg
into
call
addr16
ljmp
mov
aaa
adc
add
dec
pop
nop
mov
cld
mov
jb
shll
xor
jge
pusha
and
popa
mov
mov
mov
pop
lret
or
jnp
addr16
lock
scas
div
rorb
jmp
aad
cmpsb
das
xchg
and
dec
xchg
add
cs
shrl
pop
pushf
leave
cmp
js,pn
mov
mov
jle
push
in
fisttps
cld
stos
fiaddl
into
adc
jg
push
inc
sbb
mov
inc
mov
add
mov
jb
inc
fsubs
std
rdmsr
lret
loopne
add
sahf
xor
icebp
dec
mov
mov
ljmp
xlat
xchg
add
jne
push
push
sub
xchg
push
scas
and
rolb
iret
mov
fldl
cltd
mov
push
outsl
aam
in
add
add
call
dec
decl
sub
mov
sub
adc
mov
decl
add
sbb
mov
inc
or
dec
push
xor
or
int3
or
and
push
or
sub
xchg
sarb
mov
push
clc
add
mov
cld
inc
loop
in
jg
push
lea
dec
std
out
addb
xor
add
push
sbb
enter
push
lock
stos
jae
mov
push
loope
cmpb
push
ret
test
jl
jecxz
or
aaa
cld
dec
sbb
inc
add
jmp
adcb
outsb
add
xor
xchg
fmull
push
push
mov
and
mov
stos
push
iret
xlat
cmp
popa
push
mov
popf
inc
icebp
cs
aad
dec
shl
or
xor
mov
inc
lds
shr
add
and
push
cli
sub
or
pop
and
dec
push
stos
pop
xor
mov
ds
inc
cwtl
je
adc
and
lods
lahf
repnz
call
in
rcl
sub
inc
lds
es
sahf
fst
add
jb
pop
adc
sub
ficompl
pop
js
mov
and
outsl
mov
iret
pushl
cmp
dec
lods
cmpsb
sub
jo
jp
add
xchg
jg
mov
jno
mov
je
and
xor
and
repnz
inc
xor
sub
aaa
movsb
aas
add
mov
test
out
mov
scas
andl
es
insl
mov
lock
mov
test
shl
das
rolb
leave
clc
mov
outsb
idiv
ja
fs
mov
aas
push
push
inc
and
lods
push
adc
sbb
jbe
pop
jnp
and
icebp
fs
adc
or
lcall
scas
js
push
push
lcall
fcomip
mov
jle
repz
divl
mov
fs
jg
ret
push
inc
test
add
and
enter
dec
sbb
iret
or
mov
push
and
and
fidivs
test
imul
push
or
pop
jecxz
jl
add
repnz
mov
inc
inc
les
push
mov
or
xchg
int3
jg
loopne
ljmp
sbb
sbb
pop
adcb
or
pop
rcl
pop
adc
addr16
bound
rclb
cmp
nop
inc
mov
cmp
cld
xchg
jecxz
push
push
push
sbb
stc
push
xor
push
stc
dec
push
fwait
iret
mov
or
pop
mov
lods
aas
sahf
xchg
add
or
inc
xor
cmc
jg
dec
add
xchg
test
fsubr
loopne
add
dec
adc
pop
and
call
aam
adc
jl
pop
cmp
adc
sbb
xor
bswap
mov
or
push
ret
cmp
inc
cmp
clc
adc
inc
or
jle
testl
lahf
lods
pop
iret
call
adc
cs
popa
cld
lahf
push
mov
add
jbe
cmp
pop
or
cli
ss
or
jmp
shr
sub
mov
js
leave
pop
enter
push
or
add
jo
jo
or
fistpl
pop
dec
cli
lret
xchg
sbb
add
jbe
xchg
inc
loopne
push
mov
pusha
das
add
je
jbe
adcb
xor
or
add
add
loope
jbe
loop
jg
fcoms
xor
add
push
dec
es
negl
mov
mov
incl
inc
andb
mov
mov
or
push
loope
xchg
dec
adc
mov
cmpsl
mov
dec
mov
lock
and
xor
inc
scas
in
incl
in
mov
jmp
mov
jecxz
stc
out
mov
pop
stos
push
mov
mov
push
and
outsb
test
mov
mov
fdivrs
jg
xor
mov
and
test
cmp
and
daa
rcl
jmp
and
push
xchg
jg
push
mov
jmp
or
outsb
cmp
sub
ret
xchg
sbb
test
and
mov
stos
sbb
outsl
incl
popa
sbb
xchg
fwait
pop
mov
ds
stos
dec
popf
pop
nop
cmpsb
mov
adc
sbb
negl
sbb
pop
pop
fcom
xor
fcmovu
or
mov
popf
mov
ss
data16
push
lret
das
sar
cmp
rolb
jl
mov
push
sbb
hlt
fwait
sub
dec
xor
out
or
mov
and
inc
xchg
pop
cmp
jecxz
mov
data16
outsl
cli
cmp
clc
loopne
push
push
test
inc
pop
hlt
bound
and
jl
or
sub
lahf
pop
bound
add
sub
cmp
idiv
decl
out
mov
movsb
jge
stos
inc
push
aaa
adc
cmp
push
and
jmp
test
jo
push
add
cmp
inc
call
mov
xchg
mov
fcomip
jg
mov
decb
hlt
int
repnz
push
add
ret
scas
jnp
sub
push
stos
iret
pop
lods
lcall
pop
adc
sub
adc
pop
dec
icebp
arpl
jle
dec
and
adc
dec
and
int3
pop
inc
movsb
cli
mov
add
and
pop
movsb
lcall
cmpsb
xchg
xor
mov
push
lods
out
repnz
roll
outsl
sbb
outsl
add
pop
xchg
lds
or
mov
pop
jle
mov
cld
int3
inc
sbb
mov
popa
roll
scas
fs
stos
push
sti
rclb
in
test
push
call
cmp
push
adc
bound
incb
incl
pop
std
dec
shrb
test
inc
fstps
push
jl
lods
jae
xchg
push
rolb
ss
jmp
out
xor
imul
and
fs
cmpsl
es
or
adc
subb
and
or
test
lcall
mov
arpl
ja
sub
dec
shrb
test
jp
fdivr
mov
outsl
sub
mov
add
xchg
shl
dec
cmpb
push
or
loop
fisttpl
sub
lds
out
xlat
cld
jae
cmpsb
xlat
or
shr
or
mov
jg
mov
jno
ret
lods
mov
jg
jp
test
ja
push
movsl
stc
push
jno
jmp
inc
loopne
insl
je
cli
push
fcmovnu
lahf
lds
add
sahf
push
enter
aaa
inc
cltd
cld
dec
punpcklbw
jge
xor
jecxz
sub
dec
pop
sub
push
pusha
leave
aaa
mov
fs
dec
pop
xchg
sub
inc
xor
or
adc
jnp
jbe
addl
dec
push
push
adc
cmp
inc
ret
fwait
decl
cwtl
mov
or
pushf
jo
call
faddl
dec
cmp
mov
inc
pop
adc
pop
mov
or
or
inc
je
jne
test
bound
cmp
and
lods
cli
fcomip
jmp
add
adc
ret
es
mov
xor
adc
mov
testb
xchg
lcall
cld
clc
mov
loopne
dec
das
int
mov
shrl
pop
mov
fwait
pop
in
dec
mov
rcrl
sub
lods
addr16
test
mov
adc
jmp
adc
leave
or
lods
addr16
fwait
and
out
inc
mov
sbb
std
clc
jecxz,pt
in
or
orb
mov
rorb
fbld
out
jo
mov
adc
mov
xor
adc
sub
dec
push
mov
mov
jae
xor
adcl
inc
and
rolb
popf
or
xchg
xor
or
inc
and
xor
jmp
cmpsb
adc
dec
fdivp
inc
cmp
jmp
into
xchg
push
es
fidivl
add
jecxz
stos
shlb
mov
jp
dec
jg
jmp
mov
push
mov
fimull
sub
lret
clc
mov
xor
sbb
stc
or
jmp
jmp
repnz
in
and
xchg
sub
pop
push
xor
lahf
inc
cmpsl
hlt
add
lock
rclb
add
sbb
nop
incl
lods
in
push
jmp
fildll
icebp
sbbb
shll
mov
in
das
add
pushf
mov
or
or
ja
mov
stos
mov
xor
xor
mov
test
imul
mov
push
adc
add
and
xor
pop
mov
sbb
icebp
rorb
sbb
in
addr16
dec
subb
jle
push
inc
arpl
decl
jne
xor
push
jo
ja
loopne
push
xchg
icebp
test
or
cwtl
rcrb
mov
lcall
mov
push
mov
push
bound
jne
xchg
or
add
ret
jb
sbb
jbe
icebp
daa
rolb
mov
cld
outsb
push
movsb
add
push
nop
mulb
cs
mov
fists
xchg
je
add
jl
loop
lahf
jmp
sbb
mov
in
repnz
test
cmpl
lea
nop
cltd
aas
push
mov
cmp
push
adc
ss
add
push
cmp
xchg
icebp
ljmp
jmp
mov
jbe
add
out
mov
scas
or
bound
mov
mov
xor
orb
sbb
adc
popf
and
lock
mov
push
pusha
pop
xchg
mov
mov
mov
stos
adc
fcomip
mov
mov
hlt
loope
push
or
sub
and
jl
shrb
and
jl
push
lcall
ds
test
fdivl
insb
shrb
push
dec
bswap
adc
clc
sbb
test
xor
out
dec
jns
adcl
bound
adc
imul
scas
jl
xorl
mov
and
lcall
shlb
and
add
xlat
mov
or
es
add
sar
add
outsl
mov
sub
mulb
decl
mov
sbb
sbb
mov
adc
sub
rorb
ret
mov
negb
jg
sub
mov
mov
loopne
mov
cltd
pop
push
sbb
leave
push
pop
sbb
sbb
hlt
mov
adc
cmp
jns
jbe
sbb
mov
incb
lcall
fucomip
arpl
xchg
mov
outsb
lahf
jae
mov
mov
sub
push
and
push
pop
test
lcall
adc
imul
out
cmp
mov
aaa
push
fbstp
sub
cmp
sbb
sbb
ret
push
and
dec
xor
icebp
push
loop
mov
ja
lds
shll
mov
mov
incl
lods
dec
sbb
rcrb
scas
js
loopne
in
insb
adc
sub
je
pop
in
pop
cmpb
jo
cmpsb
mov
popa
loopne
add
decl
or
cmp
push
cwtl
push
push
lahf
je
repnz
xor
cmc
outsb
aaa
and
ret
scas
push
adc
insb
stc
ret
sub
jg
lea
xchg
mov
mov
and
idiv
mov
stos
xchg
mov
pop
sti
mov
cmp
sahf
push
movsb
int
nop
push
sbb
addl
decl
imul
mov
mov
mov
and
mov
insl
loop
xchg
lea
mov
dec
mov
pushf
ljmp
ljmp
enter
adc
jl
pushf
inc
out
inc
dec
jl
cmc
xchg
add
mov
push
inc
dec
inc
fildll
adc
sbb
ja
pop
lock
cs
jmp
sub
pop
pushf
pop
je
adc
or
add
clc
fbstp
outsl
xchg
negb
jecxz
mov
cmp
fs
add
add
dec
xor
add
or
jg
mov
inc
aas
pop
repz
inc
sar
cs
inc
xchg
xchg
incl
pop
cmc
add
xchg
xchg
call
sahf
and
sub
cli
sub
pop
mov
push
cmpsb
cmpsl
jmp
cmc
pusha
mov
adc
leave
mov
fistps
pop
inc
int
adc
sbb
and
pop
out
cltd
in
adc
push
pop
out
add
jle
stos
xor
add
mov
sbb
leave
shll
adc
adc
adc
fnsave
inc
xor
jnp
int3
adc
sbb
repnz
les
cmp
push
mov
xor
fcomps
repz
lahf
add
popa
add
mov
sub
call
inc
mov
sbb
push
decb
incl
pop
inc
xor
add
jg
enter
jl
push
ret
mov
or
inc
pusha
je
subb
mov
popf
movsb
mov
xchg
or
int3
je
xchg
stos
inc
subl
and
mov
or
add
add
xor
clc
icebp
inc
fsub
lcall
mov
xor
nop
mov
jno
pop
ds
adc
mov
pushf
sub
cmpsb
mov
cli
decl
cmp
add
mov
jne
cld
adcb
decl
inc
cmp
add
ljmp
cs
mov
push
push
test
fs
outsl
inc
adc
jo
adc
sub
push
push
call
or
in
mov
test
nop
int3
jecxz
add
or
adc
mov
add
jbe
or
lret
mov
sub
jnp
ret
decb
sub
js
jg
incl
fwait
sbb
xor
sub
fucomip
shll
pop
paddsw
cmp
aam
cmp
or
mov
add
stos
or
pusha
xchg
pop
les
jmp
add
insl
fadds
sub
or
jmp
in
sbb
jbe
loop
mov
cs
push
roll
add
dec
or
fistl
lcall
mov
lock
ds
mov
in
sub
popf
or
mov
xor
ss
in
movsb
jae
arpl
scas
xor
mov
pop
pop
jl
sub
test
pushl
xchg
add
sub
out
notl
andb
add
loopne
sbb
out
push
cmpl
sahf
incl
mov
mov
dec
rol
fwait
pusha
decb
mov
pop
fadds
inc
fidivrl
jbe
int3
es
lcall
add
mov
sub
sahf
clc
add
jg
or
xor
pop
dec
add
inc
jns
inc
ret
cmp
cmp
push
clc
pop
fiadds
icebp
sub
pop
xchg
cmc
cmp
jmp
clc
cwtl
push
push
loope
sbb
in
lret
scas
or
pop
ficomps
add
add
mov
cmp
sbb
xchg
mov
dec
dec
outsl
add
jge
pusha
sub
dec
hlt
mov
adc
bound
arpl
mov
and
in
insl
lock
lock
cmp
adc
mov
adc
xchg
add
jbe
insb
push
test
and
add
lock
incl
ficoml
add
fcoml
rcrl
mov
call
adc
add
xchg
pop
or
pop
and
xor
adc
mov
sub
push
jns
mov
movsl
mov
cmp
fcomip
jg
pushf
add
es
shll
nop
and
pop
pusha
mulps
mov
cmpsb
aad
xchg
outsl
push
mov
fdivrl
cmpsl
jb
pop
or
cmpsl
mov
shlb
or
cli
cmc
mov
js
xchg
lret
sbb
xchg
sub
xchg
fisubrl
pushl
or
mov
test
pop
fidivl
movsl
insb
or
push
push
xor
inc
aas
hlt
clc
xlat
inc
decl
inc
daa
add
repnz
test
in
xchg
sti
repz
fildl
lret
pop
inc
adc
mov
push
cli
jae
jo
sbb
shrl
pop
xorb
adc
mov
fdivrl
lock
sbb
insb
loope
jmp
xor
push
cs
xlat
scas
loope
aaa
jmp
mov
add
inc
in
cltd
mov
insl
adc
lret
int3
subb
sub
xor
mov
enter
push
movsb
xchg
jge
inc
aaa
cmpl
dec
lcall
xor
sub
jmp
mov
std
ss
and
lds
add
push
subl
add
lahf
dec
aam
decl
dec
jecxz
or
mov
sahf
loopne
fisubs
rcr
push
lock
outsb
pop
jle
sub
mov
xchg
pop
icebp
sbb
shll
mov
out
sub
mov
rorb
cmp
js
rolb
call
dec
stc
out
or
stos
adc
fiaddl
dec
xchg
aam
scas
into
lret
jo
mov
mov
adc
cmc
push
loope
stos
push
jb
pop
jle
cwtl
ret
pushw
xchg
aam
cli
xchg
sbb
mov
mov
ljmp
push
cmp
inc
add
dec
mov
add
pop
dec
adc
lock
shrb
arpl
mov
std
mov
cmp
fdivl
ljmp
mov
jns
mov
andb
ss
out
in
mov
std
aas
clc
inc
pop
cmp
jl
add
or
in
push
std
out
add
and
lods
add
jl
lcall
mov
dec
sub
movsl
adc
clc
sub
fs
xor
call
adc
or
push
pusha
mov
test
and
mov
dec
sar
cli
data16
sbb
dec
sbb
and
adc
call
loopne
push
mov
jecxz
icebp
mov
shrd
push
insb
std
jmp
cld
mov
and
inc
xor
xor
dec
mov
push
inc
insl
dec
inc
add
call
aaa
inc
bound
leave
icebp
repz
mov
inc
xchg
cmp
add
or
or
addr16
jmp
ret
or
mov
outsl
cli
out
fists
xchg
imul
std
es
jg
enter
test
inc
insb
es
test
in
das
xor
fwait
jp
in
sbb
push
fbld
fwait
outsb
inc
mov
dec
add
push
fidivs
es
xchg
jge
into
mov
xorb
mov
incl
sub
push
adc
add
mov
xchg
and
sbb
loop
test
xchg
jmp
cmpsb
adc
fnstcw
call
stos
pusha
cmp
gs
mov
icebp
dec
dec
in
mov
xor
movl
and
test
nop
imul
cmpsb
xor
sub
mov
dec
mov
add
clc
cmp
push
mov
sub
ljmp
jl
xchg
add
push
fnstcw
cmp
cmovs
into
sub
stos
sbb
add
cld
inc
call
add
lret
cmp
es
and
xchg
test
rorl
rol
lock
fistps
lahf
inc
mov
xchg
shrb
pop
in
repnz
clc
loop
dec
shll
jmp
xchg
rorb
clc
sarl
lea
inc
jg
test
ljmp
clc
fstl
adc
mov
mov
mov
or
pop
loopne
mov
xor
test
das
jp
incl
mov
push
or
js
mov
out
int3
in
hlt
cs
gs
or
sbb
call
sub
add
cmc
cmp
scas
add
pushf
mov
sub
sbb
pop
insl
std
jg
nop
and
xor
mov
inc
push
mov
and
std
inc
push
and
xchg
shlb
mov
add
adcb
pushl
test
inc
xchg
prefetch
loopne
pusha
jmp
push
lods
aad
popa
and
xor
shll
or
aas
push
out
loopne
push
icebp
add
adc
insl
cwtl
mov
mov
mov
out
pop
jp
nop
test
jg
inc
xor
jg
outsl
mov
rorl
push
xor
cld
stos
scas
add
jmp
mov
or
adc
pusha
adc
bnd
pop
or
decl
lods
push
sub
movsl
add
gs
sbb
aaa
mov
push
mov
push
ss
mov
ret
mov
sbb
mov
mov
subb
xchg
nop
pop
sub
lock
jg
inc
stos
push
push
out
jl
test
xchg
into
loope
pop
pusha
mov
mov
or
pop
mov
pop
mov
movsl
cmp
or
add
pop
jo
leave
sub
pop
adc
adc
jl
loop
cld
push
xrelease
pushl
cwtl
sbb
xchg
add
or
cmpsb
es
pop
insl
insl
pop
movb
and
js
ljmp
jg
pop
inc
hlt
push
add
dec
add
xchg
addb
jg
mov
lods
add
jo
jp
or
pop
add
inc
pop
inc
ret
stos
es
into
xchg
jo
aam
push
adc
shrl
data16
xchg
icebp
cmpsb
decl
xlat
push
dec
movb
testl
shll
push
or
add
mov
mov
inc
out
leave
push
call
xchg
inc
cli
sub
adc
adc
xor
stos
pop
hlt
es
ljmp
ret
lds
sub
sub
cmp
push
sub
push
push
or
xchg
cmpsl
nop
or
fcos
pop
mov
jo
sub
dec
ss
cli
popa
inc
dec
aad
decl
lods
dec
and
cwtl
push
push
cmp
popl
es
enter
ja
or
imul
mov
loop
sub
sub
in
das
and
mov
and
into
lret
add
je
nop
std
pushl
andb
push
dec
xor
jb
mov
add
or
and
or
push
cmp
imul
call
decb
mov
subb
ja
fidivs
inc
or
xor
sub
adc
fisttps
mov
adc
ljmp
out
ret
or
adc
mov
jg
jg
insl
fcompl
push
aas
lock
push
aas
jle
dec
sbb
scas
clc
mov
loopne
mov
es
call
mov
sub
iret
add
cwtl
or
call
and
add
fsubs
jbe
stos
or
or
push
mov
subl
adc
mov
adc
dec
aaa
ljmp
sbbb
int3
and
push
addb
and
addl
je
and
mov
xchg
bound
or
and
arpl
adc
dec
clc
filds
loop
dec
out
adc
xor
fwait
jg
xchg
inc
mov
add
add
shlb
stos
sub
clc
mov
outsl
sub
mov
push
mov
push
cs
push
je
cs
decl
das
cmp
call
inc
rclb
or
fsubr
sbb
and
xor
push
lret
lds
mov
loope
inc
push
and
sahf
inc
in
xchg
lea
shl
sahf
pop
cmp
orl
jl
dec
dec
jecxz
aam
jmp
or
push
pop
pop
incb
adc
push
data16
subl
popa
loope
incl
and
outsb
movsb
dec
or
mov
cs
cli
js
pop
arpl
add
adc
into
bound
sarb
pop
xor
mov
rorb
aas
cli
das
cmp
lret
imul
outsb
add
sub
lods
mov
adcl
jo
pop
cmpsb
cmpsb
pop
mov
add
sub
or
or
mov
cmpsl
adc
aam
les
or
sti
adc
push
sbb
lret
call
xchg
jno
cli
inc
ljmp
dec
mov
push
hlt
and
or
cmpsb
outsb
out
clc
jg
mov
loopne
or
adc
cwtl
or
add
xchg
out
add
hlt
xlat
lea
mov
xlat
pop
movsb
cli
outsl
clc
iret
aad
in
pusha
lock
incl
sbb
pop
lcall
xor
dec
jb
cmp
out
push
das
inc
add
xchg
xchg
cltd
cwtl
sbb
jg
xor
sub
pop
loop
bound
xor
and
stos
adc
jne
lret
xor
popa
out
mov
in
sub
mov
stc
cmpsb
sarb
decl
test
xchg
inc
lock
inc
push
xchg
nop
mov
jns
fdivs
pop
adc
int
test
push
shl
inc
push
add
test
mov
filds
and
js
call
sbb
jmp
add
xchg
sti
mov
jle
add
adc
lcall
adc
jp
dec
gs
ljmp
mov
std
mov
sbb
or
jg
popa
cld
mov
jp
xchg
fiadds
push
lcall
push
and
mov
mov
cmp
pop
fs
dec
push
aam
addb
movsb
into
jno
scas
sub
cmp
dec
dec
pop
and
pop
push
hlt
mov
add
and
mov
add
jae
loop
push
adc
push
inc
push
into
leave
out
lods
adc
or
inc
ret
sbb
mov
ljmp
sbb
jg
sar
rclb
and
jo
in
adc
jb
rolb
cld
mov
out
loopne
mov
sbb
push
test
mov
inc
scas
enter
aas
and
aaa
push
std
pop
or
jl
mov
mov
adcb
mov
mov
hlt
jg
hlt
push
mov
jns
leave
sbb
call
clc
xlat
mov
in
xor
mov
dec
xchg
inc
or
mov
fs
mov
lea
mov
or
add
sbbb
lea
mov
das
call
decl
cmpsb
xchg
adc
pop
mov
inc
jg
popf
sbb
pop
subb
adc
dec
inc
enter
decl
pop
and
inc
lret
scas
cmp
cs
dec
add
add
fidivs
je
mov
lock
std
incl
test
enter
add
mov
into
adc
stc
mov
or
add
fsubl
sar
cld
in
pop
les
mov
inc
jbe
aam
or
xchg
mov
decl
fistpll
jb
sbb
mov
mov
stos
out
cmpb
mov
insb
pop
movsl
add
jg
adc
rorb
xor
adc
fisttps
into
sbb
daa
push
pop
dec
in
mov
sbb
mov
add
stos
decb
out
inc
mov
xchg
sub
lret
test
andb
pop
jp
in
jmp
and
cmpsl
mov
nop
or
push
test
mov
rolb
clc
add
add
test
or
adc
ret
rorb
lcall
imul
add
inc
lcall
lock
in
in
stos
ja
incl
test
loop
dec
adc
sbb
pop
xor
jecxz
lock
xchg
clc
subb
push
fistpll
in
test
mov
and
mov
lss
push
sub
dec
enter
and
mov
push
clc
jmp
loopne
rcrb
jbe
dec
pop
ljmpw
mov
or
sub
inc
cmp
mov
mov
fildll
jl
sarb
xor
jg
or
pop
dec
xchg
pop
sti
nop
mov
pop
ds
in
loope
ja
sub
idivb
or
cmp
add
mov
in
rcrb
add
add
mov
fs
add
push
and
add
ljmp
movsl
push
dec
pop
and
call
jns
cld
fdivs
cltd
dec
pop
mov
popa
es
xchg
divb
enter
mov
push
mov
jecxz
clc
mov
aas
cld
sub
pop
pop
enter
cmc
inc
add
cmc
movsb
dec
imul
mov
and
mov
sbb
inc
ljmp
cwtl
aaa
cmp
test
nop
fmuls
mov
cmp
dec
cld
xlat
pop
sub
ljmp
fisubs
xchg
into
add
adc
add
inc
andb
testl
cmp
inc
mov
movsb
add
adc
and
sbb
cmpb
sahf
fsubl
into
and
bound
xchg
fst
mov
mov
test
cmp
or
stc
es
ljmp
mov
sbb
mov
cmc
add
adc
mov
jmp
dec
pop
lahf
or
and
jns
jle
mov
inc
call
mov
ss
add
adc
cwtl
xor
pop
sub
nop
loop
sbb
or
adc
or
ljmp
push
add
dec
lcall
ss
pop
adc
enter
and
ja
div
lods
mov
mov
adc
mov
sar
mov
push
sub
scas
clc
adc
sub
lahf
loopne
lcall
dec
test
push
sbb
sub
testb
out
fcoml
test
cmp
stos
test
idivb
ss
sub
fbld
push
mov
sbb
rolb
inc
clc
lcall
cmp
and
add
push
in
adc
mov
sub
mov
pushf
jno
mov
xchg
arpl
fidivl
add
jmp
dec
mov
aad
arpl
sbb
fadd
fwait
pop
sbb
mov
ljmp
jb
pushf
dec
or
movsl
add
or
inc
orb
ja
cs
fldenv
loop
outsb
sub
outsl
xor
loopne
cld
pop
adc
lods
sub
cmp
es
inc
add
in
jl
dec
cmp
rcr
jne
mov
xor
lea
les
adc
xchg
mov
pop
icebp
or
lods
js
inc
mov
and
incb
xchg
insl
push
inc
pop
jp
rol
inc
loopne
mov
cmp
icebp
fistps
les
xchg
ljmp
cli
xchg
cmp
cmpsb
pushl
mov
in
sbb
pushf
xorb
loop
add
movups
iret
xchg
push
aas
fcomps
cmpsl
sub
out
mov
or
push
jg
decl
push
repz
jmp
test
cmp
addl
jb
pop
ret
ja
leave
les
movsl
add
xchg
aas
xchg
mov
rol
loopne
stos
mov
inc
sub
incl
push
mov
or
mov
popa
adc
enter
mov
pop
ja
inc
lcall
ja
andb
pusha
aam
mov
xor
mov
xchg
add
pop
rolb
test
add
dec
add
outsl
add
cmpsl
rorl
in
fistl
jb
into
dec
or
add
dec
ret
xchg
ret
add
les
andb
daa
je
and
lods
mov
out
pop
insb
pusha
sub
ljmp
rorl
or
lods
imul
mov
fildll
aam
mov
insl
xlat
stc
mov
pop
test
mov
cmp
fbstp
adc
mov
or
test
xchg
mov
incl
fnstenv
lahf
das
mov
lcall
bound
out
xor
xchg
repnz
sub
sbb
sub
jl
jno
and
fldenv
and
pushl
cmp
aas
mov
icebp
lea
fistpll
jp
inc
sbb
insb
add
pop
loopne
out
push
add
icebp
fs
add
or
sbb
cmc
mov
push
xor
or
xor
dec
outsl
sub
jo
xchg
xchg
incl
cwtl
inc
xor
out
jmp
mov
in
mov
cli
add
mov
mov
cmp
inc
outsl
aaa
insl
sbb
sbb
push
jno
mov
dec
pop
int3
aas
add
cli
ror
sub
aas
pop
lock
mov
outsl
pop
and
inc
int3
arpl
mov
test
adc
ss
std
es
and
sbb
mov
stos
push
pop
fimuls
inc
add
lret
or
clc
ljmp
xchg
xor
jecxz
inc
rclb
sbb
mov
addl
sbb
dec
cld
lcall
xlat
inc
push
imul
lods
test
idivw
add
ret
orl
mov
and
pushf
call
mov
or
xchg
dec
jno
decl
xchg
or
or
jo
sbb
adc
add
push
or
push
sub
xchg
test
repnz
dec
out
mov
aaa
scas
lock
loope
mov
ret
stos
cmp
push
fsub
add
fidivs
dec
mov
sbb
sub
es
nop
ja
lock
mov
or
push
mov
inc
xchg
add
repnz
push
add
pop
shlb
xor
clc
mov
mov
jo
xchg
xor
mov
or
mov
jmp
mov
pop
push
mov
and
and
fdivl
cwtl
push
popf
adc
adc
lods
dec
add
pusha
adc
xlat
or
rcrl
jmp
sarb
repnz
cmp
sub
xchg
jo
call
add
sub
inc
movsb
decl
or
xchg
xchg
add
add
adc
ficomps
jns
lock
or
and
lcall
addb
pop
movsb
cmp
pop
std
icebp
mov
leave
js
jl
xor
or
jecxz
pop
mov
lds
push
add
fwait
pop
lahf
xor
or
and
lret
sub
push
jmp
fcomps
stc
adc
and
adc
shlb
or
in
xchg
mov
jmp
push
lods
ljmp
push
mov
bound
fimuls
xor
add
ljmp
clc
inc
adc
mov
and
aaa
repz
incl
adc
nop
dec
inc
incl
movsb
je
push
sahf
fs
pop
pop
addb
sub
decl
add
xlat
mov
adc
xorb
xor
jno
inc
outsl
cli
mov
jno
inc
xchg
lret
faddp
push
adc
cltd
and
add
repnz
pop
jl
decl
lods
sub
cmp
mov
or
pop
add
dec
jge
or
xchg
cmp
dec
mov
or
incl
mov
shrb
andb
test
icebp
sahf
jbe
xor
mov
loopne
adc
xchg
pop
decb
aaa
scas
xor
lcall
lods
lcall
hlt
out
loope
insb
pusha
xlat
mov
sbb
pusha
cs
cmpsb
and
xor
rorb
pop
aaa
arpl
push
dec
inc
push
pop
pop
mov
xchg
inc
pop
push
lcall
or
cmpb
test
in
pop
add
pop
jmp
pop
adc
dec
int3
pushf
test
add
out
outsl
js
outsb
les
es
call
lea
test
dec
int
cli
mov
adc
adc
lret
pop
mov
cmpsb
jp
sbb
inc
jb
cltd
inc
sub
xchg
cli
lds
adc
cmp
daa
mov
dec
sbb
mov
je
push
scas
mov
inc
xchg
inc
cmp
das
mov
and
jmp
ret
stos
push
mov
incl
insb
adc
out
or
movl
pushl
imul
int3
mov
inc
or
or
shlb
icebp
pushl
cmpb
dec
mov
into
lcall
mov
nop
push
scas
xchg
dec
cmp
ja
xor
adc
add
out
or
and
cld
incl
and
or
add
fists
cmp
inc
sbb
lcall
ljmp
xchg
shl
mov
and
xlat
xchg
or
xor
fnsave
adc
push
sub
dec
loopne
add
fisubl
mov
add
sahf
mov
add
inc
outsb
dec
add
sub
jb
add
sbb
loope
jbe
xchg
cli
inc
push
inc
test
dec
hlt
jmp
sub
cld
mov
dec
mov
shlb
pop
jb
insb
push
cmp
jg
lds
or
pusha
stc
and
inc
mov
cmp
lcall
mov
sbb
sahf
push
xchg
jge
lcall
add
test
xchg
mov
scas
in
mov
nop
sbb
or
ljmp
outsb
call
pop
sub
push
xor
adc
lds
and
repz
loop
or
sub
mov
and
xchg
lcall
pop
or
jbe
push
cmp
scas
call
lock
bnd
fldcw
sub
cmp
inc
mov
cmp
adc
mov
and
movsb
add
enter
ret
and
sub
bound
dec
dec
test
call
das
clc
push
cld
or
or
mov
cld
test
mov
fidivs
fisubl
dec
fwait
adc
ret
in
xchg
aaa
mov
add
dec
popf
shr
into
jmp
push
aam
xchg
subb
ja
and
loopne
test
sbb
jo
sar
les
and
inc
ljmp
xor
push
jb
ret
scas
lcall
mov
jle
or
punpckldq
lcall
sub
cmp
rcll
incl
popf
pop
popf
sub
rorl
adc
xlat
push
incl
ljmpw
inc
js
add
sub
mov
fstl
xchg
ds
jg
int3
add
gs
xchg
cmp
adc
sub
rcrb
push
pop
push
aas
cld
sub
sbb
add
into
add
and
les
pop
jg
sub
lea
shr
arpl
dec
clc
jg
lock
lret
adc
or
ja
shl
pushf
adc
subb
pop
outsl
lcall
add
add
lahf
popa
sub
mov
int3
sbb
test
dec
jb
fsubrs
and
test
lock
lock
les
mov
dec
fdivs
mov
pop
es
popf
scas
stos
adc
sbb
stos
push
or
inc
cwtl
add
ret
outsl
pushl
scas
adc
int
dec
mov
or
mov
pusha
sub
xchg
xchg
jg
inc
jnp
cvtps2pi
mov
lock
fimull
and
lcall
xchg
add
sahf
leave
and
mov
clc
cmp
xor
cmp
cmpl
insl
jg
push
andb
mov
jecxz
pop
pop
add
adc
adc
pushl
jo
xchg
test
inc
shl
jns
xchg
adc
sbb
mov
or
mov
js
push
inc
push
call
in
push
dec
test
and
jge
enter
mov
movsb
je
addl
test
mov
push
add
xchg
adc
dec
data16
cltd
push
cli
decl
mov
inc
sti
aas
pop
jo
rcll
addr16
add
dec
clc
call
add
push
nop
subb
and
cmp
inc
inc
jb
in
rorb
inc
xchg
mov
and
inc
lcall
je
push
adc
mov
pop
push
loope
arpl
mov
mov
and
das
xchg
mov
pop
or
cmpsl
fadd
xchg
push
stos
xchg
jl
pop
icebp
xor
incl
xchg
rclb
adc
aam
ret
test
std
scas
js
inc
imul
lea
dec
enter
shll
mov
ret
mov
jg
or
rorl
mov
in
adc
inc
test
or
scas
loop
push
and
outsb
cmp
jmp
gs
add
sbb
sbb
pop
xlat
arpl
shl
pop
movsl
jmp
loop
stos
xorl
add
add
inc
scas
imul
dec
enter
cmp
push
loope
xchg
pusha
mov
and
or
inc
mov
xchg
popa
pushf
movsb
ss
incl
adc
adc
or
mov
push
scas
fs
scas
lret
inc
or
fiadds
les
pop
inc
sub
dec
dec
pop
mov
jecxz
orb
push
jbe
dec
and
jecxz
inc
incb
push
addr16
sub
jp
cwtl
add
cmpsb
ret
pop
test
in
mov
fs
sbb
ja
inc
mov
mov
lahf
clc
and
pop
xchg
add
popf
repnz
mov
mov
or
cwtl
adc
mov
inc
dec
jne
call
icebp
adc
aas
mov
and
stos
adc
cltd
int3
fsts
and
decb
xchg
and
xchg
cld
inc
and
mov
xchg
and
repz
cmp
call
mov
and
cld
imul
iret
pop
hlt
mov
pop
lods
add
pop
xchg
ljmp
jmp
ficomps
das
movsb
fs
mov
adc
xor
mov
dec
sbb
and
ss
popa
dec
sbb
outsl
add
mov
ds
xor
popf
push
sarb
subb
shlb
arpl
push
mov
push
outsl
fabs
pushl
and
inc
ret
pop
push
sub
sbbw
pmullw
and
shrb
xor
rcrl
std
mov
mov
and
inc
add
ret
scas
cmp
and
es
mov
clc
xlat
sahf
sar
xor
cmpsl
and
and
jmp
pop
xor
outsb
cmp
das
sub
xchg
adc
cmp
add
lahf
sbb
aaa
pop
or
clc
aas
pop
push
mov
cmp
xor
aam
mov
mov
push
jo
pop
push
bound
mov
pushl
outsb
cli
jmp
fcoms
and
adc
push
cmp
popa
mov
jg
std
and
mov
inc
xor
add
or
mov
dec
imul
or
sub
cmp
dec
pop
dec
clc
mov
mov
jno
enter
sub
fwait
mov
adc
xchg
cmpsw
sub
mov
in
and
cmp
loope
inc
cmpsb
jno
dec
push
rolb
push
ror
ror
aaa
add
dec
xor
sbb
jnp
and
mov
add
xor
clc
hlt
sbb
fcomip
mov
and
daa
js
lret
les
outsl
inc
cltd
push
loop
add
inc
or
cmp
sbb
add
imul
es
pop
lock
sti
mov
addr16
push
or
loop
and
sahf
repnz
sbb
dec
add
cmp
mov
lcall
sar
jno
fimull
dec
js
mov
fdivrp
out
movsl
clc
out
xchg
pop
out
pop
mov
imul
ficoms
cmpsb
xchg
add
or
jne
sbb
xorb
jg
incl
xchg
and
pusha
push
and
or
movb
hlt
adc
mulb
orb
xor
ret
and
addl
cs
jp
mov
mov
xchg
lea
cmp
adc
stos
dec
call
test
loop
pushl
cmp
jl
mov
push
enter
and
dec
xchg
adc
add
add
std
decl
loopne
out
rcll
movsl
insb
in
addb
je
mull
push
inc
ret
push
mov
cmpb
jg
jmp
cmp
pop
inc
clc
dec
mov
push
ja
add
jge
mov
mov
ja
push
daa
sub
mov
aaa
push
push
nop
or
cmp
mov
dec
ljmp
movb
mov
jg
mov
gs
xchg
movsb
jge
jns
popf
add
jle
in
cmp
std
add
sbb
mov
mov
and
push
sbb
xor
add
cli
je
push
push
adc
addr16
inc
arpl
leave
pop
lock
fdivrp
inc
sbb
loop
mov
adc
dec
cmp
lds
mov
movsb
test
das
repz
and
mov
xchg
iret
outsb
ficomps
sbb
lcall
loop
xor
call
shrb
push
and
jg
push
sbb
addl
xor
cmpl
push
xchg
hlt
pop
inc
movb
xor
jecxz
decl
ja
arpl
inc
into
push
shlb
lock
push
adc
fwait
and
push
add
jne
cld
jnp
pusha
push
sub
add
addl
mov
shrl
inc
dec
inc
je
nop
adc
and
adc
mov
xor
xchg
lea
ljmp
push
push
pusha
jl
lea
mov
sbb
sub
or
bound
mov
pop
mov
or
sahf
mov
or
or
xchg
sbb
pusha
leave
inc
popa
pushl
dec
and
and
mov
or
mov
pop
add
sub
jmp
test
adc
test
ror
ret
xor
dec
and
lock
push
mov
xchg
popf
add
cmc
mov
mov
mov
inc
pop
mov
les
pop
gs
ds
dec
lcall
fs
clc
mov
jo
pop
mov
mov
inc
adc
outsl
test
jl
rorb
and
aas
jmp
out
pop
sub
add
pop
arpl
jmp
mov
sbb
negb
sub
lods
gs
out
clc
cmp
call
rol
sbb
movl
cli
xor
jle
fdivs
sbb
push
test
inc
aaa
mov
jbe
out
add
sbb
mov
and
or
enter
adc
lods
icebp
inc
xchg
add
sub
loope
cs
es
popf
and
xchg
daa
dec
faddl
push
add
mov
mov
movsb
fucomi
ss
insb
cwtl
xor
sub
jne
lods
rcrb
inc
or
out
nop
jle
popa
sub
xor
jno
add
jmp
lock
out
lret
movl
decl
lret
mov
and
cmp
in
ljmp
ret
xchg
dec
pusha
push
cmp
inc
pop
push
pop
ret
adc
push
sti
push
xor
fisubs
add
test
push
xchg
sbb
hlt
sub
scas
cmp
push
jg
enter
push
in
decl
out
les
lcall
mov
dec
xorb
incl
pop
and
mov
shr
jp
sub
jg
inc
leave
scas
adc
popf
nop
icebp
mov
push
sub
test
jb
xlat
lret
nop
push
imul
pop
sbb
sbb
pushl
and
xor
and
add
fwait
and
jg
lock
or
jno
hlt
add
aad
cmpl
jno
xchg
and
inc
lcall
popf
call
loop
adc
lods
aad
ret
push
inc
or
das
out
shlb
mov
into
inc
pusha
decb
sub
mov
cmp
push
adc
jno
adc
shrl
ja
ss
inc
adc
sub
jmp
mov
sbb
add
xlat
mov
mov
and
shlb
loopne
lcall
add
mov
test
push
jle
sahf
insl
lret
ds
addl
push
fldcw
sbb
or
ljmp
orl
cmovg
jnp
lods
imul
fucomip
mov
ss
ret
pop
jg
movsb
aad
arpl
adc
pop
sbb
fs
dec
and
jno
aaa
cmp
dec
jo
orb
test
jg
mov
cs
aam
mov
and
push
add
cmp
add
pop
sub
into
inc
push
cmc
loop
or
jg
test
jg
sbbl
call
lcall
and
push
sar
fdivr
mov
push
adc
dec
adc
call
imul
mov
sarb
add
push
inc
adc
and
sar
fimull
lods
xchg
lods
lret
stos
mov
jmp
lahf
dec
pop
in
je
and
xchg
inc
mov
lret
cmp
pushl
std
ja
push
lahf
icebp
repnz
loop
xchg
dec
xor
dec
cld
out
sbb
shlb
pushf
pop
mov
sub
in
pop
jo
cltd
and
loopne
pop
cmc
pop
dec
sbb
ljmp
aam
fisttps
jae
scas
and
out
sbb
cmp
adc
add
push
enter
pop
pusha
insl
cmpb
les
jg
xor
pop
pop
xor
cmc
cwtl
sbb
shlb
clc
and
aaa
cmpsl
cs
and
sbb
ja
outsl
enter
xchg
cli
xor
fs
dec
cld
pop
idivb
je
dec
ret
dec
add
ja
add
in
test
pop
fs
ja
xor
add
clc
add
rorl
loopne
sbb
aam
push
or
je
push
rcl
pop
cmp
mov
adc
sub
cmpsl
cmp
dec
loopne
pusha
xor
aaa
cld
incl
inc
add
and
insb
sub
push
and
cli
hlt
filds
negl
hlt
popa
sti
mov
xchg
adc
cmp
add
int3
negl
or
sbb
hlt
repz
fs
push
aaa
scas
das
or
call
and
xchg
push
es
xchg
sbbl
adc
repz
fbld
loop
push
lds
inc
and
shl
dec
mov
hlt
outsb
es
sbb
xchg
out
sub
test
loopne
pop
rolb
xchg
lcall
into
push
out
xor
jg
js
inc
push
loope
testb
aam
xor
addr16
xchg
cmp
push
cmpl
ljmp
cmp
fisubs
mov
dec
sub
loop
idivb
jge
push
fdivrl
arpl
negb
shrl
pop
add
push
mov
and
jl
inc
adc
adc
pusha
leave
sbb
pop
cli
aas
xchg
hlt
add
adc
repnz
cmp
mov
shrb
loope
shrb
adc
mov
push
mov
out
not
shrl
mov
js
les
or
scas
xor
xchg
pop
pop
and
or
push
and
or
les
inc
int
mov
hlt
daa
adcl
sub
xchg
ljmp
add
sbb
es
push
daa
or
lret
icebp
cmp
stos
jle
sub
jne
push
xchg
pop
es
jp
cld
push
mov
sub
pop
push
jno
test
adc
cmpsb
cli
mov
add
movsb
or
adc
hlt
test
jg
inc
adc
out
in
sbb
call
hlt
decl
call
jae
in
rol
dec
add
dec
dec
push
lcall
test
push
and
js
or
fs
jne
icebp
or
add
movsb
jmp
sub
jns
popa
orb
push
es
sub
ficoml
adc
push
popl
sbb
lods
pusha
clc
call
outsl
sub
es
fnstenv
pop
nop
ljmp
cmc
mov
pop
jecxz
out
xor
or
rorl
and
xchg
sti
incl
xor
nop
mov
daa
mov
mov
repz
inc
or
mov
lret
dec
adc
and
dec
lcall
pushl
inc
mov
adcb
mov
mov
jge
add
adc
stos
mov
aad
mov
popf
xor
push
add
ja
das
cli
scas
mov
push
je
and
and
adc
add
add
add
fimuls
xor
dec
pop
or
scas
jp
dec
rolb
sub
sub
xchg
jnp
jp
inc
sbb
add
or
jno
dec
or
orb
out
add
scas
add
add
adc
cs
jl
nop
fdivrl
mov
scas
sti
filds
cli
fisubl
popa
int3
adc
scas
pop
add
incl
outsl
int3
in
sub
or
ljmp
test
push
leave
jge
jl
xchg
pusha
sub
mov
decl
push
and
call
pop
xchg
adc
push
sbb
ret
and
push
scas
jg
add
ljmp
fsubrs
mov
add
jg
dec
inc
inc
into
pop
add
lea
out
clc
popf
jmp
dec
mov
sbb
adc
imul
push
shlb
shrl
rorb
or
lock
pop
push
rol
sbb
repz
pusha
xchg
pusha
mov
add
xor
sbb
and
mov
call
imul
clc
test
jg
or
cmpl
mov
outsl
push
mov
fcoml
adc
dec
ret
mov
ds
shr
mov
popa
push
loope
add
into
jmp
sub
adc
test
std
mov
rol
push
xor
mov
adc
mov
test
and
test
and
sub
mov
adc
xlat
adc
popl
icebp
stos
data16
mov
jle
push
push
inc
sti
and
or
lret
mov
sbb
and
mov
inc
mov
mov
jg
or
outsb
clc
lds
mov
addr16
jmp
mov
orb
add
mov
ret
insb
sub
or
iret
pusha
push
iret
shlb
sbb
cmpl
sub
filds
mov
push
je
add
cwtl
add
cmp
sbb
hlt
mov
ljmp
inc
adc
movsb
fstl
push
in
and
aad
scas
clc
pushl
test
sbb
out
scas
data16
jecxz
mov
mov
pop
notl
arpl
add
aaa
cld
ja
loopne
loope
mov
jl
pop
lcall
inc
jb
sbb
jge
dec
test
nop
cli
cmp
ljmp
sbb
sbb
sahf
xor
inc
sub
sar
adc
xor
adc
les
icebp
cmc
sbbl
jg
mov
mov
dec
jb
fisubrs
out
add
aas
dec
test
xor
add
xchg
cmp
add
xchg
pop
ss
dec
ja
ret
fisttps
push
mov
xorl
pushw
inc
jl
repz
pusha
jge
xor
popf
cs
mov
jmp
add
and
pop
sar
mov
lret
push
add
pushf
inc
dec
in
sti
pop
pop
es
shlb
cld
decl
cmp
mov
gs
test
mov
lret
xorb
call
clc
out
pop
pop
je
popa
jo
shll
xor
inc
std
inc
cmp
push
rolb
sbb
jmp
out
loop
incl
rcll
inc
cmc
and
add
lcall
push
push
jno
movsb
ret
fbld
arpl
add
add
add
add
clc
ljmp
lock
stc
push
adc
xchg
pusha
js
adc
dec
aaa
cld
ja
rclb
inc
dec
cmp
sbb
sbb
into
imul
je
pop
xor
andl
mov
xlat
fs
movsb
inc
mov
cmc
jmp
pop
inc
popa
xchg
and
fs
out
sbb
pop
jb
add
mov
scas
xchg
shlb
add
pop
mov
mov
add
cmc
lods
rorl
jg
aaa
mov
mov
lret
cli
push
dec
pop
adc
mov
sar
arpl
xchg
sub
ljmp
jne
inc
rorl
icebp
lock
repz
sar
imul
int
add
cld
cmpsb
vmovlhps
push
push
insl
xchg
lret
pop
iret
sbb
jecxz
cmpsl
jo
xchg
adc
jbe
sbb
pop
or
pop
loopne
push
ljmp
push
add
adcl
cmp
ret
add
jmp
gs
or
inc
les
add
mov
jb
mov
adc
nop
xchg
mov
inc
shlb
pushf
pop
dec
fdivp
cmpb
inc
xchg
sub
pop
dec
loopne
aad
inc
inc
add
subb
lock
cwtl
push
mov
pusha
stos
sbb
fimull
and
lock
mov
addr16
push
cwtl
dec
pop
xor
loope
es
movsb
lods
cld
pushl
inc
fptan
test
int3
push
cmpsl
add
cwtl
int3
shlb
nop
push
add
and
cmpsl
sbb
test
mov
adc
aas
negb
push
mov
fdivs
or
icebp
or
bound
pop
mov
dec
loope
mov
mov
push
div
movsl
sbb
decl
shll
add
push
movl
in
scas
mov
ja
incl
mov
inc
mov
lock
xchg
test
faddl
mov
pop
iret
add
pop
dec
mov
movsb
popf
and
enter
into
inc
test
outsl
inc
dec
cmp
dec
cmpl
lds
and
sbb
mov
ljmp
or
jb
sysenter
xorl
dec
ret
jle
inc
jl
into
cmpsb
xor
jp
cmp
pushf
subb
sub
iret
dec
xor
jbe
xor
dec
pop
and
vmread
sub
mov
cmp
xchg
test
and
cld
jmp
ljmp
insb
lods
pop
rcll
scas
sti
mov
cmc
mov
pop
mov
jg
add
adc
jmp
shrl
add
pop
pop
inc
stos
mov
pop
sub
sub
mov
clc
adc
lock
mov
pushf
xor
jle
xor
jmp
or
and
lahf
in
movsb
ret
adc
lret
es
inc
rclb
outsl
mov
push
fdivrp
add
ja
ljmp
cmp
add
aam
lods
in
and
lcall
lret
add
and
fildll
sub
inc
jmp
dec
cmp
shlb
inc
sbb
incl
test
and
daa
xchg
jl
inc
test
mov
in
inc
add
cmp
shr
jge
pop
push
inc
xor
lock
scas
mov
orl
mov
loope
add
sbb
call
push
inc
adc
pushl
push
call
out
pop
pusha
mov
stos
mov
int3
testl
dec
adc
and
xor
mov
jmp
sub
daa
test
lret
sbb
ret
add
aaa
dec
dec
iret
xchg
or
fbstp
jp
pop
sbb
push
stos
scas
insb
add
and
xor
mov
xchg
ret
dec
and
xor
mov
testb
sti
dec
ret
call
push
fs
dec
cmp
aam
lods
out
cmp
fnstenv
jne
cwtl
mov
inc
icebp
pop
pop
ljmp
cwtl
push
pusha
mov
sub
sub
incl
ret
pop
insb
mov
cmp
xchg
push
je
adc
sbb
xchg
inc
or
add
dec
sbb
cld
loopne,pn
add
inc
xchg
push
outsl
js
xor
sub
je
ss
pop
xorl
xchg
les
clc
mov
adc
and
push
cmp
jmp
add
aad
mov
imul
sahf
jmp
mov
sub
sti
pop
pop
test
xchg
cwtl
lcall
ss
add
fsubrl
sbb
or
mov
lock
icebp
jg
dec
outsb
jo
fistl
mov
and
test
and
test
sysenter
shr
lods
sub
add
fwait
mov
pop
mov
loopne
jecxz
xor
ss
lock
arpl
mov
lgs
inc
call
repz
ficoms
fistps
aam
ljmp
or
aas
dec
jl
sub
inc
xor
add
out
xor
or
xor
rolb
clc
dec
jo
rcll
dec
ret
inc
pop
cmc
add
out
jp
push
adc
nop
scas
sarb
push
outsl
mov
incl
mov
loop
dec
in
push
incl
insl
shlb
jnp
push
jl
je
pop
xchg
sbbl
add
loopne
dec
pushl
pop
pop
test
sbb
jmp
xchg
dec
sar
and
int3
sbb
popf
ret
rorb
lcall
outsb
cmp
push
loop
data16
sub
inc
lds
insb
and
inc
cmp
pop
mov
push
out
sbb
sti
cmpsb
and
or
push
jl
or
mov
add
imul
ljmp
adc
test
loope
fucomp
scas
add
jo
sub
cmp
jne
push
movsb
fisttpl
mov
jmp
jns
cltd
sbb
add
jmp
pushl
jge
inc
stos
add
and
test
js
addl
xor
mov
sbb
das
push
ja
adc
xlat
movsb
test
movb
outsl
outsl
out
and
add
add
ds
sti
dec
and
loopne
test
or
push
outsb
ss
sub
cmc
std
out
inc
aam
nop
pushf
xchg
mov
mov
in
sar
in
aaa
lret
lcall
faddp
push
jb
add
incl
rorl
ret
in
sbb
fnstsw
push
bound
int
clc
stos
ljmp
cmp
insb
mov
pusha
pusha
mov
mov
stos
mov
jmp
jg
mov
jb
dec
aas
adc
or
in
or
adc
fistl
loop
fwait
cmp
mov
pusha
dec
mov
sarb
xchg
xor
test
add
pusha
loopne
xor
add
out
pop
mov
sub
or
pusha
or
incl
shll
repnz
addl
add
push
aam
xchg
hlt
enter
adc
add
call
cmovg
adcb
cmp
js
inc
jle
or
idivl
loopne
dec
nop
pop
sub
fiaddl
jmp
pushl
pop
fistps
inc
lock
mov
rorl
cltd
inc
mov
incl
add
push
in
scas
sti
lahf
inc
or
imul
incl
mov
btr
and
pop
fsubr
insb
dec
cld
or
mov
popa
scas
push
mov
and
pop
mov
cmp
jnp
test
lret
inc
loope
call
mov
cs
testb
inc
cli
lret
and
and
jmp
insl
test
push
icebp
xchg
adc
xchg
mov
lods
adc
adc
pop
bound
mov
insl
scas
pop
xor
sarb
lcall
xchg
or
or
ret
mov
orl
stos
add
inc
aaa
fldl
sti
inc
std
xor
adc
filds
je
out
cli
imul
sti
mov
cmc
add
out
xor
in
mov
pop
mov
sub
ret
mov
jbe
clc
ret
add
subl
pop
loope
jnp
mov
cmp
sbb
fwait
xor
dec
mov
nop
or
sub
xchg
rcrl
out
mov
jg
mov
rcr
mov
push
jb
into
jle
mov
mov
cmpsb
ljmp
jb
sahf
jmp
sub
ds
outsl
mov
jmp
pop
cmpsl
insl
adc
pop
mov
fsts
lcall
inc
loopne
push
or
pop
xor
or
int3
mov
incb
jns
lods
cmp
daa
repnz
ret
pushl
pop
mov
fiaddl
pop
negl
push
into
pop
lcall
and
add
fmuls
fldenv
jae
lock
notb
or
decb
ret
dec
nop
adc
jle
movb
cwtl
hlt
shl
cmp
pop
cmc
dec
sub
adc
cmp
cmp
pop
sbb
lock
add
inc
push
dec
sarb
sbb
cmpsb
or
pusha
inc
inc
xor
sub
fadd
cwtl
sahf
mov
loopne
mov
mov
cltd
jl
or
push
xor
test
inc
adc
pushl
arpl
loope
inc
lods
jmp
std
adc
test
jmp
inc
out
xlat
mov
xor
jo
mov
mov
mov
mov
jns
mov
loopne
sub
fildll
xor
icebp
fisttps
shll
stc
mov
test
pushl
imul
inc
test
mov
push
repnz
add
enter
aas
js
lods
mov
xchg
lcall
scas
std
lds
xlat
nop
mov
cli
add
data16
clc
scas
mov
cli
ds
fsubs
mov
pop
push
les
jmp
aad
fstpt
shll
push
inc
mov
fcoms
fsubrl
and
dec
jg
push
addr16
data16
lock
cmp
mov
test
jl
push
cmp
ljmp
data16
add
stos
mov
jo
clc
pushl
jbe
ds
and
cmp
stc
dec
inc
sub
and
mov
in
xor
pusha
add
scas
outsb
jecxz
pusha
ljmp
xchg
jo
sahf
mov
dec
add
mov
xchg
call
enter
cmp
mov
inc
mov
mov
incl
addr16
ja
pop
xchg
xchg
in
stos
mov
add
cmpxchg
test
sbb
jns
adc
push
cmpsb
lock
pop
mov
jo
ljmp
xor
adc
sarb
and
decl
mov
jp
out
aas
lret
cli
push
push
test
jle
outsb
hlt
out
scas
test
gs
add
dec
jg
sub
xor
add
cltd
mov
decl
cmc
and
pop
test
add
repnz
leave
xor
and
mov
sub
fcmovb
pop
jg
addr16
mov
mov
imull
frstor
pop
subb
pop
mov
mov
mov
ljmp
or
pop
adc
push
jne
inc
es
and
fmull
push
ljmp
imul
and
ret
xor
push
jmp
mov
outsl
notb
and
inc
cmp
fmul
push
push
jnp
dec
cld
add
jb
mov
pop
mov
jg
xchg
out
pop
pop
lret
sbb
popf
xor
push
sti
call
sub
xor
mov
or
mov
pop
and
and
push
ljmp
sarb
cmp
push
loope
adc
mov
sbb
fiadds
jecxz
mov
call
fisttpl
add
je
iret
iret
jg
mov
mov
scas
sbb
push
repz
repnz
imul
add
clc
sbb
cmp
loope
push
or
xor
sbb
out
loopne
stos
cltd
lods
adc
leave
mov
or
movsl
push
push
and
add
in
cmp
xbegin
pop
add
mov
dec
test
jmp
aad
filds
pop
lret
cmp
std
es
clc
out
shrb
ficoml
nop
add
and
or
pop
xchg
push
jl
stos
call
sarl
hlt
xchg
fwait
jo
daa
add
je
inc
outsb
xlat
in
dec
or
and
mov
inc
cld
dec
dec
dec
add
add
out
push
icebp
out
xor
jle
popf
mov
inc
lds
push
in
cld
aad
mov
dec
lock
data16
pushf
fadd
xchg
push
sbbb
aam
mov
push
sbb
out
out
add
and
jecxz
incl
out
loopne
inc
sub
aaa
rcr
sbb
in
mov
sub
mov
incl
xchg
je
testb
loope
xor
add
or
add
sbb
lods
mov
jmp
jp
fdivr
les
outsb
cs
lock
sub
add
xor
aam
mov
rclb
xor
roll
mov
mov
cli
push
mov
filds
and
mov
cld
cmpsl
nop
jbe
or
loop
loop
mov
push
insb
mov
test
add
andb
fstl
cli
test
movsb
and
mov
int
mov
clc
scas
enter
out
cltd
jo
sub
test
push
push
pop
or
xlat
add
inc
cld
sub
int3
inc
adc
dec
sbb
cld
ret
enter
push
push
std
fistps
adc
xchg
xor
or
rcrl
test
dec
ss
and
lock
ret
aam
pop
fsubr
sbb
movsl
ja
sub
cmp
cmp
les
adc
sbb
std
insl
int
jecxz
jg
and
int3
sbb
addb
cld
fcoms
lret
mov
mov
fs
test
test
je
ljmp
shll
add
mov
subl
pop
aas
xchg
xor
arpl
mov
push
hlt
and
cld
push
test
imul
mov
cld
push
mov
faddp
fwait
sub
adc
xor
pop
dec
xlat
mov
ja
clc
or
push
mov
sbb
pop
push
ljmp
adc
int3
pop
add
jg
mov
push
int3
xchg
mov
xchg
cmpl
in
sbb
sbbl
test
push
nop
mov
icebp
mov
cli
ffreep
adc
adc
jnp
xor
insb
push
jmp
fucomi
sbb
mull
lock
jo
mov
std
mov
out
in
shlb
rcll
gs
and
in
or
mov
call
subl
hlt
nop
xchg
jmp
iret
push
inc
adc
inc
and
int3
jp
lock
in
push
mov
inc
pop
jl
mov
xor
jle
sub
add
cmp
push
nop
sub
ss
ljmp
push
mov
add
and
imul
mov
stc
inc
shr
mov
cli
iretw
sub
popf
ss
pop
stos
mov
mov
jg
xchg
cwtl
dec
add
cmp
xchg
hlt
fildll
mov
scas
fisubs
cmp
call
lret
xchg
dec
xchg
or
add
sub
adc
jne
inc
or
add
mov
popf
scas
dec
into
scas
incl
loop
subb
cmp
xlat
ljmp
icebp
ljmp
pop
inc
movsb
sahf
mov
stos
sti
lret
pop
jl
jg
xchg
pop
inc
out
mov
sub
push
cmpsb
dec
pushl
pop
lea
sub
add
je
mov
push
mov
dec
mov
fistps
lock
mov
stos
xor
repnz
ffreep
sbb
pop
pop
inc
js
adc
pop
sbb
add
lock
lcall
call
lret
arpl
mov
adc
fistpll
cmp
or
push
mov
in
ficomps
hlt
adc
mov
or
mov
sub
fnstsw
jl
lds
inc
or
loop
pop
add
fldenv
dec
add
pop
je
add
xchg
mov
clc
aas
jecxz
js
add
scas
pop
ror
push
push
rclb
xchg
add
decb
into
mov
push
inc
andl
mov
pop
fnclex
ret
jnp
sbb
sub
call
adc
fcmovb
rolb
mov
jp
mov
fidivs
fimuls
dec
mov
dec
push
xchg
test
dec
andb
rorl
andl
dec
mov
cs
cmp
mov
fdivl
packssdw
lcall
loopne
fdivrs
int
inc
bound
pop
sub
adc
daa
fs
jbe
in
and
add
adc
sbbb
mov
subb
jbe
jp
test
testl
and
mov
mov
sub
loopne
pop
scas
xlat
add
mov
test
jmp
mov
clc
les
cmc
jb
add
imul
incl
div
cs
fimuls
inc
mov
and
ljmp
adc
xchg
in
cmp
add
into
dec
cli
js
jmp
cmp
and
pop
pusha
and
add
xchg
jne
call
mov
mov
push
out
or
sbb
aaa
sub
ds
mov
pop
cld
mov
add
push
scas
outsl
and
ret
fmul
mov
add
push
inc
mov
pop
fmull
lret
pushf
into
rorb
xor
and
inc
repnz
shlb
push
cmp
xchg
insb
subl
stos
add
jno
adc
add
cmpsl
or
test
aas
fstps
adc
call
inc
pop
aam
mov
aas
jne
mov
daa
sub
sbb
pop
mov
call
add
sarl
clc
lret
push
jp
pusha
jnp
cmpsl
ljmp
jo
push
xchg
std
jg
mov
fstpl
std
push
rclb
adc
std
mov
mov
imul
cmp
iret
mov
icebp
jg
mov
cld
ljmp
and
fimuls
decl
push
sbb
inc
aam
dec
enter
and
aaa
out
sbb
lcall
sahf
movsb
push
test
push
dec
insb
sbb
add
aas
mov
push
pop
in
call
jbe
ret
clc
jg
xchg
or
xchg
fnsave
insl
or
xchg
xor
push
cld
xchg
inc
mov
mov
mov
cmp
pop
orl
dec
cmc
xchg
call
lock
in
test
repz
jbe
cmp
inc
sub
add
data16
jns
cmpsb
adc
and
je
popa
daa
ljmp
xchg
mov
sub
loopne
pop
mov
aaa
ljmp
push
sahf
jge
jle
js
stc
fcomi
fildll
sahf
add
push
jmp
push
or
incb
sub
xor
int3
addl
push
insl
mov
imulb
push
int
ljmp
clc
dec
sub
das
jp
push
mov
add
lock
decb
sub
xor
arpl
out
xchg
inc
and
jo
and
fisubs
jae
add
inc
aas
pop
pop
mov
sbb
mov
imul
in
dec
out
gs
mov
adc
mov
sub
cmovno
test
jle
out
ret
out
addr16
lock
inc
lret
pusha
aad
fcomps
imul
in
sub
jmp
rolb
js
jnp
push
jbe
mov
lea
sbb
mov
push
das
pop
lret
or
not
sbb
ret
call
and
mov
ret
pop
push
mov
adc
rolb
out
push
cmpsl
les
cmpb
mov
cmp
insb
jbe
aaa
std
jg
add
pusha
mov
push
inc
adc
cli
pushl
mov
mov
cld
cmp
cltd
mov
sub
ss
jle
lret
push
aam
aas
push
incl
fsubs
pusha
pop
mov
imul
add
mov
in
mov
or
xlat
sarb
lcall
cmpsl
mov
pop
imul
pop
xchg
dec
insl
and
test
push
mov
add
adc
jg
mov
sahf
or
cwtl
aaa
or
add
leave
jno
xchg
and
inc
and
inc
sbb
aam
lock
sahf
mov
pop
adc
inc
rorb
ss
popf
pop
mov
sbb
and
aaa
xchg
popf
dec
mov
in
scas
int3
dec
std
or
push
test
adc
push
repnz
sbb
push
jle
cmc
call
push
push
add
incl
add
sar
hlt
sti
out
and
lret
outsb
out
cmpsb
sub
in
push
or
pop
test
loop
xchg
mov
gs
push
xor
dec
out
inc
pop
xchg
mov
call
bound
stos
fs
mov
inc
data16
push
std
int
sub
jne
and
pop
pusha
outsb
clc
incl
test
mov
xor
jle
xor
push
mov
mov
pop
jmp
aad
jp
push
lcall
scas
xchg
dec
outsb
inc
fldl
dec
rol
mov
mov
jg
call
mov
jge
or
inc
leave
movl
fildll
push
cwtl
popa
int
insb
inc
adc
cli
mov
push
push
or
dec
cmp
decl
outsb
sbb
xor
js
push
je
sti
or
stc
xor
lds
fwait
clc
sbb
cli
pop
cld
inc
cmp
and
ds
sub
stos
adc
or
pop
pop
sbb
push
addr16
jbe
sbb
mov
adc
and
push
pop
fisttps
loop
aaa
inc
mov
mov
pop
xchg
or
cltd
sbb
pop
inc
popa
adc
ljmp
call
dec
popa
push
mov
xchg
shrb
and
or
es
rclb
loop
dec
add
lret
xchg
jl
adc
icebp
pop
bound
inc
mov
adc
mov
mov
add
cmpb
sub
dec
addr16
mov
inc
cs
push
sbb
xor
mov
add
and
cmpsl
test
jg
in
les
out
and
push
pop
adcb
xchg
subl
mov
cld
mov
cmp
or
dec
push
cld
cmpsb
and
pop
lock
sub
pop
shrl
test
enter
ret
clc
addb
mov
mov
jnp
and
sub
push
xchg
jnp
call
or
iret
lcall
subb
loop
js
mov
hlt
addb
das
repz
cmc
mov
inc
into
aas
push
dec
fdivr
or
sub
mov
fstl
sub
fists
add
cmp
outsb
or
cmovne
sub
adcb
lcall
push
dec
xchg
insl
sti
adc
out
scas
cmpsb
notl
pop
mov
dec
cmpsb
add
add
insb
or
sbb
or
inc
push
add
mov
pusha
dec
inc
sbb
in
test
mov
adc
sub
sahf
xchg
mov
outsl
add
cmp
inc
cltd
push
cmp
and
nop
sub
decl
hlt
movsl
mov
cmpsb
pop
xor
and
xchg
push
jo
std
imul
or
adc
xor
or
jmp
mov
push
adc
shr
add
idivb
mov
pop
adc
push
cld
decl
and
sub
sbb
push
jecxz
test
fidivs
or
bound
int3
arpl
incl
shll
arpl
out
add
test
jbe
cmp
dec
inc
xor
sub
xor
and
out
and
push
add
adcb
mov
pushf
dec
jge
or
add
push
lods
jl
pop
std
dec
pop
sbb
loopne
jle
sbb
push
mov
mov
in
ret
es
ret
jge
or
mov
push
inc
jl
ds
ret
xchg
push
les
shl
xchg
sbb
sar
notb
adcb
or
mov
pop
int
fwait
stos
dec
xchg
lock
adc
cmp
jp
decl
jno
or
add
add
loop
ljmp
mov
fildll
hlt
call
fdivl
mov
and
rorb
orb
push
mov
lock
mov
popf
shlb
or
add
fistpll
mov
sbb
push
push
or
add
adc
insl
xchg
jo
xor
add
adc
incl
xchg
shrl
inc
lret
jp
pop
scas
jg
push
rcrb
andl
cmpsb
xchg
in
stc
cmp
std
fisttpl
push
les
xor
shll
add
sbb
fcmovnb
jmp
cs
xor
mov
push
or
neg
rolb
arpl
aaa
mov
popf
cmp
daa
enter
xor
ret
jecxz
mov
mov
add
test
mov
decb
pusha
inc
push
sbb
in
loop
icebp
out
pusha
push
adc
cwtl
pop
dec
jge
in
aas
cmp
test
out
je
cmp
add
push
cmp
add
scas
pop
push
clc
cmp
imul
jp
xchg
dec
mov
daa
inc
and
in
shlb
inc
push
mov
cli
fbstp
clc
mov
das
ljmp
pushl
xchg
mov
push
mov
mov
cltd
addr16
dec
test
loop
stc
hlt
mov
jmp
hlt
popa
lret
and
ret
out
mov
in
sbb
cli
and
leave
ret
clc
mov
cmp
in
lahf
adc
out
mov
sbb
decl
add
jmp
cmp
or
mov
call
jbe
cli
inc
mov
arpl
rorl
dec
inc
sbb
mov
cwtl
ret
mov
notl
cli
mov
adc
adc
mulb
add
push
lcall
repnz
sarb
push
lock
jns
sbb
dec
imul
stos
push
mov
iret
xchg
jmp
sar
add
adc
and
rolb
jle
enter
sbb
or
addl
enter
icebp
mov
dec
push
adc
insb
push
push
add
mov
xor
movsl
je
mov
icebp
incl
out
sbb
mov
push
inc
jge
push
js
fs
decl
cli
into
sub
incl
in
cmp
std
push
and
cmc
in
lock
jno
xorl
and
sets
cmpb
xchg
mov
pushl
movl
lods
roll
adc
and
rcll
xchg
imul
push
loopne
lret
adc
inc
ljmp
out
mov
test
rolb
jg
cwtl
shlb
loop
jecxz
xor
ror
cld
std
inc
sub
pop
add
xchg
mov
xor
and
mov
fsubl
jb
repnz
inc
stos
dec
call
fmul
mov
cmp
mov
fwait
xchg
and
xlat
fisttps
test
fildll
rolb
jb
dec
inc
and
inc
fsubrl
lock
pop
push
cwtl
inc
bound
mov
push
sbb
adc
mov
aaa
jecxz
and
cli
sbb
xchg
jmp
incl
mov
sub
sbb
pushf
add
mov
add
hlt
fbld
les
adc
les
rcr
decl
mov
add
dec
mov
out
enter
pop
sub
nop
popa
adc
lea
sahf
jbe
rclb
cmpsb
and
inc
std
orl
insl
outsb
jae
xor
xor
and
je
xchg
push
incb
je
fmul
test
dec
sub
add
cli
inc
jmp
cld
jnp
add
dec
add
mov
add
dec
in
cmpl
push
jp
or
clc
imul
push
push
addr16
adc
jg
das
sbb
add
dec
dec
sub
inc
push
push
dec
add
sbb
mov
cwtl
aas
pushf
ret
sarb
hlt
ret
adc
jp
inc
jo
ret
dec
push
fcoml
jle
jle
lcall
ret
bound
push
xchg
pop
ljmp
mov
aas
insl
sbb
idiv
rorb
add
jno
push
cmc
push
pop
rol
and
push
insl
loopne
jl
mov
js
push
jl
or
pop
mov
jecxz
fbstp
or
fadds
dec
mov
jl
rolb
and
sub
scas
js
addl
jo
sbb
insl
dec
jbe
bound
ds
pop
xor
push
fwait
dec
jae
imul
mov
dec
rolb
and
icebp
pop
jno
push
call
lahf
das
pop
pop
mov
incl
adc
add
dec
test
test
fsincos
pushl
ret
test
xchg
test
sub
data16
cld
or
dec
imull
adc
and
sub
out
js
pop
pop
ds
addb
add
gs
push
outsl
mov
dec
push
jb
addr16
out
inc
inc
jo
data16
in
xor
or
pop
mov
lock
lods
loopne
call
test
jo
inc
aaa
add
sahf
add
push
pop
addr16
pop
shlb
pop
mov
jp
outsl
sub
ss
stos
or
push
ret
add
dec
mov
jno
mov
fwait
pop
or
jno
adc
or
xor
imul
js
jns
popf
inc
rolb
adc
notl
add
xchg
fidivl
cmp
push
adc
add
stc
cmc
shrb
mov
push
xlat
lds
sbb
and
cmp
mov
pop
lods
in
jno
roll
testl
jne
inc
jmp
ror
push
cli
pop
dec
mov
outsl
arpl
movl
dec
inc
ds
icebp
cs
incl
push
pop
mov
nop
push
push
mov
jg
icebp
lock
push
mov
push
mov
fadds
push
add
popa
bound
xor
call
mov
push
pop
dec
cmp
inc
pop
sub
adc
pushl
add
repz
addr16
jecxz
testl
in
xor
or
push
dec
cld
add
dec
push
aas
fs
mov
aad
and
sbb
cmp
xchg
sti
subl
arpl
pop
test
ja
pop
inc
hlt
push
pop
dec
push
pop
subb
jecxz
lock
push
dec
fs
lock
dec
jae
dec
loope
push
xchg
cmp
les
sar
clc
inc
mov
testl
aaa
aad
push
mov
and
test
mov
inc
pop
xlat
pop
cmc
sbb
xor
pop
inc
jno
sbbl
and
inc
arpl
dec
jne
ja
jbe
fstpt
pusha
les
push
inc
inc
pusha
shl
hlt
pop
or
or
push
push
leave
sub
jb
std
and
incb
add
out
insl
adc
jmp
cli
arpl
ljmp
bound
pop
pop
inc
push
addl
inc
gs
jmp
or
popa
outsl
inc
ss
push
lock
adcl
push
aas
adc
xor
fisubs
dec
outsl
inc
inc
jns
jl
nop
and
test
pop
loopne
cli
imul
fcmove
ret
xchg
mov
sub
in
rolb
adc
insb
sbb
loope
mov
dec
outsl
loop
sub
or
xor
mov
test
sub
sahf
shll
xor
into
loop
or
in
adc
adc
inc
repnz
lods
inc
sbb
sbb
sahf
pop
jne
or
dec
xor
ss
push
cld
jo
lcall
push
push
mov
push
pop
loope
rol
jno
popa
and
insl
push
dec
sub
push
rcll
hlt
popf
push
add
clc
ficoml
dec
push
jbe
or
fimuls
mov
rorl
lods
je
dec
insl
xor
lcall
xor
jo
xor
pushf
mov
xor
outsb
pop
dec
mov
jo
xor
lock
ret
lock
mov
outsl
xor
pop
sbb
aas
inc
and
push
xor
mov
push
lcall
dec
jmp
add
add
mov
push
adc
les
push
add
xor
jmp
ss
roll
mov
clc
xlat
or
xor
dec
jne
sahf
lock
push
aaa
addr16
ja
in
call
push
ret
push
jmp
push
push
bound
push
imul
xor
pop
push
outsl
push
inc
inc
mov
ret
sub
jmp
add
ret
lods
pushl
inc
arpl
fcoms
lock
mov
jp
xor
jb
pusha
icebp
aas
dec
sbb
adc
sbb
je
mov
scas
fdivrs
sbb
and
push
pop
pop
cmp
pop
in
xor
inc
inc
call
sbb
test
popa
hlt
pop
repnz
jno
xor
sbb
rcl
mov
repz
movsb
lret
andl
cli
mov
pop
push
test
pushw
push
mov
cwtl
je
adcb
mull
paddw
inc
popa
or
and
sub
sbb
call
inc
mov
clc
stos
lock
add
pop
enter
dec
dec
jo
lods
lret
pop
mov
xorl
ret
movsb
sbb
mov
push
adc
add
pop
test
je
xchg
sbb
push
inc
aaa
jne
push
jmp
subb
xorl
js
push
insb
mov
std
rcrb
dec
cmp
jl
imull
dec
mov
ficoms
dec
xor
inc
lcall
or
scas
jb
xor
inc
punpckhdq
cmpsl
cmpsl
loop
pop
pop
push
push
hlt
jl
test
jae
dec
inc
push
repz
cld
test
xchg
inc
push
ret
pop
pop
dec
push
inc
ja
leave
add
xchg
test
and
sub
mov
inc
inc
xor
or
loope
mov
cld
test
add
cmp
lock
insb
in
inc
xor
adc
fadds
outsb
insl
dec
sub
or
mov
bound
add
mov
shl
hlt
jno
js
adc
inc
sub
cmp
adc
aad
fmuls
aam
cmp
shr
imul
ds
inc
adc
or
mov
dec
xor
push
lock
cmp
je
leave
pop
daa
jp
cmp
jmp
xor
and
dec
insl
jns
adc
in
xor
pop
lcall
mov
add
sub
sub
imul
arpl
jmp
sbb
inc
dec
mov
jbe
pop
xor
mov
jnp
cmpsl
mov
inc
add
jno
adc
clc
xlat
pop
aaa
cld
sbb
sub
sbb
mov
adc
cld
insb
orl
adc
push
insb
repnz
mov
out
into
inc
push
jbe
add
mov
ja
sbb
jl
pop
cmc
sub
push
mov
fimull
ljmp
test
sbb
pushf
stos
rcrl
inc
mov
ret
add
dec
or
inc
pop
rcll
add
pop
loopne
cmc
and
push
int3
push
add
nop
pop
jnp
cmp
repnz
ljmp
lcall
test
dec
inc
sub
inc
lcall
add
push
mov
xor
inc
add
ds
add
loope
js
dec
mov
std
call
jl
pop
xchg
loop
outsb
push
xorb
test
fsubrp
inc
push
scas
xchg
adc
push
push
and
inc
call
jae
mov
push
and
sub
push
inc
adc
fisttps
sbb
roll
cmp
scas
icebp
adc
push
cmpsb
sbb
or
inc
fistl
pop
adc
xor
dec
loop
push
push
pop
push
inc
and
loopne
mov
inc
sub
or
mov
inc
imul
pop
jl
jae
scas
push
push
push
sub
mov
jl
outsl
ss
push
sbb
xor
mov
je
xchg
inc
arpl
xor
outsl
jbe
jbe
jecxz
xor
sbb
dec
loopne
ljmp
test
pop
xor
xor
jae
dec
imul
push
in
clc
aad
je
inc
imul
dec
pop
sbb
jg
ds
cmc
incl
xor
pop
push
rcll
inc
cld
push
ljmp
xorb
shlb
ljmp
xor
add
lret
cmp
fidivrs
les
push
or
fistpl
outsb
fs
insb
adc
rorb
inc
std
das
sub
fistps
repz
push
shr
sbb
push
add
mov
icebp
push
mov
xchg
xchg
int3
add
push
cmp
mov
jo
xlat
sbb
jae
cmp
mov
mov
lods
sbb
jp
pop
push
cmpsb
mov
push
popf
loopne
jmp
outsl
push
ret
sbb
push
push
xor
push
lret
idivb
aas
jmp
call
and
aad
or
push
and
jmp
sub
or
sbbb
pop
and
inc
add
inc
and
rclb
and
out
in
inc
or
sub
adc
add
inc
test
out
je
lcall
insl
mov
and
addb
inc
and
sub
js
dec
outsl
dec
push
inc
jbe
fxch
push
and
pusha
test
in
int
add
mov
mov
in
data16
inc
and
and
test
cli
sub
into
xor
ljmp
dec
repnz
xor
fmuls
sahf
cmp
and
mov
mov
add
insb
data16
push
and
xor
or
insl
mov
and
pop
inc
adc
push
imul
push
or
xorl
dec
insb
jo
sbbl
push
js
addr16
insb
add
cwtl
test
mov
add
movsl
cs
ss
hlt
mov
pusha
fs
inc
ror
nop
mov
sbb
insb
mov
rcrb
sbb
add
push
mov
lock
dec
or
inc
jo
lods
add
and
add
data16
fs
or
inc
push
cwtl
cltd
sbb
clc
inc
cwtl
cltd
xor
and
mov
fs
mov
adc
push
pop
inc
inc
mov
loopne
jo
sub
push
aam
cmp
cltd
bound
push
cmp
xchg
inc
sbb
or
cmp
test
mov
jo
test
add
into
insb
pusha
mulb
adc
sbb
jo
int
jo
fimuls
inc
inc
or
and
faddl
inc
ficoms
sti
shll
cwtl
and
pusha
and
add
mov
inc
test
and
mov
ret
mov
neg
enter
push
cltd
roll
xor
push
mov
sbbb
inc
or
bound
out
inc
ss
icebp
jo
cmpsb
mov
jno
mov
adc
add
add
bound
aaa
mov
roll
or
sub
xor
mov
mov
mov
shlb
cwtl
pop
fadds
adc
add
and
popa
ja
les
fisubrl
and
inc
push
pop
inc
jl
mov
dec
push
xchg
outsb
call
sbb
inc
shlb
ss
mov
loopne
jbe
and
lret
loopne
or
ret
or
in
jp
push
or
pop
mov
notb
out
jecxz
mov
xchg
inc
mov
loopne
inc
or
je
add
imul
pop
pusha
addr16
or
cmp
jne
xlat
lret
xor
popa
xchg
pusha
test
jl
dec
cltd
or
push
sub
fs
or
push
push
mov
jp
outsl
lret
int3
dec
jno
lock
push
cmpsb
inc
xchg
ss
push
pop
sub
xor
pop
adc
pop
popl
push
mov
bound
cmp
push
sbbl
inc
mov
cmc
mov
dec
or
dec
lcall
or
movsb
mov
mov
xlat
dec
mov
and
jo
add
add
cmp
sbbb
xor
and
cmpsl
shll
jp
incl
add
xor
cmp
stos
xor
int3
mov
aad
call
mov
gs
gs
xor
cs
insb
pop
lcall
cld
fiadds
lret
enter
sbb
in
cmp
popf
push
sahf
mov
dec
push
inc
sbb
sbb
pusha
je
fistpll
lret
js
add
jno
add
pushf
and
inc
cmp
cmc
push
adc
sbb
adc
cmp
add
incl
add
imul
imul
jb
imul
outsb
addr16
sub
jle
arpl
outsb
push
sub
outsl
jb
jne
and
mov
bound
jae
js
cs
imul
fnstsw
push
push
gs
jns
jae
loopne
push
dec
outsb
outsw
scas
push
push
xor
dec
gs
sbb
jae
fistps
outsb
sub
insl
insl
adc
outsl
push
popa
insl
adc
and
loopne
add
push
outsl
ja
jle
adc
inc
sarl
dec
pop
inc
gs
cmp
push
ljmp
sub
add
arpl
jae
cmpb
mov
mov
inc
adc
in
cmp
xor
mov
sbb
fwait
jnp
sbb
gs
data16
lock
iret
add
xchg
push
dec
jae
inc
inc
push
dec
movb
int
outsl
sub
inc
adc
push
or
sarl
addl
sbb
and
testl
jb
arpl
add
adc
mov
mov
or
xor
dec
pop
cmp
pop
fstps
xor
inc
insb
outsl
bound
xchg
adc
add
arpl
js
sub
or
push
jns
outsl
outsl
subb
rcrb
imul
mov
xor
mov
pop
fmuls
jbe
mov
adc
dec
popa
pushf
or
push
fstpl
and
test
push
mov
aas
jae
mov
arpl
ljmp
rclb
sbb
cmp
adc
daa
inc
shrb
mov
cmpsb
push
in
dec
xor
xchg
aad
fdivs
push
insb
fstpt
jne
jo
inc
push
daa
push
dec
fistl
shl
inc
or
dec
jne
mov
and
sbb
push
pop
inc
je
mov
dec
jo
nop
lret
mov
push
xchg
dec
popa
into
and
or
inc
dec
insb
imul
fmull
push
xchg
ss
xchg
push
ja
xor
icebp
addr16
testl
sbb
jp
xchg
push
or
test
push
cmpsl
mov
push
pusha
jae
int
popf
jmp
bound
lock
adc
lahf
push
lods
push
sbb
inc
ja
pusha
pusha
push
jne,pn
out
popa
xchg
loopne
add
or
cmp
jb
sbb
and
inc
pop
sbb
popa
xor
mov
push
sub
dec
mov
jg
dec
inc
inc
fsubp
gs
or
sub
lock
imul
cmpsb
cmp
pop
jge
fildll
xor
inc
fs
lcall
pop
int
mov
in
sub
popa
push
xchg
dec
and
lds
jae
push
cmp
sbb
data16
bound
sbb
test
arpl
dec
mov
js
or
xor
mov
fs
addb
pushw
ret
jb
insl
jp
or
push
add
push
dec
and
dec
pushf
add
push
negb
je
add
lret
sahf
cltd
adc
jbe
xchg
add
inc
addr16
js
mov
lock
inc
jbe
insb
xchg
cmp
addr16
mov
pop
shrd
popa
cmp
arpl
inc
dec
inc
insb
mov
lods
fiaddl
push
dec
xchg
xor
pop
aaa
push
mov
add
jbe
push
das
inc
push
jge
xor
ret
inc
and
imul
jbe
imul
jb
or
pop
outsb
dec
pop
popa
sbbb
xor
or
cltd
pop
jb
inc
or
imul
sub
jb
mov
mov
in
jne
movsl
mov
iret
outsb
pop
das
push
cmc
fisubrs
out
pop
push
jo
cwtl
lock
lret
jo
popa
inc
insb
mov
xchg
pop
jb
xor
push
stos
imul
inc
lods
jb
inc
jns
mov
out
and
outsb
pop
push
jo
xchg
xchg
nop
and
or
inc
jae
inc
arpl
xchg
xor
daa
inc
jl
cmpsb
aaa
inc
inc
cmp
adc
pop
pop
mov
pop
in
sbb
roll
cmp
mov
fwait
adc
jae
and
pop
add
notb
out
add
jo
test
inc
jne
ret
div
and
call
cmp
add
lea
outsl
dec
lods
lods
fucom
out
push
push
sbb
jae
icebp
pop
sbb
mov
fdivp
xor
inc
imul
insb
shll
sub
insb
sub
popf
jae
push
ret
cmp
nop
mov
mov
inc
adc
and
sbb
das
insb
xor
aaa
cmp
mov
shll
push
jo
sbb
mov
scas
loopne
gs
push
cmp
sahf
cmp
inc
fs
and
aad
in
sbb
pop
pop
pop
sub
mov
or
int3
ret
pushf
mov
xor
xchg
xor
nop
les
shll
cmp
inc
insb
loop
shlb
inc
pusha
pop
inc
js
cmp
cmp
mov
mov
sbb
pop
ja
pop
push
inc
insb
xor
pusha
lcall
xor
loopne
out
stc
cmp
push
cmp
add
xchg
sbb
fdivp
mov
inc
pop
mov
pop
enter
aam
and
loop
popa
inc
dec
jno
sbb
pop
push
pop
mov
js
pop
data16
jl
mov
and
test
pop
cs
jae
dec
stos
jl
movsb
shlb
push
dec
outsl
aaa
pop
jo
sbb
insb
cld
pop
aam
and
pop
pop
push
sbb
xchg
fmuls
jae
xchg
mov
bnd
jbe
leave
push
mov
jb
inc
inc
add
jo
mov
jae
cmp
mov
aaa
jp
imul
outsb
insl
ds
mov
adcl
inc
inc
jp
insb
ss
repz
inc
lcall
cld
test
loopne
lgdtl
or
ja
nop
mov
xchg
or
add
inc
pop
add
xor
divl
sbb
add
imul
jge
jl
bound
push
inc
add
pusha
sahf
fadds
rol
test
add
daa
inc
add
xlat
shl
in
add
and
in
iret
xchg
lods
jbe
cmpsb
jb
add
dec
push
sahf
addr16
inc
add
dec
dec
scas
add
and
rcrb
fildl
lahf
aaa
xchg
and
fisttpll
add
inc
and
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
insb
rolb
stc
pushf
mov
call
xchg
add
and
rcrb
fcomp
cmpsl
movsl
ja
push
xor
sbb
xchg
lcall
sahf
xchg
inc
inc
jl
dec
push
nop
sub
mov
xorl
addb
push
push
mov
rolb
add
rorl
rorb
movsb
cmpl
xchg
inc
scas
cmp
mov
mov
mov
cltd
lret
rcrl
mov
stos
loope
enter
xchg
inc
add
jns
inc
add
mov
mov
mov
repz
repnz
lods
mov
xchg
inc
push
jg
cltd
mov
or
xor
sbbl
jno
push
ds
push
jno
daa
add
add
adc
daa
insb
xchg
mov
in
and
sbb
jbe
and
xor
pop
cmp
mov
or
push
fcmovne
push
mov
mov
and
sbb
jo
adc
jb
pop
clc
push
push
scas
jmp
xchg
xchg
ds
insb
xor
aas
mov
test
dec
mov
dec
push
adc
push
xchg
cmpsl
arpl
inc
or
dec
rorl
add
lret
and
in
push
xor
push
xchg
lcall
xchg
ss
pop
cmp
mov
sbbb
mov
pop
movsl
fisubl
insl
aaa
push
popa
call
lret
cmp
jg
imul
lret
pop
pop
in
mov
icebp
push
xchg
dec
addr16
lcall
test
adc
and
iret
enter
dec
testb
notb
clc
inc
push
ss
and
sbb
push
inc
inc
cmp
gs
fs
vmwrite
jge
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
rolb
add
add
add
in
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
jge
imul
jge
imul
add
add
add
add
add
add
dec
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sub
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
bound
jb
js
and
dec
add
arpl
data16
push
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
bound
jb
js
and
dec
add
jno
outsl
add
jae
add
add
arpl
jae
jns
popa
add
jbe
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
jb
js
add
insb
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
bound
jb
js
and
dec
add
arpl
data16
push
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
add
je
outsb
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
bound
jb
js
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
aaa
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
les
xchg
les
inc
les
mov
les
scas
les
push
les
mov
les
ret
add
add
into
les
push
add
add
les
jo
add
out
add
js
add
repz
add
add
les
or
add
sbb
add
sub
add
cmp
add
dec
lds
add
add
push
lds
add
add
lds
add
add
outsb
lds
add
add
add
add
add
add
add
mov
add
add
add
add
add
enter
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
jbe
popa
arpl
fs
insb
add
jns
je
imul
insl
jo
cs
insb
add
imul
insb
insb
add
ja
outsl
arpl
fs
insb
add
fs
jo
cs
insb
add
je
jo
jo
cs
insb
add
gs
outsb
jbe
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
jo
outsb
dec
gs
add
add
dec
outsl
fs
add
jns
je
dec
push
imul
je
add
gs
gs
popa
jae
inc
jb
outsl
jb
add
add
jo
popa
inc
insb
outsb
add
jae
jo
jb
outsl
jb
add
imul
inc
dec
pop
inc
jb
gs
push
popa
outsb
addr16
dec
imul
je
push
dec
dec
imul
