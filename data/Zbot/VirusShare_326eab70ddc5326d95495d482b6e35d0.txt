pop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
lea
xor
jmp
stos
stos
stos
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
jmp
ret
mov
sub
sub
mov
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
mov
popf
dec
call
add
jbe
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
xor
movl
add
and
neg
addl
clc
sbb
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
pop
lea
xor
jmp
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
lea
xor
jmp
stos
clc
and
add
and
add
and
add
and
add
add
ret
add
add
je
add
shlb
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
out
and
add
add
outsb
and
add
add
add
add
xor
add
and
add
add
add
add
hlt
and
add
add
add
add
dec
and
add
and
add
add
test
add
pop
and
add
add
add
and
add
and
add
and
add
and
add
add
ret
add
add
je
add
shlb
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
push
and
add
add
add
and
add
and
add
and
add
and
add
and
add
add
out
and
add
add
outsb
and
add
add
add
add
xor
add
and
add
add
add
add
aad
inc
gs
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
popa
je
inc
jbe
outsb
je
add
repnz
imul
jb
je
arpl
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
popa
jo
gs
jb
jns
aam
inc
gs
jb
jbe
push
jns
gs
add
insb
jae
jb
outsb
inc
add
roll
dec
gs
jo
jb
add
push
push
je
imul
inc
add
adc
push
gs
insl
gs
push
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
gs
jb
arpl
jae
gs
jo
add
dec
jo
outsb
dec
jne
gs
add
out
inc
gs
imul
bound
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
je
jne
jb
outsb
je
jb
arpl
jae
enter
jae
gs
popa
insb
jne
add
gs
popa
jae
inc
jb
outsl
jb
add
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xor
jae
push
push
popa
je
add
jnp
inc
gs
push
gs
inc
js
outsb
je
add
push
imul
gs
add
jns
inc
gs
push
jns
push
imul
jb
ja
push
fs
add
outsl
jae
push
push
popa
je
add
jle
inc
gs
imul
gs
add
add
je
push
outsl
outsl
insb
add
add
ja
push
popa
arpl
jb
jne
add
inc
gs
push
outsl
insb
outsl
jb
jl
inc
gs
push
gs
dec
gs
imul
jae
push
arpl
add
outsb
push
push
popa
je
add
push
dec
inc
dec
inc
cs
insb
add
push
jb
arpl
push
dec
inc
imul
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
jbe
add
add
arpl
push
dec
inc
insb
insb
outsl
arpl
outsb
outsb
arpl
add
push
jb
arpl
push
dec
inc
insb
insb
outsl
arpl
insl
je
dec
inc
inc
inc
push
push
inc
inc
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
lods
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jg
add
jnp
lods
lods
lods
add
cmpsl
push
mov
mov
mov
ret
lret
lret
int
int3
rcl
in
rcl
shl
ror
iret
hlt
int3
int3
int
enter
enter
vpmulhuw
mov
stos
lods
lods
lea
cltd
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
lret
rcl
sar
fcom
fdivr
xlat
fcom
xlat
fdivr
aad
aam
iret
ror
dec
int3
into
aam
rcl
iret
inc
std
mov
mov
lods
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
lods
stos
lods
add
lods
sbb
mov
jnp
mov
mov
dec
leave
leave
dec
rcl
aad
aam
fcomp
call
fcom
call
aam
dec
into
int
into
int
call
aad
dec
int
inc
rol
mov
mov
scas
std
cmpsl
test
ljmp
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
dec
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
mov
call
rcl
call
xlat
xlat
call
xlat
call
aam
dec
int3
into
dec
lret
int
int3
inc
inc
rol
mov
mov
jmp
mov
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
sbb
push
sub
push
xor
cmp
aaa
cmp
and
adc
push
push
pop
add
add
add
add
arpl
mov
or
mov
xlat
mov
mov
mov
mov
ret
inc
mov
call
aad
call
aam
dec
rcl
inc
enter
ret
mov
mov
ljmp
movsl
movsl
popf
sahf
popf
cwtl
xchg
cwtl
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jge
jg
jge
jo
jo
popa
bound
dec
dec
push
xchg
cmp
cmp
mov
jo
outsb
nop
popa
arpl
inc
inc
inc
xor
add
add
add
add
movsb
movsl
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
lret
leave
dec
lret
leave
enter
mov
mov
scas
lods
lods
jmp
fwait
fwait
call
xchg
xchg
xchg
xchg
xchg
lcall
lahf
cmp
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsb
add
pop
or
jl
mov
incb
jnp
jnp
jp
outsl
jo
out
push
push
ret
jg
js
jp
arpl
inc
inc
inc
cmp
pop
sbb
adc
prefetch
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
test
popf
popf
popf
call
xchg
decl
xchg
xchg
mov
mov
cwtl
mov
jns
jns
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
lahf
fwait
sahf
in
mov
incl
xchg
std
mov
jle
jno
jb
je
jae
jge
jge
addl
xchg
addr16
cmp
es
jg
cltd
lcall
stos
test
icebp
stos
stos
lods
sti
lods
stos
lods
lods
lods
lods
test
movsl
movsl
std
cltd
cltd
lcall
xchg
jns
jp
jp
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
mov
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
femms
rdmsr
inc
inc
inc
dec
insb
insb
imul
test
cltd
fwait
lcall
fwait
lcall
mov
mov
mov
mov
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
cmpsl
lods
add
pop
adc
test
mov
incl
xchg
decb
xchg
xchg
popf
popf
sahf
std
movsl
mov
mov
in
xchg
xchg
xchg
in
xchg
push
jne
push
or
inc
or
or
sub
push
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
xchg
std
decb
xchg
xchg
lcall
movsl
cmpsb
ljmp
test
lods
mov
xchg
stos
std
roll
mov
mov
ljmp
lahf
adc
add
add
pop
adc
mov
jmp
pushf
xchg
lcall
mov
call
nop
xchg
xchg
xchg
pushf
pushf
pushf
movsb
mov
test
movsb
movsb
mov
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
arpl
je
mov
lahf
test
mov
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
ss
mov
js
mov
movsl
mov
mov
mov
lods
lods
stos
mov
movsl
movsl
add
mov
add
pop
adc
mov
ljmp
sahf
decl
nop
call
xchg
xchg
call
xchg
lcall
mov
movsl
mov
stc
cwtl
lcall
nop
xchg
xchg
les
xchg
fwait
in
xchg
cwtl
out
xchg
cmc
mov
xchg
cld
xchg
adcb
cltd
imul
ljmp
jnp
mov
je
mov
outsl
ljmp
adc
lods
or
ljmp
jle
mov
mov
stos
pushf
movsl
movsb
movsl
and
add
add
mov
add
pop
adc
mov
jmp
nop
xchg
call
fwait
lcall
lahf
sahf
lcall
cltd
call
xchg
xchg
decb
xchg
xchg
xchg
cwtl
lcall
lcall
pushf
mov
xchg
imul
cwtl
dec
jns
lcall
pushf
pop
addr16
mov
push
jmpw
adc
lods
adc
lods
adc
scas
adc
mov
imul
adc
insl
mov
fwait
scas
mov
lods
scas
scas
movsl
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
sahf
jmp
movsb
movsb
jmp
xchg
cwtl
decl
mov
decl
jbe
cltd
jb
cltd
bound
call
cs
decl
pop
call
add
call
add
lahf
add
push
pushl
push
jo
mov
outsb
mov
and
and
rcrl
inc
inc
cmp
xchg
lods
mov
scas
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
scas
mov
shlb
lcall
mov
cmpsl
jmp
test
cmpsb
lcall
jg
decl
dec
outsl
decl
sub
mov
popa
incl
or
push
incl
add
mov
push
call
add
lcall
jmp
push
outsb
pushl
sub
mov
sub
inc
sub
jg
cs
xor
enter
leave
lea
cld
mov
mov
movsl
movsb
movsl
dec
mov
mov
add
add
add
stos
movsb
test
push
push
push
adc
test
mov
sahf
fwait
sahf
jmp
test
ljmp
lods
stos
pushl
scas
scas
jmp
jb
incl
or
push
incl
add
incl
add
test
push
incl
add
nop
add
xchg
add
cltd
add
mov
add
ljmp
sub
cmp
aaa
test
leave
cmp
dec
cmp
call
cmp
call
dec
xchg
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
lahf
cltd
lahf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
mov
mov
push
decl
push
decl
or
xchg
decl
add
add
xchg
add
sahf
add
mov
add
lods
add
jb
ret
cmp
dec
inc
call
inc
call
dec
call
dec
xchg
call
dec
xchg
fimull
fisttpll
fsts
call
test
std
mov
mov
movsl
mov
mov
add
dec
dec
adc
jl
movsl
sahf
mov
jmp
stos
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
xchg
decl
sbb
xchg
sbb
mov
decl
push
call
add
sahf
add
mov
add
stos
add
mov
gs
and
call
push
xchg
call
push
fwait
fsts
fcompl
ficomps
ficoms
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
cmpsl
cmpsl
test
sahf
sahf
mov
add
inc
inc
adc
ja
sahf
cltd
lahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
je
xchg
and
xchg
and
xchg
and
call
sbb
or
nop
add
xchg
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
fbld
fbld
jmp
cmpsb
jmp
cmpsb
jmp
data16
ljmp
call
xchg
mov
cmpsb
cmpsb
mov
lahf
lahf
add
inc
inc
adc
jb
fwait
xchg
cwtl
call
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
sbb
pop
call
add
mov
add
lods
add
mov
pushl
movd
roll
fsubl
jmp
jo
jmp
outsl
lods
jmp
jno
jmp
jne
in
jae
out
jbe
out
jne
out
je
jmp
xchg
mov
cmpsl
cmpsb
lcall
lahf
add
jge
ds
js
lea
popf
fwait
fwait
pushl
mov
mov
mov
mov
mov
cmpsl
lods
lcall
outsl
jmp
cmp
mov
sbb
call
add
lahf
add
add
test
pop
pushl
add
mov
sbb
fistl
jmp
jbe
ljmp
in
jg
out
cmpl
push
xchg
push
cmpb
aam
mov
stos
cmpsl
pushf
pushf
pushf
daa
sahf
sahf
lahf
add
add
add
pusha
add
xor
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
inc
ret
ret
mov
lcall
cmp
inc
jl
mov
ss
cltd
pop
arpl
xchg
add
sahf
add
mov
add
scas
add
mov
gs
mov
add
iret
es
ljmp
out
mov
push
xchg
sar
pop
push
xchg
push
xchg
ret
stc
xchg
push
ret
in
mov
fidivl
lods
stos
mov
sahf
pushf
xor
sahf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
inc
ret
inc
mov
jle
lcall
jg
lods
dec
cmp
xor
lcall
add
mov
add
lods
add
mov
fs
mov
add
movl
jmp
jns
in
xchg
ret
push
fwait
push
fwait
push
lcall
cmc
lcall
cld
popf
int3
cld
sahf
int3
sti
cltd
lret
xchg
ret
mov
dec
mov
mov
mov
mov
popl
fwait
cltd
fwait
add
add
add
add
das
sub
outsb
dec
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
mov
mov
sar
mov
ljmp
dec
mov
movsb
sub
lcall
jmp
pushl
add
rolb
inc
add
rorb
je
filds
out
lea
push
cmpsb
into
push
cmpsb
into
push
cmpsl
into
sti
cmpsl
sar
cld
cmpsl
iret
cld
test
stos
sar
std
stos
sar
std
test
push
popf
jmp
mov
dec
lret
mov
mov
sahf
mov
xchg
add
fwait
lcall
xor
sub
inc
inc
inc
bound
pop
xlat
jne
jb
mov
rol
ret
mov
ret
ret
mov
leave
leave
leave
inc
ret
mov
cmpsl
jmp
push
mov
scas
dec
xchg
sahf
sbb
popf
add
jmp
add
mov
mov
add
int3
add
add
fists
push
sahf
lret
sti
scas
sar
cld
scas
aad
cli
scas
aam
cld
mov
cld
mov
mov
cld
mov
std
mov
mov
mov
push
movsl
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
outsl
jo
cltd
fwait
lcall
xlat
xlat
jmp
not
rcl
std
lret
int3
int
lret
dec
leave
lret
dec
lret
mov
scas
ljmp
push
mov
lods
jg,pt
sahf
or
pop
ljmp
mov
add
roll
outsb
fadds
je
fiadds
jne
ljmp
sti
scas
sar
std
mov
std
mov
mov
xlat
cld
mov
xlat
inc
std
mov
lret
jmp
mov
call
lret
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
pop
pop
pop
or
enter
jecxz
pop
out
jmp
test
in
leave
fstp
fucom
fcmovu
fcomi
xlat
cli
aam
fdivr
into
ror
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
call
add
fldl
jbe
jecxz
js
out
xor
sti
mov
loope
inc
std
loopne
inc
loopne
std
std
enter
fdivrp
dec
fdivrp
std
enter
lret
cld
mov
lret
leave
iret
mov
mov
xchg
adc
add
add
std
std
add
std
incl
incb
repnz
or
out
in
pop
jmp
in
sub
in
in
dec
call
jmp
out
jecxz
out
fucomp
ret
mov
xchg
cmpsl
cmp
mov
add
test
pusha
pushl
add
movb
dec
add
fadds
je
filds
jbe
jmp
inc
popf
cld
mov
jecxz
dec
in
std
int3
in
dec
jecxz
std
int
dec
loope
dec
loop
std
shl
call
loop
std
shl
call
jecxz
cli
fdivr
out
mov
fdivr
ret
ret
cmpsb
cmpsl
test
xchg
xchg
xchg
sbb
fwait
cltd
add
std
add
std
add
clc
testl
icebp
repz
push
out
icebp
out
pop
in
repnz
cmp
out
in
pop
loopne
loopne
les
sti
lahf
and
lcall
add
lods
add
mov
fs
add
movl
jno
fiaddl
jne
in
jnp
jmp
jl
negb
cli
mov
std
shl
cld
shl
std
shl
shl
call
in
call
out
fsubr
std
xlat
jmp
fucomi
fldl2t
std
shl
push
ret
in
lret
leave
leave
repz
test
and
cwtl
xchg
add
cli
add
clc
add
cli
cli
add
div
or
aam
xor
jae
negb
add
cmpsl
add
lods
add
mov
add
lret
call
add
fldl
jne
out
js
out
sbb
cli
cld
fsubr
std
fldl2e
fldlg2
fldl2t
fucomi
std
fucomi
std
fucomp
fsubrp
loopne
jmp
in
cld
shl
push
ret
out
fdivr
iret
ror
clc
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
mov
xchg
lods
jl
repnz
and
sahf
add
cmpsl
add
mov
arpl
mov
add
int
outsl
call
add
filds
jae
call
sub
std
shl
fsubrp
fucomp
std
fldl2e
fldl2t
fsub
cld
aad
cld
shl
cli
shl
cld
shl
stc
int
clc
lret
fdivrp
test
out
mov
xlat
fcom
sti
mov
mov
lcall
add
add
add
xlat
add
rol
scas
mov
lcall
add
mov
mov
add
roll
outsl
fadds
je
loopne
js
ljmp
cli
cwtl
enter
cli
int3
loop
cld
clc
mov
aad
hlt
mov
into
push
mov
int3
jmp
mov
iret
std
jmp
jmp
loopne
in
mov
mov
xchg
add
add
add
int
add
mov
movsl
loopne
ss
mov
add
mov
data16
mov
add
into
push
jno
rorl
jbe
fsts
js
loope
cmp
inc
cwtl
jmp
mov
jmp
scas
enter
cld
fidivs
mov
leave
ljmp
into
fsubp
iret
xlat
shl
xlat
fcmovb
call
out
test
out
out
popf
call
lret
stos
stos
lods
adc
test
cmpsl
add
rolb
ret
mov
popf
lods
aam
dec
cmp
sbb
cmpsl
push
insb
scas
and
mov
ja
mov
inc
test
les
stc
leave
fs
mov
shll
rcl
ror
aad
int3
rcl
int
aam
shlb
xlat
rcl
jg
fcmovu
jb
gs
jecxz
out
jmp
xor
div
mulb
repnz
fstp
or
mov
int
mov
add
mov
rol
mov
mov
les
imul
mov
fwait
in
lea
sarb
mov
les
rcrb
int3
jp
int3
iret
addr16
ror
push
iret
rcl
dec
aad
aad
rcl
aam
fcmovnu
daa
xlat
sbb
adc
jecxz
push
loope
jecxz
call
icebp
out
add
cli
testb
std
add
std
std
add
incl
mov
mov
mov
mov
lods
scas
xchg
mov
mov
mov
mov
rcll
les
mov
daa
int
into
and
aam
sbb
aam
adc
rorb
aam
aad
rcr
add
fcmovnu
add
loopne
add
in
add
in
jmp
lret
aad
std
incl
mov
mov
add
ret
mov
rol
sub
mov
mov
push
rol
or
enter
leave
movl
leave
roll
rcl
add
xlat
aad
aad
aad
fadds
loop
fiaddl
fsubp
loopne
fiadds
in
out
repnz
lock
std
std
add
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
ret
les
ret
mov
mov
mov
ja
test
dec
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
aam
ror
jmp
aad
cmc
rcl
sar
into
iret
sar
int3
int3
lret
stc
lret
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
sarb
iret
into
into
aad
xlat
call
aad
call
iret
sar
iret
iret
int
lret
int3
lret
mov
mov
icebp
xchg
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jne
gs
dec
inc
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
mov
ret
dec
int3
lret
call
rcl
call
rcl
dec
lret
lret
rol
pushl
test
popf
lahf
popf
xchg
xchg
xchg
jmp
jno
xchg
pop
push
push
dec
add
add
add
add
add
add
addl
subl
imul
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jo
jo
scas
mov
pop
mov
mov
mov
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
cltd
fwait
cltd
out
addb
adc
wrmsr
add
add
add
add
add
pop
cltd
cltd
lcall
cwtl
lcall
addb
jnp
jnp
jns
jns
jp
jp
jnp
jnp
jae
jae
push
push
push
cmp
jne
pushf
pushf
sahf
mov
scas
scas
repz
scas
lods
sti
scas
lods
scas
std
test
test
sahf
pushf
popf
call
test
call
mov
lods
jmp
scas
scas
leave
movsl
cmpsb
movsl
cltd
jb
je
adc
adc
add
add
add
add
outsb
outsb
insl
pop
stos
movsb
stos
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsl
orl
cwtl
repnz
xchg
xchg
std
mov
call
lahf
ljmp
test
std
mov
scas
mov
mov
mov
movsl
movsb
cmpsb
pop
cmpl
add
add
add
pop
or
lods
mov
movsl
mov
mov
mov
nop
call
popf
lahf
sti
sahf
mov
lcall
push
push
jo
pop
pop
outsl
insb
outsl
outsb
xchg
subl
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
jl
mov
lods
stos
insl
stos
stos
test
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
xchg
call
cwtl
fwait
fwait
popf
lcall
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
imul
pushf
dec
jp
movsb
inc
js
lods
aaa
jbe
scas
sub
mov
outsl
ljmp
sbb
pop
mov
scas
mov
movsb
mov
add
add
add
pop
pop
popa
or
mov
in
movsb
test
cltd
xchg
cwtl
lcall
mov
mov
decl
orb
xchg
jae
cld
cwtl
pop
test
xchg
dec
jns
nop
cmp
xchg
sub
xchg
sbb
lcall
or
push
pushl
sbb
mov
and
pop
nop
mov
scas
scas
xchg
popf
lahf
lahf
adc
add
add
popa
pusha
pop
or
stos
mov
test
mov
cmpsl
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
imul
mov
pop
incl
add
decl
add
popf
add
cmpsl
or
je
mov
sub
jle
enter
leave
xor
dec
pop
cwtl
inc
test
divl
test
add
add
add
pop
popa
pusha
or
cmpsb
test
jmp
mov
pushl
mov
jmp
inc
jo
mov
pop
decl
or
add
decl
add
xchg
add
lahf
add
add
mov
outsb
inc
cmp
rolb
call
inc
mov
inc
xchg
fimull
call
arpl
stc
mov
mov
movsb
movsl
movsb
daa
incb
add
add
popa
pop
pop
or
lahf
mov
ljmp
mov
pushl
mov
test
call
sbb
decl
or
popl
push
call
add
cmpsl
add
scas
add
mov
dec
nop
fstps
fcompl
jmp
pop
mov
jmp
pop
mov
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jle
jnp
popf
xchg
lcall
scas
mov
mov
mov
mov
mov
mov
sahf
data16
xchg
sub
insb
call
push
pop
call
add
add
scas
add
mov
xor
jmp
insl
stos
jmp
outsb
lods
ljmp
in
jno
jmp
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
outsb
insl
insb
bound
lcall
mov
mov
sar
mov
jmp
je
mov
sub
xchg
or
pop
jmp
add
mov
inc
or
xchg
jmp
js
jmp
mov
in
test
push
mov
push
mov
mov
cmpsb
cmpsb
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
mov
inc
mov
sahf
jmp
inc
jg
mov
or
mov
add
mov
fs
mov
adc
mov
push
xchg
ret
push
cltd
cwtl
clc
lcall
negb
inc
mov
stos
popa
lahf
mov
add
xor
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
ret
ret
mov
test
ljmp
and
add
pop
pushl
add
lret
fisubl
cmp
jp
push
movsb
int
mulb
iret
cld
stos
iret
cld
lods
sar
cld
lods
sar
cli
cmpsb
int
out
leave
dec
mov
stos
jne
sahf
popf
or
add
add
dec
dec
dec
aaa
jae
je
stos
stos
stos
ror
int
out
int
cmc
lret
lret
lret
lret
leave
std
mov
mov
bound
jmp
add
mov
gs
add
into
add
fildl
xchg
push
xchg
cld
mov
cld
mov
xlat
cld
mov
xlat
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
or
aam
dec
loope
jecxz
loopne
loopne
fcmovnb
fcmovnu
fcmovnu
aad
xlat
out
shlb
test
je
cmpsb
push
pop
ljmp
add
leave
add
add
in
jl
repnz
mov
std
inc
loop
std
enter
leave
std
enter
lret
std
out
mov
lret
divb
popf
pushf
sbb
add
add
std
std
add
incb
jmp
or
out
in
sbb
in
in
xor
loope
in
lds
mov
mov
add
pushl
add
int
insl
fildl
je
call
outsb
mov
sti
sti
shl
call
in
call
out
std
shl
out
std
call
push
enter
lret
sar
mov
mov
add
std
std
incl
std
add
cld
cld
pop
aam
aad
mov
pop
xchg
sahf
or
test
pop
pushl
add
rolb
jo
loopne
jne
in
pop
mov
cli
mov
cld
shl
fsubr
std
std
xlat
call
sti
xlat
call
cld
aad
push
fdivr
loope
aad
mov
popf
popf
das
add
add
int3
int3
int
mov
fs
mov
add
mov
add
aad
jb
loope
ja
out
xor
stc
lret
loopne
clc
lret
test
hlt
ret
aad
icebp
ret
lock
aam
in
aad
in
jmp
shl
jecxz
fsubr
mov
test
std
std
add
add
add
aad
push
mov
jae
or
mov
insb
inc
sbb
int3
and
cs
ficoms
jecxz
mov
out
jecxz
leave
jmp
fidivrs
int3
leave
sarl
jecxz
ficompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsl
les
pop
mov
mov
xchg
fidivrl
jle
rol
stos
mov
mov
ret
mov
lret
insl
ror
int
rcl
iret
dec
fdivrs
loopne
fildll
in
fisubs
loop
icebp
adc
in
jmp
fiaddl
std
incl
std
incb
mov
mov
outsb
scas
mov
lods
data16
mov
mov
mov
xor
leave
and
rcl
pop
rol
adc
rcl
or
loopne
or
into
int
lods
stos
stos
add
std
incl
std
incl
fwait
fwait
cltd
add
mov
rol
or
into
int3
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
cltd
add
ret
enter
enter
enter
ret
mov
scas
mov
insb
stos
stos
lods
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
mov
jmp
aad
aad
rcl
sar
iret
int
std
vshufps
mov
in
test
cmpb
sbb
add
add
add
add
add
add
add
add
jno
jno
addr16
dec
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
into
into
call
rcl
dec
into
int
enter
mov
lods
scas
lcall
mov
push
add
add
add
add
je
jne
test
aad
jo
ret
bound
insl
outsl
outsb
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jno
es
pop
add
add
je
jb
popf
xchg
pushf
mov
test
mov
mov
or
addl
push
push
inc
mov
pushf
into
mov
lahf
mov
decb
lcall
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
adcl
stos
mov
mov
mov
xchg
cld
pushf
sahf
popf
cmc
lcall
mov
push
push
imul
jle
lea
testl
mov
mov
jo
mov
lods
lods
push
lods
stos
stos
add
add
add
test
scas
cld
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
jne
out
xchg
fs
push
jl
fwait
inc
ja
cmpsl
aaa
jbe
scas
sub
pushl
sbb
mov
jge
mov
mov
imul
into
add
xchg
pop
scas
movsl
lods
test
popf
sahf
popf
jmp
movsl
cmpsb
call
imul
xchg
inc
jb
mov
push
mov
pop
call
or
ljmp
and
mov
sub
ret
ds
mov
scas
mov
stos
test
add
xorb
fwait
mov
cld
cmpsl
test
ljmp
mov
jmp
sub
decl
or
xchg
push
decl
pop
jmp
adc
ret
dec
aas
mov
rolb
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
push
cwtl
xchg
xchg
test
mov
scas
pushl
mov
movsl
call
arpl
mov
pop
call
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
movsl
call
fwait
mov
mov
cmpsl
cmpsl
pop
add
add
bound
adc
sahf
pushf
pushf
cld
mov
mov
mov
mov
mov
fwait
dec
jge
popf
xor
cltd
and
xchg
push
pop
lcall
add
mov
xor
jmp
outsb
stos
call
jnp
out
jle
out
jle
fistpl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
jmp
inc
jle
lahf
and
lcall
pop
pushl
insl
fisttpl
in
mov
push
xchg
cwtl
enter
jmp
cmpsb
inc
mov
movsb
sub
aas
aas
inc
adc
push
xchg
xchg
mov
inc
sarl
stos
dec
cmp
sbb
movsl
add
mov
arpl
ret
call
adc
ljmp
clc
lods
sar
cld
lods
sar
sti
scas
sar
std
scas
sar
jmp
enter
rcr
movsb
cmpsb
ds
incb
xor
xor
outsl
outsl
outsl
inc
scas
mov
mov
aad
mov
aad
rcl
out
lret
cli
mov
mov
jmp
fs
add
aam
jb
out
xchg
clc
nop
mov
fdivr
cld
ret
inc
cld
rcr
out
mov
ret
in
test
dec
addl
stos
add
in
in
or
out
jmp
outsb
fcmovu
mov
add
mov
add
fiadds
ja
lock
xchg
sti
scas
aam
cld
iret
out
call
in
std
shl
call
out
std
shl
push
leave
fdivr
aad
int3
in
scas
scas
lods
popa
addl
add
std
incb
std
push
lret
int
sub
sahf
sbb
lods
add
mov
add
loope
js
cmc
push
cmpsl
cld
loop
std
aad
aad
std
aad
std
aad
stc
aam
push
enter
into
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
scas
add
imul
or
fstpl
jg
ljmp
cli
in
mov
iret
repnz
loope
leave
aam
jmp
fcmovnu
scas
ret
vsqrtpd
add
add
mov
lods
xchg
inc
and
push
mov
shlb
int3
jbe
mov
xlat
mov
int3
adc
int3
outsl
fxch
rcrb
rcl
dec
in
loopne
out
call
sbb
mov
mov
lods
arpl
mov
ret
cs
mov
lret
sbb
bswap
into
into
or
aad
push
std
add
addl
lods
incb
rol
add
std
incb
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
jecxz
pop
mov
std
sub
jns
in
mov
inc
mov
sub
fidivs
fwait
pop
jl
pop
negl
xor
mov
or
xchg
loope
add
push
imul
dec
aas
lret
in
mov
xchg
dec
insb
xor
mov
xor
imul
xor
or
pusha
push
sahf
mov
jl
pop
jo
test
push
inc
mov
jne
jmp
stos
lock
int
imul
xor
orb
sbb
mov
loop
lods
adc
out
ret
fcomps
ret
cwtl
cld
mov
lea
mov
inc
lret
jbe
mov
lods
xchg
les
in
inc
cmp
movsl
fidivrs
fldl
xchg
orl
mov
out
adc
pop
sub
and
mov
pushf
test
xor
loopne
movsl
jne
fisttpll
clc
xor
repnz
sbb
add
jl
mov
imul
push
test
popa
aas
jns
sarb
outsb
xchg
jp
ret
rcrl
stos
xor
cwtl
add
and
inc
xor
sbb
dec
or
cmp
mov
insb
add
cltd
push
mov
out
loop
ljmp
sub
cmpsl
cmc
jle
scas
push
mov
lds
dec
dec
and
inc
cmp
jecxz
aas
cmp
xchg
jns
jo
lea
fiadds
adc
pop
cmpsb
loope
cli
add
cli
sbbb
in
test
jno
sub
adc
mov
addr16
mov
sub
mov
daa
incl
cmp
and
jo
jns
lock
push
addr16
pop
jge
cmp
aas
in
insb
sub
jle
mov
inc
cmp
rorb
pop
in
inc
or
pop
dec
push
fimuls
test
pop
mov
adc
dec
repz
adc
mov
test
and
jae
aad
cld
pop
xchg
dec
cmp
xchg
in
pop
cld
test
mov
jne
sarl
es
push
mov
cmp
movsb
dec
mov
inc
js
adc
inc
ret
jge
imul
mov
xchg
xor
out
int
mov
lret
or
aaa
faddl
dec
pop
mov
stos
je
lock
xchg
inc
call
hlt
rolb
clc
pop
xor
jmp
es
dec
xorl
fidivrl
insl
insb
push
jne
aam
lods
dec
adc
ret
xchg
clts
aam
fisubl
mov
pop
out
call
sub
cmpsl
pop
pop
xor
cmp
clc
xchg
lret
mov
and
mulb
rcrl
cld
rolb
pop
xchg
jmp
inc
xchg
scas
inc
xchg
cmp
ret
xlat
fldt
arpl
push
imull
stos
hlt
mov
ljmp
sbb
loope
pusha
mov
call
jb
dec
lods
mov
push
mov
pusha
icebp
cmpsb
push
push
test
adc
xor
daa
shll
movl
jo
mov
data16
push
mov
mov
fwait
cmp
xchg
mov
in
leave
icebp
imul
jl
mov
cltd
cmp
cmpsb
in
cwtl
fidivrl
cli
pop
xchg
inc
push
or
inc
in
jle
ret
lea
icebp
jnp
fsub
scas
push
and
cwtl
jge,pt
mov
xchg
mov
js
or
imul
or
add
dec
shrb
loope
jnp
fs
xor
aam
mov
inc
adc
or
mov
push
scas
jge
jae
xor
push
cmp
pop
jo
mov
mov
mov
mov
movsb
xor
gs
mov
mov
add
subl
stos
scas
lret
adcb
xor
insb
pop
gs
jne,pn
jne
xor
jb
out
push
push
insb
cmp
mov
jl
rcll
add
pop
cmp
mov
sbb
sbb
fwait
inc
dec
and
aam
lcall
push
in
mov
add
stos
pop
in
push
xchg
xchg
xlat
outsb
cmc
cmp
lret
sub
in
je
push
ret
movsb
out
pushf
int
out
aas
jp
outsb
dec
lock
lods
and
jne
cmpsl
sub
sub
sub
mov
movsl
sarl
jno
jmp
mov
adc
sahf
test
testl
cmp
ds
push
sbb
clc
out
imul
dec
adc
in
das
mov
xchg
push
mov
mov
dec
xchg
inc
test
loop
cld
das
clc
xchg
inc
lods
aam
adc
pop
je
or
sahf
fwait
cmp
lret
jmp
fiaddl
mov
or
inc
push
mov
or
mov
loopne
dec
sbb
in
xchg
mov
test
in
out
and
or
call
inc
fadd
inc
mov
cwtl
xchg
arpl
les
mov
pusha
and
pop
lcall
push
xchg
xchg
icebp
test
add
jb
stos
jle
cmp
and
push
je
adc
cld
cmp
jae
inc
lods
jnp
or
pop
jp
sbb
iret
or
std
enter
add
sub
cwtl
das
int
out
sbb
push
jecxz
mov
loopne
iret
cmpsl
jge
push
std
xchg
dec
xchg
repz
xor
push
mov
aas
push
fwait
jecxz
mov
mov
mov
aaa
inc
shrb
negb
sbb
mov
xchg
out
dec
xchg
mov
clc
and
lret
in
mov
addr16
ss
jmp
call
into
sub
pop
sahf
adc
xor
test
sarb
test
lret
dec
in
inc
rclb
insb
add
fidivs
jo
and
les
aam
hlt
lea
call
cli
dec
adc
std
call
pusha
lcall
test
cmp
jo
mov
out
jne
push
stos
mov
out
xchg
repz
lret
mov
jmp
push
mov
testl
xchg
dec
subl
imul
pushf
xchg
or
movsl
cmp
adc
inc
jl
pop
scas
bound
xchg
iret
loope
add
call
cmp
mov
pop
shrl
cmp
clc
scas
out
xchg
sbb
dec
add
movsl
xor
setge
test
dec
loope
adc
ljmp
shrl
dec
xchg
ljmp
cmpsl
cmp
ret
pop
lds
xchg
rcl
xor
std
xorl
cmc
mov
arpl
hlt
sub
repz
add
inc
jno
out
loop
sbb
adc
repz
rol
into
sub
sbb
aam
add
mov
ret
cmc
cmp
hlt
shl
xchg
add
ja
adcl
stos
mov
xor
mov
push
inc
int
es
out
int3
arpl
mov
ljmp
xchg
or
xchg
out
mov
jmp
or
mov
mov
faddl
cli
loopne
sahf
xor
xor
mov
jno
test
push
fisubrl
clc
pop
sti
fdivl
jl
lods
lods
dec
cli
xchg
or
lret
jmp
push
ljmp
jno
movsl
inc
push
jmp
es
xchg
jb
leave
sbb
adc
or
imull
dec
jbe
jp
jle
jnp
xchg
sub
pushf
pushf
xor
out
mov
pop
lock
loop
nop
daa
add
insl
jne
repnz
dec
jo
jns
lock
mov
sbbl
inc
into
jmp
push
mov
and
jne
cld
pop
inc
fiaddl
and
sub
repz
lret
push
call
xor
cmp
inc
jbe
hlt
xchg
gs
jecxz
xor
outsb
ja
dec
imul
or
push
push
lods
inc
nop
mov
ss
xchg
mov
lds
enter
test
dec
push
out
push
xsha1
cmpsb
dec
jp
jae
lock
hlt
mov
sti
xchg
pop
and
xchg
mov
cmp
mov
add
mov
pop
xchg
sub
xor
push
push
push
in
aaa
jle
or
rol
pop
push
xchg
add
movsl
loope
xchg
xchg
test
pop
shll
rcrl
out
pop
loop
dec
add
shll
push
sbb
fwait
xor
adc
add
sbb
ljmp
cmp
mov
dec
fists
fstl
loopne
in
loopne
out
aad
js
outsb
add
or
mov
pushf
inc
mov
js
and
pop
push
inc
flds
call
push
fmul
add
dec
cmpsl
aas
fisttps
lods
inc
cmpsl
sbb
jg
stc
push
sbb
inc
aas
sub
mov
insb
add
shlb
mov
in
and
lcall
ljmp
cltd
jl
add
scas
popf
sub
push
dec
xchg
sub
mov
ret
mov
xchg
hlt
aam
push
xchg
gs
mov
push
jmp
jae
stos
inc
jmp
ss
or
pop
jle
mov
xor
int
jge
xor
test
ja
push
lods
mov
fnstcw
lret
jo
aas
pushf
in
fnsave
out
insl
dec
cmp
mov
test
xor
clc
movsl
rcrl
fnsave
jb
stos
push
inc
fidivs
jae
sbb
sub
iret
pop
out
icebp
lock
loop
sahf
xor
jne
lods
inc
mov
repnz
sub
repz
into
push
mov
dec
sub
inc
popf
dec
jecxz
popa
sahf
xor
mov
push
xchg
sub
and
mov
sbb
xchg
sub
loop
push
inc
mov
fstl
add
pop
movsb
data16
dec
sub
push
inc
fidivrl
mov
data16
aad
in
or
mov
mov
frstor
subl
ss
pop
mov
fwait
dec
daa
popf
xor
imul
sub
outsb
ret
popa
clc
stc
movsb
cmp
xchg
and
xchg
push
call
daa
aaa
pop
scas
dec
adc
cmp
clc
dec
rclb
imull
pop
sahf
repnz
jg
jmp
imul
jp
loope
xchg
adc
dec
mov
imul
mov
pop
cmp
inc
fcomp
pop
and
dec
js
push
mov
mov
pop
subl
cmp
leave
mov
rcrl
xchg
cmpsl
ds
cmp
test
gs
fcoml
xlat
outsb
ja
sbbl
push
repnz
xchg
in
or
and
or
and
cltd
push
out
or
sbb
icebp
sub
gs
mov
in
adcl
adc
push
or
jne,pt
mov
dec
loop
mov
in
sbb
int
lret
ljmp
add
xor
call
mov
pop
cmp
mov
cmp
push
cli
xchg
aas
mov
xchg
cld
rcrl
xor
cmpsb
cmp
add
or
aaa
leave
push
in
pop
lods
inc
dec
xchg
cld
xchg
ret
pushf
pop
jo
push
lods
jge
cmc
outsb
inc
adcb
js
add
xchg
xchg
pop
push
popf
xor
add
cmp
pop
repz
mov
mov
insl
pop
popa
cli
xchg
mov
dec
or
add
inc
fidivs
xor
xchg
fstpt
divl
dec
inc
fstpt
popa
cltd
xor
dec
fbstp
insb
pop
negb
xchg
sub
mov
jo
xor
stc
xchg
lret
bound
cltd
lret
and
mov
cmpsb
mov
jb
dec
scas
inc
ja
adc
aas
pop
jbe
dec
sarb
add
int
out
xchg
sub
mov
pop
cmc
test
push
xchg
cmpsb
lods
inc
sbb
push
jbe
jmp
inc
dec
int3
inc
fstpt
fildll
rol
pop
icebp
cld
repnz
popf
jecxz
hlt
mov
add
cmpsb
jne
scas
inc
cmpsb
xchg
cmp
pop
dec
adcb
sub
cltd
sub
dec
mov
pushf
xor
dec
jnp
inc
movsb
sahf
xor
push
imul
sub
sbbl
pop
out
adc
cmpsb
ds
lods
mov
xchg
inc
and
pop
push
insl
add
jmp
push
popf
push
rolb
push
imul
mov
imul
lahf
addr16
push
cmp
into
jge
or
sub
pop
not
insb
cltd
xor
movsl
cmp
jg
sub
add
push
pop
xchg
ss
jmp
popf
and
push
jmp
mov
push
movsl
sub
fdivrs
fstps
pusha
fidivs
fidivrs
jmp
aam
roll
xchg
sar
dec
in
sbb
pop
mov
cmp
inc
lea
cmpsl
ds
xchg
sub
ds
jecxz
nop
aad
jo
mov
mov
call
or
push
add
cmp
ljmp
dec
in
ret
mov
adc
lds
lea
jb
xchg
stos
stc
cmp
ljmp
sarb
mov
mov
cmp
sub
cmpsl
adc
pop
out
mov
out
test
aad
cmp
xchg
fdivl
call
and
in
sub
xchg
jg
fidivl
mov
lock
mov
test
outsl
and
lret
daa
jbe
addr16
out
xchg
adc
test
out
icebp
jg
sub
xchg
sub
or
cmpsl
ds
push
stos
xchg
and
mov
fidivs
mov
lock
mov
or
xchg
pop
add
and
or
xor
jge
sub
cmpsl
scas
dec
fwait
xor
sub
push
mov
in
pop
fimull
mov
fnsave
popl
jmp
or
inc
pop
int
test
pop
and
nop
daa
dec
mov
testl
adc
or
or
sub
dec
loop
dec
adc
push
ja
movsb
xor
push
or
das
pop
push
fsubrl
and
adc
fs
je
cmp
mov
push
lods
repz
dec
fildll
sarb
shr
ret
sub
rcrl
mov
cmpb
and
insb
inc
inc
fstpl
repz
jp
dec
pop
outsl
push
movsb
insl
cmp
cmp
pop
inc
sbb
subps
mov
ret
cmc
and
mov
pop
lock
aad
mov
imul
pop
mov
xor
stos
movsbl
int3
push
ljmp
inc
in
xchg
mov
aaa
push
mov
mov
cmpsl
into
int3
sbbl
sahf
push
scas
inc
dec
sub
mov
sub
xlat
popf
fcmovnb
pop
int
add
push
daa
je
jno
cli
and
mov
pop
jecxz
sub
mov
ret
ds
mov
insl
add
fucomp
and
out
xchg
ds
repz
sbb
lea
pusha
idivl
pop
repz
mov
jnp
stos
repnz
sahf
enter
std
jmp
sub
push
cmp
dec
es
sbb
jp
sub
out
test
in
pop
xlat
add
les
mov
js
pop
ret
bound
cmc
in
adc
insl
std
xchg
sbb
xor
mov
andl
jo,pt
and
sbb
or
cltd
pop
icebp
insl
push
int
insl
cmp
in
jmp
aaa
or
push
sub
data16
mov
icebp
in
and
add
jnp
push
pop
fsubs
mov
mov
xchg
jbe
mov
stos
clc
push
xchg
sbbb
cmpl
inc
test
sahf
mov
je
insb
les
pop
loope
and
ss
cmp
in
addr16
lret
fs
mov
stos
imull
add
mov
mov
push
push
pop
bound
int3
jg
enter
cmp
adc
lock
add
mov
adc
stc
js
jge
lds
call
pop
adc
fisttps
jecxz
jmp
mov
shl
lret
dec
xchg
stos
cmp
pop
and
sbb
cmp
out
test
push
jmp
mov
adc
xchg
xor
mov
data16
in
flds
xor
jmp
dec
mov
rolb
pop
out
dec
pop
inc
fisttpll
mov
cmp
dec
fsubrs
rorl
and
insl
mov
fcoms
daa
inc
enter
out
sub
adcl
push
pop
push
mov
js
iret
push
sbbl
adc
ss
bnd
sbbl
xchg
cmp
jl
out
pop
ftst
shrl
add
and
pop
subl
mov
mov
loop
ret
sub
shrb
adc
and
nop
daa
mov
ret
fidivs
xchg
dec
call
out
out
mov
loopne
das
mov
fadd
pop
push
nop
ja
cmc
das
mov
push
add
sub
test
dec
xchg
sub
cli
add
inc
out
jg
adc
arpl
test
fs
push
sti
xchg
mov
les
fidivrl
sbb
scas
jmp
pop
icebp
in
cmp
inc
outsb
push
or
add
ret
pop
mov
pushf
xor
arpl
push
xor
enter
xlat
outsb
add
loopne
jmp
scas
inc
push
sbb
leave
dec
add
xchg
ja
mov
push
sub
xchg
sahf
dec
int3
arpl
cmovno
or
imul
popf
lret
mov
fwait
xor
or
dec
fildll
lret
in
mov
push
aaa
popf
cmpsl
and
mov
mov
rclb
imul
outsb
fidivl
fmul
iret
out
mov
ficoms
clc
inc
addr16
cs
adc
sbb
push
sub
faddl
mov
fsubrl
rcrb
mov
adc
fidivs
mov
jb
bound
lds
push
mov
leave
cwtl
mov
or
or
insl
sub
add
ret
mov
fsub
and
jno
loop
out
fucomp
es
push
lods
das
lret
push
cmc
mov
test
jg
enter
movsl
and
cmpsb
xchg
popl
incl
mov
lcall
rclb
insl
add
mov
movsb
cmp
push
pushf
xor
hlt
mov
cmpb
gs
pop
call
iret
fbld
int
add
nop
sbb
dec
mov
push
daa
in
jp
pop
mov
cltd
shrb
xchg
mov
xchg
std
inc
fwait
mov
or
jo
mov
stc
jno
in
inc
dec
loop
iret
adcb
mov
inc
sub
push
out
subb
add
jle
dec
sbb
dec
fwait
scas
inc
or
movsl
lahf
outsl
pop
pop
cli
insb
add
cmp
push
add
clc
jl
dec
loope
add
cmp
mov
or
shrb
cld
inc
rol
lds
xor
cmp
push
sbb
sub
cltd
push
movsl
push
cltd
daa
jae
out
dec
inc
xlat
pop
lds
mov
jg
fnstcw
sti
pop
repnz
pop
jmp
dec
in
cmp
mov
test
add
popf
and
lds
or
and
push
jmp
inc
push
jmp
repnz
or
lods
ss
out
jno
insb
add
xchg
jbe
and
call
adcl
jbe
dec
out
int
int
ljmp
jae
lahf
xor
aad
fs
jge
pop
test
dec
fsub
ja
imul
xor
push
xchg
sub
mov
in
subb
cwtl
inc
mov
xor
jp
pop
lods
das
int3
arpl
mov
sub
xchg
xor
push
mov
lea
sub
into
mov
mov
std
ds
test
sti
xchg
lods
movsl
out
test
into
jno
add
mov
hlt
in
xchg
insl
add
or
mov
sarl
iret
mov
ljmp
dec
loop
adc
jge
sub
mov
sub
testb
pop
adcb
pop
shrl
int
call
xchg
outsb
stos
call
sbb
test
cmp
repz
mov
test
lock
jb
dec
in
xchg
das
sarb
bnd
jp
hlt
lcall
mov
in
loop
jmp
les
cmpsb
cmp
mov
int3
arpl
rclb
in
lea
add
pop
std
mov
push
in
cs
inc
dec
jne
andl
xor
mov
xor
testb
mov
fnstenv
jns
loop
cmpsb
cmp
lahf
or
xchg
cltd
shlb
mov
repz
xor
pop
movsl
fwait
lods
inc
cs
call
pop
stc
insl
add
jp
inc
pop
in
stos
inc
mov
mov
push
loop
mov
jns
test
fs
mov
fnsave
lret
mov
mov
mov
addr16
and
ss
fsubl
pop
jae
dec
and
rclb
or
cvtdq2ps
dec
mov
sbbb
dec
and
jne
lea
xchg
and
rcr
stc
adc
shrb
adcl
mov
cmp
push
in
das
ljmp
jo
mov
jmp
or
or
sub
jg
aas
cmpsl
jmp
fldenv
fwait
fwait
hlt
setl
mov
test
jne
xor
cmp
cmp
lret
pop
push
call
push
mov
mov
adc
cltd
fsubrs
sub
testb
fs
call
cmp
stos
inc
add
push
xor
push
jl
inc
decl
stos
and
fsts
lea
add
out
ja
jecxz
daa
fdivrp
into
mov
es
sahf
js
push
mov
or
iret
mov
add
xor
push
out
test
jb
cltd
insb
pop
cmc
push
mov
xor
adc
gs
push
movsl
rcl
shrl
lea
mov
aam
pop
mulb
sti
xchg
cld
fucomip
sub
dec
loopne
or
sbb
fxch
sbb
loop
imull
mov
adc
in
push
jmp
push
je
cmp
add
xchg
sub
lods
lcall
and
jg
insb
cltd
xor
jns
aas
ljmp
xchg
cmp
icebp
insl
mov
push
out
insl
add
mov
enter
lea
adc
or
jmp
mov
cmp
mov
outsl
lds
and
sbb
sbbl
push
mov
pop
lods
popa
stc
nop
addr16
inc
jbe
data16
cmp
xchg
outsb
dec
xor
shrb
insl
mov
mov
dec
jne
add
popa
lds
adc
adc
cltd
xor
ss
stos
xchg
out
or
shrl
xchg
sub
call
cltd
test
repnz
jo
sbb
aad
fdivrl
movsl
pop
or
jnp
outsl
mov
test
jo
fldz
int3
das
in
mov
lahf
call
into
pop
lock
inc
mov
rorb
sub
mov
inc
lods
jmp
sbb
fidivl
or
in
loop
fbld
rorb
xchg
test
lea
mov
cmp
inc
rorl
pop
cmp
scas
push
cmp
fisubs
rolb
xor
pop
insb
int3
dec
xor
xor
inc
push
popa
clc
test
arpl
adc
mov
out
sarb
loopne
jecxz
and
mov
or
mov
std
sbb
lret
xor
int
scas
mov
dec
in
mov
jmp
mov
add
mov
inc
sub
sahf
fs
mov
aas
mov
mov
dec
fdiv
cmp
pop
mov
jo
dec
xchg
in
inc
push
aam
test
daa
loope
test
xor
test
out
pop
push
iret
inc
data16
push
fucomp
and
push
xor
xchg
push
imulb
ljmp
rolb
or
fidivrl
pop
shr
outsl
mov
movsl
sbb
or
cmp
jne
add
lret
xor
cmp
sub
enter
sti
jmp
lods
jg
cmp
cltd
arpl
mov
xchg
sub
loopne
sbb
inc
mul
ja
mov
pop
stc
ret
jnp
add
jns
pop
jg
cli
ss
mov
fs
int3
arpl
test
xchg
or
movsb
adc
mov
pop
cmc
inc
rcll
push
xor
jecxz
sbb
inc
xchg
xchg
push
pop
into
dec
popa
nop
xchg
inc
inc
aas
call
push
cmp
mov
pop
sub
lock
adc
cmp
add
je
adc
lods
stos
mov
dec
out
shlb
push
pop
repnz
pop
mov
lea
mov
mov
jmp
lods
xlat
mov
out
xor
lret
lcall
loop
daa
mov
cwtl
cltd
test
ficompl
roll
inc
mov
popf
ds
jle
aas
jmp
xchg
sub
fisttps
pop
jp
mov
and
inc
sbbl
jl
add
xor
fsubrl
jg
loop
sbb
cmp
adc
push
mov
aad
cmc
ret
pop
daa
test
and
fs
jo
outsl
aam
xor
arpl
xlat
inc
push
sub
xor
lahf
pop
enter
inc
xchg
sub
sub
cltd
xor
popa
test
push
fistpll
lods
sbb
into
add
xor
out
ss
push
xchg
mov
xor
mov
adc
outsb
pop
fs
addr16
pop
scas
adc
pop
sahf
mov
gs
jo
and
loopne
cmpb
hlt
add
adc
or
cwtl
lds
jnp
int
lds
xchg
loop
push
sub
adc
jne
stos
addr16
repnz
mov
dec
sub
sub
icebp
je
lahf
stos
inc
rorl
mov
loop
xchg
ret
xor
push
mov
decl
adc
cmp
lret
fcompl
adc
aam
mov
repnz
and
jp
add
xchg
loope
sbb
inc
xor
leave
xchg
sub
xor
loope
roll
or
shll
sub
leave
lahf
push
adc
inc
add
inc
dec
dec
adc
xchg
and
stc
sti
bound
adc
cmovbe
jmp
xchg
out
ss
cmp
insb
or
inc
xchg
es
add
sbb
inc
mov
scas
daa
push
repz
cmp
adc
mov
xchg
mov
movsb
imul
cmp
cmp
mov
cwtl
mov
xchg
xchg
jne
and
jno
aam
push
lret
sub
iret
data16
sbb
ja
sub
in
dec
or
push
sbb
mov
cmp
ret
xor
xor
pop
stos
xchg
xlat
imul
bound
addr16
xlat
cwtl
mov
lods
inc
xchg
mov
mov
xchg
test
popf
sbb
xchg
jnp
push
imul
imul
ljmp
adc
test
lret
sub
insb
cwtl
das
loop
mov
shll
jl
pop
enter
fdivs
jns
ja
jle
out
ljmp
inc
rcrb
xchg
iret
jnp
je
lcall
aam
ljmp
inc
fucomip
xchg
jo
fwait
fwait
cmp
mov
movsl
adc
push
xchg
dec
mov
fstps
mov
mov
xchg
movsl
pusha
push
pusha
into
inc
add
xor
test
out
xchg
xchg
jge
repz
mov
mov
fwait
pushf
pop
xor
lcall
movsl
loopne
jmp
cmp
divl
repnz
and
fidivrl
xchg
mov
data16
scas
rorl
sub
push
xchg
addl
xchg
xchg
or
arpl
das
push
iret
dec
jae
negb
pop
sti
and
adc
fs
stc
jae
inc
push
mov
pop
insl
mov
lahf
xor
sub
jae
popa
clc
jnp
fisttps
fnstcw
lret
or
sub
pop
dec
stos
xchg
mov
aaa
rcrb
push
hlt
mov
ljmp
in
clc
or
bound
mov
loop
sub
xchg
hlt
fcomps
mov
test
lret
and
adc
aas
andb
int3
jae
pop
sahf
push
xchg
push
sbbl
mov
test
mov
cmp
scas
sbb
mov
mov
push
push
cli
mov
xchg
je
pushf
adc
in
ljmp
popf
lea
movsl
sbb
repz
pop
and
push
jne
out
push
and
aam
das
inc
frstor
pop
mov
stos
adc
inc
pop
repz
pop
out
lcall
in
pop
hlt
jns
inc
js
out
cli
shll
hlt
fbstp
popf
call
mov
add
rorb
and
outsb
pop
xor
movsb
cmpsl
lfs
fmull
hlt
hlt
and
cld
inc
xchg
mov
or
sbb
inc
sub
sahf
inc
in
fimull
aaa
data16
add
push
cmp
pop
cmp
mov
and
xchg
je
lcall
inc
popa
test
jle
push
adc
outsl
mov
push
popf
inc
jno
leave
pusha
add
xchg
lret
cmp
pop
ds
dec
cs
or
xchg
sub
les
adc
add
arpl
outsb
movsl
inc
sub
jno
mov
call
xchg
int
mov
mov
cmpl
mov
push
and
lock
add
add
out
dec
sbb
jo
mov
mull
addb
fs
lret
mov
out
sub
cs
mov
aaa
lods
mov
dec
mov
jg
xchg
pop
call
subb
push
popf
js
cmp
cmpsb
sub
push
inc
mov
xchg
cs
fcmovnu
push
jne
and
ret
cli
orl
mov
fsubl
and
stos
cmpsl
loope
jecxz
ss
loop
in
push
or
arpl
mov
mov
adc
ds
cmp
inc
jmp
sub
movsb
aas
inc
int
jmp
shlb
pop
aas
pop
lock
ret
push
ljmp
out
fs
out
ljmp
and
cmp
test
jb
fcoml
repz
xchg
sub
jmp
sub
sbb
dec
push
or
rorl
mov
das
stc
xchg
addl
mov
popf
xchg
xchg
or
pop
pop
call
inc
shrl
movsl
or
call
fiaddl
lcall
div
scas
pop
addr16
mov
jae
test
les
loop
call
lret
mov
push
cltd
sbb
add
andb
cmp
and
int3
mov
dec
scas
fcoml
sub
mov
lea
mov
fstpt
imul
les
stos
mov
ret
cmp
push
or
mov
pop
jo
jl
jo
mov
mov
int
and
sti
fdivl
fbstp
aaa
fldl
push
pop
out
lret
jmp
in
fcomps
jge
xor
leave
shrb
mov
push
mov
ljmp
les
mov
adc
test
pop
out
mov
mov
mov
in
pop
test
sbb
or
cld
push
jo
out
dec
lcall
leave
and
push
stc
inc
and
fisubrs
push
jae
xor
push
fwait
xor
xor
pushf
pop
lock
mov
int3
mov
mov
mov
sahf
fsubr
in
and
popa
leave
loop
jmp
clc
or
mov
xor
arpl
cmc
shrl
stos
inc
fisttps
xchg
sub
push
mov
pop
inc
pop
nop
and
rolb
div
mov
push
ss
xchg
popa
jns
aas
adc
inc
pusha
and
adc
bound
gs
movsl
inc
fst
sbb
repz
leave
mov
out
pushf
rolb
cmp
jnp
out
stc
insb
addr16
lods
sbb
jle
js
xchg
xor
mov
pop
cs
adc
pop
incl
leave
inc
push
in
jg
add
mov
push
adc
inc
fistpll
call
fisubrs
dec
loopne
or
dec
fistpll
cld
xor
sub
aaa
or
adc
sub
cwtl
fidivs
out
lcall
iret
cmp
std
mov
dec
xchg
jle
inc
inc
mov
sbb
out
push
add
jne
push
iret
negl
inc
mov
lods
or
adc
xchg
add
out
fld
andb
ds
imul
jle
pop
add
inc
lea
or
pop
dec
adc
inc
fdecstp
xor
dec
js
and
cld
xor
and
xchg
cli
jne
mov
out
inc
sahf
in
mov
mov
mov
insl
xchg
jmp
dec
mov
jg
ds
test
inc
jg
dec
sub
adc
insb
pop
insl
fstps
and
mov
test
pusha
imul
nop
jno
inc
pop
mov
add
movsb
rclb
shll
mov
imul
das
or
test
cwtl
std
push
jno
sub
sbb
jp
add
push
cmp
sbb
js
or
dec
sub
fbstp
adc
mov
mov
cmp
push
pop
xor
mov
add
jp
mov
push
cltd
inc
stos
insl
and
mov
lods
imul
pop
cmc
dec
repz
int
into
and
inc
or
test
jns
cmp
roll
pop
jmp
aad
repnz
jns
jecxz
scas
inc
mov
sbb
cmp
pop
cmp
xchg
std
inc
fsubrs
sti
out
bnd
pop
stos
sbb
ja
jp
dec
cwtl
push
mov
jnp
in
and
xchg
icebp
cmp
jge
lods
repz
pop
xor
insb
mov
sahf
in
pusha
stos
mov
sarb
sub
inc
adc
mov
xchg
dec
cmp
fnstenv
loope
dec
push
jp
push
ljmp
sbb
test
pop
fidivl
xlat
dec
push
push
and
aad
pop
mov
cmp
in
jg
mov
xchg
in
and
into
stos
ror
xchg
pop
in
mov
mov
inc
pop
jecxz
xor
mov
into
stos
or
xor
call
push
or
mov
mov
repnz
iret
inc
xor
mov
pop
int
xchg
cli
jno
xchg
xchg
daa
pop
cld
subl
popa
cmp
cltd
dec
pop
aas
jle
xchg
loopne
add
mov
mov
add
add
imul
cmp
movsl
pop
inc
insl
cli
pop
fwait
hlt
sti
mov
xchg
or
xor
sysexit
cwtl
xchg
jp
daa
aaa
fistl
scas
inc
jl
movsl
mov
jmp
rcr
jp
inc
test
cmp
testl
testb
mov
cwtl
push
sub
and
dec
aaa
and
fidivl
fisttpll
jns
inc
sub
pop
mov
pop
repz
push
in
inc
mov
and
inc
sti
sbb
stos
inc
pop
lods
aam
insb
stos
jo
aaa
shl
lea
xlat
xchg
sub
ret
cmc
ja
pop
test
sbb
cmp
repz
pusha
and
xchg
xchg
and
xchg
add
add
push
pop
lahf
sbbb
jge
sub
sarb
push
mov
xchg
push
test
lret
int3
and
adc
inc
orb
pop
push
test
in
jge
das
movsl
sbb
divb
adc
icebp
push
mov
push
jmp
cmp
jno
loopne
or
push
push
sub
stos
cltd
repz
xor
jecxz
shll
jbe
cltd
in
movsl
cmpsb
lock
sar
or
push
xor
fwait
jecxz
mov
push
pop
adc
mov
jnp
aam
mov
pop
inc
sub
mov
fcomps
dec
in
add
aam
add
mov
xor
fidivl
push
mov
popf
out
xchg
imul
xchg
fildl
stc
mov
cmp
insb
push
out
popf
mov
ret
and
popa
aas
aam
jno
enter
add
mov
loop
or
jnp
in
cltd
cmp
inc
xor
outsl
bound
aam
push
mov
lahf
push
rcl
bnd
mov
and
fbld
stc
jle
jno
cld
push
int3
out
inc
sbb
mov
xor
testb
and
mov
aam
mov
sbb
int3
dec
sub
sti
cwtl
cmp
in
xor
loop
xor
mov
inc
into
test
add
jle
jg
ds
push
test
cmp
out
dec
icebp
mov
repnz
stos
leave
cmpsb
mov
and
sbbb
jbe
sbb
sub
ljmp
sub
cmp
sbb
adc
jp
mov
cmp
jno
push
movsb
mov
sbb
imul
jp
pop
rcrb
fisttps
push
out
adc
test
cmpsl
sbb
rol
mov
cmp
sti
adc
aam
loope
or
jle
push
in
dec
xchg
mov
lret
adc
cltd
sbbl
push
scas
mov
sub
lahf
cwtl
mov
inc
lcall
movsb
jl
loopne
inc
lods
ret
and
stos
fstpl
mov
mov
jns
and
jmp
test
push
std
sahf
sbb
sbb
and
jno
jmp
iret
stos
data16
pop
les
daa
sub
push
mov
push
dec
cmp
out
xchg
mov
cmp
dec
out
push
cmpl
movl
push
cld
mov
cmp
cmp
sub
test
pop
jae
mov
cmp
dec
jbe
add
and
sub
ljmp
or
mov
push
loopne
jmp
cmp
lret
cwtl
cld
mov
gs
xchg
dec
sbb
push
pop
fnstsw
pop
mov
pop
cmpsl
test
arpl
cwtl
aaa
into
leave
add
push
cs
or
daa
xor
add
jle
inc
ja
pop
inc
arpl
scas
stos
sub
std
xchg
fwait
addr16
jp
shr
dec
push
inc
cmp
add
sbb
push
xchg
cld
fdivs
push
pop
daa
in
mov
xor
adc
loope
xor
inc
imul
adc
outsb
push
test
cmp
int
add
mov
adc
in
push
inc
nop
sub
lret
mov
aam
es
lods
jae
push
and
ss
mov
bound
or
data16
pop
pushl
pop
popa
or
mulb
add
in
dec
out
pop
jge
cmp
xchg
or
pop
push
push
popa
imul
inc
dec
in
pop
cmc
cli
imul
adc
add
pop
ss
xchg
stos
out
nop
or
xchg
sahf
xchg
sub
sub
pop
iret
push
push
test
xchg
imul
add
adc
or
hlt
mov
aaa
scas
rcr
inc
mov
stc
in
and
adc
xor
or
sbb
dec
mov
sbb
popf
lods
jo
inc
fsubr
xchg
mov
adc
movsl
cmp
mov
sarb
jge
and
idivl
pop
mov
push
bound
daa
mov
dec
ljmp
shl
inc
mov
test
xchg
xchg
mov
xor
bound
xchg
inc
js
shll
sbb
in
xorl
push
lods
pop
jbe
mov
bound
ret
cmp
addb
add
into
mov
mov
sti
xchg
lock
stc
insb
jecxz
cmp
adc
ss
cmpb
xchg
sub
in
repz
mov
imul
dec
es
ja
mov
cmp
jg
xchg
sub
xor
dec
and
gs
div
dec
and
jmp
jns
mov
mov
ljmp
mov
pop
test
dec
fisubrl
inc
out
cmp
xorb
cmp
es
loope
das
push
lret
stos
add
lret
lret
and
push
lea
pextrw
scas
fcomps
jp
repnz
rclb
xchg
orb
push
jg
jo
or
mov
mov
sarl
push
rcrb
les
dec
inc
fstps
pop
pop
jns
push
bound
jmp
pop
scas
sbb
dec
mov
iret
in
pop
mov
lods
loopne
adc
movsb
fcoms
push
lods
jl
dec
cmp
push
out
gs
inc
push
or
jl
out
test
dec
cwtl
das
ds
les
pop
mov
xchg
pushf
lcall
out
mov
mov
inc
insl
je
adc
stos
das
fsubr
adc
das
cmp
insb
push
imul
lea
mov
fildll
out
sbbb
mov
and
or
xor
call
dec
pop
lock
nop
daa
xor
push
int
xor
dec
out
cmpsb
lds
stos
pop
mov
jp
cmpsb
stos
decb
sub
mov
mov
or
cmp
push
dec
aas
add
mov
loope
cmp
add
mov
in
roll
movsl
nop
fisubrs
cmp
int3
mov
mov
mov
adc
notl
sub
xor
ret
jbe
outsl
repz
mov
push
cltd
fs
pop
insb
stos
xor
pop
out
lret
push
dec
pop
cmpsb
aam
out
in
jp
or
push
scas
ss
sbb
jb
into
jb
mul
test
inc
mov
xor
pop
mov
push
mov
mov
into
mov
or
filds
and
int3
sbb
ljmp
stos
outsl
add
lea
ret
test
cmc
cmp
inc
xchg
push
in
test
xor
cmp
ds
jbe
fldl
nop
push
add
ret
aam
or
in
mov
push
and
out
les
divl
js
in
push
ret
jb
shr
mov
cmp
out
sbb
mov
inc
cmpsl
cmp
push
push
ds
add
xchg
and
or
movsb
cmp
push
ret
fbstp
clc
mov
mov
out
adc
push
cmp
icebp
pop
dec
xchg
sbb
jg
dec
stc
loop
mul
daa
or
mov
xchg
rep
mov
out
pop
cwtl
jb
test
das
xchg
fmull
cmpsl
adc
aad
je
shlb
arpl
icebp
xchg
lods
and
mov
jns
add
or
mov
aam
pusha
int
sbb
js
loop
and
mov
dec
scas
cmp
pop
inc
mov
stos
mov
fisttpll
in
xchg
test
in
js
lcall
cli
cmpsl
into
popa
xchg
lds
cli
pop
or
test
xchg
imul
es
sti
or
inc
jmpw
dec
mov
inc
fwait
push
mov
loopne
sub
in
jo
mov
ret
hlt
push
xor
mov
inc
dec
movsl
cmp
jb
shll
cmp
cmpsb
dec
push
adc
add
xor
sbb
lea
cld
sub
jmp
pop
add
in
sub
jns
fnstenv
jbe
mov
jae
pusha
or
xlat
pop
mov
inc
in
xor
jg
cmp
sti
inc
cli
xchg
jnp
mov
adc
sbb
std
addr16
fisttpl
jnp
push
lods
sub
jg
jmp
enter
scas
jmp
cmp
adc
into
push
cld
push
push
les
sub
out
bound
outsb
dec
sbb
jle
sbb
test
ss
ss
push
mov
inc
cmp
add
cmp
movsb
jno
je
add
andb
fmull
pop
push
mov
shl
test
inc
sbb
ficompl
fs
jno
pop
pop
adc
inc
leave
pop
pop
out
sbb
jge
scas
or
ds
and
insl
adc
lcall
and
mov
sbb
stc
xchg
stos
sub
icebp
movsl
ja
aam
in
pop
ds
sub
dec
cmpsl
cmp
pop
cmp
fildll
test
fcoms
sbb
cmp
ja
jmp
inc
add
insl
or
bound
jp
lock
push
inc
or
add
shlb
out
sbb
mulb
inc
pop
mov
mov
cli
into
xor
in
scas
adc
daa
jnp
mov
jne
adc
push
adc
push
enter
mov
push
divl
sub
add
shrb
aaa
test
mov
ret
les
std
dec
mov
and
out
out
cmpsl
sub
cmpsl
repz
arpl
imul
jno
mov
cs
xchg
inc
andb
test
xor
notl
in
loop
dec
pushl
pop
scas
outsb
lcall
movsb
jne
cmp
lea
sub
pop
inc
jo
add
xlat
call
jg
mov
jns
pop
outsl
sbb
pushf
les
lahf
xor
or
test
push
dec
stos
fimull
fidivs
addr16
pop
inc
sarb
test
nop
daa
inc
cmpsb
cli
xchg
add
negb
insb
or
cltd
xor
icebp
mov
ja
shll
push
fisubl
daa
ljmp
jne
pop
stos
mov
jne
popa
adc
pop
and
sbb
jle
imul
jo
cwtl
push
xchg
and
negb
push
out
lds
fsubrp
dec
sar
lret
xor
shll
push
imul
jge
fldt
add
je
imul
or
or
xchg
jbe
add
movsb
jbe
add
fldl
sub
xchg
cwtl
jne
sub
mov
outsl
outsl
or
mov
in
movsb
jecxz
es
shlb
scas
mull
inc
outsb
jl
jmp
shlb
jg
in
push
and
cmpb
push
pushf
dec
inc
mov
sahf
mov
mov
push
mov
sub
jb
push
mov
add
std
psubq
imul
xchg
in
aam
mov
xrelease
nop
mov
cmpsl
push
mov
mov
lods
outsb
ja
mov
dec
xchg
mov
test
iret
sbb
fnstenv
cmp
mov
mov
fsubr
sub
xor
mov
mulb
inc
loopne
call
imul
xchg
push
and
lock
add
cmp
pop
call
push
fldenv
das
push
push
aaa
push
movsb
cmp
ret
test
mov
mov
jg
aaa
loopne
jecxz
inc
lret
fisubl
xchg
pop
dec
and
xchg
js
mov
mull
mov
mov
jle
decl
mov
dec
fdivl
mov
mov
fstl
xor
aaa
push
pop
push
xor
lods
popf
cwtl
das
into
mov
loop
mov
imul
or
xor
mov
insb
push
cmp
mov
aas
lret
aam
outsb
outsb
and
notl
inc
mov
mov
sub
dec
sarb
or
mov
sub
dec
in
jne
add
push
fdivl
or
adc
push
add
fwait
scas
jns
push
bound
cmpl
mov
xchg
cld
xor
aaa
sqrtps
push
in
cmp
es
jns
aam
in
insl
mov
shll
roll
or
pushl
shl
cmpsb
movb
dec
pusha
fimull
cmpsb
jnp
cmp
sub
sarl
mov
inc
mov
add
stos
jmp
sbbl
push
test
cmp
jge
inc
cld
mov
jne
lea
xchg
int3
xchg
adcb
pop
cli
mov
mov
jbe
xor
in
pop
fdivs
xor
bound
out
xchg
add
pop
icebp
xor
push
setl
lahf
push
clc
and
mov
scas
or
stos
ss
or
mov
hlt
std
push
pop
push
in
jae
leave
into
jno
clc
jae
sbb
cli
ljmp
out
mov
mov
pusha
jno
cmp
outsb
add
pusha
dec
mov
fcmove
or
push
stos
and
std
or
push
mov
out
fisubrs
std
arpl
clc
xchg
ficomps
adc
std
inc
shrb
leave
test
sub
jo
add
mov
clc
jg
pushf
xchg
loopne
popa
cmpb
and
mov
xor
out
hlt
mov
push
inc
fdivrs
aaa
dec
mov
loopne
or
js
mov
pop
ret
scas
fnstsw
mov
and
push
or
fmull
mov
pusha
mov
jmp
jecxz
xor
hlt
cmp
pushf
add
shlb
inc
mov
icebp
jmp
jl
invd
pop
cld
jl
jmp
cltd
adc
or
jno
or
leave
cmp
sbbl
fwait
cs
addr16
cwtl
mov
js
xchg
lahf
mov
arpl
cwtl
xchg
imul
shlb
add
shld
pusha
sub
pop
out
shrl
push
in
les
push
mov
sahf
lods
xor
dec
cmpsb
je
xchg
out
outsl
mov
sub
push
out
xor
std
filds
mov
pop
mov
cmp
jg
scas
push
callw
je
popa
xor
shlb
addr16
leave
xor
fldenv
or
lds
adc
ret
movsl
push
lahf
mov
push
or
add
pop
fistpll
frstor
idiv
pop
repnz
or
outsb
mov
and
dec
imul
xor
fbstp
ss
adc
xchg
push
cltd
das
imul
mov
mov
mov
iret
les
xor
push
in
ficoml
sub
push
insb
dec
jb
add
xor
int3
lods
lock
fs
test
jl
sbb
scas
les
repz
das
sbbb
cmc
rcl
mov
outsb
scas
xor
adcb
pop
sahf
in
push
in
mov
ret
pop
repz
mov
adc
hlt
nop
cmp
inc
sahf
data16
fnstenv
jne
mov
jo
inc
fsubrl
adc
mov
test
aad
ss
shlb
fabs
mov
xchg
sub
dec
push
cwtl
dec
mov
subb
pusha
push
cmp
jb
and
in
adcb
frstor
cld
gs
lcall
in
sbb
sbbb
fdivrl
repz
cwtl
pop
test
cltd
inc
dec
out
das
subl
pop
inc
push
testl
sub
shll
sbb
xchg
jle
pop
icebp
push
mov
sub
cmp
fwait
xorl
mov
fsubs
stos
loop
dec
cli
push
jp
ja
ja
movq
dec
xchg
sub
lcall
out
addl
cmp
scas
push
sbb
fwait
arpl
adc
add
mov
adc
and
or
ss
mov
lea
cs
andb
stos
mov
imul
push
sub
loopne
cmp
xor
sub
dec
push
pop
inc
xor
leave
lahf
lds
loop
aam
lcall
or
ficoml
lds
aaa
pop
ja
and
push
or
les
rcl
sub
jg
mov
add
cmp
icebp
rorl
rcrl
ret
loope
jl
insb
out
stos
dec
mov
jns
sbb
cmp
ss
nop
es
hlt
pop
in
pop
pushf
pushf
enter
mov
xchg
dec
mov
shl
idivl
icebp
and
dec
cmpsl
jae
pop
repz
sbbb
in
or
sahf
iret
xchg
mov
subl
stc
mov
sbb
loopne
dec
and
notb
mov
mov
imul
sbbl
rcll
daa
test
lcall
adc
es
sub
rol
das
imul
fldl
xor
leave
popf
xor
and
mov
push
push
mov
sti
call
mov
and
or
shrl
decl
mov
xchg
jnp
sahf
mov
sbb
scas
shll
inc
inc
pop
sbb
sahf
bound
jle
ret
cmp
shlb
lret
pop
jbe
adc
je
cmp
sahf
fnop
cmp
mov
and
cmp
xchg
jp
pop
adc
flds
adc
or
inc
sub
inc
pop
cli
pusha
bound
sub
or
jb
mov
stc
scas
fs
stos
adc
adc
sub
mov
lret
xchg
dec
pop
xorl
cs
add
js
lock
enter
leave
xchg
je
mov
jmp
mov
xchg
sub
mov
test
jnp
adcl
test
xchg
cmpsl
lret
nop
inc
or
sahf
mov
pop
fcomps
fidivl
xor
clc
or
pusha
lods
push
add
mov
inc
scas
jb
aad
jne
imul
in
rorb
repz
mov
hlt
jmp
sub
movlhps
ret
dec
jo
js
jbe
dec
mov
push
mov
inc
test
iret
cmpsb
mov
mov
sbb
aad
jge
ja
rcrl
push
out
mov
cmp
addb
pop
loopne
aaa
add
mov
push
push
cmp
and
sbb
out
mov
repnz
xlat
sub
rcll
xchg
test
movsl
cltd
xor
mov
icebp
and
cmp
xlat
cmp
loope
sbb
and
dec
pop
ja
imul
outsl
inc
xchg
jbe
addr16
mov
int3
mov
jp
cmpps
ja
mov
test
test
mov
cmp
add
or
push
aaa
jmp
jb
insl
pop
adc
stc
sub
dec
nop
mov
shll
pop
js
pop
cs
test
add
fst
push
add
cltd
test
mov
out
inc
jg
jo
mov
test
adc
or
in
mov
inc
int3
mov
lods
fstpl
pop
and
imul
int
pushf
sahf
clc
mov
dec
popa
dec
push
and
scas
test
or
mov
push
and
int3
fcmovnbe
icebp
mov
das
psubq
out
sbb
stc
aaa
incb
push
shr
pop
jns
jbe
inc
in
sbb
int
loope
mov
push
jmp
nop
adc
cltd
fdiv
repz
adc
es
movl
mov
pop
pop
pop
and
or
mov
add
inc
scas
sbb
test
pop
mov
js
ret
insl
sub
adc
in
loop
ds
fldcw
mov
pop
frstor
in
xor
jle
sub
mov
dec
scas
fisttpll
jge
in
out
adc
jg
push
mov
test
inc
push
ror
and
adc
jg
lock
ret
addl
out
xchg
fdivrs
pop
enter
mov
sahf
push
fcmove
inc
shlb
in
and
add
es
fs
stos
test
fldt
test
mov
outsb
enter
inc
sbb
movsb
imul
pop
cmc
xlat
ds
or
jle
ret
scas
lret
cmpb
and
inc
hlt
lret
cmpsl
lods
fcoms
testb
push
cli
mov
faddp
lret
adc
pop
js
pop
mov
adc
xchg
scas
mov
cmpsl
in
hlt
addr16
xchg
xor
ret
out
dec
xor
jb
and
loope
xor
mov
and
ds
lods
mov
add
push
adcb
gs
jbe
xchg
xlat
hlt
sti
mov
or
push
sti
imul
xchg
scas
jl
xchg
sahf
and
repnz
xor
cmc
aas
int
add
fimuls
mov
pop
loopne
dec
sbbl
test
fwait
adc
aaa
inc
gs
dec
sub
jnp
enter
dec
mov
std
jge
scas
push
fsubrs
cli
xor
ss
jle
ja
leave
add
cwtl
pushf
xor
or
push
push
inc
outsb
xchg
hlt
mov
sbb
out
mov
ret
jle
sbb
scas
sbb
in
sbb
cmpsl
jmp
or
mov
das
cmp
dec
inc
pop
cli
cmp
lods
lock
mov
int3
mov
lret
rcll
inc
shll
jb
inc
push
ss
insl
stc
nop
mov
ret
xorb
mov
insb
movsb
ja
xor
mov
pushf
fidivl
adc
sbb
sbb
mov
mov
mov
mov
dec
imull
push
and
data16
cmpsl
rorl
cmpl
or
mov
imul
rcrb
test
icebp
push
xor
dec
out
push
pop
adc
test
adc
adc
outsl
pop
fsubrs
or
sbb
xor
mov
call
int3
jno
and
xchg
pusha
in
jbe
lahf
das
mov
imul
out
out
cmc
or
aad
std
mov
mov
orl
mov
and
cmp
jecxz
and
clc
lret
jp
mov
popa
pop
daa
sub
fsubrl
out
dec
test
adcl
mov
mov
adc
int
nop
mov
inc
push
aad
dec
mov
pop
mov
inc
gs
dec
xchg
pop
jae
sub
pop
push
pop
cmp
fisubs
addr16
add
inc
mov
lahf
lods
dec
lcall
dec
sub
test
lret
adc
data16
gs
xor
jp
test
cmp
mov
or
out
sub
jmp
push
roll
and
in
and
jbe
inc
xor
je
sbb
test
pushf
push
sub
scas
pop
hlt
pop
xor
int
fldln2
in
mov
hlt
push
jne
mov
add
dec
sub
inc
outsb
adc
xchg
push
insb
dec
pop
outsb
aas
sbb
jge
or
pop
stos
ret
sbb
lret
cmpb
push
or
xchg
daa
xor
pop
pop
push
cwtl
int
sbbb
jb
arpl
lds
adc
montmul
cmpsb
inc
jns
ja
bound
adc
js
mov
out
mov
insl
add
sbbb
out
add
out
in
pop
mov
pushf
andl
jge
mov
pop
or
sbb
xlat
mov
fdivr
cmpsb
push
jmpw
es
add
push
lock
sbb
mov
mov
sbb
sti
imul
jne
xchg
cmpsl
orb
aaa
aam
cltd
pop
jmp
inc
push
mov
inc
inc
rcrl
shl
adc
rcll
test
movsl
or
xlat
xchg
mov
in
jecxz
cwtl
mov
pop
aad
pop
add
out
scas
or
jns
dec
push
xor
icebp
insb
fstl
ja
scas
jecxz
mov
push
mov
mov
movsl
mov
mov
inc
arpl
inc
mov
cs
out
xor
aam
lahf
adc
imul
gs
and
out
mov
mov
push
iret
mov
or
sub
push
or
inc
mov
bound
inc
cmp
pop
sub
cld
movsb
mov
daa
xchg
push
lods
push
cmpsb
out
xor
sti
push
jae
repz
and
jnp
dec
adc
sub
mov
aam
jp
mov
xchg
mov
xchg
fdivs
cmp
cmpsb
adcb
bound
or
stos
mov
outsb
int3
mov
add
sti
mov
mov
xlat
clc
push
lods
xchg
jbe
and
push
mov
jg
add
sbb
outsb
jl
fisubrs
pop
cltd
mov
shll
insb
loopne
sahf
in
shl
xchg
dec
pop
mov
pop
adc
imul
test
stc
and
cwtl
push
fsubrs
push
fidivs
dec
mov
mov
ret
cmp
pusha
add
sbb
push
mov
xor
mov
fiaddl
jle
and
stos
push
pop
jb
andb
sub
popa
jmp
dec
icebp
or
jp
push
push
mov
movsl
mov
ret
in
fwait
xchg
pop
loope
sub
mov
push
in
fwait
nop
mov
out
sub
adcb
in
mov
repz
ficomps
hlt
xchg
scas
pop
lea
push
jo
outsl
or
roll
mov
fadd
sub
jnp
push
mov
dec
pop
jns
imul
sub
xchg
je
add
adc
movsl
nop
push
mov
mov
test
loope
jnp
enter
pop
stos
in
loop
arpl
add
xchg
mov
aas
push
iret
pop
adc
cli
mov
push
cmc
outsb
imulb
cltd
xchg
jge
push
fsubrl
adc
loopne
or
pop
cltd
sub
lret
pop
adc
aad
add
fstp
mov
test
push
xchg
mov
divl
jnp
push
mov
test
das
stos
xchg
mov
jae
sub
std
js
sub
pop
popf
stos
sub
or
inc
jae
xor
xchg
stc
push
ret
sbb
xchg
inc
aam
shlb
jecxz
cltd
push
mov
mov
lret
sbb
add
fiadds
push
and
or
adcl
dec
js
je
ss
addr16
nop
cli
xor
push
jb
push
push
in
and
cmp
mov
call
test
mov
shl
inc
movsl
ljmp
out
test
mov
in
or
data16
nop
js
imul
test
mov
sbb
sub
mov
fldenv
mov
push
mov
mov
sti
es
mov
into
cmpsb
sub
mov
imul
xchg
loopne
call
cmp
sti
outsb
fidivrs
out
or
or
push
mov
lahf
jae
adc
int
sbb
and
ret
shlb
and
lods
add
inc
adc
or
repz
and
arpl
or
pop
cmp
sarb
es
mov
mov
divl
stc
push
jns
push
sbb
in
test
xor
subb
fsubp
cmpsb
dec
addb
mov
jmp
test
push
inc
enter
nop
mov
lds
adc
sbb
nop
cmpsl
lret
loope
pop
test
inc
sahf
xchg
dec
push
inc
jbe
sbb
into
sub
ss
pop
xor
lods
jmp
lret
mull
cli
xlat
pop
adc
neg
sti
mov
mov
mov
xor
push
xor
mov
push
or
lock
sarl
aam
push
sbb
insl
out
lahf
push
rorl
jnp
outsb
inc
dec
mov
add
push
movsl
fmuls
mov
jmp
mov
rclb
adc
enter
jecxz
test
int
shll
push
int
xlat
divb
es
and
lods
loopne
sbb
cmpsl
lcall
mov
sbb
mov
push
push
mov
sar
mov
loopne
es
prefetch
or
sbb
negb
repz
test
aad
test
or
cmpsb
in
xor
lahf
bound
add
fwait
xor
test
cmp
mov
popa
inc
sbb
add
pushf
pop
test
push
popa
push
rol
repz
add
roll
rcr
jmp
push
movsl
xor
mov
adc
xchg
xor
mov
jge
or
ficompl
insl
popa
inc
sub
jno
inc
repnz
xlat
scas
nopl
inc
pusha
and
adc
mov
mov
mov
frstor
push
xchg
outsl
sbb
jg
mov
inc
stc
popf
jns
hlt
js
lahf
jno
adc
pop
mov
or
push
repnz
rcrl
or
push
clc
and
sub
call
fsubr
push
pusha
xor
int
mov
push
jmp
xchg
dec
shr
subb
inc
pop
xchg
mov
je
pop
fsubrs
and
add
or
and
in
jp
sub
mov
movsl
jne
mov
sbb
pop
jo
lea
repnz
scas
jle
js
inc
gs
fwait
rcl
std
xlat
mov
pop
iret
cmpsl
push
sbb
add
sti
xor
mov
xlat
lcall
out
jle
jb
push
pop
jmp
lret
lret
ds
rclb
jb
dec
push
stos
out
sbb
lea
adc
sub
pop
cmp
jo
fldl2t
mov
idivl
das
sub
call
inc
sbb
ret
pop
movsl
loop
push
shrb
in
sbb
ds
out
cmpsl
pop
inc
ret
jle
mov
jmp
fs
sar
or
outsb
outsl
pushf
jb
test
push
dec
leave
xchg
jno
inc
xchg
mov
cmp
jmp
xorb
xchg
and
mov
mov
pop
xor
addr16
mov
sub
dec
in
pop
push
push
cwtl
mov
inc
fldl
fldenv
xorl
sbb
or
cwtl
mov
sub
push
insb
lret
cs
adc
push
pushf
addr16
or
cmp
sub
inc
int3
pop
xchg
push
mov
mov
fcompl
lret
icebp
sub
aad
push
sahf
sub
xlat
sub
imul
adc
jp
adc
insl
inc
pop
cmc
dec
je
push
mov
and
inc
test
cltd
leave
jge
test
mov
xor
enter
loop
sub
test
repz
das
pop
sbb
das
push
jo
or
mov
ja
test
jg
lods
xor
cmp
mov
adc
mov
fmuls
jb
out
aam
xchg
fstpt
sbb
int
adc
mov
mov
mov
mov
pop
mov
push
nop
mov
hlt
dec
fs
adc
jae
std
lods
sbb
faddl
pop
clc
in
jl
jmp
or
jp
aas
push
lea
fdivp
inc
sbb
in
cmc
test
cmpsl
test
bound
mov
and
xchg
fisttpl
pop
pop
insb
push
loope
mov
push
frstor
and
jbe
add
pop
dec
mov
hlt
mov
ret
mov
rorl
idivb
test
push
inc
fst
ss
es
or
jmp
cltd
sbb
fnstcw
adc
mov
add
xchg
xor
sub
lcall
gs
mov
push
and
push
fdivs
fisttps
xorb
jbe
push
hlt
mov
push
dec
inc
cli
lds
daa
es
mov
push
test
aaa
faddp
call
or
lcall
in
clc
nop
dec
mov
sbb
gs
rorb
mov
dec
mov
hlt
lds
sub
add
cli
xchg
mov
mov
adc
inc
pop
dec
dec
out
and
lret
addr16
sub
xchg
jns
popf
shll
xlat
in
hlt
arpl
xchg
aad
push
ret
test
es
cmp
jg
mov
cmpsb
push
out
out
out
xchg
mov
scas
test
and
pop
sahf
aas
xchg
mov
adc
mov
js
xchg
adc
jmp
xor
sti
sub
movsb
dec
sahf
xchg
xchg
mov
jg
gs
aad
dec
push
stc
jae
addr16
mov
sub
inc
push
iret
je
mov
mov
mov
ret
mov
sub
into
test
sbbb
nop
cmova
stos
push
lret
paddsw
mov
xchg
cs
or
mov
sub
insl
sbb
shrl
push
call
mov
or
scas
dec
hlt
mov
imulb
aad
aas
sub
ljmp
mov
mov
adc
push
mov
xsha1
cmpsb
dec
push
stos
push
sub
xchg
cs
dec
xchg
and
mov
in
adc
test
loop
or
daa
enter
stc
jo
sub
sbb
pop
les
mov
std
popf
mov
mov
or
xor
fimull
jl
or
incb
outsl
popf
and
adc
mov
leave
pusha
push
mov
xor
insl
lock
enter
add
leave
leave
pop
cmpsl
cs
out
stc
jle
push
sbbl
xchg
inc
inc
pop
xor
ja
sbb
orb
in
mov
inc
fwait
fs
inc
lret
or
add
mov
cmpsl
in
fsubrl
fstps
push
stos
mov
fcoml
adcb
enter
popf
pcmpeqw
fistps
in
dec
add
gs
dec
leave
xchg
cmp
mov
addr16
shll
jnp
repnz
mov
lds
loopne
shrb
fsubrp
xchg
lods
inc
addr16
movsl
int
aas
inc
mov
aaa
dec
ss
mov
sbb
mov
subb
test
rorb
inc
in
pusha
imull
inc
arpl
je
pop
and
inc
lock
sub
stc
int3
jno
xchg
fs
or
and
sbb
mov
scas
dec
mov
and
insb
sub
outsb
jno
mov
movsl
dec
jecxz
rcrb
xor
rol
call
cmp
das
add
out
ds
mov
jge
into
dec
sub
and
mov
mov
pop
lahf
xchg
sub
xor
jge
xor
xchg
push
cld
cmp
sarb
xor
jne
fisubs
jae
loopne
sub
and
loop
xchg
add
movl
mov
scas
push
pop
mov
cwtl
das
jo
jecxz
loope
mov
dec
add
incb
notl
cmp
push
push
mov
fnclex
mov
enter
int3
sarl
fsub
jo
mov
pop
dec
sub
loope
and
jp
sahf
or
movsl
xlat
jl
or
xor
jae
pushf
test
jl
adc
add
int3
sub
lcall
int
out
repz
sti
xor
mov
adc
sub
int
call
xchg
sub
test
movsb
cmp
push
add
divl
jno
andb
dec
fs
out
scas
cltd
or
sbb
mov
scas
xor
pop
mov
loope
push
push
mov
rol
xor
ret
cmp
data16
fcomps
popf
jo
jecxz
xchg
dec
dec
cmp
mov
xchg
push
cmpsb
loopne
mov
mov
icebp
xor
outsl
clc
xchg
inc
ss
and
imul
js
push
out
xchg
outsl
mov
pop
add
iret
std
pop
push
fimuls
jge
sbb
not
push
dec
pop
pop
adc
mov
outsl
push
inc
sub
cmp
scas
mov
jne
jecxz
mov
jmp
push
push
inc
sbb
adc
xchg
jp
in
addr16
pop
rcrl
idivl
pusha
aaa
imull
xchg
or
xor
jno
and
inc
ficomps
aas
fsubs
dec
sbb
jbe
out
je
dec
ret
std
push
mov
mov
mov
icebp
cmpsb
add
dec
mov
xchg
sub
mov
lret
sti
or
jge
add
jl
add
andl
cmp
xchg
push
mov
sbb
and
sbb
jl
mov
in
out
fdivl
add
and
xor
xchg
jmp
sahf
adc
xor
loope
push
inc
fldcw
jae
cmpsl
mov
add
xchg
ud1
dec
jecxz
inc
stos
push
cld
sub
mov
mov
in
addr16
push
into
dec
fsubr
xchg
fidivl
enter
xchg
and
out
enter
push
stc
cmp
sbb
movsb
mov
mov
dec
loop
sbb
dec
jns
cli
and
xor
add
aas
insb
and
sbb
dec
adc
xchg
cmp
arpl
sbb
orl
pushf
push
fldcw
xor
xor
pop
dec
cmpsl
mov
pop
xor
xchg
lds
aaa
lahf
jb
add
pushf
cli
mov
nop
out
jmp
pop
pop
inc
lret
lock
shl
mov
sub
sbb
mov
bound
in
stos
iret
and
pop
test
std
mov
enter
mov
xchg
inc
clc
fstps
fsubrs
mov
cmp
cmp
in
mov
lods
add
sahf
push
repnz
push
pop
test
dec
hlt
enter
sarl
into
push
mov
mov
shl
fisttpl
cmpsl
dec
adc
push
xor
movsb
call
adc
sbb
sahf
or
sbb
dec
leave
stos
mov
mov
dec
gs
push
push
das
ret
in
clc
lret
mov
sub
rcll
outsl
loope
or
pusha
adc
lahf
pop
std
imul
sub
jns
inc
jg
test
data16
mov
xchg
nop
add
popf
and
dec
pmullw
adc
mov
icebp
movsl
mov
inc
loope
jbe
pop
ficoms
daa
ss
gs
das
xor
and
mov
push
repnz
xchg
cmpsl
js
popa
cmp
insb
into
enter
xor
sbb
imul
or
mov
je
ficoms
mov
fwait
scas
jo
decb
inc
dec
lcall
mov
and
cmpsb
shll
out
das
cmc
test
inc
imul
test
mov
cmpsb
jno
stos
jbe
fcoml
cltd
in
gs
push
sarb
add
sub
lcall
test
inc
add
das
in
cmpl
popa
ret
sub
notl
mov
jne
add
pop
dec
inc
push
out
ja
and
lret
mov
and
fsubp
mov
jae
fidivrl
mov
mov
test
fbstp
insb
push
jnp
mov
push
mov
inc
int3
pop
je
arpl
into
outsl
and
sbbl
dec
jns
mov
pop
xchg
adc
out
lds
push
push
mov
sub
fmull
ret
cmc
push
sbb
mov
addr16
push
xchg
sbb
lods
in
repnz
cs
jns
dec
nop
lods
inc
add
das
repnz
and
ja
je
push
cmp
jne
es
jnp
dec
jmp
sub
mov
sub
mov
in
lods
cmpsb
pop
lods
mov
xor
add
es
loop
imul
pop
push
mov
add
mov
stos
int
adc
sub
lds
aaa
ss
adc
sbb
lods
fs
repnz
cmpsl
dec
fldl2e
pop
fistps
out
cmp
out
inc
es
repnz
jns
and
xchg
pop
inc
sbb
pop
pushf
sbbl
pop
imul
cmp
out
push
flds
fs
data16
enter
dec
mov
call
xchg
mov
xor
mov
out
mov
mov
push
movsb
es
aad
repnz
repz
mov
add
and
dec
xchg
jbe
add
pushf
sub
jmp
sbb
mov
cli
test
cltd
pop
js
inc
lcall
sti
out
sub
inc
push
pop
lea
inc
sbb
inc
cltd
cmp
sar
ficomps
test
pop
out
inc
mov
push
mov
jbe
insb
fcoms
daa
hlt
test
xor
mov
add
xchg
or
mov
mul
cld
std
xchg
ds
pop
inc
pop
sbb
xchg
bound
iret
mov
iret
xchg
mov
cmpsl
xchg
inc
js
inc
dec
in
cmp
dec
pop
xor
shlb
out
add
jg
out
lds
imul
push
insl
dec
xlat
lds
jne
daa
mov
fcompl
push
call
cmp
cli
adc
lret
fwait
pop
jae
inc
xor
cmpsl
jmp
hlt
fmuls
mov
or
int
push
xchg
outsl
jns
out
xor
cmp
out
inc
dec
adc
fwait
cmp
call
xchg
adcl
fcomp
fisubs
sbb
insb
sbb
test
push
mov
or
out
sub
adc
lret
push
aad
mov
pop
mov
jg
movsl
mov
out
mov
mov
arpl
jne
or
sarl
cld
xchg
test
pop
cmp
xlat
dec
movsl
testb
in
sub
mov
mov
popf
jmp
mov
cmp
mov
inc
add
mov
fwait
fs
mov
xor
xchg
iret
rcl
mov
pop
xchg
push
rep
rcrl
jl
pop
icebp
sub
jl
jmp
or
nop
dec
gs
add
xchg
or
sti
lret
cmp
mov
aas
inc
mov
incl
sub
hlt
mov
jbe
in
mov
outsb
ret
xor
add
xchg
imul
icebp
add
int3
arpl
aaa
movsb
cmp
cli
testb
push
jle
scas
pop
out
fcomps
pop
lock
adc
in
push
or
dec
mov
and
outsb
fistpll
fwait
les
and
lahf
mov
xor
iret
aad
mov
jb
pop
es
negl
mov
insb
test
adc
or
stos
or
jecxz
nop
adc
pop
in
lds
mov
pop
cmp
mov
stos
pop
test
push
neg
in
pop
dec
cmp
stc
test
or
or
dec
and
pop
aas
insl
mov
fs
out
xchg
push
loope
xor
fbld
iret
scas
xor
repz
cmp
mov
loope
movsl
call
pop
sahf
out
or
fnstenv
cmp
adc
jne
addr16
mov
add
ret
inc
pop
push
mov
xchg
ret
xchg
test
test
mov
daa
mov
nop
ret
mov
or
jne
add
dec
add
fldenv
scas
pop
ror
cmpsl
xchg
push
mov
test
or
cltd
cmp
xchg
js
call
mov
pop
fcomps
xor
cmp
dec
popa
lds
cs
pop
mov
lea
out
mov
lcall
xchg
ljmp
jo
js
pavgb
ljmp
cmp
inc
jp
mov
popa
dec
scas
sub
pop
ljmp
dec
cmp
out
sub
xchg
popf
mov
push
adc
push
pop
pop
mov
xor
rcll
xor
mov
or
sbb
les
gs
repnz
or
or
in
insb
mov
mov
inc
in
mov
cmpsb
std
add
xor
jmp
clc
jge
sub
nop
xor
sbb
std
je
xor
xchg
sub
dec
and
and
fcoml
mov
mov
loop
add
inc
mov
xor
repz
icebp
sbb
popf
idivl
mov
mov
dec
shll
xchg
imul
stos
push
xor
adc
jecxz
mov
test
sbb
loopne
insb
lret
lret
lds
push
fldl
dec
push
out
and
pop
imulb
sub
add
sub
xchg
push
cmp
inc
xchg
jae
add
xor
sub
clc
lea
add
cmpsl
mov
push
js
and
mov
jne
cmp
adc
fdiv
dec
mov
xchg
lods
xchg
mov
xlat
mov
out
adc
jb,pt
in
stc
mov
dec
pop
mov
mov
xchg
fisttps
xchg
dec
sti
push
jp
imul
xchg
or
sbb
mov
push
insb
movsb
lret
jnp
mov
push
ret
pop
je
push
stos
hlt
mov
dec
adc
xor
or
fisttpl
and
push
adcb
cmp
sti
shll
call
push
cmpsl
dec
mov
out
push
fsubrl
pop
aam
or
cmpsl
xor
push
adc
fldl
divl
outsb
jg
testb
push
js
out
inc
xchg
mov
mov
xorl
dec
aam
mov
aad
pop
repnz
push
lahf
xchg
sub
out
push
int
mov
cmp
into
imul
pop
jae
in
add
loopne
sbb
dec
xchg
xchg
mov
ret
add
sbb
cmp
lret
fwait
and
rorl
or
out
outsl
push
ret
mulb
push
pop
pop
pushf
das
inc
xlat
imul
jle
fwait
adc
pop
sbb
mov
shll
test
fidivrl
stc
fs
sub
jne
std
mov
arpl
mov
in
outsb
xor
les
enter
adc
mov
adc
adc
inc
push
jno
test
cmp
lcall
dec
in
iret
mov
lods
xchg
out
fabs
lods
test
add
lds
pop
add
mov
xor
mov
repnz
add
jb
testb
jp
push
xor
jp
out
jmp
mov
sahf
stos
add
and
dec
pop
in
pusha
cmpb
aam
push
mov
cmp
push
jl
jle
xor
push
loop
xor
add
inc
xor
jnp
pop
or
cmp
in
dec
int3
dec
add
jecxz
imul
lock
jl
jnp
sbb
sub
fidivrs
dec
icebp
popf
jbe
hlt
xchg
add
scas
pop
arpl
shlb
std
lea
cwtl
out
xchg
push
jne
into
sub
mov
or
mov
mov
pop
leave
in
sahf
dec
shrb
pop
or
pop
dec
sbb
or
ret
enter
mov
pop
lds
push
pusha
xlat
gs
pop
mov
jge
mov
push
xor
inc
in
jae
arpl
lea
fimull
outsb
daa
adc
dec
scas
pushf
or
aad
add
scas
push
sbb
pop
mov
lds
je
sbb
insb
jg
cmp
ret
popa
jb
frstor
jbe
mov
dec
pop
ss
mov
and
bound
mov
aam
inc
ret
in
ja
movsb
or
dec
lods
jb
movsb
mov
ret
fwait
scas
pusha
jp
fstps
shl
test
pop
mov
mov
xor
cmp
xchg
les
repnz
shrl
sbb
xchg
lds
loop
mov
leave
lock
pop
adc
add
shl
pop
mul
shlb
mov
les
and
call
jno
in
mov
into
mov
stos
xchg
ss
push
int
aaa
and
pop
cli
aad
and
int
bound
je
pusha
mov
push
notl
sti
push
pop
mov
jle
dec
test
repnz
mov
test
aad
sub
mov
insb
lret
xor
rcll
adc
inc
sub
stc
xlat
mov
icebp
jl
nop
adc
into
fadd
xor
subb
out
jp
ret
sbb
inc
pusha
adc
mov
dec
movsl
pop
inc
scas
fcom
dec
imul
roll
movsl
arpl
es
icebp
pop
notb
loope
roll
xlat
repnz
jnp
int3
lock
sub
push
incb
mov
fsub
xchg
lret
xor
xlat
mov
pop
mov
js
push
push
and
inc
fs
in
pop
or
je
sbb
xor
jmp
fbld
rcrb
test
jl
ds
push
or
insb
mov
imul
adc
loopne
cmc
pop
std
lds
cmp
call
popa
ja
clc
scas
stos
push
sahf
les
mov
outsl
cld
loopne
fnstsw
and
stos
test
add
hlt
mov
cmp
out
scas
shrl
out
push
mov
mov
or
pop
lret
enter
insb
test
pop
mov
push
cmpsb
movsl
out
pop
sbb
push
sbb
cmc
arpl
inc
int
movsl
sbb
or
arpl
xor
scas
inc
insl
sbb
mov
ds
imul
shlb
dec
and
sub
cmp
mov
push
push
jecxz
mov
cwtl
das
loopne
fcoms
mov
lea
sbb
orb
shr
insl
xchg
mov
or
pop
out
cld
sub
cmpsl
add
add
push
cs
push
bsr
xchg
mov
loopne
jnp
inc
jg
ja
mov
fisttpl
hlt
jge
jnp
call
aam
and
fsubp
jge
stos
scas
stos
popa
or
jne
sub
cmp
inc
sbb
jg
pop
mov
cmpsb
xchg
jge
mov
cmpsl
out
lea
or
push
lods
nop
dec
add
mov
int3
inc
lock
loop
pushf
xor
inc
cmp
ljmp
lcall
jb
adc
or
cmp
mov
dec
fcmovb
mov
cmp
and
pop
mov
arpl
scas
inc
outsl
inc
shrb
dec
xor
or
loope
imul
mov
and
cmpsb
test
lds
mov
mov
lcall
outsl
push
mov
mov
rolb
adc
mov
pusha
movsl
daa
mov
sbbl
lahf
insl
fdiv
dec
xchg
outsb
lcall
shrl
jg
js
push
and
jg
inc
dec
bound
shrl
jnp
stos
enter
and
xor
sbb
cmp
sbb
shll
cmp
cmp
mov
push
shlb
xor
shrb
dec
fsubs
rcll
cmpsb
mov
enter
bound
push
or
insb
cmp
fisubl
mov
stos
or
fstpl
mov
iret
scas
jp
lahf
pop
lds
jo
sub
mov
jecxz
push
adc
fbstp
jl
sarb
sahf
mov
dec
and
scas
cmpsl
inc
clc
mov
stos
xchg
push
inc
loope
movsb
push
out
sbb
or
jne
xchg
or
sahf
shl
pushf
pop
loopne
sti
inc
fdivrp
xchg
repnz
add
cmp
js
pop
scas
rcrl
out
cmpsl
pop
mov
adc
inc
dec
lret
pushf
test
jbe
out
xchg
lods
lahf
push
sub
cmpb
xchg
js
or
push
bound
imul
mov
addr16
dec
xlat
outsl
or
inc
mov
add
pop
into
push
xchg
pop
lods
jmp
fs
in
rcrb
loop
pop
mov
push
outsb
lock
mov
fcmovnb
shl
imul
mov
loope
jle
xor
add
cmpsl
test
cmp
xchg
push
mov
jae
cmpsb
cmc
sub
iret
cwtl
fdiv
es
jb
inc
push
or
movsl
cmp
xchg
pop
jle
in
outsb
and
jp
insb
jle
adc
cmpsb
cmp
inc
cltd
cltd
cmp
mov
inc
nop
xor
shll
jne
enter
lods
shrl
mov
cmp
pusha
jecxz
pop
notb
jo
xchg
cmpsl
fistpl
sbb
jno
cld
adc
cmpsl
xchg
cs
and
jne
and
push
gs
jp
add
clc
push
sbb
out
and
and
adc
push
std
or
mov
push
mov
mov
sbb
jle
xchg
mov
cmpsl
jns,pt
call
add
in
repnz
jns
loope
shrl
loop
movsb
dec
cmp
mov
data16
roll
sbb
pop
jb
pop
subl
movsb
and
pop
push
fsubr
lret
pop
add
adc
jns
xor
cs
inc
fidivrl
pushf
pushf
sti
lea
inc
pop
add
aam
add
inc
sub
iret
pop
jae
cmpsl
or
mov
fisubs
lret
xor
dec
cmpsb
sub
lods
push
lret
scas
fstpt
mov
mov
stc
je
push
mov
je
pop
cld
fisubrs
mov
dec
iret
xchg
push
jmp
lods
fnsave
lret
or
ds
push
outsb
sarb
clc
shlb
decb
sub
dec
ja
push
outsl
mov
aas
lods
and
lahf
or
shl
mov
dec
mov
push
lcall
lock
les
xorl
icebp
sbb
add
cmp
test
inc
adc
and
sbb
lret
inc
or
test
xchg
into
fbstp
pop
pop
inc
pcmpgtd
ret
daa
mov
sub
outsb
pop
xlat
pop
pusha
inc
aas
xchg
sub
pop
sbb
add
mov
out
inc
lret
or
sub
shrb
sti
jle
and
sub
outsb
fld
sub
sbb
cli
fsubrs
pop
enter
or
imul
add
repnz
push
sub
repnz
sbb
mov
adc
push
mov
dec
loopne
mov
mov
adcb
or
sahf
mov
enter
mov
iret
pop
cwtl
addr16
dec
shll
mov
ljmp
dec
sub
mov
imul
or
sub
out
hlt
mov
sbb
push
aas
into
popa
lret
jae
push
in
sbb
je
xorl
test
bound
sbb
movsl
mov
add
test
adc
fistpl
mov
jmp
test
mov
sbb
mov
add
or
and
in
in
cmp
imul
and
pop
rcrl
scas
dec
jnp
int3
mov
aas
popf
movsb
xlat
push
in
rorl
arpl
es
mov
popa
push
push
loopne
ret
cmpsl
sub
mov
push
mov
popf
jno
mov
cmp
add
pop
cmp
movsl
sahf
jno
aas
out
mov
ss
pop
push
mov
jnp
or
call
add
pop
xor
outsl
aad
pop
jp
push
sbb
jle
xorl
aaa
ds
ret
and
xchg
jmp
aaa
sbb
mov
and
add
push
lret
jbe
dec
push
lods
push
leave
mov
out
fsubl
mov
hlt
bound
push
jg
fnsave
aas
push
mov
adcb
inc
pop
pusha
or
add
nop
or
rcr
jno
int
das
sbb
sbb
cmp
js
mov
sub
pop
mov
cmpsl
sbbl
les
mov
clc
daa
push
das
mov
mov
cmp
push
ja
iret
test
mov
gs
xor
jp
dec
inc
icebp
cltd
fdivrs
sbb
mov
por
sbb
mov
or
lds
and
sti
jbe
lcall
subb
dec
andb
popl
xor
adc
mov
ss
cwtl
inc
pop
mov
push
scas
push
pop
cmp
add
pop
stos
xchg
xor
data16
iret
push
xchg
push
dec
ss
cmp
cmpsl
aas
pushf
mulb
dec
loope
cmpsl
fwait
data16
xor
stos
dec
fcomps
dec
dec
incl
xor
push
scas
out
outsb
popf
notl
xor
mov
add
dec
xor
aad
push
sarb
in
idivb
daa
paddb
add
addr16
add
mov
scas
test
inc
into
addr16
mov
pop
in
sub
loope
loop
subl
adc
xchg
inc
pushf
cs
jmp
inc
leave
adcb
mov
inc
fs
scas
arpl
adc
lods
jmp
push
push
lcall
xor
fldenv
test
xchg
lret
int3
fnsave
lock
add
or
cmp
in
call
or
cmp
mov
cmpl
add
mov
lcall
or
cwtl
xlat
mov
rorb
repnz
xchg
dec
inc
int3
mov
mov
pop
or
cmp
mov
movsl
lock
out
push
movsl
loope
loop
bound
sub
dec
dec
int
adc
aas
popf
and
in
sbbb
add
xor
or
mov
js
aam
mov
nop
mov
jmp
cli
sbb
sub
jg
mov
int
push
mov
push
movsl
cmp
push
xchg
popa
cmp
xchg
call
or
scas
mov
inc
rcrb
cld
mov
pop
xchg
scas
inc
dec
repnz
mov
fcmovnb
outsb
push
adc
mov
mov
add
movsb
sub
push
test
inc
xchg
sbb
or
cmp
jg
mov
add
repnz
andl
cs
sbbb
loope
lods
mov
mov
shlb
xchg
adc
inc
aas
ja
push
insl
adc
xor
std
js
mov
and
sbb
sarl
repz
xchg
mov
adc
cmp
int
jecxz
sbb
pop
cmpsb
adc
mov
loopne
das
mov
cwtl
ud1
stos
mov
aas
into
mov
pop
dec
inc
adc
cltd
add
loope
movsb
pop
dec
pop
leave
xchg
mov
and
dec
data16
aas
adcb
lds
add
mov
ret
mov
pop
mov
pop
mov
xlat
lock
sub
divb
xor
inc
pusha
jl
and
sub
rcll
rcrb
out
das
push
pop
or
popa
data16
gs
mov
adc
mov
mov
add
xor
pop
mov
loop
mov
xor
leave
mov
lds
jge
pop
xchg
jp
in
mov
add
int
shl
mov
fisttpll
sbb
push
xchg
add
test
and
mov
bound
nop
out
xchg
out
or
cmpsb
cmp
into
inc
les
insb
or
out
mov
testb
fstl
shr
lcall
jl
push
and
shl
push
out
push
sbb
inc
push
pusha
pop
cld
adc
pop
cli
lods
in
sub
push
fldt
mov
icebp
test
mov
sbb
ss
or
lds
ficompl
pop
iret
inc
scas
sub
inc
repz
jmp
inc
mov
in
or
cmpsb
mov
push
xlat
mov
testb
out
mov
cmp
lahf
push
sbbl
jecxz
ds
sbb
daa
mov
mov
lods
adc
mov
sub
xchg
cmpsb
sub
sub
out
stos
sbb
cmp
pushl
xchg
out
jp
in
clc
dec
jg
sbb
mov
jno
loop
mov
dec
cmc
lods
pop
sbb
scas
sbb
outsl
or
loope
shrb
dec
outsl
jmp
jb
clc
or
xchg
lds
dec
add
xchg
mov
lahf
push
icebp
es
or
adc
das
cmp
pusha
mov
inc
stos
sub
pusha
mov
mov
es
cltd
stc
das
mov
sbbb
stos
and
or
mov
xor
les
fildll
sub
icebp
jp
mov
aad
push
test
test
push
adc
add
pushf
addr16
mov
and
xor
push
cmp
inc
push
inc
push
sbb
inc
push
outsl
sarl
add
lcall
jb
dec
ss
lahf
in
lds
fstpl
mov
lods
xchg
jb
in
pop
ss
push
sbb
push
in
andb
pop
dec
jecxz
cmpsl
mov
mov
imul
pop
mov
arpl
jb
lock
lods
cmp
pop
mov
xor
pop
sahf
cmp
add
ret
jbe
mov
ljmp
mov
xchg
out
nop
ds
jo
into
xchg
test
int
mov
push
inc
adc
or
into
and
pop
mov
clc
fdiv
iret
or
mov
dec
cmpsl
enter
les
pusha
or
xchg
enter
and
loop
repnz
cmpsl
push
shrl
push
jae
pushf
sbbb
or
pop
cli
cmp
adc
aas
insl
pop
mov
lds
nop
lods
pushf
aaa
nop
cmp
lock
mov
push
push
push
cmc
arpl
scas
mov
outsl
jnp
pushw
xrelease
inc
ds
imul
andl
ja
scas
and
add
jo
pop
pusha
push
mov
popf
cli
cmp
lret
or
cmp
in
push
xchg
testb
cmp
data16
jo
std
mov
into
movhps
outsb
lea
lcall
mov
inc
xorb
and
mov
and
xchg
repz
xchg
testl
mov
cmp
scas
mov
lock
mov
xlat
outsb
hlt
or
xchg
dec
mov
mov
aad
fstpl
aam
mov
popf
stc
into
adc
xor
adc
push
jle
popf
stc
adc
jae
dec
lods
xchg
jle
jge
aam
xor
mov
fisubrs
mov
mov
xor
jl
fwait
sub
popa
add
stos
cld
inc
in
jns
mov
mov
lahf
jns
test
or
fistps
push
testl
test
arpl
pushf
sti
test
jge
and
sbb
cmp
push
mov
add
mov
mov
lods
andl
xor
cli
dec
inc
sbb
sti
xchg
xchg
cmp
add
nop
xor
mov
mov
mov
clc
leave
push
sub
insl
jg
mov
call
cmp
leave
cmpsl
push
test
call
ficomps
jo
les
cmp
outsb
mov
cwtl
dec
call
mov
mov
xchg
enter
xchg
iret
fmuls
mov
or
jecxz
pop
mov
push
aam
arpl
mov
dec
jo
inc
popa
jg
loope
inc
xchg
stos
jne
xor
pop
xor
iret
push
inc
bound
popa
out
xchg
icebp
les
hlt
cmpsb
cmpsl
imul
jne
push
out
adc
add
test
dec
rorl
pop
stos
lock
or
mov
stos
and
lock
daa
fldcw
shlb
insl
add
rcr
das
fsubs
sti
scas
pop
out
jge
xchg
inc
loopne
mul
xor
or
pusha
icebp
adc
pop
sahf
adc
pop
cmp
jnp
xchg
jg
jl
xlat
pop
pop
jl
mov
imul
popf
repz
pop
insb
in
jo
shrb
xor
and
pop
sbbl
icebp
push
popf
test
into
call
xlat
in
inc
into
inc
sbbb
jecxz
test
out
jnp
shrd
push
sub
bound
add
xor
dec
loopne
mov
or
out
pop
test
scas
lods
xlat
mov
xor
in
ja
push
jnp
data16
in
pop
xor
outsb
faddl
sbbl
cmp
adc
sbbl
add
pop
pop
sub
in
ret
test
xchg
push
in
js
mov
into
call
int
push
mov
int3
adc
repnz
std
lar
push
aam
cltd
push
in
or
xor
or
enter
sbb
sub
movsl
fldl
xor
das
nop
lea
sbb
jnp
and
stc
inc
sahf
push
or
rcr
in
int3
repnz
mov
insl
fs
repnz
mov
clc
xchg
arpl
fdivrs
call
jb
inc
jmp
dec
movsl
jb
pop
inc
or
inc
sub
sub
mov
xchg
mov
jmp
adc
leave
jb
lret
and
jb
movsb
jle
sub
sbb
sub
pop
adc
adc
cmpsl
mov
repnz
flds
xchg
int3
push
enter
pop
data16
sub
pop
mov
push
adc
out
mov
sbb
mov
mov
scas
and
jno
lods
push
out
notl
jns
jne
mov
scas
call
pop
loop
test
outsl
movsl
mov
pop
adc
out
and
pop
scas
add
out
aad
and
jne
iret
pop
clc
into
outsl
fsts
pop
incl
and
xchg
add
scas
xchg
popf
jg
hlt
or
or
in
or
pop
and
jmp
inc
popa
ss
jno
ljmp
rcll
sub
sbbl
cmp
push
loope
push
inc
mov
lahf
dec
pop
decb
fwait
xor
push
ds
push
aas
jge
xchg
es
jl
push
scas
pop
mov
jns
mov
inc
decl
js
push
sub
jge
mov
dec
cmp
xor
sahf
es
iret
in
int3
mov
pop
push
sub
xor
dec
lock
lahf
push
pop
shlb
pop
mov
nop
daa
pop
push
jae
xor
repz
jnp
xor
insb
neg
and
sbb
mov
repnz
add
mov
and
into
mov
ret
rorl
outsb
out
mov
cmp
cmp
es
or
pop
ffree
push
and
jg
movsl
push
mov
dec
outsb
lods
cli
push
insb
pushf
xor
sub
cwtl
mov
mov
leave
sbbb
dec
ficoms
adcl
enter
lret
dec
outsl
leave
shll
fwait
int
mov
in
adc
cltd
out
ss
movsl
push
not
imul
mov
push
and
dec
std
ss
repnz
and
dec
test
jle
xor
lcall
fdiv
jne
sub
aad
nop
popa
add
inc
bound
and
mov
jl
lea
xchg
xchg
add
in
aam
in
jg
xor
adc
adc
inc
dec
cwtl
jae
addr16
test
ljmp
add
add
pop
cmp
nop
stos
out
sarb
add
stos
dec
outsw
and
aas
cmp
push
popf
mov
or
popa
popf
scas
xchg
or
mov
movsl
or
test
into
and
pop
jno
mov
aam
dec
fsubrs
stc
xchg
xchg
lret
shlb
cmp
cmpb
pop
sbb
push
lret
jge
lock
mov
mov
je
cltd
push
ror
adc
push
or
lds
xor
fistl
mov
sahf
gs
divl
sub
sarb
in
sbb
xlat
pop
mov
rcrl
call
mov
lahf
js
sbb
lds
pop
and
ror
enter
stos
negl
icebp
sahf
imul
int3
and
mull
outsl
pop
mov
dec
push
repnz
rcrb
xor
clc
mov
xor
das
mov
mov
loope
imul
gs
jge
rcll
mov
jmp
mov
cmp
sarb
mov
pop
mov
xor
mov
xor
aam
sbb
insb
subb
leave
add
insl
inc
pop
xchg
ds
rclb
fwait
adc
inc
test
popf
les
push
and
aas
pop
cli
and
inc
test
pop
fdivl
xchg
fildll
jae
pusha
cwtl
pop
daa
cmp
div
sbb
jg
scas
mov
jns
enter
inc
test
test
pop
rclb
aam
repz
sbb
fstpt
cmpsb
and
addl
push
or
mov
mov
xchg
sti
shufps
push
in
dec
dec
les
and
mov
push
sbb
dec
sub
jge
xor
inc
inc
sbb
xor
in
push
xor
mov
ja
loopne
mov
mov
mov
mov
movsl
shrb
sbb
outsl
dec
loope
jge
or
movsl
mov
add
testb
popf
adc
mov
mov
arpl
jnp
or
cmp
sbb
inc
loopne
rcrl
icebp
sbb
mov
push
jbe
ficompl
mov
movsb
cmp
hlt
call
add
dec
push
jne
test
xchg
jmp
popa
cmc
inc
aas
cmp
push
ljmp
mov
mov
into
idiv
and
iret
popa
and
enter
adc
scas
sub
dec
rol
ds
mov
mov
add
pop
mov
mov
movsl
ljmp
stos
sub
sbb
inc
sarl
divb
stc
mov
or
les
arpl
cmp
negb
pop
sub
ljmp
or
adc
jae
push
jge
je
cmp
out
cmp
shll
pop
jne
xor
mov
xor
repnz
and
jns
arpl
fnstsw
mov
ret
ljmp
icebp
cltd
xor
mov
fdivp
je
mov
ficomps
jp
jecxz
ror
xchg
rcr
cmp
nop
fidivs
cmp
or
aaa
loope
xchg
subb
mov
fsub
mov
mov
out
test
leave
push
inc
stos
xchg
out
push
aaa
loop
dec
or
xchg
or
jle
jne
scas
jne
ss
dec
stos
ss
push
popf
sbbb
sar
cwtl
mov
jmp
jg
mov
insb
pop
stos
jp
movsl
scas
sbbb
xchg
test
add
adc
mov
stos
push
add
repz
repz
inc
ficomps
fsubl
movsl
pop
sub
mov
incb
and
mov
add
mov
je
jbe
inc
test
xor
sbb
stos
repnz
cmp
mov
mov
outsb
das
adc
cmpsl
mov
mov
mov
push
call
mov
decl
fldenv
data16
fcom
xchg
test
in
faddl
pop
shl
or
jp
insb
cwtl
mov
in
xor
pop
loop
fsubp
icebp
das
iret
out
lea
loope
push
adc
push
cmp
pop
lret
pushf
cli
pop
cmp
push
fwait
adc
js
hlt
xchg
xor
lds
fcompl
cwtl
daa
mov
push
movsb
sub
js
lds
fnsave
sti
push
xchg
inc
imul
call
lock
jne
imul
mov
xchg
mov
loope
sbb
mov
shlb
sub
outsl
lods
xor
in
inc
gs
aad
jmp
jbe
adc
push
sbb
pop
push
pop
cltd
or
sub
mov
jmp
xchg
add
push
das
or
arpl
lahf
pop
push
cmp
pop
call
xchg
or
cwtl
sub
xchg
or
or
or
mov
adc
mov
mov
or
mov
push
xor
and
sub
and
and
xor
xchg
jp
or
inc
or
mov
ljmp
bound
fisubs
pop
mov
pushf
pop
xor
fmulp
test
push
dec
xor
pop
xor
stos
jno
and
push
push
lods
dec
or
adc
lahf
out
pop
sbb
pop
sbb
cmp
in
dec
dec
mov
ljmp
mov
xchg
loope
sbb
in
lcall
nop
and
loope
les
iret
add
xor
push
or
clc
jg
mov
push
xchg
out
mov
push
imul
in
push
xor
mov
xchg
mov
sar
fwait
pop
fists
mov
mov
mov
mov
dec
jae
data16
lds
add
icebp
sub
insl
aad
sahf
xchg
sbb
mov
jb
push
and
outsb
mov
enter
ret
or
stc
mov
lods
push
jo
mov
addr16
nop
test
pop
outsb
fcomp
lods
add
repz
lods
js
test
xchg
out
dec
or
loop
hlt
jge
sbb
pop
lock
scas
and
je
data16
add
jnp
aam
mov
pop
mov
aas
dec
cli
push
mov
fidivs
push
adc
mov
outsl
and
iret
mulb
mov
mov
sub
in
pop
jns
hlt
lods
cmp
mov
arpl
xor
out
jl
in
or
mov
dec
dec
decl
mov
jnp
and
dec
fwait
cmp
pop
into
enter
adc
test
mov
or
lods
ja
shrl
inc
pcmpgtw
xorb
or
clc
sahf
test
fnstcw
stc
and
or
jns
mov
insl
les
inc
dec
dec
ss
dec
inc
sbb
inc
sub
fisubs
pusha
aaa
sub
push
xor
movsb
mov
imul
mov
repnz
sbb
fsubrs
rcrl
out
movsl
outsl
mov
rcll
repnz
movsl
dec
and
cli
test
jge
lods
jg
dec
out
inc
cmc
mov
cmp
jo
jl
cmp
pop
add
pop
fsubs
adc
inc
movsl
jg
mov
push
movsl
int
push
add
data16
xchg
cwtl
arpl
sub
decl
negb
jge,pt
jo
dec
push
mov
pushf
scas
inc
lahf
pop
repnz
mov
jae
mov
mov
mov
clc
inc
xchg
add
pop
push
push
xchg
sbb
jg
test
hlt
cmp
fidivl
dec
std
stc
clc
test
ja
lahf
push
cmp
outsb
jno
mov
int3
sbb
pop
loopne
stos
push
xchg
adc
mov
push
add
aaa
js
imul
xchg
imul
adc
ds
femms
mov
cmp
sbb
cld
and
push
inc
data16
xlat
dec
fmull
mov
or
sahf
cli
loope
push
dec
aas
mov
inc
sbb
lods
popf
cwtl
gs
or
add
idivb
shlb
jge
jo
jns
sub
jno
pusha
negl
stc
add
and
inc
out
jbe
and
rcrb
sbb
aas
xchg
cld
iret
test
and
pusha
lods
xchg
or
scas
dec
sub
jg
pushf
xor
cmp
popa
ja
out
stos
fsub
pop
pop
insl
add
jmp
jo
mov
mov
inc
sbb
test
imul
add
xorl
mov
sub
aad
push
jae
roll
add
out
dec
jmp
jge
jg
mov
xorb
lods
cmp
loopne
pop
data16
inc
mov
sub
jne
push
repz
add
sbb
push
push
jnp
cmp
adcl
or
stos
mov
fnsave
fsubs
add
jp
pop
clc
pop
subb
jp
daa
add
cmp
int
out
adc
sbb
lods
insl
sub
test
xor
test
sahf
sarb
jbe
inc
call
mov
xor
sti
add
test
pop
xchg
dec
and
ja
jmp
cmpxchg
int3
pop
cmc
mov
dec
fstpt
out
or
push
xor
xor
lds
rcpps
push
dec
loopne
movsb
mov
mov
hlt
mov
shlb
add
cli
test
pop
xchg
leave
daa
sbb
push
or
mov
or
mov
fdivl
pop
shr
pop
mov
xchg
leave
out
stos
add
lods
push
jo
sbb
sbb
out
xor
pop
sub
adc
push
ja
cld
jg
sbb
bound
std
xchg
popf
lahf
pop
retw
test
addr16
pushf
icebp
jge
xor
iret
mov
adc
aas
shr
jo
cwtl
out
fiaddl
pushf
mov
mov
mov
or
mov
cmp
sarl
mov
loope
enter
testl
adc
nop
daa
or
scas
test
xor
mov
cld
inc
scas
rorl
sub
jge
int3
push
mov
rcr
push
ljmp
dec
sarb
lahf
pop
mov
bound
loopne
aaa
jmp
rclb
daa
mov
inc
imul
daa
sti
fwait
movsl
mov
adc
es
into
xor
add
pusha
lods
test
mov
sub
or
and
leave
push
lods
pop
sbb
xchg
inc
cli
loope
mov
mov
pop
xor
mov
cmp
pop
inc
test
mov
repz
add
and
jne
popf
test
mov
mov
or
mov
sub
imulb
push
jp
js
fdivl
test
inc
loope
movsl
idivb
adc
cmp
data16
push
leave
test
or
mov
les
aam
ret
fwait
adc
lock
notl
mov
shl
mov
aad
shrl
out
dec
dec
mov
dec
test
lret
pop
fstpt
sbb
shl
dec
push
xor
dec
loopne
scas
in
adc
leave
imulb
into
in
shl
and
jle
sub
or
jp
xchg
lea
sub
xchg
cmc
push
adc
xor
adc
pop
icebp
and
or
roll
daa
or
sbb
outsl
jp
loop
or
add
arpl
addl
xchg
call
cmp
outsl
js
sbb
rcr
es
push
sbb
jo
test
addl
or
jle
jnp
mov
xchg
sbbb
ficompl
hlt
dec
and
stc
cmp
ljmp
std
xchg
imul
cmp
add
and
lods
nop
fs
mov
testl
jle
adc
popa
jmp
mov
stos
gs
or
cmp
pop
sub
and
gs
test
sub
mov
insl
jbe
repz
add
cmp
pusha
pushf
mov
pop
sar
push
add
mov
push
ss
daa
and
pop
push
dec
outsb
test
test
jno
add
pushf
lods
adc
inc
cmc
sbb
xor
or
pop
jg
xchg
add
sub
mov
push
lret
pop
sub
mov
insb
lcall
mov
popa
stos
push
rclb
mov
in
movnti
or
mov
scas
inc
push
xchg
cwtl
pop
sti
sub
pop
and
test
pusha
xorb
dec
pop
sbb
sbb
fdiv
dec
push
mov
movsl
sub
adc
rorl
push
pop
xor
inc
inc
adc
leave
fisttpl
cwtl
jo
imul
cmpsb
mov
push
sub
out
cld
mov
pop
mov
jne
jmp
aam
push
add
mov
and
lock
push
aas
mov
dec
icebp
mov
gs
adc
push
enter
popa
testb
clc
push
lahf
or
sub
lea
dec
jle
mov
faddl
loope
shrb
das
mov
sub
ja
xor
fnstenv
adc
mov
aam
mov
in
mov
cmpsb
mov
ret
pusha
std
jmp
sahf
mov
addr16
jmp
test
pushf
xor
out
xor
dec
aam
adc
pushf
and
jge
lret
rorb
insl
xor
out
jo
hlt
mov
sti
lea
lds
xchg
insb
js
sub
xchg
xor
andl
inc
pop
ficomps
inc
enter
or
mov
inc
add
rcrb
pop
adc
adc
lds
jg
xor
push
movsl
fistps
jns
aaa
sbb
sub
ret
rep
andl
dec
outsb
xchg
push
sbb
mov
mov
mov
xchg
jl
sbb
into
xor
dec
loop
aam
fbstp
call
test
rcl
sbb
and
cltd
fisubrl
addr16
outsl
inc
mov
or
mov
hlt
add
rol
js
lret
xlat
repz
lret
jbe
mov
leave
dec
xor
sbb
aaa
repnz
sbb
lods
fadds
test
mov
jg
inc
sbb
or
xor
fiaddl
inc
adc
xchg
add
xchg
sbb
sub
and
outsl
lret
sub
and
aad
mov
movsb
cmpsb
call
and
adc
push
in
sbb
addr16
xchg
sti
shrb
ds
cld
rorb
sbb
mov
add
rolb
dec
and
push
mov
fwait
cli
and
mov
xor
sub
and
mov
xor
lret
rcl
sub
sub
enter
sub
mov
xor
inc
mov
out
nop
and
scas
out
cmpsb
std
in
ds
cmpb
mov
cwtl
and
movsl
rcll
push
xchg
int3
adc
inc
subb
jmp
repz
adc
les
and
stc
adc
sub
cmpsl
mov
jbe
inc
adc
je
cmc
test
xchg
jno
or
hlt
arpl
xor
loope
push
jae
push
insl
mov
xor
lock
aam
cmp
inc
pop
out
insl
cs
xchg
pop
xchg
mov
fisubl
adc
fwait
test
jae
rcl
and
xchg
add
stos
push
mov
xchg
jnp
rclb
in
pusha
test
and
iret
cmpsl
lea
lahf
fs
add
push
gs
cmpsl
sahf
in
cmpsl
mov
les
mov
inc
adc
sbb
outsb
inc
aad
xor
mov
cmp
xchg
and
dec
rcrb
in
lock
int
inc
cmc
cmp
scas
push
mov
add
scas
push
pop
jecxz
mov
rcrl
das
mov
dec
pop
sbb
mov
sbb
jae
lods
or
movsb
inc
sbbb
rcrb
jne
mov
add
lock
fs
pushf
and
inc
fdivs
xor
dec
and
xchg
mov
pop
mov
inc
mov
pop
out
push
clc
or
outsb
push
popf
or
je
mov
mov
mov
push
jb
aad
xchg
push
or
mov
dec
das
sub
add
jae
adc
pop
clc
xchg
add
push
lds
pusha
lahf
rorb
xor
mov
xchg
insl
in
rol
ficomps
mov
lods
xchg
icebp
ljmpw
div
fstpt
adc
sti
test
or
addb
jmp
adc
out
mov
mov
sbb
push
test
imul
jbe
stc
push
test
adc
insb
test
shlb
inc
mov
movsb
mov
mov
sub
or
mov
mov
cltd
mov
arpl
xchg
mov
hlt
ja
add
int3
mov
mov
fcoms
xchg
mov
in
cmpsl
add
fiaddl
sahf
xchg
jg
push
mov
es
push
out
lods
mov
pop
jns
call
mov
pop
dec
das
test
mov
xor
push
push
push
fadds
cld
fidivl
rorl
and
test
jp
dec
pop
insb
out
mov
pushf
jecxz
dec
add
sub
jg
rep
push
adc
mov
pushf
mov
and
sub
inc
mov
lret
mov
lmsw
dec
hlt
xchg
jo
jl
jno
pop
xchg
xchg
stc
repz
mov
fidivl
and
dec
sbb
sub
push
sbb
adc
jnp
in
xchg
push
imul
mov
ret
inc
sti
gs
sbb
xchg
fisubrl
push
popf
add
daa
fidivl
ljmp
jg
mov
inc
inc
cwtl
out
and
fidivl
push
xor
and
xlat
sub
insb
fisubrl
jae
sub
xor
push
pop
jo
ret
mov
out
into
or
rcr
outsl
add
insb
sub
sahf
je
add
cmp
xchg
stc
dec
dec
xlat
cmp
inc
ss
lock
movsl
inc
insb
xchg
inc
fadd
imul
movsb
movsl
cwtl
and
sub
mov
push
jmp
push
cli
push
repz
adc
mov
mov
mov
xchg
and
cmp
pop
mov
mov
stos
mov
outsl
std
fnstenv
nop
movzbl
mov
addb
aaa
or
mov
scas
test
lcall
pop
inc
pop
aad
testl
lret
or
xor
mov
ret
js
orb
sub
or
jne
in
jmp
clc
sub
add
popa
xor
pusha
pop
adc
call
cmpsb
aaa
mov
or
insl
cli
xchg
mov
js
xchg
xor
inc
loop
inc
mov
popa
xchg
jmp
pusha
test
mov
push
push
mov
in
daa
jbe
ret
mov
scas
call
dec
mov
push
lea
call
cltd
or
xlat
ja
jno
andl
imul
rcll
fwait
jns
mov
cmp
push
ljmp
mov
and
xor
adc
aaa
leave
dec
repz
mov
fwait
loopne
mov
dec
sub
or
icebp
subb
pop
rorl
mov
das
push
mov
popa
push
inc
pushf
or
lahf
mov
cmp
ret
xor
add
xor
inc
inc
pop
ja
js
mov
out
mov
faddp
or
mov
imul
cs
in
and
xchg
sahf
xor
lds
push
jno
mov
mov
jnp
push
ror
push
fimull
jg
flds
xchg
cmp
dec
add
mov
iret
sbb
aaa
pop
push
lods
inc
cmpsb
jl
ljmp
call
mov
or
das
stc
or
test
sbb
les
mov
out
lods
faddl
xchg
xor
add
xor
mov
jmp
fdiv
mov
test
mov
jp
lds
call
push
in
pop
fldl
mov
adc
sbb
aad
scas
cwtl
adc
cmp
inc
test
cmp
jae
pop
movsl
mov
dec
scas
dec
repnz
inc
and
pop
out
fnstsw
leave
fs
cmp
or
jmp
add
sahf
rcl
mov
rclb
inc
mov
popa
cmp
ficoms
fstpt
es
jo
inc
clc
xchg
sbb
nop
movsl
pushf
push
sbb
testb
inc
adc
xchg
cli
aam
ss
dec
js
pop
shl
cmp
ljmp
pop
sbb
loop
fcmovne
clc
jae
jae
inc
js
fidivrs
fcomps
mov
mov
pusha
ffree
fists
lret
sti
scas
and
aam
xlat
push
sarl
pop
testl
icebp
subb
xor
int
mov
ret
mov
repz
push
fdivs
mov
xor
jne
jg
mov
bound
adc
push
mov
fidivrs
in
gs
imul
add
test
xchg
sbb
inc
pop
sub
cmpsb
dec
inc
mov
das
imul
into
push
bound
std
add
jno
xchg
ss
add
push
mov
pop
arpl
scas
out
adc
popl
dec
mov
leave
aaa
stos
scas
jnp
add
or
cltd
and
push
mov
and
cltd
mov
cmpsb
lcall
enter
fdivrp
out
mov
shll
add
outsl
pop
dec
mov
jp
dec
jecxz
add
mov
imul
push
mov
cltd
or
jmp
dec
repnz
stc
jbe
dec
jecxz
xor
inc
dec
mov
lock
sbb
or
adc
inc
cmp
dec
outsl
leave
test
dec
push
ljmp
sub
int
stos
sbb
pop
push
int
cmp
sbb
lock
mov
sbb
adc
shrb
sub
sbb
ss
inc
test
xchg
or
pop
mov
shrl
jbe
mov
cmp
push
out
cli
pusha
sti
movsb
movsl
pop
push
push
push
data16
xorl
in
lahf
aad
shll
xor
pop
out
jb
add
mov
test
add
lods
xor
jbe
lods
mov
push
jmp
sbb
mov
dec
push
insl
insb
add
cmp
shr
test
mov
cmpsl
push
test
mov
mov
push
sub
out
jp
dec
push
ja
arpl
ret
inc
push
pop
jecxz
mov
push
mov
inc
in
jge
fwait
out
adc
addr16
push
lock
movsl
lds
pop
inc
push
lret
loopne
ret
fbld
and
xorl
mov
and
inc
notl
inc
lahf
int3
pop
mov
pop
xor
xor
pop
cmpsb
inc
pop
nop
lods
sti
inc
jmp
mov
out
cmpsl
mov
rol
test
sti
scas
insl
aaa
stos
push
xor
pop
jns
mov
jle
fs
xchg
dec
xchg
adc
mov
sahf
in
xchg
mov
bound
mov
outsb
insl
fsubrs
sbb
xchg
js
adc
mov
mov
loopne
fwait
loope
add
daa
mov
icebp
cmp
mov
dec
mov
lret
pusha
imul
jmp
push
mov
ret
filds
lcall
inc
movsl
out
jb
ficompl
or
call
sahf
pop
jge
pusha
out
fnsave
imul
sti
xchg
test
lret
cld
fnstenv
push
idiv
int3
xor
cmc
cwtl
pop
add
and
in
shll
loopne
mov
daa
jmp
pop
or
ret
outsb
repz
daa
js
test
scas
icebp
cmp
xchg
insl
pop
mov
and
xchg
xchg
sbb
mov
into
cmpl
out
ljmp
dec
js
dec
sub
jecxz
repnz
lds
xor
lret
sbb
add
jl
data16
adc
mov
sysenter
pusha
call
enter
xlat
add
dec
icebp
sub
outsb
sahf
cltd
mov
enter
sbbb
leave
repz
jecxz
xchg
test
mov
sbb
inc
xlat
lods
clc
xlat
jecxz
or
mov
pusha
or
fsubrs
mov
testb
jno
addr16
ds
orb
test
movb
xchg
sub
cld
mov
out
insb
add
mov
stc
lea
lock
nop
add
ja
mov
les
mov
mov
fisttps
sbb
sbb
jnp
in
les
les
dec
int3
lret
rol
jo
cwtl
mov
movsl
in
xchg
sbb
lea
or
stos
in
jl
imul
inc
jl
mov
push
pushf
test
aad
adc
and
sub
stc
cmpsb
adc
jo
cmp
and
xlat
dec
movsl
inc
decl
jnp
pop
scas
inc
dec
jbe
lcall
and
shlb
orb
push
cs
aas
int3
jae
jecxz
pop
sub
insl
js
rep
shll
or
xchg
rcll
pusha
stc
push
fadds
int
sbbb
sub
leave
dec
mov
or
jecxz
out
mov
sub
mov
cmp
fmull
lods
and
push
mov
jmp
inc
xlat
sbb
pop
cmc
pop
mov
add
add
cmp
insl
mov
repnz
push
fsubs
or
jecxz
jp
xchg
insb
or
xchg
call
sub
into
add
rcll
jne
push
hlt
lret
les
mov
fildll
adc
mov
outsl
sub
negl
out
push
jmp
andl
xchg
jecxz
out
and
pop
adc
xchg
or
dec
test
and
adc
xchg
addb
xor
push
dec
filds
in
data16
popa
mov
insl
std
daa
mov
mov
std
in
ds
out
push
popa
shlb
rorb
mov
es
rcrb
mov
popf
das
adc
fs
clc
scas
pop
outsl
rcrl
jno
repz
and
fwait
stos
dec
sti
xchg
jl
cli
cmp
ret
jns
mov
sbb
call
push
cmpsb
jae
lret
mov
pop
lret
jge
test
ss
mov
into
jb
inc
and
sbbl
js
ljmp
sti
stc
lds
in
imul
fildl
mov
sub
dec
pop
push
mov
xchg
adc
xor
fldenv
and
scas
fnstcw
pop
inc
mov
decl
push
pop
and
sbb
pop
bnd
cmp
icebp
icebp
pop
repz
add
cmp
pop
dec
les
xchg
adc
push
int
mov
mov
outsb
xchg
and
lods
imulb
add
int3
pop
daa
sahf
orl
sub
cltd
push
movswl
pop
inc
cltd
sub
push
pop
or
sub
lods
add
jmp
and
test
cmc
xchg
pop
das
das
add
imul
and
mov
dec
out
sub
in
xchg
mov
mov
mov
aas
mov
adc
lahf
lret
push
sbb
dec
aam
lock
dec
jecxz
std
mov
sbb
mov
xor
outsl
mov
pop
in
add
xor
loopne
xchg
adc
cltd
es
lret
lret
push
xchg
cmp
scas
jbe
je
iret
fisubrl
or
cwtl
cs
pop
das
jle
mov
fisubrl
jg
enter
lea
ret
jge
xchg
bound
cmp
jb
dec
mov
shll
mov
xor
sub
ffreep
js
pop
add
sbb
pop
dec
loop
sbb
sarb
add
mov
inc
call
add
jbe
xchg
add
popf
hlt
int3
jns
jno
push
pop
adc
clc
lahf
in
mov
pushf
mov
outsl
jbe
sbb
notl
lahf
cmp
frstor
lret
int
pop
cs
arpl
inc
add
ds
shr
and
sbb
mov
outsl
pushf
loop
jecxz
mov
das
inc
add
ss
loop
adc
stos
jb
popf
cmpsl
adc
adcb
jp
lret
pop
lds
insb
outsl
in
pop
int3
pusha
idiv
jl
mov
push
add
dec
das
aam
dec
pop
pop
scas
adc
pushf
arpl
fsubs
jg
jp
in
test
add
addl
and
jne
cld
repz
mov
push
shrl
shlb
or
out
sub
mov
xchg
mov
lcall
mov
mov
pop
push
int3
and
ja
into
sub
popf
mov
inc
aad
pushf
frstor
cli
cmp
cmp
sbb
lods
xchg
scas
sub
out
push
jmp
mov
or
inc
cmp
addr16
pop
add
aam
outsl
sub
test
test
add
scas
popa
dec
aas
mov
gs
inc
inc
ja
sbb
fiaddl
xchg
push
leave
adc
xorl
fcomp
je
imul
aas
nop
daa
gs
mov
mov
and
xchg
fsubrs
mov
pop
cs
pop
add
in
cmc
mov
or
ret
pop
cmp
hlt
imul
or
js
test
xchg
xor
iret
ss
je
or
insl
mov
pop
insl
loopne
mov
vcvtpd2psx
sbb
add
add
add
mov
jle
xor
xchg
xor
inc
inc
pop
mov
test
dec
fadds
jmp
jecxz
jmp
orb
jnp
movl
and
push
mov
jno
loop
cmpsb
lock
mov
out
rol
dec
cli
lahf
out
sahf
mov
mov
inc
cmp
cli
sahf
out
dec
sbb
jo
jmp
mov
out
stc
jmp
mov
xor
push
ret
jle
cmpsb
jns
addb
sub
das
idivl
clc
sahf
dec
pop
rcrb
pop
or
and
sub
sub
test
fbld
fldt
aas
or
sti
push
mov
pushf
pop
insl
into
cmp
mov
jno
cmc
sub
ljmp
stos
icebp
cmp
pop
out
xor
inc
or
mov
aas
sbb
loope
pop
repnz
mov
pop
imul
mov
mov
mov
lock
xor
js
or
push
movsl
and
xor
adc
loopne
dec
gs
dec
sbb
pop
and
pop
mov
and
repz
scas
sub
xchg
adc
xlat
shr
sbb
mov
adc
arpl
mov
mov
pop
mov
xor
inc
cmpsl
xor
or
rol
loop
and
dec
fiaddl
imul
pop
clc
pop
jl
sub
lret
add
cmp
int
addr16
ret
xchg
push
aam
adc
push
jne
adc
test
outsb
xchg
adc
lock
cmp
sub
dec
in
idivl
mov
mov
push
or
dec
fdiv
jg
adc
jg
mov
pop
data16
push
sbb
add
inc
movsl
mov
stos
loop
ds
dec
fsubp
mov
xor
jecxz
inc
mov
ror
fdivrl
fdivl
pslld
jl
push
les
sahf
popa
icebp
jge
mov
sahf
das
mov
jb
pop
out
xchg
mov
inc
sbbb
mov
push
mov
mov
xor
test
and
inc
data16
shll
and
push
fistps
push
inc
in
aas
jg
sbb
pop
shll
and
adc
xor
xlat
or
dec
aaa
adc
in
nop
imul
into
lcall
scas
and
adc
stos
add
mov
stc
jecxz
shr
add
xor
stc
dec
sub
xor
cmp
push
scas
es
sbb
push
test
dec
cmp
mov
xchg
test
xchg
jmp
dec
in
add
xchg
adc
xchg
pop
sahf
jae
xchg
dec
dec
push
test
fcomi
sub
test
lret
jae
das
js
mov
xchg
and
not
in
sub
scas
jb
adc
jmp
aam
adc
inc
mov
sbb
lret
jb
aam
and
mov
jecxz
adc
mov
fisttpll
movsl
xchg
iret
pop
push
mov
in
arpl
scas
inc
or
mov
stos
push
sub
adc
push
mov
mov
jno
xchg
cltd
into
and
in
adc
sub
daa
mov
daa
rcrl
pusha
xor
lcall
xchg
lahf
jb
lds
jne
out
int3
pop
jae
or
ss
adc
pop
mov
jo
jecxz
mov
xor
mov
out
mov
xchg
arpl
lds
ret
and
and
xor
daa
out
inc
test
sbb
fdivl
lds
jmp
push
fdivr
idivl
cmpsl
out
inc
pushf
xchg
shlb
rcr
mov
mov
adc
mov
inc
je
lret
sbb
mov
and
in
fistpl
push
addl
test
scas
mov
ss
jge
mov
popa
xor
adc
mov
dec
lods
mov
shll
xor
cmp
test
jae
sbb
bound
sub
imul
mov
mov
sbb
repz
test
es
xor
pop
cli
shl
sbb
fisttps
xor
cmp
xchg
and
mov
pushf
sbbb
test
sahf
popa
bound
icebp
bswap
add
sbb
aad
addr16
mov
pop
jae
jle
cmpsb
jl
and
pop
cmp
adc
mov
and
xchg
push
pop
sub
mov
je
inc
pop
and
mov
outsb
adcl
loop
xchg
leave
sub
outsb
aam
daa
mov
aad
inc
sbb
scas
and
fwait
cmpsl
pop
popf
mov
popf
mov
and
out
inc
pusha
sbb
mov
aas
push
mov
xor
cmp
jg
push
es
cmp
out
and
int3
fcoms
shll
pop
imul
clc
pushf
add
sub
stos
inc
pop
in
mov
bound
xchg
js
or
dec
cmp
aad
pop
xchg
pushl
outsl
xchg
cltd
scas
add
jne
shrb
sbb
push
dec
jmp
inc
cs
mov
gs
mov
scas
mov
dec
dec
jbe
je
xor
les
adcl
sbb
mov
xor
pop
xchg
popa
push
mov
sbb
inc
pushf
push
aas
mov
rcrl
rcl
mov
aam
leave
int
dec
jne
je
int
sub
sub
mov
mov
out
pop
xchg
xchg
cwtl
jmp
xor
call
mov
cld
push
mov
lahf
adc
into
das
mov
add
fwait
in
aas
fstl
mov
mov
dec
shl
int3
inc
adc
std
add
xor
lds
sarl
cs
cmpsb
shrl
sbb
dec
popf
ror
rorl
inc
cmpsb
cmp
pusha
jns
pop
rcrl
out
lret
xor
cmp
and
iret
jl
enter
sub
js
ret
in
rolb
test
or
icebp
sbb
std
data16
sbb
cwtl
cs
nop
mov
lahf
sbb
repz
xchg
lea
adc
les
out
fistpll
subl
mov
adc
mov
lahf
insb
addb
fidivl
and
aad
imul
pop
sbb
adc
pop
fs
ss
pushf
ss
or
lret
repz
dec
mov
cmpb
jl
mov
adc
xor
mov
popa
divl
mull
mov
mov
fisubrl
dec
inc
jle
mov
popa
test
popa
repnz
idiv
fwait
scas
lcall
cmpsb
pop
sub
mov
mov
mov
dec
shl
shr
data16
fwait
bound
xchg
mov
xchg
sub
add
cmc
out
subl
insl
movsb
add
pop
push
or
mov
adc
mov
pop
shll
xchg
rorl
cltd
shl
xor
aam
cmp
push
mov
repnz
adc
xchg
push
mov
adc
mov
jmp
andl
loope
mov
js
or
and
enter
mov
fdivl
mov
adc
leave
mov
and
sbb
push
push
xor
scas
or
dec
lods
inc
push
sub
jge
stos
sub
pop
pop
dec
pop
sub
clc
pop
call
imul
cmp
insl
shlb
outsb
dec
loopne
xchg
mov
jmp
cmpsb
ljmp
sbb
sarb
rclb
jecxz
pop
das
jae
xchg
jmp
add
ret
hlt
mov
lahf
pop
xor
outsb
aaa
stos
cmp
insb
aaa
mov
jae
lods
xchg
adc
pop
xchg
ja
xchg
jae,pn
les
pop
ds
dec
jns
jp
outsl
or
sub
pop
lret
repnz
fildl
xor
in
fsts
imul
repnz
daa
lahf
jo
movsl
int
cwtl
int3
sbb
xchg
mov
add
fidivl
cli
dec
pop
push
mov
push
xor
add
adc
mov
mov
rorb
lods
or
inc
out
inc
stos
mov
shlb
test
ds
and
sbb
and
stos
and
pushf
dec
mov
dec
jmp
fimuls
xchg
sub
mov
jnp
mov
clc
pop
inc
lods
movsb
cld
mov
loope
jb
cltd
out
fnsave
xchg
jmp
dec
pop
dec
xchg
jp
pop
and
push
push
and
outsb
aam
jnp
out
xor
movsl
xor
outsb
sub
lahf
aam
movsb
mov
xor
hlt
dec
pop
add
addr16
cld
fcoms
outsl
out
pop
or
je
aas
rol
xchg
sub
jb
cwtl
cmpsl
inc
xor
fisubrs
mov
and
sbb
push
cmp
inc
icebp
dec
or
rcll
popa
pop
lcall
repnz
enter
test
addr16
cmp
cld
xor
cmpsb
out
out
repnz
insl
add
adc
adcl
and
setne
xchg
or
mov
testl
push
inc
aaa
aas
pop
hlt
into
push
xlat
je
cs
push
inc
pop
addr16
pushf
fidivl
sbb
jle
mov
cmp
subb
leave
dec
xlat
repz
push
or
sbb
cmp
cld
pop
or
cmp
cmp
int3
mov
andl
test
into
jp
push
cmpsl
lock
xor
sahf
xor
jno
pop
jp
adc
and
out
dec
inc
sbb
mov
push
or
shr
push
push
jp
mov
mov
fdiv
xor
mov
cmc
add
push
mov
frstor
cmpsb
cmpl
mov
sub
jp
jecxz
aas
mov
adc
mov
pop
testb
push
mov
pop
incl
xlat
jmp
fstl
imul
inc
jbe
cwtl
cmp
dec
into
push
loop
sbb
jb
sub
mov
rclb
pop
or
arpl
xchg
pusha
add
ja
test
lret
mov
pop
scas
fs
and
fisttpl
sub
test
xlat
mov
fs
leave
jno
and
mov
mov
aad
daa
fnsave
or
in
incb
fcmovu
imul
and
inc
push
fucom
cmp
imul
outsl
mov
push
xchg
cmp
mov
adc
xor
and
jb
sti
fmulp
xor
xchg
inc
out
sbbb
sbb
lods
sub
inc
fisubrl
inc
push
xchg
imull
lcall
sub
sahf
stos
inc
cltd
sahf
mov
in
stos
mov
xlat
sub
pop
adc
in
call
into
jge
fs
insl
sbb
mov
add
rcrb
data16
cltd
cmp
xor
imul
add
add
lea
push
shlb
pop
jp
loopne
cmc
movntss
cmp
xchg
mov
xor
xchg
sbb
mov
mov
arpl
add
xor
sub
lahf
sub
cmp
mov
inc
in
xchg
sarb
mov
pop
push
cmp
sub
sahf
pop
lock
mov
lahf
or
cmp
push
mov
pop
das
add
pop
inc
dec
and
sarl
or
dec
pop
out
fnsave
push
insl
push
push
insb
jno
push
sahf
in
mov
sbb
mov
and
cmp
mov
stc
xchg
jbe
andl
int
adc
aam
out
and
cli
xchg
gs
pop
mov
xchg
jmp
and
jg
inc
push
or
xlat
loopne
negb
mov
insb
imul
cmp
pop
lock
mov
inc
inc
add
popa
testb
in
sbb
inc
or
pop
pop
cmpsb
imull
nop
imul
lea
push
repnz
xor
adc
lcall
add
repnz
or
or
adc
addr16
mov
dec
mov
pusha
andb
pop
mov
add
cmp
push
stos
inc
pusha
or
pop
jle
daa
insb
js
in
xchg
in
or
add
jae
imul
cltd
mov
jle
leave
arpl
aad
fisubrl
leave
and
out
stos
and
mov
xor
and
nop
pop
mov
cvtps2pd
movsl
aas
cwtl
das
lods
push
lret
dec
loop
outsb
mov
outsb
imul
cmc
or
mov
add
repz
sbb
cmovae
push
clc
dec
imul
fwait
adc
aad
add
test
or
lds
cli
dec
fucomip
pop
insb
lret
jecxz
lret
jnp
movntq
stos
add
mov
add
sub
test
pop
mov
sbb
mov
gs
pop
push
js
jp
sub
leave
xor
mov
orl
xor
js
jbe
mov
sbb
xor
lret
movsb
ja
out
test
xchg
sarb
filds
push
cmp
add
inc
hlt
fwait
sbb
cmp
ss
sub
pop
add
in
and
dec
jmp
outsb
into
sub
xchg
cmc
xor
repnz
cmp
sbb
push
cmc
aaa
mov
aaa
test
into
adc
int
mov
repz
push
jo
cmpsl
divl
and
in
movsl
ret
jp
sbb
xchg
adc
iret
jo
cmc
pop
jbe
mov
sbb
adcb
cmc
pop
inc
repnz
ds
mov
insl
jnp
scas
cmp
je
insl
lret
mov
and
mov
cmc
and
stos
push
nop
ljmp
test
push
in
xchg
aam
mov
addl
ds
xor
fisubrl
cmpsl
aaa
push
shll
fisubrl
jb
dec
mov
aad
cmp
fistpl
repz
scas
loope,pn
add
mov
int3
mov
sbb
repnz
push
cmpsb
sub
aad
adc
and
mov
loope
movsl
push
adc
fisttpll
mov
mov
push
in
cmc
lret
insb
shr
scas
cs
stc
stos
enter
mov
xchg
movsl
daa
mov
fdivl
sbb
jo
push
jmp
bound
sub
or
enter
dec
aad
sbb
pop
movsb
call
ss
imul
add
cmp
mov
ror
add
stc
and
and
xchg
mov
sbbl
jb
or
inc
ja
aam
push
xor
add
nop
or
stc
cmp
fdivrl
sahf
sbb
jbe
stos
jg
scas
ljmp
or
adc
das
sub
cs
jle
lcall
outsl
insb
mov
lods
leave
sub
stc
and
inc
mov
jno
xor
adc
test
icebp
aad
dec
mull
cmp
cmp
inc
and
dec
jecxz
mov
add
popa
stos
ret
jle
or
int
cmp
lcall
pop
adc
mov
insl
sbb
mov
cmpsb
imul
ror
out
sbb
and
outsb
mov
and
std
lods
aad
popf
popa
enter
inc
mov
ds
mov
dec
adc
xchg
in
or
popa
clc
add
scas
xor
fstps
jmp
ficomps
or
xchg
mov
inc
fwait
ds
std
in
and
in
xlat
jmp
jmp
popf
daa
negb
movsl
mov
imul
loop
dec
loopne
xchg
add
insb
pop
inc
dec
in
inc
and
aaa
and
mov
jno
sub
push
insb
and
dec
int3
xchg
into
sbb
or
popf
adc
popa
rorb
ret
push
call
test
jl
xor
dec
jbe
int
shrl
inc
aas
jecxz
dec
loope
and
dec
xchg
nop
jecxz
mov
adc
cmpsb
xchg
lahf
mov
in
pop
repz
push
mov
mov
pop
cmp
lcall
jmp
dec
aam
insl
jae
popf
sub
mov
jle
bswap
loopne
and
in
lea
push
mov
cmpsl
jbe
sbb
fcomps
pop
or
inc
push
xchg
or
call
sbb
and
stos
dec
int3
cmpsb
inc
push
add
into
ss
xchg
lcall
adc
shll
cmp
pop
push
jle
or
sahf
fcompl
pushf
repz
jns
mov
and
sbb
loopne
xor
xchg
dec
pop
popf
mov
or
fisubl
mov
fldt
sbbb
jnp
out
or
sub
std
je
leave
push
in
stos
add
mov
sub
dec
jnp
mov
ret
jns
bswap
loop
call
xchg
mov
pop
ja
pop
ja
jmp
out
repnz
das
int
add
rorb
cmp
xor
push
pop
loopne
ds
stc
loopne
lds
cwtl
pop
out
mov
insl
xor
aas
mov
ret
mov
sbb
stos
push
mov
sbbl
jnp
movsb
aaa
enter
mulb
xchg
sbb
mov
mov
mov
dec
rcl
call
xchg
rcl
outsb
xchg
divb
mov
mov
and
ret
test
pop
xor
or
lods
push
jmp
cmp
int
lds
notl
and
nop
sub
push
insb
adc
mov
arpl
mov
xor
add
inc
pop
orb
cmp
popa
jecxz
ja
jl
loope
xlat
outsb
jo
jecxz
lahf
xchg
cmc
or
shrb
pop
xchg
inc
cmpsb
dec
xor
popf
and
push
ret
arpl
testb
jg
stos
ds
shl
imul
pop
rorb
sahf
inc
mov
xor
into
pusha
lods
aas
cmp
movsb
or
pop
inc
adc
mov
pop
daa
dec
loop
data16
xor
cld
or
pop
pop
push
inc
xlat
pop
jb
xor
sti
pop
push
test
lret
ds
testl
adc
xchg
ds
sti
sub
jp
and
pop
mov
stc
and
xchg
subb
jecxz
or
adc
pusha
ds
outsb
mov
out
movsb
or
test
repnz
in
rorb
mov
int3
popf
cmp
cmp
cmp
fsts
or
xchg
scas
sub
adcb
push
mov
dec
add
cwtl
call
addb
sbb
ret
int
pop
hlt
mov
fnstsw
or
cltd
xor
mov
shl
mov
cmpsl
pop
pop
mov
dec
cmc
push
movsl
sub
mov
dec
in
add
jbe
gs
insl
mov
out
inc
xchg
nop
mov
push
push
mov
pushf
add
shrb
test
dec
ret
push
jno
add
adc
and
cmp
cmpsb
or
bound
pushf
outsl
repz
cltd
std
push
cld
shrb
and
mov
hlt
mov
lcall
sahf
gs
addl
arpl
cmp
out
data16
and
mov
xor
xchg
cmp
pusha
scas
jp
loopne
scas
and
mov
jns
mul
add
pusha
sub
rclb
pop
jae
orb
sub
addr16
pop
pop
or
mov
inc
fs
xchg
rol
ret
adc
mov
cltd
and
push
or
lahf
ss
sbb
dec
sbb
fbstp
jp
out
xchg
mov
mov
arpl
jb
push
sbb
test
or
sti
xchg
sub
lcall
aaa
imul
or
push
rorl
mov
pop
add
es
pop
ljmp
push
fsubrl
push
daa
adc
loopne
sbb
mov
dec
sbb
push
icebp
mov
nopl
aam
push
sbb
or
jb
xchg
jp
pop
sub
push
insb
inc
arpl
xchg
lret
iret
add
test
andb
adcl
inc
mov
mov
jmp
or
adc
xor
cmp
push
shll
dec
es
jge
fcompl
xchg
pop
xchg
iret
fistpll
test
adc
cmpsl
sub
push
testb
aaa
rcrb
dec
pop
roll
adc
push
jb
lcall
out
xor
mov
cli
subl
dec
dec
xlat
push
out
add
jb
movsb
cwtl
pop
or
int3
rcrl
in
xor
cmpsb
clc
sahf
adc
mov
sbb
xchg
push
test
xor
rol
push
idivl
pop
mov
mov
es
aaa
stos
add
xor
sub
xchg
clc
aaa
bound
xchg
cmp
mov
loopne
mov
inc
iret
dec
mov
push
insl
adc
xchg
sub
or
push
dec
fimuls
icebp
pause
leave
push
push
dec
push
jle
inc
imull
aaa
subb
mov
mov
int3
jae
movl
js
inc
mov
dec
jp
insb
out
outsb
cwtl
mov
xchg
out
cltd
stos
sbb
pop
jbe
mov
test
test
add
test
jo
out
daa
leave
inc
mov
movsb
cmp
repz
sbb
addr16
rcrl
pop
mov
pop
pop
out
scas
jbe
into
jns
orb
or
dec
outsb
mov
out
inc
adcb
cmpsl
xchg
mov
adc
jno
lret
int
scas
jmp
into
stos
jge
mov
divb
pusha
out
ja
pop
in
jp
pop
in
pop
stos
jmp
xchg
xor
or
adc
es
popf
out
pusha
jmp
out
stos
pop
leave
cmp
sbb
pop
xchg
les
cmpsl
into
jne
fimuls
cld
imul
mov
data16
ss
icebp
and
ljmp
xor
lea
mov
mov
shr
xchg
mov
mov
test
inc
shll
sub
push
xor
aad
cmpsl
shl
mov
xchg
mov
pushf
push
scas
loope
fistps
inc
pusha
fxch
movsb
repz
push
xor
bts
add
addr16
xchg
or
pop
das
mov
mov
push
aas
lods
call
es
pop
in
test
sbb
pop
or
mov
pop
insw
scas
sbb
data16
mov
sbb
xchg
cmp
fxch
mov
sub
popa
xchg
aaa
push
cmpsl
mov
inc
and
in
lcall
sbb
sahf
sub
lret
pushf
and
gs
popa
pop
call
rolb
dec
fisubrl
insl
subl
add
movsl
scas
xchg
cmp
aam
jle
push
inc
pop
mov
rcrl
daa
push
mov
sbb
lret
and
or
fwait
or
and
jp
fsubl
lods
add
mov
pop
arpl
pop
xor
sbb
repz
mov
inc
cvtdq2ps
mov
aad
lea
sti
lret
lock
lock
inc
in
enter
int
mov
iret
pop
dec
or
jle
cwtl
dec
rclb
pop
push
lock
cs
in
dec
add
les
out
cs
dec
pop
into
inc
nop
imul
mov
sbb
out
lock
in
push
fwait
daa
int
xchg
jg
dec
cmp
popa
mov
xchg
jns
dec
in
out
pop
movsl
lock
jo
push
repz
sub
loop
addr16
cmp
add
pop
xor
popa
xchg
inc
stc
enter
or
sarl
xlat
push
mov
pop
les
jmp
cmp
xor
cmc
or
inc
and
mov
mov
mov
out
sub
inc
push
jae
or
and
or
adc
out
sbb
clc
xchg
xor
dec
dec
mov
bound
mov
popa
lret
sahf
stos
and
ljmp
in
push
shl
cltd
jbe
lret
or
in
out
cmp
xor
ficomps
mov
test
outsl
or
jne
push
mov
push
jge
idivb
ret
andb
movsl
in
es
or
cld
das
xor
dec
sbb
ds
and
push
and
xchg
pusha
lea
mov
out
loop
jb
lock
rcll
sahf
jg
jmp
fwait
xor
push
std
xchg
jnp
clc
rol
in
pop
xor
gs
daa
cmpsb
adc
ss
pop
or
jne
fcoms
mov
sub
fwait
ljmp
hlt
enter
mov
aaa
jne
and
gs
imul
xchg
xchg
das
cltd
test
sub
aaa
push
les
mov
idivl
inc
or
inc
or
and
fidivs
mov
incb
jne
nop
in
push
lahf
mov
and
or
jmp
mov
mov
ljmp
add
scas
dec
mov
paddq
pop
pop
shrb
cwtl
je
mov
cmp
mov
arpl
adc
sbb
mov
rorl
scas
pop
sti
pop
sar
and
scas
data16
push
repnz
das
mov
adc
clc
adc
loope
push
or
push
sbb
and
arpl
mov
or
inc
jnp
sub
xor
push
aam
mov
adc
popa
cwtl
pusha
dec
hlt
inc
mov
cmpsl
sub
adc
aas
lds
aaa
pop
in
push
je
dec
icebp
lock
mov
xchg
pop
or
stos
pusha
hlt
sbb
xchg
lock
cmp
nop
rolb
inc
aaa
mov
aad
add
lret
and
sbb
imul
insb
and
stos
repz
jno
or
cmp
scas
icebp
jle
sub
fcomps
adc
push
js
jne
lds
iret
or
in
stos
add
cmp
xor
mov
fiaddl
clc
dec
dec
shl
or
popa
jns
sub
pop
mov
and
add
xchg
das
push
test
cld
mov
or
mov
jle
shlb
inc
xor
int
out
push
lods
sub
scas
lods
mov
mov
fisubrl
sub
aas
scas
mov
jl
sti
lcall
ss
push
inc
fmull
jmp
popa
xor
lcall
jmp
shlb
addr16
and
pop
mov
int
stos
sbb
test
iret
and
inc
or
mov
aad
cltd
xchg
cmp
mov
sbb
andb
es
xchg
sub
test
cld
sahf
xor
sbb
loopne
inc
dec
sti
sub
push
js
test
mov
lods
lods
inc
push
sub
mov
dec
xchg
enter
push
loope
sub
push
sarl
popa
rorl
popa
jl
icebp
sbb
push
mov
cmpsb
scas
call
inc
mov
or
clc
lock
je
fidivs
pop
shrl
nop
pop
shrl
rorl
inc
mov
test
fimuls
adc
inc
jo
fadd
ja
pop
jecxz,pn
sub
out
and
cmp
dec
push
insl
add
loop
pop
push
adcl
push
call
cmp
cltd
inc
sbb
add
pop
icebp
jmp
imul
int3
imul
pop
mov
arpl
mov
scas
sbb
jmp
push
inc
sbb
sbb
stc
shr
sub
mov
sbb
repz
dec
cwtl
jb
and
lods
ljmp
sub
call
fmuls
mov
shrb
and
xchg
pop
and
negb
out
push
mov
shll
mov
xchg
aad
pop
pop
mov
insl
adc
mov
jmp
mov
pushf
pusha
jnp
dec
cmp
xor
pop
jb
pop
out
rcrl
jmp
or
scas
ret
ds
xchg
mov
jno
cli
push
mov
mov
sub
je
xchg
push
jmp
or
stc
dec
jp
call
xchg
push
ja
xchg
sbb
cmpsl
popf
jg
pop
jp
jo
ss
cmc
test
lock
in
ret
push
cmp
jbe
rcrl
mov
dec
jns
dec
pop
aaa
push
push
mov
add
jecxz
or
xchg
lods
and
data16
jle
sbb
sbbb
and
jl
aam
inc
call
cmpsl
dec
jae
lahf
mov
out
inc
or
cs
cmp
ret
sub
jo
ret
mov
jbe
pop
and
jp
into
adc
stos
inc
out
sbb
fcompl
ds
mov
cs
mov
sbbb
clc
std
cltd
loopne
mov
adc
cs
xlat
imul
pushaw
push
or
movsl
icebp
mov
or
xchg
mov
mov
or
icebp
mov
imul
jp
int3
fsub
sub
sbb
inc
pop
and
lea
push
pushf
lret
sbb
fnstenv
cmp
andl
js
pop
mov
jbe
aad
jbe
mov
jae
inc
lods
push
das
add
into
lods
outsl
arpl
std
or
lods
ljmp
jb
adc
scas
aam
mov
pop
xor
popa
repnz
cmp
push
lahf
out
mov
xor
push
stos
mov
call
rorl
std
sbb
lods
fwait
jne
xchg
jns
push
add
js
sbb
rclb
mov
int
add
xchg
lds
shrl
mov
imul
lock
push
mov
pop
cmp
or
cmp
pop
adc
and
dec
sbb
bound
cmpsb
imul
outsl
stc
dec
push
call
inc
scas
shll
dec
add
sub
xor
fnsave
outsl
cmp
icebp
cli
test
repnz
mov
push
cltd
icebp
inc
fildl
outsb
call
int
sbb
lea
sarl
scas
xor
filds
lret
mov
xchg
xor
push
mov
cmpsl
aas
or
aaa
cltd
mov
dec
fwait
xor
push
mov
mov
mov
lods
inc
fsubs
push
cmp
dec
movsb
out
jns
push
loopne
js
or
xor
push
xchg
jmp
pop
mov
cwtl
sti
xchg
xor
loope
mov
sub
insl
das
sahf
into
clc
inc
add
aam
fisubrs
push
out
out
jno
rep
aad
subl
jns
sub
xlat
push
mov
aas
into
jge
out
mov
das
cld
xchg
bnd
fldcw
movsb
mov
lods
daa
lret
push
rcrb
push
clc
stc
add
int
pop
dec
xor
adc
mov
mov
mov
ja
fs
mov
in
fildll
pusha
cmpsl
jp
adc
mov
add
incb
test
in
cmc
lcall
scas
in
mov
or
or
sarl
gs
mov
std
femms
sbb
xchg
and
rsqrtps
jmp
xor
nop
pushf
jg
and
mov
xor
cmp
lods
mov
incl
lock
mov
aad
daa
divl
ficompl
push
mov
pop
out
xchg
adc
aam
lds
dec
fsts
lretw
push
xor
mov
xchg
mov
pop
cmp
pop
aam
shll
ja
dec
test
pop
mov
dec
push
xor
imul
xor
js
test
jbe
scas
orb
and
mov
sbb
jg
ljmp
popa
aam
shrl
cs
std
aam
cmp
btc
mov
daa
mov
mov
lock
mov
add
and
loopne
in
sub
out
js
sub
nop
add
test
cmp
sahf
dec
fsts
clc
negb
loop
adc
adc
add
lcall
decb
jle
or
cmp
or
cwtl
mov
fnstenv
xor
cmp
xchg
mov
fwait
lods
icebp
sbbb
popa
sti
ljmp
lahf
mov
adc
and
ficoms
dec
pop
cmp
movsl
icebp
push
mov
or
xchg
sub
mov
arpl
sub
enter
dec
add
pusha
push
rclb
ffree
les
jmp
mov
add
mov
jmp
test
dec
leave
dec
add
dec
ljmp
pusha
test
cli
pushf
ds
dec
lahf
or
cld
loope
es
jg
xchg
stos
lock
ss
sarl
cmpb
dec
lahf
ja
hlt
push
in
shl
sbb
or
dec
mov
aas
rep
dec
ror
xchg
stos
inc
mov
test
cwtl
test
dec
add
jge
mov
inc
popf
idiv
mov
shl
xchg
sub
lds
ljmp
add
inc
lock
adc
mov
insb
nop
xchg
push
fistl
mov
mov
xchg
jg
dec
add
aam
push
shrb
repnz
loop
stc
gs
mov
add
dec
lcall
and
testb
inc
js
jbe
mov
movsb
cmp
or
aaa
subl
aad
mov
faddl
repz
inc
fs
gs
mov
les
test
aaa
fld
xchg
jns
mov
imul
sahf
push
push
mov
xchg
mov
clc
call
int
outsl
mov
or
mov
push
inc
pop
ljmp
ss
rol
adc
adc
xor
fcomip
mov
pop
sbb
movsb
shrb
adc
adc
or
mov
lcall
xchg
xor
mov
sbb
scas
pusha
xchg
daa
scas
call
scas
inc
add
int3
insl
int3
pop
faddp
out
mov
or
movsl
sbb
test
inc
push
mov
sbb
scas
jecxz
mov
push
movsb
jle
inc
pop
xor
testl
xor
sbb
inc
fdivs
add
jecxz
pop
imul
std
mov
xor
cmp
adcb
or
ja
or
xor
jg
cmp
push
xchg
cmp
fiaddl
mov
cli
bound
sbb
fldpi
cmpl
adc
in
sbb
mov
dec
push
movsl
add
add
les
pushf
xor
js
xlat
lea
xor
leave
bound
mov
push
es
mov
sbbb
pop
enter
mov
aas
xor
sahf
bound
popa
xor
push
imul
dec
lahf
int3
push
inc
arpl
ficompl
mov
hlt
push
fidivrl
pushf
xor
dec
stc
cmpsb
sti
cmovo
and
pop
icebp
adcb
pop
push
pushf
adcb
es
mov
xlat
iret
jo
inc
scas
or
imul
mov
pop
jge
sbb
mov
pop
cmpsl
pop
or
push
mov
adcb
lret
insb
call
fs
mov
insl
jbe
sub
je
mov
mov
loopne
push
out
xchg
xchg
xor
idivb
aad
inc
pcmpeqd
fisttpll
shlw
xchg
cli
push
cld
inc
xor
add
cmp
add
or
inc
push
and
adc
clc
fstl
stos
jmp
andb
into
push
sub
in
mov
flds
adc
outsb
or
je
mov
mov
mov
dec
fdivl
fmuls
dec
movl
les
sbb
sahf
adc
int3
sti
jbe,pn
pop
pop
fwait
pop
insl
aam
mov
into
rcl
or
shll
lds
adc
sbb
mov
cli
and
inc
popl
mov
xchg
xchg
mov
push
lods
sbb
lods
sub
push
push
out
push
jecxz
aam
js
mov
rcrl
icebp
into
mov
lods
push
sub
or
xlat
adc
rolb
mov
add
lods
ss
roll
jae
adc
inc
inc
bound
jbe
fnstsw
rolb
push
movsb
and
mov
outsb
popf
add
jmp
or
push
stos
mov
fnstsw
cmpsb
cmp
cmc
mov
xchg
rcrb
loopne
sub
ds
lcall
pop
add
xor
add
push
push
sbb
loope
xchg
adc
xchg
mov
sub
iret
dec
in
roll
stos
sub
mulb
dec
xchg
aam
repnz
ss
cs
cmpl
outsb
mov
imul
imulb
int3
stos
hlt
jp
out
xor
addb
inc
vfmadd132ps
sub
dec
push
push
dec
mov
jnp
int3
lcall
cli
test
jae
lock
dec
push
dec
dec
or
xchg
out
call
aad
mov
xchg
or
rcrb
pop
xor
lods
pop
out
aad
xchg
pop
jo
repz
aad
xchg
dec
lcall
jl
push
divl
add
daa
lcall
xor
stos
mov
ret
pop
mov
adc
xlat
jecxz
mov
mov
mov
mov
jbe
adc
daa
comiss
inc
ss
mov
xor
fcmove
imulb
int
pusha
lcall
sbbl
and
xchg
gs
inc
jbe
mov
sbb
push
sub
xor
out
aad
xchg
scas
and
imul
negb
int
sti
jbe
fstpt
push
cmc
push
outsl
jmp
xchg
into
jne
cs
arpl
jo
pop
xor
stos
xchg
mov
jns
cmp
daa
push
les
lret
dec
cmp
jmp
jbe
pop
cld
pop
dec
imull
sub
lret
push
addr16
imul
jmp
loopne
sub
nop
add
ret
cmp
push
push
adc
cld
mov
dec
pushf
cltd
mov
loope
in
sbb
int
mov
fmul
rorb
int3
sub
insl
jmp
xchg
xorb
test
scas
cwtl
test
sahf
pop
inc
decb
or
dec
and
add
call
push
ljmp
jno
in
adc
add
mov
mov
outsl
loopne
mov
sub
adc
es
xor
mov
dec
pop
push
xor
stc
xor
fs
lods
xchg
lods
jne
pop
sbb
arpl
sub
andl
mov
loope
or
xlat
pop
add
fildll
jp
push
push
adc
test
insb
mov
loope
jmp
dec
pop
push
aaa
mov
lea
rcrb
repnz
andb
push
in
add
jb
mov
arpl
pop
xchg
mov
xchg
and
and
pop
jg
cmp
out
shrb
ja
insl
xor
std
cmp
adc
mov
mov
fcmovu
leave
xchg
cmpl
mov
cmp
or
inc
cmp
push
mov
mov
ret
shlb
rolb
stc
inc
shrl
xlat
mov
jo
mov
cltd
jl
mov
mov
cs
test
icebp
xor
jbe
cld
mov
sbb
jno
out
sti
xchg
in
add
lea
cltd
icebp
clc
fwait
xchg
xor
cmpl
mov
jle
sub
cmpsb
dec
lcall
sub
ret
push
xor
xlat
cmpb
and
mov
sbb
imul
push
xchg
fdivrs
xchg
jne
mov
dec
or
rcrl
add
in
push
sbb
call
in
mov
sbb
or
cmp
push
jecxz
scas
and
loopne
pop
inc
ror
mov
pop
jle
mov
test
lods
adc
cmp
sub
ror
xchg
lea
push
jmp
cmp
cmpsl
cmpsb
jl
lea
cli
push
push
or
stc
icebp
and
jns
stc
pusha
fwait
xchg
mov
rcrl
xchg
jnp
push
sahf
push
popf
pop
push
inc
ficomps
xchg
loop
negb
out
jo
pop
dec
mov
jae
sub
add
mov
mov
ret
mov
cli
imul
lahf
dec
lea
jo
dec
cld
pushf
rcrl
or
mull
and
js
dec
loop
aas
enter
lock
sub
roll
popf
cmpsl
lock
and
sbb
push
mov
sub
inc
in
iret
xor
mov
insl
or
inc
dec
outsb
cmpsb
sbb
jbe
jmp
ljmp
pop
pop
and
xchg
xchg
dec
add
cmpsl
cltd
mov
lret
ds
mov
pop
lret
lret
adc
push
popf
push
inc
push
jmp
mov
imul
cmp
push
iret
jo
int3
cmp
xchg
addr16
push
cmp
mov
xchg
popf
dec
ret
sub
pop
movsl
notb
push
push
xchg
lock
loopne
sbb
fcompl
mov
sbb
ret
sub
dec
dec
add
pop
sub
lcall
mov
xor
or
ljmp
inc
pop
mov
iret
and
ds
inc
stc
adc
lahf
je
cli
xchg
movsb
pop
pop
xchg
lds
mov
out
jae
rcrl
sbb
cmp
jmp
sbb
lds
sbb
repz
out
mov
sbb
in
and
xor
stos
lods
add
bound
sbb
xchg
cmp
cwtl
addr16
out
mov
pusha
lods
pop
xchg
dec
jb
imulb
insb
mov
sbb
mov
mov
adc
into
cmpsb
lahf
pop
jmp
imul
inc
sub
pop
scas
fbld
sti
popf
cmp
jl
or
outsb
pusha
and
ret
test
sbbb
enter
push
or
loope
cmp
insb
jecxz
pop
stos
scas
fwait
mov
xor
or
jmp
cmp
bnd
clc
mov
incb
leave
call
inc
pop
ljmp
mov
divl
mov
lret
mov
out
cmp
pop
scas
mov
xchg
dec
pop
xor
mov
dec
mov
fbld
ja
ret
xchg
stc
mov
and
out
mov
aam
rorb
lret
mov
lods
push
adc
les
idivl
lods
push
mov
and
or
xchg
shrb
cmp
cs
ds
lods
xchg
imul
jp
dec
pop
add
xor
xchg
push
xor
inc
jecxz
pop
lcall
test
mov
stos
es
outsb
cltd
xor
inc
push
and
cmp
jp
out
lahf
dec
mov
fnstenv
ret
outsl
sbb
clc
jno
xchg
xor
mov
mov
pop
and
jne
mov
unpcklps
xchg
adc
ret
xchg
test
inc
aam
push
les
push
jne
push
insl
repz
push
cmpsl
sub
int3
rcrl
insl
imul
cmpsl
mov
add
hlt
shll
adcl
jle
pop
dec
mov
popa
push
not
popf
mov
jg
cmp
jl
nop
out
and
unpcklps
das
ret
pop
addr16
fiaddl
cmp
push
fists
jl
sub
aam
enter
cmp
cmp
pop
cltd
fcoml
jle
clc
pop
lret
adc
std
xchg
andb
cmp
sub
cmp
and
ret
cmp
scas
add
and
fcmove
xor
mov
xlat
out
pop
sbb
dec
pop
insb
addr16
test
popf
xor
mov
push
test
out
stc
stos
jecxz
clc
mov
add
xor
jg
hlt
repz
sbb
mov
fcomi
mov
out
mov
xchg
add
or
add
cmpsl
loop
flds
inc
ljmp
sub
test
or
cmp
mov
in
inc
daa
mov
outsl
pop
xchg
and
push
xchg
test
mov
pusha
mov
xchg
loope
mov
ja
lock
pop
imul
fwait
sbb
mov
xchg
dec
push
imul
out
test
popf
out
shlb
sahf
lock
jnp
sarl
inc
dec
in
shrl
inc
pop
sub
clc
shll
xor
cmp
and
jb
leave
arpl
xor
mov
clc
or
lret
xor
pusha
jne
push
je
adcb
push
test
inc
add
fidivs
jo
stc
pop
xchg
sbb
ljmp
dec
data16
mov
inc
sbbb
cwtl
jecxz
inc
clc
push
or
xchg
mov
push
dec
lds
sbb
inc
dec
pushf
or
lret
or
mov
mov
fwait
lret
mul
js
ja
xchg
fadds
fcoml
cmp
xchg
sub
stos
mov
push
cwtl
cld
xchg
lret
xor
arpl
xchg
and
dec
inc
adc
jmp
pop
imul
stos
xor
and
loopne
xchg
fwait
push
aaa
xchg
xchg
mov
mov
ds
les
roll
mov
leave
pop
std
mov
ret
call
in
ss
loop
xchg
sub
jecxz
insl
call
lcall
jg
clc
mov
inc
cmpsl
mov
fs
lods
sbb
jns
popf
in
clc
push
mov
jg
xchg
sti
lcall
adc
sbb
pcmpeqb
push
lds
add
ror
fadd
xlat
out
or
xchg
push
jo
dec
sbb
push
add
loopne
imul
jns
adc
mov
pop
dec
std
inc
shll
sub
popa
incl
mov
cld
lods
dec
shrl
lods
inc
int3
adc
or
add
adc
aam
pop
arpl
sub
push
imul
fcoml
mov
push
lds
cmp
add
and
push
mov
sbb
sub
cs
lahf
lret
jb
ljmp
lods
ljmp
pushf
and
dec
movsl
sub
mov
push
repz
mov
mov
or
cmc
mov
movsb
iret
data16
ljmp
popf
faddp
lret
xchg
lahf
mov
aad
inc
jmp
loope
es
lcall
cmp
and
aam
push
add
xor
inc
pop
and
into
mov
iret
mov
sub
les
out
mov
mov
jl
xchg
sbb
stos
lret
jb
add
fldenv
jns
jecxz
sub
push
mov
dec
mov
xor
push
out
push
push
movsl
or
mov
dec
dec
or
scas
loop
jbe
sbb
jmp
js
xor
clc
cltd
int3
jg
xchg
push
jmp
and
movsb
cmp
pushf
aaa
movsl
add
shll
adc
inc
std
out
fs
leave
je
addr16
mov
jl
pop
shlb
hlt
fisubs
imul
adc
test
adc
xchg
push
lods
addr16
inc
rolb
out
fs
or
xchg
xchg
jecxz
mov
fildll
rcr
and
jge
ja
lea
jge
or
aas
and
xor
cld
dec
dec
xor
test
movnti
push
shlb
inc
push
pop
push
enter
mov
pop
mov
fdivrl
in
ljmp
pop
test
js
sarl
int
mov
je
pop
inc
add
data16
imul
jg
gs
test
jae
push
loop
and
mov
xor
and
cwtl
subl
je
sbbl
mov
insl
sub
inc
pop
cmpsl
cld
xchg
cltd
xor
iret
cmp
mov
fmul
jo
dec
pop
pop
dec
das
mov
stos
imul
inc
push
stc
cmp
sbb
jg
fstpt
and
mov
repz
jns
data16
addr16
add
nop
jb
arpl
push
scas
cmc
ss
cmp
lret
sub
enter
les
jp
dec
mov
aam
dec
les
insb
test
lret
daa
int3
shrl
xchg
popl
add
arpl
sahf
call
scas
adcl
and
fwait
loopne
ja
sti
aad
xchg
into
dec
add
movsb
aad
push
cmp
repnz
fs
push
add
adc
dec
xor
sbb
test
cmpsl
js
sbb
jg
xchg
jo
mov
cld
inc
fwait
mov
jle
daa
xchg
dec
movsl
mov
insb
add
mov
imull
stos
xor
mov
cmc
inc
pop
in
jae
jl
sub
nop
lods
lret
cld
lret
push
jb
lret
fwait
into
xchg
out
mov
push
fsub
push
divl
insb
mov
jo
xchg
dec
pop
sub
mov
jae
flds
in
std
js
out
mov
imul
addb
inc
out
in
jbe
xchg
dec
daa
in
bound
call
testb
mov
and
leave
outsl
scas
mov
adcb
ja
pop
loope
adcb
sbb
mov
add
popf
repnz
push
xchg
xor
and
pop
addr16
in
jg
in
push
adc
lods
mov
push
mov
sbb
mov
sbb
cmp
fstpl
scas
push
cmp
lods
arpl
movsl
ja
sbb
out
mov
push
pop
roll
dec
pop
mov
add
addr16
push
mov
mov
push
lea
push
out
dec
cmpsl
cmp
add
ficoml
and
popf
jb
and
inc
mov
int
sbb
mov
cwtl
test
sbb
xor
insl
shrb
jp
cmp
in
mov
xorb
das
cltd
adc
ret
jle
rcll
insb
lods
add
pop
daa
into
movsb
jno
and
cld
stos
cmp
movsl
cmp
or
mov
push
ljmp
sub
push
aad
dec
in
into
or
cmc
mov
in
dec
jle,pn
shlb
in
loop
push
push
aam
cmp
sub
push
mov
push
xor
add
mov
cmpsb
in
mov
and
mov
sub
dec
inc
dec
xor
pop
aaa
fwait
cmp
loop
adc
lret
repz
xor
jb
addps
sti
leave
xor
fldt
out
das
xor
incb
clc
push
outsb
xchg
in
jbe
xor
daa
mov
lret
xlat
outsb
std
xchg
scas
xchg
mov
adc
lock
rcrl
mov
ja
sub
mov
pusha
mov
data16
inc
push
cmc
dec
sti
add
pop
fs
clc
push
in
push
sbb
and
in
jbe
inc
mov
cmp
mov
push
jne
stos
mov
push
test
outsl
orl
dec
std
xor
sub
mov
cmp
sub
movsb
sbb
pop
xor
or
jl
mov
neg
mov
daa
hlt
lret
dec
test
lret
dec
sub
dec
xor
sbb
pop
sub
andb
sub
ret
mov
insl
mov
stos
mov
imul
sub
mov
ja
out
sub
out
jb
ret
hlt
adc
dec
fisttpll
push
out
clc
inc
shl
inc
sbb
pop
call
ret
or
mov
imul
outsb
xchg
sub
test
ss
xor
clc
push
test
add
xchg
push
leave
sub
mov
test
sti
or
ret
icebp
add
and
xsha256
cmpsb
push
mov
inc
stos
mov
fnstenv
push
enter
out
jg
scas
pop
jne
scas
out
xlat
scas
sbb
dec
push
mov
xor
cmp
hlt
scas
and
inc
xchg
inc
mov
pop
dec
lcall
and
add
adc
cmpsb
mov
das
jecxz
cmp
addl
jecxz
loopne
cmp
mov
xchg
jbe
dec
aas
in
fwait
decb
test
jecxz
inc
fistl
das
add
fbld
cmc
lahf
mov
cmp
out
and
inc
add
outsl
clc
ret
cmc
lea
jo
fistpl
scas
or
adc
shr
mov
adc
pop
sahf
cltd
push
fldpi
aaa
mov
ss
adc
out
sub
mov
imul
mov
mulb
push
lahf
mov
lds
inc
lods
rorb
inc
icebp
imul
mov
jmp
pushf
mov
adc
or
mov
dec
adc
dec
orl
dec
dec
imul
mov
ja
adc
push
idivb
mov
mov
outsb
pop
iret
sub
push
gs
aaa
or
mov
pusha
pop
mov
add
mov
jo
sarl
lahf
push
fs
or
push
lret
and
fcoms
mov
pop
mul
jl
imul
jno
stos
sub
clc
jo
sahf
xchg
sub
fbld
out
jo
xchg
sub
insb
xor
inc
sub
enter
sarb
and
xchg
lahf
stc
add
lods
cwtl
or
pop
pushf
jmp
push
cwtl
mov
clc
or
test
mov
cmp
sub
mov
imul
add
gs
adc
sbb
push
cli
je
cld
loopne
xchg
xor
aaa
cmp
lods
pop
and
push
pop
cmp
dec
jp
pop
fists
add
in
sti
push
movsb
mov
lods
mov
and
and
loopne
lea
stos
push
fmuls
clc
and
fucomp
out
xor
lea
stos
add
scas
inc
mov
cmp
sbb
xlat
xor
dec
sbb
mov
repz
into
and
int
or
push
loop
ljmp
pop
adc
lds
mov
gs
fwait
gs
mov
or
jne
dec
stos
fwait
mov
jo
push
mov
ret
sub
pop
orb
inc
out
inc
push
inc
push
outsl
aam
xor
sbb
enter
enter
popa
les
mov
and
test
daa
push
out
shr
stc
add
outsb
sbb
jp
int3
imul
loope
inc
or
popa
push
and
xor
adc
out
nop
dec
pop
ret
pop
dec
pop
popf
in
ret
js
imul
sbb
mov
icebp
outsb
inc
call
dec
push
adc
pop
lret
fdivrs
fisubs
push
in
jp
ljmp
lcall
or
xchg
test
pop
add
add
sahf
ret
testl
in
mov
mov
fsubrl
popa
cmpsb
lock
jge
inc
sub
or
sbb
adcb
sti
cmp
sub
xor
cs
and
jge
int3
push
arpl
lock
test
pop
movsb
pop
popf
shlb
les
jb
pop
stos
lret
mov
jle
mov
sub
leave
hlt
adc
dec
jl
jo
insb
add
sub
pop
ret
sarl
mov
pop
idivl
jecxz
pushf
in
into
dec
bound
cmp
dec
dec
stc
fwait
push
repnz
daa
cmp
es
mov
out
add
pop
sahf
or
and
scas
push
pop
jle
xor
out
sbb
push
and
push
in
pop
cmpsb
add
xor
jl
scas
jle
cmpsl
sbb
sbb
push
popf
mov
and
inc
xor
ljmp
dec
or
xchg
xchg
jnp
jnp
mov
dec
dec
dec
out
vpacksswb
add
dec
lahf
orl
ja
daa
jmp
cltd
xor
pop
push
sub
mov
test
data16
mov
sarb
jnp
aam
push
cld
inc
mov
sahf
arpl
lret
cmp
mov
push
pminub
jbe
mov
or
adc
jmp
pop
scas
outsl
push
test
lcall
sbb
cmpsb
dec
pop
dec
xchg
hlt
mov
cmp
mov
mov
lods
leave
inc
test
xchg
aaa
clc
stos
xchg
loopne
mov
div
adc
pushf
sub
data16
rol
lcall
iret
test
adc
popa
adcb
mov
js
adc
xchg
mov
or
or
insl
mov
mov
gs
test
xor
push
mov
fsubp
cmp
cmp
stos
shll
std
aad
out
push
popf
sbb
adc
mov
jno
into
insb
pop
fs
movsb
repnz
and
pxor
jl
xor
fsubrl
xor
nop
pop
xchg
xor
adc
and
and
data16
shll
dec
push
inc
cmc
sub
addb
aas
push
add
stos
popa
push
push
or
rorb
aas
aas
dec
xchg
jno
sub
jmp
xor
movsl
pop
xor
cld
dec
lock
fs
outsl
add
aad
test
je
xlat
xchg
jne
hlt
cmpsl
je
mov
jae
mov
lods
xor
fisubs
xor
in
xor
aas
dec
ljmp
jo
mov
imul
inc
push
push
in
ret
push
sbb
cmp
test
into
mov
int3
xchg
jl
es
sarb
add
add
push
jnp
lahf
mov
pop
xchg
mov
fsin
inc
repz
jns
mov
dec
xchg
gs
mov
mov
mov
adc
jecxz
pop
cmp
inc
cltd
repz
stos
inc
cs
movsl
pop
push
sub
xor
test
push
or
add
outsb
and
fistl
sbbb
jecxz
pop
sbb
push
or
aas
dec
and
outsb
in
jb
xor
push
xor
add
jno
dec
imul
lock
dec
jo
inc
fucomi
scas
inc
iret
inc
aas
push
adcb
and
xor
mov
out
push
dec
pop
sub
insb
pushf
push
mov
xor
lods
fdivs
push
insl
and
cld
sbb
sbb
into
xor
jl
xchg
scas
jp
pop
stos
push
mov
mov
fs
xor
divl
loop
shlb
ds
aam
popf
dec
and
push
mov
fsubrs
and
ds
fmul
push
jns,pt
or
sub
add
insl
add
hlt
or
fmuls
add
cmpsl
ds
mov
mov
mov
jb
movsl
cld
push
mov
push
mov
mov
imul
mov
push
out
dec
mov
insb
mov
jnp
jo
inc
jmp
orb
mov
sub
mov
mov
fistl
mov
sbb
test
test
cli
xchg
arpl
loop
adc
jmp
jecxz
add
mov
mov
aas
adc
xchg
mov
dec
fnsave
mov
pop
dec
cmp
mov
rol
icebp
mov
cli
and
or
mov
sub
loopne
or
mov
jle
cmpsb
pushl
or
sbb
inc
xchg
sar
int
cltd
cmp
mov
sbbl
jo
fs
or
movsb
dec
xor
cmp
jno
sbb
inc
popw
cltd
lret
cmpsb
test
mov
push
xchg
das
add
sub
inc
sbb
mov
adc
mov
xorl
mov
mov
mov
add
pop
add
push
aam
les
mov
pop
jbe
test
jo
push
xlat
cmp
std
sub
in
or
dec
jno
out
cmp
stos
lret
test
clc
nop
jmp
lret
lcall
mov
add
dec
movsb
mov
xor
mov
pop
xchg
sub
xchg
pop
mov
fildll
dec
shl
js
bound
pop
ss
aam
dec
arpl
subl
js
cmpsb
or
fidivs
repnz
cmp
adc
mov
push
popa
orl
js
sub
outsl
xor
in
std
jge
ja
adc
subl
adc
mov
bound
jno
loope
sub
mov
enter
loopne
test
mov
test
push
insl
gs
popa
sub
xchg
cs
xchg
adc
repz
mov
push
scas
push
lods
or
sbb
movsb
jno
mov
xlat
icebp
and
push
adc
popa
pop
outsl
jo
push
int3
lcall
nop
shlb
into
stos
mov
mov
dec
pusha
mov
fsubr
sbb
sub
inc
popa
movsl
insl
sbb
loop
jae
cmp
xor
cmp
rcrl
imul
pusha
xor
push
xor
mov
sub
dec
loope
add
sar
in
shl
cmp
shll
test
test
fistpl
adc
in
adc
sub
xchg
ss
lods
cmp
in
lcall
mov
fldenv
cmp
movsl
push
mov
test
dec
lret
popa
es
and
xchg
incb
mov
mov
addr16
int
pop
in
stc
jp
mov
popf
jmp
add
je
test
icebp
test
sahf
scas
cmp
movsl
xor
pop
and
push
mov
rcl
aam
enter
outsl
dec
lods
jae
enter
test
out
adc
aaa
shl
int3
jp
mov
nop
jp
adc
clc
or
dec
enter
sub
in
stos
imul
xor
aad
pop
dec
cmc
mov
jns
adc
xor
adcl
cmp
mov
jne
and
add
dec
in
or
mov
in
cmp
cmp
jecxz
loope
insb
sbb
jg
roll
dec
jecxz
test
stos
cmp
xchg
cmp
dec
add
cmpsl
mov
cmpsl
jl
mov
mov
pushf
test
cwtl
adc
xchg
cs
sbb
mov
out
inc
repz
int3
mov
sbb
call
and
sbb
inc
lds
push
pop
in
out
sahf
push
mull
jo
rclb
and
push
fbstp
jle
sbb
std
xchg
jle
push
mov
pop
cmp
outsl
jmp
mov
add
mov
idivl
push
in
pusha
je
lcall
cld
icebp
iret
andb
fs
fs
xor
inc
ret
and
sbb
adc
and
aad
pop
pop
das
and
ja
mov
and
inc
xchg
iret
mov
pop
fstpl
or
pop
fwait
jo
xlat
inc
mov
sbb
cmp
scas
inc
pop
stc
gs
ret
jb
mov
pop
lret
cld
jnp
mov
and
hlt
xor
dec
ds
jmp
scas
and
pop
xchg
xor
out
jmp
cmp
and
add
mov
sti
ds
leave
test
lds
pop
shlb
fcoml
add
insb
fistps
lods
pop
jmp
push
mov
push
roll
sub
dec
out
pop
inc
sub
test
xor
les
jb
dec
aam
in
or
cmp
sbb
mov
test
jecxz
sub
in
imul
sbb
sarb
sbb
adc
mov
mov
sbb
or
mov
addr16
pop
jge
std
or
scas
clc
dec
sbb
pop
inc
lahf
add
dec
inc
data16
les
sbb
pusha
popl
sbb
inc
adc
lea
dec
into
lods
xchg
popa
mov
sbb
mov
cmpsb
mov
std
push
adc
mov
cmpsl
test
pusha
jp
and
cs
or
jmp
scas
negl
addb
fucomi
daa
int
imul
fadds
and
pop
in
lcall
dec
dec
and
push
out
xchg
cmpsl
imul
scas
test
and
movsl
pop
adc
aaa
pop
jo
add
mov
sbb
cmpsl
fnstenv
cmc
push
dec
daa
add
out
fwait
sub
lea
jecxz
xor
clc
stos
and
fists
xor
das
iret
add
loop
xchg
push
cmp
imul
pop
sub
lods
insl
imul
hlt
inc
ja
ds
xor
xor
push
push
xlat
pop
mov
cmp
popa
subl
call
testl
outsb
mov
inc
popa
push
stos
inc
fcomps
xchg
cmpsb
and
mov
sarl
jo
scas
push
jae
add
sbb
sahf
jns
xor
sbb
negb
mov
add
notl
lock
aam
loopne
mov
movb
push
outsb
rcll
daa
cmp
and
enter
jb
push
mov
dec
in
clc
lods
xchg
sub
hlt
adc
call
cwtl
and
push
sti
xor
mov
dec
out
scas
push
sub
ds
das
dec
lcall
aas
sub
cmp
xchg
and
and
das
scas
mov
add
fsubrs
arpl
insb
iret
add
aad
es
and
pop
mov
into
adc
add
cmp
pop
fldl
mov
fisubrl
divps
xor
mov
cmp
outsl
mov
dec
mov
leave
sbb
and
inc
std
sbb
cmpb
call
cwtl
xor
cmp
into
mov
ja
xchg
mov
and
aad
data16
jo
icebp
xchg
addr16
jle
push
add
mov
jl
pop
mov
mov
xchg
lcall
cwtl
mov
push
push
push
inc
shl
jns
punpcklbw
test
xchg
call
je
aas
or
inc
mov
sub
dec
and
mov
insb
fistps
pop
dec
loop
imul
mov
call
and
ret
movsl
gs
ret
sbb
aaa
dec
xor
mov
lods
faddp
mov
leave
std
lahf
bnd
ror
popa
dec
fwait
sbb
and
call
add
lret
xlat
mov
jb
mov
jle
mov
add
stos
xlat
sbb
loopne
idivb
mov
cltd
mov
out
bound
and
aaa
mov
or
or
push
xchg
ret
std
cmp
insb
pop
mov
insl
mov
call
sub
ljmp
cld
enterw
xchg
push
mov
mov
call
jge
pop
mov
out
add
rorl
push
ss
loop
clc
aam
jle
leave
ret
mov
xchg
add
les
rorl
fbstp
pop
jne
repz
out
sbb
daa
clc
push
cltd
imul
mov
adc
mov
orb
push
cmovb
cld
push
push
push
cmpsb
cld
xchg
adcb
nop
dec
out
xor
mov
jb
insl
sub
lahf
pop
imul
test
scas
pop
mov
dec
jns
sbb
sbb
add
jne
dec
dec
mov
into
push
je
imul
pop
xchg
js
dec
in
and
xchg
scas
adc
dec
iret
pop
testb
js
xchg
lahf
push
fisttps
mov
ss
push
adc
jo
les
push
adc
fidivs
push
daa
lret
jb
push
subb
ds
dec
dec
mov
lods
xor
xchg
loopne
hlt
sub
inc
sahf
std
push
push
mov
in
sbb
add
sbb
scas
cmp
mov
aad
sbb
pop
sub
mov
clc
push
pop
mov
repz
push
push
int3
js
xor
add
sub
lock
lock
sub
jno
notb
xchg
pop
sahf
clc
aam
daa
inc
cli
mov
sahf
scas
jmp
test
fwait
xor
cwtl
cmp
pop
mov
adc
push
inc
and
test
dec
and
add
and
testl
add
pop
sbbb
arpl
push
mov
lods
lock
sbb
and
das
add
lret
add
and
dec
mov
or
out
lcall
mov
and
nop
rcrl
ret
sbb
push
enter
sahf
fs
fnstsw
dec
dec
or
mov
out
lahf
sub
add
pop
sbbl
les
sbb
xor
sub
inc
xchg
dec
lods
mov
push
fucomip
les
jp
add
lods
cmp
sbb
pop
sti
aam
ss
into
gs
inc
out
je
insl
loopne
and
push
adc
ds
sub
adc
clc
and
mov
xor
xchg
arpl
std
adc
inc
scas
les
sub
sbb
cwtl
xchg
adc
mov
xchg
call
pop
mov
std
shlb
push
bound
adc
add
inc
mov
addb
shlb
xor
loop
cmp
mov
sbb
ret
pop
mov
jae
add
pop
adc
adc
call
pop
push
pop
mov
popf
lods
lods
movsb
loope
ljmp
jae
sbb
mov
cld
and
stc
inc
adc
dec
pop
push
jg
add
jbe
jae
lods
mov
loope
enter
xorl
cmp
push
lea
push
mov
fwait
cmc
stos
ds
mov
xchg
scas
mov
xor
cwtl
push
fists
mov
add
add
inc
into
push
aad
inc
leave
mov
hlt
pop
sti
mov
lcall
xor
cld
ljmp
out
lods
clc
pop
out
mov
hlt
pop
in
imul
out
mov
sub
cmpsl
adc
inc
stc
mov
mov
ljmp
cmp
pop
mov
lods
dec
pop
pop
fldt
loope
mov
jne
lret
fstpl
imull
les
loope
jne
cs
je
lret
pop
pusha
or
and
jno
dec
sbb
sahf
jp
xchg
add
lods
pushf
jp
adc
int3
in
push
pop
out
pushf
test
lock
ret
je
aam
loope
rorb
lahf
les
mov
cmc
test
jmp
xchg
adc
sub
fucomi
sub
cmp
xchg
sub
and
mov
repz
push
bound
push
stc
mov
scas
repnz
cld
adc
push
sbb
xchg
mov
jne
mov
mov
imul
push
movsl
xor
push
sub
xchg
andl
inc
fistpl
mov
imul
test
inc
arpl
mov
es
and
xchg
aam
sbb
mov
sub
in
enterw
sub
or
cmc
test
push
repnz
mov
xchg
xor
pop
push
mov
aas
push
push
sbb
ljmp
jno
dec
jno
aaa
mov
aas
mov
inc
inc
add
out
xor
addb
xor
adc
inc
mov
cmpsl
pop
inc
jns
insl
cltd
and
pop
mov
dec
imulb
loopne
dec
imulb
shlb
mov
lahf
jmp
jmp
mov
inc
lods
shll
cmp
ret
mov
hlt
mov
jl
cld
insl
add
xchg
int3
lds
mov
dec
into
mov
pop
xchg
push
enter
mov
inc
and
jge
push
movsl
add
shlb
xchg
jl
jbe
mov
cmpsl
push
pop
out
leave
loopne
xor
cltd
xor
rcr
testb
xor
fisubrl
loope
push
popf
sbb
adc
insl
and
test
or
addr16
stc
shlb
adc
rorb
mov
adc
bound
addr16
cmp
xor
push
imul
dec
sbb
inc
pop
mov
pushf
jg
pop
xor
xchg
fdivs
mov
push
sbb
mov
int3
lret
movsl
push
push
add
cmp
inc
mov
out
loope
sbb
jp
insb
shll
sub
xchg
scas
add
pop
lahf
in
mov
inc
xlat
testb
pop
jb
aaa
jecxz
es
mov
xchg
in
stos
sub
mov
int
aas
loop
imul
dec
cmp
aad
lret
daa
push
cmc
push
cmpsl
dec
xchg
add
repnz
psrlw
out
dec
in
dec
lods
jg
out
xchg
xchg
icebp
adc
jp
mov
add
test
mov
dec
inc
pusha
ljmp
mov
lock
incb
mov
gs
aas
push
xor
mov
xchg
lahf
mov
cmp
xor
or
cwtl
mov
and
mov
inc
add
lods
pushf
xor
jae
in
jp
push
push
dec
and
cmp
jecxz
lock
in
lods
or
test
std
mov
jo
notb
jnp
shll
add
dec
xor
xlat
or
pop
pop
cmp
jle
or
mov
mov
int
mov
mov
xchg
repz
fimull
into
push
insl
and
jnp
mov
inc
push
xor
dec
lret
cmc
les
pop
pop
in
rcl
pop
fldcw
jl
adc
lcall
mov
jae
into
lods
dec
jo
jg
dec
xchg
xchg
inc
add
xchg
pop
jmp
enter
dec
push
pushf
mulb
push
int
mov
lcall
stc
jns
pop
es
enter
inc
fldcw
enter
jecxz
insb
mov
inc
xlat
or
lock
cmc
xlat
bound
mov
shll
push
sahf
movsl
imul
scas
lea
jmp
shrl
cmp
stc
mov
scas
mov
ds
ss
aam
dec
shrb
iret
push
mov
stc
cmpsl
sub
lds
ljmp
pop
loop
call
stc
repz
repnz
lcall
adc
pop
mov
test
ja
push
cli
fdivrl
addr16
outsb
dec
add
xor
pop
cmp
sub
insl
pop
dec
or
mov
or
mov
adc
lretw
orl
jge
cmp
jb
jns
scas
jo
shrl
inc
cmpsb
aad
mov
cmp
stos
mov
mov
rolb
sub
mov
xchg
or
cmpsl
inc
mov
cwtl
cmp
call
icebp
dec
lret
jl
cmc
pop
mov
mov
movsb
inc
or
cmp
cmp
int
fmuls
mov
popa
and
and
aas
push
mov
inc
push
cli
scas
adc
out
aaa
jecxz
test
cltd
cli
mov
mov
jbe
pop
xor
cmp
cli
jg
lock
xchg
sub
push
push
xor
mov
or
jnp
pop
and
ja
arpl
add
fisttps
mov
mov
stos
pop
lods
sbbl
subb
inc
inc
in
imul
mov
addr16
ja
ret
pop
pop
add
mov
pop
add
nop
in
lods
dec
inc
into
add
fs
mov
jp
mov
aas
enter
jns
mov
imul
stos
jp
bswap
xchg
jecxz
adc
imul
xchg
dec
loopne
cmpsb
mov
test
lods
aaa
add
stos
pop
lret
cmp
in
mov
fstl
adcb
nop
insb
add
or
or
xor
mov
cmp
dec
xor
imull
mov
adc
xor
test
repnz
inc
xor
sti
mov
adc
xor
xor
push
arpl
xor
or
push
inc
std
lret
jno
mov
pop
jnp
arpl
popf
mov
scas
inc
lds
add
add
and
mov
cld
push
xor
jb
in
or
sub
mov
and
sti
mov
adc
imul
aam
cmp
jo
or
iret
jecxz
jbe
sbb
fiadds
dec
sbb
inc
iret
sbb
push
sbb
addl
out
mov
ret
fucomip
and
pop
jge
rclb
data16
sub
hlt
pop
or
shlb
aad
das
inc
push
xlat
cwtl
jl
mov
mov
add
andb
test
jl
mov
in
fs
dec
and
or
lea
loopne
into
push
inc
stc
jg
mov
cmp
stos
add
stos
nop
addr16
sbb
pop
bound
push
sbb
filds
mov
push
xchg
mov
cmpsb
dec
adc
ss
repz
jnp
push
cmp
into
shl
mov
cltd
mov
sub
adc
mov
out
testb
out
xor
fdiv
dec
xchg
popf
push
jecxz
int
mov
cld
pop
mov
icebp
or
test
sub
fwait
pop
fistpl
es
lret
pop
repnz
mov
adc
cwtl
or
jp
xorps
mov
mov
jns
test
dec
cmp
stc
cmp
jae
sbb
pop
sub
cmp
ss
xlat
xchg
cs
dec
cmp
mov
call
inc
ljmp
mov
pop
loop
xchg
imul
call
leave
mov
repz
cwtl
pop
outsb
lret
call
xor
xchg
ds
mov
push
shlb
test
decb
mov
loopne
dec
pop
addb
add
les
adc
scas
outsl
adc
mov
xchg
dec
inc
jae
and
mov
sbb
fldenv
dec
push
push
mov
push
popf
stc
inc
adc
inc
fsubrl
xchg
out
push
sti
lods
add
insl
mov
imul
inc
inc
pop
outsl
push
cmp
leave
ss
mov
push
out
lss
xchg
pop
mov
ficomps
fimull
shll
push
jl
sbb
gs
movl
mov
mov
test
jb
push
cmpsl
pop
cmp
inc
dec
iret
in
mov
out
mov
sarb
lret
aad
fcomps
jp
je
test
pop
jnp
fstpt
fbld
fstpl
stos
mov
addr16
inc
std
cltd
out
int3
push
and
cltd
das
mov
push
ljmp
jno
lahf
int
pushf
ret
bound
sahf
hlt
outsl
test
adc
stc
cmp
out
ret
mov
push
xchg
mov
iret
pop
and
mov
xchg
push
mov
gs
push
and
jb
out
rcrb
aaa
xchg
mov
negl
out
push
sub
mov
ja
pop
xor
scas
fisttpll
aam
sub
cs
and
push
adc
push
movsb
data16
aaa
lret
lret
adc
mov
gs
jns
add
jmp
xchg
dec
jmp
ljmp
repz
xchg
mov
call
sbb
adc
adc
int
pusha
stos
in
cli
test
adc
mov
addr16
sub
fidivl
into
jno
and
mov
test
rcrb
mov
mov
mov
ss
fcoms
sub
mov
repz
inc
mov
imul
je
adc
add
test
cmp
jecxz
fisubs
inc
rcl
imul
add
sbb
lods
inc
and
xchg
shll
jae
dec
xor
cmpsb
mov
test
cmp
fdiv
aam
mov
ret
in
dec
icebp
decb
stc
lea
or
int3
leave
stc
nop
sti
out
cmp
xchg
sbb
inc
mov
pop
test
ja
inc
add
test
add
popa
sub
lret
das
mov
test
mov
cmp
inc
cmp
mov
clc
fidivrs
mov
orb
xor
popa
sub
aad
xchg
adc
dec
loop
xchg
clc
cmp
dec
cld
in
dec
mov
jp
cmp
das
out
push
lret
test
mov
or
mov
imul
push
or
das
ljmp
xchg
sbb
repz
adc
inc
dec
xchg
sub
subb
xchg
pop
insl
inc
into
pop
sub
jnp
popa
dec
xchg
sar
ja
xor
jne
xchg
or
negl
test
fisttpl
mov
sub
out
add
push
cltd
arpl
inc
pop
push
inc
adc
jg
mov
cwtl
in
andb
jmp
adcb
sub
pop
sub
stc
mov
rcrb
sbbb
jmp
lahf
dec
adc
dec
cmp
cmpsb
cmp
outsb
dec
inc
xlat
jg
inc
fwait
dec
fwait
inc
cwtl
inc
aas
idivb
cmp
out
into
push
inc
arpl
in
fadds
into
xor
fstpt
jg
loop
and
mov
push
fisubrs
arpl
push
push
sbbl
imul
adc
iret
movsb
jb
push
int3
mov
in
fidivrl
xor
xor
or
sbbb
aam
mov
fdivs
push
mov
repz
insl
repnz
pop
mov
mov
out
dec
jcxz
lock
imul
repnz
outsl
dec
loop
sahf
and
cwtl
imul
ljmp
addl
jo
xor
fistl
mov
fwait
sbb
jg
fmul
jmp
rorl
test
fnstenv
stc
mov
mov
or
cs
push
mov
pop
mov
adc
es
mov
mulb
dec
xor
dec
jae
sarl
ds
imul
test
int
imul
lock
lds
add
pop
sbb
cmc
rdpmc
add
addb
fisubrl
cmc
sbb
bound
cwtl
cmpsl
cmp
out
sbb
inc
pop
xor
mov
enter
iret
fisubrl
leave
sahf
nop
lods
test
fnsave
cmp
test
ja
lret
sub
jbe
in
or
xor
aaa
mov
cmp
xchg
xor
inc
mov
jg
jmp
ss
jp
jb
or
psubq
xchg
stos
push
outsl
repz
ss
fsubrl
addr16
notb
mov
adc
cltd
outsb
add
cmc
push
or
xchg
push
leave
je
mov
aam
ficoms
fsubrl
cld
fidivrs
mov
scas
xlat
sbb
popf
jg
or
mov
movsl
inc
pop
push
adc
ror
mov
cmp
push
mov
or
cmp
adc
shlb
hlt
cld
xchg
dec
jae
jne
mov
insl
inc
imul
jnp
les
pop
ja
mov
xsaveopt
popa
call
pop
dec
aaa
cmp
js
enter
inc
dec
cltd
sbb
adc
sarl
mov
out
dec
cld
push
and
and
orl
inc
adc
pop
imul
call
or
lods
push
inc
pop
inc
psubd
cmp
testl
xor
test
jno
shrl
pop
xlat
insl
push
sub
and
mov
popf
outsb
repnz
pop
xchg
jnp
loop
inc
sbb
js
xor
or
cmp
mov
mov
mov
mov
insl
mov
push
sub
push
dec
ja
loope
and
lret
adcl
mov
or
jmp
jbe
pop
cli
mov
arpl
mov
cmp
rcr
xor
pushf
cmp
or
repnz
dec
jne
jp
outsb
adc
ja
je
pop
mov
adc
push
mov
cmp
cwtl
imul
sbb
cmpsb
cltd
jl
enter
clc
adc
add
adc
xor
inc
cmp
movsl
xchg
ret
cmpsl
push
out
jg
hlt
mov
fucomip
ret
bound
add
shll
dec
filds
add
mov
and
notl
push
mov
and
mov
fisttpll
fnstenv
sti
inc
or
push
fwait
insb
push
out
daa
push
cwtl
xchg
jne
jp
ds
pop
adc
jp
jg
hlt
sub
js
pop
sub
fwait
jae
jle
lahf
daa
jmp
test
adc
sbb
jne
imul
addr16
lods
lret
xlat
shl
inc
ret
mov
pop
das
xchg
jno
cli
xchg
and
in
bound
gs
mov
mov
push
and
cltd
jno
call
notl
iret
bound
push
xlat
or
or
push
iret
add
mov
les
push
stos
divb
xor
sbb
or
adc
jecxz
fistps
in
fs
arpl
ds
inc
xchg
cmpsl
mov
stos
shlb
xor
shrb
lock
loopne
push
push
jp
cmp
imul
dec
insl
mov
cli
xchg
shr
dec
add
inc
fildl
adc
xchg
jbe
cmpsb
cmp
cmp
xorl
lods
dec
jo
add
cmp
xchg
xchg
mov
icebp
movsl
insb
test
xor
leave
mov
sbb
sbb
daa
sub
sbb
jnp
mov
aad
les
cmp
ltr
lret
jo
mov
mov
in
jnp
pop
test
sbb
push
xchg
movsb
xchg
lods
mov
mov
fs
addr16
arpl
ljmp
ja
aaa
sub
das
fstsw
into
sub
mov
jnp
mov
ds
insb
add
or
ds
sub
or
add
push
xor
jl
push
push
scas
inc
mov
int
xor
subl
push
or
daa
jbe
rclb
dec
adc
dec
jg
jns
mov
sbb
int3
cmc
movsb
repnz
mov
xor
dec
clc
dec
movsb
push
cmpsl
out
xchg
insl
enter
repz
ss
inc
out
jb
and
imul
mov
sahf
cmpsl
ret
xchg
add
pushf
dec
cmp
icebp
js
dec
mov
xor
stos
shll
lret
gs
sub
daa
cld
cmp
jne
sbb
ja
sub
lahf
ss
into
pushf
xor
push
stos
ss
in
pop
lock
movsl
push
arpl
xchg
in
loope
bound
pop
mov
dec
daa
cmp
out
aaa
rcrb
mov
mov
loope
daa
push
fwait
addl
stc
roll
sbb
xchg
into
dec
sbb
add
cltd
lock
psraw
xchg
or
xchg
dec
mov
lahf
or
and
xchg
mov
int3
js
shrl
ss
jl
test
lret
xchg
mov
vandps
sbb
repz
and
int
xchg
hlt
lock
repz
xchg
xchg
dec
insb
sub
lcall
pusha
fcomps
cmpsl
push
in
and
mov
push
idivl
mov
rcrb
cld
call
mov
jle
mov
xor
int
inc
push
imul
mov
pop
mov
movsl
mov
je
jne
call
clc
int
lock
frstor
lods
fisubs
adc
sbb
sub
push
test
jl
pop
scas
sub
pop
mov
sub
dec
movsb
sub
mov
scas
inc
test
test
sbb
cmp
les
lods
fisubs
or
fnstenv
loope
out
add
ss
mov
divl
mov
and
clc
loop
imul
xor
pop
cmpsl
xlat
sub
fildll
mov
jbe
push
test
shll
addr16
and
sub
div
outsb
or
xchg
xor
icebp
out
sub
sub
fs
push
mov
lock
jno
xchg
sbb
xor
or
pop
jmp
es
push
cmc
add
pop
lods
pop
mov
push
add
and
or
jl
adc
and
aad
fabs
xchg
pop
fcompl
arpl
inc
daa
hlt
jnp
add
jbe
and
inc
mov
mov
dec
sub
repz
out
hlt
cmp
test
add
mov
cwtl
xchg
push
in
popf
mov
jae
in
inc
sti
xchg
xor
push
inc
hlt
repnz
mov
push
mov
repz
adc
out
add
call
cli
xchg
dec
sahf
fldenv
std
inc
sbb
jle
clc
daa
mov
into
mov
in
dec
popa
sarb
in
nop
addb
or
loope
cmp
sub
movl
inc
inc
clc
mov
scas
jecxz
fcoms
scas
jnp
mov
movsl
arpl
test
lea
dec
test
add
jle
push
inc
jb
andl
in
int3
push
mov
stos
arpl
and
inc
stos
push
je
into
add
inc
shr
jbe
fwait
repnz
xchg
push
roll
arpl
xorl
xchg
mov
mov
nop
std
jmp
rol
jnp
sub
sbb
mov
sub
xchg
mov
mov
or
cltd
lods
ljmp
xchg
jnp,pn
mov
jbe
cmpsb
xor
mov
inc
push
add
and
push
fsts
test
sbb
inc
mov
pop
ja
gs
popa
pop
insb
popl
in
enter
ljmp
ret
xorl
pop
push
addl
add
cmp
int
scas
cli
rclb
icebp
sbb
dec
inc
fwait
das
mov
push
push
rcrl
jnp
xchg
jnp
inc
sbb
lret
aam
mov
iret
mov
lret
jb
sub
ret
ret
inc
dec
mov
jne
scas
popa
mov
loop
pop
mov
mov
in
pop
iret
jp
jbe
xchg
cmp
in
xchg
mov
jg
jae
scas
adc
pop
push
and
or
pop
nop
daa
mov
xor
mov
pop
cmp
pusha
aad
mov
fiadds
mov
push
and
jno
push
ffreep
dec
mov
jae
in
ret
push
inc
test
mov
push
sti
cmp
cmpsl
bound
adc
pop
mov
lahf
es
rol
and
xchg
xchg
fsubrp
lret
pushf
add
dec
sbb
add
insl
xor
psadbw
or
lcall
cwtl
dec
mov
push
lods
fidivrs
stos
push
inc
int3
stc
nop
inc
jecxz
and
pop
scas
xchg
dec
mov
loop
xor
xchg
jp
dec
in
xor
sub
insb
outsl
xor
pop
mov
mov
dec
arpl
cmp
mov
test
xchg
mov
push
imul
xor
push
loope
xor
push
xlat
jb
and
lret
leave
in
sub
adc
arpl
pop
sub
lds
dec
jecxz
loopne
inc
mov
fcmovne
adcl
fcomps
mov
jge
jl
fadd
push
dec
dec
xor
push
outsl
jle
fnstenv
out
pusha
add
xor
pop
data16
mov
out
pushf
mov
ljmp
pcmpgtb
xchg
inc
inc
in
xor
fs
push
outsl
or
lret
jmp
lret
cmp
jae
sahf
add
inc
fstp
nop
les
fldcw
xchg
fdivrs
aaa
scas
inc
pop
fdivrp
dec
mov
add
mov
rorl
dec
out
pop
insb
sbb
xor
lcall
out
rclb
fists
mov
mov
xor
ret
and
jb
jge
or
mov
mov
sub
adc
inc
clc
xor
sub
pop
lahf
subps
inc
cld
sti
lock
and
push
mov
push
mov
push
push
repz
cltd
outsl
lretw
enter
fsubrp
add
jmp
add
sbb
sbb
in
xchg
adc
mov
mov
mov
sbb
and
popa
inc
fstps
mov
test
cli
push
cmp
sbb
jle
std
push
xchg
test
add
xor
adc
int
shll
gs
sub
roll
ja
hlt
rorb
mov
push
inc
data16
pop
movsl
sbb
jl
insl
jns
sbb
sbbb
dec
shr
jae
sti
xchg
push
xchg
in
loop
mov
pop
stc
sbb
and
cmp
js
and
fistps
adc
in
fwait
mov
xor
sbbb
pop
inc
popa
nop
mov
pushf
jle
in
xlat
adc
push
or
push
and
inc
jo
cwtl
mov
cmpsl
xchg
in
dec
dec
divl
mov
push
push
jge
adc
push
inc
or
sub
pop
xor
mov
dec
xor
jle
test
jo
and
lret
or
stc
inc
jae
lods
pushf
movsl
add
mov
mov
lods
push
pop
mov
test
lods
or
mov
mov
sbb
fwait
aaa
push
pop
in
dec
fisttpll
inc
wbinvd
push
pusha
aaa
add
xchg
ja
inc
lret
scas
out
dec
aam
sub
int
mov
stos
xor
push
sub
push
dec
sub
pop
addr16
add
imul
sub
in
dec
mov
cmp
aas
xchg
jmp
je
out
xor
test
scas
js
das
xor
inc
fcomi
mov
leave
popa
adc
inc
adcb
sub
fnstenv
push
sub
dec
loope
int3
sarl
stc
stos
jg
cs
push
outsb
add
aad
cmp
repz
jge
scas
mov
xor
aam
dec
into
outsl
clc
fisubl
mov
fldcw
fnstsw
insl
pop
mov
sbb
insl
jle
push
cltd
shrl
dec
pop
out
sbb
sbb
mov
test
repz
mov
shl
jb
loopne
lahf
cmp
pop
mov
call
mov
scas
insb
ja
push
ds
neg
mov
scas
pop
hlt
cmp
in
cmp
mov
shlb
rol
cmc
or
aaa
push
xrelease
cmpsb
cmp
add
les
sbb
shll
cmp
adc
xor
out
adc
dec
push
stos
fnstenv
popa
cmp
jp
insl
icebp
call
xor
jne
test
dec
pop
xor
dec
movsb
repnz
test
xor
add
bound
mov
cs
mov
loope
mov
and
adc
test
out
mov
scas
sub
fsubrs
jo
cs
lods
and
test
xor
sub
subb
dec
mov
cwtl
outsl
test
insl
mov
pop
dec
sahf
sbb
pop
jmp
push
stos
and
repz
test
jo
leave
mov
hlt
jecxz
mov
in
lods
mov
xor
mov
test
xchg
jbe
sbb
cmp
subb
push
cmp
xchg
aam
and
xlat
lahf
and
push
cmpsl
push
or
aad
pop
fisttpll
jmp
out
lcall
inc
mov
pop
push
hlt
addr16
mov
mov
scas
and
leave
cld
push
cmp
or
jne
mov
aad
push
pop
in
ja
inc
popa
mov
xor
sub
sub
inc
into
mov
inc
sbb
loopne
or
pusha
clc
cwtl
loopne
xchg
sbb
fisubrl
xchg
notb
test
or
sub
out
fnstenv
in
xor
and
daa
pop
mov
mov
jle
outsl
sar
jnp
lcall
and
jl
inc
mov
jmp
mov
stos
sti
mov
jg
enter
jae
jge
popf
mov
jle
test
jg
mov
loope
adc
ss
pop
aam
pop
push
adcl
push
push
pushf
jns
adc
fnsave
and
jae
fistl
inc
pop
cs
mov
mov
das
loop
push
jg
xchg
movsb
cmpsb
add
add
imul
in
mov
scas
es
cmp
insb
sahf
cld
xchg
dec
mov
pop
mov
push
xchg
xchg
loopne
insl
fwait
ret
sub
fstpl
adc
test
or
push
mov
mov
push
pop
mov
scas
gs
sub
sar
cmp
lods
repz
jg
jb
mov
xor
adc
pop
cs
inc
popa
and
mov
pop
mov
fucomp
inc
jl
inc
or
xor
scas
push
add
and
adc
mov
jb
or
sbb
pop
xacquire
test
add
adc
ret
cwtl
and
mov
lcall
out
jne
faddl
adc
push
sbb
xor
sti
xor
hlt
fisubrl
fcoml
lcall
sbb
dec
inc
ljmp
test
mov
mov
pop
js
inc
push
loope
dec
add
xchg
jb
mulb
je
xor
cld
stc
lahf
test
add
inc
xchg
push
mov
xchg
add
imul
and
mov
fs
mov
cmc
in
xor
nopl
popa
jecxz
mov
fcmovnbe
push
sub
rcr
mov
jb
in
xlat
icebp
aaa
repz
sub
and
jmp
leave
jl
aad
xor
or
sti
test
leave
dec
inc
mov
jge
rcll
mov
mov
test
test
stc
popf
jl
loope
mov
sbb
ret
or
addr16
insb
sub
pop
mov
push
sub
jb
popa
out
push
loope
adc
cmp
pusha
dec
mov
out
mov
pop
mov
loope
inc
pop
add
sahf
mov
jne
scas
into
inc
mov
icebp
push
xlat
lods
jmp
aaa
fnstcw
xchg
cmp
lret
fs
mov
enter
loopne
push
idivb
dec
scas
pop
fsts
push
fsubrs
mov
testb
sarl
dec
ss
cld
mov
je
sbb
dec
int3
fbstp
es
inc
pushf
jno
into
out
imull
cmc
inc
lcall
inc
in
iret
shlb
push
scas
jp
hlt
pop
movsb
mov
jb
jae
ja
in
jns
pop
lods
inc
mov
or
push
mov
push
xor
jp
jnp
xor
push
jo
cwtl
dec
mov
mov
dec
test
int3
pop
popf
enter
cmp
mov
pop
add
sbb
sub
ret
sub
dec
xor
adc
int
cli
and
or
fiadds
pop
pop
std
iret
adc
mov
sarl
repnz
imul
dec
mov
loopne
dec
mov
cltd
aam
scas
mov
filds
adc
sahf
clc
adc
xor
xchg
xor
adc
pop
push
out
xchg
cmp
popf
inc
data16
sbb
and
xlat
lods
pop
in
test
fstps
mov
cltd
push
ds
inc
pop
sbb
lret
cmpsb
insl
adc
pop
rorl
mov
sbb
imul
sbb
sti
pop
aaa
stc
cmp
in
dec
push
insl
mov
xchg
adcl
rcl
iret
and
and
push
inc
mov
enter
sbb
daa
jp
fs
or
das
and
notb
jg
cmpsb
ret
rcrb
nopl
scas
sbb
orl
insl
pop
sahf
enter
xchg
mov
fsubp
add
gs
add
test
mov
and
int
rcll
sbbb
fisubs
sub
push
mov
dec
sahf
push
xchg
push
mov
and
mov
dec
sbb
and
insb
cmp
push
jno
jae
std
adc
xchg
je
fisubrs
mov
mov
jnp
add
test
jmp
inc
flds
pop
hlt
cmp
cmp
mov
int
fnstenv
icebp
fidivrl
pop
mov
ret
loope
inc
pushf
out
inc
pop
adc
xchg
sahf
int
in
xor
mov
inc
dec
scas
out
insl
adc
jp
test
repnz
xchg
mov
arpl
push
jmp
fidivrl
jnp
lods
or
sub
movsl
dec
fs
sbb
sbbl
adc
movb
xchg
pop
out
xchg
xchg
pop
insl
les
or
mov
xor
xlat
rcr
pop
daa
mov
sub
xor
xchg
sbb
jl
mov
popf
insl
add
es
pop
das
or
lods
add
xor
mov
dec
and
dec
nop
push
gs
or
xor
push
jo
push
add
ds
or
mov
cmp
jge
sbb
dec
jmp
cmp
call
mov
imul
bnd
gs
lcall
mov
mov
rcrl
mov
cmpl
rcrl
test
push
sub
dec
outsb
iret
addr16
push
loopne
in
pop
cmp
fistps
imul
insl
loopne
mov
clc
out
testl
clc
fcmovu
nop
rcrb
out
repnz
lods
pop
or
sub
ds
cmpsl
repnz
test
sub
addl
jb
lcall
mov
leave
or
add
lock
mov
fstl
xor
inc
xchg
pop
call
inc
and
dec
sbb
xchg
scas
and
add
and
scas
and
and
adc
mul
shll
push
idivl
leave
xor
sbb
cmp
into
cmp
adc
test
iretw
divb
in
in
rcll
es
test
dec
pop
popf
lcall
mov
add
mov
popa
insb
stos
imul
decb
adc
cmp
movsb
or
in
cmp
leave
shld
pop
aas
aam
mov
outsb
test
add
adcl
inc
mov
pop
mov
cwtl
ja
les
leave
mov
add
xchg
adc
mov
or
mov
adc
pop
push
mov
sub
adc
into
jbe
xchg
dec
xor
lcall
adc
ret
sbb
xor
fistpll
mov
push
testl
pop
out
lcall
bound
addl
sub
xor
and
cmp
mov
fcompl
lret
dec
xchg
lea
sub
clc
lock
pop
sarb
pusha
stc
movsl
icebp
aaa
add
xlat
scas
jmp
pop
movsb
inc
push
fcoms
fcomp
cmp
push
push
jp
or
add
push
sub
pushf
mov
cmpsl
ret
add
mov
shlb
or
jle
shl
mov
jmp
jae
lret
sbb
sarb
cmp
mov
sar
and
out
mov
inc
in
jecxz
pop
pushf
stos
or
sahf
cmp
inc
loop
mov
pop
daa
rclb
stc
pusha
mov
push
jecxz
jno
pushf
ja
inc
pop
jp
mov
jno
sub
add
jbe
cli
dec
pusha
in
in
std
into
mov
das
pop
inc
xchg
stos
jno
fdivrl
jge
push
popf
mov
stos
push
test
aam
lret
das
mov
into
popa
dec
aam
fwait
cmpsl
inc
rcl
clc
lret
push
aam
pusha
mov
and
testb
push
out
mov
and
gs
icebp
lea
sahf
rcrb
test
jae
xchg
push
sbb
insl
mov
frstor
jmp
aas
repz
pop
scas
jecxz
pop
into
pop
loop
pop
pop
jp
push
dec
flds
in
mov
test
cmp
mov
or
mov
clc
and
add
fnstcw
adc
insl
and
inc
mov
mov
inc
sub
jge
repnz
repz
pop
fwait
fsts
fs
inc
xchg
mov
push
dec
or
sub
pop
sbb
sbb
push
test
fisubl
pusha
test
inc
mov
out
or
pop
inc
nop
xchg
adc
sbb
mov
cwtl
xor
cmp
fstpl
aad
repz
cmp
push
cmpsl
data16
push
push
enter
popa
testl
sbb
ljmp
fldcw
pop
insb
dec
mov
pop
out
add
fidivl
lods
dec
lcall
pop
push
xchg
mov
lock
xlat
or
enter
or
add
mov
cmpsl
lds
hlt
test
and
pop
popa
push
xchg
daa
mov
mov
sti
mov
push
popf
sbb
ret
xor
adc
arpl
out
lret
lods
stc
or
loopne
adc
mov
repnz
int
shr
in
mov
pop
out
ret
pop
cmc
jg
push
or
out
fucomi
cmp
mov
hlt
add
fwait
cmpsl
mov
push
inc
inc
sbb
and
inc
sbb
aaa
mov
sub
negl
lret
insb
add
js
hlt
divl
es
adc
fs
and
sub
dec
cmp
adc
mov
mov
mov
clc
dec
sbb
cwtl
sti
mov
dec
arpl
inc
in
ret
icebp
xor
push
popf
inc
adc
xor
add
andl
add
xor
sbb
sahf
sub
mov
jns
fdiv
push
sub
push
adc
sbb
fldl
add
push
add
pusha
test
push
insb
xchg
mov
xor
out
xchg
das
and
icebp
js
sbb
xchg
cmpsl
xor
fistl
loopne
mov
popa
sub
mov
rclb
pusha
mov
mov
loope
lret
mov
cmp
leave
sub
into
jo
das
nop
int3
pop
pop
dec
fdivrl
pushf
pop
stc
push
sub
mov
inc
stos
enter
lcall
incb
icebp
std
and
mov
repz
sbbl
jns
inc
xchg
orb
movl
daa
orw
test
mov
jge
or
adc
sub
hlt
sub
js,pn
pushf
mov
pushf
dec
pop
std
sbb
adc
cmp
push
iret
push
lock
pop
sub
aaa
stos
ret
mov
out
xchg
mov
dec
jnp
xchg
test
or
sbb
ret
icebp
sbb
mov
adc
lcall
inc
lret
ds
orb
sbb
cmp
or
inc
jg
data16
paddq
mov
inc
or
icebp
aas
rolb
xchg
jbe
inc
push
leave
test
pop
cmpsb
lret
sti
mov
xchg
cltd
sub
and
out
out
dec
roll
pushf
sub
ds
out
mov
test
sbb
insl
add
mov
lods
inc
mov
adc
inc
ljmp
lret
sbb
mov
and
adc
push
addr16
fucomp
jge
test
mov
dec
andl
hlt
sarb
cwtl
sub
sub
dec
adc
fs
je
adc
dec
jmp
outsb
pop
adcl
mov
jb
lock
loop
lods
and
jnp
add
pop
mov
psubsb
ror
loop
inc
mov
pop
in
leave
das
inc
add
add
jbe
cmp
sarb
in
sti
nop
mov
imul
mov
cmpsb
pushf
and
push
popf
xchg
pop
or
or
inc
fwait
jle
adcb
popl
shrl
test
loope
idiv
sub
dec
push
ljmp
and
mov
filds
adc
clc
mov
sbb
sarb
dec
pusha
adc
lret
out
hlt
sub
int3
fdivrl
xor
int
aas
pop
fidivrl
or
cmp
fcomps
stos
pushf
fs
or
mov
mov
repnz
stos
pop
mov
mov
or
lods
mov
mov
into
cmp
rcrl
xor
adc
pop
mov
popf
push
test
xchg
xor
and
pushf
das
mov
push
inc
int
cli
dec
cmp
inc
jecxz
sub
out
aam
mov
cmpsb
inc
stc
imul
xor
mov
mov
adc
test
clc
mov
scas
test
mul
rcrb
xor
xchg
cli
dec
dec
dec
cltd
std
push
nop
lock
int3
mov
ljmp
insl
test
push
mov
mov
test
mov
jp
add
pop
dec
pop
cmp
cmp
nop
leave
into
cmp
sub
cmp
add
repz
xor
sahf
xchg
rcl
dec
ret
dec
loopne
negb
imul
sbb
mov
pop
stc
je
lds
mov
mov
cmp
push
imul
shll
cltd
aad
lret
jnp
xor
lods
or
in
sub
pop
mov
repz
jo
insb
add
mov
mov
aad
ds
fwait
and
mov
fisubs
jnp
sahf
pusha
push
loopne
enter
pop
push
xchg
inc
cmp
int
je
pop
das
ja
pop
mov
xor
and
mov
or
mov
or
mov
js
scas
add
pop
addb
inc
push
push
cwtl
pop
icebp
xlat
xor
inc
adcb
jae
mov
fwait
xchg
and
jge
sbb
jnp
shlb
ss
loopne
mov
insl
and
gs
cld
aam
pop
xchg
inc
lret
mov
dec
jle
jmp
adc
mov
sahf
pop
test
push
in
fwait
mov
push
fldl
cltd
imul
call
rcll
dec
xor
mov
mov
aad
mov
pop
testb
or
insl
xchg
and
or
mov
enter
adc
leave
fbld
add
or
or
mov
push
out
dec
es
nop
dec
or
fcmovne
push
test
test
sub
push
xchg
sub
das
mov
popa
xor
scas
in
push
pop
ds
jl
lea
fisubrs
rcr
stos
xor
xor
pop
jns
cmp
imul
push
push
pushf
aaa
iret
in
cmp
lcall
popa
jns
cmp
jle
mov
aam
loop
add
filds
mov
into
popf
pop
dec
inc
mov
fs
jl
push
jg
movsb
and
xchg
add
push
test
sbb
aas
adc
aaa
jno
push
inc
pop
pop
gs
roll
inc
adc
xchg
clc
enter
push
outsl
push
out
mov
imulb
movsb
pop
mov
fcoms
test
out
rcl
test
xchg
fisttpl
fwait
pop
or
cmpsb
imul
sub
in
sbb
std
fildl
enterw
jecxz
sbb
aam
jmp
sti
sub
out
popf
ret
lock
ret
rcrl
mov
jb
mov
jne
sub
fwait
es
jo
inc
ror
imul
push
jmp
cwtl
mov
xor
es
sub
mov
xchg
test
jge
sahf
scas
lea
or
loop
in
es
sub
pop
xor
xchg
pushl
jbe
rcl
add
jae
push
jne
mov
mov
in
cld
cmp
dec
push
dec
clc
arpl
inc
add
mov
orl
jns
cmp
ret
fnstsw
or
pusha
sub
fcoms
fldt
xor
ds
push
sbb
mov
pop
inc
add
in
cmpsb
in
addr16
flds
sahf
inc
out
aam
adc
and
cwtl
xor
popa
xor
lods
andb
nop
ss
xorb
loop
xchg
insl
les
mov
jo
xlat
jle
sbb
test
ficompl
pop
loope
std
inc
fwait
cmpsl
out
arpl
repnz
lret
dec
push
jmp
cli
cmp
std
and
add
movsl
mov
sub
or
cmp
inc
push
mov
movaps
mov
push
push
mov
stc
cld
nop
inc
lahf
fs
movsl
lcall
and
cmp
xor
aam
in
pop
push
adcb
jno
imul
cs
ds
mov
adcb
roll
mov
pop
pop
aaa
test
neg
jle
int3
mov
fwait
notb
ljmp
in
in
push
sbb
mov
push
outsl
pop
cmp
push
pushf
in
lock
imul
ds
cmp
pop
push
inc
inc
cmp
les
push
rorl
fs
pop
insl
pushf
ret
jl
mov
mov
sub
cli
cltd
data16
cmp
sbb
xchg
mov
cmpsl
push
stos
inc
sub
pop
aam
je
push
bound
call
mov
dec
ss
bound
mov
add
push
sbb
xchg
ret
xchg
mov
loope
xchg
sub
inc
lods
and
cmp
gs
or
add
enter
in
lock
loope
clc
popa
sub
insb
xchg
sub
iret
fadd
push
pop
mov
cmp
in
push
shlb
push
lret
and
sub
test
inc
std
mov
inc
ljmp
cmp
cld
push
cmc
mov
jo
lahf
jnp
xchg
sbb
lret
int3
dec
lea
mov
ds
xchg
outsl
mov
shll
into
cmp
mov
push
pop
movsw
icebp
lret
dec
insb
jo
xchg
push
mov
adc
femms
lea
mov
leave
cmpb
scas
imulb
mov
add
inc
mull
add
mov
pop
aaa
fs
inc
jmp
inc
negb
jmp
dec
dec
add
adc
cli
cmc
add
xor
popa
jl
push
or
ret
cmp
sti
mov
in
insb
inc
fidivrl
mov
jge
add
add
filds
xor
test
inc
pushf
outsl
push
aam
add
mov
imul
in
mov
jp
ret
outsl
or
sbb
lret
and
cld
mov
mov
adc
jg
mov
ret
lret
or
sub
fcoms
cwtl
xor
mov
adc
xrelease
repnz
jmp
adc
cmpb
lock
aas
js
pop
mov
lahf
mov
inc
sbb
repnz
fdivrs
bound
jge
gs
mov
sti
insl
jb
hlt
scas
mov
mov
push
mov
dec
scas
rclb
arpl
lret
repz
sbbl
ljmp
pop
push
jne
or
xchg
daa
sub
xor
add
mov
mov
push
test
mov
fnstenv
pop
movsb
mov
rorb
not
imul
cmpsb
mov
xchg
ss
dec
sbb
and
dec
cmp
xor
jle
xchg
sbb
push
test
mov
mov
aaa
jle
call
sbb
xchg
push
mov
mov
sahf
adc
add
popf
mov
dec
cld
int3
inc
xor
mov
xchg
cmpsl
insb
fcomip
out
insl
jg
or
push
stos
cmp
xlat
jge
pushf
mov
sahf
sbb
xchg
mov
pop
cld
lods
pop
jo
sbb
mov
inc
cmpsl
xor
mov
cld
pop
push
arpl
sbb
hlt
out
loope
push
arpl
xchg
out
lds
xchg
push
out
repnz
out
xor
por
sub
test
adc
aas
addr16
cmpsl
jnp
rol
and
push
imul
xor
cmp
sbb
js
push
cmpsl
cmp
sbb
mov
gs
xor
pop
cmc
int3
shlb
gs
testl
jns
pop
mov
pop
mov
xchg
xchg
and
sbb
daa
mov
adc
mov
outsl
xor
cltd
jns
inc
fcmovne
mov
sbb
fucomp
pop
orb
dec
mov
jl
inc
and
adcl
sbb
xchg
add
js
hlt
mov
adc
test
or
xchg
push
je
das
add
cli
out
lahf
lods
xor
jmp
and
dec
push
clc
ret
dec
cmp
sbb
sbb
sub
mov
jg
xor
fldt
or
stos
das
popa
push
mov
mov
fcoms
jne
fnstsw
cmc
loope
dec
nop
daa
inc
push
dec
add
xchg
pushf
xor
inc
pop
and
xor
or
dec
pop
cmp
mov
js
mov
cmp
mov
mov
jo
mov
xor
adcl
out
pop
jg
xlat
sbb
testl
jbe
fstpt
or
and
jmp
sub
aaa
push
imul
movsb
mov
out
xchg
pop
aam
or
fs
outsb
inc
or
cwtl
dec
push
lret
movsb
jno
scas
mov
xorl
stos
adc
push
das
mov
jmp
push
in
lods
push
out
test
int
div
cmp
out
mov
mov
jle
movsb
inc
mov
hlt
movsb
push
jecxz
in
rorl
and
or
imul
cwtl
sub
inc
xlat
mov
scas
inc
cmp
aaa
add
pushf
fdivs
jmp
loopne
fcoml
stc
push
stc
ficoml
dec
popf
xlat
xchg
cmp
adc
jecxz
mov
fisubs
mov
or
cwtl
add
pop
dec
xchg
jg
mov
out
xchg
sub
lea
leave
inc
add
mov
fimull
and
hlt
jns
add
pop
lret
push
sahf
cmp
popf
mov
adcl
xchg
sub
call
xchg
mov
dec
cmp
addl
jecxz
push
bnd
or
faddl
cmp
mov
in
mov
add
popa
outsb
lahf
movsb
pop
xor
call
mov
push
mov
lock
cmp
sbb
xchg
push
loopne
pop
inc
adc
mov
xor
lock
adc
imul
mov
hlt
ja
in
test
jae
sbb
jl
mov
imul
test
add
pop
mov
mov
add
jle
jnp
adc
dec
mov
mov
enter
adc
sbbb
push
adc
push
and
sub
adc
dec
iret
and
scas
mov
adc
outsb
mov
pop
push
adc
outsl
add
testl
jmp
lods
inc
lods
repnz
sahf
xchg
jbe
sbb
sbb
stos
cli
cmp
adc
inc
sub
out
add
lcall
sbb
push
jmp
cmp
mov
pop
jno
je
pop
inc
pushf
daa
cwtl
inc
pop
mov
negb
mov
jnp
cmp
lea
mov
xchg
nop
mov
ret
jnp
xor
jle
push
push
inc
fistpll
cmc
dec
out
mov
push
rcll
xor
out
pusha
aaa
movntq
xor
lods
inc
pop
mov
add
sub
loope
add
test
lods
hlt
lds
das
lds
jb
daa
push
pop
mov
sbb
rolb
xchg
popa
shlb
mov
xchg
lret
aas
aad
out
dec
sbb
pop
pop
or
lret
dec
repnz
int3
pusha
jl
and
or
mov
mov
push
fdivl
lds
mov
loopne
out
sahf
add
sub
ret
out
popf
adc
mov
xor
pop
ja
cwtl
outsl
jp
and
lock
push
pushf
sbb
pushf
and
mov
addr16
pop
in
or
mov
push
dec
repz
fmulp
jb
std
jmp
xor
adc
or
ljmp
int3
outsl
adc
mov
cmpb
out
mov
mov
add
mov
lcall
cld
imul
dec
jl
cmpsl
lds
jge
test
leave
lcall
pop
mov
push
add
xchg
rcpps
gs
in
scas
ror
enter
lds
fnstenv
jecxz
and
jecxz
es
pop
ljmp
call
xchg
and
cmp
rorb
jmp
xor
or
jmp
jne
mov
pop
pusha
fidivrl
in
pop
jo
push
shrl
aaa
mov
jne
dec
xor
cmp
enter
jmp
pop
dec
mov
pop
lcall
fcmovb
cltd
lcall
test
hlt
aad
or
fldt
mov
push
xchg
dec
xor
pop
lret
cmp
lock
data16
jbe
scas
mov
not
outsb
into
popa
pop
adc
push
pop
mov
mov
fwait
cs
arpl
cmpb
or
push
inc
sbb
ja
cwtl
pop
add
and
push
sub
sub
loop
repz
hlt
das
cmp
jmp
lds
hlt
int3
fwait
cwtl
pop
repnz
or
mov
mov
rcl
sahf
xchg
fs
xor
popa
or
xchg
jns
pushl
pushf
push
inc
dec
push
xchg
push
xlat
dec
mov
sbb
lock
xchg
mov
shll
inc
jle
es
sarb
sub
cmpsl
ds
outsb
imul
xor
push
call
xor
mov
sub
or
and
mov
fdivr
cmp
ja
mov
mov
mov
mov
and
mov
cld
or
xor
lcall
xor
mov
fiaddl
fsubr
jns
mov
and
stc
adc
jmp
addr16
lock
cs
int
mov
insl
cmp
clc
ret
movsb
sarl
sub
cmp
and
xchg
je
or
pop
out
cmpps
mov
ljmp
nop
gs
push
adc
xchg
fsubrl
ficoml
and
call
rcrb
mov
in
scas
add
jl
mov
add
dec
cmp
pop
subb
test
pop
sahf
mov
in
enter
fcomps
push
scas
lods
sbbl
sbb
mov
subb
pop
shrb
adc
lcall
jbe
cmpsb
lcall
inc
xor
int3
cmp
imul
imul
stos
loop
sarl
or
fisubs
sbb
popa
cmp
cmp
rorl
pop
xchg
and
idivl
mov
lock
jo
rep
mov
xchg
push
js
fcoml
sbb
mov
movsl
outsb
sub
sub
pop
sub
xor
and
pop
add
pop
or
or
out
aad
aam
fdivs
outsl
scas
xor
sbb
test
jmp
xor
js
sub
sub
lods
dec
sbb
xchg
add
js
dec
loope
movsb
pop
in
xchg
lcall
dec
push
loop
dec
or
xchg
sub
das
mov
int3
inc
jb
mov
and
or
pop
push
mov
pop
insl
push
test
sbb
lret
and
icebp
loopne
jbe
test
mov
test
arpl
cmpsl
sbb
pop
dec
xor
aaa
into
pop
push
outsb
lcall
rorl
dec
and
inc
push
aad
pop
in
cmp
lahf
stos
lds
sbb
dec
inc
inc
sub
cmpb
icebp
xor
cmp
in
test
jns
fnstsw
jne
sub
js
cmpsb
mov
pop
push
stos
xor
mov
popf
scas
lret
pop
inc
lods
test
xlat
pop
inc
mov
mov
dec
mov
inc
nop
mov
loope
jg
jbe
xchg
mov
ljmp
pushf
fimuls
in
inc
xchg
mov
ljmp
insl
call
mov
fmuls
clc
imul
or
mov
insl
fsub
mov
cmc
xorl
lahf
loop
cmpsl
cmp
lret
ljmp
cmp
out
dec
arpl
popf
fxch
jne
aas
push
add
cmc
pop
roll
daa
mov
rorl
lret
jmp
push
xor
add
mov
cli
and
cmp
cli
call
or
in
sti
jbe
mov
jns
je
dec
das
jno
lret
sub
wbinvd
push
and
test
ja
sbb
inc
sbb
dec
sbb
and
enter
sbb
test
sbb
push
add
ss
dec
mov
push
or
or
movl
push
imul
iret
adcb
xor
icebp
inc
inc
and
pop
sub
push
mov
mov
les
lods
pusha
int3
and
mov
addl
mov
pop
jae
inc
std
adc
dec
mov
jmp
lock
xchg
push
jnp
pusha
imul
sti
and
jo
mov
rclb
mov
xchg
pop
mov
test
adc
fxam
push
pop
sbbb
ret
inc
rol
mov
jno
mov
lock
in
je
dec
jecxz
pop
aas
cmpsb
sub
add
aad
sbb
insb
xchg
xchg
push
sub
popf
add
xchg
jg
lret
inc
scas
mov
cmp
cmp
pop
outsl
jge
movsb
mov
in
shll
push
popl
sbb
cs
push
push
fs
xor
jmp
lahf
jp
pop
inc
shlb
pop
popa
insb
sub
notl
in
std
cs
out
or
pusha
push
out
sti
pusha
insl
cli
and
jl
or
loopne
xchg
loop
arpl
or
inc
loop
in
cltd
cmp
mov
lcall
pop
ss
bound
jp
jne
jl
lods
xchg
fsubs
cmc
loopne
inc
add
dec
divl
and
mov
jp
mov
lods
dec
scas
mov
clc
testl
gs
sbb
and
cmp
sub
cli
clc
dec
dec
movsb
xchg
out
xchg
push
dec
fstl
mov
or
sub
jge
mov
rcrl
xchg
scas
ret
push
push
pop
jno
cmp
jae
pop
jnp
fldt
addr16
sub
dec
push
xor
mov
jno
jl
clc
mov
sub
out
mov
jnp
into
jp
pop
xor
lods
inc
sbb
insb
loop
ds
icebp
fwait
or
sahf
xor
pusha
sti
gs
je
addb
xchg
sbb
xchg
pusha
jge
jge
jno
jno
sbb
sub
adc
addb
xchg
int
nop
js
add
test
ret
pop
sti
pop
sbb
fwait
das
mov
xor
cmp
push
cmovle
imul
jne
test
jg
in
mov
jl
hlt
push
jno
into
add
and
cs
lods
inc
lcall
aam
into
xor
xsha256
cmpsb
xchg
push
fstpt
sbb
test
mov
sub
rcrl
jle
stos
neg
mov
mov
std
push
imul
cmp
mov
sbbb
mov
jg
pushf
sub
dec
es
cmp
xchg
in
jno
xchg
pop
adc
aad
mov
sub
shrl
mov
mov
mov
into
or
and
movsl
outsl
add
xor
dec
lahf
lcall
mov
fsubl
pusha
dec
mov
and
mov
cmpsb
mov
imul
cmp
push
subl
cli
xor
push
and
cmpsl
add
repz
jp
mov
bound
sahf
mov
icebp
dec
mov
shl
test
push
test
inc
pop
je
cmp
cmp
sub
or
push
adc
xchg
arpl
daa
mov
push
neg
inc
jo
stos
aas
xor
add
and
fmuls
ds
sub
or
mov
xor
fs
aas
aad
imul
pop
xor
jmp
rol
cmp
xor
xchg
inc
or
push
push
inc
ds
and
repz
cld
je
mov
in
ret
pop
mov
xchg
sub
jmp
push
pop
cmp
jmp
cltd
adc
push
sub
repz
pushf
add
lds
xor
nop
or
xor
in
mov
add
ds
daa
les
mov
fistpl
xchg
ds
shrb
imul
clc
imul
in
inc
dec
ret
scas
xor
inc
jecxz
stos
jp
faddl
cmc
push
jbe
add
outsl
and
rclb
nop
fdivp
leave
xlat
sarb
push
push
mov
sub
and
rorl
sub
sbb
fyl2x
add
mov
cs
lea
adc
sarb
out
test
pop
hlt
fstpl
aad
or
jl
inc
aam
xchg
scas
inc
push
ret
xor
push
jb
dec
stos
xor
popf
imul
leave
mov
fisubrl
loope
das
pop
andb
jl
pop
pop
ficomps
add
mov
sbb
lret
jmp
cli
inc
fadd
cmpsl
ds
ss
pop
sti
les
jp
pushf
sub
sub
scas
stos
lret
enter
cmp
shlb
inc
arpl
ljmp
leave
pop
test
sahf
xor
pop
fcoml
dec
imull
shll
aaa
add
stc
in
inc
dec
inc
stos
jl
sbb
adc
xchg
and
xchg
sub
inc
pushf
inc
loope
lods
mov
lods
aaa
push
sti
dec
mov
sub
scas
pushf
cli
xor
jbe
jae
cmp
in
scas
sbb
pop
mov
jbe
cmp
shll
sti
add
sub
inc
fidivrs
mov
outsl
pop
or
repz
jnp
adc
add
das
push
fs
xchg
adc
or
cs
mov
inc
pusha
in
mov
idivb
shll
scas
mov
das
inc
sbb
xchg
ljmp
jge
and
iret
imul
push
mov
mov
cld
push
mov
sbb
and
pop
out
loopne
fdiv
and
sbb
sbb
cmp
adc
cmp
pop
outsb
setae
adc
negb
in
mov
cmp
aaa
pushf
jnp
inc
xor
lcall
inc
clc
xor
pop
aad
dec
pop
cwtl
jb
insb
movsb
mov
scas
mov
sbb
adcb
xor
enter
jp
mov
push
outsb
sub
iret
cmp
xor
inc
mov
inc
aas
scas
inc
loope
shrb
mov
add
shrl
lea
das
mov
loopne
inc
mov
fidivs
lret
lahf
adc
icebp
sub
daa
sbb
pop
loopne
mov
jl
mov
push
lahf
mov
test
jns
lea
imul
test
js
cmp
xchg
mov
push
fisubs
ljmp
out
push
stc
adc
mov
mov
cmpsb
test
dec
xor
xchg
inc
jo
xor
mov
push
lods
fldcw
stos
mov
int
jle
aaa
jg
aas
sbb
dec
sbb
test
xchg
sub
nop
cli
inc
cmp
in
mov
ja
aas
xor
push
xchg
jmp
addr16
shrl
lods
pop
mov
insb
cltd
jge
and
jmp
loopne
push
push
cmp
sub
dec
fsubrs
mov
sub
xchg
push
mov
and
cld
dec
insb
jnp
stc
fdivl
mov
and
fisubl
inc
sbb
pop
jmp
fs
sbb
and
push
ret
scas
inc
pop
in
jl
addr16
sbb
add
pushf
xor
ror
cmpl
cmp
insb
insl
sbb
mov
xchg
inc
notl
push
loopne
mov
jb
mov
xlat
sbb
cltd
dec
out
iret
imul
cld
push
je
mov
sbb
inc
not
mov
pop
insb
stc
mov
sub
jmp
out
add
jg
jl
mov
outsl
inc
fiadds
daa
pop
cmc
dec
mov
push
clc
repz
dec
lret
push
jne
mov
lock
jne
mov
fwait
pusha
mov
mov
push
push
lods
pop
pop
add
pminsw
lret
push
push
sbb
inc
nop
stos
jae
iret
cmpsl
mov
outsl
mov
mov
test
shr
lcall
movsl
xor
xchg
jl
aaa
mov
jb
pop
lret
pushf
mov
or
inc
es
or
adc
jbe
mov
xor
ja
xchg
nop
push
cld
xchg
mov
push
stos
dec
xchg
mov
lds
jno
es
mov
repz
mov
hlt
rolb
xchg
je
fmul
rolb
push
das
mov
adc
jge
dec
sbb
inc
xlat
insl
loopne
jmp
subl
fstpt
fldenv
mov
subl
dec
sbb
cltd
sarb
dec
ljmp
add
or
negl
data16
cmp
pushf
fadds
adc
ror
adc
sbbb
icebp
adc
jne
push
iret
pop
pop
jae
push
cmp
push
sti
cmp
sub
adcb
xchg
movsb
insb
subb
loop
repz
cmp
inc
imul
repnz
adc
in
shlb
sbb
dec
inc
pop
jns
test
lcall
jnp
adc
jmp
scas
dec
mov
dec
test
fs
xor
mov
jmp
xor
or
jmp
insb
fbstp
jno
mov
arpl
inc
pop
sbb
outsl
mov
mov
lret
iret
pop
cli
inc
pop
or
lret
fwait
push
in
jge
xchg
cmp
add
push
xchg
repnz
daa
mov
pop
scas
fldl
adc
in
dec
or
mov
and
sti
pop
cmc
sub
jl
lret
jle
sbb
jb
and
insb
aas
cmpsb
dec
in
loop
cli
daa
mov
icebp
sahf
and
xchg
movsb
pop
and
imul
add
mov
leave
rcrb
lds
orb
sbb
xchg
cmp
add
scas
cmp
fbstp
dec
loope
push
cld
outsl
push
or
cmp
cwtl
enter
or
testl
ret
mov
jmp
pop
sub
sbb
bswap
frstor
jp
jmp
cwtl
dec
xor
xchg
loope
pop
mov
mov
mov
arpl
addb
dec
jns
test
push
jp
cltd
fbstp
in
dec
lock
aam
push
xchg
ja
sar
popa
cmp
cmp
push
pushf
and
mov
jnp
test
lcall
xchg
lea
dec
pop
lds
rol
inc
inc
fidivl
push
xchg
notl
int
mov
dec
fadd
repz
in
in
jbe
mov
push
jbe
mov
testl
rcrb
mov
push
or
mov
mov
pop
jno
je
and
cld
mov
and
popa
call
xor
lret
and
loop
popf
add
inc
cmpsb
repz
testb
fcoml
test
mov
mov
pop
push
lods
es
repz
sbb
cmp
push
mov
test
xchg
je
ss
cltd
mov
sbb
imul
xorl
add
sub
cmovp
inc
pusha
xchg
add
insl
shl
xor
xor
imul
shlb
xor
aad
adc
sbb
sbb
push
dec
sbb
dec
mov
addr16
hlt
mov
push
call
mov
or
ja
jp
fbstp
jg
in
fcmovu
call
bnd
xor
jbe
nop
in
movsl
testb
jb
insl
sub
in
ljmp
pop
lea
test
les
aam
fsubr
mov
xor
push
mov
cwtl
stos
imul
jbe
pop
in
cld
mov
stos
inc
add
mov
adc
leave
out
out
push
loopne
xor
push
iret
cld
xchg
mov
fwait
sbb
and
xchg
loope
pop
lds
nop
mov
int3
add
xchg
stc
cmp
jbe
xchg
push
inc
lahf
sbb
xor
pop
jno
lods
dec
cmp
pop
outsb
sub
push
out
jb
mov
ficompl
xchg
nop
call
andb
push
add
jae
and
jl
pushf
mov
mov
push
pushf
adc
stc
nop
shll
out
cmp
stc
add
push
xchg
inc
dec
ret
fld1
push
push
call
cs
or
stos
inc
fsubl
bound
and
lods
in
std
mov
loop
mov
sbb
sbb
in
in
int
sahf
push
leave
lock
and
jp
xchg
jbe
mov
lods
push
sbb
push
jno
bnd
shll
xchg
adcb
adc
out
das
or
test
jae
inc
pop
push
push
mov
out
and
push
jae
mov
xchg
int
or
in
scas
cmp
pop
ja
or
mov
cmp
pop
cmc
js
jge
cmp
clc
push
xchg
call
inc
in
cmp
in
lret
cmp
add
scas
jnp
xchg
aaa
aad
out
mov
jno
fnstcw
shlb
mov
ss
pop
sub
fisubrs
and
sbb
cltd
sbb
jb
cmpsl
cmp
inc
cmp
and
pop
add
jnp
repz
pop
loope
inc
inc
inc
xchg
popl
lock
int3
add
mov
mov
push
or
cmp
clc
cmp
sarb
imul
jne
testb
xor
mov
push
and
and
cmp
in
adc
pushf
leave
push
cmp
mov
adc
movb
jp
frstor
sbb
mov
nop
insl
mov
pop
scas
mov
or
jne
in
xchg
dec
repz
stos
pop
add
rolb
arpl
push
dec
bound
mov
sahf
mov
xchg
scas
cmp
cmp
dec
or
pop
and
pop
xor
stc
ss
xchg
addr16
cmp
push
out
jno
and
mov
pop
int3
push
call
push
ret
outsl
push
adc
mov
jle
sbb
mov
les
pop
pop
std
sub
cmpsl
jge
clc
das
mov
jnp
jl
movd
jns
mov
data16
lods
xchg
sub
clc
int3
and
xor
cmp
push
dec
sbb
lret
xor
and
jns
sub
mov
dec
mov
mov
in
mov
xchg
ret
sbb
or
cmp
xchg
lods
push
popa
movsb
cmp
pop
in
push
cmp
pop
sbb
imul
and
in
stos
jmp
lea
test
imul
cltd
cmp
sub
sahf
push
fistps
rclb
aam
negl
fsub
xchg
mov
xor
xchg
xor
mov
push
inc
fnstcw
sahf
loope
enter
popf
cs
data16
adc
sub
dec
fcomps
in
in
cwtl
cs
add
xor
inc
fisubrs
sub
push
das
dec
push
dec
aam
ljmp
adc
mov
push
push
adc
popl
arpl
mov
daa
adcl
push
jle
scas
inc
mov
lods
adcl
xchg
pop
sahf
sub
jp
mov
in
fiaddl
call
pop
push
cli
mov
rclb
fbld
scas
out
mov
mov
or
cmp
push
push
jne
aad
mov
mov
insl
jp
cmpsb
lock
or
outsb
inc
xchg
sub
inc
cmpsb
popa
cmp
jno
push
imul
insb
sub
enter
sub
push
nop
pop
repz
mov
lcall
cwtl
cld
aam
or
jge
into
mov
ret
cmp
dec
push
rcrl
not
xchg
mov
fldenv
mov
inc
jl
arpl
je
push
dec
push
loope
mov
jns
inc
fsubrs
mov
mov
rorb
sub
cmp
sub
test
and
xchg
mov
inc
repnz
dec
dec
push
lds
stc
rcl
jne
jbe
jg
ss
jns
and
adc
sbb
test
pop
cmp
sub
nop
out
push
cmc
inc
cli
shll
fdivl
push
test
in
stos
repnz
ficomps
pop
cmpsl
mov
scas
lret
add
lods
stos
jmp
mov
fwait
mov
jno
push
mov
test
or
movsl
lds
loopne
pusha
or
push
jle
mov
sbb
daa
popf
notl
or
popa
xchg
mov
int3
stos
aaa
push
and
and
and
mov
aaa
adc
out
gs
inc
and
lcall
mov
inc
sbb
push
add
pop
jno
push
sbb
shrb
push
ret
sub
xlat
cltd
xor
adc
in
shlb
cmpsb
repnz
enter
fists
xchg
mov
movsl
sub
inc
in
mov
out
fistl
ficompl
adc
sti
cli
stc
pop
shr
insl
xorl
add
aas
dec
outsl
pop
mov
out
or
or
cmpsb
xor
call
lods
cmp
push
mov
adc
je
mov
pop
rolb
jmp
pop
add
lods
pop
rcr
mov
imul
add
es
adc
dec
lcall
orb
test
aam
adc
ss
jb
inc
pop
sub
dec
repnz
cwtl
rclb
cmc
test
in
repz
mov
rcrl
sub
sub
dec
push
out
ud0
xchg
lds
mov
xchg
add
adc
and
mov
dec
add
lahf
out
cli
push
dec
add
scas
out
xchg
add
inc
or
stos
icebp
int3
jge
xlat
leave
jecxz
jge
jge
dec
pushf
mov
xchg
aaa
aad
push
aam
dec
lret
add
cmpb
and
jbe
mov
pop
jae
adc
das
cmp
scas
pop
xchg
mov
loop
jge
sbb
push
lcall
ret
mov
sub
mov
pop
pop
sahf
ss
js,pn
es
lret
lods
imul
xor
sub
fldt
shlb
cmpsl
and
or
sti
sub
mov
fcomps
das
pop
lods
add
repnz
sub
pop
mov
jg
sub
pop
mov
dec
pop
ret
xchg
xchg
mov
dec
sbb
xor
shrl
fwait
shlb
nop
xchg
xchg
mov
fwait
loop
add
idivl
xchg
push
inc
sbb
cmpsb
mov
dec
inc
fidivrl
popf
hlt
aaa
lods
mov
xchg
fnstsw
rcrb
cs
js
insb
pop
cmp
xchg
imul
lds
sbb
jo
inc
sbb
cli
adc
pop
and
fs
ss
inc
jo
push
sahf
test
or
sahf
cmp
les
mov
rorl
lea
mov
sbb
dec
dec
inc
xchg
je
fdivrs
cs
sahf
xor
jmp
mov
sub
cmp
ret
arpl
jbe
mov
push
and
ljmp
in
sub
pop
ja
gs
es
shlb
xor
ror
dec
dec
gs
cmp
mov
dec
icebp
mov
fistpll
dec
adc
and
lahf
inc
sub
pop
jmp
shr
jle
lods
pop
es
in
stos
xlat
mov
imul
mov
xchg
sub
popa
jp
xchg
cmpsb
ret
fcoms
sub
aad
pop
icebp
mov
aas
shlb
popa
js
xchg
mov
xchg
sbb
lods
dec
mov
jmp
sub
das
or
filds
dec
pop
jnp
push
jmp
bound
add
jmp
aaa
shrb
jg
lock
test
inc
leave
test
mov
sbb
sbb
cmp
or
mov
inc
in
ficoml
movsb
mull
arpl
fsubr
xor
mov
mov
fstps
scas
or
ret
jle
pop
fadd
into
mov
enter
aaa
lods
xchg
test
cld
mov
js
test
jl
hlt
popa
lock
push
bound
in
mov
outsb
adc
mov
call
pop
sub
sbb
out
dec
popa
clc
jl
or
rcrl
xor
cwtl
mov
jns
fbstp
push
int
aas
jmp
add
lcall
jnp
js
cmc
cs
push
inc
xchg
or
notb
or
stos
xchg
adc
test
inc
jmp
sti
test
fwait
xor
filds
mov
addr16
push
sbbl
or
mov
movsb
xor
fcomps
push
fwait
xor
jae
aas
jne
outsl
mov
xchg
push
jge
clc
aas
movsb
sub
not
jns
jmp
leave
sahf
sahf
aaa
dec
pop
movsw
xchg
mov
sub
or
aad
out
shll
les
xor
hlt
lret
cmp
xchg
adc
divl
pop
pushf
int
cmpsl
int3
test
movsb
lds
add
and
mov
in
das
in
adcl
lcall
add
loope
xchg
fsubrs
adc
mov
jb
sbbb
xchg
clc
icebp
ret
mov
xchg
add
icebp
cmp
lods
mov
fwait
fs
lea
in
lods
jge
addb
pop
ret
je
mov
jo
push
lods
inc
push
push
lahf
cs
rorb
mov
insl
pop
aaa
and
dec
out
outsb
dec
adc
subb
or
inc
sub
ja
cmpsb
mov
mov
mov
inc
xchg
adcb
jecxz
cli
out
jbe
mov
xor
rclb
pop
jp
jg
sarl
xchg
add
shlb
test
and
bnd
aaa
xchg
pop
imul
cmp
les
cld
pop
int
or
mov
or
or
stos
lods
cmp
cs
fwait
push
sub
out
sbb
fidivrl
jecxz
fists
mov
pop
lock
xchg
repnz
rcr
mov
and
lods
sarl
pop
loope
cli
xchg
pop
mov
imul
cltd
insb
lret
cmp
and
add
jae
mov
adc
inc
push
cmpsb
int3
jl
dec
lods
pushf
xor
sbb
aas
loop
add
mov
sub
aam
dec
les
mov
sti
xor
imul
outsl
daa
pop
xchg
mov
mov
mov
std
jne
jb
ds
xchg
xor
int3
sahf
adc
cmc
mov
loop
iret
jns
jle
lock
mov
push
cltd
push
aad
inc
mov
cltd
xor
xchg
lahf
mov
mov
mov
shrl
inc
imul
repnz
shrb
dec
dec
cs
mov
lock
or
sarl
psubq
pop
fistpl
loop
test
inc
pop
push
repnz
cmp
push
jp
loope
loope
fidivl
aas
shll
into
and
test
cmpxchg
movsl
insb
je
cmp
push
stos
pop
push
test
dec
fidivl
cwtl
xchg
inc
mov
cwtl
fisttpl
pop
ss
push
pop
loope
xor
push
xchg
shrb
pushf
std
mov
pop
mov
mov
sbbl
and
and
idiv
adc
ret
sbbl
mov
aad
aam
lret
mov
clc
jo
testb
or
xchg
jge
mov
jb
jae
jnp
and
sbb
xchg
sub
xchg
jbe
outsl
and
stos
sbb
and
pop
sub
xchg
or
aaa
add
out
pop
repz
mov
xchg
mov
jp
or
mov
pushf
mov
push
xlat
xor
loop
xor
out
adc
nop
lea
or
xor
adc
jg
push
lea
xor
jp
xor
andb
addr16
scas
jbe
fbstp
test
dec
mov
or
repnz
mov
cmp
movsl
in
idivb
pop
cmp
sahf
inc
sbb
aam
mov
adc
cmp
jmp
outsl
test
cmpsl
sub
pop
jne
mov
dec
pop
xchg
std
int
xlat
xor
sbb
jne
ss
or
repz
mov
cmp
das
ret
or
fs
sub
mov
fisubrl
jb
clc
aaa
pop
cmp
pop
ficomps
push
cmp
repnz
sbb
cmp
cmp
sbb
push
inc
outsl
push
out
mov
jb
push
aas
add
push
mov
adc
xor
clc
rolb
xchg
sub
pop
mov
or
pop
sbb
pop
xor
dec
sahf
je
sub
ljmp
pop
push
mov
jb
cmp
rcrb
test
rcrl
fnstcw
fcomi
xchg
jl
test
daa
inc
icebp
push
lret
and
push
inc
add
out
mov
push
or
cmp
adc
cmp
lahf
adc
es
out
xchg
mov
and
bswap
inc
popf
dec
adc
push
xchg
xor
pop
lahf
dec
ret
or
and
xchg
data16
ljmp
dec
xchg
xchg
xchg
mov
jmp
mov
stos
and
inc
xor
add
jo
je
cmp
lahf
subb
lds
cmpb
inc
loop
daa
jo
sbb
out
pushf
fdivrl
xor
push
pminub
pop
mov
cmp
repnz
or
rcl
lods
mov
aam
xchg
push
pop
icebp
jbe
jno
xchg
js
mov
xchg
jle
mov
push
loop
jp
mov
add
xor
push
xchg
cwtl
push
jbe
mov
lods
adc
lea
test
ljmp
sahf
xchg
fmull
push
aam
popa
pop
mov
lods
cmp
pop
xorl
adc
jns
mov
xchg
ljmp
test
fwait
push
nop
xchg
push
imul
mov
cmp
arpl
mov
push
scas
sarl
inc
pop
loope
add
mov
fimuls
jo
mov
arpl
lret
sbb
jbe
jl
and
lret
mov
push
mov
mov
enter
arpl
sbb
out
inc
sub
outsb
xor
xchg
xor
adc
fcompl
adc
fiadds
cmpb
push
sahf
fsubl
je
cwtl
adc
mov
or
jge
popf
mov
fbstp
ret
adc
mov
cmp
clc
movsl
jge
rcl
lret
sar
dec
insb
daa
jno
pop
mov
iret
mov
enter
cmp
stos
insb
jae
lods
imul
loope
cs
fmuls
dec
push
fsubrl
sbbb
jg
mov
push
sub
subb
pop
dec
jns
jo
in
mov
pop
add
mov
nop
xor
shrl
sub
lea
lret
insb
rcrb
imul
cmpsl
cmpsb
xor
in
or
shrb
hlt
push
ljmp
mov
into
lret
out
or
in
fwait
push
aam
push
or
jl
mov
jnp
sbbb
loope
incb
sbb
out
out
add
xchg
mov
out
lock
xchg
cmp
scas
loop
sti
adc
pop
cltd
mull
mov
popa
std
loopne
lret
sbb
inc
add
cmp
xchg
push
mov
cmc
dec
or
xchg
lret
data16
adc
in
and
jno
aam
xor
pop
cwtl
ljmp
jle
lock
inc
lods
in
mov
movsl
mov
mov
out
rcrb
or
ret
loopne
adc
aaa
push
mulb
add
orb
xchg
inc
jns
faddp
popa
sbb
rcrb
mov
icebp
in
test
shrb
cmp
fsts
sub
dec
arpl
les
loopne
test
mov
lds
dec
out
dec
add
fadd
inc
lret
ljmp
mov
jg
cmp
mov
mov
mov
and
cli
xchg
popf
dec
fdivl
hlt
mov
push
out
rcrb
xchg
adc
shr
repz
test
push
and
sbb
xchg
jl
xchg
jge
dec
dec
pop
enter
stc
fs
pop
xor
iret
ja
addr16
xor
pop
xor
fcmovne
cmp
sub
fcmovnb
aam
movsl
or
pusha
push
sub
push
ss
adc
es
leave
arpl
out
popf
les
push
out
call
outsb
inc
pusha
aam
jne
sbb
jne
lahf
mov
add
jl
gs
add
jl
es
add
sub
cmp
cltd
xor
incb
sbb
pop
jbe
jl
std
sub
cmp
xchg
jl
dec
fs
imul
mov
mov
or
adc
xlat
ss
sti
and
fstpt
dec
shlb
sub
cmp
ds
call
into
cwtl
mov
mov
int3
add
es
mov
pop
cld
or
pop
inc
sub
xchg
add
es
mov
jo
jg
dec
mov
imulb
test
imul
cwtl
hlt
push
cmpsb
decl
sub
gs
sbb
and
aad
in
stos
push
out
rcl
insb
lds
mov
adc
das
mov
pop
rorl
adc
push
mov
pop
mov
add
add
mov
imul
ret
hlt
dec
in
dec
mov
add
or
xchg
mov
adc
jns
mov
loopne
jl
fadds
movsb
stos
mov
sbb
fdiv
inc
pop
sbb
sub
shrl
fidivs
data16
in
int
fistps
add
test
sti
push
adcl
push
or
das
fwait
xor
pop
pop
out
ret
sub
inc
and
je
arpl
inc
lret
add
or
cmp
addr16
lret
mov
dec
fldcw
fbld
xchg
in
push
cmpsl
out
test
mov
sbb
nop
out
mov
xchg
das
push
lds
xor
outsl
jmp
adc
add
inc
inc
pop
push
mov
shr
xor
in
push
or
ret
mov
dec
mov
add
adc
inc
aas
pop
mov
jne
sub
aam
rolb
sbb
push
jno
loop
sbb
pop
add
repnz
adc
and
jp
repnz
repnz
or
jl
sbb
push
ja
out
inc
push
popf
push
inc
pushw
cli
cwtl
or
mov
bound
rclb
repz
arpl
cmp
icebp
and
inc
jns
inc
incl
inc
mov
adc
dec
xor
aam
pop
lret
lds
repnz
fucomp
or
mov
push
mov
loopne
das
mov
dec
or
adcl
and
mov
cwtl
sbb
clc
jp
ds
adc
xor
popf
xchg
xchg
pop
dec
fimull
orl
mov
inc
outsl
sub
mov
inc
xchg
xor
adc
xchg
inc
pushf
cmp
xchg
adc
or
xchg
and
xor
lret
xorl
ret
mov
test
addb
daa
jmp
imul
int
leave
test
stos
scas
cmp
cmp
jae
shrb
sti
nop
xchg
sub
cmpsb
data16
jmp
in
outsl
pushf
sarb
int
jne
adc
push
push
mov
pop
xchg
aas
in
scas
pop
mov
shlb
into
sub
ds
or
sub
ret
outsl
lods
push
notl
loope
mov
pushf
aam
xor
stos
pushf
jae
js
and
cli
adc
sub
inc
pop
dec
cli
imul
into
ret
xchg
fwait
test
in
clc
jo
notl
arpl
scas
dec
fs
inc
test
js
sub
jmp
mov
lahf
dec
divb
dec
mov
das
stos
ja
icebp
andl
cmp
pop
repz
xchg
sbb
mov
test
int
arpl
into
push
inc
dec
or
test
xor
in
jecxz
ja
sbb
and
dec
sbbl
jecxz
ss
xchg
rorl
fidivs
dec
add
jae
std
movups
aad
xchg
mov
leave
hlt
mov
push
ret
mov
and
pop
dec
fidivl
mov
test
xlat
mov
jmp
mov
jno
mov
sbb
mov
xlat
in
cmp
clc
out
cltd
mov
dec
shll
jnp
pop
mov
inc
test
addl
cmova
test
jbe
xchg
loopne
das
pop
stos
mov
data16
mov
push
mov
mov
subb
lret
add
shll
mov
or
out
sub
inc
lds
loop
pop
enter
sub
divb
cmpsl
out
pop
adc
mov
dec
in
adc
loope
xchg
adc
jns
mov
sub
sbb
fsubrl
cli
int3
push
adc
push
mov
stc
arpl
jne
in
mov
insb
mov
xor
scas
xor
dec
scas
cld
xor
es
push
mov
outsb
xlat
and
lds
lods
xchg
add
push
in
jmp
push
mov
or
test
push
in
test
push
stc
cmp
test
push
pop
mov
int
lock
les
sbb
pop
icebp
lcall
popa
les
shlb
hlt
xchg
loope
mov
push
sub
xor
push
test
test
mov
sarb
sbb
xchg
pop
cmp
cltd
cmp
mov
jmp
out
test
dec
aam
test
es
sub
sub
fcomps
shll
and
jno
imul
pop
dec
adc
dec
jo
mov
out
mov
adc
sub
rcrl
xchg
adc
mov
or
loope
aaa
aaa
push
cmp
lea
pop
cmpsb
sbb
imull
add
sub
mov
mov
sub
xlat
jle
mov
test
insl
mov
fwait
adc
inc
or
add
xorb
cmpsb
jno
data16
sub
inc
fsts
cmp
jmp
push
pop
mov
aas
call
add
xor
out
inc
pop
cmp
mov
push
call
xchg
cmp
cmpsl
mov
jo
pop
movsl
xor
pop
add
popa
loope
data16
xorb
cmp
sub
out
dec
add
mov
aad
in
xor
outsb
mov
fidivs
pop
ss
cmp
add
jmp
bound
sar
pop
popa
sbb
lcall
fimuls
shl
pop
cmp
add
push
repz
imul
aaa
inc
add
cmpsb
loopne
inc
cmp
icebp
mov
out
data16
jbe
pushl
mov
fbstp
mov
or
cmp
call
push
sbb
ret
sahf
xor
outsl
pop
cli
pushf
dec
rol
mov
rcl
adc
pop
push
cltd
or
pop
icebp
outsb
cmp
les
add
mov
jnp
mov
sub
adc
mull
popa
push
stos
sbb
lods
shlb
jge
xchg
test
or
nop
fwait
in
stos
test
daa
inc
shll
mov
and
pop
int3
ja
arpl
aad
cmpsl
adc
dec
xchg
outsl
testb
fxch
dec
loope
cmp
cmp
mov
cltd
xchg
ljmp
xchg
shl
pusha
pushf
dec
and
icebp
and
mov
dec
xor
xchg
mov
movsl
add
sbb
mov
int
jge
mov
es
jmp
cmpsl
cltd
push
add
jb
sbb
mov
mov
fs
inc
ja
xchg
sub
fisubl
or
jns
cmp
insb
bound
add
jno
popf
pop
inc
mov
and
push
cltd
fs
inc
mov
pop
bound
stos
inc
xor
fistps
mov
cmpsb
fnsave
lods
mov
push
inc
int3
shl
ds
adc
jbe
ret
inc
lods
add
dec
dec
sbb
iret
push
sub
ds
rorl
ss
imulb
push
test
lock
sbb
add
or
jge
rcrb
dec
and
sub
pop
scas
movsb
xorl
lret
int3
lret
in
fdivrl
out
mov
test
xor
mov
xor
icebp
add
je
mov
test
scas
pop
in
nop
lods
add
jmp
mov
and
cmp
sbb
mov
and
aad
inc
dec
push
sub
cld
cmpsl
and
mov
rolb
or
mov
inc
xchg
das
cmp
push
lret
jge
data16
lahf
xchg
adc
movsb
mov
mov
loope
mov
sbb
adc
sub
mov
outsl
js
inc
push
lods
jno
jecxz
dec
cwtl
icebp
xchg
mov
les
in
lds
cmp
sub
sahf
or
daa
mov
inc
arpl
ret
mov
xor
frstor
jecxz
xor
add
lahf
call
pop
or
out
pusha
sbb
rol
mov
lret
mov
in
sbb
push
in
or
mov
movsb
call
aad
adc
scas
mov
arpl
jb
loopne
inc
cli
mov
fldt
stos
inc
xor
push
dec
rclb
out
fisubl
push
mov
aam
scas
mov
add
movsl
test
jb
pop
adc
scas
js
or
mov
jge
outsl
rcrl
iret
mov
ret
push
pusha
adc
add
movsb
rcll
loop
push
icebp
cmp
cmp
push
mov
test
pushf
and
cmp
test
test
loope
stc
dec
xorb
in
adc
lock
and
out
adc
push
out
insl
add
jae
mov
dec
into
cmpsl
out
popa
cmp
push
sub
cwtl
incb
lret
popf
pushf
xor
daa
add
mov
mov
push
mov
int3
loope
std
cld
lret
bound
pop
jle
dec
adc
sub
inc
shll
mov
cld
sub
push
and
inc
inc
lahf
pop
shlb
lahf
dec
and
push
outsb
and
mov
push
test
cmp
sub
pop
enter
scas
jg
aam
cmp
cmpl
in
jle
andl
jo
mov
cltd
into
iret
add
sbb
mov
xchg
repz
cld
or
add
sbb
fs
popf
in
or
bound
aam
inc
scas
popa
xor
ljmp
popf
push
push
aas
jg
ljmp
out
rcl
push
pusha
sbb
cmp
mov
loopne
inc
mov
loope
inc
popf
xchg
add
insl
inc
push
stos
cli
std
lods
pop
mov
aas
jecxz
cld
xchg
loopne
arpl
lods
push
rcll
negb
ss
cltd
sbb
loopne
pop
push
adc
stos
xor
jmp
xor
rol
clc
repz
movsl
bound
js
dec
int3
xor
cmp
loop
lret
mov
dec
mov
push
test
movsl
insb
out
jle
test
pop
das
jbe
les
and
jno
cs
arpl
popf
and
neg
inc
adc
negl
dec
sbb
mov
in
and
adc
ss
cwtl
subb
and
inc
popa
and
xchg
mov
daa
lods
fstpt
jle
std
or
aad
int
sub
push
jecxz
pop
icebp
sahf
jbe
pushf
or
out
and
adc
xchg
mov
fwait
es
inc
das
dec
add
out
jp
aam
mov
mov
lahf
lret
jecxz
jns
dec
xor
in
adc
xor
and
pop
cld
pop
es
adc
dec
mov
in
mov
xchg
xchg
or
aam
xor
jg
cmc
ljmp
mov
insl
loopne
pusha
orb
mov
xchg
test
cmp
in
add
mov
lea
and
and
rclb
sub
daa
mov
icebp
and
adc
out
adc
dec
xchg
mov
and
sub
mov
iret
mov
xor
lods
icebp
adc
movsl
inc
test
pop
pop
push
xchg
test
insl
or
popf
dec
fs
mov
or
dec
and
jmp
loopne
and
loope
lret
push
mov
mov
fildll
jl
lods
mov
loopne
or
jb
aas
xchg
mov
sbb
fwait
xor
mov
xchg
cmp
adc
mov
aaa
pop
andb
cmp
mov
test
in
jne
pushf
cmp
add
push
rclb
ret
pop
sub
inc
out
leave
in
rcr
cwtl
inc
std
push
xlat
xor
lret
and
je
popf
dec
dec
lea
in
pop
inc
mov
in
xchg
sbb
andl
movsl
imul
xchg
jb
mov
dec
arpl
lret
add
and
mov
in
xchg
pusha
adc
xchg
mov
push
adc
jnp
xor
jnp
sub
sub
xor
out
scas
or
int3
xchg
pop
aas
lret
push
pusha
loop
adc
cmp
sbb
adc
pop
sub
out
and
jnp
inc
sbb
mov
sub
fstl
rorl
sbb
cmp
inc
popl
cmp
sahf
aad
nop
mov
je
jbe
movsl
cmp
std
jp
das
push
fmuls
lea
cld
xor
dec
pop
idiv
push
push
adc
jle
adc
rcrl
cmpsl
cltd
xor
in
xor
cmp
and
sbb
or
hlt
sbb
lods
inc
movsl
xor
xchg
lock
cmp
aaa
and
ss
mov
lahf
inc
jno
ja
incl
shl
jnp
lret
pop
sub
fcoms
cmp
cltd
jns
in
std
push
inc
cwtl
stos
nop
xchg
xor
cltd
out
int
pop
or
xlat
fisttpl
inc
inc
pop
and
jae
mov
sbb
jo
sub
movaps
repnz
fstps
xor
pop
mov
xchg
mov
andl
fs
mov
pop
jae
sbb
jg
xchg
xor
push
mov
adc
cmp
pop
or
xchg
adc
in
pop
ror
movsb
xor
sbb
adc
decb
movsb
jae
inc
sub
mov
ficoms
and
sub
mov
lahf
out
sbb
test
adc
mov
sar
xor
dec
and
pop
repnz
lea
popf
jg
cmpsl
lcall
push
out
fidivs
mov
push
xchg
aaa
sahf
mov
pusha
in
lcall
jbe
ret
xchg
mov
enter
or
lods
das
sub
repz
adc
dec
dec
adc
mov
mov
addr16
adcl
fidivrl
add
inc
jmp
out
mov
fmull
stos
fs
test
add
jmp
arpl
inc
popf
cwtl
lea
je
out
jle
mov
movsl
pop
xchg
add
push
mov
or
xor
cmp
dec
mov
mov
loope
mov
mov
fidivl
dec
mov
mov
icebp
movsl
xchg
pop
xorl
loope
xorl
mov
inc
in
cld
xchg
outsb
in
mov
imul
pusha
sub
and
push
sub
bound
pop
insl
mov
ljmp
orb
daa
fdiv
jne
jmp
dec
push
aas
jge
lods
mov
xor
cmp
daa
ret
xchg
xor
clc
into
lods
jo
stc
pop
mov
xor
mov
push
ds
lods
xchg
jg
leave
pusha
out
test
mov
pop
cmp
aas
mov
test
cmp
cli
mov
mov
push
xor
lret
and
andb
xlat
dec
mov
or
sub
ficomps
leave
ljmp
mov
rcll
xchg
mov
pop
adc
sti
push
jle
mov
lock
mov
les
cmc
shl
lock
pusha
nop
daa
xchg
insb
jns
divl
cmpsb
stos
leave
shrl
int3
push
add
out
and
aas
pop
outsl
bound
sub
test
jo
mov
imul
or
pop
sbb
icebp
adc
cmp
pop
test
fmull
xor
enter
rol
int
and
pop
adc
pop
std
shlb
cmp
add
mov
psrad
add
rolb
ljmp
add
addr16
mov
push
shll
lea
dec
add
mulb
and
insb
add
lcall
arpl
push
mov
xchg
cld
jns
cs
stos
sbb
scas
lds
inc
adc
and
loope
inc
cmpsb
rcrl
mov
xor
fstps
push
push
pop
mov
xchg
in
and
jg
sti
pop
daa
cmpsl
sbb
out
sbbb
aam
cmp
or
pop
push
ja
add
dec
cmp
ficoml
add
scas
pop
inc
xor
rclb
pop
scas
push
mov
fisubrs
xor
xor
and
sub
adc
sub
mov
lret
jmp
mov
repz
jne
in
rorb
ret
sub
mov
pop
jecxz
imul
mov
jecxz
lods
inc
xor
mov
dec
adc
dec
pop
xchg
ficomps
xchg
push
dec
xchg
nop
test
loopne
mov
jg
ljmp
sub
ficompl
int3
fsubrs
jg
mov
xchg
pop
pop
cli
or
leave
push
lahf
cmp
add
mov
pop
lods
push
cmp
add
subb
jmp
mov
andl
push
lods
mov
aam
paddd
xlat
mov
and
int
scas
std
add
sub
add
dec
xchg
mov
rcrl
fldlg2
or
pop
or
mov
and
into
push
push
cld
xchg
mov
insl
nop
and
or
stos
inc
arpl
mov
shll
and
dec
gs
fistps
out
mov
xchg
dec
xor
out
sub
push
cmp
inc
xor
lret
lods
imul
cmp
das
jnp
popa
push
mov
fadds
lea
roll
and
or
cmp
cmpsb
jle
fsubrs
rcr
push
pushf
jo
push
fnstenv
jg
mov
xchg
push
mov
xchg
cmp
stos
mov
and
lret
pop
lcall
dec
mov
enter
dec
sbb
lock
jnp
mov
mov
dec
or
jle
stos
inc
push
aad
or
push
push
inc
inc
inc
sahf
lods
jne
fsubrs
push
mov
mov
gs
push
mov
pop
stos
stos
mov
fmul
rolb
push
dec
ret
leave
enter
ljmp
adc
aas
mov
pop
shl
ret
test
dec
loop
cwtl
or
and
icebp
xchg
push
mov
mov
imul
imul
mov
fiaddl
dec
mov
std
xor
pop
in
add
add
and
and
mov
stos
int
sbb
and
clc
cmp
mov
stc
mov
cli
jl
and
mov
push
jecxz
xchg
mov
aas
add
in
stos
sahf
inc
icebp
jmp
mov
jo
rcl
test
mov
dec
add
mov
push
rorb
inc
jl
dec
scas
and
test
xor
mov
test
scas
xchg
cmp
lods
sbb
ds
pop
dec
cmp
aaa
jnp
bound
mov
inc
dec
aad
or
sbb
outsl
add
fstps
out
inc
xor
cmp
in
jb
push
mov
dec
or
mov
in
rcll
sub
push
fmulp
cmp
sbbb
xor
dec
mov
sub
xor
dec
add
adc
dec
xor
push
movsl
rorb
test
sub
pop
jp
or
outsl
push
jp
nop
popa
decb
sub
cmp
bound
das
adc
clc
leave
mov
sub
xlat
xchg
xor
xor
and
stos
daa
test
in
cmpsb
and
jbe
dec
cltd
test
xchg
jno
jle
mov
pop
mov
lahf
cwtl
ret
sub
dec
mov
lcall
les
mov
scas
inc
cmp
inc
insb
js
leave
int
pop
xor
sub
sbb
sub
movsl
or
fcompl
adc
lods
pop
out
pop
fisttpll
sub
mov
cmpsb
mov
push
rep
stos
push
aam
sbb
xor
jle
jl
icebp
lds
or
mov
aad
lds
jnp
mov
int
mov
inc
pop
test
test
pop
mov
aaa
xchg
rol
xchg
cwtl
cld
xor
cmpsb
xchg
loopne
or
lcall
rolb
pop
aas
and
rcrl
sub
ds
test
icebp
aas
adc
test
jno
fcoml
enter
or
jge
jno
xor
or
pop
fistps
sbb
or
xchg
stos
mov
dec
clc
ja
cli
dec
aad
jb
js
inc
insb
add
add
mov
inc
and
jne
adc
mov
insb
cmp
stos
in
xor
lahf
aaa
xchg
pop
mov
mov
jb
add
shrb
vsqrtps
fisubrl
mov
in
sti
dec
sbb
xor
jecxz
inc
jmp
cmp
rclb
cmpsb
cmp
sub
pop
mov
rolb
cmp
xor
sub
in
dec
jnp
stc
test
imulb
cmp
jp
sbb
and
fisubl
clc
push
fistpll
push
outsb
sbb
xchg
xor
lock
test
push
subb
jo
mov
push
js
add
xchg
adc
xor
cmp
sub
mov
add
adc
jmp
and
push
jmp
jns
mov
jmp
jl
lds
inc
jl
leave
imul
fistpll
test
ret
fwait
daa
int3
int3
or
jb
dec
pop
out
push
jg
cmp
sbb
or
mov
sbb
jnp
add
insl
pusha
clc
mov
mov
out
subb
shll
xchg
inc
mov
push
jbe
push
or
push
xchg
jno
aad
mov
dec
and
or
pop
es
add
push
lahf
and
lea
xchg
lock
inc
or
xor
popf
lret
sti
pop
cmc
mov
ss
mov
push
rcrb
andl
or
cmpsl
mov
push
cli
or
clc
cmp
sbb
xor
pop
inc
push
fisubl
xor
aaa
loopne
sbb
in
jne
clc
sahf
jg
mov
mov
xor
sub
mov
mov
pop
xchg
sub
out
adc
pop
adc
iret
data16
les
push
icebp
dec
push
add
lock
push
jnp
out
cmpsl
push
lods
fmuls
dec
out
pop
mov
inc
push
rcrl
cmp
inc
pop
dec
jno
sub
mov
mov
aas
mov
sub
sbb
sbb
and
hlt
cmpl
inc
mov
cmpsb
lds
sbbl
xchg
outsb
sub
dec
dec
fdivs
shrl
scas
and
jbe
xor
adc
jecxz
int3
jg
xchg
pop
rcrl
mov
sub
cmp
test
pop
push
daa
xchg
xor
and
ljmp
xor
in
fmuls
or
in
push
jmp
add
test
and
loope
das
mov
jge
or
jle
jle
loope
test
daa
mov
mov
jno
and
lcall
xor
xlat
jnp
mov
lahf
ret
bound
das
jmp
in
pop
mov
jge
cmp
sbb
cmp
daa
cmc
push
gs
cld
out
push
mov
movsl
fdivr
arpl
or
pusha
xchg
adc
xor
mov
mul
fstpt
mov
lea
jg
sub
test
adc
mov
inc
push
and
pop
gs
xchg
aam
leave
aaa
enter
repnz
neg
inc
fnstcw
fbld
decb
pop
pop
xlat
scas
inc
pop
push
in
jae
int
xchg
daa
mov
mov
repz
and
or
gs
insb
fbstp
addl
into
inc
out
mov
cwtl
rcl
pop
or
movsb
addr16
inc
lret
aaa
mov
in
mov
int3
fwait
lahf
shlb
adc
push
mov
stc
je
subl
xchg
mov
iret
cltd
cs
jp
jae
sbb
jb
mov
cmpsb
jae
dec
enter
pop
and
cmp
cmp
test
aas
mov
adc
aad
jno
sbb
sub
call
lock
push
jmp
paddq
into
jns
jo
in
sub
add
push
push
out
jecxz
mov
cmp
dec
rclb
dec
pop
mov
lods
mov
or
test
jl
mov
pop
jb
mov
loope
ss
inc
fnstsw
adc
inc
adc
xor
pop
dec
jge
jmp
lods
cmp
push
push
mov
test
sbb
bound
mov
jae
sti
in
mov
in
mov
xor
clc
cmpsb
fwait
inc
shlb
sub
clc
or
insl
add
sub
ds
mov
jg
push
and
loop
push
imul
inc
movsb
sti
div
fnsave
adc
scas
inc
pop
and
xchg
xor
add
xor
loope,pt
dec
loopne
xor
sbb
xor
cmp
outsb
scas
fldcw
push
fmull
in
jne
fbld
xchg
xchg
mov
adc
cwtl
sar
push
jmp
mov
fcmovnb
test
lods
js
sbb
and
mov
sbb
sbbb
je
insb
fsubr
popf
dec
mov
imul
mov
lods
inc
dec
lods
jae
adc
shrb
pop
pop
and
jns
hlt
cmpsb
imull
mov
movsb
aas
aam
gs
inc
sbb
adc
arpl
cli
int
mov
cmc
pop
xlat
scas
lcall
adc
lcall
out
dec
jecxz
aas
xor
out
push
sub
push
ret
and
pop
repz
push
aad
jp
mov
pop
in
and
pop
dec
add
mov
insb
add
ret
fwait
mov
push
xchg
sub
fsubrs
stos
xor
lock
cwtl
lock
xchg
sub
cmpsb
movsb
pop
adc
scas
ret
cli
xchg
xchg
mov
sbb
jle
in
loop
push
adc
cmp
mov
repnz
pop
pop
adc
mov
outsb
jp
lret
divl
mov
sbb
outsb
push
cld
dec
loope
popa
jno
shlb
mov
or
fdivr
push
ljmp
xor
call
pop
mulb
bound
jmp
mov
out
xchg
cmp
rcr
and
or
adc
or
lea
dec
insb
mov
cltd
pop
and
xchg
pusha
cmp
mov
jge
daa
fldcw
mov
inc
test
lcall
fs
or
inc
ss
jbe
or
sbb
xor
pop
gs
aas
jp
loope
pop
cmpsb
inc
push
fs
inc
int
aad
mov
int
inc
jp
mov
fmul
aam
insl
push
push
sbb
scas
hlt
or
xchg
add
jg
out
mov
shl
pop
les
jmp
sub
dec
pop
fistps
loop
xor
inc
es
xchg
sub
lcall
or
and
cmp
fcoms
push
leave
lcall
or
inc
pop
jb
add
test
fldt
pop
push
pop
lds
into
sub
push
ds
lret
aam
jl
test
dec
movsb
mov
push
push
jbe
test
lret
sti
je
leave
pop
jp
or
push
sbb
movsl
cmp
jecxz
popf
fdiv
adc
lods
test
xchg
sbb
sub
leave
add
inc
lret
mov
push
jbe
movsl
imul
loop
xchg
popf
movq
aas
mov
popf
push
adc
dec
call
sub
dec
insb
test
mov
leave
push
out
jb
fimuls
outsb
mov
orl
mov
fistps
out
sub
mov
sbb
ds
mov
lds
jbe
int3
and
cmp
gs
in
mov
adc
xor
cmp
xchg
insl
push
testl
cli
push
jl
xchg
push
adc
shrl
mov
les
xchg
ds
jbe
xor
icebp
aaa
movsb
mov
cmc
cltd
sbb
stc
jmp
xor
fwait
stc
je
or
pop
jns
mov
mov
dec
pop
or
jo
sub
clc
push
pop
shrl
lock
cmp
rolb
sahf
add
aas
mov
push
test
shll
in
sbb
imul
out
lods
mov
aam
movsl
cmp
notl
add
es
inc
pushf
insb
or
test
cmpsb
mov
bound
inc
andb
push
adc
add
sbb
xchg
jbe
and
imul
cmp
inc
iret
and
fisubrl
test
xchg
daa
call
or
fildl
jecxz
mov
or
inc
adc
repnz
xchg
push
test
and
cmc
jl
shll
inc
out
mov
add
pop
movsb
arpl
cmp
es
jle
sarl
dec
pop
adc
mov
mov
into
std
pop
dec
sbb
sahf
test
movsb
jl
pop
adc
and
sub
fdivrl
lret
or
lock
test
nop
in
sbb
hlt
jp
pop
cmpsb
scas
jg
mov
nop
mov
aas
popf
push
mov
mov
xlat
movsb
inc
arpl
lret
cmp
fsubrs
pop
jl
or
pop
popf
sub
outsb
adcl
adc
lcall
sbb
mov
xor
inc
dec
dec
push
mov
fs
cld
and
test
imul
mov
jb
cmc
or
fs
jb
jno
or
and
dec
push
jo
pop
popf
cmp
in
jae
mov
pop
push
dec
pop
sub
dec
ret
mov
insl
aad
and
cmp
jns
xchg
mov
lret
int3
pop
cmp
sub
rol
xchg
mov
fisttps
cwtl
jae
dec
mov
mov
stos
adc
imul
ss
push
sahf
ficomps
hlt
lahf
mov
push
cmc
mov
std
cltd
imul
push
sahf
jge
aam
pop
mov
and
jle
ret
add
loop
cmp
sbb
stc
or
xchg
cltd
sub
loopne
js
addr16
lcall
adc
xor
jns
mov
ficomps
icebp
dec
mov
sub
ret
outsb
gs
lock
mov
mov
dec
pusha
dec
rcrb
mov
mov
les
arpl
jb
out
cli
xchg
out
adc
pop
shlw
mov
cli
xchg
imul
sbb
pop
jae
shlb
push
enter
int3
mov
shrb
xorl
clc
dec
cli
xor
lods
fdivrs
stos
int3
mov
jo
push
and
or
xlat
sub
sbbl
add
lahf
jle
inc
in
push
sbb
fwait
jp
xchg
imul
imulb
in
gs
xchg
clc
jae
lock
or
mov
rclb
mov
in
movsb
cmp
loope
cmp
add
mov
xchg
jb
xchg
rorb
rol
fs
adc
inc
jae
xchg
sti
jb
inc
push
or
or
xchg
dec
loop
loope
adc
lock
mov
add
jo
push
outsl
xchg
scas
push
inc
mov
jb
add
and
adc
inc
pop
mov
fisubl
cmp
in
or
fldcw
inc
aaa
mov
mov
xchg
dec
imul
jo
sbb
scas
shrl
mov
leave
shll
push
movlps
arpl
adc
cmpsb
popf
mov
insl
filds
add
cmp
repz
jb
adc
outsl
rolb
adc
sub
call
or
dec
dec
mov
rcr
cmpsb
mov
aad
add
cmpsb
dec
nop
push
jmp
into
popa
mov
outsb
pop
mov
fsts
cmp
xor
cmpl
add
push
mov
push
imul
shrb
inc
push
mov
loope
je
orl
aam
in
cs
pusha
loop
adc
inc
fldenv
cld
insb
popf
outsb
pop
add
dec
dec
mov
fcmovbe
or
add
ljmp
stc
jl
inc
pusha
test
or
adcl
mov
inc
mov
xchg
xchg
in
inc
lds
mull
fistpl
jne
or
mov
xchg
popf
cmpb
mov
movsb
cmp
jno
mov
ret
inc
cmp
cmp
and
mov
mov
push
sbb
sarb
in
dec
int3
cmpsb
nop
xchg
xor
or
xor
jae
cmp
nop
xor
xchg
fnstenv
pop
jne
push
mov
mov
pop
call
sti
repz
fiaddl
mov
mov
aaa
add
push
popf
sub
in
add
push
adc
test
inc
and
xchg
xchg
dec
mov
jno
inc
arpl
xchg
imul
cmc
scas
push
pop
in
xchg
lods
sub
add
push
mov
rcll
bound
cltd
ja
pop
lret
fisttps
push
lock
and
xchg
shr
sub
lret
dec
lahf
repnz
fsts
xor
mov
mov
out
push
enter
in
decb
into
bnd
cmpl
add
mov
test
lret
xchg
dec
sub
addr16
stos
es
or
stos
adc
sbb
cmpsb
jo
pop
lahf
lcall
sub
jl
mov
movsl
dec
scas
sahf
cmc
cs
jb
push
push
bound
roll
and
in
leave
mov
scas
rol
andl
push
sub
loopne
xchg
or
mov
jae
sub
fs
pop
fcmovnbe
ss
jo
dec
lods
mov
mov
jge
mov
sbb
jl
pop
fstl
fwait
in
std
shll
aas
sti
rcrl
aaa
add
sbb
push
cmp
adc
daa
data16
addr16
test
push
loopne
ljmp
ret
xchg
dec
sbb
push
sbb
cmp
aam
pop
or
sub
push
adc
int3
popa
mov
stos
push
lea
jmp
rcrb
xchg
ss
adcb
pop
ja
adc
and
adc
push
addr16
in
inc
sahf
sub
or
dec
es
inc
cmp
xor
push
cs
jbe
iret
cmpsl
cmp
sbb
int
into
scas
outsb
imulb
mov
cmp
add
xchg
pop
addr16
pushf
add
pop
fcoms
xor
mov
or
loop
iret
in
add
std
out
add
lahf
pusha
popf
clc
ja
adc
inc
test
mov
adcb
adc
xchg
add
stc
jo
sbb
and
mov
mov
out
push
test
sub
xchg
sub
pop
mov
sub
push
jle
repz
cmpsl
cmp
xor
leave
cli
cmp
arpl
lahf
fst
xchg
addr16
out
jl
xchg
loope
fidivrl
nopl
gs
and
ljmp
fcmovnu
add
jle
jbe
dec
or
inc
push
cwtl
out
sti
add
inc
push
push
popf
stos
jmp
mov
and
jb
je
xchg
call
mov
loopne
in
gs
cmp
mov
sbb
mov
aam
and
adc
hlt
mov
ror
out
adc
leave
xor
fisubs
dec
sbb
aad
sub
insl
popf
stos
dec
mov
mov
sbb
rorl
iret
push
call
adc
pop
push
sarl
jle
inc
pop
imul
cmp
jl
cmp
adc
sbb
scas
xor
cmpsl
or
repnz
sbb
mov
iret
jp
push
xor
rcl
fcompl
sbb
dec
imul
sub
in
mov
ret
cld
sub
cs
xchg
daa
out
sub
add
scas
sub
or
or
jl
lahf
mov
sarl
std
ljmp
shrl
adc
test
mov
or
aaa
lea
out
loop
adc
inc
jp
jno
loopne
loop
fs
xrelease
imul
or
pop
insb
pusha
loopne
cmp
xchg
mov
ret
adc
xchg
and
jp
lret
ss
mov
ds
jo
sbb
leave
sarb
jmp
loop
jg
inc
mov
call
pop
insb
push
jge
je
dec
outsl
jb
mov
fstl
incl
test
cmp
jne
cmp
inc
mov
ficomps
loopne
mov
or
test
xchg
adc
outsb
mov
sbb
mov
jp
xchg
pop
lods
xchg
pop
mov
xchg
xor
or
and
xchg
pop
mov
mov
or
test
fdivrs
dec
stos
or
sub
pop
imulb
inc
lahf
je
sahf
xchg
or
push
rcrb
pop
xchg
mov
lods
mov
aad
mov
mov
test
je
pop
inc
add
pop
mov
lods
shrl
xor
out
lea
push
js
add
mov
sub
mov
lds
movsb
dec
fcmovu
pop
push
jmp
lahf
out
sti
out
or
push
insl
mov
xchg
jbe
fdiv
adc
pusha
lret
data16
and
int
int
icebp
sbb
push
sub
nop
out
out
pop
sub
into
or
int
out
xor
loopne
sbb
add
xchg
mov
in
or
xchg
sub
leave
mov
mov
push
adc
add
inc
xchg
aad
push
popa
lods
inc
inc
mov
stos
sub
push
ss
xchg
fwait
push
movsl
lret
leave
jbe
or
mov
nop
hlt
pop
push
cmpsb
jno
sub
enter
cmpl
lcall
and
jmp
jge
mov
stos
fdivp
jnp
not
arpl
pop
mov
jbe
lods
enter
mov
roll
xchg
cmpsb
mov
push
xchg
jae
imul
fcoml
out
push
or
push
or
push
call
clc
dec
inc
xor
or
out
or
or
adc
mov
add
shlb
js
push
sbbl
lods
xchg
ljmp
cmp
sahf
dec
hlt
scas
hlt
in
push
insb
adc
mov
imul
add
pop
test
popa
cmp
in
fldt
inc
ret
arpl
in
loop
faddl
enter
and
mov
adc
repnz
jbe
cli
aam
aaa
addl
mov
push
cmpsb
add
jnp
jg
out
mov
mov
imull
imul
mov
pop
nop
jnp
xchg
pop
mov
in
cltd
repnz
andb
or
xor
jbe
jge
call
mov
xchg
mov
in
call
jp
inc
inc
push
sub
pop
iret
arpl
negl
xchg
jle
cwtl
cld
ljmp
outsl
add
mov
data16
stos
call
fs
xor
movsb
add
sahf
cmc
jno
mov
in
xchg
movsb
mov
cli
stc
dec
xchg
push
push
mov
loopne
mov
cmp
cli
xchg
mov
cmp
mov
sbb
icebp
fwait
fxch
adc
inc
dec
fldenv
flds
lea
push
rcrb
movsl
cltd
jecxz
dec
ljmp
mov
mov
repz
mov
jns
mov
xorl
mov
jmp
add
notb
pop
inc
jp
add
pop
inc
ljmp
xchg
std
cli
or
gs
cmpb
add
mov
enter
in
inc
in
push
xor
and
xlat
and
adc
test
fcmovnb
bound
xchg
loope
cltd
jbe
adc
pop
pop
popa
jo
shrb
mov
xorb
fs
xor
outsl
jnp
movsb
cmp
sbb
sub
ds
rorb
push
mov
fldl
rolb
ret
stos
jne
dec
inc
stos
int
mov
aad
test
xchg
rcll
ljmp
aaa
xchg
mov
sarl
jge
call
or
shlb
in
pop
and
and
imul
inc
pop
stos
push
stc
ss
jmp
ss
test
lahf
pop
call
lahf
inc
sub
and
sub
xor
mov
push
cmp
pop
adc
push
sub
cwtl
cmp
out
cld
mov
mov
out
outsb
loope
mov
jae
push
inc
xchg
push
int3
jg
push
jo
mov
mov
lods
nop
icebp
cmpsl
push
ss
mov
loopne
xchg
sub
test
add
hlt
mov
push
jne
fstl
cs
test
out
movsl
add
xchg
cs
add
cltd
ror
xor
push
movups
jns
xor
rcrb
inc
cwtl
and
or
pop
aas
sbb
dec
shll
rcrl
insl
lods
jmp
fists
cmc
out
in
add
test
fcomps
jp
push
stc
lcall
outsl
push
popa
lea
test
mov
test
cwtl
aas
jl
adc
xchg
and
repz
std
leave
loopne
fisttps
add
int
test
fs
or
cld
push
scas
loope
das
and
adc
pop
sti
xchg
fildl
add
cmp
adc
pop
jno
push
and
adc
clc
cmp
dec
jbe
inc
add
dec
add
fnstcw
add
mov
lock
lcall
cmp
xor
xlat
cmpsl
push
jecxz
push
loopne
std
cmc
inc
sub
in
pusha
std
rcll
adc
sub
xchg
mov
inc
mov
fwait
lretw
push
mov
jp
dec
or
mov
dec
arpl
push
mov
cs
int
sub
pop
pop
ret
aad
xchg
pop
push
and
xor
cmpsl
out
pop
std
cld
xchg
dec
ret
xchg
out
js
cmpsb
imul
or
sbb
pop
adc
xchg
xchg
in
and
aas
scas
imul
push
subb
dec
fistps
repnz
pop
test
fdivrl
testl
mov
xchg
out
pusha
xor
out
fsubs
jl
mov
data16
aam
cltd
xchg
nop
and
in
adc
mov
mov
and
pop
push
mov
or
pop
mov
sbb
call
es
stos
fwait
push
and
popf
out
xchg
leave
jae
ret
inc
xlat
mov
repnz
fsts
jg
cli
pusha
mov
call
repnz
dec
lds
in
push
sbb
pop
shll
pop
add
aam
mov
jmp
out
outsb
jge
js
pop
xchg
testl
or
aad
xchg
push
pop
jns
dec
mov
into
cmp
jge
aas
roll
loopne
adc
lock
push
cmp
pop
fnstcw
mov
leave
nop
in
sub
mov
or
repz
adc
fcomip
pop
or
mov
addr16
sbbl
mov
sub
pop
inc
aam
icebp
jl
add
add
das
test
rcrb
aas
mov
cli
lret
lret
aaa
mov
gs
jns
in
rclb
repnz
js
gs
xor
shlb
gs
push
jmp
outsl
and
shr
test
call
mov
ret
sti
pusha
lret
cmp
fstps
xor
jle
xor
or
lahf
movsb
dec
shlb
fidivs
push
mov
out
xchg
xor
cmp
out
cmp
call
xor
ficoml
lods
inc
mov
pop
fidivrl
out
inc
sub
shrb
lahf
xchg
cmpsb
aas
push
movsb
hlt
cltd
mov
fidivrs
xchg
dec
les
sub
jg
mov
xchg
or
lds
inc
test
cmp
mulb
cmp
fnstenv
inc
fisubrs
inc
ljmp
mov
int
loopne
xchg
mov
xchg
pushf
cli
push
rol
int
outsb
fdivrs
add
mov
mov
lods
out
mov
xor
out
ret
sbb
inc
ss
push
mov
sub
xchg
lods
fmuls
jo
popf
enter
lea
lret
inc
xchg
daa
mov
addr16
inc
leave
jbe
push
xor
cwtl
push
push
inc
xchg
ja
mov
push
or
popf
inc
or
stc
mov
pop
sbb
fcmovb
push
mov
notl
rcrl
sbb
pop
mov
jle
out
into
push
jo
insl
daa
add
dec
mov
shlb
fisubrl
cld
mov
outsl
pop
inc
add
loope
cmp
in
jg
aaa
subb
aad
cltd
cld
jl
inc
adc
in
jp
fstl
arpl
adc
pop
push
xor
and
adc
xor
ljmp
shlb
inc
fmull
es
push
in
enter
sbb
fldt
icebp
mov
outsb
mov
sbb
mov
mov
std
popa
lret
jge,pn
sub
sbb
jecxz
lock
call
or
pushf
pop
dec
rcl
pop
xlat
lods
and
sahf
push
cmp
fldt
mov
addr16
and
ret
mov
jne
xchg
cltd
and
stos
sub
fdivl
mov
mov
stos
mov
int
fnsave
inc
dec
jmp
push
pop
and
out
dec
sbb
sub
pusha
pop
xchg
xchg
out
cmp
jle
mov
cmp
int
push
enter
pusha
ret
jmp
scas
outsb
addl
jecxz
cs
xor
imul
pop
inc
jns
sbb
cmp
sub
adc
pusha
test
popl
insb
in
mov
adc
dec
bound
mov
movsl
jge
imul
sub
cmp
stos
cmpsl
shrl
jne
cmp
inc
xchg
call
push
arpl
xchg
pop
fmull
cltd
jne
in
stos
push
or
mov
loope
or
gs
push
add
fstpt
inc
ret
xchg
cwtl
mov
mov
rcrl
or
add
adc
jp
adc
mov
and
cltd
push
outsb
stc
xchg
push
jb
sbb
xchg
ds
aas
fwait
test
jo
mov
int
test
xchg
dec
mov
or
lea
push
fsubl
addb
bound
iret
inc
jmp
in
adc
divb
pop
adc
inc
shrb
and
lret
xor
out
gs
pop
xor
sbbb
popl
test
xlat
adc
inc
sub
xchg
lahf
leave
inc
push
pop
cmp
into
loopne
or
xchg
xchg
int3
es
nop
daa
dec
pop
icebp
mov
into
icebp
inc
ljmp
pop
xor
rcl
sahf
xor
and
xchg
push
inc
call
mov
fistps
jle
mov
cs
cwtl
pop
mov
out
jb
pop
outsb
add
pop
mov
hlt
out
inc
cs
cld
xor
push
pop
and
mov
cmp
cs
loop
enter
xor
std
mov
mov
cmpsb
pop
xor
and
pop
mov
loop
and
push
xlat
push
cmp
inc
test
fucomp
mov
mov
jae
sti
inc
lds
push
inc
mov
jae
xchg
dec
dec
inc
mov
jne
scas
mov
fstpt
stc
mov
push
or
loop
jae
sbb
stos
lods
mov
fimuls
xchg
sbb
mov
xchg
scas
jmp
dec
pop
movsb
mov
adc
test
mov
inc
iret
mov
push
lret
iret
jno
mov
shlb
lea
pushf
and
xor
jbe
les
aas
push
jo
jge
jne
sub
lods
rcrl
cmp
cmpsl
pop
insl
cltd
pushl
dec
pop
push
int3
cmpb
fldt
push
fisubl
mov
inc
pushf
adc
popa
sbb
adc
adc
mov
fisubs
shrb
xchg
pushf
nop
stos
js
rolb
cwtl
repnz
lahf
mov
shr
mov
std
cmpsl
sbb
mov
ret
xor
mov
outsl
mov
xchg
lret
das
xor
push
out
fs
dec
data16
aas
arpl
push
cmp
dec
dec
and
jno
mov
shr
jmp
cmp
das
pusha
mull
stc
orl
jb
movsb
pop
cltd
add
or
push
pop
mov
insb
xor
cmpsl
in
popf
enter
pushf
es
ss
push
int3
sub
in
sbb
cmp
test
shll
shll
adc
std
imul
cmp
push
test
and
adc
xor
mov
jge
push
inc
outsb
lock
lcall
push
jb
stos
test
repz
xor
data16
fidivl
stos
iret
bound
rcrl
or
testl
pop
enter
adc
xchg
pop
and
xchg
xchg
mov
push
push
fmuls
cli
and
push
sbb
into
fwait
inc
movsl
mov
xchg
mov
sub
shl
insb
movlhps
push
and
pushf
push
in
lret
add
out
addl
cli
lret
sbb
fldcw
pop
jo
insl
cmp
sbb
and
and
std
cli
lret
mov
pop
mov
fisubrs
inc
pop
and
lds
subl
pop
jb
cmpsl
js
pushf
mov
iret
aaa
xchg
jno
shlb
xchg
push
hlt
divps
imul
pop
mov
pushf
xor
xlat
ljmp
push
fnstcw
or
mov
mov
xor
outsl
cmpsl
dec
insl
scas
mov
push
push
sub
mov
jl
in
dec
ret
sti
push
call
jp
ficompl
dec
mov
pop
in
cmp
lret
jne
xor
mov
push
sub
je
shll
add
insl
push
lods
cmp
push
jne
cmp
andl
mov
dec
fildll
outsb
insl
mov
js
test
pop
cmp
mov
dec
daa
inc
mov
fimuls
push
test
sti
lahf
inc
pop
ret
cmpb
pop
mov
mov
pushf
fsubs
cmp
pop
push
push
adc
xor
in
mov
movsb
gs
or
xchg
test
mov
push
sahf
mov
ss
and
sti
and
jmp
or
sahf
loop
xor
mov
push
call
lret
ret
pop
and
mov
jge
dec
mov
push
cli
push
xchg
push
sbb
add
adc
push
outsb
adc
inc
sbb
mov
bound
jmp
dec
fwait
mov
push
mov
and
insl
mov
or
fwait
jl
mov
jle
cltd
das
xchg
pusha
fistpl
ss
add
push
test
icebp
data16
ror
xchg
or
shlb
adc
jb
out
xchg
mov
jae
iret
mov
leave
jbe
negl
pop
xor
or
lcall
push
stc
push
pop
fadds
gs
out
addr16
sbb
mov
sar
mov
adc
in
decb
int3
xchg
dec
shlb
orl
pop
push
jbe
mov
in
int3
arpl
mov
negl
popf
xchg
sub
inc
outsb
ljmp
jb
add
out
es
jae
dec
xor
fs
xor
jne
mov
insb
push
pusha
xor
xor
or
jle
lods
inc
sub
cwtl
imul
movsl
stos
jle
sbb
lods
or
test
mov
sub
mov
sbb
mov
and
inc
jge
out
add
lcall
rol
rcl
mov
out
mov
ss
aad
leave
shlb
jb
fs
lcall
xor
fdivp
push
pop
out
cltd
mov
cwtl
das
cmp
xor
cmp
aad
adc
lock
sub
adc
mov
jb
mov
mov
and
addl
cmpsl
leave
int
add
cltd
enter
xor
movsb
cmp
adc
ret
pop
inc
cli
je
mov
test
jbe
das
int3
sti
nop
daa
imul
mov
xchg
mov
inc
inc
and
mov
dec
push
insl
in
mov
lret
pmovmskb
nop
xchg
adc
inc
fildl
cmp
mov
sbb
jge
in
adc
pop
movsl
mov
mov
pop
lods
sbbl
lods
inc
hlt
dec
cltd
sbb
mov
xor
outsl
dec
adc
add
mov
cmpsl
ds
mov
jnp
mov
lcall
ret
mov
pusha
in
adc
mov
push
or
ret
scas
push
mov
fstl
movsb
mov
mov
scas
nop
xchg
call
xor
dec
jmp
fistl
cmp
jb
jecxz
xor
idivl
xchg
mov
mov
add
sbb
push
imul
movsl
movsl
add
xchg
xchg
sbb
inc
or
mov
jmp
imul
mov
adc
or
scas
scas
les
jmp
add
loop
inc
lock
mov
mov
shr
adc
shrl
not
sbb
int
shll
jge
subl
daa
testl
out
cmc
push
inc
add
sti
fwait
mov
out
cltd
jmp
and
mov
imul
mov
sub
add
inc
aam
xchg
pop
xor
repnz
or
int
xor
imul
ss
repz
sbb
adc
cmc
sub
pop
jecxz
ss
ret
xchg
pusha
hlt
jne
out
mov
divb
jecxz
mov
andb
jle
js
or
in
loop
mov
inc
adc
arpl
ljmp
aas
adcl
lcall
movsl
ljmp
pushf
mov
adc
ja
ret
fwait
movsl
out
push
testb
or
and
jp
mov
cld
inc
sbb
inc
fildl
adc
aad
cmc
push
les
mov
ljmp
dec
loopne
stc
or
adc
shr
cld
pop
or
and
lcall
mov
pop
cmp
xchg
mov
pop
mov
pusha
rcrl
add
inc
jecxz
jne
mov
mov
mov
jl
les
mov
mov
dec
int3
adc
shlb
jg
cmp
stc
xchg
mov
fisubs
fwait
loop
addr16
mov
scas
test
add
sub
subl
into
cs
or
mov
push
insb
jl
cwtl
push
test
std
push
sbb
sub
mov
jg
inc
call
adc
xchg
ds
push
pop
fdivrl
lods
orb
pop
mov
push
mov
cmp
test
inc
cmc
sbb
sbb
in
leave
lods
enter
fwait
movsl
lret
lret
aad
int
aas
out
test
adc
xor
inc
push
adc
int3
cmpsl
cltd
das
roll
mov
mov
xchg
sub
fwait
cld
inc
cli
pop
cmp
inc
cli
inc
loope
clflush
push
fistl
cwtl
scas
and
jge
mov
cmp
mov
shl
imul
in
bound
sub
and
lea
mov
inc
aad
mov
push
inc
dec
lea
nop
jmp
hlt
in
pop
call
les
sbb
int3
lret
lret
jp
pop
lods
dec
pop
dec
xlat
out
jo
and
std
ret
xchg
adc
hlt
mov
fstpt
pop
push
mov
das
inc
xor
push
mov
push
int
dec
dec
or
sub
sub
mov
inc
push
mov
popa
std
je
push
cmpsl
movsl
pmaxub
dec
fdivr
jle
push
jmp
and
fwait
mov
mov
jo
pushf
or
mov
cmp
ret
lcall
nop
mov
xor
pop
or
cmp
xlat
outsb
bswap
insl
incb
movsl
lret
gs
mov
inc
int
iret
loope
in
scas
mov
test
pusha
cli
push
mov
int3
sbbl
cwtl
incb
push
cmpsb
or
stc
xor
notb
rclb
fs
mov
pop
sub
inc
fld1
daa
mov
mov
push
ljmp
cmp
sub
in
sbb
aad
scas
xchg
add
popf
rcrb
and
in
aad
test
mov
out
stos
inc
and
pop
aam
xchg
pop
sahf
movsb
cmp
xor
or
lds
mov
pushf
dec
les
mov
test
mov
mov
rclb
imul
stos
sub
add
push
inc
sub
inc
sahf
mov
add
pop
and
sbb
lods
mov
xchg
les
lcall
push
in
in
and
movsb
inc
cltd
cld
out
popa
push
cmp
negl
jecxz
mov
filds
lea
mov
out
pop
inc
insb
inc
pop
push
daa
shlb
cli
repz
test
inc
sbb
sub
pop
cmpsl
out
sarb
repz
sub
adc
jb
movsb
aaa
mov
mov
ret
and
test
or
dec
loop
adcl
ljmp
mov
mov
test
adc
lods
loopne
fnsave
add
or
cmp
xor
add
and
fcomip
pop
mov
repnz
inc
mov
sbb
push
dec
gs
ds
cs
add
push
js
and
popa
inc
jg
sbb
mov
xor
rorb
sub
add
mov
jo
iret
mov
popa
and
inc
cmp
mov
push
aas
jb
pop
out
scas
xchg
mov
mov
in
mov
inc
bound
stos
and
cmc
int3
dec
scas
adc
imul
adc
jbe
push
inc
jg
icebp
rclb
push
pop
xchg
add
xchg
mov
mov
ds
dec
gs
cmpb
in
lret
cmp
sub
stos
test
mov
imul
popf
fs
jne
xchg
dec
es
and
mov
nop
fnstenv
out
fmuls
jnp
adc
and
adcb
rclb
gs
cmpsl
and
aad
cmp
sbb
out
das
pop
jecxz
sbb
adc
mov
int
sbb
mov
or
push
outsl
stc
or
call
cld
xor
shlb
inc
outsb
and
outsb
push
cmpsb
or
xchg
mov
loopne
mov
int3
mov
fdivs
cmp
mov
jbe
jl
arpl
xchg
push
add
sub
test
cmc
pop
jl
xchg
movsl
rclb
mov
fisttpl
lcall
cmp
es
xchg
dec
inc
dec
xorl
int3
aam
sbb
fidivs
test
lret
mov
out
push
and
cmp
mov
fwait
insl
clc
lock
fidivrs
sbb
outsb
sbb
int3
ficompl
fldt
pusha
and
pop
lret
lods
daa
daa
lock
je
clc
daa
add
lock
jae
dec
sub
int3
mov
lods
pushf
pop
addr16
adc
mov
sbb
pop
and
and
sbbl
outsl
js
sbb
test
movsb
rolb
fmul
or
push
and
and
nop
xrelease
and
and
cld
xchg
mov
or
xchg
inc
mov
push
dec
test
pop
movsl
icebp
jbe
or
stos
jae
movsbl
sub
xlat
mov
or
scas
popf
xchg
roll
test
ret
or
sti
push
xor
pop
mov
and
rcl
pop
add
arpl
mov
outsb
push
jmp
fdivr
out
cmpsb
out
fadds
dec
aaa
pop
dec
xchg
lods
out
cmp
mov
fiaddl
adc
nop
mov
and
cmp
inc
loop
negb
push
or
xchg
mov
pop
addr16
movsb
lahf
arpl
roll
mov
push
push
sub
loop
cmpsl
imul
xchg
or
or
daa
imul
outsb
jmp
hlt
mov
int3
pop
in
test
adc
repz
insl
repz
and
cmp
push
lds
loopne
outsl
mov
xchg
adcl
lahf
mov
fldenv
cmp
movsb
dec
cltd
loop
jecxz
es
cmp
imul
cmc
mov
xor
mov
fldl
cmc
stc
mov
int3
sbb
enter
call
pop
insl
insb
xor
push
imul
dec
bnd
fsubl
outsb
fidivs
imul
das
scas
pop
scas
mov
inc
sbb
ret
movsb
js
sub
push
test
pop
jne
jle
aad
and
and
in
xlat
insl
leave
push
ret
insl
addr16
js
mov
mov
call
mov
int
sub
loope
stc
cmp
sbbb
adc
repz
sbb
xchg
or
fsubr
cwtl
insb
fnsave
mov
scas
es
cli
mov
inc
add
xor
xchg
std
inc
mov
jg
cmp
or
out
jne
xor
dec
hlt
push
dec
pushf
repz
cmp
scas
ficoms
lcall
cmc
and
in
push
adc
sub
daa
cmp
jge
push
jnp
adc
xchg
mov
sub
sub
or
pop
addr16
in
cs
pop
mov
mov
sub
movsl
cmp
xchg
push
dec
mov
subb
push
out
rolb
ret
outsb
mov
sub
sbb
outsl
arpl
mov
mov
std
scas
push
out
iret
js
or
cs
jns
push
fmul
into
or
popf
cmp
adc
push
sahf
lods
jns
ljmp
add
mov
rcr
push
fdivp
jb
sub
mov
jge
mov
sbb
sbb
icebp
ds
or
cmp
cmpsl
imul
xchg
jle
jecxz
in
sub
jae
push
in
repz
adc
xor
or
fstps
rorb
inc
pop
xchg
add
sbbb
out
cld
and
test
lods
aam
test
jp
adc
popa
subl
pop
imul
mov
dec
pop
jge
and
dec
fsubl
jne
sbb
sub
out
loopne
mov
test
and
lret
jle
jge
cmp
or
pop
add
adc
pop
out
int
and
test
mov
ret
cmp
cmc
inc
pop
sub
xor
mov
sub
imul
push
mov
sub
pop
mov
sbb
shll
xorb
fsubl
cmp
repnz
lea
and
mov
mov
popa
cld
daa
dec
adc
loope
push
jbe
inc
jnp
mov
rcll
mov
add
dec
pop
call
shl
mov
lods
mov
mov
push
sub
fildll
cmc
push
fsubl
ret
cld
sbbl
pop
fs
lret
mov
push
xchg
push
sbb
xor
push
test
lcall
jecxz
mov
adc
jbe
aaa
outsl
sub
scas
lock
jmp
xchg
mov
xor
mov
adc
movsl
test
jnp
sbb
fwait
int
pop
ss
push
jmp
aas
pop
out
sti
ds
push
jae
mov
lret
aad
clc
and
dec
mov
pop
mov
jg
ret
and
and
pop
xchg
inc
sub
jle
inc
mov
lock
cmpsl
clc
jecxz
or
fisubrl
mov
push
scas
mov
adc
nop
inc
pop
xchg
pop
insl
sbb
out
xor
fs
push
jbe
inc
pushf
xchg
sbb
pop
sahf
mov
fsubl
stos
pop
cli
or
int3
sub
push
clc
js
scas
aaa
gs
mov
xchg
bound
loope
inc
mov
punpckhdq
negb
add
sahf
push
jge
mov
pushf
pop
push
push
jae
dec
subb
cmp
dec
push
mov
insb
pop
ss
cmpsb
xchg
fisttpll
sbb
jne
cmp
ret
mov
fimuls
leave
and
arpl
cmp
xlat
xchg
subl
and
mov
out
adc
mov
or
jg
aas
stc
mov
movsb
imul
pop
pop
fisubrl
sbb
scas
cmp
sub
inc
lods
jecxz
imul
jne
xchg
dec
out
and
rep
lahf
rcr
imul
repnz
out
iret
int3
cltd
into
cli
xchg
mov
movsb
testl
xorb
dec
or
mov
xor
xchg
pop
call
cmp
inc
in
mov
arpl
sub
jp
popf
xor
jb
repz
mov
addr16
out
in
mov
ficoms
cmp
mov
push
in
push
dec
push
xor
cmpsl
push
mov
in
stos
pop
mov
lret
push
mov
jge
sbb
mov
xchg
fmul
mov
mov
bound
dec
shl
jmp
mov
xchg
int
das
js
pop
divb
fimuls
mov
and
sahf
roll
jl
clc
jno
adc
scas
daa
sub
mov
scas
ret
jge
or
iret
add
movsb
inc
mov
or
cmp
sub
sub
adc
test
or
sti
mov
push
orl
jno
int3
push
sarb
divl
pusha
subb
pop
inc
test
dec
pop
jp
fldenv
shlb
mov
enter
scas
jmp
shl
iret
call
dec
and
rorb
push
fcompl
jge
xlat
mov
daa
push
dec
xchg
xor
pushf
lcall
scas
loop
jno
mov
jmp
xchg
push
mov
out
shll
pop
xor
pop
push
fwait
aas
and
ret
push
fcomp
mov
push
pop
push
test
sbb
ficomps
or
stos
shrb
sbb
das
addr16
lcall
dec
cwtl
bound
dec
mov
aam
test
ret
bnd
inc
pop
mulb
gs
rolb
add
arpl
dec
scas
pushf
adc
arpl
inc
bound
imul
adc
stc
cs
int
push
scas
clc
lcall
pop
add
imul
jl
sbb
test
out
stos
lret
js
shll
mov
and
ret
add
cmp
fistpll
mov
rolb
push
adc
scas
aam
mov
iret
mov
dec
mov
in
and
testl
fdivr
mov
dec
push
in
lods
ret
jecxz
cmp
sub
imul
test
imul
cmp
in
js
lcall
sub
jnp
xchg
fistpll
shll
jg
sbb
ss
sarb
dec
pop
adc
nop
and
mov
push
out
push
cmp
sahf
leave
mov
rcrl
icebp
adc
mov
bnd
sub
and
mov
stos
fsubrp
gs
js
daa
mov
hlt
mov
adc
les
ffreep
in
and
shrb
sbb
dec
jle
cmp
int
lahf
in
adc
pop
fnstcw
xchg
pop
push
in
xchg
mov
mov
sub
sahf
sbbb
inc
jno
ja
nop
mov
test
sbbl
dec
add
pop
push
stos
add
test
add
adc
push
xchg
outsb
sub
repnz
adc
aaa
dec
lcall
inc
jo
cli
xchg
xor
mov
cld
pusha
enter
or
loop
clc
sahf
or
insl
les
adc
loop
dec
test
adc
aas
popf
lret
movsb
ss
adc
ss
sub
filds
and
jmp
mov
jmp
scas
cli
arpl
daa
or
add
negl
ret
in
adc
insl
inc
lcall
jno
jecxz
das
xchg
push
sbb
mov
cmp
popf
in
out
push
jmp
aam
mov
add
ret
sub
sub
ss
sub
cmpsl
pop
lock
lret
cwtl
lods
lret
mov
data16
push
xchg
xchg
pop
stos
loope
gs
sub
cmpb
sub
jle
rol
mov
xor
sub
mov
push
test
ljmp
jmp
push
fstpt
jne
movsl
cmp
ss
push
les
scas
add
mov
in
ss
push
inc
aaa
xor
xchg
lods
inc
mov
int3
pop
xor
mov
push
subb
xchg
sbb
pop
mov
push
sbb
das
and
or
sub
push
push
xchg
data16
or
push
sbb
test
hlt
xor
or
stos
inc
mov
popf
dec
lock
xchg
mov
dec
aaa
push
out
pop
add
movsl
inc
dec
fidivrl
test
out
dec
jo
mov
cmp
cmc
and
mov
xor
fists
jg
mov
add
xor
daa
adc
hlt
mov
adc
cs
gs
sbb
xor
sub
or
pop
dec
lcall
fs
cmp
ss
daa
push
jne
movsl
inc
push
inc
adcb
or
mov
sub
fucom
rorb
pop
shll
repz
add
test
xchg
pop
jo
xor
ror
fs
dec
loope
js
jae
pop
insb
sub
loope
es
loop
jne
mov
xor
push
push
mov
sbb
and
jge
popa
clc
mov
adc
mov
movsl
or
stos
dec
ja
scas
lds
and
pop
aas
cld
jo
dec
das
loopne
cmp
cli
outsb
mov
in
clc
dec
incb
sub
add
mov
mov
data16
cmp
sti
pop
xchg
dec
ja
xchg
aam
mov
daa
ljmp
inc
std
sbb
ds
mov
rcll
mov
pop
scas
push
and
sub
inc
das
pop
test
loop
mov
imul
jge
inc
in
sahf
icebp
movsl
mov
int3
pop
in
cmp
in
dec
pop
mov
aam
repnz
xchg
repz
mov
jecxz
jecxz
inc
arpl
les
jecxz
lods
jmp
pop
arpl
rcr
xchg
push
filds
adc
rcl
ljmp
jmp
repnz
test
popf
mov
add
test
jge
test
adc
insl
mov
popf
jo
sbb
and
fstpt
lock
aaa
fstp
sahf
mov
and
sar
xchg
sbb
sub
push
xchg
adc
mov
adc
dec
push
xchg
fs
push
ja
jl
das
xor
adc
cmp
je
js
sub
pop
int3
push
dec
sub
lcall
rcll
rcrb
jo
jecxz
and
popf
mov
sti
jge
lret
sahf
andb
out
shlb
fwait
mov
cmp
inc
repnz
xchg
xor
loopne
stos
pushf
xor
fimuls
int3
jno
xor
pop
div
imul
sbb
clc
xor
lock
lret
inc
sbb
inc
dec
cmp
nop
je
rcrl
imul
repnz
mov
or
push
jmp
mov
clc
movsb
pop
jl
sbb
je
lcall
lcall
fwait
popf
inc
and
xchg
mov
loopne
jae
sbb
xchg
xor
hlt
inc
in
mov
ds
and
out
or
int3
aad
loop
or
push
loop
mov
rcrl
mov
sbb
mov
mul
fdivp
aam
adc
push
aad
repz
dec
out
mov
popf
ljmp
lock
call
int
jo
rorl
dec
mov
cli
lock
or
lahf
hlt
push
cwtl
cmp
int
stc
sahf
sahf
mov
ret
inc
jnp
xor
mov
outsl
mov
ljmp
mov
jmp
and
adc
cmp
xchg
inc
cmpsb
pop
cmp
lods
mov
fwait
xor
aam
add
popf
mov
pop
repnz
dec
pop
sbb
outsb
out
pushl
cmpsb
test
and
arpl
imul
out
fbstp
mov
add
xor
lods
xchg
xchg
pushf
push
xor
sub
mov
subb
roll
into
pop
icebp
dec
in
shrl
push
jp
jno
sub
dec
inc
xor
xlat
sahf
and
iret
mul
ds
in
je
mov
add
daa
popf
mov
dec
dec
pop
imul
mov
xchg
dec
cltd
adc
lcall
cwtl
cs
shrb
lods
and
jb
xchg
xor
push
stc
sbb
fistl
mov
dec
test
mov
add
jae
nop
daa
pop
xchg
cltd
jne
stos
xor
iret
in
js
movsb
mov
xor
inc
xchg
es
cld
imul
jne
and
mov
push
cmpsb
pop
sub
ror
push
jge
jl
aaa
mov
pushl
mov
and
push
xor
or
xchg
dec
inc
popa
xchg
push
ja
dec
add
mov
in
out
pop
lret
xchg
int
repnz
xor
pop
fstpt
outsb
dec
popa
mov
push
sbb
mov
imul
mov
push
stos
bswap
xchg
add
fnstsw
into
pop
ficomps
pop
imul
inc
ficomps
cli
fmull
jmp
es
pop
icebp
or
mov
sub
movsl
mov
pop
imulb
jno
rcll
into
pop
xor
into
loope
inc
mov
das
jb
and
data16
pop
add
pusha
mov
dec
outsb
add
movsl
cmp
lock
js
in
rclb
mov
add
or
gs
or
sti
inc
stos
cli
jmp
outsb
xchg
notl
sarb
fnsave
fwait
insl
mov
jae
or
fstpl
cmp
fs
xor
sub
imul
pop
pop
mov
mov
dec
xor
dec
jne
push
imul
mov
sub
or
arpl
xor
pop
mov
adcb
adc
out
add
lret
sbb
idivl
loopne
push
les
scas
xchg
shlb
fcomps
mov
cmpsb
mov
rorb
out
pop
movsl
xchg
jg
cmp
pop
mov
mov
add
pop
pop
mov
cmp
loopne
dec
stos
xchg
out
addr16
jne
hlt
xchg
inc
in
xchg
push
sub
xchg
clc
inc
ud0
push
sbb
push
ret
lea
jl
push
lea
test
jle
push
inc
pushl
mov
cmpsb
xchg
mov
dec
stc
addb
addr16
xchg
sbb
cmpsb
stc
je
mov
jmp
pop
pop
in
push
inc
mov
push
test
push
pop
jno
scas
mov
add
fs
aas
clc
adc
cmp
dec
mov
push
xchg
gs
mov
imul
addl
inc
sub
cmp
sub
lods
jl
xchg
sub
notl
mov
loopne
pop
mov
mov
jns
xchg
stos
mov
or
lret
cmp
push
out
pop
jmp
jo
outsb
xor
mov
test
push
lods
and
lods
jmp
and
sti
scas
mov
pop
cmpb
cltd
pop
hlt
lret
dec
cmp
sbb
jnp
sub
popf
jno
iret
dec
leave
xlat
subb
outsl
fimuls
push
xlat
mov
rcrl
or
sbb
rcr
repnz
scas
sahf
ss
inc
mov
hlt
adc
xchg
popf
jnp
iret
mov
pusha
scas
gs
jbe
pop
imul
and
shrb
adc
push
jmp
lods
push
fimull
jb
sbb
add
xchg
xchg
pop
lds
imul
mov
xor
into
fdivl
and
mov
dec
flds
mov
outsb
adcl
repz
loop
decb
dec
outsb
xchg
jo
gs
xchg
in
mov
orl
enter
xor
nop
leave
mov
pop
mov
loopne
mov
rcll
lret
push
in
push
or
jnp
jno
cmp
loop
je
cmpsb
flds
inc
dec
gs
ficomps
mov
jecxz
fsts
xor
dec
add
movsb
repnz
int3
mov
cmpb
mov
sub
sbb
jo
repz
fisttpll
push
add
push
inc
pop
movsl
fistpl
jg
and
xor
icebp
jp
dec
pop
fidivl
sub
mov
ret
pop
repnz
mov
inc
fbld
les
lret
icebp
mov
cmp
pop
push
negb
xchg
mov
dec
lahf
jp
nop
imul
inc
adc
mov
sub
sbb
fbld
pop
mov
dec
push
mov
and
aam
mov
shl
add
push
insl
leave
and
push
jle
jae
stc
inc
jno
adc
rorb
gs
jmp
in
test
popa
or
inc
test
jb
dec
leave
int
xchg
jmp
fsubrs
inc
xlat
sub
fdivl
xlat
inc
pop
in
aaa
mov
js
lea
mov
rorl
jecxz
int3
cwtl
das
ljmp
jns
mov
aas
mov
je
adcb
addr16
outsb
mov
mov
push
shl
xchg
xchg
mov
shll
ljmp
test
das
jae
or
loop
pop
addr16
mov
popf
adc
loopne
js
or
inc
stos
add
push
sub
dec
fnstcw
stos
jl
push
pop
int3
cmp
rcrl
lock
xchg
xchg
data16
ret
and
push
adc
xchg
fsubrs
js
lcall
in
jp
xchg
test
popa
push
sub
mov
lock
cmpsl
test
lret
sbb
jb
xchg
mov
mov
pop
loop
lcall
popa
hlt
stc
test
lcall
push
icebp
add
dec
fidivs
push
lock
dec
mov
dec
fs
push
rcrl
xorl
filds
xor
test
ss
cltd
dec
dec
test
xchg
cmp
gs
mov
xor
subb
je
scas
bound
mov
sbb
sbb
add
push
mov
lret
xchg
pop
push
in
insb
call
add
jo
lods
shr
and
rsqrtps
test
jo
add
mov
mov
sbb
cld
notl
mov
sub
mov
out
scas
mov
sbb
scas
stos
aaa
sbb
shlb
adc
push
xrelease
andl
shl
mov
jl
popa
mov
cltd
pop
enter
sub
mov
hlt
adc
scas
cli
xor
cmp
mov
cld
das
addr16
push
std
sub
pushf
mov
pop
dec
in
pushl
add
cmp
adc
test
fmull
lock
shll
icebp
push
mov
push
icebp
jge
cs
inc
mov
push
sbb
mov
xchg
data16
ret
pop
adc
fwait
scas
cmpl
out
ja
mov
stos
ret
int
xchg
in
jmp
or
daa
fildl
pop
jnp
jno
subl
mov
ret
hlt
aaa
pop
push
lret
ret
call
inc
add
dec
push
or
sub
movsb
push
xchg
shlb
lods
inc
and
lret
arpl
or
xchg
mov
lcall
mov
popf
adcb
sub
xchg
mov
cmp
mov
out
add
sub
ds
adc
mov
inc
jnp
cli
cmp
pushf
enter
iret
mov
cli
test
in
inc
pop
int3
das
fs
push
inc
push
push
repz
or
cs
adc
push
dec
lods
frstor
dec
jb
js
mov
lret
dec
movsb
dec
lcall
mov
adc
and
or
pusha
xlat
mov
out
stos
add
rcrb
adc
push
adc
and
jge
mov
jns
cli
pop
pop
icebp
add
sti
push
mov
pushf
enter
enter
sub
into
insb
fnsave
mov
roll
insl
adc
inc
inc
pushf
dec
xor
jno
mov
push
ja
test
outsb
loope
and
repz
daa
add
divb
cwtl
test
out
mov
mov
arpl
inc
fwait
push
or
xor
lock
cmpsb
dec
add
push
sub
mov
call
sbb
aas
dec
in
inc
stc
push
cmp
mov
dec
cli
int
sub
and
add
or
fldenv
loopne
popf
adc
add
add
and
jmp
pop
enter
inc
pop
insb
jae
popf
cmp
jne
ret
fildl
insb
xchg
in
mov
lcall
or
jecxz
insl
or
in
and
enter
jns
repz
adc
stos
or
repnz
dec
cmp
fadds
mov
out
pushf
pop
sub
xor
jge
iret
test
push
cmp
inc
hlt
test
in
pop
cmpsb
jnp
cmpsl
inc
sbbb
dec
xor
xchg
xchg
cmpsl
ds
sbb
xchg
push
xor
mov
rclb
dec
add
cmp
out
shl
mov
or
inc
add
xor
xor
push
mov
push
push
add
in
aas
pusha
dec
in
cltd
cmp
and
sub
mov
cmpsb
pop
ss
sbb
inc
cltd
jbe
andl
pop
sub
inc
and
hlt
shlb
xchg
push
enter
dec
movsb
repnz
repnz
xchg
add
add
in
add
sub
fmuls
data16
xchg
shrb
mov
out
pop
pop
pop
out
aas
mov
add
aas
push
ret
sub
or
adc
pop
sbb
or
outsl
jns
out
and
sub
jne
mov
rcr
aaa
movsb
or
jmp
inc
push
jns
mov
lret
fidivrl
jns
sub
push
fbld
push
add
imul
fnstcw
adc
arpl
scas
inc
cmp
xor
dec
cmp
inc
push
mov
dec
loope
push
add
mov
into
jecxz
push
sahf
int3
int
mov
enter
fisubrs
dec
loop
and
shrl
testb
lret
xor
mov
pop
scas
inc
jo
les
dec
fs
push
inc
insb
test
js
shl
mov
arpl
scas
clc
jmp
xor
mov
jmp
add
mov
xor
inc
sbb
jmp
lcall
mov
mov
jp
or
int
fildl
mov
dec
decb
out
push
stos
shll
xchg
jbe
adc
out
outsb
xchg
jbe
daa
stos
or
mov
dec
xor
mov
xchg
push
mov
adc
fisubs
jbe
stos
jnp
sbb
into
outsl
push
cltd
inc
iret
push
mov
lahf
dec
add
push
xchg
scas
loop
mov
cmp
fwait
icebp
adc
loop
in
shl
popa
cmp
cmp
xlat
sub
jo
pop
xchg
call
fwait
jns
adc
cmp
scas
insl
dec
fidivl
push
rcll
xlat
and
xor
mov
sahf
push
stos
inc
lret
stos
mov
inc
mov
ds
and
mov
movsb
cmp
sub
cmp
orl
rcrl
ret
clc
adc
cmp
ss
mov
aad
pop
xchg
test
cmp
xor
pushf
jae
test
pop
inc
jecxz
aad
adc
pop
aaa
clc
outsl
repnz
sbb
mov
mov
and
out
test
jecxz
sub
rcrb
test
out
or
or
stos
mov
es
cmp
pop
movl
dec
sub
xor
in
popf
lods
sahf
jae
aad
lret
jno
or
adc
jp
adc
and
loop
mov
mov
mov
lcall
cmp
jnp
jmp
inc
xor
jp
pop
jo
icebp
mov
in
xor
cmp
sbb
fwait
stc
and
add
into
jle
and
push
push
in
jl
repnz
add
xor
cmp
adc
dec
dec
movups
dec
push
dec
inc
fildl
fistpll
inc
pop
cmpb
cmc
lahf
cmp
into
fs
bound
into
test
jl
aaa
dec
mov
sarl
roll
jmp
adc
fidivl
stc
xchg
jno
movsb
cmp
nop
xor
mov
aad
ficoml
or
push
inc
jecxz
cli
xchg
arpl
stos
mov
sbb
movsb
cmp
lds
inc
in
push
insb
add
call
movsl
lahf
pop
out
xchg
mov
xchg
mov
out
push
inc
inc
adc
adc
cmp
popf
scas
adc
xlat
aad
mov
shlb
enter
lret
cmc
popa
clc
xchg
jg
mov
jg
sub
popf
mov
faddl
loop
add
xor
or
jmp
or
mov
xchg
aas
push
jno
push
mov
dec
jecxz
cmpsl
into
rcl
dec
rol
push
pop
test
xlat
xchg
insb
push
push
stc
jne
xor
int3
into
loopne
mov
repnz
ja
dec
add
orb
mov
sub
popf
pop
and
test
test
out
mov
mov
loop
aas
mov
add
sbb
sar
out
cmpsl
pop
and
popa
cmp
mov
mov
adc
inc
add
pushf
xor
sahf
cmp
in
ljmp
mov
jp
pop
out
sbb
hlt
push
arpl
sbb
icebp
ret
in
cwtl
sti
pop
repnz
dec
out
fcmovne
fdivr
leave
insl
add
push
or
adc
jns
xchg
adc
ss
insb
fildll
mov
mov
gs
mov
nop
bound
outsb
repz
cmpsl
cmpsb
lods
adc
push
test
je
inc
cmpsl
fsubs
xor
mov
fnstcw
das
in
pop
hlt
fnstcw
xchg
and
cmpl
into
jl
test
ret
mov
leave
cmp
popa
jmp
add
push
scas
add
dec
stos
movsb
pop
sti
loope
add
sbb
pop
lahf
faddl
rclb
loopne
pop
movsl
pop
mov
mov
mov
mov
sub
loope
lock
je
scas
inc
and
insb
sub
xor
loope
inc
push
jl
roll
push
sub
push
fucomp
pop
add
and
xor
mov
sbb
dec
aaa
rclb
or
add
dec
mov
lock
mov
nop
dec
aas
jg
cmp
dec
pop
dec
push
das
and
sbb
ret
xor
cmp
mov
push
call
xorl
jp
dec
lahf
js
pop
repz
pop
popf
addr16
cmpsb
or
fistl
cwtl
out
push
stc
mov
out
notb
loop,pt
sbb
and
pop
ss
sbb
fsubrp
sub
xor
pop
mov
mov
negl
xchg
aaa
stos
or
adc
jle
inc
sahf
sbbb
int
sbb
push
popa
mov
fcoml
and
lods
andl
push
arpl
shrl
jns
add
jb
add
xor
addl
adc
xchg
push
cmp
sbb
shrl
xor
jo
push
aad
push
xchg
aad
jb
add
ljmp
pop
sub
lods
cwtl
xchg
outsb
int
xchg
xor
and
cmp
mov
sbb
ds
mov
aas
pop
mov
mov
push
mov
outsl
std
mov
xor
inc
or
mov
cwtl
pop
das
sti
aas
ret
out
and
cmp
cmovnp
jnp
jl
pop
jbe
daa
popa
add
sar
enter
fistpll
pop
and
xor
pxor
push
fisubrl
pop
hlt
or
mov
in
cmp
and
push
adc
fwait
loopne
nop
push
pushl
test
sub
mov
jns
outsl
andl
int
mov
push
out
push
mov
shl
loopne
push
std
std
jg
xor
pop
jle
stos
and
test
into
out
lds
call
or
imul
and
push
or
xchg
adc
xchg
out
cld
inc
fsubr
mov
jbe
scas
jbe
xchg
dec
fstpl
je
shl
or
sub
mov
arpl
push
xor
push
insl
stc
pop
add
aas
stos
inc
dec
and
pop
arpl
in
xchg
cmpsl
lds
or
rorl
sub
jmp
into
sub
push
fsubrl
or
jmp
push
aaa
mov
in
repnz
stos
sbbb
pop
xchg
scas
lea
pop
stc
decl
stc
push
xchg
insb
cli
paddq
mov
dec
rcrl
sbb
ds
repnz
adc
xchg
or
inc
cli
jne
sub
mov
enter
enter
jb
cmc
out
sahf
enter
insl
test
ficomps
xor
int3
push
jne
iret
das
cmp
xor
or
or
fcmovu
or
cmp
enter
mov
arpl
sbb
mov
dec
jle
cmpsl
mov
sbbl
sub
test
sbb
insl
call
xchg
mov
fisubs
push
pop
ret
insl
clc
lret
loopne
sarl
add
stos
shlb
mov
xchg
daa
xchg
sbb
or
sbb
ret
push
addb
sarb
add
xchg
mov
out
pop
or
add
out
inc
ja
lahf
cmp
nop
imul
nop
mov
lcall
pcmpgtb
adc
sub
jbe
pop
jnp
xchg
mov
cmc
or
std
xchg
jb
popa
fmul
insb
pop
jns
in
lahf
adc
push
in
sub
js
arpl
int3
int
cmpps
dec
pop
loope
ficoml
jno
or
insl
dec
cmp
ja
shll
mov
add
mov
add
insb
stos
insl
fdivr
jp
je
mov
adc
mov
pop
nop
jb
inc
ja
and
fnstenv
add
scas
mov
ret
shrl
xor
pushf
lods
fisubl
cs
cltd
sahf
xor
add
mov
sar
xor
jno
and
xchg
sbb
pop
call
ret
call
cmpl
xchg
dec
loope
in
add
js
jp
pusha
and
xchg
scas
mov
pop
idivb
stos
mov
pop
dec
or
inc
mov
xlat
cmp
xlat
ljmp
test
imul
icebp
movsl
repnz
out
jo
and
and
outsb
lcall
or
hlt
cmp
dec
shll
into
sbb
sub
jmp
add
lods
leave
pop
mov
xor
and
notb
fdivrs
pop
bound
sub
aad
leave
push
test
ljmp
push
mov
dec
test
out
xchg
push
xchg
mov
scas
sahf
push
add
clc
int
pop
jmp
cmp
adc
adc
xor
in
and
gs
mov
add
lret
or
add
sbb
pushf
ret
push
adc
test
inc
sbb
and
add
adcb
xor
or
or
loop
cmp
fisubrs
push
sub
cs
pop
outsl
in
dec
and
inc
xchg
stos
mov
into
loope
popf
jne
into
push
dec
xchg
or
xchg
pop
stos
cmp
add
out
rcrl
mov
ds
jbe
cmp
cmp
icebp
inc
dec
pop
adcb
and
xchg
sbb
test
jb
movsl
xchg
out
pop
inc
adc
test
cmp
roll
pusha
push
test
push
ljmp
insb
lret
xchg
mov
cli
out
gs
fbstp
lods
int3
popf
lods
imul
aad
sbb
add
aas
cld
pop
cs
psrad
pop
sub
dec
in
or
mov
imul
test
testl
jp
xchg
jns
pop
outsl
leave
cwtl
jb
cmp
mov
loope
and
xorl
icebp
jo
jo
xchg
dec
mull
stc
call
pop
cmp
or
mov
sub
add
loope
push
push
jecxz
push
jl
scas
cwtl
das
loopne
fists
jb
push
push
sbb
mov
xchg
sub
stos
xor
movsl
or
pop
hlt
or
cld
frstor
nop
or
xchg
and
adc
lods
mov
fbstp
jmp
movsb
or
pop
xchg
push
mov
pop
mov
add
pop
xor
mov
popa
xor
push
int3
outsl
jo
dec
mov
sbb
push
add
and
cmp
jns
lods
pop
push
je
fidivl
call
test
mov
fnstsw
idivb
xchg
sbb
popf
cmpsl
jp
stos
inc
add
cwtl
mov
sbb
cmc
or
idivb
pop
lcall
imul
mov
jns
mov
stos
push
push
xchg
pop
nop
imulb
inc
scas
mov
xor
iret
ret
mov
dec
push
add
xchg
ja
mov
loopne
les
jmp
xchg
pmaddwd
scas
jno
js
add
push
pop
sub
pop
jg
jp
mov
add
or
adc
sub
xlat
aas
stc
dec
push
sub
sbb
bound
xchg
inc
sbbl
adc
daa
test
pop
xor
or
lea
aas
movsb
or
jl
mov
add
fsub
pushf
hlt
sbb
popf
pusha
ljmp
filds
aas
scas
mov
push
sub
xor
jmp
or
in
js
push
rclb
addr16
mov
lea
fisubrs
punpcklbw
inc
lods
or
daa
ss
dec
movsl
jns
test
mov
loop
pop
stos
mov
js
test
mov
sahf
outsb
cmc
adc
sub
inc
cmp
dec
add
notl
cwtl
inc
pop
adc
ficoml
mov
in
pop
test
jmp
jge
nop
push
ljmp
notb
push
xorl
daa
lds
shlb
int3
arpl
lcall
fs
std
lahf
popa
lods
ss
decb
hlt
jge
pushf
ret
push
inc
call
shll
lea
cltd
insl
or
xchg
stos
mov
lea
int
xor
or
int
call
cmpsl
ret
inc
jecxz
ljmp
push
jecxz
inc
sub
mov
mov
imul
or
test
sub
fdiv
push
mov
fsubr
push
scas
leave
and
cwtl
sub
pop
aaa
int3
fstpt
push
ljmp
in
pop
sbb
aaa
int3
sbb
jl
cmp
scas
and
mov
mov
mov
mov
mov
mov
stc
jg
sbb
mov
mov
rcrb
pop
or
mov
mov
mov
mov
add
imull
push
sub
xor
call
sub
lahf
adc
and
lds
stc
mov
xchg
sti
jb
addr16
pop
shl
add
cmpsl
cltd
mov
mov
lods
inc
push
xchg
shr
inc
xor
xlat
arpl
pop
mov
or
test
and
mov
xchg
or
repz
push
jle
imul
inc
dec
push
adc
into
mov
and
inc
adc
xor
pop
inc
cmp
xor
cwtl
jae
push
inc
gs
neg
jl
test
fdivrl
jbe
mov
mov
sub
iret
stos
mov
dec
lret
and
add
or
lods
push
push
push
xchg
xor
jecxz
mov
aaa
stos
psrlw
loop
jo
push
jge
dec
jl
shl
imul
add
push
xor
push
std
cmp
inc
cltd
loopne
pop
fsubrl
sub
xchg
shrl
pop
push
test
jb
call
or
jb
cltd
sub
pop
push
cmp
push
mov
add
movsl
cmp
jmp
mov
jge
cmp
mov
push
scas
inc
mov
call
rolb
lods
sbb
mov
push
add
fiadds
pop
and
push
pop
leave
cmp
shll
loope
xchg
and
xor
loopne
shll
and
push
push
xchg
test
mov
mov
mov
test
andb
les
shrl
pop
shrb
adc
ja
jo
cld
mov
jnp
fisttps
jno
sbb
mov
ds
xlat
cwtl
mov
jp
jmp
cs
mov
mov
mov
popl
insb
mov
mov
adc
or
seta
mov
test
pop
or
jmp
out
ficoms
mov
mov
pop
loopne
xchg
push
xor
sbb
lret
jge
mov
mov
inc
jl
imul
mov
les
xor
jecxz
push
mov
sub
jno
jnp
xchg
out
xchg
outsl
rep
lock
mov
lret
inc
add
dec
pusha
or
fwait
cmpsl
push
cwtl
shl
andl
cs
adc
rcrb
mov
jbe
add
aad
addr16
push
in
cmp
nop
pop
je
mov
push
inc
pusha
mov
mov
inc
or
std
mov
mov
lret
ja
test
repnz
dec
pop
imul
pop
xchg
pusha
rcpps
cwtl
lcall
sahf
and
jl
iret
adc
pop
xchg
jbe
mov
rorb
mov
aas
stc
mov
cmp
lcall
sbb
xor
loope
or
cmp
xchg
add
mov
and
pop
lds
push
leave
lret
lea
inc
jmp
fidivs
pusha
xor
inc
fcoms
cltd
xor
xchg
mov
rolb
add
sbb
ja
mull
jns
adc
jmp
sub
sbb
pop
sahf
mov
push
and
outsb
loope
inc
notl
lret
mov
pop
add
into
jb
pop
imul
clc
loopne
repz
daa
pop
or
lret
sbb
push
sbb
push
pop
pop
jbe
fisttps
adc
mov
cmc
js
dec
pop
push
and
lods
push
addb
adcl
adcb
addr16
adc
pusha
lods
or
dec
lcall
lret
add
and
cmp
adc
xor
push
push
inc
xchg
aam
add
popl
and
cld
add
sub
aaa
push
stos
push
nop
xchg
out
add
push
cmp
nop
popa
add
sub
lahf
sub
or
imul
mov
mov
fisubrs
mov
or
inc
lcall
mov
inc
push
xlat
cmc
pop
push
inc
in
test
xchg
in
adc
cmpl
jb
pop
cmp
add
jle
dec
or
pop
fbstp
data16
push
adc
lods
cmp
xchg
mov
inc
fucomip
pop
ja
outsl
mov
cmp
rolb
in
std
mov
fimuls
jnp
jo
mov
mov
mov
das
stc
aad
repnz
sub
and
test
lods
js
lods
movsb
jne
mov
iret
cmp
fcoml
mov
fisubrs
xchg
hlt
rcr
sub
pop
in
pop
cmp
mov
clc
mov
push
jp
xchg
mov
adc
out
ret
aas
sub
fs
mov
aam
add
sub
xor
std
repz
or
sbb
dec
mov
jge
sahf
xor
sbb
scas
sub
pusha
or
test
inc
fmul
inc
sbb
outsl
pop
mov
push
or
pop
sub
cs
movsl
inc
jl
add
mov
clc
mov
cli
adc
xchg
or
cmp
shlb
rcrl
or
pop
mov
andb
dec
xchg
sub
pop
mov
pop
sbb
mov
add
movsl
push
loopne
sub
scas
pusha
repnz
xor
out
xchg
and
mov
cmpsb
jne
mov
or
sub
jmp
or
inc
lods
lods
dec
lcall
lret
mov
mov
fisubl
inc
lcall
or
xchg
xlat
insl
or
mov
mov
jge
jl
and
mov
push
inc
xor
xor
cmc
out
inc
data16
or
test
fwait
mov
xchg
and
scas
adc
stos
inc
or
mov
push
out
loop
jmp
mov
push
fucomp
aaa
or
xchg
jo
inc
push
std
into
inc
pop
repz
pop
icebp
adc
pop
imul
and
repnz
jns
into
add
sbb
test
push
insl
loope
ret
mov
das
in
dec
sub
mov
fidivrl
mov
xor
jp
adc
addr16
push
inc
lods
in
jbe
loope
loopne
xchg
in
xor
or
sbb
pop
out
xlat
lock
mov
jae
mov
adc
push
cmp
loop
jae
xchg
hlt
test
loop
ljmp
inc
xchg
scas
and
rcrl
add
add
mov
insb
push
pop
outsl
add
leave
pop
mov
adc
and
push
or
leave
pop
adc
rclb
xchg
push
loop
enter
cmpl
in
daa
sbb
cmp
sub
sub
or
insl
add
pusha
xchg
das
lcall
fidivrs
xchg
dec
pop
dec
insb
adc
sbb
mov
cmp
insb
hlt
mov
aas
pop
dec
call
orl
jmp
or
test
cmp
inc
imulb
pop
adc
hlt
mov
push
push
jle
add
mov
outsl
mov
mov
mov
inc
and
fcoms
xor
dec
push
inc
push
xchg
int3
iret
and
inc
sbb
mov
inc
ja
mov
fwait
cmpsl
out
push
in
push
xchg
cmpsl
data16
je
push
in
adc
ja
ljmp
push
cmp
vsubss
imul
xchg
rorl
lods
dec
dec
push
cmpsl
jno
jns
jno
in
ret
arpl
mov
movntps
pop
das
negl
mov
ret
push
mov
outsl
loopne
mov
push
xor
jae
push
movsl
rclb
inc
sbb
jne
das
push
and
fstpt
push
jmp
notb
push
outsl
dec
decl
xor
das
je
movsl
mov
mov
lock
cli
push
sbbl
scas
movsl
mov
and
mov
stos
xchg
cmp
mov
dec
loop
sbb
xchg
mov
scas
call
jecxz
jecxz
jl
lea
inc
push
and
add
sub
push
jmp
out
fnstcw
icebp
loope
jae
adc
or
ficomps
lds
es
movsl
push
sbb
cmp
dec
loope
arpl
mov
sbb
faddl
sbb
lods
outsb
sub
fldt
push
cld
xor
shll
ficompl
dec
fisttps
xor
xor
push
test
rcl
dec
mov
push
mov
pop
insl
fsubrp
sahf
sub
jge
fucomi
std
int3
movl
out
cld
inc
fldt
sbb
outsl
dec
sahf
sahf
pusha
xchg
testb
es
push
enter
dec
xchg
outsb
popf
out
into
push
cmp
inc
add
mov
ficompl
pop
lock
mov
fidivs
or
pop
push
fdivrs
jb
scas
jecxz
shl
mov
push
sti
mov
lods
divl
push
leave
pusha
pop
mov
divb
out
sub
insb
ds
aaa
dec
aam
dec
and
jmp
jno
out
jnp
cld
mov
pop
and
test
fs
xor
xor
out
mov
add
xor
es
pop
lods
loope
and
xchg
cli
hlt
dec
aam
jg
fsubrs
rorb
out
and
inc
jbe
jmp
jo
and
push
mov
clc
jbe
adc
cmp
sub
ret
push
mov
stc
lock
adc
push
pop
cs
xchg
push
pop
sub
xchg
std
xor
and
stos
inc
loopne
sti
test
shrb
or
fidivs
fcmovnbe
mov
mov
adc
icebp
pop
cmp
cwtl
cmpsl
cmp
pop
lds
gs
sub
mov
in
cmpps
fwait
xor
and
push
sub
pop
jp
dec
jmp
xchg
inc
xlat
rorl
dec
ds
xchg
sub
or
cmc
xorb
push
inc
xlat
out
mov
fsub
adc
js
daa
outsl
test
inc
pop
scas
je
mov
pop
shlb
sahf
or
mov
pop
sahf
mov
bound
push
xlat
or
pcmpeqd
rorl
push
inc
xor
pop
pop
ja
push
xchg
fs
push
int
lods
inc
adc
mov
fsubrs
mov
test
ret
mov
sub
inc
add
sub
vcvtsi2ssl
rolb
push
es
sub
inc
popf
push
sti
push
push
sbb
mov
ror
add
xchg
jbe
sub
sbb
inc
popa
push
pop
mov
inc
cwtl
mov
cwtl
cmp
push
cmp
adcl
push
mov
push
cmp
hlt
mov
xchg
pop
mov
sti
fwait
rcl
in
mov
loope
push
push
lock
out
inc
gs
mov
cmp
mov
mov
movsb
cli
inc
rcl
xchg
mov
jmp
jg
xor
lret
iret
xor
lret
mov
and
pusha
push
pop
mov
jg
cmp
mov
incb
mov
or
pop
in
pusha
in
out
das
push
les
sub
adc
test
pushf
push
repz
repnz
adcl
jp
xchg
mov
int3
push
and
jb
nop
std
jg
xchg
mov
pop
jl
mov
sub
and
cmp
inc
pop
jle
in
test
fsubrs
movsb
jnp
push
jmp
xor
or
and
mov
test
push
adc
inc
sub
cmc
mov
orb
jl
adc
fsubr
xchg
add
cli
outsb
push
fsubs
and
stc
lea
scas
mov
imul
xchg
lret
and
cs
add
lods
inc
pop
mov
lret
xlat
test
scas
or
inc
cwtl
mov
add
daa
dec
mov
xlat
fcompl
push
adc
push
lret
sub
add
out
dec
gs
ficomps
mov
movsl
icebp
test
inc
cwtl
or
cltd
cmp
rcl
iret
sbb
movsl
movsl
jns
dec
ja
cld
xor
bound
xor
cmp
int
add
or
and
xchg
cltd
fildl
movsb
shll
xchg
cmc
test
adc
push
shl
jnp
movsb
cmp
pop
cmpsb
lock
pop
ret
xchg
cmp
jnp
adc
xor
andl
lahf
pop
xor
mov
jl
push
sub
movsl
cmp
notl
add
and
and
mov
ljmp
sub
popf
mov
jecxz
mov
adc
std
test
xor
fsubrs
pop
cs
xchg
dec
arpl
jnp
inc
pop
cwtl
mov
lcall
pushf
xorl
rcll
add
scas
pop
neg
stos
mov
sub
xlat
mov
dec
out
pushf
adc
inc
testb
and
jnp
imul
pop
mov
jecxz
lahf
cmp
dec
shl
out
inc
add
add
jne
cltd
jb
xchg
or
adcb
aam
mov
fdiv
inc
sub
decb
dec
into
adc
aas
dec
in
fstpt
jecxz
cli
cmp
stos
cmp
sar
mov
fnstsw
jmp
xorl
mov
inc
data16
insl
jge
and
sbb
cltd
es
inc
out
sub
orl
mov
push
and
imul
mov
pop
and
push
cwtl
andb
jecxz
pushf
mov
xor
sub
lea
lock
pop
cmp
ss
mov
fcoml
ljmp
lret
loope
or
mov
cmc
mov
lods
fistl
push
push
inc
cmp
cmp
and
lods
js
cmp
cmp
pop
ljmp
test
mov
scas
jmp
inc
sbb
sarb
leave
rol
into
arpl
mov
sbb
in
loopne
es
or
jle
mov
mov
int3
imul
or
push
sbb
jl
cmp
fcomps
mov
shlb
sub
out
sub
call
add
jecxz
lahf
adc
idiv
mov
call
leave
popa
insl
push
xor
pop
cmp
mov
popa
in
es
pushf
xor
lods
push
and
frstor
jle
repz
add
neg
jmp
jo
hlt
cmp
and
in
cmp
mov
mov
fcoms
inc
sbb
xchg
dec
aaa
or
inc
sbb
adc
jbe
jp
lret
popa
adc
cmp
lock
cwtl
outsb
pushf
cmpsb
lock
fimuls
mov
sbb
into
outsl
nop
rcl
xchg
jp
in
mov
lea
js
int
shl
rcr
fistpl
ret
ss
lea
insl
movsb
mov
outsb
add
mov
outsl
xchg
sub
inc
mov
jmp
out
fsubl
loopne
sbb
or
add
push
cmp
push
enter
repnz
xlat
cs
pop
mul
mov
stos
push
jmp
sbb
pop
jge
js
pop
dec
mov
into
mov
mov
int3
pop
mov
pop
lods
scas
lods
mov
ret
sbb
sub
pop
pop
jmp
inc
ljmp
mov
test
mov
mov
insb
sub
adc
xor
push
jne
sbb
push
stos
in
shll
mov
sub
loopne
sbb
xor
inc
scas
fst
and
cmp
cmpsl
out
jge
xlat
insl
inc
jp
jmp
arpl
dec
cmp
shrb
pop
mov
mov
scas
adc
mov
fisubrs
or
sub
push
mov
sub
lods
in
dec
mov
mov
mov
inc
scas
out
xchg
xor
jo
or
xchg
xor
rcll
repz
stos
clc
push
xor
jbe
push
sbb
dec
cmp
cmpsb
pushf
pop
out
inc
jp
aas
cwtl
sbb
pop
and
cmpsb
ds
shrb
jae
sub
and
xor
repnz
in
and
fimull
shl
ficoml
das
push
jl
loope
das
movsl
fdivl
dec
xchg
dec
xor
lea
ret
pop
sub
mov
add
ret
sbb
cwtl
mov
mov
inc
or
push
outsl
in
xchg
push
loop
mov
dec
mov
pop
mov
and
scas
movsl
push
jle
iret
xchg
imul
jbe
loop
repnz
cmp
cmpsl
leave
ret
outsl
ljmp
movq
hlt
cmpsl
aas
xchg
cmp
xchg
mov
sub
divl
xor
fs
aad
push
push
jno
movsl
pop
aas
popf
lret
jae
inc
fidivs
fisubs
sarb
push
add
out
mov
add
mov
pop
mov
fstps
and
sub
sub
sbb
inc
jb
es
lods
xchg
scas
adc
insl
adc
mov
inc
test
ret
mov
mov
or
dec
cmp
and
in
mov
cs
mov
fstl
jl
orb
inc
sti
mov
js
loopne
ret
testl
stos
xchg
lcall
lea
and
out
lret
jg
push
mov
notl
xchg
shl
je
sahf
stos
sbb
das
push
pop
lods
js
inc
dec
add
push
cltd
fdivl
push
loope
inc
and
xor
scas
and
cld
sbb
insl
jmp
cmp
push
cmp
movsb
mov
jo
add
cmp
adc
in
xlat
mov
incb
mov
jne
loop
sbbb
dec
adc
shrl
loopne
pop
cmp
pusha
mull
adc
mov
fisttpl
test
cld
aas
icebp
cmc
lock
cmp
jnp
lret
mov
pushf
push
mov
pushf
or
mov
mov
xchg
repnz
adc
loop
repnz
and
or
out
sub
pop
mov
xchg
push
mov
mov
loope
sub
leave
fprem1
jno
cmpsl
ds
xchg
call
add
sub
adc
push
xorl
mov
insl
sbb
xchg
pop
jge
mov
mov
fwait
pop
ss
loopne
mov
mov
xor
mov
dec
mov
and
sbb
pop
mov
popa
mov
out
cmp
fcomip
dec
xchg
testb
dec
stc
add
jp
es
push
pop
cmp
jno
js
jo
xor
out
push
add
cmpsl
add
jne
xchg
jae
xchg
movsl
out
test
mov
std
shll
loop
adc
hlt
or
sbb
lcall
jb
das
dec
es
fcmovnb
mov
out
mov
popf
or
mov
xchg
addr16
inc
movsb
inc
cwtl
loope
push
cmpsl
jb
pop
hlt
ret
add
xchg
jnp
mov
mov
jbe
lods
xchg
out
push
xchg
xor
mov
ret
arpl
je
xchg
jmp
mov
sti
push
int3
dec
sbb
sub
sub
pop
mov
mov
add
jmp
hlt
dec
jo
xchg
push
test
push
fldt
repz
nop
imul
daa
cld
pop
aad
sub
stos
sbbl
mov
inc
adc
cmp
adc
rorb
jno
ljmp
stos
stos
mov
fxch
scas
xor
roll
addr16
addb
mov
and
outsl
pop
add
fwait
cmpsb
jnp
ret
fidivs
cli
test
xlat
mov
or
push
ret
sbb
cmp
outsl
in
jb
adc
cwtl
jno
cmp
cmp
mov
push
xchg
mov
cmp
sbb
repnz
fnstsw
rclb
sbb
pop
push
pop
mov
adc
inc
mov
shl
addr16
daa
mov
lret
mov
notl
jae
int
cs
jle
xchg
lods
and
jnp
inc
clc
icebp
jp
inc
xchg
mulb
adc
out
pop
and
push
adc
xor
mov
jne
push
jbe
out
mov
xor
loopne
dec
or
shrb
dec
addr16
pop
mov
in
inc
cwtl
in
jmp
pop
out
mov
ja
cmpsl
xchg
jmp
add
pop
leave
and
jno
addb
or
shl
ret
push
sahf
jae
dec
mov
jp
sub
lret
sub
popa
mov
jns
jmp
jecxz
cld
leave
and
mov
mov
pop
jno
add
daa
mov
fadds
cs
inc
les
pop
hlt
popa
ljmp
cmpsl
dec
test
xchg
addr16
lods
jns
or
shlb
roll
dec
mov
push
and
es
lods
mov
xchg
lods
xchg
jmp
or
and
das
test
pusha
jmp
std
es
push
imul
js
mov
test
lea
addr16
fisttps
and
popa
test
push
loope
in
dec
imul
cmp
push
repz
or
lahf
push
dec
jmp
scas
push
adc
mov
jbe
push
jmp
sti
sub
xor
mov
xchg
sub
insb
fisttps
lock
inc
and
inc
mov
adc
shlb
iret
dec
ljmp
push
mov
out
sub
xchg
pop
mov
pop
iret
xchg
icebp
pop
mov
pop
push
dec
pop
nop
daa
push
int3
cli
xor
pop
nop
aaa
gs
movsl
jecxz
gs
add
pop
jb
xlat
iret
sbb
pop
mov
popf
insb
and
mov
cmp
push
cmpb
sbb
ds
pop
xor
scas
sub
push
adc
fnsave
push
mov
stos
imul
das
aaa
notl
stos
dec
aad
sbb
cs
cmp
out
sbbl
fldl
fwait
push
sti
xor
or
lods
xor
imul
xor
push
dec
sbb
gs
ss
das
data16
cmp
or
or
jne
cs
xchg
sub
movsb
mov
inc
mov
cld
ss
ficompl
dec
pop
idivb
test
pop
jle
inc
je
inc
mov
push
jo
push
pop
inc
les
aam
pop
jl
cmpsb
and
sub
jecxz
cmp
dec
fstp
add
mov
movsl
sbb
adc
shrl
sbb
adc
cmp
ror
cld
xchg
sti
repnz
gs
lahf
lods
into
addr16
daa
sub
dec
scas
and
jb
or
popa
dec
xor
mov
mov
jp
lea
test
xlat
jmp
lods
cmp
lea
lods
adc
add
cmovp
pop
in
lea
add
pop
sub
xchg
out
gs
jae
xchg
mov
xchg
mov
sarl
gs
mov
adc
in
xchg
mov
mov
xchg
scas
ss
idivb
adc
ret
dec
adc
sub
and
fadds
or
popa
orl
daa
dec
and
fisubrl
aas
fs
pop
pop
jp
sarb
jge
lret
scas
pusha
jbe
jl
push
jmp
rolb
and
jae
jae
xor
push
xchg
mov
arpl
aad
arpl
push
add
push
jo
in
popf
cmp
push
addr16
adc
enter
mov
push
pop
test
pop
repz
sbb
cmc
dec
idivl
mov
cmp
mov
ljmp
or
cld
cmp
sbbl
fldenv
mov
mov
cmp
pop
fdivp
cwtl
mov
add
out
popa
xchg
lods
les
mov
mov
stos
xchg
out
mov
sub
xor
lock
loopne
repnz
and
cmp
mov
mov
mov
sbb
xlat
shl
call
inc
fcoml
mov
fimuls
insl
into
outsb
inc
test
ret
imul
dec
push
sbb
xchg
sub
cmp
mov
rolb
jns
aas
mov
adc
xchg
jno
lahf
test
pop
cmc
add
lock
push
xor
inc
fimuls
mov
testl
xchg
sub
pusha
mov
adc
sbb
push
push
jb
jbe
add
mov
sbb
xchg
test
in
or
and
push
int
fucom
lods
and
dec
jae
cs
sbb
roll
jle
pop
sub
lahf
and
push
jb
arpl
jne
inc
out
inc
adc
lds
arpl
or
mov
rolb
stos
or
xchg
mov
ljmp
scas
in
or
mov
sub
sbb
sub
xchg
repz
jo
negl
mov
iret
out
addr16
test
xadd
push
xor
jo
cmp
jl
call
cmp
mov
and
and
push
aad
mov
and
xor
cmp
int
pop
xlat
inc
xchg
mov
jge
mov
dec
add
testl
negl
faddl
fnstcw
out
inc
pop
ret
mov
icebp
ret
aas
js
arpl
repnz
mov
inc
leave
push
sub
inc
rclb
xchg
xchg
cs
jns
cmp
mov
push
jb
sub
into
popf
popa
or
loope
ds
loopne
sbb
dec
popa
xor
scas
inc
sbb
int3
pop
das
stc
fdivl
mov
cli
out
cwtl
fs
xchg
mov
lret
pop
add
xchg
sub
mov
mov
mov
dec
rolb
mov
fldcw
in
sbb
xor
mov
push
dec
add
pop
sub
fs
adc
in
adc
mov
mov
test
insb
cmp
inc
imul
xor
jmp
xlat
sub
mov
push
in
push
gs
push
xchg
iret
mov
mov
sbb
sub
add
cli
lods
inc
sbb
dec
adcl
loope
inc
andl
ret
adc
sti
inc
xlat
xor
xchg
cltd
mov
loope
stos
in
fstl
dec
xlat
xchg
sub
frstpm(287
push
fsubr
aam
add
out
outsb
cmp
mov
adcl
add
inc
pop
xor
pop
ret
pop
scas
mov
sbbl
sub
fisubrs
sub
push
and
jecxz
inc
inc
into
dec
loope
aam
je
mov
mov
jle
xchg
push
add
cmp
push
xor
xor
jmp
sbb
jge
je
rcrb
lods
aas
jae
and
retw
scas
shl
in
test
mov
sub
pop
pop
and
sbb
inc
dec
lret
mov
push
jb
mov
and
jp
push
dec
inc
int3
and
push
in
into
enter
jno
push
mov
adcl
push
fdivrl
mov
xor
and
pop
inc
testl
std
shll
fmuls
push
movsl
dec
insl
cmp
lahf
or
imul
jg
mov
ficoml
adc
inc
bound
fsubrp
and
jp
pop
cmpsl
movsl
jp
xlat
jecxz
adc
mov
mov
ret
mov
int3
imul
jbe
cmpsb
mov
xchg
out
jle
ss
and
lea
adc
les
pop
dec
push
in
std
aaa
push
jno
xor
in
and
testb
stc
cmp
sarl
hlt
sub
xchg
insl
xor
mov
stc
fisubrl
or
clc
sbbb
imul
out
cmp
and
cltd
insl
loopne
ret
mov
and
push
cmpb
mov
push
xchg
jns
test
mov
fs
loope
int3
dec
es
ljmp
outsl
and
sbb
sti
jo
sub
inc
shrl
test
std
out
scas
xor
std
pop
mov
dec
in
mov
cltd
imul
inc
testl
incb
enter
clc
jp
xlat
scas
gs
pop
aam
jle
pusha
jp
jnp
mov
lahf
lods
push
xlat
lods
scas
repnz
fcompl
pop
adc
cmp
xchg
cs
xlat
xchg
loop
mov
push
call
aad
jo
inc
clc
mov
fsubrl
or
fmuls
out
mov
outsl
mov
xor
std
jnp
dec
lock
push
jg
insl
loop
jp
xchg
fwait
jo
sub
dec
xchg
dec
push
mov
dec
xchg
dec
pop
outsl
pushf
mov
sbb
int
jmp
movsb
call
adc
inc
int3
xor
aad
mov
jns
loopne
jge
jmp
xor
push
fs
mov
and
add
add
arpl
sub
lret
pop
mov
dec
pop
jge
push
popf
scas
fisttpl
das
mov
negl
xchg
setb
cmpsb
and
in
cwtl
sbb
adcb
out
lods
push
repnz
arpl
mov
mov
ret
fsts
mov
test
sbb
enter
aaa
imul
mov
xchg
and
xchg
sarb
lcall
sbb
pop
pop
roll
mov
aas
sub
mov
add
pop
scas
out
add
add
ret
pop
pop
mov
cmc
cvtps2pi
pop
xchg
movsl
xchg
cmp
pushf
pop
mov
xor
and
add
std
mov
mov
mov
xor
testb
xchg
push
mov
push
cld
aas
rcrl
je
add
test
mov
xchg
dec
outsb
aas
push
mov
dec
ds
insl
ds
fmulp
mov
push
or
stc
push
sti
inc
popf
jb
add
jae
pop
std
push
push
jmp
jno
sti
fistl
xchg
cmp
or
mov
mov
mov
jnp
fldcw
movsb
xchg
xor
mov
data16
inc
in
insb
mov
mov
in
adc
mov
mov
insl
out
jp
and
mov
sub
inc
mov
dec
scas
mov
jne
cmp
xor
out
push
mov
imul
pop
mov
xchg
sub
ds
dec
xchg
outsl
push
enter
popa
mov
lods
xchg
sub
mov
cwtl
adc
xchg
mov
pop
sbb
mov
lods
outsl
mov
adc
popf
push
mov
sub
sub
fbstp
mov
stc
inc
xlat
movsl
adc
sbb
lret
inc
push
xchg
xor
roll
popa
icebp
pusha
aas
jp
lcall
dec
fidivrs
push
aaa
push
inc
dec
push
dec
and
pop
inc
test
test
stc
gs
in
xor
dec
mov
dec
lahf
jle
orb
xchg
pop
mov
pushf
scas
dec
fisubs
cmp
lock
adc
ss
out
incl
mov
cmp
data16
addr16
sbb
jmp
lea
jnp
jae
dec
pop
cmp
jns
outsb
test
pop
xor
xor
sbb
mov
test
push
je
cmp
sub
mov
faddp
dec
pop
imul
inc
les
addr16
repnz
repnz
xchg
jno
adc
dec
cmp
jle
subl
mov
ret
xchg
and
clc
inc
pop
fbstp
xchg
lret
push
jmp
pop
test
mov
rcrb
movsl
dec
mov
into
andl
or
incl
xchg
scas
aas
xchg
push
jmp
daa
fsubl
push
dec
arpl
mov
or
jmp
add
mov
fldt
sbb
jnp
sub
add
shlb
lret
xchg
cli
rcr
and
pop
fwait
je
mov
mov
add
out
inc
test
inc
test
std
jb
mov
pop
add
push
sbb
mov
or
mov
xchg
inc
sarb
scas
pusha
mov
inc
xchg
das
repnz
rclb
jge
mov
xlat
push
jmp
cltd
lds
into
lcall
jmp
lods
imul
push
add
lods
pop
sub
cmp
dec
roll
push
bound
arpl
jns
movsb
and
jno
push
push
pop
aad
adcb
and
fistl
or
cli
jp
pop
push
xchg
sub
or
mov
lret
xor
or
jp
pop
xor
clc
pop
or
setne
pop
fildl
in
lcall
pop
aam
lock
mov
loop
into
sbb
mov
jno
xlat
sbb
call
cmc
xchg
inc
pop
dec
push
mov
fidivrs
jbe
aam
inc
sbbl
adc
sbb
dec
js
cmp
out
or
and
inc
inc
fs
sub
std
rolb
sbbb
jnp
or
sarl
mov
fsubrl
lods
fldt
js
sub
pop
inc
xor
inc
cwtl
xchg
sahf
push
flds
shlb
ret
xor
xchg
lods
cmp
imul
je
cld
jl
xor
imul
sbb
push
lret
pop
fdivs
cmp
mov
fucom
sbb
cmc
adc
mov
pop
movsl
inc
cli
push
cmc
adc
xchg
mov
fidivl
inc
arpl
mov
push
out
popa
pop
mov
and
mov
inc
cltd
cmc
mov
js
fs
incl
dec
in
sub
sub
aaa
inc
fnstenv
lret
sahf
xor
enter
loop
cmp
sbb
cmp
mov
or
cmpsl
pop
mov
mov
test
inc
stc
imul
xlat
cli
stc
in
jo
xchg
stos
pop
push
pop
out
jnp
mov
or
push
lods
stos
mov
lods
lods
mov
cmpsl
mov
xchg
cld
test
mov
pop
testl
cmc
jle
loopne
mov
xchg
das
xchg
adc
imul
jp
jnp
mov
cmp
ret
shl
ja
sub
pusha
cmpsl
in
push
cltd
enter
jmp
push
fldenv
jecxz
push
lret
push
fistpll
cli
pushf
sbb
outsl
jns
sarl
cli
sub
mov
cmc
clc
jle
xchg
mov
xchg
mov
daa
lcall
adc
rolb
int3
pop
dec
call
ret
movsl
mov
mov
je
cmp
add
xchg
test
xchg
cs
inc
lods
nop
call
sub
mov
cmp
sub
mov
andl
lea
inc
mov
fucompp
fnsave
sbb
lahf
lcall
movsl
enter
std
sahf
iret
stos
popf
sbb
iret
int3
push
stos
jbe
xlat
icebp
push
mov
and
gs
add
sahf
cltd
imul
and
fnstenv
adc
adcb
aaa
push
mov
xchg
pop
in
jp
pop
mov
add
stos
mov
pop
ja
mov
popf
add
sbb
ds
mov
call
cmpsb
mov
outsl
fsubs
inc
cld
cs
pop
jne
xchg
mov
movsl
mov
je
add
pop
cld
pop
dec
push
xchg
scas
int
sub
std
xor
rcl
stc
divl
dec
sahf
jbe
add
mov
and
jbe
loopne
xchg
add
out
jae
mov
mov
or
xchg
cmp
test
xorl
jbe
lahf
push
push
jg
or
cmc
mov
push
sbb
rorl
lret
xchg
jnp
stos
pop
ds
filds
mov
adc
sub
cmp
stc
or
add
imul
push
int
push
idivl
or
xchg
mov
add
add
cmpsl
push
lret
in
pop
cmc
les
sub
shlb
in
jmp
and
or
add
and
aad
ret
adc
lahf
jo
icebp
aaa
std
xchg
inc
int
stos
cmc
out
push
pop
xchg
lds
fs
sbbb
adc
sbb
add
sub
addr16
inc
push
ret
call
and
pop
or
pusha
mov
mov
int
aaa
iret
out
adc
adc
fdivs
pop
scas
push
cmp
mov
dec
add
and
and
adc
inc
outsl
mov
shll
xor
xor
iret
adc
push
push
push
jp
and
lods
push
mov
popf
or
es
push
test
test
pop
mov
pop
adc
cmpsl
xchg
inc
mov
ljmp
popf
movsl
inc
pop
scas
js
outsl
cmpb
push
jle
cs
push
popf
xor
pop
and
roll
sub
inc
and
ja
cld
test
cmc
int3
jg
movsl
mov
mov
jno
mov
lock
outsb
adc
mov
test
or
fistpl
xchg
mov
sbb
aas
lcall
and
test
mov
pusha
sbb
adc
push
cmp
mov
loop
in
out
xchg
shrl
add
and
add
xor
lea
repnz
add
mov
in
aas
into
gs
sbb
test
add
push
or
test
sbb
xchg
sub
scas
inc
sbb
pop
icebp
cmp
inc
out
pop
ja
int3
ljmp
xchg
lcall
jbe
pop
test
ret
in
push
xchg
pop
je
sub
mov
ficoml
or
inc
repz
adc
mov
test
sbb
arpl
psubq
sub
out
cvttps2pi
inc
call
int3
loopne
nop
cmp
leave
xchg
loop
inc
jmp
jb
imul
or
dec
loop
sub
pop
or
xchg
popf
daa
enter
mov
jecxz
gs
mov
sub
xor
jp
es
push
pop
mov
in
notl
cmp
mov
aas
sahf
jne
iret
sahf
das
lahf
cmpsl
and
cmp
xchg
jnp
divl
frstor
int
pop
ret
pusha
mov
mov
sub
addr16
xchg
pop
stos
mov
mov
aad
push
push
call
pop
xor
in
lret
jecxz
call
call
sub
push
dec
fadd
sbb
loop
mov
popf
mov
sub
orl
out
xchg
call
or
push
and
cmpb
and
sbb
lret
xlat
call
xchg
add
add
mov
call
sub
and
call
cmpsl
add
ret
in
adc
shrb
xchg
jg
in
cmc
outsl
add
iret
pop
adc
je
mov
xchg
pop
mov
cmpsb
test
inc
cli
or
rorl
xchg
stos
pop
cld
fldl
js
loopne
leave
push
leave
adc
inc
inc
xchg
stc
negb
inc
inc
daa
fistpll
jae
inc
aas
and
mov
mov
cmp
loop
dec
add
cmp
imul
xchg
cltd
js
sub
xor
sbb
jnp
xor
fst
add
fcoms
adc
aam
es
leave
pusha
hlt
push
cmpsb
inc
cmp
add
stc
dec
fdivrs
sbb
pop
inc
icebp
push
jge
push
cmp
test
push
loope
aaa
adc
cmp
xchg
mov
shrl
sahf
sbb
mov
push
in
adcl
stos
push
ss
out
push
xor
aaa
jl
mov
and
cmp
or
dec
xchg
mov
cmpsl
jnp
pop
or
add
sbb
sub
daa
cmp
loope
fcoms
jg
inc
mov
loope
shll
hlt
lahf
out
gs
fistl
mov
jbe
sbb
adc
lds
push
insb
fisttps
or
adc
xor
movsb
jbe
rcrb
mov
sbb
add
cmc
push
lods
mov
adc
call
dec
jmp
cmp
mov
pop
test
lret
cli
addr16
inc
inc
shlb
push
xchg
jge
dec
sub
outsb
and
cmc
dec
cmp
das
pop
nop
xor
loop
js
mov
rol
loop
fwait
out
les
mov
adc
popa
pop
lods
jg
jp
or
arpl
cmp
add
sub
loopne
das
push
out
xchg
inc
into
loope
sbb
pop
lret
ret
fbld
xor
mov
lods
aas
mov
sarl
lds
push
dec
and
cmpsl
mov
jb
fcoml
push
mov
idivl
pop
mov
subb
sahf
or
stos
scas
mov
pushw
std
mov
xchg
xchg
adc
mov
in
push
mov
lods
fs
add
push
mov
in
cltd
sbb
and
jbe
push
push
cmp
adc
shlb
lret
movsl
addr16
xor
jge
test
jecxz
leave
jge
or
outsb
shll
dec
jl
add
and
cld
fsubrs
es
addr16
mov
aas
push
pop
sbb
popa
ja
shll
movsl
push
add
ret
pop
test
or
mov
add
in
jg
fimull
pop
lods
mov
fdivs
or
leave
jecxz
xchg
stos
xchg
xor
cmpsb
mov
pop
addl
xchg
xchg
dec
fnsave
jecxz
cmp
dec
push
fnstsw
dec
test
mov
ret
adc
aam
cwtl
sub
mov
add
sub
sti
cmp
bound
xchg
movsb
inc
push
hlt
test
cmp
jmp
in
dec
cmp
andl
push
movsl
pop
sbb
or
jge
in
mov
testb
cmp
push
nop
sub
popa
cmp
sbb
add
lock
xor
inc
and
repz
adc
int
jmp
push
mov
push
shlb
lds
mov
lea
cld
cmp
inc
fstpl
xorl
into
sub
dec
sbb
jmp
repnz
xchg
xor
nop
jge
add
movsl
pop
test
sub
xor
adc
xchg
ja
sub
aad
fisubl
mov
dec
jp
adc
xchg
pop
cmp
push
inc
mov
scas
inc
mov
push
pop
dec
fmulp
mov
fcmovu
and
test
xor
rcrl
push
popa
fmull
les
cmp
jecxz
xor
push
hlt
dec
les
pop
xlat
dec
dec
pop
aad
sub
add
dec
mov
push
shll
cmpsl
popa
stc
xchg
enter
add
cld
lcall
push
mov
lods
movzbl
out
cmp
repnz
fwait
jg
pop
xlat
aas
add
xchg
inc
dec
hlt
arpl
push
test
loop
sti
dec
popf
stos
jno
xchg
repz
fiadds
shl
mov
push
cltd
jnp
lret
sbb
push
movsb
arpl
pusha
mov
les
dec
ret
lods
cmp
pop
daa
cmp
pop
dec
loop
data16
push
lods
add
js
or
shrb
cli
rcrw
sub
adc
add
testb
out
dec
or
stos
sub
xor
mov
lea
pop
shrb
pop
sbbb
xchg
sub
add
scas
mov
out
rcrb
mov
push
and
imul
inc
xlat
sub
ss
push
fwait
sbb
mov
pop
loopne
inc
rcll
and
mov
sahf
stos
mov
jle
pop
jns
call
add
into
push
xor
into
jmp
or
callw
and
mov
sahf
xor
pop
loopne
xchg
shll
add
enter
xchg
jne
insl
add
ds
call
loope
xchg
enter
inc
fnstsw
icebp
ret
add
adc
fmul
hlt
and
mov
sarl
mov
jge
mov
pop
repz
jp
inc
adc
inc
push
jl
dec
lock
push
les
xchg
jbe
or
loope
daa
adc
mov
sbb
fmulp
pop
sub
fcompl
mov
jb
clc
mov
or
mov
jno
sbb
popl
jbe
add
inc
sbb
cmp
dec
xchg
mov
out
lods
lcall
cmc
aad
add
pop
push
out
mov
xchg
jnp
push
mov
movsl
icebp
iret
jmp
sbb
int3
mov
mov
add
sub
das
adcb
inc
push
mov
loope
jg
test
test
mov
mov
mov
and
cmpsl
xchg
leave
arpl
mov
sub
pop
bound
adc
imul
xor
and
xchg
pushf
cli
aam
jbe
stos
icebp
jbe
mov
int3
pop
cltd
fs
jmp
xchg
clc
adc
aaa
jmp
in
lret
mov
jmp
mov
test
scas
mov
imul
jl
popf
mov
xchg
orl
pop
mov
outsl
cmc
adcl
sbb
scas
popf
mov
loopne
and
lcall
bound
lret
repnz
inc
or
punpckhdq
push
es
or
or
push
dec
loop
pop
jo
adc
pop
pop
in
mov
lret
lods
xchg
mov
and
mov
dec
enter
out
cld
shlb
push
ret
movsb
xchg
push
jns
or
push
xor
inc
jbe
dec
mov
scas
mov
arpl
pop
or
sbbl
mov
gs
sbb
shl
repz
ja
lods
cltd
les
inc
push
andb
shl
shrl
lea
mov
aam
push
inc
adc
and
cmp
pop
inc
jmp
push
movsl
cmp
out
jp
adc
inc
ljmp
jne
adc
fadd
sbb
jg
ret
imul
scas
push
pop
imul
into
jl
and
pop
mov
inc
xchg
inc
loope
aaa
dec
gs
aam
push
pop
jg
xchg
and
push
std
mov
dec
mov
xchg
mov
lods
pop
or
pop
fisubrs
aam
outsb
inc
xchg
scas
jae
shrl
pop
fsubl
jg
or
pop
mov
mov
lock
stos
jmp
mov
ret
mov
lret
xchg
xor
cmp
xor
inc
fstpt
cld
fildll
test
ficoml
stc
push
inc
push
shrl
ret
loope
inc
icebp
aaa
mov
sub
shlb
fisubs
push
adc
aaa
cs
scas
cld
frstor
and
cmp
dec
testb
jnp
dec
add
adc
loope
stos
mov
stc
sbb
mov
pop
inc
call
mov
xchg
sub
aam
lahf
push
test
test
filds
movsb
dec
fbld
adc
jne
pop
jmp
movsl
cld
push
sbb
jp
inc
pop
cmc
adc
pusha
and
inc
dec
fisubl
ficompl
add
add
sbb
cmp
adc
das
js
arpl
xchg
xchg
in
pop
cli
pop
aaa
sbb
push
fcomi
clc
add
mov
ljmp
pavgw
jbe
fisubrs
stos
adc
inc
mov
dec
loop
push
inc
or
adc
sbb
push
push
pop
cmp
xor
loope
lods
mov
enter
adc
lahf
mov
xchg
mov
lock
xor
pcmpgtb
loopne
mov
dec
mov
cmp
insl
fimull
ret
add
xchg
jbe
jp
fsubrl
gs
mov
fs
out
sbb
fmuls
cmp
leave
push
jb
clc
test
xlat
pop
pop
mov
jae
lret
push
je
add
rclb
cmpsl
jg
movsb
ja
mov
fidivrl
lcall
ja
or
dec
push
xor
and
rorb
jae
inc
push
pop
sti
pop
cmp
sbb
ror
or
cmp
sbb
dec
mov
stc
adc
repz
push
cmp
orl
sbb
dec
dec
pushf
clc
jo
scas
jns
mov
popa
test
ror
fwait
imul
fwait
inc
mov
test
fbstp
inc
jge
or
mov
popl
cmp
scas
lret
subl
out
imul
popf
cmpsb
shrb
outsb
cmpsb
mov
adc
daa
js
clc
jae
push
scas
inc
dec
scas
inc
frstor
jo
aam
mov
jle
sarb
rcrl
cmp
mov
pop
dec
dec
pop
fsubrs
es
je
push
xchg
or
push
insl
push
cs
fwait
test
imul
dec
lahf
dec
loope
push
jecxz
inc
fldenv
sbb
jmp
pusha
fstpt
xchg
cmpsb
dec
out
push
fcmove
sub
fs
sub
push
daa
mov
int3
insb
inc
fcompl
ret
and
ret
adc
mov
and
enter
push
or
push
jne
aaa
adc
les
loop
lret
xor
fs
push
jb
mov
das
xchg
in
cmp
pop
mov
test
sbb
rolb
or
sar
or
xor
xchg
repz
out
test
scas
xchg
sub
mov
mov
jle
repz
adc
sub
cmc
adc
dec
cld
xchg
jge
mov
mov
loopne
aas
scas
push
aam
adc
ljmp
cld
adc
cli
adc
arpl
pop
repz
stos
jecxz
push
sbb
lds
xor
jne
and
iret
xchg
cmpsl
add
push
sbb
adc
mov
pop
int3
inc
inc
pop
xchg
or
xchg
cmp
adc
xchg
mov
test
sub
pop
cmp
adc
dec
pop
je
xchg
addr16
test
mov
ja
fidivl
xchg
lods
ljmp
and
sub
addr16
pop
jge
daa
xchg
pop
loop
dec
mov
and
stos
orl
scas
and
outsl
lea
aaa
rcrb
xor
mov
sbb
mov
outsb
mov
sbb
out
dec
lea
pop
cmc
daa
jns
cli
mov
movsb
jle
fisttpll
push
mov
aas
cmc
in
xchg
ficompl
inc
fidivs
mov
cs
dec
cli
dec
aam
loop
shrl
addl
mov
jbe
jg
dec
in
ficoms
jae
divb
mov
cmc
clc
xchg
loop
sbb
ss
pusha
jo
or
popf
sub
xchg
push
repnz
sbb
shrl
inc
bound
and
fwait
or
cmp
sbb
inc
out
stc
data16
xorl
shrb
pop
mov
test
mov
repz
xorl
lahf
add
ja
sub
dec
aad
xchg
jno
popf
sub
fnsave
push
inc
mov
push
xchg
repnz
mov
jmp
mov
hlt
jg
lods
ljmp
icebp
xor
cmp
mov
or
xchg
pop
insl
lahf
mov
jnp
xor
push
xchg
or
std
lea
cli
cmpsl
mov
movsl
jnp
mov
loop
and
leave
jle
loopne
lock
nop
sub
pop
mov
mov
sbbb
pushf
sti
inc
pop
data16
push
not
jbe
out
mov
add
and
leave
repnz
mov
leave
inc
dec
arpl
lds
int
aaa
pushw
mov
push
mov
mov
daa
aad
or
loopne
push
sbb
sbb
popf
cmpsb
int3
vpmacssdqh
jg
jle
xor
out
xor
xlat
or
ret
cld
inc
or
stos
sub
lahf
pusha
or
xor
mov
add
imul
push
jle
jmp
jo
jmp
and
mov
imulb
lea
or
das
rol
lahf
int
jecxz
jge
dec
out
lahf
aas
push
sti
fbld
xor
cwtl
popa
clc
mov
mov
das
aad
pop
loop
jg
sti
push
xchg
fs
ljmp
push
jb
aam
arpl
js
out
pop
cmp
xchg
outsl
add
outsl
pop
and
shl
ja
jo
shrl
lods
push
mov
xchg
pop
cmp
es
int3
mov
mov
push
testb
add
and
xorb
sahf
insb
sar
hlt
fucomip
adc
inc
mov
mov
out
test
xor
ss
cld
test
xor
jg
or
jnp
out
inc
sahf
or
ret
into
jecxz
pop
repnz
inc
mov
cwtl
jecxz
test
imul
sbb
stos
inc
int
test
cs
lods
dec
and
fistl
jns
jmp
into
mov
ret
inc
xchg
stos
add
ret
cmp
adc
fisubrs
add
scas
fisttpll
cwtl
lock
mov
shll
cmp
outsl
push
lcall
dec
inc
dec
push
xor
sub
add
mov
stc
addr16
lret
mov
sbb
daa
lcall
adc
outsl
test
dec
dec
sub
sub
mov
jge
movsl
fadds
popa
adc
das
mov
fadds
push
out
cmp
jnp
inc
pop
inc
movsb
jp
jns
and
push
push
hlt
dec
push
loope
movsl
sub
lea
pop
and
or
ret
mov
sbb
push
and
and
lods
std
sti
cmpsl
cli
xchg
inc
pop
pushf
pop
iret
xchg
sbb
scas
push
inc
xor
clc
cmpsl
dec
sahf
push
shlb
adc
scas
gs
and
mov
ja
inc
mov
iret
out
xchg
sbb
or
cmp
roll
faddl
outsb
mov
stc
pop
xor
and
pop
mov
xor
pop
loop
das
movb
mov
test
xor
ret
out
xchg
ss
negb
rcr
lea
lods
repz
xor
mov
orb
mov
repz
fisubs
fcomps
xchg
xor
mov
lock
pop
cmp
mov
addr16
xlat
sub
divl
cltd
std
imul
add
cmp
pop
in
mov
stc
lods
es
in
or
movsb
les
pop
sub
dec
arpl
adc
mov
call
aaa
dec
jge
repz
cmp
pop
pop
stos
push
repz
push
in
test
mov
sub
subl
sbb
adc
inc
jbe
out
subl
or
aad
inc
shll
fnstcw
jb
xor
les
lret
sub
into
popa
pop
sbb
jno
adc
repnz
push
test
imul
or
ja
in
mov
imul
inc
xchg
push
lods
lods
inc
bound
and
xchg
push
jge
mov
cld
or
rcl
mov
xchg
push
loop
pusha
bound
fs
adc
add
cli
test
js
add
es
push
mov
adc
in
icebp
insb
out
push
ljmp
out
mov
jl
xor
add
mov
jne
and
dec
mov
pop
icebp
out
imul
jae
or
test
cs
lcall
adc
xor
insl
lea
inc
cmc
sbb
daa
out
movsl
inc
ret
pop
cmc
push
in
push
je
jne
stos
shrl
cmp
imul
sbb
cmp
mov
push
jmp
ret
jbe
sbbl
test
inc
fldenv
mov
loope
jno
jnp
enter
cmp
sbb
or
mov
push
or
iret
xor
dec
mov
push
je
fwait
jae
loope
or
xorl
jb
shrb
xor
pop
cmp
inc
cs
in
dec
dec
inc
and
ds
daa
ljmp
outsb
sub
add
mov
pop
jno
outsb
mulb
pop
jecxz
mov
jns
jno
jb
stos
jmp
xor
fwait
push
test
test
mov
in
and
adc
je
jge
out
enter
subb
leave
and
inc
adc
mov
push
imulb
ljmp
xorb
and
dec
hlt
lret
mov
dec
loop
xchg
aad
lods
repnz
jno
mov
ret
scas
mov
mov
mov
cs
cmp
shrb
loopne
jecxz
push
leave
mov
mov
xchg
mov
or
stos
jbe
push
es
mov
lea
cmpsl
popa
and
in
and
pop
rcrb
popa
stos
jmp
fst
sub
addl
or
ljmp
imul
sbbl
aad
push
or
dec
mov
lret
mov
stos
push
leave
ds
scas
sti
sub
nop
mov
lahf
movsl
ret
mov
mov
icebp
insb
xchg
fs
rolb
aad
or
call
xor
addr16
data16
mov
psubusw
push
mov
push
lret
lea
jle
xchg
adc
and
pop
mov
xchg
add
push
roll
or
xor
sahf
and
push
and
jb
jmp
sub
jl
push
dec
lods
fmull
mov
adc
gs
sub
jnp
dec
mov
fists
and
inc
cli
movsl
xchg
add
dec
outsl
cli
xchg
popa
jnp
inc
xchg
inc
cltd
xchg
mov
sub
popa
mov
decb
test
lret
xchg
lahf
and
dec
push
xor
ret
sahf
cs
sbb
or
push
jle
jmp
xchg
in
stos
sub
icebp
jo
cmp
js
insw
addl
xchg
out
lods
adc
inc
pop
jmp
sbb
test
js
sahf
test
dec
iret
data16
mov
outsl
cli
xchg
sahf
xor
mov
pusha
push
sub
cmpsb
jns
xor
pop
cmp
imul
mov
mov
adc
aam
dec
push
stc
pusha
mov
jecxz
or
pop
popf
insl
cli
mov
cmp
and
xor
jge
test
out
int3
movsb
cmp
mov
adc
jbe
xchg
xchg
or
sbb
lret
pop
lret
bound
shrb
and
stos
jl
lret
movsb
mov
dec
ljmp
push
push
cltd
xor
je
inc
dec
mov
call
and
pop
xlat
mov
mov
frstor
jb
and
add
push
idivb
mov
pop
rol
xor
mov
loopne
jl
xor
xchg
nop
les
insl
mov
or
pushf
sti
rorb
jl
lods
sahf
cs
dec
shl
clc
cmp
or
and
push
popa
jg
inc
push
jne
jge
jb
xor
adc
in
clc
divps
inc
fstl
ret
add
rolb
mov
mov
jb
out
or
xor
mov
scas
xchg
adc
dec
jmp
mov
push
fcomps
mov
xchg
or
push
sbb
dec
lret
fdivs
jl
mov
or
sub
push
in
fdivr
ss
sbb
or
jge
fildll
popf
dec
pop
or
cmpsb
bound
pop
mov
movhps
xor
aas
out
dec
les
frstor
adc
push
and
fstps
pop
cmpsb
mov
jb
mov
push
out
test
mov
mov
xchg
dec
inc
xor
mov
std
push
test
dec
push
pop
in
inc
cmpsl
xor
insb
loope
sbb
movsl
icebp
jge
or
loop
and
sahf
clc
mov
mov
jmp
inc
stos
lds
mov
ret
mov
cmp
inc
pop
iret
xor
cmp
push
mov
arpl
test
mov
fbstp
inc
and
fwait
test
xor
je
mov
and
aad
call
icebp
repnz
pop
dec
int3
mov
repnz
push
call
mov
mov
jne
dec
mov
adc
pop
iret
sbb
out
shl
cmp
jno
push
push
lea
jnp
cwtl
icebp
jnp
add
clc
sbb
sbb
ret
sub
xchg
mov
mov
adc
mov
notb
push
aam
popf
add
es
or
dec
mov
push
mov
mov
out
or
cmpsb
jl
jns
mov
cltd
aam
xacquire
faddl
in
xchg
mov
insl
repnz
pop
jle
mov
iret
lods
push
std
inc
aam
dec
push
popf
xor
cmp
jmp
jle
mov
scas
mov
cmp
popa
into
adc
push
stos
es
addr16
push
andb
sbb
stc
sahf
cmp
jnp
or
call
dec
iret
jns
jnp
stos
dec
pop
lret
mov
and
inc
mov
mov
mov
jne
mul
cmp
cmp
ljmp
push
jae
mov
shrl
mov
jg
cmpsl
test
jb
clc
vpavgb
mov
aas
jmp
rcrl
pop
cld
das
fidivrs
inc
lret
scas
jo
lcall
sbb
fistpl
int3
fmull
mov
or
fnstenv
sub
or
inc
cmp
repz
outsb
or
imul
push
or
test
mov
add
out
inc
cmp
pop
pop
cmp
aam
lahf
jbe
imul
xchg
icebp
idivb
mov
mov
aas
xchg
rol
pop
add
inc
orl
rclb
ja
jl
jns
mov
adc
rcl
xlat
jns
mov
in
pop
popa
fldl
fwait
enter
add
cmp
cmc
push
lods
inc
mov
jge
mov
xor
dec
fsubs
cmp
pop
dec
shll
leave
test
loop
sbb
daa
mov
test
cltd
sbb
iret
mov
nop
push
movsb
mov
xchg
xor
or
out
fmull
fimull
outsl
cmp
loope
fistl
nop
test
mov
mov
sbb
out
aaa
or
mov
ffreep
mov
pop
adc
nop
xor
leave
sub
loope
sahf
adc
dec
pop
push
testl
enter
dec
jbe
dec
fcoml
cmp
into
out
bound
aam
xor
push
fsub
pop
fisubrs
loopne
icebp
add
ss
mov
in
mov
mov
inc
fldpi
adc
jno
cli
outsl
mov
popf
jno
je
aaa
aam
dec
call
outsb
sub
js
insb
fstpt
and
enter
cwtl
add
add
mov
adc
subl
rclb
pop
cwtl
jg
shrl
fimuls
or
outsb
cmp
aad
inc
pop
mov
pop
push
pusha
cmpb
cmp
mov
ret
adc
dec
mov
sub
sub
rcrl
mov
jo
xchg
mov
cmp
and
scas
cld
and
cltd
xchg
ds
call
in
xchg
imul
leave
inc
pop
sti
in
push
dec
or
cmpsl
fisttpl
sub
pop
push
sbb
xchg
imul
mov
popf
sub
inc
imul
or
xor
into
mov
sti
mov
xor
adc
rol
cmp
fcmovb
loopne
push
dec
and
in
cmp
dec
fidivs
pop
jnp
fidivl
xchg
out
dec
push
rep
push
mov
in
mov
mov
sub
popf
lahf
sub
lea
push
xlat
sub
pop
scas
dec
add
dec
lock
cmp
dec
mov
fisubs
pusha
inc
sbb
xor
scas
pop
es
lret
es
ret
movsb
lods
inc
push
gs
pop
fsubrs
rcll
xchg
jno
pusha
outsl
ja
mov
jle
or
mov
jg
push
adc
mov
fistpl
or
pop
out
push
jle
test
mov
add
sahf
cwtl
stc
movsb
cmc
dec
out
adc
dec
test
js
popl
cli
inc
push
cltd
jno
lods
subb
push
movsl
jb
into
in
daa
je
pop
push
or
jbe
imul
mov
pop
fucom
jle
mov
scas
inc
rcrl
aaa
push
icebp
mov
and
jecxz
je
or
mov
cmpsl
ret
adc
and
and
mov
jle
imul
inc
add
push
popa
jae
iret
ret
xchg
push
sbb
subl
jno
cmpsb
out
test
repz
leave
lret
xchg
jns
adc
fiadds
fistpll
mov
jg
gs
dec
arpl
loop
jle
testb
push
inc
adc
dec
lahf
call
dec
cmp
in
pop
jge
mov
add
xchg
jb
andb
pop
xrelease
jno
adc
pop
adc
insl
enter
sub
lahf
push
dec
or
pop
pop
pop
xrelease
jmp
jle
pushaw
out
movsb
imul
fimuls
dec
lods
insb
xor
js
push
push
jno
xor
sarb
mov
lock
test
jnp
xchg
lods
xchg
or
dec
sub
push
out
xor
in
in
notl
lea
rcrb
inc
inc
push
orl
adc
jnp
sbb
punpckhdq
bound
in
cmp
pop
int
and
xchg
scas
repz
adc
mov
stc
out
imul
sub
lea
pop
bound
aaa
cmpsl
sub
push
movsl
mov
orl
dec
pop
dec
pop
dec
mov
mov
lods
pop
and
insb
cmp
push
jno
es
or
cmp
mov
pminsw
les
loope
jl
pop
pop
out
xor
das
inc
inc
in
add
fildl
fsts
cld
rcrb
test
repz
out
xchg
sbb
jne
pusha
lret
lds
es
or
or
inc
adc
sbb
push
inc
shrb
imul
scas
lods
scas
ficoms
adc
pop
cmp
popf
imul
mov
jb
sub
sub
jbe
mov
std
cmp
pop
and
je
pushf
cltd
daa
out
push
push
in
cli
insl
loopne
xchg
shr
clc
fldcw
bound
push
mov
jecxz
xchg
das
xchg
push
and
cmc
adc
xchg
nop
lock
mov
scas
adc
mov
add
lds
test
shl
loop
sbbl
push
clc
ficoml
pop
iret
fnstsw
mov
fistpll
in
mov
bnd
and
in
int3
aad
add
sbb
scas
lret
inc
outsl
out
pop
cmpsb
fidivrl
inc
jle
mov
push
sub
lods
pop
into
add
andl
xchg
in
out
mov
aas
cmp
push
fs
inc
pop
sahf
es
cs
jle
cmp
insl
jge
dec
enter
shl
sbb
ds
mov
xchg
jmp
fdivrl
in
dec
int3
push
call
cmp
mov
xchg
inc
inc
inc
shrl
cmp
adc
mov
and
imul
mov
aam
or
jne
repnz
mov
sub
adc
fisubs
or
jbe
xor
add
lea
pop
ret
jae
int3
cltd
repz
out
loop
out
pop
ljmp
jne
scas
scas
xor
adc
lret
addr16
sbb
xor
andb
iret
pop
arpl
popa
gs
mov
mov
sbb
stos
or
fsubl
sub
iret
sbb
push
loop
aaa
pop
xor
bound
mov
frstor
int
add
push
xor
adc
pop
add
cwtl
xchg
imul
in
and
shrl
or
mov
outsl
adcl
jb
push
stos
paddq
inc
add
xorl
ret
push
push
or
xor
sahf
pop
mov
inc
in
repnz
pop
pop
stos
call
jb
hlt
out
mov
pop
push
add
out
pop
imul
xor
adc
dec
push
pop
dec
mov
stc
push
xchg
ss
or
mov
dec
dec
test
sahf
mov
mov
cmp
ss
xor
jo
shlb
gs
push
jne
adc
and
iret
pop
shrl
jbe
cmp
pmulhuw
and
cmpsb
nop
out
mov
mov
sbb
data16
jo
test
or
add
fidivs
lods
xor
mov
push
rorb
cmpsl
std
and
loope
out
fwait
mov
cmp
dec
xor
xor
es
cmp
inc
sbb
lods
lea
or
es
or
adcb
lds
ficoms
rcl
stos
mull
jnp
fadds
pop
xor
gs
imul
push
out
sbb
jg
leave
aas
insb
andb
jge
mov
sahf
xor
add
cmp
das
or
lds
jecxz
sub
mov
loopne
sub
jnp
pop
lds
shll
pop
mov
sarl
into
repnz
cmp
jnp
fisttps
add
xor
aad
int
pop
repz
mov
outsb
test
bnd
xchg
mov
clc
mov
std
push
aas
in
jne
pusha
fistl
mov
and
int3
mov
in
cwtl
pop
hlt
or
add
dec
push
push
scas
mov
fdivl
ficompl
aas
cltd
outsl
insb
test
lea
cwtl
xchg
cmp
jne
mov
out
fsubrs
or
mov
or
inc
xchg
mov
jae
insb
test
subl
adc
js
mov
pop
fs
pop
and
cmpl
mov
movsl
inc
lods
xchg
scas
sti
inc
std
call
or
test
inc
mov
pop
arpl
jnp
fldenv
push
push
sahf
lods
inc
inc
adc
test
lock
outsb
dec
adc
pop
pop
js
or
dec
test
jge
les
sbb
fmull
jecxz
mov
and
imul
mov
ret
push
fsub
pop
cmc
cmp
mov
jmp
into
mov
ss
clc
adc
mov
ret
repz
mov
fisttpl
or
cmpsl
lcall
pop
mov
movsl
cs
rcr
hlt
sub
sbb
cmpsl
arpl
or
enter
movsl
mov
xchg
jecxz
push
xchg
adc
cmp
or
inc
aas
insl
mov
shl
or
shrl
pop
stos
sbb
push
mov
iret
xor
ret
cmp
andb
cmp
ret
jmp
iret
aad
xlat
mov
ljmp
mov
add
xlat
push
jbe
and
pop
shr
pop
sar
test
movsl
rcrl
mov
or
xlat
mov
dec
or
loop
in
cwtl
rclb
xor
xor
mov
push
xlat
addr16
fwait
bnd
push
push
pop
mov
xchg
push
push
ljmp
loop
std
mulb
scas
int3
adc
push
lret
jno
jns
cmp
lcall
mov
jno
fldl
push
lock
push
mov
pop
inc
popf
xchg
inc
sbbl
xor
jle
pop
cmp
call
mov
js
xchg
mov
cmovno
and
das
xchg
push
jb
test
pop
adc
orl
or
sar
pusha
add
daa
arpl
xlat
push
mov
sub
popf
add
mov
pop
pop
ds
arpl
cs
sbb
xchg
imul
insl
add
in
sub
jo,pn
push
lret
movsb
sub
clc
and
lret
call
or
leave
pop
popf
hlt
inc
lret
push
pop
out
scas
rorb
cmpsl
xor
mov
jo
dec
lret
pop
in
fs
pop
dec
mov
cmpsb
popf
es
aam
std
in
inc
and
pop
das
fwait
sahf
lret
into
xchg
sti
rolb
mov
in
adc
inc
ficomps
pop
cli
shl
adc
mov
bound
push
mov
ret
mov
mov
sub
cmp
incl
xchg
cmpsl
inc
sbb
inc
push
out
xor
arpl
pop
cmc
pushf
das
xlat
add
jbe
xor
ljmp
shlb
ja
es
xlat
fiadds
ljmp
inc
mov
mov
mov
xchg
sub
xor
xchg
out
mov
xlat
stos
mov
clc
xcrypt-ecb
cmpsl
mov
xchg
addl
pop
jo
test
lret
test
out
cli
pop
ss
push
mov
push
add
lods
mov
rclb
lret
mov
sbb
ret
jne
pop
xchg
pop
shl
pop
fadd
pushf
dec
loop
jno
ds
rcll
decb
mov
jno
pop
iret
xchg
lea
iret
cbtw
scas
testl
or
test
cs
pop
addl
fldcw
fdivrs
repnz
xchg
jo
xchg
cmpsl
mov
test
lock
inc
push
in
jb
mov
sarb
mov
mov
pusha
cmp
daa
mov
fcompp
test
pusha
sbb
pusha
jge
mov
stc
sarb
cmp
jae
cld
mov
stos
jmp
xor
jb,pt
dec
sbb
les
pop
sbb
add
sbb
inc
push
sbb
xchg
outsb
sub
sub
push
add
daa
push
cmp
jns
inc
in
test
lret
dec
cs
loop
jp
shr
cmp
or
lea
and
xchg
pusha
cmp
int3
push
call
xchg
xor
test
js
xor
inc
pop
cwtl
lret
xor
push
rol
adc
popa
jnp
mov
adc
or
out
fsts
in
cmp
into
push
aas
lahf
out
and
adc
cli
or
mov
and
lahf
aam
cli
cmp
addr16
push
std
movb
sub
mov
adc
or
sti
stos
push
ljmp
rclb
mov
inc
fldcw
dec
pusha
push
cli
scas
dec
loopne
adc
imul
nop
mov
loopne
inc
sbb
inc
lret
out
cmp
xchg
arpl
ss
clc
or
fsts
or
mov
push
jnp
call
inc
pop
addb
xchg
cmp
out
or
sub
ljmp
xor
movsb
dec
jb
adc
mov
rcrb
ficomps
xchg
and
xor
jle
arpl
mov
jne
dec
pop
in
push
fistpl
fyl2x
jbe
add
int3
out
enter
test
mov
inc
dec
cmp
loop
mov
cmpb
mov
mov
xor
add
cmp
and
insl
xchg
aad
jle
jge
xchg
add
mov
loope
xchg
cmpsl
rcll
pop
pop
sahf
dec
sbb
shlb
call
mov
test
pop
push
sbb
jle
jnp
xor
arpl
or
mov
ficoml
stos
or
adc
pop
fucomi
pushf
jbe
cld
xor
xor
dec
xchg
and
outsl
repnz
jnp
xor
stos
mov
mov
cmc
mov
jae
xlat
daa
adc
add
pop
xchg
adc
call
rorb
test
dec
push
cmp
jae
out
mov
mov
loopne
sub
outsb
hlt
mov
sbb
je
leave
pusha
nop
xor
pop
hlt
cmp
add
js
jecxz
into
popa
or
and
subl
xlat
xor
and
cmp
data16
fcomps
loop
sub
fdivrp
sbb
repnz
xchg
mov
test
add
cmc
jle
daa
or
dec
xchg
xchg
mov
ret
mov
idivl
aas
mov
xor
popa
mov
mov
fs
mov
push
aad
mov
out
jno
xor
push
mov
movsl
movsb
sbb
fisubs
inc
aam
test
shlb
jbe
insl
mov
out
and
dec
mov
push
add
pop
hlt
leave
sub
rcr
push
out
mov
push
jmp
mov
stc
jle
cmpl
mov
mov
or
xchg
scas
pop
inc
mov
cmp
addr16
pusha
mov
inc
cwtl
fldt
pushf
lret
sub
cmp
xchg
cltd
mov
push
pop
in
fnstsw
cltd
popa
xchg
arpl
lods
sbb
and
inc
sbb
cmpsl
fidivs
dec
or
pop
imul
cmp
shrb
jnp
stos
dec
loopne
scas
sbb
dec
insl
stos
inc
lahf
hlt
jbe
adc
push
cmpsb
mov
pop
cmp
xor
jns
imull
adc
sbbb
pop
pop
hlt
mov
push
jnp
insb
imul
pop
sbb
sbb
pop
sub
aam
cwtl
xor
sbbb
cmp
sbb
lcall
jae
add
stos
xor
xor
xor
imul
or
roll
sahf
push
mov
das
add
push
or
jo
outsl
mov
nop
jmp
or
scas
cmp
or
rclb
sub
icebp
test
xor
dec
inc
fidivrl
out
sbb
into
sbb
add
adc
mov
insb
push
push
pushf
test
and
mov
cmpsl
sbb
jmp
push
sbb
movsl
repnz
je
outsb
xchg
xchg
mov
and
andl
and
jbe
cwtl
adc
das
loope
xchg
xor
and
adc
adc
mov
sbb
and
add
stos
mov
mov
dec
data16
sbb
aad
sub
jp
dec
loope
rol
loope
and
insb
dec
cmp
lahf
imul
pop
rcrb
sub
xor
and
sbb
pusha
cmp
int
add
push
ljmp
out
std
insl
lds
mov
push
fldt
mov
mov
pop
les
mov
lock
repz
jl
jmp
xchg
mov
adc
pushf
mov
bound
sub
lea
in
stos
push
xor
int3
adc
inc
call
rol
adc
in
loope
rcr
rol
pop
add
andb
in
into
lret
push
pop
lds
iret
and
xchg
pop
mov
daa
adc
inc
sbb
popf
adc
mov
pusha
icebp
cmp
push
adc
subb
insl
jnp
inc
loopne
sbb
maxps
or
cli
mov
push
jmp
add
and
fs
dec
test
cmp
stos
inc
adc
sbb
ds
and
imul
enter
jo
sub
cmc
push
ret
hlt
imul
call
dec
jmp
or
subb
les
fbstp
aad
sbb
jae
jb
inc
inc
lea
mov
push
into
test
test
not
mov
aas
jle
sub
sbb
sbb
xor
sti
inc
ret
cltd
xchg
mov
ret
mov
out
sub
jmp
rcl
cmp
pusha
dec
test
movsl
out
inc
fdivrl
xor
shr
lods
in
jns
jge
xor
fs
jne
daa
cmp
mov
adc
mov
dec
roll
pop
mov
int
xor
lods
xchg
je
roll
scas
and
pop
fstl
cltd
inc
jnp
loopne
push
out
cmpsb
test
jge
aad
add
sbb
jmp
mov
mov
xlat
fcmovu
xor
mov
ss
lfs
mov
push
std
inc
xchg
xor
or
push
xchg
sti
sub
aaa
lahf
lret
push
pop
das
insb
pop
and
shlb
push
sti
scas
xor
in
std
jno
lods
jge
mov
add
jo
nop
imul
std
pop
outsl
jge
and
jnp
add
popf
sbb
jo
mov
xchg
test
out
test
or
aad
xor
andl
or
roll
out
mov
and
or
insb
aas
test
into
dec
pop
add
xchg
and
jecxz
ljmp
loopne
loope
sub
clc
add
sarb
ds
in
pop
push
jle
dec
mov
push
movsl
pop
lock
fisubrs
in
jmp
out
cmp
sbb
xchg
dec
push
cmp
adc
add
push
mov
jl
add
aam
push
push
dec
push
les
mov
adc
sbb
sbb
sbbl
outsb
push
xor
mov
mov
sbb
fidivs
jp
int
test
nop
data16
in
mov
fwait
addr16
in
pop
mov
push
adc
push
scas
daa
jl
aam
sbb
cmpsb
jno
sbb
cmp
inc
popf
scas
jbe
out
xchg
repnz
fadd
dec
mov
test
aad
xchg
adc
mov
sahf
sub
dec
dec
dec
adcl
popf
popa
in
test
jl
mov
mov
js
hlt
test
inc
sbbb
mov
fs
cli
ja
adc
aas
cmp
sbb
jge
pop
hlt
mov
jnp
push
add
addb
push
push
fcmovbe
mov
fxam
or
flds
repnz
or
adc
pop
mov
or
push
pop
inc
inc
outsl
iret
cmpsb
sbb
inc
jnp
jb
push
int
in
imul
inc
cld
mov
or
mov
sub
lds
hlt
dec
mov
jbe
out
push
movsl
dec
cmc
mov
js
lods
sub
push
or
pop
setle
lea
in
xor
psadbw
xorl
imul
pop
adc
je
mov
ds
outsl
xor
mov
cmp
push
scas
or
pop
push
xor
mov
sbb
incl
sbb
inc
inc
xlat
ja
and
or
out
mov
inc
stc
mov
sub
test
divl
in
icebp
rclb
aad
pop
dec
jns
outsb
stos
insl
push
and
stc
mov
push
loop
mov
cmc
aam
push
sub
cmc
jl
cli
cli
inc
add
andl
inc
push
popa
in
imul
adc
adc
xlat
jbe
sbb
dec
pop
inc
and
shl
xchg
mov
mov
and
es
push
xor
stos
fcmovu
popf
adc
xchg
daa
sub
das
push
scas
inc
dec
push
shll
push
in
jecxz
jl
lcall
mov
std
es
fiadds
push
mov
inc
aaa
in
outsb
push
cmpsl
mov
das
in
enter
and
cli
insb
xchg
mov
xor
int3
out
and
lods
cmp
test
das
pop
adc
ficompl
ja
push
lcall
movsb
mov
adc
test
in
mov
shrb
cmp
sub
ljmp
lock
or
imul
mov
adc
in
and
xchg
test
rcrb
scas
inc
inc
sahf
roll
push
nop
pop
loop
jae
sub
xchg
call
cmp
test
pusha
mov
cli
js
inc
pop
cli
test
fst
aaa
dec
jle
pushf
popa
jecxz
cmp
push
cwtl
xor
pop
xor
inc
sbb
inc
push
add
cmp
leave
mulb
sbb
xchg
jbe
shrl
insb
movsl
test
mov
push
ret
or
lds
movsb
push
movsl
push
stos
inc
sub
xchg
xlat
xor
cmp
mov
scas
mov
fstl
sbbb
je
xchg
pop
cmp
test
sahf
pop
push
repz
xchg
xchg
mov
test
push
lock
jge
mov
and
inc
jno
mov
incl
shll
push
das
out
mov
mov
xchg
mov
sub
gs
xchg
sub
outsl
xchg
in
inc
sub
cwtl
adc
adc
js
xor
loop
sbb
adc
ja
dec
xor
lea
or
je
loop
pusha
adc
sti
xchg
mov
ret
rep
pop
adc
sub
xchg
pop
or
nop
mov
sub
and
das
mov
mov
mov
ds
lahf
ss
adc
pop
push
xor
insb
fstl
mov
jno
push
es
fiadds
pop
fdivl
enter
pop
push
mov
out
push
adc
mov
push
les
nop
dec
loope
dec
push
fstps
add
je
jge
test
add
loop
xor
add
sub
xchg
add
cmp
push
popf
jb
fistl
decb
test
dec
mov
fadd
clc
adc
test
sbb
das
shl
popf
xor
orb
or
push
arpl
lret
cmp
out
mov
hlt
xor
lods
push
rcrl
xorl
es
daa
or
movsb
xor
mov
mov
hlt
aas
dec
in
xchg
jl
cwtl
insb
xorb
lcall
pop
sbb
mov
mov
sub
jae
rol
jle
cmp
pop
or
cmp
cld
xchg
pop
cltd
lock
mov
dec
push
pop
aam
popa
outsb
and
rorl
ja
mov
sbb
lcall
in
insb
divl
lahf
add
and
cld
movntps
in
push
scas
adcb
add
out
inc
cld
and
xchg
movsb
dec
inc
bound
pop
icebp
jbe
stos
into
and
xor
repnz
xchg
jno
sub
inc
cmp
inc
loop
lret
push
pop
cli
cmp
cmc
loope
cmovae
pushf
fdivrl
xchg
inc
push
cmp
pop
lock
jnp
ds
adc
pop
cmp
mov
add
mov
test
setns
jbe
les
adcl
pushf
add
sub
inc
inc
xorl
pop
mov
loopne
xchg
sbb
sbb
ss
in
add
inc
rcl
repnz
inc
dec
jb
pop
lock
sub
add
js
cmp
lds
lret
jo
and
clc
xor
xor
and
sti
dec
xchg
xchg
add
scas
icebp
adc
ret
out
outsb
pop
mov
fstps
incb
mov
into
insl
add
sbb
mov
xchg
sbb
dec
add
fisubs
lds
clc
stc
cmpsl
sbb
sub
jle
scas
push
js
fistps
sbb
pop
dec
fimuls
fldenv
or
or
cmp
repz
xchg
call
in
lcall
dec
movsl
insl
and
inc
xchg
jnp
mov
lsl
mov
sub
mov
arpl
std
shrl
mov
push
add
or
xchg
dec
insb
aad
cmp
push
mov
in
out
push
jns
sti
cmp
out
in
shrb
and
fisubrl
mov
test
lea
adc
scas
xchg
adc
repnz
xor
sbb
iret
fildl
jmp
cmp
popf
or
inc
sub
icebp
or
push
push
repz
fisubl
cltd
inc
in
and
mov
pushf
and
pop
addr16
lret
mov
push
cmpps
lahf
rclb
xchg
and
dec
dec
pop
je
nop
outsb
vpavgw
mov
mov
out
xchg
add
sbb
pop
ljmp
mov
pop
je
ljmp
push
into
pop
inc
push
sti
xor
sbb
int
jno
test
stos
sbb
mov
dec
mov
dec
dec
std
xor
mov
inc
gs
cld
push
popf
stos
cmp
dec
imul
adc
inc
mov
imul
xchg
dec
mov
out
mov
inc
fcomps
adc
and
push
jo
and
stos
inc
add
hlt
adc
leave
sub
pop
jecxz
adc
into
mov
and
adc
xchg
outsb
mov
ss
lods
cmpsl
imul
mov
pop
kmovw
dec
xchg
ss
sbb
fucom
cmpsl
test
ja
shlb
fwait
sub
lret
inc
loop
cli
stos
push
push
and
lock
mov
je
pop
jle
push
mov
stos
mov
inc
jg
stos
cmp
sti
adc
ret
and
adc
jle
pop
cmp
xor
js
repnz
and
dec
ljmp
int3
lret
int
jnp
mov
stc
lds
ja
mov
adc
xchg
jl
and
mov
fldcw
push
cmovge
cmpb
mov
cmp
push
outsb
sub
lahf
mov
iret
test
mov
mov
xchg
fidivs
add
cmp
adc
stos
push
cmp
out
mov
sub
sub
jl
test
sbb
mov
jb
xor
cmpsb
push
xor
cld
ljmp
and
sub
shlb
stos
mov
ret
xor
mov
jle
mov
shlb
jge
in
add
lock
rcl
pop
cli
adc
jl
in
outsl
ret
sbb
cmp
ret
shll
jnp
mov
sub
jno
pop
or
push
xchg
sub
or
dec
inc
sbb
lret
dec
aas
loop
into
xchg
jle
adc
pop
gs
push
sub
pop
mov
mov
mov
jae
adc
test
push
out
pop
adcl
dec
cmc
adc
mov
pop
fildll
mov
cld
xlat
pop
insb
cmp
xchg
scas
jb
test
cmp
fimuls
sub
jp
pop
dec
stc
inc
shll
dec
pop
sti
dec
shr
xchg
mov
xchg
enter
pop
pop
cmc
inc
jge
xchg
push
repnz
mov
push
repz
push
divl
jb
lcall
jp
mov
mov
xor
cmc
ret
mov
adc
lahf
mov
vmovupd
jnp
push
and
int3
aad
jmp
mov
adc
cmp
divb
rcrl
daa
lcall
push
or
or
jmp
gs
sbb
jns
inc
push
cwtl
lock
push
sbb
jecxz
mov
jecxz
sub
pop
popf
push
dec
mov
negl
hlt
jo
push
sub
mov
xchg
cmp
imul
jmp
adc
out
inc
inc
jo
xor
mov
ficoml
addr16
iret
cld
mov
adc
dec
jecxz
call
push
test
insb
mov
jno
cmp
push
xchg
out
stos
inc
outsl
pusha
mov
cmp
xor
popa
or
cmp
and
dec
inc
movsl
icebp
pop
mov
mov
sbb
pop
rcrb
sbb
lea
jmp
ljmp
gs
cmpsb
scas
xchg
mov
sbb
jp
cmp
mov
jle
or
pushf
dec
adc
xchg
dec
xor
stos
es
add
mov
add
mov
cmp
inc
scas
aaa
jbe
pushfw
xor
ds
lods
outsl
xor
test
scas
out
cli
xchg
xor
fldpi
push
sbb
push
fs
gs
inc
loop
xchg
sub
cmp
idivl
daa
mov
icebp
add
mov
ret
and
outsb
fnstcw
fidivrs
scas
stos
xchg
insl
ja
pusha
sub
adc
jp
mov
cmpsb
push
pusha
mov
stos
push
outsb
aad
pop
outsl
pop
out
add
mov
inc
imul
mov
cmp
inc
fcompl
fnstcw
dec
push
arpl
out
dec
in
in
xchg
mov
pop
cmpsl
push
insl
mov
fwait
aam
sbb
jne
pop
repnz
js
ds
sub
push
jp
add
dec
shl
test
push
push
sahf
arpl
dec
jno
mov
push
sbb
mov
adc
jae
xchg
mov
xchg
push
in
jns
je
mov
and
lea
fbld
das
fs
xor
mov
ljmp
fnstenv
stos
ds
push
jl
fistps
movsb
sti
not
cmp
mov
mov
sub
shl
out
pop
dec
jae
hlt
jl
dec
sub
jb
pop
nop
dec
dec
into
lcall
inc
push
cmp
cmpsl
cmp
aad
or
out
cmp
sub
cs
pop
mov
inc
popf
inc
xchg
fadd
pop
mov
loop
add
xorb
insb
aas
orl
mov
adc
dec
flds
push
push
ja
xchg
pop
pop
pop
mov
add
xor
outsl
sar
xor
push
out
add
cmc
mov
push
dec
das
orl
sbb
mov
pop
pop
xchg
push
stos
cmp
cwtl
das
daa
incb
dec
dec
dec
jns
mov
and
xchg
sti
cmp
aaa
mov
mov
inc
test
aam
xchg
sbb
ficoms
xchg
dec
cmp
jae
insl
sbb
lds
loopne
rcrb
xchg
jno
movsl
daa
ret
push
fxch
repnz
scas
std
clc
cs
pushf
push
add
jle
and
cmp
mov
ret
pop
mov
scas
or
std
mov
pop
stos
aas
sarl
pop
lock
or
and
test
ja
jp
mov
in
call
test
push
mov
xor
jno
lcall
push
leave
test
cmp
lcall
or
iret
xchg
daa
push
or
mov
movsb
jmp
leave
dec
mov
xchg
xchg
dec
fs
mov
test
outsb
mov
fdivl
lds
sbb
push
or
sbb
jmp
insb
xor
push
test
lcall
pop
test
call
and
rorl
xor
push
xchg
data16
add
lcall
dec
in
out
sub
sub
hlt
adc
pop
inc
adc
xor
int
lods
sbb
pushl
ds
sbb
dec
bound
adc
cmp
push
dec
fidivl
stc
push
test
sarb
cs
loope
cli
mov
clc
push
ss
lahf
sub
xor
dec
loopne
jmp
push
popf
jg
sbb
and
mov
sub
ljmp
inc
mov
cltd
sti
in
inc
adc
sub
in
fs
jmp
dec
mov
mov
ret
xchg
push
mov
jnp
add
lods
adc
jnp
dec
jle
sbb
pop
bnd
mov
xchg
fstpl
dec
ds
mov
jmp
mov
stos
test
test
mov
inc
xchg
mov
scas
shr
sbb
jo
cltd
xor
iret
gs
sub
jge
sbb
xchg
ret
mov
ret
in
pop
or
shrl
mov
add
sbb
pop
sub
jb
scas
and
enter
pop
sbb
mov
cltd
push
outsl
adc
pop
sbbl
sahf
sahf
sbb
out
repnz
mov
jbe
mov
inc
or
sub
sub
push
loope
cmp
pushw
jl
push
outsl
cltd
je
test
sahf
pop
jg
test
clc
sbb
scas
jg
out
inc
cmp
add
loopne
js
or
push
roll
ljmp
out
sbb
rol
xchg
into
test
add
mov
adc
pop
out
mov
ja
imul
sbb
nop
mov
mov
test
push
decl
js
jge
xor
sub
or
mov
lcall
gs
imull
bt
sbb
pushf
mov
pop
xor
aad
lds
jns
mov
dec
repz
push
jae
nop
stos
aas
into
and
movsb
push
sub
pop
sti
xor
sub
cmpsl
and
jp
sub
outsl
pop
mov
dec
cwtl
jbe
ss
out
mov
and
aam
imul
sahf
xlat
outsb
sarl
jmp
popa
loope
je
inc
ljmp
test
gs
mov
push
xchg
test
or
lock
cs
ficomps
pop
jecxz
adc
int3
cli
adc
leave
and
clc
sub
sbb
xchg
jo
pop
xchg
add
sub
ret
pop
imul
cmpsl
inc
mov
dec
xor
scas
inc
mov
and
mov
in
insb
aam
cmp
je
icebp
hlt
add
ljmp
jne
push
repnz
add
call
xor
lds
mov
xor
mov
lcall
lods
jl
push
dec
shrb
cltd
jo
in
xor
mov
sbb
repz
xchg
mov
ret
adc
fiaddl
and
mov
rcr
or
int
sbb
dec
fistps
and
xchg
mov
cmp
int3
pop
test
and
aad
lea
mov
in
pop
ficoml
filds
xchg
addl
cmp
pop
cmp
loop
in
testl
mov
js
fldcw
lahf
popf
adc
repz
gs
or
inc
xchg
dec
arpl
mov
or
decb
mov
jmp
jmp
mov
xorb
adc
mov
adc
test
or
mov
mov
push
lds
pop
faddl
add
cmpsl
push
cmpsl
inc
aaa
dec
xor
sarl
and
movl
std
cmp
aad
stos
ret
xor
sub
sbb
jns
xor
icebp
out
push
and
shlb
pop
stos
roll
jl
arpl
lahf
repz
cmp
out
div
sti
dec
lods
sbb
cmp
cmp
cmp
sbb
fdivr
dec
in
negl
pusha
ss
mov
mov
push
cmc
loope
test
mov
add
lahf
in
sub
rorl
jno
jmp
imul
sub
mov
xchg
orl
stc
test
pop
jecxz
add
mov
pushf
pop
rcr
sub
xchg
subl
ret
aas
or
mov
dec
loope
push
mov
cltd
lret
jne
ja
test
sbb
loop
out
sbb
push
pop
dec
sbb
test
dec
loopne
push
addr16
cwtl
aas
push
in
xchg
ss
jmp
scas
test
mov
outsb
push
call
jge
cmc
mov
pop
or
aas
subl
pop
pop
sbb
shlb
sub
das
cmp
dec
int3
arpl
dec
inc
lds
jmp
and
xchg
cltd
je
xor
insb
jg
pusha
arpl
mov
into
pop
leave
js
test
les
jp
xor
jl
and
mov
sub
or
loopne
sub
loop
js
in
pop
cmp
inc
pop
mov
daa
lods
add
mov
cmp
icebp
xorb
mov
mov
lret
shl
ret
adc
push
pop
or
data16
fnstenv
adc
inc
push
mov
cmp
ret
es
shrb
imul
jmp
ret
jb
in
lahf
outsb
mov
xchg
push
mov
fidivl
xlat
pop
insb
mov
mov
and
and
icebp
mov
inc
adc
cmp
push
sub
mov
into
xlat
outsb
add
cmc
add
sub
mov
cmp
mov
push
add
mov
rclb
sub
in
addb
mov
dec
sub
mov
pop
mov
and
call
ror
dec
add
daa
shr
pop
in
mov
push
jp
inc
nop
mov
push
in
enter
push
xchg
pop
adc
xchg
rorl
pop
repz
outsl
div
mov
xchg
lock
cld
push
xchg
jmp
mov
leave
and
sbb
mov
movsl
clc
insl
loope
loopne
jnp
ret
lock
in
popa
inc
adc
jne
xor
call
or
pop
inc
pop
push
cmp
imul
inc
mov
push
sub
lret
jb
in
aas
pop
pop
adc
cmp
fidivrl
scas
mov
mov
pop
cmpps
xchg
sub
das
int
aam
add
lret
aad
cli
rclb
repnz
and
mov
testb
cs
mov
sbb
jp
inc
lods
xlat
lahf
ja
dec
lret
xchg
cmc
add
aas
push
ja
cmpb
xor
loopne
ret
cmp
jns
cmpsl
repz
sahf
insl
test
lock
pop
lods
adcl
add
xchg
scas
cs
jge
ds
xchg
dec
lods
adc
test
xchg
int
mov
outsb
fxam
dec
das
cmp
xor
inc
lods
inc
js
cmpsb
out
test
sbb
push
ss
inc
adc
ficoms
lcall
rclb
out
inc
and
insb
xchg
mov
addr16
test
sbb
mov
dec
sub
adc
loope
xlat
dec
popf
push
insb
test
mov
sbb
cmp
sub
aad
das
dec
sahf
cmp
pop
cmp
pop
dec
mov
push
xlat
sub
daa
lret
enter
inc
outsb
stos
inc
mov
inc
leave
jb
push
shlb
es
jl
pop
scas
mov
in
xchg
push
insl
stc
inc
call
add
mov
pop
and
pop
xchg
data16
scas
inc
fwait
out
clc
push
aas
int3
mov
xor
out
xorl
push
jg
out
int
cmp
dec
in
push
jmp
push
daa
jnp
pop
adc
psllq
mov
jns
mov
mov
dec
out
jp
ret
call
int
jo
popf
inc
inc
inc
fstpt
dec
lret
stc
andb
out
out
hlt
mov
pop
ret
mov
push
enter
inc
mov
std
sbb
mov
dec
outsb
idiv
sub
mov
and
out
jecxz
cmp
push
cmp
ret
orl
outsb
add
lods
or
mov
scas
mov
sbb
or
xchg
jge
sbb
xchg
mov
xchg
sbb
jmp
jns
mov
cmp
loop
fdivl
mov
insl
mov
add
xor
adc
hlt
jge
push
or
pop
pop
enter
sub
inc
or
ljmp
push
lcall
js
cmpsb
rcrb
mov
push
js
adc
cwtl
stos
and
lret
mov
adc
fcomps
pop
and
cli
dec
adc
jo
loop
mov
cmp
lcall
xor
cmp
push
fwait
je
mov
ljmp
call
and
dec
iret
loop
add
mov
mov
vmovdqa
js
fistl
mov
and
sbb
adc
nop
sbbb
cli
out
jle
jmp
sbb
xor
out
hlt
pushf
pop
adc
mov
jnp
insb
std
stc
mov
rolb
xlat
adcb
pop
lret
insl
lret
outsl
lahf
cmp
shlb
cmpsb
cmp
jge
lock
and
das
cmp
je
adc
into
test
shlb
ficompl
lret
pop
insb
sub
cwtl
mov
addr16
inc
cmpsb
push
add
jns
int3
xchg
sub
test
push
out
shrl
nop
mov
pop
ja
cmp
mov
lds
pop
rol
loop
rcll
enter
inc
pop
mov
cmpsl
push
xchg
stos
dec
dec
xchg
or
mov
addb
push
push
xlat
xchg
pop
popl
stos
inc
xchg
pop
sub
sbb
jns,pn
iret
sub
mov
dec
stos
xchg
clc
push
ljmp
out
jp
filds
sbb
dec
jne
jle
js
jbe
mov
dec
xchg
xor
lods
stos
push
xlat
mov
fistpl
mov
lock
sub
inc
loope
jbe
dec
rorb
adc
cmp
shld
jg
movsb
gs
shll
cmp
mov
add
sub
xchg
dec
push
pop
jmp
inc
pop
jmp
cli
popa
push
sbb
outsb
push
mov
inc
mov
sbb
loope
fucomi
dec
leave
push
jg
jl
test
ret
jnp
push
in
test
arpl
outsb
mov
std
inc
int
push
test
mov
test
lods
push
fistpll
sahf
dec
into
loop
add
add
mov
adc
mov
outsb
fcmovu
call
shll
cmp
xor
imul
mov
ds
sub
fwait
imul
fdivrl
cli
xor
jecxz
fdivrl
mov
idivb
stc
mov
rclb
push
or
in
out
push
sub
fstl
dec
stos
leave
scas
aam
sub
inc
dec
jl
adc
lods
and
push
stc
jl
scas
jae
ds
pushf
and
mov
xor
mov
stos
mov
xchg
xchg
inc
sahf
dec
repnz
stc
push
cmp
in
sahf
cmc
mov
int3
lcall
stc
fs
or
adc
xor
inc
mov
jp
ss
adc
stc
leave
aas
jg
mov
nop
mov
push
and
out
js
push
cmp
aas
in
inc
data16
xor
or
mov
sub
pop
xorb
xor
lock
xor
out
jno
jno
mov
mov
mov
inc
test
in
xchg
js
cmc
pop
mov
sbb
nop
and
test
mov
fs
adc
mov
mov
in
mov
int
inc
inc
sahf
cs
in
add
xchg
out
add
stos
or
cmpsl
xor
out
call
testl
pop
cs
jle
rclb
fwait
pop
ss
fwait
out
int
mov
aad
dec
nop
adc
xchg
out
sub
movl
pop
adc
insb
shr
repnz
mov
mov
sub
shl
sub
idivb
cmp
aad
inc
push
fisttps
imul
in
pusha
push
xchg
lret
xorl
add
cmp
inc
inc
cmc
mov
and
adc
jle
xchg
jo
ficompl
movl
mov
xorb
sub
andl
imul
and
test
xchg
mov
cmpsl
sbb
pop
mov
dec
jecxz
sub
lods
pusha
out
add
inc
pop
push
mov
shll
iret
adc
mov
in
mov
mov
cmp
out
shll
andb
aaa
leave
inc
add
inc
pop
lahf
fs
jae
sbbl
xchg
stc
ret
xor
xor
xchg
scas
push
int3
lret
xor
sbb
add
mov
adc
xor
test
mov
pusha
push
insl
mov
pop
in
or
mov
add
out
cmp
push
sahf
jno
movsl
enter
faddl
fwait
imul
jno
cwtl
jae
push
adc
dec
or
dec
dec
mov
aas
pop
pushf
daa
inc
sahf
repnz
dec
mov
inc
inc
xlat
shr
lds
out
jo
mov
scas
and
pop
mov
fcmove
sbb
andl
sti
or
inc
fldenv
stos
and
mov
xchg
xchg
xchg
fistl
out
push
lcall
cwtl
xor
dec
lahf
pop
ret
data16
loop
shld
insb
dec
adc
dec
xchg
xor
clc
sbb
mov
nop
xor
das
inc
add
daa
cmp
sarb
mov
inc
push
pop
aas
ss
cmp
pop
sub
dec
out
or
in
stos
xlat
mov
push
dec
pop
fisubrl
aam
and
inc
movsb
stc
inc
fadd
jl
mov
imulb
mov
imul
cmpb
add
inc
mov
mov
or
sarb
sbb
shlb
insb
jl
sahf
dec
adcb
andb
jmp
adc
iret
and
andl
mov
mov
or
cs
cmp
out
dec
cmp
pop
fmull
sarl
inc
pop
xchg
aam
pop
and
loopne
inc
adc
sbb
dec
cmpsb
cmp
aam
push
decb
test
cmpsb
xchg
mov
push
pop
fbld
jg
jns
fildl
cwtl
scas
fld1
mov
test
xlat
jl
xchg
stos
push
popf
pop
je
inc
int
stos
std
iret
mov
cmp
push
mov
adc
sub
sub
js
xlat
test
inc
pop
and
insb
or
mov
jge
in
jl
xchg
add
into
pop
int
mov
cmp
pop
jmp
pusha
jecxz
sbb
stos
mov
loop
and
or
or
shlb
pop
cmpsb
out
sahf
es
sbb
xor
dec
shl
jecxz
cmp
sti
push
xlat
lea
mov
pop
adc
pusha
or
cmp
fwait
cmpl
mov
adc
shlb
push
imul
pop
test
shll
push
pop
pusha
gs
sbb
clc
sub
imul
out
out
add
cmpsl
jnp
in
loope
mov
and
or
mov
jge
repz
inc
incb
and
js
popa
jno
into
ljmp
test
sub
xchg
inc
popf
pop
sub
lret
int
push
sti
aaa
inc
out
dec
or
mov
stos
cmp
lds
push
outsl
add
xchg
loopne
sahf
fmull
int
jae
or
sub
popa
lds
repz
mov
pushf
or
and
loopne
push
nop
fsubl
outsb
sub
mov
aas
repnz
insb
aam
sahf
cmp
cmpl
inc
fimuls
int3
and
pop
sub
xchg
andb
lcall
sarb
aaa
pop
insb
icebp
in
inc
push
xchg
popa
nop
add
sarb
and
or
fucomi
mov
sub
repz
push
push
mov
aaa
es
sbb
adc
rolb
push
mov
cs
enter
mov
insb
jae
xor
movsb
stos
cmp
test
stos
xchg
mov
xor
jmp
cmpsl
add
mov
mov
or
cmpsl
fstl
and
add
mull
arpl
xchg
inc
mov
pop
push
dec
pop
test
adc
je
in
test
pop
mov
sub
shlb
jne
mov
push
and
push
dec
into
enter
cwtl
and
pushf
stc
aas
dec
jle
loope
and
xchg
add
stos
inc
pop
sub
gs
mov
xchg
dec
repnz
sub
sub
jne
pop
ljmp
sbb
cld
lcall
in
test
leave
adc
xchg
aas
adc
pop
loope
nop
xorl
pop
sub
in
dec
fisubrl
sahf
push
push
dec
popa
sbb
jbe
push
pop
outsb
cmp
xchg
push
mov
push
mov
jns
cmpsb
or
sahf
mov
addr16
sub
pop
inc
mov
sbb
push
je
aam
or
xchg
in
pop
sbb
inc
cmpsl
sub
and
shlb
xor
hlt
adc
gs
pop
ds
ret
lds
mov
data16
jb
test
xchg
mov
aad
inc
sahf
mov
icebp
iret
sub
pop
mov
jg
daa
mov
cmp
aaa
outsb
stos
in
lahf
cwtl
dec
icebp
cwtl
mov
mov
faddl
std
insl
aam
mov
in
xor
add
jno
test
jnp
lds
stos
in
cmc
push
rcrl
stos
orb
rclb
adc
movsl
pop
jle
cmpsl
mov
or
clc
cmpsl
stc
adc
xchg
cmp
dec
daa
xchg
sbb
inc
push
jae
in
inc
out
vminpd
or
shll
iret
test
fadds
jge
fsts
ror
call
dec
sub
or
xchg
adc
inc
repnz
inc
and
or
cs
call
dec
dec
pop
mov
mov
loope
mov
push
dec
or
shrl
jmp
jbe
xchg
cmp
cltd
addr16
lret
fadd
mov
fisubs
cmp
mov
push
movsl
xchg
push
xchg
js
sbb
jmp
out
loop,pt
arpl
cli
mov
mov
or
xorb
mov
mov
jns
jne
stos
pop
scas
test
xor
inc
rcrl
inc
or
adc
or
and
int
mov
push
aas
adcl
je
lret
mov
push
gs
cmpsl
mov
adc
mov
fnstcw
int
stc
cli
cld
xchg
lock
into
jb
push
lock
mov
mov
fstpl
adc
fmull
orb
pop
gs
pop
in
dec
adc
addr16
lea
mov
jge
inc
scas
push
fs
pop
adc
data16
cmpsb
in
add
and
and
in
jl
mov
sbb
add
dec
mov
push
addb
fwait
cmpsl
lea
xchg
fdiv
dec
call
fisubl
inc
add
cmp
arpl
add
xchg
mov
ret
xor
jecxz
xchg
aad
dec
dec
pop
mov
bound
lcall
jns
sub
int
pop
scas
repz
gs
mov
fs
push
push
repnz
add
lret
mov
or
and
ret
xor
rcr
add
jae
cld
sub
out
and
pushf
inc
add
pop
mov
mov
addb
xchg
mov
clc
ret
adcb
sbbl
pusha
pop
jbe
int3
inc
fsubr
mov
cmp
or
jne
call
xor
mov
ret
jb
popf
jg
mov
cmc
mov
jbe
adc
aad
xor
mov
daa
leave
cmp
mov
cmp
xchg
popa
xor
push
sbb
mov
popf
pop
sahf
push
into
fwait
mov
mov
int3
arpl
mov
push
fcmove
jno
insb
jb
and
or
mov
int3
xor
gs
or
inc
aad
push
ss
addb
sub
nop
push
inc
mov
and
rcll
mov
dec
hlt
dec
mov
mov
loopne
pushf
mov
mov
and
popa
push
mov
das
add
jns
insl
sahf
jg
push
xchg
movsl
lock
js
dec
push
enter
ror
cltd
test
jno
jmp
xchg
mov
mov
mov
outsl
js
mov
jb
movsb
pop
pop
or
rorl
mov
sub
mov
fsubrs
outsb
inc
lods
mov
rol
pop
xchg
sub
outsl
shrl
out
lea
popa
add
jmp
leave
dec
and
shl
das
and
into
adc
mov
mov
rcr
add
int
inc
rorl
fwait
mov
nopl
shl
int
cli
pop
cmp
ss
ljmp
xchg
xchg
pop
ret
sahf
fsubs
in
cmpsl
mov
cltd
mov
and
jno
sbb
pusha
iret
push
mov
rcrl
lcall
loope
rclb
adc
xchg
xchg
sbb
inc
dec
mov
xor
jne
imul
sub
cmp
mov
fmuls
jne
test
add
ja
les
mov
lahf
cmp
int3
arpl
and
jl
into
popf
xor
dec
push
std
jae
sub
sbb
sbb
or
mov
stos
adc
sbb
xlat
dec
or
ret
jle
lods
aam
or
shll
cmp
mov
call
fwait
xor
cmp
in
nop
in
rclb
pop
lcall
pushf
gs
lods
fs
sbb
sub
lea
pop
adc
mov
test
xchg
or
pop
cmc
ja
rcrl
xchg
xor
nop
vpextrw
lds
test
xchg
call
push
sub
scas
jb
stos
cld
mov
data16
pop
adc
cli
cmp
jno
clc
sahf
dec
sbb
mov
jl
inc
mov
push
sti
xor
jl
popf
push
lods
push
cld
call
push
cltd
sbb
dec
adc
mov
mov
mov
fistpl
out
popa
ret
sbb
loope
ja
leave
lods
icebp
jge
mov
ljmp
pop
sub
ss
aam
in
lcall
push
push
adc
mov
adc
add
jne
icebp
dec
dec
dec
jle
sbbb
loope
div
loopne
sub
mov
pop
andps
cmc
shl
aam
or
cmpsl
rcrb
and
in
sti
inc
push
je
scas
inc
fdivl
shll
in
pop
and
sub
mov
cwtl
jecxz
popa
nop
inc
xchg
shrl
fsubrs
nop
aaa
or
ret
nop
subb
push
xor
scas
dec
fldenv
xchg
incb
adc
mov
out
cltd
cmp
pusha
into
lds
mov
adc
nop
pushf
mov
add
adc
out
sbb
inc
out
call
jle
cmpsb
inc
lods
mov
jge
sub
adcl
push
inc
fdivrp
mov
mov
outsb
ljmp
mov
fisubs
add
fildll
and
andl
ja
fcoms
or
cld
jb
shl
mov
cltd
stc
nop
lret
mov
es
cmpb
push
inc
or
nop
shlb
insl
pusha
adcl
pop
or
mov
fwait
adc
cltd
test
adc
xor
push
std
aas
lret
xor
add
into
gs
pop
jmp
add
mov
cmp
stos
andb
movsl
cmp
jecxz
mov
sub
outsb
jl
push
imul
jle
jmp
lret
lods
cmc
in
jbe
inc
sub
lods
xchg
gs
jle
and
clc
iret
xchg
and
cmpsl
cmp
sbbb
shll
stc
cmpb
jne
pop
xchg
imul
jp
repnz
pop
loope
fstl
push
test
push
push
pushaw
or
or
or
inc
ljmp
inc
lret
mov
paddusw
fmull
jno
and
scas
stos
add
in
pop
mov
aad
movsb
mov
fcomps
aam
fisubl
jnp
sbb
test
xchg
cli
cmpsb
dec
mov
xchg
inc
mov
repnz
xchg
mov
mov
stc
repz
sbb
adc
std
xchg
loope
mov
in
pop
rorl
mov
enter
rcll
test
push
lret
sub
scas
les
insb
movsl
push
inc
mov
dec
repz
inc
mov
mov
push
push
jno
adc
cmc
jl
jmp
mov
test
push
xchg
jbe
mov
inc
mov
fldl2t
daa
scas
cmpsl
mov
xor
xor
inc
ljmp
xchg
push
and
ds
push
ja
mov
aam
loope
push
arpl
adc
ret
or
dec
xchg
stos
pop
xchg
gs
int
cmpsl
pusha
cmp
mov
xor
mov
adc
mov
imul
or
out
cmp
xor
push
sub
shl
nop
loopne
test
js
data16
push
leave
cmp
pusha
mov
rcll
sub
stos
negb
addr16
xchg
cmp
mov
push
enter
push
in
xor
add
inc
inc
xor
inc
mov
mov
push
fisubrl
fwait
adc
push
dec
loop
shlb
mov
pop
clc
pushf
add
jbe
cmp
sbb
jg
jnp
out
lock
push
loop
lcall
add
dec
adc
sahf
xchg
push
fmull
in
inc
ds
repnz
js
xchg
cmpsb
mov
nop
std
dec
sbb
jnp
mov
pop
jle
pop
rorb
shll
jecxz
clc
test
xchg
fs
adc
jbe,pn
inc
lret
or
test
sbb
dec
js
sbb
jecxz
dec
loopne
mov
cltd
dec
outsb
mov
lods
fcomps
rorl
push
call
mov
or
dec
mov
outsb
jle
dec
frndint
mov
mov
cli
and
into
mov
out
or
lock
fdivp
cmpb
out
mov
jo
loope
das
push
dec
bnd
into
shrl
push
push
je
pop
icebp
mov
pusha
test
push
inc
test
clc
and
mov
sbb
dec
repz
xlat
jle
sub
cmc
adc
cmpb
mov
push
push
mov
xor
aam
mov
mov
mov
inc
fnstsw
stc
cmp
scas
sub
add
pop
jb
fstl
popl
shlb
xchg
mov
aaa
rcll
sahf
or
inc
stos
aad
inc
and
movsb
test
ja
fistpll
cltd
mov
inc
push
add
dec
testb
jp
fnstcw
mov
outsl
push
notb
int
push
jl
dec
scas
je
jae
leave
dec
mov
outsl
add
rcll
inc
imul
pop
add
mov
shrb
pushl
inc
test
into
push
sbb
clc
or
mov
push
pushf
or
xor
popa
cmp
clc
xchg
mov
pusha
sbb
mov
mov
cmp
mov
lret
and
mov
gs
shll
or
xor
insb
inc
add
sbb
xor
andl
inc
push
test
mov
push
movsl
lds
rcl
data16
fwait
arpl
negl
adc
sub
jno
dec
mov
into
iret
aam
push
push
mov
rcl
inc
leave
loope
stos
adc
xlat
call
sub
cs
sbb
sbb
cmc
xor
aas
xlat
cmpsb
out
rcr
pop
test
pop
mov
push
jo
xchg
pop
adc
gs
mov
adc
aaa
sbb
js
pop
repnz
jge
sub
sub
icebp
xchg
loope,pn
mov
sub
hlt
jne
les
jns
or
nop
inc
test
cmc
cmp
fisttpl
and
rol
adc
mov
cmc
lret
mov
pmulhw
cld
nop
pusha
ret
mov
stos
push
push
roll
hlt
das
sahf
push
jno
cld
dec
jecxz
int3
jle
gs
push
or
cltd
test
add
filds
cmp
xchg
and
cmc
cmp
aaa
push
cmp
push
inc
push
push
fwait
pop
xor
xor
testb
rcll
and
pop
mov
ljmp
pop
lods
sub
mov
das
mov
pusha
imul
int3
ror
add
scas
and
movsb
mov
xchg
dec
rol
push
stc
mov
jbe
rclb
xchg
pop
mov
jle
call
add
fnstcw
ret
fwait
push
or
jle
dec
cmp
xchg
mov
movsl
inc
fcmovbe
sbb
je
jae
dec
movsl
xchg
xchg
inc
int
clc
mov
mov
popf
dec
sub
stos
out
test
loopne
js
sub
outsl
daa
mov
int
inc
push
aas
aad
sub
popf
pop
jb
add
int
in
inc
das
or
loop
int3
mov
lret
dec
inc
insl
test
push
ret
stos
jbe
mov
xchg
imul
das
sbb
int
bound
push
xchg
and
cltd
aas
and
mov
mov
test
mov
ret
out
xor
dec
adc
push
pop
xchg
insl
jl
shrl
mov
iret
fcmovnb
in
repnz
push
popf
adc
inc
lea
cwtl
xor
add
sbb
pop
push
pop
jle
mov
mov
test
cmp
xor
or
fisttps
xlat
cli
inc
adc
cmpsl
inc
ja
fdiv
fsubrl
lds
cld
shrl
pop
dec
adc
dec
and
lahf
add
repz
lods
fmul
aas
cmpsl
out
icebp
mov
call
sti
lahf
and
xchg
sbb
and
sub
mov
inc
inc
inc
sti
jecxz
aas
mov
cmp
sub
jno
out
mov
dec
pop
xchg
sbb
outsb
fs
lahf
or
or
sbb
mov
dec
or
jp
dec
fcompl
mov
cmpl
or
das
and
out
or
xlat
cmp
xlat
pop
sahf
or
push
cwtl
repz
push
pop
sbb
dec
out
cmp
jp
jnp
sub
and
sub
pop
mov
or
adc
test
mov
or
or
lahf
call
push
repz
mov
add
pop
adc
adc
jne
stos
stos
xchg
push
mov
js
addr16
out
scas
outsb
adc
lret
call
movsb
dec
xor
in
cmp
stc
fcoml
push
sbb
push
dec
mov
mov
jnp
imull
test
ja
cmpsl
enter
jo
ja
gs
scas
outsl
xchg
mov
lds
into
jne
add
std
or
imul
imul
dec
jnp
mov
cmp
outsb
rcrl
dec
push
mov
out
or
call
or
dec
sub
jo
cmpsl
movsl
dec
das
cmp
popf
jl
iret
lods
fnstcw
pop
ja
fsts
aaa
or
es
and
mov
push
and
ss
xor
in
ret
and
imul
lret
out
fcmove
and
cmp
pop
cmpsb
add
insb
cmpl
xor
xchg
repz
adcb
or
xchg
jno
add
sbb
inc
shrb
stc
movsl
jl
es
insb
add
rorl
pusha
sti
adc
imul
jp
sbb
stos
sbbb
cs
lds
divb
xchg
out
test
shrb
jbe
sahf
sub
ret
lods
xchg
in
xorl
ret
in
push
or
sbb
sbb
mov
jbe
jns
push
imul
xor
scas
pushf
or
adc
or
sub
pop
mov
and
sar
jle
xchg
push
sub
xchg
xchg
pop
ja
xchg
mov
sbb
js
faddl
adc
mov
xlat
pop
aaa
pusha
mull
sbb
stos
scas
ret
iret
push
inc
mov
jno
aas
aad
repz
rcll
outsb
xchg
sbb
test
push
or
adc
dec
imul
sahf
idiv
out
outsl
out
adc
hlt
icebp
rcl
stos
ret
imul
stos
dec
ret
push
sti
or
nop
loope
mov
sbb
and
lcall
cltd
mov
xlat
iret
push
icebp
sbb
repz
outsl
sub
ds
and
sbb
pop
pop
mov
or
xchg
sub
popf
lods
push
dec
sbb
jge
push
sbb
pop
push
dec
shlb
push
jp
lock
inc
enter
push
fsubs
fiadds
imul
mov
dec
mov
or
mov
mov
push
or
test
mov
mov
mov
stos
mov
lds
adcb
mov
xor
loop
ja
mov
xlat
sbb
pextrw
insb
jo
inc
shll
or
stos
jp
dec
ret
lret
pop
or
cmpsb
dec
icebp
add
xlat
repz
xchg
xchg
jns
jge
mov
clc
mov
sub
in
xor
into
pop
lss
popa
sub
scas
cwtl
mov
xchg
xor
ficomps
gs
outsl
xchg
pop
in
lea
das
pop
std
stos
out
and
inc
dec
lahf
enter
xor
jg
fimuls
fnstsw
out
outsb
dec
push
scas
pushf
dec
sbb
adc
fwait
jne
xchg
cltd
xor
pusha
add
mov
fadds
mov
adc
pop
mov
mov
mov
ret
push
mov
mov
fstpl
mov
push
mov
cmpsb
je
xchg
mov
jle
push
xchg
mov
xor
xchg
mov
or
jne
arpl
int
sbb
cmpsb
jl
in
inc
popf
sub
jle
js
sub
or
dec
and
cmp
scas
and
push
add
lret
lret
inc
out
inc
hlt
xor
jb
ds
jno
adc
mov
sub
add
xor
inc
adc
jbe
cwtl
es
add
fnstcw
sub
pusha
insb
stos
pop
fld
and
xchg
stos
fadds
dec
and
sbb
in
xor
sbb
dec
xchg
out
pop
and
into
ficoms
out
add
cmpsb
out
fcom
lret
jle
push
push
rorl
inc
sub
bnd
arpl
jne
sub
les
dec
les
mov
cmc
xchg
repz
pushf
dec
cmp
scas
clc
cmp
xchg
das
jecxz
adc
fadds
das
faddl
dec
add
cld
movsb
and
adc
sti
push
cmp
fnstenv
mov
sub
mov
and
and
cmp
outsb
les
mov
lods
ficoms
ljmp
pushf
incb
cmpsb
xor
mov
out
imul
add
lcall
push
add
lcall
dec
fsubrs
outsl
lcall
hlt
and
jne
add
sub
fsubrs
sub
jne
xorb
cmpsb
adc
fisttpl
push
jecxz
rcl
sahf
push
into
lcall
xor
add
sbb
pop
cmpl
xchg
and
push
jmp
mov
xchg
and
mov
outsb
sub
and
xchg
mulb
xchg
sub
or
jge,pt
mov
test
xchg
sub
ret
movsb
lds
loope
int
lret
add
and
outsl
mov
stos
push
xor
inc
push
mov
xor
or
xor
in
jno
ret
push
test
jmp
pop
inc
xor
xor
lock
imul
adc
xchg
sub
push
push
sbb
mov
das
fwait
pop
out
pop
xchg
push
outsl
xor
mov
pushf
push
test
out
call
jno
addb
cmc
pop
mov
push
or
int
jmp
arpl
fwait
push
xor
aad
adc
add
dec
mov
add
cmp
ficompl
test
les
insl
scas
ficomps
iret
bound
xlat
adc
inc
mov
stos
adc
sbb
mov
inc
jb
adc
popa
loopne
cmpsb
cmp
fstpl
jb
mulb
xor
dec
add
andb
lods
fs
sub
xchg
mov
jl
rcrb
outsb
cmpsl
xchg
sub
ds
push
inc
out
arpl
fucomip
pop
sub
xor
xor
fsubl
fnstenv
out
outsl
ret
lret
jbe
incl
sbb
or
push
movsl
adcb
jo
cmc
dec
jmp
mov
icebp
adc
sarb
and
jecxz
test
arpl
sbb
cli
push
xor
in
gs
mov
xor
and
fsubrs
inc
inc
gs
pop
pushf
imul
mov
imul
fnstsw
cli
jo
pop
pop
les
cmp
cmp
inc
bound
daa
scas
mov
repz
test
in
xchg
xchg
in
cltd
stc
adc
mov
insb
int3
shr
ljmp
outsl
shll
popa
mov
rolb
cmp
jecxz
push
out
pop
cmc
jecxz
pusha
cmpb
fistpl
dec
pop
in
pop
inc
dec
nop
adc
push
xchg
out
mov
fldenv
addl
cmp
adc
or
dec
inc
movsl
inc
rcrl
cmpsb
clc
jmp
dec
bound
sub
negl
dec
stc
movsl
popa
and
sub
je
orl
shll
lcall
lea
sub
or
incl
push
dec
cmp
mov
xor
mov
testl
push
jnp
mov
mov
adc
add
cwtl
loop
dec
shll
fs
movsb
push
add
bound
lods
jmp
mov
add
pop
jbe
int3
jbe
xchg
push
sbb
dec
jp
loop
pop
pop
imul
dec
ficompl
inc
jae
pop
cmpsl
je
aam
mov
lret
adc
leave
pop
repz
push
cltd
or
push
hlt
and
fidivrs
jno
and
into
fsubl
mov
int
ja
push
stos
out
mov
adc
jle
mov
lds
fildll
shl
cmc
jecxz
and
cmp
ljmp
pslld
mov
pop
pop
mov
rcrl
scas
sub
call
or
ficomps
fsts
jmp
or
lea
mov
pop
cmp
pusha
test
pop
repnz
cmp
dec
mull
call
insl
test
jp
mov
xor
sti
pop
lods
inc
hlt
dec
lods
in
fisubl
stos
lds
std
xchg
addr16
jl
sahf
lods
addr16
mov
sbb
fwait
cmpsb
mov
popf
movsb
pusha
divl
out
sbb
cmp
jns
sahf
stos
mov
fmull
pop
dec
sub
mov
inc
stos
mov
cwtl
lret
jecxz
and
rep
jmp
and
mull
sti
fwait
cld
int
test
mov
cmpsb
imul
mov
out
add
jno
xor
mov
sub
add
cmpsl
out
jp
and
fsubrs
xchg
mov
push
bound
mov
out
pusha
hlt
rcrl
ljmp
jg
pmaddwd
inc
pop
push
and
int3
fs
jno
in
push
lock
fistpl
lcall
and
jl
pop
sarb
and
dec
dec
cmpsl
mov
iret
shr
das
lds
push
adc
xor
adc
out
icebp
mov
outsb
xor
in
test
cmpsl
mov
push
jge
shrb
cmp
cmp
in
add
jp
addr16
push
sbb
adc
outsl
xchg
lods
xchg
adc
xor
dec
mov
je
or
mov
jno
lods
es
fiaddl
mov
jnp
and
mov
lret
pusha
mulb
aas
sbb
pop
xor
mov
icebp
xlat
inc
push
mulb
cltd
add
pop
lahf
out
les
cmc
ror
cmp
push
outsb
cld
cwtl
or
push
mov
fdivr
push
js
or
imul
add
push
addr16
adc
or
es
dec
push
in
in
rcrl
aaa
fs
sub
adc
sub
lea
test
sub
mov
add
jae
pop
jo
sbb
scas
sub
add
push
icebp
data16
push
push
aaa
adc
call
mov
aas
loop
pop
addr16
pop
jne
and
dec
clc
stos
adc
orb
arpl
cmp
mov
adc
rorb
jecxz
and
sarl
xchg
test
add
mov
loop
rcrb
cmp
sbb
sbb
mov
dec
push
sub
push
fsubp
jl
jne
mov
add
sub
xchg
mov
push
push
sub
out
cmp
jne
push
js
and
and
movsb
rcrb
pop
lock
mov
add
jle
and
sbb
repz
xchg
mov
sbbb
sub
in
and
movsb
inc
mov
jns
dec
roll
inc
inc
mov
ja
mov
cwtl
mov
xchg
ljmp
jns
push
xor
inc
sub
push
mov
or
jl
stc
push
mov
xor
out
xchg
int3
mov
xchg
enter
sbb
jo
pop
rcl
sarb
test
insb
fidivrs
mov
jp
pop
pop
imul
sbb
jmp
pusha
sub
or
addl
ss
push
cmc
call
sahf
sbbl
js
pop
inc
dec
aaa
testb
testb
inc
adc
cmpsl
or
test
sar
test
int
push
inc
jbe
jle
sub
out
xor
xchg
mov
sbb
insl
cmpsl
in
jecxz
fsubr
in
fs
mov
mov
jge
hlt
mov
out
adc
mov
imul
aas
das
inc
cmp
insb
jae
add
mov
adc
cmpsb
xchg
push
inc
mov
xor
dec
ss
cld
pop
imul
and
es
outsl
adc
mov
fisubl
pop
les
imul
and
pop
mov
mov
pop
lcall
cwtl
cwtl
imul
push
push
mov
mov
pop
and
pop
adc
mov
stos
or
in
daa
sbb
ljmp
aad
int3
inc
mov
dec
ljmp
ljmp
aas
or
inc
xorl
inc
add
xchg
mov
in
call
inc
mov
mov
cmpsb
add
lock
inc
imul
rcrl
int
dec
lcall
xchg
fidivrl
add
or
sbb
inc
popa
inc
push
in
pop
push
and
mov
jle
jle
dec
mov
fsubrl
popf
push
pop
add
decl
popa
das
dec
mov
sub
mov
loop
jbe
int
add
daa
jo
push
xchg
xor
fsubp
stos
xchg
pop
mov
jle
and
adc
fs
add
push
xchg
es
shlb
or
mov
inc
pop
addr16
shll
lret
pusha
adc
and
scas
push
xor
push
mov
mov
scas
pop
cwtl
push
mov
loope
jo
fisubl
insb
adc
dec
fidivs
dec
jb
mov
shrb
push
or
in
ja
pusha
cmp
cltd
inc
push
mov
std
ret
mov
pop
mov
lea
mov
icebp
test
pop
pop
add
rcrl
dec
jecxz
cli
out
cli
sub
aam
negl
pusha
adc
pop
fiadds
mov
bound
mov
sub
jo
int3
sub
hlt
repz
mov
outsl
cmp
cltd
xor
mov
in
lods
cli
xchg
xor
adc
mov
scas
aaa
sbb
push
int3
mov
icebp
cltd
xchg
orl
inc
sahf
cmp
jno
and
push
inc
or
jnp
adc
jns
lods
xor
ficomps
cli
or
call
pop
and
ss
push
mov
xor
imul
repnz
dec
sbb
loope
xchg
pop
adc
jo
mov
adcl
or
cmpsl
jns
add
and
push
xlat
imul
movsb
cmp
jecxz
or
mov
or
sbb
inc
and
sub
out
and
data16
xchg
stos
hlt
inc
inc
fildl
mov
lret
mov
in
and
mov
mov
sub
leave
pusha
rcll
mov
dec
out
stos
test
push
mov
fstp
or
iretw
rclb
cmc
mov
mov
mov
mov
push
push
inc
fiaddl
dec
loop
loopne
jae
add
cmpb
nop
mov
cwtl
out
add
fidivrs
add
sbb
mov
sbb
into
das
adc
lret
mov
or
das
cmpsl
rolb
add
push
out
sbb
imul
sbb
out
ret
dec
jecxz
mov
xchg
mov
movsb
sub
mov
out
cmp
rorb
sbb
rcl
loopne
jne
int3
into
icebp
cmp
mov
cmpsl
jp,pt
repnz
in
mov
out
xchg
das
cmp
mov
cmp
xor
jmp
push
mov
pop
fwait
add
xchg
push
pop
push
sahf
hlt
test
std
and
mov
outsb
lods
adc
lds
fdivrl
pop
push
subl
pop
outsl
sbb
or
icebp
loope
lcall
pusha
sahf
out
sbb
jo
jb
mov
xchg
out
stc
push
mov
ret
mov
jae
mov
add
nop
mov
adc
push
aas
sub
fidivrs
insl
int
add
fiadds
mov
adc
insl
mov
and
ja
xchg
xchg
adc
test
les
rcrb
icebp
mov
pop
xor
aaa
adc
inc
cmp
popf
stc
out
adc
mov
sub
shl
mov
lcall
xorl
jmp
sbb
mov
insb
jmp
jno
xor
clc
xor
test
mov
sub
rolb
lret
pop
orl
scas
mov
out
xchg
jo
fsts
sub
xchg
jl
and
fbstp
jbe
icebp
sti
xchg
adc
sbb
mov
adc
dec
sub
rcrb
lock
push
cmp
stc
gs
xchg
push
inc
adc
push
repz
inc
inc
add
cld
pop
inc
jno
mov
insb
ret
mov
mov
lock
mov
cld
fnstenv
lods
inc
push
or
fidivrl
xlat
outsb
push
ss
je
dec
add
jae
pop
movsl
dec
dec
jg
jecxz
mov
in
out
push
inc
fiaddl
sahf
adc
iret
imul
mov
or
jle
out
mov
rorb
jle
subb
jmp
dec
inc
fisubrl
xchg
mov
movsb
popf
stos
in
jle
clc
add
or
dec
fcoml
jo
bound
mov
mov
push
xchg
jno
sarb
shlb
add
pop
mov
shr
push
push
ds
adc
sbb
push
push
imul
cs
inc
pop
xor
mov
stc
cmp
or
loop
in
pop
cmp
pop
ljmp
jp
jne
xor
subb
mov
inc
dec
mov
xchg
pushf
mov
mov
pop
push
cmc
xchg
xchg
jbe
subb
adc
jecxz
nop
mov
imul
push
sub
dec
mov
in
loop
mov
out
das
aaa
cmp
xchg
mov
cmp
adc
shr
and
arpl
and
and
xchg
adc
mov
loope
imul
sbb
xor
sbb
dec
mov
sbb
sub
outsb
imul
dec
sarl
stc
mov
adc
mov
fnsave
mov
outsb
clc
pusha
mov
adc
jg
scas
mov
lods
call
outsb
sbb
jecxz
es
orb
add
mov
jmp
nop
sti
pop
das
push
cltd
dec
dec
inc
into
pop
jmp
dec
mov
iret
stc
nop
add
mov
pop
pop
xor
dec
dec
jg
sarl
push
fsubr
adc
loop
stos
cmp
enter
mov
dec
dec
out
jnp
adcb
and
adc
xor
and
int3
jnp
outsb
stc
pop
repnz
push
mov
sarb
add
fmull
stos
xchg
sub
adc
call
and
mov
xchg
push
ljmp
stos
cmp
mov
idivb
int3
jnp
shll
mov
rcrl
cmp
add
fistpll
push
es
pusha
mov
filds
notb
mov
fldl
lcall
data16
add
adc
xor
xchg
stc
mov
lret
xchg
mov
pop
cmp
jbe
add
pop
arpl
fcompl
xor
add
xchg
movsl
lahf
xor
mov
mov
mov
aaa
nop
call
lret
arpl
xchg
dec
lcall
mov
nop
sbb
adc
push
cltd
xor
sub
and
ror
out
sarb
aad
fwait
decb
lea
test
movsl
rorl
cli
repnz
pushf
mov
enter
data16
jmp
push
jb
xlat
imul
and
mov
sti
jnp
fsubl
aas
dec
fldcw
enter
lcall
lds
push
loop
mov
inc
inc
scas
pop
jne
shlb
stc
dec
loop
dec
xchg
ret
rol
dec
inc
cmp
enter
sub
dec
movsl
mov
cmp
mov
dec
mov
jecxz
xchg
adc
add
and
mov
das
cmp
dec
mov
xchg
push
cmpsb
sub
xor
fwait
cmpsl
sub
xchg
adc
jns
jnp
and
xchg
cmp
lret
sahf
andb
mov
ja
pop
jbe
cwtl
call
sbb
inc
cwtl
ja
xor
lcall
mov
pop
aam
dec
dec
or
xor
aam
jl
push
notb
mov
js
jge
idivl
add
xor
mov
stos
xor
sub
loop
dec
pop
mov
pop
in
aam
cld
or
test
testb
out
adcl
add
mov
repnz
and
inc
sbb
add
dec
ret
xor
hlt
imul
movsb
mov
movsb
scas
daa
and
fimull
lret
test
push
subb
add
je
pop
xchg
inc
sub
xchg
adc
in
int
inc
das
fdiv
push
movsl
aam
xlat
jno
addl
sbb
sbbl
nop
push
sub
test
jge
sbb
cmpl
jnp
add
xchg
in
dec
lock
ja
mov
jbe
mov
ret
and
jne
in
fnstsw
bound
jo
cmp
mov
mov
cmc
inc
es
and
inc
pusha
aas
and
mov
dec
cmpb
cmp
aaa
pop
movsl
je
test
cwtl
lcall
cmp
xchg
adc
mov
testl
out
test
dec
aas
fsubl
insl
rcrb
or
repnz
sub
add
inc
push
ret
jp
into
xor
mov
mov
adc
out
stc
jns
or
dec
mov
inc
dec
mov
jg
iret
fistpl
into
in
lahf
push
xor
in
mov
mov
js
fidivl
loop
sub
es
mov
add
pop
inc
and
ja
test
stc
or
push
int
imul
iret
mov
adc
movsb
pop
in
pop
addb
add
ret
jg
sbb
loop
cmp
push
out
andl
cld
cld
xchg
out
push
or
mov
js
mov
fsts
jbe
shr
into
mov
ja
mov
inc
dec
mov
mov
iret
inc
sti
shrl
sub
stc
cmp
lds
aad
push
mov
repz
jl
mov
call
sub
mov
pop
mov
js
adc
mov
fisubl
lcall
aaa
stos
jae
in
lret
imul
stos
mov
cs
lahf
and
out
push
or
and
jnp
inc
jg
movsl
push
push
loope
push
sbb
lret
arpl
push
cmp
cs
int3
xchg
cs
shr
bnd
adc
jns
cli
ret
dec
mov
pop
and
jno
mov
xor
xchg
mov
sub
cmc
dec
into
xchg
jl
arpl
shlb
ds
mov
pop
jmp
mov
or
hlt
cld
fwait
hlt
jne
xor
adc
fwait
adc
add
mov
pop
cmp
stos
sbb
push
addr16
push
daa
aas
ret
inc
icebp
or
rorb
and
xor
idivl
dec
hlt
dec
in
aam
insl
leave
sbb
lahf
inc
mov
pop
orl
dec
insl
mov
adc
push
pop
mov
loopne
dec
xchg
arpl
ret
jo
stos
dec
loope
dec
jl
xor
imul
sbb
xchg
data16
shll
loop
imul
jno
lahf
cwtl
dec
in
lret
cmpl
sahf
jb
mov
push
decl
mov
stc
push
jge
ljmp
test
lret
mov
shrl
lock
jnp
dec
ret
pop
jp
add
lahf
mov
pop
mov
dec
in
sub
xchg
popl
sahf
push
or
push
aam
enter
clc
int
orl
shlb
cs
les
inc
fimull
fld
into
dec
pop
repnz
fsubl
xchg
insb
jnp
dec
ficoml
mov
pop
call
stc
add
out
mov
in
stos
adc
inc
or
cmpsl
aam
fsubs
sbb
mov
inc
fnsave
xlat
inc
test
data16
mov
jno
pushf
lock
or
bound
sbb
jo,pn
pop
mov
in
jns
and
mov
lods
mov
mov
inc
pusha
mov
xor
pop
xlat
push
xchg
inc
data16
push
or
cmp
lods
pop
cmc
or
adc
add
sbb
out
nop
insb
stc
pop
cmp
sbbl
call
insl
gs
fdivrp
loop
sub
sbb
adc
pushf
dec
jo
sub
xchg
dec
pop
mov
jge
int
sbb
sbb
and
testb
shll
in
adc
mov
push
gs
fcmovnb
sarb
mov
jl
inc
stos
adc
out
dec
add
jp
aad
stos
sub
repnz
mov
adc
and
adc
push
jae
imul
repnz
or
pop
pop
insb
rcl
push
or
jp
xchg
insb
popa
test
insl
mov
arpl
cmc
nop
mov
pop
push
mov
jbe
das
shrb
dec
push
nop
jge
repz
rorb
fistpl
imul
mov
or
out
sub
jbe
bound
out
ret
xchg
das
out
cwtl
xor
repnz
cmp
and
rcrb
pop
mov
sbbb
add
out
xor
pushl
fbstp
shl
int
and
sbb
pop
jge
repnz
mov
data16
dec
add
lcall
fs
mov
mov
or
into
cmp
aas
sti
push
fdivr
mov
mov
cmp
or
cmc
adc
call
ficomps
clc
arpl
pushf
push
mov
pop
ljmp
idivb
ret
push
in
xchg
jno
loopne
or
lds
outsl
push
xchg
cmp
jae
sbb
pop
out
add
pop
in
popf
mov
out
pusha
idiv
mov
jge
and
lods
push
cmpsb
add
add
loope
daa
stos
sub
imul
inc
icebp
or
xchg
sti
daa
fldl
sbb
jnp
repz
das
xchg
pusha
rclb
fwait
xor
mov
into
data16
fsubrs
xchg
mov
and
or
daa
push
mov
mov
cmc
in
mov
std
dec
jae
mov
sbb
aaa
or
iret
sahf
sub
cld
fdivrl
sbb
cmpsl
pop
mov
fistpl
push
cltd
outsl
aad
push
mov
jmp
scas
sbb
pusha
add
mov
xlat
pop
icebp
jo
repnz
aaa
jp
jecxz
sub
mov
push
call
lods
dec
mov
pusha
push
mov
fcmove
xlat
cld
inc
movl
sti
in
xchg
shlb
ss
leave
mov
xor
fsubr
icebp
movsb
pop
out
sub
cmp
in
or
xchg
pop
xchg
mov
or
mov
sbb
mov
pop
mov
cmp
cmp
pop
clc
push
push
adc
aad
and
leave
mov
je
lods
mov
cmp
test
add
mov
or
stc
mov
lods
cmp
xor
sub
pop
pop
addb
enter
imul
cmp
mov
ret
add
inc
push
in
mov
or
lea
sbb
sti
test
fisubs
and
ss
cmp
mov
dec
addl
stc
xor
lahf
push
cmp
push
dec
add
cmpb
or
lret
dec
cmp
or
pop
adc
outsl
mov
ret
cmp
mov
cmpsb
push
sar
iret
xorb
push
loopne
aas
js
sub
repz
xor
jle
add
arpl
gs
add
insl
fnstsw
or
push
mov
adcb
out
cmp
aam
cmp
and
push
pop
sub
iret
pop
stos
cmp
adc
mov
je
and
das
and
fs
rorb
jae
inc
decb
or
push
pushf
push
pop
out
push
pushf
pop
cmpsb
adc
adc
stos
jle
data16
mov
in
add
pop
out
cmp
mov
in
lods
ljmp
xchg
add
xor
mov
sbb
sbb
popf
inc
ret
pushf
mov
pushf
mov
push
push
int
xor
data16
lret
addr16
outsl
sbb
mov
inc
cs
or
mov
popf
jl
aas
scas
mov
cmp
leave
gs
popa
pop
cmpsl
aad
test
dec
loopne
dec
xchg
add
adc
outsb
mov
mov
fists
push
fnstcw
sbb
aas
bound
es
shr
xchg
in
out
pusha
cmp
ss
sbb
pop
dec
andb
cmp
fistl
or
push
les
shr
or
pop
cld
loopne
das
rcll
filds
push
sarb
or
shlb
das
mov
xor
mov
hlt
cld
or
push
dec
mov
xchg
sub
sti
xor
or
out
mov
and
fldl
movsb
and
out
push
popf
in
dec
dec
fs
fisubs
movhps
adc
inc
adc
mov
out
inc
xlat
dec
cwtl
and
push
jle
sub
fcoml
mov
scas
adc
jne
cs
sarl
dec
loope
xchg
xchg
daa
leave
ret
repz
sbb
imul
aam
mov
dec
ljmp
aad
jmp
xchg
frstor
jge
adc
inc
pop
clc
rclb
into
sub
popa
mov
ret
pushf
xor
in
sti
sub
sub
imul
dec
sub
mov
loop
dec
mov
add
pop
popf
iret
xor
outsl
aaa
mov
outsl
cmp
cmpsl
ret
fwait
xchg
aad
dec
or
gs
mov
cmpsl
xchg
in
orl
dec
inc
push
mov
test
sub
pop
mov
lods
in
test
andl
lcall
nop
ljmp
rcr
es
jb
lea
lret
popa
js
jbe
cltd
call
push
pop
pop
sbb
in
ret
push
mov
or
push
pop
es
push
jnp
stos
pop
dec
cmp
je
sbb
add
sbb
scas
lahf
jbe
pop
sbb
xchg
push
stos
lods
lret
sbb
add
das
lock
test
sarl
pop
jns
addl
in
cld
outsb
push
pop
loopne
out
pop
test
lcall
add
enter
mov
and
inc
pop
divb
mov
add
fdiv
pushf
pop
fwait
xor
vphaddbw
je
jg
dec
jecxz
mov
cmc
clc
jp
jmp
sub
dec
jecxz
fisubrs
iret
inc
cmpsb
hlt
cmp
mov
pop
into
sub
fs
leave
sbb
or
xchg
int3
fiadds
pop
and
mov
loopne
ja
sub
mov
pop
jb
xor
pop
jbe
push
add
sbb
push
push
dec
add
push
call
mov
push
dec
dec
fisubrs
ret
mov
fistl
movsl
add
xor
movsb
in
or
jp
push
jecxz
addr16
inc
fisttpl
xchg
xchg
push
and
fcomi
lea
shlb
stc
jnp
pop
lds
lahf
pop
daa
pop
test
out
pop
shl
mov
and
dec
cmp
mov
cld
sbb
push
popf
jecxz
ficoml
jns
dec
in
mov
scas
mov
aam
andb
and
xchg
ds
leave
aaa
out
cwtl
ljmp
pop
pop
lea
lea
push
push
and
pop
jae
and
and
mov
jb
jle
jmp
jo
stc
and
repz
sbb
inc
mov
xchg
ja
jne
cwtl
push
fisubl
arpl
lds
xchg
test
loope
aas
adc
pop
mov
stos
jbe
sti
jae
test
fnstenv
lret
adc
std
or
adc
sub
push
adc
cmp
pop
pop
or
lea
pop
cmp
add
sub
arpl
jmp
movsl
insl
loopne
stc
test
sahf
xchg
mov
jns
and
sub
pop
jg
loopne
fsts
sub
pop
test
lret
rolb
test
cs
stc
or
loopne
fcompl
push
mov
lea
dec
aam
jnp
ja
jo
es
push
add
fnsave
cmp
ja
jb
inc
movsb
cmp
bndstx
movsb
stos
imul
push
jnp
int
push
dec
imul
mov
pop
mov
adc
daa
mov
loop
lods
inc
call
adc
and
scas
jp
or
mov
pop
cmp
push
in
or
rolb
mov
adc
ds
sub
inc
test
push
add
stos
xchg
pop
adc
aas
in
or
dec
mov
addr16
push
int
cmp
sbb
xchg
aad
lret
sahf
push
fistps
fidivl
jmp
and
mov
mov
ret
outsl
pop
ds
loopne
nop
daa
aaa
lds
push
or
out
inc
fwait
sbbb
in
in
popa
jbe
pop
das
push
adc
or
test
push
test
push
nop
repz
add
loop
dec
sbb
lea
lret
xor
cmp
rorb
fdivr
das
ljmp
xchg
mov
leave
mov
ret
add
sbb
inc
shr
jo
push
inc
shrb
pop
xchg
jle
lock
mov
lods
cmp
xchg
xor
pop
fwait
lds
les
out
xor
subl
pusha
or
pop
ret
fwait
mov
push
gs
in
adc
insl
ljmp
or
and
scas
inc
cwtl
je
push
or
dec
jae
icebp
xchg
nop
cmpsl
out
rorl
pusha
jo
pop
es
aaa
dec
inc
mov
inc
fdivrs
fdivrl
stc
add
gs
jecxz
repz
jne
clc
dec
dec
sbb
mull
jns
sub
cmp
daa
mov
mov
inc
inc
aaa
sub
leave
mov
data16
in
add
cltd
std
cli
sbb
icebp
leave
jl
dec
mov
cmp
iret
imul
mov
jb
push
push
pop
in
call
cmp
in
data16
test
call
or
icebp
sbb
lods
cli
mov
dec
cltd
shll
clc
stos
mov
lds
xchg
arpl
jl
push
loope
aad
in
mov
rcrl
pop
pop
test
std
into
fiadds
ss
cli
fiaddl
mov
das
cmp
bound
dec
dec
sbb
test
cmp
pop
mov
mov
fldt
nop
or
and
in
lret
add
loope
int
fisubrs
inc
pusha
xor
into
movsb
push
mov
jno
into
xor
pop
jle
and
pop
daa
push
cmpsl
pushf
xlat
xchg
jo
lds
or
loopne
and
cmc
or
add
aad
jp
sbbb
pushf
sub
dec
or
fwait
xor
decl
mov
adc
data16
sub
cmp
cltd
pop
dec
lret
aam
imul
xor
fdivrs
xchg
loop
in
fwait
rol
sti
xchg
cmc
cld
mov
lahf
hlt
cmp
push
das
push
or
push
fisubrs
pop
mov
or
subl
popl
add
in
aam
cltd
mov
daa
inc
lahf
and
cwtl
adc
leave
pop
mov
mov
cmc
dec
xchg
arpl
sbb
xor
aaa
int
test
andb
sti
outsb
push
and
lea
sbbb
add
int3
arpl
xchg
test
sub
push
jb
outsl
movsb
js
ficoml
insb
push
inc
aaa
cmpsb
ret
bound
insl
jmp
cmp
jns
test
jg
push
add
adc
leave
cli
insb
cmp
rorb
mov
add
js
mov
push
mov
jg
cmp
mov
subl
xchg
lahf
push
push
into
das
imul
neg
cmp
les
xor
adc
in
mov
lock
stos
std
dec
cmp
xchg
jb
iret
lcall
imul
adc
ja
ds
xor
mov
mov
cmc
lret
dec
and
aas
shll
add
mov
icebp
insb
dec
out
fwait
push
push
scas
pusha
mov
addb
cwtl
out
push
shlb
sahf
inc
mov
jo
in
mov
sahf
mov
cmp
es
fisttps
loope
clc
pop
mov
xchg
lods
stos
das
xchg
out
das
mov
jbe
jmp
xor
movd
mov
mov
imul
adc
sub
int3
dec
mov
adc
cmc
dec
add
dec
fadd
dec
les
fsubrs
andb
in
sub
notb
ret
jmp
xchg
push
push
and
pusha
sub
pusha
lock
inc
push
fs
dec
fstpt
add
subb
xchg
inc
out
sahf
mov
dec
iret
loope
filds
sbbb
xchg
stos
sub
decb
jl
jb
cmc
mov
mov
xchg
sar
or
dec
rcll
mov
int3
mov
mov
or
movsl
ja
loope
adc
aam
mov
add
daa
aad
sysret
dec
pop
dec
rcll
lret
hlt
add
cmpsl
push
lahf
ss
movl
cwtl
es
jp
or
ret
loope
outsb
icebp
dec
pop
and
mov
mov
les
mov
pop
mov
pop
pop
and
dec
mov
push
fcompl
cmp
cmp
mov
dec
mov
push
and
mov
and
add
dec
out
test
push
fldt
jge
fwait
movsb
bound
push
test
addl
inc
scas
data16
aad
test
push
xor
mov
testl
xchg
jbe
and
adc
cwtl
mov
mov
popa
xchg
xor
les
pop
cmp
jge
loopne
adc
pop
sub
in
lock
dec
cmp
adc
adc
jp
fildll
adc
mov
cmpsb
cmp
pushf
inc
aaa
sahf
icebp
xchg
and
jbe
xor
aas
inc
adc
ret
sbb
call
mov
fbstp
dec
push
mov
cmp
mov
rolb
test
cmp
jo
mov
mov
add
cld
inc
inc
push
mov
aaa
pop
insl
arpl
test
lods
stos
push
add
dec
or
cmpsb
nop
ficomps
mov
push
dec
cmpsb
inc
fcomp
dec
pop
push
cld
cmp
repz
jbe
pushf
maxps
repz
push
xlat
insl
jne
mov
aam
imul
mov
sbb
imul
dec
iret
mov
xor
xor
pop
and
cltd
loope
and
mov
xchg
push
cltd
and
xchg
and
push
cmpl
mov
add
push
dec
in
lahf
pop
xchg
ret
imul
sbb
in
dec
daa
push
fildll
sbb
popf
jle
sahf
sub
sbb
shlb
pop
outsb
sbb
mov
faddl
sbb
cmp
dec
cmp
fmull
pop
xchg
mov
fcomp
std
xchg
les
sbb
lock
mov
mov
fnstenv
or
outsb
add
aas
inc
jp
jb
push
sbb
int
push
lret
sbbl
mov
out
add
add
ret
movsl
ljmp
pop
sbb
jo
pusha
and
cmpb
mov
ss
fiaddl
es
pushf
or
xchg
sbb
lds
xlat
pop
pop
into
in
jns
dec
ret
popa
sub
xchg
in
int
popf
jl
or
nop
push
sub
add
das
push
cli
and
test
mov
ljmp
sub
aaa
leave
data16
scas
inc
enter
push
mov
gs
pushl
dec
and
sahf
inc
push
rolb
sbb
scas
add
and
xor
stc
pop
mov
fwait
push
mov
jmp
and
inc
out
cld
call
sahf
mov
mov
test
dec
ss
or
and
pusha
fdivr
es
jo
call
fwait
inc
test
dec
jmp
movsl
ret
push
push
mov
jo
repz
adc
inc
cmpsb
je
mov
xchg
dec
fsubs
cs
fwait
lods
sarb
into
push
add
in
push
mov
mov
in
les
pop
inc
or
fst
pop
dec
xor
cmc
mov
out
sub
sahf
das
xchg
or
push
aaa
jne
enter
cmp
ret
hlt
jmp
sti
dec
fildl
push
mov
adc
rcll
pop
fsubp
push
gs
shl
repnz
mov
fidivl
insl
xchg
push
pop
test
and
push
lock
addl
xchg
xchg
sub
loope
xor
idivl
sub
rolb
clc
popf
je
cmp
sti
std
or
add
ss
and
cmp
xor
mov
inc
roll
mov
nop
gs
sub
cmp
out
and
and
adc
mov
push
insb
push
popa
icebp
dec
and
sub
fmuls
jbe
ja
lahf
js
adc
jbe
fdivrp
sbb
dec
les
ret
pop
mov
mov
insb
pop
or
in
xor
ret
in
sub
cwtl
stos
imul
andb
dec
repnz
daa
rolb
decl
or
or
stos
jge
and
shrb
jp
or
jle
jecxz
icebp
push
test
fs
jno
mov
shl
add
dec
cs
cs
cmpsl
add
jle
jl
jb
dec
fisttps
xchg
mov
int3
icebp
imul
out
loope
mov
pop
jmp
mov
add
fimuls
cld
fimuls
out
mov
xor
rol
inc
inc
mov
loop
pop
loope
add
or
push
xchg
gs
ljmp
testb
mov
scas
faddp
lea
mov
xchg
lahf
shl
repnz
inc
aam
xor
jge
jge
mov
rolb
ja
es
pop
mov
sti
in
xor
fisubrl
or
mov
mov
js
cmp
lods
jmp
ret
ret
cmp
ffreep
xor
xlat
mov
paddusb
sbb
jge
cli
cmp
mov
sbb
or
in
pop
jge
adc
pusha
mov
sub
sbb
xor
xchg
xchg
adc
push
inc
xchg
adc
inc
fisubs
jae
push
iret
andb
pop
shll
lret
pusha
gs
out
mov
cmp
or
push
sbbb
mov
ret
fcmovnb
jl
dec
scas
in
xchg
xchg
ret
les
mov
mov
sub
in
lods
push
jbe
test
mov
or
or
mov
xchg
jecxz
cwtl
mov
mov
fldenv
pusha
inc
sti
push
into
mov
mov
lret
aas
std
rcrb
pop
movsl
sbb
mov
jge
sub
adc
and
adc
in
add
cmp
add
not
xchg
cmp
and
jnp
pusha
es
and
jecxz
pop
lcall
xchg
pop
out
out
and
movd
popl
jnp
push
lcall
sahf
divl
in
xchg
adc
push
in
cmpl
mov
rcl
cld
inc
mov
push
mov
inc
xor
pop
and
xchg
out
xlat
sbb
std
shl
push
sbb
add
fmull
cwtl
fisubs
pop
dec
push
add
lods
jo
sbb
jns
mov
xlat
cmpsb
push
pop
xchg
adc
push
scas
out
setnp
dec
xor
fs
mov
xchg
test
push
add
and
ds
jle
imul
lahf
pusha
ret
dec
sub
out
out
xor
sarl
test
add
inc
ret
push
repz
call
sbb
sub
fildl
and
cwtl
add
dec
sti
xor
push
dec
and
test
add
out
push
xchg
rcr
mov
xchg
jbe
call
scas
mov
jle
orb
shl
sub
pop
mov
dec
ds
bnd
jne
cltd
and
mov
jl
xor
insb
mull
dec
pop
ficoml
out
or
cmpb
sbb
xchg
sub
mov
dec
dec
xlat
push
jp
mov
inc
lods
xchg
pop
rcll
xor
add
add
imul
mov
lock
and
jno
in
inc
xchg
pop
mov
aad
push
nop
mov
adc
dec
fsubrs
mov
divb
aam
xchg
js
dec
dec
mov
xchg
leave
xor
mov
dec
aam
shlb
dec
cmc
into
and
sub
fst
arpl
and
xlat
dec
push
scas
rcll
mov
jmp
test
in
adc
sbb
sbb
adc
clc
push
popf
bound
dec
ja
cld
and
adc
mov
sbb
inc
js
lret
adc
jnp
xchg
imul
push
movsl
lret
xlat
aas
stos
aaa
or
lcall
and
push
sbb
xor
pop
or
xor
out
orb
inc
mov
mov
jae
movsl
in
leave
pop
mov
out
gs
pop
sub
es
pop
aas
lcall
cmp
lods
xchg
pop
pop
out
std
mov
mov
xor
xchg
cmc
outsl
push
adc
inc
xchg
out
stos
icebp
sahf
mov
inc
inc
pop
jg
aad
fs
sub
or
pop
les
xchg
xchg
daa
mov
icebp
mov
mov
inc
jg
imul
pop
outsl
or
pop
xor
lods
ljmp
push
inc
movsl
fdivrs
push
clc
repnz
jg
repz
xchg
xchg
mov
mov
js
test
ret
ds
fidivl
aam
jmp
sub
mov
xor
out
js
xor
jne
add
push
ljmp
add
test
pushf
stos
roll
jle
scas
pop
fsubr
mov
testb
ficoml
outsb
js
fsubrl
jmp
and
push
test
int
cmp
jmp
cmp
xchg
adcb
data16
xchg
jns
out
xor
dec
int
adc
xchg
ret
push
rcl
inc
pushf
aam
xor
outsb
push
mov
rorl
aam
xchg
jns
push
inc
stc
fcompl
out
rcrb
adc
lahf
loop
pop
rcll
pop
cmp
push
dec
mov
xchg
sub
push
xchg
into
pop
lahf
add
xchg
pushf
jl
mov
and
insb
mov
xchg
cmp
stos
outsl
cmp
mov
pop
out
dec
dec
jle
aaa
jne
cmp
inc
push
outsl
fnstenv
scas
adc
cwtl
pop
data16
cmp
mov
shll
add
mov
jmp
and
dec
and
xchg
js
inc
pop
push
mov
daa
test
push
cmp
mov
movsb
push
data16
mov
push
pop
cmpsl
loope
cmpsb
or
push
dec
cli
jge
sub
out
or
cmpsl
mov
data16
lcall
movsl
jmp
xchg
decl
xchg
mov
mov
push
adc
mov
rcrl
les
xchg
sub
aas
out
xchg
imul
setg
lret
cltd
pop
icebp
or
out
test
dec
gs
lea
leave
decb
aas
and
dec
mov
icebp
notb
push
sbb
ljmp
jo
in
jecxz
inc
fwait
lret
xor
xchg
add
push
mov
fwait
xor
xor
push
insl
aad
hlt
fdivrl
jae
pop
cmp
aad
mov
das
out
arpl
movsl
lret
push
push
stos
mov
jne
cltd
das
pop
js
popf
cmp
xchg
fmuls
test
cmpsl
out
adc
xor
mov
clc
mov
pop
adc
js
sbb
mov
mov
xor
push
pop
inc
int3
add
ja
lea
mov
aas
in
test
pushw
fstpl
adc
xchg
lods
out
add
xor
adc
push
xchg
mov
push
idivb
stc
xchg
sub
cmpb
std
mov
pop
outsb
out
push
call
fsubr
push
mov
int
sbb
addr16
in
sahf
and
lock
mov
inc
pop
daa
xorl
subb
fwait
mov
std
std
cmp
inc
xor
insl
xchg
sbb
mov
lahf
push
inc
sub
inc
pushf
fstpt
iret
and
fwait
cwtl
push
push
mov
rcl
insl
add
xor
jno
or
mov
sarb
fsts
jo
mov
mov
pusha
pop
mov
mov
pop
aas
push
adc
xor
push
popf
or
enter
xchg
sub
fisubs
leave
push
mov
jb
push
fisubrl
jp
in
stos
lret
cmp
mov
sti
push
dec
cmpsb
or
sbb
pop
mov
sahf
xor
dec
popf
enter
mov
mov
in
xlat
pop
mov
lret
divb
add
insb
aas
push
movsl
mov
mov
adc
ja
sub
int3
pop
xchg
jmp
sub
jns
adc
add
xchg
lods
jmp
push
sti
js
mov
scas
push
xlat
pop
cmp
add
add
stos
in
push
push
aaa
xchg
stos
imul
cmp
pop
cltd
das
jae
shll
popf
pushf
scas
xchg
sub
loopne
dec
mov
imulb
pushf
jb
mov
jle
sahf
cmc
mov
or
fwait
push
je
add
cmp
pminub
test
and
xchg
jg
sbb
mov
mov
push
lock
xchg
lret
ds
testl
js
int
loop
mov
dec
inc
inc
int3
jb
out
arpl
adc
fucomp
bnd
mov
pop
sub
xchg
add
add
aam
std
mov
adc
fucomp
xor
repnz
push
addr16
popa
aaa
or
jb
mov
or
aas
mov
call
xchg
lock
xlat
test
inc
add
outsb
fpatan
scas
lods
adc
mov
mov
dec
outsb
pop
icebp
enter
adc
les
lods
xchg
adc
pop
xor
add
aam
test
in
mov
push
test
je
or
sahf
adc
mov
fmul
and
push
test
push
jb
shll
pop
popa
out
xchg
push
out
hlt
or
and
push
jmp
pop
sub
test
and
push
pop
jmp
adc
int3
shlb
rclb
mov
sbb
adc
push
cwtl
insb
lock
das
xor
mov
cmp
jbe
jbe
dec
in
rcll
enter
push
insb
dec
cmp
pushf
jb
mov
mov
mov
lea
xor
cmpl
sub
int
dec
mov
jne
and
fmuls
push
arpl
ss
dec
int3
lret
pop
icebp
push
jne
sbb
add
xor
imul
add
dec
push
jmp
pop
jb
dec
roll
pusha
aad
pusha
stc
xor
test
xchg
jg
in
dec
adc
cmp
add
sbb
xchg
hlt
mov
movsb
xor
mov
pop
xorl
lcall
xor
push
nop
push
fisubrl
insl
roll
cmp
scas
xchg
fs
pop
fisttpll
sbb
or
sbb
outsb
mov
into
cli
or
jns
and
jmp
lods
cwtl
add
mov
jge
out
je
mov
mov
aaa
fsts
push
or
push
mov
movsb
xchg
int3
and
mov
ret
mov
mov
or
jo
loopne
inc
cltd
mov
inc
inc
vpmulhuw
out
push
jo
arpl
adc
test
pop
lock
jb
push
or
and
add
dec
test
imul
out
int3
pop
subl
pop
movsb
pop
call
pop
and
stos
test
ljmp
pop
add
fbstp
daa
test
adc
adc
ret
aas
divb
clc
mov
mov
icebp
xchg
in
movsl
into
cmp
imul
pop
jmp
sbb
cmp
hlt
inc
xchg
xor
les
cmp
jno
ret
loop
adc
jle
into
jo
adc
fstpt
in
lret
into
bound
xchg
fidivrs
and
movsb
rorl
shr
das
inc
sbb
push
push
adc
inc
mov
ss
jno
scas
shl
dec
inc
je
or
gs
aad
xchg
movsb
pop
jmp
loopne
mov
test
insl
aam
push
or
inc
mov
popa
inc
pop
mov
jle
xor
test
idivl
loop
movsb
out
mov
cmp
xchg
xchg
lret
inc
repnz
and
xchg
inc
adc
getsec
mov
outsb
mov
stos
in
mov
insl
sub
sbb
std
stos
gs
and
vpsadbw
cmc
outsl
adc
mov
jge
cltd
fidivrs
insl
fwait
jmp
or
or
mov
rcrb
fistl
ljmp
and
insl
sub
pop
divl
loopne
int
in
int3
ficoml
dec
mov
clc
test
mov
jge
sub
mov
push
sub
int3
mov
lret
mov
jle
int
pop
lahf
cwtl
or
cs
ja
cmpsl
or
in
enter
movsl
jno
hlt
xchg
cmovo
movsb
notb
lret
lret
hlt
imulb
sub
clc
jmp
in
clc
cmp
sbb
inc
sub
leave
pop
outsb
dec
lock
icebp
shrl
sbb
in
jno
lcall
add
sbb
inc
pop
ljmp
and
loop
lds
adc
andl
push
or
sub
inc
and
sti
mov
jmp
sub
adc
decb
andl
sub
fnstsw
push
test
addl
clc
xor
fnstsw
cmp
sub
icebp
or
and
ret
pop
out
dec
and
das
out
test
rcrl
jb
stos
add
fnstsw
ret
outsb
out
push
sbb
mov
rolb
pop
adc
mov
sar
jl
push
repz
sbb
mov
push
cwtl
aad
shlb
iret
mov
push
mov
cmp
add
sub
arpl
push
inc
cmpb
out
mov
push
pop
mov
sbb
es
add
cmpsb
jae
and
repz
fnstsw
int
push
mov
sub
pop
push
loop
adc
pusha
inc
sbb
push
jl
shlb
push
negl
test
push
cmp
sahf
xor
je
jp
inc
ss
mov
sbb
cmp
jbe
pop
mov
xchg
jb
mov
decb
adc
in
xor
loopne
xchg
stc
cmc
jae
jmp
and
movsl
inc
aam
fnsave
dec
icebp
addb
add
jmp
lcall
int3
cmp
mov
jno
es
leave
out
addr16
or
fidivs
sbb
dec
cmc
and
imull
mov
xchg
insl
cld
mov
scas
les
fcmovu
out
popa
jecxz
in
bound
pop
imul
fidivrs
shl
clc
xchg
add
outsb
add
std
or
leave
imul
bound
push
dec
cwtl
es
jl
shrb
push
mov
push
imul
push
or
mov
out
call
cmp
stos
inc
arpl
jge
das
das
adc
dec
jnp
scas
cltd
jle
ds
negb
in
outsb
inc
inc
mov
push
dec
vphaddbw
xchg
in
sbb
mov
and
in
inc
aas
xchg
les
fcmovu
xor
fmuls
dec
inc
dec
outsb
pop
arpl
ds
mov
dec
dec
mov
dec
adc
outsb
enter
scas
scas
das
imul
mov
xor
jle
rolb
lods
cwtl
pushaw
mov
test
xor
sbb
test
mov
leave
stc
lea
sbb
imul
adc
mov
or
rorb
jns
cmpsl
push
fidivl
bound
inc
in
sbb
add
out
adc
dec
or
sub
mov
pushf
dec
call
into
pop
ljmp
movsb
push
rcll
dec
dec
addr16
pop
adc
stos
or
cmpsl
in
and
pop
insl
iret
and
pop
shlb
lahf
pop
sub
fidivl
mov
scas
stc
jge
lret
sbb
sub
push
movsl
mov
pushf
mov
test
jbe
loop
icebp
push
xor
dec
cmp
scas
sahf
out
push
nop
dec
jns
dec
push
loop
jo
scas
dec
add
fwait
adc
fbld
fsubl
jbe
cmp
cmp
gs
lret
xchg
fiadds
pusha
subb
pop
hlt
mov
pop
movsb
sbb
jno
adc
je
mull
dec
inc
pop
jge
ljmp
pop
js
cmp
lds
adc
mov
jg
jmp
mov
je
mov
jns
mov
movsb
cmp
inc
nop
sub
adc
xchg
add
ret
mov
cmc
popf
call
int
aas
inc
adc
das
dec
movsb
pop
adcl
lea
mov
aad
imul
mov
push
and
jl
dec
mov
and
aad
add
rorl
dec
rcl
inc
lds
mov
pop
jb
shrl
pop
testb
dec
push
repz
mov
lock
inc
mov
fs
dec
rorl
pop
or
and
es
or
bound
or
or
aam
mov
cs
icebp
push
or
cmp
xchg
mov
inc
bound
mov
jle
push
outsb
push
lods
ret
jg
imul
bound
int
pop
popf
pop
cmp
cs
add
inc
mov
lds
insb
dec
iret
xor
fiaddl
aam
push
inc
adc
rolb
pop
mov
push
clc
sahf
sbb
popa
stc
jg
jmp
adc
push
adcl
cmp
decl
mov
adc
dec
mov
dec
movb
jb
enter
xchg
incb
lcall
aam
sub
sbb
das
xchg
js
arpl
jb
jnp
push
mov
mov
or
push
xchg
sub
iret
pop
cld
push
shrb
pop
lods
jns
insl
test
push
push
mov
fcmovu
mov
xchg
cmp
jp
and
inc
xchg
cmp
adc
icebp
cwtl
jne
inc
or
out
push
jge
or
mov
lock
cld
or
mov
fdivl
mov
cmovl
ss
lahf
push
rcl
mov
sub
fiaddl
adc
xchg
outsb
jge
xchg
sub
add
mov
inc
mov
jo
lea
iret
jo
scas
and
mov
pop
dec
jb
add
jge
fldenv
push
lahf
daa
movsb
pushw
lret
sub
push
js
push
sub
inc
sbb
xor
fucom
in
stc
sbb
xchg
push
sahf
sti
cmp
out
xor
mov
cmp
popf
ljmp
popf
jb
cli
xor
scas
mov
pop
jo
lahf
lahf
push
adc
mov
sub
scas
jp
fmuls
mov
rclb
cmpsl
lds
in
and
and
les
inc
fsubrp
jmp
data16
aam
push
push
out
dec
aad
sub
sahf
jno
jl
ss
sti
scas
mov
jnp
pop
pop
out
stc
test
mov
mov
pop
in
pop
pushf
mov
jl
roll
jae
push
idivl
sbb
sub
xor
fdivs
ficompl
fisttps
in
popa
lods
sub
ret
inc
mov
out
add
rcll
inc
and
xorl
mov
push
daa
lcall
or
test
les
negb
stc
test
repnz
or
cmp
daa
add
fcmove
iret
add
dec
lahf
lods
test
in
dec
inc
push
sahf
hlt
cs
icebp
aas
pop
arpl
pop
in
pop
push
arpl
pop
xor
sub
ljmp
mov
outsl
mov
pop
adc
imul
jns
test
sbb
mov
sti
mov
sbb
stos
cmp
adc
stos
inc
inc
inc
popf
and
pop
add
jno
in
inc
pop
pop
into
sbb
fwait
or
mov
rcrl
sbb
jae
decl
lea
pop
jns
mov
push
and
inc
mov
pop
push
mov
mov
lret
test
sub
enter
das
addr16
icebp
popa
stc
arpl
pop
ja
movsb
xchg
jp
loop
movsl
aad
cli
lahf
hlt
pop
adc
pop
sub
test
or
pushw
push
hlt
inc
mov
mov
es
jle
movsb
test
sub
das
scas
inc
fwait
int
jnp
xchg
add
or
push
dec
sub
jmp
out
popa
xchg
sbb
mov
mov
stc
jge
daa
and
sahf
push
mov
adc
insl
test
add
jno
lret
out
scas
popa
clc
loopne
push
fs
iret
daa
jbe
pop
xor
fnstsw
xchg
sti
int
outsl
ror
pop
jle
cmp
lds
adcl
sbb
push
js
imul
jmp
leave
insl
lcall
imul
inc
sbb
inc
lea
cmp
mov
out
mov
xchg
insl
add
dec
mov
jae
mov
iret
sub
jb
das
xchg
add
js
or
and
aaa
cmpsb
xchg
push
fmull
decl
enter
sbb
dec
mov
add
in
mov
divb
cmp
dec
fcompl
jl
fadd
xchg
xor
cmc
xchg
sahf
xor
inc
les
ja
jle
test
sub
xor
imul
add
adc
mov
adc
push
or
jecxz
xor
jmp
test
add
cltd
fs
cwtl
sbb
ja
cmp
nop
push
aas
js
dec
mov
adcb
push
lret
cwtl
sahf
out
leave
cmp
xchg
inc
jmp
cltd
sbb
gs
jb
stos
test
lret
pushf
mov
sub
push
jo
cmp
and
mov
cmp
or
outsb
aam
xbegin
enter
fs
xorl
push
and
fisubrs
push
dec
cmc
inc
fisubs
dec
push
aas
out
mov
in
shr
addb
sbb
lds
out
or
jecxz
add
shrl
dec
or
sub
ror
dec
add
xchg
imul
imul
repnz
sub
scas
jecxz
push
jnp
mov
fdivr
outsl
std
outsl
fcmovnb
xchg
adc
xchg
sub
sub
jo
and
adc
testl
mov
je
insb
xor
lret
iret
push
into
push
insl
repz
ja
sbb
dec
das
pop
negb
ss
xor
icebp
sbb
xchg
push
push
lahf
pop
addr16
sbb
inc
jg
pusha
fcmovnb
pop
push
jb
in
enter
mov
fstp
push
lock
stos
in
stos
out
and
xchg
push
lods
add
out
test
mov
sar
or
movsl
int3
dec
loope
imul
jno
xchg
gs
lcall
pop
stc
nop
dec
testb
fnsave
cmpsb
inc
int
xor
out
inc
xlat
mov
inc
fidivs
out
js
ds
scas
inc
je
cmp
sbb
jmp
mov
sub
mov
push
mov
fnstenv
gs
clc
pop
jb
dec
int
cmpsb
shlb
and
rcrl
dec
loopne
sub
fwait
push
sahf
xor
add
test
or
mov
lcall
mov
popa
rcrl
movsl
cmp
iret
mov
mov
data16
or
xsha1
cmpsb
int
jmp
fbstp
cwtl
and
or
ja
fcomps
sbbb
dec
testb
in
lret
sbb
test
lods
xchg
idivb
imul
ret
movsb
in
data16
jb
cltd
in
jns
push
clc
inc
jae
push
enter
inc
push
sbb
jg
mov
inc
inc
mov
out
hlt
les
mov
lret
cmp
sub
popa
jns
mov
das
sub
sbbl
or
jecxz
jl
xor
nop
test
xchg
xor
fisttps
push
or
mov
xor
int
cmp
dec
and
sbb
xchg
lret
or
mov
mov
mov
push
inc
stc
sub
adc
and
loopne
outsb
add
add
loopne
cmp
nop
xorl
jle
bound
negb
addb
ljmp
inc
orb
or
inc
mov
in
call
or
push
ja
fdivrl
cmpsl
hlt
out
sbb
cmp
mov
dec
sarb
jmp
inc
shlb
mov
in
into
pop
mov
push
roll
and
push
lret
xor
or
xor
in
lret
mov
mov
fwait
or
repz
ja
sarl
dec
cmp
ret
ficompl
pop
fmulp
pop
inc
cmpsl
push
ret
xchg
imul
out
fsubrs
adc
push
les
mov
mov
clc
shrl
scas
fs
ret
add
ljmp
iret
xor
aam
jmp
and
aam
aas
mov
add
pop
and
es
les
scas
mov
dec
loopne
imul
popf
push
jae
imul
push
mov
jo
dec
mov
bound
dec
in
add
sbb
nop
insb
std
xor
leave
scas
mov
push
in
shl
in
fsubrs
sub
ffree
pop
xor
std
lahf
ss
and
cwtl
lods
dec
jecxz
inc
stc
loope
add
and
scas
dec
mov
mov
test
fs
or
or
mov
mov
test
or
fistl
cltd
xchg
dec
loope
sbb
dec
sbb
mov
stc
popl
pop
test
lcall
cwtl
mov
sti
test
add
arpl
mov
test
adc
sarl
jl
inc
mov
inc
stc
js
jno
xor
push
cltd
mov
adc
inc
ja
xchg
iret
out
cli
cltd
cmpsl
aam
sub
dec
push
jo
imul
push
inc
fdivs
xlat
pop
dec
dec
jmp
fiadds
cmp
aas
sbb
iret
and
dec
xchg
test
add
inc
mov
inc
gs
fndisi(8087
stc
or
in
dec
cld
cmp
nop
push
and
fisttps
and
mov
xor
and
add
frstor
clc
and
test
sub
cmp
xchg
xor
insb
mulb
add
mov
push
jnp
mov
dec
lret
nop
cmp
xlat
sbb
jecxz
cmp
mov
lea
cli
ja
and
test
pusha
cltd
xor
mov
insb
sbb
int
mov
push
jle
andl
fists
shrl
or
jnp
fwait
scas
dec
mov
jne
jbe
ljmp
outsb
nop
pushl
inc
xor
add
and
dec
fstpl
dec
stos
or
rcrl
jge
jl
scas
loopne
in
inc
int
inc
out
jb
outsl
pop
pop
push
jo
inc
cmp
pop
stos
sub
cld
and
xor
inc
lods
inc
jne
pop
scas
pop
adc
ss
scas
xor
xchg
inc
int3
xchg
movsl
loop
sbb
mov
in
insb
xchg
imul
mov
add
clc
cld
stos
sub
adc
pusha
cwtl
mov
cltd
test
jb
rcl
jb
pop
repz
fisubs
sbb
xor
hlt
in
push
out
push
mov
imul
dec
loope
repnz
sub
push
stos
xchg
test
inc
out
and
lret
mov
mov
es
fcomip
mov
jge
mov
sub
aam
add
and
aaa
sub
lock
jmp
or
leave
push
jle
adcl
adc
pop
sbb
cwtl
xchg
sub
shll
loop
lock
or
loopne
mov
dec
orb
cmp
idivb
movsl
fisubrs
outsb
ror
jg
inc
add
sbb
adc
xor
mov
nop
mov
push
xchg
leave
cmc
mov
enter
jae
das
push
stc
cwtl
xor
idivb
pop
leave
pusha
xchg
daa
inc
xlat
push
sbb
inc
leave
jne
cmp
out
xchg
sub
imul
jae
sbb
add
ds
xor
test
out
in
jo
cli
pushf
outsb
clc
int
pop
outsl
scas
jecxz
hlt
std
cld
sub
pusha
or
call
xor
bound
xchg
pop
and
loope
aam
ret
lods
test
dec
and
fucom
xchg
or
roll
insl
and
jnp
sbb
inc
rorb
push
mov
fwait
lods
pop
icebp
fstpl
std
mov
and
cld
test
popl
mov
sub
inc
popf
adc
fmul
scas
out
fwait
jg
sub
dec
popf
cli
fucomi
mov
xor
inc
push
push
mov
cmc
les
decl
mov
test
ja
aad
imul
clc
push
addr16
test
cmpsb
lock
sbb
inc
pop
push
and
aas
adc
lds
fisttpll
or
ror
pop
testb
xlat
ficoml
call
and
push
jle
cmp
test
cmp
push
mov
addr16
sbb
lods
push
push
es
sbb
adc
cld
xchg
sbb
jmp
jne
sahf
push
inc
cmp
rcr
mov
sbb
pop
add
inc
aam
inc
adc
xor
jne
shl
insb
dec
fstps
inc
push
mov
int
out
and
push
in
test
add
loop
invd
bound
or
outsb
pop
lods
jmp
sub
add
je
xor
icebp
xchg
adc
jbe
cmp
xchg
mov
fwait
pushf
xor
cmp
mov
stc
movl
and
mov
cli
mov
add
push
imul
test
leave
ds
sbbl
rolb
in
push
in
jb
inc
sub
cmp
lret
pop
inc
mov
pop
mov
push
xchg
adc
xor
jmp
xor
mov
test
dec
pop
std
xor
pop
push
and
ja
fwait
push
bound
stc
aas
fdivr
mov
lret
inc
out
ds
jne
rcrl
xchg
jge
fstpl
repz
sbb
xchg
lcall
ss
jne
jno
cli
push
add
mov
sbb
mov
rcrl
push
aad
cmpb
xchg
dec
or
pop
and
sbb
xor
ss
ja
add
cwtl
push
jmp
std
push
xchg
dec
pcmpgtd
or
pusha
push
xor
mov
push
mov
clc
icebp
inc
sbb
push
add
sbbl
stos
xor
aad
push
or
inc
inc
leave
fstl
dec
arpl
push
shl
out
xor
xchg
fstpl
popf
pop
popf
push
fnsave
imul
ljmp
push
mov
pop
js
orb
xchg
or
sbb
jp
and
enter
std
sub
int
das
fwait
xor
or
dec
dec
push
mov
pop
pop
inc
sbb
out
cwtl
das
push
jecxz
gs
cmpsl
jp
cwtl
in
jbe
in
mov
adc
cld
insl
lods
mov
mov
sbb
in
out
mov
mov
push
or
loopne
fwait
aad
mov
xor
cmpl
insb
push
mov
call
or
mov
xor
addr16
dec
cmpsb
dec
imul
repnz
call
test
pusha
cli
sahf
dec
sahf
inc
int3
fbld
iret
mov
pusha
aaa
mov
jne
lock
ljmp
inc
mov
sbb
repnz
or
cmpsb
ljmp
and
cmp
ret
in
mov
ret
cmp
mov
imul
pop
test
or
push
cld
loop
mov
ljmp
push
in
jbe
mov
xchg
sub
cmp
sub
jl
test
in
push
xor
ja
jecxz
in
sbb
cmpsl
push
mov
faddl
mov
shr
cmp
ret
pop
cmpsl
add
jb
mov
fisttps
out
push
orb
aam
sbb
das
adc
pop
jge
mov
std
jle
sub
jno
push
or
loop
jb
inc
out
and
arpl
negb
mov
sarb
push
add
rolb
add
pop
movsb
and
push
testl
jge
cli
pushf
into
int3
imul
and
pushf
fadd
mov
jbe
int3
stos
cmp
jnp
cmp
mov
lret
mov
push
movsl
xchg
imul
mov
mov
insb
mov
mov
mov
arpl
lret
sub
xor
and
push
fadd
loop
adc
popf
js
dec
dec
je
add
pushf
int3
arpl
push
out
mov
ljmp
popa
inc
jl
cmp
jo
push
mov
enter
xchg
mov
in
bound
rcrb
pop
out
scas
mov
cwtl
jne
pop
lock
mov
test
xchg
lahf
negb
pop
scas
push
push
sub
inc
xor
xchg
add
ret
pop
sub
ja
inc
les
std
pop
add
popa
int3
mov
lret
aas
rorb
cmp
sub
inc
mov
fbstp
movsb
add
xor
pop
mov
dec
mov
cltd
adc
test
jmp
or
or
xor
test
cmpsl
jae
dec
lahf
fsts
lods
scas
pushf
ret
loopne
mov
leave
repnz
cs
je
jne
bound
mov
jle
iret
inc
testb
rolb
cltd
lahf
outsb
jge
jo
and
or
jno
push
aam
inc
push
in
cmc
add
mov
int3
loopne
sub
in
lcall
insl
cld
adc
mov
adc
jmp
enter
jns
aad
out
in
dec
jmp
or
inc
or
roll
add
jnp
test
dec
cmp
pop
push
xchg
outsb
cmp
pop
xor
int
jae
or
push
and
and
cmc
push
xchg
sub
stc
xor
testl
arpl
push
cltd
mov
fs
insl
sub
decb
loopne
in
dec
in
inc
aam
lret
bound
arpl
and
mov
dec
pop
lea
mov
push
push
cmpsb
imul
lret
rcrb
lds
test
and
sbb
lds
cmp
mov
popf
les
test
rorb
adc
shrb
repnz
lock
cli
or
rclb
rolb
or
xchg
sbb
mov
dec
lods
and
mov
mov
dec
sbb
jne
adc
xchg
inc
outsb
adc
loope
and
insl
rcl
cmp
or
jg
in
push
sbb
mov
sbb
cli
pushf
das
sbb
and
mov
bound
mov
lret
mov
out
iret
jns
lret
push
jge
pop
jne
shll
adc
xor
sbb
aaa
jnp
jnp
pop
pusha
jnp
pop
adc
mov
inc
sbb
iret
mov
push
inc
out
mov
sub
xlat
aam
js
lock
mov
mov
mov
addr16
dec
inc
or
mov
mov
cmp
push
outsb
popa
inc
std
dec
add
repz
adc
rclb
sbb
and
sub
mov
popf
jo
aam
lods
push
mov
jo,pt
xor
fbld
je
or
xlat
insl
movsb
pop
pop
push
daa
inc
stos
xor
mov
lea
mov
adc
imul
aad
leave
and
xlat
out
daa
sbb
mov
push
sub
call
lods
push
push
jmp
jecxz
or
mov
inc
cli
add
fnstcw
outsb
incb
sti
icebp
jmp
sbb
xor
call
shl
mov
dec
std
adc
repnz
adc
outsb
or
sahf
push
mov
cmpsb
or
adc
xor
xor
dec
imul
rcl
sub
mov
mov
mov
ret
sub
pushl
sub
lods
frstor
loope
lea
xchg
and
push
sbb
repz
push
dec
scas
inc
push
jg
enter
sub
dec
lret
lock
mov
add
mov
sarl
sti
test
repz
mov
insb
xchg
push
lds
andl
xor
jbe
dec
call
or
cld
push
loope
mov
mull
pop
mov
mov
mov
push
cmp
pop
lods
jp
mov
pusha
pushf
scas
cmpsb
out
xchg
pop
or
inc
test
mov
and
cmp
loopne
in
xor
mov
into
ss
inc
popf
repz
jno
pop
fstl
mov
and
jge
insb
int
mov
add
cwtl
sub
jp
aas
mov
stos
test
cmp
dec
hlt
mov
mov
lods
xchg
add
xchg
je
adc
xor
lds
push
lcall
cwtl
pushw
or
decl
daa
sbbb
xor
add
mov
mov
ljmp
xchg
sub
mov
mov
loopne
ficomps
sub
sub
inc
jg
mov
imul
rcll
push
es
sahf
out
dec
in
lret
cmp
clc
ret
sbb
and
add
sbb
xchg
scas
mov
pop
cmpsb
xor
inc
loopne
cmc
push
xor
mov
jg
mov
mov
outsl
imul
pop
or
lds
pop
icebp
mov
fistps
pushf
xor
adc
push
adc
cmp
cmpsb
mov
pop
cmp
xchg
jl
lret
sub
fdivl
jge
outsl
fdivs
ss
aaa
ja
ljmp
jno
es
jmp
out
mov
es
inc
or
cmpsl
xor
pop
pop
rcrl
outsl
mov
cmp
cs
aad
mov
rorb
xchg
scas
rol
push
inc
out
mov
fdivrs
rcll
sarl
dec
ljmp
jb
mov
sbb
xchg
rol
mov
bound
iret
push
leave
sub
jge
fbstp
mov
xchg
xchg
mov
aad
add
jge
inc
pop
jle
inc
fstpt
lahf
jmp
jp
dec
ja
stos
mov
or
jl
sub
movsl
sbb
xlat
jno
scas
jmp
addl
jb
clc
pushf
scas
mov
pop
lret
push
int
daa
mov
popa
adc
or
mov
inc
pop
repz
mov
cmp
mov
movsb
jae
cmc
aaa
sbb
scas
and
mov
jb
cmc
rol
scas
adc
lcall
sbb
mov
bound
xchg
push
dec
mov
stc
push
xor
add
inc
imull
loopne
push
xlat
pop
aad
pop
dec
mov
bnd
int3
mov
inc
shr
stc
cltd
mov
pusha
movsb
std
jge
sbb
shrb
sti
xchg
jp
jl
xor
push
fdivr
pop
sub
inc
adc
and
hlt
gs
mov
dec
dec
mov
cmpsl
sarl
jnp
pop
in
dec
jae
inc
sbb
push
jo
cwtl
fwait
aas
add
and
xchg
jno
sub
push
inc
out
jne
mov
inc
ljmp
fdivrl
lcall
nop
insb
adc
insb
cmp
arpl
add
out
mov
es
nop
je
cli
movsl
in
lahf
xsha256
pop
mov
cmp
mov
push
push
test
out
mov
jno
jmp
orl
popa
addr16
xchg
pop
mov
mov
add
jb
aad
or
dec
ds
mov
rcl
test
repnz
filds
arpl
adc
sub
inc
push
stos
test
rcll
cmpsb
inc
ja
adc
or
dec
push
add
mov
and
jle
pop
popf
dec
sti
movd
shrb
cmc
ficoms
cmp
andb
jp
mov
mov
cmpsl
jecxz
sti
push
xor
popf
cmpsl
ss
push
dec
add
mov
push
out
fiadds
lds
mov
xor
mov
addl
fcomps
sbb
and
push
fwait
jbe
cmp
outsl
jo
sbb
sub
rorl
pop
in
mov
add
cmp
push
xchg
pop
adc
jb
ss
scas
add
push
sub
je
test
pop
and
sahf
jne
movsb
addr16
adc
lret
repnz
cs
add
mov
cmp
movb
aam
ret
xchg
add
shrl
lock
mov
ret
sarl
inc
mov
and
into
xor
rcll
lret
adc
and
movsl
popf
push
imul
push
xchg
cmpsb
std
cmp
pop
insb
and
aaa
pop
out
test
test
fidivs
leave
lods
mov
leave
test
jp
fucomip
mov
aaa
repz
inc
xor
flds
or
push
inc
clc
enter
leave
inc
icebp
rorb
jmp
mov
pop
call
lret
adcl
les
test
cmp
dec
call
jg
add
inc
inc
push
out
push
repnz
push
popf
xchg
xchg
xor
andb
mov
popf
push
ja
outsb
mov
hlt
xchg
lods
stos
and
aam
jns
mov
test
fld1
orb
pop
call
inc
add
les
pop
ss
xchg
jecxz
cmpsb
and
mov
addr16
sahf
leave
gs
and
ficomps
bound
xor
sti
pop
ret
xor
lods
repnz
mov
jp
pop
pop
mov
xchg
push
aad
xchg
mov
fisubl
xchg
sbb
dec
jbe
ret
iret
ja
sub
pushl
add
repz
ljmp
pop
jecxz
test
push
testb
ja
fsubs
mov
or
mov
cmc
and
call
cmp
push
int3
and
stos
in
sbb
ret
inc
in
add
iret
gs
sbbl
clc
filds
test
xor
loop
mov
push
frstor
ret
jnp
mov
and
xor
iret
push
js
cmovg
cmp
lods
orb
mov
scas
and
sbbl
mov
pop
mov
push
stos
out
cs
dec
arpl
jl
cmp
mov
mov
pop
push
mov
xchg
add
iret
xchg
xor
cld
xchg
jg
pop
xchg
mov
scas
sub
xchg
add
jecxz
cmp
adc
sbb
cs
xchg
imul
int
aam
gs
push
add
das
mov
or
mov
jno
mov
out
fwait
sbb
arpl
lret
in
les
bnd
shll
xchg
jno
xchg
cld
cwtl
scas
jbe
or
jg
and
add
sahf
testb
mov
pushf
pop
lahf
sar
popf
aaa
imul
mov
adc
xor
lret
ljmp
mov
insl
push
fisubs
and
push
shlb
sbb
scas
jecxz
call
rolb
stos
idivb
addl
lock
and
punpckhdq
and
xor
cmpsl
sahf
dec
jle
sti
and
out
sub
pop
sbb
lret
insb
pop
rcrl
lcall
xchg
mov
je
into
jne
stc
cmp
xlat
fcmovb
testl
dec
pop
mov
mov
mov
push
iret
xor
stos
dec
js
sti
fwait
xor
cld
fimuls
imul
jp
sbb
daa
pop
shrl
pop
sub
inc
sahf
outsb
pushf
cmp
jg
mov
sub
or
lcall
sbb
aam
jl
in
push
jnp
mov
adc
push
xor
jmp
mov
mov
push
mov
fsubrs
mov
jae
stos
fs
push
jle
xor
xor
aad
sahf
icebp
insb
add
mov
negb
dec
jle
xor
xor
and
jp
outsb
shlb
jnp
cmpxchg
inc
jp
rcrl
insb
aas
pop
clc
mov
mov
mov
jno
xchg
inc
sbb
lock
inc
shl
sti
outsl
jmp
sahf
gs
insl
jl
xchg
sbb
sbb
dec
sarb
sub
rorl
and
aas
add
mov
push
inc
loop
addr16
and
mov
adc
mov
jg
orl
outsl
iret
mov
xor
notb
daa
pop
cmc
cmp
stc
and
adc
imul
jno
lret
insl
cwtl
scas
call
sarb
fs
and
int
je
inc
xchg
ds
cltd
repnz
jl
add
test
fs
xor
popf
das
inc
shll
stc
sbb
or
jle
sub
es
push
jl
loopne
pop
negb
jp
push
xor
sub
in
fdiv
sbb
mov
out
fisubl
mov
push
mov
test
adc
idiv
and
and
cmc
in
ret
pop
mov
xor
adc
out
add
mov
xchg
xchg
add
mov
movsb
pop
push
pop
mov
jg
into
jle
and
ds
jne
bnd
lds
pop
outsb
cli
pop
dec
aad
inc
repz
mov
jnp
xchg
xorl
and
inc
dec
dec
sbb
and
xor
in
xor
mov
sbb
dec
jns
rorl
lea
xor
lea
lret
sub
addr16
add
in
aaa
outsl
xor
sahf
mov
scas
popa
add
sti
cmp
sub
or
stos
inc
mov
push
fwait
add
xor
xor
push
xchg
jecxz
sti
test
sub
repz
pusha
test
adcl
dec
loope
cmp
stc
fdiv
xor
jb
popa
mov
pop
and
sbb
iret
push
imul
mov
jns
stc
mov
sarl
adc
jno
sub
cmp
pushf
pop
pop
adcb
add
clc
orb
push
add
or
shl
jle
dec
push
lret
xchg
and
mov
jmp
push
into
repz
and
lods
or
lods
pop
clc
sbb
shrl
out
jns
nop
jl
cld
rorl
addr16
leave
push
filds
cmp
ror
mov
sub
push
mov
inc
push
mov
gs
loopne
mov
xchg
dec
cmp
mov
mov
rcrb
pop
inc
gs
out
imul
lret
popf
xor
pusha
push
or
add
adc
and
mov
mov
popf
push
jbe
mov
and
out
divb
and
dec
jne
inc
mov
icebp
push
in
and
sahf
cmc
fcompl
or
enter
jno
lcall
ret
mov
xor
xor
lret
bound
loopne
aad
mov
xorl
arpl
fsubrp
insb
add
sbb
out
or
scas
jns
orb
icebp
sahf
adc
add
jae
push
loopne
sub
mov
mov
mov
ds
out
push
mov
addr16
push
adc
xor
or
cmp
addb
test
test
xor
mov
mov
and
out
xor
nop
addr16
pop
es
or
dec
cmp
stc
test
pop
mov
xchg
jae
add
xor
and
inc
and
aaa
imul
xor
scas
push
lcall
bnd
scas
dec
adc
cmp
outsl
xchg
cs
push
lahf
lret
and
test
sbbb
sbb
loop
cmpsl
pop
push
popf
xchg
mov
add
loope
add
or
push
in
stos
inc
cmp
fstl
into
cmp
inc
mov
arpl
or
adc
sti
ret
sub
inc
mov
pop
ficoml
sub
ret
les
ja
in
pop
js
stos
mov
jnp
xchg
sbb
aas
sbb
fsubs
mov
call
enter
adc
ss
jo
pop
arpl
nop
or
mov
jb
out
pop
hlt
or
stos
push
push
sub
sbb
xlat
repz
fstpt
pop
nop
mov
mov
enter
and
ds
jmp
or
xchg
push
es
xor
lock
ja
leave
test
pop
shrl
js
cmp
scas
cwtl
inc
push
leave
iret
sti
xchg
add
insb
sti
iret
or
add
dec
push
mov
dec
clc
sar
ficomps
push
lcall
or
jp
pop
stos
popa
nop
nop
cmc
dec
xorb
mov
arpl
je
fsubrs
xchg
push
lahf
cli
xor
andl
add
or
mov
outsb
cmp
dec
dec
mov
fldt
sbb
out
dec
mov
adc
xor
imul
and
repz
rcrb
stos
or
aam
fucomp
cmp
je
mov
xchg
sbb
aam
rolb
outsl
adc
int3
push
outsl
jns
fidivl
icebp
jae
or
leave
inc
inc
je
cltd
or
dec
cmp
sbb
sbb
sarl
jbe
dec
cwtl
insb
cmc
add
in
out
mov
mov
mov
sbb
mov
addr16
aaa
push
cmpsb
push
cs
jmp
mov
cltd
imul
xor
pop
jbe
jmp
cmp
es
icebp
adc
sub
jp
xchg
mov
pop
sub
jg
jne
cs
lahf
nop
into
add
dec
pop
mov
xlat
lret
movsl
sub
lahf
mov
jae
xchg
pusha
mull
and
ficoml
test
bswap
faddl
das
mov
rcrl
xor
int
jp
push
pop
sub
adc
mov
add
aaa
jne
sub
mov
leave
pusha
fadd
cmpl
out
test
xor
pop
std
adc
jp
xorb
stc
inc
js
mov
cmc
dec
dec
nop
sarb
ja
movsb
out
inc
leave
mov
xor
fdivs
add
mov
data16
inc
or
cmp
or
loope
mov
mov
repz
mov
hlt
sub
scas
in
lock
shrl
movsb
cmp
pop
out
mov
fwait
cld
aaa
aam
insb
lds
leave
and
adc
cli
sbb
scas
mov
fistps
fwait
jbe
push
les
xchg
sub
or
inc
add
inc
or
nop
es
clc
int3
dec
cmc
or
mov
mov
add
movsl
out
cmpsl
cmp
test
sarl
mov
jge
stc
or
mov
sarb
push
cmp
outsl
and
fstp
push
pop
pushf
cld
add
pop
mov
xchg
cli
push
subb
push
fsts
lock
icebp
out
or
adc
mov
test
pop
jmp
push
ja
and
bound
pop
add
es
or
jb
cltd
and
dec
addb
mov
xchg
pop
pop
icebp
sbb
ss
jo
fmuls
jb
hlt
mov
aad
push
add
cmp
shl
icebp
pop
xor
into
scas
rcrb
ljmp
jg
push
push
cmc
jnp
inc
andb
adc
leave
adc
sbb
mov
popf
ss
sub
mov
loopne
sbb
cmp
pushf
fwait
xlat
jge
pop
lcall
hlt
imull
and
xchg
mov
sbb
lea
sahf
jne
pop
cmp
in
into
sbb
bound
pushf
cld
adc
xchg
mov
fimuls
mov
and
sub
scas
cmpsb
gs
pop
lods
xchg
cmp
pop
mov
fsubrp
test
mov
ss
je
jbe
aad
aam
jb
mov
ror
out
jp
push
imul
insb
stc
daa
bound
push
cmp
stc
dec
hlt
out
clc
insb
push
xor
data16
aam
adc
cmpsl
cld
insb
push
orb
push
jmp
sub
jns
mov
add
add
enter
mov
mov
clc
push
mulb
jecxz
lods
push
ljmp
cmp
movsl
pop
repnz
pop
mov
mov
mov
xor
or
and
insb
adc
orw
or
int3
adc
add
sti
packssdw
jp
or
xchg
mov
add
jecxz
pop
sbb
add
mov
mov
les
leave
jmp
xor
mov
dec
or
in
xor
in
mov
mov
xchg
dec
mov
mov
hlt
test
imul
add
pop
mov
add
insb
dec
fisubl
or
mov
xlat
add
imulb
syscall
sbb
icebp
inc
add
ja
lcall
shlb
and
jp
jecxz
jo
push
mov
stos
inc
pop
and
int
jl
pop
and
cmp
sub
andb
cld
sub
jl
aam
clc
aas
nop
sbb
pop
xor
mov
pop
stos
pop
fdivrl
jo
mov
test
xchg
mov
ss
ret
enter
push
mov
sbb
mov
cmp
pusha
rcll
and
fsts
in
add
xchg
lds
shld
cmp
fdivl
push
mov
test
data16
insl
adc
arpl
mov
fs
xlat
daa
sub
cmp
mov
fcompl
mov
pop
lcall
cwtl
stos
add
cmpsl
int
and
stos
mov
mov
add
imul
mov
in
test
lcall
loope
adc
cmp
dec
cwtl
mov
xchg
jno
push
adc
adc
shlb
push
mov
aam
inc
dec
leave
xchg
mov
iret
sti
test
push
popf
int
push
pusha
icebp
movb
andl
sub
inc
cli
xchg
aaa
lret
arpl
jmp
dec
iret
loop
push
insb
mov
push
imul
pop
mov
nop
xchg
cmp
iret
sbb
cmc
pop
mov
sub
inc
add
inc
lret
inc
push
fs
cmp
pop
loop
rcr
mov
cmp
bound
push
mov
scas
mov
adc
jle
pop
mov
inc
add
shrl
mov
aas
int3
lods
insl
inc
pop
push
inc
fsubrp
call
add
or
cmp
adc
dec
fisubs
out
and
push
test
sbb
fwait
and
aad
das
out
andl
popf
cwtl
xchg
mov
aaa
inc
int3
and
cmp
jns
cmpsb
sahf
pop
jno
xchg
aad
je
jne
popa
xchg
es
jg
and
gs
dec
push
cwtl
clc
and
movsb
jge
xchg
push
adc
test
fs
fnsave
mov
fwait
ror
loope
sbb
cld
mov
ds
push
xor
andb
dec
fidivs
cmp
jno
pop
outsb
addr16
testb
sbb
add
jmp
imul
or
and
sub
xor
cmp
sub
cli
sbb
pop
cmp
mov
ds
push
lahf
mov
fisubs
ret
add
aas
lea
or
out
clc
popf
enter
xorl
mov
pop
mov
sub
mov
cmp
cmp
mov
loope
push
in
je
lret
pop
in
test
stos
call
xchg
and
sub
cs
leave
dec
dec
pop
dec
sub
dec
stc
ljmp
imul
mov
add
push
xchg
add
push
neg
jo
mov
insl
xchg
fiadds
add
shr
xchg
arpl
lahf
mov
aaa
iret
jno
and
mov
rorl
pop
inc
fiaddl
or
adc
jecxz
rorb
xor
inc
push
int3
push
out
daa
or
xchg
xchg
aaa
outsb
push
cmp
adc
pushf
jle
jle
enter
lret
pop
cmp
inc
sbb
fs
fwait
xchg
mov
fstl
incb
mov
cltd
dec
jle
xchg
sub
mov
loopne
adcb
shl
dec
cmp
shlb
js
out
lds
sub
int
inc
mov
leave
mov
xchg
xchg
cmp
jg
repnz
or
xor
mull
jo
sti
scas
inc
sub
int
mov
and
das
xchg
adc
add
xchg
sub
add
repz
mov
sbb
pushl
ret
dec
fsts
shlb
movsl
imul
or
add
xchg
pop
lea
mov
test
loope
xchg
cmp
das
test
movd
lea
dec
loope
les
push
mov
sti
xchg
push
xor
jmp
out
dec
dec
inc
lds
loop
dec
addl
cmp
in
adc
lahf
sbb
ret
std
stos
mov
sub
xor
jg
xchg
outsl
in
es
pop
mulb
mul
mov
ja
dec
in
cwtl
mov
dec
arpl
and
xor
adc
loopne
test
sub
push
mov
or
lret
stc
sarb
sub
scas
arpl
lret
lret
sti
or
stos
js
mov
xchg
into
js
or
lahf
sub
pop
cmp
mov
dec
pop
gs
sahf
jbe
push
cltd
mov
nop
in
test
jecxz
fstl
dec
dec
shll
out
mov
aaa
xchg
out
ret
out
rol
in
jecxz
insl
add
cmp
sbb
into
push
scas
pop
cmp
sbb
lea
aaa
into
adc
pop
mov
push
add
lret
or
xchg
and
xlat
mov
ret
pop
adc
cmc
push
push
jge
shll
ljmp
mov
test
mov
data16
lret
in
jle
jecxz
lret
adcw
jne
pop
fs
jge
cs
xor
pop
dec
call
adc
add
pop
jae
pusha
lods
rcl
adc
leave
xchg
fimull
ret
cli
xchg
lcall
ss
out
loope
test
mov
rorl
out
or
insb
xchg
inc
pop
fldcw
xchg
negl
mov
mov
cli
mov
push
lods
test
jnp
movsl
xor
les
sub
pushf
ret
stc
mov
lcall
mov
jmp
repnz
pop
pop
dec
ret
hlt
imul
xchg
adc
dec
dec
or
stos
dec
and
xor
and
stos
into
cmp
adc
jp
dec
out
sti
jns
xchg
insl
add
test
inc
sbb
je
push
out
hlt
xchg
pop
icebp
ds
pop
int
js
shll
and
int
and
jbe
adc
std
shll
insb
dec
fucom
or
dec
cmpsl
sbb
pop
out
dec
sbb
mov
push
dec
dec
adc
mov
push
fistps
sub
jo
mov
xchg
ret
xchg
inc
andl
sbb
and
aam
inc
jp
stos
int3
sbbl
sub
push
cwtl
push
insb
lcall
push
xor
fstpl
pushf
cmc
rcr
mov
sarl
imul
hlt
lea
jecxz
inc
stc
addr16
aam
ficomps
dec
xor
xchg
movsl
sbb
sti
sbb
mov
mov
in
adc
pop
test
pop
cmc
push
mov
jecxz
pop
sahf
addr16
jns
lea
mov
fldl
jg
jg
inc
insl
cld
ror
adc
or
sbb
jbe
test
test
aas
sbb
push
shrl
or
pop
in
push
dec
mov
add
and
push
lret
test
lahf
pop
stc
sub
xorb
clc
scas
dec
sbb
loop
testb
arpl
xchg
scas
popf
out
movsl
dec
cmp
rorl
mov
loop
pusha
popf
mov
repz
enter
into
fucom
mov
gs
xor
push
subl
sub
push
stc
es
dec
hlt
adc
add
imul
lahf
inc
inc
inc
arpl
fs
je
mov
dec
mov
ret
push
pop
aam
cmp
jbe
shr
ret
and
jo
data16
sar
inc
rorb
jge
dec
testl
imul
scas
jb
loop
fwait
popf
test
and
fcmove
push
pop
xchg
rcr
je
in
mov
mov
or
stos
repnz
dec
jecxz
js
xchg
stos
pushf
push
or
jno
sub
insb
aam
jns
insl
cmc
repz
in
pop
jle,pn
adc
inc
imul
push
jmp
mov
jmp
mov
nop
mov
mov
imul
das
pop
testb
xchg
testb
fstl
cld
push
dec
call
mov
pop
xlat
int3
lahf
test
repz
daa
sbb
lret
fs
or
jnp
push
jnp
les
cmp
pop
in
push
pop
ss
sub
lahf
jb
pop
xchg
cwtl
ja
dec
mov
sub
push
pop
pop
mov
addr16
xchg
sub
sbb
dec
xchg
sahf
cmp
mov
iret
enter
jo
je
fiadds
inc
sbb
push
mov
mov
lahf
pop
leave
dec
mov
es
pop
clc
and
fistpll
dec
scas
inc
jl
or
dec
sub
cmpsb
mov
mov
xor
lds
sub
in
add
adc
fisttpll
and
pop
les
outsl
dec
out
cld
aaa
pop
cmp
xchg
out
movsb
andl
movsb
shrl
sub
test
sbb
scas
subl
mov
aad
sub
mull
stc
push
imul
sbb
cmpsl
pushf
pop
insl
add
mov
mov
fwait
xchg
aad
jp
out
dec
fucomp
dec
out
dec
or
inc
into
jne
cmp
out
out
or
orl
mov
push
test
outsl
rclb
sub
cmp
shlb
sub
lea
push
or
and
sbb
aam
xchg
nop
daa
push
pop
mov
xchg
mov
pop
cmp
loopne
dec
xchg
dec
dec
lock
imul
mov
xor
cli
daa
cmp
fdivs
mov
sub
call
add
jp
pop
les
pusha
mov
loope
out
jmp
push
in
pop
dec
mov
xlat
arpl
add
pop
fisubs
cld
test
pop
fcmovu
sbb
sub
mov
fisttpll
sub
jp
jmp
or
lcall
es
fwait
xlat
outsb
test
xchg
cli
cmpsb
cmc
jecxz
scas
movsl
cmp
adc
repnz
lds
push
stc
mov
sbb
lahf
xlat
movsb
cs
fcompl
sti
fistpll
ret
data16
inc
js
xor
aaa
xchg
ds
push
xchg
fisttpl
pop
push
and
hlt
mov
mov
xchg
sub
shr
xchg
enter
stc
mov
sbb
sub
jg
fisttpll
in
ja
add
mov
mov
add
scas
or
mov
fildll
mov
pop
movsb
lcall
das
shlb
or
mov
cmpsl
pop
jp
pop
lret
add
inc
int3
xchg
mov
push
adc
and
call
mov
sbb
push
xchg
sbb
push
jmp
xlat
xchg
cmp
sub
pop
fstl
add
mov
out
add
shl
mov
roll
adc
lcall
mov
cmp
pop
adc
std
data16
pop
leave
add
ret
adc
pop
inc
pop
mov
push
repz
dec
cmp
stc
pop
cli
xor
xlat
orb
cmpsb
dec
push
and
icebp
adc
xor
cmp
mov
jp
and
push
or
dec
lcall
mov
sahf
xchg
adc
jb
mov
test
fisttpll
divl
aam
das
push
cmp
in
lahf
stos
test
rcrl
mov
xchg
mov
fcomps
imul
orb
jmp
fbstp
sbb
mov
mov
mov
jecxz
dec
stos
jg
pop
gs
mov
dec
mov
cmc
sbb
xchg
sti
cld
mov
sbb
cltd
in
xchg
mov
aad
jns
es
cmpsl
shlb
or
xlat
push
pop
call
xor
jb
rep
jmp
sbb
cmp
or
jg
xor
push
fisubs
cmp
outsl
inc
movsb
lods
add
sub
mov
sub
sbb
loope
pop
mov
sbb
sub
sub
jle
lcall
ljmp
ret
fistpl
icebp
push
push
cld
pop
xor
loop
lcall
adc
mov
jp
mov
mov
sbb
out
int
negb
push
repz
cld
add
jo
inc
sbb
inc
out
or
add
aam
repnz
leave
fldenv
xorb
lret
mov
mov
subl
xchg
popf
sar
or
repnz
cmp
add
jnp
inc
jl
sti
cltd
repnz
hlt
movsl
clc
sbb
rcrb
pop
jmp
xor
mov
mov
lret
out
icebp
add
cld
pop
les
stc
sbb
scas
popf
loopne
inc
test
adc
je
sarl
test
mov
int3
cmp
add
shrb
mov
push
movsl
sub
push
iret
je
repnz
cmpsb
inc
jne
and
pop
and
ds
ja
pop
test
scas
xchg
add
xchg
adc
jno
test
int
sub
push
push
inc
sarb
push
bound
test
data16
imul
das
add
imul
fiaddl
push
pop
xor
mov
mov
orl
push
xchg
sub
xchg
or
mov
mov
std
out
inc
xlat
mov
add
popf
jge
clc
and
orl
jmp
mov
test
clc
adc
jecxz
arpl
negb
das
cld
ljmp
push
cmp
add
sub
sbb
dec
out
push
mov
ja
into
push
add
repz
lods
cmp
cltd
cmc
adc
jle
shrl
int3
les
xor
inc
fidivrs
cltd
lahf
sbbl
mov
in
add
sbb
mov
ret
xor
call
dec
mov
jne
add
mov
xor
scas
fsubrl
andb
mov
mov
push
bswap
cmpsb
mull
andb
adc
cmc
pmaxub
int3
int3
inc
leave
pop
fs
mov
rcll
sub
hlt
or
push
imul
mov
pop
jnp
out
dec
pop
rorb
jb
mov
pushf
cli
fistpl
mov
add
add
loopne
jo
inc
je
cmpsl
mov
add
stc
mov
dec
scas
stc
jae
mov
or
mov
out
movsl
xor
scas
daa
xchg
sti
fnsave
lds
dec
add
gs
push
pop
lret
pop
and
xchg
push
out
jne
inc
adc
insl
xchg
or
mov
int3
arpl
push
mov
addr16
lods
xchg
out
stos
push
and
xchg
popa
clc
ret
push
sbb
cwtl
cs
int
lcall
sbb
inc
das
rcl
adc
fidivrs
xor
popa
mov
or
xchg
sub
push
mov
pop
imul
sub
bound
push
jmp
into
orb
in
sbb
sub
jbe
fs
cmpsl
xor
outsb
and
push
insb
lcall
nop
popa
aas
aad
test
rcll
adc
je
and
mov
mov
dec
jmp
mov
mov
push
outsl
iret
pop
repnz
cwtl
stc
or
xchg
mov
dec
pushf
jle
mov
jns
pop
outsb
shr
and
into
sbb
lcall
dec
loop
jmp
ret
pop
xchg
ja
and
movsb
les
xchg
mov
mov
or
clc
mov
xchg
ja
mov
movsb
add
adc
jl
mov
cmpsl
pop
flds
mov
push
lods
push
cmp
jo
mov
xchg
mov
in
hlt
mov
and
inc
mov
cmpsl
mov
sub
push
in
std
sbb
mov
inc
testl
xchg
push
sahf
adc
mov
xchg
mov
inc
int
sbb
jno
roll
mov
push
inc
enter
sub
push
inc
add
mov
mov
sbb
dec
cmp
cmp
xchg
cmp
imul
adc
mov
fisubrl
add
stos
lahf
lock
cmp
sar
fcoml
cmpsb
jbe
fldcw
loope
pushf
inc
xchg
cmp
notb
rcll
fsin
jg
fbstp
les
lea
into
adc
or
outsl
and
imul
dec
xor
cmp
pop
call
loopne
push
fs
loope
into
test
hlt
push
repz
scas
and
jnp
cmp
sbb
mov
or
xor
hlt
pop
pop
ljmp
call
scas
sub
xchg
popf
cmp
add
ret
repz
popl
add
lret
mov
dec
mov
fiaddl
and
mov
fisubs
lds
cld
mov
icebp
sbb
xchg
sbb
jb
pop
movsb
nop
stc
push
or
xor
jp
and
or
sub
stc
pop
sahf
in
pushf
xor
lea
cmp
out
aas
dec
repnz
jmp
shrb
dec
inc
rolb
lret
jg
inc
xor
pushf
gs
jmp
shll
cli
pusha
rcrl
int
inc
mov
add
test
mov
stos
repz
popf
in
add
xchg
jle
xor
outsb
iret
or
jg
mov
jno
pop
cmpsb
dec
mov
sub
mov
sub
adc
xchg
loope
dec
push
sub
or
dec
xchg
inc
es
test
int
out
movsb
push
stos
jecxz
jecxz
icebp
jnp
ffree
adc
pop
and
and
mov
jl
lret
pop
insb
inc
add
test
xchg
push
mov
stos
sub
aas
push
je
insb
imul
sbb
test
inc
clc
shlb
loopne
add
out
pop
sbb
sbb
xor
je
cld
enter
add
popa
ja
adc
in
xchg
scas
in
shll
out
test
shl
loopne
xlat
cld
xchg
leave
xor
add
out
incb
mov
cli
enter
xchg
decb
icebp
jns
ficompl
sahf
mov
das
lods
cmp
gs
xorb
fprem1
sahf
xchg
scas
xlat
lds
adc
xchg
jg
aas
stos
lea
fsubs
dec
pop
loopne
mov
cmpsb
dec
loope
out
test
adc
out
jge
xchg
pop
push
mov
repz
mov
mov
icebp
enter
xor
ror
sbb
sub
sbb
fs
rol
ss
push
hlt
out
xor
push
xchg
dec
lret
in
dec
daa
aad
stos
inc
ret
pop
ljmp
push
hlt
or
xchg
push
mov
add
sub
das
cmp
outsl
daa
outsl
push
push
cmp
sarb
jp
gs
in
test
sbb
xor
sub
rcl
test
mov
test
adc
xchg
repnz
cmpsb
sbb
sbb
orb
push
mov
adc
aam
mov
inc
sbb
jo
sub
mov
add
push
adc
imul
roll
xchg
jge
lret
and
jmp
xchg
adc
mov
sbb
dec
and
push
mov
xor
mov
imull
sbb
sahf
outsb
test
xchg
into
mov
test
in
or
jae
fucomp
jg
mov
mov
dec
repnz
mov
sbb
stos
lahf
pusha
fwait
sub
scas
add
and
add
inc
xchg
jbe,pn
sbb
hlt
popa
insl
ja
aad
addb
subb
mov
cmp
inc
jmp
jne
xchg
nop
sub
fcmove
loopne
mov
add
js
xchg
mov
cmp
in
daa
popa
dec
shr
les
arpl
cmp
movl
mov
adc
call
push
mov
push
hlt
dec
dec
in
out
call
loope,pt
cltd
mov
pushf
pop
push
or
push
inc
push
js
adc
daa
xchg
stos
inc
int3
lock
in
lret
sub
je
loop
fwait
and
cmp
jecxz
setp
cmp
mov
insl
cmp
xor
pop
hlt
test
test
inc
adc
jbe
andl
add
xchg
sub
adc
push
stos
jns
fmul
adc
pop
mov
adc
ja
cmp
ss
cmp
mov
xor
xor
and
inc
gs
add
mov
add
cmp
adc
stos
sbb
adc
cld
push
call
push
popa
mov
imul
jne
and
fbstp
push
imul
xor
push
outsb
insb
lret
add
mov
pop
sub
xor
xchg
js
mov
ret
imul
lret
aas
inc
js
mov
scas
lcall
enter
cmpsl
jmp
mov
into
shll
jb
in
movsl
sbb
cmp
mov
push
dec
pop
cmp
andb
jae
daa
adc
test
xchg
inc
xlat
int
hlt
pop
int
pop
adc
sti
jbe
testb
shl
add
push
hlt
jle
out
push
imul
inc
popf
nop
divl
lret
cmp
cmp
mov
cs
add
sub
lods
je
and
shll
cli
xor
pop
addr16
xor
push
ja
mov
cli
subb
nop
cmc
sahf
mov
insl
xchg
cld
pop
ret
mov
lods
sbb
pusha
sbb
push
lret
jp
in
lcall
mov
or
jb
dec
enter
cmp
test
pop
inc
push
adc
enter
xor
stos
mov
testl
ds
push
dec
inc
sbb
enter
add
je
push
fldl
mov
add
arpl
int3
imul
stos
in
push
sbb
pop
addr16
add
ja
addl
xor
mov
pop
lcall
test
imul
into
mov
inc
and
push
loopne
inc
or
bound
jl
inc
sub
test
push
nop
sbb
addr16
add
add
mov
in
inc
add
outsb
jmp
jo
cli
inc
and
sarl
repnz
cmp
mov
xor
cmp
imul
cmp
popf
insb
stos
pop
mov
xchg
test
into
fsubrs
sub
push
outsb
add
clc
inc
sbbl
cli
inc
ja
xor
xor
xchg
add
int
xor
mov
popf
iret
cltd
ficoms
pop
mov
clc
sub
sbb
scas
push
in
aam
outsb
push
flds
in
stos
push
notl
cmpsb
scas
xor
jae
inc
sbb
je
jp
sub
mov
ret
repz
adc
or
rclb
repnz
sub
sbbl
lret
rorl
push
dec
cmpsb
pop
in
movsb
movsl
aad
js
pop
movsl
sub
pop
xchg
jle
hlt
xchg
test
pop
pop
pusha
mov
xchg
jb
cld
aam
or
stc
imul
aam
in
and
jp
cltd
inc
test
mov
js
adc
pop
jle
jno
jb
andps
lcall
leave
mov
in
data16
mov
popa
fwait
or
cmp
xor
sub
and
arpl
xor
dec
dec
pusha
or
and
lds
xchg
insl
mov
push
orb
push
and
sbb
push
mov
fsubrp
cmp
dec
inc
adc
in
inc
inc
pusha
clc
sbbl
addl
fsts
fwait
sti
mov
xchg
notl
popf
jno
dec
xchg
xor
roll
add
jp
mov
adc
cmp
jns
inc
into
cli
mov
sahf
and
jo
jge
loopne
lcall
jbe
xor
xor
pop
jae
out
stc
and
lock
add
add
lock
jae
sbb
mov
lret
imul
mov
mov
cmc
dec
mov
inc
mov
dec
sbbb
jb
jle
sbb
mov
sahf
rcrl
scas
lret
push
movsl
mov
mov
idivb
out
daa
inc
pop
cmp
movsl
cmc
adc
mov
jp
test
in
dec
and
adc
dec
fcmovne
stos
es
or
cmp
mov
sbbl
shl
inc
cli
mov
jg
lds
aad
mov
jae
insb
ret
loop
add
push
cld
cld
mov
js
lock
icebp
loop
push
xchg
or
sub
or
jne
pop
mov
push
in
pop
cmpsb
stc
inc
insl
add
mov
push
scas
jb
mov
cmpsl
sub
sbb
jae
icebp
pop
scas
and
sbb
push
mov
push
inc
ja
inc
inc
sti
inc
int3
push
iret
lods
bnd
outsl
addr16
insl
or
outsl
dec
or
pusha
pop
pop
lods
inc
adc
dec
enter
push
fisttps
xchg
xchg
add
xchg
and
push
outsl
adc
pop
mov
stos
add
out
outsb
sahf
rorb
pop
pop
out
xor
insb
cld
bound
sti
xchg
sbb
lock
and
loop
pop
fbstp
jae
in
fwait
xor
mov
jl
hlt
repnz
and
in
push
inc
xchg
mov
pop
inc
jle
shrb
lahf
imul
jmp
sti
pop
scas
jnp
xchg
mov
dec
xor
dec
xchg
das
imul
xor
sub
cmp
jne
out
sahf
jb
dec
int3
je
pusha
mov
jmp
cwtl
ljmp
call
aam
outsl
ficoms
mov
fwait
out
fmull
mov
xor
ja
cmpsl
sub
jmp
cld
push
inc
lock
test
icebp
mov
mov
pop
push
cld
inc
mov
test
mov
push
cwtl
sbb
pop
mov
in
fistl
icebp
xor
xchg
xlat
mov
sbb
inc
pop
fs
push
subl
pop
xchg
inc
rcr
mov
les
jo
stc
or
icebp
xor
jnp
clc
mov
out
shrl
test
hlt
stos
ficomps
pop
dec
enterw
cmp
cld
test
mov
jo
cmp
jns
pop
subl
cwtl
fwait
add
lea
addr16
imul
inc
test
test
cli
dec
sbb
inc
mov
gs
leave
xchg
sbb
xchg
jmp
xor
imul
iret
lods
mov
mov
outsb
cmpb
flds
inc
sub
mov
dec
push
js
je
leave
adc
imul
pop
push
cbtw
jae
and
loop
jle
and
pop
inc
stc
popf
in
sahf
es
sbb
sub
lret
ja
ss
popa
xor
fadds
cmp
xor
js
push
neg
adc
fs
pop
popa
inc
out
lock
xchg
pop
inc
rcll
test
int3
xor
ret
inc
stos
ljmp
outsb
lods
nop
pop
mov
cmp
loope
jae
xchg
sbb
pop
scas
jae
jb
js
scas
fld
and
xor
ja
or
gs
lret
shll
and
push
mov
adc
pop
mov
pop
daa
jl
mov
push
mov
sub
aas
loop
push
adc
push
sahf
fcompl
push
jb
es
mov
js
xor
pushl
out
ss
out
mov
in
mov
or
es
sub
xchg
cmp
js
leave
push
lahf
inc
ss
sub
dec
mov
jns
mov
adcl
popa
push
mov
add
push
push
rorl
xchg
std
cld
jae
or
pop
mov
scas
mov
pop
mov
adc
xchg
cmpsb
sbb
outsl
into
push
out
rorb
std
pusha
sbb
cmp
push
cmp
clc
jae
push
jae
mov
loop
or
push
je
and
cmp
cmp
addr16
out
rcrl
cld
lret
adc
inc
ja
clc
ja
fsts
sub
ds
ja
scas
pop
bnd
pop
sbb
jge
pop
mov
clc
or
pop
out
loope
fptan
bound
pop
fdivl
jno
test
or
lea
jg
int
movsl
arpl
xchg
jnp
push
cmp
xor
xchg
sbb
mov
out
imul
fwait
das
pushf
inc
push
push
js
jbe
int3
push
insl
push
push
fisubs
gs
popf
push
mov
adc
sbb
mov
dec
push
cld
cmp
gs
dec
arpl
mov
or
pop
cmp
ficoms
cmpl
int
and
pop
movsl
hlt
subps
test
lahf
sbb
repz
lret
mov
in
ficomps
pushl
inc
jg
addr16
mov
ret
popa
mov
js
pop
and
cmp
xor
sub
ret
rclb
nop
cli
xchg
adc
push
std
ja
mov
lock
dec
out
mov
and
jns
loopne
push
aaa
scas
adc
jg
clc
xor
clc
jb
cmp
push
sub
add
ret
movsb
mov
sar
jl
mov
xchg
adc
add
jp
fistpl
lea
adc
jge
push
dec
incb
ret
mov
jnp
cmp
cmpsb
jge
lods
push
das
loopne
add
mov
mov
in
mov
mov
adc
stos
gs
mov
push
xor
and
sub
mov
rcl
stos
mov
xchg
fdivl
dec
jae
fs
mov
and
jecxz
xchg
das
rcr
jae
dec
xchg
stos
shll
ljmp
jle
cmp
in
lds
push
pop
adc
pop
xchg
in
sar
repz
ds
repz
scas
call
daa
jns
movsl
mov
xor
mov
scas
ss
addl
mov
or
out
push
cmpsb
mov
dec
cmpsl
lret
ss
stos
cmpsb
or
nop
cltd
stos
stos
decl
xchg
lret
xor
cmc
aam
ret
lea
add
das
sbb
add
adc
pop
cmpsb
out
inc
out
mov
in
mov
lods
jno
mov
inc
push
mov
or
push
les
loope
and
pop
xchg
pop
and
or
sub
or
mov
imul
je
rcrl
and
mov
xchg
loopne
lret
sahf
loope
js
xor
inc
push
pusha
and
xorl
pop
scas
scas
xchg
add
cld
leave
call
sub
fdivs
roll
mov
push
cmp
js
sbb
insl
xchg
cmp
fsubr
pop
rcl
push
std
lcall
mov
push
int
or
outsl
ja
or
shlb
fdivs
clc
or
addb
add
cmc
sub
roll
lcall
fisttpll
clc
inc
push
lret
out
test
cli
dec
xor
or
or
adc
pop
pop
mov
xadd
jnp
dec
mov
xchg
jl
repz
inc
unpckhps
test
lret
push
mov
mov
jnp
mov
xor
imul
in
ss
fwait
sti
pop
fildl
jg
mov
or
mov
js
inc
push
insw
add
mov
fmul
clc
sahf
loope
nop
xchg
jbe
ret
popf
lea
inc
lahf
pop
daa
xor
sub
jmp
add
xor
bound
loope
clc
jno
lods
test
adc
into
inc
or
ss
fsubrs
es
xchg
stos
jge
cmp
out
stos
dec
mov
sbb
inc
cwtl
adc
pop
call
and
sahf
data16
daa
jbe
xor
je
add
lods
xchg
jge
popf
mov
mov
sti
push
sbb
jmp
nop
rol
push
out
cmpsb
hlt
pop
jae
push
mov
fsubl
je
dec
jl
andb
pop
sub
fcoml
dec
test
mov
cmpsb
sarb
je
add
mov
jo
rorl
int3
sbb
int
cltd
and
and
pop
or
lcall
iret
negb
filds
or
cmpsl
push
in
cmpsl
out
xchg
jge
jecxz
xchg
lock
add
shlb
xchg
lock
mov
pop
sub
adc
loopne
sbb
mov
lcall
sub
mov
mov
or
xor
out
fbstp
xor
mov
mov
jb
inc
jmp
xlat
jmp
out
sub
pop
and
jg
mov
jp
xor
xchg
push
or
dec
pusha
xchg
mov
xchg
pop
call
push
jae
sub
or
lea
jno
jno
ret
sbb
adc
xor
jno
inc
cld
xor
inc
roll
testb
ja
movsb
mov
call
faddp
xchg
add
xchg
xor
insl
push
aas
jg
push
mov
adc
cmp
addb
out
test
cltd
fsubl
jae
imul
pushf
push
mov
sarl
and
push
pusha
aaa
or
test
leave
push
jmp
adc
mov
adc
pop
inc
lds
js
mov
ret
repz
outsb
adc
sub
rcl
mov
mov
dec
test
mov
idivb
add
scas
mov
jle
lret
fiaddl
adc
bound
fsts
or
in
inc
scas
imul
mov
je
leave
js
inc
lcall
fs
jns
cmc
dec
jmp
dec
sbb
xor
cmp
pop
in
fwait
xor
ljmp
dec
scas
inc
pop
push
sbb
inc
int
cmc
mov
jnp
lahf
mov
pusha
out
push
mov
push
mov
or
xchg
fistpll
sub
xchg
pop
push
jns
sub
sbb
dec
add
lret
lock
sub
sub
das
psubb
ljmp
ds
pushf
out
dec
sbb
in
pushl
loop
fstps
mov
aam
inc
xor
mov
jne
test
iret
push
push
adc
rcll
mov
outsb
or
add
subl
adc
adc
in
fwait
dec
lds
sub
fsubr
insl
push
lahf
inc
pop
ret
cmp
sub
dec
gs
xchg
call
frstor
dec
and
inc
push
add
push
jb
mov
jb
imul
xor
dec
iret
inc
popa
arpl
mov
lods
insb
jo
loopne
movsl
xor
pop
cmpsb
and
cltd
sub
push
pop
lea
mov
sub
out
xor
movsl
cmp
inc
sbb
test
jmp
sbb
pop
ljmp
jl
in
mov
cmp
and
mov
bound
fwait
mov
inc
sbb
stc
js
or
pop
dec
ret
roll
mov
pop
or
insl
mov
popf
dec
ret
fisttps
mov
hlt
sub
jbe
sub
cmp
push
pop
jle
bound
adc
iret
fcomi
sbb
mov
lods
into
jo
dec
mov
adc
mov
push
sub
icebp
push
mov
add
push
xchg
imul
test
dec
lcall
iret
mov
dec
imul
push
imull
mov
mov
test
js
sub
nop
mov
mov
or
xor
je
ds
mov
pop
in
mov
test
jbe
addr16
in
mov
xor
cmp
and
clc
hlt
cmpsl
outsb
cmp
mov
sub
les
sbb
jge
add
in
or
popf
testl
push
imul
inc
sub
cmp
ficomps
push
pushf
jnp
int
int
push
or
and
mov
loopne
sbb
in
repz
stos
dec
fs
mov
pushf
nop
push
push
fsubrs
jmp
xchg
jb
data16
mov
jmp
adcb
cmpsb
jns
jnp
leave
fnstenv
jae
pop
clc
cwtl
push
mov
sub
inc
and
cs
ja
or
leave
out
adc
xor
mov
cmp
popl
nop
verr
push
aas
or
out
inc
pop
in
bound
test
push
inc
lcall
push
int3
sti
sbb
cmp
cwtl
mov
fsubs
bound
clc
out
cmpsl
aaa
ret
or
fnstsw
push
and
imul
xorl
xchg
in
aam
inc
cmpsb
push
out
add
mov
lcall
out
add
or
sbb
ja
xor
cmpsl
lret
pop
add
inc
stos
scas
xchg
sub
pushf
or
jne
loop
xchg
cwtl
mov
in
ds
jle
test
js
mov
push
or
call
mov
hlt
and
push
dec
movsb
pop
outsl
push
xor
cmc
dec
mov
scas
pusha
subb
dec
pop
or
adc
jo
add
dec
xchg
add
test
test
in
and
je
sahf
arpl
mov
incl
sbb
lcall
popa
subl
push
cmpsl
pop
cmp
lock
ret
mov
add
jns
movsb
xchg
sbb
and
push
insl
mov
aam
push
xchg
xchg
adc
mov
scas
mov
das
add
cmp
insl
jo
pop
add
sub
jecxz
bound
sbb
ss
ss
xchg
and
push
pop
xlat
jg
or
stc
jnp
rolb
mov
loop
lock
aas
mov
in
data16
adc
popa
jbe
mov
dec
push
outsb
pop
dec
rcrb
movsb
xor
jmp
aam
inc
dec
sbb
pushf
loope
fwait
jne
aas
ljmp
xor
sbb
jmp
cmpsb
jo
dec
ja
dec
aad
out
push
loopne
das
xor
fsubs
cmc
mov
push
cld
in
xor
adc
pop
xor
out
lock
cmp
in
dec
cmp
cs
pop
inc
and
jne
mov
xchg
movsb
cmc
mov
cmp
je
xchg
test
mov
lods
loop
roll
sub
dec
xor
hlt
pop
into
popf
cmpsl
icebp
cmp
push
xor
and
cmp
add
jae
pop
pop
imul
das
addr16
mov
dec
popf
pop
mov
push
fwait
test
and
idiv
xchg
in
jno
lahf
aam
jb
mov
and
push
xor
and
aad
je
ja
mov
insl
push
add
jnp
push
or
cmp
push
adc
popf
stos
pop
fstps
shrb
popa
dec
lcall
pusha
cs
xorl
or
mov
insb
xchg
shl
pop
ret
pop
stos
jb
in
mov
aaa
add
xchg
add
test
outsl
into
std
push
cmpsl
mov
rolb
sbb
mov
mov
jge
out
sub
adc
and
js
cmp
add
xor
xor
cmp
adc
cld
enter
inc
jmp
sti
push
xor
push
xlat
push
cwtl
mov
dec
loopne
add
sti
and
ret
cmpsb
cmc
les
or
daa
pop
xchg
jnp
inc
adc
mov
and
dec
mov
es
ret
dec
inc
dec
gs
stc
jle
or
and
loop
lret
or
movsl
and
jl
inc
push
push
fiaddl
out
sahf
sti
mov
jbe
xor
or
adc
and
aam
jo
pop
push
mov
push
mov
jmp
js
dec
ss
mov
fucomi
rorl
in
pop
inc
imul
inc
ss
cmc
out
mov
pop
sbbl
fstpl
fildl
sbb
js
jnp
stc
in
and
cmpb
scas
std
push
mov
inc
dec
in
in
in
mov
mov
add
adc
push
clc
mov
pop
sahf
in
mov
pop
pop
fs
fimuls
fs
and
lods
jg
icebp
jl
dec
scas
shll
ficoml
test
fsubrs
push
loop
dec
pop
cmc
push
fidivrs
pop
adc
xchg
add
fidivl
fsubs
mov
add
mov
bound
jns
test
ret
push
and
mov
jne
enter
pop
repnz
push
ret
sub
out
and
aad
mov
xchg
xor
inc
adc
mov
outsb
outsl
bnd
pushf
or
dec
lret
jp
inc
adc
inc
inc
fldenv
cltd
or
loop
in
jmp
cli
lahf
mov
cltd
sbbl
ret
mov
adc
pop
push
movsb
lahf
mov
mov
lret
repz
pop
bound
js
xchg
or
cmpsb
push
and
sbb
xor
push
jp
mov
push
cmpsb
push
adcb
or
xor
add
push
andl
inc
mov
loopne
nop
lods
aaa
pop
adc
mov
movsb
repnz
dec
and
jp
lock
addr16
dec
or
rol
and
fidivrs
mov
add
and
hlt
pop
sub
mov
fdivs
pop
mov
lret
mov
in
xchg
or
fwait
mov
mov
fsubl
leave
inc
lret
jnp
cmp
dec
mov
ds
sbb
movhps
sbb
cmp
inc
hlt
adc
pop
sahf
icebp
mov
movsb
add
and
adc
push
cmpsb
outsl
loop
in
mov
add
mov
cmp
faddl
repnz
sub
or
sub
mov
push
stc
sub
jo
fadds
jno
cli
imul
adc
in
add
jns
js
xchg
loop
dec
inc
xchg
fsubs
divl
andb
add
in
aaa
mov
lods
lcall
mov
mov
add
sub
mov
cbtw
jmp
jecxz
sti
xchg
xchg
push
movsb
dec
pop
call
and
es
fwait
sub
in
clc
lock
scas
inc
mov
mov
jp
fdivrs
cs
mov
mov
push
in
push
stc
stos
or
sbb
fldenv
jg
fsubrl
xchg
cmp
or
stos
xor
xor
std
aam
xchg
ret
orl
and
cwtl
daa
es
fstl
stos
push
xor
sbb
jle
jbe
xchg
leave
push
push
in
ljmp
add
sub
cmp
loopne
stc
mov
dec
pop
cmp
adcb
pop
mov
cwtl
push
ljmp
adc
add
mov
jg
adc
push
mov
sub
sti
push
lods
push
add
addl
orb
mov
cmp
add
push
and
or
dec
xchg
inc
inc
scas
inc
lret
mov
mov
js
cmp
lahf
ljmp
ljmp
push
inc
pop
lock
mov
inc
movsb
or
xchg
dec
and
lea
pushf
lods
jo
xchg
stos
add
fldt
ja
xlat
mov
out
iret
jl
int3
sub
aad
and
sar
adc
push
xchg
arpl
pop
sbb
lret
mov
std
iret
dec
mov
lret
xchg
repz
xchg
or
mov
dec
rolb
mov
inc
jecxz
mov
icebp
out
loopne
les
mov
fdivrl
push
call
or
adc
insb
lret
or
mov
jecxz
push
mov
mov
lcall
out
int3
arpl
fcoms
pop
push
hlt
cmp
push
sbb
push
mov
sub
das
fstps
scas
or
xor
push
fdivrl
in
sub
and
inc
add
sbb
out
sbb
test
dec
stos
xchg
fwait
clc
pop
jbe
push
int3
outsl
popa
daa
push
mov
sub
das
mov
xchg
lds
mov
jle
jbe
pop
andl
inc
call
jg
sub
jmp
in
push
loopne
jb
outsb
fimull
arpl
fmul
pop
dec
adcl
cmc
aad
pop
outsl
xchg
scas
push
and
out
cmc
imul
mov
mov
xlat
cs
rol
add
push
jae
push
jmp
mov
mov
test
jns
dec
sti
jb
fildll
mov
jge
cmp
sub
add
add
cmp
jbe
lods
stos
mov
outsb
sbb
xchg
add
std
dec
stos
rcrl
popa
mov
fwait
out
inc
int
mov
shrb
cld
push
inc
stos
sub
aaa
or
inc
mov
dec
out
shl
js
das
jmp
sbb
xorl
jp
and
xchg
or
mov
in
addr16
push
enter
mov
test
test
fisubrs
cmpl
jbe
dec
hlt
into
and
lods
shrb
icebp
jnp
lods
jmp
jmp
add
pop
sbb
add
pop
clc
cmpl
and
dec
dec
sub
leave
mov
rorb
inc
jmp
frstor
xorb
mov
fisubs
fsubrl
nop
ret
jb
sbb
pop
testb
push
data16
add
mov
shr
sub
sub
dec
dec
loope
push
inc
jmp
inc
repz
push
cmp
sub
in
push
bound
adc
inc
subl
adc
sub
xor
fs
icebp
sahf
push
inc
push
movsl
xchg
xor
mov
sbbl
or
and
jne
outsb
js
pop
ljmp
aaa
test
stc
xchg
cmp
pop
jl
xchg
cs
add
xor
dec
jecxz
xchg
mov
adc
addb
incb
push
inc
lods
xor
sahf
clc
mov
sbbb
je
sbb
icebp
rorb
in
xchg
shll
call
jns
ret
fcoml
data16
ja
clc
cld
push
es
jnp
fiaddl
sti
dec
movsl
xchg
sub
sahf
or
adc
push
mov
jnp
lock
clc
das
or
imul
pop
movsl
paddusw
je
scas
mov
pop
dec
dec
cmp
push
into
in
adc
mov
scas
lock
inc
or
dec
lods
jb
jl
sub
mov
mov
cli
jne
stos
push
xchg
push
and
add
xchg
pop
stc
adc
or
mov
pop
xlat
insl
add
push
mov
mov
dec
cmc
lock
xor
cmpsl
jnp
flds
repz
sti
aaa
popa
dec
mov
and
in
test
push
aad
mov
mov
iret
cmp
shlb
shrb
fidivs
fwait
bound
sub
pop
mov
xor
jb
mov
ja
adcb
or
xchg
jge
dec
add
mov
ljmp
adc
ret
pop
pop
addl
lock
lock
cmp
test
jns
sub
fsts
or
mov
pop
test
movsb
mov
cmp
jp
inc
mov
push
mov
inc
mov
mov
mov
mov
pop
sarb
pusha
aam
in
xorl
outsl
push
mov
call
scas
pop
dec
stos
xchg
xchg
jae
inc
mov
or
sbb
pop
cmp
xchg
xor
sub
mov
inc
cmp
int3
mov
adc
push
movb
mov
pop
jg
js
and
test
pop
bound
cmpsl
xor
cltd
mov
incb
fmul
pushf
pop
mov
mov
sub
sbb
pop
jmp
mov
and
out
ret
pop
xchg
cmpsb
scas
mov
mov
ds
aam
mov
mov
gs
pop
xchg
lret
sub
cmp
pop
fnstenv
mov
inc
ret
in
adc
in
gs
or
cmp
clc
popa
pop
outsl
popf
xor
aam
std
nop
jmp
jl
subb
mov
push
adc
hlt
dec
mov
dec
sub
push
aad
fsubrs
hlt
call
add
enter
mov
mov
dec
pop
push
testl
push
call
in
ss
jnp
dec
aam
jnp
add
adc
out
insl
popa
rorl
dec
jl
dec
xor
lahf
lock
cwtl
popa
sub
out
push
and
and
lahf
loopne
cmpsl
outsw
stos
push
mov
sbb
jne
outsl
aaa
mov
test
or
push
mov
les
add
adc
dec
pop
xchg
popf
ret
inc
iret
clc
xchg
sub
mov
enter
mov
sub
xchg
dec
out
lahf
lock
lds
mov
shll
psrad
push
inc
or
aas
xlat
push
mov
hlt
stos
sbbl
mov
or
jae
mov
roll
mov
arpl
in
jae
push
jmp
les
mov
incl
xor
xchg
xchg
push
jbe
out
cmpsl
inc
sbb
into
shlb
pop
test
sub
out
push
mov
cwtl
xchg
push
out
out
pop
mov
fisttpl
icebp
jns
sahf
pop
cmpsl
out
rcrl
sub
pusha
pop
or
out
or
lods
push
xor
fcompl
ffreep
add
sbb
add
loop
das
dec
cmp
icebp
nop
xor
mov
hlt
movsl
and
fisubrl
jge
rcll
jge
out
dec
xor
dec
or
add
fwait
sbb
push
mov
pop
divl
dec
lret
push
jb
rolb
das
mov
add
insb
jge
addb
inc
fdivrl
mov
ret
dec
andl
xchg
stc
test
push
mov
iret
pop
xchg
xor
cmp
ret
xchg
ret
imul
push
jo
mov
adc
jno
add
ljmp
jo
movsl
lds
repnz
mov
add
sahf
dec
inc
out
data16
jmp
repnz
andl
xor
lret
div
inc
mov
dec
adcl
imul
mov
mov
fdivrl
out
and
loope
jmp
adc
xor
lds
jecxz
and
call
inc
dec
shlb
mulb
fcomi
sub
sti
jb
cmpsb
iret
mov
mov
and
sbb
xchg
lahf
div
gs
sub
insb
les
cmp
pop
scas
pusha
push
lods
push
cli
pop
xchg
pop
cmp
or
xor
push
jnp
shl
sbb
mov
leave
push
pop
fildll
cmp
mov
pop
test
out
data16
pop
movsb
xchg
jmp
int
push
sbb
int
into
in
aad
xchg
outsb
sub
sbb
mov
movsl
lock
in
cmp
leave
orb
in
mov
aas
pop
movsb
mov
std
jge
sbb
orl
or
je
hlt
das
inc
jbe
loope
xchg
addr16
mov
test
pop
ss
pop
mov
inc
dec
rclb
or
stc
fildll
mov
cmpsb
jecxz
repnz
call
jmp
jae
jp
xor
scas
xchg
pop
push
fsubr
aas
ja
shl
subb
mov
cmp
loop
lock
aad
pop
push
into
in
cmp
sub
fs
or
push
inc
pop
leave
jle
out
enter
test
mov
mov
lcall
stc
cmp
xchg
aad
cwtl
inc
inc
movsl
add
xchg
push
ss
andb
les
call
xrelease
stos
xlat
or
sbb
xchg
cmp
pop
mulb
xchg
and
and
insb
mov
stc
inc
outsl
adc
sub
fbstp
dec
dec
insl
jge
cmp
test
jnp
sub
mov
bound
mov
mov
cmp
pop
popa
xor
mov
push
mov
xor
cltd
sub
lock
xor
push
and
lods
bound
lahf
pop
ud2
jg
stc
in
test
or
push
fisubs
jb
jnp
jne
pop
adcb
ret
pop
mov
lods
add
sarb
push
push
cmpsb
shrb
mov
fnsave
xor
test
movsb
push
inc
adc
adc
adc
sahf
or
lods
scas
or
sub
dec
sti
sahf
xor
push
sub
push
mov
and
fistpl
fldt
fsubl
mov
mov
mov
ret
push
loop
out
out
mov
cmp
mov
xchg
sbb
shrb
sub
mov
scas
or
cwtl
lods
sti
pcmpgtd
push
outsb
lods
mov
add
fisubrl
les
pop
jae
lret
into
xchg
sbb
jae
mov
add
sbb
into
leave
mov
lea
repz
jge
jl,pn
sbb
add
inc
fmuls
inc
cmp
mov
insl
adc
mov
dec
pop
call
test
mov
hlt
xchg
xchg
jb
mov
xor
shrb
sbb
aas
aaa
push
sub
popf
jmp
ret
or
rcll
add
int3
mov
jns
dec
insb
fstps
lods
xchg
xchg
adc
push
fiadds
inc
pop
daa
mov
sar
or
idivb
stos
or
test
pop
test
sarl
loope
stos
lret
pop
mov
cmp
movsl
mov
xchg
outsl
ret
pop
add
lcall
xchg
mov
lret
clc
lret
outsb
push
imul
cmp
sub
popf
mov
lds
dec
push
aaa
dec
mov
mov
outsb
sub
std
inc
into
movsl
sti
scas
loop
dec
mov
mov
cli
xchg
gs
cwtl
inc
aas
xor
mov
pop
dec
push
aaa
cmp
mov
xchg
mov
mov
jle
pop
cmp
jmp
loopne
jnp
and
cltd
inc
aad
js
inc
shlb
test
cmc
fsts
mov
mov
lods
je
inc
lods
test
mov
cmp
imul
movsl
bnd
sbb
imul
arpl
outsl
inc
lods
push
call
cld
jbe
subb
or
out
fstpt
sub
outsl
jnp
cmp
jno
jbe
in
mov
test
icebp
mov
sbb
or
scas
jno
jecxz
lret
or
mov
ret
dec
hlt
adc
mov
mov
sti
test
fsub
stos
inc
sbb
dec
pop
mov
arpl
in
inc
pop
movsb
std
mov
js
int
mov
test
into
dec
sbb
aaa
mov
testl
jl
sub
xchg
mov
pop
dec
imul
jae
jl
push
fidivl
or
push
push
push
inc
stos
icebp
jg
mov
push
or
dec
and
mov
lds
pop
push
ret
jge
bound
cltd
test
xor
mov
mov
cmpsl
sbb
and
divb
mov
jge
flds
lods
sub
fwait
test
dec
xor
push
add
lods
inc
jne
jb
aas
push
dec
xlat
push
loopne
pop
sbb
iret
pop
inc
aaa
push
mov
pop
adc
icebp
mov
mov
leave
jle
psubsw
leave
rol
mov
into
in
mov
jl
pop
lods
in
cmp
icebp
out
sbb
dec
sub
jl
add
vmread
test
pop
sub
cmp
aaa
lods
mov
outsb
sbb
mov
clc
pushf
xchg
mov
mov
dec
sbb
cmc
or
dec
jecxz
xor
push
imul
adc
cmp
lret
cwtl
rorb
out
and
pop
sub
jg
mov
cmp
adc
inc
xor
cmp
insl
hlt
ret
jne
mov
outsl
pop
imul
adc
rcrb
mov
fsubl
sub
aaa
jbe
pushf
sti
xchg
into
ljmp
mov
data16
adc
fisubrs
xchg
loopne
aas
clc
push
add
sbb
inc
push
inc
movsl
cmp
pusha
xchg
out
inc
dec
jnp
outsb
aaa
add
outsl
es
push
mov
xor
jae
sti
movsl
pop
rclb
test
fidivrl
int3
outsl
jmp
xchg
push
adc
sbb
and
faddl
fdivp
push
inc
adc
cmp
dec
enter
sub
subl
push
rcr
mov
aas
mov
fisubrl
lods
adc
pop
dec
mov
sbbl
sbb
cmpb
and
sub
loope
negl
mov
popa
and
xchg
jle
js
add
mov
dec
cmp
rorb
xor
in
jnp
pop
cmp
nop
gs
and
mov
test
or
xchg
mov
xchg
sub
pop
repz
cs
mov
xchg
mov
cmp
sbb
pop
outsb
addb
adc
jecxz
cs
cmp
jno
unpcklps
hlt
cmp
jae
mov
pop
loope
aad
adc
icebp
out
out
cmp
sub
cltd
fistpl
dec
andb
loop
mov
dec
adc
jp
insl
daa
scas
and
add
jno
imul
pop
pop
pop
aas
mov
mov
data16
popa
mov
stos
in
xor
cmpsl
dec
mov
orl
lret
fnop
in
fistps
push
pop
sbb
test
lods
mov
inc
pop
dec
inc
into
imul
mov
push
jl
xor
sti
call
int3
stc
mov
jno
ror
pop
jne
inc
mov
test
cmpsl
lds
xlat
stos
cli
cmp
sub
mov
cli
sub
push
clc
xchg
cmp
rep
orl
fnstsw
out
mov
jno
inc
inc
mov
sub
dec
xchg
xchg
aaa
adc
push
jecxz
ss
mov
jmp
sub
dec
jae
mov
mov
pushf
mov
ljmp
and
jne
std
add
push
jae
frstor
das
pop
rcrb
mov
mov
push
sbb
sbb
leave
cmp
shrl
push
xchg
outsb
iret
icebp
lahf
cmpsb
aad
in
fidivrs
sbb
xchg
pop
xor
and
inc
ficomps
rolb
mov
dec
mov
addr16
xchg
arpl
or
add
xchg
and
push
mov
pushf
cwtl
push
and
cmpl
scas
sbb
stc
push
imul
xor
stos
jbe
outsl
addl
dec
fcmovu
iret
fnstcw
cwtl
adc
cltd
test
cld
push
lret
jb
jecxz
add
lds
mov
insb
jle
jecxz
aad
pop
shlb
out
addr16
in
cmp
mov
jns
sub
aad
ret
push
jle
and
and
fs
jmp
mov
inc
adc
pop
or
xor
pop
inc
xor
cmp
idiv
dec
and
fiadds
add
in
das
inc
inc
mov
push
pop
adc
shlb
sub
aaa
pop
out
loope
or
pop
inc
cwtl
out
divb
cmp
push
and
test
cmc
das
mov
clc
pop
es
sub
sahf
fdivp
jg
mov
dec
cmp
mov
xchg
adc
lahf
rcll
mov
in
add
cli
add
in
clc
adc
cmp
adc
insl
sub
dec
in
aad
adc
lcall
dec
outsb
sbb
cmp
and
fnstenv
mov
scas
inc
jecxz
jne
add
repnz
js
inc
cmpsl
bound
into
ja
jmp
fidivl
test
cmpsl
push
and
incl
aad
xlat
adc
inc
mov
xor
fistl
adc
fnsave
fisttps
shlb
push
mov
stc
outsl
les
push
mov
daa
mov
add
mov
es
inc
fdivrl
or
and
clc
mov
lods
inc
test
mov
js
inc
pop
clc
lret
ja
dec
mov
iret
pop
in
xor
cmp
lods
cmp
inc
push
js
sbb
jecxz
pop
gs
jle
xchg
sub
les
ret
lahf
sub
push
out
and
inc
xchg
or
jp
stos
sarb
mov
cs
mov
leave
sub
ds
add
pop
xlat
sbb
inc
push
ret
push
mov
in
out
popf
jmp
add
lods
aad
push
mov
roll
cmp
fwait
movsbl
mov
test
insb
cmp
scas
pop
repz
sar
xchg
fdivrs
push
sub
mov
cwtl
cmp
push
ljmp
push
nop
push
cmp
sub
mov
push
leave
adc
out
or
fsubl
scas
ret
cmp
adc
sbb
mov
mov
add
push
mov
movsb
cwtl
repz
dec
push
jo
jle
push
sbb
pop
fwait
xlat
sub
jo
addr16
rsqrtps
jle
movsl
stos
jmp
pop
lea
mov
mov
push
stos
sbbb
enter
pop
pop
ljmp
sub
filds
mov
stos
cmp
sti
jp
mov
sbb
mov
mov
jp
jns
inc
xchg
ret
in
scas
popa
and
push
jb
xor
mov
hlt
addr16
mov
mov
cmp
xor
xchg
sbb
pop
xchg
std
cmp
inc
fbstp
sti
rclb
pop
mov
pop
add
insb
mov
jno
jle
movsb
imul
sub
test
test
out
jge
subl
jecxz
rcrl
fs
out
out
pusha
cmp
mov
ja
icebp
leave
pop
dec
jbe
loopne
sbb
pop
xchg
mov
hlt
dec
inc
popa
jle
cmpsl
cltd
pop
adc
mov
jae
test
pop
outsl
andl
jo
mov
add
lret
hlt
iret
in
lea
sub
stos
dec
mov
adc
dec
push
lock
sub
cli
jmp
pop
insl
lcall
outsb
orl
loop
pop
mov
push
sub
mov
mov
daa
add
xorb
testb
roll
lcall
lods
mov
and
xchg
movsl
xchg
sub
xchg
sbb
cmpsb
inc
cmp
sub
in
rorb
cmp
cmp
push
das
jp
jp
push
xchg
out
repz
cmp
xchg
mov
in
lahf
test
inc
mov
xchg
loop
movsb
jns
mov
movsb
repnz
push
mov
push
lea
stos
jl
xchg
push
jmp
test
push
push
ds
adc
sbb
jecxz
stc
rol
out
enter
loopne
push
add
shl
dec
stos
sub
fistpl
inc
stc
dec
pop
sub
leave
pusha
sbb
out
or
pushf
insb
sub
shll
add
inc
pushw
mov
addr16
push
xchg
orb
fwait
hlt
in
lods
stc
popf
xchg
movsb
sbb
jmp
js
imulb
fidivrl
add
das
jmp
pop
mov
aad
scas
mov
mov
pop
popf
das
cmp
sti
inc
mov
sete
pop
leave
push
push
std
mov
das
sub
stos
xchg
leave
out
sbb
inc
dec
es
mov
fldl
sub
rcrb
in
in
ss
cmc
mov
fnstcw
mov
or
fs
xchg
push
inc
add
leave
ss
inc
pop
sbb
and
imul
jno
fs
push
adc
rorb
insl
mov
push
mov
or
aad
outsb
pop
orb
pushf
mov
xchg
imul
push
mov
stc
das
cmc
mov
daa
lds
xchg
mov
iret
cmpsb
jmp
imul
add
scas
inc
mov
pop
test
push
imul
pop
cld
out
inc
mov
mov
jg
xchg
pushf
shll
daa
std
rcrl
xor
iret
push
cmpsb
fmull
lods
lahf
out
sti
data16
lods
lahf
stos
jmp
test
or
test
out
out
jp
xorb
xchg
mov
cmpsb
out
mov
fiadds
paddq
add
mov
popa
pop
fidivrs
mov
push
sub
imul
shll
xor
mov
sub
inc
aad
cmp
jp
lods
in
xchg
add
das
inc
outsb
into
pop
sbb
cmp
mov
and
outsl
or
jp
push
push
cltd
xchg
aam
lahf
and
enter
xlat
stos
rolb
int
shrb
and
pop
aaa
test
inc
pop
mov
mov
fsubrl
mov
inc
ljmp
iret
ljmp
aam
rclb
addr16
andb
push
mov
cmc
sarb
sub
xor
adc
adc
sti
lret
jne
sbb
dec
out
jb
xchg
jg
test
push
add
mov
push
outsl
add
mov
in
mov
nop
clc
adc
fildl
ljmp
es
xor
sbb
or
sbb
push
addl
jbe
mov
jge
add
pop
imul
fcmovnu
arpl
test
adc
xchg
in
add
mov
adc
ret
pop
daa
cmc
pop
imul
pop
mov
sti
es
push
sbb
add
imul
daa
daa
xchg
pop
adc
cmp
jmp
inc
xlat
pop
les
jge
out
daa
jge
pop
aaa
mov
insb
movsb
aaa
dec
push
rcrl
mov
sub
shlb
shlb
xchg
int
int3
scas
cmp
fucomi
iret
push
insl
repnz
jle
mov
cli
dec
pop
mov
test
sbb
fnstenv
std
es
and
test
add
divl
or
fadds
sub
ret
mov
lcall
loope
sbb
clc
int
cmp
jmp
pop
jno
hlt
sbbl
xchg
jns
mov
mov
add
xlat
outsb
push
notl
aas
cmc
enter
cmp
clc
pop
imulb
cmp
pop
ret
in
jg
pop
lods
fsub
cmp
cmpsl
jbe
testl
jmp
daa
mov
int
ret
outsl
xor
mov
add
stos
repnz
xlat
ret
and
out
out
push
mov
or
xchg
adc
inc
mov
mov
sub
jp
cwtl
mov
push
push
jns
adc
mov
imul
and
mov
idivw
pop
mov
repnz
dec
jns
imul
in
dec
adc
mov
test
pop
aad
fs
push
test
xor
dec
xor
mov
loopne
push
repz
iret
pusha
popf
in
add
dec
mov
lods
loop
je
int
fmul
adc
mov
movsl
subb
js
add
push
jle
inc
push
xchg
push
and
sarl
xchg
jl
xor
shll
push
packsswb
fidivl
add
clc
popl
cmpsl
push
cltd
or
pop
clc
inc
lret
and
dec
dec
mov
push
scas
add
mov
fwait
pop
adc
mov
adc
push
jo
out
sub
push
outsb
cmp
cmc
jb
imul
stc
add
jle
xchg
stos
mov
imul
ret
push
cmpsb
cmp
xor
inc
pop
sub
int3
pop
jne
unpcklps
push
je
cld
movsl
jbe
or
rclb
sti
iret
xor
push
fldt
out
xchg
lods
dec
cmp
cmp
aam
dec
mov
adc
imul
pop
sbb
push
pusha
jp
out
test
push
lods
dec
fdivp
or
loope
mov
ds
inc
fldenv
cli
vmovq
cmp
lods
clc
xchg
outsl
les
jle
push
pop
jecxz
dec
sub
mov
scas
xlat
sub
jl
mov
shll
ja
call
cmp
jecxz
insl
sub
hlt
dec
bound
push
sub
in
cmp
jo
xchg
icebp
pushf
inc
pop
test
sub
jmp
cld
icebp
neg
push
dec
lret
ljmp
mov
es
mov
out
outsl
jno
in
adc
cmp
sbbl
mov
clc
xor
adc
leave
inc
dec
xchg
add
ljmp
cld
in
daa
jle
sbb
lret
mov
shl
mov
dec
adc
pop
in
pop
dec
cmp
add
push
mov
xchg
pop
movsb
xchg
aad
or
xor
shr
std
jl
xor
lods
jmp
sti
stos
popf
xor
aam
cmp
gs
sub
ljmp
mov
ss
mov
sbb
or
sub
mov
and
add
pusha
cld
mov
iret
jbe
add
add
inc
dec
add
and
add
stos
jo
aam
test
ljmp
mov
xchg
pop
push
inc
rol
out
aad
rorb
xchg
mov
cltd
fs
jle
add
jno
inc
shlb
int3
mov
dec
je
push
clc
mov
gs
repz
push
lea
dec
cmp
adc
inc
loop
jle
stos
inc
std
stos
xchg
jns
mov
add
jns
rcl
or
mov
mov
jno
cld
and
jg
adc
inc
mov
mov
xchg
adc
mov
popa
jnp
fisubrs
nopl
leave
adc
and
mov
mov
inc
scas
push
xchg
rol
xchg
mov
rcl
adc
mov
lods
cs
in
inc
iret
fwait
test
lret
jmp
xchg
lcall
dec
cs
fnstcw
and
ficomps
dec
cmpsl
icebp
movsl
popf
in
dec
dec
sti
cmp
dec
fcmovu
cli
pushf
pop
inc
inc
push
loopne
sti
xchg
test
int3
and
fwait
cmpsl
sbb
mov
cmp
lret
sub
test
fisttpl
outsb
fcomip
sahf
xchg
lock
dec
cmpb
hlt
out
sbb
fbld
jge
adc
jae
lcall
in
clc
and
inc
mov
js
dec
movsb
mov
jg
jl
pop
add
movsl
int3
lahf
stos
int
dec
dec
mov
mov
mov
push
gs
xlat
bound
cld
out
pop
je
inc
push
sbb
and
adc
lahf
adc
and
add
clc
jne
xor
adc
add
cmp
jge
dec
dec
nop
mov
inc
push
cmp
xor
in
dec
dec
sbb
pop
sbb
addr16
mov
inc
push
and
aaa
pop
xor
pop
lds
jle
cs
jns
pop
lcall
cmpsb
les
mov
in
stos
or
xchg
mov
adc
popa
sub
mov
xchg
jp
pop
cmp
inc
or
mov
pop
test
ret
jmp
in
call
repz
and
mov
lcall
repnz
rolb
mov
test
push
sub
adc
mov
mov
lea
iret
pop
or
sub
jnp
cmp
ffree
out
cwtl
xor
je
lds
pop
ret
mov
fsubl
xor
jbe
daa
pop
clc
in
cmp
aad
pop
fsubr
test
and
xor
fsubrp
xor
mov
or
ljmp
push
hlt
and
push
fnsave
scas
jmp
dec
in
xor
iret
add
dec
inc
cld
mov
add
aas
jno
sbb
jge
mov
fcmovbe
out
mov
or
inc
sbb
mov
je
data16
xor
in
sti
fwait
cmp
add
test
repnz
sbb
mov
xor
push
xchg
mov
mov
fsubs
pop
fnsave
mov
fwait
jl
jbe
add
in
dec
imulb
adc
xor
mov
jmp
lods
cmp
imul
daa
das
js
popa
inc
sbbl
or
mov
sub
jle
sub
jno
call
repnz
test
xor
js
sub
add
pop
add
dec
pusha
dec
stos
xchg
cmp
imul
movsb
out
pop
dec
sub
adc
xor
sbbl
cmp
cmpsb
aas
dec
sub
out
pop
xchg
xor
sti
mov
repz
add
and
pop
imul
lods
ljmp
test
jmp
lret
add
jl
push
lcall
pop
stos
jp
push
mov
push
scas
cmp
inc
mov
dec
mov
test
push
aas
les
icebp
andb
data16
sahf
lods
dec
shrb
pop
in
xchg
add
dec
or
cmpsl
lds
dec
jbe
push
inc
faddl
outsb
adc
ss
mov
xor
scas
mov
aaa
push
mov
mov
dec
mov
arpl
popa
pop
dec
pop
xchg
and
mov
xor
ret
mov
jecxz
lahf
fdivl
test
sbb
mov
jo
shrl
xchg
adc
stos
int3
clc
xchg
pop
int3
or
mulb
sbb
dec
inc
jmp
inc
or
adc
popf
cmpsb
mov
pop
xor
push
out
jge
imul
pop
push
outsl
repz
repnz
aam
lcall
cwtl
das
arpl
xchg
jbe
or
arpl
pushl
xor
out
sbb
shl
or
mov
pop
out
xlat
mov
dec
popf
mov
pop
pop
jae
insb
jl
xchg
loopne
push
adc
jge
lock
jne
inc
add
jne
pop
push
mov
adcl
fidivl
xchg
mov
ret
add
jbe
inc
stos
ja
gs
mov
xchg
ret
mov
int
mov
call
int
stc
notb
or
sub
mov
mov
or
das
jno
sahf
int
iretw
nop
in
insb
dec
add
in
push
insb
add
xchg
psraw
cmc
push
dec
mov
jecxz
ret
and
call
mov
loopne
cwtl
pop
inc
mov
jb
xor
jp
xchg
pop
shll
les
mov
mov
cmp
cli
jp
or
loopne
mov
fwait
add
sar
js
mov
xchg
or
sbb
data16
mov
roll
adc
cmp
push
cwtl
das
inc
es
fwait
pop
fdivl
int
jp
int3
inc
ja
jmp
bound
or
mov
sub
iret
push
jp
stc
xchg
jecxz
dec
test
pop
fisubrl
dec
loopne
sahf
sub
or
test
xor
sub
xchg
lock
and
jns
sub
aas
cmp
inc
xchg
rorb
jle
xchg
dec
in
popa
sub
push
xchg
test
inc
outsl
out
shll
sub
xchg
inc
push
push
ja
push
out
iret
lcall
fucomp
inc
pop
cwtl
or
jne
dec
push
jle
pop
int
insl
jb
cmp
and
cmpsl
stc
push
cmc
adc
aad
loopne
divb
pop
data16
mov
lret
cmp
or
addr16
sbb
cmp
xor
add
imul
push
push
inc
and
sub
fstl
and
and
cwtl
pusha
inc
int3
mov
jmp
mov
jbe
ds
push
bound
data16
dec
mov
adc
insb
orb
mov
jge
xor
pop
cmpsb
std
pop
sbb
sti
pop
xchg
fmuls
dec
ljmp
mov
dec
add
into
fmul
sbb
movsl
add
mov
inc
outsb
push
or
cmp
mov
aas
mov
fmulp
sarb
push
cmp
mov
and
addr16
mov
pop
cmp
into
daa
mov
cli
mov
and
mov
mov
adc
add
insl
mov
inc
xchg
mov
insl
push
fsubrs
ja
add
lcall
push
push
xchg
js
rorb
test
pop
ret
lock
out
lret
xor
mov
jg
cmp
sbb
dec
leave
push
jmp
jne
cld
jp
cli
scas
cli
addr16
or
int3
mov
loopne
fnsetpm(287
outsb
or
in
stos
inc
fcoms
cmp
fidivl
jmp
divb
ret
pop
adc
loop
dec
out
out
push
jo
xor
fisttps
cmc
cld
enter
iret
sub
rcrb
jge
decl
pminub
test
jb
add
xchg
push
repnz
or
cmp
xlat
or
pop
mov
push
and
in
insl
inc
loop
imul
mov
sub
sbb
mov
das
in
sti
into
push
add
xlat
stc
mov
or
pop
adc
pop
dec
add
mov
mov
fisubl
dec
scas
lahf
jae
mov
ret
cli
xchg
loope
jns
sahf
ret
repz
jge
outsl
or
sar
nop
push
out
mov
outsb
cmp
mov
mov
jl
dec
arpl
shl
jnp
mov
cli
or
add
out
push
and
gs
push
int3
fs
fistps
mov
mov
mov
mov
adc
sub
lock
dec
lods
dec
mov
xchg
loope
inc
cmp
adc
sub
loopne
rcrb
sbb
adc
sbb
ja
xchg
cmp
pop
cmpsl
pop
aad
pop
pop
xorl
mov
js
and
push
inc
pop
mov
inc
pop
stc
aaa
lcall
adc
addl
push
add
adc
jne
test
dec
imull
mov
aas
rolb
bound
je
xorb
lods
arpl
push
loopne
andb
mov
cmc
movsb
pusha
mov
dec
jne
cmp
ficoml
subb
jo
sub
insl
lods
out
inc
sbb
adcl
shlb
cmp
into
jle
push
cltd
ss
dec
xchg
mov
out
inc
mov
xchg
jge
cld
mov
jl
outsl
pusha
sbb
lcall
pop
call
adc
or
fsubs
hlt
jns
mov
orb
pop
xor
add
jmp
sbb
ss
push
cmp
mov
cmp
scas
mov
gs
andb
adc
xor
mov
orl
sub
xchg
fld
xchg
jle
jge
adc
cli
imul
dec
shrb
mov
subl
dec
mov
jmp
inc
lcall
out
cmp
mov
push
sbb
jnp
sbb
aaa
cli
test
aam
adc
orl
jmp
add
mov
adc
adc
xchg
sarb
cmpsl
pop
pop
xor
mov
mull
push
shlb
out
sub
pop
pop
push
and
dec
pop
pusha
inc
push
scas
sti
popf
cltd
sub
cltd
cmp
popf
repz
arpl
push
call
sub
xlat
fsubrl
inc
sbb
jo
and
fidivrl
sbbb
imul
mov
lods
or
cmp
lahf
and
ss
stc
push
fldt
lods
lods
xchg
popl
shl
repnz
pop
xor
out
cmp
daa
data16
xchg
gs
xor
lock
cmp
inc
in
cmp
sbb
dec
out
aas
out
mov
loope
cwtl
push
rorl
mov
je
sub
lahf
lea
xor
sar
push
push
sbbl
adc
mov
cwtl
clc
mov
loop
mov
addr16
enter
cmpsb
dec
aad
sbb
popa
fidivrl
call
in
ret
pop
std
sub
loope
xor
outsl
fwait
arpl
stos
push
mov
cmpl
scas
call
mov
test
in
xchg
pop
mov
xchg
mov
test
andl
lahf
das
orb
mov
push
aas
fstpl
sub
out
lods
mov
adc
das
jmp
add
sti
mov
stos
daa
sahf
in
lret
adc
insb
idivb
cwtl
mov
push
sub
dec
mov
jl
les
sbb
repnz
fcmovne
mov
mov
lret
test
fucomip
icebp
cltd
pcmpgtb
imul
dec
cmp
inc
cmp
or
dec
mov
or
xor
imul
enter
int
lcall
adc
pop
mov
cld
mov
add
mov
xchg
fnstenv
xchg
mov
xor
cmpsl
sub
andb
shrl
xchg
sub
xchg
lea
cwtl
xor
fsubrl
iret
stos
js
add
orb
aaa
or
cmp
xchg
and
and
xchg
cli
fmuls
sub
push
ljmp
fdivs
mov
sti
xchg
test
dec
sbb
inc
add
test
jno
mov
mov
jmp
dec
clc
aad
stc
repz
push
pop
inc
push
add
outsl
shll
subb
mov
mov
mov
and
out
mov
int
and
shrl
into
xor
sbb
inc
xchg
cmp
shrl
aas
pop
and
pop
jb
sbbl
adc
xor
fidivs
adc
inc
sbb
dec
pop
inc
loope
adc
xchg
sub
out
xchg
int3
jns
sbb
xor
push
xor
dec
sti
inc
testb
rcll
add
add
mov
dec
jbe
mov
adc
jbe
das
stc
mov
imul
add
cmpsb
ret
stc
inc
jp
lock
adc
jnp
xchg
sarl
inc
fbstp
dec
push
fiadds
or
adcl
daa
mov
adc
lods
insb
xlat
jmp
dec
and
repz
in
cmp
mov
add
sar
cmp
insb
mov
ja
fisttpl
add
das
cmpsb
jnp
aaa
sbbl
ss
pop
xor
sbb
stc
popa
cmpsl
test
fstl
mov
push
jle
lods
in
imul
adc
out
pop
jns
push
imul
inc
stos
mov
das
mov
stos
cmp
add
mov
push
dec
or
jle
sub
xchg
addl
out
xchg
pop
ljmp
push
sahf
fwait
jecxz
int
mov
or
mov
add
imul
xor
leave
push
das
aaa
testb
fld1
rcrl
jle
inc
cmp
jns
sub
mov
pushf
push
dec
cltd
out
xor
xor
shlb
xchg
cmpsl
sub
inc
popa
clc
jno
repnz
mov
sbb
outsl
cltd
cltd
or
mov
test
dec
fstl
in
aaa
int3
sub
or
cmpsb
xchg
mov
fbld
orb
int
sar
pop
inc
sti
fs
dec
nop
jno
iret
test
or
or
adc
subps
mov
and
out
mov
adc
dec
mov
push
push
repz
test
js
les
inc
sub
ds
lock
leave
add
je
add
jle
inc
jecxz
lahf
test
sub
cmp
iret
xchg
add
xchg
leave
out
adc
fidivs
fldl
push
loopne
in
mov
in
addr16
adcl
fimull
mulb
xchg
nop
popa
insl
rcll
ret
add
mov
es
and
mov
inc
jecxz
mov
mov
pop
imul
outsb
loope
fsin
jge
stos
add
cmp
lret
jmp
or
stos
mov
test
test
movsb
jnp
mov
dec
and
cwtl
stos
fstpl
movsb
jns
cmpsb
imul
out
enter
dec
rsqrtps
sbb
xchg
push
jno
mov
aaa
mov
sbb
push
mov
cmpsb
push
jp
andb
outsl
add
addr16
ret
shlb
jl
cmp
out
test
cld
or
xor
pop
mov
and
mov
ds
fcoms
imul
into
es
sub
repz
sbb
sub
fucomp
lea
inc
jge
rcrl
or
inc
jno
in
mov
stos
push
jmp
push
jno
or
jb
or
pop
dec
pop
sbbl
fcoms
movsl
cmp
pusha
stos
push
les
push
jnp
adc
hlt
sar
lock
inc
fistps
mov
mov
ss
inc
fstpt
fucom
adc
cmp
fs
iret
testb
mov
stos
call
faddl
cwtl
lret
data16
adc
adc
lods
ja
nop
stos
dec
sbb
pop
cmp
std
jo
aam
dec
pop
xchg
sbb
dec
push
popa
pushf
imul
add
jns
fldt
lahf
pop
dec
xchg
fwait
pop
outsl
aad
sbb
adc
out
inc
fdiv
cmp
mov
test
cs
jns
adc
inc
push
aaa
lock
das
pop
pop
movsb
mov
pop
ret
call
sbb
stos
push
in
les
scas
sbb
dec
xchg
pop
dec
repz
out
cmp
fidivrs
ds
push
sub
loopne
jae
sarb
add
push
jle,pn
sbb
add
add
movsb
xlat
stos
iret
pop
adc
adc
rclb
stos
mov
pop
sbb
popa
ja
mov
mov
sahf
mov
xor
jb
aas
cmpb
or
xor
cltd
inc
fcompl
loop
cltd
adc
clc
lcall
fbld
sub
xor
jge
dec
fwait
mov
inc
sahf
inc
pop
test
mov
movsl
mov
mov
mov
jmp
fchs
xchg
cmp
inc
cmp
sti
cld
lds
data16
dec
and
mov
fisubl
sbb
add
sbb
jne
mov
adc
sub
sbb
inc
inc
outsb
inc
fcompl
jl
mov
hlt
mov
into
lcall
fisubrs
push
fnstsw
add
daa
xchg
adcl
and
dec
xchg
cmpsl
cmpsl
cmp
test
lds
mov
pop
vcvtss2sd
pop
mov
inc
adc
rorb
xrelease
iret
je
mov
xchg
jp
clc
test
xchg
lock
fdivrp
rorb
repz
std
dec
push
adc
dec
test
cmp
xchg
sbb
cmp
push
test
int
pushf
pop
out
into
scas
cld
lret
vpcmpeqd
ljmp
mov
inc
mov
cmpsb
loop
jle
loop
cmpsb
jmp
jno
shrb
mov
addr16
jl
and
xor
inc
cmc
stos
aad
pop
xchg
push
rol
xchg
loope
and
aad
ljmp
mov
addr16
clc
xchg
callw
lcall
add
lea
stc
and
sub
out
int3
inc
pushf
stc
jp
shlb
inc
fscale
gs
fadds
adc
fimull
fdivr
out
add
insb
pop
orl
rol
pop
or
push
pop
cmc
lahf
and
sbb
sarl
add
sbb
pop
insb
in
jo
int
or
push
clc
push
jl
lret
pop
pusha
add
mov
cmp
xchg
cmp
jnp
dec
xchg
sbb
xchg
hlt
lock
mov
dec
mov
shll
fst
test
mov
aad
leave
adc
daa
rclb
inc
insb
lret
push
mov
cmp
fmull
lods
arpl
sar
aaa
xchg
js
fisubs
mov
fwait
mov
mov
cs
mov
in
das
dec
loopne
out
push
bound
movsl
sbb
icebp
test
movsl
push
pop
mov
les
pusha
aaa
bndstx
es
sbb
xor
pushf
mov
mov
sarb
mov
outsb
mov
jnp
add
pop
mov
stc
rorb
mov
sub
fimull
add
or
sbb
call
jne
push
mull
push
add
push
int
and
out
lock
pop
int
sbb
repnz
push
mov
test
in
jbe
and
bt
fcmovne
into
mov
je
add
in
sbbb
nop
adc
nop
inc
mov
pop
sub
cli
sbb
das
les
xchg
mov
ret
jnp
mov
xchg
loopne
mov
dec
out
test
fisubrl
dec
lods
gs
xorb
lods
test
lret
jb
sub
jae
jp
xchg
push
clc
ss
mov
mov
lcall
dec
ljmp
dec
popf
jae
dec
add
insl
xchg
push
xlat
cld
mov
jmp
fdivp
mov
insb
xor
sub
shrb
in
push
popf
sbb
ds
outsl
mov
dec
fs
mov
fwait
xor
mov
xchg
mov
fs
fsubrp
jnp
rcr
jbe
add
sub
inc
push
test
xchg
out
das
and
or
inc
ja
push
adc
xchg
pop
lcall
cld
jne
push
fs
inc
adc
mov
test
fucomp
or
outsl
imul
mov
sbb
scas
loopne
dec
adc
clc
pusha
sub
cli
push
jnp
insb
jbe
mov
insl
inc
xchg
push
data16
xlat
insl
shl
in
insb
or
or
rorb
adc
push
aam
xor
jge
push
pop
lcall
sub
call
or
jecxz
sub
xor
js
data16
fistpll
mov
stos
fnstcw
rolb
arpl
cmp
fidivrs
ljmp
loop
in
or
mov
movsb
fwait
lods
orb
mov
adc
hlt
test
jne
mov
jnp
lds
xchg
adc
and
lret
push
jp
jmp
jmp
jno
dec
imul
push
and
bound
mov
and
pop
xor
push
or
daa
jmp
mov
cmp
fs
in
loope
mov
push
xchg
mov
mov
js
mov
iret
ficoms
mov
xor
pop
jp
sbbl
aas
or
sbb
es
dec
or
insb
sbb
daa
ljmp
jb
idivl
mov
shl
cli
clc
stos
insb
adc
add
das
sbb
dec
mov
out
je
jle
push
mov
push
ss
or
push
jecxz
mov
out
pop
adc
int
mov
sbb
jo
sbb
ds
std
adc
jo
sbb
lock
cli
inc
sbb
mov
rclb
lea
js
mov
test
pop
scas
mov
inc
dec
pop
cmpl
ret
cmp
in
inc
xchg
mov
dec
inc
mov
mov
push
push
xor
mov
cmp
int3
imul
mov
sbb
jns
push
loop
in
shll
adc
xchg
sbb
mov
aas
cmp
mov
test
inc
cmp
das
xchg
or
cwtl
orb
and
push
pop
enter
dec
jmp
mov
jb
xor
pop
xor
ret
ljmp
clc
mov
push
mov
scas
lcall
or
adc
movsl
xor
lea
mov
pop
jg
frstor
cmp
cmpsb
rclb
add
mov
in
mov
mov
pop
call
mov
cmp
out
and
xor
and
stc
cmp
dec
mov
xchg
sbb
scas
aaa
out
hlt
mov
cmp
out
or
sub
fdivs
fwait
daa
repnz
push
addr16
jbe
es
sub
les
js
pop
lret
pop
iret
pop
cltd
lods
das
ret
movb
push
xor
mov
dec
xor
insb
popf
or
into
call
adcl
add
repz
inc
loope
adc
xchg
xchg
pusha
mov
fwait
scas
and
int3
dec
inc
divb
sbb
cmp
cmp
addl
scas
xor
popf
mov
shrl
mov
cmpsb
inc
pop
cld
mov
push
mov
push
dec
jecxz
mov
cltd
mov
gs
stos
inc
mov
pop
leave
ss
mov
push
icebp
mov
mov
cmc
out
cmpsl
cmp
out
dec
loop
mov
dec
inc
pushf
out
test
pop
xchg
xchg
mov
xchg
jnp
in
cmp
push
loop
cmp
jo
loopne
mov
shlb
pop
adc
mov
mov
xchg
or
gs
insl
cld
stos
mov
xchg
imull
pusha
fwait
adc
pop
dec
mov
jmp
out
and
or
mov
fdivrl
xchg
mov
sbb
or
adc
push
pop
dec
adc
dec
lret
push
jnp
mov
jns
or
aaa
dec
mov
xchg
stos
push
mov
xchg
sub
mov
jb
adc
ja
iret
sub
adc
test
outsb
mov
scas
sbb
mov
push
icebp
cmpsb
xchg
mov
push
notb
xchg
negb
in
scas
lods
mov
adc
xchg
js
and
and
xchg
mov
repz
leave
mov
dec
jge
nop
das
js
in
cmp
add
xor
pop
ljmp
jno
arpl
xchg
lret
cmpsl
mov
push
cmp
shrb
jmp
or
data16
xchg
sarl
pop
aaa
jl
ss
xchg
hlt
push
aas
dec
xchg
movsb
inc
and
sub
pop
xchg
jb
sti
cmp
lcall
or
clc
arpl
ss
push
test
test
ja
fildll
and
inc
daa
dec
fs
in
pop
xchg
or
inc
aad
enter
or
inc
cmp
jecxz
nop
fs
mov
xchg
pop
flds
or
xor
mov
and
pop
lret
or
cltd
sub
mov
xor
inc
gs
popf
stos
mov
pop
stc
jl
popw
mov
pop
cli
or
add
cld
mov
mov
pop
adc
aaa
mov
iret
aad
mov
mov
pop
test
mul
pop
sti
sub
jle
sarl
lods
loop
xor
xchg
imul
inc
in
repnz
fimuls
and
dec
in
das
std
xchg
jnp
es
cmp
xor
pop
inc
rcrl
cmp
xor
mov
pop
pop
das
cmp
xor
out
hlt
ja
or
dec
dec
adcl
and
pop
xchg
sbb
ss
jmp
and
notl
mov
mov
cmpsb
stc
add
sub
cltd
xor
mov
push
notl
pop
add
sub
jae
cmp
mov
xor
inc
xchg
lcall
mov
cmpsl
add
mov
sub
fimuls
mov
std
nop
push
cmc
mov
int3
and
fs
mov
inc
outsl
mov
aam
mov
fsub
xor
adc
loop
scas
mov
xor
or
xchg
dec
cmp
int
ret
jge
push
out
pop
rcrl
in
and
mov
roll
ljmp
sub
int3
jno
xlat
jle
inc
pushf
mov
in
mov
movsl
fmulp
cmc
sbb
adc
test
pop
mov
dec
inc
fidivs
imul
push
cmpsl
lds
imul
xchg
int3
notl
gs
hlt
shl
xchg
fdivrl
fsub
fs
mov
mov
pop
or
daa
cld
ret
pusha
test
xchg
xor
jge
xchg
fstpt
mov
and
pop
les
gs
data16
hlt
fdivl
cmp
dec
mov
dec
nop
nop
inc
loop
dec
fmuls
in
cmpsb
clc
push
mov
shr
adc
pop
hlt
repnz
std
adc
push
loopne
mov
movsl
stos
push
and
test
push
mov
out
xor
movsl
scas
ss
ret
fistpll
movsb
std
sub
popf
xor
iret
into
sub
adc
icebp
mov
pop
push
or
dec
repnz
and
sar
addr16
cli
or
imul
movsl
sub
je,pt
mov
cmpsb
loop
pop
cmp
cmpsb
xor
fdivrp
test
idivb
iret
ret
sarl
pop
arpl
ss
pmulhrsw
xor
orl
fmuls
cmp
sub
stos
test
push
mov
ficomps
mov
int3
in
test
adc
pop
repnz
cmp
das
hlt
xor
loope
mov
enter
into
rcll
and
hlt
jbe
dec
xchg
mov
stos
popa
lods
xlat
lock
xlat
out
jge
das
xchg
shl
in
push
fsincos
or
es
fimuls
iret
pop
dec
ja
jno
xor
pop
lret
add
leave
xor
push
adc
rcrb
sub
pop
dec
sbb
ret
cli
es
add
daa
rcr
rcll
clc
pop
xchg
imul
xchg
sub
out
add
mov
scas
jecxz
push
add
int
rcll
roll
in
mov
dec
pop
cmpsb
add
popf
sub
push
ja
mov
sbb
stos
xchg
mov
mov
xor
fbld
fcompl
popf
in
add
jno
popa
clc
and
jg
or
push
out
test
or
jge
ja
cli
mov
sbb
mov
bound
rcrl
mov
mov
fcmovnu
fildl
stos
mov
subb
dec
add
in
add
movsl
pop
xor
lock
pushf
shrl
or
mov
jae
fstl
push
mov
mov
sbb
or
jp
jns
jno
es
rorl
shl
add
je
dec
pop
xchg
lods
cld
mov
inc
adc
nop
shll
push
fisubrs
test
fcmovu
sub
popa
add
pop
or
sbb
aas
sahf
subb
jp
test
bound
or
xlat
in
jle
push
addr16
sbb
rclb
xor
js
sahf
jnp
or
or
mov
jmp
mov
adc
pop
scas
clc
out
xor
scas
mov
mov
iret
gs
sub
sbbl
xchg
je
jecxz
mov
in
lret
into
aad
scas
push
sbb
mov
dec
ljmp
je
cmp
outsl
sahf
sub
insb
addb
inc
jno
mov
jne
xchg
pop
scas
mov
mov
cmpb
dec
or
push
loopne
clc
add
loop
mov
adc
sub
outsb
std
add
cltd
lods
lahf
sbb
mov
lahf
or
xchg
xor
add
jecxz
add
jnp
mov
mov
jecxz
push
insl
ffreep
popa
cmp
leave
push
adc
mov
ror
jge
jne
pop
cwtl
xor
xchg
test
lret
dec
cmc
dec
clc
sbb
lds
mov
stc
in
sti
lods
andl
mov
jmp
xor
inc
in
loope
negl
and
xor
imul
test
rorb
or
cmpl
nop
mov
adc
jno
mov
pop
inc
sbb
ret
inc
sahf
sub
xchg
dec
sub
aad
das
mov
test
sahf
add
pop
xor
outsl
daa
xchg
and
push
hlt
sahf
push
in
mov
out
xchg
ljmp
lds
pop
pop
popa
pop
pop
mov
mov
call
jge
shll
mov
cmp
dec
xchg
pop
xchg
add
pop
in
fmuls
sbb
pop
pusha
inc
les
popf
inc
sbbb
push
adc
scas
ja
scas
test
and
mov
adc
imul
fidivrl
pusha
repnz
in
or
stos
scas
push
data16
movsl
add
jnp
aas
sub
ret
pop
ljmp
pushf
xor
ds
aas
and
jl
testb
pop
cli
push
iret
push
sub
test
xor
mov
leave
ret
dec
push
in
push
es
push
call
jnp
outsl
ljmp
dec
ja
sub
pushf
mov
sbb
pop
lock
pop
xchg
pop
orl
push
lcall
jns
xor
adc
enter
insb
loop
push
cltd
test
xorb
mov
insb
daa
add
aas
std
xchg
xor
jo
add
cmpsb
xor
ret
or
inc
jg
roll
add
xchg
vpacksswb
pop
sti
xor
cmpb
push
pop
in
or
jnp
pop
and
fisttpll
xor
lcall
inc
popa
sbbl
xchg
or
jae
push
stos
rclb
dec
jl
sahf
lea
xchg
add
pop
jb
ret
loop
lods
leave
cmp
cld
mov
jle
pop
stc
mov
add
mov
lds
xorb
shrb
jmp
sbb
pop
enter
aam
pop
call
mov
inc
jne
cmp
dec
add
cmc
stos
and
cmpsb
cmp
xchg
xchg
cld
fiaddl
xor
mov
mov
fdivl
pop
lods
rolb
cli
xchg
lret
xorb
fidivrs
mov
into
mov
out
or
mov
outsb
and
xchg
shlb
popa
mov
push
in
mov
lcall
stos
mov
push
xor
inc
enter
and
sar
cmp
xlat
sbb
mov
inc
int3
add
xor
xchg
adc
insl
or
sarl
or
push
and
lcall
stc
jmp
cltd
xor
mov
inc
int3
mov
push
jnp
js
fsubr
inc
cltd
sbb
inc
dec
daa
add
jmp
dec
jecxz
jl
pop
in
daa
push
pop
pop
and
outsl
enter
sub
repz
arpl
ret
cmpsb
and
xchg
repnz
or
adc
out
xchg
push
inc
in
addr16
das
stos
and
mov
decb
iret
mov
pushf
jo
mov
or
cmpsl
add
mov
repnz
adc
pop
mov
aam
cmp
pop
mov
cmc
and
sbb
add
mov
stc
and
shll
mov
adc
cmpsb
outsl
arpl
ljmp
lods
jp
sbb
inc
repz
cld
out
or
push
cmpsl
stos
jnp
ja
inc
push
xor
mov
add
fcmovbe
nop
daa
or
push
icebp
aam
std
lods
mov
call
pop
push
jg
popl
nop
mov
and
push
imul
fpatan
test
push
popa
addr16
mov
jp
jb
push
pushf
movsl
add
popf
sbb
lret
sub
arpl
ss
aam
int3
pop
pushf
xor
popf
and
and
sbb
mov
mov
mov
cmpsb
cmp
notb
cmp
std
cltd
test
xchg
cltd
jbe
loop,pt
mov
adc
fnsaves
push
pusha
in
inc
xlat
les
imul
or
dec
sub
sbb
pop
sub
outsb
sub
mov
or
push
sbb
xor
xor
mov
sbb
lock
fstps
cmp
fldcw
data16
or
imul
mov
int
mov
aad
arpl
sbb
cwtl
test
shlb
cltd
lret
leave
popf
sub
cmp
rol
xchg
dec
inc
xchg
mov
test
loopne
fsubs
lret
inc
inc
xchg
mov
movl
xor
insl
test
xchg
push
and
sbbl
mov
pop
mov
addr16
push
sub
lret
aas
rcrl
jnp
aad
xor
jb
xchg
push
clc
nop
outsl
mov
psllw
jg
pop
repnz
jl
jae
in
cld
inc
mov
jbe
dec
arpl
inc
push
stc
and
adc
jnp
cmp
les
or
pushf
jno
pop
lahf
out
mov
std
test
out
jno
pop
push
decb
popa
inc
aas
adc
cwtl
or
icebp
ret
cwtl
ret
push
inc
mov
aad
and
jp
pop
enter
js
scas
test
lret
sbb
stos
dec
cmpsb
inc
adc
outsb
xor
jne
adc
inc
insl
cmp
les
sbb
sub
dec
lds
jle
andb
xchg
je
or
or
jo
xchg
fiadds
popf
addps
pop
cmovge
stc
jle
cmp
sbb
insl
add
mov
repz
je
cmp
sahf
and
and
jmp
out
jecxz
outsl
lcall
lods
inc
gs
cltd
inc
and
pop
and
movsb
mov
mov
inc
mov
cmc
or
shll
dec
pop
lods
clc
inc
shlb
jbe
lods
pop
insl
jbe
scas
mov
ss
pop
mov
adc
ljmp
xchg
inc
lahf
dec
pop
dec
lock
les
loop
add
iret
xchg
and
pop
ljmp
mov
jns
inc
nopl
jmp
in
std
xor
repz
dec
out
jecxz
push
sbbl
cmp
mov
mov
in
nop
stos
sbb
mov
push
in
bound
cwtl
xchg
js
mov
mov
enter
xor
movsb
mov
jno
ret
fistpll
push
mov
xor
fucomip
and
insl
xchg
mov
shll
jle
lcall
aad
xchg
call
push
out
sti
popf
aaa
inc
jmp
xchg
mov
dec
adc
fs
mov
sbb
jno
fdivr
cmc
lahf
stos
cmp
stos
jg
or
sti
xor
xor
in
xor
jg
lds
sbb
dec
mov
pop
insb
out
inc
cmpsb
aas
xor
pop
ret
pop
cmp
pop
push
enter
daa
sub
pop
rcrl
dec
add
push
pusha
or
mov
sub
adc
push
and
popa
push
lea
adcb
push
jg
dec
push
out
jge
aas
rorl
xchg
fnstcw
aaa
inc
jecxz
pop
inc
mov
jbe
jecxz
xor
int
xor
cmp
push
jae
pop
add
int3
inc
mov
cmp
dec
or
das
mov
jo
jne
dec
aad
mov
jbe
shl
adc
inc
stos
push
sbb
js
lret
xor
pop
cmp
lret
cmp
push
jecxz
dec
jmp
mov
negb
mov
jle
movsl
lahf
or
jmp
pop
call
and
rorb
test
loop
sub
push
push
jge
les
movsl
fsubrs
jl
sub
stos
sbb
sub
shrl
mov
ss
push
ss
xchg
mov
lea
jl
ficompl
xchg
cmp
fidivl
push
cmp
mov
xchg
lock
addl
xor
inc
pusha
mov
js
shll
cmp
jmp
pusha
dec
test
mov
dec
loopne
imul
test
lods
outsb
or
lret
lahf
jecxz
shr
inc
fwait
xchg
dec
xor
cli
dec
test
sti
out
outsb
sbb
dec
mov
mov
fcmovne
bound
das
jmp
push
inc
inc
xchg
outsb
add
fiaddl
pop
and
iret
out
movsb
xchg
pop
stc
nop
popa
cmp
adc
adcb
jl
mov
pusha
fcoms
push
lods
xor
pop
pop
scas
test
mov
jns
hlt
inc
lret
pusha
ss
cmpl
or
stos
push
lea
int3
push
inc
lret
push
xor
dec
in
mov
insb
jle
rorb
mov
sub
or
add
arpl
jnp
push
leave
cltd
fbld
inc
stos
or
push
jecxz
lret
xchg
sub
pop
mov
push
cwtl
sub
imul
dec
and
or
scas
cmp
fildll
orb
add
imul
sub
cmp
cmc
sbb
loope
bound
cmp
pop
aaa
scas
adc
push
mov
xchg
clc
jnp
pop
call
push
stos
int
add
test
cmpsl
push
insl
ljmp
cmp
adc
stos
lret
jae
xor
jns
xor
inc
push
test
inc
add
add
push
lods
dec
in
inc
add
and
loopne
pop
in
flds
sub
mov
or
out
fwait
sub
int3
and
push
pop
jbe
out
cmpsl
outsl
cltd
mov
enter
mov
pop
subb
mov
jnp
int
inc
lds
dec
push
xor
mov
gs
cmp
and
pop
adc
push
bound
push
movsl
xor
sahf
addb
out
cld
mov
push
pop
ret
sahf
cmp
lea
int
lock
jne
lret
je
scas
ss
mov
dec
inc
bound
pop
ljmp
jno
sub
sbb
dec
in
jns
outsb
xchg
daa
sub
pushf
xor
rcrl
jmp
mov
mov
sbb
mov
and
pushf
adc
js
mov
add
or
rcrl
fsubl
testl
fcoms
push
mov
sbb
inc
xchg
push
insb
mov
ficomps
in
scas
adc
add
iret
xchg
dec
lret
dec
mov
rclb
rclb
sub
call
stos
mov
ds
adcb
pop
push
mov
push
test
and
ljmp
cmp
mov
lcall
jnp
adc
and
jae
into
adc
movsb
loope
shl
lret
add
sbb
mov
cltd
dec
lret
jae
and
jne
or
mov
pop
add
and
push
jo
push
push
xchg
xlat
ljmp
mov
fwait
xchg
fistps
pop
outsl
cmp
divl
sbb
dec
pop
ja
push
jmp
sahf
mov
ror
clc
ret
push
out
dec
pop
repnz
outsb
jl
xor
add
cmovle
inc
cmpsl
pop
fdivrl
insb
xchg
mov
addr16
push
addl
sbb
ret
sub
jbe,pt
push
jg
add
pop
dec
testl
add
loope
mov
pop
enter
fldt
bound
lea
test
dec
sti
adc
ret
sbb
jbe
dec
movsb
cli
clc
ss
cltd
repnz
cltd
sub
xchg
in
xchg
std
mov
das
call
ljmp
sub
out
mov
mov
cmp
out
decl
dec
shrb
fmuls
outsl
sbb
int
das
xor
push
pop
cmp
pusha
mulb
lcall
inc
aad
jno
into
xchg
out
adc
push
sub
xor
and
push
and
lcall
pop
adc
jp
outsb
sbb
cld
mov
sub
adc
aad
lea
jle
xor
fs
mov
outsb
and
inc
add
cmp
rcrb
flds
pop
hlt
cmp
sbb
push
fs
pop
lcall
jecxz
add
in
mov
imul
daa
stos
xchg
out
xor
cli
push
mov
mov
fisttpl
in
mov
push
adc
dec
sti
inc
sti
mov
std
xchg
xor
sti
mov
mov
mov
repz
leave
lcall
ljmp
lock
hlt
dec
clc
push
mov
lods
push
lcall
cwtl
outsb
fcmovnbe
insl
dec
push
testb
xor
jp
imul
hlt
xchg
movsb
fcoml
adcl
cwtl
jb
add
add
cmc
mov
push
mov
mov
cmp
mov
cltd
daa
jmp
mov
daa
cwtl
push
orl
cmp
rcrl
out
out
pop
in
jbe
fs
in
mov
mov
xorb
inc
mov
scas
outsl
mov
cmp
or
rcrb
and
add
inc
fwait
xchg
jnp
loop
into
or
or
mov
or
addr16
pop
mov
daa
out
fstps
xchg
sbb
inc
movsb
int
stc
xor
and
pop
xor
aas
mov
addr16
ss
lret
fnstsw
xor
push
mov
sub
scas
xchg
stos
sarl
int
cli
xchg
jmp
jge
jne
out
ljmp
loop
dec
adc
xor
cmpsb
jl
fisubrs
outsb
xchg
out
jle
mov
pop
xchg
in
jnp
out
cmpsl
pop
cmp
aam
int
mov
push
mov
adc
outsb
push
mov
add
push
add
icebp
push
mov
push
mov
fistpll
push
icebp
xchg
mov
jg
jb
push
out
adc
mov
hlt
cmp
or
xchg
and
pop
stc
imul
popl
xchg
imul
adc
aas
push
lods
or
jb
fildll
jo
loop
cmp
ret
jo
sub
dec
aas
pop
mov
xchg
pop
mov
xchg
sub
adc
loop
les
loop
jle
or
cmc
mov
xchg
cmc
jns
and
es
shr
jno
cmp
push
jb
mov
mov
and
in
jo
mov
imul
adc
push
adc
inc
push
push
aaa
outsl
addr16
popf
sbb
andl
shrl
test
mov
loopne
adc
sbb
ljmp
fwait
push
sbb
and
inc
pop
inc
cmp
orb
fimuls
in
xor
and
icebp
dec
mov
add
pushf
mov
repz
nop
das
xor
cmp
jae
mov
nop
sbb
xor
xchg
lods
push
aaa
or
mov
or
daa
mov
stos
xchg
inc
and
in
push
mov
ss
iret
repz
sub
imul
inc
pop
cmp
push
jmp
test
adc
inc
out
push
daa
in
mov
enter
jge
cmpsb
or
ficompl
sbb
or
aam
push
push
mov
xor
mov
push
and
in
and
fnsave
push
jo
pop
andb
stc
xchg
sub
jne
in
dec
sbb
icebp
lods
dec
and
hlt
dec
lods
xor
inc
enter
fstpt
test
loop
lock
je,pt
in
int3
xor
dec
inc
pop
dec
shlb
mov
lahf
out
mov
enter
jbe
sub
out
fcmovb
sbbb
test
jns
add
out
addr16
jnp
or
push
xor
push
inc
fxch
out
jg
ljmp
lods
icebp
jne
and
sbb
xor
dec
fistps
jns
push
adcl
les
leave
pop
pop
and
jnp
xor
add
mov
stos
call
push
mov
lcall
sbb
mov
mov
mov
or
jl
sub
fyl2x
push
cmpb
pop
sub
mov
imul
fwait
jp
ret
fwait
pop
test
mov
mov
outsb
xor
daa
mov
push
loop
and
icebp
into
jns
mov
pop
push
fldcw
cs
pop
negb
aad
out
or
jbe
push
dec
fldcw
loop
lcall
outsl
out
cmpsl
mov
sub
inc
shrl
sub
repz
fsubrl
mov
or
andl
imul
cmpsl
push
test
add
pop
and
adc
xor
into
xor
cli
mov
and
pop
ret
int
pop
lods
cs
aas
popf
inc
adc
fisttps
fdivrp
or
sub
lret
imull
adc
fdivl
mov
mov
or
mov
sbb
jp
movsl
mov
add
add
imul
ret
adc
imul
roll
mov
fcompl
cmp
xchg
mov
fnstsw
in
shrl
cmp
imul
out
mov
xchg
loopne
fst
orb
cmp
adc
shll
popa
and
out
mov
pushf
xor
test
or
imull
in
xchg
shrl
in
enter
je
xor
sbb
jmp
out
out
loopne
sub
test
dec
and
movsl
in
pusha
xor
leave
test
cmc
shrl
clc
in
pop
hlt
lahf
jnp
outsb
and
inc
jle
test
movsb
jecxz
popa
jg
test
pop
shlb
stos
leave
lret
test
push
sbb
jno
and
xchg
pop
sbbb
jge
adc
xchg
sub
enter
rolb
testb
sbb
or
sbb
es
mov
push
pusha
mov
inc
not
jp
scas
jmp
cmpsl
mov
inc
push
or
xor
dec
fildll
lods
test
xchg
addr16
pop
jb
adc
add
sub
ja
jmp
out
pop
xchg
xor
cmpsb
les
mov
insl
jp
or
adc
fbstp
lcall
test
adc
mov
jbe
js
push
stc
adc
and
push
jge
mov
mov
dec
jb
mov
inc
pop
xor
test
lods
xlat
das
mov
sub
lea
mov
mov
les
nop
movsl
jp
mov
xor
sbb
pop
iret
and
das
stos
cmp
sub
jno
adc
and
imul
inc
scas
jb
sahf
cmp
mov
sahf
push
in
mov
inc
fisubl
jmp
sbb
push
das
mov
scas
cmp
test
lret
sti
pop
and
push
ljmp
pop
addr16
push
imul
and
shll
mov
pop
cs
lret
pop
xlat
fdivs
ds
lock
dec
gs
dec
dec
shlb
repnz
and
das
pop
out
jle
dec
lods
sub
out
dec
ljmp
jno
cmpsl
movsb
cmpsb
cmp
jns
out
push
inc
sbb
or
data16
pop
pop
cmp
or
cmp
push
sbb
out
ja
cld
popf
imul
push
jb
nop
mov
data16
scas
push
ljmp
lds
or
out
add
shll
xor
dec
fbstp
repnz
out
in
inc
adc
or
data16
rorl
mov
mov
call
pop
divb
gs
scas
jns
mov
dec
pop
leave
push
mov
ljmp
test
push
inc
mov
xchg
add
hlt
nop
cmpsb
and
jecxz
xor
jecxz
orb
orl
or
inc
add
scas
mov
mov
loope
fcmove
fwait
sub
jp
out
or
loop
cmp
push
dec
push
testb
jl
push
movsl
pop
jge
dec
jnp
rcr
cmpsl
sbb
mov
cmpsl
push
dec
pop
cli
push
add
push
cmp
jbe
mov
icebp
outsl
inc
push
popf
lods
pop
sub
subl
dec
icebp
scas
inc
push
cmc
xchg
pop
mov
xchg
pop
and
add
sub
jb
ja
mov
and
mov
popf
jb
jmp
jae
jmp
push
stos
fnstcw
fisubrs
xchg
or
inc
aam
mull
mov
fadd
repnz
xlat
dec
arpl
in
add
les
aad
mov
mov
add
mov
pop
sahf
dec
jno
mov
jmp
sbbl
jns
mov
in
inc
lahf
pop
sbb
add
push
mov
shll
push
rorl
roll
sub
nop
push
or
fidivrl
sub
lahf
cmpsl
mov
push
imul
lea
and
inc
scas
aas
push
pop
jbe
and
repnz
fildl
lcall
and
pop
jl
jle
dec
inc
bnd
maxps
jns
iret
lret
push
lock
add
andl
mov
aas
dec
sbb
add
aad
cmpsb
jo
repnz
lods
sahf
fistpll
inc
stos
jle
and
mov
or
xchg
sbbl
dec
in
push
xor
ret
pop
cli
lock
add
ljmp
jno
dec
mov
in
and
mov
outsl
sbb
rclb
pop
dec
icebp
sbb
icebp
cmpsl
loopne
cmp
rcll
ror
lds
lret
and
push
fcomi
in
testl
dec
imul
sbb
inc
jl
je
mov
lea
mov
rclb
scas
or
inc
xchg
sub
fucom
notb
push
xor
ljmp
lock
cltd
mov
shr
repz
negb
adc
jo
xchg
and
ret
orb
ljmp
sbb
sti
pushf
jmp
cmp
lods
clc
paddsb
repnz
test
fadds
dec
js
sub
sub
sbb
xchg
xor
xor
mov
inc
adc
int3
into
and
inc
mov
aaa
sbb
rorl
xor
imul
dec
adc
shrl
xchg
cltd
xor
push
rclb
cwtl
das
mov
imul
mov
daa
and
pop
push
repnz
cltd
xor
dec
aam
cmp
mov
insl
sub
cmp
push
out
jmp
adc
jno
outsl
cmp
fidivs
inc
cmp
or
mov
sarl
scas
sub
cmp
ds
lods
sub
xor
push
aas
scas
mov
test
movsl
daa
cmpsb
and
add
into
test
popf
sbb
xchg
sub
cmp
scas
inc
and
cmp
incl
jnp
hlt
popa
inc
push
ds
cvtps2pd
fcoms
enter
push
scas
sti
lret
aam
popa
mov
mov
cmp
cmp
leave
mov
push
out
mov
sbb
aam
sbb
cs
jecxz
sub
inc
shrb
mov
rclb
xchg
pop
jecxz
loop
pop
xlat
push
imul
popf
cmc
int
ss
fwait
aad
pop
mov
mov
jae
mov
dec
dec
scas
mov
push
jae
xchg
push
jl
or
pop
in
add
inc
cli
imul
je
cmp
cwtl
and
aas
dec
add
push
ret
subb
outsl
shll
ljmp
and
xor
testb
pop
or
jmp
out
mov
inc
mov
cmpsl
mov
stos
stos
test
xchg
jnp
out
mov
pop
sbb
pop
add
push
mov
fucom
div
sbb
inc
mov
and
add
inc
sbb
jo
mov
shrl
les
enter
adc
fbld
xor
sti
pop
and
sti
fucomp
sbb
insb
sti
mov
mov
jp
push
fidivl
inc
or
add
in
pop
clc
fwait
in
inc
sbb
dec
popf
iret
mov
cmp
cmp
in
xchg
scas
xchg
fsubr
sub
pop
je
jle
outsl
repz
movsb
add
push
jle
nop
xor
cld
clc
lds
pop
addr16
pop
pop
or
inc
fsub
dec
sbbl
and
jnp
add
jns
or
jge
add
dec
adc
xchg
lds
scas
xchg
out
mov
mov
dec
insb
adc
jp
xor
dec
push
or
and
jecxz,pn
ret
jecxz
lods
adc
add
cmp
data16
andb
xlat
sub
or
dec
loopne
pop
mov
div
repnz
inc
xchg
xchg
sub
das
sbb
xor
hlt
insb
ja
je
jle
mov
lret
nop
cmp
add
and
adc
jae
jno
push
shrl
pop
sbb
mov
cs
pusha
pusha
loopne
push
add
mov
stos
mov
inc
push
jne
jns
jo
xlat
xchg
push
mov
jge
pop
cmp
cs
ret
pop
loop
adc
mov
dec
add
jge
pushf
test
push
cmp
cmp
mov
and
or
divl
inc
cltd
aaa
clc
jmp
cmp
fisubl
xchg
dec
mov
shll
jbe
push
pop
jecxz
loopne
push
test
fstpt
jp
mov
cs
xchg
imul
push
pop
jo
je
cltd
out
out
and
shll
pop
fwait
push
push
pop
push
sub
es
scas
dec
jae
fnstenv
lods
xchg
mov
mov
xchg
inc
mov
es
add
test
adc
and
inc
je
nop
call
fdivrl
fildll
call
shll
dec
dec
loope
xchg
push
pusha
push
lret
pop
fdivrl
mov
cmc
test
outsb
lds
dec
pop
es
mov
or
adc
xchg
test
lret
push
popf
jg
xchg
jbe
lcall
xchg
pop
fidivs
mov
in
mov
sbb
xor
jge
imul
mov
mov
imul
push
testb
dec
daa
out
or
enter
sbb
dec
push
cmp
inc
outsb
mov
xor
xchg
sub
testl
aaa
hlt
lods
or
jns
mov
and
fdivrp
aas
inc
xchg
jbe
je
jbe
lahf
lods
xchg
and
add
es
addr16
testl
loop
sbb
and
and
mov
inc
and
bound
ret
inc
xor
fmuls
in
idivb
rcr
lds
add
dec
shrl
mov
filds
mov
pop
imul
add
mov
cs
add
test
pop
push
lods
jbe
pop
das
cmp
mov
das
xor
add
aam
push
mov
loope
sbb
int
xor
and
pusha
or
cmpsl
and
dec
scas
jl
test
cwtl
fwait
ret
mov
and
leave
or
jb
lcall
mov
lret
popa
jg
or
mov
filds
insw
mov
xlat
mov
xor
push
jl
fistps
cld
sbb
add
jnp
xchg
mov
cmpsb
pushf
out
mov
push
lods
js
adc
jg
pusha
jp
adc
push
sahf
lret
rcr
movsb
pushf
and
push
or
mov
push
test
mov
outsb
mov
test
xchg
nop
jne
int
shlb
test
repz
fidivrs
into
nop
scas
js
gs
mov
or
sub
adc
sbb
scas
cmc
pop
sahf
es
lahf
jne
or
mov
sub
push
sbb
mov
sub
jno
xchg
and
icebp
mov
lret
dec
and
test
insl
push
jmp
and
pop
je
xlat
imul
mov
add
imul
sahf
daa
loop
aad
inc
xchg
insb
ja
and
inc
xchg
andb
xlat
jne
fstps
leave
mov
iret
in
add
push
or
pop
lret
fimull
ret
arpl
mov
stos
push
in
pop
sub
jmp
add
sbb
and
sbb
push
popf
loop
daa
adc
and
or
sub
mov
push
jne
xchg
inc
xchg
mov
in
push
sub
gs
aaa
jmp
mov
scas
sub
fisubrs
push
sbb
mov
pop
jecxz
mov
sti
inc
ja
mov
pop
sub
push
pusha
cmp
shrb
jo
test
jp
sti
xchg
loopne
mov
movsb
stos
pop
imul
clc
or
movsl
dec
mov
addr16
jae
jo
popa
pop
bound
and
repz
rolb
sub
jp
les
jns
in
aam
xchg
dec
jns
test
inc
xor
movsl
mov
mov
push
movsl
push
jp
test
sbb
mov
push
xlat
inc
add
incb
bound
fucomi
test
xchg
xchg
jle
dec
out
in
fldt
mov
push
mov
mov
xchg
sbb
aad
scas
mov
mov
jae
das
movsb
sti
xchg
and
fdiv
jae
mov
movsl
lahf
xlat
int
str
inc
fsqrt
and
xchg
xchg
inc
loopne
xor
xchg
xor
subb
push
jns
ret
cld
bnd
stos
sub
cld
jge
dec
das
gs
outsb
inc
lea
mov
add
roll
or
lcall
and
cmp
and
pop
iret
leave
xor
cmp
rcrl
push
pusha
test
xchg
das
stos
jmp
jnp
repz
aas
adc
test
push
inc
pop
mov
push
vaddsd
imul
mov
test
pusha
xor
mov
into
and
push
imul
cwtl
push
in
xchg
mov
and
mov
adc
daa
hlt
icebp
or
dec
cmpsb
mov
je
out
movsl
xchg
ret
push
mov
ret
jl
mov
push
or
nop
test
mov
hlt
mov
rcl
mov
mov
mov
push
xor
xchg
stc
movsb
inc
mov
mov
xchg
xchg
mov
xor
adc
cmpb
mov
ret
push
jg
xor
popf
mov
inc
mov
xor
xchg
push
std
ret
push
jo
sub
xchg
fnsave
mov
test
or
cltd
lods
shlb
mov
inc
mov
push
jno
pushf
mov
sbb
mov
dec
adc
or
repz
cmp
arpl
test
and
and
test
mov
jns
rcrl
into
pop
lods
gs
ss
jmp
imull
inc
push
cmp
mov
ficompl
mov
mov
ret
mov
sti
push
dec
out
sbb
sahf
push
jg
outsb
ret
mov
inc
push
or
fbld
mov
enter
and
fistps
sbb
add
mov
xchg
mov
aam
cmc
nop
out
aaa
mov
xlat
mov
mov
xor
adc
sbb
cs
xchg
mov
jl
ja
push
loopne
xor
or
test
out
xor
add
adc
mov
popf
call
xor
insb
rolb
sub
addr16
cltd
xchg
jmp
push
imul
push
xorb
mov
js
push
ret
insl
popf
xchg
mov
mov
pop
call
dec
in
out
stos
or
je
jle
aam
dec
push
fs
and
subl
nop
out
movsb
xchg
cmp
insl
mov
sti
xchg
test
ret
mov
fwait
imul
loop
lahf
test
mov
mov
adc
adc
inc
insl
jns
fcoms
in
jge
loope
dec
mov
aad
jmp
xor
or
sub
push
lahf
testb
inc
xrelease
pop
push
sbb
mov
fwait
xor
and
xchg
cld
mov
cmp
adc
add
mov
scas
and
adc
mov
xor
gs
cmp
fsubr
jno
cmp
test
inc
push
jle
mov
cmc
into
js
pop
js
adc
cmp
cmc
jp
pop
cmp
daa
dec
add
jp
test
mov
cmp
imul
lock
insb
icebp
xor
and
ljmp
jge
inc
popf
push
pop
add
enter
out
test
int
addr16
outsb
xchg
jb
sarl
jbe
mov
xchg
mov
or
cmp
push
pop
dec
jecxz
lea
fildll
inc
push
outsl
orb
andb
or
xor
ljmp
out
push
aad
or
fistpl
lret
repnz
lret
sti
pushf
aad
xchg
iret
jmp
test
lret
movsb
jp
pop
lods
subb
mov
sbb
adc
sbb
jno
jb
xor
sbb
pusha
lret
push
inc
push
or
xchg
imul
out
inc
dec
ret
pop
mov
popf
and
and
int3
fninit
adc
xchg
movsb
test
insb
xor
and
in
xchg
and
xor
addr16
out
pop
push
cmp
mov
aam
shlb
fadds
or
dec
jns
pop
sti
xchg
lcall
test
pusha
mov
cmp
je
jae
out
outsl
add
lcall
and
and
in
adc
aas
jae
insb
jle
shl
jp
mov
imulb
add
sti
pop
add
jp
daa
int
adc
mov
scas
pop
push
pusha
cs
add
mov
dec
das
cmp
imul
mov
jle
icebp
and
dec
pop
cmp
dec
cld
jne
aaa
xchg
popa
xor
mov
lret
inc
fsts
inc
test
or
or
jp
testb
mov
mov
sbb
aas
int
cmp
dec
fs
cltd
mov
dec
adc
jl,pt
je
bound
fs
and
pop
fimuls
and
push
dec
daa
stc
mull
xchg
movsl
xor
xchg
sub
mov
xor
out
incb
mov
inc
daa
fdivrs
repnz
lds
mov
jecxz
rcr
arpl
push
out
dec
mov
fwait
insl
call
adc
out
psadbw
adc
orl
xor
scas
fmull
xchg
jp
xchg
dec
loopne
mov
push
jge
addr16
pop
mov
xchg
cmp
popa
jns
pop
int3
jl
into
ret
cltd
test
xchg
sub
mov
pop
bound
scas
mov
xchg
int
xchg
int3
lcall
mov
fsubr
mov
xor
adc
loop
scas
inc
loopne
ljmp
addr16
dec
icebp
mov
mov
mov
fidivs
add
daa
rcrb
jno
jae
shll
pop
aad
ret
repz
leave
into
sbb
cmp
popw
mov
cmp
ss
mov
push
cs
out
sbb
leave
adc
shlb
push
lods
shlb
xchg
mov
es
frstor
sbbb
mov
cmp
sbb
dec
hlt
cmpsl
xchg
xchg
push
pop
push
add
inc
bound
push
push
cmc
mov
jae
inc
scas
fists
sahf
xchg
cmp
jecxz
add
movsl
sbb
jg
pop
rolb
into
inc
call
push
enter
inc
out
lcall
xchg
jbe
xor
push
into
xor
xlat
xor
daa
stos
stos
loop
adc
aas
add
pop
out
test
mov
cltd
imul
jl
sahf
cmpsl
ret
mov
aam
mov
xchg
mov
pop
mov
xor
lahf
sub
lock
in
add
cli
xchg
jle
inc
sub
popl
push
mov
iret
sub
or
cmp
into
sbb
sbb
push
mov
loopne
cltd
xchg
es
jno
sbb
push
pop
add
jno
int
int
jno
popa
push
dec
in
sub
stc
lret
dec
repnz
nop
jae
rol
jns
add
mov
call
xor
clc
insl
out
xlat
and
in
nop
ljmp
lret
xchg
stc
nop
cmp
test
sarb
xor
insb
repz
push
push
outsl
or
test
popf
call
cld
adc
xlat
outsb
test
lea
jbe
arpl
xchg
sbb
dec
shr
ljmp
subl
dec
mulb
push
out
jl
testl
pop
jp
cmpsl
fs
icebp
lods
or
js
ljmp
fwait
dec
inc
fidivrl
push
push
xor
mov
sete
inc
movsb
ss
lods
pop
icebp
js
push
jmp
cmp
out
sub
push
cltd
addr16
add
jmp
inc
test
push
or
jle
inc
xlat
adc
mov
mov
jnp
mov
jo
movsb
or
xchg
rcrl
push
mov
xchg
xchg
xor
lcall
sbb
xchg
jg
fs
jno
outsl
mov
mov
pusha
jnp
clc
and
ja
cmpsl
dec
repz
in
jg
in
clc
inc
bound
daa
fadds
xchg
mov
pop
fcomp
pop
gs
or
jo
ja
mov
or
sbb
sbb
or
ss
pop
movsb
cs
aaa
pusha
lds
push
sub
dec
mov
jmp
dec
rorl
and
jbe
add
sub
mov
xchg
in
mov
add
jns
dec
pop
inc
insl
inc
dec
inc
fidivrs
jnp
in
pop
push
inc
hlt
jg
sub
insb
popf
and
jecxz
dec
ljmp
mov
mov
or
cs
outsl
sub
subb
mov
inc
mov
sbb
iret
std
cmp
xchg
inc
cmp
js,pn
lods
inc
imul
test
sbb
repz
in
in
mov
jo
push
stos
add
fiaddl
sbb
lods
adc
inc
into
mov
js
les
test
popa
std
out
sti
subl
pop
cmp
js
or
rcll
js
xor
popa
int3
enter
mov
push
xchg
cld
fstpt
mov
push
or
js
das
je,pn
das
imul
jp
pop
imul
add
out
ljmp
mov
xchg
jns
xor
jmp
cmp
xor
cmpsb
mov
pop
cmp
bndstx
fidivl
jle
hlt
stc
xchg
clc
pop
adc
repz
sub
std
xchg
scas
cld
ret
fbld
push
cs
pop
in
mov
jns
or
lret
shrb
or
imul
jbe
shlb
push
addb
sbb
pusha
std
xor
das
subb
lret
rol
pusha
or
sub
ficompl
bound
ljmp
sbb
insb
add
scas
outsb
adc
outsl
addr16
add
cmpsb
stos
test
inc
and
inc
lahf
xor
imull
lds
scas
idiv
cmpsl
dec
jb
lahf
ss
iret
jne
or
mov
leave
pusha
dec
xchg
add
ss
movsl
es
fldcw
call
cmp
loop
sbb
sbb
iret
insl
pop
or
daa
sub
int3
dec
xor
pop
push
clc
js
shr
stc
pushf
push
lods
mov
push
xor
inc
ljmp
idivb
mov
sub
cmp
sahf
pop
out
iret
cs
pop
add
jns
xchg
sub
dec
inc
ds
jmp
cmp
jp
mov
sub
inc
add
jl
popa
mov
push
or
dec
test
rolb
clc
pop
movsl
arpl
pop
dec
xchg
mov
popa
add
push
loope
and
adc
sub
dec
repz
rcrl
sahf
push
stos
pop
xchg
call
ja
cmp
jp
push
sub
pop
jp
into
mov
ja
imul
negl
into
cltd
shll
fisubrl
fdivrl
cmp
addr16
sahf
xor
inc
xchg
dec
or
mov
xlat
mov
cltd
sbb
jge
ljmp
aas
or
push
shr
jecxz
out
add
xchg
push
add
push
imul
sub
pop
xor
mov
rcrl
xchg
out
jg
mov
movsb
movsl
dec
pop
scas
jge
mov
nop
inc
sbb
andb
jo
fcoms
dec
les
mov
inc
and
pop
out
sub
push
adc
jle
in
sub
in
test
inc
mov
pop
shll
jp
das
cmc
or
mov
mov
js
adc
inc
call
subb
xor
test
dec
mov
leave
pusha
orl
xchg
clc
mov
leave
mov
mov
ret
ret
push
or
aaa
sub
inc
mov
fdivs
sahf
fwait
out
xor
sarl
in
push
mov
pop
unpcklps
xchg
je
xchg
dec
add
dec
call
test
jmp
xorl
cmp
cmc
adc
add
mov
cmpsb
mov
push
into
add
dec
mov
lods
in
dec
fsubp
sbbl
aam
cmpsb
push
sub
and
andl
add
daa
mov
int3
push
mov
incl
gs
cmp
shr
cmc
fs
pop
mov
aam
nop
mov
rorl
cmp
loop
and
push
jnp
xor
jno
and
sbb
jge
loopne
fwait
xlat
sbb
inc
jae
pop
sub
mov
shr
fistps
idivb
dec
sbb
push
scas
pop
xor
mov
das
sub
jae
int
mov
arpl
popa
clc
pop
test
test
mov
or
fnstcw
adc
mov
cmp
aad
or
repz
test
arpl
sub
mov
outsl
rclb
loope
dec
sub
mul
test
shlb
leave
jle
push
push
push
das
iret
mov
add
gs
sub
mov
test
mov
jbe
dec
and
dec
lcall
cltd
push
or
add
idivb
jb
sbb
xchg
adc
sarb
sahf
lahf
push
mov
out
push
add
and
mov
jae
mov
push
outsl
sub
xor
mov
dec
adc
cli
or
insb
jo
xlat
adcb
cmpsb
aad
shll
xlat
pop
jae
xchg
aad
ja
inc
test
pushf
inc
push
shrb
sub
fidivs
push
xor
clc
scas
cld
or
sbb
cwtl
psraw
popf
inc
dec
movsl
movsb
cmp
jnp
jge
cmp
clc
pop
hlt
mov
cmp
lods
cmp
xor
out
inc
pop
outsl
sbb
div
pop
insl
add
enter
adc
mov
pop
repnz
xor
jb
mov
push
adc
jp
xor
cmpsb
mov
shll
sub
insb
xchg
das
ljmp
fucomip
xchg
sub
shlb
add
idivl
test
cmpsl
push
nop
mov
or
sub
pop
pushw
test
loopne
xor
xchg
dec
push
jmp
iret
ficoml
loopne
cmp
jecxz
loopne
decb
add
loope
movsl
stos
mov
mov
xor
pop
out
or
push
addr16
lret
mov
jl
outsl
pop
repnz
xchg
and
movsb
and
sbb
and
and
aam
inc
pop
sub
in
xlat
imul
ljmp
ret
jmp
aas
popa
popa
xchg
mov
add
repnz
mov
xor
push
mov
mov
inc
in
pop
or
mov
iret
scas
bndldx
lret
ret
je
shrb
inc
xchg
ss
les
rcrl
dec
pop
enter
hlt
xor
popf
dec
outsl
dec
repz
mov
mov
pop
cmp
psadbw
and
sahf
ja
aam
xor
pop
cmc
lcall
fmuls
icebp
cmpsl
stos
pushf
out
mov
out
cmp
out
mov
push
cwtl
cmp
xchg
add
jo
andb
jecxz
int
shlb
jno
stos
inc
and
and
arpl
or
cs
es
mov
xor
insl
adcb
xchg
insl
sar
xchg
sbb
fmuls
pusha
divl
dec
mull
push
jle
or
outsl
enter
xor
testb
popf
xor
push
mov
dec
cs
add
movsb
or
mov
add
inc
push
call
xchg
or
ret
hlt
pop
mov
aam
lret
ds
sub
cmp
and
mov
adc
shll
jmp
add
loopne
push
xor
cmp
add
out
subss
pop
push
repnz
pusha
popf
test
pop
loopne
xor
addr16
aam
arpl
xlat
addb
xchg
mov
cmp
and
ja
xchg
fisttpll
repnz
jle
lock
mov
rorl
pop
in
outsb
inc
scas
push
jmp
sub
ret
ljmp
mov
adc
xor
push
push
shr
addb
xchg
in
xchg
jbe
mov
ds
pop
out
test
push
sti
inc
and
sbb
in
pop
sub
scas
cli
mov
insl
cmp
pushf
mov
mov
lret
addr16
shl
push
jle
lods
es
shrl
lock
ljmp
pop
in
lcall
jl
pop
cwtl
popf
add
pop
scas
daa
insl
sbb
lods
pop
lods
mov
fimull
std
pop
mov
dec
xchg
imul
loope
adcb
subl
inc
arpl
je
jo
add
lahf
clc
loope
shrl
xchg
lds
jo
icebp
mov
imul
out
outsl
adc
std
in
repnz
mov
daa
enter
mov
clc
or
pop
xchg
cmp
or
loop
icebp
xor
adc
xchg
sub
adc
adc
pop
jge
jle
cmp
and
inc
pop
les
push
jge
lds
scas
divb
cmp
into
ja
arpl
shll
sahf
xor
not
push
inc
pop
leave
jo
aaa
mov
lods
sbb
addb
jno
sub
mov
test
iret
pop
faddl
icebp
andl
pop
mov
adc
push
mov
pop
les
mov
push
stos
iret
cmpsb
push
jae
or
mov
les
sbb
int3
jp
cmp
or
adc
inc
fdivs
fistps
adc
cmp
pop
mov
fwait
call
or
es
mov
inc
fstpl
sahf
pop
mov
pushf
scas
pop
mov
lods
push
jo
or
adcl
add
out
xor
push
repz
push
int
pop
jno
inc
mov
dec
push
ret
loope
sbbb
inc
lds
push
mov
in
gs
push
lcall
dec
xlat
faddl
loopne
jnp
push
ret
or
push
mov
roll
pushf
pop
lea
nop
mov
pushf
hlt
pop
mov
adcb
push
sti
js
mov
test
daa
lds
mov
lods
mov
rcrb
inc
sbbb
arpl
xchg
daa
inc
ret
add
xchg
pop
mov
and
jge
in
sub
cs
daa
inc
out
dec
xlat
outsb
sbbl
fsts
jl
add
pop
fneni(8087
adc
sahf
lock
jnp
mov
dec
out
lcall
and
sbb
and
pop
mov
aas
ret
mov
mov
rcr
test
jmp
nop
pop
mov
or
or
jo
ja
rorb
lds
int3
scas
xor
lahf
loope
push
xchg
and
mov
pop
sbb
mov
dec
cmp
or
out
and
cmp
mov
andb
icebp
inc
hlt
out
pop
jae
xor
xor
fs
call
rcl
icebp
cs
cmp
mov
sbb
sub
jl
push
mov
stos
ret
xlat
outsb
dec
mov
cmc
mov
mov
adc
mov
iret
add
movsl
xchg
mov
out
ret
dec
mov
adc
sub
repnz
sub
adc
mov
mov
ror
add
shlb
or
pop
popf
add
fbstp
adc
aam
mov
pop
push
xchg
lea
lea
jge
pop
or
dec
lock
jl
mov
xor
xchg
mov
xor
enter
bound
pop
pushf
sbb
mov
mov
int3
repnz
push
pushf
xchg
pop
pop
cmp
hlt
and
push
pop
insl
cmp
lods
icebp
fwait
imul
test
mov
dec
outsb
cmp
insl
repz
sbb
das
ret
adc
cmp
call
pop
xchg
addr16
jecxz
jl
mov
pop
mov
sbb
inc
test
cmp
mov
jnp
repnz
lcall
add
fdivrp
xor
enter
movsl
fstl
mov
and
xor
inc
jno
ds
adc
cs
mov
jo
arpl
xchg
cmp
xor
lret
cmp
inc
loopne
ja
int
or
js
mov
ds
scas
inc
je
mov
lock
ss
jno
data16
ror
rcrb
push
movsb
add
data16
scas
das
cmc
lea
iret
dec
mov
sub
fs
aaa
clc
scas
sub
subb
mov
lret
scas
sub
or
stos
sub
add
pop
call
or
jbe
xchg
sub
movsb
add
cmc
lea
push
xor
add
ja
mov
xor
add
lds
or
mov
dec
in
aad
sub
mov
push
pop
popa
popf
fucomp
ret
dec
shl
and
pop
pop
int3
data16
xor
lods
sub
int
test
test
cwtl
or
sbb
lods
pop
in
mov
popf
or
xor
shlb
mov
jge
nop
repz
jl
outsl
inc
sub
icebp
pop
adc
leave
je
pusha
out
add
lds
notl
sbb
mov
xlat
arpl
sub
imul
cltd
jo
sbb
mov
gs
cmp
push
dec
pop
test
scas
xchg
mov
add
adc
sub
pusha
out
mov
fdivp
js
test
sbb
and
iret
xor
ret
cwtl
aaa
mov
popa
cld
test
inc
pop
mov
mov
mov
mov
loope
rcrl
xlat
test
mov
and
cmc
lea
gs
pop
inc
stos
add
dec
insl
fisubs
xor
xchg
mov
dec
cmc
dec
bound
dec
in
jne
mov
or
or
aaa
sub
addr16
sub
adc
push
cld
mov
xor
popa
imul
cld
mov
cmp
stc
je
push
jle
push
mov
and
lahf
mov
gs
push
fld
pop
sahf
repnz
rorb
or
outsl
sub
dec
cmpb
sub
sub
cmpsl
inc
fadds
inc
hlt
int3
jae
loop
add
adcb
stos
ds
fldt
outsb
xor
je
inc
ss
mov
dec
out
negb
xchg
pop
pushf
dec
movb
cmpb
and
add
out
inc
in
in
sti
or
cltd
notl
sub
repz
fwait
sub
mov
inc
sub
data16
mov
sahf
es
hlt
fisubs
or
testl
inc
imul
cmpsl
mov
push
lds
pusha
testl
jle
popf
cmp
imul
and
inc
ffreep
pop
adc
adcl
add
mov
in
test
push
add
outsb
fucomi
test
adc
lcall
in
orl
inc
imul
fdivrs
scas
inc
lret
pushf
fstl
inc
ljmp
xor
mov
xor
rolb
jge
or
inc
cmpsl
js
aad
leave
sbb
jle
arpl
dec
xor
or
xchg
inc
xor
jmp
push
jbe
mov
add
push
lret
dec
mov
and
fwait
mov
aam
jne
mov
rcrb
jmp
xchg
daa
pop
hlt
pop
mov
mov
cmc
jnp
out
lock
pushf
or
push
sub
lahf
add
ja
mov
shl
jnp
xor
insl
jno
ja
in
or
int3
mov
lret
test
imul
mov
in
in
enter
mov
xor
sbb
adc
adc
xor
imull
inc
cmp
jmp
or
leavew
shrl
xchg
adc
sbb
data16
nop
xor
adc
and
pop
jl
dec
sbb
les
call
and
and
pop
adc
insb
dec
mov
fbstp
xchg
movd
sub
pop
pop
outsl
lods
inc
nop
jl
or
mov
push
sub
dec
jbe
das
scas
lds
push
adc
adc
jnp
cmpsb
xor
mov
and
cltd
and
enter
sub
lods
imull
cs
cmp
fs
sbb
pop
jecxz
fs
cmp
sahf
test
fiadds
or
xchg
mov
int3
add
cmc
outsb
or
popf
dec
lahf
stos
outsl
js
aas
mov
lock
cmpsb
leave
pop
push
and
pop
push
jno
mov
jl
adc
leave
leave
ret
sub
test
aad
pop
stos
push
out
xchg
enter
jb
int3
pop
lahf
inc
xchg
xchg
hlt
pop
divb
pop
out
mov
stc
cld
sbb
adc
xor
adc
sbb
int3
or
test
lahf
lods
hlt
repz
sbb
popa
cmp
or
dec
addr16
cmc
je
mov
insl
or
insl
ss
pop
push
in
xchg
cmc
cmp
xchg
daa
cli
out
mov
mov
sahf
adc
daa
cmp
loop
mov
xor
jnp
outsb
and
and
cwtl
mov
maxps
loopw
leave
ss
push
mov
push
mov
nop
popf
test
andb
mov
test
xor
mov
push
jmp
pop
mov
sub
or
mov
sub
ret
cmp
jecxz
mov
add
xchg
pusha
jns
decl
xor
cs
dec
iret
push
out
aas
mov
aad
push
out
add
xchg
push
stos
repz
popa
sub
xchg
mov
push
lret
fwait
or
pop
adc
mov
in
mov
aas
dec
in
outsl
mov
mov
xchg
or
and
out
insb
adc
sahf
adc
and
xor
int3
cmpsl
popa
pop
ret
sarl
push
nopl
push
hlt
imul
mov
ret
stos
mov
and
inc
lea
xchg
rcl
push
adc
rol
dec
lea
and
jecxz
test
movsl
adc
inc
out
xor
cmp
mov
pop
in
inc
aad
pushf
fsubrl
int
les
inc
std
mov
sbb
outsb
ret
loop
std
mov
xchg
repnz
fnstenv
adc
popf
data16
rcrb
std
jno
das
fndisi(8087
mov
leave
in
xchg
cmpsl
ds
push
mov
mov
lcall
cmp
mov
xchg
xchg
cli
sub
je
hlt
gs
pushf
adc
xchg
inc
pop
imul
mov
mov
rcl
stc
mov
mov
cmp
and
add
test
popf
xchg
imul
pushf
rorl
xor
mov
cmpsb
sbb
daa
mov
int
outsl
xchg
dec
shll
hlt
insb
add
or
insl
mov
push
cmc
or
movsl
lods
push
adc
repnz
jge
or
outsl
sub
mov
lds
stc
cmc
in
xor
in
enter
mov
sub
shl
xchg
call
mov
mov
dec
call
cmp
push
imul
seta
cwtl
lret
in
in
imul
int3
pop
shll
test
pop
pop
cmp
clc
fdivp
sub
mov
dec
jecxz
js
mov
jmp
jnp
shlb
pusha
mov
lahf
jnp
dec
inc
shlb
push
and
jbe
xor
xchg
xor
push
outsl
stos
lahf
jb
push
movsb
rclb
pop
xchg
lcall
pusha
sbb
aam
and
sub
mov
inc
leave
aaa
cmp
jge
push
std
mov
mov
popw
mov
in
mov
movsl
mov
mov
decl
imul
popa
cmpl
adc
mov
cli
cmp
cmp
in
fsubs
scas
and
jp
mov
iret
fdivr
xchg
or
cmpl
das
test
pop
mov
cld
xchg
popf
jbe
in
out
push
fsubrs
adc
int3
mov
inc
xchg
xor
adc
adc
jb
xchg
imul
sub
out
dec
iret
push
push
outsb
xor
scas
daa
jecxz
push
in
stos
sbb
cs
add
jo
fwait
cli
pop
stc
shll
sbb
out
cmp
cmp
adc
sub
inc
lahf
push
cld
orl
dec
loopne
popa
or
gs
orb
mov
sbb
aaa
sbb
xlat
inc
daa
imul
imul
aas
nop
cmp
pop
add
push
in
ffree
test
insl
inc
mov
pop
rclb
data16
xrelease
dec
cmp
fs
outsb
jle
rcl
jae
lea
pcmpeqd
cmp
mov
lret
or
mov
sbb
repnz
je
xor
outsb
out
sarl
xchg
pop
adc
push
iret
push
mov
jl
cmp
pop
scas
push
lcall
pop
js
and
lahf
cmp
rorb
fidivl
mov
std
ljmp
fstpt
cmp
or
loop
mov
mov
pop
hlt
dec
rolb
popf
xchg
iret
icebp
push
cmp
clc
fwait
shll
imul
jg
pushf
jo
mov
std
xchg
and
int
es
ljmp
shl
fsubrs
cmc
in
fdivr
jecxz
insl
mov
orl
or
cmp
popf
in
sarl
xor
in
and
loopne
inc
inc
ficoml
dec
pop
push
int3
inc
jnp
adc
fldcw
mov
jne
xchg
sbb
dec
mov
pop
add
sbb
or
aas
adc
push
lods
push
into
int
xchg
lea
cli
xchg
or
jl
push
xchg
leave
add
divl
push
and
andl
cmpsb
mov
inc
inc
loopne
call
jmp
into
mov
xlat
rcr
or
xor
imul
jno
es
sub
cmc
push
outsb
int
dec
cmp
xchg
outsb
cmc
lds
imul
aaa
push
lods
push
dec
stos
inc
inc
cmp
mov
arpl
test
add
or
das
mov
sbb
in
jge
mov
repnz
mov
stc
pop
jg
andl
lahf
es
jle
out
sti
std
dec
pop
cmp
xchg
mov
pop
shlb
pop
mov
mov
jns
nop
stos
fidivrl
rclb
and
cmpsb
jg
mov
clc
jge
jne
xchg
scas
fistl
cmp
clc
sbb
movsb
or
push
stos
push
mov
add
psubb
mov
cmp
ret
sbb
pop
add
ds
and
stc
inc
imul
ret
cli
push
adc
aad
sub
daa
push
and
cmp
xor
loop
push
andb
cmp
xchg
pop
movsb
add
mov
js
repnz
leave
dec
dec
cld
mov
lret
cmp
dec
imul
out
lock
cmc
xchg
inc
mov
sahf
push
xor
das
and
leave
test
xor
sbb
mov
mov
inc
gs
outsb
ret
das
mov
ror
pop
dec
dec
fadd
push
out
stc
sarb
stos
sub
mov
dec
into
fldcw
ja
iret
jne
cltd
bound
fldl
push
and
sti
into
test
adc
test
rcl
lahf
mov
inc
or
adc
fidivrl
jge
das
sub
jl,pn
mov
fidivs
add
lahf
xor
std
aas
insl
cmc
shl
sbb
popa
push
outsb
or
xor
add
xchg
xchg
mov
mov
les
and
mov
inc
sbb
leave
ds
push
xchg
or
push
movsl
mov
in
cmpsb
test
inc
fcmovb
aas
pop
ja
xor
jp
popf
cmp
dec
add
nop
scas
mov
ret
sbb
in
mov
mov
repz
add
pop
les
aaa
data16
sbb
outsb
xchg
push
xchg
push
cmp
fnstenv
lret
out
cmpsb
les
pop
test
data16
pop
repnz
pushf
adc
mov
mov
adcb
popa
rcll
or
inc
sti
xchg
adc
dec
movsb
adc
in
inc
sub
sub
and
xor
outsb
xchg
mov
jg
ret
faddl
jns
mov
cmp
jb
add
inc
sub
fistps
sub
mov
jle
cltd
inc
es
mov
ss
rcrb
mov
push
out
inc
push
cmp
jno
xor
mov
push
fnstsw
movsl
add
sarl
push
xor
jb
aad
lahf
mov
fcmovnbe
add
sbb
js
mov
xor
pusha
ss
adcl
mov
xchg
mov
mov
stos
xor
jbe
xchg
arpl
lret
negb
cmp
adc
clc
ficoml
adc
adc
daa
andb
cmc
mov
das
lahf
mov
je
cmp
inc
inc
js
inc
fidivrs
lods
out
bnd
mov
push
sub
mov
jnp
mov
add
stos
jge
mov
ficoms
jl
sbb
or
rcr
cmp
out
jg
icebp
xor
test
mov
repnz
dec
or
lcall
inc
in
mov
xor
lods
fiaddl
sti
inc
hlt
fwait
popa
cs
stos
push
dec
xchg
add
cmp
mov
jl
xchg
out
sarl
dec
inc
mov
shll
mov
fidivrs
incl
lret
aam
clc
fwait
sti
adc
mov
rclb
add
dec
mov
mov
lret
dec
dec
popa
cmp
fsubrs
cmp
jecxz
dec
outsb
mov
jle
scas
dec
out
in
nop
loop
ret
cmp
cmpsb
arpl
mov
mov
pop
ljmp
xchg
mov
sbb
mov
jmp
or
pop
xchg
cli
dec
mov
sbbl
xchg
jne
lods
jbe
jnp
jle
lds
sarb
into
test
jne
rcrl
pop
sbb
pop
popa
sub
jmp
andb
dec
jb
in
jle
xchg
push
sbb
fcoms
fadd
je
and
jb
ss
pop
inc
xor
mov
jne
std
xchg
mov
and
pop
scas
call
sub
popf
scas
cmp
insb
inc
fs
out
pop
dec
pop
inc
xor
out
loop
out
pop
loopne
xor
dec
xor
dec
pop
in
nop
cmp
xor
sbb
lods
mov
into
ja
or
ss
loopne
mov
movzbl
cwtl
lret
in
shrl
mov
int
pop
xtest
sbb
xchg
shr
int3
jl
mov
aam
iret
push
shl
lret
and
mov
xor
addr16
sbb
sti
mov
pop
rclb
xor
rcll
mov
in
adc
call
inc
cmp
sbb
cmp
adc
cmp
enter
lds
outsl
es
mov
add
xchg
roll
aad
std
xchg
loop
mov
push
sub
pop
stos
xchg
cmp
lret
inc
out
arpl
aas
enter
gs
dec
test
ljmp
imul
and
jecxz
negl
rorl
addr16
mov
mov
daa
dec
imul
xchg
fdivrl
jbe
mov
push
call
inc
cltd
xor
ljmp
sbb
pop
stos
cmc
dec
mov
or
jo
and
fbstp
push
mov
pop
pop
movsb
pop
scas
cmc
movsb
sbb
fistpll
dec
test
and
bound
lcall
enter
lods
xchg
push
push
push
add
popf
and
das
add
push
dec
cmp
fxtract
xchg
mov
jnp
loopw
decb
xor
mov
push
subl
repnz
sub
fs
push
xchg
cltd
xor
bound
fadd
lahf
jb
les
ds
jl
push
sub
mov
fidivl
sbb
hlt
fldt
in
mov
jmp
pop
push
inc
cmp
push
inc
inc
repnz
lret
pop
or
popf
stos
add
mov
mov
push
test
das
mov
mov
sub
jge
cmp
adc
jnp
insl
mov
pop
xor
inc
adc
sbb
enter
jle
adc
mov
insl
cmp
inc
dec
inc
call
cltd
mov
aas
dec
adc
fucomi
push
in
pop
addb
jns
dec
xor
sub
cmp
arpl
std
lcall
jb
ja
mov
and
adc
inc
lea
loop
test
imul
int3
test
sbb
sbbl
cmp
sbb
ret
push
sbb
sbb
jmp
mov
cld
sbb
mov
mov
inc
xor
xchg
cmp
push
notl
jnp
push
sbb
adc
sbb
ds
pop
icebp
xchg
roll
out
adc
mov
repnz
nop
mov
mov
repz
sbbw
jnp
sahf
adcb
or
fstps
jno
enter
lds
jl
in
imulb
enter
push
and
inc
sbb
movsl
jno
jg
xchg
add
std
andl
gs
aam
fistpl
xor
mov
jns
jl
divb
imul
ds
scas
data16
enter
pusha
and
into
lods
ds
out
or
push
jmp
jno
xchg
lods
xchg
clc
xchg
stos
cmpb
dec
je
pop
sahf
jo
aad
mov
out
movsl
scas
filds
sub
cmp
jae
rcrl
add
jb
nop
test
dec
dec
jns
lods
mov
dec
bound
dec
shll
mov
fstpt
filds
test
out
pop
repnz
push
sbb
sbb
adc
out
jne
fwait
xor
jle
rclb
xlat
xchg
sbb
ret
push
ret
pop
mov
mov
push
sub
mov
cmp
mov
test
pop
fidivl
out
or
xchg
fisttpll
test
jno
fimull
jno
ds
lods
jae
dec
fdivrl
or
jb
xchg
sub
push
or
lea
jbe
scas
outsl
pop
push
stos
pop
fimull
mov
int3
rcrl
pop
daa
jl
mov
and
xor
loope
cmp
sub
or
sub
int
ret
mov
push
cwtl
fmull
adcb
cwtl
mov
lret
lret
mov
push
xor
mov
divb
fisubs
movsl
mov
cmp
das
js
jmp
sub
inc
add
loop
pop
adc
pop
jb
stc
bound
test
gs
mov
adc
mul
divb
sub
fadds
and
cmp
outsb
test
stos
jge
mov
push
sub
stos
jmp
jne
scas
das
xor
xchg
lds
mov
pop
stc
push
sbb
lea
and
jne
jp
push
in
filds
gs
hlt
sub
flds
or
test
xor
lock
lods
mov
repz
cltd
in
cmp
push
loope
push
hlt
aas
dec
cmp
loop
sbb
lea
cmp
mov
pop
mov
dec
mov
and
aam
or
scas
pop
test
xchg
sub
jns
fwait
pop
and
pop
cmp
popf
jmp
or
adc
mov
lcall
push
push
xlat
dec
loop
pop
adc
push
das
xor
mov
in
dec
stos
ja
and
adc
repnz
add
push
push
ds
aas
xchg
pop
lahf
test
call
cmp
or
pop
leave
push
xor
or
lcall
loope
mov
arpl
xchg
push
inc
cmpsb
add
jmp
xchg
test
jmp
ds
jmp
dec
inc
shll
aaa
std
cltd
stc
jns
pushf
gs
in
mov
fisttps
mov
flds
pop
loope
repnz
jne
pop
adc
pusha
mov
js
pushf
shrb
fidivrs
repnz
mov
and
dec
notl
imul
fcmovu
sub
cltd
jbe
cmp
and
fstl
jns
or
cmpsl
adc
xor
fisttps
cmp
mov
mov
rorl
or
mov
insb
lcall
inc
pusha
cmc
lcall
ss
push
add
shrb
stc
cltd
ret
mov
push
insl
push
add
jno
les
fisubrl
call
dec
jg
loopne
sbbb
das
addr16
aam
mov
inc
cmc
mov
sbbl
cmp
push
sub
addb
out
cmp
gs
sbb
ds
stos
push
inc
push
outsb
addr16
jge
lods
popa
xor
sbb
je,pt
aam
fbstp
add
push
mov
stos
mov
xor
pushf
sbb
mov
pop
jge
jle
nop
pop
inc
push
pop
ss
sbbb
mov
mov
insb
jle,pn
sub
shll
je
loop
test
enter
mov
inc
aad
push
into
adc
add
mov
cmc
fwait
jb
pop
aad
adcl
lea
aad
mov
inc
insb
incl
out
std
sbb
sbb
cmp
pop
and
or
sarb
pop
movsl
sbb
fwait
push
into
out
movd
loop
clc
push
xchg
inc
std
lret
xlat
ds
cmpb
ljmp
push
mov
out
out
xchg
jae
popa
mov
pop
pop
jo
lods
adc
ret
dec
outsl
test
int
dec
push
fsubl
mov
push
lock
cltd
test
sub
push
add
je
aaa
sbb
dec
leave
add
add
sbb
cmp
dec
pop
mov
sub
mov
mov
push
ss
shrb
xchg
loopne
sbb
push
in
out
les
test
push
in
push
aaa
xchg
xor
in
sti
jns
inc
ret
aas
push
add
jl
or
pop
jg
mov
aam
imul
xchg
pop
icebp
mov
mov
pcmpgtd
ss
xchg
faddp
ficoml
mov
icebp
js
insl
movsl
push
hlt
idiv
jns
dec
in
xchg
mov
pop
sarb
jecxz
sbb
in
inc
dec
loop
add
dec
out
mov
leave
aad
push
fisubrl
mov
pusha
sub
popf
sub
push
out
mov
sbb
xor
or
dec
push
testb
sub
shlb
fdivrs
es
fistl
xor
jno
subb
rorb
loop
in
out
into
enter
psubsb
out
call
dec
push
dec
sti
push
lret
into
jl
iret
shll
inc
or
addr16
xchg
pop
xor
adc
ret
call
pop
cmp
inc
mov
fstl
xchg
out
in
jnp
daa
repz
popa
ja
sbb
stc
xchg
xchg
sbb
outsb
es
pop
mov
out
das
fistps
cmp
mov
inc
sahf
pop
xor
and
inc
imul
inc
ljmp
push
fstpt
pushl
in
fisubrl
sbb
inc
test
jmp
xor
outsb
test
ja
xor
dec
mov
pop
push
sti
xchg
test
fsubrs
xchg
mov
leave
nop
testb
lea
pop
push
cltd
sub
cltd
and
lods
stos
in
rcl
lods
ljmp
xchg
rcrl
add
mov
jae
push
ret
repz
aaa
into
jo
aas
mov
push
in
addl
mov
inc
and
sarb
and
into
cmp
xchg
test
dec
mov
dec
jge
pusha
ss
sbb
nop
repnz
movl
mov
es
icebp
push
sub
mov
outsb
cmp
or
mov
lds
mov
xor
jno
out
jbe
add
push
out
dec
gs
sbb
xchg
in
xchg
adc
lahf
fcmovnu
jae
lret
xchg
cld
push
cmp
loop
xchg
and
test
adc
xor
bound
jl
aaa
clc
xchg
ja
xchg
xor
dec
movsb
lret
loope
push
js
shl
adc
jns
dec
movsl
sbb
movsb
scas
dec
sahf
xor
into
cmpb
notb
xchg
popf
mov
add
mov
popf
xor
xchg
cmp
dec
stos
aad
fstpl
adc
add
jno
sbb
ret
jge
jecxz
in
decl
cmp
pushf
xor
mov
mov
cmp
xchg
lods
xor
fs
loope
mov
xchg
sub
lahf
mov
loop
addl
inc
ljmp
fldcw
dec
mov
push
movsl
popa
clc
adc
mov
mov
rorl
pop
cmp
xchg
stos
cli
stc
nop
in
dec
pop
repz
sbb
mov
mov
mov
fldenv
push
scas
in
inc
xlat
pop
adc
cmp
arpl
mov
fiaddl
xchg
movsl
ljmp
mov
imul
mov
fists
push
xor
mov
pop
mov
xchg
add
imull
cmp
add
cli
xchg
rcr
repnz
jle
adc
in
xchg
sub
imul
bnd
cmovbe
inc
xlat
mov
pop
ret
or
sub
cmp
ljmp
nop
add
pop
repz
mov
clc
cmpl
fwait
jae
iret
bound
mov
pushf
sbb
adc
sbb
xchg
cs
mov
mov
adc
jg
enter
lods
inc
out
out
out
int3
arpl
inc
push
jmp
inc
or
in
xchg
sub
aas
push
loop
xchg
ret
and
mov
filds
or
aas
or
jmp
or
cmp
fistl
lahf
or
int3
icebp
sub
xchg
xchg
test
scas
fucomip
test
cmp
loope
mov
mov
loopne
mov
lret
sbb
or
sbb
cmp
and
fisubl
aas
push
sti
mov
xor
jbe
inc
data16
jb
inc
fcomps
mov
inc
fistpl
sbb
aad
adc
cmp
pop
repz
ret
hlt
cmpsl
repz
inc
jbe
jb
adc
ret
jp
repnz
sub
jmp
mov
jbe
mov
outsl
lds
sarl
pop
icebp
jnp
pop
out
lret
pushf
js
lret
mov
xor
push
in
mov
jnp
scas
or
mov
sub
xor
adc
test
lds
data16
xlat
nop
daa
testb
sub
pop
sahf
insb
add
xor
notb
mov
or
mov
adc
pop
xchg
rclb
aam
clc
push
pop
mov
push
pop
xchg
mov
jg
pop
test
mov
add
ret
gs
pop
test
mov
fs
pop
xchg
es
std
pusha
pop
xchg
sub
push
popa
std
pusha
pushf
xor
nop
mov
cltd
cld
pop
cmp
es
gs
xchg
cmpsb
cmp
add
les
and
addr16
cmp
mov
mov
ficomps
mov
and
push
sub
sbbl
adc
and
arpl
adc
sbb
and
inc
fstps
mov
cmpsl
ds
push
mov
dec
sbb
pop
dec
fildl
sahf
or
insb
add
or
cmp
cld
xchg
stc
lock
and
divl
mov
imulb
dec
addr16
push
out
daa
mov
or
cmc
ss
jecxz
cld
xor
xor
mov
aas
imul
movsb
cmp
in
fdivl
cmp
mov
daa
mov
ret
or
das
les
cmc
xor
and
sbb
ds
push
mov
adc
out
sbb
lods
inc
inc
aaa
cmpsb
cmp
add
ss
adc
inc
ss
xlat
pop
hlt
add
adc
insl
rcll
out
adc
sub
push
outsl
push
push
mov
or
insb
fidivs
lock
enter
pop
push
fimuls
push
ret
push
popf
icebp
sbb
daa
pusha
notl
sub
clc
sbb
dec
xor
fs
nop
shrb
sbb
pop
dec
inc
pop
out
je
es
fmuls
xlat
outsb
cmp
out
push
scas
shrb
adc
jg
push
out
scas
call
dec
dec
loop
and
lock
or
aaa
push
cli
xchg
test
adc
adc
add
cmp
mov
lahf
inc
fcmovne
or
test
and
lret
and
pop
jae
push
jmp
xlat
repnz
pop
and
and
add
scas
or
fdivrp
sbb
test
dec
jecxz
xchg
loopne
cli
cmp
sub
dec
sti
push
sub
xchg
sub
jb
dec
loope
mov
mov
insl
push
lds
clc
fnstsw
adc
imul
xchg
push
movsl
push
call
or
mov
sub
xor
sti
stc
sub
sub
addr16
loop
sbb
dec
pushf
in
rol
shrl
pusha
ja
xchg
cmp
push
out
add
cmp
xsha256
cmpsb
adc
add
bound
test
shrl
fimuls
dec
dec
gs
arpl
lahf
hlt
or
jg
xchg
mov
xchg
sub
jno
imul
xchg
sub
cltd
pop
out
lret
jnp
adc
jne
pop
test
data16
sub
hlt
sub
sub
mov
es
push
mov
cmpl
cmc
es
xor
xor
movsl
stos
in
jle
and
inc
lods
hlt
mov
jae
imul
xchg
sub
repnz
xchg
mov
outsb
add
or
mov
add
in
and
iret
data16
lcall
imul
add
fbstp
push
inc
fimull
loope
in
shrl
ds
clc
outsb
push
pushf
xor
sbb
push
push
ds
outsb
pop
sub
inc
mov
fs
loope
cmovo
je
dec
jecxz
lods
rcrl
les
add
ja
and
sub
out
mov
xor
fxch
sub
add
outsb
add
push
dec
fidivl
jb
test
rol
cmp
repnz
popf
daa
adc
pop
dec
inc
lret
imul
cmc
in
lea
pop
out
dec
cmp
mov
lcall
jnp
loope
loope
maskmovq
testl
gs
rclb
scas
lds
fcomp
jno
adc
xor
repz
xchg
push
jmp
into
gs
add
push
pop
sbb
mov
ret
loopne
stc
das
inc
xor
lret
loop
push
lret
insl
sbb
adc
rcrb
repnz
jmp
sub
mov
scas
jle
pusha
ja
lahf
xor
mov
repnz
pop
and
ds
inc
stc
ja
sub
mov
imul
add
push
xor
adc
test
xchg
sub
fidivs
cmc
push
in
and
insb
add
or
sahf
xor
out
or
fdivl
cmc
cmp
es
cli
xchg
xchg
cli
shrl
nop
loopne
vpackuswb
daa
pop
xchg
sub
sub
fbstp
out
xor
decb
das
cmp
scas
insl
out
mov
mov
repz
test
pop
repnz
in
cmp
mov
clc
ljmp
ret
loopne
addb
imul
fs
mov
mov
pop
movb
xor
pushf
rolb
scas
shrl
out
fcomp
lds
aad
or
fldt
add
loop
out
and
add
cmp
jle
scas
inc
loopne
arpl
sub
pushf
inc
xchg
ret
inc
mov
loop
push
enter
push
mov
popa
sub
movsb
addr16
test
js
push
xchg
sub
mov
pop
orb
sbb
jns
cmc
xor
dec
loop
js
sub
cmp
in
dec
divb
pop
mov
mov
dec
adc
adc
pop
movsl
jne
xor
lea
pop
fldl
add
stos
mov
clc
jbe
sub
cmp
inc
stc
mov
sub
jecxz
clc
xchg
xchg
int3
in
adc
nop
jecxz
xchg
pop
imul
jecxz
gs
push
loope
cwtl
das
push
ret
mov
mov
mov
mov
mov
mov
sub
dec
cmp
inc
lret
sub
nop
iret
lea
adc
or
fnsave
loopne
or
fnsave
and
iret
or
adc
push
out
sbb
add
je
lds
stos
and
das
test
rorl
xchg
jg
in
mov
int
inc
jo
data16
fdiv
sub
push
push
pop
pop
cld
xchg
dec
stc
inc
outsb
push
daa
mov
daa
lea
sbb
lcall
sub
loopne
cmp
data16
sti
add
in
xchg
and
les
adc
jl
xor
mov
mov
loop
cmc
fbstp
fisttpll
mov
dec
fisttpl
sbb
imul
adc
mov
out
add
lea
cli
cmp
fnstsw
adc
or
jl
mov
scas
gs
xchg
rclb
xchg
xchg
addl
pop
icebp
outsb
mov
pop
sbb
mov
outsb
mov
inc
pop
push
int
bound
dec
sub
js
inc
mov
bound
pop
shrl
and
sahf
sub
in
test
jle
outsl
mov
shlb
xchg
jle
jne
cltd
push
add
lods
xchg
push
jmp
jmp
cmp
mov
inc
mov
popl
test
sar
mov
and
repnz
add
stc
pop
sbb
loopne
test
mov
xlat
add
int
or
lahf
loopne
jle
ljmp
mov
hlt
xor
push
sbb
jg
leave
cmp
sub
loopne
arpl
repz
mov
out
ljmp
inc
xchg
xchg
ss
shrl
pushw
push
int3
pusha
je
pop
test
xor
mov
loope
inc
mov
clc
dec
jg
push
sbb
inc
sbb
sarl
xchg
mov
push
xor
daa
mov
sub
xchg
enter
aam
std
inc
xor
insb
iret
ret
cs
xor
sbb
push
call
mov
pop
rol
adc
jecxz
scas
sub
std
cmc
adc
mov
std
xor
sbb
test
in
xchg
xor
je
mov
jbe
pop
lock
lea
cmp
cmc
mov
roll
sub
inc
or
sbb
sbb
sub
out
lret
inc
fidivl
mov
mov
push
jp
mov
sbb
mov
pushf
rorl
insb
cmp
pop
xor
add
idivb
lret
mov
popf
imul
fnsave
mov
test
fisttpl
pop
daa
out
mov
int
cmp
loop
lahf
pusha
shlb
xchg
lock
subb
jle
mov
pop
shlb
pop
dec
lahf
xchg
sahf
lds
jle
xchg
dec
lcall
and
and
sbb
fidivl
arpl
out
fbld
pop
or
stc
imulb
frstor
lds
jl
loopne
in
xor
add
push
mov
xor
jg
or
push
xchg
push
popf
push
push
pop
out
out
sub
push
cmp
mov
fsub
sbb
or
out
addr16
jmp
or
lea
sbb
popf
jl
inc
scas
or
int3
add
ljmp
dec
fdiv
sub
ret
pop
scas
hlt
lret
xlat
push
iret
adc
fucomi
mov
mov
pop
test
pushf
cli
pop
idivb
fisubl
mov
icebp
in
mov
div
out
mov
mov
es
jl
push
lret
icebp
dec
pop
into
pop
mov
adc
and
loope
mov
pop
aaa
adc
sbb
shlb
jb
aad
push
roll
mov
data16
fwait
xchg
fstpt
jnp
inc
inc
dec
rclb
inc
xor
ja
dec
test
shl
and
outsb
kxnorw
mov
sbb
mov
cmc
fisubrl
add
clc
mov
jmp
pop
push
ljmp
mov
lahf
ljmp
jp
rclb
pop
jae
out
pusha
cmp
insl
xchg
cli
inc
adc
cmpsl
subb
add
clc
dec
or
xchg
mov
stos
addr16
test
out
subl
inc
hlt
sub
test
or
mov
push
sub
mov
dec
fildl
mov
mov
jne
pop
cmc
into
cs
rol
stc
mov
adc
mov
add
or
mov
mov
fucom
and
scas
sub
add
jns
fisubrs
scas
pop
jbe
xor
push
inc
ret
pop
jo
push
add
pop
imull
lahf
popf
rorl
shrb
xchg
mov
xor
loopne
xchg
movb
push
shrb
aam
mov
cmc
pop
rol
lds
loop
insb
mov
fsubl
dec
rcr
xchg
xor
and
inc
fisubs
inc
xor
pop
jb
mov
push
push
lods
repz
adc
mov
in
call
cld
mov
iret
inc
stos
lret
iret
lock
jmp
fcompl
loop
test
adc
imul
push
mov
pop
sub
and
addb
cmp
mov
ret
test
sbb
jle
es
outsb
mov
inc
mov
cmc
cmc
bound
icebp
or
bound
pop
sti
adc
xchg
daa
leave
xor
out
loopne
mov
mov
pop
xchg
jnp
and
jecxz
clc
xchg
sub
xor
divb
pop
ja
sbb
cmp
negb
dec
loopne
cmp
out
and
add
clc
ret
jmp
lods
mov
or
or
pop
scas
outsb
lods
sti
in
add
lcall
subl
cmpsl
or
adc
insb
ror
imul
aad
xor
mov
push
push
dec
push
mov
lea
in
mov
repz
mov
adc
fidivl
adc
leave
aaa
cmp
mov
pushf
testb
lods
push
in
mov
imul
in
aam
mov
fwait
je
popf
inc
adc
mov
and
ja
push
mov
sub
jp
mov
mov
adc
pop
repz
lcallw
push
cmp
sbb
into
or
je
add
cwtl
mov
sbb
mov
out
pusha
lcall
jne
fiaddl
cmp
jmp
mov
shld
imul
cmp
outsl
pop
cmc
pop
xchg
insb
rclb
cmp
xchg
or
mov
or
out
pushf
loop
in
sbb
or
cltd
lock
mov
dec
leave
cmp
mov
dec
xor
int3
arpl
popa
mov
jno
dec
sahf
mov
mov
cltd
inc
xor
repz
inc
mov
rep
inc
int3
inc
mov
lret
cmc
inc
jo
inc
mov
pop
jbe
cwtl
xor
pop
icebp
push
out
dec
ficoml
fisubrl
xchg
sub
lea
sub
shll
femms
add
lds
push
loope
jnp
add
mov
cld
sub
jge
push
stc
aam
push
mov
add
pop
or
xchg
mov
sbb
cmpsb
jmp
jge
lock
into
scas
jnp
adc
sarl
mov
shlb
lret
addr16
in
xlat
insl
xchg
sub
clc
scas
popa
mov
repz
lret
xchg
jp
sub
popa
xchg
clc
add
lds
scas
popa
cmpsb
int
lock
pop
or
cmpsl
or
pop
inc
enter
push
mov
xchg
subl
xchg
push
mov
jle
push
mov
mov
clc
push
inc
mov
cmp
xor
cmp
and
lahf
mov
fs
jle
ss
dec
jl
cmp
push
lret
imul
push
outsb
and
inc
lahf
rorl
push
sub
insl
movsb
popf
test
pusha
iret
sbb
mov
sub
lcall
dec
rcl
inc
inc
enter
fisubl
dec
inc
fstpt
inc
ret
outsb
mov
dec
sub
mov
data16
add
loop
and
mov
repnz
rorl
cvtpi2ps
test
ja
test
dec
rclb
adc
lret
adc
nop
cmpsl
mov
xorb
fwait
xchg
mov
outsl
mov
int3
pop
pop
lock
xlat
add
sub
cmp
out
inc
insb
and
aaa
inc
sub
popa
adcl
test
jno
hlt
xlat
cmp
mov
fbstp
rorb
ficomps
jge
lcall
in
jge
std
sub
and
insb
pop
into
gs
lea
in
shrl
enter
sbb
mul
jns
mov
dec
and
mov
mov
xrelease
sbb
push
lret
das
enter
push
push
mov
mull
jmp
pop
push
lret
or
sbb
bound
fwait
jle
stc
mov
push
lret
into
push
dec
les
cli
sub
lock
icebp
mov
inc
lods
cmpsl
and
test
pusha
lods
rolb
mov
rolb
call
scas
data16
cmpsb
mov
xchg
insl
loope
fdivrl
adc
cld
and
and
bound
aas
out
lret
sahf
xor
xlat
cs
mov
or
xchg
js
cmc
add
adc
or
sahf
lea
dec
mov
data16
pop
xchg
cmc
xchg
adc
mov
gs
push
test
cld
sbb
rolb
lods
xchg
add
jle
sub
or
icebp
outsb
gs
push
jmp
mov
jp
dec
arpl
xchg
dec
push
mov
cmpsb
xor
stos
cmp
cwtl
data16
nop
inc
jns
insb
add
xchg
dec
pop
mov
mov
jns
inc
rcrl
cmpsl
push
lds
out
clc
lods
in
mov
pop
aam
xchg
ja
divb
lds
stos
sub
mov
jge
cmp
jge
jge
fisttpl
lcall
popf
jno
sbb
sub
lret
xchg
data16
out
push
in
addb
add
xchg
adc
dec
mov
icebp
mov
in
push
in
mov
jp
xchg
or
repz
push
pop
enter
push
cmp
push
std
xchg
pop
inc
push
scas
add
push
sahf
adc
popa
fwait
xlat
xchg
imul
mov
hlt
dec
ror
jns
loopne
in
pop
mov
jmp
dec
cmpsb
in
cmp
mov
ficoml
mov
out
lret
add
sti
mov
hlt
push
or
xlat
mov
or
aad
addr16
mov
lcall
stos
insb
mov
sub
dec
ja
pop
mov
lea
sub
mov
cmpsl
insb
scas
adc
dec
fwait
sti
mov
scas
fildl
and
mov
sbb
lock
push
ljmp
pop
mov
mov
inc
push
pop
stc
push
inc
mov
lock
sub
jl
pop
or
push
xor
jecxz
dec
dec
out
and
sti
inc
popa
inc
int
push
sub
sub
cmp
dec
cmp
jae
inc
movsl
flds
dec
into
imul
cli
fistpl
shlb
and
test
and
lods
iret
aaa
and
jb
jo
push
gs
cmpb
je
xor
xchg
jne
sbbl
inc
pushf
cmp
sbb
mov
sbb
insb
sbb
lahf
lea
fisubrl
or
hlt
cwtl
popa
adc
hlt
inc
cltd
rcll
adc
push
les
sub
mov
xchg
xchg
fisttpl
bnd
imul
adc
sub
movsb
dec
gs
or
paddd
fbld
dec
ds
out
and
and
fcoms
mov
xor
xchg
dec
fs
outsl
dec
movsl
dec
adc
dec
out
scas
mov
cmc
sbb
and
sahf
mov
les
mov
adc
fs
addr16
cmp
mov
adc
jbe
out
and
idiv
fcoms
int3
ds
popf
test
adc
cltd
add
xchg
jle
adc
jb
aam
jg
mov
add
fcompl
pop
repnz
pop
mov
sbb
mov
fwait
outsb
cmp
pop
mov
pop
call
or
mov
out
jns
in
inc
into
mov
cwtl
inc
mov
adc
sbb
inc
lcall
push
mov
lods
inc
loop
movsl
pop
arpl
arpl
mov
jle
ja
cmpsb
pop
out
cmp
mov
pop
adc
shrb
mov
sbb
popf
paddw
inc
les
nop
push
fcomps
dec
scas
inc
lods
cmp
sub
outsl
mov
lock
xchg
sbb
cmpb
mov
pop
mov
repz
aaa
dec
mov
loope
out
sub
jnp
test
sbbb
mov
sbb
jnp
addb
and
sub
shrl
sub
mov
sbb
jno
sbb
aas
xor
notb
lods
jnp
sbb
push
adc
add
test
movl
and
jg
lock
xchg
xor
mov
ret
ljmp
out
cmp
mov
lret
fwait
outsb
sub
and
mov
sbb
lret
aaa
icebp
cmp
loopne
les
dec
cmpsb
jge
es
rcll
je
shrl
lods
imul
cmpsb
imul
add
sbb
xchg
outsl
cwtl
stc
imul
lods
orb
mov
mov
pop
daa
dec
lcall
pusha
stc
sub
mov
pop
xchg
or
mov
cmp
cltd
xorl
in
xor
and
imul
push
adc
xchg
pusha
leave
inc
xor
push
lret
push
fdivrl
test
jmp
les
cmp
jbe
jae
xchg
push
pop
cmpsl
pop
xchg
popf
pop
adc
pop
inc
inc
jo
xor
addb
xchg
jo
cmp
sbb
fidivrl
sub
mov
sbb
lret
cmc
sub
dec
jae
dec
cmpsb
out
stc
push
jae
dec
mov
lds
cmp
xchg
loope
inc
or
out
push
push
pop
icebp
mov
aas
icebp
jecxz
negb
clc
cwtl
add
or
and
xchg
in
jae
xchg
gs
jbe
jecxz
sbb
dec
sub
loop
insb
mov
inc
out
adc
xor
jmp
rcrb
rorb
les
mov
pop
and
out
and
adc
fistps
loop
dec
mov
jmp
insb
loope
pop
iret
movsl
xchg
xlat
inc
adc
aaa
clc
xchg
ja
xchg
in
inc
add
addr16
nop
daa
jo
mov
and
jno
sub
scas
test
lret
loopne
inc
mov
fistpll
mov
fneni(8087
inc
fildl
mov
and
divl
mov
cmovo
push
or
popa
clc
mov
ret
fsubs
fwait
xor
out
in
or
aas
in
in
or
ficomps
test
mov
or
in
stos
lret
sbb
shrb
sti
pop
fdivrs
and
ljmp
sub
cmp
mov
ss
adc
add
test
out
jl
sbb
mov
xor
nop
pop
loopne
in
das
outsb
mov
cmp
mov
lcall
adc
adc
xchg
add
repz
xchg
mov
notb
add
cmpsl
dec
rclb
inc
cwtl
mov
idivb
out
daa
jecxz
pop
add
ficomps
fwait
add
xchg
jp
sbb
es
fs
adc
pop
sbb
pop
pop
sbb
int
pop
mov
test
rorl
int3
mov
imul
int3
xchg
stc
inc
and
pop
mulb
inc
int3
dec
push
and
or
jne
adc
lret
aam
enter
pop
cs
xchg
rcl
push
lret
add
sub
out
push
sbb
call
and
add
in
das
fistl
lods
out
xor
add
xor
lret
in
repz
adc
mov
arpl
mov
push
in
lods
addb
mov
popf
insb
popa
mov
xchg
pop
arpl
mov
and
leave
dec
and
sarb
add
roll
add
push
addb
xchg
or
cmp
repz
es
lret
je
mov
ja
inc
lret
xchg
jp
dec
and
push
pop
mov
lea
in
scas
scas
cmp
or
lcall
loop
add
lea
outsl
rol
xchg
gs
lret
sub
mov
sub
pushf
divl
ljmp
adc
jg
add
mov
or
lcall
push
lret
jbe
jmp
push
rorl
dec
popa
loopne
jo
xor
pusha
push
popf
xor
mov
xchg
testb
add
out
xor
xchg
dec
out
out
pusha
lds
lods
pusha
ljmp
test
pop
pop
xchg
mov
mov
pop
iret
push
cmp
enter
mov
cli
or
shrl
jecxz
sbb
xchg
xchg
std
lret
js
mov
test
adc
loop
mov
ret
adc
mov
notb
pop
mov
repnz
leave
mov
mov
sbb
sbb
xchg
pop
push
cli
gs
rcll
and
dec
xchg
fnsave
sbb
fildll
fidivs
sbb
inc
mov
imull
dec
mov
sbb
pop
jp
test
push
insl
xchg
xchg
push
test
pop
repz
mov
stc
fildl
dec
mov
clc
mov
mov
std
mov
mov
lock
lcall
jne
pop
sbb
je
fs
push
lds
push
into
loopne
push
or
shr
xor
loope
loop
in
xchg
subb
or
push
adcb
repz
push
pop
push
adc
sbb
mov
cs
xorl
pop
xchg
loop
sub
adc
pop
dec
hlt
sbb
push
lods
test
arpl
jnp
xchg
insl
fwait
xor
pop
orl
loopne
imul
lds
js
xor
out
test
movsb
loope
add
outsl
mov
ret
cmp
cltd
call
pop
repnz
loopne
test
or
fidivl
mov
sarl
lods
sbb
cld
shl
and
loopne
leave
inc
lret
mov
fcomip
dec
rcll
mov
inc
mov
ret
inc
pop
mov
loopne
push
mov
fdivl
rcll
insb
and
ja
xchg
cmpl
addr16
adc
add
or
add
out
jae
addr16
cwtl
loopne
xchg
adc
sbb
test
int
pop
xchg
sub
mov
dec
in
jb
pop
push
shrl
jl
daa
scas
pop
out
xchg
lods
or
arpl
ret
ljmp
leave
or
aam
daa
mov
daa
outsb
inc
fcompl
shlb
fwait
rcrl
xchg
sub
insl
jg
lahf
out
inc
sbb
es
data16
fnsave
insl
inc
jmp
cli
xchg
xchg
cmp
mov
daa
push
mov
int
movsb
mov
lcall
sub
jo
fcomip
scas
addb
or
outsl
subb
mov
jbe
ret
jecxz
call
push
dec
push
push
pushf
insl
xchg
sub
mov
cmp
xor
xchg
gs
lret
xchg
mov
fmuls
or
out
sbb
insb
ret
pop
faddl
or
cs
pop
xchg
mov
adcb
fadds
xor
push
lret
clc
ljmp
dec
cmp
imul
mov
xchg
gs
xchg
inc
in
jb
push
in
fisttps
repnz
pop
adc
js
xlat
outsb
loop
outsb
ds
pop
testb
lods
movsb
sub
shrl
jge
sub
aaa
ret
int3
and
lret
add
pop
sahf
fbstp
dec
xlat
pop
pusha
xor
into
fidivl
pop
stos
xor
outsb
incl
scas
xor
inc
lret
inc
and
jmp
add
loope
xchg
or
lea
loopne
xchg
pusha
cs
loopne
inc
into
cltd
in
dec
xor
add
divl
jge
pop
mov
test
cmp
dec
dec
cmp
jl
mov
jmp
outsl
out
shrb
adc
shr
stc
inc
ja
push
cmc
nop
into
mov
insb
mov
push
dec
addr16
cwtl
cmp
sbb
popa
mov
outsb
imulb
pop
jmp
ljmp
mov
xor
mov
inc
test
jb
ret
and
or
lock
xchg
loopne
aam
xor
inc
and
test
outsl
dec
sub
test
jecxz
fdivl
stc
inc
lds
cmp
or
bound
mov
sti
jae
jmp
jge
push
std
mov
es
pop
cwtl
jno
sbb
push
adc
push
jmp
mov
pop
shl
sarl
jne
mov
outsb
adc
mov
sbb
cmp
pop
sbb
pop
push
mov
stc
popf
out
jne
fs
push
je
icebp
pop
es
ja
adc
mov
inc
out
add
xchg
aad
or
sub
push
ds
je
pop
inc
sbb
and
xchg
push
pushw
pop
and
data16
int
std
into
into
or
ds
xchg
xor
fsubs
pop
out
mov
imul
cmpsl
loopne
cld
fistpll
movsb
xor
push
mov
cld
xor
pop
jl
js
test
test
pop
ret
sbb
mov
xor
outsl
sub
fidivs
jnp
and
pop
add
jmp
pop
leave
mov
mov
pop
cmpsb
insl
or
inc
adc
aas
cmp
sbb
lret
mov
mov
sbb
movsb
imul
jp
test
sub
test
movsb
lret
mov
pop
icebp
mov
je
lret
and
imul
pop
addl
std
mov
mov
xchg
push
lods
add
call
fisubrl
mov
mov
push
mov
pop
loop
push
mulb
out
in
and
push
out
clc
xchg
shl
cmpsl
mov
sbb
or
mulb
fs
sbb
mov
mov
sbb
cmpsb
cmp
push
fcmovnb
pop
or
cs
aam
scas
sub
jecxz
and
inc
cld
jnp
inc
fidivl
and
push
out
lods
sub
nop
jnp
sbb
jecxz
loope
sub
in
xor
mov
dec
xor
dec
or
das
movsl
xor
out
addr16
imul
sbb
push
popf
inc
movsl
xor
inc
or
shlb
xor
out
addr16
dec
loop
pop
out
test
fisttps
iret
hlt
adcb
or
xchg
cmp
cmp
lock
in
push
std
xchg
stos
xor
sub
inc
insl
ljmp
push
cmp
mov
stos
into
xchg
mov
mov
mov
stos
int3
out
icebp
or
daa
lods
test
movsb
xor
orb
inc
or
movsb
rcll
mov
mov
lds
rcrl
and
sahf
mov
cmp
or
sarb
mov
cs
jae
mov
mov
lods
dec
mov
inc
scas
inc
sbb
mov
scas
fwait
inc
jne
mov
lahf
xchg
fs
stos
adc
mov
stos
mov
mov
mov
iret
xchg
imul
sub
loop
xchg
cmp
inc
mov
arpl
cmp
mov
and
adc
xor
mov
inc
mov
scas
mov
scas
xchg
cmp
xor
jle
aad
stos
jp
jno
xchg
outsl
xchg
cmp
push
test
sub
mov
in
xchg
sbb
mov
xchg
insb
push
rolb
aad
mov
stc
mov
out
std
in
add
xchg
jmp
loopne
xchg
mov
dec
inc
les
cmp
pop
add
jno
xchg
stos
or
out
ja
and
xor
sub
add
push
adcb
or
or
jnp
cmpsl
sub
outsl
stc
add
lods
sub
sub
or
sbb
popf
aam
aad
lret
pop
add
lock
in
ret
xchg
dec
and
pop
adc
lcall
sbb
iret
lock
dec
or
cmp
popf
sub
mov
into
mov
push
mull
in
or
cli
popa
add
xchg
jb
shl
jae
in
cmpsb
sahf
std
inc
adc
enter
mov
cli
pop
repz
fdiv
jmp
jmp
push
jp
rclb
pop
idivl
int
je
daa
orb
out
insb
cwtl
xor
cmpsb
ret
xlat
test
mov
pusha
icebp
xchg
push
cli
push
or
adc
push
out
sub
loopne
xchg
xor
xchg
rcll
xor
jg
das
pusha
icebp
or
sbb
jne
cmp
jbe
inc
adc
lods
jecxz
cli
js
icebp
cmp
daa
adc
in
dec
pop
xchg
add
jo
lret
aas
push
lcall
repz
repz
fildl
mov
insl
lds
mov
push
scas
jl
cld
mov
test
cwtl
ss
not
lds
mov
adc
data16
iret
cmpsb
xor
and
jmp
sub
push
push
sub
mov
mov
or
fwait
fs
cmpsb
xchg
jp
ljmp
std
push
sub
jb
adc
rcll
or
jle
stos
xchg
add
shll
jo
mov
cmpsb
das
mov
inc
adc
mov
icebp
data16
fmuls
push
xlat
mov
jecxz
or
btrl
fmul
jp
cld
pop
lock
in
push
fwait
add
loopne
pop
cld
faddl
jno
test
sahf
xchg
fildl
loope
jns
jl
icebp
gs
fdivrs
ret
adcb
pop
std
pop
mov
in
test
xchg
push
jns
pushl
mov
leave
xchg
ds
mov
xor
mov
mull
ret
and
mov
addr16
jo
jle
push
mov
or
xchg
popa
hlt
and
loope
repz
adc
int
pop
add
mov
mov
dec
push
in
mov
mov
hlt
imul
aas
push
mov
xchg
dec
or
push
pop
enter
and
jne,pn
in
and
push
add
ds
mov
adc
or
std
xchg
inc
pop
pop
inc
paddsb
push
es
mov
test
mov
mov
cmp
cli
mov
push
stc
add
push
sub
ds
add
pop
sbb
in
add
std
fs
clc
pop
pop
je
sahf
leave
mov
test
repnz
dec
mov
aad
call
cli
jle
jp
pop
pop
cli
mov
enter
sub
jmp
leave
cmp
repz
jns
out
into
xchg
mulw
pop
lea
mov
mov
dec
fistps
negl
arpl
in
lahf
inc
pop
clc
inc
or
nop
cmpsl
sub
push
add
lret
dec
das
mov
sbb
push
push
xchg
cmp
std
gs
bound
in
jno
mov
adc
int3
inc
xor
xchg
pop
add
mov
mov
idivb
out
add
bound
into
popf
inc
je
fstpt
push
call
pop
jbe
pop
fmull
jnp
sbb
dec
in
xchg
pop
push
push
aad
sti
sbb
inc
dec
inc
or
negl
xchg
hlt
push
and
mov
jmp
adc
out
xchg
cmp
repz
xchg
outsl
repnz
inc
or
xchg
cmp
push
mov
insb
jmp
out
jno
jmp
and
lods
faddl
mov
scas
cmp
jbe
call
sbb
mov
fldl2t
int
or
add
push
push
sahf
inc
xchg
xchg
mov
pop
add
mov
aad
or
orl
xor
xchg
cmp
popf
popa
lret
pop
jp
int3
arpl
ret
inc
jnp
aad
lcall
push
dec
lds
fdiv
inc
psadbw
cwtl
cmp
mov
rcll
fstpt
mov
leave
add
cmpsl
xor
pop
xor
jecxz
xchg
inc
push
sti
mov
insl
inc
adcb
insb
in
fldenv
rcll
dec
std
pop
jmp
sbb
daa
jl
adc
mov
insl
in
or
cmp
popa
rcr
fistpll
fnstsw
add
in
push
cli
test
dec
cmp
mov
hlt
data16
cmp
adc
mov
cmpsb
les
mov
or
push
rclb
les
dec
pop
std
insl
inc
lock
les
cmp
iret
mov
add
cmp
or
mov
push
js
push
decw
lret
fdivrs
dec
dec
or
mov
xchg
mov
push
shlb
jns
pop
adc
shl
push
mov
cli
pop
adc
jne
dec
dec
pop
mov
in
push
dec
fisttps
in
adc
imul
dec
sbb
cli
popa
cmp
mov
in
mov
mov
into
xchg
fsubl
push
clc
xor
and
aaa
addb
and
adc
or
addr16
mov
leave
sbb
dec
ljmp
pop
loop
cmpsb
mov
mov
data16
jl
jo
cli
pop
fisubrl
stc
stc
add
sbb
loop
test
push
dec
or
hlt
cmpsb
xor
add
mov
mov
iret
data16
in
mov
mov
jecxz
jg
orb
mov
iret
xchg
dec
adc
pop
mov
jp
adc
push
rclb
jle
xchg
test
out
leave
orb
mov
dec
push
int3
movsl
out
mov
push
mov
mov
fdivrl
scas
fnstcw
imul
fwait
repz
repnz
mov
and
dec
jbe
jae
lret
xlat
aad
lock
or
xchg
ret
lcall
push
gs
insb
ja
repz
jns
push
push
mov
pop
add
mov
lret
mov
push
out
pushf
inc
mov
mov
push
fsubrl
mov
xchg
ret
pusha
sub
push
ss
mov
outsl
lock
cmpsl
mov
xchg
sbb
push
mov
mov
push
cli
test
sbb
out
push
cli
push
fwait
sub
js
mov
jo
xchg
and
stos
cmp
hlt
fs
and
cs
sub
nop
cs
inc
lret
jl
int3
cltd
notb
inc
adc
dec
fidivrs
pop
push
mov
pop
or
adc
push
test
xchg
push
add
fsubrl
inc
decb
and
cmp
add
sbb
xor
fidivrl
sub
inc
test
imul
fcompl
mov
clc
ljmp
adcl
arpl
fidivs
adc
jmp
xor
push
clc
dec
and
push
cli
pop
pushf
xchg
pop
xor
shlb
loop
add
pop
and
aaa
adc
dec
add
jg
cmp
iret
repnz
xchg
xor
inc
or
lcall
sub
push
adc
je
xorl
jl
negb
insb
push
add
ror
lcall
enter
push
xchg
inc
sti
xor
sbb
loope
pop
xor
mov
pop
xchg
inc
sbb
sbb
mov
and
aam
pop
cmp
es
and
sub
lcall
and
mov
int3
addr16
loop
shrl
repz
je
xchg
mov
xor
sub
mov
xor
fildl
enter
addr16
pop
in
jae
dec
and
iret
popl
shl
je
jns
push
xchg
call
int
xor
pop
mov
xchg
add
call
xlat
mov
mov
pop
sbb
arpl
mov
jb
jo
fs
clc
outsl
xchg
aas
dec
call
xor
cmpsl
orb
aad
movsl
mov
mov
jnp
jns
mov
push
pop
flds
cmp
icebp
sbb
fsubl
dec
lods
ss
mov
arpl
mov
xchg
pop
movsl
sub
ss
and
mov
mov
popf
out
or
add
sbb
dec
pop
rep
xchg
and
dec
inc
dec
or
scas
pop
mull
mov
cs
push
incl
xor
jecxz
ja
adc
fwait
shrb
lds
mov
jns
pop
cmpsb
cmpsl
sub
nop
mov
nop
sahf
inc
out
sbb
cltd
inc
orl
ljmp
movsb
in
jo
nop
aas
adc
arpl
loope
arpl
stos
cld
pop
mov
movsb
push
rcll
sbb
fists
insl
dec
add
call
mov
stos
dec
cpuid
cmpsl
and
or
push
and
jae
arpl
les
stc
jp
mov
es
out
imul
lahf
cmp
lret
dec
pop
push
inc
adcb
xor
lds
mov
mov
mov
ret
mov
sbb
cmp
jne
icebp
cld
pop
and
imul
fnstcw
and
xor
subb
sahf
mov
test
sbb
jo
dec
or
jne
les
imul
and
jmp
or
adc
negb
inc
popa
out
mov
jno
addr16
arpl
jbe
enter
aam
mov
push
ss
arpl
pop
lret
xchg
cld
mov
pusha
cmp
mov
popf
xor
bound
cmp
pop
in
bound
pop
cmc
insl
in
jle
xor
mov
cmpsb
mov
or
in
push
xchg
ja
add
loopne
clc
pop
xor
mov
mov
sbb
das
push
aam
inc
jb
sub
std
mov
push
popf
push
xchg
inc
clc
jmp
cmc
or
out
lds
psubq
adcb
sbb
in
adc
adc
dec
fnstcw
fildl
sub
adc
in
rol
roll
or
push
inc
fiaddl
movsb
inc
or
scas
mov
cmp
push
mov
xchg
inc
adc
movsl
push
push
testl
push
popf
inc
or
pop
jl
push
les
scas
adcl
inc
pop
xor
stos
mov
mov
xor
xchg
push
jge
xchg
popf
xor
test
mov
jb
push
clc
es
sbb
push
sub
aaa
shrb
and
adc
negl
cmpsb
sub
out
aas
pop
pop
ja
dec
dec
lahf
inc
jno
sbb
aad
test
sbb
addl
leave
add
les
cmp
call
test
pop
jmp
ret
in
lock
jmp
xchg
inc
add
ja
cs
inc
adc
popl
xchg
stc
nop
repz
gs
xor
dec
adc
ret
fcoms
adc
sbb
cld
inc
dec
adc
orl
dec
ret
pop
lcall
mov
mov
xchg
xchg
arpl
dec
pop
addb
cli
pop
dec
dec
or
stos
xchg
mov
xchg
jmp
or
subb
lock
fnsave
lcall
loope
sbb
xchg
cmp
xchg
mov
icebp
loop
ja
ja
or
shlb
adc
xchg
pop
jg
test
xor
dec
adc
cmp
mov
xchg
cmp
insb
popa
jp
lret
enter
fadds
jo
inc
xchg
adc
mov
icebp
pop
fcompl
push
and
gs
mov
push
jge
mov
push
imul
cmpsl
xor
inc
mov
lret
inc
pop
test
sbb
and
hlt
adc
mov
movsl
int
arpl
rclb
in
sub
dec
adc
jmp
clc
push
lcall
lock
shr
in
mov
stc
sub
fistpll
cltd
cmp
fiadds
pop
pop
out
outsl
and
dec
push
push
mov
les
pop
enter
test
or
pop
jmp
pop
adcb
and
jle
mov
scas
sub
pop
xchg
jnp
or
stos
cmpsb
xor
sbb
into
loope,pt
jno
inc
xlat
adc
push
cmc
loop
pop
ss
pop
add
ss
push
xor
ret
addl
sahf
inc
int
enter
sarb
push
xlat
loope
xor
xchg
inc
push
add
mov
loop
sbb
les
inc
or
scas
inc
lret
movsl
adc
insb
hlt
pop
inc
jge
fwait
lea
push
leave
negb
add
jmp
add
out
jns
xor
sti
gs
daa
cwtl
inc
or
cmpsl
push
pop
int
addb
enter
aam
jmp
fimuls
jnp
dec
push
pop
mov
pop
fcoml
mov
insl
push
dec
push
pop
jnp
fdivl
ret
xchg
add
push
arpl
add
adc
push
jb
push
movmskps
pusha
leave
pop
imul
xchg
mov
xchg
mov
jecxz
into
insb
out
cld
pop
rcr
dec
mov
je
or
mov
sub
std
jb
push
jecxz
mov
call
cmp
push
outsl
jmp
jae
loope
sbb
mov
mov
inc
cmovb
mov
ret
mov
and
test
dec
mov
xor
xor
dec
popa
and
inc
sbb
and
xchg
sub
repnz
push
pop
scas
xor
fldl
fwait
mov
cmp
add
mov
pop
pop
mov
movsl
orb
xchg
fnstcw
sahf
fmul
imul
add
lods
sub
pop
inc
adc
lret
fidivrl
mov
out
das
and
test
lods
sub
adc
in
insl
mov
shl
frstor
in
sub
hlt
aaa
rcrl
mov
jbe
outsl
lods
xor
cmp
adc
and
cmp
dec
fadds
das
repz
cmp
loope
mov
addr16
stos
sbb
cmp
adc
xor
cmp
or
dec
sub
mov
cld
xor
ljmp
fnstcw
daa
nop
inc
cwtl
movsl
pop
iret
rol
push
mov
xor
inc
push
or
test
loope
pop
add
pop
fwait
dec
adc
inc
jbe
dec
repnz
js
sahf
cmp
loop
mov
cmc
imul
push
xchg
cwtl
inc
dec
inc
push
rorb
popf
pop
add
rorl
lcall
sti
pop
jmp
cmc
aad
or
sbb
stos
loop
sbb
dec
pop
pop
rorb
mov
or
fcoml
xchg
cmp
xor
aam
xchg
cmpsl
sub
pop
push
cld
push
or
push
add
fiadds
into
jmp
call
mov
xchg
sbb
mov
mov
dec
or
repz
mov
mov
pusha
testl
aaa
fwait
outsb
lret
mov
adc
sbb
mov
mov
mov
mov
clc
gs
pop
push
orb
jae
dec
or
lds
data16
pop
xor
jnp
sub
sub
and
mov
push
xchg
lret
call
sbb
mov
fidivrs
test
cli
pop
in
push
out
lret
xchg
inc
adc
dec
push
mov
sub
mov
push
sti
push
nop
and
add
cmpsl
sub
sbb
iret
loop
loopne
iret
hlt
movsl
sub
cmp
push
cwtl
dec
faddl
adc
mov
inc
loope
lcall
orl
mov
push
pushf
sub
insb
iret
sub
cmp
xor
lods
movsl
icebp
mov
insl
cmc
or
xchg
cmp
lods
sub
xchg
inc
add
lret
jmp
das
adc
iret
lods
inc
mov
nop
mov
ret
mov
sbb
lea
in
mov
push
cld
add
sbb
or
add
sarl
push
loopne
sar
scas
dec
adc
lret
xchg
mov
xchg
icebp
fdivp
pop
or
sbb
sbb
xchg
mov
test
sub
or
dec
cmp
xlat
add
inc
mov
lahf
add
mov
inc
jb
mov
fisubl
jbe
or
mov
xor
and
mov
das
mov
js
jnp
shlb
clc
xchg
or
imul
sbb
stc
mov
mov
shlb
lods
mov
jmp
inc
call
push
int3
xchg
jo
mov
push
add
fldl2e
imul
les
pop
stc
push
mov
lods
stos
pop
mov
mov
jb
mull
lea
lret
xchg
aaa
clc
movsb
inc
or
ljmp
push
xchg
pop
adc
mov
sub
sub
sbb
mov
push
sub
and
ds
lret
icebp
sti
pop
inc
flds
jns
ds
adc
xor
pop
rorb
lret
jle
jb
ja
inc
ficoms
xlat
gs
or
ret
cmp
enter
lcall
inc
bound
sub
dec
ret
repnz
pop
pop
cwtl
inc
and
xor
insb
icebp
into
adc
mov
sbb
mov
jnp
mov
mov
outsb
pop
mov
lea
int
dec
fldt
mov
mov
daa
cmpsl
std
cmp
aad
popa
adc
dec
fisttps
mov
adc
jns
addr16
outsl
jle
aaa
lods
or
push
and
mov
cmpsl
or
dec
adc
shlb
jl
daa
cmpsl
jns
mov
push
adc
adc
mov
out
fmull
xor
jns
addr16
outsl
pop
inc
popa
mov
cltd
mov
sub
fcomp
jl
in
imul
fdivrl
jbe
push
aad
outsl
roll
push
loope
and
shll
xchg
out
add
jle
iret
mov
push
repnz
out
lods
pop
sti
xchg
sbb
sbb
int
mov
sbb
in
xchg
push
in
je
leave
push
mov
rcr
test
fnsave
mov
shl
push
cmp
mov
sub
cmpsl
inc
mov
addr16
loopne
sbbl
mov
xor
adc
mov
mov
je
mov
cmpl
xchg
inc
hlt
and
pop
inc
lock
dec
sbb
mov
mov
cmpsl
sbb
adc
sbb
jno
insb
repz
or
hlt
lahf
jmp
movsb
out
inc
xchg
mov
inc
or
stc
sbb
rorb
ja
or
outsl
inc
push
add
mov
cmp
and
lret
fdivrl
sahf
test
adc
sub
cwtl
cmp
lods
adc
loopne
xchg
sub
aaa
pushf
inc
test
jge
xchg
dec
adc
inc
jnp
sarb
xlat
adc
mov
pop
jmp
dec
push
mov
shll
stos
pop
daa
fstpt
inc
sbb
ja
dec
movups
mov
int
sti
pop
sbb
dec
xor
aad
or
rolb
push
incb
shrb
mov
int3
cmp
movsb
ffreep
xchg
ret
int
push
mov
cli
lods
aam
mov
int
cmp
scas
sbb
jp
mov
cmp
ret
aas
mov
cmp
xor
call
loop
decb
aad
sub
dec
cmpsl
xor
dec
dec
or
xor
push
add
jmp
push
mov
mov
cmp
mull
daa
mov
sbb
mov
mov
inc
psubsb
mov
pop
push
xchg
outsl
push
leave
xchg
sahf
xor
daa
sbb
mov
cmp
add
push
ss
pop
rclb
mov
xor
testl
jge
out
dec
xor
pushf
adc
je
stos
xor
ret
cld
testl
jmp
aad
push
std
push
cli
fwait
xchg
data16
test
jb
jb
sub
cmp
push
lock
rorb
aam
sbb
lret
mov
mov
ljmp
jae
inc
sub
scas
inc
imul
addr16
fs
cltd
sub
pop
mov
push
xorps
dec
jb
std
push
xchg
adcb
call
and
outsl
push
or
add
pop
jg
lods
jmp
xor
test
addr16
fsubs
mov
fnstenv
sti
call
icebp
adcl
or
pop
inc
adc
mov
cltd
movsl
xor
dec
cmp
adc
sbb
dec
je
sbbb
sbb
xchg
sub
sub
push
loopne
fstps
sbb
pop
mov
mov
outsb
xchg
movsl
sub
ret
mov
mov
test
mov
lcall
or
add
sub
gs
push
decb
and
loopne
int3
sub
and
push
mov
lock
xor
jnp
mov
das
fs
sbb
add
fldt
mov
adc
ja
lcall
fdivrs
daa
stos
sub
cmp
mov
dec
rcll
jge
xor
xlat
lret
bound
cld
jb
xor
jmp
scas
pop
push
mov
ja
jno
pop
addr16
cmp
fs
mov
movsl
mov
cmpb
addl
mov
sbb
incl
sarb
cltd
pop
mov
cli
jae
dec
fsub
mov
js
xchg
inc
out
gs
rcr
hlt
or
inc
add
pop
js
push
add
loop
cmp
daa
lret
and
mov
pop
ljmp
sbb
iret
xchg
or
cltd
sub
sbb
adcb
xor
jmp
movsb
push
cli
or
and
push
pop
orb
adc
push
add
push
ficoml
enter
pop
movsb
stos
daa
inc
mov
dec
or
repz
icebp
loop
push
adc
out
xor
xchg
cmp
xchg
jmp
fiaddl
inc
xor
ds
mov
inc
xor
sub
sbb
stos
pop
add
cmp
stos
dec
dec
or
mov
arpl
xor
inc
sub
sub
sahf
fstpt
out
lock
pop
roll
push
test
test
jbe
mov
adc
dec
sahf
inc
push
add
push
push
fwait
pusha
cli
pop
loope
cmp
jg
jo
outsl
popl
add
mov
adcl
xchg
mov
dec
stc
pusha
adc
mov
in
out
orl
scas
xor
xor
into
jbe
call
jle
cmpsb
pop
add
rorb
ljmp
pop
mov
movsl
push
iret
aaa
cmpsb
je
mov
cmc
insl
mov
push
ja
and
xor
inc
cmp
js
psrld
les
mov
lods
imul
imul
push
adc
icebp
popa
inc
imul
fidivrl
ss
sub
and
sarl
mov
cli
pop
or
push
pop
ret
mov
clc
pop
jmp
repz
adc
pop
sti
pop
mov
test
mov
mov
in
lods
int3
xchg
idivl
sbb
es
inc
test
push
and
mov
adc
mov
cmpsl
adc
and
roll
mov
insl
call
fadds
and
dec
mov
push
xchg
pop
shr
sbb
push
incl
fdivl
fdivrs
sub
clc
jp
lock
orb
fldl
lret
dec
mov
add
aam
dec
adc
add
push
add
push
jb
and
std
pop
je
xchg
inc
sub
push
aad
jge
adc
jno
jo
push
imul
dec
nop
push
int3
dec
xchg
lcall
aam
std
sbb
inc
cmp
mov
mov
xor
test
dec
jl
lcall
lods
sub
into
mull
std
in
inc
or
hlt
popf
adc
icebp
in
push
shrl
mov
mov
hlt
sub
mov
sub
pmullw
mov
jecxz
mov
dec
adc
xchg
adc
into
mov
sbb
xor
rol
jo
pushf
pop
add
cmp
mov
jmp
adc
test
mov
cmp
push
jmp
jle
mov
lahf
inc
fwait
movsb
inc
pop
jns
pop
leave
or
dec
test
mov
inc
or
bound
ljmp
jnp
and
adc
sub
repz
push
fdivl
roll
clc
sbb
icebp
mov
adc
xchg
push
movsb
xor
jae
sarb
das
add
lret
js
ss
and
shll
mov
fidivrs
add
aad
cli
xchg
jne
pop
out
inc
xchg
pop
add
mov
mov
daa
jmp
arpl
mov
fdivrl
mov
aad
cmpb
idivb
adc
dec
fistps
mov
add
aam
push
pop
add
cmp
lcall
int
out
xlat
out
cmp
in
into
cmpsl
sarb
push
mov
cmp
into
sub
movsl
aam
sbb
mov
addr16
leave
and
scas
imul
mov
sub
iret
mov
fstpt
iret
or
xchg
sub
mov
jnp
iret
imul
mov
fadds
push
sahf
scas
xor
fmuls
cmpsb
int
sahf
idivb
sbb
mov
ja
out
imul
dec
or
fstpt
mov
mov
adc
adc
dec
inc
adc
xor
xor
mov
filds
test
mov
mov
and
fbld
push
mov
mov
mov
inc
test
pop
sbb
movsb
sub
stos
ss
daa
test
stos
iret
orb
hlt
pop
ss
orb
outsb
out
sbb
dec
les
add
inc
or
push
push
int
jmp
out
fidivl
and
inc
out
lcall
ffreep
aad
mov
lods
notl
push
add
pop
into
xchg
or
mov
aaa
mov
sbb
out
add
mov
cld
fiaddl
movsl
xor
mov
inc
or
faddl
ds
loop
lock
jae
ljmp
cltd
inc
cmp
je
mov
data16
icebp
or
shlb
hlt
repnz
inc
pushf
out
stc
nop
pop
cs
gs
inc
aaa
fwait
cmp
xorl
xor
xlat
lock
jle
lea
shlb
sbb
repnz
int3
lea
dec
mov
mov
sbb
in
jbe
cmp
clc
mov
movsl
adc
or
xchg
dec
mov
lret
call
push
push
rcrl
sbb
sub
cmc
data16
dec
pop
xchg
sub
int3
ljmp
jl
int3
lcall
xchg
mov
mov
jle
sbb
mov
mov
sbb
scas
fwait
ljmp
cmpsb
cld
pop
sub
add
mov
rolb
pop
dec
lahf
test
into
push
lahf
ss
out
stos
daa
pop
mov
jge
xchg
jge
lods
in
cs
push
out
xor
add
aad
mov
popa
inc
mov
iret
mov
ret
bnd
cmp
mov
sub
les
fisttpl
mov
mov
or
inc
push
es
pushf
insb
jmp
jo
cld
xor
xchg
out
cs
xor
sbb
push
aam
mov
add
icebp
push
loop
dec
push
hlt
mov
lods
mov
adc
popa
gs
rol
jle
pop
add
inc
mov
scas
xlat
jl
orl
jl
fiadds
mov
mov
ret
adc
lods
sbb
xchg
cmp
mov
sbb
push
mov
mov
out
iret
out
cltd
sbb
les
scas
filds
cmpsl
xchg
mov
loopne
js
fiadds
mov
adc
addb
notl
mov
movsl
pusha
out
xor
push
clc
ror
jae
xlat
add
scas
movsl
add
popa
jmp
data16
pop
push
ja
and
stc
and
inc
into
xor
outsb
mov
je
xlat
cmpsb
popa
jmp
inc
mov
inc
in
inc
pop
addr16
push
stc
cmpsb
jne
call
js
mov
push
insb
popa
clc
popf
jno
inc
mov
enter
sahf
xor
dec
fs
pushf
fwait
mov
jno
mov
stc
nop
cmp
inc
fnstcw
pop
pop
scas
mov
notl
mov
adc
xor
jb
test
push
mov
fnstenv
stc
scas
inc
sub
testl
andl
lret
or
sub
mov
jnp
inc
fcmovne
pushf
lea
ljmp
and
leave
pusha
jne
sahf
xor
enter
adc
aaa
fidivl
cmp
mov
mov
fstl
lods
push
loope
notb
xor
popa
xor
adcb
xchg
pop
push
fidivrl
and
pop
jnp
inc
lods
xor
mov
lret
aam
stos
add
es
push
jne
popf
cmpsb
js
out
and
clc
lret
cld
sbb
dec
sbb
popa
clc
pushf
jo
inc
mov
ret
enter
sahf
xor
dec
arpl
lcall
mov
cmp
pop
scas
lea
notl
mov
adc
xor
or
nop
daa
xlat
stos
fnstenv
clc
scas
inc
sub
testl
sbbb
lret
or
daa
inc
es
jp
inc
fcmovne
fwait
lea
out
stos
inc
and
pop
outsb
inc
leave
pusha
je
sahf
xor
loop
push
adc
add
jno
cmp
mov
mov
fcoml
lods
or
das
xor
pusha
xor
adcl
mov
jo
add
daa
mov
pop
jp
inc
lods
jg
mov
rclb
stos
add
jmp
enter
sahf
movsl
jbe
out
and
add
sbb
sbb
fwait
outsb
stos
inc
mov
ror
repz
inc
adc
jle
bound
pushf
cwtl
mov
jb
mov
cli
xchg
cmp
inc
fnstcw
sbb
mov
jle
loope
push
jmp
add
or
movsb
nop
daa
test
scas
inc
sub
testl
sbbl
or
es
es
jns
inc
fcmovnb
lcall
sbb
stos
inc
and
adcb
inc
leave
pusha
jae
sahf
xor
loope
push
adc
add
jno
cmp
mov
mov
fistl
lods
or
pop
notb
cs
pop
xor
arpl
fwait
xor
fdivrs
and
pop
jns
inc
stos
jle
mov
rcll
stos
add
jmp
enter
sahf
movsb
jne
out
lds
add
pop
inc
fisttpl
mov
dec
imul
lahf
mov
enter
lahf
ss
adc
jle
popa
mov
pushf
xchg
mov
jb
mov
cli
xchg
cmp
inc
fnstcw
pop
sbb
lea
adc
das
add
or
mov
fnstenv
imulb
mov
dec
int3
arpl
lods
sbbb
lret
or
and
inc
outsl
push
js
inc
fcmovnb
cltd
lea
out
stc
sbb
stos
inc
pop
cmp
pusha
jb
sahf
xor
push
adc
add
jno
cmp
mov
mov
ficoml
lods
or
pop
testb
xor
pop
xor
bound
jmp
mov
jo
add
mov
and
pop
js
inc
stos
jge
mov
rclb
stos
add
jmp
enter
sahf
mov
les
add
push
inc
fildl
mov
dec
push
stos
inc
sahf
mov
enter
lahf
ss
adc
jle
pusha
mov
pushf
xchg
mov
jb
mov
mov
cmp
inc
fnstcw
pop
sbb
mov
jle
push
jmp
add
or
mov
fnstenv
cmc
scas
inc
daa
sti
testl
jg
ljmp
out
or
and
es
ja
inc
fcmovnb
cwtl
lea
out
stc
pop
in
stos
inc
push
cmp
pusha
jno
sahf
xor
fistpll
pop
xor
jno
cmp
mov
mov
fsts
lods
or
pop
testb
xor
pop
das
jge
popa
jle
jmp
mov
jo
add
mov
and
pop
ja
inc
test
lret
cld
iret
adc
push
and
enter
sahf
mov
ret
and
add
adc
mov
dec
addr16
stc
cwtl
imul
jmp
enter
lahf
ss
jle
pop
mov
pushf
xchg
mov
jb
mov
mov
aaa
or
cmp
scas
mov
testl
cld
push
jmp
add
or
mov
fnstenv
hlt
scas
inc
es
testl
jle
ljmp
out
or
and
mov
jbe
inc
fcmovnb
xchg
lea
in
stc
push
jmp
inc
sbb
ds
pusha
jo
sahf
xor
ret
fidivrs
push
xor
jno
aaa
and
mov
inc
fdivrs
fcompl
or
jge,pn
pusha
jge
jmp
mov
jo
add
mov
and
pop
jbe
inc
test
cmc
mov
into
adc
dec
and
leave
push
outsl
pop
sahf
mov
shll
notb
inc
fildl
and
gs
stc
xchg
push
inc
pushf
mov
pop
jmp
or
jg
pop
mov
popf
xchg
mov
jb
mov
mov
xor
push
sbb
mov
jg
push
jmp
lcall
or
mov
daa
shlb
scas
inc
and
inc
int3
arpl
adc
or
in
or
and
mov
jne
inc
fcmovnb
xchg
lea
in
stc
adc
aaa
adcb
cmp
sahf
xor
ret
push
pmulhuw
jno
and
mov
inc
fdivrs
fistpl
or
xor
pop
sub
push
jmp
mov
jo
add
mov
and
pop
jne
inc
cmpsl
jp
mov
adc
dec
pop
xor
push
outsb
pop
sahf
lahf
jno
out
shlb
cmc
adc
push
lea
fs
stc
xchg
imul
pusha
out
or
jg
pop
mov
popf
xchg
scas
mov
mov
xor
inc
fidivl
push
sbb
mov
jg
fdivr
push
jmp
popf
xor
dec
jb
jle
mov
daa
shll
inc
and
testl
jl
ljmp
in
or
and
es
je
inc
fcmovnb
xchg
lea
jecxz
stc
adc
stos
inc
sbb
adcb
cmp
pusha
outsb
mov
jle
fdivrl
adc
fidivl
xor
clc
mov
inc
fdivrs
ficompl
or
xor
pop
sub
adc
jnp
jmp
mov
jo
call
mov
es
and
lods
inc
cmpsb
js
mov
lret
adc
dec
sbb
or
mov
shrl
adc
inc
adc
and
arpl
xchg
stos
inc
cltd
mov
sbb
mov
mov
jg
pop
mov
popf
xchg
scas
fdivl
mov
mov
xor
fidivl
push
popa
clc
xchg
jg
push
in
sub
popf
xor
dec
jae
jge
mov
sub
mov
scas
inc
and
testl
jp
jmp
lret
lret
or
pop
ds
mov
jb
inc
fadd
xchg
lea
out
inc
sbb
leave
pusha
insb
mov
jle
fstpt
pushf
adc
xor
mov
mov
inc
fdivs
fcomps
or
xor
adc
jp
ljmp
jno
sarb
daa
push
and
outsb
push
jae
inc
movsl
jbe
mov
leave
adc
dec
sbb
leave
dec
insb
or
sahf
mov
outsb
add
inc
adc
sti
xchg
gs
inc
xchg
mov
sbb
mov
mov
jg
pop
mov
popf
lods
fnsave
and
loope
cld
xchg
xor
inc
fidivl
push
sbb
test
jg
fdiv
push
in
sub
popf
xor
dec
je
jl
mov
sub
mov
mov
and
testl
js
in
or
xor
lret
mov
sbb
outsl
push
jo
inc
ffree
xchg
lea
loope
sti
adc
stos
inc
pop
xor
sbb
leave
pusha
push
mov
jle
fidivrl
pushf
adc
fdivl
xor
mov
mov
inc
fdivs
pop
testb
ss
sub
pop
jns
jmp
jnp
xor
into
mov
sub
xlat
outsb
push
jb
inc
movsb
je
mov
adc
dec
sbb
leave
dec
imul
pushf
imul
mov
outsb
add
inc
adc
cld
xchg
arpl
sbb
mov
pusha
call
or
jg
pop
rclb
push
popf
lea
mov
xor
inc
fidivl
push
sbb
test
push
xlat
notb
daa
stc
popf
xor
dec
je
jnp
mov
sub
lahf
fnstenv
out
mov
and
testl
ja
in
or
xor
leave
jmp
push
call
insl
cmp
inc
fnstsw
loopne
sti
adc
stos
inc
push
xor
pusha
imul
mov
pushf
cvtps2pi
jae
xor
mov
mov
inc
fdivs
aad
testb
ss
daa
jge
pop
js
jmp
jp
xor
mov
sub
fsubrs
jo
inc
mov
ret
int
cmc
adc
notl
in
orl
lret
or
fwait
mov
outsl
push
out
or
mov
nop
bound
jecxz
lret
add
cmp
or
cmpb
rclb
pop
sahf
mov
and
xchg
das
add
push
sbb
andl
pop
hlt
push
in
and
inc
je
jns
mov
sub
sahf
fidivl
in
mov
pop
repnz
and
into
gs
push
lods
jbe
in
add
xor
enter
sbb
push
jmp
imul
outsb
mov
mov
fisubs
jecxz
inc
adc
ss
test
jg
xlat
mov
popf
push
sub
jae
das
and
pusha
jle
xchg
mov
inc
fnstenv
aam
testl
jbe
jmp
jns
xor
int3
mov
sub
fnstenv
outsb
scas
inc
mov
ror
repz
addl
lret
dec
or
push
jmp
ljmp
fidivrs
es
pop
gs
mov
inc
xchg
scas
sbbl
mov
out
mov
cmpl
pop
or
fisubrl
xchg
sub
dec
sbb
andb
pop
aad
push
in
and
sahf
xor
js
mov
sub
popf
fidivl
in
mov
push
icebp
clc
and
gs
push
lods
jne
in
add
xor
out
mov
sbb
sub
insl
mov
mov
frstor
loop
inc
adc
sbbb
xor
mov
jg
mov
popf
or
cs
pop
jge
xchg
scas
addb
rcrb
scas
add
pusha
testl
jle
push
jne
jmp
js
xor
lret
mov
sub
jo
insl
scas
inc
lahf
jno
mov
les
addl
lret
inc
data16
cltd
mov
jo
in
or
cmp
gs
lea
inc
xchg
scas
sbbl
mov
in
mov
cmpl
pop
or
fldcw
cld
xchg
sub
inc
fldt
dec
sbb
andl
push
in
and
sahf
xor
ja
mov
sub
pushf
fidivl
jmp
inc
sbb
aas
into
gs
push
lods
je
in
add
xor
in
mov
sbb
sub
insb
mov
mov
fsubl
loope
inc
adc
sbbb
xor
popa
data16
mov
fildl
popf
or
fdivl
sub
cli
xchg
scas
jg
fnstenv
shlb
add
ss
and
adc
movsl
ja
xor
lret
cld
sbb
jo
insb
scas
inc
sahf
jo
mov
ret
adc
addl
inc
or
cwtl
mov
mov
jmp
inc
fidivrs
or
es
gs
mov
inc
xchg
lods
sbbl
mov
in
mov
xorl
pop
or
fsubrs
cld
xchg
sub
inc
fldt
dec
sbb
sbbb
pop
shl
push
in
and
sahf
xor
jbe
mov
sub
fidivl
ljmp
and
into
gs
push
lods
jae
in
add
xor
mov
sbb
sub
imul
and
or
lods
inc
adc
sbbb
xor
popa
andl
push
push
fiaddl
popf
or
fdivl
sub
mov
lods
jle
fldcw
shlb
add
aaa
into
push
and
push
jae
in
movsb
jne
xor
enter
sbb
jo
imul
mov
rcll
inc
adc
inc
or
xchg
mov
shl
jo
jmp
or
std
mov
inc
lods
test
fidivs
mov
xorl
push
or
xlat
test
cld
xchg
sub
inc
fldt
dec
stc
jg
cmp
iret
mov
push
in
and
sahf
xor
jne
mov
sub
lcall
sbb
clc
and
push
lods
jb
in
add
xor
adc
push
jmp
cmp
push
inc
fnstsw
fisubl
fildll
pop
xor
popa
andb
mov
mov
popf
or
fdivl
sub
pop
jp
xchg
lods
jge
fldcw
iret
pusha
testl
and
push
jb
in
mov
les
test
push
stc
pop
xchg
sub
fnstenv
push
inc
pushf
insl
testl
icebp
adc
test
xor
inc
arpl
mov
xchg
mov
shl
jo
call
or
std
mov
mov
lret
xor
ljmp
push
or
test
mov
sub
inc
fldt
sbb
jle
cmp
into
lahf
adcb
out
push
in
and
sahf
xor
je
mov
sub
cltd
fidivl
call
clc
pop
cmp
outsb
inc
push
lods
jno
in
add
xor
ret
loop
mov
push
xor
jo
imul
fs
or
lods
inc
adc
sbb
lret
jg
aaa
mov
call
push
add
push
popf
or
fdivl
sub
pop
jns
xchg
stos
jl
fldcw
into
pusha
idiv
push
aaa
into
dec
and
push
jo
in
mov
ret
hlt
mov
sub
fidivl
push
clc
sahf
mov
push
lods
lock
in
test
xor
mov
xchg
mov
shl
jno
out
dec
fbstp
or
std
mov
inc
lea
int3
arpl
cld
mov
xorb
push
adcl
jne
cmpsl
daa
mov
daa
cli
inc
fsubrl
dec
sbb
jge
cmp
int3
sahf
sbbl
push
repnz
ss
je
jb
mov
sub
cwtl
out
inc
sbb
stc
nop
push
cmp
gs
aas
pop
scas
jo
in
cmpl
or
adc
ss
push
mov
sti
or
lods
inc
cvtpi2ps
bound
mov
xorb
pop
sahf
or
jae
sub
xchg
test
lret
sti
int
clc
sbb
into
dec
pop
adcb
outsb
push
in
lahf
jb
xor
lcall
addr16
sbb
repz
inc
xlat
test
and
push
in
pushf
sbb
fucomi
in
jl
iret
out
xlat
ficompl
fdiv
leave
adc
repnz
repz
mov
xchg
mov
jge
enter
fldenv
push
push
std
pop
add
lret
ja
in
push
sbb
imulb
sub
rcrl
or
inc
outsl
shr
push
cmp
lods
fcmove
mov
sub
rep
orb
xchg
xor
outsl
push
aad
das
mov
outsl
and
cltd
lods
into
out
jle
inc
jmp
fcmovb
add
arpl
push
push
xlat
ds
add
loop
sbb
pop
or
in
inc
mov
outsl
push
adcl
in
add
fildl
xchg
or
or
mov
roll
sbb
out
loopne
out
jmp
dec
stc
sub
repnz
mov
in
sbb
shll
pop
dec
adc
das
jg
lock
fbld
cmp
loopne
dec
loopne
std
cmp
dec
dec
cmpsl
and
icebp
pop
mov
stos
mov
mov
mov
push
mov
pop
push
fimuls
xchg
fdivrp
lret
and
mov
xchg
push
dec
mov
fsts
int
hlt
add
mov
subl
mov
pop
add
add
sub
cmp
or
loope
repz
push
push
or
imul
ss
cwtl
lods
jae
popf
adcl
ss
idiv
rolb
inc
mov
loopne
add
pop
pop
mov
or
jecxz
pop
ret
push
inc
and
cmp
jge
pop
test
nop
out
lea
pop
add
into
and
stos
into
cmp
pop
lret
dec
jae
cwtl
bound
cmp
jecxz
cltd
inc
cld
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
filds
mov
pop
out
jne
inc
sub
lds
xchg
movsb
sbb
scas
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
dec
ss
mov
in
xchg
dec
xor
sti
mov
dec
aad
in
data16
pop
sti
or
and
call
lcall
mov
push
divl
dec
pop
stos
aas
xor
mov
push
sub
xlat
call
frstor
adc
es
ret
and
loop
pop
mov
fisubs
mov
cmp
dec
lahf
sahf
scas
cmp
pop
lret
adc
leave
loopne
fwait
and
cmovle
inc
js
cmp
push
js
shrd
sti
push
popf
cwtl
sub
insb
push
popf
test
cmp
mov
mov
scas
push
sub
shrb
dec
orl
jbe,pn
and
inc
int
inc
and
push
lods
mov
ljmp
in
cs
mov
mov
mov
cmpsl
sarl
arpl
icebp
test
andl
out
ret
movsb
lret
jmp
cmp
movsl
mov
mov
cmp
sbb
popw
sahf
mov
add
mov
mov
and
pop
repz
mov
cmpb
mov
cmp
cmpsl
pop
inc
mov
movsb
mov
lahf
sub
pusha
push
shlb
call
cld
add
sbb
mov
xchg
test
sbb
and
das
repz
inc
sbb
push
shrb
xor
cmpsl
jecxz
call
sbb
xorb
pop
or
cli
negl
dec
push
cmc
mov
std
int
sarl
dec
out
andb
pop
test
and
stos
pmaxsw
int3
dec
lret
xor
pop
lods
and
in
xlat
pop
dec
and
dec
mov
mov
mov
mov
filds
out
loope
and
dec
sub
xor
mov
das
btc
cmp
mov
lcall
xlat
fidivs
dec
mov
sbb
test
rclb
mov
cmp
and
cltd
sbb
imul
pusha
sub
jg
scas
aam
xlat
jnp
sub
sti
mov
push
xchg
movsb
lods
jne
cmp
jbe
cmp
in
cmp
lcall
mov
cwtl
rorl
xchg
jb
je
and
dec
fsubp
lock
movsl
dec
sub
cmp
mov
nop
xor
dec
outsl
mov
add
adc
scas
incl
push
aaa
cmp
clc
pop
fiaddl
cld
push
dec
jbe
cmc
icebp
mov
dec
dec
lea
and
addr16
mov
sahf
out
popf
push
sahf
lret
xor
lret
nop
mov
jmp
sub
mov
and
mov
push
and
test
scas
push
ja
mov
sub
sar
inc
mov
push
repz
sbb
iret
xor
scas
daa
xor
mov
shll
out
or
push
pop
arpl
jbe
outsl
xchg
scas
mov
jbe
insl
dec
into
mov
pop
adc
aam
adc
aad
or
loop
es
fld1
add
pop
fdivs
dec
daa
movsl
pop
or
outsb
push
push
sti
mov
imul
out
mov
jnp
and
cwtl
push
fisubl
stc
ja
push
fisubs
movsb
and
xchg
push
xchg
xchg
jmp
loope
sbb
or
out
adc
add
out
adc
pop
push
repz
movsl
rcr
fcoms
icebp
daa
daa
ja
lock
dec
mov
cmovns
dec
push
scas
mov
sbb
add
jo
cmc
in
mov
push
or
sti
cmp
imul
push
adc
sbb
addr16
jl
rol
jbe
fimuls
push
jle
incl
lea
das
inc
sbb
sbb
fmull
jne
pop
iret
jmp
dec
or
repnz
jno
inc
mov
sahf
lods
lods
push
push
insl
enter
out
lahf
or
add
sub
cmpsb
mov
pop
mov
add
xchg
mov
jb
fisttps
add
fs
lods
and
cmpsl
sahf
cli
push
in
inc
sub
mov
and
mov
mov
out
cltd
fstl
insb
xor
lods
imul
lods
and
js
dec
insl
and
aas
shll
mov
aam
ss
data16
push
sbb
mov
mov
adc
dec
mov
inc
mov
sub
jle
cmpb
cld
mov
push
xor
push
dec
fst
add
push
loope
xchg
mov
cmp
imul
add
xor
mov
pop
inc
mov
std
mov
cmpsl
jbe
sbb
pop
push
es
test
stc
push
jnp
out
mov
insl
divb
mov
pop
or
in
fs
mov
mov
aam
dec
lea
test
es
mov
addr16
in
dec
jecxz
pusha
data16
aam
mov
sub
dec
addb
enter
push
xchg
xchg
mov
inc
imul
inc
sub
icebp
jle
sbb
push
mov
movsb
subb
pop
inc
stos
xchg
add
cmp
imul
push
cld
mov
xor
mov
lahf
xchg
adc
fisubs
hlt
mov
xor
insl
int
jmp
daa
push
fwait
pop
fcomps
daa
movsl
out
push
ret
fcompl
and
ret
imul
cmpsl
add
inc
es
pop
sub
das
negb
xchg
movsb
int3
xchg
ret
repz
or
imul
test
mov
cmp
sub
sub
stos
aaa
je
mov
addr16
lea
movsb
imul
loope
sub
sub
jp
jl
sbb
dec
inc
stos
in
inc
aad
mov
jp
adc
mov
inc
xlat
sub
inc
aad
mov
inc
shrl
mov
inc
rcrl
idivb
aas
icebp
cmpsl
pop
adc
jl
or
sbb
pop
inc
std
lahf
add
stc
jns
mov
mov
xchg
push
aaa
icebp
mov
fimuls
cltd
in
test
dec
test
mov
aaa
mov
jae
mov
xchg
and
mov
push
mov
cmp
sub
jae
mov
adc
fwait
aaa
cmp
push
das
test
in
rol
cltd
ljmp
pop
jp
add
out
add
cmp
mov
dec
arpl
jbe
or
pop
fsts
push
int3
out
aas
sbb
sbb
push
xchg
push
scas
andl
pop
lds
inc
cmp
pop
adc
add
scas
mov
notb
fnstsw
mov
insb
scas
sbb
shr
sbb
adc
daa
mov
dec
femms
movsl
mov
add
cmp
je
mov
sti
popa
inc
test
xlat
sbb
inc
mov
inc
adc
ret
insl
inc
movsb
gs
dec
test
call
scas
movsb
insl
push
and
js
stos
pop
jo
mov
nop
dec
jge
cmpl
sub
sarl
add
mov
mov
js
sbb
loope
xchg
nop
aas
jl
mov
std
jb
stos
push
int
ljmp
aam
std
pop
sti
int
popf
cltd
xor
and
mov
aas
fstps
pop
fildll
lea
in
cmp
orl
xchg
dec
add
mov
mov
stc
mov
faddl
les
les
cwtl
dec
sbb
movsl
pshufw
xchg
pop
and
push
ja
push
out
mov
cmpsl
push
test
xchg
mov
mov
std
mov
jb
test
in
ljmp
sub
pop
add
push
dec
sbb
pop
sbb
lods
fdivs
add
lahf
fistl
push
out
push
inc
les
add
dec
dec
add
