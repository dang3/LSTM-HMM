add
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
call
sub
mov
mov
pusha
call
add
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
xor
push
pop
cmp
je
add
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
jmp
mov
pop
call
add
add
cmp
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
mov
mov
push
pop
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
ja
mov
sub
jne
lea
jge
popf
pushl
pop
dec
push
mov
call
jmp
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
call
add
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
add
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
call
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
in
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
call
add
add
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
call
add
add
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
call
mov
and
add
and
add
add
lock
add
add
and
add
add
mov
add
lods
and
add
add
movsb
and
add
add
adc
add
mov
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
jbe
add
inc
and
add
and
add
add
and
add
add
add
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
add
lock
add
add
and
add
add
mov
add
lods
and
add
add
movsb
and
add
add
adc
add
mov
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
jbe
add
inc
and
add
and
add
add
and
add
add
add
add
and
add
add
add
add
popa
jo
jb
add
dec
add
insb
outsb
inc
add
enter
jae
gs
popa
insb
jne
add
inc
gs
jb
arpl
jae
gs
imul
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
fs
imul
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
mov
jo
outsb
fs
push
add
add
outsb
fs
je
insl
inc
add
popa
je
inc
jbe
outsb
je
add
movb
gs
jne
jb
outsb
je
push
add
imul
je
imul
push
add
add
je
jb
jbe
je
push
jb
imul
push
add
push
gs
insl
gs
push
add
aad
inc
gs
gs
inc
imul
gs
jb
arpl
jae
gs
jo
add
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
jbe
outsb
je
add
lock
imul
jb
je
arpl
aam
inc
gs
jb
jbe
push
jns
gs
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
je
jo
jo
outsb
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
add
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
add
insl
jo
insb
fs
jb
add
add
push
popa
insl
jo
insb
fs
jb
add
add
addr16
push
popa
insl
jo
insb
fs
inc
gs
fs
bound
xor
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
xor
add
or
add
inc
add
add
add
add
add
push
add
add
add
add
add
pusha
add
add
add
add
add
jo
add
or
add
addb
add
and
add
add
add
cmp
add
loopne
add
mov
add
push
inc
add
push
add
add
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
lods
stos
add
cmpsl
push
mov
mov
mov
lret
int
into
rcl
in
rcl
shl
iret
ror
hlt
int
int
enter
enter
mov
in
mov
mov
stos
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
not
rcl
cld
fcom
std
fcom
xlat
fdivr
aad
aad
rcl
iret
dec
into
int3
aad
aam
ror
sar
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
stos
add
scas
sbb
mov
jnp
mov
sar
mov
lret
dec
rcl
aam
fcom
call
fcom
call
aad
dec
int3
into
dec
int
call
aam
dec
int
inc
mov
mov
ljmp
cmpsl
cmpsb
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
or
or
sbb
push
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
int
call
rcl
call
fdivr
fdivr
aad
aad
int
int
leave
lret
leave
dec
into
int3
inc
sarl
pushl
test
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
sbb
movntps
sbb
xor
cmp
aaa
cmp
cmp
and
and
pop
pop
pop
pop
add
add
add
add
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
iret
sar
aad
aam
aad
dec
rcl
dec
leave
enter
inc
mov
mov
lods
scas
scas
jmp
popf
sahf
xchg
xchg
cwtl
lcall
test
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jg
jl
jle
jle
jno
jno
popa
bound
push
push
push
xchg
cmp
inc
inc
mov
outsl
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
inc
enter
leave
leave
dec
leave
lret
dec
enter
mov
mov
scas
scas
scas
jmp
fwait
fwait
call
xchg
xchg
cwtl
xchg
cltd
fwait
cltd
in
test
push
prefetch
add
add
add
add
add
add
add
add
add
add
add
add
outsb
jo
add
pop
or
jp
nop
mov
xchg
xchg
xchg
incb
jp
idivb
jmp
jo
out
addr16
fdivs
ret
jle
js
jp
arpl
inc
inc
inc
cmp
sbb
sbb
adc
or
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
nop
incl
addl
xchg
xchg
mov
mov
cwtl
mov
js
jns
cs
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addl
in
mov
incl
xchg
std
mov
jle
jb
jb
jne
jne
jg
jg
addl
xchg
addr16
cmp
and
and
jg
jle
lcall
shrb
lods
stos
sti
lods
stos
lods
lods
lods
stos
test
test
std
lcall
incl
jg
js
jp
jnp
jnp
xchg
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
nop
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
push
or
xor
inc
dec
insb
insl
insl
jl
test
leave
cltd
fistps
cltd
fwait
stc
nop
nop
xchg
std
mov
mov
xchg
mov
lea
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
lods
cmpsl
lods
add
adc
scas
call
cltd
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
pushf
popf
std
movsl
movsl
movsl
stc
mov
xchg
xchg
in
nop
nop
nop
in
test
jne
prefetchw
add
or
sub
push
dec
dec
dec
data16
jo
xchg
xchg
rclb
xchg
std
nop
nop
decb
xchg
xchg
lcall
cmpsl
test
lods
cmpsl
lods
pushl
cmpsl
lods
mov
xchg
stos
std
rolb
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
cwtl
pushf
incl
mov
call
nop
xchg
xchg
xchg
pushf
pushf
pushf
movsb
mov
test
negl
jp
movsl
push
push
push
outsl
dec
dec
dec
popaw
popa
arpl
jb
mov
jle
test
mov
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
xor
ja
mov
movsl
mov
mov
lods
lods
mov
mov
add
shll
adc
mov
jmp
mov
call
xchg
xchg
call
xchg
xchg
lcall
mov
movsl
mov
stc
cwtl
lcall
mov
xchg
aad
cltd
cltd
in
xchg
xchg
out
lea
stc
xchg
test
std
xchg
jb
lcall
jmp
inc
jl
mov
jns
mov
jae
mov
outsb
ljmp
adc
lods
or
or
pushl
mov
mov
pushf
mov
movsb
movsb
add
pop
pop
adc
mov
lcall
xchg
xchg
call
fwait
lcall
sahf
sahf
lcall
lcall
xchg
xchg
xchg
nop
xchg
xchg
call
cwtl
cltd
cld
xchg
cltd
popf
stc
mov
xchg
popf
cld
sahf
mov
xchg
insb
xchg
xchg
push
jge
xchg
dec
jns
lcall
sahf
push
addr16
sahf
pop
jmp
arpl
stos
adc
stos
pcmpgtd
stos
adc
scas
adc
mov
push
mov
imul
push
imul
ds
mov
scas
lods
scas
movsb
movsl
movsb
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
pushf
lcall
movsl
movsl
jmp
mov
xchg
decl
mov
decl
mov
lcall
xchg
push
jnp
xchg
jno,pt
xchg
sub
call
or
pop
call
add
lahf
pop
pop
jmp
sbb
mov
outsl
pushl
sbb
jb
mov
and
shlb
inc
aas
test
ret
mov
lods
lods
mov
lahf
mov
movsb
add
pop
pop
adc
lods
mov
shll
pushf
pushf
sahf
jmp
cmpsb
jmp
test
ljmp
pushf
sahf
call
pop
js
mov
decl
sub
mov
decl
or
push
incl
add
lea
push
call
add
cltd
add
lahf
add
or
mov
outsl
pushl
sub
mov
sub
inc
sub
jle
enter
leave
das
cmp
inc
mov
mov
cld
scas
mov
lret
mov
add
add
add
add
stos
movsb
stos
add
adc
test
ljmp
sahf
jmp
stos
test
stos
stos
lods
ljmp
mov
ljmp
mov
mov
xchg
arpl
xchg
incl
pop
push
incl
push
incl
push
decl
add
xchg
add
xchg
add
lcall
jmp
adc
mov
ss
leave
cmp
dec
cmp
call
cmp
call
cmp
call
inc
xchg
dec
mov
std
mov
mov
movsl
movsl
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
movsb
test
mov
mov
mov
test
ljmp
mov
pushl
mov
mov
mov
stos
test
mov
mov
decl
adc
xchg
pop
decl
pop
push
incl
add
mov
push
call
add
sahf
add
add
cmpsl
add
lods
add
pushl
cmp
into
inc
mov
rolb
call
dec
nop
fmuls
fmuls
fimull
fisttpl
fsts
call
test
mov
mov
movsb
movsl
movsb
arpl
mov
add
add
add
fwait
cwtl
cwtl
add
dec
adc
jp
movsl
lahf
mov
jmp
stos
test
pushl
mov
pushl
mov
mov
movsl
mov
decl
popa
call
adc
pop
decl
push
decl
add
pushf
add
add
test
pusha
ljmp
pop
gs
es
into
dec
call
push
cwtl
call
push
cltd
fsts
fstpl
ficoms
ficomps
jmp
pop
mov
jmp
pop
lahf
call
xchg
mov
mov
jne
mov
sahf
add
inc
inc
adc
ja
sahf
fwait
lahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
jne
nop
and
and
xchg
and
call
sbb
or
decl
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
fcomps
fisubl
fbld
fisubs
jmp
cmpsb
jmp
cmpsb
jmp
addr16
ljmp
call
test
mov
cmpsl
cmpsl
mov
lahf
sahf
add
inc
inc
adc
jae
cltd
xchg
cwtl
call
sahf
pushf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
cltd
outsl
lcall
sub
cwtl
push
callw
add
cltd
add
mov
add
stos
add
mov
pushl
adc
roll
fsubrl
jmp
outsl
lods
jmp
outsl
lods
jmp
jb
ljmp
in
jae
out
jne
in
jbe
out
jae
jmp
mov
mov
test
lcall
mov
add
add
add
add
aas
adc
insl
js
mov
pushf
lcall
mov
mov
mov
mov
mov
mov
movsl
lods
lcall
jo
lahf
aaa
jne
sahf
cmp
mov
sbb
pop
call
add
movsl
add
test
popa
pushl
add
mov
sbb
fsts
in
mov
jmp
jle
jmp
mov
in
cmpb
repnz
hlt
test
ljmp
mov
test
popf
daa
sahf
mov
sahf
add
add
add
popa
add
xor
push
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
pushl
insl
mov
lcall
jmp
js
lcall
lcall
add
stos
add
scas
add
mov
data16
mov
add
dec
es
movsb
call
mov
repnz
mov
push
xchg
sar
nop
push
nop
xchg
push
pop
out
mov
inc
stos
stos
mov
sahf
sahf
xor
pushf
sahf
add
add
add
inc
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
xchg
mov
mov
mov
mov
mov
mov
inc
mov
jl
lcall
dec
cmp
movsb
xor
lcall
add
mov
add
stos
add
mov
mov
add
enter
fdivs
mov
call
xchg
push
lcall
repnz
pushf
lret
lcall
sti
popf
into
cld
popf
into
cli
cwtl
leave
push
xchg
sar
mov
dec
enter
mov
sahf
mov
popl
fwait
lcall
xor
cs
cmp
dec
jecxz
pop
call
mov
mov
mov
sar
ret
mov
inc
leave
mov
mov
ljmp
xchg
movsb
sub
cltd
pop
pop
lcall
pop
ljmp
popa
mov
add
movl
je
loopne
xchg
out
mov
push
movsb
int
mull
cli
cmpsl
sar
cli
cmpsb
into
cld
test
cld
stos
iret
cld
test
sar
negb
int3
dec
enter
mov
into
mov
xchg
xchg
add
lcall
xor
xor
or
bound
pop
xlat
jne
jb
mov
sarl
mov
inc
ret
ret
inc
mov
enter
ret
ret
mov
test
movsb
push
test
scas
push
mov
lods
dec
test
mov
add
jmp
add
mov
arpl
mov
add
int
insl
call
add
adc
in
pop
cmpsl
push
sahf
lret
lods
sar
sti
scas
aad
cld
mov
cli
mov
std
mov
cld
mov
std
mov
std
mov
mov
mov
push
movsl
jmp
mov
call
leave
int
mov
mov
sahf
lahf
mov
or
add
add
xor
add
dec
dec
ss
jo
cwtl
lcall
aam
xlat
jmp
fcom
not
rcl
std
int3
into
int
lret
dec
leave
lret
dec
lret
mov
lods
jmp
push
mov
lods
cmp
jmp
add
lods
add
mov
mov
add
rolb
outsl
call
add
fiadds
jae
call
jno
cli
scas
aad
std
mov
cld
mov
fcos
cld
mov
cld
mov
fdivr
inc
std
mov
lret
call
lret
into
mov
lahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
or
leave
enter
loop
out
jmp
test
in
leave
fsub
fsub
fcmovu
xlat
cli
fcom
std
int
iret
mov
imul
jmp
add
mov
popa
mov
add
leave
add
add
faddl
jne
in
ja
in
xor
sti
mov
loopne
inc
loope
inc
loope
std
loopne
inc
dec
loopne
inc
dec
loopne
dec
fdivrp
dec
sti
mov
enter
sar
mov
mov
xchg
adc
add
add
incb
incb
std
std
add
cmc
testb
in
jmp
jmp
out
sub
out
in
dec
call
ljmp
jecxz
out
fucomi
ret
mov
xchg
test
ja
movsb
adc
pop
ljmp
add
mov
add
int
insl
call
add
add
ljmp
cli
mov
jecxz
std
lret
in
std
int3
in
dec
jecxz
dec
in
std
int3
jecxz
dec
loope
shl
shl
std
shl
std
shl
cld
ret
in
mov
xlat
inc
out
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
fwait
lcall
add
add
std
incl
std
add
stc
testb
hlt
lock
repnz
push
out
icebp
lock
out
icebp
lock
out
out
pop
loopne
loopne
lds
xchg
sti
lahf
es
mov
add
add
mov
fs
mov
add
rolb
jno
fiaddl
jne
jecxz
jns
in
push
jge
negb
sti
mov
dec
in
cld
shl
call
call
call
in
aad
jmp
fucomi
std
fldl2t
shl
push
ret
jmp
aam
dec
lret
lret
repz
test
xchg
xchg
xchg
and
xchg
xchg
add
cld
add
std
testl
repnz
or
shlb
sarb
lcall
jmp
add
mov
add
lret
add
add
fildl
ja
out
js
out
sbb
stc
jbe
sti
ret
loopne
cld
fldl2e
std
fldlg2
fldl2t
fucomi
fsubr
std
fucomi
std
fucomip
fsubrp
jmp
in
std
shl
push
ret
jmp
rcr
call
iret
sar
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loope
add
leave
sbb
stos
jnp
repnz
pop
lcallw
add
mov
arpl
mov
add
int3
add
aad
jno
loopne
jne
jmp
sub
std
shl
std
loopne
fucomp
fucompp
fldl2t
xlat
out
std
aam
shl
sti
shl
cli
shl
push
iret
fdivrp
test
out
mov
jmp
rcr
call
fcomp
sti
mov
mov
cltd
cltd
lcall
cltd
fwait
add
aad
ror
adc
scas
mov
lcall
add
mov
mov
add
rolb
outsb
call
add
add
jmp
aaa
xchg
cld
xchg
enter
loope
cld
lret
sti
stc
rcr
idivl
sar
repnz
into
out
mov
lret
ljmp
std
call
call
in
mov
mov
xchg
add
add
add
int3
add
rol
mov
cmpsb
loopne
xor
pusha
ljmp
add
mov
add
int3
pop
jb
rorl
jmp
sbb
ljmp
call
scas
enter
mov
cli
enter
lret
fmul
into
fsubp
rcl
shl
xlat
fcmovb
out
loop
in
out
test
out
out
popf
call
leave
leave
push
stos
stos
lods
adc
cmpsb
test
add
ret
mov
ret
mov
stos
aam
dec
jg
sahf
sbb
test
push
scas
and
jns
mov
dec
xchg
ret
stc
leave
fs
test
mov
shll
rcl
ror
aam
lret
rcl
int3
mov
iret
shlb
xlat
rcl
jg
fcmovnu
jb
gs
in
out
jmp
xor
cmc
div
and
lock
fcmovnu
or
mov
int3
add
add
add
roll
mov
les
insb
mov
stos
je
ljmp
mov
sarb
test
mov
pushf
lret
ror
int
lret
jp
int
addr16
ror
push
iret
rcl
dec
aad
aad
rcl
xor
daa
xlat
sbb
adc
in
push
loope
in
call
repnz
add
sti
testl
std
incb
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
rcll
lds
leave
xor
int
daa
int3
ror
and
aad
sbb
rcll
rcl
rorl
aam
push
rcr
add
fcmovnu
add
add
in
add
in
ljmp
std
add
mov
add
rol
ret
vmovaps
les
mov
mov
push
ret
or
leave
movb
enter
int
add
aad
add
fcom
add
xlat
aam
aam
aad
aad
xlat
add
fsub
add
fiaddl
fsubp
loop
filds
in
out
repnz
repnz
incb
std
std
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
mov
mov
stos
test
test
pop
add
add
add
add
add
add
mov
mov
mov
mov
enter
shr
aam
aad
rcl
sar
ror
into
cli
int3
int
stc
lret
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
mov
iret
aad
call
xlat
xlat
call
ror
dec
into
iret
dec
lret
mov
mov
cld
lods
lods
stos
icebp
xchg
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
je
je
jae
fs
inc
dec
dec
cmp
sub
sub
aaa
xor
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
ret
lret
lret
call
rcl
call
aam
dec
lret
lret
mov
sarb
ljmp
popf
popf
xchg
xchg
cwtl
jmp
jno
xchg
pop
adc
add
add
add
add
add
addb
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
jo
jno
mov
scas
pop
mov
mov
mov
mov
ret
mov
mov
mov
mov
jmp
pushf
pushf
call
xchg
xchg
fwait
fwait
cltd
out
addl
adc
wrmsr
add
add
add
add
add
pop
cltd
lcall
pushf
xchg
lcall
addb
jge
jnp
jns
jp
jnp
jnp
jns
jp
je
je
push
push
push
cmp
aaa
sahf
sahf
pushf
mov
scas
scas
repz
scas
scas
sti
lods
lods
scas
std
cmpsl
test
pushf
call
xchg
call
mov
lods
jmp
scas
scas
leave
cmpsb
cmpsb
movsb
cltd
jae
je
adc
adc
add
add
add
add
insl
outsb
outsb
pop
xchg
mov
loop
lcall
mov
nop
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsl
outsl
orl
lcall
mov
call
sahf
ljmp
stos
scas
std
mov
mov
stc
mov
mov
cmpsb
mov
addb
add
add
add
add
popa
or
lods
mov
movsl
mov
mov
mov
nop
call
popf
lahf
sti
sahf
mov
cwtl
call
push
push
push
jo
pop
pop
outsl
imul
jle
subb
nop
xchg
lock
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
scas
stos
insl
stos
stos
test
add
add
add
popa
or
mov
in
movsb
test
call
cwtl
call
cltd
fwait
fwait
pushf
fwait
fwait
lahf
popf
cli
xchg
xchg
cltd
jmp
xchg
mov
jecxz
orb
xchg
imul
sahf
dec
jnp
movsb
inc
jns
scas
xor
je
mov
outsl
ljmp
sbb
mov
mov
scas
mov
movsb
movsb
movsl
push
pop
pop
pop
or
mov
in
movsl
test
cltd
xchg
cwtl
lcall
mov
mov
decl
orl
xchg
jb
cld
xchg
popa
cmp
dec
js
nop
cmp
xchg
sub
xchg
sbb
adc
lahf
push
pusha
ljmp
sbb
mov
outsb
pushl
pop
jno
mov
pop
nop
mov
scas
lods
xchg
lahf
sahf
popf
adc
add
add
pusha
pop
pop
or
stos
mov
stos
mov
lahf
jmp
stos
stos
ljmp
xchg
lcall
cmp
mov
decl
adc
test
pop
decl
add
xchg
add
fwait
add
cmpsl
or
mov
jae
mov
jle,pn
lds
jg
leave
xor
dec
pop
xchg
inc
test
scas
movsb
cmpsl
test
add
add
add
pop
popa
pusha
or
movsl
test
test
cmpsl
ljmp
scas
mov
mov
mov
mov
mov
movsl
xchg
mov
decl
push
pop
incl
push
push
decl
add
xchg
add
mov
add
mov
insb
inc
ss
lret
inc
mov
rolb
call
inc
mov
xlat
inc
xchg
call
bound
stc
mov
mov
movsb
mov
incb
add
add
popa
popa
popa
or
popf
mov
ljmp
mov
mov
mov
mov
mov
jge
push
popa
call
push
pop
decl
add
xchg
add
sahf
add
cmpsl
add
lods
add
jne
rorb
xlat
pop
lcall
pop
sahf
jmp
pop
mov
jmp
insl
cmpsl
dec
cmpsl
mov
ret
movsl
xor
jg
add
add
dec
dec
dec
pop
jl
jnp
pushf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
cs
lcall
and
xchg
adc
xchg
add
popf
add
test
pop
ljmp
or
int3
xor
jmp
outsb
stos
jmp
jo
jmp
jno
out
jno
jmp
test
std
mov
test
inc
cmpl
add
dec
pop
insl
outsl
imul
test
lcall
mov
mov
sar
mov
xchg
lcall
jbe
popf
sub
xchg
or
lcall
pop
ljmp
add
ret
call
inc
xchg
jmp
js
jmp
mov
in
cmpl
hlt
mov
push
xchg
mov
test
push
cltd
fwait
cltd
add
sub
sub
push
push
dec
pop
imul
mov
mov
mov
mov
mov
xchg
ljmp
sub
cltd
pop
pop
jmp
add
mov
gs
mov
push
ja
loopne
mov
push
xchg
cwtl
push
cltd
clc
lcall
negb
inc
mov
stos
popa
mov
add
add
xor
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
ret
mov
test
ljmp
pop
imul
add
cmpsl
add
mov
fs
mov
add
fsubs
cmp
mulb
sar
stc
test
sar
cld
lods
iret
cld
stos
sar
sti
cmpsb
int3
jmp
mov
inc
rol
stos
stos
stos
jne
pushf
popf
or
add
add
push
dec
push
aaa
je
je
stos
stos
test
out
iret
int
leave
lret
int3
sti
enter
enter
mov
mov
stos
bound
mov
add
mov
arpl
rolb
dec
add
fiaddl
je
ljmp
sti
mov
std
mov
std
mov
std
mov
fcos
sti
mov
jmp
lret
rol
scas
scas
lods
mov
add
add
add
add
or
aam
dec
loopne
jecxz
loopne
fcmovnu
fadd
fcmovu
fcmovnu
aad
xlat
out
mov
addr16
test
or
scas
add
mov
add
xlat
add
or
lock
mov
std
ret
loope
inc
loopne
dec
std
enter
lret
std
lret
loope
cld
out
mov
lret
mov
xchg
sahf
sahf
pushf
sbb
add
add
std
std
add
incl
jmp
or
in
in
sbb
in
in
xor
loope
in
les
mov
mov
add
mov
arpl
rolb
dec
add
fildl
je
call
insl
mov
std
std
iret
in
std
shl
shl
aam
aad
std
fsub
shl
push
enter
int3
sar
mov
mov
add
std
incl
std
incb
std
std
std
pop
aam
aad
mov
pop
xchg
lahf
or
pusha
pushl
add
rolb
outsl
filds
ja
out
and
cld
shl
fldpi
fucompp
std
xlat
out
std
fld1
sti
xlat
out
cld
fsub
cld
aad
push
enter
rcl
sti
mov
popf
popf
das
add
add
int3
int
or
arpl
ljmp
add
movb
call
add
loope
ja
in
das
xchg
push
lcall
stc
lret
test
xlat
icebp
ret
out
ret
out
vpsubw
aam
ljmp
ljmp
test
add
add
add
aad
mov
jb
or
imul
pop
jno
lret
and
cs
ficoms
clc
in
mov
out
loop
lret
jmp
fdivrl
lret
enter
into
scas
in
fistpl
out
out
jns
rcl
dec
mov
add
add
mov
inc
scas
xchg
movsb
les
pop
mov
mov
nop
fidivrl
jle
rol
stos
mov
mov
ret
ror
rol
int3
insl
aad
iret
pop
rcl
iret
dec
fcomp
xlat
cmp
das
in
frstor
loop
lock
in
jmp
fcmovu
faddl
std
incl
std
add
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
enter
rcl
pop
mov
rcl
or
or
into
int3
add
std
incb
std
incb
lcall
shufps
or
int3
int
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
ret
mov
leave
mov
rol
mov
mov
mov
stos
lods
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
aam
rcl
sar
int
int
mov
mov
test
addb
add
add
add
add
add
add
add
add
jae
jb
data16
dec
inc
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
int3
into
call
aam
dec
into
into
inc
enter
mov
scas
jmp
mov
push
add
add
add
add
je
jae
xchg
aad
outsb
outsb
ret
popa
mov
addr16
outsl
outsl
outsl
jb
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cltd
cwtl
lds
jae
daa
daa
daa
das
add
add
add
add
je
jb
fwait
xchg
lcall
test
clc
mov
or
addl
push
dec
inc
mov
pushf
into
mov
mov
xchg
decb
mov
popf
fwait
pushf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
mov
test
mov
mov
xchg
xchg
xchg
cld
popf
pushf
sahf
cmc
cwtl
lcall
push
push
push
imul
jge
mov
xchg
notl
mov
pushl
xchg
mov
test
call
stos
lods
lods
add
add
add
test
scas
cld
xchg
xchg
xchg
lcall
fwait
lcall
lcall
xchg
mov
loope
jne
out
xchg
bound
std
lcall
ljmp
and
mov
outsb
pushl
pushf
lods
lock
mov
imul
into
add
xchg
pop
lods
cmpsb
lods
test
sahf
sahf
lahf
jmp
mov
xchg
decl
push
js
nop
inc
jae
lea
imul
sbb
pop
lcall
or
ljmp
and
and
jp
les
xchg
rcrl
subl
jne
push
movsb
popf
mov
cld
test
cmpsl
pushl
scas
mov
sahf
xchg
decl
or
mov
push
decl
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
inc
mov
aam
xchg
dec
cltd
mov
mov
mov
movsl
movsl
mov
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
pop
call
pop
pop
call
add
stos
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsb
call
lcall
cmpsl
test
pop
add
add
bound
adc
popf
fwait
pushf
cld
mov
scas
mov
mov
scas
lcall
xor
cltd
and
call
add
add
mov
xor
jmp
jl
out
jl
out
jle
fstps
mov
and
add
add
dec
adc
push
cmp
mov
mov
ret
mov
bound
jmp
add
cmpsl
add
mov
gs
pop
outsb
fmull
in
mov
push
xchg
xchg
enter
jmp
movsl
mov
cmpsb
cmpsb
sub
aas
aas
aas
adc
push
xchg
xchg
mov
inc
ret
ljmp
dec
cmp
sbb
cmpsb
add
mov
fs
add
aad
js
jmp
scas
clc
test
clc
stos
sar
cld
scas
sar
cld
lods
sar
scas
sar
ljmp
fldenv
incb
xor
xor
mov
mov
rcl
aad
aad
aad
rcl
shr
lret
cli
mov
mov
jmp
inc
add
aam
jb
out
xchg
clc
pop
cld
mov
std
rcr
std
ret
inc
lock
ret
in
test
addl
stos
stos
stos
add
in
in
or
out
jmp
outsb
fcomp
fisubl
movsb
and
popa
mov
add
fiadds
out
cmp
std
iret
in
shl
shl
std
aam
std
aad
push
leave
aad
into
in
scas
scas
scas
popa
jg
addl
add
add
incl
std
std
push
int
shrl
mov
add
mov
add
loope
jp
cmc
push
cmpsl
std
loop
xlat
out
std
aam
aad
cld
shl
sti
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
scas
push
fs
mov
or
fistps
jg
ljmp
cli
in
mov
shl
ljmp
loope
lret
ljmp
scas
vsqrtsd
add
add
sarb
movsb
pop
mov
lods
dec
and
shlb
lret
mov
fdivrs
int3
adc
into
outsl
xlat
int3
rcrb
rcl
dec
in
fistpll
call
out
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
les
sbb
fstp
bswap
int3
int
aad
push
incl
addl
add
lods
incl
rol
add
incb
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
cmp
inc
cltd
sub
ret
aas
push
push
iret
and
pop
xor
xchg
jbe
outsl
call
mov
dec
or
aad
cmp
scas
jmp
dec
push
adc
adc
shl
fldl2e
pop
addb
push
ret
jle
sub
jnp
xchg
mov
push
add
pop
js
imul
loop
or
or
pop
cwtl
das
lods
fdivrs
xor
pop
jne
in
repnz
push
out
fdivrs
push
pushf
mov
test
and
je
lret
popf
pop
mov
jp
int
and
bound
enter
xor
test
rclb
mov
ljmp
iret
sbb
or
lret
inc
arpl
or
inc
lds
cmpsb
dec
mov
cmp
push
inc
mov
ljmp
movsb
push
mov
jecxz
icebp
addr16
sahf
in
data16
sarb
imul
rolb
add
adc
pop
scas
lds
mov
call
loope
and
mov
mov
mov
lret
sti
cmc
into
adc
cmc
call
sbb
std
or
shlb
out
ret
pusha
push
aam
sub
cld
data16
inc
add
lea
jne
mov
sub
pusha
or
pop
jp
clc
sub
push
arpl
xchg
adc
or
je
pop
add
push
insl
pop
out
rclb
jecxz
jl
adc
cltd
movsl
stos
and
sbb
test
sbb
ljmp
lcall
xchg
or
fstl
outsb
fmul
fldcw
mov
or
add
inc
push
std
sub
data16
xlat
jo
sub
leave
xchg
cmp
outsl
icebp
cmpsl
xor
mov
lea
push
push
cmp
and
int3
out
and
insb
sbb
int3
xor
mov
lods
and
cmp
mov
scas
es
dec
push
jae
stc
fadd
inc
bswap
mov
sub
insl
popf
rorb
jle
daa
lods
push
sub
push
cmpsb
lock
and
in
adc
cwtl
addb
test
mov
imul
inc
mov
mov
cmpsl
iret
jmp
xor
enter
aam
lret
in
bound
adc
cmc
arpl
stos
adc
sarb
mov
sub
cmp
and
cltd
in
and
in
mov
incb
jnp
insl
jmp
fs
insl
loop
scas
aas
mov
cmp
lahf
jno
xor
pop
mov
shlb
xor
and
dec
cmp
xchg
inc
cmp
addr16
and
fstps
jg
pop
adc
mov
cwtl
cmp
scas
lea
add
jp
lea
xchg
std
mov
xor
aas
xor
imul
pop
clc
rclb
enter
cli
adc
or
jecxz
jns
cmp
outsl
xchg
or
mov
movsl
cmc
ret
or
pop
push
add
adc
mov
mov
lea
jbe
addr16
pop
into
in
and
cmpsl
jmp
scas
cli
add
add
mov
push
push
stos
mov
stos
and
bound
loop
xchg
inc
push
insl
dec
cs
sbb
cmc
roll
push
jnp
fnstenv
sti
jno
mov
shl
xchg
adc
fs
repnz
loop
cmp
push
sbb
movsb
in
mov
stos
mov
pop
and
in
divl
dec
adc
dec
push
rorl
push
jge
cmp
push
gs
aaa
and
test
mov
call
fisubl
xor
lret
cmp
insb
pop
jmp
outsb
test
adc
pop
testl
xchg
les
pusha
iret
or
sbb
jb
cltd
call
lea
inc
xor
cmc
fistps
lods
mov
jmp
jge
inc
das
mov
adc
sub
jmp
cmp
cmpsl
and
lock
insb
lcall
out
mov
push
mov
int3
pop
ds
mov
pop
sub
fimuls
mov
ds
fisubrl
pop
xchg
ss
and
lods
mov
mov
adc
call
dec
aaa
cwtl
add
dec
lret
cmp
jle
rcrl
movsb
xor
sub
and
or
dec
outsl
cs
cmp
mov
imul
mov
icebp
dec
sub
data16
mov
stos
mov
jbe
jnp
adc
and
adc
mov
sub
shl
pop
xchg
xchg
dec
imul
jno
or
stos
cmp
aam
stos
loope
cmp
repnz
test
icebp
out
jbe
jo
xor
out
adc
push
sub
sub
and
pop
ret
sti
testb
jno
mov
add
xchg
es
lea
push
es
les
and
mov
pop
sbb
lds
fisttpl
sub
add
dec
in
jle
push
mov
imul
shll
push
repnz
mov
jns
data16
pop
xchg
leave
add
icebp
sub
xchg
inc
gs
out
movsb
jne
lods
mov
fidivs
stos
sub
sub
aam
dec
jge
xchg
cmp
pusha
out
and
pop
stc
cmp
ret
inc
mov
stos
inc
pop
leave
pop
call
inc
into
imul
cmp
push
sti
loop
fidivs
cmp
mov
shlb
out
aad
xchg
imul
xchg
push
xor
sbb
mov
sarl
mov
and
test
inc
cmpsb
pusha
pop
xor
mov
xchg
xchg
mov
rorb
xchg
ret
in
pop
jp
jns
pop
in
movb
dec
pop
imul
cs
jp
sub
rol
mov
test
imull
mov
jns
jmp
inc
pop
mov
fistl
popf
stc
in
iret
scas
inc
decl
sbbl
mov
gs
mov
clc
jp
in
jp
adc
fs
cmp
cmpl
push
js
pushf
jnp
loope
fisubrl
stos
xchg
adc
sarb
mov
xor
xor
out
sub
rorl
fistps
ss
jns
mov
and
out
mov
inc
pop
mov
mov
xor
pusha
into
cli
in
mov
les
xchg
imul
sbb
aad
cmp
filds
jge
sub
std
cmc
subb
or
jge
dec
fisubrl
insl
ficoms
dec
sbb
pop
jp
ret
xor
inc
sbb
add
pop
sub
push
leave
test
mov
jl
movsb
fxch
jg
mov
divb
mov
or
jl
int3
std
sbbl
and
addl
jae
mov
insb
neg
jb
call
stc
xchg
out
adc
cmp
xchg
sub
fistpll
adc
cltd
xor
push
mov
insb
or
repz
sub
sub
dec
loopne
shrb
mov
fdivrs
fnsave
shlb
dec
loope
jg
sbbb
mov
mov
mov
ja
out
pop
cmp
sti
mov
in
loope
lea
add
das
jo
ret
shl
adc
pusha
les
popa
fwait
xor
mov
push
out
add
sub
in
test
cmp
fnsave
aad
mov
repz
sbbb
mov
adc
icebp
add
pusha
pop
xchg
popa
fwait
xor
mov
push
out
add
cmp
jmp
sbb
rorb
lods
push
out
fisttpll
jne
xor
outsb
sub
jp
and
inc
movsl
inc
cwtl
scas
je
int
clc
xchg
ss
sbb
orl
jmp
insl
or
imul
cmpsl
mov
lds
bound
das
dec
jecxz
mov
sbb
subl
mov
fstpt
lods
push
push
scas
inc
cmp
sahf
pop
int3
insl
jne
aad
icebp
nop
incb
dec
sbb
mov
rcl
push
test
fsts
lods
dec
out
lock
clc
sbbl
sbb
xchg
loopne
stos
adc
xor
arpl
add
mov
push
mov
outsb
add
fsubrl
mov
pop
std
pop
icebp
jge,pn
inc
scas
dec
js
adc
xchg
sub
push
divb
test
shrb
leave
and
into
sbb
dec
out
push
movsl
and
negb
sarb
xchg
dec
loope
adc
push
addr16
sbb
in
mov
aas
ffree
pop
add
mov
push
mov
fsub
je
lea
or
into
mov
jmp
test
arpl
dec
sti
push
sub
dec
imul
pop
push
mov
push
jb
mov
test
test
outsb
clc
push
testl
dec
lods
movsl
cmp
push
sbb
jne
xor
mov
xchg
ret
push
add
mov
loop
pop
fwait
xor
mov
les
sbb
addl
mov
pop
mov
test
mov
mov
rcrl
pop
pop
testb
dec
inc
out
nop
fcomps
ret
stc
aas
ljmp
mov
mov
mov
cmp
enter
mov
dec
mov
add
daa
xlat
ret
jge
shrl
adc
lock
jle
ret
adc
sbb
jg
movsb
sbb
mov
loope
mov
lret
mov
fldl
cwtl
into
out
notl
lock
fsubp
mov
jno
add
sti
repnz
loop
pop
stos
pop
fsubrs
mov
lcall
test
mov
jle
aas
mov
loop
push
mov
jno
rclb
ss
cmpsl
jle
jmp
mov
pop
lock
enter
out
test
ds
jmp
ror
pusha
les
stc
nop
xlat
fisttpl
lahf
clc
inc
fucomp
movsb
sbbb
or
pop
jl
in
and
jbe
bsr
mov
ret
push
lods
mov
cli
xchg
in
aad
dec
mov
inc
out
call
push
movsl
out
sti
insl
in
mov
jmp
fsubrs
mov
xor
adc
sbb
lods
js
mov
fucomi
xchg
js
sbb
stc
enter
das
jae
ret
xchg
add
std
es
sahf
xchg
mov
jae
sub
push
jmp
mov
call
mov
dec
jecxz
jmp
xchg
sub
call
testl
push
or
lods
adc
push
int
or
dec
jle
loopne
xor
xor
fsubrs
insl
xchg
sub
lock
jle
mov
jb
sub
dec
loopne
rcrb
cmpsl
scas
inc
leave
ror
data16
fsubrs
hlt
xlat
nop
push
out
lret
shr
jns
push
or
jl
mov
dec
bswap
jmp
xchg
mov
ret
mov
xchg
stc
lds
fwait
xor
jmp
cmp
push
out
lcall
adc
shrb
cltd
shrl
ss
hlt
std
leave
jp
mov
fcoml
int
cmp
repz
nop
daa
loopne
stos
inc
fildl
cld
xchg
jae
inc
fdiv
xchg
scas
inc
push
xchg
pop
test
std
xchg
cltd
arpl
xlat
sub
xchg
sub
or
push
loop
fwait
pop
jae
jns
mov
test
clc
mov
mov
pop
mov
xchg
and
mov
testl
sbb
add
stos
loop
mov
pop
lock
jl
sbbl
popf
dec
loopne
push
mov
mov
ret
mov
sahf
xor
enter
clc
jmp
mov
or
mov
xchg
push
mov
jns
mov
mov
jle
fiaddl
pop
mov
fidivl
mov
inc
adc
icebp
adc
faddl
movsl
mov
pop
ret
dec
jecxz
cmp
push
lret
pop
sahf
mov
fstl
into
push
xlat
outsb
xor
mov
dec
repnz
jae
mov
rclb
pusha
mov
inc
xchg
mov
fnsave
add
xor
cmp
cmp
bnd
add
lock
test
cmc
insb
shrb
push
xchg
sub
test
mov
mov
inc
arpl
sub
xchg
fdivl
in
fsubs
hlt
arpl
in
sbb
js
pop
hlt
mov
popa
testl
insl
mov
adcb
push
sbb
sbb
push
push
mov
mov
push
or
std
inc
aam
jge
je
nop
pop
pop
mov
mov
andl
inc
pop
sahf
xor
push
push
lods
inc
sbb
mov
pusha
xchg
sahf
jnp
jmp
cmp
cmpsb
decb
dec
loop
fnstenv
pushl
sub
xor
push
ret
pop
dec
cmp
jae
imul
jnp
or
mov
mov
mov
lret
bound
mov
lret
arpl
xchg
inc
das
aaa
aaa
sbbl
dec
repz
cs
mov
in
jo
out
xchg
sub
inc
and
push
xchg
out
cmpsb
cs
lea
dec
cmp
mov
pop
jle
push
mov
xchg
sub
mov
notb
mov
pop
mov
mov
pop
out
sub
dec
loope
int3
or
scas
mov
aas
loopne
into
gs
xsha256
cmpsb
aam
add
jg
sbbl
sbb
bound
dec
jmp
test
sbb
inc
sub
mov
in
xchg
push
mov
jo
fsts
filds
inc
frstor
inc
pushf
xor
inc
jb
jle
push
cmp
push
out
mov
stos
inc
sbb
in
test
inc
push
xor
adc
mov
pop
pop
and
pop
jns
subl
and
mov
xchg
scas
push
call
and
call
je
sbbb
sbb
pop
scas
pop
lock
xchg
and
xchg
outsl
lret
cmc
nop
xchg
sub
lahf
and
xchg
push
enter
sbb
daa
and
loop
cmp
cmc
mov
pop
clc
dec
xlat
inc
ficoml
outsl
xchg
popa
mov
inc
fdiv
mov
mov
ss
pusha
shrl
cmpsb
xchg
sbb
xchg
sub
std
xchg
stos
or
popa
pop
int3
aaa
into
mov
fistpll
shrl
cmpsb
cmp
mov
das
jbe
ljmp
lods
or
mov
sbb
dec
jmp
fwait
cmpsl
push
movsl
pop
mov
push
hlt
rorb
inc
mov
sarl
enter
xor
xor
insl
pop
mov
rcrl
sub
cs
and
xchg
and
or
loopne
scas
inc
sbb
jl
mov
in
xchg
mov
cmp
je
sbb
xlat
outsb
jne
cmp
pusha
dec
xor
cmp
in
jae
clc
inc
and
pusha
outsb
test
inc
mov
xor
inc
xlat
outsb
xor
pop
sbb
push
jmp
cli
ds
pop
fwait
iret
mov
pop
jecxz
inc
pop
sahf
cmp
rorl
xor
ds
pop
adc
mov
push
ljmp
dec
ffreep
adc
mov
cmp
push
jmp
mov
adc
scas
fdivrl
or
xchg
ficompl
cld
dec
bound
orl
repz
adc
dec
fdivrl
add
shl
push
mov
pop
cmp
pop
xchg
jecxz
pop
cmpsb
pusha
mov
inc
mov
or
mov
inc
and
cli
mov
mov
or
bound
lock
xorb
push
dec
or
mov
shll
sbb
sbb
stos
daa
stos
outsl
adc
ljmp
int3
cltd
filds
sar
xor
addr16
cltd
jle
adc
mov
fcmovnb
fldt
mov
and
inc
fdivr
inc
int
jne
pusha
testl
jle
mov
les
stos
hlt
stc
imul
pop
lock
lahf
inc
or
mov
mov
adc
scas
stos
jg
in
icebp
xor
mul
cs
jg
push
in
js
mov
pop
repnz
ret
fists
leave
fimuls
ds
fidivl
pushl
shlb
movsl
aas
std
enter
sub
xchg
push
out
xorb
fwait
aam
imul
es
xchg
mov
xlat
js
movsl
cmp
cltd
pop
cmc
lret
pop
xor
jl
push
push
loope
test
lcall
xchg
mov
mov
out
insl
sbb
jge
hlt
mov
pop
lock
mov
test
and
xor
adc
jbe
dec
in
xchg
mov
leave
subl
shrl
xlat
mov
or
out
xchg
test
push
mov
xchg
sbbb
std
push
mov
mov
xchg
loopne
sahf
stc
jp
cmp
push
dec
jb
mov
bound
loopne
lock
add
adc
inc
nop
push
out
add
cmp
insb
sub
in
and
in
shll
pop
xor
dec
std
ret
outsl
and
pop
xchg
mov
xor
addr16
push
lret
jne
push
xor
inc
adc
jbe
or
enter
xchg
jmp
dec
loopne
cmp
insl
push
push
xor
pop
xchg
adc
insb
inc
pop
xor
loopne
test
adc
fsubrs
sbb
sub
cmp
jl
imul
sahf
pop
out
iret
and
jbe
and
ds
inc
xchg
sub
lds
mov
enter
push
jmp
add
cmc
jl
mov
add
es
push
rolb
js
hlt
test
lret
cld
pop
xchg
sbb
insb
add
popa
or
cmp
sub
xchg
mov
lcall
inc
scas
popf
xor
dec
in
jl
cltd
xor
popf
inc
fmul
push
aaa
into
sub
sbb
movsl
xchg
sub
dec
sbbb
clc
xchg
sub
mov
sbb
call
sbb
xchg
inc
cmp
dec
cmpsb
pop
adc
insl
int3
ljmp
ficoms
das
mov
neg
cmp
xor
out
push
cmp
lahf
dec
or
stos
mov
xorb
mov
insl
aaa
cmp
xor
sbb
mov
aaa
push
shr
jne
jb
lods
loop
cli
outsb
clc
jb
divb
pop
jne,pn
jbe
add
lock
and
call
repnz
xchg
pusha
lcall
sbb
int
out
sub
jmp
xchg
daa
cli
daa
in
fs
pop
xchg
fisubrl
mov
sbb
and
mov
add
gs
push
jecxz
cmpsb
mov
lock
adc
xchg
es
push
add
mov
mov
fdivs
sub
mov
xor
pop
push
repnz
cmpb
fdivr
mov
push
leave
ficoml
stos
neg
lea
repz
pop
sbb
or
lahf
xor
lds
stos
aas
push
or
jo
cmp
pop
imul
nop
mov
je
mov
mov
fscale
nop
invd
cmp
cmp
sbb
popl
jle
dec
loop
cwtl
xor
daa
insl
add
mov
aas
lea
pop
fsubrp
xrelease
out
cs
or
jle
and
shl
cmp
xlat
and
pop
lock
mov
fstpl
and
lods
inc
arpl
int
mov
int3
arpl
sub
cmpsl
cltd
roll
cmp
scas
inc
fildll
loope
pop
add
insb
xor
into
gs
fidivl
clc
loope
lret
loop
xor
fsubp
jl
fst
push
inc
lahf
ss
mov
negl
push
mov
fdivp
dec
stc
daa
cmp
shrb
push
ds
mov
fdivs
jbe
or
dec
fnsave
out
dec
or
mov
in
test
pop
xlat
outsb
dec
jno
loop
pop
jecxz
xchg
cli
pusha
imul
dec
sbbl
js
scas
imul
adc
adc
dec
in
and
inc
xchg
cld
xchg
mov
push
jmp
sub
mov
xor
push
jmp
scas
inc
fsincos
jecxz
sahf
mov
filds
pop
flds
push
pop
cli
add
or
sahf
jg
les
xor
shrb
test
cmp
stc
int
push
jmp
sahf
xor
push
pop
int
push
leave
jle
and
mov
mov
jmp
mov
sti
push
and
lcall
jnp
push
sbb
stc
pop
or
xchg
jle
test
mov
jle
fs
loop
fcmovbe
push
pushf
or
sbb
lret
xlat
je
mov
stos
push
cmp
roll
dec
pop
cltd
xchg
jge
adc
cmp
dec
xchg
adc
pushf
dec
pop
leave
pop
sbb
adc
lret
cli
xor
cld
rcl
adc
cmp
and
sbbl
push
stos
mov
jmp
push
pop
push
jmp
lods
orl
pop
iret
and
stos
roll
stos
mov
gs
fisubrl
fwait
xor
mov
call
cmp
jecxz
pop
pop
repz
arpl
push
xchg
out
add
push
lods
sti
aad
mov
imul
cwtl
test
or
and
pop
adc
jne
or
testb
pop
imul
xchg
stos
inc
or
shrb
sarb
mov
in
loopne
inc
int3
adc
fisubl
cmovbe
jg
pop
fimuls
sbb
jmp
addr16
add
xchg
xor
lds
push
in
pop
mov
pop
adc
xor
push
xor
pop
sahf
dec
scas
mov
loopne
dec
stos
inc
jo
adc
dec
sub
imulb
stos
inc
jge
jge
or
out
jne
fdivl
xchg
mov
cmp
fnstenv
fnsaves
cmpsb
cmp
daa
mov
shrl
in
xor
cmpl
mov
ret
loop
cmc
repz
pusha
int3
push
movsl
cmp
in
lcall
loopne
mov
sub
test
sbb
into
test
shl
fimull
or
pop
icebp
dec
sub
std
popf
sbb
mov
test
add
dec
int
pop
mov
xor
mov
xor
mov
xor
push
shrb
pop
es
or
sbbl
pop
mov
cmp
mov
inc
push
jne
dec
fs
outsl
inc
dec
out
pop
dec
lea
pop
push
adcb
dec
popa
clc
jnp
lahf
xchg
jl
inc
mov
jg
dec
or
pop
repz
mov
scas
mov
loop
mov
repz
dec
out
out
dec
push
cmp
pop
repnz
movsl
cli
jg
or
jno
dec
jnp
ds
adc
xor
fsub
insl
cmp
pop
dec
sbb
ret
pop
scas
and
inc
fidivl
mov
cmp
push
ljmp
jo
xlat
pop
sbb
dec
and
mov
sub
inc
fcoms
cld
xchg
fldl
ja,pt
xchg
sub
jo
adc
pusha
xor
mov
fisubrl
ret
adc
jmp
mov
mov
mov
call
dec
mov
ret
fists
jo
test
jmp
call
pop
cmp
ret
or
fbstp
inc
mov
insl
and
inc
dec
or
dec
cmp
push
jg
lret
push
pusha
push
mov
es
push
cmp
dec
aad
roll
sub
add
je
insb
notl
jae
dec
cmp
test
in
push
lea
rcrl
lea
sub
jg
or
push
cmp
mov
aaa
add
dec
testl
sub
test
fdiv
mov
clc
mov
or
adc
out
popa
xor
xor
jo
leave
addr16
xor
xor
fdivl
lahf
mov
les
mov
xor
mov
cmp
dec
mov
add
daa
das
lods
jnp
ret
mov
jle
cmp
and
inc
repz
test
push
dec
loope
cld
mov
or
cmp
ss
es
fcompl
pushf
loop
into
mov
fbstp
xlat
add
cs
in
push
out
inc
jmp
fnop
lret
add
mov
sbb
clc
lahf
aad
arpl
cmovbe
xchg
adc
stos
iret
xchg
daa
xchg
fildl
and
sub
sub
data16
or
and
xchg
push
jno
pop
repz
xchg
into
pop
ret
pop
pop
lcall
xchg
pextrw
pop
and
mov
test
jmp
fldenv
or
shll
rorl
xchg
cmp
les
cs
aam
shl
je
xchg
sub
repz
dec
pop
stos
lock
mov
or
sbb
rclb
push
sbb
mov
mov
ja
inc
aam
add
push
jns
cmc
stos
ja
insl
lds
loopne
cmp
cltd
repnz
into
gs
jns
std
outsb
jne
mov
mov
sub
sbb
pop
xorl
out
fsts
out
mov
or
xchg
cwtl
gs
xor
insl
mov
add
jae
shrl
fistpl
dec
out
adc
mov
rcrl
xor
test
fs
pop
mov
lds
xlat
mov
mov
lods
fsubrl
and
or
push
and
add
jb
and
rclb
push
mov
sti
jo
xchg
sub
xchg
cmpb
add
fbld
xchg
add
cli
int3
ss
jp
sbb
cld
ljmp
jno
out
xor
adc
aas
rcr
das
test
cs
testl
add
ficompl
pop
lcall
pop
ror
ljmp
pop
mov
lods
mov
xchg
xchg
dec
fidivs
test
xchg
mov
dec
lea
mov
mov
sub
push
push
push
add
mov
movsl
cmp
and
cld
mov
cld
inc
leave
leave
pushf
xor
cld
aam
popf
xchg
nop
stos
xchg
xchg
adc
or
push
iret
pop
popf
mov
sahf
ss
push
insb
adc
pop
fwait
cs
jns
xchg
mov
mov
arpl
add
mov
rorl
sahf
je
inc
cmpsb
inc
js
dec
or
in
xchg
dec
nop
imul
les
insb
sub
adc
stc
out
inc
call
or
push
mov
sti
mov
fsub
out
and
mov
sub
insb
mov
jno
jmp
jnp
iret
cmc
insb
cltd
mov
add
cwtl
shl
fdivr
dec
int3
mov
inc
xlat
or
cmpsl
jmp
leave
adc
ljmp
jno
adc
push
cmp
jle
inc
mov
pusha
sub
push
jmp
mov
fnsave
and
ss
lods
pop
icebp
jl
ja
mov
mov
pop
lods
jl
fildll
popf
out
ds
sbb
aaa
dec
out
fisubrs
cmp
mov
inc
aas
cli
mov
aad
add
mov
or
fucomp
jb
or
in
hlt
test
test
jno
aad
sbb
pop
sub
sbb
add
data16
dec
aaa
xchg
les
dec
out
aad
in
pop
and
mov
jbe
jb
test
out
dec
sbb
xchg
or
in
mov
adc
adc
ss
adc
mov
inc
lahf
mov
loopne
xchg
jno
dec
into
mov
rcrb
jmp
inc
jp
loope
jmp
in
mov
je
rorb
xchg
scas
mov
loopne
jb
pop
fsubs
cmp
mov
inc
pusha
mov
nop
cmp
pop
icebp
push
pop
pop
scas
mov
mov
xchg
jae
push
daa
outsb
lret
test
xchg
ss
shl
lret
cmp
xchg
insl
xchg
cmp
and
ret
push
cmp
bound
jae
xchg
mov
data16
mov
and
xor
jecxz
shl
add
mov
bnd
xchg
cmp
pop
outsb
mov
je
loop
sub
xor
fs
sub
faddl
sbb
inc
mov
addr16
fldln2
test
and
mov
scas
mov
mov
push
and
mov
xchg
sub
jp
imul
xor
pushf
inc
fmulp
push
push
mov
enter
mov
push
xchg
sbb
addr16
addb
inc
jge
ja
imul
mov
fisubrs
shlb
in
or
sbb
fidivl
test
and
xchg
jbe
push
jp
jge
cwtl
mov
fcomps
imul
mov
adc
sbb
int3
leave
dec
leave
shl
mov
in
ret
cmp
ret
jo
int
lcall
cmp
mov
aas
ja
icebp
stos
out
mov
sahf
clc
shl
xor
les
aad
mov
ret
aas
xor
mov
sbb
sbb
fmull
jmp
pop
pop
pop
push
or
jecxz
lods
test
sbb
daa
dec
or
rcrb
mov
xchg
mov
pop
dec
cmpsl
jl,pt
daa
stc
push
xchg
lods
inc
iret
and
lock
xor
xchg
jge
pop
xor
fdivl
push
mov
inc
xchg
push
cltd
lret
out
femms
mov
dec
lahf
jecxz
ret
inc
cltd
jecxz
xchg
push
cmp
cmp
jne
adc
dec
lods
and
outsb
fiadds
imul
gs
stos
flds
insb
jb
or
pusha
not
push
and
fiaddl
pop
cmc
andb
mov
icebp
push
out
test
cmp
stos
push
data16
xchg
jbe
test
push
movsl
stc
je
and
test
cmpsb
jnp
fcomps
pushf
inc
mov
add
lods
test
push
popf
adc
popa
jmp
inc
cmp
cmp
lods
arpl
adc
pop
test
nop
dec
push
mov
sarl
inc
pop
shlb
cmp
loopne
jae
mov
es
fidivl
loopne
mov
out
sub
sub
xor
jge
add
mov
mov
inc
nop
sbb
mov
xchg
xor
mov
jl
out
sub
push
std
jl
adc
xchg
push
xlat
dec
jecxz
mov
stos
mov
mov
repz
mov
scas
inc
repz
dec
std
leave
out
fs
pop
pop
in
out
pusha
adc
out
jg
hlt
jae
je
loopne
and
dec
lea
inc
xchg
push
cmp
stos
mov
push
xchg
cs
xor
xchg
push
fs
mov
clc
aas
icebp
int
outsb
cmpsl
mov
adc
fimuls
jbe
lahf
lret
add
and
jl
in
jle
fiaddl
pop
fists
mov
jno
inc
clc
roll
xchg
mov
jns
cld
and
imul
cli
push
in
jo
loopne
clc
mov
testb
das
stc
sub
sbb
mov
out
cmc
leave
mov
cmc
rol
inc
pop
sbb
movsl
int3
sahf
pop
mov
mov
and
adc
jae
cltd
insl
mov
and
xor
mov
inc
push
js
mov
xor
or
mov
int
out
repnz
lds
jmp
inc
and
cmp
add
es
cld
xchg
cmp
lods
xchg
xchg
das
out
push
call
and
arpl
cltd
fstpl
and
push
or
xchg
dec
pop
xchg
sub
jmp
jns
daa
fldt
scas
mov
test
pop
mov
mov
xchg
aad
mov
adc
shrb
push
popf
dec
nop
push
add
mov
sub
aad
iret
repnz
les
sub
sahf
arpl
xchg
mov
inc
scas
xor
in
stos
insb
sbb
mov
mov
or
shl
dec
iret
clc
lret
sarb
push
dec
mov
sbb
popa
icebp
pop
jl
in
jae
fsubrl
xor
ja
stc
leave
cwtl
les
sbb
jp
jl
mov
nop
pop
pop
pop
rcll
mov
es
sub
movsb
mov
lods
std
loop
sub
div
add
cmp
add
mov
sub
jns
mov
mov
les
xchg
movsb
fists
inc
xchg
fisttpl
mov
or
aaa
into
push
aam
shrl
sub
xchg
pop
vunpcklpd
lea
push
or
into
or
adcl
repz
cli
pop
fimull
stos
lahf
jns
inc
lds
outsl
fcoms
jmp
mov
cmc
add
sbb
and
mov
popa
clc
jl
test
rolb
gs
sub
aam
repnz
pop
in
fwait
and
das
icebp
and
in
cmp
jl
push
in
into
xchg
arpl
mov
int
pop
add
cmp
outsl
xchg
fwait
insb
sbb
xchg
popf
int3
movsb
jl
mov
mov
xchg
dec
test
scas
pop
imulb
scas
inc
pop
pop
hlt
jg
fs
xchg
cmpsl
pop
hlt
adc
js
in
inc
dec
mov
pushf
push
clc
shlb
jbe
shlb
push
stos
es
xor
pop
mov
dec
xchg
push
sub
cmp
or
xchg
sub
std
adcb
and
adc
pop
dec
sub
cmp
test
sub
xor
adc
xchg
pop
mov
pop
out
iret
mov
adc
in
sub
int
pop
xor
mov
aad
bound
mov
mov
ds
mov
lea
mov
or
stos
rcrb
inc
sub
lahf
js
jmp
in
aam
or
movsl
cmc
xchg
inc
arpl
leave
mov
imul
mov
mov
cmpl
pop
adc
add
cmc
cmpb
shrl
xchg
and
shr
sti
xchg
sar
fdivrl
in
adc
adc
insl
inc
insl
sbb
xor
lcall
jge
mov
outsl
xchg
cmp
and
movsl
fwait
push
jecxz
scas
outsl
pop
or
lods
imul
mov
mov
mov
stos
sahf
xor
je
mov
lods
pop
in
sub
xor
shll
or
repnz
dec
lea
mov
jmp
push
stos
push
cld
insb
lret
jecxz
inc
push
daa
mov
cmpl
xchg
fcomps
inc
loopne
mov
fidivl
dec
push
mov
and
mov
scas
ret
stos
iret
test
in
daa
bound
in
xchg
cs
add
add
mov
adc
sub
sbb
popf
add
fdivr
stos
addr16
mov
push
movsb
aaa
pop
mov
sub
dec
sbb
clc
ljmp
lret
or
loopne
fisttpll
sub
stc
sub
dec
or
cs
leave
mov
cmp
jecxz
mov
addr16
fldenv
pop
cld
aaa
adc
pop
pop
sub
add
fsts
jne
jo
push
add
gs
stc
xchg
cltd
and
mov
or
push
jb
cmc
cwtl
and
ljmp
mov
jo
dec
mov
add
sub
push
dec
adc
xor
cmp
les
mov
insb
inc
scas
sarb
mov
lcall
push
test
push
daa
or
repz
adc
mov
inc
in
mov
adcb
and
jle
hlt
xor
xchg
imul
in
insb
std
ss
test
pop
pop
dec
mov
sub
or
shrb
int
push
xor
in
inc
ds
add
xorb
inc
jmp
loopne
pusha
fsts
lods
inc
inc
cli
je
inc
fiaddl
push
lds
pop
ficompl
sbb
add
jmp
ds
sbb
imul
sbb
sub
movsl
xchg
or
push
and
call
and
icebp
or
adc
add
daa
dec
sub
xchg
jb
stos
xchg
mov
ss
cmp
mov
ja
xchg
sub
adc
movb
sbbb
cmp
push
ljmp
enter
push
insb
leave
int
sti
lea
jle
aas
push
mov
into
jecxz
repnz
sub
dec
out
pop
test
loopne
insb
adc
pop
jmp
stos
sub
imulb
xchg
sub
xchg
cmp
fld
and
sti
shrl
aam
add
push
mov
notb
jae
in
sahf
jge
mov
mov
pop
xor
jb
xlat
mov
adc
mov
bound
rolb
add
std
addb
outsb
clc
ss
pop
mov
push
fmuls
jbe
mov
xchg
jecxz
nop
jl
mov
mov
test
in
adcl
mov
orb
ds
sub
inc
sbb
mov
xchg
imul
imul
sbb
pop
pop
xchg
shlb
lea
mov
mov
mov
fldl
inc
fidivl
push
out
out
fcoml
or
lret
mov
jl
fisubrl
cmp
movsb
test
sbb
push
mov
ret
mov
enter
mov
jnp
mov
mov
xchg
xorl
or
ret
mov
push
lods
mov
cmp
inc
loopne
lcall
sub
loope
dec
movzwl
dec
lret
xor
lock
iret
movsl
insl
add
lock
test
outsl
push
in
call
mov
xchg
ficomps
mov
mov
inc
hlt
mov
push
push
arpl
pop
jge
dec
insl
repz
adc
jg
xor
dec
or
fstl
lods
rclb
jb
sub
cmp
mov
aaa
cmp
push
jb
adc
push
fistpll
shll
into
mov
push
iret
dec
xor
mov
std
push
adc
inc
add
test
sbbl
fs
push
lea
xor
or
dec
push
testl
arpl
fs
xchg
adc
sbb
out
mov
ss
mov
int
sbb
and
lahf
add
out
ja
hlt
or
pop
adc
and
dec
int
pavgb
repz
repnz
icebp
push
xchg
sbbb
jne
lahf
inc
xor
xchg
xchg
ds
add
pop
jmp
inc
mov
les
xchg
mov
scas
inc
not
imul
sbb
mov
mov
test
inc
xlat
mov
xor
movsb
cmp
cltd
scas
or
xchg
jle
jb
xor
fsubrs
movsb
pop
repz
xchg
sub
and
sbb
cmp
jl
shrb
popf
or
cmp
pop
scas
sahf
pop
fwait
xor
scas
mov
loope
sbbl
std
xchg
cs
cmp
dec
orb
push
mov
push
es
test
popa
sahf
testb
jae
in
xor
adc
pusha
sbb
sti
pop
data16
pop
sbb
jp
jle
divb
jg
pusha
mov
testb
pop
icebp
int3
xor
out
popf
mov
sub
ffreep
pop
rcll
lcall
or
pop
shrb
cmc
das
out
dec
loopne
out
test
scas
mov
pop
xchg
pop
lock
shrb
les
outsb
add
scas
jecxz
jae
shlb
adcb
push
pop
xchg
mov
stc
paddw
icebp
sbb
rcrb
jmp
lock
js
adc
mov
test
mov
cmc
inc
inc
fdivrs
test
scas
idivl
in
stos
test
stc
pop
data16
dec
mov
out
ljmp
adc
sti
mov
inc
xlat
cli
fsubp
jp
mov
sti
je
dec
addr16
mov
lock
and
dec
add
repz
aam
and
in
jmp
push
mov
call
jnp
inc
movsl
mov
out
in
addr16
xor
add
adc
mov
fidivl
add
mov
xchg
in
vpsraw
scas
mov
imul
repnz
jne
inc
insl
je
popf
movsl
mov
das
repz
jge
push
popf
add
insb
aad
arpl
xchg
push
inc
xlat
sub
xor
mov
adc
js
clc
xor
or
cmp
xor
leave
sbb
clc
jns
or
ficomps
jbe
mov
pusha
idiv
test
inc
xlat
or
or
addr16
sbb
and
push
xchg
jg
jo
neg
xor
dec
cmpsl
ds
fcmovnbe
div
mov
mull
mov
lret
sti
inc
pusha
scas
pop
stos
pop
lret
pop
aad
mov
fmull
arpl
mov
jbe
fs
cmp
mov
inc
lds
sbb
hlt
cmpsl
sub
and
and
adc
pushf
adc
pop
insl
push
shll
pop
cmpsl
mov
hlt
dec
add
jl
imul
stos
mov
xorl
pop
outsl
orb
pop
mov
or
sub
fcomip
mov
push
cwtl
lods
loopne
fsubrp
pop
test
daa
jg
cltd
jb
jecxz
dec
stos
inc
inc
fistpll
aad
sbb
dec
mov
push
or
cmp
sbb
cmp
ret
ljmp
sub
push
andl
andl
cwtl
aaa
lret
inc
mov
mov
push
sbb
xchg
movsb
jo
ret
pop
mov
xor
sub
xor
leave
pusha
lods
test
stos
inc
add
mov
xor
cmp
jle
sub
lcall
pop
push
lret
mov
imul
ljmp
jmp
mov
clc
repz
sbb
into
add
aaa
and
mov
mov
out
xchg
inc
jp
ja
or
ss
cld
sub
call
movl
jecxz
cmpb
jb
out
test
aam
xchg
nop
jns
cmpsl
inc
lret
add
inc
pop
loope
cmp
adc
and
icebp
xor
addr16
or
jae
pushf
dec
pop
sub
push
sahf
repnz
stos
andl
push
mov
icebp
lods
movsl
lea
ret
lds
jg
mov
xchg
icebp
outsb
cmpsb
ret
push
ret
fldt
xchg
xchg
jbe
pop
ret
sbbb
repz
loopne
gs
out
sbb
push
in
mov
push
xor
mov
mov
inc
mov
mov
ljmp
mov
mov
repz
out
bound
dec
loop
jb
movsl
mov
mov
jmp
mov
push
incb
stos
xor
fcoml
sub
adc
dec
add
addr16
xchg
xor
mov
xor
fidivl
das
rclb
add
mov
sbb
cld
aad
sbb
mov
cld
xchg
add
pop
lahf
sub
loope
sbb
or
out
sbb
sub
cld
xchg
in
subb
decl
sub
or
cmp
add
outsb
arpl
loopne
sub
and
sbb
dec
scas
inc
sbb
jmp
jl
jp
imull
cli
cmp
ficoms
push
inc
mov
jecxz
inc
int3
or
adc
sbb
sarb
push
bound
xchg
aaa
mov
dec
cltd
adc
jb
adc
xor
xorb
sbb
or
add
fwait
inc
pop
mov
out
mov
xchg
bound
mov
push
push
outsb
pop
dec
in
fsubrs
adcb
dec
lea
ds
in
outsl
jge
pop
jo
repnz
les
addr16
inc
mov
loopne
shll
xchg
mov
and
sbb
aaa
xchg
mov
pusha
mov
fucom
jle
or
push
mov
nop
daa
clc
mov
out
push
ljmp
pop
mov
mov
push
out
arpl
repnz
mov
pop
lock
ret
call
or
iret
cwtl
repz
xlat
mov
xchg
sub
sbb
lret
lds
fildl
fwait
xor
shl
inc
fst
sti
xchg
sub
and
in
jb
push
in
push
xchg
lcall
push
mov
sbb
pushf
xor
ds
fildl
test
adc
inc
in
mov
mov
cmc
mov
outsb
add
mov
icebp
mov
jg
lock
xor
jo
loop
fcoml
sahf
xor
pop
push
fidivl
andb
sbb
push
call
pop
mov
sub
dec
push
out
push
mov
or
xchg
mov
xor
jmp
inc
xorl
push
add
jmp
pop
push
movsb
pop
sahf
add
es
xchg
inc
nop
test
xor
mov
inc
or
fsubrs
sub
xchg
sub
xchg
jge
enter
test
xchg
mov
mov
add
inc
pop
xor
clc
lods
push
ret
int
add
jp
dec
inc
repz
and
inc
cltd
xor
mov
jno
test
pop
sub
xor
pop
out
insl
jns
fwait
dec
mov
cmp
into
gs
push
jmp
sbb
nop
daa
nop
aaa
pop
sahf
push
mov
and
mov
scas
inc
mov
push
iret
mov
gs
cmpsl
sbbb
insb
mov
in
sbb
leave
pusha
scas
cmp
jle
mov
jo
or
pushf
xor
jnp
jge
jbe
or
lcall
jo
cli
fidivs
call
xchg
cs
jge
mov
stos
inc
int
mov
popf
out
mov
cmp
push
xlat
outsb
mov
push
lods
xchg
sub
push
add
dec
test
mov
dec
aaa
push
jmp
mov
mov
sub
dec
inc
fiaddl
mov
lds
push
adc
xchg
mov
repnz
leave
fsts
stos
inc
inc
cli
push
out
addr16
outsb
add
in
lahf
mov
rorl
stos
inc
and
and
ja
inc
fsub
cwtl
out
push
adc
add
pusha
addr16
fstps
mov
jae
ds
sbb
xlat
add
sahf
ja
sub
movsb
adc
mov
lds
mov
jns
imul
push
test
xor
cli
push
jecxz
add
adc
mov
loop
xor
int3
xchg
and
inc
popf
sbb
and
ss
xchg
xchg
ja
cmp
fistpll
popa
cltd
aas
mov
mov
and
xchg
xchg
flds
jecxz
xchg
pop
ljmp
lods
xchg
es
cmpsb
ljmp
mov
int3
insl
mov
mov
pop
fisttpl
cwtl
push
idivl
mov
mov
fnsave
ja
xchg
and
add
test
xchg
adc
and
aas
sbb
or
jge
pop
or
xchg
test
in
stos
push
push
cmpsb
push
sti
xor
in
loop
aam
lcall
pop
mov
lds
outsb
add
or
ja
mov
cmpsb
cmp
int
aam
adc
push
insb
cmpsb
jb
sbb
xsha1
cmpsb
mov
jp
aad
aam
lods
das
cwtl
bound
sub
or
sub
fsubrl
and
imul
push
fsubs
mov
ss
fwait
mov
pop
fwait
dec
scas
push
outsb
es
mov
sahf
mov
dec
mov
ret
inc
fdivp
adc
adc
pushf
aam
inc
test
add
repnz
inc
inc
mov
jnp
out
pop
mov
cmp
push
cs
mov
jo
cmc
or
jno
ret
jb
movsl
mov
fs
xchg
xor
pop
in
mov
and
sub
push
fidivrs
out
std
cli
pushf
fidivs
hlt
shr
inc
jo
clc
sbb
shll
mov
mov
xchg
fdivrl
and
andps
push
lret
mov
cs
loopne
cltd
xor
mov
cmp
stc
push
ds
pop
fs
cmp
test
ss
stc
adc
xor
sub
std
mov
fdivrl
adc
jl
pop
mov
loop
fs
adc
mov
jecxz
incl
and
fs
jmp
mov
jmp
rcrl
orps
mov
dec
pop
loope
mov
icebp
xchg
clc
inc
dec
movsl
cld
dec
pop
lods
dec
mov
add
push
add
je
and
dec
or
mov
fnstsw
mov
sbb
addl
movsb
xor
loopne
pusha
mov
mov
sub
fsin
push
pop
cmp
pusha
ficoms
cwtl
in
mov
fisttpl
push
mov
test
leave
in
pusha
sbbl
and
or
jg
push
cmp
test
fnsave
xchg
or
out
gs
pop
pcmpeqb
inc
jge
dec
in
xchg
sub
jne
pop
sbb
aas
loope
jmp
cli
pop
in
mov
cmc
pop
in
scas
rcl
dec
fcoms
cmpsb
in
jp
mov
adc
xchg
mov
test
cmp
lock
mov
push
adc
dec
xor
stc
lods
and
push
mov
xchg
bound
out
xchg
sbb
in
dec
cmp
sub
or
daa
mov
fcmovne
xor
inc
lds
push
test
scas
mov
pop
xchg
mov
inc
xchg
add
sahf
rcrl
add
add
jno
cmp
fstl
mov
xchg
pop
out
mov
les
jns
sub
adc
scas
inc
and
add
xchg
std
and
or
or
mov
test
cmpsb
mov
inc
sbb
cld
scas
cmp
divb
and
enter
movsl
fldt
or
add
fisubrs
sub
dec
cmc
imul
sahf
int
ficoml
inc
testb
imul
loop
lds
data16
clc
rcl
sub
imul
je
test
into
movsb
inc
cltd
xchg
ljmp
cmp
sub
lcall
shrb
fs
jo
fdivl
add
or
push
arpl
ret
hlt
js
test
lods
lret
or
sbb
jo
dec
push
add
das
mov
rol
mov
mov
js
outsl
and
sbb
jmp
pop
or
inc
or
push
mov
ljmp
popa
push
add
cmpsb
and
pop
mov
iret
enter
adc
cmp
mov
or
adc
stos
jle
lcall
cmpsb
mov
mov
fildll
and
clc
xchg
imul
pushf
lret
jg
cmp
subb
adc
fwait
cmp
pop
sahf
cmc
es
sbb
bt
jecxz
xor
mov
mov
fidivrs
fbstp
or
std
xchg
repz
sbb
sub
mov
dec
push
roll
mov
shr
sub
mov
gs
int
in
jne
jne
pop
jg
add
push
jb
sub
popa
cwtl
fidivs
arpl
mov
and
cmpsl
shlb
and
ret
or
xchg
lret
ret
inc
minps
sahf
jae
addb
cmpsl
mov
add
and
jmp
adcl
push
dec
dec
or
jle
adcb
es
sub
sbb
mov
lods
dec
mov
add
in
leave
rcrb
mov
outsl
lret
call
sbb
jbe
mov
jne
fwait
lcall
inc
push
mov
pop
inc
fwait
stos
cld
icebp
pusha
pop
and
xor
dec
inc
stos
inc
loopne
enter
mov
jne
cwtl
xor
xchg
push
rsm
xchg
dec
adc
inc
outsl
dec
pop
mov
fiaddl
mov
gs
shlb
and
or
js
popf
sub
ficoml
or
rcl
out
mov
sarl
leave
pop
imul
fcmovbe
xchg
cmpsb
xchg
adc
aad
or
mov
fs
dec
xchg
icebp
or
addb
and
xchg
sub
and
sub
jns
dec
fisubl
pushf
in
xchg
popf
lock
inc
test
jbe
xor
shrl
sub
cmpsb
mov
subb
mov
mov
mov
stc
dec
pop
sub
and
or
mov
sti
pop
and
or
popa
push
movsl
xchg
mov
int3
push
inc
adc
and
enter
adc
in
test
in
popf
nop
xor
push
and
out
jg
lahf
sub
shrb
lret
shlb
dec
or
ficomps
lods
mov
addr16
push
test
inc
test
sarb
xchg
mov
sbb
adc
out
xor
mov
push
scas
xchg
add
adc
xchg
arpl
sub
or
mov
push
sub
lods
popa
dec
in
fdivl
out
les
filds
pop
cmc
pop
leave
insb
aad
push
xor
test
or
pop
clc
mov
in
outsl
int3
in
imulb
mov
push
adc
movb
add
fimull
addr16
scas
aaa
into
fildll
push
call
in
mov
pusha
sub
xchg
hlt
inc
push
out
xorl
clc
jo
mov
mov
jns
out
jns
add
lret
cmc
and
pop
outsl
jl
pop
hlt
cmp
mov
into
lret
lcall
sub
push
and
outsb
lcall
ja
addr16
or
imul
test
xlat
sub
sub
jno
fstp
mov
mov
cltd
fcmovne
dec
or
mov
aas
mov
outsb
lret
lret
xor
frstor
repnz
popa
test
push
dec
dec
fmull
dec
in
mov
inc
stos
fisubl
test
mov
and
xor
mov
sti
sti
test
pop
mov
scas
out
cltd
sti
loopne
mov
cwtl
jnp
cmc
dec
aad
inc
out
into
les
mov
sbb
mov
ljmp
add
xchg
scas
outsl
push
jae
inc
sbb
scas
mov
lcall
sbb
ljmp
mov
push
icebp
mov
test
mov
mov
xchg
out
cmp
mov
xchg
push
cmpb
and
int
cmp
mov
or
cmpb
daa
push
mov
mov
fildll
scas
mov
jno
insl
es
ljmp
dec
mov
pushf
mov
outsl
push
daa
ds
cli
ret
lea
xchg
xor
in
aad
scas
lods
sub
rep
daa
jp
or
mov
mov
pushf
or
int
sub
or
push
je
pop
or
xchg
jg
sub
pop
mov
loope
xchg
enter
imul
dec
jb
jae
jbe
add
pushf
sub
ret
hlt
inc
jo
icebp
icebp
outsb
hlt
pop
cmp
xchg
lret
sub
enter
push
jb
sbb
jge
cmc
jmp
fbld
rcrl
repnz
or
xor
sub
inc
pop
icebp
jae
outsb
add
xor
mov
add
mov
mov
popa
xor
mov
movsb
xor
dec
push
jmp
pop
xchg
jbe
imul
fucomip
je
rcrl
stc
cld
xchg
cli
fildll
push
les
push
jnp
mov
fdivs
data16
mov
inc
dec
xchg
outsl
pushf
push
ss
fwait
mov
shrb
imul
popf
jmp
pop
xchg
aaa
or
push
adc
add
lcall
mov
movsb
push
repz
fsubrl
mov
outsb
inc
pop
popf
repnz
mov
cmp
hlt
inc
out
jne
sbb
les
adc
xor
lahf
jbe
or
lahf
cmpsl
pop
adc
pop
shll
jl
ja
cmp
test
xchg
cmp
mov
pop
pop
mov
aas
mov
adcb
pop
sub
lock
jge
les
xor
andb
lahf
and
aam
add
dec
push
stos
out
je
dec
or
lods
mov
daa
xchg
and
sub
insl
mov
pop
hlt
push
mov
fnstcw
jne
enter
or
xchg
cmpsl
gs
or
loopne
sbbl
add
sbb
inc
mov
jo
sbb
fsubrp
sub
cmpsb
pop
cmpsl
gs
sub
adc
je
mov
icebp
inc
scas
mov
lcall
movsl
sahf
lahf
shl
inc
jecxz
or
mov
sbb
incb
ret
push
decb
popf
inc
inc
fidivs
pop
xchg
ficomps
data16
sbb
xchg
fidivrl
dec
or
dec
fsubrs
pop
pusha
notl
sbb
adc
outsb
pop
pushf
mov
and
xlat
repnz
or
push
rcrl
fwait
scas
pop
std
sbb
and
aad
cltd
xor
jl
jp
or
aad
imul
popf
push
test
mov
mov
inc
scas
in
adc
adc
outsb
add
fistpl
sub
xchg
sub
sarl
idivb
outsl
jnp
sbb
jp
leave
xor
inc
or
aam
pop
sub
andl
adc
and
stos
mov
pop
fs
pop
scas
test
xor
fidivl
outsb
leave
dec
dec
shrb
push
stos
imul
leave
mov
mov
fsubrl
inc
fwait
jno
js
std
scas
xchg
xor
jp
mov
and
and
xchg
leave
pusha
hlt
xchg
les
cs
push
stos
cld
insb
dec
test
jle
mov
imul
cmp
or
aas
xlat
push
in
adc
mov
dec
nop
jp
lods
stos
cmp
lock
inc
cmpsl
sbb
sub
mov
sub
inc
jmp
dec
sbb
pop
gs
das
push
fstpl
push
gs
add
dec
xchg
popf
stos
rcll
mov
and
jns
es
adcl
fistpl
sbb
dec
push
xlat
mov
dec
mov
aam
xchg
pop
aaa
jbe
add
xor
mov
jmp
lods
xor
int
test
out
popf
xor
add
outsb
shrb
inc
mov
jb
ja
ds
and
xchg
outsb
shlb
pusha
mov
push
or
mov
lcall
xor
pop
dec
xchg
mov
mov
aad
xor
test
pushf
in
pop
scas
fidivs
out
aas
and
cli
xor
xor
lds
mov
cltd
popf
lds
pop
lock
imulb
jns
mov
stc
cs
jbe
std
jl
inc
push
aam
add
lahf
or
push
insb
shlb
insl
daa
add
enter
sarl
push
in
mov
jo
stos
dec
imul
xor
nop
lret
hlt
test
cli
mov
int
and
adc
mov
aas
outsb
push
ds
call
je
push
adc
xchg
dec
fldl
fistps
mov
push
aad
aas
sub
loop
insb
aas
sub
imul
adc
jno
cs
out
test
int
add
loop
pop
add
lret
bound
sbb
out
pop
jle
sahf
jns
mov
in
test
or
cmpsl
add
xor
dec
clc
nopl
outsb
mov
jg
icebp
pushw
fstps
jmp
sbb
sub
inc
xchg
adc
ljmp
shlb
dec
adc
add
je
push
xor
pop
adc
mov
mov
ljmp
ljmp
or
push
idivb
lods
imul
mov
stos
jge
imul
ja
ret
gs
iret
and
sub
jne
mov
sahf
mov
movsl
in
mov
mov
aas
jg
repnz
lahf
repz
fcomps
data16
icebp
mov
push
out
pop
mov
cmp
pop
rorb
repz
bsf
mov
pop
mov
aas
clc
lds
dec
loop
imul
mov
aad
push
fisubs
sbb
mov
lea
int3
cmp
leave
jns
or
enterw
paddb
and
addl
cmp
mov
xor
dec
lods
adc
mov
lcall
ja
test
jecxz
jns
dec
loopne
decb
jmp
test
loope
imul
adc
xchg
lcall
outsb
out
cmp
cmp
mov
stos
push
sbb
xchg
jl
roll
aam
sbb
lret
cmc
out
pop
add
jle
std
xchg
inc
mov
test
and
and
div
out
add
mov
jecxz
lcall
push
mov
into
push
add
fsubrl
and
xchg
mov
adc
inc
mov
pop
pop
mov
mov
das
cmp
and
leave
sbb
call
cmc
rcll
loope,pn
sub
and
xchg
pop
mov
pop
cmc
movsb
scas
mov
or
jl
aam
and
out
add
xor
lcall
andb
lret
jns
in
lcall
cmpsb
pop
pop
cmc
push
pop
js
xchg
stos
xchg
xor
jno
pop
sub
cltd
es
lods
xor
cli
adc
fcomip
xchg
dec
adc
mov
cmp
test
push
push
aam
es
jnp
pushf
pop
cmc
mov
mov
cmp
add
roll
pushf
scas
xor
dec
cmp
jno
in
sub
xor
xor
inc
lcall
data16
jmp
and
adc
movsb
push
add
jl
pusha
mov
jbe
jle
addr16
cmp
add
popf
mov
jl
push
icebp
adc
in
xchg
adc
pop
jg
mov
cltd
adc
adc
popa
xchg
and
jecxz
lods
lock
jmp
jne
inc
and
cwtl
or
push
out
lock
pop
inc
movsl
add
cltd
in
sub
fbstp
shll
adc
roll
jb
sub
dec
push
cmpsl
repnz
imul
insb
add
or
sar
mov
push
sbb
inc
jo
iret
mov
jg
icebp
movsb
dec
adc
aad
imul
stos
xchg
mov
je
jmp
xorl
adc
cld
daa
leave
fucom
int
mov
repz
mov
out
fwait
gs
or
jg
int3
jb
xchg
mov
js
cli
lods
cmp
gs
mov
push
push
pop
aaa
cmpsl
loope
pusha
mov
shlb
les
jo
pop
mov
and
or
es
ja
insl
leave
pusha
leave
adc
das
fists
inc
test
fcomps
xor
andb
scas
test
sbb
fldt
lods
and
lock
lret
cli
pop
mov
test
sbb
mov
xlat
adc
aam
push
or
movsl
pop
lahf
and
mov
xor
out
lret
je
push
lahf
daa
aaa
inc
test
aaa
or
sub
and
popl
lcall
and
test
mov
das
aam
outsl
pop
xacquire
movsl
subb
je
lds
push
cli
dec
sbb
push
jno
pop
or
int
movsl
loopne
xchg
fsubrl
ds
bound
lock
aas
mov
mov
pop
addr16
pop
cmp
lods
xor
mov
push
dec
aad
xor
lret
push
out
in
ds
sub
imul
and
roll
popf
adc
mov
push
scas
mov
push
xor
sbb
dec
es
dec
or
cmp
sub
mov
shrl
dec
out
lahf
dec
mov
mov
jnp
pop
cmp
sbb
and
sbb
test
inc
sub
popf
fs
popa
jnp
xlat
stos
jbe
mov
popf
xchg
sub
mov
dec
and
iret
mov
mov
ljmp
es
mov
mov
inc
jb
ja
inc
clc
cmp
push
movsl
inc
cltd
jbe
nop
push
sbb
fsubl
popf
pop
mov
arpl
inc
enter
cmpsl
sub
loop
push
mov
js
cmp
insb
mov
ret
or
add
imul
sub
sbb
mov
jne
dec
arpl
jge
movsl
mov
les
xchg
dec
ja
or
adc
loopw
inc
hlt
push
pop
dec
test
mov
aas
push
shll
jg
xchg
bound
sbb
pop
mov
push
and
sbb
jno
out
jae,pn
pusha
or
sbb
pop
pop
dec
ss
jns
stc
in
push
fimuls
mov
or
stos
mov
push
mov
pop
loop
ss
pop
hlt
sbb
ret
aas
jae
aaa
push
pop
cltd
mov
sbb
xchg
lret
sti
and
xchg
loope
mov
mov
pop
test
scas
inc
imul
mov
scas
ja
push
and
xor
xchg
rcr
jge
dec
out
adcb
ret
pop
vpaddq
xchg
push
call
or
fs
fcomps
repz
push
bound
lret
sti
test
rcrb
jbe
arpl
sbb
movsb
pop
mov
mov
rsm
inc
push
sbb
or
lods
les
dec
fists
xorb
xlat
std
aam
pusha
mov
jnp
cmp
inc
repz
mov
imull
push
push
sub
jb
push
lcall
and
imul
ds
adc
lods
addr16
lret
jle
mov
bound
pop
dec
sti
xchg
repz
das
popa
sub
xor
fildl
movsb
inc
lods
sub
mov
jbe
push
jmp
sub
jo
js
lret
xlat
adc
xor
int3
mov
mov
es
sbb
add
out
bound
pop
dec
xor
sub
lret
cmp
fsubrl
in
push
pop
adc
lret
push
push
sub
pop
push
jmp
or
pop
xor
push
sahf
call
inc
sbb
testl
pop
cwtl
and
sub
inc
sahf
mov
sbb
les
cmc
adc
xor
in
cmp
lcall
inc
fcomip
lea
mov
sbb
add
in
pop
xchg
sub
fwait
imul
test
adc
popf
shll
cltd
push
stos
jbe
ds
cmp
cli
jae
int3
push
movsb
mov
sbb
lahf
or
cmp
cmp
arpl
pop
pop
cmp
aam
daa
leave
pop
stc
xor
ljmp
jge
add
push
out
or
sbb
stc
fisubs
gs
pop
outsl
adc
scas
hlt
lds
stos
rclb
add
mov
sub
adc
mov
cmc
inc
movsb
push
data16
je
xor
pop
xlat
inc
push
or
dec
nop
pop
adc
add
loopne
lods
and
into
add
adc
mov
mov
je
mov
cmp
jbe
arpl
sbb
cmp
pop
in
mov
inc
add
mov
pop
jg
ret
rol
push
add
add
aad
rcll
sub
lcall
cmp
xchg
sbb
inc
inc
push
jb
fisttps
inc
jne
push
addr16
xchg
pop
pop
xchg
mov
orb
lds
outsl
dec
in
push
call
scas
icebp
sbb
and
add
cmpsl
sbb
int
cmp
mov
aas
sub
ds
outsl
push
jne
jge
sbb
mov
pop
scas
inc
ficoml
jae
inc
fcmovnb
xchg
add
in
out
cwtl
pop
sbb
imul
adc
and
out
ja
sub
xchg
stos
mov
mov
cmpsb
std
dec
call
mov
adc
push
shrl
das
lods
xchg
out
jge
shlb
fiaddl
sti
cwtl
jg
inc
sbb
ret
stc
sub
cmp
nop
mov
push
mov
xor
popf
sub
cmc
mov
jb
xor
hlt
mov
std
pop
mov
popf
inc
scas
xchg
or
sub
mov
dec
or
mov
imul
jg
xchg
out
or
in
or
dec
ljmp
or
push
sar
xor
aam
sti
jno
mov
cmc
jne
call
push
aas
aad
sti
mov
cmpsb
les
lahf
add
and
lods
jle
fcompl
jno
mov
and
jle
lcall
outsb
stc
into
jge
pop
cmp
dec
dec
hlt
dec
push
iret
pop
jns
add
repz
popa
ficomps
inc
imul
jmp
jmp
add
loop
push
popa
push
bnd
inc
cmp
pushf
hlt
cmp
test
pop
sub
push
and
nop
aam
loop
pop
scas
aas
dec
loopne
sub
mov
pop
jp
push
jl
push
or
cld
jno
outsl
cmp
pop
ljmp
cli
dec
cmp
add
ss
xor
ret
fisubl
jns
daa
push
lds
into
iret
stc
cltd
pop
iret
mov
les
subb
mov
jnp
ljmp
je
and
add
dec
pop
cli
sbb
adc
repz
js
adc
sbbb
mov
fsubrl
mov
sarb
jns
and
cmp
out
add
cmp
inc
addr16
inc
fnstenv
sbb
arpl
das
mov
mov
add
xchg
adc
and
bnd
in
pop
out
lret
push
dec
jmp
cli
imul
popl
mov
fsubrl
mov
aas
jl
xchg
repz
popf
xor
sbb
jb,pt
das
repz
aas
bound
and
mov
fsubrl
pop
xor
push
popf
xor
mov
sti
mov
shl
aam
arpl
addb
adc
pop
and
add
rcr
loope
mov
and
push
dec
mov
leave
mov
std
jo
aad
out
decl
jmp
dec
or
out
popf
dec
or
mov
inc
cltd
and
dec
fnstsw
out
popf
sbb
jne
sbb
xor
ret
dec
in
xchg
cmpsl
lret
pop
addr16
push
movsl
inc
and
xchg
insl
std
push
bound
popa
hlt
ror
enter
pop
jmp
cmc
int
mov
int
fnstcw
ljmp
fisubl
mov
hlt
mov
push
adc
mov
cmp
cmpsb
les
inc
sbb
xor
jge
fistpl
add
es
stos
addr16
pop
arpl
mov
push
das
ljmp
push
jne
jno
mov
int
push
repz
rcrl
fistps
rorb
outsb
adc
fwait
cmp
outsl
pushw
pop
mov
sbb
dec
dec
mov
jo
ja,pn
or
sub
and
adc
mov
pop
mov
out
dec
mov
sahf
pop
add
pop
push
ljmp
push
mov
fnsetpm(287
ja
mov
mov
and
aaa
dec
fcmovne
icebp
xchg
ljmp
loopne
popl
leave
mov
pop
nop
das
inc
lcall
lock
xor
jg
xchg
jae
shll
push
xchg
add
or
jae
sti
and
andl
sbb
or
mov
mov
stc
call
mov
jnp
push
push
inc
shrl
jbe
jae
outsb
or
fldcw
or
lret
or
hlt
sbb
sub
push
repnz
lcall
dec
sub
mov
inc
insb
sbb
xchg
xor
jno
push
pushf
stc
int
nop
xor
das
adcb
cmp
cmc
fcoml
add
jl
ljmp
sbb
mov
lock
insl
inc
and
mov
test
shll
test
or
dec
push
jp
xor
push
gs
popf
adc
push
inc
mov
rorb
mov
lahf
lea
and
xor
lds
sub
xor
cltd
adc
cli
orl
scas
pushf
es
push
inc
xchg
gs
xchg
mov
jbe
loope
cmc
inc
jle
ds
or
sbb
dec
jp
lods
cmc
pop
sahf
add
cmp
inc
aam
jl
fs
sbb
mov
out
and
pop
pop
push
sbb
test
loope
pop
mov
xchg
gs
fnstcw
mov
dec
dec
jecxz
mov
xchg
leave
out
popw
adc
scas
xchg
add
xor
rolb
jae
aas
sub
inc
inc
inc
fwait
pop
lock
les
pop
add
pop
addb
bswap
push
movsl
shll
movsl
ljmp
mov
mov
outsb
loope
dec
int
mov
mov
xchg
and
pop
popa
cltd
sub
iret
data16
mov
pop
aam
add
lcall
xor
mov
daa
add
dec
pop
xor
and
in
push
mov
out
pop
jno
add
inc
jle
push
fistl
inc
sahf
pop
shl
jl
fwait
movsl
inc
inc
sub
es
scas
mov
out
lret
mov
bound
and
int3
fistl
mov
sbb
loopne
ret
lods
ficoms
cmp
sub
in
mov
push
cmpsl
push
push
xor
sub
pop
sub
xorl
add
stos
inc
lods
js
fcmovnb
sub
jl
add
dec
xor
xchg
and
popf
adcb
xor
cmp
sbb
bound
push
and
mov
and
lret
loope
jg
aad
insl
xchg
mov
nop
int3
loopne
sti
add
into
loop
mov
xchg
into
dec
fwait
jb
out
or
mov
jg
daa
pop
sbb
mov
jnp
add
mov
repnz
push
xchg
add
mov
inc
cmc
pop
push
xchg
es
dec
inc
sbb
sbbb
mov
mov
dec
adc
pop
add
jns
in
das
lahf
sbb
mov
stos
jb
jnp
and
out
xchg
mov
xchg
add
pop
xchg
pop
out
add
lds
shl
mov
bound
fidivs
pop
fwait
cltd
adc
lahf
add
mov
lret
xor
loopne
mov
fdivs
cltd
fs
push
enter
sbb
insb
aam
pushf
pop
mov
aas
ret
jge
mov
ret
or
mov
aas
add
and
sub
mov
hlt
sub
sbb
xchg
das
push
out
stos
sub
sbb
or
ss
pop
push
imul
inc
sub
sub
mov
lods
lds
and
mov
pand
inc
adc
cltd
mov
add
mov
jnp
ret
pushf
jl
sub
incl
ss
fs
js
subl
insb
mov
xor
adc
inc
mov
cmpsb
fucom
mov
xor
jne
ja
sub
sbb
frstor
ss
test
scas
popf
xor
fnsave
mov
movsl
adc
sub
stos
and
mov
jno
data16
dec
in
sub
test
fs
add
jns
movsb
xor
xchg
roll
mov
push
in
mov
or
push
imul
jmp
gs
and
andl
push
mov
push
sbb
fisubl
push
jnp
jns
cmp
aaa
inc
mov
pop
lock
cmp
cmpb
in
cld
je
jo
stos
mov
aad
xor
loop
adc
arpl
cmpb
repz
xchg
lods
outsl
les
fstpt
and
or
stc
xchg
xor
out
scas
out
pop
sysret
jmp
in
pop
js
shlb
cs
add
jae
scas
mov
std
mov
leave
jecxz
out
jbe
xor
xchg
inc
fsubl
incl
int3
ljmp
into
loope
dec
pusha
testb
inc
lcall
popa
cmp
pop
call
into
lock
fs
xchg
sub
jmp
mov
bound
ljmp
mov
bound
dec
sub
imul
popa
sbbl
jle
int3
mov
pop
jmp
mov
dec
shlb
dec
popa
and
add
add
mov
push
jns
xchg
sub
jne
mov
into
out
dec
pop
out
out
rol
inc
aaa
pop
movsl
cwtl
xor
sub
sbb
xor
push
and
in
and
les
mov
pop
pop
mov
ja
xor
adc
mov
jae
push
andb
mov
std
sbb
cltd
js
scas
xchg
notb
dec
in
les
rorl
lods
pop
filds
mov
cwtl
imul
and
insb
add
pop
mov
jb
adc
cmp
add
sbb
stos
inc
testl
xchg
dec
gs
aas
or
push
jnp
inc
adc
push
in
jb
out
and
xchg
out
stc
fistpl
xchg
outsb
enter
std
pop
jmp
scas
pop
loop
sub
lods
dec
push
cmp
and
sub
mov
sbb
push
sub
mov
jbe
dec
stc
jecxz
sub
test
inc
inc
in
shlb
out
hlt
push
movsl
fmull
pop
inc
mov
in
jl
pop
lcall
mov
lret
add
adc
adc
inc
inc
call
enter
out
test
popa
dec
push
or
push
mov
mov
cmpsb
xchg
add
and
loop
jle
subl
xor
shll
inc
inc
roll
das
or
jge
push
out
nop
pop
add
or
int3
xchg
outsb
jns
or
xlat
adc
cld
inc
clc
pop
push
sahf
mov
pop
lock
mov
ja
pop
subl
pop
in
dec
aam
in
jg
clc
stos
inc
sub
sahf
or
insl
jmp
leave
pusha
mov
lret
add
pop
xor
mov
or
mov
xchg
xchg
ds
pop
stos
lods
mov
cmpsb
lods
inc
sbb
pop
into
insl
ja
aas
repnz
mov
scas
mov
in
jns
imul
fcoms
sbb
js
aam
and
sbb
popa
out
orb
sub
or
pop
mov
push
xchg
jmp
push
repnz
cmp
movsl
arpl
adc
jae
xchg
cmp
xchg
pop
out
jle
movsl
scas
out
in
sub
xchg
mov
push
je
cmpsb
clc
fdivl
pop
mov
jecxz
dec
lcall
inc
gs
push
add
jns
cwtl
mov
das
pop
cmc
push
mov
push
or
pop
pushf
push
test
aas
jb
inc
mov
leave
mov
push
cmp
push
js
jge
lock
xchg
mov
jmp
mov
push
push
xorl
adcl
in
mov
and
fmull
lods
inc
dec
mov
cmc
cmpsb
dec
cmpsl
xlat
scas
scas
add
andb
cmc
fbld
daa
lret
push
shr
sbb
inc
daa
fsubrs
and
iret
mov
stc
arpl
cwtl
dec
pop
sahf
stos
xchg
lcall
scas
mov
pop
mov
inc
fsubp
inc
push
adc
test
cmp
push
sub
pop
nop
daa
subl
mov
stc
inc
lods
movsb
jb
mov
cwtl
or
in
pop
je
jl
mov
pushf
mov
and
add
mov
cmpsb
pop
add
mov
sub
enter
mov
xchg
xor
pop
hlt
outsl
leave
scas
mov
cwtl
xlat
jb
in
mov
sub
test
jecxz
leave
imul
mov
pop
out
jge
ret
data16
push
and
pop
xchg
cltd
xor
lods
xchg
or
sahf
mov
sbbl
lea
or
inc
and
js
out
dec
adc
pusha
dec
pop
or
add
xlat
jge
mov
sbb
in
ds
fwait
jb
sti
cs
mov
shrb
lret
pop
in
movl
inc
imul
hlt
inc
mov
pop
int3
rcrl
dec
shlb
pop
pop
cmc
mov
cmpsb
sti
imul
out
push
mov
in
je
jle
mul
jp
cld
clc
inc
fistpl
adc
xchg
divb
jo
test
jnp
pop
mov
adc
ret
pusha
mov
aas
aad
cld
mov
shl
pop
or
mulb
mov
sub
shrl
in
mov
ljmp
loopne
in
subl
push
mov
and
jno
popa
adc
dec
add
test
loope
fs
icebp
sbb
push
mov
or
fisubs
or
cmp
bound
aam
fadd
push
es
outsl
arpl
rol
ffree
leave
sub
roll
out
pop
add
jge
test
mov
loop
dec
and
push
outsl
inc
stos
lahf
and
lods
adc
test
icebp
pop
mov
mov
push
xchg
add
inc
xor
enter
sbb
push
icebp
stos
int
aas
scas
ret
shl
mov
insb
jge
xchg
mov
leave
push
or
scas
subb
jmp
adc
dec
xor
sbb
fnsave
xor
or
pop
cmp
sahf
sub
insb
mov
scas
aad
js
sbb
push
lcall
subl
cltd
movsb
xor
fiadds
mov
mov
mov
push
push
in
adc
adc
ficomps
xor
cmp
jp
sbb
xchg
push
jle
push
and
sbb
xchg
fldt
push
sahf
jae
push
xchg
ss
mov
lods
rcl
rcrl
xlat
repz
in
push
adc
sti
inc
mov
in
mov
mov
add
int
jne
outsl
lods
xchg
mov
popl
push
sbb
popa
mov
fstl
sub
in
std
dec
pop
jg
mov
jmp
int
sbb
adc
xchg
addr16
insb
sbb
and
fisubrl
mov
sahf
push
rcrb
mov
lods
jmp
imul
push
int3
pushf
inc
lret
xchg
or
dec
fstp
adc
pusha
xchg
inc
adc
push
mov
test
mov
push
jmp
lea
xor
mov
fcoms
mov
dec
sub
mov
dec
add
imul
fistpll
mov
xorl
cmpsb
jnp
push
cmpsb
sahf
sbb
mov
sbb
lcall
sbb
ret
ja
test
xchg
mov
xchg
in
dec
out
cmp
outsb
add
cmp
pop
adc
mov
add
mov
roll
cmpsb
adc
mov
out
pop
adc
push
pop
loop
inc
cmp
cltd
xchg
enter
cmp
scas
mov
popf
push
in
mov
xchg
lahf
fadds
xor
lret
movsb
stos
in
test
cld
shlb
xor
mov
push
xchg
cmp
ljmp
sbb
inc
rolb
movsb
pop
repnz
nop
ljmp
mov
rclb
ja
xor
xchg
ja
test
xchg
sbb
jge
add
jp
mov
jg
sbb
clc
xchg
jmp
sub
enter
add
pop
mov
mov
mov
sahf
and
push
push
xor
mov
iret
sub
stos
adc
inc
repz
xor
shrb
sbb
rcrb
jo
outsl
xchg
pop
push
sbb
cmp
pop
cmpb
popa
xor
push
xchg
sti
inc
sbb
or
cmc
pop
add
dec
faddl
in
insl
xchg
pop
or
shlb
jne
test
xchg
push
mov
sbb
sahf
or
repnz
xchg
jp
mov
sub
pop
enter
ret
in
adc
ljmp
data16
loop
fists
mov
sub
sbb
setb
xchg
sub
ret
mov
mov
int
mov
sub
or
call
xchg
dec
or
jmp
arpl
xchg
rcrb
sbb
pop
ret
jl
mov
in
sbb
mov
xor
imul
inc
rcl
lock
adc
gs
mov
and
inc
insb
jbe
popf
and
dec
aam
mov
jge
fisubrs
std
test
jg
sub
mov
decl
lret
inc
outsb
push
je
push
inc
mov
and
pop
cltd
inc
or
sub
and
mov
pop
cmp
push
stc
pusha
stc
les
mov
test
ja
inc
es
mov
dec
inc
pusha
jl
cmp
int3
jns
outsl
sub
enter
enter
popa
repz
mov
fnstenv
sbb
into
mov
adc
jae
or
into
mov
repz
insb
lahf
mov
enter
ss
adc
lea
repz
push
jp
and
xchg
push
cmpps
or
xor
sbb
and
ds
mov
jbe
mov
mov
out
xchg
sbb
icebp
mov
inc
pop
mov
xchg
sub
rclb
sub
aam
inc
mov
fs
pop
cltd
loope
and
int3
lea
adc
out
jmp
nop
test
testb
cs
mov
ljmp
enter
arpl
hlt
push
mov
mov
and
sahf
jbe
inc
push
and
and
and
popf
lods
insl
and
xor
pop
add
js
sbb
mov
xchg
xor
mov
mov
mov
add
int3
mov
pop
jne
mov
cmp
mov
movb
push
sub
inc
cltd
xchg
push
out
es
or
mov
into
cmp
jne
mov
test
sbb
push
lret
scas
adcl
mov
jno
loopne
push
ss
es
aas
xlat
out
mov
mov
fcomp
shr
push
sbb
adc
stos
or
mov
out
fs
xchg
sub
add
rolb
add
mov
push
sbb
pop
push
icebp
jl
pop
lea
leave
popf
mov
cmp
xchg
sbb
mov
test
dec
xor
jno
outsb
mov
inc
cltd
ja
leave
lods
dec
pop
dec
andl
mov
xor
xchg
imul
cmp
pop
sbb
loop
or
or
incb
mov
sbb
out
cmp
jo
imul
sbbl
add
cli
or
in
jg
hlt
roll
pop
cmp
xchg
sub
testb
nop
ss
rol
push
aaa
mov
rol
aad
mov
mov
out
or
mov
mov
les
jo
imul
repnz
mov
lcall
mov
pop
fwait
cmp
in
xchg
pop
lcall
cmp
stc
into
test
lods
mov
call
iret
xchg
outsb
pusha
subb
push
int
ffreep
pop
out
xchg
and
arpl
sub
dec
movsl
arpl
rolb
mov
adc
fs
adc
not
ljmp
and
and
sbb
add
pop
add
or
ss
iret
or
mov
data16
dec
fiadds
je
mov
adcb
pop
pop
nop
jp
jg
xor
add
out
test
fbstp
test
aam
mov
frstor
mov
jmp
scas
ss
loopne
mov
outsb
mov
adc
clc
adc
jb
cld
push
inc
inc
in
lods
xor
fisubl
sub
dec
sarb
cmp
into
out
pop
or
mov
fdiv
mov
push
popa
pop
xor
cmpsl
push
add
sub
iret
insl
cltd
jno
jg
lcall
push
fstpl
pusha
negl
inc
mov
out
xchg
in
xor
xchg
pop
add
test
ss
fisubs
pop
mov
iret
and
into
pop
mov
loopne
in
test
js
test
loop
andb
sbb
int3
dec
adc
mov
dec
inc
sbb
dec
push
add
lods
test
testl
rorb
jle
mov
shlb
or
fnstcw
std
xor
data16
cmpsb
dec
pxor
fdivl
sbb
cmp
pop
mov
stc
sbb
lods
sbbl
clc
add
clc
inc
lret
sub
inc
mov
lcall
pop
cltd
test
adc
add
pushf
xor
nop
dec
mov
in
aaa
jbe
imul
mov
xchg
idivb
mov
push
mov
cmpsl
mov
pop
jl
and
xchg
jecxz
scas
scas
lock
rcrb
loopne
ja
lcall
popa
inc
ja
pushf
xor
xor
call
mov
lock
sub
push
pusha
ret
push
mov
xor
add
cli
mov
jae
xchg
int
mov
in
lret
sub
and
std
mov
mov
ja
inc
clc
shrb
fwait
inc
cmp
cltd
in
rclb
cli
xor
xor
sbb
jg
imul
cmc
sbbl
jmp
mov
sti
sub
xor
addr16
cmpsl
scas
or
xchg
xor
gs
jp
xchg
inc
cmp
frstor
jle
cmpsl
mov
stc
xchg
les
stos
test
aaa
pushf
cmp
push
test
cmpsl
sbb
test
sub
adc
aaa
lret
push
pushf
nop
fcoms
mov
ret
notb
aam
arpl
adc
push
or
sbb
addb
repz
leave
pop
sub
inc
and
jae
adcl
sbb
data16
add
movsl
divb
mov
sub
inc
fldt
add
mov
out
jns
pop
dec
cmp
jg
cmp
cmpsl
repnz
sbb
or
sub
cmc
inc
cmp
sahf
fdiv
repnz
dec
or
push
movsl
scas
mov
pop
loopne
mov
orb
mov
jne
test
cld
sbb
test
bound
lcall
sub
cld
push
pushf
add
mov
pop
pop
cmp
adc
test
ja
dec
dec
add
mov
push
int3
repnz
imul
adc
scas
imul
jg
pop
insb
mov
popa
and
mov
inc
in
and
je
sahf
incl
sahf
mov
aad
lgs
aad
mov
jbe
pop
daa
xor
repz
leave
les
clc
cmp
cmp
mov
jmp
jecxz
or
test
ljmp
insb
imul
sbb
pop
or
xor
adc
mov
jo
xchg
push
je
mov
jmp
or
push
repnz
in
dec
cmp
frstor
push
mov
cmp
sub
adc
inc
pop
in
mov
cmpsb
xchg
jle
movsb
mov
cwtl
frstor
sti
in
mov
int
mov
in
test
cwtl
shl
cli
add
pop
sub
xchg
shll
std
pusha
rorb
adc
sub
mov
push
cmc
lods
adc
test
ret
pushf
mov
fldpi
mov
adc
cmp
int
enter
cwtl
mov
jo
mov
imul
in
inc
inc
or
xor
lret
lret
sbbb
sbb
adc
inc
std
jecxz
xor
pop
cmc
push
inc
movsb
nop
mov
movsl
jp
out
dec
xor
jle
sbb
mov
or
mov
test
idivl
scas
jle
cmp
int3
and
faddl
popa
push
mov
xrelease
jns
aam
cmp
scas
out
inc
sbb
lcall
arpl
mov
jg
into
jo
adc
imul
or
dec
inc
lcall
push
jmp
fildll
scas
enter
dec
dec
mov
mov
sbb
mov
pop
cs
lahf
and
test
ret
cli
sbb
mov
sbb
sub
frstor
loop
sub
adc
push
cmc
fstps
inc
fwait
inc
es
mov
sbb
sub
in
add
jne
push
xor
mov
sti
and
and
fdivrp
mov
call
or
and
sbb
xlat
lcall
rol
mov
addr16
mov
mov
js
sti
fbld
dec
repnz
push
sbb
shlb
in
cmp
cmp
adc
xchg
fucomip
mov
test
lcall
sub
xchg
jmp
rclb
mov
loopne
jg
and
scas
enter
mov
into
push
enter
dec
pop
xor
das
add
sbb
sbb
push
mov
sub
ljmp
iret
enter
lret
cmp
xchg
stos
inc
pop
mov
lcall
pusha
std
arpl
cmp
mov
sbbl
test
rcrb
mov
inc
cs
iret
xchg
int
sbb
mov
cwtl
cmp
adc
or
add
imul
daa
mov
adc
mov
add
mull
test
xchg
fwait
mov
mov
adc
mov
scas
mov
std
sub
xlat
mov
mov
lret
mov
jns
shrl
test
loopne
push
sbb
jae
mov
dec
test
cmp
jmp
inc
sub
add
push
xchg
outsb
loope
mov
xorl
gs
fmul
xchg
mov
push
out
pop
mov
test
dec
loop
xchg
gs
xchg
mov
sbbl
mov
stos
inc
out
mov
jl
push
insb
mov
adc
out
xor
xorl
push
popf
sbb
mov
pushf
shrb
jmp
into
addl
push
push
inc
push
cmp
mov
fimull
lock
fdivs
push
or
arpl
into
mov
lds
rolb
cli
test
sub
mov
push
ljmp
adc
call
pop
fidivs
stos
nop
adc
fistps
xlat
out
outsl
iret
hlt
adc
jecxz
sub
cmp
xchg
jge
dec
jae
mov
jnp
test
rcrb
cs
popf
les
pop
test
xor
arpl
aad
sbb
mov
xchg
loop
lahf
jb
aad
loope
add
cmp
add
nop
cmp
imul
std
cmp
sar
ret
jb
lods
push
pop
fistl
mov
push
mov
fptan
enter
adc
adc
cmp
sarb
jecxz
push
mov
popf
mov
addb
mov
jecxz
mov
inc
inc
fidivl
sbbb
mov
icebp
mov
cmp
dec
dec
stos
or
push
mov
lds
mov
inc
test
jge
gs
push
mov
xchg
iret
push
push
shll
in
fadds
pop
add
fsubrs
hlt
jo
scas
add
push
js
iret
jnp
pop
imul
lea
mov
jle
jnp
inc
pop
adc
ss
cmp
test
mov
cmp
fiaddl
aas
clc
js
mov
imul
cmp
test
xchg
jnp
pop
bound
inc
rol
repnz
mulb
jl
mov
pop
movsl
mov
cs
or
and
aad
test
xchg
pop
dec
pop
jae
jb
outsl
movsb
push
sti
fwait
adc
jno
nop
gs
xchg
icebp
jp
cmp
jbe
sbb
sbb
scas
cmp
pop
mov
fwait
cmc
inc
mov
repnz
and
cwtl
cs
mov
or
adc
push
mov
xlat
adc
leave
jae
sbb
sub
addr16
mov
ljmp
jae
fdivr
or
xchg
stos
in
cltd
mov
lcall
fs
xchg
into
xlat
rcll
test
cltd
or
outsl
jns
dec
in
call
sub
outsb
jl
and
dec
cmpsl
xchg
push
sbb
xchg
jg
jg
add
cmp
xlat
inc
sahf
test
xchg
ja
lret
xchg
and
and
dec
sbb
inc
sbb
push
xor
mov
test
rcll
or
das
lods
fildll
out
lret
jmp
insb
enter
dec
ss
sub
aas
xor
adc
imul
pushf
jle
into
lds
lock
adc
add
fs
in
mov
dec
lock
inc
xchg
sbbl
fucomi
mov
arpl
shlb
sub
xor
loope
fwait
fs
push
cmp
dec
inc
pusha
rcll
sti
loope
adc
das
cmp
xor
insb
movsl
es
repz
or
mov
adc
bound
fldenv
loopne
jmp
shrb
lret
add
mov
fwait
ja
subl
mov
mov
jnp
out
sub
push
mov
fucomi
fisttpll
jle
sbb
xlat
icebp
mov
hlt
loopne
sub
sahf
shrb
pop
cli
rorl
in
jno
jmp
iret
ret
ja
and
inc
call
bound
lods
out
les
int
lds
out
pop
je,pt
xor
sub
test
mov
call
add
addr16
roll
dec
or
test
cmp
push
ds
add
mov
sub
daa
xchg
dec
popf
lock
push
addr16
jae
adc
cmp
push
popf
es
js
mov
sbb
lods
js
icebp
sbb
xchg
jg
jbe
leave
ljmp
add
push
nop
sbb
xor
lock
movsb
int
fcomi
or
lret
and
ficoml
xchg
mov
mov
sbb
scas
xchg
cmp
pop
xorl
mov
ja
cmc
inc
jle
je
push
mov
sbb
jle
mov
add
insb
xor
test
mov
scas
shl
out
inc
pop
adc
mov
jno
fimuls
outsb
lahf
out
pop
sub
data16
jae
enter
cmp
dec
push
mov
cld
mov
push
ja
hlt
jge
data16
or
adc
mov
lock
jno
addr16
js
adc
xlat
repz
push
je
inc
cli
les
jmp
fisubrl
or
popa
pop
mov
lret
cmpsb
cmp
cmp
scas
icebp
ror
mov
repz
addr16
sarl
bnd
jl
ljmp
or
mov
pop
out
xchg
push
jbe
adc
mov
dec
js
dec
cmp
adcl
call
pop
mov
mov
cmp
inc
sub
std
mov
xor
lcall
fldcw
iret
daa
ret
mull
sti
in
outsl
push
sbb
xor
insl
mov
pop
popl
js
inc
cld
shl
add
cli
xchg
push
and
jg
imul
shl
clc
xchg
loope
jmp
lods
sbb
out
mull
mov
pop
xchg
into
cs
jge
shll
fisttps
xor
or
xchg
jb
lret
sub
sbb
fnstenv
sub
in
dec
negl
jne
inc
sub
pop
imul
sti
mov
adc
das
mov
mov
xchg
cmc
jp
ds
mov
jmp
lcall
push
lock
pusha
clc
and
or
sub
jb
sbb
fidivs
push
in
adcl
or
sti
fisubl
mov
mov
pusha
stos
inc
popf
ss
out
enter
pop
xor
push
clc
call
les
cmpsl
mov
jo
lods
jl
lahf
or
push
out
cmpsl
pop
std
adc
xchg
rcll
into
add
pop
std
add
lret
and
push
add
sbb
and
mov
ficoml
popf
scas
adc
mov
sbb
lea
incl
add
and
mov
xchg
leave
pop
into
daa
insb
shlb
rclb
mov
pop
sub
add
pop
loop
and
in
hlt
les
mov
cmpsl
mov
mov
lret
xor
xlat
cmpl
loope
repnz
sub
cmpsl
pop
nop
push
inc
sbb
ds
lcall
scas
std
mov
fadd
mov
mov
dec
mov
fstpl
clc
cvtdq2ps
jne
repnz
and
xor
xor
dec
aam
aad
xor
inc
das
fcos
mov
enter
or
mov
icebp
xor
mov
int
popa
mov
or
sbbl
and
xor
and
inc
mov
push
jns
sbb
fwait
ret
loope
inc
lcall
sbb
test
push
fnstsw
push
fdivl
xchg
es
mov
xchg
sbb
in
sbb
mov
dec
pop
jle
jo
push
in
lahf
pop
sub
or
rsm
icebp
pop
pop
push
inc
into
dec
fcoms
call
xor
or
je
push
xor
nop
fwait
into
out
lock
cmp
repz
push
loop
push
sub
fistpl
addr16
nop
cmp
push
cltd
fldenv
xor
dec
or
adc
jle
pushf
rcll
test
pop
xor
mov
pop
sub
push
subl
lcall
and
pusha
repz
ds
in
mov
add
dec
out
int3
repz
pop
movsb
push
adc
fldt
repz
cli
push
pop
fcompl
cmpsl
push
in
sahf
stc
and
add
std
lea
lods
mov
adc
mov
add
or
out
insl
loopne
adc
sbb
xor
lock
sub
sahf
jmp
addr16
and
std
xchg
test
dec
arpl
cltd
pop
cmc
repnz
jbe
and
testb
xchg
andl
xchg
outsl
jo
insb
mov
mov
clc
or
xchg
movsl
add
push
sub
push
cld
cwtl
inc
pop
or
clc
aas
adc
lods
loopne
lock
cmp
sarl
and
das
dec
imul
push
xchg
push
ljmp
mov
test
incb
fisttpll
test
sub
jae
pushf
sub
mov
cli
pop
inc
outsb
pop
ja
jnp
insb
jne
ja
pusha
jb
sti
orb
out
stos
shll
add
cmp
fwait
mov
sahf
ficoml
js
inc
mov
xchg
xor
or
xchg
mov
or
jg
xchg
lret
mov
dec
and
dec
repnz
inc
int3
push
stos
xchg
or
and
outsb
jp
fnstenv
mov
idivl
mov
pop
nop
or
stc
popf
sub
ljmp
jne
and
sbb
test
xchg
mov
cmpb
and
mov
mov
mov
dec
idivb
mov
jg
inc
inc
mov
mov
popf
xor
mov
mov
adc
inc
fldcw
and
pop
adc
int3
mov
cli
inc
xlat
lock
outsl
mov
sbb
bound
mov
inc
push
pushf
jg
into
cmpl
lea
cmp
addr16
adc
mov
movq
in
pop
add
and
fimull
xchg
cs
aad
addr16
jmp
addb
inc
add
inc
movsb
or
xchg
jle
mov
mov
adc
sahf
cmpsl
stc
nop
fsub
xchg
xchg
pushf
mov
aaa
or
dec
mov
lahf
mov
in
push
or
sub
out
mov
dec
loope
out
test
mov
add
jmp
xchg
out
fdivrs
cmc
lods
adc
iret
mov
outsl
daa
push
inc
pop
fadds
repnz
mov
sub
pop
push
test
ret
out
ljmp
int
int
iret
or
sbb
rol
loope
pop
popf
lods
out
xchg
aas
int
sti
sbb
movsl
cmp
notb
inc
pop
repnz
jge
adc
push
pop
jge
fdivs
jmp
and
cmp
dec
pop
mov
pop
bound
xor
stos
cmp
push
rcl
push
inc
stc
inc
add
xchg
shll
pop
in
lock
push
sbb
aaa
pop
mov
push
popa
rcll
push
push
test
jne
pop
inc
rcrl
std
mov
leave
pusha
lock
jle
jge
pushf
cli
and
dec
add
lret
sti
cld
out
or
mov
xchg
je
xchg
xchg
loop
mov
fs
pop
pop
mov
repnz
lcall
cltd
fimuls
out
mov
sbb
popa
cltd
fs
repnz
dec
cltd
xchg
mov
shrl
aam
xchg
ret
loop
dec
mov
jecxz
xor
sbb
xor
sub
pop
mov
ret
cmpsb
cmp
ja
shlb
repnz
movl
shrl
mov
mov
mov
decb
inc
sbb
mov
fdiv
mov
jne
push
push
out
imul
xor
mov
outsl
fsubs
xchg
out
jns
mov
inc
fldcw
outsl
iret
mov
sub
pop
hlt
pop
repnz
ljmp
adc
jp
inc
mov
push
lea
int
sub
setge
jo
fistl
or
lds
aaa
mov
sub
xor
mov
je
mov
cli
or
lret
in
push
add
xchg
sub
fcmovne
fsts
ret
cs
push
sbb
xor
aad
push
cmp
mov
les
les
in
adcl
pop
pop
dec
or
inc
aad
mov
add
inc
fnsave
mov
sti
mov
mov
dec
loopne
fldcw
adc
dec
cltd
sub
jmp
in
fdivl
shrb
outsb
add
je
setle
xorb
adc
sbb
das
js
icebp
test
xchg
add
xchg
and
cmp
cmpsl
cmp
adc
iret
shlb
fcomip
xor
inc
or
fcompl
rorb
das
enter
sbb
and
adc
adcl
rcr
popa
pop
addr16
pop
insb
int3
cmpl
mov
filds
icebp
jne
adc
jecxz
mov
xchg
mov
hlt
lds
push
push
arpl
jl
dec
mov
sbb
jno
test
push
idivb
test
shrl
ds
ja
int3
and
sbb
or
mov
or
and
sahf
push
mov
pushf
jae
incl
xor
mov
cmpxchg
mov
das
std
inc
sub
mov
repz
push
and
mov
ret
sahf
rcll
mov
add
out
inc
aas
inc
addr16
mov
pop
aas
aas
xlat
outsb
pop
mov
fisttpl
hlt
cmc
jns
add
mov
stos
cmp
and
adc
adc
mov
jge
lahf
add
jnp
lahf
adc
repnz
dec
mov
cmp
data16
lea
jecxz
push
sbb
jne
scas
push
repnz
push
out
xchg
nop
aaa
scas
xchg
insl
ja
sbb
into
cli
jl
bnd
lahf
stos
pop
add
fbld
shrl
dec
rcrb
hlt
add
add
fisttps
into
div
or
jno
and
or
popa
stc
std
and
inc
and
pop
add
lock
sbb
mov
sbb
mov
pop
test
cmp
jns
cmpb
or
cwtl
imul
cld
test
rclb
or
xchg
out
inc
sub
enter
mov
inc
push
shrb
les
stos
jb
ret
pop
dec
push
xlat
push
and
xor
jp
popf
xchg
add
das
repz
pop
enter
pop
inc
sbb
test
dec
hlt
xor
jg
pop
das
mov
dec
sbb
inc
jge
dec
and
xchg
repnz
lds
lds
cmpsb
pop
repz
jb
xor
jns
push
add
sbb
mov
cltd
jg
adc
mov
adc
cli
mov
push
stc
cmpsl
lret
je
sarb
pop
das
inc
inc
cld
arpl
fldpi
int3
test
mov
pop
insb
and
sbb
lret
frstor
addb
sbb
out
insl
push
lock
dec
out
fdivr
pop
or
inc
mov
xchg
aad
mov
sbb
jns
fidivrl
test
call
pusha
imull
int
aad
movsl
rorl
adc
and
jbe
rorb
or
push
xchg
lea
fdivs
ss
cmp
test
cmp
cmpsb
jg
xchg
sub
lods
dec
cltd
jecxz
lret
jp
fldl
fstl
cmp
cmp
outsl
divl
jnp
pop
pusha
enter
outsb
inc
out
ficoml
ja
fists
dec
test
lds
mov
in
mov
inc
insb
mov
xor
aas
cs
and
push
popf
movsb
cld
in
xor
or
dec
jl
negl
or
adc
push
add
shrl
sbb
mov
cmpsl
lock
loop
xor
testb
and
sub
mov
fst
fidivrl
incl
lcall
cli
addr16
mov
loopne
lcall
or
sbb
jle
xor
fs
popf
xor
push
add
xchg
sahf
mov
inc
into
gs
sub
subb
jno
adc
push
dec
cli
xchg
sub
ss
scas
push
cwtl
das
dec
sarb
jnp
loopne
out
scas
fisubrl
push
and
fwait
or
cli
adc
das
pushf
jbe
loopne
jae
imul
add
movsb
push
mov
andb
push
outsl
adc
jnp
leave
inc
dec
lcall
cmc
mov
mov
xchg
movsb
cmp
loope
lahf
push
add
cwtl
ret
sub
ljmp
jb
hlt
sub
inc
push
js
shr
clc
out
out
fucomp
das
pop
das
sub
shlb
pop
xchg
or
xlat
outsl
shll
stos
cmpsb
jo
nop
dec
pop
cmp
shr
push
fmull
ljmp
push
call
scas
pop
outsl
jg
rolb
jge
xchg
stos
inc
mov
je
xorl
leave
loopne
aas
fdivp
popa
lods
bound
mov
cmp
pop
sbb
sub
mov
dec
arpl
je
adc
pop
sub
push
xor
and
push
movsl
mov
lock
sub
lret
pop
ficoms
add
sbb
gs
testl
lahf
sub
add
xor
xchg
sub
or
int3
mov
dec
loop
leave
enter
data16
ss
push
jns
cmp
jne
fsubrs
stos
jo
inc
mov
mov
fs
push
inc
dec
jnp
xchg
push
sti
lret
inc
push
jb
mov
pusha
mov
inc
in
cmc
and
les
cmp
lret
hlt
popa
pop
adc
mov
das
out
test
cmp
lcall
addr16
cltd
sbb
cli
cmp
pop
xchg
xor
adc
movsb
inc
add
adc
sub
jne
inc
jg
imul
fmuls
lcall
mov
fwait
sub
xchg
mov
ds
inc
scas
in
jp
popa
fnstenv
pop
test
mov
or
rol
rcrl
mov
dec
inc
addr16
cwtl
fidivrl
mov
mov
push
pushf
mov
decb
and
inc
cltd
and
pop
bswap
sbb
stc
pusha
cmp
mov
push
ror
cmpsb
sbb
cmp
mov
ret
arpl
xor
int3
cmp
stos
jmp
rolb
sti
mov
dec
push
div
mov
daa
sbb
loop
imul
cmp
stos
add
xor
mov
pop
dec
aaa
jb
dec
push
fnop
movsl
in
mov
adc
fwait
and
push
jmp
les
out
dec
jb
movsb
mov
scas
mov
jge
ss
lret
sub
xlat
xchg
jmp
add
mov
aam
inc
loope
mov
xor
adc
dec
loopne
cmc
subb
iret
jo
sbb
sub
pop
inc
and
sbbl
jns
test
out
push
sbb
ljmp
jno
sbbl
lahf
lods
xchg
shl
adc
std
sub
jg
adc
test
inc
sbb
cld
jg
lcall
insl
add
test
pop
sti
xor
xchg
xchg
int
mov
push
mov
jb
hlt
xor
mov
stc
push
mov
lods
outsl
pop
clc
mov
pop
in
adcb
neg
addr16
test
dec
packssdw
movsb
in
je
adc
jns
clc
daa
mov
popf
and
into
push
icebp
mov
xchg
dec
ss
fistpl
or
mov
imul
mov
ja
icebp
sub
test
pop
leave
ja
pop
cmp
dec
insl
jae
into
push
add
pop
lock
mov
cmpsl
mov
into
adc
repz
cli
add
and
dec
pop
iret
out
je
or
inc
inc
rorl
cwtl
jo
inc
shlb
data16
test
enter
std
js
lcall
and
sub
insl
in
xchg
enter
ret
mov
mov
lea
lds
push
mov
dec
imul
adc
and
lahf
jp
mov
icebp
and
cmp
mov
lea
iret
and
test
rclb
jg
hlt
mov
cltd
fwait
pop
sbb
lods
add
jg
add
cs
push
cltd
insl
stc
orb
mov
insb
ret
and
in
xchg
mov
sbb
in
sbb
sti
mov
push
sub
orb
out
sbb
stos
xor
jmp
or
adc
call
pop
test
jp
movsl
loop
and
add
aad
cltd
sub
sbb
das
push
and
xchg
xor
inc
fbld
pop
icebp
mov
inc
sbb
aas
je
addr16
mov
ret
inc
call
movsb
add
push
xchg
adc
gs
pop
insb
in
aaa
or
loop
push
add
imul
fwait
jnp
ss
or
inc
jno
xchg
out
or
dec
in
jle
mov
inc
in
adc
xchg
mov
popa
in
mov
shrb
pop
ficompl
or
sub
aad
jnp
fsub
mov
mov
mov
pop
scas
xlat
cli
or
mov
in
mov
fadds
ss
in
cmp
inc
xor
insb
pushl
jne
mov
sti
sub
aam
xor
or
repnz
or
xlat
push
push
lds
inc
fcompl
stos
cmp
or
adcl
mov
mov
sbb
pusha
movl
arpl
dec
xor
movsl
adc
inc
lret
notb
mov
iret
loopne
int
fcoms
inc
xor
mov
xchg
hlt
andb
es
and
jnp
push
add
movsl
pop
rcrb
pusha
cmpb
push
call
xor
je
fnstenvs
rorl
pop
sub
or
jb
cmp
rcr
repnz
sahf
add
es
and
iret
sbb
xlat
dec
out
inc
or
sub
pop
inc
ret
pop
push
mov
dec
jle
jmp
push
cmp
inc
lods
out
std
or
imul
loope
iret
loopne
insl
mov
sbbb
mov
lcall
dec
negl
add
lahf
mov
std
fdivp
and
jb
push
dec
mov
addb
mov
not
sub
lods
ds
push
movsb
dec
mov
in
js
xlat
adc
pop
lea
scas
ficompl
daa
jnp
xor
jns
enter
fucomi
stos
cmp
push
aas
rcll
cli
mov
js
insb
aaa
mov
jl
sbbl
add
clc
push
sub
jns
jg
jne
or
insb
lret
iret
and
sahf
push
jno
push
xor
mov
pop
jno
xor
add
inc
gs
mov
xchg
aam
xor
and
add
lds
ds
outsl
inc
or
test
cmp
lods
lods
sbb
xor
std
and
cmp
push
or
push
in
out
push
mov
mov
cmpl
xor
insb
cmpsb
dec
hlt
xor
repz
push
push
addr16
xchg
or
xchg
rorl
decl
scas
xchg
shl
jecxz
mov
outsb
loope
or
jnp
test
sub
dec
mov
jecxz
loope
in
push
jg
les
data16
mov
jbe
lods
xchg
ds
or
gs
hlt
enter
pop
das
incb
sub
pop
cmp
add
or
andb
push
push
mov
sbb
mov
mov
push
out
inc
outsl
int3
and
xchg
jb
stos
dec
das
cmp
mov
mov
jl
lahf
movsb
sahf
jne
int
negl
hlt
sbbl
int
mov
and
and
int
lret
mov
mov
stos
jge
les
cmp
mov
aaa
add
orb
fadd
adc
cmpsl
sub
das
mov
jle
jns
xchg
sbb
lcall
or
stos
inc
dec
or
pusha
cmp
xchg
pop
ret
jmp
incl
sub
rcr
in
les
adc
push
mov
cltd
mov
pop
or
jno
pop
aas
sub
clc
push
popf
aad
dec
nop
sbbl
and
mov
popf
out
icebp
xor
paddsb
stc
insb
or
pop
pop
jb
scas
out
adcl
xchg
fcmovbe
out
dec
add
xor
jp
jg
fs
ljmp
ds
mov
lods
adc
xchg
inc
int
pop
sbb
add
jae
lds
and
push
push
mov
shrl
loope
inc
mov
gs
out
cmpsl
jle
fs
leave
jne
cli
pushf
sbb
xchg
pop
mov
sub
cmp
xor
les
or
imul
jecxz
pop
movswl
or
inc
enter
pop
pop
daa
ss
xor
fs
ret
pop
mov
ret
loopne
mov
mov
cmpsb
jo
push
mov
sub
push
out
xlat
mov
test
pusha
mov
cltd
lret
lret
sbb
add
dec
sub
cmp
insb
in
jne
sub
shll
or
add
jg
shrb
sarl
push
xchg
sbb
scas
ds
pop
jl
in
mov
adc
cld
or
mov
movsb
mov
test
xor
xor
mov
push
cli
insl
add
jb
repz
cmpsl
ds
pop
mov
and
iret
xor
jbe
sti
push
into
xchg
aam
push
pop
out
cmovnp
outsb
fidivrs
outsb
add
out
inc
mov
dec
int3
fisubl
jl
loopne
pop
sahf
sbb
jmp
cmp
or
cld
cmp
cmp
push
loope
add
mov
movsl
ds
pusha
mov
xor
aaa
mov
pop
push
int3
sahf
jns
fdivr
je
popl
xchg
shrb
inc
mov
loope
mov
mov
pop
aaa
add
sbb
mov
add
lods
inc
and
jge
iret
adc
int
xchg
push
mov
xchg
test
jl
fmuls
inc
xor
inc
dec
inc
outsl
shll
jmp
pop
dec
dec
popa
rorl
enter
pushf
lock
cmpsb
jecxz
mov
add
mov
jno
cli
cwtl
orb
enter
adc
out
in
xorb
cmc
mov
add
sbb
cltd
sub
mov
mov
fldt
mov
pop
aam
stos
lods
ja
outsl
seta
mov
lret
lret
jle
mov
loope
xchg
insl
dec
xor
and
loop
xchg
sub
dec
ret
int
adc
xchg
scas
jno
outsl
cs
dec
test
jl
sbb
pop
push
js
mov
cli
or
out
pop
push
stc
inc
test
mov
xlat
push
ljmp
and
out
dec
aam
or
les
push
popw
xchg
pop
into
xchg
iret
adc
mov
dec
hlt
dec
push
sub
mov
xchg
adc
pop
fcmovnb
xor
bound
mov
fwait
hlt
stos
sbb
inc
ljmp
pop
out
in
out
repz
movsb
out
inc
mov
mov
adc
sub
inc
mov
cltd
int3
daa
inc
cmc
push
and
mov
dec
lods
push
xchg
mov
pop
jecxz
cmp
and
pop
fcomi
cwtl
mov
outsl
mov
jbe
test
add
add
lods
xlat
fisttpl
js
lret
cld
mov
mov
mov
push
dec
sbb
ret
pop
sub
test
add
inc
xchg
add
shll
sbb
or
adc
out
sub
and
add
mov
xchg
and
push
mov
jno
mov
stc
shlb
mov
and
add
mov
adc
push
and
out
pop
in
arpl
jle
hlt
pop
sahf
sub
ljmp
mov
cmp
pop
sbb
shrl
and
test
cmp
rolb
dec
mov
push
xor
cmpsb
xchg
lds
mov
aam
fdivl
out
xor
sbb
insl
add
mov
test
lea
aas
mov
icebp
negb
outsb
into
call
aas
hlt
xchg
xor
les
cmp
xor
push
stos
ss
push
jb
test
mov
push
adc
sub
js
pop
mov
adc
orb
ja
xchg
test
imul
pop
jl
hlt
ret
mov
in
adcl
mov
test
push
mov
push
adc
push
sub
cmp
inc
stos
dec
add
and
xor
add
pop
in
aaa
adc
sbb
dec
mov
out
mov
notb
inc
xchg
add
nop
stos
iret
pop
out
shll
popf
pushf
mov
xor
popa
mov
and
adc
ljmp
pop
clc
rcll
arpl
pushf
xchg
lea
lret
int3
arpl
cs
inc
cltd
jg
fiaddl
inc
sbb
mov
repnz
clc
stc
test
jle
mov
adc
xchg
jno
in
pushf
imul
gs
pop
jle
cmp
jno
rolb
jae
and
repnz
fucomip
cs
and
jge
jge
mov
mov
aas
push
pop
out
pusha
xchg
imul
dec
stc
nop
lea
pop
ljmp
push
test
pop
push
jo
cmpsl
adc
imul
mov
je
mov
notb
cwtl
out
ret
xchg
jge
pushf
sub
pop
or
iret
popf
and
rcrb
jg
movsb
repnz
and
mov
adc
jmp
rcll
cmpxchg
enter
aaa
cli
add
sbb
jae
mov
sahf
rolb
adc
dec
in
negb
and
in
sbb
push
sbb
and
clc
stos
xor
pop
adc
sar
sarb
inc
and
xchg
test
push
ss
out
jno
xor
aam
and
add
sub
and
xor
sub
push
loopne
test
cmp
pmaddwd
imul
jle
loop
adc
jl
sub
mov
mov
test
mov
jae
jle
stos
push
push
add
mov
sbb
pop
hlt
and
jnp
daa
repz
inc
mov
sahf
jle
cmpsl
and
outsl
add
popa
les
dec
pop
mov
aas
stos
test
movsl
addr16
mov
pop
mov
arpl
outsl
xchg
mov
inc
push
fiaddl
std
pop
push
iret
loopne
icebp
push
mov
fildll
imul
or
cmp
int
adc
movb
jmp
pop
sahf
clc
aad
pushf
push
ds
aas
mul
fst
outsl
push
cmp
sbb
push
mov
cs
mov
repnz
and
adc
dec
add
in
scas
add
je
addr16
lds
pop
push
sbb
addr16
add
movsl
sbb
push
sub
popf
aas
out
ja
mov
jp
adcb
mov
fs
jno
adc
into
pop
sahf
adc
xchg
add
xchg
push
mov
or
xchg
pushw
add
push
adcl
jo
in
dec
dec
dec
aad
mov
vpxor
stos
cmp
test
jbe
ret
add
push
sub
lret
lea
inc
imul
jno
int3
mov
incb
pop
sti
jg
jmp
in
sub
ja
xor
push
cmp
cmpsb
pop
out
shll
pusha
xor
mov
sub
mov
mov
adc
add
pop
or
aam
adc
sub
mov
push
or
jo
mov
jge
mov
mov
xor
scas
push
cmp
pop
dec
fisttpll
push
fistpll
and
loop
std
inc
mov
movsb
xacquire
add
fwait
xchg
push
popa
aad
xor
popf
push
or
mov
scas
out
mov
pop
adc
arpl
ss
gs
mov
ret
mov
pop
or
push
dec
lret
push
cli
sub
dec
and
push
lock
dec
jg
andb
push
mov
data16
jmp
jo
push
inc
sbb
test
mov
aas
jl
imul
inc
pop
xchg
push
sub
cltd
dec
fadd
dec
mov
xorb
cmp
or
ret
or
or
lret
xchg
jle
adc
clc
jecxz
out
add
call
lea
lods
and
adc
push
popf
dec
outsb
fdivrl
ljmp
fmull
test
mov
lods
addl
stos
and
loopne
cmp
xor
je
pop
aad
push
pop
inc
inc
int
in
pop
aaa
in
aad
or
fmull
jae
adc
loopne
shll
inc
fbld
je
mov
rolb
stos
mov
dec
out
mov
inc
mov
imulb
cltd
xor
addr16
in
add
mov
jb
scas
aam
addl
sub
mov
cmp
outsl
push
stos
inc
je
push
leave
repz
mov
and
adc
movsl
pop
aaa
cmp
jae
adc
sbbl
outsb
adc
fmul
adc
xchg
roll
cmp
aad
fbld
out
dec
loopne
inc
gs
lcall
jb
loope
sar
repnz
dec
sub
sahf
pop
xlat
aam
mov
xchg
sub
inc
push
rorl
insl
sbb
push
mov
add
xchg
add
out
mov
push
mov
pusha
das
xor
or
lods
adcl
xor
jne
sbb
shll
mov
jbe
mov
cltd
data16
and
jnp
add
js
dec
jae
add
inc
es
and
inc
dec
jmp
adcb
fdivs
sbb
inc
es
in
mov
hlt
aad
stos
push
and
add
in
jecxz
adc
out
add
loopne
dec
sbb
jmp
inc
iret
addr16
cmpsb
add
mov
cmp
xlat
adc
sar
push
imul
jb
adc
enter
push
ljmp
jno
loope
rol
inc
sbb
in
sarl
cwtl
lods
out
pop
ja
out
clc
test
ljmp
push
in
push
cmp
stc
rcrw
xor
pop
aaa
pop
insb
mov
jo
mov
mov
pause
inc
gs
adc
cmpsl
cltd
adcb
inc
xlat
test
pop
adc
lret
sti
stc
push
call
mov
ret
pop
sbb
cwtl
leave
sbb
xchg
test
and
fdivl
sub
inc
jb
testb
inc
pusha
sbb
jp
or
jmp
andl
dec
add
jge
loopne
jno
flds
rol
in
cmp
rcrb
xchg
mov
push
xchg
jne
clc
iret
mov
or
push
ret
jp
pop
sbb
jae
sti
push
je
dec
flds
inc
outsl
jnp
pusha
cwtl
cmp
insb
adcb
aas
outsl
test
and
push
jmp
lret
sbb
pop
adc
lret
add
dec
and
mov
cmp
cli
imul
mov
jmp
inc
dec
jecxz
pop
fiaddl
popf
cmpsb
test
inc
orl
icebp
arpl
aad
mulb
aad
out
into
jg
in
push
cmc
mov
dec
js
jp
inc
fdivl
push
pop
pushf
lcall
jecxz
dec
fdivs
in
push
mov
pop
testl
sbb
sti
xchg
negb
sbbl
daa
bound
lea
mov
adc
mov
cwtl
out
in
pop
lock
aaa
lea
dec
out
add
arpl
xor
sahf
push
or
bound
popa
insb
out
cmp
aaa
add
jo
xor
enter
push
xor
mov
movsl
test
daa
movl
fdivr
in
pop
xor
cld
in
js
loopne
cmp
dec
fstpl
fst
test
imulb
jnp,pn
lods
lods
test
inc
jg
stc
pop
fmulp
rolb
jbe
cmp
mov
fwait
pusha
or
adc
push
lahf
ljmp
mov
push
jp
inc
xor
jb
cmc
mov
push
cmp
xor
fwait
mov
inc
push
jmp
outsl
sbb
cmp
add
jnp
pop
loopne
cwtl
xor
je
lahf
inc
mov
and
std
cmp
mov
and
mov
jge
jl
sbb
jecxz
push
adc
test
pop
jl
aaa
imul
add
xor
movsl
cmp
xlat
inc
shll
or
mov
sbb
sbb
xor
jge
or
imul
xchg
pop
cmpsl
das
push
rcl
ret
cmpsb
adc
fdivl
add
insb
add
inc
mov
jns
rcrb
ret
mov
jns
rcrb
add
add
daa
hlt
adc
jo
and
pop
cmp
filds
fnsave
adc
xchg
jne
mov
pusha
sbbb
std
int3
xchg
or
shrb
jp
xor
hlt
mov
insl
sbb
jbe
or
inc
mov
xchg
aas
pminsw
adc
mov
aam
lret
addr16
jge
pop
mov
out
fistpl
jne
rclb
xchg
sub
imul
cmpsb
jmp
dec
pop
cli
or
fdivs
int
sbb
mov
push
pop
mov
ss
outsb
leave
cmp
mov
dec
dec
jp
sub
lods
in
int3
pop
loopne
add
lock
sbb
push
sarl
rolb
sub
into
scas
lods
sbb
sub
mov
push
or
xor
add
inc
fcmovnb
inc
xchg
mov
in
stc
push
xlat
sbb
xchg
or
xchg
aaa
add
sti
int3
hlt
mov
enter
loopne
cltd
cmc
cmp
repnz
jns
adc
add
es
sub
pop
adcl
and
cmp
into
orl
and
test
imul
mov
out
test
test
adc
xchg
jo
push
testb
add
dec
xchg
ja
cmpsb
orb
dec
jae
push
out
pop
dec
in
js
cltd
in
push
mov
inc
test
pop
in
adc
adc
inc
fcmovne
xor
mov
push
and
into
jge
or
out
aad
hlt
mov
dec
mov
xchg
xchg
dec
xor
and
push
insb
les
bound
sbb
cmp
cmp
addr16
mov
lock
jge
std
data16
xchg
and
xor
pop
addr16
rclb
test
push
push
daa
je
dec
call
fdivrs
xchg
jae
call
jge
mov
pop
mov
mov
jp
pop
mov
push
inc
xor
scas
inc
add
cmpsl
sarb
sar
data16
lods
add
cmpsb
xor
stos
inc
add
sub
add
clc
push
pop
mov
lahf
and
inc
cmp
push
scas
fidivs
test
addl
or
scas
cmp
stos
ljmp
push
ret
cmp
call
xor
inc
or
enter
loopne
push
xor
dec
in
inc
pop
fs
daa
mov
enter
xchg
aad
mov
in
aas
out
rcl
sbb
xor
pop
mov
call
jecxz
pop
fdivs
dec
pushf
jb
mov
int
xchg
xor
mov
aam
fadds
inc
jecxz
xor
aaa
push
repnz
fdivr
stc
vhaddpd
bound
addb
cmp
pushf
shl
mov
mov
lds
imull
cmp
movsl
hlt
pop
and
pop
jae
sarb
xchg
mov
stos
loope
jmp
insl
popf
insb
mov
mov
xor
pusha
xorb
dec
jl
or
mov
sbb
arpl
stos
mov
loopne
inc
fistl
bound
into
das
push
pop
popf
push
lcall
ror
adc
int3
imul
fdivl
pop
fchs
sbb
mov
mov
dec
popl
add
push
je
pop
xchg
mov
add
sbb
cmpsl
icebp
xchg
xchg
add
mov
xchg
loop
into
pop
shrb
push
jp
push
rep
xor
sub
ret
mov
insl
jp
outsl
pop
jl
push
push
xor
xchg
jns
cmp
xchg
sarb
call
mov
jmp
movsb
sub
cwtl
sbb
out
inc
in
jnp
mov
inc
push
lods
fadd
xchg
out
pushf
push
sahf
pop
movsb
cmp
loopne
mov
popa
aam
xchg
ret
clc
mov
jle
dec
fisttps
pop
push
aas
mov
mov
rclb
pop
add
sbb
pop
andb
ficomps
dec
arpl
rcll
lods
jecxz
adc
sbb
inc
or
xlat
pop
push
sub
inc
mov
dec
xchg
rolb
ds
lods
ds
dec
pop
pop
repz
pop
movsb
scas
add
adc
add
mov
mov
inc
data16
cltd
ss
addr16
ja
fs
scas
mov
mov
adcl
lock
iret
data16
cmp
xor
pop
pop
in
pop
or
xor
jg
sahf
add
lahf
lods
jp
fisubs
lahf
repnz
cwtl
mov
das
out
pusha
jns
js
inc
add
jl
outsl
and
xor
pop
fbstp
jo
roll
cmpsb
push
jp
cmp
in
jle
and
pushf
nop
jo
mov
subb
scas
test
jg
pop
out
stos
arpl
sbb
int3
jbe
jmp
shrl
xchg
sub
insl
in
icebp
xchg
lfs
in
cmp
or
jl
nop
arpl
enter
insl
jg
sahf
push
push
or
sbbl
sub
stos
rcrb
xchg
inc
xor
cmp
add
dec
gs
mov
pushf
loope
enter
and
xchg
jmp
push
jmp
or
jmp
lcall
gs
mov
pop
and
add
dec
loopne
dec
out
cmpsl
lret
out
std
jmp
fwait
cmpsl
jb
test
pop
mov
pushf
xor
cmovge
lret
data16
test
xor
outsb
leave
mov
push
lock
dec
inc
push
cwtl
int
testb
jle
jmp
xchg
push
jp
adc
leave
pusha
mov
mov
orb
pop
test
or
loopne
daa
outsl
xor
pop
jg
cmp
xor
or
push
mov
shrb
add
push
cmp
sub
ja
xchg
test
cmpsb
stos
enter
pushl
or
shll
sub
sub
mov
pop
fldt
je
mov
imul
pop
jno
bound
and
sub
lahf
divl
pop
out
cltd
cli
mov
mov
sbb
xchg
ja
ret
or
cwtl
sbb
sbb
push
andb
push
sbb
push
outsb
or
cltd
cmp
shrl
pop
scas
and
pusha
icebp
mov
cmp
neg
fcomip
pop
pop
cmp
sahf
clc
sbb
imul
in
daa
mov
cmp
push
mov
push
xor
pop
call
fldenv
adc
es
xor
out
push
cltd
fld
rorb
sti
lods
inc
mov
andb
imul
mov
sub
adcl
cld
push
dec
lea
mov
or
jg
nop
insb
sub
mov
xchg
pop
scas
fbld
add
jle
clc
pop
xor
dec
les
addr16
mov
push
mov
mov
sub
lea
mov
inc
mov
cmpsb
push
outsl
mov
movsl
stos
inc
xlat
in
pushf
dec
fstpt
subl
cltd
and
dec
pop
cmp
sti
cld
pop
lahf
outsl
or
data16
mov
adc
push
test
sahf
push
in
jne
xchg
movsb
cmp
addr16
sbb
mov
ffree
sbb
or
adc
aam
xchg
shl
cli
sub
and
dec
jmp
les
or
mov
adc
ja
sbb
mov
mov
fidivs
push
aam
jb
cld
sahf
arpl
pop
lods
and
pop
mov
xchg
mov
in
push
mov
add
jnp
or
popa
clc
jge
mov
mov
mov
popf
pop
fs
fxch
sub
and
js
or
fnstcw
mov
sub
in
loop
sahf
sbb
cmp
dec
rcl
insl
rorb
sub
push
jo
dec
cmpsb
decb
mov
icebp
outsb
mov
or
mov
push
mov
jmp
lea
mov
call
push
shld
cmp
xchg
cmp
cmp
cmpsl
fsts
pop
shrl
mov
lahf
and
leave
add
push
inc
push
inc
out
mov
rorl
repz
das
pushf
cmp
into
push
test
or
jecxz
cmc
imul
xchg
sub
pop
mov
xlat
pop
dec
add
jge
sbb
lret
not
or
ljmp
cmc
aam
test
mov
lahf
movsb
adc
xor
in
push
nop
push
iret
outsl
sbb
aad
out
test
fidivl
jo
popa
inc
or
into
or
push
mov
sahf
and
js
shrl
dec
dec
in
pop
sbb
jns
inc
fisubl
enter
sbb
les
jle
fcomps
stc
xor
rdpmc
lret
xchg
sub
cmc
fidivl
xor
inc
cmpsb
jne
cltd
data16
sbb
enter
ss
dec
in
aas
xchg
sub
cli
lods
inc
in
pop
mov
jns
xor
mov
popf
test
psubb
shr
or
jns
and
ficoml
sahf
mov
adc
inc
fsub
sbb
xchg
lea
mov
stc
mov
cltd
xor
pushf
sub
or
cmc
fidivs
mov
loopne
clc
test
test
cmp
psubsw
out
dec
push
call
lret
jecxz
je
push
iret
dec
dec
lcall
out
dec
fcomps
xchg
dec
inc
scas
inc
aaa
jg
enter
jbe
hlt
mov
lds
stos
icebp
in
xchg
pop
sbb
insb
addr16
pop
lahf
sarb
pop
fistl
fildl
mov
sub
aaa
lods
pop
cmp
adc
in
shl
push
clc
push
push
adc
cmp
cmp
js
xor
aaa
sub
inc
das
pop
incb
dec
popf
pop
xor
fwait
inc
pop
pop
mov
and
xchg
xor
stos
incb
out
push
data16
xchg
aad
mov
lcall
aas
pop
repz
mov
call
and
cli
xchg
out
mov
notb
popf
xchg
sub
mov
dec
and
notb
out
cmpsl
sbb
aas
test
jns
cmpsl
push
lds
sahf
xor
xchg
push
popf
mov
mov
xchg
or
jge
sbb
and
dec
loope
stc
sub
aaa
xor
and
jl
imul
pop
and
ds
cld
xchg
icebp
addl
pop
pushf
sub
out
popf
xchg
testl
shld
insb
pop
data16
cwtl
js
sbbb
dec
loope
inc
push
call
cmp
sahf
imul
jmp
notl
out
lock
jle
lods
es
xchg
pop
jle
mov
xor
call
aad
lahf
push
mov
mov
inc
pop
in
sbb
aad
pusha
imul
out
test
popf
mov
lret
cld
mov
mov
pop
and
pop
and
test
adc
xchg
repnz
scas
clc
push
pop
mov
pop
cmp
push
cmp
imul
push
call
or
xor
xchg
aad
inc
fwait
mov
int
out
inc
aaa
pop
jp
dec
pop
int
cwtl
out
and
cld
aam
ret
and
lret
mov
clc
ficomps
clc
adc
pop
cmc
stos
popf
mov
sbb
pop
imul
lahf
in
sbb
les
pop
cmc
in
dec
adc
inc
fs
inc
fcmovbe
popa
push
mov
mull
push
lret
std
mov
addr16
cli
movsl
sti
daa
lret
jnp
lcall
adc
repnz
add
mov
mov
xor
jno
mov
ss
test
add
add
xor
clc
or
sub
sub
and
inc
push
negb
ljmp
cmp
xor
mov
pop
cmc
pop
fisttpll
push
les
inc
adc
push
ljmp
xor
ret
mov
and
jns
andl
repnz
xor
sbbb
xchg
jmp
jg
push
sub
adc
dec
pop
mov
enter
xorb
int
sub
jecxz
inc
sbb
pop
sbb
lea
pusha
lock
addr16
popa
lret
cmp
pop
pop
dec
and
cli
stos
sub
adc
sbb
adc
xor
push
or
fwait
pop
movsb
sub
jno
mov
or
test
add
push
or
addr16
jecxz
enter
cmp
test
xchg
pop
popa
loopw
negl
add
or
mov
sahf
in
scas
mov
fsubl
cmc
sub
insb
sub
xlat
outsb
cmp
cmc
loopne
mov
loop
popa
fbld
das
xor
in
lea
cmp
xchg
mov
or
out
mov
movsb
mov
sti
mov
test
sub
push
stc
repnz
pop
mov
ficoms
out
outsl
push
test
lret
clc
test
pop
hlt
rcr
jne
std
cmp
sub
cld
xchg
imul
roll
adc
mov
pop
scas
inc
sbb
lret
cli
sub
rcrl
mov
jp
pop
roll
stc
es
jg
xchg
inc
shrb
pop
shrb
lcall
adc
cmpsb
add
or
mov
mov
clc
jns
or
cs
add
push
and
icebp
or
inc
jno
sbb
or
mov
jnp
fdivl
mov
imul
push
pop
pop
decb
imul
stos
stos
mov
dec
bound
lcall
and
push
push
pmaxsw
or
xchg
jnp
jecxz
insb
mov
call
dec
cmp
iret
jmp
or
pop
adc
xor
out
mov
in
testb
stc
lods
cmp
xor
or
and
into
insl
jge
push
cmpl
je
push
imul
lahf
ret
call
cmc
xor
cmp
xor
cmpb
fidivrl
mov
xchg
sahf
decl
out
stc
bound
push
sbb
cs
pop
mov
test
push
cmp
or
cmp
imul
push
mov
mov
ds
xchg
subl
dec
mov
in
adc
xchg
jmp
jecxz
and
add
mov
je
inc
clc
push
mov
pop
push
mov
sbb
jbe
divl
call
fstpl
mov
or
inc
mov
sub
decb
les
repz
dec
movsb
clc
pop
lahf
fnstcw
fwait
xor
mov
mov
adc
fidivl
jp
stc
and
jp
push
fdivs
mov
push
ret
les
jecxz
lahf
or
ja
jne
inc
mov
mov
fbld
adc
mov
cmp
push
popf
adc
imul
mov
mov
dec
mov
jle
outsb
pop
imul
mov
or
or
and
xchg
adc
lcall
inc
shrb
ret
ljmp
stc
lcall
imul
pop
pop
lea
mov
loop
ljmp
mov
ret
pop
pop
js
jl
sbb
dec
test
add
mov
into
or
fidivrl
loopne
mov
fistl
mov
or
push
pop
jno
push
xor
fmull
dec
std
jb
sbb
rclb
dec
sbb
add
jnp
pop
orb
or
cld
pop
jmp
adc
std
into
mov
xor
pushf
cmc
xchg
mov
mov
stc
enter
sbb
stc
cmp
sub
jnp
stc
int3
cmpb
cld
xchg
push
lods
ljmp
cmp
int
push
js
sub
fldt
mov
push
adc
out
xor
ss
lock
cmc
gs
out
lods
and
or
push
je
xchg
leave
push
adc
daa
sahf
outsb
pop
mov
mov
fdivl
xlat
mov
and
rcrl
add
dec
mov
jb
in
dec
shl
jge
insb
shll
jnp
lcall
inc
mov
mov
xchg
in
ss
rorb
pushf
int
cmp
cs
pop
shll
xor
lret
into
test
xchg
mov
mov
cmpsl
out
lds
mov
pop
jl
fs
push
pop
clc
lcall
xor
pop
cmpsl
push
mov
push
loop
mov
push
test
cmp
dec
scas
inc
jnp
ljmp
pop
fcmovne
xchg
pop
jmp
add
movsb
pop
jno
and
fdivrl
adc
jg
push
adc
vrcpss
jb
sub
in
sub
xorb
test
xchg
sub
in
stc
jns
rorl
sub
jnp
int3
jge
pushf
inc
mov
add
cmp
pop
mov
mov
xor
pop
sub
loope
adc
xchg
sub
stos
cmc
insl
bound
ljmp
jno
movsl
mul
jge
inc
push
cmc
mov
xor
and
or
xor
into
ss
sbb
rcrl
lret
dec
jne
mov
dec
xor
xchg
loopne
repz
cmp
jae
fdivrs
mov
jns
xchg
lods
jo
lods
jbe
inc
jmp
icebp
fwait
adc
cmp
das
sahf
scas
ret
jb
jb
push
das
aaa
pop
or
sbb
rclb
sub
pop
cmc
adc
repz
outsl
das
adc
out
test
xor
clc
lea
imul
std
insb
aas
mov
xchg
leave
cmpsb
or
mov
fcomip
or
adc
dec
insl
add
push
test
inc
testl
xor
sub
mov
or
push
mov
sub
pop
or
ljmp
lcall
sbbl
fstpl
inc
in
je
xor
imul
sbb
add
ljmp
jb
inc
stos
mov
pop
and
xchg
shrl
inc
subb
jb
lcall
cwtl
mov
aam
movl
mov
repz
andb
out
sar
xchg
push
push
push
mov
imul
leave
cld
mov
cs
pop
in
cmpsb
inc
cmp
sarl
fstps
or
xchg
mov
inc
cmpsl
nop
or
shll
mov
or
sub
mov
or
sbb
es
enter
pop
push
cmp
call
insb
inc
andb
repnz
lds
icebp
sub
and
pop
repz
notb
mov
dec
scas
mov
lds
ja
aas
cmp
cmpsl
xor
cwtl
inc
hlt
mov
popa
lret
popl
and
push
sbb
dec
pop
xor
push
lcall
scas
cmp
cmc
adc
loop
push
mov
mov
fimull
fs
cld
test
into
cmp
mov
add
jnp
and
xchg
adc
jp
out
mov
mov
adc
clc
fdivrs
mov
mov
mov
jp
adc
mov
mov
cmp
inc
pushf
jae
push
dec
fcoml
cli
pushf
outsl
cld
adc
loopne
push
and
sub
dec
xor
int
push
icebp
rcrl
fs
xor
test
sbb
not
cmpb
mov
mov
pop
mov
mov
inc
pop
leave
mov
out
mov
std
mov
ljmp
jbe
push
jae
mov
aad
sbb
xor
movzbl
dec
mov
sub
mov
lods
dec
sbb
cmp
add
subl
icebp
rclb
loopne
sub
mov
out
gs
imul
divb
jge
cmpl
jb
inc
or
sarl
leave
fdivrs
cmp
fwait
push
mov
cmp
imul
dec
movsb
cmp
hlt
cmp
jmp
mov
rcrb
icebp
repz
cmp
jmp
mov
sbb
sub
mov
ret
mov
test
fidivrs
mov
pop
out
dec
mov
dec
daa
mov
ss
fdivr
repz
js
std
es
fs
jmp
or
push
jbe
rol
in
dec
push
in
mov
xor
cmc
insb
jle
insb
ljmp
in
scas
xor
add
lret
jecxz
scas
xlat
jne
mov
sub
sub
pop
xor
pop
ljmp
and
inc
mov
and
mov
xchg
mov
movsl
nop
fisubrs
stc
fcmovne
cmp
sar
sbb
shufps
xor
xchg
addr16
sbb
cmp
rcl
mov
ret
outsb
mov
ror
nop
inc
mov
ljmp
jno
cld
lock
faddp
dec
repnz
jns
mov
pop
inc
out
dec
out
xchg
sbb
jno
scas
clc
dec
out
repnz
inc
pop
cmp
shrl
adc
popl
ja
cmp
aas
sbb
adcb
jno
lods
stos
xchg
add
bound
loope
sub
dec
push
inc
cmp
sbb
movsl
pop
shrb
jnp
mov
or
test
sbb
sbb
inc
sub
data16
mov
fsubrp
ror
dec
insl
jg
mov
inc
fstpt
lret
cmpsl
test
mov
cs
stc
xchg
add
call
fmull
aad
clc
or
dec
fildll
sub
inc
pop
mov
cmp
pop
int3
mov
push
xchg
inc
xor
push
jo
push
out
xchg
sbb
repnz
or
mov
cmp
xor
loop
mov
push
mov
mov
mov
xor
data16
adc
lret
in
fbld
fsubrl
cltd
imulb
jge
jo
xor
push
jge
pushf
outsb
test
adc
lods
fcomps
insl
jbe
push
jne
and
sti
popa
loop
fisttpl
xlat
cmp
mov
jne
or
fiaddl
fiadds
lea
sub
jo
mov
inc
or
cmpsl
pop
out
test
dec
add
js
push
stos
fcompl
add
and
dec
push
in
xchg
outsb
pop
mov
test
jge
lahf
popa
push
insl
pop
rcrl
xchg
mov
xor
testb
and
aam
mov
or
push
mov
add
out
pop
aad
in
mov
cmpsl
mov
fdivs
and
fisubl
xchg
imul
add
scas
xor
add
imul
dec
scas
cmpsl
loopne,pt
out
mov
stc
mov
jecxz
inc
lods
jae
sub
daa
insb
cltd
jo
dec
xchg
repz
mov
adc
ss
jge
jo
stc
int3
clc
cmp
mov
xchg
fidivl
nop
or
aas
push
fmul
hlt
push
cmpsb
into
adcb
fisubl
jb
loop
decl
dec
sub
mov
mov
pop
sub
cmpsl
push
je
dec
jg
lcall
or
xchg
scas
test
mov
aad
out
jae
add
div
cltd
out
sub
pop
sbb
mov
and
setnp
xchg
movsl
add
pop
or
cmp
jmp
repz
sub
stos
arpl
loopne
arpl
idivl
nop
aaa
push
cwtl
sub
es
icebp
addb
add
sbb
and
jle
xor
mov
in
jb
lahf
xchg
andb
cli
sub
or
nop
lahf
add
test
mov
mov
mov
push
cmp
andb
addr16
ret
adc
aad
or
nop
mov
mov
push
std
jo
lret
sub
push
enter
out
test
mov
mov
jge
lods
push
cmpleps
adc
shrb
cli
mov
mov
popf
mov
jno
inc
pop
std
movb
push
push
rcrl
aas
fbstp
or
out
andb
dec
jp
clc
insb
cmp
lahf
nop
mov
mov
push
insb
sti
cmp
dec
or
sbb
xor
lods
inc
pop
and
lods
jbe
int3
and
sarb
mov
stos
add
daa
loop
pop
loope
divl
sbb
push
pop
imul
test
mov
js
sub
cwtl
int
leave
sbb
fs
sbb
cs
lock
out
fisubrl
add
xor
xchg
nop
mov
out
mov
cltd
adc
mov
fists
outsl
mov
roll
nop
jnp
add
push
push
mov
mov
popa
add
pop
fisttps
or
imul
jne
hlt
and
nop
and
iret
std
andb
pop
sarl
les
adc
adc
jge
xchg
jmp
pshufw
jmp
dec
frstor
add
xchg
mov
scas
push
lds
in
sbb
jecxz
sbb
jle
xchg
and
dec
add
and
mov
push
repz
pop
enter
cltd
pop
ror
pop
lds
pop
and
cmp
daa
shlb
xor
les
inc
inc
xchg
jg
test
enter
stos
fcmovne
pop
push
dec
jl
sti
and
lods
inc
xchg
testl
xchg
cmc
dec
or
jno
push
movsb
enter
in
test
jmp
pop
in
aad
and
mov
cmpsb
insl
mov
adc
pop
imul
sbb
aad
js
in
mov
jmp
cld
lds
jg
fwait
cmp
xchg
or
inc
jb
loop
insb
inc
pop
shrl
xor
jns
mov
mov
leave
jb
stos
add
jge
pop
jae
mov
xor
mov
in
mull
jno
fisttpl
cmp
sahf
xchg
xchg
mov
mov
shrb
or
jno
mov
mov
mov
pop
icebp
adc
jns
mov
adc
mov
cmc
push
sub
push
movsb
sub
mov
js
inc
int
xchg
jns
cmp
adc
pop
rorb
mov
int3
push
stc
and
adc
sbb
sbb
xor
or
cmp
pop
sahf
cmp
sbb
dec
xchg
stos
ret
pop
stc
xlat
repnz
xlat
mov
jmp
adc
repnz
jbe
das
adc
popa
js
inc
mov
dec
int
mov
ret
mov
cli
jno
or
push
das
xor
lcall
sbb
cmp
outsl
insb
inc
push
sahf
push
dec
dec
or
xchg
in
cltd
mov
xchg
push
pop
mov
ss
mov
loopne
mov
ljmp
es
fdivrs
fwait
sarl
iret
enter
or
popa
jp
jno
xchg
lret
jno
shll
enter
adc
les
adcl
nop
xchg
fiaddl
and
lods
xchg
jae
xor
lea
add
jl
jbe
mov
ljmp
int3
call
hlt
test
add
mov
imul
push
cli
ja
sti
or
rcrl
mov
out
mov
jle
pop
mov
inc
xchg
in
mov
les
fidivrl
ret
test
shlb
fcoms
and
push
cld
pop
xchg
cs
sti
inc
psrlq
stos
inc
mov
push
daa
nop
xor
arpl
lds
inc
aaa
jecxz
jmp
pusha
xchg
or
sbb
push
inc
cmpsl
jl
xchg
and
movsb
and
fdivr
dec
adc
jbe
xchg
pushf
cmc
subb
add
out
adc
jb
push
repnz
scas
and
adc
xlat
mov
sub
add
jno
mov
stc
cmpsb
pop
call
jge
outsl
stc
je
mov
jmp
jnp
sahf
and
dec
pop
cmc
inc
and
pushf
es
adc
arpl
data16
mov
mov
or
cli
imul
cmpsb
xor
ret
fisubrs
cmp
push
and
inc
lds
jge
popa
jns
pop
das
icebp
mov
inc
push
jbe
sbb
or
nop
daa
push
jbe
divl
jb
xor
and
cmpsl
clc
mov
les
dec
pop
xor
in
sub
cmc
lret
pop
fsubr
lcall
xchg
sbb
inc
mov
mov
decl
cld
jb
cmp
pop
cli
mov
ljmp
ret
pop
push
xor
repnz
pushf
push
loope
orl
dec
or
jl
cmp
xlat
popa
cld
push
adc
jbe
outsb
mov
jmp
rorb
hlt
roll
mov
xor
lods
out
or
push
xchg
fnsave
add
sbb
mov
inc
rcrb
stos
or
jno
push
gs
pop
push
sbb
mov
xor
mov
jmp
ret
imul
in
xor
dec
mov
push
lcall
test
xchg
test
xchg
mov
adc
ja
stos
xchg
cmp
outsb
push
xor
aaa
lahf
ds
std
adc
das
mov
ds
mov
pop
mov
cmc
js
les
mov
decb
fs
std
cmp
adc
mov
push
lock
outsb
inc
lret
jae
mov
push
pxor
dec
dec
stos
xor
adc
or
push
jb
add
jbe
push
mov
gs
xchg
pop
mov
out
jo
mov
mov
in
xchg
shlb
icebp
sbb
pop
repz
push
mov
loopne
ljmp
pop
inc
setno
lahf
es
xchg
jle
mov
lods
lds
mov
or
sbb
add
test
xchg
aaa
outsl
in
stc
push
in
popa
adc
add
gs
outsb
pop
out
es
mov
push
arpl
cmp
push
cmp
inc
inc
ret
mov
pop
adc
xor
test
cwtl
call
subl
pop
loopne
xorl
mov
sub
add
fidivs
movsb
lods
shl
inc
mov
pop
and
and
pushf
dec
mov
sbb
testl
hlt
jge
mov
sbb
inc
sbb
lret
les
orl
xchg
ret
dec
adc
xchg
cwtl
inc
dec
push
hlt
mov
test
in
shrl
std
daa
test
mov
push
sub
scas
jg
add
adc
lds
stc
dec
add
cwtl
leave
push
leave
rorl
icebp
hlt
icebp
push
call
and
jbe
repnz
loop
inc
arpl
pop
repnz
iret
fisttpl
jmp
fidivrs
jns
int
sbb
adc
and
leave
subb
ret
push
adc
lea
hlt
push
push
or
adc
push
add
scas
inc
mov
pop
mov
out
cs
mov
aaa
movsl
inc
jb
mov
scas
lcall
add
xchg
adc
fucom
push
jb
aam
cmpsb
dec
ror
arpl
push
push
jg
pop
jo
fistl
dec
cmp
fdivrs
testl
sbb
pushf
dec
jbe
xchg
dec
adc
scas
aas
dec
insl
push
dec
cmp
add
ljmp
inc
pop
dec
inc
lret
jl
sbb
adc
add
mov
cmp
cmc
lahf
pop
scas
dec
mov
scas
sbb
xchg
sub
lods
dec
pushf
fsubs
enter
inc
dec
out
sbb
lret
into
pop
loop
push
call
push
lods
outsl
into
fcompl
mov
dec
and
sbb
dec
test
xchg
push
fsubp
inc
test
loopne
and
add
pop
push
or
pop
int
aam
push
outsb
sbb
push
mov
cmpsb
mov
ljmp
add
int3
mov
push
xchg
mov
int
mov
int
push
jp
pop
cmp
xchg
fisubrs
subl
test
inc
pop
fistpll
aas
dec
mov
mov
lods
or
cmpsb
rcrb
mov
mov
add
mov
sub
andb
cmp
fwait
xchg
out
out
cmp
scas
insl
loopne
fidivrl
or
xchg
push
xor
out
fnstsw
dec
ljmp
in
orb
jns
push
scas
jns
les
gs
xchg
adc
loope
lods
js
shll
aas
mov
jecxz
ljmp
mov
jns
mov
pop
testb
push
mov
xchg
in
inc
aaa
add
xor
fwait
lods
ss
and
push
test
jo
adc
adc
sub
lods
shl
jnp
shr
adc
add
iret
es
loopne
fcmovbe
lods
cmp
push
pop
xchg
filds
or
mov
sub
push
pop
out
mov
cmp
je
rorl
movsl
lds
stos
mov
fidivl
jnp
outsl
pop
fsubs
in
inc
mov
add
or
pop
dec
or
sahf
in
dec
popf
out
orb
inc
mov
pop
mov
lret
push
sub
cmp
jg
mov
cmp
cwtl
call
cltd
jmp
and
ds
dec
inc
xchg
sbb
dec
lret
loopne
jno
out
test
dec
mov
fs
loopne
xlat
outsb
mov
push
insl
adc
inc
cwtl
fsubrl
cmp
mov
out
neg
mov
imul
add
xchg
pop
jmp
or
sbb
call
outsl
add
xor
adcl
lods
push
pop
xor
push
adc
mov
inc
out
sub
cld
loop
and
fwait
xor
movsb
sbb
sub
xchg
sbb
jmp
cmp
fs
mov
xchg
ss
out
aam
cmp
and
jb
call
sub
mov
and
sti
adc
sub
mov
jno
dec
pop
fstps
imul
or
cs
out
and
sub
rep
sub
pushf
push
inc
leave
and
and
dec
cld
mov
push
lret
sbb
popf
lret
add
or
mov
test
jbe
mov
pop
xchg
jmp
cltd
push
sub
or
data16
cmp
or
lods
lret
jg
fwait
jp
pushl
cmp
jg
es
xor
scas
out
fstpl
repnz
mov
mov
aas
mov
sbb
popa
mov
mov
test
sarl
pusha
daa
vcvtdq2ps
pop
add
imul
repz
jp
mov
xchg
add
pop
or
iret
mov
add
and
xor
out
mov
jecxz
sbb
cld
xor
sbb
out
cld
iret
push
mov
ror
lret
push
add
add
popf
cmpsl
movsb
rorb
xor
xchg
and
xorl
clc
repnz
dec
repz
and
cmp
xor
sub
shrb
lret
shrl
adc
cmp
repnz
sub
rcrl
rolb
in
jecxz
int
fwait
sub
mov
push
movsl
rcrl
lahf
add
push
out
int3
xor
mov
mov
inc
cld
add
pop
dec
rcr
outsl
daa
lea
mov
jbe
imul
mov
cmp
and
mov
mov
dec
add
xchg
sbb
push
jmp
out
bound
cmp
jae
out
into
mov
setbe
lods
mov
cmpsb
jns
push
inc
or
jae
push
sub
xchg
add
lods
mov
ficomps
adcl
jnp
sub
mov
xchg
leave
imul
mov
ror
mov
subl
push
pop
loope
ss
cltd
cltd
icebp
dec
inc
in
xchg
out
sub
stc
lock
inc
adc
enter
es
aad
jo
outsl
bound
in
cmp
test
imul
ss
daa
jmp
push
out
jae
xchg
daa
pop
in
out
lock
shrd
insb
push
xor
inc
sbbl
sbb
sti
in
loope
js
cmp
xchg
jge
ds
sbbl
pop
push
xor
test
repz
ds
cmp
jg
pop
dec
jb
lcall
adc
lods
inc
fmuls
dec
lock
repnz
adcl
aaa
add
xor
inc
inc
fbstp
lret
mov
mov
in
cmp
into
vmulsd
add
lods
mov
and
mov
or
fwait
lods
or
jo
fwait
sarb
lds
cs
mov
and
lods
inc
xor
outsl
push
jecxz
sub
push
ds
mov
xchg
pop
je
inc
into
xchg
push
bound
iret
lcall
and
adc
test
add
in
jl
test
iret
sahf
leave
fld
or
inc
jns
test
stc
lcall
shrl
mov
in
js
icebp
xchg
mov
xchg
cmpb
dec
lcall
orl
mov
xchg
mov
add
mov
mov
cmp
mov
lds
mov
lock
lret
xor
loope,pt
adc
lahf
push
cmpsb
mov
and
hlt
jg
rorl
add
insb
mov
mov
inc
cmpsb
pop
lods
push
aad
sbb
push
dec
loopne
jg
jns
push
addr16
mov
xchg
inc
aas
dec
movb
imul
mov
mov
sub
push
jns
pop
pop
dec
or
xchg
pop
xor
lret
sub
adcb
inc
mov
sbbb
xchg
fsubrl
loop
enter
cltd
arpl
stos
fildll
fldenv
mov
mov
mov
jg
in
jl
push
jge
jp
mov
jb
ret
pop
sbb
cld
inc
cmp
push
popf
xor
mov
sbb
xchg
cmp
jp
call
shlb
inc
aas
es
lds
adc
call
into
faddl
pop
cmp
lods
sbbl
push
cmp
mov
clc
arpl
rcll
pop
inc
cld
mov
cmp
mov
stos
mov
or
testl
pop
test
outsl
jl
pop
jecxz
cmp
pop
add
ds
jns
inc
stos
dec
xlat
mov
in
push
xchg
pop
dec
cmp
int
cmp
jecxz
inc
fcom
adc
pop
int
cmp
adc
cmp
arpl
ss
cmp
in
pop
push
stos
fcmovne
fnstcw
adc
mov
js
push
mov
mov
fmull
lret
push
xor
push
movsb
cmp
xor
jo
cmp
call
sbb
adc
jp
imul
imul
push
loope
es
sti
cld
sub
or
jle
in
sub
orl
addr16
pop
mov
mov
sub
add
cmp
sbb
mov
mov
arpl
cwtl
or
mov
dec
mov
cmpsl
sbb
arpl
mov
mov
fmul
imul
insl
xor
mov
inc
mov
sub
mov
and
repz
shll
cmp
mov
shlb
jmp
pop
dec
clc
dec
or
dec
int3
out
jae
out
aaa
dec
add
lahf
inc
repnz
outsl
pop
and
cmpsb
hlt
mov
lds
inc
popf
out
xchg
inc
je
jb
loopne
adc
xor
fs
aam
ret
inc
mov
fsubr
mov
jl
fnstsw
sbb
pop
dec
push
mov
push
out
lcall
xor
mov
popf
push
mov
icebp
jae
enter
rclb
mov
pop
mov
and
sub
imul
fstpl
inc
jno
out
xchg
addb
jg
mov
mov
repz
adc
push
sbb
pop
decb
adc
and
pusha
fucomi
adcb
andb
outsl
xchg
pop
push
leave
ficompl
cmc
aas
lret
sbb
push
pop
mov
push
xchg
js
pop
and
mov
adc
andl
orl
jnp
xorl
add
pop
jnp
scas
push
imul
push
pop
push
sub
add
jmp
outsl
xor
imul
popf
xor
inc
mov
xor
outsl
mov
and
push
sbb
rcrl
scas
in
mov
cli
adc
movsl
sub
inc
mov
dec
push
or
push
mov
jne
mov
sub
test
ljmp
push
dec
inc
dec
fiaddl
loope
xor
aam
scas
add
xchg
idivb
push
pop
push
iret
add
xor
adc
gs
out
add
nop
in
je
mov
loop
lea
sub
clc
and
cmp
push
in
mov
cmc
mov
es
in
sub
add
push
and
cwtl
jmp
loop
push
cltd
inc
ds
dec
mov
mov
aam
outsl
jg
aam
xor
std
loop
jmp
fsub
negl
or
pop
mov
push
push
jl
fistl
jl
adc
fbld
xor
xor
mov
lds
fs
pop
and
loop
inc
mov
sbb
mov
push
xchg
hlt
lahf
scas
das
cmp
iret
and
push
inc
mov
mov
cpuid
shr
enter
or
jmp
jae
push
adc
jbe
xchg
ja
out
in
dec
ljmp
inc
data16
or
pop
neg
pusha
sti
xchg
xchg
push
xchg
jnp
iret
insb
mov
shrl
xchg
add
push
test
popf
add
jo
movsl
sub
and
mov
pop
imul
push
pushf
add
dec
data16
push
or
outsl
cmp
jg
lret
and
mov
cmp
push
xor
or
aaa
push
flds
mov
jo
into
push
lock
std
insb
push
cmp
orl
addr16
jo
pop
xchg
shl
movsl
stos
sbb
fadd
push
pusha
rolb
ja
mov
inc
xor
std
xchg
loope
push
mov
sub
ja
daa
lret
push
mov
mov
sbb
negb
leave
add
ja
push
and
or
enter
jns
dec
stos
lods
xor
daa
jnp
sbbl
loop
ret
push
imul
jle
sbb
mov
stos
and
or
outsl
aam
push
repz
dec
and
fimuls
xchg
mov
stos
inc
scas
mov
outsb
push
rcrl
jb
repnz
xchg
lds
or
in
cmp
jo
sub
jns
jle
push
imul
stos
xchg
cmpsb
call
dec
mov
cmc
rcrb
cmpl
push
mov
jle
jae
pop
dec
divl
mov
cwtl
lods
adcb
mov
jmp
pop
mov
adc
mov
sub
inc
push
xor
jmp
inc
or
dec
stos
je
dec
xor
sbbb
xchg
sub
xchg
xlat
sbb
out
pop
outsl
dec
mov
ljmp
mov
scas
popf
xor
xor
bound
fmul
fidivs
cmp
int
dec
rcrl
add
leave
shl
add
shll
pop
aas
inc
out
dec
lods
loope
inc
arpl
or
xor
sbb
test
jmp
sub
sarb
inc
fcoml
cld
dec
xor
out
mov
in
pusha
test
jnp
jae
xchg
aas
lds
insb
inc
into
lcall
mov
dec
pop
lock
insb
pop
xor
push
fbld
sbb
mov
sub
int
lock
cmpsb
inc
inc
pop
jp
sub
dec
sbb
jp
lret
sbb
and
xchg
pop
std
inc
pusha
xor
jmp
lret
mov
add
adc
add
test
mov
push
inc
dec
pop
sbbb
icebp
mov
xor
cmpsb
xlat
call
sti
xchg
call
adc
test
dec
std
shl
mov
inc
jnp
adc
dec
sahf
inc
insb
out
test
mov
mov
add
lcall
mov
sbb
mov
insb
mov
sbb
add
jnp,pt
fldt
cmp
pop
cld
sub
test
xlat
inc
or
mov
cmp
sarb
and
popf
icebp
and
push
add
hlt
lahf
add
into
mov
pop
jl
fisubs
fistps
sbbb
lcall
pop
test
lcall
jmp
cld
jmp
loopne
xchg
fnsave
sti
orl
imul
push
push
push
mov
cmp
pusha
fsubl
ret
fmul
mov
scas
bound
push
push
add
mov
xor
mov
jb
shr
lds
dec
adc
daa
fstl
mov
flds
mov
loope
popf
or
xor
push
and
je
jbe
in
fbld
cmp
xchg
testl
lock
fbstp
mov
int3
fsub
inc
xor
add
mov
fimuls
aas
push
xor
pop
rorl
leave
test
mov
cs
loop
dec
loop
jle
jno
popf
push
test
inc
cmpb
and
stos
add
and
push
lret
cmpb
ds
lods
sbb
or
cmp
or
outsb
movsl
sahf
pop
scas
xlat
inc
cs
idiv
bound
rcrl
out
sbb
es
adc
test
push
push
xor
xchg
ss
loopne
out
adc
jnp
cmpsb
ds
sahf
out
mov
jecxz
or
pop
iret
jb
std
jns
test
out
mov
mov
mov
shl
jl
sbb
stos
addb
adc
mov
sbb
dec
inc
std
stos
mov
jb
mov
xchg
imulb
xchg
push
in
mov
push
je
lds
decb
pop
out
mov
pop
jnp
fstpt
push
or
push
lock
popa
sbb
inc
jns
mov
mov
xorb
push
pop
out
inc
jge
loopne
icebp
pop
into
mov
sub
sbb
pop
add
cmpsb
sub
dec
push
xlat
jecxz
sarl
pop
cmp
enter
push
jnp
test
jb
mov
cmp
mov
xor
nop
daa
mov
sbb
dec
ja
dec
pop
aaa
mov
jno
pushf
mov
sbb
jecxz
orb
cld
loope
aad
and
mov
scas
arpl
sbb
out
test
out
pop
mov
aam
sbb
imul
into
xor
idivb
push
ret
sbb
dec
imul
mov
adc
cwtl
mov
mov
out
jl
add
popf
test
push
inc
pop
xlat
jbe
push
sbb
sahf
pop
test
dec
ret
mov
inc
and
mov
jb
inc
push
dec
adc
push
xchg
pop
into
int3
mov
lret
push
push
sti
test
pop
mov
or
add
aad
pusha
pop
cmp
add
lahf
and
sbbb
addr16
sbb
jbe
xor
mov
in
mov
add
fidivl
add
dec
xchg
cmp
jle
test
aaa
push
fnsave
xchg
lods
dec
jne
xor
xchg
jno
clc
and
nop
nop
pusha
dec
mov
pop
fisubrl
ds
insl
jb
adc
stos
sbb
push
cmp
imull
aam
adc
lret
xor
arpl
ror
xor
dec
aad
mov
inc
flds
jl
mov
dec
leave
pusha
orb
stc
shrl
shlb
out
cmp
pop
mov
cmc
shlb
xchg
cmp
cmc
dec
pop
pop
dec
ret
loope
dec
push
pop
fstps
xor
pop
icebp
inc
cli
push
aas
inc
scas
add
fbld
mov
jne
sub
mov
mov
push
inc
sub
xor
xchg
imul
fs
nop
mov
pcmpgtd
xorl
xchg
mov
sti
cltd
pop
sbb
fsubl
adc
sub
loop
imul
int
push
jae
xor
insl
cmp
xchg
add
mov
sub
xchg
and
lods
mov
pop
mov
shll
aaa
into
in
je
sub
xchg
sahf
dec
sub
push
ljmp
and
xor
adcl
and
cld
inc
pop
addr16
aas
pop
rep
sub
sub
cs
mov
negl
and
cltd
xor
jmp
jno
fldenv
cs
xor
inc
dec
add
xor
mov
lock
inc
sbb
loope
cwtl
fwait
add
jl
mov
sbb
push
xchg
dec
lods
cld
gs
sub
out
mov
test
addr16
sbb
mov
xchg
mov
sub
fs
mov
sub
arpl
mov
fwait
rcll
jae
cltd
dec
adc
jg
sti
jns
lods
and
adc
pusha
mov
mov
mov
push
jbe
cmp
outsb
stc
xor
aad
add
mov
scas
pop
add
jae
subb
cmp
cmp
lods
push
cs
or
icebp
mov
outsl
outsl
pushf
fwait
push
in
subb
in
call
and
and
loopne
cmp
lcall
pop
fwait
add
add
and
xchg
in
and
inc
dec
mov
mov
jns
push
pop
pop
add
jecxz
push
cwtl
insl
lods
nop
and
push
add
inc
loope
movsl
push
into
fsubrl
mov
mov
jmp
shll
cmp
mov
js
mov
stos
pop
out
js
jno
push
mov
pop
ss
loope
xchg
loop
pop
repnz
inc
sub
loope
hlt
adc
push
popf
das
jmp
loop
cld
and
xchg
push
sbb
xchg
inc
push
lret
mov
gs
push
in
orl
add
mov
data16
daa
push
jbe
sbb
xor
and
lds
dec
in
imul
push
pop
lods
sbb
loop
int3
repnz
push
mov
sbb
pop
inc
pushf
jnp
cmc
nop
cltd
sbb
outsl
out
movsb
pop
mov
add
and
add
xor
push
adc
int
aad
xchg
mov
push
add
test
sbb
or
lahf
iret
or
dec
and
sti
mov
lcall
xor
jnp
lds
mov
sbb
out
stc
cmc
push
jp
aam
mov
or
inc
adc
loop
fsubl
or
cmp
outsb
xor
cmc
mov
mov
mov
mov
daa
int3
scas
shrl
into
fs
jp
xchg
mov
sbb
mov
mov
add
xchg
mov
inc
and
test
enter
and
pop
je
mov
outsl
push
fcoms
ret
lea
lret
push
fnsave
movsb
inc
mov
pop
jg
or
out
xor
cs
jp
repnz
call
dec
xrelease
pop
mov
and
in
push
stc
lret
pop
push
add
mov
fucomi
mov
mov
test
lret
mov
call
pop
outsl
jnp
dec
dec
pop
test
sbb
stos
push
lea
clc
lock
inc
mov
cmc
mov
out
imul
xchg
and
or
dec
add
lcall
loope
push
pop
xchg
add
inc
mov
icebp
jbe
xchg
daa
enter
dec
and
mov
mov
push
lds
test
out
pushf
sub
or
cmp
push
push
mov
mov
aas
xor
imull
lcall
fisubrl
xor
cmpsb
call
mov
inc
mov
mov
jae
jmp
lods
rclb
inc
fstl
sbb
dec
jl
mov
imul
out
cmpsl
stos
sti
xor
inc
fbstp
mov
pop
out
adcl
pop
out
inc
sub
outsl
das
inc
ret
daa
dec
lahf
xor
inc
stc
or
es
pop
dec
dec
loop
jnp
scas
xchg
pop
fwait
xor
mov
or
fwait
in
aas
inc
inc
xchg
fbld
aam
shlb
push
mov
adc
mov
shll
cmp
or
push
faddp
xchg
mov
ja
fst
push
ret
jne
lret
out
jl
fcomip
jg
lods
lock
les
adc
addb
ret
sbb
insl
add
outsb
je
mov
shll
aam
jns
dec
popa
lock
les
lods
cmp
arpl
jge
jmp
out
hlt
dec
jg
das
add
aam
push
jo
aaa
ss
call
cltd
les
out
fxch
jae
insl
add
add
push
leave
xor
push
fsubrs
in
mov
add
std
rcll
xchg
or
mov
mulb
mov
rorb
or
add
push
mov
gs
jnp
mov
push
cmpsl
push
cmp
xor
and
adc
xchg
ret
pusha
sti
sub
and
cmp
clc
insl
or
push
in
cli
sbb
mov
mov
push
fwait
dec
in
js
mov
adc
jo
inc
xchg
mov
ret
inc
aaa
ret
aas
imul
push
stos
inc
das
push
mov
xor
or
das
ja
mov
adc
jl
inc
daa
mov
ss
pop
xor
dec
xchg
push
leave
mov
jecxz
mov
sbb
and
jno
xor
xchg
mov
pushf
lcall
dec
mov
push
sar
aaa
xor
mov
inc
pop
fstl
out
cli
pop
pop
inc
fmuls
cld
pop
imulb
roll
xor
repz
push
pop
in
push
imul
test
fisttpl
mov
adc
ret
das
cmp
or
cmp
ret
int
outsl
test
loope
aas
movsl
cmc
mov
enter
dec
adc
inc
xor
popa
bound
loop
into
popw
call
cltd
das
jne
cmp
insl
pop
mov
push
mov
enter
dec
adc
rorb
enter
cmc
je
dec
rcrb
cmpb
pop
outsl
adc
add
lods
lcall
jno
dec
enter
pop
es
jno
movsb
scas
and
test
dec
xor
cmp
pop
pop
pop
mov
add
mov
shlb
gs
jne,pt
dec
push
pop
subb
es
or
movsl
subb
add
xor
or
add
je
nop
push
fcoms
das
popa
imul
inc
xor
push
int3
and
sbb
stos
xor
insl
icebp
sbb
shll
aad
in
xor
ds
ljmp
adc
push
push
pop
out
cltd
xor
cmp
or
lret
cmpsb
mov
pop
sub
jns
push
das
sti
mov
sti
dec
cmpsl
jnp,pt
push
inc
dec
lds
ds
ficoms
ret
push
jmp
int
lea
ljmp
jmp
lret
mov
sbb
into
mov
adc
xchg
repz
lods
fxtract
jbe,pn
mov
inc
mov
push
movsb
pop
popa
into
fcoml
mov
adc
dec
mov
jg
cltd
xor
xchg
mov
out
daa
mov
sub
addr16
adc
push
jbe
sti
rcrb
nop
imul
pop
movsl
pop
sbb
jnp
hlt
jp
pusha
dec
cmp
clc
xchg
sbb
dec
rolb
pop
lret
cld
xchg
xor
push
or
inc
xlat
mov
call
cmc
push
fwait
add
mov
pop
loope
fsubrs
sbb
insl
std
push
xchg
mov
sbb
cmp
fisttpl
mov
sti
sub
out
sbb
jg
mov
fimuls
push
mov
mov
xor
popa
scas
testl
outsl
mov
test
outsb
cmpsl
shrl
jae
imul
sahf
stos
les
sti
aad
out
pop
ja
mov
xlat
rcrb
add
lret
and
push
leave
scas
fnstsw
push
xor
xchg
xorb
xchg
sub
xchg
je
adc
xor
add
ficoms
pop
jns
fisubrl
icebp
mov
and
nop
xchg
dec
mulb
loope
mov
sbb
fistl
fdivrl
pop
sub
out
dec
pop
sti
movsb
jo
in
add
pop
jbe
mov
dec
data16
push
mov
scas
push
mov
fistl
xlat
mov
mov
push
fstps
lcall
mov
dec
shlb
idivb
sbb
jmp
cwtl
pop
cmp
out
mov
mov
inc
in
add
daa
lods
cmp
ja
push
addr16
arpl
add
dec
aam
dec
xchg
addl
push
cmp
adc
add
bound
ds
aaa
into
and
ss
inc
jp
je
push
repz
inc
inc
dec
cmp
cmp
aam
cmc
pop
repz
clc
xor
imul
fstl
push
and
xor
jae
data16
lret
outsb
mov
jl
and
pop
inc
call
pop
mov
test
inc
repnz
add
and
xchg
mov
pop
shlb
jnp
inc
mov
je
or
jno
subb
gs
sub
mov
lahf
data16
lahf
imul
ja
xchg
test
sub
cmpsl
fs
int3
mov
lcall
pop
pusha
enter
mov
inc
pop
gs
mov
sbb
xchg
add
mov
mov
divb
mov
pop
fisubs
fsubr
ror
lds
push
aaa
std
cmp
xor
push
addr16
arpl
outsl
mov
fnstsw
stc
stc
sub
pop
pop
into
fs
jl
inc
aad
lret
cld
jp
sub
dec
aad
jb
fdivrs
clc
jo
fcoml
cwtl
outsl
cmp
shl
sub
and
jp
inc
cmpsl
fldl2t
sbb
fcoml
mov
popf
inc
and
sbb
mov
loop
push
test
pop
xorb
jns
sub
dec
jp
jl
lret
movsb
enter
fwait
jb
sar
sub
iret
aaa
stos
mov
or
test
mov
shl
lds
loopne
in
scas
mov
leave
sti
push
addr16
xor
xchg
test
loopne
cmp
cmpl
pop
fwait
movsb
outsb
loope
xor
or
jno
cmp
inc
mov
pop
jnp
popa
imull
pop
stos
fmull
and
movsl
adc
jno
fs
xchg
xchg
test
inc
mov
xchg
mov
les
add
cmp
lods
popf
xchg
cs
push
aaa
jp
cmp
lcall
sbb
xorb
call
dec
cmp
stos
andb
shl
xchg
mov
fwait
sub
sbb
sbb
fsincos
inc
lahf
ss
xchg
mov
cmpsl
dec
out
cmp
mov
aas
in
cmp
jae
dec
aam
add
mov
in
arpl
push
jmp
add
test
loope
aaa
pushf
shll
ljmp
push
loope
jns
mov
xor
sbb
lds
cmpb
loopne
sbb
mov
imul
adc
jb
imul
dec
aas
dec
push
fs
enter
mov
push
fadd
push
cmpsb
fdivrl
pop
cltd
adc
jne
aas
dec
adc
stos
sub
jp
es
xchg
fwait
jp
xchg
nop
das
shl
add
mov
mov
adc
and
cmp
ret
nop
arpl
je
mov
jo
jmp
mov
adc
rorb
pop
push
jecxz
pcmpeqb
mov
xlat
adc
mov
lret
mov
adc
movzbw
frstor
xchg
and
js
xor
push
dec
mov
add
aam
sar
push
mov
ja
cmp
mov
sbb
popa
ret
imul
in
sysret
xchg
outsl
push
enter
cmp
pop
sub
lods
pop
mov
mov
mov
mov
xchg
rclb
jp
mov
fsubrp
jg
in
mov
aas
push
xchg
jge
inc
lods
pop
hlt
frstor
mov
stos
adc
xchg
mov
and
xchg
leave
test
test
aas
in
xchg
mov
lret
cmc
inc
neg
arpl
sbbl
lahf
mov
shll
dec
mov
jp
lods
inc
mov
xchg
mov
fldcw
cmpb
push
mov
insb
add
push
push
test
xchg
pusha
adc
jle
dec
pop
and
jge
xchg
cmpsb
gs
push
int3
pop
mov
dec
sub
stos
mov
in
loope
aaa
add
mov
add
mov
or
fcoml
adc
movsl
pop
sahf
rcll
cmpl
and
xchg
mov
mov
xor
mov
enter
jne
pop
ficomps
push
mov
dec
push
ja
mov
js
int3
mov
sbb
adc
popf
xor
enter
imul
dec
out
stc
bnd
inc
cmp
xor
cltd
test
in
fldcw
std
sbb
gs
sub
in
cmp
xchg
daa
hlt
mov
xchg
and
cmp
in
dec
inc
sbb
dec
or
repnz
and
dec
test
jl
aad
filds
dec
ret
add
enter
movsl
icebp
xchg
dec
push
xor
ds
imull
push
push
ljmp
ret
test
inc
mov
mov
fmuls
lods
pusha
imul
std
icebp
jb
divl
mov
push
call
in
or
out
cmc
rcrb
pop
jno
cmp
imul
pop
jge
xor
arpl
jmp
jbe
push
ljmp
jno
mov
clc
es
rcll
lods
inc
mov
inc
pop
adc
out
xchg
jmp
add
mov
push
jmp
jl
ljmp
loop
cli
inc
adc
test
xlat
popa
xor
xchg
clc
jle
push
push
lret
bound
cmp
add
push
cmpsb
les
or
mov
push
add
or
leave
pusha
int
mov
xlat
mov
scas
xchg
es
mov
add
inc
shl
fisubl
xchg
sti
pop
sarl
out
xchg
test
mov
movsb
fs
cmp
in
sbb
inc
fsubr
into
mov
cli
mov
rcl
notl
daa
adc
pop
cmc
out
insl
dec
repnz
push
and
push
ljmp
cmc
push
hlt
mov
push
sbb
test
jg
stos
push
xor
test
sub
outsb
pop
pop
pop
sub
sbb
outsb
clc
sub
add
mov
das
mov
shrl
imul
faddl
pop
les
dec
popa
insb
and
movsb
addr16
sahf
leave
lret
hlt
fsubrs
fcompl
adc
notb
clc
je
push
jbe
mov
repz
mov
jnp
mov
cld
dec
inc
fs
or
pop
loope
mov
mov
jmp
mov
jl
xor
ficomps
mov
pop
pop
inc
jg
dec
cmpsb
ret
xor
jae
aad
insl
xchg
dec
pop
popf
mov
push
ficoml
hlt
pop
adc
jno
jl
pop
mov
repz
mov
mov
orb
mov
push
repz
aas
jp
xchg
ret
es
cmp
pop
rol
rolb
aad
out
dec
ret
xchg
dec
loope
cwtl
jecxz
push
push
lods
loop
adc
dec
dec
xor
das
xorb
int
mov
inc
lds
orb
push
out
push
adc
ljmp
mov
cltd
insl
aad
gs
lret
push
mov
jno
fsts
cmc
or
jmp
pop
cmp
movsl
sbb
insl
scas
xchg
mov
mov
mov
mov
inc
aam
mov
mov
push
mov
les
mov
add
sub
cmpb
shll
icebp
and
push
inc
and
je
sbb
int
sub
insl
mov
dec
adc
sbb
mov
push
jo
cli
mov
xor
jmp
dec
loopne
dec
mov
jo
push
int
imull
imul
mov
pop
lcall
xor
nop
flds
jb
sarb
inc
or
push
lahf
stos
or
popf
int
add
and
xlat
mov
cltd
sbb
xchg
insb
mov
dec
out
repz
pop
aaa
sbb
dec
lds
ljmp
call
adc
mov
divl
jle
subl
xchg
cld
fstps
stc
js
mov
xchg
sub
jp
rcrl
jle
aad
and
movl
mov
add
or
pop
jae
insl
aam
idivl
dec
adc
lret
pop
push
mov
cmp
jge
sub
fcmovnu
lret
mov
fbld
fucomi
sub
jo
mov
lret
xchg
dec
xchg
mov
shll
ds
adc
add
xchg
sbb
inc
repz
pop
mov
shr
mov
insl
cwtl
sbb
cmp
movsb
fwait
push
adc
pop
inc
dec
fnstenv
adc
loop
add
or
lds
inc
inc
popa
outsl
jb
mov
add
mov
inc
sbb
and
add
sub
cmp
popa
call
inc
movsb
sahf
hlt
sub
lcall
ja
mov
add
mov
lret
pop
dec
or
ljmp
xor
push
sbbl
or
push
sub
fdivp
mov
movlps
clc
mov
push
sbbb
mov
sbb
insb
pop
lret
iret
push
or
pop
mov
stos
lods
jno
lods
jbe
scas
and
sbbl
lods
pop
out
mov
inc
mov
mov
int3
add
fcompl
xor
mov
frstor
in
movsb
mov
imul
sbb
mov
movsl
cwtl
mov
ficomps
ja
push
popf
pushf
pop
test
lea
fbstp
xchg
sub
push
and
and
inc
nop
daa
ja
cmp
flds
dec
and
or
cwtl
mov
push
mov
dec
jmp
shll
dec
jp
jns
jnp
shrb
ficoml
sub
and
push
xchg
popf
adc
loopne
sbb
dec
inc
out
jb
jge
fs
fimull
outsb
sub
xchg
sahf
and
int
cmp
push
or
fisttpl
shl
jmp
je
ss
cmp
mov
js
xchg
or
push
aas
fnstenv
mov
fidivrl
pop
nop
std
notl
das
mov
sub
xor
xchg
jp
std
jl
insl
xor
repz
mov
mov
mov
out
cmpsb
jb
sub
sub
pop
or
jns
mov
inc
popa
shrb
mov
shlb
shll
sbb
test
inc
add
mov
inc
pop
imul
jmp
addr16
jmp
imul
lcall
loop
iret
shll
add
clc
mov
cs
dec
add
jbe
movsl
icebp
push
push
imul
mov
push
dec
jo
outsl
fistps
push
lcall
int
shl
iret
push
xor
korw
jg
push
or
in
or
cs
and
lods
js
or
popa
insl
jecxz
sahf
sbbl
lock
and
xchg
push
push
out
pop
dec
into
pop
movsl
bswap
pop
adc
movsl
ja
and
stos
mov
pop
mov
mov
leave
sahf
xor
mov
mov
xor
xchg
aam
mov
sub
mov
and
pop
sub
icebp
jge
dec
push
sbb
push
int3
cmp
incb
push
cmp
test
rcrl
ret
lret
push
or
pop
sbb
stc
cmc
mov
or
pop
or
push
cmp
cmp
push
mov
cltd
test
mov
mov
cmp
mov
rorl
in
imul
inc
adc
pop
fucom
incb
rcr
repnz
das
xor
xchg
sbb
or
or
stos
sbb
stos
rolb
mov
cmp
lds
test
ss
in
inc
xor
inc
das
pusha
or
cmp
or
mov
jmp
imul
xchg
push
inc
add
into
add
jae
push
in
js
notb
adc
sub
aad
mov
jecxz
xor
dec
push
dec
jge
push
fwait
xor
cmpsb
fxch
push
cmpsb
lock
mov
mov
addl
rcrb
adc
sbb
imul
enter
jo
cmp
sti
hlt
out
xor
mov
lcall
and
iret
cmp
sbb
mov
aam
popa
in
ret
push
adc
in
xor
movsl
insl
gs
fdivrs
xchg
loop
mov
adc
sub
subl
shlb
lret
jb
call
aaa
imull
jno
sbb
cmc
add
or
lcall
inc
sbb
add
out
aas
inc
into
and
cmp
xlat
shr
mov
fisttpl
gs
cmpsl
popf
and
or
sub
dec
mov
add
mov
int3
bound
cmp
aad
cltd
add
dec
repz
lds
jl
lcall
inc
fsubl
and
adc
add
mov
pusha
jl
outsl
ss
rolb
ret
enter
mov
push
mov
pushf
add
push
xchg
cwtl
adc
pop
mov
lea
xchg
sub
push
pop
ficoml
stos
or
cli
popl
arpl
push
lret
xor
jge
sarb
sbb
mov
ljmp
jp
aam
jne
mov
xor
and
test
or
ja
sbb
adc
push
and
lret
ljmp
sub
insb
nop
mov
mov
fldcw
test
xor
xchg
je
jo
jo
mov
out
into
mov
mov
movsl
sahf
or
les
lret
flds
jg
popl
mov
jbe
in
xchg
add
xor
xchg
mov
pop
sahf
jl
push
repnz
add
in
jnp
lcall
mov
loope
sub
inc
cmp
xor
xchg
cltd
stos
ret
add
cmp
stc
sub
outsl
push
sbb
mov
cmp
rcll
adc
add
aas
push
inc
in
cltd
loopne
outsl
xchg
fcmovbe
js
scas
mov
xor
fcmovbe
inc
loopne
and
rcrl
xchg
pop
cmp
js
xchg
pushf
stos
mov
mov
adc
inc
jno
pavgw
data16
sbb
int3
fildll
xchg
inc
push
in
jle
les
jmp
mov
outsb
xor
mov
ss
pop
pop
popa
jbe
mov
cmc
out
rcl
cmp
shll
outsl
pop
push
es
push
pop
pop
push
lods
mov
lods
jmp
pop
lahf
popf
jg
test
frstor
add
aas
fdivs
or
dec
xchg
sbb
dec
mov
add
sub
jns
pop
aad
cltd
xchg
xchg
lret
dec
and
sub
mov
sbb
insl
testl
push
add
fldcw
loop
mov
add
adc
mov
pop
or
or
xor
test
lahf
in
lea
rcr
xor
mov
xchg
test
mov
imul
lea
dec
loope
testl
inc
cmp
call
adc
xchg
repz
mov
test
mov
sti
dec
ss
ds
adc
cmp
mov
adc
pop
mov
pop
mov
in
pop
in
imul
jne
xor
jmp
repz
sbb
pop
imul
out
ja
mov
shl
inc
jp
leave
sub
je
cwtl
mov
inc
sub
mov
testl
jl
sub
dec
push
add
pushf
test
sub
nop
inc
push
ljmp
cmc
push
push
scas
mov
mull
mov
adc
in
aas
fbstp
mov
cmp
mov
jnp
push
sarl
inc
dec
xchg
jecxz
gs
ret
xchg
mov
mov
cmp
loopne
sbb
cmp
inc
push
add
xor
and
sub
leave
nop
daa
cmp
rcrb
cmp
lds
int
inc
xlat
rcrl
xlat
icebp
cli
jns
dec
incl
mov
fucomp
cmc
ljmp
xchg
pusha
pop
pop
push
loopne
fadd
fcompl
mov
jno
ja
mov
mov
dec
jecxz
in
cmpsb
aaa
stos
sub
out
jno
pop
out
test
in
cmp
leave
test
inc
fs
adc
ja
xor
inc
mov
lret
cwtl
or
sarb
inc
mov
cltd
jae
fmul
test
scas
cli
in
mov
dec
pop
je
inc
pop
mov
in
scas
imul
bound
adc
ds
movsl
lds
cmp
cmc
cltd
xor
inc
adc
mov
scas
inc
cmpsl
aam
cmp
inc
arpl
mov
mov
mov
mov
sub
xlat
mov
jmp
push
stos
sarl
pop
lods
sbb
pushl
mov
sub
push
lea
aas
cli
roll
pop
inc
lret
mov
pusha
icebp
sbb
cwtl
mov
cmp
daa
jb
shl
int
ss
out
pop
dec
mov
mov
pop
xchg
pop
cmp
test
lret
dec
mov
nop
test
push
mov
ds
and
add
jns
push
call
sar
inc
fldcw
imulb
jns
leave
int
sti
jge
cmp
dec
mov
bound
insl
cltd
xor
in
clc
and
fdivrs
daa
sub
push
scas
int3
outsl
mov
push
movb
pop
pop
outsb
adc
cli
dec
cmp
outsb
inc
xchg
out
arpl
movsl
cmp
pop
jg
inc
mov
in
aas
ret
jns
ja
lods
push
test
test
mov
push
cli
cmp
pop
jbe
shlb
sti
push
dec
out
xchg
fists
iret
sti
mov
mov
shll
sti
mov
mov
mov
xchg
and
dec
sub
or
jg
dec
addr16
push
scas
cmp
mov
cmp
ret
cltd
or
mov
mov
shlb
dec
sub
jecxz
xchg
lret
or
xor
mov
shr
lods
mov
xchg
mov
in
mov
pop
pop
es
fcmovne
pop
gs
in
or
jne
adc
call
mov
push
cmp
inc
in
test
mov
aas
pushf
jg
adc
mov
mov
cmp
mov
xchg
push
loopne
inc
call
xor
adc
adc
dec
or
cmp
jo
cmp
outsl
mov
ret
outsb
loop
push
sbb
cmc
mov
and
in
mov
fucomi
sub
pop
mov
adc
and
xor
popf
or
xor
popa
and
idiv
lret
cld
push
lcall
sub
dec
test
xchg
sub
mov
daa
stc
pop
xchg
lea
in
fmuls
mov
pop
mov
push
pop
stc
ss
pushf
xor
xorb
cltd
inc
mov
cltd
push
sub
clc
xchg
mov
dec
in
cmc
lret
iret
imul
mov
cs
jge
or
cld
lods
mov
pop
push
mov
fldl
mov
adc
cmpsl
and
pop
push
push
call
sarl
jmp
push
mov
icebp
sub
js
clc
fnsave
inc
inc
jae
jae
and
dec
xchg
nop
ret
adc
xchg
xchg
push
fs
sub
movsb
or
xchg
insl
add
sub
daa
cwtl
xlat
ljmp
or
lcall
and
in
aad
loope
pop
testl
test
data16
fildl
mov
cmp
shrb
jnp
pop
nop
inc
lret
gs
jns
pop
xchg
xor
cltd
dec
pop
mov
idivb
mov
and
adc
popf
xchg
shl
ds
jge
loop
and
rcl
outsb
add
sub
and
sub
ja
xchg
mov
and
in
cltd
jle
sti
rclb
ds
adc
dec
adc
lcall
xchg
xchg
xchg
movsb
ja
fadds
in
mov
push
jmp
std
leave
lret
pop
scas
sti
xchg
sbb
sbb
mov
push
xlat
xor
das
dec
iret
clc
push
popf
lods
fldcw
daa
mull
jmp
dec
add
in
sub
sub
inc
and
dec
pminub
hlt
dec
xchg
scas
dec
mov
push
lret
call
sarl
stos
cwtl
lods
pop
push
xor
rorb
pusha
test
cli
int3
je
cmp
into
lods
mov
int3
xor
dec
fucomip
lds
mov
imul
dec
xchg
adc
and
adc
xchg
sbb
cli
dec
mov
call
loope
jb
mov
inc
push
inc
in
addb
test
das
mov
or
fs
pop
mov
sarb
lcall
xchg
add
or
and
xor
cld
and
lods
pop
sub
lret
adc
push
mov
ljmp
mov
dec
or
out
mov
fdivp
pop
mov
push
mov
in
popa
push
fisubl
jb
cmp
xchg
xchg
mov
add
sub
dec
sub
pop
incb
movsb
clc
cs
sbbl
cmp
fs
call
sub
outsl
fildll
sub
fistpll
outsb
xor
sbb
inc
mov
stos
add
scas
aas
fists
cwtl
lock
insl
adc
cmp
shrl
mov
jg
addr16
aad
mov
and
loop
ljmp
in
je
dec
dec
adc
test
add
sub
int
xchg
xor
popa
mov
jmp
cmp
std
call
mov
jnp
sub
iret
cmp
pop
xchg
jecxz
inc
cmp
ss
cltd
xor
pop
sahf
and
loope
mov
dec
hlt
popa
out
pop
mov
xchg
and
aas
and
ror
and
imul
pop
in
orl
or
int
xor
movsl
inc
imul
std
dec
jge
mov
outsl
movlps
lret
xor
aam
jns
aas
push
scas
loop
jle
inc
das
repnz
in
cmc
mov
sbb
push
scas
cmc
test
inc
aas
push
jmp
mov
outsl
push
subl
push
fcoms
ss
and
cmpsl
outsl
mov
pxor
sbb
add
jns
cli
and
or
aaa
sbbl
scas
jbe
and
pop
mov
mov
ficoms
in
scas
repnz
dec
jecxz
push
mov
mov
lds
pop
into
adc
test
adc
mov
das
daa
jne
push
and
xchg
sub
xchg
sub
inc
mov
mov
adc
pusha
movsb
mov
push
xchg
sub
mov
ret
nop
cltd
mov
sarb
mull
rcr
push
add
mov
adc
ljmp
mov
mov
fcoml
sbb
and
xor
sub
int3
cltd
jo
cmpsl
push
jmp
and
fmuls
xchg
insb
int3
xchg
ds
or
push
adc
addb
lea
sub
add
jg
sbb
pop
adc
roll
jne
int3
loopne
push
cwtl
xchg
lods
cmpsl
add
adc
les
decb
aad
xrelease
out
add
in
addr16
jbe
mov
xchg
xchg
sbb
pop
sbb
sbb
and
dec
mov
pop
pushf
jo
mov
call
or
xor
cmp
das
test
sbb
sbb
cmp
inc
cmp
xchg
adc
in
je
lods
lds
xor
fimuls
scas
rorb
xor
push
inc
ljmp
mov
ss
adc
adc
xchg
scas
xor
mov
fisubrl
sar
cmp
pop
adc
pop
aaa
movsl
insb
js
pop
mov
daa
fidivs
and
sub
movsb
int
popa
adc
inc
rcrl
lods
ds
jmp
mov
mov
pushf
test
xorl
mov
nop
stos
sbbb
ljmp
sbb
fs
flds
jbe
pushf
scas
out
pusha
ret
ljmp
or
cmp
jl
jno
push
jo
mov
and
mov
or
lcall
and
jo
and
or
pop
icebp
mov
lods
cmp
stc
lret
int3
mov
enter
ja
movsb
int3
fsubs
push
inc
sbb
sbb
mov
add
pop
mov
loop
add
sbb
jae
fimull
and
push
es
jp
data16
adc
push
lea
pop
xchg
mov
xor
aas
jge
mov
mov
mov
lods
cmc
and
sbb
pop
sahf
shr
inc
cmc
std
mov
hlt
pop
divl
rorl
repnz
or
sub
scas
jb
xor
dec
jbe
mov
inc
mov
les
leave
pusha
jb
arpl
xor
push
or
psubusb
sbb
pop
lods
pop
arpl
js
adc
fiadds
and
jmp
jp
pop
and
add
mov
insl
mov
lods
fs
xlat
sub
xchg
out
movsb
dec
leave
pop
cmp
std
lahf
shl
jge
add
sbb
pop
push
jmp
mov
cwtl
lods
push
mov
addr16
out
imul
push
and
mov
jge
outsb
movsb
stos
inc
lds
cmpsb
adc
push
test
xchg
xchg
dec
dec
inc
jo
cmp
data16
jns
mov
cmp
mov
add
inc
clc
lcall
mov
out
lds
add
sub
xor
pop
mov
cmp
xlat
outsb
dec
mov
cmc
xor
movsl
nop
out
xchg
mov
and
sbb
jmp
and
hlt
xor
insl
fnstcw
stos
mov
mov
pushf
inc
adcb
movsl
aaa
push
xlat
cld
add
insl
cli
mov
inc
inc
arpl
mov
xchg
lahf
repz
mov
xor
push
in
test
stos
sub
dec
nop
imul
add
call
daa
movsb
xor
push
fxtract
sbb
mov
int3
pushf
mov
das
jle
xchg
mov
cmp
sbb
cli
mov
pop
orb
jnp
sub
fsubl
inc
push
in
push
sub
xchg
cmpsb
in
sub
jle
jo
ror
mov
pop
out
sbb
pop
ja
sbb
xorb
aad
fwait
push
jbe
test
and
sub
push
mov
pop
in
pop
jbe
fdivr
rorb
lea
out
and
sti
andb
xchg
push
jle
out
cmp
adc
jge
add
push
adc
push
cmc
mov
jns
jno
or
in
clc
adc
xchg
adc
jecxz
pmulhw
ret
shr
rcrl
jbe
mov
push
pusha
fistpl
sub
add
int3
les
jae
mov
xchg
xor
xchg
popf
shrl
mov
stos
jp
popa
clc
cmp
sti
xchg
fisttpll
rorb
nop
cmp
ja
jmp
cwtl
xchg
inc
ds
push
mov
adc
xor
js
lods
ja
fnstcw
in
movsb
adc
into
jno
repz
jae
and
pop
loope
push
int3
mov
repnz
aam
push
out
js
mov
movb
xchg
pop
int3
lea
xor
dec
sbb
mov
mov
out
gs
mov
jge
pop
out
cwtl
mov
test
std
in
and
mov
xchg
mov
insb
out
movsl
in
ljmp
loopne
pop
insb
scas
mov
pop
adc
inc
inc
popa
shlb
adc
lret
in
paddb
lds
jl
and
dec
insb
jecxz
lcall
movsb
sub
aad
dec
add
ret
popa
dec
or
fbld
inc
imul
xor
push
test
jg
xor
mov
sbb
in
aam
sbb
lds
pop
lcall
lods
inc
sbb
dec
in
pushf
repz
adc
xchg
cld
dec
and
iret
fisubs
mov
fcoms
mov
in
mov
in
mov
cmpsb
sti
and
adc
int3
cmp
push
jl
inc
or
popf
sahf
dec
jmp
or
mov
ds
into
shll
cmc
fsub
lods
std
repnz
fnstsw
cmc
sub
push
outsb
pop
aaa
push
adc
test
pop
or
inc
sub
fldl
push
outsl
loopne
cmp
les
or
push
cli
dec
mov
test
xchg
inc
mov
dec
mov
pushf
xor
cmpsb
jns
test
popl
sbb
cmp
sbb
dec
mov
sub
jns
push
cmp
pushf
mov
jmp
or
divb
ret
pop
or
lea
lods
mov
and
stc
pop
cmpsb
inc
inc
pop
xor
scas
sysexit
test
sbb
inc
sub
aas
push
push
js
loop
pop
lock
es
or
push
out
ljmp
lcall
lods
lock
inc
out
hlt
sbb
push
push
cmp
cltd
js
sbb
clc
xor
popa
push
jge
inc
xchg
scas
mov
daa
lock
and
andb
nop
es
adc
dec
shrl
xchg
test
xor
dec
out
int3
adc
int
cmp
xchg
jecxz
inc
cld
pushf
push
cwtl
test
sbb
push
mov
lock
jnp
stos
cmpsb
mov
pop
sbb
sahf
int3
cmp
scas
mov
xor
xor
mov
push
mov
lds
rcr
push
pusha
xchg
or
fimull
add
mov
clc
jbe
ljmp
inc
sbb
lods
xor
push
leave
loope
outsb
test
jg
dec
es
fidivs
or
repnz
and
lahf
jb
add
stc
push
pop
lds
mov
es
and
push
mov
lcall
shll
addr16
outsb
pop
cli
stc
sbb
cmc
mov
add
aaa
xchg
pop
imul
rcl
addl
jo
add
inc
hlt
scas
jmp
gs
add
push
jb
loope
lock
call
push
shrb
add
sbb
pop
jp
pop
xchg
sub
inc
arpl
add
fisubl
ret
bound
push
les
movsl
sub
les
dec
dec
movsl
repz
push
xchg
fsubrl
sbb
xchg
mov
push
outsl
mov
jge
xchg
add
mov
enter
push
aaa
add
cmp
rcll
xchg
pextrw
ss
add
xchg
movsb
outsb
push
out
inc
loop
jno
xchg
out
mov
jbe
pop
shll
or
inc
adc
cli
daa
mov
sbb
xor
jg
leavew
int
adc
addr16
je
jno
add
push
dec
pop
pop
adc
mov
and
ret
xchg
out
test
lock
in
addl
mov
or
lock
mov
add
sub
or
ja
mov
jnp
mov
dec
cltd
xor
jno
ficoms
addb
pop
cltd
pop
rcl
repnz
shrl
sub
mov
loope
pop
pushf
outsl
xor
adc
enter
test
into
sbb
aad
xor
mov
or
xchg
scas
jo
int3
fnstsw
and
dec
in
lret
imul
scas
icebp
mov
sub
sbb
push
out
sti
aaa
push
sbb
sbb
mov
fsubs
jl
xchg
fdivr
icebp
popa
jge
sub
imul
test
adc
mov
mov
push
out
aam
add
subb
inc
mov
cli
mov
cmp
out
nop
xchg
sub
negl
sub
cltd
cmp
lea
jne
scas
enter
aam
fstpl
mov
enter
push
bound
int3
repnz
dec
mov
xor
mov
insl
or
add
rolb
ds
sbb
outsb
out
or
stos
or
xchg
mov
jb
fnstenv
or
mov
addb
mov
pop
dec
sub
mov
dec
iret
cmpsb
push
jb
or
or
dec
test
rcr
inc
pop
repz
pop
pop
outsl
pop
xor
inc
mov
imul
dec
cmp
into
icebp
mov
nop
cmp
fnstenv
and
xchg
xchg
jge
ljmp
pop
mov
test
lret
and
out
mov
fwait
and
fsubr
test
inc
fs
ss
test
xor
fs
push
push
loope
inc
lret
jns
aad
in
jp
int
pop
loope
test
push
or
mov
xchg
jp
push
aam
loop
fwait
push
pop
mov
jmp
mov
mov
push
ljmp
and
adcl
cld
aas
mov
mov
and
push
in
cli
iret
sub
mov
mov
mov
test
int
fidivrs
inc
das
cli
incb
data16
aas
pushf
inc
in
push
or
fs
jmp
fs
xchg
jg
sahf
cwtl
xor
cmp
cmpsl
xchg
jo
loop
mov
into
in
xchg
xor
jb
cmc
jno
es
push
and
or
cltd
cmp
mov
cwtl
lret
pusha
xor
cmc
test
push
orb
add
fidivs
xchg
mov
xchg
mov
or
scas
les
jl
pop
sub
fcom
inc
xlat
push
pop
aaa
clc
js
loope
stos
mov
mov
dec
fdivrl
pop
hlt
in
fnstenv
mov
js
mov
fcompl
pop
ja
lock
lret
mov
inc
inc
mov
xor
add
pop
xor
loop
sbb
mov
sarb
sbb
and
sbb
aas
les
mov
outsl
push
adc
xor
dec
pop
jle
mov
xlat
ret
add
lret
mov
xlat
cld
dec
adc
mov
sub
lods
dec
push
cmp
xorl
adc
pop
mov
out
ficoml
cmp
xchg
inc
pushf
arpl
jne
inc
stos
pop
nop
inc
insl
sbb
sbb
inc
mov
stc
or
xlat
inc
scas
push
test
mov
mov
fimuls
es
popf
mov
lret
jge
inc
pop
add
cmpl
cmp
dec
pop
jle
mov
push
dec
add
sbb
leave
and
mov
mov
int3
enter
xchg
stos
imul
ds
inc
int
jae
pop
cmp
cmp
inc
pop
ja
cmp
int3
mov
push
mov
xchg
movsb
clc
aam
sub
fwait
xor
repnz
repnz
mov
addr16
dec
mov
cmp
lock
sbb
cmpsb
cmp
insl
into
les
outsl
push
or
pushf
arpl
pop
test
wbinvd
adc
fisubl
mov
pusha
pop
mov
cld
jae
jns
and
inc
lods
cwtl
loop
inc
xchg
stc
pusha
in
cmpsb
xchg
sub
push
in
pop
in
sub
bnd
aaa
add
ret
dec
loope
out
fiadds
fidivl
loope
sub
jne
cmp
fwait
xchg
inc
inc
pop
mov
or
mov
stos
and
dec
push
cltd
xor
popf
sub
in
jle
inc
cs
addl
mov
cs
xchg
inc
dec
jnp
cmp
out
sbb
ja
inc
call
add
cmp
in
scas
xor
aas
mov
adc
and
mov
sbb
mov
mov
movsl
mov
mov
out
lods
das
lret
ror
int
addr16
cwtl
scas
mov
jge
aas
nop
ljmp
push
pop
pop
cmp
lock
mov
cmp
popl
je
popa
in
cmp
stos
loop
lret
sub
sub
cmp
mov
dec
call
push
push
loopne
inc
push
int
cmp
pop
mov
adc
adc
push
or
dec
das
jle
scas
and
jae
scas
sub
mov
mov
add
pop
icebp
imul
mov
bound
or
xchg
stos
fistpll
cmc
or
rclb
mov
mov
dec
cld
cltd
loop
test
sti
cmp
in
ret
fistps
insb
mov
xchg
dec
jge
sbb
movsl
adc
push
sub
sub
into
dec
fldt
out
ffree
cmpsl
xchg
xchg
add
add
addl
jp
xor
mov
ja
fistl
enter
cmpsb
loope
mov
add
push
je
imul
cmp
aas
dec
and
cmp
bound
jmp
mov
jb
pop
mov
fists
xchg
sub
jle
jg
lret
cmp
cmp
mov
sti
sub
sub
into
rorl
adc
push
sub
pop
mov
or
dec
push
xor
ljmp
fisubrl
fists
and
fistpl
aas
mov
cmpsb
add
dec
shlb
mov
in
inc
ljmp
adc
out
push
fisubs
lds
scas
jno
pop
mov
xchg
xor
lds
roll
ror
dec
adc
scas
iret
outsb
mov
push
outsl
daa
inc
mov
cmpsb
xchg
ljmp
ss
dec
fnsave
pop
add
je
je
stos
and
sub
popa
sbb
push
or
outsb
jno
jl
push
lods
dec
xor
jl
and
mov
iret
int
mov
pop
sbb
shrl
inc
scas
sbb
push
cwtl
mov
outsl
lcall
dec
cld
or
mov
fistpll
or
fs
and
mov
push
jmp
sub
xor
aad
lcall
pop
cmp
adc
sbb
sub
daa
pop
stc
ret
mov
and
lret
shll
push
jne
and
aaa
lret
movsb
cmp
push
outsl
cltd
sti
push
fcomps
adc
jecxz
adc
push
xchg
out
add
mov
test
insb
data16
and
mov
or
aad
loope
stc
in
lds
mov
pusha
test
nop
jb
add
add
adc
clc
xor
sub
js
je
push
dec
repz
outsb
mov
out
dec
or
cmpsl
jb
mov
push
out
add
mov
fstpl
mov
inc
xor
lea
mov
inc
es
xor
jb
imul
sbb
xchg
push
cld
pop
cmpsl
mov
cmp
lds
insb
pop
push
call
nop
cli
bound
ja
lahf
xor
loope
sbbb
out
mov
add
sbb
sbb
and
add
mov
jle
aas
outsb
shrl
mov
subl
fistpl
xor
mov
sar
mov
jae
and
jae
jp
xor
fdivrl
insl
mov
and
iret
xchg
sub
cmp
pop
xchg
inc
mov
pop
cmpsb
cld
out
dec
mov
shrb
aam
mov
jg
fisubs
aam
fsubrl
aad
mov
or
jo
xor
cmp
pop
or
or
sahf
jno
adc
ja
clc
sub
xor
and
cmp
fmull
mov
push
call
sbb
fnsave
aas
lret
pop
lea
jo
sub
jge
in
inc
cmpsl
shrl
fs
pop
add
cmp
xlat
call
je
lods
aam
in
xchg
notb
pmaxsw
dec
movsl
idiv
cli
mov
xchg
scas
movsl
push
adc
ss
push
pop
lret
mov
shl
mov
mov
push
and
or
insl
xchg
sub
jp
jg
fwait
dec
dec
dec
push
pop
loopne
orl
pop
dec
mov
sarl
fcoml
inc
int
ja
fs
pushf
les
cmp
dec
out
test
call
fsubrp
pop
lret
fistps
scas
sbb
cmovle
popf
jbe
adc
rcrb
sbb
add
mov
mov
jo
push
cmp
gs
add
cmpsb
fldt
cmp
mov
ja
jns
mov
repz
shrl
xor
insl
fldcw
mov
mulb
stos
jb
shrb
std
jg
push
mov
fdivrl
inc
fcmovne
mov
mov
rcll
in
aas
and
jno
test
nop
add
mov
ud1
xor
subb
jne
jecxz
xchg
or
push
fcmove
adc
sbb
jge
cmp
mov
sbb
addl
jno
and
add
cmp
mov
lret
cli
lods
inc
push
inc
inc
cmpsl
mov
sub
or
push
lret
cli
dec
dec
and
dec
mov
mov
fs
int
dec
push
fistl
clc
test
push
cld
and
ficompl
sarl
pop
cltd
xor
add
fldenv
negl
xchg
adc
jmp
lds
negl
and
push
mov
jmp
test
xchg
sub
fs
fcomps
cli
lods
lret
push
cld
inc
xor
xor
lods
test
lds
xor
iret
cmp
and
pop
pop
inc
nop
adc
mov
dec
sbb
and
iret
call
inc
sti
inc
xor
pop
fdivl
xor
and
cli
popf
imul
sbb
pop
fucomi
imul
bound
jo
lret
test
xchg
mov
add
rorb
clc
cmp
fbld
test
add
dec
dec
pop
cmpsb
and
mov
add
loopne
mov
push
inc
pushf
stc
clc
push
fucom
mov
mov
lcall
xlat
mov
mov
push
in
or
out
inc
je
ss
cmpsb
and
inc
mov
pop
ficompl
mov
test
xchg
push
bound
mov
mov
pushf
xchg
jbe
dec
test
jl
add
jnp
xor
push
push
cli
lea
cmpsb
sub
push
xchg
fistps
jmp
pop
testb
aaa
cmc
leave
jb
inc
sahf
xor
cmpl
fldl2t
clc
arpl
push
lock
mov
sub
mov
jb
cld
iret
xchg
imul
xchg
xchg
cs
ret
add
or
addb
xlat
sti
fists
mov
inc
lret
fldl2t
or
pop
aad
mov
push
jecxz
mov
insb
mov
loope
and
out
fdiv
in
push
rcr
ja
rclb
pop
loop
daa
fwait
and
std
loopne
push
scas
add
js
out
addr16
in
insl
xchg
adc
mov
mov
dec
arpl
cmpb
pop
jecxz
xchg
inc
mov
adc
adc
rclb
xor
addb
rolb
decl
xor
jle
xor
mov
xchg
xor
push
fmull
inc
hlt
adc
sub
out
jne
xor
aam
ficoml
cmpsb
test
pop
xor
mov
in
or
lods
mov
rorl
popa
int
push
xchg
mov
add
pop
movsl
or
loope
test
and
or
adcl
in
sbbb
lcall
divb
shlb
in
and
jb
add
jo
push
hlt
push
aaa
add
es
ss
test
push
adc
inc
jne
jle
cmp
in
mov
mov
or
push
inc
pop
xor
pushf
cmp
pop
or
subb
lahf
dec
mov
jbe
xor
lcall
and
jl
dec
stos
jne
sub
mov
nop
jge
pop
aad
push
repnz
rcrl
bound
and
inc
movsl
jle
es
cmp
dec
mov
fidivrs
stc
addr16
andl
cli
pop
call
mov
arpl
dec
sbb
xchg
sub
mov
rcr
pop
outsb
mov
or
fldcw
cmp
aaa
pop
mov
mov
jl
pop
xchg
loope
ret
inc
imul
cmp
dec
jecxz
pop
jmp
cmp
push
jb
inc
jns
jae
filds
pop
add
adc
push
aaa
mov
fildl
inc
cmpsb
movsl
and
int3
or
or
or
jl
jg
xlat
dec
inc
or
cld
insl
push
jne
add
xor
cmpsb
dec
cs
sub
mov
push
mov
aas
dec
pop
repz
aas
sahf
cmpl
adc
shlb
je
mov
mov
arpl
rcll
fistps
movsb
cwtl
out
enter
mull
push
xchg
in
dec
jg
ss
cmc
jle
mov
xchg
mov
jle
dec
lock
jge
push
lock
push
add
lcall
mov
out
jmp
outsl
aad
sbb
into
je
add
outsl
sbb
or
pop
cmpb
xor
jnp
xchg
and
xchg
jne
js
and
les
lods
pop
add
shll
cld
sahf
mov
scas
inc
mov
pop
lods
inc
stc
sbb
jecxz
mov
repz
or
jne
push
push
sbb
dec
cld
xchg
jnp
les
dec
sbb
fnstsw
lret
mov
cli
test
in
flds
hlt
enter
adc
daa
cmp
das
inc
mov
lock
fbstp
xchg
fsubrl
aas
shrb
gs
std
jg
les
xchg
mov
dec
shlb
sti
xchg
mov
sbb
insb
inc
sahf
scas
dec
repnz
cmp
and
mov
and
push
push
add
repz
pushf
outsl
dec
sbb
lea
dec
and
fwait
scas
sahf
in
pop
mov
repz
mov
sbb
inc
aaa
dec
jge
insb
sub
movsb
jne
mov
sub
sub
test
fcmovu
testb
insb
pop
sub
and
lock
aam
push
mov
movsb
cmp
add
and
in
test
mov
push
xlat
fiadds
push
clc
test
rcrb
xchg
jl
adc
je
pop
sub
adc
xchg
aad
cwtl
pop
fsubr
mov
pusha
pop
mov
and
out
jbe
sbb
add
scas
cmc
enter
adc
lahf
int3
mov
pop
add
scas
rol
lret
bound
mov
jle
adc
push
mov
cmpsb
cmp
inc
les
xor
pop
cmp
jnp
mov
dec
cmpsl
jp
frstor
iret
fldpi
cmp
sub
lods
mov
and
inc
cld
sbb
jae
popf
aaa
add
cmpb
test
jnp
sbb
dec
jle
cltd
or
aaa
mov
inc
mov
adc
stos
inc
punpcklbw
scas
aas
dec
xor
arpl
loopne
xchg
sbb
mov
outsb
dec
insl
mov
and
pop
popf
xchg
mov
stos
fs
mov
mov
sub
and
nop
jp
fsubrs
sub
movsl
mov
or
xlat
add
imulb
imul
lods
in
cmpsl
rolb
sbb
cmp
lahf
cmpb
cmpsl
mov
das
outsb
dec
loope
sahf
inc
sub
pushf
stos
jmp
fisttpl
fistpll
push
cmp
imul
push
xchg
test
mov
imul
call
cmp
iret
outsl
cmpsb
std
sbb
imul
adc
aaa
sbb
je
sbb
testb
notb
mov
mov
push
ja
cwtl
cmp
jbe
stc
adc
push
ret
pop
in
xchg
cmpsl
stc
stos
xchg
and
hlt
pop
mov
out
xor
mov
adc
lds
aam
add
mov
sub
or
inc
test
inc
std
scas
or
cmpsb
es
js
push
ss
ja
or
pop
notb
xchg
add
xor
scas
out
les
lcall
lret
cld
mov
add
dec
aad
in
in
insl
or
push
dec
pop
outsb
popf
and
mov
ds
jae
mov
cli
in
xor
sti
outsl
jg
jg
mov
stc
jle
jge
popf
push
test
sbbb
jge
xchg
lcall
jo
lods
cmp
lahf
mov
and
stc
sbb
cs
xor
sbb
add
dec
imul
lcall
dec
loope
jle
outsl
dec
jb
add
notb
push
incb
sbb
and
xchg
add
cmp
jmp
aam
inc
push
ret
les
push
dec
push
jmp
lea
inc
dec
xor
push
lds
ds
sbb
push
loop
fdivrs
xchg
scas
push
mov
and
jp
add
sbb
mov
cltd
adc
dec
mov
aam
loopne
push
cmp
jnp
out
rcrl
or
pop
mov
popa
xchg
aas
push
cwtl
aas
movsb
test
mov
sbb
popf
outsb
scas
xchg
mov
add
bound
int3
cmp
mov
mov
fcoms
aaa
sahf
xor
aaa
iret
mov
pusha
xor
sbb
je
ret
outsb
mov
lds
jmp
xchg
cltd
jecxz
mov
ret
lds
rorl
xchg
sub
ret
outsl
clc
ss
adc
mov
cmp
sub
aas
mov
jno
mov
push
rclb
jae
jl
nop
out
out
js
sti
ret
outsb
jmp
idivl
inc
mov
cmpb
icebp
push
loope
mov
inc
dec
pop
mov
int
fnsave
js
fucomp
lret
jl
or
mov
xorb
hlt
dec
push
outsl
mov
out
xor
jmp
dec
fstl
mov
mov
mov
scas
sbb
loopne
sarb
call
test
lds
cld
inc
popa
mov
pushf
mov
xor
lret
idivl
add
mov
sbb
aam
pop
xor
ss
lods
cld
mov
mov
dec
rorb
ret
rorl
mov
fs
and
and
inc
stc
sub
les
push
addr16
xor
push
push
adc
into
mov
leave
inc
aam
push
cmp
inc
adc
sub
movsb
pop
inc
xchg
in
loopne
add
sub
fcom
add
ret
lods
cmp
inc
ret
roll
aaa
or
mov
insl
jg
les
pop
insl
cmp
sub
jno
jg
enter
ja
lret
dec
adc
fucomi
cmp
cmc
fwait
inc
sub
mov
cmp
lock
pop
fwait
xor
insb
cmp
imul
dec
les
dec
pop
add
pop
inc
pop
aam
dec
pop
loop
cmp
xor
ret
cmc
jo
fidivl
mov
mov
lds
xchg
adc
test
sbb
xchg
sub
jecxz
add
loopne
lcall
lock
fs
dec
sti
jp
adc
dec
cmc
xor
fldcw
add
scas
inc
stos
mov
sbb
jb
cli
jg
fldcw
mov
adc
shlb
leave
or
dec
lock
int3
push
adc
sbb
in
push
imul
fistpll
add
sbb
xchg
mov
push
sbb
into
cli
sub
popf
cmp
lret
inc
cld
outsl
inc
adc
or
fisubrl
lret
mov
jmp
stc
mov
jge
nop
mov
xchg
mov
data16
bound
jp
cmp
cmp
sub
mov
inc
inc
sbb
sti
xchg
out
mov
jnp
adc
mov
cmp
jnp
outsb
jp
das
shrb
fsub
mov
aaa
lahf
cmc
inc
in
xor
inc
mov
dec
loopne
push
adc
lcall
and
out
pop
dec
push
daa
mov
pop
jb
test
sbb
xchg
dec
in
ret
pusha
jp
das
cmp
stos
sbb
filds
inc
sbb
ficompl
mov
push
push
pop
or
out
jle
mov
cltd
sahf
inc
int
sub
shrb
or
pop
incl
pusha
pop
mov
xchg
push
jbe
out
stos
mov
xchg
cs
xchg
mov
mov
cli
shlb
cmp
mov
shlb
insb
aaa
or
out
ss
mov
mov
aas
dec
icebp
jge
testb
das
jnp
push
cmpsb
and
add
push
in
mov
pop
pop
clc
test
popa
or
dec
mov
push
pop
push
movsl
loopne
mov
aaa
test
add
out
aaa
and
addr16
and
jge
and
in
cli
test
sbb
inc
jns
mov
incl
mov
xchg
cmp
stos
mov
fucom
cmpb
adc
mov
jmp
sbb
lds
jb
jnp
shr
mov
aad
pop
add
rol
out
lods
outsl
xor
jle
dec
and
jo
xor
cli
aad
xchg
stc
test
xor
aaa
pop
or
add
adc
lock
insb
idivl
mov
mov
mov
jae
or
xchg
sub
sub
arpl
jne
rclb
into
jne
sti
ret
and
xchg
lsl
std
pop
push
xlat
test
fdiv
lcall
mov
scas
int
push
lret
int3
and
dec
arpl
mov
dec
push
xchg
mov
pop
icebp
movsl
inc
dec
jns
nop
test
push
fistpl
pop
out
mov
jg
pop
mov
ficomps
add
enter
outsb
mov
pop
stos
cmpl
pop
jge
add
mov
jae
outsl
in
fstps
mov
icebp
movb
inc
rorl
fsubs
fdivrs
fistpll
dec
pop
pop
dec
add
je
rdtsc
cmpsb
psrlq
gs
inc
cmp
mov
mov
sahf
mov
pop
xchg
stos
stos
and
xor
mov
jmp
pop
lods
ljmp
xchg
and
cmpb
shl
push
mov
cmp
mov
stc
dec
div
and
cmp
loopne
xor
xchg
jns
ja
mov
pop
int
adc
mov
lea
mov
inc
jno
fcoms
xor
in
mov
aam
loopne
mov
dec
sbb
inc
in
xor
mov
pop
inc
push
push
mov
xchg
gs
or
mov
jle
into
and
scas
mov
repz
imul
lea
xor
leave
popa
xor
adc
mov
inc
inc
leave
lods
inc
sti
test
dec
pop
pop
incb
aad
dec
movsl
cwtl
and
mov
add
cmpsl
gs
arpl
cmp
add
loopne
test
dec
mov
aas
les
cltd
xor
ja
mov
pop
scas
ret
mov
std
fsub
cmp
xchg
test
data16
inc
jl
xchg
fsts
cmc
push
insl
adc
imul
mov
fwait
adc
shlb
stos
push
sub
adc
movsb
fidivl
les
mov
adc
and
in
pushf
hlt
shlb
push
in
push
cmp
mov
test
ret
pop
xlat
movsb
push
fmull
jbe
push
out
dec
loope
inc
fsubr
jb
stos
inc
lcall
mov
pop
pop
stc
push
mov
mov
lods
pop
xchg
fldcw
or
pop
and
push
jb
fstpt
mov
stos
pop
pop
xor
lea
cmp
in
subl
cmp
mov
test
out
add
pop
cmp
scas
pop
aam
cld
or
ss
push
rcl
loope
stos
inc
jo
testb
push
cmc
inc
xlat
mov
cmp
jp
shl
push
add
xor
clc
stos
push
cmp
je
insl
push
sbb
lret
jbe
sbb
outsb
and
lods
and
pusha
out
inc
xlat
pop
jbe
mov
mov
adc
lods
mov
and
shll
in
fldl
adc
push
adc
in
push
gs
cmpb
jp
out
adc
inc
mov
sub
pop
xlat
sbb
ss
in
out
or
cmp
dec
fidivrl
loopne
jne
pop
loope
insl
imul
pushf
mov
or
jnp
loopne
jmp
pop
scas
or
nop
ss
sub
into
imul
and
sbb
mov
mov
mov
imul
and
lret
mov
cmp
mov
mov
sub
lods
xor
jecxz
jl
cmpsb
mov
mov
or
add
cmc
ja
mov
nop
and
into
xor
mov
sub
pop
out
jnp
sub
pop
mov
in
cmp
std
ret
hlt
sbb
and
dec
fildll
fsubl
sbb
mov
shlb
xchg
mov
jmp
pusha
sbb
add
sbb
ret
dec
in
mov
mov
js
ss
dec
into
add
jbe
and
pop
fcmovu
cld
or
popa
clc
popf
cmp
xchg
add
divb
push
push
sub
jmp
or
jg
ds
loopne
rcrb
inc
cs
xor
rcr
lock
adc
xor
xlat
out
adc
leave
cmp
sub
ja
mov
mov
add
repnz
daa
inc
xchg
sbb
int3
daa
rcrb
push
das
pop
movsl
stos
rcrb
je
dec
data16
je
cmpsw
mov
aad
into
xchg
out
inc
xor
lods
jmp
fs
jle
lret
mov
sbb
mov
sub
push
and
dec
pop
cmpsb
popl
mov
push
xchg
je
and
push
inc
icebp
pop
loope
cmp
inc
test
out
dec
pop
mov
int
stos
outsb
cs
jno
jecxz
pop
jbe
sub
cmc
mov
es
es
lcall
sti
dec
shrl
xor
push
pop
daa
mov
rcll
push
adcl
imul
mov
cmpsb
add
xlat
pusha
jno
cmp
insl
lea
outsl
push
jge
cli
and
popa
mov
mov
dec
jle
jge
push
and
push
xchg
loope,pt
or
pusha
stos
cmc
in
iret
rorb
cmp
std
mov
xor
out
pop
roll
pop
repnz
jo
mov
in
outsb
in
sbb
push
jno
ficompl
popa
add
adc
adc
sarl
xor
movsb
xchg
xchg
mov
lcall
cmp
pushf
scas
xlat
mov
test
shlb
fists
subl
jns,pt
andl
xchg
cmpsb
ret
decl
mov
pop
jno
leave
mov
lret
ds
add
xor
mov
arpl
test
inc
jb
jge
xchg
mov
push
jno
jmp
mov
dec
xor
fidivrs
jl
mov
cmpl
push
sahf
clc
adc
mov
push
inc
out
sbb
jne
inc
icebp
cli
and
pop
stos
or
imul
fstps
pop
push
inc
notl
scas
push
iret
mov
sbb
int3
ja
arpl
adc
je
dec
xor
cltd
arpl
test
sbb
pop
jmp
iret
mov
push
pop
inc
and
sahf
cmp
and
mov
mov
call
cmp
mov
sub
out
out
dec
fcmovnb
stc
repz
fucom
ja
std
adc
stos
in
movlhps
jge
jnp
andb
scas
fcmovne
adc
fadds
hlt
sbb
scas
sub
jnp
scas
mov
xor
out
sub
loopne
mov
imul
imull
ljmp
mov
loopne
adc
jns
loopne
xor
mov
cmp
or
sbb
sub
adc
sub
add
cmp
ret
inc
add
push
dec
mov
dec
cmp
ret
adc
adc
clc
jae
pop
jl
dec
xor
push
in
outsl
pop
mov
dec
pop
jmp
adc
lret
adc
je
xchg
insl
leave
push
fdivs
xchg
hlt
pop
push
xor
mov
stos
cmpl
inc
popf
sbb
mov
aaa
in
fsts
mov
or
push
psllw
jno
enter
push
andb
push
lcall
sahf
dec
bound
sub
sub
sub
dec
lods
out
adc
test
in
mov
and
notb
xlat
mov
sub
jno
dec
sbb
mov
stc
pop
lock
mov
ror
data16
pop
nop
fcompl
repz
mov
scas
addb
and
adc
sub
adc
jnp
test
push
pop
push
cltd
xor
jg
gs
mov
push
mov
mov
add
lock
es
push
in
fwait
test
iret
scas
or
jo
lahf
test
jb
dec
push
ja
cltd
int
ds
cmp
jne
sahf
rclb
jns
dec
dec
fdivp
lods
pop
pushf
adcb
adc
test
pop
test
add
mov
cmpsl
inc
fmull
pushf
push
and
cmp
test
les
ret
mov
inc
push
and
js,pt
jnp
pusha
in
jbe
jge
jns
sbb
enter
sbb
mov
or
je
into
cmpsl
sbb
pushf
push
dec
loopne
outsl
mov
incb
out
in
test
xor
mov
in
inc
cltd
mov
lret
cs
icebp
and
aad
mov
scas
test
into
xchg
call
mov
lahf
pop
aas
push
mov
push
loopne
aad
cmp
outsl
mov
cmp
xor
pop
imul
xorb
bound
mov
push
push
mov
aas
movl
xorb
sub
hlt
pop
push
test
mov
aam
andb
cmp
and
adc
cmp
sbb
stc
inc
dec
adc
and
sub
es
adc
loop
sbb
xchg
jb
mov
jne
sbb
lret
jns
fldcw
imul
faddp
flds
test
loop
or
mov
or
out
test
sbb
sub
add
stos
ljmp
adcl
xchg
and
push
idivb
and
push
imul
mov
lods
je
js
icebp
test
mov
inc
push
fstl
adc
loope
xchg
push
rcll
adc
jp
xchg
std
enter
pusha
in
inc
cwtl
lret
pop
lahf
push
mov
stc
jecxz
ret
push
js
jae
mov
cmpsb
jns
pop
push
stos
pushf
lock
xchg
lods
stos
test
andl
dec
cmp
adc
sub
fsubl
mov
insb
mov
enter
daa
inc
test
repnz
ret
ljmp
stc
pop
pslld
mov
and
xchg
shlb
rol
push
mov
popf
mov
sbb
fstpt
push
out
lods
mov
ljmp
xor
loope
enter
or
inc
xchg
cs
ds
arpl
out
mov
xchg
mov
dec
lret
outsb
stos
and
pop
int3
cmc
mov
int3
adc
pop
repz
in
inc
data16
jno
lds
test
pop
xor
stos
pop
test
mov
push
and
addr16
jg
jne
jl
test
xchg
stos
imul
scas
inc
shll
sbb
dec
dec
nop
repnz
rcl
xor
sbb
pmaxub
fdivrs
push
jae
ja
out
xor
call
iret
mov
mov
push
aad
int3
sbb
loope
sti
jb
jbe
ret
cmp
adc
pop
pop
or
sub
out
sti
ds
or
jae
and
inc
push
add
sbb
mov
jno
push
mov
repz
xlat
mov
cwtl
gs
pop
cmp
mov
xchg
je
mov
sbb
pop
dec
pop
ret
hlt
jge
cmp
leave
pusha
mov
sahf
mov
xchg
stos
ss
jl
inc
or
ds
ret
inc
inc
fdiv
pop
lret
lahf
adc
rolb
xchg
daa
adc
fmull
xor
outsb
xor
mov
mov
lods
rcrb
gs
cmpb
test
mov
sahf
inc
push
xchg
scas
lahf
mov
je
out
movsl
hlt
sbb
add
push
pop
stos
and
cs
orb
mov
inc
fmul
cmp
loop
and
shrl
jl
lea
popf
in
dec
jo
leave
out
cmp
xchg
ljmp
fisubs
lock
push
add
movsl
and
jne
repz
andl
dec
js
push
sti
sbb
lcall
cwtl
push
dec
mov
aam
in
rclb
pop
mov
ja
orl
jp
add
frstor
xchg
fnsave
xchg
dec
in
sti
jbe
nop
out
adc
cmc
push
fsubs
jbe
aam
pop
jae
cld
js
aaa
push
mov
rcrb
outsl
sbb
insb
mov
xchg
int
iret
inc
sub
mov
and
fwait
xor
xchg
push
aad
xor
icebp
je
aam
pusha
fdivrp
push
dec
adcb
or
scas
and
xchg
dec
cld
push
mov
stos
js
sub
testb
or
test
stos
and
mov
cmp
adc
or
sarb
pop
jl
add
adcl
stc
cmpb
dec
mov
jo
mov
ret
sahf
dec
sbb
sub
test
arpl
push
call
cmp
sub
imul
xchg
pop
cmpsb
lock
mov
shlb
sbb
test
dec
jns
inc
adc
pusha
xchg
pshufw
dec
movsl
sbb
xchg
push
ljmp
pusha
sbb
push
inc
mov
pop
jmp
push
aad
mov
mov
mov
sti
push
es
pop
test
fbstp
mov
inc
mov
std
xchg
or
pop
mov
call
fistpll
mov
les
dec
gs
lea
add
arpl
cmc
sbb
imul
sbb
lahf
lret
xor
push
dec
sbb
adc
adc
mov
mov
rcll
jbe
jae
imull
and
ss
add
xor
pop
mov
insl
cmp
sub
cwtl
ror
mov
mov
in
add
jge,pn
jmp
dec
ret
pop
mov
fldl
mov
adcb
sbb
dec
push
cld
xchg
dec
leave
fcomi
cmp
pop
repnz
push
adc
andb
std
fisubl
shll
ljmp
lea
xchg
and
aam
mov
jl
cli
imul
mov
mov
lcall
xor
icebp
push
call
sbb
enter
punpcklbw
nop
push
aaa
jp
mov
add
push
mov
ret
cltd
xor
insl
pop
repz
sarl
add
push
cltd
lock
pop
xchg
push
add
adc
int
cmp
into
add
xchg
es
jge
mov
mov
test
mov
ljmp
pop
pop
das
clc
loopne
repnz
cmc
jns
dec
adc
mov
push
mov
je
jecxz
movsl
inc
adc
cmp
dec
cmpsb
xlat
aaa
dec
mov
nop
cmpsw
nop
cs
mov
imul
xor
ficoml
loop
iret
ret
mov
das
jno
lock
or
mov
sub
in
lcall
sbb
or
sub
loopw
push
je
aaa
mov
movsl
dec
push
test
cmp
jno
cmpsl
idivb
adc
dec
daa
mov
xchg
inc
fcompl
mov
out
push
arpl
je
and
das
insl
mov
daa
xchg
adc
push
lock
ja
push
jle
outsl
insb
xchg
test
insl
rcrl
xchg
loop
into
decl
cmp
ret
hlt
loop
and
and
inc
adc
shlb
lods
iret
mov
cmp
int
repz
cmpsb
ret
push
push
lock
adc
mov
dec
cmp
imul
iret
sub
hlt
lock
fnstsw
mov
lds
testb
xchg
rcl
mov
cmp
push
push
pop
sbb
or
xor
cmp
imul
xchg
stos
test
jb
add
adc
adc
out
mov
pop
sarb
adc
cmp
lahf
pop
mov
add
jbe
xchg
ja
and
add
cltd
mov
xchg
js
sub
inc
push
mov
clc
lock
popf
fs
ret
sbbb
pop
imul
jmp
imul
dec
xchg
jg
xchg
jo
pusha
leave
jbe
cli
xchg
jmp
repnz
insl
lcall
mov
insl
int3
mov
lods
mov
int
inc
mov
cli
mov
sbb
lahf
rorl
jns
cmp
xlat
shr
clc
call
or
xchg
ret
shld
mov
gs
xchg
roll
fsqrt
or
mulw
repz
pushf
sub
movsl
mov
clc
pop
ret
cmp
mov
push
mov
and
lret
add
mov
mov
push
shlb
jns
mov
or
cmpsb
lods
es
out
les
or
and
lahf
std
xchg
dec
adc
ja
pop
lret
xor
mov
or
dec
or
insl
pusha
mov
inc
aad
lcall
cmp
push
inc
lds
es
shlb
loop
jno
and
adc
sub
stos
adc
mov
dec
adc
sbb
repz
hlt
pop
sub
cwtl
sti
test
pop
mov
fnstcw
popl
pusha
xlat
push
push
jmp
decl
jge
sub
inc
or
cmpb
add
mov
xchg
popa
cmp
dec
push
mov
jle
or
data16
push
jae
shlb
sarb
seta
movl
shl
in
or
dec
rcrl
inc
jl
push
movsl
mov
aas
insl
push
cmpb
xchg
pop
repnz
xor
and
xor
aad
add
jp
cmpsl
lods
and
call
mov
mov
cmpsb
inc
or
xor
filds
adc
out
shrl
cld
cmp
mov
pop
test
push
rcll
jle
daa
cltd
fsubrp
std
dec
jmp
stc
int3
mov
insb
popf
mov
mov
lcall
fldt
sub
fisttps
mov
xor
outsl
shll
adc
fsubrs
mov
cmpsl
jae
f2xm1
inc
sbb
jae
fnstcw
iret
pop
sbb
pusha
hlt
sub
cmp
dec
or
loope
mov
jb
jmp
outsb
sbb
mov
pop
dec
pop
lahf
xor
cmpsl
pop
clc
fadds
pop
xlat
mov
jne
sbb
daa
push
adc
push
repz
out
adc
pop
xchg
sbb
xor
and
mov
daa
arpl
incb
and
std
xor
sbb
push
inc
push
xlat
cmc
sahf
cmp
insl
xor
add
push
in
or
xchg
xchg
mov
fdivr
xchg
je
inc
stc
and
lock
push
js
push
add
cmp
mov
sti
div
sahf
xor
cmp
insl
test
pop
mov
sub
lds
inc
jae
sbb
out
mov
xchg
sub
pop
movsb
das
pop
test
aaa
or
testb
or
jge
sti
or
shl
ret
inc
push
fsubr
inc
outsl
xchg
out
xchg
jmp
sub
or
add
jecxz
push
xchg
mov
push
jl
xchg
sub
add
mov
cmp
sbb
jp
outsb
nop
xlat
sub
mov
test
push
and
aam
cld
scas
imul
repnz
fstp
les
pop
xchg
lret
push
pop
and
out
repnz
daa
stos
inc
loope
test
cmp
pop
dec
cmpsb
stos
add
lods
pop
stos
addr16
jg
es
xchg
push
inc
fdivrs
mov
xchg
lods
pop
insb
in
adc
push
sub
push
sahf
push
cltd
test
pop
mov
fnsave
and
push
scas
sbb
jns
dec
incb
aas
pop
repnz
xchg
insb
pop
rorb
pop
enter
xchg
or
test
or
aam
or
inc
pop
frstor
popf
sbb
ljmp
testb
lods
xchg
jmp
ret
bound
fimull
scas
xor
inc
clc
test
movsl
mov
enter
sub
lea
bound
lahf
cmp
sbb
leave
out
rolb
inc
clc
jp
xchg
cs
jbe
dec
sub
jle
pop
mov
mov
and
dec
sar
xchg
xor
or
inc
imul
scas
aam
shrl
in
les
add
dec
dec
pop
ljmp
out
pop
arpl
add
ds
add
mov
fxam
in
ljmp
push
std
mov
xchg
negl
pop
std
sbb
jp
jl
xchg
hlt
mov
pop
and
insb
flds
repz
and
clc
scas
mov
lods
push
jle
ret
test
xor
push
cmpl
enter
xchg
roll
sbb
aaa
push
sahf
gs
dec
in
arpl
arpl
ret
and
or
popf
xchg
aad
jae
aam
lcall
in
arpl
jno
gs
aam
lret
bound
mov
int
in
pop
jne
or
and
mov
mov
sub
loopne
mov
and
lcall
sub
cmp
mov
mov
sahf
shlb
adc
popa
stc
incb
dec
jb
sti
out
test
sbbl
jno
stc
xchg
inc
fsub
cs
adc
fidivs
roll
and
test
outsb
mov
or
daa
out
sbbb
pusha
imull
cmp
xor
xchg
sbb
cmp
aad
rcll
imulb
ja
mov
jle
insb
ja
in
aas
sbb
mov
or
ret
jb
cmpsl
xchg
outsb
mov
jmp
fdivrs
mov
lods
lock
je
cld
int
test
ret
push
inc
jle
les
mov
dec
push
mov
jg
sti
add
shrl
test
leave
les
jle
sbb
mov
mov
mov
xor
mov
xchg
mov
pop
adc
cmp
add
jne
lahf
icebp
or
shl
sub
fs
pop
jae
notb
js
ret
dec
pop
sub
out
jo
fisubrs
adc
fdivrs
sub
add
mov
sub
addb
mov
clc
push
jae
mov
andb
inc
push
cmovg
and
in
mov
int
cmp
mov
push
cmp
sbb
outsb
les
cmpsb
andb
int
jo
shrl
xor
in
jb
loope
test
inc
lret
das
bound
shll
mov
out
push
sub
cmp
pop
jecxz
das
shlb
cmp
push
rcl
cmp
cmp
call
xchg
mov
sbb
xor
jle
ret
loope
dec
seta
push
or
out
popf
push
jb
test
rcr
les
lret
addr16
mov
jl
pop
dec
jl
xchg
dec
fwait
inc
cltd
inc
mov
xlat
outsb
jbe
fwait
cs
jp
cmpsb
sub
add
mov
jb
or
sub
sbbl
xchg
xchg
scas
popf
xorl
cmc
fimull
shl
xchg
stos
sti
lds
sub
stc
or
scas
mov
lret
movb
sarb
shrl
mov
xchg
rep
nop
ss
cwtl
pop
out
lret
mov
bound
cwtl
jbe
mov
frstor
sub
mov
cmpb
test
pop
fsubrs
lcall
inc
jg
insb
sbb
fwait
xor
js
out
dec
mov
insl
and
xlat
insl
sub
dec
hlt
push
jb
outsb
xchg
nop
push
pushf
mov
rolb
int
jge
xchg
movsl
sub
xor
pop
xchg
jl
add
popf
push
jg
test
cmp
xor
jl
inc
jno
lock
loope
cmc
xor
movsb
add
fstpl
test
mov
cmp
sub
fsubrp
or
sbbb
add
je
push
xor
push
xor
sarl
push
sti
cmp
sbb
ret
cld
into
fdivl
cmpsl
addb
sub
leave
lock
jmp
sbb
jns
lea
xchg
cmpsb
les
cs
xchg
inc
cmp
pop
xchg
cs
das
mov
out
xchg
repz
jl
ds
mov
in
mov
inc
xor
and
mov
fadds
and
push
and
inc
test
fldl
xchg
lcall
sbb
loopne
test
jp
pop
add
pop
and
call
cmp
xor
iret
jmp
sbb
add
push
sub
mov
mov
push
pop
jmp
pop
std
mov
cmpsl
lret
int3
fdivr
repnz
enter
sbb
pusha
adc
imul
mov
ficoms
lods
and
movl
dec
call
cmp
stos
lea
xchg
mov
cmpsb
push
mov
and
cmp
imul
push
mov
shl
cli
add
ret
shrl
ss
jle
icebp
stos
cs
pop
and
xchg
pop
negl
adc
inc
pop
cli
push
mov
xchg
insb
lods
xor
dec
lahf
ss
xlat
das
sub
sahf
sbb
and
and
push
cmp
roll
sbb
out
int3
mov
mov
test
and
push
or
cmc
pusha
pushf
xor
pop
jb
dec
sub
in
sub
and
or
scas
pop
add
fdivl
xor
shlb
into
ja
je
outsb
aad
lea
fisttpl
in
cmp
mov
cmp
push
xchg
sbb
mov
fwait
aam
mov
movl
mov
ret
or
arpl
aas
dec
jle
or
int3
adc
fbstp
jge
xor
mov
arpl
pop
cmpsl
dec
push
add
scas
lods
inc
cwtl
sbb
xlat
jmp
in
test
mov
add
push
sub
mov
cli
or
add
mov
pop
pop
dec
and
inc
loop
lcall
fdivrs
insb
punpckhwd
ret
lcall
dec
and
mov
lods
xor
sub
jne
lds
add
pusha
or
nop
popa
dec
outsb
add
fucomp
adc
test
scas
inc
movsl
cmp
pushf
mov
movsl
test
xorb
xchg
repz
adc
mov
das
sub
aaa
test
bound
sbb
or
fs
je
dec
dec
fists
add
lret
and
push
inc
enter
mov
add
pop
pop
mov
fisubs
dec
pop
dec
aas
mov
repz
test
lods
stos
mov
or
add
into
loop
mov
icebp
pop
outsl
pop
loop
dec
pop
sti
add
gs
aaa
mov
fwait
mov
fwait
or
cld
pop
xchg
jb
insb
sub
outsl
orl
sub
xor
fsubrs
iret
pop
jno
dec
inc
fidivrl
jo
adc
stos
inc
out
adc
push
addl
xchg
pop
movsl
in
sbb
inc
jge
xchg
xor
sbb
gs
sub
das
cmp
lahf
push
fisttpll
jle
sub
lock
stc
js
push
test
clc
stos
jnp
sub
data16
sub
ds
jp
aad
in
dec
add
dec
sbb
int3
inc
jge
hlt
mov
ret
inc
xor
pop
in
icebp
icebp
das
loop
movsl
cltd
das
mov
aaa
aas
and
popa
mov
call
adc
cmp
pop
hlt
stc
jo
divl
shlb
sub
sti
add
mov
cmp
fcoms
jbe
dec
and
pusha
mov
jl
cmpl
int
outsl
adc
add
xchg
mov
stc
addr16
xchg
dec
arpl
std
xchg
out
pop
xchg
sbb
out
cmp
shlb
out
sub
fs
hlt
loop
lcall
xrelease
aad
mov
xor
es
inc
aad
inc
xlat
cwtl
jb
fisubrl
mov
test
cmpl
addr16
pop
jne
test
or
out
ret
lods
ret
or
push
call
popf
fidivl
xchg
je
push
fucom
inc
dec
in
push
sbbl
xor
call
std
ds
xor
fcoms
mov
inc
fs
mov
inc
xchg
sub
xchg
push
lock
mov
fsubrs
inc
mov
inc
pop
in
pop
out
cmp
shrl
les
mov
dec
cs
pop
jp
scas
sub
movsl
cwtl
inc
push
jae
into
push
in
jmp
inc
pop
fwait
je
pop
neg
jno
jp
add
call
mov
xchg
mov
push
xor
xchg
jnp
repz
scas
ficoms
dec
fildll
pop
push
in
pop
or
adcb
out
popa
push
nop
nop
inc
out
jno
int
xchg
jb
scas
aas
and
xor
cld
xchg
dec
aam
push
and
pop
lods
ja
fwait
mov
sbb
mov
imul
xchg
clc
test
push
pop
and
xchg
mov
inc
sub
sti
in
pusha
mov
inc
mov
adc
mov
add
sub
inc
push
data16
rorb
aas
mov
movsl
repnz
jecxz
jl
pop
jle
out
jl
adc
js
pushf
xor
pop
inc
and
enter
call
test
mov
testb
cmc
bound
shlb
or
xor
mov
in
repz
and
and
aas
or
stos
push
lods
nop
xchg
and
repnz
mov
mov
mov
or
xchg
sub
inc
jae
pop
insb
subb
repz
cld
lcall
test
add
mov
mov
insb
mov
loop
ds
out
sti
pop
cmp
pop
in
lods
rcr
ljmp
sbb
stos
xchg
xor
push
loope
fs
mov
fisubs
lret
sbb
or
adc
sub
test
icebp
mov
or
mov
xor
ljmp
in
jl
lret
xlat
fwait
gs
lahf
mov
aaa
pop
jbe
enter
mov
adc
mov
inc
xor
mov
into
fstp
cwtl
mov
jmp
out
insb
mov
jle
pushf
mov
adc
mov
mov
pusha
add
jp
xor
lret
fidivl
pop
xchg
sub
out
nop
xor
jb
cs
pop
mov
sub
and
les
sub
mov
test
mov
mov
sub
jae
mov
cmc
jns
in
scas
inc
pop
popf
lahf
pop
aas
or
fisttpl
and
mov
cmp
aas
pusha
jmp
mulb
mov
jg
pusha
test
lret
shlb
inc
mov
mov
adc
test
movl
fmuls
mov
mov
lods
icebp
pusha
ss
xlat
push
out
in
dec
stos
in
pop
ss
loopne
adc
pop
int3
int
sbb
cmp
mov
mov
lahf
sarl
andb
mov
cmc
out
push
cmp
inc
sbb
inc
inc
cmc
shrl
pusha
cmp
lods
cs
xor
scas
xchg
cmpsl
imul
aaa
gs
cmp
mov
mov
push
sub
mov
mov
ds
fnstenv
testb
mov
nop
xchg
lods
mov
jmp
icebp
xor
jb
adc
sarb
pop
call
or
mov
loope
stc
jne
ret
add
cmc
push
mov
lcall
add
aaa
xor
sti
and
enter
push
mov
inc
pop
lret
bound
cmp
orb
mov
mulb
fstps
adc
rcrb
xor
jbe
jb
addr16
nop
std
push
inc
outsl
jmp
mov
into
lcall
sbb
sub
pop
cmp
rclb
cmpsb
mov
adc
pop
mov
pop
insb
mov
push
and
mov
mov
jle
inc
mov
push
mov
push
inc
in
cs
lret
call
insb
inc
dec
data16
ds
or
sub
pop
out
int3
mov
mov
mov
stc
xchg
enter
imul
cmp
or
cltd
lock
mov
les
fnsave
pusha
loopne
sbb
and
push
add
repz
and
das
loope
and
sti
cmpsl
xor
sub
adcl
pop
ss
xchg
lea
sti
into
insb
sub
inc
and
aas
jb
test
aad
and
mov
xor
ret
lods
dec
shll
inc
pop
inc
stos
ret
push
and
cmp
xor
pop
scas
pop
test
sbb
or
test
mov
inc
movsl
sbb
xor
dec
sbb
nop
xchg
sub
cmc
sbb
insb
add
or
loopne
or
inc
adc
or
mov
xchg
sbb
rcl
imul
push
dec
fldl2t
shlb
scas
call
mov
pop
adc
lds
jbe
inc
das
and
lea
sbb
insb
xchg
jne
xchg
stos
cli
outsb
jl
add
jge
sbb
fistps
jle
fstpt
and
ja
cmpl
pop
aam
pop
lret
clc
push
popf
xor
and
rol
je
mov
call
int
fsubrp
xchg
fimull
xchg
sub
loope
cmc
sub
mov
lret
repz
push
adc
jmp
push
lods
bound
mov
jmp
in
mov
lcall
stc
jno
or
lods
cli
jge
sti
inc
sbb
dec
xchg
mov
xor
shr
or
mov
sub
sbb
test
sbb
loopne
and
repnz
lahf
rclb
sti
js
movsb
insl
out
sub
lock
push
sarl
or
pushf
adc
or
stc
or
insb
jl
sbb
roll
dec
stos
ror
sahf
subl
lcall
pop
sbb
pop
fwait
ret
xor
stos
sub
test
dec
pushf
xor
daa
inc
fcompl
dec
in
mov
out
popa
out
adc
cmc
xor
es
jl
lea
iret
scas
lret
and
mov
nop
inc
mov
fwait
outsb
xchg
inc
mov
xchg
sbb
dec
ret
mov
in
lock
cltd
or
das
out
in
add
sbb
test
mov
les
mov
jg
xor
ret
in
fwait
cmp
out
rclb
jne
add
cmpb
inc
loop
sub
mov
iret
mov
les
pop
jp
sub
call
add
sbb
add
xor
ss
mov
addr16
fldenv
mov
and
mov
add
push
cmp
xchg
imul
add
jg
xchg
popa
dec
push
shlb
test
mov
aam
lods
xchg
or
fsubrs
inc
add
daa
push
or
adc
icebp
ja
xor
mov
push
jp
repz
xorb
xchg
add
adc
or
jl
mov
adc
ss
push
fstp
dec
or
sti
pop
rcrb
sarb
xchg
test
lcall
outsb
mov
aas
cmp
filds
insl
insl
fs
xchg
jo
add
push
sbb
arpl
enter
daa
add
or
or
mov
lods
inc
xor
cmp
pop
mov
movsl
dec
add
jno
rclb
das
jge
push
sub
in
sbb
add
lret
mov
fisubs
inc
faddp
stc
outsl
std
or
aam
xor
aaa
mov
sahf
clc
jmp
repnz
lods
in
fcompp
and
mov
jp
rclb
and
dec
mov
xchg
fcompl
js
xor
call
inc
daa
sbb
mov
sarl
sub
xor
sbb
mov
inc
sub
jbe
jmp
clc
es
loope
cwtl
fwait
sti
stc
inc
sub
xchg
push
imul
jecxz
dec
xor
and
jmp
aaa
or
mov
pop
mov
mov
xchg
out
or
pop
out
test
cmp
add
popa
hlt
cmp
pop
inc
sub
cld
jne
mov
xchg
pop
push
imul
pop
in
dec
add
cmp
pop
jp
fwait
sti
les
jne
mov
jbe
pop
push
cmp
add
jmp
xchg
inc
lcall
outsl
jmp
sarl
scas
std
daa
fldenv
cmpsl
js
xchg
and
push
loope,pt
adc
ret
fistpl
ss
jo
cmp
fstpl
sub
rcrb
mov
inc
sti
dec
dec
in
scas
flds
je
xor
pop
push
jae
sbb
leave
pop
push
add
aaa
shrb
sub
inc
pop
icebp
add
loopne
imul
addr16
movsbl
push
rcrl
je
xchg
mov
leave
icebp
shrb
out
shlb
or
test
cld
sub
cmp
lahf
xor
ret
daa
arpl
pop
push
xchg
pop
imul
dec
pop
cmp
push
sbb
pop
add
mov
mov
dec
ffreep
sub
cmp
scas
sbb
jg
and
sub
sbb
inc
xor
adc
adc
xchg
inc
lret
outsb
push
xchg
xor
lret
inc
cmc
cmp
scas
cwtl
lock
frstor
push
adc
loopne
cmp
in
push
scas
xor
mov
jnp
cmp
xor
bnd
push
repz
cmp
pop
cmc
xchg
sub
push
adcl
mov
push
ud0
fnstcw
scas
mov
rcrl
xchg
adc
cmc
sti
in
mov
ret
push
subb
ret
mov
fisubrs
dec
sub
sbb
lock
push
mov
aaa
or
add
sub
dec
add
xchg
ja
xchg
adc
mov
pop
cli
push
push
test
test
jge
xor
jg
insl
sub
adc
clc
sbb
inc
scas
dec
dec
mov
mov
js
lahf
shlb
push
movsl
sub
and
dec
and
jns
lea
lcall
enter
fldenv
ret
mov
lods
sub
rol
dec
loopne
jecxz
mov
sbb
ja
mov
inc
enter
cmp
mov
push
popf
out
sahf
stos
fidivs
jbe
lret
rorl
pop
pop
in
fwait
mov
or
es
mov
stos
sbb
adc
cwtl
fcmovne
outsl
loopne
mov
addl
int3
cmp
inc
test
xor
jle
mov
and
mov
ljmp
and
adc
adcl
test
lcall
mov
gs
stos
fwait
popl
int
mov
outsl
loope
pop
xchg
jo
jmp
sbb
mov
sahf
or
xchg
ljmp
icebp
and
mov
mov
adc
inc
outsb
dec
repz
adc
icebp
ret
ja
aad
ja
ret
call
xlat
mov
test
mov
sbbb
aam
lods
or
shr
sbb
xor
repnz
push
rorl
push
icebp
jns
mov
testb
mov
rcrb
adc
ljmp
adc
mov
jb
je
pop
xor
imul
cmp
jp
mov
in
push
jmp
aaa
in
xor
aaa
cmp
aad
push
iret
inc
xor
in
and
xchg
or
dec
inc
insl
rorl
decl
loop
jae
xor
mov
ret
dec
mov
or
mov
sbbb
inc
lds
sbb
dec
or
mov
pop
cmp
adc
mov
push
or
shrb
jg
sub
jb
or
inc
ds
jl
sbb
mov
stc
push
movsl
cmp
aaa
and
sarl
lock
mov
push
xchg
mov
shr
cmpsl
add
mov
enter
cwtl
mov
lahf
mov
faddl
push
rol
pop
les
stc
dec
and
enter
cmpb
and
inc
lcall
jno
jecxz
xchg
mov
xor
jae
ret
sarb
adc
fcmovu
mov
inc
les
insl
aas
adc
pop
stc
pop
dec
sub
push
loope
frstor
arpl
mov
stos
inc
ret
sub
or
inc
add
roll
popf
insl
leave
into
sti
jmp
mov
ljmp
inc
xchg
xchg
sbb
pop
adc
jle
popf
mov
mov
cmp
rcl
xor
leave
and
mov
ret
mov
inc
lods
in
xchg
es
lods
inc
push
xchg
jnp
cmc
lret
mov
push
rcrb
mov
mov
mov
stc
addl
add
in
iret
adc
adcb
insb
lds
int3
mov
add
sub
mov
ss
adc
jbe
movsl
arpl
incb
cld
or
mov
int
sbb
clc
pop
ds
jge
pop
insl
adc
mov
imul
scas
mov
das
mov
cwtl
jae
and
mov
mov
sbb
mov
gs
test
adc
repnz
dec
repz
jle
xorb
adc
into
popf
mov
mov
jecxz
mov
adc
rep
test
std
sbb
mov
ret
push
sbb
int
aaa
rcrl
dec
xchg
xchg
fcmovu
jmp
mov
fnstcw
mov
inc
or
mov
or
pop
inc
sbb
popa
cmpsb
out
fistpll
pop
inc
scas
sub
and
jmp
lea
sti
inc
repz
cld
jmp
shl
sbb
ss
push
lods
inc
orb
popf
out
bnd
jle
loop
in
pop
mov
xchg
sub
call
jns
leave
xchg
adc
cmpsb
add
lret
push
cmpsb
outsl
jnp
jbe
cwtl
xchg
sbb
arpl
adc
ss
adc
bound
movsl
fsubr
jge
adc
inc
jp
mov
push
les
loope
push
dec
mov
add
rolb
lds
add
sub
jecxz
mov
das
loope
pop
mov
imul
xchg
mov
or
gs
cmp
subb
stc
sbb
push
dec
repnz
cmp
data16
mov
mov
and
sbb
mov
and
inc
lods
xchg
mov
sub
cmp
icebp
mov
jp
and
cmp
jbe
xchg
adc
or
lret
test
mov
mov
sbbb
shrl
outsl
loop
sbb
mov
inc
cmp
or
ss
sub
push
mov
fsts
xchg
pop
lret
push
mov
test
push
minps
dec
hlt
sahf
cmp
sbb
sbb
adc
cltd
add
es
cmp
out
aaa
push
push
and
shll
lret
loope
jg
jmp
mov
push
iret
lods
loopne
mov
iret
sar
sti
fwait
mov
add
mov
sub
enter
pmaddwd
inc
or
sub
nop
iret
lock
pop
popw
xchg
lea
xor
lods
aas
lea
push
test
dec
aaa
fdivl
cmp
cmc
cmc
mov
rolb
push
lods
fldcw
loop
test
xor
addr16
adc
xor
cmp
lret
pushf
pop
xor
mov
ficomps
adc
leave
pusha
and
shl
cmpsb
mov
fldcw
xor
dec
push
sbb
popf
mov
loop
mov
push
js
lods
push
sti
fwait
stos
outsb
loope
xchg
mov
mov
ljmp
lcall
repnz
jno
insb
or
gs
shrb
sbb
pusha
cmp
mov
shlb
mov
insb
push
repnz
rorl
mov
mov
mov
aas
lret
icebp
mov
inc
enter
xchg
shll
xchg
scas
enter
pop
mov
sub
sbb
xchg
jbe
stos
add
in
int3
fxtract
adc
sub
jmp
or
daa
and
ret
jnp
jo
nop
subb
jnp
pop
cmp
je
js
mov
mov
mov
cmpl
mov
cmpsb
ss
sbb
add
cmp
lods
adc
add
or
and
mov
xor
scas
test
sub
push
adc
mov
cmc
mov
xchg
stos
rcl
mov
inc
sub
fcmovu
sub
push
dec
fucomip
dec
xchg
incb
ds
fistps
dec
aad
inc
std
out
mov
mov
add
add
scas
in
push
sub
sub
scas
jb
sbb
xchg
mov
mov
mov
jae
mov
pop
xor
cmpl
cs
sbb
imul
in
mov
and
aas
cmpsl
push
adc
cmp
mov
and
inc
decb
jmp
mov
sbb
shl
rcrl
sti
or
insb
mov
scas
push
or
fstpt
aad
push
hlt
push
dec
negl
or
and
push
push
inc
lret
enter
cmp
pusha
mov
fidivrs
or
add
xor
es
inc
add
lret
cltd
stos
das
cmp
out
pop
repnz
loopne
pop
cmp
aad
mov
fsts
sub
sbb
and
fistpl
out
call
sbb
cmp
aas
mov
in
mov
aaa
orl
test
mov
xchg
and
rclb
fcomps
outsl
pop
dec
lods
and
lret
pop
xchg
jle
fs
loop
leave
pop
aad
out
sub
adc
mov
and
sti
insb
sub
cld
lcall
jne
add
dec
testl
mov
clc
mov
enter
ret
and
popa
test
and
push
mov
icebp
fistl
stos
pop
addr16
xchg
rorl
pop
xchg
mov
subb
imul
jb
shrb
xorl
or
cli
or
mov
sbb
ficoms
xor
push
xor
es
or
in
jge
push
mov
or
icebp
into
loope
jbe
shlb
rclb
es
jb
jae
push
xchg
lds
stos
adc
int
xlat
mov
adc
es
mov
add
cmp
or
mov
lahf
nop
and
or
aam
outsl
and
imul
xchg
scas
inc
mov
aaa
push
dec
fcompl
mov
mov
pop
mov
idivl
out
lods
mov
scas
sub
mov
mov
push
mov
dec
xchg
ret
dec
sub
sarl
add
pop
mov
mov
ss
xlat
jo
imul
add
aad
test
pop
lods
mov
inc
movsl
dec
sub
add
mov
pop
lock
loop
jnp
aam
adc
scas
xor
movsl
add
inc
push
jmp
data16
pop
lock
pop
test
inc
xor
in
cmpsl
hlt
sahf
mov
popf
pushf
pop
cmc
stc
jo
lods
push
mov
dec
xchg
pop
mov
mov
xchg
out
addl
xchg
inc
inc
cld
xor
imul
jne
xor
cmp
add
mov
jg
mov
jge
jmp
or
add
es
xor
mov
jae
cmp
sti
xchg
shlb
sbb
sub
jb
sub
mov
mov
mov
les
xchg
rcrl
mull
dec
xchg
or
cmp
pop
or
mov
mov
dec
jle
out
mov
stos
scas
pop
mov
push
mov
pusha
xchg
cli
test
in
mov
adc
mov
inc
iret
cmp
mov
ret
pop
jnp
fs
iret
xor
mov
mov
fnstenv
xor
nop
arpl
add
dec
pop
cltd
mov
inc
push
jp
jp
das
jmp
popa
adc
aaa
jle
fistl
adc
inc
sbb
clc
sbb
loopne
xchg
cs
lods
pop
loope
push
flds
arpl
mov
inc
inc
pop
pop
repz
xchg
dec
add
cltd
cmp
push
pushf
mov
push
push
cmp
adc
dec
and
pushf
call
jbe
aam
psllq
les
mov
sub
fwait
aad
lahf
negl
imul
push
je
dec
arpl
jmp
in
lcall
repz
push
push
xchg
xor
lret
arpl
cmp
or
jae
addr16
js
mov
xchg
lods
cmc
lcall
jne
popf
mov
or
mov
jns
cmpsb
pop
inc
fstpt
es
mov
into
xor
xchg
ret
xchg
sbb
pusha
xchg
cs
mov
mov
popa
aas
jnp
adc
lock
dec
xchg
aas
cli
sub
xor
jg
push
sub
mov
jecxz
test
outsb
add
xchg
lea
mov
adc
dec
bound
add
xlat
cwtl
jno
mov
loopne
xchg
shlb
mov
out
sti
jb
icebp
jb
mov
stc
adc
mov
sub
sub
adc
aad
test
add
push
mov
fidivrl
or
fidivl
aad
jae
mov
clc
jb
push
addr16
pop
notl
sub
lret
push
add
cmp
out
nop
rclb
les
and
push
fs
push
aaa
int3
push
adc
cmpsb
stos
je
jmp
cld
jo
ret
cmc
and
dec
push
sbb
mov
fs
pop
jl
sbb
xchg
sub
or
and
add
sub
test
inc
mov
dec
adc
xorl
push
add
xor
cmp
pop
sbb
mov
ds
rorb
xor
ret
fbstp
insb
cmp
pop
xchg
in
add
es
pop
push
jmp
mov
shlb
mov
lret
and
leave
aaa
cld
stos
xchg
gs
push
jmp
dec
loop
addl
aad
lahf
hlt
or
and
test
fisubl
fbld
enter
dec
cmp
sbbl
lds
xchg
hlt
adc
das
sahf
shrl
out
decl
icebp
les
sbb
jnp
add
jge
dec
sub
inc
fimull
int
lea
jmp
test
sbb
jge
jmp
push
insl
data16
inc
fnsave
dec
pop
div
and
mov
ret
aas
push
outsb
sub
pop
cmpsb
das
mov
stc
into
sub
xor
dec
push
cwtl
push
ss
mov
or
ss
popf
push
ss
daa
mov
add
push
les
in
lcall
sub
xor
inc
xchg
jl
xor
lret
lret
xchg
lds
xor
repnz
frstor
les
mov
mov
cmpsl
push
mov
cmp
sub
jl
pop
jl
xchg
sub
dec
cmp
fnstenv
outsb
js
ljmp
andl
and
sub
add
movsl
sbb
inc
test
jle
dec
nop
jo
arpl
fucomp
dec
shll
xor
out
std
out
mov
sbb
add
ret
jle
sbb
or
repnz
cld
bound
arpl
push
inc
adc
xor
mov
int
loopne
jne
push
je
dec
xor
inc
fsubp
push
mov
fmull
mov
outsl
xchg
popa
adcb
xor
mov
mov
sbb
sti
adc
mov
xor
xor
sbb
iret
in
pop
out
mov
cmp
shr
adc
sbb
in
sahf
and
aaa
sti
call
mov
in
and
pushf
or
inc
push
sbbl
jno
xor
dec
iret
rcrb
test
movsb
jo
mov
jae
xchg
test
cwtl
lret
xor
pop
ljmp
add
push
xchg
iret
push
into
sbb
jns
fdivs
imul
ja
sbbb
push
mov
lret
push
mov
push
idiv
mov
mov
jnp
pop
ret
add
inc
sbb
iret
aad
pop
bound
in
fucom
ds
sbb
push
lds
mov
push
mov
mov
mov
push
jb
jp
aaa
sub
cmpsl
aad
inc
clc
enter
inc
jmp
es
aam
scas
repnz
clc
adc
aam
pusha
push
push
ljmp
adc
jge
dec
jb
push
lods
pop
ret
sbb
js
rol
lcall
cmp
das
sbb
jne
xlat
je
push
movsl
or
pop
sbb
push
ret
repnz
xchg
loopne
mov
lea
arpl
inc
jmp
lea
jg
icebp
mov
dec
inc
jbe
movsb
nop
dec
xchg
stos
leave
push
mov
mov
push
movsb
and
insl
in
jge
jg
enter
push
mov
sbb
inc
adcl
movb
push
jp
pop
iret
jecxz
xor
shlb
push
or
xlat
stos
popf
fld
inc
arpl
test
ret
xor
out
push
iret
inc
repnz
dec
sub
test
in
repnz
cltd
mov
xorps
add
push
dec
or
push
daa
xchg
mov
mov
dec
das
or
and
mov
movsl
pop
cmc
xchg
stc
inc
adcb
sbbl
inc
lock
push
sarb
xchg
aaa
pop
sbb
or
pop
sub
decb
shrb
push
pop
mov
add
int
incb
scas
inc
out
sub
dec
sub
subb
ret
pushf
lods
sub
std
mov
stc
or
mov
int
aam
mov
aaa
cmp
lods
icebp
paddw
imul
clc
jp
movsb
add
movsl
je
popf
scas
or
iret
test
pmaddwd
in
sbb
outsb
outsb
imul
jecxz
mov
inc
pushf
lret
rclb
push
push
mov
mov
out
lock
jnp
adc
and
gs
in
mov
fisttpl
push
lea
les
sub
pop
stos
pop
jne
push
jg
mov
test
out
sub
inc
mov
mov
ficoms
and
mov
mov
pushf
nop
out
add
ljmp
jae
mov
mov
adc
dec
loopne,pt
jns
xor
mov
stos
mov
pop
loope
je
aaa
xor
movsb
cmp
push
pop
fsubp
ljmp
inc
loopne
shrl
or
mov
pop
push
cltd
pop
imul
mov
inc
nop
lods
loope
notb
iret
mov
popa
xchg
movsl
push
sub
jg
push
push
adc
int
cmpsb
insb
stos
fwait
ss
or
nop
stc
jnp
test
sahf
pop
call
cmp
lods
fistl
inc
xchg
sub
shll
fs
mov
je
mov
in
pop
int
push
fstpt
add
es
jno
xchg
sub
xchg
lods
inc
les
inc
sbb
or
mov
adc
add
and
leave
xchg
push
pusha
dec
mov
jg
xchg
stc
xchg
mov
or
fcoms
adc
mov
mov
rcrl
jb
aam
cs
push
fnstcw
sbb
xlat
psrlw
mov
les
pop
cmpsl
or
arpl
scas
cmpsb
xor
mov
loop
add
int3
push
ds
xchg
divl
inc
fs
shlb
jb
out
dec
sbb
stc
sub
lret
lret
scas
std
mov
outsl
mov
popa
and
push
test
jmp
decb
mov
cltd
jl
or
pushf
jno
into
cltd
adc
jl
xor
jno
outsl
rclb
xor
mov
sbb
insl
ja
fwait
lds
adc
int3
clc
push
int
jp
enter
push
lds
and
xor
jecxz
pop
insl
mov
and
mov
out
sub
adc
push
out
ljmp
dec
mov
shlb
cwtl
push
jbe
lods
dec
pop
pop
enter
mov
adc
lds
dec
pop
loop
gs
jae
imul
xchg
sub
cmpsb
jle
adc
add
adc
dec
aaa
and
es
inc
pop
mov
push
hlt
shlb
push
bound
jle
cs
xchg
jb
js
and
in
fmulp
lcall
cmp
and
jecxz
lret
in
xchg
add
push
movsl
adc
das
scas
dec
mov
xor
pop
jge
dec
pop
lock
xchg
ret
cwtl
xlat
out
out
push
out
clc
and
jns
in
lcall
out
imul
aam
xchg
xchg
aaa
ror
jo
xor
jmp
xchg
xor
or
mov
mov
mov
pop
sub
xor
sub
lahf
ss
push
ret
outsb
gs
out
loopne
and
fstps
mov
clc
in
cmp
dec
cmp
push
mov
mov
fcmovnb
mov
push
sub
sbb
stos
mov
aas
xchg
leave
aam
sarl
scas
loope
ja
imul
dec
sub
mov
shrl
sahf
es
pminub
data16
jmp
fisubs
push
shlb
inc
ja
enter
and
xchg
pusha
xlat
outsb
push
shlb
loopne
fldcw
sub
or
jp
insb
scas
out
insw
inc
xchg
mov
fisubs
inc
lock
jae
scas
ficomps
lahf
sahf
cli
mov
mov
adc
cmp
iret
and
lods
cli
push
insb
xor
aas
rcll
dec
enterw
in
xchg
xchg
in
stos
push
inc
mov
hlt
daa
js
gs
add
jmp
test
or
pop
cmp
je
cmp
shlb
push
sbb
imul
inc
sbb
cmova
xchg
ret
mov
pop
inc
sbb
mov
repnz
pop
cmc
add
jl
cmpl
imul
push
sbb
cmp
pop
adc
imul
xchg
dec
movsb
cmp
out
les
cmc
pop
out
sarl
inc
seto
ljmp
jno
sbbb
mov
cltd
adc
and
xchg
sub
ja
orl
test
add
loope
add
mov
lret
cmp
loop
rcl
xchg
stos
scas
mov
mov
rolb
cmp
adc
cld
outsb
jo
push
push
test
sub
pop
in
je
ja
sub
cmp
xchg
stc
xchg
sbb
fcoml
js
xor
insl
mov
mov
roll
pusha
mull
shll
lds
testb
jns
inc
stos
in
sbb
or
cmp
jp
pop
shll
add
dec
xor
enter
mov
aad
inc
fs
dec
push
lock
and
in
and
rorb
dec
loopne
xchg
xor
enter
add
mov
push
prefetch
push
into
xor
das
and
popa
jp
nop
lods
addb
inc
jne
hlt
cli
jne
sub
mov
mov
int
lcall
xchg
xchg
mov
mov
jg
mov
xchg
mov
push
add
cltd
mov
iret
movsb
jl
mov
pop
xchg
add
dec
xorb
jg
mov
fdivl
into
jge
adc
mov
rorl
test
popa
sub
xor
sub
clc
inc
mov
xchg
jbe
sub
or
dec
mov
out
sub
repnz
and
fs
test
mulb
jae
int
push
fdivp
mov
inc
out
gs
or
inc
or
jno
or
mov
mov
pop
call
leave
shlb
cmp
mov
ret
adc
jg
cmpsl
movsl
pop
xchg
push
pop
and
push
lea
sti
push
in
xchg
mov
sarl
push
bound
mov
movsl
lret
ds
push
sbb
sbb
rol
icebp
js
arpl
dec
bound
addr16
into
xchg
sub
test
xor
cltd
out
xchg
and
mov
sbb
inc
dec
mov
cmp
xor
or
inc
dec
bound
aaa
cmp
pop
gs
mov
sahf
in
test
push
add
inc
xor
xchg
les
jo
cmpsb
dec
xlat
sub
pop
mov
mov
cmp
outsb
outsb
lret
cld
push
pop
jmp
ficomps
xchg
adc
stos
xchg
mov
mov
mov
fdivr
insl
into
xchg
push
dec
and
mov
imul
subb
enter
xor
aaa
push
shrb
cmpsl
stos
and
add
push
adc
dec
sbb
lcall
mov
mov
mov
popf
je
lods
jo
adc
stos
mov
add
add
daa
mov
or
fbld
add
sbb
push
push
push
mov
test
into
cmp
iret
loop
cmp
jp
xchg
rcl
les
loop
fnstcw
jno
leave
sub
xor
cmpb
mov
add
sub
outsb
dec
fsts
pop
jecxz
dec
and
pop
jg
jne
outsb
repz
shlb
pop
insl
sahf
xor
pusha
outsl
push
sub
jecxz
jb
scas
mov
xlat
test
lods
negb
adc
adc
cmpsb
jne
aas
in
outsl
inc
push
sbb
and
cmp
push
cmpsb
pusha
jne
push
fsub
pop
or
lock
pop
subl
xchg
sbb
xchg
lret
mov
jbe
push
push
mov
aad
fimuls
pop
xor
xor
cmp
cmp
xchg
hlt
xor
adc
ja
imul
sub
jnp
scas
movd
inc
add
addr16
out
add
push
lcall
in
insl
xchg
aas
into
in
rcrb
mov
jp
movhps
aam
jg
push
push
clc
xchg
repnz
test
test
xchg
jbe
lretw
ljmp
arpl
sub
pop
scas
mov
push
popf
sub
pushf
rcr
imul
jb
lret
popa
jmp
mov
add
test
rclb
pusha
sub
popl
mov
and
jbe
sub
cli
dec
in
cmpsl
mov
cmpsl
aam
pop
out
cmpl
cmp
sbb
lret
push
jae
cs
mov
adc
shl
lods
out
out
ret
xor
sbb
loopne
mov
jbe
imul
sbb
repnz
loope
loopne
sldt
stos
dec
aaa
or
sahf
ret
arpl
pop
outsl
jns
adc
mov
call
into
dec
dec
adc
lahf
jb
mov
jle
jecxz
std
aas
loop
stc
cmc
cmp
push
jb
pop
push
cmp
mov
sti
stos
js
fs
imul
popa
flds
cltd
rcll
adc
lods
jb
bound
sbb
shl
inc
arpl
xorb
push
sbb
sbb
nop
inc
pop
scas
stc
mov
arpl
mov
push
add
jb
fdivs
lret
xor
jae
jl
sub
fimull
fmull
jge
or
lea
xchg
cmp
xlat
push
cltd
or
cmp
sbb
push
push
scas
cmp
xor
pop
push
adc
mov
or
gs
test
lret
addr16
inc
pop
out
pop
jmp
sub
inc
jmp
mov
pop
adc
push
mov
sahf
outsl
call
or
xor
sbb
ffree
shlb
add
adc
mov
push
mov
fistpll
lret
fcomip
std
pop
mov
jl
mov
jle
leave
mov
out
mov
push
dec
aam
xchg
aaa
or
int3
mov
ja
insb
out
push
or
jmp
jge
pusha
lods
insb
sti
negl
sbb
mov
xor
lcall
or
movsl
inc
xor
repz
adc
inc
shlb
out
cmc
aaa
and
jge
jae
inc
dec
lcall
jl
push
dec
jbe
repz
mov
js
xchg
xor
pop
sbb
into
jno
cmp
daa
outsl
dec
xor
or
frstor
lea
jp
nop
cmp
pusha
adcl
cmovs
aam
xchg
lret
push
ret
mov
out
inc
pop
or
jmp
or
adc
push
mov
fcomps
stos
dec
mov
xchg
mov
sub
pop
movsb
xor
jns
scas
xor
push
lods
inc
jl
mov
out
iret
loop
and
outsl
daa
jmp
in
movsl
sbb
push
inc
cld
jle
pop
and
inc
or
push
mov
inc
cli
dec
sbb
ret
or
ret
pop
or
jp
lcall
ret
lret
or
mov
aam
mov
sbb
dec
mov
arpl
xchg
flds
push
pop
sub
or
fistpl
mov
test
fs
fldcw
lods
out
xchg
je
push
loope
or
jnp
sub
mov
xor
and
inc
mov
jle
cwtl
mov
sti
xchg
rol
addr16
jbe
sub
loop
mov
mov
jl
jl
push
nop
push
aaa
xchg
ret
repz
jmp
fistps
cmp
jo
fwait
cld
or
mov
mov
xchg
repz
popf
loop
pushf
push
ja
popf
icebp
push
jmp
cli
xor
push
scas
shrb
jmp
fdivl
or
cmp
call
xchg
fldl
inc
pop
dec
call
pop
aaa
stos
push
sub
inc
stos
jbe
shlb
frstor
ficoml
mov
dec
push
fmuls
addr16
pop
in
sub
add
bound
outsl
mov
cltd
add
xchg
fadd
je
pop
stos
movsl
cmp
xor
addr16
or
cmc
mov
scas
fst
pop
mov
fidivl
cli
xchg
push
pop
sbbb
dec
inc
inc
cli
mov
mov
lock
adc
and
lcall
push
xchg
scas
xchg
dec
inc
fidivrl
je
stos
mov
cmp
stc
sub
dec
addb
insl
ret
shr
test
or
push
adc
sbb
lahf
sub
push
xchg
movsl
and
in
pushf
mov
imul
mov
mov
or
xchg
mov
lahf
cltd
stos
in
inc
je
sbb
dec
ljmp
jge
arpl
cmp
in
test
idivb
jecxz
sbb
addr16
pop
mov
mov
in
xchg
push
cmp
shrb
and
jno
mov
out
stos
or
sub
pop
jo
aam
mov
shl
add
xchg
insl
loopne
mov
push
jne
movsb
jle
add
out
push
sbb
stc
gs
repnz
hlt
pusha
stos
add
enter
sbb
and
and
sti
bound
insl
clc
mov
sub
xor
or
popa
faddl
mov
pop
pushf
sub
add
xchg
xor
ss
adc
mov
sub
xchg
mov
ljmp
push
inc
xchg
mov
shl
mov
or
loope
sub
pop
fsts
or
push
pushf
push
cmpsl
xchg
jmp
or
sbb
dec
add
repz
mov
mov
fildll
xchg
sub
mov
dec
lods
push
jns
imul
lret
out
xchg
sub
imul
adc
inc
sub
mov
dec
into
popa
or
mov
pop
sub
stc
add
lods
mov
pusha
sub
aas
inc
jmp
adc
jg
mov
and
rorb
arpl
sub
shlb
pushf
push
outsb
test
test
and
in
cmp
pop
sbb
dec
jge
ja
mov
adc
cltd
stos
fidivl
pop
neg
pop
scas
aas
es
jge
or
cmp
sub
and
or
pop
cmp
mov
xchg
jmp
jp
out
sub
pop
jl
inc
or
cmp
push
sub
test
hlt
sahf
xorb
sbb
mov
imul
mov
lret
dec
push
pop
fstl
push
or
rorb
dec
inc
inc
pushf
orl
push
movsl
mov
mov
shlb
pusha
mov
pop
inc
je
cmp
sahf
popa
jo
mov
jae
pop
cmp
push
xchg
scas
orb
movsl
xchg
sub
addr16
shrl
mov
icebp
or
fwait
mov
push
out
imul
jne
aaa
push
adc
push
cltd
xor
cmp
or
sub
cmpsl
insb
lret
sbb
fcoml
leave
mov
cs
inc
fimuls
or
pop
fcoml
ss
daa
mov
ret
cli
jmp
fildll
pop
fsubl
push
cmp
mov
mov
push
xor
mov
mov
pop
outsl
int3
ja
jb
das
icebp
rolb
xchg
in
jl
enter
mov
cmp
mov
dec
jnp
xor
ret
ror
aas
aad
imul
sti
push
push
inc
push
xor
xor
iret
test
prefetcht2
repz
push
adc
shlb
les
pop
idivl
add
push
inc
cmpsl
push
call
cmp
pop
std
xchg
lahf
xchg
mov
stos
jne
icebp
cmpsb
int3
loop
js
or
push
cltd
popa
jns
and
xor
aam
enter
dec
fptan
arpl
fstl
and
cli
jno
add
xchg
ja
vpminub
hlt
lret
ljmp
outsl
cs
bound
divl
or
mov
jle
cmp
lods
cmp
ror
push
push
nop
repz
outsb
filds
jg
loop
repnz
pushf
or
nop
js
ret
jae
fnstenv
fdivrp
adc
dec
insw
jge
lods
test
sub
and
bound
and
or
enter
xor
or
popa
cmp
arpl
mov
pop
ret
pop
fidivs
in
inc
lea
and
push
cld
mov
insl
fwait
lods
cmpsl
jp
push
add
sahf
lds
in
mov
push
cmp
movsl
or
cli
out
sub
or
cmpsb
push
mov
imul
jae
dec
loop
mov
repnz
xor
daa
or
std
push
mov
lds
cmp
sub
cmpsb
mov
jmp
xor
fsubrs
mov
out
pop
jg
jecxz
mov
pop
and
bndldx
bound
out
lahf
mov
rorl
lock
and
dec
or
inc
inc
xor
shl
in
popf
sbb
arpl
xchg
and
inc
dec
jmp
or
inc
inc
xchg
pop
out
divb
or
xchg
jns
sbb
cli
gs
arpl
iret
xchg
inc
add
sbb
mov
js
ret
es
mov
jne
mov
rclb
dec
mov
sub
popf
dec
loop
lods
stos
xchg
mov
movsl
rcll
mov
pushl
jg
dec
mov
xor
out
loope
push
adc
fstpt
mov
jb
xchg
push
cltd
sti
ljmp
add
mov
pop
mov
xor
push
inc
fisttpll
push
and
fidivrl
adc
inc
sbb
push
and
call
pop
mov
leave
addr16
jg
add
mov
jb
dec
sub
es
push
fwait
inc
int3
xor
push
adc
pop
xchg
enter
movsl
inc
fstpl
pop
shll
sub
repz
adcl
imul
xchg
fcompl
mov
inc
sbb
mov
dec
inc
sbb
jb
fisttpl
std
lods
fisubrl
mov
divl
sub
and
lea
stc
arpl
pop
test
lahf
jle
mov
stos
cmp
sub
lret
push
std
xchg
cmc
xchg
xlat
nop
lahf
ret
rcll
inc
arpl
int3
push
dec
dec
inc
neg
jnp
cmp
out
cmpsl
jns
or
mov
xchg
add
mov
jmp
pop
aaa
mov
inc
cmp
mov
daa
lea
or
push
andl
fsts
scas
xchg
add
dec
stos
cwtl
mov
popf
mov
das
push
mov
fldpi
popf
loopne
pop
adc
jno
mov
inc
dec
sar
ret
cmp
out
cmp
or
xchg
jns
es
inc
cmp
sbb
inc
mov
movsl
leave
lret
popf
sub
sub
mov
stc
adc
cs
mov
lret
mov
jae
aad
jg
loop
mov
push
mov
adc
insl
mov
push
xor
or
mov
fsubr
cltd
pop
insb
inc
inc
xor
aad
das
add
orl
mov
orl
jge
subb
mov
push
mov
or
insb
mov
sahf
adc
test
aam
adc
int
and
dec
add
jns
daa
lcall
sub
pop
into
xor
or
adc
es
inc
lods
out
xor
xorb
pop
push
jge
cmp
pop
pop
mov
sahf
sbb
xchg
out
push
sahf
xchg
cld
mov
adc
mov
jne
in
daa
push
icebp
leave
out
sti
jmp
xor
xchg
sub
cmp
xchg
push
adcl
or
jmp
jne
stc
js
imul
jp
push
loope
addb
or
lahf
fsubrp
or
mov
jae
sub
shrl
push
mov
fnsave
xchg
imul
or
xchg
sbb
add
cld
out
adc
xchg
subl
inc
mov
xor
cmp
pop
sub
add
test
das
icebp
mov
push
adcb
jmp
decb
ljmp
les
int
xor
push
ljmp
nop
cmp
ret
adc
dec
sbb
jae
sbb
xorl
aaa
adc
aas
dec
inc
jb
popf
sub
in
jo
lods
sub
sub
vmptrst
loope
pmaxub
fsubr
jecxz
push
ljmp
xlat
fildll
push
push
push
gs
mov
mov
mov
out
popf
loopne
cwtl
out
jmp
mov
aaa
sub
sahf
sahf
push
orb
push
dec
or
popa
jmp
inc
push
jge
insb
sub
and
rorb
xchg
mov
cwtl
stos
push
mov
jmp
or
sub
out
cs
mov
jg
lods
or
or
xor
and
cld
dec
jne
inc
popf
jecxz
js
lahf
sub
jnp
cmpl
sub
mov
fwait
mov
gs
out
lds
das
aam
adc
or
and
pop
pextrw
popa
push
inc
sub
in
mov
std
push
jb
pop
icebp
jl
push
and
sbb
or
xchg
sub
add
sbb
and
inc
dec
in
mov
push
sbb
andb
pop
js
xchg
call
add
out
push
lock
add
fsubs
std
movsb
loop
inc
inc
adc
jg
push
loop
sub
test
cld
mov
pop
call
dec
push
lahf
call
dec
dec
lret
clc
lcall
dec
pop
mov
dec
fnstcw
add
pop
mov
sub
xchg
mov
cmc
daa
adc
push
mov
lret
lret
inc
je
cmp
cmp
mov
faddp
adc
xor
adc
pop
jge
inc
popf
movsb
mov
out
daa
sbb
stos
cmp
jbe
sub
sub
int3
dec
arpl
int
cmc
mov
nop
push
adc
xor
cmp
enter
adc
and
add
xchg
popf
adc
in
jle
es
mov
arpl
xchg
mov
or
hlt
push
std
mov
jnp
mov
jo
cmpsb
xchg
cmpb
cmc
ds
dec
pop
jmp
iret
ret
mov
lea
bound
je
inc
inc
and
dec
inc
sbb
jp
and
fcmovne
push
mov
sti
adc
xchg
leave
sub
nop
push
push
cmpb
jns
adc
xchg
xor
movsb
push
pop
in
pop
xor
stc
sti
nop
fcmovne
rcr
cltd
push
dec
jl
push
movsb
or
adc
xchg
fcmovb
loop
mov
ret
in
mov
pusha
inc
xor
mov
shr
xor
pushf
dec
aam
xlat
mov
out
add
mov
xor
addr16
push
mov
arpl
insl
sub
mov
shll
jge
inc
ficoms
pop
arpl
rorb
mov
jne
andb
xor
sti
inc
jge
in
xchg
jmp
jmp
cs
fwait
scas
movsl
lods
ffreep
inc
push
lcall
push
push
fcmovnb
data16
div
nop
imul
pop
inc
mov
movsb
mov
int
jbe
jnp
dec
and
or
jno
or
imul
jle
push
mov
mov
loopne
lahf
push
leave
sbb
aas
lcall
adc
cltd
loop
mov
add
leave
xor
aaa
aam
pop
inc
mov
ja
mov
or
fisubs
jo
mov
sub
push
icebp
je
testb
push
imul
ret
xor
aas
es
sub
lods
insb
mov
iret
jns
iret
rcrl
mov
jo
inc
pop
rcr
fcmovne
out
inc
ret
dec
lods
jmp
incl
mov
insl
push
in
or
mov
dec
mov
sub
xlat
mov
xor
popa
mov
push
xchg
ret
test
jnp
arpl
aad
add
and
add
aaa
nop
and
adc
sub
stc
jne
adc
dec
fistps
xchg
aaa
adc
ss
push
rorb
push
push
mov
fldenv
in
cld
push
insl
daa
mov
mov
stc
lcall
in
fsubs
sti
adc
aaa
in
stc
and
push
lods
mov
mov
inc
xchg
inc
or
mov
out
mov
cmpsl
fmul
or
lahf
negb
mov
mov
push
add
repz
xor
insl
insb
xchg
imul
rep
push
inc
jne
jno
xor
cmp
mov
ja
mov
push
xchg
in
sbbl
ss
popf
lods
add
fiadds
mov
mov
jl
jg
fs
push
inc
sub
loopne
push
cld
mov
sahf
mov
inc
ficoms
push
or
cmp
or
and
movsb
repnz
sbb
cltd
sbb
sbbb
mov
jne
mov
mov
mov
xor
push
push
sbb
insb
dec
pop
popf
cmpsb
lcall
cmp
push
lods
push
faddp
in
jne
jmp
sti
pop
ljmp
pushf
cmpb
jne
push
push
jno
es
pushf
sahf
hlt
jg
lret
fwait
xor
nop
cmp
fildll
int
inc
iret
mov
push
jo
cmp
adc
mov
fwait
add
cmp
mov
jmp
dec
add
or
mov
dec
dec
stos
shlb
and
mov
shll
sbbl
or
and
pushf
or
mov
xlat
and
add
pushf
mov
mov
inc
dec
lds
fidivl
ror
pop
mov
pop
mov
inc
out
sti
xchg
lret
je
shrl
adc
lret
std
jmp
cmp
xor
jecxz
fcomip
js
fldt
insl
mov
mov
cmp
icebp
push
xchg
into
or
clc
push
xor
add
clc
sbb
jb
and
add
mov
popf
mov
mov
xor
push
sbb
sahf
clc
and
in
mov
dec
xchg
sub
pusha
pop
dec
push
daa
mov
jnp
mov
shll
mov
push
fmull
stc
adc
push
lea
xor
jns
mov
push
shrl
ja
sub
push
icebp
xchg
push
aaa
xchg
adc
insl
stc
shr
cmp
pop
imul
lods
mov
xchg
cli
hlt
mov
cmp
mov
cltd
jl
push
xchg
into
xchg
push
xor
in
lds
daa
adc
pop
es
xor
add
xchg
sub
cltd
stos
jbe
out
mov
push
sub
sbb
shl
rcrb
adc
push
mov
pop
je
in
jle
mov
mov
jns
mov
mov
out
cld
pop
pop
cmpsb
les
lods
or
inc
xor
imul
mov
aad
push
dec
adc
cs
out
fidivs
hlt
pop
jmp
lods
inc
les
ss
lea
cmp
jge
dec
adc
push
repnz
add
xchg
dec
fistps
jp
cmp
ret
imul
aad
andb
jg
and
push
mov
mov
daa
les
sub
dec
xchg
xchg
dec
inc
mov
add
and
dec
fistpl
incb
ja
adc
cmp
adc
dec
push
sub
call
cmpsl
push
mov
sbb
mov
ds
mov
push
xchg
mov
mov
mov
add
call
lahf
daa
in
inc
pop
pop
leave
pop
mov
mov
sbb
mov
add
inc
dec
insb
bound
mov
or
xchg
jbe
and
shl
gs
push
arpl
cmp
cmp
mov
test
jbe
adc
clc
push
stos
mov
mov
jo
std
mov
sarl
in
sub
out
bound
mov
lcall
int
repnz
or
or
jg
in
and
and
out
jg
hlt
jmp
xchg
in
aaa
mov
mov
jns
mov
xor
lods
push
push
inc
repz
inc
je
mov
shrl
imul
test
aas
mov
insb
ret
jl
js
inc
dec
out
sarl
enter
fs
ret
test
mov
sbb
pop
jns
cmp
mov
push
lods
aad
cld
pop
out
cs
loopne
sub
pop
in
cld
sub
pop
orb
lods
addr16
mov
jle
mov
es
jb
out
lods
push
addr16
and
xor
xchg
pop
inc
ret
outsl
lds
test
xor
mov
fidivs
xchg
xchg
ret
mov
pop
dec
outsl
xchg
sub
sbb
dec
and
cmc
inc
xor
sbb
mov
out
jb
inc
or
enter
xchg
scas
push
pop
or
cwtl
push
mov
popf
mov
ss
mov
sbb
xlat
cltd
scas
or
sbb
popa
ja
out
test
xchg
imul
push
lods
fimull
popl
sti
pop
jmp
mov
icebp
mov
in
inc
lods
pop
imul
push
mov
aaa
fwait
sub
or
mov
rolb
and
test
cmp
sub
aad
sbb
xchg
inc
xchg
cmc
jbe
cmp
and
sbb
push
xor
inc
movsb
jmp
sub
call
adc
push
push
mov
pop
call
xor
pop
hlt
icebp
inc
push
or
fwait
sbb
dec
mov
pop
loop
ltr
mov
stos
mov
add
or
mov
dec
push
sub
dec
repz
test
fstp
dec
push
jg
in
push
ficoml
inc
dec
js
push
in
ljmp
sbb
inc
bound
mov
mov
fnsave
mov
pop
xchg
fidivl
mov
push
sub
mov
pop
xor
in
pop
pand
mov
cmp
push
cmc
sub
dec
ret
in
aas
xchg
adc
xor
scas
nop
push
sbb
lods
in
cs
cli
test
pop
bound
dec
xor
cmpsl
mov
xchg
sub
lcall
xchg
fcoms
int
inc
cmc
xchg
mov
or
bound
fdivp
je
mov
mov
lods
repz
sub
fnstsw
mov
dec
pop
cmp
dec
shl
jle
jl
repz
lds
mov
mov
push
repz
shlb
xor
les
les
adc
xchg
add
xchg
inc
orl
stos
jl
loope
lea
xchg
mov
hlt
fidivrs
cmc
gs
push
or
nop
testl
cwtl
fwait
jmp
fdivl
out
cwtl
test
fcoms
roll
push
mov
pop
mov
in
cmp
test
iret
xor
xor
dec
std
lret
mov
sbb
push
dec
in
sbb
pop
testl
inc
shr
js
ja
mov
pushf
push
mov
mov
das
sbb
mov
leave
cmp
shll
stos
fiadds
vpunpcklbw
jp
fdivs
push
mov
aas
push
pop
testb
sub
xchg
cli
ret
sub
xchg
subl
jnp
repnz
add
mov
dec
mov
int3
ljmp
add
xor
dec
mov
lretw
sub
mov
or
lods
test
push
test
mov
stos
mov
mov
imul
mov
testb
cwtl
in
stos
cltd
pushf
fstpl
xchg
mull
call
mov
sub
shr
outsl
add
loop
push
pop
movsl
cmp
inc
test
mov
aas
mov
mov
stc
jo
adc
adc
push
mov
dec
or
push
xchg
cli
int3
fdivrs
dec
adc
xlat
outsb
adc
sub
mov
rolb
sbb
lods
pop
ror
sbb
repz
or
jae
adc
xchg
jecxz
popf
sub
das
fwait
mov
pop
xor
push
jb
push
cmp
testb
aam
sahf
pop
and
xchg
push
scas
xchg
js
mov
pusha
decb
and
and
fsubl
adc
shrd
sbb
sarl
push
dec
and
xor
out
and
cmpsb
mov
idivb
lds
add
mov
push
push
ds
mov
in
ret
and
insl
mov
mov
lock
cld
inc
or
cmp
jecxz
inc
push
push
add
nop
das
enter
loopnew
push
and
mov
mov
mov
fsubs
jb
push
jmp
xchg
ficompl
or
pop
dec
jge
pop
hlt
cmpsb
mov
in
cmp
jnp
clc
pop
jae
aam
shr
scas
dec
popa
jnp
rorb
iret
add
out
xchg
add
lods
jmp
std
fadds
lahf
xorl
cmp
sarb
xchg
aas
mov
xlat
faddl
and
jb
lahf
mov
int3
out
add
dec
add
test
les
imul
xchg
mov
mov
mov
aas
imul
xor
int3
lods
mov
movnti
int
sub
lcall
sti
xchg
add
add
dec
inc
adc
fistpll
dec
loope
daa
mov
call
in
mov
scas
adc
mov
popa
push
jns
push
loop
inc
sub
lret
sbb
mov
scas
jp
fs
lock
arpl
arpl
fiaddl
div
mov
into
je
mov
inc
adc
clc
shrl
sbb
push
mov
or
or
push
fwait
mov
xor
mov
out
and
mov
jp
inc
push
mov
and
aad
add
faddp
pop
xchg
jmp
and
mov
dec
jnp
out
stos
push
jbe
stos
ss
stc
addr16
test
and
mov
jbe
sahf
push
add
mov
mov
fldl
mov
ds
adc
adc
aam
movsb
jnp
dec
push
jb
ss
inc
adc
test
outsb
flds
popa
inc
mov
xchg
jge
add
xor
lcall
dec
leave
dec
lods
inc
inc
repnz
jae
fiaddl
lcall
cmpsb
push
loope
int
cmc
aas
xchg
sub
sub
cld
adc
les
cmp
fs
ret
pusha
mov
push
pop
sar
enter
or
lcall
adc
pop
add
mov
fwait
repnz
lahf
aaa
lret
es
sub
mov
sub
ljmp
cmc
fsubs
mov
subb
jbe
test
scas
mov
push
lcall
ja
dec
push
push
pop
adc
sti
movsb
cmp
add
dec
xor
push
and
cmp
rolb
pop
and
cmp
or
cmp
push
test
sub
hlt
inc
lahf
jmp
pop
fwait
push
and
xor
arpl
add
adc
mov
push
push
sbb
int3
iret
decb
sbb
ja
mov
arpl
sbb
cmc
mov
xor
cs
pop
sbb
lcall
pop
pop
mov
or
insl
add
lahf
add
jecxz
xchg
icebp
or
jae
xlat
stos
push
push
addr16
in
sahf
xor
xchg
int
push
pushl
sahf
push
mov
push
and
ret
jle
fsubl
test
mov
in
hlt
flds
pop
pop
mov
inc
ficompl
jl
sti
movsb
lret
cld
adc
push
or
mov
jb
rcr
fwait
sti
push
dec
jmp
jne
add
lods
inc
mov
xor
xor
inc
pusha
inc
push
push
in
xrelease
or
aam
or
jmp
jge
popf
cmp
mov
or
sub
jle
and
ret
dec
fwait
jno
inc
rolb
jo
inc
mov
in
popa
lods
inc
push
sbb
dec
cmc
roll
mov
sbb
cli
daa
or
lea
push
xor
cwtl
aas
sub
inc
dec
testb
xchg
push
and
cmpsb
lock
outsb
dec
gs
jg
ljmp
xor
mov
mov
push
mov
je
inc
mov
dec
into
mov
lock
xchg
mov
inc
mov
pop
dec
inc
arpl
std
pop
movsl
aaa
push
adcb
or
dec
lock
adc
push
xchg
call
aad
mov
or
jo
jae
or
jp
test
mov
fwait
dec
inc
out
jp
mov
cmpb
sbb
push
sarl
mov
add
xchg
jmp
and
and
fs
out
jnp,pt
ret
xlat
adc
dec
loopne
aaa
ss
cmpsb
aaa
push
fdivs
outsl
mov
lcall
sbb
adc
push
mov
mov
adc
pushf
and
jp
push
adc
negl
in
iret
cltd
out
xor
sbb
cwtl
out
sub
xchg
mov
lcall
outsb
mov
jl
lods
and
pushf
lret
adc
js
leave
pusha
sbb
xchg
sbb
insl
out
pop
and
adc
fdivrs
in
xchg
mov
mov
adc
push
mov
fistps
lahf
popl
xchg
sub
xlat
scas
rcrl
lods
jg
mov
mov
add
dec
fidivl
or
pop
mov
aam
test
lahf
jge
movsl
sbb
adc
xchg
sub
mov
mov
test
push
sub
test
mov
sbb
in
pop
repz
sarb
xlat
jns
stc
loope
ficoml
mov
fistpll
mov
cli
pop
enter
addb
cmp
dec
cmp
pop
mov
in
lds
imul
lods
mov
push
dec
cwtl
popf
mov
stc
lock
mov
xor
cmp
out
shl
int3
shrl
mov
in
or
xor
cmp
inc
lods
sub
pop
jp
fisubrl
xchg
lcall
xchg
fcomp
jno
xor
into
pop
stc
mov
adc
pusha
test
das
rcrb
imul
sbb
fs
roll
mov
push
and
ljmp
mov
mov
jmp
push
les
jno
testb
mov
cmp
data16
negl
in
pop
ret
xor
and
mov
sahf
hlt
iret
mov
xor
lods
dec
push
inc
dec
rorl
push
insb
shll
lds
or
notb
and
inc
hlt
insb
das
pop
insl
or
scas
scas
and
xchg
mov
fwait
and
inc
bound
popa
cmp
lret
imul
jae
push
pop
lock
pop
mov
ljmp
push
es
arpl
js
enter
adc
or
mov
popa
les
out
out
data16
testl
jne
subb
jb
jbe
cmp
pop
movsl
cmp
push
gs
xor
mov
mov
pop
out
loopne
lock
inc
dec
negl
xchg
fidivl
popf
push
mov
out
into
call
fisubs
orl
stos
sbb
jmp
addb
xor
sub
fldcw
fwait
test
mov
outsl
jnp
outsb
sti
out
in
cmp
loope
and
add
fisttps
mov
sub
adc
mov
pop
or
dec
cltd
loopne
jle
sti
dec
loope
ret
cs
inc
mov
xlat
aas
outsl
or
pusha
pop
sub
andb
and
adc
in
xchg
sbb
cmp
or
std
fmuls
add
icebp
dec
lcall
les
and
into
gs
cmpsl
ljmp
jle
ds
and
lds
add
jns
sbb
repnz
rol
and
in
pop
mov
mov
push
mov
aas
sbb
in
inc
sti
and
dec
addb
mov
dec
fcomps
mov
testb
shr
and
dec
cltd
lea
in
xchg
sbb
add
ror
orl
ljmp
jno
inc
cltd
or
push
adcb
ds
xchg
in
jno
loopne
aam
movb
mov
pop
fidivrs
cmp
fadd
ficoms
push
adc
jge
data16
aas
add
rcrl
adc
dec
push
daa
cmp
xor
push
rclb
lods
or
xor
outsl
in
cmp
scas
pop
ror
cmp
jno
pop
pop
pusha
xlat
les
jecxz
aas
in
negl
test
stc
popf
add
xor
pushf
das
pop
aad
pop
mov
insb
test
lcall
aas
cld
out
out
and
test
pop
shrl
loopne
sub
xor
les
push
inc
pop
dec
rcrl
rcrl
ja
sub
stos
outsl
mov
rcr
inc
pop
stos
inc
test
xchg
and
sbb
push
ds
addl
sub
ljmp
je
popf
testb
sub
fbld
je
cld
call
into
mov
iret
and
push
mov
mov
test
movsl
adc
sub
jmp
into
sarl
into
mov
add
jecxz
loop
arpl
and
cmc
sbb
out
ja
inc
mov
fistl
xchg
ret
xchg
test
movsl
insl
es
movsb
fsubrp
aad
mov
xor
xchg
imul
push
sub
das
xchg
pop
sarb
cmpsb
inc
scas
pusha
divl
movsl
lds
cmp
sbb
inc
dec
xchg
bound
mov
pop
xchg
pop
inc
xchg
add
mov
xlat
call
push
ljmp
sti
adc
test
mov
fistl
insl
add
inc
in
cmp
imul
or
or
outsb
fidivrl
insb
fnstenv
push
pushf
xor
sbb
mov
es
mov
push
push
fwait
sbb
test
add
and
adc
mov
cmp
lods
mov
stos
mov
mov
insl
add
cld
loop
or
xsha256
cmpsb
xchg
push
pop
imul
sub
mov
inc
dec
loop
inc
pusha
divl
sub
jl
cmpsb
in
add
push
in
bound
mov
aas
pop
es
jns
push
lcall
push
adc
inc
push
dec
out
mov
das
mov
movsl
xor
jbe
cli
inc
aas
mov
lret
jo
mov
out
push
mov
shrl
cmp
cmpsl
iret
sub
lock
sub
leave
xchg
ret
adc
je
rcrb
lret
popa
ds
out
push
add
add
adc
scas
pop
xchg
mov
hlt
int
loop
mov
fstps
adc
int
arpl
arpl
mov
push
dec
inc
ljmp
adcb
lahf
push
jno
lahf
pop
adc
mov
or
mov
incl
jns
mov
pop
leave
movsl
mov
sbb
ret
cmp
xlat
jns
jp
jge
xlat
fwait
hlt
mov
ss
dec
dec
cmc
add
es
add
xchg
mov
les
dec
dec
repnz
mov
pop
xor
mov
jl
mov
or
dec
dec
and
mov
inc
mov
jmp
add
xor
enter
dec
add
push
insb
inc
inc
fists
in
xchg
arpl
jmp
in
jno
mov
inc
aam
sbb
cmpsl
ds
mov
mov
cmp
fildll
sub
clc
cmp
mov
sbb
dec
add
xchg
gs
call
or
push
or
in
mov
cli
pop
and
pop
nop
cmp
sti
loop
fldl
scas
or
incl
mov
nop
orl
notb
mov
fisubrs
push
push
js
mov
fbstp
shlb
sbb
jmp
sbb
stos
mov
sbb
xor
fistps
pop
jmp
xchg
jns
sub
outsb
flds
lahf
jmp
popa
and
out
std
pop
imul
arpl
and
aam
ljmp
mov
or
imul
nop
stc
fsubs
scas
add
xchg
mov
test
push
jge
ljmp
jg
xchg
push
mov
mov
dec
jl
mov
sbb
fcmovbe
push
fdivs
jae
jne
shrl
mov
jmp
inc
xor
push
flds
or
adc
insl
add
dec
jp
pop
lret
shrl
adc
loope
aas
push
cmpsl
movsb
cmp
aaa
stos
sub
jo
fisttps
imul
stos
inc
out
mov
add
push
jno
jae
push
out
sbb
data16
test
push
inc
lret
xor
xchg
sbb
inc
in
dec
mov
push
cmpsl
xor
push
jmp
sti
lret
ds
jl
add
cmp
pop
addr16
add
push
xor
test
addr16
lock
aam
into
sbb
cmp
push
in
cwtl
push
pushf
inc
cli
notb
filds
ljmp
or
or
divl
ret
ss
int
dec
sbb
jmp
fbstp
adcl
cmpl
shl
and
add
mov
mov
hlt
fdivl
dec
add
movsl
std
pop
and
xchg
test
lds
es
cltd
fnstsw
pop
imul
mul
push
int
jne
jle
arpl
inc
movsb
inc
mov
popf
shr
xchg
xor
jg
cmp
xchg
nop
out
sbb
pop
sti
adc
in
xor
push
imul
pop
add
xor
lods
mov
jno
sbbl
xor
xchg
out
shrb
cs
bound
sub
in
stos
pop
stos
and
dec
cmp
subl
movsb
nop
fadd
insb
jle
pop
pop
adc
xchg
xchg
sbb
dec
cltd
nop
out
lret
pop
add
mov
out
mov
decl
xchg
mov
in
mov
cli
inc
pop
sets
movsb
pop
outsl
and
out
push
leave
fmull
add
clc
xlat
cmc
cwtl
lock
sub
jecxz
dec
add
in
pop
sub
jns
icebp
cmpsl
iret
xchg
je
lcall
fcomp
test
and
int
mov
int3
cmp
or
in
cld
mov
call
out
sbb
mov
mov
call
imul
adc
stc
jb
pop
mov
iret
ret
clc
enter
sbb
jo
push
xor
test
lahf
outsb
pop
pushf
shr
int
add
jns
push
jmp
lea
in
stos
pop
rcll
cmpsb
jmp
or
nop
inc
jg
cmp
and
dec
arpl
sub
add
lds
sbb
and
mov
lods
jne
xchg
cmpsb
icebp
adc
popa
or
xchg
jmp
fisubs
cmp
scas
movb
cld
dec
repnz
lods
inc
mov
js
cmovg
cmp
orl
adc
inc
pop
leave
loope
rcrl
stos
test
pusha
ficompl
stos
inc
out
pop
xchg
dec
cmpsb
mov
mov
cmpb
sti
and
and
xchg
scas
stos
ljmp
pushf
sub
fwait
and
xchg
adcl
shll
jae
and
inc
jle
add
enter
sbb
mov
outsb
adc
add
je
sub
push
xor
scas
inc
push
notb
int
mov
xchg
push
lcall
lods
jae
sub
pop
add
ss
cmpsb
xchg
xchg
xor
rolb
pushf
inc
mov
cs
pop
sbb
push
mov
loopne
fistl
mov
push
outsb
add
stos
jae
idivb
jne
add
mov
cmp
stos
mov
xor
xchg
fisubl
mov
jne
incl
sub
dec
add
inc
cs
loope
dec
iret
mov
adc
push
jge
divl
mov
lea
out
frstor
les
fidivl
pop
pop
or
fwait
dec
pushl
ljmp
inc
fs
add
dec
fdivs
and
movsl
xchg
xor
fisubrs
and
in
inc
jecxz
outsb
xchg
sub
cmp
add
sbb
cli
pushf
repz
clc
outsl
or
sti
aam
sbb
jp
cmp
scas
les
loop
popf
clc
mov
fdivp
outsl
pop
je
jp
shll
inc
xlat
jbe
xchg
faddl
push
lods
xchg
xor
pop
filds
cs
lea
xchg
shll
mulb
mov
popf
inc
lret
inc
pop
push
cmp
pusha
aad
inc
dec
and
xor
mov
sub
aam
insb
xchg
loope
cmc
or
and
or
mov
xor
xor
rcrb
sbb
push
out
popf
fs
int
hlt
push
stos
fiaddl
push
test
pusha
fisttps
push
fldenv
pop
add
loope
mov
ljmp
enter
mov
dec
cwtl
das
jl
xchg
arpl
fldt
jg
test
lret
push
add
popf
cmp
sub
movsb
ja
into
xchg
shlb
mov
sub
inc
ds
std
push
dec
xor
inc
fs
fbld
pop
and
mov
mov
adc
shl
ret
test
mov
addr16
in
jns
subl
lcall
popa
aad
into
sbb
repnz
or
and
subl
stos
insl
jge
lods
jg
pop
or
inc
jg
xor
adc
cwtl
and
popa
mov
push
cmp
lret
dec
into
sbbb
mov
inc
lods
cmp
dec
push
pop
cmpl
daa
lods
and
enter
sub
shll
xor
mov
sahf
cmp
inc
test
mov
fbstp
sarb
fistpl
or
in
decb
mov
mov
fwait
ret
jae
adc
dec
add
hlt
jbe
divl
inc
mov
adc
push
je
popa
mov
mov
cltd
stc
lds
insb
mov
xor
rorb
and
jge
mov
leave
out
cmc
pcmpeqw
mov
test
ret
or
pop
mov
stos
or
adc
scas
jb
and
xlat
fadds
clc
sahf
outsb
lcall
dec
sbbb
out
push
test
in
jae
or
movsl
adc
inc
inc
push
je
mov
adc
and
mov
jmp
jmp
sbb
mov
cli
pop
xchg
mov
xor
add
sbb
pop
fldl
repz
add
jecxz
xchg
xor
fsubs
js
mov
lods
movsl
mov
fsubr
leave
sarb
pop
pop
imul
stos
in
hlt
cmp
or
dec
and
inc
adc
or
dec
popf
shll
sbb
mov
lods
jno
sub
loop
andb
lods
leave
add
popl
cmp
in
sub
loop
mov
insl
add
insb
in
in
jmp
cmp
or
ljmp
in
clc
inc
or
add
xor
jge
or
lcall
push
add
jge
cmpsb
inc
or
cmp
xorb
icebp
mov
and
clc
shufps
adc
cmpl
ds
add
arpl
add
mov
push
jl
mov
into
cli
mov
sbb
cmpsl
out
dec
xlat
cmpl
sbb
cmpsb
ret
mov
hlt
and
add
xchg
jae
fists
jns
loop
sub
push
scas
xchg
test
movsb
je
ret
repz
les
cmpsl
lods
dec
sbbb
nop
jo
cmpsl
mov
xchg
outsl
ljmpw
imul
fsubr
xchg
jb
test
bound
add
movsl
mov
outsl
js
sbb
dec
shl
xor
mov
xor
xor
xchg
sti
push
adc
ror
fs
jbe
enter
loope
cld
insb
sbb
pushf
and
fstpl
neg
jae
ljmp
jns
jle
jge
test
mov
jns
data16
inc
sbb
cld
pop
repnz
ja
inc
fstps
or
jle
push
mov
orb
std
andb
sbb
daa
bound
popf
pop
dec
cmp
imul
mov
outsl
jge
or
out
push
lock
sbb
pop
imul
popf
stos
fstl
jg
stos
iret
mov
test
push
out
push
mov
out
subb
sbb
lret
fldl2t
lock
cmp
cwtl
out
sub
cld
std
inc
mov
or
ret
jmp
das
or
mov
jo
movsb
push
sub
cwtl
decb
aam
cmp
mov
ja
push
in
and
push
scas
inc
fcoms
pop
push
ret
pushf
cwtl
xor
int3
test
cmp
imul
xor
inc
movsb
mov
mov
test
and
data16
jmp
push
std
test
mov
cli
inc
lret
fidivrl
sbb
lods
cld
daa
adc
mov
fsubr
mov
das
inc
shrl
rcrl
mov
jmp
shlb
out
push
or
int
xchg
ljmp
outsb
test
ret
int3
pop
add
mov
ret
pop
pop
adc
or
test
xchg
sub
out
mov
mov
test
jnp
xlat
das
adc
ret
pop
cmpsl
jp
dec
movsl
push
mov
subl
push
add
lret
lods
sub
xor
loop
hlt
sbb
mov
mov
push
add
les
pop
dec
ficompl
mov
pop
mov
jecxz
out
es
inc
dec
inc
pop
hlt
daa
in
aam
sahf
dec
jnp
jp
fnsave
sbb
dec
jp
rcrl
imul
sub
dec
jo
push
cltd
sbb
ret
pop
dec
cmpsl
repnz
sub
cmp
sbb
jcxz
adc
jns
aam
xchg
and
jns
mov
je
dec
mov
add
fnsave
aad
xchg
lods
ja
fidivs
jge
loop
arpl
aas
repz
dec
and
and
jb
add
sbb
cs
iret
sub
jns
mov
cmp
imul
movsb
xchg
fmul
mov
in
clc
test
scas
inc
push
xchg
pop
xor
popa
and
xchg
sub
icebp
xchg
inc
adc
mov
push
sub
dec
fnstenv
pop
sbb
xchg
xchg
sub
cs
inc
adc
jns
mov
in
cltd
test
popf
sar
ja
daa
lods
sub
imul
inc
outsl
cmp
mov
inc
and
xchg
push
out
dec
rclb
mov
push
insl
lret
cmpl
cmp
adc
loop
loop
cmp
jo
lock
mov
and
inc
jp
jl
push
mov
dec
sub
mov
adc
lret
rorb
push
or
xchg
call
mov
xor
test
dec
in
lods
cmp
add
push
imul
repnz
dec
out
adc
outsl
push
pop
in
adc
lahf
mov
into
movb
jae
jl
push
sub
xchg
aas
arpl
ficomps
push
jae
out
dec
andl
std
test
sub
ljmp
les
jno
or
jne
mov
cs
pop
icebp
dec
fldenv
clc
mov
shr
sub
adc
xor
jg
test
popf
xor
fwait
xor
bound
add
rcrl
cs
xlat
add
mov
push
jmp
mov
movsb
cld
mov
lret
stc
addr16
nop
inc
fisubrs
add
xchg
mov
lods
cmp
insb
test
xlat
push
lea
push
sbb
test
jno
sarb
sub
xor
repnz
aas
xchg
inc
fisttpll
dec
loop
popf
insl
pop
mov
dec
ss
popf
xchg
stos
aam
jmp
adc
add
mov
sbb
mov
sti
fwait
in
movsb
mov
add
rol
or
enter
inc
mov
add
enter
xchg
xchg
mov
jecxz
jnp
ds
jno
hlt
fsubrs
sar
add
mov
leave
test
mov
sbbl
and
inc
ja
jp
lret
jae
add
adc
inc
flds
jnp
pop
es
pop
call
call
dec
mov
imul
insl
cli
sub
stos
pop
sti
shl
cld
repz
mov
jno
out
jg
gs
and
pop
push
ljmp
xchg
bound
in
mov
sahf
xor
jbe
popf
cmpsb
mov
sarb
in
sbb
jge
push
mov
or
or
mov
test
out
mov
sarl
loopne
sbb
je
roll
mov
mov
jb
xchg
int3
xchg
and
mov
push
adc
dec
cmp
testb
xchg
jecxz
inc
minps
mov
push
xchg
scas
jbe
pop
out
cmp
mov
loop
adc
cmp
movb
lahf
dec
adcl
arpl
add
pop
mov
int
mov
adc
pop
jo
aaa
loop
popa
jge
popa
iret
dec
cwtl
add
jmp
add
mov
dec
mov
insl
ljmp
andl
push
pop
mov
rolb
ja
pop
cmpsb
mov
mov
and
pop
and
dec
jl
sub
mov
push
shlb
xlat
pop
int
jle
inc
inc
fldt
jb
mov
stos
dec
int
icebp
adc
cmp
ret
test
jmp
lcall
jp
enter
sbb
and
cmp
inc
mov
cld
lods
pop
lcall
pop
xor
cmc
jecxz
sbb
xlat
cmp
aas
test
mov
rol
stos
xchg
neg
push
js
dec
add
sub
pusha
dec
fisubrs
xchg
imulb
and
jecxz
mov
arpl
cmp
aam
aad
stos
lret
and
mov
cwtl
adc
xchg
push
pop
dec
idivl
sbb
das
cmc
xchg
jae
jbe
sbb
sarl
jl
insb
fiaddl
popl
int3
jo
sbb
mov
loop
add
cmp
push
push
xor
jge
test
mov
xor
lock
inc
pop
mov
fiaddl
and
inc
and
fcoml
adc
add
loop
cld
dec
enter
mov
mov
sahf
push
inc
xchg
shlb
aaa
test
jo
dec
daa
jno
fidivrs
pop
mov
ds
xchg
jo
ss
dec
cli
and
cmp
lahf
repz
sarl
lret
adc
gs
push
icebp
jns
cmpsb
into
enter
sbb
stos
lds
push
lea
adc
stos
jl
andl
add
test
or
cvtps2pi
dec
xchg
mov
and
outsb
jmp
test
dec
cmp
repz
push
mov
jl
rorl
aam
imul
sbb
aaa
xchg
pop
in
inc
xor
pop
js
ret
test
in
mov
xchg
ss
xor
lea
je
hlt
mov
sbb
pop
hlt
and
sarb
jnp
push
mov
cmpsb
leave
fucomip
push
cmc
cmp
pop
sub
aad
ret
dec
jne
jb
gs
hlt
sub
push
sbbb
aaa
mov
jge
test
mov
repnz
xchg
insl
test
jp
popa
mov
insl
inc
xor
mov
pop
ljmp
jmp
cli
jle
mov
jbe
pop
int3
aaa
cmpsb
xchg
lock
mov
aaa
cmp
out
jmp
push
scas
aaa
enter
mov
push
iret
mov
pop
jmp
pop
pop
mov
cmp
jns
sub
loop
movsb
clc
addr16
scas
std
push
cwtl
cmpsl
fnclex
lods
dec
out
jle
dec
sub
dec
add
push
fldt
pop
aaa
outsl
shrb
mov
scas
or
pop
sub
xchg
nop
in
jae
nop
push
xchg
test
mov
insl
scas
mov
jae
mov
loope
push
stos
jge
xchg
jl
sbb
mov
daa
fs
test
fisttps
mov
notl
in
clc
lahf
mov
inc
sbb
data16
xor
mov
cmp
fbstp
mov
imul
inc
in
and
mov
sub
shr
decb
inc
fsubrl
pop
data16
cli
pop
mov
shll
add
xor
xor
insl
xlat
lret
pop
rolb
mov
fsts
cmp
es
loopne
nop
ss
dec
mov
shrl
sub
rclb
ja
aas
jg
inc
and
cmp
lcall
mov
xor
in
pop
push
mov
gs
mov
xchg
push
add
scas
xor
push
stc
test
aaa
sbb
rcrb
mov
pop
or
std
nop
cmp
rcl
lcall
jae
dec
dec
xlat
gs
or
pop
push
push
and
aaa
imul
mov
into
pop
cwtl
pop
cmp
push
push
adc
dec
dec
xchg
add
stc
jle
dec
mov
adc
jno
scas
pop
imul
stc
inc
std
push
test
sub
call
in
jbe
or
sbb
into
aas
pop
and
lock
push
jmp
dec
xchg
xchg
inc
int
int3
mov
adc
cmp
dec
xchg
dec
icebp
mov
or
aaa
cltd
ja
lret
pusha
fidivrl
std
push
mov
sub
es
or
ret
ss
push
mov
adc
sub
jp
rep
jo
cmpsb
ss
or
mov
ljmp
ds
cmp
push
mov
test
ja
sti
in
bound
xchg
xchg
aad
iret
div
inc
imul
mov
popa
fildl
adc
mov
push
js
mov
ret
jle
cmc
pop
fstpl
add
xor
and
js
mov
lods
stc
cmp
mov
and
stos
xor
and
push
mov
push
ja
xor
mov
sbb
jo
inc
lret
cmc
sub
aaa
mov
imul
dec
in
add
sub
shrl
and
or
repnz
pmuludq
ret
lcall
ret
sub
xchg
sub
repz
sbb
add
popf
int3
sbb
push
out
movsb
inc
std
orl
jge
xor
daa
hlt
lea
adcl
or
movl
orb
lret
es
jbe
pop
mov
mov
scas
in
cltd
pop
and
scas
lods
lea
int
xorl
dec
push
pop
mov
add
lcall
das
arpl
jmp
mov
cltd
lds
pushl
or
xchg
arpl
mov
in
dec
mov
punpcklbw
pop
mov
enter
mov
adc
sub
sti
dec
add
jno
mov
and
pop
test
leave
mov
jb
pusha
pop
repnz
inc
pop
aaa
mov
aam
inc
out
and
out
aad
xor
aas
ss
in
xlat
xor
movb
pop
das
lds
jno
fucom
sub
inc
repnz
or
clc
sub
inc
jge
ja
arpl
sti
cmp
push
jnp
loop
mov
inc
xchg
icebp
dec
cmpsb
in
mov
inc
dec
push
out
mov
jmp
aaa
inc
mov
xor
mov
mulb
in
mov
pop
mov
and
pop
int3
fidivrs
andb
mov
into
xor
mov
xchg
inc
in
adc
flds
fidivl
popa
test
imul
mov
test
int
xchg
fidivrl
outsl
mov
mov
mov
in
ret
cmc
jecxz
lds
xor
sbb
inc
push
fisttpl
test
clc
rorl
addr16
push
mov
mov
inc
arpl
insb
ret
mov
xchg
or
andl
push
xor
dec
jae
jbe
into
movsl
inc
xor
dec
cltd
xor
add
pushf
sub
insb
add
sahf
orb
or
dec
sub
andl
pop
adc
inc
sar
jl
insb
push
mov
jo
dec
mov
xchg
shll
lock
rorl
stos
movl
es
adc
xor
rcrl
mov
pop
dec
pop
cmc
lods
mov
dec
les
xor
xor
adcb
pop
inc
adc
inc
cwtl
push
jl
sahf
mov
pop
les
in
call
movsl
call
mov
cltd
or
mov
jg
or
mov
std
and
jp
adc
mov
int3
movsl
cmp
xchg
sti
js
ret
cwtl
mov
sub
pop
mov
jae
adc
loopne
push
dec
mov
nop
clc
sub
xor
pop
mov
xchg
add
pop
mov
lods
loopne
test
or
add
cli
xchg
mov
jo
js
shlb
adc
cli
xchg
pop
in
rcrl
lea
loope
xor
dec
out
ds
jl
jle
mov
add
mov
shl
dec
pop
cmp
xor
inc
pop
adc
adc
mov
shll
or
mov
lret
xlat
sub
xor
sarl
sbb
adc
jmp
push
mov
and
mov
ficoml
and
mov
adc
dec
sbb
pop
adc
push
cmpsl
test
loope
icebp
fs
xchg
rcrb
aad
lea
shr
pushf
dec
aaa
inc
mov
jne
inc
les
inc
dec
fstps
fidivrl
xor
arpl
enter
outsb
sub
fidivrl
jb
incl
mov
je
inc
push
call
scas
mov
inc
popf
inc
push
xchg
addb
jle
jae
pop
jne
xchg
repnz
out
inc
movsl
jp
pusha
fs
and
addr16
cwtl
das
and
push
roll
pop
out
xlat
out
icebp
sahf
fwait
dec
jmp
dec
jno
testl
outsb
or
xchg
xor
jle
insl
pop
popf
jbe
sahf
and
rol
dec
pop
adc
dec
cs
lods
out
pop
push
mov
andl
xor
xchg
es
xchg
xchg
int3
into
dec
dec
daa
mov
sahf
sbb
rcll
jecxz
mov
mov
inc
pop
pushl
cmpsb
subb
adc
push
push
push
aad
je
mov
sbb
dec
test
repnz
sub
inc
mov
ret
lret
stos
dec
jge
addr16
pop
imul
shrb
loope
fidivs
js
jp
xchg
and
push
push
outsl
dec
sbb
sti
mov
mov
mov
xor
lahf
pusha
repz
push
jge
xchg
inc
inc
in
nop
stos
es
sbb
inc
jb
jmp
bound
test
sbb
sub
fwait
cmp
sbb
mov
into
push
out
push
cmp
cmp
outsb
sub
sahf
xor
or
xor
dec
imull
push
notl
repz
mov
sbb
stos
sbb
test
fstp
cli
cld
pop
sbb
push
xor
cs
dec
add
mov
sub
push
icebp
aaa
adc
jmp
aad
inc
loop
pop
xchg
xlat
add
xor
xor
incl
sub
ljmp
cmp
xchg
dec
ds
orl
mov
add
fldl
or
and
ljmp
fiaddl
dec
push
lret
mov
out
popf
es
icebp
fisubrs
pop
jbe
outsl
mov
or
stos
mov
aaa
push
jge
movsb
xor
aad
inc
mov
repz
pop
xorb
or
gs
stos
aaa
incb
das
jns
mov
dec
shll
outsb
or
xchg
sti
mov
adc
inc
popl
fwait
ss
xor
xor
lahf
cli
jp
inc
cld
pop
jb
rcr
xor
mov
cmpsl
jo
in
les
cmp
pop
lock
push
add
mov
in
rcrb
dec
scas
xchg
pop
movsl
dec
loop
push
clc
jge
mov
jbe
aaa
int
push
push
mov
sbb
sbb
cmpsl
xchg
pop
xlat
jecxz
add
dec
pop
jge
cmp
mov
jg
xchg
popf
movsb
in
aas
clc
mov
pop
sub
sar
and
addr16
mov
push
pop
fnstsw
and
cmp
xchg
mov
sti
pop
push
dec
arpl
mull
out
sub
xchg
ja
mov
xchg
je
cli
sbb
mov
rcrb
sahf
xor
aas
mov
and
dec
add
cmp
insl
xchg
cwtl
jne
xorb
sti
std
add
xlat
into
gs
mov
enter
pushl
push
mov
jb
jge
into
sahf
lea
in
aam
push
dec
xor
dec
sbb
jg
rcll
mov
lret
fimull
jg
cmpsb
jmp
ljmp
push
mov
inc
fidivl
loopne
lods
adc
mov
test
dec
insl
sbb
shl
lahf
pop
sbb
jecxz
dec
out
call
subl
add
data16
or
add
add
hlt
out
stos
inc
add
mov
dec
adc
mov
lds
mov
dec
fidivrl
stc
adc
sbb
jno
out
xchg
leave
xor
or
es
jg
inc
in
fnsave
mov
mov
jbe
inc
xlat
test
lret
sti
scas
movsl
cmp
and
pop
mov
and
mov
mov
xor
js
and
jne
loopne
data16
jne
adc
inc
stos
and
pop
movl
in
cs
xchg
in
dec
dec
push
aaa
or
fwait
sub
jns
mov
mov
xchg
mov
dec
pushf
pop
jae
jmp
pop
add
mov
mov
mov
push
inc
jo
popf
stc
rcl
push
sub
notb
andb
add
pop
push
inc
data16
nop
pop
push
add
jp
sub
mov
testl
sbb
cmp
pop
loop
dec
mov
push
xchg
jns
xor
out
fdivrs
fnstcw
fucomip
or
iret
mov
sqrtps
jb
mov
cmp
inc
or
jb
jl
insl
mov
jg
mov
push
xchg
xchg
loopne
gs
lea
mov
aam
jl
mov
fisttps
mov
add
fdivl
sahf
mov
mov
or
add
ret
aam
and
mov
xchg
movsl
out
mov
lods
cmp
cmp
inc
jecxz
cmp
inc
pop
ficomps
bnd
pop
sar
jge
dec
xchg
sbb
mov
dec
out
mov
and
mov
out
adc
in
inc
dec
std
lods
mov
mov
shll
xlat
jne
loope
inc
out
xchg
loope
jmp
lock
inc
mov
shld
ds
ret
out
pop
rcr
sub
neg
dec
loopne
or
jge
push
jecxz
sub
sbb
sub
andnps
pop
fidivl
add
incl
mov
cmp
xlat
cmp
xor
dec
std
dec
into
call
mov
mul
cmpsl
rcrl
mov
pushl
pop
je
push
jno
xchg
dec
aaa
xlat
addb
dec
decl
sbb
ds
imul
add
adc
sti
jae
ficompl
adcb
mov
rcr
jp
cmpsb
lock
xchg
cli
mov
lret
cmc
int
sub
jb
jae
andl
xchg
mov
and
xor
ds
ja
into
pop
mov
jne
pop
data16
adc
lds
mov
insb
into
dec
add
outsb
pushf
das
fimull
call
mov
movsb
sti
xchg
xor
mov
or
mov
or
or
lods
cmp
out
imul
sbb
fidivrl
cli
inc
loopne
rcrb
dec
xor
les
push
scas
dec
das
ror
pop
lods
mov
pop
pop
cld
mov
imull
push
sub
repz
jle
std
or
xlat
add
movsl
adc
sub
les
ret
jmp
dec
xorb
mov
ljmp
jp
or
scas
nop
xor
mulb
aaa
call
lods
sbb
ret
xchg
jmp
sarb
cmp
shrb
jns
lahf
pop
or
jl
insb
notb
sub
xor
vexp2ps
je
cld
aam
daa
push
push
stos
push
sub
mov
jne
rorb
cmp
mov
pop
xchg
test
jle
in
or
imul
mov
jns
lcall
jnp
ljmp
mov
add
pop
js
xor
int
mov
jge
scas
stc
in
std
sub
add
ret
hlt
push
dec
cmp
pop
push
cltd
cmp
mov
fnstenv
cmp
sub
ljmp
lds
sbb
push
or
cmp
adc
in
call
mov
push
arpl
mov
xchg
jb
vmulsd
fsubrs
adc
je
xor
xor
ds
bound
imul
inc
mov
pop
push
out
adc
ret
icebp
mov
add
xor
loopne
jne
in
mov
cmc
xchg
dec
cmp
and
rcll
push
shrl
and
adc
mov
xchg
ja
jbe
outsl
lods
scas
add
xor
xchg
mov
add
fcoms
pop
lods
pop
out
fwait
repz
mov
out
iret
sbb
jb
dec
xchg
lret
popf
dec
mov
cld
lcall
clc
inc
xchg
dec
xchg
mov
loop
push
pop
fwait
rcrb
icebp
in
pop
pop
je
sbb
dec
sbb
addl
mov
cltd
xor
mov
lea
out
cltd
and
jne
jbe
inc
icebp
data16
pusha
sarb
jno
std
lods
push
cmc
ret
faddl
adc
sbb
inc
jmp
xchg
das
rorb
add
aas
js
clc
and
popa
inc
and
xchg
repnz
ss
inc
pop
insb
jbe
std
or
fstl
ret
and
lea
jnp
fsubrl
add
mov
xor
lea
jb
gs
xchg
xor
sub
pop
push
sti
loope
fsubrp
fnstsw
mov
xor
pop
dec
lahf
loopne
or
mov
adc
imul
push
ja
inc
pop
mov
cmp
push
adc
jecxz
subl
dec
iret
mov
repnz
pop
loop
les
jne
mov
es
imul
jp
add
lds
add
cld
xchg
mov
icebp
aam
aas
adc
cs
mov
pushl
pop
data16
jmp
jge
mov
les
dec
jae
sbb
jae
shl
jge
pop
cld
outsb
jp
adc
nop
inc
mov
cmc
pushf
and
movb
in
sahf
daa
adc
cmpsl
jl
mov
and
cs
mov
mov
push
shrb
out
sbb
icebp
xor
iret
andb
test
push
nop
push
test
jge
sti
mov
dec
pop
aaa
mov
rol
inc
or
bound
jmp
sbb
cltd
sub
xchg
xchg
mov
adc
les
aaa
mov
les
outsb
shll
stos
stos
call
dec
scas
fcmovnb
sub
hlt
movsb
psubsw
dec
int3
fldcw
test
icebp
xchg
cmpsb
movsb
ja
sahf
inc
mov
ss
inc
jno
es
test
stos
jmp
mov
call
mov
mov
inc
fstpl
jnp
mov
pusha
fnsave
xor
dec
xchg
jle
dec
cmp
push
cmc
sahf
mov
out
mov
xchg
jle
movsl
xor
push
icebp
sub
cmp
or
cld
cmp
test
push
aas
cmp
pop
xchg
ljmp
ja
ljmp
jbe
adc
enter
loope
ja
sahf
ja
std
xor
xchg
push
popf
stc
xchg
sub
pop
aas
push
jmp
es
outsl
fnstsw
jp
jmp
cs
push
lods
inc
or
and
out
test
adc
fdivs
inc
clc
push
fisubs
fdivl
pop
pop
hlt
dec
lcall
push
cmp
outsb
sub
movsb
jmp
push
cmp
pusha
jbe
fiaddl
mov
cmp
push
cs
push
movsl
xchg
inc
loopne
mov
ljmp
jbe
test
sti
jecxz
add
divb
adc
jge
lcall
jne
aaa
popf
lret
movsb
cs
mov
int
popf
mov
scas
fstpl
cld
aam
or
hlt
pop
and
push
adc
lea
cmc
mov
mov
loopne
sub
and
inc
jno
ret
stc
pop
je
sub
movl
rcll
aaa
test
inc
stos
and
data16
adc
sub
js
and
insb
push
jl
xor
inc
sahf
leave
and
and
stos
pop
dec
push
xlat
pushw
test
cld
and
inc
push
mov
mov
call
sbb
and
movsb
push
mov
inc
mov
js
push
push
movsl
mov
and
pop
lcall
push
mov
pop
out
fsubp
int3
lret
inc
fwait
ljmp
jno
dec
xchg
pop
ja
adc
rcrl
mov
push
cmpsl
sub
jge
cmp
jae
sbb
fwait
jae
shrl
imul
call
addr16
and
mov
push
lods
das
pop
jl
add
enter
sbb
xor
mov
out
cld
and
pop
mov
shl
and
sub
lea
inc
cmp
cli
scas
sub
inc
loopne
inc
stc
cmc
rorl
pop
es
jno
dec
sahf
xor
adc
lds
jp
mov
gs
jae
rcrl
cmpsl
lea
add
out
pop
out
decb
imul
mov
sub
outsl
jo
insl
popf
xchg
testb
out
rclb
xchg
fcmove
mov
and
mov
subb
lea
into
sbb
xlat
lock
in
jg
push
xor
out
movsb
iret
loope
inc
shl
jns
cmpsb
mov
mov
push
mov
arpl
lods
sbb
and
in
jg
push
add
cltd
and
inc
in
pusha
cld
addb
inc
test
mov
scas
adc
fidivrs
push
lock
xor
inc
sub
add
sbb
cltd
inc
cmp
sti
mov
or
pop
sahf
in
movsb
imul
push
stc
ret
xor
fnstenv
adc
loopne
pop
jnp
into
inc
cmp
xor
outsl
addr16
xchg
add
ret
fadds
xchg
mov
int
in
repnz
mov
nopl
into
fdivrl
lret
pop
lret
and
mov
mov
shlb
add
mov
fisubrs
mov
jle
lahf
mov
ret
imul
loopne
mov
sarb
shlb
outsl
aaa
sub
fwait
or
and
es
test
adc
cmp
and
adc
movsb
fsubs
add
xor
cmp
dec
outsb
xchg
bnd
mov
movsb
lds
into
pop
std
jmp
pop
mov
into
xchg
ljmp
dec
and
and
lret
adc
mov
mov
sbb
je
fs
jp
fstl
sahf
iret
or
sbb
cmp
in
and
aad
jge
jg
mov
stos
fsub
in
dec
jge
repnz
jbe
sarl
add
sahf
pop
andb
mov
in
and
repz
jge
aaa
adc
fwait
sbb
adc
fiadds
add
je
cs
inc
dec
mov
dec
lret
jnp
mov
push
out
sbb
sub
xchg
or
fucom
xchg
sbb
pop
dec
adc
mov
pop
fwait
pop
insb
mov
les
out
xor
popa
xchg
mov
or
dec
cmp
mov
mov
and
lea
fwait
fwait
sbb
movsl
cmp
xchg
das
or
mov
and
cli
mov
cltd
sbb
cmp
xchg
shrb
sbb
fnclex
shl
adc
pop
in
aas
jl
repnz
xchg
inc
fistps
in
xchg
jl
or
mov
insb
insb
sbb
ss
popf
cli
dec
rol
icebp
into
push
inc
jge
sarb
mul
push
inc
aas
popa
data16
pusha
dec
push
lds
adc
mov
aam
sbb
jo
mov
sbb
stos
pushf
push
sar
arpl
push
or
sti
das
jmp
jne
int
adc
and
adc
jbe
fsts
inc
loop
cmc
xchg
sub
in
inc
ret
push
dec
xor
jmp
mov
dec
adc
sbb
popa
inc
inc
in
adc
push
out
imul
jmp
inc
stc
js
sbb
clc
push
popa
mov
lret
fiaddl
enter
push
fldenv
test
push
aad
mov
ret
or
xchg
pop
pop
dec
pop
lcall
movsb
fiadds
enter
test
dec
add
pop
sub
dec
sahf
es
inc
pop
xchg
xchg
fucomi
roll
scas
jnp
ja
mov
inc
scas
xor
fcompl
sbb
imul
mov
or
pop
rep
jb
adc
sahf
iret
jg
inc
ss
xchg
adc
mov
mov
jge
sub
iret
imull
lea
sub
rcrb
mov
xchg
add
pop
or
js
test
mov
or
int
pop
data16
dec
dec
xchg
lods
mov
inc
sub
mov
dec
pushf
and
and
rclb
out
movsl
out
push
push
or
mov
mov
mov
hlt
and
decl
push
xchg
dec
in
inc
adc
inc
pop
imul
cmp
fcomps
ret
xlat
fcmovb
jmp
jno
fwait
repnz
xchg
cmp
sbb
int3
adc
mov
mov
dec
stc
cmp
and
mov
cmp
pop
dec
fwait
and
ja
insb
mov
inc
lock
push
inc
lret
adc
dec
jne,pt
cmp
dec
pushf
insl
push
mov
mov
popf
pop
xchg
std
adc
in
push
sahf
and
int3
gs
dec
add
je
dec
jnp
aam
xchg
xchg
repnz
das
xor
push
mov
push
or
iret
cmp
iret
mov
cltd
dec
call
push
dec
pushf
stc
shl
outsb
mov
push
ret
jo
addr16
xchg
enter
lcall
mov
mov
leave
lea
sbb
xlat
dec
jg
bound
mov
in
or
ds
nop
and
fbstp
divb
and
rcl
leave
cmp
push
mov
xchg
pusha
adc
fcomi
pop
pop
rol
pop
jg
std
cmp
iret
jbe
xchg
std
and
mov
or
pop
xchg
aaa
jo
stc
in
sub
ja
mov
or
popf
jge
pop
adc
mov
data16
xor
fbld
lock
loope
mov
cld
xchg
and
and
mov
dec
xchg
pop
dec
mov
cmp
ret
ss
lahf
push
jne
dec
mull
mov
add
cmp
mov
cmpsl
ds
xor
push
adc
jle
mov
int3
jb
lock
sbb
nop
imul
inc
or
cmpsl
aad
int3
outsl
mov
cld
rcl
adc
dec
pop
cmp
std
lcall
sbb
add
cmp
mov
mov
mov
jns
rol
repz
je
into
aad
arpl
es
std
mov
hlt
cmp
xchg
insb
jno
jns
xchg
xchg
repz
dec
cmp
mov
iret
sahf
xorl
test
xor
jp
movsb
cmp
xchg
das
pop
repz
in
mov
xorl
xor
mov
ljmp
jl
std
jp
inc
push
call
jne
pop
out
dec
loope
enter
inc
push
xchg
mov
cmp
mov
lods
mov
cmp
int
loopne
cmp
push
scas
sub
lea
stos
icebp
sbb
sub
mov
dec
push
push
xlat
ds
shlb
push
in
int3
push
enter
testb
inc
adc
hlt
arpl
outsl
xlat
push
cmpsb
cmp
leave
mov
pusha
das
ljmp
jl
aam
shrb
lahf
daa
in
pop
cld
jecxz
repnz
xchg
pop
call
int
xor
xchg
hlt
test
sbb
call
ljmp
jb
pop
inc
fadds
in
mov
sub
rcll
pop
call
pop
mov
jmp
sahf
xor
scas
outsb
adc
pop
lock
add
gs
lods
daa
lds
je
mov
imul
mov
movb
adc
stc
daa
lcall
jp
pushf
daa
xchg
push
scas
adc
dec
in
xor
push
xor
push
pop
fiadds
and
mov
lea
sub
iret
mov
bts
mov
xor
loopne
lahf
xor
sarb
sub
sbb
mov
lods
xchg
xchg
jmp
or
test
mov
outsl
cltd
cmc
or
mov
mov
shlb
dec
inc
das
mov
popa
gs
mov
mov
cmp
xchg
cmp
enter
mov
or
push
jle
xchg
mov
fistpl
adcl
jbe
mov
add
mov
dec
fcos
cmp
test
aad
xor
loop
push
fbstp
xchg
subb
inc
cmp
jle
jg
lret
and
and
test
scas
mov
pop
push
dec
jnp
push
insl
iret
pushf
insl
into
lock
out
fs
aam
daa
stos
in
lret
adc
mov
in
lcall
jno
push
clc
shll
mov
dec
fnstenv
mov
fmul
add
ss
sbb
rcll
aas
clc
mov
nop
clc
aad
push
rcrb
jecxz
sbb
imul
addr16
cmc
ret
cmpsb
jl
push
hlt
mov
cld
adc
ret
inc
jo
push
mov
leave
xchg
mov
and
xor
pcmpgtb
shrb
rorl
and
xchg
push
jnp
jno
mov
stc
nop
cmp
scas
mov
push
xor
or
and
sahf
mov
inc
iret
arpl
mov
js
add
xorb
and
adc
out
mov
sub
inc
fidivl
out
mov
and
jge
lret
inc
sbb
stc
dec
ss
and
sbb
aas
rcl
mov
mov
dec
cmp
cmc
or
cs
adc
into
enter
mov
daa
sti
decl
sub
push
adc
or
sub
stos
pop
cmp
negl
adc
popf
sbb
clc
fsts
sahf
frstor
icebp
xchg
sbb
xor
aam
or
cmpsb
cmpsb
push
mov
mov
pop
into
enter
in
dec
mov
add
inc
fldenv
jb
mov
cwtl
ret
jle
andl
fadd
xorl
or
mov
sbb
xchg
cmp
inc
mov
lret
mov
movsb
mov
or
mov
jnp
nop
jnp
pop
lock
mov
jecxz
mov
out
pushl
fs
daa
xchg
push
lcall
das
pushf
pminub
xchg
sbb
pushf
xor
in
in
xor
in
push
je
aas
mov
xchg
jmp
in
sbb
aam
insb
jne
jp
add
mov
and
dec
testb
mov
arpl
rclb
xor
insb
xor
pop
arpl
pop
call
dec
inc
in
clc
dec
jo
fsubl
sbb
repz
xchg
mov
dec
sbb
lock
into
jecxz
call
push
xchg
mov
test
mov
jle
adc
cmp
popa
or
push
imul
loope
cmp
aad
aaa
jno
jg
into
xchg
mov
fsubr
mov
mov
out
push
in
and
cmc
cmovns
gs
add
adc
adc
xor
mov
add
sbb
xchg
or
lret
leave
jg
out
push
inc
fstp
int3
insl
cld
aas
cmp
mov
mov
jnp
inc
call
dec
push
jo
mov
or
mov
loopne
mov
jle
cmc
push
push
aas
push
cmp
adc
push
lret
outsb
fs
mov
jg
in
fisubl
lock
mov
dec
inc
add
push
icebp
and
mov
add
lret
mov
mov
call
mov
orl
mov
je
push
movsl
mov
and
cmpsl
sbb
adc
xor
xchg
mov
xor
mov
stos
push
sbb
pop
mov
fdivs
fists
insl
scas
mov
mov
cmp
pop
sti
xchg
jne
mov
int
clc
sub
mov
lods
push
fiadds
mov
pop
lcall
mov
jmp
jl
es
loop
shl
xchg
sub
movsb
cmp
shlb
sbb
mov
fs
cld
mov
jle
sub
popf
push
sub
mov
test
push
fistpl
int
stc
cli
push
sub
hlt
xchg
je
into
pop
call
popa
leave
inc
out
sbb
loope
cmp
fidivrs
mov
push
inc
inc
or
cli
fs
xchg
imul
ffree
jle
repz
fnsave
pop
pop
xchg
lret
fs
shll
notl
scas
stos
xchg
test
imul
pop
lahf
jns
inc
popa
popf
jo
jne
push
and
les
lods
ss
jno
into
inc
pusha
cwtl
cmpsl
imul
dec
push
stc
hlt
xlat
jp
rcrl
inc
adc
xchg
hlt
adc
push
mov
mov
pop
pop
and
xor
sub
jae
mov
dec
nop
dec
dec
inc
stos
cld
mov
push
inc
pop
fwait
pop
into
in
fadds
insb
xchg
setno
inc
mov
sbb
je
mov
mov
and
cltd
add
mov
sub
jl
jmp
mov
pop
xor
add
clc
lds
pop
in
mov
loopne
sub
lcall
loope
xor
mov
pop
adc
dec
bound
lret
sub
sub
hlt
lods
xchg
daa
enter
cltd
lock
mov
mov
mov
or
mov
repnz
push
call
or
cltd
lock
addr16
loope
and
sbb
dec
daa
xor
mov
not
outsl
and
add
mov
add
in
inc
jecxz
jbe
jnp
popl
pop
loope
mov
loop
mov
jmp
or
mov
mov
inc
loop
xchg
add
pop
test
sub
pop
push
jnp
and
int3
cmpsl
std
mov
std
add
cmpsb
ficompl
test
popa
call
into
xchg
test
xor
mov
mov
jno
hlt
jns
in
imul
insb
fiadds
or
test
cmp
sub
xor
push
clc
movsl
gs
sbb
mov
loopne
jnp
rcll
stos
xchg
repz
cmp
das
divl
int
lds
pop
push
inc
popa
inc
jg
mov
aas
mov
aaa
mov
xchg
daa
inc
jmp
cmp
add
dec
nop
aaa
fdivrl
pop
xor
jl
and
mov
out
and
xchg
sbb
dec
push
cmp
filds
inc
ficoml
in
popa
call
mov
or
push
insb
aad
sbb
mov
bound
fwait
inc
inc
pop
sahf
cwtl
pop
lahf
cwtl
or
pop
jo
mov
movsl
pushf
sub
fsubl
outsb
xchg
js
subb
xchg
add
addr16
adc
repnz
std
inc
fwait
or
cmp
jb
fwait
aaa
mov
jno
sbb
ja
clc
pop
pop
fistl
and
pusha
xlat
sub
fwait
xor
test
call
fiaddl
pop
add
js
lahf
stos
outsb
push
ret
xor
les
pop
push
sbb
inc
fnstcw
pop
fnstenv
rol
jns
sub
insl
js
in
push
jb
insl
stc
dec
sbb
ret
sbb
add
sub
das
inc
xchg
or
xchg
clc
and
ds
aas
repz
xchg
lods
addr16
scas
jae
xorl
addr16
arpl
adc
pop
and
push
inc
mov
push
icebp
and
lcall
dec
out
cwtl
testl
lret
xchg
push
mov
xchg
mov
xor
cmc
rcrb
add
push
jle,pn
xchg
mov
push
add
fsubrs
and
mov
aad
or
push
sub
xchg
adc
push
lds
movsl
cmp
mov
lock
outsb
out
mov
in
incb
aas
iret
mov
adc
sbb
sub
js
xor
push
stos
push
xchg
xchg
jge
mov
fstpt
sarb
aad
lea
out
lret
xchg
sahf
ss
xchg
add
sbb
cmp
out
sti
mov
xlat
cmp
daa
stc
popf
sbb
fisubl
push
jo
js
dec
fdivl
push
arpl
xor
icebp
sub
call
cmp
ss
inc
sti
movsb
push
mov
daa
jo
nop
mov
dec
iret
push
enter
xlat
in
pop
adc
lock
ljmp
loopne
jns
cli
jne
adc
mov
ficomps
mov
adc
cmpsl
push
or
in
call
in
das
cmp
pop
mov
clc
xchg
test
and
add
jmp
add
inc
xor
in
xor
ret
std
cmp
or
ds
fs
xor
mov
pop
xchg
xor
repz
mov
cmp
mov
cmp
inc
adc
mov
and
push
push
in
int
adc
stos
or
dec
and
mov
pop
mov
mov
add
xorb
call
aaa
xor
xor
sbb
adc
ljmp
in
sbb
pop
mov
stos
int3
push
scas
js
cmpsb
mov
lock
cmc
ss
xchg
jl
cmp
cmc
adc
mov
loop
in
mov
insb
cmpsl
xchg
mov
in
sbb
jmp
push
adc
jnp
xlat
mov
dec
xchg
sbb
les
pop
mov
xchg
scas
lods
nop
pop
out
dec
ffree
pop
jl
push
pushl
mov
sbb
dec
out
orb
mov
sub
dec
push
aaa
push
testb
sub
push
jmp
mov
lret
dec
mov
imul
int3
sub
push
push
fdivl
adc
xchg
imul
movsb
sbb
je
mov
mov
out
dec
ret
pop
lds
fimuls
lods
adc
scas
lods
mov
pusha
dec
push
mov
sbb
and
jb
jae
lds
fucomip
clc
sbb
xlat
jge
jb
add
loopne
push
gs
hlt
test
test
out
out
push
cmc
push
cld
push
testl
inc
cmc
sti
and
and
ret
fwait
dec
shll
mov
fsubrs
pop
sub
inc
bound
stos
inc
out
nop
lahf
fs
call
ljmp
sub
loope
insb
shrl
sarb
out
cld
outsl
out
inc
sub
pop
add
pop
mov
pop
pop
dec
popf
aad
xchg
fdivr
test
je
push
subb
mov
sub
jle
idivb
sti
lea
frstor
shl
add
pop
out
cltd
push
or
cmp
test
or
repz
mov
fbld
pop
aad
push
mov
fldenv
clc
sbb
popa
cmp
or
push
cld
stc
into
mov
into
and
push
sub
ret
jmp
popa
adc
outsl
and
shl
mov
stos
fldl
fdiv
or
cwtl
js
and
je
jns
decl
ja
mov
stos
int
add
in
loope
sbb
loopne,pt
xchg
lea
in
clc
test
ret
mov
sub
test
je
xor
aam
mov
std
or
cmp
aaa
into
or
movsb
push
inc
jbe
xor
stos
inc
pop
xchg
and
add
mov
out
fldenv
or
add
and
pop
aaa
int
scas
mov
push
cmp
push
push
cli
repz
push
test
lret
jns
xchg
xchg
loope
cmpsl
push
mov
test
push
cmc
in
jecxz
sbb
dec
aam
popf
lds
mov
aas
popf
ss
int3
inc
scas
jb
mov
nop
test
add
dec
fnsave
mov
xchg
jl
in
addl
lea
shl
jle
divb
stos
stos
mov
clc
lret
shlb
xchg
in
cs
rcll
test
insb
add
imull
cmp
out
xchg
mov
xlat
jae
add
stc
testb
sahf
adc
jmp
and
cmp
adcb
outsb
int3
jo
xchg
sahf
xor
mov
sbb
mov
mov
sbb
jecxz
mov
add
les
adc
f2xm1
xor
mulb
in
rorl
mov
lods
fisubrs
and
scas
xor
pop
repnz
out
pop
test
fdivs
sub
pop
push
pusha
mov
mov
mov
jne
lds
xor
nop
test
sbb
dec
jl
in
push
nop
jns
bound
xchg
lds
and
ds
mov
vpaddb
or
outsl
lcall
inc
mov
add
iret
and
sbb
push
adc
imul
aad
jo
out
push
ficoml
pop
ss
mov
addr16
mov
lods
jge
pop
mov
add
mov
xchg
sahf
fs
scas
inc
dec
sub
int
je
test
xor
out
bound
lcall
and
sbb
stc
or
adc
cmpsl
and
js
xlat
cmp
push
sbb
push
xchg
lock
xchg
xor
idivl
adc
xor
mov
dec
push
out
cld
lcall
in
sbb
sarb
cmp
mov
clc
mov
pop
out
mov
fbstp
adc
daa
popa
stc
mov
sti
shrl
mov
xor
lds
cltd
fsubrs
jno
pop
mov
addb
xorl
pop
jne
scas
lahf
popa
ret
addr16
cwtl
out
bound
ljmp
lret
mov
scas
ret
inc
pop
sub
cmp
or
mov
inc
call
cmp
and
cmpsb
cld
lret
mov
ret
mov
sahf
pop
jmp
dec
fs
mov
pop
lret
pop
cmc
mov
or
push
mov
insb
sbb
stos
clc
scas
push
jb
subl
push
mov
sub
lldt
add
nop
inc
ret
xchg
xchg
jge
test
jne
loope
xor
ficoml
aaa
inc
mov
push
and
fbstp
fsubrs
hlt
aaa
sbb
pop
cmp
sub
jp
out
mov
dec
add
jbe
or
cmp
add
scas
adc
jp
test
int3
outsl
add
cmp
lds
idivl
int
in
ret
cmp
or
fdivrl
pop
xchg
bound
cld
std
cltd
and
fimull
inc
shl
adc
mov
sub
loop
xchg
stos
das
and
arpl
xchg
push
cmpl
inc
xchg
sub
dec
xor
lods
add
filds
adcl
mov
mov
and
adcb
daa
push
in
stos
aaa
stc
dec
mov
std
adc
ds
push
cmp
stos
fcmovb
pop
outsb
addb
ja
sar
or
cli
or
inc
int
inc
cmc
shrb
fidivl
out
jno
shlb
fwait
ds
inc
xchg
add
or
xor
pop
cltd
or
jo
pop
fs
pusha
mov
pop
lds
test
cmp
cltd
stos
js
popa
clc
fistpll
loope
add
xchg
ja
sahf
cmc
cmpsl
test
orl
push
adc
sti
jno
push
cs
std
xchg
mov
adc
pop
sbb
push
es
mov
and
xchg
clc
into
stc
nop
add
and
and
add
dec
pop
mov
push
xor
xor
add
cli
jnp
sub
inc
xchg
add
cmp
mov
pop
xchg
test
sbb
daa
leave
cmp
mov
jge
and
add
and
scas
test
adc
testb
hlt
adc
shll
sbb
aam
push
mov
pushf
vcvtsd2ss
out
and
cmp
cs
mov
mov
fnstcw
data16
in
or
fcmovnbe
stos
mov
test
divl
add
cmp
leave
dec
pop
pop
mov
arpl
xchg
orl
or
xchg
lods
or
iret
stos
pop
mov
push
loopne
fstpl
lahf
das
movl
add
add
aam
mov
adc
mov
std
fnstsw
outsl
xchg
jg
fcomps
sub
pop
cmp
push
lret
movsl
pop
rcrb
cli
iret
xchg
cmc
cld
out
aam
cmpsl
popa
inc
arpl
je
dec
outsb
outsb
jp
outsl
xchg
mov
jne
hlt
pop
lea
idivl
sbb
mov
add
inc
xchg
es
and
push
jbe
inc
sub
dec
pop
xlat
mov
push
jb
fnstenv
cmc
pop
clc
sbb
js
stos
jmp
dec
xchg
int3
mov
inc
lahf
push
pop
add
dec
sub
leave
fstpt
popf
lods
lret
fistpll
mov
cli
push
sub
xor
jb
mov
ja
xor
sbb
pop
cmp
xchg
mov
rcrl
repz
loop
scas
aam
inc
sahf
mov
or
mov
adc
jp
jbe
xor
cmpsl
xchg
jle
stos
xchg
sbb
fwait
or
xor
pop
add
mov
add
fwait
or
movsb
sti
decb
sub
sub
aam
inc
add
or
test
pop
jno
stos
dec
insl
add
mov
js
mov
sub
sub
xor
inc
xchg
test
mov
jne
add
cmp
stos
es
add
jge
sarb
pop
or
mov
fdiv
xor
inc
cld
or
inc
loope
cmp
arpl
and
mov
inc
in
hlt
push
cwtl
xor
inc
push
inc
fwait
mov
push
divb
test
mov
outsb
leave
inc
movsl
jne
dec
cmpb
incl
adc
mov
fistl
xchg
push
imul
dec
push
jl
popa
imul
daa
in
popa
ret
aad
and
mov
int
ds
pop
lds
dec
cltd
in
out
movsb
outsl
mov
mov
xchg
aas
pop
or
das
pop
add
inc
push
stos
fbstp
add
push
hlt
sbb
mov
neg
daa
jnp
sbb
pop
jno
in
stc
jbe
cmp
fcom
movsb
aad
sub
dec
jecxz
gs
repnz
sbb
aaa
sbb
enter
imul
jecxz
push
xchg
iret
or
xor
imul
cld
jle
lds
por
xchg
test
dec
adc
shl
data16
cmp
jo
shlb
or
cmc
add
test
sbb
pop
outsl
ret
fwait
cwtl
arpl
pop
iret
andl
in
xor
mov
add
cmp
ja
sahf
xor
std
test
jl
aam
or
jno
ficomps
lock
jp
mov
arpl
hlt
xchg
clc
jnp
sub
jno
dec
and
sub
cmp
rclb
mov
sahf
movsl
sahf
mov
or
in
or
mov
add
push
xchg
add
xchg
jo
dec
jnp
mov
adc
inc
lret
xchg
roll
mov
lea
ret
push
ja
ss
scas
hlt
mov
xchg
roll
call
lods
and
in
xchg
in
std
push
dec
xchg
lods
sub
mov
mov
rolb
and
imul
xchg
push
cli
lcall
aam
shlb
xchg
movsb
and
call
mov
imul
incl
fdivp
mov
fcoml
out
inc
stos
mov
jo
jp
dec
sbb
pusha
std
ret
jl
xor
es
in
movups
sbb
insb
mov
arpl
jle
outsl
xchg
adc
mov
adc
lret
data16
adc
rcrl
cmc
flds
adc
dec
sti
cmp
mov
add
xor
mov
cmp
testb
push
mov
mov
inc
push
push
or
push
pop
ja
dec
mov
push
cmp
mov
es
faddl
in
int
aaa
shrl
push
lcall
push
and
xlat
add
lcall
xchg
cmp
in
int
add
pop
movsb
jp
int3
scas
and
mov
mov
sub
mov
dec
pusha
rcrb
and
inc
data16
lret
xor
mov
cltd
mov
pop
inc
inc
loope
add
mov
mov
lret
push
shlb
call
mov
es
popa
or
dec
xor
loope
push
mov
mov
adc
pop
sub
ret
pusha
imul
cmpsb
movsl
outsb
adc
push
in
repnz
xchg
data16
xor
pop
mov
enter
pop
adc
or
inc
mov
pop
ret
pushf
in
dec
outsb
pop
out
rcrl
lsl
xchg
pop
lcall
stos
mov
jg
mov
pusha
pop
das
sub
lahf
ret
add
push
and
push
push
mov
mov
lahf
xor
cmp
mov
jne
push
push
popf
pop
cld
push
pop
gs
lock
shl
in
outsb
gs
or
lods
aaa
in
sarb
or
mov
inc
fsubl
aam
xor
ss
mov
aas
xchg
mov
ret
es
add
repz
push
push
jecxz
mov
loop
cwtl
pop
or
lock
sub
lcall
mov
mov
ss
jmp
test
push
shrl
stc
int
push
push
mov
inc
sub
loopne
notb
mov
aad
mov
pop
fucomip
jno
mov
adc
jo
xor
ljmp
aaa
dec
gs
lahf
loope
xchg
adc
mov
clc
jae
or
mov
and
test
mov
inc
decl
arpl
push
sbb
ljmp
call
sarb
push
mov
mov
mov
imul
rcrb
sbb
fistpl
lret
cmp
mov
fstpl
int3
jb
lahf
mov
cmc
es
xlat
inc
inc
pop
inc
or
ret
mov
pop
outsl
dec
ret
movsb
icebp
push
rclb
rorl
in
sub
dec
repnz
sub
push
lods
or
inc
push
daa
sub
bound
aad
adc
js
sbbl
out
in
mov
push
ss
ja
or
xchg
mov
add
lds
add
out
aam
sub
and
dec
fsubl
stos
pop
or
jecxz
repnz
sub
lcall
sub
mov
jmp
lods
cmp
aaa
dec
ds
negl
pop
pop
sarl
ds
lahf
decl
pop
mov
notl
sub
cmp
out
icebp
cmp
jmp
sub
dec
or
mov
rcll
add
imulb
sbb
adc
push
cmp
out
mov
pop
fcomi
andl
xchg
leave
pop
ret
add
flds
pop
cmp
out
shll
dec
mov
adcl
les
pop
xor
lods
ljmp
pushf
popa
sub
pushf
mov
mov
fimull
imull
incl
sar
inc
adc
push
fldl
arpl
or
add
popf
pop
or
xchg
add
xchg
in
lahf
and
rclb
stc
repz
push
xchg
adcb
div
int
or
pop
stos
push
iret
pop
out
mov
arpl
out
push
mov
sti
jg
push
push
mov
ret
sbb
call
div
orl
cwtl
jo
aas
mov
rol
jae
inc
out
cltd
xchg
in
loop
jmp
xor
cld
inc
cmpsl
push
lcall
orl
jmp
push
repz
xlat
pusha
bound
sbbl
xchg
xor
mov
repnz
jbe
pop
ret
jp
hlt
lcall
les
push
dec
add
push
adcl
xchg
mov
or
mov
std
pop
into
mov
cmc
or
and
test
xor
dec
lea
mov
lret
xchg
adc
sti
jne
and
xchg
mov
sbb
jo
es
fisubrs
sbbb
lcall
dec
push
idivb
ja,pn
pusha
jge
pop
mov
loopne
jmp
out
mov
adc
cmpsb
je
loop
dec
jno
loop
sub
dec
sub
imul
lea
add
ljmp
jnp
fcoms
fdivr
sub
dec
xchg
add
mov
ret
pop
loop
or
push
movsl
xchg
inc
sahf
mov
dec
mov
adc
jns
mov
aam
push
loop
fsts
xor
mov
lods
add
sbb
xchg
jbe
ret
stc
fldpi
fcmove
push
and
xchg
negl
loopne
mov
imul
lret
cmp
mov
mov
sahf
sub
lahf
dec
in
pop
test
mov
xor
sub
cmp
xor
dec
int
cmc
ja
stc
ds
hlt
stos
mov
mov
neg
inc
or
dec
aaa
push
fcmovu
jb
ja
push
shll
pop
scas
add
stos
cmp
fsub
add
mov
mov
inc
sub
sbbb
or
add
lret
es
and
sbb
pop
sbb
push
fs
int
jle
imul
jo
xchg
xchg
hlt
push
shll
jb
in
decb
add
call
loopne
daa
push
mov
out
aad
mov
ret
or
mov
mov
ficomps
jp
mov
cwtl
in
movsb
jecxz
sbb
dec
int3
jbe
jbe
and
arpl
xor
mov
arpl
std
pop
cmc
cs
jl
sbb
imul
int
mov
dec
cli
xchg
jge
popl
sbb
lods
or
outsl
jle
mov
mov
pushf
addr16
mov
fildll
inc
lret
movsl
icebp
movsl
mov
adc
sbb
aas
lahf
cmp
fisubrs
mov
loope
mov
lahf
push
xchg
and
mov
xor
jns
sbb
jg
daa
stos
ja
ja
gs
cli
xchg
dec
or
addr16
fstps
xor
outsb
dec
movsl
sarb
jmp
adc
dec
sub
inc
and
in
pop
addr16
push
out
in
js
xchg
cli
xchg
and
cmp
push
outsl
cld
cmp
aas
stc
mov
xor
insb
lahf
es
xchg
aaa
sti
pop
cwtl
jg
negl
ss
loop
insb
inc
and
and
xchg
mov
scas
sarb
outsb
inc
scas
push
cltd
mov
lret
stc
xchg
je
out
push
push
mov
cwtl
push
push
pop
mov
add
out
adc
xchg
cli
test
inc
insb
sbb
dec
mov
fwait
inc
xlat
sahf
lcall
xchg
mov
vunpckhps
in
jne
adc
adc
fldt
cltd
aas
or
mov
mov
add
sbb
mov
shrb
sahf
add
arpl
cmpsl
xchg
daa
mov
add
cli
rcrl
mov
dec
pop
call
cmp
mov
into
pop
aaa
or
lock
mov
cmp
dec
dec
jns
aam
ja
rcrl
les
xor
test
inc
aas
cmp
ss
aad
jno
cli
les
movsl
js
mov
pop
enter
call
fdivs
clc
mov
pusha
jle
or
outsb
add
pop
adc
mov
push
cmpsl
fistl
mov
inc
cld
adc
aas
push
rorl
sub
pop
jbe
sbb
mov
stos
jge
xchg
sahf
scas
les
subl
ljmp
lds
clc
add
jl
adc
cltd
pop
aas
pop
jne
fcompl
or
stos
mov
fdivr
push
shl
jbe
daa
insb
mov
lret
clc
push
xchg
push
inc
sub
nop
fidivl
add
scas
cld
or
repnz
and
xor
sub
in
pop
lret
es
fcoml
bound
mov
mov
test
stc
flds
aad
push
cmc
rol
adc
addr16
aad
pop
jg
jns
add
or
lahf
cmp
pop
mov
nop
pop
and
xor
enter
adc
fdivrl
shlb
jo
adc
mov
test
pop
inc
fiadds
adc
or
popf
sub
aaa
sbb
pop
cmp
inc
and
lods
mov
push
test
cmpsl
sarb
jo
popf
xor
xchg
mov
aad
in
cmp
and
aam
aas
push
mov
jae
test
fldcw
test
stos
jmp
out
sbb
mov
int
lock
cltd
sbb
out
pop
js
cmp
iret
rcrl
inc
push
fdivrl
push
stos
jge
push
and
sti
push
cwtl
outsl
xor
or
nop
sahf
pop
shrl
xchg
loope
mov
xchg
sub
scas
scas
mov
loop
xchg
pop
fcoml
jp
dec
mov
rorl
popa
test
rclb
xor
dec
imul
cmp
or
push
jmp
jmp
jb
and
push
dec
mov
cld
ud0
pop
repz
cwtl
mov
cltd
jp,pn
mov
test
aam
jg
xchg
outsl
add
insl
xchg
mov
sahf
mov
inc
push
adc
cmpsw
bound
insl
sahf
imul
jnp
imul
fstp
into
jne
jbe
fisubrs
xchg
adc
mov
sub
inc
test
push
mov
lret
xor
in
sub
iret
fisttpll
dec
test
cmp
daa
movsb
dec
add
pop
lock
addl
faddl
xchg
push
sub
dec
and
cmp
pushf
arpl
xchg
leave
test
cli
inc
inc
mov
inc
call
jl
das
xchg
mov
xor
mov
inc
or
cmpsb
xchg
ljmp
mov
stos
mov
mov
out
xchg
mov
dec
sbb
sub
mov
in
lea
sbbl
mov
js
sar
adc
or
jle
xor
or
xchg
movsl
stos
sub
jmp
int
arpl
out
adc
xchg
mov
test
rcrb
cmpsl
aaa
sahf
mov
loop
daa
test
cwtl
test
mov
in
arpl
fmul
and
adc
xor
push
dec
mov
push
daa
dec
in
push
xchg
mov
out
xchg
cltd
popf
outsb
cmc
ljmp
sahf
push
cltd
pushf
scas
inc
ja
mov
inc
pop
inc
fisttpl
and
push
fildll
cli
pop
je
shl
jno
mov
add
jae
jo
push
shll
fs
cwtl
mov
in
mov
stos
lcall
repnz
outsb
loope
lcall
test
pop
shrb
sub
mov
fstpt
pop
add
push
mov
ja
adc
xor
das
push
push
jmp
and
in
push
in
pop
push
repnz
mov
aas
xchg
jmp
sti
andb
and
ljmp
inc
xor
mov
das
into
outsl
ret
das
xchg
insl
aam
ja
addl
inc
mov
je
mov
and
adc
cwtl
cmp
js
xor
sti
ljmp
jmp
sbb
fcmovnb
pusha
push
jecxz
sbb
insb
push
into
test
sbb
inc
xlat
cmp
mov
pop
adc
sub
add
sbb
in
sub
insb
cmp
mov
ficompl
int
dec
pop
xor
jle
xor
inc
or
cmpsl
into
xchg
aad
icebp
adc
sbb
ror
mov
jne
fistps
rclb
mov
in
xchg
mov
mov
lods
pop
movsb
aad
rcrl
loope
mov
sub
cmp
or
in
in
dec
mov
xor
dec
sti
xchg
sbb
cmc
adc
dec
jge
lods
rol
lock
jg
fiaddl
mov
cwtl
mov
loopew
sbb
in
inc
dec
out
call
out
sti
out
cmp
xchg
cmp
enter
cmp
dec
dec
in
sbb
stos
xchg
dec
adc
sbbl
add
cmp
sbb
mov
push
jp
fsubrl
fsubs
sub
pop
mov
cmp
addr16
punpckhdq
rol
push
push
add
jbe
iret
out
test
pop
test
xchg
ficoms
sahf
insl
adc
cs
inc
mov
loope
or
je
pop
dec
imul
fistl
sar
repz
pop
ja
mov
jg
xlat
mov
movsb
and
lcall
mov
and
gs
adc
xchg
sub
xchg
aam
dec
loope
stos
add
dec
push
mov
lds
pop
jp
into
mov
mov
in
jno
sub
push
mov
add
xorb
or
xchg
push
lods
inc
pop
cmpsb
out
inc
add
sub
ret
iret
stos
mov
out
jno
lea
mov
cli
dec
int
scas
push
test
xor
cmpsl
rcll
cltd
pop
push
cmpsb
cmp
sbb
dec
inc
sub
xor
idivl
inc
dec
enter
mov
lods
add
add
into
and
mov
test
jg
lret
mov
adc
mov
or
in
pop
mov
stc
xchg
lea
lahf
dec
adc
dec
dec
add
cmp
scas
enter
lret
cld
mov
pop
hlt
cwtl
xor
leave
mov
sti
fwait
inc
add
adc
loope
dec
push
call
pushf
xor
fisubrs
stos
les
and
xchg
inc
leave
jb
repz
leave
jp
sti
push
cld
fcompl
cld
push
stc
jae
push
mov
sbb
aaa
outsl
push
imul
xchg
insl
adc
or
leave
mov
test
out
in
mov
dec
in
dec
fnclex
inc
push
inc
ljmp
xchg
mov
lods
and
in
inc
pop
xchg
and
mov
mov
arpl
in
push
sarb
iret
fldt
mov
push
cmp
jecxz
rorb
or
aas
xchg
and
dec
mov
jo
roll
sbb
int
repz
rorb
mulb
sbb
sub
xchg
stos
inc
data16
push
mov
push
dec
sub
ljmp
adc
xchg
scas
push
xchg
mov
adc
cmpsb
or
out
jmp
test
aaa
hlt
addr16
pop
ds
sbb
xchg
sbb
incw
xchg
xor
mov
iret
fcomip
cmc
jle
lahf
mov
mov
xor
mov
and
insb
mov
or
mov
popa
xor
sbb
inc
bound
lods
mov
mov
mov
xor
scas
xchg
sahf
pop
lret
cmpsl
mov
mov
adc
mov
mov
into
cmp
filds
xor
inc
imul
cs
and
aam
ss
and
out
and
cmp
stc
pusha
jb
inc
mov
push
nop
mov
dec
aaa
pop
test
mov
mov
dec
mov
stos
or
xchg
outsb
pop
mov
shl
cmpsb
movsb
ja
test
addps
fwait
js
mov
aaa
stos
repz
xchg
dec
dec
cltd
adc
xchg
or
cmova
lret
push
jb
in
mov
pop
lret
sbb
les
jb
rorl
pop
mov
orl
inc
push
pop
push
stos
in
mov
lcallw
movsl
xlat
inc
mov
in
mov
push
push
repnz
dec
xchg
nop
pop
mov
sbb
jno
cmp
jmp
push
and
divb
jg
pusha
adc
mov
cmpl
adc
cmp
int
cmp
and
sbb
iret
enter
addl
sub
sbb
mov
jbe
lods
loope
sbb
ds
mov
sub
inc
adc
out
call
scas
int
divl
sbb
imul
xchg
sub
leave
push
mov
mov
xchg
pop
mov
pop
mov
stos
addr16
mov
repz
leave
leave
cmp
mov
adc
dec
sub
mov
ficoml
arpl
gs
mov
fistl
lods
sarb
in
insb
xor
popf
or
dec
mov
fcmovnbe
imul
pop
int
movsb
inc
lods
out
mov
cltd
sbb
shlb
cld
mov
xor
jns
dec
fs
hlt
fs
xchg
sti
js
jmp
cltd
loope
mov
dec
daa
bndstx
and
test
xchg
ss
icebp
movl
add
sub
in
adc
mov
fcmovnb
fstpl
int
shlb
xor
pop
mov
mull
pop
cmp
mov
inc
loopne
xchg
outsl
movlps
jecxz
sahf
cld
mov
out
inc
mov
jo
stc
dec
mov
pop
pop
cli
fmuls
gs
dec
aad
or
sbbb
mov
add
inc
xor
xchg
mov
cli
dec
arpl
dec
jle
push
adc
pop
inc
cmp
std
jl
lcall
hlt
arpl
xor
lret
orb
inc
xlat
jo
int3
xor
push
sub
lcall
jae
mov
rclb
test
clc
mov
aad
push
rorl
test
fisubrl
rcr
ss
insb
gs
mov
inc
int
lods
dec
dec
test
ja
add
mov
ja
dec
pop
mov
jmp
push
mov
push
push
cs
adc
lret
sbb
mov
popf
xor
push
dec
sarl
pop
pop
cmp
pop
jae
push
dec
dec
pusha
jmp
and
rclb
xchg
loope
movsbl
out
enter
xchg
inc
mov
jle
ljmp
and
mov
xor
inc
lcall
notb
enter
movsl
or
mov
ret
pushf
jmp
popf
push
loope
and
pop
scas
push
mov
repnz
repnz
rol
mov
and
leave
flds
lret
cmp
int
mov
xchg
outsb
pop
cmp
ss
sti
mov
mov
andl
sub
mov
adc
rcl
mov
iret
mov
mov
sbb
gs
push
cmp
mov
dec
xor
xor
nop
xchg
outsb
dec
push
cwtl
subl
rcrl
rol
push
jmp
repz
fisttps
out
test
loope
loop
shrl
mov
ja
data16
push
outsl
insl
jbe
xchg
mov
es
pop
xor
shlb
xchg
vmovaps
and
dec
ss
xor
sbb
mov
push
fidivs
adc
or
push
inc
pop
loop
mov
push
addb
fsubs
push
dec
adc
inc
push
je
aam
cmc
js
aaa
fnstsw
sahf
leave
dec
pop
lret
aam
popa
adc
addr16
jp
xor
ds
jle
into
xor
hlt
or
mov
mov
jle
jns
mov
pop
adc
cmp
negb
xchg
shrl
sub
add
add
popl
add
xchg
push
daa
fs
ja
xchg
mov
dec
push
cmp
stos
cmc
lcall
inc
jmp
xchg
xor
add
cmpsl
mov
in
ret
jnp
xchg
sub
mov
mov
jne
lcall
shll
or
dec
jl
xor
test
adc
jae
and
popa
dec
mov
orl
push
pop
sbbb
mov
sub
mov
js
js
xchg
dec
dec
bound
xor
push
jae
xchg
sti
and
das
xor
jae
xor
xorl
lods
in
xchg
add
inc
mov
insb
adc
nop
xor
adcl
xchg
dec
pop
adc
icebp
cs
inc
ss
push
das
jo
xor
mov
xchg
push
push
sub
test
gs
sub
movsb
fistpll
insb
jp
push
lahf
sub
pushf
pusha
inc
mov
sub
adc
stc
roll
mov
das
or
cmp
cmp
lahf
jbe
std
insl
lcall
fildl
push
xchg
jnp
mov
xlat
test
std
sarl
adc
inc
fs
call
or
pushf
pop
mov
mov
push
add
popf
cmp
daa
inc
fcoml
test
add
jnp
pop
aaa
and
iret
out
hlt
in
fcoms
xchg
hlt
outsl
jne
mov
cmp
pop
and
cld
call
fnstcw
into
mov
mov
mov
imul
lock
xchg
xchg
jl
dec
xchg
test
mov
xchg
testl
xor
movsb
jb
hlt
testb
sbb
sub
rolb
data16
lahf
stos
inc
pop
bound
pop
daa
jg
gs
sub
or
loopne
push
out
and
int3
jle
test
movsb
xchg
push
mov
jnp
cmp
pop
addb
pop
ljmp
mov
cmpsl
pop
popl
jo
xchg
out
mov
aam
inc
shlb
mov
andb
jmp
push
mov
stos
jns
sbb
mov
lods
push
or
fs
test
movsl
lret
ror
movsl
xor
and
fnstenv
ficoms
outsb
sarb
shlb
mov
sub
rclb
iret
adc
leave
ds
adc
mov
bound
and
enter
cmc
adc
test
pop
sub
es
mov
decb
cmpsl
aas
push
orl
cld
xchg
xor
fisubrl
xchg
and
fidivrl
rcll
mov
or
push
jns
jg
dec
hlt
mov
sbb
pop
les
or
mov
push
out
test
aam
call
pushf
mov
je
jbe
fwait
inc
push
in
mov
in
loop
mov
sub
cltd
jo
stc
arpl
dec
fidivrs
xchg
xchg
cltd
mov
into
dec
lock
lods
lods
mov
daa
lret
ret
pop
and
dec
imul
jl
mov
jle
mov
addr16
leave
adc
inc
mov
inc
rol
xor
ljmp
pop
sub
loop
cmp
addr16
aaa
mov
imul
add
popa
and
mov
xchg
cmp
pop
je
push
xor
in
and
out
subb
adc
xor
divb
push
les
mov
aas
nop
jge
clc
nop
sub
insl
jg
movsb
jecxz
jl
aas
scas
push
xor
cwtl
mov
out
and
subl
xchg
adc
vpmulhuw
loop
mov
loope
imul
rolb
imul
push
jne
das
inc
test
jns
test
dec
jne
call
jp
outsl
leave
xchg
inc
fdivs
and
insl
lahf
xchg
adc
mov
out
dec
popa
sbb
addr16
pop
lods
cmpps
test
dec
gs
or
push
outsl
cmova
adc
testb
fcmovnu
add
cmp
pop
ja
fisubs
shlb
aas
adc
add
inc
mov
xchg
xor
and
adc
movsl
sub
jp
add
arpl
push
inc
test
mov
sbb
inc
out
dec
xchg
inc
pop
jne
jbe
or
jns
mov
cmpsb
or
lods
inc
aam
insb
leave
adc
sbb
cmp
push
cmp
aad
jbe
out
pop
lea
insb
or
inc
imul
aam
jmp
seta
fimull
shlb
mov
lcall
int3
adc
test
xor
mov
xchg
push
or
insl
xor
js
addb
pushf
mov
mov
mov
sahf
insb
jmp
arpl
rcll
popf
arpl
sbb
sub
int
scas
jo
lret
xchg
xor
inc
icebp
int3
sbb
adc
aad
ljmp
fnstsw
xchg
inc
mov
fldl
loop
int
popf
arpl
jle
loop
or
test
outsl
sub
mov
dec
mov
subb
lcall
call
fsubrl
imul
xor
mov
inc
push
outsl
out
or
push
sahf
fwait
insb
scas
mov
mov
or
mov
mov
arpl
sub
cmpsb
sbb
insl
loope
jno
les
sbb
call
data16
testb
vcvtss2si
shrb
sub
out
push
push
xchg
pop
mov
xchg
call
cmp
fwait
mov
data16
std
push
pop
das
xchg
pop
dec
mov
outsl
push
push
sbb
dec
jle
cs
cmp
lret
lret
lret
subb
adc
sahf
mov
std
pop
out
or
xchg
movl
shl
stos
inc
je
push
je
push
push
jmp
jecxz
or
adc
xor
bound
jecxz
fdivrl
pop
lcall
jp
and
adc
aas
push
fbld
insb
in
xchg
add
stc
cwtl
pop
icebp
inc
sbb
enter
or
jne
mov
xor
fs
mov
mov
fdivrp
push
mov
mov
fsubr
inc
lahf
inc
push
mov
adc
inc
lahf
pop
or
cmp
adc
xchg
xchg
xor
cmc
mov
es
xor
jno
out
jmp
dec
inc
stos
pop
rcrb
push
ljmp
mov
fldl
push
ret
into
js
aas
stos
test
xchg
mov
cwtl
fwait
xor
insb
mov
pop
mov
mov
movsb
ficoms
jne
ret
xchg
inc
ja
mov
es
test
push
ror
push
test
enter
out
mov
cmp
pop
imul
out
adc
sub
lcall
das
ss
cmp
mov
mov
pop
mov
jnp
sbb
or
cli
cmp
sbb
aaa
sbb
mov
sbb
inc
dec
dec
fwait
mov
popa
adc
mov
add
gs
in
cwtd
cmp
xchg
mov
jbe
outsl
incl
xor
mov
jg
add
jg
xor
xor
push
cwtl
jge
cwtl
jl
cltd
scas
movsb
sub
mov
jnp
out
mov
add
dec
pop
fnstsw
in
stc
push
imul
jno
fsts
adc
pop
lret
jne
dec
inc
push
inc
jg
jbe
jle
xlat
cmp
push
faddl
lods
fsubl
fists
xor
add
sub
orps
dec
mov
inc
stos
shlb
push
movsb
sbbb
jnp
ss
xchg
test
adc
leave
jnp
test
lret
mov
jmp
mov
adc
pushl
movsb
xor
leave
lds
xor
pop
mov
push
dec
dec
dec
loope
test
sub
insl
add
cwtl
mov
das
jns
push
inc
cmp
push
inc
push
pop
mov
adcb
out
push
mov
stos
repnz
pop
cs
popf
outsl
xchg
xchg
sub
push
add
or
rcll
sub
dec
cmp
sbb
sub
and
lcall
int3
jge
pop
mov
dec
rcl
add
bound
sbb
jno
imul
add
daa
addr16
pop
sub
data16
cmpsl
push
into
and
icebp
sarl
arpl
lret
repnz
and
xor
pop
cld
mov
push
fdivrs
enter
icebp
dec
and
fwait
sti
lahf
inc
aam
jae
cwtl
je
nop
movsl
cmp
push
paddb
xchg
subl
mov
shl
dec
es
in
mov
dec
xchg
jg
cwtl
cmc
dec
pop
movsl
cmp
outsl
cmp
ljmp
loop
pop
dec
mov
ja
jg
lret
xlat
push
addb
addr16
fsubrs
inc
pop
adc
mov
movsl
jo
or
xchg
push
loopne
jnp
pushf
fcom
movsl
sbb
pusha
dec
add
add
pop
mov
pop
jb
outsb
xchg
xor
into
jmp
data16
push
inc
shrd
inc
out
test
das
adc
mov
add
xor
jle
xchg
mov
adcl
cwtl
clc
xchg
sbb
fstl
inc
or
mov
sub
aad
popf
in
cmc
dec
adc
je
xchg
test
and
lret
mov
inc
push
xor
lds
sahf
lds
imul
xchg
adcb
icebp
sub
jne
cmpsb
dec
mov
fsubrs
mov
xorb
sbb
or
loopne
push
jmp
add
xor
cmp
add
inc
mov
jnp
dec
mov
leave
sarl
inc
and
fdivl
push
jo
push
push
movl
and
fsubl
ret
hlt
repnz
data16
lcall
sbb
mov
cmpsl
test
out
stos
mov
movsl
icebp
out
jo
pop
xchg
sub
out
dec
push
mov
aas
in
std
push
call
xlat
outsb
sarb
xor
popa
dec
les
lahf
add
into
xor
mov
insl
ja
pop
jle
or
jecxz
es
dec
mov
sahf
or
call
jae
outsl
push
cs
rcrb
orl
inc
notb
push
leave
pop
shll
inc
mov
or
sub
and
mov
addr16
shrl
mov
out
std
inc
xchg
mov
out
cmp
mov
or
cmp
addr16
inc
cmpsl
shrb
call
in
pop
xchg
cltd
pop
cmp
fisttpl
call
lahf
adc
mov
cmp
repnz
add
ja
inc
imul
out
cmpsb
daa
cli
pop
pop
insl
ja
imul
mov
in
repnz
mov
sbb
and
inc
mov
ja
fsubrs
test
pop
xor
jbe
inc
imulb
cmp
jmp
cli
cwtl
rorl
adc
rclb
jecxz
mov
push
testl
in
popf
and
sbb
cli
out
shr
cmp
push
add
xchg
xor
out
lds
aas
popa
or
insb
dec
loopne
add
push
cmc
sub
mov
mov
dec
enter
pusha
jmp
mov
cmp
dec
lret
xchg
addr16
or
hlt
or
push
fnsave
dec
out
imul
push
add
test
jbe
addb
fiadds
jbe
stc
out
test
arpl
les
lret
popa
pop
icebp
dec
lods
and
sbb
out
inc
stos
and
cmp
pop
ret
mov
mov
xchg
scas
repz
sbb
test
and
adc
pop
mov
insb
stos
ljmp
mov
gs
rorl
xchg
cwtl
iret
and
xlat
cmp
pop
mov
pop
mov
cld
sub
ficompl
leave
sub
cmp
jns
int3
das
shll
inc
mov
ja
jbe
in
add
sub
dec
pop
ret
pop
stos
jno
xchg
scas
ss
pop
in
push
mov
in
cmp
pop
inc
inc
inc
jg
ljmp
or
xchg
cmp
fwait
jmp
int
pop
mov
inc
rcrb
pop
dec
ja
adc
shlb
pop
and
fistl
fidivl
push
fimuls
mov
shlb
aaa
sub
je
out
xchg
dec
hlt
fwait
mov
ret
testl
mov
push
lret
xchg
add
add
mov
repnz
inc
in
rclb
nop
sar
cmp
pop
cmpsb
testl
ja
lahf
sbb
es
in
je
pop
lea
jl
xlat
push
pop
shlb
pop
pop
insl
pusha
mov
test
in
jnp
or
mov
xchg
not
or
fsubs
inc
rcrb
jnp
cmp
push
add
stos
xchg
cwtl
aad
subl
sbb
test
cmp
lea
mov
jmp
push
sbbb
cld
cmc
fcompl
sbb
sbb
sub
cs
jg
call
xchg
jbe
push
daa
cmp
faddl
lcall
sbb
inc
fisubrl
add
js
scas
out
das
adcb
js
scas
iret
pop
dec
stos
mov
sub
icebp
jle,pt
data16
and
mov
insb
cmp
cmp
movsb
sub
dec
inc
mov
pop
pushf
repz
jno
fs
add
inc
inc
and
xchg
rclb
mov
mov
and
repz
xor
out
loop
mov
mov
mov
push
cmp
fdivrl
lahf
add
in
adcl
xor
jb
in
mov
xor
outsb
add
popf
push
stc
cmp
mov
lahf
test
adc
push
popf
call
pop
test
pop
sub
in
xchg
movsb
dec
cmp
pop
mov
pop
pop
mov
and
xchg
cmc
hlt
inc
cmpsb
mov
mov
cmp
sbb
mov
outsb
push
add
andl
inc
sbb
push
shrb
movsl
mov
cmp
jle
jnp
push
xchg
lods
push
lcall
nop
stos
xchg
fbld
fsubl
shrb
jecxz
push
cwtl
dec
mov
fisttps
sub
es
add
je
es
mov
cltd
ljmp
lahf
mov
and
call
or
dec
jo
mov
push
cli
arpl
jp
outsb
pop
in
mov
push
movsl
cmp
add
and
cwtl
mov
mov
adc
movb
fs
rcrb
test
sarl
add
dec
ljmp
dec
pop
into
mov
dec
test
in
lock
inc
sbb
popf
aas
inc
cmp
popa
pop
out
pushf
aaa
xchg
inc
rolb
arpl
jmp
repz
fcomi
lods
jmp
lahf
mov
loope
xchg
clc
inc
push
push
push
mov
sub
push
fldenv
adc
mov
mov
mov
push
inc
or
dec
das
les
call
loope
das
in
out
push
add
lret
sub
popa
xorl
in
push
rcl
cltd
and
movsl
pop
lahf
mov
push
and
mov
push
xchg
filds
push
repz
mov
adc
cltd
push
sahf
add
in
cmpsb
and
xchg
pop
in
mov
jne
xor
insl
adc
dec
xchg
mov
mov
or
sbb
push
loope
xchg
ret
mov
or
sub
adc
push
adc
imul
rcr
push
mov
and
ret
in
mov
sysret
or
add
xor
sub
aaa
lock
mov
lock
cmp
cmp
les
jl
sbb
xchg
sub
xlat
in
push
fiadds
cltd
adc
and
mov
cmpsl
adc
ss
fwait
mov
aas
pop
mov
test
xor
push
pop
fbld
push
mov
ja
push
push
ficomps
push
xchg
fcmovb
add
adc
movsl
adc
gs
and
lock
push
mov
pop
jl
sub
outsb
dec
repz
mov
aaa
daa
adc
dec
pop
jle
je
inc
movsl
pushf
xor
stos
or
dec
jnp
xorl
sbb
sub
lods
cmp
mov
ds
loope
pushf
adc
movsl
outsb
popa
dec
addl
cmpsb
sub
dec
fisttps
in
test
cs
inc
stos
cld
and
xor
or
int3
jle
enter
enter
mov
gs
ljmp
test
jno
sarb
test
cmp
pop
sub
loope
adc
scas
shll
xchg
dec
aaa
mov
pop
dec
repnz
jbe
lods
dec
mov
movsl
dec
inc
aad
out
popa
cmpsl
dec
sarb
jp
in
adc
push
test
cs
jbe
stos
dec
lcall
clc
icebp
rcl
and
push
inc
faddp
sub
nop
pop
int3
gs
mov
int3
jo
sti
loope
in
dec
imul
inc
scas
xchg
sbb
jmp
jg
fstpl
mov
pusha
test
fs
ret
and
shlb
nop
loop
xorb
pop
sbb
mov
pop
icebp
jmp
aad
lahf
fbstp
fnsave
mov
jo
andl
test
sub
inc
jmp
mov
test
ficoml
lret
xlat
xor
sub
xchg
mov
loopne
add
xchg
out
mov
scas
push
mov
or
cmpsb
jl
jg
mov
mov
decl
push
or
or
and
dec
mov
pop
dec
dec
mov
fdivrl
sti
push
jmp
jnp
popf
divb
pushf
mov
sub
and
jge
leave
mov
bound
sbb
test
jge
sbb
into
push
aaa
push
cmp
xchg
cmp
fxch
pop
or
sub
sub
daa
push
insl
and
addr16
loope
mov
shlb
pusha
dec
in
test
das
inc
push
mov
cmpsb
test
cltd
ljmp
out
push
pop
xchg
jp
bnd
out
in
popa
push
imul
hlt
gs
push
jp
mov
jns
pop
xchg
xchg
sbb
mov
xor
imul
mov
int
shl
test
rcrb
icebp
notl
inc
pop
or
adc
les
lret
filds
sbb
out
mov
mov
fs
lahf
xor
out
out
aaa
adc
xchg
xchg
dec
dec
mov
jnp
push
mov
jge
cmp
mov
push
mov
fsts
push
in
rclb
xor
xor
sub
lcall
mov
out
push
inc
and
int
mov
test
into
jmp
mov
mov
lret
movsl
fcomi
adc
cmpb
mov
xchg
sbb
mov
fbld
push
jmp
cmp
clc
arpl
test
aam
pop
sbb
mov
and
sub
subb
and
test
notl
fptan
cmp
neg
pop
push
xchg
adc
push
sub
pop
scas
jl
sub
inc
pop
sub
xlat
js
cmp
dec
dec
and
dec
repz
inc
pop
rol
lret
aam
cmp
in
nop
cli
fldl2t
loopne
subl
test
mov
jg
or
sub
push
lods
mov
fsub
cmpsl
lret
jns
push
aas
dec
sub
inc
push
sbb
cmp
mov
xchg
jb
cs
xchg
es
leave
sbb
xlat
mov
inc
call
jb
scas
push
fmul
xlat
outsl
cmp
int
out
pop
add
sub
out
adc
lahf
sbb
jno
pop
js
sti
and
sti
sbbb
inc
jecxz
xor
xchg
fists
or
sbbl
push
adc
sbb
pushf
add
adc
sbb
nop
cmp
fnstcw
or
xchg
push
test
xor
jb
cmp
or
daa
mov
dec
lds
pop
xchg
imul
cld
inc
fs
add
std
ret
mov
jmp
out
les
xchg
mov
mov
and
das
push
imul
lretw
and
hlt
cmpsl
es
les
push
or
jb
stos
push
leave
aad
sbb
mov
mov
mov
imulb
cmp
mulb
movsl
es
cmp
sbb
std
jns
imul
loopne
iret
mov
or
decb
roll
push
dec
iret
and
fwait
scas
xchg
stos
jmp
adcb
aam
dec
mov
sti
jae
inc
sbb
imul
xchg
testl
loopne
sbb
inc
ds
jb
nop
rorl
dec
mov
loop
filds
lock
test
movsb
scas
xchg
mov
pop
sbb
shl
adc
imul
mov
aad
gs
and
push
lret
repnz
adc
add
gs
pushf
lods
aam
in
stos
adc
aaa
pop
inc
lret
es
shll
loop
insb
sub
cmp
in
cmp
inc
cmp
int3
arpl
adc
push
pop
outsb
nop
fcompl
cmp
cwtl
mov
inc
mov
or
mov
add
mov
push
cmp
faddp
pop
push
lods
jmp
mov
in
ret
sarl
nop
mov
push
mov
inc
or
popa
popa
mov
fsubrs
in
ret
addr16
push
push
daa
add
int
imul
adc
sbb
cltd
std
lock
sub
fucomip
mov
xchg
sub
lods
sub
inc
arpl
push
cmp
mov
call
movsl
into
test
daa
hlt
or
mov
pop
icebp
test
ret
cmp
mov
pop
push
rcrb
sub
ss
out
loopne
in
movsl
sub
push
xor
xchg
jmp
out
lret
cmp
mov
lahf
imul
mov
mov
stc
jo
fcomi
into
sbb
inc
sub
and
xor
and
test
push
aas
stc
lea
cmp
in
pop
imul
in
push
rorb
dec
pop
inc
pop
int
jg
mov
inc
xchg
in
and
in
loopne
ljmp
jo
mov
sub
lret
lret
sub
pop
inc
nop
daa
jns
jmp
sti
shll
test
imull
arpl
je
jg
inc
sbb
jae
adc
and
adc
aas
call
loop
mov
rol
xchg
add
push
in
jns
dec
add
adc
mov
in
inc
push
push
mov
push
adc
dec
cmp
cli
pushf
shlb
ss
cmp
enter
cmpsl
jmp
test
add
inc
aam
cmpsb
ret
add
lret
and
cwtl
push
mov
push
icebp
xor
cs
shld
xor
and
repnz
inc
stc
sar
cmp
es
sub
out
int
inc
ljmp
dec
das
xor
inc
lea
sub
mov
sar
sub
xor
bound
mov
and
test
in
inc
xlat
cmc
jmp
out
xor
sbb
add
add
inc
fcoms
and
jno
adc
decl
xchg
mov
mov
ficoms
lods
aam
mov
call
sub
lret
and
ljmp
xor
ja
mov
fcoml
arpl
test
sub
jae
das
cmp
fidivs
das
dec
pop
stos
dec
cld
mov
jbe
dec
test
sub
inc
dec
aas
imul
or
mov
inc
mov
push
sub
pop
jo
push
ds
sub
out
push
fs
sub
outsl
xchg
jo
dec
and
add
stos
or
or
ds
mov
dec
jp
xchg
sub
into
jb
jmp
sub
repz
cmp
cmc
sbb
mov
mov
repz
xchg
add
aas
addr16
out
xchg
pop
mov
mov
jbe
inc
and
sbbl
imul
rolb
xor
xor
fimull
adc
ret
hlt
jns
add
mov
fcomi
xchg
in
sahf
sbb
jg
insl
test
pop
ds
sub
shll
dec
icebp
mov
cltd
movsb
repnz
push
fsts
pop
mov
test
or
dec
and
aas
std
xchg
outsl
push
sbb
loope
sbb
xchg
cmpsb
popf
cmp
jns
gs
adc
popf
xorl
add
mov
sub
sahf
insl
adc
les
sar
shrb
jl
or
test
sti
sub
or
sub
jle
mov
push
fnstenv
push
and
adc
dec
lahf
xchg
mov
or
jns
adc
adc
inc
cmp
nop
jmp
jb
inc
xor
cmp
cld
mov
cmp
push
or
rcrb
push
in
pop
vmovapd
call
cmp
out
insl
xchg
sub
cmp
mov
pop
stos
lock
jge
inc
cmp
lret
dec
add
xchg
aaa
into
mov
cltd
mov
and
sbb
movl
jbe,pt
enter
pop
jecxz
xor
gs
outsb
sub
lock
cmc
and
loopne
cs
jl
nopl
jne
push
cld
stos
mov
sbb
push
andl
xchg
insl
ja
pop
rol
aad
jns
mov
ret
stos
xchg
add
arpl
mov
addr16
mov
xorb
shlb
adc
cmp
xchg
add
and
xchg
jns
movb
mov
add
pop
aaa
cmp
les
push
inc
xchg
xor
iret
cmp
icebp
and
and
push
cmp
test
sarb
pushf
mov
into
call
jl
popa
sbb
mov
lret
sarb
pushf
ret
mov
pushf
push
pop
insl
cs
mov
adcl
js
pop
adc
xchg
sbb
xchg
call
mov
cmc
dec
cltd
inc
jp
mov
lea
dec
enter
stos
mov
push
adcb
mov
testl
sub
out
and
push
mov
fcompl
lret
arpl
sub
aaa
xchg
xor
movsl
lds
mov
jnp
xchg
jmp
pushf
mov
stos
cmpl
pop
mov
mov
cmp
mov
insl
adc
adc
push
pop
outsl
pop
lret
bound
fwait
jmp
and
jmp
es
pop
cmpsl
outsl
dec
push
js
jne
ror
out
and
mov
and
push
loope
iret
and
shll
fstpl
pop
sub
pop
out
pop
dec
dec
pop
xchg
shll
mov
mov
dec
loopne
or
repz
sub
dec
or
orb
loopne
mov
fs
test
jbe
dec
hlt
mov
mov
xchg
ret
les
mov
sub
iret
shrl
lods
sbb
out
mov
mov
pusha
divl
add
insl
xor
inc
cld
jne
inc
pop
pop
addr16
ret
test
sbbl
mov
sti
loopne
in
push
in
fst
xchg
inc
cltd
imulb
jne
sbb
mov
fbld
adc
cmp
orl
or
cmc
int3
test
dec
dec
mov
sti
jo
mov
movsl
inc
adc
mov
test
cs
outsl
jge
mov
inc
out
std
shld
data16
push
outsl
jecxz
jb
mov
sbb
lret
pusha
push
sbb
leave
int
sbb
repnz
mov
lods
movsl
adc
data16
pusha
into
bound
or
or
mov
movsb
sbb
insl
push
js
pop
dec
addr16
mov
or
aad
xchg
nop
js
sub
sub
js
in
addr16
pop
lret
mov
and
movsl
ljmp
or
stos
es
mov
shrl
ficompl
sbb
inc
jle
stc
mov
clc
into
dec
fstpt
pushf
stos
mov
fnstcw
pushf
cs
inc
fimuls
stos
fdivrs
push
pop
imul
inc
xchg
inc
inc
cli
jne
jmp
enter
fisubs
and
jmp
xor
test
bound
mov
xor
xor
movsl
mov
fisubl
lods
ljmp
jae
dec
pop
adc
xchg
add
jb
jns
xor
ss
jno
pop
stos
pushf
push
inc
xchg
mov
inc
divl
dec
inc
aas
hlt
subl
fcomp
cmp
insb
sbb
pop
or
inc
add
mov
and
bound
pop
fnstsw
sub
pushf
jcxz
inc
mov
fbld
xor
outsl
sub
cwtl
or
jg
or
nop
mov
cmpb
adc
cli
outsl
cmp
sbb
insb
mov
ret
repz
jp
and
sbb
push
push
cmpsl
enter
add
or
dec
and
mov
xor
add
fwait
dec
lock
lods
loopne
in
mov
sahf
mov
push
xchg
imul
jle
lahf
arpl
mov
fdiv
testb
push
fsubrs
xorl
cmp
push
xchg
insb
movsb
cli
cmp
or
ret
pop
mov
push
xor
xchg
sub
dec
in
std
pop
cmp
mov
xchg
push
testl
outsb
cmc
or
fdivl
enter
andb
imul
lcall
iret
and
das
lea
ja
dec
add
sbb
jge
scas
mov
aaa
or
xchg
xchg
pop
les
ds
add
mov
jge
dec
divb
jp
xchg
jge
dec
cwtl
in
inc
je
adcl
mov
xchg
jle
icebp
cmp
div
mov
sbb
pop
shll
lds
sub
sahf
outsb
xlat
dec
pop
sub
shrl
mov
aaa
xor
imul
pop
fldcw
mov
test
int
cs
rorb
jle
cmp
adc
cli
adc
inc
inc
sbb
push
ja
push
lds
push
xchg
pop
dec
pop
mov
adc
pop
pop
pop
mov
push
jge
sub
cmp
dec
sub
insl
cmp
lret
ja
in
cmpb
int
pop
or
push
xor
or
jmp
mov
fwait
xor
sub
das
add
es
cwtl
mov
test
in
cmpsb
cli
jne
xchg
push
clc
shlb
shl
imull
mov
iret
lret
mov
outsb
jp
xor
or
cli
aam
or
aad
andb
movsb
sub
or
sbb
enter
outsl
push
ljmp
xchg
js
xchg
add
test
pop
int3
cmp
ja
outsl
loop
pop
pop
lret
jns
xchg
inc
arpl
fsubrp
outsl
jnp
inc
iret
xchg
mov
notl
out
mov
mov
fstl
mov
notb
or
dec
fnsave
stc
rclb
int
mov
fcmovnbe
and
rcll
jne
ja
subl
mov
aaa
hlt
loope
addr16
ret
dec
pop
mov
jge
jnp
pop
ja
cmp
sbb
outsl
int3
sbb
test
cmp
xchg
fwait
xor
inc
cmp
incl
push
outsl
lret
sbb
pop
dec
xor
mov
mov
mov
subb
xchg
mov
sbb
in
push
aas
pop
outsb
pop
xchg
dec
cmp
push
hlt
mov
lahf
xchg
fsubp
scas
inc
adc
mov
arpl
outsl
jnp
mov
sbb
and
pop
lea
xchg
jns
cwtl
in
and
shlb
jp
in
pop
adc
and
adc
ds
cmc
or
push
mov
cld
inc
push
es
lret
sbb
push
loopne
sbb
int
fdivl
mov
mov
pop
dec
push
lret
das
mov
sub
push
push
movsl
xchg
and
mov
adcl
xchg
js
mov
mov
adcb
cmp
repnz
dec
adc
xor
dec
add
push
aaa
dec
repz
or
ret
sbb
movsb
mov
mov
add
divl
or
push
bound
mov
stos
sti
sbb
fidivl
jecxz
cmp
clc
lods
or
xor
push
jmp
mov
popf
cwtl
stos
popf
inc
add
aaa
out
vcvtdq2ps
into
push
sub
call
test
xlat
push
xor
adc
iret
dec
dec
loope
cwtl
mov
mov
mov
rol
in
fucompp
andl
xchg
movsb
jo
pusha
lods
test
popa
es
sbb
shll
icebp
clc
or
mov
lcall
in
jnp
inc
out
add
dec
shrl
movsb
xor
in
xchg
xchg
sub
daa
xor
shll
mov
ss
inc
push
lds
adc
mov
push
jbe
fimull
mov
inc
leave
mov
inc
pop
pop
movsb
sbb
es
mov
jb
idivl
push
stos
and
cmp
iret
leave
pop
les
mov
mov
dec
shrb
sub
push
inc
pop
imul
scas
rorb
fiadds
jns
popa
add
xor
and
aad
cmp
mov
inc
xor
sbb
aaa
push
int
pop
pop
outsb
iret
cmp
push
mov
sub
mov
add
decb
add
insl
mov
mov
aas
pop
pop
jbe
dec
insb
add
cmpsb
add
pop
test
pop
push
cwtl
mov
lods
fidivs
adc
dec
cmp
mov
cs
jno
inc
or
fnstenv
adc
gs
shrd
pop
stos
jne
ret
mov
add
or
xlat
pop
rorl
push
push
in
movsl
add
sub
cmpsb
lret
into
and
js
cmp
mov
mov
push
push
jo
xor
out
inc
faddl
out
xor
in
adc
jg
mov
hlt
pop
push
stos
es
xchg
shll
lea
dec
adc
mov
js
or
mov
xchg
out
int
pop
xor
pop
and
pop
popaw
xor
sub
jl
ds
movd
xor
pop
xchg
cwtl
call
lods
outsb
and
sbb
es
aam
lods
inc
pop
mov
int
call
mov
sbbb
xor
jg
xchg
das
mov
add
push
jne
scas
mov
jne
lret
clc
test
add
pop
rcrl
jg
pop
cmp
out
cmp
aam
in
bound
loope
pop
pause
iret
loope
mov
or
and
pusha
mov
lret
xorb
dec
cld
leave
mov
push
mov
sbb
aas
push
cmp
or
push
out
out
ds
mov
dec
adc
adcl
imul
or
pop
adc
jbe
stos
push
movsb
stos
es
xor
js
repnz
jl
insb
sub
or
push
mov
cmp
loopne
adc
adc
or
outsb
aaa
mov
movsl
xchg
adc
mov
int3
push
addr16
cmpsb
int
cs
pop
in
and
xchg
push
hlt
jb
es
mov
pushf
or
or
push
aam
sbb
pop
repnz
ret
clc
stos
sub
pushf
insl
les
pop
dec
out
scas
enter
std
jne
pop
and
dec
inc
decl
jb
sbbb
aas
rcll
sbb
push
dec
mov
lods
scas
in
mulb
ss
sub
mov
sub
shlb
clc
sarl
aam
push
jns
sarl
or
dec
enter
insl
aas
lret
hlt
sar
cmp
jbe
loop
rolb
xchg
jbe
pusha
lds
aaa
jl
sub
xor
jb
jnp
cmp
arpl
les
hlt
ja
lret
pop
mov
rcl
out
out
inc
and
dec
mul
std
leave
int
mov
aas
sahf
je
sti
fwait
xchg
or
jmp
mov
cmc
call
xchg
sub
push
pop
cmpsl
mov
int3
dec
lea
out
pop
jns
fstpt
in
push
inc
adc
and
sbb
xor
gs
dec
scas
sub
stos
ss
mov
cmp
rcl
stos
ljmp
movsb
test
push
loop
pusha
lods
ds
lods
cmp
dec
in
sti
out
sti
sub
ds
xor
insb
sahf
xor
mov
arpl
jnp
stos
test
mov
shll
jb
test
loope
xor
fnsave
adc
repz
push
addr16
xor
mov
pop
cmpsl
mov
mov
add
xor
jnp
mov
sbb
cwtl
jo
mov
mov
nop
stos
pusha
sbb
xchg
dec
adcl
lahf
cmc
shl
pop
mov
in
jge
xlat
outsb
push
mov
or
push
xchg
bound
aam
jmp
xor
inc
xor
jmp
xor
push
out
push
jle
lret
mov
hlt
fbld
lret
lret
test
rcll
pop
in
pop
jl
mov
lcall
sti
xchg
inc
addr16
lods
je
mov
jmp
cmp
and
mov
aad
dec
push
cmpps
insl
fmull
in
lahf
adc
dec
push
inc
test
mov
popa
pop
sub
dec
add
out
scas
xor
cmpsb
lock
mov
stos
into
pop
cmp
mov
outsb
rclb
ret
fdivrl
movsb
lcall
les
push
add
int3
add
push
xor
mov
sar
arpl
pop
rorb
jle
arpl
js
dec
jmp
inc
clc
sahf
icebp
cmp
pop
mov
jb
aas
sbb
test
pop
fiadds
sub
mov
cmp
std
push
inc
ja
jg
mov
mov
add
fstps
pop
cmp
xchg
mov
sbb
push
inc
jb
ret
xchg
int
adc
aam
outsb
ja
shll
cmp
test
fcomps
fimull
pop
aad
mov
insl
sahf
lock
sti
stos
test
cmc
into
je
shlb
dec
dec
dec
out
dec
pop
jle
shrl
and
mov
cs
movsl
fwait
fs
mov
fucompp
loop
lret
fcoms
in
pop
lahf
jbe
or
mov
scas
shll
inc
cltd
xchg
mov
push
loope
and
push
push
sub
ficompl
in
and
mov
cmp
mov
pop
push
sti
xor
inc
sub
dec
xchg
dec
jae
cmp
sub
in
shll
insl
push
enter
jb
icebp
inc
shrb
jl
fucomip
shr
in
repz
inc
add
rcl
clc
repz
sahf
add
lea
filds
mov
cmc
pop
adc
pop
xor
mov
fwait
jg
push
mov
adc
incb
sti
sahf
pop
jg
dec
cmp
push
xor
pop
xor
cld
xchg
push
stos
cmp
fldt
sbb
push
pop
inc
add
pop
ljmp
push
jne
inc
ds
inc
sbb
hlt
pop
loope
outsl
ret
mov
mov
xlat
add
fstpl
stc
inc
cli
push
jne
je
xchg
cltd
or
enter
in
cmpsb
dec
inc
or
jp
int
pop
fstpt
fbld
mov
push
stos
jmp
inc
mov
mov
bound
mov
into
push
or
sub
or
dec
mov
adc
int3
ljmp
cli
ret
sub
sub
and
cmp
call
or
mov
or
imul
insb
adc
imulw
out
jnp
fnstenv
dec
sbb
xor
clc
bound
mov
and
jno
mov
push
xchg
add
jp
dec
and
sub
in
lds
not
and
cmpsb
stc
mov
pushf
jl
mov
iret
push
inc
imulb
test
mov
cmp
ror
arpl
out
dec
dec
rorl
insb
jecxz
aad
lds
ss
pop
xor
xchg
aaa
jmp
dec
xchg
cmp
stc
test
add
mov
test
sub
std
jo
cmc
repnz
mov
mov
pop
dec
or
mov
shlb
dec
sub
fbld
mov
push
roll
push
push
or
mov
rclb
sub
xrelease
lods
insl
and
popf
int3
add
push
mov
data16
js
inc
cmpsl
lahf
inc
stos
inc
jo
out
sub
xor
pop
push
std
pop
add
mov
fisttps
das
inc
mov
pop
enter
sub
repnz
sbbb
into
loop
add
in
lods
add
rep
movsb
repnz
adc
push
jb
or
out
push
add
and
in
stos
int
xchg
rorb
data16
pop
add
int3
out
push
in
inc
mov
dec
das
mov
out
inc
adcl
push
mov
jno
loopne
sti
xchg
lea
cli
xchg
or
push
cmp
cmp
pop
into
fiadds
mov
xorl
sbb
notl
lods
int
mov
cld
sub
jno
mov
ja
pop
push
jb
cli
xor
stc
or
xchg
ret
sbb
jecxz
addr16
sbb
in
test
in
jmp
orb
inc
jno
push
mov
test
orl
or
mov
add
sub
dec
or
nop
cmp
dec
aad
dec
mov
iret
push
sbb
mov
cwtl
mov
negl
pop
mov
push
push
lock
cltd
mov
mov
lahf
xor
loop
mov
xchg
lods
adc
ss
push
push
cmp
sbbl
lods
js
jno
popf
in
sub
jmp
jp
or
lahf
cmp
xchg
rcl
test
movsb
rep
cli
addr16
leave
xchg
mov
push
flds
and
pushf
mov
dec
cmp
cld
dec
ret
adc
mov
in
jne
pop
adc
fs
ret
mov
mov
shr
addr16
stos
cmp
out
push
movsb
sbb
outsb
icebp
ss
in
inc
pop
das
or
pop
jmp
lret
stc
xchg
cmp
fnsave
mov
push
add
js
cmp
sbb
push
icebp
cwtl
pop
insl
shlb
in
jns
push
sub
rorb
sbb
pop
shl
loopne
or
aas
sub
test
pusha
jbe
shrb
add
mov
das
fucomip
push
cmc
sub
xchg
insb
cltd
push
mov
movsl
fcomp
arpl
dec
dec
loope
outsb
aad
add
mov
adc
sub
add
mov
addb
addr16
xchg
or
sub
sbb
in
push
incb
daa
jl
xor
inc
popf
cmp
and
lret
or
cmovne
mov
addr16
or
jnp
inc
dec
iret
push
in
sbb
rcrl
cwtl
dec
cmpsb
jne
sub
daa
icebp
mulb
or
add
and
rcrl
cmpsb
sbb
adc
mov
fs
lea
pop
scas
sbb
sub
push
aas
mov
xchg
mov
sti
pusha
sbb
mov
push
lret
call
pop
dec
cmpb
sub
scas
out
es
ret
sbb
mov
adc
and
jg
xchg
adc
dec
sub
hlt
adc
test
xchg
mov
pushw
mov
sbb
lock
not
les
call
cmp
xor
mov
shll
xor
and
lock
mov
dec
xor
dec
sub
arpl
mov
pop
outsl
xchg
add
fdivl
cltd
jbe
xor
cmp
mov
xchg
push
ss
and
jne
aas
cs
fildl
int3
xchg
mov
subl
fmul
das
sub
cs
push
insl
add
add
nop
cmp
in
fsubl
aam
mov
sbb
mov
sub
movsl
mov
cmp
pop
jns
pop
es
xchg
cmp
add
popa
ss
fistpl
in
lret
jae
scas
rcll
jns
lret
pop
sbb
sbbl
pop
cmp
rcrb
cmp
arpl
add
hlt
dec
lods
mov
dec
dec
ja
and
sbb
adcl
mov
inc
daa
jmp
inc
aas
fsubp
dec
test
pop
in
aas
pop
push
fbstp
outsl
adc
decl
out
pusha
aam
mov
mov
hlt
stos
mov
inc
stc
sbbb
int
test
into
cmpb
pop
cmp
xchg
xchg
cmpsb
ds
cmpsl
mov
cwtl
cmp
ficompl
icebp
loope
subl
cmc
push
xchg
loop
repz
dec
pusha
mov
aam
in
mov
into
adc
sub
gs
icebp
ret
sbb
mov
push
and
push
imul
pop
cmp
cmp
out
fstl
push
mov
sbb
ljmp
jo
sbb
add
jns
mov
xchg
push
iret
fnsave
jmp
jae
cmpsl
push
in
bound
loope
int3
out
enter
call
loopne
cli
mov
rol
inc
pop
lds
mov
hlt
xchg
pusha
ljmp
jo
enter
cmp
inc
and
adc
aaa
lds
cwtl
ficomps
cmp
adc
arpl
insl
jbe
jne
lds
adc
mov
lret
out
into
sti
test
dec
rep
sub
shl
outsl
addr16
cltd
xchg
pop
xchg
pushf
sbb
sahf
xor
xor
adc
inc
jae
fidivl
jmp
mov
repnz
cmp
lea
mov
dec
jg
jnp
xchg
imul
sbb
push
mov
cmp
outsl
shlb
enter
dec
push
cld
dec
cmp
pop
mov
addr16
xlat
sbb
test
mov
and
xchg
xor
popf
lods
adcb
and
scas
enter
dec
fwait
movsbl
aas
into
mov
jp
cmp
and
dec
outsb
lret
repz
push
pop
scas
and
push
icebp
inc
xor
push
cmp
leave
ret
xchg
dec
loop
addr16
cmp
outsb
imul
add
inc
or
outsl
rcr
push
mov
mov
cmp
rcrl
jno
iret
jo
jge
arpl
pop
xor
or
das
xchg
push
jge
pop
mov
pop
xor
outsb
outsb
sbb
loopne
xor
mov
jne
repnz
in
arpl
ret
or
jo
mov
cmp
push
outsb
fsubs
scas
pop
mov
insl
pop
cwtl
into
pop
mov
or
adc
pop
jg
and
adc
pop
je
mov
jecxz
repz
pop
add
arpl
pop
sahf
rclb
jmp
push
sbb
popf
or
arpl
mov
loopne
cmp
or
jge
sbb
shrb
mov
push
adc
aam
lret
mov
xchg
out
decl
repnz
sbb
dec
cwtl
inc
jbe
loop
mov
cltd
pop
jb
push
mov
repnz
pop
dec
xor
sbbl
push
stos
aas
data16
pop
dec
std
xchg
adc
or
mov
push
repnz
imul
inc
icebp
mov
dec
out
leave
and
fbld
lods
shl
and
cltd
mov
inc
lods
jmp
aaa
ds
xor
lds
aad
js
in
mov
pushf
shlb
cli
push
add
andl
dec
xor
fs
cmp
bound
popw
mov
jb
outsl
fwait
sub
dec
cmp
out
sbb
mov
popa
sbbb
sbb
and
mov
xchg
mov
mov
andb
mov
cmp
adc
inc
loop
pop
popf
mov
xchg
mov
into
cmpsb
in
pop
mov
shr
lds
xor
push
push
subl
mov
pusha
stos
adc
and
add
add
mov
jmp
ds
cld
pop
and
mov
incl
pop
out
pusha
sahf
jnp
mov
pop
sub
iret
pop
ret
and
shlb
jl
mov
xor
mov
inc
idiv
in
jae
lret
inc
stc
push
add
divl
addb
dec
pop
lahf
mov
push
stc
sar
es
popa
cmp
cmp
xor
fwait
mov
mov
cmc
jns
shrb
push
add
pop
mov
xchg
jno
mov
jmp
jae
adc
or
inc
rolb
test
std
push
xor
les
add
push
out
adc
inc
int3
jp
jecxz
sbb
dec
push
repz
leave
fldenv
insb
cwtl
stos
mov
cmpsb
jne
adc
lds
insb
sbb
mov
mov
jo
nop
ds
mov
out
test
in
cmpl
dec
add
in
or
xor
xor
imul
adc
stos
add
in
cli
xchg
pop
pop
jg
dec
icebp
mov
repz
test
dec
cltd
jg
xchg
insb
data16
jmp
comiss
jbe
xchg
cmp
mov
test
xchg
lret
repnz
lahf
mov
sarl
xor
jge
sub
dec
in
xadd
lods
push
in
sbb
mov
fisubs
pop
adc
sbb
xchg
dec
lods
pop
jge
jge
jmp
mov
pop
push
mov
in
mov
cmp
fstps
pusha
sub
cmp
arpl
test
aas
lods
inc
insl
iret
into
mov
lcall
in
inc
insl
sbb
loopne
lret
inc
in
jb
or
xchg
pop
sub
push
in
cmpsb
pushf
rcrb
cld
adc
push
pop
mov
test
rcl
insb
sbbb
inc
outsb
out
nop
add
in
mov
insb
andb
push
popf
sub
and
stc
jne
cmc
push
dec
fcmovu
das
mov
mov
push
gs
xor
push
pop
out
inc
in
lret
shrl
imul
mov
adc
jge
sub
popa
faddl
cld
inc
jge
jp
lea
pop
into
js
mov
push
or
xchg
inc
push
popf
sti
inc
push
lock
das
loopne
in
jle
shl
loopne
adc
popf
inc
and
xor
xchg
mov
push
dec
rorl
xor
inc
sbb
push
push
jmp
cmp
xor
pushf
outsl
mov
lock
lea
inc
jge
add
lods
fdivl
jle
fcomps
loope
aad
adc
cmp
push
nop
mov
jmp
js
cmc
pop
dec
cli
push
sahf
int3
inc
adc
jae
outsb
lcall
loop
push
adc
bound
xchg
jl
mov
mov
inc
mov
and
cmc
gs
pop
sti
adc
out
pop
repz
mov
xor
aad
push
insl
repnz
outsl
xor
jge
adcb
out
xor
outsb
loope
adc
dec
jne
jl
sbb
rclb
out
jns
add
loopne
sub
fstl
push
inc
out
xchg
xchg
pusha
loopne
inc
or
mov
jmp
cmp
out
popa
pop
push
adc
scas
jbe
fadds
movsb
popa
fdivl
lds
imul
pop
sub
shl
mov
mov
mov
ret
or
aad
dec
loopne
cmc
push
inc
add
jbe
xlat
sbb
and
in
or
int
push
movsb
add
sub
lods
jge
sbb
adc
jae
mov
push
xchg
je
scas
aaa
jbe
xchg
clc
cmp
das
cli
xchg
mov
jns
sub
cli
cmpsl
data16
adc
push
insl
adc
xor
test
push
push
cmp
xor
adc
je
test
dec
stc
xchg
jo
push
cmp
xchg
jb
dec
mov
mov
xchg
pop
lea
sti
push
pop
nop
mov
lds
mov
int
jge
inc
test
dec
loopne
push
jnp
push
pop
hlt
add
int3
imul
xor
aad
adc
movsl
sbb
vpsubq
hlt
mov
adc
mov
sub
pop
jae,pt
jae
pusha
lods
dec
pop
test
inc
push
jno
push
call
xor
jo
adc
cmp
fs
movsb
popf
and
mov
imul
movsb
repnz
lods
adc
outsb
popf
sbb
repnz
out
test
adc
nop
loopne
lea
shl
sbb
mov
imul
or
push
xor
inc
in
sub
pop
cmc
and
in
and
arpl
adc
cli
repnz
outsb
aad
or
xor
adc
dec
mov
adc
cmp
mull
xchg
gs
hlt
jae
sbb
jo
dec
stos
add
fildll
in
push
shl
jmp
scas
dec
xor
xchg
lock
cmp
js
adc
call
mov
mov
fistl
inc
mov
shl
fbld
mov
hlt
in
cmc
nop
dec
mov
xchg
aad
xchg
into
mov
adc
ja
cwtl
loope
sbb
fmuls
add
lds
xchg
xchg
sbb
lds
mov
int
loope
cmpsb
loopne
call
push
mov
push
xor
incb
das
or
push
fnstenv
push
xchg
scas
insl
pop
imul
lahf
cmp
mov
cli
push
lods
sbb
jbe
pop
insl
lods
cli
cmp
push
setne
popa
push
loope
adc
cwtl
inc
repz
inc
mov
jl
mov
ret
sbb
dec
jl
add
std
dec
push
adc
adc
jle
in
call
out
xor
add
out
into
or
cmp
in
mov
add
call
inc
incb
mov
aaa
mov
movsl
add
xor
fbld
xorb
mov
cmp
sarb
jnp
sbb
jmp
push
andl
xchg
mov
push
in
xchg
sub
pushf
inc
out
dec
mov
clc
jae
and
push
inc
push
and
enter
bound
int3
pop
cmp
jmp
add
fsubrs
or
fiaddl
js
cmp
andb
or
and
mov
fadds
addb
mov
scas
xor
push
jb
dec
lods
inc
call
or
lret
dec
and
test
push
inc
push
insl
inc
mov
dec
mov
sub
xor
inc
jmp
sbb
jbe
jbe,pt
or
fisttpll
and
inc
mov
sbb
xor
and
mov
icebp
and
data16
and
inc
xchg
ljmp
lea
popa
jnp
adc
or
mov
pusha
cs
fucom
ja
imul
and
mov
jns
add
aaa
lret
cmovge
push
mov
fldcw
imul
sbb
sub
and
pusha
pop
out
push
jmp
and
adc
out
dec
mov
add
jns
test
sub
ret
xchg
sbb
cmp
sub
sti
test
pop
sbb
cmp
test
daa
jge
leave
jne
aaa
idivl
sub
outsl
push
lret
push
add
hlt
mov
repnz
jmp
cmpsb
adc
sub
das
push
lret
dec
aaa
iret
mov
dec
loopne
shlb
addr16
sub
enter
sbb
xchg
idiv
push
mov
rorb
cmp
pop
xor
ret
and
or
ss
and
add
mov
fisubs
add
xor
rcrl
pop
adc
xor
jns
iret
cmp
movsb
inc
in
or
leave
insl
adc
adc
jb
dec
cmp
pop
leave
popf
dec
pop
inc
inc
pop
icebp
mov
movsb
addr16
push
add
enter
movsb
fs
int3
in
fildl
sbb
aad
push
xchg
addr16
mov
xor
sbb
push
inc
iret
mov
inc
ficoml
lret
jp
xchg
sub
cmp
xchg
or
mov
push
dec
bound
xchg
inc
pop
hlt
jge
adc
bound
jbe
dec
ret
arpl
jns
test
and
add
in
lock
add
frstor
fbstp
xchg
movsl
mov
je
mov
xchg
aam
sti
ret
jbe
mov
aas
push
ss
adc
xchg
xor
popa
xchg
push
loop
mov
add
movsl
hlt
lods
arpl
ficoms
orl
sbb
aaa
cmpsb
dec
or
adc
clc
mov
andl
adc
jp
mov
push
dec
in
sub
aas
notb
out
lods
aad
jge
xchg
ss
clc
je
sbb
aam
cli
jns
mov
adc
lock
mov
imul
sbb
jae
shl
jno
adc
sbb
dec
mov
je
and
lahf
ds
in
and
out
ret
jmp
dec
aad
lcall
sub
sbb
xor
data16
clc
push
inc
mov
add
leave
dec
mov
lods
pop
ljmp
scas
out
rclb
pop
les
fadd
pop
sti
fwait
movsl
cmpl
xor
or
xchg
pop
add
stc
xor
xchg
jns
mov
add
mov
icebp
sbb
sti
outsl
or
daa
inc
ret
xchg
in
cmp
or
mov
pushf
repnz
loope
fidivrs
cltd
out
movsl
dec
pop
cmc
fistps
sti
sub
negl
push
fiaddl
adc
in
push
in
inc
mov
fsubs
mov
mov
sub
mov
mov
mov
adc
push
add
test
jle
scas
pop
cmp
icebp
cltd
push
ljmp
call
sub
test
add
idivb
push
roll
pop
cmpsl
aad
es
stos
sub
pop
or
push
or
lods
mov
inc
imul
lret
mov
movsl
mov
imul
lds
fildl
pop
sti
movsb
repz
adc
mov
or
aas
mov
daa
mov
pop
mov
js
push
mov
lahf
das
in
jb
adc
mov
lahf
mov
or
push
xchg
inc
test
xchg
pop
test
sbb
adc
push
mov
cmp
icebp
sti
xchg
das
int
aaa
js
insl
movsb
enter
bound
stos
push
jb
cmp
outsb
mov
or
jne
adc
xlat
gs
insb
orl
je
outsb
inc
mov
or
lret
xor
xchg
in
imul
imul
lds
testb
cmp
iret
shlb
out
fcoml
cmp
adc
adc
push
sub
cli
sbb
ret
or
cmpsb
dec
and
push
das
push
inc
stos
mov
mov
lods
inc
aad
and
push
lret
dec
in
xchg
mov
fstpl
in
test
sub
mov
xor
jmp
xlat
fstpt
fwait
jecxz,pn
insl
sub
xor
cmpsb
mov
push
out
mov
outsb
sbb
scas
das
pop
sahf
jbe
ret
stos
dec
arpl
imul
adc
clc
test
cwtl
cld
dec
aaa
cwtl
call
push
out
pusha
iret
lcall
mov
fwait
cwtl
push
sbb
movsb
fnstenv
pop
cmp
cmp
add
mov
inc
pop
and
and
stos
inc
rorb
dec
dec
sbb
cmp
mov
or
sub
in
loop
ret
sub
cmp
push
test
xor
push
ret
cmpsl
lods
mov
push
insl
fs
and
leave
mov
push
cmp
pop
inc
pop
mov
mov
data16
inc
fstpl
movsl
fidivl
je
cld
insb
mov
int3
divl
cmp
sub
repnz
and
mov
sub
adc
xchg
out
shrb
xorl
pop
out
pop
sbb
inc
daa
cmp
sbb
mov
fs
push
pushf
cmp
adc
icebp
popf
js
loope
xchg
pop
cmp
jecxz
add
mov
outsl
shl
mov
cmp
mov
mov
test
leave
jg
cmc
pop
pusha
shlb
psllw
push
and
cs
test
xchg
xor
push
rcrl
mov
test
adc
cmpsl
stc
nop
sbb
testb
dec
mov
mov
mov
enter
mov
mov
pop
daa
jo
stos
add
aas
push
or
shrl
in
leave
push
gs
adc
add
fstpt
and
sbb
test
inc
lcall
sahf
and
movsl
mov
mov
mov
push
mov
jbe
push
js
test
sbb
ss
push
pop
and
xlat
jne
xor
or
mov
mov
push
mov
in
mov
gs
lahf
push
mov
mov
push
jmp
xchg
or
mov
jl
mov
cmp
mov
mov
xor
xchg
ds
ja
adc
and
cmp
mov
adc
rcr
ud0
adc
ds
in
andl
lods
in
sub
insb
mov
mov
repz
lret
mov
fmull
pop
jmp
subb
sub
les
cld
push
inc
int3
dec
aad
jecxz
xchg
insl
mov
jge
lret
in
jle
sbbb
fwait
mov
andl
push
lret
dec
pusha
push
or
mov
aam
aaa
into
jp
pop
jmp
ror
loopne
arpl
xchg
cwtl
cmpsb
inc
int
std
mov
jmp
push
fs
mov
adc
cmp
lods
add
icebp
stos
pop
jmp
mov
jge
inc
sbb
xchg
dec
xor
std
mov
cmc
or
dec
mov
mov
inc
pushf
test
orb
pushf
and
mov
imul
in
cli
push
jmp
pcmpeqb
hlt
adc
and
adc
cs
shr
dec
sub
lret
xchg
mov
pop
or
stos
or
mov
dec
sbb
push
xchg
montmul
cmpsb
add
pop
lock
daa
and
inc
ja
nop
movsb
mov
cmc
mov
xchg
pop
popa
fisubl
imul
jg
je
sbb
fstpt
lock
imul
cmp
loope
inc
lds
out
xchg
dec
out
pop
jle
and
stos
aam
mov
dec
sbbl
sub
jle
or
js
bound
dec
dec
montmul
cmpsb
inc
jnp
jge
and
add
pop
mov
push
cmp
push
into
aam
in
pop
push
rcll
xchg
inc
ja
outsl
ret
mov
lcall
add
scas
mov
jle
xchg
mov
xor
jl
cmpsb
mov
sahf
cmpsb
adc
adc
ret
out
xchg
jecxz
rcll
add
test
pop
addr16
jnp
mov
repz
cwtl
mov
inc
xchg
push
lock
out
xor
test
push
inc
insb
jl
mov
add
cwtl
das
cmp
and
mov
ret
xchg
data16
mov
pop
arpl
jbe
sbb
imul
cltd
sub
xor
enter
inc
stos
dec
int3
and
cmp
adcb
and
mov
inc
stc
or
je
fbld
repnz
out
push
scas
jle
imull
movsl
xchg
sub
jne
int
sub
and
mov
je
push
lea
scas
mov
shll
xlat
jmp
cmp
and
pop
in
loope
push
jnp
loope
adc
cltd
xchg
shl
pusha
or
call
shl
lahf
or
dec
faddl
gs
or
orl
xchg
je
xchg
out
xor
popf
je
pop
push
mov
mov
and
ret
jp
mov
xchg
adc
hlt
mov
movsb
mov
inc
frstor
adc
or
ss
test
add
sarl
das
test
mov
punpckhwd
aam
stos
mov
jecxz
loopne
sbb
cmp
fwait
pop
loop
cmp
mov
jo
inc
ficomps
push
xchg
dec
fs
shlb
mov
test
iret
jge
stc
mov
addr16
fwait
ljmp
test
sub
pop
rorl
mov
and
xchg
mov
je
lcall
idiv
jg
dec
sbb
aam
dec
add
jecxz
mov
mov
shll
loope
inc
adc
stc
add
sub
out
cs
iret
lcall
fnsave
or
xchg
jmp
mov
xor
inc
lfs
fisttpl
lret
push
faddl
add
sti
loopne
sub
inc
mov
lret
sti
stos
jg
mov
jne
pop
sub
insb
jne
sahf
ficompl
push
xor
xchg
cs
and
rdpmc
lock
mov
xchg
aad
jns
movsb
sbb
mov
add
stos
sbb
mov
push
cmp
cwtl
test
hlt
sbb
push
xchg
jge
and
stos
inc
test
enter
icebp
adc
in
in
inc
cmp
push
mov
sub
or
je
call
adc
jl
add
pop
jnp
xor
mov
sbb
into
loop
lcall
mov
xor
jae
push
pop
jne
fmul
lahf
incl
dec
xlat
push
aas
scas
jno
and
fistpl
fnstsw
xchg
ror
jle
push
in
fcmovbe
aam
lock
imul
repz
lods
inc
mov
mov
pop
inc
mov
xor
js
mov
decl
rcll
xchg
mov
jmp
shrb
shrl
mov
je
dec
in
push
popf
mov
fucomp
or
mov
add
xor
loop
sub
cmc
inc
push
mov
xor
jp
inc
and
leave
cmp
movzbl
mov
ret
or
mov
xchg
fs
mov
mov
aas
push
fnstcw
in
lods
jmp
xor
push
cmp
jp
mov
aam
je
cwtl
push
mov
imulb
iret
cmp
stos
add
xchg
lret
dec
jp
dec
in
fwait
cmpsb
inc
movsb
ljmp
jg
cmp
adc
movsl
in
loope
dec
push
sub
jb
pop
enter
js
xchg
dec
loope
fnstcw
jnp
in
inc
sub
push
mov
jne
enter
movsl
insl
jecxz
sbb
xchg
jns
jno
xchg
imul
pop
mov
test
cltd
fstpl
enter
outsb
sub
xor
push
push
les
divb
cld
adc
cld
or
ljmp
and
fldl
xor
popa
jo
bound
les
stc
in
or
xchg
sbbl
adc
sbb
dec
mov
arpl
out
adc
aad
cmp
ds
pop
add
jae
pop
mov
cmp
test
call
add
xchg
sbb
in
fdivrl
lods
add
mov
ljmp
movsb
add
pop
xlat
pop
inc
flds
lods
cs
out
mov
push
cmp
xor
addr16
push
leave
cld
cmp
add
xlat
outsl
subl
inc
addr16
shrb
nop
aaa
mov
arpl
bound
js
arpl
push
xchg
sub
jp
out
dec
out
xor
cmpsl
mov
jnp
add
cmp
push
mov
sahf
lea
scas
scas
pop
lock
sbb
stc
pop
inc
testb
mov
or
sbb
movsl
cmpsb
mov
jg
cmpsb
jno
inc
mov
or
dec
inc
sub
mov
or
lahf
add
ret
fistps
push
in
popf
outsl
sbb
popa
lods
into
cmc
push
or
jl
mov
adc
ja
sub
mov
rol
outsl
dec
mov
test
stos
mov
jns
sub
dec
sar
dec
xchg
pop
hlt
shrb
jns
dec
add
jp
decl
xor
gs
out
pop
inc
into
rcr
enter
jno
aas
loopne
popa
cs
and
jns
dec
sbb
inc
jb
iret
pop
lahf
test
je
fs
push
daa
sti
cmp
adc
icebp
xchg
add
es
or
inc
sub
pop
sahf
iret
push
mov
in
out
xor
xor
pushf
sbb
ret
lea
mov
mov
xchg
test
xor
push
ret
and
call
mov
outsl
push
ret
ret
fisubl
fildll
sti
mov
sub
cmc
dec
jl
jnp
or
pusha
outsl
lret
notb
cmpsl
ds
faddl
test
jb
mov
push
outsl
jns
xor
sub
xor
pop
lea
or
push
jns,pt
add
in
dec
cmp
push
pop
and
popf
pop
cli
inc
jmp
inc
int
cmp
out
xchg
mov
cmp
inc
adc
and
cld
lcall
in
aaa
jns
and
mov
lea
test
aas
dec
fstpl
pusha
or
cwtl
mov
std
mov
push
je
gs
jno
pop
push
xor
aam
lods
sbb
rcll
sub
out
add
mov
xchg
jb
insb
nop
push
sahf
or
inc
dec
outsl
lcall
cmpsl
and
sbb
sub
es
pop
nop
mov
lods
jns
aad
mov
xor
dec
in
lea
pop
push
fstl
pop
push
out
and
or
je
out
xor
arpl
aas
jmp
mov
loop
es
repnz
insl
adc
mov
mov
fs
jb
rcl
inc
mov
lcall
and
cmp
int
mov
mov
mov
push
mov
aam
mov
dec
sarl
daa
imul
add
daa
hlt
sub
mov
mov
fildl
mov
mov
mov
or
xor
addr16
rol
jne
int
push
inc
mov
inc
ljmp
inc
push
sbb
xor
repz
lahf
dec
in
or
sbb
popa
lret
fistpll
push
cmc
cmp
jecxz
and
jo
push
or
push
and
jno
lret
lahf
maxps
sub
and
faddl
mov
dec
rclb
into
mov
mov
pop
xchg
les
dec
icebp
or
lods
stos
push
push
push
lret
shll
sbb
push
lods
enter
or
test
or
jnp
mov
loopne
xor
pusha
xlat
or
add
pop
fidivrs
adc
int3
push
mov
inc
imull
ljmp
jno
pop
insl
sub
stos
out
cmc
or
sarb
in
inc
test
cli
stos
dec
mov
xchg
mov
mov
das
in
rorb
pop
sbb
adc
mov
push
out
imul
stc
fsubrl
inc
push
xor
sahf
and
loopne
in
sub
lahf
xor
sub
mov
or
fisubs
pop
dec
lret
pop
mov
out
loope
loopne
dec
aas
add
jo
pop
and
loope
pop
cmp
imul
lahf
jo
mov
pop
ss
cmp
inc
pop
pop
sarl
bound
movsb
insl
stc
idiv
xchg
sub
mov
push
lods
cmp
inc
push
out
push
stos
jae
into
pop
adc
cld
arpl
insb
mov
imul
push
std
or
jne
sub
stos
fmul
inc
push
stc
dec
pop
sub
jne
xor
fdivl
fidivs
sbb
jg
ss
xor
mov
xchg
and
mov
add
icebp
cwtl
stos
decl
inc
stc
stos
fsubrs
adc
mov
xor
and
scas
inc
mov
int
push
fs
push
add
dec
add
enter
pop
lea
cmp
mov
pop
std
xchg
negb
or
mov
pop
add
std
push
adc
cltd
push
fmuls
fcoml
dec
dec
mov
int3
cmpsl
pop
out
fdiv
fisubs
mov
add
push
mov
ja
add
fists
pop
sahf
mov
test
and
dec
test
pop
jnp
cld
loop
xor
loopne
aad
scas
and
ja
cmp
mov
sub
pop
mov
stc
sbb
pop
dec
scas
scas
inc
loopne
loop
mov
jmp
sahf
xor
cmpsl
out
jnp
popa
mov
cwtl
das
dec
push
lods
stos
enter
int3
xor
cmc
add
xchg
ja
adc
xchg
mov
xor
jge
cmc
test
fbstp
loop
int3
push
push
push
lods
test
into
jns
cmp
lds
mov
mov
add
or
shr
mov
cmpsb
xor
in
cwtl
js
adcl
cmp
mov
pushf
daa
inc
sub
js
arpl
int
pushl
popa
jne
add
in
ficomps
in
pop
mov
mov
out
pop
lock
mov
dec
dec
loope
in
pusha
mov
pop
xlat
lods
pop
sti
popa
pop
lahf
fimull
cld
inc
xchg
mov
and
or
cmpsb
jnp
lds
sub
les
sub
xchg
out
xchg
mov
shll
daa
add
ja
movsb
pop
repnz
xchg
sub
ret
push
jmp
je
mov
mov
scas
mov
cmp
repnz
fcoms
das
push
inc
jae
scas
das
bound
cltd
cmp
push
insb
push
or
mov
test
add
loop
mov
adc
cli
mov
mov
ret
xchg
sub
mov
mov
cs
fwait
mov
rcrb
sbb
xor
mov
aad
sbbb
cmpsl
sti
mov
add
out
xor
in
scas
jmp
jno
cmp
sbb
or
mov
xor
sahf
testb
mov
cmp
popa
adc
in
insb
xor
int
adc
and
cmp
stc
inc
lods
aas
push
js
int
mov
mov
pop
add
gs
dec
daa
jns
cltd
jnp
adc
fcomps
add
out
jle
es
push
int
inc
mov
mov
sbb
es
inc
fwait
push
pusha
cld
xchg
mov
jmp
lock
std
pop
mov
xchg
dec
or
js
gs
mov
dec
pop
jne
push
scas
adc
adc
xchg
jns
dec
fwait
xlat
decb
sub
pop
hlt
mov
inc
jle
in
nop
sub
push
xchg
sbb
ret
dec
lods
mov
jl,pn
cmp
test
daa
or
mov
push
fidivrs
imul
inc
mov
bound
pop
into
gs
or
jns
test
mov
fdivrl
sub
outsl
adc
or
inc
inc
fcoms
loope
fcompl
xchg
pop
xchg
js
sub
stc
jg
jns
or
add
adc
lock
popa
sub
rcrb
mov
xor
sbb
dec
imul
shlb
xchg
outsb
cwtl
cmpsl
jnp
popl
loope
stos
cmp
mov
hlt
push
lcall
xor
out
xchg
jns
pop
mov
popa
jbe
shlb
movsb
and
jns
mov
subl
mov
cmpsl
ds
popf
push
mov
bound
xor
lds
jmp
out
xchg
jbe
out
test
enter
loop
sbb
add
cltd
mov
lahf
sub
xor
test
inc
xchg
and
sarb
or
mov
fdivrl
movsl
scas
inc
xlat
scas
pusha
adcb
dec
leave
fimuls
pop
xor
xor
lock
push
aad
aas
les
or
jmp
xor
insb
fmull
and
sbb
adc
adc
shll
movsl
lcall
jmp
loopne
sub
jmp
mov
cmp
dec
fwait
xchg
loope
loopne
punpcklwd
mov
enter
pop
out
pushf
repnz
lret
insb
sarb
or
mov
or
cli
ja
jne
hlt
inc
cmp
jne
push
cs
mov
out
cmp
jb
jno
add
mov
xor
push
lods
stc
adc
cmc
int
pusha
add
push
pop
push
flds
mov
add
loopne
dec
jnp
nop
mov
pop
cmc
js
adcl
sub
icebp
icebp
ja
adc
packsswb
cmp
pop
jecxz
xor
mov
stc
or
jae
cltd
pop
inc
test
mov
or
bound
aas
int
ljmp
test
enter
push
repnz
adcl
pop
jbe
fistl
subl
pop
sub
mov
repz
sub
ret
xchg
idivl
pop
and
clc
jne
pop
mov
les
cmp
out
es
loop
sub
xor
jl
out
std
and
mov
aaa
clc
hlt
shl
cmp
cli
xchg
cwtl
gs
mov
xor
push
sahf
lret
xor
call
lcall
mov
dec
cld
adc
je
mov
ds
or
mov
mov
cwtl
lret
mov
orl
add
mov
lods
xchg
aam
pop
mov
fistl
and
xchg
sub
subl
lea
negl
lods
adc
sahf
jne
stc
adc
jle,pn
fnsave
or
cmpsl
jne
pop
push
rolb
cmp
ljmp
sub
mov
dec
scas
mov
dec
mov
jnp
mov
dec
sti
jecxz
xorb
cmpsb
jns
sub
stos
insb
in
xchg
adc
pop
jne
andb
inc
negb
add
lahf
mov
arpl
nop
fcmovb
in
mov
imul
sbbl
jge
shlb
add
in
add
enter
jecxz
sti
or
mov
sbb
lock
aad
cmp
adc
enter
ror
pop
imul
cmp
or
mov
repnz
add
pushf
fldl
nop
mov
ljmp
and
aam
sub
popf
testl
jb
add
mov
jbe
outsl
jnp
inc
mov
adcl
sub
pop
ret
jmp
inc
xchg
nop
stos
cmc
xor
pop
in
in
mov
in
lcall
out
cmp
ja
mov
or
es
cs
mov
dec
mov
pop
data16
pop
adc
fmuls
mov
je
ret
lret
cmpsb
sub
dec
aad
push
aam
xor
cmp
movsb
imul
push
fsubrs
repnz
xlat
lock
add
scas
inc
repz
pop
test
xchg
mov
xlat
mov
xor
jmp
call
xor
orb
out
xor
ljmp
jg
mov
xchg
pop
out
cmp
inc
xor
bound
js
sbb
dec
loopne
sbb
pop
inc
in
pusha
rclb
lret
daa
inc
mov
test
push
imul
mov
daa
xorl
pop
lret
mov
mov
sbb
testb
add
fwait
inc
jns
push
std
sahf
scas
push
xchg
dec
cmpsl
sbb
stos
mov
mov
insb
repz
mov
xor
montmul
cmpsb
cmpb
or
xor
sbb
jmp
push
adc
sarb
call
fdivs
lahf
xchg
cmp
icebp
push
jno
clc
movsb
mov
xor
mov
in
aas
insl
shll
ds
bound
stos
int
xchg
sahf
mov
sbb
mov
push
inc
mov
cmpsl
jb
test
jno
jmp
mov
out
loop
mov
sbb
in
test
insb
sub
cmc
mov
mov
roll
loopne,pn
vcvtps2dq
mov
sub
pop
lock
ja,pt
mov
xchg
movsb
mov
push
std
push
sbb
mov
call
mov
or
or
add
mov
dec
imul
jno
outsb
dec
pop
lods
push
mov
inc
in
add
sbb
hlt
push
add
aas
outsb
aad
mov
aad
js
fsubrl
aad
lcall
mov
adc
insl
aaa
mov
cmp
inc
notb
ljmp
xor
push
fwait
enterw
sbb
stos
sbbl
pusha
inc
mov
je
sarb
std
mov
sub
ror
rolb
cmp
jp
out
add
rorl
jns
pop
mov
andl
push
and
xchg
stc
and
ss
and
fcompl
cmp
js
cmc
hlt
push
xor
mov
mov
fidivs
and
iret
mov
addb
cwtl
shlb
or
inc
daa
mov
lods
cmp
repnz
sub
aam
jb
push
out
pusha
call
and
movsb
pop
into
in
enter
repz
scas
out
cwtl
pop
negb
push
push
xchg
in
sbb
into
jae
popa
movsl
in
xchg
mov
les
or
mov
mov
or
inc
and
xor
adc
adc
jns
scas
dec
dec
add
js
js
ljmp
sbb
and
cwtl
pop
push
mov
add
arpl
push
cwtl
lods
scas
ficompl
mov
shlb
sub
sub
iret
stos
push
stos
movsb
mov
add
dec
xor
jns
or
push
popa
or
lods
dec
lods
filds
test
ss
push
leave
sub
cmp
jnp
dec
dec
mov
cld
rorb
xchg
mov
ret
sub
pop
lahf
outsl
xor
mov
inc
push
and
pop
enter
push
fwait
repz
jmp
and
push
aaa
pop
pop
xchg
mov
daa
or
mov
pop
sub
add
sbb
xlat
in
hlt
arpl
mov
aad
loop
mov
cld
add
test
cmp
sti
icebp
aaa
or
movswl
ljmp
mov
mov
repnz
flds
mov
jne
jns
or
lods
mov
xorl
sbb
out
xchg
jmp
pop
xchg
jge
inc
mov
ds
and
sar
push
mov
lods
imul
mov
xchg
dec
mov
adc
xchg
popa
add
or
hlt
push
xchg
in
cmpsl
fst
scas
jge
in
dec
cwtl
notb
cld
mov
cmp
xchg
aad
xchg
enter
sub
loop
loope
dec
cmp
rcl
jae
xchg
pop
push
mov
aaa
jge
push
or
lock
sahf
sub
inc
pop
cmp
sbb
in
pop
idivb
push
sub
or
je,pt
jo
inc
fwait
xor
mulb
and
int3
gs
pusha
xchg
pop
sbb
ret
mov
xor
mov
into
adc
cmp
mov
cmp
and
icebp
mov
sub
sahf
leave
pop
xchg
mov
negl
sub
xor
dec
in
xchg
rclb
pop
lret
pop
imul
inc
cmp
aad
pop
pop
jp
subb
pop
outsb
rcrb
js
jl
pop
dec
sub
inc
enter
mov
mov
sub
jno
jmp
movsb
jo
and
push
popa
mov
pop
jno
icebp
xchg
pop
fldcw
or
loope
rorb
aaa
daa
mov
and
jo
mov
ss
add
es
shrl
adc
loope
jne
sub
and
mov
sub
push
outsb
or
and
cmp
stos
inc
dec
test
leave
in
ret
repz
insl
sub
je
jmp
mov
xchg
incl
xor
sbb
inc
push
or
dec
ljmp
test
cmp
dec
std
or
mov
and
iret
jne
test
xchg
mov
les
repz
mov
lods
out
cmp
clc
inc
sub
xor
adcb
es
fistl
pop
inc
mov
adc
outsb
inc
bound
or
mov
pop
mov
test
addr16
jecxz
dec
je
stc
gs
xchg
sbb
imul
andl
cmpsl
es
test
sbb
in
stc
xlat
cmp
xchg
mov
inc
mov
shl
popa
dec
cmc
mov
push
dec
dec
ja
xlat
repz
cwtl
shlb
mov
or
fidivs
cmpsl
mov
lcall
incb
mov
scas
shlb
icebp
int
add
xor
xchg
xor
fists
adc
push
ljmp
push
mov
dec
jecxz
inc
fiaddl
xchg
jo
or
cmc
aaa
lret
jecxz
xchg
xor
mov
push
pop
lods
mov
inc
jb
out
fs
rcl
imul
xchg
jbe
das
movsb
add
mov
notl
pop
add
mov
into
and
cmp
push
jae
cmp
dec
in
call
or
dec
ffreep
sub
ficompl
data16
gs
or
dec
pop
leave
aaa
jo
sub
cmpsb
divb
mov
sbb
push
mov
rcrl
pop
mov
aad
jge
fs
add
push
inc
iret
pop
or
push
lock
int3
aas
dec
out
test
ds
scas
sub
jmp
sbb
scas
cmc
loopne
sbb
push
aaa
divl
inc
stos
xchg
jns
adcb
jle
mov
imul
sbb
cmp
in
stc
xchg
xchg
adc
idivb
faddl
or
xchg
sbb
push
popa
dec
fsubrl
jns
dec
and
mov
adc
xor
mov
or
fwait
imul
jb
test
icebp
sbb
fs
xchg
or
aaa
nop
mov
lret
repz
mov
or
xor
pop
int
ds
in
dec
add
ljmp
jge
mov
mov
push
pop
cwtl
shlb
out
loop
lea
jl
lods
mov
cmp
push
sub
sbb
out
xor
xor
ljmp
jno
cmp
xchg
into
and
jno
add
idivb
cmp
pop
jno
in
test
push
ret
repz
test
je
nop
popf
ret
ss
pop
sub
mov
mov
test
imul
adc
or
lock
loope
adc
push
and
sbb
mov
xlat
push
insl
sbb
lcall
jbe
xchg
mov
push
call
call
or
push
cmp
xor
mov
dec
popf
and
mov
into
arpl
cmpsl
imul
cmp
outsl
cmp
std
jmp
addl
out
and
sbb
cmp
hlt
xchg
dec
add
push
mov
adc
fcompl
popa
nop
decb
loop
pop
out
pop
xchg
lock
mov
pop
nop
lods
sub
lock
jns
jecxz
stc
js
psubq
ss
sub
mov
cs
loop
mov
and
sub
aas
mov
dec
adc
sysenter
repz
sub
dec
aad
leave
fs
jge
aam
out
je
xchg
ss
pop
inc
cld
push
cmpsb
xchg
adc
sub
pop
sbb
loopne
lds
jno
out
jmp
loopne
or
jp
imul
cmp
das
in
icebp
fidivl
inc
xchg
insb
add
jecxz
or
outsl
mov
loopne
nop
dec
push
shlb
cmp
fdivrp
lods
lods
inc
popf
push
xor
xchg
cmc
xchg
push
data16
jl
sahf
inc
daa
push
outsb
sub
pop
mov
jl
shll
hlt
repnz
cmp
arpl
pushf
mov
xor
iret
sbb
jbe
pop
pusha
jo
sbb
dec
rolb
jb
mov
pusha
shlb
rorl
sti
cmp
push
jo
jg
fsubrs
add
sub
dec
sbb
mov
hlt
cmp
mov
push
adc
fstl
pusha
aad
dec
mov
outsl
or
stos
pop
xor
pop
andb
std
mov
dec
mov
in
sbb
loopne
scas
xor
inc
add
push
imul
mov
mov
jno
pop
in
sub
test
fs
fildll
inc
popf
adc
addl
sbb
dec
lret
mov
xsha1
cmpsb
mov
lods
inc
gs
pop
cmpl
jno
pop
test
ret
aas
mov
fsincos
xchg
or
aaa
into
lcall
dec
jbe
push
out
les
dec
pop
in
adc
jmp
jnp
divb
idivb
ret
push
sahf
clc
xor
adc
jae
in
loop
mov
movsb
rcrb
outsb
mov
idivl
xor
sbb
rorb
pop
or
in
imul
imul
cmp
xchg
xlat
les
mov
pop
push
sahf
test
mov
xor
stc
sahf
xor
sbb
rdtsc
mov
fs
inc
mov
push
mov
adc
lock
add
mov
and
push
call
sbb
xchg
jae
sub
jg
push
icebp
pop
jp
xchg
xor
xor
xchg
mov
shrb
xchg
clc
push
mov
aas
push
rorl
test
into
lods
cmpsl
xchg
and
scas
nop
and
xchg
jo
dec
dec
cmp
jp
ds
shl
mov
xor
fucomip
push
xchg
aam
and
lock
or
popf
inc
mov
and
gs
lahf
subb
sub
mov
pop
in
jecxz
loopne
pop
xchg
test
sub
cli
xchg
iret
xchg
data16
sbb
mov
mov
sti
stos
push
jb
adc
out
push
test
mov
test
push
mov
stc
cmp
mov
lcall
insl
mov
stc
adc
jecxz
in
or
fwait
cmp
jle
es
cmp
or
mov
icebp
cmp
xchg
cmp
rcrb
add
lahf
push
sbb
pop
test
mov
out
xchg
cltd
ljmp
lds
sbb
dec
dec
pop
dec
jl
push
lea
or
mov
fcompl
mov
les
negl
jae
mov
mov
cmc
or
inc
shlb
cld
into
fcomps
stos
jle
xor
xchg
outsb
lea
or
sbb
scas
mov
cmp
xchg
lret
mov
xchg
arpl
pop
mov
xchg
fdiv
mov
fdivr
and
das
sbb
es
incb
cmpsb
insl
popf
inc
int3
xchg
pop
lock
call
or
aad
call
cmp
mov
sbb
cltd
loop
mov
xor
imul
dec
sbb
loop
pop
lock
inc
or
out
inc
dec
xchg
mov
leave
mov
mov
fbstp
add
aaa
std
xchg
push
iret
adcl
adc
insb
inc
inc
js
jmp
out
xchg
fnstcw
push
out
mov
ret
cld
sahf
cmp
push
mov
pusha
movsl
mov
popf
push
sti
add
mov
movsb
cmp
xor
fstl
cli
andl
aad
orl
dec
inc
fnstcw
pmuludq
adc
pop
mov
push
add
nop
pushf
xor
mov
sub
jns
mov
sbb
jp
xchg
aad
inc
pusha
ss
push
mov
jl
jge
sub
divb
jl
push
fildl
enter
sub
mov
rol
inc
dec
xchg
stos
inc
push
and
pop
mov
cmp
les
pop
jno
cld
sahf
sub
cli
adc
cmp
aas
mov
xlat
in
dec
js
insb
sub
rclb
arpl
lcall
lea
inc
leave
or
dec
popa
push
dec
std
flds
loop
mov
adc
and
jb
sbb
lea
jmp
scas
inc
push
cli
mov
dec
lret
mov
or
shrb
pushf
movsb
repnz
fs
stos
fwait
push
daa
xchg
idivl
push
jle
xor
sbb
cmpl
imul
mov
dec
mov
cmpb
mov
cmp
cmp
jle
popa
push
add
push
push
sarl
ret
adc
add
lret
repnz
test
mov
inc
fstps
sub
sub
fxtract
sub
mov
push
rcll
pusha
mov
and
cmp
sbb
popa
aaa
jae
jno
shl
clc
rorb
pop
repz
fdivl
sbb
mov
push
pop
adc
into
jnp
pop
scas
nop
ljmp
xor
fnsave
sub
sbb
dec
enter
ds
and
mov
mov
jge
inc
sub
cld
cmpsb
loopne
add
bound
aam
pop
dec
out
test
add
jbe
xchg
add
xchg
inc
or
arpl
outsb
or
push
adc
and
pop
data16
adc
cltd
outsb
fdivr
mov
lock
aad
data16
test
lahf
xchg
cmp
sbb
jp
nop
cmpsl
lods
jmp
and
jg
xor
cmpsl
cmpsl
rcr
pop
sub
cld
dec
pop
mov
insl
outsb
pop
aam
jae
shll
scas
lahf
or
mov
mov
inc
adc
in
add
je
mov
pop
mov
xchg
sbb
push
ljmp
test
pop
cmp
pusha
fisubrs
inc
xchg
jne,pn
jae
lret
push
mov
dec
cmpsb
or
sar
mov
mov
fisubrl
jo
lods
sbbb
std
adc
adc
jbe
cli
jo
push
lods
and
push
cmp
mov
pop
adc
pushf
jne
shlb
jle
outsb
scas
or
test
cmc
dec
mov
mov
out
aad
mov
push
push
or
dec
rcrl
repnz
xor
or
ss
and
pop
int
cmpsb
jbe
popa
jnp
xchg
mov
mov
std
xchg
daa
fmul
leave
lea
scas
sbb
mov
cmpsb
adc
mov
fistps
push
mov
insl
add
sbb
mov
lds
push
mov
sub
xchg
mov
out
jae
push
sbb
dec
lds
jno
das
lea
sub
sbb
inc
mov
dec
gs
adcl
and
mov
fisubrs
jno
hlt
pop
adcw
shll
shll
inc
mov
into
fmull
mov
add
lods
dec
sub
lods
mov
lods
dec
xorl
xor
xor
sahf
sbb
sbb
rorl
mov
mov
stos
inc
jnp
inc
icebp
push
sub
lahf
mov
mov
cmpb
data16
cs
leave
insb
lock
repz
mov
sub
jnp
ljmp
xchg
sbb
idivb
std
pusha
jb
fistl
cmp
popl
das
fidivrl
scas
test
adcl
inc
push
fdivrl
dec
shrb
jnp
mov
ret
call
sbb
cmp
add
mov
xor
pop
cld
push
repz
sbb
loope
and
notb
mov
cld
cmp
jmp
mov
or
mov
dec
insl
pop
adc
sbb
push
cmp
push
std
jl
inc
adc
jle
mov
mov
mov
sbb
mov
jl
outsb
mov
inc
jl
iret
imul
in
sub
shlb
push
jb
in
aaa
mov
lcall
pop
in
or
sub
sub
mov
cmpsl
je
cltd
mov
sub
ret
jbe
xor
jns
js
add
nop
notb
repnz
dec
jns
clc
leave
stos
add
cmp
inc
std
mov
sub
dec
fcmovnb
lret
jae
ljmp
lods
or
add
clc
fldt
add
popa
sub
test
inc
cmpsb
inc
lret
movsb
sub
add
nop
lahf
xor
sub
jnp
insl
dec
outsl
push
push
out
mov
mov
cmp
adc
daa
mov
ds
cmp
cwtl
in
adc
dec
and
add
push
add
and
add
arpl
and
xchg
btc
orb
daa
mov
out
inc
fsubl
notb
sbb
pop
add
xlat
ljmp
and
sub
lret
fnstsw
xor
xor
and
rcll
js
pop
adc
aas
in
in
xchg
push
bound
add
mov
sub
cmp
hlt
xchg
js
les
add
push
ljmp
mov
out
jmp
add
mov
stos
aad
inc
inc
test
inc
fisttpll
imull
jmp
aam
aas
bound
jmp
daa
add
pop
mov
addl
cltd
orl
aam
and
and
adc
mov
pop
mov
lods
sti
add
loope
popf
std
into
mov
mov
outsb
ret
rcrb
cmovnp
mov
frstor
mov
push
mov
shlb
frstpm(287
push
or
lret
sub
push
sub
push
pop
sub
imul
jns
cld
pushf
push
outsb
loope
mov
jp
adc
cmp
jbe
mov
xchg
xchg
add
cltd
xor
dec
int3
pop
pop
leave
enter
mov
leave
aaa
sbb
cld
movsb
and
mov
push
mov
cmp
jl
lcall
xchg
stc
or
xchg
dec
and
mov
fcoms
xchg
push
sahf
jg
inc
popa
lods
loopne
push
es
mov
sub
push
ss
add
cs
xchg
les
sub
rclb
push
jbe
rcrl
xchg
arpl
mov
lret
adc
cmp
cmp
lret
dec
dec
in
aam
xchg
push
rcrl
in
mov
mov
jecxz
mov
jl
xor
dec
push
outsb
jmp
or
xor
push
data16
jnp
cmp
fmull
push
ljmp
cmc
mov
call
inc
aaa
mov
fldenv
mov
loopne
cmp
adcb
sbb
ja
mov
loop
cmp
aam
fstl
in
pop
hlt
sbb
push
push
dec
mov
push
xor
pop
cltd
movsl
cmp
subb
sub
sub
dec
mov
lds
jno
lock
mov
mov
int3
in
repz
insb
repnz
sub
push
rcr
mov
add
daa
xchg
xchg
mov
aas
fnstenv
out
scas
fstps
sahf
sub
push
sub
rorl
sbb
into
fs
mov
fstps
jns
clc
jno
sub
stc
cmpsl
push
das
xor
lret
inc
dec
pop
fs
cmp
cmp
xchg
xchg
imul
imul
in
scas
mov
xchg
pop
adc
jg
jo
iret
xor
adc
andb
lahf
and
push
mov
adc
mov
mov
add
sub
rcrl
adc
push
jmp
or
insb
cmp
mov
sub
sub
xor
stos
sbb
push
pop
scas
cmp
loopne
or
les
sbbb
addr16
pop
jle
and
xchg
push
jge
mov
insl
mov
jg
lret
loopne
or
adc
scas
add
test
and
jne
jmp
and
push
sbb
js
pop
cs
mov
jne
ret
ss
outsb
sub
pop
dec
sub
sti
daa
xchg
aam
mov
pop
ljmp
cmc
mov
inc
jbe
sahf
mov
pop
call
daa
ds
xchg
and
pop
cmp
enter
push
dec
aad
xchg
add
lcall
and
pop
jae
mov
imul
sub
sub
jmp
mov
jg
cmp
add
fmulp
cmp
popa
jg
jo
fdivrl
aas
loop
aaa
adc
lret
jbe
std
test
out
lds
nop
xor
mov
or
adc
je
in
gs
inc
cmp
xlat
cmp
dec
roll
xchg
das
push
jae
sbb
pop
test
fs
lods
add
std
lea
jb
scas
add
xchg
sbb
mov
mov
hlt
cs
aas
push
lahf
clc
push
sbb
pop
icebp
xchg
inc
xchg
das
mov
add
stos
jecxz
es
dec
addb
sbb
lahf
cmp
in
push
jno
jmp
or
aaa
jb
je
cs
xchg
testl
and
jp
scas
push
or
xchg
fstpl
addr16
mov
and
and
mov
lea
mov
pop
repz
stc
xchg
cmp
or
pop
stos
mov
add
out
std
jg
iret
cmpsl
test
adc
inc
pop
scas
sbb
loop
notb
repz
fisubl
jle
sti
jl
es
mov
inc
xor
fwait
cmp
mov
lahf
lcall
dec
cmp
in
scas
cmp
xor
pop
clc
aad
out
insb
push
adc
hlt
movsb
gs
mov
cs
push
push
add
xchg
xchg
dec
cmp
mov
notb
push
bound
mov
push
cmpsl
repz
sub
cmp
cld
sahf
imul
xchg
push
aas
push
push
pop
bound
sar
shrb
jbe
movaps
mov
mov
js
stos
pop
call
add
popf
decb
dec
dec
rcl
push
xor
adc
ss
jmp
fnsave
inc
scas
mov
jg
fcmove
adc
xor
mov
sub
mov
ret
outsl
dec
jle
mov
add
mov
push
mov
jecxz
fnstsw
decl
scas
in
push
sarb
dec
or
insl
fs
cmp
mov
dec
jbe
inc
sbb
xchg
fstl
xor
mov
push
arpl
mov
cld
lcall
in
pop
cmp
movsb
lods
pop
xor
mov
xor
adc
inc
test
out
sti
jo
pop
dec
bound
mov
dec
loope
mov
loope
dec
dec
push
mov
mov
dec
jg
sti
adc
xor
adc
mov
sbb
test
and
xchg
mov
dec
push
popf
std
dec
mov
dec
xor
ror
aad
push
inc
js
seta
loop
pop
cltd
das
dec
imul
lahf
xchg
push
sub
rcrb
ljmp
jmp
mov
rcll
lock
imul
mov
cli
fldpi
repnz
sbb
xor
push
jmp
mov
mov
cmpl
or
jmp
ret
mulb
cmc
inc
je
mov
scas
sbb
or
cmc
outsb
sub
pop
cmp
outsl
inc
cmp
jmp
fmuls
adc
test
add
push
add
xchg
pop
mov
push
adc
mov
pop
out
xor
sub
jecxz
push
ljmp
sub
pop
cmpb
push
cmc
inc
ffree
inc
jl
pusha
pop
in
rol
bound
outsb
daa
es
mov
inc
call
clc
xchg
in
enter
cwtl
xor
sub
cmp
jo
lods
ljmp
stos
inc
inc
push
jl
test
push
mov
and
cltd
push
call
inc
lock
and
ljmp
dec
aaa
pop
lods
jecxz
adc
into
cmp
push
insl
arpl
jae
pop
insl
xor
xchg
push
cmp
orb
popf
inc
out
and
stos
or
fsubr
mov
sbbb
pop
adc
insl
mov
bound
cmp
fcoml
push
int
ret
cli
das
mov
pop
insb
sub
in
mov
mov
pop
imul
icebp
mov
aas
int
sbb
xchg
repz
add
ret
inc
pavgw
out
aam
mov
repz
add
fs
stos
andl
mov
in
cmc
sbb
mov
jle
loopne
leave
fisttpll
mov
and
aad
jp
out
dec
insl
sbb
popf
stc
and
mov
aaa
stc
adc
pop
xchg
xor
jo
mov
mov
scas
dec
xor
bnd
cli
and
mov
andl
lret
push
rcrb
in
int
jge
xor
mov
test
aas
bound
xorb
push
jecxz
test
jbe
sub
out
ret
push
xor
mov
xlat
decb
popa
cs
imul
or
push
fdivs
mov
es
out
mov
dec
hlt
add
cmp
push
or
in
add
xor
and
pop
xor
mov
xchg
cmp
inc
mov
loope
out
sub
cmp
inc
jb
mov
push
mov
sub
cmpsl
inc
push
xor
mov
jecxz
stos
es
mov
lods
push
dec
ret
sbb
sbb
xor
push
gs
xchg
inc
pop
scas
mov
xor
movsb
mov
xor
repz
data16
test
dec
data16
inc
lea
or
jo
repnz
rclb
jecxz
xor
xor
sar
in
pusha
notb
sti
cmpsb
scas
inc
out
jmp
fdivl
add
pop
sarb
loopne
add
cmp
cmp
int3
pop
jnp
mov
dec
repz
cmpsl
mov
cmc
mov
rcr
in
dec
addr16
mov
rcll
or
fwait
mov
mov
ss
popa
adc
xchg
xor
jp
dec
test
loop
stc
xchg
addr16
orl
scas
and
bound
sub
xor
xor
sub
jo
dec
fcompl
fchs
cmp
jnp
insl
xchg
sbb
mov
inc
inc
jp
xchg
lds
es
pop
adc
lds
es
jecxz
inc
ljmp
icebp
adc
add
xchg
dec
pop
push
mov
mov
inc
jecxz
in
pop
lock
rol
divl
ret
pop
clc
dec
jmp
dec
jmp
aam
and
mov
lea
mov
mov
dec
dec
in
cmc
sub
mov
mov
aad
or
mov
addr16
pop
xchg
scas
pop
lahf
mov
pop
mov
rcrl
shrl
fiadds
in
mov
adc
pop
pop
f2xm1
add
inc
xchg
iret
loop
xor
in
push
pusha
pop
xchg
insb
test
adc
test
add
sub
leave
bound
je
jno
cmp
aas
or
lods
xchg
mov
lret
hlt
mov
cli
loope
rorb
mov
ret
pop
ret
outsl
ret
push
cmpsb
jns
mov
mov
nop
sub
mov
scas
aaa
push
test
add
mov
mov
xchg
adc
lea
in
jp
mov
sub
addl
mov
xor
outsl
bound
sub
sub
inc
fidivs
fyl2x
cmp
pop
push
lods
pusha
stos
scas
fnstsw
push
clc
sahf
or
retw
sbb
xor
mov
arpl
add
data16
dec
sub
dec
adc
xorb
mov
mov
popf
ss
inc
addb
xchg
pop
rcrb
test
popa
cwtl
sub
xchg
xor
pop
mov
insb
inc
add
sbb
jns
cmp
loop
pop
cmp
aad
inc
shr
adc
cmp
push
mov
ljmp
mov
inc
pop
lcall
data16
pop
cmp
insl
stc
sub
lcall
popf
mov
mov
loopne
in
aam
add
test
pop
lods
imul
inc
sub
es
fisubl
jbe
repnz
popf
jns
dec
jno
in
dec
ds
cmc
arpl
shrl
sbb
std
cmp
mov
sbb
inc
cmpsb
push
mov
xchg
and
xor
mov
push
scas
or
jne
push
push
popa
push
divl
stc
and
in
pop
cwtl
sbb
and
bt
stos
aas
xor
jns
push
fsubrl
mov
jae
mov
xor
cmp
xchg
inc
imul
cmp
adc
jbe
mov
pop
testl
pop
or
sub
fsubrs
gs
int3
jg
inc
adc
nop
fildll
test
xchg
or
cmp
mov
dec
mov
mov
jne
cmp
xor
push
xlat
outsb
jle
pop
icebp
insb
in
fdiv
cmp
out
push
in
bnd
aad
imul
fildl
movsl
cmp
cmp
cmp
outsl
push
call
push
mov
push
loop
add
outsb
test
clc
icebp
lock
addr16
gs
jl
inc
jo
dec
in
out
jnp
fucomip
fdivl
subb
icebp
orl
jo
mov
outsl
popa
sti
pop
jmp
int
out
jne
aaa
imul
jge
sti
mov
jmp
js
insl
jne
add
repz
in
loop
insl
add
jle
xor
push
jmp
mov
sub
lds
jge
mov
fs
add
rcr
mov
dec
in
and
mov
popa
int3
sbbl
mov
lahf
or
into
out
and
sahf
aas
jno
scas
jg
shrb
faddl
shlb
sbb
es
xor
js
les
mov
mov
push
mov
aam
imul
ret
lea
cmpsb
popa
jbe
or
fcoms
imul
mov
mov
test
cmp
sahf
mov
xchg
xchg
sbb
imul
xchg
pop
xor
or
aad
mov
xor
mov
shl
sbb
mov
iret
aaa
add
dec
and
push
fdivs
decl
outsb
xor
cmc
dec
iret
sbb
dec
xchg
out
les
mov
mov
pop
or
push
sub
test
dec
daa
je
or
xchg
js
loope
repnz
push
ftst
mov
inc
sti
adc
stos
outsl
mov
xchg
subl
jle
mov
mov
push
or
pop
pop
sbbb
repz
mov
pop
popf
mov
fisubrl
xor
aas
inc
iret
dec
xor
rcr
sarl
fildll
je
inc
adc
xchg
stos
mov
sbb
lret
out
popf
jle
add
mov
cmpsb
ret
cmpsb
lds
daa
fs
lods
pop
int3
add
ljmp
andl
xor
xor
aas
rcrl
jb
dec
popa
xchg
cmpsl
int3
add
sub
jnp
sahf
and
pusha
movsl
in
stos
xor
or
sub
test
jae
lret
bound
cmc
mov
xchg
in
or
adc
push
js
popf
dec
mov
aaa
add
fimuls
pop
jmp
cmp
add
dec
cmp
gs
xchg
popf
outsl
into
lret
add
mov
sub
icebp
fsubp
dec
pop
sahf
ljmp
imul
xchg
or
addl
jb
push
icebp
out
or
mov
fiaddl
push
enter
mov
enter
shll
push
jg
int3
test
btc
inc
push
test
inc
aas
dec
subb
or
push
xchg
sarl
ds
ljmp
jge
lret
mov
scas
ret
jns
sub
xor
movsb
lcall
cli
scas
out
add
orb
std
or
inc
int
dec
jg
pop
lods
scas
sti
cmpsl
pop
out
push
adc
inc
sub
push
jmp
pop
in
aas
dec
inc
add
lret
mov
loope
dec
hlt
je
add
xchg
sub
add
jbe
mov
loope
je
adc
xchg
add
or
fsubrl
jns
xorb
leave
pusha
add
sbb
js
inc
and
jns
cmp
dec
iret
enter
push
enter
daa
sbb
jno
lret
dec
mov
gs
insl
idivl
icebp
inc
lret
xchg
mov
push
add
lcall
ret
pop
mov
xor
pop
push
notl
pop
and
jb
jg
lcall
mov
sub
cmc
inc
loopne
mov
fs
inc
jb
out
arpl
dec
loopne
test
mov
rclb
jmp
cmp
push
push
xchg
je
pop
idivl
jmp
lahf
cmc
dec
pop
out
jbe
dec
mov
mov
addr16
push
pop
fsubs
pop
inc
sub
dec
mov
mov
or
push
jl
push
jmp
sub
xacquire
inc
mov
std
js
out
push
aaa
jbe
repz
sub
xor
jle
je
adc
xor
stos
mov
dec
xor
dec
add
repnz
add
sbb
dec
pop
add
and
mov
insl
inc
mov
mov
repnz
mov
shrb
dec
lods
shll
and
in
jo
sub
pop
push
iret
aad
sub
cltd
xor
or
add
xchg
pop
cs
cmpsl
mov
push
ret
lea
out
shll
repnz
ja
lea
or
repz
outsl
push
insl
std
fsubs
jmp
orb
lods
out
sbb
fwait
mov
pushw
mov
mov
dec
out
or
mov
insl
ja
leave
push
sbb
add
stos
icebp
jmp
ficomps
cwtl
dec
xor
fadd
imul
incl
mov
int
dec
xchg
cs
xchg
and
pop
mov
jb
adc
bound
dec
icebp
push
daa
sbb
aad
push
fs
cli
jne
int3
int3
cltd
js
shrl
pop
clc
and
call
mov
bound
pop
mov
aaa
sub
and
arpl
shlb
push
test
jecxz
fists
flds
enter
mov
leave
lret
aaa
iret
push
push
add
and
mov
pop
cmp
jecxz
jo
cmp
or
pop
lea
lret
addl
flds
or
push
xchg
inc
test
add
mov
and
and
cld
xchg
fmull
sahf
stc
cmc
or
xor
ss
outsl
dec
hlt
mov
jne
sub
fdivl
xor
sbb
cwtl
pop
jmp
jo
dec
push
test
mov
xchg
sub
or
adc
sub
fbld
adc
ret
cmpsb
out
push
jg
ret
pop
gs
or
xchg
insb
sub
jp
pushf
add
jnp
adc
xchg
mov
mov
pop
push
lds
jnp
and
xchg
loope
push
pop
jnp
ds
pop
lahf
scas
mov
mov
sbbl
push
push
addr16
xor
sub
loop
push
or
mov
xchg
sbb
fcmovbe
xor
testb
jo
lock
lods
mov
or
cmp
mov
pop
and
sbb
push
mov
adc
mov
imul
and
loop
xchg
clc
popf
fwait
push
hlt
sbb
aas
jmp
jb
mov
mov
jge
jae
jl
mov
dec
pop
jno
imul
popa
add
and
andb
out
pop
xchg
mov
or
cwtl
jo
mov
out
leave
int
inc
fdivl
aas
pop
pop
mov
jg,pn
add
xchg
test
xchg
jbe
stos
xor
dec
cmp
mov
or
pop
and
fwait
mov
adc
ja
out
int3
dec
jp,pn
hlt
cltd
loope
loope
leave
sbb
push
push
dec
mov
or
shlb
rcll
sarl
pop
fld
dec
push
clc
push
sub
cmpsb
jno
dec
mov
data16
jg
loope
sub
mov
jle
pop
test
pop
inc
mov
mov
jb
pusha
mull
push
xchg
xor
inc
mov
pusha
cmp
sti
stos
icebp
adc
es
lcall
cwtl
xor
push
and
out
pop
or
lds
pop
dec
sbb
fs
lcall
aam
xchg
pop
lods
adc
test
sbb
andl
jecxz
add
xchg
imul
out
push
sub
jl
fistpll
sub
loope
sbb
mov
imul
js
pop
ret
mov
es
ds
and
in
add
icebp
mov
jnp
lds
enter
fbstp
push
cmp
lcall
stos
movsl
push
insl
insb
xor
sbb
push
mov
jg
pop
pushf
je
data16
std
iret
push
xor
and
gs
out
add
fidivl
aad
cmp
adc
test
or
lods
add
xlat
std
cltd
mov
adc
out
leave
jge
cs
push
aas
push
xor
movsb
jnp
xchg
leave
sub
loop
cli
inc
data16
cmp
fdivp
pop
pmaxub
dec
mov
push
adc
aad
lds
jge
push
movsl
adc
aaa
mov
dec
mov
xor
jp
dec
addr16
popf
add
mov
in
adc
add
test
inc
shlb
aas
inc
jg
jb
jmp
xor
cmpsl
out
lea
and
jl
shr
and
or
dec
jb
int3
mov
xchg
add
mov
movl
fs
rcll
push
pop
stc
mov
sahf
jae
add
mov
jp
fisubrs
cmpsb
cmpsb
insl
sahf
xlat
cwtl
jmp
shl
sbb
and
test
mov
test
sbb
gs
dec
popa
lods
repz
xor
fs
pop
mov
shrb
jecxz
xor
lret
jbe
push
inc
pop
pop
int3
pop
jmp
dec
repnz
jne
mov
dec
int3
insb
mov
cli
xchg
call
mov
mov
add
mov
dec
or
in
in
adc
push
fwait
ds
test
push
mov
or
add
xor
and
pop
pop
cmpsl
je
mov
loopne
fcomps
xor
movsl
cmp
push
out
mov
icebp
dec
nop
adcb
nop
cmp
sbb
test
or
mov
sub
and
pusha
cmp
sarl
insb
roll
aam
lret
jne
fists
push
mov
shll
push
jbe
mov
and
jno
adc
xchg
add
lock
mov
add
scas
enter
xor
cli
or
lcall
rorl
mov
nop
ljmp
sub
repz
stos
test
mov
jl
and
daa
adc
jecxz
arpl
fdivrs
int
jnp
dec
loopne
mov
addr16
jns
push
push
add
loop
pop
pop
fs
mov
add
js
pop
mov
out
pop
lret
cmpsl
cmpb
sub
push
pop
or
ja
inc
movsl
icebp
out
xchg
dec
push
push
pop
add
jp
daa
into
test
out
lods
pop
decl
xchg
mov
js
mov
mov
push
loopne
pusha
dec
loop
iret
and
cmp
popa
lahf
jns
xchg
mov
imul
mov
sbb
mov
ret
imulb
inc
or
dec
in
into
roll
jl
mov
jnp
mov
pushf
movsl
xchg
pusha
ljmp
stos
addl
std
jo
dec
jle
sbb
mov
int
mov
aam
in
push
aam
aam
jne
mov
xchg
loop
in
scas
outsb
adcb
cld
xchg
cmp
xor
sbb
xchg
dec
scas
lret
lods
subl
call
and
pop
out
lcall
mov
cmp
cmpsb
lock
addr16
pop
push
mov
pop
mov
bound
or
or
cmp
addr16
int3
lret
test
sub
scas
jge
pop
lock
dec
mov
bound
js
insb
addr16
mov
cmp
or
fcomi
jno
movsb
xchg
fidivrl
je
fidivrs
test
outsl
push
stos
test
xchg
scas
orl
sub
popa
mov
loope
push
aas
mov
sbb
dec
lahf
inc
clc
or
mov
in
outsl
push
push
hlt
fsts
add
das
out
in
push
xchg
mov
jle
into
ret
fsub
add
in
inc
dec
adc
jg
ret
inc
sbb
pop
and
cmc
mov
fildl
push
pushf
xchg
mov
push
pushf
jne
mov
in
add
je
mov
movsl
lds
inc
cmpsb
lea
sbbb
xlat
notl
hlt
xor
mov
mov
movsb
jg
push
mov
push
jne
jecxz
in
sub
mov
idivl
dec
dec
inc
test
mov
data16
or
scas
lds
mov
sub
stc
in
dec
sub
rorl
out
xchg
fsubrl
in
lahf
xchg
or
std
or
pop
push
jae
mov
inc
pop
and
es
pop
sub
out
sarb
xchg
shlb
jmp
ret
stc
sahf
jne
push
addr16
cld
lret
fwait
sti
outsb
daa
test
inc
outsl
push
lret
xlat
fnstsw
in
std
aas
sbb
aaa
pusha
cmp
sub
rorb
fsubrl
xor
rclb
stos
cmp
test
cmp
lahf
pop
mulb
test
shll
pop
push
dec
mov
xor
dec
idivb
fldl
mov
cwtl
xor
add
ljmp
push
dec
ret
pop
insb
adc
das
pop
and
pop
dec
push
imul
fdivrp
jno
dec
fsubrs
mov
xor
inc
pop
sub
pop
jno
push
mov
fsts
xor
jno
inc
and
inc
aad
imul
addr16
repz
les
xor
xchg
mov
sti
ret
cmp
cmp
cld
cmpsl
stc
inc
pop
jns
push
scas
enter
mov
xor
cltd
repnz
adc
mov
jl
push
addr16
dec
ret
xlat
sbb
aam
scas
jp
repz
aad
or
test
jnp
push
jg
sbb
rcll
sbb
aaa
or
or
sbb
addr16
rolb
dec
js
shrb
nop
pop
mov
xlat
sub
pop
lock
lock
rorl
xor
mov
leave
push
xchg
add
sub
jno
cmpsl
mov
mov
sub
mov
insb
mov
xchg
inc
xchg
mov
mov
pop
cmp
mov
and
push
xchg
cli
sub
mov
aas
fldenv
pop
into
gs
push
in
push
xor
or
fstpt
jns
div
mov
int
push
imul
test
pop
in
push
popa
push
or
cli
inc
fsubrl
cmp
cltd
mov
loopne
inc
jecxz
sbbl
inc
dec
cmc
loopne
sbb
icebp
stos
sub
testl
ss
into
xor
push
lock
push
in
push
xchg
or
outsl
jae
sahf
sub
jnp
lods
or
cmp
xchg
push
dec
and
mov
out
jo
insb
sub
push
call
pop
outsl
outsl
mov
jne
and
xor
cmp
fimuls
mov
jo
popf
bound
or
push
stos
jmp
pushf
pop
cmpsb
dec
jno
xor
andl
cmpsb
push
rorl
fwait
xor
outsl
daa
xor
mov
negl
jle
jne
pop
aad
jb
das
outsl
rcll
icebp
inc
xrelease
addr16
mov
mov
das
mov
sti
lret
pushf
cli
lret
popa
inc
pop
jg
push
fldl
aam
inc
enter
mov
stos
jg
aas
mov
mulb
call
dec
cmp
stos
dec
add
mov
data16
and
add
out
pop
xor
inc
xchg
or
jno
sub
test
daa
push
fiadds
imul
jmp
jecxz
or
lahf
sbb
std
imul
test
loopne
xchg
pop
rep
add
mov
push
xchg
inc
rclw
faddl
mov
lods
mov
fistl
clc
xlat
pushw
movswl
push
incl
inc
lods
jg
lea
mov
psubsb
xlat
mov
xchg
cs
dec
fidivrs
ficompl
jl
push
stc
ja
incb
dec
jb
mov
push
and
lret
and
addl
bswap
ret
fcoml
inc
stos
out
cmp
or
dec
fisttpl
mov
mov
jo
in
push
xor
lock
into
stc
or
mov
mov
les
xor
nopl
loop
lea
xchg
mov
lcall
or
mov
mov
fistpll
add
dec
pop
dec
test
or
and
dec
mov
notl
mov
add
fldl
and
pop
mov
cmc
int3
adc
pop
push
inc
sbb
es
mov
push
jle
pop
fistl
xor
mov
push
jecxz
nop
push
add
scas
arpl
cmpsb
xchg
push
mov
adc
stos
test
jns
push
push
sub
mov
outsb
inc
fxch
in
mov
pop
inc
inc
jmp
dec
arpl
stos
shlb
fildl
mov
add
mov
and
xchg
aam
mov
popf
lea
xchg
daa
sahf
lods
push
xchg
imulb
sbb
ds
push
or
aam
dec
jle
lret
andb
je
and
cmp
jnp
lods
in
rcl
jb
fiaddl
in
je
push
pop
inc
push
in
xchg
fs
outsl
jl
pop
or
mov
and
mov
xchg
pop
xchg
sub
cmc
add
inc
or
adcl
sbb
add
loope
push
fcompl
loopne
xor
les
adc
push
into
pop
fisubrs
push
xchg
test
pop
daa
xchg
mulb
mov
jl
sbb
popf
or
mov
push
jp
cmp
push
lret
jmp
jecxz
out
cwtl
xorl
or
aad
clc
sahf
mov
call
iret
es
push
mov
pop
sbb
sub
sub
rcr
cmp
mov
pop
fildll
addr16
pop
dec
xchg
cmpl
iret
data16
inc
pusha
mov
pop
sbb
jno
cmp
clc
cmp
popf
ja
cmpsb
les
jmp
cmpsl
xchg
sub
jno
sbb
xchg
jns
outsb
xor
jnp
ja
push
dec
mov
iret
cmpsb
addr16
xlat
lock
push
lods
cmp
lcall
in
adc
mov
push
ficoml
cmp
inc
xor
or
lret
mov
cmc
xorl
push
inc
shll
jo
lock
xchg
rorb
inc
stos
mov
imul
jnp
cmovno
sahf
stos
fldt
xchg
pop
add
jne
and
mov
or
sahf
xchg
and
lods
lcall
xchg
add
mov
ds
pop
and
out
cli
adc
arpl
lret
les
out
pop
call
fists
shll
xor
jnp
add
and
pop
imul
fiadds
jbe
add
dec
xchg
push
mov
sub
xchg
xor
dec
pop
in
inc
jne
mov
aaa
movsb
cmp
sbb
std
add
sbb
or
dec
jecxz
mov
ret
insb
sbb
jmp
scas
add
xor
data16
adc
sub
add
sbb
hlt
mov
andb
sahf
cs
aam
push
repz
jl
mov
add
loop
jmp
fsubs
dec
push
clc
movsl
in
xchg
cmpsb
xchg
add
frstor
xchg
outsb
push
lds
imul
ljmp
fimuls
pop
int3
xor
push
jg
in
mov
lahf
and
je
inc
xor
sub
enter
daa
rep
test
sub
pop
and
xlat
scas
mov
lahf
aaa
jg
sahf
jecxz
test
clc
or
bound
jecxz
insl
pop
inc
pop
push
and
cmp
xor
roll
jno
ljmp
or
lods
jno
inc
bound
mov
dec
loop
dec
fistpll
sahf
loop
rorb
ljmp
fbld
xchg
push
mov
pop
repnz
sbbl
mov
inc
loope
pop
hlt
mov
stc
adc
jb
stc
test
xchg
sahf
clc
fwait
pop
xchg
xor
scas
push
jmp
out
mov
shl
push
pop
fcmovu
mov
mov
insb
cltd
push
std
lret
xchg
xor
ds
push
pop
jne
xchg
in
in
sti
adc
pushf
mov
mov
sahf
mov
cmp
lds
int
xor
test
cmp
cmp
sbb
adc
leave
jl
xchg
ljmp
jg
sbbl
aam
in
pushf
jmp
cmp
clc
repz
or
add
adc
sub
shll
lcall
cwtl
stos
add
cltd
test
xor
andl
lret
ja
pop
outsb
and
xchg
scas
push
roll
cmp
pop
mull
addr16
mov
out
iret
inc
std
sbb
repnz
jmp
xor
jmp
jae
cld
lcall
xchg
clc
xchg
sub
mov
mov
lret
pop
jnp
lods
daa
jg
arpl
sub
pop
sbb
stos
sbb
jl
adc
add
fildll
cmpsb
les
fwait
jo
adc
mov
pusha
fwait
daa
out
pop
jl
out
clc
addr16
xchg
add
sbb
loopne
inc
jge
adc
call
adc
rcll
imul
mov
pop
clc
lahf
decb
fmuls
push
jns
leave
fcmovnbe
jle
in
xchg
pop
ja
insb
mov
mov
adc
and
jmp
xchg
and
rep
out
cmc
in
xor
sbb
out
mov
mov
pop
ror
xor
bound
sbbl
sbb
ds
out
dec
jecxz
sub
out
test
mov
in
push
pop
es
add
sub
add
repz
and
adc
mov
or
daa
xor
js
mov
sti
imul
sbb
lods
dec
aad
leave
mov
enter
mov
cmc
movb
test
lods
fmul
push
out
std
stc
mov
aaa
fstps
or
jl
mov
fcompl
pop
lods
push
sbb
dec
movsb
mov
out
outsl
add
in
or
lret
adc
or
jno
or
into
sub
test
mov
and
inc
arpl
cltd
or
ljmp
push
test
and
repnz
or
scas
fsubs
outsb
out
mov
jb
pop
inc
popf
fdivl
mov
pusha
clc
jecxz
push
std
add
pop
cmp
mov
xlat
sbb
mov
push
pop
mov
jle
cs
jne
imul
sbb
sbb
xor
fmuls
or
mov
shrl
fsubrs
mov
xor
testl
mov
cmp
add
mov
pop
jmp
or
cli
es
dec
fisttpl
jl
aam
sbb
icebp
test
inc
js
js
out
jbe
out
ficoml
into
insb
je
adc
or
lods
cmp
xor
mov
out
test
sbb
stos
int
add
ja
push
test
enter
inc
xchg
aas
xchg
cmp
mov
aaa
mov
cmp
lcall
add
push
fwait
mov
pop
xchg
adc
movsb
pop
scas
mov
scas
jge
fnsave
pop
mov
insl
stos
int
sarl
pop
popf
pop
jmp
cmpb
scas
movsb
push
mov
add
mov
les
es
xor
and
jl
loopne
sub
sbbl
cltd
in
lret
outsb
fwait
lods
stos
adc
fmuls
std
push
imul
xor
xor
popf
lods
out
cli
pushf
cld
aad
adc
pop
je
mov
leave
fnstcw
aad
mov
inc
xor
movsl
sub
inc
popa
std
add
lods
cli
fsubs
cmp
and
iret
or
pop
jecxz
fisubs
lahf
into
addr16
and
mov
or
mov
xor
xchg
push
jnp
push
mov
cmpsb
and
dec
mov
mov
rorb
aaa
jmp
sbb
mov
cwtl
shl
cwtl
leave
mov
pop
or
inc
mov
es
jne
xor
mov
mov
rorb
stos
and
push
or
push
scas
sub
ret
in
std
xchg
out
sti
ljmp
push
inc
jno
xlat
data16
cwtl
sarb
sbb
xchg
shr
stc
sbb
ljmp
or
jo
imull
xchg
mov
stos
sbb
jmp
out
lret
xor
add
inc
cltd
sti
shl
ret
in
pop
mov
mov
cmc
mov
decb
push
imul
push
psrad
jno
pusha
push
testl
pushl
mov
jo
fstpl
inc
add
mov
xchg
cmp
mov
and
mov
and
push
test
loopne
sbbb
loopne
mov
bound
lahf
enter
mov
push
jmp
mov
mov
fstps
stc
dec
jge
lret
faddp
sbbb
push
pop
ffree
mov
mov
popa
jne
iret
push
push
icebp
ljmp
into
fwait
out
sti
or
xchg
or
in
in
mov
mov
test
scas
inc
test
lret
in
bound
sbb
psadbw
jg
nop
mov
add
sahf
mov
lods
out
and
movsl
inc
ja
stos
and
adc
sub
adcl
sbb
add
push
flds
mov
dec
into
xor
pop
cmpb
sbb
or
and
dec
adc
int3
iret
pop
rol
pop
sub
repz
enter
outsb
repnz
add
dec
push
adc
enter
into
and
cmp
jecxz
mov
xchg
stc
and
lds
dec
insb
push
xchg
add
inc
xor
adcl
nop
cmpsl
add
inc
fstpt
jecxz
xchg
push
fnstsw
xor
icebp
and
fisubrl
inc
nop
add
jle
push
sub
out
cld
pop
idivl
flds
loopne
inc
or
call
add
xchg
jbe
mov
and
js
mov
adc
add
add
lods
cmp
mov
shl
dec
or
cmp
fcoms
cmp
mov
jp
ljmp
jbe
lods
jmp
test
mov
sbb
arpl
and
in
push
jmp
add
mov
popa
inc
aam
mov
push
js
inc
and
fidivl
push
inc
lcall
and
mov
cmp
jo
pop
mov
sbb
mov
inc
shrb
aam
sbb
pop
imul
scas
cmc
aaa
cs
adc
popf
mov
mov
mov
jne
out
sbb
lea
pop
out
mov
cmc
fcomip
cmp
fadds
cmp
lea
jmp
pop
sub
sarl
in
outsl
loope
adc
test
mov
mov
adc
pop
mov
push
xchg
ret
mov
pop
icebp
movsb
or
jno
popf
loop
jmp
subl
and
das
out
je
push
subb
mov
aam
imul
mov
js
inc
jmp
sub
pop
out
sbb
inc
cltd
bound
inc
fistl
aad
ds
hlt
outsb
pop
xchg
add
mov
and
adc
lcall
in
cmp
adc
adcl
add
mov
fs
pop
fmull
xchg
adc
mov
bound
and
jno
push
sub
xchg
xchg
ljmp
push
mov
adcb
mov
stos
cli
pop
push
cwtl
xor
popf
stos
rcl
jmp
or
lcall
sbb
xor
xchg
xchg
shll
loop
pushf
gs
addr16
cwtl
rolb
in
adc
inc
xor
pop
mov
push
jp
pandn
int3
cmpsl
gs
nop
stos
inc
cwtl
jge
sub
ss
in
testl
cmp
xor
fxch
pop
add
push
ja
push
aad
inc
cmpsl
push
es
jle
inc
mov
jae
lret
popf
shl
into
test
mov
jmp
aas
push
add
or
mov
mov
cmp
add
push
xchg
xchg
cltd
stos
add
scas
bswap
outsb
jle
dec
jb
xchg
pop
rcl
repnz
pop
xchg
adc
jbe
jns
scas
xchg
mov
jl
adcl
fmuls
jge
scas
and
jmp
jae
outsl
xor
daa
lcall
or
insb
ret
add
ret
mov
shl
sahf
icebp
movsl
hlt
sarb
inc
test
aaa
push
mov
cmp
pop
mov
pop
sbb
add
es
jbe
loope
push
adc
push
xchg
std
xchg
sub
push
add
je
add
and
sbb
stos
testb
and
add
jle
repz
jb
dec
fcoms
xlat
fisttpl
jge
stc
aas
push
cmp
notl
outsb
mov
hlt
xor
sub
cld
xchg
gs
fmulp
pusha
aaa
xor
push
cwtl
pop
out
lcall
daa
mov
lahf
sub
testb
pushf
pop
imul
jmp
jg
mov
jp
mov
adc
push
imul
pop
push
sub
lcall
gs
pop
stos
fs
jne
loopne
and
add
sbb
push
aam
mov
and
lret
jp
push
int
pop
int
iret
stc
dec
add
push
ret
lods
mov
mov
leave
or
dec
cli
dec
rcrl
notb
std
mov
or
das
sahf
shlb
nop
imul
call
gs
sbb
ficoml
movsl
jb
repz
les
lock
stc
mov
pop
addr16
iret
push
mov
shl
inc
sarb
mov
dec
out
xlat
sub
stos
xchg
and
outsl
xchg
push
lods
pusha
sti
setb
push
lods
gs
pop
hlt
mov
fnstenv
push
or
lea
push
je
test
push
ds
xchg
loope
xor
maxps
inc
lock
xchg
mov
sub
fnsave
lcall
xchg
pop
rclb
popf
or
jnp
imul
push
xor
mov
inc
sbb
test
mov
sub
stos
jge
fwait
sbb
ficoml
nop
dec
pop
movsb
mov
clc
fbstp
shl
xor
dec
dec
bound
or
xchg
subb
scas
or
push
xor
jle
jo
fbld
test
pushf
inc
inc
test
jge
sub
adc
inc
lcall
cmpsl
lock
xlat
xor
adc
push
subb
and
in
daa
adc
daa
mov
xchg
dec
xchg
sub
and
mov
out
inc
ret
push
out
hlt
bound
lea
mov
push
fwait
cmp
push
jno
movsl
adc
dec
jge
int3
clc
test
dec
mov
adc
ljmp
in
jnp
lods
movsb
stc
repz
mov
dec
sub
dec
xor
or
or
int3
push
xlat
les
adc
dec
orl
push
insl
pop
nop
aas
es
dec
xor
shll
lcall
in
les
fwait
out
or
mov
iret
xor
mov
fstl
push
ret
adc
xchg
mov
es
xchg
dec
jmp
dec
add
and
aam
xchg
stos
jmp
std
jl
sarl
sub
insl
arpl
je
test
pop
into
pop
and
popf
push
adc
in
idiv
fwait
decl
inc
cmp
loop
jle
mov
jbe
lds
pop
add
cmp
loope
dec
xlat
int3
xchg
ds
adc
sbb
cmp
divb
inc
pop
push
inc
sbb
mov
dec
mov
mov
fsubrs
scas
out
popa
hlt
xchg
notb
mov
enter
icebp
imul
test
repz
push
pop
js
iret
test
jb
ds
mov
clc
cltd
dec
daa
mov
arpl
jnp
add
fdivl
sub
jae
jne
mov
and
aaa
dec
sub
loop
rcrb
xor
int3
lock
push
or
mov
mov
push
mov
sub
fsubp
adc
sub
mov
mov
mov
daa
jge
scas
adc
jo
in
out
jne
xchg
sub
mov
incl
stos
mov
push
jnp
out
add
sbb
adc
push
push
push
ljmp
mov
jne
pop
roll
in
scas
xor
in
xchg
mov
mov
fsubrl
adcl
lods
mov
bnd
xchg
or
mov
inc
ret
data16
cmp
jnp
push
xchg
sbb
mov
sbbl
mov
and
or
add
insb
sub
aam
fwait
in
lret
mov
ficoml
call
push
call
cmpl
arpl
add
into
hlt
pop
sbb
adc
mov
imul
mov
loopne
stos
daa
ss
scas
fistl
jae
ja
push
cmpsb
push
jmp
pop
repz
cmc
push
loop
icebp
adc
adc
push
inc
test
sub
push
leave
mov
inc
mov
mov
mov
mov
pop
xor
ret
lds
push
and
pop
lcall
push
into
clc
ror
sub
jle
sti
xor
pushf
dec
sub
cmp
test
enter
mov
mov
adc
cmp
xlat
adc
jle
popf
push
jp
jmp
fldl
mov
divb
sbb
inc
jg
imul
or
ljmp
adc
pop
mov
or
and
movsl
aam
adc
pusha
fistl
mov
mov
add
popa
sub
mov
addr16
pop
sarl
pop
stc
aas
fisttps
cmpb
mov
lret
ljmp
mov
das
push
jmp
rclb
and
xlat
outsb
add
push
aas
mov
enter
je
int
lods
adc
push
dec
jo
mov
test
movsl
sbb
jbe
ret
pop
inc
test
add
repz
repnz
mov
subb
sbb
scas
mov
and
mov
arpl
rol
inc
sti
es
pop
scas
or
pop
pop
int
inc
mov
mov
xor
xsha256
cmpsb
shll
pusha
cmp
cmc
sub
mov
push
ds
push
push
icebp
xor
pop
mov
mov
sbb
ret
mov
cmp
jnp
fstl
fnstsw
jmp
xor
rorl
loop
adc
cmp
stc
sub
rolb
bndldx
test
pushf
sbb
jb
clc
or
stos
es
popf
fcmovb
enter
std
cltd
mov
cmp
fsubrp
add
sub
in
test
pop
cmpsb
cmp
cs
sti
dec
andl
inc
cmp
jb
xor
test
repz
mov
es
stc
pop
fsubrs
mov
stc
pmuludq
jge
loopne
pop
xchg
sub
sub
pop
out
stos
mov
arpl
pop
pushf
inc
xor
fidivrs
stos
xor
dec
dec
gs
ret
dec
iret
fsubs
push
in
mov
je
sar
pop
adc
and
es
cmp
mov
pusha
jo
les
es
and
clc
sub
jmp
jmp
popf
or
test
fucomp
push
jecxz
and
xor
xor
in
cmp
loop
imul
mov
lds
rcrl
jb
xchg
xor
jle
ja
aad
mov
xchg
pop
inc
ret
inc
loope
pop
pop
jmp
pop
inc
fs
inc
and
push
lret
iret
inc
jp
call
jmp
packuswb
cwtl
jecxz
jno
fiadds
scas
ds
and
fdivs
xchg
xchg
push
iret
xchg
shrl
adc
cmp
mov
cmpsl
xchg
out
inc
inc
lock
jns
cltd
dec
inc
add
ljmp
imulb
in
std
xchg
inc
inc
mov
adc
adc
push
mov
movsb
push
jmp
sti
jnp
inc
sub
shl
icebp
and
mov
xchg
lcall
mov
popf
fdivs
arpl
scas
cmp
sbb
jmp
mov
pushf
outsl
inc
sub
xlat
mov
les
or
sbbl
bnd
xor
daa
add
rorl
jo
push
xchg
test
push
jge
cmpsb
in
test
cmp
mov
sbbl
loopne
ja
jp
fwait
xor
mov
jge
lods
and
adc
mov
insl
fildll
sub
in
subl
jp
push
xchg
sub
lret
insl
adc
add
or
mov
ljmp
hlt
pop
mov
rcrl
mov
aam
sub
dec
sub
pop
insb
mov
adc
test
aaa
mov
cmpsl
pop
xchg
jge
subb
push
test
out
push
lahf
stc
sahf
xor
push
jae
and
xchg
arpl
mov
pop
test
or
fistpll
mov
outsl
cmpsl
pusha
loope
leave
lods
pop
push
ja
dec
data16
test
sub
rcll
out
pop
movsb
ja
rep
mov
or
lret
cmp
xchg
pop
iret
pop
imul
mov
sbbl
addr16
fsubp
mov
testb
inc
ret
push
jle
xor
movsl
inc
adcb
hlt
out
rcrl
shll
es
push
sub
shlb
add
movsb
daa
add
repnz
lods
int3
adc
dec
mov
repz
xchg
dec
mov
xchg
dec
lock
xor
pushw
jl
sub
and
dec
enter
addr16
inc
ja
mov
mov
cmp
mov
or
adc
cmpsl
cltd
add
jae
push
hlt
rcrl
lcall
cmp
pushf
mov
add
setno
push
mov
lock
mov
push
lds
repnz
fnstsw
inc
and
ficoms
in
adc
push
mov
rcl
lret
inc
or
mov
pop
test
sbb
jge
or
int
out
sbb
ret
cmp
mov
scas
or
fs
movsb
loop
lds
scas
mov
outsb
cmp
cli
xorl
sbb
pop
lock
push
jno
js
cmp
leave
cltd
inc
jecxz
addb
sbb
test
rclb
xchg
ljmp
nop
adcb
ficomps
std
add
sarb
sahf
adc
sbb
lock
pop
xchg
xor
mov
push
sub
jle
jne
and
inc
cli
mov
arpl
xor
mov
lahf
push
lea
cmp
test
dec
sbb
xchg
fnstsw
sub
ret
mov
ret
cli
adc
into
sub
or
shrl
pop
mov
popf
or
adc
or
mov
mov
or
out
mov
rcrb
and
inc
rcrl
test
into
fmul
adc
sbb
or
mov
pop
imul
stc
les
pop
cmp
enter
jbe
rcrl
jns
sarb
jns
in
sbbb
sbb
pop
pop
dec
pminub
mov
xchg
xchg
push
leave
add
and
adc
arpl
mov
pop
jnp
in
jg
enter
stc
clc
ret
jmp
dec
loopne
and
cwtl
cwtl
mov
or
push
loop
xor
jp
sub
mov
dec
repz
addr16
adc
adc
cmpsb
xchg
sbbb
inc
adc
aaa
xor
mov
sar
sub
es
xchg
outsl
ja
jmp
add
xacquire
or
lods
adc
jnp
xchg
and
sbb
push
aas
iret
cmp
sar
cmp
rorb
cltd
push
es
cltd
pusha
loop
sti
sub
out
insl
jge
mov
cmc
enter
and
ss
pop
lods
cmp
fidivrs
loop
mov
xchg
leave
in
movsb
mov
fisttpl
xchg
bound
inc
pop
and
xorb
jo
cltd
mov
jbe
ljmp
lods
jne
xchg
gs
add
mov
pop
jge
inc
mov
and
push
lods
inc
sbb
gs
xchg
sarl
call
cs
dec
loop
enter
lcall
fists
dec
std
addb
push
lds
div
jmp
inc
in
and
roll
rorl
incb
xor
ss
inc
je
and
icebp
push
push
call
cltd
xor
in
mov
mov
ret
sbb
out
insb
popa
dec
cmp
mov
mov
pop
xchg
adc
dec
inc
push
test
sub
sub
lock
loop
push
fimull
loopne
test
out
fdivs
mov
inc
pop
test
scas
mov
mov
fiadds
xlat
mov
pop
mov
std
movsb
cltd
lea
pop
stos
fstps
sub
idiv
repz
xchg
int
shll
xchg
mov
sbb
jns
cmc
lahf
pop
and
repnz
cmp
or
pop
inc
cmp
test
jne
imul
lock
xor
lods
sub
popa
add
xor
into
hlt
test
jae
hlt
aas
push
cmp
out
dec
push
push
jl
xor
push
dec
in
in
out
movsl
outsb
popf
push
pop
cs
ret
inc
mov
jl
insb
dec
mov
inc
jle
xchg
add
cmpb
xchg
jbe
lret
jl
sbb
pop
adc
and
jne
mov
adc
mov
add
jne
out
xor
leave
int
dec
mov
stos
testl
mov
fnclex
sbb
inc
loope
jp
push
data16
mov
lahf
push
fmull
movsl
loopne
ret
mov
sub
lret
cmp
repz
inc
jno
scas
out
loope
mov
mov
bound
jnp
xlat
cmp
pop
mov
cmp
or
ljmp
es
pop
les
xor
repz
jno
not
addr16
mov
ret
mov
aad
dec
mov
cs
xor
loop
lret
xlat
push
mov
add
subb
daa
or
sbb
sbb
or
fs
inc
xor
subb
adc
fisttps
jecxz
sbb
addr16
pop
fsubrs
mov
mov
aaa
ss
cli
icebp
and
sub
dec
ret
hlt
icebp
daa
mov
decb
push
pop
cmp
repz
mov
sbb
rorb
lcall
fsubr
nop
jb
pop
inc
add
mov
lcall
and
testl
pop
out
push
dec
icebp
lcall
mov
adc
xchg
sbb
test
or
adc
pop
mov
add
idivb
adcl
dec
push
mov
lret
dec
ja
stc
xchg
fisubrl
test
sarb
enter
mov
mov
push
mov
mov
movsb
icebp
xor
sub
xchg
test
add
xchg
cmpsl
jo
test
stos
cmp
lret
icebp
leave
inc
enter
fstl
xchg
mov
scas
or
cmpsb
mov
xchg
int
lret
cli
lsl
lret
addr16
jmp
mov
sub
inc
flds
dec
testl
aam
add
es
mov
mov
dec
aad
sbb
dec
movsb
jl
scas
jno
sbb
jns
sahf
mov
leave
and
push
push
mov
mov
hlt
cmp
pop
sbbb
xlat
mov
adc
xchg
in
inc
pusha
ljmp
out
cmp
inc
push
leave
xchg
jb
add
mov
pop
in
mov
inc
fnsave
and
data16
push
lods
mov
fs
enter
fiadds
scas
out
jecxz
das
adc
out
mov
fsub
lods
leave
and
sbb
pop
pop
jbe
out
iret
mov
mov
pop
mov
das
mov
mov
xchg
shrb
adc
jl
ret
nop
push
xchg
sub
fidivrs
jmp
or
outsl
fdivl
adc
or
and
rcrb
xchg
jne
addl
lret
sub
xchg
mov
add
mov
sbb
test
adc
or
popa
mov
repz
cli
lea
fdiv
popa
outsb
add
sbb
jns
and
pop
add
xor
push
cmp
inc
out
gs
push
cmp
xchg
jp
in
test
scas
mov
push
sbbb
movsb
jns
push
clc
jge
loop
push
sbb
outsl
les
stos
inc
push
rorb
xor
enter
sahf
cmc
inc
cmpb
cmp
popf
popa
push
fsubrl
repnz
mov
dec
sub
or
sbb
dec
pop
push
mov
rolb
int3
out
or
mov
pop
sbb
inc
popa
mov
jbe
xchg
pop
ss
out
dec
arpl
jo
insb
fwait
movsb
jecxz
or
pop
sub
mov
adc
mov
je
and
scas
mov
add
xchg
adc
sarb
mov
sub
add
mov
inc
pop
mov
stos
mov
imul
pop
popa
fsubrl
ljmp
inc
imul
roll
cmp
rclb
lahf
stos
pop
mov
jbe
inc
push
jbe
out
add
mov
stc
and
dec
out
ds
sbb
cmp
cltd
subl
lock
jge
andb
pop
add
fisubrs
push
jno
lret
add
stc
cmp
shrb
dec
and
mov
mov
popa
aaa
into
push
pop
or
call
inc
mov
sub
fcomps
lds
lcall
psraw
xchg
stos
lock
lcall
loopne
mov
cmpsl
lret
mov
loop
mov
and
loop
sbb
xchg
lds
pusha
dec
jecxz
into
xchg
in
mov
loopnew,pn
mov
sub
fdivrs
repz
in
inc
int
insb
cmp
je
call
test
inc
mov
inc
fs
mov
mov
jmp
push
xlat
adc
mov
sbb
jbe
fwait
outsl
je
popf
out
sbb
mov
in
addr16
xor
sarb
adc
popa
mov
sub
sub
decb
pop
and
or
inc
iret
movsl
mov
mov
lds
ja
dec
jbe
and
pop
xchg
push
xchg
xor
gs
out
cmp
or
sub
scas
adc
or
or
cmp
and
fcomip
das
push
xchg
mov
enter
out
push
dec
add
lret
dec
pop
sbb
cmp
and
cmpsl
jle
or
push
jle
jmp
dec
cmp
add
lock
jecxz
add
push
filds
cmp
adc
cmp
cmp
rolb
cmpsl
push
xchg
adc
dec
loope
jg
test
jecxz
mov
cmp
jp
adc
leave
imul
and
inc
aam
jp
push
jno
inc
jecxz
sub
or
or
jbe
addb
fnstcw
cmp
hlt
mov
aam
jb
sub
jbe
cmp
fistps
dec
movsb
xor
add
xchg
gs
cmp
out
cmp
dec
pop
mov
out
fnsave
xchg
ret
cmp
ficompl
imul
cli
mov
cmp
rol
mov
stc
cmc
dec
cmpsb
pop
pusha
mov
js
imull
mov
lds
cmc
xchg
pusha
lock
mov
and
cli
fcmovu
gs
sub
insb
andb
cs
adc
frstor
pop
aaa
call
movsl
ret
xlat
das
outsb
sub
fnstsw
lcall
imul
sbb
and
pop
cmp
inc
dec
add
mov
adcl
pusha
push
pop
dec
cmp
aaa
mov
test
sbb
out
pop
or
mov
or
fwait
lds
fdivrl
stos
or
mov
fcmovnbe
or
in
dec
mov
out
lcall
push
jp
lods
imul
xor
mov
sub
mov
and
mov
fs
adc
fwait
outsl
ss
cmp
mov
and
xchg
inc
gs
jg
add
repnz
repz
fidivl
repz
cmpsb
out
hlt
mov
sub
dec
movsl
jl
ret
imul
lea
insb
inc
adc
test
inc
shll
outsl
faddl
adc
or
cltd
mov
pop
jp
mov
fwait
pop
jecxz
fwait
push
inc
xor
xchg
xlat
sbb
sub
movsl
xor
cmp
sub
mov
jo
test
outsl
lret
sub
pop
mov
bndldx
xor
jp
xor
ret
aas
xchg
lods
or
aam
and
fwait
adc
jecxz
cmc
and
das
adc
movl
daa
sbb
pop
in
rcl
or
insl
je
or
pop
and
dec
xchg
decl
pop
pop
loop
xor
dec
dec
mov
dec
or
int3
mov
and
jmp
icebp
mov
xchg
js
dec
aam
inc
xor
adc
jle
shr
xor
daa
dec
dec
sbb
push
addr16
mov
dec
and
stos
iret
mov
pop
jp
cmp
stos
jg
xor
sbbb
mov
aas
in
frstor
cmp
ret
fs
fisubl
sahf
xor
push
sbb
mov
mov
cmp
xchg
mov
push
call
mov
mulb
ja
inc
sub
data16
in
xlat
cmc
sbb
mov
xor
push
inc
cltd
mov
mov
mov
dec
xor
mov
outsb
mov
ret
fdivrs
and
insb
mov
mov
or
sub
xchg
mov
js
xchg
fwait
lock
mov
sbb
xchg
js
sbbb
andb
aam
int
fs
add
into
in
popf
and
cwtl
xchg
scas
testb
or
push
inc
arpl
enter
mov
mov
pop
andb
and
iret
jg
imul
shrl
das
lods
sub
sub
mov
out
sub
xchg
and
clc
xchg
sbb
mov
shll
add
inc
and
cld
xchg
jmp
leave
push
imul
fdivrp
xchg
sar
inc
pusha
loope
pop
fiadds
stos
push
hlt
das
fidivrl
inc
lret
dec
enter
pop
push
add
imul
xor
adc
push
xchg
aam
mulb
cs
push
ds
sub
fs
pop
mulb
jp
cmp
xchg
cwtl
mov
fdiv
mov
xlat
mov
stos
dec
daa
mov
sbb
fdiv
and
aaa
mov
or
xor
repz
scas
inc
adc
inc
mov
aaa
fcmovne
dec
add
lahf
add
loop
jne
mov
adc
popa
lods
int3
aas
mov
dec
jo
shlb
sub
xchg
push
fistpl
or
and
rcrl
add
inc
into
xor
sbb
ljmp
mov
cli
lahf
mov
cld
lret
and
mov
je
cmp
and
lret
or
pop
cmpsb
repz
mov
mov
xchg
push
cwtl
testl
pushf
icebp
orl
roll
jmp
pop
and
sti
push
shrb
mov
stos
test
add
daa
mov
rol
leave
push
and
pop
mov
out
add
daa
clc
push
mov
and
push
cmp
push
push
or
sbb
push
push
int
push
lahf
xchg
push
fstps
jmp
mov
int
shll
les
pop
or
movsb
out
inc
push
outsb
xor
sbb
add
je
into
gs
andl
lret
sbb
pushf
pop
dec
dec
cmp
in
popa
jbe
xchg
data16
mov
js
inc
xchg
repnz
dec
clc
fnstsw
pushf
sbb
push
inc
lds
pop
mov
xchg
xchg
add
push
or
pop
daa
mov
jge
inc
push
insb
jae
shll
jnp
add
sti
xor
cmc
mov
pusha
pop
lea
pop
out
pop
in
fistpl
mov
testb
inc
mov
dec
inc
adc
sti
cmp
cltd
sahf
shr
andl
mov
fidivs
mov
cmpsl
loop
fwait
xchg
pop
add
adc
adc
xchg
mov
push
and
test
andl
ret
loopne
repnz
aad
lcall
mov
test
stc
imul
add
inc
pop
cmpps
mov
or
js
push
dec
pop
cmp
mov
mov
xchg
test
xor
fldcw
outsb
mov
jp
or
jmp
out
cmc
adc
inc
pop
fnstenv
test
mov
inc
jns
scas
data16
pushf
mov
xor
push
popf
adcb
aam
mov
pop
ja
sub
movsb
repnz
pop
je
outsb
sti
or
mov
inc
popa
fcompl
cmp
rcrl
push
cs
mov
jge
loop
inc
inc
cmp
jmp
dec
loopne
or
repnz
flds
fiaddl
jp
call
ret
dec
or
or
or
mov
jb
out
pop
push
icebp
add
andb
outsl
daa
dec
fisttpl
sarb
mov
test
mov
xor
int
xchg
btc
shlb
fstpl
jmp
pop
inc
or
andb
scas
mov
stos
xchg
push
sub
fldt
pop
loope
out
xor
mov
ds
imul
clc
ret
and
jg
mov
jbe
pusha
fldcw
cmp
lcall
arpl
push
in
repnz
loope
ror
aas
outsb
ret
mov
insb
cli
ret
push
jge
adc
aad
rcrb
leave
mov
sbb
xor
cmp
push
repz
add
mov
and
imull
jecxz
mov
xor
or
mov
mov
fnstenv
jb
ds
in
test
es
scas
sbb
fdivs
xchg
push
outsb
fwait
dec
ja
adc
push
ds
push
decb
sub
subb
add
mov
fwait
shlb
pop
jmp
cmp
jg
hlt
lret
pop
mov
inc
stc
xor
jmp
dec
xchg
sbb
cmp
mov
in
sti
das
jp
jne
repnz
dec
xchg
stos
add
xchg
sub
movsb
data16
push
push
test
cmp
pop
loope
repnz
loop
xchg
sub
pop
je
stc
push
xchg
mov
rolb
add
push
ret
lret
sub
fwait
std
in
stc
mov
ret
adcb
and
push
xchg
pop
imulb
push
fxch
mov
fistpll
cmp
add
jecxz
aas
inc
pop
fstpl
ljmp
push
es
mov
or
mov
mov
ss
arpl
fcmovnb
sub
nop
loope
movsb
add
and
nop
cmp
pop
sub
or
fcomps
popa
cmp
sti
inc
jmp
and
sti
aad
arpl
sub
inc
add
into
mov
sub
mov
mov
cmpsb
icebp
dec
andb
cltd
mov
jle
push
adcb
fwait
ja
bound
fs
je
cli
andl
xor
imul
cld
nop
rcrl
std
dec
mov
sarl
je
pop
arpl
add
ucomiss
push
arpl
les
mov
pop
in
push
fstl
inc
popa
pop
xor
pop
out
push
scas
in
inc
xorl
jnp
and
addl
shrl
mov
stos
dec
icebp
pcmpeqw
adc
inc
mov
jnp
xlat
sbb
sbb
mov
jle
cmp
stc
sub
rcrl
adc
xor
mov
in
cltd
push
xchg
mov
push
jecxz
fbstp
xor
rclb
jp
mov
push
dec
jae
rcr
call
mov
dec
data16
dec
dec
ja
fisubs
or
xor
jnp
test
gs
movb
cmpsl
icebp
iret
cmpsb
hlt
movb
inc
lret
andb
mov
inc
in
int3
lret
mov
add
jo
add
out
push
xchg
xchg
pop
lahf
mov
lret
jge
push
mov
mov
cmp
incl
lods
push
push
loop
test
push
push
jnp
inc
inc
daa
xor
pusha
and
sarb
outsl
jo
dec
fstl
dec
out
add
je
mov
and
popa
js
pop
lcall
sbb
cmc
mov
push
out
in
ljmp
fstps
xor
push
xlat
push
mov
in
daa
dec
cmp
imul
orb
cmc
dec
mov
sti
lret
pop
mov
stc
cs
lods
dec
mov
shrl
je
fsub
dec
mov
xchg
mov
repnz
xor
flds
into
das
mov
out
ja
into
enter
sbb
mov
orb
aam
mov
mov
pop
xchg
or
mov
out
dec
xchg
sbb
vpsubb
sbb
ljmp
jno
pop
fildll
iret
mov
test
and
push
adc
shlb
jp
stos
mov
data16
mov
xor
inc
cmp
cmpsb
mov
mov
mov
addr16
fisttps
pop
jo
push
pop
les
mov
stos
mov
cli
rolb
mov
addb
ret
sahf
adc
fdivrs
or
negl
pop
and
pop
cmp
cmp
ret
lahf
dec
ret
aam
jl
shrb
rcrb
outsl
int
test
negb
mov
pop
das
add
addr16
addr16
iret
jl
loope
les
incb
loopne
add
das
push
daa
mov
mov
test
outsl
push
adcb
mov
fstpt
movsb
sahf
gs
pop
pop
outsb
aas
cmpsl
mov
clc
les
jg
dec
push
and
inc
push
mov
adc
sbb
inc
icebp
sub
and
pop
dec
push
mov
sub
adc
mov
nop
adcl
out
xor
loope
lahf
pushf
loope
jmp
jne
jno
das
and
push
clc
repnz
and
fimuls
xchg
loopw
jl
mov
add
xor
inc
lock
repz
dec
jp
dec
adc
adc
and
pop
pushf
ljmp
dec
jl
mov
and
test
add
xor
push
cmp
push
pop
cmpsb
mov
push
fld1
jb
ja
push
xor
or
or
mov
add
cli
xchg
jb
sbb
push
cli
xchg
scas
sbb
cmp
mov
pop
xor
adc
dec
dec
mov
pop
shrb
sbb
dec
inc
int
inc
lret
fcoms
mov
mov
push
ljmp
jno
add
pop
dec
mov
jge
mov
js
sbb
add
push
inc
fnstsw
outsl
pop
jmp
sub
aas
roll
in
add
dec
scas
xchg
lret
xchg
sbb
xor
jl
and
or
shlb
inc
filds
inc
pop
jae
aam
jne
lcall
dec
cmp
lcall
jb
mov
xchg
mov
test
cli
test
sub
outsb
adc
sbb
clc
adc
lret
stos
pop
pop
into
in
xchg
scas
stos
cmp
int
cld
xorb
aas
sbb
cmp
cmp
pop
add
or
fists
lods
jecxz
mov
mov
dec
fnstenv
xor
jb
dec
jecxz
shll
lods
mov
jp
push
ljmp
and
fucomip
out
fidivrs
out
iret
mov
add
aad
dec
xchg
xor
rolb
aaa
outsl
push
jae
push
lret
imul
lock
jg
cmpsl
pop
mov
pop
xchg
push
test
fimuls
sub
push
jle
push
lods
lock
out
imul
fwait
pop
xor
test
push
imul
inc
ret
pop
dec
jecxz
mov
push
and
scas
xor
mov
loopne
mov
test
inc
fldl
fisubrl
mov
fwait
mov
sub
cmpsl
sub
mov
dec
movsl
jae
data16
push
out
dec
push
add
adc
xor
ret
shll
mov
add
mov
ja
and
xchg
imul
lods
adc
jnp
outsb
pop
xlat
cs
xchg
icebp
jae
aad
add
sbb
mov
shrb
popa
xchg
je
fstps
fs
into
pop
jno
in
dec
fisttpll
popl
fwait
mov
inc
icebp
mov
in
pop
adc
fdivl
fisubrl
inc
adc
outsl
xor
popa
icebp
inc
popa
roll
cmpps
pop
mov
dec
fidivl
scas
sbb
loope
lods
cmp
add
popa
pop
popf
mov
jl
arpl
pop
add
outsl
xor
pop
notl
xchg
lds
stos
push
rorb
push
fiadds
and
push
mov
out
adc
fcoml
mov
mov
out
outsl
sti
sub
dec
scas
inc
addb
inc
mov
jge
out
out
dec
mov
sub
jmp
mov
cltd
add
insb
lahf
dec
jp
pop
insb
out
fists
in
xchg
push
mov
aad
mov
adc
out
jb
sbb
and
ds
inc
cmp
xchg
aas
adcb
mov
lds
outsl
inc
xor
cmp
sarb
pop
out
inc
pushf
cmpsb
cmp
test
dec
dec
sbbb
pop
pop
sub
sahf
fadd
and
stos
dec
movsb
sub
rorl
xchg
dec
adc
mov
test
ja
cmpsl
jnp
adc
pop
je
addr16
sarb
and
xchg
scas
aaa
xchg
cmp
xchg
popa
subl
outsl
mov
out
xor
test
test
xor
mov
sub
xor
lahf
icebp
pusha
notl
ret
xchg
push
pop
mov
nop
jle
pop
mov
sub
aaa
dec
fs
cli
lods
mov
outsb
xor
push
in
pop
dec
pop
or
stc
enter
daa
nop
jae
mov
in
ljmp
sub
aad
sarl
pop
mov
dec
daa
sub
sbb
xlat
outsb
cltd
add
pop
mov
cmc
mov
sbb
les
lahf
fdivl
or
scas
fisubrs
push
shrb
mov
orb
dec
dec
or
cmp
or
fistps
or
lods
std
adc
cmpsl
shlb
fldcw
pop
xor
insb
out
popa
sti
push
pop
fildl
cmc
xchg
popa
push
inc
mov
inc
adc
popa
push
xor
and
shrl
sub
ret
hlt
inc
adc
mov
fdivl
aad
xchg
or
mov
xchg
xor
or
in
loopne
lock
or
std
movsb
push
out
aad
dec
inc
pop
mov
aas
sub
inc
popf
popa
pop
dec
stos
ficoml
sbb
push
icebp
xor
xor
push
mov
dec
in
xorl
lods
xchg
out
lods
lods
int
imul
sub
dec
lods
inc
and
lahf
icebp
xchg
and
mov
jmp
lock
insl
addr16
dec
or
lcall
out
paddb
test
and
push
imul
push
aam
add
es
outsl
aam
iret
dec
idivb
iret
mov
ret
push
sub
add
xchg
pop
and
adc
nop
daa
in
testl
or
adc
test
cltd
std
clc
sahf
stos
pop
decl
std
notl
lods
sub
cmp
loope
and
push
inc
xchg
mov
in
fsts
aam
cmp
push
movsl
pop
lock
push
mov
aad
jnp
lret
nop
jmp
ret
adc
jecxz
lahf
adc
fwait
jno
negb
mov
fld
mov
shlb
mov
push
adc
popf
adc
mov
je
pop
mul
push
mov
cmc
push
or
inc
sbb
cmp
lret
cmc
sbb
addr16
cmp
sbb
dec
dec
mov
fcoml
pop
mov
scas
sarb
loopne
mov
jae
sub
out
mov
mull
nop
xor
xor
jmp
sub
push
sarl
adc
fs
test
push
mov
pushf
jne
mov
insl
lret
rolb
pop
or
loope
jne
fildll
pop
test
sub
outsl
mov
test
dec
gs
loope
mov
or
int3
fsubrs
lock
push
pop
sbb
cmp
mov
inc
or
mov
mov
jg
pop
icebp
int
imul
or
ss
adc
test
subb
or
mov
mov
shll
pushf
mov
push
xchg
aam
addr16
or
jmp
or
inc
mov
or
push
imul
andl
inc
sarb
push
inc
inc
xchg
dec
ss
inc
push
mov
mov
ljmp
sub
lcall
inc
scas
and
idivb
bound
rcrl
movsb
dec
in
sub
dec
rcrl
dec
mov
loope
imul
nop
clc
adc
lahf
in
dec
jmp
lock
aad
push
dec
out
lods
xchg
xor
adc
mov
leave
mov
shlb
add
lods
cld
clc
pop
scas
sub
lret
xchg
sbb
lret
push
mov
xchg
mov
ret
xchg
scas
push
rcrl
mov
push
dec
adc
inc
enter
sarl
test
dec
mov
jbe
mov
movsb
and
add
ja
push
ja
jo
mov
out
pop
fld
cmp
nop
fidivl
push
push
stc
and
mov
cwtl
daa
adc
fcomps
mov
mov
sbb
mov
sbb
call
rcrl
jo
mov
adc
xor
jns
inc
sbb
in
jl
mov
std
je
pop
add
incl
fwait
push
aas
cmpsb
inc
insl
pop
jecxz
test
adc
subl
mov
push
jmp
lret
mov
dec
in
mov
ja
xchg
mov
mov
push
dec
xchg
cmpsl
adc
lods
push
inc
mov
lahf
iret
ficompl
ret
pop
sub
pop
jmp
inc
fs
ret
mov
xchg
sti
add
mov
outsl
cmp
addr16
push
cmpsb
dec
inc
nop
iret
dec
dec
jecxz
out
pop
in
loopne
repnz
cld
adc
xor
fiaddl
push
mov
test
or
xchg
add
pop
das
ds
jns
inc
or
in
inc
movsb
or
repnz
ss
iret
cltd
pop
ret
lea
xchg
mov
lcall
sahf
and
add
mov
jmp
or
addr16
inc
ja
xchg
xchg
fcoml
push
testb
and
inc
push
shrl
and
imul
mov
lds
push
jle
lret
mov
xchg
out
cmp
mul
or
dec
mov
pop
cmp
xchg
out
jle
dec
adc
imul
cmp
push
insb
sub
xor
loope
ss
pop
sbb
pop
sbb
or
dec
jle
aad
dec
mov
mov
in
mov
cmp
sub
sbb
into
jl
outsb
and
adc
mov
es
xchg
jle
adc
inc
lret
insl
add
pop
inc
xlat
jnp
mov
shl
xor
js
cmp
inc
inc
fsub
mov
dec
mulb
imul
mov
arpl
fdivrs
or
scas
lods
loope
xchg
pop
loop
call
push
ret
jnp
mov
adcl
loope
int3
xchg
adc
ds
je
movsb
sub
fcoms
ja
jnp
dec
loopne
movsl
cld
test
es
push
jle
das
xchg
push
in
pop
pusha
orb
rol
inc
arpl
mov
loopne
test
fcoml
add
test
das
push
out
scas
add
outsb
jl
xchg
fdiv
mov
jmp
pop
inc
pop
in
sub
push
sub
loope
pop
sbb
gs
cmp
xchg
mulb
test
dec
or
movsl
insl
mov
push
mov
repnz
mov
sbb
mov
pop
movd
shrl
scas
xchg
dec
fcomp
or
fsubr
out
imul
jns
subl
mov
fwait
add
jb
xor
sbb
adc
lret
jl
mov
out
lds
inc
push
in
jbe
pop
add
and
push
test
movsl
scas
ret
inc
in
icebp
lods
jmp
dec
cltd
mov
out
stos
cmp
and
popf
inc
pop
test
fucompp
xchg
dec
jnp
push
pop
cmp
cmpsb
dec
inc
or
repz
fnstenv
popf
flds
mov
enter
jp
cltd
push
popf
add
xchg
test
pop
or
ds
xorb
imul
out
cmp
push
cmp
lds
and
test
cwtl
push
sahf
xor
dec
sar
cmp
fwait
mov
lds
jnp
and
notb
pop
cmpsl
xor
rcrb
push
jecxz
in
addr16
dec
mov
inc
dec
sub
fsubr
adc
mov
leave
lea
loop
mov
lea
xor
icebp
mov
jae
sub
or
cmpsl
dec
mov
push
inc
cmpsl
punpckhwd
test
or
adc
ja
cmc
push
push
outsl
add
pop
xchg
test
scas
fwait
ljmp
pop
xchg
cmp
inc
inc
enter
ret
xor
dec
cmpsb
or
cmc
test
ss
cmpb
stos
loopne
add
fadds
add
mov
cmpsl
cmp
outsl
mov
fnstenv
sbb
fs
mull
pop
loope
push
add
jns
cmp
xchg
pop
mov
add
sub
pop
mov
cltd
ljmp
repz
imul
xor
pop
and
repnz
xchg
push
push
sbb
adc
loopne
dec
jbe
hlt
cmpsb
jl
negb
sti
push
mov
or
sbb
xor
shrb
movsb
xchg
les
or
inc
imull
mov
inc
lret
mov
pushf
int3
jmp
pop
inc
enter
jae
xchg
xor
cmp
mov
ret
hlt
call
lahf
pop
out
jo
insl
pop
imul
pop
bound
lock
lahf
xor
loopne
es
lcall
pushf
loopne
or
pop
cmp
fwait
cs
out
pop
adc
mov
xchg
mov
icebp
inc
add
call
out
sti
sbb
inc
fbld
leave
setg
imul
mov
loop
sbb
mov
imul
outsb
mov
test
sar
push
ficoml
rorb
jmp
jg
mov
push
imul
mov
and
adc
inc
outsb
ds
mov
sbb
stos
cmp
dec
pop
sub
cmp
repnz
movsl
jns
sbb
stc
adc
leave
daa
ror
mov
cmp
mov
add
js
cmc
add
xchg
add
sbb
or
jbe
and
sbb
jne
push
in
scas
imul
stos
push
add
stc
dec
xor
ss
inc
out
cld
out
push
nop
bound
rol
fwait
mov
ficomps
sub
test
mov
jl
fwait
sbb
sub
dec
add
cwtl
cmp
or
pop
and
dec
xchg
scas
mov
into
lret
faddp
daa
loop
xor
jmp
jno
pop
cmp
shl
jbe
fmull
rcl
ds
test
imul
aad
out
dec
add
mov
dec
lret
and
ja
mov
mov
loopne
test
mov
cmpsb
lock
jns
call
sbb
popa
fmull
scas
pop
and
xchg
ljmp
xchg
fidivl
inc
mov
ds
sbb
pushf
push
pop
cltd
test
aaa
pop
insl
ss
daa
std
pusha
and
pushf
xor
lock
dec
mov
cwtl
popa
scas
inc
or
pushf
add
cmp
mov
in
jmp
fdivrs
das
mov
imul
inc
xchg
stos
shl
mov
adc
and
ss
xor
call
arpl
cmpsl
cmc
xchg
sub
fisttps
sarl
inc
and
cmc
mov
enter
add
sbb
sbb
cld
pop
pushf
dec
inc
xchg
clc
leave
dec
aaa
out
cmpsl
sub
jae
iret
fists
add
and
sahf
cmpsl
sub
fmuls
sti
scas
shr
xor
jge
sbb
pop
add
sbb
iret
jl
mov
add
sarb
add
aad
aad
dec
js
in
sub
hlt
cltd
mov
in
add
xchg
mov
xchg
loope
jae
jnp
or
cmp
daa
add
fcom
add
cmpb
dec
lahf
sbbb
cmp
inc
out
popa
pop
sbbb
xchg
sbb
adc
test
ja
xchg
jmp
mov
pop
movsl
mov
loopne
outsl
xor
sub
rorl
dec
mov
int3
sbb
sbb
test
sbb
test
dec
jp
shll
sbb
xlat
test
sbbb
pushf
fxch
in
cmpb
jns
gs
test
orl
xor
lock
fisttps
inc
bound
loop
test
das
mov
mov
fs
ror
sub
mov
popf
lock
in
push
subl
add
je
mov
scas
hlt
js
imul
pop
mov
cmp
int
sub
insl
iret
imul
mov
push
in
leave
dec
es
loope
jl
test
scas
out
dec
out
push
mov
mov
pop
pop
cmp
jnp
lods
ljmp
clc
xor
out
sti
push
shrl
or
ss
xor
jp
jns
dec
mov
fstl
xchg
mov
push
pop
add
inc
enter
test
lret
lcall
push
jnp
mov
mov
push
ret
adc
xor
inc
xchg
sbb
jle
push
cmpb
aad
inc
into
xchg
xchg
hlt
dec
fwait
scas
adc
gs
pop
mov
jecxz
repnz
cmpsb
scas
ds
stos
out
loop
repz
fwait
sub
ret
inc
mov
cltd
push
lea
movsl
cmpsl
fcoml
stos
mov
mov
repnz
cmp
sti
test
or
cmp
mov
into
icebp
jge
inc
mov
pop
repnz
pop
mov
push
add
mov
popa
jp
push
push
sti
or
push
bound
pop
scas
ficomps
mov
jo
in
inc
inc
dec
rcll
fwait
je
lret
mov
mov
push
xor
sub
sub
sub
pop
push
jp
mov
popf
push
sbb
ja
mov
pusha
mov
les
xlat
jmp
pop
and
jp
cmp
pushf
cmc
es
push
sub
pop
cmp
adc
leave
addb
sub
sbbb
lret
fiadds
sbb
mov
hlt
pop
sub
and
add
pop
or
repz
add
add
adc
mov
fisubrs
push
sub
push
je
jb
lods
mov
adc
ss
add
mov
or
sub
ss
cmp
mov
jle
cmp
leave
pusha
sbbb
or
jno
es
mov
xchg
jnp
adc
test
fnsave
push
sub
in
pop
stc
mov
mov
mov
adc
roll
out
aas
stc
pop
jno
cmp
mov
fiadds
mov
mov
cltd
jp
int
aas
ret
cltd
xor
sarl
aam
or
ds
and
pop
adc
push
push
pop
jmp
xchg
repnz
fistpll
fistl
lods
lds
or
stc
js
sbb
dec
subl
add
mov
mov
lods
xchg
push
or
push
test
adc
jo
lea
in
jnp
cs
push
inc
cli
fimull
loope
cmp
push
add
rcll
push
fdivrs
mov
stc
xchg
inc
mov
fcoml
push
jnp
rcrb
stos
aad
icebp
mov
mov
mov
or
sbb
mov
cltd
or
inc
shl
sub
in
sbb
push
movsl
cmp
and
mov
jnp
cmp
push
pushf
loopne
loope
xlat
sbb
aam
xchg
mov
mov
das
mov
pop
jno
lcall
adc
xchg
sti
and
inc
lahf
and
cmp
or
mov
push
ficoms
mov
or
test
mov
fstpt
dec
or
xchg
ds
xor
and
mov
pop
cmp
pop
pop
xchg
sub
stc
test
inc
fwait
xor
lcall
movsl
icebp
add
xlat
xor
dec
in
aad
jmp
cmp
test
mov
loope
test
hlt
pop
push
arpl
into
leave
in
or
aam
adc
sbb
enter
push
cli
jl
out
icebp
cmp
cmp
fiadds
lods
lahf
mov
and
mov
or
and
outsl
pop
push
push
push
add
mov
dec
adc
add
sbb
ficoml
out
scas
and
sbb
test
lds
adc
js
jg
es
mov
repnz
fwait
cmpb
jecxz
fmuls
leave
push
mov
inc
mov
mov
xor
out
mov
adc
dec
ss
push
push
aad
or
ret
out
insb
or
push
lock
es
ss
sub
adc
inc
addr16
ficoml
xchg
xor
mov
sub
xchg
icebp
xchg
dec
mov
mov
lds
ficoms
iret
mov
and
jbe
mov
hlt
test
cmpsb
jl
lock
aad
repz
imul
mov
rcll
pop
pop
xchg
jne
dec
ret
pop
cmpsb
push
mov
pop
gs
int3
ret
and
lret
inc
jbe
scas
sub
sarl
jmp
fwait
cmp
into
rcrl
sub
daa
xchg
xor
scas
daa
imul
sub
out
jmp
jmp
pop
jno
mov
jge
inc
cmp
hlt
xchg
xor
lret
sub
icebp
xor
cmp
lcall
jp
faddl
pop
mov
adcb
mov
jo
sub
sarl
ret
pop
sub
pop
cmp
sbb
xchg
test
movsl
cwtl
es
je
les
add
dec
call
iret
pushf
xchg
cltd
push
shll
xor
mov
jecxz
or
sti
enter
fs
mov
dec
out
ja
xor
into
insl
sahf
int
int
out
mov
out
cmpsl
popa
or
jl
mov
stos
cmp
cmp
pop
in
imul
test
sbb
hlt
or
dec
aas
mov
pop
mov
cmp
and
inc
icebp
xchg
cmpsb
ficoml
or
ja
mov
push
inc
out
pop
jmp
and
ret
sbb
outsb
test
pop
inc
movlps
pop
and
push
int
fwait
ljmp
jl
movsb
pop
and
fwait
mov
adc
in
call
mov
pop
nop
sbb
popf
cmp
stos
lods
mov
mov
pusha
imul
cmc
mov
push
mov
clc
ss
inc
mov
push
and
sub
jmp
ret
mov
and
cmpb
xor
ljmp
jg
shrb
inc
not
dec
mov
in
xor
mov
jo
dec
mov
fistpll
or
loopne
jmp
outsb
scas
xchg
sbb
pushf
cwtl
mov
loopne
flds
test
std
and
das
icebp
rcl
pop
test
mov
jbe
sbbl
dec
mov
pop
adc
mov
in
xchg
and
test
imul
cld
or
addr16
ret
mov
sbb
ljmp
adc
cmp
dec
mov
aas
add
shll
movsb
dec
and
orl
jnp
lock
mov
enter
mov
pusha
lret
push
mov
scas
push
cmpsb
cs
pop
testl
int
adc
sub
push
test
mov
stos
dec
mov
loopne
out
mov
inc
sti
xor
mov
cli
mov
fwait
js
push
inc
jmp
and
std
push
mov
aaa
ror
into
adc
jle
pop
mov
mulb
or
dec
sub
sbbb
push
and
and
hlt
inc
pop
ja
mov
mov
push
jge
xchg
pushf
stc
xchg
sbb
sarb
add
mov
jmp
adcb
jnp
or
cli
jns
push
test
cld
gs
out
stc
inc
add
sub
dec
andl
mov
jne
popf
leave
nop
sbb
movsb
cmp
cli
mov
mov
and
cmpsl
sbb
jns
push
and
mov
lds
inc
int3
outsl
jnp
ret
sub
in
clc
out
push
inc
or
shlb
mov
pushf
loope
jns
push
xchg
mov
dec
pop
inc
fsubrl
inc
pop
dec
mov
in
insl
inc
and
push
push
mov
pop
mov
jg
jae
cmp
in
jno
push
mov
push
sub
mov
xor
scas
das
mov
inc
js
movsl
cmp
sbb
fisubrs
ret
lret
jo
xchg
stos
stos
add
xlat
jo
cmp
xchg
sub
mov
push
movsl
sub
or
inc
into
enter
jmp
popa
fistl
jo
inc
movsb
aaa
stos
icebp
in
sbb
push
lret
dec
fisubrl
sbb
ffreep
pop
scas
mov
and
int3
xchg
das
cmpsb
cmpsb
shrb
dec
sub
stc
adc
inc
or
pop
sahf
popf
xor
and
dec
mov
pop
cmp
xor
push
jge
js
xor
push
rol
pusha
push
repnz
scas
jb
push
pop
out
lret
std
mov
fcmovbe
addr16
xchg
xor
out
test
or
inc
xchg
negb
push
popa
sub
rolb
lret
pop
inc
xlat
fidivrs
sbb
xor
scas
gs
and
add
pop
push
and
fsts
inc
push
sub
scas
scas
rol
xchg
das
out
icebp
and
pop
xchg
sub
add
cltd
mov
xchg
inc
add
leave
xor
repz
mov
pop
push
add
jle
hlt
mov
pop
sub
cmp
add
hlt
aam
xlat
icebp
jp
mov
sti
pop
sbb
xlat
inc
dec
xchg
sub
or
in
lahf
imul
sbb
out
rsqrtps
jmp
jp
cwtl
sub
cli
lods
lods
out
xchg
fcmovnu
mov
cld
pop
mov
mov
sub
loopne
sbb
mov
jo
insb
scas
ret
mov
gs
call
push
mov
pop
push
lret
testl
add
sub
mov
ds
bound
rolb
fldcw
aaa
sbb
out
and
mov
sbb
jle
xchg
inc
or
bnd
mov
stc
lahf
ja
sbb
popa
and
std
mov
xchg
cmp
dec
repz
fbstp
jbe
popf
jo
orb
inc
test
mov
pop
scas
xchg
and
int
cmp
fstpt
inc
pop
mov
dec
dec
cmpsb
ficoms
add
jl
cmp
jmp
pop
mov
iret
fnsave
jp,pt
or
adc
repnz
dec
not
mov
call
sub
mov
std
jo
arpl
adc
sbb
addl
or
sub
cld
stos
jecxz
add
mov
cli
xchg
xchg
mov
aam
sub
in
popa
cmp
movsb
cmpsl
push
inc
daa
mov
xor
or
js
stos
jp
cmp
xchg
dec
test
jns
sub
mov
or
jg
xchg
les
cmpsl
call
fwait
sti
cld
shlb
or
mov
imul
test
pop
sub
cmp
jg
sub
adc
cmp
xchg
mov
sub
mov
hlt
dec
xor
fldt
ss
data16
inc
and
dec
sahf
sub
sbb
push
add
insb
shrb
cltd
dec
adc
jnp
daa
mov
add
mov
or
dec
push
inc
cwtl
ret
add
mov
test
repnz
repz
leave
and
mov
inc
stos
stos
loop
sub
enter
cwtl
jae
or
jmp
jne
leave
lds
mov
xchg
pop
out
into
lahf
inc
xlat
inc
sbb
cmp
scas
shrb
dec
rcll
lcall
jge
cmpsb
mov
call
das
fxch
cmp
or
shll
mov
repnz
or
repnz
push
lds
nop
and
xor
and
push
gs
xchg
dec
clc
add
add
mov
mov
mov
pop
mov
xchg
jecxz
cli
pop
mov
jne
gs
bound
pop
in
jb
sbb
mov
in
xchg
sub
arpl
cmp
pop
xchg
adc
adcb
test
dec
push
mov
cmp
xor
fwait
jnp
cmp
test
mov
add
cmp
aad
mov
sahf
insb
sub
sbb
cmp
fstpl
aam
mov
mov
jecxz
pushf
addl
cmpsb
mov
mov
xchg
mov
push
jo
pop
addr16
fisubrl
pop
xchg
aaa
stos
or
in
pop
out
cmp
push
cld
cmp
adc
or
dec
mov
mov
fidivs
fwait
cmp
xchg
gs
adc
nop
inc
jmp
adc
das
xor
pusha
rcrl
mov
popa
sbb
add
mov
ljmp
and
aas
and
cmp
inc
cmp
push
out
repz
repz
lea
sub
add
lea
lret
nop
pop
nop
mov
jne
cmc
sbb
lods
popl
push
mov
lods
repnz
mov
add
cmp
imul
out
pop
iret
iret
xchg
xchg
cmpsl
imul
ljmp
sub
bound
lcall
and
sub
cli
lcall
das
test
movsb
pop
push
jg
jle
andl
mov
mov
inc
es
pop
mov
cmp
mov
hlt
mov
ficompl
and
test
or
sarl
mov
js
popf
cmpsl
dec
jmp
jg
push
rcl
cmp
push
inc
pop
push
lea
jae
jne
lods
popa
jnp
sti
fsubr
sbb
push
jo
pusha
xor
xchg
jae
mov
ret
dec
out
push
mov
mov
pop
testb
das
sahf
push
insb
add
xchg
sbb
mov
out
jns
pop
and
dec
cld
mov
clc
cld
jae
mov
addl
mov
jb
add
arpl
jecxz
sub
std
pop
jnp
sub
jb
or
mov
pop
in
sbb
pop
and
ljmp
icebp
pop
add
jg
int3
cmpsb
xorl
sub
cmp
jb
push
gs
xchg
push
inc
push
dec
ds
repnz
mov
test
sub
jl
std
lds
mov
repz
jnp
xor
add
mov
outsb
push
lret
addr16
repnz
push
add
cmp
push
xchg
adc
cmp
das
pop
mov
push
xor
call
cmp
dec
sub
das
pop
mov
sbb
outsl
aad
neg
enter
add
and
addl
outsl
sub
push
mov
cli
inc
and
adc
push
sub
out
push
or
pop
insb
push
inc
lds
mov
and
xor
outsl
js
jnp
xor
xchg
xchg
dec
cwtl
and
adc
mov
imul
xchg
add
adc
xor
mov
pushf
jb
and
out
lods
lock
fsubrp
into
arpl
inc
inc
push
data16
jle
inc
pushf
lea
das
mov
pop
mov
push
cmpsb
cmp
lds
mov
je
inc
sahf
mov
push
cmp
jne
mov
mov
inc
mov
jbe
inc
pop
imul
push
outsl
jge
sbb
fstps
sub
test
fxch
int3
mov
sti
dec
bound
xor
arpl
pop
test
jge
or
pop
dec
ds
fistpl
mov
adc
sbb
sub
fdivrl
or
sbbb
xchg
lods
icebp
sub
add
daa
rcll
std
sbb
inc
out
and
mov
in
inc
int3
gs
imul
or
xor
add
inc
std
ljmp
movsb
dec
push
ret
jae
repnz
sbb
outsl
int3
dec
dec
push
cmp
repz
mov
scas
icebp
mov
mov
sbb
scas
lahf
inc
mov
fwait
xchg
push
adc
xchg
jmp
fidivl
push
sbb
out
stc
mov
fistpll
iret
add
lcall
jmp
cmpsl
push
int
or
xor
dec
in
push
add
aad
pop
mov
dec
jecxz
mov
cwtl
or
xchg
mov
push
ds
add
arpl
sbb
stc
jg
imul
and
stos
push
mov
and
dec
dec
mov
mov
xor
sahf
cmpsb
imul
inc
int
xchg
arpl
mov
sub
iret
cmp
xor
sub
dec
sbb
mov
mov
mov
daa
dec
add
adc
scas
int3
xor
xchg
mov
jo
orb
fs
and
movsl
mov
fimull
cltd
flds
das
cli
test
lcall
std
dec
je
cmp
fxam
shr
cli
iret
and
leave
shll
loopne
fwait
add
lock
test
dec
sahf
or
aad
push
push
rolb
bound
outsb
imul
rcll
xchg
pop
stos
out
rcrl
cwtl
pop
repnz
lret
and
lcall
fwait
mov
pop
ret
and
xor
fwait
mov
push
popa
decl
cmp
xor
xchg
ljmp
push
push
sbb
mov
nop
in
dec
out
test
mov
and
inc
stc
push
mov
sbb
mov
push
ret
xor
jle
imul
mov
dec
mov
jnp
push
cwtl
inc
fiadds
and
out
jb
mov
push
xor
lcall
add
push
xchg
jmp
loope
add
cmp
sub
sahf
outsb
xor
dec
in
mov
sti
mov
jl
cltd
arpl
testl
cmpsl
repnz
int3
out
lcall
jo
mov
jne
add
mov
jg
scas
pusha
sub
gs
loope
sbb
fisubrs
push
or
mov
mov
xchg
sbb
jmp
notl
cmp
mov
or
add
call
push
je
adc
pop
push
jg
jne
in
mov
mov
inc
pusha
push
pusha
icebp
mov
xchg
mov
or
adc
js
mov
fs
dec
mov
into
mov
sub
into
xor
sti
xchg
cli
or
mov
pop
pop
testl
jge
add
les
mov
dec
mov
pop
in
rcrb
shr
xchg
dec
imul
orl
pop
sahf
pushl
cmovne
inc
xor
jmp
jne
cmp
push
mov
mov
sbb
xchg
jno
push
mov
mov
push
xlat
push
cmp
or
xlat
js
pop
clc
jnp
popf
insl
sbb
mov
xor
cmpsl
out
sub
orl
outsb
xlat
cmc
cmp
aaa
pop
dec
add
inc
out
sarl
pusha
jecxz
insb
adc
sub
mov
add
cmp
add
enter
or
in
arpl
repz
imul
sahf
add
inc
sbb
aaa
stos
movsb
mov
and
dec
imul
ds
jne
ret
daa
cld
xchg
sbb
xchg
enter
and
add
push
les
add
add
dec
das
mov
les
loope
int
dec
out
cli
lahf
test
mov
jne
xor
mov
jns
inc
add
jecxz
xlat
or
sub
pop
rcll
xchg
add
insl
clc
cltd
xor
cmpl
jle
fsubr
popf
pop
cmp
jl
jle
aas
sbb
push
daa
pop
mov
lea
jle
aad
mov
push
sub
subl
aas
push
add
test
dec
lds
stos
push
or
movsb
xchg
sub
lret
mov
jno
loopne
sub
test
loop
cmpsl
out
or
fisttpl
cs
lods
pop
addr16
adc
sub
push
repz
int
inc
call
adc
mov
pop
fcmovnb
jle
jg
pop
push
in
lods
mov
call
jnp
aas
aas
mov
sarb
jmp
loope
push
fwait
insl
cmc
sahf
xchg
mov
add
push
push
and
add
outsl
int
mov
cmc
xchg
jne
cmpl
xchg
in
popf
mov
or
enter
sbb
aam
fdivs
fnstsw
xor
test
pop
lds
inc
in
pop
push
icebp
pop
dec
dec
lahf
icebp
outsl
and
outsl
ljmp
adc
inc
clc
mov
adc
repz
nop
dec
adc
stos
add
cmp
stc
pusha
pop
mov
or
mov
or
jle
jmp
call
fcomi
movsb
scas
push
or
icebp
mov
or
lea
repnz
test
xchg
jle
inc
out
mov
and
iret
sbb
adc
repnz
and
shll
imul
xor
or
shrl
pop
add
es
or
adc
iret
push
jno
stos
aad
hlt
and
push
roll
int3
les
rcrl
fldt
rcrb
inc
jle
dec
add
cmpb
pop
pop
mov
fimuls
mov
jns
leave
push
addr16
cwtl
jge
test
xchg
int3
xor
add
cmp
imul
test
imul
lahf
out
mov
and
popf
add
jl
dec
pop
shl
leave
sub
clc
loop
push
pop
sbb
and
in
pop
das
mov
sub
pop
cs
pop
adc
bound
hlt
jbe
cmp
movsl
pop
into
cmp
das
or
mov
data16
mov
stos
dec
cmp
mov
add
inc
xor
push
repnz
xor
fimull
sub
inc
mov
and
addr16
fcoml
pop
push
insb
ja
jmp
out
je
pop
dec
inc
or
ds
pop
out
sbb
adc
lods
in
cmp
sub
jnp
sbb
aam
aaa
push
push
mov
adc
mov
adc
dec
mov
inc
mov
xchg
xchg
jb
jmp
sahf
test
mov
pop
sbb
mov
mov
aam
mov
repz
call
sti
enter
test
adcb
mov
arpl
lods
rcl
std
gs
les
cs
mov
jl
clc
xor
enter
cld
fyl2x
jmp
in
loope
mov
stc
scas
sbb
cmp
rcl
push
inc
mov
or
movsb
pop
cmpsb
sbb
aas
rcl
shll
es
fcoml
pop
dec
dec
pop
jl
cwtl
pop
xchg
jns
mov
repz
xchg
push
add
jl
add
or
xor
jbe
adc
push
or
pop
lods
push
push
lods
or
mov
xlat
pushf
enter
push
push
xor
push
push
fbld
sub
orb
jae
movsl
ret
rcr
scas
mov
incl
xchg
add
pop
sub
ss
in
lret
in
clc
lret
cmc
dec
mov
adc
xchg
push
push
add
fwait
lret
push
lds
sub
push
decl
dec
lea
adc
adc
jno
mov
xor
test
insl
add
push
and
sbb
push
dec
pop
leave
xchg
or
fbstp
sub
or
cmpsb
cmp
inc
aam
gs
mov
mov
fcoms
push
sbb
scas
cld
inc
push
and
add
into
xor
and
sbbl
sbb
cmp
push
inc
mov
mov
adc
xlat
cltd
fmuls
cwtl
loop
outsb
mov
add
shlb
pop
cltd
int3
lock
gs
loope
je
add
fisttpll
jne
and
and
fcmovnbe
add
cmc
sbb
hlt
mov
mov
adc
sbb
addr16
jg
xor
aam
mov
inc
jl
mov
dec
xchg
lods
jmp
add
or
in
mov
fsubrs
js
imul
loop
lret
mov
shll
xchg
jb
push
ffree
xor
jnp
repz
add
call
and
mov
cld
rcl
out
lret
dec
rcll
pop
sahf
jge
pop
std
mov
sbb
scas
cmp
xchg
mov
int
test
xchg
test
inc
outsl
inc
stos
mov
rcll
icebp
lahf
mov
mov
clc
or
scas
mov
sbbl
xor
pop
cmc
scas
adc
leave
sarb
ja
jmp
shl
adc
dec
pop
lods
fcoms
imul
popf
in
inc
sub
or
rolb
inc
imul
pusha
xlat
xchg
mov
xor
or
scas
ss
cmpsl
fistpl
sub
ds
call
shll
sub
adc
mov
dec
rcrl
adc
jmp
pop
mov
inc
cmpsb
lds
push
or
into
sub
add
xchg
hlt
inc
std
sbb
xor
push
mov
jae
add
or
sbb
jmp
pushf
push
data16
popa
lds
data16
push
je
fistps
dec
jmp
pop
sbb
and
mov
popa
cs
mov
sbb
test
or
add
mov
xchg
fadds
and
xor
aam
pop
dec
test
pop
dec
jnp
hlt
xchg
adc
mov
pop
add
mov
jbe
leave
push
fimull
mov
push
mov
jb
lea
lret
ret
inc
fdivr
push
mov
adc
ds
decb
pop
push
std
nop
leave
xor
in
pop
cli
in
xchg
dec
or
shrd
out
aam
loope
mov
das
sub
out
mov
fs
mov
subl
add
pop
and
leave
movsl
icebp
icebp
lods
pop
inc
pop
cmp
inc
jbe
and
shrl
popl
iret
stc
andl
push
xchg
xchg
jle
xchg
repz
jo
fwait
inc
mov
jmp
leave
in
xor
stos
repnz
push
dec
int3
mov
insl
out
inc
sub
sub
add
sbbb
out
test
lods
cmp
add
add
jo
xor
int
and
mov
xchg
lds
or
jbe
mov
pop
ljmp
in
add
das
or
addr16
pop
out
das
ljmp
imul
xchg
sbb
push
or
lcall
xchg
sbb
push
mov
adc
loopne
jmp
dec
or
jle
mov
pop
mov
test
mov
fldcw
test
jne
adc
jbe
xchg
divl
cmp
mov
sti
cmovno
push
jmp
dec
xor
fisubl
dec
mov
push
popa
sub
popa
cmpl
hlt
testl
dec
mov
inc
fstl
sub
int
dec
fs
or
jge
clc
mov
ljmp
aas
jns
mov
adc
push
push
fnstenv
outsb
push
xchg
std
cmc
mov
fdivr
in
xor
data16
aaa
out
dec
pop
subl
stos
test
jbe
stos
inc
rcr
jbe
push
lods
mov
pop
cmpsl
jp
or
movsb
mov
cmp
loope
out
push
in
inc
cld
mov
shlb
or
mov
sahf
sahf
call
js
mov
xchg
push
jae
push
popa
icebp
scas
gs
negl
rcrl
xchg
push
std
outsb
sbb
lods
cmp
xchg
cmpsb
inc
mov
push
int
cltd
push
adc
jbe
push
lds
xchg
aaa
push
pop
adc
sbb
mov
fists
add
jno
stos
mov
into
das
mov
jb
push
cmp
or
jns
sbb
into
dec
arpl
pop
scas
sbbl
sbb
lods
pop
and
insl
popf
outsl
imul
cmp
movsl
out
pop
ret
xor
enter
daa
inc
test
or
lds
mov
or
lahf
clc
out
mov
adc
int
xchg
movd
mov
pop
out
pcmpgtb
shl
sbb
xchg
enter
jmp
pop
xlat
lock
sub
mov
popf
add
vpaddsw
cltd
in
cltd
inc
out
test
sub
adc
cmpsl
pop
sahf
dec
mov
cmp
xor
and
cwtl
int3
and
pop
stos
lea
outsl
dec
leave
lods
mov
mov
mov
mov
test
pop
shll
pop
in
lods
sbb
push
xor
inc
mov
decl
js
cltd
call
mov
idiv
cmp
lret
ret
cmp
adc
push
les
flds
push
sar
mov
dec
push
fwait
outsb
adc
mov
dec
fsubrl
push
xor
test
fists
mov
rcrl
add
dec
pop
stos
stc
fisubl
test
lret
mov
int3
out
xchg
dec
gs
outsl
pusha
rol
outsb
sub
adc
jle
daa
xchg
orl
ficompl
lea
scas
push
inc
cmpb
insl
dec
adc
pop
pop
adc
outsb
insb
addb
jecxz
into
and
push
push
inc
arpl
test
popa
icebp
inc
leave
jo
cmpsb
and
sarb
fcmovb
jb
mov
cmp
fnstcw
test
jae
dec
dec
mov
jno
jne
movsb
lahf
push
rcll
jb
shr
lods
push
and
cmp
fldenv
sub
jmp
setge
ret
adc
in
in
call
or
gs
xor
push
movsb
fwait
mov
sub
jmp
cli
inc
aad
jne
imul
pushf
movsb
cld
stos
in
ss
pop
in
in
adc
outsb
inc
ret
sbb
cltd
mov
cmp
and
or
sub
jp
aaa
pop
mov
rorb
xchg
cmpsl
out
mov
cmpsb
inc
ljmp
mov
addr16
bnd
rol
pop
je
jg
mov
pop
and
fwait
je
jo,pn
es
push
xor
sbb
adc
mov
add
mov
lahf
popa
push
movb
cltd
pop
xchg
js
cmpl
jge
jg
insl
mov
pop
pop
or
pop
dec
lret
xor
mov
add
xchg
sub
jge
inc
mov
xlat
pop
bound
pop
outsb
movsb
jbe
outsb
mov
daa
push
arpl
es
pop
and
add
cmc
adc
push
cltd
cmp
bound
cmp
sbb
ret
hlt
adc
in
cltd
idiv
or
mov
sbb
imulb
movsl
jmp
mov
scas
xorl
andl
in
push
std
cmovo
sub
push
push
je
icebp
mov
ret
mov
adc
mov
fcomi
jae
clc
fsts
add
popa
jne
mov
stos
pcmpgtd
aam
mov
icebp
mov
imul
fnop
cmp
sub
push
in
jge,pt
or
or
rcll
repz
mov
imulb
popa
jl
imul
fldcw
negl
jl
ret
push
out
mov
sbb
je
inc
and
insl
add
shlb
les
mov
notl
test
int3
mov
push
pushf
or
daa
pop
xchg
sbb
mov
xchg
jl
aaa
mov
test
mov
mov
pop
xor
ret
int3
arpl
jbe
je
cmp
add
add
mov
jb
jge
cmp
jg
inc
shrb
add
cmp
fistl
icebp
mov
sbb
mov
popl
jl
jl
or
mov
jecxz
sub
jno
movb
int
xchg
inc
mov
sub
outsl
rcll
inc
inc
lock
insb
mov
insl
roll
rclb
push
add
repnz
scas
add
int
or
test
or
jns
mov
scas
xchg
test
pop
decb
add
xchg
xor
mov
ss
xor
lods
jbe
lods
ljmp
es
sub
aad
adc
sarl
lods
hlt
dec
xchg
rcrb
dec
add
sbb
sub
xchg
cmp
pushf
scas
add
call
cmp
adc
adc
cli
aaa
test
dec
mov
push
mov
loope
std
test
mov
jo
sbb
lret
orb
sub
jl
jecxz
or
mov
sbb
test
mov
iret
jle
lret
mov
stc
fwait
push
insb
sub
xlat
scas
shlb
loopne
pop
or
cmp
test
aas
and
mov
mov
adc
dec
in
add
jmp
fwait
std
lods
and
aaa
loope
mov
fmull
inc
push
sbb
adc
push
pushf
movsl
in
sub
movsb
repz
mov
lahf
xchg
sub
test
or
inc
scas
mov
les
xchg
loopne
fists
out
fisubrs
pop
and
dec
cmp
lret
sub
arpl
js
outsl
iret
decb
jo
xchg
leave
inc
scas
aaa
push
xor
jb
push
shll
inc
sub
insl
das
sbbl
lds
mov
pop
dec
mov
shl
enter
out
push
sbb
stc
nop
push
aaa
dec
iret
scas
subb
in
push
adc
cwtl
pop
sub
xchg
aaa
cmpsb
lret
outsl
test
push
mov
andl
sti
imul
aam
jmp
cmpsl
aad
fldenv
push
jne
out
in
sub
mov
test
mov
add
out
nop
imul
lret
aaa
repnz
in
pop
call
pop
icebp
in
nop
inc
jo
jecxz
jbe
or
or
cmc
adc
lds
xor
mov
lea
aad
shlb
pop
dec
mov
hlt
movsl
push
add
ret
cmp
pop
repnz
outsl
lcall
das
pop
xorl
lret
mov
add
scas
movsl
cmp
rcrl
add
sub
mov
jp
mov
push
scas
jg
loope
out
loop,pt
mov
imul
adc
mov
mov
ljmp
lcall
outsl
fisttpl
push
cmc
sub
inc
pop
ljmp
ljmp
popf
sbb
cltd
cli
xchg
imulb
int3
push
jns
dec
pop
lcall
dec
jo
aaa
ss
adc
imul
lcall
scas
jmp
and
ja
inc
dec
dec
inc
and
out
cwtl
cmp
leave
dec
movsl
push
mov
ret
or
mov
stos
lahf
pop
loope
ret
lods
nop
mov
outsb
inc
xlat
mov
push
jbe
imul
jle
push
sub
sti
pop
lods
aaa
inc
xchg
or
sar
jno
sub
arpl
leave
mov
push
mov
push
and
lahf
xchg
and
jnp
in
out
inc
or
jae
push
icebp
add
xrelease
xchg
loopne
lahf
ss
test
push
pop
adc
call
xor
xchg
cs
adc
inc
imul
in
push
ret
in
sub
pop
pop
jl
insl
cli
jg
leave
rcpps
jnp
add
push
insb
add
das
fucomp
test
inc
fwait
sti
inc
or
jp
outsb
adc
adc
lds
jmp
aad
sarl
ror
sbb
and
lret
xlat
xor
test
aas
loopne
aam
popa
cwtl
iret
xchg
xor
add
decb
or
movsl
mov
jge
push
xor
int3
int3
movsb
ljmp
add
push
fcompl
mov
jge
cli
pop
scas
aaa
or
in
pop
xor
xlat
mov
push
out
cwtl
imul
xchg
mov
cwtl
mov
mov
mov
and
in
fwait
mov
sub
cmp
jbe
movsb
sti
push
jle
std
adc
adc
add
stos
or
mov
adc
jge
test
enter
out
sarl
sbb
dec
fistps
insl
jne
lods
xchg
outsb
mov
cmp
xor
xchg
push
sbb
dec
pop
into
aam
push
test
xchg
xadd
and
insb
adc
dec
mov
fs
loopne
dec
push
sbb
pop
mov
mov
arpl
addr16
jae
cli
aas
in
mov
xchg
sub
push
sahf
int3
pop
cmpsl
leave
lds
or
mov
or
dec
int
push
fs
xchg
repz
mov
mov
das
push
repnz
lock
and
mov
nop
bound
sbb
jnp
jp
rcrb
aas
mov
sbb
fsubl
push
mov
imul
inc
xor
pop
js
push
inc
push
dec
or
lods
shlb
pop
mov
fnsave
lcall
cmp
sbb
leave
jae
lds
xchg
and
fsincos
and
lods
push
mov
insl
into
pushl
add
loope
mov
cmp
inc
iret
jno
shll
ror
mov
ret
cs
addr16
inc
lret
orb
and
or
sub
mov
jns
leave
popa
adc
xor
int3
stos
ret
mov
sbb
add
mov
mov
out
pop
stc
pop
cmp
xor
xchg
mov
xchg
dec
adc
popf
sbbl
mov
mov
lods
pop
pop
xchg
pop
in
jl
insl
jns
cmc
addb
or
cmp
mov
out
aam
push
cmp
std
test
cs
ficompl
sbb
sub
punpckhdq
xchg
cs
jle
dec
pop
adcl
push
les
fcoms
out
mov
shll
sbb
inc
push
loop
mov
mov
jle
add
dec
pop
xor
or
xor
lea
iret
outsl
daa
add
roll
jo
nop
lods
jecxz
adc
adc
cmpsl
jp
mov
out
sub
enter
ret
sbbl
in
xchg
jno
out
lret
mov
mov
adc
push
mulb
setne
test
lret
cld
add
clc
pop
sahf
test
in
push
cli
or
nop
adc
and
rcrb
cmp
dec
insb
sub
add
subb
cmp
fiaddl
nop
push
loop
mov
andb
push
stos
mov
xchg
ss
ret
add
lret
push
mov
mov
js
lods
inc
xor
push
inc
sub
add
ja
xchg
or
mov
inc
fimull
sub
push
lods
idivl
gs
add
sti
lods
inc
jge
mov
pop
mov
std
or
add
jl
bound
xchg
push
cmp
add
popf
idivl
and
pop
mov
xor
aam
lds
loopne
mov
mov
repz
int
jmp
adcb
inc
sub
xor
div
cmpsl
cmpsb
aaa
add
cmp
mov
into
shrl
pusha
out
or
popf
into
fbld
scas
push
ljmp
adc
add
xor
sbb
xchg
push
loop
fcomps
les
js
sbb
insl
loopne
shrl
cmpsb
ss
test
inc
test
cli
loope
rcll
pop
jg
or
jbe
pop
add
adc
mov
sbb
popf
into
pop
mov
out
jecxz
sahf
jno
dec
mov
lods
mov
popf
dec
pop
test
popa
inc
or
lods
fidivl
arpl
sti
sub
cmpsl
mov
nop
push
cmpsl
es
gs
sbb
lret
stos
pop
stos
in
aad
jno
ss
push
leave
mov
scas
aad
sub
movsb
mov
cltd
jp
mov
lods
push
add
pmaxsw
inc
xchg
mov
cld
add
es
xchg
mov
addr16
test
ds
sbb
sbb
fstpl
in
movsl
cmpb
icebp
xlat
pop
or
push
xlat
mov
xor
lahf
push
pop
dec
es
ljmp
mov
flds
pop
pop
jl
or
lahf
stc
loope
and
out
sbb
insb
mov
mov
ss
leave
and
cmpsb
inc
adc
add
inc
and
iret
push
cltd
xor
push
mov
inc
and
sbb
mov
xchg
sbb
enter
cmpsl
pop
addr16
loop
sub
and
dec
out
mov
xchg
scas
sbb
sub
jmp
daa
icebp
mov
cmpsl
andl
and
sbbl
mov
dec
push
inc
test
mov
push
andb
jb
icebp
enter
daa
dec
mov
and
popa
clc
pop
mov
cld
jnp
jo
push
aaa
xor
shlb
add
mov
call
dec
xchg
inc
mov
inc
pop
jbe
dec
inc
pop
adc
ss
aas
aad
stos
cli
enter
pop
lret
mov
or
add
cmp
push
imul
inc
jl
in
lods
add
inc
jmp
inc
and
insl
sub
mov
sub
std
popl
xchg
movsb
push
gs
insl
repnz
inc
or
inc
sub
push
ljmp
repz
ljmp
inc
mov
aad
mov
mov
pop
sbb
jg
mov
jg
adc
sbb
js
mov
xor
lock
out
sub
cmp
rolb
adc
aas
test
ljmp
sbb
cmp
mov
mov
or
into
gs
scas
orl
sbb
add
cmpsl
add
push
repz
addr16
cltd
adc
ret
sarb
xor
cwtl
rcr
nop
ss
in
mov
aad
and
orb
or
cmp
pop
adc
push
out
test
leave
and
adc
cmp
mov
dec
cmp
adc
push
mov
mov
rcll
stos
add
mov
mov
fisubrs
mov
loopne
add
cmp
mov
ljmp
dec
pop
lock
mov
push
inc
movsl
cld
mov
jl
inc
loope
cmpsb
shlb
mov
inc
adc
insb
add
enter
lahf
mov
mov
mov
in
cmc
cwtl
cmp
shlb
insl
dec
test
mov
ja
ljmp
mov
cmp
int3
lea
mov
clc
and
test
sahf
mov
test
xor
mov
loopne
nop
dec
or
pop
cmp
add
add
arpl
inc
mov
mov
lret
popf
mov
cmp
lods
xor
add
or
dec
xchg
cmp
jecxz
lret
jae
dec
inc
push
imul
loop
xchg
outsl
xor
lahf
fcmovnu
xchg
push
xor
fwait
jbe
shrb
adc
xchg
jp
ja
mov
fs
and
mov
hlt
or
mov
jp
aaa
into
ds
inc
mov
loope
add
or
or
sahf
enter
nop
xor
mov
lret
jle
lahf
xor
loopne
jp
adc
jmp
out
jmp
pop
sub
clc
sahf
xor
sahf
push
sarl
pop
pop
adc
rcll
push
dec
in
and
addl
out
ljmp
mov
mov
rcrl
mov
mov
sub
fstpl
pop
cmpsb
inc
fistl
and
adc
mov
mov
pop
sub
pop
jbe
ljmp
repz
bound
dec
fisttps
mov
mov
ret
cmp
adc
jne
out
pop
adc
xlat
inc
sahf
mov
jmp
inc
shl
xchg
test
inc
mov
mov
bswap
int3
loopne
xor
in
dec
lods
cmpsl
out
adc
add
pop
pop
dec
jo
adc
cmp
sbb
dec
fidivrs
cmp
xlat
jnp
stc
dec
sbb
imul
scas
popa
not
pop
dec
pusha
clc
jle
cmp
test
nop
aad
repnz
cs
sbb
jno
mov
clc
jo
adc
mov
mov
lret
sbb
push
fsub
pop
cmpsb
dec
dec
xor
pop
loopne
mov
bound
push
mov
add
xor
das
lret
bound
arpl
lahf
push
jmp
inc
dec
xchg
push
add
jmp
imull
insb
sahf
mov
fsub
pop
sti
out
daa
sbb
rcrb
out
divl
or
jmp
cli
fcomi
lahf
xor
lcall
pop
cmp
addb
xchg
insl
add
fwait
jne
dec
sahf
mov
movb
int
cmp
in
loop
mov
xor
mov
lock
mov
mov
and
mov
xchg
test
or
lock
sub
movsb
sbb
into
jl
outsl
and
hlt
flds
rcl
pop
adc
jb
cli
or
push
scas
push
mov
test
jbe
fwait
and
cmp
stos
sarl
mov
sbb
loopne
jge
sbb
jp
jg
ret
js
pop
data16
adc
lahf
das
cmc
jg
sub
add
lds
sub
ret
hlt
push
lods
xorb
or
enter
and
pop
sbb
pop
jnp
mov
push
jg
repz
push
sub
xchg
push
fsubs
xor
ficoms
addr16
cmpsl
popf
xchg
mov
movsb
inc
divl
popf
sub
fcoml
push
clc
dec
call
jmp
xor
sti
or
leave
std
jmp
pop
out
jae
fiaddl
adc
push
std
mov
pop
sahf
scas
popl
orb
jnp
insl
outsl
cmp
pop
jnp
out
in
mov
xor
shrl
mov
outsl
mov
xchg
lods
add
mov
loop
adc
xchg
dec
out
test
xlat
add
sub
mov
cmpsb
jno
add
xor
or
inc
jp
cmp
data16
cmp
dec
adc
lock
mov
jmp
movsl
setbe
cs
aam
or
sahf
addr16
inc
or
and
outsl
shl
int
and
loope
imul
mov
mov
jo
add
les
popa
stos
into
repnz
daa
xchg
fidivrs
jp
mov
mov
sbb
aad
clc
daa
fxch
fidivs
stc
scas
xchg
xor
jg
pop
xlat
lahf
mov
dec
test
daa
xchg
cmp
psrld
shr
dec
dec
ja
xchg
pop
mov
push
nop
daa
jno
repz
into
ret
jns
jae
int3
cmpsl
std
jg
mov
mov
lret
push
mov
inc
sub
fcomps
jle
shrl
ficomps
xlat
sub
adc
dec
dec
sbb
paddsb
in
fdivl
and
jle
into
adc
jge
pop
pop
pop
push
out
pusha
jecxz
sbb
mov
jg
pusha
or
mov
imul
xor
adcl
sub
sbb
jae
xor
xor
lock
scas
mov
or
rol
inc
outsl
mov
xchg
imul
jp
pshufw
shl
xchg
lds
insb
andb
adc
fiaddl
mov
add
jp
test
jb
push
popa
xchg
pop
mov
nop
sbb
mov
jmp
fbld
out
mov
out
scas
pusha
imul
sub
adc
sub
rcll
je
repnz
lret
fistl
mov
sub
pop
mov
pushf
cmp
lret
push
rcrl
jo
mov
cmpsl
nop
pop
rclb
mov
mov
ja
and
inc
out
dec
mov
add
daa
iret
cwtl
add
cli
jns
xor
adc
nop
push
mov
punpcklwd
nop
mov
shl
repnz
inc
add
stc
or
jl
pushf
mov
or
or
inc
aas
data16
mov
push
pop
std
and
cs
test
orl
fmull
mov
mov
test
pop
jns
fisttpll
cs
or
loopne
out
lds
lds
popa
rorl
rcl
pop
sub
stc
test
ret
pop
lds
call
or
mov
xchg
test
js
data16
mov
ja
pop
mov
mov
sbb
mov
add
das
in
loop
inc
fs
adc
ss
addr16
mov
or
iret
adc
ss
fstpl
iret
test
fmull
mov
pop
sahf
add
mov
push
push
xlat
fucomip
addr16
fldz
addb
push
cld
lcall
push
lcall
roll
push
test
cmp
negl
sarl
xor
imul
stc
xor
inc
push
sbb
ret
ret
out
ds
lahf
pushf
cwtl
cmpb
outsl
push
inc
or
fsubr
addr16
inc
cmc
adc
aaa
cmp
xchg
in
pop
jle
orb
pop
mov
movsb
or
cwtl
pusha
and
scas
push
sub
sbb
jnp
stos
push
adc
push
mov
sbb
xor
add
outsb
mov
push
es
ds
imul
movsb
dec
pop
repnz
pop
ret
jns
adc
and
jg
push
bound
add
xchg
adc
and
arpl
pop
push
xorb
daa
cmp
insl
mov
mov
mov
xchg
add
ret
and
sti
add
repnz
std
adc
mull
mov
push
idivl
sub
push
js
test
xchg
repz
pcmpgtd
push
fisubs
push
fstp
lret
push
push
mov
push
cltd
push
dec
add
rcrl
cmpb
lahf
mov
adc
rcrb
sahf
pop
jmp
sub
subb
insl
and
pop
mov
xchg
dec
rcll
jecxz
mov
sub
xchg
insl
mov
mov
mov
jmp
xchg
pop
sub
pop
outsb
mov
adc
cld
jl
add
and
scas
loop
sbb
loope
stc
scas
cmp
test
or
movsb
add
int
movsl
jl
push
jns
jne
add
test
or
dec
mov
and
jl
pop
subl
sbb
dec
sti
fimull
push
add
push
outsb
jno
add
pusha
and
cmpl
test
pop
lahf
cs
jecxz
call
or
pop
cld
and
push
push
movsl
mov
mov
lods
rorl
mov
push
das
inc
lea
jecxz
push
ds
add
adc
mov
cld
das
adc
adc
adc
and
fwait
xor
test
ds
movsl
cmp
aaa
test
and
mov
test
pop
dec
lahf
outsl
push
add
dec
out
pop
jmp
test
push
scas
or
or
mov
ret
int
adc
mov
mov
cmpsb
sbb
pop
pop
dec
fbld
fdivs
and
clc
addr16
push
add
clc
sbb
jne
gs
jae
push
or
dec
je
push
inc
out
or
inc
push
testl
sub
fwait
lret
aaa
xchg
daa
in
movsl
daa
cwtl
xchg
mov
popf
jo
xlat
scas
sub
cmp
jg
sub
mov
aad
mov
dec
push
xor
and
xor
xor
ret
shr
lods
add
pop
xor
mov
cmpsl
mov
dec
arpl
mov
jg
loop
ret
sbbl
add
clc
iret
push
sbb
push
dec
ss
ljmp
idiv
je
sub
add
lods
inc
xor
bound
test
sbbb
in
ds
cmp
inc
insb
dec
lds
add
rcll
xor
pop
xor
xchg
xor
pop
ds
aaa
adc
mov
dec
and
sti
dec
jge
xchg
inc
insl
adcb
xchg
subb
imul
and
imul
inc
cld
leave
dec
mov
sub
decl
xor
das
insb
mov
mov
inc
subl
push
sbb
mov
lods
out
push
xchg
dec
sbb
xor
outsb
popf
fsub
or
fiadds
enter
std
cmpsb
or
sbb
xor
jecxz
xchg
lock
and
and
sbb
or
pusha
ss
cli
rorl
es
fs
hlt
fsubrs
insl
iret
sbb
int3
movl
jne
mov
enter
cmc
add
pop
mov
mov
mov
out
daa
xchg
fimull
or
arpl
ror
xor
shrl
shrl
mov
add
pop
xor
es
loope
cwtl
add
adc
aaa
jns
ss
hlt
pop
push
dec
xchg
stos
adc
mov
mov
inc
pop
sub
sbb
jbe
ds
lock
mov
aad
xor
jge,pt
test
popa
int3
jno,pn
fbld
movsl
sar
jno
dec
and
shrl
divb
outsb
into
mov
imul
inc
fsubrs
test
cmp
les
cmp
dec
dec
shl
cmpsl
jb
push
mov
scas
rcll
add
ss
int3
push
cs
add
sub
mov
imul
shlb
mov
mov
push
add
add
or
imul
hlt
test
arpl
hlt
mov
cmp
aas
push
shl
mov
pop
das
inc
xchg
outsb
cmp
lahf
stos
mov
cmp
gs
mov
jmp
cmp
outsb
nop
push
ja
pop
add
dec
xor
icebp
sub
loop
lods
jmp
orb
pop
or
dec
pop
iret
jno
jge
or
xchg
cld
fwait
cmc
jp
adc
push
adc
pop
insb
popf
xchg
pop
push
mov
cmc
enter
sahf
inc
sbb
jecxz
gs
mov
inc
push
inc
fldln2
push
mov
adc
xlat
adc
data16
addr16
inc
push
sbb
loop
jl
inc
jo
cld
jo
adc
lods
mov
cmp
into
dec
repz
mov
push
in
daa
pop
mov
ret
xor
in
hlt
aam
mov
sub
xchg
lds
jge
sbb
fiaddl
mov
mov
push
fsqrt
pop
push
dec
push
adc
fiadds
mov
cmc
dec
push
aas
test
call
dec
mov
inc
les
jl
inc
ja
fcoms
and
arpl
lods
or
push
or
into
loopne
idivb
rolb
jecxz
pop
xchg
addr16
cmpb
mov
push
loopne
test
or
push
in
add
inc
repnz
in
daa
inc
mov
test
hlt
mov
ljmp
inc
out
jbe
rol
xor
adc
add
aam
mov
bnd
lock
scas
mov
cs
adc
rorl
add
aaa
jmp
add
shl
add
jl
xchg
repz
xchg
jno
jge
pop
scas
sub
inc
shrb
cs
lea
sub
xor
cmp
sbb
or
cmc
mov
jg
cld
and
sti
xor
sti
icebp
outsl
push
add
inc
push
pop
pop
inc
test
dec
popa
or
fiadds
test
push
cwtl
shl
fidivrl
dec
iret
sbb
call
push
movsl
cld
int3
pop
loope
scas
mov
cltd
stos
enter
dec
or
imul
in
adcb
or
mov
in
adc
jbe
arpl
dec
lahf
jbe
cmp
lock
clc
push
mov
lods
frstor
fildl
aam
sub
mov
ja
mov
inc
stos
lock
xor
adc
mov
add
jge
ret
pop
daa
push
sub
lcall
xor
mov
sti
sarb
adcl
cmc
dec
sbb
push
shr
out
mov
mov
loope
xchg
inc
cmp
insb
jle
mov
adc
rcrl
pop
add
pop
pop
and
pop
jp
mov
lret
addr16
and
fiadds
and
fistps
popa
inc
popf
es
ds
ror
and
arpl
push
iret
or
push
cmc
pop
insl
dec
mov
fisubs
xorb
add
rcrb
or
arpl
xor
jo
jnp
push
dec
jecxz
hlt
mov
push
pop
out
add
mov
lret
lcall
jecxz
and
les
lret
jge
pop
les
outsb
jl
lds
cmpsb
push
and
pop
scas
adc
call
push
icebp
insb
mov
leave
mov
inc
inc
inc
popf
lea
cmp
sub
mov
add
and
push
dec
lods
push
pop
fistpl
xor
js
in
mov
fsubs
sbb
fmuls
iret
int3
mov
push
jmp
mov
cltd
or
sub
stos
and
in
and
or
aaa
add
clc
inc
sbb
cmp
add
sbb
testl
dec
dec
sub
or
cmp
jb
xor
mov
cltd
mov
out
aam
jle
push
jge
push
push
xlat
stc
das
or
pusha
push
popf
adc
lods
call
insl
outsl
xor
repnz
mov
mov
push
lods
pop
or
scas
xchg
push
ficoms
inc
mov
mov
sbb
add
dec
fnsave
icebp
adc
sbb
stc
aam
add
bswap
mov
cmp
popa
mov
push
cmp
out
or
pop
adc
cmpsl
stos
cmp
xor
mov
scas
popa
ficompl
aam
loop
mov
push
inc
inc
ss
xchg
jmp
lock
scas
jb
jns
cmp
out
dec
push
push
inc
sbb
std
lods
enter
es
out
add
sub
lock
cli
cmp
dec
and
sub
sahf
imul
aam
xor
fdivrl
test
fbld
leave
es
test
inc
xchg
data16
sbb
cmp
adc
xor
inc
and
and
shl
adc
mov
add
push
decb
lahf
sub
sbb
gs
loopne
bound
dec
jmp
outsb
push
lret
aam
jge
push
movsb
dec
mov
add
call
stos
aad
jne
movsb
scas
adc
push
scas
push
pop
sti
pop
sub
inc
xlat
in
dec
xchg
shl
xor
cmp
fisubl
push
mov
jge
es
imul
lret
jbe
push
test
jns
cmpb
lret
mov
jl
sub
adc
push
rcrl
pop
jp
lea
mov
js
shlb
shlb
lret
pop
xor
mov
out
mov
lret
inc
pop
out
lea
mov
icebp
or
repnz
test
out
sub
add
push
sub
js
test
jmp
ljmp
cs
cmp
push
or
adc
add
xor
sbb
cmpsb
dec
sbbl
andb
jno
xchg
sbb
cld
iret
dec
or
or
jmp
movsl
xchg
rol
push
in
or
jne
das
ret
sbb
imul
pushf
lret
decl
movsb
js
push
xchg
sub
sahf
stc
sbb
addl
test
jg
daa
sub
and
jno
jl
jp
adc
imul
cmp
jo
sub
xor
test
add
stos
cmp
fsqrt
popf
mov
jbe
sub
mov
mov
xchg
jge
pop
testb
stos
mov
in
jg
xor
hlt
push
jno
sbb
sbb
icebp
mov
stos
aaa
xor
insb
mov
shlb
shl
inc
push
repz
test
sbb
fwait
jmp
push
and
cmp
mov
sahf
hlt
jmp
cmp
and
sbb
movsb
out
test
sbb
fldt
out
pusha
test
mov
jnp
loopne
adc
mov
cwtl
test
fs
jbe
into
xchg
fs
test
movsb
inc
push
push
xlat
data16
cmp
jge
hlt
adc
outsb
cli
rclb
fcmove
sub
sub
jbe
or
cs
sub
jb
jge
out
daa
movsb
cmp
sti
ja
fwait
in
pop
leave
pushf
lds
hlt
fisubrs
jb
sbb
sbb
and
loope
scas
call
lock
ja
lock
mov
push
add
in
pop
fs
lret
jge
mov
sub
mov
dec
pusha
add
lds
inc
shl
ljmp
das
push
bound
push
push
lock
xor
in
dec
hlt
mov
outsl
pushf
cmp
adc
pop
in
aaa
push
cmp
mov
sub
leave
or
sahf
xor
rcr
sub
jecxz
sub
in
xchg
mov
lds
jmp
les
push
negl
mov
inc
fs
pusha
mov
adc
aas
scas
aaa
insb
out
push
cmp
push
nop
mov
mov
test
sub
pop
xchg
add
and
or
cmpsb
cmpsb
pop
jo
jb
adc
sub
push
inc
xchg
or
int
push
xchg
push
test
jb
neg
or
fidivl
sti
pop
dec
fcoml
inc
pop
fsubs
mov
pushf
arpl
incl
xchg
mov
mov
push
rcrb
sub
gs
push
and
xchg
fisttpl
and
lods
les
clc
sub
ja
jmp
pop
xchg
insl
test
and
dec
fcoml
stos
rcl
xor
sub
inc
jb
orb
push
xchg
test
and
pop
mov
dec
pop
push
ljmp
call
mov
push
lds
ficomps
add
sub
mov
cltd
lods
xor
cmpsb
mov
int3
and
jg
int3
and
orb
or
xor
sbb
add
testb
or
or
lret
lods
mov
inc
xlat
divl
sub
cmpsl
add
outsb
popf
jbe
movsb
cmpsl
mov
sub
and
movl
js
mov
jge
xchg
call
or
pop
push
push
mov
jae
ja
fisubrs
aaa
xor
subl
leave
rcl
mov
loop
call
mov
movsl
das
xchg
test
testb
movsl
mov
dec
push
mov
out
inc
sahf
decl
pop
or
xchg
mov
lea
xor
and
xchg
sbb
sbb
sbb
fisubrl
cltd
idivb
push
pop
cmc
mov
jo
mov
adc
push
push
out
lret
xor
cmpsl
or
dec
mov
xor
sbb
roll
dec
add
lret
mov
or
cmpsb
xor
xlat
lea
or
mov
push
call
mov
push
mov
dec
sahf
jb
imul
pop
loope
test
incb
mov
sbb
pop
dec
add
mov
jnp
sbb
and
pushf
sub
dec
cmp
push
push
in
loop
cmp
out
je
push
and
xchg
cmpsl
pop
xlat
outsb
or
je
sbb
mov
mov
add
and
cmp
ljmp
mov
cld
stos
mov
mov
sbb
jmp
cmp
test
dec
and
rcr
dec
dec
imul
inc
push
or
push
cmp
clc
aas
dec
pop
dec
sbb
lods
cmp
pushf
js
mov
inc
push
imul
faddl
dec
mov
jno
mov
packsswb
fwait
adc
pop
xor
js
cld
ss
xor
test
jecxz
es
dec
mov
mov
ret
adc
shll
sbb
cmpsb
adc
mov
jge
psrlq
incl
shl
test
mov
mov
insb
sbbl
xor
aas
movsb
dec
sub
xlat
fwait
test
cmp
cltd
fistpl
or
sbb
pushf
dec
push
out
mov
es
movsl
lods
cmpsl
xchg
mov
daa
hlt
outsb
add
ljmp
pushf
sbb
xorl
xor
pop
lret
icebp
or
fsubr
mov
fidivl
shll
inc
cli
repnz
test
mov
and
inc
fldl
leave
cld
add
sub
pushl
pop
sub
dec
add
xor
sub
enter
sub
addl
xor
xchg
xlat
fcom
lds
jmp
aaa
lcall
push
popf
sub
mov
jne
loopne
lcall
mov
daa
mov
push
divl
xor
fcomip
dec
adc
mov
xchg
adc
or
xchg
bound
ljmp
add
push
and
xchg
lods
insb
or
dec
in
insl
mov
mov
jg
mov
scas
xchg
stos
faddl
icebp
dec
je
and
sbb
test
add
xlat
push
or
sub
inc
sahf
jb
out
jp
int
jnp
inc
mov
jmp
or
jne
sbb
inc
call
rorb
movsb
decb
mov
pop
pusha
xchg
push
adc
cld
aam
lcall
mov
dec
inc
cmp
in
dec
int3
fmull
inc
inc
push
jmp
pop
fiadds
dec
mov
push
outsl
inc
lock
pop
rcrb
mov
lds
mov
mov
push
rclb
push
push
xor
out
cmp
pushf
add
sbb
lret
push
xor
or
or
in
or
jae
xchg
stos
in
push
sub
mov
loopne
jo
mov
dec
sbb
xchg
cmpsl
sbb
mov
jmp
dec
pop
aam
mov
arpl
sti
packsswb
push
xor
xlat
push
fwait
push
inc
sub
jno
std
aam
xchg
not
inc
push
sub
in
mov
fsubrl
ret
xor
xor
daa
jl
aam
jge
lret
jmp
mov
sub
aas
xor
jns
push
or
jne
jp
xchg
push
dec
mov
out
fs
dec
push
push
inc
data16
dec
loope
ljmp
dec
lods
xchg
mov
das
adc
push
push
iret
and
call
xchg
dec
fs
lea
and
sarl
xor
inc
xchg
fidivrs
les
jbe
dec
aaa
pop
xchg
mov
hlt
push
dec
adc
xchg
lods
sahf
fbld
stc
or
mov
pusha
dec
dec
push
cmpsb
mov
sub
adc
pop
mov
dec
add
scas
or
fmull
fdivp
pop
pop
fstl
mov
aaa
mov
cmp
sbb
pop
int
iret
push
shll
jg
cmp
clc
push
add
or
mov
in
jb
jbe
ficompl
jne
dec
and
xchg
adcl
loopne
loop
je
adc
sti
imul
shll
push
inc
bound
clc
xchg
call
mov
xor
pop
add
mov
fcomps
dec
mov
in
cmc
scas
testl
sti
ljmp
dec
mov
sti
loope
sbb
fnsave
jle
xor
sub
mov
xlat
cmp
xchg
jp
stos
jmp
scas
sub
out
sti
push
lret
jmp
adc
dec
push
pusha
cmc
dec
pop
in
out
mov
sbb
push
jno
and
repnz
arpl
xchg
iret
ret
ds
bound
jg
jmp
sbbl
jnp
sbb
sub
rcrl
xor
outsb
sbb
xchg
outsb
sub
test
adc
icebp
enter
stc
shr
push
lods
or
cvttps2pi
sub
idiv
push
mov
jae
movsl
lods
sub
dec
hlt
cmp
push
les
aaa
fnstsw
out
mov
test
push
fcomps
sub
repz
mov
dec
and
fiadds
fwait
and
scas
mov
and
cmp
jnp
jp
aas
inc
jbe
push
mov
in
xor
inc
mov
das
pop
enter
popa
mov
lret
movsb
aad
or
inc
jne
mov
call
test
adc
das
xor
shrl
push
scas
testb
sub
pop
rcr
je
cmp
jbe
adc
mov
push
xor
data16
cmp
adc
jecxz
xor
movsb
cmp
in
or
mov
stos
insl
je
pop
inc
movsb
cmp
in
sahf
div
movsb
cmp
jns
mov
jg
mov
ret
loop
jne
sbb
leave
enter
mov
imul
daa
shlb
aas
test
lret
sti
or
jbe
int3
jnp
ret
push
dec
mov
jno
imul
inc
xchg
ret
mov
mov
pop
imul
fnsave
push
xchg
push
sub
jg
js
bound
mov
adc
xor
mov
pop
in
jge
fbld
cmp
dec
mov
mov
pusha
rolb
pop
lret
mov
jns
cli
xor
cmp
out
xchg
push
lret
xor
out
and
icebp
js
loopne
das
inc
popa
popa
je
inc
cmpsb
bnd
scas
mov
test
cld
sub
stc
pop
mov
dec
sbb
iret
movsb
insb
jo
bound
aam
jne
or
hlt
push
test
rcrl
pop
adc
dec
es
addr16
into
jne
std
out
data16
aam
out
ds
mov
push
scas
nop
mov
push
jnp
mov
inc
fdivrl
mov
js
push
xor
decl
sahf
add
in
push
fnstsw
xchg
mov
jns
loop
adc
stc
add
fsubrl
inc
sbb
or
xchg
add
xor
push
inc
mov
popa
mov
mov
enter
insb
into
sbb
and
cmpsb
lock
cmp
shrb
inc
pop
cmp
addl
outsb
push
push
loope
cmp
loopne
lock
jl
sbb
pop
sbb
adc
sbb
test
inc
and
push
mov
mov
iret
cmpsb
and
inc
pop
jae
mov
stos
xor
pop
sub
mov
jne
jae
testb
inc
in
test
mov
fldl
out
xchg
lods
inc
cmp
mov
out
mov
push
orb
iret
xor
cmp
and
lods
adc
aad
lods
add
repz
mov
imul
movsl
je
in
movsl
popf
cmc
popa
shlb
ss
test
sti
sbb
push
loopne
inc
add
movsl
or
insl
mov
pusha
lock
loopne
mov
imul
aam
inc
xchg
out
cmpsl
inc
cmpb
adc
ja
fcmove
jne
in
sti
xchg
ja
push
addr16
cli
mov
push
inc
popf
adc
popf
cld
clc
push
and
dec
pop
push
sbb
pop
addb
pop
jo
lret
lock
mov
cmp
sbb
cwtl
pop
popa
clc
mov
adc
adc
popa
xorl
pop
inc
cmp
xchg
arpl
sub
mov
jl
les
sbb
sub
xlat
scas
out
mov
lahf
test
pop
xor
ljmp
ficoms
add
imul
adcb
mov
ja
cmp
cmp
cmpsl
add
add
ljmp
cli
ja
outsb
ret
shrb
or
cmp
loop,pt
imul
mov
lea
push
sahf
pop
mov
lods
loope
pop
inc
xchg
add
jns
xor
sbb
mov
cli
cmp
out
out
aaa
push
rorl
and
xchg
cmp
dec
cmpsb
test
fsubrl
pop
loopne
out
std
mov
ret
cld
out
fstps
sahf
dec
or
shrb
inc
push
jle
or
push
fsubr
mov
push
jo
out
lahf
and
xchg
cli
rcr
in
jg
ljmp
adc
ss
scas
or
fnsave
mov
pop
sbb
adc
jnp
in
movsl
out
mov
or
xchg
xor
leave
xchg
fs
sbbl
out
daa
lahf
mov
movq
xchg
daa
negb
mov
movsb
add
xchg
ss
aam
cmp
mov
int
mov
outsb
jecxz
push
pop
cmpsl
ds
add
sbbb
jmp
xor
popa
out
jb
loopne
test
add
fistpll
xchg
adc
xor
push
insl
or
mov
std
mov
pop
divb
fistpll
rcr
jle
push
cmpsb
in
jmp
loope
es
in
inc
fstpl
cltd
daa
mov
in
and
mov
shr
addr16
fcomip
test
in
xor
push
push
mov
call
cmp
mov
inc
lahf
sbb
sub
jp
mov
cmpsl
dec
sub
dec
adc
cmp
pop
pop
cs
xlat
sahf
mov
cli
jns
sbb
sbb
pushf
xchg
or
cltd
imul
dec
xor
fadd
jecxz
iret
gs
iret
into
jne
mov
push
mov
gs
sub
daa
fsubrl
vminps
mov
adc
dec
xchg
pop
stos
dec
jp
jno
in
push
mov
mov
mov
cltd
aam
cli
add
or
mov
insl
jno
adc
sbb
mov
xorl
mov
loop
out
adc
cmp
ss
push
dec
xor
jnp
aam
mov
test
orb
sti
sub
cmp
mov
and
mov
cld
xchg
movlps
sti
push
pop
imul
out
fs
mov
cmp
mov
bound
shll
xchg
or
inc
xor
arpl
mov
pop
clc
adc
pop
sbb
outsl
jecxz
test
std
ret
pusha
iret
jg
lret
adc
int3
arpl
aaa
dec
popa
mov
aaa
ljmp
lret
xor
fcmove
stos
pop
adc
mov
test
shrb
popa
push
mov
add
int
xchg
xchg
pop
insb
std
mov
rcrb
ss
cmp
sub
jb
lods
sbb
fidivs
and
enter
sbb
imul
addr16
lcall
jmp
out
pop
dec
dec
adc
lods
inc
mov
aas
cmpsl
cs
int3
adcb
mov
cmc
fwait
jno
push
cltd
movsb
mov
ljmp
add
push
ja
notl
add
sbb
inc
or
xchg
cmpsl
out
adc
jns
xchg
das
pop
dec
popa
clc
push
movsl
sub
scas
les
roll
add
inc
lods
pushf
and
or
test
or
adc
pusha
ret
ds
sub
loope
push
xchg
test
lods
mov
push
or
xlat
int
popa
and
inc
scas
add
std
arpl
xchg
push
xor
mov
decb
jae
cld
lcall
stc
xchg
pop
pop
jbe
xchg
mov
push
xorb
push
mov
pop
adc
adc
call
push
or
cli
out
xchg
dec
es
pop
inc
cmpsb
out
out
aam
jne
xchg
stos
imulb
not
roll
sbb
pop
cmp
cwtl
jecxz
and
mov
jns
cmpsl
out
and
push
inc
push
jmp
xorb
inc
pop
pop
mov
sbb
inc
push
outsl
adc
pop
jb
pop
adc
add
inc
push
adc
pop
cmp
mov
dec
fs
xchg
out
dec
repnz
andl
add
mov
adc
and
dec
loop
xor
cld
repnz
bound
imul
cmovo
les
enter
scas
pop
addb
push
orl
lret
fadds
dec
dec
add
jmp
test
mov
out
mov
inc
push
out
add
or
mov
push
inc
call
pushf
xor
cld
mov
or
lret
or
mov
into
pop
jecxz
and
sbb
sub
loope
xor
xchg
ss
cli
subl
scas
repnz
iret
mov
dec
bound
push
inc
mov
aam
in
mov
xor
rclb
and
aaa
test
adc
test
nop
mov
inc
inc
repz
xchg
scas
outsb
fdiv
or
adc
lret
pop
pop
push
leave
into
shl
pop
or
mov
inc
orb
in
mov
pop
lcall
inc
push
in
pop
cmp
es
xor
mov
fsubrp
sub
xor
out
mov
mov
jmp
lods
jno
jmp
lret
push
orb
mov
add
repz
add
pusha
fisttps
icebp
nop
lret
es
roll
cld
xor
stos
jb
xor
or
sbb
bound
inc
or
mov
adc
xor
xchg
fsubrl
out
fcomps
dec
out
adc
sbb
and
xchg
nop
push
push
inc
sub
xor
or
push
aam
fld
push
sub
inc
push
jmp
xchg
add
lahf
pusha
test
test
outsl
xor
cltd
push
inc
cwtl
in
out
fwait
pop
xchg
inc
push
inc
sbb
das
or
mov
jecxz
loop
dec
fwait
sub
in
movsl
dec
pop
stc
mov
inc
jg
pop
call
xchg
jmp
add
dec
dec
push
mov
jge
mov
or
mov
adc
rcrl
sbb
lret
mov
add
pop
leave
dec
in
in
cmpsb
repz
adc
loopne
pusha
xor
repnz
into
iret
lea
mov
xchg
pusha
ss
aad
outsl
xchg
cmp
stc
mov
icebp
cmp
xchg
call
adc
add
mov
je
movsb
mov
dec
sub
movsb
repnz
fwait
xchg
or
test
insl
mov
mov
inc
je
or
in
lret
pop
insb
inc
data16
xchg
icebp
xor
push
cs
xor
xchg
test
xor
lock
sbb
cmp
mov
inc
aad
in
cmp
imul
cmp
or
icebp
xchg
jns
mov
int3
add
and
xchg
and
aaa
clc
std
int3
dec
pop
imulb
xor
imul
pushf
dec
dec
in
popf
in
sbb
mov
fcompl
ret
jnp
push
mov
jg
bound
lret
or
jno
nop
jae
icebp
mov
mov
pop
lret
addl
xorl
mov
push
xchg
mov
mov
push
lret
or
popf
cmp
mov
mov
and
scas
pop
je
int3
adc
mov
push
jg
inc
cld
cmp
cmp
mov
jo
pop
push
xchg
rol
lahf
enter
jl
sub
pop
sbb
loop
out
xchg
pop
repnz
sub
sub
insl
mov
stc
inc
pop
xlat
fs
jne
push
xor
cmp
leave
cld
jg
sarb
dec
push
sub
jb
test
repz
add
cmpsb
out
fdiv
xchg
dec
and
out
pop
repz
jl
dec
push
lahf
cwtl
adc
orb
shr
adc
cmpl
fsubr
mov
lods
stc
or
sub
aas
pop
adc
nop
pusha
dec
loop
cmp
add
pop
dec
inc
aas
std
adc
push
xchg
fldenv
and
rclb
push
sbb
ds
scas
jg
orl
pop
push
or
sub
and
outsl
imulb
shll
or
xor
xor
pop
cmpsb
cmp
push
cmp
js
cmp
stos
mov
cltd
in
push
dec
cmp
xchg
xor
les
xlat
xchg
sub
int
and
test
int
clc
or
sub
lret
bound
inc
jb
add
js
pop
and
aaa
or
cltd
jl
shrb
inc
pop
adc
add
sbb
sti
mov
insl
and
rolb
and
adc
clc
fwait
test
mov
movsl
xor
ss
mov
mov
inc
add
dec
pushf
adc
cltd
inc
xchg
insb
cld
mov
lret
fxtract
cld
cmp
and
xchg
xor
mov
loop
add
jge
es
adc
push
aas
jg
or
fwait
fs
sarb
push
xor
data16
sbb
out
jle
jecxz
jl
mov
mov
inc
pusha
jns
xor
rclb
jmp
in
sub
repz
mov
lret
cmpsb
add
fldl
push
or
cmp
xor
testl
repz
fbld
out
xor
jno
lods
mov
pop
cmp
lea
lods
add
and
xor
xor
mov
mov
dec
in
rcll
idivl
fnstenv
jne
jno
mov
xchg
scas
cli
nop
inc
add
mov
mov
inc
into
xchg
add
adc
arpl
mov
xor
scas
sarl
and
add
sub
mov
dec
ss
push
daa
ss
call
repz
dec
es
mov
jl
mov
xchg
popf
clc
or
adc
push
mov
lret
test
inc
jb
repnz
fcoml
das
fists
sti
xor
mov
inc
dec
dec
insb
scas
imul
mov
leave
pushf
sbb
jmp
subl
call
push
mov
push
ds
arpl
jge
xchg
popa
inc
cmp
cmpl
and
cmpsb
daa
out
mov
fsub
adc
add
fsubr
rcr
int3
xchg
dec
scas
xchg
cmc
xchg
mov
shrb
xor
add
adc
mov
leave
test
lcall
data16
cmpsb
push
pushf
in
and
or
push
iret
add
mov
push
push
mov
cmp
stos
incb
mov
or
fmuls
cmp
add
iret
cwtl
cmp
mov
push
push
fidivrs
dec
adc
xchg
add
adc
sbb
jl
mov
arpl
mov
sbb
jl
lock
popa
lock
mov
fwait
call
int3
xchg
sahf
jb
xor
jl
sti
adc
push
sbbb
mov
imul
dec
scas
xchg
jns
pop
cmpsl
add
bound
notb
xchg
test
scas
jne
cmp
fcmovnbe
ja
dec
mov
xchg
pop
push
pop
mov
xchg
bound
adc
popf
jbe
or
ss
addr16
lock
xchg
mov
lea
push
adc
aas
sbb
xchg
loopne
mov
jg
mov
imull
mov
xchg
push
and
xlat
or
pop
stos
push
cmp
jecxz
xor
ljmp
mov
dec
lods
movsl
pop
popa
or
sti
loope
in
jb
jmp
int
lods
idivl
xchg
ret
int3
jecxz
cmp
addr16
xchg
sbb
jp
sub
xlat
fwait
shrb
sbb
xchg
sbb
ljmp
mov
add
dec
int
cmp
lods
inc
push
pop
mov
cmp
sub
cmp
add
fwait
stc
pop
fldenv
out
push
mov
cmp
je,pn
pop
ret
xor
xchg
lods
leave
xchg
scas
push
adc
ja
xchg
sub
mov
mov
xchg
in
lds
out
pop
out
fldenv
sbb
sub
push
jmp
sti
dec
and
mov
movsb
xchg
iret
mov
and
push
cs
dec
push
jne
mov
jne
sbbl
loope
xor
sarb
mov
filds
xchg
push
pop
mov
sar
pop
cmp
pop
xchg
or
pop
mulb
pusha
imul
lock
jbe
lds
clc
dec
fisubs
ret
xor
lock
jp
push
inc
ret
jbe
mov
daa
nop
and
dec
insb
popa
aaa
lret
in
cwtl
inc
js
hlt
mov
std
fsubrs
mov
or
enter
sub
jo
sarl
icebp
mov
inc
xchg
mov
mov
imul
sahf
ja
mov
idivl
sub
jae
repnz
sbb
cmpb
xchg
movsl
xchg
jmp
in
das
fwait
and
add
xchg
aaa
ljmp
add
xor
ds
and
add
stc
xor
fisubs
test
cmp
sub
sbb
mov
jb
adc
and
push
shrl
scas
mov
ss
daa
push
sub
sbb
pusha
jl
pop
decb
inc
inc
pop
inc
ror
ret
aas
jl
mov
or
test
push
sub
scas
ds
dec
dec
jnp
xchg
in
mov
pushf
cmp
int
cli
mov
cmpsb
push
test
orl
inc
popf
ret
cmpsb
into
addr16
sbb
and
cmp
mov
fcoml
cmp
out
sahf
pusha
cmp
add
cwtl
nop
mov
sarl
mov
cmp
shll
and
dec
sar
mov
sub
pop
dec
mov
dec
rorl
mov
inc
xchg
mov
ret
pop
jb
sbb
in
xchg
icebp
push
pop
pop
sub
mov
sub
pop
mov
cmp
jg
add
sub
pop
scas
xchg
test
mov
aad
aad
enter
and
xchg
insb
push
or
and
sub
bound
ret
rcr
mov
ret
fsubrs
jns
fisubs
dec
fucom
repz
jb
adc
or
dec
dec
pop
cld
in
rolb
pop
lock
xor
cs
inc
pushf
push
arpl
push
cli
inc
call
stos
mov
jecxz
pop
jp
jno
cmp
cltd
imul
push
jle
sub
mov
shll
inc
popa
stos
les
jle
outsb
imul
cmpsb
inc
insb
sub
into
sarb
jae
or
push
mov
jmp
mov
jb
add
or
and
mov
rcr
test
aas
pop
cld
outsb
inc
rcll
jno
adc
out
in
insl
push
aas
daa
dec
rcll
inc
xchg
mov
out
jp
cmp
nop
jge
fld
push
jecxz
xor
push
mov
xor
sahf
and
push
jp
inc
push
out
lcall
lock
test
cmpsb
or
les
mulb
das
adc
or
cmpl
and
jg
insl
sub
mov
sbb
lea
mov
mov
addr16
xchg
addr16
scas
andb
sbb
loopne
xchg
call
ret
lods
or
mov
scas
or
int3
mov
jns
popa
or
inc
push
js
pusha
lret
xlat
xchg
and
mov
xlat
cmp
push
adc
jle
rcrl
test
orl
test
or
jl
imull
test
push
mov
mov
mov
lds
enter
loop
xor
movl
xchg
xor
shll
movsb
xor
and
and
loope
push
add
movsb
sub
push
in
cmpsl
cmp
xchg
xor
addr16
fwait
and
out
mov
inc
aaa
add
jle
jne
js
sub
cmp
ret
jmp
rclb
mov
data16
mov
adc
fyl2x
cli
jnp
push
ds
pop
es
orb
inc
mov
dec
in
push
iret
and
and
out
or
inc
xlat
mov
fdivl
pop
and
add
je
mov
push
inc
dec
cmp
xlat
sbb
cs
in
daa
jl
pop
scas
dec
je
hlt
jecxz
call
jmp
sub
sbb
push
mov
mov
jns
adc
cmpsl
lcall
addr16
repz
pop
je
shlb
test
fisubrl
std
mov
dec
mov
into
adc
test
popf
mov
inc
sbb
dec
xchg
push
dec
push
cmp
andl
stc
nop
mov
imul
pop
in
shll
out
cld
testl
sub
ljmp
lods
cmp
push
xor
pop
imul
xor
pop
push
in
divb
add
roll
cmp
inc
pop
bound
and
cmp
mov
cmp
sub
sahf
xchg
insl
mov
xor
adc
mov
test
leave
sbb
jl
jnp
mov
aas
push
testl
inc
ljmp
insl
pop
add
ret
dec
pop
inc
ljmp
jae
dec
fdivl
sub
test
push
adc
xchg
sub
sub
in
inc
cltd
test
inc
pop
push
nop
repz
ret
inc
push
stos
sahf
sub
cld
xor
xor
jp
sti
gs
mov
push
imull
pop
lods
inc
cmp
into
pop
stc
sbb
push
xchg
cli
dec
or
test
arpl
mov
outsl
shrb
mov
idiv
mov
xor
sarl
push
bound
clc
or
push
fucomip
dec
lret
loope
out
adc
rcll
pop
inc
cmp
outsb
sub
push
lret
xchg
test
inc
pop
lea
add
adc
pop
in
xchg
xor
inc
popf
lods
push
sbb
dec
test
jnp
int3
fmull
push
out
das
mov
in
xchg
jo
or
cmc
xchg
sub
sbb
cmp
negl
mov
jge
aad
int3
pop
adc
aaa
out
imul
dec
sbb
jnp
or
lret
mov
fcoms
mov
testl
or
fidivl
mov
clc
out
add
subb
xchg
icebp
push
dec
add
jne
xlat
dec
in
gs
xlat
pusha
pop
js
cmp
pop
jbe
cmpsl
js
dec
cwtl
jae
jno
mov
inc
mov
sub
jecxz
js
int3
int3
add
and
ss
pop
aam
loope
xor
sub
xchg
lods
out
dec
xor
mov
insl
lods
mov
ja
outsl
into
xchg
sbb
nop
ss
adc
lahf
sarl
mov
mov
divl
or
insb
scas
mov
fcomps
mov
xor
aam
call
cmp
mov
rorl
sahf
xchg
xor
adc
xrelease
call
or
outsl
push
or
pop
les
lahf
gs
and
or
test
xor
jne
shll
stos
arpl
cmp
cmp
add
pop
movsb
fstl
push
fisttps
or
or
in
movsb
bnd
fbstp
push
xor
movsb
lahf
aad
jne
in
idivl
pop
pop
adc
lock
loop
arpl
adc
neg
sbb
nop
int3
add
js
movsb
out
pushf
fs
xchg
insb
shll
dec
bound
insb
and
pusha
sub
jne
sbb
cmc
push
ss
push
insb
js
push
mov
cmp
shrb
adc
aas
and
xlat
cmp
fcomps
jecxz
xlat
cltd
dec
or
xor
test
test
mov
and
jo
and
fabs
mov
pop
mov
test
outsl
mov
mov
les
call
xlat
or
cmp
fs
xchg
push
out
jge
push
mov
jne
mov
arpl
lret
loop
fists
in
test
ret
pop
addr16
cmpsb
mov
ds
pusha
arpl
adc
add
add
cs
aam
cwtd
dec
inc
jl
seta
ljmp
pusha
mov
or
pop
out
inc
cmpsb
insb
shr
and
inc
nop
push
out
dec
xchg
jbe
push
fs
out
sub
pop
sub
and
insb
pushf
xor
sarl
movsl
fadds
push
and
dec
pop
push
js
sub
das
mov
aas
jl
fistpl
xchg
ret
ljmp
xor
cmc
or
sahf
or
sbb
xor
xor
insb
xchg
inc
in
sub
mov
jo
xchg
shlb
jp
xor
jnp
mov
pop
inc
insw
mov
mov
fstpt
imul
shlb
cwtl
jo
push
or
cmpb
aas
subb
inc
aad
dec
jg
test
das
dec
in
and
rcrb
pushl
rolb
rorl
aam
xchg
push
jno
push
sbb
cmp
cltd
xor
pop
daa
xlat
sti
xchg
or
cmp
shr
mov
adc
dec
jecxz
cmp
lock
out
popf
mov
into
bswap
pop
dec
jae
jp
and
dec
cs
push
pop
xchg
push
sub
or
cmp
loope
pop
jmp
and
inc
cltd
push
mov
and
into
mov
cwtl
dec
out
add
pop
je
add
inc
cmpsb
pop
scas
sbb
fisttpl
xor
mov
pop
icebp
fdiv
inc
lcall
jle
mov
and
ret
scas
lods
inc
loope
mov
into
rolb
mov
in
mov
mov
fildll
mov
xor
inc
fs
in
outsb
push
fwait
into
mov
lock
cmp
shrb
sbb
dec
addl
incb
pushl
push
xor
aam
ror
clc
mov
mov
les
aad
lcall
or
push
loope
push
sbb
adc
jo
cld
daa
or
rcl
cmp
sbb
adc
scas
adc
push
sbb
pushf
vminss
jno
ds
leave
cmp
ret
xor
xor
and
push
xor
mov
rcl
mov
lods
pop
icebp
testl
mov
ja
inc
pop
mov
aam
rorb
mulb
ja
leave
pop
mov
mov
xor
xchg
insb
pop
scas
les
push
or
les
push
jno
fwait
and
inc
cs
inc
pushf
in
dec
test
sbb
inc
or
dec
je
lret
bound
push
jmp
sub
mov
sbb
cmp
or
jb
lahf
and
inc
es
push
inc
mov
mov
mov
notl
lret
and
push
xchg
mov
and
xchg
dec
jle
jle
ljmp
daa
jo
add
out
sub
fnstcw
popa
shr
mov
and
cmp
sbb
push
dec
cmp
push
xchg
scas
dec
test
jne
xchg
std
jg
mov
stos
test
pop
inc
sbb
or
addr16
inc
addb
out
inc
cltd
add
push
dec
mov
mov
push
dec
inc
insb
imul
and
les
repnz
scas
add
ljmp
cmpsl
movsb
lea
stc
jnp
dec
inc
test
dec
jb
out
mov
mov
aam
lds
fdivs
out
xchg
int
pop
and
stos
cmpsl
or
insl
adcl
stos
xchg
sub
and
xor
das
cld
push
out
test
and
mov
pop
push
sbb
iret
push
mov
dec
fisubrs
adc
xchg
xchg
movsl
mov
add
cld
lcall
shlb
and
out
sbb
xor
inc
sub
call
jl
stos
or
daa
inc
xlat
mov
push
add
push
fisttpll
movsb
push
loop
arpl
sti
push
xchg
dec
stos
adc
inc
adc
mov
lock
and
lds
arpl
add
add
lcall
and
dec
and
mov
xchg
sbb
hlt
mov
mov
rorl
aaa
push
lret
sbb
pop
stos
add
jg
pop
es
mov
cmpsl
test
adc
mov
out
test
dec
or
add
mov
push
dec
xor
jl
lcall
add
mov
enter
push
and
cltd
jbe
fmuls
negb
sub
test
inc
jecxz
psubusb
pop
cmp
out
inc
and
int
xor
fsts
push
idivb
push
fs
add
sbb
jg
loopne
fwait
cmpsb
push
mov
jl
jo
loop
push
addr16
xchg
adcl
xor
outsl
jne
cmpsl
insb
mov
mov
push
sub
fmuls
pop
test
lret
jae
repnz
and
dec
push
jno
jae
orb
xchg
sarb
dec
mov
test
orb
fldl
adc
adc
insl
inc
mov
sbb
jo
add
dec
dec
in
movsb
lea
mov
dec
pop
lcall
std
and
leave
xor
cwtl
std
inc
cld
daa
mov
jbe
enter
popf
mov
add
iret
test
pop
scas
xlat
xchg
cwtl
or
lods
ret
repz
ss
arpl
xchg
push
push
pusha
ljmp
subb
ja
jnp
repnz
push
dec
dec
mov
cltd
mov
mov
lock
insl
pop
ror
xor
xor
mov
inc
mov
imul
sub
lahf
pop
iret
lock
fisubl
loopne
movsb
lds
addr16
pop
ds
dec
addl
fistpl
outsb
gs
push
sub
mov
mov
int3
xchg
scas
pop
insl
loope
testl
jmp
or
jae
pop
mov
jo
cli
xchg
fwait
pop
dec
fwait
aaa
mov
jle
scas
rcll
or
es
int3
cli
jge
sub
outsb
iret
test
call
mov
inc
sbb
fldenv
xchg
mul
pusha
mov
dec
xchg
insb
imull
rolb
std
pusha
pop
mov
movsl
pop
cmp
inc
inc
pop
cmpsl
decl
outsb
sbb
cmpsl
iret
xchg
lea
js
or
and
popf
mov
das
dec
jnp
push
subb
imul
fsubrp
dec
test
mov
out
mov
and
sbb
das
mov
mulb
incl
out
aaa
pop
repnz
xchg
xchg
out
xchg
dec
adc
and
pop
and
mov
rorl
jnp
fucomip
mov
inc
pop
dec
push
stos
inc
push
xchg
xchg
xchg
mov
jns
dec
mov
and
inc
mov
inc
into
lret
fiaddl
cld
std
inc
jae
and
jg
xor
je
mov
xchg
repnz
sub
pop
mov
lds
outsb
pshufw
sub
leave
ret
pop
mov
sti
movl
add
dec
sbb
xchg
and
jae
mov
in
mov
and
je
inc
xlat
aam
cltd
mov
ret
call
xchg
or
cmp
insl
rorl
pop
mov
sbb
aad
cmp
or
inc
or
lods
sub
or
sub
or
dec
arpl
mov
jnp
loopne
out
iret
loope
addr16
jns
inc
fisubs
fwait
test
and
rcrb
xor
pop
data16
mov
jb
jg
out
or
js
les
push
cmpsl
xor
cmp
add
cwtl
mov
adc
xor
sub
imul
push
lcall
mov
jecxz
sub
and
inc
dec
lret
xlat
mov
inc
cmpsb
loope
sbb
inc
adc
mov
inc
mov
int3
es
push
add
mov
daa
inc
xchg
call
mov
insl
lods
jb
fisttps
lea
cmpsb
in
std
xlat
enter
add
mov
mov
mov
sbb
into
popa
arpl
xchg
sub
test
add
mov
fimull
dec
pop
mov
shlb
pop
xchg
inc
popa
jns
cltd
xlat
mov
xchg
push
outsb
js
jae
add
arpl
jg
dec
popf
test
pop
dec
jge
rcrl
js
jb
dec
sub
xchg
sbb
popa
xor
jno
int
lds
addr16
negb
push
and
cmp
in
stc
test
pop
scas
dec
cmp
test
fwait
jns
rorl
repnz
aaa
mov
push
sti
sahf
cld
andb
mov
or
or
nop
push
xor
and
xchg
out
in
lret
cmpsb
xchg
sub
cmp
mov
jl
jnp
imul
mov
fbstp
mov
loopne
add
cmp
jb
jbe
cmpsb
pop
cmpsb
jmp
gs
and
mov
cmp
mov
xchg
dec
minps
pop
xchg
or
stos
movsl
lret
aaa
into
cld
neg
repz
ror
les
mov
or
push
mov
insl
jle
dec
enter
mov
xchg
ds
jnp
clc
push
pop
jmp
fwait
push
and
call
inc
cmp
addr16
jb
popf
iret
fldcw
scas
imul
jg
mov
lcall
cmp
pop
jp
pop
adc
sub
mov
testb
push
mov
dec
pop
dec
sub
pop
inc
pop
idivl
and
nop
jl
iret
push
roll
in
add
clc
or
mov
pop
icebp
cwtl
push
or
mov
out
fcompl
mov
push
sbb
fidivs
sbb
insl
shrb
stc
scas
mov
lock
inc
pop
adc
add
shl
fwait
bound
addl
xlat
lods
out
leave
xlat
cmp
jl
jecxz
loope
xchg
cmp
into
mov
jae
jecxz
push
jo
add
mov
stos
and
je
iret
push
pop
mov
mov
sub
mov
mov
mov
lds
push
mov
outsl
into
jb
jb
xor
mov
jg
mov
jae
in
inc
in
lret
xchg
push
mul
jo
jecxz
ret
hlt
mov
fdivrs
bound
mov
out
data16
push
lea
mov
mov
push
aad
roll
inc
xchg
jle
pop
pop
iret
push
jne
gs
push
out
mov
stos
fdivs
or
mov
addr16
lret
jae
test
and
dec
lret
or
je
push
cmp
or
cmp
cwtl
mov
int3
insb
push
xchg
movsl
testb
notl
rcrb
and
inc
cmpsb
jge
in
ja
stc
sub
popf
push
out
lods
push
addr16
stos
cmc
adc
fildl
dec
adc
insb
inc
aaa
pop
mov
out
out
xchg
jo
enter
push
mov
cmpsl
mov
push
mov
jns
mov
pusha
inc
or
sub
cmpsl
decl
cmp
pop
mov
and
adc
mov
inc
add
jmp
gs
mov
push
pushl
negb
leave
jp
jns
push
xchg
pop
test
mov
and
mov
fcmovne
inc
jmp
jns
and
movsb
in
cmp
xor
imul
mov
cmp
xchg
mov
xchg
out
jecxz
mov
fildl
out
fbstp
jmp
in
sbb
push
mov
pop
cmc
dec
fsubs
jne
jmp
cmp
push
sti
fcoml
sub
push
mov
adc
mov
add
xchg
and
jno
mov
loopne
sub
xor
add
jbe
mov
cmp
adc
shl
notl
loope
aaa
pop
imul
sub
mov
mov
mov
jne
or
add
jmp
xchg
mov
ss
call
sub
pushf
addr16
jmp
inc
add
outsl
dec
mov
fidivrl
lds
sysenter
push
cmp
push
cmpsb
lcall
xlat
cmp
mov
or
adc
dec
jo
dec
and
pushf
lahf
inc
pop
mov
add
ja
sbb
scas
mov
std
jle
js
lahf
mov
cltd
jecxz
add
mov
cs
pand
mov
xchg
jbe
rcrl
sahf
xchg
sbb
mov
insb
movsb
push
xchg
in
add
sbb
mov
jo
xchg
stos
push
inc
xchg
int
sbb
xor
ljmp
jns
mov
test
xchg
pmulhw
enter
adc
arpl
pop
icebp
inc
sbb
unpcklps
xchg
cs
xor
mov
fmull
jge
stos
sub
ret
out
shr
adc
and
stc
sbb
mov
dec
in
scas
xor
cmp
sbb
push
mov
psubusb
es
pushf
popf
data16
hlt
sahf
popa
stos
cmp
daa
popf
jbe
xchg
push
cmc
lock
push
movsl
fwait
scas
std
aam
mov
jne
lods
in
push
jno
push
mov
mov
daa
pop
les
xorb
pushw
enter
adc
push
jp
ret
xor
jno
add
jecxz
jno
fwait
ds
adc
xor
fwait
inc
popf
sbb
push
jb
push
push
enter
iret
jmp
dec
xlat
jecxz
shrb
or
call
push
sub
xchg
cld
or
push
test
adc
mov
mov
les
fdiv
mov
test
movsl
xchg
mov
outsl
hlt
jne
in
add
and
dec
dec
sbb
icebp
bound
add
push
pushf
xchg
repnz
stos
mov
mov
jl
add
mov
and
in
test
push
dec
repnz
loopne
xchg
call
cld
lcall
xlat
lods
cmc
xor
inc
push
sarl
xor
ja
shr
xchg
les
fistps
sbb
jmp
dec
nop
cmp
aam
addb
andb
nop
outsb
xor
adc
push
std
lcall
in
lret
sbb
dec
adc
outsb
popa
clc
lahf
and
loope
subl
mov
loope
adc
cwtl
sti
xchg
popf
xchg
movsl
sbb
push
inc
sahf
fsts
xlat
xor
fwait
jne
xchg
sbb
cli
ja
fdivrl
inc
push
ds
fsubrl
push
and
mov
jecxz
add
push
push
mov
push
or
pop
lcall
into
andl
in
addr16
in
mov
movsl
cmp
add
inc
pusha
inc
fimuls
jo
xchg
jo
stc
mov
pop
jge
push
cwtl
out
lret
lods
imul
dec
loop
test
adc
adc
jle
imul
mov
lret
jne,pn
mov
icebp
dec
adc
mov
sub
js
xor
stc
nop
mov
jge
fs
cwtl
icebp
adc
shll
xlat
outsb
pop
loop
sti
bound
or
push
mov
pop
jge
test
lcall
pop
dec
pop
fisttps
xor
scas
shll
je
jnp
lret
mov
xchg
stos
add
js
dec
pop
lcall
or
mov
fisttpll
cmpsb
cmpb
lret
repnz
les
test
sbbl
xchg
lahf
lcall
adc
int3
popa
cmp
arpl
adc
cmp
pushf
jns
sub
adc
loop
pop
scas
jecxz
out
mov
scas
test
push
jmp
inc
iret
or
add
adc
cmpsb
aad
test
mov
faddl
xchg
inc
stc
js
out
fisubl
xchg
or
dec
fwait
ljmp
jae
mov
mov
fldl
sub
fadd
mov
loope
push
jp
enter
xorl
in
mov
das
bound
js
mov
adc
pop
js
adc
mov
jmp
mov
lret
cmp
lock
push
mov
loopne
sbb
inc
and
fwait
push
clc
bound
rcrb
sahf
les
aas
outsb
and
jno
cmp
arpl
nop
jb
leave
lcall
mov
call
dec
push
lret
icebp
mov
incl
pop
and
mulb
add
lret
sub
xor
cltd
cli
dec
add
adc
dec
imull
sub
mov
sahf
mov
iret
std
jge
xor
call
cltd
ja
or
fstp
out
bound
xor
sbb
add
fistpll
ja
dec
pop
inc
adcb
jle
and
fldenv
addr16
into
nop
push
jne
fdiv
mov
stos
or
add
cmp
jge
lock
xor
add
jne
mov
cmc
or
xchg
dec
jp
js
xchg
movb
push
js
sbb
pop
or
cmpsl
out
add
xchg
das
add
sti
loop
fs
and
jno
xor
add
in
or
loopne
pop
jns
bound
jne
ret
lods
clc
cmp
sbb
pop
mov
jp
pop
adc
outsb
mov
test
inc
jmp
addr16
cli
movsb
xor
gs
outsb
pop
ret
fidivs
dec
lea
xchg
cli
addl
repnz
push
adc
mov
shl
pop
xor
fbld
daa
mov
stc
ds
or
push
or
call
in
movsl
cmp
dec
xor
push
xlat
cmpsl
dec
inc
cmp
js
push
mov
repnz
stos
sub
jge
pop
xchg
ja
xchg
hlt
mov
ljmp
and
xchg
mov
subb
mov
into
pop
sahf
pushl
cmp
jmp
pop
fcmovu
andl
imul
imul
sub
pop
mov
jecxz
ja
insl
adc
add
test
jg
add
jne
in
jge
push
jbe
sub
mov
add
in
repnz
push
adc
sbb
inc
inc
cwtl
xchg
mov
sub
adc
jb
data16
dec
addr16
jns
sub
push
aad
inc
cltd
lcall
add
jg
adc
mov
cwtl
std
pop
inc
mov
jb
xchg
fisubs
fisubrs
push
push
divb
dec
scas
fs
fiadds
mov
or
jecxz
xlat
stos
shlb
out
sub
pop
mov
lahf
pop
jge
fbstp
ret
nop
aam
inc
sbb
daa
mov
dec
adc
int3
cmc
xchg
out
jns
push
stc
jns
fcmovbe
cs
shlb
pop
jge
push
ds
enter
and
mov
xor
stos
cmp
fcomps
cld
lret
jecxz
jbe
push
or
in
jge
pusha
inc
xlat
xchg
insl
test
loop
mov
jle
sbbl
xchg
xchg
das
or
ds
cmpsl
fdiv
cmp
or
jmp
cmp
sub
dec
pop
sub
popf
adc
add
xchg
ret
hlt
das
push
and
adc
adc
fucomip
imul
test
lret
jae
fdivl
xchg
dec
in
pop
and
aam
insb
test
sbb
dec
daa
jl
mov
int
jle
push
sbb
icebp
lcall
or
cld
out
cs
lcall
mov
jns
cmp
lods
jp
in
rcll
cs
mov
and
sbb
clc
bound
lcall
sar
pop
das
adc
out
aad
inc
cltd
add
cmp
and
rcrb
mov
int
dec
fbstp
je
jecxz
xchg
sahf
add
mov
push
xchg
popf
js
cmpb
cltd
out
mov
push
aam
sbb
push
shlb
lret
fsts
adc
test
dec
inc
pop
subl
cmp
mov
stos
inc
lods
xlat
pop
out
out
outsl
sbb
pop
adc
lret
fsubl
push
mov
inc
push
push
jp
sbb
ret
push
insb
dec
cmp
push
cmp
dec
std
sbb
test
xor
mov
test
sbb
mov
int
ljmp
jno
out
pop
jmp
pop
pusha
hlt
lea
je
test
mov
lahf
pop
pop
into
insl
xor
scas
push
sbb
jb
test
rcl
icebp
dec
and
mov
iret
add
pop
test
arpl
aad
or
pop
hlt
in
xor
aam
push
jbe
push
into
jne
roll
cmp
pop
movsl
movsb
sub
lea
adc
sbb
jns
inc
jo
imul
std
xchg
add
jp
or
sbb
xor
sbb
lret
sar
xchg
scas
movb
rcrl
mov
rclb
loope
sbb
aas
push
fisubrl
int
shll
or
mov
popf
push
sub
enter
sbb
sbb
fsubl
les
jno
loopne
xor
mov
ret
lahf
add
xchg
or
fsubrp
sub
sub
stos
jo
push
and
mov
jmp
int3
xlat
dec
mov
dec
cs
pop
cmpsb
jge
mov
push
pusha
push
in
rcl
or
icebp
jae
out
daa
push
push
sbb
jnp
mov
jl
daa
adc
pop
cmc
add
movsb
sub
mov
push
mov
cwtl
xchg
popa
lock
gs
pop
ret
pop
inc
popf
icebp
out
lahf
ss
push
push
pushf
xchg
mov
inc
push
test
insl
push
mov
fucomp
sti
dec
loop
add
xor
jge
add
icebp
cmp
out
lock
scas
jne
into
mov
mov
in
mov
movsb
adcb
outsb
notl
mov
outsl
shl
sahf
jne
insl
das
xchg
inc
icebp
hlt
lds
jno
daa
inc
stc
sub
cmp
popf
inc
sub
loope
push
loope
xchg
xchg
xchg
int
xorb
push
inc
mov
neg
outsl
sub
testb
pop
lea
pop
cmp
lret
push
into
bound
sbb
popa
mov
les
add
mov
cmc
push
mov
stos
pop
aad
stc
lret
xchg
inc
arpl
mov
inc
inc
jp
xlat
xor
rcrl
dec
lods
test
sbb
ret
cmpsb
xor
and
add
xor
fstps
push
mov
and
into
dec
xchg
cmp
in
add
jbe
in
inc
jae
test
lods
dec
push
fsubrs
stos
jmp
pop
mov
rcrl
push
adc
dec
inc
jb
mov
or
mov
xlat
xor
dec
cmpsb
fisubs
sbb
inc
mov
mov
lcall
leave
ret
or
sub
jg
rorb
in
mov
xor
out
xchg
fcompl
fwait
sub
test
dec
xchg
jbe
xchg
jge
les
out
rcl
cmp
sti
mov
call
std
mov
pop
imul
jo
add
data16
repnz
ror
pop
lret
adc
imul
dec
pop
inc
lods
addr16
fstpl
mov
push
stos
inc
fcmovnu
js
daa
mov
bound
shrb
or
push
add
adc
lret
xor
aaa
outsl
mov
xchg
mov
stc
pop
push
or
ss
xor
cmp
test
icebp
das
mov
dec
addr16
pop
les
dec
dec
lahf
cmp
in
fmuls
or
aad
xor
pop
jne
inc
movsl
jno
mov
pop
sbb
pop
ss
icebp
stos
mov
fildl
andl
push
sub
sahf
jns
cld
fwait
and
es
sbb
ds
add
sub
popa
jo
push
jmp
or
jle
adc
add
lcall
sub
add
inc
pop
sub
jno
shrl
inc
fnstsw
jle
cmc
cmovg
xchg
loope
push
xchg
loopne
jne
xchg
inc
jae
cld
cmp
je
jb
push
and
pop
fstpt
xor
mov
test
xchg
aas
das
aam
dec
shll
test
cmp
sahf
ret
mov
sub
data16
push
imull
nop
pop
cmp
out
data16
mov
cmp
and
popf
mov
and
fcmovnu
je
adc
sti
stos
or
xchg
pop
sbb
jmp
or
rclb
jecxz
fcoms
fwait
xor
in
cmc
stos
mov
pop
push
sarb
bswap
aas
cwtl
das
addr16
cltd
mov
jmp
lock
popf
adc
ss
in
cltd
nop
out
xchg
sub
lea
jo
stc
call
lods
pop
sahf
mov
into
fldt
gs
out
dec
jbe
push
cmp
cmp
pop
test
and
mov
or
ret
shl
jg
outsb
add
mov
xchg
mov
gs
pop
lret
cmp
dec
mov
cli
movsb
ljmp
push
jmp
test
fwait
mov
in
inc
icebp
clc
cmp
int
dec
mov
in
jo
mov
adc
imul
call
mov
sub
lods
stos
push
frstor
mov
push
xlat
insb
inc
mov
scas
loope
jbe
cld
or
jne
cmp
imul
xor
nop
sti
repnz
add
in
pop
sbb
shrl
xor
into
push
jno
mov
inc
adc
roll
inc
adc
mov
add
iret
cwtl
andb
in
adc
rclb
lds
leave
xor
mov
cmp
or
mov
add
loop
lahf
push
loop
pop
adc
es
test
notw
mov
fsubrs
mov
jae
push
jo
cmp
outsb
shl
push
rcr
into
daa
sub
pop
jmp
mov
lret
push
cmp
push
jno
pusha
cmp
arpl
daa
fldcw
in
lock
mov
dec
movsl
or
push
outsl
movsb
aam
fcmove
pop
inc
push
mov
xchg
jp
sub
pop
scas
scas
sbbl
inc
popf
xor
subb
dec
push
icebp
inc
loopne
scas
sbb
mov
jno
mov
or
push
or
ja
cli
inc
fisttps
mov
lock
xor
inc
out
pop
lock
lods
pusha
adc
jg
jo
dec
adc
or
fstl
in
xchg
sub
sbb
test
popa
and
push
test
mov
loopne
aas
int3
add
lock
ret
mov
call
ret
nop
popf
sarl
adc
pop
adc
repz
icebp
rolb
pop
imul
stos
aas
mov
push
mov
dec
imul
fadds
data16
pop
or
xchg
sub
lret
icebp
or
cmp
mov
cmc
sbb
cmp
ljmp
adc
inc
push
add
xchg
pop
mov
mov
xchg
push
jns
sbb
das
andb
mov
cwtl
mov
cmovbe
inc
xchg
jb
push
js
inc
icebp
stc
push
ret
and
dec
pop
int3
xchg
incb
sub
add
mov
aad
cwtl
repnz
mov
add
inc
xchg
pop
push
jmp
shl
cwtl
jns
push
xor
cmpsl
pop
stos
pop
out
push
aam
mov
pop
stos
xchg
xor
pop
xchg
cmp
jge
xlat
popf
repz
sar
mov
xchg
pop
pop
pushf
push
pop
clc
and
pop
jne
stos
add
sub
cld
pop
pop
jb
loop
mov
pop
add
mov
push
addl
jae
add
hlt
test
mov
pop
lret
loope
pop
adc
outsl
push
inc
sbb
pop
xor
fs
or
or
jbe
cmpsl
bound
fwait
or
gs
mov
test
shr
or
push
xor
sub
push
rcrb
jb
icebp
outsl
xchg
daa
jle
testl
and
and
jg
pop
xchg
lods
imul
pop
lods
jp
mov
mov
negl
push
ss
cld
push
test
jecxz
mov
movl
push
mov
adc
dec
sbb
stos
sub
jp
push
inc
pop
jae
std
xor
int3
pop
adc
dec
lret
lret
call
int3
cmpsl
imul
jne
paddq
mov
fstpl
push
mov
fcoml
mov
test
mov
aam
jp
adc
imul
xor
dec
outsl
shl
adc
fcoms
ss
adc
lock
mov
adc
cmp
fsts
add
cli
mov
inc
cmpsb
sub
fistpll
outsb
sbb
mov
fstpt
pop
rol
pop
mov
push
sub
xchg
fistpl
aam
pop
jb
ljmp
push
shr
bnd
repz
cwtl
adc
inc
cmp
push
mov
push
xor
inc
fimuls
adc
leave
insb
gs
lret
arpl
jecxz
xchg
lahf
call
outsb
add
popa
xchg
mov
icebp
xchg
out
fwait
das
mov
and
aaa
xor
push
jecxz
ffreep
int
cli
call
andl
enter
pusha
mov
leave
mov
shlb
mov
mov
dec
fistps
and
inc
or
rolb
bound
xchg
and
push
or
add
jp
in
in
or
orb
jns
cmp
xchg
mov
sub
sbb
ret
inc
sbb
mov
inc
adc
arpl
out
icebp
jnp
and
movsb
mov
into
std
push
jb
mov
xor
scas
inc
filds
push
loope
or
cs
or
add
adc
cmp
add
jb
and
jb
or
adc
cmp
lahf
add
xchg
mov
add
xor
rolb
xchg
mov
push
push
inc
cmp
mov
cmp
add
sbb
inc
pop
ss
dec
das
or
cwtl
rorb
cli
and
dec
jns
lock
and
into
test
cmc
pop
loop
rcll
jl
sub
mov
adc
mov
xor
lahf
sub
scas
ret
adc
jns,pt
das
in
repz
xor
push
push
mov
sub
dec
jns
outsl
outsb
out
and
pop
fwait
movsl
cmp
inc
jecxz
testl
mov
fildll
push
or
jp
inc
xor
fwait
rclb
xor
sub
enter
mov
cwtl
jne
cld
ret
push
mov
rcrl
xor
cmpsl
bound
mov
clc
jae
popa
pop
add
hlt
push
addr16
jg
out
outsb
mov
mov
fwait
test
inc
arpl
jno
lret
mov
jle
inc
sarl
mov
popf
and
xor
mov
div
std
rcll
movsb
sbb
mov
push
mov
mov
sbb
test
sahf
jge
shufps
or
inc
mov
xchg
push
sbb
fldl
sarl
pop
mov
nop
sub
in
dec
push
mov
dec
shrl
xor
jmp
pop
push
movsl
test
outsb
jge
mov
ret
mov
ficoms
xor
fidivs
adc
mov
ja
xor
pop
ret
mov
les
fldt
jmp
stos
mov
jne
mov
mov
clc
into
gs
mov
or
adc
pop
fs
pop
push
pop
dec
loopne
mov
push
add
dec
sarl
fdiv
loop
inc
aas
push
dec
add
cmpb
jl
pop
subb
pop
cmpsb
push
sub
sub
add
decb
sbb
dec
loopne
out
cwtl
sbb
sbb
ret
test
fld
and
dec
xchg
mov
xlat
and
stos
cmc
in
outsb
xchg
das
cwtl
es
or
sbbb
dec
and
xor
sar
xchg
jp
mov
cmpsl
test
nop
test
push
lahf
hlt
mov
push
int
mov
popf
mov
and
sbb
adc
iret
arpl
stc
loopne
ret
sar
push
mov
imul
imul
fdivr
jl
hlt
pop
or
jg
jg
ja
dec
into
push
adc
lock
popa
and
cld
mov
add
mov
iret
jnp
pop
sub
adc
push
lds
repnz
mov
fwait
cmpsl
std
aad
mov
xor
pop
jb
dec
loope
cltd
daa
insb
popf
jno
dec
and
mov
mov
lock
in
jl
inc
xchg
push
pop
mov
mov
sbb
test
movsl
lds
adc
xchg
leave
sbb
jnp
pop
ret
imul
and
or
bound
xchg
clc
or
jg
xchg
sbb
xchg
push
or
dec
or
insl
enter
shlb
adc
incl
out
js
add
xchg
mov
adc
adc
insb
cmp
jmp
adc
sub
mov
cli
dec
ficompl
and
lods
mov
adc
push
in
xchg
push
cltd
jae
fs
push
cmpsl
movsb
mov
enter
mov
and
xchg
pop
jno
out
mov
pushf
sub
xchg
push
inc
xchg
or
int3
inc
fdivl
sbb
xor
mov
pusha
or
cwtl
or
inc
dec
jecxz
scas
shld
fdivs
push
jecxz
ret
adc
cmpsb
cmp
insl
dec
pop
imul
mov
test
andl
dec
imul
adc
cmpsb
inc
mov
es
xor
dec
cwtl
mov
mov
xor
jl
push
mov
xlat
jns
jno
jnp
pusha
insl
inc
pushf
mov
add
imulb
pop
fidivs
pop
sub
pop
mov
cld
lret
ljmp
pop
sti
in
repz
std
or
push
aaa
loope
jp
mov
iret
push
loop
jmp
daa
mov
nop
stos
inc
arpl
mov
cmp
cltd
fldl2t
stos
sahf
outsl
loope
add
and
dec
mov
shr
sbb
pop
push
movl
xchg
ds
pop
mov
and
sub
xor
movsb
ja
dec
inc
jno
inc
push
lret
aam
outsb
test
mov
xchg
xor
sbb
inc
add
es
pop
pop
lcall
xor
mov
and
inc
and
mov
mov
loope
inc
jg
add
cmp
sbb
data16
aam
sub
push
sub
adc
and
aad
ss
sub
sarb
add
xchg
adc
lret
inc
and
stc
dec
sbb
jmp
sbb
addr16
and
push
addr16
fsubl
sbb
mov
jo
jg
pop
push
pop
xchg
lret
cld
push
cmp
pop
test
shlb
add
sarb
push
jne
loop
adcb
xor
mulps
js
jb
jne
sbb
movsb
scas
push
mov
cld
mov
cmp
fisubrs
inc
pushf
mov
bound
mov
xlat
in
in
mov
arpl
test
sub
mov
adc
pop
or
push
imul
addr16
xchg
mov
lret
out
jnp
add
ja
or
mov
lods
rclb
mov
sbb
pop
les
aaa
push
push
stos
pop
sub
add
pop
xor
out
aas
mov
jl
xchg
xor
jge
adc
mov
lret
cmp
mov
adc
loope
adc
push
add
cmpsl
je
ficompl
scas
ds
inc
pop
dec
daa
sti
pop
imul
outsb
jnp
jl
xor
mov
jl
test
setp
in
and
pop
pop
aas
cli
cmp
mov
jns
push
outsl
push
nop
pop
lods
mov
notl
scas
jg
lock
pop
cmp
dec
in
adc
test
stc
lock
nop
jl
add
mov
jp
jle
cmpsl
and
dec
loope
movsb
leave
pusha
sbb
addr16
loop
lds
add
cli
pop
dec
loopne
jg
je
inc
loop
xor
ljmp
imul
push
adc
cltd
xor
inc
shrl
mov
add
push
jmp
lods
jmp
and
fnsave
pusha
negl
rcl
push
dec
xchg
test
or
cld
xorb
icebp
insl
mov
rcrl
mov
jns
loop
mov
fistpll
enter
mov
adc
pop
arpl
cmp
or
jle
jbe
xchg
push
movsb
push
arpl
imul
js
mov
sti
mov
ret
outsb
xor
popa
clc
mov
data16
pushf
insb
adc
lea
push
cmp
es
js
or
sbb
mov
scas
xor
ja
pop
insl
leave
inc
cmc
adc
jo
lcall
sbb
inc
fdivs
pop
mov
test
or
or
mov
in
adc
add
mov
mov
mov
sub
addb
or
in
or
xor
aas
loope
xor
dec
xchg
insb
imul
mov
dec
pop
add
aaa
push
mov
aad
stc
mov
pop
mov
ret
rclb
xchg
idivb
adc
dec
push
sub
popa
cli
dec
sbb
xorl
fldlg2
stos
push
loopne
out
cmpsb
add
pop
mov
pop
cltd
ret
jae
and
out
je
pop
xchg
popa
arpl
xchg
mov
xchg
loopne
xchg
out
stos
inc
xor
adc
loop
add
mov
cmp
xlat
mov
nop
cmp
rol
mov
lcall
sbb
dec
mov
inc
and
or
rol
add
fisubrs
loope
push
push
scas
jae
popa
jno
jne
sbbb
fadds
movsl
int3
mov
insb
mulb
mov
dec
xor
imul
cs
jns
dec
test
clc
iret
lods
mov
sbb
adc
sti
push
popa
xor
das
dec
cmp
sub
fnstenv
in
sbb
adc
pop
or
adc
jg
xchg
xor
cmp
cwtl
inc
in
inc
add
ljmp
jno
stc
cmp
js
inc
or
mov
jle
leave
and
sub
inc
fcmovu
daa
aad
pop
scas
jo
ja
mov
jae
pushf
fdivl
sbb
aaa
psadbw
inc
scas
mov
push
inc
sub
lods
scas
sbb
mov
add
int3
adc
adc
lods
lret
imul
fisttpl
lcall
aad
pop
push
mov
imul
xor
stos
jl
out
mov
xor
cld
stos
jne
dec
lcall
loope
dec
dec
mov
out
cld
inc
stos
rorl
sahf
insl
push
insb
xchg
xchg
test
enter
mov
mov
mov
mov
adc
cmc
lods
xor
mov
fs
push
mov
arpl
add
dec
in
stos
or
add
adc
je
mov
mov
scas
aad
lahf
data16
or
icebp
pop
pop
repz
xchg
test
mov
mov
sub
nop
dec
daa
dec
or
pop
xor
insl
add
in
imul
push
mov
xor
data16
adcb
sahf
jecxz
cltd
jo
je
scas
lods
lods
negl
test
mov
std
add
push
sub
jge
cwtl
cmp
push
jl
jae
adc
test
stos
outsb
test
int3
outsl
push
popa
push
sub
mov
dec
cmpsb
data16
add
test
and
adc
pop
mov
call
test
pop
test
insl
or
inc
and
sbb
inc
pop
movsb
mov
rol
xor
pop
sahf
test
xchg
push
pushf
mov
inc
mov
test
popf
xchg
jnp
mov
pop
push
xor
dec
stos
push
in
jb
pop
xor
fdivrs
push
pusha
imull
jns
out
dec
push
jae
shlb
cli
cltd
js
mov
ficoml
sub
xor
arpl
in
adc
dec
pop
push
inc
aaa
lret
repnz
in
mov
adc
dec
adc
xor
pop
imul
test
cmp
in
cld
sbb
insl
jg
add
iret
mov
xchg
mov
mov
inc
leave
and
mov
jp
pushf
pop
lds
dec
call
sub
jo
out
pusha
mov
outsb
enter
lds
sbb
ret
in
movsb
and
jns
mov
sub
std
mov
push
bound
mov
cwtl
fadd
push
mov
sub
mov
dec
fs
mov
push
lahf
popa
ucomiss
pop
lret
and
in
sbb
ret
incl
mov
ficomps
sbb
add
rorb
sbb
aam
icebp
cmp
cmpb
mov
mov
outsl
rolb
sbb
out
fisttpl
mov
je
ja
xor
push
mov
dec
pop
test
mov
std
in
das
das
pusha
mov
pop
push
shr
ds
sub
lret
cmp
mov
sub
cmp
xchg
scas
push
xchg
enter
andl
push
data16
push
jnp
dec
in
adc
jae
mov
dec
inc
sub
dec
pop
xchg
fs
mov
insb
sti
dec
pop
jle
lods
ds
pop
pop
imul
lds
ret
mov
sti
out
sub
jl
jg
int3
arpl
cmpsl
ljmp
and
fcoms
and
adc
das
ja
jmp
ret
sub
jg
or
push
nop
daa
test
sbb
mov
add
xchg
fsubr
push
in
sub
mov
or
stos
cmc
dec
fiaddl
or
sub
push
hlt
out
sub
mov
bound
mov
scas
add
pop
fisttps
mov
add
addr16
jmp
mov
shl
je
jno
xchg
xor
pusha
neg
dec
cld
xchg
bound
xchg
mov
mov
imul
jne
add
fimull
sbb
sub
mov
fistpll
sub
test
clc
pop
push
jmp
xchg
sbb
mov
sahf
loop
adc
push
sub
or
je
fs
xchg
insl
mov
dec
lea
mov
xchg
and
filds
sbb
clc
cli
xchg
mov
jl
push
icebp
aad
shl
mov
shll
sub
cmp
in
cmc
jmp
jl
popf
outsl
cmpsl
cmpsb
mov
movlps
dec
dec
xchg
pushf
and
push
mov
in
sub
fprem
std
inc
mov
je
fdivrs
loopne
xor
insl
sbb
pop
cmp
pop
ds
inc
push
sub
leave
mov
cmc
adc
mov
ds
shlb
or
mov
dec
in
and
lds
sbb
sbb
sbb
ss
add
adc
inc
js
dec
lods
push
fnstenv
jae
cmp
cs
sub
push
ret
fsubrs
lds
loopne
lret
sbb
mov
frstor
adc
jno
pop
insl
sub
dec
xchg
fsubs
leave
sub
out
mov
ljmp
pop
je
fiadds
xchg
mov
xlat
scas
in
test
arpl
lcall
fstpt
icebp
scas
cld
pop
cmp
outsl
push
aas
addb
lods
movsl
xor
cmp
pop
loope
shl
pop
xchg
pop
scas
jnp
aad
insb
xor
aas
popf
lods
mov
sbb
loope
dec
pop
dec
push
xor
pop
out
dec
aas
mov
jge
out
dec
xor
or
test
ljmp
push
cmp
rep
ds
sahf
adc
pop
dec
or
test
imul
cltd
testb
in
jecxz
in
xchg
pop
shrb
xor
inc
in
push
sub
ja
cs
xorl
gs
repz
sub
adc
bound
fisubrs
xlat
pop
push
data16
aaa
sbbb
mov
subb
jl
leave
testl
jno
sub
dec
xor
mov
fisubrl
fnsave
mov
adc
addr16
imul
sub
mov
std
js
testb
cwtl
xor
mov
leave
pusha
ljmp
and
dec
jge,pt
mov
and
mov
and
outsb
dec
mov
sbb
insl
cmc
cld
xchg
addb
mov
push
pop
out
mov
insb
lret
adc
mov
inc
sbb
rcrb
xor
cmpsl
stc
cwtl
cs
mov
stos
enter
int3
fdivl
sbb
cli
shll
leave
mov
add
cmp
push
adc
or
mov
outsb
imul
add
cmpsl
sahf
jb
dec
lods
dec
inc
sbbb
add
in
andl
push
jo
push
xchg
sub
and
xchg
ds
push
int3
mov
fists
inc
pop
xor
adc
mov
and
nop
mov
into
mov
cmpsl
sub
cmp
enter
xchg
inc
dec
daa
inc
das
jno
popa
mov
aam
sbbl
lods
xor
push
in
cli
inc
xchg
xchg
pop
jns
std
nopl
sbb
mov
fiadds
sbb
mov
xchg
pop
pop
push
data16
mov
lock
sbb
repz
sbb
clc
fs
pusha
xor
ja
add
jle
jae
ja
std
sub
rorl
mov
sbb
fwait
jne
aam
inc
lret
sbb
push
fidivs
jae
pop
mov
and
sbb
cld
icebp
lahf
scas
and
icebp
sbb
jge
xlat
data16
clc
mov
dec
js
repnz
adc
lcall
fcompl
sti
push
outsl
and
pop
repnz
mov
mov
push
xor
js
mov
jns
cmp
lock
ljmp
cmp
das
cmp
clc
les
sbb
andb
stos
sbb
or
xchg
call
cmpsb
movsb
jp
mov
dec
cwtl
clc
xchg
or
dec
and
clc
sbb
dec
int
dec
push
sbb
cld
pop
fs
loope
enter
ror
xchg
sbb
push
out
frstor
mov
mov
dec
rorb
pushf
or
mov
or
insl
pop
jmp
insl
cmpsl
insb
test
jno
shrb
out
es
fdivl
mov
out
dec
sbb
sbb
push
daa
ret
pop
dec
and
aas
dec
cli
in
fstl
cmp
xlat
divb
enter
cmpl
mov
rolb
adc
sbb
imul
insl
push
pop
pop
bound
fidivl
lret
data16
and
sti
or
std
add
imul
loopne
aas
loope
adc
pop
rolb
sub
and
in
pop
sbbl
xchg
adc
xor
mov
xchg
sub
pop
adc
jo
push
icebp
jno
out
add
xchg
add
test
pop
flds
cwtl
jnp
push
jns
adc
inc
and
jp
dec
xchg
cwtl
jne
and
push
sbb
fdivl
adcl
aad
pop
loop
idivb
sbb
mov
jb
cld
jl
test
mov
stos
mov
mov
push
xchg
rcrb
or
cmp
loop
loopne
sbb
inc
bound
icebp
cwtl
das
sbb
jno
mov
pusha
andb
aad
or
repz
aad
arpl
dec
inc
dec
pop
dec
push
mov
das
rorl
cmpsb
sbb
sub
std
push
jo
js
pushl
xor
add
popf
dec
and
aaa
addr16
popf
xor
ljmp
mov
pusha
sbb
in
mov
fildl
cmc
or
out
add
xchg
loopne
mov
ljmp
out
sbb
fsubl
stos
insl
inc
pop
in
jmp
hlt
lret
xlat
and
repnz
push
jmp
jns
jns
ljmp
adc
adc
fnstenv
shlb
mov
or
fists
addr16
repnz
jns
call
in
mov
lods
dec
sub
cld
adc
xor
pop
stc
cmpb
mov
subb
push
jmp
pop
pop
out
aad
jb
push
movsb
pop
mov
or
mov
mov
inc
ret
jnp
cld
push
and
pop
lret
sbb
xchg
mov
mov
popf
imul
test
in
inc
mov
movsb
jecxz
jecxz
dec
adc
mov
or
fs
push
add
insb
mov
push
lock
mov
jne
mulb
roll
out
cmp
sbb
je
aad
outsl
adc
pop
jl
xor
dec
inc
out
inc
in
push
mov
jmp
scas
scas
popf
sub
inc
mov
dec
cs
stc
aaa
pop
jp
jg
jg
jno
stc
shlb
mov
scas
pop
add
pop
in
mov
mov
cmp
mov
jnp
inc
popa
int3
pushf
xchg
mov
std
stos
inc
das
adcb
lahf
ret
inc
xor
or
fidivs
adc
fsubl
cmp
imul
js
hlt
stc
dec
lea
mov
loope
dec
pushf
mov
rcl
xor
loopne
fisttpl
cld
dec
enter
in
sub
push
insb
pop
stc
push
push
sub
jo
xor
cmp
mov
sbb
mov
sbb
es
dec
loop
inc
es
sub
lock
pop
push
xor
test
lret
aam
out
in
testl
pop
rcr
arpl
imul
sub
add
xchg
or
jae
fists
test
jecxz
imul
xchg
out
int
push
jns
mov
movsb
negl
ret
lahf
fwait
mov
ds
dec
cmp
cmp
cmp
jp
adc
xchg
in
lds
daa
mov
or
jecxz
add
rcrb
ret
test
jo
sub
mov
jb
int3
fcomps
aaa
aad
and
jo
sti
outsl
and
addb
orb
mov
sbb
fstps
adc
adc
xchg
lock
add
push
push
fcoms
add
popf
jae
imul
mov
add
addr16
mov
add
mov
mull
stos
adc
push
cwtl
test
scas
mov
inc
push
bswap
mov
stos
imul
cs
pop
cmpb
cmp
adc
push
cmp
cmp
lds
mov
ljmp
mov
arpl
mov
xor
popf
push
sti
ja
cmp
pop
in
lods
test
js
insb
jbe
adc
outsb
sub
xchg
sbb
fistpl
mov
cmpsl
sahf
arpl
xchg
pop
int
ret
call
jmp
movsb
dec
push
or
loop
ja
je
daa
mov
leave
sub
jno
push
push
int
dec
sahf
insl
cmc
jbe
int3
mov
in
and
sti
ficoml
mov
out
fadds
test
pusha
mov
iret
ss
cld
test
ficoms
jb
add
xchg
fstpt
adc
lds
mov
pop
jecxz
cmpb
cmovne
dec
or
out
xlat
outsl
dec
enter
cld
pop
jnp
movb
clc
inc
mov
ret
sbb
push
ljmp
ljmp
inc
mov
in
in
jecxz
xchg
jp
dec
and
lds
push
jno
mov
shrb
aam
jnp
push
sbb
mov
fsubrl
xor
inc
sub
cmc
or
dec
ret
popf
sub
iret
in
or
add
jae,pt
xchg
jmp
mov
jl
cltd
lods
sub
test
push
and
daa
test
cltd
aad
xchg
fwait
xor
sahf
mov
fbld
fisubrl
lahf
inc
loope
or
nop
dec
mov
getsec
popa
pop
scas
xchg
inc
ds
mov
lods
test
rcr
xlat
xchg
dec
pop
scas
jnp
cmc
adc
push
icebp
hlt
fistps
mov
push
je
adc
push
test
fcom
cmpsb
and
rolb
in
xchg
lahf
test
or
outsb
scas
jge
loopne
add
sub
leave
icebp
lahf
mov
nopl
jle
lods
jp
pushf
cld
icebp
inc
out
xchg
sahf
and
rolb
mov
cmp
xchg
mov
enter
mov
iret
adc
divl
xlat
push
bound
and
idiv
or
scas
and
arpl
jp
cltd
add
testl
out
xchg
xchg
aas
addl
mov
imul
aaa
mov
daa
inc
repz
mov
pushl
movsb
adc
push
mov
mov
cmc
rclb
adc
cmp
loopne
cli
xor
mov
fst
insl
paddsw
clc
out
fcompl
adc
push
movsb
imulb
out
push
ds
cmp
xchg
sbb
fisubs
dec
xor
pop
loope
lret
test
sbb
inc
inc
pop
push
popf
jnp
bound
sarl
or
fimuls
push
fildll
call
divb
mov
pop
or
jg
rorl
arpl
dec
adc
sub
sub
dec
and
cmp
fwait
sub
fwait
pop
jns
mov
mov
popf
sub
mov
out
push
scas
sbb
xor
jb
data16
xor
xchg
sub
adc
mov
pop
neg
shrb
aas
out
or
imul
insb
mov
adc
inc
outsb
insb
xor
nop
stos
adcl
and
mov
push
jmp
dec
pop
jno
add
out
xchg
enter
push
adc
ficoml
jl
lea
mov
jne
stc
inc
call
or
jmp
aad
addr16
andl
pop
loope
dec
icebp
xchg
mov
stos
jns
jp
jo
xchg
mov
test
imul
enter
add
and
pop
mov
out
lahf
inc
movsl
inc
andl
inc
and
fdivrp
add
test
lods
and
shlb
data16
popa
dec
lret
push
test
lret
out
clc
xlat
les
aas
mov
fdiv
jle
cmp
inc
pop
xlat
or
lea
mov
cmp
aam
sbb
arpl
pop
mov
shl
push
aam
fsubr
push
mov
pop
repz
lods
hlt
shlb
es
imul
or
stc
sbb
pop
push
jns
in
lods
lahf
stos
movsl
mov
js
outsb
loopne
pop
aad
jecxz
inc
ret
filds
scas
push
cltd
pop
mov
cltd
test
xchg
lods
xchg
lods
pushf
jnp
test
adc
hlt
idivb
inc
pusha
mov
dec
push
mov
mov
mov
sti
push
js
repnz
int
testb
shll
pop
jne
xor
pop
dec
jmp
pop
cmp
aas
divb
in
shlb
jb
sahf
xchg
pop
icebp
inc
fisubrs
xchg
add
dec
lahf
cmc
mov
xchg
je
mov
adcb
icebp
adc
mov
out
xor
fsubrs
push
mov
lcall
hlt
jge
push
lock
cld
das
pop
imul
push
xor
pop
inc
es
test
push
xor
mov
mov
xchg
xor
inc
mov
insb
mov
ljmp
add
out
pop
insb
imul
mov
xchg
lcall
jg
jl
push
xchg
xchg
mov
adc
jg
pop
sbb
aaa
pop
xor
das
fcom
aad
xor
or
es
pop
mov
dec
in
jbe
mov
stc
push
outsb
rcl
pop
pop
cmp
mov
pop
lock
jle
fsubr
inc
mov
cmpsl
push
cwtl
mov
movsb
test
fmul
fimuls
shl
mov
fildll
ja
push
xor
pop
call
xor
dec
or
stc
cmc
in
into
addr16
push
xchg
push
into
int
lret
jp
cmp
fimull
push
call
and
xor
cmp
xchg
addr16
xchg
testb
sub
and
imul
add
sbb
cld
sub
inc
jle
pushf
mov
stos
push
sub
dec
fdivl
xchg
add
cmp
adc
mov
jle
and
iret
fdivrl
leave
add
xor
push
push
cs
mov
mov
fistps
xchg
scas
mov
push
sbb
fsubp
jecxz
sbb
xchg
mov
sbb
call
out
cwtl
movsl
mov
int
add
push
add
shr
and
mov
test
push
mov
or
lods
inc
sub
daa
outsb
or
enter
leave
fcmovu
fstl
mov
aad
sahf
xlat
gs
hlt
out
adc
or
movsl
mov
fcomp
movsl
jg
sub
sbb
je
insb
adc
add
sub
xor
or
pop
add
test
mov
or
inc
pop
rol
int3
cmpsl
cli
addb
push
push
nop
rolb
std
cwtl
lods
xor
subb
ljmp
mov
or
test
aaa
add
dec
fisttpl
xor
les
aam
pop
push
jno
inc
xchg
icebp
mov
xchg
out
push
shlb
scas
out
push
and
dec
push
je
add
lret
mov
adc
mov
or
cmp
adc
dec
push
sbb
and
cld
push
fnstenv
mov
push
xchg
pusha
notl
add
mov
sbb
fadd
gs
sbbb
lods
adcl
mov
adc
lds
mov
insb
imul
push
inc
mov
int3
movsl
mov
stc
fdivl
and
adc
and
cltd
outsl
adc
push
cmpsl
fwait
out
sub
inc
fwait
lods
enter
int
out
cltd
xchg
daa
mov
adc
mov
adc
gs
sbb
inc
data16
aas
test
into
cltd
movb
out
clc
adc
lret
mov
mov
lret
dec
ss
and
xor
xor
jno
mov
sub
dec
hlt
in
rcl
add
add
fdivrl
xor
dec
xlat
mov
lea
jb
mov
adc
rcl
pusha
sub
jne
in
fsubrs
push
test
insl
je
add
cmp
repz
jmp
cmpsb
rorb
in
push
lods
add
fcmovu
mov
fisubrl
sub
push
and
popf
scas
and
aam
pop
cmp
pop
imul
dec
sbb
aam
pop
sub
cmp
mov
push
addr16
outsb
push
lds
dec
dec
sbb
mov
cmc
or
dec
jbe
ja
fnstenv
pop
push
jmp
xchg
push
jno
loop
mov
xor
movsl
fstpt
jne
cmp
and
andb
dec
fidivrl
inc
flds
jg
imul
loopne
xchg
mov
inc
fadds
aam
fstl
xor
pop
adc
push
jo
pop
or
repz
mov
inc
mov
xor
xchg
insb
shrl
lods
ds
sub
push
push
test
add
push
adc
cmp
sub
sub
sub
xor
mov
add
std
add
lds
iret
fsubp
out
psllw
add
cmpb
and
lahf
data16
mov
mov
push
pop
xchg
sbb
out
mov
insl
xlat
and
ds
xchg
sbb
imul
fldcw
pop
sub
aaa
cmp
sub
pop
loopne
call
cmp
mov
aaa
pop
repnz
mov
jp
push
adcb
jge,pt
push
es
adc
mov
xchg
xchg
sbb
fidivs
jge
test
out
push
imul
lds
fldcw
adc
cmp
sbb
and
add
stos
mov
ret
outsl
jno
xchg
stos
sub
imul
repnz
xchg
mov
push
out
add
xchg
xor
jmp
fs
mov
jl
adc
jb
or
insb
xor
push
dec
cmc
sbb
jl
popf
out
fstpl
xchg
push
mov
xchg
ss
lds
cwtl
add
aaa
inc
and
jg
nop
cmp
sbb
mov
push
sbb
cmp
sub
stc
fsubl
dec
dec
mov
push
fsubrs
repz
jns
xor
aam
cmp
xor
jmp
stc
repz
rcrl
mov
adc
jmp
mov
xor
mov
test
pop
dec
dec
sbb
andl
mov
test
lods
pop
ss
cwtl
rcrb
mov
jb
imul
add
test
data16
pop
fcoml
shll
mov
hlt
filds
sub
mov
les
je
cmp
movsb
add
je
and
inc
movsl
lret
jecxz
cmc
adc
out
aam
add
jge
cmc
fstps
sbbl
out
xchg
mov
add
add
jp
or
mov
cmp
fs
dec
rorb
outsb
sbb
rorl
xor
sub
insl
push
pop
xor
mov
mov
cmp
xlat
stos
jg
loop
aam
cld
imul
cmc
jl
out
pop
dec
cmpsl
test
push
imul
mov
jl
inc
push
sahf
mov
xor
in
sub
dec
jae
loop
inc
pop
jb
xchg
sub
sub
cmp
and
dec
cli
int3
pop
mov
adc
xor
arpl
push
movsl
stos
aam
mov
push
lods
inc
cmpb
je
push
rol
xchg
pop
aam
adc
jae
xor
mov
cmp
jmp
or
outsb
out
mov
sar
ds
pop
jo
andl
es
xchg
jmp
xchg
jmp
pop
add
xchg
cmp
insb
push
fs
mov
cmp
mov
fisttpll
mov
cmp
test
clc
xchg
cltd
int3
xchg
mov
jae
shl
cmp
mov
fidivrl
shrb
pusha
mov
or
push
in
lret
jne
jecxz
jmp
mov
pop
mov
leave
xor
mov
rcr
jb
cmp
add
xchg
pop
mov
mov
and
mov
aam
loop
sbb
push
pop
jg
aaa
imul
cmp
rolb
push
add
dec
cmp
push
es
gs
mov
mov
jle
mov
roll
cmp
dec
movsl
cmp
pop
lcall
mov
les
mov
adc
pop
adc
push
xchg
ljmp
mov
imul
rcrb
xchg
sub
and
dec
xchg
push
pushf
insb
xchg
pop
or
push
jmp
mov
sbb
jle
pushf
popa
test
ljmp
mov
imul
rcrb
xchg
sub
les
or
xchg
int3
mov
jmp
js
stos
inc
mov
inc
adc
jno
int
rolb
loop
movsl
fwait
das
aad
je
aam
outsb
insl
jae
testb
cmp
or
cmp
add
mov
cmp
pop
std
mov
out
ret
cltd
push
mov
mov
rorb
shr
fwait
pop
test
jle
jo
mov
pop
cli
xchg
inc
sbbl
sub
test
lods
int3
add
sarl
xchg
fwait
xor
sbb
dec
xor
stc
pop
ja
ret
push
add
or
leave
xchg
adc
inc
fs
xor
cmp
inc
sahf
xchg
int
jne
cmp
jno
in
nop
or
cli
or
xlat
popf
xor
push
mov
push
je
fs
cmpb
inc
inc
adc
stos
inc
add
and
mov
mov
mov
lods
subb
rcll
mov
jb
dec
cmp
xchg
or
sbb
fists
sbb
and
andb
outsl
pop
dec
add
pop
jg
scas
ficoms
mov
fildll
arpl
sub
in
mov
in
cltd
pop
push
cmpb
sarl
and
xor
push
mov
cltd
insb
jg
test
incb
mov
pop
push
or
pop
fdivrs
cld
or
dec
sub
jno
cmp
xchg
xchg
dec
loop
mov
imul
xchg
add
mov
pop
bound
and
in
mov
sarb
aas
aad
pop
jecxz
add
outsl
aas
bound
movsl
cmp
orl
push
sbb
sbb
fcomi
inc
andb
lods
adc
stc
cmp
push
fidivl
push
cwtl
jl
mov
call
jns
and
inc
jns
cmp
jg
repz
es
cmp
lods
add
xchg
sub
xchg
int3
fadd
je
ja
aad
fmuls
mov
xchg
sahf
or
idiv
ss
sahf
add
pop
pop
pop
dec
loope
clc
jecxz
jecxz
push
cwtl
idivl
sbb
dec
int
cmp
push
rcrb
mov
lret
push
dec
jecxz
movsl
cmp
pusha
mov
loop
mov
jecxz
insl
movsb
cmp
mov
dec
loop
into
movsb
cmp
iret
movsb
cmp
and
and
int
cmp
enter
sub
dec
in
frstor
cmp
jbe
loop
mov
movsb
push
lret
stos
inc
push
xchg
loop
lcall
inc
loop
dec
inc
loop
push
enter
ret
fs
scas
xchg
mov
aad
mov
or
sub
mov
sbb
xchg
jno
popa
fsubl
sti
call
shrl
push
in
sub
jbe
mov
mov
repnz
loop
push
pop
inc
in
mov
repz
int3
das
fadds
adc
jnp
sbbl
cmpl
lds
movsl
es
pop
push
mov
jo
and
fsubrl
cmc
mov
andb
test
leave
sbb
enter
adcl
out
js
lods
lea
repnz
dec
in
ljmp
jge
or
mov
push
call
arpl
mov
pop
sub
cli
adc
dec
gs
aas
test
test
add
mov
cmpsl
movsb
loope
pop
in
pop
sub
dec
divl
cmp
pop
jbe
insl
int3
inc
dec
inc
push
cs
loope
jp
aaa
stos
inc
imul
jb
lods
adc
fsubr
js
pop
dec
je
jge
xchg
call
flds
sbb
adcb
mov
add
stos
mov
movsl
imul
jmp
jae
dec
inc
mov
mov
in
pop
insb
imul
pop
movsl
sbb
mov
lcall
jl
inc
out
and
je
outsl
mov
xchg
adcl
out
cmp
dec
lcall
xchg
dec
inc
lret
enter
pop
arpl
add
int3
shll
cmpsb
ds
cmp
mov
aas
lds
ret
ficompl
dec
inc
in
test
mov
fmull
adc
or
popa
cltd
or
add
pop
inc
sbb
iret
ja
dec
mov
je
cmpsl
inc
flds
add
addr16
icebp
xor
cld
or
aam
imul
icebp
enter
pop
mov
stos
jp
jnp
mov
fcmovbe
sahf
or
cld
rcl
mov
cltd
ljmp
and
pop
mov
push
out
lock
leave
fidivs
stos
mov
fsubrl
jne
mov
mov
in
movsl
lods
xor
add
push
movsl
in
call
dec
jne
and
push
dec
and
aas
sti
sbb
mov
jbe
pop
test
aas
xlat
lret
pop
and
es
inc
inc
loope
aad
inc
inc
test
pop
mov
and
push
sub
sbb
and
rcrl
jl
dec
xchg
cmp
in
add
push
pop
jbe
mov
adc
xchg
mov
ficoml
mov
adc
mov
cs
xchg
jp,pn
enter
into
ds
jns
or
mov
lods
inc
fs
mov
cmpsl
and
sbb
js
mov
mov
dec
mov
stos
inc
add
xlat
nop
dec
lds
jl
sbb
fstpt
aad
mov
jp
dec
rol
mov
fnstsw
int
cmp
cltd
je
xlat
mov
mov
or
sbb
outsl
dec
arpl
xor
roll
pop
out
ss
mov
test
mov
aam
push
cmp
mov
cld
add
sub
test
adc
xor
bound
xor
out
adc
lcall
mov
push
cs
xor
sahf
stos
loop
mov
shlb
or
add
push
jp
cs
imul
movsl
inc
addr16
shl
loop
push
pop
sub
rorb
add
cmp
mov
aad
or
lret
push
push
cs
hlt
jnp,pn
push
in
addb
inc
out
icebp
xchg
test
mov
imul
fnsave
test
lret
adc
jmp
mov
clc
enter
xchg
out
stc
or
repz
call
ss
jb
jp
js
mov
clc
jg
push
into
mov
add
inc
in
ror
dec
cltd
pop
fildll
xchg
add
dec
add
jbe
pusha
sub
rorl
ret
pop
out
push
inc
repz
or
je
push
mov
mov
adc
int3
cmp
stos
aas
lds
subl
in
mov
sbb
inc
inc
mov
jae
ret
and
test
mov
popa
iret
inc
arpl
push
and
jge
pusha
arpl
jne
jge
jmp
push
out
or
imul
pusha
sbb
jecxz
push
mov
jmp
scas
sub
lret
andl
inc
jle
call
pop
push
dec
cli
daa
ds
push
ss
pop
or
or
adc
pop
mov
fisttpll
jne
jecxz
mov
inc
scas
push
divl
mov
out
lea
aas
mov
daa
popl
inc
and
mov
mov
fsubp
pop
test
add
imulb
mov
pop
xor
cmpsl
jecxz
fadd
ss
stc
jno
mov
mov
sbb
shll
add
mov
and
int3
sbb
sbb
push
push
pushf
and
test
jle
jg
aas
mov
inc
jmp
cwtl
cmp
cmp
mov
movb
in
cli
jns
cmp
sbb
cmp
cmp
dec
hlt
adc
inc
add
js
outsl
jmp
inc
dec
xor
jae
xor
mov
mov
movsl
cmpsl
add
inc
in
sub
fmull
push
jmp
mov
jp
or
pop
nop
js
sbb
scas
inc
sbb
ficoms
fstpl
dec
insb
imul
jp
and
pushf
out
arpl
adc
aam
sub
leave
ds
cwtl
lcall
cmp
sub
imul
pop
sub
mov
out
out
aam
pop
and
mov
out
sbbb
pop
jno
lods
sub
dec
xor
je
pop
loope
lods
hlt
push
adc
movsl
xchg
jae
movsl
sub
inc
loop
pop
stos
rorl
sub
iret
lea
out
test
add
stc
repnz
add
xchg
and
inc
adc
cli
nop
xchg
ljmp
adc
sahf
mov
adc
xor
test
shlb
cld
aas
shrb
hlt
mov
pushf
dec
mov
jns
lods
stos
mov
ja
mov
fbld
add
sbb
or
jge
cmc
ja
mov
movsb
lds
sub
repz
inc
xor
push
push
jmp
mov
enter
data16
scas
push
sub
push
mov
push
push
jb
mov
push
repnz
movsb
cmp
mov
ret
inc
mov
and
push
popa
jg
adc
xor
int
fstpt
mov
sub
jecxz
mov
and
jle
add
int
sub
lret
inc
cmp
inc
enterw
sub
mov
push
adc
cwtl
dec
sahf
orl
mov
loopne
xor
jbe
addl
dec
and
aad
lret
stos
push
test
dec
fdivl
shrl
les
in
test
insl
repz
add
xor
and
cmp
jmp
lea
test
cld
mov
pop
jle
or
jle
leave
mov
sbb
lea
cmpsl
mov
daa
in
adc
out
arpl
sbb
add
jae
pop
mov
test
ss
pop
push
mov
int
movsl
jmp
dec
mov
mov
mov
int3
scas
outsb
sti
add
mov
data16
les
adc
cltd
xchg
push
push
mov
mov
cmpsl
sub
iret
and
arpl
mov
faddl
jp
out
mov
pop
dec
mov
int3
insl
scas
pop
lock
mov
inc
daa
xor
xorl
ret
jmp
icebp
imul
fbld
push
daa
add
jnp
in
pop
xor
mov
stc
lods
js
cmp
xor
ret
hlt
cmp
out
cmp
jmp
ds
ss
push
lods
dec
mov
int
in
xor
inc
mov
jmp
je
out
lods
inc
push
stc
add
mov
int
sub
fadds
aaa
push
addr16
add
iret
stos
and
out
fsubl
icebp
imul
pop
adc
nop
add
rcr
mov
nop
add
shl
outsb
mov
ret
mov
xor
mov
inc
push
rcrb
mov
or
js
loopne
daa
mov
ljmp
or
stos
inc
int3
ja
mov
mov
stos
pop
xchg
push
int3
cmp
dec
je
pop
das
mov
or
inc
rcrb
das
inc
es
mov
fs
add
cmp
jle
outsl
jl
push
in
shlb
rcrb
sub
idivb
fcoml
dec
push
fwait
or
pusha
ss
nop
stc
cwtl
push
push
loopne
out
cs
fists
xchg
inc
sub
dec
push
push
lcall
mov
mov
mov
clc
sahf
pop
aad
scas
push
imul
pushf
xor
loopne
nop
out
ret
mov
add
jle
fidivs
inc
pop
and
rclb
add
inc
mov
in
push
ljmp
xchg
mov
or
pop
or
push
sahf
clc
xchg
popl
xor
call
sub
outsl
pop
cmp
ffree
dec
dec
outsb
inc
bound
testb
imul
dec
mov
in
and
add
mov
add
movsl
lds
lcall
jo
and
loop
adc
inc
enter
and
and
out
xchg
cmpl
aad
decl
mov
aam
mov
and
shr
cltd
add
pop
mov
sub
or
mov
mov
xlat
mov
stc
mov
lret
das
add
fbstp
popa
rcll
jae
jno
repnz
jo
inc
pop
fstl
mov
or
je
daa
fs
mov
mov
fisttps
mov
insb
adc
mov
mov
or
mov
pusha
out
nop
pop
cmp
jb
mov
lret
cmpsl
bound
out
lcall
mov
or
sub
paddusw
test
pop
dec
out
into
icebp
xchg
sub
push
in
mov
adc
mov
xlat
cs
jmp
jge
stos
push
popa
fcompl
push
js
out
sub
fmuls
jp
cltd
out
mov
push
in
jnp
ret
mov
aad
and
or
std
and
movsb
jmp
movsb
sub
aad
cmpsb
out
cwtl
pop
dec
and
mov
js
jg
out
mov
mull
in
cmp
lahf
addb
fmull
mov
jae
iret
movsb
cs
add
lcall
cld
xchg
ja
push
mov
xchg
cmp
add
int3
mov
ljmp
push
push
dec
adc
dec
mov
ret
outsb
xor
mov
add
fwait
popf
sbbb
movsb
jecxz
aad
lahf
out
xor
pop
push
js
shl
xchg
pop
mov
jno
ja
cwtl
test
add
test
push
into
fiaddl
in
push
mov
andb
mov
cmp
adc
outsl
add
sbb
sbb
loope
mov
jg
jl
cli
loopne
sbb
dec
lret
fadds
fbstp
jge
jmp
adc
jns
cmp
fimuls
lret
push
inc
mov
mov
mov
ficomps
inc
sub
std
in
inc
and
mov
sub
jl
pop
pop
je
scas
push
int
stc
mov
es
cmpsl
cmpsb
iret
or
imul
cmc
mov
in
mov
roll
icebp
mov
cltd
add
mov
daa
lea
pop
rcl
dec
dec
pop
popa
pop
repnz
mov
loope
ja
sbb
cmp
and
imul
outsl
or
das
mov
xor
aad
out
xchg
jns
xlat
lcall
jmp
aas
pushf
fs
jns
out
xor
imul
pushf
dec
push
icebp
xor
mov
cld
or
pop
mov
inc
enter
test
push
scas
xchg
or
loop
inc
data16
mov
ret
sahf
dec
pop
mov
push
clc
push
lock
jo
or
sub
jne
add
lods
xor
jnp
es
and
push
or
jge
mov
mov
jb
lea
dec
lea
jo
mov
cli
es
mull
adc
sbb
sbbl
movsb
imul
xchg
dec
or
lock
xchg
loope
cli
in
iret
lock
icebp
adc
push
pop
rol
ret
loope
out
xor
out
test
push
shrb
add
ficomps
pop
xchg
std
pop
mov
insl
adc
rorb
mov
imul
xchg
inc
fcmovnb
add
mov
stos
or
push
into
dec
xlat
gs
jae
stos
subl
jp
cmpsb
test
or
insb
mov
test
inc
pusha
inc
xlat
rolb
add
aad
jg
jge
iret
stos
push
ja
jmp
cmpsb
xchg
pusha
mov
outsl
pop
or
jecxz
cwtl
pop
and
sub
push
out
push
ss
pop
pop
xchg
aas
add
jl
pop
sahf
jecxz
shl
andb
clc
lds
sbb
popf
jl
leave
movsl
or
lret
pop
aaa
sub
pop
xor
jmp
xor
shlb
aas
fld
adc
and
aas
lods
xor
cltd
imul
stc
mov
push
incb
dec
xchg
in
push
push
ds
xor
into
popa
sub
insl
xor
inc
mov
mov
aad
in
mov
idivb
cmpsb
pop
or
jecxz
ja
dec
push
cwtl
jle
lret
adc
push
dec
fstp
cmp
dec
sub
adc
loopne
mov
shrl
xchg
sub
adc
call
fidivrs
add
or
dec
or
and
pushw
lods
into
inc
movsb
xorl
xchg
mov
lret
je
sub
clc
popf
xor
or
inc
mov
popf
pop
sub
ds
dec
lahf
scas
adcb
imul
mov
xor
fldenv
leave
aad
test
inc
imulb
aad
fpatan
mov
cmp
pop
cltd
add
sahf
jmp
out
inc
popa
outsl
jecxz
cwtl
sub
nop
cmpsl
sub
dec
mov
add
sbbl
cmpsb
outsb
jl
sbb
movsb
sbb
pusha
mov
pop
adc
cmpsb
les
shrl
cmp
jl
int3
jns
lcall
dec
xchg
scas
outsl
inc
cs
std
jp
out
mov
stos
push
mov
ret
in
xor
add
or
and
iret
lcall
or
sti
popf
xor
das
nop
pop
sbb
fs
pop
jb
or
inc
push
xor
xchg
mov
pop
lret
push
mov
ja
data16
arpl
into
sub
mov
pushf
and
sub
ret
pushf
mov
repz
pop
or
jecxz
xor
mov
ret
dec
in
or
jle
lret
in
sahf
fidivrs
mov
push
push
cwtl
and
sahf
xor
test
shlb
adc
call
fistps
mov
push
popa
mov
aam
sub
clc
xchg
cmp
dec
int3
fimuls
sub
mov
fsub
jecxz
lahf
cmp
arpl
add
and
adcb
loopne
jecxz
jo
push
xchg
out
js
mov
mov
and
fists
adc
outsb
pop
sahf
mov
mov
bound
addr16
push
lret
addr16
ljmp
jno
mov
inc
push
fistpl
adc
cmp
jle
lret
sub
lahf
pop
cmc
ljmp
xor
fs
cltd
test
aas
inc
jns
xor
aaa
dec
imul
inc
insb
ss
loop
lret
xchg
notb
mov
sbb
aam
fnsave
repz
add
stc
push
add
cmp
nop
out
jne
dec
notb
test
aam
sahf
scas
js
or
inc
push
jne
jmp
push
and
xchg
push
jbe
push
addb
sbb
add
inc
addl
and
push
inc
xchg
lcall
test
arpl
fs
mov
cmp
cwtl
das
loop
mov
aas
mov
dec
and
jg
mov
cmpsb
dec
roll
loope
and
decb
shrl
insl
test
fisubrl
loopne
inc
and
mov
out
pop
lea
insb
xchg
sbb
jge
mov
aad
aad
ss
add
xchg
jbe
and
lret
pop
insb
test
mov
int
mov
xchg
scas
cmp
sub
cmp
sub
xlat
decl
mov
bound
fimuls
ja
fistl
addr16
cmp
add
mov
and
mov
cli
jne
pop
sti
sbb
pusha
stos
nop
fisttps
js
and
inc
div
or
stos
lea
inc
xor
js
cltd
sub
dec
add
into
mov
vpaddsb
jbe
xchg
or
clc
add
bound
dec
inc
aas
int
gs
addr16
jb
mov
rcr
mov
push
and
jo
mov
adc
jbe
jb
lahf
push
daa
sbb
jle
repnz
pushf
sub
addps
push
lcall
mov
js
lock
xor
and
dec
cs
pop
loop
scas
jb
sahf
sub
cwtl
enter
call
sbb
sti
pop
mov
stc
lods
ret
cmp
jae
sub
cltd
lahf
loop
sub
lahf
xor
mov
push
mov
into
jno
loop
ds
mov
pop
mov
fiadds
lret
cwtl
out
in
ss
lods
push
loope
les
mov
test
adc
outsb
inc
push
mov
arpl
cltd
sub
lret
leave
jmp
loopne
cli
push
inc
push
xchg
dec
pop
int3
inc
popa
ds
repz
imul
mov
lds
pushf
aam
cmp
out
das
jo
inc
cmpsb
inc
pushf
imul
stos
loopne,pn
in
pop
dec
jno
mov
cmpsl
sbb
dec
xchg
dec
xor
mov
xlat
aad
unpckhps
pop
cmpsb
iret
xor
aas
dec
sti
mov
adc
sbb
pop
push
dec
mov
ja
fs
fcmovnb
leave
pop
push
sub
ja
mov
lcall
dec
int3
mov
stos
jae
jb
icebp
scas
bound
or
mov
mov
sub
xlat
jbe
mov
ret
cmc
daa
sub
pop
push
jecxz
repz
insl
pusha
shrl
aad
leave
cmp
push
mov
push
jmp
into
or
fstps
xchg
movsb
inc
pop
fidivs
mov
fnstsw
cmpsb
pop
lock
push
pop
or
sbb
push
test
push
and
inc
fcmove
mov
scas
loop
popa
cmp
or
mov
in
add
int
ret
fldcw
ret
loope
xor
scas
mov
xchg
shlb
cmp
arpl
pushf
sub
or
mov
inc
mov
fisubl
in
pop
push
adc
push
in
js
shrb
jecxz
lret
fdivrl
pop
imul
xor
push
xor
aas
fdivp
test
pop
imul
int3
out
xchg
stos
adc
arpl
test
ljmp
mov
jno
imul
cmp
bound
jmp
fildll
and
in
test
repnz
sub
out
dec
mov
sbb
sub
mov
sbb
or
mov
popa
xor
xchg
loopne
fwait
iret
push
ret
or
scas
jns
fmuls
jecxz
sub
out
mov
sub
lret
or
cmp
sbb
mov
adc
fcompl
nop
jmp
add
inc
sub
adc
add
aam
xor
mov
vmovdqa
jl
iret
xor
mov
out
inc
out
dec
and
push
inc
or
jle
stos
out
fisubl
mov
xor
cmp
mov
pop
lock
ja
cmp
fsubl
dec
xor
pop
outsb
mov
incl
mov
out
sahf
lds
sbb
cmp
sbb
paddsb
mov
mov
in
aam
pusha
push
mov
shrl
pop
subl
scas
pop
movsb
loope
mov
stos
push
dec
decl
movl
pop
fidivs
cmp
notl
jns
test
shl
jnp
lahf
lods
jb
dec
jecxz
es
pop
data16
shlb
aad
cmpsb
cld
bound
mov
dec
jle
mov
cli
bound
push
sbb
adc
in
div
psraw
mov
xchg
loopne
stos
push
arpl
hlt
jnp
pop
add
addr16
pop
call
inc
mov
jp
mov
js
addr16
fisubrl
fdivrs
addr16
inc
mov
addr16
mov
xor
mov
mov
mov
std
jo
pop
xlat
arpl
add
jbe
push
sub
sbbl
pop
insb
icebp
cld
mov
fs
xchg
fmul
repnz
cli
std
or
inc
xor
jp
sbb
pop
pop
mov
loopne
mov
xor
jge
cmp
push
adc
cli
xchg
ret
mov
sbb
aad
xchg
jle
inc
jno
ja
sub
js
jmp
data16
and
mov
adc
rorl
ret
sbb
test
mov
mov
int3
repz
loope
test
loopne
orl
add
jo
cwtl
ljmp
fmulp
bound
push
push
inc
fistl
and
in
add
dec
mov
je
adc
sbb
psubusw
pop
pop
adc
xchg
orb
dec
sbbl
mov
or
movq
outsb
ret
cmpsl
sbbl
pop
ja
lcall
fisubl
mov
dec
adc
jecxz
push
insl
int
lahf
aaa
add
icebp
inc
jp
xor
cwtl
fdivrl
jmp
retw
cmp
hlt
xchg
lea
cltd
aas
or
sti
xchg
sub
hlt
mov
enter
jle
in
pop
out
sub
or
ret
pusha
div
push
pop
fisubrs
mov
int3
loopne
decb
lcall
and
stos
xchg
xlat
pop
lock
es
pop
fstpt
or
push
ljmp
test
mov
mov
lret
cli
addl
dec
rcrl
or
repz
cmp
cmp
mov
les
aam
adc
mov
sbb
nop
daa
cmp
adc
mov
jbe
add
lds
pop
ds
xchg
pop
push
out
lea
loope
shl
shrl
hlt
call
jbe
aad
andl
mov
testb
and
iret
data16
out
sbb
jne,pt
insb
repnz
and
cmp
and
jno
and
jno
iret
data16
icebp
mov
fmuls
cmpsb
or
les
and
push
inc
dec
in
ret
hlt
xchg
insb
add
adc
mov
jg
add
push
popf
pop
out
xchg
mov
ja
pop
adc
sub
lahf
lcall
jge
rol
bnd
js
dec
das
push
popf
pop
loopne
xor
mov
mov
popa
or
pop
and
and
cmpsl
dec
mov
jle
push
call
shlb
lock
inc
push
movsl
jae
sti
xchg
call
lds
dec
in
imul
xor
retw
mov
stc
test
dec
rorb
pop
insl
int
fwait
rclb
jae
lock
inc
movsl
adc
outsl
dec
enter
insb
fdivl
sbb
lock
imul
paddsw
pop
xchg
sub
stos
stc
nop
loope
ljmp
lret
lcall
in
lea
mov
push
fdivl
scas
movsb
std
adcb
mov
hlt
dec
push
mov
adc
push
shlb
xchg
icebp
mov
daa
shl
testb
jge
out
xchg
sbbb
scas
inc
xchg
in
or
sbb
dec
fbld
cmp
add
lods
test
pop
repz
decb
and
mov
mov
adc
cltd
add
pusha
neg
and
insl
ja
cli
xchg
add
push
add
jno
pop
mov
stos
fsubrs
push
sbb
jb
adcb
lods
mov
loopne
out
xchg
push
jmp
ficompl
ja
adc
inc
xor
fdivrl
adc
xchg
cs
sub
sbbl
pop
cmc
repnz
incl
or
or
nop
daa
repnz
mov
or
sbb
ja
sub
xchg
pop
xlat
cli
xchg
push
leave
cmp
sti
push
inc
fimuls
adc
push
pop
sahf
push
lret
cli
push
mov
pop
push
aad
mov
sti
sbb
jo
push
aad
orb
cmpsb
cmp
inc
sub
mov
ret
add
aas
cs
lds
mov
push
fdivl
sub
jae
in
adc
out
cmp
cs
shrl
test
sub
fidivs
cmp
nop
daa
daa
scas
outsb
add
sub
fnstenv
clc
push
loope
clc
daa
inc
int3
arpl
sub
mov
je
dec
fildll
lods
mov
sub
add
and
cld
mov
xor
hlt
mov
jb
sbb
fnstenv
xor
imul
adc
hlt
mov
push
mov
xlat
add
out
adc
jbe
cmp
imul
repnz
mov
adc
insb
js
pop
mov
shrl
cmp
aad
or
hlt
mov
jbe
outsl
jno
mov
arpl
dec
inc
fidivs
loopne
nop
adc
add
adc
dec
cld
xchg
jle
out
and
hlt
fidivs
dec
push
test
loopne
shrb
aaa
sbbb
add
int
loop
test
aas
fidivl
pop
mov
ss
add
push
push
xor
ds
push
mov
in
dec
out
daa
into
gs
cmc
mov
sub
xor
icebp
inc
imul
sbb
adc
jnp
shlb
inc
fiadds
dec
daa
mov
pop
xchg
ja
jl
data16
call
testb
and
mov
fidivrl
xor
addr16
testb
mov
ficoml
dec
loop
and
xor
ja
mov
cmp
xchg
jge
or
xchg
sub
jmp
mov
stc
jg
sbbl
lret
es
out
adcb
jbe
cli
mov
shl
notl
repnz
and
cwtl
cmp
jae
mov
cli
xchg
mov
fld
pop
subps
mov
adc
pop
stos
jno
loopne
sub
jne
call
in
fnstcw
mov
leave
pusha
jne
sbbb
xchg
int
sbb
mov
or
sub
mov
and
enter
dec
pop
xchg
sub
scas
mov
fnsave
out
xchg
or
rorb
jnp
icebp
mov
xchg
dec
in
dec
add
push
sbb
addr16
addr16
hlt
adc
stc
nop
adc
test
dec
xchg
mov
push
test
push
pop
cli
addr16
cmpl
jge
mov
shrl
sub
pop
repnz
lods
dec
insb
cmpl
dec
sti
xchg
cs
pop
inc
in
push
adc
pop
cltd
xor
bound
adc
icebp
mov
add
sbb
ret
sbb
dec
cwtl
cmp
insb
mov
jmp
mov
loopne
movlps
scas
mov
clc
lods
jnp
fiaddl
das
xor
loopne
add
mov
adcb
xlat
js
mov
int3
adc
je
xor
aam
fs
repnz
jge
sub
inc
mov
jne
inc
xlat
cmp
or
adc
aas
movsl
cmp
sti
xchg
sub
incl
sub
inc
int3
arpl
repz
xchg
ljmp
in
repz
jns
sbbb
popf
movsl
cmp
xchg
mov
int
sbb
mov
add
outsb
and
insl
xor
jb
orb
test
ss
movsl
or
or
fcompl
cmp
mov
faddl
ljmp
adc
movhps
jns
push
les
push
jne
pop
leave
call
cmpsl
sub
jle
adc
mov
loop
cmp
out
shl
out
cld
shll
adc
fists
mov
xor
xchg
fsts
mov
ret
hlt
cld
sub
mov
jmp
jp
sahf
and
xchg
sub
stos
out
ss
mov
fdivrl
out
pop
adc
sbb
imulb
mov
or
aam
out
jnp
cld
pop
les
movsl
mov
add
pop
mov
sti
mov
mov
mov
pop
into
loopne
mov
in
push
cmp
test
sub
and
mov
fimull
fistpll
adc
out
insb
rolb
lods
push
mov
and
mov
jns
rcrl
xor
out
push
shrl
lret
cmp
lock
dec
lahf
or
es
lds
in
pop
adc
popf
lret
jne
ficoml
xchg
and
push
xlat
mov
lds
hlt
ds
dec
out
pop
sub
pop
mov
fisttpll
or
mov
outsl
mov
sub
in
roll
add
xchg
mov
adc
scas
inc
movsl
cmpl
xchg
lcall
mov
adc
ret
icebp
dec
sub
bound
add
mov
cmp
cltd
fsubrs
leave
leave
push
xlat
out
add
mov
pop
push
or
pop
fmuls
call
fisttpll
and
lock
test
cmp
lret
pushw
sbb
mov
and
xor
mov
fucomi
and
inc
imul
dec
inc
int3
dec
push
lret
dec
movsl
dec
sub
stos
mov
dec
idiv
icebp
mov
sbb
out
cld
ret
push
lret
jle
repz
mov
cmpb
lea
scas
jbe
dec
insb
cltd
dec
sti
int3
cmp
out
fisttpl
lods
pop
out
stc
into
test
fdivrl
lds
mov
jmp
cld
mov
jle
pop
in
adc
repz
mov
repnz
inc
pop
lahf
arpl
es
and
mov
movsl
je
rsqrtps
xchg
pop
add
pop
out
sti
lds
clc
xchg
ret
loope
inc
fcmove
add
mov
shlb
or
icebp
addr16
pop
mov
mov
cmp
cmpsl
mov
aas
imul
or
test
je
mov
in
inc
mov
lods
hlt
push
out
in
nop
mov
lods
xor
psrlw
add
call
or
repnz
pop
mov
out
and
mov
pusha
cld
in
shlb
test
pusha
test
push
leave
xchg
xchg
jmp
daa
loop
push
push
clc
enter
mov
adc
mov
les
and
iret
rorb
ficoms
fstpl
push
sub
adc
shl
add
add
pop
ror
pop
dec
loop
jmp
mov
in
push
lret
testl
cltd
lahf
pop
repz
and
lahf
arpl
mov
nop
mov
out
out
mov
icebp
sub
pop
sahf
xor
dec
pop
push
mov
push
dec
mov
push
push
sub
dec
xor
jno
cmp
xlat
jnp
inc
loopne
aas
testb
mov
fcoms
repz
or
cmp
sbb
lods
iret
out
xor
loop
bound
in
popf
mov
push
jmp
mov
leave
cmp
adc
adc
xchg
leave
push
xor
lods
inc
xchg
loop
or
in
gs
gs
daa
xor
inc
xchg
insb
addl
pop
je
pop
imul
add
jns
mov
sub
int3
xor
ljmp
aas
icebp
and
and
bound
sbb
dec
xor
push
das
cs
jnp
add
insl
lahf
jo
sub
fdivs
orl
fs
dec
and
push
lcall
jp
scas
push
aas
jmp
xchg
sub
add
rcrl
cltd
loopne
cmp
aad
popa
ljmp
mov
out
pop
jns
xchg
pop
pop
xlat
outsb
ds
push
dec
pop
push
adc
aas
pop
mov
push
out
addr16
pop
cmpsl
test
inc
mov
jae
xchg
push
mov
psubw
lcall
les
sarb
ljmp
arpl
xchg
xchg
cs
fldl
sti
lret
xor
push
out
add
sbb
cmp
mull
mov
fsubl
dec
cli
push
jmp
push
cmpsb
xor
mov
adc
es
pusha
scas
cmp
stos
pushf
pop
ss
pop
sbb
cltd
pop
adc
imul
adc
out
sbb
shll
mov
lret
pushf
data16
dec
push
xor
push
cmpsl
inc
cltd
mov
dec
test
lock
pop
mov
imul
stc
mov
adc
mov
int3
pusha
pop
sub
jno
sbb
pop
mov
movsb
pop
xor
jmp
mov
shl
movsb
pop
inc
add
mov
jg
cmp
cmp
out
mov
or
xor
daa
idiv
cmc
sbb
cmpsb
divl
add
fisubrs
mov
mov
push
into
cmpsb
push
dec
push
hlt
jecxz
and
mov
out
scas
sbb
cmp
mov
or
jle
pop
aam
push
pop
mov
push
shrb
jne
pusha
dec
pop
pop
lret
mov
enter
push
out
dec
shll
dec
cmp
jae
lock
mov
shl
jno
pop
push
scas
sub
pop
pop
popf
adc
cmpl
cmpsb
scas
rclb
dec
ret
fwait
mov
movsb
cmp
insb
hlt
stos
push
scas
or
hlt
sub
xchg
jb
add
lret
mov
adc
push
mov
rcrl
enter
gs
sub
adc
push
push
adc
xchg
stc
sub
stos
mov
push
mov
movsl
mov
loop
cmp
test
inc
loop
mov
sub
imul
scas
stos
inc
std
fdivrl
rorl
sub
cwtl
pushf
scas
cwtl
gs
out
cmc
mov
inc
shll
sub
adc
dec
andl
xchg
js
insb
push
dec
shrl
push
pop
mov
inc
imul
pop
stos
jbe
outsb
sbb
sbb
scas
jo
jnp
loop
leave
mov
mov
test
inc
cltd
cmp
mov
pop
ficoms
push
pushf
mov
cli
jl
les
adc
in
mov
mov
test
fsubr
mov
lds
bound
dec
adc
je
fwait
movsb
insl
sub
mov
sbb
pop
xchg
sub
insb
out
push
mov
adc
int3
das
pop
subl
jnp
sbb
adc
es
xchg
sbb
sbb
addr16
xlat
cmp
std
icebp
mov
les
pop
int3
pop
jns
fwait
lret
loope
xor
pop
rcrl
push
fnstenv
add
ljmp
scas
hlt
addb
test
xor
cmp
push
mov
jg
adc
cmp
test
inc
test
lret
pop
stos
leave
dec
aam
out
sahf
mov
jb
call
mov
and
sbb
call
adc
mov
mov
xchg
dec
mov
xor
or
pop
jg
jp
xor
xor
in
cmpsl
push
add
je
and
filds
inc
sti
xchg
add
leave
aaa
lret
orb
loope
push
mov
notl
in
scas
jle
or
sub
pop
pop
xor
rclb
loop
mov
xor
testb
sbb
int3
inc
mov
add
push
mov
outsl
add
jl
mov
pusha
jns
clc
xor
cmp
sbb
or
cld
pop
cmc
jne
lret
pop
popf
fcoml
mov
test
fistl
in
jb
mov
mov
fadd
loopne
push
mov
aas
in
or
scas
xchg
loopne
bound
repz
sub
rep
aad
pop
movsb
push
ret
rcrb
iret
inc
ret
loope
sub
fldl
arpl
iret
push
jne
xchg
lret
jmp
lds
lcall
push
lock
adc
loope
negl
push
or
lea
pop
ficoms
mov
std
jg
sbb
cmpsb
cmp
lahf
es
xchg
adc
or
or
adc
mov
out
movl
testb
inc
adc
gs
shrb
cmp
in
mov
push
add
mulb
mov
aad
movsl
cltd
xchg
or
in
push
sahf
test
outsb
test
and
pop
hlt
sbb
jae
cmp
stos
inc
cmc
xor
fidivs
xchg
aaa
ljmp
or
mov
fisubs
in
adcl
movsl
jne
dec
cmp
movsb
outsb
leave
mov
pop
repnz
or
mov
rorb
sti
fldcw
or
std
mov
sbb
movsb
xchg
sub
mov
out
out
xor
lret
mov
lods
jl
xchg
int
adc
cltd
fcompl
adc
int
sti
xor
bts
inc
push
xor
lea
jae
adc
test
pop
jp
cmp
sbbb
mov
adc
xchg
loopne
repz
movups
fcoml
cmp
das
mov
sarl
ljmp
std
xchg
in
js
bound
dec
mov
inc
cmp
daa
xchg
cmp
push
jo
or
inc
int
inc
int
pop
addr16
jp,pt
push
jl
add
scas
nop
bound
addb
xlat
adc
popf
cmp
pop
xchg
cmp
or
int3
xor
or
push
inc
leave
insl
fildll
loop
and
out
test
comiss
cmp
les
andl
repz
mov
jmp
test
and
std
leave
adc
fwait
bnd
push
sub
mov
js
shrl
in
in
fidivrl
ljmp
loope
js
add
sbb
test
cmpsw
gs
les
pusha
cwtl
jg
adc
mov
xchg
mov
subl
mov
add
imul
xchg
nop
addb
subb
ss
js
pop
and
js
inc
pop
pop
xor
stos
pop
mov
pop
or
sti
stos
pop
nop
sub
addb
jl
loopne
loopne
mov
mov
dec
das
sbb
push
and
inc
jl
test
sbbl
lock
mov
repz
lea
je
movsl
aaa
mov
jns
push
testb
add
lahf
rcll
dec
loop
repnz
mov
push
and
xchg
test
sahf
in
xor
shlb
cmp
in
shll
fidivs
repz
sbb
jnp
gs
sbb
and
ljmp
sbb
push
aam
sahf
pushl
jmp
xor
push
and
push
inc
arpl
scas
insb
pop
repz
pop
sub
pop
push
insb
mov
dec
fmuls
pop
fs
xchg
dec
ret
pop
add
mov
mov
adc
arpl
pop
lea
adc
pushf
cmp
sub
push
adc
test
push
inc
incb
xchg
daa
mov
xor
mov
aad
cmp
push
outsl
jo
push
ss
dec
lds
cmpsl
cmp
jae
cli
cmp
negl
jl
stc
ss
es
and
inc
add
sbb
add
imul
cmc
pop
icebp
roll
xor
shlb
test
jg
int
scas
push
mov
xchg
sbb
or
into
iret
clc
xor
push
sub
mov
sbb
lcall
adc
pop
and
fdiv
mov
xor
jecxz
imul
xchg
pop
mov
mov
cmpsb
insb
mov
les
add
or
xchg
sti
pop
mov
out
leave
pop
rcl
jno
or
inc
lods
jg
push
push
cmp
mov
add
jne
xchg
jbe
pop
inc
sbb
daa
scas
push
push
addr16
mov
in
ja
outsb
lea
push
lcall
mov
jbe
jle
es
cmpsb
mov
adc
dec
ret
jp
inc
fcomps
inc
fwait
sub
adc
daa
jnp
fwait
outsl
jg
mov
xchg
push
xchg
daa
xchg
imul
loopne
xor
mov
or
popf
in
out
out
sub
out
add
sbb
dec
cmp
addr16
imul
mov
xchg
scas
mov
pop
mov
out
xor
push
cmp
rclb
cmpsb
jle
pop
sahf
inc
push
fdivs
mov
or
daa
scas
bound
xchg
pop
shrl
idivb
shll
pop
loop
outsb
enter
imul
fisttpll
mov
lahf
mov
cltd
arpl
lcall
mov
adc
mov
mov
mov
sbb
pop
out
adc
xor
fs
imul
movsb
fisttpll
pop
repz
mov
mov
movsl
xor
add
out
ds
push
push
lret
push
pop
movsb
stos
dec
loopne
jmp
mov
rclb
and
inc
jnp
mov
jle
push
es
sbb
sahf
mov
xor
sbb
in
sub
or
xchg
lretw
bound
jnp
divl
mov
test
inc
insl
cmpsb
pop
movsb
insl
add
dec
dec
ret
jmp
inc
dec
cmp
pop
pop
inc
adc
xchg
xchg
mov
pop
jnp
xchg
and
inc
inc
movb
movsl
push
notb
rcrl
pop
mov
outsb
or
mov
call
mov
pop
int3
push
mov
lock
pop
cmpsb
mov
sub
jns
mov
or
lea
rclb
fdivrs
fcoml
popf
addl
xchg
je
repz
fs
cmpl
xchg
sbbl
icebp
insb
sub
imul
sub
leave
nop
enter
sub
std
xorl
mov
lret
sbbb
std
inc
lret
fistpll
inc
lods
inc
xlat
fimuls
or
fs
scas
push
jo,pn
jnp
daa
ljmp
or
daa
lahf
addl
and
push
in
test
cmp
push
inc
mov
ja
popa
rcl
movsl
sub
or
cmpsb
cmp
mov
add
mov
fistl
jmp
out
push
inc
iret
push
test
pop
clc
pop
adc
pop
subl
adc
push
add
xchg
mov
xchg
mov
lcall
in
xchg
sub
and
jae
add
fisubl
out
xlat
sub
lds
jle
fsubs
xchg
jge
sbb
stos
sub
jno
xchg
es
clc
cltd
xor
scas
imul
sub
push
jae
insl
das
fcoms
mov
or
cmp
push
mov
mov
fldln2
sbb
mov
stc
jae
jmp
mov
mov
sbb
adc
jecxz
mov
icebp
xlat
jle
movsb
movsb
push
popf
dec
icebp
jle
call
cmpsb
push
ljmp
stc
xor
nop
and
and
lahf
cmp
xchg
data16
add
test
and
sahf
jb
jb
cmp
mov
jge
scas
add
std
xor
push
push
int
lods
cmp
icebp
pop
adc
fistl
and
bound
add
test
mov
jmp
pop
cmp
cmpsb
pop
imul
bnd
das
mov
mul
sub
shll
jmp
or
fstl
adc
enter
mov
stos
in
pop
call
emms
mov
sbb
in
dec
mov
xor
push
enterw
lcall
orl
test
in
mov
das
lock
push
fcompl
jmp
jae
and
jb
ret
mov
mov
sub
jge
lret
mov
jmp
add
jg
ja
leave
std
xchg
std
fs
xchg
xor
push
iret
push
mov
test
fs
orb
testb
sbb
scas
stos
sub
add
imul
mov
ret
mov
dec
sar
repnz
int3
mov
cmp
or
sub
out
test
xlat
dec
leave
sbb
inc
sbb
or
mov
jmp
nop
jge
fsubr
xor
push
lahf
ss
mov
and
test
fimuls
jnp
pop
pop
cmp
mov
cmc
push
call
cmp
test
fwait
dec
rorb
pop
stc
pusha
cmpb
push
xor
out
jmp
dec
aad
les
loope
inc
test
mull
fs
aaa
sbb
out
jae
icebp
push
pop
sub
lea
add
sbb
lods
xor
pop
jae
and
mov
add
out
dec
rorb
test
adc
inc
fnstcw
fsts
lret
dec
les
pop
flds
fcoml
js
std
inc
int
ljmp
out
aad
xchg
stos
add
add
pop
es
xchg
push
cmp
add
push
adc
xchg
inc
inc
mov
lea
into
popa
sbb
addb
xchg
inc
cs
push
sub
bound
shrb
filds
divl
out
mov
xchg
loop
stos
adc
outsl
fadds
push
inc
ja
xlat
dec
in
cmp
stos
mov
push
out
fldl
mov
leave
fldl
int3
insb
mov
ljmp
aad
outsl
sub
jmp
push
ds
lods
fists
cmpsl
leave
ds
xchg
xor
pop
xchg
loop
xor
ret
inc
sbb
imul
cmp
inc
jnp
arpl
pop
shl
cmp
jns
sub
shlb
pop
lock
mov
jge
enter
pop
mov
jecxz
cmp
adc
xor
das
in
nop
mov
lret
sbb
jp
lock
lret
mov
cmpsb
cmp
faddl
fists
int
add
dec
mov
xor
loop
jae
cltd
or
pop
and
dec
jbe
stc
sub
mov
sub
lock
aas
filds
movsb
fisttps
jmp
inc
sarb
shll
fs
sbb
loopne
jae
mov
mov
rcl
jae
mov
adc
out
push
repz
aas
ljmp
jb
test
cmp
fcomps
mov
ds
scas
pop
into
adc
adc
repnz
out
test
mov
std
das
xchg
xor
movsl
in
sbb
jge
test
lods
inc
push
or
inc
jg
add
bound
or
outsl
and
popf
push
cmp
pop
test
jne
cmp
push
movsb
add
push
jmp
stc
sub
cld
rorb
xchg
pop
sahf
pop
scas
repnz
jo
push
mov
and
popf
pop
enter
push
pop
mov
ja
imul
push
jo
pop
dec
pop
dec
ret
xor
push
sbb
dec
testl
dec
mov
xchg
or
ljmp
jb
insb
into
dec
sub
push
int3
mov
incb
adc
jg
movsb
pop
add
jecxz
sub
fldenv
cmp
aam
xchg
jnp
fcomps
or
push
test
sub
aam
push
sub
jne
out
out
dec
mov
add
xchg
cld
mov
and
sahf
xchg
fimull
sbb
roll
aam
push
cwtl
sbb
and
popl
add
mov
jae
sub
dec
and
dec
lahf
outsl
pop
rorl
dec
movsb
dec
or
insl
sbb
popf
jl
adc
sarb
push
mov
loope
lods
mov
loopne
in
mov
decb
add
jmp
or
nop
sbb
dec
mov
cmp
mov
insl
jno
xor
jno
mov
std
pop
dec
shlb
cli
loopne
xor
cmpsb
and
inc
sub
or
cwtl
dec
loop
sbb
add
scas
inc
mov
ret
hlt
nop
movsl
cmp
adc
ret
pop
adc
ss
push
mov
xchg
mov
fcompl
sti
xchg
cs
pop
mov
sbb
sbbb
add
ja
add
mov
sub
lods
fnsave
mov
stos
sti
xchg
xor
shrl
push
sbb
push
movsb
aaa
into
aad
push
movsl
mov
lds
testb
jp
dec
loop
fwait
xchg
sub
imul
and
int
jae
cmpsb
cmp
arpl
pop
xchg
out
mov
jmp
or
cwtl
cmp
pop
mov
frstor
push
scas
cmp
sbb
pop
repz
jp
test
mov
das
fldcw
cli
mov
sub
stc
nop
scas
dec
aam
jg
pop
scas
add
xor
cmpsl
and
inc
lds
jno
clc
cwtl
dec
jecxz
sbb
add
mov
outsl
ror
repnz
cmpsb
cmp
inc
jecxz
pop
adc
ss
push
mov
xchg
mov
fistpl
mov
pop
fs
sub
sbbb
jg
icebp
mov
mov
lsl
push
mov
sub
fdivl
dec
test
lret
shrb
push
sbb
push
mov
mov
les
or
dec
jecxz
cltd
xchg
sub
push
scas
inc
push
mov
int
jno
cmpsl
ds
xchg
jmp
les
pop
xchg
in
mov
call
or
cltd
jp
inc
fdivrl
pop
fs
mov
jnp
and
jle
mov
ficompl
or
ret
pop
pusha
sub
xchg
popf
inc
jno
jne
sbb
enter
inc
jmp
pop
jl
push
mov
jmp
hlt
add
in
mov
jno
inc
or
cmp
popl
int3
loope
or
and
xchg
jae,pn
stc
mov
xor
xchg
pushf
mov
and
inc
cmovnp
inc
bound
xchg
popa
imul
xchg
cltd
jo
dec
gs
xor
mov
mov
adc
js
push
xor
int
push
pushl
fidivs
je
mov
hlt
mov
fnstcw
or
mov
out
jp
or
imul
or
adc
dec
push
movsb
lret
js
popa
call
pop
sub
hlt
ja
jo
add
and
sub
fdivl
jno
pop
data16
lret
xchg
lods
cmpl
jle
inc
mov
ret
sbb
sub
leave
xchg
jb
jae
cmp
sub
add
jecxz
scas
mov
mov
lds
aas
xlat
shrb
mov
jg
xchg
add
daa
bound
ljmp
mov
aad
and
pusha
mov
loope
in
inc
dec
jb
adc
lea
adc
mov
shl
sbb
outsl
repz
mov
push
shll
ret
mov
mov
cmp
xor
cmc
and
repz
pusha
cmp
add
jo
push
imul
cli
adc
inc
ret
jl
sub
jecxz
mov
mov
push
push
sbb
mov
cs
push
gs
mov
sbb
dec
stc
mov
insl
dec
jns
jmp
pop
movsl
dec
xor
add
adc
gs
mov
sbb
test
cmp
dec
jmp
mov
in
loopne
add
jns
div
cmp
fbstp
in
popa
lock
push
push
xor
and
clc
dec
or
ss
sub
add
inc
xlat
add
lahf
inc
xchg
and
cld
movsl
xor
fistpl
loopne
lods
add
xlat
lret
lds
aad
cs
xor
mov
sbb
inc
divb
dec
pop
push
dec
xor
lea
jbe
ficoms
mov
push
inc
pop
pop
mov
sub
add
mov
pushf
push
sub
fwait
nop
lods
jns,pn
sbb
sub
lods
cmp
sub
cwtl
cmp
mov
xchg
push
call
cltd
out
pop
inc
or
sbb
mov
dec
mov
inc
sub
push
push
imul
xchg
jg,pn
mov
out
pusha
mov
push
mov
mov
psubq
mov
aam
pop
inc
je
lret
rorb
dec
xchg
sub
data16
fsubrs
in
cmpsb
fcomps
mov
mov
lock
int3
cltd
or
jl
fwait
xor
inc
inc
fdivs
sub
fcmovnb
pop
int
jecxz
test
inc
push
call
lock
and
gs
loop
std
ret
cltd
xor
pop
mov
fimull
shrl
mov
fbstp
mov
mov
pusha
roll
imul
pop
add
or
push
pop
or
fnstsw
push
call
jg
shrl
adc
mov
fidivl
ret
repz
arpl
sbb
test
jnp
arpl
push
jno
and
les
mov
mov
mov
mov
js
inc
add
jo
mov
jb
aad
fistpll
or
test
inc
push
push
jns
fstpt
xchg
inc
jle
out
or
pop
push
roll
das
pop
clc
mov
cli
rorl
int3
js
xchg
inc
jae
xlat
addb
ret
xchg
mov
cmpsb
iret
mov
sti
pop
add
inc
jns
into
mov
ret
cmp
and
dec
pop
lahf
aas
sub
add
xchg
xchg
inc
mov
iret
xchg
rol
inc
pushf
mov
stos
lcall
out
add
or
lock
pop
xchg
cmp
out
mov
adc
fldl2e
jno
test
inc
push
pop
orb
dec
adc
jmp
cmp
aam
imul
sub
or
cld
fs
pop
inc
push
js
negl
push
pop
mov
lock
in
fiaddl
lret
stos
insl
repz
sbb
jnp
push
data16
adc
fucomp
in
dec
jae
rcll
inc
ja
mov
mov
mov
sbb
xchg
icebp
pop
in
hlt
mov
add
pop
jle
push
sti
out
xchg
cmp
cmc
es
mov
test
jbe
nop
jbe
or
ret
negb
out
push
sti
fs
push
mov
mov
scas
mov
in
out
jae
clc
mov
xchg
cmp
out
je
sub
js
cwtl
inc
scas
insb
push
int3
adc
filds
xor
jne
and
add
sbb
sub
mov
mov
dec
xorps
xchg
aaa
incb
push
fcos
loopne
aad
mov
xchg
cmp
movsl
inc
or
inc
or
xorb
insl
out
push
pop
jp
insb
fmuls
adc
sti
cmp
push
out
faddl
ljmp
test
fsubrl
rol
push
ret
clc
fs
jo
jg
and
push
pop
push
sti
mov
lods
scas
das
mov
mov
ficomps
cld
and
outsb
aaa
in
lahf
aas
or
leave
xchg
cwtl
pop
mov
pusha
out
in
dec
mov
or
test
mov
outsb
xchg
insb
aas
lahf
or
dec
adc
mov
stos
outsl
out
nop
in
mov
leave
lcall
pop
lods
sub
sahf
cmp
scas
push
jmp
shll
cmpl
or
sub
and
dec
sbb
xor
xchg
inc
pop
rcl
pop
mov
test
pop
and
pushf
or
mov
ret
gs
xor
sbb
fnstcw
rolb
decl
mov
std
out
inc
gs
in
xor
scas
mov
movsb
fidivl
or
pop
decl
sub
in
insl
out
aaa
inc
mov
test
xlat
insl
add
mov
js
jg
add
pop
arpl
addr16
xor
out
mov
cmpsb
lcall
add
jb
cltd
cmp
jge
mov
outsb
cs
cwtl
cmp
cltd
cmp
xchg
cmp
lods
aad
mov
cmp
push
insb
out
aam
cwtl
cmp
adc
sbb
test
push
je
sbb
sahf
cmp
fstpt
push
in
addr16
dec
cltd
cmp
xchg
mov
pop
cmp
xor
loope
filds
mov
sbbl
and
xor
sub
mov
pop
push
pop
mov
daa
push
push
push
mov
insl
cmp
xor
add
pop
inc
push
nop
xor
mov
xchg
in
inc
mov
mov
jp
test
gs
push
adc
mov
nop
dec
and
xchg
inc
mov
int3
cli
cmp
aam
jae
pop
inc
mov
sbb
pop
xor
mov
test
fisubs
mov
pop
mov
cmpsl
add
mov
mov
sbb
push
je
loope
ds
pcmpeqb
mov
imul
das
mov
sbb
out
mov
fistps
enter
xchg
sbb
int3
jle
rclb
imul
sbbb
std
sub
mov
test
scas
push
incb
rclb
leave
sti
push
cmpsl
stos
daa
jne
sbb
mov
jecxz
push
jne
gs
repz
mov
dec
scas
sub
sub
addr16
sub
cwtl
dec
rcll
cmpsl
xor
lods
insl
call
push
mov
jbe
lret
sbb
fnstcw
inc
lahf
cmp
and
pusha
jg
jge
out
fwait
cmp
xchg
cmp
popa
rep
and
sbb
lds
xor
jbe
sbbl
cmpsl
xor
jmp
vpunpckhdq
mov
cmpsb
das
mov
mov
mov
cmpsl
popf
and
cli
pop
pop
xor
mov
sub
xchg
movsl
mov
lods
inc
jnp
pop
mov
das
cli
test
mov
stos
es
dec
cmp
les
enter
cmpsl
das
cld
mov
int
lods
mov
les
addr16
lods
cwtl
js
subb
mov
dec
pop
imul
popf
pop
mov
mov
cmpsl
mov
mov
rclb
mov
mov
popf
or
xorb
xchg
aaa
enter
jne
filds
inc
mov
fdivr
xchg
push
inc
lock
xor
xchg
cmp
pop
sarb
out
outsl
inc
mov
push
adcb
test
enter
sub
stc
mov
jo
out
push
enter
into
loope
dec
push
out
cli
pop
clc
add
mov
sti
pop
pop
cli
xchg
in
cmp
into
dec
or
daa
pop
sti
pop
imul
int3
jo
add
pop
adcl
xor
loopne
pop
ljmp
sbb
dec
or
dec
mov
adc
movsl
cmp
repz
inc
les
push
mov
inc
adc
xchg
out
int3
leave
int
mov
sub
cmp
lret
imul
push
ds
add
add
mov
ret
push
loope
mov
mov
xchg
inc
lahf
fcmovnbe
sbbl
or
add
sbb
aad
mov
mov
mov
jge
loop
add
xchg
jmp
imul
sub
loopne
ds
cmp
mov
mov
cmpsb
sub
jecxz
jmp
inc
adc
test
add
dec
fdivrs
lds
out
add
icebp
stos
hlt
bound
lock
mov
mov
mov
loope
jne
push
inc
push
inc
or
cwtl
mov
push
xlat
sarb
dec
adc
pop
xchg
aaa
sbb
or
dec
or
shl
lahf
insl
push
lcall
out
sbb
aas
pop
loop
sub
sub
xor
stc
ss
addr16
loopne
mov
jmp
sti
popa
stos
sti
loop
adc
es
mov
enter
push
cli
inc
lret
adc
mov
in
xor
test
test
pushf
dec
pop
aas
popf
pop
xchg
mov
mov
sub
enter
sbb
mov
mov
or
mov
and
mov
mov
mov
andl
xchg
movsb
arpl
out
pop
add
notl
out
adc
pop
jmp
hlt
push
and
xor
mov
sahf
aas
push
mov
jge
mov
push
xchg
cmp
mov
mov
scas
push
std
pop
inc
jae
dec
ljmp
lds
leave
fwait
cmp
push
or
sub
cmp
cmp
aad
popl
xchg
inc
or
push
in
outsb
add
or
adc
xchg
sub
stos
in
je
lock
dec
popa
inc
or
cltd
std
arpl
ret
xchg
or
push
add
push
xor
popa
cmp
mov
sub
aas
fs
fidivrs
pop
push
xchg
dec
dec
movaps
pop
push
inc
clc
push
fwait
inc
lahf
ds
lock
and
push
mov
lret
test
xchg
dec
adc
lahf
es
aam
mov
cmpsl
xor
push
addr16
pop
jno
mov
subl
inc
icebp
sbb
jmp
into
sub
push
leave
mov
mov
icebp
sarl
pushf
cli
in
mov
loop
sub
jg
shlb
pop
jp
fnstsw
gs
call
pop
push
daa
lods
add
mov
push
orb
jae
mov
jle
scas
mov
loop
movsl
sub
notl
xchg
cli
push
inc
lock
fistps
stos
inc
xor
xor
rorl
pop
cmp
pop
and
jmp
into
or
jns
pop
jns
shrb
lret
pop
lock
in
je
in
pop
push
xchg
addr16
push
pop
add
mov
repnz
scas
lea
push
mov
repnz
testl
lret
and
pushf
cmp
mov
jbe
sbb
dec
adc
mov
add
arpl
add
outsl
cmc
les
jmp
rcll
push
cli
jnp
add
outsb
imul
fldl
inc
or
out
pusha
call
inc
loop
cmp
adc
xchg
push
std
pop
shrl
orb
not
negl
in
mov
dec
adc
mov
aaa
pushf
mov
aam
leave
fldt
adc
mov
gs
mov
lods
mov
pushf
push
push
dec
sub
mov
mov
test
fs
pop
or
add
shlb
adcl
fcmovnbe
cmp
lret
scas
push
add
repnz
pop
or
rcl
push
add
or
xchg
mov
fildl
iret
cmp
xchg
lret
cmp
sbb
popl
pop
mov
cmp
xchg
dec
shrl
mov
mov
outsb
lods
xor
inc
jl
enter
aam
sub
xchg
xor
jl
mov
pop
das
mov
pop
pop
cmp
mov
inc
movsb
jnp
xor
test
cmp
xchg
xchg
and
cwtl
lret
rcll
and
mov
xor
mov
repz
lcall
jae
les
movsb
jle
test
mov
add
scas
ds
sub
mov
mov
in
adc
mov
mov
stos
loopne,pn
add
es
mov
andb
mov
push
xchg
popf
aam
add
in
cmp
leave
pop
sti
inc
sbb
iret
out
add
test
jb
cs
or
test
mov
and
fnsave
mov
mov
inc
mov
mov
xchg
mov
rcl
mov
lret
repnz
xchg
lret
mov
cmp
jle
movsb
ror
lea
xchg
inc
inc
jge
ljmp
pop
std
adcl
fcomp
movsb
xor
or
cmp
mov
add
cmpsl
cmpsl
sub
dec
orl
lahf
inc
mov
scas
lods
xor
pop
xor
pop
jecxz
mov
mov
sub
cmp
add
push
and
lods
lea
lds
int
hlt
out
es
sbb
into
ljmp
mov
repnz
lds
in
jae
daa
fdivr
hlt
push
fisttpl
nop
cmp
adc
xchg
fsub
outsb
pop
in
push
mov
pop
out
aad
cld
repnz
aas
sub
cmp
js
sub
add
pop
outsl
in
cmpsb
xchg
adcl
dec
pop
cli
in
xor
push
cmp
jmp
xchg
inc
lahf
cmc
and
arpl
inc
xchg
cmp
sbb
inc
mov
lods
fidivrl
xor
jb
std
cmp
ds
rorl
call
xchg
movsl
add
sti
stc
aad
adcl
jns
es
jae
mov
xchg
hlt
stc
loopne
mov
xor
mulb
cs
bound
ror
lea
xchg
inc
sbb
inc
adc
xchg
call
mov
push
out
push
mov
mov
push
add
inc
jmp
pusha
pop
call
loopne
dec
pop
neg
push
lds
cmp
fsubrs
jnp
stos
lods
pop
lcall
pop
pop
mov
xchg
xchg
jg
enter
adc
inc
or
pop
cmp
vpand
pop
lock
mov
cmp
mov
dec
insb
inc
adc
adc
pop
mov
mov
and
jns
pop
cld
add
cltd
negb
pop
mov
loope
cli
xchg
jae
in
jo,pn
gs
xor
mov
sub
cmpsl
xlat
jnp
imul
test
sub
mov
add
enter
fwait
sbb
cmp
rol
fcomi
sarl
shrd
arpl
mov
push
lods
lret
xchg
stos
cmp
fdivl
xor
xchg
mov
mov
dec
or
mov
aas
mov
mov
mov
rcll
loop
inc
adc
std
rolb
inc
aam
movsb
add
push
sub
mov
push
sub
mov
jno,pt
sbb
or
les
add
int
sbb
lods
mov
jnp
push
sbb
cmc
rcrl
mov
test
lret
mov
adc
push
mov
pushf
outsb
dec
jne
mov
stos
or
repz
or
insl
jmp
push
out
dec
fldcw
cmpsl
xor
add
inc
lods
inc
adc
xor
stos
enter
sub
iret
pop
sbb
xchg
dec
lea
stos
mov
lds
leave
jne
or
sbb
aad
fwait
and
cmp
jnp
mov
pop
push
shrb
orb
fadds
push
jb
adcl
adc
xor
shll
fiadds
lret
leave
arpl
movsl
pop
pop
mov
mov
inc
or
sub
insl
aad
add
inc
adc
pop
mov
adc
scas
lods
sub
xchg
fistpll
out
push
dec
imul
xchg
xlat
lock
and
mov
roll
bound
test
mov
out
xor
dec
adc
scas
mov
and
jl
pop
movsl
std
jb
divl
aaa
lcall
push
cltd
ss
dec
into
xor
gs
subl
repnz
das
jecxz
mov
stos
jns
jbe
loopne
jo
pop
testl
lea
sub
cmp
enter
call
mov
pop
cs
pusha
icebp
popf
xor
mov
pop
insl
popf
adcl
or
fidivrs
push
push
push
mov
js
dec
or
rcl
out
sbb
xchg
jmp
idivb
sahf
mov
sbb
push
xlat
mov
bound
aaa
mov
aam
jmp
pushf
or
shrb
or
lods
ficoml
lret
jmp
call
lret
mov
mov
mov
push
lret
pop
mov
aam
xchg
aas
fwait
or
repnz
jg
inc
lock
cltd
xchg
aas
movsl
adc
add
lods
sbb
sub
mov
sub
add
pop
jecxz
jp
push
js
fidivrl
arpl
push
mov
cmpsb
pop
std
add
pop
adc
test
lret
dec
xchg
cmp
jg
loopne
pop
outsl
push
adc
sub
inc
mov
xchg
push
mov
xchg
cmpsl
sub
pusha
jmp
popf
inc
or
ss
lret
mov
and
jg
dec
in
popf
inc
out
jo
leave
dec
bswap
ret
movsl
sbb
scas
fdivs
lock
std
repz
push
jmp
adc
mov
jg
cld
push
add
ret
imul
push
push
mov
mov
jo
inc
dec
not
mov
lock
lahf
cmp
mov
adc
aam
daa
mov
or
aaa
mov
jle
adc
mov
mov
loopne
daa
scas
xor
es
test
je
mov
or
push
cmpsl
out
mov
mov
insb
cmc
sti
pop
in
adc
mov
push
ljmp
aas
aam
sub
mov
lods
cmp
adc
jmp
ret
push
scas
sub
and
xor
push
mov
jg
fst
cmp
sbb
xchg
insb
inc
adc
js
out
imul
add
rcr
jge
sbb
orb
jmp
sbb
xchg
ret
add
push
int3
xchg
inc
insb
ret
je
aad
push
lock
fistpll
aaa
mov
lret
in
adc
push
adcb
sbb
sub
imul
jl
pop
add
pop
and
leave
xchg
xrelease
push
xchg
scas
push
stc
data16
cwtl
jbe
je
int3
pop
add
in
xorb
fdivrs
movsbl
and
push
imul
hlt
insb
mov
mov
jp
mov
jl
push
test
sub
sub
nop
jg
aaa
leave
arpl
lahf
xor
aad
leave
stos
sub
rorl
mov
arpl
sbb
mov
inc
sub
sub
mov
add
and
fmull
jle
push
int3
lea
cli
push
or
mov
jmp
js
xchg
push
lods
cs
stos
fidivrs
jmp
fidivrl
mov
jbe
cli
dec
or
pusha
addr16
xchg
aas
jb
push
mov
mov
lea
test
in
imul
lock
subb
push
and
sarl
iret
outsl
outsb
loopne
jge
scas
xor
push
pop
fnstcw
pop
pop
add
lods
sbb
add
xchg
cmp
scas
pop
mov
xorl
adc
icebp
cmp
dec
or
mov
mov
out
and
fstpt
xor
pop
fistpl
pop
mov
ret
xlat
xchg
aaa
iret
cmp
ja
push
test
xchg
mov
fdiv
js
lds
jmp
je
nop
cs
pop
mov
mov
or
push
push
xchg
or
and
fistpll
inc
adc
test
call
pop
push
push
push
stc
add
push
repnz
in
int3
xchg
mov
lods
cld
gs
inc
popa
jmp
or
call
movsb
or
das
scas
jle
inc
adc
add
sbb
repnz
dec
inc
iret
mov
xchg
test
push
mov
lret
pop
fwait
adc
or
lds
inc
mov
mov
mov
inc
pop
rorl
in
mov
pop
jp
das
fadds
push
add
sahf
cmp
xor
sub
jl
outsb
gs
lcall
pusha
add
sbb
inc
xchg
inc
arpl
test
sarb
jecxz
push
sti
aam
es
and
xor
mov
call
cli
mov
sahf
out
loopne
int
movsb
inc
push
push
fsubrl
xor
adc
mov
fcom
pop
add
cmp
push
xchg
call
sub
cmp
xchg
pusha
xchg
lcall
fistpl
clc
mov
mov
jg
push
je
leave
mov
ja
mov
jbe
push
jle
adc
jne
loop
pushf
adc
xchg
test
add
sub
fimull
repnz
add
int3
inc
jl
andb
and
sarb
or
push
adc
aam
mov
or
push
js
dec
in
inc
das
gs
pusha
inc
movsl
cli
jno
mov
xor
jne
and
push
daa
loopne
jle
xor
pusha
ljmp
orl
jl
xlat
push
cmp
add
ret
xchg
mov
mov
add
pop
aas
cltd
add
std
pop
xlat
insl
aad
in
in
cmp
out
test
lea
cltd
mov
scas
adc
jno
push
push
fs
mov
mov
pushl
movsl
dec
adc
jl
or
pop
mov
pop
aaa
mov
add
xor
mov
fiaddl
xorb
bound
jmp
jae
xchg
and
or
enter
pop
pop
pop
add
xchg
adc
dec
lds
mov
mov
jne
xchg
pop
sti
dec
dec
mov
cwtl
fistpll
push
aas
popf
rcrb
jmp
decb
jo
call
and
sti
aam
jmp
aam
adcl
cmp
pop
dec
popf
cmp
loop
inc
inc
mov
out
orb
jp
clc
xor
sub
stc
aad
mov
add
mov
mov
std
gs
cmpsb
sub
pusha
dec
lss
ja
adc
add
nop
inc
adc
jl
pop
lods
xor
mov
cmp
ret
mov
enter
movsl
sub
xchg
cmp
loop
lea
ds
jmp
cmp
mov
inc
mov
repz
and
mov
stos
and
or
mov
xchg
mov
mov
aas
mov
fcmovnu
sub
jns
and
xor
and
and
out
xchg
inc
pop
roll
or
jo
pusha
pop
rorl
xor
xchg
xlat
orl
cli
adc
movsl
movsb
test
mov
adc
sbb
inc
dec
pop
add
mov
xchg
movsb
rcr
push
push
add
xchg
dec
mov
sahf
xor
repz
sub
aas
enter
jae
fsubrs
stc
or
sarb
push
sbb
loopne
aaa
cwtl
mul
outsb
jo
scas
das
shlb
movsb
cmp
in
outsb
mov
sbbl
adc
cmpsl
clc
or
sahf
in
ret
jmp
pop
imul
out
fsubr
insl
cld
ja
inc
fwait
jecxz
pop
xchg
mov
push
adc
pop
cli
rcr
clc
push
sbbl
aaa
enter
sub
enter
negl
mov
loop
push
push
pop
enter
mov
movsl
jp
add
mov
insl
out
outsl
std
icebp
fadds
out
repz
cli
lret
idivb
stos
adc
fisubrs
sub
or
scas
cmp
adcb
lods
mov
mov
jbe
push
ja
jnp
mov
mov
xlat
in
outsb
iret
jp
or
cmp
cmp
and
in
jecxz
sbb
push
add
clc
and
and
inc
repz
inc
fldenv
sti
adc
cli
cmp
cmp
cli
test
push
cs
pmullw
inc
add
add
xor
inc
inc
icebp
pop
insb
xchg
les
sub
cmp
rol
in
pop
pop
mov
pop
adc
imul
dec
lret
mov
rorl
test
test
cmp
mov
pusha
jl
push
xorl
jbe
lea
pushw
mov
aad
lahf
inc
xchg
fldl
inc
push
test
shlb
std
pop
and
lcall
xchg
cmp
fcoml
mov
notb
cmpsb
jp
arpl
dec
setp
lret
add
ss
xchg
push
ljmp
inc
push
sti
mov
scas
mov
dec
xchg
mov
ss
pop
mov
mov
outsl
cmpsl
sarb
negb
lods
sti
arpl
stc
iret
pop
incb
int3
or
cwtl
lahf
pop
imul
leave
das
scas
es
push
cld
mov
lods
cmp
pop
inc
orb
cwtl
pop
subb
sub
jl
inc
negb
loope
jecxz
ljmp
mov
cmpsb
jne
pop
xchg
push
add
inc
movsb
mov
mov
out
imul
popf
cmp
out
push
cli
adc
inc
push
mov
push
jmp
cli
fldl
inc
push
push
mov
pop
push
int
mov
and
jmp
ds
pop
add
sub
pop
dec
pop
clc
imul
add
dec
xor
insl
enter
iret
adc
out
xlat
inc
ds
loopne
sbb
imul
les
ret
pop
cmp
psrlq
in
mov
mov
fwait
inc
inc
mov
std
popa
les
jae
enter
lods
adc
scas
push
mov
lcall
ja
mov
mov
loope
jl
lret
push
shr
xor
stos
pop
das
mov
mov
loop
pop
adc
mov
sarb
jge
ds
ficoms
shr
roll
out
jmp
sub
call
and
xor
int3
movsl
xor
inc
mov
je
xchg
cmpsb
cmp
aaa
sbb
jne
repz
mov
inc
or
addb
cltd
inc
cli
or
subb
jbe
jle
add
clc
mov
imul
lahf
xchg
daa
ja
xor
push
cld
test
movsl
ss
push
dec
push
fistpll
xchg
inc
call
hlt
mulb
int3
xchg
or
mov
and
dec
rcrl
pop
clc
loop
push
push
adc
rclb
mov
mov
push
push
ficoms
push
ljmp
push
mov
mov
xor
clc
or
cmpsl
or
push
add
fdivrs
pop
adc
fscale
push
add
stos
or
fldcw
jbe
scas
jle,pn
pop
mov
add
cmp
insl
repz
xchg
outsb
jle
stos
andb
xor
jne
stos
jnp
xor
rorl
mov
lea
test
dec
test
ret
mov
add
out
mov
mov
push
sarl
fidivl
fldenv
lahf
out
sbb
aaa
clc
es
fnstsw
mov
jo
sbb
dec
adc
sub
sahf
dec
cmp
mov
lods
pop
add
fs
addl
sbb
stos
adc
mov
pop
enter
f2xm1
jns
pop
sub
and
into
mov
cmpsl
xor
shll
xchg
stos
daa
pop
adc
mov
mov
mov
cwtl
cmp
lods
dec
loop
gs
pop
xchg
add
xchg
mov
mov
push
pop
and
lods
decb
inc
or
sbb
jbe,pt
out
aad
jbe
push
push
lea
mov
inc
jno
lock
sahf
xchg
mov
in
rol
xchg
adc
ljmp
mov
mov
ds
xlat
bswap
push
cmc
insb
out
es
mov
repz
dec
mull
adc
sbb
push
fidivl
loopne
cmpsb
xor
std
in
addr16
das
adcl
bswap
lds
mov
mov
and
or
inc
sbb
push
jge
inc
mov
sbb
sbb
sbb
pop
std
sub
pop
push
faddp
xchg
imul
push
sbb
inc
fnsave
mov
stos
cmp
xchg
cmp
sub
gs
pop
arpl
dec
cltd
data16
cmc
sahf
inc
or
out
rorl
fistps
xchg
jbe
jmp
popf
gs
or
outsb
hlt
add
jecxz
push
push
cld
fmuls
jl
push
lods
sti
push
xchg
ret
dec
adc
int
idivb
xor
in
popf
scas
das
lock
filds
ljmp
add
fs
cli
stos
mov
adc
ljmp
insb
stos
xchg
cmp
jge
loopne
popa
inc
or
aaa
add
cs
push
cld
xlat
cmp
dec
inc
jle
sbb
add
sub
mov
pusha
jg
jg
jp
jae
xor
fdivs
scas
mulb
mov
or
out
fsubr
outsb
add
push
add
push
mov
inc
mov
fstpt
cmp
cmp
insb
in
jle
mov
push
gs
cmp
ret
jae
pop
ret
aas
imul
or
add
imul
jns
mov
adcb
insb
jmp
aas
fidivl
or
movsb
cs
pop
into
xchg
out
cmp
mov
in
scas
push
push
dec
adc
inc
rorl
lods
gs
faddl
xor
mov
dec
sub
xchg
dec
pop
cmp
adc
push
and
dec
mov
arpl
nop
inc
loope
cmp
out
pusha
imull
nop
daa
sub
push
ds
mov
das
lcall
sub
dec
xchg
or
das
xchg
cmp
negb
sbb
cwtl
inc
pop
popf
cmpsl
daa
adc
xor
pop
sub
outsb
add
fwait
mov
add
jo
jnp
outsl
out
data16
xchg
pop
outsb
add
dec
frstor
cmpsl
cmpsb
lcall
inc
mov
lret
or
mov
cmp
fsubl
divb
daa
js
add
inc
push
push
mov
mov
fisubrl
sti
sub
popa
jmp
lods
cld
jno
ficompl
out
adc
sarl
je
add
pop
int
jae
push
mov
ret
ficomps
push
cmpsb
sub
pop
xchg
cmp
or
lods
das
mov
int3
cmp
clc
arpl
js
mov
xchg
cmpsb
mov
lea
inc
xlat
dec
fld
pop
or
pop
cmc
fisubrs
filds
xchg
bound
and
ja
sarb
fiadds
jle
cmp
decb
cs
pop
push
push
fs
push
stos
xor
out
leave
mov
pop
outsl
in
mov
mov
sbb
test
sbb
pop
mov
lds
sbb
fisubrl
jp
sti
xchg
cmp
mov
andl
jmp
cmp
repz
ret
cmc
in
xchg
pop
jecxz
push
imul
or
data16
test
push
push
xchg
mov
mov
and
jmp
mov
fisttpll
add
aad
outsb
push
add
rorb
dec
inc
mov
cmc
lret
lahf
int3
xchg
sbb
xchg
dec
or
aad
fs
xchg
inc
lods
or
mov
decb
iret
mov
xchg
aad
xchg
add
xlat
adcb
addr16
mov
pop
mov
cmpsb
rolb
into
mov
dec
or
dec
or
out
xchg
stos
or
dec
add
in
cmp
lods
sub
mov
adc
aad
shrl
je
add
fcmovnbe
mov
out
pop
pop
xlat
jnp
mov
popa
push
or
in
xchg
add
imul
leave
xchg
fsubp
ss
arpl
in
or
xchg
les
in
jmp
clc
aad
sub
mov
dec
repz
cmp
into
sahf
adc
and
das
and
pcmpeqb
in
xchg
xchg
sub
call
mov
sbb
imul
lock
pop
pop
shl
movsl
adc
jecxz
adc
add
mov
fldcw
or
cmp
sbb
pop
jg
cmp
rol
pop
add
xchg
cs
es
pop
jns
xchg
stos
jns
push
int3
sbb
std
int3
icebp
mov
push
cmp
dec
pop
adc
mov
ret
hlt
ret
dec
jecxz
adc
imul
push
mov
lcall
ds
push
icebp
mov
pop
inc
popa
xsha256
cmpsb
xchg
popa
in
xchg
mov
in
add
ss
and
mov
mov
pop
hlt
cmpsb
cmp
das
push
les
push
cltd
xor
mov
add
sub
mov
dec
repz
ror
popf
adc
pop
lock
and
inc
dec
in
xchg
xchg
sub
out
dec
sbb
mov
sbb
shrb
cmp
xchg
mov
pop
shl
movsl
adc
jecxz
adc
sub
gs
dec
loope
xchg
mov
fsubrs
or
cmp
sbb
pop
jle
cmp
rol
pop
add
xchg
cs
loopne
push
and
xchg
stos
js
push
lret
sbb
cld
lret
icebp
mov
sbb
adc
mov
shll
ret
repz
sub
inc
addr16
cltd
mov
cltd
mov
cmpsl
ds
or
pop
aas
pusha
xsha256
cmpsb
xchg
pusha
in
xchg
mov
cltd
in
dec
jecxz
add
push
mov
mov
pop
hlt
cmpsb
cmp
cs
les
dec
cltd
xor
mov
add
sub
mov
dec
repz
cmp
int3
pushf
adc
push
out
das
and
inc
dec
in
xchg
xchg
sub
dec
sbb
mov
sbb
shrb
cmp
xchg
loopne
movsl
adc
jecxz
adc
sub
fs
cwtl
test
mov
pop
mov
xlat
push
aam
sub
repnz
jge
cmp
rol
pop
add
xchg
add
ja
and
dec
push
ja
xchg
test
lret
sti
lret
cld
sbb
rorb
adc
lahf
outsl
lds
rorl
xchg
sub
inc
data16
cwtl
mov
cwtl
mov
cmpsl
ds
icebp
mov
or
pop
ds
xsha256
cmpsb
nop
pop
in
xchg
mov
cltd
jecxz
dec
jecxz
add
mov
xchg
xchg
pop
hlt
fsincos
cmpsb
cmp
sub
dec
cltd
xor
mov
add
daa
dec
push
mov
dec
repz
cmp
lret
fwait
adc
sbb
aas
js
jno
dec
in
xchg
xchg
sub
in
dec
pop
out
and
cmp
imul
lock
fisttps
movsl
adc
jecxz
adc
sub
arpl
add
mov
pop
mov
push
aam
sub
repnz
jl
cmp
iret
ret
rclb
ja
and
xchg
test
shrl
leave
sbb
cli
leave
icebp
mov
sbb
rorb
cmpsl
dec
insl
pop
lock
outsb
lds
rorb
xchg
sub
inc
gs
xchg
mov
xchg
mov
cmpsl
ds
pop
cmp
pop
in
nop
mov
cltd
loop
dec
jecxz
add
mov
xchg
xchg
pop
hlt
fdivr
cmpsb
cmp
sub
les
dec
cltd
xor
loop
shll
add
es
push
mov
inc
repz
cmp
lret
test
jmp
icebp
sbb
das
push
js,pt
jo
dec
in
xchg
xchg
sub
ret
in
dec
push
in
and
cmp
imul
lock
fimuls
movsl
pandn
jp
xor
bound
add
mov
pop
mov
aad
incl
xlat
cmp
sbb
pop
jnp
cmp
into
ret
iret
xchg
add
loopne
push
and
xchg
cmpsl
jne
push
enter
enter
sbb
rorb
adc
popf
insl
lds
mov
xchg
sub
inc
fs
xchg
mov
xchg
mov
imul
or
mov
pop
cmp
xsha1
cmpsb
mov
jnp
scas
sub
cltd
loope
dec
jecxz
add
mov
test
test
pop
hlt
xlat
stc
cmpsb
cmp
sub
pop
jg
cltd
xor
loop
rcrb
add
and
inc
repz
cmp
leave
cltd
adc
sbb
das
sbb
ds
in
nop
xchg
sub
ret
dec
adc
aaa
shrb
aaa
cmpsl
imul
push
movsl
push
fsubp
jp
xor
popa
xor
cwtl
bound
pop
mov
aam
incl
daa
xchg
pop
jp
cmp
ret
int
jmp
loope
push
and
xchg
movsl
jae
imul
repnz
sbb
dec
sbb
test
push
icebp
fwait
imul
pushf
mov
dec
in
seta
inc
add
mov
xchg
bound
push
mov
aas
out
repnz
or
pop
cmp
cmpsl
mov
jl
lods
cs
add
xor
and
adcl
test
cmc
mull
adc
dec
les
dec
lcall
sahf
mov
xchg
and
insl
and
push
mov
inc
hlt
mov
cmp
cwtl
adc
sbb
xor
sbb
js
insl
cmp
xchg
sub
shl
dec
adc
mov
adc
ss
push
mov
pop
mov
fucom
jnp
cs
pop
xor
cltd
popa
orb
andb
mov
push
aad
and
pop
repz
js
cmp
lret
ret
int3
cwtl
das
push
loope
push
pop
mov
push
jno
xchg
mov
les
mov
push
cmp
inc
sbb
test
cltd
push
fwait
mov
dec
in
or
insl
add
pusha
mov
xchg
popa
mov
xchg
mov
push
mov
inc
out
repnz
pop
enter
adc
mov
add
fdivrp
dec
jecxz
add
mov
adcl
pop
aam
pop
not
cmc
cmpsb
cmp
sub
pop
jnp
fwait
xor
jns
popf
mov
xchg
and
xlat
outsb
and
mov
inc
cmc
mov
cmp
lds
pop
icebp
pop
ljmp
imul
insl
mov
add
fbstp
adc
shrb
xor
lock
movsl
or
in
push
sub
ret
pop
das
add
scas
andl
incl
aam
add
es
hlt
push
jbe
cmp
leave
ret
lret
cltd
xor
sbb
js
push
mov
xchg
mov
ret
repz
hlt
mov
adc
roll
adc
xchg
imul
pminsw
xchg
cs
pop
mov
nop
pusha
mov
xchg
mov
push
mov
inc
in
repnz
push
leave
pusha
cmp
cmpsl
mov
jle
test
add
jecxz
jmp
mov
adcb
andb
not
hlt
cmpsb
cmp
sub
pop
jp
fwait
xor
loop
int
mov
xchg
pop
lock
outsb
and
mov
inc
cmc
mov
cmp
les
pop
icebp
push
jmp
js
push
dec
out
mov
add
fidivs
adc
shrb
xor
inc
test
xchg
fmuls
movsl
or
in
or
add
scas
andb
mov
push
add
xchg
push
jne
cmp
enter
lret
cld
sbb
js
sbb
call
mov
ret
hlt
mov
adc
inc
push
adc
xchg
push
js
jmp
or
add
pop
mov
xchg
mov
push
mov
inc
in
repnz
push
adc
mov
add
jecxz
and
jg
inc
fadds
mov
cmpsb
cmp
daa
inc
les
dec
fwait
xor
loop
int3
fwait
mov
xchg
push
out
xlat
outsb
and
mov
inc
cmc
mov
rol
xchg
adc
adc
aaa
js
imul
xchg
sub
mov
loopne
and
xor
imul
lock
xlat
push
movsl
or
in
or
sub
pop
sub
dec
loope
jg
mov
call
aas
add
xchg
push
and
push
je
cmp
jne
adc
enter
sbb
jns
sbb
xchg
sahf
outsb
insl
mov
shl
repz
stos
inc
arpl
xchg
xor
xchg
mov
adc
mov
cwtl
das
cmp
outsb
add
lea
and
mov
inc
loop
repz
add
pusha
xor
push
out
mov
add
in
cld
and
jge
inc
fdivrs
mov
shlb
cmpsl
ds
jge
and
inc
fwait
xor
jecxz
lret
push
lret
jmp
cwtl
sbb
xlat
outsb
pop
ds
mov
inc
cmc
mov
cmp
stos
adc
xor
pop
xor
dec
out
mov
add
and
das
shrl
xor
mov
montmul
cmpsb
push
fsub
jl
sub
lcall
and
dec
aas
add
mov
push
and
push
jae
cmp
movsl
mov
clc
cltd
xor
sbb
jp
sbb
cwtl
popf
insb
insl
sahf
mov
hlt
mov
adc
aad
adc
stos
inc
bound
fs
xchg
mov
adc
mov
out
pop
cltd
xor
or
cmp
dec
mov
and
scas
stos
inc
loopne
hlt
mov
add
pusha
xor
test
xchg
add
in
cli
and
jl
inc
fdivrs
mov
iret
sahf
pop
test
test
and
jge
and
jbe
fwait
xor
in
leave
xchg
mov
cltd
sbb
xlat
outsb
sbb
ds
mov
ds
xchg
adc
adc
xor
adc
ss
out
xchg
add
fidivl
and
cs
pusha
das
test
mov
aam
cmpsl
add
daa
lds
add
stos
jnp
mov
std
int
push
mov
push
pop
pop
cmc
push
jno
mov
lds
lcall
pop
mov
cltd
fwait
push
outsb
pushf
mov
cmc
mov
push
aas
aas
adc
inc
pusha
pop
hlt
xchg
bound
leave
xchg
mov
adc
mov
out
add
outsl
push
cmp
dec
mov
and
stos
insl
mov
add
popa
xor
test
test
push
popf
xlat
cmc
dec
in
stc
and
sub
add
inc
fnstcw
and
popf
pusha
test
lock
and
pop
je
pushf
xor
in
xchg
mov
cltd
sbb
fsubrs
cmp
mov
cmp
ds
nop
adc
rcr
repz
xor
adc
jp
fs
cwtl
das
mov
outsb
add
or
mov
or
cs
inc
pusha
jg
mov
rclb
cmpsl
add
out
pop
and
add
pop
ja
jecxz
jp
mov
sti
int3
inc
xlat
std
sbb
and
pop
testb
mov
ret
hlt
ret
fwait
xor
adc
mov
cltd
cltd
imul
mov
mov
aas
cmp
pop
pop
hlt
popa
xor
xchg
mov
adc
mov
call
xor
push
mov
and
fldt
hlt
mov
dec
popa
xor
test
test
push
popf
hlt
dec
in
clc
and
sub
add
inc
fnstcw
mov
int3
pushf
pusha
test
out
jle
and
pop
jae
pushf
xor
jnp
xchg
mov
cltd
sbb
fsubrs
cmp
mov
cmp
lea
ds
adc
rcr
repz
xor
adc
jp
arpl
out
test
add
or
mov
or
aam
pop
sub
repnz
rcll
cmpsl
add
out
push
and
lds
add
pop
jbe
jecxz
jns
mov
cli
lret
inc
xlat
cld
sbb
testb
mov
rol
repz
hlt
adc
jnp
adc
add
lcall
in
or
cmp
adc
hlt
mov
lret
jnp
loope
push
call
xor
jo
ss
mov
and
fisubrl
hlt
mov
dec
adc
andl
popf
aad
dec
in
mull
sub
add
inc
fnstcw
mov
lret
fwait
pusha
test
out
jle
and
pop
jb
pushf
xor
in
lds
cltd
pop
call
and
insl
mov
aad
mov
mov
loope
leave
adc
jp
bound
push
out
sbbl
mov
mov
or
mov
or
aam
pop
sub
inc
pop
jge
mov
rclb
cmpsl
add
out
add
es
push
jne
jecxz
js
mov
stc
lret
sti
sbb
testb
ds
outsb
jge
mov
rcrl
inc
adc
push
inc
data16
cltd
mov
testb
or
pop
hlt
lea
lret
jnp
loopne
push
call
xor
jo
xor
push
mov
fldcw
hlt
mov
adc
andb
popf
aam
dec
in
mulb
daa
inc
insb
add
inc
fnstcw
mov
lret
test
in
jle
pop
aas
pop
jno
pushf
xor
in
les
add
sbb
and
insb
mov
aad
lea
mov
loopne
leave
adc
jp
popa
xor
arpl
outsb
add
pop
fmuls
pop
sub
mov
iret
adc
add
lds
add
push
je
jecxz
ja
mov
clc
leave
inc
xlat
cli
sbb
testb
sahf
insl
jge
lahf
mov
fwait
xor
adc
jnp
adc
cltd
xchg
data16
mov
mov
mov
aas
cmp
hlt
mov
lret
jnp
fbstp
lcall
push
mov
and
fsubrs
hlt
mov
cld
lret
dec
adc
sbbl
dec
in
cmc
and
es
insb
add
inc
fnstcw
mov
leave
cltd
pusha
test
in
jle
push
ds
pop
jo
pushf
xor
in
ret
xchg
mov
cltd
adc
aaa
and
imul
stos
mov
fbstp
leave
adc
jp
pusha
xor
bound
outsb
add
push
xlat
mov
or
aam
pop
sub
mov
into
adc
add
das
push
and
push
jae
in
jne
mov
test
mov
dec
sbb
dec
imul
popf
mov
fwait
xor
adc
jl
adc
lcall
and
jmp
or
cmc
mov
lea
call
xor
jo
xor
dec
test
xchg
lods
inc
fprem
hlt
mov
sti
lret
dec
adc
sbbb
popf
shl
dec
in
hlt
and
and
inc
inc
fnstenv
mov
enter
leave
jmp
jle
sbb
ds
xor
in
ret
push
ret
jecxz
cltd
adc
fsubrs
and
push
ds
mov
mov
fidivs
leave
cvtps2pi
pop
xor
popa
sbbb
mov
mov
add
daa
aam
pop
sub
mov
adc
add
das
push
and
push
jb
in
je
mov
test
xlat
notl
mov
dec
sbb
dec
push
aas
pushf
push
adc
mov
fwait
xor
adc
jl
adc
lcall
and
call
or
cmc
mov
lret
jl
lcall
push
mov
and
cmpsb
lods
inc
fdiv
hlt
mov
cli
lret
dec
adc
jg
xor
into
mov
dec
in
repz
and
insb
add
fnstenv
mov
xchg
pusha
test
ljmp
outsb
cmp
in
rcll
cltd
adc
fsubrs
xor
testb
mov
mov
fnsave
leave
push
sub
adc
push
out
jg
das
mov
outsb
add
add
mov
pop
es
pop
sub
mov
int3
adc
add
das
push
and
push
jno
in
jae
mov
cmc
lds
notb
mov
dec
pop
pop
testb
aas
fwait
imul
out
mov
in
inc
push
inc
bound
lcall
and
out
inc
xlat
aaa
or
cmc
mov
lret
jl
fsubrl
xor
ljmp
xor
dec
adcl
test
inc
xlat
div
mov
stc
leave
pusha
sub
test
jle
xor
into
lahf
add
in
repnz
je
inc
fdivs
mov
xchg
pop
test
test
sbb
jge
sbb
pop
outsb
cmp
xor
in
rorl
cltd
adc
xlat
outsb
adc
ss
mov
ds
mov
stos
mov
fdivl
enter
adc
dec
out
jg
das
mov
insl
add
shlb
and
es
pop
daa
test
mov
test
mov
mov
test
add
gs
int
and
arpl
pop
loop
pop
jge
stos
or
mov
fsubs
cmp
or
addb
xchg
sarl
stos
dec
mov
or
lods
adc
and
push
int
sbb
dec
xchg
inc
and
movsl
dec
ja
mov
mov
cmp
xor
or
ds
mov
lret
mov
aaa
aas
outsl
sbb
inc
ss
iret
pop
sbb
je
pop
jl
data16
lds
mov
lods
cmpb
mov
push
loopne
enter
ljmp
xchg
aas
push
lds
enter
pop
imul
adc
xchg
add
sbb
xchg
sub
and
aaa
push
ret
pop
mov
push
push
xchg
or
add
adcb
movsb
and
push
ret
outsl
mov
ds
xor
clc
mov
jmp
xor
ja
push
loopne
icebp
aaa
jb
sbb
pop
in
sbb
jge
cltd
js
mov
push
les
jge
imul
mov
ret
lcall
outsb
mov
loop
dec
insl
out
cs
mulb
cmp
push
rolb
ja
dec
scas
lret
mov
and
in
push
fstpl
cwtl
enter
test
xchg
cmp
repz
xchg
fildl
xchg
sbb
add
fimuls
incl
pop
or
shl
insl
sbb
rcll
movb
xchg
dec
lcall
xor
sbb
sub
jg
or
outsl
mov
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
fisubs
jnp
mov
xor
jmp
sub
in
push
dec
mov
outsl
mov
stos
gs
lea
out
jns
repnz
in
adc
push
or
out
cmpl
jl
inc
in
sbbb
outsb
xlat
lcall
jmp
in
popa
push
pusha
mov
xchg
popa
mov
sub
arpl
sub
push
fidivrl
sbb
jbe
insb
pop
lods
push
cmp
popa
lahf
sub
sub
sahf
jae
jmp
scas
sbb
mov
ss
push
mov
fisttpl
mov
mov
fstpl
and
pop
sbb
test
insl
test
xchg
push
add
dec
mov
repz
jbe
dec
sub
loope
inc
inc
xor
push
ss
sarl
ud2
cmc
inc
fcmovu
jg
mov
push
loopne
subl
inc
out
xor
and
add
mov
xor
xchg
enter
call
ret
mov
inc
mov
imul
in
xchg
fcoms
enter
sub
xchg
testb
cmc
jle
sbb
dec
imul
mov
push
bnd
ss
subb
nop
jge
jle
mov
in
repz
or
sub
jg
hlt
rolb
das
dec
lcall
test
jl
jge
js
leave
jbe
cmp
inc
inc
pop
inc
call
sub
pop
aaa
repz
enter
ret
xchg
enter
sbb
imul
xor
inc
shlb
loop
hlt
lret
mov
scas
inc
mov
pushf
sbb
aaa
out
cmp
in
inc
out
adc
fwait
xor
cmp
fsubs
mov
arpl
daa
je
adc
jl
xor
push
mov
int
dec
mov
scas
aad
loop
push
popf
fs
xchg
sarb
fwait
data16
mov
xchg
lds
jae
addr16
push
loope
insb
push
pop
cmp
mov
roll
addb
fs
cli
fwait
scas
push
shlb
cli
mov
dec
cmpsl
cld
pop
rcll
and
mov
popa
dec
cmpsb
mov
andl
lea
and
pop
push
lock
shlb
dec
pop
mov
mov
pop
cs
mov
xchg
in
adc
mov
insl
dec
adc
in
aas
mov
mull
push
js
stc
push
dec
xor
mov
mov
stc
mov
dec
add
sub
fldt
aad
pop
sub
lret
dec
mov
lret
loope
sub
sub
and
or
je
shlb
aaa
out
and
daa
pop
mov
push
movl
fildl
rol
mov
pop
dec
in
aad
pop
push
mov
xchg
cmp
insb
not
sbb
jecxz
arpl
sbb
std
push
lods
insl
mov
adc
cmc
js
push
jno
stos
pop
movsb
dec
adc
outsb
lock
xchg
jae
and
mov
mov
stc
fmulp
mov
aaa
testl
mov
lea
mov
subb
jle
mov
xchg
cmpsl
mov
notl
pop
mov
xchg
cmpb
and
out
adc
pop
lods
aas
call
pop
rolb
xor
pop
xchg
jns
xor
push
repnz
ja
dec
into
addl
jne
dec
pop
test
call
insb
xchg
fildl
outsb
jge
mov
sub
shlb
add
xchg
xchg
push
loop
pop
cmp
clc
out
outsb
dec
sbb
sub
dec
xchg
jns
insl
xchg
pop
sahf
scas
mov
dec
jmp
xchg
imul
add
insl
xchg
mov
sbb
mov
shr
mov
mov
mov
mov
xchg
shlb
int
popa
adc
jmp
repz
xor
jbe
mov
jae,pt
out
xor
roll
push
or
pushf
xor
push
mov
lea
outsl
mov
push
and
mov
inc
mov
mov
xchg
pop
movsl
push
gs
scas
pop
call
or
jl
or
inc
ret
ds
xchg
sub
insl
clc
or
and
dec
mov
xchg
push
jmp
dec
xchg
loop
inc
addr16
dec
jle
mov
pop
in
add
sub
test
sbb
xor
dec
out
push
shll
mov
cltd
dec
cmpsb
negl
and
or
push
loope
mov
cmpsb
ret
testl
adc
pop
cld
dec
shll
push
pop
lods
push
sub
dec
mov
fldcw
inc
cmp
mov
cs
shll
stc
xor
js
cmpsl
jmp
jns
fwait
popa
mov
mov
int3
pop
jbe
mov
pop
inc
or
push
dec
mov
jmp
mov
dec
jae
inc
inc
and
mov
enter
mov
lcall
mov
popfw
insb
sbb
pop
xor
roll
sbb
lahf
in
push
sbb
mov
pusha
sub
je
push
sahf
shrl
xchg
push
pop
imul
mov
jno
sbb
push
push
push
scas
sbb
push
lods
icebp
xchg
cmp
add
fwait
and
mov
inc
push
dec
xor
mov
push
xor
inc
into
jno
fs
outsl
aas
jno
xor
mov
inc
mov
cmc
notl
stos
xor
sbb
insb
sbbl
lcall
nop
xor
jnp
fildll
inc
pop
push
add
pop
mov
or
pop
dec
mov
lret
mov
push
insb
bound
aad
mov
aas
aam
or
loope
rolb
or
adc
lahf
loop
adc
jns
cmc
and
or
xor
adcb
fwait
cmp
cs
xor
jp
outsl
rorl
ds
lock
and
mov
filds
cmpl
shrb
ss
mov
push
pop
pop
xor
add
in
loopne
pop
iret
sbb
xor
add
and
sbb
xor
incl
and
pop
ljmp
adc
push
pusha
jnp
push
mov
shrb
mov
mov
jno
pop
mov
xchg
sbb
insl
icebp
xchg
movsl
push
lock
mov
fdivl
mov
mov
lods
cmpsb
inc
dec
add
rcrb
push
sub
inc
xor
dec
jge
out
adc
in
cmp
xchg
xor
and
push
inc
insb
insl
sbb
pop
sbb
push
push
test
sub
les
xchg
in
adc
loope
stc
inc
or
mov
mov
cmp
lret
jb
test
loope
sbb
xchg
insb
in
add
mov
push
addr16
cmpsb
xchg
out
es
mov
push
mov
add
pop
dec
jnp
int
cltd
repnz
xlat
sbb
cmp
rcll
mov
jbe
stc
pavgb
fidivrl
dec
hlt
mov
push
inc
inc
cwtl
fbld
cwtl
sbb
dec
in
cmp
sbb
lcall
sbb
test
mov
jo
movsl
fimuls
and
hlt
bound
enter
cmp
sbb
lret
xor
dec
jb
scas
sub
repnz
in
push
dec
and
outsl
or
fisttpl
aam
out
cmp
sar
aam
cmp
sbb
push
js
push
mov
rol
jle
pop
add
addr16
adc
dec
add
jecxz
adc
push
fisubrs
lock
jge
or
ljmp
xchg
popa
cld
sbbb
das
shl
dec
mov
cmp
mov
and
jecxz
repnz
inc
push
call
rcll
scas
push
sbbb
ds
ficomps
nop
mov
cmp
outsl
cwtl
std
ret
adc
sbb
lret
xchg
icebp
xchg
cmp
fsts
cmp
or
orl
dec
pop
mov
ret
and
sub
cltd
