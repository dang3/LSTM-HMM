sbb
add
adc
clc
sub
fnsave
js
cmc
inc
into
fwait
mov
roll
in
test
popa
or
push
ficomps
popf
fistpl
aad
iret
mov
repz
push
push
fildll
push
and
cs
bound
int
ret
push
addl
inc
mov
out
jge
ret
dec
hlt
sub
lods
cli
xchg
cmp
shll
repz
cmp
insl
sbb
aad
cmp
fidivrl
lea
inc
cmp
call
jg
push
pop
sub
xor
daa
cmp
sbb
test
jmp
pop
push
xchg
jp
xor
subl
imul
add
cmp
xchg
inc
hlt
dec
adc
mov
inc
or
jp
inc
ret
push
lods
push
imul
add
dec
jp
dec
nop
jbe
push
lods
adc
pop
das
cli
push
dec
aam
repnz
xor
pop
dec
inc
pusha
ljmp
cwtl
bound
sub
mov
jno
mov
inc
dec
shrb
sbb
in
push
mov
xchg
xchg
movsb
int
add
mov
pop
sub
fistl
xor
daa
cs
dec
sub
sbb
jmp
or
test
out
mov
adc
and
adc
repz
adc
jb
cmp
out
pop
inc
sbb
cmpsb
into
stc
push
cli
mov
sub
cli
lock
add
pop
mov
rol
imul
dec
pop
add
xchg
rolb
mov
test
dec
cld
test
in
dec
imul
and
cmc
out
test
xchg
cmp
add
pop
clc
adc
push
ret
mov
in
cmp
pushf
in
lods
mov
test
cmpsb
pop
xor
jl
data16
pop
loopne
ja
mov
cmp
mov
movsl
lret
mov
popl
push
stos
stos
mov
lcall
aaa
push
clc
cmp
pusha
add
mov
mov
test
dec
mov
outsb
int
mov
test
jl
and
or
aam
incl
imull
fdivs
xchg
push
adc
cmpsl
jne
jl
lods
mov
mov
int3
adc
std
mov
adc
hlt
jbe
jp
fs
test
lock
popa
aam
jbe
and
ret
movsb
sub
jp
mov
mov
pop
sbb
sub
adc
insl
cli
gs
test
and
dec
xchg
pusha
arpl
fwait
addb
pop
lcall
test
dec
add
insl
fs
clc
xor
ja
nop
adc
adc
xor
cmpsl
or
jbe
je
xor
xchg
pop
inc
or
loope
and
icebp
jae
xor
or
add
sbb
add
cmpsb
shrl
xor
out
in
lahf
daa
aam
clc
jnp
stos
imul
outsb
or
pop
cmc
xor
rcrl
xchg
pusha
and
jecxz
std
xchg
lods
popa
and
xchg
or
inc
pop
fwait
movsl
sbb
aas
fwait
mov
insb
imul
testl
je
or
xchg
std
sub
pusha
inc
push
or
jp
and
pushf
loop
xor
mov
icebp
pop
xchg
jns
shlb
negl
dec
out
mov
mov
or
xchg
pusha
in
out
fildl
loop
jecxz
shlw
clc
sahf
int
aas
cmpsl
xchg
rcrb
iret
out
jb
arpl
repz
fldenv
lea
mov
lret
mov
push
out
add
pop
lcall
xchg
add
and
cmp
mov
call
aaa
lds
dec
loope
jo
test
fbstp
lea
in
xchg
push
fisubl
adc
aas
pop
push
out
ds
inc
faddp
fs
lret
add
inc
mulps
pushf
sbb
mov
inc
xor
or
adc
xchg
jp
add
and
arpl
xchg
xor
in
rcrl
popa
je
xchg
adc
or
pop
cli
dec
xchg
xor
cmp
cwtl
movsl
lahf
out
cld
adc
xchg
xlat
loope
xor
inc
lea
js
adc
ret
push
cmc
rcr
or
mov
call
mov
lods
movsl
fisttpll
fsubs
loop
cmp
xor
or
push
rcll
pusha
xchg
sti
sbb
inc
xor
bound
ljmp
ja
and
pop
push
popf
jg
sbb
mov
sub
stos
pop
and
imul
lcall
mov
mov
jae
movsb
ja
push
mov
mov
bound
fdivr
int3
push
xor
lock
dec
aad
push
into
xor
sbb
sub
pushf
out
push
xchg
gs
test
adc
inc
icebp
repnz
inc
and
clc
fcoms
fwait
mov
lods
inc
pop
push
outsl
cli
icebp
sub
add
xchg
loope
adc
fimuls
das
in
hlt
outsb
push
pop
xchg
jo
mov
or
loopne
add
lcall
inc
mov
pop
aam
xchg
cmp
and
inc
mov
int3
xchg
outsb
cmove
ja
adcl
sub
lret
cmpsl
jbe
push
out
hlt
and
pop
in
adc
call
aaa
mov
and
mov
xchg
push
test
dec
mov
sub
push
sarb
mov
push
adc
fs
rcll
int3
lret
lock
mov
mov
push
lods
imulb
mov
push
sub
xchg
loop
arpl
dec
xor
cltd
enter
mov
cmp
in
pop
add
xor
push
or
cmc
adc
lcall
js
iret
push
inc
fcmove
xchg
rcll
push
cwtl
sbb
adc
mov
jns
mov
shrb
mov
imul
stos
movsb
pusha
shr
pop
icebp
mov
adc
xchg
lock
js
pop
pop
mov
dec
push
fistpll
shrb
mov
pusha
pop
fsubrs
aam
popa
xchg
loope
push
mov
cmc
aam
sahf
jnp
push
out
sbb
insb
xchg
nop
divl
or
inc
mov
push
test
js
pop
dec
adc
push
addl
mov
mov
test
and
xchg
int
push
arpl
push
xchg
movsb
adc
mov
mov
int3
xchg
sub
push
xchg
adc
sub
pop
pop
fistps
fdivrl
imul
add
push
lcall
lods
inc
sbb
fwait
outsl
stos
xchg
sub
adc
and
cmpsl
mov
in
out
jge
ret
lea
dec
testb
sti
fs
pusha
loop
rorb
aam
or
sahf
cmp
clc
adc
sahf
rcll
aam
icebp
les
js
cmp
sub
push
clc
ficoml
out
out
bswap
pop
inc
shlb
shlb
xchg
adc
xchg
cmp
aaa
push
inc
fstp
in
sbb
or
cltd
loopne
movsb
push
stc
jns
mov
push
jle
xchg
pop
ret
imul
jbe
repz
cld
into
fldenv
xor
lahf
stos
sub
sarb
jge
shll
sbb
mov
out
inc
jb
push
xlat
cmp
sbb
lds
jae
inc
add
cmc
frstor
xchg
idivl
dec
test
cmp
sub
sub
add
dec
cmpsb
movsl
dec
daa
aad
pop
test
ljmp
xchg
int3
sti
add
dec
insl
lahf
inc
adc
pop
mov
inc
lcall
mov
pop
mov
mov
and
int
sub
fiadds
imul
mov
dec
scas
sbbb
sbb
cmpsb
inc
mov
add
lcall
pop
insb
xchg
or
or
dec
insl
loopne
or
push
sahf
scas
adc
das
push
xchg
sti
sub
push
ss
mov
imul
fwait
jg
mov
stos
push
insb
daa
push
ret
mov
cmp
push
xor
and
mov
insl
xor
cmp
out
inc
mov
shl
imul
adc
gs
adc
push
mov
pop
jns
add
into
mov
sbb
fsubs
push
push
scas
lods
lock
mov
out
jae
repnz
push
jno
aaa
mov
movsl
gs
sahf
inc
sub
mulb
movsb
mov
scas
add
icebp
icebp
fsubrl
cmp
rcl
jmp
mov
insl
das
icebp
pcmpgtw
push
push
xor
and
pushf
test
incl
jp
mov
inc
int
je
rol
or
mov
imul
push
push
dec
mov
sub
out
mov
sub
movsl
nop
in
or
inc
sub
push
stc
sbb
mov
dec
cwtl
in
shll
test
lods
sarb
jo
test
mov
mov
push
jo
cli
and
mov
orb
sub
xchg
arpl
sti
push
mov
sub
push
xchg
lret
cld
jl
scas
int
rcr
cwtl
shl
inc
clc
xor
insb
jmp
aam
lcall
test
in
mov
mov
sub
ffreep
call
pushf
movsb
das
roll
bound
fisubrl
sbb
mov
adc
lds
push
xor
and
push
jnp
and
push
shlb
add
nop
xchg
mov
cli
lss
fcomps
add
sub
xor
loope
shll
cltd
cmp
fstps
fldcw
sbb
push
imul
cmpl
mov
add
popf
xchg
ds
and
pop
push
pop
add
lock
stc
lods
push
adc
or
mov
jne
fisubs
jecxz
data16
lea
push
mov
mov
xchg
out
bnd
mov
push
out
xchg
out
cmp
fbstp
xchg
fidivrs
inc
nop
push
insl
sahf
filds
cmpsb
jge
iret
addr16
push
mov
sub
mov
cmp
ljmp
xlat
adc
cmp
mov
and
add
daa
and
and
jne
mov
xchg
dec
test
push
pusha
sbb
pop
sub
in
loope
sbb
dec
data16
lods
movsb
push
repz
test
testl
call
stos
sar
and
rolb
cmp
rcrb
inc
inc
cwtl
cmpsb
xchg
add
push
cmpsl
mov
lret
inc
fwait
cmp
sahf
xlat
outsl
dec
xchg
dec
cli
inc
mov
dec
insb
mov
data16
divb
ret
or
adc
imul
icebp
sub
sahf
pop
movsl
cmp
lahf
les
sarb
adc
sarw
xchg
enter
push
inc
lret
sbb
inc
push
push
cmp
fdivrs
iret
push
mov
out
pop
or
cmpsb
lds
insb
cltd
xlat
inc
push
adc
pop
lcall
adc
scas
dec
inc
xchg
adc
sub
out
push
add
test
shlb
fldt
outsb
cwtl
push
mov
xchg
shll
loope
dec
cli
stos
mov
pop
into
lds
jb
push
xchg
fisubl
inc
pop
mov
dec
rcrl
scas
mov
scas
shrl
mov
mov
stos
insb
popf
aad
insb
inc
shlb
inc
std
and
jp
mov
gs
lods
mov
test
lods
movsl
mov
dec
stos
add
mov
mov
bound
shll
adc
jmp
or
and
xchg
mov
push
lds
add
mov
and
mov
pop
mov
cld
shrl
clc
hlt
aaa
dec
rolb
inc
xchg
hlt
aaa
dec
jmp
orb
sbbb
popa
jmp
jns
dec
pop
dec
and
dec
pop
add
insl
dec
stc
or
cwtl
je
adc
xchg
and
pushf
sub
cmc
push
lahf
cld
dec
xchg
sbb
push
sub
push
mov
pop
xor
fistpll
mov
mov
cs
fisubrs
shll
sub
sbb
gs
dec
mov
mov
repz
fisubrs
mov
mov
inc
mov
inc
jecxz
xchg
es
fcomip
pop
cltd
push
jno
mov
cmp
test
mov
mov
mov
mov
out
jae
addr16
mov
pop
test
movsl
pop
mov
xchg
or
out
push
popa
xchg
aad
mov
fdivl
xor
lods
cmp
mov
adc
push
punpckhdq
pop
arpl
sub
ret
add
sbb
movsl
test
pop
lock
adc
mov
pushf
and
stos
or
into
ret
push
mov
lea
mov
pop
sbb
fwait
popf
out
mov
pop
and
stos
or
sub
pushf
push
jmp
cmpsl
dec
ret
mov
call
cltd
or
jo
in
or
jle
and
scas
fsubl
test
inc
lcall
les
mov
testb
sub
add
sub
fnstenv
pop
xchg
out
jp
jae
mov
fsubrs
sub
sbb
xchg
inc
fimuls
imul
cltd
enter
out
xlat
and
jp
sub
addb
repz
shrb
add
inc
ret
fldcw
in
pusha
jae
mov
adc
cmpsb
stc
aaa
aad
fstp
in
jo
pusha
mov
mov
pop
mov
dec
jp
adc
mov
sbb
lret
inc
es
outsb
pop
mov
xchg
mov
andl
mov
lret
push
mov
or
mov
cmc
adc
out
push
fstl
adc
mov
pop
inc
pop
mov
imul
cmp
shll
lock
test
repz
pop
insl
adc
push
lret
sbb
mov
cmp
scas
pop
fwait
cmp
mov
imul
inc
sub
bound
xor
ds
or
add
into
outsb
cmp
add
jne
fldl
sub
adc
add
pop
insb
jl
jmp
xchg
sbb
or
sbb
mov
sub
mov
scas
lret
lret
inc
and
sub
addr16
or
sti
and
in
loop
sbb
in
js
pusha
sti
out
ficomps
and
iret
fildl
pop
lock
lock
mov
mov
xor
push
std
and
jb
add
sbb
ret
push
test
jo
pushf
xor
xchg
fst
pusha
stc
and
movsl
jno
mov
push
aaa
jne
jae
adc
in
clc
adc
notb
push
mov
test
insb
and
fidivrl
fcoml
fimuls
stc
lret
out
ds
mov
jbe
jge
jbe
add
sub
mov
in
sbb
ror
cmpsb
sbb
xor
sbb
pushf
mov
cmp
test
mov
hlt
outsb
cld
xor
pusha
xor
jecxz
jae
mov
dec
mov
repnz
inc
mov
aam
xabort
subl
popa
jbe
xor
imul
stos
or
mov
outsb
sub
and
inc
jae
jae
xchg
push
and
lea
or
xlat
sbb
sub
xlat
pop
int3
lods
mov
push
test
jg
lret
push
out
inc
div
push
rclb
push
add
pusha
les
xor
cmc
ficoms
mov
dec
or
xor
or
inc
add
aad
addr16
mov
out
pop
xchg
or
dec
rcrl
int
stc
sarb
mov
js
leave
ror
add
rcr
mov
cli
lds
ljmp
mov
mov
scas
and
ror
cmp
pop
nop
sub
test
adc
push
jne
or
jns
mov
fistpl
xor
loop
jge
cmp
cld
movb
sbb
mov
adc
adc
rolb
jo
lret
xor
aaa
mov
aaa
cmp
add
std
pop
xchg
adc
shll
negl
adc
inc
push
daa
mov
xorl
mov
inc
jle
jne
aaa
inc
adc
xchg
jae
in
outsb
jb
adcl
push
frstor
fcompl
xor
loopne
dec
mov
sub
mov
outsl
mov
sti
adc
lods
mov
and
xchg
mov
mov
push
jmp
cmp
jmp
adc
inc
mov
mov
xor
push
cwtl
pop
inc
ja
adc
jae
xor
out
push
mov
xor
push
je
aad
mov
out
popa
and
mov
xor
popa
fdivrs
hlt
dec
jecxz
adc
or
ljmp
lahf
sub
bound
inc
es
aam
cltd
bnd
mov
cmp
cmp
les
iret
andl
sub
pusha
dec
push
gs
out
scas
jns
jo
dec
pop
rcr
push
loope
push
mov
pop
pusha
mov
sbb
push
enter
imul
bnd
mov
shlb
adc
ja
ss
fwait
cmp
pop
insb
loop
xor
outsl
insb
pop
lock
in
call
ret
popf
mov
add
es
xchg
mov
lcall
incl
pusha
fdivs
insl
imul
or
jb
sti
pusha
test
and
into
test
or
pop
inc
movsl
bound
sbb
sbb
pop
cmc
ja
jnp
aad
stc
sub
notb
loope
les
cmpsb
cmp
sbb
xlat
jb
xchg
call
sub
js
test
fstps
test
cmp
and
int3
pop
insl
jmp
xchg
sbb
test
mov
sub
lret
xchg
and
mov
popf
push
std
mov
les
les
mov
fildll
fistl
fsubs
int
inc
jae
lea
adc
mov
loopne
add
mov
testl
pushl
xor
dec
mov
loope
xchg
ret
testb
and
adc
fbstp
jg
stos
sub
xor
in
cmp
rcll
dec
cli
pop
lods
cmp
test
xchg
aad
xlat
mov
jbe
popf
test
xor
sahf
mov
cmp
icebp
or
cmp
into
daa
loope
insl
popa
lock
cmpl
aam
movzwl
fbld
lods
mov
call
cmpsb
fildll
imul
loope
daa
in
shlb
jg
push
lcall
jecxz
jl
adc
cmpsb
jl
xchg
push
jp
loop
cltd
push
enter
sahf
shrl
outsl
out
inc
sbb
and
loope
push
mov
xchg
dec
inc
mov
incb
rcrb
and
lock
and
fidivrl
pop
mov
sar
repz
pushf
cmpsl
arpl
cld
sub
test
cwtl
mov
xchg
mov
or
movsb
movsb
sbb
iret
outsl
mov
pop
fucomi
sbb
pushf
sub
sarb
jle
rolb
dec
xchg
jg
xor
rcrb
mov
pop
adc
xchg
dec
cwtl
jbe
xchg
adc
ret
push
fadd
pop
loope
cld
pop
mov
and
ffree
xor
dec
mov
ss
lret
push
pop
dec
push
and
mov
sbb
sbb
ljmp
cs
sbb
addr16
push
xchg
mov
imul
sub
repnz
mov
out
pusha
jmp
jo
hlt
lods
jns
inc
adc
xchg
inc
movsl
shll
lea
cmp
sub
aas
add
imul
jo
adc
and
or
push
ud1
mov
mov
mov
adc
xchg
inc
enter
dec
push
ret
pop
data16
cmp
push
insb
pop
imul
lds
dec
movsl
push
movsl
ljmp
loopne
in
or
addr16
addl
icebp
sbb
pop
popa
inc
lods
or
insb
aas
movsb
sti
jp
jl
test
test
in
jo
cli
call
xor
or
stos
mov
aaa
inc
xchg
je
loope
mov
inc
test
arpl
sbb
jae
pusha
push
movsl
mov
test
jb
dec
dec
add
sub
int3
iret
push
push
sbb
rolb
push
sub
addr16
xchg
mov
and
lods
cwtl
out
adc
sub
xor
mov
ljmp
mov
jae
adcb
sbb
sbb
and
out
xor
or
dec
aas
mov
test
cmpsb
je
jmp
lock
cmp
xchg
fdivrp
lds
add
sahf
fsubp
addr16
popa
mov
add
and
mov
and
add
popa
inc
lret
stos
repnz
popa
dec
jb
or
xorl
mov
fs
xor
mov
ror
or
adc
xchg
dec
dec
addr16
sub
imulb
cmp
loop
out
sarl
out
gs
cltd
into
jb
fiadds
movsb
sbb
mov
sub
mov
add
sbb
loop
hlt
pushf
or
faddl
daa
xlat
mov
mov
cmp
mov
mov
push
and
inc
or
dec
arpl
mov
jl
mov
xchg
mul
jge
stos
inc
in
or
sub
test
inc
idivb
xchg
and
sti
mov
mov
into
insb
mov
xor
out
insb
adc
fcoml
ja
cmp
cmp
xchg
shlb
fwait
rolb
in
shrl
loope
sbb
movsb
adc
subl
jo
cmp
fsubs
loop
fs
popa
lods
and
lret
push
pop
je
mov
push
inc
pop
icebp
dec
in
jmp
in
out
jge
icebp
data16
adc
cmp
adc
popf
or
out
mov
adc
mov
pop
push
xchg
mov
fstps
aam
sbb
je
nop
sbb
ds
jp
mov
pop
clc
push
fwait
repz
pop
jns
loopne
sarl
xchg
sar
or
cmc
mov
dec
lods
shl
lcall
lods
sbb
insb
cmp
pop
pop
fwait
dec
add
inc
push
pop
add
sbbl
ss
add
ret
jecxz
notl
xchg
loopne
stos
and
and
xchg
sub
add
test
pop
adc
adc
xchg
lcall
pop
sarb
inc
sub
xor
or
call
and
mov
ret
mov
lock
xor
repz
and
ljmp
out
or
lcall
xchg
idivb
mov
stos
and
pop
cwtl
fdivp
push
cltd
loopne
hlt
add
leave
xchg
cmp
in
cmp
adc
repz
lcall
lret
add
out
lock
push
adc
cmp
add
jge
cmp
lret
fnstenv
int
xor
cmp
int3
sub
mov
sbb
loop
sub
outsb
jge
into
push
push
test
orl
clc
repz
jne
push
mov
xchg
inc
dec
pusha
ds
pop
scas
mov
mov
orb
pusha
cmp
jmp
xchg
lahf
push
cmpsl
pop
pop
xchg
and
sbb
in
out
in
sbb
mov
out
dec
mov
push
jl
add
std
mov
adc
in
pop
mov
mov
pop
sahf
movsb
mov
pop
dec
xor
adc
add
iret
out
std
outsl
in
inc
or
ret
jg
mov
mov
sub
addr16
cmpsb
int
ljmp
repnz
loope
mov
pop
out
lret
ret
jecxz
inc
mov
pop
sub
lods
mov
xchg
sub
pop
outsl
mov
ljmp
add
mov
mov
mov
xor
fdivrl
and
jmp
cli
push
push
jne
pop
ret
scas
xor
out
mov
mov
and
cmc
mov
fdivs
sarl
int
adc
add
xchg
jecxz
mov
std
int3
jno
mov
int3
sub
pop
mov
mov
in
je
push
shrl
jle
xchg
fdivl
sbb
leave
fsubr
scas
movsb
call
testb
mov
push
ret
sub
dec
xchg
call
icebp
rcll
mov
pop
push
add
cld
mov
imul
mov
loope
loope
leave
hlt
dec
cmpsl
jge
dec
call
cwtl
xor
jle
stos
jne
cmc
dec
add
addr16
jge
addr16
aas
call
and
push
lahf
pop
ja
fldt
js
and
mov
fisttpl
mov
push
mov
imul
sub
loop
add
adc
gs
xchg
cmpsl
data16
add
push
inc
and
mov
add
rdtsc
adc
lret
stc
pop
popf
mov
adc
loope
dec
mov
gs
adc
sub
mov
xor
pop
xor
ljmp
insl
ret
or
pop
out
mov
xchg
dec
data16
mov
or
hlt
test
xchg
cld
aaa
adc
pop
out
or
mov
inc
adc
cmp
pop
cli
jmp
sub
fdivs
push
cmp
sub
dec
clc
adc
icebp
cmp
fxch
lahf
jle
addb
int
psubsw
dec
mov
test
bound
xchg
adc
ret
data16
xchg
popf
popf
in
mov
mov
mov
ss
mov
int
movsl
pop
inc
cmp
lods
popa
push
push
jno
pop
push
jmp
out
cli
fnstsw
sarl
fwait
aas
imul
fprem
adc
daa
aaa
mov
nop
lret
push
das
mov
xor
add
call
mulb
lods
pop
repnz
mov
jg
sbb
lock
cmp
pushl
xchg
inc
into
mov
inc
pop
mulb
mov
int3
push
js
stc
mov
push
cli
push
ja
and
or
jae
adc
lock
jno
mov
das
xchg
les
sbb
mov
test
adc
mov
cmp
iret
push
jge
pop
mov
lds
jo
fldcw
repz
mov
sub
imul
adc
xor
pop
xchg
and
xchg
dec
sub
cli
dec
or
sub
mov
cmp
lds
xor
fistpll
add
and
gs
xchg
fldt
jnp
and
mov
ficompl
popa
inc
out
pushf
jmp
movsl
clc
cmpl
idivl
adc
lret
shl
add
ffree
faddl
or
jne
in
cld
leave
ja
loope
sbb
roll
add
movsl
nop
cmp
insl
loope
in
jl
cld
pop
inc
jecxz
pop
mov
cmp
or
xlat
test
pop
mov
and
fisubrl
jnp
sbb
lcall
mov
scas
or
test
iret
and
xlat
imul
adc
push
cmp
popl
fcomip
mov
sbb
je
xor
push
icebp
pop
xchg
xor
pop
sub
ss
sub
jb
sbb
shlb
shlb
push
std
inc
mov
addr16
mov
cmp
lods
mov
aad
pop
push
push
and
inc
sub
mov
ror
jl
test
cli
movsb
jne
test
insb
mov
loope
mov
add
mov
rol
sbb
fwait
bound
mov
adc
sub
jg
jae
xor
and
pop
jg
int3
jl
jns
add
outsb
mov
sbb
gs
hlt
std
dec
mov
movsb
dec
mov
leave
pop
ret
mov
dec
movsb
fsubl
cs
push
stc
movsl
cmp
sub
sbb
in
dec
xchg
sub
inc
adc
xor
scas
insl
loop
repz
pop
mov
jne
or
jne
cmp
cmp
fmull
xchg
xchg
jnp
mov
add
push
int
push
fsubr
rcr
fimull
sub
xlat
test
testl
add
and
inc
insb
inc
push
out
mov
inc
lahf
gs
jne
pop
pop
in
aaa
nop
loope
xor
test
out
fcompl
add
lahf
popa
ja
mov
or
or
and
sahf
xchg
xor
jle
pop
in
mov
fcoml
xor
cmpsl
jno
cld
gs
fdecstp
ret
jo
inc
imul
dec
popf
ljmp
inc
lods
pop
sbb
push
dec
push
ret
push
pop
lds
ljmp
mov
and
dec
mov
xor
jb
ss
xchg
cmp
in
sbb
insl
xchg
nop
repnz
or
pop
xchg
xlat
hlt
out
ss
xchg
aad
xor
mov
sti
xlat
fistpl
pop
inc
xchg
adc
es
push
pop
loop
shlb
sbb
popf
mov
mov
lret
xchg
imul
scas
jae
pop
mov
mov
add
inc
xchg
in
mov
mov
shll
mov
ss
lods
aad
xlat
push
or
imul
mov
adcb
mov
mov
movsl
inc
xor
xor
rcrl
fisubrs
clc
adc
xor
xchg
adc
pop
lret
cltd
xchg
in
nop
push
in
lock
jp
xchg
or
dec
inc
imul
lret
ret
fwait
aas
sbb
dec
sub
loope
into
push
repz
das
loopne
xchg
add
in
lret
sub
fldenv
in
push
ss
imul
repz
imul
test
cltd
pop
stc
jns
jb
popf
pop
push
lods
adc
jbe
xchg
mov
roll
push
leave
cmc
ljmp
sbb
mov
or
adc
int
inc
enter
xor
lods
rorb
jmp
push
movsl
repz
mov
rorb
in
dec
xchg
mov
or
jmp
pop
aaa
mov
jmp
in
push
xor
pop
cmp
mov
cmp
cmp
cltd
addr16
mov
sbb
dec
adc
lods
fstps
lds
loop
mov
addb
dec
lret
subb
sub
rol
add
pop
mov
lahf
jl
mov
int3
aam
add
mov
bswap
mov
inc
sbb
mov
sahf
lahf
add
repz
sbb
out
lods
movsb
inc
jge
xlat
ret
jbe
and
mov
jbe
jg
popa
bound
lret
add
xchg
sbb
sub
cmp
add
sub
push
push
fsub
cmp
lea
into
rcl
pop
pop
dec
sub
add
sub
cmp
out
add
dec
push
jno
pop
out
push
test
pop
inc
mov
inc
stos
push
push
aad
lods
or
out
unpcklps
sub
jbe
lret
pop
ret
pop
lods
xchg
clc
popf
xchg
add
aaa
cwtl
fimuls
jb
mov
out
mov
cltd
jmp
loopne
and
maxps
shrl
cli
setge
hlt
mov
sbb
in
je
cmpsb
ror
inc
dec
andl
gs
mov
cmp
in
and
dec
push
cmc
jmp
outsb
sbb
mov
lahf
inc
dec
lret
loopne
in
nop
in
push
mov
pop
out
mov
aam
icebp
lea
xchg
daa
call
sti
insl
sarb
iret
jecxz
aaa
loopne
mov
mov
sub
loope
es
xor
cmp
mov
xchg
stc
rcll
inc
popa
mov
add
dec
lahf
xchg
mov
scas
test
aam
into
adc
faddp
cmpsl
and
push
mov
icebp
dec
dec
loopne
bound
push
xor
daa
aam
push
jns
xchg
adc
gs
add
je
repnz
out
nop
dec
jb
pop
jp
jmp
mov
mov
repz
repz
fisubs
cwtl
xlat
xor
outsb
sub
jle
add
jb
pop
sbb
ja
in
stos
addr16
arpl
mov
or
xor
add
xchg
lds
pop
xchg
add
pop
rcl
je
add
test
mov
jecxz
push
or
cmp
rorb
pop
mov
stc
mov
sub
pop
or
or
sbb
data16
pop
jl
mov
js
cmpsl
pop
pop
rcrb
or
sub
pop
insl
test
mov
mov
fmuls
popf
sbb
cmp
jb
enter
ljmp
js
roll
push
jle
aam
ud0
insl
stos
mov
or
and
jge
push
mov
mov
mov
lcall
int
pop
cmpl
jbe
mov
ret
mov
jbe
xchg
inc
cmpl
lahf
cs
mov
fstl
lret
mov
aam
stos
mov
out
cmc
and
push
out
scas
push
ficomps
into
ss
dec
jle
insb
out
or
push
jle
add
jbe
in
mov
cmc
mov
test
imul
dec
and
jnp
push
mov
xor
in
jbe
rcr
push
jns
int3
push
push
fwait
mov
adc
sbb
arpl
push
mov
pusha
adc
ret
movl
pushf
pusha
jmp
pusha
lcall
xor
aas
cltd
mov
sbb
mov
hlt
push
fistl
in
xchg
mov
push
dec
pop
or
imul
daa
mov
mov
test
fstps
ja
pushf
int3
mov
shlb
push
out
mov
adc
dec
mov
pop
sub
mov
fldt
jns
les
ret
repz
cmp
jns
jecxz
mov
insl
pop
mov
mov
icebp
les
mov
mov
fimull
les
mov
adc
jb
sbb
ja
add
sbb
hlt
fadds
outsl
rorl
loop
mov
stos
imulb
stos
mov
xor
ret
push
push
inc
jbe
pushf
mov
bound
cmc
mov
lea
push
pop
dec
fcompl
sbb
js
ds
sbb
aaa
or
inc
fwait
cltd
out
sti
fwait
xchg
fdivs
mov
push
mov
fstpl
xor
addr16
or
ds
xchg
imul
sbb
imulb
aaa
inc
mov
fs
add
dec
mov
dec
lds
sbb
aad
mov
and
cmp
mov
pop
jbe
jecxz
mov
mov
jmp
int
ljmp
je
repnz
mov
adc
cwtl
lret
stos
hlt
imul
popa
mov
shlb
test
pop
mov
jecxz
xchg
lock
xchg
loope
xchg
push
mov
out
lods
xchg
push
cmp
xchg
inc
loop
out
shrb
cmp
sbb
aam
repz
test
fcmovbe
fwait
mov
sbb
sbb
rolb
fidivrl
push
xchg
iret
push
and
add
or
ret
or
inc
mov
mov
gs
mov
pop
shll
xor
cmc
lcall
test
jns
or
add
pop
mov
mov
daa
jbe
dec
pop
int
sub
xchg
push
scas
push
mov
testb
les
rcrb
mov
sub
cmp
pop
stos
or
or
cmp
ds
mov
sti
sub
inc
cmp
xor
mov
pop
adc
jbe
addb
xchg
sbb
mov
ljmp
mov
mov
push
in
sub
dec
adc
aad
jno
cmpsl
cmp
rcll
push
mov
mov
adc
jno
xchg
mov
cmpsb
sbb
push
in
pop
sub
sarb
add
push
loope
jb
mov
dec
test
jp
scas
cmpsl
inc
inc
jns
repz
xchg
aas
mov
ja
cmp
xchg
fildl
inc
lret
inc
push
dec
adc
mov
bound
divb
adc
stc
adc
jecxz
xor
bound
and
in
subl
adc
repnz
loope
fimull
pop
ss
in
or
pop
cmp
jb
push
xchg
add
push
jg
push
and
inc
ljmp
add
push
scas
hlt
stos
mov
dec
inc
dec
fnstcw
out
push
insl
cmp
aas
iret
shlb
pop
jmp
sub
addl
fs
aam
daa
mov
aaa
jl
xchg
in
out
pusha
push
add
mov
mov
sti
dec
repnz
jo
and
aam
sbb
pushf
outsb
scas
cmpsb
jle
jl
push
aas
mov
xchg
outsl
imull
cmp
pop
test
dec
jmp
insl
inc
or
dec
sbb
aas
loop
popa
mov
lcall
sbb
mov
mov
rolb
mov
inc
popa
cmpsl
push
loope
adc
sbb
cwtl
cmp
push
and
push
and
fsubl
test
xor
in
adc
xchg
xorb
cmp
js
xchg
xchg
adc
xchg
dec
rol
mov
aam
mov
out
sbb
add
mov
test
cs
sbb
fsubrs
sub
outsl
not
xchg
test
mov
dec
shll
js
out
xor
mov
movsl
loopne
out
xchg
fwait
call
bts
test
mov
cs
fidivs
and
push
dec
xor
lds
imul
lods
outsb
leave
xchg
nop
sahf
pop
inc
add
push
popa
xchg
data16
and
inc
fsubrl
lock
adc
dec
jl
pop
out
ret
pop
imul
gs
in
cwtl
mov
mov
fdivrl
scas
testl
dec
je
movsl
int
aas
mov
hlt
mov
mov
pusha
loop
pop
pop
gs
mov
into
addb
sub
mov
pop
lods
rolb
push
daa
aad
imul
cmp
mov
lds
dec
adc
or
ret
stos
test
test
mov
xor
sbb
addr16
imul
add
hlt
cmp
and
jle
test
sbb
jns
imul
mov
insb
inc
stos
cmp
loop,pt
and
xchg
add
sub
int3
insl
add
rclb
and
test
jo
test
hlt
xchg
dec
add
or
fdivrl
lea
jp
jbe
sarl
mov
rcl
leave
dec
pop
or
push
out
or
pop
push
sub
js
add
pop
pusha
int
test
mov
push
sarl
std
movb
dec
rolb
jge,pt
stos
insl
ljmp
add
push
std
pop
push
nop
mov
lods
sbb
adc
add
pop
in
mov
push
filds
popa
cmpsl
mov
jns
outsb
divl
xor
add
sub
ror
in
fwait
cmp
aaa
cmpsl
jle
sbb
in
add
push
jne
jo
test
adc
pop
mov
push
cmp
loope
lret
mov
pushf
sbb
jns
add
stc
js
jl
test
fadds
adc
div
inc
cs
adc
sub
push
sbb
jp
fildl
aad
ja
xorl
imulb
sub
or
xchg
dec
stc
in
and
nop
leave
push
int3
and
push
cmp
cmp
movsl
cmp
test
mov
lcall
xor
stc
cmp
and
mov
leave
bound
jl
cld
or
push
fcomi
push
lods
mov
cld
dec
xor
ret
adc
call
or
mov
jecxz
stc
jp
push
push
repz
sbb
and
push
stc
in
fcmovnu
nop
sub
mov
adc
dec
add
bound
test
cmpsl
dec
test
pop
mov
xor
ja
fstpl
and
shl
and
imul
pop
sbb
dec
aaa
pop
repz
add
jo
mov
and
xchg
aas
lea
adc
mov
fdivr
xchg
pop
sub
je
test
push
pop
repnz
js
mov
jg
sbb
insb
adc
adc
push
out
adc
cld
xor
add
pop
and
adc
jmp
mov
mov
xchg
add
fdivrp
push
xchg
xlat
cmpsb
ljmp
fndisi(8087
push
cmp
sahf
jbe
out
insl
testl
pop
dec
mov
decb
inc
push
sbb
and
ret
call
cld
jl
dec
inc
mov
jmp
loope,pt
inc
out
jae
pop
scas
push
outsl
movsb
push
movsb
mov
nop
mov
out
push
push
das
xor
sbb
hlt
xlat
cmp
rcrb
arpl
cs
push
mov
mov
cwtl
insb
mov
xor
loopne
sub
xchg
call
cltd
cmp
sub
add
push
sbb
mov
sbb
add
xchg
in
mov
or
cmpl
pop
sub
jnp
mov
sahf
sbb
shr
mov
dec
fwait
add
cmp
fiadds
in
mov
mov
dec
sub
test
pop
sti
sbb
lret
mov
or
mov
movsl
xorl
repz
lods
leave
scas
sbb
xor
mov
adc
jp
std
mov
pushf
div
or
rclb
cmp
int3
icebp
cmp
xor
push
das
and
test
js
cwtl
xchg
stos
dec
mov
push
mov
xchg
ficomps
push
push
cmpsl
ficomps
push
in
fmull
movsl
dec
out
stc
sbb
sub
jbe
sbb
sbb
loope
or
lock
jle
xor
sbb
cmc
out
pop
mov
mov
add
fwait
test
enter
cmpsb
fildl
pusha
out
test
bound
iret
ret
mov
ret
in
dec
mov
cmpb
add
and
cmp
cld
add
sbb
dec
ds
stos
push
jge
outsl
dec
xchg
mov
clc
pop
xor
sti
mov
movsl
mov
and
pop
xchg
push
cmp
jns
xor
fs
inc
mov
lret
adc
mov
daa
inc
call
push
mov
out
inc
sti
mov
mov
mov
and
jge
mov
xor
call
adcl
and
pop
test
mov
sub
aaa
loop
pop
jne
repnz
aad
mov
jmp
das
adc
test
xchg
jl
lds
mov
add
pop
xchg
mov
sbb
push
mov
cmp
xor
fdivr
popf
inc
cmc
inc
adc
jge
fwait
and
mov
xor
push
stc
mov
je
jns
pop
mov
orl
pop
nop
mov
iret
hlt
or
ret
popf
cmpsl
inc
adc
aaa
add
ror
je
cld
add
xchg
imul
lock
out
pop
js
lods
jo
in
loope
or
xchg
sahf
icebp
fdivr
cmpsl
fildl
sbb
sbb
mov
cmp
mov
cmp
jle
test
add
fbstp
das
test
cmp
mov
test
xchg
fcoml
test
mov
mov
cmpsl
pop
std
pop
aaa
cmp
cmp
fs
pop
and
sbb
mov
mov
cmp
movb
nop
xchg
and
cmp
ljmp
test
fnstsw
in
flds
imul
aaa
loope
dec
push
fstl
dec
unpcklps
lods
jmp
jg
std
sub
in
lea
inc
mov
dec
arpl
mov
pop
ss
outsl
imul
mov
sub
xchg
dec
test
into
mov
mov
in
adcb
les
jb
enter
out
xchg
mov
push
bound
adc
push
xor
daa
xor
mov
push
dec
xchg
mov
test
in
pop
mov
jnp
popa
xor
ret
cltd
sbb
sub
int3
arpl
movsl
push
das
outsl
inc
outsb
in
jl
cmp
leave
sahf
push
sub
mov
mov
lcall
add
js
push
adc
jae
mov
scas
pop
push
lret
jmp
adc
xor
jl
ds
in
mov
push
aam
out
fwait
stc
pushf
mov
sub
lods
cmpsb
js
dec
and
dec
mov
jge
or
out
das
add
scas
popf
aam
xchg
adc
lret
mov
iret
inc
inc
sub
inc
repz
xchg
xorl
cli
jmp
aaa
sti
lea
dec
pop
sbb
adc
push
ficoml
push
pop
push
rolb
movsl
pop
cmp
adc
mov
ja
rcr
flds
cmp
dec
mov
sbb
pop
pop
pop
xchg
add
add
mov
sub
sbb
pop
adc
pop
add
push
push
mov
int
pusha
fwait
sbb
fbstp
mov
and
pop
pop
sub
les
gs
into
movsl
ret
cs
cmp
mulb
loop
addl
cmpsb
xlat
sbb
addb
sub
jnp
and
xor
mov
pop
inc
and
pop
mov
pop
ljmp
pop
call
in
rorl
xor
sub
xor
xor
xchg
lods
pushf
cmp
andl
push
mov
sub
movsb
jne
inc
dec
mov
add
outsb
dec
push
sub
popa
mov
cmp
insl
adc
pop
test
arpl
aam
cmp
add
mov
out
addr16
pop
cmp
in
in
lret
lods
outsb
fldt
test
mov
popl
mov
cltd
inc
add
inc
sub
pop
push
lea
std
sbb
loope
mov
pop
clc
pop
movsb
shlb
rcl
sub
xchg
roll
imul
adc
popf
lret
jb
cmp
in
stos
mov
inc
jae
xor
adc
out
js
mov
test
pop
lahf
pop
lods
and
test
adcl
lret
mov
shlb
sbb
lret
add
test
jbe
adc
jle
push
or
inc
inc
cld
into
or
push
sbb
popf
popa
push
or
ret
addr16
fdivrl
add
jae
out
outsb
or
cmpsl
pop
lret
mov
xor
push
adcl
mov
jae
mov
addr16
push
jne
mov
insb
pop
pop
insl
pop
scas
ret
std
imul
jle
dec
cmpsb
arpl
cmpsl
addr16
xor
je
xchg
and
mov
and
jmp
addr16
mov
cmp
insl
dec
scas
pop
stc
fmul
enter
push
add
push
sbb
bound
jle
rorl
ret
adc
jns
ret
fdiv
cltd
xchg
mov
dec
and
jno
lcall
into
rolb
lret
jne
cmpsb
or
ret
add
sbb
dec
sbb
mov
popa
addr16
lock
loop
gs
or
inc
sbb
pusha
clc
jae
jl
sub
or
cmpl
adcl
out
jmp
push
sbb
inc
popa
and
mov
mov
nop
mov
test
cmp
sbb
out
rcrb
int3
ret
mov
jmp
push
adc
pop
sbb
out
or
add
rep
or
lret
minps
lcall
notl
xchg
daa
jb
mov
js
lahf
imul
sbb
jp
mov
sub
out
fs
loop
push
cld
and
sarb
or
adc
pop
inc
cmp
jae
cmpl
cmp
pop
fs
sub
and
pushf
popa
roll
mov
xor
aas
loopne
pop
out
mov
das
into
les
loope
sbb
rorl
mov
jns
inc
clc
pusha
in
sbb
cmc
int
add
mov
outsb
add
aad
sarl
fwait
cmpsl
jnp
xor
in
mov
mov
adc
and
je
dec
nop
cwtl
ret
frstor
add
pop
hlt
jne
popa
adc
jmp
loope
jle
out
jo
lret
pop
mov
cmp
mov
add
ljmp
cs
lcall
or
or
data16
leave
lds
cld
aad
inc
int3
jp
dec
roll
xlat
repz
fiaddl
jns
mov
daa
pop
xchg
push
dec
sub
scas
xor
sbb
fadds
scas
push
xor
into
jg
nop
nop
aam
es
iret
push
and
test
mov
sub
enter
push
push
rcrb
jno
icebp
or
mov
out
data16
mov
std
or
mov
push
sub
shl
ret
repz
dec
repz
adc
lret
loop
lock
mov
sub
jecxz
cmc
int
decl
push
fsubrs
cmp
jno
rcrb
xchg
and
mov
xchg
sbb
push
ja
jg
pcmpeqw
dec
je
push
lods
adc
bound
rcrl
flds
mov
jb
lods
stos
popa
ja
aad
cld
or
popf
sub
push
adc
fsubp
cltd
adc
scas
daa
mov
xor
xor
or
insb
test
rol
mov
out
jno
stos
push
fildll
dec
dec
mov
loope
push
in
sub
in
push
ja
pop
fadds
stos
inc
jp
pop
pop
sbb
sbb
pop
xchg
mov
fldenv
mov
out
jl
dec
add
mov
daa
mov
pop
lcall
mov
aaa
in
mov
mov
sub
fldl
cld
adc
sub
clc
ficomps
inc
test
sbb
cli
sub
out
setno
mov
xchg
shr
jno
push
ficompl
jg
xor
lret
push
dec
mov
sar
mov
push
jne
das
pop
scas
pop
pop
inc
adc
icebp
push
sbb
push
pop
pop
xchg
rcrb
mov
cltd
pop
push
faddl
mov
shrl
pop
pop
js
bound
jecxz
imul
cmpsl
cmp
insb
push
and
push
dec
enter
mov
fisubrs
call
jae
mov
sub
dec
and
repnz
cmpsb
cwtl
cmpsb
jns
nop
test
jecxz
pop
call
daa
dec
loop
les
adc
fwait
mov
pop
cld
outsb
into
loop
loopne
cmp
sbb
pop
mov
xlat
adc
insb
and
mov
into
mov
aam
mov
orl
insb
jne
scas
lahf
sti
xchg
test
push
sub
mov
add
sarl
scas
dec
sub
push
push
pop
loope
inc
je
pop
mov
cmc
inc
dec
xchg
dec
pop
movsl
jb
mov
xor
xchg
scas
and
mov
sbb
in
cld
iret
imul
imul
xor
int3
sbb
and
addr16
cwtl
add
pop
adc
add
xchg
aam
sub
in
jle
lods
inc
cmp
and
add
xor
inc
push
cmpl
push
pop
and
mov
jecxz
fnstsw
sub
pop
mov
sub
pusha
jo
add
lcall
fbstp
mov
stos
adc
sar
inc
daa
sub
add
mov
movsb
fistpl
push
mov
mov
stos
xor
cmpsb
sub
clc
out
cltd
xchg
xchg
mov
stos
ret
inc
cmp
sbb
inc
xchg
inc
repz
ja
xchg
into
je
pop
xchg
add
enter
mov
push
sahf
push
out
mov
pop
or
fiadds
inc
les
sub
cmp
pop
jbe
loopne
pop
sub
push
aas
inc
and
jbe
jnp
lret
mov
pop
jcxz
lea
mov
push
ss
add
enter
pop
inc
in
das
les
push
xlat
push
or
outsl
mov
inc
repz
imul
jl
bound
pop
into
jbe
mov
inc
cmpsl
jge
arpl
movsl
js
test
std
cmp
into
inc
push
cmp
sar
ja
cltd
es
gs
scas
jle
and
jge
and
imul
test
sub
xchg
inc
and
in
scas
add
outsb
loop
mov
insl
cmpsl
nop
cmp
mov
mov
shll
aad
pop
shrl
mov
xor
jbe
inc
cmpsl
mov
mov
push
sbb
mov
test
and
mov
dec
xchg
mov
inc
and
or
lret
nop
fdivs
pop
push
dec
movsb
adc
fwait
xor
mov
fsubrs
loope
xchg
cmp
and
jmp
jnp
lds
mov
stc
dec
dec
push
push
enter
lcall
xor
jp
adc
leave
push
sub
push
dec
lret
push
insl
mov
xchg
and
fnstenv
lock
mov
imull
xchg
aaa
mov
xchg
xchg
or
mov
or
fimuls
rcrb
pop
push
ss
xchg
cmp
movsb
mov
call
jbe
adc
int3
adc
sbb
sub
sbb
aad
add
adcb
pop
mov
pop
out
mov
std
call
xor
shl
scas
outsb
scas
cli
mov
test
jne
out
cmp
jge
pusha
mov
dec
mov
or
jmp
sub
dec
cmp
mov
movsl
enter
mov
inc
mov
inc
dec
ret
outsb
add
xor
lock
xor
xchg
mov
sahf
ljmp
dec
fmull
inc
adc
push
pop
arpl
lods
test
stos
movsb
lea
rcrl
imul
or
jnp
jno
dec
jnp
cmp
mov
and
pop
sbbl
pop
rcr
cs
mov
daa
xor
popa
stc
cmp
xor
or
mov
or
xchg
cmp
inc
sub
imul
jge
daa
shl
xor
call
pop
dec
imul
out
pushf
out
lds
cmpsl
lret
bound
in
ret
jp
rolb
xor
or
and
inc
dec
call
adc
adc
push
lcall
cs
jne
jno
gs
jg
sub
mov
pop
lcall
pop
mov
cs
mov
mov
stos
data16
jne
add
sub
ljmp
call
jge
xchg
xchg
fadds
inc
and
pushf
push
test
popf
jp
jne
imulb
in
pusha
aad
das
lcall
mov
or
hlt
sub
xchg
and
sub
dec
je
nop
xor
rclb
xchg
rorl
jecxz
lods
jecxz
jae
xchg
pusha
out
or
stos
pop
addb
push
cmpsl
dec
pop
inc
add
arpl
sub
popf
xor
sub
jnp
jb
lock
inc
fisubs
mov
mov
in
pop
lods
pop
aad
les
push
lock
sahf
popf
pop
dec
test
or
cli
pop
test
mov
dec
sti
mov
pushf
adc
sub
dec
stc
mov
sub
stc
divb
cmp
cmp
lods
mov
pusha
pop
or
je
aad
sbb
and
pop
jbe
push
inc
insb
psubsb
xlat
adc
jl
jge
jle
insl
cmpb
jne
xchg
cmpsb
into
lods
stos
cmp
xchg
push
adc
fbstp
push
push
fists
jae
loopne,pt
ret
or
add
lods
popf
xchg
or
cmp
lods
cwtl
das
xchg
push
shlb
fcmovbe
gs
aad
jg
fiaddl
hlt
xchg
jo
add
ret
cmpsb
lahf
daa
cmp
xchg
repnz
pop
daa
shrl
cltd
dec
adc
mov
mov
scas
push
lret
add
ss
xor
xor
addr16
popf
hlt
daa
je
jp
ja
adc
cltd
shlb
add
sbb
daa
or
sub
and
pop
push
add
sub
pop
push
cmpsb
mov
push
adc
jno
or
repz
cld
lahf
sahf
orb
sub
xchg
pop
add
ret
jmp
addb
aaa
dec
xor
jbe
xor
mov
cmp
fwait
sub
test
in
and
mov
jecxz
dec
out
out
outsb
xchg
lods
mov
pop
mov
imulb
mov
outsl
xor
or
jbe
stos
push
inc
mov
mov
and
arpl
cld
and
push
out
movsl
sbb
mov
das
call
notb
and
js
popf
sub
scas
out
out
rolb
push
ja
or
in
fwait
outsb
scas
lret
and
pop
test
outsb
es
mov
stc
sbb
cmp
outsb
pop
and
xchg
outsb
pop
cmp
test
dec
fidivs
jb
lret
jecxz
sub
or
sub
pop
sbb
js
daa
aam
gs
loope
jae
hlt
sbb
push
push
cs
fimuls
je
mov
fistpl
out
push
cwtl
jmp
pop
or
divl
imul
and
and
mov
ror
sub
into
aaa
mov
sti
mov
cmp
push
aaa
adc
push
mov
and
push
push
dec
pop
adc
and
and
lds
stos
cmp
jo
push
inc
cmp
loope
lock
arpl
stc
mov
shl
imull
sbb
sbb
aam
jne
mov
and
pop
and
mov
imul
sub
adc
cmc
jb
push
xchg
out
ljmp
sbb
fucomp
imul
pop
cwtl
leave
jbe
add
movsl
lods
ds
push
sub
dec
leave
add
cmp
and
fadds
pop
scas
and
imul
xor
cld
dec
loopne
stc
loop
add
adc
mov
xchg
in
xor
jbe
pop
push
stos
out
dec
and
divb
xchg
repz
data16
fisubl
inc
sbb
out
mov
xor
or
cmp
mov
popa
xchg
add
ret
pop
bound
inc
xchg
jge
daa
addr16
sbb
cmp
cltd
mov
jnp
cld
dec
icebp
aaa
scas
lret
ss
pop
pop
lock
xlat
add
cmp
mov
push
stos
loop
bound
imul
cmp
loop
xor
arpl
mov
or
call
add
call
mov
imul
jbe
cmp
adc
adc
and
push
add
rcrl
xchg
and
or
sub
push
out
popf
shrl
pushw
pushf
insb
xchg
loopne
mov
pop
ffreep
es
enter
sub
jle
mov
xchg
and
push
mov
jmp
jno
outsb
dec
stc
pop
xchg
outsb
rcr
subl
push
inc
test
call
push
jg
sahf
and
or
jge
mov
sahf
mov
outsl
jge
or
fdivrl
in
mov
leave
pop
cmpsl
adc
ja
push
jge
int
sbb
mov
inc
bound
or
out
jne
inc
xchg
pop
das
jg
mov
inc
lea
jae
push
scas
ljmp
mov
or
es
movhps
add
test
jb
je
mov
cmp
outsb
cmp
mov
or
mov
fisttpl
jbe
insb
lret
cld
out
cmp
ret
sbb
movsl
out
sbb
ret
mov
and
mov
aas
push
pop
out
pop
arpl
es
push
mov
jb
sub
xlat
xor
loope
ficoms
push
xor
sbbb
leave
aad
outsb
push
dec
notl
es
push
daa
sbb
adc
int3
aas
fs
fimuls
or
iret
test
jb
cli
sub
stc
cmpsb
jb
fstp
ds
inc
push
or
test
dec
jmp
and
push
clc
jno
clc
xor
jo
xor
insb
jns
mov
lret
ljmp
inc
adc
out
mov
addr16
adc
pop
sbb
adc
or
mov
outsl
je
pop
xor
xchg
loop
cltd
mov
jo
dec
out
insb
jb
stos
or
cld
ret
pop
pusha
jmp
lods
in
aas
xor
lock
xchg
lret
mov
sti
or
push
cs
or
cmc
sub
add
mov
shr
addr16
lret
cmc
fstpl
dec
test
push
testb
xchg
xchg
fs
xchg
xchg
push
sbb
adc
sti
jmp
push
xchg
rclw
push
add
mov
das
out
js
mov
sub
push
sub
jbe
clc
ret
jne
xor
rcr
push
repnz
add
pushf
adc
and
imul
testl
inc
jne
inc
mov
adc
fsubl
adc
mov
sti
cmpsb
ljmp
dec
mov
cld
push
dec
jbe
js
roll
popf
mov
call
sbb
dec
ljmp
mov
les
add
xlat
adc
mov
xchg
push
jmp
xor
push
sub
lret
pop
iret
and
pop
movsb
fisttps
out
test
mov
xchg
add
push
push
shlb
jle
push
movsb
outsl
aas
cld
sbb
in
push
pop
jg
adc
mov
jp
roll
and
sbb
xchg
fbld
xchg
mov
addr16
nop
mov
lcall
aad
cmc
ds
ja
jecxz
js
je
xchg
fdiv
mov
mov
dec
mov
addr16
mov
dec
adc
daa
mov
test
and
out
and
into
or
pop
push
sbb
cltd
adc
sbb
sbb
orl
lret
lcall
popa
sub
movsl
push
mov
push
into
aad
into
imul
inc
mov
int
push
inc
or
lret
mov
xlat
pop
xchg
push
mov
mov
sti
imul
ret
jecxz
data16
inc
sub
inc
or
ret
cli
scas
adc
cmp
popa
decb
push
jle
dec
cmp
xchg
orb
pop
cltd
sar
jns
xchg
push
setbe
ret
test
jbe
pop
xor
inc
sbb
xor
mov
jb
xchg
mov
dec
sub
std
cmp
xchg
in
das
and
inc
lret
int
lods
scas
sub
mov
bnd
dec
mov
lret
xchg
es
xor
pop
jno
stc
mov
fisttpll
cmp
lock
repnz
mov
ss
adc
push
xor
xor
jge
jp
or
push
je
add
add
lret
jg
cmpl
repz
rorl
cs
add
sbb
repnz
fs
stos
xor
imul
repnz
scas
mov
adc
push
repnz
pop
js
fildll
mov
pushf
scas
aam
or
inc
icebp
clc
inc
testb
mov
inc
inc
mov
cli
loop
test
mov
mov
dec
mov
lods
sub
into
daa
insl
aas
out
mov
mov
negb
insb
pavgb
jne
mov
js
mov
out
mov
pusha
outsb
or
sub
mov
jns
cwtl
inc
jle
adc
inc
inc
dec
jmp
cld
rol
sbb
push
jae
sub
mov
fldl
sub
inc
in
fnsave
dec
scas
ficoms
push
mov
movsb
adc
je
cmc
lret
js
adcb
push
jnp
jnp
push
std
sti
sbbl
fcom
insl
add
insl
cwtl
rorb
sbb
pop
rcll
nop
pushl
in
daa
cltd
leave
cmp
mov
lret
cld
in
xlat
adc
lock
and
mov
test
sub
dec
or
test
mov
fstps
pop
scas
std
lds
adc
or
add
mov
inc
lock
and
dec
pop
out
cmc
mov
in
jb
jns
lret
sbb
sub
fmuls
popf
ja
xchg
int3
mov
ljmp
js
fimuls
cltd
cmp
xor
stos
mov
cmp
pop
jae
sbb
add
mulb
and
dec
orl
sub
adc
dec
push
iret
add
ud2
fs
scas
jne
aaa
push
jnp
les
orl
add
push
add
push
ret
pop
and
jmp
scas
mov
push
cmp
inc
outsb
xchg
jb
push
ss
in
jae
xchg
mov
cmp
jne
fsubr
sbb
nop
enter
or
jecxz
push
pushf
and
pop
push
cltd
es
hlt
sub
subb
sbb
mov
rcl
cld
call
pop
adc
stos
pop
aas
xlat
aaa
loop
mov
mul
inc
idivb
shl
inc
mov
repz
mov
sbbl
xor
ja
add
dec
mov
pop
push
adc
push
cmp
jne
mov
adc
mov
inc
fsubl
jnp
mov
mov
ret
cmp
xchg
lock
popl
fisttpll
das
push
mov
adc
sub
stos
scas
adc
cmp
lea
jge
das
adc
mov
sbb
add
cltd
jns
pushl
add
sbb
fdivr
pop
mov
jle
sub
xorl
or
jp
mov
std
imul
push
arpl
in
push
pop
push
bound
or
adc
jge
subl
push
pop
pushf
fidivrs
pushf
dec
icebp
lea
lcall
in
sub
in
sub
xor
enter
movsb
not
out
jge
loope
in
lret
mov
or
mov
dec
jno
add
sub
jg
push
movsb
add
shll
sarb
cmc
fstl
xchg
loop
test
out
jecxz
sbbl
pushf
add
sub
fdivs
and
mov
pop
xchg
cmp
rclb
mov
inc
ja
push
fcompl
out
inc
push
ljmp
sbb
pusha
jmp
shr
cmp
add
mov
dec
add
lret
sub
dec
dec
sub
arpl
add
arpl
mov
repnz
pop
xor
sti
mov
popf
data16
sbb
not
clc
cmc
les
movsl
imul
imul
or
outsl
lahf
dec
push
push
pop
fldenv
inc
xchg
aam
cld
dec
nop
xor
pop
mov
fsubrs
popa
lea
es
mov
adc
lahf
sub
push
pop
cmp
pop
mov
pop
inc
lods
andb
pop
or
pop
sub
cmp
popa
pop
test
mov
pop
out
cmp
pop
inc
push
addl
adc
sub
mov
out
jno
dec
cltd
pop
daa
and
jns
and
mov
out
xchg
sbb
dec
test
cmp
mov
in
ds
not
push
pushf
shll
or
ret
out
push
push
or
cmp
inc
aaa
jmp
and
lods
cmpsl
imul
lods
jb
ret
xchg
cli
sbb
pushf
mov
std
movsb
pop
subl
push
sub
rcrb
sti
add
inc
inc
fildl
jo
push
xor
xor
mov
daa
mov
movsb
mov
aaa
jbe
shlb
fwait
mov
ficomps
sbb
enter
in
scas
sub
lahf
cwtl
xchg
jmp
xlat
sub
mov
jae
sbb
mov
push
cmp
das
movsb
loope
rcl
outsl
jge
outsb
outsb
xchg
pushf
xchg
push
mov
adc
inc
cmp
xchg
testb
sub
jbe
xchg
jl
push
add
insb
enter
outsb
cmp
mov
imul
call
inc
xlat
inc
jecxz
cli
aad
jno
push
adc
in
sbb
pop
cmpsb
add
stos
fisubrs
mov
mov
adc
filds
std
pop
data16
pop
xchg
popf
xchg
cwtl
je
fwait
andl
push
jno
into
mov
mov
mov
out
lds
insb
in
and
insb
sub
pop
outsb
aas
push
pusha
mov
jmp
adc
cmp
mov
adc
cmp
icebp
inc
ret
test
add
repz
loopne
jle
rclb
or
rolb
mov
cmp
mov
pop
ret
testl
sbb
es
sti
pop
sub
fnstcw
push
aas
pop
push
pop
xchg
mov
iret
fnsave
lock
add
rcl
andb
lock
xchg
or
jb
xchg
pusha
in
int
je
popa
jno
ret
cmpsb
and
xor
push
or
mov
lock
xor
data16
mov
xchg
lea
lcall
sbb
out
lahf
push
push
lods
sbb
shll
xchg
mov
mov
sbb
cmpl
xor
inc
cli
mov
or
xor
subb
clc
decl
xchg
addr16
push
pcmpeqd
xor
sbb
sarl
push
cmp
in
lock
mov
enter
inc
jle
fcom
inc
popf
cmp
daa
mov
pop
sub
les
inc
jnp
xor
jo
shl
add
mov
nop
lahf
sub
pop
lods
mov
push
loope
js
jno
jns
sbb
scas
or
fsubr
and
mov
mov
dec
cmpsl
cld
subl
and
and
jecxz
xchg
outsb
iret
and
movsl
cli
pusha
dec
push
mov
inc
cld
push
mov
adc
xchg
sbb
xor
jae
pop
mov
push
dec
xchg
add
mov
div
shll
mov
shll
test
dec
dec
push
out
test
push
js
aam
scas
mov
notb
pusha
ret
xor
add
xor
sub
in
push
push
and
sbb
es
push
inc
pusha
cmp
mov
aad
jge
mov
cwtl
xchg
push
xchg
in
jb
xor
stos
xor
adc
add
jbe
and
sbb
or
push
dec
jecxz
add
mov
enter
sbb
cmp
dec
fnstenv
rcr
mov
mov
mov
adc
pop
loopne
mov
fnsave
es
jns
mov
lret
fsts
cmp
rcrb
or
int
icebp
loopne
push
sbb
mov
test
cmp
pop
add
pop
and
test
loopne
sarl
stos
stos
push
aam
inc
lock
outsb
or
out
cmp
pop
arpl
add
adcb
push
cld
mov
jecxz
jge
loope
fdivs
push
cmp
add
lods
and
mov
iret
add
ljmp
add
jnp
leave
int
sbb
xchg
arpl
adc
pop
push
leave
fistps
inc
xchg
int
cmp
adc
pop
adc
mov
sbb
out
sahf
fneni(8087
les
push
sbb
and
iret
jne
out
pop
jl
add
xchg
xor
ljmp
orb
aad
pushl
xor
push
sbbl
push
fdivs
mov
xchg
dec
add
inc
test
cmp
imul
mov
sbb
lcall
cwtl
mov
pop
xor
jp
pop
out
lea
fninit
push
imul
pop
test
scas
and
cltd
movsl
xchg
mov
aam
mov
std
inc
icebp
je
das
jae
icebp
dec
jge
shrb
stos
add
rcrb
fsubrl
mov
push
lock
mov
push
dec
aad
in
push
inc
xchg
lock
jg
adc
push
mov
pop
xor
not
fstl
jl
dec
hlt
dec
xor
enter
movsb
sbb
xchg
cmpl
subb
rorl
out
pop
push
aam
push
shrb
sti
and
popf
push
sbb
jmp
lods
lea
and
inc
adc
mov
add
cmp
and
flds
and
adcl
inc
dec
sub
cmpb
fldt
xchg
and
lock
mov
or
lods
or
xchg
pop
push
adcl
push
inc
outsl
fwait
popa
test
std
cld
cmp
pop
pusha
adc
adc
loope
xor
sub
sti
pop
clc
inc
pusha
xor
cmc
imul
push
pusha
out
push
pop
xchg
mov
sub
bound
stos
push
push
add
loopne
xor
xor
cmpsl
inc
inc
dec
mov
sbb
callw
mov
pop
sub
adcb
xor
cmpl
movsb
push
mov
xchg
outsl
cmp
nop
mov
jo
jl,pt
or
and
stos
lods
out
lahf
cmp
movsb
out
add
push
js
dec
loope
mov
popf
xorb
adc
andb
jno
cmp
add
jp
iret
xchg
inc
mov
sbb
in
pop
in
clc
or
ret
rol
mov
addl
xor
mov
sbb
rorl
cli
cld
dec
inc
cmp
add
test
ds
pop
aaa
out
add
rcrl
je
repnz
mov
ficoms
ss
mov
adc
mov
outsb
je
pop
movsl
pushf
int3
add
xor
xchg
jp
or
add
ljmp
sbb
sub
cmp
adc
icebp
mov
int
mov
cmp
xchg
test
jle
arpl
xchg
aam
jmp
add
popf
adcb
xchg
imul
add
mov
sbb
and
js
pop
leave
cmp
sahf
idivb
adc
ljmp
cmp
add
lods
sbb
pop
jle
xchg
int
push
scas
sub
fiadds
lods
in
ja
push
movsl
jge
shrb
loope
lds
push
test
push
jle
bound
enter
sbb
xchg
shrl
or
test
pusha
out
scas
repz
sub
push
mov
jp
rorl
aaa
js
xor
subb
sub
hlt
sbb
dec
sbb
push
int
and
fbstp
mov
cmp
clc
arpl
stos
scas
sbb
ss
ljmp
mov
loopne
es
lret
inc
std
out
cmpsb
mov
hlt
xchg
es
daa
pop
rcrl
popf
rcrl
xor
daa
push
mov
and
decb
test
test
mov
into
sti
cmpsl
sub
or
lsl
mov
xchg
cld
mov
sub
je
fidivl
cmp
push
fiadds
mov
pop
xchg
loop
push
lds
test
jb
jecxz
sub
mov
xor
out
cmp
mov
add
jle
insl
int3
rcrb
pop
cmp
hlt
jg
iret
mov
add
xor
sahf
gs
dec
jp
shrl
ret
popa
jnp
adc
mov
sub
loopne
sub
push
rcrl
dec
cmp
push
popf
bound
out
cmc
adc
push
ljmp
add
js
xor
outsl
data16
sub
out
push
xchg
mov
mov
mov
add
jb
repnz
jae
jo
mov
std
insl
outsb
push
daa
rol
push
repz
int3
jnp
inc
adc
push
xchg
mov
insl
cwtl
pop
sbb
xchg
sbb
mov
hlt
jge
or
xchg
mov
sub
adc
cmp
sub
jle
scas
xor
mov
stos
pushf
aam
repz
ds
cmp
cmpsl
aad
les
fldl
jmp
std
ret
test
lock
xchg
lahf
or
dec
sbb
pop
and
lretw
and
cmp
mov
mov
pop
push
lret
ljmp
outsl
mov
xor
fimuls
cltd
add
sub
xor
sbb
push
mov
mov
leave
loope
test
mov
jns
mov
outsb
repz
jp
ficoms
cltd
inc
xorb
shrl
ss
jo
add
sub
cmpsl
loop
out
push
mov
xchg
push
shl
cmpb
mov
jns
je
mov
sbb
jb
repz
xchg
xchg
es
lahf
mov
jb
push
inc
inc
lret
dec
xchg
sbb
ret
pop
mov
inc
jno
mov
jmp
stc
hlt
in
loopne
xor
add
dec
mov
jp
adc
repz
int
ljmp
in
call
aad
or
add
clc
lret
pop
xor
sti
sub
adc
test
dec
inc
xor
xlat
scas
data16
cli
jl
and
setle
xor
negb
loop
push
fcoml
push
cmp
push
sub
push
lds
out
insb
add
shlb
or
sub
xchg
jge
pop
pop
fs
or
cmp
push
jbe
in
orl
shrb
je
cmp
out
xchg
in
aad
stc
dec
xchg
mov
iret
xchg
sbb
xchg
or
mov
lock
pop
test
jl
adc
test
cmp
dec
mov
xlat
cmp
mov
lods
ja
sub
in
jo
xor
xlat
aaa
outsb
push
mov
jne
mov
inc
adc
sub
inc
in
hlt
daa
out
loope
loop
adc
ret
sub
out
push
fcompl
cmp
pop
dec
sbb
lods
lret
les
scas
mov
mov
dec
inc
rcr
jg
add
iret
jns
inc
jl
dec
mov
jbe
rcrb
pop
cmp
lock
fidivrs
jecxz
jno
jp
adc
jge
jnp
test
cwtl
test
add
add
scas
and
lods
mov
test
add
xor
cmp
pop
mov
or
pop
nop
sub
test
pop
sarl
fmull
mov
xchg
rcrl
push
mov
mov
rcrb
jb
push
rorl
cmp
in
xchg
aam
push
mov
call
sbb
nop
push
mov
push
xlat
mov
push
xor
pop
daa
in
jmp
add
sbb
imul
mov
out
aam
shrb
enter
add
jp
sbb
scas
cmpsl
and
repnz
pop
mov
rolb
arpl
adc
push
and
jg
repnz
push
xchg
pop
cmp
out
add
xchg
xchg
mov
aas
sti
aaa
add
cmp
jo
mov
test
stos
lock
test
push
aaa
aaa
out
loop
test
and
dec
imul
dec
pop
fildll
sub
jbe
insl
ss
out
jno
aas
cmpsl
inc
push
xchg
jmp
lcall
aam
and
ja
mov
mov
lret
push
lcall
lock
pop
cmpsb
js
jp
cli
pop
jg
inc
xchg
jl
in
or
add
mov
fisttpll
mov
cli
xchg
pop
cld
jmp
mov
rorb
push
sub
push
mov
test
fdivrl
jl
push
lock
in
inc
sti
loop
jle
and
mov
cwtl
loope
stos
dec
mov
push
cwtl
call
outsl
mov
jmp
sti
repz
mul
in
cmp
mov
daa
mov
sahf
and
fs
push
cmp
cmp
or
inc
outsb
mov
pop
enter
jb
mull
xchg
push
je
cmovns
clc
call
sbb
mov
lock
push
in
xchg
sub
lret
test
sti
pop
mov
mov
ja
jge
inc
pop
mov
push
pop
cwtl
sbb
inc
push
xor
add
aaa
pop
test
inc
fcoms
sbb
dec
sub
lcall
aad
sub
js
mov
adcb
mov
mov
xor
pop
ret
stos
les
fstpt
fmul
xor
cmp
lods
xchg
cltd
sub
dec
movsl
jo
or
in
bound
outsl
sbbb
in
lods
sub
inc
call
pop
lret
repnz
jnp
int
test
xchg
stc
cld
jge
cmp
and
popf
out
inc
inc
adcb
repnz
xlat
inc
or
out
mov
add
leave
bndldx
or
jne
dec
add
mov
mov
push
or
lods
push
mov
imul
in
out
shl
sbb
sub
out
out
jge
dec
inc
movsb
out
repnz
jecxz
movsb
jp
xor
scas
sti
cmp
fmulp
push
jns
movsb
mov
nop
loope
cmp
mov
mov
xor
scas
xor
sbb
imull
jbe
pop
add
cli
popf
cld
dec
or
lcall
xor
mov
sahf
lahf
mov
ret
mov
pop
or
mov
fsubr
ret
mov
xor
mov
mov
outsb
dec
jmp
xchg
push
addr16
cwtl
jecxz
inc
stc
es
and
shl
sub
in
test
cmpsb
mov
jne
adc
inc
sbb
loopne
pop
fcmovnb
dec
mov
lret
loop
cmp
out
xor
xchg
add
and
xchg
jae
ss
fadd
sub
dec
movsb
lret
or
dec
iret
xchg
mov
cmp
scas
mov
ja
out
mov
sbb
pop
cld
dec
pop
scas
pop
cmpsl
shlb
jmp
inc
xchg
mov
popa
lock
xor
fwait
mov
std
jge
adc
xchg
addb
fnstcw
push
mov
cmp
rorl
sti
jg
push
sub
leave
sub
dec
jae
xlat
xor
and
xchg
cmp
cs
test
push
fcomip
lock
xchg
jbe
push
cmpb
aad
mov
popf
sub
mov
fyl2x
mov
dec
mov
dec
jle
loope
and
movsl
repz
shll
jnp
mov
adc
shlb
lcall
dec
or
movsb
rorl
je
test
aad
lock
pop
iret
ja
adc
test
dec
test
cs
add
cli
sahf
adc
xchg
dec
and
mov
xchg
jns
sbb
jb
adc
dec
pushf
cmp
sub
mov
gs
icebp
push
dec
shlb
pop
iret
mov
xor
mov
or
outsl
push
xor
outsb
mov
push
jle
or
int
movsl
mov
cwtl
push
cmpsb
and
out
mov
xor
xchg
into
mov
inc
test
cld
jecxz
xor
or
imul
mov
pop
cmpl
sahf
adc
and
daa
xor
mov
push
or
fisubl
xor
mov
out
xchg
mov
jo
mov
in
call
inc
inc
popa
popf
add
test
pop
into
pop
jno
mov
jle
out
into
jecxz
pop
pop
mov
pop
test
push
xchg
adcl
xchg
jno
clc
fdivl
stos
stc
imul
adc
scas
add
pop
aaa
mov
push
ret
cli
jecxz
stos
test
mov
cmpsl
ja
cltd
stc
dec
pop
mov
inc
and
cmp
scas
stc
sub
lret
sahf
lcall
in
cmp
mov
lret
push
and
repnz
jmp
add
lret
mov
inc
test
add
cmpsl
jle
es
mov
rcll
fwait
shl
js
comiss
push
es
ja
sti
inc
movsl
mov
adc
gs
outsl
cld
adc
dec
ja
or
adc
mov
pop
test
cmpsb
aaa
jle
insb
inc
ljmp
cwtl
aas
stc
fiadds
leave
insl
scas
dec
cwtl
mov
mov
push
push
roll
mov
jp
jno
jl
dec
fidivs
mov
push
daa
loop
scas
xor
js
loopne
inc
lret
cmp
mov
sbb
add
cmp
pushf
add
std
mov
out
lret
aas
sbb
sbb
cs
add
fcomip
stos
sub
xchg
mov
and
jne
cwtl
fdivrp
dec
xchg
and
pusha
incl
push
fsubr
push
mov
aas
aas
dec
aaa
and
xchg
pop
out
push
cmp
cld
jns,pn
dec
jbe
inc
fldt
shrb
xor
jmp
jbe
insb
shl
fsub
fstps
jns
imul
xor
push
push
adc
push
add
out
repnz
xor
xacquire
push
int
fwait
inc
jg
test
xor
adc
push
xlat
les
adc
sbb
mov
xchg
xchg
xchg
out
pop
jg
out
gs
inc
ljmp
js
enter
cs
icebp
loope
or
std
popf
jns
push
psllq
popf
sbb
xchg
jne
jle
addr16
jo
movsl
mov
inc
mov
xchg
adc
xchg
lcall
push
add
loope
enter
imul
jge
push
sbb
xchg
pop
int3
rclb
rcr
mov
xorl
xchg
ss
mov
arpl
pop
lret
add
sub
mov
pop
lret
mov
div
pop
data16
mov
addr16
stos
divl
cmpsb
out
jb
pop
jae
aas
sahf
rcrb
cmp
rcl
cwtl
push
shl
roll
mov
mov
test
dec
push
adc
mov
lcall
adc
xchg
incl
insb
xchg
fucom
add
stos
pop
jmp
pslld
inc
cmpsl
pushf
inc
sub
outsb
loope
jecxz
jmp
sar
pop
rolb
je
ffree
lcall
stos
xor
dec
pop
push
xlat
fs
cmp
pop
pop
inc
cmp
sub
add
inc
pop
pop
pop
sbb
popa
cmpb
xor
mov
fmuls
nop
push
xchg
mov
adcl
xchg
ljmp
setle
ficoml
and
xor
movsl
adc
push
add
pop
inc
mov
pop
adc
add
push
cmp
sahf
subl
push
or
popa
xchg
int3
pop
ficoms
lock
cmc
and
pusha
cmp
jmp
pop
pop
std
push
push
push
push
out
mov
pop
jl
out
xchg
xor
push
mov
jbe
push
or
aas
mov
mov
in
mov
addr16
mov
ficoms
add
loop
push
mov
dec
adc
dec
out
jp
je
rolb
out
dec
cmp
js
inc
push
xor
sbb
dec
adc
addr16
popf
inc
and
pop
xor
pop
mov
jle
outsb
inc
fnsave
aad
dec
mov
fcmovnb
pop
push
push
pop
cmc
sub
jae
mov
rclb
xchg
test
cwtl
mov
and
jnp
fcomps
mov
stos
inc
sahf
push
mov
in
dec
aaa
dec
pop
or
js
and
mov
cmp
lcall
mov
sub
lahf
mov
mov
lods
inc
sbb
lds
dec
pushl
xchg
sbb
push
dec
rorb
sub
mov
cs
repz
iret
test
pushl
xor
mov
pop
cmp
loope
popf
pusha
push
inc
cmpsb
je
xlat
insl
mov
or
mov
xlat
mov
stos
leave
sbb
dec
jns
push
out
xor
pushf
sub
cmpsl
adc
outsl
dec
ds
dec
lock
lods
aad
inc
inc
andb
ja
xor
mov
or
out
popf
std
icebp
mov
js
jg
stos
lock
pop
mov
scas
leave
cmpsb
push
fdivs
adc
and
lret
lods
out
xchg
xchg
xchg
repnz
dec
ljmp
adc
cmpsl
sbb
es
xchg
xor
mov
mov
test
mov
lret
dec
dec
dec
stc
cmp
or
xor
mov
push
and
jns
stc
jbe
clc
nop
clc
bound
lret
sub
inc
xor
push
fnop
dec
es
pop
adc
daa
out
outsl
fsubrl
pushf
in
jbe
jno
pop
mov
call
out
mov
scas
test
push
mov
pop
cmpl
sub
test
jbe
andl
ret
pop
rclb
pop
or
mov
out
mov
test
or
push
addr16
sub
push
arpl
mov
sbb
sub
popf
and
arpl
mov
scas
mov
jl
dec
mov
popf
std
arpl
in
add
outsl
out
nop
adc
add
xchg
stos
pop
sub
mov
xchg
mov
xchg
cld
jmp
stos
or
scas
ret
pop
test
dec
mov
pop
add
sbb
sub
les
test
pop
cltd
adc
dec
inc
inc
je
jno
dec
out
push
pushf
lahf
imulb
inc
icebp
mov
iret
cmpb
gs
out
aad
das
sti
jne
in
add
fidivrs
repnz
lea
popa
rclb
cmpsl
pop
pop
dec
push
and
add
out
iret
inc
jb
mov
sbb
dec
adc
add
cmp
aaa
xchg
pop
ljmp
pop
mov
or
imul
nop
cli
sub
insb
sub
jg
add
mov
imul
adc
rclb
jno
enter
ret
rolb
popa
push
xchg
sahf
xchg
jne
cld
sbb
in
mov
and
or
mov
sti
adc
movsb
or
ret
push
std
xor
je
sub
push
push
push
sub
mov
inc
cmp
nop
in
ds
lods
push
jl
xor
jno
or
add
adc
lock
fisubl
loopne
push
aam
insl
arpl
mov
push
adc
mov
ret
js
jae
std
ret
aaa
addr16
cmp
sub
inc
cmp
push
add
cmc
fnstenv
cltd
stos
aaa
jle
das
iret
push
popa
pop
rcrl
sti
into
xchg
enter
sub
fisttpll
lret
pop
ljmp
movsl
push
pop
push
imul
out
dec
mov
sbb
pop
sbb
sbb
testl
andb
vmread
ret
fwait
adc
mov
in
add
int3
insb
enter
inc
pop
jmp
mov
int
mov
insb
out
pop
sbb
imul
jg
mov
decl
ret
and
movsl
in
subb
adc
imull
jno
lea
ret
jle
jecxz
cltd
icebp
xor
out
mov
add
rep
pusha
int3
xchg
andl
call
xchg
adc
mov
inc
inc
pop
nop
sub
push
add
fwait
dec
adcl
test
lahf
or
mov
je
pop
xor
ret
fmull
xor
scas
aas
xlat
lret
mov
xor
aaa
mov
xchg
sbb
sub
xchg
jmp
jbe
jge
mov
xor
push
cmp
adc
neg
pop
mov
mov
ja
dec
test
jb
ret
dec
or
mov
xor
dec
sbb
sbb
mov
jle
pop
int
out
push
jp
and
pop
fldcw
shlb
push
movsb
or
orl
sbb
mov
cli
push
add
jge
mov
add
fs
jecxz
jge
or
xor
add
stos
popf
jae
pop
cmp
movl
push
jge
test
pusha
mov
mov
add
xchg
fcoml
sbb
lret
rcrb
fisubl
outsl
mov
pop
push
push
or
cld
xor
in
add
adc
icebp
dec
hlt
es
push
adc
pop
pushf
xlat
das
jbe
inc
lds
imul
mov
jb
xchg
push
and
jae
pop
cli
hlt
mov
xchg
and
inc
shll
outsl
dec
jbe
shrl
add
je
stc
mov
outsb
push
out
repz
inc
loope
insl
lea
push
popa
stos
cltd
mov
add
mov
push
incl
repnz
pop
xor
repnz
inc
in
ffree
dec
pushf
mov
repz
lds
ret
push
shrb
cltd
in
out
pushf
xchg
jne
lret
pop
xchg
int
mov
inc
rolb
add
mov
ss
fcomps
mov
push
sti
incb
stos
jne
sti
mov
dec
push
or
jne
jg
adc
inc
pand
inc
adc
push
cld
out
cmp
mov
fwait
pop
aas
mov
mov
je
jns
std
aad
inc
fadds
push
inc
fisttps
jae
cltd
pop
adc
and
insb
push
lods
xchg
xor
fdiv
mov
lcall
xchg
scas
jbe
popa
repz
xor
repnz
sbb
pop
xchg
xor
push
inc
ret
loopne
adcb
inc
mov
mov
out
xor
mov
jb
nop
add
xor
push
push
xchg
insb
mov
pop
rolb
fwait
lds
adc
fadds
inc
outsl
testl
pushf
scas
adc
push
aad
jle
fdivl
das
pushf
xchg
jns
arpl
jb
popf
ds
xchg
pop
insl
cwtl
xchg
test
clc
push
icebp
imul
jns
sbb
xchg
inc
or
fsubl
lds
icebp
insl
mov
or
xchg
or
push
mov
iret
ret
popf
cltd
push
sahf
cli
mov
mov
sti
je
loopne
out
and
lahf
mov
addr16
out
fwait
mov
lret
xchg
jns
pushf
fadd
mov
insl
aas
xor
gs
sbb
shll
jg
std
xor
or
int
subb
push
push
bound
sbb
pop
xor
sbb
call
bound
dec
and
leave
and
arpl
dec
daa
sbb
mov
daa
xchg
in
daa
mov
out
push
test
loop
nop
cmp
jge
and
fstl
mov
insb
jecxz
mov
jbe
mov
iret
xchg
fs
test
outsb
rcrl
mov
aad
add
pop
andl
outsl
les
pop
inc
lock
ja
dec
pop
je
or
and
sbb
in
mov
jmp
insb
mov
push
pop
addb
xchg
or
out
sqrtps
mov
roll
sbb
adc
or
or
out
lret
fwait
mov
add
xchg
jg
adcb
mov
mov
cwtl
scas
xchg
dec
push
sbb
push
arpl
aad
adc
loope
mov
xchg
inc
iret
and
jnp
pop
dec
imul
lcall
mov
nop
xor
repz
sub
mov
mov
add
add
movsl
mov
xchg
ds
jl
lods
arpl
fldt
inc
aas
dec
xchg
dec
mov
and
addr16
dec
sbb
sahf
aad
dec
jge
stos
dec
mov
mov
sbb
stos
cmp
js
xchg
lret
sub
pushf
imul
adc
aas
outsl
daa
es
xor
sub
cmp
sub
jae
xor
ss
adc
dec
push
sahf
mov
mov
xorb
pop
xchg
sub
jnp
mov
sbb
dec
fs
scas
inc
test
xchg
pop
dec
sub
rcr
outsl
pop
scas
bound
sbbb
push
ds
push
out
inc
cld
cld
jns
shll
movsl
jg
icebp
adcb
cmp
adc
ret
push
dec
rep
xchg
rcrl
dec
ds
cmpsl
bound
enter
lods
xor
mov
jbe
jns
dec
xchg
imul
inc
pop
cmp
jmp
stos
lods
sbb
jp
int3
ja
inc
dec
and
outsl
pop
push
push
push
pop
jmp
sub
inc
push
test
mov
sbb
in
mov
push
push
test
inc
insb
out
shll
xor
imul
pop
jo
movsl
and
leave
into
xor
sbb
mov
jle
je
sub
lea
mov
jb
fsubrp
es
pop
ljmp
inc
jge
xor
cs
inc
pushf
xchg
adc
sbb
push
es
insb
and
mov
xchg
add
loope
cmpsl
and
cwtl
cmp
les
and
xor
sbb
add
mov
add
pop
in
aas
xor
inc
cmp
and
xor
dec
adc
sti
and
addr16
xor
push
cmpb
popa
xchg
xchg
pop
scas
dec
jp
sbb
ja
sub
scas
negl
xchg
movsl
bound
insl
cmpsl
ret
ret
into
sahf
or
mov
pop
inc
addl
ja
xor
push
dec
fstl
test
or
lock
and
pop
push
jno
loope
ljmp
sahf
fcoms
out
lods
jecxz
push
out
aad
pop
mov
icebp
lods
xor
or
mov
add
nop
es
frstor
dec
pop
fsubrp
inc
mov
pop
inc
jno
jne
cmc
shl
leave
jb
out
adc
sbb
out
cli
inc
cwtl
dec
addb
into
xchg
shl
fucomi
add
cmp
rclb
adc
cwtl
pop
movsl
inc
xor
lock
scas
push
div
mov
movsl
dec
arpl
xchg
push
mov
mov
fwait
dec
fdivs
or
ljmp
mov
cli
add
sbb
ja
pop
icebp
mul
pushaw
out
ror
adc
pop
in
jle
leave
loopne
and
push
pop
rolb
push
or
add
shlb
mov
sub
leave
lods
adc
jmp
jl
ficomps
mov
inc
push
fstpl
dec
outsl
sbb
scas
pop
mov
and
stc
push
pop
filds
dec
aas
in
out
mov
inc
fstpt
xchg
add
jo
ja
xor
imul
cmpsb
pop
sti
cmp
jb
mov
gs
jnp
xchg
pop
xchg
stos
sub
cwtl
xor
lret
fstl
pop
mov
adc
rcr
xor
dec
dec
xchg
adc
mov
pop
xor
jbe
pop
pop
add
jecxz
ds
cs
dec
mov
fmul
lods
pusha
rclb
or
and
mov
push
enter
sub
in
inc
xchg
dec
pop
pushf
cmc
or
xor
add
mov
xchg
mov
mov
pop
push
jge
mov
pop
adc
mov
sbb
jg
out
aad
int3
push
cmpsb
mov
aam
pop
adc
loop
aad
fs
aas
sbb
das
sub
cmp
cltd
loope
cs
xchg
lcall
adc
lcall
sbb
scas
dec
dec
lods
fmuls
jl
in
mov
and
js
push
jmp
lock
xlat
je
inc
pushf
pop
xor
iret
dec
push
push
push
add
pop
fdiv
hlt
xchg
jecxz
lret
mov
fwait
icebp
test
pop
into
mov
enter
inc
sbbb
loop
pop
jl
fsubr
pop
push
inc
xchg
int
rorb
into
mov
fwait
loope
jns
int
stc
or
jge
movsl
lahf
clc
push
sarl
inc
sarl
jns
mov
and
dec
insl
ljmp
cmp
fwait
or
pop
dec
hlt
add
lahf
cmp
rcrb
xchg
sub
sub
cmp
enter
jno
aaa
mov
rolb
push
call
inc
mov
movsl
insl
cmc
lock
pusha
pop
pop
dec
fisubs
mov
aad
cs
outsb
inc
and
xorb
or
int3
shll
push
or
in
sub
mov
sbb
cmpsl
addr16
mov
inc
gs
pop
pop
inc
rcrb
adc
filds
or
xor
cmp
imul
or
les
cli
mov
inc
test
cmp
and
lret
shld
dec
mov
jae
push
js
or
daa
push
in
nop
sub
sti
test
push
decl
adc
sub
lahf
test
jp
leave
mov
pop
sub
in
inc
lea
mov
push
test
sbb
xchg
adc
pop
insl
pop
sarb
out
xor
cmp
cmp
in
sti
daa
add
push
pop
iret
pop
jl
xchg
inc
adc
movsb
aam
xor
xchg
sbb
or
fxch
ljmp
mov
je
mov
aaa
mov
lcall
fisttpll
xor
push
pop
mov
jecxz
jns
cmp
lods
ss
push
jge
int
repz
jmp
test
aad
out
jb
mov
push
lods
and
rcl
mov
mov
adc
lods
in
mov
in
sub
push
cmp
rorb
not
mov
test
lods
faddl
jg
popa
ror
rcr
in
inc
inc
cmp
pop
outsb
pop
stos
arpl
adc
dec
cwtl
imul
es
and
sub
pop
cmp
cmp
lock
jecxz
mov
dec
loope
cmp
arpl
sub
aaa
inc
sahf
fisttps
outsb
insb
dec
roll
gs
add
int3
xor
cld
rcrl
test
xor
stc
xor
lahf
fdivr
in
data16
js
sub
mov
fcom
lcall
sub
push
jecxz
jo
xor
inc
inc
sub
fstl
mov
lock
lret
roll
pop
sahf
add
mov
dec
pop
cs
dec
test
xor
mov
repz
pop
add
pop
pop
fiadds
push
sub
xor
inc
outsb
sarb
jbe
pop
daa
aas
or
aad
leave
jl
xor
daa
inc
andl
out
xor
stos
sub
xor
jl
out
or
xor
lds
add
mov
pop
mov
lea
icebp
repz
mov
xchg
sarb
cltd
inc
daa
enter
xchg
jp
ljmp
mov
push
push
lock
xorb
or
cmpsb
mov
ja
and
ret
lock
stos
loope
mov
jl
and
int
outsb
sbb
mov
push
mov
mov
push
and
dec
dec
aaa
add
mov
pushf
ss
jbe,pt
shr
incl
mov
movsb
fistps
shll
xchg
sub
ficoml
push
add
mov
in
ja
or
mov
lea
ret
mov
mov
sbb
push
xor
mov
cltd
flds
pop
xchg
mov
imul
xor
inc
mov
push
les
inc
xchg
in
inc
mov
mov
mov
mov
jp
insb
or
dec
rcr
lahf
fdivrs
pop
push
cld
loop
cli
push
lods
jns
sub
lret
mov
push
cmpb
add
add
xchg
das
adc
ret
test
outsb
popa
xor
sbb
mov
cmp
in
sbb
in
daa
cmp
xchg
out
mov
mov
adc
push
notb
xchg
pop
push
into
and
mov
xor
fstpl
cli
push
sahf
sbb
aaa
clc
imul
mov
add
in
insb
pop
js
mov
adc
bound
xchg
out
mov
aaa
push
mov
scas
fbstp
adc
je
ret
imul
xacquire
dec
dec
xor
sub
or
pushf
mov
in
add
xor
repz
pop
or
mov
sbb
inc
icebp
and
repz
es
add
lcall
lds
in
add
pop
subb
ror
jae
dec
or
jle
xchg
mov
pop
pop
mov
mov
add
call
data16
outsl
les
dec
mov
jbe
lret
mov
mov
fimuls
inc
fnstsw
mov
add
mov
xchg
inc
pop
int3
ljmp
dec
inc
mov
mov
das
pop
jmp
jb
adc
push
hlt
mov
xchg
in
fwait
rclb
adc
push
add
scas
sbb
in
repnz
sub
jmp
call
pop
mov
testl
mov
pop
jg
jle
inc
push
sbb
in
xchg
xchg
mov
dec
xor
dec
lock
clc
decb
pop
call
xchg
ud1
call
inc
insl
pop
add
xchg
repnz
sub
mov
punpcklbw
or
int
loope
js
loope
pusha
mov
dec
or
pop
addr16
xor
xchg
call
lahf
out
in
lock
ds
fsubrl
mov
out
icebp
pop
imul
enter
clc
in
xchg
mov
popf
mov
icebp
filds
pop
rcll
jbe
movsl
scas
sbb
test
sbb
pop
cmpsl
jbe
gs
inc
fucom
js
shr
cmp
stos
push
push
incb
icebp
movsl
inc
test
jns
push
fcomi
icebp
mov
lret
jno
filds
ljmp
xor
inc
lahf
dec
lret
cmpl
lods
mov
mov
xchg
xchg
hlt
lods
pop
fucomip
push
popa
shll
mov
adcl
shlb
stos
aas
inc
pop
cwtl
shlb
stos
ror
dec
cmp
mov
pop
pushf
lret
or
sub
insb
mov
mov
dec
mov
decb
in
mov
orl
pop
mov
xor
lods
inc
mov
lea
icebp
sti
repnz
mov
mov
add
xlat
imul
mov
xor
int
xchg
inc
popa
cmpsb
push
jge
sub
push
lods
pop
xchg
push
sub
data16
adc
jbe
xchg
xorb
or
and
sbb
ret
adc
iret
in
test
xchg
dec
cs
mov
jl
das
cmpsl
ja
sbb
cli
scas
lods
insb
mov
inc
in
imull
fwait
lahf
xor
cltd
aas
jb
stc
movsb
nop
push
dec
nop
xor
js
fs
adc
jbe
insl
stos
lods
xor
jne
mov
xlat
mov
aam
mov
cli
jp
insb
out
movsb
mov
stos
pop
das
or
testl
rorb
inc
mull
mov
out
mov
cmp
xor
jo
pop
ds
push
push
push
xor
ds
mov
xchg
sub
sbb
jbe
out
dec
dec
insl
stos
push
mov
clc
in
sub
aad
add
pop
insl
inc
and
or
and
lock
sub
push
push
inc
lcall
ljmp
or
jns
xchg
and
mov
popa
jbe
clc
xchg
dec
push
lahf
push
xchg
std
xchg
shll
push
scas
add
inc
mov
jnp
loopne
pop
xchg
push
add
mov
gs
mov
cmpsl
daa
add
stos
sahf
mov
js
dec
adc
mov
lods
cli
adc
jmp
dec
ja
stc
fwait
das
aam
pop
add
incb
inc
jecxz
leave
enter
mov
clc
and
jno
jg
scas
icebp
cmp
sub
inc
into
cltd
jne
mov
pop
push
scas
jecxz
pop
nop
stc
daa
or
ficoml
cmpsb
fbstp
out
pop
ds
or
mov
or
sti
dec
sub
sub
out
mov
aas
neg
sar
je
mov
mov
lds
popa
aaa
andb
cmpl
add
test
jecxz
jns
cli
adc
mov
and
scas
xchg
and
scas
and
add
xchg
adc
mov
mov
movsb
xchg
sub
sub
mov
fcompp
mov
into
enter
movsl
cli
mov
jo
lcall
push
mov
push
mov
xchg
xchg
jge
jle
mov
jmp
cltd
cld
in
or
push
int3
pop
push
cmp
lds
mov
sbb
jmp
jb
add
std
push
scas
mov
add
sbb
out
jnp
insl
imul
sbb
inc
mov
jge
js
int3
xorl
mov
in
hlt
mov
pop
dec
shlb
fyl2xp1
je
dec
pop
adc
imul
je
add
jp
and
sahf
push
rcll
subb
jl
add
sbb
jmp
in
jge
shl
das
or
jbe
sahf
sub
leave
mov
xchg
xor
sti
mov
in
testb
pop
cmp
int
fldenv
aaa
sub
push
loope
sarl
xor
nop
cmp
jno
push
es
sub
and
test
testl
andb
xchg
mov
rolb
shr
push
call
aam
dec
inc
sbb
je
data16
mov
jp
outsl
jae
jge
shlb
stos
cltd
adc
mov
int3
cli
pop
lcall
and
pop
jbe
push
pop
inc
leave
testl
mov
mov
aas
fstl
inc
subb
cli
out
fcmovu
or
pop
sbb
rcrl
sbb
cld
sub
ljmp
in
mov
adc
rol
or
cmp
dec
out
ret
inc
mov
pop
push
aam
inc
imul
movsl
xchg
inc
jl
leave
push
jne
sbb
out
jno
in
cvtpi2ps
sbb
insb
push
push
scas
dec
cmpsl
mov
aad
test
in
inc
cli
sarb
int3
movl
mov
in
in
test
imul
mov
and
cmp
push
scas
addl
int3
ret
mov
dec
mov
inc
xchg
gs
fs
push
pop
and
sub
jmp
pop
sahf
cmp
repnz
mov
stos
jnp
pop
xchg
dec
je
lcall
xchg
push
jne
movsl
adc
adc
out
es
fs
xchg
cmp
inc
ror
in
sbb
jge
mov
jecxz
jl
inc
mov
ja
or
or
xchg
jno,pt
and
dec
js
test
outsl
mov
mov
pop
add
in
push
pop
mov
mov
ljmp
and
icebp
push
pop
fiaddl
repz
cmpsb
adc
inc
or
jns
repz
sti
call
test
in
mov
scas
sbb
adc
cltd
dec
adc
pop
leave
sbb
fiadds
mov
xabort
rcl
dec
jns
stc
push
daa
pop
ret
sub
cmp
repz
mov
cmp
or
mov
fidivrs
cwtl
fwait
ss
test
lret
pop
adc
cmp
addr16
inc
or
divb
jp
add
sub
pop
fdivl
mov
jle
mov
xor
push
dec
sub
stos
int
nop
cmc
test
sbb
adc
xchg
sbb
bound
loop
xchg
adc
sbb
js
adc
nop
sbb
push
pop
xchg
repz
and
loopne
mov
xchg
scas
xchg
in
push
scas
pop
popf
mov
fimull
mov
mov
xchg
fcompl
repz
mov
repz
cs
loopne
inc
lahf
pop
arpl
int3
call
add
add
out
shl
xor
pop
xchg
jns
fwait
daa
cmp
ficomps
pop
pop
loop
call
mov
inc
xchg
push
add
fs
aad
into
call
push
into
pop
sti
jl
inc
mov
clc
add
fnstsw
aas
aam
add
cmpsl
push
push
xchg
popf
cmp
adc
out
into
cmp
bound
stc
jge
xchg
aad
lret
cmpsb
rcrl
aas
adc
stc
fidivrl
mov
lret
fcoms
sbb
clc
xlat
push
xchg
imul
mov
cld
push
outsb
inc
idivb
push
push
push
les
mov
popa
dec
pop
clc
mov
mov
fldl
mov
shrb
rorb
test
test
cmpsl
enter
lds
inc
testb
mov
adc
es
xor
data16
jle
pusha
adc
mov
loopne
sub
lds
and
cmp
pusha
sub
mov
sub
adc
mov
les
int
cmp
aam
mov
sub
dec
cmp
and
xchg
cs
mov
sbb
xchg
mov
fstl
rcrb
cmpsl
imul
and
jge
or
add
data16
into
cmc
pop
clc
cmc
int
rcl
sub
or
popa
push
lret
add
das
jl
rorl
data16
pop
cmp
popf
cmp
jge
xchg
sub
dec
sub
inc
ljmp
push
mov
shrb
mov
outsl
pop
clc
mov
push
lods
nop
mov
orb
loop
loope
mov
lcall
xor
push
lods
pop
pop
mov
mov
in
jnp
sahf
lock
out
mov
outsb
pop
sahf
orb
push
lcall
addr16
pop
std
sub
jnp
mov
jecxz
repz
mov
imul
xor
nop
ret
sbb
arpl
mov
jb
adc
mov
test
rol
mov
in
jmp
nop
aad
shl
push
data16
sarl
mov
sub
adcl
adc
jmp
je
dec
scas
push
mov
mov
aaa
mov
icebp
push
or
xchg
xchg
xor
scas
inc
jbe
rorl
jmp
cmp
inc
cmp
sbb
pop
mov
cltd
seto
xchg
adc
in
and
dec
adc
mov
pop
call
xchg
mov
jo
loop
mov
neg
dec
jnp
in
sbb
bound
dec
push
out
mov
cmp
xchg
or
xchg
lcall
push
and
xchg
lods
pop
push
adc
shlb
mov
jns
dec
jmp
xchg
pop
or
adc
call
ljmp
mov
out
and
and
adc
lods
cmpsb
jl
ljmp
addr16
aam
mov
mov
dec
push
fldcw
cmpsl
outsb
or
mov
insl
scas
add
loope
cmc
xchg
shrb
cmp
inc
xchg
fisttpll
dec
cmp
mov
xchg
test
mov
add
sarl
sbb
std
cmc
sub
xor
mov
loope
sbb
push
push
mov
bnd
xchg
test
or
hlt
out
and
xor
sub
dec
jecxz
mov
add
push
dec
sbb
cld
cwtl
mov
data16
xorb
mov
add
aam
add
lods
mov
inc
add
and
add
cmp
repz
scas
rclb
popa
je
icebp
mov
cmp
sbb
je
add
adc
lds
push
ljmp
lods
mov
jae
and
in
push
mov
mov
inc
lcall
and
shlb
adc
adcb
iret
dec
repz
cmp
xor
or
fisubl
or
arpl
dec
mov
insb
jbe
in
aas
jp
mov
out
cmp
stos
add
mov
dec
mov
js
push
fcmovu
push
xchg
leave
cmp
fcoml
jne
mov
xor
jl
out
cmp
cmp
or
das
push
jp
out
mov
push
fwait
pop
mov
xor
xlat
in
mov
jo
out
int3
shll
pop
pop
in
mov
and
into
sbb
xor
mov
testl
or
dec
xchg
out
jg
mov
int
stos
pop
adc
sub
popf
jmp
push
xchg
hlt
pop
jl
mov
shll
and
mov
ljmp
push
stos
mov
mov
mov
sbb
xor
sbb
push
in
fwait
mov
js,pn
and
cwtl
mov
jmp
and
mov
push
ds
sti
and
xchg
cmp
cmpb
in
testb
fistl
mov
mov
repnz
mov
repz
test
jge
jno
cld
insb
out
in
push
xor
or
cs
das
jo
xchg
or
addr16
mov
jne
xor
xor
mov
lret
pop
inc
shrl
push
mov
xor
mov
lock
imul
xchg
adc
pop
jno
pop
mov
fs
mov
das
mov
daa
or
sub
stos
stos
js
and
shlb
mulb
hlt
sbb
out
sbb
test
jl
div
push
ret
inc
adc
sbb
and
lods
mov
xlat
pusha
mov
push
push
idivb
mov
fstpl
mov
in
cmpsb
mov
mov
jge
dec
mov
inc
dec
data16
fs
mov
adc
ficomps
in
gs
lcall
mov
loop
outsl
add
out
out
mov
cmp
and
insl
andl
pop
adc
sub
jo
ljmp
je
mov
sahf
mov
add
xchg
mov
jle
push
adc
lret
xlat
in
xchg
out
add
roll
dec
fnstcw
adc
hlt
popa
test
cs
xchg
fcmovb
adc
imul
push
jne
scas
cltd
lret
imul
lcall
add
arpl
out
rol
cmp
sti
movsb
test
mulb
adc
add
adc
jp
into
jecxz
pop
mov
stos
xchg
incl
stos
inc
fnsave
lock
leave
sbb
mov
cmc
movl
push
and
jmp
xor
popf
inc
mov
cld
repnz
push
fcoml
arpl
stos
and
stos
and
je
ja
fsubs
add
jmp
cwtl
or
shlb
mov
add
in
mov
insl
cld
sahf
dec
jle
mov
add
aas
call
mov
xchg
jmp
inc
sbb
orl
xorl
push
movsl
dec
sti
lods
inc
pop
adc
jae
inc
mov
jge
mov
inc
cwtl
loopne
int3
jns
sbb
imul
pop
dec
movsb
or
pop
push
call
jb
sbb
mulb
negl
in
pop
lods
in
inc
outsb
mov
fwait
mov
dec
divl
lds
stos
movsb
xor
add
popa
and
in
scas
ret
push
xor
mov
dec
pusha
cld
rol
jns
shll
cmp
call
fs
gs
inc
in
test
pop
jle
ds
adc
les
mov
fidivrs
test
jmp
loope
mov
and
popa
es
add
or
xor
inc
fcompl
cmpsl
repz
sub
cld
sbb
mov
jle
xor
mov
ret
out
dec
mov
add
test
je
xor
fdivs
repnz
xchg
push
jp
push
ljmp
out
jb
cwtl
adc
lods
int3
pop
cmp
mov
ljmp
mov
imul
je
mov
cmp
sti
lcall
cmp
sbb
xchg
shlb
cmp
ret
push
sarl
enter
xchg
addb
cltd
repz
test
popf
int3
jle
popf
pop
pusha
lret
sbb
std
or
or
roll
add
das
jns
and
xchg
mov
xchg
pop
lcall
hlt
fiaddl
jo
add
flds
add
fbld
iret
repnz
mov
mov
push
adc
fmuls
rcl
stos
mov
pushf
pop
into
stos
inc
xor
adc
pop
dec
into
or
mov
mov
pop
dec
xor
movsl
xlat
mov
mov
xor
xor
pop
mov
fcmovnbe
cli
lods
mov
adc
shlb
fistps
jecxz
pop
mov
cmp
inc
jo
icebp
adc
aaa
cmp
and
repz
pop
sbb
cmc
inc
mov
mov
int3
xchg
subb
loopne
push
and
push
xor
push
mov
adc
pusha
sbb
and
insl
lahf
fsubrp
ss
fcomps
cmc
and
sub
pop
xchg
test
dec
mov
mov
insl
mov
xchg
test
mov
dec
xchg
mov
stos
or
mov
pop
aaa
xor
and
insl
cmp
data16
add
and
sub
sbb
add
into
jecxz
sarl
fcoml
ss
rorl
pop
mov
xchg
push
xchg
pop
hlt
fiaddl
xlat
xchg
sub
mov
xor
popa
push
outsl
mov
out
pop
fbld
sub
adc
in
sbbb
movsl
loop
mov
popf
dec
mov
sub
or
jg
popa
aas
popf
out
xchg
pcmpgtw
cwtl
addr16
mov
int
mov
cmp
imul
mov
icebp
fstps
lcall
mov
movsl
dec
jp
push
test
fsubs
mov
ret
out
jns
lret
and
and
mov
mov
out
cltd
add
xor
jbe
push
jbe
adc
loopne
mov
pop
popf
negl
cmc
shll
adc
loopne
sub
fsubr
dec
sysexit
test
xor
push
cld
and
arpl
icebp
clc
lods
jmp
push
xor
in
sahf
enter
sti
sub
and
sub
rolb
je
mov
ret
outsb
in
cli
dec
inc
rclb
mov
loopne
jp
out
cmp
adc
sub
inc
and
or
test
mov
bound
add
mov
fbstp
insl
or
fisttps
enter
imul
inc
xchg
dec
and
adc
inc
or
call
mov
cli
adc
icebp
sti
cwtl
cs
idiv
orb
push
pushl
xchg
jo
out
and
push
xor
cmp
fnsave
aaa
pop
adc
sti
pushf
imull
or
sbb
inc
cmp
test
subb
mull
inc
mov
push
jae
mov
mov
jne
push
jae
fsts
inc
ds
lds
sub
cmp
fistps
sub
sti
int3
cmp
cld
jecxz
ja
mov
cmpsb
inc
adc
mov
mov
fstpt
in
enter
adc
sub
pop
imul
fidivrl
mov
jae
xor
jp
pop
bound
add
or
push
daa
mov
mulb
push
xor
push
clc
aas
push
imul
cwtl
in
dec
sti
repz
jns
add
push
fidivrl
xchg
je
jb
xor
incl
lods
test
mov
mov
mov
ret
cmp
inc
push
mov
or
pop
add
mov
pop
inc
loope
out
push
orl
sbb
mov
dec
leave
cmp
add
arpl
pop
add
addr16
push
xchg
pushl
leave
sub
mov
ret
or
push
lcall
jle
icebp
outsl
fldz
loope
pop
cmpsb
imul
out
ret
push
add
ljmp
repnz
add
or
inc
push
aam
cmp
xchg
jl
push
sbb
push
movsb
imul
mov
fsubrl
cmpsl
mov
cli
mov
jno
dec
iret
push
stos
add
daa
xor
pushf
xchg
mov
mov
jns
repz
out
pop
pop
pop
notb
inc
fstps
inc
inc
pop
lret
loope
aad
enter
loopne
and
rcr
aas
test
push
push
ja
and
cmp
and
xchg
cli
mov
xor
pop
mov
adc
push
lea
and
jnp
add
push
mov
int
lahf
enter
inc
jbe
shlb
mov
add
out
das
jle
pop
pop
mov
jne
adc
jecxz
add
push
shlb
mov
adc
aam
push
loope
hlt
in
pop
sbbl
push
in
cli
and
ds
xor
or
or
pop
or
out
ljmp
outsl
in
add
aaa
ss
push
jl
push
loopne
leave
das
mov
pop
and
mov
mov
add
and
roll
inc
sbb
sti
inc
xor
pop
nop
je
inc
xchg
sbb
pop
shl
ds
outsb
lods
imul
sub
sarb
rcl
out
sub
loopne
sbb
dec
and
xor
sarb
cmp
hlt
mov
pop
jae
push
in
or
loope
int3
add
movsl
inc
orb
sbb
fbld
pop
in
jge
mov
jp
sbb
mov
lea
or
and
xchg
xor
flds
repz
movsb
shll
stc
mov
xor
mov
jb
jle
add
in
or
adc
adc
jg
scas
das
lods
xchg
or
xchg
and
jbe
dec
adc
pop
cmp
insb
movsl
push
int3
cmpsl
push
movsb
das
loope
cld
bound
fidivrl
dec
push
add
decl
js
inc
add
or
add
rorl
pop
aam
loopne
movsb
xor
mov
xor
mov
or
les
xorl
sbb
xchg
cmp
mov
add
jo
dec
cmpsl
iret
call
aam
mov
xchg
jb
push
lcall
or
jnp
ja
ljmp
lock
mov
test
cmp
je
mov
les
cmp
rorl
icebp
push
ds
xor
push
stos
movsb
and
inc
stc
frstor
sarl
pusha
and
jno
sub
jno
movsb
mov
sub
sbb
loop
pop
icebp
movsb
ret
aas
pop
scas
push
inc
fbstp
js
pop
out
sbb
mov
ret
daa
push
mov
mov
push
std
mov
mov
mov
popf
cs
xchg
test
js
adc
push
in
and
cwtl
rorb
cmp
test
or
jnp
pushf
cld
xor
pop
das
pop
dec
dec
fisubrl
jmp
add
lret
xchg
jp
cmp
aas
insb
iret
mov
imul
test
aas
jg
loop
daa
es
cmp
xchg
aaa
and
jno
mov
adc
repnz
dec
push
or
adc
jl
icebp
xor
mov
test
ja
ds
sub
cmp
push
fistpl
cmp
out
lret
imul
sub
and
cmpsl
daa
jl
xchg
add
mov
ljmp
and
mov
mov
jnp
mov
aam
jmp
shrl
and
into
xchg
inc
lods
movsb
mov
stos
test
ffree
pushw
adc
push
cs
mov
std
and
imul
cmpsb
jp
mov
lods
xchg
mov
lods
dec
jae
push
int3
stos
push
pop
out
pop
test
pop
shl
clc
mov
xchg
and
cmp
setge
daa
into
sbb
in
hlt
loope
and
mov
mov
adc
xor
jle
xchg
stos
ss
pop
mov
jno
cltd
add
ljmp
aas
repnz
and
xchg
leave
mov
mov
stc
push
out
push
sub
mov
fwait
cmp
fldt
jnp
jns
loop
or
cmp
mov
push
jmp
xorl
insb
mov
insl
in
stos
inc
pop
jns
dec
push
nop
adc
push
xchg
sub
cmpsb
and
pop
lahf
lea
rorb
fimuls
insb
jle
push
push
mov
cmp
pavgw
dec
data16
shll
cmpsb
jecxz
fldenv
filds
addr16
adc
or
xchg
inc
xor
mov
pop
scas
sub
inc
jge
popa
lds
and
cmp
scas
push
stos
stos
fwait
push
lods
or
into
jge
push
gs
push
fimuls
cmp
jbe
imul
popf
fwait
jecxz
add
dec
mov
lock
fisubrl
xchg
rcr
movsb
leave
push
xchg
jge
xchg
xchg
clc
popf
sbb
cmpsl
pop
ss
daa
jmp
fmuls
dec
daa
sbb
jo
inc
fstps
mov
cmp
daa
sub
sub
out
mov
dec
test
addr16
fcomi
gs
jae
fimull
xor
ja
out
stos
xor
cmpsb
pop
jb
lods
mov
imul
lods
cmp
sbb
cmp
daa
lea
fmul
jle
rorl
les
lahf
xor
imul
lds
push
push
xorb
test
ljmp
fsubr
push
mov
nop
dec
inc
in
roll
add
jbe
jnp
xchg
add
pop
sub
addr16
arpl
stos
das
divl
inc
inc
inc
fwait
adc
inc
cmp
mov
pusha
test
clc
sub
fs
test
lock
sub
fistpll
stos
sub
pushf
xor
jle
mov
cmpsb
adc
cmp
ret
or
sahf
mov
mov
xchg
and
lock
xchg
fcomip
dec
xor
mov
mov
push
mov
sub
xor
cmpl
dec
fisttpll
sbb
push
sti
insb
pusha
popa
lock
rcl
inc
lcall
jbe
daa
jp
xlat
push
popf
pop
fdivrs
xor
xor
xchg
xchg
fsub
push
add
inc
mov
mov
inc
jp
test
test
faddl
rcrb
fld
gs
mov
in
bound
mov
loope
shr
push
sahf
jecxz
int3
out
mov
pop
jnp
mov
lahf
ds
inc
incl
xchg
xorb
pusha
cmc
mov
mov
mov
stc
pusha
emms
jne
leave
dec
mov
mov
in
or
mov
out
aad
aaa
mov
or
xchg
mov
jns
jp
cmp
sahf
sti
push
lock
mov
sub
inc
movsl
mov
xor
stos
mov
les
xchg
std
dec
movsl
int3
inc
test
push
mov
loop
or
outsb
jae
xchg
addr16
mov
cwtl
push
hlt
rcr
jae
mov
ja
jp
add
fadds
sbb
das
sub
pop
aam
lods
inc
stos
je
setle
mov
shll
test
int3
jnp
jnp
pop
sub
cmp
mov
jne
into
sahf
pop
cmp
aaa
insb
enter
in
and
fistl
xchg
into
filds
fistps
lds
or
sbb
pop
pusha
cmp
fsubs
or
js
mov
mov
imul
or
ret
adc
scas
xchg
pushl
or
inc
cmp
aam
cmc
fwait
sub
shrb
or
mov
add
loop
pop
jmp
adc
sub
jg
and
cmp
ret
sbb
add
xorl
test
jl
inc
jmp
push
push
sbb
mov
roll
shlb
cli
dec
jne
pop
pop
jb
sub
fmul
sbbl
les
add
xorl
sar
xor
pop
add
push
add
pop
ds
in
ud0
jmp
mov
insb
pusha
les
das
ficoml
mov
out
cs
cmp
adcb
test
js
mov
jb
scas
or
sub
pop
rcrb
mov
adc
and
pop
mov
pop
orb
cmc
enter
shlb
xor
lods
pop
xchg
loope
aad
cli
push
pop
shrl
push
xor
sahf
dec
adc
cmp
jg
mov
adc
inc
shlb
sub
enter
cmp
test
or
mov
sub
push
mov
pop
mov
add
popa
push
mov
jge
adc
fdivp
div
mov
jl
icebp
pusha
xor
inc
outsl
xchg
adc
test
mov
insl
add
rorb
mov
shll
outsb
push
adc
cmc
mov
xchg
icebp
out
xchg
add
push
add
cs
jmp
mov
or
mov
sub
inc
ja
test
jp
cwtl
mov
adc
jne
dec
mov
cltd
icebp
mov
jns
aam
lds
repz
add
cltd
mov
sub
loope
inc
dec
loop
mov
sub
lret
ljmp
daa
add
mov
or
es
insb
jne
add
call
enter
mov
and
pop
mov
jnp
mov
cmpsl
push
imul
sti
mov
js
lea
lret
xchg
adc
push
fsub
sub
mov
cmp
inc
jmp
cmpsl
aam
pop
cld
jno
je
test
sub
jmp
rolb
xchg
pop
push
mov
out
addl
pushf
mov
xor
mov
push
xchg
mov
lret
negl
xor
ret
les
ds
dec
and
push
cltd
sbb
push
jg
cmp
ret
fstpl
lahf
movsb
push
data16
pusha
mov
adc
into
inc
sbb
or
je
xor
cmp
sbb
mov
and
lds
dec
ret
add
cmp
int
push
ja
lcall
stos
imul
repnz
data16
enter
adc
clc
loope
pop
lea
addr16
sbb
or
test
pop
lds
add
push
imul
mov
cmpsl
std
jl
addr16
hlt
sbb
sbb
popa
pop
ret
rcll
mov
test
push
xor
movsb
sbb
icebp
ds
in
and
fildll
sub
jno
sti
std
in
popf
xor
popa
aad
adc
mov
jp
leave
mov
aad
pusha
inc
cltd
mov
outsl
das
jae
data16
push
or
lds
mov
pusha
xor
das
mov
pushf
cwtl
mov
loopne
xor
adcl
imul
mov
ljmp
push
jb
mov
dec
xor
loope
and
mov
rorb
jo
mov
sahf
push
push
mov
mov
or
or
sarl
pop
in
jnp
hlt
sbb
pop
sbb
xchg
jmp
push
adc
sub
imul
inc
pop
xchg
popf
xchg
jmp
mov
and
test
xor
repnz
sub
jl
loopne
xor
repnz
out
mov
xor
ss
test
cmpsb
repnz
into
pop
xchg
aas
push
xchg
xor
stos
pop
fcoml
add
jecxz
repz
mov
rol
xor
shl
pusha
scas
mov
mov
mov
mov
sub
add
push
dec
js
and
pop
jle
push
cmpsb
add
inc
push
cmp
mov
xchg
lret
xor
in
xchg
push
sub
shlb
pushf
cmp
xchg
loope
mov
outsb
lahf
fisubl
sub
sarb
jns
out
cmp
pop
push
stos
sbb
shlb
dec
mov
mov
rorl
and
sub
ficomps
insl
jmp
push
adc
jno
add
fbld
mov
push
sti
sbb
lret
nop
xlat
sbb
f2xm1
cmc
mov
jnp
daa
fisttpll
mov
ret
push
mov
pop
or
lahf
mov
adc
fsub
addr16
sbb
or
dec
jae
pop
and
loope
sub
shlb
cltd
jo
clc
loop
jns
cwtl
mov
xchg
cmp
test
push
sahf
jno
sub
sti
xchg
iret
and
mov
je
insb
mov
sbb
dec
lds
sbb
mov
lods
inc
call
ror
repz
daa
mov
fs
push
mov
pop
ja
pop
mov
out
add
or
inc
sub
jle
adcb
stos
jle
lahf
push
cmpsl
decl
sub
test
add
das
icebp
pop
push
arpl
outsl
xchg
pop
adc
movsb
xchg
sub
pop
cmp
adc
fld1
mov
inc
out
cld
sbb
mov
mov
out
sbb
aas
cs
push
xchg
and
inc
aam
imul
jl
mov
cmpb
jbe
mov
scas
jnp
insb
mov
jge
orl
or
xchg
gs
xchg
aas
xor
test
xchg
std
leave
cmp
or
mov
clc
popf
sub
mov
rolb
and
mov
inc
mov
pusha
jnp
out
stos
bound
sub
out
and
xchg
push
jl
shll
sbb
hlt
push
loope
mov
andl
adc
outsl
hlt
xor
inc
iret
jle
or
inc
push
scas
fbstp
in
sbb
js
aam
movsb
je
aaa
xor
xor
loopne
dec
dec
ja
add
inc
xlat
push
mov
push
cmpsl
jno
push
aaa
dec
pop
test
cmpsl
imul
sub
popf
push
ret
ficomps
mov
adc
daa
popf
lcall
mov
adc
lahf
and
pop
cwtl
insb
adcl
and
adc
pop
mov
xor
mov
loopne
icebp
cmp
inc
add
stos
jge
subb
and
mov
repnz
push
rcrl
push
push
push
out
imul
push
or
lcall
shll
pop
loope
xchg
into
popa
cwtl
dec
das
arpl
mov
mov
cltd
adc
inc
sar
xor
cmc
fcmovne
xor
lahf
mov
push
outsl
shlb
dec
aam
inc
mov
xchg
aad
xchg
add
in
jbe
outsb
aaa
or
xchg
adc
sbb
sahf
xchg
orl
jnp
jge
outsl
ret
xchg
pop
pop
add
sahf
or
out
je
std
iret
packsswb
adc
and
xchg
xor
xchg
loope,pn
dec
or
cmp
fucomi
int
mov
pop
add
stos
xor
icebp
cmp
sub
pusha
addb
shrl
ss
in
xor
jge
aam
andb
mov
jbe
push
lret
fcomps
mov
fstpl
jo
dec
test
test
test
pop
inc
cwtl
addr16
movsl
sbb
and
cmp
arpl
cmpsb
in
xchg
mov
cmpsl
push
sub
mov
shrl
cltd
arpl
jne
int3
es
pushl
enter
sbb
cmp
push
cs
jecxz
xchg
push
shll
inc
ret
mov
test
popf
add
or
insl
mov
dec
mov
push
lock
and
dec
sbb
inc
mov
popf
fisttps
ss
xchg
cmp
or
jbe
test
out
sub
pop
fdiv
lock
jmp
jns
imulb
jmp
push
cmpsb
lock
mov
jg
jno
add
dec
mov
and
imul
and
and
scas
popa
js
aaa
scas
mov
sbbl
or
sub
add
jp
cld
cltd
shrb
inc
sub
mov
or
sbb
push
xor
in
ljmp
data16
idivb
pop
pop
stos
and
and
xchg
sub
aad
add
in
dec
lds
xor
cmp
push
push
popf
fs
sti
mov
push
sub
imul
nop
sbb
inc
sub
mov
lret
cmp
lock
pusha
adc
pushf
jne
push
imul
jge
loop
sti
es
adc
and
push
and
sub
stos
dec
push
jp
or
dec
daa
xor
jo
into
inc
imul
and
sti
fstpl
insb
push
or
mov
add
dec
jb
out
sub
decl
hlt
xor
push
lahf
mov
adc
movsl
jge
fcoms
mov
popa
add
jns
fdivrs
call
addr16
mov
orl
loop
shl
dec
int3
dec
jle
and
dec
xchg
push
mov
rcrb
test
adcl
test
and
in
stc
lock
shlb
jnp
fisubl
jbe
stc
and
jl
dec
popf
mov
popf
sbb
lahf
add
mov
insl
xor
lcall
jp
stc
mov
and
stos
lret
call
stc
jp
add
jmp
adc
insl
cs
jo
fdivrl
mov
sub
stos
pop
daa
jmp
jecxz
push
adc
fst
push
mov
out
mov
xchg
xor
fucom
mulb
repz
mov
gs
fnstcw
xlat
mov
lea
test
xchg
sub
test
dec
pop
shlb
mov
iret
popf
imul
jbe
fidivl
cmpsb
out
jnp
jg
xlat
sbb
mul
movsb
jmp
jmp
stos
xchg
into
xor
test
mov
ljmp
and
es
je
add
flds
scas
imul
mov
insb
lret
adc
mov
loop,pt
xchg
cwtl
sbb
int
jecxz
sbb
imul
jo
enter
popf
ret
or
dec
and
push
sub
add
mov
push
fstpt
cli
sub
push
lods
inc
incl
ja
out
rolb
dec
push
fsubrp
in
pop
mov
lret
cmpl
push
cmp
mov
aam
xchg
lret
hlt
sub
dec
pop
aam
sbb
xchg
sbb
into
aas
les
aas
jecxz
arpl
or
movsb
pop
testb
stos
cmp
dec
or
testl
lret
stos
dec
and
test
add
fists
jl
sub
inc
and
popa
mov
mov
jl
pop
adc
cmp
out
and
insl
jne
out
pusha
sub
popf
sahf
in
or
adcl
nop
lret
pop
xchg
inc
add
sub
ret
pop
xchg
hlt
rorl
mov
sbb
lret
aaa
and
xchg
add
push
stos
pop
pop
inc
out
fcmovnu
inc
lods
push
gs
sub
iret
mov
popf
xchg
xchg
andb
movsb
mov
add
popa
mov
jno
mov
movb
aam
or
push
xchg
cmp
fildll
add
in
lea
mov
mov
repnz
hlt
jnp
test
push
jge
test
push
ret
daa
pushf
pushf
xchg
subl
xor
inc
adc
push
dec
push
fisubs
sub
mov
shrl
inc
mov
fildl
pop
sub
pop
xor
loope
test
jo
xchg
es
and
pop
xor
testl
xchg
inc
cli
gs
or
pusha
test
bound
xlat
movsl
popf
lods
adc
out
das
inc
popf
ljmp
cwtl
cmp
and
fadd
addb
bnd
gs
dec
push
jne
or
mov
jg
mull
pop
or
sub
xor
mov
push
popf
aad
jle
in
sub
fnsave
repnz
pop
xor
cmpb
and
jbe
bound
push
xor
mov
mov
sbb
lret
xchg
sub
stos
fcoms
jne
sbb
call
jl
decl
or
mov
xchg
cmp
or
ljmp
and
sbb
test
and
fs
sbb
fsubs
inc
fsubrp
mov
ja
sti
fcomi
jae
mov
lods
out
or
jl
scas
pop
out
pop
xor
push
adc
stc
loopne
mov
nop
inc
or
fnstcw
orl
hlt
push
add
ficomps
push
lock
xor
push
pop
jbe
ljmp
mov
leave
lock
dec
int3
mov
xchg
sarb
out
out
call
sub
into
rcrl
mov
test
mov
je
cmp
inc
mov
sub
in
inc
cmp
push
cmp
aaa
cmp
mov
jmp
push
mov
cs
cli
mov
mov
jmp
sbb
mov
faddl
nop
das
shll
dec
popf
stos
jae
pop
mov
test
mov
jge
clc
sub
adc
in
into
into
push
popf
fldcw
and
xor
jmp
xadd
movq
data16
add
mov
push
and
jge
adc
inc
pop
into
mov
mov
mov
cltd
cltd
add
icebp
mov
popa
scas
cmpsb
inc
js
mov
cmp
inc
je
incl
jae
mov
cmp
mov
addb
fldcw
push
jb
jae
int3
adc
mov
arpl
int
clc
lret
sub
inc
sbb
push
imul
rorl
add
pop
scas
cmpsl
and
jp
inc
in
pop
pop
push
roll
push
pop
lea
imul
cmpl
in
push
pop
and
pushf
jle
xchg
mov
xchg
xchg
movsl
sahf
lret
cltd
xorl
pop
stos
pop
lock
rcrl
or
xor
fisttpl
fmull
out
sub
ljmp
mov
pushf
xchg
jno
push
into
stc
cmp
cmpsl
dec
inc
add
inc
leave
cli
mov
xchg
sarl
xor
pusha
adc
movsb
inc
lret
or
mov
jns
cmp
sbb
addl
mov
cmpsb
sbb
jbe
mov
loopne
jbe
dec
jnp
ja
mov
scas
punpckhwd
fsts
push
mov
stc
mov
cmpb
xor
xor
out
xchg
insb
sub
in
push
subb
mov
int3
sub
mov
xchg
mov
iret
loope
les
push
cmp
clc
add
mov
pop
hlt
or
int3
mulb
sahf
mov
lock
cmpsb
shll
insl
sub
jnp
xchg
out
call
aas
ss
sub
mov
shr
fldt
and
fistpl
jae
pop
stos
pop
addr16
adc
xor
push
test
jne
cmp
neg
add
fs
sbb
adc
mov
xchg
or
pusha
mov
inc
test
iret
cwtl
mov
mov
aaa
mov
lcall
jp
orb
add
vcvtps2dq
stos
inc
adc
leave
dec
jg
and
jns
mov
outsl
mov
push
imulb
push
sub
dec
test
nop
in
std
ror
adc
sub
fwait
add
inc
push
xchg
cs
mov
lds
xor
mov
aaa
adc
sbb
shll
in
xchg
adc
and
xor
mov
add
mov
pop
stc
ret
ss
xlat
xor
loop
div
out
imul
dec
jle
jo
outsb
xor
icebp
mov
push
xchg
and
aad
pop
dec
aad
mov
xchg
mov
inc
stos
mov
aad
push
jb
mov
subl
repz
test
jecxz
cmp
scas
les
je
jno
stos
adc
adc
xchg
in
jl
add
dec
sub
mov
dec
inc
add
xchg
push
in
pop
add
xchg
cmp
adc
ljmp
mov
mov
lock
fbstp
pop
push
mov
subl
fiaddl
mov
mov
mov
inc
mov
mov
inc
negl
out
lods
nop
imul
inc
and
repnz
and
sub
adc
pushf
subb
and
mov
cmpsb
clc
mov
jo
ds
roll
push
imul
sub
fsts
adc
mov
lods
mov
xchg
outsb
out
lret
arpl
push
fwait
pop
jmp
mov
movsl
inc
ret
cmc
inc
aaa
lock
pop
jmp
push
adc
cmp
mov
pop
sbb
and
add
mov
sbb
es
popf
inc
cmp
jge
shll
add
pop
mov
xchg
inc
mov
pop
jmp
data16
adc
jmp
popa
pop
cmp
push
in
jb
arpl
adc
dec
push
push
popf
lcall
jno
push
fbstp
mov
adc
xchg
cld
std
adc
pop
fnstenv
pop
xchg
cltd
cmp
jae
sbb
xchg
cmp
xor
call
mov
fidivl
arpl
cmp
add
or
ss
jns
loop
ret
je
sbb
stc
lock
jnp
inc
pop
or
cmp
jae
jmp
mov
ret
icebp
or
pop
arpl
add
movsl
cwtl
sarb
cli
lds
std
test
mov
and
pop
test
mov
data16
and
xchg
mov
cwtl
popa
lods
outsl
add
xor
mov
pop
adc
push
dec
addr16
inc
push
int
into
mov
cli
sahf
pop
stos
lret
dec
push
cli
test
xor
ret
ljmp
inc
fiadds
xchg
mov
dec
jmp
sti
mov
xchg
jmp
mov
stc
daa
pop
jle
lock
or
mov
icebp
add
and
ret
jecxz
add
xor
mov
add
loop
sub
sbb
js
leave
js
mov
roll
sbb
lret
mov
test
sub
lods
push
test
xchg
xor
aaa
dec
shll
daa
mov
mov
repnz
dec
dec
and
xchg
loope
loopne
lds
cld
insl
adc
es
fbstp
push
mov
sti
ss
out
test
ds
cmp
pushf
push
mov
popf
dec
lret
pop
xchg
sbb
push
push
int
xchg
mov
dec
cld
stos
xlat
cmp
sub
inc
insl
test
jmp
ss
xchg
push
mov
dec
push
jns
js
cmp
pop
mov
dec
push
and
pop
cmp
adc
sub
sar
mov
jno
ret
cs
icebp
sbb
push
shll
ds
les
pop
cltd
sahf
cli
pop
mov
xor
scas
in
leave
xor
mov
std
rcrb
push
or
inc
or
mov
mov
sub
int3
sub
ret
or
add
pop
out
int
data16
jle
data16
jl
stos
jmp
sbb
scas
dec
dec
adc
pop
outsl
sub
adc
add
fists
dec
mov
mov
dec
mov
dec
dec
inc
scas
inc
sbb
inc
dec
ja
fwait
sub
mov
add
sub
repz
push
jae
mov
jp
xchg
dec
push
cmp
aad
bound
mov
notl
notb
pop
cmpsw
sub
enter
std
jmp
movsl
dec
mov
gs
dec
inc
aad
jle
sbbb
icebp
mov
mov
and
nop
xchg
push
inc
sbb
sti
in
icebp
or
xor
int
cltd
fwait
cmp
inc
shl
or
imul
mov
ss
repz
ror
pop
fdivrl
je
xchg
inc
xchg
pop
cmc
out
hlt
out
test
out
mov
popa
inc
cmpsb
inc
insb
arpl
ret
mov
lods
jge
clc
pop
addb
and
mov
jl
xor
mov
sub
jp
mov
ds
add
in
add
stos
xchg
xor
push
mov
dec
fbstp
in
clc
sub
lock
jp
xor
pop
insl
faddl
lea
out
loop
adc
lcall
rcl
insl
mov
jge
dec
push
ret
and
lret
daa
add
push
push
repz
jle
loop
test
subb
push
lret
cltd
pop
push
mov
cli
test
adc
std
dec
or
sbb
sub
push
filds
jnp
sub
int
in
int
aas
faddl
js
xchg
cmpsl
xchg
ss
ss
jg
enter
flds
sub
jns
data16
cmp
pop
test
arpl
or
mov
testl
fcompl
sub
push
arpl
dec
inc
add
scas
stos
lret
mov
push
jne
mov
mov
rcrb
test
jecxz
mov
cmp
mov
repnz
sub
test
push
mov
mov
and
xor
loopne
ljmp
push
mov
in
mov
xor
mov
fs
movsb
fidivs
sub
mov
enter
insl
push
decl
mov
sub
cmp
cmp
ds
enter
xor
incb
pop
push
xchg
push
outsb
or
mov
cmpsl
add
call
cmovns
fisubrl
enter
push
cmc
sub
pop
mov
cmp
ss
ja
bound
inc
clc
xchg
sub
sbb
xor
ret
cmp
and
push
cmp
cmp
mov
add
mov
fisttpl
out
sbb
popf
test
cli
int3
gs
mov
jne
in
push
aam
sub
lret
fistl
divb
jo
push
imul
lret
jb
sub
nop
into
mov
repnz
or
std
cmp
int3
sub
stos
cmp
adc
inc
inc
xchg
in
jmp
mov
cmpsb
ja
ret
sub
shlb
add
mov
negl
add
test
mov
xchg
add
add
aaa
lea
cmc
sub
shlb
mov
je
add
das
rcr
jg
cmc
xor
jne
cmp
ret
ja
mov
xchg
mov
push
push
sbb
sahf
icebp
mov
mov
pop
out
or
add
jmp
iret
mov
nop
pusha
cmp
xchg
xchg
icebp
or
and
sbb
lahf
xor
ret
divb
mov
nop
xchg
addr16
js
sbb
stos
test
jb
push
cmp
test
push
sbb
lret
pop
addb
int3
aaa
pop
in
push
mov
jge
cmp
sahf
adc
push
dec
in
mov
stos
add
sbb
fiadds
pop
cmp
and
mov
pop
sbb
pop
clc
arpl
int
sbb
jae
sarb
stos
loopne
push
push
filds
and
dec
subl
data16
add
or
lods
pop
sub
ret
cmpsb
test
mov
adc
popa
dec
push
out
fadd
movsl
cmp
ja
shl
mov
pop
xor
pop
adc
mov
add
sub
addl
add
push
mov
xor
and
mov
mov
leave
dec
dec
rcr
imul
pop
xchg
out
sbb
test
push
inc
mov
lds
push
cli
das
lods
jmp
jne
out
sahf
sahf
add
fdivrs
adc
pop
aam
and
mov
mull
jae
iret
daa
fcos
dec
sub
xchg
adc
es
test
cmpsb
loop
je
jb
push
pop
sti
mov
add
xor
inc
stos
insb
xchg
dec
enter
jle
je
fnstcw
dec
out
jg
sbb
cmpl
jns
fmul
mov
push
inc
stos
dec
mov
xchg
pop
fwait
lret
fucom
pop
cmpl
sbb
sbbl
cs
sbb
inc
repz
sarl
das
lods
movsb
into
xchg
call
in
sbb
mov
inc
popa
in
mov
push
call
adcb
mov
cmp
and
mov
mov
xchg
sarb
popf
loopne
mov
nop
mov
in
or
movl
shrl
dec
dec
inc
clc
add
out
lods
sbb
and
in
std
xchg
jmp
pop
inc
out
cli
xlat
jmp
jecxz
mov
aam
cmp
ret
xchg
or
xor
cmp
imul
jmp
sbb
sbb
movsl
mov
cs
inc
sahf
cmpsb
mov
sub
sub
xor
aad
lods
enter
loope
add
xor
fsubr
push
push
or
shrb
cmp
mov
jbe
sub
gs
push
ljmp
and
out
shrl
fimuls
xor
insl
mov
popa
xlat
mov
gs
jo
outsb
dec
pop
jg
sub
xchg
notb
lret
push
sub
bound
test
add
daa
jg
shrl
outsl
out
daa
xor
pusha
cmp
lret
mov
jmp
and
push
addr16
stc
fadds
mov
sahf
and
out
push
pop
mov
jl
iret
sbb
ficoml
jecxz
pop
daa
mov
scas
adc
scas
dec
lods
add
xor
adc
jmp
push
jg
xor
shlb
mov
sbb
lods
xor
lods
adc
or
mov
inc
sbb
js
fistl
xorb
jl
bound
dec
sub
mov
aad
mov
xchg
dec
data16
jle
shlb
and
dec
filds
jmp
pop
mov
pop
mov
sub
sub
adc
mov
fmuls
cltd
inc
jge
push
mov
cmp
ljmp
pop
push
mov
lret
mov
sub
mov
pop
mov
push
mov
mov
pusha
xor
sbb
shlb
imulb
test
cmc
dec
add
mov
sub
adc
jae
sbb
bound
aam
pop
adc
inc
paddd
cmc
or
sbb
lods
push
cmp
outsb
js
loopne
mov
xchg
jmp
add
test
or
mov
jle
ds
int
ss
test
imul
push
test
out
roll
pusha
xor
or
decl
pushf
xchg
daa
cmp
and
frstor
sbb
popf
loopne
cmp
repnz
fsubs
push
shrb
sbb
int
es
das
call
push
xchg
sub
pop
push
mov
mov
cwtl
inc
adc
jbe
sub
dec
jnp
pop
pop
mov
mov
mov
adc
in
cmpsb
flds
fcomps
cmp
rcrb
pop
addr16
jl
push
xchg
loope
out
fcomps
dec
mov
lret
scas
daa
pop
loop
jb
jno
imulb
dec
ror
xor
ret
mov
hlt
gs
inc
shll
stos
je
jb
push
out
leave
jo
jle
lds
or
in
mov
in
sbb
push
das
lret
in
ja
xchg
leave
add
sub
clc
rclb
xchg
xchg
fisttpl
fwait
in
mov
cmp
and
les
add
sub
jmp
add
int
sub
clc
cld
fcoml
pop
mov
mov
in
push
cli
lods
xchg
rcrl
add
shr
adc
clc
aam
loop
sub
inc
cltd
adc
popf
pop
xchg
idiv
mov
push
push
mov
jmp
test
pop
daa
insb
das
xlat
xchg
sbb
fwait
xlat
cltd
cmp
pop
cld
repnz
fstpl
adc
outsb
cmp
adc
cmp
push
shl
xchg
jns
dec
xchg
push
lahf
es
push
jne
ja
pop
and
orb
inc
fisubs
inc
inc
and
int3
leave
lret
and
pop
out
lcall
adc
repz
mov
xchg
add
mov
lcall
enter
push
mov
xlat
aad
push
xor
lcall
arpl
xchg
lret
cmpsb
sbb
lods
inc
mov
out
dec
pop
mov
stc
mov
aad
insl
xorw
inc
xor
loop
sarl
add
xchg
cmp
pop
sub
arpl
mov
es
jo
jne
pop
stc
inc
dec
xchg
mov
fldl
and
leave
jle
or
pop
jg
fwait
adc
push
add
rclb
fiadds
in
cli
xor
scas
clc
pop
rcrb
push
repz
shrl
pop
popf
fldt
xchg
pop
adc
clc
arpl
pop
adc
push
and
into
xor
lock
loop
mov
push
js
stos
les
mov
aaa
xor
outsb
sbb
adc
inc
int
dec
mov
push
pop
push
or
adc
les
movsb
sub
fs
sbb
pusha
cmpl
stos
clc
shrl
cmpsb
or
shrl
dec
sbb
adc
jl
mov
lea
jae
clc
inc
fs
or
mov
jnp
xchg
or
mov
ret
out
push
jae
push
fs
mov
pop
in
lea
or
imul
jmp
mov
cmp
jne
xor
dec
pop
jb
sub
mov
repnz
insl
enter
inc
jne,pt
cmp
add
cmp
mov
andb
jnp
xor
xchg
dec
mov
and
shl
dec
inc
les
rolb
movsb
fisttpl
xchg
cmpsb
push
lds
nop
loope
mov
add
test
pusha
fildl
sub
adc
pop
lods
cmp
and
dec
lock
mov
and
mov
pushl
dec
insl
fldl2e
pop
dec
in
frstor
movsl
and
xchg
cmp
je
and
out
mov
sbb
mov
mov
ret
outsl
jge
std
aas
pop
aam
je
js
fisttpll
cmc
push
aas
push
into
mov
decb
mov
xchg
aas
dec
rcrb
int3
sahf
mov
mov
loope
dec
enter
push
mov
mov
in
loop
pop
push
outsb
sbb
dec
ret
xchg
ja
repnz
mov
addr16
inc
sar
pop
add
mov
xchg
jle
out
or
jle
cmp
jae
aad
mov
jnp
mov
jp
fidivl
inc
int
lret
test
cmp
adc
cmp
sar
sbb
adc
and
cs
jp
adc
xchg
xchg
mov
sahf
pop
ss
inc
inc
jp
mov
mov
imul
jecxz
xor
jp
jmp
into
pop
mov
in
fwait
dec
cmp
push
addl
subl
notb
push
or
adc
jge
inc
push
adc
stos
in
fnsave
dec
fs
mov
data16
mov
inc
and
sub
aad
test
jmp
xlat
popf
rcrl
add
push
out
and
mov
fisubrl
xchg
lock
shll
cmpb
mov
int
and
xchg
loope
xchg
rolb
jp
push
ds
jmp
stos
jecxz
aad
sbb
pop
pop
inc
int3
inc
ficoms
stc
rol
je
lret
push
out
inc
leave
ja
inc
movsl
subb
cmp
or
ss
jbe
sub
xchg
scas
pop
cmp
sbb
mov
push
ret
fadds
ljmp
je
fs
mov
lods
mov
pop
adc
orl
in
or
insb
dec
insl
call
xchg
rolb
add
cmp
dec
dec
pop
pop
add
imul
mov
andb
jae
lret
insb
dec
into
xor
inc
js
push
mov
xor
xchg
push
push
icebp
sbb
clc
xchg
xchg
xchg
jmp
sub
fists
notb
dec
inc
jg
mov
mov
adc
int
hlt
adc
out
sub
loop
dec
aad
mov
es
ret
in
outsl
mov
xchg
jo
lret
lcall
pop
daa
out
xor
mov
jnp
xchg
push
pop
add
jb
dec
mov
movsl
nop
loop
repz
daa
std
sub
inc
sub
pop
call
mov
dec
dec
mov
add
insb
cmp
mov
imul
jns
imul
mov
test
pop
xchg
jne
pop
inc
lods
lcall
push
nop
xchg
sahf
out
and
lcall
and
lret
push
dec
js
jbe
insl
out
movsl
int3
loopne
or
dec
push
iret
pop
data16
sbb
fistl
sbb
xchg
scas
xchg
aam
lret
dec
lods
andnps
ror
outsb
outsb
cmp
loopne
push
js
bound
cs
cmc
pop
xchg
mov
movb
iret
push
ret
jns
arpl
and
mov
sbb
out
xor
es
loopne
rcrb
xor
sub
adc
jns
push
mov
jnp
jle
mov
test
lods
mov
jno
or
push
fsubrs
out
mov
movsb
rclb
cmc
fisubrs
insl
mov
fs
js
add
cwtl
push
dec
je,pt
js
mov
repz
ljmp
lods
std
outsb
js
mov
xor
int
jp
mov
mov
lret
insb
imul
sbb
lock
pop
adc
in
mov
repnz
insb
sub
mov
mov
les
or
jae
les
push
sbb
xchg
loope
and
or
fwait
popf
add
inc
inc
std
test
adc
and
movsl
xchg
xchg
movd
test
sub
inc
aam
cwtl
lock
add
xor
cmp
pop
pop
xchg
xor
divb
test
gs
mov
decb
test
sub
addb
jecxz
push
test
rorb
sub
jge
xchg
shlb
push
cmc
mov
outsb
sub
push
gs
aas
inc
jle
cmp
aad
xchg
jmp
data16
subb
push
es
cmp
sti
ja
jge
and
mov
imul
cld
sbb
imul
mov
cmpsb
ret
push
out
add
movsb
repz
mov
or
dec
mov
jmp
ret
ljmp
addr16
out
sti
icebp
pop
push
inc
mov
repnz
in
sbb
adc
cmpsl
sbb
in
mov
xchg
mov
ret
jmp
dec
out
scas
mov
dec
cmp
in
adc
xor
xchg
dec
imul
xchg
xchg
xchg
xor
add
inc
push
ljmp
jb
std
dec
pop
cltd
ljmp
jne
mov
add
xor
ja
add
aaa
sbb
jns
jecxz
shll
mov
lret
not
scas
stos
bound
jl
push
push
or
jle
dec
dec
fs
xor
or
xchg
sbb
lret
imul
xchg
xchg
cs
xor
lds
cmpsl
push
es
push
dec
jecxz
out
movsb
mov
jns
fcmovbe
cmc
mov
ffreep
leave
cmp
inc
les
jecxz
adc
mov
add
roll
daa
add
mov
adc
ffreep
in
aas
mov
xchg
lcall
imul
mov
push
mov
lods
imul
xor
add
adc
xor
sahf
aam
call
into
add
mov
or
jbe
in
scas
or
cwtl
mov
jo
push
lret
push
push
push
adcl
ret
jb
jo
sbb
or
push
jae
test
jne
cmpsl
test
and
hlt
push
push
adc
dec
jae
das
ret
loop
lock
fiadds
dec
dec
lea
adc
in
stc
cld
sbb
jg
cmpl
imull
lret
int
pop
cmp
repnz
pop
and
arpl
test
lret
mov
popa
inc
arpl
pop
ret
into
cmpsb
stos
mov
push
xchg
push
jecxz
xor
neg
or
cvtpi2ps
dec
addr16
in
dec
add
cltd
into
lcall
fcomps
ljmp
pop
xor
out
nop
sbb
dec
sub
mov
ret
pop
loopne
xchg
loop
push
enter
adc
out
add
xchg
adc
push
mov
dec
xor
push
push
adc
sbb
cmp
cmp
fsubl
sbbb
or
out
leave
xchg
jg
sti
inc
xchg
ret
jne
mul
insl
cmp
stos
test
negb
iret
outsb
in
add
cmp
test
mov
inc
loopne
cwtl
test
cmc
movsl
les
sub
dec
sbb
js
adc
pop
mov
mov
add
xchg
outsb
cmp
insb
mov
inc
sub
push
leave
inc
sub
mov
push
cmc
mov
rcl
dec
pop
cmpsl
rclb
test
hlt
mov
inc
dec
lods
xchg
jmp
pop
sahf
cmp
dec
and
or
sbbb
lds
loop
dec
cmp
stos
fiadds
xor
mov
mov
sti
int3
negl
adc
addr16
out
js
test
push
push
cmc
mov
sub
in
cmp
inc
icebp
xchg
xchg
rcrb
xchg
dec
xchg
ljmp
mov
pop
sub
and
pop
addr16
inc
lods
push
aam
push
in
xor
push
aaa
leave
mov
or
xchg
and
or
aaa
sahf
ror
sti
cs
lcall
pop
sbb
clc
dec
lods
test
sbb
xchg
xchg
pushf
jl
lahf
mov
loop
test
dec
ds
xchg
mov
add
xchg
fs
fwait
mov
jl
mov
sbb
cmp
jnp
or
jge
mov
lock
pop
mov
jae
idivl
inc
mov
mov
mov
inc
scas
fidivl
mov
ret
out
xor
push
popa
lret
addr16
outsb
adc
popf
mov
imul
xor
jae
mov
adc
xchg
imul
sti
inc
mov
mov
and
lods
arpl
add
cmp
into
mov
jl
rcll
pusha
test
xor
adcl
sub
mov
add
fnstenv
jne
or
and
cli
mov
mov
dec
sub
loop
lods
mov
in
out
pop
call
jae
mov
pop
add
adc
movsl
les
imul
jmp
add
xor
scas
xor
jo
mov
xchg
jb
sub
and
xchg
push
mov
jl
test
or
or
fs
mov
inc
test
push
dec
push
lahf
mov
or
inc
mov
jmp
lods
movb
outsb
mov
inc
adc
je
jno
jmp
pop
dec
sti
mov
out
pop
lock
and
dec
adcb
xor
ja
aas
jbe
sbb
popf
scas
inc
dec
cmp
pop
jbe
mov
or
dec
jge
add
stos
jnp
mov
xrelease
dec
inc
std
push
and
lahf
fcmovb
mov
mov
andl
mov
in
pop
mov
lods
lock
les
int3
add
or
inc
adc
pop
push
xor
pop
scas
or
jb
push
xchg
enter
in
push
clc
movsb
test
scas
mov
test
xchg
sahf
xchg
jl
and
cmp
inc
fisttpll
test
scas
out
cwtl
dec
outsb
pop
cmp
inc
mov
jle
cmp
notl
hlt
icebp
push
in
push
pusha
test
adc
lock
mov
ds
fsubs
mov
scas
in
lcall
pop
sahf
push
mov
hlt
and
pop
loop
mov
lcall
movsb
and
cmp
pushf
mov
and
cmp
js
adc
popa
lods
cmp
lret
mov
or
subb
idivl
push
negb
mov
lds
jg
mov
pop
std
out
outsl
and
pop
movsb
mov
ret
ja
mov
jp
xchg
lock
xchg
in
dec
fsubrs
lock
rclb
jo
sar
cwtl
xchg
aas
lret
jbe
adcl
sub
jb
dec
nop
and
lods
int3
scas
inc
leave
dec
outsl
mov
scas
sti
mov
sub
les
jne
jle
andb
cmp
pusha
push
mov
push
test
hlt
iret
hlt
xor
int3
cmpsl
addr16
dec
pop
add
and
int3
fidivrs
mov
jne
scas
int
mov
sbb
and
dec
stc
dec
adc
push
xchg
pop
loopne
jl
cmp
jo
lret
sub
cwtl
outsl
jle
test
popa
sbb
or
imul
cmp
sub
aad
jecxz
or
mov
std
stos
imul
in
nop
pop
and
xchg
sbb
int
xor
adc
addb
cld
addl
stos
outsb
inc
adc
push
fcomp
bnd
xchg
and
shlb
hlt
push
pop
movsb
out
lds
je
imul
rcrl
mov
xchg
sbb
cmp
lret
dec
lods
or
fcomps
pop
ret
or
jl
in
push
mov
movl
lds
inc
and
aad
aam
mov
arpl
cmp
rorb
cmp
mov
shrl
push
or
inc
push
jns
testl
adc
xor
mov
lret
adc
and
dec
cmp
adc
scas
fadd
mov
lret
out
adc
rdmsr
out
lods
fisttps
scas
rcrb
sbb
or
out
scas
clc
sbb
cwtl
jo
push
arpl
movsb
mov
mov
stos
adc
and
fcmovnbe
js
stc
jb
lahf
and
jp
into
xchg
or
pop
xor
add
or
mov
cltd
xchg
gs
adc
ljmp
inc
pop
rorl
ds
dec
jno
repnz
or
gs
cs
sarb
mov
insl
aad
mov
int
and
cmp
enter
repnz
pusha
loope
sbb
lahf
and
sahf
in
pop
out
les
cmpsl
or
shrb
or
int3
inc
mov
test
push
xchg
mov
popf
in
xlat
outsl
sub
std
jno
sbb
pusha
jo
adc
add
jp
rol
movsl
movsb
or
test
ror
aam
aaa
jno
or
out
test
pop
pop
inc
data16
popf
dec
mov
sbb
mov
cltd
ss
xchg
adc
fnstcw
sub
dec
jb
mov
outsb
jb
push
mov
jnp
in
rorl
and
shll
jl
shlb
ret
in
ja
fwait
mov
cmpsb
add
push
sbb
jge
sbb
adc
or
addr16
outsb
arpl
arpl
mov
add
lock
filds
ja
jae
scas
pushf
push
adc
sbb
jne
or
dec
lods
sbb
in
mov
sub
int
cmc
fs
call
enter
xor
inc
or
xor
and
adc
adc
inc
arpl
dec
dec
fmuls
lahf
sahf
insl
mov
and
mov
sub
jmp
dec
or
imul
js
outsl
lret
adc
dec
cmp
std
addr16
cmp
and
aad
xor
push
insl
inc
cmp
lods
hlt
cmp
fisttps
out
push
or
mov
stc
xlat
push
pusha
mov
mov
mov
push
xor
inc
aad
cmpsb
pusha
fisubs
cmp
mov
inc
cwtl
fsubr
and
xchg
scas
mov
sub
gs
pusha
mov
jle
sub
dec
pop
movsb
adc
jge
sbb
pushf
push
jmp
lcall
sti
jg
call
adc
add
add
push
scas
or
dec
push
mov
ficomps
shrl
cwtl
pop
pop
fsubr
insb
xor
sub
pop
call
mov
repnz
aam
daa
dec
push
add
das
ja
inc
ljmp
mov
dec
jg
inc
mov
jmp
sub
xchg
ret
lods
xor
xchg
sbbb
and
pop
adc
es
jb
cli
xor
cld
mov
jno
push
das
adc
or
fwait
sub
push
adc
jae
and
pop
xchg
mov
fucomi
cmp
or
aam
out
out
test
icebp
xchg
xchg
repz
cmp
mov
out
std
cmp
sbb
jl
adc
push
mov
shll
in
xchg
push
pop
aam
xchg
jo
insl
fldl
sub
clc
loopne
sub
out
inc
inc
sub
jle
faddp
push
push
or
arpl
push
or
neg
xor
sahf
mov
enter
jno
push
fbld
add
xlat
push
dec
add
jg
xchg
cwtl
lea
jb
mov
nop
dec
repnz
mov
movsl
nop
jns
push
shll
mov
clc
adc
or
fcompl
pushf
or
adc
movsl
cmp
iret
pop
inc
sub
filds
int
fists
inc
lret
push
leave
dec
lods
repz
xchg
mov
stos
test
incb
xor
mov
cmp
jecxz
movsl
mov
or
push
mov
mov
lret
popf
cmp
out
idivl
mov
lods
loope
in
jb
inc
sbb
add
jne
cmpb
cwtl
dec
sbb
adc
fsub
adc
out
sbb
mov
addb
fildll
test
ja
imul
mov
add
scas
mov
sahf
xor
or
or
dec
push
pop
inc
sti
lods
xchg
cld
mov
adc
out
xlat
adc
jbe
xchg
xchg
mov
pop
cmp
and
and
mov
fisttpll
lret
cmp
push
cmovne
js
shl
flds
mov
jp
loop
pop
int
or
add
adc
int3
jae
ds
inc
pop
push
popf
mov
popa
idivl
jnp
popf
enter
or
fwait
adc
shrb
sbb
call
mov
gs
sub
pop
inc
stc
push
add
dec
roll
imul
dec
icebp
push
dec
lock
test
inc
iret
pop
in
xorb
pop
movsb
pop
sarb
shrb
push
pop
mov
out
jae
aas
jmp
leave
jmp
std
xor
jg
shlb
in
outsb
xchg
and
cmp
cmp
cmp
into
daa
je
adc
fisubrs
xchg
jge
push
or
pop
int3
mov
jnp
out
sbb
adc
aam
addb
mov
out
bound
cltd
or
xorl
sbb
adc
cwtl
mov
dec
lea
inc
fisubl
cmp
fs
int3
movsl
ret
pop
adc
cli
lods
out
sbb
insl
sub
daa
cwtl
and
and
push
fwait
pop
jno
mov
repz
mov
insb
aaa
and
dec
das
movaps
leave
js
sti
les
pop
rcrb
sbbb
jmp
repnz
and
sub
mov
addb
jnp
jo
subl
fdivr
jge
arpl
ret
pushf
fcmovb
call
add
out
out
das
sbb
mov
jae
int3
dec
pushf
fisttpll
data16
addl
ja
mov
aad
dec
xlat
adc
xor
add
push
sbb
xor
adc
sahf
cwtl
push
and
jmp
popf
sub
rorl
dec
cmp
daa
cmp
add
jmp
cmp
lcall
clc
test
xchg
sbb
mov
adc
push
push
sub
les
in
jle
jns
jno
mov
inc
push
movsl
stos
mov
mov
lret
jno
pop
gs
lods
int
add
lea
hlt
lods
mov
fcompl
loope
xor
scas
out
mov
jge
sbb
int3
xor
inc
adc
mov
lea
movsb
or
pop
or
push
xor
mov
xor
cs
mov
xchg
mov
xchg
jae
adc
push
sub
imul
pop
mov
jp
inc
jb
jge
mov
mov
and
ljmp
lret
loope
mov
ja
xor
in
pushf
and
push
mov
mov
xchg
addr16
repnz
fadds
test
mov
fdivrl
mov
roll
inc
loop
adc
xchg
je
push
and
mov
scas
mov
jmp
inc
fwait
ss
xchg
adc
dec
rclb
xor
cwtl
inc
mov
aad
mov
in
inc
imul
or
push
mov
les
xchg
lcall
mov
dec
jno
test
ret
mov
add
cli
daa
sub
xor
icebp
xchg
xchg
push
leave
aam
stos
xchg
and
mov
cltd
ficomps
outsb
inc
mov
loope
movsl
lock
inc
loope
dec
and
imul
incb
js
jg
frstor
cmp
jo
out
in
adc
jo
rcrl
out
push
pop
fistpl
fldenv
pop
mov
jb
lcall
out
cmc
inc
add
iret
mov
mov
adc
cmp
fs
ds
in
mov
inc
data16
stos
popa
jmp
testl
push
je
popf
or
pushf
jbe
in
xor
mov
cli
add
and
aas
shrb
jle
enter
outsb
mov
test
xchg
xor
jae
mov
mov
xchg
scas
cmp
mov
testl
fcomp
push
mov
dec
fisubrs
out
popf
inc
push
arpl
outsl
aam
dec
add
rolb
pop
aas
rorl
pop
inc
xorb
adc
cwtl
xor
test
jno
adc
hlt
fnclex
loope
push
dec
mov
les
mov
sub
jmp
daa
sbb
push
mov
sbbl
sti
pusha
shl
ret
sbb
and
jl
xor
pop
and
rcrl
stos
shlb
or
fcoms
pop
adc
fst
cmc
jg
in
jle
mov
xchg
xor
pop
cmpsl
cmpsl
ss
push
imul
mov
aaa
faddl
lcall
xor
or
fiaddl
clc
push
dec
fcos
dec
dec
adc
add
fdivr
dec
and
repz
mov
push
arpl
sbb
insl
loopne
incb
hlt
xor
inc
adc
pop
adc
mov
daa
pop
pop
loopne
adc
aad
jmp
xor
les
push
es
lods
ficompl
leave
iret
mov
mov
add
dec
sub
outsl
cmp
pop
and
inc
add
stos
popf
sbb
inc
movsb
out
mov
mov
rcrb
or
jae
je
add
decb
push
lahf
jmp
adc
fistps
jle
pop
jbe
xchg
call
bound
aas
mov
test
stc
leave
insb
push
mov
cs
stos
sbb
jo
into
icebp
cltd
sub
arpl
gs
rorb
cwtl
call
and
mov
test
int3
fmuls
mov
cmc
gs
cwtl
sbb
adc
out
add
mov
pop
int3
pinsrw
jo
cwtl
ret
call
ret
and
cmpsl
mov
cmp
cmp
subl
cmc
ja
jno
mov
push
xchg
jge
fisttpl
cmp
lods
adc
mov
push
sbb
fwait
xchg
xorl
les
pusha
jb
test
mov
jae
pop
pop
insb
jb
sahf
out
fisubs
ret
inc
dec
lods
add
pusha
add
test
lret
in
push
or
lods
sub
xchg
into
inc
cmp
addb
mov
cli
pop
and
into
outsl
outsl
fists
es
jo
xchg
out
inc
nop
iret
pop
cmp
xchg
inc
js
push
dec
loopne
cmc
fldenv
and
fstl
or
ljmp
add
mov
aaa
push
clc
data16
arpl
mov
sti
lock
sub
shr
xlat
jg
mov
cmp
or
dec
js
inc
addr16
push
add
xor
ret
and
xchg
dec
fisubl
in
in
in
xchg
int3
add
adc
sbb
adc
aas
negl
cltd
mov
outsl
js
iret
movsl
add
jne
xchg
icebp
and
dec
mov
jg
pushf
pop
push
dec
mov
push
insl
arpl
pop
pop
sub
insl
daa
mov
fiadds
dec
imul
and
btr
add
mov
xchg
mov
outsb
and
lret
xchg
je
subl
sub
cmc
stc
loop
adc
mov
mov
xchg
out
mov
stc
jnp
inc
sbb
aam
insb
mov
inc
or
inc
cld
and
xchg
imul
pop
sbbl
ret
mov
dec
je
stos
xchg
sub
or
mov
mov
mov
mov
and
in
mov
add
jmp
sub
inc
or
out
lcall
xchg
lds
xchg
xchg
fst
stc
xor
push
mov
xchg
repnz
jl
bound
mov
fs
mov
lock
mov
push
mov
add
jl
mov
mov
rclb
ja
ret
or
int
in
cmpsl
cmp
sahf
sahf
loop
shll
xchg
adc
jnp
jecxz
stos
in
in
dec
push
ret
or
fcompl
and
xor
jo
push
ja
movsb
sbb
lea
jecxz
mov
je
push
mov
loope
daa
ss
sub
in
scas
aas
mov
mov
xor
pop
and
sub
pop
loope
push
sub
fmull
aas
lods
dec
sbb
pop
dec
sub
clc
xchg
fisubs
lahf
xor
data16
mov
dec
sahf
mov
sti
sub
push
jne
cmp
add
jg
mov
or
ret
xchg
add
in
jae
repnz
cmpsl
mov
jns
push
aas
ret
popa
stos
dec
xchg
call
les
in
out
jbe
push
sbbb
mov
adc
das
cmc
dec
adc
jge
xchg
xchg
ja
mov
jle
mov
adc
dec
jnp
ljmp
jns
sbb
loop
mov
push
xor
inc
pushf
sbb
pop
sub
ja
jno
fsubl
je
dec
push
dec
push
pop
sbb
js
cmp
xor
mov
sub
fdivrl
pop
pop
or
cmp
lahf
out
in
dec
pop
lods
jnp
jns
mov
inc
cmp
enter
jmp
push
cwtl
dec
dec
mov
addl
aam
cmp
gs
iret
loop
test
push
in
push
imul
cltd
or
xchg
popa
mov
cld
sub
mov
jo
mov
mov
xor
pushf
push
les
mov
es
ja
sub
lea
adc
jae
or
inc
mov
dec
icebp
fldt
mov
inc
sub
movsl
cmc
out
movsl
out
imul
into
add
inc
mov
mov
lods
int
movsb
add
mov
sbb
xor
pop
sbb
aad
hlt
lock
pop
sbb
ret
jg
cmc
test
xchg
adc
adc
mov
movsl
mov
dec
sbb
popf
lret
jl
pop
mov
dec
jb
inc
xor
mov
pop
pusha
inc
rorb
scas
push
mov
adcb
rcr
xor
and
cmpsb
xor
jmp
pop
arpl
outsb
cmp
inc
sahf
xchg
subb
mov
stos
stc
push
aaa
cs
and
rep
jae
shr
lret
loopne
pop
mov
inc
rcrb
cmp
bound
lahf
hlt
pop
je
xor
xchg
test
xor
fs
mov
outsb
in
popf
add
jo
outsl
mov
mov
sub
jp
sbb
loope
pop
mov
test
sbbl
das
stos
inc
push
das
or
and
xor
lret
lcall
sub
xor
dec
pop
lcall
jg
xor
idiv
movsb
or
pop
sub
inc
inc
aas
lock
pop
sbb
fsubrl
or
ret
jle
decl
ret
repz
mov
fsin
bound
fisubs
mov
movaps
adc
je
test
jb
ficompl
sub
mov
mov
or
mov
shl
jnp
cmp
aaa
push
and
or
sbb
push
mov
les
cltd
xchg
xlat
dec
addb
add
xor
imul
js
pushf
jns
xor
lret
adcl
out
fisubrs
pusha
dec
les
jle
repz
fwait
cmpsb
cmpsl
addr16
mov
fdivp
inc
arpl
pop
data16
sbb
imul
cmp
aad
sub
dec
push
mov
sub
test
dec
xchg
test
fsubrs
daa
popf
ror
leave
jl
jle
mov
clc
mov
test
xor
shll
and
fildll
add
pop
sbb
repz
je
and
imul
mov
fidivrl
sbb
movl
pop
adc
mov
jg
inc
cwtl
sbb
adc
andl
jbe
fidivrl
mov
dec
inc
push
inc
push
sbb
sbb
push
inc
jl
mov
int3
loope
imul
mov
jns
dec
dec
push
mov
sti
mov
jle
inc
adc
push
jo
xchg
jb
mov
mov
xor
add
sahf
sbb
cmp
rcrb
flds
inc
cmc
mov
push
mov
dec
gs
ficomps
mov
push
mov
lahf
lods
rorl
repz
add
dec
xchg
xchg
fimull
or
mov
dec
cmpsl
push
and
stos
mov
mov
inc
sti
inc
xchg
jle
lods
lret
pop
inc
mov
aas
push
pop
sub
push
adc
xchg
jbe
jnp
jne
mov
stos
xor
sub
ljmp
mov
ljmp
addl
inc
inc
loopne
sub
pop
or
int3
mov
cmpsb
hlt
lahf
andnps
mov
out
lea
and
xchg
lods
adc
pop
cs
push
lods
adc
or
les
out
ljmp
dec
daa
stos
dec
inc
mull
rolb
jo
loopne
movl
inc
mov
pushf
mov
jmp
ljmp
adc
mov
cmp
lods
add
arpl
sub
in
jp
lea
pop
fst
cld
rcll
fsubrs
dec
add
mov
scas
dec
fwait
cmp
jmp
sbbl
inc
loop
or
imul
or
lds
js
jnp
movsl
sub
out
xchg
inc
sbb
xlat
outsb
dec
cmp
in
fwait
loope
aad
cmp
test
rolb
mov
nop
scas
jle
xchg
jecxz
and
mov
loop
mov
sarl
mov
arpl
xor
lret
daa
testb
inc
jne
jne
sub
into
leave
xchg
cmp
dec
sbb
xchg
scas
call
inc
push
jne
push
sbb
inc
dec
inc
ljmp
ljmp
inc
jecxz
sbb
movsb
sbb
cmp
ret
jae
sbb
je
adc
aad
add
outsb
lock
pop
mov
mov
mov
mov
test
lahf
inc
pop
push
jmp
sbb
sub
int
fsubl
cs
mov
sbb
data16
divl
cli
cld
enter
or
push
in
inc
pop
adc
and
push
ficoms
xor
frstor
or
jns
push
add
movsb
rolb
xor
dec
movsb
ficomps
cmpsl
mov
in
int
and
pop
in
cmp
push
cmpsb
data16
lds
mov
cmpsl
dec
jno
lret
in
scas
arpl
cmp
fwait
pop
nop
in
xchg
cmp
inc
adc
mul
mulb
pushf
fildll
mov
xchg
mov
mov
cmp
cld
mov
cld
or
das
into
inc
jbe
add
inc
ja
je
test
push
cmp
stos
cli
leave
repnz
mov
sbb
mov
rclb
aam
fsts
clc
das
sbb
push
xor
add
int
adc
jne
xchg
mov
rol
xchg
test
loop
lahf
jle
cli
dec
sahf
cmp
dec
inc
repnz
seta
lahf
scas
je
and
fnstenv
mov
loopne
or
jg
cwtl
cld
incl
out
pop
insb
icebp
add
xor
shrl
lds
addr16
jno
sub
out
push
jle
and
decl
pop
fcoms
mov
gs
jmp
mov
fistpll
pop
leave
aas
mov
xchg
xchg
fwait
in
xchg
mov
sbb
cmp
mov
adc
popa
aas
decb
jno
xor
jne
pop
test
mov
daa
fwait
jb
push
or
mov
mov
xor
stos
dec
sti
cmp
das
mov
sub
mov
jp
pop
ljmp
sub
divl
mov
out
insl
jbe
pop
push
xor
mov
icebp
aas
mov
mov
and
mov
cwtl
sbb
das
cmp
lea
fisubl
enter
inc
hlt
iret
arpl
int3
push
test
mov
sysexit
sbb
movsl
jp
clc
add
fnstenv
cs
adc
stos
insb
adc
adc
pop
in
lea
xchg
xorb
dec
sbb
ror
movsb
mov
jns
jb
mov
outsl
je
and
and
jl
cmp
test
jg
fcomps
js
rorl
jge
or
lods
xchg
adc
sarl
sbb
int3
cli
repz
lods
aaa
mov
adcl
movb
cmp
adc
dec
insl
xorl
cmp
or
pop
dec
repz
xor
dec
cmpl
out
push
ds
or
mov
out
popf
sbbb
lock
mov
aad
imul
lock
movsb
and
xchg
enter
test
aaa
incb
jb
scas
mov
cmp
js
rcr
icebp
or
mov
inc
jle
mov
adc
add
jnp
jo
dec
shlb
dec
repz
mov
cld
ja
inc
inc
ret
mov
das
dec
out
dec
sahf
repz
repnz
mov
xchg
cli
ret
daa
clc
adcl
mov
sbbb
pop
jbe
ja
jmp
xor
add
xchg
xchg
or
shl
shlb
cmp
fbld
pop
cmp
inc
xchg
push
sub
sub
push
sahf
and
scas
sbb
xchg
pop
in
fdivrp
and
sti
or
xor
dec
mov
lock
xor
pop
hlt
sbb
pop
pop
dec
push
push
pop
out
int3
fisubl
or
aad
jmp
add
jl
popf
sub
adc
aad
idivb
les
mov
or
push
push
cltd
adc
cmp
mov
xor
jae
pop
inc
inc
das
ss
aad
mov
scas
lea
inc
fcmovnb
mov
mov
or
cli
gs
xchg
rorb
repnz
inc
dec
sbb
jne
or
cmp
call
sbb
push
push
mov
mov
in
xor
gs
mov
mov
test
cmp
je
fbld
iret
cmp
fadds
mov
mov
test
sub
bound
add
lea
insl
sbb
push
out
leave
test
jo
stos
adc
sbb
insb
xchg
mov
or
loope
xchg
cs
loop
cmp
mov
jb
xchg
out
dec
adc
arpl
adc
inc
cmpsl
cltd
pop
jns
xchg
mov
or
xchg
push
aas
xchg
lret
add
jae
mov
dec
out
pop
push
dec
xchg
jne
insb
add
dec
mov
xlat
push
adc
jns
dec
xchg
jae
add
test
dec
into
sub
shrl
cmp
mov
cmp
pop
into
cmp
or
mov
xchg
aam
and
jnp
scas
mov
pusha
int3
pushf
sub
jne
dec
iret
dec
loope
icebp
sbb
test
xchg
mov
clc
cmp
nop
dec
inc
push
xchg
jbe
xorl
mov
outsl
jp
sub
ja
iret
popa
jbe
dec
loopne
add
pusha
mov
lcall
lods
mov
jle
and
ljmp
cs
pop
loope
aas
gs
mov
jecxz
fbstp
mov
and
out
jp
leave
notb
pop
les
fsts
or
or
sbb
adc
nop
mov
aad
mov
add
fwait
or
clc
das
sbb
mov
insb
call
fisttpl
mov
fisttpl
push
fldcw
push
data16
cltd
sbb
adc
push
fnstsw
jl
cmpsl
push
es
jge
sti
repz
orb
sbb
outsb
rclb
fildll
int
popf
std
pop
push
mov
jge
pop
add
test
mov
xchg
loopne
jo
mov
sbb
or
out
imul
testb
sahf
leave
stos
ss
clc
enter
fstl
mov
aam
lea
call
or
push
inc
imul
jg
repnz
and
jo
adcl
xchg
sub
test
mov
jbe
mov
and
sbbl
xlat
mov
mov
cmc
int3
outsl
cli
mov
inc
stc
sub
adc
mov
aad
xchg
xchg
lea
push
cmp
dec
cwtl
sub
dec
sub
arpl
shrl
imul
lahf
vpshuflw
mov
mov
dec
and
push
ja
cmp
sub
and
leave
dec
mov
or
or
mov
sub
and
or
mov
pop
pop
gs
sbb
pop
popf
xor
cmp
mov
js
in
gs
loop
cmp
push
imul
jle
or
les
pop
cld
inc
call
dec
cld
inc
fsubp
jecxz
dec
jl
adc
and
pop
dec
push
sub
stos
mov
scas
inc
addr16
push
jo
sbb
pop
and
jp
movsl
cmp
aad
jmp
cs
mov
or
or
push
mov
popl
mov
test
mov
daa
ds
jo
fs
call
dec
loopne
jnp
imul
pop
sbb
adcl
out
push
loopne
pop
aam
adc
hlt
pop
out
push
loope
adc
mov
out
jecxz
js
jo
sub
add
jl
inc
test
sub
aad
ja
adc
outsl
sub
inc
arpl
add
out
jb
sub
cmp
call
gs
jp
aam
repz
or
aaa
flds
xor
andb
push
mov
mov
sub
fsub
addl
mov
cmpsb
jno
inc
lret
std
sahf
aam
dec
stos
jns
pop
and
insl
test
mov
jmp
sbb
lock
dec
mov
in
stos
mov
mov
inc
pusha
and
jnp
shlb
push
inc
das
mov
lods
and
dec
add
mov
sbb
push
sti
or
inc
cmp
rolb
mov
insb
xor
dec
and
mov
xor
ljmp
or
mov
loop
push
js
aas
enter
pop
dec
push
mov
sbb
js
ret
pand
ds
or
shlb
cmp
lock
add
pop
inc
shl
mov
movsl
mov
sahf
jmp
jmp
into
popa
hlt
or
outsb
mov
std
inc
or
frstor
jns
int3
cli
filds
pop
jmp
pop
jno
sbb
cmp
rorb
sub
enter
cmpsb
leave
cmp
xchg
movsb
mov
pusha
or
cmc
ds
xchg
cmp
popa
bnd
shlb
rclb
add
lret
sub
mov
jbe
push
rcl
mov
cmp
or
int
fcompl
inc
dec
orb
push
loop
fnsave
inc
daa
jne
mov
add
lret
adc
cmp
inc
das
fdivs
and
lret
inc
inc
mov
mov
fistpll
mov
push
pop
ljmp
mov
out
bound
sbb
sbb
xchg
mov
push
mov
dec
xor
mov
mov
rcll
dec
lahf
fs
inc
and
sub
je
pop
sbb
xchg
dec
fstpl
jb
mov
das
jb
mov
jg
fs
xlat
fucomp
pop
jns
dec
movsb
das
gs
ret
or
sbb
shrb
mov
rcl
fldenv
imul
jne
outsb
ja
pop
sbb
popf
aaa
movsl
push
mov
inc
dec
mulb
dec
out
mov
jecxz
jmp
push
push
mov
outsb
addr16
jns
cwtl
and
sti
push
mov
lahf
fistpll
mov
and
imul
idivb
addb
mov
sbb
rorb
movl
jo
in
int
stc
jne
mov
or
pop
pop
lds
loopne
sbb
cmp
mov
hlt
adc
mov
nop
stc
xor
xor
xor
ja
call
movsb
nop
out
sbb
cld
push
ja
adc
stos
jbe
pushf
mov
dec
fs
in
and
shll
fmuls
mov
mov
pusha
mov
stos
loope
dec
cs
into
xor
mov
mov
sar
mov
outsb
dec
inc
testl
xchg
jo
mov
inc
aaa
pop
inc
pop
adc
or
fs
arpl
dec
ss
ds
les
pop
cmp
adc
inc
test
sbb
push
pop
xchg
int
in
mov
cmpsb
xchg
adc
sbb
xchg
jge
fdivrl
push
lods
dec
leave
xchg
or
xchg
cmpsl
mov
inc
or
test
inc
sub
xor
or
ret
insl
add
xor
cmpsl
push
jb
xchg
scas
loope
popa
sub
cmp
jae
arpl
inc
cmp
push
fwait
push
test
jp
or
add
shl
in
jmp
inc
iret
rorb
jl
xlat
pop
cs
ss
lahf
mov
xor
lcall
daa
jo
fldt
fxch
and
scas
adc
mov
call
xor
loopne
int
hlt
or
aad
mov
fadd
cmc
mov
xor
inc
push
xor
jecxz
fadds
pushf
imul
xor
add
addr16
jmp
fst
or
pop
in
dec
mov
dec
mov
fidivrs
add
fldlg2
cmpsl
movsb
ja
roll
cmc
fbld
loopne
mov
lret
outsb
ljmp
jge
loopne
lcall
and
repnz
popa
movsl
fildll
dec
imul
inc
out
fcompl
xor
repnz
test
xchg
push
ret
or
cmpsl
push
icebp
popf
pop
xchg
mov
or
dec
insl
sahf
mov
add
movl
mov
xorl
movsb
or
and
pop
adc
add
cmc
cmp
or
cmp
adc
xor
add
lea
push
aas
xchg
jns
fwait
jg
push
xchg
imul
je
fnstsw
in
loope
add
push
imul
aas
xchg
xchg
insb
int
xor
mov
sbb
clc
mov
sarl
jl
sub
xor
pop
sahf
pop
xlat
in
adc
sbb
vandpd
ret
inc
jecxz
popf
movsl
push
pop
jae
mov
push
dec
inc
jecxz
sbb
out
rcll
ljmp
add
test
lahf
movb
leave
mov
repz
pop
push
sub
sub
and
adc
std
or
popf
iret
dec
or
loop
and
xchg
hlt
push
push
out
rcr
mov
and
dec
mov
fdivp
outsl
fstpl
sti
inc
pop
pushl
das
push
sub
fisubrl
dec
aaa
mov
lds
mov
movsl
subl
dec
pop
mov
and
fadd
sbbl
add
bound
jne
dec
dec
cmp
sahf
or
xor
inc
sbb
cli
mov
mov
adc
icebp
stc
cmovs
pop
push
jno
inc
arpl
ljmp
in
ds
daa
lods
rcll
pop
inc
push
cmpsb
divl
push
popa
xchg
push
lods
inc
mov
lret
jle
out
aaa
ds
xchg
call
ss
fs
or
jns
pop
mov
imul
adc
xor
nop
mov
add
adc
ss
fdiv
notb
rorl
popa
in
and
inc
inc
dec
mov
rorw
stos
mull
sbb
iret
sub
xor
jae
mov
lret
mov
inc
cs
cmp
fmul
mov
ret
lock
lret
rcrb
mov
sbb
mov
jno
insl
arpl
popfw
inc
loopne
shl
mov
mov
jg
or
mov
add
loope
or
mov
push
lds
push
int
nop
cmp
rolb
call
or
and
jle
mov
or
scas
dec
jg
nop
adc
test
test
movsl
aad
leave
rcr
loop
inc
adc
mov
fildl
inc
loop
fcoml
int
divb
ret
mov
stc
inc
push
call
cmp
popa
pop
and
imul
inc
out
mov
mov
pop
fimuls
lock
inc
ret
xchg
and
rolb
cwtl
mov
adc
pop
subb
add
mov
pop
push
out
into
cmp
mov
adc
xchg
or
xchg
cltd
dec
std
jno
mov
jb
mov
fbld
jg
les
xchg
sub
insb
lahf
inc
imul
fwait
into
jp
mov
std
dec
pop
pop
lock
sub
jb
mov
and
mov
push
lods
sbb
ja
ss
push
xchg
mov
inc
xchg
or
xchg
faddl
and
sahf
repnz
adc
mov
jmp
out
xchg
scas
jo
mov
loope
xor
outsb
test
scas
sub
je
test
mov
ljmp
mov
ret
fsubp
pop
das
repz
inc
sbb
dec
inc
or
gs
adc
xor
xchg
push
cltd
or
sahf
mov
mov
sbb
enter
bound
push
out
mov
cmp
jl
push
rcrl
push
xchg
js
cwtl
mov
sahf
in
and
and
into
push
inc
and
xchg
cmp
enter
xchg
dec
sub
add
movsl
in
int3
lds
out
xchg
inc
imul
sbbb
sbb
insl
outsl
rcrl
mov
ja
and
aas
sbb
gs
or
inc
hlt
xor
movsb
add
fldl
inc
xor
in
mov
mov
push
and
xor
setb
in
fs
mov
jae
sbb
mov
jns
jmp
sti
ret
mov
lods
lret
hlt
xchg
xlat
sub
xchg
dec
adc
andb
ror
leave
pop
neg
cmp
sub
into
add
lcall
xchg
push
sti
mov
int3
aas
in
arpl
mov
mov
cmpb
stos
or
push
in
mov
int
fbld
xchg
sub
add
and
add
fbstp
movsl
testl
mov
mov
pop
mov
repz
test
in
dec
sub
js
mov
or
push
add
xor
imul
add
add
in
shlb
and
cmc
lea
push
adc
hlt
or
dec
out
insb
das
out
xchg
loopne
mov
sbb
out
lods
xchg
lods
int3
mov
dec
lea
dec
mov
jne
test
push
lods
dec
stos
push
lds
movsb
int3
push
push
in
cmp
mov
cmp
loop
and
cmp
sbb
mov
pop
inc
mov
fistps
mov
lcall
scas
dec
mov
sahf
pop
hlt
jnp
lods
xor
out
negl
test
clc
mov
pop
insb
and
insb
stos
out
pop
mov
movsb
cwtl
or
ja
test
jnp
imul
leave
or
popa
fcoml
cwtl
es
pop
mov
sbb
or
push
mov
in
sbb
pop
sub
aaa
inc
jo
or
bound
js
mov
es
inc
and
mov
cmpsl
ljmp
push
test
mov
sti
push
dec
fwait
push
adc
stos
insl
lret
std
adc
in
iret
mov
mov
xor
xor
xchg
pop
add
pop
test
dec
pop
push
xchg
decb
insl
push
ss
adc
popa
jle
cmpsb
jecxz
push
jecxz
fwait
mov
xchg
addr16
sub
xchg
rcl
imul
stos
xor
mov
aas
and
pop
jg
mov
iret
add
mov
movsl
movsb
jns
mov
add
fiadds
ret
pop
and
cmp
clc
add
out
popa
in
lea
fcomip
inc
add
and
xor
and
movb
inc
xchg
movsb
xor
inc
psubsw
push
rcrb
nop
lds
cmp
mov
inc
and
sub
popf
das
adcl
or
push
data16
rorl
movsl
or
cmc
dec
jge
in
les
mov
mov
iret
test
fidivrs
dec
call
pop
out
mov
adc
rol
jge
sub
mov
push
outsl
adc
sti
dec
xchg
dec
cmp
jnp
pop
cld
call
ret
loope
lea
popa
cmp
mov
scas
popa
xchg
outsl
aam
ljmp
or
mov
insb
inc
fcoms
cmpsb
fadd
push
push
int3
hlt
pop
ljmp
inc
xchg
testl
je
jge
or
dec
jae
xchg
mov
jno
pop
imul
aas
jmp
notb
mov
xchg
popa
mov
mov
iret
push
insl
mov
cmpsb
or
nop
daa
lcall
pop
dec
inc
dec
pop
ss
ret
shl
cmp
ss
fidivrl
push
ds
cmc
in
in
xor
add
inc
push
ret
inc
aas
imul
mov
ljmp
cwtl
rcr
aaa
cmpsl
jl
cmpsb
mov
shl
mov
mov
sub
pop
sbb
mov
out
xchg
sbb
push
popf
fsubrl
dec
fimull
pop
mov
cli
and
and
or
icebp
and
insb
in
xchg
mov
pushf
call
mov
rolb
mov
rclb
mov
ss
mov
xor
js
inc
cmp
je
arpl
mov
aam
push
shll
dec
ds
pop
cli
mov
idiv
adc
push
mov
loop
mov
push
scas
dec
gs
repz
push
inc
xor
dec
xor
push
jns
mov
adc
popf
pop
lock
dec
inc
xor
mov
sub
das
push
jmp
popa
aas
stc
das
fwait
leave
inc
mov
pop
push
and
out
add
loopne
insb
jnp
jecxz
push
mov
mov
addl
sbb
adc
cli
aam
lods
test
lds
mov
ret
cld
and
lcall
out
adc
cmp
jns
sub
push
lods
lcall
aas
repz
inc
push
into
cmpsb
pop
xor
lods
mov
pop
xchg
dec
iret
clc
icebp
shll
js
adcl
and
lock
inc
loopne
push
add
rorl
pushf
xchg
ds
sub
stos
popa
loopne
test
pusha
orb
pop
sbb
add
pop
mov
ljmp
jle
jp
or
xchg
leave
sbb
fiaddl
mull
jns
mov
iret
push
out
cmpsl
mov
mov
fistpl
inc
pop
in
cmpsb
mov
add
hlt
jmp
mov
testl
xor
cmp
jb
inc
jno
cli
sbbl
jge
mov
sbbl
test
add
aad
aam
mov
popa
cmp
mov
test
movsl
add
add
loop
jmp
lret
int
adc
or
pop
mov
xchg
rolb
adc
push
xor
mov
push
mov
cmp
in
lret
jb
push
and
int3
mov
mov
add
lock
enter
clc
push
imul
pushf
mov
clc
scas
cmp
xlat
pop
xchg
sbb
sub
pop
test
mov
ret
in
xor
icebp
inc
lods
lret
and
lods
pop
test
sbb
dec
or
and
ucomiss
in
addb
ret
cmpsb
mov
mov
dec
not
pop
movd
addr16
pop
jae
sbb
cmp
loopne
outsb
xor
dec
cmp
mov
jg
or
add
jo
inc
lcall
xor
lcall
and
push
out
in
push
xchg
out
sub
jecxz
int
mov
adc
js
pop
push
es
mov
xchg
xlat
mov
repz
jo
out
sbb
mov
fcmovu
ljmp
push
jge
std
cmp
in
xchg
les
notb
inc
test
jmp
xor
imul
fptan
addr16
cltd
into
dec
push
clc
decl
cmp
scas
popf
and
inc
clc
sbb
into
jnp
xchg
xor
inc
add
notb
hlt
xor
sub
fidivl
xor
fwait
cli
into
jge
sub
pop
andb
cltd
cltd
mov
mov
leave
arpl
nop
or
mov
sub
orl
pop
sub
insb
push
nop
add
lret
enter
lock
dec
iret
lods
test
std
movsb
cli
jl
mov
call
and
mov
shrl
push
ljmp
sub
icebp
and
or
jmp
sbb
fstl
mov
fsubrs
dec
xor
in
test
out
repz
fsubl
insl
and
and
sbb
dec
mov
repz
dec
arpl
xor
ds
sbb
mov
cmpsb
xchg
sub
push
pop
insl
arpl
add
sti
mov
es
push
inc
push
aas
xchg
jb
fldt
add
int
rorb
xor
sbb
js
sbb
fistpll
adc
and
fsubrl
xor
mov
ret
xor
dec
test
push
lock
xchg
or
sti
mov
mov
mov
hlt
cwtl
mov
shr
lahf
xor
leave
sub
test
sbb
pusha
pop
push
cmpsb
fmuls
and
inc
jbe
call
adc
cmpsl
daa
adc
jbe
int
test
testl
cmp
out
inc
adc
sbb
sti
ret
popf
jl
cli
add
leave
pop
pop
imul
fstpl
lret
push
stos
je
shl
insb
mov
jbe
jb
push
lret
movb
out
or
xchg
lea
loopne
sti
movsb
call
fstpl
aad
xorb
js
xchg
scas
daa
push
movl
cs
nop
jp
lods
adc
jge
cmp
pop
lahf
sub
pop
push
lcall
sbb
dec
sbb
insb
mov
or
ss
aad
xor
mov
fcoml
dec
xor
fildll
mov
sbb
aam
aam
mov
dec
jnp
push
dec
rcr
jo
shlb
aaa
lds
les
add
pop
jmp
mov
xchg
int3
stc
pop
daa
jb
icebp
ljmp
mov
addr16
push
stc
dec
cmp
out
jnp
jnp
push
mov
sub
popf
xchg
add
dec
stos
xchg
outsb
fdivp
sahf
pop
mov
or
cmp
adc
aaa
cmpsb
arpl
or
adc
lret
insb
pop
push
jg
mov
jae
mov
and
and
and
in
out
mov
or
ret
and
pushf
lods
in
jbe
rcll
push
jb
mov
xchg
inc
pop
loopne
std
sti
inc
push
mov
inc
fcomps
mov
addr16
repz
pop
and
mov
or
sbb
cld
lahf
in
cmpl
xchg
xor
ss
adc
fisttpl
nop
notl
movsb
inc
xor
cmpsl
aad
xchg
push
pop
cmp
adc
push
insl
mov
sub
adc
jae
inc
roll
inc
inc
push
iret
pop
dec
and
cltd
push
aad
idiv
jg
stos
mov
lcall
xchg
lret
adc
jbe
scas
movsl
ds
sarl
clc
mov
mov
jbe
shrl
xorb
incl
cmp
mov
cwtl
xchg
clc
imul
imul
jb
cmp
mov
ficoml
push
sub
or
xchg
stos
aas
stos
daa
iret
and
outsl
jl
push
lahf
dec
or
lock
std
sub
in
adc
enter
das
ja
xchg
scas
inc
push
outsl
mov
mov
ret
mov
jae
or
mov
movsb
pop
add
ja
mov
pop
fcomp
inc
movsb
cmp
push
and
mov
lcall
popa
xorl
inc
inc
in
xchg
out
xchg
cmp
mov
jp
aaa
lock
insl
sahf
mov
sbb
mov
add
cld
aad
out
inc
sub
add
or
dec
in
out
push
jae
pop
push
cwtl
arpl
std
aam
out
jmp
mov
dec
xlat
xchg
fimull
or
in
repnz
pushf
inc
rcl
inc
ja
daa
mov
shlb
jno
mov
ret
lahf
xchg
gs
outsb
add
cmpsb
dec
mov
jmp
jge
fistps
outsl
rcrl
gs
pop
ret
mov
jmp
sbb
bound
test
loopne
mov
sbb
ficoml
iret
adc
or
and
stos
adc
or
push
mov
clc
lret
daa
aas
mov
insb
fwait
and
fisubrl
push
fists
movsl
add
jne
sbb
mov
scas
sub
or
aaa
data16
movsb
adc
lods
out
xchg
and
aas
mov
movsb
in
je
mov
icebp
or
leave
add
cmp
call
sub
inc
jo
out
in
sub
xchg
inc
add
cmp
lods
movsb
test
cmp
mov
or
in
jp
stos
fcom
push
pusha
std
cmp
cmp
pop
inc
jo
out
push
insl
xor
xchg
in
jl
sub
fwait
pop
mov
adc
cmpl
clc
ss
imul
inc
push
ss
mov
inc
push
dec
add
push
push
pop
mov
jne
jmp
aam
stc
lret
adc
outsb
add
filds
loopne
lea
or
repz
xchg
dec
jns
data16
subb
inc
xchg
ret
lock
jns
in
out
mov
dec
or
jle
ljmp
inc
cmc
push
mov
shlb
ljmp
mov
push
pop
jge
jg
add
lds
cmp
jl
je
jmp
push
sub
jbe
pushf
sbb
jl
mov
add
stc
pop
pop
fisubrs
mov
imul
mov
cmp
inc
cmp
jp
jo
adc
pop
or
arpl
pop
fwait
pop
arpl
mov
xchg
or
inc
mov
mov
cmc
mov
inc
adc
les
ret
push
clc
mul
push
insb
push
fadds
lcall
fwait
ds
sub
lods
mov
dec
xor
sub
jp
dec
andb
jno
mov
sub
out
enter
movsb
repnz
loope
sahf
imul
rcrb
jb
xchg
mov
and
imul
mov
imull
imul
sti
dec
or
je
enter
mov
adc
enter
xor
xchg
inc
push
and
cmpsb
lcall
sub
sbb
push
lods
aad
pop
scas
xor
add
jmp
test
mov
mov
mov
stos
dec
sbbl
sub
push
and
pop
jge
inc
jecxz
mov
leave
lret
repz
xor
cmp
mov
cmp
cmpsl
jge
mov
inc
mov
movsl
mov
push
sarb
nop
pop
test
push
cmpsl
imul
adc
cli
out
jmp
mov
movsl
in
mov
inc
popf
out
loop
pop
add
add
or
cmp
mov
stos
jno
cld
test
out
mov
pop
cmpsl
mov
and
cli
pop
clc
push
xchg
negl
movsl
mov
or
pop
cmp
mov
into
loopne
pop
xchg
rcr
lods
mov
pop
pop
adc
ret
sysexit
or
xchg
imul
addr16
lcall
xchg
add
loop
sbbb
fst
sbb
test
loope
jnp
mov
xchg
xchg
mov
sub
add
cmpl
or
mov
icebp
rolb
lret
mov
cld
shlb
fstpl
cmpsb
mov
das
cmp
loope
add
push
push
inc
ret
loop
add
mov
sbb
icebp
pop
cmp
mov
lods
push
jmp
cmp
xchg
push
mov
loope
scas
rcll
sahf
je
cmpsb
test
outsb
fidivrs
les
add
jmp
nop
mov
shl
rorb
jbe
ret
jne
adc
push
hlt
aam
dec
jle
dec
or
push
mov
or
fwait
sti
dec
push
xchg
lds
add
inc
xchg
repnz
xor
inc
dec
repnz
xchg
jne
jecxz
mov
ljmp
push
imul
mov
icebp
sbb
dec
cmc
loop
mov
iret
mov
imul
inc
movsb
cltd
cmp
sbb
add
out
cli
dec
stos
cld
ss
cmp
lahf
or
add
or
and
adc
xchg
or
xchg
jb
cmpsb
mov
and
fmull
test
pop
stos
mov
cmpl
popa
shr
mov
and
sahf
pop
mov
adc
jmp
cmp
mov
sub
xchg
fs
insl
jge
lds
xlat
cltd
adc
cmp
aaa
inc
outsl
inc
js
push
jnp
in
outsl
xor
adc
cltd
pop
out
jns
or
and
xor
repz
xchg
jb
nop
inc
mov
cmp
sbb
xor
or
mov
loopne
aad
pop
test
jno
cmpsb
cmpsb
in
into
pusha
addl
push
test
and
xchg
mov
leave
push
mov
cwtl
lret
xor
xchg
rcr
sub
insl
mov
loop
jp
loop
xchg
pop
loope
xlat
rclb
out
ret
jecxz
mov
dec
lahf
aad
pop
xrelease
cmp
enter
sahf
sbb
ficoms
mov
test
rolb
aas
or
inc
xor
xor
rcl
and
xor
insb
or
es
jno
pop
repz
fisttpl
push
xor
repz
mov
inc
je
pop
mov
mov
sub
xchg
jge
ret
stc
paddw
mov
inc
arpl
arpl
insb
aam
mov
sbb
mov
rol
xchg
jge
inc
mov
jno
sbb
ret
cmpsl
adc
mov
pop
xor
out
xchg
add
dec
add
or
lret
fsubs
mov
pop
inc
cld
sbb
sbb
mov
test
movsl
rolb
cmpsb
pop
mov
inc
cmp
cmp
icebp
dec
pop
addr16
pop
mov
outsl
sbb
std
movsl
sbb
bound
roll
test
cmp
mov
add
imul
pusha
mov
int3
icebp
jmp
aam
addr16
mov
inc
pusha
adcl
dec
or
push
fwait
dec
loop
inc
rcl
inc
dec
lods
addr16
fistpll
xor
sub
pop
repz
sub
rcr
jmp
cwtl
loopne
enter
mov
mov
jns
nop
adc
and
mov
shll
xor
mov
std
sahf
aas
add
pop
in
in
adc
cld
mulb
inc
xchg
pop
jne
data16
xchg
xor
cmp
and
adc
out
in
hlt
sub
jae,pn
and
aam
test
into
sub
sub
lea
incb
popa
sbb
adc
and
push
mov
and
mov
jge
cmp
xor
adc
push
fisubs
stc
pop
pop
sahf
or
sub
sub
test
sub
rcr
mov
dec
xchg
add
push
mov
pop
add
mov
mov
fistpl
adc
or
cltd
dec
mov
cli
sarl
and
mov
or
repnz
nop
push
test
and
dec
sub
rorl
push
adcl
mov
dec
aad
add
addr16
iret
sub
or
sub
jo
daa
sub
jge
push
into
jle
mov
sbb
les
pop
jecxz
jne
rcl
mov
scas
pop
inc
test
es
in
daa
loop,pt
sbbb
add
rcl
sarb
mov
xchg
add
xchg
cs
js
movsl
mov
or
rcpps
test
cli
pushfw
lahf
sahf
push
dec
lods
pop
mov
xor
rcrb
lds
stc
add
sbb
fisttpl
mov
lahf
and
rcr
jge
je
cltd
mov
repz
jne
dec
xor
sub
arpl
mov
mov
in
sub
movsb
dec
std
ss
mov
add
sbb
mov
outsl
icebp
imul
adc
mov
lret
das
mov
scas
ja
pop
fwait
add
sub
imulb
ss
cli
pop
xchg
add
inc
xor
jns
push
sar
fisttpll
ficompl
jg
ja
add
ret
xor
lods
sub
mov
or
aas
out
sarb
xchg
std
std
mov
xlat
mov
sar
sub
pushf
pop
mov
adc
aam
mov
dec
jle
jb
clc
adc
fwait
mov
lock
dec
mov
popf
dec
jbe
pop
jle
std
arpl
xor
les
outsl
adc
sbbl
adc
jns
lock
mov
cmp
inc
call
push
mov
pop
adc
ret
add
sub
ret
inc
pop
xor
mov
inc
mov
push
sarb
jne
xchg
inc
test
fmull
xchg
enter
test
aas
cli
addr16
bound
insl
push
icebp
ret
jbe
and
fdivl
mov
or
inc
and
jns
inc
insl
in
mov
in
xor
xor
or
dec
daa
pop
jp
lds
push
loop
fld
or
outsb
test
cmpsb
call
xchg
sub
test
or
add
fcomip
xchg
pushf
xchg
mov
ffree
pop
loop
test
rcrl
shl
data16
std
insb
push
pushf
and
push
add
stc
sbb
fnstenv
stos
sub
pop
dec
and
int3
ret
sub
mov
loopne
cltd
pop
repz
xorb
inc
testl
jmp
mov
adc
xchg
mov
xchg
enter
inc
fmuls
push
pop
mov
xlat
cmp
push
cltd
jb
pop
jle
push
lahf
mov
out
fs
dec
lret
mov
ljmp
das
mov
pop
arpl
leave
push
cmpsb
lahf
fidivrl
lea
cmpsl
js
out
cmp
mov
sub
imul
mov
cli
sub
iret
xor
mov
xchg
aaa
call
pushf
pop
stc
jmp
push
mov
and
sub
loope
mov
jecxz
fwait
push
cli
pushf
and
and
out
push
add
rcl
xchg
out
repz
jg
lea
rorl
imul
insb
sub
movsl
repnz
imul
xorb
mov
fiadds
adc
jp
dec
fbld
sarb
xor
lods
popf
xor
pop
imul
hlt
cmp
push
xchg
fisttps
push
pop
push
iret
fmuls
lock
or
movsl
rcrl
mov
mov
cmp
ret
pop
addr16
aad
std
bound
mov
ds
jecxz
xlat
movsl
rclb
jno
es
aaa
sub
leave
push
cmp
lret
sti
inc
push
sbb
fwait
push
push
test
js
mov
and
dec
cs
out
inc
loope
add
mov
add
insb
xchg
inc
inc
xchg
repnz
add
jnp
fisubrl
testb
daa
fs
push
or
andb
insb
cltd
push
mov
testl
fcmovnb
pop
jb
mov
cmp
imulb
jmp
inc
or
or
roll
fneni(8087
mov
jbe
stos
inc
inc
jne
mov
mov
pop
and
pusha
xor
lea
ficoml
stos
cmp
sbb
and
loope
mov
cmc
inc
sbb
cmp
aas
ss
std
mov
mov
icebp
imul
call
int
pusha
cli
mov
shlb
mov
push
pop
leave
enter
pusha
xchg
inc
adc
or
or
lahf
mov
inc
mov
pop
insl
sti
scas
push
loopne
push
add
les
aas
test
shll
jecxz
adc
icebp
adc
fstpt
mov
add
sbb
push
mov
das
popf
outsb
mov
mov
xor
les
push
jae
dec
mov
enter
outsl
push
cmp
pop
mov
lods
shrl
inc
hlt
int3
stos
flds
push
cmpsb
jmp
faddl
loop
xor
cmp
mov
cld
je
mov
scas
and
xor
sahf
out
insb
rol
sub
jl
inc
cmp
jns
xorb
dec
popf
addr16
ljmp
lcall
lds
xor
mov
mov
sbb
popa
and
lcall
and
xchg
test
pop
test
out
imul
push
add
dec
push
cmpb
je
jnp
lahf
pop
inc
xchg
fidivl
int3
out
je
insb
data16
pop
xchg
xor
push
push
xchg
sbb
fnstsw
xor
dec
xchg
xchg
push
lds
xchg
adc
pusha
shl
push
add
rorl
or
cli
mov
xor
cs
subl
pop
aaa
popa
es
xorl
adc
add
sub
cmp
loope
xor
into
popf
mov
inc
dec
push
imul
rcr
mov
jg
push
mov
imul
rorl
xor
icebp
in
cwtl
jne
sub
adc
sbb
mov
or
pop
into
rcll
test
dec
ss
sarb
mov
pop
pop
sti
mov
mov
scas
and
fldt
mov
mov
dec
por
sbb
imul
jo
and
out
insb
jl
mov
add
icebp
xchg
shrl
push
test
rorl
sub
test
mov
jp
push
push
sub
sbb
pushf
inc
sub
insb
mov
inc
fchs
push
call
push
sbb
lds
js
mov
sbb
mov
cmp
mov
lea
dec
xchg
inc
test
daa
cmpsl
lds
addr16
pusha
mov
scas
loopne
mov
js
popf
movsl
nop
mov
mov
addr16
leave
xor
add
inc
imul
je
xlat
js
pushl
cltd
nop
in
fnstcw
scas
stc
mov
fisubrl
scas
rolb
addb
sbb
mov
cmp
movsb
jge
or
pop
iret
push
cmp
fmull
or
and
sub
add
push
sbb
jle
mov
dec
fucomip
jae
out
pop
xor
iret
icebp
jg
inc
idiv
pop
dec
jb
fs
jns
fnstenv
ja
rcl
inc
lock
lock
mov
xor
cmp
pop
rcl
fucom
or
aas
imul
inc
xchg
fnstenv
xchg
mov
cmp
loope
rolb
cmpsb
pop
xchg
push
test
outsl
pushf
jmp
test
sbb
popa
aam
movsb
mov
insb
xchg
dec
dec
int
dec
fldcw
jns
adc
js
enter
inc
jge
orb
addr16
test
mov
cwtl
jle
out
sub
cmp
pop
sbb
jns
divb
fstl
or
int3
adc
sub
or
push
fs
fistps
lock
mov
adc
xadd
inc
mov
mov
pop
xchg
insl
aad
sbb
daa
add
stc
mov
push
test
daa
shlb
test
bound
cs
mov
psubw
cmp
inc
ret
dec
imul
pop
scas
clc
loope
cld
test
arpl
das
mov
fstps
fbstp
dec
rcl
scas
xorl
aad
pusha
call
dec
dec
sti
dec
xlat
jne
cmc
xlat
mov
cmp
xchg
fcmovbe
out
mov
adc
cwtl
and
ffreep
imul
pop
cltd
pop
insl
and
into
inc
inc
jp
clc
jge
xchg
loope
jo
andl
xlat
sbb
sbb
insl
jl
fisttpl
cli
xchg
add
inc
and
xchg
in
lock
fsts
insb
jge
iret
mov
cmp
mov
sub
pop
mov
fs
arpl
xchg
loope
rcll
push
mov
js
mov
lock
call
stos
ds
pushf
push
jno
stos
fisubs
ret
lods
nop
pop
jno
mov
push
mov
testl
mov
push
push
ret
fcomip
jge
cmpsl
cmp
sahf
test
call
imul
cmp
in
fdiv
popf
adc
add
inc
sub
fistps
mov
fiadds
arpl
mov
sub
in
push
sbb
xor
test
cmp
push
jle
add
dec
andb
dec
int3
inc
and
in
scas
fwait
and
repnz
cwtl
lds
xor
inc
xor
jg
sub
into
movsb
je,pt
iret
mov
jmp
mov
sub
pop
test
sar
or
mov
in
les
cmc
lahf
push
sbb
insl
and
arpl
pop
std
aad
mul
xor
mov
shlb
jl
sbb
and
aam
cwtl
mov
sbb
mov
cmp
push
int
add
nop
sbb
filds
inc
outsb
xor
xor
add
popf
xchg
mov
sbb
loop
loop
rcl
std
fsubrp
leave
call
mov
cmp
andl
mov
lret
sti
cli
or
xchg
xchg
sub
pop
adc
popa
lods
cmp
lea
inc
push
repnz
cmpsb
sbb
pop
arpl
das
adc
int
dec
jae
ret
jle
lds
push
mov
adcb
hlt
int3
jo
sub
push
cltd
aas
cmp
jmp
mov
rorl
add
xor
sbb
push
aam
pop
fs
push
cmp
fdivs
push
pop
ss
mov
xchg
sub
or
data16
push
sub
ror
mov
mov
or
jns
stos
addl
lret
sub
jns
fcmovnb
adc
lods
lods
roll
adc
aaa
ret
in
sub
ljmp
dec
mov
jae
inc
jb
movq
popa
aas
and
and
je
scas
cmp
xor
xlat
xchg
imul
nop
xchg
in
sbb
fisttpl
sbb
in
setge
xor
sub
jne
js
jg
cmp
mov
cmp
outsl
clc
stos
adc
mov
test
outsb
sbb
mov
shll
sub
insb
jne
push
loopne
cwtl
iret
sbb
xor
push
lods
pop
adc
adc
out
sub
mov
dec
dec
loope
mov
jnp
add
cmpsl
adc
sbb
inc
pop
jmp
sbb
lahf
aad
inc
lods
repnz
or
inc
xor
cmpsb
adc
push
cmp
repnz
scas
inc
mov
jecxz
inc
xchg
pop
movsb
or
and
enter
ljmp
sbb
push
daa
imul
adc
test
rcrl
add
scas
xchg
mov
imul
jg
popa
dec
add
data16
inc
enter
fists
and
jo
add
imul
sub
inc
pop
pop
movsb
repnz
inc
xor
cmc
aaa
dec
and
daa
addb
sub
sub
sub
add
cwtl
bound
pop
mov
or
insb
sti
int3
repnz
pop
jge
in
test
push
add
jecxz
jno
hlt
bound
mov
dec
xchg
cltd
les
nop
inc
aas
mov
popf
jp
gs
cltd
jle
push
scas
xchg
popl
daa
mov
mov
pop
jmp
and
lock
lcall
lods
js
cmp
push
xor
mov
scas
orb
mov
jb
lcall
inc
xchg
rcrb
nop
push
push
pop
lret
mov
ja
sub
lcall
cmp
xor
mov
xor
or
clc
and
push
cmp
inc
sbb
xchg
dec
ret
sbb
add
popf
jecxz
clc
xor
xor
push
add
sub
dec
fimull
std
inc
loop
jl
pusha
cli
test
and
sbb
das
aad
cwtl
stos
cmpsb
pusha
mov
pop
xchg
call
pop
and
sbb
in
sbb
xlat
sbb
rorl
pushf
out
movsb
xor
jg
push
call
jbe
mov
jl
mov
xchg
in
mov
mov
cltd
and
icebp
pop
cmc
sbb
fcmovbe
test
cmp
add
inc
loopne
sbb
mov
jg
pop
sub
pop
sub
jg
push
repnz
stc
or
adc
or
loope
imul
adc
mov
daa
adc
lods
inc
adc
cltd
push
push
in
inc
push
push
arpl
xchg
fwait
icebp
stc
pop
dec
movsl
jle
inc
pop
inc
lea
ret
divl
xorl
cwtl
fadds
mov
pop
push
push
mov
fmul
mov
jg
into
inc
das
stos
repz
ficoml
dec
cmpsb
iret
pop
dec
lods
xchg
fldenv
paddsw
outsb
aas
in
sbb
jno
push
jmp
ret
jae
pop
ret
push
adc
and
call
outsl
int3
scas
test
mov
push
sub
popf
mov
insb
xor
fistl
mov
mov
adc
sbb
outsl
iret
xchg
cmpsb
jno
hlt
shlb
and
pop
lret
push
adc
cmp
sub
mov
pushf
js
dec
inc
mov
imulb
test
ret
adc
jl
lods
sub
or
into
dec
fst
insb
mov
lock
jl
movsb
cltd
adc
sbb
into
xchg
call
pop
push
push
sti
clc
push
jge
ret
js
aas
and
jno
cmp
and
push
fbstp
into
aam
lahf
sti
les
adc
inc
sub
movsb
sub
shr
and
frstor
jmp
jecxz
iret
cmpsb
inc
aam
test
js
mov
in
test
leave
mov
lar
std
or
mov
ficompl
fstps
xor
and
mov
or
push
sub
xchg
mov
lea
cmp
and
bound
iret
popa
inc
sub
cld
jns
loope
mov
pop
cmc
mov
sub
pop
mov
mov
jp
adc
mov
iret
adc
and
les
bound
pop
out
cmp
fcomip
add
lahf
add
sbb
clc
orb
cmp
add
mov
addr16
xchg
loope
pop
mov
cltd
push
xorl
dec
aam
in
decb
adcl
inc
mov
or
adc
imul
inc
shrl
ss
insb
xorb
std
mov
test
popf
gs
mov
call
pop
movsl
iret
dec
aaa
push
and
hlt
pop
arpl
cli
xor
jle
mov
jge
adc
shl
imull
lret
cmpsb
ret
pop
test
mov
repnz
ss
cmp
int3
jecxz
adc
inc
xor
mov
adc
cs
jmp
shrb
inc
pushf
js
les
fcmove
push
push
xlat
fwait
xlat
sbb
mov
add
ss
shl
mov
shll
bnd
notl
sbb
lahf
pop
add
pop
es
icebp
mov
adc
or
push
cmpsb
roll
leave
xchg
cld
cmpl
call
clc
jmp
adc
je
fstpt
jnp
push
cmp
adc
icebp
inc
dec
mov
mov
jmp
add
fstpt
pop
ljmp
into
jnp
mov
mov
or
jp
pop
mov
repz
andl
int
or
pop
mov
cmc
popa
inc
psllw
out
mov
ja
push
mov
and
aad
push
js
mov
pop
mov
inc
push
fwait
test
adc
fst
add
pop
jo
pop
mov
mov
add
or
into
xchg
lahf
daa
xor
pop
cltd
jge
test
scas
and
dec
pop
mov
ror
in
cmp
mov
decb
pushw
cmp
cmp
retw
xlat
fimuls
adc
fstpl
in
mov
add
pop
iret
mov
xor
stos
push
or
ljmp
leave
ljmp
test
inc
push
jb
add
dec
push
xchg
mov
push
cmpsl
adc
push
mov
aam
sbb
mov
add
push
pop
pop
inc
lock
jle
sub
cmp
jmp
shlb
dec
cmpsl
lods
adc
mov
jo
popa
nop
scas
jmp
add
mov
ja
lea
push
pop
arpl
xor
fdivs
sub
loope
jne
or
cmp
fwait
mov
aaa
push
sub
sbb
inc
fsubp
popa
cli
cli
mov
jle
push
aam
cmp
cltd
lcall
xchg
mov
mov
fmulp
or
fildl
hlt
leave
mov
mov
add
dec
outsb
mov
repnz
xor
add
out
push
fistpll
jmp
ficompl
jae
scas
push
mov
jns
roll
mov
pop
pop
shl
mov
fs
or
dec
add
or
das
ss
and
sub
xorb
in
push
loopne
insb
pop
push
jne
sbb
jae
add
dec
adc
cmc
xchg
dec
mov
jae
es
lods
mov
lret
push
and
jge,pt
and
sub
and
mov
sbb
jne
xchg
popf
in
mov
mov
pop
or
adc
mov
sub
loop
in
and
sub
mov
push
popa
divl
leave
dec
xchg
add
scas
cmp
cmp
mov
sub
lds
fmuls
cmpsb
js
add
pusha
pop
repnz
cmp
cmp
xchg
fstpt
in
test
adc
sub
xlat
ss
and
xor
dec
daa
sub
fbld
clc
or
jecxz
fsubrs
inc
hlt
pop
xchg
lret
out
sti
add
movsl
icebp
in
and
cs
sbb
mov
das
fsts
in
adc
mov
push
test
in
and
xchg
nop
sarb
inc
jae
and
xchg
lods
adc
stos
xchg
and
push
test
aad
xchg
mov
push
push
cmp
stos
push
and
and
ds
mov
in
lods
sti
fimuls
das
xchg
iret
inc
scas
ja
ret
out
mov
adc
xchg
fimull
int
imul
aas
adc
icebp
lods
push
pop
in
cld
jl
imul
andb
ja
sbbl
int
and
xchg
icebp
sahf
ja
sub
mov
gs
mov
push
in
add
sbb
jp
into
push
and
or
cltd
int3
ficoml
pop
dec
push
xor
add
jno
adc
mov
dec
cmpsb
test
cmp
aas
inc
xorl
aaa
mov
pop
mov
mov
out
jns
xchg
scas
sahf
jbe
icebp
xchg
mov
pusha
lods
ss
js
xchg
mov
ror
cli
sbb
dec
imul
sbb
adc
loop
push
imul
mov
or
pop
ja
xchg
into
jg
cmp
jno
xor
lret
sub
scas
pushf
leave
push
pop
inc
pop
movb
dec
ja
fsubl
xchg
jecxz
mov
mov
dec
xchg
movsb
nop
sbb
lods
xchg
sahf
test
pop
ja
lods
cmp
push
mov
rclb
xchg
adc
dec
aad
jge
mov
mov
std
add
mov
pop
das
mov
das
enter
mov
pop
cmp
dec
call
mul
add
jg
outsl
adc
adc
lods
push
inc
lods
jp
xchg
mov
loop
movsb
xchg
sub
jge
jmp
std
mov
mov
mov
inc
sbb
jns
mov
out
in
sub
xor
xorl
mov
fsts
js
clc
inc
lods
popf
out
lods
push
xor
jle
push
and
add
outsb
repnz
cmp
xor
loop
xchg
push
pushf
xor
bound
cs
pushf
int
mov
cmp
dec
popl
and
jno
jne
faddl
jbe
sbb
add
cmp
ss
fadd
adc
cmpsl
inc
lcall
into
mov
push
aad
mov
add
push
les
push
mov
cmp
xor
leave
fldl2t
hlt
xor
cmp
dec
bound
dec
or
divb
lods
fs
repz
mov
jne
test
sub
sahf
push
fsubl
xchg
sbb
and
pushf
das
xor
test
xlat
out
add
xchg
push
and
cs
and
cmpsl
push
mull
pushf
push
in
in
xorb
jmp
jae
gs
call
lret
xchg
sti
mov
in
neg
inc
sub
andb
cli
push
lods
jmp
pop
mov
cmp
pop
sub
inc
fadds
shlb
push
cmp
fists
out
cmpsl
inc
jb
je
mov
pushf
inc
or
scas
mov
fcmovu
sbb
sbb
aad
hlt
inc
mov
xor
insb
pop
dec
pop
and
notb
jge
clc
lret
ret
in
loopne
insb
push
int3
adc
aad
fwait
mov
mov
outsb
inc
test
adc
insb
std
dec
loope
das
into
sub
lahf
roll
mov
daa
dec
dec
fdivs
add
dec
leave
jo
push
xchg
inc
mov
xor
or
dec
or
loop
adc
lds
loop
mov
xchg
jae
stos
je
aas
nop
cwtl
shlb
cmp
or
rcr
dec
lods
inc
lret
or
jecxz
xchg
test
insl
push
xchg
sbb
xchg
iret
inc
outsb
ja
fdivrl
xchg
dec
in
jmp
push
adc
push
movsl
cmp
negb
cmpsb
cltd
popa
sbb
mov
xor
pusha
loopne
stos
mov
sbbb
jno
cmp
mov
jno
rorb
movsl
jmp
xlat
sti
int
dec
inc
test
add
jmp
and
push
push
fidivl
cmp
scas
ja
xchg
jno
cmp
push
outsb
jge
and
lods
leave
mov
int3
lds
notb
testl
mov
leave
popa
dec
hlt
jmp
inc
cs
jmp
adc
popa
sub
mov
sete
add
and
loopne
and
sub
int3
pop
daa
push
inc
push
adc
addb
pop
mov
xor
inc
mov
jno,pn
out
outsl
cmpsb
addr16
add
push
ret
sbbl
jle
inc
out
mov
int3
mov
mov
cmp
xchg
push
push
js
mov
push
in
push
adc
mov
repz
cmp
clc
enter
sbb
aad
pop
mov
push
mov
jmp
pop
inc
jp
icebp
imul
pushw
push
jo
push
ss
popa
mov
add
ss
lret
stos
or
mov
insb
and
movsb
xchg
sbb
xor
sarl
jns
loopne
aam
push
pop
cwtl
sbb
adc
pop
clc
out
and
cmpps
pop
mov
js
je
inc
mov
adc
xchg
ficoms
xchg
add
pop
inc
fwait
pop
nop
push
cmp
adc
out
push
dec
roll
push
out
cmpsl
cltd
push
or
lock
add
nop
cltd
pushf
push
movsb
push
pop
mov
push
lods
push
mov
xchg
add
xor
mov
dec
mov
fsubrl
test
clc
mov
popa
cmp
jo
xchg
cmp
movsl
movsl
push
dec
sub
mov
xor
push
fisttps
sahf
jl
xlat
cli
ja
call
sar
xor
cwtl
sub
xor
push
in
jnp
fsubp
sub
jo,pt
mov
pop
or
in
adc
lret
sub
imul
xchg
aam
inc
in
sbb
rorb
hlt
repz
stos
push
cmpsl
xor
ror
jb
cwtl
fsts
mov
repz
std
cmp
mov
mov
sub
mov
ret
xchg
xor
mov
cmc
mov
cld
ja
js
adc
mov
loop
in
and
leave
je
push
xor
sbbb
mov
dec
ret
cwtl
mov
adc
mov
add
jbe
stos
mov
ljmp
pop
lea
sub
data16
xchg
push
dec
stc
lretw
dec
inc
outsb
testl
pusha
out
xor
das
pop
call
xchg
fprem1
rolb
sbb
jp
push
inc
sbb
rcrb
cmc
xchg
add
jp
test
call
out
sti
mov
outsb
cmp
ljmp
lcall
fcomip
lret
cmpsl
and
and
negl
sahf
clc
stos
inc
adcb
out
mov
retw
lods
mov
pop
pop
mov
addb
call
push
movsl
push
jle
fiaddl
pop
bound
sti
sbb
sub
xor
cmp
enter
ss
xchg
cmp
mov
arpl
xor
jne
ret
pusha
rorl
scas
pop
movb
dec
dec
jne
int
or
mov
popa
stos
inc
fbld
pushf
outsl
push
jecxz
clc
add
sub
and
pop
cmp
sbb
and
mov
xor
sbb
bound
mov
lea
push
pop
xchg
lea
xchg
cwtl
daa
adc
add
incb
xor
insl
fsubrl
push
aaa
shll
xor
mov
or
and
movsb
les
in
lock
xor
in
test
xchg
pop
adc
mov
je
dec
lcall
add
add
jne
stos
xchg
mov
jae
dec
repnz
clc
sub
fcmovb
push
sub
lods
mov
ret
hlt
add
jo
add
pop
xchg
and
loopne
les
ljmp
repnz
mov
adc
and
fbstp
in
mov
push
int
mov
ret
int3
popa
clc
mov
in
mov
das
inc
xchg
icebp
sahf
or
or
aad
push
fsubl
sti
xchg
adc
data16
xor
jo
scas
loope
jecxz
xor
or
scas
test
add
mov
pusha
int
pop
push
outsl
leave
daa
int3
les
push
pusha
cli
and
rcr
push
test
jno
in
inc
mov
repz
pusha
adc
iret
push
popa
cmp
mov
dec
sbb
cmp
mov
outsl
shrl
lods
jmp
xchg
mov
mov
cli
js
cmp
pop
mov
lea
cmp
movsb
xor
xchg
push
add
mov
jmp
xor
lahf
addr16
dec
jl
add
idiv
cmpsl
xchg
cmp
push
pop
jo
sbbl
testb
shll
fdivl
out
sbb
loop
aas
and
add
add
ljmp
sub
sbb
push
stc
cmp
gs
pop
sbb
int3
iret
repnz
jno
in
mov
push
daa
loop
add
ficompl
addl
sub
and
dec
pop
out
mov
aas
xchg
or
xor
in
rorl
jl
pop
fldl
jnp
cwtl
psrld
mov
cltd
mov
add
xor
mov
cli
xor
xchg
jg
lret
clc
aas
jmp
out
nop
scas
xchg
daa
push
pushf
jmp
and
bound
fcmovbe
mov
subb
or
notl
pushf
jb
popf
push
adc
aas
adc
out
sahf
and
and
adc
mov
dec
and
or
pop
push
sub
inc
fdivrs
push
test
fst
push
cmpsl
mov
xchg
pop
icebp
mov
shll
fsubrl
test
mov
lret
add
mov
xor
mov
rep
idivl
pop
shl
dec
xor
push
test
sbb
inc
xchg
test
sub
loop
xlat
mov
cmp
or
cmpsb
xchg
into
enter
ss
out
jmp
fcompl
rorb
push
cmp
cmp
dec
xchg
imul
stc
cmp
ret
or
sub
ja
arpl
scas
xlat
rorl
iret
xchg
ffreep
shrl
jnp
shll
add
dec
or
dec
clc
pop
cld
add
les
xchg
push
jge
mov
adcb
jecxz
sub
push
out
pop
sub
imul
mov
mov
mov
gs
fdivs
sub
jns
dec
sbb
sbb
xor
sbb
pop
xchg
cmpsw
rcl
std
loope,pt
negb
dec
shll
cmp
leave
ds
pop
sbb
out
out
or
jne
sub
out
push
mov
fdivrs
mov
shlb
pop
fxch
push
xchg
frstor
loopne
aam
mov
sbb
add
test
repnz
mov
lock
mov
icebp
dec
iret
iret
or
fmul
cmc
mov
push
and
shrl
push
fcom
mov
and
rorl
mov
push
data16
xlat
leave
dec
cmpsb
sbb
test
andl
xor
push
fstpl
push
aaa
cmp
push
bound
clc
in
mov
imul
inc
push
dec
sbb
in
test
jnp
push
inc
mov
add
icebp
sahf
lahf
sbb
ljmp
test
fs
fsts
dec
sbb
ss
dec
fwait
and
aas
or
jbe
adc
cwtl
sub
dec
ret
bound
icebp
xchg
cmpsb
lcall
pop
mov
insw
sbb
jl
int
or
jb
sbb
jne
mov
cmp
imul
inc
push
in
loop
pop
sbb
adc
aas
sar
rcrb
jb
in
aaa
inc
cmp
dec
sub
jmp
pop
popa
punpckhwd
rcll
sub
mov
pop
icebp
sbb
shlb
clc
mov
jae
bound
sub
aad
cmp
or
mov
or
movsb
out
dec
fsubrs
mov
sbb
pop
push
and
call
and
rorb
push
mov
inc
push
ja
dec
arpl
jge
lret
inc
cli
sahf
sbb
adc
or
lcall
cwtl
cld
fstl
fcmovb
jb
sbb
repz
cmp
mov
inc
jbe
jno
cmp
jbe
mov
push
push
mov
imul
push
xchg
inc
in
lods
sbb
inc
leave
ret
ficompl
add
sub
test
jae
cmpsl
or
mov
insb
scas
add
shrl
pop
jge
cmp
icebp
hlt
mov
xchg
push
aaa
add
lods
mov
enter
test
les
mov
je
hlt
push
outsl
push
inc
mov
jnp
xor
out
push
rdtsc
popa
addr16
jle
loope
ret
xor
push
add
loope
ss
gs
push
adc
cmp
pop
sbb
add
shrb
push
mov
sahf
push
jno
dec
jle
popa
ja
cmc
in
scas
ds
int
insb
add
sub
inc
mov
mov
sarb
xchg
popf
jnp
mov
jge
cmpsb
xor
and
lods
push
jle
adc
inc
mov
jle
mov
mov
pushf
ret
dec
dec
pop
outsb
cs
inc
loopne
ret
add
pop
ss
and
or
push
sub
cmp
lret
xchg
dec
push
jo
mov
pop
or
push
push
shlb
jl
mov
stc
aas
xor
xchg
push
adc
call
iret
pop
sub
stos
sub
cmp
out
dec
inc
xchg
push
rep
movsl
icebp
sbb
shll
js
sub
inc
mov
cld
pop
addr16
dec
jmp
ss
cmpsb
iret
push
xor
enter
xchg
call
lret
lret
xchg
imul
sarl
xchg
rorb
outsl
mov
sahf
es
jo
lea
insl
pushf
mov
mov
and
stos
loop
ret
out
dec
out
cs
or
add
push
inc
sbb
in
je
repnz
dec
leave
pusha
lret
or
notb
sbb
popf
mov
insl
mov
xchg
repnz
loop
cmp
pop
testb
inc
push
xchg
int
fneni(8087
movsb
je
nop
and
add
push
inc
pop
cmp
sbb
leave
aam
push
call
mov
div
xor
ds
xchg
xchg
movsl
jbe
aaa
hlt
aam
mov
subl
fistps
cmp
adc
push
push
push
insb
mov
adc
mov
fwait
lret
xor
push
gs
iret
not
sub
jo
dec
xchg
xor
aaa
xor
dec
dec
or
and
mov
mov
push
add
imul
push
and
rcll
ljmp
dec
out
repz
or
lods
mov
push
dec
nop
sbb
out
popa
inc
lea
and
sar
push
adc
dec
pop
adc
xor
xchg
out
pop
les
in
sbb
cltd
xor
fdivr
push
mov
int3
jnp
or
aaa
mov
or
les
daa
dec
stc
pop
pop
or
mov
mov
pop
in
data16
pop
leave
cs
adc
ret
mov
jg
inc
jns
andb
cmp
cli
ficoml
cli
jo
push
mov
pop
adc
test
jecxz
bound
out
insl
jns
in
ljmp
aas
mov
outsb
add
sbb
sub
and
xchg
add
mov
mov
pop
adc
nop
sub
scas
int
filds
movsl
in
call
push
call
mov
pop
jp
fimuls
fmulp
pop
mov
inc
add
xor
sahf
ret
add
add
mov
sbb
pop
lea
jne
jb
repz
out
pop
cmp
dec
dec
add
out
mov
pop
lods
icebp
mov
fadds
repnz
cmp
mov
xchg
push
lds
push
cli
ret
test
cltd
lods
xchg
mov
push
and
popa
push
jmp
cs
xchg
loop
int
pushf
add
xor
adc
loopne
popf
mov
xchg
ljmp
and
sub
test
sbb
push
out
int3
pop
out
and
fwait
jp
cltd
lret
cmpsb
mov
cmp
es
lret
push
mov
add
mov
hlt
ja
add
enter
mov
out
mov
das
fisttpl
jno
xor
gs
daa
pop
mov
adcb
or
push
inc
bound
xchg
push
stos
in
aas
clc
jecxz
push
push
lret
jg
xorb
pop
mov
push
lret
and
xchg
and
jecxz
pop
jl
leave
ja
cmp
cmp
jecxz
cmpsb
jns
mov
or
aad
lahf
push
fstp
pusha
loopne
push
clc
adc
pop
push
in
adc
stos
repnz
or
insb
mov
insb
dec
cmp
sub
lahf
les
mov
lock
insl
or
mov
movsl
aam
inc
push
pop
inc
jo
icebp
inc
pop
insl
mov
and
movsl
mov
push
popf
jb
dec
or
sub
pop
and
cmp
xor
gs
xchg
or
rorb
aad
jg
cmp
pop
xorl
jns
mov
fdivs
jp
mov
loope
jno
lret
rcll
dec
jge
dec
stos
mov
clc
jns
mov
add
in
xchg
dec
inc
out
pop
aaa
jmp
mov
gs
cmp
add
es
or
aas
insb
pop
mull
push
cltd
movsl
iret
mov
xor
sbb
jns
std
jg
ret
adc
movsb
jmp
in
add
loopne
and
popa
xchg
jnp
sbb
dec
fimull
jae
call
je
andb
cld
aam
inc
and
shll
cmp
mov
into
fists
shrl
std
fnstenv
and
out
rcl
test
lea
xchg
scas
out
cmpsl
sbb
inc
fcmovb
fnstenv
andnps
xor
add
jnp
push
jo
sbb
mov
sbb
les
ror
sub
int3
sbb
cmpsb
loope
loope
or
test
cmp
xchg
test
aam
xor
xor
jle
xchg
ljmp
add
gs
aad
mov
dec
shlb
and
add
mov
dec
test
sbb
sti
ss
dec
stos
fcom
mov
inc
dec
xchg
mov
pop
into
outsl
js
fs
cmp
lods
ds
xchg
cli
addr16
xor
jp
outsb
enter
out
repz
in
jnp
sub
sub
filds
add
fsubrl
call
adc
jle
loope
fcmovne
idivb
sbb
dec
xchg
imul
lret
jmp
cmp
pop
jmp
out
xchg
aas
mov
lret
cmp
movsl
aam
fldl
addb
sub
push
enter
rcr
insl
xor
out
lahf
nop
daa
stos
push
cltd
je
push
popf
data16
xchg
sahf
sbb
mov
fadds
das
aad
in
sub
mov
jnp
stos
scas
gs
scas
sub
int
cltd
aad
rol
cmp
and
xchg
cmp
push
das
or
test
imul
call
cmp
jge
cltd
or
fcmovnu
adc
in
push
mov
xor
hlt
stos
dec
data16
sbb
shll
insl
inc
fdivrs
adc
xchg
outsb
mov
es
jb
adc
test
inc
jne
movsb
sbb
dec
sbb
stc
cs
pop
jle
fimull
stc
jecxz
add
mov
pop
lret
lea
int3
daa
push
push
shlb
enter
stos
fnstcw
cli
int
xor
jns
xchg
fsubrp
inc
push
ds
imulb
fwait
in
dec
movsb
xchg
sub
iret
jno
js
fsub
mov
outsl
push
push
ret
mov
or
ss
and
mov
adc
inc
cmp
mov
gs
js
xchg
and
hlt
jle
test
in
je
je
sahf
insl
cld
stos
loope
cmp
xchg
repz
inc
pop
pop
xchg
and
mov
mov
in
lret
int3
or
scas
and
add
stos
imul
pop
pop
scas
roll
mov
sbb
inc
inc
inc
add
jecxz
cmp
lret
push
push
pop
fwait
cltd
xor
jnp
iret
mov
jl
cltd
and
jae
cmp
inc
pop
cmp
mov
repnz
xor
das
xchg
ss
jns
inc
xlat
jle
aad
push
push
xchg
mov
mov
xlat
sahf
push
loop
lahf
ljmp
push
push
sbb
sub
and
into
stos
imulb
push
ret
divl
pop
lods
mov
das
jo
jl
inc
xor
movsb
aas
divb
jae
mov
xchg
cmp
pop
loope
and
push
js
cmp
jo
lds
xor
lret
add
mov
mov
mov
mov
push
insb
movups
push
sub
inc
jp
scas
pop
xchg
mov
or
cltd
cmpsb
mov
and
lods
or
jns
loopne
mov
cli
jne
or
in
hlt
inc
lds
cmpsb
or
cmp
out
lods
leave
mov
scas
js
or
mov
xchg
stos
pop
mov
and
xchg
inc
and
push
jo
jge
rcrl
push
lods
mov
sbb
push
mov
nop
sub
daa
iret
mov
add
out
in
loop
cld
mov
outsl
push
mov
xchg
or
cmp
das
fsubrl
imul
sbb
and
in
pop
outsl
inc
neg
jo
mov
aas
testl
jns
lds
dec
push
je
adc
xchg
xchg
cmpsl
cmpsb
pop
mov
mov
or
add
cmpsb
in
sbb
je
sub
insl
sarl
inc
push
inc
push
mov
imul
adc
xor
pop
fidivrl
divl
call
adcb
add
add
ja
pop
cmp
jns
loopne
pop
ljmp
jl
push
lds
add
xchg
sbb
mov
mov
pop
cli
and
andb
sti
cmp
and
in
aaa
mov
scas
jg
pop
cmp
adc
push
gs
sub
icebp
imul
push
inc
pop
push
xchg
fsts
or
mov
push
or
sub
mov
jns
push
xchg
add
mov
inc
jge
movb
std
xor
insl
sahf
adc
inc
add
push
add
sbb
push
das
xor
mov
and
pop
xlat
push
fistpll
jo
ret
orb
add
xor
mov
jp,pn
fwait
adc
fwait
clc
clc
pop
sub
xor
rclb
out
into
cmp
or
dec
mov
out
addl
stos
scas
mov
mov
mov
std
sbb
out
or
pop
int3
es
movsl
addr16
xlat
xchg
out
xchg
fsubrl
cmp
mov
jle
xchg
in
mov
adc
and
or
jle
fcompl
cwtl
xor
dec
dec
inc
in
ds
adc
sbb
sahf
movsl
in
push
cmp
js
int
and
mov
push
xlat
sub
loop
scas
lcall
outsb
xchg
and
adc
push
mov
inc
xchg
mov
xchg
jns
mov
mov
daa
mov
outsb
icebp
inc
pop
popf
fbld
mov
push
or
mov
or
pop
std
jg
pop
lahf
dec
push
stc
xor
mov
in
outsl
and
lods
shlb
mov
mov
mov
add
shlb
test
test
repz
sub
cmp
stos
sub
or
cmp
push
inc
repz
sub
daa
push
dec
cmp
insb
or
mov
outsb
jb
cmpsl
inc
inc
add
mov
jo
lods
insl
cwtl
push
xchg
cmp
and
dec
stos
dec
cmp
call
cmp
inc
fdiv
ja
mov
mov
scas
dec
mov
enter
mov
lahf
pushw
adc
daa
push
lea
ret
xchg
leave
testb
leave
addl
fnstcw
jmp
in
imul
cmpsl
cs
scas
jge
jns
loope
sarb
adcl
dec
lock
stos
out
aas
and
cmp
lds
push
mov
push
dec
mov
dec
fidivrs
xor
mov
pop
popa
xchg
stc
mov
mov
int
fs
xor
inc
jno
fcmovbe
adc
dec
pop
add
push
movl
xorl
fsubl
add
xor
push
dec
add
xchg
mov
sub
pop
or
imul
mov
jno
test
data16
nop
movsl
fstl
sub
mov
xor
xchg
decb
fcomip
les
iret
in
outsl
mov
dec
dec
mul
lods
push
mov
jmp
sub
out
cmpsb
imul
mov
sarl
mov
cmc
test
mov
sub
and
mov
adc
lret
arpl
cmpsl
sbb
inc
sub
pushf
int
les
test
add
bound
clc
or
sub
jg
push
call
jb
dec
ret
repnz
test
cmp
jecxz
ret
or
mov
aaa
add
inc
mov
push
xor
pop
aam
dec
lret
pop
push
sub
adc
sahf
cmpb
popa
or
test
shll
inc
cmp
jb
in
push
jle
mov
hlt
xchg
shlb
std
inc
imul
mov
adc
push
pushf
mov
push
mov
lcall
sbb
xor
dec
dec
mov
cmpsl
bound
dec
dec
clc
xchg
fistpll
inc
test
xchg
in
fdiv
cmp
lock
cltd
jge
xchg
mov
inc
sub
imul
pop
add
popf
ja
xlat
pop
and
push
aaa
jge
hlt
sti
adc
inc
sub
insb
inc
dec
andb
and
xor
or
std
jae
mov
outsl
aaa
sbb
xchg
fs
or
push
arpl
sbbb
addl
popa
dec
loop
jae
push
sbb
cmp
rol
pop
enter
mov
nop
jge
jp
imull
add
adcl
and
cmpsl
clc
out
out
in
xchg
lea
pop
pop
cmp
ja
call
jnp
ljmp
inc
movsb
jle
mov
push
lods
xor
jl
adc
push
orb
call
out
idiv
and
inc
dec
cmp
or
ror
stos
and
or
mov
mov
mov
mov
add
cmp
jl
mov
mov
xchg
jg
stos
out
in
call
pop
dec
xor
ljmp
xchg
push
mov
lods
inc
adc
dec
loop
dec
dec
mov
jl
mov
add
shlb
int
xchg
mov
js
int3
add
aaa
xor
xchg
mov
repz
pushf
xchg
inc
add
call
push
cli
ss
imul
stc
inc
xor
dec
pop
and
stc
or
fistl
fcomp
mov
lock
fisttpl
arpl
inc
cmp
dec
mov
sarb
mov
push
roll
out
cmp
add
shrb
and
fmull
adc
dec
xchg
xor
shrl
mov
dec
fwait
pop
inc
and
cwtl
sahf
xor
xor
xor
faddp
test
xlat
imul
push
xor
loope
push
js
test
cmp
push
inc
scas
xchg
ret
js
inc
js
xchg
out
adc
test
lock
les
dec
popa
rcll
out
orl
xchg
pop
in
mov
rcll
inc
pop
mov
inc
push
mov
sub
addr16
and
movsb
test
popf
mov
inc
pop
mov
sbb
xorb
out
xlat
adc
mov
outsb
cwtl
mov
lea
sahf
inc
pop
lds
lods
stc
data16
or
mov
and
scas
loop
adc
cwtl
mov
cltd
test
sub
adc
js
dec
sbb
gs
pop
cld
cmp
jo
lahf
ret
hlt
mov
push
out
sahf
loop
dec
and
pop
jno
js
imul
jl
jl
fyl2x
add
mov
sbb
jb
dec
nop
adc
inc
stos
ds
jns
rdtsc
mov
lahf
xor
and
push
cwtl
mov
mov
sub
sub
mov
xor
sbb
in
decl
jb
sub
rclb
mov
movlps
pop
insl
das
jae
xchg
or
loope
ss
cmp
inc
inc
or
int3
cmpl
xlat
mov
jmp
add
flds
inc
inc
popf
les
pop
xchg
mov
imul
pop
and
test
sub
test
xchg
in
pop
fcoml
sahf
mov
std
cltd
sbb
mov
cmp
xchg
jmp
dec
cmp
adc
dec
push
out
test
and
pusha
gs
bound
ja
outsb
mov
enter
mov
or
cmp
in
outsb
lods
jg
pop
imul
arpl
out
lods
stc
sbb
out
dec
add
lds
scas
xchg
adc
orb
jmp
add
or
divl
mov
pusha
into
jle
or
xchg
sub
repnz
inc
pop
in
jmp
testb
mov
pop
imul
stos
xor
pop
xor
sub
cltd
cmp
sbb
inc
mov
shrl
xchg
or
push
xchg
jne
mov
xor
pop
push
jo
xor
mov
repz
in
enter
xchg
xchg
adc
inc
in
inc
or
addr16
mov
cmp
bound
add
in
je
hlt
or
inc
inc
sub
sub
adc
jno
xor
lods
cmp
jg
test
xor
cmc
or
jl
fstps
movl
roll
xchg
push
nop
cmp
pusha
fildl
xchg
dec
inc
lods
fsts
or
cmp
and
jno
out
movl
cmp
shll
xchg
jbe
lock
cmpsl
dec
les
mov
dec
xchg
push
mov
int3
cld
xor
sub
hlt
repz
hlt
iret
les
loop
and
and
ljmp
nop
jge
imul
ret
in
push
and
rorb
mov
mov
aad
mov
mov
je
dec
adc
sahf
and
xor
mov
sub
getsec
jno
rolb
push
mov
jae
frstor
sbbb
js,pt
negb
jb
movsb
or
imul
xor
push
out
push
outsb
fisttpll
arpl
fstps
std
dec
rorb
cmpsl
gs
mov
ja
in
inc
push
dec
mov
mov
sub
xchg
jno
pop
pop
insb
adc
hlt
cld
sbb
aad
psadbw
aaa
daa
and
repz
jl
jle
sbb
and
sub
jl
int
sub
mov
jg
mov
lds
add
sbb
cmpsb
sub
in
dec
sub
add
jmp
xor
inc
loop
dec
test
mov
cli
fwait
call
xchg
data16
push
lods
and
mov
das
dec
sbb
dec
adc
inc
and
ja
or
ret
xchg
pusha
cld
roll
sahf
mov
rorl
insb
jg
int
dec
mov
test
and
xchg
jo
mov
mov
test
push
sub
mov
test
jnp
gs
aam
dec
mov
mov
dec
out
call
xchg
mov
std
adc
sti
pop
call
in
cld
leave
fs
fldt
xor
jmp
jp
sub
ficomps
pop
repz
fwait
mov
cltd
into
adc
lcall
sub
jmp
push
or
add
cli
inc
mov
xchg
icebp
clc
mov
push
mov
mov
cmpsl
xor
mov
enter
add
sbb
cmp
dec
add
mov
jne
jbe
add
inc
outsl
dec
cmp
fidivs
dec
mov
pop
les
lock
push
test
add
push
jns
daa
jbe
pop
and
and
adc
push
int
jb
add
xchg
aam
bound
and
mov
int
in
daa
mov
or
push
dec
nop
das
ret
dec
mov
outsb
push
sub
scas
cmp
or
fiaddl
icebp
popa
repz
and
adc
mov
xor
or
insl
mov
pop
ljmp
aaa
add
cmp
mov
nop
in
and
push
sub
jge
adc
arpl
push
das
loop
mov
movsb
stc
and
mov
mov
repnz
or
in
pop
adc
xchg
das
pushl
mov
fnsave
insl
inc
shll
cmpsl
arpl
subl
or
jbe
icebp
dec
clc
sub
repnz
sub
xorb
xor
jmp
in
add
and
pushf
cld
inc
mov
dec
lock
sbb
out
mov
loop
sbb
pop
xor
lret
out
les
and
hlt
popa
cwtl
data16
jae
mov
sbb
adc
cltd
aam
lcall
mov
movsb
or
test
inc
push
test
sbb
int
insb
adc
jle
out
add
std
dec
mov
cmp
and
sbb
push
adc
or
sbb
clc
fcomp
ljmp
inc
xor
mov
int3
pop
add
add
mov
sti
jp
cmc
out
cwtl
inc
lret
add
dec
lret
sub
jl
push
mov
aam
push
out
inc
out
inc
pop
mov
pop
pop
addl
mov
mov
inc
cvtpi2ps
push
jl
loop
cmpsl
pusha
nop
xchg
mov
push
xor
mov
cmp
cmc
aad
pop
stc
inc
inc
loopne
call
stos
push
mov
int
ss
xor
push
sbb
pop
jne
jns
cmpsb
sarb
into
stos
arpl
or
loop
jno
or
es
mov
ror
jno
push
stc
scas
sti
add
ja
imul
pop
push
xchg
mov
mov
or
lea
mov
repz
xchg
pop
lcall
jo
dec
movsb
mov
loope
outsl
pop
pop
pop
in
test
mov
sbb
loope
cmpsl
insl
lret
outsb
xchg
mov
xchg
jae
add
jmp
out
xchg
cmp
adc
add
insl
mov
inc
pop
sub
mov
subl
aam
ds
or
adcl
sbb
movsb
stos
lea
push
out
mov
out
sarb
pop
inc
in
ja
push
and
das
adc
mov
dec
mov
jp
fwait
outsb
xchg
popf
rcrl
jecxz
jbe
mov
jo
popa
mov
ds
stc
mov
mov
daa
sbbl
xchg
ficoms
lahf
cmp
lea
dec
loope
push
push
inc
std
xor
insl
jge
mov
mov
sbb
mov
and
icebp
cmp
jne
es
xor
out
pop
and
push
cmp
jecxz
dec
xchg
pop
std
mov
ds
add
repz
cmp
negl
lcall
add
jecxz
cmp
xchg
fs
mov
jnp
mov
xchg
clc
pop
lcall
loop
mov
pop
sub
setno
lea
or
pop
es
nop
inc
inc
mov
push
das
sahf
aaa
jg
cmp
push
dec
add
sbb
mov
movl
fcompl
inc
sub
sub
test
test
outsb
lds
mov
inc
or
xchg
int
jp
fcmovnbe
das
dec
pop
mov
das
cmp
leave
xchg
pop
adc
in
test
jo
pop
push
and
mov
and
jle
or
and
mov
jns
jmp
loop
mov
xchg
fwait
cli
mov
movsb
pop
or
fsubp
sbb
sbb
inc
mov
mov
bswap
popf
xor
inc
mov
adc
xor
jmp
pushf
sbb
lret
inc
xor
push
daa
sti
aas
adc
mov
lret
cmc
outsb
mov
shlb
push
xchg
mov
dec
lret
int
mov
or
mov
enter
pop
sub
repnz
pop
andl
movsl
mov
repnz
in
loopne
inc
add
out
sti
cli
mov
adc
sarl
outsl
popf
lret
call
inc
sbb
jle
adc
push
iret
cmp
movsb
sub
mov
fcoms
lods
out
es
outsl
mov
test
inc
lods
popf
jl
shrb
test
out
mov
xchg
sub
push
add
lods
js
imul
inc
mov
popf
mov
cmp
add
jle
sbb
add
cmp
jno
popf
loop
pop
aam
fistl
and
xor
mov
and
and
lret
shll
je
sub
mov
or
dec
push
xchg
call
xrelease
cmpsl
mov
add
push
inc
push
call
popf
out
lahf
shlb
xor
xchg
mov
pop
ficomps
xlat
mov
mov
lock
add
adcb
loope
sbb
push
or
mov
scas
jl
cmpsb
imul
pop
cmp
inc
mov
xchg
movsl
push
inc
mov
sbbb
mov
sti
cmpsb
adc
loop
push
pop
sub
mov
cmp
outsl
add
xchg
stos
nop
sti
insl
sub
mov
jno
ja
cmp
and
aas
hlt
dec
lahf
ret
out
shl
mov
push
pop
mov
ja
mov
pusha
mov
dec
sub
call
sbb
popf
lret
jg
or
pop
jp
push
and
imul
fwait
lds
into
mov
push
pop
int3
or
insl
lods
jge
jno
pop
push
movsl
jmp
push
ret
sbb
pop
leave
sbb
mov
push
xchg
call
bound
lret
and
in
rcrb
sbb
loope
pop
sbb
aas
jb
mov
lods
popa
xchg
add
cmp
std
orl
ret
xchg
rol
int3
push
sbb
mov
repnz
incb
xchg
inc
das
xor
nop
xor
pusha
lods
pop
pop
jecxz
mov
dec
mov
sbb
dec
push
je
int3
jae
lods
push
imul
hlt
in
mov
cmpsb
mov
loop
loope
jb
push
lret
xor
push
mov
sub
adc
insl
mov
fs
or
mov
push
pop
cmpsb
push
xchg
hlt
decb
mov
pop
adc
dec
in
loop
and
insl
and
xchg
add
cld
adc
cmp
lcall
sub
jne
imull
sub
xchg
mov
aad
mov
push
pop
jle
repnz
mov
add
and
xchg
cwtl
inc
decl
incb
lea
dec
cmp
xor
mov
inc
lret
adc
cmp
in
mov
cmp
stc
xor
pop
sbb
add
xor
pop
mov
cmpb
fimuls
aam
test
jo
out
lret
pop
mov
jp
dec
xchg
mov
outsb
add
int3
cs
rcr
pop
pop
scas
cmpsl
stos
call
push
mov
pop
inc
xlat
fs
cmp
xor
pop
movzbl
pop
idivl
sub
sbb
call
and
js
sub
in
mov
mov
scas
jecxz
inc
js
xchg
roll
ficomps
push
jns
mov
xor
cmp
popa
cltd
dec
mov
sbb
jmp
cmp
inc
shll
fstp
cmpb
and
hlt
out
cmpsb
mov
ljmp
lret
dec
inc
xchg
inc
sbb
pop
sub
inc
inc
xchg
pop
and
stc
xor
push
mov
mov
daa
enter
inc
mov
enter
pop
pop
push
cwtl
out
sti
movsb
and
jb
mov
sarl
cltd
or
jbe
leave
lret
sbb
push
xchg
xor
xchg
inc
pusha
std
jae
dec
lds
mulps
jp
rep
pop
pop
cmpsl
or
xchg
lcall
jnp
arpl
shl
mov
jno
cwtl
sub
sti
jbe
or
pop
cmp
and
sub
aaa
and
or
pop
inc
pusha
mov
insb
sti
xlat
sub
push
ss
sub
out
repz
push
add
in
or
out
adc
addr16
pop
ss
sub
xor
or
sbb
sbb
icebp
shll
into
jb
dec
jl
push
lret
jns
or
les
popa
gs
sbb
stos
insb
xchg
dec
cmp
ds
les
and
sbb
repnz
push
les
inc
mov
xchg
xchg
push
jp
repz
jp
jns
dec
aas
or
mov
cmpsb
cwtl
xor
shl
testl
push
lret
mov
mov
push
fidivl
cli
pushf
icebp
ret
in
add
xchg
adc
dec
cmc
jbe
push
sub
pop
xchg
insb
les
lret
push
pop
insb
int
test
add
or
loopne
push
pop
sbb
push
cltd
pop
sti
fisubs
rcrb
iret
ds
push
jle
lahf
inc
rclb
loope
js
imul
pop
cwtl
xchg
xchg
in
ret
cwtl
xlat
sbb
inc
xchg
mov
scas
jnp
out
pop
mov
and
mov
xor
out
xor
stos
mov
popa
popf
call
adc
push
ds
cli
pop
outsl
fildl
sarb
mov
int
add
jne
incl
cmp
cmp
push
jnp
adc
std
shlb
outsb
out
xor
daa
inc
cmp
add
popf
imul
cltd
mov
rcll
cmpsl
mov
repnz
cmp
mov
jl
loopne
cltd
sbb
test
mov
jp
aas
xor
invd
pop
inc
mov
xor
addb
sbb
stc
insl
insl
dec
arpl
aaa
jg
mov
or
insl
mov
scas
cmp
stos
jbe
mov
jmp
fstl
jmp
js
adc
pushf
mov
push
sbb
rorl
lods
lock
mov
fwait
cmpb
data16
lret
dec
pushf
jge
push
add
mov
dec
dec
rcr
cmp
mov
pop
adc
daa
cs
les
movsl
adc
pop
xchg
fsubrl
dec
xor
adc
movsl
dec
das
jbe
int3
in
faddp
lahf
sbb
daa
adcb
andb
jno
adc
mov
mov
in
addl
cmp
sbb
shlb
mov
dec
and
cmp
and
mov
mov
push
mov
mov
sahf
xor
enter
mov
insl
sub
add
shlb
scas
das
dec
and
pop
jne
dec
push
xor
mov
adc
xchg
mov
dec
repnz
sub
shrl
dec
inc
sub
je
std
mov
sbb
loopne
out
pop
inc
outsb
icebp
pushf
or
jge
inc
sub
aad
mov
cmp
adc
call
xchg
lds
arpl
adc
add
lret
fisubrs
mov
adc
lea
cmp
dec
and
dec
pop
loope
and
dec
jp
fbld
pop
mov
mov
cmc
adc
and
repz
push
pmuludq
shr
jbe
stos
leave
test
mov
enter
push
int3
jbe
xor
stos
pop
popf
andl
sbb
inc
jne
test
movsb
bound
xchg
lea
fidivrl
jmp
ljmp
jge
add
cmpsl
hlt
lock
jle
push
mov
into
mov
push
cltd
jp
aaa
jns
xor
into
int
or
lock
adc
mov
cwtl
mov
or
push
lahf
jmp
imul
push
out
cmc
imul
and
sub
inc
add
mov
jb
setg
mov
sub
out
mov
cs
nop
test
std
subl
lock
lock
inc
ds
incl
scas
push
xor
test
pushf
pop
orl
mov
insb
pop
push
fcmovbe
xchg
sbbl
sub
ss
gs
cmp
jg
cmp
aas
iret
dec
sub
lea
mov
fucomp
dec
leave
outsb
int
xchg
out
inc
js
addr16
sbb
lea
cmp
popf
pushf
or
imul
ret
push
rorl
mov
loope
sub
aas
pop
or
sbb
jmp
and
dec
popf
in
fldcw
or
lret
dec
mov
cmp
xchg
push
sbb
cmp
adc
nop
std
stos
sahf
mov
iret
insl
jb
mov
loop
fimull
addr16
loopne
adc
pop
jp
adcb
push
adc
inc
pop
add
dec
mov
dec
sub
fistl
push
add
roll
mov
sbb
fstpt
test
mov
adc
cmpsl
dec
dec
or
sub
lret
ret
and
mov
push
inc
jg
mov
aas
push
cltd
mov
mov
int3
cmp
ret
aaa
pop
mov
jg
movsl
xchg
sub
shr
and
fnstsw
les
jb
push
into
pop
subb
in
in
mov
pop
lret
xchg
pop
jge
pop
push
jmp
push
icebp
inc
nop
cmp
insb
daa
mov
loope
out
or
and
sub
dec
dec
je
gs
mov
jne
and
cmp
adc
mov
test
mov
jp
jg
cmpb
adc
or
add
clc
cmpsl
lcall
mov
jp
lret
rcl
js
cmp
mov
push
test
pop
ja
inc
popl
sbb
xor
push
hlt
pushf
jnp
fdivl
push
push
inc
popa
xchg
sti
pop
adc
lods
ret
stc
bound
mov
xor
dec
push
loopne
into
inc
inc
subl
and
mov
and
mov
pop
xor
xchg
mov
sbb
aaa
or
aas
or
loopne
mov
addb
dec
popf
jae
and
mov
inc
and
cld
jbe
push
mov
repnz
adc
and
cmpsb
dec
cmc
mov
arpl
das
out
mov
pop
jmp
ds
pop
push
ljmp
xchg
mov
js
aaa
inc
fs
add
ffree
jb
and
fcmovnb
imulb
push
mov
sbb
outsb
xchg
mov
jae
cmp
pop
xorl
and
fsubrs
mov
adc
sub
push
fimuls
das
pop
out
stc
jg
es
pushf
or
hlt
lcall
add
inc
adc
xor
and
dec
aam
sub
cmc
pop
or
cltd
or
push
pop
adc
movsl
in
xor
cmp
out
ficomps
shlb
cmp
ss
xchg
test
jo
lea
jp
negl
cmp
mov
add
mov
mov
test
loopne
repz
jbe
test
cmp
shl
in
int
sbb
outsl
cmp
stc
arpl
cmp
pop
push
jp
ds
mov
shrl
lods
mov
arpl
mov
and
roll
push
sbb
adc
les
pop
and
jb
cwtl
fxch
pop
inc
push
shll
cs
mov
fwait
dec
sbb
push
out
das
fcmove
ds
mov
ret
xor
daa
pop
jb,pt
popf
inc
insb
push
or
and
popf
fimuls
popf
ret
xchg
test
mov
stc
jne
sub
in
stos
xchg
mov
mov
xchg
in
std
jle
jmp
out
pop
inc
cs
xchg
xchg
jecxz
sbb
ljmp
or
mov
xchg
out
sahf
movsb
cmp
loopne
clc
and
es
hlt
aas
lahf
clc
jge
mov
xchg
or
sbb
mov
into
jb
dec
decl
jg
mov
jp
in
out
pop
sbb
push
mov
mov
jg
ja
movsl
xchg
xchg
out
mov
out
es
ret
jae
mov
adc
sub
cmpsl
push
xchg
dec
add
push
mov
xchg
es
test
fs
aad
push
stc
ja
ljmp
sbb
fsubrp
adc
push
mov
or
and
sbb
push
push
push
mov
je
or
mov
std
cmpb
call
cmp
sahf
mov
int3
pop
lcall
sub
or
adc
arpl
in
sub
dec
rcr
dec
aam
mov
mov
scas
add
arpl
or
cli
or
test
cmp
jmp
push
mov
cli
add
sbb
and
mov
add
push
push
js
add
rcr
cmc
mov
xchg
push
and
mov
ljmp
mov
dec
shlb
fstps
nop/reserved
cmp
sti
bound
mov
enter
sti
aad
popf
push
hlt
data16
insl
stos
clc
add
sarl
mov
add
test
cld
ss
shlb
jnp
fwait
shlb
mov
add
jmp
pop
roll
sub
sbb
push
add
lea
call
adcl
shll
shr
in
jecxz
mov
add
add
out
jno
lods
sub
mov
mov
inc
adc
rcrl
insb
and
xor
inc
xchg
or
mov
in
pop
mov
ds
and
push
xor
dec
mov
jp
in
ja
xchg
outsl
push
dec
xchg
adc
cld
pop
scas
lahf
dec
jns
lock
out
mov
adc
pop
imul
stos
in
mov
xor
jle
ret
pop
aas
or
test
adc
orb
sub
mov
stos
cmp
flds
sub
jge
dec
sub
arpl
add
cmc
test
and
rcrb
or
mov
sub
push
adc
fcmovu
dec
mov
nop
and
stos
fsubl
xor
mov
push
inc
and
sbb
adc
test
inc
insl
scas
adc
xchg
movsl
xchg
push
das
insl
bound
in
or
fdivs
jns
xchg
cli
inc
mov
xchg
std
loop
hlt
mov
cmpsl
or
addb
push
cltd
clc
divb
loop
xlat
sub
mov
mov
shl
int
sub
inc
mov
cmp
mov
push
xchg
les
or
fcompl
popf
jecxz
sub
lods
cwtl
popa
xchg
int
jns
push
lcall
insl
fsubrl
subb
jns
fisubrs
adc
pop
aaa
js
andb
stos
mov
bound
adc
insb
loope
mov
xor
test
shll
in
das
and
fstpt
adc
les
mov
std
dec
mov
addr16
test
shlb
gs
aaa
add
or
push
fstps
sbb
add
cmc
push
push
sbb
inc
jno
push
sub
push
dec
out
int3
inc
roll
pusha
and
xor
es
fs
roll
das
outsl
lods
gs
mov
dec
int3
jne
mov
cmp
sub
in
push
cmpsb
push
adc
xchg
sub
lock
inc
or
cmp
sub
sub
mov
ret
pop
adc
add
and
lahf
inc
lock
push
cld
mov
fcoms
xlat
shrl
inc
jecxz
jne
clc
pop
inc
xchg
adc
pop
jecxz
ja
int
pop
out
add
outsl
imul
xor
xlat
dec
std
jp
push
out
movsb
mov
cmp
dec
cmpsb
mov
adc
jle
scas
jle
jmp
xchg
mov
test
call
ljmp
insl
testl
and
jbe
shr
movsl
push
loope
mov
adcl
jno
sub
add
xchg
cmc
mov
imull
jns
vmulsd
incl
loopne
stc
mov
sahf
lds
and
popa
and
sbb
clc
iret
popf
inc
rolb
movsb
mov
mov
jnp
and
pop
push
jo
cmc
dec
jno
enter
jbe
pop
movsl
lods
inc
int
mov
loopne
or
aam
int
pop
mov
outsb
loopne
insl
movsb
div
inc
xchg
stc
aas
or
pop
mov
hlt
pop
and
pop
iret
lea
pop
adc
int
pop
roll
inc
mov
aas
jno
add
xor
imul
push
xchg
mov
insl
imul
or
or
push
mov
movsb
mov
imul
out
test
push
jb
sahf
lea
cltd
cltd
adc
gs
out
mov
frstor
mov
xchg
in
cmc
xchg
dec
jae
mov
fs
push
subl
fs
dec
test
shlb
icebp
call
or
loopne
pop
xchg
repnz
add
movsb
dec
xor
mov
inc
pop
jp
pop
int
imulb
cmpsl
js
mov
add
sub
xchg
mov
push
arpl
nop
inc
inc
or
lahf
xor
mov
mov
xlat
xlat
add
inc
jl
js
and
outsb
sahf
mov
or
lods
ljmp
pusha
cmp
inc
jo
push
je
mov
xchg
scas
daa
ss
push
sbb
sti
fsubrl
dec
ds
ds
pushf
cli
pop
inc
push
cmc
jbe
mov
addr16
in
aad
jns
int
jecxz
pop
jbe
sub
fs
mov
fsubs
repnz
sbb
mov
rcll
bound
pop
mov
jp
jno
dec
roll
pop
daa
imul
sub
jle
data16
arpl
out
adc
dec
pop
cmp
mov
add
push
ficomps
pop
call
insb
inc
mov
xchg
cltd
lcall
fcmovnbe
and
out
out
cmp
pop
jmp
rcrb
push
push
or
xor
add
sbbb
add
outsl
push
push
xor
iret
cmpsb
jecxz
lds
ret
push
push
xchg
ret
rorb
xchg
sub
xor
arpl
lretw
add
cmp
std
mov
push
sub
xchg
jnp
mov
add
xor
mov
mov
int3
dec
xorb
fnstcw
lds
fwait
xor
push
pushf
mov
imul
rolb
lret
fs
imul
push
shl
push
fistpll
aaa
cwtl
test
and
scas
addr16
add
in
jp
cltd
test
addr16
shrl
jno
cmp
call
xlat
cvtpi2ps
jne
inc
xor
push
int3
push
cmc
test
out
movsb
insb
shr
or
sahf
shrb
aaa
into
arpl
fs
aaa
jnp
inc
add
dec
outsb
cmp
mov
mull
rclb
adc
cmp
cmpsl
adc
adc
pop
arpl
jp
in
xor
test
cmpsl
enter
add
dec
pop
pop
pop
scas
jl
arpl
subl
pop
mov
xor
jmp
out
jo
push
adc
push
dec
es
sbb
es
dec
cmp
ss
or
hlt
test
jmp
add
or
add
stos
mov
adc
push
push
cmp
push
sub
fimull
mov
add
rorl
dec
push
push
rcl
mov
call
data16
fwait
cs
popa
xor
pop
sahf
in
dec
inc
and
je
sub
jecxz
push
es
sbb
int
mov
ret
lahf
dec
leave
and
dec
pop
mov
inc
jne
mov
nop
sti
jne
sub
in
ret
rol
xchg
pop
cld
adcb
addr16
repz
mov
aas
sub
stc
adc
sub
ljmp
daa
dec
jne
jmp
sub
stos
jo
aam
fnstsw
xchg
ret
int3
xor
jne
call
shl
mov
in
repz
movsl
adcl
cmp
xor
pushf
xor
or
fs
sti
scas
cmp
mov
mov
xchg
jp
dec
insl
mov
mov
ds
push
pop
xlat
sbb
jp
inc
cmc
cmp
jle
fwait
dec
mov
mov
stos
jecxz
pop
leave
loope
test
out
cmp
add
mov
movsl
add
arpl
ds
pop
pop
das
or
inc
dec
outsb
add
mov
inc
inc
xchg
inc
cmp
in
jo
pushf
jb
ljmp
jb
aas
sbb
or
hlt
dec
ja
scas
test
jae
mov
sbb
cmp
out
cld
aaa
xchg
das
fildll
imul
pop
loope
mov
cmp
je
es
sbb
or
test
adc
iret
outsb
fwait
xor
and
add
pop
add
xchg
push
rcr
add
jmp
push
mov
xorl
lret
xlat
xchg
jecxz
pop
and
sbb
ljmp
jae
scas
scas
shl
pop
ljmp
scas
call
or
jb
data16
subl
fisubl
and
mov
inc
or
add
jl
cmpsl
and
inc
fcompl
hlt
sub
cmp
shll
cmpb
pop
mov
in
gs
scas
inc
cltd
int
xor
mov
lods
dec
hlt
aas
mov
sbbl
sahf
iret
sbb
shld
sbb
movsl
push
ret
pop
dec
and
js
adc
jno
mov
push
push
push
movsl
shll
pop
pop
jmp
cltd
mov
je
mov
pop
dec
inc
sub
add
out
loopne
xor
adc
inc
and
mov
jbe
inc
adc
out
pop
pop
xchg
sbb
cmpsb
lea
js
jns
cli
fadd
jno
dec
or
es
push
push
js
out
sbb
pusha
pop
in
cmp
int3
mov
enter
dec
imul
fcompl
lret
sbb
push
stos
inc
pushf
pop
push
cmp
xor
and
or
loope
xchg
test
mov
jnp
cmc
fs
dec
mov
or
testb
push
out
and
xlat
adc
dec
popa
xchg
gs
mov
sti
ficoml
mov
pop
mov
imul
push
pop
xlat
adc
push
imul
pushf
and
scas
mov
in
subl
in
mov
leave
xchg
push
jmp
stos
sarb
sbb
out
sbb
in
or
mov
sbb
jecxz
outsl
dec
push
ja
std
into
int3
mov
loopne
ljmp
mov
and
jnp
popf
add
jo
stos
ja
lret
pop
icebp
mov
mov
hlt
scas
lock
jmp
mov
in
icebp
ljmp
cltd
fistl
sub
stc
jae
daa
jbe
sub
mov
pop
adc
mov
mov
data16
lods
sbb
pop
imul
in
not
dec
daa
cmc
aaa
leave
and
test
add
push
daa
xor
sqrtps
stos
xchg
es
or
inc
mov
lret
int
add
mov
pop
sbb
ret
movsb
inc
out
dec
stos
add
xlat
inc
inc
test
subb
sahf
loop
cld
add
.byte
sbb
add
adc
clc
sub
fnsave
js
cmc
inc
into
fwait
mov
roll
in
test
popa
or
push
ficomps
popf
fistpl
aad
iret
mov
repz
push
push
fildll
push
and
cs
bound
int
ret
push
addl
inc
mov
out
jge
ret
dec
hlt
sub
lods
cli
xchg
cmp
shll
repz
cmp
insl
sbb
aad
cmp
fidivrl
lea
inc
cmp
call
jg
push
pop
sub
xor
daa
cmp
sbb
test
jmp
pop
push
xchg
jp
xor
subl
imul
add
cmp
xchg
inc
hlt
dec
adc
mov
inc
or
jp
inc
ret
push
lods
push
imul
add
dec
jp
dec
nop
jbe
push
lods
adc
pop
das
cli
push
dec
aam
repnz
xor
pop
dec
inc
pusha
ljmp
cwtl
bound
sub
mov
jno
mov
inc
dec
shrb
sbb
in
push
mov
xchg
xchg
movsb
int
add
mov
pop
sub
fistl
xor
daa
cs
dec
sub
sbb
jmp
or
test
out
mov
adc
and
adc
repz
adc
jb
cmp
out
pop
inc
sbb
cmpsb
into
stc
push
cli
mov
sub
cli
lock
add
pop
mov
rol
imul
dec
pop
add
xchg
rolb
mov
test
dec
cld
test
in
dec
imul
and
cmc
out
test
xchg
cmp
add
pop
clc
adc
push
ret
mov
in
cmp
pushf
in
lods
mov
test
cmpsb
pop
xor
jl
data16
pop
loopne
ja
mov
cmp
mov
movsl
lret
mov
popl
push
stos
stos
mov
lcall
aaa
push
clc
cmp
pusha
add
mov
mov
test
dec
mov
outsb
int
mov
test
jl
and
or
aam
incl
imull
fdivs
xchg
push
adc
cmpsl
jne
jl
lods
mov
mov
int3
adc
std
mov
adc
hlt
jbe
jp
fs
test
lock
popa
aam
jbe
and
ret
movsb
sub
jp
mov
mov
pop
sbb
sub
adc
insl
cli
gs
test
and
dec
xchg
pusha
arpl
fwait
addb
pop
lcall
test
dec
add
insl
fs
clc
xor
ja
nop
adc
adc
xor
cmpsl
or
jbe
je
xor
xchg
pop
inc
or
loope
and
icebp
jae
xor
or
add
sbb
add
cmpsb
shrl
xor
out
in
lahf
daa
aam
clc
jnp
stos
imul
outsb
or
pop
cmc
xor
rcrl
xchg
pusha
and
jecxz
std
xchg
lods
popa
and
xchg
or
inc
pop
fwait
movsl
sbb
aas
fwait
mov
insb
imul
testl
je
or
xchg
std
sub
pusha
inc
push
or
jp
and
pushf
loop
xor
mov
icebp
pop
xchg
jns
shlb
negl
dec
out
mov
mov
or
xchg
pusha
in
out
fildl
loop
jecxz
shlw
clc
sahf
int
aas
cmpsl
xchg
rcrb
iret
out
jb
arpl
repz
fldenv
lea
mov
lret
mov
push
out
add
pop
lcall
xchg
add
and
cmp
mov
call
aaa
lds
dec
loope
jo
test
fbstp
lea
in
xchg
push
fisubl
adc
aas
pop
push
out
ds
inc
faddp
fs
lret
add
inc
mulps
pushf
sbb
mov
inc
xor
or
adc
xchg
jp
add
and
arpl
xchg
xor
in
rcrl
popa
je
xchg
adc
or
pop
cli
dec
xchg
xor
cmp
cwtl
movsl
lahf
out
cld
adc
xchg
xlat
loope
xor
inc
lea
js
adc
ret
push
cmc
rcr
or
mov
call
mov
lods
movsl
fisttpll
fsubs
loop
cmp
xor
or
push
rcll
pusha
xchg
sti
sbb
inc
xor
bound
ljmp
ja
and
pop
push
popf
jg
sbb
mov
sub
stos
pop
and
imul
lcall
mov
mov
jae
movsb
ja
push
mov
mov
bound
fdivr
int3
push
xor
lock
dec
aad
push
into
xor
sbb
sub
pushf
out
push
xchg
gs
test
adc
inc
icebp
repnz
inc
and
clc
fcoms
fwait
mov
lods
inc
pop
push
outsl
cli
icebp
sub
add
xchg
loope
adc
fimuls
das
in
hlt
outsb
push
pop
xchg
jo
mov
or
loopne
add
lcall
inc
mov
pop
aam
xchg
cmp
and
inc
mov
int3
xchg
outsb
cmove
ja
adcl
sub
lret
cmpsl
jbe
push
out
hlt
and
pop
in
adc
call
aaa
mov
and
mov
xchg
push
test
dec
mov
sub
push
sarb
mov
push
adc
fs
rcll
int3
lret
lock
mov
mov
push
lods
imulb
mov
push
sub
xchg
loop
arpl
dec
xor
cltd
enter
mov
cmp
in
pop
add
xor
push
or
cmc
adc
lcall
js
iret
push
inc
fcmove
xchg
rcll
push
cwtl
sbb
adc
mov
jns
mov
shrb
mov
imul
stos
movsb
pusha
shr
pop
icebp
mov
adc
xchg
lock
js
pop
pop
mov
dec
push
fistpll
shrb
mov
pusha
pop
fsubrs
aam
popa
xchg
loope
push
mov
cmc
aam
sahf
jnp
push
out
sbb
insb
xchg
nop
divl
or
inc
mov
push
test
js
pop
dec
adc
push
addl
mov
mov
test
and
xchg
int
push
arpl
push
xchg
movsb
adc
mov
mov
int3
xchg
sub
push
xchg
adc
sub
pop
pop
fistps
fdivrl
imul
add
push
lcall
lods
inc
sbb
fwait
outsl
stos
xchg
sub
adc
and
cmpsl
mov
in
out
jge
ret
lea
dec
testb
sti
fs
pusha
loop
rorb
aam
or
sahf
cmp
clc
adc
sahf
rcll
aam
icebp
les
js
cmp
sub
push
clc
ficoml
out
out
bswap
pop
inc
shlb
shlb
xchg
adc
xchg
cmp
aaa
push
inc
fstp
in
sbb
or
cltd
loopne
movsb
push
stc
jns
mov
push
jle
xchg
pop
ret
imul
jbe
repz
cld
into
fldenv
xor
lahf
stos
sub
sarb
jge
shll
sbb
mov
out
inc
jb
push
xlat
cmp
sbb
lds
jae
inc
add
cmc
frstor
xchg
idivl
dec
test
cmp
sub
sub
add
dec
cmpsb
movsl
dec
daa
aad
pop
test
ljmp
xchg
int3
sti
add
dec
insl
lahf
inc
adc
pop
mov
inc
lcall
mov
pop
mov
mov
and
int
sub
fiadds
imul
mov
dec
scas
sbbb
sbb
cmpsb
inc
mov
add
lcall
pop
insb
xchg
or
or
dec
insl
loopne
or
push
sahf
scas
adc
das
push
xchg
sti
sub
push
ss
mov
imul
fwait
jg
mov
stos
push
insb
daa
push
ret
mov
cmp
push
xor
and
mov
insl
xor
cmp
out
inc
mov
shl
imul
adc
gs
adc
push
mov
pop
jns
add
into
mov
sbb
fsubs
push
push
scas
lods
lock
mov
out
jae
repnz
push
jno
aaa
mov
movsl
gs
sahf
inc
sub
mulb
movsb
mov
scas
add
icebp
icebp
fsubrl
cmp
rcl
jmp
mov
insl
das
icebp
pcmpgtw
push
push
xor
and
pushf
test
incl
jp
mov
inc
int
je
rol
or
mov
imul
push
push
dec
mov
sub
out
mov
sub
movsl
nop
in
or
inc
sub
push
stc
sbb
mov
dec
cwtl
in
shll
test
lods
sarb
jo
test
mov
mov
push
jo
cli
and
mov
orb
sub
xchg
arpl
sti
push
mov
sub
push
xchg
lret
cld
jl
scas
int
rcr
cwtl
shl
inc
clc
xor
insb
jmp
aam
lcall
test
in
mov
mov
sub
ffreep
call
pushf
movsb
das
roll
bound
fisubrl
sbb
mov
adc
lds
push
xor
and
push
jnp
and
push
shlb
add
nop
xchg
mov
cli
lss
fcomps
add
sub
xor
loope
shll
cltd
cmp
fstps
fldcw
sbb
push
imul
cmpl
mov
add
popf
xchg
ds
and
pop
push
pop
add
lock
stc
lods
push
adc
or
mov
jne
fisubs
jecxz
data16
lea
push
mov
mov
xchg
out
bnd
mov
push
out
xchg
out
cmp
fbstp
xchg
fidivrs
inc
nop
push
insl
sahf
filds
cmpsb
jge
iret
addr16
push
mov
sub
mov
cmp
ljmp
xlat
adc
cmp
mov
and
add
daa
and
and
jne
mov
xchg
dec
test
push
pusha
sbb
pop
sub
in
loope
sbb
dec
data16
lods
movsb
push
repz
test
testl
call
stos
sar
and
rolb
cmp
rcrb
inc
inc
cwtl
cmpsb
xchg
add
push
cmpsl
mov
lret
inc
fwait
cmp
sahf
xlat
outsl
dec
xchg
dec
cli
inc
mov
dec
insb
mov
data16
divb
ret
or
adc
imul
icebp
sub
sahf
pop
movsl
cmp
lahf
les
sarb
adc
sarw
xchg
enter
push
inc
lret
sbb
inc
push
push
cmp
fdivrs
iret
push
mov
out
pop
or
cmpsb
lds
insb
cltd
xlat
inc
push
adc
pop
lcall
adc
scas
dec
inc
xchg
adc
sub
out
push
add
test
shlb
fldt
outsb
cwtl
push
mov
xchg
shll
loope
dec
cli
stos
mov
pop
into
lds
jb
push
xchg
fisubl
inc
pop
mov
dec
rcrl
scas
mov
scas
shrl
mov
mov
stos
insb
popf
aad
insb
inc
shlb
inc
std
and
jp
mov
gs
lods
mov
test
lods
movsl
mov
dec
stos
add
mov
mov
bound
shll
adc
jmp
or
and
xchg
mov
push
lds
add
mov
and
mov
pop
mov
cld
shrl
clc
hlt
aaa
dec
rolb
inc
xchg
hlt
aaa
dec
jmp
orb
sbbb
popa
jmp
jns
dec
pop
dec
and
dec
pop
add
insl
dec
stc
or
cwtl
je
adc
xchg
and
pushf
sub
cmc
push
lahf
cld
dec
xchg
sbb
push
sub
push
mov
pop
xor
fistpll
mov
mov
cs
fisubrs
shll
sub
sbb
gs
dec
mov
mov
repz
fisubrs
mov
mov
inc
mov
inc
jecxz
xchg
es
fcomip
pop
cltd
push
jno
mov
cmp
test
mov
mov
mov
mov
out
jae
addr16
mov
pop
test
movsl
pop
mov
xchg
or
out
push
popa
xchg
aad
mov
fdivl
xor
lods
cmp
mov
adc
push
punpckhdq
pop
arpl
sub
ret
add
sbb
movsl
test
pop
lock
adc
mov
pushf
and
stos
or
into
ret
push
mov
lea
mov
pop
sbb
fwait
popf
out
mov
pop
and
stos
or
sub
pushf
push
jmp
cmpsl
dec
ret
mov
call
cltd
or
jo
in
or
jle
and
scas
fsubl
test
inc
lcall
les
mov
testb
sub
add
sub
fnstenv
pop
xchg
out
jp
jae
mov
fsubrs
sub
sbb
xchg
inc
fimuls
imul
cltd
enter
out
xlat
and
jp
sub
addb
repz
shrb
add
inc
ret
fldcw
in
pusha
jae
mov
adc
cmpsb
stc
aaa
aad
fstp
in
jo
pusha
mov
mov
pop
mov
dec
jp
adc
mov
sbb
lret
inc
es
outsb
pop
mov
xchg
mov
andl
mov
lret
push
mov
or
mov
cmc
adc
out
push
fstl
adc
mov
pop
inc
pop
mov
imul
cmp
shll
lock
test
repz
pop
insl
adc
push
lret
sbb
mov
cmp
scas
pop
fwait
cmp
mov
imul
inc
sub
bound
xor
ds
or
add
into
outsb
cmp
add
jne
fldl
sub
adc
add
pop
insb
jl
jmp
xchg
sbb
or
sbb
mov
sub
mov
scas
lret
lret
inc
and
sub
addr16
or
sti
and
in
loop
sbb
in
js
pusha
sti
out
ficomps
and
iret
fildl
pop
lock
lock
mov
mov
xor
push
std
and
jb
add
sbb
ret
push
test
jo
pushf
xor
xchg
fst
pusha
stc
and
movsl
jno
mov
push
aaa
jne
jae
adc
in
clc
adc
notb
push
mov
test
insb
and
fidivrl
fcoml
fimuls
stc
lret
out
ds
mov
jbe
jge
jbe
add
sub
mov
in
sbb
ror
cmpsb
sbb
xor
sbb
pushf
mov
cmp
test
mov
hlt
outsb
cld
xor
pusha
xor
jecxz
jae
mov
dec
mov
repnz
inc
mov
aam
xabort
subl
popa
jbe
xor
imul
stos
or
mov
outsb
sub
and
inc
jae
jae
xchg
push
and
lea
or
xlat
sbb
sub
xlat
pop
int3
lods
mov
push
test
jg
lret
push
out
inc
div
push
rclb
push
add
pusha
les
xor
cmc
ficoms
mov
dec
or
xor
or
inc
add
aad
addr16
mov
out
pop
xchg
or
dec
rcrl
int
stc
sarb
mov
js
leave
ror
add
rcr
mov
cli
lds
ljmp
mov
mov
scas
and
ror
cmp
pop
nop
sub
test
adc
push
jne
or
jns
mov
fistpl
xor
loop
jge
cmp
cld
movb
sbb
mov
adc
adc
rolb
jo
lret
xor
aaa
mov
aaa
cmp
add
std
pop
xchg
adc
shll
negl
adc
inc
push
daa
mov
xorl
mov
inc
jle
jne
aaa
inc
adc
xchg
jae
in
outsb
jb
adcl
push
frstor
fcompl
xor
loopne
dec
mov
sub
mov
outsl
mov
sti
adc
lods
mov
and
xchg
mov
mov
push
jmp
cmp
jmp
adc
inc
mov
mov
xor
push
cwtl
pop
inc
ja
adc
jae
xor
out
push
mov
xor
push
je
aad
mov
out
popa
and
mov
xor
popa
fdivrs
hlt
dec
jecxz
adc
or
ljmp
lahf
sub
bound
inc
es
aam
cltd
bnd
mov
cmp
cmp
les
iret
andl
sub
pusha
dec
push
gs
out
scas
jns
jo
dec
pop
rcr
push
loope
push
mov
pop
pusha
mov
sbb
push
enter
imul
bnd
mov
shlb
adc
ja
ss
fwait
cmp
pop
insb
loop
xor
outsl
insb
pop
lock
in
call
ret
popf
mov
add
es
xchg
mov
lcall
incl
pusha
fdivs
insl
imul
or
jb
sti
pusha
test
and
into
test
or
pop
inc
movsl
bound
sbb
sbb
pop
cmc
ja
jnp
aad
stc
sub
notb
loope
les
cmpsb
cmp
sbb
xlat
jb
xchg
call
sub
js
test
fstps
test
cmp
and
int3
pop
insl
jmp
xchg
sbb
test
mov
sub
lret
xchg
and
mov
popf
push
std
mov
les
les
mov
fildll
fistl
fsubs
int
inc
jae
lea
adc
mov
loopne
add
mov
testl
pushl
xor
dec
mov
loope
xchg
ret
testb
and
adc
fbstp
jg
stos
sub
xor
in
cmp
rcll
dec
cli
pop
lods
cmp
test
xchg
aad
xlat
mov
jbe
popf
test
xor
sahf
mov
cmp
icebp
or
cmp
into
daa
loope
insl
popa
lock
cmpl
aam
movzwl
fbld
lods
mov
call
cmpsb
fildll
imul
loope
daa
in
shlb
jg
push
lcall
jecxz
jl
adc
cmpsb
jl
xchg
push
jp
loop
cltd
push
enter
sahf
shrl
outsl
out
inc
sbb
and
loope
push
mov
xchg
dec
inc
mov
incb
rcrb
and
lock
and
fidivrl
pop
mov
sar
repz
pushf
cmpsl
arpl
cld
sub
test
cwtl
mov
xchg
mov
or
movsb
movsb
sbb
iret
outsl
mov
pop
fucomi
sbb
pushf
sub
sarb
jle
rolb
dec
xchg
jg
xor
rcrb
mov
pop
adc
xchg
dec
cwtl
jbe
xchg
adc
ret
push
fadd
pop
loope
cld
pop
mov
and
ffree
xor
dec
mov
ss
lret
push
pop
dec
push
and
mov
sbb
sbb
ljmp
cs
sbb
addr16
push
xchg
mov
imul
sub
repnz
mov
out
pusha
jmp
jo
hlt
lods
jns
inc
adc
xchg
inc
movsl
shll
lea
cmp
sub
aas
add
imul
jo
adc
and
or
push
ud1
mov
mov
mov
adc
xchg
inc
enter
dec
push
ret
pop
data16
cmp
push
insb
pop
imul
lds
dec
movsl
push
movsl
ljmp
loopne
in
or
addr16
addl
icebp
sbb
pop
popa
inc
lods
or
insb
aas
movsb
sti
jp
jl
test
test
in
jo
cli
call
xor
or
stos
mov
aaa
inc
xchg
je
loope
mov
inc
test
arpl
sbb
jae
pusha
push
movsl
mov
test
jb
dec
dec
add
sub
int3
iret
push
push
sbb
rolb
push
sub
addr16
xchg
mov
and
lods
cwtl
out
adc
sub
xor
mov
ljmp
mov
jae
adcb
sbb
sbb
and
out
xor
or
dec
aas
mov
test
cmpsb
je
jmp
lock
cmp
xchg
fdivrp
lds
add
sahf
fsubp
addr16
popa
mov
add
and
mov
and
add
popa
inc
lret
stos
repnz
popa
dec
jb
or
xorl
mov
fs
xor
mov
ror
or
adc
xchg
dec
dec
addr16
sub
imulb
cmp
loop
out
sarl
out
gs
cltd
into
jb
fiadds
movsb
sbb
mov
sub
mov
add
sbb
loop
hlt
pushf
or
faddl
daa
xlat
mov
mov
cmp
mov
mov
push
and
inc
or
dec
arpl
mov
jl
mov
xchg
mul
jge
stos
inc
in
or
sub
test
inc
idivb
xchg
and
sti
mov
mov
into
insb
mov
xor
out
insb
adc
fcoml
ja
cmp
cmp
xchg
shlb
fwait
rolb
in
shrl
loope
sbb
movsb
adc
subl
jo
cmp
fsubs
loop
fs
popa
lods
and
lret
push
pop
je
mov
push
inc
pop
icebp
dec
in
jmp
in
out
jge
icebp
data16
adc
cmp
adc
popf
or
out
mov
adc
mov
pop
push
xchg
mov
fstps
aam
sbb
je
nop
sbb
ds
jp
mov
pop
clc
push
fwait
repz
pop
jns
loopne
sarl
xchg
sar
or
cmc
mov
dec
lods
shl
lcall
lods
sbb
insb
cmp
pop
pop
fwait
dec
add
inc
push
pop
add
sbbl
ss
add
ret
jecxz
notl
xchg
loopne
stos
and
and
xchg
sub
add
test
pop
adc
adc
xchg
lcall
pop
sarb
inc
sub
xor
or
call
and
mov
ret
mov
lock
xor
repz
and
ljmp
out
or
lcall
xchg
idivb
mov
stos
and
pop
cwtl
fdivp
push
cltd
loopne
hlt
add
leave
xchg
cmp
in
cmp
adc
repz
lcall
lret
add
out
lock
push
adc
cmp
add
jge
cmp
lret
fnstenv
int
xor
cmp
int3
sub
mov
sbb
loop
sub
outsb
jge
into
push
push
test
orl
clc
repz
jne
push
mov
xchg
inc
dec
pusha
ds
pop
scas
mov
mov
orb
pusha
cmp
jmp
xchg
lahf
push
cmpsl
pop
pop
xchg
and
sbb
in
out
in
sbb
mov
out
dec
mov
push
jl
add
std
mov
adc
in
pop
mov
mov
pop
sahf
movsb
mov
pop
dec
xor
adc
add
iret
out
std
outsl
in
inc
or
ret
jg
mov
mov
sub
addr16
cmpsb
int
ljmp
repnz
loope
mov
pop
out
lret
ret
jecxz
inc
mov
pop
sub
lods
mov
xchg
sub
pop
outsl
mov
ljmp
add
mov
mov
mov
xor
fdivrl
and
jmp
cli
push
push
jne
pop
ret
scas
xor
out
mov
mov
and
cmc
mov
fdivs
sarl
int
adc
add
xchg
jecxz
mov
std
int3
jno
mov
int3
sub
pop
mov
mov
in
je
push
shrl
jle
xchg
fdivl
sbb
leave
fsubr
scas
movsb
call
testb
mov
push
ret
sub
dec
xchg
call
icebp
rcll
mov
pop
push
add
cld
mov
imul
mov
loope
loope
leave
hlt
dec
cmpsl
jge
dec
call
cwtl
xor
jle
stos
jne
cmc
dec
add
addr16
jge
addr16
aas
call
and
push
lahf
pop
ja
fldt
js
and
mov
fisttpl
mov
push
mov
imul
sub
loop
add
adc
gs
xchg
cmpsl
data16
add
push
inc
and
mov
add
rdtsc
adc
lret
stc
pop
popf
mov
adc
loope
dec
mov
gs
adc
sub
mov
xor
pop
xor
ljmp
insl
ret
or
pop
out
mov
xchg
dec
data16
mov
or
hlt
test
xchg
cld
aaa
adc
pop
out
or
mov
inc
adc
cmp
pop
cli
jmp
sub
fdivs
push
cmp
sub
dec
clc
adc
icebp
cmp
fxch
lahf
jle
addb
int
psubsw
dec
mov
test
bound
xchg
adc
ret
data16
xchg
popf
popf
in
mov
mov
mov
ss
mov
int
movsl
pop
inc
cmp
lods
popa
push
push
jno
pop
push
jmp
out
cli
fnstsw
sarl
fwait
aas
imul
fprem
adc
daa
aaa
mov
nop
lret
push
das
mov
xor
add
call
mulb
lods
pop
repnz
mov
jg
sbb
lock
cmp
pushl
xchg
inc
into
mov
inc
pop
mulb
mov
int3
push
js
stc
mov
push
cli
push
ja
and
or
jae
adc
lock
jno
mov
das
xchg
les
sbb
mov
test
adc
mov
cmp
iret
push
jge
pop
mov
lds
jo
fldcw
repz
mov
sub
imul
adc
xor
pop
xchg
and
xchg
dec
sub
cli
dec
or
sub
mov
cmp
lds
xor
fistpll
add
and
gs
xchg
fldt
jnp
and
mov
ficompl
popa
inc
out
pushf
jmp
movsl
clc
cmpl
idivl
adc
lret
shl
add
ffree
faddl
or
jne
in
cld
leave
ja
loope
sbb
roll
add
movsl
nop
cmp
insl
loope
in
jl
cld
pop
inc
jecxz
pop
mov
cmp
or
xlat
test
pop
mov
and
fisubrl
jnp
sbb
lcall
mov
scas
or
test
iret
and
xlat
imul
adc
push
cmp
popl
fcomip
mov
sbb
je
xor
push
icebp
pop
xchg
xor
pop
sub
ss
sub
jb
sbb
shlb
shlb
push
std
inc
mov
addr16
mov
cmp
lods
mov
aad
pop
push
push
and
inc
sub
mov
ror
jl
test
cli
movsb
jne
test
insb
mov
loope
mov
add
mov
rol
sbb
fwait
bound
mov
adc
sub
jg
jae
xor
and
pop
jg
int3
jl
jns
add
outsb
mov
sbb
gs
hlt
std
dec
mov
movsb
dec
mov
leave
pop
ret
mov
dec
movsb
fsubl
cs
push
stc
movsl
cmp
sub
sbb
in
dec
xchg
sub
inc
adc
xor
scas
insl
loop
repz
pop
mov
jne
or
jne
cmp
cmp
fmull
xchg
xchg
jnp
mov
add
push
int
push
fsubr
rcr
fimull
sub
xlat
test
testl
add
and
inc
insb
inc
push
out
mov
inc
lahf
gs
jne
pop
pop
in
aaa
nop
loope
xor
test
out
fcompl
add
lahf
popa
ja
mov
or
or
and
sahf
xchg
xor
jle
pop
in
mov
fcoml
xor
cmpsl
jno
cld
gs
fdecstp
ret
jo
inc
imul
dec
popf
ljmp
inc
lods
pop
sbb
push
dec
push
ret
push
pop
lds
ljmp
mov
and
dec
mov
xor
jb
ss
xchg
cmp
in
sbb
insl
xchg
nop
repnz
or
pop
xchg
xlat
hlt
out
ss
xchg
aad
xor
mov
sti
xlat
fistpl
pop
inc
xchg
adc
es
push
pop
loop
shlb
sbb
popf
mov
mov
lret
xchg
imul
scas
jae
pop
mov
mov
add
inc
xchg
in
mov
mov
shll
mov
ss
lods
aad
xlat
push
or
imul
mov
adcb
mov
mov
movsl
inc
xor
xor
rcrl
fisubrs
clc
adc
xor
xchg
adc
pop
lret
cltd
xchg
in
nop
push
in
lock
jp
xchg
or
dec
inc
imul
lret
ret
fwait
aas
sbb
dec
sub
loope
into
push
repz
das
loopne
xchg
add
in
lret
sub
fldenv
in
push
ss
imul
repz
imul
test
cltd
pop
stc
jns
jb
popf
pop
push
lods
adc
jbe
xchg
mov
roll
push
leave
cmc
ljmp
sbb
mov
or
adc
int
inc
enter
xor
lods
rorb
jmp
push
movsl
repz
mov
rorb
in
dec
xchg
mov
or
jmp
pop
aaa
mov
jmp
in
push
xor
pop
cmp
mov
cmp
cmp
cltd
addr16
mov
sbb
dec
adc
lods
fstps
lds
loop
mov
addb
dec
lret
subb
sub
rol
add
pop
mov
lahf
jl
mov
int3
aam
add
mov
bswap
mov
inc
sbb
mov
sahf
lahf
add
repz
sbb
out
lods
movsb
inc
jge
xlat
ret
jbe
and
mov
jbe
jg
popa
bound
lret
add
xchg
sbb
sub
cmp
add
sub
push
push
fsub
cmp
lea
into
rcl
pop
pop
dec
sub
add
sub
cmp
out
add
dec
push
jno
pop
out
push
test
pop
inc
mov
inc
stos
push
push
aad
lods
or
out
unpcklps
sub
jbe
lret
pop
ret
pop
lods
xchg
clc
popf
xchg
add
aaa
cwtl
fimuls
jb
mov
out
mov
cltd
jmp
loopne
and
maxps
shrl
cli
setge
hlt
mov
sbb
in
je
cmpsb
ror
inc
dec
andl
gs
mov
cmp
in
and
dec
push
cmc
jmp
outsb
sbb
mov
lahf
inc
dec
lret
loopne
in
nop
in
push
mov
pop
out
mov
aam
icebp
lea
xchg
daa
call
sti
insl
sarb
iret
jecxz
aaa
loopne
mov
mov
sub
loope
es
xor
cmp
mov
xchg
stc
rcll
inc
popa
mov
add
dec
lahf
xchg
mov
scas
test
aam
into
adc
faddp
cmpsl
and
push
mov
icebp
dec
dec
loopne
bound
push
xor
daa
aam
push
jns
xchg
adc
gs
add
je
repnz
out
nop
dec
jb
pop
jp
jmp
mov
mov
repz
repz
fisubs
cwtl
xlat
xor
outsb
sub
jle
add
jb
pop
sbb
ja
in
stos
addr16
arpl
mov
or
xor
add
xchg
lds
pop
xchg
add
pop
rcl
je
add
test
mov
jecxz
push
or
cmp
rorb
pop
mov
stc
mov
sub
pop
or
or
sbb
data16
pop
jl
mov
js
cmpsl
pop
pop
rcrb
or
sub
pop
insl
test
mov
mov
fmuls
popf
sbb
cmp
jb
enter
ljmp
js
roll
push
jle
aam
ud0
insl
stos
mov
or
and
jge
push
mov
mov
mov
lcall
int
pop
cmpl
jbe
mov
ret
mov
jbe
xchg
inc
cmpl
lahf
cs
mov
fstl
lret
mov
aam
stos
mov
out
cmc
and
push
out
scas
push
ficomps
into
ss
dec
jle
insb
out
or
push
jle
add
jbe
in
mov
cmc
mov
test
imul
dec
and
jnp
push
mov
xor
in
jbe
rcr
push
jns
int3
push
push
fwait
mov
adc
sbb
arpl
push
mov
pusha
adc
ret
movl
pushf
pusha
jmp
pusha
lcall
xor
aas
cltd
mov
sbb
mov
hlt
push
fistl
in
xchg
mov
push
dec
pop
or
imul
daa
mov
mov
test
fstps
ja
pushf
int3
mov
shlb
push
out
mov
adc
dec
mov
pop
sub
mov
fldt
jns
les
ret
repz
cmp
jns
jecxz
mov
insl
pop
mov
mov
icebp
les
mov
mov
fimull
les
mov
adc
jb
sbb
ja
add
sbb
hlt
fadds
outsl
rorl
loop
mov
stos
imulb
stos
mov
xor
ret
push
push
inc
jbe
pushf
mov
bound
cmc
mov
lea
push
pop
dec
fcompl
sbb
js
ds
sbb
aaa
or
inc
fwait
cltd
out
sti
fwait
xchg
fdivs
mov
push
mov
fstpl
xor
addr16
or
ds
xchg
imul
sbb
imulb
aaa
inc
mov
fs
add
dec
mov
dec
lds
sbb
aad
mov
and
cmp
mov
pop
jbe
jecxz
mov
mov
jmp
int
ljmp
je
repnz
mov
adc
cwtl
lret
stos
hlt
imul
popa
mov
shlb
test
pop
mov
jecxz
xchg
lock
xchg
loope
xchg
push
mov
out
lods
xchg
push
cmp
xchg
inc
loop
out
shrb
cmp
sbb
aam
repz
test
fcmovbe
fwait
mov
sbb
sbb
rolb
fidivrl
push
xchg
iret
push
and
add
or
ret
or
inc
mov
mov
gs
mov
pop
shll
xor
cmc
lcall
test
jns
or
add
pop
mov
mov
daa
jbe
dec
pop
int
sub
xchg
push
scas
push
mov
testb
les
rcrb
mov
sub
cmp
pop
stos
or
or
cmp
ds
mov
sti
sub
inc
cmp
xor
mov
pop
adc
jbe
addb
xchg
sbb
mov
ljmp
mov
mov
push
in
sub
dec
adc
aad
jno
cmpsl
cmp
rcll
push
mov
mov
adc
jno
xchg
mov
cmpsb
sbb
push
in
pop
sub
sarb
add
push
loope
jb
mov
dec
test
jp
scas
cmpsl
inc
inc
jns
repz
xchg
aas
mov
ja
cmp
xchg
fildl
inc
lret
inc
push
dec
adc
mov
bound
divb
adc
stc
adc
jecxz
xor
bound
and
in
subl
adc
repnz
loope
fimull
pop
ss
in
or
pop
cmp
jb
push
xchg
add
push
jg
push
and
inc
ljmp
add
push
scas
hlt
stos
mov
dec
inc
dec
fnstcw
out
push
insl
cmp
aas
iret
shlb
pop
jmp
sub
addl
fs
aam
daa
mov
aaa
jl
xchg
in
out
pusha
push
add
mov
mov
sti
dec
repnz
jo
and
aam
sbb
pushf
outsb
scas
cmpsb
jle
jl
push
aas
mov
xchg
outsl
imull
cmp
pop
test
dec
jmp
insl
inc
or
dec
sbb
aas
loop
popa
mov
lcall
sbb
mov
mov
rolb
mov
inc
popa
cmpsl
push
loope
adc
sbb
cwtl
cmp
push
and
push
and
fsubl
test
xor
in
adc
xchg
xorb
cmp
js
xchg
xchg
adc
xchg
dec
rol
mov
aam
mov
out
sbb
add
mov
test
cs
sbb
fsubrs
sub
outsl
not
xchg
test
mov
dec
shll
js
out
xor
mov
movsl
loopne
out
xchg
fwait
call
bts
test
mov
cs
fidivs
and
push
dec
xor
lds
imul
lods
outsb
leave
xchg
nop
sahf
pop
inc
add
push
popa
xchg
data16
and
inc
fsubrl
lock
adc
dec
jl
pop
out
ret
pop
imul
gs
in
cwtl
mov
mov
fdivrl
scas
testl
dec
je
movsl
int
aas
mov
hlt
mov
mov
pusha
loop
pop
pop
gs
mov
into
addb
sub
mov
pop
lods
rolb
push
daa
aad
imul
cmp
mov
lds
dec
adc
or
ret
stos
test
test
mov
xor
sbb
addr16
imul
add
hlt
cmp
and
jle
test
sbb
jns
imul
mov
insb
inc
stos
cmp
loop,pt
and
xchg
add
sub
int3
insl
add
rclb
and
test
jo
test
hlt
xchg
dec
add
or
fdivrl
lea
jp
jbe
sarl
mov
rcl
leave
dec
pop
or
push
out
or
pop
push
sub
js
add
pop
pusha
int
test
mov
push
sarl
std
movb
dec
rolb
jge,pt
stos
insl
ljmp
add
push
std
pop
push
nop
mov
lods
sbb
adc
add
pop
in
mov
push
filds
popa
cmpsl
mov
jns
outsb
divl
xor
add
sub
ror
in
fwait
cmp
aaa
cmpsl
jle
sbb
in
add
push
jne
jo
test
adc
pop
mov
push
cmp
loope
lret
mov
pushf
sbb
jns
add
stc
js
jl
test
fadds
adc
div
inc
cs
adc
sub
push
sbb
jp
fildl
aad
ja
xorl
imulb
sub
or
xchg
dec
stc
in
and
nop
leave
push
int3
and
push
cmp
cmp
movsl
cmp
test
mov
lcall
xor
stc
cmp
and
mov
leave
bound
jl
cld
or
push
fcomi
push
lods
mov
cld
dec
xor
ret
adc
call
or
mov
jecxz
stc
jp
push
push
repz
sbb
and
push
stc
in
fcmovnu
nop
sub
mov
adc
dec
add
bound
test
cmpsl
dec
test
pop
mov
xor
ja
fstpl
and
shl
and
imul
pop
sbb
dec
aaa
pop
repz
add
jo
mov
and
xchg
aas
lea
adc
mov
fdivr
xchg
pop
sub
je
test
push
pop
repnz
js
mov
jg
sbb
insb
adc
adc
push
out
adc
cld
xor
add
pop
and
adc
jmp
mov
mov
xchg
add
fdivrp
push
xchg
xlat
cmpsb
ljmp
fndisi(8087
push
cmp
sahf
jbe
out
insl
testl
pop
dec
mov
decb
inc
push
sbb
and
ret
call
cld
jl
dec
inc
mov
jmp
loope,pt
inc
out
jae
pop
scas
push
outsl
movsb
push
movsb
mov
nop
mov
out
push
push
das
xor
sbb
hlt
xlat
cmp
rcrb
arpl
cs
push
mov
mov
cwtl
insb
mov
xor
loopne
sub
xchg
call
cltd
cmp
sub
add
push
sbb
mov
sbb
add
xchg
in
mov
or
cmpl
pop
sub
jnp
mov
sahf
sbb
shr
mov
dec
fwait
add
cmp
fiadds
in
mov
mov
dec
sub
test
pop
sti
sbb
lret
mov
or
mov
movsl
xorl
repz
lods
leave
scas
sbb
xor
mov
adc
jp
std
mov
pushf
div
or
rclb
cmp
int3
icebp
cmp
xor
push
das
and
test
js
cwtl
xchg
stos
dec
mov
push
mov
xchg
ficomps
push
push
cmpsl
ficomps
push
in
fmull
movsl
dec
out
stc
sbb
sub
jbe
sbb
sbb
loope
or
lock
jle
xor
sbb
cmc
out
pop
mov
mov
add
fwait
test
enter
cmpsb
fildl
pusha
out
test
bound
iret
ret
mov
ret
in
dec
mov
cmpb
add
and
cmp
cld
add
sbb
dec
ds
stos
push
jge
outsl
dec
xchg
mov
clc
pop
xor
sti
mov
movsl
mov
and
pop
xchg
push
cmp
jns
xor
fs
inc
mov
lret
adc
mov
daa
inc
call
push
mov
out
inc
sti
mov
mov
mov
and
jge
mov
xor
call
adcl
and
pop
test
mov
sub
aaa
loop
pop
jne
repnz
aad
mov
jmp
das
adc
test
xchg
jl
lds
mov
add
pop
xchg
mov
sbb
push
mov
cmp
xor
fdivr
popf
inc
cmc
inc
adc
jge
fwait
and
mov
xor
push
stc
mov
je
jns
pop
mov
orl
pop
nop
mov
iret
hlt
or
ret
popf
cmpsl
inc
adc
aaa
add
ror
je
cld
add
xchg
imul
lock
out
pop
js
lods
jo
in
loope
or
xchg
sahf
icebp
fdivr
cmpsl
fildl
sbb
sbb
mov
cmp
mov
cmp
jle
test
add
fbstp
das
test
cmp
mov
test
xchg
fcoml
test
mov
mov
cmpsl
pop
std
pop
aaa
cmp
cmp
fs
pop
and
sbb
mov
mov
cmp
movb
nop
xchg
and
cmp
ljmp
test
fnstsw
in
flds
imul
aaa
loope
dec
push
fstl
dec
unpcklps
lods
jmp
jg
std
sub
in
lea
inc
mov
dec
arpl
mov
pop
ss
outsl
imul
mov
sub
xchg
dec
test
into
mov
mov
in
adcb
les
jb
enter
out
xchg
mov
push
bound
adc
push
xor
daa
xor
mov
push
dec
xchg
mov
test
in
pop
mov
jnp
popa
xor
ret
cltd
sbb
sub
int3
arpl
movsl
push
das
outsl
inc
outsb
in
jl
cmp
leave
sahf
push
sub
mov
mov
lcall
add
js
push
adc
jae
mov
scas
pop
push
lret
jmp
adc
xor
jl
ds
in
mov
push
aam
out
fwait
stc
pushf
mov
sub
lods
cmpsb
js
dec
and
dec
mov
jge
or
out
das
add
scas
popf
aam
xchg
adc
lret
mov
iret
inc
inc
sub
inc
repz
xchg
xorl
cli
jmp
aaa
sti
lea
dec
pop
sbb
adc
push
ficoml
push
pop
push
rolb
movsl
pop
cmp
adc
mov
ja
rcr
flds
cmp
dec
mov
sbb
pop
pop
pop
xchg
add
add
mov
sub
sbb
pop
adc
pop
add
push
push
mov
int
pusha
fwait
sbb
fbstp
mov
and
pop
pop
sub
les
gs
into
movsl
ret
cs
cmp
mulb
loop
addl
cmpsb
xlat
sbb
addb
sub
jnp
and
xor
mov
pop
inc
and
pop
mov
pop
ljmp
pop
call
in
rorl
xor
sub
xor
xor
xchg
lods
pushf
cmp
andl
push
mov
sub
movsb
jne
inc
dec
mov
add
outsb
dec
push
sub
popa
mov
cmp
insl
adc
pop
test
arpl
aam
cmp
add
mov
out
addr16
pop
cmp
in
in
lret
lods
outsb
fldt
test
mov
popl
mov
cltd
inc
add
inc
sub
pop
push
lea
std
sbb
loope
mov
pop
clc
pop
movsb
shlb
rcl
sub
xchg
roll
imul
adc
popf
lret
jb
cmp
in
stos
mov
inc
jae
xor
adc
out
js
mov
test
pop
lahf
pop
lods
and
test
adcl
lret
mov
shlb
sbb
lret
add
test
jbe
adc
jle
push
or
inc
inc
cld
into
or
push
sbb
popf
popa
push
or
ret
addr16
fdivrl
add
jae
out
outsb
or
cmpsl
pop
lret
mov
xor
push
adcl
mov
jae
mov
addr16
push
jne
mov
insb
pop
pop
insl
pop
scas
ret
std
imul
jle
dec
cmpsb
arpl
cmpsl
addr16
xor
je
xchg
and
mov
and
jmp
addr16
mov
cmp
insl
dec
scas
pop
stc
fmul
enter
push
add
push
sbb
bound
jle
rorl
ret
adc
jns
ret
fdiv
cltd
xchg
mov
dec
and
jno
lcall
into
rolb
lret
jne
cmpsb
or
ret
add
sbb
dec
sbb
mov
popa
addr16
lock
loop
gs
or
inc
sbb
pusha
clc
jae
jl
sub
or
cmpl
adcl
out
jmp
push
sbb
inc
popa
and
mov
mov
nop
mov
test
cmp
sbb
out
rcrb
int3
ret
mov
jmp
push
adc
pop
sbb
out
or
add
rep
or
lret
minps
lcall
notl
xchg
daa
jb
mov
js
lahf
imul
sbb
jp
mov
sub
out
fs
loop
push
cld
and
sarb
or
adc
pop
inc
cmp
jae
cmpl
cmp
pop
fs
sub
and
pushf
popa
roll
mov
xor
aas
loopne
pop
out
mov
das
into
les
loope
sbb
rorl
mov
jns
inc
clc
pusha
in
sbb
cmc
int
add
mov
outsb
add
aad
sarl
fwait
cmpsl
jnp
xor
in
mov
mov
adc
and
je
dec
nop
cwtl
ret
frstor
add
pop
hlt
jne
popa
adc
jmp
loope
jle
out
jo
lret
pop
mov
cmp
mov
add
ljmp
cs
lcall
or
or
data16
leave
lds
cld
aad
inc
int3
jp
dec
roll
xlat
repz
fiaddl
jns
mov
daa
pop
xchg
push
dec
sub
scas
xor
sbb
fadds
scas
push
xor
into
jg
nop
nop
aam
es
iret
push
and
test
mov
sub
enter
push
push
rcrb
jno
icebp
or
mov
out
data16
mov
std
or
mov
push
sub
shl
ret
repz
dec
repz
adc
lret
loop
lock
mov
sub
jecxz
cmc
int
decl
push
fsubrs
cmp
jno
rcrb
xchg
and
mov
xchg
sbb
push
ja
jg
pcmpeqw
dec
je
push
lods
adc
bound
rcrl
flds
mov
jb
lods
stos
popa
ja
aad
cld
or
popf
sub
push
adc
fsubp
cltd
adc
scas
daa
mov
xor
xor
or
insb
test
rol
mov
out
jno
stos
push
fildll
dec
dec
mov
loope
push
in
sub
in
push
ja
pop
fadds
stos
inc
jp
pop
pop
sbb
sbb
pop
xchg
mov
fldenv
mov
out
jl
dec
add
mov
daa
mov
pop
lcall
mov
aaa
in
mov
mov
sub
fldl
cld
adc
sub
clc
ficomps
inc
test
sbb
cli
sub
out
setno
mov
xchg
shr
jno
push
ficompl
jg
xor
lret
push
dec
mov
sar
mov
push
jne
das
pop
scas
pop
pop
inc
adc
icebp
push
sbb
push
pop
pop
xchg
rcrb
mov
cltd
pop
push
faddl
mov
shrl
pop
pop
js
bound
jecxz
imul
cmpsl
cmp
insb
push
and
push
dec
enter
mov
fisubrs
call
jae
mov
sub
dec
and
repnz
cmpsb
cwtl
cmpsb
jns
nop
test
jecxz
pop
call
daa
dec
loop
les
adc
fwait
mov
pop
cld
outsb
into
loop
loopne
cmp
sbb
pop
mov
xlat
adc
insb
and
mov
into
mov
aam
mov
orl
insb
jne
scas
lahf
sti
xchg
test
push
sub
mov
add
sarl
scas
dec
sub
push
push
pop
loope
inc
je
pop
mov
cmc
inc
dec
xchg
dec
pop
movsl
jb
mov
xor
xchg
scas
and
mov
sbb
in
cld
iret
imul
imul
xor
int3
sbb
and
addr16
cwtl
add
pop
adc
add
xchg
aam
sub
in
jle
lods
inc
cmp
and
add
xor
inc
push
cmpl
push
pop
and
mov
jecxz
fnstsw
sub
pop
mov
sub
pusha
jo
add
lcall
fbstp
mov
stos
adc
sar
inc
daa
sub
add
mov
movsb
fistpl
push
mov
mov
stos
xor
cmpsb
sub
clc
out
cltd
xchg
xchg
mov
stos
ret
inc
cmp
sbb
inc
xchg
inc
repz
ja
xchg
into
je
pop
xchg
add
enter
mov
push
sahf
push
out
mov
pop
or
fiadds
inc
les
sub
cmp
pop
jbe
loopne
pop
sub
push
aas
inc
and
jbe
jnp
lret
mov
pop
jcxz
lea
mov
push
ss
add
enter
pop
inc
in
das
les
push
xlat
push
or
outsl
mov
inc
repz
imul
jl
bound
pop
into
jbe
mov
inc
cmpsl
jge
arpl
movsl
js
test
std
cmp
into
inc
push
cmp
sar
ja
cltd
es
gs
scas
jle
and
jge
and
imul
test
sub
xchg
inc
and
in
scas
add
outsb
loop
mov
insl
cmpsl
nop
cmp
mov
mov
shll
aad
pop
shrl
mov
xor
jbe
inc
cmpsl
mov
mov
push
sbb
mov
test
and
mov
dec
xchg
mov
inc
and
or
lret
nop
fdivs
pop
push
dec
movsb
adc
fwait
xor
mov
fsubrs
loope
xchg
cmp
and
jmp
jnp
lds
mov
stc
dec
dec
push
push
enter
lcall
xor
jp
adc
leave
push
sub
push
dec
lret
push
insl
mov
xchg
and
fnstenv
lock
mov
imull
xchg
aaa
mov
xchg
xchg
or
mov
or
fimuls
rcrb
pop
push
ss
xchg
cmp
movsb
mov
call
jbe
adc
int3
adc
sbb
sub
sbb
aad
add
adcb
pop
mov
pop
out
mov
std
call
xor
shl
scas
outsb
scas
cli
mov
test
jne
out
cmp
jge
pusha
mov
dec
mov
or
jmp
sub
dec
cmp
mov
movsl
enter
mov
inc
mov
inc
dec
ret
outsb
add
xor
lock
xor
xchg
mov
sahf
ljmp
dec
fmull
inc
adc
push
pop
arpl
lods
test
stos
movsb
lea
rcrl
imul
or
jnp
jno
dec
jnp
cmp
mov
and
pop
sbbl
pop
rcr
cs
mov
daa
xor
popa
stc
cmp
xor
or
mov
or
xchg
cmp
inc
sub
imul
jge
daa
shl
xor
call
pop
dec
imul
out
pushf
out
lds
cmpsl
lret
bound
in
ret
jp
rolb
xor
or
and
inc
dec
call
adc
adc
push
lcall
cs
jne
jno
gs
jg
sub
mov
pop
lcall
pop
mov
cs
mov
mov
stos
data16
jne
add
sub
ljmp
call
jge
xchg
xchg
fadds
inc
and
pushf
push
test
popf
jp
jne
imulb
in
pusha
aad
das
lcall
mov
or
hlt
sub
xchg
and
sub
dec
je
nop
xor
rclb
xchg
rorl
jecxz
lods
jecxz
jae
xchg
pusha
out
or
stos
pop
addb
push
cmpsl
dec
pop
inc
add
arpl
sub
popf
xor
sub
jnp
jb
lock
inc
fisubs
mov
mov
in
pop
lods
pop
aad
les
push
lock
sahf
popf
pop
dec
test
or
cli
pop
test
mov
dec
sti
mov
pushf
adc
sub
dec
stc
mov
sub
stc
divb
cmp
cmp
lods
mov
pusha
pop
or
je
aad
sbb
and
pop
jbe
push
inc
insb
psubsb
xlat
adc
jl
jge
jle
insl
cmpb
jne
xchg
cmpsb
into
lods
stos
cmp
xchg
push
adc
fbstp
push
push
fists
jae
loopne,pt
ret
or
add
lods
popf
xchg
or
cmp
lods
cwtl
das
xchg
push
shlb
fcmovbe
gs
aad
jg
fiaddl
hlt
xchg
jo
add
ret
cmpsb
lahf
daa
cmp
xchg
repnz
pop
daa
shrl
cltd
dec
adc
mov
mov
scas
push
lret
add
ss
xor
xor
addr16
popf
hlt
daa
je
jp
ja
adc
cltd
shlb
add
sbb
daa
or
sub
and
pop
push
add
sub
pop
push
cmpsb
mov
push
adc
jno
or
repz
cld
lahf
sahf
orb
sub
xchg
pop
add
ret
jmp
addb
aaa
dec
xor
jbe
xor
mov
cmp
fwait
sub
test
in
and
mov
jecxz
dec
out
out
outsb
xchg
lods
mov
pop
mov
imulb
mov
outsl
xor
or
jbe
stos
push
inc
mov
mov
and
arpl
cld
and
push
out
movsl
sbb
mov
das
call
notb
and
js
popf
sub
scas
out
out
rolb
push
ja
or
in
fwait
outsb
scas
lret
and
pop
test
outsb
es
mov
stc
sbb
cmp
outsb
pop
and
xchg
outsb
pop
cmp
test
dec
fidivs
jb
lret
jecxz
sub
or
sub
pop
sbb
js
daa
aam
gs
loope
jae
hlt
sbb
push
push
cs
fimuls
je
mov
fistpl
out
push
cwtl
jmp
pop
or
divl
imul
and
and
mov
ror
sub
into
aaa
mov
sti
mov
cmp
push
aaa
adc
push
mov
and
push
push
dec
pop
adc
and
and
lds
stos
cmp
jo
push
inc
cmp
loope
lock
arpl
stc
mov
shl
imull
sbb
sbb
aam
jne
mov
and
pop
and
mov
imul
sub
adc
cmc
jb
push
xchg
out
ljmp
sbb
fucomp
imul
pop
cwtl
leave
jbe
add
movsl
lods
ds
push
sub
dec
leave
add
cmp
and
fadds
pop
scas
and
imul
xor
cld
dec
loopne
stc
loop
add
adc
mov
xchg
in
xor
jbe
pop
push
stos
out
dec
and
divb
xchg
repz
data16
fisubl
inc
sbb
out
mov
xor
or
cmp
mov
popa
xchg
add
ret
pop
bound
inc
xchg
jge
daa
addr16
sbb
cmp
cltd
mov
jnp
cld
dec
icebp
aaa
scas
lret
ss
pop
pop
lock
xlat
add
cmp
mov
push
stos
loop
bound
imul
cmp
loop
xor
arpl
mov
or
call
add
call
mov
imul
jbe
cmp
adc
adc
and
push
add
rcrl
xchg
and
or
sub
push
out
popf
shrl
pushw
pushf
insb
xchg
loopne
mov
pop
ffreep
es
enter
sub
jle
mov
xchg
and
push
mov
jmp
jno
outsb
dec
stc
pop
xchg
outsb
rcr
subl
push
inc
test
call
push
jg
sahf
and
or
jge
mov
sahf
mov
outsl
jge
or
fdivrl
in
mov
leave
pop
cmpsl
adc
ja
push
jge
int
sbb
mov
inc
bound
or
out
jne
inc
xchg
pop
das
jg
mov
inc
lea
jae
push
scas
ljmp
mov
or
es
movhps
add
test
jb
je
mov
cmp
outsb
cmp
mov
or
mov
fisttpl
jbe
insb
lret
cld
out
cmp
ret
sbb
movsl
out
sbb
ret
mov
and
mov
aas
push
pop
out
pop
arpl
es
push
mov
jb
sub
xlat
xor
loope
ficoms
push
xor
sbbb
leave
aad
outsb
push
dec
notl
es
push
daa
sbb
adc
int3
aas
fs
fimuls
or
iret
test
jb
cli
sub
stc
cmpsb
jb
fstp
ds
inc
push
or
test
dec
jmp
and
push
clc
jno
clc
xor
jo
xor
insb
jns
mov
lret
ljmp
inc
adc
out
mov
addr16
adc
pop
sbb
adc
or
mov
outsl
je
pop
xor
xchg
loop
cltd
mov
jo
dec
out
insb
jb
stos
or
cld
ret
pop
pusha
jmp
lods
in
aas
xor
lock
xchg
lret
mov
sti
or
push
cs
or
cmc
sub
add
mov
shr
addr16
lret
cmc
fstpl
dec
test
push
testb
xchg
xchg
fs
xchg
xchg
push
sbb
adc
sti
jmp
push
xchg
rclw
push
add
mov
das
out
js
mov
sub
push
sub
jbe
clc
ret
jne
xor
rcr
push
repnz
add
pushf
adc
and
imul
testl
inc
jne
inc
mov
adc
fsubl
adc
mov
sti
cmpsb
ljmp
dec
mov
cld
push
dec
jbe
js
roll
popf
mov
call
sbb
dec
ljmp
mov
les
add
xlat
adc
mov
xchg
push
jmp
xor
push
sub
lret
pop
iret
and
pop
movsb
fisttps
out
test
mov
xchg
add
push
push
shlb
jle
push
movsb
outsl
aas
cld
sbb
in
push
pop
jg
adc
mov
jp
roll
and
sbb
xchg
fbld
xchg
mov
addr16
nop
mov
lcall
aad
cmc
ds
ja
jecxz
js
je
xchg
fdiv
mov
mov
dec
mov
addr16
mov
dec
adc
daa
mov
test
and
out
and
into
or
pop
push
sbb
cltd
adc
sbb
sbb
orl
lret
lcall
popa
sub
movsl
push
mov
push
into
aad
into
imul
inc
mov
int
push
inc
or
lret
mov
xlat
pop
xchg
push
mov
mov
sti
imul
ret
jecxz
data16
inc
sub
inc
or
ret
cli
scas
adc
cmp
popa
decb
push
jle
dec
cmp
xchg
orb
pop
cltd
sar
jns
xchg
push
setbe
ret
test
jbe
pop
xor
inc
sbb
xor
mov
jb
xchg
mov
dec
sub
std
cmp
xchg
in
das
and
inc
lret
int
lods
scas
sub
mov
bnd
dec
mov
lret
xchg
es
xor
pop
jno
stc
mov
fisttpll
cmp
lock
repnz
mov
ss
adc
push
xor
xor
jge
jp
or
push
je
add
add
lret
jg
cmpl
repz
rorl
cs
add
sbb
repnz
fs
stos
xor
imul
repnz
scas
mov
adc
push
repnz
pop
js
fildll
mov
pushf
scas
aam
or
inc
icebp
clc
inc
testb
mov
inc
inc
mov
cli
loop
test
mov
mov
dec
mov
lods
sub
into
daa
insl
aas
out
mov
mov
negb
insb
pavgb
jne
mov
js
mov
out
mov
pusha
outsb
or
sub
mov
jns
cwtl
inc
jle
adc
inc
inc
dec
jmp
cld
rol
sbb
push
jae
sub
mov
fldl
sub
inc
in
fnsave
dec
scas
ficoms
push
mov
movsb
adc
je
cmc
lret
js
adcb
push
jnp
jnp
push
std
sti
sbbl
fcom
insl
add
insl
cwtl
rorb
sbb
pop
rcll
nop
pushl
in
daa
cltd
leave
cmp
mov
lret
cld
in
xlat
adc
lock
and
mov
test
sub
dec
or
test
mov
fstps
pop
scas
std
lds
adc
or
add
mov
inc
lock
and
dec
pop
out
cmc
mov
in
jb
jns
lret
sbb
sub
fmuls
popf
ja
xchg
int3
mov
ljmp
js
fimuls
cltd
cmp
xor
stos
mov
cmp
pop
jae
sbb
add
mulb
and
dec
orl
sub
adc
dec
push
iret
add
ud2
fs
scas
jne
aaa
push
jnp
les
orl
add
push
add
push
ret
pop
and
jmp
scas
mov
push
cmp
inc
outsb
xchg
jb
push
ss
in
jae
xchg
mov
cmp
jne
fsubr
sbb
nop
enter
or
jecxz
push
pushf
and
pop
push
cltd
es
hlt
sub
subb
sbb
mov
rcl
cld
call
pop
adc
stos
pop
aas
xlat
aaa
loop
mov
mul
inc
idivb
shl
inc
mov
repz
mov
sbbl
xor
ja
add
dec
mov
pop
push
adc
push
cmp
jne
mov
adc
mov
inc
fsubl
jnp
mov
mov
ret
cmp
xchg
lock
popl
fisttpll
das
push
mov
adc
sub
stos
scas
adc
cmp
lea
jge
das
adc
mov
sbb
add
cltd
jns
pushl
add
sbb
fdivr
pop
mov
jle
sub
xorl
or
jp
mov
std
imul
push
arpl
in
push
pop
push
bound
or
adc
jge
subl
push
pop
pushf
fidivrs
pushf
dec
icebp
lea
lcall
in
sub
in
sub
xor
enter
movsb
not
out
jge
loope
in
lret
mov
or
mov
dec
jno
add
sub
jg
push
movsb
add
shll
sarb
cmc
fstl
xchg
loop
test
out
jecxz
sbbl
pushf
add
sub
fdivs
and
mov
pop
xchg
cmp
rclb
mov
inc
ja
push
fcompl
out
inc
push
ljmp
sbb
pusha
jmp
shr
cmp
add
mov
dec
add
lret
sub
dec
dec
sub
arpl
add
arpl
mov
repnz
pop
xor
sti
mov
popf
data16
sbb
not
clc
cmc
les
movsl
imul
imul
or
outsl
lahf
dec
push
push
pop
fldenv
inc
xchg
aam
cld
dec
nop
xor
pop
mov
fsubrs
popa
lea
es
mov
adc
lahf
sub
push
pop
cmp
pop
mov
pop
inc
lods
andb
pop
or
pop
sub
cmp
popa
pop
test
mov
pop
out
cmp
pop
inc
push
addl
adc
sub
mov
out
jno
dec
cltd
pop
daa
and
jns
and
mov
out
xchg
sbb
dec
test
cmp
mov
in
ds
not
push
pushf
shll
or
ret
out
push
push
or
cmp
inc
aaa
jmp
and
lods
cmpsl
imul
lods
jb
ret
xchg
cli
sbb
pushf
mov
std
movsb
pop
subl
push
sub
rcrb
sti
add
inc
inc
fildl
jo
push
xor
xor
mov
daa
mov
movsb
mov
aaa
jbe
shlb
fwait
mov
ficomps
sbb
enter
in
scas
sub
lahf
cwtl
xchg
jmp
xlat
sub
mov
jae
sbb
mov
push
cmp
das
movsb
loope
rcl
outsl
jge
outsb
outsb
xchg
pushf
xchg
push
mov
adc
inc
cmp
xchg
testb
sub
jbe
xchg
jl
push
add
insb
enter
outsb
cmp
mov
imul
call
inc
xlat
inc
jecxz
cli
aad
jno
push
adc
in
sbb
pop
cmpsb
add
stos
fisubrs
mov
mov
adc
filds
std
pop
data16
pop
xchg
popf
xchg
cwtl
je
fwait
andl
push
jno
into
mov
mov
mov
out
lds
insb
in
and
insb
sub
pop
outsb
aas
push
pusha
mov
jmp
adc
cmp
mov
adc
cmp
icebp
inc
ret
test
add
repz
loopne
jle
rclb
or
rolb
mov
cmp
mov
pop
ret
testl
sbb
es
sti
pop
sub
fnstcw
push
aas
pop
push
pop
xchg
mov
iret
fnsave
lock
add
rcl
andb
lock
xchg
or
jb
xchg
pusha
in
int
je
popa
jno
ret
cmpsb
and
xor
push
or
mov
lock
xor
data16
mov
xchg
lea
lcall
sbb
out
lahf
push
push
lods
sbb
shll
xchg
mov
mov
sbb
cmpl
xor
inc
cli
mov
or
xor
subb
clc
decl
xchg
addr16
push
pcmpeqd
xor
sbb
sarl
push
cmp
in
lock
mov
enter
inc
jle
fcom
inc
popf
cmp
daa
mov
pop
sub
les
inc
jnp
xor
jo
shl
add
mov
nop
lahf
sub
pop
lods
mov
push
loope
js
jno
jns
sbb
scas
or
fsubr
and
mov
mov
dec
cmpsl
cld
subl
and
and
jecxz
xchg
outsb
iret
and
movsl
cli
pusha
dec
push
mov
inc
cld
push
mov
adc
xchg
sbb
xor
jae
pop
mov
push
dec
xchg
add
mov
div
shll
mov
shll
test
dec
dec
push
out
test
push
js
aam
scas
mov
notb
pusha
ret
xor
add
xor
sub
in
push
push
and
sbb
es
push
inc
pusha
cmp
mov
aad
jge
mov
cwtl
xchg
push
xchg
in
jb
xor
stos
xor
adc
add
jbe
and
sbb
or
push
dec
jecxz
add
mov
enter
sbb
cmp
dec
fnstenv
rcr
mov
mov
mov
adc
pop
loopne
mov
fnsave
es
jns
mov
lret
fsts
cmp
rcrb
or
int
icebp
loopne
push
sbb
mov
test
cmp
pop
add
pop
and
test
loopne
sarl
stos
stos
push
aam
inc
lock
outsb
or
out
cmp
pop
arpl
add
adcb
push
cld
mov
jecxz
jge
loope
fdivs
push
cmp
add
lods
and
mov
iret
add
ljmp
add
jnp
leave
int
sbb
xchg
arpl
adc
pop
push
leave
fistps
inc
xchg
int
cmp
adc
pop
adc
mov
sbb
out
sahf
fneni(8087
les
push
sbb
and
iret
jne
out
pop
jl
add
xchg
xor
ljmp
orb
aad
pushl
xor
push
sbbl
push
fdivs
mov
xchg
dec
add
inc
test
cmp
imul
mov
sbb
lcall
cwtl
mov
pop
xor
jp
pop
out
lea
fninit
push
imul
pop
test
scas
and
cltd
movsl
xchg
mov
aam
mov
std
inc
icebp
je
das
jae
icebp
dec
jge
shrb
stos
add
rcrb
fsubrl
mov
push
lock
mov
push
dec
aad
in
push
inc
xchg
lock
jg
adc
push
mov
pop
xor
not
fstl
jl
dec
hlt
dec
xor
enter
movsb
sbb
xchg
cmpl
subb
rorl
out
pop
push
aam
push
shrb
sti
and
popf
push
sbb
jmp
lods
lea
and
inc
adc
mov
add
cmp
and
flds
and
adcl
inc
dec
sub
cmpb
fldt
xchg
and
lock
mov
or
lods
or
xchg
pop
push
adcl
push
inc
outsl
fwait
popa
test
std
cld
cmp
pop
pusha
adc
adc
loope
xor
sub
sti
pop
clc
inc
pusha
xor
cmc
imul
push
pusha
out
push
pop
xchg
mov
sub
bound
stos
push
push
add
loopne
xor
xor
cmpsl
inc
inc
dec
mov
sbb
callw
mov
pop
sub
adcb
xor
cmpl
movsb
push
mov
xchg
outsl
cmp
nop
mov
jo
jl,pt
or
and
stos
lods
out
lahf
cmp
movsb
out
add
push
js
dec
loope
mov
popf
xorb
adc
andb
jno
cmp
add
jp
iret
xchg
inc
mov
sbb
in
pop
in
clc
or
ret
rol
mov
addl
xor
mov
sbb
rorl
cli
cld
dec
inc
cmp
add
test
ds
pop
aaa
out
add
rcrl
je
repnz
mov
ficoms
ss
mov
adc
mov
outsb
je
pop
movsl
pushf
int3
add
xor
xchg
jp
or
add
ljmp
sbb
sub
cmp
adc
icebp
mov
int
mov
cmp
xchg
test
jle
arpl
xchg
aam
jmp
add
popf
adcb
xchg
imul
add
mov
sbb
and
js
pop
leave
cmp
sahf
idivb
adc
ljmp
cmp
add
lods
sbb
pop
jle
xchg
int
push
scas
sub
fiadds
lods
in
ja
push
movsl
jge
shrb
loope
lds
push
test
push
jle
bound
enter
sbb
xchg
shrl
or
test
pusha
out
scas
repz
sub
push
mov
jp
rorl
aaa
js
xor
subb
sub
hlt
sbb
dec
sbb
push
int
and
fbstp
mov
cmp
clc
arpl
stos
scas
sbb
ss
ljmp
mov
loopne
es
lret
inc
std
out
cmpsb
mov
hlt
xchg
es
daa
pop
rcrl
popf
rcrl
xor
daa
push
mov
and
decb
test
test
mov
into
sti
cmpsl
sub
or
lsl
mov
xchg
cld
mov
sub
je
fidivl
cmp
push
fiadds
mov
pop
xchg
loop
push
lds
test
jb
jecxz
sub
mov
xor
out
cmp
mov
add
jle
insl
int3
rcrb
pop
cmp
hlt
jg
iret
mov
add
xor
sahf
gs
dec
jp
shrl
ret
popa
jnp
adc
mov
sub
loopne
sub
push
rcrl
dec
cmp
push
popf
bound
out
cmc
adc
push
ljmp
add
js
xor
outsl
data16
sub
out
push
xchg
mov
mov
mov
add
jb
repnz
jae
jo
mov
std
insl
outsb
push
daa
rol
push
repz
int3
jnp
inc
adc
push
xchg
mov
insl
cwtl
pop
sbb
xchg
sbb
mov
hlt
jge
or
xchg
mov
sub
adc
cmp
sub
jle
scas
xor
mov
stos
pushf
aam
repz
ds
cmp
cmpsl
aad
les
fldl
jmp
std
ret
test
lock
xchg
lahf
or
dec
sbb
pop
and
lretw
and
cmp
mov
mov
pop
push
lret
ljmp
outsl
mov
xor
fimuls
cltd
add
sub
xor
sbb
push
mov
mov
leave
loope
test
mov
jns
mov
outsb
repz
jp
ficoms
cltd
inc
xorb
shrl
ss
jo
add
sub
cmpsl
loop
out
push
mov
xchg
push
shl
cmpb
mov
jns
je
mov
sbb
jb
repz
xchg
xchg
es
lahf
mov
jb
push
inc
inc
lret
dec
xchg
sbb
ret
pop
mov
inc
jno
mov
jmp
stc
hlt
in
loopne
xor
add
dec
mov
jp
adc
repz
int
ljmp
in
call
aad
or
add
clc
lret
pop
xor
sti
sub
adc
test
dec
inc
xor
xlat
scas
data16
cli
jl
and
setle
xor
negb
loop
push
fcoml
push
cmp
push
sub
push
lds
out
insb
add
shlb
or
sub
xchg
jge
pop
pop
fs
or
cmp
push
jbe
in
orl
shrb
je
cmp
out
xchg
in
aad
stc
dec
xchg
mov
iret
xchg
sbb
xchg
or
mov
lock
pop
test
jl
adc
test
cmp
dec
mov
xlat
cmp
mov
lods
ja
sub
in
jo
xor
xlat
aaa
outsb
push
mov
jne
mov
inc
adc
sub
inc
in
hlt
daa
out
loope
loop
adc
ret
sub
out
push
fcompl
cmp
pop
dec
sbb
lods
lret
les
scas
mov
mov
dec
inc
rcr
jg
add
iret
jns
inc
jl
dec
mov
jbe
rcrb
pop
cmp
lock
fidivrs
jecxz
jno
jp
adc
jge
jnp
test
cwtl
test
add
add
scas
and
lods
mov
test
add
xor
cmp
pop
mov
or
pop
nop
sub
test
pop
sarl
fmull
mov
xchg
rcrl
push
mov
mov
rcrb
jb
push
rorl
cmp
in
xchg
aam
push
mov
call
sbb
nop
push
mov
push
xlat
mov
push
xor
pop
daa
in
jmp
add
sbb
imul
mov
out
aam
shrb
enter
add
jp
sbb
scas
cmpsl
and
repnz
pop
mov
rolb
arpl
adc
push
and
jg
repnz
push
xchg
pop
cmp
out
add
xchg
xchg
mov
aas
sti
aaa
add
cmp
jo
mov
test
stos
lock
test
push
aaa
aaa
out
loop
test
and
dec
imul
dec
pop
fildll
sub
jbe
insl
ss
out
jno
aas
cmpsl
inc
push
xchg
jmp
lcall
aam
and
ja
mov
mov
lret
push
lcall
lock
pop
cmpsb
js
jp
cli
pop
jg
inc
xchg
jl
in
or
add
mov
fisttpll
mov
cli
xchg
pop
cld
jmp
mov
rorb
push
sub
push
mov
test
fdivrl
jl
push
lock
in
inc
sti
loop
jle
and
mov
cwtl
loope
stos
dec
mov
push
cwtl
call
outsl
mov
jmp
sti
repz
mul
in
cmp
mov
daa
mov
sahf
and
fs
push
cmp
cmp
or
inc
outsb
mov
pop
enter
jb
mull
xchg
push
je
cmovns
clc
call
sbb
mov
lock
push
in
xchg
sub
lret
test
sti
pop
mov
mov
ja
jge
inc
pop
mov
push
pop
cwtl
sbb
inc
push
xor
add
aaa
pop
test
inc
fcoms
sbb
dec
sub
lcall
aad
sub
js
mov
adcb
mov
mov
xor
pop
ret
stos
les
fstpt
fmul
xor
cmp
lods
xchg
cltd
sub
dec
movsl
jo
or
in
bound
outsl
sbbb
in
lods
sub
inc
call
pop
lret
repnz
jnp
int
test
xchg
stc
cld
jge
cmp
and
popf
out
inc
inc
adcb
repnz
xlat
inc
or
out
mov
add
leave
bndldx
or
jne
dec
add
mov
mov
push
or
lods
push
mov
imul
in
out
shl
sbb
sub
out
out
jge
dec
inc
movsb
out
repnz
jecxz
movsb
jp
xor
scas
sti
cmp
fmulp
push
jns
movsb
mov
nop
loope
cmp
mov
mov
xor
scas
xor
sbb
imull
jbe
pop
add
cli
popf
cld
dec
or
lcall
xor
mov
sahf
lahf
mov
ret
mov
pop
or
mov
fsubr
ret
mov
xor
mov
mov
outsb
dec
jmp
xchg
push
addr16
cwtl
jecxz
inc
stc
es
and
shl
sub
in
test
cmpsb
mov
jne
adc
inc
sbb
loopne
pop
fcmovnb
dec
mov
lret
loop
cmp
out
xor
xchg
add
and
xchg
jae
ss
fadd
sub
dec
movsb
lret
or
dec
iret
xchg
mov
cmp
scas
mov
ja
out
mov
sbb
pop
cld
dec
pop
scas
pop
cmpsl
shlb
jmp
inc
xchg
mov
popa
lock
xor
fwait
mov
std
jge
adc
xchg
addb
fnstcw
push
mov
cmp
rorl
sti
jg
push
sub
leave
sub
dec
jae
xlat
xor
and
xchg
cmp
cs
test
push
fcomip
lock
xchg
jbe
push
cmpb
aad
mov
popf
sub
mov
fyl2x
mov
dec
mov
dec
jle
loope
and
movsl
repz
shll
jnp
mov
adc
shlb
lcall
dec
or
movsb
rorl
je
test
aad
lock
pop
iret
ja
adc
test
dec
test
cs
add
cli
sahf
adc
xchg
dec
and
mov
xchg
jns
sbb
jb
adc
dec
pushf
cmp
sub
mov
gs
icebp
push
dec
shlb
pop
iret
mov
xor
mov
or
outsl
push
xor
outsb
mov
push
jle
or
int
movsl
mov
cwtl
push
cmpsb
and
out
mov
xor
xchg
into
mov
inc
test
cld
jecxz
xor
or
imul
mov
pop
cmpl
sahf
adc
and
daa
xor
mov
push
or
fisubl
xor
mov
out
xchg
mov
jo
mov
in
call
inc
inc
popa
popf
add
test
pop
into
pop
jno
mov
jle
out
into
jecxz
pop
pop
mov
pop
test
push
xchg
adcl
xchg
jno
clc
fdivl
stos
stc
imul
adc
scas
add
pop
aaa
mov
push
ret
cli
jecxz
stos
test
mov
cmpsl
ja
cltd
stc
dec
pop
mov
inc
and
cmp
scas
stc
sub
lret
sahf
lcall
in
cmp
mov
lret
push
and
repnz
jmp
add
lret
mov
inc
test
add
cmpsl
jle
es
mov
rcll
fwait
shl
js
comiss
push
es
ja
sti
inc
movsl
mov
adc
gs
outsl
cld
adc
dec
ja
or
adc
mov
pop
test
cmpsb
aaa
jle
insb
inc
ljmp
cwtl
aas
stc
fiadds
leave
insl
scas
dec
cwtl
mov
mov
push
push
roll
mov
jp
jno
jl
dec
fidivs
mov
push
daa
loop
scas
xor
js
loopne
inc
lret
cmp
mov
sbb
add
cmp
pushf
add
std
mov
out
lret
aas
sbb
sbb
cs
add
fcomip
stos
sub
xchg
mov
and
jne
cwtl
fdivrp
dec
xchg
and
pusha
incl
push
fsubr
push
mov
aas
aas
dec
aaa
and
xchg
pop
out
push
cmp
cld
jns,pn
dec
jbe
inc
fldt
shrb
xor
jmp
jbe
insb
shl
fsub
fstps
jns
imul
xor
push
push
adc
push
add
out
repnz
xor
xacquire
push
int
fwait
inc
jg
test
xor
adc
push
xlat
les
adc
sbb
mov
xchg
xchg
xchg
out
pop
jg
out
gs
inc
ljmp
js
enter
cs
icebp
loope
or
std
popf
jns
push
psllq
popf
sbb
xchg
jne
jle
addr16
jo
movsl
mov
inc
mov
xchg
adc
xchg
lcall
push
add
loope
enter
imul
jge
push
sbb
xchg
pop
int3
rclb
rcr
mov
xorl
xchg
ss
mov
arpl
pop
lret
add
sub
mov
pop
lret
mov
div
pop
data16
mov
addr16
stos
divl
cmpsb
out
jb
pop
jae
aas
sahf
rcrb
cmp
rcl
cwtl
push
shl
roll
mov
mov
test
dec
push
adc
mov
lcall
adc
xchg
incl
insb
xchg
fucom
add
stos
pop
jmp
pslld
inc
cmpsl
pushf
inc
sub
outsb
loope
jecxz
jmp
sar
pop
rolb
je
ffree
lcall
stos
xor
dec
pop
push
xlat
fs
cmp
pop
pop
inc
cmp
sub
add
inc
pop
pop
pop
sbb
popa
cmpb
xor
mov
fmuls
nop
push
xchg
mov
adcl
xchg
ljmp
setle
ficoml
and
xor
movsl
adc
push
add
pop
inc
mov
pop
adc
add
push
cmp
sahf
subl
push
or
popa
xchg
int3
pop
ficoms
lock
cmc
and
pusha
cmp
jmp
pop
pop
std
push
push
push
push
out
mov
pop
jl
out
xchg
xor
push
mov
jbe
push
or
aas
mov
mov
in
mov
addr16
mov
ficoms
add
loop
push
mov
dec
adc
dec
out
jp
je
rolb
out
dec
cmp
js
inc
push
xor
sbb
dec
adc
addr16
popf
inc
and
pop
xor
pop
mov
jle
outsb
inc
fnsave
aad
dec
mov
fcmovnb
pop
push
push
pop
cmc
sub
jae
mov
rclb
xchg
test
cwtl
mov
and
jnp
fcomps
mov
stos
inc
sahf
push
mov
in
dec
aaa
dec
pop
or
js
and
mov
cmp
lcall
mov
sub
lahf
mov
mov
lods
inc
sbb
lds
dec
pushl
xchg
sbb
push
dec
rorb
sub
mov
cs
repz
iret
test
pushl
xor
mov
pop
cmp
loope
popf
pusha
push
inc
cmpsb
je
xlat
insl
mov
or
mov
xlat
mov
stos
leave
sbb
dec
jns
push
out
xor
pushf
sub
cmpsl
adc
outsl
dec
ds
dec
lock
lods
aad
inc
inc
andb
ja
xor
mov
or
out
popf
std
icebp
mov
js
jg
stos
lock
pop
mov
scas
leave
cmpsb
push
fdivs
adc
and
lret
lods
out
xchg
xchg
xchg
repnz
dec
ljmp
adc
cmpsl
sbb
es
xchg
xor
mov
mov
test
mov
lret
dec
dec
dec
stc
cmp
or
xor
mov
push
and
jns
stc
jbe
clc
nop
clc
bound
lret
sub
inc
xor
push
fnop
dec
es
pop
adc
daa
out
outsl
fsubrl
pushf
in
jbe
jno
pop
mov
call
out
mov
scas
test
push
mov
pop
cmpl
sub
test
jbe
andl
ret
pop
rclb
pop
or
mov
out
mov
test
or
push
addr16
sub
push
arpl
mov
sbb
sub
popf
and
arpl
mov
scas
mov
jl
dec
mov
popf
std
arpl
in
add
outsl
out
nop
adc
add
xchg
stos
pop
sub
mov
xchg
mov
xchg
cld
jmp
stos
or
scas
ret
pop
test
dec
mov
pop
add
sbb
sub
les
test
pop
cltd
adc
dec
inc
inc
je
jno
dec
out
push
pushf
lahf
imulb
inc
icebp
mov
iret
cmpb
gs
out
aad
das
sti
jne
in
add
fidivrs
repnz
lea
popa
rclb
cmpsl
pop
pop
dec
push
and
add
out
iret
inc
jb
mov
sbb
dec
adc
add
cmp
aaa
xchg
pop
ljmp
pop
mov
or
imul
nop
cli
sub
insb
sub
jg
add
mov
imul
adc
rclb
jno
enter
ret
rolb
popa
push
xchg
sahf
xchg
jne
cld
sbb
in
mov
and
or
mov
sti
adc
movsb
or
ret
push
std
xor
je
sub
push
push
push
sub
mov
inc
cmp
nop
in
ds
lods
push
jl
xor
jno
or
add
adc
lock
fisubl
loopne
push
aam
insl
arpl
mov
push
adc
mov
ret
js
jae
std
ret
aaa
addr16
cmp
sub
inc
cmp
push
add
cmc
fnstenv
cltd
stos
aaa
jle
das
iret
push
popa
pop
rcrl
sti
into
xchg
enter
sub
fisttpll
lret
pop
ljmp
movsl
push
pop
push
imul
out
dec
mov
sbb
pop
sbb
sbb
testl
andb
vmread
ret
fwait
adc
mov
in
add
int3
insb
enter
inc
pop
jmp
mov
int
mov
insb
out
pop
sbb
imul
jg
mov
decl
ret
and
movsl
in
subb
adc
imull
jno
lea
ret
jle
jecxz
cltd
icebp
xor
out
mov
add
rep
pusha
int3
xchg
andl
call
xchg
adc
mov
inc
inc
pop
nop
sub
push
add
fwait
dec
adcl
test
lahf
or
mov
je
pop
xor
ret
fmull
xor
scas
aas
xlat
lret
mov
xor
aaa
mov
xchg
sbb
sub
xchg
jmp
jbe
jge
mov
xor
push
cmp
adc
neg
pop
mov
mov
ja
dec
test
jb
ret
dec
or
mov
xor
dec
sbb
sbb
mov
jle
pop
int
out
push
jp
and
pop
fldcw
shlb
push
movsb
or
orl
sbb
mov
cli
push
add
jge
mov
add
fs
jecxz
jge
or
xor
add
stos
popf
jae
pop
cmp
movl
push
jge
test
pusha
mov
mov
add
xchg
fcoml
sbb
lret
rcrb
fisubl
outsl
mov
pop
push
push
or
cld
xor
in
add
adc
icebp
dec
hlt
es
push
adc
pop
pushf
xlat
das
jbe
inc
lds
imul
mov
jb
xchg
push
and
jae
pop
cli
hlt
mov
xchg
and
inc
shll
outsl
dec
jbe
shrl
add
je
stc
mov
outsb
push
out
repz
inc
loope
insl
lea
push
popa
stos
cltd
mov
add
mov
push
incl
repnz
pop
xor
repnz
inc
in
ffree
dec
pushf
mov
repz
lds
ret
push
shrb
cltd
in
out
pushf
xchg
jne
lret
pop
xchg
int
mov
inc
rolb
add
mov
ss
fcomps
mov
push
sti
incb
stos
jne
sti
mov
dec
push
or
jne
jg
adc
inc
pand
inc
adc
push
cld
out
cmp
mov
fwait
pop
aas
mov
mov
je
jns
std
aad
inc
fadds
push
inc
fisttps
jae
cltd
pop
adc
and
insb
push
lods
xchg
xor
fdiv
mov
lcall
xchg
scas
jbe
popa
repz
xor
repnz
sbb
pop
xchg
xor
push
inc
ret
loopne
adcb
inc
mov
mov
out
xor
mov
jb
nop
add
xor
push
push
xchg
insb
mov
pop
rolb
fwait
lds
adc
fadds
inc
outsl
testl
pushf
scas
adc
push
aad
jle
fdivl
das
pushf
xchg
jns
arpl
jb
popf
ds
xchg
pop
insl
cwtl
xchg
test
clc
push
icebp
imul
jns
sbb
xchg
inc
or
fsubl
lds
icebp
insl
mov
or
xchg
or
push
mov
iret
ret
popf
cltd
push
sahf
cli
mov
mov
sti
je
loopne
out
and
lahf
mov
addr16
out
fwait
mov
lret
xchg
jns
pushf
fadd
mov
insl
aas
xor
gs
sbb
shll
jg
std
xor
or
int
subb
push
push
bound
sbb
pop
xor
sbb
call
bound
dec
and
leave
and
arpl
dec
daa
sbb
mov
daa
xchg
in
daa
mov
out
push
test
loop
nop
cmp
jge
and
fstl
mov
insb
jecxz
mov
jbe
mov
iret
xchg
fs
test
outsb
rcrl
mov
aad
add
pop
andl
outsl
les
pop
inc
lock
ja
dec
pop
je
or
and
sbb
in
mov
jmp
insb
mov
push
pop
addb
xchg
or
out
sqrtps
mov
roll
sbb
adc
or
or
out
lret
fwait
mov
add
xchg
jg
adcb
mov
mov
cwtl
scas
xchg
dec
push
sbb
push
arpl
aad
adc
loope
mov
xchg
inc
iret
and
jnp
pop
dec
imul
lcall
mov
nop
xor
repz
sub
mov
mov
add
add
movsl
mov
xchg
ds
jl
lods
arpl
fldt
inc
aas
dec
xchg
dec
mov
and
addr16
dec
sbb
sahf
aad
dec
jge
stos
dec
mov
mov
sbb
stos
cmp
js
xchg
lret
sub
pushf
imul
adc
aas
outsl
daa
es
xor
sub
cmp
sub
jae
xor
ss
adc
dec
push
sahf
mov
mov
xorb
pop
xchg
sub
jnp
mov
sbb
dec
fs
scas
inc
test
xchg
pop
dec
sub
rcr
outsl
pop
scas
bound
sbbb
push
ds
push
out
inc
cld
cld
jns
shll
movsl
jg
icebp
adcb
cmp
adc
ret
push
dec
rep
xchg
rcrl
dec
ds
cmpsl
bound
enter
lods
xor
mov
jbe
jns
dec
xchg
imul
inc
pop
cmp
jmp
stos
lods
sbb
jp
int3
ja
inc
dec
and
outsl
pop
push
push
push
pop
jmp
sub
inc
push
test
mov
sbb
in
mov
push
push
test
inc
insb
out
shll
xor
imul
pop
jo
movsl
and
leave
into
xor
sbb
mov
jle
je
sub
lea
mov
jb
fsubrp
es
pop
ljmp
inc
jge
xor
cs
inc
pushf
xchg
adc
sbb
push
es
insb
and
mov
xchg
add
loope
cmpsl
and
cwtl
cmp
les
and
xor
sbb
add
mov
add
pop
in
aas
xor
inc
cmp
and
xor
dec
adc
sti
and
addr16
xor
push
cmpb
popa
xchg
xchg
pop
scas
dec
jp
sbb
ja
sub
scas
negl
xchg
movsl
bound
insl
cmpsl
ret
ret
into
sahf
or
mov
pop
inc
addl
ja
xor
push
dec
fstl
test
or
lock
and
pop
push
jno
loope
ljmp
sahf
fcoms
out
lods
jecxz
push
out
aad
pop
mov
icebp
lods
xor
or
mov
add
nop
es
frstor
dec
pop
fsubrp
inc
mov
pop
inc
jno
jne
cmc
shl
leave
jb
out
adc
sbb
out
cli
inc
cwtl
dec
addb
into
xchg
shl
fucomi
add
cmp
rclb
adc
cwtl
pop
movsl
inc
xor
lock
scas
push
div
mov
movsl
dec
arpl
xchg
push
mov
mov
fwait
dec
fdivs
or
ljmp
mov
cli
add
sbb
ja
pop
icebp
mul
pushaw
out
ror
adc
pop
in
jle
leave
loopne
and
push
pop
rolb
push
or
add
shlb
mov
sub
leave
lods
adc
jmp
jl
ficomps
mov
inc
push
fstpl
dec
outsl
sbb
scas
pop
mov
and
stc
push
pop
filds
dec
aas
in
out
mov
inc
fstpt
xchg
add
jo
ja
xor
imul
cmpsb
pop
sti
cmp
jb
mov
gs
jnp
xchg
pop
xchg
stos
sub
cwtl
xor
lret
fstl
pop
mov
adc
rcr
xor
dec
dec
xchg
adc
mov
pop
xor
jbe
pop
pop
add
jecxz
ds
cs
dec
mov
fmul
lods
pusha
rclb
or
and
mov
push
enter
sub
in
inc
xchg
dec
pop
pushf
cmc
or
xor
add
mov
xchg
mov
mov
pop
push
jge
mov
pop
adc
mov
sbb
jg
out
aad
int3
push
cmpsb
mov
aam
pop
adc
loop
aad
fs
aas
sbb
das
sub
cmp
cltd
loope
cs
xchg
lcall
adc
lcall
sbb
scas
dec
dec
lods
fmuls
jl
in
mov
and
js
push
jmp
lock
xlat
je
inc
pushf
pop
xor
iret
dec
push
push
push
add
pop
fdiv
hlt
xchg
jecxz
lret
mov
fwait
icebp
test
pop
into
mov
enter
inc
sbbb
loop
pop
jl
fsubr
pop
push
inc
xchg
int
rorb
into
mov
fwait
loope
jns
int
stc
or
jge
movsl
lahf
clc
push
sarl
inc
sarl
jns
mov
and
dec
insl
ljmp
cmp
fwait
or
pop
dec
hlt
add
lahf
cmp
rcrb
xchg
sub
sub
cmp
enter
jno
aaa
mov
rolb
push
call
inc
mov
movsl
insl
cmc
lock
pusha
pop
pop
dec
fisubs
mov
aad
cs
outsb
inc
and
xorb
or
int3
shll
push
or
in
sub
mov
sbb
cmpsl
addr16
mov
inc
gs
pop
pop
inc
rcrb
adc
filds
or
xor
cmp
imul
or
les
cli
mov
inc
test
cmp
and
lret
shld
dec
mov
jae
push
js
or
daa
push
in
nop
sub
sti
test
push
decl
adc
sub
lahf
test
jp
leave
mov
pop
sub
in
inc
lea
mov
push
test
sbb
xchg
adc
pop
insl
pop
sarb
out
xor
cmp
cmp
in
sti
daa
add
push
pop
iret
pop
jl
xchg
inc
adc
movsb
aam
xor
xchg
sbb
or
fxch
ljmp
mov
je
mov
aaa
mov
lcall
fisttpll
xor
push
pop
mov
jecxz
jns
cmp
lods
ss
push
jge
int
repz
jmp
test
aad
out
jb
mov
push
lods
and
rcl
mov
mov
adc
lods
in
mov
in
sub
push
cmp
rorb
not
mov
test
lods
faddl
jg
popa
ror
rcr
in
inc
inc
cmp
pop
outsb
pop
stos
arpl
adc
dec
cwtl
imul
es
and
sub
pop
cmp
cmp
lock
jecxz
mov
dec
loope
cmp
arpl
sub
aaa
inc
sahf
fisttps
outsb
insb
dec
roll
gs
add
int3
xor
cld
rcrl
test
xor
stc
xor
lahf
fdivr
in
data16
js
sub
mov
fcom
lcall
sub
push
jecxz
jo
xor
inc
inc
sub
fstl
mov
lock
lret
roll
pop
sahf
add
mov
dec
pop
cs
dec
test
xor
mov
repz
pop
add
pop
pop
fiadds
push
sub
xor
inc
outsb
sarb
jbe
pop
daa
aas
or
aad
leave
jl
xor
daa
inc
andl
out
xor
stos
sub
xor
jl
out
or
xor
lds
add
mov
pop
mov
lea
icebp
repz
mov
xchg
sarb
cltd
inc
daa
enter
xchg
jp
ljmp
mov
push
push
lock
xorb
or
cmpsb
mov
ja
and
ret
lock
stos
loope
mov
jl
and
int
outsb
sbb
mov
push
mov
mov
push
and
dec
dec
aaa
add
mov
pushf
ss
jbe,pt
shr
incl
mov
movsb
fistps
shll
xchg
sub
ficoml
push
add
mov
in
ja
or
mov
lea
ret
mov
mov
sbb
push
xor
mov
cltd
flds
pop
xchg
mov
imul
xor
inc
mov
push
les
inc
xchg
in
inc
mov
mov
mov
mov
jp
insb
or
dec
rcr
lahf
fdivrs
pop
push
cld
loop
cli
push
lods
jns
sub
lret
mov
push
cmpb
add
add
xchg
das
adc
ret
test
outsb
popa
xor
sbb
mov
cmp
in
sbb
in
daa
cmp
xchg
out
mov
mov
adc
push
notb
xchg
pop
push
into
and
mov
xor
fstpl
cli
push
sahf
sbb
aaa
clc
imul
mov
add
in
insb
pop
js
mov
adc
bound
xchg
out
mov
aaa
push
mov
scas
fbstp
adc
je
ret
imul
xacquire
dec
dec
xor
sub
or
pushf
mov
in
add
xor
repz
pop
or
mov
sbb
inc
icebp
and
repz
es
add
lcall
lds
in
add
pop
subb
ror
jae
dec
or
jle
xchg
mov
pop
pop
mov
mov
add
call
data16
outsl
les
dec
mov
jbe
lret
mov
mov
fimuls
inc
fnstsw
mov
add
mov
xchg
inc
pop
int3
ljmp
dec
inc
mov
mov
das
pop
jmp
jb
adc
push
hlt
mov
xchg
in
fwait
rclb
adc
push
add
scas
sbb
in
repnz
sub
jmp
call
pop
mov
testl
mov
pop
jg
jle
inc
push
sbb
in
xchg
xchg
mov
dec
xor
dec
lock
clc
decb
pop
call
xchg
ud1
call
inc
insl
pop
add
xchg
repnz
sub
mov
punpcklbw
or
int
loope
js
loope
pusha
mov
dec
or
pop
addr16
xor
xchg
call
lahf
out
in
lock
ds
fsubrl
mov
out
icebp
pop
imul
enter
clc
in
xchg
mov
popf
mov
icebp
filds
pop
rcll
jbe
movsl
scas
sbb
test
sbb
pop
cmpsl
jbe
gs
inc
fucom
js
shr
cmp
stos
push
push
incb
icebp
movsl
inc
test
jns
push
fcomi
icebp
mov
lret
jno
filds
ljmp
xor
inc
lahf
dec
lret
cmpl
lods
mov
mov
xchg
xchg
hlt
lods
pop
fucomip
push
popa
shll
mov
adcl
shlb
stos
aas
inc
pop
cwtl
shlb
stos
ror
dec
cmp
mov
pop
pushf
lret
or
sub
insb
mov
mov
dec
mov
decb
in
mov
orl
pop
mov
xor
lods
inc
mov
lea
icebp
sti
repnz
mov
mov
add
xlat
imul
mov
xor
int
xchg
inc
popa
cmpsb
push
jge
sub
push
lods
pop
xchg
push
sub
data16
adc
jbe
xchg
xorb
or
and
sbb
ret
adc
iret
in
test
xchg
dec
cs
mov
jl
das
cmpsl
ja
sbb
cli
scas
lods
insb
mov
inc
in
imull
fwait
lahf
xor
cltd
aas
jb
stc
movsb
nop
push
dec
nop
xor
js
fs
adc
jbe
insl
stos
lods
xor
jne
mov
xlat
mov
aam
mov
cli
jp
insb
out
movsb
mov
stos
pop
das
or
testl
rorb
inc
mull
mov
out
mov
cmp
xor
jo
pop
ds
push
push
push
xor
ds
mov
xchg
sub
sbb
jbe
out
dec
dec
insl
stos
push
mov
clc
in
sub
aad
add
pop
insl
inc
and
or
and
lock
sub
push
push
inc
lcall
ljmp
or
jns
xchg
and
mov
popa
jbe
clc
xchg
dec
push
lahf
push
xchg
std
xchg
shll
push
scas
add
inc
mov
jnp
loopne
pop
xchg
push
add
mov
gs
mov
cmpsl
daa
add
stos
sahf
mov
js
dec
adc
mov
lods
cli
adc
jmp
dec
ja
stc
fwait
das
aam
pop
add
incb
inc
jecxz
leave
enter
mov
clc
and
jno
jg
scas
icebp
cmp
sub
inc
into
cltd
jne
mov
pop
push
scas
jecxz
pop
nop
stc
daa
or
ficoml
cmpsb
fbstp
out
pop
ds
or
mov
or
sti
dec
sub
sub
out
mov
aas
neg
sar
je
mov
mov
lds
popa
aaa
andb
cmpl
add
test
jecxz
jns
cli
adc
mov
and
scas
xchg
and
scas
and
add
xchg
adc
mov
mov
movsb
xchg
sub
sub
mov
fcompp
mov
into
enter
movsl
cli
mov
jo
lcall
push
mov
push
mov
xchg
xchg
jge
jle
mov
jmp
cltd
cld
in
or
push
int3
pop
push
cmp
lds
mov
sbb
jmp
jb
add
std
push
scas
mov
add
sbb
out
jnp
insl
imul
sbb
inc
mov
jge
js
int3
xorl
mov
in
hlt
mov
pop
dec
shlb
fyl2xp1
je
dec
pop
adc
imul
je
add
jp
and
sahf
push
rcll
subb
jl
add
sbb
jmp
in
jge
shl
das
or
jbe
sahf
sub
leave
mov
xchg
xor
sti
mov
in
testb
pop
cmp
int
fldenv
aaa
sub
push
loope
sarl
xor
nop
cmp
jno
push
es
sub
and
test
testl
andb
xchg
mov
rolb
shr
push
call
aam
dec
inc
sbb
je
data16
mov
jp
outsl
jae
jge
shlb
stos
cltd
adc
mov
int3
cli
pop
lcall
and
pop
jbe
push
pop
inc
leave
testl
mov
mov
aas
fstl
inc
subb
cli
out
fcmovu
or
pop
sbb
rcrl
sbb
cld
sub
ljmp
in
mov
adc
rol
or
cmp
dec
out
ret
inc
mov
pop
push
aam
inc
imul
movsl
xchg
inc
jl
leave
push
jne
sbb
out
jno
in
cvtpi2ps
sbb
insb
push
push
scas
dec
cmpsl
mov
aad
test
in
inc
cli
sarb
int3
movl
mov
in
in
test
imul
mov
and
cmp
push
scas
addl
int3
ret
mov
dec
mov
inc
xchg
gs
fs
push
pop
and
sub
jmp
pop
sahf
cmp
repnz
mov
stos
jnp
pop
xchg
dec
je
lcall
xchg
push
jne
movsl
adc
adc
out
es
fs
xchg
cmp
inc
ror
in
sbb
jge
mov
jecxz
jl
inc
mov
ja
or
or
xchg
jno,pt
and
dec
js
test
outsl
mov
mov
pop
add
in
push
pop
mov
mov
ljmp
and
icebp
push
pop
fiaddl
repz
cmpsb
adc
inc
or
jns
repz
sti
call
test
in
mov
scas
sbb
adc
cltd
dec
adc
pop
leave
sbb
fiadds
mov
xabort
rcl
dec
jns
stc
push
daa
pop
ret
sub
cmp
repz
mov
cmp
or
mov
fidivrs
cwtl
fwait
ss
test
lret
pop
adc
cmp
addr16
inc
or
divb
jp
add
sub
pop
fdivl
mov
jle
mov
xor
push
dec
sub
stos
int
nop
cmc
test
sbb
adc
xchg
sbb
bound
loop
xchg
adc
sbb
js
adc
nop
sbb
push
pop
xchg
repz
and
loopne
mov
xchg
scas
xchg
in
push
scas
pop
popf
mov
fimull
mov
mov
xchg
fcompl
repz
mov
repz
cs
loopne
inc
lahf
pop
arpl
int3
call
add
add
out
shl
xor
pop
xchg
jns
fwait
daa
cmp
ficomps
pop
pop
loop
call
mov
inc
xchg
push
add
fs
aad
into
call
push
into
pop
sti
jl
inc
mov
clc
add
fnstsw
aas
aam
add
cmpsl
push
push
xchg
popf
cmp
adc
out
into
cmp
bound
stc
jge
xchg
aad
lret
cmpsb
rcrl
aas
adc
stc
fidivrl
mov
lret
fcoms
sbb
clc
xlat
push
xchg
imul
mov
cld
push
outsb
inc
idivb
push
push
push
les
mov
popa
dec
pop
clc
mov
mov
fldl
mov
shrb
rorb
test
test
cmpsl
enter
lds
inc
testb
mov
adc
es
xor
data16
jle
pusha
adc
mov
loopne
sub
lds
and
cmp
pusha
sub
mov
sub
adc
mov
les
int
cmp
aam
mov
sub
dec
cmp
and
xchg
cs
mov
sbb
xchg
mov
fstl
rcrb
cmpsl
imul
and
jge
or
add
data16
into
cmc
pop
clc
cmc
int
rcl
sub
or
popa
push
lret
add
das
jl
rorl
data16
pop
cmp
popf
cmp
jge
xchg
sub
dec
sub
inc
ljmp
push
mov
shrb
mov
outsl
pop
clc
mov
push
lods
nop
mov
orb
loop
loope
mov
lcall
xor
push
lods
pop
pop
mov
mov
in
jnp
sahf
lock
out
mov
outsb
pop
sahf
orb
push
lcall
addr16
pop
std
sub
jnp
mov
jecxz
repz
mov
imul
xor
nop
ret
sbb
arpl
mov
jb
adc
mov
test
rol
mov
in
jmp
nop
aad
shl
push
data16
sarl
mov
sub
adcl
adc
jmp
je
dec
scas
push
mov
mov
aaa
mov
icebp
push
or
xchg
xchg
xor
scas
inc
jbe
rorl
jmp
cmp
inc
cmp
sbb
pop
mov
cltd
seto
xchg
adc
in
and
dec
adc
mov
pop
call
xchg
mov
jo
loop
mov
neg
dec
jnp
in
sbb
bound
dec
push
out
mov
cmp
xchg
or
xchg
lcall
push
and
xchg
lods
pop
push
adc
shlb
mov
jns
dec
jmp
xchg
pop
or
adc
call
ljmp
mov
out
and
and
adc
lods
cmpsb
jl
ljmp
addr16
aam
mov
mov
dec
push
fldcw
cmpsl
outsb
or
mov
insl
scas
add
loope
cmc
xchg
shrb
cmp
inc
xchg
fisttpll
dec
cmp
mov
xchg
test
mov
add
sarl
sbb
std
cmc
sub
xor
mov
loope
sbb
push
push
mov
bnd
xchg
test
or
hlt
out
and
xor
sub
dec
jecxz
mov
add
push
dec
sbb
cld
cwtl
mov
data16
xorb
mov
add
aam
add
lods
mov
inc
add
and
add
cmp
repz
scas
rclb
popa
je
icebp
mov
cmp
sbb
je
add
adc
lds
push
ljmp
lods
mov
jae
and
in
push
mov
mov
inc
lcall
and
shlb
adc
adcb
iret
dec
repz
cmp
xor
or
fisubl
or
arpl
dec
mov
insb
jbe
in
aas
jp
mov
out
cmp
stos
add
mov
dec
mov
js
push
fcmovu
push
xchg
leave
cmp
fcoml
jne
mov
xor
jl
out
cmp
cmp
or
das
push
jp
out
mov
push
fwait
pop
mov
xor
xlat
in
mov
jo
out
int3
shll
pop
pop
in
mov
and
into
sbb
xor
mov
testl
or
dec
xchg
out
jg
mov
int
stos
pop
adc
sub
popf
jmp
push
xchg
hlt
pop
jl
mov
shll
and
mov
ljmp
push
stos
mov
mov
mov
sbb
xor
sbb
push
in
fwait
mov
js,pn
and
cwtl
mov
jmp
and
mov
push
ds
sti
and
xchg
cmp
cmpb
in
testb
fistl
mov
mov
repnz
mov
repz
test
jge
jno
cld
insb
out
in
push
xor
or
cs
das
jo
xchg
or
addr16
mov
jne
xor
xor
mov
lret
pop
inc
shrl
push
mov
xor
mov
lock
imul
xchg
adc
pop
jno
pop
mov
fs
mov
das
mov
daa
or
sub
stos
stos
js
and
shlb
mulb
hlt
sbb
out
sbb
test
jl
div
push
ret
inc
adc
sbb
and
lods
mov
xlat
pusha
mov
push
push
idivb
mov
fstpl
mov
in
cmpsb
mov
mov
jge
dec
mov
inc
dec
data16
fs
mov
adc
ficomps
in
gs
lcall
mov
loop
outsl
add
out
out
mov
cmp
and
insl
andl
pop
adc
sub
jo
ljmp
je
mov
sahf
mov
add
xchg
mov
jle
push
adc
lret
xlat
in
xchg
out
add
roll
dec
fnstcw
adc
hlt
popa
test
cs
xchg
fcmovb
adc
imul
push
jne
scas
cltd
lret
imul
lcall
add
arpl
out
rol
cmp
sti
movsb
test
mulb
adc
add
adc
jp
into
jecxz
pop
mov
stos
xchg
incl
stos
inc
fnsave
lock
leave
sbb
mov
cmc
movl
push
and
jmp
xor
popf
inc
mov
cld
repnz
push
fcoml
arpl
stos
and
stos
and
je
ja
fsubs
add
jmp
cwtl
or
shlb
mov
add
in
mov
insl
cld
sahf
dec
jle
mov
add
aas
call
mov
xchg
jmp
inc
sbb
orl
xorl
push
movsl
dec
sti
lods
inc
pop
adc
jae
inc
mov
jge
mov
inc
cwtl
loopne
int3
jns
sbb
imul
pop
dec
movsb
or
pop
push
call
jb
sbb
mulb
negl
in
pop
lods
in
inc
outsb
mov
fwait
mov
dec
divl
lds
stos
movsb
xor
add
popa
and
in
scas
ret
push
xor
mov
dec
pusha
cld
rol
jns
shll
cmp
call
fs
gs
inc
in
test
pop
jle
ds
adc
les
mov
fidivrs
test
jmp
loope
mov
and
popa
es
add
or
xor
inc
fcompl
cmpsl
repz
sub
cld
sbb
mov
jle
xor
mov
ret
out
dec
mov
add
test
je
xor
fdivs
repnz
xchg
push
jp
push
ljmp
out
jb
cwtl
adc
lods
int3
pop
cmp
mov
ljmp
mov
imul
je
mov
cmp
sti
lcall
cmp
sbb
xchg
shlb
cmp
ret
push
sarl
enter
xchg
addb
cltd
repz
test
popf
int3
jle
popf
pop
pusha
lret
sbb
std
or
or
roll
add
das
jns
and
xchg
mov
xchg
pop
lcall
hlt
fiaddl
jo
add
flds
add
fbld
iret
repnz
mov
mov
push
adc
fmuls
rcl
stos
mov
pushf
pop
into
stos
inc
xor
adc
pop
dec
into
or
mov
mov
pop
dec
xor
movsl
xlat
mov
mov
xor
xor
pop
mov
fcmovnbe
cli
lods
mov
adc
shlb
fistps
jecxz
pop
mov
cmp
inc
jo
icebp
adc
aaa
cmp
and
repz
pop
sbb
cmc
inc
mov
mov
int3
xchg
subb
loopne
push
and
push
xor
push
mov
adc
pusha
sbb
and
insl
lahf
fsubrp
ss
fcomps
cmc
and
sub
pop
xchg
test
dec
mov
mov
insl
mov
xchg
test
mov
dec
xchg
mov
stos
or
mov
pop
aaa
xor
and
insl
cmp
data16
add
and
sub
sbb
add
into
jecxz
sarl
fcoml
ss
rorl
pop
mov
xchg
push
xchg
pop
hlt
fiaddl
xlat
xchg
sub
mov
xor
popa
push
outsl
mov
out
pop
fbld
sub
adc
in
sbbb
movsl
loop
mov
popf
dec
mov
sub
or
jg
popa
aas
popf
out
xchg
pcmpgtw
cwtl
addr16
mov
int
mov
cmp
imul
mov
icebp
fstps
lcall
mov
movsl
dec
jp
push
test
fsubs
mov
ret
out
jns
lret
and
and
mov
mov
out
cltd
add
xor
jbe
push
jbe
adc
loopne
mov
pop
popf
negl
cmc
shll
adc
loopne
sub
fsubr
dec
sysexit
test
xor
push
cld
and
arpl
icebp
clc
lods
jmp
push
xor
in
sahf
enter
sti
sub
and
sub
rolb
je
mov
ret
outsb
in
cli
dec
inc
rclb
mov
loopne
jp
out
cmp
adc
sub
inc
and
or
test
mov
bound
add
mov
fbstp
insl
or
fisttps
enter
imul
inc
xchg
dec
and
adc
inc
or
call
mov
cli
adc
icebp
sti
cwtl
cs
idiv
orb
push
pushl
xchg
jo
out
and
push
xor
cmp
fnsave
aaa
pop
adc
sti
pushf
imull
or
sbb
inc
cmp
test
subb
mull
inc
mov
push
jae
mov
mov
jne
push
jae
fsts
inc
ds
lds
sub
cmp
fistps
sub
sti
int3
cmp
cld
jecxz
ja
mov
cmpsb
inc
adc
mov
mov
fstpt
in
enter
adc
sub
pop
imul
fidivrl
mov
jae
xor
jp
pop
bound
add
or
push
daa
mov
mulb
push
xor
push
clc
aas
push
imul
cwtl
in
dec
sti
repz
jns
add
push
fidivrl
xchg
je
jb
xor
incl
lods
test
mov
mov
mov
ret
cmp
inc
push
mov
or
pop
add
mov
pop
inc
loope
out
push
orl
sbb
mov
dec
leave
cmp
add
arpl
pop
add
addr16
push
xchg
pushl
leave
sub
mov
ret
or
push
lcall
jle
icebp
outsl
fldz
loope
pop
cmpsb
imul
out
ret
push
add
ljmp
repnz
add
or
inc
push
aam
cmp
xchg
jl
push
sbb
push
movsb
imul
mov
fsubrl
cmpsl
mov
cli
mov
jno
dec
iret
push
stos
add
daa
xor
pushf
xchg
mov
mov
jns
repz
out
pop
pop
pop
notb
inc
fstps
inc
inc
pop
lret
loope
aad
enter
loopne
and
rcr
aas
test
push
push
ja
and
cmp
and
xchg
cli
mov
xor
pop
mov
adc
push
lea
and
jnp
add
push
mov
int
lahf
enter
inc
jbe
shlb
mov
add
out
das
jle
pop
pop
mov
jne
adc
jecxz
add
push
shlb
mov
adc
aam
push
loope
hlt
in
pop
sbbl
push
in
cli
and
ds
xor
or
or
pop
or
out
ljmp
outsl
in
add
aaa
ss
push
jl
push
loopne
leave
das
mov
pop
and
mov
mov
add
and
roll
inc
sbb
sti
inc
xor
pop
nop
je
inc
xchg
sbb
pop
shl
ds
outsb
lods
imul
sub
sarb
rcl
out
sub
loopne
sbb
dec
and
xor
sarb
cmp
hlt
mov
pop
jae
push
in
or
loope
int3
add
movsl
inc
orb
sbb
fbld
pop
in
jge
mov
jp
sbb
mov
lea
or
and
xchg
xor
flds
repz
movsb
shll
stc
mov
xor
mov
jb
jle
add
in
or
adc
adc
jg
scas
das
lods
xchg
or
xchg
and
jbe
dec
adc
pop
cmp
insb
movsl
push
int3
cmpsl
push
movsb
das
loope
cld
bound
fidivrl
dec
push
add
decl
js
inc
add
or
add
rorl
pop
aam
loopne
movsb
xor
mov
xor
mov
or
les
xorl
sbb
xchg
cmp
mov
add
jo
dec
cmpsl
iret
call
aam
mov
xchg
jb
push
lcall
or
jnp
ja
ljmp
lock
mov
test
cmp
je
mov
les
cmp
rorl
icebp
push
ds
xor
push
stos
movsb
and
inc
stc
frstor
sarl
pusha
and
jno
sub
jno
movsb
mov
sub
sbb
loop
pop
icebp
movsb
ret
aas
pop
scas
push
inc
fbstp
js
pop
out
sbb
mov
ret
daa
push
mov
mov
push
std
mov
mov
mov
popf
cs
xchg
test
js
adc
push
in
and
cwtl
rorb
cmp
test
or
jnp
pushf
cld
xor
pop
das
pop
dec
dec
fisubrl
jmp
add
lret
xchg
jp
cmp
aas
insb
iret
mov
imul
test
aas
jg
loop
daa
es
cmp
xchg
aaa
and
jno
mov
adc
repnz
dec
push
or
adc
jl
icebp
xor
mov
test
ja
ds
sub
cmp
push
fistpl
cmp
out
lret
imul
sub
and
cmpsl
daa
jl
xchg
add
mov
ljmp
and
mov
mov
jnp
mov
aam
jmp
shrl
and
into
xchg
inc
lods
movsb
mov
stos
test
ffree
pushw
adc
push
cs
mov
std
and
imul
cmpsb
jp
mov
lods
xchg
mov
lods
dec
jae
push
int3
stos
push
pop
out
pop
test
pop
shl
clc
mov
xchg
and
cmp
setge
daa
into
sbb
in
hlt
loope
and
mov
mov
adc
xor
jle
xchg
stos
ss
pop
mov
jno
cltd
add
ljmp
aas
repnz
and
xchg
leave
mov
mov
stc
push
out
push
sub
mov
fwait
cmp
fldt
jnp
jns
loop
or
cmp
mov
push
jmp
xorl
insb
mov
insl
in
stos
inc
pop
jns
dec
push
nop
adc
push
xchg
sub
cmpsb
and
pop
lahf
lea
rorb
fimuls
insb
jle
push
push
mov
cmp
pavgw
dec
data16
shll
cmpsb
jecxz
fldenv
filds
addr16
adc
or
xchg
inc
xor
mov
pop
scas
sub
inc
jge
popa
lds
and
cmp
scas
push
stos
stos
fwait
push
lods
or
into
jge
push
gs
push
fimuls
cmp
jbe
imul
popf
fwait
jecxz
add
dec
mov
lock
fisubrl
xchg
rcr
movsb
leave
push
xchg
jge
xchg
xchg
clc
popf
sbb
cmpsl
pop
ss
daa
jmp
fmuls
dec
daa
sbb
jo
inc
fstps
mov
cmp
daa
sub
sub
out
mov
dec
test
addr16
fcomi
gs
jae
fimull
xor
ja
out
stos
xor
cmpsb
pop
jb
lods
mov
imul
lods
cmp
sbb
cmp
daa
lea
fmul
jle
rorl
les
lahf
xor
imul
lds
push
push
xorb
test
ljmp
fsubr
push
mov
nop
dec
inc
in
roll
add
jbe
jnp
xchg
add
pop
sub
addr16
arpl
stos
das
divl
inc
inc
inc
fwait
adc
inc
cmp
mov
pusha
test
clc
sub
fs
test
lock
sub
fistpll
stos
sub
pushf
xor
jle
mov
cmpsb
adc
cmp
ret
or
sahf
mov
mov
xchg
and
lock
xchg
fcomip
dec
xor
mov
mov
push
mov
sub
xor
cmpl
dec
fisttpll
sbb
push
sti
insb
pusha
popa
lock
rcl
inc
lcall
jbe
daa
jp
xlat
push
popf
pop
fdivrs
xor
xor
xchg
xchg
fsub
push
add
inc
mov
mov
inc
jp
test
test
faddl
rcrb
fld
gs
mov
in
bound
mov
loope
shr
push
sahf
jecxz
int3
out
mov
pop
jnp
mov
lahf
ds
inc
incl
xchg
xorb
pusha
cmc
mov
mov
mov
stc
pusha
emms
jne
leave
dec
mov
mov
in
or
mov
out
aad
aaa
mov
or
xchg
mov
jns
jp
cmp
sahf
sti
push
lock
mov
sub
inc
movsl
mov
xor
stos
mov
les
xchg
std
dec
movsl
int3
inc
test
push
mov
loop
or
outsb
jae
xchg
addr16
mov
cwtl
push
hlt
rcr
jae
mov
ja
jp
add
fadds
sbb
das
sub
pop
aam
lods
inc
stos
je
setle
mov
shll
test
int3
jnp
jnp
pop
sub
cmp
mov
jne
into
sahf
pop
cmp
aaa
insb
enter
in
and
fistl
xchg
into
filds
fistps
lds
or
sbb
pop
pusha
cmp
fsubs
or
js
mov
mov
imul
or
ret
adc
scas
xchg
pushl
or
inc
cmp
aam
cmc
fwait
sub
shrb
or
mov
add
loop
pop
jmp
adc
sub
jg
and
cmp
ret
sbb
add
xorl
test
jl
inc
jmp
push
push
sbb
mov
roll
shlb
cli
dec
jne
pop
pop
jb
sub
fmul
sbbl
les
add
xorl
sar
xor
pop
add
push
add
pop
ds
in
ud0
jmp
mov
insb
pusha
les
das
ficoml
mov
out
cs
cmp
adcb
test
js
mov
jb
scas
or
sub
pop
rcrb
mov
adc
and
pop
mov
pop
orb
cmc
enter
shlb
xor
lods
pop
xchg
loope
aad
cli
push
pop
shrl
push
xor
sahf
dec
adc
cmp
jg
mov
adc
inc
shlb
sub
enter
cmp
test
or
mov
sub
push
mov
pop
mov
add
popa
push
mov
jge
adc
fdivp
div
mov
jl
icebp
pusha
xor
inc
outsl
xchg
adc
test
mov
insl
add
rorb
mov
shll
outsb
push
adc
cmc
mov
xchg
icebp
out
xchg
add
push
add
cs
jmp
mov
or
mov
sub
inc
ja
test
jp
cwtl
mov
adc
jne
dec
mov
cltd
icebp
mov
jns
aam
lds
repz
add
cltd
mov
sub
loope
inc
dec
loop
mov
sub
lret
ljmp
daa
add
mov
or
es
insb
jne
add
call
enter
mov
and
pop
mov
jnp
mov
cmpsl
push
imul
sti
mov
js
lea
lret
xchg
adc
push
fsub
sub
mov
cmp
inc
jmp
cmpsl
aam
pop
cld
jno
je
test
sub
jmp
rolb
xchg
pop
push
mov
out
addl
pushf
mov
xor
mov
push
xchg
mov
lret
negl
xor
ret
les
ds
dec
and
push
cltd
sbb
push
jg
cmp
ret
fstpl
lahf
movsb
push
data16
pusha
mov
adc
into
inc
sbb
or
je
xor
cmp
sbb
mov
and
lds
dec
ret
add
cmp
int
push
ja
lcall
stos
imul
repnz
data16
enter
adc
clc
loope
pop
lea
addr16
sbb
or
test
pop
lds
add
push
imul
mov
cmpsl
std
jl
addr16
hlt
sbb
sbb
popa
pop
ret
rcll
mov
test
push
xor
movsb
sbb
icebp
ds
in
and
fildll
sub
jno
sti
std
in
popf
xor
popa
aad
adc
mov
jp
leave
mov
aad
pusha
inc
cltd
mov
outsl
das
jae
data16
push
or
lds
mov
pusha
xor
das
mov
pushf
cwtl
mov
loopne
xor
adcl
imul
mov
ljmp
push
jb
mov
dec
xor
loope
and
mov
rorb
jo
mov
sahf
push
push
mov
mov
or
or
sarl
pop
in
jnp
hlt
sbb
pop
sbb
xchg
jmp
push
adc
sub
imul
inc
pop
xchg
popf
xchg
jmp
mov
and
test
xor
repnz
sub
jl
loopne
xor
repnz
out
mov
xor
ss
test
cmpsb
repnz
into
pop
xchg
aas
push
xchg
xor
stos
pop
fcoml
add
jecxz
repz
mov
rol
xor
shl
pusha
scas
mov
mov
mov
mov
sub
add
push
dec
js
and
pop
jle
push
cmpsb
add
inc
push
cmp
mov
xchg
lret
xor
in
xchg
push
sub
shlb
pushf
cmp
xchg
loope
mov
outsb
lahf
fisubl
sub
sarb
jns
out
cmp
pop
push
stos
sbb
shlb
dec
mov
mov
rorl
and
sub
ficomps
insl
jmp
push
adc
jno
add
fbld
mov
push
sti
sbb
lret
nop
xlat
sbb
f2xm1
cmc
mov
jnp
daa
fisttpll
mov
ret
push
mov
pop
or
lahf
mov
adc
fsub
addr16
sbb
or
dec
jae
pop
and
loope
sub
shlb
cltd
jo
clc
loop
jns
cwtl
mov
xchg
cmp
test
push
sahf
jno
sub
sti
xchg
iret
and
mov
je
insb
mov
sbb
dec
lds
sbb
mov
lods
inc
call
ror
repz
daa
mov
fs
push
mov
pop
ja
pop
mov
out
add
or
inc
sub
jle
adcb
stos
jle
lahf
push
cmpsl
decl
sub
test
add
das
icebp
pop
push
arpl
outsl
xchg
pop
adc
movsb
xchg
sub
pop
cmp
adc
fld1
mov
inc
out
cld
sbb
mov
mov
out
sbb
aas
cs
push
xchg
and
inc
aam
imul
jl
mov
cmpb
jbe
mov
scas
jnp
insb
mov
jge
orl
or
xchg
gs
xchg
aas
xor
test
xchg
std
leave
cmp
or
mov
clc
popf
sub
mov
rolb
and
mov
inc
mov
pusha
jnp
out
stos
bound
sub
out
and
xchg
push
jl
shll
sbb
hlt
push
loope
mov
andl
adc
outsl
hlt
xor
inc
iret
jle
or
inc
push
scas
fbstp
in
sbb
js
aam
movsb
je
aaa
xor
xor
loopne
dec
dec
ja
add
inc
xlat
push
mov
push
cmpsl
jno
push
aaa
dec
pop
test
cmpsl
imul
sub
popf
push
ret
ficomps
mov
adc
daa
popf
lcall
mov
adc
lahf
and
pop
cwtl
insb
adcl
and
adc
pop
mov
xor
mov
loopne
icebp
cmp
inc
add
stos
jge
subb
and
mov
repnz
push
rcrl
push
push
push
out
imul
push
or
lcall
shll
pop
loope
xchg
into
popa
cwtl
dec
das
arpl
mov
mov
cltd
adc
inc
sar
xor
cmc
fcmovne
xor
lahf
mov
push
outsl
shlb
dec
aam
inc
mov
xchg
aad
xchg
add
in
jbe
outsb
aaa
or
xchg
adc
sbb
sahf
xchg
orl
jnp
jge
outsl
ret
xchg
pop
pop
add
sahf
or
out
je
std
iret
packsswb
adc
and
xchg
xor
xchg
loope,pn
dec
or
cmp
fucomi
int
mov
pop
add
stos
xor
icebp
cmp
sub
pusha
addb
shrl
ss
in
xor
jge
aam
andb
mov
jbe
push
lret
fcomps
mov
fstpl
jo
dec
test
test
test
pop
inc
cwtl
addr16
movsl
sbb
and
cmp
arpl
cmpsb
in
xchg
mov
cmpsl
push
sub
mov
shrl
cltd
arpl
jne
int3
es
pushl
enter
sbb
cmp
push
cs
jecxz
xchg
push
shll
inc
ret
mov
test
popf
add
or
insl
mov
dec
mov
push
lock
and
dec
sbb
inc
mov
popf
fisttps
ss
xchg
cmp
or
jbe
test
out
sub
pop
fdiv
lock
jmp
jns
imulb
jmp
push
cmpsb
lock
mov
jg
jno
add
dec
mov
and
imul
and
and
scas
popa
js
aaa
scas
mov
sbbl
or
sub
add
jp
cld
cltd
shrb
inc
sub
mov
or
sbb
push
xor
in
ljmp
data16
idivb
pop
pop
stos
and
and
xchg
sub
aad
add
in
dec
lds
xor
cmp
push
push
popf
fs
sti
mov
push
sub
imul
nop
sbb
inc
sub
mov
lret
cmp
lock
pusha
adc
pushf
jne
push
imul
jge
loop
sti
es
adc
and
push
and
sub
stos
dec
push
jp
or
dec
daa
xor
jo
into
inc
imul
and
sti
fstpl
insb
push
or
mov
add
dec
jb
out
sub
decl
hlt
xor
push
lahf
mov
adc
movsl
jge
fcoms
mov
popa
add
jns
fdivrs
call
addr16
mov
orl
loop
shl
dec
int3
dec
jle
and
dec
xchg
push
mov
rcrb
test
adcl
test
and
in
stc
lock
shlb
jnp
fisubl
jbe
stc
and
jl
dec
popf
mov
popf
sbb
lahf
add
mov
insl
xor
lcall
jp
stc
mov
and
stos
lret
call
stc
jp
add
jmp
adc
insl
cs
jo
fdivrl
mov
sub
stos
pop
daa
jmp
jecxz
push
adc
fst
push
mov
out
mov
xchg
xor
fucom
mulb
repz
mov
gs
fnstcw
xlat
mov
lea
test
xchg
sub
test
dec
pop
shlb
mov
iret
popf
imul
jbe
fidivl
cmpsb
out
jnp
jg
xlat
sbb
mul
movsb
jmp
jmp
stos
xchg
into
xor
test
mov
ljmp
and
es
je
add
flds
scas
imul
mov
insb
lret
adc
mov
loop,pt
xchg
cwtl
sbb
int
jecxz
sbb
imul
jo
enter
popf
ret
or
dec
and
push
sub
add
mov
push
fstpt
cli
sub
push
lods
inc
incl
ja
out
rolb
dec
push
fsubrp
in
pop
mov
lret
cmpl
push
cmp
mov
aam
xchg
lret
hlt
sub
dec
pop
aam
sbb
xchg
sbb
into
aas
les
aas
jecxz
arpl
or
movsb
pop
testb
stos
cmp
dec
or
testl
lret
stos
dec
and
test
add
fists
jl
sub
inc
and
popa
mov
mov
jl
pop
adc
cmp
out
and
insl
jne
out
pusha
sub
popf
sahf
in
or
adcl
nop
lret
pop
xchg
inc
add
sub
ret
pop
xchg
hlt
rorl
mov
sbb
lret
aaa
and
xchg
add
push
stos
pop
pop
inc
out
fcmovnu
inc
lods
push
gs
sub
iret
mov
popf
xchg
xchg
andb
movsb
mov
add
popa
mov
jno
mov
movb
aam
or
push
xchg
cmp
fildll
add
in
lea
mov
mov
repnz
hlt
jnp
test
push
jge
test
push
ret
daa
pushf
pushf
xchg
subl
xor
inc
adc
push
dec
push
fisubs
sub
mov
shrl
inc
mov
fildl
pop
sub
pop
xor
loope
test
jo
xchg
es
and
pop
xor
testl
xchg
inc
cli
gs
or
pusha
test
bound
xlat
movsl
popf
lods
adc
out
das
inc
popf
ljmp
cwtl
cmp
and
fadd
addb
bnd
gs
dec
push
jne
or
mov
jg
mull
pop
or
sub
xor
mov
push
popf
aad
jle
in
sub
fnsave
repnz
pop
xor
cmpb
and
jbe
bound
push
xor
mov
mov
sbb
lret
xchg
sub
stos
fcoms
jne
sbb
call
jl
decl
or
mov
xchg
cmp
or
ljmp
and
sbb
test
and
fs
sbb
fsubs
inc
fsubrp
mov
ja
sti
fcomi
jae
mov
lods
out
or
jl
scas
pop
out
pop
xor
push
adc
stc
loopne
mov
nop
inc
or
fnstcw
orl
hlt
push
add
ficomps
push
lock
xor
push
pop
jbe
ljmp
mov
leave
lock
dec
int3
mov
xchg
sarb
out
out
call
sub
into
rcrl
mov
test
mov
je
cmp
inc
mov
sub
in
inc
cmp
push
cmp
aaa
cmp
mov
jmp
push
mov
cs
cli
mov
mov
jmp
sbb
mov
faddl
nop
das
shll
dec
popf
stos
jae
pop
mov
test
mov
jge
clc
sub
adc
in
into
into
push
popf
fldcw
and
xor
jmp
xadd
movq
data16
add
mov
push
and
jge
adc
inc
pop
into
mov
mov
mov
cltd
cltd
add
icebp
mov
popa
scas
cmpsb
inc
js
mov
cmp
inc
je
incl
jae
mov
cmp
mov
addb
fldcw
push
jb
jae
int3
adc
mov
arpl
int
clc
lret
sub
inc
sbb
push
imul
rorl
add
pop
scas
cmpsl
and
jp
inc
in
pop
pop
push
roll
push
pop
lea
imul
cmpl
in
push
pop
and
pushf
jle
xchg
mov
xchg
xchg
movsl
sahf
lret
cltd
xorl
pop
stos
pop
lock
rcrl
or
xor
fisttpl
fmull
out
sub
ljmp
mov
pushf
xchg
jno
push
into
stc
cmp
cmpsl
dec
inc
add
inc
leave
cli
mov
xchg
sarl
xor
pusha
adc
movsb
inc
lret
or
mov
jns
cmp
sbb
addl
mov
cmpsb
sbb
jbe
mov
loopne
jbe
dec
jnp
ja
mov
scas
punpckhwd
fsts
push
mov
stc
mov
cmpb
xor
xor
out
xchg
insb
sub
in
push
subb
mov
int3
sub
mov
xchg
mov
iret
loope
les
push
cmp
clc
add
mov
pop
hlt
or
int3
mulb
sahf
mov
lock
cmpsb
shll
insl
sub
jnp
xchg
out
call
aas
ss
sub
mov
shr
fldt
and
fistpl
jae
pop
stos
pop
addr16
adc
xor
push
test
jne
cmp
neg
add
fs
sbb
adc
mov
xchg
or
pusha
mov
inc
test
iret
cwtl
mov
mov
aaa
mov
lcall
jp
orb
add
vcvtps2dq
stos
inc
adc
leave
dec
jg
and
jns
mov
outsl
mov
push
imulb
push
sub
dec
test
nop
in
std
ror
adc
sub
fwait
add
inc
push
xchg
cs
mov
lds
xor
mov
aaa
adc
sbb
shll
in
xchg
adc
and
xor
mov
add
mov
pop
stc
ret
ss
xlat
xor
loop
div
out
imul
dec
jle
jo
outsb
xor
icebp
mov
push
xchg
and
aad
pop
dec
aad
mov
xchg
mov
inc
stos
mov
aad
push
jb
mov
subl
repz
test
jecxz
cmp
scas
les
je
jno
stos
adc
adc
xchg
in
jl
add
dec
sub
mov
dec
inc
add
xchg
push
in
pop
add
xchg
cmp
adc
ljmp
mov
mov
lock
fbstp
pop
push
mov
subl
fiaddl
mov
mov
mov
inc
mov
mov
inc
negl
out
lods
nop
imul
inc
and
repnz
and
sub
adc
pushf
subb
and
mov
cmpsb
clc
mov
jo
ds
roll
push
imul
sub
fsts
adc
mov
lods
mov
xchg
outsb
out
lret
arpl
push
fwait
pop
jmp
mov
movsl
inc
ret
cmc
inc
aaa
lock
pop
jmp
push
adc
cmp
mov
pop
sbb
and
add
mov
sbb
es
popf
inc
cmp
jge
shll
add
pop
mov
xchg
inc
mov
pop
jmp
data16
adc
jmp
popa
pop
cmp
push
in
jb
arpl
adc
dec
push
push
popf
lcall
jno
push
fbstp
mov
adc
xchg
cld
std
adc
pop
fnstenv
pop
xchg
cltd
cmp
jae
sbb
xchg
cmp
xor
call
mov
fidivl
arpl
cmp
add
or
ss
jns
loop
ret
je
sbb
stc
lock
jnp
inc
pop
or
cmp
jae
jmp
mov
ret
icebp
or
pop
arpl
add
movsl
cwtl
sarb
cli
lds
std
test
mov
and
pop
test
mov
data16
and
xchg
mov
cwtl
popa
lods
outsl
add
xor
mov
pop
adc
push
dec
addr16
inc
push
int
into
mov
cli
sahf
pop
stos
lret
dec
push
cli
test
xor
ret
ljmp
inc
fiadds
xchg
mov
dec
jmp
sti
mov
xchg
jmp
mov
stc
daa
pop
jle
lock
or
mov
icebp
add
and
ret
jecxz
add
xor
mov
add
loop
sub
sbb
js
leave
js
mov
roll
sbb
lret
mov
test
sub
lods
push
test
xchg
xor
aaa
dec
shll
daa
mov
mov
repnz
dec
dec
and
xchg
loope
loopne
lds
cld
insl
adc
es
fbstp
push
mov
sti
ss
out
test
ds
cmp
pushf
push
mov
popf
dec
lret
pop
xchg
sbb
push
push
int
xchg
mov
dec
cld
stos
xlat
cmp
sub
inc
insl
test
jmp
ss
xchg
push
mov
dec
push
jns
js
cmp
pop
mov
dec
push
and
pop
cmp
adc
sub
sar
mov
jno
ret
cs
icebp
sbb
push
shll
ds
les
pop
cltd
sahf
cli
pop
mov
xor
scas
in
leave
xor
mov
std
rcrb
push
or
inc
or
mov
mov
sub
int3
sub
ret
or
add
pop
out
int
data16
jle
data16
jl
stos
jmp
sbb
scas
dec
dec
adc
pop
outsl
sub
adc
add
fists
dec
mov
mov
dec
mov
dec
dec
inc
scas
inc
sbb
inc
dec
ja
fwait
sub
mov
add
sub
repz
push
jae
mov
jp
xchg
dec
push
cmp
aad
bound
mov
notl
notb
pop
cmpsw
sub
enter
std
jmp
movsl
dec
mov
gs
dec
inc
aad
jle
sbbb
icebp
mov
mov
and
nop
xchg
push
inc
sbb
sti
in
icebp
or
xor
int
cltd
fwait
cmp
inc
shl
or
imul
mov
ss
repz
ror
pop
fdivrl
je
xchg
inc
xchg
pop
cmc
out
hlt
out
test
out
mov
popa
inc
cmpsb
inc
insb
arpl
ret
mov
lods
jge
clc
pop
addb
and
mov
jl
xor
mov
sub
jp
mov
ds
add
in
add
stos
xchg
xor
push
mov
dec
fbstp
in
clc
sub
lock
jp
xor
pop
insl
faddl
lea
out
loop
adc
lcall
rcl
insl
mov
jge
dec
push
ret
and
lret
daa
add
push
push
repz
jle
loop
test
subb
push
lret
cltd
pop
push
mov
cli
test
adc
std
dec
or
sbb
sub
push
filds
jnp
sub
int
in
int
aas
faddl
js
xchg
cmpsl
xchg
ss
ss
jg
enter
flds
sub
jns
data16
cmp
pop
test
arpl
or
mov
testl
fcompl
sub
push
arpl
dec
inc
add
scas
stos
lret
mov
push
jne
mov
mov
rcrb
test
jecxz
mov
cmp
mov
repnz
sub
test
push
mov
mov
and
xor
loopne
ljmp
push
mov
in
mov
xor
mov
fs
movsb
fidivs
sub
mov
enter
insl
push
decl
mov
sub
cmp
cmp
ds
enter
xor
incb
pop
push
xchg
push
outsb
or
mov
cmpsl
add
call
cmovns
fisubrl
enter
push
cmc
sub
pop
mov
cmp
ss
ja
bound
inc
clc
xchg
sub
sbb
xor
ret
cmp
and
push
cmp
cmp
mov
add
mov
fisttpl
out
sbb
popf
test
cli
int3
gs
mov
jne
in
push
aam
sub
lret
fistl
divb
jo
push
imul
lret
jb
sub
nop
into
mov
repnz
or
std
cmp
int3
sub
stos
cmp
adc
inc
inc
xchg
in
jmp
mov
cmpsb
ja
ret
sub
shlb
add
mov
negl
add
test
mov
xchg
add
add
aaa
lea
cmc
sub
shlb
mov
je
add
das
rcr
jg
cmc
xor
jne
cmp
ret
ja
mov
xchg
mov
push
push
sbb
sahf
icebp
mov
mov
pop
out
or
add
jmp
iret
mov
nop
pusha
cmp
xchg
xchg
icebp
or
and
sbb
lahf
xor
ret
divb
mov
nop
xchg
addr16
js
sbb
stos
test
jb
push
cmp
test
push
sbb
lret
pop
addb
int3
aaa
pop
in
push
mov
jge
cmp
sahf
adc
push
dec
in
mov
stos
add
sbb
fiadds
pop
cmp
and
mov
pop
sbb
pop
clc
arpl
int
sbb
jae
sarb
stos
loopne
push
push
filds
and
dec
subl
data16
add
or
lods
pop
sub
ret
cmpsb
test
mov
adc
popa
dec
push
out
fadd
movsl
cmp
ja
shl
mov
pop
xor
pop
adc
mov
add
sub
addl
add
push
mov
xor
and
mov
mov
leave
dec
dec
rcr
imul
pop
xchg
out
sbb
test
push
inc
mov
lds
push
cli
das
lods
jmp
jne
out
sahf
sahf
add
fdivrs
adc
pop
aam
and
mov
mull
jae
iret
daa
fcos
dec
sub
xchg
adc
es
test
cmpsb
loop
je
jb
push
pop
sti
mov
add
xor
inc
stos
insb
xchg
dec
enter
jle
je
fnstcw
dec
out
jg
sbb
cmpl
jns
fmul
mov
push
inc
stos
dec
mov
xchg
pop
fwait
lret
fucom
pop
cmpl
sbb
sbbl
cs
sbb
inc
repz
sarl
das
lods
movsb
into
xchg
call
in
sbb
mov
inc
popa
in
mov
push
call
adcb
mov
cmp
and
mov
mov
xchg
sarb
popf
loopne
mov
nop
mov
in
or
movl
shrl
dec
dec
inc
clc
add
out
lods
sbb
and
in
std
xchg
jmp
pop
inc
out
cli
xlat
jmp
jecxz
mov
aam
cmp
ret
xchg
or
xor
cmp
imul
jmp
sbb
sbb
movsl
mov
cs
inc
sahf
cmpsb
mov
sub
sub
xor
aad
lods
enter
loope
add
xor
fsubr
push
push
or
shrb
cmp
mov
jbe
sub
gs
push
ljmp
and
out
shrl
fimuls
xor
insl
mov
popa
xlat
mov
gs
jo
outsb
dec
pop
jg
sub
xchg
notb
lret
push
sub
bound
test
add
daa
jg
shrl
outsl
out
daa
xor
pusha
cmp
lret
mov
jmp
and
push
addr16
stc
fadds
mov
sahf
and
out
push
pop
mov
jl
iret
sbb
ficoml
jecxz
pop
daa
mov
scas
adc
scas
dec
lods
add
xor
adc
jmp
push
jg
xor
shlb
mov
sbb
lods
xor
lods
adc
or
mov
inc
sbb
js
fistl
xorb
jl
bound
dec
sub
mov
aad
mov
xchg
dec
data16
jle
shlb
and
dec
filds
jmp
pop
mov
pop
mov
sub
sub
adc
mov
fmuls
cltd
inc
jge
push
mov
cmp
ljmp
pop
push
mov
lret
mov
sub
mov
pop
mov
push
mov
mov
pusha
xor
sbb
shlb
imulb
test
cmc
dec
add
mov
sub
adc
jae
sbb
bound
aam
pop
adc
inc
paddd
cmc
or
sbb
lods
push
cmp
outsb
js
loopne
mov
xchg
jmp
add
test
or
mov
jle
ds
int
ss
test
imul
push
test
out
roll
pusha
xor
or
decl
pushf
xchg
daa
cmp
and
frstor
sbb
popf
loopne
cmp
repnz
fsubs
push
shrb
sbb
int
es
das
call
push
xchg
sub
pop
push
mov
mov
cwtl
inc
adc
jbe
sub
dec
jnp
pop
pop
mov
mov
mov
adc
in
cmpsb
flds
fcomps
cmp
rcrb
pop
addr16
jl
push
xchg
loope
out
fcomps
dec
mov
lret
scas
daa
pop
loop
jb
jno
imulb
dec
ror
xor
ret
mov
hlt
gs
inc
shll
stos
je
jb
push
out
leave
jo
jle
lds
or
in
mov
in
sbb
push
das
lret
in
ja
xchg
leave
add
sub
clc
rclb
xchg
xchg
fisttpl
fwait
in
mov
cmp
and
les
add
sub
jmp
add
int
sub
clc
cld
fcoml
pop
mov
mov
in
push
cli
lods
xchg
rcrl
add
shr
adc
clc
aam
loop
sub
inc
cltd
adc
popf
pop
xchg
idiv
mov
push
push
mov
jmp
test
pop
daa
insb
das
xlat
xchg
sbb
fwait
xlat
cltd
cmp
pop
cld
repnz
fstpl
adc
outsb
cmp
adc
cmp
push
shl
xchg
jns
dec
xchg
push
lahf
es
push
jne
ja
pop
and
orb
inc
fisubs
inc
inc
and
int3
leave
lret
and
pop
out
lcall
adc
repz
mov
xchg
add
mov
lcall
enter
push
mov
xlat
aad
push
xor
lcall
arpl
xchg
lret
cmpsb
sbb
lods
inc
mov
out
dec
pop
mov
stc
mov
aad
insl
xorw
inc
xor
loop
sarl
add
xchg
cmp
pop
sub
arpl
mov
es
jo
jne
pop
stc
inc
dec
xchg
mov
fldl
and
leave
jle
or
pop
jg
fwait
adc
push
add
rclb
fiadds
in
cli
xor
scas
clc
pop
rcrb
push
repz
shrl
pop
popf
fldt
xchg
pop
adc
clc
arpl
pop
adc
push
and
into
xor
lock
loop
mov
push
js
stos
les
mov
aaa
xor
outsb
sbb
adc
inc
int
dec
mov
push
pop
push
or
adc
les
movsb
sub
fs
sbb
pusha
cmpl
stos
clc
shrl
cmpsb
or
shrl
dec
sbb
adc
jl
mov
lea
jae
clc
inc
fs
or
mov
jnp
xchg
or
mov
ret
out
push
jae
push
fs
mov
pop
in
lea
or
imul
jmp
mov
cmp
jne
xor
dec
pop
jb
sub
mov
repnz
insl
enter
inc
jne,pt
cmp
add
cmp
mov
andb
jnp
xor
xchg
dec
mov
and
shl
dec
inc
les
rolb
movsb
fisttpl
xchg
cmpsb
push
lds
nop
loope
mov
add
test
pusha
fildl
sub
adc
pop
lods
cmp
and
dec
lock
mov
and
mov
pushl
dec
insl
fldl2e
pop
dec
in
frstor
movsl
and
xchg
cmp
je
and
out
mov
sbb
mov
mov
ret
outsl
jge
std
aas
pop
aam
je
js
fisttpll
cmc
push
aas
push
into
mov
decb
mov
xchg
aas
dec
rcrb
int3
sahf
mov
mov
loope
dec
enter
push
mov
mov
in
loop
pop
push
outsb
sbb
dec
ret
xchg
ja
repnz
mov
addr16
inc
sar
pop
add
mov
xchg
jle
out
or
jle
cmp
jae
aad
mov
jnp
mov
jp
fidivl
inc
int
lret
test
cmp
adc
cmp
sar
sbb
adc
and
cs
jp
adc
xchg
xchg
mov
sahf
pop
ss
inc
inc
jp
mov
mov
imul
jecxz
xor
jp
jmp
into
pop
mov
in
fwait
dec
cmp
push
addl
subl
notb
push
or
adc
jge
inc
push
adc
stos
in
fnsave
dec
fs
mov
data16
mov
inc
and
sub
aad
test
jmp
xlat
popf
rcrl
add
push
out
and
mov
fisubrl
xchg
lock
shll
cmpb
mov
int
and
xchg
loope
xchg
rolb
jp
push
ds
jmp
stos
jecxz
aad
sbb
pop
pop
inc
int3
inc
ficoms
stc
rol
je
lret
push
out
inc
leave
ja
inc
movsl
subb
cmp
or
ss
jbe
sub
xchg
scas
pop
cmp
sbb
mov
push
ret
fadds
ljmp
je
fs
mov
lods
mov
pop
adc
orl
in
or
insb
dec
insl
call
xchg
rolb
add
cmp
dec
dec
pop
pop
add
imul
mov
andb
jae
lret
insb
dec
into
xor
inc
js
push
mov
xor
xchg
push
push
icebp
sbb
clc
xchg
xchg
xchg
jmp
sub
fists
notb
dec
inc
jg
mov
mov
adc
int
hlt
adc
out
sub
loop
dec
aad
mov
es
ret
in
outsl
mov
xchg
jo
lret
lcall
pop
daa
out
xor
mov
jnp
xchg
push
pop
add
jb
dec
mov
movsl
nop
loop
repz
daa
std
sub
inc
sub
pop
call
mov
dec
dec
mov
add
insb
cmp
mov
imul
jns
imul
mov
test
pop
xchg
jne
pop
inc
lods
lcall
push
nop
xchg
sahf
out
and
lcall
and
lret
push
dec
js
jbe
insl
out
movsl
int3
loopne
or
dec
push
iret
pop
data16
sbb
fistl
sbb
xchg
scas
xchg
aam
lret
dec
lods
andnps
ror
outsb
outsb
cmp
loopne
push
js
bound
cs
cmc
pop
xchg
mov
movb
iret
push
ret
jns
arpl
and
mov
sbb
out
xor
es
loopne
rcrb
xor
sub
adc
jns
push
mov
jnp
jle
mov
test
lods
mov
jno
or
push
fsubrs
out
mov
movsb
rclb
cmc
fisubrs
insl
mov
fs
js
add
cwtl
push
dec
je,pt
js
mov
repz
ljmp
lods
std
outsb
js
mov
xor
int
jp
mov
mov
lret
insb
imul
sbb
lock
pop
adc
in
mov
repnz
insb
sub
mov
mov
les
or
jae
les
push
sbb
xchg
loope
and
or
fwait
popf
add
inc
inc
std
test
adc
and
movsl
xchg
xchg
movd
test
sub
inc
aam
cwtl
lock
add
xor
cmp
pop
pop
xchg
xor
divb
test
gs
mov
decb
test
sub
addb
jecxz
push
test
rorb
sub
jge
xchg
shlb
push
cmc
mov
outsb
sub
push
gs
aas
inc
jle
cmp
aad
xchg
jmp
data16
subb
push
es
cmp
sti
ja
jge
and
mov
imul
cld
sbb
imul
mov
cmpsb
ret
push
out
add
movsb
repz
mov
or
dec
mov
jmp
ret
ljmp
addr16
out
sti
icebp
pop
push
inc
mov
repnz
in
sbb
adc
cmpsl
sbb
in
mov
xchg
mov
ret
jmp
dec
out
scas
mov
dec
cmp
in
adc
xor
xchg
dec
imul
xchg
xchg
xchg
xor
add
inc
push
ljmp
jb
std
dec
pop
cltd
ljmp
jne
mov
add
xor
ja
add
aaa
sbb
jns
jecxz
shll
mov
lret
not
scas
stos
bound
jl
push
push
or
jle
dec
dec
fs
xor
or
xchg
sbb
lret
imul
xchg
xchg
cs
xor
lds
cmpsl
push
es
push
dec
jecxz
out
movsb
mov
jns
fcmovbe
cmc
mov
ffreep
leave
cmp
inc
les
jecxz
adc
mov
add
roll
daa
add
mov
adc
ffreep
in
aas
mov
xchg
lcall
imul
mov
push
mov
lods
imul
xor
add
adc
xor
sahf
aam
call
into
add
mov
or
jbe
in
scas
or
cwtl
mov
jo
push
lret
push
push
push
adcl
ret
jb
jo
sbb
or
push
jae
test
jne
cmpsl
test
and
hlt
push
push
adc
dec
jae
das
ret
loop
lock
fiadds
dec
dec
lea
adc
in
stc
cld
sbb
jg
cmpl
imull
lret
int
pop
cmp
repnz
pop
and
arpl
test
lret
mov
popa
inc
arpl
pop
ret
into
cmpsb
stos
mov
push
xchg
push
jecxz
xor
neg
or
cvtpi2ps
dec
addr16
in
dec
add
cltd
into
lcall
fcomps
ljmp
pop
xor
out
nop
sbb
dec
sub
mov
ret
pop
loopne
xchg
loop
push
enter
adc
out
add
xchg
adc
push
mov
dec
xor
push
push
adc
sbb
cmp
cmp
fsubl
sbbb
or
out
leave
xchg
jg
sti
inc
xchg
ret
jne
mul
insl
cmp
stos
test
negb
iret
outsb
in
add
cmp
test
mov
inc
loopne
cwtl
test
cmc
movsl
les
sub
dec
sbb
js
adc
pop
mov
mov
add
xchg
outsb
cmp
insb
mov
inc
sub
push
leave
inc
sub
mov
push
cmc
mov
rcl
dec
pop
cmpsl
rclb
test
hlt
mov
inc
dec
lods
xchg
jmp
pop
sahf
cmp
dec
and
or
sbbb
lds
loop
dec
cmp
stos
fiadds
xor
mov
mov
sti
int3
negl
adc
addr16
out
js
test
push
push
cmc
mov
sub
in
cmp
inc
icebp
xchg
xchg
rcrb
xchg
dec
xchg
ljmp
mov
pop
sub
and
pop
addr16
inc
lods
push
aam
push
in
xor
push
aaa
leave
mov
or
xchg
and
or
aaa
sahf
ror
sti
cs
lcall
pop
sbb
clc
dec
lods
test
sbb
xchg
xchg
pushf
jl
lahf
mov
loop
test
dec
ds
xchg
mov
add
xchg
fs
fwait
mov
jl
mov
sbb
cmp
jnp
or
jge
mov
lock
pop
mov
jae
idivl
inc
mov
mov
mov
inc
scas
fidivl
mov
ret
out
xor
push
popa
lret
addr16
outsb
adc
popf
mov
imul
xor
jae
mov
adc
xchg
imul
sti
inc
mov
mov
and
lods
arpl
add
cmp
into
mov
jl
rcll
pusha
test
xor
adcl
sub
mov
add
fnstenv
jne
or
and
cli
mov
mov
dec
sub
loop
lods
mov
in
out
pop
call
jae
mov
pop
add
adc
movsl
les
imul
jmp
add
xor
scas
xor
jo
mov
xchg
jb
sub
and
xchg
push
mov
jl
test
or
or
fs
mov
inc
test
push
dec
push
lahf
mov
or
inc
mov
jmp
lods
movb
outsb
mov
inc
adc
je
jno
jmp
pop
dec
sti
mov
out
pop
lock
and
dec
adcb
xor
ja
aas
jbe
sbb
popf
scas
inc
dec
cmp
pop
jbe
mov
or
dec
jge
add
stos
jnp
mov
xrelease
dec
inc
std
push
and
lahf
fcmovb
mov
mov
andl
mov
in
pop
mov
lods
lock
les
int3
add
or
inc
adc
pop
push
xor
pop
scas
or
jb
push
xchg
enter
in
push
clc
movsb
test
scas
mov
test
xchg
sahf
xchg
jl
and
cmp
inc
fisttpll
test
scas
out
cwtl
dec
outsb
pop
cmp
inc
mov
jle
cmp
notl
hlt
icebp
push
in
push
pusha
test
adc
lock
mov
ds
fsubs
mov
scas
in
lcall
pop
sahf
push
mov
hlt
and
pop
loop
mov
lcall
movsb
and
cmp
pushf
mov
and
cmp
js
adc
popa
lods
cmp
lret
mov
or
subb
idivl
push
negb
mov
lds
jg
mov
pop
std
out
outsl
and
pop
movsb
mov
ret
ja
mov
jp
xchg
lock
xchg
in
dec
fsubrs
lock
rclb
jo
sar
cwtl
xchg
aas
lret
jbe
adcl
sub
jb
dec
nop
and
lods
int3
scas
inc
leave
dec
outsl
mov
scas
sti
mov
sub
les
jne
jle
andb
cmp
pusha
push
mov
push
test
hlt
iret
hlt
xor
int3
cmpsl
addr16
dec
pop
add
and
int3
fidivrs
mov
jne
scas
int
mov
sbb
and
dec
stc
dec
adc
push
xchg
pop
loopne
jl
cmp
jo
lret
sub
cwtl
outsl
jle
test
popa
sbb
or
imul
cmp
sub
aad
jecxz
or
mov
std
stos
imul
in
nop
pop
and
xchg
sbb
int
xor
adc
addb
cld
addl
stos
outsb
inc
adc
push
fcomp
bnd
xchg
and
shlb
hlt
push
pop
movsb
out
lds
je
imul
rcrl
mov
xchg
sbb
cmp
lret
dec
lods
or
fcomps
pop
ret
or
jl
in
push
mov
movl
lds
inc
and
aad
aam
mov
arpl
cmp
rorb
cmp
mov
shrl
push
or
inc
push
jns
testl
adc
xor
mov
lret
adc
and
dec
cmp
adc
scas
fadd
mov
lret
out
adc
rdmsr
out
lods
fisttps
scas
rcrb
sbb
or
out
scas
clc
sbb
cwtl
jo
push
arpl
movsb
mov
mov
stos
adc
and
fcmovnbe
js
stc
jb
lahf
and
jp
into
xchg
or
pop
xor
add
or
mov
cltd
xchg
gs
adc
ljmp
inc
pop
rorl
ds
dec
jno
repnz
or
gs
cs
sarb
mov
insl
aad
mov
int
and
cmp
enter
repnz
pusha
loope
sbb
lahf
and
sahf
in
pop
out
les
cmpsl
or
shrb
or
int3
inc
mov
test
push
xchg
mov
popf
in
xlat
outsl
sub
std
jno
sbb
pusha
jo
adc
add
jp
rol
movsl
movsb
or
test
ror
aam
aaa
jno
or
out
test
pop
pop
inc
data16
popf
dec
mov
sbb
mov
cltd
ss
xchg
adc
fnstcw
sub
dec
jb
mov
outsb
jb
push
mov
jnp
in
rorl
and
shll
jl
shlb
ret
in
ja
fwait
mov
cmpsb
add
push
sbb
jge
sbb
adc
or
addr16
outsb
arpl
arpl
mov
add
lock
filds
ja
jae
scas
pushf
push
adc
sbb
jne
or
dec
lods
sbb
in
mov
sub
int
cmc
fs
call
enter
xor
inc
or
xor
and
adc
adc
inc
arpl
dec
dec
fmuls
lahf
sahf
insl
mov
and
mov
sub
jmp
dec
or
imul
js
outsl
lret
adc
dec
cmp
std
addr16
cmp
and
aad
xor
push
insl
inc
cmp
lods
hlt
cmp
fisttps
out
push
or
mov
stc
xlat
push
pusha
mov
mov
mov
push
xor
inc
aad
cmpsb
pusha
fisubs
cmp
mov
inc
cwtl
fsubr
and
xchg
scas
mov
sub
gs
pusha
mov
jle
sub
dec
pop
movsb
adc
jge
sbb
pushf
push
jmp
lcall
sti
jg
call
adc
add
add
push
scas
or
dec
push
mov
ficomps
shrl
cwtl
pop
pop
fsubr
insb
xor
sub
pop
call
mov
repnz
aam
daa
dec
push
add
das
ja
inc
ljmp
mov
dec
jg
inc
mov
jmp
sub
xchg
ret
lods
xor
xchg
sbbb
and
pop
adc
es
jb
cli
xor
cld
mov
jno
push
das
adc
or
fwait
sub
push
adc
jae
and
pop
xchg
mov
fucomi
cmp
or
aam
out
out
test
icebp
xchg
xchg
repz
cmp
mov
out
std
cmp
sbb
jl
adc
push
mov
shll
in
xchg
push
pop
aam
xchg
jo
insl
fldl
sub
clc
loopne
sub
out
inc
inc
sub
jle
faddp
push
push
or
arpl
push
or
neg
xor
sahf
mov
enter
jno
push
fbld
add
xlat
push
dec
add
jg
xchg
cwtl
lea
jb
mov
nop
dec
repnz
mov
movsl
nop
jns
push
shll
mov
clc
adc
or
fcompl
pushf
or
adc
movsl
cmp
iret
pop
inc
sub
filds
int
fists
inc
lret
push
leave
dec
lods
repz
xchg
mov
stos
test
incb
xor
mov
cmp
jecxz
movsl
mov
or
push
mov
mov
lret
popf
cmp
out
idivl
mov
lods
loope
in
jb
inc
sbb
add
jne
cmpb
cwtl
dec
sbb
adc
fsub
adc
out
sbb
mov
addb
fildll
test
ja
imul
mov
add
scas
mov
sahf
xor
or
or
dec
push
pop
inc
sti
lods
xchg
cld
mov
adc
out
xlat
adc
jbe
xchg
xchg
mov
pop
cmp
and
and
mov
fisttpll
lret
cmp
push
cmovne
js
shl
flds
mov
jp
loop
pop
int
or
add
adc
int3
jae
ds
inc
pop
push
popf
mov
popa
idivl
jnp
popf
enter
or
fwait
adc
shrb
sbb
call
mov
gs
sub
pop
inc
stc
push
add
dec
roll
imul
dec
icebp
push
dec
lock
test
inc
iret
pop
in
xorb
pop
movsb
pop
sarb
shrb
push
pop
mov
out
jae
aas
jmp
leave
jmp
std
xor
jg
shlb
in
outsb
xchg
and
cmp
cmp
cmp
into
daa
je
adc
fisubrs
xchg
jge
push
or
pop
int3
mov
jnp
out
sbb
adc
aam
addb
mov
out
bound
cltd
or
xorl
sbb
adc
cwtl
mov
dec
lea
inc
fisubl
cmp
fs
int3
movsl
ret
pop
adc
cli
lods
out
sbb
insl
sub
daa
cwtl
and
and
push
fwait
pop
jno
mov
repz
mov
insb
aaa
and
dec
das
movaps
leave
js
sti
les
pop
rcrb
sbbb
jmp
repnz
and
sub
mov
addb
jnp
jo
subl
fdivr
jge
arpl
ret
pushf
fcmovb
call
add
out
out
das
sbb
mov
jae
int3
dec
pushf
fisttpll
data16
addl
ja
mov
aad
dec
xlat
adc
xor
add
push
sbb
xor
adc
sahf
cwtl
push
and
jmp
popf
sub
rorl
dec
cmp
daa
cmp
add
jmp
cmp
lcall
clc
test
xchg
sbb
mov
adc
push
push
sub
les
in
jle
jns
jno
mov
inc
push
movsl
stos
mov
mov
lret
jno
pop
gs
lods
int
add
lea
hlt
lods
mov
fcompl
loope
xor
scas
out
mov
jge
sbb
int3
xor
inc
adc
mov
lea
movsb
or
pop
or
push
xor
mov
xor
cs
mov
xchg
mov
xchg
jae
adc
push
sub
imul
pop
mov
jp
inc
jb
jge
mov
mov
and
ljmp
lret
loope
mov
ja
xor
in
pushf
and
push
mov
mov
xchg
addr16
repnz
fadds
test
mov
fdivrl
mov
roll
inc
loop
adc
xchg
je
push
and
mov
scas
mov
jmp
inc
fwait
ss
xchg
adc
dec
rclb
xor
cwtl
inc
mov
aad
mov
in
inc
imul
or
push
mov
les
xchg
lcall
mov
dec
jno
test
ret
mov
add
cli
daa
sub
xor
icebp
xchg
xchg
push
leave
aam
stos
xchg
and
mov
cltd
ficomps
outsb
inc
mov
loope
movsl
lock
inc
loope
dec
and
imul
incb
js
jg
frstor
cmp
jo
out
in
adc
jo
rcrl
out
push
pop
fistpl
fldenv
pop
mov
jb
lcall
out
cmc
inc
add
iret
mov
mov
adc
cmp
fs
ds
in
mov
inc
data16
stos
popa
jmp
testl
push
je
popf
or
pushf
jbe
in
xor
mov
cli
add
and
aas
shrb
jle
enter
outsb
mov
test
xchg
xor
jae
mov
mov
xchg
scas
cmp
mov
testl
fcomp
push
mov
dec
fisubrs
out
popf
inc
push
arpl
outsl
aam
dec
add
rolb
pop
aas
rorl
pop
inc
xorb
adc
cwtl
xor
test
jno
adc
hlt
fnclex
loope
push
dec
mov
les
mov
sub
jmp
daa
sbb
push
mov
sbbl
sti
pusha
shl
ret
sbb
and
jl
xor
pop
and
rcrl
stos
shlb
or
fcoms
pop
adc
fst
cmc
jg
in
jle
mov
xchg
xor
pop
cmpsl
cmpsl
ss
push
imul
mov
aaa
faddl
lcall
xor
or
fiaddl
clc
push
dec
fcos
dec
dec
adc
add
fdivr
dec
and
repz
mov
push
arpl
sbb
insl
loopne
incb
hlt
xor
inc
adc
pop
adc
mov
daa
pop
pop
loopne
adc
aad
jmp
xor
les
push
es
lods
ficompl
leave
iret
mov
mov
add
dec
sub
outsl
cmp
pop
and
inc
add
stos
popf
sbb
inc
movsb
out
mov
mov
rcrb
or
jae
je
add
decb
push
lahf
jmp
adc
fistps
jle
pop
jbe
xchg
call
bound
aas
mov
test
stc
leave
insb
push
mov
cs
stos
sbb
jo
into
icebp
cltd
sub
arpl
gs
rorb
cwtl
call
and
mov
test
int3
fmuls
mov
cmc
gs
cwtl
sbb
adc
out
add
mov
pop
int3
pinsrw
jo
cwtl
ret
call
ret
and
cmpsl
mov
cmp
cmp
subl
cmc
ja
jno
mov
push
xchg
jge
fisttpl
cmp
lods
adc
mov
push
sbb
fwait
xchg
xorl
les
pusha
jb
test
mov
jae
pop
pop
insb
jb
sahf
out
fisubs
ret
inc
dec
lods
add
pusha
add
test
lret
in
push
or
lods
sub
xchg
into
inc
cmp
addb
mov
cli
pop
and
into
outsl
outsl
fists
es
jo
xchg
out
inc
nop
iret
pop
cmp
xchg
inc
js
push
dec
loopne
cmc
fldenv
and
fstl
or
ljmp
add
mov
aaa
push
clc
data16
arpl
mov
sti
lock
sub
shr
xlat
jg
mov
cmp
or
dec
js
inc
addr16
push
add
xor
ret
and
xchg
dec
fisubl
in
in
in
xchg
int3
add
adc
sbb
adc
aas
negl
cltd
mov
outsl
js
iret
movsl
add
jne
xchg
icebp
and
dec
mov
jg
pushf
pop
push
dec
mov
push
insl
arpl
pop
pop
sub
insl
daa
mov
fiadds
dec
imul
and
btr
add
mov
xchg
mov
outsb
and
lret
xchg
je
subl
sub
cmc
stc
loop
adc
mov
mov
xchg
out
mov
stc
jnp
inc
sbb
aam
insb
mov
inc
or
inc
cld
and
xchg
imul
pop
sbbl
ret
mov
dec
je
stos
xchg
sub
or
mov
mov
mov
mov
and
in
mov
add
jmp
sub
inc
or
out
lcall
xchg
lds
xchg
xchg
fst
stc
xor
push
mov
xchg
repnz
jl
bound
mov
fs
mov
lock
mov
push
mov
add
jl
mov
mov
rclb
ja
ret
or
int
in
cmpsl
cmp
sahf
sahf
loop
shll
xchg
adc
jnp
jecxz
stos
in
in
dec
push
ret
or
fcompl
and
xor
jo
push
ja
movsb
sbb
lea
jecxz
mov
je
push
mov
loope
daa
ss
sub
in
scas
aas
mov
mov
xor
pop
and
sub
pop
loope
push
sub
fmull
aas
lods
dec
sbb
pop
dec
sub
clc
xchg
fisubs
lahf
xor
data16
mov
dec
sahf
mov
sti
sub
push
jne
cmp
add
jg
mov
or
ret
xchg
add
in
jae
repnz
cmpsl
mov
jns
push
aas
ret
popa
stos
dec
xchg
call
les
in
out
jbe
push
sbbb
mov
adc
das
cmc
dec
adc
jge
xchg
xchg
ja
mov
jle
mov
adc
dec
jnp
ljmp
jns
sbb
loop
mov
push
xor
inc
pushf
sbb
pop
sub
ja
jno
fsubl
je
dec
push
dec
push
pop
sbb
js
cmp
xor
mov
sub
fdivrl
pop
pop
or
cmp
lahf
out
in
dec
pop
lods
jnp
jns
mov
inc
cmp
enter
jmp
push
cwtl
dec
dec
mov
addl
aam
cmp
gs
iret
loop
test
push
in
push
imul
cltd
or
xchg
popa
mov
cld
sub
mov
jo
mov
mov
xor
pushf
push
les
mov
es
ja
sub
lea
adc
jae
or
inc
mov
dec
icebp
fldt
mov
inc
sub
movsl
cmc
out
movsl
out
imul
into
add
inc
mov
mov
lods
int
movsb
add
mov
sbb
xor
pop
sbb
aad
hlt
lock
pop
sbb
ret
jg
cmc
test
xchg
adc
adc
mov
movsl
mov
dec
sbb
popf
lret
jl
pop
mov
dec
jb
inc
xor
mov
pop
pusha
inc
rorb
scas
push
mov
adcb
rcr
xor
and
cmpsb
xor
jmp
pop
arpl
outsb
cmp
inc
sahf
xchg
subb
mov
stos
stc
push
aaa
cs
and
rep
jae
shr
lret
loopne
pop
mov
inc
rcrb
cmp
bound
lahf
hlt
pop
je
xor
xchg
test
xor
fs
mov
outsb
in
popf
add
jo
outsl
mov
mov
sub
jp
sbb
loope
pop
mov
test
sbbl
das
stos
inc
push
das
or
and
xor
lret
lcall
sub
xor
dec
pop
lcall
jg
xor
idiv
movsb
or
pop
sub
inc
inc
aas
lock
pop
sbb
fsubrl
or
ret
jle
decl
ret
repz
mov
fsin
bound
fisubs
mov
movaps
adc
je
test
jb
ficompl
sub
mov
mov
or
mov
shl
jnp
cmp
aaa
push
and
or
sbb
push
mov
les
cltd
xchg
xlat
dec
addb
add
xor
imul
js
pushf
jns
xor
lret
adcl
out
fisubrs
pusha
dec
les
jle
repz
fwait
cmpsb
cmpsl
addr16
mov
fdivp
inc
arpl
pop
data16
sbb
imul
cmp
aad
sub
dec
push
mov
sub
test
dec
xchg
test
fsubrs
daa
popf
ror
leave
jl
jle
mov
clc
mov
test
xor
shll
and
fildll
add
pop
sbb
repz
je
and
imul
mov
fidivrl
sbb
movl
pop
adc
mov
jg
inc
cwtl
sbb
adc
andl
jbe
fidivrl
mov
dec
inc
push
inc
push
sbb
sbb
push
inc
jl
mov
int3
loope
imul
mov
jns
dec
dec
push
mov
sti
mov
jle
inc
adc
push
jo
xchg
jb
mov
mov
xor
add
sahf
sbb
cmp
rcrb
flds
inc
cmc
mov
push
mov
dec
gs
ficomps
mov
push
mov
lahf
lods
rorl
repz
add
dec
xchg
xchg
fimull
or
mov
dec
cmpsl
push
and
stos
mov
mov
inc
sti
inc
xchg
jle
lods
lret
pop
inc
mov
aas
push
pop
sub
push
adc
xchg
jbe
jnp
jne
mov
stos
xor
sub
ljmp
mov
ljmp
addl
inc
inc
loopne
sub
pop
or
int3
mov
cmpsb
hlt
lahf
andnps
mov
out
lea
and
xchg
lods
adc
pop
cs
push
lods
adc
or
les
out
ljmp
dec
daa
stos
dec
inc
mull
rolb
jo
loopne
movl
inc
mov
pushf
mov
jmp
ljmp
adc
mov
cmp
lods
add
arpl
sub
in
jp
lea
pop
fst
cld
rcll
fsubrs
dec
add
mov
scas
dec
fwait
cmp
jmp
sbbl
inc
loop
or
imul
or
lds
js
jnp
movsl
sub
out
xchg
inc
sbb
xlat
outsb
dec
cmp
in
fwait
loope
aad
cmp
test
rolb
mov
nop
scas
jle
xchg
jecxz
and
mov
loop
mov
sarl
mov
arpl
xor
lret
daa
testb
inc
jne
jne
sub
into
leave
xchg
cmp
dec
sbb
xchg
scas
call
inc
push
jne
push
sbb
inc
dec
inc
ljmp
ljmp
inc
jecxz
sbb
movsb
sbb
cmp
ret
jae
sbb
je
adc
aad
add
outsb
lock
pop
mov
mov
mov
mov
test
lahf
inc
pop
push
jmp
sbb
sub
int
fsubl
cs
mov
sbb
data16
divl
cli
cld
enter
or
push
in
inc
pop
adc
and
push
ficoms
xor
frstor
or
jns
push
add
movsb
rolb
xor
dec
movsb
ficomps
cmpsl
mov
in
int
and
pop
in
cmp
push
cmpsb
data16
lds
mov
cmpsl
dec
jno
lret
in
scas
arpl
cmp
fwait
pop
nop
in
xchg
cmp
inc
adc
mul
mulb
pushf
fildll
mov
xchg
mov
mov
cmp
cld
mov
cld
or
das
into
inc
jbe
add
inc
ja
je
test
push
cmp
stos
cli
leave
repnz
mov
sbb
mov
rclb
aam
fsts
clc
das
sbb
push
xor
add
int
adc
jne
xchg
mov
rol
xchg
test
loop
lahf
jle
cli
dec
sahf
cmp
dec
inc
repnz
seta
lahf
scas
je
and
fnstenv
mov
loopne
or
jg
cwtl
cld
incl
out
pop
insb
icebp
add
xor
shrl
lds
addr16
jno
sub
out
push
jle
and
decl
pop
fcoms
mov
gs
jmp
mov
fistpll
pop
leave
aas
mov
xchg
xchg
fwait
in
xchg
mov
sbb
cmp
mov
adc
popa
aas
decb
jno
xor
jne
pop
test
mov
daa
fwait
jb
push
or
mov
mov
xor
stos
dec
sti
cmp
das
mov
sub
mov
jp
pop
ljmp
sub
divl
mov
out
insl
jbe
pop
push
xor
mov
icebp
aas
mov
mov
and
mov
cwtl
sbb
das
cmp
lea
fisubl
enter
inc
hlt
iret
arpl
int3
push
test
mov
sysexit
sbb
movsl
jp
clc
add
fnstenv
cs
adc
stos
insb
adc
adc
pop
in
lea
xchg
xorb
dec
sbb
ror
movsb
mov
jns
jb
mov
outsl
je
and
and
jl
cmp
test
jg
fcomps
js
rorl
jge
or
lods
xchg
adc
sarl
sbb
int3
cli
repz
lods
aaa
mov
adcl
movb
cmp
adc
dec
insl
xorl
cmp
or
pop
dec
repz
xor
dec
cmpl
out
push
ds
or
mov
out
popf
sbbb
lock
mov
aad
imul
lock
movsb
and
xchg
enter
test
aaa
incb
jb
scas
mov
cmp
js
rcr
icebp
or
mov
inc
jle
mov
adc
add
jnp
jo
dec
shlb
dec
repz
mov
cld
ja
inc
inc
ret
mov
das
dec
out
dec
sahf
repz
repnz
mov
xchg
cli
ret
daa
clc
adcl
mov
sbbb
pop
jbe
ja
jmp
xor
add
xchg
xchg
or
shl
shlb
cmp
fbld
pop
cmp
inc
xchg
push
sub
sub
push
sahf
and
scas
sbb
xchg
pop
in
fdivrp
and
sti
or
xor
dec
mov
lock
xor
pop
hlt
sbb
pop
pop
dec
push
push
pop
out
int3
fisubl
or
aad
jmp
add
jl
popf
sub
adc
aad
idivb
les
mov
or
push
push
cltd
adc
cmp
mov
xor
jae
pop
inc
inc
das
ss
aad
mov
scas
lea
inc
fcmovnb
mov
mov
or
cli
gs
xchg
rorb
repnz
inc
dec
sbb
jne
or
cmp
call
sbb
push
push
mov
mov
in
xor
gs
mov
mov
test
cmp
je
fbld
iret
cmp
fadds
mov
mov
test
sub
bound
add
lea
insl
sbb
push
out
leave
test
jo
stos
adc
sbb
insb
xchg
mov
or
loope
xchg
cs
loop
cmp
mov
jb
xchg
out
dec
adc
arpl
adc
inc
cmpsl
cltd
pop
jns
xchg
mov
or
xchg
push
aas
xchg
lret
add
jae
mov
dec
out
pop
push
dec
xchg
jne
insb
add
dec
mov
xlat
push
adc
jns
dec
xchg
jae
add
test
dec
into
sub
shrl
cmp
mov
cmp
pop
into
cmp
or
mov
xchg
aam
and
jnp
scas
mov
pusha
int3
pushf
sub
jne
dec
iret
dec
loope
icebp
sbb
test
xchg
mov
clc
cmp
nop
dec
inc
push
xchg
jbe
xorl
mov
outsl
jp
sub
ja
iret
popa
jbe
dec
loopne
add
pusha
mov
lcall
lods
mov
jle
and
ljmp
cs
pop
loope
aas
gs
mov
jecxz
fbstp
mov
and
out
jp
leave
notb
pop
les
fsts
or
or
sbb
adc
nop
mov
aad
mov
add
fwait
or
clc
das
sbb
mov
insb
call
fisttpl
mov
fisttpl
push
fldcw
push
data16
cltd
sbb
adc
push
fnstsw
jl
cmpsl
push
es
jge
sti
repz
orb
sbb
outsb
rclb
fildll
int
popf
std
pop
push
mov
jge
pop
add
test
mov
xchg
loopne
jo
mov
sbb
or
out
imul
testb
sahf
leave
stos
ss
clc
enter
fstl
mov
aam
lea
call
or
push
inc
imul
jg
repnz
and
jo
adcl
xchg
sub
test
mov
jbe
mov
and
sbbl
xlat
mov
mov
cmc
int3
outsl
cli
mov
inc
stc
sub
adc
mov
aad
xchg
xchg
lea
push
cmp
dec
cwtl
sub
dec
sub
arpl
shrl
imul
lahf
vpshuflw
mov
mov
dec
and
push
ja
cmp
sub
and
leave
dec
mov
or
or
mov
sub
and
or
mov
pop
pop
gs
sbb
pop
popf
xor
cmp
mov
js
in
gs
loop
cmp
push
imul
jle
or
les
pop
cld
inc
call
dec
cld
inc
fsubp
jecxz
dec
jl
adc
and
pop
dec
push
sub
stos
mov
scas
inc
addr16
push
jo
sbb
pop
and
jp
movsl
cmp
aad
jmp
cs
mov
or
or
push
mov
popl
mov
test
mov
daa
ds
jo
fs
call
dec
loopne
jnp
imul
pop
sbb
adcl
out
push
loopne
pop
aam
adc
hlt
pop
out
push
loope
adc
mov
out
jecxz
js
jo
sub
add
jl
inc
test
sub
aad
ja
adc
outsl
sub
inc
arpl
add
out
jb
sub
cmp
call
gs
jp
aam
repz
or
aaa
flds
xor
andb
push
mov
mov
sub
fsub
addl
mov
cmpsb
jno
inc
lret
std
sahf
aam
dec
stos
jns
pop
and
insl
test
mov
jmp
sbb
lock
dec
mov
in
stos
mov
mov
inc
pusha
and
jnp
shlb
push
inc
das
mov
lods
and
dec
add
mov
sbb
push
sti
or
inc
cmp
rolb
mov
insb
xor
dec
and
mov
xor
ljmp
or
mov
loop
push
js
aas
enter
pop
dec
push
mov
sbb
js
ret
pand
ds
or
shlb
cmp
lock
add
pop
inc
shl
mov
movsl
mov
sahf
jmp
jmp
into
popa
hlt
or
outsb
mov
std
inc
or
frstor
jns
int3
cli
filds
pop
jmp
pop
jno
sbb
cmp
rorb
sub
enter
cmpsb
leave
cmp
xchg
movsb
mov
pusha
or
cmc
ds
xchg
cmp
popa
bnd
shlb
rclb
add
lret
sub
mov
jbe
push
rcl
mov
cmp
or
int
fcompl
inc
dec
orb
push
loop
fnsave
inc
daa
jne
mov
add
lret
adc
cmp
inc
das
fdivs
and
lret
inc
inc
mov
mov
fistpll
mov
push
pop
ljmp
mov
out
bound
sbb
sbb
xchg
mov
push
mov
dec
xor
mov
mov
rcll
dec
lahf
fs
inc
and
sub
je
pop
sbb
xchg
dec
fstpl
jb
mov
das
jb
mov
jg
fs
xlat
fucomp
pop
jns
dec
movsb
das
gs
ret
or
sbb
shrb
mov
rcl
fldenv
imul
jne
outsb
ja
pop
sbb
popf
aaa
movsl
push
mov
inc
dec
mulb
dec
out
mov
jecxz
jmp
push
push
mov
outsb
addr16
jns
cwtl
and
sti
push
mov
lahf
fistpll
mov
and
imul
idivb
addb
mov
sbb
rorb
movl
jo
in
int
stc
jne
mov
or
pop
pop
lds
loopne
sbb
cmp
mov
hlt
adc
mov
nop
stc
xor
xor
xor
ja
call
movsb
nop
out
sbb
cld
push
ja
adc
stos
jbe
pushf
mov
dec
fs
in
and
shll
fmuls
mov
mov
pusha
mov
stos
loope
dec
cs
into
xor
mov
mov
sar
mov
outsb
dec
inc
testl
xchg
jo
mov
inc
aaa
pop
inc
pop
adc
or
fs
arpl
dec
ss
ds
les
pop
cmp
adc
inc
test
sbb
push
pop
xchg
int
in
mov
cmpsb
xchg
adc
sbb
xchg
jge
fdivrl
push
lods
dec
leave
xchg
or
xchg
cmpsl
mov
inc
or
test
inc
sub
xor
or
ret
insl
add
xor
cmpsl
push
jb
xchg
scas
loope
popa
sub
cmp
jae
arpl
inc
cmp
push
fwait
push
test
jp
or
add
shl
in
jmp
inc
iret
rorb
jl
xlat
pop
cs
ss
lahf
mov
xor
lcall
daa
jo
fldt
fxch
and
scas
adc
mov
call
xor
loopne
int
hlt
or
aad
mov
fadd
cmc
mov
xor
inc
push
xor
jecxz
fadds
pushf
imul
xor
add
addr16
jmp
fst
or
pop
in
dec
mov
dec
mov
fidivrs
add
fldlg2
cmpsl
movsb
ja
roll
cmc
fbld
loopne
mov
lret
outsb
ljmp
jge
loopne
lcall
and
repnz
popa
movsl
fildll
dec
imul
inc
out
fcompl
xor
repnz
test
xchg
push
ret
or
cmpsl
push
icebp
popf
pop
xchg
mov
or
dec
insl
sahf
mov
add
movl
mov
xorl
movsb
or
and
pop
adc
add
cmc
cmp
or
cmp
adc
xor
add
lea
push
aas
xchg
jns
fwait
jg
push
xchg
imul
je
fnstsw
in
loope
add
push
imul
aas
xchg
xchg
insb
int
xor
mov
sbb
clc
mov
sarl
jl
sub
xor
pop
sahf
pop
xlat
in
adc
sbb
vandpd
ret
inc
jecxz
popf
movsl
push
pop
jae
mov
push
dec
inc
jecxz
sbb
out
rcll
ljmp
add
test
lahf
movb
leave
mov
repz
pop
push
sub
sub
and
adc
std
or
popf
iret
dec
or
loop
and
xchg
hlt
push
push
out
rcr
mov
and
dec
mov
fdivp
outsl
fstpl
sti
inc
pop
pushl
das
push
sub
fisubrl
dec
aaa
mov
lds
mov
movsl
subl
dec
pop
mov
and
fadd
sbbl
add
bound
jne
dec
dec
cmp
sahf
or
xor
inc
sbb
cli
mov
mov
adc
icebp
stc
cmovs
pop
push
jno
inc
arpl
ljmp
in
ds
daa
lods
rcll
pop
inc
push
cmpsb
divl
push
popa
xchg
push
lods
inc
mov
lret
jle
out
aaa
ds
xchg
call
ss
fs
or
jns
pop
mov
imul
adc
xor
nop
mov
add
adc
ss
fdiv
notb
rorl
popa
in
and
inc
inc
dec
mov
rorw
stos
mull
sbb
iret
sub
xor
jae
mov
lret
mov
inc
cs
cmp
fmul
mov
ret
lock
lret
rcrb
mov
sbb
mov
jno
insl
arpl
popfw
inc
loopne
shl
mov
mov
jg
or
mov
add
loope
or
mov
push
lds
push
int
nop
cmp
rolb
call
or
and
jle
mov
or
scas
dec
jg
nop
adc
test
test
movsl
aad
leave
rcr
loop
inc
adc
mov
fildl
inc
loop
fcoml
int
divb
ret
mov
stc
inc
push
call
cmp
popa
pop
and
imul
inc
out
mov
mov
pop
fimuls
lock
inc
ret
xchg
and
rolb
cwtl
mov
adc
pop
subb
add
mov
pop
push
out
into
cmp
mov
adc
xchg
or
xchg
cltd
dec
std
jno
mov
jb
mov
fbld
jg
les
xchg
sub
insb
lahf
inc
imul
fwait
into
jp
mov
std
dec
pop
pop
lock
sub
jb
mov
and
mov
push
lods
sbb
ja
ss
push
xchg
mov
inc
xchg
or
xchg
faddl
and
sahf
repnz
adc
mov
jmp
out
xchg
scas
jo
mov
loope
xor
outsb
test
scas
sub
je
test
mov
ljmp
mov
ret
fsubp
pop
das
repz
inc
sbb
dec
inc
or
gs
adc
xor
xchg
push
cltd
or
sahf
mov
mov
sbb
enter
bound
push
out
mov
cmp
jl
push
rcrl
push
xchg
js
cwtl
mov
sahf
in
and
and
into
push
inc
and
xchg
cmp
enter
xchg
dec
sub
add
movsl
in
int3
lds
out
xchg
inc
imul
sbbb
sbb
insl
outsl
rcrl
mov
ja
and
aas
sbb
gs
or
inc
hlt
xor
movsb
add
fldl
inc
xor
in
mov
mov
push
and
xor
setb
in
fs
mov
jae
sbb
mov
jns
jmp
sti
ret
mov
lods
lret
hlt
xchg
xlat
sub
xchg
dec
adc
andb
ror
leave
pop
neg
cmp
sub
into
add
lcall
xchg
push
sti
mov
int3
aas
in
arpl
mov
mov
cmpb
stos
or
push
in
mov
int
fbld
xchg
sub
add
and
add
fbstp
movsl
testl
mov
mov
pop
mov
repz
test
in
dec
sub
js
mov
or
push
add
xor
imul
add
add
in
shlb
and
cmc
lea
push
adc
hlt
or
dec
out
insb
das
out
xchg
loopne
mov
sbb
out
lods
xchg
lods
int3
mov
dec
lea
dec
mov
jne
test
push
lods
dec
stos
push
lds
movsb
int3
push
push
in
cmp
mov
cmp
loop
and
cmp
sbb
mov
pop
inc
mov
fistps
mov
lcall
scas
dec
mov
sahf
pop
hlt
jnp
lods
xor
out
negl
test
clc
mov
pop
insb
and
insb
stos
out
pop
mov
movsb
cwtl
or
ja
test
jnp
imul
leave
or
popa
fcoml
cwtl
es
pop
mov
sbb
or
push
mov
in
sbb
pop
sub
aaa
inc
jo
or
bound
js
mov
es
inc
and
mov
cmpsl
ljmp
push
test
mov
sti
push
dec
fwait
push
adc
stos
insl
lret
std
adc
in
iret
mov
mov
xor
xor
xchg
pop
add
pop
test
dec
pop
push
xchg
decb
insl
push
ss
adc
popa
jle
cmpsb
jecxz
push
jecxz
fwait
mov
xchg
addr16
sub
xchg
rcl
imul
stos
xor
mov
aas
and
pop
jg
mov
iret
add
mov
movsl
movsb
jns
mov
add
fiadds
ret
pop
and
cmp
clc
add
out
popa
in
lea
fcomip
inc
add
and
xor
and
movb
inc
xchg
movsb
xor
inc
psubsw
push
rcrb
nop
lds
cmp
mov
inc
and
sub
popf
das
adcl
or
push
data16
rorl
movsl
or
cmc
dec
jge
in
les
mov
mov
iret
test
fidivrs
dec
call
pop
out
mov
adc
rol
jge
sub
mov
push
outsl
adc
sti
dec
xchg
dec
cmp
jnp
pop
cld
call
ret
loope
lea
popa
cmp
mov
scas
popa
xchg
outsl
aam
ljmp
or
mov
insb
inc
fcoms
cmpsb
fadd
push
push
int3
hlt
pop
ljmp
inc
xchg
testl
je
jge
or
dec
jae
xchg
mov
jno
pop
imul
aas
jmp
notb
mov
xchg
popa
mov
mov
iret
push
insl
mov
cmpsb
or
nop
daa
lcall
pop
dec
inc
dec
pop
ss
ret
shl
cmp
ss
fidivrl
push
ds
cmc
in
in
xor
add
inc
push
ret
inc
aas
imul
mov
ljmp
cwtl
rcr
aaa
cmpsl
jl
cmpsb
mov
shl
mov
mov
sub
pop
sbb
mov
out
xchg
sbb
push
popf
fsubrl
dec
fimull
pop
mov
cli
and
and
or
icebp
and
insb
in
xchg
mov
pushf
call
mov
rolb
mov
rclb
mov
ss
mov
xor
js
inc
cmp
je
arpl
mov
aam
push
shll
dec
ds
pop
cli
mov
idiv
adc
push
mov
loop
mov
push
scas
dec
gs
repz
push
inc
xor
dec
xor
push
jns
mov
adc
popf
pop
lock
dec
inc
xor
mov
sub
das
push
jmp
popa
aas
stc
das
fwait
leave
inc
mov
pop
push
and
out
add
loopne
insb
jnp
jecxz
push
mov
mov
addl
sbb
adc
cli
aam
lods
test
lds
mov
ret
cld
and
lcall
out
adc
cmp
jns
sub
push
lods
lcall
aas
repz
inc
push
into
cmpsb
pop
xor
lods
mov
pop
xchg
dec
iret
clc
icebp
shll
js
adcl
and
lock
inc
loopne
push
add
rorl
pushf
xchg
ds
sub
stos
popa
loopne
test
pusha
orb
pop
sbb
add
pop
mov
ljmp
jle
jp
or
xchg
leave
sbb
fiaddl
mull
jns
mov
iret
push
out
cmpsl
mov
mov
fistpl
inc
pop
in
cmpsb
mov
add
hlt
jmp
mov
testl
xor
cmp
jb
inc
jno
cli
sbbl
jge
mov
sbbl
test
add
aad
aam
mov
popa
cmp
mov
test
movsl
add
add
loop
jmp
lret
int
adc
or
pop
mov
xchg
rolb
adc
push
xor
mov
push
mov
cmp
in
lret
jb
push
and
int3
mov
mov
add
lock
enter
clc
push
imul
pushf
mov
clc
scas
cmp
xlat
pop
xchg
sbb
sub
pop
test
mov
ret
in
xor
icebp
inc
lods
lret
and
lods
pop
test
sbb
dec
or
and
ucomiss
in
addb
ret
cmpsb
mov
mov
dec
not
pop
movd
addr16
pop
jae
sbb
cmp
loopne
outsb
xor
dec
cmp
mov
jg
or
add
jo
inc
lcall
xor
lcall
and
push
out
in
push
xchg
out
sub
jecxz
int
mov
adc
js
pop
push
es
mov
xchg
xlat
mov
repz
jo
out
sbb
mov
fcmovu
ljmp
push
jge
std
cmp
in
xchg
les
notb
inc
test
jmp
xor
imul
fptan
addr16
cltd
into
dec
push
clc
decl
cmp
scas
popf
and
inc
clc
sbb
into
jnp
xchg
xor
inc
add
notb
hlt
xor
sub
fidivl
xor
fwait
cli
into
jge
sub
pop
andb
cltd
cltd
mov
mov
leave
arpl
nop
or
mov
sub
orl
pop
sub
insb
push
nop
add
lret
enter
lock
dec
iret
lods
test
std
movsb
cli
jl
mov
call
and
mov
shrl
push
ljmp
sub
icebp
and
or
jmp
sbb
fstl
mov
fsubrs
dec
xor
in
test
out
repz
fsubl
insl
and
and
sbb
dec
mov
repz
dec
arpl
xor
ds
sbb
mov
cmpsb
xchg
sub
push
pop
insl
arpl
add
sti
mov
es
push
inc
push
aas
xchg
jb
fldt
add
int
rorb
xor
sbb
js
sbb
fistpll
adc
and
fsubrl
xor
mov
ret
xor
dec
test
push
lock
xchg
or
sti
mov
mov
mov
hlt
cwtl
mov
shr
lahf
xor
leave
sub
test
sbb
pusha
pop
push
cmpsb
fmuls
and
inc
jbe
call
adc
cmpsl
daa
adc
jbe
int
test
testl
cmp
out
inc
adc
sbb
sti
ret
popf
jl
cli
add
leave
pop
pop
imul
fstpl
lret
push
stos
je
shl
insb
mov
jbe
jb
push
lret
movb
out
or
xchg
lea
loopne
sti
movsb
call
fstpl
aad
xorb
js
xchg
scas
daa
push
movl
cs
nop
jp
lods
adc
jge
cmp
pop
lahf
sub
pop
push
lcall
sbb
dec
sbb
insb
mov
or
ss
aad
xor
mov
fcoml
dec
xor
fildll
mov
sbb
aam
aam
mov
dec
jnp
push
dec
rcr
jo
shlb
aaa
lds
les
add
pop
jmp
mov
xchg
int3
stc
pop
daa
jb
icebp
ljmp
mov
addr16
push
stc
dec
cmp
out
jnp
jnp
push
mov
sub
popf
xchg
add
dec
stos
xchg
outsb
fdivp
sahf
pop
mov
or
cmp
adc
aaa
cmpsb
arpl
or
adc
lret
insb
pop
push
jg
mov
jae
mov
and
and
and
in
out
mov
or
ret
and
pushf
lods
in
jbe
rcll
push
jb
mov
xchg
inc
pop
loopne
std
sti
inc
push
mov
inc
fcomps
mov
addr16
repz
pop
and
mov
or
sbb
cld
lahf
in
cmpl
xchg
xor
ss
adc
fisttpl
nop
notl
movsb
inc
xor
cmpsl
aad
xchg
push
pop
cmp
adc
push
insl
mov
sub
adc
jae
inc
roll
inc
inc
push
iret
pop
dec
and
cltd
push
aad
idiv
jg
stos
mov
lcall
xchg
lret
adc
jbe
scas
movsl
ds
sarl
clc
mov
mov
jbe
shrl
xorb
incl
cmp
mov
cwtl
xchg
clc
imul
imul
jb
cmp
mov
ficoml
push
sub
or
xchg
stos
aas
stos
daa
iret
and
outsl
jl
push
lahf
dec
or
lock
std
sub
in
adc
enter
das
ja
xchg
scas
inc
push
outsl
mov
mov
ret
mov
jae
or
mov
movsb
pop
add
ja
mov
pop
fcomp
inc
movsb
cmp
push
and
mov
lcall
popa
xorl
inc
inc
in
xchg
out
xchg
cmp
mov
jp
aaa
lock
insl
sahf
mov
sbb
mov
add
cld
aad
out
inc
sub
add
or
dec
in
out
push
jae
pop
push
cwtl
arpl
std
aam
out
jmp
mov
dec
xlat
xchg
fimull
or
in
repnz
pushf
inc
rcl
inc
ja
daa
mov
shlb
jno
mov
ret
lahf
xchg
gs
outsb
add
cmpsb
dec
mov
jmp
jge
fistps
outsl
rcrl
gs
pop
ret
mov
jmp
sbb
bound
test
loopne
mov
sbb
ficoml
iret
adc
or
and
stos
adc
or
push
mov
clc
lret
daa
aas
mov
insb
fwait
and
fisubrl
push
fists
movsl
add
jne
sbb
mov
scas
sub
or
aaa
data16
movsb
adc
lods
out
xchg
and
aas
mov
movsb
in
je
mov
icebp
or
leave
add
cmp
call
sub
inc
jo
out
in
sub
xchg
inc
add
cmp
lods
movsb
test
cmp
mov
or
in
jp
stos
fcom
push
pusha
std
cmp
cmp
pop
inc
jo
out
push
insl
xor
xchg
in
jl
sub
fwait
pop
mov
adc
cmpl
clc
ss
imul
inc
push
ss
mov
inc
push
dec
add
push
push
pop
mov
jne
jmp
aam
stc
lret
adc
outsb
add
filds
loopne
lea
or
repz
xchg
dec
jns
data16
subb
inc
xchg
ret
lock
jns
in
out
mov
dec
or
jle
ljmp
inc
cmc
push
mov
shlb
ljmp
mov
push
pop
jge
jg
add
lds
cmp
jl
je
jmp
push
sub
jbe
pushf
sbb
jl
mov
add
stc
pop
pop
fisubrs
mov
imul
mov
cmp
inc
cmp
jp
jo
adc
pop
or
arpl
pop
fwait
pop
arpl
mov
xchg
or
inc
mov
mov
cmc
mov
inc
adc
les
ret
push
clc
mul
push
insb
push
fadds
lcall
fwait
ds
sub
lods
mov
dec
xor
sub
jp
dec
andb
jno
mov
sub
out
enter
movsb
repnz
loope
sahf
imul
rcrb
jb
xchg
mov
and
imul
mov
imull
imul
sti
dec
or
je
enter
mov
adc
enter
xor
xchg
inc
push
and
cmpsb
lcall
sub
sbb
push
lods
aad
pop
scas
xor
add
jmp
test
mov
mov
mov
stos
dec
sbbl
sub
push
and
pop
jge
inc
jecxz
mov
leave
lret
repz
xor
cmp
mov
cmp
cmpsl
jge
mov
inc
mov
movsl
mov
push
sarb
nop
pop
test
push
cmpsl
imul
adc
cli
out
jmp
mov
movsl
in
mov
inc
popf
out
loop
pop
add
add
or
cmp
mov
stos
jno
cld
test
out
mov
pop
cmpsl
mov
and
cli
pop
clc
push
xchg
negl
movsl
mov
or
pop
cmp
mov
into
loopne
pop
xchg
rcr
lods
mov
pop
pop
adc
ret
sysexit
or
xchg
imul
addr16
lcall
xchg
add
loop
sbbb
fst
sbb
test
loope
jnp
mov
xchg
xchg
mov
sub
add
cmpl
or
mov
icebp
rolb
lret
mov
cld
shlb
fstpl
cmpsb
mov
das
cmp
loope
add
push
push
inc
ret
loop
add
mov
sbb
icebp
pop
cmp
mov
lods
push
jmp
cmp
xchg
push
mov
loope
scas
rcll
sahf
je
cmpsb
test
outsb
fidivrs
les
add
jmp
nop
mov
shl
rorb
jbe
ret
jne
adc
push
hlt
aam
dec
jle
dec
or
push
mov
or
fwait
sti
dec
push
xchg
lds
add
inc
xchg
repnz
xor
inc
dec
repnz
xchg
jne
jecxz
mov
ljmp
push
imul
mov
icebp
sbb
dec
cmc
loop
mov
iret
mov
imul
inc
movsb
cltd
cmp
sbb
add
out
cli
dec
stos
cld
ss
cmp
lahf
or
add
or
and
adc
xchg
or
xchg
jb
cmpsb
mov
and
fmull
test
pop
stos
mov
cmpl
popa
shr
mov
and
sahf
pop
mov
adc
jmp
cmp
mov
sub
xchg
fs
insl
jge
lds
xlat
cltd
adc
cmp
aaa
inc
outsl
inc
js
push
jnp
in
outsl
xor
adc
cltd
pop
out
jns
or
and
xor
repz
xchg
jb
nop
inc
mov
cmp
sbb
xor
or
mov
loopne
aad
pop
test
jno
cmpsb
cmpsb
in
into
pusha
addl
push
test
and
xchg
mov
leave
push
mov
cwtl
lret
xor
xchg
rcr
sub
insl
mov
loop
jp
loop
xchg
pop
loope
xlat
rclb
out
ret
jecxz
mov
dec
lahf
aad
pop
xrelease
cmp
enter
sahf
sbb
ficoms
mov
test
rolb
aas
or
inc
xor
xor
rcl
and
xor
insb
or
es
jno
pop
repz
fisttpl
push
xor
repz
mov
inc
je
pop
mov
mov
sub
xchg
jge
ret
stc
paddw
mov
inc
arpl
arpl
insb
aam
mov
sbb
mov
rol
xchg
jge
inc
mov
jno
sbb
ret
cmpsl
adc
mov
pop
xor
out
xchg
add
dec
add
or
lret
fsubs
mov
pop
inc
cld
sbb
sbb
mov
test
movsl
rolb
cmpsb
pop
mov
inc
cmp
cmp
icebp
dec
pop
addr16
pop
mov
outsl
sbb
std
movsl
sbb
bound
roll
test
cmp
mov
add
imul
pusha
mov
int3
icebp
jmp
aam
addr16
mov
inc
pusha
adcl
dec
or
push
fwait
dec
loop
inc
rcl
inc
dec
lods
addr16
fistpll
xor
sub
pop
repz
sub
rcr
jmp
cwtl
loopne
enter
mov
mov
jns
nop
adc
and
mov
shll
xor
mov
std
sahf
aas
add
pop
in
in
adc
cld
mulb
inc
xchg
pop
jne
data16
xchg
xor
cmp
and
adc
out
in
hlt
sub
jae,pn
and
aam
test
into
sub
sub
lea
incb
popa
sbb
adc
and
push
mov
and
mov
jge
cmp
xor
adc
push
fisubs
stc
pop
pop
sahf
or
sub
sub
test
sub
rcr
mov
dec
xchg
add
push
mov
pop
add
mov
mov
fistpl
adc
or
cltd
dec
mov
cli
sarl
and
mov
or
repnz
nop
push
test
and
dec
sub
rorl
push
adcl
mov
dec
aad
add
addr16
iret
sub
or
sub
jo
daa
sub
jge
push
into
jle
mov
sbb
les
pop
jecxz
jne
rcl
mov
scas
pop
inc
test
es
in
daa
loop,pt
sbbb
add
rcl
sarb
mov
xchg
add
xchg
cs
js
movsl
mov
or
rcpps
test
cli
pushfw
lahf
sahf
push
dec
lods
pop
mov
xor
rcrb
lds
stc
add
sbb
fisttpl
mov
lahf
and
rcr
jge
je
cltd
mov
repz
jne
dec
xor
sub
arpl
mov
mov
in
sub
movsb
dec
std
ss
mov
add
sbb
mov
outsl
icebp
imul
adc
mov
lret
das
mov
scas
ja
pop
fwait
add
sub
imulb
ss
cli
pop
xchg
add
inc
xor
jns
push
sar
fisttpll
ficompl
jg
ja
add
ret
xor
lods
sub
mov
or
aas
out
sarb
xchg
std
std
mov
xlat
mov
sar
sub
pushf
pop
mov
adc
aam
mov
dec
jle
jb
clc
adc
fwait
mov
lock
dec
mov
popf
dec
jbe
pop
jle
std
arpl
xor
les
outsl
adc
sbbl
adc
jns
lock
mov
cmp
inc
call
push
mov
pop
adc
ret
add
sub
ret
inc
pop
xor
mov
inc
mov
push
sarb
jne
xchg
inc
test
fmull
xchg
enter
test
aas
cli
addr16
bound
insl
push
icebp
ret
jbe
and
fdivl
mov
or
inc
and
jns
inc
insl
in
mov
in
xor
xor
or
dec
daa
pop
jp
lds
push
loop
fld
or
outsb
test
cmpsb
call
xchg
sub
test
or
add
fcomip
xchg
pushf
xchg
mov
ffree
pop
loop
test
rcrl
shl
data16
std
insb
push
pushf
and
push
add
stc
sbb
fnstenv
stos
sub
pop
dec
and
int3
ret
sub
mov
loopne
cltd
pop
repz
xorb
inc
testl
jmp
mov
adc
xchg
mov
xchg
enter
inc
fmuls
push
pop
mov
xlat
cmp
push
cltd
jb
pop
jle
push
lahf
mov
out
fs
dec
lret
mov
ljmp
das
mov
pop
arpl
leave
push
cmpsb
lahf
fidivrl
lea
cmpsl
js
out
cmp
mov
sub
imul
mov
cli
sub
iret
xor
mov
xchg
aaa
call
pushf
pop
stc
jmp
push
mov
and
sub
loope
mov
jecxz
fwait
push
cli
pushf
and
and
out
push
add
rcl
xchg
out
repz
jg
lea
rorl
imul
insb
sub
movsl
repnz
imul
xorb
mov
fiadds
adc
jp
dec
fbld
sarb
xor
lods
popf
xor
pop
imul
hlt
cmp
push
xchg
fisttps
push
pop
push
iret
fmuls
lock
or
movsl
rcrl
mov
mov
cmp
ret
pop
addr16
aad
std
bound
mov
ds
jecxz
xlat
movsl
rclb
jno
es
aaa
sub
leave
push
cmp
lret
sti
inc
push
sbb
fwait
push
push
test
js
mov
and
dec
cs
out
inc
loope
add
mov
add
insb
xchg
inc
inc
xchg
repnz
add
jnp
fisubrl
testb
daa
fs
push
or
andb
insb
cltd
push
mov
testl
fcmovnb
pop
jb
mov
cmp
imulb
jmp
inc
or
or
roll
fneni(8087
mov
jbe
stos
inc
inc
jne
mov
mov
pop
and
pusha
xor
lea
ficoml
stos
cmp
sbb
and
loope
mov
cmc
inc
sbb
cmp
aas
ss
std
mov
mov
icebp
imul
call
int
pusha
cli
mov
shlb
mov
push
pop
leave
enter
pusha
xchg
inc
adc
or
or
lahf
mov
inc
mov
pop
insl
sti
scas
push
loopne
push
add
les
aas
test
shll
jecxz
adc
icebp
adc
fstpt
mov
add
sbb
push
mov
das
popf
outsb
mov
mov
xor
les
push
jae
dec
mov
enter
outsl
push
cmp
pop
mov
lods
shrl
inc
hlt
int3
stos
flds
push
cmpsb
jmp
faddl
loop
xor
cmp
mov
cld
je
mov
scas
and
xor
sahf
out
insb
rol
sub
jl
inc
cmp
jns
xorb
dec
popf
addr16
ljmp
lcall
lds
xor
mov
mov
sbb
popa
and
lcall
and
xchg
test
pop
test
out
imul
push
add
dec
push
cmpb
je
jnp
lahf
pop
inc
xchg
fidivl
int3
out
je
insb
data16
pop
xchg
xor
push
push
xchg
sbb
fnstsw
xor
dec
xchg
xchg
push
lds
xchg
adc
pusha
shl
push
add
rorl
or
cli
mov
xor
cs
subl
pop
aaa
popa
es
xorl
adc
add
sub
cmp
loope
xor
into
popf
mov
inc
dec
push
imul
rcr
mov
jg
push
mov
imul
rorl
xor
icebp
in
cwtl
jne
sub
adc
sbb
mov
or
pop
into
rcll
test
dec
ss
sarb
mov
pop
pop
sti
mov
mov
scas
and
fldt
mov
mov
dec
por
sbb
imul
jo
and
out
insb
jl
mov
add
icebp
xchg
shrl
push
test
rorl
sub
test
mov
jp
push
push
sub
sbb
pushf
inc
sub
insb
mov
inc
fchs
push
call
push
sbb
lds
js
mov
sbb
mov
cmp
mov
lea
dec
xchg
inc
test
daa
cmpsl
lds
addr16
pusha
mov
scas
loopne
mov
js
popf
movsl
nop
mov
mov
addr16
leave
xor
add
inc
imul
je
xlat
js
pushl
cltd
nop
in
fnstcw
scas
stc
mov
fisubrl
scas
rolb
addb
sbb
mov
cmp
movsb
jge
or
pop
iret
push
cmp
fmull
or
and
sub
add
push
sbb
jle
mov
dec
fucomip
jae
out
pop
xor
iret
icebp
jg
inc
idiv
pop
dec
jb
fs
jns
fnstenv
ja
rcl
inc
lock
lock
mov
xor
cmp
pop
rcl
fucom
or
aas
imul
inc
xchg
fnstenv
xchg
mov
cmp
loope
rolb
cmpsb
pop
xchg
push
test
outsl
pushf
jmp
test
sbb
popa
aam
movsb
mov
insb
xchg
dec
dec
int
dec
fldcw
jns
adc
js
enter
inc
jge
orb
addr16
test
mov
cwtl
jle
out
sub
cmp
pop
sbb
jns
divb
fstl
or
int3
adc
sub
or
push
fs
fistps
lock
mov
adc
xadd
inc
mov
mov
pop
xchg
insl
aad
sbb
daa
add
stc
mov
push
test
daa
shlb
test
bound
cs
mov
psubw
cmp
inc
ret
dec
imul
pop
scas
clc
loope
cld
test
arpl
das
mov
fstps
fbstp
dec
rcl
scas
xorl
aad
pusha
call
dec
dec
sti
dec
xlat
jne
cmc
xlat
mov
cmp
xchg
fcmovbe
out
mov
adc
cwtl
and
ffreep
imul
pop
cltd
pop
insl
and
into
inc
inc
jp
clc
jge
xchg
loope
jo
andl
xlat
sbb
sbb
insl
jl
fisttpl
cli
xchg
add
inc
and
xchg
in
lock
fsts
insb
jge
iret
mov
cmp
mov
sub
pop
mov
fs
arpl
xchg
loope
rcll
push
mov
js
mov
lock
call
stos
ds
pushf
push
jno
stos
fisubs
ret
lods
nop
pop
jno
mov
push
mov
testl
mov
push
push
ret
fcomip
jge
cmpsl
cmp
sahf
test
call
imul
cmp
in
fdiv
popf
adc
add
inc
sub
fistps
mov
fiadds
arpl
mov
sub
in
push
sbb
xor
test
cmp
push
jle
add
dec
andb
dec
int3
inc
and
in
scas
fwait
and
repnz
cwtl
lds
xor
inc
xor
jg
sub
into
movsb
je,pt
iret
mov
jmp
mov
sub
pop
test
sar
or
mov
in
les
cmc
lahf
push
sbb
insl
and
arpl
pop
std
aad
mul
xor
mov
shlb
jl
sbb
and
aam
cwtl
mov
sbb
mov
cmp
push
int
add
nop
sbb
filds
inc
outsb
xor
xor
add
popf
xchg
mov
sbb
loop
loop
rcl
std
fsubrp
leave
call
mov
cmp
andl
mov
lret
sti
cli
or
xchg
xchg
sub
pop
adc
popa
lods
cmp
lea
inc
push
repnz
cmpsb
sbb
pop
arpl
das
adc
int
dec
jae
ret
jle
lds
push
mov
adcb
hlt
int3
jo
sub
push
cltd
aas
cmp
jmp
mov
rorl
add
xor
sbb
push
aam
pop
fs
push
cmp
fdivs
push
pop
ss
mov
xchg
sub
or
data16
push
sub
ror
mov
mov
or
jns
stos
addl
lret
sub
jns
fcmovnb
adc
lods
lods
roll
adc
aaa
ret
in
sub
ljmp
dec
mov
jae
inc
jb
movq
popa
aas
and
and
je
scas
cmp
xor
xlat
xchg
imul
nop
xchg
in
sbb
fisttpl
sbb
in
setge
xor
sub
jne
js
jg
cmp
mov
cmp
outsl
clc
stos
adc
mov
test
outsb
sbb
mov
shll
sub
insb
jne
push
loopne
cwtl
iret
sbb
xor
push
lods
pop
adc
adc
out
sub
mov
dec
dec
loope
mov
jnp
add
cmpsl
adc
sbb
inc
pop
jmp
sbb
lahf
aad
inc
lods
repnz
or
inc
xor
cmpsb
adc
push
cmp
repnz
scas
inc
mov
jecxz
inc
xchg
pop
movsb
or
and
enter
ljmp
sbb
push
daa
imul
adc
test
rcrl
add
scas
xchg
mov
imul
jg
popa
dec
add
data16
inc
enter
fists
and
jo
add
imul
sub
inc
pop
pop
movsb
repnz
inc
xor
cmc
aaa
dec
and
daa
addb
sub
sub
sub
add
cwtl
bound
pop
mov
or
insb
sti
int3
repnz
pop
jge
in
test
push
add
jecxz
jno
hlt
bound
mov
dec
xchg
cltd
les
nop
inc
aas
mov
popf
jp
gs
cltd
jle
push
scas
xchg
popl
daa
mov
mov
pop
jmp
and
lock
lcall
lods
js
cmp
push
xor
mov
scas
orb
mov
jb
lcall
inc
xchg
rcrb
nop
push
push
pop
lret
mov
ja
sub
lcall
cmp
xor
mov
xor
or
clc
and
push
cmp
inc
sbb
xchg
dec
ret
sbb
add
popf
jecxz
clc
xor
xor
push
add
sub
dec
fimull
std
inc
loop
jl
pusha
cli
test
and
sbb
das
aad
cwtl
stos
cmpsb
pusha
mov
pop
xchg
call
pop
and
sbb
in
sbb
xlat
sbb
rorl
pushf
out
movsb
xor
jg
push
call
jbe
mov
jl
mov
xchg
in
mov
mov
cltd
and
icebp
pop
cmc
sbb
fcmovbe
test
cmp
add
inc
loopne
sbb
mov
jg
pop
sub
pop
sub
jg
push
repnz
stc
or
adc
or
loope
imul
adc
mov
daa
adc
lods
inc
adc
cltd
push
push
in
inc
push
push
arpl
xchg
fwait
icebp
stc
pop
dec
movsl
jle
inc
pop
inc
lea
ret
divl
xorl
cwtl
fadds
mov
pop
push
push
mov
fmul
mov
jg
into
inc
das
stos
repz
ficoml
dec
cmpsb
iret
pop
dec
lods
xchg
fldenv
paddsw
outsb
aas
in
sbb
jno
push
jmp
ret
jae
pop
ret
push
adc
and
call
outsl
int3
scas
test
mov
push
sub
popf
mov
insb
xor
fistl
mov
mov
adc
sbb
outsl
iret
xchg
cmpsb
jno
hlt
shlb
and
pop
lret
push
adc
cmp
sub
mov
pushf
js
dec
inc
mov
imulb
test
ret
adc
jl
lods
sub
or
into
dec
fst
insb
mov
lock
jl
movsb
cltd
adc
sbb
into
xchg
call
pop
push
push
sti
clc
push
jge
ret
js
aas
and
jno
cmp
and
push
fbstp
into
aam
lahf
sti
les
adc
inc
sub
movsb
sub
shr
and
frstor
jmp
jecxz
iret
cmpsb
inc
aam
test
js
mov
in
test
leave
mov
lar
std
or
mov
ficompl
fstps
xor
and
mov
or
push
sub
xchg
mov
lea
cmp
and
bound
iret
popa
inc
sub
cld
jns
loope
mov
pop
cmc
mov
sub
pop
mov
mov
jp
adc
mov
iret
adc
and
les
bound
pop
out
cmp
fcomip
add
lahf
add
sbb
clc
orb
cmp
add
mov
addr16
xchg
loope
pop
mov
cltd
push
xorl
dec
aam
in
decb
adcl
inc
mov
or
adc
imul
inc
shrl
ss
insb
xorb
std
mov
test
popf
gs
mov
call
pop
movsl
iret
dec
aaa
push
and
hlt
pop
arpl
cli
xor
jle
mov
jge
adc
shl
imull
lret
cmpsb
ret
pop
test
mov
repnz
ss
cmp
int3
jecxz
adc
inc
xor
mov
adc
cs
jmp
shrb
inc
pushf
js
les
fcmove
push
push
xlat
fwait
xlat
sbb
mov
add
ss
shl
mov
shll
bnd
notl
sbb
lahf
pop
add
pop
es
icebp
mov
adc
or
push
cmpsb
roll
leave
xchg
cld
cmpl
call
clc
jmp
adc
je
fstpt
jnp
push
cmp
adc
icebp
inc
dec
mov
mov
jmp
add
fstpt
pop
ljmp
into
jnp
mov
mov
or
jp
pop
mov
repz
andl
int
or
pop
mov
cmc
popa
inc
psllw
out
mov
ja
push
mov
and
aad
push
js
mov
pop
mov
inc
push
fwait
test
adc
fst
add
pop
jo
pop
mov
mov
add
or
into
xchg
lahf
daa
xor
pop
cltd
jge
test
scas
and
dec
pop
mov
ror
in
cmp
mov
decb
pushw
cmp
cmp
retw
xlat
fimuls
adc
fstpl
in
mov
add
pop
iret
mov
xor
stos
push
or
ljmp
leave
ljmp
test
inc
push
jb
add
dec
push
xchg
mov
push
cmpsl
adc
push
mov
aam
sbb
mov
add
push
pop
pop
inc
lock
jle
sub
cmp
jmp
shlb
dec
cmpsl
lods
adc
mov
jo
popa
nop
scas
jmp
add
mov
ja
lea
push
pop
arpl
xor
fdivs
sub
loope
jne
or
cmp
fwait
mov
aaa
push
sub
sbb
inc
fsubp
popa
cli
cli
mov
jle
push
aam
cmp
cltd
lcall
xchg
mov
mov
fmulp
or
fildl
hlt
leave
mov
mov
add
dec
outsb
mov
repnz
xor
add
out
push
fistpll
jmp
ficompl
jae
scas
push
mov
jns
roll
mov
pop
pop
shl
mov
fs
or
dec
add
or
das
ss
and
sub
xorb
in
push
loopne
insb
pop
push
jne
sbb
jae
add
dec
adc
cmc
xchg
dec
mov
jae
es
lods
mov
lret
push
and
jge,pt
and
sub
and
mov
sbb
jne
xchg
popf
in
mov
mov
pop
or
adc
mov
sub
loop
in
and
sub
mov
push
popa
divl
leave
dec
xchg
add
scas
cmp
cmp
mov
sub
lds
fmuls
cmpsb
js
add
pusha
pop
repnz
cmp
cmp
xchg
fstpt
in
test
adc
sub
xlat
ss
and
xor
dec
daa
sub
fbld
clc
or
jecxz
fsubrs
inc
hlt
pop
xchg
lret
out
sti
add
movsl
icebp
in
and
cs
sbb
mov
das
fsts
in
adc
mov
push
test
in
and
xchg
nop
sarb
inc
jae
and
xchg
lods
adc
stos
xchg
and
push
test
aad
xchg
mov
push
push
cmp
stos
push
and
and
ds
mov
in
lods
sti
fimuls
das
xchg
iret
inc
scas
ja
ret
out
mov
adc
xchg
fimull
int
imul
aas
adc
icebp
lods
push
pop
in
cld
jl
imul
andb
ja
sbbl
int
and
xchg
icebp
sahf
ja
sub
mov
gs
mov
push
in
add
sbb
jp
into
push
and
or
cltd
int3
ficoml
pop
dec
push
xor
add
jno
adc
mov
dec
cmpsb
test
cmp
aas
inc
xorl
aaa
mov
pop
mov
mov
out
jns
xchg
scas
sahf
jbe
icebp
xchg
mov
pusha
lods
ss
js
xchg
mov
ror
cli
sbb
dec
imul
sbb
adc
loop
push
imul
mov
or
pop
ja
xchg
into
jg
cmp
jno
xor
lret
sub
scas
pushf
leave
push
pop
inc
pop
movb
dec
ja
fsubl
xchg
jecxz
mov
mov
dec
xchg
movsb
nop
sbb
lods
xchg
sahf
test
pop
ja
lods
cmp
push
mov
rclb
xchg
adc
dec
aad
jge
mov
mov
std
add
mov
pop
das
mov
das
enter
mov
pop
cmp
dec
call
mul
add
jg
outsl
adc
adc
lods
push
inc
lods
jp
xchg
mov
loop
movsb
xchg
sub
jge
jmp
std
mov
mov
mov
inc
sbb
jns
mov
out
in
sub
xor
xorl
mov
fsts
js
clc
inc
lods
popf
out
lods
push
xor
jle
push
and
add
outsb
repnz
cmp
xor
loop
xchg
push
pushf
xor
bound
cs
pushf
int
mov
cmp
dec
popl
and
jno
jne
faddl
jbe
sbb
add
cmp
ss
fadd
adc
cmpsl
inc
lcall
into
mov
push
aad
mov
add
push
les
push
mov
cmp
xor
leave
fldl2t
hlt
xor
cmp
dec
bound
dec
or
divb
lods
fs
repz
mov
jne
test
sub
sahf
push
fsubl
xchg
sbb
and
pushf
das
xor
test
xlat
out
add
xchg
push
and
cs
and
cmpsl
push
mull
pushf
push
in
in
xorb
jmp
jae
gs
call
lret
xchg
sti
mov
in
neg
inc
sub
andb
cli
push
lods
jmp
pop
mov
cmp
pop
sub
inc
fadds
shlb
push
cmp
fists
out
cmpsl
inc
jb
je
mov
pushf
inc
or
scas
mov
fcmovu
sbb
sbb
aad
hlt
inc
mov
xor
insb
pop
dec
pop
and
notb
jge
clc
lret
ret
in
loopne
insb
push
int3
adc
aad
fwait
mov
mov
outsb
inc
test
adc
insb
std
dec
loope
das
into
sub
lahf
roll
mov
daa
dec
dec
fdivs
add
dec
leave
jo
push
xchg
inc
mov
xor
or
dec
or
loop
adc
lds
loop
mov
xchg
jae
stos
je
aas
nop
cwtl
shlb
cmp
or
rcr
dec
lods
inc
lret
or
jecxz
xchg
test
insl
push
xchg
sbb
xchg
iret
inc
outsb
ja
fdivrl
xchg
dec
in
jmp
push
adc
push
movsl
cmp
negb
cmpsb
cltd
popa
sbb
mov
xor
pusha
loopne
stos
mov
sbbb
jno
cmp
mov
jno
rorb
movsl
jmp
xlat
sti
int
dec
inc
test
add
jmp
and
push
push
fidivl
cmp
scas
ja
xchg
jno
cmp
push
outsb
jge
and
lods
leave
mov
int3
lds
notb
testl
mov
leave
popa
dec
hlt
jmp
inc
cs
jmp
adc
popa
sub
mov
sete
add
and
loopne
and
sub
int3
pop
daa
push
inc
push
adc
addb
pop
mov
xor
inc
mov
jno,pn
out
outsl
cmpsb
addr16
add
push
ret
sbbl
jle
inc
out
mov
int3
mov
mov
cmp
xchg
push
push
js
mov
push
in
push
adc
mov
repz
cmp
clc
enter
sbb
aad
pop
mov
push
mov
jmp
pop
inc
jp
icebp
imul
pushw
push
jo
push
ss
popa
mov
add
ss
lret
stos
or
mov
insb
and
movsb
xchg
sbb
xor
sarl
jns
loopne
aam
push
pop
cwtl
sbb
adc
pop
clc
out
and
cmpps
pop
mov
js
je
inc
mov
adc
xchg
ficoms
xchg
add
pop
inc
fwait
pop
nop
push
cmp
adc
out
push
dec
roll
push
out
cmpsl
cltd
push
or
lock
add
nop
cltd
pushf
push
movsb
push
pop
mov
push
lods
push
mov
xchg
add
xor
mov
dec
mov
fsubrl
test
clc
mov
popa
cmp
jo
xchg
cmp
movsl
movsl
push
dec
sub
mov
xor
push
fisttps
sahf
jl
xlat
cli
ja
call
sar
xor
cwtl
sub
xor
push
in
jnp
fsubp
sub
jo,pt
mov
pop
or
in
adc
lret
sub
imul
xchg
aam
inc
in
sbb
rorb
hlt
repz
stos
push
cmpsl
xor
ror
jb
cwtl
fsts
mov
repz
std
cmp
mov
mov
sub
mov
ret
xchg
xor
mov
cmc
mov
cld
ja
js
adc
mov
loop
in
and
leave
je
push
xor
sbbb
mov
dec
ret
cwtl
mov
adc
mov
add
jbe
stos
mov
ljmp
pop
lea
sub
data16
xchg
push
dec
stc
lretw
dec
inc
outsb
testl
pusha
out
xor
das
pop
call
xchg
fprem1
rolb
sbb
jp
push
inc
sbb
rcrb
cmc
xchg
add
jp
test
call
out
sti
mov
outsb
cmp
ljmp
lcall
fcomip
lret
cmpsl
and
and
negl
sahf
clc
stos
inc
adcb
out
mov
retw
lods
mov
pop
pop
mov
addb
call
push
movsl
push
jle
fiaddl
pop
bound
sti
sbb
sub
xor
cmp
enter
ss
xchg
cmp
mov
arpl
xor
jne
ret
pusha
rorl
scas
pop
movb
dec
dec
jne
int
or
mov
popa
stos
inc
fbld
pushf
outsl
push
jecxz
clc
add
sub
and
pop
cmp
sbb
and
mov
xor
sbb
bound
mov
lea
push
pop
xchg
lea
xchg
cwtl
daa
adc
add
incb
xor
insl
fsubrl
push
aaa
shll
xor
mov
or
and
movsb
les
in
lock
xor
in
test
xchg
pop
adc
mov
je
dec
lcall
add
add
jne
stos
xchg
mov
jae
dec
repnz
clc
sub
fcmovb
push
sub
lods
mov
ret
hlt
add
jo
add
pop
xchg
and
loopne
les
ljmp
repnz
mov
adc
and
fbstp
in
mov
push
int
mov
ret
int3
popa
clc
mov
in
mov
das
inc
xchg
icebp
sahf
or
or
aad
push
fsubl
sti
xchg
adc
data16
xor
jo
scas
loope
jecxz
xor
or
scas
test
add
mov
pusha
int
pop
push
outsl
leave
daa
int3
les
push
pusha
cli
and
rcr
push
test
jno
in
inc
mov
repz
pusha
adc
iret
push
popa
cmp
mov
dec
sbb
cmp
mov
outsl
shrl
lods
jmp
xchg
mov
mov
cli
js
cmp
pop
mov
lea
cmp
movsb
xor
xchg
push
add
mov
jmp
xor
lahf
addr16
dec
jl
add
idiv
cmpsl
xchg
cmp
push
pop
jo
sbbl
testb
shll
fdivl
out
sbb
loop
aas
and
add
add
ljmp
sub
sbb
push
stc
cmp
gs
pop
sbb
int3
iret
repnz
jno
in
mov
push
daa
loop
add
ficompl
addl
sub
and
dec
pop
out
mov
aas
xchg
or
xor
in
rorl
jl
pop
fldl
jnp
cwtl
psrld
mov
cltd
mov
add
xor
mov
cli
xor
xchg
jg
lret
clc
aas
jmp
out
nop
scas
xchg
daa
push
pushf
jmp
and
bound
fcmovbe
mov
subb
or
notl
pushf
jb
popf
push
adc
aas
adc
out
sahf
and
and
adc
mov
dec
and
or
pop
push
sub
inc
fdivrs
push
test
fst
push
cmpsl
mov
xchg
pop
icebp
mov
shll
fsubrl
test
mov
lret
add
mov
xor
mov
rep
idivl
pop
shl
dec
xor
push
test
sbb
inc
xchg
test
sub
loop
xlat
mov
cmp
or
cmpsb
xchg
into
enter
ss
out
jmp
fcompl
rorb
push
cmp
cmp
dec
xchg
imul
stc
cmp
ret
or
sub
ja
arpl
scas
xlat
rorl
iret
xchg
ffreep
shrl
jnp
shll
add
dec
or
dec
clc
pop
cld
add
les
xchg
push
jge
mov
adcb
jecxz
sub
push
out
pop
sub
imul
mov
mov
mov
gs
fdivs
sub
jns
dec
sbb
sbb
xor
sbb
pop
xchg
cmpsw
rcl
std
loope,pt
negb
dec
shll
cmp
leave
ds
pop
sbb
out
out
or
jne
sub
out
push
mov
fdivrs
mov
shlb
pop
fxch
push
xchg
frstor
loopne
aam
mov
sbb
add
test
repnz
mov
lock
mov
icebp
dec
iret
iret
or
fmul
cmc
mov
push
and
shrl
push
fcom
mov
and
rorl
mov
push
data16
xlat
leave
dec
cmpsb
sbb
test
andl
xor
push
fstpl
push
aaa
cmp
push
bound
clc
in
mov
imul
inc
push
dec
sbb
in
test
jnp
push
inc
mov
add
icebp
sahf
lahf
sbb
ljmp
test
fs
fsts
dec
sbb
ss
dec
fwait
and
aas
or
jbe
adc
cwtl
sub
dec
ret
bound
icebp
xchg
cmpsb
lcall
pop
mov
insw
sbb
jl
int
or
jb
sbb
jne
mov
cmp
imul
inc
push
in
loop
pop
sbb
adc
aas
sar
rcrb
jb
in
aaa
inc
cmp
dec
sub
jmp
pop
popa
punpckhwd
rcll
sub
mov
pop
icebp
sbb
shlb
clc
mov
jae
bound
sub
aad
cmp
or
mov
or
movsb
out
dec
fsubrs
mov
sbb
pop
push
and
call
and
rorb
push
mov
inc
push
ja
dec
arpl
jge
lret
inc
cli
sahf
sbb
adc
or
lcall
cwtl
cld
fstl
fcmovb
jb
sbb
repz
cmp
mov
inc
jbe
jno
cmp
jbe
mov
push
push
mov
imul
push
xchg
inc
in
lods
sbb
inc
leave
ret
ficompl
add
sub
test
jae
cmpsl
or
mov
insb
scas
add
shrl
pop
jge
cmp
icebp
hlt
mov
xchg
push
aaa
add
lods
mov
enter
test
les
mov
je
hlt
push
outsl
push
inc
mov
jnp
xor
out
push
rdtsc
popa
addr16
jle
loope
ret
xor
push
add
loope
ss
gs
push
adc
cmp
pop
sbb
add
shrb
push
mov
sahf
push
jno
dec
jle
popa
ja
cmc
in
scas
ds
int
insb
add
sub
inc
mov
mov
sarb
xchg
popf
jnp
mov
jge
cmpsb
xor
and
lods
push
jle
adc
inc
mov
jle
mov
mov
pushf
ret
dec
dec
pop
outsb
cs
inc
loopne
ret
add
pop
ss
and
or
push
sub
cmp
lret
xchg
dec
push
jo
mov
pop
or
push
push
shlb
jl
mov
stc
aas
xor
xchg
push
adc
call
iret
pop
sub
stos
sub
cmp
out
dec
inc
xchg
push
rep
movsl
icebp
sbb
shll
js
sub
inc
mov
cld
pop
addr16
dec
jmp
ss
cmpsb
iret
push
xor
enter
xchg
call
lret
lret
xchg
imul
sarl
xchg
rorb
outsl
mov
sahf
es
jo
lea
insl
pushf
mov
mov
and
stos
loop
ret
out
dec
out
cs
or
add
push
inc
sbb
in
je
repnz
dec
leave
pusha
lret
or
notb
sbb
popf
mov
insl
mov
xchg
repnz
loop
cmp
pop
testb
inc
push
xchg
int
fneni(8087
movsb
je
nop
and
add
push
inc
pop
cmp
sbb
leave
aam
push
call
mov
div
xor
ds
xchg
xchg
movsl
jbe
aaa
hlt
aam
mov
subl
fistps
cmp
adc
push
push
push
insb
mov
adc
mov
fwait
lret
xor
push
gs
iret
not
sub
jo
dec
xchg
xor
aaa
xor
dec
dec
or
and
mov
mov
push
add
imul
push
and
rcll
ljmp
dec
out
repz
or
lods
mov
push
dec
nop
sbb
out
popa
inc
lea
and
sar
push
adc
dec
pop
adc
xor
xchg
out
pop
les
in
sbb
cltd
xor
fdivr
push
mov
int3
jnp
or
aaa
mov
or
les
daa
dec
stc
pop
pop
or
mov
mov
pop
in
data16
pop
leave
cs
adc
ret
mov
jg
inc
jns
andb
cmp
cli
ficoml
cli
jo
push
mov
pop
adc
test
jecxz
bound
out
insl
jns
in
ljmp
aas
mov
outsb
add
sbb
sub
and
xchg
add
mov
mov
pop
adc
nop
sub
scas
int
filds
movsl
in
call
push
call
mov
pop
jp
fimuls
fmulp
pop
mov
inc
add
xor
sahf
ret
add
add
mov
sbb
pop
lea
jne
jb
repz
out
pop
cmp
dec
dec
add
out
mov
pop
lods
icebp
mov
fadds
repnz
cmp
mov
xchg
push
lds
push
cli
ret
test
cltd
lods
xchg
mov
push
and
popa
push
jmp
cs
xchg
loop
int
pushf
add
xor
adc
loopne
popf
mov
xchg
ljmp
and
sub
test
sbb
push
out
int3
pop
out
and
fwait
jp
cltd
lret
cmpsb
mov
cmp
es
lret
push
mov
add
mov
hlt
ja
add
enter
mov
out
mov
das
fisttpl
jno
xor
gs
daa
pop
mov
adcb
or
push
inc
bound
xchg
push
stos
in
aas
clc
jecxz
push
push
lret
jg
xorb
pop
mov
push
lret
and
xchg
and
jecxz
pop
jl
leave
ja
cmp
cmp
jecxz
cmpsb
jns
mov
or
aad
lahf
push
fstp
pusha
loopne
push
clc
adc
pop
push
in
adc
stos
repnz
or
insb
mov
insb
dec
cmp
sub
lahf
les
mov
lock
insl
or
mov
movsl
aam
inc
push
pop
inc
jo
icebp
inc
pop
insl
mov
and
movsl
mov
push
popf
jb
dec
or
sub
pop
and
cmp
xor
gs
xchg
or
rorb
aad
jg
cmp
pop
xorl
jns
mov
fdivs
jp
mov
loope
jno
lret
rcll
dec
jge
dec
stos
mov
clc
jns
mov
add
in
xchg
dec
inc
out
pop
aaa
jmp
mov
gs
cmp
add
es
or
aas
insb
pop
mull
push
cltd
movsl
iret
mov
xor
sbb
jns
std
jg
ret
adc
movsb
jmp
in
add
loopne
and
popa
xchg
jnp
sbb
dec
fimull
jae
call
je
andb
cld
aam
inc
and
shll
cmp
mov
into
fists
shrl
std
fnstenv
and
out
rcl
test
lea
xchg
scas
out
cmpsl
sbb
inc
fcmovb
fnstenv
andnps
xor
add
jnp
push
jo
sbb
mov
sbb
les
ror
sub
int3
sbb
cmpsb
loope
loope
or
test
cmp
xchg
test
aam
xor
xor
jle
xchg
ljmp
add
gs
aad
mov
dec
shlb
and
add
mov
dec
test
sbb
sti
ss
dec
stos
fcom
mov
inc
dec
xchg
mov
pop
into
outsl
js
fs
cmp
lods
ds
xchg
cli
addr16
xor
jp
outsb
enter
out
repz
in
jnp
sub
sub
filds
add
fsubrl
call
adc
jle
loope
fcmovne
idivb
sbb
dec
xchg
imul
lret
jmp
cmp
pop
jmp
out
xchg
aas
mov
lret
cmp
movsl
aam
fldl
addb
sub
push
enter
rcr
insl
xor
out
lahf
nop
daa
stos
push
cltd
je
push
popf
data16
xchg
sahf
sbb
mov
fadds
das
aad
in
sub
mov
jnp
stos
scas
gs
scas
sub
int
cltd
aad
rol
cmp
and
xchg
cmp
push
das
or
test
imul
call
cmp
jge
cltd
or
fcmovnu
adc
in
push
mov
xor
hlt
stos
dec
data16
sbb
shll
insl
inc
fdivrs
adc
xchg
outsb
mov
es
jb
adc
test
inc
jne
movsb
sbb
dec
sbb
stc
cs
pop
jle
fimull
stc
jecxz
add
mov
pop
lret
lea
int3
daa
push
push
shlb
enter
stos
fnstcw
cli
int
xor
jns
xchg
fsubrp
inc
push
ds
imulb
fwait
in
dec
movsb
xchg
sub
iret
jno
js
fsub
mov
outsl
push
push
ret
mov
or
ss
and
mov
adc
inc
cmp
mov
gs
js
xchg
and
hlt
jle
test
in
je
je
sahf
insl
cld
stos
loope
cmp
xchg
repz
inc
pop
pop
xchg
and
mov
mov
in
lret
int3
or
scas
and
add
stos
imul
pop
pop
scas
roll
mov
sbb
inc
inc
inc
add
jecxz
cmp
lret
push
push
pop
fwait
cltd
xor
jnp
iret
mov
jl
cltd
and
jae
cmp
inc
pop
cmp
mov
repnz
xor
das
xchg
ss
jns
inc
xlat
jle
aad
push
push
xchg
mov
mov
xlat
sahf
push
loop
lahf
ljmp
push
push
sbb
sub
and
into
stos
imulb
push
ret
divl
pop
lods
mov
das
jo
jl
inc
xor
movsb
aas
divb
jae
mov
xchg
cmp
pop
loope
and
push
js
cmp
jo
lds
xor
lret
add
mov
mov
mov
mov
push
insb
movups
push
sub
inc
jp
scas
pop
xchg
mov
or
cltd
cmpsb
mov
and
lods
or
jns
loopne
mov
cli
jne
or
in
hlt
inc
lds
cmpsb
or
cmp
out
lods
leave
mov
scas
js
or
mov
xchg
stos
pop
mov
and
xchg
inc
and
push
jo
jge
rcrl
push
lods
mov
sbb
push
mov
nop
sub
daa
iret
mov
add
out
in
loop
cld
mov
outsl
push
mov
xchg
or
cmp
das
fsubrl
imul
sbb
and
in
pop
outsl
inc
neg
jo
mov
aas
testl
jns
lds
dec
push
je
adc
xchg
xchg
cmpsl
cmpsb
pop
mov
mov
or
add
cmpsb
in
sbb
je
sub
insl
sarl
inc
push
inc
push
mov
imul
adc
xor
pop
fidivrl
divl
call
adcb
add
add
ja
pop
cmp
jns
loopne
pop
ljmp
jl
push
lds
add
xchg
sbb
mov
mov
pop
cli
and
andb
sti
cmp
and
in
aaa
mov
scas
jg
pop
cmp
adc
push
gs
sub
icebp
imul
push
inc
pop
push
xchg
fsts
or
mov
push
or
sub
mov
jns
push
xchg
add
mov
inc
jge
movb
std
xor
insl
sahf
adc
inc
add
push
add
sbb
push
das
xor
mov
and
pop
xlat
push
fistpll
jo
ret
orb
add
xor
mov
jp,pn
fwait
adc
fwait
clc
clc
pop
sub
xor
rclb
out
into
cmp
or
dec
mov
out
addl
stos
scas
mov
mov
mov
std
sbb
out
or
pop
int3
es
movsl
addr16
xlat
xchg
out
xchg
fsubrl
cmp
mov
jle
xchg
in
mov
adc
and
or
jle
fcompl
cwtl
xor
dec
dec
inc
in
ds
adc
sbb
sahf
movsl
in
push
cmp
js
int
and
mov
push
xlat
sub
loop
scas
lcall
outsb
xchg
and
adc
push
mov
inc
xchg
mov
xchg
jns
mov
mov
daa
mov
outsb
icebp
inc
pop
popf
fbld
mov
push
or
mov
or
pop
std
jg
pop
lahf
dec
push
stc
xor
mov
in
outsl
and
lods
shlb
mov
mov
mov
add
shlb
test
test
repz
sub
cmp
stos
sub
or
cmp
push
inc
repz
sub
daa
push
dec
cmp
insb
or
mov
outsb
jb
cmpsl
inc
inc
add
mov
jo
lods
insl
cwtl
push
xchg
cmp
and
dec
stos
dec
cmp
call
cmp
inc
fdiv
ja
mov
mov
scas
dec
mov
enter
mov
lahf
pushw
adc
daa
push
lea
ret
xchg
leave
testb
leave
addl
fnstcw
jmp
in
imul
cmpsl
cs
scas
jge
jns
loope
sarb
adcl
dec
lock
stos
out
aas
and
cmp
lds
push
mov
push
dec
mov
dec
fidivrs
xor
mov
pop
popa
xchg
stc
mov
mov
int
fs
xor
inc
jno
fcmovbe
adc
dec
pop
add
push
movl
xorl
fsubl
add
xor
push
dec
add
xchg
mov
sub
pop
or
imul
mov
jno
test
data16
nop
movsl
fstl
sub
mov
xor
xchg
decb
fcomip
les
iret
in
outsl
mov
dec
dec
mul
lods
push
mov
jmp
sub
out
cmpsb
imul
mov
sarl
mov
cmc
test
mov
sub
and
mov
adc
lret
arpl
cmpsl
sbb
inc
sub
pushf
int
les
test
add
bound
clc
or
sub
jg
push
call
jb
dec
ret
repnz
test
cmp
jecxz
ret
or
mov
aaa
add
inc
mov
push
xor
pop
aam
dec
lret
pop
push
sub
adc
sahf
cmpb
popa
or
test
shll
inc
cmp
jb
in
push
jle
mov
hlt
xchg
shlb
std
inc
imul
mov
adc
push
pushf
mov
push
mov
lcall
sbb
xor
dec
dec
mov
cmpsl
bound
dec
dec
clc
xchg
fistpll
inc
test
xchg
in
fdiv
cmp
lock
cltd
jge
xchg
mov
inc
sub
imul
pop
add
popf
ja
xlat
pop
and
push
aaa
jge
hlt
sti
adc
inc
sub
insb
inc
dec
andb
and
xor
or
std
jae
mov
outsl
aaa
sbb
xchg
fs
or
push
arpl
sbbb
addl
popa
dec
loop
jae
push
sbb
cmp
rol
pop
enter
mov
nop
jge
jp
imull
add
adcl
and
cmpsl
clc
out
out
in
xchg
lea
pop
pop
cmp
ja
call
jnp
ljmp
inc
movsb
jle
mov
push
lods
xor
jl
adc
push
orb
call
out
idiv
and
inc
dec
cmp
or
ror
stos
and
or
mov
mov
mov
mov
add
cmp
jl
mov
mov
xchg
jg
stos
out
in
call
pop
dec
xor
ljmp
xchg
push
mov
lods
inc
adc
dec
loop
dec
dec
mov
jl
mov
add
shlb
int
xchg
mov
js
int3
add
aaa
xor
xchg
mov
repz
pushf
xchg
inc
add
call
push
cli
ss
imul
stc
inc
xor
dec
pop
and
stc
or
fistl
fcomp
mov
lock
fisttpl
arpl
inc
cmp
dec
mov
sarb
mov
push
roll
out
cmp
add
shrb
and
fmull
adc
dec
xchg
xor
shrl
mov
dec
fwait
pop
inc
and
cwtl
sahf
xor
xor
xor
faddp
test
xlat
imul
push
xor
loope
push
js
test
cmp
push
inc
scas
xchg
ret
js
inc
js
xchg
out
adc
test
lock
les
dec
popa
rcll
out
orl
xchg
pop
in
mov
rcll
inc
pop
mov
inc
push
mov
sub
addr16
and
movsb
test
popf
mov
inc
pop
mov
sbb
xorb
out
xlat
adc
mov
outsb
cwtl
mov
lea
sahf
inc
pop
lds
lods
stc
data16
or
mov
and
scas
loop
adc
cwtl
mov
cltd
test
sub
adc
js
dec
sbb
gs
pop
cld
cmp
jo
lahf
ret
hlt
mov
push
out
sahf
loop
dec
and
pop
jno
js
imul
jl
jl
fyl2x
add
mov
sbb
jb
dec
nop
adc
inc
stos
ds
jns
rdtsc
mov
lahf
xor
and
push
cwtl
mov
mov
sub
sub
mov
xor
sbb
in
decl
jb
sub
rclb
mov
movlps
pop
insl
das
jae
xchg
or
loope
ss
cmp
inc
inc
or
int3
cmpl
xlat
mov
jmp
add
flds
inc
inc
popf
les
pop
xchg
mov
imul
pop
and
test
sub
test
xchg
in
pop
fcoml
sahf
mov
std
cltd
sbb
mov
cmp
xchg
jmp
dec
cmp
adc
dec
push
out
test
and
pusha
gs
bound
ja
outsb
mov
enter
mov
or
cmp
in
outsb
lods
jg
pop
imul
arpl
out
lods
stc
sbb
out
dec
add
lds
scas
xchg
adc
orb
jmp
add
or
divl
mov
pusha
into
jle
or
xchg
sub
repnz
inc
pop
in
jmp
testb
mov
pop
imul
stos
xor
pop
xor
sub
cltd
cmp
sbb
inc
mov
shrl
xchg
or
push
xchg
jne
mov
xor
pop
push
jo
xor
mov
repz
in
enter
xchg
xchg
adc
inc
in
inc
or
addr16
mov
cmp
bound
add
in
je
hlt
or
inc
inc
sub
sub
adc
jno
xor
lods
cmp
jg
test
xor
cmc
or
jl
fstps
movl
roll
xchg
push
nop
cmp
pusha
fildl
xchg
dec
inc
lods
fsts
or
cmp
and
jno
out
movl
cmp
shll
xchg
jbe
lock
cmpsl
dec
les
mov
dec
xchg
push
mov
int3
cld
xor
sub
hlt
repz
hlt
iret
les
loop
and
and
ljmp
nop
jge
imul
ret
in
push
and
rorb
mov
mov
aad
mov
mov
je
dec
adc
sahf
and
xor
mov
sub
getsec
jno
rolb
push
mov
jae
frstor
sbbb
js,pt
negb
jb
movsb
or
imul
xor
push
out
push
outsb
fisttpll
arpl
fstps
std
dec
rorb
cmpsl
gs
mov
ja
in
inc
push
dec
mov
mov
sub
xchg
jno
pop
pop
insb
adc
hlt
cld
sbb
aad
psadbw
aaa
daa
and
repz
jl
jle
sbb
and
sub
jl
int
sub
mov
jg
mov
lds
add
sbb
cmpsb
sub
in
dec
sub
add
jmp
xor
inc
loop
dec
test
mov
cli
fwait
call
xchg
data16
push
lods
and
mov
das
dec
sbb
dec
adc
inc
and
ja
or
ret
xchg
pusha
cld
roll
sahf
mov
rorl
insb
jg
int
dec
mov
test
and
xchg
jo
mov
mov
test
push
sub
mov
test
jnp
gs
aam
dec
mov
mov
dec
out
call
xchg
mov
std
adc
sti
pop
call
in
cld
leave
fs
fldt
xor
jmp
jp
sub
ficomps
pop
repz
fwait
mov
cltd
into
adc
lcall
sub
jmp
push
or
add
cli
inc
mov
xchg
icebp
clc
mov
push
mov
mov
cmpsl
xor
mov
enter
add
sbb
cmp
dec
add
mov
jne
jbe
add
inc
outsl
dec
cmp
fidivs
dec
mov
pop
les
lock
push
test
add
push
jns
daa
jbe
pop
and
and
adc
push
int
jb
add
xchg
aam
bound
and
mov
int
in
daa
mov
or
push
dec
nop
das
ret
dec
mov
outsb
push
sub
scas
cmp
or
fiaddl
icebp
popa
repz
and
adc
mov
xor
or
insl
mov
pop
ljmp
aaa
add
cmp
mov
nop
in
and
push
sub
jge
adc
arpl
push
das
loop
mov
movsb
stc
and
mov
mov
repnz
or
in
pop
adc
xchg
das
pushl
mov
fnsave
insl
inc
shll
cmpsl
arpl
subl
or
jbe
icebp
dec
clc
sub
repnz
sub
xorb
xor
jmp
in
add
and
pushf
cld
inc
mov
dec
lock
sbb
out
mov
loop
sbb
pop
xor
lret
out
les
and
hlt
popa
cwtl
data16
jae
mov
sbb
adc
cltd
aam
lcall
mov
movsb
or
test
inc
push
test
sbb
int
insb
adc
jle
out
add
std
dec
mov
cmp
and
sbb
push
adc
or
sbb
clc
fcomp
ljmp
inc
xor
mov
int3
pop
add
add
mov
sti
jp
cmc
out
cwtl
inc
lret
add
dec
lret
sub
jl
push
mov
aam
push
out
inc
out
inc
pop
mov
pop
pop
addl
mov
mov
inc
cvtpi2ps
push
jl
loop
cmpsl
pusha
nop
xchg
mov
push
xor
mov
cmp
cmc
aad
pop
stc
inc
inc
loopne
call
stos
push
mov
int
ss
xor
push
sbb
pop
jne
jns
cmpsb
sarb
into
stos
arpl
or
loop
jno
or
es
mov
ror
jno
push
stc
scas
sti
add
ja
imul
pop
push
xchg
mov
mov
or
lea
mov
repz
xchg
pop
lcall
jo
dec
movsb
mov
loope
outsl
pop
pop
pop
in
test
mov
sbb
loope
cmpsl
insl
lret
outsb
xchg
mov
xchg
jae
add
jmp
out
xchg
cmp
adc
add
insl
mov
inc
pop
sub
mov
subl
aam
ds
or
adcl
sbb
movsb
stos
lea
push
out
mov
out
sarb
pop
inc
in
ja
push
and
das
adc
mov
dec
mov
jp
fwait
outsb
xchg
popf
rcrl
jecxz
jbe
mov
jo
popa
mov
ds
stc
mov
mov
daa
sbbl
xchg
ficoms
lahf
cmp
lea
dec
loope
push
push
inc
std
xor
insl
jge
mov
mov
sbb
mov
and
icebp
cmp
jne
es
xor
out
pop
and
push
cmp
jecxz
dec
xchg
pop
std
mov
ds
add
repz
cmp
negl
lcall
add
jecxz
cmp
xchg
fs
mov
jnp
mov
xchg
clc
pop
lcall
loop
mov
pop
sub
setno
lea
or
pop
es
nop
inc
inc
mov
push
das
sahf
aaa
jg
cmp
push
dec
add
sbb
mov
movl
fcompl
inc
sub
sub
test
test
outsb
lds
mov
inc
or
xchg
int
jp
fcmovnbe
das
dec
pop
mov
das
cmp
leave
xchg
pop
adc
in
test
jo
pop
push
and
mov
and
jle
or
and
mov
jns
jmp
loop
mov
xchg
fwait
cli
mov
movsb
pop
or
fsubp
sbb
sbb
inc
mov
mov
bswap
popf
xor
inc
mov
adc
xor
jmp
pushf
sbb
lret
inc
xor
push
daa
sti
aas
adc
mov
lret
cmc
outsb
mov
shlb
push
xchg
mov
dec
lret
int
mov
or
mov
enter
pop
sub
repnz
pop
andl
movsl
mov
repnz
in
loopne
inc
add
out
sti
cli
mov
adc
sarl
outsl
popf
lret
call
inc
sbb
jle
adc
push
iret
cmp
movsb
sub
mov
fcoms
lods
out
es
outsl
mov
test
inc
lods
popf
jl
shrb
test
out
mov
xchg
sub
push
add
lods
js
imul
inc
mov
popf
mov
cmp
add
jle
sbb
add
cmp
jno
popf
loop
pop
aam
fistl
and
xor
mov
and
and
lret
shll
je
sub
mov
or
dec
push
xchg
call
xrelease
cmpsl
mov
add
push
inc
push
call
popf
out
lahf
shlb
xor
xchg
mov
pop
ficomps
xlat
mov
mov
lock
add
adcb
loope
sbb
push
or
mov
scas
jl
cmpsb
imul
pop
cmp
inc
mov
xchg
movsl
push
inc
mov
sbbb
mov
sti
cmpsb
adc
loop
push
pop
sub
mov
cmp
outsl
add
xchg
stos
nop
sti
insl
sub
mov
jno
ja
cmp
and
aas
hlt
dec
lahf
ret
out
shl
mov
push
pop
mov
ja
mov
pusha
mov
dec
sub
call
sbb
popf
lret
jg
or
pop
jp
push
and
imul
fwait
lds
into
mov
push
pop
int3
or
insl
lods
jge
jno
pop
push
movsl
jmp
push
ret
sbb
pop
leave
sbb
mov
push
xchg
call
bound
lret
and
in
rcrb
sbb
loope
pop
sbb
aas
jb
mov
lods
popa
xchg
add
cmp
std
orl
ret
xchg
rol
int3
push
sbb
mov
repnz
incb
xchg
inc
das
xor
nop
xor
pusha
lods
pop
pop
jecxz
mov
dec
mov
sbb
dec
push
je
int3
jae
lods
push
imul
hlt
in
mov
cmpsb
mov
loop
loope
jb
push
lret
xor
push
mov
sub
adc
insl
mov
fs
or
mov
push
pop
cmpsb
push
xchg
hlt
decb
mov
pop
adc
dec
in
loop
and
insl
and
xchg
add
cld
adc
cmp
lcall
sub
jne
imull
sub
xchg
mov
aad
mov
push
pop
jle
repnz
mov
add
and
xchg
cwtl
inc
decl
incb
lea
dec
cmp
xor
mov
inc
lret
adc
cmp
in
mov
cmp
stc
xor
pop
sbb
add
xor
pop
mov
cmpb
fimuls
aam
test
jo
out
lret
pop
mov
jp
dec
xchg
mov
outsb
add
int3
cs
rcr
pop
pop
scas
cmpsl
stos
call
push
mov
pop
inc
xlat
fs
cmp
xor
pop
movzbl
pop
idivl
sub
sbb
call
and
js
sub
in
mov
mov
scas
jecxz
inc
js
xchg
roll
ficomps
push
jns
mov
xor
cmp
popa
cltd
dec
mov
sbb
jmp
cmp
inc
shll
fstp
cmpb
and
hlt
out
cmpsb
mov
ljmp
lret
dec
inc
xchg
inc
sbb
pop
sub
inc
inc
xchg
pop
and
stc
xor
push
mov
mov
daa
enter
inc
mov
enter
pop
pop
push
cwtl
out
sti
movsb
and
jb
mov
sarl
cltd
or
jbe
leave
lret
sbb
push
xchg
xor
xchg
inc
pusha
std
jae
dec
lds
mulps
jp
rep
pop
pop
cmpsl
or
xchg
lcall
jnp
arpl
shl
mov
jno
cwtl
sub
sti
jbe
or
pop
cmp
and
sub
aaa
and
or
pop
inc
pusha
mov
insb
sti
xlat
sub
push
ss
sub
out
repz
push
add
in
or
out
adc
addr16
pop
ss
sub
xor
or
sbb
sbb
icebp
shll
into
jb
dec
jl
push
lret
jns
or
les
popa
gs
sbb
stos
insb
xchg
dec
cmp
ds
les
and
sbb
repnz
push
les
inc
mov
xchg
xchg
push
jp
repz
jp
jns
dec
aas
or
mov
cmpsb
cwtl
xor
shl
testl
push
lret
mov
mov
push
fidivl
cli
pushf
icebp
ret
in
add
xchg
adc
dec
cmc
jbe
push
sub
pop
xchg
insb
les
lret
push
pop
insb
int
test
add
or
loopne
push
pop
sbb
push
cltd
pop
sti
fisubs
rcrb
iret
ds
push
jle
lahf
inc
rclb
loope
js
imul
pop
cwtl
xchg
xchg
in
ret
cwtl
xlat
sbb
inc
xchg
mov
scas
jnp
out
pop
mov
and
mov
xor
out
xor
stos
mov
popa
popf
call
adc
push
ds
cli
pop
outsl
fildl
sarb
mov
int
add
jne
incl
cmp
cmp
push
jnp
adc
std
shlb
outsb
out
xor
daa
inc
cmp
add
popf
imul
cltd
mov
rcll
cmpsl
mov
repnz
cmp
mov
jl
loopne
cltd
sbb
test
mov
jp
aas
xor
invd
pop
inc
mov
xor
addb
sbb
stc
insl
insl
dec
arpl
aaa
jg
mov
or
insl
mov
scas
cmp
stos
jbe
mov
jmp
fstl
jmp
js
adc
pushf
mov
push
sbb
rorl
lods
lock
mov
fwait
cmpb
data16
lret
dec
pushf
jge
push
add
mov
dec
dec
rcr
cmp
mov
pop
adc
daa
cs
les
movsl
adc
pop
xchg
fsubrl
dec
xor
adc
movsl
dec
das
jbe
int3
in
faddp
lahf
sbb
daa
adcb
andb
jno
adc
mov
mov
in
addl
cmp
sbb
shlb
mov
dec
and
cmp
and
mov
mov
push
mov
mov
sahf
xor
enter
mov
insl
sub
add
shlb
scas
das
dec
and
pop
jne
dec
push
xor
mov
adc
xchg
mov
dec
repnz
sub
shrl
dec
inc
sub
je
std
mov
sbb
loopne
out
pop
inc
outsb
icebp
pushf
or
jge
inc
sub
aad
mov
cmp
adc
call
xchg
lds
arpl
adc
add
lret
fisubrs
mov
adc
lea
cmp
dec
and
dec
pop
loope
and
dec
jp
fbld
pop
mov
mov
cmc
adc
and
repz
push
pmuludq
shr
jbe
stos
leave
test
mov
enter
push
int3
jbe
xor
stos
pop
popf
andl
sbb
inc
jne
test
movsb
bound
xchg
lea
fidivrl
jmp
ljmp
jge
add
cmpsl
hlt
lock
jle
push
mov
into
mov
push
cltd
jp
aaa
jns
xor
into
int
or
lock
adc
mov
cwtl
mov
or
push
lahf
jmp
imul
push
out
cmc
imul
and
sub
inc
add
mov
jb
setg
mov
sub
out
mov
cs
nop
test
std
subl
lock
lock
inc
ds
incl
scas
push
xor
test
pushf
pop
orl
mov
insb
pop
push
fcmovbe
xchg
sbbl
sub
ss
gs
cmp
jg
cmp
aas
iret
dec
sub
lea
mov
fucomp
dec
leave
outsb
int
xchg
out
inc
js
addr16
sbb
lea
cmp
popf
pushf
or
imul
ret
push
rorl
mov
loope
sub
aas
pop
or
sbb
jmp
and
dec
popf
in
fldcw
or
lret
dec
mov
cmp
xchg
push
sbb
cmp
adc
nop
std
stos
sahf
mov
iret
insl
jb
mov
loop
fimull
addr16
loopne
adc
pop
jp
adcb
push
adc
inc
pop
add
dec
mov
dec
sub
fistl
push
add
roll
mov
sbb
fstpt
test
mov
adc
cmpsl
dec
dec
or
sub
lret
ret
and
mov
push
inc
jg
mov
aas
push
cltd
mov
mov
int3
cmp
ret
aaa
pop
mov
jg
movsl
xchg
sub
shr
and
fnstsw
les
jb
push
into
pop
subb
in
in
mov
pop
lret
xchg
pop
jge
pop
push
jmp
push
icebp
inc
nop
cmp
insb
daa
mov
loope
out
or
and
sub
dec
dec
je
gs
mov
jne
and
cmp
adc
mov
test
mov
jp
jg
cmpb
adc
or
add
clc
cmpsl
lcall
mov
jp
lret
rcl
js
cmp
mov
push
test
pop
ja
inc
popl
sbb
xor
push
hlt
pushf
jnp
fdivl
push
push
inc
popa
xchg
sti
pop
adc
lods
ret
stc
bound
mov
xor
dec
push
loopne
into
inc
inc
subl
and
mov
and
mov
pop
xor
xchg
mov
sbb
aaa
or
aas
or
loopne
mov
addb
dec
popf
jae
and
mov
inc
and
cld
jbe
push
mov
repnz
adc
and
cmpsb
dec
cmc
mov
arpl
das
out
mov
pop
jmp
ds
pop
push
ljmp
xchg
mov
js
aaa
inc
fs
add
ffree
jb
and
fcmovnb
imulb
push
mov
sbb
outsb
xchg
mov
jae
cmp
pop
xorl
and
fsubrs
mov
adc
sub
push
fimuls
das
pop
out
stc
jg
es
pushf
or
hlt
lcall
add
inc
adc
xor
and
dec
aam
sub
cmc
pop
or
cltd
or
push
pop
adc
movsl
in
xor
cmp
out
ficomps
shlb
cmp
ss
xchg
test
jo
lea
jp
negl
cmp
mov
add
mov
mov
test
loopne
repz
jbe
test
cmp
shl
in
int
sbb
outsl
cmp
stc
arpl
cmp
pop
push
jp
ds
mov
shrl
lods
mov
arpl
mov
and
roll
push
sbb
adc
les
pop
and
jb
cwtl
fxch
pop
inc
push
shll
cs
mov
fwait
dec
sbb
push
out
das
fcmove
ds
mov
ret
xor
daa
pop
jb,pt
popf
inc
insb
push
or
and
popf
fimuls
popf
ret
xchg
test
mov
stc
jne
sub
in
stos
xchg
mov
mov
xchg
in
std
jle
jmp
out
pop
inc
cs
xchg
xchg
jecxz
sbb
ljmp
or
mov
xchg
out
sahf
movsb
cmp
loopne
clc
and
es
hlt
aas
lahf
clc
jge
mov
xchg
or
sbb
mov
into
jb
dec
decl
jg
mov
jp
in
out
pop
sbb
push
mov
mov
jg
ja
movsl
xchg
xchg
out
mov
out
es
ret
jae
mov
adc
sub
cmpsl
push
xchg
dec
add
push
mov
xchg
es
test
fs
aad
push
stc
ja
ljmp
sbb
fsubrp
adc
push
mov
or
and
sbb
push
push
push
mov
je
or
mov
std
cmpb
call
cmp
sahf
mov
int3
pop
lcall
sub
or
adc
arpl
in
sub
dec
rcr
dec
aam
mov
mov
scas
add
arpl
or
cli
or
test
cmp
jmp
push
mov
cli
add
sbb
and
mov
add
push
push
js
add
rcr
cmc
mov
xchg
push
and
mov
ljmp
mov
dec
shlb
fstps
nop/reserved
cmp
sti
bound
mov
enter
sti
aad
popf
push
hlt
data16
insl
stos
clc
add
sarl
mov
add
test
cld
ss
shlb
jnp
fwait
shlb
mov
add
jmp
pop
roll
sub
sbb
push
add
lea
call
adcl
shll
shr
in
jecxz
mov
add
add
out
jno
lods
sub
mov
mov
inc
adc
rcrl
insb
and
xor
inc
xchg
or
mov
in
pop
mov
ds
and
push
xor
dec
mov
jp
in
ja
xchg
outsl
push
dec
xchg
adc
cld
pop
scas
lahf
dec
jns
lock
out
mov
adc
pop
imul
stos
in
mov
xor
jle
ret
pop
aas
or
test
adc
orb
sub
mov
stos
cmp
flds
sub
jge
dec
sub
arpl
add
cmc
test
and
rcrb
or
mov
sub
push
adc
fcmovu
dec
mov
nop
and
stos
fsubl
xor
mov
push
inc
and
sbb
adc
test
inc
insl
scas
adc
xchg
movsl
xchg
push
das
insl
bound
in
or
fdivs
jns
xchg
cli
inc
mov
xchg
std
loop
hlt
mov
cmpsl
or
addb
push
cltd
clc
divb
loop
xlat
sub
mov
mov
shl
int
sub
inc
mov
cmp
mov
push
xchg
les
or
fcompl
popf
jecxz
sub
lods
cwtl
popa
xchg
int
jns
push
lcall
insl
fsubrl
subb
jns
fisubrs
adc
pop
aaa
js
andb
stos
mov
bound
adc
insb
loope
mov
xor
test
shll
in
das
and
fstpt
adc
les
mov
std
dec
mov
addr16
test
shlb
gs
aaa
add
or
push
fstps
sbb
add
cmc
push
push
sbb
inc
jno
push
sub
push
dec
out
int3
inc
roll
pusha
and
xor
es
fs
roll
das
outsl
lods
gs
mov
dec
int3
jne
mov
cmp
sub
in
push
cmpsb
push
adc
xchg
sub
lock
inc
or
cmp
sub
sub
mov
ret
pop
adc
add
and
lahf
inc
lock
push
cld
mov
fcoms
xlat
shrl
inc
jecxz
jne
clc
pop
inc
xchg
adc
pop
jecxz
ja
int
pop
out
add
outsl
imul
xor
xlat
dec
std
jp
push
out
movsb
mov
cmp
dec
cmpsb
mov
adc
jle
scas
jle
jmp
xchg
mov
test
call
ljmp
insl
testl
and
jbe
shr
movsl
push
loope
mov
adcl
jno
sub
add
xchg
cmc
mov
imull
jns
vmulsd
incl
loopne
stc
mov
sahf
lds
and
popa
and
sbb
clc
iret
popf
inc
rolb
movsb
mov
mov
jnp
and
pop
push
jo
cmc
dec
jno
enter
jbe
pop
movsl
lods
inc
int
mov
loopne
or
aam
int
pop
mov
outsb
loopne
insl
movsb
div
inc
xchg
stc
aas
or
pop
mov
hlt
pop
and
pop
iret
lea
pop
adc
int
pop
roll
inc
mov
aas
jno
add
xor
imul
push
xchg
mov
insl
imul
or
or
push
mov
movsb
mov
imul
out
test
push
jb
sahf
lea
cltd
cltd
adc
gs
out
mov
frstor
mov
xchg
in
cmc
xchg
dec
jae
mov
fs
push
subl
fs
dec
test
shlb
icebp
call
or
loopne
pop
xchg
repnz
add
movsb
dec
xor
mov
inc
pop
jp
pop
int
imulb
cmpsl
js
mov
add
sub
xchg
mov
push
arpl
nop
inc
inc
or
lahf
xor
mov
mov
xlat
xlat
add
inc
jl
js
and
outsb
sahf
mov
or
lods
ljmp
pusha
cmp
inc
jo
push
je
mov
xchg
scas
daa
ss
push
sbb
sti
fsubrl
dec
ds
ds
pushf
cli
pop
inc
push
cmc
jbe
mov
addr16
in
aad
jns
int
jecxz
pop
jbe
sub
fs
mov
fsubs
repnz
sbb
mov
rcll
bound
pop
mov
jp
jno
dec
roll
pop
daa
imul
sub
jle
data16
arpl
out
adc
dec
pop
cmp
mov
add
push
ficomps
pop
call
insb
inc
mov
xchg
cltd
lcall
fcmovnbe
and
out
out
cmp
pop
jmp
rcrb
push
push
or
xor
add
sbbb
add
outsl
push
push
xor
iret
cmpsb
jecxz
lds
ret
push
push
xchg
ret
rorb
xchg
sub
xor
arpl
lretw
add
cmp
std
mov
push
sub
xchg
jnp
mov
add
xor
mov
mov
int3
dec
xorb
fnstcw
lds
fwait
xor
push
pushf
mov
imul
rolb
lret
fs
imul
push
shl
push
fistpll
aaa
cwtl
test
and
scas
addr16
add
in
jp
cltd
test
addr16
shrl
jno
cmp
call
xlat
cvtpi2ps
jne
inc
xor
push
int3
push
cmc
test
out
movsb
insb
shr
or
sahf
shrb
aaa
into
arpl
fs
aaa
jnp
inc
add
dec
outsb
cmp
mov
mull
rclb
adc
cmp
cmpsl
adc
adc
pop
arpl
jp
in
xor
test
cmpsl
enter
add
dec
pop
pop
pop
scas
jl
arpl
subl
pop
mov
xor
jmp
out
jo
push
adc
push
dec
es
sbb
es
dec
cmp
ss
or
hlt
test
jmp
add
or
add
stos
mov
adc
push
push
cmp
push
sub
fimull
mov
add
rorl
dec
push
push
rcl
mov
call
data16
fwait
cs
popa
xor
pop
sahf
in
dec
inc
and
je
sub
jecxz
push
es
sbb
int
mov
ret
lahf
dec
leave
and
dec
pop
mov
inc
jne
mov
nop
sti
jne
sub
in
ret
rol
xchg
pop
cld
adcb
addr16
repz
mov
aas
sub
stc
adc
sub
ljmp
daa
dec
jne
jmp
sub
stos
jo
aam
fnstsw
xchg
ret
int3
xor
jne
call
shl
mov
in
repz
movsl
adcl
cmp
xor
pushf
xor
or
fs
sti
scas
cmp
mov
mov
xchg
jp
dec
insl
mov
mov
ds
push
pop
xlat
sbb
jp
inc
cmc
cmp
jle
fwait
dec
mov
mov
stos
jecxz
pop
leave
loope
test
out
cmp
add
mov
movsl
add
arpl
ds
pop
pop
das
or
inc
dec
outsb
add
mov
inc
inc
xchg
inc
cmp
in
jo
pushf
jb
ljmp
jb
aas
sbb
or
hlt
dec
ja
scas
test
jae
mov
sbb
cmp
out
cld
aaa
xchg
das
fildll
imul
pop
loope
mov
cmp
je
es
sbb
or
test
adc
iret
outsb
fwait
xor
and
add
pop
add
xchg
push
rcr
add
jmp
push
mov
xorl
lret
xlat
xchg
jecxz
pop
and
sbb
ljmp
jae
scas
scas
shl
pop
ljmp
scas
call
or
jb
data16
subl
fisubl
and
mov
inc
or
add
jl
cmpsl
and
inc
fcompl
hlt
sub
cmp
shll
cmpb
pop
mov
in
gs
scas
inc
cltd
int
xor
mov
lods
dec
hlt
aas
mov
sbbl
sahf
iret
sbb
shld
sbb
movsl
push
ret
pop
dec
and
js
adc
jno
mov
push
push
push
movsl
shll
pop
pop
jmp
cltd
mov
je
mov
pop
dec
inc
sub
add
out
loopne
xor
adc
inc
and
mov
jbe
inc
adc
out
pop
pop
xchg
sbb
cmpsb
lea
js
jns
cli
fadd
jno
dec
or
es
push
push
js
out
sbb
pusha
pop
in
cmp
int3
mov
enter
dec
imul
fcompl
lret
sbb
push
stos
inc
pushf
pop
push
cmp
xor
and
or
loope
xchg
test
mov
jnp
cmc
fs
dec
mov
or
testb
push
out
and
xlat
adc
dec
popa
xchg
gs
mov
sti
ficoml
mov
pop
mov
imul
push
pop
xlat
adc
push
imul
pushf
and
scas
mov
in
subl
in
mov
leave
xchg
push
jmp
stos
sarb
sbb
out
sbb
in
or
mov
sbb
jecxz
outsl
dec
push
ja
std
into
int3
mov
loopne
ljmp
mov
and
jnp
popf
add
jo
stos
ja
lret
pop
icebp
mov
mov
hlt
scas
lock
jmp
mov
in
icebp
ljmp
cltd
fistl
sub
stc
jae
daa
jbe
sub
mov
pop
adc
mov
mov
data16
lods
sbb
pop
imul
in
not
dec
daa
cmc
aaa
leave
and
test
add
push
daa
xor
sqrtps
stos
xchg
es
or
inc
mov
lret
int
add
mov
pop
sbb
ret
movsb
inc
out
dec
stos
add
xlat
inc
inc
test
subb
sahf
loop
cld
add
mov
mov
add
movsl
scas
push
ss
cltd
sahf
push
aas
or
inc
iret
cmp
les
ja
cmp
pop
sbb
lods
add
cmpsl
cld
jne
or
fidivrs
outsb
mov
lret
jb
ret
push
sarb
fstps
ret
movsb
negl
orb
push
stos
mov
push
cmp
aam
sbb
outsl
jecxz
in
fcomi
mov
pop
leave
sbb
andl
xchg
add
arpl
idivb
daa
cmc
mov
daa
mov
cmp
aam
or
shll
adc
push
xor
stc
in
mov
cmp
xor
aaa
jne
pushf
mov
sbb
stos
inc
mov
cmpsb
aad
or
jo
xchg
out
loop
fisttpll
clc
mov
mov
sub
or
in
xor
div
jns
pop
fsubp
or
out
pop
jle
sbb
scas
sbb
dec
mov
stc
add
outsl
or
mov
and
adc
push
cld
mulb
jg
jg
aad
jbe
mov
div
mov
test
dec
pop
mov
popa
adc
sti
sbb
and
pop
xchg
push
push
sub
xchg
inc
mov
fists
pop
inc
notb
mov
xor
in
xor
pop
xchg
pop
and
outsb
jno
sarb
xor
mov
dec
into
adc
popa
jae
test
and
add
rcll
repnz
dec
add
cmc
imul
mov
inc
insl
xlat
adc
pusha
out
cmp
ja
es
int3
test
or
aas
adc
movsl
mov
jb
and
mov
mov
sbb
in
fcmovne
sbb
lds
testl
pop
hlt
setle
pop
mov
add
ror
mov
cld
outsl
cmovno
test
push
jp
mov
lret
sub
fstl
scas
mov
in
fisubrs
mov
xor
ret
cmp
adc
mov
xchg
inc
cmc
lcall
ret
push
into
fdivs
orl
xchg
adc
inc
cmp
pop
mov
rcrl
cmp
push
bound
decb
push
inc
mov
test
jb
out
or
out
mov
adc
mov
subb
mov
imul
xchg
stos
push
cmp
or
mov
pop
sarb
ss
jbe
cmp
popf
sti
inc
pop
in
or
mov
mov
mov
adc
cmp
xchg
js
stos
xchg
rolb
push
ret
fdivrs
push
cmp
or
outsl
xchg
cmp
dec
nop
adc
cltd
mov
scas
and
out
mov
pop
call
sub
fdivrl
mov
xchg
sti
dec
add
les
and
popa
iret
dec
mov
enter
popa
icebp
ljmp
das
int3
rcll
dec
jecxz
inc
ret
mov
movl
xchg
arpl
lods
add
sbb
adc
mov
sub
pop
lods
hlt
fwait
idivb
xor
xor
pop
mov
cmp
push
pop
aaa
pushw
xchg
inc
cltd
scas
stc
mov
inc
cld
add
notb
mov
mov
int3
neg
imul
daa
pop
int3
and
rcl
add
js
and
insb
in
aas
xchg
cmp
mov
test
mov
add
bound
orb
inc
mov
loop
sbb
lds
adc
jp
inc
pop
fiadds
sbb
sti
cmp
lahf
mov
or
push
iret
jns
push
pusha
popa
inc
cltd
iret
xchg
fs
rol
data16
pop
loop
inc
imul
mov
inc
sbb
dec
cmpsl
dec
push
inc
push
dec
cmc
pop
and
inc
pop
call
or
xor
push
cld
xchg
xor
adc
xor
inc
icebp
sbb
or
bound
dec
sub
sub
pop
cmp
jae
xchg
sahf
adc
fsubr
adc
lods
fadds
mov
test
scas
movsb
aam
insl
sbb
stos
movb
movsb
aad
or
jno
les
mov
sahf
clc
call
xchg
and
fidivrs
test
out
push
aaa
adc
pop
jp
mov
and
int
and
inc
xchg
dec
and
and
outsb
loop
adc
subl
pop
cwtl
dec
adc
scas
push
ret
jg
repz
cmp
add
mov
aad
and
inc
cmp
cmpsl
repnz
adc
into
xchg
lret
rorl
mov
and
test
mov
xchg
adc
xlat
inc
push
clc
out
int
icebp
iret
daa
aam
pop
imul
lods
push
mov
jecxz
push
ret
inc
cmpl
xchg
pop
sbb
mov
xchg
cmpl
push
leave
les
and
pop
std
pop
jecxz
notb
mov
or
sub
mov
push
inc
sbb
cmp
mov
cmp
imulb
ret
jnp
fcmovne
jge
aad
negb
cmp
inc
xor
popf
xchg
sar
dec
inc
pop
into
mov
es
in
cwtl
enter
xchg
div
dec
lds
in
cwtl
sbb
inc
jl
jge
add
inc
xor
cmp
pop
mov
mov
lret
jae
test
insl
cmp
push
xlat
xor
sbb
and
lds
xchg
pop
pop
fcomi
mov
or
je
inc
pop
ret
cmpsl
sub
test
xchg
or
sbbl
fcompl
sub
adc
jp
sub
xchg
aam
mov
jnp
mov
aad
cmpsl
dec
add
lcall
xor
pop
int
mov
xorb
sub
pop
test
clc
repnz
pushf
xchg
push
pop
movl
xor
or
in
and
ja
ret
mov
cwtl
out
push
jg
cld
cs
nop
mov
sbb
cmp
sub
sbb
adc
and
in
cmp
clc
aam
cmp
movsb
jl
sub
lock
fs
clc
fldl
orb
xorl
cmpsb
dec
sub
xor
int3
jle
inc
nop
mov
push
xor
cmpb
push
push
add
repnz
jnp
icebp
add
mov
jb
pushf
pusha
push
arpl
push
icebp
push
mov
scas
sbb
and
popa
dec
int
jge
mov
cmp
fcoms
mov
dec
mov
das
pop
jb
sub
cmpsb
sbb
lahf
out
lock
cmp
jns
loopne
ss
ret
push
mov
cmpsb
fistl
push
sub
sbb
ret
adc
xchg
pop
jmp
pop
or
push
ja
mov
jb
movsl
cmp
cmp
xchg
pop
int3
ficompl
jle
and
orb
sbb
jle
roll
xchg
cmp
aas
and
rcll
jns
pop
inc
popa
adc
sbb
xchg
pop
imul
dec
imull
xsaveopt
ds
sarb
pop
push
xor
fs
push
jle
mov
jnp
shlb
loope
sbb
rclb
inc
push
jp
clc
pop
stos
add
adc
pop
repnz
sbb
add
ret
pop
sub
push
frstor
adc
push
or
xchg
repz
lret
jne
dec
lahf
mov
loope
aas
xchg
jle
jg
negl
jae
jne
xchg
lcall
adc
ret
pop
popa
cmp
xchg
and
and
testl
cmp
dec
idivl
mov
xchg
and
push
loope
ja
dec
test
pop
rorl
ret
adc
jl
inc
adc
lret
inc
jnp
jecxz
pop
push
mov
cmp
sub
jmp
jae
aaa
push
ret
add
sbb
push
mov
pop
lods
ss
push
pop
adc
jle
inc
xchg
pop
pop
fwait
jle
adc
mov
mov
flds
ret
ror
dec
jge
push
sbb
test
inc
dec
ret
sbb
cmp
xchg
mov
test
aad
shll
sub
mov
mov
jmp
jmp
fnstcw
add
add
xchg
jmp
mov
mov
rclb
adc
loope
movsb
or
cld
idiv
cld
xchg
mov
push
scas
mov
cmp
addr16
push
add
pop
mov
mov
adc
into
jns
sub
cmpsb
rol
iret
cmp
xor
enter
sahf
jnp
loop
fadds
mov
fnstcw
sbb
xchg
jmp
je
pusha
out
loop
cs
push
sub
mov
pop
in
jg
test
push
push
out
mov
mov
nop
arpl
mov
xor
in
xor
pop
push
testb
jg
adc
ret
mov
rol
insl
mov
lcall
es
neg
jp
mov
scas
or
pop
icebp
sahf
fisttpll
bound
aam
and
jne
sbb
or
add
cmovg
in
sti
xchg
cld
neg
adc
movsb
jns
cmpl
cmpsb
jns
in
mov
dec
adc
pop
dec
jno
push
retw
cwtl
xchg
popf
test
or
sub
push
gs
aas
xchg
popf
or
sbb
xchg
mov
lret
pop
jno
sbb
or
mov
fcoml
movl
dec
in
jo
mov
inc
sbb
push
popf
es
cwtl
mov
push
fucom
push
fldl
add
inc
mov
sarl
std
testl
xchg
mov
mov
aad
adc
cld
push
jg
mov
add
shll
xchg
push
xchg
scas
jno
js
and
xchg
mov
jo
stos
adc
mov
xchg
mov
pop
mov
adc
dec
mov
adc
xor
lcall
test
xlat
pop
mov
call
sub
sub
testb
lcall
aam
xor
je
mov
fmuls
inc
jle
das
in
pop
jbe
test
shr
fprem
mov
lret
std
push
jns
sub
fucomi
sahf
daa
mov
lret
push
or
and
movsb
ds
mov
js
cmp
fnstenv
xchg
or
mov
sub
cmp
or
push
and
fildl
xor
mov
jo
and
lcall
xchg
stos
pop
sbb
mov
mov
cmp
xchg
jbe
sahf
in
movsl
add
mov
jmp
es
scas
cmp
test
pop
xchg
hlt
lea
sti
and
mov
cmp
sbb
dec
mov
pop
shll
mov
jp
dec
int
jecxz
mov
shll
popa
jbe
inc
dec
cmp
cmp
lcall
test
jne
sar
out
lret
fsubrl
cmp
out
stos
jg
stc
inc
rcll
push
pop
cli
pop
scas
insl
out
ds
mov
adc
dec
stos
xor
or
push
push
jo
push
scas
inc
or
jae
ja
or
push
xor
lcall
std
mov
insl
mov
xor
in
daa
imul
xor
js
frstor
adc
and
mov
hlt
cmp
push
inc
pop
mov
jno
sub
js
fidivs
pop
dec
dec
cmpsb
or
inc
adc
and
adc
fisubrl
repz
jge
mov
mov
push
loop
sbb
addr16
pop
push
inc
jge
rorb
test
pushl
pop
es
out
add
pop
cwtl
push
cmpsw
pop
add
shl
mov
test
inc
xorl
lret
jns
xor
pop
movsb
sub
ljmp
xchg
addb
jl
xchg
sbb
cli
loop
mov
push
adc
adc
pop
imul
in
and
adc
mulb
mov
xchg
jne
xor
and
dec
jo
pop
dec
fs
and
clc
push
inc
divl
je
dec
push
popa
ljmp
mov
adc
push
xor
add
mov
dec
sub
inc
mov
sub
shrl
pop
push
insb
push
call
mull
lahf
fnstcw
or
in
mov
repz
shll
mov
loopne
ja
xor
lds
mov
arpl
mov
jp
xchg
inc
dec
xchg
loop
je
pusha
inc
aam
addb
lret
loopne
xchg
mov
cmp
movsb
repz
stos
pop
and
ret
int
inc
pusha
loope
or
cmpsl
rorb
stc
mov
int
enter
hlt
sbb
dec
mov
xchg
pop
or
rcr
fildl
cld
les
movsb
cmp
push
ret
mov
sbb
inc
repz
int
icebp
sti
lahf
mov
loope
dec
mov
mov
mov
push
cld
fcoms
ds
inc
in
pusha
rcl
jg
fcoml
movsl
jne
xchg
xor
pop
xor
add
push
inc
or
push
movl
and
xchg
push
cmp
std
sub
push
push
sub
or
dec
cmp
insb
sbb
ror
mov
mov
aaa
fistpll
ja
insb
sbb
add
mov
inc
pop
rorl
ror
jle
and
mov
aas
cs
pop
xchg
ljmp
ficoml
int3
movsl
xlat
out
or
pop
out
iret
out
repz
cwtl
stos
xchg
mov
sub
lcall
imul
mov
in
insl
adc
mov
mov
adc
fsub
xchg
ljmp
dec
aad
inc
pop
and
es
fldcw
insb
imul
fdiv
jmp
adc
cmpl
lcall
stos
rorl
pop
jl
sub
icebp
and
cwtl
imul
xchg
push
mov
es
sahf
jecxz
sub
mov
pop
push
inc
aad
clc
add
iret
lods
adc
jg
push
jns
mov
nop
scas
jno
shlb
jl
inc
lds
insb
or
push
xor
rolb
jge
push
dec
lods
aas
out
or
das
gs
sti
pushf
xchg
lods
sbb
scas
sub
aaa
xchg
sbb
in
aam
pop
nop
fcoml
insl
and
arpl
push
pop
pop
loope
lret
in
ror
out
aam
or
and
pop
int
jle
cmp
scas
sarl
inc
lea
scas
cmpsl
add
aas
pop
mov
mov
xchg
dec
pop
shl
dec
cmp
mov
test
bound
movsl
xchg
add
dec
nop
in
fisttpl
jb
in
mov
xchg
ds
pop
sbb
pop
movsl
dec
add
mov
shll
mov
mov
mov
pusha
xchg
repnz
or
iret
andl
int3
movsb
sbb
dec
negl
inc
shr
into
sbb
pushf
jmp
cmpsl
sti
inc
and
xchg
jl
push
sbb
add
cmp
out
loope
mov
notb
movsl
cmp
imul
orl
add
jne
movsb
and
xchg
addr16
bound
jne
pop
push
enter
fcoms
dec
sti
push
mov
xchg
das
int3
ss
test
dec
pushf
mov
xchg
push
inc
xchg
push
pop
in
dec
hlt
pop
addr16
subb
mov
pushf
sti
fdivrl
push
inc
and
pop
outsl
cmp
fldcw
mov
sub
fwait
dec
push
xorl
cmp
cmc
push
push
test
dec
add
dec
mov
jp
call
add
push
or
arpl
ret
or
testb
test
pop
lcall
imul
clc
xchg
mov
aaa
jo
jg
xor
fistpll
adcb
cld
mov
lds
push
outsb
nop
adc
mov
popl
mov
packuswb
jbe
ret
sub
or
test
and
cmpsb
and
sub
mov
nop
mov
stos
xor
repnz
bound
andb
cld
in
sti
data16
jmp
in
jl
out
mov
xchg
test
pushf
sarb
push
arpl
mov
popa
repz
mov
and
movsl
scas
enter
out
pop
xchg
in
stc
adc
pop
sbb
aaa
dec
out
pushf
jbe
xchg
adc
xchg
das
sub
push
mov
loopne
mov
insb
insl
inc
mov
cmp
pop
fwait
pop
gs
push
pop
mov
lods
and
or
mulps
scas
sti
bnd
sbb
add
inc
decl
lahf
and
dec
fisttpll
jb
mov
or
les
enter
sbbl
repnz
dec
in
loopne
mov
mov
icebp
adc
sub
fs
insl
xchg
movsb
dec
test
fmuls
out
mov
inc
mov
dec
lds
inc
inc
pusha
mov
or
jl
shlb
mov
and
and
or
shll
out
jle
stc
dec
sbb
sbb
ss
ljmp
adc
sbb
and
push
add
mov
das
sub
jge
cli
pop
ljmp
test
pushf
sub
out
pusha
xchg
sbb
inc
and
loop
aad
inc
in
es
dec
imul
shl
leave
push
fldcw
xor
xor
or
test
ja
sbb
das
mov
and
iret
adc
sarb
popf
mov
sbb
and
lret
loopne
dec
xor
ljmp
and
into
xchg
icebp
aaa
or
popf
cli
out
and
xor
fwait
mov
pop
xchg
xchg
or
xor
loopne,pt
movsl
push
xchg
fdivl
iret
rol
push
mov
dec
adc
repnz
adc
js
push
ja
jg
fs
push
push
or
decb
cmp
clc
rclb
mov
push
mov
or
mov
lret
add
aad
pop
dec
enter
dec
pop
sub
movsb
movsb
xchg
jne
cmc
lea
fs
xchg
push
sub
pop
ret
mov
fadds
dec
fistps
pmaxub
cli
stos
int3
js
shlb
pop
add
stos
sbb
push
sub
insl
sub
lcall
out
dec
stc
push
jg
enter
pop
arpl
sarl
push
pushf
lds
inc
mov
push
inc
mov
jne
inc
dec
mov
cmc
lahf
cs
arpl
stc
outsl
scas
sbb
lea
pop
inc
add
sub
pop
jns
loopne
mov
pop
sti
push
mov
pushl
enterw
mov
stc
pop
cmpsl
xor
mov
addb
leave
fdivs
mov
pusha
cwtl
lods
lcall
aam
or
mov
inc
xchg
subl
or
rcrl
mov
inc
xchg
xchg
dec
out
sbb
mov
inc
add
hlt
mov
aad
mov
jo
sbb
stos
sub
sbb
xchg
lea
je
lock
mov
and
push
icebp
fwait
sub
sub
sub
mov
xlat
repnz
mov
jb
lds
add
les
push
dec
pop
xchg
in
idivb
mov
sarl
js
orb
std
mov
jne
test
mov
in
and
sub
mov
mov
cs
loope
in
xchg
inc
nop
sub
mov
dec
jbe
loop
push
mov
nop
sbb
inc
mov
jne
outsl
jp
xchg
ficompl
add
mov
pop
lock
popf
add
jecxz
lods
shrb
cmp
dec
sbb
aas
mov
fistps
and
jecxz
nop
sub
movsb
fimull
mov
jmp
incb
push
in
sbb
aam
pop
and
cmp
push
cwtl
call
inc
xor
popa
das
mov
mov
into
jge
lret
pusha
sub
add
in
mov
cltd
pop
je
add
fsubs
aam
int3
push
mov
icebp
daa
sbb
sub
jo
sbb
imul
sbb
mov
mov
loope
arpl
xchg
test
mov
icebp
arpl
out
dec
imul
xorl
inc
jp
cs
in
adc
mov
xor
mov
mov
cmc
cs
loope
stos
lret
ret
mov
scas
out
shlb
cmc
iret
add
inc
fwait
pop
pop
test
jmp
sbb
adc
jge
or
cltd
cmp
xchg
jae
movsl
and
mov
call
js
test
or
adc
sbb
mov
je
imul
push
sahf
and
insl
in
xor
je
xor
push
ljmp
shrl
jb
cld
or
xor
mov
js
mov
inc
adc
lods
dec
jle
mov
stc
addr16
push
mov
fiaddl
dec
shll
stc
jae
ror
jg
repnz
and
pop
pop
mov
addl
add
jae
xor
xor
sahf
aad
shrb
adc
rolb
inc
xchg
push
dec
iret
sub
ja
mov
mov
fsts
or
xchg
test
pop
xchg
pop
lods
jge
sub
xor
pop
gs
inc
cmp
pop
xlat
aas
push
lcall
fisttpll
pop
dec
in
push
arpl
add
pop
fwait
sahf
cmp
jae
ficoml
ficoms
fistps
cmpsl
hlt
cmp
pop
pop
ret
push
xchg
push
loopne
repz
inc
or
daa
jne
cmpsl
mov
push
inc
leave
lds
outsb
sub
cwtl
add
pushl
pop
add
mov
sbb
fsub
or
scas
mov
filds
jecxz
sub
test
mov
pop
aas
iret
xchg
aad
xchg
cmp
push
and
test
push
and
test
adc
and
fbstp
shl
and
jmp
push
cwtl
test
mov
mov
and
shll
sbb
and
mov
jb
imul
or
lods
push
jns
or
pop
jns
xchg
cmp
dec
and
lods
push
xlat
dec
aas
xlat
stc
xchg
hlt
cli
popa
sbb
icebp
mov
jns
adc
inc
adc
pop
pop
push
fiaddl
jl
cmp
xor
or
cmp
jl
fxch
lahf
mov
int3
mov
sub
daa
test
shrb
nop
push
lods
dec
inc
fidivl
inc
out
mov
or
push
inc
jnp
jns
dec
shr
adc
mov
lret
arpl
adc
xor
push
test
adc
cmp
dec
sub
lcall
sub
fdivrs
insl
jg
imul
and
inc
xchg
outsb
nop
int
or
xor
adc
mov
mov
cld
addr16
mov
scas
dec
xchg
mov
pop
or
inc
loope
fisttps
cmp
lods
adc
loope
jno
cs
adcb
call
sub
outsl
inc
mov
and
mov
int
xchg
fsts
les
lcall
or
and
sub
dec
mov
or
lods
mov
scas
mov
mov
cmpsb
lods
pop
xchg
repz
xchg
add
push
jnp
mov
pop
jg
mov
test
leave
push
popf
fcmove
lods
cltd
inc
popf
xorb
rcll
mov
jge
or
mov
adc
xor
lcall
ret
bound
mov
cwtl
sarb
int
insl
push
lret
mov
test
cmp
mov
push
xchg
lea
and
adc
pop
shll
sub
mov
sbb
mov
mov
ljmp
cmp
lcall
jbe
jns
fcmovu
ret
sbb
sahf
sub
sub
into
jbe,pt
lret
push
pop
adc
sub
adc
push
adc
and
notl
pop
pop
xchg
shlb
lcall
es
jb
stc
and
jmp
cmpsb
and
xorb
js
dec
push
pop
inc
pop
or
nop
call
cld
repnz
test
push
or
mov
fidivrs
cwtl
pushf
fnstenv
ds
pop
arpl
inc
lcall
cld
loopne
pushf
xchg
out
lea
sbb
xchg
push
dec
sbb
add
imul
or
in
xor
int
adc
or
lods
xchg
addb
call
cmp
jb
ret
inc
push
mov
xchg
jp
mov
jb
das
jp
push
mov
insb
pop
jb
push
inc
jmp
jecxz
sarb
jo
and
scas
out
mov
mov
sub
jne
adcb
mov
dec
xchg
lock
xor
inc
arpl
into
cmp
mov
xchg
jmp
adc
dec
xchg
adc
cs
add
pushf
je
dec
sarb
aas
stos
sbb
jg
dec
rolb
push
insb
fisubrl
clc
inc
mov
mov
jle
push
dec
icebp
idiv
insb
frstpm(287
aam
call
xchg
mov
inc
mov
mov
cmove
sbb
adc
in
inc
inc
inc
mov
or
jnp
xchg
popa
ret
push
adc
dec
dec
outsl
aaa
aas
cmp
outsb
notb
and
and
loopne
mov
outsl
stos
f2xm1
pop
gs
iret
sbb
shlb
mov
out
fsubrl
and
cmp
loop
inc
sbb
leave
dec
pop
aas
xor
sbb
popf
push
and
sub
xchg
insb
cmp
sahf
lods
add
adc
imul
loopne
add
inc
imull
jg
sbb
adc
mov
outsl
pop
jae
aaa
push
or
dec
adcl
fildl
mov
xchg
pop
and
mov
lds
push
cmp
pop
xor
scas
icebp
in
loop
cmp
mov
xchg
pop
in
es
loopne
jecxz
cmpsb
and
pop
push
mov
inc
or
das
adc
sbb
or
xchg
int
fstl
filds
xorb
pusha
mov
imul
xchg
or
dec
cmpsl
arpl
lret
and
add
push
push
jae
popf
movsl
sub
enter
push
gs
ds
ljmp
insl
cwtl
outsb
pop
je
mov
sbb
add
mov
cmp
jg
popa
mov
inc
test
fsubs
mov
repnz
cli
mov
xor
push
dec
cmp
es
sahf
mov
addr16
mov
pop
pushf
jno
movsl
pop
sbb
pusha
jge
mov
push
lock
inc
out
sub
pushf
jl
rcr
xor
cmp
daa
dec
mov
dec
imul
inc
push
insl
int
sub
push
out
jg
cmp
addr16
cmp
shlb
and
outsb
fcoms
jge
popa
std
cmp
and
xchg
mov
das
test
in
ss
mov
pop
loope
test
jp
adc
xor
mov
shlb
negb
mov
sub
fnstcw
xchg
outsl
xlat
lcall
stc
sub
jo
test
in
das
jg
xor
mov
xchg
adc
stc
mov
mov
mov
shrb
dec
movsb
mov
in
jmp
dec
cmp
dec
xchg
sub
sbb
pop
aam
dec
pushf
jno
cmp
stos
nop
cmp
jp
fidivl
int
mov
ret
pop
fucomi
fcomip
insl
xchg
sarb
mov
dec
ror
push
pop
sbb
cs
sahf
maskmovq
enter
mov
mov
mov
adc
in
jmp
add
sbb
inc
nop
pop
jl
ljmp
dec
sub
loopne
add
cmp
mov
fwait
lahf
push
sbb
xchg
mov
loope,pn
ja
push
or
test
mov
push
push
pusha
adc
test
ficompl
ljmp
xor
fwait
push
rcrb
movsl
cwtl
in
push
insl
iret
js
and
pop
xor
xchg
les
fwait
enter
pop
pushf
std
cli
and
aad
ss
in
fistps
ss
add
sbb
es
push
push
jecxz
iret
xchg
sbb
in
sub
mov
rcll
lret
imul
cli
xor
xor
imul
test
in
fsub
data16
imul
je
mov
mov
pop
lds
in
ret
adc
mov
pop
shl
cmp
add
mul
aad
adc
test
mov
mov
xchg
movsbl
and
enter
adc
stos
je
call
jp
lods
and
dec
xlat
xchg
dec
call
cmpsb
es
std
rclb
popf
in
sub
sarb
mov
js
inc
cmp
jp
cltd
mov
sbb
jge
out
add
lret
out
jg
out
inc
adc
out
les
loop
loop
xchg
add
fs
repnz
pslld
js
das
push
xor
ret
into
test
ret
mov
test
jmp
mov
imul
dec
aad
rcl
aam
mov
sbb
sbb
cmpsl
sub
dec
int
lods
in
fnstsw
in
je
mov
pop
sti
and
push
mov
ret
outsb
xchg
or
and
jnp
pop
shrl
push
add
out
je
cmp
lock
mov
hlt
mov
pop
push
rcrl
add
mov
rolb
pushf
push
xchg
mov
lds
cmpsb
xchg
inc
cltd
pop
lods
inc
xchg
xchg
lret
inc
lcall
mov
push
mov
addr16
inc
xor
mov
fisubrs
in
push
fldenv
xlat
pop
sub
and
inc
mov
hlt
mov
inc
lock
clc
xchg
sbb
push
data16
sbb
pop
out
in
data16
xchg
push
dec
xor
jnp
xchg
mov
mov
loop
xchg
ficoml
xchg
imulb
mov
in
mov
je
xchg
leave
out
mov
jno
jae
lods
stos
in
call
test
xchg
das
icebp
mov
std
aad
icebp
cmp
ljmp
iret
mov
std
push
insl
mov
int
cmp
test
sti
push
xchg
mov
pop
or
add
jno
mov
mov
popf
xor
mov
sarb
cmp
push
jno
mov
outsl
and
add
outsb
inc
cmp
movsb
xor
ficompl
or
popa
lock
ds
jae
ss
sub
jno
fs
adc
clc
mov
jb
add
lret
cli
ficompl
mov
xchg
rcrb
jb
xor
cmp
sbb
mov
out
xorb
add
jg
sarl
nop
and
mov
sub
add
cmp
movsb
cmp
loope
or
sbb
jp
jbe
gs
scas
dec
xchg
loope
mov
xchg
arpl
push
push
into
and
cmc
cmp
mov
pop
movsl
jmp
add
in
movzwl
int
imul
push
out
or
lds
insl
ds
mov
shlb
fistpll
inc
int
pushl
cld
jmp
inc
lods
loope
xlat
mov
jg
mov
aaa
in
sbb
fucom
ja
mov
sbbl
mov
in
ja
push
mov
cli
andl
push
clc
shlb
daa
test
rol
jg
mov
pop
add
cmp
push
pop
or
in
mov
mov
mov
or
sbb
mov
pop
pop
in
adc
lods
test
aam
pop
out
test
xor
paddusw
mov
jb
or
sub
lahf
xor
cwtl
dec
xor
add
int3
dec
out
push
repz
jb
icebp
adc
notl
pushf
sbb
fcompl
jmp
push
add
pop
adc
cmp
es
in
cmp
jmp
test
jmp
inc
sti
inc
pop
cltd
or
sub
pop
sub
das
adc
mov
mov
cmp
push
cmc
fcomi
flds
aaa
push
cld
bound
es
xlat
jbe
xor
out
lahf
movsb
cmpsb
icebp
push
sarb
xchg
lret
insl
test
in
xchg
addr16
stos
stos
in
push
loope
decl
ret
fimull
add
xor
xchg
lcall
dec
mov
mov
adc
aas
mov
cmp
je
jb
pop
cmp
xchg
das
aad
push
inc
iret
jmp
jbe
popf
sub
pop
xor
int
fstp
jb
mov
shll
jne
data16
fnsave
fwait
mov
int3
mov
in
leave
adc
dec
clc
and
adc
add
sti
sub
sub
cmovl
xor
mov
mov
roll
push
pop
mov
fdivrl
dec
xlat
mov
pop
rcrl
hlt
daa
bound
mov
aaa
testb
mov
jle
sub
cmp
adc
jno
sub
test
mov
dec
push
into
pop
pop
aad
add
push
xor
pop
popf
mov
rorl
daa
pop
mov
out
xchg
push
pop
push
adc
mov
pop
mov
cmp
xchg
dec
adc
sub
imulb
lahf
ljmp
jae
lcall
pop
test
outsl
mov
cld
jo
mov
push
or
cmp
push
into
mov
mov
push
scas
ret
or
loopne
aas
cmp
sbbl
notb
sub
and
push
icebp
add
fwait
std
popa
popf
out
push
adc
push
movsl
sub
sub
mov
add
gs
imul
scas
dec
and
cwtl
test
xor
mov
rcl
add
shl
icebp
add
mov
scas
and
sbb
xchg
in
xor
in
lock
pop
xchg
jae
je
or
mov
mov
jne
fidivl
fdivrl
jnp
test
insl
jp
jbe
insl
jo
push
pop
sarl
add
lock
ja
cmp
lds
cmp
int3
jge
xchg
cltd
inc
mov
adc
sub
outsl
cmpl
test
xor
js
push
nop
mov
mov
mov
aas
jle
adc
mov
ds
add
cmp
divl
notl
daa
gs
mov
pop
push
push
scas
dec
std
iret
jmp
and
mov
mov
inc
jl
push
fwait
jp
sarl
add
das
sti
inc
movsb
in
sti
inc
mov
mov
jnp
bound
jle
loope
popf
lret
and
mov
aad
adc
fildl
inc
leave
cltd
adc
pop
retw
jmp
test
xor
scas
add
mov
push
es
enter
or
cmc
in
push
bts
leave
nop
imulb
rorb
push
cmpl
lds
mov
incl
mov
mov
daa
add
xchg
lret
pop
mov
adc
imull
les
push
push
std
and
mov
inc
inc
repnz
push
int
sbb
xor
in
call
pop
fs
pop
filds
pop
adc
sti
push
out
cltd
or
imul
ja
fwait
sbb
rclb
cwtl
test
sub
xor
arpl
movsb
adc
mov
fnsave
mov
addb
lret
xchg
in
out
mov
out
cltd
adc
xchg
sbb
movsb
stc
js
xor
out
lret
pusha
lret
data16
into
dec
aas
push
iret
pop
out
jno
sub
ds
mov
dec
iret
mov
xor
hlt
out
jp
fwait
int
adc
outsl
imul
int3
push
inc
nop
mov
and
xorl
cwtl
mov
aaa
adc
jp
popa
dec
ret
imul
movb
imull
out
cmp
jl
subl
sbb
dec
test
mov
bnd
xchg
jp
mov
out
pop
mov
das
ss
mov
leave
lret
jae
mov
ds
pushf
fs
insl
push
add
iret
dec
xor
inc
popf
push
cli
pop
out
cmp
movsb
or
dec
vzeroall
mov
push
jl
xor
lods
jnp
mov
fnstcw
xchg
aam
pop
ds
stos
pushf
in
sbb
or
dec
rcl
push
or
push
js
push
pop
pop
adc
dec
jmp
fstpl
inc
xor
cmpl
pop
and
cmp
push
stos
mov
nop
test
and
sub
and
negl
sub
and
outsl
jl
cmp
mov
lcall
adc
inc
mov
adc
ja
cs
loope
mov
cmpsb
add
cmp
pop
daa
icebp
in
addr16
xlat
xor
fcom
or
test
cltd
push
inc
dec
int3
iret
sbb
mov
cmp
or
mov
pop
dec
pop
popf
cmp
xor
in
orl
cmc
sti
repnz
pop
cwtl
je
dec
lea
push
outsb
test
mov
cwtl
aaa
jp
push
adc
cli
test
mov
push
aaa
in
bound
adc
int
add
aaa
rcrl
adc
add
lret
enter
sub
in
and
xor
fidivs
jge
imul
imul
mov
dec
cmc
jnp
shl
jmp
loop
ja
aam
ds
sub
movsl
sub
fwait
dec
sbb
imul
xchg
sbb
dec
xchg
pop
ljmp
roll
xor
jecxz
aam
in
jl
dec
add
lret
fs
ret
ds
sarl
sbb
jae
rolb
mov
sbb
outsl
faddp
into
dec
aad
dec
mov
popa
xor
mov
fcom
lods
jbe
jo
pop
ss
inc
sti
sbb
mov
lahf
or
insb
testb
jecxz
xor
xor
dec
and
mov
shlb
fisubrs
mov
adc
sbb
adc
adc
mov
jae
inc
je
sub
mull
lahf
mov
sub
cmp
dec
push
xor
dec
jecxz
insb
addb
pop
loope
cmp
std
inc
jl
and
push
fdiv
lds
and
fldl
mov
std
mov
inc
mov
jg
int
ret
inc
jmp
sbb
mov
shl
call
ficoml
add
test
fmull
push
arpl
rcl
pop
or
fistps
pop
leave
ljmp
adc
jp
xchg
loope
inc
pop
add
jb
sub
gs
and
push
xchg
popa
xor
addr16
sbb
sbb
addr16
mov
rcl
mov
adc
ds
xor
cld
xchg
lods
fidivl
les
push
fwait
inc
or
loop
push
jb
sub
xor
outsb
dec
jbe
insl
jmp
dec
mov
inc
jne
xor
pop
aas
mov
sbb
add
clc
leave
add
decl
inc
push
into
shlb
js
jns
push
jl
cmp
addb
xchg
inc
mov
mov
loope
mov
movsb
movsl
adc
mov
arpl
test
pop
inc
and
cltd
je
lahf
jnp
dec
sbb
dec
cmc
fwait
mov
or
ret
jle
mov
xchg
push
and
or
or
mov
sbb
ret
aaa
xchg
xor
mov
inc
cmpsb
imul
fdivl
push
ds
sub
pop
xchg
hlt
xchg
pop
push
xchg
stc
inc
adc
testl
gs
mov
movb
pop
xchg
inc
arpl
xor
inc
cmp
stos
jb
mov
jns
xchg
aaa
fists
movsl
xor
pop
imul
leave
pop
mov
adcl
xchg
adc
and
nop
inc
jle
or
jg
sbbb
jae
stos
pop
test
mov
sarl
cmp
dec
xor
or
insb
iret
push
jo
mov
repnz
lret
movsb
ret
mov
bound
stc
outsb
cmp
aam
add
bound
mov
ja
or
int
mov
cmp
out
jg
outsl
and
fnstcw
jo
and
pop
push
or
scas
mov
jmp
and
xchg
in
cmp
xchg
fwait
loop
out
ds
je
subl
mov
lahf
imul
sti
repnz
or
pop
movsb
cmp
adc
mov
push
adc
mov
dec
pop
jg
sub
sub
stc
rcrb
or
jne
jg
test
add
mov
shr
imul
in
cmpb
pushf
movsb
imul
mov
sub
loop
adc
sbb
scas
daa
lret
outsb
loopne
hlt
repz
cmp
cmp
pop
pop
shll
cltd
sbb
sahf
mov
mov
and
or
popa
xchg
mov
cli
loope
inc
xchg
add
add
cmc
outsb
ljmp
xchg
sub
ljmp
cli
iret
addr16
xor
fidivrs
fiadds
add
pusha
xor
push
add
add
cmp
imul
lret
mov
jae
sbb
mov
sbbl
stos
xchg
icebp
mov
or
push
mov
xchg
lods
sbb
and
sbb
xchg
lock
ss
or
cmp
pop
xchg
movb
mov
jo
fldl
fadd
cs
jno
fs
ljmp
rcrb
sbb
daa
shl
mov
pushf
aad
or
lods
pop
aam
or
mov
dec
outsb
aaa
push
notl
push
repnz
mov
fabs
push
jns
sbb
outsl
inc
inc
shll
inc
ja
dec
sbb
pop
stc
xchg
jge
add
fsubrs
test
mov
push
pop
sub
cmp
jmp
mov
dec
adc
or
shlb
outsl
jge
push
iret
loop
in
add
scas
lret
repnz
scas
in
repnz
add
bnd
mov
push
nop
fs
jmp
lock
daa
rcr
lret
cmpsb
dec
mov
movb
std
pusha
or
sub
pop
fldl
imul
inc
sbb
inc
add
rcrl
test
pop
push
gs
int3
aas
push
fsts
popf
fsub
inc
inc
add
add
orb
in
and
add
mov
data16
fildl
cmp
xlat
ret
movsb
cs
lods
xchg
rorl
push
dec
jo
mov
dec
xorl
mov
fnstcw
fwait
cmpsl
popa
das
stc
call
rcrl
test
xchg
ret
insl
shl
sub
add
mov
test
lods
add
sub
outsl
sbb
fisubrs
pop
iret
or
outsl
and
dec
ds
stos
jno
outsl
mov
cmp
mov
xchg
pop
xor
lds
repnz
jbe
pushf
fwait
movsl
pop
pushf
ret
add
arpl
loop
mov
push
xor
jge
inc
mov
movsb
loope
sub
lods
cmc
aas
mov
and
xchg
add
cmp
dec
inc
adc
ret
and
and
andl
lods
push
sbb
add
mov
mov
icebp
imul
cwtl
cmp
nop
in
jge
sub
sarb
or
mov
adc
jl
loopne
mov
xor
adc
loopne
mov
cli
repz
push
xchg
jl
xchg
movsb
jne
ljmp
movsb
call
cmp
cwtl
movsl
adc
cld
nop
mov
addr16
fsts
subl
sbb
test
pop
mov
pushf
jmp
mov
mov
shrl
sub
add
lds
aaa
cmp
inc
and
push
mov
adc
cwtl
popa
adc
inc
xchg
inc
sbb
xor
cmc
push
test
mov
sbb
ds
xchg
and
pop
es
jnp
stc
jmp
mov
inc
cmp
in
bound
and
ljmp
xchg
fwait
sti
fbld
push
jecxz
leave
jmp
lahf
mov
or
imul
out
cmpsl
fwait
into
jne
inc
cwtl
lret
faddl
or
ret
adc
leave
in
mov
add
xchg
inc
xchg
mov
adc
mov
aas
cs
stos
push
fwait
imul
and
mov
sub
cmp
xchg
lods
and
cmp
shlb
dec
aas
cmp
ja
stos
adc
lods
mov
inc
mov
jmp
je
inc
mov
call
popf
leave
pop
cmp
add
push
push
pop
shrb
xchg
or
cwtl
push
shr
stc
sbb
stos
inc
push
push
jnp
jae
mov
mov
sub
in
js
jno
dec
and
push
push
fsub
jmp
addl
sbb
sub
mov
es
pusha
mov
or
addr16
push
push
mov
xlat
lcall
push
cmp
xor
xlat
stos
xor
jbe
cld
shlb
jge
stos
cli
sahf
or
add
xchg
rcr
imul
lahf
inc
push
pop
and
popf
mov
mov
mov
in
into
inc
cltd
jb
pop
dec
cltd
sub
jle
outsb
xor
les
sub
jp
cmp
cmp
bound
subl
and
jo
sbb
mov
icebp
scas
pop
aaa
in
iret
jne
and
popa
pop
rclb
adc
dec
fs
pop
sbb
call
inc
jg
xchg
cmpsl
adc
mov
dec
loope
bound
inc
push
les
cli
adc
jmp
int3
fcmovnu
jp
aas
mov
fisubl
or
adc
adc
and
fisubrs
jmp
out
sbb
movsb
dec
in
sub
push
dec
loop
addr16
mov
adc
sbb
adc
imul
pop
add
inc
mov
adc
int
ret
xor
call
and
push
xor
mov
hlt
or
stc
andl
mov
push
les
xchg
pmullw
lock
sub
data16
pop
lods
out
jl
pop
ja
fadds
jmp
or
cmc
or
sub
lahf
jmp
adc
stc
or
aad
rorl
jno
jmp
ss
xor
ret
push
pop
dec
iret
pop
mov
pop
sbb
nop
pop
push
out
cld
xor
lret
xor
mov
in
push
push
push
subb
push
xor
pop
xchg
vmovaps
sbb
daa
lea
jge
pop
aas
outsb
mov
icebp
xor
popf
cmpsb
adc
shlb
out
cmovae
and
repnz
icebp
jb
sub
sbb
xlat
fcomps
outsb
loope
cld
cmp
mov
insl
cli
mov
lods
mov
scas
idivl
inc
adc
xor
pop
xchg
in
int3
packssdw
pop
push
loop
inc
in
andl
pop
flds
dec
sbb
leave
or
cmp
sbb
mov
adc
xor
inc
jge
ret
in
cmc
inc
inc
lea
xchg
fisubl
scas
push
andb
adcl
divl
or
shlb
cli
xchg
jbe
push
mov
pushf
sti
pop
js
icebp
bound
mov
fdivrl
cmp
push
pop
fmull
arpl
aas
fcmovnb
mov
ljmp
shr
aad
ss
xchg
add
cmpsl
push
add
push
pop
loopne
cltd
adc
add
push
push
push
cmp
mov
movsl
cmp
jbe
pop
ror
mov
xorl
push
adc
pushf
cltd
sub
inc
xchg
clc
fmul
jl
add
lcall
fnclex
daa
popa
inc
cmpb
pop
ja
xchg
xchg
mov
dec
dec
out
stc
filds
pop
mov
xor
jle
inc
mov
inc
jb
les
ljmp
fidivs
push
push
pop
mov
int3
movsl
lea
fs
sbb
pop
sub
mov
fdivrs
out
enter
ja
idivb
push
cltd
loopne
or
and
mov
pop
and
jle,pt
jnp
xor
sbb
or
jbe
hlt
fs
or
add
adc
arpl
pusha
jmp
cmpsb
adc
subl
shll
iret
insb
scas
jno
jle
and
and
fnsave
mov
ja
mov
pushf
and
push
leave
movsl
pop
mov
sbb
xchg
xchg
dec
mov
mov
std
add
push
jmp
mov
out
mov
and
arpl
arpl
mov
ja
test
icebp
lret
dec
and
mov
mov
pop
nop
mov
cli
iret
xor
pusha
jne
cmp
mov
mov
daa
xor
std
sahf
cmp
mov
scas
jp
pop
mov
les
out
mov
inc
and
dec
out
popl
mov
test
test
dec
sbb
adc
mov
xor
xchg
pop
imul
dec
jmp
cmc
pop
jno
sbb
out
dec
fcomp
bound
cltd
push
loop
mov
push
xchg
jbe
int3
lock
int3
outsl
mov
arpl
popf
cmp
push
mov
mov
dec
cmpsb
xor
ja
jbe
lods
mov
xor
sub
mov
push
in
fwait
dec
cwtl
cmp
test
in
ret
xchg
add
mov
pop
shll
mov
lcall
sti
sbb
std
jno
leave
test
jp
jl
mov
int3
pop
js
std
lds
jg
icebp
adc
jne
inc
push
dec
sbb
inc
inc
addr16
inc
outsl
dec
lcall
outsl
mov
andl
fistps
xlat
cmp
add
mov
cmpsb
aad
dec
and
and
lret
ficomps
add
cmc
ljmp
or
xchg
stos
fisttpll
sbb
loopne
rcll
pop
cmp
nop
icebp
mov
pop
and
and
pushf
pop
xor
xchg
push
outsl
gs
mov
in
je
mov
adc
negl
push
pop
mov
mov
scas
push
xorl
sbb
push
adc
jmp
push
rcll
aaa
lock
or
jno
dec
mov
pop
xor
add
lahf
leave
sub
frstor
aam
jmp
and
sub
cs
dec
repnz
outsb
ds
sub
test
add
icebp
lahf
cmpsb
push
mov
adc
iret
sbb
js
push
jecxz
clc
jns
push
inc
aaa
cwtl
fcompl
mov
sar
nop
xchg
lret
sbb
lock
sub
sub
pop
pop
lods
inc
mov
cltd
les
push
dec
mov
dec
cmp
test
sub
xchg
add
cmpsb
adc
push
xchg
mov
movsl
mov
sub
lods
mov
pop
int3
adc
push
lds
and
xorb
push
sub
mov
mov
insl
pop
addr16
clc
nop
mov
faddl
lret
call
scas
ja
pop
sub
mov
sti
sbb
scas
movsl
js
aad
mov
mov
ret
int3
sub
fnstsw
popa
jg
jge
or
xor
inc
jg
pushf
mov
dec
add
in
xchg
xchg
bound
sbb
add
test
pop
push
adc
xchg
sub
aad
mov
mov
rcll
aaa
sahf
test
dec
or
inc
ret
test
or
psrlw
shl
ror
and
fnstsw
sbb
add
add
push
push
ret
mov
push
push
sub
pop
in
es
fistps
jmp
fcomps
cs
xor
pop
mov
aad
dec
sbb
mulb
and
pop
lea
xor
sub
fsubrp
sub
jne
push
mov
jne
bound
test
inc
push
mov
mov
faddp
decb
pop
movsl
stos
mov
int
or
push
iret
or
cmp
adc
nop
lret
add
xor
shrb
jp
testl
outsb
repnz
fistl
xchg
or
mov
push
rclb
mov
jle
jl
cwtl
call
adc
mov
aad
jnp
fisubrl
push
mov
and
mov
xor
dec
insb
cmp
daa
popf
movsbl
aas
mov
sub
add
pop
cmp
fisubrs
dec
ja
gs
pushf
mov
cmp
xor
sub
mov
adc
lds
xchg
sbb
or
cmc
xchg
test
mov
out
mov
push
stc
pop
xchg
dec
pop
repnz
pop
adc
shr
adc
ror
dec
shrb
cs
adc
cmp
mov
jmp
das
adc
ret
test
pop
in
lret
mov
les
loopne
cmp
dec
shll
push
and
out
insl
das
das
inc
mov
cmp
mov
ja
icebp
inc
mov
xchg
hlt
into
movsl
lcall
adc
mov
fidivl
mov
js
and
cmp
add
inc
xor
pop
mov
out
or
int
stos
xor
addr16
or
sbb
add
pop
inc
pop
add
lahf
jge
mov
jne
sbb
push
mov
es
ja
loope
adc
lea
and
nop
pusha
lcall
cmp
push
enter
loopne
das
out
repz
dec
pop
or
push
jno
arpl
stos
pop
out
shr
fs
push
pcmpgtb
mov
inc
sbb
mov
loopne
dec
jno
inc
pop
dec
in
mov
sbb
pop
outsb
filds
mov
push
je
adc
lahf
popa
mov
mov
fcmovnbe
mov
or
mov
inc
int
mov
sbb
imulb
lods
fistl
push
cli
dec
fistpll
adc
pop
jmp
mov
test
sbb
lret
push
or
xchg
popf
pop
dec
xchg
stos
jge
mov
mov
add
vcvtss2sd
sbb
mov
or
flds
xor
lock
ret
cs
lret
cmp
jb
fildll
mov
xlat
lods
cmp
sbb
int
mov
cmp
jmp
and
repz
dec
mov
bound
pusha
mov
mov
icebp
fcomps
pop
dec
pushf
mov
mov
fidivl
mov
hlt
sbb
fists
lods
pusha
mov
imul
sbb
xchg
push
ffree
incb
jae
inc
je
cmp
add
call
std
lods
jbe
push
lcall
iret
jle
out
jmp
inc
out
mov
cmp
xor
sub
jae
in
outsb
sub
jb
stos
push
inc
movsb
push
push
and
cmp
test
flds
shll
xchg
fdivl
sbb
stos
mov
xor
test
lret
push
test
adc
ja
es
mov
push
iret
js
xchg
push
movsl
lret
adc
insl
es
mov
jmp
adc
lods
add
repz
push
xor
ja
test
repz
xchg
addr16
sbb
inc
sbb
add
test
inc
sub
jbe
adc
icebp
je
leave
dec
addr16
fsubl
inc
mov
lds
je
and
adc
jbe
mov
mov
xorb
add
sub
aam
and
movsl
mov
mov
cmpsb
call
popf
xabort
pop
shlb
and
stos
jl
pusha
mov
fwait
xchg
or
cmp
xor
mov
lods
cmpsb
jns
sbb
jno
fsubrl
aaa
imul
mov
mov
loopne
idiv
jbe
in
rorb
ss
add
jg
mov
cmp
mov
fcomps
xor
mov
cmp
test
push
fs
xor
push
mov
dec
inc
imul
or
int3
adc
lahf
es
jo
out
jns
subl
xchg
inc
mov
or
lret
sbb
jns
out
dec
mov
push
inc
je
inc
fmul
inc
xchg
scas
xlat
and
push
or
inc
and
adc
pop
sbb
xchg
in
mov
push
mov
movsb
sbb
mov
adc
inc
inc
sub
push
ss
push
push
or
movsl
fcomps
fcomps
lods
add
dec
frstor
push
cmp
loope
in
dec
push
mov
push
daa
or
mov
lret
in
ljmp
mov
in
fbstp
in
out
xor
dec
mov
mov
push
cmp
divl
lock
in
mov
es
push
pusha
fldcw
and
mov
inc
nop
jg
sub
loope
test
es
cmp
shlb
sub
push
test
negl
movb
mov
ficompl
mov
adc
jo
imul
es
shll
jnp
pop
sbb
sbb
in
das
mov
jo
outsl
mov
fsubr
cmc
adc
aam
repnz
shll
mov
xchg
fbstp
dec
out
hlt
sarb
jg
jp
add
xor
xor
idivl
shl
es
cmp
stos
icebp
jecxz
jl
add
lock
repz
sbbb
add
imul
jecxz
jns
adc
inc
lock
cwtl
or
int3
mov
lret
add
inc
mov
sbb
xor
sar
jp
movsb
cld
mov
fs
xchg
cs
je
out
mov
mov
call
movsb
insl
push
jae
cmpsl
cmp
shll
stos
mov
aas
repnz
sbb
dec
push
mov
enter
shr
in
push
fs
inc
lret
sbb
pop
loopne
push
add
nop
and
imul
mov
aad
fiaddl
mov
jge
popa
sub
mov
jg
jge
xchg
daa
fcomi
add
call
push
inc
fldenv
cmp
scas
mov
and
in
pop
xchg
cmp
out
pusha
std
shrb
jecxz
mov
push
or
cli
and
and
add
pop
stos
shll
movsl
sbb
lds
jg
dec
sbb
mov
dec
xor
rcr
fildl
lret
xlat
es
ljmp
or
pop
fcoms
stc
in
mov
dec
lret
imul
pop
and
lahf
jecxz
mov
fwait
pushf
sbb
rcll
xor
stc
xchg
test
data16
lea
mov
mov
out
jecxz
xchg
dec
add
sbb
push
imul
rorb
pop
mov
gs
and
lea
or
icebp
jecxz
xchg
sub
ja
inc
cmp
mov
xor
nop
mov
and
or
sbbb
mov
dec
xchg
shr
sahf
pop
and
ret
rcrl
mov
sbb
adc
mov
call
lfs
mov
sub
inc
rcrl
mov
jmp
out
fnstsw
jmp
push
in
dec
imulb
dec
xlat
xchg
lret
xlat
and
adc
lea
inc
aam
pop
xchg
sub
push
mov
ret
fwait
mov
dec
add
mov
insb
or
dec
clc
sti
pop
mov
lea
pop
pop
cld
loop
in
sbb
imul
xchg
sbb
cmp
jle
rolb
push
int3
cmpsl
mov
add
push
mov
data16
or
pop
xchg
dec
iret
repnz
hlt
xor
mov
arpl
ret
lcall
push
jl
mov
rolb
jb
fwait
addb
shlb
xchg
test
out
cld
jb
jbe
insb
fcomi
notb
jb
sbb
clc
cmpsl
les
daa
sbb
mov
sub
scas
pop
shll
shrl
mov
inc
adc
jb
stos
stc
dec
sub
jp
sahf
mov
in
cmp
or
enter
dec
and
enter
out
or
ret
add
out
inc
sbb
mov
xchg
jmp
int3
fstpt
lods
je
jmp
and
popa
or
jp
add
cmpb
dec
sub
mov
pop
ds
fnstenv
mov
movsl
xor
decb
adc
jecxz
arpl
adc
mov
adc
nop
mov
cld
test
call
xchg
pop
clc
push
inc
fwait
jb
inc
dec
loop
cmp
mov
push
pushf
or
and
mov
push
leave
push
sub
and
inc
icebp
jns
repnz
mov
xor
mov
sub
xor
movsl
aas
mov
test
jg
xchg
xchg
jbe
int
jae
cwtl
rcll
fs
jge
jns
push
testb
pop
loope
scas
push
sub
inc
push
lret
arpl
arpl
push
movb
imul
fisttpll
loopne
jns
sbb
xchg
fsubl
mov
fcmovb
dec
lret
je
xlat
imul
pop
mov
push
pop
mov
xchg
cmp
fimuls
mov
jmp
dec
and
xchg
and
push
hlt
push
push
mov
sbb
jl
pushw
cli
cmp
out
mov
jb
scas
into
outsl
pop
mov
stos
dec
mov
jb
mov
movsb
je
mov
xchg
dec
pop
push
lea
fs
inc
lea
add
out
mov
xor
mov
jp
icebp
inc
stos
or
xor
in
movsl
cmp
push
arpl
push
sbb
add
aas
clc
inc
mov
setnp
cltd
rclb
ja
xchg
mov
mov
jge
jle
xchg
or
sub
cwtl
andb
sbb
shrb
out
cmp
aad
push
mov
je
insb
adc
mov
in
xor
pop
loopne
pop
mov
mov
daa
out
jnp
jo
enter
lods
lret
nop
push
outsb
call
out
inc
jb
stos
sub
subb
popa
inc
and
fsubs
icebp
ficoms
mov
push
mov
mov
out
mov
xchg
loope
mov
cmpsb
movsb
out
xor
xchg
or
fimull
xor
test
add
and
fiadds
dec
mov
mov
jo
inc
or
scas
mov
pusha
sbb
mov
js
jae
sub
ljmp
jge,pt
movsl
pusha
and
sub
xchg
and
xchg
sahf
inc
outsl
jl
cmp
stos
sbb
ffreep
pop
insb
gs
rcrb
mov
fiadds
push
loopne
dec
repnz
jo
mov
roll
icebp
aaa
and
jne
clc
add
in
hlt
mov
mov
cmc
dec
mov
dec
nop
xchg
sub
mov
loope
xor
jns
adc
sbb
mov
das
shl
repnz
andl
loop
cmpsb
shlb
pop
shr
sub
lods
imul
add
cmp
jp
mov
sbb
mov
jae
mov
sub
fnstenv
cld
pop
dec
jo
arpl
out
mov
adc
xchg
imul
xchg
cmpsb
and
dec
sub
in
loop
push
mov
push
sub
test
or
out
inc
in
mov
pop
xchg
addr16
push
aas
divb
shrl
call
mov
movsl
je
jg
pop
cmp
ds
mov
cld
add
mov
movl
fwait
pop
test
inc
jg
fdivl
cmp
arpl
movsl
fidivl
pop
dec
mov
daa
and
mov
mov
mov
bound
dec
xor
std
pop
cmp
sub
xchg
sub
add
out
shrl
cwtd
and
cmp
test
lods
push
mov
sub
cmp
and
shlb
or
js
aam
scas
cltd
mov
gs
in
insb
mov
or
mov
jb
fs
xor
sbb
sarl
call
out
iret
imul
insb
dec
repz
xlat
decb
or
popa
push
mov
ret
iret
mov
pop
lods
mov
fadd
pop
or
fmulp
or
in
mov
test
push
add
pushf
fsubrs
mov
pop
pop
mov
rcrl
popa
ficoml
adc
mov
jnp
xchg
inc
pop
jle
test
cmpsl
lret
jbe
aaa
sbb
lds
pop
mov
in
addr16
xor
jecxz
pusha
or
rclb
sbb
scas
es
push
push
sbb
cs
lock
loopne
mov
pop
jbe
add
loopne
xor
jecxz
loope
mov
and
add
sbb
jmp
mov
xchg
dec
fildl
xchg
push
pop
sbb
daa
xchg
nop
mov
out
test
xchg
jle
mov
mov
add
movsb
jmp
fldenv
imul
bound
mov
insl
mov
adc
dec
bound
cmpsl
es
add
inc
or
dec
xor
out
xchg
icebp
push
incb
insb
hlt
jno
in
xor
push
xor
pop
jae
mov
out
das
push
jbe
mov
pop
mov
mov
xor
xor
stc
mov
pop
repnz
std
adc
loopne
mov
xor
xchg
or
pushf
jp
test
ja
push
mov
cmp
and
fsubrl
sbb
add
lcall
div
mov
andb
int3
ret
mov
lahf
mov
cmp
jno
xchg
push
mov
or
insl
pmullw
dec
jbe
mov
notb
cld
insb
lcall
dec
adc
xchg
jae
mov
imull
pop
push
sarl
lcall
int3
std
push
jl
mov
rcrb
mov
fisubs
cld
and
sti
dec
jne
mov
cld
int
mov
lret
sahf
cwtl
add
mov
push
mov
lret
and
sbb
insl
sub
lea
push
add
xor
aas
xor
jnp
fisubl
push
inc
add
sub
and
pop
cli
sahf
jnp
sbb
mov
scas
enter
jl
mov
xor
das
or
ret
push
imul
jmp
adc
dec
mov
scas
mov
ljmp
popa
inc
imul
std
mov
pop
les
jne
lds
and
pop
jae
or
test
jl
jbe
loopne
mov
pop
icebp
cmp
xor
int3
fcmovnb
adc
jbe
ljmp
ret
std
fimuls
mov
in
popf
and
fistpll
insb
push
add
add
sti
push
push
sub
xor
popa
test
int
lea
in
aaa
frndint
scas
cmpsb
lret
clc
push
shrb
jg
sbb
and
mov
movsb
sub
xor
xchg
repz
inc
mov
mov
int
push
fnsave
loope
and
sub
movsl
dec
ss
or
stc
rcl
test
jb
psrlw
pop
fs
mull
mov
in
sbb
pop
loope
push
nop
or
outsb
dec
mov
dec
scas
pop
pop
inc
sbb
cs
push
faddl
into
icebp
add
iret
cmp
jg
sbb
xor
icebp
call
mov
xchg
xchg
lds
lret
mov
daa
into
lea
mov
rcl
mov
sub
mov
pop
push
jb
or
push
adc
xchg
fstl
stc
or
dec
add
inc
sbb
shlb
mov
fdivl
pop
jg
xor
push
test
out
loop
subb
out
iret
ds
sub
into
sbb
loope
jle
sbb
push
push
cmp
mov
loopne
mov
lret
mov
lds
or
stos
push
outsb
xchg
push
loop
adcb
inc
and
cld
out
outsl
lahf
mov
sarb
test
mov
xor
push
add
push
pop
and
mov
nop
add
xor
and
scas
dec
dec
inc
jg
mov
movsl
and
xor
mov
pop
pop
mov
js
add
fwait
push
ror
inc
jo
popl
sbb
jae
sbb
fs
pusha
pop
lret
add
in
mov
cmp
pop
out
sub
fildll
adc
ss
int3
insb
shl
mov
cwtl
inc
sbb
roll
inc
negb
fbld
cmp
ss
clc
jge
sub
fcmovbe
js
out
pushf
sbb
pop
adc
push
jmp
sar
ss
test
je
ja
ljmp
imul
imul
push
test
xlat
adc
lea
sahf
daa
push
shl
sub
out
fistps
and
mov
cmpb
mov
sbb
xchg
push
xchg
lds
dec
pop
pop
fbld
into
scas
js
fwait
call
inc
int3
dec
lahf
outsl
aaa
int
jmp
mov
sub
sub
mov
xor
icebp
cs
icebp
xor
inc
arpl
mov
or
jl
test
mov
xor
in
inc
sub
out
push
xchg
push
jo
xlat
sub
stos
xorb
mov
sub
stos
out
xor
and
cmpsb
lret
jo
push
in
pop
adc
sbb
dec
shll
push
cmp
xlat
jae
push
xor
decl
hlt
inc
int
movsb
jmp
arpl
incl
das
cmpsb
pop
ljmp
mov
push
inc
cmpsl
aad
int3
stos
mov
fwait
xchg
fsubrl
rclb
dec
hlt
xor
xchg
push
mov
repnz
xchg
jle
popa
adc
add
stc
inc
int
iret
cli
xchg
pop
std
or
popf
shll
cmp
adc
lcall
or
adc
push
mov
push
xlat
inc
ret
mov
aad
nop
jne
fistpl
or
jbe
xchg
scas
push
inc
push
xor
je
sti
shrb
data16
mov
or
mov
xor
shlb
push
or
and
das
push
xor
repnz
and
js
or
ljmp
mov
push
jle
loopne
xor
mov
shrb
jnp
jecxz
mov
jecxz
and
ds
cmp
jbe
pop
xchg
cmpsl
bound
jns
or
je
call
ljmp
sub
and
fs
imul
push
imul
add
orb
daa
inc
inc
pop
outsl
and
or
push
cmp
shlb
xchg
push
loop
cmc
mov
and
shlb
inc
js
and
out
iret
jge
mov
rcrl
push
adc
add
pop
adc
sub
sbb
sub
test
mov
mov
mov
nop
daa
push
or
popa
jb
mov
sarb
xlat
mov
dec
sub
fs
out
xchg
lret
repnz
jae
adc
or
hlt
cmp
and
subl
ja
dec
lea
mov
popl
xchg
leave
jecxz
pop
cmp
xor
outsb
xchg
mov
repnz
pusha
mov
inc
test
aam
xchg
outsl
xchg
pusha
pop
xor
push
enter
xchg
mov
xchg
mov
shrl
ret
fs
rcrb
jns
inc
jmp
mov
clc
push
adc
sub
fwait
out
mov
mov
mov
mov
stc
test
mov
je
sub
std
jge
mov
jno
and
cwtl
and
shrb
sub
stos
push
push
nop
push
mov
sbb
xchg
adc
cli
cmpsb
mov
ja
dec
mov
ss
jb
out
inc
push
inc
mov
push
aad
out
mov
add
adc
add
push
dec
clc
fmull
mov
inc
add
lcall
pusha
int
cmp
or
shll
sbb
test
cs
mov
adc
js
jl
in
outsl
lods
jns
pop
ret
stc
icebp
push
push
jns
inc
pop
pop
notb
mov
or
xor
push
or
cmpsb
mov
mov
xchg
fiadds
add
movsb
mov
mov
jns
js
cmp
mov
jg
aad
cmpsl
sub
outsl
jnp
data16
loope
add
push
daa
and
push
mov
xlat
cmpsl
dec
xchg
mov
ljmp
xor
xor
sbb
add
mov
dec
mov
jae
pop
inc
scas
faddl
push
sahf
adc
loope
stos
add
and
das
es
lds
js
jne
or
orb
aas
fisubs
xchg
mov
das
xor
in
cmp
jb
stos
mov
and
fldt
and
rcll
jnp
pop
test
bnd
pushf
movsl
loop
cwtl
ss
xor
je
rclb
notb
and
fists
fwait
fwait
addb
movsl
out
xorl
and
jb
imul
mov
cwtl
mov
bound
cmpsb
push
ret
jo
push
inc
adc
ljmp
call
mov
fadds
das
sbb
jb
xor
loopne
out
jb
ret
arpl
test
pop
xchg
push
in
insl
xchg
mov
lods
cmp
push
lret
inc
dec
pop
jo
sahf
loopne
cltd
imul
subb
pop
mov
pusha
and
je
test
adc
xchg
aam
mov
in
daa
fcoms
ljmp
mov
fiadds
and
push
ret
sub
add
sub
or
push
loop
jg
loope
xchg
js
mov
and
sbb
inc
rorb
test
xlat
mov
cmp
mov
gs
lahf
cmp
scas
push
fstps
imul
scas
xor
aam
std
jae
dec
imul
xchg
add
inc
je
cmpsl
movsb
push
js
adc
push
cmp
adc
mov
aaa
dec
lret
stos
mov
sub
int
xor
addl
push
mov
outsl
jp
xchg
and
xlat
xor
shl
and
imul
mov
sub
and
add
sub
loope
imull
pusha
mov
addr16
inc
pop
aam
jnp
mov
xchg
repz
call
push
mov
add
pushf
fcoms
imul
xlat
pushf
mov
sbb
inc
push
scas
test
shlb
enter
aam
cmp
movsb
adc
outsl
outsl
call
loop
call
inc
dec
lret
xor
add
fsubr
test
sub
jmp
pop
std
stos
adc
scas
jnp
sbb
mov
cwtl
and
jns
shr
fmuls
push
cmp
call
js
push
push
int
jb
arpl
cmp
cmp
push
jns
cmp
dec
popa
dec
mov
inc
pop
mov
imul
dec
xor
test
ret
mov
test
mov
inc
repz
es
lahf
mov
addr16
ss
cmp
pop
rcrb
out
pop
xchg
icebp
ja
aaa
and
je
popa
in
scas
mov
xchg
push
pop
push
sarb
leave
lahf
dec
mov
xchg
pop
inc
ss
xor
mov
shr
cld
hlt
dec
lods
xlat
insl
into
nop
fists
jb
loop
pop
mov
adc
sub
xchg
and
loope
std
lods
pusha
cld
out
mov
imul
mov
mov
fstps
mov
sub
and
jne
mov
jb
cmpsb
dec
fidivrs
pop
xor
into
xchg
ds
ds
mov
cmp
sbb
cli
popa
mov
mov
mov
inc
add
shlb
mov
mov
push
cwtl
inc
ljmp
sub
stos
in
jnp
or
xchg
cli
mov
jmp
fcmovnbe
inc
or
lcall
sti
jno
add
xchg
stos
cmp
scas
popa
add
inc
cmpsb
mov
daa
cltd
aas
mov
fmuls
pop
sub
push
mov
xor
sub
fwait
cmc
test
sbb
jo
dec
cltd
push
cmp
jp
clc
andl
fwait
xchg
leave
shlb
pop
movsl
dec
jbe
or
imul
sbb
int
adc
mov
push
push
out
enter
pushl
pop
pop
xor
addl
dec
jae
xchg
inc
into
cld
stos
fsubrl
popa
xor
enter
faddl
pusha
lcall
xor
orb
leave
sarb
xchg
xor
icebp
aaa
jae
in
icebp
ds
xchg
push
test
pop
push
and
and
cli
push
mov
adc
rcll
icebp
xchg
movsb
adc
mov
add
jge
push
inc
test
mov
jnp
fwait
or
add
hlt
stos
inc
xchg
ljmp
pop
push
sbb
push
out
mov
call
mov
jne
addr16
dec
cmp
jns
stos
fs
cmp
imul
movsb
cmc
shld
inc
andb
push
dec
scas
push
shlb
jno
mov
or
mov
xchg
pop
insl
adc
sub
test
int
sbb
mov
subb
ret
test
xor
insb
popf
cmp
fisubrl
ss
fdivrs
enter
rcll
mov
xor
xchg
call
pop
dec
mov
test
fwait
adc
sub
outsl
int
inc
lcall
mov
lods
ret
inc
xchg
fwait
sbb
inc
mov
ja
subl
int
iret
mov
inc
cmp
rorl
jns
ret
es
jecxz
loop
xor
mov
sbb
add
dec
inc
cli
sub
mov
paddq
xchg
jge
push
lock
inc
mov
ja
add
enter
inc
aaa
popa
fnstcw
or
leave
pop
clc
cli
insb
fiaddl
aad
mov
inc
popf
clc
push
ret
loopne
add
adc
or
mov
call
mov
xchg
adc
test
aad
ljmp
rdseed
mov
fidivrs
sub
mov
cmc
mov
sbb
repz
mov
notb
dec
adc
loop
test
lock
std
addr16
and
addr16
sbb
jb
jp
call
mov
and
fcoms
in
aas
cmc
or
rcrl
repz
push
out
xchg
addl
enter
pop
cmpsl
sbb
adc
cmp
ljmp
inc
arpl
popf
test
mov
into
arpl
mov
push
cmovne
xor
mov
sub
lds
ffreep
jecxz
enter
lret
icebp
mov
add
jo
ss
push
div
mov
inc
xlat
test
dec
or
fsubs
mov
int
sbb
shrb
mov
sysexit
cmp
js
cmp
xchg
imul
fistpl
mov
push
into
je
mov
fisttps
push
mov
or
divl
push
mov
sarl
test
js
inc
mov
aas
ror
dec
ljmp
test
and
fsubl
or
mov
xchg
ss
leave
cmp
ret
xlat
aaa
mov
rcll
repz
and
mov
cmc
xchg
mov
test
pop
jmp
iret
je
pop
push
das
xchg
inc
xchg
pop
xor
push
les
lahf
inc
in
mov
push
cmp
repnz
cmpb
pop
sub
sub
psrlw
repz
sub
popf
fdivrs
dec
pusha
or
mov
sub
cmp
xor
dec
fistpll
mov
jnp
xchg
sbb
fs
mov
es
lret
loopne
xchg
sub
push
hlt
jmp
pop
insb
pusha
push
mov
push
dec
leave
fistl
loopne
push
cmp
popl
in
push
insl
ja
xor
xchg
leave
or
sbb
inc
sarl
dec
xchg
mov
mov
fdiv
sbb
fildl
popa
icebp
iret
push
gs
sub
je
in
xor
sahf
jge
and
or
lcall
out
pop
loop
loopne
dec
icebp
sahf
jge
cld
cmp
jo
xor
xchg
btc
add
sub
mov
pop
xchg
ja,pt
jl
mov
cmpsb
jnp
iret
ljmp
fdiv
pop
sub
ss
or
pop
jno
mov
loop
jge
int
test
fwait
and
scas
add
popa
lcall
sub
scas
ljmp
cmc
pop
out
fs
and
mov
repnz
test
pop
mov
and
outsl
add
xlat
divb
adc
push
and
test
cmp
shr
or
iret
sub
jno
push
cli
andb
aaa
inc
aaa
adc
call
mov
repnz
dec
add
mov
and
test
jnp
repnz
jl
aaa
and
mov
insl
push
movsb
hlt
xor
mov
xchg
movsl
xchg
fwait
sahf
jae
leave
push
lock
add
xchg
mov
jae
push
jb
and
cmp
inc
lea
scas
andb
das
testl
stc
jmp
adc
mov
pop
shlb
push
mov
movb
fcmovnu
jb
xor
out
cmc
adc
or
xlat
xchg
inc
bound
cmpsl
jmp
in
je
fcmove
push
in
xor
adc
cmp
and
orb
and
or
inc
inc
aam
mov
shl
cmp
nop
mov
or
rcrb
or
sti
mov
cmp
sub
cmp
mov
in
add
aaa
sbb
or
sub
push
jl
mov
pop
lret
sbb
popf
insb
dec
cmp
pop
xchg
jb
add
push
adc
or
idivl
and
push
dec
jb
loopne
int
push
cmpsl
xor
adc
cld
add
data16
cltd
fadds
cltd
arpl
push
jno
aas
outsb
xor
sub
pop
stc
mov
pop
aaa
push
enter
fs
stc
pusha
rorl
ret
xchg
addr16
adc
jmp
lret
dec
lds
repnz
icebp
sbb
sub
icebp
pusha
cwtl
sbb
int
pop
orb
xorl
jbe
dec
notb
popa
fcmovbe
add
mov
sbb
jecxz
hlt
jp
out
fstpt
push
and
add
jbe
pop
in
je
jns
lea
fistpl
insb
jge
sti
mov
mov
sub
es
sbb
imul
addr16
jne
cwtl
icebp
std
test
dec
add
sahf
repnz
int3
jnp
sub
xchg
loope
mov
cmp
lahf
xor
lea
xchg
dec
mov
out
dec
adc
lods
push
or
push
jns
pop
push
adc
push
pop
inc
out
mov
inc
js
jb
aad
adc
add
sbb
and
aad
pop
daa
iret
popa
lahf
jle
add
or
dec
aad
movl
outsl
fildll
mov
ja
push
shll
mov
pushf
cmp
cmp
xor
mov
movsb
sbb
enter
dec
mov
clc
lret
mov
sub
lcall
pushf
test
cli
rorl
jns
adc
nop
mov
mov
out
add
and
iret
cld
mov
imul
mov
mov
sub
popf
scas
mov
and
cmp
fwait
add
jb
jle
pushf
test
in
dec
pusha
dec
inc
out
repz
mov
push
out
push
ss
adc
sub
sub
adc
push
inc
repnz
sti
jno
pusha
ss
rcrb
outsb
lods
or
adc
cmp
and
xor
mov
add
sti
sar
sbb
outsl
lods
pop
popf
sub
or
pop
repz
pop
add
insl
mov
scas
loope
push
add
data16
mov
or
ja
mov
inc
mov
or
and
mov
mov
shll
jmp
ja
pop
xlat
mov
hlt
into
and
pop
add
loop
mov
inc
mov
mov
xor
adc
inc
sub
xor
xor
les
or
aaa
rclb
xlat
mov
cmp
out
push
jbe
adc
imul
add
pop
mov
gs
jnp
iret
or
inc
div
jns
adc
mov
iret
ljmp
adc
stos
mov
cmp
lea
cmc
aas
or
aam
jmp
ret
adc
insb
xchg
aam
xor
inc
sbb
and
push
push
mov
sub
fcoml
lret
xchg
das
dec
lods
ret
int3
mov
fiadds
dec
or
mov
movsb
mov
aad
xchg
jae
sub
lock
clc
lock
dec
scas
mov
cmpsb
ret
in
lcall
mov
push
shl
scas
xor
xor
mov
jbe
inc
xor
nop
jle
push
shrb
xchg
push
cmp
je
add
mov
adc
pop
xor
jb
sub
xchg
aam
add
sub
push
push
xchg
sub
xchg
pop
and
mov
or
sti
js
fwait
jp
leave
inc
loopne
xor
ret
aas
jno
out
push
push
mull
mov
clc
sub
or
dec
jae
and
bound
cmpsl
fdiv
and
mov
xchg
xor
std
xchg
xorl
cmp
daa
mov
out
xchg
nop
lret
jl
push
pop
mov
mov
lar
divl
cmp
arpl
cmpsl
imul
adc
jg
xchg
sbb
bound
pop
inc
mov
iret
fdivs
xchg
mov
add
dec
dec
int
fsubrs
dec
mov
jge
loope
pop
sbb
adc
mov
jle
add
xchg
sub
adc
cltd
pop
aam
pop
lahf
mov
imul
dec
out
sarl
subb
sbb
sbb
int
jle
insb
mov
imul
xchg
jns
push
dec
sbb
push
decb
xor
xor
xchg
sub
lds
or
mov
sbb
shrl
das
arpl
mov
mov
mov
push
pop
sbb
sub
push
pop
sub
in
xor
data16
into
ljmp
mov
in
jecxz
jns
cmp
mov
xchg
add
inc
adc
fs
sbb
int
jnp
bound
in
int
mov
jl
stc
sti
repnz
pop
mov
imul
xchg
mov
jbe
loop
cmpsb
mov
sub
adcb
xorl
ja
jge
test
cltd
and
cmp
leave
lds
ljmp
out
add
lret
call
out
dec
test
scas
cmp
mov
mov
cmp
xchg
pusha
stc
add
out
jbe
jb
xchg
dec
xchg
push
add
xchg
cld
rcl
test
xchg
fsubs
push
or
mov
lods
jg
xlat
dec
push
dec
pop
or
fcomps
in
pop
cmp
mov
xchg
adc
jmp
repnz
negl
repnz
cmp
xchg
in
xchg
adc
fsubrl
into
inc
sub
mov
adcb
sbb
jae
aam
mov
out
add
insl
pop
repnz
imul
stos
ret
push
mov
into
inc
stos
loop
icebp
jge
jo
ljmp
xchg
shlb
or
jmp
mov
or
mov
subb
inc
jne
sarb
dec
jnp
cmp
dec
xor
mov
sbb
lds
daa
aas
repnz
cmp
cmp
xchg
loop
imul
push
push
scas
inc
stc
add
hlt
in
xor
icebp
jae
mov
jnp
push
jecxz
int
icebp
jp
jge
mov
ficompl
jo
movsl
mov
mov
sbb
mov
mov
test
out
das
xor
mov
push
jecxz
pop
add
enter
insb
mov
lock
lcall
mov
outsb
ss
cmp
and
cld
rcrb
cld
cmpsl
sbb
aad
sti
cmpsl
sbb
clc
scas
les
jg
xchg
jo
mov
insb
sar
cmp
cltd
out
and
ja
push
imul
dec
push
dec
inc
push
push
jno
je
adc
loopne
ss
leave
mov
imul
lahf
mov
decl
ret
lea
jno
mov
cmp
das
leave
or
lds
iret
pop
insl
jb
fwait
in
jp
mov
cmp
popf
mov
pavgw
outsl
mov
sbb
cs
lods
loopne
or
int3
mov
jg
adc
add
mov
jns
push
popf
js
cmp
xchg
test
ret
ret
jg
out
addb
push
jno
cmc
pushf
inc
cwtl
flds
pop
mov
repnz
push
rorb
mov
dec
daa
repnz
ret
push
sbbl
mov
stos
mov
inc
add
mov
inc
sar
into
sub
or
imul
inc
cmc
push
add
cmp
adc
scas
stos
adc
push
lea
loop
call
shll
fistpll
inc
and
push
loope
les
push
and
sbb
dec
pop
in
and
enter
int
enter
jmp
inc
dec
push
jge
mov
subb
inc
inc
clc
cmp
and
loope
and
jno
dec
cmp
or
and
mov
xor
inc
enter
aam
mov
push
ja
mov
or
int3
fsubl
dec
les
dec
mov
xchg
inc
movsb
sub
sahf
add
ja
xor
jae
lods
adc
ss
and
push
dec
in
xchg
ret
pushf
xchg
mov
cld
add
cmp
lret
mov
in
dec
lcall
ja
shl
stos
sub
dec
fsubrp
sbb
adc
xchg
andl
sub
pop
jl
cmpsl
mov
scas
mov
pop
enter
lds
mov
sahf
sbb
shlb
fwait
jns
stc
popf
std
mov
int
lock
in
inc
fwait
mov
addb
sub
adc
out
xchg
lret
push
mov
fidivs
mov
stos
insl
aam
int
mov
mov
aaa
popf
out
movsb
out
fmull
cmp
data16
shlb
push
push
fucomp
stos
or
sbb
aaa
jge
repz
pop
pop
push
clc
lcall
popf
adc
stos
adc
xlat
fcoml
mov
dec
mov
shlb
out
add
andl
cmc
jge
mov
shl
insl
fnstcw
lea
inc
jle
xchg
ljmp
mov
out
in
mov
js,pt
adc
push
clc
js
cli
mov
movsl
test
sahf
mov
insl
push
jbe
mov
scas
nop
xchg
pop
xlat
loopne
int
es
dec
push
cwtl
or
and
lock
mov
adc
xchg
xor
dec
mov
or
cltd
sub
pop
shlb
in
mov
or
pop
push
xchg
sbb
popf
push
xorl
add
ljmp
cmpsl
pop
inc
insb
xor
jp
sub
jge
sub
xor
lahf
mov
incb
inc
aaa
sub
sbb
mov
insb
push
pop
stos
cmpsl
adc
outsl
loopne
push
lods
push
dec
xor
movsl
and
lods
cmp
sub
dec
rcrb
push
insb
lret
scas
cs
stos
sahf
fdivrs
mov
dec
xchg
loope
int
nop
jg
mov
xor
adc
jmp
push
sbb
jg
scas
sbb
mov
sbb
or
mov
mov
mov
rcrb
int
add
and
out
inc
sbb
jns
imul
mov
hlt
inc
ljmp
pop
leave
fldenv
pop
mov
cmpl
ficoml
iret
hlt
pushf
sti
filds
jl
mov
xor
outsb
jne
sub
js
popa
pop
push
lea
rolb
je
mov
sub
out
pop
sti
sbb
dec
pop
mov
dec
repz
in
mov
jle
mov
cmpsl
mov
mov
imul
dec
dec
mov
cmp
cmp
cli
sub
mov
ret
das
cmc
dec
ret
fiadds
xchg
mov
mov
test
stc
scas
mov
pushf
mov
mov
das
push
sbb
jne
xchg
nop
cmp
xchg
jne
clc
iret
ficomps
pop
and
and
insb
in
mov
mov
out
mov
lahf
cmp
hlt
pop
test
lods
fnsave
int3
jnp
or
daa
fdivrs
sbb
fstpl
dec
cmc
movsb
or
lds
or
andl
push
cmpl
jns
pop
sahf
imul
mov
shl
or
in
popa
and
js
mov
mov
and
vcmppd
std
jns
pop
xor
xor
jecxz
and
sbb
fdivrl
int3
lea
cmp
stc
cwtl
nop
mov
inc
mov
jmp
pop
lock
adc
jl
mov
pop
mov
xchg
fwait
test
or
sbb
inc
out
movsb
mov
xor
insl
cmp
out
mov
jae
cmp
cmpsb
inc
xorb
test
jle
and
xor
push
dec
fldt
fildll
repnz
popa
adc
stc
addr16
fistl
adc
mov
inc
test
inc
out
out
or
imul
mov
imul
sub
loope
popf
fimull
pop
rcrb
lds
jns
pop
inc
es
or
inc
adc
pop
rol
fstpt
fcomip
pusha
mov
xchg
sub
xor
psubd
iret
or
in
lret
inc
jl
jb
xchg
push
xchg
test
adc
fmul
cmp
fimull
std
jp
dec
and
cmpsb
lods
mov
inc
jg
xchg
xor
imul
mov
pop
pop
cwtl
insl
xchg
xchg
push
jecxz
sbb
mov
sbb
mov
sub
pop
daa
dec
int3
and
mov
mov
sarl
mov
std
je
sti
mov
xchg
or
fisubrl
xor
ljmp
sbb
mov
iret
loopne
pop
mov
pop
in
and
insb
sub
cmp
xchg
fisttps
mov
cli
sbb
cmpsl
int
push
sbb
stos
sti
add
into
imul
sbbl
dec
xor
testl
fsub
push
mov
js
adc
jbe
mov
sub
or
scas
lods
or
cs
incl
adc
test
ja
push
add
jno
add
rclb
and
out
sbb
jge
lock
js
pop
mov
pop
out
arpl
jmp
push
ret
inc
movsl
jp
rcrb
adc
mov
data16
cmpsb
insb
pop
cwtl
cmp
sbb
test
aad
aam
fldl
aad
rcrl
lds
mov
mov
or
jno
loopne
push
outsl
jg
mov
sti
dec
loopne
jnp
cmp
loopne
mov
jns
jmp
test
leave
add
or
add
sahf
lret
int3
fwait
out
ret
cmp
jo
inc
mov
aas
mov
insl
mov
mov
shr
stos
jmp
test
or
lcall
aaa
jmp
clc
jno
adcl
arpl
jp
sbb
xlat
dec
jbe
xchg
mov
pop
jne
cmp
insb
lcall
push
xchg
inc
js
fbld
inc
scas
add
hlt
iret
movsl
sub
lds
adc
fisubrl
push
adc
push
faddl
fs
jle
sbb
and
out
adc
cwtl
leave
iret
cmp
cmc
test
lret
dec
dec
and
pop
sbb
xchg
mov
pop
ljmp
xor
xchg
push
and
xor
mov
push
outsl
repnz
stc
ja
sbb
pop
push
inc
and
or
push
adc
push
push
mov
pushf
mov
pop
cmc
in
sub
fcompl
shrb
addb
lahf
rorb
push
jge
sti
jno
mov
xlat
mov
lods
xchg
jo
imul
xlat
jl
xchg
sub
pop
aam
ret
test
test
jmp
and
mov
cmp
lds
or
sbb
inc
out
and
push
fsubs
lea
cltd
and
outsl
or
dec
es
mov
or
sbb
fdivr
int
mov
pop
sbb
xchg
je
outsl
fs
xor
pop
lods
push
add
outsl
xchg
push
scas
mov
mov
lods
shlb
rcll
mov
int3
cmp
jecxz
outsl
jno
mov
dec
inc
xchg
push
std
xor
adc
inc
add
cmpsb
out
inc
push
push
cli
cmp
loope
inc
sbb
test
movsl
movsl
sar
jnp
add
mov
and
mov
sarl
jp
pop
shrb
daa
sub
jno
cmpsl
pop
call
sub
hlt
push
xor
call
mov
xor
ret
push
sbb
pop
stc
ror
or
and
pop
mov
cmp
add
sub
into
inc
ds
mov
cld
cld
adc
js
repz
fildll
mov
out
mov
in
push
push
pusha
out
in
mov
mov
loopne
sti
sub
leave
cmp
push
cmp
fisubs
outsl
adc
mov
movsl
les
stos
and
mov
or
mov
leave
sbb
std
xor
mov
mov
outsl
mov
add
push
push
rorb
xor
ficoml
cmp
hlt
vpcmov
cmp
repz
movsl
xor
movsb
xor
repnz
jns
das
sbb
dec
lea
xor
jmp
jb
sahf
xor
scas
inc
fs
hlt
into
mov
push
roll
test
stos
insb
jmp
bound
mov
push
insl
xchg
dec
pop
imul
mov
xlat
and
xchg
out
rcr
push
push
mov
jecxz
daa
or
mov
adc
push
mov
sub
ds
addr16
pop
cmp
arpl
push
out
and
inc
cmpsl
call
test
jb
aaa
push
sbb
pop
cltd
aas
je
mov
xchg
xor
dec
repz
loopne
mov
ror
xchg
xchg
sub
jle
add
int3
mov
push
in
cltd
inc
ret
leave
loopne
es
pushf
orl
cmc
xlat
mov
sub
sahf
leave
pop
popa
test
das
pop
pop
lods
mov
jb
js
sti
dec
bound
pop
rorl
sub
fbstp
dec
or
lds
sbb
clc
sbb
xor
lret
mov
insl
sub
push
aad
rorl
adc
mov
fdivrp
jbe
fsubs
adcb
mov
aad
adcb
sbb
das
add
mov
cld
cmp
call
pop
pop
nopl
sbb
mov
out
or
ss
imul
mov
sub
sub
call
outsl
lahf
mov
cmpsl
pushf
adc
inc
pop
imul
jl
loope
xor
sbb
loope
push
fcompl
cmpb
sbbb
sbb
outsl
mov
std
pop
in
lret
insb
push
insb
pop
add
pop
dec
ja
enter
jmp
movsl
int3
mov
adc
jmp
scas
inc
int
cmpsl
mov
leave
mov
jne
xor
into
xchg
sub
ror
jp
xor
cmp
add
lcall
pop
cwtl
push
aaa
insl
nop
mov
dec
inc
loop
cmp
sub
add
or
inc
pop
mov
loopne
push
popa
sbb
jns
jp
mov
stos
sbb
xchg
sub
mov
xor
adc
pop
iret
in
test
add
mov
pushf
mov
lea
fcmovne
movsl
int3
xchg
call
push
jg
fcompl
movsl
adc
jmp
add
or
fwait
or
ret
xlat
mov
xchg
xorl
jp
dec
add
loop
sub
mov
fldcw
out
shl
xor
iret
pop
jle
xchg
mov
mov
lret
aas
xchg
sbb
sub
fcoms
addb
dec
les
jno
imul
sub
mov
outsb
sbb
dec
pop
or
fwait
inc
in
push
mov
cmp
lods
xchg
cmp
add
sti
dec
not
adc
into
in
into
popa
jnp
jb
adc
outsl
push
dec
mov
int3
loop
adc
popa
arpl
mov
fmull
mov
or
xchg
sarl
jb
mov
mov
cmp
jo
adc
add
ret
aas
add
js
jecxz
jae
xchg
mov
and
jg
mov
push
ss
movsl
inc
xchg
pop
jno
stos
jns
xchg
adc
not
icebp
cmp
sub
xchg
dec
jb
push
das
ss
out
sbb
and
sar
or
insl
lds
mov
add
rorl
cmp
mov
fbstp
lods
in
pop
inc
lret
mov
and
loop
outsl
mov
ds
jb
pusha
or
jmp
pop
xchg
jecxz
js
cltd
es
xor
sub
imul
in
mov
mov
insb
fsubrp
sub
stos
das
imul
fstpt
insl
adc
sub
or
flds
xor
sbb
xchg
dec
mov
jmp
movsl
dec
add
loope
lahf
test
arpl
leave
sbb
clc
shl
add
scas
cmp
xchg
xor
pop
sahf
test
push
fbld
xor
jbe
add
iret
js
inc
test
cmp
mov
addb
mov
fbstp
subb
pusha
lahf
je
inc
mov
pop
mov
repnz
outsl
mov
fidivrl
cli
fcoms
push
rol
insb
cmp
imul
xchg
xchg
sub
loope
mov
std
sarl
shufps
aaa
pop
iret
ret
mov
bound
out
fistpll
mov
and
fs
inc
mov
rcl
sub
jmp
cmp
push
jge
jp
int3
sub
push
lods
dec
shll
andb
ret
cld
fs
inc
pop
rorb
das
xor
dec
mov
data16
inc
add
rcr
inc
loopne
repnz
sbb
lret
adc
nop
fwait
or
jmp
dec
enter
mov
mov
movsb
mov
mov
adc
inc
push
scas
lret
pushl
fwait
int3
dec
mov
sub
pushf
xchg
sub
push
inc
leave
imul
mov
int3
xchg
jl
push
ds
popl
in
jp
mov
mov
gs
int3
mov
rorb
stos
int3
mov
add
aad
lods
adcb
call
arpl
and
aaa
cmpsb
add
xor
fsubp
mov
test
mov
dec
aam
cmc
mov
imul
mov
pop
aaa
push
adc
xchg
popfw
mov
xor
sub
mov
into
enter
push
xor
lret
pop
inc
xchg
mov
fdivr
testb
jbe
pop
pop
or
add
xor
cmp
les
or
dec
int
test
jae
mull
std
ja
out
repnz
fisubrs
pop
jno
lods
mov
out
mov
andb
jle
popa
mov
int
mov
jbe
mov
fidivl
mov
mov
and
test
xor
or
sub
and
mov
sbb
jb
inc
movsl
fucomi
mov
and
ficompl
jno
dec
inc
out
or
inc
ret
jp
lret
rclb
bswap
adc
testl
inc
clc
cs
lea
gs
repnz
jp
mov
cmp
push
shl
in
inc
add
in
mov
cmp
pop
mov
out
fisubs
sarb
aam
xor
shl
pusha
dec
cs
loopne
and
mov
out
hlt
shlb
inc
push
fmull
adc
xor
stc
cmpsb
dec
mov
pop
sub
and
dec
jge
mov
test
xor
icebp
or
jecxz
mov
pop
pop
enter
bound
cmp
jl
sbb
mov
loope
xchg
xor
inc
add
adc
push
mov
daa
loop
loopne
paddusb
add
movsb
dec
lret
fwait
out
xchg
jo
std
lret
cmc
cmp
add
dec
jge
outsb
data16
out
jecxz
nop
jl
dec
dec
cmpsb
and
cmp
adc
push
xchg
mov
fimuls
in
mov
push
push
rol
lahf
cltd
mov
push
insb
or
mov
js
pop
xchg
and
and
xor
xor
std
das
push
leave
stc
push
cmp
jle
jmp
cmp
mov
cltd
js
fdivrs
inc
fstpt
cli
aas
cmc
push
mov
aam
int
mov
or
pop
or
dec
fdivs
stos
cmpsb
sub
cli
out
loopne
test
test
and
mov
lods
jns
jnp
sbb
mov
inc
data16
sarb
jecxz
sbb
or
mov
popa
adc
addr16
xor
jl
cmp
push
mov
dec
jmp
mov
comiss
mov
in
roll
pop
push
cmpsl
test
xchg
jge
jnp
jmp
into
sub
out
repnz
sub
sahf
xchg
xchg
xchg
cmp
lahf
or
mov
testb
jmp
arpl
mov
dec
cmpsl
inc
addl
push
push
mov
lcall
mov
imul
iret
add
arpl
push
mov
test
mov
dec
dec
sub
or
js
cmpsb
dec
scas
scas
mov
and
ds
cmc
sbb
int
adc
cwtl
xchg
or
and
pop
sbb
aas
imul
push
out
loope
xor
mov
sbb
xor
das
cmpsb
ds
sub
subl
jo
sbb
mov
lods
popa
mov
das
pop
sbb
mov
jmp
cmpsl
cmp
pop
test
xchg
cld
je
insl
pop
dec
cli
pop
push
jno
lock
xchg
imul
js
cmp
clc
mov
push
push
mov
dec
cli
sti
je
xorb
call
mov
jg
nop
stos
in
dec
cmp
into
xchg
mov
lret
adc
mov
lret
inc
mov
inc
cmp
jmp
fisubrs
jns
or
into
jb
ss
dec
cs
cmp
addb
xchg
je
movsl
xor
inc
and
push
js
jl
adc
add
push
in
xchg
mov
sbb
jmp
and
inc
push
xchg
jb
pop
jmp
mov
aas
push
adc
and
adc
fnstcw
or
repnz
ds
orl
enter
lock
push
ret
and
add
mov
ljmp
rcll
in
mov
nop
pop
jo
cmpsl
sbb
leave
add
pop
or
xchg
sbb
inc
ljmp
and
pop
sub
insb
daa
jp
fnstenv
clc
test
inc
repz
sub
or
xchg
pop
stos
mov
mov
clc
insb
xchg
cmc
fsubl
adc
dec
lret
psubq
aad
pop
enter
sti
lcall
nop
cmp
lods
insb
mov
add
sbb
jg
cmp
test
sub
mov
jmp
mov
xor
fists
inc
mov
scas
fwait
sbb
popf
add
xchg
add
lds
roll
jne
sub
int3
imul
ret
mov
xchg
es
cmp
mov
out
mov
mov
mov
mov
add
push
popa
in
call
popf
aas
add
outsl
cmp
fidivs
fnstsw
cmpsl
insl
out
js
xchg
pop
imul
mov
in
stos
cmpsl
xchg
push
test
mov
or
sub
lds
sub
jl
fs
mov
dec
fstpl
mov
push
push
adc
fcoml
fadd
in
int3
jbe
lret
lock
lcall
cmpsb
outsb
fadds
mov
sti
mov
bnd
sub
fiadds
test
loope
mov
pop
test
jno
icebp
pop
movsl
ds
lret
scas
pop
mov
mov
mov
daa
push
xor
addb
inc
sbb
mov
lods
mov
fcomps
imul
push
hlt
fmuls
outsb
pop
dec
ror
lods
mov
mov
mov
jg
dec
jne
jp
jnp
imul
test
adc
and
jmp
lea
xor
mov
sub
adc
inc
cmc
cmp
ja
fsubr
paddb
pop
hlt
xlat
mov
jl
test
sbb
xor
xor
inc
into
in
xor
lret
or
popf
dec
aaa
in
mov
xchg
jle
sbb
jbe
insb
repnz
add
and
outsb
pop
inc
cld
push
add
call
cmp
add
aaa
lret
ror
fmuls
jl
mov
fs
xchg
scas
inc
mov
mov
bound
fcmovnb
lds
in
mulb
into
and
sub
mov
or
push
out
addr16
mov
or
fcmove
cltd
je
mov
xchg
iret
cmp
pop
dec
mov
xor
mov
loope
xor
xchg
cld
push
mov
mov
sarl
sahf
mov
adc
mov
mov
jp
sub
lret
jns
int
in
jmp
aaa
adc
addr16
add
jno
push
mov
addr16
adc
mov
add
sub
ja
xor
hlt
sahf
loop
test
add
inc
mov
or
inc
jecxz
jl
xor
test
jecxz
addr16
ja
and
adc
push
mov
addl
dec
mov
xchg
xchg
or
filds
lret
add
mov
scas
xchg
add
icebp
inc
cs
inc
loope
cmp
adc
pop
pop
and
ret
xor
stos
cmp
jge
push
fstps
into
clc
xor
xchg
loope
pop
xchg
or
ficoms
call
mov
gs
pop
xchg
mov
repz
adc
shrl
pop
data16
test
add
xor
mov
sahf
shll
ret
xor
stos
sub
sub
in
mov
inc
inc
scas
push
insb
fcoms
xchg
push
imul
xchg
ja
inc
out
pop
add
mov
push
cltd
xor
pop
cltd
mov
inc
and
out
nop
inc
imul
imul
sub
mov
mov
scas
xor
or
dec
push
mov
sbb
adc
fwait
ret
loopne
cmp
inc
pushl
shl
test
lea
shl
sbb
mov
add
sti
and
inc
popf
dec
push
mov
arpl
stc
xor
sbb
outsl
cmp
daa
out
jg
pusha
mov
inc
cmp
jecxz
aam
pushf
repnz
imul
xchg
jp
adc
lcall
jle
mov
xor
jno
stc
out
das
inc
jge
repnz
push
cwtl
negl
into
inc
call
and
and
push
js
cwtl
out
idivl
out
jno
or
pusha
dec
js
movsl
sahf
imul
ds
loopew
lahf
js
mov
in
mov
fsubs
loop
rcl
mov
xor
inc
fmuls
mov
into
loope
jb
jle
pop
inc
mov
cmp
cmpsb
gs
jmp
rolb
jge
mov
into
mov
mov
cmp
icebp
mov
in
push
std
ret
pop
xchg
and
or
and
fsubrs
mov
cmpsl
shll
xchg
icebp
or
mov
xchg
xor
int
in
pushf
popf
test
mov
xor
daa
sbb
hlt
and
cmp
hlt
icebp
cli
mov
push
das
xor
es
mov
bnd
sbb
inc
int
incl
pop
jo
insb
or
ljmp
add
in
in
sub
jbe
or
les
outsl
mov
dec
jmp
push
add
idivl
jmp
fwait
into
mov
das
imulb
clc
stos
dec
fistpl
mov
push
pop
mov
int
jmp
clc
cwtl
add
pop
push
inc
push
test
adc
sub
push
mov
inc
pop
mov
sub
fadds
in
push
add
mov
aam
push
repz
inc
sbb
cwtl
pusha
nop
jb
lahf
cltd
mov
pop
jbe
or
fldl
lcall
jp
cmpsl
int3
dec
push
rclb
daa
jl
sarl
push
pop
mov
adc
mov
mov
inc
xor
pusha
jb
xchg
sub
std
outsl
lret
sub
xchg
loope
push
pop
pop
addr16
adc
fldenv
loope
mov
scas
cmp
pop
add
mov
arpl
sub
das
sbbl
xchg
je
pop
xchg
sbb
cwtl
lods
dec
insl
push
call
incl
repnz
push
sub
mov
pop
scas
dec
jne
push
sahf
jecxz
mov
lcall
mov
or
loopne
neg
cltd
pop
lret
pusha
push
dec
stc
or
sub
movsb
roll
aas
push
add
aad
pop
pushf
inc
mov
and
pop
test
pop
fistl
or
es
hlt
andb
and
sldt
insb
adc
xor
imul
add
cmpb
jecxz
and
and
mov
popa
adc
sub
add
xchg
sbb
mov
ja
mov
and
ja
rcrb
cmp
aam
xor
cwtl
xchg
sbb
std
mov
in
sahf
inc
push
adc
movsb
inc
or
iret
mov
mov
cwtl
adc
xchg
aaa
cmpsl
inc
mov
or
int
in
pop
enter
mov
sbb
ja
cmp
ljmp
mull
insl
jmp
imul
pop
xor
sub
xor
stos
in
inc
and
xchg
add
leave
push
xorl
adc
or
sbb
shll
cs
xchg
add
jo
call
inc
subl
dec
mov
lock
push
aas
jnp
xchg
jne
push
jae
pop
pop
adc
loope
pop
sub
jae
orl
xchg
xchg
test
xor
xchg
rcrb
inc
out
mov
stos
lds
jae
ret
outsw
and
jns
scas
dec
stos
add
or
std
data16
xchg
inc
hlt
dec
mov
leave
out
adc
inc
into
jp
mov
movsl
ret
andl
div
cmp
idivl
dec
mov
in
mov
mov
mov
sub
push
in
jmp
cmp
dec
pop
cmp
shl
pop
xor
push
lcall
push
xchg
dec
mov
or
sub
and
mov
sbb
mov
sbb
enter
xorl
ds
outsb
ljmp
pop
jle
imul
and
xchg
mov
mov
lock
stc
adc
movsb
popf
and
xorb
sti
out
arpl
aas
fimuls
jb
pushl
das
adc
cmp
and
scas
or
xor
push
lret
xchg
outsl
js
icebp
pop
movsb
cltd
psubusw
repnz
sahf
jmp
fists
test
cmc
enter
cwtl
fwait
shlb
mov
ret
jecxz
sbb
mov
icebp
dec
inc
cwtl
pop
mov
add
arpl
add
xor
int
inc
mov
inc
out
mov
popa
xchg
pop
xchg
sahf
dec
rcl
adc
mov
mov
inc
ljmp
jmp
lods
mov
mov
mov
add
rcrb
imul
mov
cmc
mov
jle
lcall
shlb
push
or
mov
mov
xorl
jnp
or
lret
jecxz
call
xor
push
xchg
push
mov
xchg
dec
add
and
push
leave
dec
ss
out
and
negl
mov
sub
fs
mov
rolb
lcall
sub
cmp
in
xchg
movb
cmpl
xor
jmp
rcrb
imul
stos
mov
xchg
aad
inc
fwait
lret
cmpsl
jo
fwait
int3
mov
cli
adc
sub
and
jns
pop
fbstp
push
in
test
jnp
add
pop
adc
ret
or
iret
lds
xchg
lahf
adc
xor
addps
shll
out
add
rcrb
cmp
sbb
mov
sti
sahf
ficomps
shl
test
xchg
mov
xor
and
and
and
shl
dec
in
jbe
or
mov
add
aaa
cmpl
shrb
adc
xchg
shlb
xor
jecxz
xchg
push
into
repnz
adc
hlt
and
mov
pushf
pop
xor
xor
push
sub
cld
pop
shll
stos
outsl
push
ficompl
and
sbb
add
jns
pop
lea
mov
outsb
fistpl
xchg
nop
bound
mov
mov
test
jmp
imull
push
inc
sbb
fstps
test
test
push
aaa
pop
mov
andl
jle
mov
jbe
lock
xor
call
cmp
push
mov
jb
shlb
popf
mov
dec
cmc
call
clc
out
ja
lock
mov
aas
sbbb
in
pop
lea
or
mov
dec
ret
mov
pop
sub
pop
xorl
mov
ret
fwait
ljmp
sub
in
mov
push
xchg
or
fstps
loope
pop
in
jne
push
sti
aaa
and
lds
int3
jb
ss
mov
jne
mov
hlt
pop
inc
mulb
push
scas
repz
cmp
mov
insb
dec
outsb
nop
movsl
aas
jns
adc
and
xchg
push
xor
xchg
sbb
mov
jnp
jp
mov
add
fidivrl
push
scas
add
adc
pop
stos
popa
and
sbb
cltd
ret
nop
imul
pushf
xor
push
jne
pop
or
in
sarl
les
inc
push
sahf
pop
fldl
cmp
loope
xchg
adc
lret
pop
or
in
and
sbbb
sbb
mov
jle
fldlg2
push
and
sbb
int3
cmpsl
cmp
pop
push
shl
stc
xor
mov
xor
loop
push
pop
sbb
bound
cmp
push
cli
andb
add
fnstsw
in
mov
add
push
xor
pushf
aad
ljmp
push
or
dec
int
jmp
push
lahf
repz
gs
int3
fwait
pop
xchg
jecxz
dec
adc
mov
movl
data16
dec
inc
mov
imul
xor
data16
pop
scas
loop
lret
mov
or
pop
sub
mov
pushf
loope
add
mov
push
out
cmp
adc
ljmp
xchg
push
cwtl
loopne
xchg
repnz
test
inc
jb
in
adc
pop
jmp
out
cmp
adc
push
loopne
sti
mov
push
pop
sbb
rcll
jle
jmp
imul
cld
xor
jb
gs
or
mov
sbb
sub
fwait
jge
addl
jbe
mov
incl
push
push
enter
aad
pop
ficomps
pop
seto
mov
stos
sub
fstps
inc
dec
insl
xchg
stos
rclb
out
stos
aaa
and
inc
movsb
dec
jns
stos
add
pop
sbb
mov
repz
cld
xor
mov
mov
cli
fs
jnp
cmpsb
cmp
loope
sbb
out
xor
jo
outsl
test
stos
jae
jo
and
mov
cmp
insb
pusha
in
add
call
push
cmp
stc
cmp
adc
adc
cli
jo
nop
pushf
aad
xlat
test
adc
nop
inc
push
shrl
pushf
flds
and
cmp
stc
pushf
inc
xchg
out
enter
mov
arpl
ds
jp
mov
xchg
in
mov
popf
inc
mov
int
pusha
scas
jmp
jbe
add
mov
shll
sbb
push
aas
rcll
loopne
sub
or
lods
out
inc
xchg
sub
adc
insl
mov
out
ds
std
fisttpll
xor
cmp
lock
arpl
adc
sub
adc
hlt
sbb
dec
ret
mov
push
cmp
fprem
test
sub
xor
cs
sub
pop
inc
xlat
lahf
fcoms
adcl
stos
stos
shll
or
jo
ss
and
cs
int
dec
push
aas
movsb
push
sti
xor
leave
mov
mov
in
ret
mov
mov
sbb
or
dec
scas
clc
arpl
jns
mov
sbb
pop
jo
and
or
ret
in
sub
jne
adc
shr
jecxz
sbb
insb
pop
mov
clc
cld
push
cmpsb
push
mov
dec
xchg
mov
jns
fdivr
pop
push
int3
inc
sarb
cmp
movsl
fistl
icebp
or
imul
lret
inc
daa
shlb
cld
test
gs
repnz
add
mov
xlat
sarb
xchg
roll
adc
dec
out
dec
out
cltd
xor
or
push
movl
mov
dec
push
test
inc
aaa
pop
fisttps
aas
loop
or
lods
movsl
rol
repnz
scas
jno
jmp
pop
pop
add
mov
xor
sbb
out
imul
pop
pop
inc
insl
adc
add
cli
xor
test
mov
add
mov
mov
aaa
xchg
mov
ja
or
cmp
push
xchg
or
cmpsl
dec
ret
and
jb
test
cmp
xor
push
hlt
push
iret
inc
xchg
push
stos
fwait
adc
repnz
outsb
sti
pop
xchg
sbb
pop
xchg
push
mov
mov
sbb
jmp
rorl
dec
imul
lretw
aas
in
mov
jg
pop
xor
ja
fadd
in
mov
fcmovb
loop
sub
inc
cmp
roll
pop
mov
push
push
lds
fstps
and
mov
push
rcrb
hlt
test
pop
lret
pop
scas
scas
and
cmpsb
into
or
je
xchg
in
sbb
push
mov
fsubs
dec
mov
mov
xchg
push
fidivrl
adc
adc
pop
js
lods
dec
shll
and
lahf
ss
test
dec
shr
add
push
cmpsb
jl
vpackssdw
inc
inc
xchg
ja
cmp
mov
arpl
ret
inc
and
fisubrs
scas
push
inc
dec
inc
jnp
ljmp
movsb
fcomp
repz
lahf
mov
cmp
xor
mov
pop
ja
loope
mov
pop
xor
add
jno
lock
adc
sub
adc
mov
adc
ja
jmp
push
mov
repz
int
pop
jge
push
push
out
sahf
mov
jge
push
pop
out
xor
or
mov
dec
shll
shlb
dec
bound
mov
daa
movsl
cmpsl
push
lret
xor
insb
cltd
fcmovb
ds
inc
push
es
sbb
loopne
xor
je
sub
loopne
push
mov
std
or
add
cmp
dec
ret
pop
cmp
and
repz
jmp
pushf
xor
sbb
addr16
fsubp
out
pop
mov
and
push
mov
mov
sbb
es
xchg
in
shlb
jns
xchg
idiv
xchg
call
xor
inc
or
add
dec
xchg
sahf
mov
arpl
push
ds
push
pop
inc
out
jb
xor
sarb
aaa
call
inc
mov
jmp
scas
les
stos
xor
or
pushf
push
cmp
sub
or
fidivrs
test
jno
pusha
push
int
mov
das
mov
sub
inc
aam
cmc
pusha
daa
xor
ficoml
fnstcw
outsl
fdivs
xor
test
ret
push
popa
xchg
dec
loopne
and
lret
ljmp
push
push
xor
popf
das
jp
jmp
mov
mov
and
xchg
mov
jle
popf
mov
movsl
sub
adc
cmp
cmpsb
into
push
les
sub
inc
and
xor
dec
rclb
out
mov
in
xchg
xchg
inc
push
push
ljmp
jmp
frstor
mov
mov
ja
dec
or
push
and
loop
cmp
pop
sbb
addr16
sbb
nop
push
lcall
mov
mov
adc
arpl
dec
jo
js
xor
ss
icebp
repnz
cltd
and
aad
lret
jmp
fwait
mov
dec
js
xor
or
fistpl
mov
arpl
add
or
iret
int3
ret
adc
divl
repnz
pop
into
mov
fistl
js
les
mov
icebp
sbb
mov
push
aad
or
cmp
test
mov
mov
xlat
inc
pop
fsubp
jbe
int
outsl
popa
fcomps
andl
shlb
pop
xor
out
mov
pop
daa
aas
jb
sub
push
sbb
jecxz
loopne
call
xor
sahf
inc
hlt
lret
test
adc
inc
push
aad
cwtl
out
push
and
in
jg
divb
fs
pop
inc
mov
daa
mov
pop
in
xchg
popa
inc
and
push
fadds
mov
xlat
push
les
adcl
adc
and
arpl
in
jb
fadds
data16
jmp
cld
or
mov
and
xchg
adc
stos
pusha
mov
frstor
sti
mov
loopne
jae
mov
cmp
adc
mov
cmpsl
les
mov
mov
mov
shl
cmc
sarb
test
mov
and
pop
cltd
xlat
loop
dec
inc
jbe
pusha
inc
jg
cmpsb
ret
loopne
xchg
pushf
jl
sub
test
jp
out
inc
jns
add
or
dec
adc
add
mov
add
mov
out
aas
xchg
outsb
pop
sarl
repz
cmpl
loop
push
xchg
xor
cmc
lds
inc
adc
int3
pop
pushf
pop
out
mov
and
gs
push
xchg
shll
adc
into
aas
sti
loopne
rclb
decb
fiadds
xchg
lods
and
and
pop
mov
decl
sbb
je
sbb
cmpsl
adc
cmp
test
filds
inc
cmpb
pop
imul
cmpsl
dec
outsb
gs
pop
add
imul
into
pushf
inc
mov
sbb
jbe
stos
dec
dec
enter
iret
fmuls
pop
dec
out
mov
adc
lea
mov
adc
sbb
ret
push
mov
xchg
mov
sub
mov
jp
fs
movsl
push
sub
iret
loop
jb
std
repz
add
in
popa
call
lock
mov
repz
cmp
rorb
and
loop
sar
fadds
fists
xor
cmpsb
cmpsb
push
cmpsb
cmpsl
ja
push
mov
xchg
cmpsb
aad
mov
in
sbb
loope
jo
mov
inc
loopne
leave
mov
ja
mov
shlb
pushf
in
fcmovbe
cmc
sti
inc
leave
jne
popa
ja
sti
pushf
jecxz
lret
test
dec
jecxz
jae
orl
sahf
vcvtdq2ps
jnp
outsb
inc
or
imul
push
sub
outsl
insb
adc
shlb
or
or
lcall
xchg
and
jl
or
adc
fisubrl
sub
cmpsb
sub
lods
fsubl
out
das
jge
adc
and
pop
cltd
xor
mov
mov
arpl
jge
inc
mov
dec
filds
xor
inc
xor
lcall
sbb
sub
repnz
shll
fwait
mov
xchg
das
mov
repz
pop
push
fs
pop
daa
pop
adc
insb
in
addl
mov
fisttpl
cmp
mov
hlt
mov
adc
mov
enter
cmpsl
mov
out
mov
or
aam
addl
pop
fisttpll
pop
mov
rcrl
cmp
sarb
scas
mov
stos
jae
sti
jne
mov
divb
clc
dec
scas
in
fstps
lret
mov
bts
jl
rcrb
inc
push
pop
or
pop
loopne
lret
test
test
xor
jge
dec
dec
pop
add
lret
sbb
in
imul
mov
loop
inc
jnp
mov
push
pop
xchg
mov
mov
dec
xor
mov
fsubl
data16
pop
leave
rolb
decb
sub
push
pinsrw
bound
add
cmp
addl
and
sub
dec
and
aaa
daa
aad
in
cs
scas
or
mov
push
popa
sarl
sub
aad
jp
out
out
inc
sbb
lods
add
jb
inc
lock
mov
fistl
lods
or
aad
shlb
fisttps
lret
cmpsb
jg
out
test
idivb
ja
fsubrp
adc
std
cld
outsl
adc
call
jb
test
pop
outsl
mov
nop
dec
retw
mov
mov
xchg
aaa
loopne
adc
mov
call
add
fadd
andl
pop
mov
fimuls
sti
mov
cmpsb
rcll
cwtl
jnp
mov
adc
popf
push
xor
mov
in
cmp
xor
insl
mov
and
icebp
xchg
add
mov
mov
add
testb
sub
fldenv
xchg
sub
pop
mov
jg
jne
int3
or
add
jnp
mov
pushf
idiv
push
xchg
mov
shl
dec
inc
stos
test
pop
pop
loope
repz
clc
test
jbe
adc
cmp
out
adc
je
push
arpl
push
push
vpsubusw
dec
outsl
mov
cltd
xor
nop
push
mov
mov
mov
stos
jmp
out
pop
jnp
sub
push
sar
mov
xchg
adc
sub
lret
in
outsl
out
inc
sbb
idivb
push
xor
mov
fdivs
or
or
sbb
jge
and
shll
xchg
cmp
ja
gs
cmp
testb
out
icebp
sbb
cmp
xchg
and
cmpsl
in
add
inc
xorb
dec
xchg
push
sbb
jo
fcompl
scas
xor
push
push
xlat
and
in
add
xchg
scas
mov
out
cli
scas
lock
mov
mov
xchg
adc
lock
and
inc
cmc
hlt
pop
add
iret
sub
pop
inc
mov
jo
out
aam
mov
mov
rcl
xor
sub
aas
push
sarl
cmc
pop
add
push
not
xchg
jp
repz
mov
inc
lock
dec
jae
add
pop
add
in
bound
aad
ret
xchg
and
mov
or
sbb
ficompl
data16
xchg
shr
mov
cmp
dec
test
cmp
in
pop
repz
ror
mov
or
mov
movsl
sub
lods
enter
inc
jb
lods
and
jg
jne
mov
jmp
pop
push
xacquire
push
add
sbb
lods
inc
jbe
cmpsb
dec
fbstp
push
cmp
arpl
jns
sbb
xchg
in
and
and
or
inc
mov
push
fisttps
in
mul
xor
std
pushf
inc
popa
adc
cli
add
flds
lcall
jae
mov
gs
shlb
ljmp
cmp
or
inc
add
sub
pop
lret
xchg
aaa
jae
xchg
mov
jae
mov
outsl
jno
dec
int3
mov
or
loope
movsl
inc
mov
pop
dec
ja
jno
mov
fs
lea
xor
sbb
and
je
gs
adc
das
ror
mov
aaa
mov
jmp
jmp
push
xchg
iret
inc
clc
fldcw
lcall
pop
test
jge
jmp
push
sub
xlat
xchg
lods
adc
in
sbb
or
inc
mov
adc
je
adc
push
xor
pop
push
movsb
cmp
mov
sti
and
mov
test
xor
push
jmp
fcmovnb
lahf
rcll
push
lods
and
mov
dec
outsl
and
inc
into
cld
sub
std
sbb
mov
icebp
scas
shr
cmp
xchg
xchg
sahf
insl
sbb
fnstenv
clc
sub
ja
mov
loop
adc
push
xchg
inc
sbb
cmp
sbb
mov
and
mov
cmp
aad
or
addr16
fdivrl
jmp
dec
mov
dec
mov
int
push
jmp
add
dec
or
mov
mov
jo
test
mov
arpl
cmp
xchg
mov
cld
pop
inc
or
fisubl
scas
sahf
ret
or
push
and
call
in
xlat
js
pop
movl
icebp
xor
mov
dec
call
lea
push
or
clc
insl
lahf
cmpl
pop
mov
dec
inc
push
outsl
and
or
aad
int
add
in
add
pop
cmpsb
pop
repz
sub
fwait
jp
dec
in
push
stos
xor
call
cs
sbb
mov
pop
popf
push
aaa
das
xlat
jae,pn
push
fistpl
testb
mov
cld
daa
pop
pop
mov
dec
daa
inc
loop
sub
fisttpll
sahf
and
xchg
lds
mov
cmp
jle
flds
inc
mov
sbb
adc
add
adc
stos
xchg
cmc
std
lret
push
scas
sbb
aam
shr
fwait
pop
out
xor
ljmp
insl
inc
and
or
cmp
dec
test
rcrb
into
lea
dec
adc
pop
fwait
mov
dec
pop
aad
cmc
ret
or
push
call
test
push
into
jns
mov
xor
jg
aad
xchg
pop
mov
call
add
stos
out
mov
int3
and
pop
lret
insb
xchg
inc
fcmovnb
xchg
mov
fucomip
jl
push
dec
rcll
jl
stc
mov
mov
xor
mov
jmp
movsb
sub
push
fs
xchg
mov
pop
mov
jb
bound
loopne
mov
jnp
and
aam
insb
stc
imul
lds
sarb
insl
push
mov
sbb
adc
mov
and
les
loop
sbb
mov
bound
das
rorb
add
cmp
add
xor
cmpb
push
stos
in
or
push
das
mov
and
jp
iret
dec
lret
inc
shlb
ret
out
test
dec
and
and
push
mov
sbb
or
sub
push
mov
arpl
outsb
sub
out
sbb
mov
xchg
jp,pt
outsl
sbb
aam
ret
loope
mov
js
insl
out
xor
push
xor
dec
cwtl
and
push
xchg
mov
mov
out
and
cmp
sub
int
mov
pop
pop
sarb
ja
int3
decb
mov
xor
lret
in
mov
aam
test
and
into
fwait
pop
mov
rorl
ja
ret
inc
and
inc
out
call
mov
mov
ror
add
mov
mov
pop
mov
sub
aaa
jno
inc
jo
cltd
sbb
mov
dec
pop
out
adc
js
enter
pop
cli
inc
xchg
jne
test
or
ljmp
mov
mov
add
pusha
imul
mov
jo
sub
jbe
daa
insb
mov
test
xor
mov
in
pop
repz
adc
jg
pop
cmpsb
xor
push
stos
sbb
ljmp
out
mov
fcmovnu
addr16
push
or
sbb
std
lods
cmpb
and
and
jns
jmp
js
pop
xlat
in
push
push
jecxz
add
ficoml
or
sub
push
mov
xor
es
call
push
xchg
dec
cmp
in
loopne,pn
sbb
mov
lea
dec
jg
iret
in
pop
push
mov
cltd
sub
jno
or
or
pop
das
and
test
fcomps
jl
mov
das
and
popa
loope
xor
push
push
inc
inc
sbb
lock
fldenv
or
ret
xchg
mov
add
lock
arpl
sbb
andb
adc
sti
lret
push
jnp
dec
pop
ss
cs
mov
shll
mov
fwait
in
pop
mov
shrb
mov
jecxz
push
mov
test
push
sub
addl
cs
jge
adc
xor
insb
mov
jne
pop
push
xchg
rcrl
inc
ds
adc
jg
jne
pop
mov
jl
mov
cli
andl
stos
cli
adc
push
jnp
sub
xchg
mov
inc
pop
mov
fnstcw
dec
scas
in
inc
test
adc
pushf
xchg
dec
push
sub
int3
je
hlt
mov
shll
sub
aaa
jno
lret
dec
mov
les
icebp
adc
js
fyl2xp1
aam
inc
push
subb
dec
add
xchg
je
push
pop
or
xchg
pop
or
inc
xor
and
popf
mov
sub
sbb
shrb
pop
dec
xlat
adc
sti
cmpsb
adc
stc
jp
fdivp
xchg
jnp
jbe
fwait
jae
push
jge
sub
push
pop
push
xor
enter
fs
and
int
dec
xlat
dec
loope
in
into
test
lret
add
aas
inc
or
dec
pop
in
nop
fsubp
mov
mov
lret
in
mov
fwait
lds
and
into
sub
adc
sub
shlb
add
fwait
dec
adc
pusha
pand
xchg
leave
xchg
sub
jle
mov
test
inc
inc
and
inc
xor
or
inc
xor
aam
inc
mov
fisubl
sbb
outsb
pop
push
inc
loope
jnp
sub
lods
iret
mov
xchg
push
mov
sarb
xchg
mov
sub
cltd
stc
ja
cmpsl
jns
sub
push
mov
iret
push
mov
leave
mov
es
cs
push
add
xchg
xchg
lahf
loopne
out
std
lcall
sbb
ret
jmp
ja
rcr
in
test
mov
sub
sbb
mov
pop
dec
das
repz
fwait
cmpsl
and
jne
enter
xor
inc
mov
sbb
or
inc
movsl
fwait
mov
lret
sbb
lahf
pop
xor
inc
out
sub
gs
and
lret
mov
shlb
push
iret
sbb
dec
push
dec
inc
popa
pop
mov
push
pop
xchg
aaa
ss
aas
loopne
cmp
data16
sahf
cld
int3
je
in
jo
dec
push
dec
fcmove
stc
stos
cmpsl
or
and
int3
leave
test
push
leave
cltd
push
lock
mov
inc
out
cld
add
jp
movsl
jge
jb
lods
dec
lret
adc
insl
scas
imul
arpl
jnp
jo
fdivs
pop
lea
int
cmpsb
sahf
dec
jmp
mov
pop
pop
repnz
mov
fwait
sbb
mov
push
inc
or
push
lcall
push
and
jo
push
icebp
enter
mov
loope
dec
lahf
sti
mov
leave
sbb
mov
scas
xchg
sub
xorb
aad
sbb
pop
dec
loop
enter
fiaddl
xor
push
mov
adc
mov
loop
mulb
pop
test
out
mov
lods
out
mov
sbb
int3
xchg
fwait
mov
cmp
sarl
stc
fwait
subb
test
mov
sub
push
pop
sti
mov
aad
lcall
mov
repnz
or
movsl
xor
jae
push
mov
lret
adc
mov
fistl
xchg
ret
jbe
jle
fs
jb
xchg
mov
mov
shrd
mov
mov
sbb
cld
shll
test
jl
adc
fwait
cmp
jecxz
addr16
jecxz
scas
fbstp
lock
mov
xchg
repz
bound
adcb
addb
pop
sbb
mov
add
popa
sub
lods
cmp
scas
push
push
and
rolb
orb
cmp
leave
push
inc
xchg
pop
jmp
jne
dec
jns
out
or
mov
cmpsw
adc
mov
inc
add
jo
mov
aam
add
cmp
mov
inc
lock
or
fstpt
jo
fcmovnu
in
pop
mov
lds
mov
stos
outsl
das
dec
cmp
pop
lds
jmp
mov
jae
adc
out
mov
pop
mov
out
and
xorb
test
fsubrp
mov
testb
out
ljmp
negb
out
loopne
lret
pop
mov
mov
and
icebp
sub
rclb
adc
pxor
mov
xchg
fs
loopne
cmpsb
or
dec
mov
shll
fdivs
jge
xor
int
fnstcw
leave
aad
inc
stos
adc
jge
pushf
cmp
fimull
je
or
pop
xlat
pop
inc
imul
jbe
add
shll
cmp
aas
xor
aas
jl
loopne
movsl
cmpsb
xor
pop
xchg
das
add
inc
sbb
inc
mov
xchg
rcrb
int3
adc
lock
leave
insb
sbb
cmp
sbb
iret
bound
dec
mov
mov
jle
out
sti
pop
sbb
repz
mov
int
pop
cltd
gs
out
add
incl
fbld
cmp
cmpsl
in
pop
das
mov
leave
push
js
popf
xor
jbe
pop
in
insl
fsubl
push
jbe
fs
mov
mov
xor
pop
cmp
imul
dec
pop
ss
arpl
sbb
addl
imull
jne
sbb
fmull
ja
fldenv
xchg
pop
cli
in
rorl
dec
push
aas
enter
inc
inc
pop
dec
imul
fwait
sbb
flds
aaa
mov
cmp
notb
jg
out
fs
lock
aaa
cmp
dec
cmp
pop
jmp
jb
aad
test
sub
mov
lods
cmp
repnz
pop
pusha
adcl
adc
mov
cmp
xor
sbb
jb
mov
lret
testb
xchg
jp
loope
jae
pushf
shld
adc
xor
daa
push
or
cmp
in
mov
sbb
jno
mov
adc
sbb
aaa
popa
out
inc
aad
fidivrs
callw
xchg
xchg
push
dec
jl
inc
in
xchg
mov
lods
arpl
arpl
aaa
add
push
cmp
sbb
mov
fstpl
cmp
mov
add
xor
xchg
xlat
xor
jecxz
fdivs
fwait
js
into
adc
subb
scas
push
push
fcoml
test
jo
fs
fwait
lcall
dec
rclb
sbb
xchg
mov
mov
loop
pusha
sub
dec
aaa
test
mov
imul
aam
mov
dec
jg
push
and
and
mov
cmp
xchg
mov
xor
jp
xchg
push
mov
inc
dec
sbb
inc
mov
or
jnp
jns
inc
sbb
add
cmp
mov
dec
mov
dec
and
in
or
int
test
shlb
sbb
sarl
cmp
out
xadd
popl
add
xchg
inc
pushf
push
pusha
mov
lcall
push
lret
xchg
sbb
dec
or
inc
inc
push
dec
adc
aaa
sbb
jbe
and
insl
xchg
cmpsl
mov
int
aaa
test
jb
mov
fstp
push
mov
fists
fldl
shrl
pop
adc
pop
lods
lret
fnclex
mov
ret
pop
dec
push
mov
call
adc
add
lahf
add
cmp
js
xor
ja
fwait
mov
sbb
push
sbb
mov
sub
fidivrl
push
test
or
popf
shll
pop
mov
lcall
movsl
pop
rolb
frstor
cmp
cltd
inc
stos
xchg
mov
push
and
cmp
dec
filds
outsl
jnp
push
inc
mov
nop
pop
mov
dec
cmp
xor
or
jl
xchg
outsl
test
nop
cmp
inc
pcmpeqb
sub
outsl
adc
pop
pusha
sbb
jb
push
add
andl
cli
lods
arpl
addr16
pop
add
and
call
inc
pop
jns
dec
popf
mov
imul
sbb
shll
ss
sbb
cmpb
scas
mov
cltd
xor
add
lret
and
lret
jle
shrb
ret
pop
xor
mov
mov
popa
push
call
adc
mov
inc
stos
int
cld
lcall
inc
js
push
pop
shrb
rolb
adc
push
pop
mov
jbe
add
sbbb
pop
or
imul
cmc
jp
cmpsl
mov
cmp
or
in
std
lock
roll
pop
stos
test
push
jecxz
jp
cmp
decb
mov
data16
lahf
and
sub
int3
ja
movl
divb
push
cmp
inc
pop
ret
fdivs
fcoms
sar
gs
and
lret
movsl
mov
dec
outsb
mov
das
filds
stc
adc
xchg
dec
adc
nop
or
fisubrs
jnp
adc
gs
mov
dec
test
pop
push
push
outsl
pop
push
adc
mov
mov
dec
lea
cmc
aaa
pop
iret
add
fisubl
lock
dec
xorl
lahf
push
jno
popf
rcrl
push
cmc
xor
jb
push
stc
fcmovu
mov
les
hlt
pusha
jnp
sbb
dec
mov
xchg
pop
and
mov
xchg
and
rorb
stos
add
pushf
push
pop
sub
clc
ficoml
ss
fs
xchg
xor
out
mov
cwtl
test
jle
ret
mov
push
aad
mov
gs
or
push
fnstcw
ffreep
ret
pop
into
leave
int3
imulb
sbb
arpl
sbb
mov
mov
jg
or
andb
xchg
int3
arpl
sub
pop
fsubrp
adc
fmull
lret
inc
fsub
gs
fsubp
adc
imul
lds
lds
nop
dec
or
sahf
jns
fs
mov
mov
mov
mov
mov
mov
fs
cmc
mov
push
rcrb
fstps
sub
lahf
dec
vmovaps
lods
mov
push
mov
sbb
cwtl
xor
adc
das
iret
hlt
aas
push
arpl
cmp
jno
in
cli
insl
cmpsl
xchg
andl
sub
cltd
jbe
sub
cmp
lds
out
ret
cs
movsl
jnp
add
sbb
pop
mov
lea
push
xchg
popf
and
testb
mov
pop
popf
rol
ds
cli
xchg
enter
lcall
stos
mov
cmp
xor
mov
jmp
mov
dec
das
or
mov
mov
jns
mov
clc
fmulp
push
cmp
mov
mov
push
xor
jge
fidivrl
push
sub
xchg
insl
sbb
in
jle
loop
movsb
xchg
sub
aas
mov
movsb
incl
inc
imulb
inc
call
fsubp
xor
mov
inc
je
je
jge
lods
js
into
mov
pushf
sbb
jbe
mov
push
adc
out
test
sbb
outsb
into
popf
jbe
or
ffree
or
sbb
cmpsb
test
mov
ds
ret
push
int
or
adc
and
sub
insb
pop
out
mov
jmp
adc
cmc
mov
decb
cmp
jno
dec
jbe
add
add
call
sub
into
pusha
call
les
xor
xchg
ds
push
mov
cmp
popf
out
andl
lods
adc
jmp
or
gs
fistpl
mov
or
nopl
xlat
dec
xchg
imul
inc
lret
test
jmp
dec
adc
inc
add
daa
addr16
pop
and
cmp
mov
movsb
fnstcw
out
dec
dec
mov
mov
pop
fnstenv
leave
xchg
fwait
orb
cld
cld
pop
dec
and
dec
pop
dec
into
fnsave
ror
sub
jne
cmp
pop
sbb
dec
mov
add
pop
mov
jo
fucom
das
dec
inc
bound
mov
push
arpl
xor
rorl
sub
cs
js
and
and
sbb
leave
sahf
mov
call
add
xor
jg
mov
stos
mov
or
call
jmp
outsl
addr16
negl
push
jnp
push
jg
jne
sti
or
aad
int
inc
aaa
lret
scas
pop
or
sub
mov
push
inc
xchg
popa
movsb
or
ljmp
mov
inc
faddl
push
and
gs
mov
add
xor
iret
push
outsb
cmc
adc
sbb
fs
sub
mov
mov
icebp
fcmovnb
mov
lods
lret
insl
push
je
hlt
pop
and
ret
pop
das
dec
cli
in
inc
fsub
mov
xor
mov
stos
inc
xchg
into
hlt
adc
pushf
mov
pop
push
dec
jae
inc
cwtl
stos
mov
inc
xor
test
jno
out
popa
jbe
dec
jp
repnz
jnp
shll
pop
cmp
adc
repnz
es
ja
cmp
arpl
cwtl
test
dec
sub
pop
clc
lock
adc
mov
test
test
mov
pop
cmp
pop
shlb
or
mov
loopne
aas
sbb
cmp
dec
in
cli
lock
imul
outsl
or
cmc
cmpsl
xchg
subb
jbe
cli
push
hlt
xchg
adc
mov
negb
sub
or
js
icebp
sbbl
les
enter
je
out
cs
inc
jb
xchg
cmpsl
ficoms
sarl
mov
lods
sbb
les
es
mov
adc
enter
rcrb
inc
adc
loop
fiadds
jbe
fdivrp
dec
mov
inc
and
fnstsw
adc
pusha
mov
repnz
testb
mov
cmc
in
pushf
dec
rolb
sub
sarb
cmpsl
adc
pop
xor
push
xor
mov
enter
or
cmp
pushf
jb
add
mulb
repnz
xchg
pushf
ja
sbb
push
mov
lret
jne
and
insl
or
mov
cmp
cwtl
loope
mov
cmp
movsb
xor
cmc
out
sbb
out
mov
sub
sahf
mov
xchg
push
sti
fwait
dec
lcall
dec
push
push
or
mulb
std
or
cmp
sbbl
xlat
fsubrl
les
xchg
lea
mov
inc
push
or
lret
sbb
ljmp
mov
out
mov
dec
pusha
add
outsl
lods
aad
or
cltd
pop
mov
xor
or
aad
push
out
sti
outsl
push
xchg
loopne
sbb
insb
pop
cli
fisubrl
call
xor
pop
popl
mov
mov
out
out
jmp
rorb
mov
scas
add
icebp
fidivrs
mov
sbb
jne
shlb
dec
fs
and
add
or
fmulp
jge
aas
lret
loope
movsl
add
mov
mov
adc
outsb
fnstenv
test
mov
sub
maskmovq
mull
lret
pop
adc
xchg
in
jns
stos
mov
nop
lret
inc
cmp
adc
inc
jl
int3
push
inc
mov
mov
and
daa
repz
jne
jle
outsl
in
push
sbb
pusha
sub
mov
pusha
bound
arpl
icebp
inc
insb
adc
sbb
push
pushf
or
lods
xlat
jg
push
sbb
xchg
inc
scas
xchg
push
out
or
push
inc
jo
addr16
ds
dec
shlb
addr16
loopne
jo
jl
pop
cwtl
std
mov
call
repz
int3
jecxz
push
lods
fldcw
push
mov
lret
std
fsubs
sbb
cmp
mov
fs
cli
scas
add
sub
cmc
je
mov
mov
sbb
int3
mov
addr16
shll
add
jnp
popf
idiv
nop
into
mov
inc
sub
jb
sbb
in
add
xor
dec
ljmp
or
fucomip
push
mov
sub
mov
mov
test
inc
fistps
lods
and
jo
xchg
loopne
mov
int
jb
jp
ljmp
adc
add
imul
jno
mov
pop
and
push
jge
jle
cs
lahf
push
movsl
test
dec
cmp
or
mov
jecxz
stos
jb
sub
js
iret
mov
movsb
jg
shr
out
jl
ror
fisttpl
cmc
jge
rcrl
cld
jnp
mov
mov
cmc
repz
lods
loope
movsb
sarl
jmp
or
test
jl
xchg
fnstsw
add
or
leave
push
inc
and
loopne
or
stos
aad
jno
je
imulb
fs
push
adc
inc
nop
mov
jmp
and
dec
inc
cli
inc
pop
pushf
or
mul
xor
repnz
xlat
lret
xor
call
xor
ds
in
mov
dec
or
cs
dec
pop
nop
cwtl
pushf
and
mov
or
mov
sbb
data16
mov
lret
sti
jmp
or
push
das
outsb
mov
popf
ret
mov
fisttpl
sub
jne
orb
mov
cli
test
push
jl
jge
mov
loopw
add
push
call
sub
clc
popf
das
cwtl
ret
ja
pusha
cmp
testb
enter
cmp
add
cmpsl
bound
enter
and
sti
cmp
push
pusha
cmp
lret
or
popf
and
xor
scas
ret
cwtl
sbb
jl
lahf
cmp
or
js
add
mov
adc
jmp
dec
and
pusha
sub
xchg
mull
data16
inc
add
jmp
push
and
insb
shl
lret
inc
les
cmc
cmp
dec
out
adc
jp
add
adc
jae
xchg
jmp
je
mov
jg
fdivrl
or
mov
jmp
push
xor
cmp
jge
dec
fs
sub
and
jns
cs
inc
sbb
mov
lret
xor
sbb
and
jp
push
xchg
int3
and
lds
aam
or
clc
xchg
gs
scas
mov
fs
pusha
sbb
mov
jae
mov
fcomps
push
or
es
inc
btc
dec
mull
scas
mov
bound
arpl
lock
pop
xor
add
xchg
xchg
gs
leave
js
xchg
mov
sub
or
push
or
jmp
mov
mov
jl
aas
push
out
inc
sbb
lods
jle
push
xchg
mov
sar
cltd
in
movb
in
mov
ja
insl
xchg
push
lds
scas
mov
in
mov
push
inc
or
jp
cmp
popa
lcall
jp
mov
sub
add
nop
mov
sbb
stos
pop
pop
mov
sbb
adc
fiaddl
int3
ds
add
adc
xchg
add
fwait
mov
mov
jg
cmp
enter
sub
popf
sbb
lret
cli
mov
jecxz
mov
pop
in
and
sbbl
and
pop
enter
xor
cs
repz
inc
jb
fcomip
mov
outsl
or
lods
pop
out
jne
xchg
icebp
cltd
xchg
inc
fdivl
cmpsl
jae
repz
adc
jb
and
sbb
test
or
das
push
or
jns
add
je
ret
stos
xlat
lret
out
and
aaa
ja
adc
and
add
ljmp
xchg
ret
xchg
xsave
cmp
icebp
fnstenv
push
es
cltd
cmp
scas
dec
ss
fcomps
ss
dec
pop
addr16
jg
sbb
dec
add
lock
scas
jp
add
add
out
daa
xchg
es
and
mov
mov
or
add
mov
test
push
loope
xchg
jb
pop
mov
mov
add
mov
cmp
fsubrl
jb
ret
cmpsb
test
mov
in
sub
or
cmp
test
fwait
push
in
ss
and
test
pop
mov
xchg
lea
adc
adcl
sub
sub
xchg
jmp
into
arpl
push
fnstcw
cmp
ds
mov
inc
aaa
repnz
imul
scas
int3
paddsb
fcoml
mov
rcrb
jns
test
fcomps
pop
enter
fistpl
jp
push
jne
mov
mov
js
pop
cmp
sbb
mov
dec
mov
cmp
and
fcmovb
fimuls
clc
sbb
mov
dec
jnp
pop
shl
std
daa
pop
lahf
pop
xor
mov
sub
es
maxps
repz
notl
jo
mov
sti
out
repz
or
ja
push
cmp
cwtl
push
int
sahf
cmpsl
pop
cmc
xchg
xchg
cmp
in
dec
or
mov
enter
iret
jge
mov
out
jg
jae
repnz
and
cmp
mov
xchg
push
or
pop
in
pushf
aad
fcomp
popa
pop
xor
aad
adc
outsl
mulb
scas
adc
sub
je
xor
je
sub
cmc
xchg
or
adc
sub
out
jmp
fisubrl
mul
popf
js
call
notl
lcall
mov
arpl
sbb
out
dec
inc
mov
idivl
xchg
cmp
or
loope
mov
ficompl
and
cmp
cmp
pop
idivb
cmpl
insl
mov
stc
xor
xor
mov
and
adc
sbb
push
es
jo
imul
stc
push
aam
js
hlt
pop
cmp
lahf
imul
stc
and
mov
jns
cmpsl
daa
sbb
add
cmp
fstl
push
push
ja
xchg
jge
push
sub
mov
ret
mov
dec
fisttpll
out
adc
dec
pop
dec
mov
push
movsb
fnstsw
lods
mov
nop
cmp
and
or
addr16
adc
inc
scas
push
repnz
movsb
es
cmpsl
jl
dec
mov
inc
loope
pop
mov
jae
cmpsb
stc
mov
adcb
cbtw
arpl
xchg
js
mov
dec
cld
es
lret
sub
imull
es
add
sub
stos
mov
push
mov
adcl
cmp
out
push
xchg
sub
pop
pop
ss
les
into
push
aam
lret
jg
mov
pop
jbe
jnp
sbb
sub
sbb
or
push
pop
xlat
dec
fstl
jl
mov
push
add
loopne
mov
insb
pop
stos
hlt
push
pop
lea
xor
hlt
fwait
sbb
inc
mov
dec
int
mov
shll
dec
pop
shll
std
aaa
add
rcll
or
arpl
adc
dec
gs
mov
gs
sbb
inc
outsb
inc
push
sbb
add
pop
cld
mov
cwtl
pop
loop
or
mov
sub
shlb
xchg
fwait
sbb
jge,pn
and
or
sbb
das
dec
stos
inc
gs
xor
cs
cli
mov
sbb
insb
or
sub
or
and
xchg
add
jns
add
inc
jg
and
testb
jecxz
inc
icebp
jg
enter
je
push
mov
mov
jo
popf
mov
or
lret
mov
aad
mov
fmuls
mov
push
ds
scas
xor
outsl
jge
test
and
rcrl
adc
mov
add
lock
into
xchg
lds
sbb
adc
cmp
mov
inc
cwtl
cs
cmp
xor
aaa
negl
insl
mov
jbe
test
jnp
pop
daa
inc
test
rcll
push
add
pop
into
xchg
clc
arpl
pop
out
cmpsb
pop
sbb
mov
push
je
cmpl
std
popl
push
in
dec
jle
xor
cmpsl
popa
mov
dec
and
jo
sub
scas
or
mov
xchg
ret
adc
and
ss
pop
repz
push
cwtl
sbb
repnz
mov
pop
ret
rolb
mov
je
repz
xor
mov
jecxz
xlat
jp
loop
cmp
cmpsl
aad
mov
repz
sbb
xlat
cli
adc
xor
inc
fs
jnp
sub
push
dec
cmpsb
ss
incl
clc
movsl
mov
mov
xchg
jbe
xchg
mov
push
int
imul
sub
hlt
daa
mov
loop
cmpsb
jae
lods
xor
rcll
xchg
gs
or
scas
adc
inc
sbb
dec
lods
aad
fidivrl
or
xchg
push
sbb
ss
xchg
lret
push
xor
pop
cltd
add
push
inc
sbbl
xor
popf
shl
movsl
mov
mov
mov
add
lcall
int3
mov
movsl
aaa
xor
add
clc
pop
pop
xchg
int3
mov
adc
sub
nop
ds
inc
out
int
jno
mov
or
sbb
inc
dec
andb
loopne
outsl
adc
xor
cs
sub
shll
rcr
sbb
addb
mov
pop
sub
fildll
add
jbe
mov
adc
or
stos
add
lds
out
pusha
insl
sub
push
xchg
jae
jle
xchg
iret
in
in
push
loope
test
mov
mov
add
mov
fistpl
jge,pt
outsb
fwait
lret
lods
jle
movsb
repz
mov
jo
mov
cmc
xor
push
xor
pushw
or
inc
popa
popf
and
mov
or
ret
shl
inc
call
xchg
pop
jecxz
pop
mov
test
dec
lods
push
mov
insb
inc
mov
movsl
jae
dec
and
sarl
daa
push
jg
out
mov
mov
inc
mov
fisubl
shrl
cmpsl
inc
pop
dec
cmp
sub
mul
jnp
pop
xor
add
mov
icebp
orl
mov
cmp
sub
fucomp
or
bound
outsb
and
es
cmp
es
imul
cltd
dec
shrb
pop
imul
add
pop
out
out
mov
xor
sub
lock
xchg
and
repz
jb
mov
dec
cmc
sub
outsl
and
scas
fadd
lods
les
add
jne
jl
and
inc
test
loope
mov
orb
stos
nop
dec
sbb
das
sti
pop
or
lret
sbb
negb
dec
jmp
dec
cmp
push
adc
jbe
dec
int3
and
pop
js
in
sub
cs
decl
cltd
in
cmc
fstl
ja
arpl
mov
add
pusha
in
lock
fldcw
sbb
dec
shll
or
mov
out
jg
fistps
scas
in
xor
push
mov
test
and
pop
nop
hlt
xor
inc
fwait
lods
sub
imul
shl
inc
xchg
hlt
pop
pop
jle
rclb
imul
cmp
enter
cld
data16
test
nop
cmc
shl
filds
iret
mov
sub
cld
cwtl
or
mov
push
push
or
pop
jge
subl
mov
inc
push
scas
testl
push
enter
cld
dec
add
sarb
sub
fbld
mov
mov
mov
aas
mov
aaa
imul
into
fsubrl
xor
stc
inc
xor
xlat
jmp
lock
cmpsl
xchg
loop
outsl
test
mov
sub
add
mov
lret
pmovmskb
add
fcom
std
dec
iret
je
negb
xor
cmp
das
cmp
int3
insb
iret
stos
sub
dec
into
xlat
aaa
cmpsl
push
js
push
popa
loope
cmp
mov
out
xor
push
sarb
dec
add
arpl
aas
sub
icebp
mov
jne
and
mov
dec
loopne
outsb
push
mov
adc
dec
jge
popa
fisttpll
cs
cwtl
adc
lret
pop
pop
addr16
xor
jecxz
aas
stos
cs
arpl
dec
sbb
loopne
mov
mov
fisubl
lahf
int
and
xor
outsl
filds
cmp
out
pusha
pop
sbb
jbe
jl
add
xor
and
jg
cmpl
and
mov
jl
xchg
jecxz
adc
stos
push
xchg
xlat
call
sahf
outsl
leave
sbb
ljmp
lret
cmp
sti
cmp
mov
loop
xchg
xchg
push
adc
in
push
xchg
cmp
push
push
arpl
outsb
test
mov
shlb
repz
and
fisubrl
in
push
dec
xchg
rolb
stos
mov
cld
inc
and
jmp
pushf
jl
bound
jmp
repnz
pushf
jp
xchg
mov
jmp
cmp
aad
fists
fisubs
pop
hlt
aad
push
into
or
movsb
jo
lret
push
and
cmc
hlt
sub
sbb
jmp
sbb
dec
data16
add
mov
int3
lods
ret
sahf
leave
dec
jle
xchg
sbb
iret
xor
mov
into
mov
ret
jmp
mov
mov
jb
adc
mov
aam
xchg
xor
mov
movsl
cmp
or
push
popa
adc
push
lret
inc
mov
dec
mov
bound
xchg
xchg
xor
cmp
push
dec
bound
sbb
lods
and
inc
lret
xor
pusha
testl
mov
std
mov
test
add
jmp
jmp
pop
add
mul
adc
pop
mov
adc
push
lods
push
push
xchg
jbe
mov
sti
cltd
daa
mov
xchg
lea
cmp
ljmp
popf
adc
pop
xchg
cmp
in
notl
xchg
jmp
inc
pop
cmp
mov
lock
mov
mov
push
mov
outsl
pop
sbb
fists
mov
stc
xchg
ds
mov
xchg
or
mov
rcll
insb
inc
cmc
imul
mov
lcall
fs
fnstcw
mov
sti
rorl
push
cmp
popa
int3
jno
mov
xor
xchg
js
push
sbb
dec
pushl
in
lods
jns
and
shlb
sbb
add
jp
or
loopne
add
jmp
and
inc
in
jp
mov
sbb
dec
repnz
jb
xor
cmc
fwait
out
sub
push
imul
pop
loop
inc
cmc
or
imul
rorl
inc
movsb
cwtl
xor
mov
notb
das
jmp
int
jnp
lcall
add
popa
clc
mov
int
sub
xlat
lds
out
sub
adc
int
xchg
mov
jb
xchg
shll
or
scas
push
jg
push
cmp
pushf
add
sahf
or
xor
jecxz
ljmp
sub
and
mov
cs
cmpsl
sbb
cmp
out
xor
dec
push
dec
sub
xor
test
idivb
mov
cmp
std
cmpsl
pop
push
adc
aad
mov
or
fisubrl
jns
mov
inc
push
pop
daa
dec
cmp
inc
cmp
mov
imul
stc
and
rol
cmp
andl
dec
orl
stc
mov
test
adc
jmp
xorb
shlb
adc
dec
xor
cmp
ss
xchg
mov
push
or
test
pop
jle
inc
dec
in
mov
insb
mov
popa
das
cmp
shl
jl
adc
jle
ss
fwait
sbb
sbb
sub
push
push
movsl
mov
je
dec
ds
cld
loopne
sbb
test
fiadds
outsb
dec
data16
cmp
dec
cld
mov
in
into
xor
movsb
ret
sub
ffree
jno
lds
ficompl
insl
add
cmp
mov
jg
pop
cmp
loopne
ficoms
or
jecxz
in
or
movsl
mov
cld
xlat
jbe
jo
gs
test
hlt
int
fwait
inc
xor
cmp
push
es
and
dec
mov
test
mov
add
sbb
rclb
xor
lahf
stc
or
xchg
xchg
xor
cs
fimull
call
loopne
lret
jp
sub
in
push
add
adc
pop
or
hlt
xor
pop
add
cli
dec
enter
adc
inc
add
stos
inc
rclb
test
rcrb
fdivrs
mov
xor
push
ljmp
mov
pusha
lret
je
dec
arpl
fmulp
imul
call
mov
das
mov
mov
jb
jne
xchg
in
inc
or
aas
sahf
or
mov
movsb
mov
fildll
insl
xchg
mov
mov
mov
sub
icebp
cmc
lds
pop
sbb
pushf
mov
in
ds
push
shll
fsubl
push
mov
mov
lret
pusha
pop
out
ret
inc
ss
clc
pop
sub
push
movsb
cwtl
add
test
pushf
push
sub
pop
mov
cltd
xor
pop
cmc
cwtl
xchg
add
mov
dec
add
jecxz
aaa
xorl
sti
cmpsl
lock
bound
pop
add
out
movsb
mov
jne
xchg
ss
pop
testb
jo
repnz
arpl
mov
loop
pop
mov
inc
inc
push
out
xchg
push
pop
xchg
in
mov
dec
jecxz
mov
push
and
aas
push
add
jg
and
icebp
jns
adc
pushf
xorl
hlt
push
call
bound
mov
in
mov
cmpsl
and
mov
fmuls
rorl
into
sti
leave
arpl
sub
into
gs
and
push
outsb
cmpsb
aad
xor
into
inc
mov
sub
mov
mov
adcb
ret
mov
cmp
add
sub
jp
adc
ljmp
sbb
in
mov
add
dec
mov
ficoms
cmp
loopne
cmp
lret
cmp
pop
repz
lret
bound
imul
sub
mov
lods
xor
push
fwait
inc
jno
sar
dec
fwait
xchg
push
filds
mov
aas
mov
mov
out
mov
out
inc
leave
and
fbld
lods
and
mov
sahf
sbb
push
test
icebp
jb
sbb
inc
in
push
sbb
push
mov
xchg
dec
adc
sbb
pmaddwd
std
sbb
movsb
dec
add
inc
and
in
add
aam
scas
mov
pop
xchg
into
xchg
enter
adc
in
enter
lahf
vmovups
and
push
stc
mov
push
push
das
jp
in
lods
cmp
call
mov
jp
repz
rcr
bnd
push
out
cld
cmpsb
test
into
imul
rcr
cltd
mov
mov
clc
fidivs
dec
inc
subl
and
mov
loop
jle
leave
stc
xor
int
sbb
sub
sbb
push
pop
xlat
xor
add
outsl
leave
fnstenv
ljmp
sti
jnp
aas
dec
jle
jne
out
mov
jmp
cmpsb
mov
dec
dec
cmpsb
fistpll
xchg
clc
push
pop
test
arpl
mov
imul
data16
rcll
es
clc
mov
mov
fdivrl
stos
aas
in
scas
outsb
mov
into
es
push
inc
je
repnz
mov
mov
shrl
and
jns
mov
lcall
fbld
and
xor
and
idivb
clc
jne
mov
or
outsb
or
push
jp
inc
xor
mov
lock
sbb
imulb
push
dec
lcall
inc
gs
xchg
jno
sbb
push
pushl
int
lcall
inc
inc
push
test
out
pop
jnp
cmp
push
adc
inc
enter
mov
popf
cli
push
insl
rcll
mov
out
xor
scas
mov
mov
add
test
and
daa
sub
push
jb
sbb
subl
xchg
lea
icebp
or
and
rorl
sbb
out
pop
cmpsl
or
out
xor
mov
loope
fucomi
fidivl
inc
pop
sti
repz
push
fs
decb
ud2
rorl
ret
shrb
mov
adc
or
fbstp
std
pop
push
hlt
lahf
pushf
xor
xor
or
sub
rcll
jbe
div
rcll
lods
push
jne
scas
and
xor
inc
mov
pop
pop
sbb
jb
ss
leave
js
pop
or
sbb
test
mov
cmp
jg
scas
push
jnp
fidivl
push
adc
fbstp
stos
jle
pop
and
fneni(8087
fildll
js
mov
pop
push
xchg
sub
pusha
imul
out
mov
push
cmp
ja
gs
and
or
imul
aas
and
iret
lock
jo
mov
add
mov
lret
out
ja
mov
pop
and
and
inc
outsl
ret
enter
push
lahf
inc
ficoms
imul
das
jecxz
mov
leave
int
mov
xchg
xchg
push
xchg
js
rcrb
jne
es
in
imul
scas
loopne
cmp
popf
mov
mov
icebp
xchg
movsl
pop
pop
fidivl
add
and
xor
sub
and
xchg
sbb
push
out
pop
dec
adc
cmc
mov
bound
lcall
pusha
mov
dec
jp
lahf
and
or
lahf
jo
aad
sub
test
pop
ficomps
fisttpll
loope
xchg
repz
sbb
mov
shl
mov
divb
sub
fldenv
inc
jg
dec
mov
push
xor
sbb
repnz
jo
rcrb
or
sub
add
lea
inc
mov
daa
js
cmp
rcrb
daa
pop
or
lahf
jge
mov
sahf
mov
aaa
popf
fdivrp
dec
dec
mov
jp
and
push
push
jle
out
xlat
cmp
test
and
mov
arpl
sub
jl
int
add
shll
dec
ja
cmp
mov
sbb
subb
add
lcall
repz
jge
jecxz
jo
in
fsubs
push
inc
das
lea
fnstcw
push
jg
aaa
pop
test
pop
popf
andb
dec
push
js
ss
test
bound
aam
sub
and
lcall
enter
subb
inc
push
int
xchg
sti
adc
addl
aad
jecxz
lods
shll
fbstp
xchg
inc
cli
mov
out
popf
inc
push
inc
push
push
js
je
jmp
out
dec
mov
cmpsl
mov
add
push
inc
ja
dec
mov
movsl
ljmp
es
loop
mov
adc
arpl
clc
xchg
movsb
outsb
mov
andb
or
icebp
lcall
push
insb
push
and
jbe
leave
mov
sub
jbe
fs
imul
push
inc
daa
pushf
jb
mov
push
cmpsb
into
arpl
inc
or
xchg
and
pop
xchg
add
clc
xor
inc
cmp
clc
mov
add
push
add
shlb
loopne
mov
lcall
out
imul
popf
insl
add
cli
push
and
jae
orb
sti
pop
xchg
adcl
in
sbb
inc
mulb
cmp
xor
aam
adc
sub
mov
int
sub
or
mov
push
xor
lcall
jae
xor
add
nop
dec
lahf
pop
xchg
jle
shrb
jmp
std
lds
push
jle
rcr
pop
sub
adc
test
pop
fidivl
mov
push
inc
or
hlt
incb
and
sbb
xor
and
xor
mov
andb
dec
mov
xchg
pop
xchg
ret
shrb
das
aaa
aam
push
arpl
push
push
bound
lret
outsb
je
sub
mulb
push
push
stos
loopne
test
mov
jae
mov
arpl
cmpsb
jp
sbb
ret
mov
jmp
inc
pop
pop
xchg
jo
sub
popf
cmpsb
xlat
add
sbb
sbb
jb
mov
cmc
push
inc
jg
movsl
push
mov
lahf
sbb
iret
lret
push
call
imul
xchg
dec
xor
dec
mov
push
hlt
sahf
xchg
adc
rcrl
xor
iret
pop
addr16
xchg
lret
fcmovnbe
imul
dec
pop
xor
popa
mov
rorb
or
js
scas
push
xor
mov
fwait
sbb
out
jae
adcl
out
setl
insb
sbb
outsl
fsubrp
ljmpw
sub
and
inc
vpshad
loopne
adc
jmp
les
insb
insl
test
inc
outsb
and
mov
ret
mov
pop
aad
xchg
or
or
outsl
sbb
jmpw
stos
cmc
fwait
cld
sub
testl
or
or
lret
dec
pop
xor
jns
dec
add
add
cmp
test
dec
ss
nop
and
cli
inc
cs
imul
pop
mov
stc
pop
and
jne
inc
xchg
push
insl
inc
fdivr
add
push
push
pop
cld
xchg
push
jnp
push
ret
xor
adc
scas
out
jae
push
iret
clc
push
mov
pop
out
fdivl
lea
dec
and
xchg
pusha
or
jae
scas
mov
shr
add
ret
test
cmp
xlat
arpl
push
sbb
jbe
xor
lcall
dec
into
out
rorl
push
scas
loope
add
cmpsb
xchg
sti
dec
jecxz
scas
clc
andl
sahf
pop
or
out
in
xchg
xor
imul
inc
pop
js
xor
push
jecxz
xchg
fnstcw
jne
adc
dec
aad
pop
das
popa
int
cmp
and
mov
das
lret
movsl
add
or
repnz
jae
sub
dec
lahf
xor
sub
ret
add
hlt
mov
daa
mov
add
imul
cwtl
mov
call
xlat
cli
inc
and
push
adc
nop
xor
mov
push
push
push
sub
sbb
or
or
sbb
cmpsl
dec
cmp
cmp
push
rorb
rolb
xchg
dec
jmp
insl
dec
and
mov
jne
ljmp
dec
insl
fidivrs
into
shll
shl
stos
cmp
imul
jecxz
bound
fisubs
mov
jns
addr16
mov
fdiv
call
loop
push
xor
int3
sub
adc
xchg
pop
fisttpll
rorl
inc
inc
push
sub
adc
xchg
sbb
dec
xchg
in
enter
or
jge
rol
dec
stos
cmp
movsl
mov
nop
mov
icebp
leave
xor
les
jo
imul
scas
mov
and
int
sub
push
push
lret
cld
lds
icebp
pop
mov
mov
test
add
pop
imul
aad
je
jecxz
mov
add
outsb
cmp
les
xchg
out
int
xchg
pop
push
pop
xor
fs
movsl
lods
jno
jmp
icebp
test
mov
inc
sub
test
jns
cmp
loope
mov
arpl
pop
aad
dec
dec
sbb
push
adc
mov
inc
test
lds
mov
mov
mov
push
imul
push
rcl
ret
mov
mov
inc
jle
xchg
mov
insl
cltd
or
jne
das
imul
adc
sbb
mov
push
idiv
or
sbb
in
xchg
mov
mov
cmp
and
mov
adc
mov
enter
mov
pop
adc
push
jmp
aaa
andl
in
fwait
pop
daa
arpl
out
sbb
and
mov
clc
fistl
sbb
jo
mov
ror
jmp
mov
and
add
dec
push
push
imul
mov
xchg
clc
inc
cmp
mov
jl,pt
push
mov
rcrl
dec
js
pop
sbb
mov
mov
gs
sbb
ret
mov
push
add
pop
dec
dec
int3
jns
or
xor
xlat
sub
movsb
pop
in
or
and
cltd
popa
cltd
add
adc
xchg
mov
sub
in
mov
jb
or
lcall
mov
add
add
sbb
pop
rorb
xor
xor
mov
or
ljmp
out
mov
pop
inc
lods
mov
adc
test
sbb
add
cmp
sbb
popf
sbb
popf
xor
inc
into
cmp
cmp
push
inc
and
loope
jb
dec
cmc
xchg
cltd
test
sbb
jae
and
xor
lret
push
mov
imul
add
pop
add
mov
adc
ret
cmp
sbb
cmp
adc
sbb
push
xor
out
sub
inc
lret
scas
call
and
pusha
jmp
aam
popf
in
lahf
sbb
mov
mov
lds
ret
adc
pop
jp
jp
lods
rcll
fwait
sti
sbb
fimuls
and
pop
stc
push
or
cwtl
cli
push
and
or
jmp
pop
ss
inc
cmp
in
push
xor
jnp
shrb
push
sub
movsb
mov
divb
xor
xchg
jns
nop
push
es
leave
shlb
sub
ds
jl
idivl
call
scas
outsb
or
cmp
pop
jmp
mov
pop
dec
cltd
jne
adc
push
lds
out
mov
divl
push
add
mov
call
fstl
jb
shrl
or
test
mov
add
mov
sarl
jo
mov
addr16
mov
in
rclb
dec
push
jno
es
cmpsl
mov
jns
mov
mov
pop
arpl
movb
xchg
xchg
push
outsl
push
adc
sub
mov
sub
jmp
pushf
into
and
pop
jecxz
dec
arpl
data16
add
xor
adc
mov
shrb
or
xchg
cmp
push
mov
in
push
leave
cmpsl
lret
cmp
stos
and
push
mov
aas
push
mov
aas
aam
lahf
xchg
lods
imul
or
or
arpl
pop
outsb
xchg
adc
iret
data16
les
jg
push
call
dec
test
fstl
fistps
ds
jmp
inc
add
push
imul
mov
and
in
lods
xchg
and
stos
sbb
add
jle
ds
and
imul
sbb
mov
sti
sub
mov
mov
mov
imul
sub
add
pop
pop
test
or
xchg
cld
repz
lods
xor
mov
push
mov
in
ja
lcall
and
mov
inc
pop
mov
in
stos
pop
clc
dec
pop
fstl
call
fstpl
dec
add
lods
int
fsubs
js
test
jns
iret
mov
test
mov
fnsave
je
jecxz
scas
std
xchg
out
scas
js
in
test
cwtl
inc
cli
lea
xchg
call
jg
pop
push
lcall
mov
lret
jo
xor
inc
inc
xor
aas
out
push
pop
shr
add
mov
les
sub
lret
sub
lahf
adc
xor
orl
mov
xchg
jbe
inc
out
and
mov
int
lods
shrb
add
aas
mov
pusha
insl
mov
sbb
not
sbb
pop
sbb
rep
xchg
cmp
dec
into
jp
cli
movsl
out
cld
mov
fldpi
into
cmp
aam
sub
push
in
push
inc
push
pusha
ret
jbe
shr
inc
mov
decl
outsb
shlb
mov
and
dec
frstor
mov
inc
cmp
push
stos
into
xor
pop
add
inc
mov
in
pop
and
and
enter
inc
loopne
jno
repnz
xchg
retw
movsb
pop
push
lcall
mov
lds
mov
scas
outsb
lret
pop
in
add
mov
icebp
aas
pushf
enter
cmpsb
pop
add
pushf
cltd
inc
inc
mov
cmp
in
icebp
dec
and
das
in
jo
icebp
xor
mov
test
pop
fists
aas
in
jns
pop
adc
arpl
ljmp
dec
mov
fdivrs
in
cmpsl
pushf
std
pop
jns
xchg
mov
lea
xor
push
ljmp
cmpsb
int3
xor
shrb
lret
int3
repnz
mov
inc
arpl
cmp
sbb
sub
enter
in
fwait
repnz
xor
rcl
dec
es
jbe
or
scas
ja
push
movsb
xchg
cmp
icebp
outsb
jl
push
push
jae
movsl
lods
xor
mov
data16
ja
hlt
or
push
fcmovb
add
into
notb
mov
mov
std
jl
and
data16
add
testl
jo
les
mov
inc
xchg
cmpsb
add
push
mov
xchg
add
xchg
cmpsb
sub
arpl
push
outsl
fs
out
xor
jmp
shrl
shll
mov
out
push
inc
clc
mov
enter
push
pop
pop
ja
sahf
loop
add
cmp
testl
jge
or
test
repz
inc
cmpsl
sub
mov
shlb
int3
dec
aad
mov
fxch
cltd
and
cld
add
jnp
inc
es
aaa
ficomps
jg
les
mov
scas
aas
dec
adc
xchg
clc
adc
rorl
pop
aas
mov
movsb
jns
daa
push
push
pop
fisttps
aas
inc
jmp
ror
leave
adc
out
add
dec
inc
and
or
clc
sub
xchg
pop
push
ficoms
loop
mov
enter
xlat
pop
nop
inc
dec
add
test
in
out
out
aas
xchg
out
data16
movsb
fstpl
and
adc
xor
fwait
mov
cltd
test
aas
test
fiadds
inc
and
xchg
adc
mov
jb
lret
sub
xor
shlb
sub
or
mov
shll
subl
push
scas
sti
mov
lods
pop
in
clc
imul
add
mov
jp
mov
mov
inc
pop
pushf
cld
andl
clc
or
dec
mov
stos
outsb
dec
fistpll
daa
xlat
arpl
cwtl
push
push
testl
icebp
mov
xor
popa
lret
xor
fisubrs
int3
mov
jns
in
adc
add
out
in
sahf
test
stos
xchg
jne
inc
and
das
jge
fs
lods
jno
jle
pop
push
mov
or
gs
cltd
cmpsl
cmp
outsl
push
fisubs
lock
push
xor
jp
enter
inc
outsl
xor
les
xchg
inc
mov
push
pop
inc
enter
push
clc
jo
xor
int
sbb
les
jp
mov
and
nop
cmpsb
ret
test
jp
or
mov
nop
jecxz
add
pop
stos
mov
enter
stos
push
loop
mov
push
dec
insl
or
mov
ja
xchg
mov
je
mov
jle
sub
fimull
push
addr16
stos
sahf
repnz
jg
movsl
stc
and
xchg
js
repz
aad
mov
test
out
arpl
ret
sahf
leave
fcomps
fwait
enter
ret
xchg
jg
int
push
push
scas
in
or
pop
jmp
ret
aad
bound
sarb
shll
lock
cmp
jns
mov
cltd
jmp
fstpt
jecxz
in
into
jecxz
push
and
hlt
xorl
mov
fstl
cmc
add
sahf
xchg
adc
inc
or
mov
and
sbb
inc
call
add
jno
jl
aam
sahf
xor
js
mov
sub
ret
or
jb
pop
je
call
cmp
outsl
inc
es
xor
das
les
out
push
xchg
mov
dec
fnstcw
mov
pop
dec
xlat
test
sti
andb
xchg
mov
inc
mov
or
pop
mov
mov
out
in
pusha
pushl
les
pop
aam
mov
insb
lea
dec
cmpsl
movsb
pop
jl
daa
call
push
aam
divb
stos
add
mov
int
xrelease
dec
fnstcw
inc
fidivrl
jle
xchg
iret
pop
shr
loopne
mov
push
imul
cmp
fisubrl
loop
lods
aam
divb
fdivrl
adc
push
dec
call
fldl
jl
int
push
cltd
testl
data16
jo
sbb
int
jge
and
xchg
ds
mov
inc
mov
and
outsl
hlt
out
cld
pop
add
jnp
mov
jo
cs
cmp
shll
rol
roll
sub
jae
cmp
int
xlat
mov
jge
rol
xchg
inc
adc
test
dec
mov
mov
xchg
pusha
gs
cmp
loope
lcall
inc
cmp
ret
add
je
fidivrs
sub
divl
addr16
pop
orb
ja
adc
fidivrl
lds
outsb
jge
adc
aad
pop
shrl
nop
stos
lock
and
in
or
repnz
mov
out
dec
call
inc
sbb
and
adc
cli
mov
and
sbb
pushl
in
dec
aam
xchg
pop
popa
jb
cmpsb
sub
std
push
mov
imul
xor
notb
add
addb
jl
inc
lret
popa
cwtl
hlt
inc
rclb
jl
or
enter
push
dec
xor
and
dec
mov
push
outsl
shl
orl
test
test
fucomp
cmpl
xor
cmpps
sub
into
mov
jne
clc
aad
jne
das
mov
pop
loope
adc
mov
jns
fdivl
out
xor
iret
es
icebp
and
push
push
insl
enter
xchg
stos
dec
and
push
daa
push
add
iret
shll
mov
les
dec
adc
sub
sub
xchg
inc
mov
sbb
cmp
push
or
test
jne
mov
xor
pop
cmpsb
sahf
aam
fimuls
sbb
pusha
dec
mov
and
mov
jle,pn
add
aas
pop
icebp
lock
mov
push
sub
sub
jbe
cmp
push
ds
and
cs
cmpsb
cmp
mov
mov
addr16
and
int3
shlb
xchg
or
dec
mov
cmp
mov
and
sub
cli
test
shrl
add
subl
sub
cwtl
add
inc
sahf
in
ja
fxch
xchg
shlb
imul
inc
and
popf
insl
xchg
push
mov
ds
mov
add
fstpt
and
sbb
xchg
cltd
pop
add
pusha
xor
dec
daa
mov
mov
inc
mov
outsb
push
xrelease
dec
cmp
sub
or
jmp
outsl
push
inc
idivl
or
push
or
mov
into
mov
insl
rcrl
movsw
mov
out
inc
cmp
loope
mov
gs
in
adc
aas
jl
cmpsl
lret
cld
push
xor
and
cs
mov
leave
lock
jecxz
outsb
jge
push
inc
xor
mov
call
mov
dec
dec
push
xchg
mov
loope
or
or
inc
in
sbb
cmp
lcall
and
lock
jns
xor
bound
sti
add
mov
insl
repz
lcall
insb
or
fistps
js
outsl
or
and
jg
adc
add
mov
jmp
push
cli
mov
into
shll
mov
inc
out
cli
xor
imul
ficoms
sahf
jns
bound
mov
cmp
xor
insl
or
dec
push
daa
fs
mov
xorl
jb
pop
mov
sbb
movsl
out
push
add
cli
fxch
movsl
sbbl
or
mov
push
add
aaa
mov
jmp
adc
insb
jbe
push
jne,pt
mov
cmp
lret
mov
sbb
mov
xlat
xchg
imul
test
repz
clc
outsb
cwtl
push
mov
inc
imul
ja
mov
orb
push
scas
push
xlat
negb
inc
pop
jl
aaa
adc
std
int
or
or
shll
mov
mov
lods
mov
call
mov
clc
ret
fbld
mov
aaa
mov
inc
fisubl
push
inc
aam
push
add
xchg
sbb
call
xchg
mov
lods
rcll
imul
mov
movsl
cwtl
fcompp
jecxz
and
inc
pop
mov
into
insl
adc
cmc
fidivl
cltd
adc
les
cwtl
js
movsl
in
push
push
mov
in
cmc
push
test
fstps
add
push
data16
shrb
sbb
dec
mov
mov
xor
loope
pop
pusha
dec
sub
push
lods
mov
ret
add
dec
or
cmp
adc
test
mov
out
sbb
leave
dec
pop
add
cld
in
inc
add
or
jne
xor
loopne
movsl
das
lds
pop
push
or
rorb
mov
inc
pop
leave
hlt
jns
in
popa
es
lret
fdivs
out
dec
xor
dec
insb
stos
xchg
ljmp
not
jg,pn
pop
pop
lret
push
mov
inc
pop
clc
loope
jg
imul
scas
testl
pop
mov
sahf
int3
cmp
in
inc
mov
cmp
jno
mov
cwtl
pop
outsl
scas
aam
jge
mov
lea
push
mov
cwtl
push
popf
mov
aad
adc
ror
adc
les
js
out
mov
sbbb
cwtl
outsb
cltd
fwait
pop
gs
jecxz
pop
lock
in
xchg
pop
bound
fmuls
mov
call
mov
lcall
test
push
sahf
mov
inc
xlat
ja
pop
xchg
jp
int3
shl
outsb
loop
sbb
and
dec
push
xor
fdivrl
cmp
add
mov
adc
cs
out
sub
cld
aaa
dec
mov
dec
leave
stc
adc
ja
out
imul
mov
pop
movsb
xor
mov
scas
insl
xchg
sbb
nop
in
test
shlb
cmp
fs
jae
insl
push
and
jae
push
insb
or
adc
loop
cmp
cmc
push
xor
jo
xchg
insl
sub
insl
cmp
add
scas
sbb
pop
mov
inc
and
jl
dec
ss
aad
cs
dec
xor
sub
mov
pop
inc
pop
sbb
add
inc
and
adc
inc
push
daa
push
sub
xor
mov
mov
xor
iret
loope
les
cmp
dec
cld
addr16
jb
cmp
sub
sbb
push
in
fidivl
icebp
mov
cmp
xlat
mov
in
mov
lods
pop
cltd
ss
rcll
test
stos
es
movsl
xor
mov
sub
fwait
outsb
mov
fs
gs
push
sbb
and
xchg
aam
adc
sbb
pop
or
aam
jle
stos
jbe
ds
pop
mov
call
mov
pushf
lods
cmp
jmp
pusha
mov
cmp
rcl
cltd
imul
stc
mov
cmpsb
sub
cmp
gs
stos
in
test
and
dec
lds
xor
nop
aam
jae
jecxz
mov
ja
or
push
test
outsl
dec
adc
mov
cmp
cmp
iret
int3
jne
mov
sbb
inc
sahf
mov
xchg
cld
push
loope
push
cmp
pusha
aad
pop
mov
loop
adc
jne
hlt
mov
pop
test
xor
add
jmp
mov
iret
int
bound
push
cmp
lcall
in
xor
xchg
add
or
andb
mov
movsl
pop
cmp
inc
push
push
xor
dec
repz
repnz
mov
in
daa
out
lds
push
outsl
xorb
pushf
je
sub
jle
hlt
les
jg
add
mov
and
jg
stos
insl
bound
fbld
dec
dec
hlt
sbb
mov
ja
negb
addr16
mov
aam
inc
push
daa
pop
jno
adc
out
jnp
push
clc
inc
inc
lods
popa
adc
daa
arpl
movsb
icebp
shll
push
xchg
sub
jl
push
rolb
cmpsl
shlb
dec
xchg
or
dec
sbb
inc
gs
sahf
inc
bound
stos
jb
dec
fcoms
rcl
jecxz,pt
xchg
xor
dec
add
jne
xchg
js
pop
pop
in
cmp
lcall
adc
or
cld
call
gs
addr16
loope
xor
shlb
lods
out
pop
pop
sub
fsub
mov
clc
and
push
pusha
mov
repz
stc
daa
andb
gs
push
cld
inc
or
leave
jmp
cld
aaa
popa
in
cli
pop
rcll
arpl
js
push
addr16
inc
cmp
enter
iret
sbb
fsubrs
and
push
sti
hlt
int3
jo
stos
jb
lods
test
fwait
mov
sbb
push
out
fbstp
cmpsb
xchg
inc
das
cmpsl
jnp
mov
lret
push
call
mov
adc
mov
pop
mov
jmp
xor
cmpl
sub
outsb
ret
ds
xchg
popa
mov
push
inc
push
hlt
mov
or
dec
sbb
xchg
aad
mov
inc
jl
js
fdiv
jp
jno
shr
add
arpl
dec
inc
shll
es
dec
sub
out
sub
mov
xor
cmp
inc
mov
aad
mov
movsb
fmul
int3
sub
lods
repz
fwait
dec
cmovb
and
push
out
sbb
scas
mov
add
les
push
jp
fstpt
mov
mov
shl
mov
mov
in
cltd
xchg
mov
add
lret
push
es
or
adc
lods
push
movsb
sbb
pop
imul
enter
xchg
xlat
xlat
hlt
pop
lds
scas
je
add
sbb
subl
movb
rcrl
negl
adc
mov
add
jmp
jg
shll
pop
cli
test
cld
mov
jns
scas
js
sbb
push
mov
in
movsb
inc
pop
pop
dec
or
mov
sbb
lods
cld
or
sub
aam
push
out
sub
push
cmpsb
fcmove
mov
nop
nop
clc
or
das
mov
loopne
and
jbe
and
dec
loop
or
or
frstor
jp
mov
in
movsl
and
sub
enter
push
lahf
add
arpl
pop
loope
iret
test
faddl
lea
adc
inc
xchg
inc
icebp
int
ds
arpl
andl
jno
fwait
sbb
sub
push
std
leave
in
das
mov
mov
unpcklps
xchg
mov
mov
inc
icebp
shl
xchg
lods
pop
dec
push
and
cwtl
fs
push
push
aas
cmpsb
movsb
ficoml
in
stos
push
jno
enter
imul
mov
stos
adc
lock
pop
or
mov
loopne
push
or
jl
ds
xlat
push
popa
mov
mov
mov
jmp
out
xchg
push
sbb
xor
in
or
sub
mov
inc
lock
jmp
push
xor
inc
mov
sbb
sbb
lock
inc
adc
add
jp
in
test
imul
testl
add
add
aas
adc
outsb
cmpsb
pop
xchg
cmp
leave
bound
cwtl
jne
jns
stos
xor
mul
mov
and
xchg
rcll
inc
cmp
push
pop
mov
fnstenv
mov
or
jns
cli
nop
insb
pushf
iret
enter
xchg
cltd
pop
outsb
mull
jb
repz
iret
jns
int3
lock
add
icebp
adc
pop
scas
lcall
and
loop
fmull
adc
in
adc
jo
mov
std
inc
iret
adc
inc
cli
scas
push
sbb
sbb
pusha
cmp
and
mov
stos
stos
xchg
sub
ljmp
xchg
scas
ret
scas
lock
pop
inc
addr16
cltd
ds
and
mov
aaa
loopne
aad
add
mov
xchg
pop
sub
sub
cmpsb
inc
jb
xchg
xchg
mov
imul
lods
cmpsl
ja
mov
and
pop
mov
gs
jp
shl
xchg
pop
push
mov
jp
jo
mov
push
mov
mov
xor
sbbb
daa
outsb
mov
dec
sbb
mov
pop
std
ret
aas
inc
jecxz
mov
xor
repz
imul
lods
xor
es
adc
icebp
jns
pushf
cltd
pop
stos
inc
jno
push
clc
and
mov
ficoms
andl
sub
fmull
je
ja
and
stos
jns
ljmp
or
cmc
push
sbb
dec
pop
jae
push
pop
inc
inc
cld
jl
inc
out
lcall
adc
sub
pop
lahf
mov
xor
je
rcrb
and
xchg
cmpsl
pop
fxch
lock
xor
sbb
push
push
scas
or
fldenv
xchg
mov
sbb
push
inc
add
inc
sub
into
icebp
jge
add
pop
add
or
shlb
mov
jnp
fdivl
enter
cs
std
cmp
lret
xchg
into
mov
cmp
clc
lock
repnz
test
fbstp
pop
inc
and
test
and
ljmp
gs
jle
pop
mov
push
je
gs
cs
mov
stos
pop
xor
dec
fdivp
jge
adc
imul
jbe
pop
shl
sub
inc
stos
pop
jb
loop
out
je
xor
out
aas
out
xor
sbb
jnp
cwtl
scas
sub
mov
jnp
jg
push
inc
push
cmp
loope
sbbb
test
adc
xchg
sbbl
test
daa
sub
ret
or
inc
sar
add
cmp
mov
das
ds
scas
mov
je
mov
inc
push
in
das
ds
test
inc
jle
enter
jno
cltd
test
sub
adc
aaa
sub
cld
push
int3
jecxz
xchg
push
adc
andl
scas
or
hlt
mov
push
insl
jb
int
push
mov
pop
insb
in
sub
xlat
xor
leave
rolb
mov
lds
mov
or
fnstsw
pushf
stc
sbb
decl
hlt
pop
test
data16
cmpl
push
sbb
push
stc
sub
enter
jle
js
sub
add
add
xchg
cmp
sub
xchg
mov
jb
cmc
sub
and
fstpt
inc
push
pop
sub
pop
jnp
lods
sub
lods
mov
inc
lret
leave
jl
mov
repnz
mov
in
cmp
incl
insb
fs
xor
mov
nop
jmp
xor
xchg
fisubs
xchg
scas
jmp
pusha
adc
inc
mov
loop
pop
adc
mov
mov
pop
nop
or
loopne
pop
nopl
lret
shll
mov
mov
or
sub
jb
sbb
jo
add
and
mov
cmp
and
mov
mov
pop
mov
sbb
clc
stos
imul
in
mov
imul
xchg
xchg
jb
in
std
adc
push
jle
mov
jecxz
pop
add
inc
cmp
divb
mov
mov
repz
cli
push
pop
outsb
outsb
jecxz
push
xchg
push
mov
sub
sub
imul
xor
or
shrl
fstpt
and
stc
and
mov
out
stos
lds
stc
lret
mov
lret
nop
mov
ret
xchg
push
loope
fstps
addr16
outsl
daa
pop
cs
mov
dec
int
mov
and
cmp
lea
adc
sti
jge
fistpll
sub
jno
insb
cmovs
xor
mov
add
push
cmp
data16
rcrb
jge
jecxz
push
cmp
pop
xor
repz
loop
stc
push
mov
lods
in
fs
scas
jmp
mov
or
icebp
test
bound
add
clc
test
push
sub
subl
sub
mov
mov
xchg
push
aam
inc
inc
add
sub
jp
test
mov
add
jbe
ds
cmpsl
sbb
pusha
in
sbb
iret
leave
jecxz
cmp
mov
push
cmp
movsb
xchg
jnp
sahf
out
out
xchg
inc
int
in
and
sub
sub
pop
sub
add
jae
fsts
scas
xchg
pop
test
stc
jo
cwtl
push
mov
das
scas
sbb
pop
sub
shll
das
sub
xchg
mov
test
je
outsl
andl
clc
divb
sbb
in
popf
je
jne
aad
dec
add
aaa
lods
add
loopne
pop
cwtl
xlat
sub
xchg
lods
jmp
push
insb
add
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
nop
nop
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
pop
pop
add
cwtl
pop
add
add
add
add
add
add
nop
add
orb
add
add
add
add
orb
add
or
add
xor
add
pop
add
addb
add
addb
addb
add
test
add
rolb
add
clc
add
addb
add
and
add
dec
add
addb
add
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
add
add
add
cmp
add
cmp
cmp
add
pusha
add
cmp
add
mov
cmp
add
mov
add
fadds
xor
add
add
add
sub
add
push
add
add
js
add
mov
add
add
add
add
lock
add
sbb
add
inc
push
add
push
add
add
add
add
add
add
push
add
or
add
xor
add
add
add
or
add
add
xor
add
or
add
imul
add
add
add
add
add
add
add
add
xor
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
fsubrl
add
add
or
add
add
adc
add
add
or
add
jo
add
add
or
add
add
add
add
xor
add
or
add
add
add
add
or
add
add
add
jae
add
add
or
add
add
add
add
or
add
add
dec
jbe
add
add
or
add
ja
add
add
or
add
js
add
add
or
add
add
add
jns
add
add
or
add
add
add
jnp
add
add
or
add
add
add
add
add
or
add
add
cmpb
xor
add
or
add
add
mov
add
xor
add
or
add
jg
add
add
or
add
add
add
add
xor
add
or
add
add
add
add
xor
add
or
add
add
add
xor
add
or
add
add
mov
add
add
add
add
add
add
add
in
test
add
add
or
add
xchg
add
add
or
add
mov
add
add
or
add
add
add
xor
add
or
add
push
add
mov
add
add
add
add
add
add
push
add
lock
add
add
or
add
add
and
add
xor
add
or
add
mov
add
add
or
add
popl
add
add
or
add
push
add
rclb
add
add
add
add
add
push
add
hlt
xchg
add
xor
add
or
add
pop
add
sub
add
or
add
add
pop
xchg
add
xor
add
add
add
jo
add
add
add
or
add
xlat
add
mov
add
add
add
add
add
add
add
add
pop
add
xor
add
nop
xchg
add
xchg
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
hlt
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
outsl
add
add
popa
add
add
add
inc
add
sub
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
add
popa
add
add
sub
add
add
insb
add
outsl
add
jns
jb
imul
je
add
test
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
ja
outsl
add
add
popa
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
imul
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
scas
add
add
add
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
sbb
add
add
add
add
loopne
add
and
add
cld
fildl
add
add
add
add
cmp
add
or
add
inc
faddl
add
add
faddl
add
add
sbb
add
add
add
add
mov
add
add
add
lret
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
push
inc
imul
gs
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
add
jns
je
inc
push
inc
gs
popa
je
je
jb
outsb
outsw
